Type: System.Globalization.GregorianCalendarHelper

Method: System.Int32 get_MaxYear()

Disassembly:
	0x033378FC ADD X31, X31, 0x30
	0x03337900 RET

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void .ctor(System.Globalization.Calendar cal, System.Globalization.EraInfo[] eraInfo)

Disassembly:
	0x03337904 BL 0x1C16F28
	0x03337908 BL 0x1C16F20
	0x0333790C STR X30, [X31 - 0x20]!
	0x03337910 STP X20, X19, [X31 + 0x10]
	0x03337914 ADRP X20, 0x10A5000
	0x03337918 LDRB W8, [X20 + 0xCFE]
	0x0333791C MOV X19, X0
	0x03337920 TBNZ X8, 0x0, 0x3337938
	0x03337924 ADRP X0, 0xDBD000
	0x03337928 LDR X0, [X0 + 0xE58]
	0x0333792C BL 0x1C16CF4
	0x03337930 MOVZ W8, 0x1
	0x03337934 STRB W8, [X20 + 0xCFE]
	0x03337938 ADRP X20, 0xDBD000
	0x0333793C LDR X0, [X19 + 0x28]
	0x03337940 LDR X20, [X20 + 0xE58]
	0x03337944 CBNZ X0, 0x33379B8
	0x03337948 LDR X8, [X19 + 0x20]
	0x0333794C CBZ X8, 0x33379E8
	0x03337950 LDR X0, [X20]
	0x03337954 LDR W1, [X8 + 0x18]
	0x03337958 BL 0x1C16D6C
	0x0333795C LDR X8, [X19 + 0x20]
	0x03337960 STR X0, [X19 + 0x28]
	0x03337964 CBZ X8, 0x33379E8
	0x03337968 LDR W9, [X8 + 0x18]
	0x0333796C CMP W9, 0x1
	0x03337970 B.LT 0x33379B8
	0x03337974 MOV W10, W31
	0x03337978 CMP W10, W9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move W8, 0x270F
	007 Move X1, X31
	008 Move X21, X2
	009 Move X19, X0
	010 Move [X0+16], W8
	011 Call Object..ctor, X0
	012 Move [X19+24], X20
	013 Move [X19+32], X21
	014 Compare X20, 0
	015 JumpIfEqual {39}
	016 Move X8, [X20]
	017 Move X0, X20
	018 Move X9, [X8+392]
	019 Move X1, [X8+400]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move X8, [X19+32]
	022 Move [X19+48], X0
	023 Compare X8, 0
	024 JumpIfEqual {39}
	025 Move W9, [X8+24]
	026 Compare W9, 0
	027 JumpIfEqual {40}
	028 Move X8, [X8+32]
	029 Compare X8, 0
	030 JumpIfEqual {39}
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	033 Move [X19+16], D0
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return 
	039 Call 0x1C17F20
	040 Call 0x1C17F28

Method: System.Int32 GetYearOffset(System.Int32 year, System.Int32 era, System.Boolean throwOnError)

Disassembly:
	0x0333797C B.CS 0x33379EC
	0x03337980 SXTW X10, W10
	0x03337984 ADD X11, X8, X10, 0x3, LSL
	0x03337988 LDR X11, [X11 + 0x20]
	0x0333798C CBZ X11, 0x33379E8
	0x03337990 CBZ X0, 0x33379E8
	0x03337994 LDR W12, [X0 + 0x18]
	0x03337998 CMP W10, W12
	0x0333799C B.CS 0x33379EC
	0x033379A0 LDR W11, [X11 + 0x10]
	0x033379A4 ADD X12, X0, X10, 0x2, LSL
	0x033379A8 ADD W10, W10, 0x1
	0x033379AC CMP W10, W9
	0x033379B0 STR W11, [X12 + 0x20]
	0x033379B4 B.LT 0x3337978
	0x033379B8 CBZ X0, 0x33379E8
	0x033379BC MOV X1, X31
	0x033379C0 BL 0x33A01F0
	0x033379C4 CBZ X0, 0x33379DC
	0x033379C8 LDR X20, [X20]
	0x033379CC MOV X19, X0
	0x033379D0 MOV X1, X20
	0x033379D4 BL 0x1C16E00
	0x033379D8 CBZ X0, 0x33379F0
	0x033379DC LDP X20, X19, [X31 + 0x10]
	0x033379E0 LDR X30, [X31], #0x20
	0x033379E4 RET
	0x033379E8 BL 0x1C16F20
	0x033379EC BL 0x1C16F28
	0x033379F0 MOV X0, X19
	0x033379F4 MOV X1, X20
	0x033379F8 BL 0x1C171E0
	0x033379FC SUB X31, X31, 0x30
	0x03337A00 STP X30, X21, [X31 + 0x10]
	0x03337A04 STP X20, X19, [X31 + 0x20]
	0x03337A08 ADRP X20, 0x10A5000
	0x03337A0C STR X1, [X31 + 0x8]
	0x03337A10 ADRP X21, 0xDBD000
	0x03337A14 LDRB W8, [X20 + 0xCFF]
	0x03337A18 LDR X21, [X21 + 0x9F0]
	0x03337A1C MOV X19, X0
	0x03337A20 TBNZ X8, 0x0, 0x3337A38
	0x03337A24 ADRP X0, 0xDBD000
	0x03337A28 LDR X0, [X0 + 0x9F0]
	0x03337A2C BL 0x1C16CF4
	0x03337A30 MOVZ W8, 0x1
	0x03337A34 STRB W8, [X20 + 0xCFF]
	0x03337A38 LDR X0, [X21]
	0x03337A3C LDR W8, [X0 + 0xE0]
	0x03337A40 CBNZ W8, 0x3337A48
	0x03337A44 BL 0x1C16DFC
	0x03337A48 ADD X0, X31, 0x8
	0x03337A4C MOV X1, X31
	0x03337A50 BL 0x3361708
	0x03337A54 LDR X8, [X19]
	0x03337A58 MOV X1, X0
	0x03337A5C MOVZ W2, 0x2
	0x03337A60 MOV X0, X19
	0x03337A64 LDP X9, X3, [X8 + 0x178]
	0x03337A68 BLR X9
	0x03337A6C LDP X20, X19, [X31 + 0x20]
	0x03337A70 LDP X30, X21, [X31 + 0x10]
	0x03337A74 ADD X31, X31, 0x30
	0x03337A78 RET
	0x03337A7C STR X30, [X31 - 0x10]!
	0x03337A80 MOVZ W3, 0x1
	0x03337A84 BL 0x333697C
	0x03337A88 MOVZ W0, 0xC
	0x03337A8C LDR X30, [X31], #0x10
	0x03337A90 RET
	0x03337A94 SUB X31, X31, 0x30
	0x03337A98 STP X30, X21, [X31 + 0x10]
	0x03337A9C STP X20, X19, [X31 + 0x20]
	0x03337AA0 ADRP X20, 0x10A5000
	0x03337AA4 STR X1, [X31 + 0x8]
	0x03337AA8 ADRP X21, 0xDBD000
	0x03337AAC LDRB W8, [X20 + 0xD00]
	0x03337AB0 LDR X21, [X21 + 0x9F0]
	0x03337AB4 MOV X19, X0
	0x03337AB8 TBNZ X8, 0x0, 0x3337AD0
	0x03337ABC ADRP X0, 0xDBD000
	0x03337AC0 LDR X0, [X0 + 0x9F0]
	0x03337AC4 BL 0x1C16CF4
	0x03337AC8 MOVZ W8, 0x1
	0x03337ACC STRB W8, [X20 + 0xD00]
	0x03337AD0 LDR X0, [X21]
	0x03337AD4 LDR W8, [X0 + 0xE0]
	0x03337AD8 CBNZ W8, 0x3337AE0
	0x03337ADC BL 0x1C16DFC
	0x03337AE0 ADD X0, X31, 0x8
	0x03337AE4 MOV X1, X31
	0x03337AE8 BL 0x3361708
	0x03337AEC LDR X8, [X19]
	0x03337AF0 MOV X20, X0
	0x03337AF4 MOV X0, X19
	0x03337AF8 MOV X1, X20
	0x03337AFC LDP X9, X3, [X8 + 0x178]
	0x03337B00 MOV W2, W31
	0x03337B04 BLR X9
	0x03337B08 LDR X8, [X19 + 0x20]
	0x03337B0C CBZ X8, 0x3337BB8
	0x03337B10 LDR W9, [X8 + 0x18]
	0x03337B14 CMP W9, 0x1
	0x03337B18 B.LT 0x3337B4C
	0x03337B1C MOV W10, W31
	0x03337B20 CMP W10, W9
	0x03337B24 B.CS 0x3337BB4
	0x03337B28 ADD X11, X8, W10, 0x3, SXTW
	0x03337B2C LDR X11, [X11 + 0x20]
	0x03337B30 CBZ X11, 0x3337BB8
	0x03337B34 LDR X12, [X11 + 0x18]
	0x03337B38 CMP X20, X12
	0x03337B3C B.GE 0x3337B9C
	0x03337B40 ADD W10, W10, 0x1
	0x03337B44 CMP W10, W9
	0x03337B48 B.LT 0x3337B20
	0x03337B4C ADRP X0, 0xDF1000
	0x03337B50 LDR X0, [X0 + 0x958]
	0x03337B54 BL 0x1C16D08
	0x03337B58 MOV X1, X31
	0x03337B5C BL 0x33BDD84
	0x03337B60 MOV X19, X0
	0x03337B64 ADRP X0, 0xDC4000
	0x03337B68 LDR X0, [X0 + 0x578]
	0x03337B6C BL 0x1C16D08
	0x03337B70 BL 0x1C16F10
	0x03337B74 MOV X1, X19
	0x03337B78 MOV X2, X31
	0x03337B7C MOV X20, X0
	0x03337B80 BL 0x3314A68
	0x03337B84 ADRP X0, 0xDF1000
	0x03337B88 LDR X0, [X0 + 0x960]
	0x03337B8C BL 0x1C16D08
	0x03337B90 MOV X1, X0
	0x03337B94 MOV X0, X20
	0x03337B98 BL 0x1C16DEC
	0x03337B9C LDR W8, [X11 + 0x20]
	0x03337BA0 LDP X20, X19, [X31 + 0x20]
	0x03337BA4 LDP X30, X21, [X31 + 0x10]
	0x03337BA8 SUB W0, W0, W8
	0x03337BAC ADD X31, X31, 0x30
	0x03337BB0 RET
	0x03337BB4 BL 0x1C16F28
	0x03337BB8 BL 0x1C16F20
	0x03337BBC STP X30, X19, [X31 - 0x10]!
	0x03337BC0 MOVZ W3, 0x1
	0x03337BC4 MOV W19, W1
	0x03337BC8 BL 0x333697C
	0x03337BCC ADD W8, W0, W19
	0x03337BD0 ANDS W31, W8, 0x3
	0x03337BD4 B.EQ 0x3337BE0
	0x03337BD8 MOV W0, W31
	0x03337BDC B 0x3337C24
	0x03337BE0 MOVZ W9, 0x5C29
	0x03337BE4 MOVZ W10, 0xB850
	0x03337BE8 MOVK W9, 0xC28F0000
	0x03337BEC MOVK W10, 0x51E0000
	0x03337BF0 MADD W8, W8, W9, W10
	0x03337BF4 MOVZ W10, 0x5C28
	0x03337BF8 EXTR W9, W8, W8, 0x2
	0x03337BFC MOVK W10, 0x28F0000
	0x03337C00 CMP W9, W10
	0x03337C04 B.LS 0x3337C10
	0x03337C08 MOVZ W0, 0x1
	0x03337C0C B 0x3337C24
	0x03337C10 MOVZ W9, 0xD70B
	0x03337C14 EXTR W8, W8, W8, 0x4
	0x03337C18 MOVK W9, 0xA30000
	0x03337C1C CMP W8, W9
	0x03337C20 CSET W0, CC
	0x03337C24 LDP X30, X19, [X31], #0x10
	0x03337C28 RET
	0x03337C2C SUB X31, X31, 0x70
	0x03337C30 STP X29, X30, [X31 + 0x10]
	0x03337C34 STP X28, X27, [X31 + 0x20]
	0x03337C38 STP X26, X25, [X31 + 0x30]
	0x03337C3C STP X24, X23, [X31 + 0x40]
	0x03337C40 STP X22, X21, [X31 + 0x50]
	0x03337C44 STP X20, X19, [X31 + 0x60]
	0x03337C48 ADRP X29, 0x10A5000
	0x03337C4C ADRP X28, 0xDF0000
	0x03337C50 LDRB W8, [X29 + 0xD01]
	0x03337C54 LDR W27, [X31 + 0x70]
	0x03337C58 LDR X28, [X28 + 0xBB8]
	0x03337C5C MOV W19, W7
	0x03337C60 MOV W21, W6

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x10A6000
	009 Move W8, [X23+3316]
	010 Move W20, W3
	011 Move W22, W2
	012 Move W21, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xDED000
	019 Move X0, [X0+2912]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+3316], W8
	023 Move TEMP, X21
	024 And TEMP, TEMP, -2147483648
	025 Compare TEMP, -2147483648
	026 JumpIfEqual {68}
	027 Compare W22, 0
	028 JumpIfNotEqual {37}
	029 Move X0, [X19+24]
	030 Compare X0, 0
	031 JumpIfEqual {133}
	032 Move X8, [X0]
	033 Move X9, [X8+472]
	034 Move X1, [X8+480]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move W22, W0
	037 Move X8, [X19+32]
	038 Compare X8, 0
	039 JumpIfEqual {133}
	040 Move X9, [X8+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W10, W31
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X11, W10
	045 Add X12, X8, X11
	046 Move X12, [X12+32]
	047 Compare X12, 0
	048 JumpIfEqual {133}
	049 Move W13, [X12+16]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add W10, W10, 1
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move TEMP, X20
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {110}
	057 Move X0, 0xDC5000
	058 Move X0, [X0+1888]
	059 Call 0x1C17D08
	060 Call 0x1C17F10
	061 Move X19, X0
	062 Move X0, 0xDF2000
	063 Move X0, [X0+832]
	064 Call 0x1C17D08
	065 Move X20, X0
	066 Move X0, 0xDF2000
	067 Move X0, [X0+840]
	068 Move TEMP, X20
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {110}
	072 Move X0, 0xDC5000
	073 Move X0, [X0+1888]
	074 Call 0x1C17D08
	075 Call 0x1C17F10
	076 Move X19, X0
	077 Move X0, 0xDF2000
	078 Move X0, [X0+1448]
	079 Call 0x1C17D08
	080 Move X20, X0
	081 Move X0, 0xDE5000
	082 Move X0, [X0+1648]
	083 Call 0x1C17D08
	084 Move X2, X0
	085 Move X0, X19
	086 Move X1, X20
	087 Move X3, X31
	088 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	089 Move X0, 0xDF2000
	090 Move X0, [X0+2328]
	091 Call 0x1C17D08
	092 Move X1, X0
	093 Move X0, X19
	094 Call 0x1C17DEC
	095 Move W13, [X12+36]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move W14, [X12+40]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X13, 0xDED000
	100 Move X13, [X13+2912]
	101 Move X13, [X13]
	102 Move X13, [X13+184]
	103 Move W13, [X13+1]
	104 Compare W13, 0
	105 JumpIfEqual {121}
	106 Move TEMP, X20
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfEqual {135}
	110 Move TEMP, 0
	111 Not TEMP
	112 Move W0, TEMP
	113 Move X20, [X31+48]
	114 Move X19, [X31+56]
	115 Move X22, [X31+32]
	116 Move X21, [X31+40]
	117 Move X30, [X31+16]
	118 Move X23, [X31+24]
	119 Add X31, X31, 64
	120 Return X0
	121 Subtract W13, W10, 1
	122 Subtract W14, W21, W14
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Subtract W10, W10, 1
	125 Add X15, X8, W10
	126 Move X15, [X15+32]
	127 Compare X15, 0
	128 JumpIfEqual {133}
	129 Move W15, [X15+40]
	130 Subtract W14, W14, W15
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move W0, [X12+32]
	133 Call 0x1C17F20
	134 Call 0x1C17F28
	135 Move X0, 0xDBF000
	136 Move X0, [X0+3144]
	137 Move X20, X11
	138 Call 0x1C17D08
	139 Call 0x19913D0
	140 Move X0, X31
	141 Call CultureInfo.get_CurrentCulture
	142 Move X21, [X19+32]
	143 Move X22, X0
	144 Move X0, X21
	145 Call 0x19913C0
	146 Move X0, X21
	147 Move X1, X20
	148 Call 0x1BB6160
	149 Move X21, X0
	150 Call 0x19913C0
	151 Move W8, [X21+36]
	152 Move X21, 0xDBD000
	153 Move [X31+12], W8
	154 Move X21, [X21+1880]
	155 Move X0, X21
	156 Call 0x1C17D08
	157 Add X1, X31, 12
	158 Call 0x1C17E04
	159 Move X19, [X19+32]
	160 Move X23, X0
	161 Move X0, X19
	162 Call 0x19913C0
	163 Move X0, X19
	164 Move X1, X20
	165 Call 0x1BB6160
	166 Move X19, X0
	167 Call 0x19913C0
	168 Move W8, [X19+40]
	169 Move X0, X21
	170 Move [X31+8], W8
	171 Call 0x1C17D08
	172 Add X1, X31, 8
	173 Call 0x1C17E04
	174 Move X19, X0
	175 Move X0, 0xDEC000
	176 Move X0, [X0+880]
	177 Call 0x1C17D08
	178 Move X1, X0
	179 Move X0, X22
	180 Move X2, X23
	181 Move X3, X19
	182 Move X4, X31
	183 Call String.Format, X0, X1, X2, X3
	184 Move X19, X0
	185 Move X0, 0xDC5000
	186 Move X0, [X0+1888]
	187 Call 0x1C17D08
	188 Call 0x1C17F10
	189 Move X20, X0
	190 Move X0, 0xDF2000
	191 Move X0, [X0+1448]
	192 Call 0x1C17D08
	193 Move X1, X0
	194 Move X0, X20
	195 Move X2, X19
	196 Move X3, X31
	197 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	198 Move X0, 0xDF2000
	199 Move X0, [X0+2328]
	200 Call 0x1C17D08
	201 Move X1, X0
	202 Move X0, X20
	203 Call 0x1C17DEC

Method: System.Int32 GetGregorianYear(System.Int32 year, System.Int32 era)

Disassembly:
	0x03337C64 MOV W22, W5
	0x03337C68 MOV W23, W4
	0x03337C6C MOV W24, W3
	0x03337C70 MOV W25, W2
	0x03337C74 MOV W26, W1
	0x03337C78 MOV X20, X0
	0x03337C7C TBNZ X8, 0x0, 0x3337C94

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W3, 1
	004 Move W19, W1
	005 Call GregorianCalendarHelper.GetYearOffset, X0, X1, X2, X3
	006 Add W0, W0, W19
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0

Method: System.Boolean IsValidYear(System.Int32 year, System.Int32 era)

Disassembly:
	0x03337C80 ADRP X0, 0xDF0000
	0x03337C84 LDR X0, [X0 + 0xBB8]
	0x03337C88 BL 0x1C16CF4
	0x03337C8C MOVZ W8, 0x1
	0x03337C90 STRB W8, [X29 + 0xD01]
	0x03337C94 MOVZ W3, 0x1
	0x03337C98 MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Move W3, W31
	003 Call GregorianCalendarHelper.GetYearOffset, X0, X1, X2, X3
	004 NotImplemented "Instruction ORN not yet implemented."
	005 Move W0, W8
	006 ShiftRight W0, 31
	007 And W0, W0, 0x7FFFFFFF
	008 Move X30, [X31+16]
	009 Return X0

Method: System.Int32 GetDatePart(System.Int64 ticks, System.Int32 part)

Disassembly:
	0x03337C9C MOV W1, W26
	0x03337CA0 MOV W2, W27
	0x03337CA4 BL 0x333697C
	0x03337CA8 LDR X8, [X28]
	0x03337CAC MOV W27, W0
	0x03337CB0 LDR W9, [X8 + 0xE0]
	0x03337CB4 CBNZ W9, 0x3337CC0
	0x03337CB8 MOV X0, X8
	0x03337CBC BL 0x1C16DFC
	0x03337CC0 ADD W0, W27, W26
	0x03337CC4 MOV W1, W25
	0x03337CC8 MOV W2, W24
	0x03337CCC BL 0x3337280
	0x03337CD0 MOV X24, X0
	0x03337CD4 MOV W0, W23
	0x03337CD8 MOV W1, W22
	0x03337CDC MOV W2, W21
	0x03337CE0 MOV W3, W19
	0x03337CE4 BL 0x3337300
	0x03337CE8 ADD X19, X0, X24
	0x03337CEC MOV X0, X20
	0x03337CF0 MOV X1, X19
	0x03337CF4 BL 0x3336EAC
	0x03337CF8 ADD X0, X31, 0x8
	0x03337CFC MOV X1, X19
	0x03337D00 MOV X2, X31
	0x03337D04 STR X31, [X31 + 0x8]
	0x03337D08 BL 0x335EEB0
	0x03337D0C LDR X0, [X31 + 0x8]
	0x03337D10 LDP X20, X19, [X31 + 0x60]
	0x03337D14 LDP X22, X21, [X31 + 0x50]
	0x03337D18 LDP X24, X23, [X31 + 0x40]
	0x03337D1C LDP X26, X25, [X31 + 0x30]
	0x03337D20 LDP X28, X27, [X31 + 0x20]
	0x03337D24 LDP X29, X30, [X31 + 0x10]
	0x03337D28 ADD X31, X31, 0x70
	0x03337D2C RET
	0x03337D30 SUB X31, X31, 0x40
	0x03337D34 STP X30, X23, [X31 + 0x10]
	0x03337D38 STP X22, X21, [X31 + 0x20]
	0x03337D3C STP X20, X19, [X31 + 0x30]
	0x03337D40 TBNZ X1, 0x1F, 0x3337E50
	0x03337D44 CMP W1, 0x63
	0x03337D48 B.LE 0x3337DF8
	0x03337D4C LDR W8, [X0 + 0x14]
	0x03337D50 CMP W8, W1
	0x03337D54 B.GT 0x3337D64
	0x03337D58 LDR W8, [X0 + 0x10]
	0x03337D5C CMP W8, W1
	0x03337D60 B.GE 0x3337E38
	0x03337D64 ADRP X8, 0xDBE000
	0x03337D68 LDR X8, [X8 + 0xC48]
	0x03337D6C MOV X23, X0
	0x03337D70 MOV X0, X8
	0x03337D74 BL 0x1C16D08
	0x03337D78 BL 0x19903D0
	0x03337D7C MOV X0, X31
	0x03337D80 BL 0x33387A0
	0x03337D84 MOV X19, X0
	0x03337D88 ADRP X0, 0xDEB000
	0x03337D8C LDR X0, [X0 + 0x370]
	0x03337D90 BL 0x1C16D08
	0x03337D94 MOV X1, X31
	0x03337D98 BL 0x33BDD84
	0x03337D9C LDR W8, [X23 + 0x14]
	0x03337DA0 ADRP X21, 0xDBC000
	0x03337DA4 MOV X20, X0
	0x03337DA8 STR W8, [X31 + 0xC]
	0x03337DAC LDR X21, [X21 + 0x758]
	0x03337DB0 MOV X0, X21
	0x03337DB4 BL 0x1C16D08
	0x03337DB8 ADD X1, X31, 0xC
	0x03337DBC BL 0x1C16E04
	0x03337DC0 LDR W8, [X23 + 0x10]
	0x03337DC4 MOV X22, X0
	0x03337DC8 MOV X0, X21
	0x03337DCC STR W8, [X31 + 0x8]
	0x03337DD0 BL 0x1C16D08
	0x03337DD4 ADD X1, X31, 0x8
	0x03337DD8 BL 0x1C16E04
	0x03337DDC MOV X3, X0
	0x03337DE0 MOV X0, X19
	0x03337DE4 MOV X1, X20
	0x03337DE8 MOV X2, X22
	0x03337DEC MOV X4, X31
	0x03337DF0 BL 0x3227D58
	0x03337DF4 B 0x3337E64
	0x03337DF8 MOVZ W9, 0x851F
	0x03337DFC AND W8, W1, 0xFF
	0x03337E00 MOVK W9, 0x51EB0000
	0x03337E04 UMADDL X11, X8, X9, X31
	0x03337E08 SMADDL X9, X2, X9, X31
	0x03337E0C UBFM X12, X9, 0x3F, 0x3F
	0x03337E10 SBFM X9, X9, 0x25, 0x3F
	0x03337E14 MOVZ W10, 0x64
	0x03337E18 UBFM X11, X11, 0x25, 0x3F
	0x03337E1C ADD W9, W9, W12
	0x03337E20 MSUB W8, W11, W10, W8
	0x03337E24 MSUB W11, W9, W10, W2
	0x03337E28 CMP W11, W8
	0x03337E2C CSET W11, LT
	0x03337E30 SUB W9, W9, W11
	0x03337E34 MADD W1, W9, W10, W8
	0x03337E38 LDP X20, X19, [X31 + 0x30]
	0x03337E3C LDP X22, X21, [X31 + 0x20]
	0x03337E40 LDP X30, X23, [X31 + 0x10]
	0x03337E44 MOV W0, W1
	0x03337E48 ADD X31, X31, 0x40
	0x03337E4C RET
	0x03337E50 ADRP X0, 0xDEF000
	0x03337E54 LDR X0, [X0 + 0xD28]
	0x03337E58 BL 0x1C16D08
	0x03337E5C MOV X1, X31
	0x03337E60 BL 0x33BDD84
	0x03337E64 MOV X19, X0
	0x03337E68 ADRP X0, 0xDC4000
	0x03337E6C LDR X0, [X0 + 0x760]
	0x03337E70 BL 0x1C16D08
	0x03337E74 BL 0x1C16F10
	0x03337E78 MOV X20, X0
	0x03337E7C ADRP X0, 0xDF1000
	0x03337E80 LDR X0, [X0 + 0x5A8]
	0x03337E84 BL 0x1C16D08
	0x03337E88 MOV X1, X0
	0x03337E8C MOV X0, X20
	0x03337E90 MOV X2, X19
	0x03337E94 MOV X3, X31
	0x03337E98 BL 0x3311888
	0x03337E9C ADRP X0, 0xDF1000
	0x03337EA0 LDR X0, [X0 + 0x968]
	0x03337EA4 BL 0x1C16D08
	0x03337EA8 MOV X1, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x10A6000
	007 Move W8, [X22+3317]
	008 Move W19, W2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xDF1000
	016 Move X0, [X0+3000]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3317], W8
	020 Move X0, X21
	021 Move X1, X20
	022 Call GregorianCalendarHelper.CheckTicksRange, X0, X1
	023 Move X8, 0x81E3
	024 NotImplemented "Instruction MOVK not yet implemented."
	025 NotImplemented "Instruction MOVK not yet implemented."
	026 NotImplemented "Instruction MOVK not yet implemented."
	027 NotImplemented "Instruction SMULH not yet implemented."
	028 Add X8, X8, X20
	029 Move W9, 1725
	030 NotImplemented "Instruction SBFM not yet implemented."
	031 NotImplemented "Instruction MOVK not yet implemented."
	032 Add X8, X10, X8
	033 Multiply X9, X8, X9
	034 Move W11, 0xC54F
	035 Move X10, X9
	036 ShiftRight X10, 32
	037 And X10, X10, 0x7FFFFFFF
	038 Move X9, X9
	039 ShiftRight X9, 63
	040 And X9, X9, 0x7FFFFFFF
	041 NotImplemented "Instruction MOVK not yet implemented."
	042 Add W10, W9, W10
	043 NotImplemented "Instruction MADD not yet implemented."
	044 Move W12, 0x81FB
	045 Add W8, W9, W11
	046 NotImplemented "Instruction MOVK not yet implemented."
	047 Move W13, 0x8EAC
	048 Add W8, W8, 1
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction SMADDL not yet implemented."
	051 Move X8, X8
	052 ShiftRight X8, 32
	053 And X8, X8, 0x7FFFFFFF
	054 Add W8, W8, W9
	055 NotImplemented "Instruction SBFM not yet implemented."
	056 Move W14, 3
	057 Add W8, W12, W8
	058 Move TEMP, 0x8EAB
	059 Not TEMP
	060 Move W15, TEMP
	061 Move W16, 0xB073
	062 NotImplemented "Instruction CSEL not yet implemented."
	063 NotImplemented "Instruction MOVK not yet implemented."
	064 NotImplemented "Instruction MADD not yet implemented."
	065 NotImplemented "Instruction SMADDL not yet implemented."
	066 Move X13, X12
	067 ShiftRight X13, 32
	068 And X13, X13, 0x7FFFFFFF
	069 Move X12, X12
	070 ShiftRight X12, 63
	071 And X12, X12, 0x7FFFFFFF
	072 Move TEMP, 1460
	073 Not TEMP
	074 Move W11, TEMP
	075 Move W17, 0xF9B1
	076 Add W12, W12, W13
	077 NotImplemented "Instruction MOVK not yet implemented."
	078 NotImplemented "Instruction MADD not yet implemented."
	079 NotImplemented "Instruction SMADDL not yet implemented."
	080 Move X11, X11
	081 ShiftRight X11, 32
	082 And X11, X11, 0x7FFFFFFF
	083 Add W11, W11, W13
	084 NotImplemented "Instruction SBFM not yet implemented."
	085 Add W11, W15, W11
	086 Subtract W15, W13, 1460
	087 NotImplemented "Instruction CMP not yet implemented."
	088 NotImplemented "Instruction CSEL not yet implemented."
	089 Compare W19, 0
	090 JumpIfEqual {97}
	091 Move TEMP, 364
	092 Not TEMP
	093 Move W10, TEMP
	094 NotImplemented "Instruction CMP not yet implemented."
	095 NotImplemented "Instruction MADD not yet implemented."
	096 Add W0, W20, 1
	097 Move W9, 400
	098 Multiply W9, W10, W9
	099 Move W10, 100
	100 Or W9, W9, 1
	101 NotImplemented "Instruction MADD not yet implemented."
	102 Add W8, W8, W12
	103 Add W0, W8, W11
	104 Move X22, 0xDF1000
	105 Move X22, [X22+3000]
	106 Move TEMP, 0x88F7
	107 Not TEMP
	108 Move W10, TEMP
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Add W9, W9, W10
	111 Move X0, [X22]
	112 NotImplemented "Instruction CSET not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 NotImplemented "Instruction CSET not yet implemented."
	115 Move W10, [X0+224]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 NotImplemented "Instruction CSET not yet implemented."
	118 And W8, W8, W9
	119 Or W21, W8, W11
	120 Compare W10, 0
	121 JumpIfNotEqual {124}
	122 Call 0x1C17DFC
	123 Move X0, [X22]
	124 Move X8, [X0+184]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Add X9, X8, 8
	127 NotImplemented "Instruction CSEL not yet implemented."
	128 Move X8, [X8]
	129 Compare X8, 0
	130 JumpIfEqual {154}
	131 Move W9, [X8+24]
	132 NotImplemented "Instruction SBFM not yet implemented."
	133 NotImplemented "Instruction CMP not yet implemented."
	134 NotImplemented "Instruction CSEL not yet implemented."
	135 Add X11, X8, W0
	136 Move W11, [X11+32]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Add W0, W0, 1
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Call 0x1C17F28
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Subtract W10, W0, 1
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Add X8, X8, W10
	145 Move W8, [X8+32]
	146 Subtract W8, W20, W8
	147 Add W0, W8, 1
	148 Move X20, [X31+32]
	149 Move X19, [X31+40]
	150 Move X22, [X31+16]
	151 Move X21, [X31+24]
	152 Move X30, [X31+48]
	153 Return X0
	154 Call 0x1C17F20

Method: System.Int64 GetAbsoluteDate(System.Int32 year, System.Int32 month, System.Int32 day)

Disassembly:
	0x03338090 STP X20, X19, [X31 + 0x10]
	0x03338094 ADRP X20, 0x10A4000
	0x03338098 ADRP X19, 0xDF0000
	0x0333809C LDRB W8, [X20 + 0xD07]
	0x033380A0 LDR X19, [X19 + 0x970]
	0x033380A4 TBNZ X8, 0x0, 0x33380BC
	0x033380A8 ADRP X0, 0xDF0000
	0x033380AC LDR X0, [X0 + 0x970]
	0x033380B0 BL 0x1C16CF4
	0x033380B4 MOVZ W8, 0x1
	0x033380B8 STRB W8, [X20 + 0xD07]
	0x033380BC LDR X0, [X19]
	0x033380C0 LDR W8, [X0 + 0xE0]
	0x033380C4 CBNZ W8, 0x33380D0
	0x033380C8 BL 0x1C16DFC
	0x033380CC LDR X0, [X19]
	0x033380D0 LDR X8, [X0 + 0xB8]
	0x033380D4 LDP X20, X19, [X31 + 0x10]
	0x033380D8 LDR X0, [X8 + 0x10]
	0x033380DC LDR X30, [X31], #0x20
	0x033380E0 RET
	0x033380E4 STR X30, [X31 - 0x20]!
	0x033380E8 STP X20, X19, [X31 + 0x10]
	0x033380EC ADRP X20, 0x10A4000
	0x033380F0 ADRP X19, 0xDF0000
	0x033380F4 LDRB W8, [X20 + 0xD08]
	0x033380F8 LDR X19, [X19 + 0x970]
	0x033380FC TBNZ X8, 0x0, 0x3338114
	0x03338100 ADRP X0, 0xDF0000
	0x03338104 LDR X0, [X0 + 0x970]
	0x03338108 BL 0x1C16CF4
	0x0333810C MOVZ W8, 0x1
	0x03338110 STRB W8, [X20 + 0xD08]
	0x03338114 LDR X0, [X19]
	0x03338118 LDR W8, [X0 + 0xE0]
	0x0333811C CBNZ W8, 0x3338128
	0x03338120 BL 0x1C16DFC
	0x03338124 LDR X0, [X19]
	0x03338128 LDR X8, [X0 + 0xB8]
	0x0333812C LDP X20, X19, [X31 + 0x10]
	0x03338130 LDR X0, [X8 + 0x18]
	0x03338134 LDR X30, [X31], #0x20
	0x03338138 RET
	0x0333813C MOVZ W8, 0x80000000
	0x03338140 MOV X1, X31
	0x03338144 STR W8, [X0 + 0x1C]
	0x03338148 B 0x3332DC0
	0x0333814C MOVZ W0, 0x6
	0x03338150 RET
	0x03338154 STR X30, [X31 - 0x40]!
	0x03338158 STP X24, X23, [X31 + 0x10]
	0x0333815C STP X22, X21, [X31 + 0x20]
	0x03338160 STP X20, X19, [X31 + 0x30]
	0x03338164 ADRP X24, 0x10A4000
	0x03338168 ADRP X23, 0xDF0000
	0x0333816C LDRB W8, [X24 + 0xD09]
	0x03338170 LDR X23, [X23 + 0x970]
	0x03338174 MOV W19, W3
	0x03338178 MOV W21, W2
	0x0333817C MOV W22, W1
	0x03338180 MOV X20, X0
	0x03338184 TBNZ X8, 0x0, 0x333819C
	0x03338188 ADRP X0, 0xDF0000
	0x0333818C LDR X0, [X0 + 0x970]
	0x03338190 BL 0x1C16CF4
	0x03338194 MOVZ W8, 0x1
	0x03338198 STRB W8, [X24 + 0xD09]
	0x0333819C MOV X0, X20
	0x033381A0 MOV W1, W22
	0x033381A4 BL 0x333821C
	0x033381A8 LDR X8, [X23]
	0x033381AC MOV X22, X0
	0x033381B0 LDR W9, [X8 + 0xE0]
	0x033381B4 CBNZ W9, 0x33381C4
	0x033381B8 MOV X0, X8
	0x033381BC BL 0x1C16DFC
	0x033381C0 LDR X8, [X23]
	0x033381C4 LDR X8, [X8 + 0xB8]
	0x033381C8 LDR X8, [X8 + 0x8]
	0x033381CC CBZ X8, 0x3338214
	0x033381D0 LDR W10, [X8 + 0x18]
	0x033381D4 SUB W9, W21, 0x1
	0x033381D8 CMP W9, W10
	0x033381DC B.CS 0x3338218
	0x033381E0 ADD X8, X8, W9, 0x2, SXTW
	0x033381E4 LDRSW X21, [X8 + 0x20]
	0x033381E8 MOV X0, X20
	0x033381EC BL 0x33382D8
	0x033381F0 ADD X9, X22, W19, SXTW
	0x033381F4 ADD X9, X9, X21
	0x033381F8 LDP X20, X19, [X31 + 0x30]
	0x033381FC LDP X22, X21, [X31 + 0x20]
	0x03338200 LDP X24, X23, [X31 + 0x10]
	0x03338204 ORN W8, W31, W0, 0x0
	0x03338208 ADD X0, X9, W8, SXTW
	0x0333820C LDR X30, [X31], #0x40
	0x03338210 RET
	0x03338214 BL 0x1C16F20
	0x03338218 BL 0x1C16F28
	0x0333821C STR X30, [X31 - 0x30]!
	0x03338220 STP X22, X21, [X31 + 0x10]
	0x03338224 STP X20, X19, [X31 + 0x20]
	0x03338228 MOVZ W9, 0x8889
	0x0333822C SUB W8, W1, 0x1
	0x03338230 MOVK W9, 0x88880000
	0x03338234 SMADDL X9, X8, X9, X31
	0x03338238 UBFM X9, X9, 0x20, 0x3F
	0x0333823C ADD W8, W9, W8
	0x03338240 SBFM W9, W8, 0x4, 0x1F
	0x03338244 MOVZ W10, 0x1E
	0x03338248 ADD W8, W9, W8, 0x1F, LSR
	0x0333824C MUL W8, W8, W10
	0x03338250 MOVZ W11, 0x2987
	0x03338254 ORR X9, X31, 0x8888888888888888
	0x03338258 ORN W10, W31, W8, 0x0
	0x0333825C MOVK X9, 0x8889
	0x03338260 ADD W20, W10, W1
	0x03338264 SMADDL X10, X8, X11, X31
	0x03338268 SMULH X9, X10, X9, X31
	0x0333826C SMADDL X8, X8, X11, X9
	0x03338270 MOVZ W10, 0x76C5
	0x03338274 SBFM X9, X8, 0x4, 0x3F
	0x03338278 MOVK W10, 0x30000
	0x0333827C ADD X8, X9, X8, 0x3F, LSR

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x10A5000
	009 Move W8, [X22+3318]
	010 Move W19, W2
	011 Move W20, W1
	012 Move W21, W0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xDF0000
	018 Move X0, [X0+3000]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+3318], W8
	022 Subtract W22, W21, 1
	023 Move W8, 0x270E
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Subtract W23, W20, 1
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X24, 0xDF0000
	028 Move X24, [X24+3000]
	029 And W31, W21, 3
	030 Move W9, 0x5C29
	031 And W8, W21, 0xFFFF
	032 NotImplemented "Instruction MOVK not yet implemented."
	033 Multiply W9, W8, W9
	034 Move W10, 0x5C28
	035 NotImplemented "Instruction EXTR not yet implemented."
	036 NotImplemented "Instruction MOVK not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W9, 0x851F
	039 NotImplemented "Instruction MOVK not yet implemented."
	040 NotImplemented "Instruction UMADDL not yet implemented."
	041 Move X9, X9
	042 ShiftRight X9, 39
	043 And X9, X9, 0x7FFFFFFF
	044 Move W10, 400
	045 NotImplemented "Instruction MSUB not yet implemented."
	046 And W31, W8, 0xFFFF
	047 Move X0, [X24]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1C17DFC
	052 Move X0, [X24]
	053 Move X8, [X0+184]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X8, [X8]
	056 Compare X8, 0
	057 JumpIfEqual {138}
	058 Move W9, [X8+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add X8, X8, 32
	062 Move W9, [X8]
	063 Move W8, [X8]
	064 Subtract W9, W9, W8
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction SXTH not yet implemented."
	067 Move W11, 0x7AE1
	068 Move W12, 0x851F
	069 NotImplemented "Instruction MOVK not yet implemented."
	070 NotImplemented "Instruction MOVK not yet implemented."
	071 Move W13, W10
	072 ShiftRight W13, 29
	073 And W13, W13, 0x3FFFFFFF
	074 Move W9, 365
	075 NotImplemented "Instruction SMADDL not yet implemented."
	076 NotImplemented "Instruction SMADDL not yet implemented."
	077 Add W12, W22, W13
	078 Move X13, X11
	079 ShiftRight X13, 63
	080 And X13, X13, 0x7FFFFFFF
	081 Move X11, X11
	082 ShiftRight X11, 37
	083 And X11, X11, 0x7FFFFFFF
	084 NotImplemented "Instruction SXTH not yet implemented."
	085 NotImplemented "Instruction MADD not yet implemented."
	086 Add W11, W11, W13
	087 Move X13, X10
	088 ShiftRight X13, 63
	089 And X13, X13, 0x7FFFFFFF
	090 Move X10, X10
	091 ShiftRight X10, 39
	092 And X10, X10, 0x7FFFFFFF
	093 Add W9, W9, W12
	094 Add W10, W10, W13
	095 Add W9, W9, W11
	096 Add W9, W9, W10
	097 Move X20, [X31+48]
	098 Move X19, [X31+56]
	099 Move X22, [X31+32]
	100 Move X21, [X31+40]
	101 Move X24, [X31+16]
	102 Move X23, [X31+24]
	103 Add W8, W9, W8
	104 Subtract W8, W8, 1
	105 Move X0, W8
	106 Move X30, [X31+64]
	107 Return X0
	108 Move X0, [X24]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {114}
	112 Call 0x1C17DFC
	113 Move X0, [X24]
	114 Move X8, [X0+184]
	115 Add X8, X8, 8
	116 Move X0, 0xDF1000
	117 Move X0, [X0+2232]
	118 Call 0x1C17D08
	119 Move X1, X31
	120 Call Environment.GetResourceString, X0
	121 Move X19, X0
	122 Move X0, 0xDC4000
	123 Move X0, [X0+1888]
	124 Call 0x1C17D08
	125 Call 0x1C17F10
	126 Move X1, X31
	127 Move X2, X19
	128 Move X3, X31
	129 Move X20, X0
	130 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	131 Move X0, 0xDF1000
	132 Move X0, [X0+2352]
	133 Call 0x1C17D08
	134 Move X1, X0
	135 Move X0, X20
	136 Call 0x1C17DEC
	137 Call 0x1C17F28
	138 Call 0x1C17F20

Method: System.Int64 DateToTicks(System.Int32 year, System.Int32 month, System.Int32 day)

Disassembly:
	0x03338280 CMP W20, 0x1
	0x03338284 ADD X21, X8, X10
	0x03338288 B.LT 0x33382C4
	0x0333828C MOV X19, X0
	0x03338290 MOVZ W22, 0x162
	0x03338294 LDR X8, [X19]
	0x03338298 MOV X0, X19
	0x0333829C MOV W1, W20
	0x033382A0 MOV W2, W31
	0x033382A4 LDR X9, [X8 + 0x288]
	0x033382A8 LDR X3, [X8 + 0x290]
	0x033382AC BLR X9
	0x033382B0 ANDS W31, W0, 0x1
	0x033382B4 CINC X8, X22, NE
	0x033382B8 SUBS W20, W20, 0x1
	0x033382BC ADD X21, X8, X21
	0x033382C0 B.GT 0x3338294
	0x033382C4 MOV X0, X21
	0x033382C8 LDP X20, X19, [X31 + 0x20]
	0x033382CC LDP X22, X21, [X31 + 0x10]
	0x033382D0 LDR X30, [X31], #0x30
	0x033382D4 RET
	0x033382D8 STR X30, [X31 - 0x20]!
	0x033382DC STP X20, X19, [X31 + 0x10]
	0x033382E0 ADRP X20, 0x10A4000
	0x033382E4 LDRB W8, [X20 + 0xD0A]
	0x033382E8 MOV X19, X0
	0x033382EC TBNZ X8, 0x0, 0x3338304
	0x033382F0 ADRP X0, 0xDF0000
	0x033382F4 LDR X0, [X0 + 0x970]
	0x033382F8 BL 0x1C16CF4
	0x033382FC MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x10A5000
	008 Move X23, 0xDF0000
	009 Move W8, [X22+3319]
	010 Move X23, [X23+3000]
	011 Move W19, W2
	012 Move W20, W1
	013 Move W21, W0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xDF0000
	019 Move X0, [X0+3000]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3319], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move W0, W21
	029 Move W1, W20
	030 Move W2, W19
	031 Call GregorianCalendarHelper.GetAbsoluteDate, X0, X1, X2
	032 Move X8, 0xC000
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 NotImplemented "Instruction MOVK not yet implemented."
	038 NotImplemented "Instruction MOVK not yet implemented."
	039 Multiply X0, X0, X8
	040 Move X30, [X31+48]
	041 Move X23, [X31+56]
	042 Return X0

Method: System.Int64 TimeToTicks(System.Int32 hour, System.Int32 minute, System.Int32 second, System.Int32 millisecond)

Disassembly:
	0x03338300 STRB W8, [X20 + 0xD0A]
	0x03338304 LDR W0, [X19 + 0x1C]
	0x03338308 MOVZ W8, 0x80000000
	0x0333830C CMP W0, W8
	0x03338310 B.NE 0x3338334
	0x03338314 ADRP X8, 0xDF0000
	0x03338318 LDR X8, [X8 + 0x970]
	0x0333831C LDR X0, [X8]
	0x03338320 LDR W8, [X0 + 0xE0]
	0x03338324 CBNZ W8, 0x333832C
	0x03338328 BL 0x1C16DFC
	0x0333832C MOV W0, W31
	0x03338330 STR W31, [X19 + 0x1C]
	0x03338334 LDP X20, X19, [X31 + 0x10]
	0x03338338 LDR X30, [X31], #0x20
	0x0333833C RET
	0x03338340 MOV W0, W31
	0x03338344 RET
	0x03338348 SUB X31, X31, 0x40
	0x0333834C STP X30, X23, [X31 + 0x10]
	0x03338350 STP X22, X21, [X31 + 0x20]
	0x03338354 STP X20, X19, [X31 + 0x30]
	0x03338358 ADRP X21, 0x10A4000
	0x0333835C ADRP X20, 0xDF0000
	0x03338360 LDRB W8, [X21 + 0xD0B]
	0x03338364 LDR X20, [X20 + 0x970]
	0x03338368 MOV X19, X0
	0x0333836C TBNZ X8, 0x0, 0x3338390
	0x03338370 ADRP X0, 0xDBC000
	0x03338374 LDR X0, [X0 + 0x9F0]
	0x03338378 BL 0x1C16CF4
	0x0333837C ADRP X0, 0xDF0000
	0x03338380 LDR X0, [X0 + 0x970]
	0x03338384 BL 0x1C16CF4
	0x03338388 MOVZ W8, 0x1
	0x0333838C STRB W8, [X21 + 0xD0B]
	0x03338390 LDR X0, [X20]
	0x03338394 ADRP X21, 0xDBC000
	0x03338398 LDR W8, [X0 + 0xE0]
	0x0333839C LDR X21, [X21 + 0x9F0]
	0x033383A0 CBNZ W8, 0x33383A8
	0x033383A4 BL 0x1C16DFC
	0x033383A8 LDR X0, [X21]
	0x033383AC LDR W8, [X0 + 0xE0]
	0x033383B0 CBNZ W8, 0x33383B8
	0x033383B4 BL 0x1C16DFC
	0x033383B8 LDR X8, [X20]
	0x033383BC MOV X1, X31
	0x033383C0 LDR X8, [X8 + 0xB8]
	0x033383C4 ADD X0, X8, 0x10
	0x033383C8 BL 0x3361708
	0x033383CC CMP X0, X19
	0x033383D0 B.GT 0x3338424
	0x033383D4 LDR X0, [X20]
	0x033383D8 LDR W8, [X0 + 0xE0]
	0x033383DC CBNZ W8, 0x33383E4
	0x033383E0 BL 0x1C16DFC
	0x033383E4 LDR X0, [X21]
	0x033383E8 LDR W8, [X0 + 0xE0]
	0x033383EC CBNZ W8, 0x33383F4
	0x033383F0 BL 0x1C16DFC
	0x033383F4 LDR X8, [X20]
	0x033383F8 MOV X1, X31
	0x033383FC LDR X8, [X8 + 0xB8]
	0x03338400 ADD X0, X8, 0x18
	0x03338404 BL 0x3361708
	0x03338408 CMP X0, X19
	0x0333840C B.LT 0x3338424
	0x03338410 LDP X20, X19, [X31 + 0x30]
	0x03338414 LDP X22, X21, [X31 + 0x20]
	0x03338418 LDP X30, X23, [X31 + 0x10]
	0x0333841C ADD X31, X31, 0x40
	0x03338420 RET
	0x03338424 ADRP X0, 0xDBD000
	0x03338428 LDR X0, [X0 + 0xC48]
	0x0333842C BL 0x1C16D08
	0x03338430 BL 0x19903D0
	0x03338434 BL 0x3338524
	0x03338438 MOV X19, X0
	0x0333843C ADRP X0, 0xDF0000
	0x03338440 LDR X0, [X0 + 0x920]
	0x03338444 BL 0x1C16D08
	0x03338448 MOV X1, X31
	0x0333844C BL 0x33BDD84
	0x03338450 ADRP X21, 0xDF0000
	0x03338454 LDR X21, [X21 + 0x970]
	0x03338458 MOV X20, X0
	0x0333845C MOV X0, X21
	0x03338460 BL 0x1C16D08
	0x03338464 BL 0x19903D0
	0x03338468 MOV X0, X21
	0x0333846C BL 0x1C16D08
	0x03338470 LDR X8, [X0 + 0xB8]
	0x03338474 ADRP X22, 0xDBC000
	0x03338478 LDR X8, [X8 + 0x10]
	0x0333847C STR X8, [X31 + 0x8]
	0x03338480 LDR X22, [X22 + 0x9F0]
	0x03338484 MOV X0, X22
	0x03338488 BL 0x1C16D08
	0x0333848C ADD X1, X31, 0x8
	0x03338490 BL 0x1C16E04
	0x03338494 MOV X23, X0
	0x03338498 MOV X0, X21
	0x0333849C BL 0x1C16D08
	0x033384A0 LDR X8, [X0 + 0xB8]
	0x033384A4 MOV X0, X22
	0x033384A8 LDR X8, [X8 + 0x18]
	0x033384AC STR X8, [X31]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x10A5000
	009 Move W8, [X23+3320]
	010 Move W19, W3
	011 Move W20, W2
	012 Move W21, W1
	013 Move W22, W0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xDBE000
	019 Move X0, [X0+1392]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+3320], W8
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, 0xDBE000
	028 Move X8, [X8+1392]
	029 Move X0, [X8]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move W0, W22
	035 Move W1, W21
	036 Move W2, W20
	037 Move X3, X31
	038 Call TimeSpan.TimeToTicks, X0, X1, X2
	039 Move W8, 0x2710
	040 NotImplemented "Instruction UMADDL not yet implemented."
	041 Move X20, [X31+48]
	042 Move X19, [X31+56]
	043 Move X22, [X31+32]
	044 Move X21, [X31+40]
	045 Move X30, [X31+16]
	046 Move X23, [X31+24]
	047 Add X31, X31, 64
	048 Return X0
	049 Move X0, 0xDF1000
	050 Move X0, [X0+1464]
	051 Call 0x1C17D08
	052 Move X1, X31
	053 Call Environment.GetResourceString, X0
	054 Move X19, X0
	055 Move X0, 0xDC4000
	056 Move X0, [X0+1888]
	057 Call 0x1C17D08
	058 Call 0x1C17F10
	059 Move X20, X0
	060 Move X1, X31
	061 Move X0, 0xDBE000
	062 Move X0, [X0+3144]
	063 Call 0x1C17D08
	064 Call 0x19913D0
	065 Move X0, X31
	066 Call CultureInfo.get_CurrentCulture
	067 Move X19, X0
	068 Move X0, 0xDEB000
	069 Move X0, [X0+880]
	070 Call 0x1C17D08
	071 Move X1, X31
	072 Call Environment.GetResourceString, X0
	073 Move [X31+12], W31
	074 Move X21, 0xDBC000
	075 Move X21, [X21+1880]
	076 Move X20, X0
	077 Move X0, X21
	078 Call 0x1C17D08
	079 Add X1, X31, 12
	080 Call 0x1C17E04
	081 Move X22, X0
	082 Move W8, 999
	083 Move X0, X21
	084 Move [X31+8], W8
	085 Call 0x1C17D08
	086 Add X1, X31, 8
	087 Call 0x1C17E04
	088 Move X3, X0
	089 Move X0, X19
	090 Move X1, X20
	091 Move X2, X22
	092 Move X4, X31
	093 Call String.Format, X0, X1, X2, X3
	094 Move X19, X0
	095 Move X0, 0xDC4000
	096 Move X0, [X0+1888]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X20, X0
	100 Move X0, 0xDF1000
	101 Move X0, [X0+1472]
	102 Call 0x1C17D08
	103 Move X1, X0
	104 Move X0, X20
	105 Move X2, X19
	106 Move X3, X31
	107 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	108 Move X0, 0xDF1000
	109 Move X0, [X0+2360]
	110 Call 0x1C17D08
	111 Move X1, X0
	112 Move X0, X20
	113 Call 0x1C17DEC

Method: System.Void CheckTicksRange(System.Int64 ticks)

Disassembly:
	0x03337EAC MOV X0, X20
	0x03337EB0 BL 0x1C16DEC
	0x03337EB4 STP X30, X23, [X31 - 0x30]!
	0x03337EB8 STP X22, X21, [X31 + 0x10]
	0x03337EBC STP X20, X19, [X31 + 0x20]
	0x03337EC0 ADRP X23, 0x10A5000
	0x03337EC4 ADRP X22, 0xDBD000
	0x03337EC8 ADRP X19, 0xDF1000
	0x03337ECC ADRP X20, 0xDF0000
	0x03337ED0 ADRP X21, 0xDF1000
	0x03337ED4 LDRB W8, [X23 + 0xD02]
	0x03337ED8 LDR X22, [X22 + 0xE58]
	0x03337EDC LDR X19, [X19 + 0x908]
	0x03337EE0 LDR X20, [X20 + 0xBB8]
	0x03337EE4 LDR X21, [X21 + 0x910]
	0x03337EE8 TBNZ X8, 0x0, 0x3337F24
	0x03337EEC ADRP X0, 0xDF0000
	0x03337EF0 LDR X0, [X0 + 0xBB8]
	0x03337EF4 BL 0x1C16CF4
	0x03337EF8 ADRP X0, 0xDBD000
	0x03337EFC LDR X0, [X0 + 0xE58]
	0x03337F00 BL 0x1C16CF4
	0x03337F04 ADRP X0, 0xDF1000
	0x03337F08 LDR X0, [X0 + 0x908]
	0x03337F0C BL 0x1C16CF4
	0x03337F10 ADRP X0, 0xDF1000
	0x03337F14 LDR X0, [X0 + 0x910]
	0x03337F18 BL 0x1C16CF4
	0x03337F1C MOVZ W8, 0x1
	0x03337F20 STRB W8, [X23 + 0xD02]
	0x03337F24 LDR X0, [X22]
	0x03337F28 MOVZ W1, 0xD
	0x03337F2C BL 0x1C16D6C
	0x03337F30 LDR X1, [X19]
	0x03337F34 MOV X2, X31
	0x03337F38 MOV X19, X0
	0x03337F3C BL 0x32C5BD8
	0x03337F40 LDR X8, [X20]
	0x03337F44 MOVZ W1, 0xD
	0x03337F48 LDR X8, [X8 + 0xB8]
	0x03337F4C STR X19, [X8]
	0x03337F50 LDR X0, [X22]
	0x03337F54 BL 0x1C16D6C
	0x03337F58 LDR X1, [X21]
	0x03337F5C MOV X2, X31
	0x03337F60 MOV X19, X0
	0x03337F64 BL 0x32C5BD8
	0x03337F68 LDR X8, [X20]
	0x03337F6C LDP X22, X21, [X31 + 0x10]
	0x03337F70 LDR X8, [X8 + 0xB8]
	0x03337F74 STR X19, [X8 + 0x8]
	0x03337F78 LDP X20, X19, [X31 + 0x20]
	0x03337F7C LDP X30, X23, [X31], #0x30
	0x03337F80 RET
	0x03337F84 STR X30, [X31 - 0x30]!
	0x03337F88 STP X22, X21, [X31 + 0x10]
	0x03337F8C STP X20, X19, [X31 + 0x20]
	0x03337F90 ADRP X22, 0x10A5000
	0x03337F94 LDRB W8, [X22 + 0xD03]
	0x03337F98 MOV W19, W2
	0x03337F9C MOV X20, X1
	0x03337FA0 MOV X21, X0
	0x03337FA4 CBNZ W8, 0x3337FD4
	0x03337FA8 ADRP X0, 0xDEC000
	0x03337FAC LDR X0, [X0 + 0xB60]
	0x03337FB0 BL 0x1C16CF4
	0x03337FB4 ADRP X0, 0xDF1000
	0x03337FB8 LDR X0, [X0 + 0x4C8]
	0x03337FBC BL 0x1C16CF4
	0x03337FC0 ADRP X0, 0xDF1000
	0x03337FC4 LDR X0, [X0 + 0x4D0]
	0x03337FC8 BL 0x1C16CF4
	0x03337FCC MOVZ W8, 0x1
	0x03337FD0 STRB W8, [X22 + 0xD03]
	0x03337FD4 ADRP X8, 0xDEC000
	0x03337FD8 LDR X8, [X8 + 0xB60]
	0x03337FDC LDR X8, [X8]
	0x03337FE0 LDR X8, [X8 + 0xB8]
	0x03337FE4 LDRB W8, [X8 + 0x3]
	0x03337FE8 CBNZ W8, 0x3338074
	0x03337FEC LDR X0, [X21 + 0x78]
	0x03337FF0 CBZ X0, 0x3338088
	0x03337FF4 LDR X8, [X0]
	0x03337FF8 LDP X9, X1, [X8 + 0x1A8]
	0x03337FFC BLR X9
	0x03338000 CMP W0, 0x3
	0x03338004 B.NE 0x3338074
	0x03338008 ADRP X21, 0xDF0000
	0x0333800C LDR X21, [X21 + 0x4C8]
	0x03338010 LDR X0, [X21]
	0x03338014 CBZ X0, 0x3338088
	0x03338018 MOV W1, W31
	0x0333801C MOV X2, X31
	0x03338020 BL 0x3222A1C
	0x03338024 AND W8, W0, 0xFFFF
	0x03338028 CMP W8, W19, UXTH
	0x0333802C B.NE 0x3338038
	0x03338030 MOVZ W0, 0x1
	0x03338034 B 0x3338078
	0x03338038 LDR X1, [X21]
	0x0333803C MOV X0, X20
	0x03338040 MOV X2, X31
	0x03338044 BL 0x321BA08
	0x03338048 TBZ X0, 0x0, 0x3338074
	0x0333804C ADRP X8, 0xDF0000
	0x03338050 LDR X8, [X8 + 0x4D0]
	0x03338054 LDR X0, [X8]
	0x03338058 CBZ X0, 0x3338088
	0x0333805C MOV W1, W31
	0x03338060 MOV X2, X31
	0x03338064 BL 0x3222A1C
	0x03338068 AND W8, W0, 0xFFFF
	0x0333806C CMP W8, W19, UXTH
	0x03338070 B.EQ 0x3338030
	0x03338074 MOV W0, W31
	0x03338078 LDP X20, X19, [X31 + 0x20]
	0x0333807C LDP X22, X21, [X31 + 0x10]
	0x03338080 LDR X30, [X31], #0x30
	0x03338084 RET
	0x03338088 BL 0x1C16F20
	0x0333808C STR X30, [X31 - 0x20]!

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X21, 0x10A6000
	009 Move W8, [X21+3321]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDBE000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3321], W8
	021 Move [X31+24], X31
	022 Move X0, [X19+24]
	023 Compare X0, 0
	024 JumpIfEqual {68}
	025 Move X8, [X0]
	026 Move X21, 0xDBE000
	027 Move X9, [X8+392]
	028 Move X1, [X8+400]
	029 Move X21, [X21+2544]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X8, [X21]
	032 Move [X31+24], X0
	033 Move W9, [X8+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Add X0, X31, 24
	039 Move X1, X31
	040 Call DateTime.get_Ticks, X0
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X0, [X19+24]
	043 Compare X0, 0
	044 JumpIfEqual {68}
	045 Move X8, [X0]
	046 Move X9, [X8+408]
	047 Move X1, [X8+416]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move X8, [X21]
	050 Move [X31+24], X0
	051 Move W9, [X8+224]
	052 Compare W9, 0
	053 JumpIfNotEqual {56}
	054 Move X0, X8
	055 Call 0x1C17DFC
	056 Add X0, X31, 24
	057 Move X1, X31
	058 Call DateTime.get_Ticks, X0
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X20, [X31+64]
	061 Move X19, [X31+72]
	062 Move X22, [X31+48]
	063 Move X21, [X31+56]
	064 Move X30, [X31+32]
	065 Move X23, [X31+40]
	066 Add X31, X31, 80
	067 Return 
	068 Call 0x1C17F20
	069 Move X0, 0xDBF000
	070 Move X0, [X0+3144]
	071 Call 0x1C17D08
	072 Call 0x19913D0
	073 Move X0, X31
	074 Call CultureInfo.get_InvariantCulture
	075 Move X20, X0
	076 Move X0, 0xDF2000
	077 Move X0, [X0+2336]
	078 Call 0x1C17D08
	079 Move X1, X31
	080 Call Environment.GetResourceString, X0
	081 Move X21, [X19+24]
	082 Move X22, X0
	083 Move X0, X21
	084 Call 0x19913C0
	085 Move X8, [X21]
	086 Move X0, X21
	087 Move X9, [X8+392]
	088 Move X1, [X8+400]
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move [X31+16], X0
	091 Move X21, 0xDBE000
	092 Move X21, [X21+2544]
	093 Move X0, X21
	094 Call 0x1C17D08
	095 Add X1, X31, 16
	096 Call 0x1C17E04
	097 Move X19, [X19+24]
	098 Move X23, X0
	099 Move X0, X19
	100 Call 0x19913C0
	101 Move X8, [X19]
	102 Move X0, X19
	103 Move X9, [X8+408]
	104 Move X1, [X8+416]
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move [X31+8], X0
	107 Move X0, X21
	108 Call 0x1C17D08
	109 Add X1, X31, 8
	110 Call 0x1C17E04
	111 Move X3, X0
	112 Move X0, X20
	113 Move X1, X22
	114 Move X2, X23
	115 Move X4, X31
	116 Call String.Format, X0, X1, X2, X3
	117 Move X19, X0
	118 Move X0, 0xDC4000
	119 Move X0, [X0+1888]
	120 Call 0x1C17D08
	121 Call 0x1C17F10
	122 Move X20, X0
	123 Move X0, 0xDE9000
	124 Move X0, [X0+24]
	125 Call 0x1C17D08
	126 Move X1, X0
	127 Move X0, X20
	128 Move X2, X19
	129 Move X3, X31
	130 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	131 Move X0, 0xDF1000
	132 Move X0, [X0+2344]
	133 Call 0x1C17D08
	134 Move X1, X0
	135 Move X0, X20
	136 Call 0x1C17DEC

Method: System.Int32 GetDayOfMonth(System.DateTime time)

Disassembly:
	0x033384B0 BL 0x1C16D08
	0x033384B4 ADD X1, X31, 0x0
	0x033384B8 BL 0x1C16E04
	0x033384BC MOV X3, X0
	0x033384C0 MOV X0, X19
	0x033384C4 MOV X1, X20
	0x033384C8 MOV X2, X23
	0x033384CC MOV X4, X31
	0x033384D0 BL 0x3227D58
	0x033384D4 MOV X19, X0
	0x033384D8 ADRP X0, 0xDC3000
	0x033384DC LDR X0, [X0 + 0x760]
	0x033384E0 BL 0x1C16D08
	0x033384E4 BL 0x1C16F10
	0x033384E8 MOV X20, X0
	0x033384EC ADRP X0, 0xDE8000
	0x033384F0 LDR X0, [X0 + 0x18]
	0x033384F4 BL 0x1C16D08
	0x033384F8 MOV X1, X0
	0x033384FC MOV X0, X20
	0x03338500 MOV X2, X19
	0x03338504 MOV X3, X31
	0x03338508 BL 0x3311888
	0x0333850C ADRP X0, 0xDF0000
	0x03338510 LDR X0, [X0 + 0x978]
	0x03338514 BL 0x1C16D08
	0x03338518 MOV X1, X0
	0x0333851C MOV X0, X20
	0x03338520 BL 0x1C16DEC
	0x03338524 STR X30, [X31 - 0x20]!
	0x03338528 STP X20, X19, [X31 + 0x10]
	0x0333852C ADRP X20, 0x10A4000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x10A5000
	007 Move [X31+8], X1
	008 Move X21, 0xDBD000
	009 Move W8, [X20+3322]
	010 Move X21, [X21+2544]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDBD000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3322], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X31, 8
	027 Move X1, X31
	028 Call DateTime.get_Ticks, X0
	029 Move X8, [X19]
	030 Move X1, X0
	031 Move W2, 3
	032 Move X0, X19
	033 Move X9, [X8+376]
	034 Move X3, [X8+384]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X30, [X31+16]
	039 Move X21, [X31+24]
	040 Add X31, X31, 48
	041 Return X0

Method: System.DayOfWeek GetDayOfWeek(System.DateTime time)

Disassembly:
	0x03338530 ADRP X19, 0xDBD000
	0x03338534 LDRB W8, [X20 + 0xD76]
	0x03338538 LDR X19, [X19 + 0xC48]
	0x0333853C TBNZ X8, 0x0, 0x3338554
	0x03338540 ADRP X0, 0xDBD000
	0x03338544 LDR X0, [X0 + 0xC48]
	0x03338548 BL 0x1C16CF4
	0x0333854C MOVZ W8, 0x1
	0x03338550 STRB W8, [X20 + 0xD76]
	0x03338554 LDR X0, [X19]
	0x03338558 LDR W8, [X0 + 0xE0]
	0x0333855C CBNZ W8, 0x3338568
	0x03338560 BL 0x1C16DFC
	0x03338564 LDR X0, [X19]
	0x03338568 LDR X8, [X0 + 0xB8]
	0x0333856C LDR X19, [X8]
	0x03338570 BL 0x1C16D44
	0x03338574 MOV X0, X19
	0x03338578 LDP X20, X19, [X31 + 0x10]
	0x0333857C LDR X30, [X31], #0x20
	0x03338580 RET
	0x03338584 STR X30, [X31 - 0x20]!
	0x03338588 STP X20, X19, [X31 + 0x10]
	0x0333858C ADRP X20, 0x10A4000
	0x03338590 LDRB W8, [X20 + 0xD0C]
	0x03338594 MOV W19, W0
	0x03338598 TBNZ X8, 0x0, 0x33385B0
	0x0333859C ADRP X0, 0xDF0000
	0x033385A0 LDR X0, [X0 + 0x970]
	0x033385A4 BL 0x1C16CF4
	0x033385A8 MOVZ W8, 0x1
	0x033385AC STRB W8, [X20 + 0xD0C]
	0x033385B0 CBZ W19, 0x33385E0
	0x033385B4 ADRP X20, 0xDF0000
	0x033385B8 LDR X20, [X20 + 0x970]
	0x033385BC LDR X0, [X20]
	0x033385C0 LDR W8, [X0 + 0xE0]
	0x033385C4 CBNZ W8, 0x33385D0
	0x033385C8 BL 0x1C16DFC
	0x033385CC LDR X0, [X20]
	0x033385D0 LDR X8, [X0 + 0xB8]
	0x033385D4 LDR W8, [X8]
	0x033385D8 CMP W8, W19
	0x033385DC B.NE 0x33385EC
	0x033385E0 LDP X20, X19, [X31 + 0x10]
	0x033385E4 LDR X30, [X31], #0x20
	0x033385E8 RET
	0x033385EC ADRP X0, 0xDF0000
	0x033385F0 LDR X0, [X0 + 0x348]
	0x033385F4 BL 0x1C16D08
	0x033385F8 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x10A5000
	007 Move [X31+8], X1
	008 Move X21, 0xDBD000
	009 Move W8, [X20+3323]
	010 Move X21, [X21+2544]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDBD000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3323], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X31, 8
	027 Move X1, X31
	028 Call DateTime.get_Ticks, X0
	029 Move X1, X0
	030 Move X0, X19
	031 Call GregorianCalendarHelper.CheckTicksRange, X0, X1
	032 Add X0, X31, 8
	033 Move X1, X31
	034 Call DateTime.get_Ticks, X0
	035 Move X8, 0x81E3
	036 NotImplemented "Instruction MOVK not yet implemented."
	037 NotImplemented "Instruction MOVK not yet implemented."
	038 NotImplemented "Instruction MOVK not yet implemented."
	039 NotImplemented "Instruction SMULH not yet implemented."
	040 Add X8, X8, X0
	041 Move X9, X8
	042 ShiftRight X9, 63
	043 And X9, X9, 0x7FFFFFFF
	044 NotImplemented "Instruction SBFM not yet implemented."
	045 Add W8, W8, W9
	046 Move W9, 0x2493
	047 Add W8, W8, 1
	048 NotImplemented "Instruction MOVK not yet implemented."
	049 NotImplemented "Instruction SMADDL not yet implemented."
	050 Move X9, X9
	051 ShiftRight X9, 32
	052 And X9, X9, 0x7FFFFFFF
	053 Add W9, W9, W8
	054 NotImplemented "Instruction SBFM not yet implemented."
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X30, [X31+16]
	058 Move X21, [X31+24]
	059 Add W9, W10, W9
	060 Subtract W9, W9, W9
	061 Add W0, W8, W9
	062 Add X31, X31, 48
	063 Return X0

Method: System.Int32 GetDaysInMonth(System.Int32 year, System.Int32 month, System.Int32 era)

Disassembly:
	0x033385FC BL 0x33BDD84
	0x03338600 MOV X19, X0
	0x03338604 ADRP X0, 0xDC3000
	0x03338608 LDR X0, [X0 + 0x760]
	0x0333860C BL 0x1C16D08
	0x03338610 BL 0x1C16F10
	0x03338614 MOV X20, X0
	0x03338618 ADRP X0, 0xDF0000
	0x0333861C LDR X0, [X0 + 0x340]
	0x03338620 BL 0x1C16D08
	0x03338624 MOV X1, X0
	0x03338628 MOV X0, X20
	0x0333862C MOV X2, X19
	0x03338630 MOV X3, X31
	0x03338634 BL 0x3311888
	0x03338638 ADRP X0, 0xDF0000
	0x0333863C LDR X0, [X0 + 0x980]
	0x03338640 BL 0x1C16D08
	0x03338644 MOV X1, X0
	0x03338648 MOV X0, X20
	0x0333864C BL 0x1C16DEC
	0x03338650 SUB X31, X31, 0x40
	0x03338654 STP X30, X23, [X31 + 0x10]
	0x03338658 STP X22, X21, [X31 + 0x20]
	0x0333865C STP X20, X19, [X31 + 0x30]
	0x03338660 ADRP X21, 0x10A4000
	0x03338664 ADRP X22, 0xDF0000
	0x03338668 LDRB W8, [X21 + 0xD0D]
	0x0333866C LDR X22, [X22 + 0x970]
	0x03338670 MOV W20, W1
	0x03338674 MOV W19, W0
	0x03338678 TBNZ X8, 0x0, 0x3338690
	0x0333867C ADRP X0, 0xDF0000
	0x03338680 LDR X0, [X0 + 0x970]
	0x03338684 BL 0x1C16CF4
	0x03338688 MOVZ W8, 0x1
	0x0333868C STRB W8, [X21 + 0xD0D]
	0x03338690 LDR X0, [X22]
	0x03338694 LDR W8, [X0 + 0xE0]
	0x03338698 CBNZ W8, 0x33386A0
	0x0333869C BL 0x1C16DFC
	0x033386A0 MOV W0, W20
	0x033386A4 BL 0x3338584
	0x033386A8 SUB W8, W19, 0x1
	0x033386AC MOVZ W9, 0x25C2
	0x033386B0 CMP W8, W9
	0x033386B4 B.CS 0x33386CC
	0x033386B8 LDP X20, X19, [X31 + 0x30]
	0x033386BC LDP X22, X21, [X31 + 0x20]
	0x033386C0 LDP X30, X23, [X31 + 0x10]
	0x033386C4 ADD X31, X31, 0x40
	0x033386C8 RET
	0x033386CC ADRP X0, 0xDBD000
	0x033386D0 LDR X0, [X0 + 0xC48]
	0x033386D4 MOVZ W23, 0x25C2
	0x033386D8 BL 0x1C16D08
	0x033386DC BL 0x19903D0
	0x033386E0 BL 0x33387A0
	0x033386E4 MOV X19, X0
	0x033386E8 ADRP X0, 0xDEA000
	0x033386EC LDR X0, [X0 + 0x370]
	0x033386F0 BL 0x1C16D08
	0x033386F4 MOV X1, X31
	0x033386F8 BL 0x33BDD84
	0x033386FC MOVZ W8, 0x1
	0x03338700 STR W8, [X31 + 0xC]
	0x03338704 ADRP X21, 0xDBB000
	0x03338708 LDR X21, [X21 + 0x758]
	0x0333870C MOV X20, X0
	0x03338710 MOV X0, X21
	0x03338714 BL 0x1C16D08
	0x03338718 ADD X1, X31, 0xC
	0x0333871C BL 0x1C16E04
	0x03338720 MOV X22, X0
	0x03338724 MOV X0, X21
	0x03338728 STR W23, [X31 + 0x8]
	0x0333872C BL 0x1C16D08
	0x03338730 ADD X1, X31, 0x8
	0x03338734 BL 0x1C16E04
	0x03338738 MOV X3, X0
	0x0333873C MOV X0, X19
	0x03338740 MOV X1, X20
	0x03338744 MOV X2, X22
	0x03338748 MOV X4, X31
	0x0333874C BL 0x3227D58
	0x03338750 MOV X19, X0
	0x03338754 ADRP X0, 0xDC3000
	0x03338758 LDR X0, [X0 + 0x760]
	0x0333875C BL 0x1C16D08
	0x03338760 BL 0x1C16F10
	0x03338764 MOV X20, X0
	0x03338768 ADRP X0, 0xDF0000
	0x0333876C LDR X0, [X0 + 0x5A8]
	0x03338770 BL 0x1C16D08
	0x03338774 MOV X1, X0
	0x03338778 MOV X0, X20
	0x0333877C MOV X2, X19
	0x03338780 MOV X3, X31
	0x03338784 BL 0x3311888
	0x03338788 ADRP X0, 0xDF0000
	0x0333878C LDR X0, [X0 + 0x988]
	0x03338790 BL 0x1C16D08
	0x03338794 MOV X1, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x10A5000
	008 Move W8, [X23+3324]
	009 Move W21, W3
	010 Move W19, W2
	011 Move W20, W1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xDF0000
	018 Move X0, [X0+3000]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+3324], W8
	022 Move W3, 1
	023 Move X0, X22
	024 Move W1, W20
	025 Move W2, W21
	026 Call GregorianCalendarHelper.GetYearOffset, X0, X1, X2, X3
	027 Subtract W21, W19, 1
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Add W8, W0, W20
	030 Move X20, 0xDF0000
	031 Move X20, [X20+3000]
	032 And W31, W8, 3
	033 Move W9, 0x5C29
	034 Move W10, 0xB850
	035 NotImplemented "Instruction MOVK not yet implemented."
	036 NotImplemented "Instruction MOVK not yet implemented."
	037 NotImplemented "Instruction MADD not yet implemented."
	038 Move W10, 0x5C28
	039 NotImplemented "Instruction EXTR not yet implemented."
	040 NotImplemented "Instruction MOVK not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W9, 0x851F
	043 NotImplemented "Instruction MOVK not yet implemented."
	044 NotImplemented "Instruction SMADDL not yet implemented."
	045 Move X10, X9
	046 ShiftRight X10, 63
	047 And X10, X10, 0x7FFFFFFF
	048 NotImplemented "Instruction SBFM not yet implemented."
	049 Add W9, W9, W10
	050 Move W10, 400
	051 NotImplemented "Instruction MSUB not yet implemented."
	052 Compare W8, 0
	053 JumpIfEqual {78}
	054 Move X0, [X20]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move X0, [X20]
	060 Move X8, [X0+184]
	061 Move X8, [X8]
	062 Compare X8, 0
	063 JumpIfEqual {112}
	064 Move W9, [X8+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Add X8, X8, 32
	068 Move W9, [X8]
	069 Move W8, [X8]
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Subtract W0, W9, W8
	075 Move X30, [X31+48]
	076 Move X23, [X31+56]
	077 Return X0
	078 Move X0, [X20]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X20]
	084 Move X8, [X0+184]
	085 Add X8, X8, 8
	086 Call 0x1C17F28
	087 Move X0, 0xDF1000
	088 Move X0, [X0+2248]
	089 Call 0x1C17D08
	090 Move X1, X31
	091 Call Environment.GetResourceString, X0
	092 Move X19, X0
	093 Move X0, 0xDC4000
	094 Move X0, [X0+1888]
	095 Call 0x1C17D08
	096 Call 0x1C17F10
	097 Move X20, X0
	098 Move X0, 0xDF0000
	099 Move X0, [X0+3496]
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X20
	103 Move X2, X19
	104 Move X3, X31
	105 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	106 Move X0, 0xDF1000
	107 Move X0, [X0+2368]
	108 Call 0x1C17D08
	109 Move X1, X0
	110 Move X0, X20
	111 Call 0x1C17DEC
	112 Call 0x1C17F20

Method: System.Int32 GetDaysInYear(System.Int32 year, System.Int32 era)

Disassembly:
	0x03338798 MOV X0, X20
	0x0333879C BL 0x1C16DEC
	0x033387A0 STR X30, [X31 - 0x10]!
	0x033387A4 MOV X0, X31
	0x033387A8 BL 0x33E3C68
	0x033387AC CBZ X0, 0x33387BC
	0x033387B0 MOV X1, X31
	0x033387B4 LDR X30, [X31], #0x10
	0x033387B8 B 0x33E6EAC
	0x033387BC BL 0x1C16F20
	0x033387C0 SUB X31, X31, 0x40
	0x033387C4 STP X30, X23, [X31 + 0x10]
	0x033387C8 STP X22, X21, [X31 + 0x20]
	0x033387CC STP X20, X19, [X31 + 0x30]
	0x033387D0 ADRP X22, 0x10A4000
	0x033387D4 ADRP X23, 0xDF0000
	0x033387D8 LDRB W8, [X22 + 0xD0E]
	0x033387DC LDR X23, [X23 + 0x970]
	0x033387E0 MOV W21, W2
	0x033387E4 MOV W19, W1
	0x033387E8 MOV W20, W0
	0x033387EC TBNZ X8, 0x0, 0x3338804
	0x033387F0 ADRP X0, 0xDF0000
	0x033387F4 LDR X0, [X0 + 0x970]
	0x033387F8 BL 0x1C16CF4
	0x033387FC MOVZ W8, 0x1
	0x03338800 STRB W8, [X22 + 0xD0E]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W3, 1
	004 Move W19, W1
	005 Call GregorianCalendarHelper.GetYearOffset, X0, X1, X2, X3
	006 Add W8, W0, W19
	007 And W31, W8, 3
	008 Move W0, 365
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0
	012 Move W9, 0x5C29
	013 Move W10, 0xB850
	014 NotImplemented "Instruction MOVK not yet implemented."
	015 NotImplemented "Instruction MOVK not yet implemented."
	016 Move W11, 0xD70B
	017 NotImplemented "Instruction MADD not yet implemented."
	018 NotImplemented "Instruction MOVK not yet implemented."
	019 Move W12, 0x5C28
	020 NotImplemented "Instruction EXTR not yet implemented."
	021 NotImplemented "Instruction EXTR not yet implemented."
	022 NotImplemented "Instruction MOVK not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CCMP not yet implemented."
	025 Move W8, 365
	026 NotImplemented "Instruction CINC not yet implemented."
	027 Move X30, [X31+16]
	028 Move X19, [X31+24]
	029 Return X0

Method: System.Int32 GetEra(System.DateTime time)

Disassembly:
	0x03338804 LDR X0, [X23]
	0x03338808 LDR W8, [X0 + 0xE0]
	0x0333880C CBNZ W8, 0x3338814
	0x03338810 BL 0x1C16DFC
	0x03338814 MOV W0, W20
	0x03338818 MOV W1, W21
	0x0333881C BL 0x3338650
	0x03338820 MOVZ W8, 0x25C2
	0x03338824 CMP W20, W8
	0x03338828 B.NE 0x3338834
	0x0333882C CMP W19, 0x5
	0x03338830 B.GE 0x3338854
	0x03338834 SUB W8, W19, 0x1
	0x03338838 CMP W8, 0xC
	0x0333883C B.CS 0x33388DC
	0x03338840 LDP X20, X19, [X31 + 0x30]
	0x03338844 LDP X22, X21, [X31 + 0x20]
	0x03338848 LDP X30, X23, [X31 + 0x10]
	0x0333884C ADD X31, X31, 0x40
	0x03338850 RET
	0x03338854 ADRP X0, 0xDBD000
	0x03338858 LDR X0, [X0 + 0xC48]
	0x0333885C BL 0x1C16D08
	0x03338860 BL 0x19903D0
	0x03338864 BL 0x33387A0
	0x03338868 MOV X19, X0
	0x0333886C ADRP X0, 0xDEA000
	0x03338870 LDR X0, [X0 + 0x370]
	0x03338874 BL 0x1C16D08
	0x03338878 MOV X1, X31
	0x0333887C BL 0x33BDD84
	0x03338880 MOVZ W8, 0x1
	0x03338884 STR W8, [X31 + 0xC]
	0x03338888 ADRP X21, 0xDBB000
	0x0333888C LDR X21, [X21 + 0x758]
	0x03338890 MOV X20, X0
	0x03338894 MOV X0, X21
	0x03338898 BL 0x1C16D08
	0x0333889C ADD X1, X31, 0xC
	0x033388A0 BL 0x1C16E04
	0x033388A4 MOV X22, X0
	0x033388A8 MOVZ W8, 0x4
	0x033388AC MOV X0, X21
	0x033388B0 STR W8, [X31 + 0x8]
	0x033388B4 BL 0x1C16D08
	0x033388B8 ADD X1, X31, 0x8
	0x033388BC BL 0x1C16E04
	0x033388C0 MOV X3, X0
	0x033388C4 MOV X0, X19
	0x033388C8 MOV X1, X20
	0x033388CC MOV X2, X22
	0x033388D0 MOV X4, X31
	0x033388D4 BL 0x3227D58
	0x033388D8 B 0x33388F0
	0x033388DC ADRP X0, 0xDF0000
	0x033388E0 LDR X0, [X0 + 0x8C8]
	0x033388E4 BL 0x1C16D08
	0x033388E8 MOV X1, X31
	0x033388EC BL 0x33BDD84
	0x033388F0 MOV X19, X0
	0x033388F4 ADRP X0, 0xDC3000
	0x033388F8 LDR X0, [X0 + 0x760]
	0x033388FC BL 0x1C16D08
	0x03338900 BL 0x1C16F10
	0x03338904 MOV X20, X0
	0x03338908 ADRP X0, 0xDEF000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x10A5000
	007 Move [X31+8], X1
	008 Move X21, 0xDBD000
	009 Move W8, [X20+3325]
	010 Move X21, [X21+2544]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDBD000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3325], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X31, 8
	027 Move X1, X31
	028 Call DateTime.get_Ticks, X0
	029 Move X8, [X19+32]
	030 Compare X8, 0
	031 JumpIfEqual {72}
	032 Move W9, [X8+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W10, W31
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Add X11, X8, W10
	037 Move X11, [X11+32]
	038 Compare X11, 0
	039 JumpIfEqual {72}
	040 Move X12, [X11+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Add W10, W10, 1
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, 0xDF1000
	045 Move X0, [X0+2376]
	046 Call 0x1C17D08
	047 Move X1, X31
	048 Call Environment.GetResourceString, X0
	049 Move X19, X0
	050 Move X0, 0xDC4000
	051 Move X0, [X0+1888]
	052 Call 0x1C17D08
	053 Call 0x1C17F10
	054 Move X1, X19
	055 Move X2, X31
	056 Move X20, X0
	057 Call ArgumentOutOfRangeException..ctor, X0, X1
	058 Move X0, 0xDF1000
	059 Move X0, [X0+2384]
	060 Call 0x1C17D08
	061 Move X1, X0
	062 Move X0, X20
	063 Call 0x1C17DEC
	064 Move W0, [X11+16]
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X30, [X31+16]
	068 Move X21, [X31+24]
	069 Add X31, X31, 48
	070 Return X0
	071 Call 0x1C17F28
	072 Call 0x1C17F20

Method: System.Int32[] get_Eras()

Disassembly:
	0x0333890C LDR X0, [X0 + 0xDA8]
	0x03338910 BL 0x1C16D08
	0x03338914 MOV X1, X0
	0x03338918 MOV X0, X20
	0x0333891C MOV X2, X19
	0x03338920 MOV X3, X31
	0x03338924 BL 0x3311888
	0x03338928 ADRP X0, 0xDF0000
	0x0333892C LDR X0, [X0 + 0x990]
	0x03338930 BL 0x1C16D08
	0x03338934 MOV X1, X0
	0x03338938 MOV X0, X20
	0x0333893C BL 0x1C16DEC
	0x03338940 STP X30, X25, [X31 - 0x40]!
	0x03338944 STP X24, X23, [X31 + 0x10]
	0x03338948 STP X22, X21, [X31 + 0x20]
	0x0333894C STP X20, X19, [X31 + 0x30]
	0x03338950 ADRP X22, 0x10A4000
	0x03338954 ADRP X24, 0xDF0000
	0x03338958 LDRB W8, [X22 + 0xD0F]
	0x0333895C LDR X24, [X24 + 0x970]
	0x03338960 MOV W19, W2
	0x03338964 MOV X20, X1
	0x03338968 MOV X21, X0
	0x0333896C TBNZ X8, 0x0, 0x3338984
	0x03338970 ADRP X0, 0xDF0000
	0x03338974 LDR X0, [X0 + 0x970]
	0x03338978 BL 0x1C16CF4
	0x0333897C MOVZ W8, 0x1
	0x03338980 STRB W8, [X22 + 0xD0F]
	0x03338984 LDR X0, [X24]
	0x03338988 LDR W8, [X0 + 0xE0]
	0x0333898C CBNZ W8, 0x3338994
	0x03338990 BL 0x1C16DFC
	0x03338994 MOV X0, X20
	0x03338998 BL 0x3338348
	0x0333899C MOVZ X8, 0x81E3
	0x033389A0 MOVK X8, 0xE2050000
	0x033389A4 MOVK X8, 0xFF1D
	0x033389A8 MOVK X8, 0xA2E30000
	0x033389AC SMULH X8, X20, X8, X31
	0x033389B0 ADD X8, X8, X20
	0x033389B4 SBFM X9, X8, 0x27, 0x3F
	0x033389B8 MOV X0, X21
	0x033389BC ADD X20, X9, X8, 0x3F, LSR
	0x033389C0 BL 0x33382D8
	0x033389C4 MOVZ X11, 0x407D
	0x033389C8 ADD X8, X20, W0, SXTW
	0x033389CC MOVN X10, 0xEB15
	0x033389D0 MOVK X11, 0xB8A60000
	0x033389D4 MOVZ W9, 0x1E
	0x033389D8 MOVK X10, 0xFF980000
	0x033389DC MOVK X11, 0x2094
	0x033389E0 ADD X25, X8, 0x1
	0x033389E4 MOVK X11, 0x31510000
	0x033389E8 MADD X8, X25, X9, X10
	0x033389EC SMULH X8, X8, X11, X31
	0x033389F0 UBFM X9, X8, 0x3F, 0x3F
	0x033389F4 UBFM X8, X8, 0xB, 0x3F
	0x033389F8 ADD W20, W8, W9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10A5000
	005 Move W8, [X20+3326]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xDBD000
	012 Move X0, [X0+3672]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3326], W8
	016 Move X20, 0xDBD000
	017 Move X0, [X19+40]
	018 Move X20, [X20+3672]
	019 Compare X0, 0
	020 JumpIfNotEqual {49}
	021 Move X8, [X19+32]
	022 Compare X8, 0
	023 JumpIfEqual {65}
	024 Move X0, [X20]
	025 Move W1, [X8+24]
	026 Call 0x1C17D6C
	027 Move X8, [X19+32]
	028 Move [X19+40], X0
	029 Compare X8, 0
	030 JumpIfEqual {65}
	031 Move W9, [X8+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W10, W31
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X10, W10
	036 Add X11, X8, X10
	037 Move X11, [X11+32]
	038 Compare X11, 0
	039 JumpIfEqual {65}
	040 Compare X0, 0
	041 JumpIfEqual {65}
	042 Move W12, [X0+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W11, [X11+16]
	045 Add X12, X0, X10
	046 Add W10, W10, 1
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move [X12+32], W11
	049 Compare X0, 0
	050 JumpIfEqual {65}
	051 Move X1, X31
	052 Call Array.Clone, X0
	053 Compare X0, 0
	054 JumpIfEqual {61}
	055 Move X20, [X20]
	056 Move X19, X0
	057 Move X1, X20
	058 Call 0x1C17E00
	059 Compare X0, 0
	060 JumpIfEqual {67}
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X30, [X31+32]
	064 Return X0
	065 Call 0x1C17F20
	066 Call 0x1C17F28
	067 Move X0, X19
	068 Move X1, X20
	069 Call 0x1C181E0

Method: System.Int32 GetMonth(System.DateTime time)

Disassembly:
	0x033389FC ADD W22, W20, 0x1
	0x03338A00 MOV X0, X21
	0x03338A04 MOV W1, W22
	0x03338A08 BL 0x333821C
	0x03338A0C LDR X8, [X21]
	0x03338A10 MOV X23, X0
	0x03338A14 MOV X0, X21
	0x03338A18 MOV W1, W22
	0x03338A1C LDR X9, [X8 + 0x218]
	0x03338A20 LDR X3, [X8 + 0x220]
	0x03338A24 MOV W2, W31
	0x03338A28 BLR X9
	0x03338A2C CMP X25, X23
	0x03338A30 SXTW X8, W0
	0x03338A34 B.GE 0x3338A44
	0x03338A38 SUB X8, X23, X8
	0x03338A3C CBNZ W19, 0x3338A88
	0x03338A40 B 0x3338B40
	0x03338A44 B.NE 0x3338A70
	0x03338A48 LDR X8, [X21]
	0x03338A4C MOV X0, X21
	0x03338A50 MOV W1, W20
	0x03338A54 MOV W2, W31
	0x03338A58 LDR X9, [X8 + 0x218]
	0x03338A5C LDR X3, [X8 + 0x220]
	0x03338A60 BLR X9
	0x03338A64 SUB X8, X25, W0, SXTW
	0x03338A68 CBNZ W19, 0x3338A88
	0x03338A6C B 0x3338B40
	0x03338A70 ADD X8, X23, X8
	0x03338A74 ADD W9, W20, 0x2
	0x03338A78 CMP X25, X8

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x10A5000
	007 Move [X31+8], X1
	008 Move X21, 0xDBD000
	009 Move W8, [X20+3327]
	010 Move X21, [X21+2544]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDBD000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3327], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X31, 8
	027 Move X1, X31
	028 Call DateTime.get_Ticks, X0
	029 Move X8, [X19]
	030 Move X1, X0
	031 Move W2, 2
	032 Move X0, X19
	033 Move X9, [X8+376]
	034 Move X3, [X8+384]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X30, [X31+16]
	039 Move X21, [X31+24]
	040 Add X31, X31, 48
	041 Return X0

Method: System.Int32 GetMonthsInYear(System.Int32 year, System.Int32 era)

Disassembly:
	0x03338A7C CSEL X8, X8, X23, GT
	0x03338A80 CSEL W20, W9, W22, GT
	0x03338A84 CBZ W19, 0x3338B40
	0x03338A88 CMP W19, 0x1
	0x03338A8C SUB X20, X25, X8
	0x03338A90 B.EQ 0x3338B40

ISIL:
	001 Move [X31-16], X30
	002 Move W3, 1
	003 Call GregorianCalendarHelper.GetYearOffset, X0, X1, X2, X3
	004 Move W0, 12
	005 Move X30, [X31+16]
	006 Return X0

Method: System.Int32 GetYear(System.DateTime time)

Disassembly:
	0x03338A94 LDR X0, [X24]
	0x03338A98 MOV X21, X31
	0x03338A9C LDR W8, [X0 + 0xE0]
	0x03338AA0 CBNZ W8, 0x3338AAC
	0x03338AA4 BL 0x1C16DFC
	0x03338AA8 LDR X0, [X24]
	0x03338AAC LDR X8, [X0 + 0xB8]
	0x03338AB0 LDR X8, [X8 + 0x8]
	0x03338AB4 CBZ X8, 0x3338B5C
	0x03338AB8 LDR W9, [X8 + 0x18]
	0x03338ABC CMP X21, X9
	0x03338AC0 B.CS 0x3338B58
	0x03338AC4 ADD X9, X8, X21, 0x2, LSL
	0x03338AC8 LDRSW X9, [X9 + 0x20]
	0x03338ACC CMP X20, X9
	0x03338AD0 B.LE 0x3338AE8
	0x03338AD4 ADD X21, X21, 0x1
	0x03338AD8 CMP X21, 0xC
	0x03338ADC B.NE 0x3338A9C
	0x03338AE0 MOVZ W21, 0xD
	0x03338AE4 B 0x3338AEC
	0x03338AE8 ADD W21, W21, 0x1
	0x03338AEC CMP W19, 0x2
	0x03338AF0 B.NE 0x3338AFC
	0x03338AF4 SUB W20, W21, 0x1
	0x03338AF8 B 0x3338B40
	0x03338AFC LDR W9, [X0 + 0xE0]
	0x03338B00 CBNZ W9, 0x3338B18
	0x03338B04 BL 0x1C16DFC
	0x03338B08 LDR X8, [X24]
	0x03338B0C LDR X8, [X8 + 0xB8]
	0x03338B10 LDR X8, [X8 + 0x8]
	0x03338B14 CBZ X8, 0x3338B5C
	0x03338B18 LDR W10, [X8 + 0x18]
	0x03338B1C SXTW X9, W21
	0x03338B20 SUB X9, X9, 0x2
	0x03338B24 CMP W9, W10
	0x03338B28 B.CS 0x3338B58
	0x03338B2C CMP W19, 0x3
	0x03338B30 B.NE 0x3338B60
	0x03338B34 ADD X8, X8, X9, 0x2, LSL
	0x03338B38 LDR W8, [X8 + 0x20]
	0x03338B3C SUB W20, W20, W8
	0x03338B40 MOV W0, W20
	0x03338B44 LDP X20, X19, [X31 + 0x30]
	0x03338B48 LDP X22, X21, [X31 + 0x20]
	0x03338B4C LDP X24, X23, [X31 + 0x10]
	0x03338B50 LDP X30, X25, [X31], #0x40
	0x03338B54 RET
	0x03338B58 BL 0x1C16F28
	0x03338B5C BL 0x1C16F20
	0x03338B60 ADRP X0, 0xDF0000
	0x03338B64 LDR X0, [X0 + 0x998]
	0x03338B68 BL 0x1C16D08
	0x03338B6C MOV X1, X31
	0x03338B70 BL 0x33BDD84
	0x03338B74 MOV X19, X0
	0x03338B78 ADRP X0, 0xDBB000
	0x03338B7C LDR X0, [X0 + 0x5B0]
	0x03338B80 BL 0x1C16D08
	0x03338B84 BL 0x1C16F10
	0x03338B88 MOV X1, X19
	0x03338B8C MOV X2, X31
	0x03338B90 MOV X20, X0
	0x03338B94 BL 0x337DF1C
	0x03338B98 ADRP X0, 0xDF0000
	0x03338B9C LDR X0, [X0 + 0x9A0]
	0x03338BA0 BL 0x1C16D08
	0x03338BA4 MOV X1, X0
	0x03338BA8 MOV X0, X20
	0x03338BAC BL 0x1C16DEC
	0x03338BB0 SUB X31, X31, 0x30
	0x03338BB4 STP X30, X21, [X31 + 0x10]
	0x03338BB8 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x10A5000
	007 Move [X31+8], X1
	008 Move X21, 0xDBD000
	009 Move W8, [X20+3328]
	010 Move X21, [X21+2544]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDBD000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3328], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X31, 8
	027 Move X1, X31
	028 Call DateTime.get_Ticks, X0
	029 Move X8, [X19]
	030 Move X20, X0
	031 Move X0, X19
	032 Move X1, X20
	033 Move X9, [X8+376]
	034 Move X3, [X8+384]
	035 Move W2, W31
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X8, [X19+32]
	038 Compare X8, 0
	039 JumpIfEqual {81}
	040 Move W9, [X8+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W10, W31
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add X11, X8, W10
	045 Move X11, [X11+32]
	046 Compare X11, 0
	047 JumpIfEqual {81}
	048 Move X12, [X11+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add W10, W10, 1
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, 0xDF1000
	053 Move X0, [X0+2392]
	054 Call 0x1C17D08
	055 Move X1, X31
	056 Call Environment.GetResourceString, X0
	057 Move X19, X0
	058 Move X0, 0xDC4000
	059 Move X0, [X0+1400]
	060 Call 0x1C17D08
	061 Call 0x1C17F10
	062 Move X1, X19
	063 Move X2, X31
	064 Move X20, X0
	065 Call ArgumentException..ctor, X0, X1
	066 Move X0, 0xDF1000
	067 Move X0, [X0+2400]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X20
	071 Call 0x1C17DEC
	072 Move W8, [X11+32]
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X30, [X31+16]
	076 Move X21, [X31+24]
	077 Subtract W0, W0, W8
	078 Add X31, X31, 48
	079 Return X0
	080 Call 0x1C17F28
	081 Call 0x1C17F20

Method: System.Boolean IsLeapYear(System.Int32 year, System.Int32 era)

Disassembly:
	0x03338BBC ADRP X20, 0x10A4000
	0x03338BC0 STR X1, [X31 + 0x8]
	0x03338BC4 ADRP X21, 0xDBC000
	0x03338BC8 LDRB W8, [X20 + 0xD10]
	0x03338BCC LDR X21, [X21 + 0x9F0]
	0x03338BD0 MOV X19, X0
	0x03338BD4 TBNZ X8, 0x0, 0x3338BEC
	0x03338BD8 ADRP X0, 0xDBC000
	0x03338BDC LDR X0, [X0 + 0x9F0]
	0x03338BE0 BL 0x1C16CF4
	0x03338BE4 MOVZ W8, 0x1
	0x03338BE8 STRB W8, [X20 + 0xD10]
	0x03338BEC LDR X0, [X21]
	0x03338BF0 LDR W8, [X0 + 0xE0]
	0x03338BF4 CBNZ W8, 0x3338BFC
	0x03338BF8 BL 0x1C16DFC
	0x03338BFC ADD X0, X31, 0x8
	0x03338C00 MOV X1, X31
	0x03338C04 BL 0x3361708
	0x03338C08 LDR X8, [X19]
	0x03338C0C MOV X1, X0
	0x03338C10 MOVZ W2, 0x3
	0x03338C14 MOV X0, X19
	0x03338C18 LDR X9, [X8 + 0x318]
	0x03338C1C LDR X3, [X8 + 0x320]
	0x03338C20 BLR X9
	0x03338C24 LDP X20, X19, [X31 + 0x20]
	0x03338C28 LDP X30, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W3, 1
	004 Move W19, W1
	005 Call GregorianCalendarHelper.GetYearOffset, X0, X1, X2, X3
	006 Add W8, W0, W19
	007 And W31, W8, 3
	008 Move W0, W31
	009 Move W9, 0x5C29
	010 Move W10, 0xB850
	011 NotImplemented "Instruction MOVK not yet implemented."
	012 NotImplemented "Instruction MOVK not yet implemented."
	013 NotImplemented "Instruction MADD not yet implemented."
	014 Move W10, 0x5C28
	015 NotImplemented "Instruction EXTR not yet implemented."
	016 NotImplemented "Instruction MOVK not yet implemented."
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W0, 1
	019 Move W9, 0xD70B
	020 NotImplemented "Instruction EXTR not yet implemented."
	021 NotImplemented "Instruction MOVK not yet implemented."
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CSET not yet implemented."
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Return X0

Method: System.DateTime ToDateTime(System.Int32 year, System.Int32 month, System.Int32 day, System.Int32 hour, System.Int32 minute, System.Int32 second, System.Int32 millisecond, System.Int32 era)

Disassembly:
	0x03338C2C ADD X31, X31, 0x30
	0x03338C30 RET
	0x03338C34 STR X30, [X31 - 0x20]!
	0x03338C38 STP X20, X19, [X31 + 0x10]
	0x03338C3C ADRP X19, 0x10A4000
	0x03338C40 STR X1, [X31 + 0x8]
	0x03338C44 ADRP X20, 0xDBC000
	0x03338C48 LDRB W8, [X19 + 0xD11]
	0x03338C4C LDR X20, [X20 + 0x9F0]
	0x03338C50 TBNZ X8, 0x0, 0x3338C68
	0x03338C54 ADRP X0, 0xDBC000
	0x03338C58 LDR X0, [X0 + 0x9F0]
	0x03338C5C BL 0x1C16CF4
	0x03338C60 MOVZ W8, 0x1
	0x03338C64 STRB W8, [X19 + 0xD11]
	0x03338C68 LDR X0, [X20]
	0x03338C6C LDR W8, [X0 + 0xE0]
	0x03338C70 CBNZ W8, 0x3338C78
	0x03338C74 BL 0x1C16DFC
	0x03338C78 ADD X0, X31, 0x8
	0x03338C7C MOV X1, X31
	0x03338C80 BL 0x3361708
	0x03338C84 MOVZ X8, 0x81E3
	0x03338C88 MOVK X8, 0xE2050000
	0x03338C8C MOVK X8, 0xFF1D
	0x03338C90 MOVK X8, 0xA2E30000
	0x03338C94 SMULH X8, X0, X8, X31
	0x03338C98 ADD X8, X8, X0
	0x03338C9C UBFM X9, X8, 0x3F, 0x3F
	0x03338CA0 SBFM X8, X8, 0x27, 0x3F
	0x03338CA4 ADD W8, W8, W9
	0x03338CA8 MOVZ W9, 0x2493
	0x03338CAC ADD W8, W8, 0x1
	0x03338CB0 MOVK W9, 0x92490000
	0x03338CB4 SMADDL X9, X8, X9, X31
	0x03338CB8 UBFM X9, X9, 0x20, 0x3F
	0x03338CBC ADD W9, W9, W8
	0x03338CC0 SBFM W10, W9, 0x2, 0x1F
	0x03338CC4 LDP X20, X19, [X31 + 0x10]
	0x03338CC8 ADD W9, W10, W9, 0x1F, LSR
	0x03338CCC SUB W9, W9, W9, 0x3, LSL
	0x03338CD0 ADD W0, W8, W9
	0x03338CD4 LDR X30, [X31], #0x20
	0x03338CD8 RET
	0x03338CDC STR X30, [X31 - 0x40]!
	0x03338CE0 STP X24, X23, [X31 + 0x10]
	0x03338CE4 STP X22, X21, [X31 + 0x20]
	0x03338CE8 STP X20, X19, [X31 + 0x30]
	0x03338CEC ADRP X23, 0x10A4000
	0x03338CF0 ADRP X24, 0xDF0000
	0x03338CF4 LDRB W8, [X23 + 0xD12]
	0x03338CF8 LDR X24, [X24 + 0x970]
	0x03338CFC MOV W22, W3
	0x03338D00 MOV W21, W2
	0x03338D04 MOV W19, W1
	0x03338D08 MOV X20, X0
	0x03338D0C TBNZ X8, 0x0, 0x3338D24
	0x03338D10 ADRP X0, 0xDF0000
	0x03338D14 LDR X0, [X0 + 0x970]
	0x03338D18 BL 0x1C16CF4
	0x03338D1C MOVZ W8, 0x1
	0x03338D20 STRB W8, [X23 + 0xD12]
	0x03338D24 LDR X0, [X24]
	0x03338D28 LDR W8, [X0 + 0xE0]
	0x03338D2C CBNZ W8, 0x3338D34

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X29, 0x10A5000
	015 Move X28, 0xDF0000
	016 Move W8, [X29+3329]
	017 Move W27, [X31+112]
	018 Move X28, [X28+3000]
	019 Move W19, W7
	020 Move W21, W6
	021 Move W22, W5
	022 Move W23, W4
	023 Move W24, W3
	024 Move W25, W2
	025 Move W26, W1
	026 Move X20, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {36}
	031 Move X0, 0xDF0000
	032 Move X0, [X0+3000]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X29+3329], W8
	036 Move W3, 1
	037 Move X0, X20
	038 Move W1, W26
	039 Move W2, W27
	040 Call GregorianCalendarHelper.GetYearOffset, X0, X1, X2, X3
	041 Move X8, [X28]
	042 Move W27, W0
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Add W0, W27, W26
	049 Move W1, W25
	050 Move W2, W24
	051 Call GregorianCalendarHelper.DateToTicks, X0, X1, X2
	052 Move X24, X0
	053 Move W0, W23
	054 Move W1, W22
	055 Move W2, W21
	056 Move W3, W19
	057 Call GregorianCalendarHelper.TimeToTicks, X0, X1, X2, X3
	058 Add X19, X0, X24
	059 Move X0, X20
	060 Move X1, X19
	061 Call GregorianCalendarHelper.CheckTicksRange, X0, X1
	062 Add X0, X31, 8
	063 Move X1, X19
	064 Move X2, X31
	065 Move [X31+8], X31
	066 Call DateTime..ctor, X0, X1
	067 Move X0, [X31+8]
	068 Move X20, [X31+96]
	069 Move X19, [X31+104]
	070 Move X22, [X31+80]
	071 Move X21, [X31+88]
	072 Move X24, [X31+64]
	073 Move X23, [X31+72]
	074 Move X26, [X31+48]
	075 Move X25, [X31+56]
	076 Move X28, [X31+32]
	077 Move X27, [X31+40]
	078 Move X29, [X31+16]
	079 Move X30, [X31+24]
	080 Add X31, X31, 112
	081 Return X0

Method: System.Int32 ToFourDigitYear(System.Int32 year, System.Int32 twoDigitYearMax)

Disassembly:
	0x03338D30 BL 0x1C16DFC
	0x03338D34 MOV W0, W19
	0x03338D38 MOV W1, W21
	0x03338D3C MOV W2, W22
	0x03338D40 BL 0x33387C0
	0x03338D44 CMP W21, 0xC
	0x03338D48 B.NE 0x3338D78
	0x03338D4C LDR X8, [X20]
	0x03338D50 MOV X0, X20
	0x03338D54 MOV W1, W19
	0x03338D58 MOV W2, W31
	0x03338D5C LDR X9, [X8 + 0x288]
	0x03338D60 LDR X3, [X8 + 0x290]
	0x03338D64 BLR X9
	0x03338D68 ANDS W31, W0, 0x1
	0x03338D6C MOVZ W8, 0x1D
	0x03338D70 CINC W0, W8, NE
	0x03338D74 B 0x3338D94
	0x03338D78 CMP W21, 0x0
	0x03338D7C CINC W8, W21, LT
	0x03338D80 AND W8, W8, 0xFFFFFFFE
	0x03338D84 SUB W8, W21, W8
	0x03338D88 CMP W8, 0x1
	0x03338D8C MOVZ W8, 0x1D
	0x03338D90 CINC W0, W8, EQ
	0x03338D94 LDP X20, X19, [X31 + 0x30]
	0x03338D98 LDP X22, X21, [X31 + 0x20]
	0x03338D9C LDP X24, X23, [X31 + 0x10]
	0x03338DA0 LDR X30, [X31], #0x40
	0x03338DA4 RET
	0x03338DA8 STP X30, X23, [X31 - 0x30]!
	0x03338DAC STP X22, X21, [X31 + 0x10]
	0x03338DB0 STP X20, X19, [X31 + 0x20]
	0x03338DB4 ADRP X22, 0x10A4000
	0x03338DB8 ADRP X23, 0xDF0000
	0x03338DBC LDRB W8, [X22 + 0xD13]
	0x03338DC0 LDR X23, [X23 + 0x970]
	0x03338DC4 MOV W21, W2
	0x03338DC8 MOV W19, W1
	0x03338DCC MOV X20, X0
	0x03338DD0 TBNZ X8, 0x0, 0x3338DE8
	0x03338DD4 ADRP X0, 0xDF0000
	0x03338DD8 LDR X0, [X0 + 0x970]
	0x03338DDC BL 0x1C16CF4
	0x03338DE0 MOVZ W8, 0x1
	0x03338DE4 STRB W8, [X22 + 0xD13]
	0x03338DE8 LDR X0, [X23]
	0x03338DEC LDR W8, [X0 + 0xE0]
	0x03338DF0 CBNZ W8, 0x3338DF8
	0x03338DF4 BL 0x1C16DFC
	0x03338DF8 MOV W0, W19
	0x03338DFC MOV W1, W21
	0x03338E00 BL 0x3338650
	0x03338E04 LDR X8, [X20]
	0x03338E08 MOV X0, X20
	0x03338E0C MOV W1, W19
	0x03338E10 MOV W2, W31
	0x03338E14 LDR X9, [X8 + 0x288]
	0x03338E18 LDR X3, [X8 + 0x290]
	0x03338E1C BLR X9
	0x03338E20 LDP X20, X19, [X31 + 0x20]
	0x03338E24 LDP X22, X21, [X31 + 0x10]
	0x03338E28 ANDS W31, W0, 0x1
	0x03338E2C MOVZ W8, 0x162
	0x03338E30 CINC W0, W8, NE
	0x03338E34 LDP X30, X23, [X31], #0x30
	0x03338E38 RET
	0x03338E3C STR X30, [X31 - 0x20]!
	0x03338E40 STP X20, X19, [X31 + 0x10]
	0x03338E44 ADRP X20, 0x10A4000
	0x03338E48 STR X1, [X31 + 0x8]
	0x03338E4C ADRP X19, 0xDBC000
	0x03338E50 LDRB W8, [X20 + 0xD14]
	0x03338E54 LDR X19, [X19 + 0x9F0]
	0x03338E58 TBNZ X8, 0x0, 0x3338E7C
	0x03338E5C ADRP X0, 0xDBC000
	0x03338E60 LDR X0, [X0 + 0x9F0]
	0x03338E64 BL 0x1C16CF4
	0x03338E68 ADRP X0, 0xDF0000
	0x03338E6C LDR X0, [X0 + 0x970]
	0x03338E70 BL 0x1C16CF4
	0x03338E74 MOVZ W8, 0x1
	0x03338E78 STRB W8, [X20 + 0xD14]
	0x03338E7C LDR X0, [X19]
	0x03338E80 ADRP X20, 0xDF0000
	0x03338E84 LDR W8, [X0 + 0xE0]
	0x03338E88 LDR X20, [X20 + 0x970]
	0x03338E8C CBNZ W8, 0x3338E94
	0x03338E90 BL 0x1C16DFC
	0x03338E94 ADD X0, X31, 0x8
	0x03338E98 MOV X1, X31
	0x03338E9C BL 0x3361708
	0x03338EA0 LDR X8, [X20]
	0x03338EA4 MOV X19, X0
	0x03338EA8 LDR W9, [X8 + 0xE0]
	0x03338EAC CBNZ W9, 0x3338EB8
	0x03338EB0 MOV X0, X8

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move TEMP, X1
	009 And TEMP, TEMP, -2147483648
	010 Compare TEMP, -2147483648
	011 JumpIfEqual {82}
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move W8, [X0+20]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move W8, [X0+16]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X8, 0xDBE000
	018 Move X8, [X8+3144]
	019 Move X23, X0
	020 Move X0, X8
	021 Call 0x1C17D08
	022 Call 0x19913D0
	023 Move X0, X31
	024 Call CultureInfo.get_CurrentCulture
	025 Move X19, X0
	026 Move X0, 0xDEB000
	027 Move X0, [X0+880]
	028 Call 0x1C17D08
	029 Move X1, X31
	030 Call Environment.GetResourceString, X0
	031 Move W8, [X23+20]
	032 Move X21, 0xDBC000
	033 Move X20, X0
	034 Move [X31+12], W8
	035 Move X21, [X21+1880]
	036 Move X0, X21
	037 Call 0x1C17D08
	038 Add X1, X31, 12
	039 Call 0x1C17E04
	040 Move W8, [X23+16]
	041 Move X22, X0
	042 Move X0, X21
	043 Move [X31+8], W8
	044 Call 0x1C17D08
	045 Add X1, X31, 8
	046 Call 0x1C17E04
	047 Move X3, X0
	048 Move X0, X19
	049 Move X1, X20
	050 Move X2, X22
	051 Move X4, X31
	052 Call String.Format, X0, X1, X2, X3
	053 Move W9, 0x851F
	054 And W8, W1, 255
	055 NotImplemented "Instruction MOVK not yet implemented."
	056 NotImplemented "Instruction UMADDL not yet implemented."
	057 NotImplemented "Instruction SMADDL not yet implemented."
	058 Move X12, X9
	059 ShiftRight X12, 63
	060 And X12, X12, 0x7FFFFFFF
	061 NotImplemented "Instruction SBFM not yet implemented."
	062 Move W10, 100
	063 Move X11, X11
	064 ShiftRight X11, 37
	065 And X11, X11, 0x7FFFFFFF
	066 Add W9, W9, W12
	067 NotImplemented "Instruction MSUB not yet implemented."
	068 NotImplemented "Instruction MSUB not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CSET not yet implemented."
	071 Subtract W9, W9, W11
	072 NotImplemented "Instruction MADD not yet implemented."
	073 Move X20, [X31+48]
	074 Move X19, [X31+56]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X30, [X31+16]
	078 Move X23, [X31+24]
	079 Move W0, W1
	080 Add X31, X31, 64
	081 Return X0
	082 Move X0, 0xDEF000
	083 Move X0, [X0+3368]
	084 Call 0x1C17D08
	085 Move X1, X31
	086 Call Environment.GetResourceString, X0
	087 Move X19, X0
	088 Move X0, 0xDC4000
	089 Move X0, [X0+1888]
	090 Call 0x1C17D08
	091 Call 0x1C17F10
	092 Move X20, X0
	093 Move X0, 0xDF1000
	094 Move X0, [X0+1448]
	095 Call 0x1C17D08
	096 Move X1, X0
	097 Move X0, X20
	098 Move X2, X19
	099 Move X3, X31
	100 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	101 Move X0, 0xDF1000
	102 Move X0, [X0+2408]
	103 Call 0x1C17D08
	104 Move X1, X0
	105 Move X0, X20
	106 Call 0x1C17DEC

Method: System.Void .cctor()

Disassembly:
	0x03338EB4 BL 0x1C16DFC
	0x03338EB8 MOV X0, X19
	0x03338EBC BL 0x3338348
	0x03338EC0 LDR X8, [X20]
	0x03338EC4 LDP X20, X19, [X31 + 0x10]
	0x03338EC8 LDR X8, [X8 + 0xB8]
	0x03338ECC LDR W0, [X8]
	0x03338ED0 LDR X30, [X31], #0x20
	0x03338ED4 RET
	0x03338ED8 STP X30, X21, [X31 - 0x20]!
	0x03338EDC STP X20, X19, [X31 + 0x10]
	0x03338EE0 ADRP X19, 0x10A4000
	0x03338EE4 ADRP X21, 0xDBC000
	0x03338EE8 ADRP X20, 0xDF0000
	0x03338EEC LDRB W8, [X19 + 0xD15]
	0x03338EF0 LDR X21, [X21 + 0xE58]
	0x03338EF4 LDR X20, [X20 + 0x970]
	0x03338EF8 TBNZ X8, 0x0, 0x3338F1C
	0x03338EFC ADRP X0, 0xDF0000
	0x03338F00 LDR X0, [X0 + 0x970]
	0x03338F04 BL 0x1C16CF4
	0x03338F08 ADRP X0, 0xDBC000
	0x03338F0C LDR X0, [X0 + 0xE58]
	0x03338F10 BL 0x1C16CF4
	0x03338F14 MOVZ W8, 0x1
	0x03338F18 STRB W8, [X19 + 0xD15]
	0x03338F1C LDR X0, [X21]
	0x03338F20 MOVZ W1, 0x1
	0x03338F24 BL 0x1C16D6C
	0x03338F28 LDR X8, [X20]
	0x03338F2C MOV X19, X0
	0x03338F30 LDR W9, [X8 + 0xE0]
	0x03338F34 CBNZ W9, 0x3338F44
	0x03338F38 MOV X0, X8
	0x03338F3C BL 0x1C16DFC
	0x03338F40 LDR X8, [X20]
	0x03338F44 CBZ X19, 0x3338F6C
	0x03338F48 LDR W9, [X19 + 0x18]
	0x03338F4C CBZ W9, 0x3338F70
	0x03338F50 LDR X8, [X8 + 0xB8]
	0x03338F54 MOV X0, X19
	0x03338F58 LDR W8, [X8]
	0x03338F5C STR W8, [X19 + 0x20]
	0x03338F60 LDP X20, X19, [X31 + 0x10]
	0x03338F64 LDP X30, X21, [X31], #0x20
	0x03338F68 RET
	0x03338F6C BL 0x1C16F20
	0x03338F70 BL 0x1C16F28
	0x03338F74 SUB X31, X31, 0x30
	0x03338F78 STP X30, X21, [X31 + 0x10]
	0x03338F7C STP X20, X19, [X31 + 0x20]
	0x03338F80 ADRP X20, 0x10A4000
	0x03338F84 STR X1, [X31 + 0x8]
	0x03338F88 ADRP X21, 0xDBC000
	0x03338F8C LDRB W8, [X20 + 0xD16]
	0x03338F90 LDR X21, [X21 + 0x9F0]
	0x03338F94 MOV X19, X0
	0x03338F98 TBNZ X8, 0x0, 0x3338FB0
	0x03338F9C ADRP X0, 0xDBC000
	0x03338FA0 LDR X0, [X0 + 0x9F0]
	0x03338FA4 BL 0x1C16CF4
	0x03338FA8 MOVZ W8, 0x1
	0x03338FAC STRB W8, [X20 + 0xD16]
	0x03338FB0 LDR X0, [X21]
	0x03338FB4 LDR W8, [X0 + 0xE0]
	0x03338FB8 CBNZ W8, 0x3338FC0
	0x03338FBC BL 0x1C16DFC
	0x03338FC0 ADD X0, X31, 0x8
	0x03338FC4 MOV X1, X31
	0x03338FC8 BL 0x3361708
	0x03338FCC LDR X8, [X19]
	0x03338FD0 MOV X1, X0
	0x03338FD4 MOVZ W2, 0x2
	0x03338FD8 MOV X0, X19
	0x03338FDC LDR X9, [X8 + 0x318]
	0x03338FE0 LDR X3, [X8 + 0x320]
	0x03338FE4 BLR X9
	0x03338FE8 LDP X20, X19, [X31 + 0x20]
	0x03338FEC LDP X30, X21, [X31 + 0x10]
	0x03338FF0 ADD X31, X31, 0x30
	0x03338FF4 RET
	0x03338FF8 STR X30, [X31 - 0x30]!
	0x03338FFC STP X22, X21, [X31 + 0x10]
	0x03339000 STP X20, X19, [X31 + 0x20]
	0x03339004 ADRP X21, 0x10A3000
	0x03339008 ADRP X22, 0xDEF000
	0x0333900C LDRB W8, [X21 + 0xD17]
	0x03339010 LDR X22, [X22 + 0x970]
	0x03339014 MOV W19, W2
	0x03339018 MOV W20, W1
	0x0333901C TBNZ X8, 0x0, 0x3339034
	0x03339020 ADRP X0, 0xDEF000
	0x03339024 LDR X0, [X0 + 0x970]
	0x03339028 BL 0x1C16CF4
	0x0333902C MOVZ W8, 0x1
	0x03339030 STRB W8, [X21 + 0xD17]
	0x03339034 LDR X0, [X22]
	0x03339038 LDR W8, [X0 + 0xE0]
	0x0333903C CBNZ W8, 0x3339044
	0x03339040 BL 0x1C16DFC
	0x03339044 MOV W0, W20
	0x03339048 MOV W1, W19
	0x0333904C BL 0x3338650
	0x03339050 LDP X20, X19, [X31 + 0x20]
	0x03339054 LDP X22, X21, [X31 + 0x10]
	0x03339058 MOVZ W0, 0xC
	0x0333905C LDR X30, [X31], #0x30
	0x03339060 RET
	0x03339064 SUB X31, X31, 0x30
	0x03339068 STP X30, X21, [X31 + 0x10]
	0x0333906C STP X20, X19, [X31 + 0x20]
	0x03339070 ADRP X20, 0x10A3000
	0x03339074 STR X1, [X31 + 0x8]
	0x03339078 ADRP X21, 0xDBB000
	0x0333907C LDRB W8, [X20 + 0xD18]
	0x03339080 LDR X21, [X21 + 0x9F0]
	0x03339084 MOV X19, X0
	0x03339088 TBNZ X8, 0x0, 0x33390A0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x10A5000
	008 Move X22, 0xDBD000
	009 Move X19, 0xDF1000
	010 Move X20, 0xDF0000
	011 Move X21, 0xDF1000
	012 Move W8, [X23+3330]
	013 Move X22, [X22+3672]
	014 Move X19, [X19+2312]
	015 Move X20, [X20+3000]
	016 Move X21, [X21+2320]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0xDF0000
	022 Move X0, [X0+3000]
	023 Call 0x1C17CF4
	024 Move X0, 0xDBD000
	025 Move X0, [X0+3672]
	026 Call 0x1C17CF4
	027 Move X0, 0xDF1000
	028 Move X0, [X0+2312]
	029 Call 0x1C17CF4
	030 Move X0, 0xDF1000
	031 Move X0, [X0+2320]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+3330], W8
	035 Move X0, [X22]
	036 Move W1, 13
	037 Call 0x1C17D6C
	038 Move X1, [X19]
	039 Move X2, X31
	040 Move X19, X0
	041 Call RuntimeHelpers.InitializeArray, X0, X1
	042 Move X8, [X20]
	043 Move W1, 13
	044 Move X8, [X8+184]
	045 Move [X8], X19
	046 Move X0, [X22]
	047 Call 0x1C17D6C
	048 Move X1, [X21]
	049 Move X2, X31
	050 Move X19, X0
	051 Call RuntimeHelpers.InitializeArray, X0, X1
	052 Move X8, [X20]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X8, [X8+184]
	056 Move [X8+8], X19
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 Return 
	062 Move [X31-48], X30
	063 Move [X31+16], X22
	064 Move [X31+24], X21
	065 Move [X31+32], X20
	066 Move [X31+40], X19
	067 Move X22, 0x10A5000
	068 Move W8, [X22+3331]
	069 Move W19, W2
	070 Move X20, X1
	071 Move X21, X0
	072 Compare W8, 0
	073 JumpIfNotEqual {85}
	074 Move X0, 0xDEC000
	075 Move X0, [X0+2912]
	076 Call 0x1C17CF4
	077 Move X0, 0xDF1000
	078 Move X0, [X0+1224]
	079 Call 0x1C17CF4
	080 Move X0, 0xDF1000
	081 Move X0, [X0+1232]
	082 Call 0x1C17CF4
	083 Move W8, 1
	084 Move [X22+3331], W8
	085 Move X8, 0xDEC000
	086 Move X8, [X8+2912]
	087 Move X8, [X8]
	088 Move X8, [X8+184]
	089 Move W8, [X8+3]
	090 Compare W8, 0
	091 JumpIfNotEqual {129}
	092 Move X0, [X21+120]
	093 Compare X0, 0
	094 JumpIfEqual {136}
	095 Move X8, [X0]
	096 Move X9, [X8+424]
	097 Move X1, [X8+432]
	098 NotImplemented "Instruction BLR not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X21, 0xDF0000
	101 Move X21, [X21+1224]
	102 Move X0, [X21]
	103 Compare X0, 0
	104 JumpIfEqual {136}
	105 Move W1, W31
	106 Move X2, X31
	107 Call String.get_Chars, X0, X1
	108 And W8, W0, 0xFFFF
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move W0, 1
	111 Move X1, [X21]
	112 Move X0, X20
	113 Move X2, X31
	114 Call String.op_Equality, X0, X1
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {129}
	119 Move X8, 0xDF0000
	120 Move X8, [X8+1232]
	121 Move X0, [X8]
	122 Compare X0, 0
	123 JumpIfEqual {136}
	124 Move W1, W31
	125 Move X2, X31
	126 Call String.get_Chars, X0, X1
	127 And W8, W0, 0xFFFF
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move W0, W31
	130 Move X20, [X31+32]
	131 Move X19, [X31+40]
	132 Move X22, [X31+16]
	133 Move X21, [X31+24]
	134 Move X30, [X31+48]
	135 Return 
	136 Call 0x1C17F20

