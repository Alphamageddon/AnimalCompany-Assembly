Type: System.Globalization.HijriCalendar

Method: System.DateTime get_MinSupportedDateTime()

Disassembly:
	0x0333908C ADRP X0, 0xDBB000
	0x03339090 LDR X0, [X0 + 0x9F0]
	0x03339094 BL 0x1C16CF4
	0x03339098 MOVZ W8, 0x1
	0x0333909C STRB W8, [X20 + 0xD18]
	0x033390A0 LDR X0, [X21]
	0x033390A4 LDR W8, [X0 + 0xE0]
	0x033390A8 CBNZ W8, 0x33390B0
	0x033390AC BL 0x1C16DFC
	0x033390B0 ADD X0, X31, 0x8
	0x033390B4 MOV X1, X31
	0x033390B8 BL 0x3361708
	0x033390BC LDR X8, [X19]
	0x033390C0 MOV X1, X0
	0x033390C4 MOV X0, X19
	0x033390C8 MOV W2, W31
	0x033390CC LDR X9, [X8 + 0x318]
	0x033390D0 LDR X3, [X8 + 0x320]
	0x033390D4 BLR X9
	0x033390D8 LDP X20, X19, [X31 + 0x20]
	0x033390DC LDP X30, X21, [X31 + 0x10]
	0x033390E0 ADD X31, X31, 0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10A4000
	005 Move X19, 0xDF0000
	006 Move W8, [X20+3335]
	007 Move X19, [X19+2416]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDF0000
	013 Move X0, [X0+2416]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3335], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+16]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.DateTime get_MaxSupportedDateTime()

Disassembly:
	0x033390E4 RET
	0x033390E8 STR X30, [X31 - 0x30]!
	0x033390EC STP X22, X21, [X31 + 0x10]
	0x033390F0 STP X20, X19, [X31 + 0x20]
	0x033390F4 ADRP X21, 0x10A3000
	0x033390F8 ADRP X22, 0xDEF000
	0x033390FC LDRB W8, [X21 + 0xD19]
	0x03339100 LDR X22, [X22 + 0x970]
	0x03339104 MOV W20, W2
	0x03339108 MOV W19, W1
	0x0333910C TBNZ X8, 0x0, 0x3339124
	0x03339110 ADRP X0, 0xDEF000
	0x03339114 LDR X0, [X0 + 0x970]
	0x03339118 BL 0x1C16CF4
	0x0333911C MOVZ W8, 0x1
	0x03339120 STRB W8, [X21 + 0xD19]
	0x03339124 LDR X0, [X22]
	0x03339128 LDR W8, [X0 + 0xE0]
	0x0333912C CBNZ W8, 0x3339134
	0x03339130 BL 0x1C16DFC
	0x03339134 MOV W0, W19
	0x03339138 MOV W1, W20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10A4000
	005 Move X19, 0xDF0000
	006 Move W8, [X20+3336]
	007 Move X19, [X19+2416]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDF0000
	013 Move X0, [X0+2416]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3336], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+24]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void .ctor()

Disassembly:
	0x0333913C BL 0x3338650
	0x03339140 MOVZ W8, 0xB
	0x03339144 ORR W9, W31, 0xE
	0x03339148 MOVZ W10, 0x8889

ISIL:
	001 Move W8, 0x80000000
	002 Move X1, X31
	003 Move [X0+28], W8
	004 Call Calendar..ctor, X0
	005 Return 

Method: System.Int32 get_ID()

Disassembly:
	0x0333914C MOVK W10, 0x88880000
	0x03339150 MADD W8, W19, W8, W9

ISIL:
	001 Move W0, 6
	002 Return X0

Method: System.Int64 GetAbsoluteDateHijri(System.Int32 y, System.Int32 m, System.Int32 d)

Disassembly:
	0x03339154 SMADDL X9, X8, X10, X31
	0x03339158 UBFM X9, X9, 0x20, 0x3F
	0x0333915C ADD W9, W9, W8
	0x03339160 SBFM W10, W9, 0x4, 0x1F
	0x03339164 ADD W9, W10, W9, 0x1F, LSR
	0x03339168 MOVZ W10, 0x1E
	0x0333916C LDP X20, X19, [X31 + 0x20]
	0x03339170 LDP X22, X21, [X31 + 0x10]
	0x03339174 MSUB W8, W9, W10, W8
	0x03339178 CMP W8, 0xB
	0x0333917C CSET W0, LT
	0x03339180 LDR X30, [X31], #0x30
	0x03339184 RET
	0x03339188 SUB X31, X31, 0x60
	0x0333918C STR X30, [X31 + 0x10]
	0x03339190 STP X26, X25, [X31 + 0x20]
	0x03339194 STP X24, X23, [X31 + 0x30]
	0x03339198 STP X22, X21, [X31 + 0x40]
	0x0333919C STP X20, X19, [X31 + 0x50]
	0x033391A0 LDR X8, [X0]
	0x033391A4 MOV W23, W4
	0x033391A8 MOV W24, W3
	0x033391AC LDR W3, [X31 + 0x60]
	0x033391B0 LDR X9, [X8 + 0x208]
	0x033391B4 LDR X4, [X8 + 0x210]
	0x033391B8 MOV W20, W7
	0x033391BC MOV W21, W6
	0x033391C0 MOV W22, W5
	0x033391C4 MOV W19, W2
	0x033391C8 MOV X25, X0
	0x033391CC MOV W26, W1
	0x033391D0 BLR X9
	0x033391D4 CMP W24, 0x1
	0x033391D8 B.LT 0x3339254
	0x033391DC CMP W0, W24
	0x033391E0 B.LT 0x3339254
	0x033391E4 MOV X0, X25
	0x033391E8 MOV W1, W26
	0x033391EC MOV W2, W19
	0x033391F0 MOV W3, W24
	0x033391F4 BL 0x3338154
	0x033391F8 TBNZ X0, 0x0, 0x3339308
	0x033391FC MOV X19, X0
	0x03339200 MOV W0, W23
	0x03339204 MOV W1, W22
	0x03339208 MOV W2, W21
	0x0333920C MOV W3, W20
	0x03339210 MOV X4, X31
	0x03339214 BL 0x3333430
	0x03339218 MOVZ X8, 0xC000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x10A4000
	009 Move X23, 0xDF0000
	010 Move W8, [X24+3337]
	011 Move X23, [X23+2416]
	012 Move W19, W3
	013 Move W21, W2
	014 Move W22, W1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xDF0000
	021 Move X0, [X0+2416]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+3337], W8
	025 Move X0, X20
	026 Move W1, W22
	027 Call HijriCalendar.DaysUpToHijriYear, X0, X1
	028 Move X8, [X23]
	029 Move X22, X0
	030 Move W9, [X8+224]
	031 Compare W9, 0
	032 JumpIfNotEqual {36}
	033 Move X0, X8
	034 Call 0x1C17DFC
	035 Move X8, [X23]
	036 Move X8, [X8+184]
	037 Move X8, [X8+8]
	038 Compare X8, 0
	039 JumpIfEqual {59}
	040 Move W10, [X8+24]
	041 Subtract W9, W21, 1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Add X8, X8, W9
	044 NotImplemented "Instruction LDRSW not yet implemented."
	045 Move X0, X20
	046 Call HijriCalendar.get_HijriAdjustment, X0
	047 Add X9, X22, W19
	048 Add X9, X9, X21
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X22, [X31+32]
	052 Move X21, [X31+40]
	053 Move X24, [X31+16]
	054 Move X23, [X31+24]
	055 NotImplemented "Instruction ORN not yet implemented."
	056 Add X0, X9, W8
	057 Move X30, [X31+64]
	058 Return X0
	059 Call 0x1C17F20
	060 Call 0x1C17F28

Method: System.Int64 DaysUpToHijriYear(System.Int32 HijriYear)

Disassembly:
	0x0333921C MOVK X8, 0x2A690000
	0x03339220 MOVK X8, 0xC9
	0x03339224 MADD X1, X19, X8, X0
	0x03339228 ADD X0, X31, 0x18
	0x0333922C MOV X2, X31
	0x03339230 STR X31, [X31 + 0x18]
	0x03339234 BL 0x335EEB0
	0x03339238 LDP X30, X0, [X31 + 0x10]
	0x0333923C LDP X20, X19, [X31 + 0x50]
	0x03339240 LDP X22, X21, [X31 + 0x40]
	0x03339244 LDP X24, X23, [X31 + 0x30]
	0x03339248 LDP X26, X25, [X31 + 0x20]
	0x0333924C ADD X31, X31, 0x60
	0x03339250 RET
	0x03339254 ADRP X8, 0xDBC000
	0x03339258 LDR X8, [X8 + 0xC48]
	0x0333925C MOV W22, W0
	0x03339260 MOV X0, X8
	0x03339264 BL 0x1C16D08
	0x03339268 BL 0x19903D0
	0x0333926C BL 0x33387A0
	0x03339270 MOV X20, X0
	0x03339274 ADRP X0, 0xDEF000
	0x03339278 LDR X0, [X0 + 0x9A8]
	0x0333927C BL 0x1C16D08
	0x03339280 MOV X1, X31
	0x03339284 BL 0x33BDD84
	0x03339288 STR W22, [X31 + 0xC]
	0x0333928C ADRP X22, 0xDBA000
	0x03339290 LDR X22, [X22 + 0x758]
	0x03339294 MOV X21, X0
	0x03339298 MOV X0, X22
	0x0333929C BL 0x1C16D08
	0x033392A0 ADD X1, X31, 0xC
	0x033392A4 BL 0x1C16E04
	0x033392A8 MOV X23, X0
	0x033392AC MOV X0, X22
	0x033392B0 STR W19, [X31 + 0x8]
	0x033392B4 BL 0x1C16D08
	0x033392B8 ADD X1, X31, 0x8
	0x033392BC BL 0x1C16E04
	0x033392C0 MOV X3, X0
	0x033392C4 MOV X0, X20
	0x033392C8 MOV X1, X21
	0x033392CC MOV X2, X23
	0x033392D0 MOV X4, X31
	0x033392D4 BL 0x3227D58

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W9, 0x8889
	007 Subtract W8, W1, 1
	008 NotImplemented "Instruction MOVK not yet implemented."
	009 NotImplemented "Instruction SMADDL not yet implemented."
	010 Move X9, X9
	011 ShiftRight X9, 32
	012 And X9, X9, 0x7FFFFFFF
	013 Add W8, W9, W8
	014 NotImplemented "Instruction SBFM not yet implemented."
	015 Move W10, 30
	016 Add W8, W9, W8
	017 Multiply W8, W8, W10
	018 Move W11, 0x2987
	019 Or X9, X31, -8608480567731124088
	020 NotImplemented "Instruction ORN not yet implemented."
	021 NotImplemented "Instruction MOVK not yet implemented."
	022 Add W20, W10, W1
	023 NotImplemented "Instruction SMADDL not yet implemented."
	024 NotImplemented "Instruction SMULH not yet implemented."
	025 NotImplemented "Instruction SMADDL not yet implemented."
	026 Move W10, 0x76C5
	027 NotImplemented "Instruction SBFM not yet implemented."
	028 NotImplemented "Instruction MOVK not yet implemented."
	029 Add X8, X9, X8
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Add X21, X8, X10
	032 Move X19, X0
	033 Move W22, 354
	034 Move X8, [X19]
	035 Move X0, X19
	036 Move W1, W20
	037 Move W2, W31
	038 Move X9, [X8+648]
	039 Move X3, [X8+656]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 And W31, W0, 1
	042 NotImplemented "Instruction CINC not yet implemented."
	043 Subtract W20, W20, 1
	044 Add X21, X8, X21
	045 Move X0, X21
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X30, [X31+48]
	051 Return X0

Method: System.Int32 get_HijriAdjustment()

Disassembly:
	0x033392D8 MOV X19, X0
	0x033392DC ADRP X0, 0xDC2000
	0x033392E0 LDR X0, [X0 + 0x760]
	0x033392E4 BL 0x1C16D08
	0x033392E8 BL 0x1C16F10
	0x033392EC MOV X20, X0
	0x033392F0 ADRP X0, 0xDEE000
	0x033392F4 LDR X0, [X0 + 0xDB8]
	0x033392F8 BL 0x1C16D08
	0x033392FC MOV X1, X0
	0x03339300 MOV X0, X20
	0x03339304 B 0x3339338
	0x03339308 ADRP X0, 0xDEF000
	0x0333930C LDR X0, [X0 + 0x8B8]
	0x03339310 BL 0x1C16D08
	0x03339314 MOV X1, X31
	0x03339318 BL 0x33BDD84
	0x0333931C MOV X19, X0
	0x03339320 ADRP X0, 0xDC2000
	0x03339324 LDR X0, [X0 + 0x760]
	0x03339328 BL 0x1C16D08
	0x0333932C BL 0x1C16F10
	0x03339330 MOV X20, X0
	0x03339334 MOV X1, X31
	0x03339338 MOV X2, X19
	0x0333933C MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10A4000
	005 Move W8, [X20+3338]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xDF0000
	012 Move X0, [X0+2416]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3338], W8
	016 Move W0, [X19+28]
	017 Move W8, 0x80000000
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X8, 0xDF0000
	020 Move X8, [X8+2416]
	021 Move X0, [X8]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W0, W31
	027 Move [X19+28], W31
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0

Method: System.Int32 GetAdvanceHijriDate()

Disassembly:
	0x03339340 BL 0x3311888
	0x03339344 ADRP X0, 0xDEF000

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void CheckTicksRange(System.Int64 ticks)

Disassembly:
	0x03339348 LDR X0, [X0 + 0x9B0]
	0x0333934C BL 0x1C16D08
	0x03339350 MOV X1, X0
	0x03339354 MOV X0, X20
	0x03339358 BL 0x1C16DEC
	0x0333935C STP X30, X19, [X31 - 0x10]!
	0x03339360 MOV X19, X0
	0x03339364 LDR W0, [X0 + 0x18]
	0x03339368 ADDS W31, W0, 0x1
	0x0333936C B.NE 0x3339390
	0x03339370 LDR X8, [X19]
	0x03339374 MOV X0, X19
	0x03339378 LDP X9, X1, [X8 + 0x1A8]
	0x0333937C BLR X9
	0x03339380 MOVZ W1, 0x5AB
	0x03339384 MOV X2, X31
	0x03339388 BL 0x33335E0
	0x0333938C STR W0, [X19 + 0x18]
	0x03339390 LDP X30, X19, [X31], #0x10
	0x03339394 RET
	0x03339398 STR X30, [X31 - 0x30]!
	0x0333939C STP X22, X21, [X31 + 0x10]
	0x033393A0 STP X20, X19, [X31 + 0x20]
	0x033393A4 MOV W19, W1
	0x033393A8 MOV X1, X31
	0x033393AC MOV X20, X0
	0x033393B0 BL 0x3332E70
	0x033393B4 SUB W8, W19, 0x63
	0x033393B8 UBFM W8, W8, 0x5, 0x1F
	0x033393BC CMP W8, 0x12B
	0x033393C0 B.CS 0x33393D8
	0x033393C4 STR W19, [X20 + 0x18]
	0x033393C8 LDP X20, X19, [X31 + 0x20]
	0x033393CC LDP X22, X21, [X31 + 0x10]
	0x033393D0 LDR X30, [X31], #0x30
	0x033393D4 RET
	0x033393D8 ADRP X0, 0xDBC000
	0x033393DC LDR X0, [X0 + 0xC48]
	0x033393E0 BL 0x1C16D08
	0x033393E4 BL 0x19903D0
	0x033393E8 BL 0x33387A0
	0x033393EC MOV X19, X0
	0x033393F0 ADRP X0, 0xDE9000
	0x033393F4 LDR X0, [X0 + 0x370]
	0x033393F8 BL 0x1C16D08
	0x033393FC MOV X1, X31
	0x03339400 BL 0x33BDD84
	0x03339404 MOVZ W8, 0x63
	0x03339408 STR W8, [X31 + 0xC]
	0x0333940C ADRP X21, 0xDBA000
	0x03339410 LDR X21, [X21 + 0x758]
	0x03339414 MOV X20, X0
	0x03339418 MOV X0, X21
	0x0333941C BL 0x1C16D08
	0x03339420 ADD X1, X31, 0xC
	0x03339424 BL 0x1C16E04
	0x03339428 MOV X22, X0
	0x0333942C MOVZ W8, 0x25C2
	0x03339430 MOV X0, X21
	0x03339434 STR W8, [X31 + 0x8]
	0x03339438 BL 0x1C16D08
	0x0333943C ADD X1, X31, 0x8
	0x03339440 BL 0x1C16E04
	0x03339444 MOV X3, X0
	0x03339448 MOV X0, X19
	0x0333944C MOV X1, X20
	0x03339450 MOV X2, X22
	0x03339454 MOV X4, X31
	0x03339458 BL 0x3227D58
	0x0333945C MOV X19, X0
	0x03339460 ADRP X0, 0xDC2000
	0x03339464 LDR X0, [X0 + 0x760]
	0x03339468 BL 0x1C16D08
	0x0333946C BL 0x1C16F10
	0x03339470 MOV X20, X0
	0x03339474 ADRP X0, 0xDC4000
	0x03339478 LDR X0, [X0 + 0xEC8]
	0x0333947C BL 0x1C16D08
	0x03339480 MOV X1, X0
	0x03339484 MOV X0, X20
	0x03339488 MOV X2, X19
	0x0333948C MOV X3, X31
	0x03339490 BL 0x3311888
	0x03339494 ADRP X0, 0xDEF000
	0x03339498 LDR X0, [X0 + 0x9B8]
	0x0333949C BL 0x1C16D08
	0x033394A0 MOV X1, X0
	0x033394A4 MOV X0, X20
	0x033394A8 BL 0x1C16DEC
	0x033394AC STR X30, [X31 - 0x30]!
	0x033394B0 STP X22, X21, [X31 + 0x10]
	0x033394B4 STP X20, X19, [X31 + 0x20]
	0x033394B8 TBNZ X1, 0x1F, 0x33394F8
	0x033394BC CMP W1, 0x63
	0x033394C0 B.LE 0x33394E4
	0x033394C4 MOVZ W8, 0x25C3
	0x033394C8 CMP W1, W8
	0x033394CC B.GE 0x3339510
	0x033394D0 LDP X20, X19, [X31 + 0x20]
	0x033394D4 LDP X22, X21, [X31 + 0x10]
	0x033394D8 MOV W0, W1
	0x033394DC LDR X30, [X31], #0x30
	0x033394E0 RET
	0x033394E4 LDP X20, X19, [X31 + 0x20]
	0x033394E8 LDP X22, X21, [X31 + 0x10]
	0x033394EC MOV X2, X31
	0x033394F0 LDR X30, [X31], #0x30
	0x033394F4 B 0x3333338
	0x033394F8 ADRP X0, 0xDE2000
	0x033394FC LDR X0, [X0 + 0x670]
	0x03339500 BL 0x1C16D08
	0x03339504 MOV X1, X31
	0x03339508 BL 0x33BDD84
	0x0333950C B 0x3339594
	0x03339510 ADRP X0, 0xDBC000
	0x03339514 LDR X0, [X0 + 0xC48]
	0x03339518 BL 0x1C16D08
	0x0333951C BL 0x19903D0
	0x03339520 BL 0x33387A0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x10A4000
	009 Move X20, 0xDF0000
	010 Move W8, [X21+3339]
	011 Move X20, [X20+2416]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xDBC000
	018 Move X0, [X0+2544]
	019 Call 0x1C17CF4
	020 Move X0, 0xDF0000
	021 Move X0, [X0+2416]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3339], W8
	025 Move X0, [X20]
	026 Move X21, 0xDBC000
	027 Move W8, [X0+224]
	028 Move X21, [X21+2544]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, [X21]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X8, [X20]
	038 Move X1, X31
	039 Move X8, [X8+184]
	040 Add X0, X8, 16
	041 Call DateTime.get_Ticks, X0
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, [X20]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, [X21]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X8, [X20]
	054 Move X1, X31
	055 Move X8, [X8+184]
	056 Add X0, X8, 24
	057 Call DateTime.get_Ticks, X0
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X22, [X31+32]
	062 Move X21, [X31+40]
	063 Move X30, [X31+16]
	064 Move X23, [X31+24]
	065 Add X31, X31, 64
	066 Return 
	067 Move X0, 0xDBD000
	068 Move X0, [X0+3144]
	069 Call 0x1C17D08
	070 Call 0x19913D0
	071 Call CultureInfo.get_InvariantCulture
	072 Move X19, X0
	073 Move X0, 0xDF0000
	074 Move X0, [X0+2336]
	075 Call 0x1C17D08
	076 Move X1, X31
	077 Call Environment.GetResourceString, X0
	078 Move X21, 0xDF0000
	079 Move X21, [X21+2416]
	080 Move X20, X0
	081 Move X0, X21
	082 Call 0x1C17D08
	083 Call 0x19913D0
	084 Move X0, X21
	085 Call 0x1C17D08
	086 Move X8, [X0+184]
	087 Move X22, 0xDBC000
	088 Move X8, [X8+16]
	089 Move [X31+8], X8
	090 Move X22, [X22+2544]
	091 Move X0, X22
	092 Call 0x1C17D08
	093 Add X1, X31, 8
	094 Call 0x1C17E04
	095 Move X23, X0
	096 Move X0, X21
	097 Call 0x1C17D08
	098 Move X8, [X0+184]
	099 Move X0, X22
	100 Move X8, [X8+24]
	101 Move [X31], X8
	102 Call 0x1C17D08
	103 Add X1, X31, 0
	104 Call 0x1C17E04
	105 Move X3, X0
	106 Move X0, X19
	107 Move X1, X20
	108 Move X2, X23
	109 Move X4, X31
	110 Call String.Format, X0, X1, X2, X3
	111 Move X19, X0
	112 Move X0, 0xDC3000
	113 Move X0, [X0+1888]
	114 Call 0x1C17D08
	115 Call 0x1C17F10
	116 Move X20, X0
	117 Move X0, 0xDE8000
	118 Move X0, [X0+24]
	119 Call 0x1C17D08
	120 Move X1, X0
	121 Move X0, X20
	122 Move X2, X19
	123 Move X3, X31
	124 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	125 Move X0, 0xDF0000
	126 Move X0, [X0+2424]
	127 Call 0x1C17D08
	128 Move X1, X0
	129 Move X0, X20
	130 Call 0x1C17DEC

Method: System.Void CheckEraRange(System.Int32 era)

Disassembly:
	0x03339584 MOV X1, X20
	0x03339588 MOV X2, X22
	0x0333958C MOV X4, X31
	0x03339590 BL 0x3227D58
	0x03339594 MOV X19, X0
	0x03339598 ADRP X0, 0xDC2000
	0x0333959C LDR X0, [X0 + 0x760]
	0x033395A0 BL 0x1C16D08
	0x033395A4 BL 0x1C16F10
	0x033395A8 MOV X20, X0
	0x033395AC ADRP X0, 0xDEF000
	0x033395B0 LDR X0, [X0 + 0x5A8]
	0x033395B4 BL 0x1C16D08
	0x033395B8 MOV X1, X0
	0x033395BC MOV X0, X20
	0x033395C0 MOV X2, X19
	0x033395C4 MOV X3, X31
	0x033395C8 BL 0x3311888
	0x033395CC ADRP X0, 0xDEF000
	0x033395D0 LDR X0, [X0 + 0x9C0]
	0x033395D4 BL 0x1C16D08
	0x033395D8 MOV X1, X0
	0x033395DC MOV X0, X20
	0x033395E0 BL 0x1C16DEC
	0x033395E4 SUB X31, X31, 0x40
	0x033395E8 STP X30, X23, [X31 + 0x10]
	0x033395EC STP X22, X21, [X31 + 0x20]
	0x033395F0 STP X20, X19, [X31 + 0x30]
	0x033395F4 ADRP X23, 0x10A3000
	0x033395F8 ADRP X20, 0xDEF000
	0x033395FC ADRP X22, 0xDBB000
	0x03339600 ADRP X19, 0xDEF000
	0x03339604 ADRP X21, 0xDBB000
	0x03339608 LDRB W8, [X23 + 0xD1A]
	0x0333960C LDR X20, [X20 + 0x970]
	0x03339610 LDR X22, [X22 + 0xE58]
	0x03339614 LDR X19, [X19 + 0x9C8]
	0x03339618 LDR X21, [X21 + 0x9F0]
	0x0333961C TBNZ X8, 0x0, 0x3339658
	0x03339620 ADRP X0, 0xDBB000
	0x03339624 LDR X0, [X0 + 0x9F0]
	0x03339628 BL 0x1C16CF4
	0x0333962C ADRP X0, 0xDEF000
	0x03339630 LDR X0, [X0 + 0x970]
	0x03339634 BL 0x1C16CF4
	0x03339638 ADRP X0, 0xDBB000
	0x0333963C LDR X0, [X0 + 0xE58]
	0x03339640 BL 0x1C16CF4
	0x03339644 ADRP X0, 0xDEF000
	0x03339648 LDR X0, [X0 + 0x9C8]
	0x0333964C BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10A4000
	005 Move W8, [X20+3340]
	006 Move W19, W0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xDF0000
	012 Move X0, [X0+2416]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3340], W8
	016 Compare W19, 0
	017 JumpIfEqual {29}
	018 Move X20, 0xDF0000
	019 Move X20, [X20+2416]
	020 Move X0, [X20]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X20]
	026 Move X8, [X0+184]
	027 Move W8, [X8]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return 
	033 Move X0, 0xDF0000
	034 Move X0, [X0+840]
	035 Call 0x1C17D08
	036 Move X1, X31
	037 Call Environment.GetResourceString, X0
	038 Move X19, X0
	039 Move X0, 0xDC3000
	040 Move X0, [X0+1888]
	041 Call 0x1C17D08
	042 Call 0x1C17F10
	043 Move X20, X0
	044 Move X0, 0xDF0000
	045 Move X0, [X0+832]
	046 Call 0x1C17D08
	047 Move X1, X0
	048 Move X0, X20
	049 Move X2, X19
	050 Move X3, X31
	051 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	052 Move X0, 0xDF0000
	053 Move X0, [X0+2432]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X20
	057 Call 0x1C17DEC

Method: System.Void CheckYearRange(System.Int32 year, System.Int32 era)

Disassembly:
	0x03339650 MOVZ W8, 0x1
	0x03339654 STRB W8, [X23 + 0xD1A]
	0x03339658 LDR X8, [X20]
	0x0333965C MOVZ W9, 0x1
	0x03339660 MOVZ W1, 0xD
	0x03339664 LDR X8, [X8 + 0xB8]
	0x03339668 STR W9, [X8]
	0x0333966C LDR X0, [X22]
	0x03339670 BL 0x1C16D6C
	0x03339674 LDR X1, [X19]
	0x03339678 MOV X2, X31
	0x0333967C MOV X19, X0
	0x03339680 BL 0x32C5BD8
	0x03339684 LDR X8, [X20]
	0x03339688 ADD X0, X31, 0x8
	0x0333968C MOVZ W1, 0x26E
	0x03339690 MOVZ W2, 0x7
	0x03339694 LDR X8, [X8 + 0xB8]
	0x03339698 MOVZ W3, 0x12
	0x0333969C MOV X4, X31
	0x033396A0 STR X19, [X8 + 0x8]
	0x033396A4 STR X31, [X31 + 0x8]
	0x033396A8 BL 0x335F0C4
	0x033396AC LDR X8, [X20]
	0x033396B0 LDR X9, [X31 + 0x8]
	0x033396B4 LDR X8, [X8 + 0xB8]
	0x033396B8 STR X9, [X8 + 0x10]
	0x033396BC LDR X0, [X21]
	0x033396C0 LDR W9, [X0 + 0xE0]
	0x033396C4 CBNZ W9, 0x33396D8
	0x033396C8 BL 0x1C16DFC
	0x033396CC LDR X8, [X20]
	0x033396D0 LDR X0, [X21]
	0x033396D4 LDR X8, [X8 + 0xB8]
	0x033396D8 LDR X9, [X0 + 0xB8]
	0x033396DC LDP X20, X19, [X31 + 0x30]
	0x033396E0 LDP X22, X21, [X31 + 0x20]
	0x033396E4 LDP X30, X23, [X31 + 0x10]
	0x033396E8 LDR X9, [X9 + 0x18]
	0x033396EC STR X9, [X8 + 0x18]
	0x033396F0 ADD X31, X31, 0x40
	0x033396F4 RET
	0x033396F8 STR X30, [X31 - 0x20]!
	0x033396FC STP X20, X19, [X31 + 0x10]
	0x03339700 ADRP X20, 0x10A3000
	0x03339704 ADRP X19, 0xDEF000
	0x03339708 LDRB W8, [X20 + 0xD1B]
	0x0333970C LDR X19, [X19 + 0x408]
	0x03339710 TBNZ X8, 0x0, 0x3339728
	0x03339714 ADRP X0, 0xDEF000
	0x03339718 LDR X0, [X0 + 0x408]
	0x0333971C BL 0x1C16CF4
	0x03339720 MOVZ W8, 0x1
	0x03339724 STRB W8, [X20 + 0xD1B]
	0x03339728 LDR X0, [X19]
	0x0333972C LDR W8, [X0 + 0xE0]
	0x03339730 CBNZ W8, 0x333973C
	0x03339734 BL 0x1C16DFC
	0x03339738 LDR X0, [X19]
	0x0333973C LDR X8, [X0 + 0xB8]
	0x03339740 LDP X20, X19, [X31 + 0x10]
	0x03339744 LDR X0, [X8]
	0x03339748 LDR X30, [X31], #0x20
	0x0333974C RET
	0x03339750 STR X30, [X31 - 0x20]!
	0x03339754 STP X20, X19, [X31 + 0x10]
	0x03339758 ADRP X20, 0x10A3000
	0x0333975C ADRP X19, 0xDBB000
	0x03339760 LDRB W8, [X20 + 0xD1C]
	0x03339764 LDR X19, [X19 + 0x9F0]
	0x03339768 TBNZ X8, 0x0, 0x3339780
	0x0333976C ADRP X0, 0xDBB000
	0x03339770 LDR X0, [X0 + 0x9F0]
	0x03339774 BL 0x1C16CF4
	0x03339778 MOVZ W8, 0x1
	0x0333977C STRB W8, [X20 + 0xD1C]
	0x03339780 LDR X0, [X19]
	0x03339784 LDR W8, [X0 + 0xE0]
	0x03339788 CBNZ W8, 0x3339794
	0x0333978C BL 0x1C16DFC
	0x03339790 LDR X0, [X19]
	0x03339794 LDR X8, [X0 + 0xB8]
	0x03339798 LDP X20, X19, [X31 + 0x10]
	0x0333979C LDR X0, [X8 + 0x18]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x10A4000
	009 Move X22, 0xDF0000
	010 Move W8, [X21+3341]
	011 Move X22, [X22+2416]
	012 Move W20, W1
	013 Move W19, W0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xDF0000
	019 Move X0, [X0+2416]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+3341], W8
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move W0, W20
	029 Call HijriCalendar.CheckEraRange, X0
	030 Subtract W8, W19, 1
	031 Move W9, 0x25C2
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X20, [X31+48]
	034 Move X19, [X31+56]
	035 Move X22, [X31+32]
	036 Move X21, [X31+40]
	037 Move X30, [X31+16]
	038 Move X23, [X31+24]
	039 Add X31, X31, 64
	040 Return 
	041 Move X0, 0xDBD000
	042 Move X0, [X0+3144]
	043 Move W23, 0x25C2
	044 Call 0x1C17D08
	045 Call 0x19913D0
	046 Call CultureInfo.get_CurrentCulture
	047 Move X19, X0
	048 Move X0, 0xDEA000
	049 Move X0, [X0+880]
	050 Call 0x1C17D08
	051 Move X1, X31
	052 Call Environment.GetResourceString, X0
	053 Move W8, 1
	054 Move [X31+12], W8
	055 Move X21, 0xDBB000
	056 Move X21, [X21+1880]
	057 Move X20, X0
	058 Move X0, X21
	059 Call 0x1C17D08
	060 Add X1, X31, 12
	061 Call 0x1C17E04
	062 Move X22, X0
	063 Move X0, X21
	064 Move [X31+8], W23
	065 Call 0x1C17D08
	066 Add X1, X31, 8
	067 Call 0x1C17E04
	068 Move X3, X0
	069 Move X0, X19
	070 Move X1, X20
	071 Move X2, X22
	072 Move X4, X31
	073 Call String.Format, X0, X1, X2, X3
	074 Move X19, X0
	075 Move X0, 0xDC3000
	076 Move X0, [X0+1888]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X20, X0
	080 Move X0, 0xDF0000
	081 Move X0, [X0+1448]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X20
	085 Move X2, X19
	086 Move X3, X31
	087 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	088 Move X0, 0xDF0000
	089 Move X0, [X0+2440]
	090 Call 0x1C17D08
	091 Move X1, X0
	092 Move X0, X20
	093 Call 0x1C17DEC

Method: System.Void CheckYearMonthRange(System.Int32 year, System.Int32 month, System.Int32 era)

Disassembly:
	0x033397C0 LDRB W8, [X19 + 0xD1D]
	0x033397C4 LDR X21, [X21 + 0x408]
	0x033397C8 TBNZ X8, 0x0, 0x33398AC
	0x033397CC ADRP X0, 0xDEF000
	0x033397D0 LDR X0, [X0 + 0x9D0]
	0x033397D4 BL 0x1C16CF4
	0x033397D8 ADRP X0, 0xDEF000
	0x033397DC LDR X0, [X0 + 0x9D8]
	0x033397E0 BL 0x1C16CF4
	0x033397E4 ADRP X0, 0xDEF000
	0x033397E8 LDR X0, [X0 + 0x408]
	0x033397EC BL 0x1C16CF4
	0x033397F0 ADRP X0, 0xDEF000
	0x033397F4 LDR X0, [X0 + 0x9E0]
	0x033397F8 BL 0x1C16CF4
	0x033397FC ADRP X0, 0xDEB000
	0x03339800 LDR X0, [X0 + 0x1D0]
	0x03339804 BL 0x1C16CF4
	0x03339808 ADRP X0, 0xDEF000
	0x0333980C LDR X0, [X0 + 0x9E8]
	0x03339810 BL 0x1C16CF4
	0x03339814 ADRP X0, 0xDEF000
	0x03339818 LDR X0, [X0 + 0x9F0]
	0x0333981C BL 0x1C16CF4
	0x03339820 ADRP X0, 0xDEB000
	0x03339824 LDR X0, [X0 + 0x1D8]
	0x03339828 BL 0x1C16CF4
	0x0333982C ADRP X0, 0xDE3000
	0x03339830 LDR X0, [X0 + 0x418]
	0x03339834 BL 0x1C16CF4
	0x03339838 ADRP X0, 0xDEF000
	0x0333983C LDR X0, [X0 + 0x9F8]
	0x03339840 BL 0x1C16CF4
	0x03339844 ADRP X0, 0xDEF000
	0x03339848 LDR X0, [X0 + 0xA00]
	0x0333984C BL 0x1C16CF4
	0x03339850 ADRP X0, 0xDEF000
	0x03339854 LDR X0, [X0 + 0xA08]
	0x03339858 BL 0x1C16CF4
	0x0333985C ADRP X0, 0xDEF000
	0x03339860 LDR X0, [X0 + 0xA10]
	0x03339864 BL 0x1C16CF4
	0x03339868 ADRP X0, 0xDEF000
	0x0333986C LDR X0, [X0 + 0xA18]
	0x03339870 BL 0x1C16CF4
	0x03339874 ADRP X0, 0xDEF000
	0x03339878 LDR X0, [X0 + 0xA20]
	0x0333987C BL 0x1C16CF4
	0x03339880 ADRP X0, 0xDEB000
	0x03339884 LDR X0, [X0 + 0x1E8]
	0x03339888 BL 0x1C16CF4
	0x0333988C ADRP X0, 0xDEF000
	0x03339890 LDR X0, [X0 + 0xA28]
	0x03339894 BL 0x1C16CF4
	0x03339898 ADRP X0, 0xDEF000
	0x0333989C LDR X0, [X0 + 0xA30]
	0x033398A0 BL 0x1C16CF4
	0x033398A4 MOVZ W8, 0x1
	0x033398A8 STRB W8, [X19 + 0xD1D]
	0x033398AC LDR X0, [X21]
	0x033398B0 LDR W8, [X0 + 0xE0]
	0x033398B4 CBNZ W8, 0x33398C0
	0x033398B8 BL 0x1C16DFC
	0x033398BC LDR X0, [X21]
	0x033398C0 LDR X8, [X0 + 0xB8]
	0x033398C4 LDR X19, [X8 + 0x8]
	0x033398C8 BL 0x1C16D44
	0x033398CC LDR X0, [X21]
	0x033398D0 CBNZ X19, 0x3339BB8
	0x033398D4 LDR W8, [X0 + 0xE0]
	0x033398D8 CBNZ W8, 0x33398E0
	0x033398DC BL 0x1C16DFC
	0x033398E0 BL 0x1C16D44
	0x033398E4 LDR X8, [X21]
	0x033398E8 LDR X8, [X8 + 0xB8]
	0x033398EC STR X31, [X8 + 0x8]
	0x033398F0 BL 0x1C16D44
	0x033398F4 ADRP X8, 0xDEF000
	0x033398F8 LDR X8, [X8 + 0x9D0]
	0x033398FC MOVZ W1, 0x5
	0x03339900 LDR X0, [X8]
	0x03339904 BL 0x1C16D6C
	0x03339908 ADRP X22, 0xDEF000
	0x0333990C LDR X22, [X22 + 0x9D8]
	0x03339910 MOV X19, X0
	0x03339914 LDR X8, [X22]
	0x03339918 MOV X0, X8
	0x0333991C BL 0x1C16F10
	0x03339920 ADRP X8, 0xDEF000
	0x03339924 ADRP X9, 0xDEF000
	0x03339928 ADRP X10, 0xDEF000
	0x0333992C LDR X8, [X8 + 0xA28]
	0x03339930 LDR X9, [X9 + 0xA30]
	0x03339934 LDR X10, [X10 + 0x9F0]
	0x03339938 MOVZ W1, 0x5
	0x0333993C LDR X8, [X8]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x10A4000
	009 Move X23, 0xDF0000
	010 Move W8, [X22+3342]
	011 Move X23, [X23+2416]
	012 Move W21, W2
	013 Move W19, W1
	014 Move W20, W0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xDF0000
	020 Move X0, [X0+2416]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3342], W8
	024 Move X0, [X23]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move W0, W20
	030 Move W1, W21
	031 Call HijriCalendar.CheckYearRange, X0, X1
	032 Move W8, 0x25C2
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Subtract W8, W19, 1
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X20, [X31+48]
	038 Move X19, [X31+56]
	039 Move X22, [X31+32]
	040 Move X21, [X31+40]
	041 Move X30, [X31+16]
	042 Move X23, [X31+24]
	043 Add X31, X31, 64
	044 Return 
	045 Move X0, 0xDBD000
	046 Move X0, [X0+3144]
	047 Call 0x1C17D08
	048 Call 0x19913D0
	049 Call CultureInfo.get_CurrentCulture
	050 Move X19, X0
	051 Move X0, 0xDEA000
	052 Move X0, [X0+880]
	053 Call 0x1C17D08
	054 Move X1, X31
	055 Call Environment.GetResourceString, X0
	056 Move W8, 1
	057 Move [X31+12], W8
	058 Move X21, 0xDBB000
	059 Move X21, [X21+1880]
	060 Move X20, X0
	061 Move X0, X21
	062 Call 0x1C17D08
	063 Add X1, X31, 12
	064 Call 0x1C17E04
	065 Move X22, X0
	066 Move W8, 4
	067 Move X0, X21
	068 Move [X31+8], W8
	069 Call 0x1C17D08
	070 Add X1, X31, 8
	071 Call 0x1C17E04
	072 Move X3, X0
	073 Move X0, X19
	074 Move X1, X20
	075 Move X2, X22
	076 Move X4, X31
	077 Call String.Format, X0, X1, X2, X3
	078 Move X0, 0xDF0000
	079 Move X0, [X0+2248]
	080 Call 0x1C17D08
	081 Move X1, X31
	082 Call Environment.GetResourceString, X0
	083 Move X19, X0
	084 Move X0, 0xDC3000
	085 Move X0, [X0+1888]
	086 Call 0x1C17D08
	087 Call 0x1C17F10
	088 Move X20, X0
	089 Move X0, 0xDEF000
	090 Move X0, [X0+3496]
	091 Call 0x1C17D08
	092 Move X1, X0
	093 Move X0, X20
	094 Move X2, X19
	095 Move X3, X31
	096 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	097 Move X0, 0xDF0000
	098 Move X0, [X0+2448]
	099 Call 0x1C17D08
	100 Move X1, X0
	101 Move X0, X20
	102 Call 0x1C17DEC

Method: System.Int32 GetDatePart(System.Int64 ticks, System.Int32 part)

Disassembly:
	0x03339940 LDR X9, [X9]
	0x03339944 LDR X10, [X10]
	0x03339948 MOVZ W2, 0x7E3
	0x0333994C MOVZ W3, 0x5
	0x03339950 MOVZ W4, 0x1
	0x03339954 MOVZ W5, 0x7E2
	0x03339958 MOVZ W6, 0x1
	0x0333995C MOVZ W7, 0x1F2D
	0x03339960 MOV X20, X0
	0x03339964 STP X10, X31, [X31 + 0x10]
	0x03339968 STP X8, X9, [X31]
	0x0333996C BL 0x3336808
	0x03339970 CBZ X19, 0x3339BFC
	0x03339974 CBZ X20, 0x333998C
	0x03339978 LDR X8, [X19]
	0x0333997C MOV X0, X20
	0x03339980 LDR X1, [X8 + 0x40]
	0x03339984 BL 0x1C16E00
	0x03339988 CBZ X0, 0x3339BF0
	0x0333998C LDR W8, [X19 + 0x18]
	0x03339990 CBZ W8, 0x3339BEC
	0x03339994 STR X20, [X19 + 0x20]
	0x03339998 LDR X0, [X22]
	0x0333999C BL 0x1C16F10
	0x033399A0 ADRP X8, 0xDEF000
	0x033399A4 ADRP X9, 0xDEF000
	0x033399A8 ADRP X10, 0xDEB000
	0x033399AC LDR X8, [X8 + 0xA10]
	0x033399B0 LDR X9, [X9 + 0x9F8]
	0x033399B4 LDR X10, [X10 + 0x1D8]
	0x033399B8 MOVZ W1, 0x4
	0x033399BC LDR X8, [X8]
	0x033399C0 LDR X9, [X9]
	0x033399C4 LDR X10, [X10]
	0x033399C8 MOVZ W2, 0x7C5
	0x033399CC MOVZ W3, 0x1
	0x033399D0 MOVZ W4, 0x8
	0x033399D4 MOVZ W5, 0x7C4
	0x033399D8 MOVZ W6, 0x1
	0x033399DC MOVZ W7, 0x1F
	0x033399E0 MOV X20, X0
	0x033399E4 STP X10, X31, [X31 + 0x10]
	0x033399E8 STP X8, X9, [X31]
	0x033399EC BL 0x3336808
	0x033399F0 CBZ X20, 0x3339A08
	0x033399F4 LDR X8, [X19]
	0x033399F8 MOV X0, X20
	0x033399FC LDR X1, [X8 + 0x40]
	0x03339A00 BL 0x1C16E00
	0x03339A04 CBZ X0, 0x3339BF0
	0x03339A08 LDR W8, [X19 + 0x18]
	0x03339A0C CMP W8, 0x1
	0x03339A10 B.LS 0x3339BEC
	0x03339A14 STR X20, [X19 + 0x28]
	0x03339A18 LDR X0, [X22]
	0x03339A1C BL 0x1C16F10
	0x03339A20 ADRP X8, 0xDEF000
	0x03339A24 ADRP X9, 0xDEF000
	0x03339A28 ADRP X10, 0xDEB000
	0x03339A2C LDR X8, [X8 + 0x9E0]
	0x03339A30 LDR X9, [X9 + 0x9E8]
	0x03339A34 LDR X10, [X10 + 0x1D0]
	0x03339A38 MOVZ W1, 0x3
	0x03339A3C LDR X8, [X8]
	0x03339A40 LDR X9, [X9]
	0x03339A44 LDR X10, [X10]
	0x03339A48 MOVZ W2, 0x786
	0x03339A4C MOVZ W3, 0xC
	0x03339A50 MOVZ W4, 0x19
	0x03339A54 MOVZ W5, 0x785
	0x03339A58 MOVZ W6, 0x1
	0x03339A5C MOVZ W7, 0x40
	0x03339A60 MOV X20, X0
	0x03339A64 STP X10, X31, [X31 + 0x10]
	0x03339A68 STP X8, X9, [X31]
	0x03339A6C BL 0x3336808
	0x03339A70 CBZ X20, 0x3339A88
	0x03339A74 LDR X8, [X19]
	0x03339A78 MOV X0, X20
	0x03339A7C LDR X1, [X8 + 0x40]
	0x03339A80 BL 0x1C16E00
	0x03339A84 CBZ X0, 0x3339BF0
	0x03339A88 LDR W8, [X19 + 0x18]
	0x03339A8C CMP W8, 0x2
	0x03339A90 B.LS 0x3339BEC
	0x03339A94 STR X20, [X19 + 0x30]
	0x03339A98 LDR X0, [X22]
	0x03339A9C BL 0x1C16F10
	0x03339AA0 ADRP X8, 0xDEF000
	0x03339AA4 ADRP X9, 0xDEF000
	0x03339AA8 ADRP X10, 0xDE3000
	0x03339AAC LDR X8, [X8 + 0xA08]
	0x03339AB0 LDR X9, [X9 + 0xA18]
	0x03339AB4 LDR X10, [X10 + 0x418]
	0x03339AB8 MOVZ W1, 0x2
	0x03339ABC LDR X8, [X8]
	0x03339AC0 LDR X9, [X9]
	0x03339AC4 LDR X10, [X10]
	0x03339AC8 MOVZ W2, 0x778
	0x03339ACC MOVZ W3, 0x7
	0x03339AD0 MOVZ W4, 0x1E
	0x03339AD4 MOVZ W5, 0x777
	0x03339AD8 MOVZ W6, 0x1
	0x03339ADC MOVZ W7, 0xF
	0x03339AE0 MOV X20, X0
	0x03339AE4 STP X10, X31, [X31 + 0x10]
	0x03339AE8 STP X8, X9, [X31]
	0x03339AEC BL 0x3336808
	0x03339AF0 CBZ X20, 0x3339B08
	0x03339AF4 LDR X8, [X19]
	0x03339AF8 MOV X0, X20
	0x03339AFC LDR X1, [X8 + 0x40]
	0x03339B00 BL 0x1C16E00
	0x03339B04 CBZ X0, 0x3339BF0
	0x03339B08 LDR W8, [X19 + 0x18]
	0x03339B0C CMP W8, 0x3
	0x03339B10 B.LS 0x3339BEC
	0x03339B14 STR X20, [X19 + 0x38]
	0x03339B18 LDR X0, [X22]
	0x03339B1C BL 0x1C16F10
	0x03339B20 ADRP X8, 0xDEF000
	0x03339B24 ADRP X9, 0xDEF000
	0x03339B28 ADRP X10, 0xDEB000
	0x03339B2C LDR X8, [X8 + 0xA20]
	0x03339B30 LDR X9, [X9 + 0xA00]
	0x03339B34 LDR X10, [X10 + 0x1E8]
	0x03339B38 MOVZ W1, 0x1
	0x03339B3C LDR X8, [X8]
	0x03339B40 LDR X9, [X9]
	0x03339B44 LDR X10, [X10]
	0x03339B48 MOVZ W2, 0x74C
	0x03339B4C MOVZ W3, 0x1
	0x03339B50 MOVZ W4, 0x1
	0x03339B54 MOVZ W5, 0x74B
	0x03339B58 MOVZ W6, 0x1
	0x03339B5C MOVZ W7, 0x2D
	0x03339B60 MOV X20, X0
	0x03339B64 STP X10, X31, [X31 + 0x10]
	0x03339B68 STP X8, X9, [X31]
	0x03339B6C BL 0x3336808
	0x03339B70 CBZ X20, 0x3339B88
	0x03339B74 LDR X8, [X19]
	0x03339B78 MOV X0, X20
	0x03339B7C LDR X1, [X8 + 0x40]
	0x03339B80 BL 0x1C16E00
	0x03339B84 CBZ X0, 0x3339BF0
	0x03339B88 LDR W8, [X19 + 0x18]
	0x03339B8C CMP W8, 0x4
	0x03339B90 B.LS 0x3339BEC
	0x03339B94 STR X20, [X19 + 0x40]
	0x03339B98 LDR X0, [X21]
	0x03339B9C LDR W8, [X0 + 0xE0]
	0x03339BA0 CBNZ W8, 0x3339BA8
	0x03339BA4 BL 0x1C16DFC
	0x03339BA8 BL 0x1C16D44
	0x03339BAC LDR X0, [X21]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x10A4000
	010 Move X24, 0xDF0000
	011 Move W8, [X22+3343]
	012 Move X24, [X24+2416]
	013 Move W19, W2
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xDF0000
	021 Move X0, [X0+2416]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3343], W8
	025 Move X0, [X24]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X20
	031 Call HijriCalendar.CheckTicksRange, X0
	032 Move X8, 0x81E3
	033 NotImplemented "Instruction MOVK not yet implemented."
	034 NotImplemented "Instruction MOVK not yet implemented."
	035 NotImplemented "Instruction MOVK not yet implemented."
	036 NotImplemented "Instruction SMULH not yet implemented."
	037 Add X8, X8, X20
	038 NotImplemented "Instruction SBFM not yet implemented."
	039 Move X0, X21
	040 Add X20, X9, X8
	041 Call HijriCalendar.get_HijriAdjustment, X0
	042 Move X11, 0x407D
	043 Add X8, X20, W0
	044 Move TEMP, 0xEB15
	045 Not TEMP
	046 Move X10, TEMP
	047 NotImplemented "Instruction MOVK not yet implemented."
	048 Move W9, 30
	049 NotImplemented "Instruction MOVK not yet implemented."
	050 NotImplemented "Instruction MOVK not yet implemented."
	051 Add X25, X8, 1
	052 NotImplemented "Instruction MOVK not yet implemented."
	053 NotImplemented "Instruction MADD not yet implemented."
	054 NotImplemented "Instruction SMULH not yet implemented."
	055 Move X9, X8
	056 ShiftRight X9, 63
	057 And X9, X9, 0x7FFFFFFF
	058 Move X8, X8
	059 ShiftRight X8, 11
	060 And X8, X8, 0x7FFFFFFF
	061 Add W20, W8, W9
	062 Add W22, W20, 1
	063 Move X0, X21
	064 Move W1, W22
	065 Call HijriCalendar.DaysUpToHijriYear, X0, X1
	066 Move X8, [X21]
	067 Move X23, X0
	068 Move X0, X21
	069 Move W1, W22
	070 Move X9, [X8+536]
	071 Move X3, [X8+544]
	072 Move W2, W31
	073 NotImplemented "Instruction BLR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X8, W0
	076 Subtract X8, X23, X8
	077 Compare W19, 0
	078 JumpIfNotEqual {96}
	079 Move X8, [X21]
	080 Move X0, X21
	081 Move W1, W20
	082 Move W2, W31
	083 Move X9, [X8+536]
	084 Move X3, [X8+544]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Subtract X8, X25, W0
	087 Compare W19, 0
	088 JumpIfNotEqual {96}
	089 Add X8, X23, X8
	090 Add W9, W20, 2
	091 NotImplemented "Instruction CMP not yet implemented."
	092 NotImplemented "Instruction CSEL not yet implemented."
	093 NotImplemented "Instruction CSEL not yet implemented."
	094 Compare W19, 0
	095 JumpIfEqual {137}
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Subtract X20, X25, X8
	098 Move X0, [X24]
	099 Move X21, X31
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {105}
	103 Call 0x1C17DFC
	104 Move X0, [X24]
	105 Move X8, [X0+184]
	106 Move X8, [X8+8]
	107 Compare X8, 0
	108 JumpIfEqual {148}
	109 Move W9, [X8+24]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Add X9, X8, X21
	112 NotImplemented "Instruction LDRSW not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Add X21, X21, 1
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move W21, 13
	117 Add W21, W21, 1
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Subtract W20, W21, 1
	120 Move W9, [X0+224]
	121 Compare W9, 0
	122 JumpIfNotEqual {129}
	123 Call 0x1C17DFC
	124 Move X8, [X24]
	125 Move X8, [X8+184]
	126 Move X8, [X8+8]
	127 Compare X8, 0
	128 JumpIfEqual {148}
	129 Move W10, [X8+24]
	130 Move X9, W21
	131 Subtract X9, X9, 2
	132 NotImplemented "Instruction CMP not yet implemented."
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Add X8, X8, X9
	135 Move W8, [X8+32]
	136 Subtract W20, W20, W8
	137 Move W0, W20
	138 Move X20, [X31+48]
	139 Move X19, [X31+56]
	140 Move X22, [X31+32]
	141 Move X21, [X31+40]
	142 Move X24, [X31+16]
	143 Move X23, [X31+24]
	144 Move X30, [X31+64]
	145 Move X25, [X31+72]
	146 Return X0
	147 Call 0x1C17F28
	148 Call 0x1C17F20
	149 Move X0, 0xDF0000
	150 Move X0, [X0+2456]
	151 Call 0x1C17D08
	152 Move X1, X31
	153 Call Environment.GetResourceString, X0
	154 Move X19, X0
	155 Move X0, 0xDBB000
	156 Move X0, [X0+1456]
	157 Call 0x1C17D08
	158 Call 0x1C17F10
	159 Move X1, X19
	160 Move X2, X31
	161 Move X20, X0
	162 Call InvalidOperationException..ctor, X0, X1
	163 Move X0, 0xDF0000
	164 Move X0, [X0+2464]
	165 Call 0x1C17D08
	166 Move X1, X0
	167 Move X0, X20
	168 Call 0x1C17DEC

Method: System.Int32 GetDayOfMonth(System.DateTime time)

Disassembly:
	0x03339BB0 LDR X8, [X0 + 0xB8]
	0x03339BB4 STR X19, [X8 + 0x8]
	0x03339BB8 LDR W8, [X0 + 0xE0]
	0x03339BBC CBNZ W8, 0x3339BC8
	0x03339BC0 BL 0x1C16DFC
	0x03339BC4 LDR X0, [X21]
	0x03339BC8 LDR X8, [X0 + 0xB8]
	0x03339BCC LDR X19, [X8 + 0x8]
	0x03339BD0 BL 0x1C16D44
	0x03339BD4 MOV X0, X19
	0x03339BD8 LDP X20, X19, [X31 + 0x40]
	0x03339BDC LDP X22, X21, [X31 + 0x30]
	0x03339BE0 LDR X30, [X31 + 0x20]
	0x03339BE4 ADD X31, X31, 0x50
	0x03339BE8 RET
	0x03339BEC BL 0x1C16F28
	0x03339BF0 BL 0x1C16F44
	0x03339BF4 MOV X1, X31
	0x03339BF8 BL 0x1C16DEC
	0x03339BFC BL 0x1C16F20
	0x03339C00 MOV X0, X31
	0x03339C04 RET
	0x03339C08 STR X30, [X31 - 0x20]!
	0x03339C0C STP X20, X19, [X31 + 0x10]
	0x03339C10 ADRP X19, 0x10A3000
	0x03339C14 ADRP X20, 0xDEF000
	0x03339C18 LDRB W8, [X19 + 0xD1E]
	0x03339C1C LDR X20, [X20 + 0x408]
	0x03339C20 TBNZ X8, 0x0, 0x3339C38
	0x03339C24 ADRP X0, 0xDEF000
	0x03339C28 LDR X0, [X0 + 0x408]
	0x03339C2C BL 0x1C16CF4
	0x03339C30 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x10A4000
	007 Move [X31+8], X1
	008 Move X21, 0xDBC000
	009 Move W8, [X20+3344]
	010 Move X21, [X21+2544]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDBC000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3344], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X31, 8
	027 Move X1, X31
	028 Call DateTime.get_Ticks, X0
	029 Move X8, [X19]
	030 Move X1, X0
	031 Move W2, 3
	032 Move X0, X19
	033 Move X9, [X8+792]
	034 Move X3, [X8+800]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X30, [X31+16]
	039 Move X21, [X31+24]
	040 Add X31, X31, 48
	041 Return X0

Method: System.DayOfWeek GetDayOfWeek(System.DateTime time)

Disassembly:
	0x03339C34 STRB W8, [X19 + 0xD1E]
	0x03339C38 LDR X0, [X20]
	0x03339C3C LDR W8, [X0 + 0xE0]
	0x03339C40 CBNZ W8, 0x3339C4C
	0x03339C44 BL 0x1C16DFC
	0x03339C48 LDR X0, [X20]
	0x03339C4C LDR X8, [X0 + 0xB8]
	0x03339C50 LDR X19, [X8 + 0x10]
	0x03339C54 BL 0x1C16D44
	0x03339C58 LDR X0, [X20]
	0x03339C5C CBNZ X19, 0x3339C8C
	0x03339C60 BL 0x1C16F10
	0x03339C64 MOV X19, X0
	0x03339C68 BL 0x3339CB8
	0x03339C6C LDR X0, [X20]
	0x03339C70 LDR W8, [X0 + 0xE0]
	0x03339C74 CBNZ W8, 0x3339C7C
	0x03339C78 BL 0x1C16DFC
	0x03339C7C BL 0x1C16D44
	0x03339C80 LDR X0, [X20]
	0x03339C84 LDR X8, [X0 + 0xB8]
	0x03339C88 STR X19, [X8 + 0x10]
	0x03339C8C LDR W8, [X0 + 0xE0]
	0x03339C90 CBNZ W8, 0x3339C9C
	0x03339C94 BL 0x1C16DFC
	0x03339C98 LDR X0, [X20]
	0x03339C9C LDR X8, [X0 + 0xB8]
	0x03339CA0 LDR X19, [X8 + 0x10]
	0x03339CA4 BL 0x1C16D44
	0x03339CA8 MOV X0, X19
	0x03339CAC LDP X20, X19, [X31 + 0x10]
	0x03339CB0 LDR X30, [X31], #0x20
	0x03339CB4 RET
	0x03339CB8 STP X30, X21, [X31 - 0x20]!
	0x03339CBC STP X20, X19, [X31 + 0x10]
	0x03339CC0 ADRP X21, 0x10A3000
	0x03339CC4 ADRP X20, 0xDBC000
	0x03339CC8 LDRB W8, [X21 + 0xD1F]
	0x03339CCC LDR X20, [X20 + 0xC48]
	0x03339CD0 MOV X19, X0
	0x03339CD4 TBNZ X8, 0x0, 0x3339D10
	0x03339CD8 ADRP X0, 0xDBC000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x10A4000
	005 Move [X31+8], X1
	006 Move X20, 0xDBC000
	007 Move W8, [X19+3345]
	008 Move X20, [X20+2544]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xDBC000
	014 Move X0, [X0+2544]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X19+3345], W8
	018 Move X0, [X20]
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 8
	024 Move X1, X31
	025 Call DateTime.get_Ticks, X0
	026 Move X8, 0x81E3
	027 NotImplemented "Instruction MOVK not yet implemented."
	028 NotImplemented "Instruction MOVK not yet implemented."
	029 NotImplemented "Instruction MOVK not yet implemented."
	030 NotImplemented "Instruction SMULH not yet implemented."
	031 Add X8, X8, X0
	032 Move X9, X8
	033 ShiftRight X9, 63
	034 And X9, X9, 0x7FFFFFFF
	035 NotImplemented "Instruction SBFM not yet implemented."
	036 Add W8, W8, W9
	037 Move W9, 0x2493
	038 Add W8, W8, 1
	039 NotImplemented "Instruction MOVK not yet implemented."
	040 NotImplemented "Instruction SMADDL not yet implemented."
	041 Move X9, X9
	042 ShiftRight X9, 32
	043 And X9, X9, 0x7FFFFFFF
	044 Add W9, W9, W8
	045 NotImplemented "Instruction SBFM not yet implemented."
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Add W9, W10, W9
	049 Subtract W9, W9, W9
	050 Add W0, W8, W9
	051 Move X30, [X31+32]
	052 Return X0

Method: System.Int32 GetDaysInMonth(System.Int32 year, System.Int32 month, System.Int32 era)

Disassembly:
	0x03339CDC LDR X0, [X0 + 0xC48]
	0x03339CE0 BL 0x1C16CF4
	0x03339CE4 ADRP X0, 0xDEE000
	0x03339CE8 LDR X0, [X0 + 0xBB8]
	0x03339CEC BL 0x1C16CF4
	0x03339CF0 ADRP X0, 0xDEF000
	0x03339CF4 LDR X0, [X0 + 0x408]
	0x03339CF8 BL 0x1C16CF4
	0x03339CFC ADRP X0, 0xDEF000
	0x03339D00 LDR X0, [X0 + 0x410]
	0x03339D04 BL 0x1C16CF4
	0x03339D08 MOVZ W8, 0x1
	0x03339D0C STRB W8, [X21 + 0xD1F]
	0x03339D10 MOV X0, X19
	0x03339D14 MOV X1, X31
	0x03339D18 BL 0x3332DC0
	0x03339D1C LDR X0, [X20]
	0x03339D20 BL 0x1C16F10
	0x03339D24 ADRP X8, 0xDEF000
	0x03339D28 LDR X8, [X8 + 0x410]
	0x03339D2C LDR X1, [X8]
	0x03339D30 MOVZ W2, 0x1
	0x03339D34 MOV W3, W31
	0x03339D38 BL 0x3348BD8
	0x03339D3C ADRP X8, 0xDEF000
	0x03339D40 LDR X8, [X8 + 0x408]
	0x03339D44 ADRP X20, 0xDEE000
	0x03339D48 LDR X0, [X8]
	0x03339D4C LDR W8, [X0 + 0xE0]
	0x03339D50 LDR X20, [X20 + 0xBB8]
	0x03339D54 CBNZ W8, 0x3339D5C
	0x03339D58 BL 0x1C16DFC
	0x03339D5C BL 0x33397A8
	0x03339D60 LDR X8, [X20]
	0x03339D64 MOV X20, X0
	0x03339D68 MOV X0, X8
	0x03339D6C BL 0x1C16F10
	0x03339D70 MOV X1, X19
	0x03339D74 MOV X2, X20
	0x03339D78 MOV X3, X31
	0x03339D7C MOV X21, X0
	0x03339D80 BL 0x3336904
	0x03339D84 STR X21, [X19 + 0x20]
	0x03339D88 LDP X20, X19, [X31 + 0x10]
	0x03339D8C LDP X30, X21, [X31], #0x20
	0x03339D90 RET
	0x03339D94 CMP W1, 0x1
	0x03339D98 MOV X20, X0
	0x03339D9C B.NE 0x3339E60
	0x03339DA0 MOV X0, X20
	0x03339DA4 BL 0x3EB1AD0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x10A4000
	009 Move X24, 0xDF0000
	010 Move W8, [X23+3346]
	011 Move X24, [X24+2416]
	012 Move W22, W3
	013 Move W21, W2
	014 Move W19, W1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xDF0000
	021 Move X0, [X0+2416]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+3346], W8
	025 Move X0, [X24]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move W0, W19
	031 Move W1, W21
	032 Move W2, W22
	033 Call HijriCalendar.CheckYearMonthRange, X0, X1, X2
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X8, [X20]
	036 Move X0, X20
	037 Move W1, W19
	038 Move W2, W31
	039 Move X9, [X8+648]
	040 Move X3, [X8+656]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 And W31, W0, 1
	043 Move W8, 29
	044 NotImplemented "Instruction CINC not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CINC not yet implemented."
	047 And W8, W8, 0xFFFFFFFE
	048 Subtract W8, W21, W8
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W8, 29
	051 NotImplemented "Instruction CINC not yet implemented."
	052 Move X20, [X31+48]
	053 Move X19, [X31+56]
	054 Move X22, [X31+32]
	055 Move X21, [X31+40]
	056 Move X24, [X31+16]
	057 Move X23, [X31+24]
	058 Move X30, [X31+64]
	059 Return X0

Method: System.Int32 GetDaysInYear(System.Int32 year, System.Int32 era)

Disassembly:
	0x03339DA8 MOV X20, X0
	0x03339DAC ADRP X0, 0xDC2000
	0x03339DB0 LDR X0, [X0 + 0x578]
	0x03339DB4 BL 0x1C16D08
	0x03339DB8 LDR X8, [X20]
	0x03339DBC LDR X1, [X8]
	0x03339DC0 BL 0x1C17270
	0x03339DC4 TBZ X0, 0x0, 0x3339E38
	0x03339DC8 LDR X20, [X20]
	0x03339DCC BL 0x3EB1AE0
	0x03339DD0 MOV X0, X19
	0x03339DD4 MOV X1, X31
	0x03339DD8 BL 0x33BE520
	0x03339DDC MOV X19, X0
	0x03339DE0 BL 0x19903C0
	0x03339DE4 LDR X8, [X19]
	0x03339DE8 MOV X0, X19
	0x03339DEC LDR X9, [X8 + 0x2E8]
	0x03339DF0 LDR X1, [X8 + 0x2F0]
	0x03339DF4 BLR X9
	0x03339DF8 MOV X19, X0
	0x03339DFC ADRP X0, 0xDEF000
	0x03339E00 LDR X0, [X0 + 0xA38]
	0x03339E04 BL 0x1C16D08
	0x03339E08 BL 0x1C16F10
	0x03339E0C MOV X1, X19
	0x03339E10 MOV X2, X20
	0x03339E14 MOV X3, X31
	0x03339E18 MOV X21, X0
	0x03339E1C BL 0x33988F4
	0x03339E20 ADRP X0, 0xDEF000
	0x03339E24 LDR X0, [X0 + 0xA40]
	0x03339E28 BL 0x1C16D08
	0x03339E2C MOV X1, X0
	0x03339E30 MOV X0, X21
	0x03339E34 BL 0x1C16DEC
	0x03339E38 MOVZ W0, 0x8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x10A4000
	008 Move X23, 0xDF0000
	009 Move W8, [X22+3347]
	010 Move X23, [X23+2416]
	011 Move W21, W2
	012 Move W19, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xDF0000
	019 Move X0, [X0+2416]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3347], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move W0, W19
	029 Move W1, W21
	030 Call HijriCalendar.CheckYearRange, X0, X1
	031 Move X8, [X20]
	032 Move X0, X20
	033 Move W1, W19
	034 Move W2, W31
	035 Move X9, [X8+648]
	036 Move X3, [X8+656]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 And W31, W0, 1
	043 Move W8, 354
	044 NotImplemented "Instruction CINC not yet implemented."
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Return X0

Method: System.Int32 GetEra(System.DateTime time)

Disassembly:
	0x03339E3C BL 0x3EB1AF0
	0x03339E40 LDR X8, [X20]
	0x03339E44 STR X8, [X0]
	0x03339E48 ADRP X1, 0xB7B000
	0x03339E4C ADD X1, X1, 0xE58
	0x03339E50 MOV X2, X31
	0x03339E54 BL 0x3EB1B00
	0x03339E58 MOV X20, X0
	0x03339E5C BL 0x3EB1AE0
	0x03339E60 MOV X0, X20
	0x03339E64 BL 0x1D2C690
	0x03339E68 BL 0x1990590
	0x03339E6C MOVZ W2, 0x1
	0x03339E70 MOV W3, W31
	0x03339E74 B 0x3348BD8
	0x03339E78 MOVZ W0, 0x3
	0x03339E7C RET
	0x03339E80 STR X30, [X31 - 0x10]!
	0x03339E84 LDR X0, [X0 + 0x20]
	0x03339E88 CBZ X0, 0x3339E98
	0x03339E8C MOV X4, X31
	0x03339E90 LDR X30, [X31], #0x10
	0x03339E94 B 0x33375FC
	0x03339E98 BL 0x1C16F20
	0x03339E9C STR X30, [X31 - 0x10]!
	0x03339EA0 LDR X0, [X0 + 0x20]
	0x03339EA4 CBZ X0, 0x3339EB4
	0x03339EA8 MOV X3, X31
	0x03339EAC LDR X30, [X31], #0x10
	0x03339EB0 B 0x3337798
	0x03339EB4 BL 0x1C16F20
	0x03339EB8 STR X30, [X31 - 0x10]!
	0x03339EBC LDR X0, [X0 + 0x20]
	0x03339EC0 CBZ X0, 0x3339ED0
	0x03339EC4 MOV X2, X31
	0x03339EC8 LDR X30, [X31], #0x10
	0x03339ECC B 0x33374B0
	0x03339ED0 BL 0x1C16F20
	0x03339ED4 STR X30, [X31 - 0x10]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10A4000
	005 Move [X31+8], X1
	006 Move X19, 0xDBC000
	007 Move W8, [X20+3348]
	008 Move X19, [X19+2544]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xDBC000
	014 Move X0, [X0+2544]
	015 Call 0x1C17CF4
	016 Move X0, 0xDF0000
	017 Move X0, [X0+2416]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3348], W8
	021 Move X0, [X19]
	022 Move X20, 0xDF0000
	023 Move W8, [X0+224]
	024 Move X20, [X20+2416]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Add X0, X31, 8
	029 Move X1, X31
	030 Call DateTime.get_Ticks, X0
	031 Move X8, [X20]
	032 Move X19, X0
	033 Move W9, [X8+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move X0, X19
	039 Call HijriCalendar.CheckTicksRange, X0
	040 Move X8, [X20]
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X8, [X8+184]
	044 Move W0, [X8]
	045 Move X30, [X31+32]
	046 Return X0

Method: System.Int32[] get_Eras()

Disassembly:
	0x03339ED8 LDR X0, [X0 + 0x20]
	0x03339EDC CBZ X0, 0x3339EEC
	0x03339EE0 MOV X2, X31
	0x03339EE4 LDR X30, [X31], #0x10
	0x03339EE8 B 0x3337530
	0x03339EEC BL 0x1C16F20
	0x03339EF0 STR X30, [X31 - 0x10]!
	0x03339EF4 LDR X0, [X0 + 0x20]
	0x03339EF8 CBZ X0, 0x3339F08
	0x03339EFC MOV X3, X31
	0x03339F00 LDR X30, [X31], #0x10
	0x03339F04 B 0x3337A7C
	0x03339F08 BL 0x1C16F20
	0x03339F0C STR X30, [X31 - 0x10]!
	0x03339F10 LDR X0, [X0 + 0x20]
	0x03339F14 CBZ X0, 0x3339F24
	0x03339F18 MOV X2, X31
	0x03339F1C LDR X30, [X31], #0x10
	0x03339F20 B 0x3337804
	0x03339F24 BL 0x1C16F20
	0x03339F28 STR X30, [X31 - 0x10]!
	0x03339F2C LDR X0, [X0 + 0x20]
	0x03339F30 CBZ X0, 0x3339F40
	0x03339F34 MOV X2, X31
	0x03339F38 LDR X30, [X31], #0x10
	0x03339F3C B 0x33379FC
	0x03339F40 BL 0x1C16F20
	0x03339F44 STR X30, [X31 - 0x10]!
	0x03339F48 LDR X0, [X0 + 0x20]
	0x03339F4C CBZ X0, 0x3339F5C
	0x03339F50 MOV X2, X31
	0x03339F54 LDR X30, [X31], #0x10
	0x03339F58 B 0x3337A94
	0x03339F5C BL 0x1C16F20
	0x03339F60 STR X30, [X31 - 0x10]!
	0x03339F64 LDR X0, [X0 + 0x20]
	0x03339F68 CBZ X0, 0x3339F78
	0x03339F6C MOV X3, X31
	0x03339F70 LDR X30, [X31], #0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x10A4000
	006 Move X21, 0xDBC000
	007 Move X20, 0xDF0000
	008 Move W8, [X19+3349]
	009 Move X21, [X21+3672]
	010 Move X20, [X20+2416]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xDF0000
	016 Move X0, [X0+2416]
	017 Call 0x1C17CF4
	018 Move X0, 0xDBC000
	019 Move X0, [X0+3672]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+3349], W8
	023 Move X0, [X21]
	024 Move W1, 1
	025 Call 0x1C17D6C
	026 Move X8, [X20]
	027 Move X19, X0
	028 Move W9, [X8+224]
	029 Compare W9, 0
	030 JumpIfNotEqual {34}
	031 Move X0, X8
	032 Call 0x1C17DFC
	033 Move X8, [X20]
	034 Compare X19, 0
	035 JumpIfEqual {48}
	036 Move W9, [X19+24]
	037 Compare W9, 0
	038 JumpIfEqual {49}
	039 Move X8, [X8+184]
	040 Move X0, X19
	041 Move W8, [X8]
	042 Move [X19+32], W8
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return X0
	048 Call 0x1C17F20
	049 Call 0x1C17F28

Method: System.Int32 GetMonth(System.DateTime time)

Disassembly:
	0x03339F74 B 0x3337BBC
	0x03339F78 BL 0x1C16F20
	0x03339F7C STR X30, [X31 - 0x10]!
	0x03339F80 LDR X0, [X0 + 0x20]
	0x03339F84 CBZ X0, 0x3339F9C
	0x03339F88 LDR W8, [X31 + 0x10]
	0x03339F8C STR X31, [X31 + 0x18]
	0x03339F90 STR W8, [X31 + 0x10]
	0x03339F94 LDR X30, [X31], #0x10
	0x03339F98 B 0x3337C2C
	0x03339F9C BL 0x1C16F20
	0x03339FA0 SUB X31, X31, 0x40
	0x03339FA4 STP X30, X23, [X31 + 0x10]
	0x03339FA8 STP X22, X21, [X31 + 0x20]
	0x03339FAC STP X20, X19, [X31 + 0x30]
	0x03339FB0 CMP W1, 0x0
	0x03339FB4 B.LE 0x3339FE4
	0x03339FB8 LDR X8, [X0 + 0x20]
	0x03339FBC CBZ X8, 0x3339FFC
	0x03339FC0 LDR W8, [X8 + 0x10]
	0x03339FC4 CMP W8, W1
	0x03339FC8 B.LT 0x333A000
	0x03339FCC LDP X20, X19, [X31 + 0x30]
	0x03339FD0 LDP X22, X21, [X31 + 0x20]
	0x03339FD4 LDP X30, X23, [X31 + 0x10]
	0x03339FD8 MOV W0, W1
	0x03339FDC ADD X31, X31, 0x40
	0x03339FE0 RET
	0x03339FE4 ADRP X0, 0xDED000
	0x03339FE8 LDR X0, [X0 + 0xD28]
	0x03339FEC BL 0x1C16D08
	0x03339FF0 MOV X1, X31
	0x03339FF4 BL 0x33BDD84

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x10A4000
	007 Move [X31+8], X1
	008 Move X21, 0xDBC000
	009 Move W8, [X20+3350]
	010 Move X21, [X21+2544]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDBC000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3350], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X31, 8
	027 Move X1, X31
	028 Call DateTime.get_Ticks, X0
	029 Move X8, [X19]
	030 Move X1, X0
	031 Move W2, 2
	032 Move X0, X19
	033 Move X9, [X8+792]
	034 Move X3, [X8+800]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X30, [X31+16]
	039 Move X21, [X31+24]
	040 Add X31, X31, 48
	041 Return X0

Method: System.Int32 GetMonthsInYear(System.Int32 year, System.Int32 era)

Disassembly:
	0x03339FF8 B 0x333A098
	0x03339FFC BL 0x1C16F20
	0x0333A000 ADRP X8, 0xDBB000
	0x0333A004 LDR X8, [X8 + 0xC48]
	0x0333A008 MOV X22, X0
	0x0333A00C MOV X0, X8
	0x0333A010 BL 0x1C16D08
	0x0333A014 BL 0x19903D0
	0x0333A018 BL 0x33387A0
	0x0333A01C MOV X19, X0
	0x0333A020 ADRP X0, 0xDE8000
	0x0333A024 LDR X0, [X0 + 0x370]
	0x0333A028 BL 0x1C16D08
	0x0333A02C MOV X1, X31
	0x0333A030 BL 0x33BDD84
	0x0333A034 MOVZ W8, 0x1
	0x0333A038 STR W8, [X31 + 0xC]
	0x0333A03C ADRP X21, 0xDB9000
	0x0333A040 LDR X21, [X21 + 0x758]
	0x0333A044 MOV X20, X0
	0x0333A048 MOV X0, X21
	0x0333A04C BL 0x1C16D08
	0x0333A050 ADD X1, X31, 0xC
	0x0333A054 BL 0x1C16E04
	0x0333A058 LDR X22, [X22 + 0x20]
	0x0333A05C MOV X23, X0
	0x0333A060 MOV X0, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10A3000
	007 Move X22, 0xDEF000
	008 Move W8, [X21+3351]
	009 Move X22, [X22+2416]
	010 Move W19, W2
	011 Move W20, W1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDEF000
	017 Move X0, [X0+2416]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3351], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W0, W20
	027 Move W1, W19
	028 Call HijriCalendar.CheckYearRange, X0, X1
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move W0, 12
	034 Move X30, [X31+48]
	035 Return X0

Method: System.Int32 GetYear(System.DateTime time)

Disassembly:
	0x0333A064 BL 0x19903C0
	0x0333A068 LDR W8, [X22 + 0x10]
	0x0333A06C MOV X0, X21
	0x0333A070 STR W8, [X31 + 0x8]
	0x0333A074 BL 0x1C16D08
	0x0333A078 ADD X1, X31, 0x8
	0x0333A07C BL 0x1C16E04
	0x0333A080 MOV X3, X0
	0x0333A084 MOV X0, X19
	0x0333A088 MOV X1, X20
	0x0333A08C MOV X2, X23
	0x0333A090 MOV X4, X31
	0x0333A094 BL 0x3227D58
	0x0333A098 MOV X19, X0
	0x0333A09C ADRP X0, 0xDC1000
	0x0333A0A0 LDR X0, [X0 + 0x760]
	0x0333A0A4 BL 0x1C16D08
	0x0333A0A8 BL 0x1C16F10
	0x0333A0AC MOV X20, X0
	0x0333A0B0 ADRP X0, 0xDEE000
	0x0333A0B4 LDR X0, [X0 + 0x5A8]
	0x0333A0B8 BL 0x1C16D08
	0x0333A0BC MOV X1, X0
	0x0333A0C0 MOV X0, X20
	0x0333A0C4 MOV X2, X19
	0x0333A0C8 MOV X3, X31
	0x0333A0CC BL 0x3311888
	0x0333A0D0 ADRP X0, 0xDEE000
	0x0333A0D4 LDR X0, [X0 + 0xA48]
	0x0333A0D8 BL 0x1C16D08
	0x0333A0DC MOV X1, X0
	0x0333A0E0 MOV X0, X20
	0x0333A0E4 BL 0x1C16DEC

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x10A3000
	007 Move [X31+8], X1
	008 Move X21, 0xDBB000
	009 Move W8, [X20+3352]
	010 Move X21, [X21+2544]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDBB000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3352], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X31, 8
	027 Move X1, X31
	028 Call DateTime.get_Ticks, X0
	029 Move X8, [X19]
	030 Move X1, X0
	031 Move X0, X19
	032 Move W2, W31
	033 Move X9, [X8+792]
	034 Move X3, [X8+800]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X30, [X31+16]
	039 Move X21, [X31+24]
	040 Add X31, X31, 48
	041 Return X0

Method: System.Boolean IsLeapYear(System.Int32 year, System.Int32 era)

Disassembly:
	0x0333A0E8 STR X30, [X31 - 0x10]!
	0x0333A0EC LDR X0, [X0 + 0x20]
	0x0333A0F0 CBZ X0, 0x333A100
	0x0333A0F4 MOV X1, X31
	0x0333A0F8 LDR X30, [X31], #0x10
	0x0333A0FC B 0x333790C
	0x0333A100 BL 0x1C16F20
	0x0333A104 STR X30, [X31 - 0x20]!
	0x0333A108 STP X20, X19, [X31 + 0x10]
	0x0333A10C ADRP X19, 0x10A2000
	0x0333A110 ADRP X20, 0xDEE000
	0x0333A114 LDRB W8, [X19 + 0xD20]
	0x0333A118 LDR X20, [X20 + 0x408]
	0x0333A11C TBNZ X8, 0x0, 0x333A140
	0x0333A120 ADRP X0, 0xDEE000
	0x0333A124 LDR X0, [X0 + 0x408]
	0x0333A128 BL 0x1C16CF4
	0x0333A12C ADRP X0, 0xDB9000
	0x0333A130 LDR X0, [X0 + 0xAC8]
	0x0333A134 BL 0x1C16CF4
	0x0333A138 MOVZ W8, 0x1
	0x0333A13C STRB W8, [X19 + 0xD20]
	0x0333A140 LDR X0, [X20]
	0x0333A144 LDR W8, [X0 + 0xE0]
	0x0333A148 CBNZ W8, 0x333A150
	0x0333A14C BL 0x1C16DFC
	0x0333A150 BL 0x33397A8
	0x0333A154 CBZ X0, 0x333A1D0
	0x0333A158 ADRP X8, 0xDB9000
	0x0333A15C LDR X8, [X8 + 0xAC8]
	0x0333A160 MOV X19, X0
	0x0333A164 LDR W1, [X19 + 0x18]
	0x0333A168 LDR X0, [X8]
	0x0333A16C BL 0x1C16D6C
	0x0333A170 LDR X8, [X19 + 0x18]
	0x0333A174 SUBS W9, W8, 0x1
	0x0333A178 B.LT 0x333A1C4
	0x0333A17C MOV X10, X31
	0x0333A180 SXTW X11, W8
	0x0333A184 ADD X12, X0, 0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10A3000
	007 Move X22, 0xDEF000
	008 Move W8, [X21+3353]
	009 Move X22, [X22+2416]
	010 Move W20, W2
	011 Move W19, W1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDEF000
	017 Move X0, [X0+2416]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3353], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W0, W19
	027 Move W1, W20
	028 Call HijriCalendar.CheckYearRange, X0, X1
	029 Move W8, 11
	030 Or W9, W31, 14
	031 Move W10, 0x8889
	032 NotImplemented "Instruction MOVK not yet implemented."
	033 NotImplemented "Instruction MADD not yet implemented."
	034 NotImplemented "Instruction SMADDL not yet implemented."
	035 Move X9, X9
	036 ShiftRight X9, 32
	037 And X9, X9, 0x7FFFFFFF
	038 Add W9, W9, W8
	039 NotImplemented "Instruction SBFM not yet implemented."
	040 Add W9, W10, W9
	041 Move W10, 30
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 NotImplemented "Instruction MSUB not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSET not yet implemented."
	049 Move X30, [X31+48]
	050 Return X0

Method: System.DateTime ToDateTime(System.Int32 year, System.Int32 month, System.Int32 day, System.Int32 hour, System.Int32 minute, System.Int32 second, System.Int32 millisecond, System.Int32 era)

Disassembly:
	0x0333A188 CMP W9, W8
	0x0333A18C B.CS 0x333A1D4
	0x0333A190 ADD X13, X19, W9, 0x3, SXTW
	0x0333A194 LDR X13, [X13 + 0x20]
	0x0333A198 CBZ X13, 0x333A1D0
	0x0333A19C CBZ X0, 0x333A1D0
	0x0333A1A0 LDR W14, [X0 + 0x18]
	0x0333A1A4 CMP X10, X14
	0x0333A1A8 B.CS 0x333A1D4
	0x0333A1AC LDR X13, [X13 + 0x30]
	0x0333A1B0 SUB W9, W9, 0x1
	0x0333A1B4 STR X13, [X12, X10, LSL #3]
	0x0333A1B8 ADD X10, X10, 0x1
	0x0333A1BC CMP X10, X11
	0x0333A1C0 B.LT 0x333A188
	0x0333A1C4 LDP X20, X19, [X31 + 0x10]
	0x0333A1C8 LDR X30, [X31], #0x20
	0x0333A1CC RET
	0x0333A1D0 BL 0x1C16F20
	0x0333A1D4 BL 0x1C16F28
	0x0333A1D8 STR X30, [X31 - 0x20]!
	0x0333A1DC STP X20, X19, [X31 + 0x10]
	0x0333A1E0 ADRP X19, 0x10A2000
	0x0333A1E4 ADRP X20, 0xDEE000
	0x0333A1E8 LDRB W8, [X19 + 0xD21]
	0x0333A1EC LDR X20, [X20 + 0x408]
	0x0333A1F0 TBNZ X8, 0x0, 0x333A214
	0x0333A1F4 ADRP X0, 0xDEE000
	0x0333A1F8 LDR X0, [X0 + 0x408]
	0x0333A1FC BL 0x1C16CF4
	0x0333A200 ADRP X0, 0xDB9000
	0x0333A204 LDR X0, [X0 + 0xAC8]
	0x0333A208 BL 0x1C16CF4
	0x0333A20C MOVZ W8, 0x1
	0x0333A210 STRB W8, [X19 + 0xD21]
	0x0333A214 LDR X0, [X20]
	0x0333A218 LDR W8, [X0 + 0xE0]
	0x0333A21C CBNZ W8, 0x333A224
	0x0333A220 BL 0x1C16DFC
	0x0333A224 BL 0x33397A8
	0x0333A228 CBZ X0, 0x333A2A4
	0x0333A22C ADRP X8, 0xDB9000
	0x0333A230 LDR X8, [X8 + 0xAC8]
	0x0333A234 MOV X19, X0
	0x0333A238 LDR W1, [X19 + 0x18]
	0x0333A23C LDR X0, [X8]
	0x0333A240 BL 0x1C16D6C
	0x0333A244 LDR X8, [X19 + 0x18]
	0x0333A248 SUBS W9, W8, 0x1
	0x0333A24C B.LT 0x333A298
	0x0333A250 MOV X10, X31
	0x0333A254 SXTW X11, W8
	0x0333A258 ADD X12, X0, 0x20
	0x0333A25C CMP W9, W8
	0x0333A260 B.CS 0x333A2A8
	0x0333A264 ADD X13, X19, W9, 0x3, SXTW
	0x0333A268 LDR X13, [X13 + 0x20]
	0x0333A26C CBZ X13, 0x333A2A4
	0x0333A270 CBZ X0, 0x333A2A4
	0x0333A274 LDR W14, [X0 + 0x18]
	0x0333A278 CMP X10, X14
	0x0333A27C B.CS 0x333A2A8
	0x0333A280 LDR X13, [X13 + 0x40]
	0x0333A284 SUB W9, W9, 0x1
	0x0333A288 STR X13, [X12, X10, LSL #3]
	0x0333A28C ADD X10, X10, 0x1
	0x0333A290 CMP X10, X11
	0x0333A294 B.LT 0x333A25C
	0x0333A298 LDP X20, X19, [X31 + 0x10]
	0x0333A29C LDR X30, [X31], #0x20
	0x0333A2A0 RET
	0x0333A2A4 BL 0x1C16F20
	0x0333A2A8 BL 0x1C16F28
	0x0333A2AC STR X30, [X31 - 0x10]!
	0x0333A2B0 LDR X0, [X0 + 0x20]
	0x0333A2B4 CBZ X0, 0x333A2C4
	0x0333A2B8 MOV X3, X31
	0x0333A2BC LDR X30, [X31], #0x10
	0x0333A2C0 B 0x3336C80
	0x0333A2C4 BL 0x1C16F20
	0x0333A2C8 STP X30, X19, [X31 - 0x10]!
	0x0333A2CC MOV X19, X0
	0x0333A2D0 LDR W0, [X0 + 0x18]
	0x0333A2D4 ADDS W31, W0, 0x1
	0x0333A2D8 B.NE 0x333A2FC
	0x0333A2DC LDR X8, [X19]
	0x0333A2E0 MOV X0, X19
	0x0333A2E4 LDP X9, X1, [X8 + 0x1A8]
	0x0333A2E8 BLR X9
	0x0333A2EC MOVZ W1, 0x63
	0x0333A2F0 MOV X2, X31
	0x0333A2F4 BL 0x33335E0
	0x0333A2F8 STR W0, [X19 + 0x18]
	0x0333A2FC LDP X30, X19, [X31], #0x10
	0x0333A300 RET
	0x0333A304 SUB X31, X31, 0x40
	0x0333A308 STP X30, X23, [X31 + 0x10]
	0x0333A30C STP X22, X21, [X31 + 0x20]
	0x0333A310 STP X20, X19, [X31 + 0x30]
	0x0333A314 MOV W20, W1
	0x0333A318 MOV X1, X31
	0x0333A31C MOV X19, X0
	0x0333A320 BL 0x3332E70
	0x0333A324 CMP W20, 0x63
	0x0333A328 B.LT 0x333A358
	0x0333A32C LDR X8, [X19 + 0x20]
	0x0333A330 CBZ X8, 0x333A438
	0x0333A334 LDR W8, [X8 + 0x10]
	0x0333A338 CMP W8, W20
	0x0333A33C B.LT 0x333A358
	0x0333A340 STR W20, [X19 + 0x18]
	0x0333A344 LDP X20, X19, [X31 + 0x30]
	0x0333A348 LDP X22, X21, [X31 + 0x20]
	0x0333A34C LDP X30, X23, [X31 + 0x10]
	0x0333A350 ADD X31, X31, 0x40
	0x0333A354 RET
	0x0333A358 ADRP X0, 0xDBB000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X8, [X0]
	012 Move W23, W4
	013 Move W24, W3
	014 Move W3, [X31+96]
	015 Move X9, [X8+520]
	016 Move X4, [X8+528]
	017 Move W20, W7
	018 Move W21, W6
	019 Move W22, W5
	020 Move W19, W2
	021 Move X25, X0
	022 Move W26, W1
	023 NotImplemented "Instruction BLR not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, X25
	027 Move W1, W26
	028 Move W2, W19
	029 Move W3, W24
	030 Call HijriCalendar.GetAbsoluteDateHijri, X0, X1, X2, X3
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {106}
	035 Move X19, X0
	036 Move W0, W23
	037 Move W1, W22
	038 Move W2, W21
	039 Move W3, W20
	040 Move X4, X31
	041 Call Calendar.TimeToTicks, X0, X1, X2, X3
	042 Move X8, 0xC000
	043 NotImplemented "Instruction MOVK not yet implemented."
	044 NotImplemented "Instruction MOVK not yet implemented."
	045 NotImplemented "Instruction MADD not yet implemented."
	046 Add X0, X31, 24
	047 Move X2, X31
	048 Move [X31+24], X31
	049 Call DateTime..ctor, X0, X1
	050 Move X30, [X31+16]
	051 Move X0, [X31+24]
	052 Move X20, [X31+80]
	053 Move X19, [X31+88]
	054 Move X22, [X31+64]
	055 Move X21, [X31+72]
	056 Move X24, [X31+48]
	057 Move X23, [X31+56]
	058 Move X26, [X31+32]
	059 Move X25, [X31+40]
	060 Add X31, X31, 96
	061 Return X0
	062 Move X8, 0xDBC000
	063 Move X8, [X8+3144]
	064 Move W22, W0
	065 Move X0, X8
	066 Call 0x1C17D08
	067 Call 0x19913D0
	068 Call CultureInfo.get_CurrentCulture
	069 Move X20, X0
	070 Move X0, 0xDEF000
	071 Move X0, [X0+2472]
	072 Call 0x1C17D08
	073 Move X1, X31
	074 Call Environment.GetResourceString, X0
	075 Move [X31+12], W22
	076 Move X22, 0xDBA000
	077 Move X22, [X22+1880]
	078 Move X21, X0
	079 Move X0, X22
	080 Call 0x1C17D08
	081 Add X1, X31, 12
	082 Call 0x1C17E04
	083 Move X23, X0
	084 Move X0, X22
	085 Move [X31+8], W19
	086 Call 0x1C17D08
	087 Add X1, X31, 8
	088 Call 0x1C17E04
	089 Move X3, X0
	090 Move X0, X20
	091 Move X1, X21
	092 Move X2, X23
	093 Move X4, X31
	094 Call String.Format, X0, X1, X2, X3
	095 Move X19, X0
	096 Move X0, 0xDC2000
	097 Move X0, [X0+1888]
	098 Call 0x1C17D08
	099 Call 0x1C17F10
	100 Move X20, X0
	101 Move X0, 0xDEE000
	102 Move X0, [X0+3512]
	103 Call 0x1C17D08
	104 Move X1, X0
	105 Move X0, X20
	106 Move X0, 0xDEF000
	107 Move X0, [X0+2232]
	108 Call 0x1C17D08
	109 Move X1, X31
	110 Call Environment.GetResourceString, X0
	111 Move X19, X0
	112 Move X0, 0xDC2000
	113 Move X0, [X0+1888]
	114 Call 0x1C17D08
	115 Call 0x1C17F10
	116 Move X20, X0
	117 Move X1, X31
	118 Move X2, X19
	119 Move X3, X31
	120 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	121 Move X0, 0xDEF000
	122 Move X0, [X0+2480]
	123 Call 0x1C17D08
	124 Move X1, X0
	125 Move X0, X20
	126 Call 0x1C17DEC

Method: System.Int32 get_TwoDigitYearMax()

Disassembly:
	0x0333A35C LDR X0, [X0 + 0xC48]
	0x0333A360 BL 0x1C16D08
	0x0333A364 BL 0x19903D0
	0x0333A368 BL 0x33387A0
	0x0333A36C MOV X20, X0
	0x0333A370 ADRP X0, 0xDE8000
	0x0333A374 LDR X0, [X0 + 0x370]
	0x0333A378 BL 0x1C16D08
	0x0333A37C MOV X1, X31
	0x0333A380 BL 0x33BDD84
	0x0333A384 MOVZ W8, 0x63
	0x0333A388 STR W8, [X31 + 0xC]
	0x0333A38C ADRP X22, 0xDB9000
	0x0333A390 LDR X22, [X22 + 0x758]
	0x0333A394 MOV X21, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move W0, [X0+24]
	005 Add W31, W0, 1
	006 Move X8, [X19]
	007 Move X0, X19
	008 Move X9, [X8+424]
	009 Move X1, [X8+432]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move W1, 1451
	012 Move X2, X31
	013 Call Calendar.GetSystemTwoDigitYearSetting, X0, X1
	014 Move [X19+24], W0
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return X0

Method: System.Void set_TwoDigitYearMax(System.Int32 value)

Disassembly:
	0x0333A398 MOV X0, X22
	0x0333A39C BL 0x1C16D08
	0x0333A3A0 ADD X1, X31, 0xC
	0x0333A3A4 BL 0x1C16E04
	0x0333A3A8 LDR X19, [X19 + 0x20]
	0x0333A3AC MOV X23, X0
	0x0333A3B0 MOV X0, X19
	0x0333A3B4 BL 0x19903C0
	0x0333A3B8 LDR W8, [X19 + 0x10]
	0x0333A3BC MOV X0, X22
	0x0333A3C0 STR W8, [X31 + 0x8]
	0x0333A3C4 BL 0x1C16D08
	0x0333A3C8 ADD X1, X31, 0x8
	0x0333A3CC BL 0x1C16E04
	0x0333A3D0 MOV X3, X0
	0x0333A3D4 MOV X0, X20
	0x0333A3D8 MOV X1, X21
	0x0333A3DC MOV X2, X23
	0x0333A3E0 MOV X4, X31
	0x0333A3E4 BL 0x3227D58
	0x0333A3E8 MOV X19, X0
	0x0333A3EC ADRP X0, 0xDC1000
	0x0333A3F0 LDR X0, [X0 + 0x760]
	0x0333A3F4 BL 0x1C16D08
	0x0333A3F8 BL 0x1C16F10
	0x0333A3FC MOV X20, X0
	0x0333A400 ADRP X0, 0xDEE000
	0x0333A404 LDR X0, [X0 + 0x5A8]
	0x0333A408 BL 0x1C16D08
	0x0333A40C MOV X1, X0
	0x0333A410 MOV X0, X20
	0x0333A414 MOV X2, X19
	0x0333A418 MOV X3, X31
	0x0333A41C BL 0x3311888
	0x0333A420 ADRP X0, 0xDEE000
	0x0333A424 LDR X0, [X0 + 0xA50]
	0x0333A428 BL 0x1C16D08
	0x0333A42C MOV X1, X0
	0x0333A430 MOV X0, X20
	0x0333A434 BL 0x1C16DEC
	0x0333A438 BL 0x1C16F20
	0x0333A43C STR X30, [X31 - 0x20]!
	0x0333A440 STP X20, X19, [X31 + 0x10]
	0x0333A444 ADRP X20, 0x10A2000
	0x0333A448 ADRP X19, 0xDEE000
	0x0333A44C LDRB W8, [X20 + 0xD22]
	0x0333A450 LDR X19, [X19 + 0x408]
	0x0333A454 TBNZ X8, 0x0, 0x333A46C
	0x0333A458 ADRP X0, 0xDEE000
	0x0333A45C LDR X0, [X0 + 0x408]
	0x0333A460 BL 0x1C16CF4
	0x0333A464 MOVZ W8, 0x1
	0x0333A468 STRB W8, [X20 + 0xD22]
	0x0333A46C ADD X0, X31, 0x8
	0x0333A470 MOVZ W1, 0x74C
	0x0333A474 MOVZ W2, 0x9
	0x0333A478 MOVZ W3, 0x8
	0x0333A47C MOV X4, X31
	0x0333A480 STR X31, [X31 + 0x8]
	0x0333A484 BL 0x335F0C4
	0x0333A488 LDR X8, [X19]
	0x0333A48C LDR X9, [X31 + 0x8]
	0x0333A490 LDP X20, X19, [X31 + 0x10]
	0x0333A494 LDR X8, [X8 + 0xB8]
	0x0333A498 STR X9, [X8]
	0x0333A49C LDR X30, [X31], #0x20
	0x0333A4A0 RET
	0x0333A4A4 MOV X1, X31
	0x0333A4A8 B 0x333A4AC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W19, W1
	007 Move X1, X31
	008 Move X20, X0
	009 Call Calendar.VerifyWritable, X0
	010 Subtract W8, W19, 99
	011 Move W8, W8
	012 ShiftRight W8, 5
	013 And W8, W8, 0x7FFFFFFF
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move [X20+24], W19
	016 Move X20, [X31+32]
	017 Move X19, [X31+40]
	018 Move X22, [X31+16]
	019 Move X21, [X31+24]
	020 Move X30, [X31+48]
	021 Return 
	022 Move X0, 0xDBC000
	023 Move X0, [X0+3144]
	024 Call 0x1C17D08
	025 Call 0x19913D0
	026 Call CultureInfo.get_CurrentCulture
	027 Move X19, X0
	028 Move X0, 0xDE9000
	029 Move X0, [X0+880]
	030 Call 0x1C17D08
	031 Move X1, X31
	032 Call Environment.GetResourceString, X0
	033 Move W8, 99
	034 Move [X31+12], W8
	035 Move X21, 0xDBA000
	036 Move X21, [X21+1880]
	037 Move X20, X0
	038 Move X0, X21
	039 Call 0x1C17D08
	040 Add X1, X31, 12
	041 Call 0x1C17E04
	042 Move X22, X0
	043 Move W8, 0x25C2
	044 Move X0, X21
	045 Move [X31+8], W8
	046 Call 0x1C17D08
	047 Add X1, X31, 8
	048 Call 0x1C17E04
	049 Move X3, X0
	050 Move X0, X19
	051 Move X1, X20
	052 Move X2, X22
	053 Move X4, X31
	054 Call String.Format, X0, X1, X2, X3
	055 Move X19, X0
	056 Move X0, 0xDC2000
	057 Move X0, [X0+1888]
	058 Call 0x1C17D08
	059 Call 0x1C17F10
	060 Move X20, X0
	061 Move X0, 0xDC4000
	062 Move X0, [X0+3784]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X20
	066 Move X2, X19
	067 Move X3, X31
	068 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	069 Move X0, 0xDEF000
	070 Move X0, [X0+2488]
	071 Call 0x1C17D08
	072 Move X1, X0
	073 Move X0, X20
	074 Call 0x1C17DEC

Method: System.Int32 ToFourDigitYear(System.Int32 year)

Disassembly:
	0x0333A4AC STR X30, [X31 - 0x30]!
	0x0333A4B0 STP X22, X21, [X31 + 0x10]
	0x0333A4B4 STP X20, X19, [X31 + 0x20]
	0x0333A4B8 ADRP X22, 0x10A2000
	0x0333A4BC ADRP X21, 0xDBA000
	0x0333A4C0 LDRB W8, [X22 + 0xD23]
	0x0333A4C4 LDR X21, [X21 + 0xE58]
	0x0333A4C8 MOV X20, X1
	0x0333A4CC MOV X19, X0
	0x0333A4D0 TBNZ X8, 0x0, 0x333A5F0
	0x0333A4D4 ADRP X0, 0xDED000
	0x0333A4D8 LDR X0, [X0 + 0x930]
	0x0333A4DC BL 0x1C16CF4
	0x0333A4E0 ADRP X0, 0xDBA000
	0x0333A4E4 LDR X0, [X0 + 0xE58]
	0x0333A4E8 BL 0x1C16CF4
	0x0333A4EC ADRP X0, 0xDB9000
	0x0333A4F0 LDR X0, [X0 + 0xAC8]
	0x0333A4F4 BL 0x1C16CF4
	0x0333A4F8 ADRP X0, 0xDEE000
	0x0333A4FC LDR X0, [X0 + 0xA58]
	0x0333A500 BL 0x1C16CF4
	0x0333A504 ADRP X0, 0xDCA000
	0x0333A508 LDR X0, [X0 + 0x118]
	0x0333A50C BL 0x1C16CF4
	0x0333A510 ADRP X0, 0xDBE000
	0x0333A514 LDR X0, [X0 + 0x3F8]
	0x0333A518 BL 0x1C16CF4
	0x0333A51C ADRP X0, 0xDCA000
	0x0333A520 LDR X0, [X0 + 0x338]
	0x0333A524 BL 0x1C16CF4
	0x0333A528 ADRP X0, 0xDCA000
	0x0333A52C LDR X0, [X0 + 0x9A8]
	0x0333A530 BL 0x1C16CF4
	0x0333A534 ADRP X0, 0xDCB000
	0x0333A538 LDR X0, [X0 + 0x8B0]
	0x0333A53C BL 0x1C16CF4
	0x0333A540 ADRP X0, 0xDBA000
	0x0333A544 LDR X0, [X0 + 0x2A8]
	0x0333A548 BL 0x1C16CF4
	0x0333A54C ADRP X0, 0xDEE000
	0x0333A550 LDR X0, [X0 + 0xA60]
	0x0333A554 BL 0x1C16CF4
	0x0333A558 ADRP X0, 0xDEE000
	0x0333A55C LDR X0, [X0 + 0xA68]
	0x0333A560 BL 0x1C16CF4
	0x0333A564 ADRP X0, 0xDE3000
	0x0333A568 LDR X0, [X0 + 0xB08]
	0x0333A56C BL 0x1C16CF4
	0x0333A570 ADRP X0, 0xDEE000
	0x0333A574 LDR X0, [X0 + 0xA70]
	0x0333A578 BL 0x1C16CF4
	0x0333A57C ADRP X0, 0xDD2000
	0x0333A580 LDR X0, [X0 + 0x370]
	0x0333A584 BL 0x1C16CF4
	0x0333A588 ADRP X0, 0xDD2000
	0x0333A58C LDR X0, [X0 + 0x428]
	0x0333A590 BL 0x1C16CF4
	0x0333A594 ADRP X0, 0xDEE000
	0x0333A598 LDR X0, [X0 + 0xA78]
	0x0333A59C BL 0x1C16CF4
	0x0333A5A0 ADRP X0, 0xDD8000
	0x0333A5A4 LDR X0, [X0 + 0x6C8]
	0x0333A5A8 BL 0x1C16CF4
	0x0333A5AC ADRP X0, 0xDBB000
	0x0333A5B0 LDR X0, [X0 + 0x3A0]
	0x0333A5B4 BL 0x1C16CF4
	0x0333A5B8 ADRP X0, 0xDDD000
	0x0333A5BC LDR X0, [X0 + 0xEC0]
	0x0333A5C0 BL 0x1C16CF4
	0x0333A5C4 ADRP X0, 0xDC2000
	0x0333A5C8 LDR X0, [X0 + 0x790]
	0x0333A5CC BL 0x1C16CF4
	0x0333A5D0 ADRP X0, 0xDDF000
	0x0333A5D4 LDR X0, [X0 + 0x5A8]
	0x0333A5D8 BL 0x1C16CF4
	0x0333A5DC ADRP X0, 0xDBB000
	0x0333A5E0 LDR X0, [X0 + 0x4B0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move TEMP, X1
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {28}
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W8, 0x25C3
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X20, [X31+32]
	014 Move X19, [X31+40]
	015 Move X22, [X31+16]
	016 Move X21, [X31+24]
	017 Move W0, W1
	018 Move X30, [X31+48]
	019 Return X0
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X22, [X31+16]
	023 Move X21, [X31+24]
	024 Move X2, X31
	025 Move X30, [X31+48]
	026 Call Calendar.ToFourDigitYear, X0, X1
	027 Return X0
	028 Move X0, 0xDE2000
	029 Move X0, [X0+1648]
	030 Call 0x1C17D08
	031 Move X1, X31
	032 Call Environment.GetResourceString, X0
	033 Move X0, 0xDBC000
	034 Move X0, [X0+3144]
	035 Call 0x1C17D08
	036 Call 0x19913D0
	037 Call CultureInfo.get_CurrentCulture
	038 Move X19, X0
	039 Move X0, 0xDE9000
	040 Move X0, [X0+880]
	041 Call 0x1C17D08
	042 Move X1, X31
	043 Call Environment.GetResourceString, X0
	044 Move W8, 1
	045 Move [X31+12], W8
	046 Move X21, 0xDBA000
	047 Move X21, [X21+1880]
	048 Move X20, X0
	049 Move X0, X21
	050 Call 0x1C17D08
	051 Add X1, X31, 12
	052 Call 0x1C17E04
	053 Move X22, X0
	054 Move W8, 0x25C2
	055 Move X0, X21
	056 Move [X31+8], W8
	057 Call 0x1C17D08
	058 Add X1, X31, 8
	059 Call 0x1C17E04
	060 Move X3, X0
	061 Move X0, X19
	062 Move X1, X20
	063 Move X2, X22
	064 Move X4, X31
	065 Call String.Format, X0, X1, X2, X3
	066 Move X19, X0
	067 Move X0, 0xDC2000
	068 Move X0, [X0+1888]
	069 Call 0x1C17D08
	070 Call 0x1C17F10
	071 Move X20, X0
	072 Move X0, 0xDEF000
	073 Move X0, [X0+1448]
	074 Call 0x1C17D08
	075 Move X1, X0
	076 Move X0, X20
	077 Move X2, X19
	078 Move X3, X31
	079 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	080 Move X0, 0xDEF000
	081 Move X0, [X0+2496]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X20
	085 Call 0x1C17DEC

Method: System.Void .cctor()

Disassembly:
	0x0333A5E4 BL 0x1C16CF4
	0x0333A5E8 MOVZ W8, 0x1
	0x0333A5EC STRB W8, [X22 + 0xD23]
	0x0333A5F0 LDR X0, [X21]
	0x0333A5F4 MOVZ W1, 0x1
	0x0333A5F8 BL 0x1C16D6C
	0x0333A5FC CBZ X0, 0x333A8D8
	0x0333A600 LDR W8, [X0 + 0x18]
	0x0333A604 CBZ W8, 0x333A8D4
	0x0333A608 MOVZ W8, 0x3
	0x0333A60C STR W8, [X0 + 0x20]
	0x0333A610 STR X0, [X19 + 0x10]
	0x0333A614 LDR X0, [X21]
	0x0333A618 MOVZ W1, 0x1
	0x0333A61C BL 0x1C16D6C
	0x0333A620 CBZ X0, 0x333A8D8
	0x0333A624 LDR W8, [X0 + 0x18]
	0x0333A628 CBZ W8, 0x333A8D4
	0x0333A62C MOVZ W8, 0x3
	0x0333A630 STR W8, [X0 + 0x20]
	0x0333A634 STR X0, [X19 + 0x18]
	0x0333A638 LDR X0, [X21]
	0x0333A63C MOVZ W1, 0x1
	0x0333A640 BL 0x1C16D6C
	0x0333A644 CBZ X0, 0x333A8D8
	0x0333A648 LDR W8, [X0 + 0x18]
	0x0333A64C CBZ W8, 0x333A8D4
	0x0333A650 ADRP X8, 0xDBE000
	0x0333A654 LDR X8, [X8 + 0x3F8]
	0x0333A658 MOVZ W9, 0x3
	0x0333A65C STR W9, [X0 + 0x20]
	0x0333A660 STR X0, [X19 + 0x20]
	0x0333A664 LDR X8, [X8]
	0x0333A668 ADRP X9, 0xDBA000
	0x0333A66C LDR X9, [X9 + 0x2A8]
	0x0333A670 ADRP X10, 0xDEE000
	0x0333A674 STR X8, [X19 + 0x28]
	0x0333A678 ADRP X11, 0xDEE000
	0x0333A67C LDR X8, [X9]
	0x0333A680 ADRP X9, 0xDC2000
	0x0333A684 LDR X9, [X9 + 0x790]
	0x0333A688 MOVZ W1, 0xA
	0x0333A68C STR X8, [X19 + 0x30]
	0x0333A690 LDR X8, [X9]
	0x0333A694 ADRP X9, 0xDBB000
	0x0333A698 LDR X9, [X9 + 0x3A0]
	0x0333A69C STR X8, [X19 + 0x38]
	0x0333A6A0 LDR X9, [X9]
	0x0333A6A4 LDR X10, [X10 + 0xA60]
	0x0333A6A8 STP X9, X8, [X19 + 0x48]
	0x0333A6AC STR X9, [X19 + 0x40]
	0x0333A6B0 LDR X10, [X10]
	0x0333A6B4 LDR X11, [X11 + 0xA78]
	0x0333A6B8 STR X10, [X19 + 0x58]
	0x0333A6BC LDR X10, [X11]
	0x0333A6C0 ADRP X11, 0xDEE000
	0x0333A6C4 LDR X11, [X11 + 0xA68]
	0x0333A6C8 STR X10, [X19 + 0x68]
	0x0333A6CC LDR X10, [X11]
	0x0333A6D0 ADRP X11, 0xDEE000
	0x0333A6D4 LDR X11, [X11 + 0xA70]
	0x0333A6D8 STR X10, [X19 + 0x70]
	0x0333A6DC LDR X10, [X11]
	0x0333A6E0 ADRP X11, 0xDE3000
	0x0333A6E4 LDR X11, [X11 + 0xB08]
	0x0333A6E8 STR X9, [X19 + 0x88]
	0x0333A6EC STP X10, X8, [X19 + 0x78]
	0x0333A6F0 ADRP X9, 0xDEE000
	0x0333A6F4 LDR X8, [X11]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x10A3000
	009 Move X20, 0xDEF000
	010 Move X22, 0xDBB000
	011 Move X19, 0xDEF000
	012 Move X21, 0xDBB000
	013 Move W8, [X23+3354]
	014 Move X20, [X20+2416]
	015 Move X22, [X22+3672]
	016 Move X19, [X19+2504]
	017 Move X21, [X21+2544]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0xDBB000
	023 Move X0, [X0+2544]
	024 Call 0x1C17CF4
	025 Move X0, 0xDEF000
	026 Move X0, [X0+2416]
	027 Call 0x1C17CF4
	028 Move X0, 0xDBB000
	029 Move X0, [X0+3672]
	030 Call 0x1C17CF4
	031 Move X0, 0xDEF000
	032 Move X0, [X0+2504]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X23+3354], W8
	036 Move X8, [X20]
	037 Move W9, 1
	038 Move W1, 13
	039 Move X8, [X8+184]
	040 Move [X8], W9
	041 Move X0, [X22]
	042 Call 0x1C17D6C
	043 Move X1, [X19]
	044 Move X2, X31
	045 Move X19, X0
	046 Call RuntimeHelpers.InitializeArray, X0, X1
	047 Move X8, [X20]
	048 Add X0, X31, 8
	049 Move W1, 622
	050 Move W2, 7
	051 Move X8, [X8+184]
	052 Move W3, 18
	053 Move X4, X31
	054 Move [X8+8], X19
	055 Move [X31+8], X31
	056 Call DateTime..ctor, X0, X1, X2, X3
	057 Move X8, [X20]
	058 Move X9, [X31+8]
	059 Move X8, [X8+184]
	060 Move [X8+16], X9
	061 Move X0, [X21]
	062 Move W9, [X0+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {69}
	065 Call 0x1C17DFC
	066 Move X8, [X20]
	067 Move X0, [X21]
	068 Move X8, [X8+184]
	069 Move X9, [X0+184]
	070 Move X20, [X31+48]
	071 Move X19, [X31+56]
	072 Move X22, [X31+32]
	073 Move X21, [X31+40]
	074 Move X30, [X31+16]
	075 Move X23, [X31+24]
	076 Move X9, [X9+24]
	077 Move [X8+24], X9
	078 Add X31, X31, 64
	079 Return 

