Type: System.Globalization.SortKey

Method: System.Int32 Compare(System.Globalization.SortKey sortkey1, System.Globalization.SortKey sortkey2)

Disassembly:
	0x03340AA4 B.GE 0x3340AD8
	0x03340AA8 MOV X0, X21
	0x03340AAC MOV W1, W22
	0x03340AB0 MOV X2, X31
	0x03340AB4 BL 0x3222A1C
	0x03340AB8 AND W8, W0, 0xFFFF
	0x03340ABC CMP W8, 0x27
	0x03340AC0 B.EQ 0x3340ACC
	0x03340AC4 CMP W8, 0x5C
	0x03340AC8 B.NE 0x3340AD8
	0x03340ACC MOV W19, W22
	0x03340AD0 B 0x3340AD8
	0x03340AD4 EOR W23, W23, 0x1
	0x03340AD8 LDR W8, [X21 + 0x10]
	0x03340ADC ADD W19, W19, 0x1
	0x03340AE0 CMP W19, W8
	0x03340AE4 B.LT 0x3340A44
	0x03340AE8 MOVN W19, 0x0
	0x03340AEC MOV W0, W19
	0x03340AF0 LDP X20, X19, [X31 + 0x20]
	0x03340AF4 LDP X22, X21, [X31 + 0x10]
	0x03340AF8 LDP X30, X23, [X31], #0x30
	0x03340AFC RET
	0x03340B00 BL 0x1C16F20
	0x03340B04 STP X30, X25, [X31 - 0x40]!
	0x03340B08 STP X24, X23, [X31 + 0x10]
	0x03340B0C STP X22, X21, [X31 + 0x20]
	0x03340B10 STP X20, X19, [X31 + 0x30]
	0x03340B14 ADRP X22, 0x109C000
	0x03340B18 LDRB W8, [X22 + 0xD68]
	0x03340B1C MOV W20, W2
	0x03340B20 MOV W19, W1
	0x03340B24 MOV X21, X0
	0x03340B28 TBNZ X8, 0x0, 0x3340B40
	0x03340B2C ADRP X0, 0xDB3000
	0x03340B30 LDR X0, [X0 + 0x8F0]
	0x03340B34 BL 0x1C16CF4
	0x03340B38 MOVZ W8, 0x1
	0x03340B3C STRB W8, [X22 + 0xD68]
	0x03340B40 CBZ X21, 0x3340C9C
	0x03340B44 CMP W19, W20
	0x03340B48 MOV X22, X31
	0x03340B4C B.GT 0x3340C50
	0x03340B50 LDR W8, [X21 + 0x10]
	0x03340B54 CMP W8, W19
	0x03340B58 B.LE 0x3340C50
	0x03340B5C ADRP X25, 0xDB3000
	0x03340B60 LDR X25, [X25 + 0x8F0]
	0x03340B64 MOV X22, X31
	0x03340B68 MOV W23, W19
	0x03340B6C MOV X0, X21
	0x03340B70 MOV W1, W23
	0x03340B74 MOV X2, X31
	0x03340B78 BL 0x3222A1C
	0x03340B7C AND W8, W0, 0xFFFF
	0x03340B80 CMP W8, 0x5C
	0x03340B84 B.EQ 0x3340BC0
	0x03340B88 CMP W8, 0x27
	0x03340B8C B.NE 0x3340C14
	0x03340B90 CBNZ X22, 0x3340C38
	0x03340B94 LDR X0, [X25]
	0x03340B98 LDR W24, [X21 + 0x10]
	0x03340B9C BL 0x1C16F10
	0x03340BA0 SUB W3, W23, W19
	0x03340BA4 MOV X1, X21
	0x03340BA8 MOV W2, W19
	0x03340BAC MOV W4, W24
	0x03340BB0 MOV X5, X31
	0x03340BB4 MOV X22, X0
	0x03340BB8 BL 0x3231D30
	0x03340BBC B 0x3340C38
	0x03340BC0 CBNZ X22, 0x3340BEC
	0x03340BC4 LDR X0, [X25]
	0x03340BC8 LDR W24, [X21 + 0x10]
	0x03340BCC BL 0x1C16F10
	0x03340BD0 SUB W3, W23, W19
	0x03340BD4 MOV X1, X21
	0x03340BD8 MOV W2, W19
	0x03340BDC MOV W4, W24
	0x03340BE0 MOV X5, X31
	0x03340BE4 MOV X22, X0
	0x03340BE8 BL 0x3231D30
	0x03340BEC LDR W8, [X21 + 0x10]
	0x03340BF0 ADD W23, W23, 0x1
	0x03340BF4 CMP W23, W8
	0x03340BF8 B.GE 0x3340C38
	0x03340BFC MOV X0, X21
	0x03340C00 MOV W1, W23
	0x03340C04 MOV X2, X31
	0x03340C08 BL 0x3222A1C
	0x03340C0C CBNZ X22, 0x3340C28

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {71}
	007 Move X20, X1
	008 Compare X1, 0
	009 JumpIfEqual {78}
	010 Move X19, X0
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X8, [X19]
	013 Move X0, X19
	014 Move X9, [X8+376]
	015 Move X1, [X8+384]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move X8, [X20]
	018 Move X21, X0
	019 Move X0, X20
	020 Move X9, [X8+376]
	021 Move X1, [X8+384]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X8, [X19]
	025 Move X0, X19
	026 Move X9, [X8+392]
	027 Move X1, [X8+400]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move X8, [X20]
	030 Move X19, X0
	031 Move X0, X20
	032 Move X9, [X8+392]
	033 Move X1, [X8+400]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Compare X19, 0
	036 JumpIfEqual {96}
	037 Compare X0, 0
	038 JumpIfEqual {96}
	039 Move W8, [X19+24]
	040 Move W9, [X0+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CSEL not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W11, W31
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X11, W11
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add X12, X19, X11
	049 Add X13, X0, X11
	050 Move W12, [X12+32]
	051 Move W13, [X13+32]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add W11, W11, 1
	054 NotImplemented "Instruction CMP not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move W0, W31
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Return X0
	062 Move TEMP, 0
	063 Not TEMP
	064 Move W8, TEMP
	065 NotImplemented "Instruction CSNEG not yet implemented."
	066 Move TEMP, 0
	067 Not TEMP
	068 Move W8, TEMP
	069 NotImplemented "Instruction CSNEG not yet implemented."
	070 Call 0x1C17F28
	071 Move X0, 0xDB9000
	072 Move X0, [X0+1320]
	073 Call 0x1C17D08
	074 Call 0x1C17F10
	075 Move X19, X0
	076 Move X0, 0xDE9000
	077 Move X0, [X0+3112]
	078 Move X0, 0xDB9000
	079 Move X0, [X0+1320]
	080 Call 0x1C17D08
	081 Call 0x1C17F10
	082 Move X19, X0
	083 Move X0, 0xDE9000
	084 Move X0, [X0+3120]
	085 Call 0x1C17D08
	086 Move X1, X0
	087 Move X0, X19
	088 Move X2, X31
	089 Call ArgumentNullException..ctor, X0, X1
	090 Move X0, 0xDE9000
	091 Move X0, [X0+3128]
	092 Call 0x1C17D08
	093 Move X1, X0
	094 Move X0, X19
	095 Call 0x1C17DEC
	096 Call 0x1C17F20

Method: System.Void .ctor(System.Int32 lcid, System.String source, System.Globalization.CompareOptions opt)

Disassembly:
	0x03340C10 B 0x3340C9C
	0x03340C14 CBZ X22, 0x3340C38
	0x03340C18 MOV X0, X21
	0x03340C1C MOV W1, W23
	0x03340C20 MOV X2, X31
	0x03340C24 BL 0x3222A1C
	0x03340C28 MOV W1, W0
	0x03340C2C MOV X0, X22
	0x03340C30 MOV X2, X31
	0x03340C34 BL 0x3233D30
	0x03340C38 ADD W23, W23, 0x1
	0x03340C3C CMP W23, W20
	0x03340C40 B.GT 0x3340C50
	0x03340C44 LDR W8, [X21 + 0x10]
	0x03340C48 CMP W23, W8
	0x03340C4C B.LT 0x3340B6C
	0x03340C50 CBZ X22, 0x3340C74
	0x03340C54 LDR X8, [X22]
	0x03340C58 MOV X0, X22
	0x03340C5C LDP X20, X19, [X31 + 0x30]
	0x03340C60 LDP X22, X21, [X31 + 0x20]
	0x03340C64 LDP X2, X1, [X8 + 0x168]
	0x03340C68 LDP X24, X23, [X31 + 0x10]
	0x03340C6C LDP X30, X25, [X31], #0x40
	0x03340C70 BR X2
	0x03340C74 SUB W8, W20, W19
	0x03340C78 MOV X0, X21
	0x03340C7C MOV W1, W19
	0x03340C80 LDP X20, X19, [X31 + 0x30]
	0x03340C84 LDP X22, X21, [X31 + 0x20]
	0x03340C88 LDP X24, X23, [X31 + 0x10]
	0x03340C8C ADD W2, W8, 0x1
	0x03340C90 MOV X3, X31
	0x03340C94 LDP X30, X25, [X31], #0x40
	0x03340C98 B 0x3228DE4
	0x03340C9C BL 0x1C16F20
	0x03340CA0 RET
	0x03340CA4 RET
	0x03340CA8 MOV X8, X0
	0x03340CAC MOVN W0, 0x0
	0x03340CB0 ADD W0, W0, 0x1
	0x03340CB4 LDRB W9, [X8, W0, SXTW]
	0x03340CB8 CBNZ W9, 0x3340CB0
	0x03340CBC RET
	0x03340CC0 STR X30, [X31 - 0x20]!
	0x03340CC4 STP X20, X19, [X31 + 0x10]
	0x03340CC8 MOV X20, X0
	0x03340CCC MOV X0, X31
	0x03340CD0 MOV W19, W1
	0x03340CD4 BL 0x3241948
	0x03340CD8 ADD X1, X20, W19, SXTW
	0x03340CDC MOVN W2, 0x0
	0x03340CE0 ADD W2, W2, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x109D000
	009 Move W8, [X23+3418]
	010 Move W21, W3
	011 Move X19, X2
	012 Move W22, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xDB4000
	019 Move X0, [X0+1560]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+3418], W8
	023 Move X0, X20
	024 Move X1, X31
	025 Call Object..ctor, X0
	026 Move [X20+16], X19
	027 Move [X20+32], W21
	028 Move [X20+36], W22
	029 Compare X19, 0
	030 JumpIfEqual {61}
	031 Move X8, 0xDB4000
	032 Move X8, [X8+1560]
	033 Move W21, [X19+16]
	034 Move X0, [X8]
	035 Move W1, W21
	036 Call 0x1C17D6C
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X22, X0
	039 Move X23, X31
	040 Add X24, X22, 32
	041 Move X0, X19
	042 Move W1, W23
	043 Move X2, X31
	044 Call String.get_Chars, X0, X1
	045 Compare X22, 0
	046 JumpIfEqual {61}
	047 Move W8, [X22+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move [X24], W0
	050 Add X23, X23, 1
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move [X20+24], X22
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 Move X30, [X31+64]
	060 Return 
	061 Call 0x1C17F20
	062 Call 0x1C17F28

Method: System.Void .ctor(System.Int32 lcid, System.String source, System.Byte[] buffer, System.Globalization.CompareOptions opt, System.Int32 lv1Length, System.Int32 lv2Length, System.Int32 lv3Length, System.Int32 kanaSmallLength, System.Int32 markTypeLength, System.Int32 katakanaLength, System.Int32 kanaWidthLength, System.Int32 identLength)

Disassembly:
	0x03340CE4 LDRB W8, [X1, W2, SXTW]
	0x03340CE8 CBNZ W8, 0x3340CE0
	0x03340CEC CBZ X0, 0x3340D00
	0x03340CF0 LDP X20, X19, [X31 + 0x10]
	0x03340CF4 MOV X3, X31
	0x03340CF8 LDR X30, [X31], #0x20
	0x03340CFC B 0x32448A4
	0x03340D00 BL 0x1C16F20
	0x03340D04 STP X30, X21, [X31 - 0x20]!
	0x03340D08 STP X20, X19, [X31 + 0x10]
	0x03340D0C ADRP X21, 0x109C000
	0x03340D10 LDRB W8, [X21 + 0xD69]
	0x03340D14 MOV W20, W2
	0x03340D18 MOV W19, W1
	0x03340D1C TBNZ X8, 0x0, 0x3340D34
	0x03340D20 ADRP X0, 0xDB4000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W22, W1
	008 Move X1, X31
	009 Move W19, W4
	010 Move X20, X3
	011 Move X21, X2
	012 Move X23, X0
	013 Call Object..ctor, X0
	014 Move [X23+16], X21
	015 Move [X23+24], X20
	016 Move [X23+32], W19
	017 Move [X23+36], W22
	018 Move X20, [X31+32]
	019 Move X19, [X31+40]
	020 Move X22, [X31+16]
	021 Move X21, [X31+24]
	022 Move X30, [X31+48]
	023 Move X23, [X31+56]
	024 Return 

Method: System.Void .ctor(System.String localeName, System.String str, System.Globalization.CompareOptions options, System.Byte[] keyData)

Disassembly:
	0x03340D24 LDR X0, [X0 + 0xE58]
	0x03340D28 BL 0x1C16CF4
	0x03340D2C MOVZ W8, 0x1
	0x03340D30 STRB W8, [X21 + 0xD69]
	0x03340D34 ADRP X8, 0xDB4000
	0x03340D38 LDR X8, [X8 + 0xE58]
	0x03340D3C ADDS W31, W19, 0x1
	0x03340D40 B.EQ 0x3340D78
	0x03340D44 LDR X0, [X8]
	0x03340D48 ADDS W31, W20, 0x1
	0x03340D4C B.EQ 0x3340D8C
	0x03340D50 MOVZ W1, 0x2
	0x03340D54 BL 0x1C16D6C
	0x03340D58 CBZ X0, 0x3340DB4
	0x03340D5C LDR W8, [X0 + 0x18]
	0x03340D60 CBZ W8, 0x3340DB0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Call Object..ctor, X0
	005 Move X0, 0xDBD000
	006 Move X0, [X0+1880]
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X1, X31
	010 Move X19, X0
	011 Call NotImplementedException..ctor, X0
	012 Move X0, 0xDE9000
	013 Move X0, [X0+3136]
	014 Call 0x1C17D08
	015 Move X1, X0
	016 Move X0, X19
	017 Call 0x1C17DEC

Method: System.String get_OriginalString()

Disassembly:
	0x03340D64 CMP W8, 0x1
	0x03340D68 STR W19, [X0 + 0x20]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Byte[] get_KeyData()

Disassembly:
	0x03340D6C B.EQ 0x3340DB0
	0x03340D70 STR W20, [X0 + 0x24]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Boolean Equals(System.Object value)

Disassembly:
	0x03340D74 B 0x3340DA4
	0x03340D78 LDR X0, [X8]
	0x03340D7C LDP X20, X19, [X31 + 0x10]
	0x03340D80 MOV W1, W31
	0x03340D84 LDP X30, X21, [X31], #0x20
	0x03340D88 B 0x1C16D6C
	0x03340D8C MOVZ W1, 0x1
	0x03340D90 BL 0x1C16D6C
	0x03340D94 CBZ X0, 0x3340DB4
	0x03340D98 LDR W8, [X0 + 0x18]
	0x03340D9C CBZ W8, 0x3340DB0
	0x03340DA0 STR W19, [X0 + 0x20]
	0x03340DA4 LDP X20, X19, [X31 + 0x10]
	0x03340DA8 LDP X30, X21, [X31], #0x20
	0x03340DAC RET
	0x03340DB0 BL 0x1C16F28
	0x03340DB4 BL 0x1C16F20
	0x03340DB8 B 0x1C428CC
	0x03340DBC STR X30, [X31 - 0x30]!
	0x03340DC0 STP X22, X21, [X31 + 0x10]
	0x03340DC4 STP X20, X19, [X31 + 0x20]
	0x03340DC8 ADRP X22, 0x109C000
	0x03340DCC ADRP X21, 0xDE2000
	0x03340DD0 LDRB W8, [X22 + 0xD6A]
	0x03340DD4 LDR X21, [X21 + 0x9E0]
	0x03340DD8 MOV W20, W1
	0x03340DDC MOV X19, X0
	0x03340DE0 TBNZ X8, 0x0, 0x3340DF8
	0x03340DE4 ADRP X0, 0xDE2000
	0x03340DE8 LDR X0, [X0 + 0x9E0]
	0x03340DEC BL 0x1C16CF4
	0x03340DF0 MOVZ W8, 0x1
	0x03340DF4 STRB W8, [X22 + 0xD6A]
	0x03340DF8 MOV X0, X19
	0x03340DFC MOV X1, X31
	0x03340E00 BL 0x33BDD8C
	0x03340E04 STR W20, [X19 + 0x10]
	0x03340E08 LDR X0, [X21]
	0x03340E0C LDR W8, [X0 + 0xE0]
	0x03340E10 CBNZ W8, 0x3340E1C
	0x03340E14 BL 0x1C16DFC
	0x03340E18 LDR X0, [X21]
	0x03340E1C LDR X8, [X0 + 0xB8]
	0x03340E20 LDR X8, [X8 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x109D000
	006 Move W8, [X21+3419]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xDE2000
	014 Move X0, [X0+3096]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3419], W8
	018 Compare X19, 0
	019 JumpIfEqual {42}
	020 Move X8, 0xDE2000
	021 Move X8, [X8+3096]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W8, [X20+36]
	032 Move W9, [X19+36]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W8, [X20+32]
	035 Move W9, [X19+32]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, X20
	038 Move X1, X19
	039 Call SortKey.Compare, X0, X1
	040 Compare W0, 0
	041 JumpIfEqual {48}
	042 Move W0, W31
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return X0
	048 Move W0, 1

Method: System.Int32 GetHashCode()

Disassembly:
	0x03340E24 CBZ X8, 0x3340E58
	0x03340E28 LDR W9, [X8 + 0x18]
	0x03340E2C CMP W9, W20
	0x03340E30 B.LS 0x3340E5C
	0x03340E34 ADD X8, X8, W20, 0x4, SXTW
	0x03340E38 LDRH W9, [X8 + 0x22]
	0x03340E3C LDP X22, X21, [X31 + 0x10]
	0x03340E40 STR W9, [X19 + 0x14]
	0x03340E44 LDR W8, [X8 + 0x24]
	0x03340E48 STR W8, [X19 + 0x30]
	0x03340E4C LDP X20, X19, [X31 + 0x20]
	0x03340E50 LDR X30, [X31], #0x30
	0x03340E54 RET
	0x03340E58 BL 0x1C16F20
	0x03340E5C BL 0x1C16F28
	0x03340E60 STP X30, X21, [X31 - 0x20]!
	0x03340E64 STP X20, X19, [X31 + 0x10]
	0x03340E68 ADRP X21, 0x109C000
	0x03340E6C LDRB W8, [X21 + 0xD6B]
	0x03340E70 MOV W19, W1
	0x03340E74 MOV X20, X0
	0x03340E78 TBNZ X8, 0x0, 0x3340E90
	0x03340E7C ADRP X0, 0xDE8000
	0x03340E80 LDR X0, [X0 + 0xC80]
	0x03340E84 BL 0x1C16CF4
	0x03340E88 MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move X9, [X0+24]
	003 Compare X9, 0
	004 JumpIfEqual {25}
	005 Move X10, [X9+24]
	006 Compare X10, 0
	007 JumpIfEqual {22}
	008 Compare W10, 0
	009 JumpIfEqual {26}
	010 Move W0, [X9+32]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 And X10, X10, 0
	013 Move X8, X31
	014 Add X9, X9, 33
	015 Subtract X10, X10, 1
	016 Move W11, [X9]
	017 Add X8, X8, 1
	018 And W12, W8, 3
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction LSLV not yet implemented."
	021 Xor W0, W11, W0
	022 Move W0, W31
	023 Move X30, [X31+16]
	024 Return X0
	025 Call 0x1C17F20
	026 Call 0x1C17F28

Method: System.String ToString()

Disassembly:
	0x03340E8C STRB W8, [X21 + 0xD6B]
	0x03340E90 CBZ X20, 0x3340F0C
	0x03340E94 MOV X0, X20
	0x03340E98 MOV W1, W31
	0x03340E9C MOV X2, X31
	0x03340EA0 BL 0x3222A1C
	0x03340EA4 AND W8, W0, 0xFFFF
	0x03340EA8 CMP W8, 0x7C
	0x03340EAC B.NE 0x3340EFC
	0x03340EB0 ADRP X21, 0xDE8000
	0x03340EB4 LDR X21, [X21 + 0xC80]
	0x03340EB8 LDR X0, [X21]
	0x03340EBC LDR W8, [X0 + 0xE0]
	0x03340EC0 CBNZ W8, 0x3340ECC
	0x03340EC4 BL 0x1C16DFC
	0x03340EC8 LDR X0, [X21]
	0x03340ECC LDR X8, [X0 + 0xB8]
	0x03340ED0 MOVZ W2, 0x1
	0x03340ED4 MOV X0, X20
	0x03340ED8 MOV X3, X31
	0x03340EDC LDR X1, [X8]
	0x03340EE0 BL 0x3229F54
	0x03340EE4 CBZ X0, 0x3340F0C
	0x03340EE8 LDR W8, [X0 + 0x18]
	0x03340EEC CMP W8, W19
	0x03340EF0 B.LS 0x3340F10
	0x03340EF4 ADD X8, X0, W19, 0x3, UXTW
	0x03340EF8 LDR X20, [X8 + 0x20]
	0x03340EFC MOV X0, X20
	0x03340F00 LDP X20, X19, [X31 + 0x10]
	0x03340F04 LDP X30, X21, [X31], #0x20
	0x03340F08 RET
	0x03340F0C BL 0x1C16F20
	0x03340F10 BL 0x1C16F28
	0x03340F14 STR X30, [X31 - 0x20]!
	0x03340F18 STP X20, X19, [X31 + 0x10]
	0x03340F1C ADRP X20, 0x109C000
	0x03340F20 LDRB W8, [X20 + 0xD6C]
	0x03340F24 MOV X19, X0
	0x03340F28 TBNZ X8, 0x0, 0x3340F4C
	0x03340F2C ADRP X0, 0xDE8000
	0x03340F30 LDR X0, [X0 + 0xC80]
	0x03340F34 BL 0x1C16CF4
	0x03340F38 ADRP X0, 0xDE2000
	0x03340F3C LDR X0, [X0 + 0x9E0]
	0x03340F40 BL 0x1C16CF4
	0x03340F44 MOVZ W8, 0x1
	0x03340F48 STRB W8, [X20 + 0xD6C]
	0x03340F4C LDR X0, [X19 + 0x18]
	0x03340F50 CBNZ X0, 0x3340FBC
	0x03340F54 ADRP X20, 0xDE2000
	0x03340F58 LDR X20, [X20 + 0x9E0]
	0x03340F5C LDR X0, [X20]
	0x03340F60 LDR W8, [X0 + 0xE0]
	0x03340F64 CBNZ W8, 0x3340F70
	0x03340F68 BL 0x1C16DFC
	0x03340F6C LDR X0, [X20]
	0x03340F70 LDR X8, [X0 + 0xB8]
	0x03340F74 LDR X8, [X8 + 0x8]
	0x03340F78 CBZ X8, 0x3340FC8
	0x03340F7C LDRSW X9, [X19 + 0x10]
	0x03340F80 LDR W10, [X8 + 0x18]
	0x03340F84 CMP W9, W10
	0x03340F88 B.CS 0x3340FCC
	0x03340F8C ADRP X10, 0xDE8000
	0x03340F90 LDR X10, [X10 + 0xC80]
	0x03340F94 ADD X8, X8, X9, 0x4, LSL
	0x03340F98 LDR X20, [X8 + 0x28]
	0x03340F9C LDR X0, [X10]
	0x03340FA0 LDR W9, [X0 + 0xE0]
	0x03340FA4 CBNZ W9, 0x3340FAC
	0x03340FA8 BL 0x1C16DFC
	0x03340FAC MOV X0, X20
	0x03340FB0 MOV W1, W31
	0x03340FB4 BL 0x3340E60
	0x03340FB8 STR X0, [X19 + 0x18]
	0x03340FBC LDP X20, X19, [X31 + 0x10]
	0x03340FC0 LDR X30, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0x109D000
	007 Move X21, 0xDB4000
	008 Move W8, [X20+3420]
	009 Move X21, [X21+2760]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xDE9000
	016 Move X0, [X0+3144]
	017 Call 0x1C17CF4
	018 Move X0, 0xDB4000
	019 Move X0, [X0+2760]
	020 Call 0x1C17CF4
	021 Move X0, 0xDE9000
	022 Move X0, [X0+3152]
	023 Call 0x1C17CF4
	024 Move X0, 0xDB4000
	025 Move X0, [X0+2104]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+3420], W8
	029 Move X0, [X21]
	030 Move W1, 6
	031 Call 0x1C17D6C
	032 Compare X0, 0
	033 JumpIfEqual {85}
	034 Move W8, [X0+24]
	035 Move X20, X0
	036 Compare W8, 0
	037 JumpIfEqual {84}
	038 Move X8, 0xDE9000
	039 Move X8, [X8+3152]
	040 Add X0, X19, 36
	041 Move X1, X31
	042 Move X8, [X8]
	043 Move [X20+32], X8
	044 Call Int32.ToString, X0
	045 Move W8, [X20+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move [X20+40], X0
	049 Move X21, 0xDB4000
	050 Move X21, [X21+2104]
	051 Move X9, 0xDE9000
	052 Add X0, X31, 8
	053 Move X1, X31
	054 Move X8, [X21]
	055 Move X9, [X9+3144]
	056 Move [X20+48], X8
	057 Move X8, [X9]
	058 Move TEMP, 0
	059 Not TEMP
	060 Move X9, TEMP
	061 Move [X31+8], X8
	062 Move [X31+16], X9
	063 Move W8, [X19+32]
	064 Move [X31+24], W8
	065 Call Enum.ToString, X0
	066 Move W8, [X20+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move [X20+56], X0
	070 Move X9, [X21]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move [X20+64], X9
	073 Move X8, [X19+16]
	074 Move X0, X20
	075 Move X1, X31
	076 Move [X20+72], X8
	077 Call String.Concat, X0
	078 Move X20, [X31+48]
	079 Move X19, [X31+56]
	080 Move X30, [X31+32]
	081 Move X21, [X31+40]
	082 Add X31, X31, 64
	083 Return X0
	084 Call 0x1C17F28
	085 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03340FC4 RET
	0x03340FC8 BL 0x1C16F20
	0x03340FCC BL 0x1C16F28
	0x03340FD0 STR X30, [X31 - 0x20]!
	0x03340FD4 STP X20, X19, [X31 + 0x10]
	0x03340FD8 ADRP X20, 0x109C000
	0x03340FDC LDRB W8, [X20 + 0xD6D]
	0x03340FE0 MOV X19, X0
	0x03340FE4 TBNZ X8, 0x0, 0x3341008
	0x03340FE8 ADRP X0, 0xDE8000
	0x03340FEC LDR X0, [X0 + 0xC80]
	0x03340FF0 BL 0x1C16CF4
	0x03340FF4 ADRP X0, 0xDE2000
	0x03340FF8 LDR X0, [X0 + 0x9E0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x109D000
	005 Move X20, 0xDE9000
	006 Move W8, [X19+3421]
	007 Move X20, [X20+3160]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDE9000
	013 Move X0, [X0+3160]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3421], W8
	017 Move X0, [X20]
	018 Call 0x1C17D9C

