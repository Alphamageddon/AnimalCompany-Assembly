Type: System.Globalization.Bootstring

Method: System.Void .ctor(System.Char delimiter, System.Int32 baseNum, System.Int32 tmin, System.Int32 tmax, System.Int32 skew, System.Int32 damp, System.Int32 initialBias, System.Int32 initialN)

Disassembly:
	0x0334E254 STP X24, X23, [X31 + 0x20]
	0x0334E258 STP X22, X21, [X31 + 0x30]
	0x0334E25C STP X20, X19, [X31 + 0x40]
	0x0334E260 ADRP X21, 0x108E000
	0x0334E264 LDRB W8, [X21 + 0xDAA]
	0x0334E268 MOV W20, W2
	0x0334E26C MOV W23, W1
	0x0334E270 MOV X19, X0
	0x0334E274 TBNZ X8, 0x0, 0x334E2BC
	0x0334E278 ADRP X0, 0xDDC000
	0x0334E27C LDR X0, [X0 + 0x168]
	0x0334E280 BL 0x1C16CF4
	0x0334E284 ADRP X0, 0xDDC000
	0x0334E288 LDR X0, [X0 + 0x170]
	0x0334E28C BL 0x1C16CF4
	0x0334E290 ADRP X0, 0xDDC000
	0x0334E294 LDR X0, [X0 + 0x178]
	0x0334E298 BL 0x1C16CF4
	0x0334E29C ADRP X0, 0xDDC000
	0x0334E2A0 LDR X0, [X0 + 0x180]
	0x0334E2A4 BL 0x1C16CF4
	0x0334E2A8 ADRP X0, 0xDDC000
	0x0334E2AC LDR X0, [X0 + 0x188]
	0x0334E2B0 BL 0x1C16CF4
	0x0334E2B4 MOVZ W8, 0x1
	0x0334E2B8 STRB W8, [X21 + 0xDAA]
	0x0334E2BC TBNZ X23, 0x1F, 0x334E3F8

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move W27, [X31+80]
	012 Move W25, W1
	013 Move X1, X31
	014 Move W19, W7
	015 Move W20, W6
	016 Move W21, W5
	017 Move W22, W4
	018 Move W23, W3
	019 Move W24, W2
	020 Move X26, X0
	021 Call Object..ctor, X0
	022 NotImplemented "Instruction STRH not yet implemented."
	023 Move [X26+20], W24
	024 Move [X26+24], W23
	025 Move [X26+28], W22
	026 Move [X26+32], W21
	027 Move [X26+36], W20
	028 Move [X26+40], W19
	029 Move [X26+44], W27
	030 Move X20, [X31+64]
	031 Move X19, [X31+72]
	032 Move X22, [X31+48]
	033 Move X21, [X31+56]
	034 Move X24, [X31+32]
	035 Move X23, [X31+40]
	036 Move X26, [X31+16]
	037 Move X25, [X31+24]
	038 Move X30, [X31+80]
	039 Move X27, [X31+88]
	040 Return 

Method: System.String Encode(System.String s, System.Int32 offset)

Disassembly:
	0x0334D810 MOV X1, X31
	0x0334D814 BL 0x333C3F8
	0x0334D818 MOV X1, X0
	0x0334D81C MOV X0, X20
	0x0334D820 BL 0x334D6F0
	0x0334D824 TBZ X0, 0x0, 0x334D868
	0x0334D828 LDP X20, X19, [X31 + 0x10]
	0x0334D82C LDP X30, X21, [X31], #0x20
	0x0334D830 RET
	0x0334D834 ADRP X0, 0xDAB000
	0x0334D838 LDR X0, [X0 + 0x528]
	0x0334D83C BL 0x1C16D08
	0x0334D840 BL 0x1C16F10
	0x0334D844 MOV X1, X31
	0x0334D848 MOV X19, X0
	0x0334D84C BL 0x3315F20
	0x0334D850 ADRP X0, 0xDDD000
	0x0334D854 LDR X0, [X0 + 0x100]
	0x0334D858 BL 0x1C16D08
	0x0334D85C MOV X1, X0
	0x0334D860 MOV X0, X19
	0x0334D864 BL 0x1C16DEC
	0x0334D868 ADRP X0, 0xDDD000
	0x0334D86C LDR X0, [X0 + 0x108]
	0x0334D870 BL 0x1C16D08
	0x0334D874 MOV X1, X19
	0x0334D878 MOV X2, X31
	0x0334D87C BL 0x321EFD0
	0x0334D880 MOV X19, X0
	0x0334D884 ADRP X0, 0xDAE000
	0x0334D888 LDR X0, [X0 + 0x578]
	0x0334D88C BL 0x1C16D08
	0x0334D890 BL 0x1C16F10
	0x0334D894 MOV X20, X0
	0x0334D898 ADRP X0, 0xDAE000
	0x0334D89C LDR X0, [X0 + 0x588]
	0x0334D8A0 BL 0x1C16D08
	0x0334D8A4 MOV X2, X0
	0x0334D8A8 MOV X0, X20
	0x0334D8AC MOV X1, X19
	0x0334D8B0 MOV X3, X31
	0x0334D8B4 BL 0x330E16C
	0x0334D8B8 ADRP X0, 0xDDD000
	0x0334D8BC LDR X0, [X0 + 0x100]
	0x0334D8C0 BL 0x1C16D08
	0x0334D8C4 MOV X1, X0
	0x0334D8C8 MOV X0, X20
	0x0334D8CC BL 0x1C16DEC
	0x0334D8D0 B 0x1C43060
	0x0334D8D4 LDR X0, [X0 + 0x50]
	0x0334D8D8 RET
	0x0334D8DC LDR X0, [X0 + 0x40]
	0x0334D8E0 RET
	0x0334D8E4 LDR X0, [X0 + 0x30]
	0x0334D8E8 RET
	0x0334D8EC LDR X0, [X0 + 0x30]
	0x0334D8F0 RET
	0x0334D8F4 LDR W0, [X0 + 0x10]
	0x0334D8F8 RET
	0x0334D8FC STP X30, X21, [X31 - 0x20]!
	0x0334D900 STP X20, X19, [X31 + 0x10]
	0x0334D904 ADRP X21, 0x108F000
	0x0334D908 ADRP X20, 0xDDD000
	0x0334D90C LDRB W8, [X21 + 0xDA1]
	0x0334D910 LDR X20, [X20 + 0x110]
	0x0334D914 MOV X19, X0
	0x0334D918 TBNZ X8, 0x0, 0x334D93C
	0x0334D91C ADRP X0, 0xDDD000
	0x0334D920 LDR X0, [X0 + 0x110]
	0x0334D924 BL 0x1C16CF4
	0x0334D928 ADRP X0, 0xDDD000
	0x0334D92C LDR X0, [X0 + 0x118]
	0x0334D930 BL 0x1C16CF4
	0x0334D934 MOVZ W8, 0x1
	0x0334D938 STRB W8, [X21 + 0xDA1]
	0x0334D93C LDR X19, [X19 + 0x18]
	0x0334D940 LDR X1, [X20]
	0x0334D944 MOV X2, X31
	0x0334D948 MOV X0, X19
	0x0334D94C BL 0x321BA08
	0x0334D950 TBZ X0, 0x0, 0x334D95C
	0x0334D954 MOV W0, W31
	0x0334D958 B 0x334D97C
	0x0334D95C ADRP X8, 0xDDD000
	0x0334D960 LDR X8, [X8 + 0x118]
	0x0334D964 MOV X0, X19
	0x0334D968 MOV X2, X31
	0x0334D96C LDR X1, [X8]
	0x0334D970 BL 0x321BA08
	0x0334D974 ORN W8, W31, W0, 0x0
	0x0334D978 AND W0, W8, 0x1
	0x0334D97C LDP X20, X19, [X31 + 0x10]
	0x0334D980 LDP X30, X21, [X31], #0x20
	0x0334D984 RET
	0x0334D988 LDR X0, [X0 + 0x48]
	0x0334D98C RET
	0x0334D990 LDR X0, [X0 + 0x38]
	0x0334D994 RET
	0x0334D998 LDR X0, [X0 + 0x58]
	0x0334D99C RET
	0x0334D9A0 LDR X0, [X0 + 0x18]
	0x0334D9A4 RET
	0x0334D9A8 LDR X0, [X0 + 0x20]
	0x0334D9AC RET
	0x0334D9B0 LDR X0, [X0 + 0x28]
	0x0334D9B4 RET
	0x0334D9B8 LDR X0, [X0 + 0x18]
	0x0334D9BC RET
	0x0334D9C0 STP X30, X21, [X31 - 0x20]!
	0x0334D9C4 STP X20, X19, [X31 + 0x10]
	0x0334D9C8 ADRP X21, 0x108F000
	0x0334D9CC LDRB W8, [X21 + 0xDA2]
	0x0334D9D0 MOV X20, X1
	0x0334D9D4 MOV X19, X0
	0x0334D9D8 TBNZ X8, 0x0, 0x334D9F0
	0x0334D9DC ADRP X0, 0xDDD000
	0x0334D9E0 LDR X0, [X0 + 0x98]
	0x0334D9E4 BL 0x1C16CF4
	0x0334D9E8 MOVZ W8, 0x1
	0x0334D9EC STRB W8, [X21 + 0xDA2]
	0x0334D9F0 CBZ X20, 0x334DA2C
	0x0334D9F4 ADRP X8, 0xDDD000
	0x0334D9F8 LDR X8, [X8 + 0x98]
	0x0334D9FC LDR X9, [X20]
	0x0334DA00 LDR X8, [X8]
	0x0334DA04 LDRB W11, [X9 + 0x130]
	0x0334DA08 LDRB W10, [X8 + 0x130]
	0x0334DA0C CMP W11, W10
	0x0334DA10 B.CC 0x334DA2C
	0x0334DA14 LDR X9, [X9 + 0xC8]
	0x0334DA18 ADD X9, X9, X10, 0x3, LSL
	0x0334DA1C LDUR X9, [X9 - 0x8]
	0x0334DA20 CMP X9, X8
	0x0334DA24 CSEL X20, X20, X31, EQ
	0x0334DA28 B.EQ 0x334DA3C
	0x0334DA2C LDP X20, X19, [X31 + 0x10]
	0x0334DA30 MOV W0, W31
	0x0334DA34 LDP X30, X21, [X31], #0x20
	0x0334DA38 RET
	0x0334DA3C LDR X8, [X19]
	0x0334DA40 MOV X0, X19
	0x0334DA44 LDR X9, [X8 + 0x208]
	0x0334DA48 LDR X1, [X8 + 0x210]
	0x0334DA4C BLR X9
	0x0334DA50 CBZ X20, 0x334DA84
	0x0334DA54 LDR X8, [X20]
	0x0334DA58 MOV X19, X0
	0x0334DA5C MOV X0, X20
	0x0334DA60 LDR X9, [X8 + 0x208]
	0x0334DA64 LDR X1, [X8 + 0x210]
	0x0334DA68 BLR X9
	0x0334DA6C MOV X1, X0
	0x0334DA70 MOV X0, X19
	0x0334DA74 LDP X20, X19, [X31 + 0x10]
	0x0334DA78 MOV X2, X31
	0x0334DA7C LDP X30, X21, [X31], #0x20
	0x0334DA80 B 0x321BA08
	0x0334DA84 BL 0x1C16F20
	0x0334DA88 STR X30, [X31 - 0x10]!
	0x0334DA8C LDR X8, [X0]
	0x0334DA90 LDR X9, [X8 + 0x208]
	0x0334DA94 LDR X1, [X8 + 0x210]
	0x0334DA98 BLR X9
	0x0334DA9C CBZ X0, 0x334DAB0
	0x0334DAA0 LDR X8, [X0]
	0x0334DAA4 LDP X2, X1, [X8 + 0x158]
	0x0334DAA8 LDR X30, [X31], #0x10
	0x0334DAAC BR X2
	0x0334DAB0 BL 0x1C16F20
	0x0334DAB4 LDR X8, [X0]
	0x0334DAB8 LDR X2, [X8 + 0x208]
	0x0334DABC LDR X1, [X8 + 0x210]
	0x0334DAC0 BR X2
	0x0334DAC4 STR X30, [X31 - 0x20]!
	0x0334DAC8 STP X20, X19, [X31 + 0x10]
	0x0334DACC ADRP X19, 0x108F000
	0x0334DAD0 ADRP X20, 0xDDD000
	0x0334DAD4 LDRB W8, [X19 + 0xDA3]
	0x0334DAD8 LDR X20, [X20 + 0x98]
	0x0334DADC TBNZ X8, 0x0, 0x334DAF4
	0x0334DAE0 ADRP X0, 0xDDD000
	0x0334DAE4 LDR X0, [X0 + 0x98]
	0x0334DAE8 BL 0x1C16CF4
	0x0334DAEC MOVZ W8, 0x1
	0x0334DAF0 STRB W8, [X19 + 0xDA3]
	0x0334DAF4 LDR X8, [X20]
	0x0334DAF8 LDP X20, X19, [X31 + 0x10]
	0x0334DAFC LDR X8, [X8 + 0xB8]
	0x0334DB00 STR X31, [X8]
	0x0334DB04 LDR X30, [X31], #0x20
	0x0334DB08 RET
	0x0334DB0C STR X30, [X31 - 0x20]!
	0x0334DB10 STP X20, X19, [X31 + 0x10]
	0x0334DB14 MOV X19, X1
	0x0334DB18 MOV X1, X31
	0x0334DB1C MOV X20, X0
	0x0334DB20 BL 0x33A51F0
	0x0334DB24 STR X19, [X20 + 0x10]
	0x0334DB28 LDP X20, X19, [X31 + 0x10]
	0x0334DB2C LDR X30, [X31], #0x20
	0x0334DB30 RET
	0x0334DB34 MOV X1, X31
	0x0334DB38 B 0x33A51F0
	0x0334DB3C MOV X1, X31
	0x0334DB40 B 0x33A51F0
	0x0334DB44 MOV X1, X31
	0x0334DB48 B 0x33A51F0
	0x0334DB4C MOV X1, X31
	0x0334DB50 B 0x33A51F0
	0x0334DB54 STR X30, [X31 - 0x20]!

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X22, 0x1090000
	015 Move X21, 0xDA7000
	016 Move W8, [X22+3483]
	017 Move X21, [X21+2288]
	018 Move X19, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0xDDE000
	025 Move X0, [X0+64]
	026 Call 0x1C17CF4
	027 Move X0, 0xDA7000
	028 Move X0, [X0+2288]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+3483], W8
	032 Move X0, [X21]
	033 Move W22, [X20+40]
	034 Move W25, [X20+44]
	035 Call 0x1C17F10
	036 Move X1, X31
	037 Move X21, X0
	038 Call StringBuilder..ctor, X0
	039 Compare X19, 0
	040 JumpIfEqual {218}
	041 Move W8, [X19+16]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move W23, W31
	044 Move X0, X19
	045 Move W1, W23
	046 Move X2, X31
	047 Call String.get_Chars, X0, X1
	048 And W8, W0, 0xFFFF
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, X19
	051 Move W1, W23
	052 Move X2, X31
	053 Call String.get_Chars, X0, X1
	054 Compare X21, 0
	055 JumpIfEqual {218}
	056 Move W1, W0
	057 Move X0, X21
	058 Move X2, X31
	059 Call StringBuilder.Append, X0, X1
	060 Move W8, [X19+16]
	061 Add W23, W23, 1
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Compare X21, 0
	064 JumpIfEqual {218}
	065 Move X0, X21
	066 Move X1, X31
	067 Call StringBuilder.get_Length, X0
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move [X31+12], W0
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Move X0, X21
	072 Move X2, X31
	073 Call StringBuilder.Append, X0, X1
	074 Move W8, [X19+16]
	075 Move W9, [X31+12]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move W23, [X31+12]
	078 Move W26, W31
	079 Move W29, 22
	080 Move W27, 97
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move W24, W31
	083 Move TEMP, 0x80000000
	084 Not TEMP
	085 Move W28, TEMP
	086 Move X0, X19
	087 Move W1, W24
	088 Move X2, X31
	089 Call String.get_Chars, X0, X1
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X0, X19
	092 Move W1, W24
	093 Move X2, X31
	094 Call String.get_Chars, X0, X1
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X0, X19
	097 Move W1, W24
	098 Move X2, X31
	099 Call String.get_Chars, X0, X1
	100 And W28, W0, 0xFFFF
	101 Move W8, [X19+16]
	102 Add W24, W24, 1
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move TEMP, 0x80000000
	105 Not TEMP
	106 Move W28, TEMP
	107 Move X9, W28
	108 Subtract X9, X9, W25
	109 Move W10, 0x80000000
	110 Add X9, X9, X10
	111 Move X9, X9
	112 ShiftRight X9, 32
	113 And X9, X9, 0x7FFFFFFF
	114 Compare X9, 0
	115 JumpIfNotEqual {213}
	116 Move TEMP, 0x80000000
	117 Not TEMP
	118 Move W9, TEMP
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Subtract W9, W28, W25
	121 Add W10, W23, 1
	122 NotImplemented "Instruction SMADDL not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Multiply W9, W9, W10
	125 Add W31, W26, W9
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Add W24, W9, W26
	128 Move W25, W31
	129 Move [X31+16], X28
	130 Move X0, X19
	131 Move W1, W25
	132 Move X2, X31
	133 Call String.get_Chars, X0, X1
	134 And W8, W0, 0xFFFF
	135 NotImplemented "Instruction CMP not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move TEMP, 0x80000000
	138 Not TEMP
	139 Move W9, TEMP
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Add W24, W24, 1
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move W8, [X20+20]
	144 Move W9, W24
	145 Move [X31+28], W23
	146 Move W26, W8
	147 Move W23, [X20+24]
	148 Add W10, W23, W22
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move W10, [X20+28]
	151 Subtract W12, W26, W22
	152 Add W11, W10, W22
	153 NotImplemented "Instruction CMP not yet implemented."
	154 NotImplemented "Instruction CSEL not yet implemented."
	155 Subtract W28, W9, W23
	156 Subtract W8, W8, W23
	157 NotImplemented "Instruction SDIV not yet implemented."
	158 NotImplemented "Instruction MSUB not yet implemented."
	159 Add W8, W8, W23
	160 NotImplemented "Instruction CMP not yet implemented."
	161 NotImplemented "Instruction CSEL not yet implemented."
	162 Add W1, W9, W8
	163 Move X0, X21
	164 Move X2, X31
	165 Call StringBuilder.Append, X0, X1
	166 Move W8, [X20+20]
	167 Subtract W9, W8, W23
	168 NotImplemented "Instruction SDIV not yet implemented."
	169 Add W26, W8, W26
	170 NotImplemented "Instruction CMP not yet implemented."
	171 NotImplemented "Instruction CSEL not yet implemented."
	172 Add W1, W8, W9
	173 Move X0, X21
	174 Move X2, X31
	175 Call StringBuilder.Append, X0, X1
	176 Move W9, [X31+28]
	177 Move W8, [X31+12]
	178 Move X0, X20
	179 Move W1, W24
	180 Add W26, W9, 1
	181 NotImplemented "Instruction CMP not yet implemented."
	182 NotImplemented "Instruction CSET not yet implemented."
	183 Move W2, W26
	184 Call Bootstring.Adapt, X0, X1, X2, X3
	185 Move X28, [X31+16]
	186 Move W22, W0
	187 Move W24, W31
	188 Move W23, W26
	189 Move W8, [X19+16]
	190 Add W25, W25, 1
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Add W26, W24, 1
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Add W25, W28, 1
	195 Move X8, [X21]
	196 Move X0, X21
	197 Move X20, [X31+112]
	198 Move X19, [X31+120]
	199 Move X22, [X31+96]
	200 Move X21, [X31+104]
	201 Move X2, [X8+360]
	202 Move X1, [X8+368]
	203 Move X24, [X31+80]
	204 Move X23, [X31+88]
	205 Move X26, [X31+64]
	206 Move X25, [X31+72]
	207 Move X28, [X31+48]
	208 Move X27, [X31+56]
	209 Move X29, [X31+32]
	210 Move X30, [X31+40]
	211 Add X31, X31, 128
	212 CallNoReturn X2
	213 Call 0x1C17F30
	214 Move X8, 0xDDE000
	215 Move X8, [X8+64]
	216 Move X1, [X8]
	217 Call 0x1C17DEC
	218 Call 0x1C17F20

Method: System.Char EncodeDigit(System.Int32 d)

Disassembly:
	0x0334E2C0 ADRP X8, 0xDDC000
	0x0334E2C4 LDR X8, [X8 + 0x180]
	0x0334E2C8 ADRP X21, 0xDDC000
	0x0334E2CC ADRP X26, 0xDDC000
	0x0334E2D0 AND W25, W20, 0x1
	0x0334E2D4 LDR X0, [X8]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, 22
	003 Move W9, 97
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 Add W0, W8, W1
	006 Return X0

Method: System.Int32 DecodeDigit(System.Char c)

Disassembly:
	0x0334E350 STR W10, [X21 + 0x1C]
	0x0334E354 CBZ X8, 0x334E3F4
	0x0334E358 LDRSW X10, [X21 + 0x18]
	0x0334E35C LDR W11, [X8 + 0x18]
	0x0334E360 CMP W10, W11
	0x0334E364 B.CS 0x334E37C
	0x0334E368 ADD W9, W10, 0x1
	0x0334E36C ADD X8, X8, X10, 0x3, LSL
	0x0334E370 STR W9, [X21 + 0x18]
	0x0334E374 STR X22, [X8 + 0x20]
	0x0334E378 B 0x334E394
	0x0334E37C LDR X8, [X9 + 0x20]
	0x0334E380 MOV X0, X21
	0x0334E384 MOV X1, X22
	0x0334E388 LDR X8, [X8 + 0xC0]
	0x0334E38C LDR X2, [X8 + 0x70]

ISIL:
	001 And W8, W1, 0xFFFF
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Subtract W0, W8, 22
	004 Return X0
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Subtract W0, W8, 65
	007 Return X0
	008 And W9, W1, 0xFFFF
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Subtract W0, W8, 97
	011 Return X0
	012 Move W0, [X0+20]
	013 Return X0

Method: System.Int32 Adapt(System.Int32 delta, System.Int32 numPoints, System.Boolean firstTime)

Disassembly:
	0x0334E2D8 LDR X21, [X21 + 0x178]
	0x0334E2DC LDR X26, [X26 + 0x188]
	0x0334E2E0 BL 0x1C16F10
	0x0334E2E4 LDR X1, [X21]
	0x0334E2E8 MOV X21, X0
	0x0334E2EC BL 0x301B7C4
	0x0334E2F0 LDR X0, [X26]
	0x0334E2F4 ADD W24, W23, 0x2
	0x0334E2F8 BL 0x1C16F10
	0x0334E2FC AND W2, W20, 0x1
	0x0334E300 MOV W1, W24
	0x0334E304 MOV X22, X0
	0x0334E308 BL 0x334DE74
	0x0334E30C CBZ X22, 0x334E3BC
	0x0334E310 ADRP X24, 0xDDC000
	0x0334E314 LDR X24, [X24 + 0x168]
	0x0334E318 ADD W23, W23, 0x3
	0x0334E31C LDR X8, [X22]
	0x0334E320 MOV X0, X22
	0x0334E324 LDP X9, X1, [X8 + 0x1A8]
	0x0334E328 BLR X9
	0x0334E32C MOV X1, X31
	0x0334E330 MOV X2, X31
	0x0334E334 BL 0x32CE114
	0x0334E338 TBZ X0, 0x0, 0x334E3BC
	0x0334E33C CBZ X21, 0x334E3F4
	0x0334E340 LDR W10, [X21 + 0x1C]
	0x0334E344 LDR X8, [X21 + 0x10]
	0x0334E348 LDR X9, [X24]
	0x0334E34C ADD W10, W10, 0x1

ISIL:
	001 Move TEMP, X3
	002 And TEMP, TEMP, 1
	003 Compare TEMP, 1
	004 JumpIfNotEqual {6}
	005 Move W8, [X0+36]
	006 Move W8, 2
	007 Move W11, [X0+20]
	008 Move W9, [X0+24]
	009 Move W10, [X0+28]
	010 NotImplemented "Instruction SDIV not yet implemented."
	011 NotImplemented "Instruction SDIV not yet implemented."
	012 Subtract W9, W11, W9
	013 Multiply W10, W10, W9
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Add W8, W12, W8
	016 NotImplemented "Instruction CINC not yet implemented."
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W10, W31
	019 NotImplemented "Instruction SBFM not yet implemented."
	020 NotImplemented "Instruction SDIV not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Add W10, W10, W11
	023 Move W10, W31
	024 Move W11, [X0+32]
	025 Add W9, W9, 1
	026 Multiply W9, W9, W8
	027 Add W8, W11, W8
	028 NotImplemented "Instruction SDIV not yet implemented."
	029 Add W0, W8, W10
	030 Return X0

Method: System.String Decode(System.String s, System.Int32 offset)

Disassembly:
	0x0334DF7C BL 0x3EB1AE0
	0x0334DF80 B 0x334DF38
	0x0334DF84 MOVZ W0, 0x8
	0x0334DF88 BL 0x3EB1AF0
	0x0334DF8C LDR X8, [X20]
	0x0334DF90 STR X8, [X0]
	0x0334DF94 ADRP X1, 0xB67000
	0x0334DF98 ADD X1, X1, 0xE58
	0x0334DF9C MOV X2, X31
	0x0334DFA0 BL 0x3EB1B00
	0x0334DFA4 MOV X20, X0
	0x0334DFA8 BL 0x3EB1AE0
	0x0334DFAC MOV X0, X20
	0x0334DFB0 BL 0x1D2C690
	0x0334DFB4 BL 0x1990590
	0x0334DFB8 LDR W0, [X0 + 0x10]
	0x0334DFBC RET
	0x0334DFC0 LDR X0, [X0 + 0x28]
	0x0334DFC4 RET
	0x0334DFC8 LDR W0, [X0 + 0x14]
	0x0334DFCC RET
	0x0334DFD0 LDR X0, [X0 + 0x18]
	0x0334DFD4 RET
	0x0334DFD8 LDR W0, [X0 + 0x20]
	0x0334DFDC RET
	0x0334DFE0 LDR X0, [X0 + 0x40]
	0x0334DFE4 RET
	0x0334DFE8 STR X30, [X31 - 0x40]!
	0x0334DFEC STP X24, X23, [X31 + 0x10]
	0x0334DFF0 STP X22, X21, [X31 + 0x20]
	0x0334DFF4 STP X20, X19, [X31 + 0x30]
	0x0334DFF8 ADRP X20, 0x108F000
	0x0334DFFC ADRP X21, 0xDA6000
	0x0334E000 LDRB W8, [X20 + 0xDA9]
	0x0334E004 B 0x3EB189C
	0x0334E008 MOV X19, X0
	0x0334E00C TBNZ X8, 0x0, 0x334E078
	0x0334E010 ADRP X0, 0xDA5000
	0x0334E014 LDR X0, [X0 + 0x758]
	0x0334E018 BL 0x1C16CF4
	0x0334E01C ADRP X0, 0xDA5000
	0x0334E020 LDR X0, [X0 + 0x8F0]
	0x0334E024 BL 0x1C16CF4
	0x0334E028 ADRP X0, 0xDDC000
	0x0334E02C LDR X0, [X0 + 0x138]
	0x0334E030 BL 0x1C16CF4
	0x0334E034 ADRP X0, 0xDDC000
	0x0334E038 LDR X0, [X0 + 0x140]
	0x0334E03C BL 0x1C16CF4
	0x0334E040 ADRP X0, 0xDDC000
	0x0334E044 LDR X0, [X0 + 0x148]
	0x0334E048 BL 0x1C16CF4
	0x0334E04C ADRP X0, 0xDDC000
	0x0334E050 LDR X0, [X0 + 0x150]
	0x0334E054 BL 0x1C16CF4
	0x0334E058 ADRP X0, 0xDDC000
	0x0334E05C LDR X0, [X0 + 0x158]
	0x0334E060 BL 0x1C16CF4
	0x0334E064 ADRP X0, 0xDDC000
	0x0334E068 LDR X0, [X0 + 0x160]
	0x0334E06C BL 0x1C16CF4
	0x0334E070 MOVZ W8, 0x1
	0x0334E074 STRB W8, [X20 + 0xDA9]
	0x0334E078 LDR X0, [X21]
	0x0334E07C BL 0x1C16F10
	0x0334E080 MOV X1, X31
	0x0334E084 MOV X20, X0
	0x0334E088 BL 0x3231AC4
	0x0334E08C LDR X0, [X19 + 0x28]
	0x0334E090 MOV X1, X31
	0x0334E094 MOV X2, X31
	0x0334E098 BL 0x32CE12C
	0x0334E09C TBZ X0, 0x0, 0x334E0BC
	0x0334E0A0 ADRP X8, 0xDDC000
	0x0334E0A4 LDR X8, [X8 + 0x140]
	0x0334E0A8 MOV X1, X31
	0x0334E0AC LDR X0, [X8]
	0x0334E0B0 BL 0x320A160
	0x0334E0B4 CBNZ X20, 0x334E0D4
	0x0334E0B8 B 0x334E224
	0x0334E0BC LDR X0, [X19 + 0x28]
	0x0334E0C0 CBZ X0, 0x334E224
	0x0334E0C4 LDR X8, [X0]
	0x0334E0C8 LDP X9, X1, [X8 + 0x1A8]
	0x0334E0CC BLR X9
	0x0334E0D0 CBZ X20, 0x334E224
	0x0334E0D4 ADRP X24, 0xDDC000
	0x0334E0D8 ADRP X21, 0xDDC000
	0x0334E0DC ADRP X23, 0xDA5000
	0x0334E0E0 ADRP X22, 0xDDC000
	0x0334E0E4 LDR X24, [X24 + 0x160]
	0x0334E0E8 LDR X21, [X21 + 0x138]
	0x0334E0EC LDR X23, [X23 + 0x758]
	0x0334E0F0 LDR X22, [X22 + 0x150]
	0x0334E0F4 MOV X1, X0
	0x0334E0F8 MOV X0, X20
	0x0334E0FC MOV X2, X31
	0x0334E100 BL 0x32333E0
	0x0334E104 LDR X0, [X24]
	0x0334E108 MOV X1, X31
	0x0334E10C BL 0x320A160
	0x0334E110 MOV X1, X0
	0x0334E114 MOV X0, X20
	0x0334E118 MOV X2, X31
	0x0334E11C BL 0x32333E0
	0x0334E120 LDR W8, [X19 + 0x10]
	0x0334E124 ADDS W31, W8, 0x1
	0x0334E128 B.EQ 0x334E164
	0x0334E12C ADRP X8, 0xDDC000
	0x0334E130 LDR X8, [X8 + 0x148]
	0x0334E134 MOV X1, X31
	0x0334E138 LDR X0, [X8]
	0x0334E13C BL 0x320A160
	0x0334E140 MOV X1, X0
	0x0334E144 MOV X0, X20
	0x0334E148 MOV X2, X31
	0x0334E14C BL 0x32333E0
	0x0334E150 LDR W1, [X19 + 0x10]
	0x0334E154 MOV X0, X20
	0x0334E158 MOV X2, X31
	0x0334E15C BL 0x3233E30
	0x0334E160 B 0x334E188
	0x0334E164 ADRP X8, 0xDDC000
	0x0334E168 LDR X8, [X8 + 0x158]
	0x0334E16C MOV X1, X31
	0x0334E170 LDR X0, [X8]
	0x0334E174 BL 0x320A160
	0x0334E178 MOV X1, X0
	0x0334E17C MOV X0, X20
	0x0334E180 MOV X2, X31
	0x0334E184 BL 0x32333E0
	0x0334E188 LDR X0, [X21]
	0x0334E18C MOV X1, X31
	0x0334E190 BL 0x320A160
	0x0334E194 MOV X1, X0
	0x0334E198 MOV X0, X20
	0x0334E19C MOV X2, X31
	0x0334E1A0 BL 0x32333E0
	0x0334E1A4 MOV X0, X19
	0x0334E1A8 BL 0x334DEE4
	0x0334E1AC MOV X1, X0
	0x0334E1B0 MOV X0, X20
	0x0334E1B4 MOV X2, X31
	0x0334E1B8 BL 0x32333E0
	0x0334E1BC LDR W8, [X19 + 0x38]
	0x0334E1C0 LDR X0, [X23]
	0x0334E1C4 ADD X1, X31, 0xC
	0x0334E1C8 STR W8, [X31 + 0xC]
	0x0334E1CC BL 0x1C16E04
	0x0334E1D0 MOV X21, X0
	0x0334E1D4 LDR W8, [X19 + 0x3C]
	0x0334E1D8 LDR X0, [X23]
	0x0334E1DC ADD X1, X31, 0x8
	0x0334E1E0 STR W8, [X31 + 0x8]
	0x0334E1E4 BL 0x1C16E04
	0x0334E1E8 LDR X1, [X22]
	0x0334E1EC MOV X3, X0
	0x0334E1F0 MOV X0, X20
	0x0334E1F4 MOV X2, X21
	0x0334E1F8 MOV X4, X31
	0x0334E1FC BL 0x3234D98
	0x0334E200 LDR X8, [X20]
	0x0334E204 MOV X0, X20
	0x0334E208 LDP X9, X1, [X8 + 0x168]
	0x0334E20C BLR X9
	0x0334E210 LDP X20, X19, [X31 + 0x30]
	0x0334E214 LDP X22, X21, [X31 + 0x20]
	0x0334E218 LDP X24, X23, [X31 + 0x10]
	0x0334E21C LDR X30, [X31], #0x40
	0x0334E220 RET
	0x0334E224 BL 0x1C16F20
	0x0334E228 STP X30, X19, [X31 - 0x10]!
	0x0334E22C MOV X1, X31
	0x0334E230 MOV X19, X0
	0x0334E234 BL 0x33BDD8C
	0x0334E238 MOV X0, X19
	0x0334E23C MOV W1, W31
	0x0334E240 MOV W2, W31
	0x0334E244 LDP X30, X19, [X31], #0x10
	0x0334E248 B 0x334E24C
	0x0334E24C STR X30, [X31 - 0x50]!
	0x0334E250 STP X26, X25, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0x1090000
	015 Move X23, 0xDA7000
	016 Move W8, [X22+3484]
	017 Move X23, [X23+2288]
	018 Move W19, W2
	019 Move X20, X1
	020 Move X21, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0xDA7000
	026 Move X0, [X0+2288]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+3484], W8
	030 Move X0, [X23]
	031 Move W24, [X21+40]
	032 Move W22, [X21+44]
	033 Call 0x1C17F10
	034 Move X1, X31
	035 Move X23, X0
	036 Call StringBuilder..ctor, X0
	037 Compare X20, 0
	038 JumpIfEqual {199}
	039 Move W8, [X20+16]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W26, W31
	042 Move W25, W31
	043 Move X0, X20
	044 Move W1, W26
	045 Move X2, X31
	046 Call String.get_Chars, X0, X1
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move W9, [X20+16]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 Add W26, W26, 1
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move TEMP, X25
	054 And TEMP, TEMP, -2147483648
	055 Compare TEMP, -2147483648
	056 JumpIfEqual {155}
	057 Compare X23, 0
	058 JumpIfEqual {199}
	059 Move X0, X23
	060 Move X1, X20
	061 Move W2, W31
	062 Move W3, W25
	063 Move X4, X31
	064 Call StringBuilder.Append, X0, X1, X2, X3
	065 Move W8, [X20+16]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 NotImplemented "Instruction CSINC not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W27, W31
	070 Move W28, [X21+20]
	071 Add W26, W26, 1
	072 Move W29, 1
	073 Move W25, W27
	074 Subtract W1, W26, 1
	075 Move X0, X20
	076 Move X2, X31
	077 Call String.get_Chars, X0, X1
	078 And W8, W0, 0xFFFF
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Subtract W8, W8, 22
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract W8, W8, 65
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Subtract W8, W8, 97
	085 Move W8, [X21+20]
	086 Move W9, [X21+24]
	087 Add W10, W9, W24
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move W9, [X21+28]
	090 Subtract W11, W28, W24
	091 Add W10, W9, W24
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction CSEL not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 NotImplemented "Instruction MADD not yet implemented."
	096 Move W8, [X21+20]
	097 Add W26, W26, 1
	098 Subtract W9, W8, W9
	099 Add W28, W8, W28
	100 Multiply W29, W9, W29
	101 Move X0, X23
	102 Move X1, X31
	103 Call StringBuilder.get_Length, X0
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Subtract W1, W25, W27
	106 Add W2, W0, 1
	107 NotImplemented "Instruction CSET not yet implemented."
	108 Move X0, X21
	109 Call Bootstring.Adapt, X0, X1, X2, X3
	110 Move W24, W0
	111 Move X0, X23
	112 Move X1, X31
	113 Call StringBuilder.get_Length, X0
	114 Add W8, W0, 1
	115 NotImplemented "Instruction SDIV not yet implemented."
	116 Move X0, X23
	117 Move X1, X31
	118 Add W22, W8, W22
	119 Call StringBuilder.get_Length, X0
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Add W8, W0, 1
	122 NotImplemented "Instruction SDIV not yet implemented."
	123 NotImplemented "Instruction MSUB not yet implemented."
	124 Move X0, X23
	125 Move W1, W25
	126 Move W2, W22
	127 Move X3, X31
	128 Call StringBuilder.Insert, X0, X1, X2
	129 Move W8, [X20+16]
	130 Add W27, W25, 1
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X8, [X23]
	133 Move X0, X23
	134 Move X20, [X31+96]
	135 Move X19, [X31+104]
	136 Move X22, [X31+80]
	137 Move X21, [X31+88]
	138 Move X2, [X8+360]
	139 Move X1, [X8+368]
	140 Move X24, [X31+64]
	141 Move X23, [X31+72]
	142 Move X26, [X31+48]
	143 Move X25, [X31+56]
	144 Move X28, [X31+32]
	145 Move X27, [X31+40]
	146 Move X29, [X31+16]
	147 Move X30, [X31+24]
	148 Add X31, X31, 112
	149 CallNoReturn X2
	150 Move W25, W31
	151 Move TEMP, X25
	152 And TEMP, TEMP, -2147483648
	153 Compare TEMP, -2147483648
	154 JumpIfNotEqual {57}
	155 Move X0, X20
	156 Move X20, [X31+96]
	157 Move X19, [X31+104]
	158 Move X22, [X31+80]
	159 Move X21, [X31+88]
	160 Move X24, [X31+64]
	161 Move X23, [X31+72]
	162 Move X26, [X31+48]
	163 Move X25, [X31+56]
	164 Move X28, [X31+32]
	165 Move X27, [X31+40]
	166 Move X29, [X31+16]
	167 Move X30, [X31+24]
	168 Add X31, X31, 112
	169 Return X0
	170 Add W8, W19, W26
	171 Move [X31+12], W8
	172 Move X0, 0xDA6000
	173 Move X0, [X0+1880]
	174 Call 0x1C17D08
	175 Add X1, X31, 12
	176 Call 0x1C17E04
	177 Move X19, X0
	178 Move X0, 0xDDD000
	179 Move X0, [X0+136]
	180 Call 0x1C17D08
	181 Move X1, X19
	182 Move X2, X31
	183 Call String.Format, X0, X1
	184 Move X19, X0
	185 Move X0, 0xDAE000
	186 Move X0, [X0+1400]
	187 Call 0x1C17D08
	188 Call 0x1C17F10
	189 Move X1, X19
	190 Move X2, X31
	191 Move X20, X0
	192 Call ArgumentException..ctor, X0, X1
	193 Move X0, 0xDDD000
	194 Move X0, [X0+144]
	195 Call 0x1C17D08
	196 Move X1, X0
	197 Move X0, X20
	198 Call 0x1C17DEC
	199 Call 0x1C17F20

