Type: System.Globalization.EraInfo

Method: System.Void .ctor(System.Int32 era, System.Int32 startYear, System.Int32 startMonth, System.Int32 startDay, System.Int32 yearOffset, System.Int32 minEraYear, System.Int32 maxEraYear)

Disassembly:
	0x03337724 ADD X8, X8, 0x8
	0x03337728 B 0x33376D0
	0x0333772C BL 0x1C16F28
	0x03337730 ADRP X0, 0xDF1000
	0x03337734 LDR X0, [X0 + 0x8C8]
	0x03337738 BL 0x1C16D08
	0x0333773C MOV X1, X31
	0x03337740 BL 0x33BDD84
	0x03337744 MOV X19, X0
	0x03337748 ADRP X0, 0xDC4000
	0x0333774C LDR X0, [X0 + 0x760]
	0x03337750 BL 0x1C16D08
	0x03337754 BL 0x1C16F10
	0x03337758 MOV X20, X0
	0x0333775C ADRP X0, 0xDF0000
	0x03337760 LDR X0, [X0 + 0xDA8]
	0x03337764 BL 0x1C16D08
	0x03337768 MOV X1, X0
	0x0333776C MOV X0, X20
	0x03337770 MOV X2, X19
	0x03337774 MOV X3, X31
	0x03337778 BL 0x3311888
	0x0333777C ADRP X0, 0xDF1000
	0x03337780 LDR X0, [X0 + 0x940]
	0x03337784 BL 0x1C16D08
	0x03337788 MOV X1, X0
	0x0333778C MOV X0, X20
	0x03337790 BL 0x1C16DEC
	0x03337794 BL 0x1C16F20
	0x03337798 STP X30, X19, [X31 - 0x10]!
	0x0333779C MOVZ W3, 0x1
	0x033377A0 MOV W19, W1
	0x033377A4 BL 0x333697C
	0x033377A8 ADD W8, W0, W19
	0x033377AC ANDS W31, W8, 0x3
	0x033377B0 B.EQ 0x33377C0
	0x033377B4 MOVZ W0, 0x16D
	0x033377B8 LDP X30, X19, [X31], #0x10
	0x033377BC RET
	0x033377C0 MOVZ W9, 0x5C29
	0x033377C4 MOVZ W10, 0xB850
	0x033377C8 MOVK W9, 0xC28F0000
	0x033377CC MOVK W10, 0x51E0000
	0x033377D0 MOVZ W11, 0xD70B
	0x033377D4 MADD W8, W8, W9, W10
	0x033377D8 MOVK W11, 0xA30000
	0x033377DC MOVZ W12, 0x5C28
	0x033377E0 EXTR W9, W8, W8, 0x2
	0x033377E4 EXTR W8, W8, W8, 0x4
	0x033377E8 MOVK W12, 0x28F0000
	0x033377EC CMP W8, W11
	0x033377F0 CCMP W9, W12, 0x2, CS
	0x033377F4 MOVZ W8, 0x16D
	0x033377F8 CINC W0, W8, HI
	0x033377FC LDP X30, X19, [X31], #0x10
	0x03337800 RET
	0x03337804 SUB X31, X31, 0x30

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X28, 0x10A6000
	014 Move X27, 0xDBE000
	015 Move W8, [X28+3314]
	016 Move X27, [X27+2544]
	017 Move W23, W7
	018 Move W24, W6
	019 Move W25, W5
	020 Move W20, W4
	021 Move W21, W3
	022 Move W22, W2
	023 Move W26, W1
	024 Move X19, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0xDBE000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X28+3314], W8
	034 Move X0, X19
	035 Move X1, X31
	036 Move [X31+24], X31
	037 Call Object..ctor, X0
	038 Add X0, X31, 8
	039 Move W1, W22
	040 Move W2, W21
	041 Move W3, W20
	042 Move X4, X31
	043 Move [X19+16], W26
	044 Move [X19+32], W25
	045 Move [X19+36], W24
	046 Move [X19+40], W23
	047 Move [X31+8], X31
	048 Call DateTime..ctor, X0, X1, X2, X3
	049 Move X8, [X31+8]
	050 Move X0, [X27]
	051 Move [X31+24], X8
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Add X0, X31, 24
	057 Move X1, X31
	058 Call DateTime.get_Ticks, X0
	059 Move [X19+24], X0
	060 Move X20, [X31+96]
	061 Move X19, [X31+104]
	062 Move X22, [X31+80]
	063 Move X21, [X31+88]
	064 Move X24, [X31+64]
	065 Move X23, [X31+72]
	066 Move X26, [X31+48]
	067 Move X25, [X31+56]
	068 Move X28, [X31+32]
	069 Move X27, [X31+40]
	070 Move X30, [X31+16]
	071 Add X31, X31, 112
	072 Return 

Method: System.Void .ctor(System.Int32 era, System.Int32 startYear, System.Int32 startMonth, System.Int32 startDay, System.Int32 yearOffset, System.Int32 minEraYear, System.Int32 maxEraYear, System.String eraName, System.String abbrevEraName, System.String englishEraName)

Disassembly:
	0x03337808 STP X30, X21, [X31 + 0x10]
	0x0333780C STP X20, X19, [X31 + 0x20]
	0x03337810 ADRP X20, 0x10A5000
	0x03337814 STR X1, [X31 + 0x8]
	0x03337818 ADRP X21, 0xDBD000
	0x0333781C LDRB W8, [X20 + 0xCFD]
	0x03337820 LDR X21, [X21 + 0x9F0]
	0x03337824 MOV X19, X0
	0x03337828 TBNZ X8, 0x0, 0x3337840
	0x0333782C ADRP X0, 0xDBD000
	0x03337830 LDR X0, [X0 + 0x9F0]
	0x03337834 BL 0x1C16CF4
	0x03337838 MOVZ W8, 0x1
	0x0333783C STRB W8, [X20 + 0xCFD]
	0x03337840 LDR X0, [X21]
	0x03337844 LDR W8, [X0 + 0xE0]
	0x03337848 CBNZ W8, 0x3337850
	0x0333784C BL 0x1C16DFC
	0x03337850 ADD X0, X31, 0x8
	0x03337854 MOV X1, X31
	0x03337858 BL 0x3361708
	0x0333785C LDR X8, [X19 + 0x20]
	0x03337860 CBZ X8, 0x3337908
	0x03337864 LDR W9, [X8 + 0x18]
	0x03337868 CMP W9, 0x1
	0x0333786C B.LT 0x33378A0
	0x03337870 MOV W10, W31
	0x03337874 CMP W10, W9
	0x03337878 B.CS 0x3337904
	0x0333787C ADD X11, X8, W10, 0x3, SXTW
	0x03337880 LDR X11, [X11 + 0x20]
	0x03337884 CBZ X11, 0x3337908
	0x03337888 LDR X12, [X11 + 0x18]
	0x0333788C CMP X0, X12
	0x03337890 B.GE 0x33378F0
	0x03337894 ADD W10, W10, 0x1
	0x03337898 CMP W10, W9
	0x0333789C B.LT 0x3337874
	0x033378A0 ADRP X0, 0xDF1000
	0x033378A4 LDR X0, [X0 + 0x948]
	0x033378A8 BL 0x1C16D08
	0x033378AC MOV X1, X31
	0x033378B0 BL 0x33BDD84
	0x033378B4 MOV X19, X0
	0x033378B8 ADRP X0, 0xDC4000
	0x033378BC LDR X0, [X0 + 0x760]
	0x033378C0 BL 0x1C16D08
	0x033378C4 BL 0x1C16F10
	0x033378C8 MOV X1, X19
	0x033378CC MOV X2, X31
	0x033378D0 MOV X20, X0
	0x033378D4 BL 0x3316014
	0x033378D8 ADRP X0, 0xDF1000
	0x033378DC LDR X0, [X0 + 0x950]
	0x033378E0 BL 0x1C16D08
	0x033378E4 MOV X1, X0
	0x033378E8 MOV X0, X20
	0x033378EC BL 0x1C16DEC
	0x033378F0 LDR W0, [X11 + 0x10]
	0x033378F4 LDP X20, X19, [X31 + 0x20]
	0x033378F8 LDP X30, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X27, 0x10A6000
	015 Move W8, [X27+3315]
	016 Move W23, W7
	017 Move W24, W6
	018 Move W25, W5
	019 Move W20, W4
	020 Move W21, W3
	021 Move W22, W2
	022 Move W26, W1
	023 Move X19, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0xDBE000
	029 Move X0, [X0+2544]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X27+3315], W8
	033 Move X28, [X31+120]
	034 Move X27, [X31+128]
	035 Move X29, [X31+112]
	036 Move X0, X19
	037 Move X1, X31
	038 Move [X31+8], X31
	039 Call Object..ctor, X0
	040 Add X0, X31, 0
	041 Move W1, W22
	042 Move W2, W21
	043 Move W3, W20
	044 Move X4, X31
	045 Move [X19+16], W26
	046 Move [X19+32], W25
	047 Move [X19+36], W24
	048 Move [X19+40], W23
	049 Move [X31], X31
	050 Call DateTime..ctor, X0, X1, X2, X3
	051 Move X9, 0xDBE000
	052 Move X8, [X31]
	053 Move X9, [X9+2544]
	054 Move [X31+8], X8
	055 Move X0, [X9]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Add X0, X31, 8
	061 Move X1, X31
	062 Call DateTime.get_Ticks, X0
	063 Move [X19+24], X0
	064 Move [X19+48], X29
	065 Move [X19+56], X28
	066 Move [X19+64], X27
	067 Move X20, [X31+96]
	068 Move X19, [X31+104]
	069 Move X22, [X31+80]
	070 Move X21, [X31+88]
	071 Move X24, [X31+64]
	072 Move X23, [X31+72]
	073 Move X26, [X31+48]
	074 Move X25, [X31+56]
	075 Move X28, [X31+32]
	076 Move X27, [X31+40]
	077 Move X29, [X31+16]
	078 Move X30, [X31+24]
	079 Add X31, X31, 112
	080 Return 

