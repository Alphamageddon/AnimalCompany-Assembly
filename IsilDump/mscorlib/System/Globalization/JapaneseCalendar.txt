Type: System.Globalization.JapaneseCalendar

Method: System.DateTime get_MinSupportedDateTime()

Disassembly:
	0x0333A6F8 LDR X9, [X9 + 0xA58]
	0x0333A6FC STR X8, [X19 + 0x90]
	0x0333A700 LDR X8, [X9]
	0x0333A704 ADRP X9, 0xDB9000
	0x0333A708 LDR X9, [X9 + 0xAC8]
	0x0333A70C STR X8, [X19 + 0x98]
	0x0333A710 LDR X0, [X9]
	0x0333A714 BL 0x1C16D6C
	0x0333A718 CBZ X0, 0x333A8D8
	0x0333A71C LDR W8, [X0 + 0x18]
	0x0333A720 CBZ W8, 0x333A8D4
	0x0333A724 ADRP X9, 0xDBB000
	0x0333A728 LDR X9, [X9 + 0x4B0]
	0x0333A72C CMP W8, 0x1
	0x0333A730 LDR X9, [X9]
	0x0333A734 STR X9, [X0 + 0x20]
	0x0333A738 B.EQ 0x333A8D4
	0x0333A73C ADRP X9, 0xDDD000
	0x0333A740 LDR X9, [X9 + 0xEC0]
	0x0333A744 CMP W8, 0x2
	0x0333A748 LDR X9, [X9]
	0x0333A74C STR X9, [X0 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10A3000
	005 Move X19, 0xDEF000
	006 Move W8, [X20+3355]
	007 Move X19, [X19+1032]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDEF000
	013 Move X0, [X0+1032]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3355], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.DateTime get_MaxSupportedDateTime()

Disassembly:
	0x0333A750 B.LS 0x333A8D4
	0x0333A754 ADRP X9, 0xDCA000
	0x0333A758 LDR X9, [X9 + 0x338]
	0x0333A75C CMP W8, 0x3
	0x0333A760 LDR X9, [X9]
	0x0333A764 STR X9, [X0 + 0x30]
	0x0333A768 B.EQ 0x333A8D4
	0x0333A76C ADRP X9, 0xDCA000
	0x0333A770 LDR X9, [X9 + 0x118]
	0x0333A774 CMP W8, 0x4
	0x0333A778 LDR X9, [X9]
	0x0333A77C STR X9, [X0 + 0x38]
	0x0333A780 B.LS 0x333A8D4
	0x0333A784 ADRP X9, 0xDD2000
	0x0333A788 LDR X9, [X9 + 0x428]
	0x0333A78C CMP W8, 0x5
	0x0333A790 LDR X9, [X9]
	0x0333A794 STR X9, [X0 + 0x40]
	0x0333A798 B.EQ 0x333A8D4
	0x0333A79C ADRP X9, 0xDDF000
	0x0333A7A0 LDR X9, [X9 + 0x5A8]
	0x0333A7A4 CMP W8, 0x6

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10A3000
	005 Move X19, 0xDBB000
	006 Move W8, [X20+3356]
	007 Move X19, [X19+2544]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDBB000
	013 Move X0, [X0+2544]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3356], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+24]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Globalization.EraInfo[] GetEraInfo()

Disassembly:
	0x0333A7A8 LDR X9, [X9]
	0x0333A7AC STR X9, [X0 + 0x48]
	0x0333A7B0 B.LS 0x333A8D4
	0x0333A7B4 ADRP X9, 0xDCB000
	0x0333A7B8 LDR X9, [X9 + 0x8B0]
	0x0333A7BC CMP W8, 0x7
	0x0333A7C0 LDR X9, [X9]
	0x0333A7C4 STR X9, [X0 + 0x50]
	0x0333A7C8 B.EQ 0x333A8D4
	0x0333A7CC ADRP X9, 0xDD2000
	0x0333A7D0 LDR X9, [X9 + 0x370]
	0x0333A7D4 CMP W8, 0x8
	0x0333A7D8 LDR X9, [X9]
	0x0333A7DC STR X9, [X0 + 0x58]
	0x0333A7E0 B.LS 0x333A8D4
	0x0333A7E4 ADRP X9, 0xDD8000
	0x0333A7E8 LDR X9, [X9 + 0x6C8]
	0x0333A7EC CMP W8, 0x9
	0x0333A7F0 LDR X9, [X9]
	0x0333A7F4 STR X9, [X0 + 0x60]
	0x0333A7F8 B.EQ 0x333A8D4
	0x0333A7FC ADRP X8, 0xDCA000
	0x0333A800 LDR X8, [X8 + 0x9A8]
	0x0333A804 ADRP X21, 0xDED000
	0x0333A808 LDR X21, [X21 + 0x930]
	0x0333A80C ADRP X10, 0xFFFFFFFFFD7B3000
	0x0333A810 LDR X8, [X8]
	0x0333A814 LDR V1, [X10 + 0xA18]
	0x0333A818 MOVI V0.2S, 0x2
	0x0333A81C MOVZ W9, 0x1
	0x0333A820 MOVZ W11, 0x101
	0x0333A824 STR X8, [X0 + 0x68]
	0x0333A828 STR X0, [X19 + 0xA0]
	0x0333A82C MOV X0, X19
	0x0333A830 MOV X1, X31
	0x0333A834 STUR D0, [X19 + 0xAC]
	0x0333A838 STR W9, [X19 + 0xBC]
	0x0333A83C STR D1, [X19 + 0xC8]
	0x0333A840 STURH W11, [X19 + 0xD3]
	0x0333A844 BL 0x33BDD8C
	0x0333A848 LDR X0, [X21]
	0x0333A84C LDR W8, [X0 + 0xE0]
	0x0333A850 CBNZ W8, 0x333A858
	0x0333A854 BL 0x1C16DFC
	0x0333A858 ADRP X22, 0x10A2000
	0x0333A85C LDRB W8, [X22 + 0xAFE]
	0x0333A860 CBNZ W8, 0x333A878
	0x0333A864 ADRP X0, 0xDED000
	0x0333A868 LDR X0, [X0 + 0x930]
	0x0333A86C BL 0x1C16CF4
	0x0333A870 MOVZ W8, 0x1
	0x0333A874 STRB W8, [X22 + 0xAFE]
	0x0333A878 LDR X0, [X21]
	0x0333A87C LDR W8, [X0 + 0xE0]
	0x0333A880 CBNZ W8, 0x333A88C
	0x0333A884 BL 0x1C16DFC
	0x0333A888 LDR X0, [X21]
	0x0333A88C LDR X8, [X0 + 0xB8]
	0x0333A890 LDRB W8, [X8]
	0x0333A894 CBZ W8, 0x333A8B0
	0x0333A898 MOVZ W8, 0x1
	0x0333A89C STRB W8, [X19 + 0xD2]
	0x0333A8A0 LDP X20, X19, [X31 + 0x20]
	0x0333A8A4 LDP X22, X21, [X31 + 0x10]
	0x0333A8A8 LDR X30, [X31], #0x30
	0x0333A8AC RET
	0x0333A8B0 CBZ X20, 0x333A8A0
	0x0333A8B4 MOV X0, X20
	0x0333A8B8 MOV X1, X19
	0x0333A8BC BL 0x333A968
	0x0333A8C0 LDR X0, [X20 + 0x58]
	0x0333A8C4 MOV X1, X31
	0x0333A8C8 BL 0x32277A8
	0x0333A8CC TBNZ X0, 0x0, 0x333A898
	0x0333A8D0 B 0x333A8A0
	0x0333A8D4 BL 0x1C16F28
	0x0333A8D8 BL 0x1C16F20
	0x0333A8DC STP X30, X19, [X31 - 0x10]!
	0x0333A8E0 MOV X19, X0
	0x0333A8E4 LDR X0, [X0 + 0x38]
	0x0333A8E8 LDR X1, [X19 + 0x40]
	0x0333A8EC MOV X2, X31
	0x0333A8F0 BL 0x3226EF8
	0x0333A8F4 LDP X8, X1, [X19 + 0x38]
	0x0333A8F8 AND W9, W0, 0x1
	0x0333A8FC MOV X2, X31
	0x0333A900 STRB W9, [X19 + 0xD3]
	0x0333A904 MOV X0, X8
	0x0333A908 BL 0x3226EF8
	0x0333A90C TBZ X0, 0x0, 0x333A950
	0x0333A910 LDR X0, [X19 + 0x38]
	0x0333A914 LDR X1, [X19 + 0x48]
	0x0333A918 MOV X2, X31
	0x0333A91C BL 0x3226EF8
	0x0333A920 TBZ X0, 0x0, 0x333A950
	0x0333A924 LDR X0, [X19 + 0x50]
	0x0333A928 LDR X1, [X19 + 0x40]
	0x0333A92C MOV X2, X31
	0x0333A930 BL 0x3226EF8
	0x0333A934 TBZ X0, 0x0, 0x333A950
	0x0333A938 LDP X1, X0, [X19 + 0x48]
	0x0333A93C MOV X2, X31
	0x0333A940 BL 0x3226EF8
	0x0333A944 TBZ X0, 0x0, 0x333A950
	0x0333A948 MOVZ W8, 0x1
	0x0333A94C B 0x333A954
	0x0333A950 MOV W8, W31
	0x0333A954 STRB W8, [X19 + 0xD4]
	0x0333A958 LDP X30, X19, [X31], #0x10
	0x0333A95C RET
	0x0333A960 RET
	0x0333A964 RET
	0x0333A968 SUB X31, X31, 0x80
	0x0333A96C STR X30, [X31 + 0x60]
	0x0333A970 STP X20, X19, [X31 + 0x70]
	0x0333A974 MOVI V0.2D, 0x0
	0x0333A978 STUR V0, [X31 + 0x4C]
	0x0333A97C STP V0, V0, [X31 + 0x30]
	0x0333A980 STP V0, V0, [X31 + 0x10]
	0x0333A984 STR V0, [X31]
	0x0333A988 MOV X20, X0
	0x0333A98C LDR X0, [X0 + 0x58]
	0x0333A990 MOV X19, X1
	0x0333A994 MOV X1, X31
	0x0333A998 BL 0x32277A8
	0x0333A99C TBZ X0, 0x0, 0x333A9A8
	0x0333A9A0 CBNZ X19, 0x333AAD4
	0x0333A9A4 B 0x333AAFC
	0x0333A9A8 MOVI V0.2D, 0x0
	0x0333A9AC STUR V0, [X31 + 0x4C]
	0x0333A9B0 STP V0, V0, [X31 + 0x30]
	0x0333A9B4 STP V0, V0, [X31 + 0x10]
	0x0333A9B8 STR V0, [X31]
	0x0333A9BC LDR W0, [X20 + 0x68]
	0x0333A9C0 ADD X1, X31, 0x0
	0x0333A9C4 BL 0x1C428CC
	0x0333A9C8 LDP W1, W2, [X31 + 0xC]
	0x0333A9CC MOV X20, X0
	0x0333A9D0 BL 0x3340D04
	0x0333A9D4 CBZ X19, 0x333AAFC
	0x0333A9D8 STR X0, [X19 + 0x18]
	0x0333A9DC LDP W1, W2, [X31 + 0x38]
	0x0333A9E0 BL 0x3340D04
	0x0333A9E4 STR X0, [X19 + 0x10]
	0x0333A9E8 LDR W1, [X31 + 0x20]
	0x0333A9EC MOV X0, X20
	0x0333A9F0 BL 0x3340CC0
	0x0333A9F4 MOV X1, X0
	0x0333A9F8 MOV X0, X19
	0x0333A9FC BL 0x333B190
	0x0333AA00 LDP W8, W1, [X31]
	0x0333AA04 MOV X0, X20
	0x0333AA08 STR W8, [X19 + 0xB0]
	0x0333AA0C BL 0x3340CC0
	0x0333AA10 STR X0, [X19 + 0x50]
	0x0333AA14 LDR W1, [X31 + 0x8]
	0x0333AA18 MOV X0, X20
	0x0333AA1C BL 0x3340CC0
	0x0333AA20 STR X0, [X19 + 0x48]
	0x0333AA24 LDUR V0, [X31 + 0x14]
	0x0333AA28 MOV X0, X20
	0x0333AA2C UNIMPLEMENTED
	0x0333AA30 STUR D0, [X19 + 0xB4]
	0x0333AA34 LDR W1, [X31 + 0x1C]
	0x0333AA38 BL 0x3340CC0
	0x0333AA3C STR X0, [X19 + 0x58]
	0x0333AA40 LDR W1, [X31 + 0x24]
	0x0333AA44 MOV X0, X20
	0x0333AA48 BL 0x3340CC0
	0x0333AA4C STR X0, [X19 + 0x78]
	0x0333AA50 LDR W1, [X31 + 0x28]
	0x0333AA54 MOV X0, X20
	0x0333AA58 BL 0x3340CC0
	0x0333AA5C STR X0, [X19 + 0x30]
	0x0333AA60 LDP W8, W1, [X31 + 0x2C]
	0x0333AA64 MOV X0, X20
	0x0333AA68 STR W8, [X19 + 0xAC]
	0x0333AA6C BL 0x3340CC0
	0x0333AA70 STR X0, [X19 + 0x38]
	0x0333AA74 LDR W1, [X31 + 0x34]
	0x0333AA78 MOV X0, X20
	0x0333AA7C BL 0x3340CC0
	0x0333AA80 STR X0, [X19 + 0x40]
	0x0333AA84 LDP W8, W1, [X31 + 0x40]
	0x0333AA88 MOV X0, X20
	0x0333AA8C STR W8, [X19 + 0xBC]
	0x0333AA90 BL 0x3340CC0
	0x0333AA94 STR X0, [X19 + 0x98]
	0x0333AA98 LDR V0, [X31 + 0x48]
	0x0333AA9C MOV X0, X20
	0x0333AAA0 UNIMPLEMENTED
	0x0333AAA4 STR D0, [X19 + 0xC0]
	0x0333AAA8 LDR W1, [X31 + 0x50]
	0x0333AAAC BL 0x3340CC0
	0x0333AAB0 STR X0, [X19 + 0x90]
	0x0333AAB4 LDR W1, [X31 + 0x54]
	0x0333AAB8 MOV X0, X20
	0x0333AABC BL 0x3340CC0
	0x0333AAC0 STR X0, [X19 + 0x70]
	0x0333AAC4 LDR W1, [X31 + 0x58]
	0x0333AAC8 MOV X0, X20
	0x0333AACC BL 0x3340CC0
	0x0333AAD0 STR X0, [X19 + 0x28]
	0x0333AAD4 LDR W8, [X19 + 0xAC]
	0x0333AAD8 LDR X9, [X19 + 0x10]
	0x0333AADC LDUR V0, [X19 + 0x38]
	0x0333AAE0 LDR X30, [X31 + 0x60]
	0x0333AAE4 STR W8, [X19 + 0xC8]
	0x0333AAE8 STR X9, [X19 + 0x20]
	0x0333AAEC STR V0, [X19 + 0x8]
	0x0333AAF0 LDP X20, X19, [X31 + 0x70]
	0x0333AAF4 ADD X31, X31, 0x80
	0x0333AAF8 RET
	0x0333AAFC BL 0x1C16F20
	0x0333AB00 LDR X0, [X0 + 0x58]
	0x0333AB04 MOV X1, X31
	0x0333AB08 B 0x32277A8
	0x0333AB0C STR X30, [X31 - 0x20]!
	0x0333AB10 STP X20, X19, [X31 + 0x10]
	0x0333AB14 LDRB W8, [X0 + 0xD0]
	0x0333AB18 CBNZ W8, 0x333AB28
	0x0333AB1C LDP X20, X19, [X31 + 0x10]
	0x0333AB20 LDR X30, [X31], #0x20
	0x0333AB24 RET
	0x0333AB28 ADRP X0, 0xDE8000
	0x0333AB2C LDR X0, [X0 + 0xA38]
	0x0333AB30 BL 0x1C16D08
	0x0333AB34 MOV X1, X31
	0x0333AB38 BL 0x33BDD84
	0x0333AB3C MOV X19, X0
	0x0333AB40 ADRP X0, 0xDB9000
	0x0333AB44 LDR X0, [X0 + 0x5B0]
	0x0333AB48 BL 0x1C16D08
	0x0333AB4C BL 0x1C16F10
	0x0333AB50 MOV X1, X19
	0x0333AB54 MOV X2, X31
	0x0333AB58 MOV X20, X0
	0x0333AB5C BL 0x337DF1C
	0x0333AB60 ADRP X0, 0xDEE000
	0x0333AB64 LDR X0, [X0 + 0xA80]
	0x0333AB68 BL 0x1C16D08
	0x0333AB6C MOV X1, X0
	0x0333AB70 MOV X0, X20
	0x0333AB74 BL 0x1C16DEC
	0x0333AB78 STR X30, [X31 - 0x20]!
	0x0333AB7C STP X20, X19, [X31 + 0x10]
	0x0333AB80 ADRP X19, 0x10A2000
	0x0333AB84 ADRP X20, 0xDEE000
	0x0333AB88 LDRB W8, [X19 + 0xD24]
	0x0333AB8C LDR X20, [X20 + 0x3C8]
	0x0333AB90 TBNZ X8, 0x0, 0x333ABA8
	0x0333AB94 ADRP X0, 0xDEE000
	0x0333AB98 LDR X0, [X0 + 0x3C8]
	0x0333AB9C BL 0x1C16CF4
	0x0333ABA0 MOVZ W8, 0x1
	0x0333ABA4 STRB W8, [X19 + 0xD24]
	0x0333ABA8 LDR X8, [X20]
	0x0333ABAC LDR X8, [X8 + 0xB8]
	0x0333ABB0 LDR X19, [X8]
	0x0333ABB4 BL 0x1C16D44
	0x0333ABB8 CBNZ X19, 0x333ABF8
	0x0333ABBC LDR X0, [X20]
	0x0333ABC0 BL 0x1C16F10
	0x0333ABC4 MOV X1, X31
	0x0333ABC8 MOV X19, X0
	0x0333ABCC BL 0x333A4AC
	0x0333ABD0 CBZ X19, 0x333AC18
	0x0333ABD4 MOVZ W8, 0x1
	0x0333ABD8 MOV X0, X19
	0x0333ABDC STRB W8, [X19 + 0xD2]
	0x0333ABE0 BL 0x333AC1C
	0x0333ABE4 MOV X19, X0
	0x0333ABE8 BL 0x1C16D44
	0x0333ABEC LDR X8, [X20]
	0x0333ABF0 LDR X8, [X8 + 0xB8]
	0x0333ABF4 STR X19, [X8]
	0x0333ABF8 LDR X8, [X20]
	0x0333ABFC LDR X8, [X8 + 0xB8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X19, 0x10A3000
	008 Move X21, 0xDEF000
	009 Move W8, [X19+3357]
	010 Move X21, [X21+1032]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {71}
	015 Move X0, 0xDEF000
	016 Move X0, [X0+2512]
	017 Call 0x1C17CF4
	018 Move X0, 0xDEF000
	019 Move X0, [X0+2520]
	020 Call 0x1C17CF4
	021 Move X0, 0xDEF000
	022 Move X0, [X0+1032]
	023 Call 0x1C17CF4
	024 Move X0, 0xDEF000
	025 Move X0, [X0+2528]
	026 Call 0x1C17CF4
	027 Move X0, 0xDEB000
	028 Move X0, [X0+464]
	029 Call 0x1C17CF4
	030 Move X0, 0xDEF000
	031 Move X0, [X0+2536]
	032 Call 0x1C17CF4
	033 Move X0, 0xDEF000
	034 Move X0, [X0+2544]
	035 Call 0x1C17CF4
	036 Move X0, 0xDEB000
	037 Move X0, [X0+472]
	038 Call 0x1C17CF4
	039 Move X0, 0xDE3000
	040 Move X0, [X0+1048]
	041 Call 0x1C17CF4
	042 Move X0, 0xDEF000
	043 Move X0, [X0+2552]
	044 Call 0x1C17CF4
	045 Move X0, 0xDEF000
	046 Move X0, [X0+2560]
	047 Call 0x1C17CF4
	048 Move X0, 0xDEF000
	049 Move X0, [X0+2568]
	050 Call 0x1C17CF4
	051 Move X0, 0xDEF000
	052 Move X0, [X0+2576]
	053 Call 0x1C17CF4
	054 Move X0, 0xDEF000
	055 Move X0, [X0+2584]
	056 Call 0x1C17CF4
	057 Move X0, 0xDEF000
	058 Move X0, [X0+2592]
	059 Call 0x1C17CF4
	060 Move X0, 0xDEB000
	061 Move X0, [X0+488]
	062 Call 0x1C17CF4
	063 Move X0, 0xDEF000
	064 Move X0, [X0+2600]
	065 Call 0x1C17CF4
	066 Move X0, 0xDEF000
	067 Move X0, [X0+2608]
	068 Call 0x1C17CF4
	069 Move W8, 1
	070 Move [X19+3357], W8
	071 Move X0, [X21]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {77}
	075 Call 0x1C17DFC
	076 Move X0, [X21]
	077 Move X8, [X0+184]
	078 Move X19, [X8+8]
	079 Call 0x1C17D44
	080 Move X0, [X21]
	081 Compare X19, 0
	082 JumpIfNotEqual {288}
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Call 0x1C17D44
	088 Move X8, [X21]
	089 Move X8, [X8+184]
	090 Move [X8+8], X31
	091 Call 0x1C17D44
	092 Move X8, 0xDEF000
	093 Move X8, [X8+2512]
	094 Move W1, 5
	095 Move X0, [X8]
	096 Call 0x1C17D6C
	097 Move X22, 0xDEF000
	098 Move X22, [X22+2520]
	099 Move X19, X0
	100 Move X8, [X22]
	101 Move X0, X8
	102 Call 0x1C17F10
	103 Move X8, 0xDEF000
	104 Move X9, 0xDEF000
	105 Move X10, 0xDEF000
	106 Move X8, [X8+2600]
	107 Move X9, [X9+2608]
	108 Move X10, [X10+2544]
	109 Move W1, 5
	110 Move X8, [X8]
	111 Move X9, [X9]
	112 Move X10, [X10]
	113 Move W2, 2019
	114 Move W3, 5
	115 Move W4, 1
	116 Move W5, 2018
	117 Move W6, 1
	118 Move W7, 0x1F2D
	119 Move X20, X0
	120 Move [X31+16], X10
	121 Move [X31+24], X31
	122 Move [X31], X8
	123 Move [X31+8], X9
	124 Call EraInfo..ctor, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10
	125 Compare X19, 0
	126 JumpIfEqual {308}
	127 Compare X20, 0
	128 JumpIfEqual {135}
	129 Move X8, [X19]
	130 Move X0, X20
	131 Move X1, [X8+64]
	132 Call 0x1C17E00
	133 Compare X0, 0
	134 JumpIfEqual {305}
	135 Move W8, [X19+24]
	136 Compare W8, 0
	137 JumpIfEqual {304}
	138 Move [X19+32], X20
	139 Move X0, [X22]
	140 Call 0x1C17F10
	141 Move X8, 0xDEF000
	142 Move X9, 0xDEF000
	143 Move X10, 0xDEB000
	144 Move X8, [X8+2576]
	145 Move X9, [X9+2552]
	146 Move X10, [X10+472]
	147 Move W1, 4
	148 Move X8, [X8]
	149 Move X9, [X9]
	150 Move X10, [X10]
	151 Move W2, 1989
	152 Move W3, 1
	153 Move W4, 8
	154 Move W5, 1988
	155 Move W6, 1
	156 Move W7, 31
	157 Move X20, X0
	158 Move [X31+16], X10
	159 Move [X31+24], X31
	160 Move [X31], X8
	161 Move [X31+8], X9
	162 Call EraInfo..ctor, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10
	163 Compare X20, 0
	164 JumpIfEqual {171}
	165 Move X8, [X19]
	166 Move X0, X20
	167 Move X1, [X8+64]
	168 Call 0x1C17E00
	169 Compare X0, 0
	170 JumpIfEqual {305}
	171 Move W8, [X19+24]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move [X19+40], X20
	174 Move X0, [X22]
	175 Call 0x1C17F10
	176 Move X8, 0xDEF000
	177 Move X9, 0xDEF000
	178 Move X10, 0xDEB000
	179 Move X8, [X8+2528]
	180 Move X9, [X9+2536]
	181 Move X10, [X10+464]
	182 Move W1, 3
	183 Move X8, [X8]
	184 Move X9, [X9]
	185 Move X10, [X10]
	186 Move W2, 1926
	187 Move W3, 12
	188 Move W4, 25
	189 Move W5, 1925
	190 Move W6, 1
	191 Move W7, 64
	192 Move X20, X0
	193 Move [X31+16], X10
	194 Move [X31+24], X31
	195 Move [X31], X8
	196 Move [X31+8], X9
	197 Call EraInfo..ctor, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10
	198 Compare X20, 0
	199 JumpIfEqual {206}
	200 Move X8, [X19]
	201 Move X0, X20
	202 Move X1, [X8+64]
	203 Call 0x1C17E00
	204 Compare X0, 0
	205 JumpIfEqual {305}
	206 Move W8, [X19+24]
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Move [X19+48], X20
	209 Move X0, [X22]
	210 Call 0x1C17F10
	211 Move X8, 0xDEF000
	212 Move X9, 0xDEF000
	213 Move X10, 0xDE3000
	214 Move X8, [X8+2568]
	215 Move X9, [X9+2584]
	216 Move X10, [X10+1048]
	217 Move W1, 2
	218 Move X8, [X8]
	219 Move X9, [X9]
	220 Move X10, [X10]
	221 Move W2, 1912
	222 Move W3, 7
	223 Move W4, 30
	224 Move W5, 1911
	225 Move W6, 1
	226 Move W7, 15
	227 Move X20, X0
	228 Move [X31+16], X10
	229 Move [X31+24], X31
	230 Move [X31], X8
	231 Move [X31+8], X9
	232 Call EraInfo..ctor, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10
	233 Compare X20, 0
	234 JumpIfEqual {241}
	235 Move X8, [X19]
	236 Move X0, X20
	237 Move X1, [X8+64]
	238 Call 0x1C17E00
	239 Compare X0, 0
	240 JumpIfEqual {305}
	241 Move W8, [X19+24]
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move [X19+56], X20
	244 Move X0, [X22]
	245 Call 0x1C17F10
	246 Move X8, 0xDEF000
	247 Move X9, 0xDEF000
	248 Move X10, 0xDEB000
	249 Move X8, [X8+2592]
	250 Move X9, [X9+2560]
	251 Move X10, [X10+488]
	252 Move W1, 1
	253 Move X8, [X8]
	254 Move X9, [X9]
	255 Move X10, [X10]
	256 Move W2, 1868
	257 Move W3, 1
	258 Move W4, 1
	259 Move W5, 1867
	260 Move W6, 1
	261 Move W7, 45
	262 Move X20, X0
	263 Move [X31+16], X10
	264 Move [X31+24], X31
	265 Move [X31], X8
	266 Move [X31+8], X9
	267 Call EraInfo..ctor, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10
	268 Compare X20, 0
	269 JumpIfEqual {276}
	270 Move X8, [X19]
	271 Move X0, X20
	272 Move X1, [X8+64]
	273 Call 0x1C17E00
	274 Compare X0, 0
	275 JumpIfEqual {305}
	276 Move W8, [X19+24]
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Move [X19+64], X20
	279 Move X0, [X21]
	280 Move W8, [X0+224]
	281 Compare W8, 0
	282 JumpIfNotEqual {284}
	283 Call 0x1C17DFC
	284 Call 0x1C17D44
	285 Move X0, [X21]
	286 Move X8, [X0+184]
	287 Move [X8+8], X19
	288 Move W8, [X0+224]
	289 Compare W8, 0
	290 JumpIfNotEqual {293}
	291 Call 0x1C17DFC
	292 Move X0, [X21]
	293 Move X8, [X0+184]
	294 Move X19, [X8+8]
	295 Call 0x1C17D44
	296 Move X0, X19
	297 Move X20, [X31+64]
	298 Move X19, [X31+72]
	299 Move X22, [X31+48]
	300 Move X21, [X31+56]
	301 Move X30, [X31+32]
	302 Add X31, X31, 80
	303 Return X0
	304 Call 0x1C17F28
	305 Call 0x1C17F44
	306 Move X1, X31
	307 Call 0x1C17DEC
	308 Call 0x1C17F20

Method: System.Globalization.EraInfo[] GetErasFromRegistry()

Disassembly:
	0x0333AC00 LDR X19, [X8]
	0x0333AC04 BL 0x1C16D44

ISIL:
	001 Move X0, X31
	002 Return X0

Method: System.Globalization.Calendar GetDefaultInstance()

Disassembly:
	0x0333AC08 MOV X0, X19
	0x0333AC0C LDP X20, X19, [X31 + 0x10]
	0x0333AC10 LDR X30, [X31], #0x20
	0x0333AC14 RET
	0x0333AC18 BL 0x1C16F20
	0x0333AC1C STR X30, [X31 - 0x20]!
	0x0333AC20 STP X20, X19, [X31 + 0x10]
	0x0333AC24 ADRP X20, 0x10A2000
	0x0333AC28 LDRB W8, [X20 + 0xD2C]
	0x0333AC2C MOV X19, X0
	0x0333AC30 TBNZ X8, 0x0, 0x333AC48
	0x0333AC34 ADRP X0, 0xDEE000
	0x0333AC38 LDR X0, [X0 + 0x3C8]
	0x0333AC3C BL 0x1C16CF4
	0x0333AC40 MOVZ W8, 0x1
	0x0333AC44 STRB W8, [X20 + 0xD2C]
	0x0333AC48 CBZ X19, 0x333AC98
	0x0333AC4C LDRB W8, [X19 + 0xD0]
	0x0333AC50 CBNZ W8, 0x333AC88
	0x0333AC54 MOV X0, X19
	0x0333AC58 MOV X1, X31
	0x0333AC5C BL 0x33C5A24
	0x0333AC60 CBZ X0, 0x333ACE0
	0x0333AC64 ADRP X8, 0xDEE000
	0x0333AC68 LDR X8, [X8 + 0x3C8]
	0x0333AC6C MOV X19, X0
	0x0333AC70 LDR X1, [X8]
	0x0333AC74 LDR X8, [X0]
	0x0333AC78 CMP X8, X1
	0x0333AC7C B.NE 0x333ACE4
	0x0333AC80 MOVZ W8, 0x1
	0x0333AC84 STRB W8, [X19 + 0xD0]
	0x0333AC88 MOV X0, X19
	0x0333AC8C LDP X20, X19, [X31 + 0x10]
	0x0333AC90 LDR X30, [X31], #0x20
	0x0333AC94 RET
	0x0333AC98 ADRP X0, 0xDBE000
	0x0333AC9C LDR X0, [X0 + 0x528]
	0x0333ACA0 BL 0x1C16D08
	0x0333ACA4 BL 0x1C16F10
	0x0333ACA8 MOV X19, X0
	0x0333ACAC ADRP X0, 0xDEE000
	0x0333ACB0 LDR X0, [X0 + 0xA88]
	0x0333ACB4 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x10A3000
	005 Move X20, 0xDEF000
	006 Move W8, [X19+3358]
	007 Move X20, [X20+1032]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDEF000
	013 Move X0, [X0+1032]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3358], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X20]
	023 Move X8, [X0+184]
	024 Move X19, [X8+16]
	025 Call 0x1C17D44
	026 Move X0, [X20]
	027 Compare X19, 0
	028 JumpIfNotEqual {41}
	029 Call 0x1C17F10
	030 Move X19, X0
	031 Call JapaneseCalendar..ctor, X0
	032 Move X0, [X20]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Call 0x1C17D44
	038 Move X0, [X20]
	039 Move X8, [X0+184]
	040 Move [X8+16], X19
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X20]
	046 Move X8, [X0+184]
	047 Move X19, [X8+16]
	048 Call 0x1C17D44
	049 Move X0, X19
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Return X0

Method: System.Void .ctor()

Disassembly:
	0x0333ACB8 MOV X1, X0
	0x0333ACBC MOV X0, X19
	0x0333ACC0 MOV X2, X31
	0x0333ACC4 BL 0x330E100
	0x0333ACC8 ADRP X0, 0xDEE000
	0x0333ACCC LDR X0, [X0 + 0xA90]
	0x0333ACD0 BL 0x1C16D08
	0x0333ACD4 MOV X1, X0
	0x0333ACD8 MOV X0, X19
	0x0333ACDC BL 0x1C16DEC
	0x0333ACE0 BL 0x1C16F20
	0x0333ACE4 MOV X0, X19
	0x0333ACE8 BL 0x1C171E0
	0x0333ACEC STP X30, X21, [X31 - 0x20]!
	0x0333ACF0 STP X20, X19, [X31 + 0x10]
	0x0333ACF4 ADRP X20, 0x10A2000
	0x0333ACF8 LDRB W8, [X20 + 0xD25]
	0x0333ACFC MOV X19, X0
	0x0333AD00 TBNZ X8, 0x0, 0x333AD48
	0x0333AD04 ADRP X0, 0xDBB000
	0x0333AD08 LDR X0, [X0 + 0xC48]
	0x0333AD0C BL 0x1C16CF4
	0x0333AD10 ADRP X0, 0xDE8000
	0x0333AD14 LDR X0, [X0 + 0x5F0]
	0x0333AD18 BL 0x1C16CF4
	0x0333AD1C ADRP X0, 0xDEE000
	0x0333AD20 LDR X0, [X0 + 0xA98]
	0x0333AD24 BL 0x1C16CF4
	0x0333AD28 ADRP X0, 0xDEE000
	0x0333AD2C LDR X0, [X0 + 0x3C8]
	0x0333AD30 BL 0x1C16CF4
	0x0333AD34 ADRP X0, 0xDB9000
	0x0333AD38 LDR X0, [X0 + 0x6C0]
	0x0333AD3C BL 0x1C16CF4
	0x0333AD40 MOVZ W8, 0x1
	0x0333AD44 STRB W8, [X20 + 0xD25]
	0x0333AD48 CBZ X19, 0x333AE54
	0x0333AD4C ADRP X9, 0xDBB000
	0x0333AD50 LDR X9, [X9 + 0xC48]
	0x0333AD54 LDR X8, [X19]
	0x0333AD58 LDR X9, [X9]
	0x0333AD5C LDRB W11, [X8 + 0x130]
	0x0333AD60 LDRB W10, [X9 + 0x130]
	0x0333AD64 CMP W11, W10
	0x0333AD68 B.CC 0x333AD88
	0x0333AD6C LDR X11, [X8 + 0xC8]
	0x0333AD70 ADD X10, X11, X10, 0x3, LSL
	0x0333AD74 LDUR X10, [X10 - 0x8]
	0x0333AD78 CMP X10, X9
	0x0333AD7C B.NE 0x333AD88
	0x0333AD80 LDRB W9, [X19 + 0xC8]
	0x0333AD84 CBZ W9, 0x333AE60
	0x0333AD88 ADRP X21, 0xDEE000
	0x0333AD8C LDR X21, [X21 + 0x3C8]
	0x0333AD90 LDR X9, [X21]
	0x0333AD94 CMP X8, X9
	0x0333AD98 B.EQ 0x333AE18
	0x0333AD9C ADRP X8, 0xDB9000
	0x0333ADA0 LDR X8, [X8 + 0x6C0]
	0x0333ADA4 LDR X0, [X8]
	0x0333ADA8 ADRP X8, 0xDEE000
	0x0333ADAC LDR X8, [X8 + 0xA98]
	0x0333ADB0 LDR W9, [X0 + 0xE0]
	0x0333ADB4 LDR X20, [X8]
	0x0333ADB8 CBNZ W9, 0x333ADC0
	0x0333ADBC BL 0x1C16DFC
	0x0333ADC0 MOV X0, X20
	0x0333ADC4 MOV X1, X31
	0x0333ADC8 BL 0x338C698
	0x0333ADCC ADRP X10, 0xDE8000
	0x0333ADD0 LDR X8, [X19]
	0x0333ADD4 LDR X10, [X10 + 0x5F0]
	0x0333ADD8 MOV X20, X0
	0x0333ADDC LDRH W9, [X8 + 0x12E]
	0x0333ADE0 LDR X1, [X10]
	0x0333ADE4 CBZ X9, 0x333AE08
	0x0333ADE8 LDR X10, [X8 + 0xB0]
	0x0333ADEC ADD X10, X10, 0x8
	0x0333ADF0 LDUR X11, [X10 - 0x8]
	0x0333ADF4 CMP X11, X1
	0x0333ADF8 B.EQ 0x333AE20
	0x0333ADFC SUBS X9, X9, 0x1
	0x0333AE00 ADD X10, X10, 0x10
	0x0333AE04 B.NE 0x333ADF0
	0x0333AE08 MOV X0, X19
	0x0333AE0C MOV W2, W31
	0x0333AE10 BL 0x1C5C788
	0x0333AE14 B 0x333AE2C
	0x0333AE18 MOV X20, X19
	0x0333AE1C B 0x333AE6C
	0x0333AE20 LDRSW X9, [X10]
	0x0333AE24 ADD X8, X8, X9, 0x4, LSL
	0x0333AE28 ADD X0, X8, 0x138
	0x0333AE2C LDP X8, X2, [X0]
	0x0333AE30 MOV X0, X19
	0x0333AE34 MOV X1, X20
	0x0333AE38 BLR X8
	0x0333AE3C CBZ X0, 0x333AE54
	0x0333AE40 LDR X8, [X21]
	0x0333AE44 LDR X9, [X0]
	0x0333AE48 MOV X20, X0
	0x0333AE4C CMP X9, X8
	0x0333AE50 B.EQ 0x333AE6C
	0x0333AE54 LDP X20, X19, [X31 + 0x10]
	0x0333AE58 LDP X30, X21, [X31], #0x20
	0x0333AE5C B 0x333AE98
	0x0333AE60 LDR X20, [X19 + 0x30]
	0x0333AE64 BL 0x1C16D44
	0x0333AE68 CBZ X20, 0x333AE7C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10A3000
	006 Move X20, 0xDBC000
	007 Move W8, [X21+3359]
	008 Move X20, [X20+3144]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xDBC000
	015 Move X0, [X0+3144]
	016 Call 0x1C17CF4
	017 Move X0, 0xDEE000
	018 Move X0, [X0+3000]
	019 Call 0x1C17CF4
	020 Move X0, 0xDEF000
	021 Move X0, [X0+1032]
	022 Call 0x1C17CF4
	023 Move X0, 0xDEF000
	024 Move X0, [X0+1040]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+3359], W8
	028 Move X0, X19
	029 Move X1, X31
	030 Call Calendar..ctor, X0
	031 Move X0, [X20]
	032 Call 0x1C17F10
	033 Move X8, 0xDEF000
	034 Move X8, [X8+1040]
	035 Move X1, [X8]
	036 Move W2, 1
	037 Move W3, W31
	038 Call CultureInfo..ctor, X0, X1, X2, X3
	039 Move X8, 0xDEF000
	040 Move X8, [X8+1032]
	041 Move X20, 0xDEE000
	042 Move X0, [X8]
	043 Move W8, [X0+224]
	044 Move X20, [X20+3000]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Call JapaneseCalendar.GetEraInfo
	049 Move X8, [X20]
	050 Move X20, X0
	051 Move X0, X8
	052 Call 0x1C17F10
	053 Move X1, X19
	054 Move X2, X20
	055 Move X3, X31
	056 Move X21, X0
	057 Call GregorianCalendarHelper..ctor, X0, X1, X2
	058 Move [X19+32], X21
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Return 
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X20, X0
	066 Move X0, X20
	067 Call 0x3EB2AD0
	068 Move X20, X0
	069 Move X0, 0xDC2000
	070 Move X0, [X0+1400]
	071 Call 0x1C17D08
	072 Move X8, [X20]
	073 Move X1, [X8]
	074 Call 0x1C18270
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {107}
	079 Move X20, [X20]
	080 Call 0x3EB2AE0
	081 Move X0, X19
	082 Move X1, X31
	083 Call "il2cpp_vm_object_is_inst", X0
	084 Move X19, X0
	085 Call 0x19913C0
	086 Move X8, [X19]
	087 Move X0, X19
	088 Move X9, [X8+744]
	089 Move X1, [X8+752]
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move X19, X0
	092 Move X0, 0xDEF000
	093 Move X0, [X0+2616]
	094 Call 0x1C17D08
	095 Call 0x1C17F10
	096 Move X1, X19
	097 Move X2, X20
	098 Move X3, X31
	099 Move X21, X0
	100 Call TypeInitializationException..ctor, X0, X1, X2
	101 Move X0, 0xDEF000
	102 Move X0, [X0+2624]
	103 Call 0x1C17D08
	104 Move X1, X0
	105 Move X0, X21
	106 Call 0x1C17DEC
	107 Move W0, 8
	108 Call 0x3EB2AF0
	109 Move X8, [X20]
	110 Move [X0], X8
	111 Move X1, 0xB7B000
	112 Add X1, X1, 3672
	113 Move X2, X31
	114 Call 0x3EB2B00
	115 Move X20, X0
	116 Call 0x3EB2AE0
	117 Move X0, X20
	118 Call 0x1D2D690
	119 Call 0x1991590

Method: System.Int32 get_ID()

Disassembly:
	0x0333AE78 RET
	0x0333AE7C LDR X8, [X19]

ISIL:
	001 Move W0, 3
	002 Return X0

Method: System.Int32 GetDaysInMonth(System.Int32 year, System.Int32 month, System.Int32 era)

Disassembly:
	0x0333AE80 MOV X0, X19
	0x0333AE84 LDP X20, X19, [X31 + 0x10]
	0x0333AE88 LDR X2, [X8 + 0x218]
	0x0333AE8C LDR X1, [X8 + 0x220]
	0x0333AE90 LDP X30, X21, [X31], #0x20
	0x0333AE94 BR X2
	0x0333AE98 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X4, X31
	006 Move X30, [X31+16]
	007 Call GregorianCalendarHelper.GetDaysInMonth, X0, X1, X2, X3
	008 Return X0
	009 Call 0x1C17F20

Method: System.Int32 GetDaysInYear(System.Int32 year, System.Int32 era)

Disassembly:
	0x0333AE9C STP X20, X19, [X31 + 0x10]
	0x0333AEA0 ADRP X19, 0x10A2000
	0x0333AEA4 LDRB W8, [X19 + 0xD2A]
	0x0333AEA8 TBNZ X8, 0x0, 0x333AED8
	0x0333AEAC ADRP X0, 0xDEE000
	0x0333AEB0 LDR X0, [X0 + 0xA98]
	0x0333AEB4 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X3, X31
	006 Move X30, [X31+16]
	007 Call GregorianCalendarHelper.GetDaysInYear, X0, X1, X2
	008 Return X0
	009 Call 0x1C17F20

Method: System.Int32 GetDayOfMonth(System.DateTime time)

Disassembly:
	0x0333AEB8 ADRP X0, 0xDEE000
	0x0333AEBC LDR X0, [X0 + 0x3C8]
	0x0333AEC0 BL 0x1C16CF4
	0x0333AEC4 ADRP X0, 0xDB9000
	0x0333AEC8 LDR X0, [X0 + 0x6C0]
	0x0333AECC BL 0x1C16CF4
	0x0333AED0 MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X2, X31
	006 Move X30, [X31+16]
	007 Call GregorianCalendarHelper.GetDayOfMonth, X0, X1
	008 Return X0
	009 Call 0x1C17F20

Method: System.DayOfWeek GetDayOfWeek(System.DateTime time)

Disassembly:
	0x0333AED4 STRB W8, [X19 + 0xD2A]
	0x0333AED8 MOV X0, X31
	0x0333AEDC BL 0x33E3C68
	0x0333AEE0 CBZ X0, 0x333AF88
	0x0333AEE4 MOV X1, X31
	0x0333AEE8 BL 0x33E6EAC
	0x0333AEEC CBZ X0, 0x333AF88

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X2, X31
	006 Move X30, [X31+16]
	007 Call GregorianCalendarHelper.GetDayOfWeek, X0, X1
	008 Return X0
	009 Call 0x1C17F20

Method: System.Int32 GetMonthsInYear(System.Int32 year, System.Int32 era)

Disassembly:
	0x0333AEF0 LDRB W8, [X0 + 0xC8]
	0x0333AEF4 MOV X19, X0
	0x0333AEF8 CBZ W8, 0x333AF6C
	0x0333AEFC ADRP X8, 0xDB9000
	0x0333AF00 LDR X8, [X8 + 0x6C0]
	0x0333AF04 LDR X0, [X8]
	0x0333AF08 ADRP X8, 0xDEE000

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X3, X31
	006 Move X30, [X31+16]
	007 Call GregorianCalendarHelper.GetMonthsInYear, X0, X1, X2
	008 Return X0
	009 Call 0x1C17F20

Method: System.Int32 GetEra(System.DateTime time)

Disassembly:
	0x0333AF0C LDR X8, [X8 + 0xA98]
	0x0333AF10 LDR W9, [X0 + 0xE0]
	0x0333AF14 LDR X20, [X8]
	0x0333AF18 CBNZ W9, 0x333AF20
	0x0333AF1C BL 0x1C16DFC
	0x0333AF20 MOV X0, X20
	0x0333AF24 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X2, X31
	006 Move X30, [X31+16]
	007 Call GregorianCalendarHelper.GetEra, X0, X1
	008 Return X0
	009 Call 0x1C17F20

Method: System.Int32 GetMonth(System.DateTime time)

Disassembly:
	0x0333AF28 BL 0x338C698
	0x0333AF2C LDR X8, [X19]
	0x0333AF30 MOV X1, X0
	0x0333AF34 MOV X0, X19
	0x0333AF38 LDR X9, [X8 + 0x268]
	0x0333AF3C LDR X2, [X8 + 0x270]
	0x0333AF40 BLR X9

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X2, X31
	006 Move X30, [X31+16]
	007 Call GregorianCalendarHelper.GetMonth, X0, X1
	008 Return X0
	009 Call 0x1C17F20

Method: System.Int32 GetYear(System.DateTime time)

Disassembly:
	0x0333AF44 MOV X20, X0
	0x0333AF48 CBZ X0, 0x333AF78
	0x0333AF4C ADRP X8, 0xDEE000
	0x0333AF50 LDR X8, [X8 + 0x3C8]
	0x0333AF54 LDR X1, [X8]
	0x0333AF58 LDR X8, [X20]
	0x0333AF5C CMP X8, X1

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X2, X31
	006 Move X30, [X31+16]
	007 Call GregorianCalendarHelper.GetYear, X0, X1
	008 Return X0
	009 Call 0x1C17F20

Method: System.Boolean IsLeapYear(System.Int32 year, System.Int32 era)

Disassembly:
	0x0333AF60 B.EQ 0x333AF78
	0x0333AF64 MOV X0, X20
	0x0333AF68 BL 0x1C171E0
	0x0333AF6C LDR X20, [X19 + 0x30]
	0x0333AF70 BL 0x1C16D44
	0x0333AF74 CBZ X20, 0x333AEFC
	0x0333AF78 MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X3, X31
	006 Move X30, [X31+16]
	007 Call GregorianCalendarHelper.IsLeapYear, X0, X1, X2
	008 Return X0
	009 Call 0x1C17F20

Method: System.DateTime ToDateTime(System.Int32 year, System.Int32 month, System.Int32 day, System.Int32 hour, System.Int32 minute, System.Int32 second, System.Int32 millisecond, System.Int32 era)

Disassembly:
	0x0333AF7C LDP X20, X19, [X31 + 0x10]
	0x0333AF80 LDR X30, [X31], #0x20
	0x0333AF84 RET
	0x0333AF88 BL 0x1C16F20
	0x0333AF8C STR X30, [X31 - 0x20]!
	0x0333AF90 STP X20, X19, [X31 + 0x10]
	0x0333AF94 ADRP X20, 0x10A2000
	0x0333AF98 LDRB W8, [X20 + 0xD26]
	0x0333AF9C MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move W8, [X31+16]
	006 Move [X31+24], X31
	007 Move [X31+16], W8
	008 Move X30, [X31+16]
	009 Call GregorianCalendarHelper.ToDateTime, X0, X1, X2, X3, X4, X5, X6, X7, X8
	010 Return X0
	011 Call 0x1C17F20

Method: System.Int32 ToFourDigitYear(System.Int32 year)

Disassembly:
	0x0333AFA0 TBNZ X8, 0x0, 0x333AFB8
	0x0333AFA4 ADRP X0, 0xDEE000
	0x0333AFA8 LDR X0, [X0 + 0x3C8]
	0x0333AFAC BL 0x1C16CF4
	0x0333AFB0 MOVZ W8, 0x1
	0x0333AFB4 STRB W8, [X20 + 0xD26]
	0x0333AFB8 MOV X0, X19
	0x0333AFBC MOV X1, X31
	0x0333AFC0 BL 0x33C5A24
	0x0333AFC4 CBZ X0, 0x333AFF0
	0x0333AFC8 ADRP X8, 0xDEE000
	0x0333AFCC LDR X8, [X8 + 0x3C8]
	0x0333AFD0 LDR X1, [X8]
	0x0333AFD4 LDR X8, [X0]
	0x0333AFD8 CMP X8, X1
	0x0333AFDC B.NE 0x333AFF4
	0x0333AFE0 LDP X20, X19, [X31 + 0x10]
	0x0333AFE4 STRB W31, [X0 + 0xD0]
	0x0333AFE8 LDR X30, [X31], #0x20
	0x0333AFEC RET
	0x0333AFF0 BL 0x1C16F20
	0x0333AFF4 BL 0x1C171E0
	0x0333AFF8 LDR W0, [X0 + 0xB0]
	0x0333AFFC RET
	0x0333B000 LDR X0, [X0 + 0x50]
	0x0333B004 RET
	0x0333B008 LDRB W0, [X0 + 0xD0]
	0x0333B00C RET
	0x0333B010 STR X30, [X31 - 0x20]!
	0x0333B014 STP X20, X19, [X31 + 0x10]
	0x0333B018 ADRP X20, 0x10A1000
	0x0333B01C LDRB W8, [X20 + 0xD27]
	0x0333B020 MOV X19, X0
	0x0333B024 TBNZ X8, 0x0, 0x333B03C
	0x0333B028 ADRP X0, 0xDB9000
	0x0333B02C LDR X0, [X0 + 0xE58]
	0x0333B030 BL 0x1C16CF4
	0x0333B034 MOVZ W8, 0x1
	0x0333B038 STRB W8, [X20 + 0xD27]
	0x0333B03C LDR X0, [X19 + 0x18]
	0x0333B040 CBZ X0, 0x333B078
	0x0333B044 MOV X1, X31
	0x0333B048 BL 0x33A01F0
	0x0333B04C CBZ X0, 0x333B06C
	0x0333B050 ADRP X8, 0xDB9000
	0x0333B054 LDR X8, [X8 + 0xE58]
	0x0333B058 MOV X19, X0
	0x0333B05C LDR X20, [X8]
	0x0333B060 MOV X1, X20
	0x0333B064 BL 0x1C16E00
	0x0333B068 CBZ X0, 0x333B07C
	0x0333B06C LDP X20, X19, [X31 + 0x10]
	0x0333B070 LDR X30, [X31], #0x20
	0x0333B074 RET
	0x0333B078 BL 0x1C16F20
	0x0333B07C MOV X0, X19
	0x0333B080 MOV X1, X20
	0x0333B084 BL 0x1C171E0
	0x0333B088 STR X30, [X31 - 0x20]!
	0x0333B08C STP X20, X19, [X31 + 0x10]
	0x0333B090 ADRP X20, 0x10A1000
	0x0333B094 LDRB W8, [X20 + 0xD28]
	0x0333B098 MOV X19, X0
	0x0333B09C TBNZ X8, 0x0, 0x333B0B4
	0x0333B0A0 ADRP X0, 0xDB9000
	0x0333B0A4 LDR X0, [X0 + 0xE58]
	0x0333B0A8 BL 0x1C16CF4
	0x0333B0AC MOVZ W8, 0x1
	0x0333B0B0 STRB W8, [X20 + 0xD28]
	0x0333B0B4 LDR X0, [X19 + 0x10]
	0x0333B0B8 CBZ X0, 0x333B0F0
	0x0333B0BC MOV X1, X31
	0x0333B0C0 BL 0x33A01F0
	0x0333B0C4 CBZ X0, 0x333B0E4
	0x0333B0C8 ADRP X8, 0xDB9000
	0x0333B0CC LDR X8, [X8 + 0xE58]
	0x0333B0D0 MOV X19, X0
	0x0333B0D4 LDR X20, [X8]
	0x0333B0D8 MOV X1, X20
	0x0333B0DC BL 0x1C16E00
	0x0333B0E0 CBZ X0, 0x333B0F4
	0x0333B0E4 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X8, [X0+32]
	010 Compare X8, 0
	011 JumpIfEqual {28}
	012 Move W8, [X8+16]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X20, [X31+48]
	015 Move X19, [X31+56]
	016 Move X22, [X31+32]
	017 Move X21, [X31+40]
	018 Move X30, [X31+16]
	019 Move X23, [X31+24]
	020 Move W0, W1
	021 Add X31, X31, 64
	022 Return X0
	023 Move X0, 0xDED000
	024 Move X0, [X0+3368]
	025 Call 0x1C17D08
	026 Move X1, X31
	027 Call Environment.GetResourceString, X0
	028 Call 0x1C17F20
	029 Move X8, 0xDBB000
	030 Move X8, [X8+3144]
	031 Move X22, X0
	032 Move X0, X8
	033 Call 0x1C17D08
	034 Call 0x19913D0
	035 Call CultureInfo.get_CurrentCulture
	036 Move X19, X0
	037 Move X0, 0xDE8000
	038 Move X0, [X0+880]
	039 Call 0x1C17D08
	040 Move X1, X31
	041 Call Environment.GetResourceString, X0
	042 Move W8, 1
	043 Move [X31+12], W8
	044 Move X21, 0xDB9000
	045 Move X21, [X21+1880]
	046 Move X20, X0
	047 Move X0, X21
	048 Call 0x1C17D08
	049 Add X1, X31, 12
	050 Call 0x1C17E04
	051 Move X22, [X22+32]
	052 Move X23, X0
	053 Move X0, X22
	054 Call 0x19913C0
	055 Move W8, [X22+16]
	056 Move X0, X21
	057 Move [X31+8], W8
	058 Call 0x1C17D08
	059 Add X1, X31, 8
	060 Call 0x1C17E04
	061 Move X3, X0
	062 Move X0, X19
	063 Move X1, X20
	064 Move X2, X23
	065 Move X4, X31
	066 Call String.Format, X0, X1, X2, X3
	067 Move X19, X0
	068 Move X0, 0xDC1000
	069 Move X0, [X0+1888]
	070 Call 0x1C17D08
	071 Call 0x1C17F10
	072 Move X20, X0
	073 Move X0, 0xDEE000
	074 Move X0, [X0+1448]
	075 Call 0x1C17D08
	076 Move X1, X0
	077 Move X0, X20
	078 Move X2, X19
	079 Move X3, X31
	080 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	081 Move X0, 0xDEE000
	082 Move X0, [X0+2632]
	083 Call 0x1C17D08
	084 Move X1, X0
	085 Move X0, X20
	086 Call 0x1C17DEC

Method: System.Int32[] get_Eras()

Disassembly:
	0x0333B0E8 LDR X30, [X31], #0x20
	0x0333B0EC RET
	0x0333B0F0 BL 0x1C16F20
	0x0333B0F4 MOV X0, X19
	0x0333B0F8 MOV X1, X20
	0x0333B0FC BL 0x1C171E0
	0x0333B100 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call GregorianCalendarHelper.get_Eras, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.String[] EraNames()

Disassembly:
	0x0333B104 STP X20, X19, [X31 + 0x10]
	0x0333B108 ADRP X20, 0x10A1000
	0x0333B10C LDRB W8, [X20 + 0xD29]
	0x0333B110 MOV X19, X0
	0x0333B114 TBNZ X8, 0x0, 0x333B12C
	0x0333B118 ADRP X0, 0xDB9000
	0x0333B11C LDR X0, [X0 + 0xE58]
	0x0333B120 BL 0x1C16CF4
	0x0333B124 MOVZ W8, 0x1
	0x0333B128 STRB W8, [X20 + 0xD29]
	0x0333B12C LDR X0, [X19 + 0x20]
	0x0333B130 CBZ X0, 0x333B168
	0x0333B134 MOV X1, X31
	0x0333B138 BL 0x33A01F0
	0x0333B13C CBZ X0, 0x333B15C
	0x0333B140 ADRP X8, 0xDB9000
	0x0333B144 LDR X8, [X8 + 0xE58]
	0x0333B148 MOV X19, X0
	0x0333B14C LDR X20, [X8]
	0x0333B150 MOV X1, X20
	0x0333B154 BL 0x1C16E00
	0x0333B158 CBZ X0, 0x333B16C
	0x0333B15C LDP X20, X19, [X31 + 0x10]
	0x0333B160 LDR X30, [X31], #0x20
	0x0333B164 RET
	0x0333B168 BL 0x1C16F20
	0x0333B16C MOV X0, X19
	0x0333B170 MOV X1, X20
	0x0333B174 BL 0x1C171E0
	0x0333B178 LDR X0, [X0 + 0x48]
	0x0333B17C RET
	0x0333B180 LDR X0, [X0 + 0x58]
	0x0333B184 RET
	0x0333B188 LDR X0, [X0 + 0x68]
	0x0333B18C RET
	0x0333B190 STR X30, [X31 - 0x20]!
	0x0333B194 STP X20, X19, [X31 + 0x10]
	0x0333B198 CBZ X1, 0x333B1B8
	0x0333B19C MOV X19, X1
	0x0333B1A0 MOV X20, X0
	0x0333B1A4 BL 0x333AB0C
	0x0333B1A8 STR X19, [X20 + 0x68]
	0x0333B1AC LDP X20, X19, [X31 + 0x10]
	0x0333B1B0 LDR X30, [X31], #0x20
	0x0333B1B4 RET
	0x0333B1B8 ADRP X0, 0xDE7000
	0x0333B1BC LDR X0, [X0 + 0xA78]
	0x0333B1C0 BL 0x1C16D08
	0x0333B1C4 MOV X1, X31
	0x0333B1C8 BL 0x33BDD84
	0x0333B1CC MOV X19, X0
	0x0333B1D0 ADRP X0, 0xDBD000
	0x0333B1D4 LDR X0, [X0 + 0x528]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x10A2000
	005 Move X20, 0xDEE000
	006 Move W8, [X19+3360]
	007 Move X20, [X20+1032]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xDEE000
	013 Move X0, [X0+1032]
	014 Call 0x1C17CF4
	015 Move X0, 0xDB9000
	016 Move X0, [X0+2760]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+3360], W8
	020 Move X0, [X20]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Call JapaneseCalendar.GetEraInfo
	026 Compare X0, 0
	027 JumpIfEqual {57}
	028 Move X8, 0xDB9000
	029 Move X8, [X8+2760]
	030 Move X19, X0
	031 Move W1, [X19+24]
	032 Move X0, [X8]
	033 Call 0x1C17D6C
	034 Move X8, [X19+24]
	035 Subtract W9, W8, 1
	036 Move X10, X31
	037 Move X11, W8
	038 Add X12, X0, 32
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X13, X19, W9
	041 Move X13, [X13+32]
	042 Compare X13, 0
	043 JumpIfEqual {57}
	044 Compare X0, 0
	045 JumpIfEqual {57}
	046 Move W14, [X0+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X13, [X13+48]
	049 Subtract W9, W9, 1
	050 Move [X12], X13
	051 Add X10, X10, 1
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Return X0
	057 Call 0x1C17F20
	058 Call 0x1C17F28

Method: System.String[] EnglishEraNames()

Disassembly:
	0x0333B1D8 BL 0x1C16D08
	0x0333B1DC BL 0x1C16F10
	0x0333B1E0 MOV X20, X0
	0x0333B1E4 ADRP X0, 0xDED000
	0x0333B1E8 LDR X0, [X0 + 0xAA0]
	0x0333B1EC BL 0x1C16D08
	0x0333B1F0 MOV X1, X0
	0x0333B1F4 MOV X0, X20
	0x0333B1F8 MOV X2, X19
	0x0333B1FC MOV X3, X31
	0x0333B200 BL 0x3315F7C
	0x0333B204 ADRP X0, 0xDED000
	0x0333B208 LDR X0, [X0 + 0xAA8]
	0x0333B20C BL 0x1C16D08
	0x0333B210 MOV X1, X0
	0x0333B214 MOV X0, X20
	0x0333B218 BL 0x1C16DEC
	0x0333B21C LDR W0, [X0 + 0xB8]
	0x0333B220 RET
	0x0333B224 LDR W0, [X0 + 0xBC]
	0x0333B228 RET
	0x0333B22C LDR W0, [X0 + 0xC0]
	0x0333B230 RET
	0x0333B234 LDR W0, [X0 + 0xC4]
	0x0333B238 RET
	0x0333B23C LDR X0, [X0 + 0x78]
	0x0333B240 RET
	0x0333B244 LDR X0, [X0 + 0x30]
	0x0333B248 RET
	0x0333B24C LDR W0, [X0 + 0xAC]
	0x0333B250 RET
	0x0333B254 LDR X0, [X0 + 0x38]
	0x0333B258 RET
	0x0333B25C LDR X0, [X0 + 0x40]
	0x0333B260 RET
	0x0333B264 LDR W0, [X0 + 0xB4]
	0x0333B268 RET
	0x0333B26C LDR X0, [X0 + 0x70]
	0x0333B270 RET
	0x0333B274 LDR X0, [X0 + 0x28]
	0x0333B278 RET
	0x0333B27C LDR W0, [X0 + 0xC8]
	0x0333B280 RET
	0x0333B284 LDR X0, [X0 + 0x80]
	0x0333B288 RET
	0x0333B28C LDR X0, [X0 + 0x88]
	0x0333B290 RET
	0x0333B294 LDR X0, [X0 + 0x90]
	0x0333B298 RET
	0x0333B29C LDR X0, [X0 + 0x98]
	0x0333B2A0 RET
	0x0333B2A4 STP X30, X23, [X31 - 0x30]!
	0x0333B2A8 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x10A2000
	005 Move X20, 0xDEE000
	006 Move W8, [X19+3361]
	007 Move X20, [X20+1032]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xDEE000
	013 Move X0, [X0+1032]
	014 Call 0x1C17CF4
	015 Move X0, 0xDB9000
	016 Move X0, [X0+2760]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+3361], W8
	020 Move X0, [X20]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Call JapaneseCalendar.GetEraInfo
	026 Compare X0, 0
	027 JumpIfEqual {57}
	028 Move X8, 0xDB9000
	029 Move X8, [X8+2760]
	030 Move X19, X0
	031 Move W1, [X19+24]
	032 Move X0, [X8]
	033 Call 0x1C17D6C
	034 Move X8, [X19+24]
	035 Subtract W9, W8, 1
	036 Move X10, X31
	037 Move X11, W8
	038 Add X12, X0, 32
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X13, X19, W9
	041 Move X13, [X13+32]
	042 Compare X13, 0
	043 JumpIfEqual {57}
	044 Compare X0, 0
	045 JumpIfEqual {57}
	046 Move W14, [X0+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X13, [X13+64]
	049 Subtract W9, W9, 1
	050 Move [X12], X13
	051 Add X10, X10, 1
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Return X0
	057 Call 0x1C17F20
	058 Call 0x1C17F28

Method: System.Boolean IsValidYear(System.Int32 year, System.Int32 era)

Disassembly:
	0x0333B2AC STP X20, X19, [X31 + 0x20]
	0x0333B2B0 ADRP X23, 0x10A1000
	0x0333B2B4 ADRP X21, 0xDED000
	0x0333B2B8 ADRP X22, 0xDB8000
	0x0333B2BC LDRB W8, [X23 + 0xD2B]
	0x0333B2C0 LDR X21, [X21 + 0xA98]
	0x0333B2C4 LDR X22, [X22 + 0x6C0]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X3, X31
	006 Move X30, [X31+16]
	007 Call GregorianCalendarHelper.IsValidYear, X0, X1, X2
	008 Return X0
	009 Call 0x1C17F20

Method: System.Int32 get_TwoDigitYearMax()

Disassembly:
	0x0333B2C8 MOV X20, X1
	0x0333B2CC MOV X19, X0
	0x0333B2D0 TBNZ X8, 0x0, 0x333B2F4
	0x0333B2D4 ADRP X0, 0xDED000
	0x0333B2D8 LDR X0, [X0 + 0xA98]
	0x0333B2DC BL 0x1C16CF4
	0x0333B2E0 ADRP X0, 0xDB8000
	0x0333B2E4 LDR X0, [X0 + 0x6C0]
	0x0333B2E8 BL 0x1C16CF4
	0x0333B2EC MOVZ W8, 0x1
	0x0333B2F0 STRB W8, [X23 + 0xD2B]
	0x0333B2F4 LDR X0, [X22]
	0x0333B2F8 LDR X21, [X21]
	0x0333B2FC LDR W8, [X0 + 0xE0]
	0x0333B300 CBNZ W8, 0x333B308

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move W0, [X0+24]
	005 Add W31, W0, 1
	006 Move X8, [X19]
	007 Move X0, X19
	008 Move X9, [X8+424]
	009 Move X1, [X8+432]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move W1, 99
	012 Move X2, X31
	013 Call Calendar.GetSystemTwoDigitYearSetting, X0, X1
	014 Move [X19+24], W0
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return X0

Method: System.Void set_TwoDigitYearMax(System.Int32 value)

Disassembly:
	0x0333B304 BL 0x1C16DFC
	0x0333B308 MOV X0, X21
	0x0333B30C MOV X1, X31
	0x0333B310 BL 0x338C698
	0x0333B314 MOV X1, X0
	0x0333B318 MOV X0, X20
	0x0333B31C MOV X2, X31
	0x0333B320 BL 0x3395194
	0x0333B324 ANDS W31, W0, 0x1
	0x0333B328 CSEL X0, X19, X31, NE
	0x0333B32C LDP X20, X19, [X31 + 0x20]
	0x0333B330 LDP X22, X21, [X31 + 0x10]
	0x0333B334 LDP X30, X23, [X31], #0x30
	0x0333B338 RET
	0x0333B33C STR X30, [X31 - 0x20]!
	0x0333B340 STP X20, X19, [X31 + 0x10]
	0x0333B344 CMP W0, 0x400
	0x0333B348 B.CS 0x333B368
	0x0333B34C TBZ X0, 0x9, 0x333B35C
	0x0333B350 MOVN W8, 0x203
	0x0333B354 AND W8, W0, W8, 0x0
	0x0333B358 CBNZ W8, 0x333B3B8
	0x0333B35C LDP X20, X19, [X31 + 0x10]
	0x0333B360 LDR X30, [X31], #0x20
	0x0333B364 RET
	0x0333B368 ADRP X0, 0xDED000
	0x0333B36C LDR X0, [X0 + 0xAB0]
	0x0333B370 BL 0x1C16D08
	0x0333B374 MOV X1, X31
	0x0333B378 BL 0x33BDD84
	0x0333B37C MOV X19, X0
	0x0333B380 ADRP X0, 0xDC0000
	0x0333B384 LDR X0, [X0 + 0x578]
	0x0333B388 BL 0x1C16D08
	0x0333B38C BL 0x1C16F10
	0x0333B390 MOV X20, X0
	0x0333B394 ADRP X0, 0xDED000
	0x0333B398 LDR X0, [X0 + 0xAB8]
	0x0333B39C BL 0x1C16D08
	0x0333B3A0 MOV X2, X0
	0x0333B3A4 MOV X0, X20
	0x0333B3A8 MOV X1, X19
	0x0333B3AC MOV X3, X31
	0x0333B3B0 BL 0x330E16C
	0x0333B3B4 B 0x333B3F0
	0x0333B3B8 ADRP X0, 0xDED000
	0x0333B3BC LDR X0, [X0 + 0xAC0]
	0x0333B3C0 BL 0x1C16D08
	0x0333B3C4 MOV X1, X31
	0x0333B3C8 BL 0x33BDD84
	0x0333B3CC MOV X19, X0
	0x0333B3D0 ADRP X0, 0xDC0000
	0x0333B3D4 LDR X0, [X0 + 0x578]
	0x0333B3D8 BL 0x1C16D08
	0x0333B3DC BL 0x1C16F10
	0x0333B3E0 MOV X1, X19
	0x0333B3E4 MOV X2, X31
	0x0333B3E8 MOV X20, X0
	0x0333B3EC BL 0x3314A68
	0x0333B3F0 ADRP X0, 0xDED000
	0x0333B3F4 LDR X0, [X0 + 0xAC8]
	0x0333B3F8 BL 0x1C16D08
	0x0333B3FC MOV X1, X0
	0x0333B400 MOV X0, X20
	0x0333B404 BL 0x1C16DEC
	0x0333B408 STR X30, [X31 - 0x20]!
	0x0333B40C STP X20, X19, [X31 + 0x10]
	0x0333B410 CMP W0, 0x400
	0x0333B414 B.CS 0x333B428
	0x0333B418 TBNZ X0, 0x9, 0x333B478
	0x0333B41C LDP X20, X19, [X31 + 0x10]
	0x0333B420 LDR X30, [X31], #0x20
	0x0333B424 RET
	0x0333B428 ADRP X0, 0xDED000
	0x0333B42C LDR X0, [X0 + 0xAB0]
	0x0333B430 BL 0x1C16D08
	0x0333B434 MOV X1, X31
	0x0333B438 BL 0x33BDD84

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move W20, W1
	009 Move X1, X31
	010 Move X19, X0
	011 Call Calendar.VerifyWritable, X0
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X8, [X19+32]
	014 Compare X8, 0
	015 JumpIfEqual {83}
	016 Move W8, [X8+16]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move [X19+24], W20
	019 Move X20, [X31+48]
	020 Move X19, [X31+56]
	021 Move X22, [X31+32]
	022 Move X21, [X31+40]
	023 Move X30, [X31+16]
	024 Move X23, [X31+24]
	025 Add X31, X31, 64
	026 Return 
	027 Move X0, 0xDBB000
	028 Move X0, [X0+3144]
	029 Call 0x1C17D08
	030 Call 0x19913D0
	031 Call CultureInfo.get_CurrentCulture
	032 Move X20, X0
	033 Move X0, 0xDE8000
	034 Move X0, [X0+880]
	035 Call 0x1C17D08
	036 Move X1, X31
	037 Call Environment.GetResourceString, X0
	038 Move W8, 99
	039 Move [X31+12], W8
	040 Move X22, 0xDB9000
	041 Move X22, [X22+1880]
	042 Move X21, X0
	043 Move X0, X22
	044 Call 0x1C17D08
	045 Add X1, X31, 12
	046 Call 0x1C17E04
	047 Move X19, [X19+32]
	048 Move X23, X0
	049 Move X0, X19
	050 Call 0x19913C0
	051 Move W8, [X19+16]
	052 Move X0, X22
	053 Move [X31+8], W8
	054 Call 0x1C17D08
	055 Add X1, X31, 8
	056 Call 0x1C17E04
	057 Move X3, X0
	058 Move X0, X20
	059 Move X1, X21
	060 Move X2, X23
	061 Move X4, X31
	062 Call String.Format, X0, X1, X2, X3
	063 Move X19, X0
	064 Move X0, 0xDC1000
	065 Move X0, [X0+1888]
	066 Call 0x1C17D08
	067 Call 0x1C17F10
	068 Move X20, X0
	069 Move X0, 0xDEE000
	070 Move X0, [X0+1448]
	071 Call 0x1C17D08
	072 Move X1, X0
	073 Move X0, X20
	074 Move X2, X19
	075 Move X3, X31
	076 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	077 Move X0, 0xDEE000
	078 Move X0, [X0+2640]
	079 Call 0x1C17D08
	080 Move X1, X0
	081 Move X0, X20
	082 Call 0x1C17DEC
	083 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x0333B43C MOV X19, X0
	0x0333B440 ADRP X0, 0xDC0000
	0x0333B444 LDR X0, [X0 + 0x578]
	0x0333B448 BL 0x1C16D08
	0x0333B44C BL 0x1C16F10
	0x0333B450 MOV X20, X0
	0x0333B454 ADRP X0, 0xDED000
	0x0333B458 LDR X0, [X0 + 0xAB8]
	0x0333B45C BL 0x1C16D08
	0x0333B460 MOV X2, X0
	0x0333B464 MOV X0, X20
	0x0333B468 MOV X1, X19
	0x0333B46C MOV X3, X31
	0x0333B470 BL 0x330E16C
	0x0333B474 B 0x333B4B0
	0x0333B478 ADRP X0, 0xDED000
	0x0333B47C LDR X0, [X0 + 0xAD0]
	0x0333B480 BL 0x1C16D08
	0x0333B484 MOV X1, X31
	0x0333B488 BL 0x33BDD84
	0x0333B48C MOV X19, X0
	0x0333B490 ADRP X0, 0xDC0000
	0x0333B494 LDR X0, [X0 + 0x578]
	0x0333B498 BL 0x1C16D08
	0x0333B49C BL 0x1C16F10
	0x0333B4A0 MOV X1, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10A2000
	005 Move X19, 0xDEE000
	006 Move W8, [X20+3362]
	007 Move X19, [X19+1032]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDEE000
	013 Move X0, [X0+1032]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3362], W8
	017 Add X0, X31, 8
	018 Move W1, 1868
	019 Move W2, 9
	020 Move W3, 8
	021 Move X4, X31
	022 Move [X31+8], X31
	023 Call DateTime..ctor, X0, X1, X2, X3
	024 Move X8, [X19]
	025 Move X9, [X31+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X8, [X8+184]
	029 Move [X8], X9
	030 Move X30, [X31+32]
	031 Return 

