Type: System.Globalization.TimeSpanFormat

Method: System.Void AppendNonNegativeInt32(System.Text.StringBuilder sb, System.Int32 n, System.Int32 digits)

Disassembly:
	0x0332C578 CMP W9, W10
	0x0332C57C B.CS 0x332C6FC
	0x0332C580 ADRP X10, 0xDC9000
	0x0332C584 LDR X10, [X10 + 0xC48]
	0x0332C588 ADD X8, X8, W9, 0x3, SXTW
	0x0332C58C LDR X19, [X8 + 0x20]
	0x0332C590 LDR X0, [X10]
	0x0332C594 B 0x332C634
	0x0332C598 LDR X0, [X20]
	0x0332C59C LDR W8, [X0 + 0xE0]
	0x0332C5A0 CBNZ W8, 0x332C5A8
	0x0332C5A4 BL 0x1C16DFC
	0x0332C5A8 MOV X0, X22
	0x0332C5AC MOV X1, X21
	0x0332C5B0 MOV W2, W26
	0x0332C5B4 MOV W3, W25
	0x0332C5B8 MOV X4, X31
	0x0332C5BC BL 0x33679B4
	0x0332C5C0 CMP W0, 0x2
	0x0332C5C4 B.GT 0x332C6A0
	0x0332C5C8 MOV W25, W0
	0x0332C5CC LDR X0, [X20]
	0x0332C5D0 LDR W8, [X0 + 0xE0]
	0x0332C5D4 CBNZ W8, 0x332C5DC
	0x0332C5D8 BL 0x1C16DFC
	0x0332C5DC LDR W1, [X31 + 0x8]
	0x0332C5E0 MOV X0, X24
	0x0332C5E4 MOV W2, W25
	0x0332C5E8 MOV X3, X31
	0x0332C5EC BL 0x33677D0
	0x0332C5F0 B 0x332C670
	0x0332C5F4 LDR X0, [X20]
	0x0332C5F8 LDR W8, [X0 + 0xE0]
	0x0332C5FC CBNZ W8, 0x332C608
	0x0332C600 BL 0x1C16DFC
	0x0332C604 LDR X0, [X20]
	0x0332C608 LDR X8, [X0 + 0xB8]
	0x0332C60C LDR X8, [X8 + 0x28]
	0x0332C610 CBZ X8, 0x332C700
	0x0332C614 LDR W9, [X8 + 0x18]
	0x0332C618 CMP W27, W9
	0x0332C61C B.CS 0x332C6FC
	0x0332C620 ADRP X9, 0xDC9000
	0x0332C624 LDR X9, [X9 + 0xC48]
	0x0332C628 LDR X19, [X8, X19, LSL]
	0x0332C62C MOV X27, X28
	0x0332C630 LDR X0, [X9]
	0x0332C634 LDR W9, [X0 + 0xE0]
	0x0332C638 CBNZ W9, 0x332C640
	0x0332C63C BL 0x1C16DFC
	0x0332C640 MOV X0, X31
	0x0332C644 BL 0x3338524
	0x0332C648 MOV X2, X0
	0x0332C64C ADD X0, X31, 0x38
	0x0332C650 MOV X1, X19
	0x0332C654 MOV X3, X31
	0x0332C658 BL 0x337CDE0
	0x0332C65C CBZ X24, 0x332C700
	0x0332C660 MOV X1, X0
	0x0332C664 MOV X0, X24
	0x0332C668 MOV X2, X31
	0x0332C66C BL 0x32333E0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 NotImplemented "Instruction MRS not yet implemented."
	008 Move X11, [X20+40]
	009 Move W9, 0xCCCD
	010 Move X19, X0
	011 Move W8, W31
	012 NotImplemented "Instruction MOVK not yet implemented."
	013 Move TEMP, 9
	014 Not TEMP
	015 Move W10, TEMP
	016 Move [X31+24], X11
	017 Add X11, X31, 0
	018 Move [X31], X31
	019 Move [X31+8], X31
	020 Move [X31+16], W31
	021 NotImplemented "Instruction UMADDL not yet implemented."
	022 Move X12, X12
	023 ShiftRight X12, 35
	024 And X12, X12, 0x7FFFFFFF
	025 NotImplemented "Instruction MADD not yet implemented."
	026 Add W21, W8, 1
	027 Add W13, W13, 48
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction STRH not yet implemented."
	030 Move W8, W21
	031 Move W1, W12
	032 Subtract W8, W2, W21
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Compare X19, 0
	035 JumpIfEqual {70}
	036 Add W22, W8, 1
	037 Move W1, 48
	038 Move X0, X19
	039 Move X2, X31
	040 Call StringBuilder.Append, X0, X1
	041 Subtract W22, W22, 1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract W8, W21, 1
	044 Move TEMP, X8
	045 And TEMP, TEMP, -2147483648
	046 Compare TEMP, -2147483648
	047 JumpIfEqual {60}
	048 Compare X19, 0
	049 JumpIfEqual {70}
	050 Move W9, W8
	051 Add X10, X31, 0
	052 Add X21, X9, 1
	053 Add X22, X10, W8
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Move X0, X19
	056 Move X2, X31
	057 Call StringBuilder.Append, X0, X1
	058 Subtract X21, X21, 1
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X8, [X20+40]
	061 Move X9, [X31+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X20, [X31+64]
	064 Move X19, [X31+72]
	065 Move X22, [X31+48]
	066 Move X21, [X31+56]
	067 Move X30, [X31+32]
	068 Add X31, X31, 80
	069 Return 
	070 Call 0x1C17F20
	071 Call 0x3EB2B20

Method: System.String Format(System.TimeSpan value, System.String format, System.IFormatProvider formatProvider)

Disassembly:
	0x0332C670 ADD W26, W25, W26
	0x0332C674 CMP W26, W21
	0x0332C678 B.LT 0x332C1F8
	0x0332C67C MOV X0, X24
	0x0332C680 LDP X20, X19, [X31 + 0x90]
	0x0332C684 LDP X22, X21, [X31 + 0x80]
	0x0332C688 LDP X24, X23, [X31 + 0x70]
	0x0332C68C LDP X26, X25, [X31 + 0x60]
	0x0332C690 LDP X28, X27, [X31 + 0x50]
	0x0332C694 LDP X29, X30, [X31 + 0x40]
	0x0332C698 ADD X31, X31, 0xA0
	0x0332C69C RET
	0x0332C6A0 LDR X8, [X31]
	0x0332C6A4 CBNZ X8, 0x332C6B4
	0x0332C6A8 MOV X0, X24
	0x0332C6AC MOV X1, X31
	0x0332C6B0 BL 0x3235B68
	0x0332C6B4 ADRP X0, 0xDF4000
	0x0332C6B8 LDR X0, [X0 + 0xC08]
	0x0332C6BC BL 0x1C16D08
	0x0332C6C0 BL 0x1C16F10
	0x0332C6C4 MOV X19, X0
	0x0332C6C8 ADRP X0, 0xDF6000
	0x0332C6CC LDR X0, [X0 + 0x618]
	0x0332C6D0 BL 0x1C16D08
	0x0332C6D4 MOV X1, X0
	0x0332C6D8 MOV X0, X19
	0x0332C6DC MOV X2, X31
	0x0332C6E0 BL 0x33674A0
	0x0332C6E4 ADRP X0, 0xDFC000
	0x0332C6E8 LDR X0, [X0 + 0x550]
	0x0332C6EC BL 0x1C16D08
	0x0332C6F0 MOV X1, X0
	0x0332C6F4 MOV X0, X19
	0x0332C6F8 BL 0x1C16DEC
	0x0332C6FC BL 0x1C16F28
	0x0332C700 BL 0x1C16F20
	0x0332C704 STP X29, X30, [X31 - 0x60]!
	0x0332C708 STP X28, X27, [X31 + 0x10]
	0x0332C70C STP X26, X25, [X31 + 0x20]
	0x0332C710 STP X24, X23, [X31 + 0x30]
	0x0332C714 STP X22, X21, [X31 + 0x40]
	0x0332C718 STP X20, X19, [X31 + 0x50]
	0x0332C71C ADRP X24, 0x10B0000
	0x0332C720 ADRP X23, 0xDC7000
	0x0332C724 LDRB W8, [X24 + 0xCBD]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x10B1000
	008 Move W8, [X22+3254]
	009 Move X19, X2
	010 Move X21, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDFD000
	017 Move X0, [X0+1328]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3254], W8
	021 Move X22, 0x10AE000
	022 Move W8, [X22+1890]
	023 Compare W8, 0
	024 JumpIfNotEqual {30}
	025 Move X0, 0xDEF000
	026 Move X0, [X0+656]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+1890], W8
	030 Move X23, 0xDFD000
	031 Move X23, [X23+1328]
	032 Compare X21, 0
	033 JumpIfEqual {39}
	034 Move X0, X21
	035 Move X1, X31
	036 Call String.GetRawStringData, X0
	037 Move W21, [X21+16]
	038 Move X22, X0
	039 Move X22, X31
	040 Move X0, [X23]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X20
	046 Move X1, X22
	047 Move X2, X21
	048 Move X3, X19
	049 Call TimeSpanFormat.FormatToBuilder, X0, X1, X2
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X1, X31
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 Call StringBuilderCache.GetStringAndRelease, X0
	058 Return X0

Method: System.Boolean TryFormat(System.TimeSpan value, System.Span`1<System.Char> destination, out System.Int32 charsWritten, System.ReadOnlySpan`1<System.Char> format, System.IFormatProvider formatProvider)

Disassembly:
	0x0332CA00 CMP W8, 0x2
	0x0332CA04 B.CC 0x332CA10
	0x0332CA08 MOVZ W8, 0x2
	0x0332CA0C STR W8, [X19 + 0xC]
	0x0332CA10 LDR W8, [X19 + 0x10]
	0x0332CA14 SUB W8, W8, 0x1
	0x0332CA18 CMP W8, 0x2
	0x0332CA1C B.CC 0x332CA28
	0x0332CA20 MOVZ W8, 0x2
	0x0332CA24 STR W8, [X19 + 0x10]
	0x0332CA28 LDR W8, [X19 + 0x14]
	0x0332CA2C SUB W8, W8, 0x1
	0x0332CA30 CMP W8, 0x2
	0x0332CA34 B.CC 0x332CA40
	0x0332CA38 MOVZ W8, 0x2
	0x0332CA3C STR W8, [X19 + 0x14]
	0x0332CA40 LDR W8, [X19 + 0x18]
	0x0332CA44 SUB W8, W8, 0x1
	0x0332CA48 CMP W8, 0x7
	0x0332CA4C B.CC 0x332CA58
	0x0332CA50 MOVZ W8, 0x7
	0x0332CA54 STR W8, [X19 + 0x18]
	0x0332CA58 MOV X0, X23
	0x0332CA5C LDP X20, X19, [X31 + 0x50]
	0x0332CA60 LDP X22, X21, [X31 + 0x40]
	0x0332CA64 LDP X24, X23, [X31 + 0x30]
	0x0332CA68 LDP X26, X25, [X31 + 0x20]
	0x0332CA6C LDP X28, X27, [X31 + 0x10]
	0x0332CA70 MOV X1, X31
	0x0332CA74 LDP X29, X30, [X31], #0x60
	0x0332CA78 B 0x3235B68
	0x0332CA7C BL 0x1C16F28
	0x0332CA80 STR X30, [X31 - 0x20]!
	0x0332CA84 STP X20, X19, [X31 + 0x10]
	0x0332CA88 ADRP X20, 0x10B0000
	0x0332CA8C LDRB W8, [X20 + 0xCBE]
	0x0332CA90 MOV W19, W0
	0x0332CA94 TBNZ X8, 0x0, 0x332CAAC
	0x0332CA98 ADRP X0, 0xDC7000
	0x0332CA9C LDR X0, [X0 + 0x5A8]
	0x0332CAA0 BL 0x1C16CF4
	0x0332CAA4 MOVZ W8, 0x1
	0x0332CAA8 STRB W8, [X20 + 0xCBE]
	0x0332CAAC CMP W19, 0x8
	0x0332CAB0 B.CS 0x332CAC4
	0x0332CAB4 ADRP X8, 0xFFFFFFFFFD86A000
	0x0332CAB8 ADD X8, X8, 0x6F0
	0x0332CABC LDR X0, [X8, W19, SXTW]
	0x0332CAC0 B 0x332CB04
	0x0332CAC4 ADRP X8, 0xDC7000
	0x0332CAC8 LDR X8, [X8 + 0x5A8]
	0x0332CACC LDR X0, [X8]
	0x0332CAD0 LDR W8, [X0 + 0xE0]
	0x0332CAD4 CBNZ W8, 0x332CADC
	0x0332CAD8 BL 0x1C16DFC
	0x0332CADC SCVTF D1, W19
	0x0332CAE0 FMOV D0, 8.000000000465661
	0x0332CAE4 MOV X0, X31
	0x0332CAE8 BL 0x337F438
	0x0332CAEC MOVZ X8, 0x7FF00000
	0x0332CAF0 FMOV D1, X8
	0x0332CAF4 FCVTZS X9, D0
	0x0332CAF8 FCMP D0, D1
	0x0332CAFC MOVZ X8, 0x80000000
	0x0332CB00 CSEL X0, X8, X9, EQ
	0x0332CB04 LDP X20, X19, [X31 + 0x10]
	0x0332CB08 LDR X30, [X31], #0x20
	0x0332CB0C RET
	0x0332CB10 STR X30, [X31 - 0x10]!
	0x0332CB14 LDR X8, [X0 + 0x20]
	0x0332CB18 CBZ X8, 0x332CB30
	0x0332CB1C LDR W9, [X8 + 0x18]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x10B1000
	012 Move X26, 0xDFD000
	013 Move W8, [X27+3255]
	014 Move X26, [X26+1328]
	015 Move X22, X6
	016 Move X23, X5
	017 Move X24, X4
	018 Move X21, X3
	019 Move X19, X2
	020 Move X20, X1
	021 Move X25, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0xDF7000
	027 Move X0, [X0+1416]
	028 Call 0x1C17CF4
	029 Move X0, 0xDFD000
	030 Move X0, [X0+1328]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X27+3255], W8
	034 Move X0, [X26]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X25
	040 Move X1, X24
	041 Move X2, X23
	042 Move X3, X22
	043 Call TimeSpanFormat.FormatToBuilder, X0, X1, X2
	044 Compare X0, 0
	045 JumpIfEqual {85}
	046 Move X1, X31
	047 Move X22, X0
	048 Call StringBuilder.get_Length, X0
	049 Move W23, W0
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, X22
	052 Move X1, X31
	053 Call StringBuilderCache.Release, X0
	054 Move [X21], W31
	055 Move X0, X22
	056 Move X1, X31
	057 Call StringBuilder.get_Length, X0
	058 Move [X21], W0
	059 Move X0, X22
	060 Move X1, X31
	061 Call StringBuilder.get_Length, X0
	062 Move W4, W0
	063 Move X0, X22
	064 Move W1, W31
	065 Move X2, X20
	066 Move X3, X19
	067 Move X5, X31
	068 Call StringBuilder.CopyTo, X0, X1, X2, X3
	069 Move X0, X22
	070 Move X1, X31
	071 Call StringBuilderCache.Release, X0
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X20, [X31+64]
	074 Move X19, [X31+72]
	075 Move X22, [X31+48]
	076 Move X21, [X31+56]
	077 Move X24, [X31+32]
	078 Move X23, [X31+40]
	079 Move X26, [X31+16]
	080 Move X25, [X31+24]
	081 NotImplemented "Instruction CSET not yet implemented."
	082 Move X30, [X31+80]
	083 Move X27, [X31+88]
	084 Return X0
	085 Call 0x1C17F20

Method: System.Text.StringBuilder FormatToBuilder(System.TimeSpan value, System.ReadOnlySpan`1<System.Char> format, System.IFormatProvider formatProvider)

Disassembly:
	0x0332C728 LDR X23, [X23 + 0xAC8]
	0x0332C72C MOV W20, W3
	0x0332C730 MOV X21, X2
	0x0332C734 MOV X22, X1
	0x0332C738 MOV X19, X0
	0x0332C73C TBNZ X8, 0x0, 0x332C76C
	0x0332C740 ADRP X0, 0xDF6000
	0x0332C744 LDR X0, [X0 + 0x28]
	0x0332C748 BL 0x1C16CF4
	0x0332C74C ADRP X0, 0xDC7000
	0x0332C750 LDR X0, [X0 + 0xAC8]
	0x0332C754 BL 0x1C16CF4
	0x0332C758 ADRP X0, 0xDC9000
	0x0332C75C LDR X0, [X0 + 0x278]
	0x0332C760 BL 0x1C16CF4
	0x0332C764 MOVZ W8, 0x1
	0x0332C768 STRB W8, [X24 + 0xCBD]
	0x0332C76C MOV X24, X19
	0x0332C770 STR X31, [X24 + 0x8]!
	0x0332C774 STR X31, [X24 + 0x8]
	0x0332C778 STR W31, [X24 + 0x10]
	0x0332C77C LDR X0, [X23]
	0x0332C780 MOVZ W1, 0x6
	0x0332C784 BL 0x1C16D6C
	0x0332C788 STR X0, [X24 + 0x18]
	0x0332C78C CBZ X0, 0x332C7D0
	0x0332C790 ADRP X9, 0xDC9000
	0x0332C794 LDR X9, [X9 + 0x278]
	0x0332C798 MOV X8, X31
	0x0332C79C LDR W10, [X0 + 0x18]
	0x0332C7A0 CMP X8, W10, SXTW
	0x0332C7A4 B.GE 0x332C7D4
	0x0332C7A8 CMP X8, X10
	0x0332C7AC B.CS 0x332CA7C
	0x0332C7B0 LDR X10, [X9]
	0x0332C7B4 ADD X11, X0, X8, 0x3, LSL
	0x0332C7B8 ADD X8, X8, 0x1
	0x0332C7BC LDR X10, [X10 + 0xB8]
	0x0332C7C0 LDR X10, [X10]
	0x0332C7C4 STR X10, [X11 + 0x20]
	0x0332C7C8 LDR X0, [X19 + 0x20]
	0x0332C7CC CBNZ X0, 0x332C79C
	0x0332C7D0 BL 0x1C16F20
	0x0332C7D4 MOVZ W0, 0x10
	0x0332C7D8 MOV X1, X31
	0x0332C7DC BL 0x3235A9C
	0x0332C7E0 CMP W21, 0x1
	0x0332C7E4 MOV X23, X0
	0x0332C7E8 B.LT 0x332C9A8
	0x0332C7EC ADRP X26, 0xFFFFFFFFFD86A000
	0x0332C7F0 MOV W28, W31
	0x0332C7F4 MOV W27, W31
	0x0332C7F8 MOV W25, W31
	0x0332C7FC MOVZ W29, 0x27
	0x0332C800 ADD X26, X26, 0x6B0
	0x0332C804 CMP W25, W21
	0x0332C808 B.CS 0x332CA7C
	0x0332C80C LDRH W1, [X22, W25, SXTW]
	0x0332C810 CMP W1, 0x46
	0x0332C814 B.HI 0x332C82C
	0x0332C818 CMP W1, 0x25
	0x0332C81C B.HI 0x332C870
	0x0332C820 CMP W1, 0x22
	0x0332C824 B.NE 0x332C8C8
	0x0332C828 B 0x332C8DC
	0x0332C82C CMP W1, 0x68
	0x0332C830 B.HI 0x332C89C
	0x0332C834 SUB W9, W1, 0x5C
	0x0332C838 UBFM W8, W9, 0x1, 0xF
	0x0332C83C BFM W8, W9, 0x11, 0x10
	0x0332C840 AND W9, W8, 0xFFFF
	0x0332C844 CMP W9, 0x6
	0x0332C848 B.HI 0x332C8C8
	0x0332C84C AND X8, X8, 0xFFFF
	0x0332C850 ADR X9, 0x10
	0x0332C854 LDRB W10, [X26, X8, LSL]
	0x0332C858 ADD X9, X9, X10, 0x2, LSL
	0x0332C85C BR X9
	0x0332C860 TBNZ X28, 0x0, 0x332C8C8
	0x0332C864 MOV W28, W31
	0x0332C868 ADD W25, W25, 0x1
	0x0332C86C B 0x332C978
	0x0332C870 CMP W1, 0x27
	0x0332C874 B.EQ 0x332C8DC
	0x0332C878 CMP W1, 0x46
	0x0332C87C B.NE 0x332C8C8
	0x0332C880 TBNZ X28, 0x0, 0x332C974
	0x0332C884 LDR W8, [X19 + 0x18]
	0x0332C888 MOV W28, W31
	0x0332C88C MOVZ W27, 0x5
	0x0332C890 ADD W8, W8, 0x1
	0x0332C894 STR W8, [X19 + 0x18]
	0x0332C898 B 0x332C978
	0x0332C89C CMP W1, 0x6D
	0x0332C8A0 B.EQ 0x332C938
	0x0332C8A4 CMP W1, 0x73
	0x0332C8A8 B.NE 0x332C8C8
	0x0332C8AC TBNZ X28, 0x0, 0x332C974
	0x0332C8B0 LDR W8, [X19 + 0x14]
	0x0332C8B4 MOV W28, W31
	0x0332C8B8 MOVZ W27, 0x4
	0x0332C8BC ADD W8, W8, 0x1
	0x0332C8C0 STR W8, [X19 + 0x14]
	0x0332C8C4 B 0x332C978
	0x0332C8C8 CBZ X23, 0x332C7D0
	0x0332C8CC MOV X0, X23
	0x0332C8D0 MOV X2, X31
	0x0332C8D4 BL 0x3233D30
	0x0332C8D8 B 0x332C978
	0x0332C8DC TBZ X28, 0x0, 0x332C930
	0x0332C8E0 CMP W1, W29, UXTH
	0x0332C8E4 B.NE 0x332C974
	0x0332C8E8 CBZ X23, 0x332C7D0
	0x0332C8EC LDR X8, [X23]
	0x0332C8F0 LDR X28, [X19 + 0x20]
	0x0332C8F4 MOV X0, X23
	0x0332C8F8 LDP X9, X1, [X8 + 0x168]
	0x0332C8FC BLR X9
	0x0332C900 CBZ X28, 0x332C7D0
	0x0332C904 LDR W8, [X28 + 0x18]
	0x0332C908 CMP W27, W8
	0x0332C90C B.CS 0x332CA7C
	0x0332C910 ADD X8, X28, W27, 0x3, UXTW
	0x0332C914 STR X0, [X8 + 0x20]
	0x0332C918 MOV X0, X23
	0x0332C91C MOV W1, W31
	0x0332C920 MOV X2, X31
	0x0332C924 BL 0x3232ADC
	0x0332C928 MOV W28, W31
	0x0332C92C B 0x332C978
	0x0332C930 MOVZ W28, 0x1
	0x0332C934 B 0x332C97C
	0x0332C938 TBNZ X28, 0x0, 0x332C974
	0x0332C93C LDR W8, [X19 + 0x10]
	0x0332C940 MOV W28, W31
	0x0332C944 MOVZ W27, 0x3
	0x0332C948 ADD W8, W8, 0x1
	0x0332C94C STR W8, [X19 + 0x10]
	0x0332C950 B 0x332C978
	0x0332C954 TBNZ X28, 0x0, 0x332C974
	0x0332C958 LDR W8, [X24]
	0x0332C95C MOV W28, W31
	0x0332C960 MOVZ W27, 0x1
	0x0332C964 ADD W8, W8, 0x1
	0x0332C968 STR W8, [X24]
	0x0332C96C B 0x332C978
	0x0332C970 TBZ X28, 0x0, 0x332C990
	0x0332C974 MOVZ W28, 0x1
	0x0332C978 MOV W1, W29
	0x0332C97C ADD W25, W25, 0x1
	0x0332C980 CMP W25, W21
	0x0332C984 MOV W29, W1
	0x0332C988 B.LT 0x332C804
	0x0332C98C B 0x332C9A8
	0x0332C990 LDR W8, [X19 + 0xC]
	0x0332C994 MOV W28, W31
	0x0332C998 MOVZ W27, 0x2
	0x0332C99C ADD W8, W8, 0x1
	0x0332C9A0 STR W8, [X19 + 0xC]
	0x0332C9A4 B 0x332C978
	0x0332C9A8 MOV X0, X19
	0x0332C9AC BL 0x332CB90
	0x0332C9B0 MOV X21, X0
	0x0332C9B4 MOV X0, X19
	0x0332C9B8 BL 0x332CBBC
	0x0332C9BC MOV X1, X0
	0x0332C9C0 MOV X0, X21
	0x0332C9C4 MOV X2, X31
	0x0332C9C8 BL 0x321B938
	0x0332C9CC STR X0, [X19]
	0x0332C9D0 TBZ X20, 0x0, 0x332C9E0
	0x0332C9D4 MOVI V0.4S, 0x2
	0x0332C9D8 STR V0, [X24]
	0x0332C9DC B 0x332CA50
	0x0332C9E0 LDR W8, [X24]
	0x0332C9E4 SUB W8, W8, 0x1
	0x0332C9E8 CMP W8, 0x2
	0x0332C9EC B.CC 0x332C9F8
	0x0332C9F0 MOVZ W8, 0x2
	0x0332C9F4 STR W8, [X24]
	0x0332C9F8 LDR W8, [X19 + 0xC]
	0x0332C9FC SUB W8, W8, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x10B1000
	009 Move W8, [X23+3256]
	010 Move X21, X3
	011 Move X22, X2
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0xDFD000
	019 Move X0, [X0+808]
	020 Call 0x1C17CF4
	021 Move X0, 0xDF7000
	022 Move X0, [X0+40]
	023 Call 0x1C17CF4
	024 Move X0, 0xDFD000
	025 Move X0, [X0+1328]
	026 Call 0x1C17CF4
	027 Move X0, 0xDCA000
	028 Move X0, [X0+1392]
	029 Call 0x1C17CF4
	030 Move X0, 0xDFD000
	031 Move X0, [X0+1336]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+3256], W8
	035 Move X24, 0xDFD000
	036 Move X23, 0xDFD000
	037 Move X24, [X24+808]
	038 Move X23, [X23+1328]
	039 Compare W22, 0
	040 JumpIfEqual {44}
	041 Move X8, X22
	042 ShiftRight X8, 32
	043 And X8, X8, 0x7FFFFFFF
	044 Move X8, 0xDFD000
	045 Move X8, [X8+1336]
	046 Move X20, 0x10AE000
	047 Move W9, [X20+1890]
	048 Move X22, [X8]
	049 Compare W9, 0
	050 JumpIfEqual {103}
	051 Compare X22, 0
	052 JumpIfEqual {110}
	053 Move X0, X22
	054 Move X1, X31
	055 Call String.GetRawStringData, X0
	056 Move W22, [X22+16]
	057 Move X20, X0
	058 Move W8, W31
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, [X23]
	068 Move W21, 1
	069 NotImplemented "Instruction BFM not yet implemented."
	070 Move W9, [X0+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move W1, 1
	075 Move W4, 1
	076 Move X0, X19
	077 Move X2, X20
	078 Move X3, X21
	079 Move X0, [X24]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X0, X21
	085 Call DateTimeFormatInfo.GetInstance, X0
	086 Move X8, 0xDCA000
	087 Move X8, [X8+1392]
	088 Move X20, X0
	089 Move X8, [X8]
	090 Move W9, [X8+224]
	091 Compare W9, 0
	092 JumpIfNotEqual {95}
	093 Move X0, X8
	094 Call 0x1C17DFC
	095 Compare X20, 0
	096 JumpIfEqual {203}
	097 Move X0, X20
	098 Move TEMP, X19
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {142}
	102 Call DateTimeFormatInfo.get_FullTimeSpanPositivePattern, X0
	103 Move X0, 0xDEF000
	104 Move X0, [X0+656]
	105 Call 0x1C17CF4
	106 Move W8, 1
	107 Move [X20+1890], W8
	108 Compare X22, 0
	109 JumpIfNotEqual {53}
	110 Move X20, X31
	111 Move W8, W31
	112 Move X0, [X24]
	113 Move W22, W22
	114 NotImplemented "Instruction BFM not yet implemented."
	115 Move W9, [X0+224]
	116 Compare W9, 0
	117 JumpIfNotEqual {119}
	118 Call 0x1C17DFC
	119 Move X0, X21
	120 Call DateTimeFormatInfo.GetInstance, X0
	121 Move X8, [X23]
	122 Move X21, X0
	123 Move W9, [X8+224]
	124 Compare W9, 0
	125 JumpIfNotEqual {128}
	126 Move X0, X8
	127 Call 0x1C17DFC
	128 Move X0, X19
	129 Move X1, X20
	130 Move X2, X22
	131 Move X3, X21
	132 Move X20, [X31+48]
	133 Move X19, [X31+56]
	134 Move X22, [X31+32]
	135 Move X21, [X31+40]
	136 Move X24, [X31+16]
	137 Move X23, [X31+24]
	138 Move X4, X31
	139 Move X30, [X31+64]
	140 Call TimeSpanFormat.FormatCustomized, X0, X1, X2, X3
	141 Return X0
	142 Call DateTimeFormatInfo.get_FullTimeSpanNegativePattern, X0
	143 Move X21, 0x10AE000
	144 Move W8, [X21+1890]
	145 Move X20, X0
	146 Compare W8, 0
	147 JumpIfEqual {155}
	148 Compare X20, 0
	149 JumpIfEqual {162}
	150 Move X0, X20
	151 Move X1, X31
	152 Call String.GetRawStringData, X0
	153 Move W20, [X20+16]
	154 Move X21, X0
	155 Move X0, 0xDEF000
	156 Move X0, [X0+656]
	157 Call 0x1C17CF4
	158 Move W8, 1
	159 Move [X21+1890], W8
	160 Compare X20, 0
	161 JumpIfNotEqual {150}
	162 Move X21, X31
	163 Move X0, [X23]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move W9, 1
	166 NotImplemented "Instruction CINC not yet implemented."
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {171}
	170 Call 0x1C17DFC
	171 Move X0, X19
	172 Move W1, W31
	173 Move X2, X21
	174 Move X3, X20
	175 Move W4, W22
	176 Move X20, [X31+48]
	177 Move X19, [X31+56]
	178 Move X22, [X31+32]
	179 Move X21, [X31+40]
	180 Move X24, [X31+16]
	181 Move X23, [X31+24]
	182 Move X30, [X31+64]
	183 Call TimeSpanFormat.FormatStandard, X0, X1, X2, X3
	184 Return X0
	185 Move X0, 0xDF5000
	186 Move X0, [X0+3080]
	187 Call 0x1C17D08
	188 Call 0x1C17F10
	189 Move X19, X0
	190 Move X0, 0xDF7000
	191 Move X0, [X0+1560]
	192 Call 0x1C17D08
	193 Move X1, X0
	194 Move X0, X19
	195 Move X2, X31
	196 Call FormatException..ctor, X0, X1
	197 Move X0, 0xDFD000
	198 Move X0, [X0+1344]
	199 Call 0x1C17D08
	200 Move X1, X0
	201 Move X0, X19
	202 Call 0x1C17DEC
	203 Call 0x1C17F20

Method: System.Text.StringBuilder FormatStandard(System.TimeSpan value, System.Boolean isInvariant, System.ReadOnlySpan`1<System.Char> format, System.Globalization.TimeSpanFormat/Pattern pattern)

Disassembly:
	0x0332CB20 CBZ W9, 0x332CB34
	0x0332CB24 LDR X0, [X8 + 0x20]
	0x0332CB28 LDR X30, [X31], #0x10
	0x0332CB2C RET
	0x0332CB30 BL 0x1C16F20
	0x0332CB34 BL 0x1C16F28
	0x0332CB38 STR X30, [X31 - 0x10]!
	0x0332CB3C LDR X8, [X0 + 0x20]
	0x0332CB40 CBZ X8, 0x332CB5C
	0x0332CB44 LDR W9, [X8 + 0x18]
	0x0332CB48 CMP W9, 0x1
	0x0332CB4C B.LS 0x332CB60
	0x0332CB50 LDR X0, [X8 + 0x28]
	0x0332CB54 LDR X30, [X31], #0x10
	0x0332CB58 RET
	0x0332CB5C BL 0x1C16F20
	0x0332CB60 BL 0x1C16F28
	0x0332CB64 STR X30, [X31 - 0x10]!
	0x0332CB68 LDR X8, [X0 + 0x20]
	0x0332CB6C CBZ X8, 0x332CB88
	0x0332CB70 LDR W9, [X8 + 0x18]
	0x0332CB74 CMP W9, 0x2
	0x0332CB78 B.LS 0x332CB8C
	0x0332CB7C LDR X0, [X8 + 0x30]
	0x0332CB80 LDR X30, [X31], #0x10
	0x0332CB84 RET
	0x0332CB88 BL 0x1C16F20
	0x0332CB8C BL 0x1C16F28
	0x0332CB90 STR X30, [X31 - 0x10]!
	0x0332CB94 LDR X8, [X0 + 0x20]
	0x0332CB98 CBZ X8, 0x332CBB4
	0x0332CB9C LDR W9, [X8 + 0x18]
	0x0332CBA0 CMP W9, 0x3
	0x0332CBA4 B.LS 0x332CBB8
	0x0332CBA8 LDR X0, [X8 + 0x38]
	0x0332CBAC LDR X30, [X31], #0x10
	0x0332CBB0 RET
	0x0332CBB4 BL 0x1C16F20
	0x0332CBB8 BL 0x1C16F28
	0x0332CBBC STR X30, [X31 - 0x10]!
	0x0332CBC0 LDR X8, [X0 + 0x20]
	0x0332CBC4 CBZ X8, 0x332CBE0
	0x0332CBC8 LDR W9, [X8 + 0x18]
	0x0332CBCC CMP W9, 0x4
	0x0332CBD0 B.LS 0x332CBE4
	0x0332CBD4 LDR X0, [X8 + 0x40]
	0x0332CBD8 LDR X30, [X31], #0x10
	0x0332CBDC RET
	0x0332CBE0 BL 0x1C16F20
	0x0332CBE4 BL 0x1C16F28
	0x0332CBE8 STR X30, [X31 - 0x10]!
	0x0332CBEC LDR X8, [X0 + 0x20]
	0x0332CBF0 CBZ X8, 0x332CC0C
	0x0332CBF4 LDR W9, [X8 + 0x18]
	0x0332CBF8 CMP W9, 0x5
	0x0332CBFC B.LS 0x332CC10
	0x0332CC00 LDR X0, [X8 + 0x48]
	0x0332CC04 LDR X30, [X31], #0x10
	0x0332CC08 RET
	0x0332CC0C BL 0x1C16F20
	0x0332CC10 BL 0x1C16F28
	0x0332CC14 SUB X31, X31, 0x70
	0x0332CC18 STR X30, [X31 + 0x50]
	0x0332CC1C STP X20, X19, [X31 + 0x60]
	0x0332CC20 ADRP X20, 0x10B0000
	0x0332CC24 ADRP X19, 0xDFC000
	0x0332CC28 LDRB W8, [X20 + 0xCBB]
	0x0332CC2C LDR X19, [X19 + 0x530]
	0x0332CC30 TBNZ X8, 0x0, 0x332CC48
	0x0332CC34 ADRP X0, 0xDFC000
	0x0332CC38 LDR X0, [X0 + 0x530]
	0x0332CC3C BL 0x1C16CF4
	0x0332CC40 MOVZ W8, 0x1
	0x0332CC44 STRB W8, [X20 + 0xCBB]
	0x0332CC48 ADD X8, X31, 0x28
	0x0332CC4C MOV W0, W31
	0x0332CC50 BL 0x332CCA8
	0x0332CC54 LDR X8, [X19]
	0x0332CC58 LDR X9, [X31 + 0x48]
	0x0332CC5C LDUR V0, [X31 + 0x38]
	0x0332CC60 LDUR V1, [X31 + 0x28]
	0x0332CC64 LDR X8, [X8 + 0xB8]
	0x0332CC68 MOVZ W0, 0x1
	0x0332CC6C STR X9, [X8 + 0x20]
	0x0332CC70 STP V1, V0, [X8]
	0x0332CC74 ADD X8, X31, 0x0
	0x0332CC78 BL 0x332CCA8
	0x0332CC7C LDR X8, [X19]
	0x0332CC80 LDR X9, [X31 + 0x20]
	0x0332CC84 LDP V1, V0, [X31]
	0x0332CC88 LDP X20, X19, [X31 + 0x60]
	0x0332CC8C LDR X8, [X8 + 0xB8]
	0x0332CC90 LDR X30, [X31 + 0x50]
	0x0332CC94 STR X9, [X8 + 0x48]
	0x0332CC98 STUR V0, [X8 + 0x38]
	0x0332CC9C STUR V1, [X8 + 0x28]
	0x0332CCA0 ADD X31, X31, 0x70
	0x0332CCA4 RET
	0x0332CCA8 STR X30, [X31 - 0x30]!
	0x0332CCAC STP X22, X21, [X31 + 0x10]
	0x0332CCB0 STP X20, X19, [X31 + 0x20]
	0x0332CCB4 ADRP X22, 0x10B0000
	0x0332CCB8 ADRP X21, 0xDC7000
	0x0332CCBC MOV X19, X8
	0x0332CCC0 LDRB W8, [X22 + 0xCBC]
	0x0332CCC4 LDR X21, [X21 + 0xAC8]
	0x0332CCC8 MOV W20, W0
	0x0332CCCC TBNZ X8, 0x0, 0x332CD20
	0x0332CCD0 ADRP X0, 0xDC7000
	0x0332CCD4 LDR X0, [X0 + 0xAC8]
	0x0332CCD8 BL 0x1C16CF4
	0x0332CCDC ADRP X0, 0xDC9000
	0x0332CCE0 LDR X0, [X0 + 0x278]
	0x0332CCE4 BL 0x1C16CF4
	0x0332CCE8 ADRP X0, 0xDC8000
	0x0332CCEC LDR X0, [X0 + 0x2A8]
	0x0332CCF0 BL 0x1C16CF4
	0x0332CCF4 ADRP X0, 0xDD0000
	0x0332CCF8 LDR X0, [X0 + 0x988]
	0x0332CCFC BL 0x1C16CF4
	0x0332CD00 ADRP X0, 0xDFC000
	0x0332CD04 LDR X0, [X0 + 0x558]
	0x0332CD08 BL 0x1C16CF4
	0x0332CD0C ADRP X0, 0xDD0000
	0x0332CD10 LDR X0, [X0 + 0x790]
	0x0332CD14 BL 0x1C16CF4
	0x0332CD18 MOVZ W8, 0x1
	0x0332CD1C STRB W8, [X22 + 0xCBC]
	0x0332CD20 LDR X0, [X21]
	0x0332CD24 ADRP X21, 0xDC9000
	0x0332CD28 LDR X21, [X21 + 0x278]
	0x0332CD2C MOVZ W1, 0x6
	0x0332CD30 BL 0x1C16D6C
	0x0332CD34 TBZ X20, 0x0, 0x332CD44
	0x0332CD38 ADRP X9, 0xDC8000
	0x0332CD3C LDR X9, [X9 + 0x2A8]
	0x0332CD40 B 0x332CD4C
	0x0332CD44 LDR X8, [X21]
	0x0332CD48 LDR X9, [X8 + 0xB8]
	0x0332CD4C CBZ X0, 0x332CE04
	0x0332CD50 LDR W8, [X0 + 0x18]
	0x0332CD54 CBZ W8, 0x332CE00
	0x0332CD58 LDR X9, [X9]
	0x0332CD5C CMP W8, 0x1
	0x0332CD60 STR X9, [X0 + 0x20]
	0x0332CD64 B.EQ 0x332CE00
	0x0332CD68 ADRP X9, 0xDD0000
	0x0332CD6C LDR X9, [X9 + 0x790]
	0x0332CD70 CMP W8, 0x2
	0x0332CD74 LDR X10, [X9]
	0x0332CD78 STR X10, [X0 + 0x28]
	0x0332CD7C B.EQ 0x332CE00
	0x0332CD80 ADRP X10, 0xDD0000
	0x0332CD84 LDR X10, [X10 + 0x988]
	0x0332CD88 CMP W8, 0x3
	0x0332CD8C LDR X11, [X10]
	0x0332CD90 STR X11, [X0 + 0x30]
	0x0332CD94 B.LS 0x332CE00
	0x0332CD98 LDR X10, [X10]
	0x0332CD9C CMP W8, 0x4
	0x0332CDA0 STR X10, [X0 + 0x38]
	0x0332CDA4 B.EQ 0x332CE00
	0x0332CDA8 LDR X9, [X9]
	0x0332CDAC CMP W8, 0x5
	0x0332CDB0 STR X9, [X0 + 0x40]
	0x0332CDB4 B.LS 0x332CE00
	0x0332CDB8 LDR X8, [X21]
	0x0332CDBC ADRP X9, 0xDFC000
	0x0332CDC0 ADRP X10, 0xFFFFFFFFFD7C1000
	0x0332CDC4 LDR V0, [X10 + 0xB68]
	0x0332CDC8 LDR X8, [X8 + 0xB8]
	0x0332CDCC MOVI V1.4S, 0x2
	0x0332CDD0 LDR X8, [X8]
	0x0332CDD4 LDR X9, [X9 + 0x558]
	0x0332CDD8 LDP X22, X21, [X31 + 0x10]
	0x0332CDDC STR X8, [X0 + 0x48]
	0x0332CDE0 LDR X8, [X9]
	0x0332CDE4 STUR V1, [X19 + 0x8]
	0x0332CDE8 STR D0, [X19 + 0x18]
	0x0332CDEC STR X0, [X19 + 0x20]
	0x0332CDF0 STR X8, [X19]
	0x0332CDF4 LDP X20, X19, [X31 + 0x20]
	0x0332CDF8 LDR X30, [X31], #0x30
	0x0332CDFC RET
	0x0332CE00 BL 0x1C16F28
	0x0332CE04 BL 0x1C16F20
	0x0332CE08 STP X30, X25, [X31 - 0x40]!
	0x0332CE0C STP X24, X23, [X31 + 0x10]
	0x0332CE10 STP X22, X21, [X31 + 0x20]
	0x0332CE14 STP X20, X19, [X31 + 0x30]
	0x0332CE18 LDR W8, [X1 + 0x4]
	0x0332CE1C MOVZ W9, 0xE3FF
	0x0332CE20 MOVK W9, 0xA20000
	0x0332CE24 MOV X19, X6
	0x0332CE28 CMP W8, W9
	0x0332CE2C B.GT 0x332CF1C
	0x0332CE30 LDR W8, [X2 + 0x4]
	0x0332CE34 MOV X24, X2
	0x0332CE38 CMP W8, 0x17
	0x0332CE3C B.GT 0x332CF1C
	0x0332CE40 LDR W8, [X3 + 0x4]
	0x0332CE44 MOV X23, X3
	0x0332CE48 CMP W8, 0x3B
	0x0332CE4C B.GT 0x332CF1C
	0x0332CE50 LDR W8, [X4 + 0x4]
	0x0332CE54 MOV X22, X4
	0x0332CE58 CMP W8, 0x3B
	0x0332CE5C B.GT 0x332CF1C
	0x0332CE60 MOV W20, W0
	0x0332CE64 MOV X0, X5
	0x0332CE68 MOV X21, X5
	0x0332CE6C MOV X25, X1
	0x0332CE70 BL 0x332CF64
	0x0332CE74 TBNZ X0, 0x0, 0x332CF1C
	0x0332CE78 LDRSW X8, [X25 + 0x4]
	0x0332CE7C LDRSW X9, [X24 + 0x4]
	0x0332CE80 LDRSW X10, [X23 + 0x4]
	0x0332CE84 MOVZ W12, 0x5180
	0x0332CE88 MOVK W12, 0x10000
	0x0332CE8C MUL X8, X8, X12
	0x0332CE90 MOVZ W12, 0xE10
	0x0332CE94 LDRSW X11, [X22 + 0x4]
	0x0332CE98 NOP
	0x0332CE9C MADD X8, X9, X12, X8
	0x0332CEA0 MOVZ W9, 0x3C
	0x0332CEA4 MADD X8, X10, X9, X8
	0x0332CEA8 MOVZ X9, 0x8865
	0x0332CEAC MOVK X9, 0x5D630000
	0x0332CEB0 MOVK X9, 0x46DC
	0x0332CEB4 MOVZ W12, 0x3E8
	0x0332CEB8 MOVK X9, 0x30000
	0x0332CEBC ADD X22, X8, X11
	0x0332CEC0 MADD X8, X22, X12, X9
	0x0332CEC4 MOVZ X9, 0x10CA
	0x0332CEC8 MOVK X9, 0xBAC70000
	0x0332CECC MOVK X9, 0x8DB8
	0x0332CED0 MOVK X9, 0x60000
	0x0332CED4 CMP X8, X9
	0x0332CED8 B.HI 0x332CF1C
	0x0332CEDC LDRSW X23, [X21 + 0x4]
	0x0332CEE0 CBZ W23, 0x332CF38
	0x0332CEE4 LDR W0, [X21 + 0x8]
	0x0332CEE8 MOVZ W21, 0x4240
	0x0332CEEC MOVK W21, 0xF0000
	0x0332CEF0 CMP W0, 0x1
	0x0332CEF4 B.LT 0x332CF00
	0x0332CEF8 BL 0x332CA80
	0x0332CEFC SDIV X21, X21, X0
	0x0332CF00 CMP X21, X23
	0x0332CF04 B.LE 0x332CF3C
	0x0332CF08 ADD X8, X23, X23, 0x2, LSL
	0x0332CF0C UBFM X23, X8, 0x3F, 0x3E
	0x0332CF10 CMP X23, X21
	0x0332CF14 B.LT 0x332CF08
	0x0332CF18 B 0x332CF3C
	0x0332CF1C MOV W0, W31
	0x0332CF20 STR X31, [X19]
	0x0332CF24 LDP X20, X19, [X31 + 0x30]
	0x0332CF28 LDP X22, X21, [X31 + 0x20]
	0x0332CF2C LDP X24, X23, [X31 + 0x10]
	0x0332CF30 LDP X30, X25, [X31], #0x40
	0x0332CF34 RET
	0x0332CF38 MOV X23, X31
	0x0332CF3C MOVZ W8, 0x9680
	0x0332CF40 MOVK W8, 0x980000
	0x0332CF44 MADD X8, X22, X8, X23
	0x0332CF48 CMP X8, 0x0
	0x0332CF4C CSET W9, LT
	0x0332CF50 ANDS W9, W9, W20, 0x0
	0x0332CF54 CSEL X8, X31, X8, NE
	0x0332CF58 EOR W0, W9, 0x1
	0x0332CF5C STR X8, [X19]
	0x0332CF60 B 0x332CF24
	0x0332CF64 STP X30, X19, [X31 - 0x10]!
	0x0332CF68 LDRSW X19, [X0 + 0x4]
	0x0332CF6C MOVZ W8, 0x967F
	0x0332CF70 MOVK W8, 0x980000
	0x0332CF74 CMP W19, W8
	0x0332CF78 B.GT 0x332CFB4
	0x0332CF7C LDR W8, [X0 + 0x8]
	0x0332CF80 CMP W8, 0x7
	0x0332CF84 B.GT 0x332CFB4
	0x0332CF88 MOV W0, W31
	0x0332CF8C CBZ W19, 0x332CFB8
	0x0332CF90 CBZ W8, 0x332CFB8
	0x0332CF94 SUB W0, W8, 0x1
	0x0332CF98 BL 0x332CA80
	0x0332CF9C MOVZ W8, 0x967F
	0x0332CFA0 MOVK W8, 0x980000
	0x0332CFA4 SDIV X8, X8, X0
	0x0332CFA8 CMP X8, X19
	0x0332CFAC CSET W0, LE
	0x0332CFB0 B 0x332CFB8
	0x0332CFB4 MOVZ W0, 0x1
	0x0332CFB8 LDP X30, X19, [X31], #0x10
	0x0332CFBC RET
	0x0332CFC0 SUB X31, X31, 0x20
	0x0332CFC4 STP X30, X19, [X31 + 0x10]
	0x0332CFC8 MOV X19, X3
	0x0332CFCC MOV X3, X2
	0x0332CFD0 ADD X4, X31, 0x0
	0x0332CFD4 MOVZ W2, 0x3
	0x0332CFD8 STP X31, X31, [X31]
	0x0332CFDC BL 0x332D014
	0x0332CFE0 TBZ X0, 0x0, 0x332CFF0

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move [X31+12], W1
	015 Move X19, 0x10B1000
	016 Move X29, 0xDCA000
	017 Move W8, [X19+3257]
	018 Move X29, [X29+1392]
	019 Move W20, W4
	020 Move X24, X3
	021 Move X25, X2
	022 Move X23, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {41}
	027 Move X0, 0xDCA000
	028 Move X0, [X0+3144]
	029 Call 0x1C17CF4
	030 Move X0, 0xDFD000
	031 Move X0, [X0+1352]
	032 Call 0x1C17CF4
	033 Move X0, 0xDFD000
	034 Move X0, [X0+1328]
	035 Call 0x1C17CF4
	036 Move X0, 0xDCA000
	037 Move X0, [X0+1392]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X19+3257], W8
	041 Move W0, 16
	042 Move X1, X31
	043 Call StringBuilderCache.Acquire, X0
	044 Move X8, [X29]
	045 Move X19, X0
	046 Move W9, [X8+224]
	047 Compare W9, 0
	048 JumpIfNotEqual {51}
	049 Move X0, X8
	050 Call 0x1C17DFC
	051 Move X8, 0x81E3
	052 NotImplemented "Instruction MOVK not yet implemented."
	053 NotImplemented "Instruction MOVK not yet implemented."
	054 NotImplemented "Instruction MOVK not yet implemented."
	055 NotImplemented "Instruction SMULH not yet implemented."
	056 Move X9, 0xC000
	057 Add X8, X8, X23
	058 NotImplemented "Instruction MOVK not yet implemented."
	059 Move X10, 0x42BD
	060 NotImplemented "Instruction SBFM not yet implemented."
	061 NotImplemented "Instruction MOVK not yet implemented."
	062 NotImplemented "Instruction MOVK not yet implemented."
	063 Add X8, X11, X8
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction MOVK not yet implemented."
	066 NotImplemented "Instruction MSUB not yet implemented."
	067 NotImplemented "Instruction MOVK not yet implemented."
	068 NotImplemented "Instruction CSNEG not yet implemented."
	069 NotImplemented "Instruction CSNEG not yet implemented."
	070 NotImplemented "Instruction SMULH not yet implemented."
	071 Add X8, X8, X28
	072 NotImplemented "Instruction SBFM not yet implemented."
	073 Add X27, X9, X8
	074 Move W8, 0x9680
	075 Move X21, 0xDFD000
	076 NotImplemented "Instruction MOVK not yet implemented."
	077 Move X21, [X21+1328]
	078 NotImplemented "Instruction MSUB not yet implemented."
	079 Move W8, [X31+12]
	080 Move [X31+108], W26
	081 Move TEMP, X8
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {111}
	085 Move X0, [X29]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, [X21]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X8, [X21]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X8, [X8+184]
	098 Add X9, X8, 40
	099 NotImplemented "Instruction CSEL not yet implemented."
	100 Move V0, [X8]
	101 Move V1, [X8+16]
	102 Move X8, [X8+32]
	103 Move [X31+16], V0
	104 Move [X31+24], V1
	105 Move [X31+48], X8
	106 Move [X31+96], X8
	107 Move [X31+64], V0
	108 Move [X31+72], V1
	109 Compare W26, 0
	110 JumpIfNotEqual {124}
	111 NotImplemented "Instruction CMP not yet implemented."
	112 NotImplemented "Instruction MOVI not yet implemented."
	113 NotImplemented "Instruction CSET not yet implemented."
	114 Add X0, X31, 64
	115 Move X1, X25
	116 Move X2, X24
	117 Move [X31+96], X31
	118 Move [X31+64], V0
	119 Move [X31+72], V0
	120 Call FormatLiterals.Init, X0, X1, X2
	121 Move W26, [X31+108]
	122 Compare W26, 0
	123 JumpIfEqual {131}
	124 Move W8, [X31+88]
	125 Move W9, 7
	126 Subtract W0, W9, W8
	127 Call TimeSpanParse.Pow10, X0
	128 Move X8, W26
	129 NotImplemented "Instruction SDIV not yet implemented."
	130 Move [X31+108], W8
	131 Add X0, X31, 64
	132 Call FormatLiterals.get_Start, X0
	133 Compare X19, 0
	134 JumpIfEqual {354}
	135 Move X8, 0xF7D5
	136 NotImplemented "Instruction MOVK not yet implemented."
	137 Move X9, 0x10B5
	138 NotImplemented "Instruction MOVK not yet implemented."
	139 NotImplemented "Instruction MOVK not yet implemented."
	140 NotImplemented "Instruction MOVK not yet implemented."
	141 NotImplemented "Instruction MOVK not yet implemented."
	142 NotImplemented "Instruction MOVK not yet implemented."
	143 Move W10, 0x8889
	144 NotImplemented "Instruction SMULH not yet implemented."
	145 NotImplemented "Instruction MOVK not yet implemented."
	146 NotImplemented "Instruction SMULH not yet implemented."
	147 Move X15, X8
	148 ShiftRight X15, 63
	149 And X15, X15, 0x7FFFFFFF
	150 Move X8, X8
	151 ShiftRight X8, 26
	152 And X8, X8, 0x7FFFFFFF
	153 NotImplemented "Instruction SMADDL not yet implemented."
	154 Add W8, W8, W15
	155 Move X15, X9
	156 ShiftRight X15, 63
	157 And X15, X15, 0x7FFFFFFF
	158 NotImplemented "Instruction SBFM not yet implemented."
	159 Move W11, 0xAAAB
	160 Move X14, X14
	161 ShiftRight X14, 32
	162 And X14, X14, 0x7FFFFFFF
	163 Add W9, W9, W15
	164 NotImplemented "Instruction SXTH not yet implemented."
	165 NotImplemented "Instruction MOVK not yet implemented."
	166 Add W14, W14, W27
	167 NotImplemented "Instruction SMADDL not yet implemented."
	168 NotImplemented "Instruction SXTB not yet implemented."
	169 NotImplemented "Instruction SMADDL not yet implemented."
	170 NotImplemented "Instruction SBFM not yet implemented."
	171 Move X10, X10
	172 ShiftRight X10, 32
	173 And X10, X10, 0x7FFFFFFF
	174 Add W14, W15, W14
	175 Move X15, X11
	176 ShiftRight X15, 63
	177 And X15, X15, 0x7FFFFFFF
	178 Move X11, X11
	179 ShiftRight X11, 34
	180 And X11, X11, 0x7FFFFFFF
	181 Add W10, W10, W8
	182 Add W11, W11, W15
	183 Move W15, W10
	184 ShiftRight W15, 5
	185 And W15, W15, 0x7FFFFFFF
	186 Move W12, 24
	187 Move W13, 60
	188 Add W10, W15, W10
	189 Move X1, X0
	190 NotImplemented "Instruction MSUB not yet implemented."
	191 NotImplemented "Instruction MSUB not yet implemented."
	192 Move X0, X19
	193 Move X2, X31
	194 NotImplemented "Instruction SXTB not yet implemented."
	195 NotImplemented "Instruction SXTH not yet implemented."
	196 NotImplemented "Instruction MSUB not yet implemented."
	197 Call StringBuilder.Append, X0, X1
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Compare W22, 0
	200 JumpIfEqual {211}
	201 Move X0, X19
	202 Move W1, W22
	203 Move X2, X31
	204 Call StringBuilder.Append, X0, X1
	205 Add X0, X31, 64
	206 Call FormatLiterals.get_DayHourSep, X0
	207 Move X1, X0
	208 Move X0, X19
	209 Move X2, X31
	210 Call StringBuilder.Append, X0, X1
	211 Move X0, [X21]
	212 Move W22, [X31+76]
	213 Move W8, [X0+224]
	214 Compare W8, 0
	215 JumpIfNotEqual {217}
	216 Call 0x1C17DFC
	217 Move X0, X19
	218 Move W1, W25
	219 Move W2, W22
	220 Call TimeSpanFormat.AppendNonNegativeInt32, X0, X1, X2
	221 Add X0, X31, 64
	222 Call FormatLiterals.get_HourMinuteSep, X0
	223 Move X1, X0
	224 Move X0, X19
	225 Move X2, X31
	226 Call StringBuilder.Append, X0, X1
	227 Move W2, [X31+80]
	228 Move X0, X19
	229 Move W1, W24
	230 Call TimeSpanFormat.AppendNonNegativeInt32, X0, X1, X2
	231 Add X0, X31, 64
	232 Call FormatLiterals.get_MinuteSecondSep, X0
	233 Move X1, X0
	234 Move X0, X19
	235 Move X2, X31
	236 Call StringBuilder.Append, X0, X1
	237 Move W2, [X31+84]
	238 Move X0, X19
	239 Move W1, W23
	240 Call TimeSpanFormat.AppendNonNegativeInt32, X0, X1, X2
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move W8, [X31+12]
	243 Move TEMP, X8
	244 And TEMP, TEMP, 1
	245 Compare TEMP, 1
	246 JumpIfEqual {273}
	247 NotImplemented "Instruction LDRSW not yet implemented."
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move W10, [X31+108]
	250 Subtract W21, W8, 1
	251 Move X8, X8
	252 ShiftRight X8, 61
	253 And X8, X8, 0xFFFFFFF
	254 Add X20, X8, 24
	255 Move W8, 0x6667
	256 NotImplemented "Instruction MOVK not yet implemented."
	257 Move W9, 10
	258 NotImplemented "Instruction SMADDL not yet implemented."
	259 Move X12, X11
	260 ShiftRight X12, 63
	261 And X12, X12, 0x7FFFFFFF
	262 NotImplemented "Instruction SBFM not yet implemented."
	263 Add W11, W11, W12
	264 NotImplemented "Instruction MSUB not yet implemented."
	265 Compare W10, 0
	266 JumpIfNotEqual {294}
	267 Add W10, W21, 1
	268 Subtract W21, W21, 1
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Subtract X20, X20, 8
	271 Move W10, W11
	272 Move [X31+108], W11
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Move W8, [X31+108]
	275 Compare W8, 0
	276 JumpIfEqual {333}
	277 Add X0, X31, 64
	278 Call FormatLiterals.get_SecondFractionSep, X0
	279 Move X1, X0
	280 Move X0, X19
	281 Move X2, X31
	282 Call StringBuilder.Append, X0, X1
	283 Move X0, [X21]
	284 Move W20, [X31+108]
	285 Move W21, [X31+88]
	286 Move W8, [X0+224]
	287 Compare W8, 0
	288 JumpIfNotEqual {290}
	289 Call 0x1C17DFC
	290 Move X0, X19
	291 Move W1, W20
	292 Move W2, W21
	293 Call TimeSpanFormat.AppendNonNegativeInt32, X0, X1, X2
	294 Add X0, X31, 64
	295 Call FormatLiterals.get_SecondFractionSep, X0
	296 Move X1, X0
	297 Move X0, X19
	298 Move X2, X31
	299 Call StringBuilder.Append, X0, X1
	300 Move X22, 0xDFD000
	301 Move X22, [X22+1352]
	302 Move X0, [X22]
	303 Move W8, [X0+224]
	304 Compare W8, 0
	305 JumpIfNotEqual {308}
	306 Call 0x1C17DFC
	307 Move X0, [X22]
	308 Move X8, [X0+184]
	309 Move X8, [X8+40]
	310 Compare X8, 0
	311 JumpIfEqual {354}
	312 Move W9, [X8+24]
	313 NotImplemented "Instruction CMP not yet implemented."
	314 Move X9, 0xDCA000
	315 Move X9, [X9+3144]
	316 Move X20, [X8]
	317 Move X0, [X9]
	318 Move W9, [X0+224]
	319 Compare W9, 0
	320 JumpIfNotEqual {322}
	321 Call 0x1C17DFC
	322 Move X0, X31
	323 Call CultureInfo.get_InvariantCulture
	324 Move X2, X0
	325 Add X0, X31, 108
	326 Move X1, X20
	327 Move X3, X31
	328 Call Int32.ToString, X0, X1, X2
	329 Move X1, X0
	330 Move X0, X19
	331 Move X2, X31
	332 Call StringBuilder.Append, X0, X1
	333 Add X0, X31, 64
	334 Call FormatLiterals.get_End, X0
	335 Move X1, X0
	336 Move X0, X19
	337 Move X2, X31
	338 Call StringBuilder.Append, X0, X1
	339 Move X0, X19
	340 Move X20, [X31+192]
	341 Move X19, [X31+200]
	342 Move X22, [X31+176]
	343 Move X21, [X31+184]
	344 Move X24, [X31+160]
	345 Move X23, [X31+168]
	346 Move X26, [X31+144]
	347 Move X25, [X31+152]
	348 Move X28, [X31+128]
	349 Move X27, [X31+136]
	350 Move X29, [X31+112]
	351 Move X30, [X31+120]
	352 Add X31, X31, 208
	353 Return X0
	354 Call 0x1C17F20
	355 Call 0x1C17F28

Method: System.Text.StringBuilder FormatCustomized(System.TimeSpan value, System.ReadOnlySpan`1<System.Char> format, System.Globalization.DateTimeFormatInfo dtfi, System.Text.StringBuilder result)

Disassembly:
	0x0332CFE4 LDR X8, [X31]
	0x0332CFE8 STR X8, [X19]
	0x0332CFEC B 0x332CFF4
	0x0332CFF0 STR X31, [X19]
	0x0332CFF4 LDP X30, X19, [X31 + 0x10]
	0x0332CFF8 AND W0, W0, 0x1
	0x0332CFFC ADD X31, X31, 0x20
	0x0332D000 RET
	0x0332D004 AND W8, W1, 0x1
	0x0332D008 STR X31, [X0]
	0x0332D00C STRB W8, [X0 + 0x8]
	0x0332D010 RET
	0x0332D014 STR X29, [X31 - 0x50]!
	0x0332D018 STP X30, X25, [X31 + 0x10]
	0x0332D01C STP X24, X23, [X31 + 0x20]
	0x0332D020 STP X22, X21, [X31 + 0x30]
	0x0332D024 STP X20, X19, [X31 + 0x40]
	0x0332D028 SUB X31, X31, 0x1F0
	0x0332D02C ADRP X25, 0x10AF000
	0x0332D030 ADRP X24, 0xDFB000
	0x0332D034 LDRB W8, [X25 + 0xCBF]
	0x0332D038 LDR X24, [X24 + 0x560]
	0x0332D03C MOV X19, X4
	0x0332D040 MOV X21, X3
	0x0332D044 MOV W20, W2
	0x0332D048 MOV X22, X1
	0x0332D04C MOV X23, X0
	0x0332D050 TBNZ X8, 0x0, 0x332D080
	0x0332D054 ADRP X0, 0xDFB000
	0x0332D058 LDR X0, [X0 + 0x328]
	0x0332D05C BL 0x1C16CF4
	0x0332D060 ADRP X0, 0xDFB000
	0x0332D064 LDR X0, [X0 + 0x560]
	0x0332D068 BL 0x1C16CF4
	0x0332D06C ADRP X0, 0xDFB000
	0x0332D070 LDR X0, [X0 + 0x568]
	0x0332D074 BL 0x1C16CF4
	0x0332D078 MOVZ W8, 0x1
	0x0332D07C STRB W8, [X25 + 0xCBF]
	0x0332D080 ADD X0, X31, 0x48
	0x0332D084 MOVZ W2, 0x178
	0x0332D088 MOV W1, W31
	0x0332D08C STP X31, X31, [X31 + 0x1C0]
	0x0332D090 STR X31, [X31 + 0x1D0]
	0x0332D094 BL 0x3EB1B10
	0x0332D098 MOV X0, X23
	0x0332D09C MOV X1, X22
	0x0332D0A0 MOV X2, X31
	0x0332D0A4 BL 0x337713C
	0x0332D0A8 LDR X8, [X24]
	0x0332D0AC STP X0, X1, [X31 + 0x1E0]
	0x0332D0B0 ADD X0, X31, 0x1E0
	0x0332D0B4 MOV X1, X8
	0x0332D0B8 BL 0x25BF094
	0x0332D0BC TBNZ X0, 0x0, 0x332D158
	0x0332D0C0 LDR V0, [X31 + 0x1E]
	0x0332D0C4 ADRP X22, 0xDFB000
	0x0332D0C8 LDR X22, [X22 + 0x328]
	0x0332D0CC ADD X0, X31, 0x48
	0x0332D0D0 MOVZ W2, 0x178
	0x0332D0D4 MOV W1, W31
	0x0332D0D8 STR V0, [X31 + 0x1C]
	0x0332D0DC STR W31, [X31 + 0x1D0]
	0x0332D0E0 BL 0x3EB1B10
	0x0332D0E4 LDR X0, [X22]
	0x0332D0E8 LDR W8, [X0 + 0xE0]
	0x0332D0EC CBNZ W8, 0x332D0F4
	0x0332D0F0 BL 0x1C16DFC
	0x0332D0F4 MOV X0, X21
	0x0332D0F8 BL 0x3324CFC
	0x0332D0FC MOV X1, X0
	0x0332D100 ADD X0, X31, 0x48
	0x0332D104 BL 0x332D47C
	0x0332D108 ADD X8, X31, 0x0
	0x0332D10C ADD X0, X31, 0x1C0
	0x0332D110 BL 0x332D4C8
	0x0332D114 LDP V0, V1, [X31]
	0x0332D118 ADD X0, X31, 0x48
	0x0332D11C STP V0, V1, [X31 + 0x20]
	0x0332D120 LDRB W8, [X31 + 0x20]
	0x0332D124 CMP W8, 0x1
	0x0332D128 B.EQ 0x332D140
	0x0332D12C ADD X1, X31, 0x20
	0x0332D130 MOV X2, X19
	0x0332D134 BL 0x332D724
	0x0332D138 TBNZ X0, 0x0, 0x332D108
	0x0332D13C B 0x332D158
	0x0332D140 MOV W1, W20
	0x0332D144 MOV X2, X19
	0x0332D148 BL 0x332D834
	0x0332D14C TBZ X0, 0x0, 0x332D158
	0x0332D150 MOVZ W0, 0x1
	0x0332D154 B 0x332D17C
	0x0332D158 ADRP X8, 0xDFB000
	0x0332D15C LDR X8, [X8 + 0x568]
	0x0332D160 MOVZ W1, 0x2
	0x0332D164 MOV X0, X19
	0x0332D168 MOV X3, X31
	0x0332D16C LDR X2, [X8]
	0x0332D170 MOV X4, X31
	0x0332D174 BL 0x332D348
	0x0332D178 MOV W0, W31
	0x0332D17C ADD X31, X31, 0x1F0
	0x0332D180 LDP X20, X19, [X31 + 0x40]
	0x0332D184 LDP X22, X21, [X31 + 0x30]
	0x0332D188 LDP X24, X23, [X31 + 0x20]
	0x0332D18C LDP X30, X25, [X31 + 0x10]
	0x0332D190 LDR X29, [X31], #0x50
	0x0332D194 RET
	0x0332D198 SUB X31, X31, 0x20
	0x0332D19C STP X30, X19, [X31 + 0x10]
	0x0332D1A0 MOV X19, X6
	0x0332D1A4 ADD X6, X31, 0x0
	0x0332D1A8 STP X31, X31, [X31]
	0x0332D1AC BL 0x332D1D4
	0x0332D1B0 TBZ X0, 0x0, 0x332D1C0
	0x0332D1B4 LDR X8, [X31]
	0x0332D1B8 STR X8, [X19]
	0x0332D1BC B 0x332D1C4
	0x0332D1C0 STR X31, [X19]
	0x0332D1C4 LDP X30, X19, [X31 + 0x10]
	0x0332D1C8 AND W0, W0, 0x1
	0x0332D1CC ADD X31, X31, 0x20
	0x0332D1D0 RET
	0x0332D1D4 SUB X31, X31, 0x70
	0x0332D1D8 STR X30, [X31 + 0x20]
	0x0332D1DC STP X26, X25, [X31 + 0x30]
	0x0332D1E0 STP X24, X23, [X31 + 0x40]
	0x0332D1E4 STP X22, X21, [X31 + 0x50]
	0x0332D1E8 STP X20, X19, [X31 + 0x60]
	0x0332D1EC ADRP X26, 0x10AF000
	0x0332D1F0 LDRB W8, [X26 + 0xCC6]
	0x0332D1F4 MOV X19, X6
	0x0332D1F8 MOV W23, W5
	0x0332D1FC MOV X22, X4
	0x0332D200 MOV X25, X3
	0x0332D204 MOV X24, X2
	0x0332D208 MOV X20, X1
	0x0332D20C MOV X21, X0
	0x0332D210 TBNZ X8, 0x0, 0x332D234
	0x0332D214 ADRP X0, 0xDF5000
	0x0332D218 LDR X0, [X0 + 0x28]
	0x0332D21C BL 0x1C16CF4
	0x0332D220 ADRP X0, 0xDFB000
	0x0332D224 LDR X0, [X0 + 0x570]
	0x0332D228 BL 0x1C16CF4
	0x0332D22C MOVZ W8, 0x1
	0x0332D230 STRB W8, [X26 + 0xCC6]
	0x0332D234 CMP W25, 0x1
	0x0332D238 B.EQ 0x332D268
	0x0332D23C CBNZ W25, 0x332D288
	0x0332D240 ADRP X8, 0xDFB000
	0x0332D244 LDR X8, [X8 + 0x570]
	0x0332D248 MOVZ W1, 0x2
	0x0332D24C MOV X0, X19
	0x0332D250 MOV X3, X31
	0x0332D254 LDR X2, [X8]
	0x0332D258 MOV X4, X31
	0x0332D25C BL 0x332D348
	0x0332D260 MOV W0, W31
	0x0332D264 B 0x332D2F0
	0x0332D268 LDRH W8, [X24]
	0x0332D26C CMP W8, 0x54
	0x0332D270 B.HI 0x332D2BC
	0x0332D274 CMP W8, 0x47
	0x0332D278 B.EQ 0x332D310
	0x0332D27C CMP W8, 0x54
	0x0332D280 B.EQ 0x332D2D4
	0x0332D284 B 0x332D240
	0x0332D288 MOV X0, X21
	0x0332D28C MOV X1, X20
	0x0332D290 MOV X2, X24
	0x0332D294 MOV X3, X25
	0x0332D298 MOV W4, W23
	0x0332D29C MOV X5, X19
	0x0332D2A0 LDP X20, X19, [X31 + 0x60]
	0x0332D2A4 LDP X22, X21, [X31 + 0x50]
	0x0332D2A8 LDP X24, X23, [X31 + 0x40]
	0x0332D2AC LDP X26, X25, [X31 + 0x30]
	0x0332D2B0 LDR X30, [X31 + 0x20]
	0x0332D2B4 ADD X31, X31, 0x70
	0x0332D2B8 B 0x3331A74
	0x0332D2BC CMP W8, 0x74
	0x0332D2C0 B.EQ 0x332D2D4
	0x0332D2C4 CMP W8, 0x67
	0x0332D2C8 B.EQ 0x332D318
	0x0332D2CC CMP W8, 0x63
	0x0332D2D0 B.NE 0x332D240
	0x0332D2D4 MOVI V0.2D, 0x0
	0x0332D2D8 ADD X0, X31, 0x0
	0x0332D2DC MOV X1, X21
	0x0332D2E0 MOV X2, X20
	0x0332D2E4 MOV X3, X19
	0x0332D2E8 STP V0, V0, [X31]
	0x0332D2EC BL 0x33323D4
	0x0332D2F0 LDP X20, X19, [X31 + 0x60]
	0x0332D2F4 LDP X22, X21, [X31 + 0x50]
	0x0332D2F8 LDP X24, X23, [X31 + 0x40]
	0x0332D2FC LDP X26, X25, [X31 + 0x30]
	0x0332D300 LDR X30, [X31 + 0x20]
	0x0332D304 AND W0, W0, 0x1
	0x0332D308 ADD X31, X31, 0x70
	0x0332D30C RET
	0x0332D310 MOVZ W2, 0x6
	0x0332D314 B 0x332D31C
	0x0332D318 MOVZ W2, 0x2
	0x0332D31C MOV X0, X21
	0x0332D320 MOV X1, X20
	0x0332D324 MOV X3, X22
	0x0332D328 MOV X4, X19
	0x0332D32C LDP X20, X19, [X31 + 0x60]
	0x0332D330 LDP X22, X21, [X31 + 0x50]
	0x0332D334 LDP X24, X23, [X31 + 0x40]
	0x0332D338 LDP X26, X25, [X31 + 0x30]
	0x0332D33C LDR X30, [X31 + 0x20]
	0x0332D340 ADD X31, X31, 0x70
	0x0332D344 B 0x332D014
	0x0332D348 STR X30, [X31 - 0x20]!
	0x0332D34C STP X20, X19, [X31 + 0x10]
	0x0332D350 LDRB W8, [X0 + 0x8]
	0x0332D354 CBNZ W8, 0x332D368
	0x0332D358 LDP X20, X19, [X31 + 0x10]
	0x0332D35C MOV W0, W31
	0x0332D360 LDR X30, [X31], #0x20
	0x0332D364 RET
	0x0332D368 MOV W20, W1
	0x0332D36C MOV X0, X2
	0x0332D370 MOV X1, X31
	0x0332D374 MOV X19, X3
	0x0332D378 STR X4, [X31 + 0x8]
	0x0332D37C BL 0x320A364
	0x0332D380 AND W8, W20, 0xFF
	0x0332D384 CMP W8, 0x4
	0x0332D388 MOV X20, X0
	0x0332D38C B.EQ 0x332D3C8
	0x0332D390 CMP W8, 0x3
	0x0332D394 B.EQ 0x332D3EC
	0x0332D398 CMP W8, 0x1
	0x0332D39C B.NE 0x332D438
	0x0332D3A0 ADRP X0, 0xDCB000
	0x0332D3A4 LDR X0, [X0 + 0x528]
	0x0332D3A8 BL 0x1C16D08
	0x0332D3AC BL 0x1C16F10
	0x0332D3B0 LDR X1, [X31 + 0x8]
	0x0332D3B4 MOV X2, X20
	0x0332D3B8 MOV X3, X31
	0x0332D3BC MOV X19, X0
	0x0332D3C0 BL 0x3315F7C
	0x0332D3C4 B 0x332D458
	0x0332D3C8 ADRP X0, 0xDC6000
	0x0332D3CC LDR X0, [X0 + 0x858]
	0x0332D3D0 BL 0x1C16D08
	0x0332D3D4 BL 0x1C16F10
	0x0332D3D8 MOV X1, X20
	0x0332D3DC MOV X2, X31
	0x0332D3E0 MOV X19, X0
	0x0332D3E4 BL 0x338CB50
	0x0332D3E8 B 0x332D458
	0x0332D3EC MOV X0, X20
	0x0332D3F0 MOV X1, X19
	0x0332D3F4 MOV X2, X31
	0x0332D3F8 BL 0x32094D4
	0x0332D3FC MOV X19, X0
	0x0332D400 ADRP X0, 0xDF3000
	0x0332D404 LDR X0, [X0 + 0xC08]
	0x0332D408 BL 0x1C16D08
	0x0332D40C BL 0x1C16F10
	0x0332D410 MOV X1, X19
	0x0332D414 MOV X2, X31
	0x0332D418 MOV X20, X0
	0x0332D41C BL 0x33674A0
	0x0332D420 ADRP X0, 0xDFB000
	0x0332D424 LDR X0, [X0 + 0x578]
	0x0332D428 BL 0x1C16D08
	0x0332D42C MOV X1, X0
	0x0332D430 MOV X0, X20
	0x0332D434 BL 0x1C16DEC
	0x0332D438 ADRP X0, 0xDF3000
	0x0332D43C LDR X0, [X0 + 0xC08]
	0x0332D440 BL 0x1C16D08
	0x0332D444 BL 0x1C16F10
	0x0332D448 MOV X1, X20
	0x0332D44C MOV X2, X31
	0x0332D450 MOV X19, X0
	0x0332D454 BL 0x33674A0
	0x0332D458 ADRP X0, 0xDFB000
	0x0332D45C LDR X0, [X0 + 0x578]
	0x0332D460 BL 0x1C16D08
	0x0332D464 MOV X1, X0
	0x0332D468 MOV X0, X19
	0x0332D46C BL 0x1C16DEC
	0x0332D470 STP X1, X2, [X0]
	0x0332D474 STR W31, [X0 + 0x10]
	0x0332D478 RET
	0x0332D47C STR X30, [X31 - 0x20]!
	0x0332D480 STP X20, X19, [X31 + 0x10]
	0x0332D484 STRB W31, [X0]
	0x0332D488 STR X31, [X0 + 0x8]
	0x0332D48C STR W31, [X0 + 0x4]
	0x0332D490 CBZ X1, 0x332D4C4
	0x0332D494 MOV X19, X0
	0x0332D498 MOV X0, X1
	0x0332D49C MOV X20, X1
	0x0332D4A0 BL 0x3326D30
	0x0332D4A4 STR X0, [X19 + 0x68]
	0x0332D4A8 MOV X0, X20
	0x0332D4AC BL 0x3326DFC
	0x0332D4B0 STR X0, [X19 + 0x70]
	0x0332D4B4 STRH W31, [X19 + 0x60]
	0x0332D4B8 LDP X20, X19, [X31 + 0x10]
	0x0332D4BC LDR X30, [X31], #0x20
	0x0332D4C0 RET
	0x0332D4C4 BL 0x1C16F20
	0x0332D4C8 STR X30, [X31 - 0x40]!
	0x0332D4CC STP X24, X23, [X31 + 0x10]
	0x0332D4D0 STP X22, X21, [X31 + 0x20]
	0x0332D4D4 STP X20, X19, [X31 + 0x30]
	0x0332D4D8 ADRP X21, 0x10AF000
	0x0332D4DC LDRB W9, [X21 + 0xCC8]
	0x0332D4E0 MOV X20, X0
	0x0332D4E4 MOV X19, X8
	0x0332D4E8 TBNZ X9, 0x0, 0x332D50C
	0x0332D4EC ADRP X0, 0xDF9000
	0x0332D4F0 LDR X0, [X0 + 0xD90]
	0x0332D4F4 BL 0x1C16CF4
	0x0332D4F8 ADRP X0, 0xDF5000
	0x0332D4FC LDR X0, [X0 + 0x28]
	0x0332D500 BL 0x1C16CF4
	0x0332D504 MOVZ W8, 0x1
	0x0332D508 STRB W8, [X21 + 0xCC8]
	0x0332D50C LDR W9, [X20 + 0x10]
	0x0332D510 LDR W8, [X20 + 0x8]
	0x0332D514 CMP W8, W9
	0x0332D518 B.LE 0x332D590
	0x0332D51C B.LS 0x332D710
	0x0332D520 LDR X21, [X20]
	0x0332D524 SXTW X22, W9
	0x0332D528 LDRH W10, [X21, X22, LSL #1]
	0x0332D52C SUB W10, W10, 0x30
	0x0332D530 CMP W10, 0xA
	0x0332D534 B.CS 0x332D5A8
	0x0332D538 CBZ W10, 0x332D670
	0x0332D53C MOV W11, W31
	0x0332D540 ADD W13, W9, 0x1
	0x0332D544 CMP W8, W13
	0x0332D548 CSINC W12, W8, W9, GT
	0x0332D54C MOVZ W14, 0xA
	0x0332D550 ADD W15, W9, 0x1
	0x0332D554 CMP W15, W8
	0x0332D558 B.GE 0x332D6D4
	0x0332D55C B.CS 0x332D714
	0x0332D560 LDRH W16, [X21, W15, SXTW]
	0x0332D564 SUB W16, W16, 0x30
	0x0332D568 CMP W16, 0x9
	0x0332D56C B.HI 0x332D6D0
	0x0332D570 MADD W10, W10, W14, W16
	0x0332D574 UBFM W16, W10, 0x1C, 0x1F
	0x0332D578 MOV W9, W15
	0x0332D57C CBZ W16, 0x332D550
	0x0332D580 STR W15, [X20 + 0x10]
	0x0332D584 STP X31, X31, [X19]
	0x0332D588 MOVZ W8, 0x4
	0x0332D58C B 0x332D598
	0x0332D590 MOVZ W8, 0x1
	0x0332D594 STP X31, X31, [X19]
	0x0332D598 STP W31, W31, [X19 + 0x4]
	0x0332D59C STRB W8, [X19]
	0x0332D5A0 STP X31, X31, [X19 + 0x10]
	0x0332D5A4 B 0x332D65C
	0x0332D5A8 ADD W10, W9, 0x1
	0x0332D5AC CMP W10, W8
	0x0332D5B0 STR W10, [X20 + 0x10]
	0x0332D5B4 B.GE 0x332D604
	0x0332D5B8 MOV W10, W31
	0x0332D5BC ADD W11, W9, W10
	0x0332D5C0 ADD W11, W11, 0x1
	0x0332D5C4 CMP W11, W8
	0x0332D5C8 B.CS 0x332D710
	0x0332D5CC LDRH W11, [X21, W11, SXTW]
	0x0332D5D0 SUB W11, W11, 0x30
	0x0332D5D4 CMP W11, 0xA
	0x0332D5D8 B.CC 0x332D5FC
	0x0332D5DC ADD W11, W9, W10
	0x0332D5E0 ADD W10, W10, 0x1
	0x0332D5E4 ADD W12, W9, W10
	0x0332D5E8 ADD W12, W12, 0x1
	0x0332D5EC ADD W11, W11, 0x2
	0x0332D5F0 CMP W12, W8
	0x0332D5F4 STR W11, [X20 + 0x10]
	0x0332D5F8 B.LT 0x332D5BC
	0x0332D5FC ADD W23, W10, 0x1
	0x0332D600 B 0x332D608
	0x0332D604 MOVZ W23, 0x1
	0x0332D608 ADRP X10, 0xDF9000
	0x0332D60C LDR X10, [X10 + 0xD90]
	0x0332D610 SUBS W8, W8, W9
	0x0332D614 LDR X24, [X10]
	0x0332D618 B.CC 0x332D624
	0x0332D61C CMP W8, W23
	0x0332D620 B.CS 0x332D630
	0x0332D624 MOV X0, X31
	0x0332D628 BL 0x339D6EC
	0x0332D62C LDR X21, [X20]
	0x0332D630 LDR X0, [X24 + 0x20]
	0x0332D634 LDRB W8, [X0 + 0x135]
	0x0332D638 TBNZ X8, 0x0, 0x332D640
	0x0332D63C BL 0x1C5C684
	0x0332D640 ADD X8, X21, X22, 0x1, LSL
	0x0332D644 MOV W9, W23
	0x0332D648 MOVZ W10, 0x3
	0x0332D64C STP X31, X31, [X19]
	0x0332D650 STP W31, W31, [X19 + 0x4]
	0x0332D654 STRB W10, [X19]
	0x0332D658 STP X8, X9, [X19 + 0x10]
	0x0332D65C LDP X20, X19, [X31 + 0x30]
	0x0332D660 LDP X22, X21, [X31 + 0x20]
	0x0332D664 LDP X24, X23, [X31 + 0x10]
	0x0332D668 LDR X30, [X31], #0x40
	0x0332D66C RET
	0x0332D670 ADD W10, W9, 0x1
	0x0332D674 CMP W10, W8
	0x0332D678 STR W10, [X20 + 0x10]
	0x0332D67C B.GE 0x332D6E8
	0x0332D680 MOV W11, W31
	0x0332D684 ADD W10, W9, W11
	0x0332D688 ADD W10, W10, 0x1
	0x0332D68C CMP W10, W8
	0x0332D690 B.CS 0x332D710
	0x0332D694 LDRH W10, [X21, W10, SXTW]
	0x0332D698 SUB W10, W10, 0x30
	0x0332D69C CMP W10, 0x9
	0x0332D6A0 B.HI 0x332D6C8
	0x0332D6A4 CBNZ W10, 0x332D700
	0x0332D6A8 ADD W10, W9, W11
	0x0332D6AC ADD W11, W11, 0x1
	0x0332D6B0 ADD W12, W9, W11
	0x0332D6B4 ADD W12, W12, 0x1
	0x0332D6B8 ADD W10, W10, 0x2
	0x0332D6BC CMP W12, W8
	0x0332D6C0 STR W10, [X20 + 0x10]
	0x0332D6C4 B.LT 0x332D684
	0x0332D6C8 ADD W8, W11, 0x1
	0x0332D6CC B 0x332D6EC
	0x0332D6D0 ADD W12, W9, 0x1
	0x0332D6D4 STR W12, [X20 + 0x10]
	0x0332D6D8 STP X31, X31, [X19]
	0x0332D6DC MOVZ W8, 0x2
	0x0332D6E0 STP W10, W11, [X19 + 0x4]
	0x0332D6E4 B 0x332D59C
	0x0332D6E8 MOVZ W8, 0x1
	0x0332D6EC MOVZ W9, 0x2
	0x0332D6F0 STP X31, X31, [X19]
	0x0332D6F4 STP W31, W8, [X19 + 0x4]
	0x0332D6F8 STRB W9, [X19]
	0x0332D6FC B 0x332D5A0
	0x0332D700 ADD W9, W9, W11

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X19, 0x10B0000
	015 Move W8, [X19+3258]
	016 Move X20, X4
	017 Move X21, X2
	018 Move X22, X1
	019 Move [X31+24], X3
	020 Move [X31+40], X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {45}
	025 Move X0, 0xDC9000
	026 Move X0, [X0+3144]
	027 Call 0x1C17CF4
	028 Move X0, 0xDFC000
	029 Move X0, [X0+1352]
	030 Call 0x1C17CF4
	031 Move X0, 0xDFC000
	032 Move X0, [X0+664]
	033 Call 0x1C17CF4
	034 Move X0, 0xDF6000
	035 Move X0, [X0+40]
	036 Call 0x1C17CF4
	037 Move X0, 0xDFC000
	038 Move X0, [X0+1328]
	039 Call 0x1C17CF4
	040 Move X0, 0xDC9000
	041 Move X0, [X0+1392]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X19+3258], W8
	045 Move X19, 0xDC9000
	046 Move X19, [X19+1392]
	047 Move X24, X20
	048 NotImplemented "Instruction STRH not yet implemented."
	049 Compare X20, 0
	050 JumpIfNotEqual {55}
	051 Move W0, 16
	052 Move X1, X31
	053 Call StringBuilderCache.Acquire, X0
	054 Move X24, X0
	055 Move X0, [X19]
	056 Move [X31], X20
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X8, 0x81E3
	062 Move X11, [X31+40]
	063 NotImplemented "Instruction MOVK not yet implemented."
	064 NotImplemented "Instruction MOVK not yet implemented."
	065 NotImplemented "Instruction MOVK not yet implemented."
	066 NotImplemented "Instruction SMULH not yet implemented."
	067 Move X9, 0xC000
	068 Add X8, X8, X11
	069 NotImplemented "Instruction MOVK not yet implemented."
	070 NotImplemented "Instruction SBFM not yet implemented."
	071 NotImplemented "Instruction MOVK not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Add X8, X10, X8
	074 NotImplemented "Instruction MSUB not yet implemented."
	075 NotImplemented "Instruction CSNEG not yet implemented."
	076 Move [X31+12], W8
	077 NotImplemented "Instruction CSNEG not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move [X31+56], X31
	080 Move X9, 0x10B5
	081 NotImplemented "Instruction MOVK not yet implemented."
	082 NotImplemented "Instruction MOVK not yet implemented."
	083 NotImplemented "Instruction MOVK not yet implemented."
	084 NotImplemented "Instruction SMULH not yet implemented."
	085 Move X15, X9
	086 ShiftRight X15, 63
	087 And X15, X15, 0x7FFFFFFF
	088 NotImplemented "Instruction SBFM not yet implemented."
	089 Move W10, 0xAAAB
	090 Add W9, W9, W15
	091 NotImplemented "Instruction MOVK not yet implemented."
	092 NotImplemented "Instruction SXTB not yet implemented."
	093 NotImplemented "Instruction SMADDL not yet implemented."
	094 Move X15, X10
	095 ShiftRight X15, 63
	096 And X15, X15, 0x7FFFFFFF
	097 Move X10, X10
	098 ShiftRight X10, 34
	099 And X10, X10, 0x7FFFFFFF
	100 Move X12, 0xF7D5
	101 Add W10, W10, W15
	102 Move X15, 0x42BD
	103 NotImplemented "Instruction MOVK not yet implemented."
	104 NotImplemented "Instruction MOVK not yet implemented."
	105 NotImplemented "Instruction MOVK not yet implemented."
	106 NotImplemented "Instruction MOVK not yet implemented."
	107 Move W11, 24
	108 NotImplemented "Instruction MOVK not yet implemented."
	109 NotImplemented "Instruction MOVK not yet implemented."
	110 NotImplemented "Instruction MSUB not yet implemented."
	111 NotImplemented "Instruction SMULH not yet implemented."
	112 NotImplemented "Instruction SMULH not yet implemented."
	113 Move X15, X11
	114 ShiftRight X15, 63
	115 And X15, X15, 0x7FFFFFFF
	116 Move X11, X11
	117 ShiftRight X11, 26
	118 And X11, X11, 0x7FFFFFFF
	119 Add X12, X12, X8
	120 Move W13, 0x8889
	121 Move W10, 0x9680
	122 Add W11, W11, W15
	123 NotImplemented "Instruction SBFM not yet implemented."
	124 NotImplemented "Instruction MOVK not yet implemented."
	125 NotImplemented "Instruction MOVK not yet implemented."
	126 Add X12, X15, X12
	127 NotImplemented "Instruction SXTH not yet implemented."
	128 Move X20, 0xDFC000
	129 NotImplemented "Instruction SMADDL not yet implemented."
	130 NotImplemented "Instruction MSUB not yet implemented."
	131 Move X20, [X20+1352]
	132 NotImplemented "Instruction SMADDL not yet implemented."
	133 Move [X31+32], X8
	134 Move X8, X15
	135 ShiftRight X8, 32
	136 And X8, X8, 0x7FFFFFFF
	137 Move X10, X13
	138 ShiftRight X10, 32
	139 And X10, X10, 0x7FFFFFFF
	140 Add W8, W8, W11
	141 Add W10, W10, W12
	142 Move W13, W8
	143 ShiftRight W13, 5
	144 And W13, W13, 0x7FFFFFFF
	145 Move W14, 60
	146 Add W8, W13, W8
	147 NotImplemented "Instruction SBFM not yet implemented."
	148 Add W10, W13, W10
	149 NotImplemented "Instruction MSUB not yet implemented."
	150 Move X29, -41508864
	151 Move W26, W31
	152 Move X27, X31
	153 NotImplemented "Instruction MSUB not yet implemented."
	154 Move W23, 10
	155 NotImplemented "Instruction SXTB not yet implemented."
	156 NotImplemented "Instruction SXTH not yet implemented."
	157 Add X29, X29, 1705
	158 Move [X31+8], W9
	159 Move [X31+16], W8
	160 Move [X31+20], W10
	161 NotImplemented "Instruction CMP not yet implemented."
	162 NotImplemented "Instruction LDRH not yet implemented."
	163 NotImplemented "Instruction CMP not yet implemented."
	164 NotImplemented "Instruction CMP not yet implemented."
	165 NotImplemented "Instruction CMP not yet implemented."
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X0, [X20]
	168 Move W8, [X0+224]
	169 Compare W8, 0
	170 JumpIfNotEqual {172}
	171 Call 0x1C17DFC
	172 Move X0, X22
	173 Move X1, X21
	174 Move W2, W26
	175 Move X3, X31
	176 Call DateTimeFormat.ParseNextChar, X0, X1
	177 Move TEMP, X0
	178 And TEMP, TEMP, -2147483648
	179 Compare TEMP, -2147483648
	180 JumpIfEqual {463}
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X8, 0xDFC000
	183 Move X8, [X8+1328]
	184 NotImplemented "Instruction STRH not yet implemented."
	185 Move X8, [X8]
	186 Move W9, [X8+224]
	187 Compare W9, 0
	188 JumpIfNotEqual {191}
	189 Move X0, X8
	190 Call 0x1C17DFC
	191 Move X0, [X31+40]
	192 Move X3, [X31+24]
	193 And X8, X27, 0
	194 Or X27, X8, 1
	195 Add X1, X31, 52
	196 Move X2, X27
	197 Move X4, X24
	198 Call TimeSpanFormat.FormatCustomized, X0, X1, X2, X3
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Subtract W9, W25, 92
	201 Move W8, W9
	202 ShiftRight W8, 1
	203 And W8, W8, 0x7FFF
	204 NotImplemented "Instruction BFM not yet implemented."
	205 And W9, W8, 0xFFFF
	206 NotImplemented "Instruction CMP not yet implemented."
	207 And X8, X8, 0xFFFF
	208 NotImplemented "Instruction ADR not yet implemented."
	209 Move W10, [X29]
	210 Add X9, X9, X10
	211 CallNoReturn X9
	212 Move X0, [X20]
	213 Move W8, [X0+224]
	214 Compare W8, 0
	215 JumpIfNotEqual {217}
	216 Call 0x1C17DFC
	217 Move X0, X22
	218 Move X1, X21
	219 Move W2, W26
	220 Move X3, X31
	221 Call DateTimeFormat.ParseNextChar, X0, X1
	222 Move TEMP, X0
	223 And TEMP, TEMP, -2147483648
	224 Compare TEMP, -2147483648
	225 JumpIfEqual {463}
	226 Compare X24, 0
	227 JumpIfEqual {488}
	228 Move W1, W0
	229 Move X0, X24
	230 Move X2, X31
	231 Call StringBuilder.Append, X0, X1
	232 Move W25, 2
	233 NotImplemented "Instruction CMP not yet implemented."
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move X0, [X20]
	236 Move W8, [X0+224]
	237 Compare W8, 0
	238 JumpIfNotEqual {240}
	239 Call 0x1C17DFC
	240 Move W3, 70
	241 Move X0, X22
	242 Move X1, X21
	243 Move W2, W26
	244 Move X4, X31
	245 Call DateTimeFormat.ParseRepeatPattern, X0, X1, X2
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move X19, [X31+32]
	248 Move W8, 7
	249 Move W25, W0
	250 Subtract W0, W8, W0
	251 Move X28, X27
	252 Move [X31+56], X19
	253 Call TimeSpanParse.Pow10, X0
	254 NotImplemented "Instruction SDIV not yet implemented."
	255 Subtract W27, W25, 1
	256 Move [X31+56], X8
	257 NotImplemented "Instruction SBFM not yet implemented."
	258 Add X19, X9, 24
	259 Or X9, X31, 0x6666666666666666
	260 NotImplemented "Instruction MOVK not yet implemented."
	261 NotImplemented "Instruction SMULH not yet implemented."
	262 NotImplemented "Instruction SBFM not yet implemented."
	263 Add X9, X10, X9
	264 NotImplemented "Instruction MSUB not yet implemented."
	265 Compare X8, 0
	266 JumpIfNotEqual {412}
	267 Add W8, W27, 1
	268 Subtract W27, W27, 1
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Subtract X19, X19, 8
	271 Move X8, X9
	272 Move [X31+56], X9
	273 Move X27, X28
	274 NotImplemented "Instruction CMP not yet implemented."
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Move X0, [X20]
	277 Move W8, [X0+224]
	278 Compare W8, 0
	279 JumpIfNotEqual {281}
	280 Call 0x1C17DFC
	281 Move W3, 115
	282 Move X0, X22
	283 Move X1, X21
	284 Move W2, W26
	285 Move X4, X31
	286 Call DateTimeFormat.ParseRepeatPattern, X0, X1, X2
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Move W25, W0
	289 Move X0, [X20]
	290 Move W8, [X0+224]
	291 Compare W8, 0
	292 JumpIfNotEqual {294}
	293 Call 0x1C17DFC
	294 Move W1, [X31+20]
	295 Move X0, [X20]
	296 Move W8, [X0+224]
	297 Compare W8, 0
	298 JumpIfNotEqual {300}
	299 Call 0x1C17DFC
	300 Move X0, X22
	301 Move X1, X21
	302 Move W2, W26
	303 Move X3, X24
	304 Move X4, X31
	305 Call DateTimeFormat.ParseQuoteString, X0, X1, X2
	306 Move W25, W0
	307 Move X0, [X20]
	308 Move W8, [X0+224]
	309 Compare W8, 0
	310 JumpIfNotEqual {312}
	311 Call 0x1C17DFC
	312 Move W3, 109
	313 Move X0, X22
	314 Move X1, X21
	315 Move W2, W26
	316 Move X4, X31
	317 Call DateTimeFormat.ParseRepeatPattern, X0, X1, X2
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Move W25, W0
	320 Move X0, [X20]
	321 Move W8, [X0+224]
	322 Compare W8, 0
	323 JumpIfNotEqual {325}
	324 Call 0x1C17DFC
	325 Move W1, [X31+16]
	326 Move X0, [X20]
	327 Move W8, [X0+224]
	328 Compare W8, 0
	329 JumpIfNotEqual {331}
	330 Call 0x1C17DFC
	331 Move X0, X22
	332 Move X1, X21
	333 Move W2, W26
	334 Move W3, W25
	335 Move X4, X31
	336 Call DateTimeFormat.ParseRepeatPattern, X0, X1, X2
	337 NotImplemented "Instruction CMP not yet implemented."
	338 Move W25, W0
	339 Move X0, [X20]
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1C17DFC
	344 Move W1, [X31+12]
	345 Move W3, 1
	346 Move X0, X24
	347 Move W2, W25
	348 Move X4, X31
	349 Call DateTimeFormat.FormatDigits, X0, X1, X2, X3
	350 Move X0, [X20]
	351 Move W8, [X0+224]
	352 Compare W8, 0
	353 JumpIfNotEqual {355}
	354 Call 0x1C17DFC
	355 Move X0, X22
	356 Move X1, X21
	357 Move W2, W26
	358 Move W3, W25
	359 Move X4, X31
	360 Call DateTimeFormat.ParseRepeatPattern, X0, X1, X2
	361 NotImplemented "Instruction CMP not yet implemented."
	362 Move X19, [X31+32]
	363 Move W8, 7
	364 Move W25, W0
	365 Subtract W0, W8, W0
	366 Move [X31+56], X19
	367 Call TimeSpanParse.Pow10, X0
	368 Move X8, [X20]
	369 NotImplemented "Instruction SDIV not yet implemented."
	370 Move [X31+56], X9
	371 Move W9, [X8+224]
	372 Compare W9, 0
	373 JumpIfNotEqual {377}
	374 Move X0, X8
	375 Call 0x1C17DFC
	376 Move X8, [X20]
	377 Move X8, [X8+184]
	378 Move X8, [X8+40]
	379 Compare X8, 0
	380 JumpIfEqual {488}
	381 Move W10, [X8+24]
	382 Subtract W9, W25, 1
	383 NotImplemented "Instruction CMP not yet implemented."
	384 Move X10, 0xDC9000
	385 Move X10, [X10+3144]
	386 Add X8, X8, W9
	387 Move X19, [X8+32]
	388 Move X0, [X10]
	389 Move X0, [X20]
	390 Move W8, [X0+224]
	391 Compare W8, 0
	392 JumpIfNotEqual {394}
	393 Call 0x1C17DFC
	394 Move X0, X22
	395 Move X1, X21
	396 Move W2, W26
	397 Move W3, W25
	398 Move X4, X31
	399 Call DateTimeFormat.ParseRepeatPattern, X0, X1, X2
	400 NotImplemented "Instruction CMP not yet implemented."
	401 Move W25, W0
	402 Move X0, [X20]
	403 Move W8, [X0+224]
	404 Compare W8, 0
	405 JumpIfNotEqual {407}
	406 Call 0x1C17DFC
	407 Move W1, [X31+8]
	408 Move X0, X24
	409 Move W2, W25
	410 Move X3, X31
	411 Call DateTimeFormat.FormatDigits, X0, X1, X2
	412 Move X0, [X20]
	413 Move W8, [X0+224]
	414 Compare W8, 0
	415 JumpIfNotEqual {418}
	416 Call 0x1C17DFC
	417 Move X0, [X20]
	418 Move X8, [X0+184]
	419 Move X8, [X8+40]
	420 Compare X8, 0
	421 JumpIfEqual {488}
	422 Move W9, [X8+24]
	423 NotImplemented "Instruction CMP not yet implemented."
	424 Move X9, 0xDC9000
	425 Move X9, [X9+3144]
	426 Move X19, [X8]
	427 Move X27, X28
	428 Move X0, [X9]
	429 Move W9, [X0+224]
	430 Compare W9, 0
	431 JumpIfNotEqual {433}
	432 Call 0x1C17DFC
	433 Move X0, X31
	434 Call CultureInfo.get_InvariantCulture
	435 Move X2, X0
	436 Add X0, X31, 56
	437 Move X1, X19
	438 Move X3, X31
	439 Call Int64.ToString, X0, X1, X2
	440 Compare X24, 0
	441 JumpIfEqual {488}
	442 Move X1, X0
	443 Move X0, X24
	444 Move X2, X31
	445 Call StringBuilder.Append, X0, X1
	446 Add W26, W25, W26
	447 NotImplemented "Instruction CMP not yet implemented."
	448 Move X0, X24
	449 Move X20, [X31+144]
	450 Move X19, [X31+152]
	451 Move X22, [X31+128]
	452 Move X21, [X31+136]
	453 Move X24, [X31+112]
	454 Move X23, [X31+120]
	455 Move X26, [X31+96]
	456 Move X25, [X31+104]
	457 Move X28, [X31+80]
	458 Move X27, [X31+88]
	459 Move X29, [X31+64]
	460 Move X30, [X31+72]
	461 Add X31, X31, 160
	462 Return X0
	463 Move X8, [X31]
	464 Compare X8, 0
	465 JumpIfNotEqual {469}
	466 Move X0, X24
	467 Move X1, X31
	468 Call StringBuilderCache.Release, X0
	469 Move X0, 0xDF4000
	470 Move X0, [X0+3080]
	471 Call 0x1C17D08
	472 Call 0x1C17F10
	473 Move X19, X0
	474 Move X0, 0xDF6000
	475 Move X0, [X0+1560]
	476 Call 0x1C17D08
	477 Move X1, X0
	478 Move X0, X19
	479 Move X2, X31
	480 Call FormatException..ctor, X0, X1
	481 Move X0, 0xDFC000
	482 Move X0, [X0+1360]
	483 Call 0x1C17D08
	484 Move X1, X0
	485 Move X0, X19
	486 Call 0x1C17DEC
	487 Call 0x1C17F28
	488 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x0332DC14 STR W10, [X31 + 0x1A0]
	0x0332DC18 LDRB W10, [X31 + 0xAE]
	0x0332DC1C STR W8, [X31 + 0x180]
	0x0332DC20 LDRH W8, [X31 + 0xA8]
	0x0332DC24 STR W11, [X31 + 0x1C]
	0x0332DC28 LDRB W11, [X31 + 0xAA]
	0x0332DC2C STURH W9, [X31 + 0x61]
	0x0332DC30 LDRB W9, [X31 + 0xA6]
	0x0332DC34 STUR V1, [X31 + 0x6C]
	0x0332DC38 LDR V1, [X31 + 0x19]
	0x0332DC3C STRB W10, [X31 + 0x63]
	0x0332DC40 LDRH W10, [X31 + 0xA4]
	0x0332DC44 STRB W11, [X31 + 0x43]
	0x0332DC48 LDR W11, [X31 + 0x1C0]
	0x0332DC4C STURH W8, [X31 + 0x41]
	0x0332DC50 LDR W8, [X31 + 0x1A0]
	0x0332DC54 STUR V1, [X31 + 0x4C]
	0x0332DC58 LDR V1, [X31 + 0x17]
	0x0332DC5C STRB W9, [X31 + 0x23]
	0x0332DC60 LDR W9, [X31 + 0x180]
	0x0332DC64 AND W0, W21, 0x1
	0x0332DC68 ADD X1, X31, 0x80
	0x0332DC6C ADD X2, X31, 0x60
	0x0332DC70 ADD X3, X31, 0x40
	0x0332DC74 ADD X4, X31, 0x20
	0x0332DC78 ADD X5, X31, 0x0
	0x0332DC7C ADD X6, X31, 0x168
	0x0332DC80 STURH W10, [X31 + 0x21]
	0x0332DC84 STR W11, [X31 + 0x7C]
	0x0332DC88 STR W8, [X31 + 0x5C]
	0x0332DC8C STR W9, [X31 + 0x3C]
	0x0332DC90 STUR V1, [X31 + 0x2C]
	0x0332DC94 STUR V0, [X31 + 0xC]
	0x0332DC98 BL 0x332CE08
	0x0332DC9C TBZ X0, 0x0, 0x332DCB4
	0x0332DCA0 LDR X8, [X31 + 0x168]
	0x0332DCA4 TBNZ X21, 0x0, 0x332DCC8

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+80], X30
	003 Move [X31+96], X20
	004 Move [X31+104], X19
	005 Move X20, 0x10B0000
	006 Move X19, 0xDFC000
	007 Move W8, [X20+3259]
	008 Move X19, [X19+1328]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xDFC000
	014 Move X0, [X0+1328]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+3259], W8
	018 Add X8, X31, 40
	019 Move W0, W31
	020 Call FormatLiterals.InitInvariant, X0
	021 Move X8, [X19]
	022 Move X9, [X31+72]
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 NotImplemented "Instruction LDUR not yet implemented."
	025 Move X8, [X8+184]
	026 Move W0, 1
	027 Move [X8+32], X9
	028 Move [X8], V1
	029 Move [X8+8], V0
	030 Add X8, X31, 0
	031 Call FormatLiterals.InitInvariant, X0
	032 Move X8, [X19]
	033 Move X9, [X31+32]
	034 Move V1, [X31]
	035 Move V0, [X31+16]
	036 Move X20, [X31+96]
	037 Move X19, [X31+104]
	038 Move X8, [X8+184]
	039 Move X30, [X31+80]
	040 Move [X8+72], X9
	041 Move [X8+56], V0
	042 Move [X8+40], V1
	043 Add X31, X31, 112
	044 Return 

