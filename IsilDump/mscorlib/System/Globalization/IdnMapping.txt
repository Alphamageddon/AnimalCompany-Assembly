Type: System.Globalization.IdnMapping

Method: System.Void .ctor()

Disassembly:
	0x0334CC78 MOVZ W29, 0x1
	0x0334CC7C MOV W21, W31
	0x0334CC80 MOVN W23, 0x2FEF
	0x0334CC84 MOVN W24, 0x2029
	0x0334CC88 MOVN W25, 0x2069
	0x0334CC8C MOVZ W26, 0x200E
	0x0334CC90 MOVN W27, 0x200E
	0x0334CC94 MOVZ W28, 0x1
	0x0334CC98 MOVK W29, 0x6000000
	0x0334CC9C LDR X0, [X22]
	0x0334CCA0 LDR W8, [X0 + 0xE0]
	0x0334CCA4 CBNZ W8, 0x334CCAC
	0x0334CCA8 BL 0x1C16DFC
	0x0334CCAC MOV X0, X20
	0x0334CCB0 MOV W1, W21
	0x0334CCB4 MOV X2, X31
	0x0334CCB8 BL 0x331BEA8
	0x0334CCBC CMP W0, 0xB
	0x0334CCC0 B.EQ 0x334CD74
	0x0334CCC4 CMP W0, 0xE
	0x0334CCC8 B.EQ 0x334CD5C
	0x0334CCCC SUB W8, W0, 0x10
	0x0334CCD0 CMP W8, 0x2
	0x0334CCD4 B.CC 0x334CDBC
	0x0334CCD8 MOV X0, X20
	0x0334CCDC MOV W1, W21
	0x0334CCE0 MOV X2, X31
	0x0334CCE4 BL 0x3222A1C
	0x0334CCE8 ADD W8, W0, W25
	0x0334CCEC AND W8, W8, 0xFFFF
	0x0334CCF0 CMP W8, 0x6
	0x0334CCF4 B.CC 0x334CDBC
	0x0334CCF8 ADD W8, W0, W24
	0x0334CCFC AND W8, W8, 0xFFFF

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1091000
	006 Move X21, 0xDDE000
	007 Move W8, [X20+3476]
	008 Move X21, [X21+4008]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDDE000
	015 Move X0, [X0+4008]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3476], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move X9, -42336256
	025 Move X10, -42328064
	026 Move V0, [X9+216]
	027 Move V1, [X10+1120]
	028 Move W8, 45
	029 Move W11, 128
	030 NotImplemented "Instruction STRH not yet implemented."
	031 Move [X20+44], W11
	032 Move [X20+20], V0
	033 Move [X20+36], D1
	034 Move [X19+24], X20
	035 Move X0, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X1, X31
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call Object..ctor, X0
	042 Return 

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x0334CD40 AND W8, W0, 0xFFFF
	0x0334CD44 SUB W9, W8, 0x340
	0x0334CD48 CMP W9, 0x2
	0x0334CD4C B.CC 0x334CDBC
	0x0334CD50 CMP W8, W26
	0x0334CD54 B.NE 0x334CD90
	0x0334CD58 B 0x334CDBC
	0x0334CD5C MOV X0, X20
	0x0334CD60 MOV W1, W21
	0x0334CD64 MOV X2, X31
	0x0334CD68 BL 0x3222A1C
	0x0334CD6C ANDS W31, W0, 0xFFFF
	0x0334CD70 B.EQ 0x334CDBC
	0x0334CD74 MOV X0, X20
	0x0334CD78 MOV W1, W21
	0x0334CD7C MOV X2, X31
	0x0334CD80 BL 0x3222A1C
	0x0334CD84 AND W8, W0, 0xFFFF
	0x0334CD88 CMP W8, 0x7F
	0x0334CD8C B.HI 0x334CDBC
	0x0334CD90 LDR W8, [X20 + 0x10]
	0x0334CD94 ADD W21, W21, 0x1
	0x0334CD98 CMP W21, W8
	0x0334CD9C B.LT 0x334CC9C
	0x0334CDA0 B 0x334CE30
	0x0334CDA4 ADD W8, W27, W0, UXTH
	0x0334CDA8 CMP W8, 0x1A
	0x0334CDAC B.HI 0x334CD90
	0x0334CDB0 LSLV W8, W28, W8
	0x0334CDB4 ANDS W31, W8, W29, 0x0
	0x0334CDB8 B.EQ 0x334CD90
	0x0334CDBC ADD W8, W19, W21
	0x0334CDC0 STR W8, [X31 + 0xC]
	0x0334CDC4 ADRP X0, 0xDA7000
	0x0334CDC8 LDR X0, [X0 + 0x758]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1091000
	006 Move W8, [X21+3477]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xDDE000
	014 Move X0, [X0+4016]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3477], W8
	018 Compare X20, 0
	019 JumpIfEqual {35}
	020 Move X8, 0xDDE000
	021 Move X8, [X8+4016]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CSEL not yet implemented."
	026 Compare X8, 0
	027 JumpIfEqual {41}
	028 Move W9, [X19+16]
	029 Move W10, [X8+16]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W9, [X19+17]
	032 Move W8, [X8+17]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSET not yet implemented."
	035 Move W0, W31
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return X0
	041 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x0334CDCC BL 0x1C16D08
	0x0334CDD0 ADD X1, X31, 0xC
	0x0334CDD4 BL 0x1C16E04
	0x0334CDD8 MOV X19, X0

ISIL:
	001 Move W8, [X0+16]
	002 Move W9, [X0+17]
	003 Or W0, W9, W8
	004 Return X0

Method: System.String GetAscii(System.String unicode)

Disassembly:
	0x0334CDDC ADRP X0, 0xDDE000
	0x0334CDE0 LDR X0, [X0 + 0x60]
	0x0334CDE4 BL 0x1C16D08
	0x0334CDE8 MOV X1, X19
	0x0334CDEC MOV X2, X31
	0x0334CDF0 BL 0x321EFD0
	0x0334CDF4 MOV X19, X0
	0x0334CDF8 ADRP X0, 0xDAF000
	0x0334CDFC LDR X0, [X0 + 0x578]
	0x0334CE00 BL 0x1C16D08
	0x0334CE04 BL 0x1C16F10
	0x0334CE08 MOV X1, X19
	0x0334CE0C MOV X2, X31
	0x0334CE10 MOV X20, X0
	0x0334CE14 BL 0x3314A68
	0x0334CE18 ADRP X0, 0xDDE000
	0x0334CE1C LDR X0, [X0 + 0x68]
	0x0334CE20 BL 0x1C16D08
	0x0334CE24 MOV X1, X0
	0x0334CE28 MOV X0, X20
	0x0334CE2C BL 0x1C16DEC
	0x0334CE30 LDP X20, X19, [X31 + 0x60]
	0x0334CE34 LDP X22, X21, [X31 + 0x50]
	0x0334CE38 LDP X24, X23, [X31 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {9}
	005 Move W3, [X1+16]
	006 Move W2, W31
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Move X0, 0xDAD000
	010 Move X0, [X0+1320]
	011 Call 0x1C17D08
	012 Call 0x1C17F10
	013 Move X19, X0
	014 Move X0, 0xDDE000
	015 Move X0, [X0+1144]
	016 Call 0x1C17D08
	017 Move X1, X0
	018 Move X0, X19
	019 Move X2, X31
	020 Call ArgumentNullException..ctor, X0, X1
	021 Move X0, 0xDDE000
	022 Move X0, [X0+4024]
	023 Call 0x1C17D08
	024 Move X1, X0
	025 Move X0, X19
	026 Call 0x1C17DEC

Method: System.String GetAscii(System.String unicode, System.Int32 index, System.Int32 count)

Disassembly:
	0x0334CE3C LDP X26, X25, [X31 + 0x30]
	0x0334CE40 LDP X28, X27, [X31 + 0x20]
	0x0334CE44 LDP X29, X30, [X31 + 0x10]
	0x0334CE48 ADD X31, X31, 0x70
	0x0334CE4C RET
	0x0334CE50 BL 0x1C16F20
	0x0334CE54 STP X30, X19, [X31 - 0x10]!
	0x0334CE58 CBZ X1, 0x334CE6C
	0x0334CE5C LDR W3, [X1 + 0x10]
	0x0334CE60 MOV W2, W31
	0x0334CE64 LDP X30, X19, [X31], #0x10
	0x0334CE68 B 0x334CEB4
	0x0334CE6C ADRP X0, 0xDAC000
	0x0334CE70 LDR X0, [X0 + 0x528]
	0x0334CE74 BL 0x1C16D08
	0x0334CE78 BL 0x1C16F10
	0x0334CE7C MOV X19, X0
	0x0334CE80 ADRP X0, 0xDDD000
	0x0334CE84 LDR X0, [X0 + 0x438]
	0x0334CE88 BL 0x1C16D08
	0x0334CE8C MOV X1, X0
	0x0334CE90 MOV X0, X19
	0x0334CE94 MOV X2, X31
	0x0334CE98 BL 0x330E100
	0x0334CE9C ADRP X0, 0xDDE000
	0x0334CEA0 LDR X0, [X0 + 0x70]
	0x0334CEA4 BL 0x1C16D08
	0x0334CEA8 MOV X1, X0
	0x0334CEAC MOV X0, X19
	0x0334CEB0 BL 0x1C16DEC
	0x0334CEB4 STP X30, X19, [X31 - 0x10]!
	0x0334CEB8 CBZ X1, 0x334CF00
	0x0334CEBC TBNZ X2, 0x1F, 0x334CF34
	0x0334CEC0 TBNZ X3, 0x1F, 0x334CEE0
	0x0334CEC4 LDR W8, [X1 + 0x10]
	0x0334CEC8 ADD W9, W3, W2
	0x0334CECC CMP W9, W8
	0x0334CED0 B.GT 0x334CEE0
	0x0334CED4 MOV W4, W31
	0x0334CED8 LDP X30, X19, [X31], #0x10
	0x0334CEDC B 0x334BF04
	0x0334CEE0 ADRP X0, 0xDAF000
	0x0334CEE4 LDR X0, [X0 + 0x760]
	0x0334CEE8 BL 0x1C16D08
	0x0334CEEC BL 0x1C16F10
	0x0334CEF0 MOV X19, X0
	0x0334CEF4 ADRP X0, 0xDDE000
	0x0334CEF8 LDR X0, [X0 + 0x78]
	0x0334CEFC B 0x334CF50
	0x0334CF00 ADRP X0, 0xDAC000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {26}
	005 Move TEMP, X2
	006 And TEMP, TEMP, -2147483648
	007 Compare TEMP, -2147483648
	008 JumpIfEqual {38}
	009 Move TEMP, X3
	010 And TEMP, TEMP, -2147483648
	011 Compare TEMP, -2147483648
	012 JumpIfEqual {19}
	013 Move W8, [X1+16]
	014 Add W9, W3, W2
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move W4, 1
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Move X0, 0xDB0000
	020 Move X0, [X0+1888]
	021 Call 0x1C17D08
	022 Call 0x1C17F10
	023 Move X19, X0
	024 Move X0, 0xDDE000
	025 Move X0, [X0+4032]
	026 Move X0, 0xDAD000
	027 Move X0, [X0+1320]
	028 Call 0x1C17D08
	029 Call 0x1C17F10
	030 Move X19, X0
	031 Move X0, 0xDDE000
	032 Move X0, [X0+1144]
	033 Call 0x1C17D08
	034 Move X1, X0
	035 Move X0, X19
	036 Move X2, X31
	037 Call ArgumentNullException..ctor, X0, X1
	038 Move X0, 0xDB0000
	039 Move X0, [X0+1888]
	040 Call 0x1C17D08
	041 Call 0x1C17F10
	042 Move X19, X0
	043 Move X0, 0xDDE000
	044 Move X0, [X0+4040]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Move X2, X31
	049 Call ArgumentOutOfRangeException..ctor, X0, X1
	050 Move X0, 0xDDE000
	051 Move X0, [X0+4048]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X19
	055 Call 0x1C17DEC

Method: System.String Convert(System.String input, System.Int32 index, System.Int32 count, System.Boolean toAscii)

Disassembly:
	0x0334CF04 LDR X0, [X0 + 0x528]
	0x0334CF08 BL 0x1C16D08
	0x0334CF0C BL 0x1C16F10
	0x0334CF10 MOV X19, X0
	0x0334CF14 ADRP X0, 0xDDD000
	0x0334CF18 LDR X0, [X0 + 0x438]
	0x0334CF1C BL 0x1C16D08
	0x0334CF20 MOV X1, X0
	0x0334CF24 MOV X0, X19
	0x0334CF28 MOV X2, X31
	0x0334CF2C BL 0x330E100
	0x0334CF30 B 0x334CF64
	0x0334CF34 ADRP X0, 0xDAF000
	0x0334CF38 LDR X0, [X0 + 0x760]
	0x0334CF3C BL 0x1C16D08
	0x0334CF40 BL 0x1C16F10
	0x0334CF44 MOV X19, X0
	0x0334CF48 ADRP X0, 0xDDD000
	0x0334CF4C LDR X0, [X0 + 0xFC8]
	0x0334CF50 BL 0x1C16D08
	0x0334CF54 MOV X1, X0
	0x0334CF58 MOV X0, X19
	0x0334CF5C MOV X2, X31
	0x0334CF60 BL 0x3316014
	0x0334CF64 ADRP X0, 0xDDE000
	0x0334CF68 LDR X0, [X0 + 0x80]
	0x0334CF6C BL 0x1C16D08
	0x0334CF70 MOV X1, X0
	0x0334CF74 MOV X0, X19
	0x0334CF78 BL 0x1C16DEC
	0x0334CF7C SUB X31, X31, 0x70
	0x0334CF80 STP X29, X30, [X31 + 0x10]
	0x0334CF84 STP X28, X27, [X31 + 0x20]
	0x0334CF88 STP X26, X25, [X31 + 0x30]
	0x0334CF8C STP X24, X23, [X31 + 0x40]
	0x0334CF90 STP X22, X21, [X31 + 0x50]
	0x0334CF94 STP X20, X19, [X31 + 0x60]
	0x0334CF98 ADRP X22, 0x1090000
	0x0334CF9C ADRP X23, 0xDA7000
	0x0334CFA0 LDRB W8, [X22 + 0xD9C]
	0x0334CFA4 LDR X23, [X23 + 0x8F0]
	0x0334CFA8 MOV W19, W2
	0x0334CFAC MOV X20, X1
	0x0334CFB0 MOV X21, X0
	0x0334CFB4 TBNZ X8, 0x0, 0x334CFCC
	0x0334CFB8 ADRP X0, 0xDA7000
	0x0334CFBC LDR X0, [X0 + 0x8F0]
	0x0334CFC0 BL 0x1C16CF4
	0x0334CFC4 MOVZ W8, 0x1
	0x0334CFC8 STRB W8, [X22 + 0xD9C]
	0x0334CFCC LDR X0, [X23]
	0x0334CFD0 LDP W24, W22, [X21 + 0x28]
	0x0334CFD4 BL 0x1C16F10
	0x0334CFD8 MOV X1, X31
	0x0334CFDC MOV X23, X0
	0x0334CFE0 BL 0x3231AC4
	0x0334CFE4 CBZ X20, 0x334D250
	0x0334CFE8 LDR W8, [X20 + 0x10]
	0x0334CFEC CMP W8, 0x1
	0x0334CFF0 B.LT 0x334D1B0
	0x0334CFF4 MOV W26, W31
	0x0334CFF8 MOV W25, W31
	0x0334CFFC MOV X0, X20
	0x0334D000 MOV W1, W26
	0x0334D004 MOV X2, X31
	0x0334D008 BL 0x3222A1C
	0x0334D00C LDRH W8, [X21 + 0x10]
	0x0334D010 LDR W9, [X20 + 0x10]
	0x0334D014 CMP W8, W0, UXTH
	0x0334D018 CSEL W25, W26, W25, EQ
	0x0334D01C ADD W26, W26, 0x1
	0x0334D020 CMP W26, W9
	0x0334D024 B.LT 0x334CFFC
	0x0334D028 TBNZ X25, 0x1F, 0x334D1B8
	0x0334D02C CBZ X23, 0x334D250
	0x0334D030 MOV X0, X23
	0x0334D034 MOV X1, X20
	0x0334D038 MOV W2, W31
	0x0334D03C MOV W3, W25
	0x0334D040 MOV X4, X31
	0x0334D044 BL 0x323351C
	0x0334D048 LDR W8, [X20 + 0x10]
	0x0334D04C CMP W25, 0x0
	0x0334D050 CSINC W26, W31, W25, LE
	0x0334D054 CMP W26, W8
	0x0334D058 B.GE 0x334D184
	0x0334D05C MOV W27, W31
	0x0334D060 LDR W28, [X21 + 0x14]
	0x0334D064 ADD W26, W26, 0x1
	0x0334D068 MOVZ W29, 0x1
	0x0334D06C MOV W25, W27
	0x0334D070 SUB W1, W26, 0x1
	0x0334D074 MOV X0, X20
	0x0334D078 MOV X2, X31
	0x0334D07C BL 0x3222A1C
	0x0334D080 AND W8, W0, 0xFFFF
	0x0334D084 CMP W8, 0x3A
	0x0334D088 B.CS 0x334D094
	0x0334D08C SUB W8, W8, 0x16
	0x0334D090 B 0x334D0B8
	0x0334D094 CMP W8, 0x5B
	0x0334D098 B.CS 0x334D0A4
	0x0334D09C SUB W8, W8, 0x41
	0x0334D0A0 B 0x334D0B8
	0x0334D0A4 CMP W8, 0x7B
	0x0334D0A8 B.CS 0x334D0B4
	0x0334D0AC SUB W8, W8, 0x61
	0x0334D0B0 B 0x334D0B8
	0x0334D0B4 LDR W8, [X21 + 0x14]
	0x0334D0B8 LDR W9, [X21 + 0x18]
	0x0334D0BC ADD W10, W9, W24
	0x0334D0C0 CMP W28, W10
	0x0334D0C4 B.LE 0x334D0DC
	0x0334D0C8 LDR W9, [X21 + 0x1C]
	0x0334D0CC SUB W11, W28, W24
	0x0334D0D0 ADD W10, W9, W24
	0x0334D0D4 CMP W28, W10
	0x0334D0D8 CSEL W9, W11, W9, LT
	0x0334D0DC CMP W8, W9
	0x0334D0E0 MADD W25, W8, W29, W25
	0x0334D0E4 B.LT 0x334D100
	0x0334D0E8 LDR W8, [X21 + 0x14]
	0x0334D0EC ADD W26, W26, 0x1
	0x0334D0F0 SUB W9, W8, W9
	0x0334D0F4 ADD W28, W8, W28
	0x0334D0F8 MUL W29, W9, W29
	0x0334D0FC B 0x334D070

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x1091000
	010 Move W8, [X24+3478]
	011 Move W19, W4
	012 Move W21, W3
	013 Move W22, W2
	014 Move X23, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xDB1000
	021 Move X0, [X0+2264]
	022 Call 0x1C17CF4
	023 Move X0, 0xDAA000
	024 Move X0, [X0+3144]
	025 Call 0x1C17CF4
	026 Move X0, 0xDDE000
	027 Move X0, [X0+4056]
	028 Call 0x1C17CF4
	029 Move X0, 0xDB1000
	030 Move X0, [X0+1936]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X24+3478], W8
	034 Compare X23, 0
	035 JumpIfEqual {140}
	036 Move X0, X23
	037 Move W1, W22
	038 Move W2, W21
	039 Move X3, X31
	040 Call String.Substring, X0, X1, X2
	041 Compare X0, 0
	042 JumpIfEqual {140}
	043 Move W8, [X0+16]
	044 Move X24, 0xDB1000
	045 Move X23, 0xDDE000
	046 Move X24, [X24+2264]
	047 Move X23, [X23+4056]
	048 Move X21, X0
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W22, W31
	051 Move X0, X21
	052 Move W1, W22
	053 Move X2, X31
	054 Call String.get_Chars, X0, X1
	055 And W8, W0, 0xFFFF
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move W8, [X21+16]
	058 Add W22, W22, 1
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X8, 0xDAA000
	061 Move X8, [X8+3144]
	062 Move X0, [X8]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X31
	068 Call CultureInfo.get_InvariantCulture
	069 Move X1, X0
	070 Move X0, X21
	071 Move X2, X31
	072 Call String.ToLower, X0, X1
	073 Move X21, X0
	074 Move X0, [X24]
	075 Move W1, 4
	076 Call 0x1C17D6C
	077 Move X1, [X23]
	078 Move X2, X31
	079 Move X22, X0
	080 Call RuntimeHelpers.InitializeArray, X0, X1
	081 Compare X21, 0
	082 JumpIfEqual {140}
	083 Move X0, X21
	084 Move X1, X22
	085 Move X2, X31
	086 Call String.Split, X0, X1
	087 Compare X0, 0
	088 JumpIfEqual {140}
	089 Move X8, [X0+24]
	090 Move X21, X0
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move W23, W31
	093 Move W22, W31
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Add X25, X21, W23
	096 Add X25, X25, 32
	097 Move X1, [X25]
	098 Compare X1, 0
	099 JumpIfEqual {140}
	100 Add W24, W23, 1
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move W9, [X1+16]
	103 Compare W9, 0
	104 JumpIfEqual {117}
	105 Move X0, X20
	106 Move W2, W22
	107 Move TEMP, X19
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {112}
	111 Call IdnMapping.ToAscii, X0, X1, X2
	112 Call IdnMapping.ToUnicode, X0, X1, X2
	113 Move X8, [X21+24]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X1, X0
	116 Move [X25], X0
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Compare X1, 0
	119 JumpIfEqual {140}
	120 Move W9, [X1+16]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move W23, W24
	123 Add W22, W9, W22
	124 Move X8, 0xDB0000
	125 Move X8, [X8+1936]
	126 Move X1, X21
	127 Move X20, [X31+48]
	128 Move X19, [X31+56]
	129 Move X22, [X31+32]
	130 Move X21, [X31+40]
	131 Move X0, [X8]
	132 Move X24, [X31+16]
	133 Move X23, [X31+24]
	134 Move X2, X31
	135 Move X30, [X31+64]
	136 Move X25, [X31+72]
	137 Call String.Join, X0, X1
	138 Return X0
	139 Call 0x1C17F28
	140 Call 0x1C17F20

Method: System.String ToAscii(System.String s, System.Int32 offset)

Disassembly:
	0x0334D100 MOV X0, X23
	0x0334D104 MOV X1, X31
	0x0334D108 BL 0x323260C
	0x0334D10C CMP W27, 0x0
	0x0334D110 SUB W1, W25, W27
	0x0334D114 ADD W2, W0, 0x1
	0x0334D118 CSET W3, EQ
	0x0334D11C MOV X0, X21
	0x0334D120 BL 0x334D2D8
	0x0334D124 MOV W24, W0
	0x0334D128 MOV X0, X23
	0x0334D12C MOV X1, X31
	0x0334D130 BL 0x323260C
	0x0334D134 ADD W8, W0, 0x1
	0x0334D138 SDIV W8, W25, W8
	0x0334D13C MOV X0, X23
	0x0334D140 MOV X1, X31
	0x0334D144 ADD W22, W8, W22
	0x0334D148 BL 0x323260C
	0x0334D14C CMP W22, 0x7F
	0x0334D150 B.LE 0x334D1DC
	0x0334D154 ADD W8, W0, 0x1
	0x0334D158 SDIV W9, W25, W8
	0x0334D15C MSUB W25, W9, W8, W25
	0x0334D160 MOV X0, X23
	0x0334D164 MOV W1, W25
	0x0334D168 MOV W2, W22
	0x0334D16C MOV X3, X31
	0x0334D170 BL 0x32341F8
	0x0334D174 LDR W8, [X20 + 0x10]
	0x0334D178 ADD W27, W25, 0x1
	0x0334D17C CMP W26, W8
	0x0334D180 B.LT 0x334D060
	0x0334D184 LDR X8, [X23]
	0x0334D188 MOV X0, X23
	0x0334D18C LDP X20, X19, [X31 + 0x60]
	0x0334D190 LDP X22, X21, [X31 + 0x50]
	0x0334D194 LDP X2, X1, [X8 + 0x168]
	0x0334D198 LDP X24, X23, [X31 + 0x40]
	0x0334D19C LDP X26, X25, [X31 + 0x30]
	0x0334D1A0 LDP X28, X27, [X31 + 0x20]
	0x0334D1A4 LDP X29, X30, [X31 + 0x10]
	0x0334D1A8 ADD X31, X31, 0x70
	0x0334D1AC BR X2
	0x0334D1B0 MOV W25, W31
	0x0334D1B4 TBZ X25, 0x1F, 0x334D02C
	0x0334D1B8 MOV X0, X20
	0x0334D1BC LDP X20, X19, [X31 + 0x60]
	0x0334D1C0 LDP X22, X21, [X31 + 0x50]
	0x0334D1C4 LDP X24, X23, [X31 + 0x40]
	0x0334D1C8 LDP X26, X25, [X31 + 0x30]
	0x0334D1CC LDP X28, X27, [X31 + 0x20]
	0x0334D1D0 LDP X29, X30, [X31 + 0x10]
	0x0334D1D4 ADD X31, X31, 0x70
	0x0334D1D8 RET
	0x0334D1DC ADD W8, W19, W26
	0x0334D1E0 STR W8, [X31 + 0xC]
	0x0334D1E4 ADRP X0, 0xDA6000
	0x0334D1E8 LDR X0, [X0 + 0x758]
	0x0334D1EC BL 0x1C16D08
	0x0334D1F0 ADD X1, X31, 0xC
	0x0334D1F4 BL 0x1C16E04
	0x0334D1F8 MOV X19, X0
	0x0334D1FC ADRP X0, 0xDDD000
	0x0334D200 LDR X0, [X0 + 0x88]
	0x0334D204 BL 0x1C16D08
	0x0334D208 MOV X1, X19
	0x0334D20C MOV X2, X31
	0x0334D210 BL 0x321EFD0
	0x0334D214 MOV X19, X0
	0x0334D218 ADRP X0, 0xDAE000
	0x0334D21C LDR X0, [X0 + 0x578]
	0x0334D220 BL 0x1C16D08
	0x0334D224 BL 0x1C16F10
	0x0334D228 MOV X1, X19
	0x0334D22C MOV X2, X31
	0x0334D230 MOV X20, X0
	0x0334D234 BL 0x3314A68
	0x0334D238 ADRP X0, 0xDDD000
	0x0334D23C LDR X0, [X0 + 0x90]
	0x0334D240 BL 0x1C16D08
	0x0334D244 MOV X1, X0
	0x0334D248 MOV X0, X20
	0x0334D24C BL 0x1C16DEC
	0x0334D250 BL 0x1C16F20
	0x0334D254 STP X30, X27, [X31 - 0x50]!
	0x0334D258 STP X26, X25, [X31 + 0x10]
	0x0334D25C STP X24, X23, [X31 + 0x20]
	0x0334D260 STP X22, X21, [X31 + 0x30]
	0x0334D264 STP X20, X19, [X31 + 0x40]
	0x0334D268 LDR W27, [X31 + 0x50]
	0x0334D26C MOV W25, W1
	0x0334D270 MOV X1, X31
	0x0334D274 MOV W19, W7
	0x0334D278 MOV W20, W6
	0x0334D27C MOV W21, W5
	0x0334D280 MOV W22, W4
	0x0334D284 MOV W23, W3
	0x0334D288 MOV W24, W2
	0x0334D28C MOV X26, X0
	0x0334D290 BL 0x33BDD8C
	0x0334D294 STRH W25, [X26 + 0x10]
	0x0334D298 STP W24, W23, [X26 + 0x14]
	0x0334D29C STP W22, W21, [X26 + 0x1C]
	0x0334D2A0 STP W20, W19, [X26 + 0x24]
	0x0334D2A4 STR W27, [X26 + 0x2C]
	0x0334D2A8 LDP X20, X19, [X31 + 0x40]
	0x0334D2AC LDP X22, X21, [X31 + 0x30]
	0x0334D2B0 LDP X24, X23, [X31 + 0x20]
	0x0334D2B4 LDP X26, X25, [X31 + 0x10]
	0x0334D2B8 LDP X30, X27, [X31], #0x50
	0x0334D2BC RET
	0x0334D2C0 CMP W1, 0x1A
	0x0334D2C4 MOVZ W8, 0x16
	0x0334D2C8 MOVZ W9, 0x61
	0x0334D2CC CSEL W8, W9, W8, LT
	0x0334D2D0 ADD W0, W8, W1
	0x0334D2D4 RET
	0x0334D2D8 TBZ X3, 0x0, 0x334D2E4
	0x0334D2DC LDR W8, [X0 + 0x24]
	0x0334D2E0 B 0x334D2E8
	0x0334D2E4 MOVZ W8, 0x2
	0x0334D2E8 LDP W11, W9, [X0 + 0x14]
	0x0334D2EC LDR W10, [X0 + 0x1C]
	0x0334D2F0 SDIV W8, W1, W8
	0x0334D2F4 SDIV W12, W8, W2
	0x0334D2F8 SUB W9, W11, W9
	0x0334D2FC MUL W10, W10, W9
	0x0334D300 CMP W10, 0x0
	0x0334D304 ADD W8, W12, W8
	0x0334D308 CINC W12, W10, LT
	0x0334D30C CMP W8, W12, ASR
	0x0334D310 B.LE 0x334D330
	0x0334D314 MOV W10, W31
	0x0334D318 SBFM W12, W12, 0x1, 0x1F
	0x0334D31C SDIV W8, W8, W9
	0x0334D320 CMP W8, W12
	0x0334D324 ADD W10, W10, W11
	0x0334D328 B.GT 0x334D31C
	0x0334D32C B 0x334D334
	0x0334D330 MOV W10, W31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1090000
	009 Move W8, [X22+3479]
	010 Move W19, W2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xDDD000
	018 Move X0, [X0+4064]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+3479], W8
	022 Compare X20, 0
	023 JumpIfEqual {136}
	024 Move W8, [X20+16]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W22, W31
	027 Move X0, X20
	028 Move W1, W22
	029 Move X2, X31
	030 Call String.get_Chars, X0, X1
	031 And W8, W0, 0xFFFF
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move W1, W22
	035 Move X2, X31
	036 Call String.get_Chars, X0, X1
	037 And W8, W0, 0xFFFF
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X0, X20
	040 Move W1, W22
	041 Move X2, X31
	042 Call String.get_Chars, X0, X1
	043 And W8, W0, 0xFFFF
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W8, [X20+16]
	046 Add W22, W22, 1
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X0, X21
	049 Move X1, X20
	050 Move W2, W19
	051 Call IdnMapping.NamePrep, X0, X1, X2
	052 Move X20, X0
	053 Move W8, [X21+17]
	054 Compare W8, 0
	055 JumpIfEqual {59}
	056 Move X1, X20
	057 Move W2, W19
	058 Call IdnMapping.VerifyStd3AsciiRules, X0, X1, X2
	059 Compare X20, 0
	060 JumpIfEqual {136}
	061 Move W8, [X20+16]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move W22, W31
	064 Move X0, X20
	065 Move W1, W22
	066 Move X2, X31
	067 Call String.get_Chars, X0, X1
	068 And W8, W0, 0xFFFF
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move W8, [X20+16]
	071 Add W22, W22, 1
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X23, 0xDDD000
	074 Move X23, [X23+4064]
	075 Move W2, 5
	076 Move X0, X20
	077 Move X3, X31
	078 Move X1, [X23]
	079 Call String.StartsWith, X0, X1, X2
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {137}
	084 Move X0, [X21+24]
	085 Compare X0, 0
	086 JumpIfEqual {136}
	087 Move X1, X20
	088 Call Bootstring.Encode, X0, X1, X2
	089 Move X8, [X23]
	090 Move X1, X0
	091 Move X2, X31
	092 Move X0, X8
	093 Call String.Concat, X0, X1
	094 Move X20, X0
	095 Move X1, X20
	096 Move W2, W19
	097 Call IdnMapping.VerifyLength, X0, X1, X2
	098 Move X0, X20
	099 Move X20, [X31+48]
	100 Move X19, [X31+56]
	101 Move X22, [X31+32]
	102 Move X21, [X31+40]
	103 Move X30, [X31+16]
	104 Move X23, [X31+24]
	105 Add X31, X31, 64
	106 Return X0
	107 Add W8, W19, W22
	108 Move [X31+12], W8
	109 Move X0, 0xDA7000
	110 Move X0, [X0+1880]
	111 Call 0x1C17D08
	112 Add X1, X31, 12
	113 Call 0x1C17E04
	114 Move X19, X0
	115 Move X0, 0xDDD000
	116 Move X0, [X0+4072]
	117 Call 0x1C17D08
	118 Move X1, X19
	119 Move X2, X31
	120 Call String.Format, X0, X1
	121 Move X19, X0
	122 Move X0, 0xDAF000
	123 Move X0, [X0+1400]
	124 Call 0x1C17D08
	125 Call 0x1C17F10
	126 Move X1, X19
	127 Move X2, X31
	128 Move X20, X0
	129 Call ArgumentException..ctor, X0, X1
	130 Move X0, 0xDDD000
	131 Move X0, [X0+4080]
	132 Call 0x1C17D08
	133 Move X1, X0
	134 Move X0, X20
	135 Call 0x1C17DEC
	136 Call 0x1C17F20
	137 Add W8, W19, W22
	138 Move [X31+8], W8
	139 Move X0, 0xDA7000
	140 Move X0, [X0+1880]
	141 Call 0x1C17D08
	142 Add X1, X31, 8
	143 Call 0x1C17E04
	144 Move X19, X0
	145 Move X0, 0xDDD000
	146 Move X0, [X0+4088]

Method: System.Void VerifyLength(System.String s, System.Int32 offset)

Disassembly:
	0x0334DB58 STP X20, X19, [X31 + 0x10]
	0x0334DB5C MOV W19, W1
	0x0334DB60 MOV X1, X31
	0x0334DB64 MOV X20, X0
	0x0334DB68 BL 0x33A51F0
	0x0334DB6C STR W19, [X20 + 0x10]
	0x0334DB70 LDP X20, X19, [X31 + 0x10]
	0x0334DB74 LDR X30, [X31], #0x20
	0x0334DB78 RET
	0x0334DB7C STR X30, [X31 - 0x20]!
	0x0334DB80 STP X20, X19, [X31 + 0x10]
	0x0334DB84 MOV W19, W1
	0x0334DB88 MOV X1, X31
	0x0334DB8C MOV X20, X0
	0x0334DB90 BL 0x33A51F0
	0x0334DB94 CMP W19, 0x4
	0x0334DB98 B.CS 0x334DBAC
	0x0334DB9C STR W19, [X20 + 0x10]
	0x0334DBA0 LDP X20, X19, [X31 + 0x10]
	0x0334DBA4 LDR X30, [X31], #0x20
	0x0334DBA8 RET
	0x0334DBAC ADRP X0, 0xDAE000
	0x0334DBB0 LDR X0, [X0 + 0x760]
	0x0334DBB4 BL 0x1C16D08
	0x0334DBB8 BL 0x1C16F10
	0x0334DBBC MOV X19, X0
	0x0334DBC0 ADRP X0, 0xDCE000
	0x0334DBC4 LDR X0, [X0 + 0xD98]
	0x0334DBC8 BL 0x1C16D08
	0x0334DBCC MOV X1, X0
	0x0334DBD0 MOV X0, X19
	0x0334DBD4 MOV X2, X31
	0x0334DBD8 BL 0x3316014
	0x0334DBDC ADRP X0, 0xDDD000
	0x0334DBE0 LDR X0, [X0 + 0x120]
	0x0334DBE4 BL 0x1C16D08
	0x0334DBE8 MOV X1, X0
	0x0334DBEC MOV X0, X19
	0x0334DBF0 BL 0x1C16DEC
	0x0334DBF4 STR X30, [X31 - 0x30]!
	0x0334DBF8 STP X22, X21, [X31 + 0x10]
	0x0334DBFC STP X20, X19, [X31 + 0x20]
	0x0334DC00 ADRP X22, 0x108F000
	0x0334DC04 ADRP X21, 0xDA6000
	0x0334DC08 LDRB W8, [X22 + 0xDA4]
	0x0334DC0C LDR X21, [X21 + 0x6C0]
	0x0334DC10 MOV X20, X1
	0x0334DC14 MOV X19, X0
	0x0334DC18 TBNZ X8, 0x0, 0x334DC30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {14}
	006 Move W8, [X1+16]
	007 Compare W8, 0
	008 JumpIfEqual {15}
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]
	013 Return 
	014 Call 0x1C17F20
	015 Move [X31+12], W2
	016 Move X0, 0xDA7000
	017 Move X0, [X0+1880]
	018 Call 0x1C17D08
	019 Add X1, X31, 12
	020 Call 0x1C17E04
	021 Move X19, X0
	022 Move X0, 0xDDE000
	023 Move X0, [X0+72]
	024 Move [X31+8], W2
	025 Move X0, 0xDA7000
	026 Move X0, [X0+1880]
	027 Call 0x1C17D08
	028 Add X1, X31, 8
	029 Call 0x1C17E04
	030 Move X19, X0
	031 Move X0, 0xDDE000
	032 Move X0, [X0+80]
	033 Call 0x1C17D08
	034 Move X1, X19
	035 Move X2, X31
	036 Call String.Format, X0, X1
	037 Move X19, X0
	038 Move X0, 0xDAF000
	039 Move X0, [X0+1400]
	040 Call 0x1C17D08
	041 Call 0x1C17F10
	042 Move X1, X19
	043 Move X2, X31
	044 Move X20, X0
	045 Call ArgumentException..ctor, X0, X1
	046 Move X0, 0xDDE000
	047 Move X0, [X0+88]
	048 Call 0x1C17D08
	049 Move X1, X0
	050 Move X0, X20
	051 Call 0x1C17DEC

Method: System.String NamePrep(System.String s, System.Int32 offset)

Disassembly:
	0x0334D504 LDR X8, [X8]
	0x0334D508 STR X8, [X19 + 0x18]
	0x0334D50C ADRP X8, 0xDDD000
	0x0334D510 LDR X8, [X8 + 0xA0]
	0x0334D514 LDR X8, [X8]
	0x0334D518 STR X8, [X19 + 0x20]
	0x0334D51C ADRP X8, 0xDDD000
	0x0334D520 LDR X8, [X8 + 0xC8]
	0x0334D524 LDR X8, [X8]
	0x0334D528 STR X8, [X19 + 0x28]
	0x0334D52C ADRP X8, 0xDDD000
	0x0334D530 LDR X8, [X8 + 0xA8]
	0x0334D534 LDR X8, [X8]
	0x0334D538 STP X8, X8, [X19 + 0x30]
	0x0334D53C ADRP X8, 0xDDB000
	0x0334D540 LDR X8, [X8 + 0xA60]
	0x0334D544 LDR X8, [X8]
	0x0334D548 STR X8, [X19 + 0x40]
	0x0334D54C ADRP X8, 0xDDD000
	0x0334D550 LDR X8, [X8 + 0xB8]
	0x0334D554 LDR X8, [X8]
	0x0334D558 STR X8, [X19 + 0x48]
	0x0334D55C ADRP X8, 0xDDD000
	0x0334D560 LDR X8, [X8 + 0xC0]
	0x0334D564 LDR X8, [X8]
	0x0334D568 STP X8, X8, [X19 + 0x50]
	0x0334D56C LDP X20, X19, [X31 + 0x10]
	0x0334D570 LDP X30, X21, [X31], #0x20
	0x0334D574 RET
	0x0334D578 LDR X0, [X20 + 0x78]
	0x0334D57C CBZ X0, 0x334D5A0
	0x0334D580 MOV X1, X31
	0x0334D584 BL 0x322B860
	0x0334D588 MOV X1, X0
	0x0334D58C MOV X0, X19
	0x0334D590 LDP X20, X19, [X31 + 0x10]
	0x0334D594 LDP X30, X21, [X31], #0x20
	0x0334D598 B 0x1C43060
	0x0334D59C BL 0x1C16F20
	0x0334D5A0 ADRP X0, 0xDAF000
	0x0334D5A4 LDR X0, [X0 + 0x758]
	0x0334D5A8 BL 0x1C16D08
	0x0334D5AC BL 0x1C16F10
	0x0334D5B0 MOV X19, X0
	0x0334D5B4 ADRP X0, 0xDDD000
	0x0334D5B8 LDR X0, [X0 + 0xD0]
	0x0334D5BC BL 0x1C16D08
	0x0334D5C0 MOV X1, X0
	0x0334D5C4 MOV X0, X19
	0x0334D5C8 MOV X2, X31
	0x0334D5CC BL 0x33802E4
	0x0334D5D0 ADRP X0, 0xDDD000
	0x0334D5D4 LDR X0, [X0 + 0xD8]
	0x0334D5D8 BL 0x1C16D08
	0x0334D5DC MOV X1, X0
	0x0334D5E0 MOV X0, X19
	0x0334D5E4 BL 0x1C16DEC
	0x0334D5E8 STR X30, [X31 - 0x30]!
	0x0334D5EC STP X22, X21, [X31 + 0x10]
	0x0334D5F0 STP X20, X19, [X31 + 0x20]
	0x0334D5F4 ADRP X22, 0x108F000
	0x0334D5F8 ADRP X21, 0xDA8000
	0x0334D5FC LDRB W8, [X22 + 0xD9E]
	0x0334D600 LDR X21, [X21 + 0xC48]
	0x0334D604 MOV W19, W1
	0x0334D608 MOV X20, X0
	0x0334D60C TBNZ X8, 0x0, 0x334D624
	0x0334D610 ADRP X0, 0xDA8000
	0x0334D614 LDR X0, [X0 + 0xC48]
	0x0334D618 BL 0x1C16CF4
	0x0334D61C MOVZ W8, 0x1
	0x0334D620 STRB W8, [X22 + 0xD9E]
	0x0334D624 MOV X0, X20
	0x0334D628 MOV X1, X31
	0x0334D62C BL 0x33BDD8C
	0x0334D630 LDR X0, [X21]
	0x0334D634 LDR W8, [X0 + 0xE0]
	0x0334D638 CBNZ W8, 0x334D640
	0x0334D63C BL 0x1C16DFC
	0x0334D640 MOV W0, W19
	0x0334D644 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1090000
	007 Move W8, [X22+3480]
	008 Move W19, W2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xDA9000
	016 Move X0, [X0+368]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3480], W8
	020 Compare X20, 0
	021 JumpIfEqual {89}
	022 Move W1, 5
	023 Move X0, X20
	024 Move X2, X31
	025 Call String.Normalize, X0, X1
	026 Move X1, X0
	027 Move W2, W19
	028 Move X20, X0
	029 Call IdnMapping.VerifyProhibitedCharacters, X0, X1, X2
	030 Move W8, [X21+16]
	031 Compare W8, 0
	032 JumpIfNotEqual {53}
	033 Compare X20, 0
	034 JumpIfEqual {89}
	035 Move W8, [X20+16]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X22, 0xDA9000
	038 Move X22, [X22+368]
	039 Move W21, W31
	040 Move X0, [X22]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X20
	046 Move W1, W21
	047 Move X2, X31
	048 Call Char.GetUnicodeCategory, X0, X1
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W8, [X20+16]
	051 Add W21, W21, 1
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X0, X20
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Return X0
	060 Add W8, W19, W21
	061 Move [X31+12], W8
	062 Move X0, 0xDA7000
	063 Move X0, [X0+1880]
	064 Call 0x1C17D08
	065 Add X1, X31, 12
	066 Call 0x1C17E04
	067 Move X19, X0
	068 Move X0, 0xDDE000
	069 Move X0, [X0+16]
	070 Call 0x1C17D08
	071 Move X1, X19
	072 Move X2, X31
	073 Call String.Format, X0, X1
	074 Move X19, X0
	075 Move X0, 0xDAF000
	076 Move X0, [X0+1400]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X1, X19
	080 Move X2, X31
	081 Move X20, X0
	082 Call ArgumentException..ctor, X0, X1
	083 Move X0, 0xDDE000
	084 Move X0, [X0+24]
	085 Call 0x1C17D08
	086 Move X1, X0
	087 Move X0, X20
	088 Call 0x1C17DEC
	089 Call 0x1C17F20

Method: System.Void VerifyProhibitedCharacters(System.String s, System.Int32 offset)

Disassembly:
	0x0334DC1C ADRP X0, 0xDA6000
	0x0334DC20 LDR X0, [X0 + 0x6C0]
	0x0334DC24 BL 0x1C16CF4
	0x0334DC28 MOVZ W8, 0x1
	0x0334DC2C STRB W8, [X22 + 0xDA4]
	0x0334DC30 MOV X0, X19
	0x0334DC34 MOV X1, X31
	0x0334DC38 BL 0x33A51F0
	0x0334DC3C LDR X0, [X21]
	0x0334DC40 LDR W8, [X0 + 0xE0]
	0x0334DC44 CBNZ W8, 0x334DC4C
	0x0334DC48 BL 0x1C16DFC
	0x0334DC4C MOV X0, X20
	0x0334DC50 MOV X1, X31
	0x0334DC54 MOV X2, X31
	0x0334DC58 BL 0x3395194
	0x0334DC5C TBNZ X0, 0x0, 0x334DC8C
	0x0334DC60 CBZ X20, 0x334DCD4
	0x0334DC64 LDR X8, [X20]
	0x0334DC68 MOV X0, X20
	0x0334DC6C LDR X9, [X8 + 0x2D8]
	0x0334DC70 LDR X1, [X8 + 0x2E0]
	0x0334DC74 BLR X9
	0x0334DC78 STR X0, [X19 + 0x10]
	0x0334DC7C LDP X20, X19, [X31 + 0x20]
	0x0334DC80 LDP X22, X21, [X31 + 0x10]
	0x0334DC84 LDR X30, [X31], #0x30
	0x0334DC88 RET
	0x0334DC8C ADRP X0, 0xDAB000
	0x0334DC90 LDR X0, [X0 + 0x528]
	0x0334DC94 BL 0x1C16D08
	0x0334DC98 BL 0x1C16F10
	0x0334DC9C MOV X19, X0
	0x0334DCA0 ADRP X0, 0xDAE000
	0x0334DCA4 LDR X0, [X0 + 0x5E8]
	0x0334DCA8 BL 0x1C16D08
	0x0334DCAC MOV X1, X0
	0x0334DCB0 MOV X0, X19
	0x0334DCB4 MOV X2, X31
	0x0334DCB8 BL 0x330E100
	0x0334DCBC ADRP X0, 0xDDD000
	0x0334DCC0 LDR X0, [X0 + 0x128]
	0x0334DCC4 BL 0x1C16D08
	0x0334DCC8 MOV X1, X0
	0x0334DCCC MOV X0, X19
	0x0334DCD0 BL 0x1C16DEC
	0x0334DCD4 BL 0x1C16F20
	0x0334DCD8 STR X30, [X31 - 0x30]!
	0x0334DCDC STP X22, X21, [X31 + 0x10]
	0x0334DCE0 STP X20, X19, [X31 + 0x20]
	0x0334DCE4 ADRP X22, 0x108F000
	0x0334DCE8 ADRP X21, 0xDA6000
	0x0334DCEC LDRB W8, [X22 + 0xDA5]
	0x0334DCF0 LDR X21, [X21 + 0x988]
	0x0334DCF4 MOV X20, X1
	0x0334DCF8 MOV X19, X0
	0x0334DCFC TBNZ X8, 0x0, 0x334DD14
	0x0334DD00 ADRP X0, 0xDA6000
	0x0334DD04 LDR X0, [X0 + 0x988]
	0x0334DD08 BL 0x1C16CF4
	0x0334DD0C MOVZ W8, 0x1
	0x0334DD10 STRB W8, [X22 + 0xDA5]
	0x0334DD14 MOV X0, X19
	0x0334DD18 MOV X1, X31
	0x0334DD1C BL 0x33A51F0
	0x0334DD20 LDR X8, [X21]
	0x0334DD24 CMP X20, 0x0
	0x0334DD28 LDP X22, X21, [X31 + 0x10]
	0x0334DD2C CSEL X9, X8, X20, EQ
	0x0334DD30 STP X8, X9, [X19 + 0x10]
	0x0334DD34 STR X8, [X19 + 0x20]
	0x0334DD38 LDP X20, X19, [X31 + 0x20]
	0x0334DD3C LDR X30, [X31], #0x30
	0x0334DD40 RET
	0x0334DD44 B 0x1C24408
	0x0334DD48 B 0x1C16D14
	0x0334DD4C SUB X31, X31, 0x30
	0x0334DD50 STP X30, X21, [X31 + 0x10]
	0x0334DD54 STP X20, X19, [X31 + 0x20]
	0x0334DD58 ADRP X20, 0x108F000
	0x0334DD5C STP X2, X1, [X31]
	0x0334DD60 ADRP X21, 0xDD8000
	0x0334DD64 LDRB W8, [X20 + 0xDA6]
	0x0334DD68 LDR X21, [X21 + 0x910]
	0x0334DD6C MOV W19, W0
	0x0334DD70 TBNZ X8, 0x0, 0x334DD88
	0x0334DD74 ADRP X0, 0xDD8000
	0x0334DD78 LDR X0, [X0 + 0x910]
	0x0334DD7C BL 0x1C16CF4
	0x0334DD80 MOVZ W8, 0x1
	0x0334DD84 STRB W8, [X20 + 0xDA6]
	0x0334DD88 LDR X0, [X21]
	0x0334DD8C LDR W8, [X0 + 0xE0]
	0x0334DD90 CBNZ W8, 0x334DD98
	0x0334DD94 BL 0x1C16DFC
	0x0334DD98 ADD X1, X31, 0x8
	0x0334DD9C ADD X2, X31, 0x0
	0x0334DDA0 MOV W0, W19
	0x0334DDA4 BL 0x1C16D14
	0x0334DDA8 LDP X20, X19, [X31 + 0x20]
	0x0334DDAC LDP X30, X21, [X31 + 0x10]
	0x0334DDB0 ADD X31, X31, 0x30
	0x0334DDB4 RET
	0x0334DDB8 RET
	0x0334DDBC STP X30, X21, [X31 - 0x20]!
	0x0334DDC0 STP X20, X19, [X31 + 0x10]
	0x0334DDC4 ADRP X20, 0x108F000
	0x0334DDC8 ADRP X19, 0xDA6000
	0x0334DDCC ADRP X21, 0xDD8000
	0x0334DDD0 LDRB W8, [X20 + 0xDA7]
	0x0334DDD4 LDR X19, [X19 + 0x988]
	0x0334DDD8 LDR X21, [X21 + 0x910]
	0x0334DDDC TBNZ X8, 0x0, 0x334DE00
	0x0334DDE0 ADRP X0, 0xDD8000
	0x0334DDE4 LDR X0, [X0 + 0x910]
	0x0334DDE8 BL 0x1C16CF4
	0x0334DDEC ADRP X0, 0xDA6000
	0x0334DDF0 LDR X0, [X0 + 0x988]
	0x0334DDF4 BL 0x1C16CF4
	0x0334DDF8 MOVZ W8, 0x1
	0x0334DDFC STRB W8, [X20 + 0xDA7]
	0x0334DE00 LDR X8, [X21]
	0x0334DE04 LDR X9, [X19]
	0x0334DE08 LDP X20, X19, [X31 + 0x10]
	0x0334DE0C LDR X8, [X8 + 0xB8]
	0x0334DE10 STR X9, [X8]
	0x0334DE14 LDP X30, X21, [X31], #0x20
	0x0334DE18 RET
	0x0334DE1C AND W1, W1, 0x1
	0x0334DE20 B 0x1C7110C
	0x0334DE24 STP X30, X21, [X31 - 0x20]!
	0x0334DE28 STP X20, X19, [X31 + 0x10]
	0x0334DE2C MOVI V0.2D, 0xFFFFFFFFFFFFFFFF
	0x0334DE30 MOV X21, X0
	0x0334DE34 MOV X1, X31
	0x0334DE38 MOV X19, X0
	0x0334DE3C ADD X20, X0, 0x14
	0x0334DE40 STR D0, [X21 + 0x10]!
	0x0334DE44 BL 0x33BDD8C
	0x0334DE48 ADD X2, X19, 0x28
	0x0334DE4C ADD X5, X19, 0x30
	0x0334DE50 ADD X6, X19, 0x38

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0x1090000
	015 Move W8, [X21+3481]
	016 Move W19, W2
	017 Move X20, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xDA9000
	023 Move X0, [X0+368]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3481], W8
	027 Compare X20, 0
	028 JumpIfEqual {148}
	029 Move W8, [X20+16]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X22, 0xDA9000
	032 Move X22, [X22+368]
	033 Move W29, 1
	034 Move W21, W31
	035 Move TEMP, 0x2FEF
	036 Not TEMP
	037 Move W23, TEMP
	038 Move TEMP, 0x2029
	039 Not TEMP
	040 Move W24, TEMP
	041 Move TEMP, 0x2069
	042 Not TEMP
	043 Move W25, TEMP
	044 Move W26, 0x200E
	045 Move TEMP, 0x200E
	046 Not TEMP
	047 Move W27, TEMP
	048 Move W28, 1
	049 NotImplemented "Instruction MOVK not yet implemented."
	050 Move X0, [X22]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X20
	056 Move W1, W21
	057 Move X2, X31
	058 Call Char.GetUnicodeCategory, X0, X1
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract W8, W0, 16
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, X20
	064 Move W1, W21
	065 Move X2, X31
	066 Call String.get_Chars, X0, X1
	067 Add W8, W0, W25
	068 And W8, W8, 0xFFFF
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Add W8, W0, W24
	071 And W8, W8, 0xFFFF
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Add W8, W0, W23
	074 And W8, W8, 0xFFFF
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Add W8, W0, 7
	077 And W8, W8, 0xFFFF
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Add W8, W0, 545
	080 And W8, W8, 0xFFFF
	081 NotImplemented "Instruction CMP not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 And W8, W0, 0xFFFF
	084 Subtract W9, W8, 832
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X0, X20
	088 Move W1, W21
	089 Move X2, X31
	090 Call String.get_Chars, X0, X1
	091 And W31, W0, 0xFFFF
	092 Move X0, X20
	093 Move W1, W21
	094 Move X2, X31
	095 Call String.get_Chars, X0, X1
	096 And W8, W0, 0xFFFF
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move W8, [X20+16]
	099 Add W21, W21, 1
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Add W8, W27, W0
	102 NotImplemented "Instruction CMP not yet implemented."
	103 NotImplemented "Instruction LSLV not yet implemented."
	104 And W31, W8, W29
	105 Add W8, W19, W21
	106 Move [X31+12], W8
	107 Move X0, 0xDA7000
	108 Move X0, [X0+1880]
	109 Call 0x1C17D08
	110 Add X1, X31, 12
	111 Call 0x1C17E04
	112 Move X19, X0
	113 Move X0, 0xDDE000
	114 Move X0, [X0+96]
	115 Call 0x1C17D08
	116 Move X1, X19
	117 Move X2, X31
	118 Call String.Format, X0, X1
	119 Move X19, X0
	120 Move X0, 0xDAF000
	121 Move X0, [X0+1400]
	122 Call 0x1C17D08
	123 Call 0x1C17F10
	124 Move X1, X19
	125 Move X2, X31
	126 Move X20, X0
	127 Call ArgumentException..ctor, X0, X1
	128 Move X0, 0xDDE000
	129 Move X0, [X0+104]
	130 Call 0x1C17D08
	131 Move X1, X0
	132 Move X0, X20
	133 Call 0x1C17DEC
	134 Move X20, [X31+96]
	135 Move X19, [X31+104]
	136 Move X22, [X31+80]
	137 Move X21, [X31+88]
	138 Move X24, [X31+64]
	139 Move X23, [X31+72]
	140 Move X26, [X31+48]
	141 Move X25, [X31+56]
	142 Move X28, [X31+32]
	143 Move X27, [X31+40]
	144 Move X29, [X31+16]
	145 Move X30, [X31+24]
	146 Add X31, X31, 112
	147 Return 
	148 Call 0x1C17F20

Method: System.Void VerifyStd3AsciiRules(System.String s, System.Int32 offset)

Disassembly:
	0x0334D648 BL 0x333C1C8
	0x0334D64C MOV X1, X0
	0x0334D650 MOV X0, X20
	0x0334D654 BL 0x334D6F0
	0x0334D658 TBZ X0, 0x0, 0x334D66C
	0x0334D65C LDP X20, X19, [X31 + 0x20]
	0x0334D660 LDP X22, X21, [X31 + 0x10]
	0x0334D664 LDR X30, [X31], #0x30
	0x0334D668 RET
	0x0334D66C STR W19, [X31 + 0xC]
	0x0334D670 ADRP X0, 0xDA6000
	0x0334D674 LDR X0, [X0 + 0x758]
	0x0334D678 BL 0x1C16D08
	0x0334D67C ADD X1, X31, 0xC
	0x0334D680 BL 0x1C16E04
	0x0334D684 MOV X19, X0
	0x0334D688 ADRP X0, 0xDDD000
	0x0334D68C LDR X0, [X0 + 0xE0]
	0x0334D690 BL 0x1C16D08
	0x0334D694 MOV X1, X19
	0x0334D698 MOV X2, X31
	0x0334D69C BL 0x321EFD0
	0x0334D6A0 MOV X19, X0
	0x0334D6A4 ADRP X0, 0xDAE000
	0x0334D6A8 LDR X0, [X0 + 0x578]
	0x0334D6AC BL 0x1C16D08
	0x0334D6B0 BL 0x1C16F10
	0x0334D6B4 MOV X20, X0
	0x0334D6B8 ADRP X0, 0xDD4000
	0x0334D6BC LDR X0, [X0 + 0xFF0]
	0x0334D6C0 BL 0x1C16D08
	0x0334D6C4 MOV X2, X0
	0x0334D6C8 MOV X0, X20
	0x0334D6CC MOV X1, X19
	0x0334D6D0 MOV X3, X31
	0x0334D6D4 BL 0x330E16C
	0x0334D6D8 ADRP X0, 0xDDD000
	0x0334D6DC LDR X0, [X0 + 0xE8]
	0x0334D6E0 BL 0x1C16D08
	0x0334D6E4 MOV X1, X0
	0x0334D6E8 MOV X0, X20
	0x0334D6EC BL 0x1C16DEC
	0x0334D6F0 STR X30, [X31 - 0x20]!
	0x0334D6F4 STP X20, X19, [X31 + 0x10]
	0x0334D6F8 CBZ X1, 0x334D750
	0x0334D6FC LDR X8, [X1]
	0x0334D700 MOV X20, X1
	0x0334D704 MOV X19, X0
	0x0334D708 MOV X0, X20
	0x0334D70C LDR X9, [X8 + 0x208]
	0x0334D710 LDR X1, [X8 + 0x210]
	0x0334D714 BLR X9
	0x0334D718 TBNZ X0, 0x0, 0x334D740
	0x0334D71C LDR X0, [X20 + 0x78]
	0x0334D720 CBZ X0, 0x334D740
	0x0334D724 MOV X1, X31
	0x0334D728 BL 0x322B860
	0x0334D72C MOV X1, X0
	0x0334D730 MOV X0, X19
	0x0334D734 LDP X20, X19, [X31 + 0x10]
	0x0334D738 LDR X30, [X31], #0x20
	0x0334D73C B 0x1C43060
	0x0334D740 LDP X20, X19, [X31 + 0x10]
	0x0334D744 MOV W0, W31
	0x0334D748 LDR X30, [X31], #0x20
	0x0334D74C RET
	0x0334D750 ADRP X0, 0xDA6000
	0x0334D754 LDR X0, [X0 + 0x7D0]
	0x0334D758 BL 0x1C16D08
	0x0334D75C BL 0x1C16F10
	0x0334D760 MOV X19, X0
	0x0334D764 ADRP X0, 0xDDD000
	0x0334D768 LDR X0, [X0 + 0xF0]
	0x0334D76C BL 0x1C16D08
	0x0334D770 MOV X1, X0
	0x0334D774 MOV X0, X19
	0x0334D778 MOV X2, X31
	0x0334D77C BL 0x33B2C70
	0x0334D780 ADRP X0, 0xDDD000
	0x0334D784 LDR X0, [X0 + 0xF8]
	0x0334D788 BL 0x1C16D08
	0x0334D78C MOV X1, X0
	0x0334D790 MOV X0, X19
	0x0334D794 BL 0x1C16DEC
	0x0334D798 STP X30, X21, [X31 - 0x20]!
	0x0334D79C STP X20, X19, [X31 + 0x10]
	0x0334D7A0 ADRP X21, 0x108F000
	0x0334D7A4 LDRB W8, [X21 + 0xD9F]
	0x0334D7A8 MOV X19, X1
	0x0334D7AC MOV X20, X0
	0x0334D7B0 TBNZ X8, 0x0, 0x334D7C8
	0x0334D7B4 ADRP X0, 0xDA8000
	0x0334D7B8 LDR X0, [X0 + 0xC48]
	0x0334D7BC BL 0x1C16CF4
	0x0334D7C0 MOVZ W8, 0x1
	0x0334D7C4 STRB W8, [X21 + 0xD9F]
	0x0334D7C8 MOV X0, X20
	0x0334D7CC MOV X1, X31
	0x0334D7D0 BL 0x33BDD8C
	0x0334D7D4 CBZ X19, 0x334D834
	0x0334D7D8 MOV X0, X19
	0x0334D7DC MOV X1, X31
	0x0334D7E0 BL 0x322B860
	0x0334D7E4 MOV X1, X0
	0x0334D7E8 MOV X0, X20
	0x0334D7EC BL 0x1C43060
	0x0334D7F0 TBNZ X0, 0x0, 0x334D828
	0x0334D7F4 ADRP X8, 0xDA8000
	0x0334D7F8 LDR X8, [X8 + 0xC48]
	0x0334D7FC LDR X0, [X8]
	0x0334D800 LDR W8, [X0 + 0xE0]
	0x0334D804 CBNZ W8, 0x334D80C
	0x0334D808 BL 0x1C16DFC
	0x0334D80C MOV X0, X19

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {83}
	008 Move W8, [X1+16]
	009 Move X20, X1
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W19, W2
	012 Move X0, X20
	013 Move W1, W31
	014 Move X2, X31
	015 Call String.get_Chars, X0, X1
	016 And W8, W0, 0xFFFF
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W8, [X20+16]
	019 Subtract W1, W8, 1
	020 Move X0, X20
	021 Move X2, X31
	022 Call String.get_Chars, X0, X1
	023 And W8, W0, 0xFFFF
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W8, [X20+16]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move W21, W31
	028 Move X0, X20
	029 Move W1, W21
	030 Move X2, X31
	031 Call String.get_Chars, X0, X1
	032 And W8, W0, 0xFFFF
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract W8, W0, 123
	035 And W8, W8, 0xFFFF
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Subtract W8, W0, 91
	038 And W8, W8, 0xFFFF
	039 NotImplemented "Instruction CMP not yet implemented."
	040 And W8, W0, 0xFFFF
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract W8, W0, 58
	043 And W8, W8, 0xFFFF
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W8, [X20+16]
	046 Add W21, W21, 1
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X30, [X31+16]
	051 Move X21, [X31+24]
	052 Add X31, X31, 48
	053 Return 
	054 Add W8, W19, W21
	055 Move [X31+4], W8
	056 Move X0, 0xDA7000
	057 Move X0, [X0+1880]
	058 Call 0x1C17D08
	059 Add X1, X31, 4
	060 Call 0x1C17E04
	061 Move X19, X0
	062 Move X0, 0xDDE000
	063 Move X0, [X0+32]
	064 Call 0x1C17D08
	065 Move X1, X19
	066 Move X2, X31
	067 Call String.Format, X0, X1
	068 Move X19, X0
	069 Move X0, 0xDAF000
	070 Move X0, [X0+1400]
	071 Call 0x1C17D08
	072 Call 0x1C17F10
	073 Move X1, X19
	074 Move X2, X31
	075 Move X20, X0
	076 Call ArgumentException..ctor, X0, X1
	077 Move X0, 0xDDE000
	078 Move X0, [X0+40]
	079 Call 0x1C17D08
	080 Move X1, X0
	081 Move X0, X20
	082 Call 0x1C17DEC
	083 Call 0x1C17F20
	084 Move [X31+12], W19
	085 Move X0, 0xDA7000
	086 Move X0, [X0+1880]
	087 Call 0x1C17D08
	088 Add X1, X31, 12
	089 Call 0x1C17E04
	090 Move X19, X0
	091 Move X0, 0xDDE000
	092 Move X0, [X0+48]
	093 Move X0, X20
	094 Call 0x19913C0
	095 Move W8, [X20+16]
	096 Move X0, 0xDA7000
	097 Add W8, W19, W8
	098 Subtract W8, W8, 1
	099 Move [X31+8], W8
	100 Move X0, [X0+1880]
	101 Call 0x1C17D08
	102 Add X1, X31, 8
	103 Call 0x1C17E04
	104 Move X19, X0
	105 Move X0, 0xDDE000
	106 Move X0, [X0+56]

Method: System.String GetUnicode(System.String ascii)

Disassembly:
	0x0334DE54 ADD X7, X19, 0x3C
	0x0334DE58 MOV X4, X20
	0x0334DE5C LDP X20, X19, [X31 + 0x10]
	0x0334DE60 MOVZ W0, 0x2
	0x0334DE64 MOV W1, W31
	0x0334DE68 MOV X3, X21
	0x0334DE6C LDP X30, X21, [X31], #0x20
	0x0334DE70 B 0x1C7110C
	0x0334DE74 STP X30, X23, [X31 - 0x30]!
	0x0334DE78 STP X22, X21, [X31 + 0x10]
	0x0334DE7C STP X20, X19, [X31 + 0x20]
	0x0334DE80 MOV W20, W1
	0x0334DE84 MOVI V0.2D, 0xFFFFFFFFFFFFFFFF
	0x0334DE88 MOV X23, X0
	0x0334DE8C MOV X1, X31
	0x0334DE90 MOV W19, W2
	0x0334DE94 MOV X21, X0
	0x0334DE98 ADD X22, X0, 0x14
	0x0334DE9C STR D0, [X23 + 0x10]!
	0x0334DEA0 BL 0x33BDD8C
	0x0334DEA4 ADD X2, X21, 0x28
	0x0334DEA8 ADD X5, X21, 0x30
	0x0334DEAC ADD X6, X21, 0x38
	0x0334DEB0 ADD X7, X21, 0x3C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {9}
	005 Move W3, [X1+16]
	006 Move W2, W31
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Move X0, 0xDAC000
	010 Move X0, [X0+1320]
	011 Call 0x1C17D08
	012 Call 0x1C17F10
	013 Move X19, X0
	014 Move X0, 0xDDD000
	015 Move X0, [X0+1080]
	016 Call 0x1C17D08
	017 Move X1, X0
	018 Move X0, X19
	019 Move X2, X31
	020 Call ArgumentNullException..ctor, X0, X1
	021 Move X0, 0xDDE000
	022 Move X0, [X0+112]
	023 Call 0x1C17D08
	024 Move X1, X0
	025 Move X0, X19
	026 Call 0x1C17DEC

Method: System.String GetUnicode(System.String ascii, System.Int32 index, System.Int32 count)

Disassembly:
	0x0334DEB4 ADD W0, W20, 0x2
	0x0334DEB8 AND W1, W19, 0x1
	0x0334DEBC MOV X4, X22
	0x0334DEC0 LDP X20, X19, [X31 + 0x20]
	0x0334DEC4 LDP X22, X21, [X31 + 0x10]
	0x0334DEC8 MOV X3, X23
	0x0334DECC LDP X30, X23, [X31], #0x30
	0x0334DED0 B 0x1C7110C
	0x0334DED4 LDR W0, [X0 + 0x38]
	0x0334DED8 RET
	0x0334DEDC LDR X0, [X0 + 0x30]
	0x0334DEE0 RET
	0x0334DEE4 STP X30, X21, [X31 - 0x20]!
	0x0334DEE8 STP X20, X19, [X31 + 0x10]
	0x0334DEEC ADRP X21, 0x108F000
	0x0334DEF0 ADRP X19, 0xDDD000
	0x0334DEF4 LDRB W8, [X21 + 0xDA8]
	0x0334DEF8 LDR X19, [X19 + 0x130]
	0x0334DEFC MOV X20, X0
	0x0334DF00 TBNZ X8, 0x0, 0x334DF18
	0x0334DF04 ADRP X0, 0xDDD000
	0x0334DF08 LDR X0, [X0 + 0x130]
	0x0334DF0C BL 0x1C16CF4
	0x0334DF10 MOVZ W8, 0x1
	0x0334DF14 STRB W8, [X21 + 0xDA8]
	0x0334DF18 LDR X8, [X20 + 0x30]
	0x0334DF1C LDR X19, [X19]
	0x0334DF20 CBZ X8, 0x334DF38
	0x0334DF24 LDR X8, [X20]
	0x0334DF28 LDP X9, X1, [X8 + 0x188]
	0x0334DF2C MOV X0, X20
	0x0334DF30 BLR X9
	0x0334DF34 MOV X19, X0
	0x0334DF38 MOV X0, X19
	0x0334DF3C LDP X20, X19, [X31 + 0x10]
	0x0334DF40 LDP X30, X21, [X31], #0x20
	0x0334DF44 RET
	0x0334DF48 CMP W1, 0x1
	0x0334DF4C MOV X20, X0
	0x0334DF50 B.NE 0x334DFAC
	0x0334DF54 MOV X0, X20
	0x0334DF58 BL 0x3EB1AD0
	0x0334DF5C MOV X20, X0
	0x0334DF60 ADRP X0, 0xDD4000
	0x0334DF64 LDR X0, [X0 + 0x690]
	0x0334DF68 BL 0x1C16D08
	0x0334DF6C LDR X8, [X20]
	0x0334DF70 LDR X1, [X8]
	0x0334DF74 BL 0x1C17270
	0x0334DF78 TBZ X0, 0x0, 0x334DF84

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {28}
	005 Move TEMP, X2
	006 And TEMP, TEMP, -2147483648
	007 Compare TEMP, -2147483648
	008 JumpIfEqual {40}
	009 Move TEMP, X3
	010 And TEMP, TEMP, -2147483648
	011 Compare TEMP, -2147483648
	012 JumpIfEqual {21}
	013 Move W8, [X1+16]
	014 Add W9, W3, W2
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move W4, W31
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Call IdnMapping.Convert, X0, X1, X2, X3, X4
	020 Return X0
	021 Move X0, 0xDAF000
	022 Move X0, [X0+1888]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X19, X0
	026 Move X0, 0xDDE000
	027 Move X0, [X0+120]
	028 Move X0, 0xDAC000
	029 Move X0, [X0+1320]
	030 Call 0x1C17D08
	031 Call 0x1C17F10
	032 Move X19, X0
	033 Move X0, 0xDDD000
	034 Move X0, [X0+1080]
	035 Call 0x1C17D08
	036 Move X1, X0
	037 Move X0, X19
	038 Move X2, X31
	039 Call ArgumentNullException..ctor, X0, X1
	040 Move X0, 0xDAF000
	041 Move X0, [X0+1888]
	042 Call 0x1C17D08
	043 Call 0x1C17F10
	044 Move X19, X0
	045 Move X0, 0xDDD000
	046 Move X0, [X0+4040]
	047 Call 0x1C17D08
	048 Move X1, X0
	049 Move X0, X19
	050 Move X2, X31
	051 Call ArgumentOutOfRangeException..ctor, X0, X1
	052 Move X0, 0xDDE000
	053 Move X0, [X0+128]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X19
	057 Call 0x1C17DEC

Method: System.String ToUnicode(System.String s, System.Int32 offset)

Disassembly:
	0x0334D334 LDR W11, [X0 + 0x20]
	0x0334D338 ADD W9, W9, 0x1
	0x0334D33C MUL W9, W9, W8
	0x0334D340 ADD W8, W11, W8
	0x0334D344 SDIV W8, W9, W8
	0x0334D348 ADD W0, W8, W10
	0x0334D34C RET
	0x0334D350 AND W8, W1, 0xFFFF
	0x0334D354 CMP W8, 0x3A
	0x0334D358 B.CS 0x334D364
	0x0334D35C SUB W0, W8, 0x16
	0x0334D360 RET
	0x0334D364 CMP W8, 0x5B
	0x0334D368 B.CS 0x334D374
	0x0334D36C SUB W0, W8, 0x41
	0x0334D370 RET
	0x0334D374 AND W9, W1, 0xFFFF
	0x0334D378 CMP W9, 0x7B
	0x0334D37C B.CS 0x334D388
	0x0334D380 SUB W0, W8, 0x61
	0x0334D384 RET
	0x0334D388 LDR W0, [X0 + 0x14]
	0x0334D38C RET
	0x0334D390 STP X30, X21, [X31 - 0x20]!
	0x0334D394 STP X20, X19, [X31 + 0x10]
	0x0334D398 ADRP X19, 0x108F000
	0x0334D39C ADRP X21, 0xDDD000
	0x0334D3A0 LDRB W8, [X19 + 0xD9D]
	0x0334D3A4 LDR X21, [X21 + 0x98]
	0x0334D3A8 TBNZ X8, 0x0, 0x334D3CC
	0x0334D3AC ADRP X0, 0xDA8000
	0x0334D3B0 LDR X0, [X0 + 0xC48]
	0x0334D3B4 BL 0x1C16CF4
	0x0334D3B8 ADRP X0, 0xDDD000
	0x0334D3BC LDR X0, [X0 + 0x98]
	0x0334D3C0 BL 0x1C16CF4
	0x0334D3C4 MOVZ W8, 0x1
	0x0334D3C8 STRB W8, [X19 + 0xD9D]
	0x0334D3CC LDR X8, [X21]
	0x0334D3D0 LDR X8, [X8 + 0xB8]
	0x0334D3D4 LDR X19, [X8]
	0x0334D3D8 CBNZ X19, 0x334D444
	0x0334D3DC ADRP X8, 0xDA8000
	0x0334D3E0 LDR X8, [X8 + 0xC48]
	0x0334D3E4 LDR X0, [X8]
	0x0334D3E8 LDR W8, [X0 + 0xE0]
	0x0334D3EC CBNZ W8, 0x334D3F4
	0x0334D3F0 BL 0x1C16DFC
	0x0334D3F4 MOV X0, X31
	0x0334D3F8 BL 0x33387A0
	0x0334D3FC CBZ X0, 0x334D41C
	0x0334D400 MOV X20, X0
	0x0334D404 LDR X0, [X21]
	0x0334D408 BL 0x1C16F10
	0x0334D40C MOV X1, X20
	0x0334D410 MOV X19, X0
	0x0334D414 BL 0x334D454
	0x0334D418 B 0x334D420
	0x0334D41C MOV X19, X31
	0x0334D420 LDR X8, [X21]
	0x0334D424 MOV X1, X19
	0x0334D428 MOV X2, X31
	0x0334D42C LDR X0, [X8 + 0xB8]
	0x0334D430 BL 0x1C24138
	0x0334D434 CBZ X0, 0x334D444
	0x0334D438 LDR X8, [X21]
	0x0334D43C LDR X8, [X8 + 0xB8]
	0x0334D440 LDR X19, [X8]
	0x0334D444 MOV X0, X19
	0x0334D448 LDP X20, X19, [X31 + 0x10]
	0x0334D44C LDP X30, X21, [X31], #0x20
	0x0334D450 RET
	0x0334D454 STP X30, X21, [X31 - 0x20]!
	0x0334D458 STP X20, X19, [X31 + 0x10]
	0x0334D45C ADRP X21, 0x108F000
	0x0334D460 LDRB W8, [X21 + 0xDA0]
	0x0334D464 MOV X20, X1
	0x0334D468 MOV X19, X0
	0x0334D46C TBNZ X8, 0x0, 0x334D4CC
	0x0334D470 ADRP X0, 0xDDB000
	0x0334D474 LDR X0, [X0 + 0xA60]
	0x0334D478 BL 0x1C16CF4
	0x0334D47C ADRP X0, 0xDDD000
	0x0334D480 LDR X0, [X0 + 0xA0]
	0x0334D484 BL 0x1C16CF4
	0x0334D488 ADRP X0, 0xDDD000
	0x0334D48C LDR X0, [X0 + 0xA8]
	0x0334D490 BL 0x1C16CF4
	0x0334D494 ADRP X0, 0xDDD000
	0x0334D498 LDR X0, [X0 + 0xB0]
	0x0334D49C BL 0x1C16CF4
	0x0334D4A0 ADRP X0, 0xDDD000
	0x0334D4A4 LDR X0, [X0 + 0xB8]
	0x0334D4A8 BL 0x1C16CF4
	0x0334D4AC ADRP X0, 0xDDD000
	0x0334D4B0 LDR X0, [X0 + 0xC0]
	0x0334D4B4 BL 0x1C16CF4
	0x0334D4B8 ADRP X0, 0xDDD000
	0x0334D4BC LDR X0, [X0 + 0xC8]
	0x0334D4C0 BL 0x1C16CF4
	0x0334D4C4 MOVZ W8, 0x1
	0x0334D4C8 STRB W8, [X21 + 0xDA0]
	0x0334D4CC MOV X0, X19
	0x0334D4D0 MOV X1, X31
	0x0334D4D4 BL 0x33BDD8C
	0x0334D4D8 CBZ X20, 0x334D59C
	0x0334D4DC LDR X8, [X20]
	0x0334D4E0 MOV X0, X20
	0x0334D4E4 LDP X9, X1, [X8 + 0x198]
	0x0334D4E8 BLR X9
	0x0334D4EC CMP W0, 0x7F
	0x0334D4F0 B.NE 0x334D578
	0x0334D4F4 MOVZ W8, 0xF4
	0x0334D4F8 STR W8, [X19 + 0x10]
	0x0334D4FC ADRP X8, 0xDDD000
	0x0334D500 LDR X8, [X8 + 0xB0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1090000
	007 Move W8, [X22+3482]
	008 Move W19, W2
	009 Move X21, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xDA9000
	016 Move X0, [X0+3144]
	017 Call 0x1C17CF4
	018 Move X0, 0xDDD000
	019 Move X0, [X0+4064]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3482], W8
	023 Compare X21, 0
	024 JumpIfEqual {100}
	025 Move W8, [X21+16]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move W22, W31
	028 Move X0, X21
	029 Move W1, W22
	030 Move X2, X31
	031 Call String.get_Chars, X0, X1
	032 And W8, W0, 0xFFFF
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W8, [X21+16]
	035 Add W22, W22, 1
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, X20
	038 Move X1, X21
	039 Move W2, W19
	040 Call IdnMapping.NamePrep, X0, X1, X2
	041 Move X21, X0
	042 Compare X0, 0
	043 JumpIfEqual {100}
	044 Move X8, 0xDDD000
	045 Move X8, [X8+4064]
	046 Move W2, 5
	047 Move X0, X21
	048 Move X3, X31
	049 Move X1, [X8]
	050 Call String.StartsWith, X0, X1, X2
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {93}
	055 Move X8, 0xDA9000
	056 Move X8, [X8+3144]
	057 Move X0, [X8]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X31
	063 Call CultureInfo.get_InvariantCulture
	064 Move X1, X0
	065 Move X0, X21
	066 Move X2, X31
	067 Call String.ToLower, X0, X1
	068 Compare X0, 0
	069 JumpIfEqual {100}
	070 Move W1, 4
	071 Move X2, X31
	072 Move X22, X0
	073 Call String.Substring, X0, X1
	074 Move X8, [X20+24]
	075 Compare X8, 0
	076 JumpIfEqual {100}
	077 Move X1, X0
	078 Move X0, X8
	079 Move W2, W19
	080 Call Bootstring.Decode, X0, X1, X2
	081 Move X21, X0
	082 Move X0, X20
	083 Move X1, X21
	084 Move W2, W19
	085 Call IdnMapping.ToAscii, X0, X1, X2
	086 Move X1, X0
	087 Move W2, 5
	088 Move X0, X22
	089 Move X3, X31
	090 Call String.Compare, X0, X1, X2
	091 Compare W0, 0
	092 JumpIfNotEqual {101}
	093 Move X0, X21
	094 Move X20, [X31+32]
	095 Move X19, [X31+40]
	096 Move X22, [X31+16]
	097 Move X21, [X31+24]
	098 Move X30, [X31+48]
	099 Return X0
	100 Call 0x1C17F20
	101 Move [X31+12], W19
	102 Move X0, 0xDA7000
	103 Move X0, [X0+1880]
	104 Call 0x1C17D08
	105 Add X1, X31, 12
	106 Call 0x1C17E04
	107 Move X19, X0
	108 Move X0, 0xDDE000
	109 Move X0, [X0]
	110 Call 0x1C17D08
	111 Move X1, X19
	112 Move X2, X31
	113 Call String.Format, X0, X1
	114 Move X19, X0
	115 Move X0, 0xDAF000
	116 Move X0, [X0+1400]
	117 Call 0x1C17D08
	118 Call 0x1C17F10
	119 Move X1, X19
	120 Move X2, X31
	121 Move X20, X0
	122 Call ArgumentException..ctor, X0, X1
	123 Move X0, 0xDDE000
	124 Move X0, [X0+8]
	125 Call 0x1C17D08
	126 Move X1, X0
	127 Move X0, X20
	128 Call 0x1C17DEC

