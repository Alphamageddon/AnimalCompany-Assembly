Type: System.Globalization.UmAlQuraCalendar

Method: System.Globalization.UmAlQuraCalendar/DateMapping[] InitDateMapping()

Disassembly:
	0x0333F2BC STP X20, X19, [X31 + 0x10]
	0x0333F2C0 ADRP X20, 0x109D000
	0x0333F2C4 STR X1, [X31 + 0x8]
	0x0333F2C8 ADRP X19, 0xDB5000
	0x0333F2CC LDRB W8, [X20 + 0xD53]
	0x0333F2D0 LDR X19, [X19 + 0x9F0]
	0x0333F2D4 TBNZ X8, 0x0, 0x333F2F8
	0x0333F2D8 ADRP X0, 0xDB5000
	0x0333F2DC LDR X0, [X0 + 0x9F0]
	0x0333F2E0 BL 0x1C16CF4
	0x0333F2E4 ADRP X0, 0xDE9000
	0x0333F2E8 LDR X0, [X0 + 0xBE0]
	0x0333F2EC BL 0x1C16CF4
	0x0333F2F0 MOVZ W8, 0x1
	0x0333F2F4 STRB W8, [X20 + 0xD53]
	0x0333F2F8 LDR X0, [X19]
	0x0333F2FC ADRP X19, 0xDE9000
	0x0333F300 LDR W8, [X0 + 0xE0]
	0x0333F304 LDR X19, [X19 + 0xBE0]
	0x0333F308 CBNZ W8, 0x333F310
	0x0333F30C BL 0x1C16DFC
	0x0333F310 ADD X0, X31, 0x8
	0x0333F314 MOV X1, X31
	0x0333F318 BL 0x3361708
	0x0333F31C LDR X8, [X19]
	0x0333F320 MOV X19, X0
	0x0333F324 LDR W9, [X8 + 0xE0]
	0x0333F328 CBNZ W9, 0x333F334
	0x0333F32C MOV X0, X8
	0x0333F330 BL 0x1C16DFC
	0x0333F334 MOV X0, X19
	0x0333F338 BL 0x333E754
	0x0333F33C LDP X20, X19, [X31 + 0x10]
	0x0333F340 MOVZ W0, 0x1
	0x0333F344 LDR X30, [X31], #0x20
	0x0333F348 RET
	0x0333F34C STR X30, [X31 - 0x20]!
	0x0333F350 STP X20, X19, [X31 + 0x10]
	0x0333F354 ADRP X19, 0x109D000
	0x0333F358 ADRP X20, 0xDB5000
	0x0333F35C LDRB W8, [X19 + 0xD54]
	0x0333F360 LDR X20, [X20 + 0xE58]
	0x0333F364 TBNZ X8, 0x0, 0x333F37C
	0x0333F368 ADRP X0, 0xDB5000
	0x0333F36C LDR X0, [X0 + 0xE58]
	0x0333F370 BL 0x1C16CF4
	0x0333F374 MOVZ W8, 0x1
	0x0333F378 STRB W8, [X19 + 0xD54]
	0x0333F37C LDR X0, [X20]
	0x0333F380 MOVZ W1, 0x1
	0x0333F384 BL 0x1C16D6C
	0x0333F388 CBZ X0, 0x333F3A8
	0x0333F38C LDR W8, [X0 + 0x18]
	0x0333F390 CBZ W8, 0x333F3AC
	0x0333F394 LDP X20, X19, [X31 + 0x10]
	0x0333F398 MOVZ W8, 0x1
	0x0333F39C STR W8, [X0 + 0x20]
	0x0333F3A0 LDR X30, [X31], #0x20
	0x0333F3A4 RET
	0x0333F3A8 BL 0x1C16F20
	0x0333F3AC BL 0x1C16F28
	0x0333F3B0 LDR X8, [X0]
	0x0333F3B4 MOVZ W2, 0x2
	0x0333F3B8 LDR X4, [X8 + 0x318]
	0x0333F3BC LDR X3, [X8 + 0x320]
	0x0333F3C0 BR X4
	0x0333F3C4 STR X30, [X31 - 0x30]!
	0x0333F3C8 STP X22, X21, [X31 + 0x10]
	0x0333F3CC STP X20, X19, [X31 + 0x20]
	0x0333F3D0 ADRP X21, 0x109D000
	0x0333F3D4 ADRP X22, 0xDE9000
	0x0333F3D8 LDRB W8, [X21 + 0xD55]
	0x0333F3DC LDR X22, [X22 + 0xBE0]
	0x0333F3E0 MOV W19, W2
	0x0333F3E4 MOV W20, W1
	0x0333F3E8 TBNZ X8, 0x0, 0x333F400
	0x0333F3EC ADRP X0, 0xDE9000
	0x0333F3F0 LDR X0, [X0 + 0xBE0]
	0x0333F3F4 BL 0x1C16CF4
	0x0333F3F8 MOVZ W8, 0x1
	0x0333F3FC STRB W8, [X21 + 0xD55]
	0x0333F400 LDR X0, [X22]
	0x0333F404 LDR W8, [X0 + 0xE0]
	0x0333F408 CBNZ W8, 0x333F410
	0x0333F40C BL 0x1C16DFC
	0x0333F410 MOV W0, W20
	0x0333F414 MOV W1, W19
	0x0333F418 BL 0x333E9A8
	0x0333F41C LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x109E000
	009 Move X21, 0xDDD000
	010 Move X19, 0xDEA000
	011 Move W8, [X20+3397]
	012 Move X21, [X21+2080]
	013 Move X19, [X19+3024]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xDEA000
	019 Move X0, [X0+3032]
	020 Call 0x1C17CF4
	021 Move X0, 0xDDD000
	022 Move X0, [X0+2080]
	023 Call 0x1C17CF4
	024 Move X0, 0xDEA000
	025 Move X0, [X0+3024]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+3397], W8
	029 Move X0, [X21]
	030 Move W1, 736
	031 Call 0x1C17D6C
	032 Move X1, [X19]
	033 Move X2, X31
	034 Move X19, X0
	035 Call RuntimeHelpers.InitializeArray, X0, X1
	036 Compare X19, 0
	037 JumpIfEqual {94}
	038 Move X9, 0xDEA000
	039 Move W8, [X19+24]
	040 Move X9, [X9+3032]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X0, [X9]
	043 Add W9, W8, 3
	044 NotImplemented "Instruction CSEL not yet implemented."
	045 NotImplemented "Instruction SBFM not yet implemented."
	046 Call 0x1C17D6C
	047 Compare X0, 0
	048 JumpIfEqual {94}
	049 Move W8, [X0+24]
	050 Move X20, X0
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X21, X31
	053 Add X22, X20, 40
	054 Move W23, 3
	055 Move W11, [X19+24]
	056 Subtract W8, W23, 3
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Subtract W9, W23, 2
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Subtract W10, W23, 1
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Add X9, X19, W9
	064 Add X11, X19, 32
	065 Add X8, X19, W8
	066 NotImplemented "Instruction LDRSH not yet implemented."
	067 NotImplemented "Instruction LDRSH not yet implemented."
	068 NotImplemented "Instruction LDRSH not yet implemented."
	069 NotImplemented "Instruction LDRSH not yet implemented."
	070 Add X0, X31, 8
	071 Move X4, X31
	072 Move [X31+8], X31
	073 Call DateTime..ctor, X0, X1, X2, X3
	074 Move W8, [X20+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X9, [X31+8]
	077 And X10, X24, 0
	078 Add X21, X21, 1
	079 Add W23, W23, 4
	080 Move [X22-8], X10
	081 Move [X22], X9
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Add X22, X22, 16
	084 Move X0, X20
	085 Move X20, [X31+48]
	086 Move X19, [X31+56]
	087 Move X22, [X31+32]
	088 Move X21, [X31+40]
	089 Move X24, [X31+16]
	090 Move X23, [X31+24]
	091 Move X30, [X31+64]
	092 Return X0
	093 Call 0x1C17F28
	094 Call 0x1C17F20

Method: System.DateTime get_MinSupportedDateTime()

Disassembly:
	0x0333F460 MOV W20, W2
	0x0333F464 MOV W19, W1
	0x0333F468 TBNZ X8, 0x0, 0x333F480
	0x0333F46C ADRP X0, 0xDE9000
	0x0333F470 LDR X0, [X0 + 0xBE0]
	0x0333F474 BL 0x1C16CF4
	0x0333F478 MOVZ W8, 0x1
	0x0333F47C STRB W8, [X21 + 0xD56]
	0x0333F480 LDR X0, [X22]
	0x0333F484 LDR W8, [X0 + 0xE0]
	0x0333F488 CBNZ W8, 0x333F490
	0x0333F48C BL 0x1C16DFC
	0x0333F490 MOV W0, W19
	0x0333F494 MOV W1, W20
	0x0333F498 BL 0x333E9A8
	0x0333F49C MOV W0, W19
	0x0333F4A0 BL 0x333F1AC
	0x0333F4A4 LDP X20, X19, [X31 + 0x20]
	0x0333F4A8 LDP X22, X21, [X31 + 0x10]
	0x0333F4AC CMP W0, 0x163
	0x0333F4B0 CSET W0, EQ
	0x0333F4B4 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x109E000
	005 Move X19, 0xDEA000
	006 Move W8, [X20+3398]
	007 Move X19, [X19+3040]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDEA000
	013 Move X0, [X0+3040]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3398], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.DateTime get_MaxSupportedDateTime()

Disassembly:
	0x0333F4B8 RET
	0x0333F4BC SUB X31, X31, 0x70
	0x0333F4C0 STR X30, [X31 + 0x10]
	0x0333F4C4 STP X28, X27, [X31 + 0x20]
	0x0333F4C8 STP X26, X25, [X31 + 0x30]
	0x0333F4CC STP X24, X23, [X31 + 0x40]
	0x0333F4D0 STP X22, X21, [X31 + 0x50]
	0x0333F4D4 STP X20, X19, [X31 + 0x60]
	0x0333F4D8 ADRP X28, 0x109D000
	0x0333F4DC LDRB W8, [X28 + 0xD57]
	0x0333F4E0 LDR W26, [X31 + 0x70]
	0x0333F4E4 MOV W20, W7
	0x0333F4E8 MOV W21, W6
	0x0333F4EC MOV W22, W5
	0x0333F4F0 MOV W23, W4
	0x0333F4F4 MOV W24, W3
	0x0333F4F8 MOV W19, W2
	0x0333F4FC MOV W25, W1
	0x0333F500 MOV X27, X0
	0x0333F504 TBNZ X8, 0x0, 0x333F51C
	0x0333F508 ADRP X0, 0xDE9000
	0x0333F50C LDR X0, [X0 + 0xBE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x109E000
	005 Move X19, 0xDEA000
	006 Move W8, [X20+3399]
	007 Move X19, [X19+3040]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDEA000
	013 Move X0, [X0+3040]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3399], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+16]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void .ctor()

Disassembly:
	0x0333F510 BL 0x1C16CF4
	0x0333F514 MOVZ W8, 0x1

ISIL:
	001 Move X1, X31
	002 Call Calendar..ctor, X0
	003 Return 

Method: System.Int32 get_BaseCalendarID()

Disassembly:
	0x0333F518 STRB W8, [X28 + 0xD57]
	0x0333F51C ADRP X28, 0xDE9000

ISIL:
	001 Move W0, 6
	002 Return X0

Method: System.Int32 get_ID()

Disassembly:
	0x0333F520 LDR X28, [X28 + 0xBE0]
	0x0333F524 SUB W8, W24, 0x1

ISIL:
	001 Move W0, 23
	002 Return X0

Method: System.Void ConvertHijriToGregorian(System.Int32 HijriYear, System.Int32 HijriMonth, System.Int32 HijriDay, ref System.Int32 yg, ref System.Int32 mg, ref System.Int32 dg)

Disassembly:
	0x0333F528 CMP W8, 0x1C
	0x0333F52C B.LS 0x333F610
	0x0333F530 LDR X8, [X27]
	0x0333F534 MOV X0, X27
	0x0333F538 MOV W1, W25
	0x0333F53C MOV W2, W19
	0x0333F540 LDR X9, [X8 + 0x208]
	0x0333F544 LDR X4, [X8 + 0x210]
	0x0333F548 MOV W3, W26
	0x0333F54C BLR X9
	0x0333F550 CMP W24, 0x1
	0x0333F554 MOV W26, W0
	0x0333F558 B.LT 0x333F564
	0x0333F55C CMP W26, W24
	0x0333F560 B.GE 0x333F630
	0x0333F564 ADRP X0, 0xDB6000
	0x0333F568 LDR X0, [X0 + 0xC48]
	0x0333F56C BL 0x1C16D08
	0x0333F570 BL 0x19903D0
	0x0333F574 BL 0x33387A0
	0x0333F578 MOV X20, X0
	0x0333F57C ADRP X0, 0xDE9000
	0x0333F580 LDR X0, [X0 + 0x9A8]
	0x0333F584 BL 0x1C16D08
	0x0333F588 MOV X1, X31
	0x0333F58C BL 0x33BDD84
	0x0333F590 STR W26, [X31 + 0xC]
	0x0333F594 ADRP X22, 0xDB4000
	0x0333F598 LDR X22, [X22 + 0x758]
	0x0333F59C MOV X21, X0
	0x0333F5A0 MOV X0, X22
	0x0333F5A4 BL 0x1C16D08
	0x0333F5A8 ADD X1, X31, 0xC
	0x0333F5AC BL 0x1C16E04
	0x0333F5B0 MOV X23, X0
	0x0333F5B4 MOV X0, X22
	0x0333F5B8 STR W19, [X31 + 0x8]
	0x0333F5BC BL 0x1C16D08
	0x0333F5C0 ADD X1, X31, 0x8
	0x0333F5C4 BL 0x1C16E04
	0x0333F5C8 MOV X3, X0
	0x0333F5CC MOV X0, X20
	0x0333F5D0 MOV X1, X21
	0x0333F5D4 MOV X2, X23
	0x0333F5D8 MOV X4, X31
	0x0333F5DC BL 0x3227D58
	0x0333F5E0 MOV X19, X0
	0x0333F5E4 ADRP X0, 0xDBC000
	0x0333F5E8 LDR X0, [X0 + 0x760]
	0x0333F5EC BL 0x1C16D08
	0x0333F5F0 BL 0x1C16F10
	0x0333F5F4 MOV X20, X0
	0x0333F5F8 ADRP X0, 0xDE8000
	0x0333F5FC LDR X0, [X0 + 0xDB8]
	0x0333F600 BL 0x1C16D08
	0x0333F604 MOV X1, X0
	0x0333F608 MOV X0, X20
	0x0333F60C B 0x333F6E0
	0x0333F610 LDR X0, [X28]
	0x0333F614 LDR W8, [X0 + 0xE0]
	0x0333F618 CBNZ W8, 0x333F620
	0x0333F61C BL 0x1C16DFC
	0x0333F620 MOV W0, W25
	0x0333F624 MOV W1, W19
	0x0333F628 MOV W2, W26
	0x0333F62C BL 0x333EAEC
	0x0333F630 LDR X0, [X28]
	0x0333F634 LDR W8, [X0 + 0xE0]
	0x0333F638 CBNZ W8, 0x333F640
	0x0333F63C BL 0x1C16DFC
	0x0333F640 MOV W0, W25
	0x0333F644 MOV W1, W19
	0x0333F648 MOV W2, W24
	0x0333F64C BL 0x333E68C
	0x0333F650 TBNZ X0, 0x0, 0x333F6B0
	0x0333F654 MOV X19, X0
	0x0333F658 MOV W0, W23
	0x0333F65C MOV W1, W22
	0x0333F660 MOV W2, W21
	0x0333F664 MOV W3, W20
	0x0333F668 MOV X4, X31
	0x0333F66C BL 0x3333430
	0x0333F670 MOVZ X8, 0xC000
	0x0333F674 MOVK X8, 0x2A690000
	0x0333F678 MOVK X8, 0xC9
	0x0333F67C MADD X1, X19, X8, X0
	0x0333F680 ADD X0, X31, 0x18
	0x0333F684 MOV X2, X31
	0x0333F688 STR X31, [X31 + 0x18]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x109E000
	011 Move X25, 0xDEA000
	012 Move W8, [X26+3400]
	013 Move X25, [X25+3040]
	014 Move X19, X5
	015 Move X20, X4
	016 Move X21, X3
	017 Move W23, W2
	018 Move W22, W1
	019 Move W24, W0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0xDB6000
	025 Move X0, [X0+2544]
	026 Call 0x1C17CF4
	027 Move X0, 0xDEA000
	028 Move X0, [X0+3040]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X26+3400], W8
	032 Move X0, [X25]
	033 Move [X31+8], X31
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X25]
	039 Move X8, [X0+184]
	040 Move X11, [X8]
	041 Compare X11, 0
	042 JumpIfEqual {99}
	043 Move W9, [X11+24]
	044 Subtract W10, W24, 1318
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X9, W10
	047 Add X11, X11, X9
	048 Move X11, [X11+40]
	049 Move [X31+8], X11
	050 Move X11, [X8]
	051 Compare X11, 0
	052 JumpIfEqual {99}
	053 Move W8, [X11+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X8, 0xDB6000
	056 Move X8, [X8+2544]
	057 Subtract W23, W23, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add X9, X11, X9
	060 Move W9, [X9+32]
	061 Subtract W10, W22, 1
	062 And W11, W9, 1
	063 Add W11, W23, W11
	064 Subtract W10, W10, 1
	065 Add W23, W11, 29
	066 NotImplemented "Instruction SBFM not yet implemented."
	067 Move X0, [X8]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 NotImplemented "Instruction SCVTF not yet implemented."
	073 Add X0, X31, 8
	074 Move X1, X31
	075 Call DateTime.AddDays, X0, V0
	076 Move [X31+8], X0
	077 Add X0, X31, 8
	078 Move X1, X31
	079 Call DateTime.get_Year, X0
	080 Move [X21], W0
	081 Add X0, X31, 8
	082 Move X1, X31
	083 Call DateTime.get_Month, X0
	084 Move [X20], W0
	085 Add X0, X31, 8
	086 Move X1, X31
	087 Call DateTime.get_Day, X0
	088 Move [X19], W0
	089 Move X20, [X31+64]
	090 Move X19, [X31+72]
	091 Move X22, [X31+48]
	092 Move X21, [X31+56]
	093 Move X24, [X31+32]
	094 Move X23, [X31+40]
	095 Move X26, [X31+16]
	096 Move X25, [X31+24]
	097 Move X30, [X31+80]
	098 Return 
	099 Call 0x1C17F20
	100 Call 0x1C17F28

Method: System.Int64 GetAbsoluteDateUmAlQura(System.Int32 year, System.Int32 month, System.Int32 day)

Disassembly:
	0x0333F68C BL 0x335EEB0
	0x0333F690 LDP X30, X0, [X31 + 0x10]
	0x0333F694 LDP X20, X19, [X31 + 0x60]
	0x0333F698 LDP X22, X21, [X31 + 0x50]
	0x0333F69C LDP X24, X23, [X31 + 0x40]
	0x0333F6A0 LDP X26, X25, [X31 + 0x30]
	0x0333F6A4 LDP X28, X27, [X31 + 0x20]
	0x0333F6A8 ADD X31, X31, 0x70
	0x0333F6AC RET
	0x0333F6B0 ADRP X0, 0xDE9000
	0x0333F6B4 LDR X0, [X0 + 0x8B8]
	0x0333F6B8 BL 0x1C16D08
	0x0333F6BC MOV X1, X31
	0x0333F6C0 BL 0x33BDD84
	0x0333F6C4 MOV X19, X0
	0x0333F6C8 ADRP X0, 0xDBC000
	0x0333F6CC LDR X0, [X0 + 0x760]
	0x0333F6D0 BL 0x1C16D08
	0x0333F6D4 BL 0x1C16F10
	0x0333F6D8 MOV X20, X0
	0x0333F6DC MOV X1, X31
	0x0333F6E0 MOV X2, X19
	0x0333F6E4 MOV X3, X31
	0x0333F6E8 BL 0x3311888
	0x0333F6EC ADRP X0, 0xDE9000
	0x0333F6F0 LDR X0, [X0 + 0xC10]
	0x0333F6F4 BL 0x1C16D08
	0x0333F6F8 MOV X1, X0
	0x0333F6FC MOV X0, X20
	0x0333F700 BL 0x1C16DEC
	0x0333F704 STP X30, X19, [X31 - 0x10]!
	0x0333F708 MOV X19, X0
	0x0333F70C LDR W0, [X0 + 0x18]
	0x0333F710 ADDS W31, W0, 0x1
	0x0333F714 B.NE 0x333F738
	0x0333F718 LDR X8, [X19]
	0x0333F71C MOV X0, X19
	0x0333F720 LDP X9, X1, [X8 + 0x1A8]
	0x0333F724 BLR X9
	0x0333F728 MOVZ W1, 0x5AB
	0x0333F72C MOV X2, X31
	0x0333F730 BL 0x33335E0
	0x0333F734 STR W0, [X19 + 0x18]
	0x0333F738 LDP X30, X19, [X31], #0x10
	0x0333F73C RET
	0x0333F740 STR X30, [X31 - 0x30]!
	0x0333F744 STP X22, X21, [X31 + 0x10]
	0x0333F748 STP X20, X19, [X31 + 0x20]
	0x0333F74C MOV W19, W1
	0x0333F750 CMP W1, 0x63

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x109E000
	009 Move X22, 0xDEA000
	010 Move W8, [X23+3401]
	011 Move X22, [X22+3040]
	012 Move W19, W2
	013 Move W20, W1
	014 Move W21, W0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xDEA000
	020 Move X0, [X0+784]
	021 Call 0x1C17CF4
	022 Move X0, 0xDEA000
	023 Move X0, [X0+3040]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+3401], W8
	027 Move X0, [X22]
	028 Move [X31+8], X31
	029 Move [X31+4], W31
	030 Move X22, 0xDEA000
	031 Move W8, [X0+224]
	032 Move X22, [X22+784]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Add X3, X31, 12
	037 Add X4, X31, 8
	038 Add X5, X31, 4
	039 Move W0, W21
	040 Move W1, W20
	041 Move W2, W19
	042 Call UmAlQuraCalendar.ConvertHijriToGregorian, X0, X1, X2, X3, X4, X5
	043 Move X0, [X22]
	044 Move W19, [X31+8]
	045 Move W21, [X31+12]
	046 Move W20, [X31+4]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move W0, W21
	052 Move W1, W19
	053 Move W2, W20
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X30, [X31+16]
	059 Move X23, [X31+24]
	060 Move X3, X31
	061 Add X31, X31, 64
	062 Call GregorianCalendar.GetAbsoluteDate, X0, X1, X2
	063 Return X0

Method: System.Void CheckTicksRange(System.Int64 ticks)

Disassembly:
	0x0333F754 MOV X20, X0
	0x0333F758 B.EQ 0x333F768
	0x0333F75C SUB W8, W19, 0x526
	0x0333F760 CMP W8, 0xB7
	0x0333F764 B.CS 0x333F788
	0x0333F768 MOV X0, X20
	0x0333F76C MOV X1, X31
	0x0333F770 BL 0x3332E70
	0x0333F774 STR W19, [X20 + 0x18]
	0x0333F778 LDP X20, X19, [X31 + 0x20]
	0x0333F77C LDP X22, X21, [X31 + 0x10]
	0x0333F780 LDR X30, [X31], #0x30
	0x0333F784 RET
	0x0333F788 ADRP X0, 0xDB6000
	0x0333F78C LDR X0, [X0 + 0xC48]
	0x0333F790 BL 0x1C16D08
	0x0333F794 BL 0x19903D0
	0x0333F798 BL 0x33387A0
	0x0333F79C MOV X19, X0
	0x0333F7A0 ADRP X0, 0xDE3000
	0x0333F7A4 LDR X0, [X0 + 0x370]
	0x0333F7A8 BL 0x1C16D08
	0x0333F7AC MOV X1, X31
	0x0333F7B0 BL 0x33BDD84
	0x0333F7B4 MOVZ W8, 0x526
	0x0333F7B8 STR W8, [X31 + 0xC]
	0x0333F7BC ADRP X21, 0xDB4000
	0x0333F7C0 LDR X21, [X21 + 0x758]
	0x0333F7C4 MOV X20, X0
	0x0333F7C8 MOV X0, X21
	0x0333F7CC BL 0x1C16D08
	0x0333F7D0 ADD X1, X31, 0xC
	0x0333F7D4 BL 0x1C16E04
	0x0333F7D8 MOV X22, X0
	0x0333F7DC MOVZ W8, 0x5DC
	0x0333F7E0 MOV X0, X21
	0x0333F7E4 STR W8, [X31 + 0x8]
	0x0333F7E8 BL 0x1C16D08
	0x0333F7EC ADD X1, X31, 0x8
	0x0333F7F0 BL 0x1C16E04
	0x0333F7F4 MOV X3, X0
	0x0333F7F8 MOV X0, X19
	0x0333F7FC MOV X1, X20
	0x0333F800 MOV X2, X22
	0x0333F804 MOV X4, X31
	0x0333F808 BL 0x3227D58
	0x0333F80C MOV X19, X0
	0x0333F810 ADRP X0, 0xDBC000
	0x0333F814 LDR X0, [X0 + 0x760]
	0x0333F818 BL 0x1C16D08
	0x0333F81C BL 0x1C16F10
	0x0333F820 MOV X20, X0
	0x0333F824 ADRP X0, 0xDBE000
	0x0333F828 LDR X0, [X0 + 0xEC8]
	0x0333F82C BL 0x1C16D08
	0x0333F830 MOV X1, X0
	0x0333F834 MOV X0, X20
	0x0333F838 MOV X2, X19
	0x0333F83C MOV X3, X31
	0x0333F840 BL 0x3311888
	0x0333F844 ADRP X0, 0xDE9000
	0x0333F848 LDR X0, [X0 + 0xC18]
	0x0333F84C BL 0x1C16D08
	0x0333F850 MOV X1, X0
	0x0333F854 MOV X0, X20
	0x0333F858 BL 0x1C16DEC
	0x0333F85C STR X30, [X31 - 0x30]!
	0x0333F860 STP X22, X21, [X31 + 0x10]
	0x0333F864 STP X20, X19, [X31 + 0x20]
	0x0333F868 TBNZ X1, 0x1F, 0x333F8A8
	0x0333F86C CMP W1, 0x63
	0x0333F870 B.LE 0x333F894
	0x0333F874 SUB W8, W1, 0x526
	0x0333F878 CMP W8, 0xB7
	0x0333F87C B.CS 0x333F8C0
	0x0333F880 LDP X20, X19, [X31 + 0x20]
	0x0333F884 LDP X22, X21, [X31 + 0x10]
	0x0333F888 MOV W0, W1
	0x0333F88C LDR X30, [X31], #0x30
	0x0333F890 RET
	0x0333F894 LDP X20, X19, [X31 + 0x20]
	0x0333F898 LDP X22, X21, [X31 + 0x10]
	0x0333F89C MOV X2, X31
	0x0333F8A0 LDR X30, [X31], #0x30
	0x0333F8A4 B 0x3333338
	0x0333F8A8 ADRP X0, 0xDDC000
	0x0333F8AC LDR X0, [X0 + 0x670]
	0x0333F8B0 BL 0x1C16D08
	0x0333F8B4 MOV X1, X31
	0x0333F8B8 BL 0x33BDD84
	0x0333F8BC B 0x333F944
	0x0333F8C0 ADRP X0, 0xDB6000
	0x0333F8C4 LDR X0, [X0 + 0xC48]
	0x0333F8C8 BL 0x1C16D08
	0x0333F8CC BL 0x19903D0
	0x0333F8D0 BL 0x33387A0
	0x0333F8D4 MOV X19, X0
	0x0333F8D8 ADRP X0, 0xDE3000
	0x0333F8DC LDR X0, [X0 + 0x370]
	0x0333F8E0 BL 0x1C16D08
	0x0333F8E4 MOV X1, X31
	0x0333F8E8 BL 0x33BDD84
	0x0333F8EC MOVZ W8, 0x526
	0x0333F8F0 STR W8, [X31 + 0xC]
	0x0333F8F4 ADRP X21, 0xDB4000
	0x0333F8F8 LDR X21, [X21 + 0x758]
	0x0333F8FC MOV X20, X0
	0x0333F900 MOV X0, X21
	0x0333F904 BL 0x1C16D08
	0x0333F908 ADD X1, X31, 0xC
	0x0333F90C BL 0x1C16E04
	0x0333F910 MOV X22, X0
	0x0333F914 MOVZ W8, 0x5DC
	0x0333F918 MOV X0, X21
	0x0333F91C STR W8, [X31 + 0x8]
	0x0333F920 BL 0x1C16D08
	0x0333F924 ADD X1, X31, 0x8
	0x0333F928 BL 0x1C16E04
	0x0333F92C MOV X3, X0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x109E000
	009 Move X20, 0xDEA000
	010 Move W8, [X21+3402]
	011 Move X20, [X20+3040]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xDB6000
	018 Move X0, [X0+2544]
	019 Call 0x1C17CF4
	020 Move X0, 0xDEA000
	021 Move X0, [X0+3040]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3402], W8
	025 Move X0, [X20]
	026 Move X21, 0xDB6000
	027 Move W8, [X0+224]
	028 Move X21, [X21+2544]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, [X21]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X8, [X20]
	038 Move X1, X31
	039 Move X8, [X8+184]
	040 Add X0, X8, 8
	041 Call DateTime.get_Ticks, X0
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, [X20]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, [X21]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X8, [X20]
	054 Move X1, X31
	055 Move X8, [X8+184]
	056 Add X0, X8, 16
	057 Call DateTime.get_Ticks, X0
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X22, [X31+32]
	062 Move X21, [X31+40]
	063 Move X30, [X31+16]
	064 Move X23, [X31+24]
	065 Add X31, X31, 64
	066 Return 
	067 Move X0, 0xDB7000
	068 Move X0, [X0+3144]
	069 Call 0x1C17D08
	070 Call 0x19913D0
	071 Call CultureInfo.get_InvariantCulture
	072 Move X19, X0
	073 Move X0, 0xDEA000
	074 Move X0, [X0+2336]
	075 Call 0x1C17D08
	076 Move X1, X31
	077 Call Environment.GetResourceString, X0
	078 Move X21, 0xDEA000
	079 Move X21, [X21+3040]
	080 Move X20, X0
	081 Move X0, X21
	082 Call 0x1C17D08
	083 Call 0x19913D0
	084 Move X0, X21
	085 Call 0x1C17D08
	086 Move X8, [X0+184]
	087 Move X22, 0xDB6000
	088 Move X8, [X8+8]
	089 Move [X31+8], X8
	090 Move X22, [X22+2544]
	091 Move X0, X22
	092 Call 0x1C17D08
	093 Add X1, X31, 8
	094 Call 0x1C17E04
	095 Move X23, X0
	096 Move X0, X21
	097 Call 0x1C17D08
	098 Move X8, [X0+184]
	099 Move X0, X22
	100 Move X8, [X8+16]
	101 Move [X31], X8
	102 Call 0x1C17D08
	103 Add X1, X31, 0
	104 Call 0x1C17E04
	105 Move X3, X0
	106 Move X0, X19
	107 Move X1, X20
	108 Move X2, X23
	109 Move X4, X31
	110 Call String.Format, X0, X1, X2, X3
	111 Move X19, X0
	112 Move X0, 0xDBD000
	113 Move X0, [X0+1888]
	114 Call 0x1C17D08
	115 Call 0x1C17F10
	116 Move X20, X0
	117 Move X0, 0xDE2000
	118 Move X0, [X0+24]
	119 Call 0x1C17D08
	120 Move X1, X0
	121 Move X0, X20
	122 Move X2, X19
	123 Move X3, X31
	124 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	125 Move X0, 0xDEA000
	126 Move X0, [X0+3048]
	127 Call 0x1C17D08
	128 Move X1, X0
	129 Move X0, X20
	130 Call 0x1C17DEC

Method: System.Void CheckEraRange(System.Int32 era)

Disassembly:
	0x0333F930 MOV X0, X19
	0x0333F934 MOV X1, X20
	0x0333F938 MOV X2, X22
	0x0333F93C MOV X4, X31
	0x0333F940 BL 0x3227D58
	0x0333F944 MOV X19, X0
	0x0333F948 ADRP X0, 0xDBC000
	0x0333F94C LDR X0, [X0 + 0x760]
	0x0333F950 BL 0x1C16D08
	0x0333F954 BL 0x1C16F10
	0x0333F958 MOV X20, X0
	0x0333F95C ADRP X0, 0xDE9000
	0x0333F960 LDR X0, [X0 + 0x5A8]
	0x0333F964 BL 0x1C16D08
	0x0333F968 MOV X1, X0
	0x0333F96C MOV X0, X20
	0x0333F970 MOV X2, X19
	0x0333F974 MOV X3, X31
	0x0333F978 BL 0x3311888
	0x0333F97C ADRP X0, 0xDE9000
	0x0333F980 LDR X0, [X0 + 0xC20]
	0x0333F984 BL 0x1C16D08
	0x0333F988 MOV X1, X0
	0x0333F98C MOV X0, X20
	0x0333F990 BL 0x1C16DEC
	0x0333F994 SUB X31, X31, 0x50
	0x0333F998 STP X30, X21, [X31 + 0x30]
	0x0333F99C STP X20, X19, [X31 + 0x40]
	0x0333F9A0 ADRP X21, 0x109D000
	0x0333F9A4 ADRP X19, 0xDE9000

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Return 
	003 Move [X31-32], X30
	004 Move [X31+16], X20
	005 Move [X31+24], X19
	006 Move X0, 0xDEA000
	007 Move X0, [X0+840]
	008 Call 0x1C17D08
	009 Move X1, X31
	010 Call Environment.GetResourceString, X0
	011 Move X19, X0
	012 Move X0, 0xDBD000
	013 Move X0, [X0+1888]
	014 Call 0x1C17D08
	015 Call 0x1C17F10
	016 Move X20, X0
	017 Move X0, 0xDEA000
	018 Move X0, [X0+832]
	019 Call 0x1C17D08
	020 Move X1, X0
	021 Move X0, X20
	022 Move X2, X19
	023 Move X3, X31
	024 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	025 Move X0, 0xDEA000
	026 Move X0, [X0+3056]
	027 Call 0x1C17D08
	028 Move X1, X0
	029 Move X0, X20
	030 Call 0x1C17DEC

Method: System.Void CheckYearRange(System.Int32 year, System.Int32 era)

Disassembly:
	0x0333F9A8 ADRP X20, 0xDB5000
	0x0333F9AC LDRB W8, [X21 + 0xD58]
	0x0333F9B0 LDR X19, [X19 + 0xBE0]
	0x0333F9B4 LDR X20, [X20 + 0x9F0]
	0x0333F9B8 TBNZ X8, 0x0, 0x333F9DC
	0x0333F9BC ADRP X0, 0xDB5000
	0x0333F9C0 LDR X0, [X0 + 0x9F0]
	0x0333F9C4 BL 0x1C16CF4
	0x0333F9C8 ADRP X0, 0xDE9000
	0x0333F9CC LDR X0, [X0 + 0xBE0]
	0x0333F9D0 BL 0x1C16CF4
	0x0333F9D4 MOVZ W8, 0x1
	0x0333F9D8 STRB W8, [X21 + 0xD58]
	0x0333F9DC STR X31, [X31 + 0x28]
	0x0333F9E0 BL 0x333E2BC
	0x0333F9E4 LDR X8, [X19]
	0x0333F9E8 MOVZ W1, 0x76C
	0x0333F9EC MOVZ W2, 0x4
	0x0333F9F0 MOVZ W3, 0x1E
	0x0333F9F4 LDR X8, [X8 + 0xB8]
	0x0333F9F8 MOV X4, X31
	0x0333F9FC STR X0, [X8]
	0x0333FA00 ADD X0, X31, 0x20
	0x0333FA04 STR X31, [X31 + 0x20]
	0x0333FA08 BL 0x335F0C4
	0x0333FA0C LDR X8, [X19]
	0x0333FA10 LDR X9, [X31 + 0x20]
	0x0333FA14 ADD X0, X31, 0x18
	0x0333FA18 MOVZ W1, 0x81D
	0x0333FA1C LDR X8, [X8 + 0xB8]
	0x0333FA20 MOVZ W2, 0xB
	0x0333FA24 MOVZ W3, 0x10
	0x0333FA28 MOVZ W4, 0x17
	0x0333FA2C MOVZ W5, 0x3B
	0x0333FA30 MOVZ W6, 0x3B
	0x0333FA34 MOVZ W7, 0x3E7
	0x0333FA38 STR X9, [X8 + 0x8]
	0x0333FA3C STR X31, [X31 + 0x18]
	0x0333FA40 STR X31, [X31]
	0x0333FA44 BL 0x335F594
	0x0333FA48 LDR X8, [X31 + 0x18]
	0x0333FA4C LDR X0, [X20]
	0x0333FA50 STR X8, [X31 + 0x28]
	0x0333FA54 LDR W8, [X0 + 0xE0]
	0x0333FA58 CBNZ W8, 0x333FA60
	0x0333FA5C BL 0x1C16DFC
	0x0333FA60 ADD X0, X31, 0x28
	0x0333FA64 MOV X1, X31
	0x0333FA68 BL 0x3361708
	0x0333FA6C MOVZ W8, 0x270F
	0x0333FA70 ADD X1, X0, X8
	0x0333FA74 ADD X0, X31, 0x10
	0x0333FA78 MOV X2, X31
	0x0333FA7C STR X31, [X31 + 0x10]
	0x0333FA80 BL 0x335EEB0
	0x0333FA84 LDR X8, [X19]
	0x0333FA88 LDR X9, [X31 + 0x10]
	0x0333FA8C LDP X20, X19, [X31 + 0x40]
	0x0333FA90 LDP X30, X21, [X31 + 0x30]
	0x0333FA94 LDR X8, [X8 + 0xB8]
	0x0333FA98 STR X9, [X8 + 0x10]
	0x0333FA9C ADD X31, X31, 0x50
	0x0333FAA0 RET
	0x0333FAA4 STP X30, X21, [X31 - 0x20]!
	0x0333FAA8 STP X20, X19, [X31 + 0x10]
	0x0333FAAC CBZ X0, 0x333FBA4
	0x0333FAB0 MOV X20, X1
	0x0333FAB4 CBZ X1, 0x333FBC4
	0x0333FAB8 MOV X19, X0
	0x0333FABC CMP X0, X20
	0x0333FAC0 B.EQ 0x333FB78
	0x0333FAC4 LDR X8, [X19]
	0x0333FAC8 MOV X0, X19
	0x0333FACC LDP X9, X1, [X8 + 0x178]
	0x0333FAD0 BLR X9
	0x0333FAD4 LDR X8, [X20]
	0x0333FAD8 MOV X21, X0
	0x0333FADC MOV X0, X20
	0x0333FAE0 LDP X9, X1, [X8 + 0x178]
	0x0333FAE4 BLR X9
	0x0333FAE8 CMP X21, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x109E000
	007 Move X22, 0xDEA000
	008 Move W8, [X21+3403]
	009 Move X22, [X22+3040]
	010 Move W20, W1
	011 Move W19, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDEA000
	017 Move X0, [X0+3040]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3403], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W0, W20
	027 Call UmAlQuraCalendar.CheckEraRange, X0
	028 Subtract W8, W19, 1318
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Return 
	036 Move X0, 0xDB7000
	037 Move X0, [X0+3144]
	038 Call 0x1C17D08
	039 Call 0x19913D0
	040 Call CultureInfo.get_CurrentCulture
	041 Move X19, X0
	042 Move X0, 0xDE4000
	043 Move X0, [X0+880]
	044 Call 0x1C17D08
	045 Move X1, X31
	046 Call Environment.GetResourceString, X0
	047 Move W8, 1318
	048 Move [X31+12], W8
	049 Move X21, 0xDB5000
	050 Move X21, [X21+1880]
	051 Move X20, X0
	052 Move X0, X21
	053 Call 0x1C17D08
	054 Add X1, X31, 12
	055 Call 0x1C17E04
	056 Move X22, X0
	057 Move W8, 1500
	058 Move X0, X21
	059 Move [X31+8], W8
	060 Call 0x1C17D08
	061 Add X1, X31, 8
	062 Call 0x1C17E04
	063 Move X3, X0
	064 Move X0, X19
	065 Move X1, X20
	066 Move X2, X22
	067 Move X4, X31
	068 Call String.Format, X0, X1, X2, X3
	069 Move X19, X0
	070 Move X0, 0xDBD000
	071 Move X0, [X0+1888]
	072 Call 0x1C17D08
	073 Call 0x1C17F10
	074 Move X20, X0
	075 Move X0, 0xDEA000
	076 Move X0, [X0+1448]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X20
	080 Move X2, X19
	081 Move X3, X31
	082 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	083 Move X0, 0xDEA000
	084 Move X0, [X0+3064]
	085 Call 0x1C17D08
	086 Move X1, X0
	087 Move X0, X20
	088 Call 0x1C17DEC

Method: System.Void CheckYearMonthRange(System.Int32 year, System.Int32 month, System.Int32 era)

Disassembly:
	0x0333FAEC B.EQ 0x333FB78
	0x0333FAF0 LDR X8, [X19]
	0x0333FAF4 MOV X0, X19
	0x0333FAF8 LDP X9, X1, [X8 + 0x188]
	0x0333FAFC BLR X9
	0x0333FB00 LDR X8, [X20]
	0x0333FB04 MOV X19, X0
	0x0333FB08 MOV X0, X20
	0x0333FB0C LDP X9, X1, [X8 + 0x188]
	0x0333FB10 BLR X9
	0x0333FB14 CBZ X19, 0x333FC0C
	0x0333FB18 CBZ X0, 0x333FC0C
	0x0333FB1C LDR W8, [X19 + 0x18]
	0x0333FB20 LDR W9, [X0 + 0x18]
	0x0333FB24 CMP W8, W9
	0x0333FB28 CSEL W10, W9, W8, GT
	0x0333FB2C CMP W10, 0x1
	0x0333FB30 B.LT 0x333FB70
	0x0333FB34 MOV W11, W31
	0x0333FB38 CMP W8, W11
	0x0333FB3C B.EQ 0x333FBA0
	0x0333FB40 SXTW X11, W11
	0x0333FB44 CMP W9, W11
	0x0333FB48 B.EQ 0x333FBA0
	0x0333FB4C ADD X12, X19, X11
	0x0333FB50 ADD X13, X0, X11
	0x0333FB54 LDRB W12, [X12 + 0x20]
	0x0333FB58 LDRB W13, [X13 + 0x20]
	0x0333FB5C CMP W12, W13
	0x0333FB60 B.NE 0x333FB94
	0x0333FB64 ADD W11, W11, 0x1
	0x0333FB68 CMP W10, W11
	0x0333FB6C B.NE 0x333FB38
	0x0333FB70 CMP W8, W9
	0x0333FB74 B.NE 0x333FB88
	0x0333FB78 MOV W0, W31
	0x0333FB7C LDP X20, X19, [X31 + 0x10]
	0x0333FB80 LDP X30, X21, [X31], #0x20
	0x0333FB84 RET
	0x0333FB88 MOVN W8, 0x0
	0x0333FB8C CSNEG W0, W8, W8, LT
	0x0333FB90 B 0x333FB7C
	0x0333FB94 MOVN W8, 0x0
	0x0333FB98 CSNEG W0, W8, W8, CC
	0x0333FB9C B 0x333FB7C
	0x0333FBA0 BL 0x1C16F28
	0x0333FBA4 ADRP X0, 0xDB9000
	0x0333FBA8 LDR X0, [X0 + 0x528]
	0x0333FBAC BL 0x1C16D08
	0x0333FBB0 BL 0x1C16F10
	0x0333FBB4 MOV X19, X0
	0x0333FBB8 ADRP X0, 0xDE9000
	0x0333FBBC LDR X0, [X0 + 0xC28]
	0x0333FBC0 B 0x333FBE0
	0x0333FBC4 ADRP X0, 0xDB9000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x109E000
	008 Move X23, 0xDEA000
	009 Move W8, [X22+3404]
	010 Move X23, [X23+3040]
	011 Move W20, W2
	012 Move W19, W1
	013 Move W21, W0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xDEA000
	019 Move X0, [X0+3040]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3404], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move W0, W21
	029 Move W1, W20
	030 Call UmAlQuraCalendar.CheckYearRange, X0, X1
	031 Subtract W8, W19, 1
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Move X23, [X31+56]
	039 Return 
	040 Move X0, 0xDEA000
	041 Move X0, [X0+2248]
	042 Call 0x1C17D08
	043 Move X1, X31
	044 Call Environment.GetResourceString, X0
	045 Move X19, X0
	046 Move X0, 0xDBD000
	047 Move X0, [X0+1888]
	048 Call 0x1C17D08
	049 Call 0x1C17F10
	050 Move X20, X0
	051 Move X0, 0xDE9000
	052 Move X0, [X0+3496]
	053 Call 0x1C17D08
	054 Move X1, X0
	055 Move X0, X20
	056 Move X2, X19
	057 Move X3, X31
	058 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	059 Move X0, 0xDEA000
	060 Move X0, [X0+3072]
	061 Call 0x1C17D08
	062 Move X1, X0
	063 Move X0, X20
	064 Call 0x1C17DEC

Method: System.Void ConvertGregorianToHijri(System.DateTime time, ref System.Int32 HijriYear, ref System.Int32 HijriMonth, ref System.Int32 HijriDay)

Disassembly:
	0x0333FBC8 LDR X0, [X0 + 0x528]
	0x0333FBCC BL 0x1C16D08
	0x0333FBD0 BL 0x1C16F10
	0x0333FBD4 MOV X19, X0
	0x0333FBD8 ADRP X0, 0xDE9000
	0x0333FBDC LDR X0, [X0 + 0xC30]
	0x0333FBE0 BL 0x1C16D08
	0x0333FBE4 MOV X1, X0
	0x0333FBE8 MOV X0, X19
	0x0333FBEC MOV X2, X31
	0x0333FBF0 BL 0x330E100
	0x0333FBF4 ADRP X0, 0xDE9000
	0x0333FBF8 LDR X0, [X0 + 0xC38]
	0x0333FBFC BL 0x1C16D08
	0x0333FC00 MOV X1, X0
	0x0333FC04 MOV X0, X19
	0x0333FC08 BL 0x1C16DEC
	0x0333FC0C BL 0x1C16F20
	0x0333FC10 STR X30, [X31 - 0x40]!
	0x0333FC14 STP X24, X23, [X31 + 0x10]
	0x0333FC18 STP X22, X21, [X31 + 0x20]
	0x0333FC1C STP X20, X19, [X31 + 0x30]
	0x0333FC20 ADRP X23, 0x109D000
	0x0333FC24 LDRB W8, [X23 + 0xD5A]
	0x0333FC28 MOV W21, W3
	0x0333FC2C MOV X19, X2
	0x0333FC30 MOV W22, W1
	0x0333FC34 MOV X20, X0
	0x0333FC38 TBNZ X8, 0x0, 0x333FC50
	0x0333FC3C ADRP X0, 0xDB4000
	0x0333FC40 LDR X0, [X0 + 0x618]
	0x0333FC44 BL 0x1C16CF4
	0x0333FC48 MOVZ W8, 0x1
	0x0333FC4C STRB W8, [X23 + 0xD5A]
	0x0333FC50 MOV X0, X20
	0x0333FC54 MOV X1, X31
	0x0333FC58 BL 0x33BDD8C
	0x0333FC5C STR X19, [X20 + 0x10]
	0x0333FC60 STP W21, W22, [X20 + 0x20]
	0x0333FC64 CBZ X19, 0x333FCDC
	0x0333FC68 ADRP X8, 0xDB4000
	0x0333FC6C LDR X8, [X8 + 0x618]
	0x0333FC70 LDR W21, [X19 + 0x10]
	0x0333FC74 LDR X0, [X8]
	0x0333FC78 MOV W1, W21
	0x0333FC7C BL 0x1C16D6C
	0x0333FC80 CMP W21, 0x1
	0x0333FC84 MOV X22, X0
	0x0333FC88 B.LT 0x333FCC4
	0x0333FC8C MOV X23, X31
	0x0333FC90 ADD X24, X22, 0x20
	0x0333FC94 MOV X0, X19
	0x0333FC98 MOV W1, W23
	0x0333FC9C MOV X2, X31
	0x0333FCA0 BL 0x3222A1C
	0x0333FCA4 CBZ X22, 0x333FCDC
	0x0333FCA8 LDR W8, [X22 + 0x18]
	0x0333FCAC CMP X23, X8
	0x0333FCB0 B.CS 0x333FCE0
	0x0333FCB4 STRB W0, [X24, X23, LSL]
	0x0333FCB8 ADD X23, X23, 0x1
	0x0333FCBC CMP X21, X23
	0x0333FCC0 B.NE 0x333FC94
	0x0333FCC4 STR X22, [X20 + 0x18]
	0x0333FCC8 LDP X20, X19, [X31 + 0x30]
	0x0333FCCC LDP X22, X21, [X31 + 0x20]
	0x0333FCD0 LDP X24, X23, [X31 + 0x10]
	0x0333FCD4 LDR X30, [X31], #0x40
	0x0333FCD8 RET
	0x0333FCDC BL 0x1C16F20
	0x0333FCE0 BL 0x1C16F28
	0x0333FCE4 STP X30, X23, [X31 - 0x30]!
	0x0333FCE8 STP X22, X21, [X31 + 0x10]
	0x0333FCEC STP X20, X19, [X31 + 0x20]
	0x0333FCF0 MOV W22, W1
	0x0333FCF4 MOV X1, X31
	0x0333FCF8 MOV W19, W4
	0x0333FCFC MOV X20, X3
	0x0333FD00 MOV X21, X2
	0x0333FD04 MOV X23, X0
	0x0333FD08 BL 0x33BDD8C
	0x0333FD0C STP X21, X20, [X23 + 0x10]
	0x0333FD10 STP W19, W22, [X23 + 0x20]
	0x0333FD14 LDP X20, X19, [X31 + 0x20]
	0x0333FD18 LDP X22, X21, [X31 + 0x10]
	0x0333FD1C LDP X30, X23, [X31], #0x30
	0x0333FD20 RET
	0x0333FD24 STP X30, X19, [X31 - 0x10]!
	0x0333FD28 MOV X1, X31
	0x0333FD2C BL 0x33BDD8C
	0x0333FD30 ADRP X0, 0xDBD000
	0x0333FD34 LDR X0, [X0 + 0x758]
	0x0333FD38 BL 0x1C16D08
	0x0333FD3C BL 0x1C16F10
	0x0333FD40 MOV X1, X31
	0x0333FD44 MOV X19, X0
	0x0333FD48 BL 0x3380288
	0x0333FD4C ADRP X0, 0xDE9000
	0x0333FD50 LDR X0, [X0 + 0xC40]
	0x0333FD54 BL 0x1C16D08
	0x0333FD58 MOV X1, X0
	0x0333FD5C MOV X0, X19
	0x0333FD60 BL 0x1C16DEC
	0x0333FD64 LDR X0, [X0 + 0x10]
	0x0333FD68 RET
	0x0333FD6C LDR X0, [X0 + 0x18]
	0x0333FD70 RET
	0x0333FD74 STP X30, X21, [X31 - 0x20]!
	0x0333FD78 STP X20, X19, [X31 + 0x10]
	0x0333FD7C ADRP X21, 0x109D000
	0x0333FD80 LDRB W8, [X21 + 0xD5B]
	0x0333FD84 MOV X19, X1
	0x0333FD88 MOV X20, X0
	0x0333FD8C TBNZ X8, 0x0, 0x333FDA4
	0x0333FD90 ADRP X0, 0xDE2000
	0x0333FD94 LDR X0, [X0 + 0xC18]
	0x0333FD98 BL 0x1C16CF4
	0x0333FD9C MOVZ W8, 0x1
	0x0333FDA0 STRB W8, [X21 + 0xD5B]
	0x0333FDA4 CBZ X19, 0x333FE0C
	0x0333FDA8 ADRP X8, 0xDE2000
	0x0333FDAC LDR X8, [X8 + 0xC18]
	0x0333FDB0 LDR X9, [X19]
	0x0333FDB4 LDR X8, [X8]
	0x0333FDB8 LDRB W11, [X9 + 0x130]
	0x0333FDBC LDRB W10, [X8 + 0x130]
	0x0333FDC0 CMP W11, W10
	0x0333FDC4 B.CC 0x333FE0C
	0x0333FDC8 LDR X9, [X9 + 0xC8]
	0x0333FDCC ADD X9, X9, X10, 0x3, LSL
	0x0333FDD0 LDUR X9, [X9 - 0x8]
	0x0333FDD4 CMP X9, X8
	0x0333FDD8 B.NE 0x333FE0C
	0x0333FDDC LDR W8, [X20 + 0x24]
	0x0333FDE0 LDR W9, [X19 + 0x24]
	0x0333FDE4 CMP W8, W9
	0x0333FDE8 B.NE 0x333FE0C
	0x0333FDEC LDR W8, [X20 + 0x20]
	0x0333FDF0 LDR W9, [X19 + 0x20]
	0x0333FDF4 CMP W8, W9
	0x0333FDF8 B.NE 0x333FE0C
	0x0333FDFC MOV X0, X20
	0x0333FE00 MOV X1, X19
	0x0333FE04 BL 0x333FAA4
	0x0333FE08 CBZ W0, 0x333FE1C
	0x0333FE0C MOV W0, W31
	0x0333FE10 LDP X20, X19, [X31 + 0x10]
	0x0333FE14 LDP X30, X21, [X31], #0x20
	0x0333FE18 RET
	0x0333FE1C MOVZ W0, 0x1
	0x0333FE20 B 0x333FE10
	0x0333FE24 STR X30, [X31 - 0x10]!
	0x0333FE28 LDR X9, [X0 + 0x18]
	0x0333FE2C CBZ X9, 0x333FE84
	0x0333FE30 LDR X10, [X9 + 0x18]
	0x0333FE34 CBZ X10, 0x333FE78
	0x0333FE38 CBZ W10, 0x333FE88
	0x0333FE3C LDRB W0, [X9 + 0x20]
	0x0333FE40 CMP W10, 0x2
	0x0333FE44 B.LT 0x333FE7C
	0x0333FE48 AND X10, X10, 0x0
	0x0333FE4C MOV X8, X31
	0x0333FE50 ADD X9, X9, 0x21
	0x0333FE54 SUB X10, X10, 0x1
	0x0333FE58 LDRB W11, [X9, X8, LSL]
	0x0333FE5C ADD X8, X8, 0x1
	0x0333FE60 AND W12, W8, 0x3
	0x0333FE64 CMP X10, X8
	0x0333FE68 LSLV W11, W11, W12
	0x0333FE6C EOR W0, W11, W0, 0x0
	0x0333FE70 B.NE 0x333FE58
	0x0333FE74 B 0x333FE7C
	0x0333FE78 MOV W0, W31
	0x0333FE7C LDR X30, [X31], #0x10
	0x0333FE80 RET
	0x0333FE84 BL 0x1C16F20
	0x0333FE88 BL 0x1C16F28
	0x0333FE8C SUB X31, X31, 0x40
	0x0333FE90 STP X30, X21, [X31 + 0x20]
	0x0333FE94 STP X20, X19, [X31 + 0x30]
	0x0333FE98 ADRP X20, 0x109D000
	0x0333FE9C ADRP X21, 0xDB4000
	0x0333FEA0 LDRB W8, [X20 + 0xD5C]
	0x0333FEA4 LDR X21, [X21 + 0xAC8]
	0x0333FEA8 MOV X19, X0
	0x0333FEAC TBNZ X8, 0x0, 0x333FEE8
	0x0333FEB0 ADRP X0, 0xDE9000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0x109E000
	013 Move [X31+8], X0
	014 Move X24, 0xDB6000
	015 Move W8, [X22+3405]
	016 Move X24, [X24+2544]
	017 Move X21, X3
	018 Move X20, X2
	019 Move X19, X1
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0xDB6000
	025 Move X0, [X0+2544]
	026 Call 0x1C17CF4
	027 Move X0, 0xDB7000
	028 Move X0, [X0+1392]
	029 Call 0x1C17CF4
	030 Move X0, 0xDEA000
	031 Move X0, [X0+3040]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+3405], W8
	035 Move X0, [X24]
	036 Move [X31], X31
	037 Move X23, 0xDEA000
	038 Move W8, [X0+224]
	039 Move X23, [X23+3040]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Add X0, X31, 8
	044 Move X1, X31
	045 Call DateTime.get_Ticks, X0
	046 Move X8, [X23]
	047 Move X22, X0
	048 Move W9, [X8+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {54}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Move X8, [X23]
	054 Move X8, [X8+184]
	055 Move X25, 0xDB7000
	056 Move X25, [X25+1392]
	057 Move X1, X31
	058 Add X0, X8, 8
	059 Call DateTime.get_Ticks, X0
	060 Move X9, 0x81E3
	061 NotImplemented "Instruction MOVK not yet implemented."
	062 NotImplemented "Instruction MOVK not yet implemented."
	063 Subtract X8, X22, X0
	064 NotImplemented "Instruction MOVK not yet implemented."
	065 NotImplemented "Instruction SMULH not yet implemented."
	066 Add X8, X9, X8
	067 Move W10, 0xE1B7
	068 NotImplemented "Instruction SBFM not yet implemented."
	069 NotImplemented "Instruction MOVK not yet implemented."
	070 Add X8, X9, X8
	071 Multiply X8, X8, X10
	072 Move X9, X8
	073 ShiftRight X9, 63
	074 And X9, X9, 0x7FFFFFFF
	075 NotImplemented "Instruction SBFM not yet implemented."
	076 Add W26, W8, W9
	077 Move X0, [X23]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {83}
	081 Call 0x1C17DFC
	082 Move X0, [X23]
	083 Move X8, [X0+184]
	084 Move X8, [X8]
	085 Compare X8, 0
	086 JumpIfEqual {207}
	087 Move W9, [X8+24]
	088 Add W26, W26, 1
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X0, [X24]
	091 Move X27, W26
	092 Add X8, X8, X27
	093 Move X22, [X8+40]
	094 Move W9, [X0+224]
	095 Compare W9, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Add X0, X31, 8
	099 Move X1, X22
	100 Move X2, X31
	101 Call DateTime.CompareTo, X0, X1
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X0, [X23]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {109}
	107 Call 0x1C17DFC
	108 Move X0, [X23]
	109 Move X8, [X0+184]
	110 Move X8, [X8]
	111 Compare X8, 0
	112 JumpIfEqual {207}
	113 Move W9, [X8+24]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X0, [X24]
	116 Add X8, X8, X27
	117 Move X22, [X8+40]
	118 Subtract W27, W26, 1
	119 Move W9, [X0+224]
	120 Compare W9, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Add X0, X31, 8
	124 Move X1, X22
	125 Move X2, X31
	126 Call DateTime.CompareTo, X0, X1
	127 Move X8, [X23]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 NotImplemented "Instruction CSEL not yet implemented."
	130 Move W9, [X8+224]
	131 Compare W9, 0
	132 JumpIfNotEqual {136}
	133 Move X0, X8
	134 Call 0x1C17DFC
	135 Move X8, [X23]
	136 Move X8, [X8+184]
	137 Move X8, [X8]
	138 Compare X8, 0
	139 JumpIfEqual {207}
	140 Move W9, [X8+24]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X0, [X24]
	143 Move X24, W26
	144 Add X8, X8, X24
	145 Move X22, [X8+40]
	146 Move W9, [X0+224]
	147 Compare W9, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Add X0, X31, 8
	151 Move X1, X22
	152 Move X2, X31
	153 Call DateTime.Subtract, X0, X1
	154 Move X8, [X25]
	155 Move [X31], X0
	156 Move W9, [X8+224]
	157 Compare W9, 0
	158 JumpIfNotEqual {161}
	159 Move X0, X8
	160 Call 0x1C17DFC
	161 Add X0, X31, 0
	162 Move X1, X31
	163 Call TimeSpan.get_TotalDays, X0
	164 Move X8, [X23]
	165 Move X8, [X8+184]
	166 Move X8, [X8]
	167 Compare X8, 0
	168 JumpIfEqual {207}
	169 Move W9, [X8+24]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Add X8, X8, X24
	172 Move W9, [X8+32]
	173 And W8, W9, 1
	174 Add W8, W8, 29
	175 NotImplemented "Instruction SCVTF not yet implemented."
	176 Move W8, 1
	177 NotImplemented "Instruction FCMP not yet implemented."
	178 NotImplemented "Instruction SBFM not yet implemented."
	179 And W10, W9, 1
	180 Add W10, W10, 29
	181 Subtract D0, D0, D1
	182 NotImplemented "Instruction SCVTF not yet implemented."
	183 NotImplemented "Instruction FCMP not yet implemented."
	184 Add W8, W8, 1
	185 Move X11, 0x7FF00000
	186 Move D1, X11
	187 NotImplemented "Instruction FCVTZS not yet implemented."
	188 Or W12, W31, 0x80000001
	189 NotImplemented "Instruction FCMP not yet implemented."
	190 Add W9, W26, 1318
	191 NotImplemented "Instruction CSINC not yet implemented."
	192 Move [X21], W10
	193 Move [X20], W8
	194 Move [X19], W9
	195 Move X20, [X31+80]
	196 Move X19, [X31+88]
	197 Move X22, [X31+64]
	198 Move X21, [X31+72]
	199 Move X24, [X31+48]
	200 Move X23, [X31+56]
	201 Move X26, [X31+32]
	202 Move X25, [X31+40]
	203 Move X30, [X31+16]
	204 Move X27, [X31+24]
	205 Add X31, X31, 96
	206 Return 
	207 Call 0x1C17F20
	208 Call 0x1C17F28

Method: System.Int32 GetDatePart(System.DateTime time, System.Int32 part)

Disassembly:
	0x0333FEB4 LDR X0, [X0 + 0xC48]
	0x0333FEB8 BL 0x1C16CF4
	0x0333FEBC ADRP X0, 0xDB4000
	0x0333FEC0 LDR X0, [X0 + 0xAC8]
	0x0333FEC4 BL 0x1C16CF4
	0x0333FEC8 ADRP X0, 0xDE9000
	0x0333FECC LDR X0, [X0 + 0xC50]
	0x0333FED0 BL 0x1C16CF4
	0x0333FED4 ADRP X0, 0xDB4000
	0x0333FED8 LDR X0, [X0 + 0x838]
	0x0333FEDC BL 0x1C16CF4
	0x0333FEE0 MOVZ W8, 0x1
	0x0333FEE4 STRB W8, [X20 + 0xD5C]
	0x0333FEE8 LDR X0, [X21]
	0x0333FEEC MOVZ W1, 0x6
	0x0333FEF0 BL 0x1C16D6C
	0x0333FEF4 CBZ X0, 0x333FFC0
	0x0333FEF8 LDR W8, [X0 + 0x18]
	0x0333FEFC MOV X20, X0
	0x0333FF00 CBZ W8, 0x333FFBC
	0x0333FF04 ADRP X8, 0xDE9000
	0x0333FF08 LDR X8, [X8 + 0xC50]
	0x0333FF0C ADD X0, X19, 0x24
	0x0333FF10 MOV X1, X31
	0x0333FF14 LDR X8, [X8]
	0x0333FF18 STR X8, [X20 + 0x20]
	0x0333FF1C BL 0x337B6E0
	0x0333FF20 LDR W8, [X20 + 0x18]
	0x0333FF24 CMP W8, 0x1
	0x0333FF28 B.LS 0x333FFBC
	0x0333FF2C CMP W8, 0x2
	0x0333FF30 STR X0, [X20 + 0x28]
	0x0333FF34 B.EQ 0x333FFBC
	0x0333FF38 ADRP X21, 0xDB4000
	0x0333FF3C LDR X21, [X21 + 0x838]
	0x0333FF40 ADRP X9, 0xDE9000
	0x0333FF44 ADD X0, X31, 0x8
	0x0333FF48 MOV X1, X31
	0x0333FF4C LDR X8, [X21]
	0x0333FF50 LDR X9, [X9 + 0xC48]
	0x0333FF54 STR X8, [X20 + 0x30]
	0x0333FF58 LDR X8, [X9]
	0x0333FF5C MOVN X9, 0x0
	0x0333FF60 STP X8, X9, [X31 + 0x8]
	0x0333FF64 LDR W8, [X19 + 0x20]
	0x0333FF68 STR W8, [X31 + 0x18]
	0x0333FF6C BL 0x33B162C
	0x0333FF70 LDR W8, [X20 + 0x18]
	0x0333FF74 CMP W8, 0x3
	0x0333FF78 B.LS 0x333FFBC
	0x0333FF7C CMP W8, 0x4
	0x0333FF80 STR X0, [X20 + 0x38]
	0x0333FF84 B.EQ 0x333FFBC
	0x0333FF88 LDR X9, [X21]
	0x0333FF8C CMP W8, 0x5
	0x0333FF90 STR X9, [X20 + 0x40]
	0x0333FF94 B.LS 0x333FFBC
	0x0333FF98 LDR X8, [X19 + 0x10]
	0x0333FF9C MOV X0, X20
	0x0333FFA0 MOV X1, X31
	0x0333FFA4 STR X8, [X20 + 0x48]
	0x0333FFA8 BL 0x32278CC
	0x0333FFAC LDP X20, X19, [X31 + 0x30]
	0x0333FFB0 LDP X30, X21, [X31 + 0x20]
	0x0333FFB4 ADD X31, X31, 0x40
	0x0333FFB8 RET
	0x0333FFBC BL 0x1C16F28
	0x0333FFC0 BL 0x1C16F20
	0x0333FFC4 STR X30, [X31 - 0x20]!
	0x0333FFC8 STP X20, X19, [X31 + 0x10]
	0x0333FFCC ADRP X19, 0x109D000
	0x0333FFD0 ADRP X20, 0xDE9000
	0x0333FFD4 LDRB W8, [X19 + 0xD5D]
	0x0333FFD8 LDR X20, [X20 + 0xC58]
	0x0333FFDC TBNZ X8, 0x0, 0x333FFF4
	0x0333FFE0 ADRP X0, 0xDE9000
	0x0333FFE4 LDR X0, [X0 + 0xC58]
	0x0333FFE8 BL 0x1C16CF4
	0x0333FFEC MOVZ W8, 0x1
	0x0333FFF0 STRB W8, [X19 + 0xD5D]
	0x0333FFF4 LDR X0, [X20]
	0x0333FFF8 BL 0x1C16D9C
	0x0333FFFC STR X30, [X31 - 0x20]!
	0x03340000 STP X20, X19, [X31 + 0x10]
	0x03340004 MOV X19, X1
	0x03340008 MOV X1, X31
	0x0334000C MOV X20, X0
	0x03340010 BL 0x33BDD8C
	0x03340014 STR X19, [X20 + 0x58]
	0x03340018 LDP X20, X19, [X31 + 0x10]
	0x0334001C LDR X30, [X31], #0x20
	0x03340020 RET
	0x03340024 STR X30, [X31 - 0x30]!
	0x03340028 STP X22, X21, [X31 + 0x10]
	0x0334002C STP X20, X19, [X31 + 0x20]
	0x03340030 ADRP X21, 0x109C000
	0x03340034 ADRP X22, 0xDB5000
	0x03340038 LDRB W8, [X21 + 0xD5F]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x109E000
	007 Move [X31+24], X1
	008 Move X20, 0xDB6000
	009 Move W8, [X21+3406]
	010 Move X20, [X20+2544]
	011 Move W19, W2
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xDB6000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move X0, 0xDEA000
	020 Move X0, [X0+3040]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3406], W8
	024 Move X0, [X20]
	025 Move [X31+16], X31
	026 Move [X31+12], W31
	027 Move X21, 0xDEA000
	028 Move W8, [X0+224]
	029 Move X21, [X21+3040]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Add X0, X31, 24
	034 Move X1, X31
	035 Call DateTime.get_Ticks, X0
	036 Move X8, [X21]
	037 Move X20, X0
	038 Move W9, [X8+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 Move X0, X20
	044 Call UmAlQuraCalendar.CheckTicksRange, X0
	045 Move X0, [X31+24]
	046 Add X1, X31, 20
	047 Add X2, X31, 16
	048 Add X3, X31, 12
	049 Call UmAlQuraCalendar.ConvertGregorianToHijri, X0, X1, X2, X3
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X9, -41582592
	052 Move W8, W19
	053 Add X9, X9, 1847
	054 NotImplemented "Instruction ADR not yet implemented."
	055 Move W11, [X9]
	056 Add X10, X10, X11
	057 CallNoReturn X10
	058 Move W0, [X31+20]
	059 Move W0, [X31+16]
	060 Move X0, [X21]
	061 Move W20, [X31+16]
	062 Move W19, [X31+20]
	063 Move W21, [X31+12]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move W0, W19
	069 Move W1, W20
	070 Move W2, W21
	071 Call UmAlQuraCalendar.GetAbsoluteDateUmAlQura, X0, X1, X2
	072 Move X20, X0
	073 Move W1, 1
	074 Move W2, 1
	075 Move W0, W19
	076 Call UmAlQuraCalendar.GetAbsoluteDateUmAlQura, X0, X1, X2
	077 Subtract W8, W20, W0
	078 Add W0, W8, 1
	079 Move W0, [X31+12]
	080 Move X20, [X31+48]
	081 Move X19, [X31+56]
	082 Move X30, [X31+32]
	083 Move X21, [X31+40]
	084 Add X31, X31, 64
	085 Return X0
	086 Move X0, 0xDEA000
	087 Move X0, [X0+2456]
	088 Call 0x1C17D08
	089 Move X1, X31
	090 Call Environment.GetResourceString, X0
	091 Move X19, X0
	092 Move X0, 0xDB4000
	093 Move X0, [X0+1456]
	094 Call 0x1C17D08
	095 Call 0x1C17F10
	096 Move X1, X19
	097 Move X2, X31
	098 Move X20, X0
	099 Call InvalidOperationException..ctor, X0, X1
	100 Move X0, 0xDE9000
	101 Move X0, [X0+3080]
	102 Call 0x1C17D08
	103 Move X1, X0
	104 Move X0, X20
	105 Call 0x1C17DEC

Method: System.Int32 GetDayOfMonth(System.DateTime time)

Disassembly:
	0x0334003C LDR X22, [X22 + 0xC48]
	0x03340040 MOV W20, W1
	0x03340044 MOV X19, X0
	0x03340048 TBNZ X8, 0x0, 0x3340060
	0x0334004C ADRP X0, 0xDB5000

ISIL:
	001 Move X8, [X0]
	002 Move W2, 3
	003 Move X4, [X8+792]
	004 Move X3, [X8+800]
	005 CallNoReturn X4

Method: System.DayOfWeek GetDayOfWeek(System.DateTime time)

Disassembly:
	0x03340050 LDR X0, [X0 + 0xC48]
	0x03340054 BL 0x1C16CF4
	0x03340058 MOVZ W8, 0x1
	0x0334005C STRB W8, [X21 + 0xD5F]
	0x03340060 LDR X0, [X22]
	0x03340064 BL 0x1C16F10
	0x03340068 MOV X21, X0
	0x0334006C AND W2, W20, 0x1
	0x03340070 MOV X1, X19
	0x03340074 MOV W3, W31
	0x03340078 BL 0x3348BD8
	0x0334007C CBZ X21, 0x3340094
	0x03340080 LDR X0, [X21 + 0xC0]
	0x03340084 LDP X20, X19, [X31 + 0x20]
	0x03340088 LDP X22, X21, [X31 + 0x10]
	0x0334008C LDR X30, [X31], #0x30
	0x03340090 RET
	0x03340094 BL 0x1C16F20
	0x03340098 CMP W1, 0x1
	0x0334009C MOV X19, X0
	0x033400A0 B.NE 0x3340100
	0x033400A4 MOV X0, X19
	0x033400A8 BL 0x3EB1AD0
	0x033400AC MOV X19, X0
	0x033400B0 ADRP X0, 0xDB9000
	0x033400B4 LDR X0, [X0 + 0xCC0]
	0x033400B8 BL 0x1C16D08
	0x033400BC LDR X8, [X19]
	0x033400C0 LDR X1, [X8]
	0x033400C4 BL 0x1C17270
	0x033400C8 TBZ X0, 0x0, 0x33400D8
	0x033400CC BL 0x3EB1AE0
	0x033400D0 MOV X0, X31
	0x033400D4 B 0x3340084
	0x033400D8 MOVZ W0, 0x8
	0x033400DC BL 0x3EB1AF0
	0x033400E0 LDR X8, [X19]
	0x033400E4 STR X8, [X0]
	0x033400E8 ADRP X1, 0xB74000
	0x033400EC ADD X1, X1, 0xE58
	0x033400F0 MOV X2, X31
	0x033400F4 BL 0x3EB1B00

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x109D000
	005 Move [X31+8], X1
	006 Move X20, 0xDB5000
	007 Move W8, [X19+3407]
	008 Move X20, [X20+2544]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xDB5000
	014 Move X0, [X0+2544]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X19+3407], W8
	018 Move X0, [X20]
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 8
	024 Move X1, X31
	025 Call DateTime.get_Ticks, X0
	026 Move X8, 0x81E3
	027 NotImplemented "Instruction MOVK not yet implemented."
	028 NotImplemented "Instruction MOVK not yet implemented."
	029 NotImplemented "Instruction MOVK not yet implemented."
	030 NotImplemented "Instruction SMULH not yet implemented."
	031 Add X8, X8, X0
	032 Move X9, X8
	033 ShiftRight X9, 63
	034 And X9, X9, 0x7FFFFFFF
	035 NotImplemented "Instruction SBFM not yet implemented."
	036 Add W8, W8, W9
	037 Move W9, 0x2493
	038 Add W8, W8, 1
	039 NotImplemented "Instruction MOVK not yet implemented."
	040 NotImplemented "Instruction SMADDL not yet implemented."
	041 Move X9, X9
	042 ShiftRight X9, 32
	043 And X9, X9, 0x7FFFFFFF
	044 Add W9, W9, W8
	045 NotImplemented "Instruction SBFM not yet implemented."
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Add W9, W10, W9
	049 Subtract W9, W9, W9
	050 Add W0, W8, W9
	051 Move X30, [X31+32]
	052 Return X0

Method: System.Int32 GetDaysInMonth(System.Int32 year, System.Int32 month, System.Int32 era)

Disassembly:
	0x033400F8 MOV X19, X0
	0x033400FC BL 0x3EB1AE0
	0x03340100 MOV X0, X19
	0x03340104 BL 0x1D2C690
	0x03340108 BL 0x1990590
	0x0334010C AND W2, W2, 0x1
	0x03340110 MOV W3, W31
	0x03340114 B 0x3348BD8
	0x03340118 SUB X31, X31, 0x70
	0x0334011C STP X29, X30, [X31 + 0x10]
	0x03340120 STP X28, X27, [X31 + 0x20]
	0x03340124 STP X26, X25, [X31 + 0x30]
	0x03340128 STP X24, X23, [X31 + 0x40]
	0x0334012C STP X22, X21, [X31 + 0x50]
	0x03340130 STP X20, X19, [X31 + 0x60]
	0x03340134 ADRP X20, 0x109C000
	0x03340138 LDR X27, [X31 + 0x88]
	0x0334013C LDR W28, [X31 + 0x78]
	0x03340140 LDR W29, [X31 + 0x70]
	0x03340144 LDRB W8, [X20 + 0xD60]
	0x03340148 LDRB W19, [X31 + 0x80]
	0x0334014C MOV X21, X5
	0x03340150 MOV W22, W4
	0x03340154 MOV W23, W3
	0x03340158 MOV W24, W2
	0x0334015C MOV W26, W1
	0x03340160 MOV X25, X0
	0x03340164 STP W6, W7, [X31 + 0x8]
	0x03340168 TBNZ X8, 0x0, 0x3340180
	0x0334016C ADRP X0, 0xDE8000
	0x03340170 LDR X0, [X0 + 0xB00]
	0x03340174 BL 0x1C16CF4
	0x03340178 MOVZ W8, 0x1
	0x0334017C STRB W8, [X20 + 0xD60]
	0x03340180 MOV X0, X25
	0x03340184 MOV X1, X31
	0x03340188 BL 0x32277A8
	0x0334018C TBZ X0, 0x0, 0x33401B0
	0x03340190 LDP X20, X19, [X31 + 0x60]
	0x03340194 LDP X22, X21, [X31 + 0x50]
	0x03340198 LDP X24, X23, [X31 + 0x40]
	0x0334019C LDP X26, X25, [X31 + 0x30]
	0x033401A0 LDP X28, X27, [X31 + 0x20]
	0x033401A4 LDP X29, X30, [X31 + 0x10]
	0x033401A8 ADD X31, X31, 0x70

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x109D000
	008 Move X22, 0xDE9000
	009 Move W8, [X23+3408]
	010 Move X22, [X22+3040]
	011 Move W21, W3
	012 Move W19, W2
	013 Move W20, W1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xDE9000
	019 Move X0, [X0+3040]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+3408], W8
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move W0, W20
	029 Move W1, W19
	030 Move W2, W21
	031 Call UmAlQuraCalendar.CheckYearMonthRange, X0, X1, X2
	032 Move X8, [X22]
	033 Move X8, [X8+184]
	034 Move X8, [X8]
	035 Compare X8, 0
	036 JumpIfEqual {54}
	037 Move W10, [X8+24]
	038 Subtract W9, W20, 1318
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X8, X8, W9
	041 Move W8, [X8+32]
	042 Subtract W9, W19, 1
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 NotImplemented "Instruction LSRV not yet implemented."
	048 And W31, W8, 1
	049 Move W8, 29
	050 NotImplemented "Instruction CINC not yet implemented."
	051 Move X30, [X31+48]
	052 Move X23, [X31+56]
	053 Return X0
	054 Call 0x1C17F20
	055 Call 0x1C17F28

Method: System.Int32 RealGetDaysInYear(System.Int32 year)

Disassembly:
	0x033401AC B 0x333BD94
	0x033401B0 ADRP X8, 0xDE8000
	0x033401B4 LDR X8, [X8 + 0xB00]
	0x033401B8 AND W20, W26, 0x1
	0x033401BC AND W19, W19, 0x1
	0x033401C0 LDR X0, [X8]
	0x033401C4 BL 0x1C16F10
	0x033401C8 MOV X1, X31
	0x033401CC MOV X26, X0
	0x033401D0 BL 0x33BDD8C
	0x033401D4 MOV X0, X26
	0x033401D8 MOV W1, W24
	0x033401DC STR X25, [X26 + 0x58]
	0x033401E0 BL 0x1C4297C
	0x033401E4 LDR W9, [X31 + 0x8]
	0x033401E8 LDR W8, [X31 + 0xC]
	0x033401EC STRB W20, [X26 + 0x60]
	0x033401F0 STP W23, W22, [X26 + 0x64]
	0x033401F4 STR X21, [X26 + 0x50]
	0x033401F8 STP W9, W8, [X26 + 0x6C]
	0x033401FC STP W29, W28, [X26 + 0x74]
	0x03340200 STRB W19, [X26 + 0x7C]
	0x03340204 STR X27, [X26 + 0x80]
	0x03340208 MOV X0, X26
	0x0334020C LDP X20, X19, [X31 + 0x60]
	0x03340210 LDP X22, X21, [X31 + 0x50]
	0x03340214 LDP X24, X23, [X31 + 0x40]
	0x03340218 LDP X26, X25, [X31 + 0x30]
	0x0334021C LDP X28, X27, [X31 + 0x20]
	0x03340220 LDP X29, X30, [X31 + 0x10]
	0x03340224 ADD X31, X31, 0x70
	0x03340228 RET
	0x0334022C B 0x1C4297C
	0x03340230 STP X30, X25, [X31 - 0x40]!
	0x03340234 STP X24, X23, [X31 + 0x10]
	0x03340238 STP X22, X21, [X31 + 0x20]
	0x0334023C STP X20, X19, [X31 + 0x30]
	0x03340240 ADRP X21, 0x109C000
	0x03340244 LDRB W8, [X21 + 0xD61]
	0x03340248 MOV W20, W1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x109D000
	006 Move X20, 0xDE9000
	007 Move W8, [X21+3409]
	008 Move X20, [X20+3040]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDE9000
	015 Move X0, [X0+3040]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3409], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X8, [X8]
	027 Compare X8, 0
	028 JumpIfEqual {46}
	029 Move W10, [X8+24]
	030 Subtract W9, W19, 1318
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Add X8, X8, W9
	033 Move W8, [X8+32]
	034 Move W0, W31
	035 Move W9, 12
	036 And W10, W8, 1
	037 Add W10, W10, W0
	038 Subtract W9, W9, 1
	039 Add W0, W10, 29
	040 NotImplemented "Instruction SBFM not yet implemented."
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return X0
	046 Call 0x1C17F20
	047 Call 0x1C17F28

Method: System.Int32 GetDaysInYear(System.Int32 year, System.Int32 era)

Disassembly:
	0x0334024C MOV X19, X0
	0x03340250 TBNZ X8, 0x0, 0x3340274
	0x03340254 ADRP X0, 0xDE8000
	0x03340258 LDR X0, [X0 + 0xB08]
	0x0334025C BL 0x1C16CF4
	0x03340260 ADRP X0, 0xDE8000
	0x03340264 LDR X0, [X0 + 0x5A0]
	0x03340268 BL 0x1C16CF4
	0x0334026C MOVZ W8, 0x1
	0x03340270 STRB W8, [X21 + 0xD61]
	0x03340274 LDR X0, [X19 + 0x48]
	0x03340278 CBNZ X0, 0x3340298
	0x0334027C ADRP X8, 0xDE8000
	0x03340280 LDR X8, [X8 + 0xB08]
	0x03340284 MOVZ W1, 0x17
	0x03340288 LDR X0, [X8]
	0x0334028C BL 0x1C16D6C
	0x03340290 STR X0, [X19 + 0x48]
	0x03340294 CBZ X0, 0x3340338
	0x03340298 LDR W8, [X0 + 0x18]
	0x0334029C SUB W24, W20, 0x1
	0x033402A0 CMP W24, W8
	0x033402A4 B.CS 0x3340334
	0x033402A8 SXTW X25, W24
	0x033402AC ADD X8, X0, X25, 0x3, LSL
	0x033402B0 LDR X21, [X8 + 0x20]
	0x033402B4 CBNZ X21, 0x334031C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x109D000
	007 Move X22, 0xDE9000
	008 Move W8, [X21+3410]
	009 Move X22, [X22+3040]
	010 Move W20, W2
	011 Move W19, W1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDE9000
	017 Move X0, [X0+3040]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3410], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W0, W19
	027 Move W1, W20
	028 Call UmAlQuraCalendar.CheckYearRange, X0, X1
	029 Move W0, W19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Call UmAlQuraCalendar.RealGetDaysInYear, X0
	036 Return X0

Method: System.Int32 GetEra(System.DateTime time)

Disassembly:
	0x033402B8 ADRP X8, 0xDE8000
	0x033402BC LDR X22, [X19 + 0x58]
	0x033402C0 LDRB W23, [X19 + 0x60]
	0x033402C4 LDR X8, [X8 + 0x5A0]
	0x033402C8 LDR X0, [X8]
	0x033402CC BL 0x1C16F10
	0x033402D0 MOV X1, X22
	0x033402D4 MOV W2, W20
	0x033402D8 MOV W3, W23
	0x033402DC MOV X4, X31
	0x033402E0 MOV X21, X0
	0x033402E4 BL 0x3334294
	0x033402E8 LDR X19, [X19 + 0x48]
	0x033402EC CBZ X19, 0x3340338
	0x033402F0 CBZ X21, 0x3340308
	0x033402F4 LDR X8, [X19]
	0x033402F8 MOV X0, X21
	0x033402FC LDR X1, [X8 + 0x40]
	0x03340300 BL 0x1C16E00
	0x03340304 CBZ X0, 0x334033C
	0x03340308 LDR W8, [X19 + 0x18]
	0x0334030C CMP W24, W8
	0x03340310 B.CS 0x3340334
	0x03340314 ADD X8, X19, X25, 0x3, LSL
	0x03340318 STR X21, [X8 + 0x20]
	0x0334031C MOV X0, X21
	0x03340320 LDP X20, X19, [X31 + 0x30]
	0x03340324 LDP X22, X21, [X31 + 0x20]
	0x03340328 LDP X24, X23, [X31 + 0x10]
	0x0334032C LDP X30, X25, [X31], #0x40
	0x03340330 RET
	0x03340334 BL 0x1C16F28
	0x03340338 BL 0x1C16F20
	0x0334033C BL 0x1C16F44
	0x03340340 MOV X1, X31
	0x03340344 BL 0x1C16DEC
	0x03340348 STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x109D000
	005 Move [X31+8], X1
	006 Move X19, 0xDB5000
	007 Move W8, [X20+3411]
	008 Move X19, [X19+2544]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xDB5000
	014 Move X0, [X0+2544]
	015 Call 0x1C17CF4
	016 Move X0, 0xDE9000
	017 Move X0, [X0+3040]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3411], W8
	021 Move X0, [X19]
	022 Move X19, 0xDE9000
	023 Move W8, [X0+224]
	024 Move X19, [X19+3040]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Add X0, X31, 8
	029 Move X1, X31
	030 Call DateTime.get_Ticks, X0
	031 Move X8, [X19]
	032 Move X19, X0
	033 Move W9, [X8+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move X0, X19
	039 Call UmAlQuraCalendar.CheckTicksRange, X0
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move W0, 1
	043 Move X30, [X31+32]
	044 Return X0

Method: System.Int32[] get_Eras()

Disassembly:
	0x0334034C LDR X19, [X0 + 0x28]
	0x03340350 BL 0x1C16D44
	0x03340354 MOV X0, X19
	0x03340358 LDP X30, X19, [X31], #0x10
	0x0334035C RET
	0x03340360 STP X30, X19, [X31 - 0x10]!
	0x03340364 LDR X19, [X0 + 0x30]
	0x03340368 BL 0x1C16D44
	0x0334036C MOV X0, X19
	0x03340370 LDP X30, X19, [X31], #0x10
	0x03340374 RET
	0x03340378 LDR X0, [X0 + 0x50]
	0x0334037C RET
	0x03340380 LDR W0, [X0 + 0x38]
	0x03340384 RET
	0x03340388 LDR W0, [X0 + 0x3C]
	0x0334038C RET
	0x03340390 LDR X0, [X0 + 0x10]
	0x03340394 RET
	0x03340398 LDR X0, [X0 + 0x18]
	0x0334039C RET
	0x033403A0 LDR X0, [X0 + 0x20]
	0x033403A4 RET
	0x033403A8 STR X30, [X31 - 0x20]!
	0x033403AC STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x109D000
	005 Move X20, 0xDB5000
	006 Move W8, [X19+3412]
	007 Move X20, [X20+3672]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDB5000
	013 Move X0, [X0+3672]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3412], W8
	017 Move X0, [X20]
	018 Move W1, 1
	019 Call 0x1C17D6C
	020 Compare X0, 0
	021 JumpIfEqual {31}
	022 Move W8, [X0+24]
	023 Compare W8, 0
	024 JumpIfEqual {32}
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W8, 1
	028 Move [X0+32], W8
	029 Move X30, [X31+32]
	030 Return X0
	031 Call 0x1C17F20
	032 Call 0x1C17F28

Method: System.Int32 GetMonth(System.DateTime time)

Disassembly:
	0x033403B0 ADRP X20, 0x109C000
	0x033403B4 LDRB W8, [X20 + 0xD62]
	0x033403B8 MOV X19, X0
	0x033403BC TBNZ X8, 0x0, 0x33403F8
	0x033403C0 ADRP X0, 0xDB4000

ISIL:
	001 Move X8, [X0]
	002 Move W2, 2
	003 Move X4, [X8+792]
	004 Move X3, [X8+800]
	005 CallNoReturn X4

Method: System.Int32 GetMonthsInYear(System.Int32 year, System.Int32 era)

Disassembly:
	0x033403C4 LDR X0, [X0 + 0xE58]
	0x033403C8 BL 0x1C16CF4
	0x033403CC ADRP X0, 0xDE1000
	0x033403D0 LDR X0, [X0 + 0xAB0]
	0x033403D4 BL 0x1C16CF4
	0x033403D8 ADRP X0, 0xDE8000
	0x033403DC LDR X0, [X0 + 0xC60]
	0x033403E0 BL 0x1C16CF4
	0x033403E4 ADRP X0, 0xDE8000
	0x033403E8 LDR X0, [X0 + 0xC68]
	0x033403EC BL 0x1C16CF4
	0x033403F0 MOVZ W8, 0x1
	0x033403F4 STRB W8, [X20 + 0xD62]
	0x033403F8 LDR X20, [X19 + 0x40]
	0x033403FC BL 0x1C16D44
	0x03340400 CBZ X20, 0x334040C
	0x03340404 LDR X20, [X19 + 0x40]
	0x03340408 B 0x3340524
	0x0334040C ADRP X8, 0xDE1000
	0x03340410 LDR X20, [X19 + 0x50]
	0x03340414 LDR X8, [X8 + 0xAB0]
	0x03340418 MOV X2, X31
	0x0334041C MOV X0, X20
	0x03340420 LDR X1, [X8]
	0x03340424 BL 0x321BA08
	0x03340428 TBZ X0, 0x0, 0x3340468
	0x0334042C ADRP X8, 0xDB4000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x109D000
	007 Move X22, 0xDE9000
	008 Move W8, [X21+3413]
	009 Move X22, [X22+3040]
	010 Move W19, W2
	011 Move W20, W1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDE9000
	017 Move X0, [X0+3040]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3413], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W0, W20
	027 Move W1, W19
	028 Call UmAlQuraCalendar.CheckYearRange, X0, X1
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move W0, 12
	034 Move X30, [X31+48]
	035 Return X0

Method: System.Int32 GetYear(System.DateTime time)

Disassembly:
	0x03340430 LDR X8, [X8 + 0xE58]
	0x03340434 MOVZ W1, 0x2
	0x03340438 LDR X0, [X8]
	0x0334043C BL 0x1C16D6C
	0x03340440 CBZ X0, 0x3340564

ISIL:
	001 Move X8, [X0]
	002 Move W2, W31
	003 Move X4, [X8+792]
	004 Move X3, [X8+800]
	005 CallNoReturn X4

Method: System.Boolean IsLeapYear(System.Int32 year, System.Int32 era)

Disassembly:
	0x03340444 LDR W8, [X0 + 0x18]
	0x03340448 MOV X20, X0
	0x0334044C CBZ W8, 0x3340560
	0x03340450 LDR W9, [X19 + 0x64]
	0x03340454 CMP W8, 0x1
	0x03340458 STR W9, [X20 + 0x20]
	0x0334045C B.EQ 0x3340560
	0x03340460 MOVZ W8, 0x3
	0x03340464 B 0x3340518
	0x03340468 ADRP X8, 0xDE8000
	0x0334046C LDR X8, [X8 + 0xC68]
	0x03340470 MOV X0, X20
	0x03340474 MOV X2, X31
	0x03340478 LDR X1, [X8]
	0x0334047C BL 0x321BA08
	0x03340480 TBZ X0, 0x0, 0x33404C0
	0x03340484 ADRP X8, 0xDB4000
	0x03340488 LDR X8, [X8 + 0xE58]
	0x0334048C MOVZ W1, 0x2
	0x03340490 LDR X0, [X8]
	0x03340494 BL 0x1C16D6C
	0x03340498 CBZ X0, 0x3340564
	0x0334049C LDR W8, [X0 + 0x18]
	0x033404A0 MOV X20, X0
	0x033404A4 CBZ W8, 0x3340560
	0x033404A8 LDR W9, [X19 + 0x64]
	0x033404AC CMP W8, 0x1
	0x033404B0 STR W9, [X20 + 0x20]
	0x033404B4 B.EQ 0x3340560
	0x033404B8 MOVZ W8, 0x4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x109D000
	007 Move X22, 0xDE9000
	008 Move W8, [X21+3414]
	009 Move X22, [X22+3040]
	010 Move W20, W2
	011 Move W19, W1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDE9000
	017 Move X0, [X0+3040]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3414], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W0, W19
	027 Move W1, W20
	028 Call UmAlQuraCalendar.CheckYearRange, X0, X1
	029 Move W0, W19
	030 Call UmAlQuraCalendar.RealGetDaysInYear, X0
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Move X30, [X31+48]
	038 Return X0

Method: System.DateTime ToDateTime(System.Int32 year, System.Int32 month, System.Int32 day, System.Int32 hour, System.Int32 minute, System.Int32 second, System.Int32 millisecond, System.Int32 era)

Disassembly:
	0x033404BC B 0x3340518
	0x033404C0 ADRP X8, 0xDE8000
	0x033404C4 LDR X8, [X8 + 0xC60]
	0x033404C8 MOV X0, X20
	0x033404CC MOV X2, X31
	0x033404D0 LDR X1, [X8]
	0x033404D4 BL 0x321BA08
	0x033404D8 ADRP X8, 0xDB4000
	0x033404DC LDR X8, [X8 + 0xE58]
	0x033404E0 LDR X8, [X8]
	0x033404E4 TBZ X0, 0x0, 0x3340538
	0x033404E8 MOVZ W1, 0x2
	0x033404EC MOV X0, X8
	0x033404F0 BL 0x1C16D6C
	0x033404F4 CBZ X0, 0x3340564
	0x033404F8 LDR W8, [X0 + 0x18]
	0x033404FC MOV X20, X0
	0x03340500 CBZ W8, 0x3340560
	0x03340504 LDR W9, [X19 + 0x64]
	0x03340508 CMP W8, 0x1
	0x0334050C STR W9, [X20 + 0x20]
	0x03340510 B.EQ 0x3340560
	0x03340514 MOVZ W8, 0x8
	0x03340518 STR W8, [X20 + 0x24]
	0x0334051C BL 0x1C16D44
	0x03340520 STR X20, [X19 + 0x40]
	0x03340524 BL 0x1C16D44
	0x03340528 MOV X0, X20
	0x0334052C LDP X20, X19, [X31 + 0x10]
	0x03340530 LDR X30, [X31], #0x20
	0x03340534 RET
	0x03340538 MOVZ W1, 0x1
	0x0334053C MOV X0, X8
	0x03340540 BL 0x1C16D6C
	0x03340544 CBZ X0, 0x3340564
	0x03340548 LDR W8, [X0 + 0x18]
	0x0334054C MOV X20, X0
	0x03340550 CBZ W8, 0x3340560
	0x03340554 LDR W8, [X19 + 0x64]
	0x03340558 STR W8, [X20 + 0x20]
	0x0334055C B 0x334051C
	0x03340560 BL 0x1C16F28
	0x03340564 BL 0x1C16F20
	0x03340568 STR X30, [X31 - 0x30]!
	0x0334056C STP X22, X21, [X31 + 0x10]
	0x03340570 STP X20, X19, [X31 + 0x20]
	0x03340574 ADRP X20, 0x109C000
	0x03340578 LDRB W8, [X20 + 0xD63]
	0x0334057C MOV X19, X0
	0x03340580 TBNZ X8, 0x0, 0x3340598
	0x03340584 ADRP X0, 0xDE8000
	0x03340588 LDR X0, [X0 + 0xC70]
	0x0334058C BL 0x1C16CF4
	0x03340590 MOVZ W8, 0x1
	0x03340594 STRB W8, [X20 + 0xD63]
	0x03340598 MOV X0, X19
	0x0334059C BL 0x33403A8
	0x033405A0 CBZ X0, 0x3340624
	0x033405A4 ADRP X8, 0xDE8000
	0x033405A8 LDR X8, [X8 + 0xC70]
	0x033405AC LDR W1, [X0 + 0x18]
	0x033405B0 LDR X8, [X8]
	0x033405B4 MOV X0, X8
	0x033405B8 BL 0x1C16D6C
	0x033405BC MOV X20, X0
	0x033405C0 MOV X0, X19
	0x033405C4 BL 0x33403A8
	0x033405C8 CBZ X0, 0x3340624
	0x033405CC MOV X21, X31
	0x033405D0 ADD X22, X20, 0x20
	0x033405D4 LDRSW X8, [X0 + 0x18]
	0x033405D8 CMP X21, X8
	0x033405DC B.GE 0x3340628
	0x033405E0 MOV X0, X19
	0x033405E4 BL 0x33403A8
	0x033405E8 CBZ X0, 0x3340624
	0x033405EC LDR W8, [X0 + 0x18]
	0x033405F0 CMP X21, X8
	0x033405F4 B.CS 0x334063C
	0x033405F8 CBZ X20, 0x3340624
	0x033405FC LDR W8, [X20 + 0x18]
	0x03340600 CMP X21, X8
	0x03340604 B.CS 0x334063C
	0x03340608 ADD X8, X0, X21, 0x2, LSL
	0x0334060C LDR W8, [X8 + 0x20]
	0x03340610 MOV X0, X19
	0x03340614 STRH W8, [X22, X21, LSL #1]
	0x03340618 ADD X21, X21, 0x1
	0x0334061C BL 0x33403A8
	0x03340620 CBNZ X0, 0x33405D4
	0x03340624 BL 0x1C16F20
	0x03340628 MOV X0, X20
	0x0334062C LDP X20, X19, [X31 + 0x20]
	0x03340630 LDP X22, X21, [X31 + 0x10]
	0x03340634 LDR X30, [X31], #0x30
	0x03340638 RET
	0x0334063C BL 0x1C16F28
	0x03340640 LDR X0, [X0 + 0x58]
	0x03340644 RET
	0x03340648 STR X30, [X31 - 0x20]!
	0x0334064C STP X20, X19, [X31 + 0x10]
	0x03340650 ADRP X19, 0x109C000
	0x03340654 ADRP X20, 0xDB3000
	0x03340658 LDRB W8, [X19 + 0xD64]
	0x0334065C LDR X20, [X20 + 0x988]
	0x03340660 TBNZ X8, 0x0, 0x3340678
	0x03340664 ADRP X0, 0xDB3000
	0x03340668 LDR X0, [X0 + 0x988]
	0x0334066C BL 0x1C16CF4
	0x03340670 MOVZ W8, 0x1
	0x03340674 STRB W8, [X19 + 0xD64]
	0x03340678 LDR X0, [X20]
	0x0334067C LDP X20, X19, [X31 + 0x10]
	0x03340680 LDR X30, [X31], #0x20
	0x03340684 RET
	0x03340688 LDR X0, [X0 + 0x58]
	0x0334068C RET
	0x03340690 LDRB W0, [X0 + 0x60]
	0x03340694 RET
	0x03340698 STR X30, [X31 - 0x10]!
	0x0334069C BL 0x3340230
	0x033406A0 CBZ X0, 0x33406B0
	0x033406A4 LDR X0, [X0 + 0x38]
	0x033406A8 LDR X30, [X31], #0x10
	0x033406AC RET
	0x033406B0 BL 0x1C16F20
	0x033406B4 STR X30, [X31 - 0x10]!
	0x033406B8 BL 0x3340230
	0x033406BC CBZ X0, 0x33406CC
	0x033406C0 LDR X0, [X0 + 0x40]
	0x033406C4 LDR X30, [X31], #0x10
	0x033406C8 RET
	0x033406CC BL 0x1C16F20
	0x033406D0 STR X30, [X31 - 0x10]!
	0x033406D4 BL 0x3340230
	0x033406D8 CBZ X0, 0x33406E8
	0x033406DC LDR X0, [X0 + 0x48]
	0x033406E0 LDR X30, [X31], #0x10
	0x033406E4 RET
	0x033406E8 BL 0x1C16F20
	0x033406EC STR X30, [X31 - 0x10]!
	0x033406F0 BL 0x3340230
	0x033406F4 CBZ X0, 0x3340704
	0x033406F8 LDR X0, [X0 + 0x18]
	0x033406FC LDR X30, [X31], #0x10
	0x03340700 RET

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X28, 0x109D000
	014 Move W8, [X28+3415]
	015 Move W26, [X31+112]
	016 Move W20, W7
	017 Move W21, W6
	018 Move W22, W5
	019 Move W23, W4
	020 Move W24, W3
	021 Move W19, W2
	022 Move W25, W1
	023 Move X27, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0xDE9000
	029 Move X0, [X0+3040]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X28+3415], W8
	033 Move X28, 0xDE9000
	034 Move X28, [X28+3040]
	035 Subtract W8, W24, 1
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X8, [X27]
	038 Move X0, X27
	039 Move W1, W25
	040 Move W2, W19
	041 Move X9, [X8+520]
	042 Move X4, [X8+528]
	043 Move W3, W26
	044 NotImplemented "Instruction BLR not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W26, W0
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X0, 0xDB6000
	049 Move X0, [X0+3144]
	050 Call 0x1C17D08
	051 Call 0x19913D0
	052 Call CultureInfo.get_CurrentCulture
	053 Move X20, X0
	054 Move X0, 0xDE9000
	055 Move X0, [X0+2472]
	056 Call 0x1C17D08
	057 Move X1, X31
	058 Call Environment.GetResourceString, X0
	059 Move [X31+12], W26
	060 Move X22, 0xDB4000
	061 Move X22, [X22+1880]
	062 Move X21, X0
	063 Move X0, X22
	064 Call 0x1C17D08
	065 Add X1, X31, 12
	066 Call 0x1C17E04
	067 Move X23, X0
	068 Move X0, X22
	069 Move [X31+8], W19
	070 Call 0x1C17D08
	071 Add X1, X31, 8
	072 Call 0x1C17E04
	073 Move X3, X0
	074 Move X0, X20
	075 Move X1, X21
	076 Move X2, X23
	077 Move X4, X31
	078 Call String.Format, X0, X1, X2, X3
	079 Move X19, X0
	080 Move X0, 0xDBC000
	081 Move X0, [X0+1888]
	082 Call 0x1C17D08
	083 Call 0x1C17F10
	084 Move X20, X0
	085 Move X0, 0xDE8000
	086 Move X0, [X0+3512]
	087 Call 0x1C17D08
	088 Move X1, X0
	089 Move X0, X20
	090 Move X0, [X28]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move W0, W25
	096 Move W1, W19
	097 Move W2, W26
	098 Call UmAlQuraCalendar.CheckYearMonthRange, X0, X1, X2
	099 Move X0, [X28]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move W0, W25
	105 Move W1, W19
	106 Move W2, W24
	107 Call UmAlQuraCalendar.GetAbsoluteDateUmAlQura, X0, X1, X2
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {141}
	112 Move X19, X0
	113 Move W0, W23
	114 Move W1, W22
	115 Move W2, W21
	116 Move W3, W20
	117 Move X4, X31
	118 Call Calendar.TimeToTicks, X0, X1, X2, X3
	119 Move X8, 0xC000
	120 NotImplemented "Instruction MOVK not yet implemented."
	121 NotImplemented "Instruction MOVK not yet implemented."
	122 NotImplemented "Instruction MADD not yet implemented."
	123 Add X0, X31, 24
	124 Move X2, X31
	125 Move [X31+24], X31
	126 Call DateTime..ctor, X0, X1
	127 Move X30, [X31+16]
	128 Move X0, [X31+24]
	129 Move X20, [X31+96]
	130 Move X19, [X31+104]
	131 Move X22, [X31+80]
	132 Move X21, [X31+88]
	133 Move X24, [X31+64]
	134 Move X23, [X31+72]
	135 Move X26, [X31+48]
	136 Move X25, [X31+56]
	137 Move X28, [X31+32]
	138 Move X27, [X31+40]
	139 Add X31, X31, 112
	140 Return X0
	141 Move X0, 0xDE9000
	142 Move X0, [X0+2232]
	143 Call 0x1C17D08
	144 Move X1, X31
	145 Call Environment.GetResourceString, X0
	146 Move X19, X0
	147 Move X0, 0xDBC000
	148 Move X0, [X0+1888]
	149 Call 0x1C17D08
	150 Call 0x1C17F10
	151 Move X20, X0
	152 Move X1, X31
	153 Move X2, X19
	154 Move X3, X31
	155 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	156 Move X0, 0xDE9000
	157 Move X0, [X0+3088]
	158 Call 0x1C17D08
	159 Move X1, X0
	160 Move X0, X20
	161 Call 0x1C17DEC

Method: System.Int32 get_TwoDigitYearMax()

Disassembly:
	0x03340704 BL 0x1C16F20
	0x03340708 STR X30, [X31 - 0x10]!
	0x0334070C BL 0x3340230
	0x03340710 CBZ X0, 0x3340720
	0x03340714 LDR X0, [X0 + 0x28]
	0x03340718 LDR X30, [X31], #0x10
	0x0334071C RET
	0x03340720 BL 0x1C16F20
	0x03340724 STR X30, [X31 - 0x10]!
	0x03340728 BL 0x3340230
	0x0334072C CBZ X0, 0x334073C
	0x03340730 LDR X0, [X0 + 0x20]
	0x03340734 LDR X30, [X31], #0x10
	0x03340738 RET
	0x0334073C BL 0x1C16F20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move W0, [X0+24]
	005 Add W31, W0, 1
	006 Move X8, [X19]
	007 Move X0, X19
	008 Move X9, [X8+424]
	009 Move X1, [X8+432]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move W1, 1451
	012 Move X2, X31
	013 Call Calendar.GetSystemTwoDigitYearSetting, X0, X1
	014 Move [X19+24], W0
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return X0

Method: System.Void set_TwoDigitYearMax(System.Int32 value)

Disassembly:
	0x03340740 STR X30, [X31 - 0x10]!
	0x03340744 BL 0x3340230
	0x03340748 CBZ X0, 0x3340758
	0x0334074C LDR X0, [X0 + 0x50]
	0x03340750 LDR X30, [X31], #0x10
	0x03340754 RET
	0x03340758 BL 0x1C16F20
	0x0334075C STR X30, [X31 - 0x10]!
	0x03340760 BL 0x3340230
	0x03340764 CBZ X0, 0x3340774
	0x03340768 LDR X0, [X0 + 0x58]
	0x0334076C LDR X30, [X31], #0x10
	0x03340770 RET
	0x03340774 BL 0x1C16F20
	0x03340778 STR X30, [X31 - 0x10]!
	0x0334077C BL 0x3340230
	0x03340780 CBZ X0, 0x3340790
	0x03340784 LDR X0, [X0 + 0x68]
	0x03340788 LDR X30, [X31], #0x10
	0x0334078C RET
	0x03340790 BL 0x1C16F20
	0x03340794 STR X30, [X31 - 0x10]!
	0x03340798 BL 0x3340230
	0x0334079C CBZ X0, 0x33407AC
	0x033407A0 LDR X0, [X0 + 0x78]
	0x033407A4 LDR X30, [X31], #0x10
	0x033407A8 RET
	0x033407AC BL 0x1C16F20
	0x033407B0 STR X30, [X31 - 0x10]!
	0x033407B4 BL 0x3340230
	0x033407B8 CBZ X0, 0x33407C8
	0x033407BC LDR X0, [X0 + 0x70]
	0x033407C0 LDR X30, [X31], #0x10
	0x033407C4 RET
	0x033407C8 BL 0x1C16F20
	0x033407CC STR X30, [X31 - 0x10]!
	0x033407D0 BL 0x3340230
	0x033407D4 CBZ X0, 0x33407E4
	0x033407D8 LDR X0, [X0 + 0x80]
	0x033407DC LDR X30, [X31], #0x10
	0x033407E0 RET
	0x033407E4 BL 0x1C16F20
	0x033407E8 STR X30, [X31 - 0x10]!
	0x033407EC BL 0x3340230
	0x033407F0 CBZ X0, 0x3340800
	0x033407F4 LDR X0, [X0 + 0x88]
	0x033407F8 LDR X30, [X31], #0x10
	0x033407FC RET
	0x03340800 BL 0x1C16F20
	0x03340804 STR X30, [X31 - 0x10]!
	0x03340808 BL 0x3340230
	0x0334080C CBZ X0, 0x334081C
	0x03340810 LDR X0, [X0 + 0x30]
	0x03340814 LDR X30, [X31], #0x10
	0x03340818 RET
	0x0334081C BL 0x1C16F20
	0x03340820 STP X30, X21, [X31 - 0x20]!
	0x03340824 STP X20, X19, [X31 + 0x10]
	0x03340828 ADRP X21, 0x109C000
	0x0334082C LDRB W8, [X21 + 0xD65]
	0x03340830 MOV W19, W1
	0x03340834 MOV X20, X0
	0x03340838 TBNZ X8, 0x0, 0x334085C
	0x0334083C ADRP X0, 0xDE3000
	0x03340840 LDR X0, [X0 + 0xB60]
	0x03340844 BL 0x1C16CF4
	0x03340848 ADRP X0, 0xDB4000
	0x0334084C LDR X0, [X0 + 0xEC8]
	0x03340850 BL 0x1C16CF4
	0x03340854 MOVZ W8, 0x1
	0x03340858 STRB W8, [X21 + 0xD65]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W19, W1
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X20, X0
	009 Subtract W8, W19, 1318
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X0, X20
	012 Move X1, X31
	013 Call Calendar.VerifyWritable, X0
	014 Move [X20+24], W19
	015 Move X20, [X31+32]
	016 Move X19, [X31+40]
	017 Move X22, [X31+16]
	018 Move X21, [X31+24]
	019 Move X30, [X31+48]
	020 Return 
	021 Move X0, 0xDB6000
	022 Move X0, [X0+3144]
	023 Call 0x1C17D08
	024 Call 0x19913D0
	025 Call CultureInfo.get_CurrentCulture
	026 Move X19, X0
	027 Move X0, 0xDE3000
	028 Move X0, [X0+880]
	029 Call 0x1C17D08
	030 Move X1, X31
	031 Call Environment.GetResourceString, X0
	032 Move W8, 1318
	033 Move [X31+12], W8
	034 Move X21, 0xDB4000
	035 Move X21, [X21+1880]
	036 Move X20, X0
	037 Move X0, X21
	038 Call 0x1C17D08
	039 Add X1, X31, 12
	040 Call 0x1C17E04
	041 Move X22, X0
	042 Move W8, 1500
	043 Move X0, X21
	044 Move [X31+8], W8
	045 Call 0x1C17D08
	046 Add X1, X31, 8
	047 Call 0x1C17E04
	048 Move X3, X0
	049 Move X0, X19
	050 Move X1, X20
	051 Move X2, X22
	052 Move X4, X31
	053 Call String.Format, X0, X1, X2, X3
	054 Move X19, X0
	055 Move X0, 0xDBC000
	056 Move X0, [X0+1888]
	057 Call 0x1C17D08
	058 Call 0x1C17F10
	059 Move X20, X0
	060 Move X0, 0xDBE000
	061 Move X0, [X0+3784]
	062 Call 0x1C17D08
	063 Move X1, X0
	064 Move X0, X20
	065 Move X2, X19
	066 Move X3, X31
	067 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	068 Move X0, 0xDE9000
	069 Move X0, [X0+3096]
	070 Call 0x1C17D08
	071 Move X1, X0
	072 Move X0, X20
	073 Call 0x1C17DEC

Method: System.Int32 ToFourDigitYear(System.Int32 year)

Disassembly:
	0x0334085C CMP W19, 0x3
	0x03340860 B.NE 0x334087C
	0x03340864 ADRP X8, 0xDE3000
	0x03340868 LDR X8, [X8 + 0xB60]
	0x0334086C LDR X8, [X8]
	0x03340870 LDR X8, [X8 + 0xB8]
	0x03340874 LDRB W8, [X8 + 0x3]
	0x03340878 CBZ W8, 0x33408AC
	0x0334087C MOV X0, X20
	0x03340880 MOV W1, W19
	0x03340884 BL 0x3340230
	0x03340888 CBZ X0, 0x33408C4
	0x0334088C LDR X8, [X0 + 0x18]
	0x03340890 CBZ X8, 0x33408C4
	0x03340894 LDR W9, [X8 + 0x18]
	0x03340898 CBZ W9, 0x33408C8
	0x0334089C LDR X0, [X8 + 0x20]
	0x033408A0 LDP X20, X19, [X31 + 0x10]
	0x033408A4 LDP X30, X21, [X31], #0x20
	0x033408A8 B 0x33408CC
	0x033408AC ADRP X8, 0xDB4000
	0x033408B0 LDR X8, [X8 + 0xEC8]
	0x033408B4 LDP X20, X19, [X31 + 0x10]
	0x033408B8 LDR X0, [X8]
	0x033408BC LDP X30, X21, [X31], #0x20
	0x033408C0 RET
	0x033408C4 BL 0x1C16F20
	0x033408C8 BL 0x1C16F28
	0x033408CC STP X30, X21, [X31 - 0x20]!
	0x033408D0 STP X20, X19, [X31 + 0x10]
	0x033408D4 ADRP X20, 0x109C000
	0x033408D8 ADRP X21, 0xDE8000
	0x033408DC LDRB W8, [X20 + 0xD66]
	0x033408E0 LDR X21, [X21 + 0xC78]
	0x033408E4 MOV X19, X0
	0x033408E8 TBNZ X8, 0x0, 0x3340900
	0x033408EC ADRP X0, 0xDE8000
	0x033408F0 LDR X0, [X0 + 0xC78]
	0x033408F4 BL 0x1C16CF4
	0x033408F8 MOVZ W8, 0x1
	0x033408FC STRB W8, [X20 + 0xD66]
	0x03340900 LDR X1, [X21]
	0x03340904 MOV X0, X19
	0x03340908 LDP X20, X19, [X31 + 0x10]
	0x0334090C LDP X30, X21, [X31], #0x20
	0x03340910 B 0x3340914
	0x03340914 STR X30, [X31 - 0x30]!
	0x03340918 STP X22, X21, [X31 + 0x10]
	0x0334091C STP X20, X19, [X31 + 0x20]
	0x03340920 ADRP X21, 0x109C000
	0x03340924 LDRB W8, [X21 + 0xD67]
	0x03340928 MOV X20, X1
	0x0334092C MOV X19, X0
	0x03340930 TBNZ X8, 0x0, 0x3340948
	0x03340934 ADRP X0, 0xDB5000
	0x03340938 LDR X0, [X0 + 0x278]
	0x0334093C BL 0x1C16CF4
	0x03340940 MOVZ W8, 0x1
	0x03340944 STRB W8, [X21 + 0xD67]
	0x03340948 MOV X0, X19
	0x0334094C MOV W1, W31
	0x03340950 MOV X2, X20
	0x03340954 BL 0x3340A18
	0x03340958 ADDS W31, W0, 0x1
	0x0334095C B.EQ 0x33409F0
	0x03340960 CBZ X19, 0x3340A14
	0x03340964 MOV W21, W0
	0x03340968 MOV X0, X19
	0x0334096C MOV W1, W21
	0x03340970 MOV X2, X31
	0x03340974 BL 0x3222A1C
	0x03340978 MOV W22, W0
	0x0334097C ADD W9, W21, 0x1
	0x03340980 LDR W8, [X19 + 0x10]
	0x03340984 MOV W21, W9
	0x03340988 CMP W9, W8
	0x0334098C B.GE 0x33409B4
	0x03340990 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move TEMP, X1
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {28}
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Subtract W8, W1, 1318
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X20, [X31+32]
	014 Move X19, [X31+40]
	015 Move X22, [X31+16]
	016 Move X21, [X31+24]
	017 Move W0, W1
	018 Move X30, [X31+48]
	019 Return X0
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X22, [X31+16]
	023 Move X21, [X31+24]
	024 Move X2, X31
	025 Move X30, [X31+48]
	026 Call Calendar.ToFourDigitYear, X0, X1
	027 Return X0
	028 Move X0, 0xDDC000
	029 Move X0, [X0+1648]
	030 Call 0x1C17D08
	031 Move X1, X31
	032 Call Environment.GetResourceString, X0
	033 Move X0, 0xDB6000
	034 Move X0, [X0+3144]
	035 Call 0x1C17D08
	036 Call 0x19913D0
	037 Call CultureInfo.get_CurrentCulture
	038 Move X19, X0
	039 Move X0, 0xDE3000
	040 Move X0, [X0+880]
	041 Call 0x1C17D08
	042 Move X1, X31
	043 Call Environment.GetResourceString, X0
	044 Move W8, 1318
	045 Move [X31+12], W8
	046 Move X21, 0xDB4000
	047 Move X21, [X21+1880]
	048 Move X20, X0
	049 Move X0, X21
	050 Call 0x1C17D08
	051 Add X1, X31, 12
	052 Call 0x1C17E04
	053 Move X22, X0
	054 Move W8, 1500
	055 Move X0, X21
	056 Move [X31+8], W8
	057 Call 0x1C17D08
	058 Add X1, X31, 8
	059 Call 0x1C17E04
	060 Move X3, X0
	061 Move X0, X19
	062 Move X1, X20
	063 Move X2, X22
	064 Move X4, X31
	065 Call String.Format, X0, X1, X2, X3
	066 Move X19, X0
	067 Move X0, 0xDBC000
	068 Move X0, [X0+1888]
	069 Call 0x1C17D08
	070 Call 0x1C17F10
	071 Move X20, X0
	072 Move X0, 0xDE9000
	073 Move X0, [X0+1448]
	074 Call 0x1C17D08
	075 Move X1, X0
	076 Move X0, X20
	077 Move X2, X19
	078 Move X3, X31
	079 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	080 Move X0, 0xDE9000
	081 Move X0, [X0+3104]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X20
	085 Call 0x1C17DEC

Method: System.Void .cctor()

Disassembly:
	0x03340994 MOV W1, W21
	0x03340998 MOV X2, X31
	0x0334099C BL 0x3222A1C
	0x033409A0 AND W8, W0, 0xFFFF
	0x033409A4 CMP W8, W22, UXTH
	0x033409A8 ADD W9, W21, 0x1
	0x033409AC B.EQ 0x3340980
	0x033409B0 LDR W8, [X19 + 0x10]
	0x033409B4 CMP W21, W8
	0x033409B8 B.GE 0x33409F0
	0x033409BC MOV X0, X19
	0x033409C0 MOV W1, W21
	0x033409C4 MOV X2, X20
	0x033409C8 BL 0x3340A18
	0x033409CC ADDS W31, W0, 0x1
	0x033409D0 B.EQ 0x33409F0
	0x033409D4 SUB W2, W0, 0x1
	0x033409D8 MOV X0, X19
	0x033409DC MOV W1, W21
	0x033409E0 LDP X20, X19, [X31 + 0x20]
	0x033409E4 LDP X22, X21, [X31 + 0x10]
	0x033409E8 LDR X30, [X31], #0x30
	0x033409EC B 0x3340B04
	0x033409F0 ADRP X8, 0xDB5000
	0x033409F4 LDR X8, [X8 + 0x278]
	0x033409F8 LDP X20, X19, [X31 + 0x20]
	0x033409FC LDP X22, X21, [X31 + 0x10]
	0x03340A00 LDR X8, [X8]
	0x03340A04 LDR X8, [X8 + 0xB8]
	0x03340A08 LDR X0, [X8]
	0x03340A0C LDR X30, [X31], #0x30
	0x03340A10 RET
	0x03340A14 BL 0x1C16F20
	0x03340A18 STP X30, X23, [X31 - 0x30]!
	0x03340A1C STP X22, X21, [X31 + 0x10]
	0x03340A20 STP X20, X19, [X31 + 0x20]
	0x03340A24 CBZ X0, 0x3340B00
	0x03340A28 LDR W8, [X0 + 0x10]
	0x03340A2C MOV W19, W1
	0x03340A30 MOV X21, X0
	0x03340A34 CMP W8, W1
	0x03340A38 B.LE 0x3340AE8
	0x03340A3C MOV X20, X2
	0x03340A40 MOV W23, W31
	0x03340A44 TBNZ X23, 0x0, 0x3340A74
	0x03340A48 MOV X0, X21
	0x03340A4C MOV W1, W19
	0x03340A50 MOV X2, X31
	0x03340A54 BL 0x3222A1C
	0x03340A58 CBZ X20, 0x3340B00
	0x03340A5C MOV W1, W0
	0x03340A60 MOV X0, X20
	0x03340A64 MOV X2, X31
	0x03340A68 BL 0x322BD98
	0x03340A6C ADDS W31, W0, 0x1
	0x03340A70 B.NE 0x3340AEC
	0x03340A74 MOV X0, X21
	0x03340A78 MOV W1, W19
	0x03340A7C MOV X2, X31
	0x03340A80 BL 0x3222A1C
	0x03340A84 AND W8, W0, 0xFFFF
	0x03340A88 CMP W8, 0x27
	0x03340A8C B.EQ 0x3340AD4
	0x03340A90 CMP W8, 0x5C
	0x03340A94 B.NE 0x3340AD8
	0x03340A98 LDR W8, [X21 + 0x10]
	0x03340A9C ADD W22, W19, 0x1
	0x03340AA0 CMP W22, W8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0x109D000
	007 Move X19, 0xDE9000
	008 Move X20, 0xDB5000
	009 Move W8, [X21+3416]
	010 Move X19, [X19+3040]
	011 Move X20, [X20+2544]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xDB5000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move X0, 0xDE9000
	020 Move X0, [X0+3040]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3416], W8
	024 Move [X31+40], X31
	025 Call UmAlQuraCalendar.InitDateMapping
	026 Move X8, [X19]
	027 Move W1, 1900
	028 Move W2, 4
	029 Move W3, 30
	030 Move X8, [X8+184]
	031 Move X4, X31
	032 Move [X8], X0
	033 Add X0, X31, 32
	034 Move [X31+32], X31
	035 Call DateTime..ctor, X0, X1, X2, X3
	036 Move X8, [X19]
	037 Move X9, [X31+32]
	038 Add X0, X31, 24
	039 Move W1, 2077
	040 Move X8, [X8+184]
	041 Move W2, 11
	042 Move W3, 16
	043 Move W4, 23
	044 Move W5, 59
	045 Move W6, 59
	046 Move W7, 999
	047 Move [X8+8], X9
	048 Move [X31+24], X31
	049 Move [X31], X31
	050 Call DateTime..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	051 Move X8, [X31+24]
	052 Move X0, [X20]
	053 Move [X31+40], X8
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Add X0, X31, 40
	059 Move X1, X31
	060 Call DateTime.get_Ticks, X0
	061 Move W8, 0x270F
	062 Add X1, X0, X8
	063 Add X0, X31, 16
	064 Move X2, X31
	065 Move [X31+16], X31
	066 Call DateTime..ctor, X0, X1
	067 Move X8, [X19]
	068 Move X9, [X31+16]
	069 Move X20, [X31+64]
	070 Move X19, [X31+72]
	071 Move X30, [X31+48]
	072 Move X21, [X31+56]
	073 Move X8, [X8+184]
	074 Move [X8+16], X9
	075 Add X31, X31, 80
	076 Return 

