Type: System.Globalization.HebrewNumber

Method: System.String ToString(System.Int32 Number)

Disassembly:
	0x0332C038 ADRP X0, 0xDFC000
	0x0332C03C LDR X0, [X0 + 0x298]
	0x0332C040 BL 0x1C16CF4
	0x0332C044 ADRP X0, 0xDF6000
	0x0332C048 LDR X0, [X0 + 0x28]
	0x0332C04C BL 0x1C16CF4
	0x0332C050 ADRP X0, 0xDFC000
	0x0332C054 LDR X0, [X0 + 0x530]
	0x0332C058 BL 0x1C16CF4
	0x0332C05C ADRP X0, 0xDC9000
	0x0332C060 LDR X0, [X0 + 0x570]
	0x0332C064 BL 0x1C16CF4
	0x0332C068 MOVZ W8, 0x1
	0x0332C06C STRB W8, [X19 + 0xCBA]
	0x0332C070 ADRP X19, 0xDC9000
	0x0332C074 LDR X19, [X19 + 0x570]
	0x0332C078 MOV X24, X20
	0x0332C07C STRH W31, [X31 + 0x34]
	0x0332C080 CBNZ X20, 0x332C094
	0x0332C084 MOVZ W0, 0x10
	0x0332C088 MOV X1, X31
	0x0332C08C BL 0x3235A9C
	0x0332C090 MOV X24, X0
	0x0332C094 LDR X0, [X19]
	0x0332C098 STR X20, [X31]
	0x0332C09C LDR W8, [X0 + 0xE0]
	0x0332C0A0 CBNZ W8, 0x332C0A8
	0x0332C0A4 BL 0x1C16DFC
	0x0332C0A8 MOVZ X8, 0x81E3
	0x0332C0AC LDR X11, [X31 + 0x28]
	0x0332C0B0 MOVK X8, 0xE2050000
	0x0332C0B4 MOVK X8, 0xFF1D
	0x0332C0B8 MOVK X8, 0xA2E30000
	0x0332C0BC SMULH X8, X11, X8, X31
	0x0332C0C0 MOVZ X9, 0xC000
	0x0332C0C4 ADD X8, X8, X11
	0x0332C0C8 MOVK X9, 0x2A690000
	0x0332C0CC SBFM X10, X8, 0x27, 0x3F
	0x0332C0D0 MOVK X9, 0xC9
	0x0332C0D4 CMP X11, 0x0
	0x0332C0D8 ADD X8, X10, X8, 0x3F, LSR
	0x0332C0DC MSUB X9, X8, X9, X11
	0x0332C0E0 CSNEG W8, W8, W8, GE
	0x0332C0E4 STR W8, [X31 + 0xC]
	0x0332C0E8 CSNEG X8, X9, X9, GE
	0x0332C0EC CMP W21, 0x1
	0x0332C0F0 STR X31, [X31 + 0x38]
	0x0332C0F4 B.LT 0x332C67C
	0x0332C0F8 MOVZ X9, 0x10B5
	0x0332C0FC MOVK X9, 0x34C20000
	0x0332C100 MOVK X9, 0x7FAB
	0x0332C104 MOVK X9, 0x3D150000
	0x0332C108 SMULH X9, X8, X9, X31
	0x0332C10C UBFM X15, X9, 0x3F, 0x3F
	0x0332C110 SBFM X9, X9, 0x21, 0x3F
	0x0332C114 MOVZ W10, 0xAAAB
	0x0332C118 ADD W9, W9, W15
	0x0332C11C MOVK W10, 0x2AAA0000
	0x0332C120 SXTB W15, W9
	0x0332C124 SMADDL X10, X15, X10, X31
	0x0332C128 UBFM X15, X10, 0x3F, 0x3F
	0x0332C12C UBFM X10, X10, 0x22, 0x3F
	0x0332C130 MOVZ X12, 0xF7D5
	0x0332C134 ADD W10, W10, W15
	0x0332C138 MOVZ X15, 0x42BD
	0x0332C13C MOVK X12, 0x40BA0000
	0x0332C140 MOVK X15, 0xE57A0000
	0x0332C144 MOVK X12, 0x13D8
	0x0332C148 MOVK X15, 0x94D5
	0x0332C14C MOVZ W11, 0x18
	0x0332C150 MOVK X12, 0x1CA20000
	0x0332C154 MOVK X15, 0xD6BF0000
	0x0332C158 MSUB W9, W10, W11, W9
	0x0332C15C SMULH X11, X8, X12, X31
	0x0332C160 SMULH X12, X8, X15, X31
	0x0332C164 UBFM X15, X11, 0x3F, 0x3F
	0x0332C168 UBFM X11, X11, 0x1A, 0x3F
	0x0332C16C ADD X12, X12, X8
	0x0332C170 MOVZ W13, 0x8889
	0x0332C174 MOVZ W10, 0x9680
	0x0332C178 ADD W11, W11, W15
	0x0332C17C SBFM X15, X12, 0x17, 0x3F
	0x0332C180 MOVK W13, 0x88880000
	0x0332C184 MOVK W10, 0x980000
	0x0332C188 ADD X12, X15, X12, 0x3F, LSR
	0x0332C18C SXTH W15, W11
	0x0332C190 ADRP X20, 0xDFC000
	0x0332C194 SMADDL X15, X15, X13, X31
	0x0332C198 MSUB X8, X12, X10, X8
	0x0332C19C LDR X20, [X20 + 0x548]
	0x0332C1A0 SMADDL X13, X12, X13, X31
	0x0332C1A4 STR X8, [X31 + 0x20]
	0x0332C1A8 UBFM X8, X15, 0x20, 0x3F
	0x0332C1AC UBFM X10, X13, 0x20, 0x3F
	0x0332C1B0 ADD W8, W8, W11, SXTH
	0x0332C1B4 ADD W10, W10, W12
	0x0332C1B8 UBFM W13, W8, 0x5, 0x1F
	0x0332C1BC MOVZ W14, 0x3C
	0x0332C1C0 ADD W8, W13, W8, 0x1F, LSR
	0x0332C1C4 SBFM W13, W10, 0x5, 0x1F
	0x0332C1C8 ADD W10, W13, W10, 0x1F, LSR
	0x0332C1CC MSUB W8, W8, W14, W11
	0x0332C1D0 ADRP X29, 0xFFFFFFFFFD86A000
	0x0332C1D4 MOV W26, W31
	0x0332C1D8 MOV X27, X31
	0x0332C1DC MSUB W10, W10, W14, W12
	0x0332C1E0 MOVZ W23, 0xA
	0x0332C1E4 SXTB W9, W9
	0x0332C1E8 SXTH W8, W8
	0x0332C1EC ADD X29, X29, 0x6A9
	0x0332C1F0 STR W9, [X31 + 0x8]
	0x0332C1F4 STP W8, W10, [X31 + 0x10]
	0x0332C1F8 CMP W26, W21
	0x0332C1FC B.CS 0x332C6FC
	0x0332C200 LDRH W25, [X22, W26, SXTW]
	0x0332C204 CMP W25, 0x46
	0x0332C208 B.HI 0x332C298
	0x0332C20C CMP W25, 0x25
	0x0332C210 B.HI 0x332C310
	0x0332C214 CMP W25, 0x22
	0x0332C218 B.EQ 0x332C420
	0x0332C21C CMP W25, 0x25
	0x0332C220 B.NE 0x332C6A0
	0x0332C224 LDR X0, [X20]
	0x0332C228 LDR W8, [X0 + 0xE0]
	0x0332C22C CBNZ W8, 0x332C234
	0x0332C230 BL 0x1C16DFC
	0x0332C234 MOV X0, X22
	0x0332C238 MOV X1, X21
	0x0332C23C MOV W2, W26
	0x0332C240 MOV X3, X31
	0x0332C244 BL 0x3367D0C
	0x0332C248 TBNZ X0, 0x1F, 0x332C6A0
	0x0332C24C CMP W0, 0x25
	0x0332C250 B.EQ 0x332C6A0
	0x0332C254 ADRP X8, 0xDFC000
	0x0332C258 LDR X8, [X8 + 0x530]
	0x0332C25C STRH W0, [X31 + 0x34]
	0x0332C260 LDR X8, [X8]
	0x0332C264 LDR W9, [X8 + 0xE0]
	0x0332C268 CBNZ W9, 0x332C274
	0x0332C26C MOV X0, X8
	0x0332C270 BL 0x1C16DFC
	0x0332C274 LDR X0, [X31 + 0x28]
	0x0332C278 LDR X3, [X31 + 0x18]
	0x0332C27C AND X8, X27, 0x0
	0x0332C280 ORR X27, X8, 0x1
	0x0332C284 ADD X1, X31, 0x34
	0x0332C288 MOV X2, X27
	0x0332C28C MOV X4, X24
	0x0332C290 BL 0x332BFE4
	0x0332C294 B 0x332C308
	0x0332C298 CMP W25, 0x68
	0x0332C29C B.HI 0x332C3C4
	0x0332C2A0 SUB W9, W25, 0x5C
	0x0332C2A4 UBFM W8, W9, 0x1, 0xF
	0x0332C2A8 BFM W8, W9, 0x11, 0x10
	0x0332C2AC AND W9, W8, 0xFFFF
	0x0332C2B0 CMP W9, 0x6
	0x0332C2B4 B.HI 0x332C6A0
	0x0332C2B8 AND X8, X8, 0xFFFF

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x10B1000
	007 Move X21, 0xDC8000
	008 Move W8, [X19+3250]
	009 Move X21, [X21+2288]
	010 Move W20, W0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xDC8000
	016 Move X0, [X0+2288]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+3250], W8
	020 Move X0, [X21]
	021 Call 0x1C17F10
	022 Move X1, X31
	023 Move X19, X0
	024 Call StringBuilder..ctor, X0
	025 Move TEMP, 0x1387
	026 Not TEMP
	027 Move W8, TEMP
	028 Move W9, 0x1389
	029 Add W8, W20, W8
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W21, 0x851F
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction MOVK not yet implemented."
	036 Compare X19, 0
	037 JumpIfEqual {168}
	038 NotImplemented "Instruction UMADDL not yet implemented."
	039 Move X22, X8
	040 ShiftRight X22, 39
	041 And X22, X22, 0x7FFFFFFF
	042 Move W1, 1514
	043 Move X0, X19
	044 Move X2, X31
	045 Call StringBuilder.Append, X0, X1
	046 Subtract W22, W22, 1
	047 NotImplemented "Instruction SMADDL not yet implemented."
	048 Move X10, X8
	049 ShiftRight X10, 63
	050 And X10, X10, 0x7FFFFFFF
	051 NotImplemented "Instruction SBFM not yet implemented."
	052 Add W10, W8, W10
	053 Add W8, W10, 3
	054 NotImplemented "Instruction CMP not yet implemented."
	055 NotImplemented "Instruction CSEL not yet implemented."
	056 And W8, W8, 0xFFFFFFFC
	057 Move TEMP, 99
	058 Not TEMP
	059 Move W9, TEMP
	060 Subtract W8, W10, W8
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction MADD not yet implemented."
	063 Compare X19, 0
	064 JumpIfEqual {168}
	065 Add W1, W8, 1510
	066 Move X0, X19
	067 Move X2, X31
	068 Call StringBuilder.Append, X0, X1
	069 Move W8, 0x6667
	070 NotImplemented "Instruction MOVK not yet implemented."
	071 NotImplemented "Instruction SMADDL not yet implemented."
	072 Move X9, X8
	073 ShiftRight X9, 63
	074 And X9, X9, 0x7FFFFFFF
	075 NotImplemented "Instruction SBFM not yet implemented."
	076 Add W8, W8, W9
	077 Move W9, 10
	078 Subtract W10, W8, 1
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction MSUB not yet implemented."
	081 Move X11, -41504768
	082 Add X11, X11, 1696
	083 NotImplemented "Instruction ADR not yet implemented."
	084 Move W13, [X11]
	085 Add X12, X12, X13
	086 Move W9, 1497
	087 Move W10, 1
	088 CallNoReturn X12
	089 Move W10, W31
	090 Move W9, 1499
	091 Move W10, W31
	092 Move W9, W31
	093 Move W10, W31
	094 Move W9, 1500
	095 Move W10, W31
	096 Move W9, 1502
	097 Move W10, W31
	098 Move W9, 1504
	099 Move W10, W31
	100 Move W9, 1505
	101 Move W10, W31
	102 Move W9, 1506
	103 Move W10, W31
	104 Move W9, 1508
	105 Move W10, W31
	106 Move W9, 1510
	107 Add W11, W8, 1487
	108 NotImplemented "Instruction CMP not yet implemented."
	109 NotImplemented "Instruction CSEL not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction CSET not yet implemented."
	112 Move W8, 1493
	113 And W31, W12, W10
	114 NotImplemented "Instruction CSEL not yet implemented."
	115 Move W10, 1496
	116 And W11, W8, 0xFFFF
	117 NotImplemented "Instruction CSEL not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 NotImplemented "Instruction CSET not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 NotImplemented "Instruction CSET not yet implemented."
	122 And W31, W11, W12
	123 Move W11, 1494
	124 NotImplemented "Instruction CSEL not yet implemented."
	125 NotImplemented "Instruction CSEL not yet implemented."
	126 Compare W1, 0
	127 JumpIfEqual {133}
	128 Compare X19, 0
	129 JumpIfEqual {168}
	130 Move X0, X19
	131 Move X2, X31
	132 Call StringBuilder.Append, X0, X1
	133 And W31, W20, 0xFFFF
	134 Compare X19, 0
	135 JumpIfEqual {168}
	136 Move X0, X19
	137 Move W1, W20
	138 Move X2, X31
	139 Call StringBuilder.Append, X0, X1
	140 Compare X19, 0
	141 JumpIfEqual {168}
	142 Move X0, X19
	143 Move X1, X31
	144 Call StringBuilder.get_Length, X0
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move W1, 39
	147 Move X0, X19
	148 Move X2, X31
	149 Call StringBuilder.Append, X0, X1
	150 Move X0, X19
	151 Move X1, X31
	152 Call StringBuilder.get_Length, X0
	153 Subtract W1, W0, 1
	154 Move W2, 34
	155 Move X0, X19
	156 Move X3, X31
	157 Call StringBuilder.Insert, X0, X1, X2
	158 Move X8, [X19]
	159 Move X0, X19
	160 Move X20, [X31+32]
	161 Move X19, [X31+40]
	162 Move X22, [X31+16]
	163 Move X21, [X31+24]
	164 Move X2, [X8+360]
	165 Move X1, [X8+368]
	166 Move X30, [X31+48]
	167 CallNoReturn X2
	168 Call 0x1C17F20

Method: System.Globalization.HebrewNumberParsingState ParseByChar(System.Char ch, ref System.Globalization.HebrewNumberParsingContext context)

Disassembly:
	0x0332A2D8 BL 0x3222A1C
	0x0332A2DC AND W8, W0, 0xFFFF
	0x0332A2E0 CMP W8, 0x5C
	0x0332A2E4 B.NE 0x332A31C
	0x0332A2E8 LDR W8, [X20 + 0x10]
	0x0332A2EC ADD W19, W19, 0x1
	0x0332A2F0 CMP W19, W8
	0x0332A2F4 B.GE 0x332A364
	0x0332A2F8 MOV X0, X20
	0x0332A2FC MOV W1, W19
	0x0332A300 MOV X2, X31
	0x0332A304 BL 0x3222A1C
	0x0332A308 AND W8, W0, 0xFFFF
	0x0332A30C MOV W21, W0
	0x0332A310 CMP W8, 0x27
	0x0332A314 B.NE 0x332A320
	0x0332A318 B 0x332A358
	0x0332A31C MOV W21, W0
	0x0332A320 LDR X0, [X22]
	0x0332A324 LDR W8, [X0 + 0xE0]
	0x0332A328 CBNZ W8, 0x332A330
	0x0332A32C BL 0x1C16DFC
	0x0332A330 MOV W0, W21
	0x0332A334 MOV X1, X31
	0x0332A338 BL 0x331A888
	0x0332A33C TBNZ X0, 0x0, 0x332A364
	0x0332A340 AND W8, W21, 0xFFFF
	0x0332A344 CMP W8, 0x27
	0x0332A348 B.EQ 0x332A364
	0x0332A34C CMP W8, 0x2E
	0x0332A350 B.EQ 0x332A364
	0x0332A354 ADD W19, W19, 0x1
	0x0332A358 LDR W8, [X20 + 0x10]
	0x0332A35C CMP W19, W8
	0x0332A360 B.LT 0x332A2CC
	0x0332A364 MOV W0, W19
	0x0332A368 LDP X20, X19, [X31 + 0x20]
	0x0332A36C LDP X22, X21, [X31 + 0x10]
	0x0332A370 LDR X30, [X31], #0x30
	0x0332A374 RET
	0x0332A378 BL 0x1C16F20
	0x0332A37C STR X30, [X31 - 0x30]!
	0x0332A380 STP X22, X21, [X31 + 0x10]
	0x0332A384 STP X20, X19, [X31 + 0x20]
	0x0332A388 ADRP X22, 0x10B2000
	0x0332A38C LDRB W8, [X22 + 0xCAB]
	0x0332A390 MOV X20, X2
	0x0332A394 MOV X21, X1
	0x0332A398 MOV X19, X0
	0x0332A39C TBNZ X8, 0x0, 0x332A408
	0x0332A3A0 ADRP X0, 0xDFE000
	0x0332A3A4 LDR X0, [X0 + 0x4F8]
	0x0332A3A8 BL 0x1C16CF4
	0x0332A3AC ADRP X0, 0xDCA000
	0x0332A3B0 LDR X0, [X0 + 0x1B8]
	0x0332A3B4 BL 0x1C16CF4
	0x0332A3B8 ADRP X0, 0xDD2000
	0x0332A3BC LDR X0, [X0 + 0x110]
	0x0332A3C0 BL 0x1C16CF4
	0x0332A3C4 ADRP X0, 0xDCA000
	0x0332A3C8 LDR X0, [X0 + 0x1C0]
	0x0332A3CC BL 0x1C16CF4
	0x0332A3D0 ADRP X0, 0xDCA000
	0x0332A3D4 LDR X0, [X0 + 0x1D0]
	0x0332A3D8 BL 0x1C16CF4
	0x0332A3DC ADRP X0, 0xDFE000
	0x0332A3E0 LDR X0, [X0 + 0x500]
	0x0332A3E4 BL 0x1C16CF4
	0x0332A3E8 ADRP X0, 0xDFE000
	0x0332A3EC LDR X0, [X0 + 0x508]
	0x0332A3F0 BL 0x1C16CF4
	0x0332A3F4 ADRP X0, 0xDD2000
	0x0332A3F8 LDR X0, [X0 + 0x790]
	0x0332A3FC BL 0x1C16CF4
	0x0332A400 MOVZ W8, 0x1
	0x0332A404 STRB W8, [X22 + 0xCAB]
	0x0332A408 STR X31, [X31 + 0x8]
	0x0332A40C CBZ X20, 0x332A634
	0x0332A410 LDR W8, [X20 + 0x10]
	0x0332A414 CMP W8, 0x1
	0x0332A418 B.LT 0x332A624
	0x0332A41C ADRP X22, 0xDD2000
	0x0332A420 LDR X22, [X22 + 0x790]
	0x0332A424 MOV X0, X20
	0x0332A428 MOV X2, X31
	0x0332A42C LDR X1, [X22]
	0x0332A430 BL 0x322693C
	0x0332A434 TBZ X0, 0x0, 0x332A448
	0x0332A438 LDR X1, [X22]
	0x0332A43C MOV X0, X19
	0x0332A440 BL 0x332A638
	0x0332A444 B 0x332A624
	0x0332A448 BL 0x3329E98
	0x0332A44C CBZ X0, 0x332A634
	0x0332A450 ADRP X8, 0xDFE000
	0x0332A454 LDR X8, [X8 + 0x4F8]
	0x0332A458 ADD X2, X31, 0x8
	0x0332A45C MOV X1, X20
	0x0332A460 LDR X3, [X8]
	0x0332A464 BL 0x2AA6B2C
	0x0332A468 TBNZ X0, 0x0, 0x332A624
	0x0332A46C LDR X8, [X19 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x10B3000
	008 Move W8, [X21+3251]
	009 Move X19, X1
	010 Move W20, W0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xDFF000
	016 Move X0, [X0+1256]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3251], W8
	020 Move X21, 0xDFF000
	021 Move X21, [X21+1256]
	022 And W8, W20, 0xFFFF
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W20, 8
	026 Move W20, 9
	027 Move X0, [X21]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X21]
	033 Move X8, [X0+184]
	034 Move X8, [X8+16]
	035 Compare X8, 0
	036 JumpIfEqual {105}
	037 NotImplemented "Instruction INVALID not yet implemented."
	038 Move W10, [X8+24]
	039 Move W11, 10
	040 Multiply X9, X9, X11
	041 Add X9, X9, W20
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Add X8, X8, X9
	044 Move W8, [X8+32]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move [X19], W8
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W8, 2
	049 NotImplemented "Instruction CINC not yet implemented."
	050 And W8, W20, 0xFFFF
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, [X21]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {58}
	056 Call 0x1C17DFC
	057 Move X0, [X21]
	058 Move X8, [X0+184]
	059 Move X8, [X8]
	060 Compare X8, 0
	061 JumpIfEqual {105}
	062 Move W9, [X8+24]
	063 And X10, X20, 0xFFFF
	064 Subtract X22, X10, 1488
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move W9, [X0+224]
	067 Compare W9, 0
	068 JumpIfNotEqual {75}
	069 Call 0x1C17DFC
	070 Move X0, [X21]
	071 Move X8, [X0+184]
	072 Move X8, [X8]
	073 Compare X8, 0
	074 JumpIfEqual {105}
	075 Move W9, [X8+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Add X9, X8, X22
	078 NotImplemented "Instruction LDRSH not yet implemented."
	079 Add W31, W20, 1
	080 Move W9, [X0+224]
	081 Move W23, [X19+4]
	082 Compare W9, 0
	083 JumpIfNotEqual {90}
	084 Call 0x1C17DFC
	085 Move X8, [X21]
	086 Move X8, [X8+184]
	087 Move X8, [X8]
	088 Compare X8, 0
	089 JumpIfEqual {105}
	090 Move W9, [X8+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Add X8, X8, X22
	093 NotImplemented "Instruction LDRSH not yet implemented."
	094 Add W8, W23, W8
	095 Move [X19+4], W8
	096 Move W0, 1
	097 Move W0, W31
	098 Move X20, [X31+32]
	099 Move X19, [X31+40]
	100 Move X22, [X31+16]
	101 Move X21, [X31+24]
	102 Move X30, [X31+48]
	103 Move X23, [X31+56]
	104 Return X0
	105 Call 0x1C17F20
	106 Call 0x1C17F28

Method: System.Boolean IsDigit(System.Char ch)

Disassembly:
	0x0332A1FC BL 0x2AA5098
	0x0332A200 LDR X8, [X21]
	0x0332A204 ADRP X9, 0xDFE000
	0x0332A208 MOV X0, X19
	0x0332A20C LDR X8, [X8 + 0xB8]
	0x0332A210 LDR X9, [X9 + 0x4C0]
	0x0332A214 LDR X3, [X22]
	0x0332A218 LDR X2, [X8]
	0x0332A21C LDR X1, [X9]
	0x0332A220 BL 0x2AA5098
	0x0332A224 LDR X8, [X21]
	0x0332A228 ADRP X9, 0xDFE000
	0x0332A22C MOV X0, X19
	0x0332A230 LDR X8, [X8 + 0xB8]
	0x0332A234 LDR X9, [X9 + 0x488]
	0x0332A238 LDR X3, [X22]
	0x0332A23C LDR X2, [X8]
	0x0332A240 LDR X1, [X9]
	0x0332A244 BL 0x2AA5098
	0x0332A248 BL 0x1C16D44
	0x0332A24C LDR X8, [X20]
	0x0332A250 LDR X8, [X8 + 0xB8]
	0x0332A254 STR X19, [X8]
	0x0332A258 LDR X8, [X20]
	0x0332A25C LDR X8, [X8 + 0xB8]
	0x0332A260 LDR X19, [X8]
	0x0332A264 BL 0x1C16D44
	0x0332A268 MOV X0, X19
	0x0332A26C LDP X20, X19, [X31 + 0x20]
	0x0332A270 LDP X22, X21, [X31 + 0x10]
	0x0332A274 LDR X30, [X31], #0x30
	0x0332A278 RET
	0x0332A27C BL 0x1C16F20
	0x0332A280 STR X30, [X31 - 0x30]!
	0x0332A284 STP X22, X21, [X31 + 0x10]
	0x0332A288 STP X20, X19, [X31 + 0x20]
	0x0332A28C ADRP X21, 0x10B2000
	0x0332A290 LDRB W8, [X21 + 0xCAA]
	0x0332A294 MOV W19, W1
	0x0332A298 MOV X20, X0
	0x0332A29C TBNZ X8, 0x0, 0x332A2B4
	0x0332A2A0 ADRP X0, 0xDCB000
	0x0332A2A4 LDR X0, [X0 + 0x170]
	0x0332A2A8 BL 0x1C16CF4
	0x0332A2AC MOVZ W8, 0x1
	0x0332A2B0 STRB W8, [X21 + 0xCAA]
	0x0332A2B4 CBZ X20, 0x332A378
	0x0332A2B8 LDR W8, [X20 + 0x10]
	0x0332A2BC CMP W8, W19
	0x0332A2C0 B.LE 0x332A364
	0x0332A2C4 ADRP X22, 0xDCB000
	0x0332A2C8 LDR X22, [X22 + 0x170]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x10B3000
	006 Move W8, [X20+3252]
	007 Move W19, W0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDFF000
	013 Move X0, [X0+1256]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3252], W8
	017 And W20, W19, 0xFFFF
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X21, 0xDFF000
	020 Move X21, [X21+1256]
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X21]
	027 Move X8, [X0+184]
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSET not yet implemented."
	034 Or W0, W8, W9
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X21]
	040 Move X8, [X0+184]
	041 Move X8, [X8]
	042 Compare X8, 0
	043 JumpIfEqual {59}
	044 Move W10, [X8+24]
	045 And X9, X19, 0xFFFF
	046 Subtract X9, X9, 1488
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add X8, X8, X9
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Move W8, W8
	051 ShiftRight W8, 15
	052 And W8, W8, 0x7FFFFFFF
	053 Xor W0, W8, 1
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Return X0
	059 Call 0x1C17F20
	060 Call 0x1C17F28

Method: System.Void .cctor()

Disassembly:
	0x0332C2BC ADR X9, 0x10
	0x0332C2C0 LDRB W10, [X29, X8, LSL]
	0x0332C2C4 ADD X9, X9, X10, 0x2, LSL
	0x0332C2C8 BR X9
	0x0332C2CC LDR X0, [X20]
	0x0332C2D0 LDR W8, [X0 + 0xE0]
	0x0332C2D4 CBNZ W8, 0x332C2DC
	0x0332C2D8 BL 0x1C16DFC
	0x0332C2DC MOV X0, X22
	0x0332C2E0 MOV X1, X21
	0x0332C2E4 MOV W2, W26
	0x0332C2E8 MOV X3, X31
	0x0332C2EC BL 0x3367D0C
	0x0332C2F0 TBNZ X0, 0x1F, 0x332C6A0
	0x0332C2F4 CBZ X24, 0x332C700
	0x0332C2F8 MOV W1, W0
	0x0332C2FC MOV X0, X24
	0x0332C300 MOV X2, X31
	0x0332C304 BL 0x3233D30
	0x0332C308 MOVZ W25, 0x2
	0x0332C30C B 0x332C670
	0x0332C310 CMP W25, 0x27
	0x0332C314 B.EQ 0x332C420
	0x0332C318 CMP W25, 0x46
	0x0332C31C B.NE 0x332C6A0
	0x0332C320 LDR X0, [X20]
	0x0332C324 LDR W8, [X0 + 0xE0]
	0x0332C328 CBNZ W8, 0x332C330
	0x0332C32C BL 0x1C16DFC
	0x0332C330 MOVZ W3, 0x46
	0x0332C334 MOV X0, X22
	0x0332C338 MOV X1, X21
	0x0332C33C MOV W2, W26
	0x0332C340 MOV X4, X31
	0x0332C344 BL 0x33679B4
	0x0332C348 CMP W0, 0x7
	0x0332C34C B.GT 0x332C6A0
	0x0332C350 LDR X19, [X31 + 0x20]
	0x0332C354 MOVZ W8, 0x7
	0x0332C358 MOV W25, W0
	0x0332C35C SUB W0, W8, W0
	0x0332C360 MOV X28, X27
	0x0332C364 STR X19, [X31 + 0x38]
	0x0332C368 BL 0x332CA80
	0x0332C36C SDIV X8, X19, X0
	0x0332C370 SUBS W27, W25, 0x1
	0x0332C374 STR X8, [X31 + 0x38]
	0x0332C378 B.LT 0x332C3BC
	0x0332C37C SBFM X9, X25, 0x3D, 0x1F
	0x0332C380 ADD X19, X9, 0x18
	0x0332C384 ORR X9, X31, 0x6666666666666666
	0x0332C388 MOVK X9, 0x6667
	0x0332C38C SMULH X9, X8, X9, X31
	0x0332C390 SBFM X10, X9, 0x2, 0x3F
	0x0332C394 ADD X9, X10, X9, 0x3F, LSR
	0x0332C398 MSUB X8, X9, X23, X8
	0x0332C39C CBNZ X8, 0x332C5F4
	0x0332C3A0 ADD W8, W27, 0x1
	0x0332C3A4 SUB W27, W27, 0x1
	0x0332C3A8 CMP W8, 0x1
	0x0332C3AC SUB X19, X19, 0x8
	0x0332C3B0 MOV X8, X9
	0x0332C3B4 STR X9, [X31 + 0x38]
	0x0332C3B8 B.GT 0x332C384
	0x0332C3BC MOV X27, X28
	0x0332C3C0 B 0x332C670
	0x0332C3C4 CMP W25, 0x6D
	0x0332C3C8 B.EQ 0x332C450
	0x0332C3CC CMP W25, 0x73
	0x0332C3D0 B.NE 0x332C6A0
	0x0332C3D4 LDR X0, [X20]
	0x0332C3D8 LDR W8, [X0 + 0xE0]
	0x0332C3DC CBNZ W8, 0x332C3E4
	0x0332C3E0 BL 0x1C16DFC
	0x0332C3E4 MOVZ W3, 0x73
	0x0332C3E8 MOV X0, X22
	0x0332C3EC MOV X1, X21
	0x0332C3F0 MOV W2, W26
	0x0332C3F4 MOV X4, X31
	0x0332C3F8 BL 0x33679B4
	0x0332C3FC CMP W0, 0x2
	0x0332C400 B.GT 0x332C6A0
	0x0332C404 MOV W25, W0
	0x0332C408 LDR X0, [X20]
	0x0332C40C LDR W8, [X0 + 0xE0]
	0x0332C410 CBNZ W8, 0x332C418
	0x0332C414 BL 0x1C16DFC
	0x0332C418 LDR W1, [X31 + 0x14]
	0x0332C41C B 0x332C5E0
	0x0332C420 LDR X0, [X20]
	0x0332C424 LDR W8, [X0 + 0xE0]
	0x0332C428 CBNZ W8, 0x332C430
	0x0332C42C BL 0x1C16DFC
	0x0332C430 MOV X0, X22
	0x0332C434 MOV X1, X21
	0x0332C438 MOV W2, W26
	0x0332C43C MOV X3, X24
	0x0332C440 MOV X4, X31
	0x0332C444 BL 0x3367B64
	0x0332C448 MOV W25, W0
	0x0332C44C B 0x332C670
	0x0332C450 LDR X0, [X20]
	0x0332C454 LDR W8, [X0 + 0xE0]
	0x0332C458 CBNZ W8, 0x332C460
	0x0332C45C BL 0x1C16DFC
	0x0332C460 MOVZ W3, 0x6D
	0x0332C464 MOV X0, X22
	0x0332C468 MOV X1, X21
	0x0332C46C MOV W2, W26
	0x0332C470 MOV X4, X31
	0x0332C474 BL 0x33679B4
	0x0332C478 CMP W0, 0x2
	0x0332C47C B.GT 0x332C6A0
	0x0332C480 MOV W25, W0
	0x0332C484 LDR X0, [X20]
	0x0332C488 LDR W8, [X0 + 0xE0]
	0x0332C48C CBNZ W8, 0x332C494
	0x0332C490 BL 0x1C16DFC
	0x0332C494 LDR W1, [X31 + 0x10]
	0x0332C498 B 0x332C5E0
	0x0332C49C LDR X0, [X20]
	0x0332C4A0 LDR W8, [X0 + 0xE0]
	0x0332C4A4 CBNZ W8, 0x332C4AC
	0x0332C4A8 BL 0x1C16DFC
	0x0332C4AC MOV X0, X22
	0x0332C4B0 MOV X1, X21
	0x0332C4B4 MOV W2, W26
	0x0332C4B8 MOV W3, W25
	0x0332C4BC MOV X4, X31
	0x0332C4C0 BL 0x33679B4
	0x0332C4C4 CMP W0, 0x8
	0x0332C4C8 B.GT 0x332C6A0
	0x0332C4CC MOV W25, W0
	0x0332C4D0 LDR X0, [X20]
	0x0332C4D4 LDR W8, [X0 + 0xE0]
	0x0332C4D8 CBNZ W8, 0x332C4E0
	0x0332C4DC BL 0x1C16DFC
	0x0332C4E0 LDR W1, [X31 + 0xC]
	0x0332C4E4 MOVZ W3, 0x1
	0x0332C4E8 MOV X0, X24
	0x0332C4EC MOV W2, W25
	0x0332C4F0 MOV X4, X31
	0x0332C4F4 BL 0x3367840
	0x0332C4F8 B 0x332C670
	0x0332C4FC LDR X0, [X20]
	0x0332C500 LDR W8, [X0 + 0xE0]
	0x0332C504 CBNZ W8, 0x332C50C
	0x0332C508 BL 0x1C16DFC
	0x0332C50C MOV X0, X22
	0x0332C510 MOV X1, X21
	0x0332C514 MOV W2, W26
	0x0332C518 MOV W3, W25
	0x0332C51C MOV X4, X31
	0x0332C520 BL 0x33679B4
	0x0332C524 CMP W0, 0x7
	0x0332C528 B.GT 0x332C6A0
	0x0332C52C LDR X19, [X31 + 0x20]
	0x0332C530 MOVZ W8, 0x7
	0x0332C534 MOV W25, W0
	0x0332C538 SUB W0, W8, W0
	0x0332C53C STR X19, [X31 + 0x38]
	0x0332C540 BL 0x332CA80
	0x0332C544 LDR X8, [X20]
	0x0332C548 SDIV X9, X19, X0
	0x0332C54C STR X9, [X31 + 0x38]
	0x0332C550 LDR W9, [X8 + 0xE0]
	0x0332C554 CBNZ W9, 0x332C564
	0x0332C558 MOV X0, X8
	0x0332C55C BL 0x1C16DFC
	0x0332C560 LDR X8, [X20]
	0x0332C564 LDR X8, [X8 + 0xB8]
	0x0332C568 LDR X8, [X8 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x10B1000
	005 Move X20, 0xDFD000
	006 Move W8, [X19+3253]
	007 Move X20, [X20+1304]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0xDFD000
	013 Move X0, [X0+1312]
	014 Call 0x1C17CF4
	015 Move X0, 0xDFD000
	016 Move X0, [X0+1256]
	017 Call 0x1C17CF4
	018 Move X0, 0xDFD000
	019 Move X0, [X0+1304]
	020 Call 0x1C17CF4
	021 Move X0, 0xDFD000
	022 Move X0, [X0+1320]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X19+3253], W8
	026 Move X0, [X20]
	027 Move W1, 27
	028 Call 0x1C17D6C
	029 Compare X0, 0
	030 JumpIfEqual {164}
	031 Move W8, [X0+24]
	032 Compare W8, 0
	033 JumpIfEqual {163}
	034 Move W9, 4
	035 NotImplemented "Instruction MOVK not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move [X0+32], W9
	038 Add W10, W9, 0x10000
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move [X0+36], W10
	041 Or W10, W9, 0x20000
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move [X0+40], W10
	044 Add W10, W9, 0x30000
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move [X0+44], W10
	047 Or W9, W9, 0x40000
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move [X0+48], W9
	050 Move W9, 5
	051 NotImplemented "Instruction MOVK not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move [X0+52], W9
	054 Add W9, W9, 0x10000
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move [X0+56], W9
	057 Move W9, 4
	058 NotImplemented "Instruction MOVK not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move [X0+60], W9
	061 Move W9, 7
	062 NotImplemented "Instruction MOVK not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move [X0+64], W9
	065 Move W9, 3
	066 NotImplemented "Instruction MOVK not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move [X0+68], W9
	069 Move TEMP, 0
	070 Not TEMP
	071 Move W10, TEMP
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move [X0+72], W10
	074 Add W10, W9, 0xA0000
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move [X0+76], W10
	077 Add W10, W9, 0x140000
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move [X0+80], W10
	080 Move TEMP, 0
	081 Not TEMP
	082 Move W10, TEMP
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move [X0+84], W10
	085 Add W10, W9, 0x1E0000
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move [X0+88], W10
	088 Move TEMP, 0
	089 Not TEMP
	090 Move W10, TEMP
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move [X0+92], W10
	093 Add W10, W9, 0x280000
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move [X0+96], W10
	096 Add W10, W9, 0x320000
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move [X0+100], W10
	099 Add W10, W9, 0x3C0000
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move [X0+104], W10
	102 Move TEMP, 0
	103 Not TEMP
	104 Move W10, TEMP
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move [X0+108], W10
	107 Add W10, W9, 0x460000
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move [X0+112], W10
	110 Move TEMP, 0
	111 Not TEMP
	112 Move W10, TEMP
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move [X0+116], W10
	115 Move W10, 0x500000
	116 Or W9, W9, W10
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move [X0+120], W9
	119 Move W9, 2
	120 NotImplemented "Instruction MOVK not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move [X0+124], W9
	123 Move W9, 1
	124 NotImplemented "Instruction MOVK not yet implemented."
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move [X0+128], W9
	127 Add W9, W9, 0x640000
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move [X0+132], W9
	130 Move X20, 0xDFD000
	131 Move X20, [X20+1256]
	132 Move W8, 0x1900000
	133 Move [X0+136], W8
	134 Move X8, [X20]
	135 Move X8, [X8+184]
	136 Move [X8], X0
	137 Move X8, [X20]
	138 Move X8, [X8+184]
	139 Move X9, [X8]
	140 Compare X9, 0
	141 JumpIfEqual {164}
	142 NotImplemented "Instruction LDRH not yet implemented."
	143 Move X10, 0xDFD000
	144 Move X10, [X10+1312]
	145 Move X19, 0xDFD000
	146 Add W9, W9, 1487
	147 NotImplemented "Instruction STRH not yet implemented."
	148 Move X0, [X10]
	149 Move X19, [X19+1320]
	150 Move W1, 170
	151 Call 0x1C17D6C
	152 Move X1, [X19]
	153 Move X2, X31
	154 Move X19, X0
	155 Call RuntimeHelpers.InitializeArray, X0, X1
	156 Move X8, [X20]
	157 Move X8, [X8+184]
	158 Move [X8+16], X19
	159 Move X20, [X31+16]
	160 Move X19, [X31+24]
	161 Move X30, [X31+32]
	162 Return 
	163 Call 0x1C17F28
	164 Call 0x1C17F20

