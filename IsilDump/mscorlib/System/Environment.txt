Type: System.Environment

Method: System.String GetResourceString(System.String key)

Disassembly:
	0x033BED84 ADD W9, W10, 0x1

ISIL:
	001 Return X0

Method: System.String GetResourceString(System.String key, System.Object[] values)

Disassembly:
	0x033C0B40 MOV X2, X31
	0x033C0B44 BR X4
	0x033C0B48 RET
	0x033C0B4C STP X30, X21, [X31 - 0x20]!
	0x033C0B50 STP X20, X19, [X31 + 0x10]
	0x033C0B54 ADRP X21, 0x101D000
	0x033C0B58 ADRP X19, 0xD6C000
	0x033C0B5C ADRP X20, 0xD33000
	0x033C0B60 LDRB W8, [X21 + 0x21B]
	0x033C0B64 LDR X19, [X19 + 0x5C0]
	0x033C0B68 LDR X20, [X20 + 0x6C0]
	0x033C0B6C TBNZ X8, 0x0, 0x33C0B9C
	0x033C0B70 ADRP X0, 0xD6C000
	0x033C0B74 LDR X0, [X0 + 0x5C0]
	0x033C0B78 BL 0x1C16CF4
	0x033C0B7C ADRP X0, 0xD63000
	0x033C0B80 LDR X0, [X0 + 0xE68]
	0x033C0B84 BL 0x1C16CF4
	0x033C0B88 ADRP X0, 0xD33000
	0x033C0B8C LDR X0, [X0 + 0x6C0]
	0x033C0B90 BL 0x1C16CF4
	0x033C0B94 MOVZ W8, 0x1
	0x033C0B98 STRB W8, [X21 + 0x21B]
	0x033C0B9C ADRP X21, 0xD63000
	0x033C0BA0 LDR X21, [X21 + 0xE68]
	0x033C0BA4 BL 0x1C243A8
	0x033C0BA8 LDR X8, [X20]
	0x033C0BAC LDR X20, [X19]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x101E000
	007 Move X22, 0xD36000
	008 Move W8, [X21+547]
	009 Move X22, [X22+3144]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD36000
	017 Move X0, [X0+3144]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+547], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X31
	027 Call CultureInfo.get_InvariantCulture
	028 Move X1, X20
	029 Move X2, X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X3, X31
	035 Move X30, [X31+48]
	036 Call String.Format, X0, X1, X2
	037 Return X0

Method: System.String GetResourceStringEncodingName(System.Int32 codePage)

Disassembly:
	0x033C2398 CSET W8, EQ
	0x033C239C CMP W0, 0x6
	0x033C23A0 CSET W9, EQ
	0x033C23A4 ORR W0, W8, W9, 0x0
	0x033C23A8 LDR X30, [X31], #0x10
	0x033C23AC RET
	0x033C23B0 STR X30, [X31 - 0x30]!
	0x033C23B4 STP X22, X21, [X31 + 0x10]
	0x033C23B8 STP X20, X19, [X31 + 0x20]
	0x033C23BC ADRP X19, 0x101B000
	0x033C23C0 ADRP X22, 0xD63000
	0x033C23C4 LDRB W8, [X19 + 0x22B]
	0x033C23C8 LDR X22, [X22 + 0x808]
	0x033C23CC MOV W21, W1
	0x033C23D0 MOV X20, X0
	0x033C23D4 TBNZ X8, 0x0, 0x33C23EC
	0x033C23D8 ADRP X0, 0xD63000
	0x033C23DC LDR X0, [X0 + 0x808]
	0x033C23E0 BL 0x1C16CF4
	0x033C23E4 MOVZ W8, 0x1
	0x033C23E8 STRB W8, [X19 + 0x22B]
	0x033C23EC LDR X0, [X22]
	0x033C23F0 BL 0x1C16F10
	0x033C23F4 MOV X19, X0
	0x033C23F8 CBZ X20, 0x33C2430
	0x033C23FC AND W2, W21, 0x1
	0x033C2400 MOV X0, X19
	0x033C2404 MOV X1, X20
	0x033C2408 MOV X3, X31
	0x033C240C BL 0x334E4C0
	0x033C2410 CBZ X19, 0x33C2444
	0x033C2414 MOV X0, X19
	0x033C2418 LDP X20, X19, [X31 + 0x20]
	0x033C241C LDP X22, X21, [X31 + 0x10]
	0x033C2420 MOV W1, W31
	0x033C2424 MOV X2, X31
	0x033C2428 LDR X30, [X31], #0x30
	0x033C242C B 0x334F78C
	0x033C2430 AND W1, W21, 0x1
	0x033C2434 MOV X0, X19
	0x033C2438 MOV X2, X31
	0x033C243C BL 0x334E454
	0x033C2440 CBNZ X19, 0x33C2414
	0x033C2444 BL 0x1C16F20
	0x033C2448 RET
	0x033C244C STP X30, X23, [X31 - 0x30]!
	0x033C2450 STP X22, X21, [X31 + 0x10]
	0x033C2454 STP X20, X19, [X31 + 0x20]
	0x033C2458 MOV X21, X1
	0x033C245C MOV X1, X31
	0x033C2460 MOV X19, X5
	0x033C2464 MOV W22, W4
	0x033C2468 MOV W23, W3
	0x033C246C MOV X20, X2
	0x033C2470 BL 0x33D38A0
	0x033C2474 CBZ X0, 0x33C24A0
	0x033C2478 AND W4, W22, 0x1
	0x033C247C MOV X1, X21
	0x033C2480 MOV X2, X20
	0x033C2484 MOV X5, X19
	0x033C2488 LDP X20, X19, [X31 + 0x20]
	0x033C248C LDP X22, X21, [X31 + 0x10]
	0x033C2490 AND W3, W23, 0x1
	0x033C2494 MOV X6, X31
	0x033C2498 LDP X30, X23, [X31], #0x30
	0x033C249C B 0x33D4604
	0x033C24A0 BL 0x1C16F20
	0x033C24A4 RET
	0x033C24A8 STP X30, X19, [X31 - 0x10]!
	0x033C24AC ADRP X0, 0xD31000
	0x033C24B0 LDR X0, [X0 + 0xB40]
	0x033C24B4 BL 0x1C16D08
	0x033C24B8 BL 0x1C16F10
	0x033C24BC MOV X19, X0
	0x033C24C0 ADRP X0, 0xD6A000
	0x033C24C4 LDR X0, [X0 + 0x700]
	0x033C24C8 BL 0x1C16D08
	0x033C24CC MOV X1, X0
	0x033C24D0 MOV X0, X19
	0x033C24D4 MOV X2, X31
	0x033C24D8 BL 0x3379A44
	0x033C24DC ADRP X0, 0xD6A000
	0x033C24E0 LDR X0, [X0 + 0x708]
	0x033C24E4 BL 0x1C16D08
	0x033C24E8 MOV X1, X0
	0x033C24EC MOV X0, X19
	0x033C24F0 BL 0x1C16DEC
	0x033C24F4 LDR W0, [X0]
	0x033C24F8 RET
	0x033C24FC LDR W0, [X0]
	0x033C2500 RET
	0x033C2504 STR X30, [X31 - 0x20]!
	0x033C2508 STP X20, X19, [X31 + 0x10]
	0x033C250C ADRP X20, 0x101B000
	0x033C2510 ADRP X19, 0xD6A000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x101C000
	005 Move W8, [X20+548]
	006 Move W19, W0
	007 Move [X31+12], W0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {38}
	012 Move X0, 0xD34000
	013 Move X0, [X0+3144]
	014 Call 0x1C17CF4
	015 Move X0, 0xD6B000
	016 Move X0, [X0+1528]
	017 Call 0x1C17CF4
	018 Move X0, 0xD6B000
	019 Move X0, [X0+1536]
	020 Call 0x1C17CF4
	021 Move X0, 0xD6B000
	022 Move X0, [X0+1544]
	023 Call 0x1C17CF4
	024 Move X0, 0xD6B000
	025 Move X0, [X0+1552]
	026 Call 0x1C17CF4
	027 Move X0, 0xD6B000
	028 Move X0, [X0+1560]
	029 Call 0x1C17CF4
	030 Move X0, 0xD6B000
	031 Move X0, [X0+1568]
	032 Call 0x1C17CF4
	033 Move X0, 0xD6B000
	034 Move X0, [X0+1576]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+548], W8
	038 Move W8, 0x2EE0
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W8, 0x4E9F
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W8, 0xFDE8
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W8, 0xFDE9
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X8, 0xD6B000
	047 Move X8, [X8+1560]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W8, 0x2EE0
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X8, 0xD6B000
	053 Move X8, [X8+1576]
	054 Move W8, 0x2EE1
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move W8, 0x4E9F
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X8, 0xD6B000
	059 Move X8, [X8+1536]
	060 Move X8, 0xD34000
	061 Move X8, [X8+3144]
	062 Move X0, [X8]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X31
	068 Call CultureInfo.get_InvariantCulture
	069 Move X1, X0
	070 Add X0, X31, 12
	071 Move X2, X31
	072 Call Int32.ToString, X0, X1
	073 Move X8, 0xD6B000
	074 Move X8, [X8+1528]
	075 Move X8, 0xD6B000
	076 Move X8, [X8+1552]
	077 Move X8, 0xD6B000
	078 Move X8, [X8+1544]
	079 Move X8, 0xD6B000
	080 Move X8, [X8+1568]
	081 Move X0, [X8]
	082 Move X20, [X31+16]
	083 Move X19, [X31+24]
	084 Move X30, [X31+32]
	085 Return X0

Method: System.String get_CurrentDirectory()

Disassembly:
	0x033C2514 LDRB W8, [X20 + 0x22C]
	0x033C2518 LDR X19, [X19 + 0x710]

ISIL:
	001 Move X0, X31
	002 Call Directory.InsecureGetCurrentDirectory
	003 Return X0

Method: System.Int32 get_CurrentManagedThreadId()

Disassembly:
	0x033C251C TBNZ X8, 0x0, 0x33C2564
	0x033C2520 ADRP X0, 0xD39000
	0x033C2524 LDR X0, [X0 + 0x958]
	0x033C2528 BL 0x1C16CF4
	0x033C252C ADRP X0, 0xD60000
	0x033C2530 LDR X0, [X0 + 0x9D8]
	0x033C2534 BL 0x1C16CF4
	0x033C2538 ADRP X0, 0xD6A000

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X31
	003 Call Thread.get_CurrentThread
	004 Compare X0, 0
	005 JumpIfEqual {10}
	006 Move X1, X31
	007 Move X30, [X31+16]
	008 Call Thread.get_ManagedThreadId, X0
	009 Return X0
	010 Call 0x1C17F20

Method: System.Boolean get_HasShutdownStarted()

Disassembly:
	0x033C253C LDR X0, [X0 + 0x718]

ISIL:
	001 Call 0x1C88BB0
	002 Return X0

Method: System.String get_MachineName()

Disassembly:
	0x033C2540 BL 0x1C16CF4

ISIL:
	001 Call 0x1C88BCC
	002 Return X0

Method: System.String GetNewLine()

Disassembly:
	0x033C2544 ADRP X0, 0xD6A000

ISIL:
	001 Call 0x1C88E0C
	002 Return X0

Method: System.String get_NewLine()

Disassembly:
	0x033C2548 LDR X0, [X0 + 0x720]
	0x033C254C BL 0x1C16CF4
	0x033C2550 ADRP X0, 0xD6A000
	0x033C2554 LDR X0, [X0 + 0x710]
	0x033C2558 BL 0x1C16CF4
	0x033C255C MOVZ W8, 0x1
	0x033C2560 STRB W8, [X20 + 0x22C]
	0x033C2564 LDR X0, [X19]
	0x033C2568 ADRP X19, 0xD39000
	0x033C256C LDR X19, [X19 + 0x958]
	0x033C2570 MOV X1, X31
	0x033C2574 STR W31, [X31 + 0xC]
	0x033C2578 BL 0x32E57A8
	0x033C257C TBZ X0, 0x0, 0x33C2588
	0x033C2580 MOVZ W8, 0x1
	0x033C2584 B 0x33C25A0
	0x033C2588 ADRP X8, 0xD6A000
	0x033C258C LDR X8, [X8 + 0x720]
	0x033C2590 MOV X1, X31
	0x033C2594 LDR X0, [X8]
	0x033C2598 BL 0x32E57A8
	0x033C259C AND W8, W0, 0x1
	0x033C25A0 LDR X9, [X19]
	0x033C25A4 LDR X9, [X9 + 0xB8]
	0x033C25A8 STRB W8, [X9 + 0x18]
	0x033C25AC BL 0x1C87BC4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x101C000
	005 Move X19, 0xD6B000
	006 Move W8, [X20+549]
	007 Move X19, [X19+1584]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD6B000
	013 Move X0, [X0+1584]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+549], W8
	017 Move X8, [X19]
	018 Move X8, [X8+184]
	019 Move X0, [X8]
	020 Compare X0, 0
	021 JumpIfNotEqual {29}
	022 Call 0x1C88E0C
	023 Move X8, [X19]
	024 Move X8, [X8+184]
	025 Move [X8], X0
	026 Move X8, [X19]
	027 Move X8, [X8+184]
	028 Move X0, [X8]
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0

Method: System.PlatformID get_Platform()

Disassembly:
	0x033C25B0 CMP W0, 0x3

ISIL:
	001 Call 0x1C88BC4
	002 Return X0

Method: System.String GetOSVersionString()

Disassembly:
	0x033C25B4 B.GT 0x33C2608

ISIL:
	001 Call 0x1C88E34
	002 Return X0

Method: System.OperatingSystem get_OSVersion()

Disassembly:
	0x033C25B8 ADRP X8, 0xD6A000
	0x033C25BC LDR X8, [X8 + 0x718]
	0x033C25C0 LDR X0, [X8]
	0x033C25C4 LDR W8, [X0 + 0xE0]
	0x033C25C8 CBNZ W8, 0x33C25D0
	0x033C25CC BL 0x1C16DFC
	0x033C25D0 BL 0x33C275C
	0x033C25D4 MOV X1, X31
	0x033C25D8 BL 0x3242308
	0x033C25DC LDR X8, [X19]
	0x033C25E0 LDR X8, [X8 + 0xB8]
	0x033C25E4 STR X0, [X8 + 0x20]
	0x033C25E8 BL 0x33C27A8
	0x033C25EC MOV X1, X31
	0x033C25F0 BL 0x3242308
	0x033C25F4 MOV X1, X0
	0x033C25F8 LDR X8, [X19]
	0x033C25FC LDR X8, [X8 + 0xB8]
	0x033C2600 STR X1, [X8 + 0x28]
	0x033C2604 B 0x33C2680
	0x033C2608 ADRP X20, 0xD60000
	0x033C260C LDR X20, [X20 + 0x9D8]
	0x033C2610 STR W31, [X31 + 0xC]
	0x033C2614 LDR X0, [X20]
	0x033C2618 LDR W8, [X0 + 0xE0]
	0x033C261C CBNZ W8, 0x33C2624
	0x033C2620 BL 0x1C16DFC
	0x033C2624 ADD X0, X31, 0xC
	0x033C2628 MOV X1, X31
	0x033C262C BL 0x3247F28
	0x033C2630 LDR W8, [X31 + 0xC]
	0x033C2634 ADDS W31, W8, 0x1
	0x033C2638 B.EQ 0x33C264C
	0x033C263C AND W9, W8, 0xFFFFFFF
	0x033C2640 CMP W9, 0x3
	0x033C2644 B.EQ 0x33C2658
	0x033C2648 TBNZ X8, 0x1C, 0x33C2658
	0x033C264C MOV X0, X31
	0x033C2650 BL 0x3242BB4
	0x033C2654 B 0x33C2670
	0x033C2658 LDR X0, [X20]
	0x033C265C LDR W8, [X0 + 0xE0]
	0x033C2660 CBNZ W8, 0x33C2668
	0x033C2664 BL 0x1C16DFC
	0x033C2668 MOV X0, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x101C000
	007 Move X22, 0xD6B000
	008 Move W8, [X19+550]
	009 Move X22, [X22+1584]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xD6B000
	015 Move X0, [X0+1584]
	016 Call 0x1C17CF4
	017 Move X0, 0xD6A000
	018 Move X0, [X0+2264]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+550], W8
	022 Move X8, [X22]
	023 Move X8, [X8+184]
	024 Move X19, [X8+8]
	025 Compare X19, 0
	026 JumpIfNotEqual {47}
	027 Call 0x1C88E34
	028 Call Environment.CreateVersionFromString, X0
	029 Move X20, X0
	030 Call 0x1C88BC4
	031 Move X8, 0xD6A000
	032 Move X8, [X8+2264]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W9, 4
	035 NotImplemented "Instruction CSEL not yet implemented."
	036 Move X8, [X8]
	037 Move X0, X8
	038 Call 0x1C17F10
	039 Move W1, W21
	040 Move X2, X20
	041 Move X3, X31
	042 Move X19, X0
	043 Call OperatingSystem..ctor, X0, X1, X2
	044 Move X8, [X22]
	045 Move X8, [X8+184]
	046 Move [X8+8], X19
	047 Move X0, X19
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Return X0

Method: System.Version CreateVersionFromString(System.String info)

Disassembly:
	0x033C266C BL 0x3247D44
	0x033C2670 LDR X8, [X19]
	0x033C2674 MOV X1, X0
	0x033C2678 LDR X8, [X8 + 0xB8]
	0x033C267C STP X0, X0, [X8 + 0x20]
	0x033C2680 LDR X0, [X8 + 0x20]
	0x033C2684 BL 0x33C27F4
	0x033C2688 LDP X20, X19, [X31 + 0x10]
	0x033C268C LDR X30, [X31], #0x20
	0x033C2690 RET
	0x033C2694 B 0x33C26A4
	0x033C2698 B 0x33C26A4
	0x033C269C B 0x33C26A4
	0x033C26A0 B 0x33C26A4
	0x033C26A4 MOV X20, X0
	0x033C26A8 CMP W1, 0x1
	0x033C26AC B.NE 0x33C2750
	0x033C26B0 MOV X0, X20
	0x033C26B4 BL 0x3EB1AD0
	0x033C26B8 MOV X20, X0
	0x033C26BC ADRP X0, 0xD37000
	0x033C26C0 LDR X0, [X0 + 0xCC0]
	0x033C26C4 BL 0x1C16D08
	0x033C26C8 LDR X8, [X20]
	0x033C26CC LDR X1, [X8]
	0x033C26D0 BL 0x1C17270
	0x033C26D4 TBZ X0, 0x0, 0x33C2728
	0x033C26D8 BL 0x3EB1AE0
	0x033C26DC MOV X0, X31
	0x033C26E0 BL 0x3242BB4
	0x033C26E4 MOV X20, X0
	0x033C26E8 MOV X0, X19
	0x033C26EC BL 0x1C16D08
	0x033C26F0 LDR X8, [X0 + 0xB8]
	0x033C26F4 MOV X0, X19
	0x033C26F8 STR X20, [X8 + 0x28]
	0x033C26FC BL 0x1C16D08
	0x033C2700 MOV X0, X19
	0x033C2704 BL 0x1C16D08
	0x033C2708 LDR X8, [X0 + 0xB8]
	0x033C270C MOV X0, X19
	0x033C2710 STR X20, [X8 + 0x20]
	0x033C2714 BL 0x1C16D08
	0x033C2718 LDR X8, [X19]
	0x033C271C LDR X8, [X8 + 0xB8]
	0x033C2720 LDR X1, [X8 + 0x28]
	0x033C2724 B 0x33C2680
	0x033C2728 MOVZ W0, 0x8
	0x033C272C BL 0x3EB1AF0
	0x033C2730 LDR X8, [X20]
	0x033C2734 STR X8, [X0]
	0x033C2738 ADRP X1, 0xAF2000
	0x033C273C ADD X1, X1, 0xE58
	0x033C2740 MOV X2, X31
	0x033C2744 BL 0x3EB1B00
	0x033C2748 MOV X20, X0
	0x033C274C BL 0x3EB1AE0
	0x033C2750 MOV X0, X20
	0x033C2754 BL 0x1D2C690
	0x033C2758 BL 0x1990590
	0x033C275C STR X30, [X31 - 0x20]!
	0x033C2760 STP X20, X19, [X31 + 0x10]
	0x033C2764 ADRP X19, 0x101B000
	0x033C2768 ADRP X20, 0xD6A000
	0x033C276C LDRB W8, [X19 + 0x259]
	0x033C2770 LDR X20, [X20 + 0x718]
	0x033C2774 TBNZ X8, 0x0, 0x33C278C
	0x033C2778 ADRP X0, 0xD6A000
	0x033C277C LDR X0, [X0 + 0x718]
	0x033C2780 BL 0x1C16CF4
	0x033C2784 MOVZ W8, 0x1
	0x033C2788 STRB W8, [X19 + 0x259]
	0x033C278C LDR X0, [X20]
	0x033C2790 LDR W8, [X0 + 0xE0]
	0x033C2794 CBNZ W8, 0x33C279C
	0x033C2798 BL 0x1C16DFC
	0x033C279C LDP X20, X19, [X31 + 0x10]
	0x033C27A0 LDR X30, [X31], #0x20
	0x033C27A4 B 0x33C3AEC
	0x033C27A8 STR X30, [X31 - 0x20]!
	0x033C27AC STP X20, X19, [X31 + 0x10]
	0x033C27B0 ADRP X19, 0x101B000
	0x033C27B4 ADRP X20, 0xD6A000
	0x033C27B8 LDRB W8, [X19 + 0x25A]
	0x033C27BC LDR X20, [X20 + 0x718]
	0x033C27C0 TBNZ X8, 0x0, 0x33C27D8
	0x033C27C4 ADRP X0, 0xD6A000
	0x033C27C8 LDR X0, [X0 + 0x718]
	0x033C27CC BL 0x1C16CF4
	0x033C27D0 MOVZ W8, 0x1
	0x033C27D4 STRB W8, [X19 + 0x25A]
	0x033C27D8 LDR X0, [X20]
	0x033C27DC LDR W8, [X0 + 0xE0]
	0x033C27E0 CBNZ W8, 0x33C27E8
	0x033C27E4 BL 0x1C16DFC
	0x033C27E8 LDP X20, X19, [X31 + 0x10]
	0x033C27EC LDR X30, [X31], #0x20
	0x033C27F0 B 0x33C3B54
	0x033C27F4 STR X30, [X31 - 0x50]!
	0x033C27F8 STP X26, X25, [X31 + 0x10]
	0x033C27FC STP X24, X23, [X31 + 0x20]
	0x033C2800 STP X22, X21, [X31 + 0x30]
	0x033C2804 STP X20, X19, [X31 + 0x40]
	0x033C2808 ADRP X21, 0x101B000
	0x033C280C LDRB W8, [X21 + 0x22D]
	0x033C2810 MOV X19, X1
	0x033C2814 MOV X20, X0
	0x033C2818 TBNZ X8, 0x0, 0x33C2890
	0x033C281C ADRP X0, 0xD6A000
	0x033C2820 LDR X0, [X0 + 0x728]
	0x033C2824 BL 0x1C16CF4
	0x033C2828 ADRP X0, 0xD6A000
	0x033C282C LDR X0, [X0 + 0x730]
	0x033C2830 BL 0x1C16CF4
	0x033C2834 ADRP X0, 0xD65000
	0x033C2838 LDR X0, [X0 + 0x7B8]
	0x033C283C BL 0x1C16CF4
	0x033C2840 ADRP X0, 0xD39000
	0x033C2844 LDR X0, [X0 + 0x958]
	0x033C2848 BL 0x1C16CF4
	0x033C284C ADRP X0, 0xD38000
	0x033C2850 LDR X0, [X0 + 0xC10]
	0x033C2854 BL 0x1C16CF4
	0x033C2858 ADRP X0, 0xD64000
	0x033C285C LDR X0, [X0 + 0xE00]
	0x033C2860 BL 0x1C16CF4
	0x033C2864 ADRP X0, 0xD64000
	0x033C2868 LDR X0, [X0 + 0xE70]
	0x033C286C BL 0x1C16CF4
	0x033C2870 ADRP X0, 0xD65000
	0x033C2874 LDR X0, [X0 + 0x798]
	0x033C2878 BL 0x1C16CF4
	0x033C287C ADRP X0, 0xD6A000
	0x033C2880 LDR X0, [X0 + 0x738]
	0x033C2884 BL 0x1C16CF4

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X19, 0x101C000
	014 Move W8, [X19+551]
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0xD34000
	021 Move X0, [X0+368]
	022 Call 0x1C17CF4
	023 Move X0, 0xD3A000
	024 Move X0, [X0+1984]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X19+551], W8
	028 Move X9, 0xD3A000
	029 Move X9, [X9+1984]
	030 Compare X22, 0
	031 JumpIfEqual {111}
	032 Move W8, [X22+16]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X28, 0xD34000
	035 Move X28, [X28+368]
	036 Move X25, -42119168
	037 Move W26, W31
	038 Move W20, W31
	039 Move W19, W31
	040 Move W23, W31
	041 Move TEMP, 0
	042 Not TEMP
	043 Move W21, TEMP
	044 Move W27, 1
	045 Move W29, 10
	046 Add X25, X25, 2304
	047 Move X0, X22
	048 Move W1, W23
	049 Move X2, X31
	050 Call String.get_Chars, X0, X1
	051 Move X8, [X28]
	052 Move W24, W0
	053 Move W9, [X8+224]
	054 Compare W9, 0
	055 JumpIfNotEqual {58}
	056 Move X0, X8
	057 Call 0x1C17DFC
	058 Move W0, W24
	059 Move X1, X31
	060 Call Char.IsDigit, X0
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {71}
	065 Move TEMP, X21
	066 And TEMP, TEMP, -2147483648
	067 Compare TEMP, -2147483648
	068 JumpIfEqual {82}
	069 Multiply W8, W21, W29
	070 Add W8, W8, W24
	071 Move TEMP, X21
	072 And TEMP, TEMP, -2147483648
	073 Compare TEMP, -2147483648
	074 JumpIfEqual {91}
	075 Subtract W8, W27, 1
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction ADR not yet implemented."
	078 Move W10, [X25]
	079 Add X9, X9, X10
	080 CallNoReturn X9
	081 Move W20, W21
	082 And W8, W24, 0xFFFF
	083 Subtract W21, W8, 48
	084 Move W19, W21
	085 Move W21, W26
	086 Add W27, W27, 1
	087 Move W26, W21
	088 Move TEMP, 0
	089 Not TEMP
	090 Move W21, TEMP
	091 Move W8, [X22+16]
	092 Add W23, W23, 1
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move TEMP, X21
	095 And TEMP, TEMP, -2147483648
	096 Compare TEMP, -2147483648
	097 JumpIfEqual {125}
	098 Subtract W8, W27, 1
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X9, -42119168
	101 Add X9, X9, 2308
	102 NotImplemented "Instruction ADR not yet implemented."
	103 Move W11, [X9]
	104 Add X10, X10, X11
	105 Move X9, 0xD3A000
	106 Move X9, [X9+1984]
	107 Move W22, W31
	108 CallNoReturn X10
	109 Move W22, W31
	110 Move W20, W21
	111 Move X0, [X9]
	112 Call 0x1C17F10
	113 Move W1, W31
	114 Move W2, W31
	115 Move W3, W31
	116 Move W4, W31
	117 Move X5, X31
	118 Move X19, X0
	119 Call Version..ctor, X0, X1, X2, X3, X4
	120 Move X0, X19
	121 Move W22, W31
	122 Move W19, W31
	123 Move W20, W31
	124 Move W21, W31
	125 Move W22, W31
	126 Move X9, 0xD3A000
	127 Move X9, [X9+1984]
	128 Move W21, W26
	129 Move X0, [X9]
	130 Call 0x1C17F10
	131 Move W1, W21
	132 Move W2, W20
	133 Move W3, W19
	134 Move W4, W22
	135 Move X5, X31
	136 Move X23, X0
	137 Call Version..ctor, X0, X1, X2, X3, X4
	138 Move X0, X23
	139 Move X20, [X31+80]
	140 Move X19, [X31+88]
	141 Move X22, [X31+64]
	142 Move X21, [X31+72]
	143 Move X24, [X31+48]
	144 Move X23, [X31+56]
	145 Move X26, [X31+32]
	146 Move X25, [X31+40]
	147 Move X28, [X31+16]
	148 Move X27, [X31+24]
	149 Move X29, [X31+96]
	150 Move X30, [X31+104]
	151 Return X0
	152 Move W22, W31
	153 Move W19, W21
	154 Move W22, W21
	155 Move W22, W21

Method: System.String get_StackTrace()

Disassembly:
	0x033C2888 MOVZ W8, 0x1
	0x033C288C STRB W8, [X21 + 0x22D]
	0x033C2890 ADRP X23, 0xD39000
	0x033C2894 ADRP X24, 0xD64000
	0x033C2898 LDR X23, [X23 + 0x958]
	0x033C289C LDR X24, [X24 + 0xE70]
	0x033C28A0 BL 0x1C87BC4
	0x033C28A4 CMP W0, 0x4
	0x033C28A8 B.LT 0x33C29D0
	0x033C28AC ADRP X8, 0xD65000
	0x033C28B0 LDR X8, [X8 + 0x7B8]
	0x033C28B4 LDR X0, [X8]
	0x033C28B8 LDR W8, [X0 + 0xE0]
	0x033C28BC CBNZ W8, 0x33C28C4
	0x033C28C0 BL 0x1C16DFC
	0x033C28C4 BL 0x33C2B9C
	0x033C28C8 TBZ X0, 0x0, 0x33C29D0
	0x033C28CC LDR X0, [X23]
	0x033C28D0 LDR W8, [X0 + 0xE0]
	0x033C28D4 CBNZ W8, 0x33C28DC
	0x033C28D8 BL 0x1C16DFC
	0x033C28DC MOV W0, W31
	0x033C28E0 BL 0x33C2CDC
	0x033C28E4 ADRP X8, 0xD6A000
	0x033C28E8 LDR X8, [X8 + 0x728]
	0x033C28EC MOV X21, X0
	0x033C28F0 LDR X8, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x101C000
	005 Move X20, 0xD64000
	006 Move W8, [X19+552]
	007 Move X20, [X20+2056]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD64000
	013 Move X0, [X0+2056]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+552], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move W2, 1
	020 Move W1, W31
	021 Move X3, X31
	022 Move X19, X0
	023 Call StackTrace..ctor, X0, X1, X2
	024 Compare X19, 0
	025 JumpIfEqual {34}
	026 Move X8, [X19]
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X2, [X8+360]
	031 Move X1, [X8+368]
	032 Move X30, [X31+32]
	033 CallNoReturn X2
	034 Call 0x1C17F20

Method: System.Int32 get_TickCount()

Disassembly:
	0x033C28F4 MOV X0, X8

ISIL:
	001 Call 0x1C88BB8
	002 Return X0

Method: System.String get_UserDomainName()

Disassembly:
	0x033C28F8 BL 0x1C16F10

ISIL:
	001 Call 0x1C88BCC
	002 Return X0

Method: System.String get_UserName()

Disassembly:
	0x033C28FC MOV X1, X21

ISIL:
	001 Call 0x1C88C38
	002 Return X0

Method: System.Void Exit(System.Int32 exitCode)

Disassembly:
	0x033C2900 MOV X2, X20

ISIL:
	001 Call 0x1C89164
	002 Return 

Method: System.String[] GetCommandLineArgs()

Disassembly:
	0x033C2904 MOV X3, X31

ISIL:
	001 Call 0x1C890C0
	002 Return X0

Method: System.String internalGetEnvironmentVariable_native(System.IntPtr variable)

Disassembly:
	0x033C2908 MOV X22, X0

ISIL:
	001 Call 0x1C88F84
	002 Return X0

Method: System.String internalGetEnvironmentVariable(System.String variable)

Disassembly:
	0x033C290C BL 0x3300258
	0x033C2910 LDR X8, [X23]
	0x033C2914 MOV W0, W31
	0x033C2918 LDR X8, [X8 + 0xB8]
	0x033C291C STR X22, [X8 + 0x10]
	0x033C2920 BL 0x33C2D6C
	0x033C2924 ADRP X22, 0xD6A000
	0x033C2928 LDR X22, [X22 + 0x730]
	0x033C292C MOV X21, X0
	0x033C2930 LDR X8, [X22]
	0x033C2934 MOV X0, X8
	0x033C2938 BL 0x1C16F10
	0x033C293C MOVZ W3, 0x1
	0x033C2940 MOV X1, X21
	0x033C2944 MOV X2, X19
	0x033C2948 MOV X4, X31
	0x033C294C MOV X20, X0
	0x033C2950 BL 0x3300794
	0x033C2954 CBZ X20, 0x33C2B98
	0x033C2958 LDR X8, [X20]
	0x033C295C MOVZ W1, 0x1
	0x033C2960 MOV X0, X20
	0x033C2964 LDR X9, [X8 + 0x288]
	0x033C2968 LDR X2, [X8 + 0x290]
	0x033C296C BLR X9
	0x033C2970 LDR X0, [X24]
	0x033C2974 LDR W8, [X0 + 0xE0]
	0x033C2978 CBNZ W8, 0x33C2980
	0x033C297C BL 0x1C16DFC
	0x033C2980 MOV X0, X20
	0x033C2984 MOV X1, X31
	0x033C2988 BL 0x32EA0DC
	0x033C298C LDR X8, [X23]
	0x033C2990 LDR X8, [X8 + 0xB8]
	0x033C2994 STR X0, [X8]
	0x033C2998 MOV W0, W31
	0x033C299C BL 0x33C2DFC
	0x033C29A0 LDR X8, [X22]
	0x033C29A4 MOV X21, X0
	0x033C29A8 MOV X0, X8
	0x033C29AC BL 0x1C16F10
	0x033C29B0 MOVZ W3, 0x1
	0x033C29B4 MOV X1, X21
	0x033C29B8 MOV X2, X19
	0x033C29BC MOV X4, X31
	0x033C29C0 MOV X20, X0
	0x033C29C4 BL 0x3300794
	0x033C29C8 CBNZ X20, 0x33C2AEC
	0x033C29CC B 0x33C2B98

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Compare X0, 0
	006 JumpIfEqual {19}
	007 Move X1, X31
	008 Call RuntimeMarshal.MarshalString, X0
	009 Move [X31], X0
	010 Move [X31+8], X1
	011 Add X0, X31, 0
	012 Move X1, X31
	013 Call SafeStringMarshal.get_Value, X0
	014 Call 0x1C88F84
	015 Move X20, X0
	016 Add X0, X31, 0
	017 Move X1, X31
	018 Call SafeStringMarshal.Dispose, X0
	019 Move X20, X31
	020 Move X0, X20
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X30, [X31+16]
	024 Add X31, X31, 48
	025 Return X0
	026 Move X20, X0
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X0, X20
	029 Call 0x3EB2AD0
	030 Move X19, [X0]
	031 Call 0x3EB2AE0
	032 Add X0, X31, 0
	033 Move X1, X31
	034 Call SafeStringMarshal.Dispose, X0
	035 Move X20, X31
	036 Compare X19, 0
	037 JumpIfEqual {20}
	038 Move X0, X19
	039 Call 0x1C17F18
	040 Move X19, X31
	041 Move X20, X0
	042 Add X0, X31, 0
	043 Move X1, X31
	044 Call SafeStringMarshal.Dispose, X0
	045 Compare X19, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X20
	048 Call 0x1D2D690
	049 Move X0, X19
	050 Call 0x1C17F18
	051 Call 0x1991590

Method: System.String GetEnvironmentVariable(System.String variable)

Disassembly:
	0x033C29D0 LDR X0, [X23]

ISIL:
	001 Call Environment.internalGetEnvironmentVariable, X0
	002 Return X0

Method: System.String GetFolderPath(System.Environment/SpecialFolder folder)

Disassembly:
	0x033C29D4 ADRP X21, 0xD65000
	0x033C29D8 ADRP X26, 0xD64000

ISIL:
	001 Move W1, W31

Method: System.String GetWindowsFolderPath(System.Int32 folder)

Disassembly:
	0x033C2A10 MOV X1, X22

ISIL:
	001 Call 0x1C88EA0
	002 Return X0

Method: System.String GetFolderPath(System.Environment/SpecialFolder folder, System.Environment/SpecialFolderOption option)

Disassembly:
	0x033C29DC LDR W8, [X0 + 0xE0]
	0x033C29E0 LDR X21, [X21 + 0x798]
	0x033C29E4 LDR X26, [X26 + 0xE00]
	0x033C29E8 CBNZ W8, 0x33C29F0
	0x033C29EC BL 0x1C16DFC
	0x033C29F0 ADRP X25, 0xD6A000
	0x033C29F4 LDR X25, [X25 + 0x738]
	0x033C29F8 MOV W0, W31
	0x033C29FC BL 0x33C2CDC
	0x033C2A00 LDR X8, [X21]
	0x033C2A04 MOV X22, X0
	0x033C2A08 MOV X0, X8
	0x033C2A0C BL 0x1C16F10

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W19, W0
	004 Move X0, X31
	005 Call SecurityManager.EnsureElevatedPermissions
	006 Call 0x1C88BC4
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W0, W19
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call 0x1C88EA0
	012 Return X0
	013 Move W0, W19
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Call Environment.UnixGetFolderPath, X0, X1
	017 Return X0

Method: System.String ReadXdgUserDir(System.String config_dir, System.String home_dir, System.String key, System.String fallback)

Disassembly:
	0x033C2EEC ADRP X20, 0x101B000
	0x033C2EF0 ADRP X19, 0xD39000
	0x033C2EF4 LDRB W8, [X20 + 0x22F]
	0x033C2EF8 LDR X19, [X19 + 0x958]
	0x033C2EFC TBNZ X8, 0x0, 0x33C2F14
	0x033C2F00 ADRP X0, 0xD39000
	0x033C2F04 LDR X0, [X0 + 0x958]
	0x033C2F08 BL 0x1C16CF4
	0x033C2F0C MOVZ W8, 0x1
	0x033C2F10 STRB W8, [X20 + 0x22F]
	0x033C2F14 LDR X0, [X19]
	0x033C2F18 LDR W8, [X0 + 0xE0]
	0x033C2F1C CBNZ W8, 0x33C2F28
	0x033C2F20 BL 0x1C16DFC
	0x033C2F24 LDR X0, [X19]
	0x033C2F28 LDR X8, [X0 + 0xB8]
	0x033C2F2C LDP X20, X19, [X31 + 0x10]
	0x033C2F30 LDR X0, [X8]
	0x033C2F34 LDR X30, [X31], #0x20
	0x033C2F38 RET
	0x033C2F3C STP X30, X23, [X31 - 0x30]!
	0x033C2F40 STP X22, X21, [X31 + 0x10]
	0x033C2F44 STP X20, X19, [X31 + 0x20]
	0x033C2F48 ADRP X19, 0x101B000
	0x033C2F4C ADRP X23, 0xD5F000
	0x033C2F50 LDRB W8, [X19 + 0x230]
	0x033C2F54 LDR X23, [X23 + 0x670]
	0x033C2F58 MOV W20, W2
	0x033C2F5C MOV W21, W1
	0x033C2F60 MOV X22, X0
	0x033C2F64 TBNZ X8, 0x0, 0x33C2F88
	0x033C2F68 ADRP X0, 0xD5F000
	0x033C2F6C LDR X0, [X0 + 0x670]
	0x033C2F70 BL 0x1C16CF4
	0x033C2F74 ADRP X0, 0xD38000
	0x033C2F78 LDR X0, [X0 + 0xC10]
	0x033C2F7C BL 0x1C16CF4
	0x033C2F80 MOVZ W8, 0x1
	0x033C2F84 STRB W8, [X19 + 0x230]
	0x033C2F88 LDR X0, [X23]
	0x033C2F8C BL 0x1C16F10
	0x033C2F90 MOV X19, X0
	0x033C2F94 MOVZ W6, 0x1
	0x033C2F98 MOV X1, X22
	0x033C2F9C MOV W2, W21
	0x033C2FA0 MOV W3, W31
	0x033C2FA4 MOV W4, W20
	0x033C2FA8 MOV W5, W31
	0x033C2FAC MOV X7, X31
	0x033C2FB0 BL 0x32F7E64
	0x033C2FB4 ADRP X8, 0xD38000
	0x033C2FB8 LDR X8, [X8 + 0xC10]
	0x033C2FBC LDR X0, [X8]
	0x033C2FC0 LDR W8, [X0 + 0xE0]
	0x033C2FC4 CBNZ W8, 0x33C2FCC
	0x033C2FC8 BL 0x1C16DFC
	0x033C2FCC MOV X0, X19
	0x033C2FD0 MOV X1, X31
	0x033C2FD4 BL 0x33B3E9C
	0x033C2FD8 MOV X0, X19
	0x033C2FDC LDP X20, X19, [X31 + 0x20]
	0x033C2FE0 LDP X22, X21, [X31 + 0x10]
	0x033C2FE4 LDP X30, X23, [X31], #0x30
	0x033C2FE8 RET
	0x033C2FEC B 0x33C2FF0
	0x033C2FF0 MOV X19, X0
	0x033C2FF4 CMP W1, 0x1
	0x033C2FF8 B.NE 0x33C3080
	0x033C2FFC MOV X0, X19
	0x033C3000 BL 0x3EB1AD0
	0x033C3004 MOV X19, X0
	0x033C3008 ADRP X0, 0xD5E000
	0x033C300C LDR X0, [X0 + 0x7A8]
	0x033C3010 BL 0x1C16D08
	0x033C3014 LDR X8, [X19]
	0x033C3018 LDR X1, [X8]
	0x033C301C BL 0x1C17270
	0x033C3020 TBZ X0, 0x0, 0x33C3058
	0x033C3024 BL 0x3EB1AE0
	0x033C3028 ADRP X0, 0xD5F000
	0x033C302C LDR X0, [X0 + 0xD10]
	0x033C3030 BL 0x1C16D08
	0x033C3034 LDR W8, [X0 + 0xE0]
	0x033C3038 CBNZ W8, 0x33C3040
	0x033C303C BL 0x1C16DFC
	0x033C3040 ADRP X0, 0xD5F000
	0x033C3044 LDR X0, [X0 + 0xD10]
	0x033C3048 BL 0x1C16D08
	0x033C304C LDR X8, [X0 + 0xB8]
	0x033C3050 LDR X19, [X8]
	0x033C3054 B 0x33C2FD8
	0x033C3058 MOVZ W0, 0x8
	0x033C305C BL 0x3EB1AF0
	0x033C3060 LDR X8, [X19]
	0x033C3064 STR X8, [X0]
	0x033C3068 ADRP X1, 0xAF1000
	0x033C306C ADD X1, X1, 0xE58
	0x033C3070 MOV X2, X31
	0x033C3074 BL 0x3EB1B00
	0x033C3078 MOV X19, X0
	0x033C307C BL 0x3EB1AE0
	0x033C3080 MOV X0, X19
	0x033C3084 BL 0x1D2C690
	0x033C3088 BL 0x1990590
	0x033C308C STR X30, [X31 - 0x20]!
	0x033C3090 STP X20, X19, [X31 + 0x10]
	0x033C3094 ADRP X20, 0x101A000
	0x033C3098 LDRB W8, [X20 + 0x234]
	0x033C309C MOV X19, X0
	0x033C30A0 TBNZ X8, 0x0, 0x33C30C4
	0x033C30A4 ADRP X0, 0xD38000
	0x033C30A8 LDR X0, [X0 + 0x958]
	0x033C30AC BL 0x1C16CF4
	0x033C30B0 ADRP X0, 0xD63000
	0x033C30B4 LDR X0, [X0 + 0xE70]
	0x033C30B8 BL 0x1C16CF4
	0x033C30BC MOVZ W8, 0x1
	0x033C30C0 STRB W8, [X20 + 0x234]
	0x033C30C4 CBZ X19, 0x33C3124
	0x033C30C8 ADRP X8, 0xD63000
	0x033C30CC LDR X8, [X8 + 0xE70]
	0x033C30D0 ADRP X20, 0xD38000
	0x033C30D4 LDR X0, [X8]
	0x033C30D8 LDR W8, [X0 + 0xE0]
	0x033C30DC LDR X20, [X20 + 0x958]
	0x033C30E0 CBNZ W8, 0x33C30E8
	0x033C30E4 BL 0x1C16DFC
	0x033C30E8 MOV X0, X19
	0x033C30EC MOV X1, X31
	0x033C30F0 BL 0x32EA0DC
	0x033C30F4 LDR X8, [X20]
	0x033C30F8 MOV X19, X0
	0x033C30FC LDR W9, [X8 + 0xE0]
	0x033C3100 CBNZ W9, 0x33C3110
	0x033C3104 MOV X0, X8
	0x033C3108 BL 0x1C16DFC
	0x033C310C LDR X8, [X20]
	0x033C3110 LDR X8, [X8 + 0xB8]
	0x033C3114 STR X19, [X8 + 0x8]
	0x033C3118 LDP X20, X19, [X31 + 0x10]
	0x033C311C LDR X30, [X31], #0x20
	0x033C3120 RET
	0x033C3124 ADRP X0, 0xD35000
	0x033C3128 LDR X0, [X0 + 0x528]
	0x033C312C BL 0x1C16D08
	0x033C3130 BL 0x1C16F10
	0x033C3134 MOV X19, X0
	0x033C3138 ADRP X0, 0xD69000
	0x033C313C LDR X0, [X0 + 0x740]
	0x033C3140 BL 0x1C16D08
	0x033C3144 MOV X1, X0
	0x033C3148 MOV X0, X19
	0x033C314C MOV X2, X31
	0x033C3150 BL 0x330E100
	0x033C3154 ADRP X0, 0xD69000
	0x033C3158 LDR X0, [X0 + 0x748]
	0x033C315C BL 0x1C16D08
	0x033C3160 MOV X1, X0
	0x033C3164 MOV X0, X19
	0x033C3168 BL 0x1C16DEC
	0x033C316C STR X30, [X31 - 0x20]!
	0x033C3170 STP X20, X19, [X31 + 0x10]
	0x033C3174 ADRP X20, 0x101A000
	0x033C3178 LDRB W8, [X20 + 0x235]
	0x033C317C MOV X19, X0
	0x033C3180 TBNZ X8, 0x0, 0x33C31A4
	0x033C3184 ADRP X0, 0xD38000
	0x033C3188 LDR X0, [X0 + 0x958]
	0x033C318C BL 0x1C16CF4
	0x033C3190 ADRP X0, 0xD63000
	0x033C3194 LDR X0, [X0 + 0xE70]
	0x033C3198 BL 0x1C16CF4
	0x033C319C MOVZ W8, 0x1
	0x033C31A0 STRB W8, [X20 + 0x235]
	0x033C31A4 CBZ X19, 0x33C3204
	0x033C31A8 ADRP X8, 0xD63000
	0x033C31AC LDR X8, [X8 + 0xE70]
	0x033C31B0 ADRP X20, 0xD38000
	0x033C31B4 LDR X0, [X8]
	0x033C31B8 LDR W8, [X0 + 0xE0]
	0x033C31BC LDR X20, [X20 + 0x958]
	0x033C31C0 CBNZ W8, 0x33C31C8
	0x033C31C4 BL 0x1C16DFC
	0x033C31C8 MOV X0, X19
	0x033C31CC MOV X1, X31
	0x033C31D0 BL 0x32EA0DC
	0x033C31D4 LDR X8, [X20]
	0x033C31D8 MOV X19, X0
	0x033C31DC LDR W9, [X8 + 0xE0]
	0x033C31E0 CBNZ W9, 0x33C31F0
	0x033C31E4 MOV X0, X8
	0x033C31E8 BL 0x1C16DFC
	0x033C31EC LDR X8, [X20]
	0x033C31F0 LDR X8, [X8 + 0xB8]
	0x033C31F4 STR X19, [X8]
	0x033C31F8 LDP X20, X19, [X31 + 0x10]
	0x033C31FC LDR X30, [X31], #0x20
	0x033C3200 RET
	0x033C3204 ADRP X0, 0xD35000
	0x033C3208 LDR X0, [X0 + 0x528]
	0x033C320C BL 0x1C16D08
	0x033C3210 BL 0x1C16F10
	0x033C3214 MOV X19, X0
	0x033C3218 ADRP X0, 0xD69000
	0x033C321C LDR X0, [X0 + 0x750]
	0x033C3220 BL 0x1C16D08
	0x033C3224 MOV X1, X0
	0x033C3228 MOV X0, X19
	0x033C322C MOV X2, X31
	0x033C3230 BL 0x330E100
	0x033C3234 ADRP X0, 0xD69000
	0x033C3238 LDR X0, [X0 + 0x758]
	0x033C323C BL 0x1C16D08
	0x033C3240 MOV X1, X0
	0x033C3244 MOV X0, X19
	0x033C3248 BL 0x1C16DEC
	0x033C324C STP X30, X21, [X31 - 0x20]!
	0x033C3250 STP X20, X19, [X31 + 0x10]
	0x033C3254 ADRP X21, 0x101A000
	0x033C3258 ADRP X20, 0xD38000
	0x033C325C LDRB W8, [X21 + 0x236]
	0x033C3260 LDR X20, [X20 + 0x958]
	0x033C3264 MOV X19, X0
	0x033C3268 TBNZ X8, 0x0, 0x33C3280
	0x033C326C ADRP X0, 0xD38000
	0x033C3270 LDR X0, [X0 + 0x958]
	0x033C3274 BL 0x1C16CF4
	0x033C3278 MOVZ W8, 0x1
	0x033C327C STRB W8, [X21 + 0x236]
	0x033C3280 LDR X0, [X20]
	0x033C3284 LDR W8, [X0 + 0xE0]
	0x033C3288 CBNZ W8, 0x33C3294
	0x033C328C BL 0x1C16DFC
	0x033C3290 LDR X0, [X20]
	0x033C3294 LDR X8, [X0 + 0xB8]
	0x033C3298 LDR X0, [X8]
	0x033C329C CBZ X0, 0x33C32BC
	0x033C32A0 LDR X8, [X0]
	0x033C32A4 MOV X1, X19
	0x033C32A8 LDP X20, X19, [X31 + 0x10]
	0x033C32AC LDR X3, [X8 + 0x248]
	0x033C32B0 LDR X2, [X8 + 0x250]
	0x033C32B4 LDP X30, X21, [X31], #0x20
	0x033C32B8 BR X3
	0x033C32BC BL 0x1C16F20
	0x033C32C0 STR X30, [X31 - 0x20]!
	0x033C32C4 STP X20, X19, [X31 + 0x10]
	0x033C32C8 ADRP X20, 0x101A000
	0x033C32CC ADRP X19, 0xD38000
	0x033C32D0 LDRB W8, [X20 + 0x237]
	0x033C32D4 LDR X19, [X19 + 0x958]
	0x033C32D8 TBNZ X8, 0x0, 0x33C32F0
	0x033C32DC ADRP X0, 0xD38000
	0x033C32E0 LDR X0, [X0 + 0x958]
	0x033C32E4 BL 0x1C16CF4
	0x033C32E8 MOVZ W8, 0x1
	0x033C32EC STRB W8, [X20 + 0x237]
	0x033C32F0 LDR X0, [X19]
	0x033C32F4 LDR W8, [X0 + 0xE0]
	0x033C32F8 CBNZ W8, 0x33C3304
	0x033C32FC BL 0x1C16DFC
	0x033C3300 LDR X0, [X19]
	0x033C3304 LDR X8, [X0 + 0xB8]
	0x033C3308 LDR X0, [X8]
	0x033C330C CBZ X0, 0x33C3328
	0x033C3310 LDR X8, [X0]
	0x033C3314 LDP X20, X19, [X31 + 0x10]
	0x033C3318 LDR X2, [X8 + 0x258]
	0x033C331C LDR X1, [X8 + 0x260]
	0x033C3320 LDR X30, [X31], #0x20
	0x033C3324 BR X2
	0x033C3328 BL 0x1C16F20
	0x033C332C STP X30, X21, [X31 - 0x20]!
	0x033C3330 STP X20, X19, [X31 + 0x10]
	0x033C3334 ADRP X21, 0x101A000
	0x033C3338 ADRP X20, 0xD38000
	0x033C333C LDRB W8, [X21 + 0x238]
	0x033C3340 LDR X20, [X20 + 0x958]
	0x033C3344 MOV W19, W0
	0x033C3348 TBNZ X8, 0x0, 0x33C3360
	0x033C334C ADRP X0, 0xD38000
	0x033C3350 LDR X0, [X0 + 0x958]
	0x033C3354 BL 0x1C16CF4
	0x033C3358 MOVZ W8, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0x101C000
	010 Move W8, [X23+553]
	011 Move X19, X3
	012 Move X22, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {42}
	019 Move X0, 0xD32000
	020 Move X0, [X0+3584]
	021 Call 0x1C17CF4
	022 Move X0, 0xD59000
	023 Move X0, [X0+464]
	024 Call 0x1C17CF4
	025 Move X0, 0xD61000
	026 Move X0, [X0+3272]
	027 Call 0x1C17CF4
	028 Move X0, 0xD34000
	029 Move X0, [X0+632]
	030 Call 0x1C17CF4
	031 Move X0, 0xD6B000
	032 Move X0, [X0+1776]
	033 Call 0x1C17CF4
	034 Move X0, 0xD6B000
	035 Move X0, [X0+1784]
	036 Call 0x1C17CF4
	037 Move X0, 0xD33000
	038 Move X0, [X0+3784]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X23+553], W8
	042 Move X0, X22
	043 Call Environment.internalGetEnvironmentVariable, X0
	044 Compare X0, 0
	045 JumpIfEqual {58}
	046 Move X8, 0xD34000
	047 Move X8, [X8+632]
	048 Move X2, X31
	049 Move X23, X0
	050 Move X8, [X8]
	051 Move X8, [X8+184]
	052 Move X1, [X8]
	053 Call String.op_Inequality, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {218}
	058 Move X25, 0xD59000
	059 Move X25, [X25+464]
	060 Move X23, 0xD6B000
	061 Move X0, [X25]
	062 Move W8, [X0+224]
	063 Move X23, [X23+1784]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X1, [X23]
	068 Move X0, X21
	069 Move X2, X31
	070 Call Path.Combine, X0, X1
	071 Move X1, X31
	072 Move X23, X0
	073 Call File.Exists, X0
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {200}
	078 Move X8, 0xD61000
	079 Move X8, [X8+3272]
	080 Move X0, [X8]
	081 Call 0x1C17F10
	082 Move X21, X0
	083 Move X1, X23
	084 Move X2, X31
	085 Call StreamReader..ctor, X0, X1
	086 Compare X21, 0
	087 JumpIfEqual {229}
	088 Move X8, [X21]
	089 Move X9, [X8+504]
	090 Move X1, [X8+512]
	091 Move X0, X21
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Compare X0, 0
	094 JumpIfEqual {145}
	095 Move X1, X31
	096 Call String.Trim, X0
	097 Move X23, X0
	098 Compare X0, 0
	099 JumpIfEqual {228}
	100 Move W1, 61
	101 Move X0, X23
	102 Move X2, X31
	103 Call String.IndexOf, X0, X1
	104 Move W24, W0
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X0, X23
	107 Move W1, W31
	108 Move W2, W24
	109 Move X3, X31
	110 Call String.Substring, X0, X1, X2
	111 Move X1, X22
	112 Move X2, X31
	113 Call String.op_Equality, X0, X1
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {88}
	118 Add W1, W24, 1
	119 Move X0, X23
	120 Move X2, X31
	121 Call String.Substring, X0, X1
	122 Compare X0, 0
	123 JumpIfEqual {232}
	124 Move W1, 34
	125 Move X2, X31
	126 Call String.Trim, X0, X1
	127 Move X23, X0
	128 Compare X0, 0
	129 JumpIfEqual {233}
	130 Move X8, 0xD6A000
	131 Move X8, [X8+1776]
	132 Move X1, [X8]
	133 Move X0, X23
	134 Move X2, X31
	135 Call String.StartsWithOrdinalUnchecked, X0, X1
	136 Move TEMP, X0
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfNotEqual {148}
	140 Move W1, 6
	141 Move X0, X23
	142 Move X2, X31
	143 Call String.Substring, X0, X1
	144 Move X23, X0
	145 Move X23, X31
	146 Move X22, X31
	147 Move W24, 11
	148 Move X8, 0xD32000
	149 Move X8, [X8+3784]
	150 Move X1, [X8]
	151 Move X0, X23
	152 Move X2, X31
	153 Call String.StartsWithOrdinalUnchecked, X0, X1
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfEqual {168}
	158 Move X0, [X25]
	159 Move W8, [X0+224]
	160 Compare W8, 0
	161 JumpIfNotEqual {163}
	162 Call 0x1C17DFC
	163 Move X0, X20
	164 Move X1, X23
	165 Move X2, X31
	166 Call Path.Combine, X0, X1
	167 Move X23, X0
	168 Move X22, X31
	169 Move W24, 10
	170 Compare X21, 0
	171 JumpIfEqual {195}
	172 Move X10, 0xD31000
	173 Move X8, [X21]
	174 Move X10, [X10+3584]
	175 NotImplemented "Instruction LDRH not yet implemented."
	176 Move X1, [X10]
	177 Compare X9, 0
	178 JumpIfEqual {185}
	179 Move X10, [X8+176]
	180 Add X10, X10, 8
	181 NotImplemented "Instruction LDUR not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Subtract X9, X9, 1
	184 Add X10, X10, 16
	185 Move X0, X21
	186 Move W2, W31
	187 Call 0x1C5D788
	188 NotImplemented "Instruction LDRSW not yet implemented."
	189 Add X8, X8, X9
	190 Add X0, X8, 312
	191 Move X8, [X0]
	192 Move X1, [X0+8]
	193 Move X0, X21
	194 NotImplemented "Instruction BLR not yet implemented."
	195 Compare X22, 0
	196 JumpIfNotEqual {230}
	197 Compare W24, 0
	198 JumpIfEqual {200}
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move X0, [X25]
	201 Move W8, [X0+224]
	202 Compare W8, 0
	203 JumpIfNotEqual {205}
	204 Call 0x1C17DFC
	205 Move X0, X20
	206 Move X1, X19
	207 Move X20, [X31+48]
	208 Move X19, [X31+56]
	209 Move X22, [X31+32]
	210 Move X21, [X31+40]
	211 Move X24, [X31+16]
	212 Move X23, [X31+24]
	213 Move X2, X31
	214 Move X30, [X31+64]
	215 Move X25, [X31+72]
	216 Call Path.Combine, X0, X1
	217 Return X0
	218 Move X0, X23
	219 Move X20, [X31+48]
	220 Move X19, [X31+56]
	221 Move X22, [X31+32]
	222 Move X21, [X31+40]
	223 Move X24, [X31+16]
	224 Move X23, [X31+24]
	225 Move X30, [X31+64]
	226 Move X25, [X31+72]
	227 Return X0
	228 Call 0x1C17F20
	229 Call 0x1C17F20
	230 Move X0, X22
	231 Call 0x1C17F18
	232 Call 0x1C17F20
	233 Call 0x1C17F20
	234 Move X24, X1
	235 Move X23, X0
	236 Move X24, X1
	237 Move X23, X0
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Move X0, X23
	240 Call 0x3EB2AD0
	241 Move X22, [X0]
	242 Call 0x3EB2AE0
	243 Move W24, W31
	244 Move X23, X31
	245 Compare X21, 0
	246 JumpIfNotEqual {172}
	247 Move X22, X31
	248 Compare X21, 0
	249 JumpIfEqual {273}
	250 Move X10, 0xD31000
	251 Move X8, [X21]
	252 Move X10, [X10+3584]
	253 NotImplemented "Instruction LDRH not yet implemented."
	254 Move X1, [X10]
	255 Compare X9, 0
	256 JumpIfEqual {263}
	257 Move X10, [X8+176]
	258 Add X10, X10, 8
	259 NotImplemented "Instruction LDUR not yet implemented."
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Subtract X9, X9, 1
	262 Add X10, X10, 16
	263 Move X0, X21
	264 Move W2, W31
	265 Call 0x1C5D788
	266 NotImplemented "Instruction LDRSW not yet implemented."
	267 Add X8, X8, X9
	268 Add X0, X8, 312
	269 Move X8, [X0]
	270 Move X1, [X0+8]
	271 Move X0, X21
	272 NotImplemented "Instruction BLR not yet implemented."
	273 Compare X22, 0
	274 JumpIfNotEqual {298}
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Move X0, X23
	277 Call 0x3EB2AD0
	278 Move X21, X0
	279 Move X0, 0xD37000
	280 Move X0, [X0+3264]
	281 Call 0x1C17D08
	282 Move X8, [X21]
	283 Move X1, [X8]
	284 Call 0x1C18270
	285 Move TEMP, X0
	286 And TEMP, TEMP, 1
	287 Compare TEMP, 1
	288 JumpIfNotEqual {290}
	289 Call 0x3EB2AE0
	290 Move W0, 8
	291 Call 0x3EB2AF0
	292 Move X8, [X21]
	293 Move [X0], X8
	294 Move X1, 0xAF2000
	295 Add X1, X1, 3672
	296 Move X2, X31
	297 Call 0x3EB2B00
	298 Move X0, X22
	299 Call 0x1C17F18
	300 Move X24, X1
	301 Move X23, X0
	302 Compare X21, 0
	303 JumpIfNotEqual {250}
	304 Move X23, X0
	305 Call 0x3EB2AE0
	306 Move X0, X23
	307 Call 0x1D2D690
	308 Call 0x1991590

Method: System.String UnixGetFolderPath(System.Environment/SpecialFolder folder, System.Environment/SpecialFolderOption option)

Disassembly:
	0x033C2A2C CBNZ W8, 0x33C2A34
	0x033C2A30 BL 0x1C16DFC
	0x033C2A34 MOV X0, X21
	0x033C2A38 MOV X1, X31
	0x033C2A3C BL 0x32E9978
	0x033C2A40 LDR X8, [X23]
	0x033C2A44 LDR X8, [X8 + 0xB8]
	0x033C2A48 STR X0, [X8 + 0x10]
	0x033C2A4C MOV W0, W31
	0x033C2A50 BL 0x33C2D6C
	0x033C2A54 LDR X8, [X25]
	0x033C2A58 MOV X21, X0
	0x033C2A5C MOV X0, X8
	0x033C2A60 BL 0x1C16F10
	0x033C2A64 MOV X1, X21
	0x033C2A68 MOV X2, X19
	0x033C2A6C MOV X3, X31
	0x033C2A70 MOV X20, X0
	0x033C2A74 BL 0x32FFF4C
	0x033C2A78 CBZ X20, 0x33C2B98
	0x033C2A7C LDR X8, [X20]
	0x033C2A80 MOVZ W1, 0x1
	0x033C2A84 MOV X0, X20
	0x033C2A88 LDR X9, [X8 + 0x288]
	0x033C2A8C LDR X2, [X8 + 0x290]
	0x033C2A90 BLR X9
	0x033C2A94 LDR X0, [X24]
	0x033C2A98 LDR W8, [X0 + 0xE0]
	0x033C2A9C CBNZ W8, 0x33C2AA4
	0x033C2AA0 BL 0x1C16DFC
	0x033C2AA4 MOV X0, X20
	0x033C2AA8 MOV X1, X31
	0x033C2AAC BL 0x32EA0DC
	0x033C2AB0 LDR X8, [X23]
	0x033C2AB4 LDR X8, [X8 + 0xB8]
	0x033C2AB8 STR X0, [X8]
	0x033C2ABC MOV W0, W31
	0x033C2AC0 BL 0x33C2DFC
	0x033C2AC4 LDR X8, [X25]
	0x033C2AC8 MOV X21, X0
	0x033C2ACC MOV X0, X8
	0x033C2AD0 BL 0x1C16F10
	0x033C2AD4 MOV X1, X21
	0x033C2AD8 MOV X2, X19
	0x033C2ADC MOV X3, X31
	0x033C2AE0 MOV X20, X0
	0x033C2AE4 BL 0x32FFF4C
	0x033C2AE8 CBZ X20, 0x33C2B98
	0x033C2AEC LDR X8, [X20]
	0x033C2AF0 MOVZ W1, 0x1
	0x033C2AF4 MOV X0, X20
	0x033C2AF8 LDR X9, [X8 + 0x288]
	0x033C2AFC LDR X2, [X8 + 0x290]
	0x033C2B00 BLR X9
	0x033C2B04 ADRP X19, 0xD38000
	0x033C2B08 LDR X19, [X19 + 0xC10]
	0x033C2B0C MOV X0, X20
	0x033C2B10 MOV X1, X31
	0x033C2B14 BL 0x32EA0DC
	0x033C2B18 LDR X8, [X23]
	0x033C2B1C LDR X9, [X8 + 0xB8]
	0x033C2B20 STR X0, [X9 + 0x8]
	0x033C2B24 LDR W9, [X8 + 0xE0]
	0x033C2B28 CBNZ W9, 0x33C2B38
	0x033C2B2C MOV X0, X8
	0x033C2B30 BL 0x1C16DFC
	0x033C2B34 LDR X8, [X23]
	0x033C2B38 LDR X0, [X19]
	0x033C2B3C LDR X8, [X8 + 0xB8]
	0x033C2B40 LDR W9, [X0 + 0xE0]
	0x033C2B44 LDR X19, [X8]
	0x033C2B48 CBNZ W9, 0x33C2B50
	0x033C2B4C BL 0x1C16DFC
	0x033C2B50 MOV X0, X19
	0x033C2B54 MOV X1, X31
	0x033C2B58 BL 0x33B3E9C
	0x033C2B5C LDR X8, [X23]
	0x033C2B60 MOV X1, X31
	0x033C2B64 LDR X8, [X8 + 0xB8]
	0x033C2B68 LDR X0, [X8 + 0x8]
	0x033C2B6C BL 0x33B3E9C
	0x033C2B70 LDR X8, [X23]
	0x033C2B74 LDP X20, X19, [X31 + 0x40]
	0x033C2B78 LDP X22, X21, [X31 + 0x30]
	0x033C2B7C LDP X24, X23, [X31 + 0x20]
	0x033C2B80 LDR X8, [X8 + 0xB8]
	0x033C2B84 LDP X26, X25, [X31 + 0x10]
	0x033C2B88 MOV X1, X31
	0x033C2B8C LDR X0, [X8 + 0x10]
	0x033C2B90 LDR X30, [X31], #0x50
	0x033C2B94 B 0x33B3E9C
	0x033C2B98 BL 0x1C16F20
	0x033C2B9C STP X30, X21, [X31 - 0x20]!
	0x033C2BA0 STP X20, X19, [X31 + 0x10]
	0x033C2BA4 ADRP X19, 0x101B000
	0x033C2BA8 ADRP X20, 0xD65000
	0x033C2BAC LDRB W8, [X19 + 0x263]
	0x033C2BB0 LDR X20, [X20 + 0x7B8]
	0x033C2BB4 TBNZ X8, 0x0, 0x33C2BD8
	0x033C2BB8 ADRP X0, 0xD65000
	0x033C2BBC LDR X0, [X0 + 0x7B8]
	0x033C2BC0 BL 0x1C16CF4
	0x033C2BC4 ADRP X0, 0xD5F000
	0x033C2BC8 LDR X0, [X0 + 0xFA8]
	0x033C2BCC BL 0x1C16CF4
	0x033C2BD0 MOVZ W8, 0x1
	0x033C2BD4 STRB W8, [X19 + 0x263]
	0x033C2BD8 LDR X0, [X20]
	0x033C2BDC LDR W8, [X0 + 0xE0]
	0x033C2BE0 CBNZ W8, 0x33C2BEC
	0x033C2BE4 BL 0x1C16DFC
	0x033C2BE8 LDR X0, [X20]
	0x033C2BEC LDR X8, [X0 + 0xB8]
	0x033C2BF0 LDRB W9, [X8 + 0x9]
	0x033C2BF4 CBZ W9, 0x33C2C1C
	0x033C2BF8 LDR W9, [X0 + 0xE0]
	0x033C2BFC CBNZ W9, 0x33C2C0C
	0x033C2C00 BL 0x1C16DFC
	0x033C2C04 LDR X8, [X20]
	0x033C2C08 LDR X8, [X8 + 0xB8]
	0x033C2C0C LDRB W8, [X8 + 0x8]
	0x033C2C10 CMP W8, 0x0
	0x033C2C14 CSET W19, NE
	0x033C2C18 B 0x33C2CCC
	0x033C2C1C ADRP X21, 0xD5F000
	0x033C2C20 LDR X21, [X21 + 0xFA8]
	0x033C2C24 LDR X0, [X21]
	0x033C2C28 LDR W8, [X0 + 0xE0]
	0x033C2C2C CBNZ W8, 0x33C2C34
	0x033C2C30 BL 0x1C16DFC
	0x033C2C34 MOV X0, X31
	0x033C2C38 BL 0x32FCD5C
	0x033C2C3C LDR X8, [X20]
	0x033C2C40 MOV X19, X0
	0x033C2C44 LDR W9, [X8 + 0xE0]
	0x033C2C48 CBNZ W9, 0x33C2C54
	0x033C2C4C MOV X0, X8
	0x033C2C50 BL 0x1C16DFC
	0x033C2C54 MOV X0, X19
	0x033C2C58 BL 0x1C875C0
	0x033C2C5C TBZ X0, 0x0, 0x33C2CA0
	0x033C2C60 LDR X0, [X21]
	0x033C2C64 LDR W8, [X0 + 0xE0]
	0x033C2C68 CBNZ W8, 0x33C2C70
	0x033C2C6C BL 0x1C16DFC
	0x033C2C70 MOV X0, X31
	0x033C2C74 BL 0x32FCD60
	0x033C2C78 LDR X8, [X20]
	0x033C2C7C MOV X19, X0
	0x033C2C80 LDR W9, [X8 + 0xE0]
	0x033C2C84 CBNZ W9, 0x33C2C90
	0x033C2C88 MOV X0, X8
	0x033C2C8C BL 0x1C16DFC
	0x033C2C90 MOV X0, X19
	0x033C2C94 BL 0x1C875C0
	0x033C2C98 MOV W19, W0
	0x033C2C9C B 0x33C2CA4
	0x033C2CA0 MOV W19, W31
	0x033C2CA4 LDR X0, [X20]
	0x033C2CA8 LDR W8, [X0 + 0xE0]
	0x033C2CAC CBNZ W8, 0x33C2CB8
	0x033C2CB0 BL 0x1C16DFC
	0x033C2CB4 LDR X0, [X20]
	0x033C2CB8 LDR X8, [X0 + 0xB8]
	0x033C2CBC AND W9, W19, 0x1
	0x033C2CC0 MOVZ W10, 0x1
	0x033C2CC4 STRB W9, [X8 + 0x8]
	0x033C2CC8 STRB W10, [X8 + 0x9]
	0x033C2CCC AND W0, W19, 0x1
	0x033C2CD0 LDP X20, X19, [X31 + 0x10]
	0x033C2CD4 LDP X30, X21, [X31], #0x20
	0x033C2CD8 RET
	0x033C2CDC STP X30, X21, [X31 - 0x20]!
	0x033C2CE0 STP X20, X19, [X31 + 0x10]
	0x033C2CE4 ADRP X21, 0x101B000
	0x033C2CE8 ADRP X20, 0xD5F000
	0x033C2CEC LDRB W8, [X21 + 0x232]
	0x033C2CF0 LDR X20, [X20 + 0xFA8]
	0x033C2CF4 MOV W19, W0
	0x033C2CF8 TBNZ X8, 0x0, 0x33C2D1C
	0x033C2CFC ADRP X0, 0xD39000
	0x033C2D00 LDR X0, [X0 + 0x958]
	0x033C2D04 BL 0x1C16CF4
	0x033C2D08 ADRP X0, 0xD5F000
	0x033C2D0C LDR X0, [X0 + 0xFA8]
	0x033C2D10 BL 0x1C16CF4
	0x033C2D14 MOVZ W8, 0x1
	0x033C2D18 STRB W8, [X21 + 0x232]
	0x033C2D1C LDR X0, [X20]
	0x033C2D20 ADRP X20, 0xD39000
	0x033C2D24 LDR W8, [X0 + 0xE0]
	0x033C2D28 LDR X20, [X20 + 0x958]
	0x033C2D2C CBNZ W8, 0x33C2D34
	0x033C2D30 BL 0x1C16DFC
	0x033C2D34 MOV X0, X31
	0x033C2D38 BL 0x32FCD60
	0x033C2D3C LDR X8, [X20]
	0x033C2D40 MOV X20, X0
	0x033C2D44 LDR W9, [X8 + 0xE0]
	0x033C2D48 CBNZ W9, 0x33C2D54
	0x033C2D4C MOV X0, X8
	0x033C2D50 BL 0x1C16DFC
	0x033C2D54 MOV X0, X20
	0x033C2D58 MOV W2, W19
	0x033C2D5C LDP X20, X19, [X31 + 0x10]
	0x033C2D60 MOVZ W1, 0x1
	0x033C2D64 LDP X30, X21, [X31], #0x20
	0x033C2D68 B 0x33C2F3C
	0x033C2D6C STP X30, X21, [X31 - 0x20]!
	0x033C2D70 STP X20, X19, [X31 + 0x10]
	0x033C2D74 ADRP X21, 0x101B000
	0x033C2D78 ADRP X20, 0xD5F000
	0x033C2D7C LDRB W8, [X21 + 0x233]
	0x033C2D80 LDR X20, [X20 + 0xFA8]
	0x033C2D84 MOV W19, W0
	0x033C2D88 TBNZ X8, 0x0, 0x33C2DAC
	0x033C2D8C ADRP X0, 0xD39000
	0x033C2D90 LDR X0, [X0 + 0x958]
	0x033C2D94 BL 0x1C16CF4
	0x033C2D98 ADRP X0, 0xD5F000
	0x033C2D9C LDR X0, [X0 + 0xFA8]
	0x033C2DA0 BL 0x1C16CF4
	0x033C2DA4 MOVZ W8, 0x1
	0x033C2DA8 STRB W8, [X21 + 0x233]
	0x033C2DAC LDR X0, [X20]
	0x033C2DB0 ADRP X20, 0xD39000
	0x033C2DB4 LDR W8, [X0 + 0xE0]
	0x033C2DB8 LDR X20, [X20 + 0x958]
	0x033C2DBC CBNZ W8, 0x33C2DC4
	0x033C2DC0 BL 0x1C16DFC
	0x033C2DC4 MOV X0, X31
	0x033C2DC8 BL 0x32FCD5C
	0x033C2DCC LDR X8, [X20]
	0x033C2DD0 MOV X20, X0
	0x033C2DD4 LDR W9, [X8 + 0xE0]
	0x033C2DD8 CBNZ W9, 0x33C2DE4
	0x033C2DDC MOV X0, X8
	0x033C2DE0 BL 0x1C16DFC
	0x033C2DE4 MOV X0, X20
	0x033C2DE8 MOV W2, W19
	0x033C2DEC LDP X20, X19, [X31 + 0x10]
	0x033C2DF0 MOVZ W1, 0x2
	0x033C2DF4 LDP X30, X21, [X31], #0x20
	0x033C2DF8 B 0x33C2F3C
	0x033C2DFC STP X30, X21, [X31 - 0x20]!
	0x033C2E00 STP X20, X19, [X31 + 0x10]
	0x033C2E04 ADRP X21, 0x101B000
	0x033C2E08 ADRP X20, 0xD5F000
	0x033C2E0C LDRB W8, [X21 + 0x231]
	0x033C2E10 LDR X20, [X20 + 0xFA8]
	0x033C2E14 MOV W19, W0
	0x033C2E18 TBNZ X8, 0x0, 0x33C2E3C
	0x033C2E1C ADRP X0, 0xD39000
	0x033C2E20 LDR X0, [X0 + 0x958]
	0x033C2E24 BL 0x1C16CF4
	0x033C2E28 ADRP X0, 0xD5F000
	0x033C2E2C LDR X0, [X0 + 0xFA8]
	0x033C2E30 BL 0x1C16CF4
	0x033C2E34 MOVZ W8, 0x1
	0x033C2E38 STRB W8, [X21 + 0x231]
	0x033C2E3C LDR X0, [X20]
	0x033C2E40 ADRP X20, 0xD39000
	0x033C2E44 LDR W8, [X0 + 0xE0]
	0x033C2E48 LDR X20, [X20 + 0x958]
	0x033C2E4C CBNZ W8, 0x33C2E54
	0x033C2E50 BL 0x1C16DFC
	0x033C2E54 MOV X0, X31
	0x033C2E58 BL 0x32FCD64
	0x033C2E5C LDR X8, [X20]
	0x033C2E60 MOV X20, X0
	0x033C2E64 LDR W9, [X8 + 0xE0]
	0x033C2E68 CBNZ W9, 0x33C2E74
	0x033C2E6C MOV X0, X8
	0x033C2E70 BL 0x1C16DFC
	0x033C2E74 MOV X0, X20
	0x033C2E78 MOV W2, W19
	0x033C2E7C LDP X20, X19, [X31 + 0x10]
	0x033C2E80 MOVZ W1, 0x2
	0x033C2E84 LDP X30, X21, [X31], #0x20
	0x033C2E88 B 0x33C2F3C
	0x033C2E8C STR X30, [X31 - 0x20]!
	0x033C2E90 STP X20, X19, [X31 + 0x10]
	0x033C2E94 ADRP X20, 0x101B000
	0x033C2E98 ADRP X19, 0xD39000
	0x033C2E9C LDRB W8, [X20 + 0x22E]
	0x033C2EA0 LDR X19, [X19 + 0x958]
	0x033C2EA4 TBNZ X8, 0x0, 0x33C2EBC
	0x033C2EA8 ADRP X0, 0xD39000
	0x033C2EAC LDR X0, [X0 + 0x958]
	0x033C2EB0 BL 0x1C16CF4
	0x033C2EB4 MOVZ W8, 0x1
	0x033C2EB8 STRB W8, [X20 + 0x22E]
	0x033C2EBC LDR X0, [X19]
	0x033C2EC0 LDR W8, [X0 + 0xE0]
	0x033C2EC4 CBNZ W8, 0x33C2ED0
	0x033C2EC8 BL 0x1C16DFC
	0x033C2ECC LDR X0, [X19]
	0x033C2ED0 LDR X8, [X0 + 0xB8]
	0x033C2ED4 LDP X20, X19, [X31 + 0x10]
	0x033C2ED8 LDR X0, [X8 + 0x8]
	0x033C2EDC LDR X30, [X31], #0x20
	0x033C2EE0 RET
	0x033C2EE4 STR X30, [X31 - 0x20]!
	0x033C2EE8 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x101C000
	010 Move X19, 0xD6B000
	011 Move W8, [X21+554]
	012 Move X19, [X19+1592]
	013 Move W20, W0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {95}
	018 Move X0, 0xD59000
	019 Move X0, [X0+464]
	020 Call 0x1C17CF4
	021 Move X0, 0xD34000
	022 Move X0, [X0+632]
	023 Call 0x1C17CF4
	024 Move X0, 0xD6B000
	025 Move X0, [X0+1600]
	026 Call 0x1C17CF4
	027 Move X0, 0xD6B000
	028 Move X0, [X0+1608]
	029 Call 0x1C17CF4
	030 Move X0, 0xD6B000
	031 Move X0, [X0+1616]
	032 Call 0x1C17CF4
	033 Move X0, 0xD6B000
	034 Move X0, [X0+1624]
	035 Call 0x1C17CF4
	036 Move X0, 0xD6B000
	037 Move X0, [X0+1632]
	038 Call 0x1C17CF4
	039 Move X0, 0xD6B000
	040 Move X0, [X0+1640]
	041 Call 0x1C17CF4
	042 Move X0, 0xD66000
	043 Move X0, [X0+1128]
	044 Call 0x1C17CF4
	045 Move X0, 0xD6B000
	046 Move X0, [X0+1648]
	047 Call 0x1C17CF4
	048 Move X0, 0xD6B000
	049 Move X0, [X0+1592]
	050 Call 0x1C17CF4
	051 Move X0, 0xD6B000
	052 Move X0, [X0+1656]
	053 Call 0x1C17CF4
	054 Move X0, 0xD6B000
	055 Move X0, [X0+1664]
	056 Call 0x1C17CF4
	057 Move X0, 0xD6B000
	058 Move X0, [X0+1672]
	059 Call 0x1C17CF4
	060 Move X0, 0xD6B000
	061 Move X0, [X0+1680]
	062 Call 0x1C17CF4
	063 Move X0, 0xD6B000
	064 Move X0, [X0+1688]
	065 Call 0x1C17CF4
	066 Move X0, 0xD6B000
	067 Move X0, [X0+1696]
	068 Call 0x1C17CF4
	069 Move X0, 0xD6B000
	070 Move X0, [X0+1704]
	071 Call 0x1C17CF4
	072 Move X0, 0xD6B000
	073 Move X0, [X0+1712]
	074 Call 0x1C17CF4
	075 Move X0, 0xD6B000
	076 Move X0, [X0+1720]
	077 Call 0x1C17CF4
	078 Move X0, 0xD6B000
	079 Move X0, [X0+1728]
	080 Call 0x1C17CF4
	081 Move X0, 0xD6B000
	082 Move X0, [X0+1736]
	083 Call 0x1C17CF4
	084 Move X0, 0xD6B000
	085 Move X0, [X0+1744]
	086 Call 0x1C17CF4
	087 Move X0, 0xD5A000
	088 Move X0, [X0+1400]
	089 Call 0x1C17CF4
	090 Move X0, 0xD6B000
	091 Move X0, [X0+1752]
	092 Call 0x1C17CF4
	093 Move W8, 1
	094 Move [X21+554], W8
	095 Move X24, 0xD34000
	096 Move X21, 0xD6B000
	097 Move X23, 0xD59000
	098 Move X24, [X24+632]
	099 Move X21, [X21+1720]
	100 Move X23, [X23+464]
	101 Call 0x1C89054
	102 Move X8, [X19]
	103 Move X19, X0
	104 Move X0, X8
	105 Call Environment.internalGetEnvironmentVariable, X0
	106 Compare X0, 0
	107 JumpIfEqual {118}
	108 Move X8, [X24]
	109 Move X2, X31
	110 Move X22, X0
	111 Move X8, [X8+184]
	112 Move X1, [X8]
	113 Call String.op_Equality, X0, X1
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {135}
	118 Move X0, [X23]
	119 Move X25, 0xD6B000
	120 Move X22, 0xD66000
	121 Move W8, [X0+224]
	122 Move X25, [X25+1712]
	123 Move X22, [X22+1128]
	124 Compare W8, 0
	125 JumpIfNotEqual {127}
	126 Call 0x1C17DFC
	127 Move X1, [X25]
	128 Move X0, X19
	129 Move X2, X31
	130 Call Path.Combine, X0, X1
	131 Move X1, [X22]
	132 Move X2, X31
	133 Call Path.Combine, X0, X1
	134 Move X22, X0
	135 Move X0, [X21]
	136 Call Environment.internalGetEnvironmentVariable, X0
	137 Compare X0, 0
	138 JumpIfEqual {149}
	139 Move X8, [X24]
	140 Move X2, X31
	141 Move X21, X0
	142 Move X8, [X8+184]
	143 Move X1, [X8]
	144 Call String.op_Equality, X0, X1
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfNotEqual {161}
	149 Move X0, [X23]
	150 Move X21, 0xD6B000
	151 Move W8, [X0+224]
	152 Move X21, [X21+1648]
	153 Compare W8, 0
	154 JumpIfNotEqual {156}
	155 Call 0x1C17DFC
	156 Move X1, [X21]
	157 Move X0, X19
	158 Move X2, X31
	159 Call Path.Combine, X0, X1
	160 Move X21, X0
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X9, -42119168
	163 Move W8, W20
	164 Add X9, X9, 2312
	165 NotImplemented "Instruction ADR not yet implemented."
	166 Move W11, [X9]
	167 Add X10, X10, X11
	168 CallNoReturn X10
	169 Move X8, [X24]
	170 Move X8, [X8+184]
	171 Move X21, [X8]
	172 Move X0, X21
	173 Move X20, [X31+48]
	174 Move X19, [X31+56]
	175 Move X22, [X31+32]
	176 Move X21, [X31+40]
	177 Move X24, [X31+16]
	178 Move X23, [X31+24]
	179 Move X30, [X31+64]
	180 Move X25, [X31+72]
	181 Return X0
	182 Move X8, 0xD6B000
	183 Move X9, 0xD5A000
	184 Move X8, [X8+1744]
	185 Move X9, [X9+1400]
	186 Move X21, X19
	187 Call 0x1C88BC4
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X0, [X23]
	190 Move W8, [X0+224]
	191 Compare W8, 0
	192 JumpIfNotEqual {194}
	193 Call 0x1C17DFC
	194 Move X8, 0xD6B000
	195 Move X9, 0xD6B000
	196 Move X8, [X8+1600]
	197 Move X9, [X9+1688]
	198 Call 0x1C88BC4
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move X0, [X23]
	201 Move W8, [X0+224]
	202 Compare W8, 0
	203 JumpIfNotEqual {205}
	204 Call 0x1C17DFC
	205 Move X8, 0xD6B000
	206 Move X8, [X8+1704]
	207 Move X8, 0xD6B000
	208 Move X9, 0xD6B000
	209 Move X8, [X8+1736]
	210 Move X9, [X9+1656]
	211 Call 0x1C88BC4
	212 Move X8, [X23]
	213 Move W20, W0
	214 Move W9, [X8+224]
	215 Compare W9, 0
	216 JumpIfNotEqual {219}
	217 Move X0, X8
	218 Call 0x1C17DFC
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move X8, 0xD6B000
	221 Move X9, 0xD6B000
	222 Move X8, [X8+1600]
	223 Move X9, [X9+1680]
	224 Move X8, 0xD6B000
	225 Move X9, 0xD6B000
	226 Move X8, [X8+1624]
	227 Move X9, [X9+1672]
	228 Move X21, X22
	229 Call 0x1C88BC4
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Move X0, [X23]
	232 Move W8, [X0+224]
	233 Compare W8, 0
	234 JumpIfNotEqual {236}
	235 Call 0x1C17DFC
	236 Move X8, 0xD6B000
	237 Move X9, 0xD6B000
	238 Move X8, [X8+1600]
	239 Move X9, [X9+1752]
	240 Move X1, [X8]
	241 Move X2, [X9]
	242 Move X0, X19
	243 Move X20, [X31+48]
	244 Move X19, [X31+56]
	245 Move X22, [X31+32]
	246 Move X21, [X31+40]
	247 Move X24, [X31+16]
	248 Move X23, [X31+24]
	249 Move X3, X31
	250 Move X30, [X31+64]
	251 Move X25, [X31+72]
	252 Call Path.Combine, X0, X1, X2
	253 Return X0
	254 Move X8, 0xD6B000
	255 Move X8, [X8+1640]
	256 Call 0x1C88BC4
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Move X8, 0xD6B000
	259 Move X8, [X8+1664]
	260 Call 0x1C88BC4
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Move X0, [X23]
	263 Move W8, [X0+224]
	264 Compare W8, 0
	265 JumpIfNotEqual {267}
	266 Call 0x1C17DFC
	267 Move X8, 0xD6B000
	268 Move X8, [X8+1608]
	269 Move X8, 0xD6B000
	270 Move X8, [X8+1728]
	271 Move X8, 0xD6B000
	272 Move X9, 0xD6B000
	273 Move X8, [X8+1632]
	274 Move X9, [X9+1704]
	275 Move X8, 0xD6B000
	276 Move X8, [X8+1696]
	277 Move X1, [X8]
	278 Move X0, X19
	279 Move X20, [X31+48]
	280 Move X19, [X31+56]
	281 Move X22, [X31+32]
	282 Move X21, [X31+40]
	283 Move X24, [X31+16]
	284 Move X23, [X31+24]
	285 Move X2, X31
	286 Move X30, [X31+64]
	287 Move X25, [X31+72]
	288 Call Path.Combine, X0, X1
	289 Return X0
	290 Move X8, 0xD6B000
	291 Move X9, 0xD6B000
	292 Move X8, [X8+1616]
	293 Move X9, [X9+1608]
	294 Move X2, [X8]
	295 Move X3, [X9]
	296 Move X0, X21
	297 Move X1, X19
	298 Move X20, [X31+48]
	299 Move X19, [X31+56]
	300 Move X22, [X31+32]
	301 Move X21, [X31+40]
	302 Move X24, [X31+16]
	303 Move X23, [X31+24]
	304 Move X30, [X31+64]
	305 Move X25, [X31+72]
	306 Move X0, 0xD3A000
	307 Move X0, [X0+1400]
	308 Call 0x1C17D08
	309 Call 0x1C17F10
	310 Move X19, X0
	311 Move X0, 0xD6B000
	312 Move X0, [X0+1760]
	313 Call 0x1C17D08
	314 Move X1, X0
	315 Move X0, X19
	316 Move X2, X31
	317 Call ArgumentException..ctor, X0, X1
	318 Move X0, 0xD6B000
	319 Move X0, [X0+1768]
	320 Call 0x1C17D08
	321 Move X1, X0
	322 Move X0, X19
	323 Call 0x1C17DEC

Method: System.Void FailFast(System.String message, System.Exception exception)

Disassembly:
	0x033C3360 LDR X0, [X20]
	0x033C3364 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move X2, X31
	002 Call 0x1C89180
	003 Return 

Method: System.Void FailFast(System.String message, System.Exception exception, System.String errorSource)

Disassembly:
	0x033C3368 CBNZ W8, 0x33C3374

ISIL:
	001 Call 0x1C89180
	002 Return 

Method: System.Int32 get_ProcessorCount()

Disassembly:
	0x033C336C BL 0x1C16DFC

ISIL:
	001 Call 0x1C88BB4
	002 Return X0

Method: System.Boolean get_IsRunningOnWindows()

Disassembly:
	0x033C2A14 MOV X2, X20
	0x033C2A18 MOV X3, X31
	0x033C2A1C MOV X21, X0
	0x033C2A20 BL 0x32FF89C
	0x033C2A24 LDR X0, [X26]
	0x033C2A28 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Call 0x1C88BC4
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Move X30, [X31+16]
	006 Return X0

Method: System.String GetMachineConfigPath()

Disassembly:
	0x033C3370 LDR X0, [X20]

ISIL:
	001 Call 0x1C88CA4
	002 Return X0

Method: System.String internalGetHome()

Disassembly:
	0x033C335C STRB W8, [X21 + 0x238]

ISIL:
	001 Call 0x1C89054
	002 Return X0

Method: System.Int32 GetPageSize()

Disassembly:
	0x033C3374 LDR X8, [X0 + 0xB8]

ISIL:
	001 Call 0x1C88BBC
	002 Return X0

Method: System.Boolean get_IsUnix()

Disassembly:
	0x033C3378 LDR X0, [X8]
	0x033C337C CBZ X0, 0x33C339C
	0x033C3380 LDR X8, [X0]
	0x033C3384 MOV W1, W19
	0x033C3388 LDP X20, X19, [X31 + 0x10]
	0x033C338C LDR X3, [X8 + 0x268]
	0x033C3390 LDR X2, [X8 + 0x270]
	0x033C3394 LDP X30, X21, [X31], #0x20
	0x033C3398 BR X3
	0x033C339C BL 0x1C16F20
	0x033C33A0 STP X30, X21, [X31 - 0x20]!
	0x033C33A4 STP X20, X19, [X31 + 0x10]
	0x033C33A8 ADRP X21, 0x101A000
	0x033C33AC ADRP X20, 0xD38000

ISIL:
	001 Move [X31-16], X30
	002 Call 0x1C88BC4
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move W0, 1
	005 Move X30, [X31+16]
	006 Return X0
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 Or W0, W8, W9
	012 Move X30, [X31+16]
	013 Return X0

Method: System.String GetStackTrace(System.Exception e, System.Boolean needFileInfo)

Disassembly:
	0x033C33B0 LDRB W8, [X21 + 0x239]
	0x033C33B4 LDR X20, [X20 + 0x958]
	0x033C33B8 MOV X19, X0
	0x033C33BC TBNZ X8, 0x0, 0x33C33D4
	0x033C33C0 ADRP X0, 0xD38000
	0x033C33C4 LDR X0, [X0 + 0x958]
	0x033C33C8 BL 0x1C16CF4
	0x033C33CC MOVZ W8, 0x1
	0x033C33D0 STRB W8, [X21 + 0x239]
	0x033C33D4 LDR X0, [X20]
	0x033C33D8 LDR W8, [X0 + 0xE0]
	0x033C33DC CBNZ W8, 0x33C33E8
	0x033C33E0 BL 0x1C16DFC
	0x033C33E4 LDR X0, [X20]
	0x033C33E8 LDR X8, [X0 + 0xB8]
	0x033C33EC LDR X0, [X8]
	0x033C33F0 CBZ X0, 0x33C3410
	0x033C33F4 LDR X8, [X0]
	0x033C33F8 MOV X1, X19
	0x033C33FC LDP X20, X19, [X31 + 0x10]
	0x033C3400 LDR X3, [X8 + 0x278]
	0x033C3404 LDR X2, [X8 + 0x280]
	0x033C3408 LDP X30, X21, [X31], #0x20
	0x033C340C BR X3
	0x033C3410 BL 0x1C16F20
	0x033C3414 STR X30, [X31 - 0x20]!
	0x033C3418 STP X20, X19, [X31 + 0x10]
	0x033C341C ADRP X20, 0x101A000
	0x033C3420 ADRP X19, 0xD38000
	0x033C3424 LDRB W8, [X20 + 0x23A]
	0x033C3428 LDR X19, [X19 + 0x958]
	0x033C342C TBNZ X8, 0x0, 0x33C3444
	0x033C3430 ADRP X0, 0xD38000
	0x033C3434 LDR X0, [X0 + 0x958]
	0x033C3438 BL 0x1C16CF4
	0x033C343C MOVZ W8, 0x1
	0x033C3440 STRB W8, [X20 + 0x23A]
	0x033C3444 LDR X0, [X19]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x101B000
	007 Move X22, 0xD63000
	008 Move W8, [X19+555]
	009 Move X22, [X22+2056]
	010 Move W21, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD63000
	017 Move X0, [X0+2056]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+555], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X19, X0
	024 Compare X20, 0
	025 JumpIfEqual {43}
	026 And W2, W21, 1
	027 Move X0, X19
	028 Move X1, X20
	029 Move X3, X31
	030 Call StackTrace..ctor, X0, X1, X2
	031 Compare X19, 0
	032 JumpIfEqual {49}
	033 Move X0, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move W1, W31
	039 Move X2, X31
	040 Move X30, [X31+48]
	041 Call StackTrace.ToString, X0, X1
	042 Return X0
	043 And W1, W21, 1
	044 Move X0, X19
	045 Move X2, X31
	046 Call StackTrace..ctor, X0, X1
	047 Compare X19, 0
	048 JumpIfNotEqual {33}
	049 Call 0x1C17F20

