Type: System.Array/EmptyInternalEnumerator`1

Method: System.Void Dispose()

Disassembly:
	0x02B4ACA4 LDR X8, [X0 + 0xC0]

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x02B4ACA8 LDR X0, [X8 + 0x10]
	0x02B4ACAC LDRB W8, [X0 + 0x135]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: T get_Current()

Disassembly:
	0x02B4ACB0 TBNZ X8, 0x0, 0x2B4ACB8
	0x02B4ACB4 BL 0x1C5C684
	0x02B4ACB8 BL 0x1C16F10
	0x02B4ACBC LDR X8, [X19 + 0x20]
	0x02B4ACC0 MOV X20, X0
	0x02B4ACC4 LDRB W9, [X8 + 0x135]
	0x02B4ACC8 TBNZ X9, 0x0, 0x2B4ACD4
	0x02B4ACCC MOV X0, X8
	0x02B4ACD0 BL 0x1C5C684
	0x02B4ACD4 MOV X0, X20
	0x02B4ACD8 MOV X1, X31
	0x02B4ACDC BL 0x33BDD8C
	0x02B4ACE0 LDR X0, [X19 + 0x20]
	0x02B4ACE4 LDRB W8, [X0 + 0x135]
	0x02B4ACE8 TBNZ X8, 0x0, 0x2B4ACF0
	0x02B4ACEC BL 0x1C5C684
	0x02B4ACF0 LDR X8, [X0 + 0xC0]
	0x02B4ACF4 LDR X0, [X8 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x15AA000
	005 Move X0, [X0+1456]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X20, X0
	010 Move X0, 0x15D5000
	011 Move X0, [X0+2904]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X20
	015 Move X2, X31
	016 Call InvalidOperationException..ctor, X0, X1
	017 Move X0, X20
	018 Move X1, X19
	019 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x02B4ACF8 LDRB W8, [X0 + 0x135]
	0x02B4ACFC TBNZ X8, 0x0, 0x2B4AD04
	0x02B4AD00 BL 0x1C5C684
	0x02B4AD04 LDR X8, [X0 + 0xB8]
	0x02B4AD08 STR X20, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X1+32]
	003 Move X8, [X8+192]
	004 Move X1, [X8+8]
	005 Call 0x2B4ACB0, X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x02B4AD0C LDR X0, [X19 + 0x20]

ISIL:
	001 Return 

Method: System.Void .ctor()

Disassembly:
	0x02B4AD10 LDRB W8, [X0 + 0x135]
	0x02B4AD14 TBNZ X8, 0x0, 0x2B4AD1C

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x02B4AD18 BL 0x1C5C684
	0x02B4AD1C LDR X8, [X0 + 0xC0]
	0x02B4AD20 LDR X0, [X8 + 0x20]
	0x02B4AD24 LDRB W8, [X0 + 0x135]
	0x02B4AD28 TBNZ X8, 0x0, 0x2B4AD38
	0x02B4AD2C LDP X20, X19, [X31 + 0x10]
	0x02B4AD30 LDR X30, [X31], #0x20
	0x02B4AD34 B 0x1C5C684
	0x02B4AD38 LDP X20, X19, [X31 + 0x10]
	0x02B4AD3C LDR X30, [X31], #0x20
	0x02B4AD40 RET
	0x02B4AD44 RET
	0x02B4AD48 MOV W0, W31
	0x02B4AD4C RET
	0x02B4AD50 STR X30, [X31 - 0x20]!
	0x02B4AD54 STP X20, X19, [X31 + 0x10]
	0x02B4AD58 ADRP X0, 0x15A9000
	0x02B4AD5C LDR X0, [X0 + 0x5B0]
	0x02B4AD60 MOV X19, X1
	0x02B4AD64 BL 0x1C16D08
	0x02B4AD68 BL 0x1C16F10
	0x02B4AD6C MOV X20, X0
	0x02B4AD70 ADRP X0, 0x15D4000
	0x02B4AD74 LDR X0, [X0 + 0xB58]
	0x02B4AD78 BL 0x1C16D08
	0x02B4AD7C MOV X1, X0
	0x02B4AD80 MOV X0, X20
	0x02B4AD84 MOV X2, X31
	0x02B4AD88 BL 0x337DF1C
	0x02B4AD8C MOV X0, X20
	0x02B4AD90 MOV X1, X19
	0x02B4AD94 BL 0x1C16DEC
	0x02B4AD98 STR X30, [X31 - 0x10]!
	0x02B4AD9C LDR X8, [X1 + 0x20]
	0x02B4ADA0 LDR X8, [X8 + 0xC0]
	0x02B4ADA4 LDR X1, [X8 + 0x8]
	0x02B4ADA8 BL 0x2B4AD50
	0x02B4ADAC RET
	0x02B4ADB0 MOV X1, X31
	0x02B4ADB4 B 0x33BDD8C
	0x02B4ADB8 STR X30, [X31 - 0x20]!
	0x02B4ADBC STP X20, X19, [X31 + 0x10]
	0x02B4ADC0 MOV X19, X0
	0x02B4ADC4 LDR X0, [X0 + 0x20]
	0x02B4ADC8 LDRB W8, [X0 + 0x135]
	0x02B4ADCC TBNZ X8, 0x0, 0x2B4ADD4
	0x02B4ADD0 BL 0x1C5C684

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8+16]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Call 0x1C17F10
	021 Move X8, [X19+32]
	022 Move X20, X0
	023 Move W9, [X8+309]
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {30}
	028 Move X0, X8
	029 Call 0x1C5D684
	030 Move X0, X20
	031 Move X1, X31
	032 Call Object..ctor, X0
	033 Move X0, [X19+32]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move X8, [X0+192]
	041 Move X0, [X8+32]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move X8, [X0+184]
	049 Move [X8], X20
	050 Move X0, [X19+32]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Move X8, [X0+192]
	058 Move X0, [X8+32]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {69}
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Call 0x1C5D684
	068 Return 
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Return 

