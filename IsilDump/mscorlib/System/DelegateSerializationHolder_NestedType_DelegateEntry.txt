Type: System.DelegateSerializationHolder/DelegateEntry

Method: System.Void .ctor(System.Delegate del, System.String targetLabel)

Disassembly:
	0x033C75D4 TBZ X0, 0x0, 0x33C7BFC
	0x033C75D8 MOVZ W1, 0x1
	0x033C75DC MOV X0, X19
	0x033C75E0 B 0x33C7B64
	0x033C75E4 MOV W21, W31
	0x033C75E8 ADRP X8, 0xD2C000
	0x033C75EC LDR X8, [X8 + 0x6C0]
	0x033C75F0 LDR X0, [X8]
	0x033C75F4 LDR W8, [X0 + 0xE0]
	0x033C75F8 CBNZ W8, 0x33C7600
	0x033C75FC BL 0x1C16DFC
	0x033C7600 MOV X0, X19
	0x033C7604 MOV X1, X31
	0x033C7608 MOV X2, X31
	0x033C760C BL 0x3395F0C
	0x033C7610 TBZ X0, 0x0, 0x33C762C
	0x033C7614 CBZ X19, 0x33C7900
	0x033C7618 MOV X0, X19
	0x033C761C MOV X1, X31
	0x033C7620 BL 0x339705C
	0x033C7624 AND W8, W0, 0x1
	0x033C7628 B 0x33C7630
	0x033C762C MOV W8, W31
	0x033C7630 ANDS W31, W8, W21, 0x0
	0x033C7634 B.EQ 0x33C7664
	0x033C7638 LDR X0, [X24]
	0x033C763C LDR W8, [X0 + 0xE0]
	0x033C7640 CBNZ W8, 0x33C7648
	0x033C7644 BL 0x1C16DFC
	0x033C7648 MOV X0, X19
	0x033C764C BL 0x33C8130
	0x033C7650 CBZ X0, 0x33C7900
	0x033C7654 LDRB W8, [X0 + 0x15]
	0x033C7658 CMP W8, 0x0
	0x033C765C CSET W8, NE
	0x033C7660 AND W21, W21, W8, 0x0
	0x033C7664 CBZ X20, 0x33C7900
	0x033C7668 ADRP X8, 0xD2C000
	0x033C766C LDR X8, [X8 + 0x5A8]
	0x033C7670 LDR X0, [X8]
	0x033C7674 LDR W8, [X0 + 0xE0]
	0x033C7678 CBNZ W8, 0x33C7680
	0x033C767C BL 0x1C16DFC
	0x033C7680 LDR W0, [X20 + 0x18]
	0x033C7684 MOVZ W1, 0x10
	0x033C7688 MOV X2, X31
	0x033C768C BL 0x337EDF0
	0x033C7690 MOV W24, W0
	0x033C7694 TBZ X21, 0x0, 0x33C7904
	0x033C7698 STR X23, [X31]
	0x033C769C ADRP X8, 0xD65000
	0x033C76A0 LDR X8, [X8 + 0x8F8]
	0x033C76A4 LDR X0, [X8]
	0x033C76A8 BL 0x1C16F10
	0x033C76AC ADRP X8, 0xD65000
	0x033C76B0 LDR X8, [X8 + 0x8F0]
	0x033C76B4 MOV W1, W24
	0x033C76B8 MOV X23, X0
	0x033C76BC LDR X2, [X8]
	0x033C76C0 BL 0x2AA481C
	0x033C76C4 ADRP X8, 0xD31000
	0x033C76C8 LDR X8, [X8 + 0x740]
	0x033C76CC LDR X0, [X8]
	0x033C76D0 BL 0x1C16F10
	0x033C76D4 ADRP X8, 0xD65000
	0x033C76D8 LDR X8, [X8 + 0x908]
	0x033C76DC MOV W1, W24
	0x033C76E0 MOV X22, X0
	0x033C76E4 LDR X2, [X8]
	0x033C76E8 BL 0x301B830
	0x033C76EC ADRP X28, 0xD65000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {94}
	007 Move X19, X0
	008 Move X0, X1
	009 Move X21, X2
	010 Move X20, X1
	011 Call 0x1C26764
	012 Compare X0, 0
	013 JumpIfEqual {94}
	014 Move X8, [X0]
	015 Move X9, [X8+744]
	016 Move X1, [X8+752]
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Move [X19+16], X0
	019 Move X0, X20
	020 Call 0x1C26764
	021 Compare X0, 0
	022 JumpIfEqual {94}
	023 Move X8, [X0]
	024 Move X9, [X8+760]
	025 Move X1, [X8+768]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Compare X0, 0
	028 JumpIfEqual {94}
	029 Move X8, [X0]
	030 Move X9, [X8+440]
	031 Move X1, [X8+448]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move [X19+24], X0
	034 Move [X19+32], X21
	035 Move X8, [X20]
	036 Move X0, X20
	037 Move X9, [X8+440]
	038 Move X1, [X8+448]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Compare X0, 0
	041 JumpIfEqual {94}
	042 Move X8, [X0]
	043 Move X9, [X8+440]
	044 Move X1, [X8+448]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Compare X0, 0
	047 JumpIfEqual {94}
	048 Move X8, [X0]
	049 Move X9, [X8+760]
	050 Move X1, [X8+768]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Compare X0, 0
	053 JumpIfEqual {94}
	054 Move X8, [X0]
	055 Move X9, [X8+440]
	056 Move X1, [X8+448]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move [X19+40], X0
	059 Move X8, [X20]
	060 Move X0, X20
	061 Move X9, [X8+440]
	062 Move X1, [X8+448]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Compare X0, 0
	065 JumpIfEqual {94}
	066 Move X8, [X0]
	067 Move X9, [X8+440]
	068 Move X1, [X8+448]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Compare X0, 0
	071 JumpIfEqual {94}
	072 Move X8, [X0]
	073 Move X9, [X8+744]
	074 Move X1, [X8+752]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move [X19+48], X0
	077 Move X8, [X20]
	078 Move X0, X20
	079 Move X9, [X8+440]
	080 Move X1, [X8+448]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Compare X0, 0
	083 JumpIfEqual {94}
	084 Move X8, [X0]
	085 Move X9, [X8+424]
	086 Move X1, [X8+432]
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move [X19+56], X0
	089 Move X20, [X31+16]
	090 Move X19, [X31+24]
	091 Move X30, [X31+32]
	092 Move X21, [X31+40]
	093 Return 
	094 Call 0x1C17F20

Method: System.Delegate DeserializeDelegate(System.Runtime.Serialization.SerializationInfo info, System.Int32 index)

Disassembly:
	0x033C735C MOV W1, W31
	0x033C7360 MOV X2, X20
	0x033C7364 MOV X5, X31
	0x033C7368 BL 0x339FCE8
	0x033C736C MOV X22, X20
	0x033C7370 MOV X0, X22
	0x033C7374 LDP X20, X19, [X31 + 0x20]
	0x033C7378 LDP X22, X21, [X31 + 0x10]
	0x033C737C LDP X30, X23, [X31], #0x30
	0x033C7380 RET
	0x033C7384 BL 0x1C16F20
	0x033C7388 SUB X31, X31, 0x70
	0x033C738C STP X29, X30, [X31 + 0x10]
	0x033C7390 STP X28, X27, [X31 + 0x20]
	0x033C7394 STP X26, X25, [X31 + 0x30]
	0x033C7398 STP X24, X23, [X31 + 0x40]
	0x033C739C STP X22, X21, [X31 + 0x50]
	0x033C73A0 STP X20, X19, [X31 + 0x60]
	0x033C73A4 ADRP X20, 0x1016000
	0x033C73A8 LDRB W8, [X20 + 0x280]
	0x033C73AC MOV W22, W2
	0x033C73B0 MOV X19, X1
	0x033C73B4 MOV X23, X0
	0x033C73B8 TBNZ X8, 0x0, 0x33C7484
	0x033C73BC ADRP X0, 0xD65000
	0x033C73C0 LDR X0, [X0 + 0x8D8]
	0x033C73C4 BL 0x1C16CF4
	0x033C73C8 ADRP X0, 0xD64000
	0x033C73CC LDR X0, [X0 + 0xD10]
	0x033C73D0 BL 0x1C16CF4
	0x033C73D4 ADRP X0, 0xD65000
	0x033C73D8 LDR X0, [X0 + 0x8E0]
	0x033C73DC BL 0x1C16CF4
	0x033C73E0 ADRP X0, 0xD65000
	0x033C73E4 LDR X0, [X0 + 0x8E8]
	0x033C73E8 BL 0x1C16CF4
	0x033C73EC ADRP X0, 0xD65000
	0x033C73F0 LDR X0, [X0 + 0x8F0]
	0x033C73F4 BL 0x1C16CF4
	0x033C73F8 ADRP X0, 0xD65000
	0x033C73FC LDR X0, [X0 + 0x8F8]
	0x033C7400 BL 0x1C16CF4
	0x033C7404 ADRP X0, 0xD34000
	0x033C7408 LDR X0, [X0 + 0xF18]
	0x033C740C BL 0x1C16CF4
	0x033C7410 ADRP X0, 0xD65000
	0x033C7414 LDR X0, [X0 + 0x900]
	0x033C7418 BL 0x1C16CF4
	0x033C741C ADRP X0, 0xD65000
	0x033C7420 LDR X0, [X0 + 0x908]
	0x033C7424 BL 0x1C16CF4
	0x033C7428 ADRP X0, 0xD31000
	0x033C742C LDR X0, [X0 + 0x730]
	0x033C7430 BL 0x1C16CF4
	0x033C7434 ADRP X0, 0xD31000
	0x033C7438 LDR X0, [X0 + 0x740]
	0x033C743C BL 0x1C16CF4
	0x033C7440 ADRP X0, 0xD2C000
	0x033C7444 LDR X0, [X0 + 0x5A8]
	0x033C7448 BL 0x1C16CF4
	0x033C744C ADRP X0, 0xD65000
	0x033C7450 LDR X0, [X0 + 0x910]
	0x033C7454 BL 0x1C16CF4
	0x033C7458 ADRP X0, 0xD5F000
	0x033C745C LDR X0, [X0 + 0x3E0]
	0x033C7460 BL 0x1C16CF4
	0x033C7464 ADRP X0, 0xD2C000
	0x033C7468 LDR X0, [X0 + 0x9D0]
	0x033C746C BL 0x1C16CF4
	0x033C7470 ADRP X0, 0xD2C000
	0x033C7474 LDR X0, [X0 + 0x6C0]
	0x033C7478 BL 0x1C16CF4
	0x033C747C MOVZ W8, 0x1
	0x033C7480 STRB W8, [X20 + 0x280]
	0x033C7484 STR X31, [X31 + 0x8]
	0x033C7488 CBZ X23, 0x33C7CF4
	0x033C748C ADRP X8, 0xD2C000
	0x033C7490 LDR X8, [X8 + 0x6C0]
	0x033C7494 LDR X0, [X8]
	0x033C7498 LDR W8, [X0 + 0xE0]
	0x033C749C CBNZ W8, 0x33C74A4
	0x033C74A0 BL 0x1C16DFC
	0x033C74A4 MOV X0, X19
	0x033C74A8 MOV X1, X31
	0x033C74AC MOV X2, X31
	0x033C74B0 BL 0x3395194
	0x033C74B4 TBNZ X0, 0x0, 0x33C7D14
	0x033C74B8 ADRP X8, 0xD2C000
	0x033C74BC LDR X8, [X8 + 0x6C0]
	0x033C74C0 ADRP X24, 0xD5F000
	0x033C74C4 LDR X0, [X8]
	0x033C74C8 ADRP X8, 0xD65000
	0x033C74CC LDR X8, [X8 + 0x910]
	0x033C74D0 LDR W9, [X0 + 0xE0]
	0x033C74D4 LDR X20, [X8]
	0x033C74D8 LDR X24, [X24 + 0x3E0]
	0x033C74DC CBNZ W9, 0x33C74E4
	0x033C74E0 BL 0x1C16DFC
	0x033C74E4 MOV X0, X20
	0x033C74E8 MOV X1, X31
	0x033C74EC BL 0x338C698
	0x033C74F0 MOV X1, X0
	0x033C74F4 MOV X0, X19
	0x033C74F8 MOV X2, X31
	0x033C74FC BL 0x3395194
	0x033C7500 LDR X8, [X24]
	0x033C7504 ANDS W31, W0, 0x1
	0x033C7508 CSEL X19, X31, X19, NE
	0x033C750C LDR W9, [X8 + 0xE0]
	0x033C7510 CBNZ W9, 0x33C751C
	0x033C7514 MOV X0, X8
	0x033C7518 BL 0x1C16DFC
	0x033C751C MOV X0, X23
	0x033C7520 MOV X1, X19
	0x033C7524 MOV W2, W31
	0x033C7528 BL 0x33C71E8
	0x033C752C MOV X20, X0
	0x033C7530 TBZ X22, 0x0, 0x33C7558
	0x033C7534 LDR X0, [X24]
	0x033C7538 LDR W8, [X0 + 0xE0]
	0x033C753C CBNZ W8, 0x33C7544
	0x033C7540 BL 0x1C16DFC
	0x033C7544 MOV X0, X23
	0x033C7548 BL 0x33C7D6C
	0x033C754C CMP X0, 0x0
	0x033C7550 CSET W21, NE
	0x033C7554 B 0x33C75E8
	0x033C7558 CBZ X20, 0x33C7900
	0x033C755C LDR W8, [X20 + 0x18]
	0x033C7560 CMP W8, 0x1
	0x033C7564 B.NE 0x33C75E4
	0x033C7568 LDR X8, [X20 + 0x20]
	0x033C756C CBZ X8, 0x33C7CAC
	0x033C7570 ADRP X8, 0xD2C000
	0x033C7574 LDR X8, [X8 + 0x6C0]
	0x033C7578 LDR X0, [X8]
	0x033C757C LDR W8, [X0 + 0xE0]
	0x033C7580 CBNZ W8, 0x33C7588
	0x033C7584 BL 0x1C16DFC
	0x033C7588 MOV X0, X19
	0x033C758C MOV X1, X31
	0x033C7590 MOV X2, X31
	0x033C7594 BL 0x3395F0C
	0x033C7598 LDR W8, [X20 + 0x18]
	0x033C759C CBZ W8, 0x33C7D50
	0x033C75A0 MOV W21, W0
	0x033C75A4 LDR X0, [X20 + 0x20]
	0x033C75A8 CBZ X0, 0x33C7900
	0x033C75AC BL 0x1C25764
	0x033C75B0 MOV X3, X0
	0x033C75B4 TBZ X21, 0x0, 0x33C7B5C
	0x033C75B8 CBZ X19, 0x33C7900
	0x033C75BC LDR X8, [X19]
	0x033C75C0 MOV X0, X19
	0x033C75C4 MOV X1, X3
	0x033C75C8 LDR X9, [X8 + 0x2A8]
	0x033C75CC LDR X2, [X8 + 0x2B0]
	0x033C75D0 BLR X9

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1017000
	009 Move W8, [X21+627]
	010 Move X20, X1
	011 Move X19, X0
	012 Move [X31+12], W2
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0xD66000
	018 Move X0, [X0+2168]
	019 Call 0x1C17CF4
	020 Move X0, 0xD5E000
	021 Move X0, [X0+632]
	022 Call 0x1C17CF4
	023 Move X0, 0xD37000
	024 Move X0, [X0+2408]
	025 Call 0x1C17CF4
	026 Move X0, 0xD2D000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move X0, 0xD2E000
	030 Move X0, [X0+1768]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+627], W8
	034 Move X23, 0xD2D000
	035 Move X0, [X19+32]
	036 Move X23, [X23+1728]
	037 Compare X0, 0
	038 JumpIfEqual {64}
	039 Move X8, [X0]
	040 Move X21, 0xD37000
	041 Move X9, [X8+360]
	042 Move X1, [X8+368]
	043 Move X21, [X21+2408]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X8, [X23]
	046 Move X22, [X21]
	047 Move X21, X0
	048 Move W9, [X8+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Move X0, X22
	054 Move X1, X31
	055 Call Type.GetTypeFromHandle, X0
	056 Compare X20, 0
	057 JumpIfEqual {175}
	058 Move X2, X0
	059 Move X0, X20
	060 Move X1, X21
	061 Move X3, X31
	062 Call SerializationInfo.GetValue, X0, X1, X2
	063 Move X21, X0
	064 Move X21, X31
	065 Move X22, 0xD2E000
	066 Move X24, 0xD66000
	067 Move X22, [X22+1768]
	068 Move X24, [X24+2168]
	069 Add X0, X31, 12
	070 Move X1, X31
	071 Call Int32.ToString, X0
	072 Move X8, [X22]
	073 Move X1, X0
	074 Move X2, X31
	075 Move X0, X8
	076 Call String.Concat, X0, X1
	077 Move X8, [X23]
	078 Move X23, [X24]
	079 Move X22, X0
	080 Move W9, [X8+224]
	081 Compare W9, 0
	082 JumpIfNotEqual {85}
	083 Move X0, X8
	084 Call 0x1C17DFC
	085 Move X0, X23
	086 Move X1, X31
	087 Call Type.GetTypeFromHandle, X0
	088 Compare X20, 0
	089 JumpIfEqual {175}
	090 Move X2, X0
	091 Move X0, X20
	092 Move X1, X22
	093 Move X3, X31
	094 Call SerializationInfo.GetValueNoThrow, X0, X1, X2
	095 Move X20, X0
	096 Compare X0, 0
	097 JumpIfEqual {109}
	098 Move X9, 0xD5E000
	099 Move X9, [X9+632]
	100 Move X8, [X20]
	101 Move X1, [X9]
	102 Move W10, [X8+304]
	103 Move W9, [X1+304]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X8, [X8+200]
	106 Add X8, X8, X9
	107 NotImplemented "Instruction LDUR not yet implemented."
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X0, [X19+24]
	110 Move X1, X31
	111 Call Assembly.Load, X0
	112 Compare X0, 0
	113 JumpIfEqual {175}
	114 Move X8, [X0]
	115 Move X1, [X19+16]
	116 Move X9, [X8+568]
	117 Move X2, [X8+576]
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move X22, X0
	120 Move X0, X20
	121 Move X1, X31
	122 Move X2, X31
	123 Compare X21, 0
	124 JumpIfEqual {136}
	125 Call MethodInfo.op_Equality, X0, X1
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfNotEqual {145}
	130 Move X2, [X19+56]
	131 Move W4, 1
	132 Move X0, X22
	133 Move X1, X21
	134 Move W3, W31
	135 Call Delegate.CreateDelegate, X0, X1, X2, X3, X4
	136 Call MethodInfo.op_Inequality, X0, X1
	137 Move TEMP, X0
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfNotEqual {151}
	141 Move W3, 1
	142 Move W4, 1
	143 Move X0, X22
	144 Move X1, X31
	145 Move W3, 1
	146 Move W4, 1
	147 Move X0, X22
	148 Move X1, X21
	149 Move X2, X20
	150 Call Delegate.CreateDelegate, X0, X1, X2, X3, X4
	151 Move X0, [X19+40]
	152 Move X1, X31
	153 Call Assembly.Load, X0
	154 Compare X0, 0
	155 JumpIfEqual {175}
	156 Move X8, [X0]
	157 Move X1, [X19+48]
	158 Move X9, [X8+568]
	159 Move X2, [X8+576]
	160 NotImplemented "Instruction BLR not yet implemented."
	161 Move X2, [X19+56]
	162 Move X1, X0
	163 Move W4, 1
	164 Move X0, X22
	165 Move W3, W31
	166 Call Delegate.CreateDelegate, X0, X1, X2, X3, X4
	167 Move X20, [X31+48]
	168 Move X19, [X31+56]
	169 Move X22, [X31+32]
	170 Move X21, [X31+40]
	171 Move X24, [X31+16]
	172 Move X23, [X31+24]
	173 Move X30, [X31+64]
	174 Return X0
	175 Call 0x1C17F20
	176 Move X0, X20
	177 Call 0x1C181E0

