Type: System.IO.Stream/<FinishWriteAsync>d__57

Method: System.Void MoveNext()

Disassembly:
	0x032F510C BL 0x1C16CF4
	0x032F5110 ADRP X0, 0xE2D000
	0x032F5114 LDR X0, [X0 + 0x8D0]
	0x032F5118 BL 0x1C16CF4
	0x032F511C MOVZ W8, 0x1
	0x032F5120 STRB W8, [X23 + 0xA62]
	0x032F5124 MOV X0, X19
	0x032F5128 MOV X1, X31
	0x032F512C BL 0x33BDD8C
	0x032F5130 CBZ X22, 0x32F5278
	0x032F5134 CBZ X21, 0x32F5298
	0x032F5138 LDR X8, [X22]
	0x032F513C MOV X0, X22
	0x032F5140 LDP X9, X1, [X8 + 0x1A8]
	0x032F5144 BLR X9
	0x032F5148 TBZ X0, 0x0, 0x32F52E0
	0x032F514C STR X22, [X19 + 0x10]
	0x032F5150 LDR X8, [X21]
	0x032F5154 ADRP X22, 0xDFE000
	0x032F5158 ADRP X23, 0xE2D000
	0x032F515C MOV X0, X21
	0x032F5160 LDR X9, [X8 + 0x338]
	0x032F5164 LDR X1, [X8 + 0x340]
	0x032F5168 LDR X22, [X22 + 0x618]
	0x032F516C LDR X23, [X23 + 0x8D0]
	0x032F5170 BLR X9
	0x032F5174 STR X0, [X19 + 0x20]
	0x032F5178 LDR X8, [X21]
	0x032F517C MOVZ W1, 0x80
	0x032F5180 MOV X0, X21
	0x032F5184 LDR X9, [X8 + 0x368]
	0x032F5188 LDR X2, [X8 + 0x370]
	0x032F518C BLR X9
	0x032F5190 STR W0, [X19 + 0x40]
	0x032F5194 LDR X8, [X21]
	0x032F5198 MOVZ W1, 0x1
	0x032F519C MOV X0, X21
	0x032F51A0 LDR X9, [X8 + 0x358]
	0x032F51A4 LDR X2, [X8 + 0x360]
	0x032F51A8 BLR X9
	0x032F51AC LDR X8, [X22]
	0x032F51B0 CMP W0, 0x10
	0x032F51B4 MOVZ W9, 0x10
	0x032F51B8 CSEL W1, W0, W9, GT
	0x032F51BC MOV X0, X8
	0x032F51C0 BL 0x1C16D6C
	0x032F51C4 STR X0, [X19 + 0x18]
	0x032F51C8 LDR X9, [X21]
	0x032F51CC LDR X8, [X23]
	0x032F51D0 LDRB W11, [X9 + 0x130]
	0x032F51D4 LDRB W10, [X8 + 0x130]
	0x032F51D8 CMP W11, W10
	0x032F51DC B.CS 0x32F51E8
	0x032F51E0 MOV W8, W31
	0x032F51E4 B 0x32F51FC
	0x032F51E8 LDR X9, [X9 + 0xC8]
	0x032F51EC ADD X9, X9, X10, 0x3, LSL
	0x032F51F0 LDUR X9, [X9 - 0x8]
	0x032F51F4 CMP X9, X8
	0x032F51F8 CSET W8, EQ
	0x032F51FC LDR X0, [X19 + 0x10]
	0x032F5200 STRB W8, [X19 + 0x44]
	0x032F5204 CBZ X0, 0x32F5330
	0x032F5208 ADRP X21, 0xE31000
	0x032F520C ADRP X22, 0xDFE000
	0x032F5210 LDR X21, [X21 + 0xCB8]
	0x032F5214 LDR X22, [X22 + 0x6C0]
	0x032F5218 MOV X1, X31
	0x032F521C BL 0x33BE520
	0x032F5220 LDR X8, [X22]
	0x032F5224 LDR X22, [X21]
	0x032F5228 MOV X21, X0
	0x032F522C LDR W9, [X8 + 0xE0]
	0x032F5230 CBNZ W9, 0x32F523C
	0x032F5234 MOV X0, X8
	0x032F5238 BL 0x1C16DFC
	0x032F523C MOV X0, X22
	0x032F5240 MOV X1, X31
	0x032F5244 AND W20, W20, 0x1
	0x032F5248 BL 0x338C698
	0x032F524C MOV X1, X0
	0x032F5250 MOV X0, X21
	0x032F5254 MOV X2, X31
	0x032F5258 BL 0x3395194
	0x032F525C AND W8, W0, 0x1
	0x032F5260 STRB W8, [X19 + 0x45]
	0x032F5264 STRB W20, [X19 + 0x46]
	0x032F5268 LDP X20, X19, [X31 + 0x20]
	0x032F526C LDP X22, X21, [X31 + 0x10]
	0x032F5270 LDP X30, X23, [X31], #0x30
	0x032F5274 RET
	0x032F5278 ADRP X0, 0xE03000
	0x032F527C LDR X0, [X0 + 0x528]
	0x032F5280 BL 0x1C16D08
	0x032F5284 BL 0x1C16F10
	0x032F5288 MOV X19, X0
	0x032F528C ADRP X0, 0xE32000
	0x032F5290 LDR X0, [X0 + 0x348]
	0x032F5294 B 0x32F52B4
	0x032F5298 ADRP X0, 0xE03000
	0x032F529C LDR X0, [X0 + 0x528]
	0x032F52A0 BL 0x1C16D08
	0x032F52A4 BL 0x1C16F10
	0x032F52A8 MOV X19, X0
	0x032F52AC ADRP X0, 0xE2D000
	0x032F52B0 LDR X0, [X0 + 0xB20]
	0x032F52B4 BL 0x1C16D08
	0x032F52B8 MOV X1, X0
	0x032F52BC MOV X0, X19
	0x032F52C0 MOV X2, X31
	0x032F52C4 BL 0x330E100
	0x032F52C8 ADRP X0, 0xE32000
	0x032F52CC LDR X0, [X0 + 0x350]
	0x032F52D0 BL 0x1C16D08
	0x032F52D4 MOV X1, X0
	0x032F52D8 MOV X0, X19
	0x032F52DC BL 0x1C16DEC
	0x032F52E0 ADRP X0, 0xE2D000
	0x032F52E4 LDR X0, [X0 + 0xD28]
	0x032F52E8 BL 0x1C16D08
	0x032F52EC MOV X1, X31
	0x032F52F0 BL 0x33BDD84
	0x032F52F4 MOV X19, X0
	0x032F52F8 ADRP X0, 0xE06000
	0x032F52FC LDR X0, [X0 + 0x578]
	0x032F5300 BL 0x1C16D08
	0x032F5304 BL 0x1C16F10
	0x032F5308 MOV X1, X19
	0x032F530C MOV X2, X31
	0x032F5310 MOV X20, X0
	0x032F5314 BL 0x3314A68
	0x032F5318 ADRP X0, 0xE32000
	0x032F531C LDR X0, [X0 + 0x350]
	0x032F5320 BL 0x1C16D08
	0x032F5324 MOV X1, X0
	0x032F5328 MOV X0, X20
	0x032F532C BL 0x1C16DEC
	0x032F5330 BL 0x1C16F20
	0x032F5334 MOV W3, W31
	0x032F5338 B 0x32F50C4
	0x032F533C LDR X0, [X0 + 0x10]
	0x032F5340 RET
	0x032F5344 LDR X8, [X0]
	0x032F5348 MOVZ W1, 0x1
	0x032F534C LDP X3, X2, [X8 + 0x1A8]
	0x032F5350 BR X3
	0x032F5354 STP X30, X19, [X31 - 0x10]!
	0x032F5358 MOV X19, X0
	0x032F535C TBZ X1, 0x0, 0x32F5384
	0x032F5360 LDR X0, [X19 + 0x10]
	0x032F5364 STR X31, [X19 + 0x10]
	0x032F5368 CBZ X0, 0x32F5384
	0x032F536C LDRB W8, [X19 + 0x46]
	0x032F5370 CBNZ W8, 0x32F5384
	0x032F5374 LDR X8, [X0]
	0x032F5378 LDR X9, [X8 + 0x278]
	0x032F537C LDR X1, [X8 + 0x280]
	0x032F5380 BLR X9

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X20, 0x10E8000
	007 Move W8, [X20+2652]
	008 Move X19, X0
	009 Move [X31+56], X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xE2A000
	015 Move X0, [X0+3408]
	016 Call 0x1C17CF4
	017 Move X0, 0xE2A000
	018 Move X0, [X0+3432]
	019 Call 0x1C17CF4
	020 Move X0, 0xE33000
	021 Move X0, [X0+672]
	022 Call 0x1C17CF4
	023 Move X0, 0xE02000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+2652], W8
	028 Move X21, 0xE02000
	029 Move X21, [X21+640]
	030 Move [X31+32], X31
	031 Move [X31+40], X31
	032 Move W9, [X19]
	033 Add X8, X31, 52
	034 Add X10, X31, 56
	035 Move [X31+8], X31
	036 Move [X31+16], X8
	037 Move [X31+52], W9
	038 Move [X31+24], X10
	039 Compare W9, 0
	040 JumpIfEqual {75}
	041 Move X0, [X19+32]
	042 Compare X0, 0
	043 JumpIfEqual {112}
	044 Move W1, W31
	045 Move X2, X31
	046 Call Task.ConfigureAwait, X0, X1
	047 Move [X31+32], X0
	048 Move [X31+40], X1
	049 Add X0, X31, 32
	050 Move X1, X31
	051 Call ConfiguredTaskAwaiter.get_IsCompleted, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {84}
	056 Move X19, [X31+56]
	057 Move [X31+52], W31
	058 Move [X19], W31
	059 Move V0, [X31+2]
	060 Move X2, X19
	061 Move [X19+3], V0
	062 Move X0, [X21]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {68}
	066 Call 0x1C17DFC
	067 Move X2, [X31+56]
	068 Move X8, 0xE33000
	069 Move X8, [X8+672]
	070 Add X0, X19, 8
	071 Move X3, [X8]
	072 Add X1, X31, 32
	073 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	074 Move W19, 4
	075 Move V0, [X19+3]
	076 Move TEMP, 0
	077 Not TEMP
	078 Move W8, TEMP
	079 Move [X31+2], V0
	080 Move [X19+48], X31
	081 Move [X19+56], X31
	082 Move [X31+52], W8
	083 Move [X19], W8
	084 Add X0, X31, 32
	085 Move X1, X31
	086 Call ConfiguredTaskAwaiter.GetResult, X0
	087 Move W19, 5
	088 Add X0, X31, 8
	089 Call 0x1BB8820
	090 Compare W19, 0
	091 JumpIfEqual {93}
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X19, [X31+56]
	094 Move TEMP, 1
	095 Not TEMP
	096 Move W8, TEMP
	097 Move [X19+8], W8
	098 Move X0, [X21]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Move X0, X19
	104 Move X1, X31
	105 Call AsyncTaskMethodBuilder.SetResult, X0
	106 Move X20, [X31+80]
	107 Move X19, [X31+88]
	108 Move X30, [X31+64]
	109 Move X21, [X31+72]
	110 Add X31, X31, 96
	111 Return 
	112 Call 0x1C17F20
	113 Move X20, X1
	114 Move X19, X0
	115 Move X19, X0
	116 Move W20, W1
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X0, X19
	119 Call 0x3EB2AD0
	120 Move X8, [X0]
	121 Move [X31+8], X8
	122 Call 0x3EB2AE0
	123 Move W19, W31
	124 Move X19, X0
	125 Move W20, W1
	126 Add X0, X31, 8
	127 Call 0x1BB8820
	128 Move W8, 1
	129 Move X19, X0
	130 Move W8, 1
	131 Move W20, W1
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X0, X19
	134 Call 0x3EB2AD0
	135 Move X19, X0
	136 Move X0, 0xDFF000
	137 Move X0, [X0+2000]
	138 Call 0x1C17D08
	139 Move X8, [X19]
	140 Move X1, [X8]
	141 Call 0x1C18270
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfNotEqual {164}
	146 Move X19, [X19]
	147 Call 0x3EB2AE0
	148 Move X20, [X31+56]
	149 Move TEMP, 1
	150 Not TEMP
	151 Move W8, TEMP
	152 Move X0, 0xE02000
	153 Move [X20+8], W8
	154 Move X0, [X0+640]
	155 Call 0x1C17D08
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X0, X20
	161 Move X1, X19
	162 Move X2, X31
	163 Call AsyncTaskMethodBuilder.SetException, X0, X1
	164 Move W0, 8
	165 Call 0x3EB2AF0
	166 Move X8, [X19]
	167 Move [X0], X8
	168 Move X1, 0xBC0000
	169 Add X1, X1, 3672
	170 Move X2, X31
	171 Call 0x3EB2B00
	172 Move X19, X0
	173 Call 0x3EB2AE0
	174 Move X0, X19
	175 Call 0x1D2D690
	176 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x032F5384 MOVI V0.2D, 0x0
	0x032F5388 STP V0, V0, [X19 + 0x20]
	0x032F538C STR V0, [X19 + 0x1]
	0x032F5390 LDP X30, X19, [X31], #0x10
	0x032F5394 RET
	0x032F5398 LDR X8, [X0]
	0x032F539C MOVZ W1, 0x1
	0x032F53A0 LDP X3, X2, [X8 + 0x1A8]
	0x032F53A4 BR X3
	0x032F53A8 STR X30, [X31 - 0x10]!
	0x032F53AC LDR X8, [X0 + 0x10]
	0x032F53B0 CBZ X8, 0x32F53BC
	0x032F53B4 LDR X30, [X31], #0x10
	0x032F53B8 B 0x32F53C0
	0x032F53BC BL 0x32F4810
	0x032F53C0 STP X30, X23, [X31 - 0x30]!
	0x032F53C4 STP X22, X21, [X31 + 0x10]
	0x032F53C8 STP X20, X19, [X31 + 0x20]
	0x032F53CC ADRP X20, 0x10E7000
	0x032F53D0 LDRB W8, [X20 + 0xA67]
	0x032F53D4 MOV X19, X0
	0x032F53D8 TBNZ X8, 0x0, 0x32F53FC
	0x032F53DC ADRP X0, 0xDFE000
	0x032F53E0 LDR X0, [X0 + 0x618]
	0x032F53E4 BL 0x1C16CF4
	0x032F53E8 ADRP X0, 0xE07000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10E8000
	007 Move X22, 0xE02000
	008 Move W8, [X21+2653]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE02000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2653], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

