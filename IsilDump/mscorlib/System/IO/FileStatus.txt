Type: System.IO.FileStatus

Method: System.Boolean get_InitiallyDirectory()

Disassembly:
	0x032EFB5C CBNZ X0, 0x32EFB74
	0x032EFB60 ADRP X8, 0xE06000

ISIL:
	001 Move W0, [X0+116]
	002 Return X0

Method: System.Void set_InitiallyDirectory(System.Boolean value)

Disassembly:
	0x032EFB64 LDR X8, [X8 + 0x278]
	0x032EFB68 LDR X8, [X8]
	0x032EFB6C LDR X8, [X8 + 0xB8]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+116], W8
	003 Return 

Method: System.Void Initialize(ref System.IO.FileStatus status, System.Boolean isDirectory)

Disassembly:
	0x032EFB70 LDR X0, [X8]
	0x032EFB74 LDP X20, X19, [X31 + 0x10]
	0x032EFB78 LDR X30, [X31], #0x20
	0x032EFB7C RET
	0x032EFB80 STP X30, X23, [X31 - 0x30]!

ISIL:
	001 And W8, W1, 1
	002 Move TEMP, 0
	003 Not TEMP
	004 Move W9, TEMP
	005 Move [X0+116], W8
	006 Move [X0+112], W9
	007 Return 

Method: System.Boolean IsReadOnly(System.ReadOnlySpan`1<System.Char> path, System.Boolean continueOnError = False)

Disassembly:
	0x032EFB84 STP X22, X21, [X31 + 0x10]
	0x032EFB88 STP X20, X19, [X31 + 0x20]
	0x032EFB8C ADRP X20, 0x10ED000
	0x032EFB90 ADRP X22, 0xE38000
	0x032EFB94 LDRB W8, [X20 + 0xA23]
	0x032EFB98 LDR X22, [X22 + 0xD8]
	0x032EFB9C MOV X19, X0
	0x032EFBA0 TBNZ X8, 0x0, 0x32EFBDC
	0x032EFBA4 ADRP X0, 0xE33000
	0x032EFBA8 LDR X0, [X0 + 0xE08]
	0x032EFBAC BL 0x1C16CF4
	0x032EFBB0 ADRP X0, 0xE33000
	0x032EFBB4 LDR X0, [X0 + 0xE10]
	0x032EFBB8 BL 0x1C16CF4
	0x032EFBBC ADRP X0, 0xE38000
	0x032EFBC0 LDR X0, [X0 + 0xE0]
	0x032EFBC4 BL 0x1C16CF4
	0x032EFBC8 ADRP X0, 0xE38000
	0x032EFBCC LDR X0, [X0 + 0xD8]
	0x032EFBD0 BL 0x1C16CF4
	0x032EFBD4 MOVZ W8, 0x1
	0x032EFBD8 STRB W8, [X20 + 0xA23]
	0x032EFBDC LDR X0, [X22]
	0x032EFBE0 LDR W8, [X0 + 0xE0]
	0x032EFBE4 CBNZ W8, 0x32EFBF0
	0x032EFBE8 BL 0x1C16DFC
	0x032EFBEC LDR X0, [X22]
	0x032EFBF0 LDR X8, [X0 + 0xB8]
	0x032EFBF4 ADRP X23, 0xE33000
	0x032EFBF8 LDR X20, [X8 + 0x8]
	0x032EFBFC LDR X23, [X23 + 0xE10]
	0x032EFC00 CBNZ X20, 0x32EFC54
	0x032EFC04 LDR W8, [X0 + 0xE0]
	0x032EFC08 CBNZ W8, 0x32EFC14
	0x032EFC0C BL 0x1C16DFC
	0x032EFC10 LDR X0, [X22]
	0x032EFC14 ADRP X9, 0xE33000
	0x032EFC18 LDR X8, [X0 + 0xB8]
	0x032EFC1C LDR X9, [X9 + 0xE08]
	0x032EFC20 LDR X21, [X8]
	0x032EFC24 LDR X0, [X9]
	0x032EFC28 BL 0x1C16F10
	0x032EFC2C ADRP X8, 0xE38000
	0x032EFC30 LDR X8, [X8 + 0xE0]
	0x032EFC34 MOV X1, X21
	0x032EFC38 MOV X3, X31
	0x032EFC3C MOV X20, X0
	0x032EFC40 LDR X2, [X8]
	0x032EFC44 BL 0x2D27AA8
	0x032EFC48 LDR X8, [X22]
	0x032EFC4C LDR X8, [X8 + 0xB8]
	0x032EFC50 STR X20, [X8 + 0x8]
	0x032EFC54 LDR X2, [X23]
	0x032EFC58 ADD X0, X19, 0x20
	0x032EFC5C MOV X1, X20
	0x032EFC60 LDP X20, X19, [X31 + 0x20]
	0x032EFC64 LDP X22, X21, [X31 + 0x10]
	0x032EFC68 LDP X30, X23, [X31], #0x30
	0x032EFC6C B 0x2212A40
	0x032EFC70 MOV W0, W31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x10EE000
	009 Move X23, 0xE30000
	010 Move W8, [X24+2585]
	011 Move X23, [X23+3448]
	012 Move W21, W3
	013 Move X20, X2
	014 Move X22, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xE30000
	021 Move X0, [X0+3448]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+2585], W8
	025 And W3, W21, 1
	026 Move X0, X19
	027 Move X1, X22
	028 Move X2, X20
	029 Call FileStatus.EnsureStatInitialized, X0, X1, X2
	030 Move X0, [X23]
	031 Move W20, [X19+8]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X31
	037 Call Sys.GetEUid
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W9, 256
	040 Move W8, 128
	041 Move X0, [X23]
	042 Move W20, [X19+12]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X31
	048 Call Sys.GetEGid
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W8, 2
	051 Move W9, 16
	052 Move W10, 4
	053 Move W11, 32
	054 NotImplemented "Instruction CSEL not yet implemented."
	055 NotImplemented "Instruction CSEL not yet implemented."
	056 Move W10, [X19+4]
	057 Move X20, [X31+48]
	058 Move X19, [X31+56]
	059 Move X22, [X31+32]
	060 Move X21, [X31+40]
	061 Move X24, [X31+16]
	062 Move X23, [X31+24]
	063 And W31, W10, W9
	064 NotImplemented "Instruction CSET not yet implemented."
	065 And W31, W10, W8
	066 NotImplemented "Instruction CSET not yet implemented."
	067 And W0, W9, W8
	068 Move X30, [X31+64]
	069 Return X0

Method: System.Boolean GetExists(System.ReadOnlySpan`1<System.Char> path)

Disassembly:
	0x032EFD34 MOV X1, X0
	0x032EFD38 MOV X0, X19
	0x032EFD3C MOV X2, X31
	0x032EFD40 BL 0x337DF1C
	0x032EFD44 ADRP X0, 0xE38000
	0x032EFD48 LDR X0, [X0 + 0x100]
	0x032EFD4C BL 0x1C16D08
	0x032EFD50 MOV X1, X0
	0x032EFD54 MOV X0, X19
	0x032EFD58 BL 0x1C16DEC
	0x032EFD5C STP X30, X19, [X31 - 0x10]!
	0x032EFD60 ADRP X0, 0xE04000
	0x032EFD64 LDR X0, [X0 + 0x5B0]
	0x032EFD68 BL 0x1C16D08
	0x032EFD6C BL 0x1C16F10
	0x032EFD70 MOV X19, X0
	0x032EFD74 ADRP X0, 0xE38000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+112]
	004 Move X19, X0
	005 Add W31, W8, 1
	006 Move X0, X19
	007 Call FileStatus.Refresh, X0, X1
	008 Move W8, [X19+118]
	009 Compare W8, 0
	010 JumpIfEqual {15}
	011 Move W8, [X19+116]
	012 Move W9, [X19+117]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction CSET not yet implemented."
	015 Move W0, W31
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Return X0

Method: System.Void Refresh(System.ReadOnlySpan`1<System.Char> path)

Disassembly:
	0x032EFD78 LDR X0, [X0 + 0xE8]
	0x032EFD7C BL 0x1C16D08
	0x032EFD80 MOV X1, X0
	0x032EFD84 MOV X0, X19
	0x032EFD88 MOV X2, X31
	0x032EFD8C BL 0x337DF1C
	0x032EFD90 ADRP X0, 0xE38000
	0x032EFD94 LDR X0, [X0 + 0x108]
	0x032EFD98 BL 0x1C16D08
	0x032EFD9C MOV X1, X0
	0x032EFDA0 MOV X0, X19
	0x032EFDA4 BL 0x1C16DEC
	0x032EFDA8 STR X30, [X31 - 0x20]!
	0x032EFDAC STP X20, X19, [X31 + 0x10]
	0x032EFDB0 MOV X19, X1
	0x032EFDB4 MOV X20, X0
	0x032EFDB8 BL 0x32EFDD4
	0x032EFDBC MOV W2, W0
	0x032EFDC0 MOV X0, X20
	0x032EFDC4 MOV X1, X19
	0x032EFDC8 LDP X20, X19, [X31 + 0x10]
	0x032EFDCC LDR X30, [X31], #0x20
	0x032EFDD0 B 0x32EFE98
	0x032EFDD4 STP X30, X21, [X31 - 0x20]!
	0x032EFDD8 STP X20, X19, [X31 + 0x10]
	0x032EFDDC ADRP X19, 0x10ED000
	0x032EFDE0 LDRB W8, [X19 + 0xA27]
	0x032EFDE4 MOV X20, X0
	0x032EFDE8 TBNZ X8, 0x0, 0x32EFE00
	0x032EFDEC ADRP X0, 0xE04000
	0x032EFDF0 LDR X0, [X0 + 0x5A8]
	0x032EFDF4 BL 0x1C16CF4
	0x032EFDF8 MOVZ W8, 0x1
	0x032EFDFC STRB W8, [X19 + 0xA27]
	0x032EFE00 LDR X8, [X20]
	0x032EFE04 MOVZ W19, 0x4000
	0x032EFE08 MOV X0, X20
	0x032EFE0C MOVK W19, 0x10000
	0x032EFE10 LDP X9, X1, [X8 + 0x1B8]
	0x032EFE14 BLR X9
	0x032EFE18 TBZ X0, 0x0, 0x32EFE88
	0x032EFE1C LDR X8, [X20]
	0x032EFE20 MOV X0, X20
	0x032EFE24 LDP X9, X1, [X8 + 0x1E8]
	0x032EFE28 BLR X9
	0x032EFE2C LDR X8, [X20]
	0x032EFE30 MOV X21, X0
	0x032EFE34 MOV X0, X20
	0x032EFE38 LDP X9, X1, [X8 + 0x1F8]
	0x032EFE3C BLR X9
	0x032EFE40 SUBS X20, X21, X0
	0x032EFE44 B.LE 0x32EFE84
	0x032EFE48 CMP X20, 0x1
	0x032EFE4C B.LT 0x32EFE88
	0x032EFE50 ADRP X8, 0xE04000
	0x032EFE54 LDR X8, [X8 + 0x5A8]
	0x032EFE58 LDR X0, [X8]
	0x032EFE5C LDR W8, [X0 + 0xE0]
	0x032EFE60 CBNZ W8, 0x32EFE68
	0x032EFE64 BL 0x1C16DFC
	0x032EFE68 MOVZ W0, 0x4000
	0x032EFE6C MOVK W0, 0x10000
	0x032EFE70 MOV X1, X20
	0x032EFE74 MOV X2, X31
	0x032EFE78 BL 0x337EEA0
	0x032EFE7C MOV X19, X0
	0x032EFE80 B 0x32EFE88
	0x032EFE84 MOVZ W19, 0x1
	0x032EFE88 MOV W0, W19
	0x032EFE8C LDP X20, X19, [X31 + 0x10]
	0x032EFE90 LDP X30, X21, [X31], #0x20
	0x032EFE94 RET
	0x032EFE98 STP X30, X23, [X31 - 0x30]!
	0x032EFE9C STP X22, X21, [X31 + 0x10]
	0x032EFEA0 STP X20, X19, [X31 + 0x20]
	0x032EFEA4 ADRP X22, 0x10ED000
	0x032EFEA8 ADRP X23, 0xE0C000
	0x032EFEAC LDRB W8, [X22 + 0xA24]
	0x032EFEB0 LDR X23, [X23 + 0x7D8]
	0x032EFEB4 MOV W19, W2
	0x032EFEB8 MOV X20, X1
	0x032EFEBC MOV X21, X0
	0x032EFEC0 TBNZ X8, 0x0, 0x32EFED8
	0x032EFEC4 ADRP X0, 0xE0C000
	0x032EFEC8 LDR X0, [X0 + 0x7D8]
	0x032EFECC BL 0x1C16CF4
	0x032EFED0 MOVZ W8, 0x1
	0x032EFED4 STRB W8, [X22 + 0xA24]
	0x032EFED8 LDR X0, [X23]
	0x032EFEDC LDR W8, [X0 + 0xE0]
	0x032EFEE0 CBNZ W8, 0x32EFEE8
	0x032EFEE4 BL 0x1C16DFC
	0x032EFEE8 MOV X0, X31
	0x032EFEEC BL 0x33DD2A8
	0x032EFEF0 LDR X8, [X21]
	0x032EFEF4 MOV X3, X0
	0x032EFEF8 MOV X0, X21
	0x032EFEFC MOV X1, X20
	0x032EFF00 LDR X5, [X8 + 0x258]
	0x032EFF04 LDR X4, [X8 + 0x260]
	0x032EFF08 MOV W2, W19
	0x032EFF0C LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+136], X23
	004 Move [X31+144], X22
	005 Move [X31+152], X21
	006 Move [X31+160], X20
	007 Move [X31+168], X19
	008 Move X23, 0x10EE000
	009 Move X22, 0xE30000
	010 Move W8, [X23+2586]
	011 Move X22, [X22+3440]
	012 Move X20, X2
	013 Move X21, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xE30000
	020 Move X0, [X0+3440]
	021 Call 0x1C17CF4
	022 Move X0, 0xE30000
	023 Move X0, [X0+3448]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2586], W8
	027 NotImplemented "Instruction MOVI not yet implemented."
	028 Move [X31+8], X31
	029 Move [X31+96], V0
	030 Move [X31+104], V0
	031 Move [X31+64], V0
	032 Move [X31+72], V0
	033 Move [X31+32], V0
	034 Move [X31+40], V0
	035 Move [X31+1], V0
	036 Move [X19+117], W31
	037 Move X0, [X22]
	038 Move X22, 0xE30000
	039 Move W8, [X0+224]
	040 Move X22, [X22+3448]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X21
	045 Move X1, X20
	046 Move X2, X31
	047 Call PathInternal.TrimEndingDirectorySeparator, X0
	048 Move X20, X0
	049 Move X0, [X22]
	050 Move X21, X1
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X20
	056 Move X1, X21
	057 Move X2, X19
	058 Move X3, X31
	059 Call Sys.LStat, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, -2147483648
	062 Compare TEMP, -2147483648
	063 JumpIfEqual {92}
	064 Move W8, [X19+4]
	065 Move W9, 1
	066 Move [X19+118], W9
	067 And W8, W8, 0xF000
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction CSET not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move [X19+117], W9
	072 Move X0, [X22]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Add X2, X31, 16
	078 Move X0, X20
	079 Move X1, X21
	080 Move X3, X31
	081 Call Sys.Stat, X0, X1
	082 Move TEMP, X0
	083 And TEMP, TEMP, -2147483648
	084 Compare TEMP, -2147483648
	085 JumpIfEqual {91}
	086 Move W8, [X31+20]
	087 And W8, W8, 0xF000
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction CSET not yet implemented."
	090 Move [X19+117], W8
	091 Move [X19+112], W31
	092 Move X0, [X22]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move X0, X31
	098 Call Sys.GetLastErrorInfo
	099 Move W8, 57
	100 NotImplemented "Instruction MOVK not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move [X31+8], X0
	103 Move W8, 45
	104 NotImplemented "Instruction MOVK not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move [X19+112], W31
	107 Move [X19+118], W31
	108 Add X0, X31, 8
	109 Move X1, X31
	110 Call ErrorInfo.get_RawErrno, X0
	111 Move [X19+112], W0
	112 Move X20, [X31+160]
	113 Move X19, [X31+168]
	114 Move X22, [X31+144]
	115 Move X21, [X31+152]
	116 Move X30, [X31+128]
	117 Move X23, [X31+136]
	118 Add X31, X31, 176
	119 Return 

Method: System.Void EnsureStatInitialized(System.ReadOnlySpan`1<System.Char> path, System.Boolean continueOnError = False)

Disassembly:
	0x032EFC74 RET
	0x032EFC78 STP X30, X19, [X31 - 0x10]!
	0x032EFC7C ADRP X0, 0xE04000
	0x032EFC80 LDR X0, [X0 + 0x5B0]
	0x032EFC84 BL 0x1C16D08
	0x032EFC88 BL 0x1C16F10
	0x032EFC8C MOV X19, X0
	0x032EFC90 ADRP X0, 0xE38000
	0x032EFC94 LDR X0, [X0 + 0xE8]
	0x032EFC98 BL 0x1C16D08
	0x032EFC9C MOV X1, X0
	0x032EFCA0 MOV X0, X19
	0x032EFCA4 MOV X2, X31
	0x032EFCA8 BL 0x337DF1C
	0x032EFCAC ADRP X0, 0xE38000
	0x032EFCB0 LDR X0, [X0 + 0xF0]
	0x032EFCB4 BL 0x1C16D08
	0x032EFCB8 MOV X1, X0
	0x032EFCBC MOV X0, X19
	0x032EFCC0 BL 0x1C16DEC
	0x032EFCC4 STP X30, X19, [X31 - 0x10]!
	0x032EFCC8 ADRP X0, 0xE04000
	0x032EFCCC LDR X0, [X0 + 0x5B0]
	0x032EFCD0 BL 0x1C16D08
	0x032EFCD4 BL 0x1C16F10
	0x032EFCD8 MOV X19, X0
	0x032EFCDC ADRP X0, 0xE38000
	0x032EFCE0 LDR X0, [X0 + 0xE8]
	0x032EFCE4 BL 0x1C16D08
	0x032EFCE8 MOV X1, X0
	0x032EFCEC MOV X0, X19
	0x032EFCF0 MOV X2, X31
	0x032EFCF4 BL 0x337DF1C
	0x032EFCF8 ADRP X0, 0xE38000
	0x032EFCFC LDR X0, [X0 + 0xF8]
	0x032EFD00 BL 0x1C16D08
	0x032EFD04 MOV X1, X0
	0x032EFD08 MOV X0, X19
	0x032EFD0C BL 0x1C16DEC
	0x032EFD10 STP X30, X19, [X31 - 0x10]!
	0x032EFD14 ADRP X0, 0xE04000
	0x032EFD18 LDR X0, [X0 + 0x5B0]
	0x032EFD1C BL 0x1C16D08
	0x032EFD20 BL 0x1C16F10
	0x032EFD24 MOV X19, X0
	0x032EFD28 ADRP X0, 0xE38000
	0x032EFD2C LDR X0, [X0 + 0xE8]
	0x032EFD30 BL 0x1C16D08

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0+112]
	007 Move W22, W3
	008 Move X19, X2
	009 Move X21, X0
	010 Add W31, W8, 1
	011 Move X20, X1
	012 Compare W8, 0
	013 JumpIfNotEqual {21}
	014 Move X0, X21
	015 Move X1, X20
	016 Move X2, X19
	017 Call FileStatus.Refresh, X0, X1
	018 Move W8, [X21+112]
	019 Compare W8, 0
	020 JumpIfEqual {25}
	021 Move TEMP, X22
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {31}
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 Move X30, [X31+48]
	030 Return 
	031 Move TEMP, 0
	032 Not TEMP
	033 Move W9, TEMP
	034 Add X0, X31, 8
	035 Move W1, W8
	036 Move X2, X31
	037 Move [X21+112], W9
	038 Move [X31+8], X31
	039 Call ErrorInfo..ctor, X0, X1
	040 Move X0, X31
	041 Move X1, X20
	042 Move X2, X19
	043 Move X3, X31
	044 Call String.CreateString, X0, X1
	045 Move X8, [X31+8]
	046 Move X1, X0
	047 Move W2, W31
	048 Move X3, X31
	049 Move X0, X8
	050 Call Interop.GetExceptionForIoErrno, X0, X1, X2
	051 Move X19, X0
	052 Move X0, 0xE39000
	053 Move X0, [X0+144]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X19
	057 Call 0x1C17DEC

