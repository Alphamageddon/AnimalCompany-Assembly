Type: System.IO.StreamReader

Method: System.Void CheckAsyncTaskInProgress()

Disassembly:
	0x032E7368 CMP W24, W8
	0x032E736C B.LS 0x32E7378
	0x032E7370 MOV X0, X31
	0x032E7374 BL 0x339D6EC
	0x032E7378 ADD X23, X23, 0x20
	0x032E737C B 0x32E73CC
	0x032E7380 MOV W0, W31
	0x032E7384 B 0x32E7334
	0x032E7388 CBZ X22, 0x32E7410
	0x032E738C LDR X8, [X22]
	0x032E7390 LDR X4, [X19 + 0x38]
	0x032E7394 MOV X0, X22
	0x032E7398 MOV X1, X23
	0x032E739C LDP X9, X6, [X8 + 0x1B8]
	0x032E73A0 MOV W2, W31
	0x032E73A4 MOV W3, W24
	0x032E73A8 MOV W5, W31
	0x032E73AC BLR X9
	0x032E73B0 LDR W8, [X19 + 0x44]
	0x032E73B4 ADD W8, W8, W0
	0x032E73B8 STR W8, [X19 + 0x44]
	0x032E73BC B 0x32E7334
	0x032E73C0 MOV X0, X31
	0x032E73C4 BL 0x339D6EC
	0x032E73C8 MOV X24, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10F6000
	005 Move W8, [X20+2486]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE3C000
	012 Move X0, [X0+3272]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2486], W8
	016 Move X0, [X19+88]
	017 Compare X0, 0
	018 JumpIfEqual {29}
	019 Move X1, X31
	020 Call Task.get_IsCompleted, X0
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {30}
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 
	029 Call 0x1C17F20
	030 Move X8, 0xE3C000
	031 Move X8, [X8+3272]
	032 Move X0, [X8]
	033 Call 0x19913D0
	034 Call StreamReader.ThrowAsyncIOInProgress

Method: System.Void ThrowAsyncIOInProgress()

Disassembly:
	0x032E73CC LDR X8, [X27]
	0x032E73D0 LDR X0, [X8 + 0x20]
	0x032E73D4 LDRB W8, [X0 + 0x135]
	0x032E73D8 TBNZ X8, 0x0, 0x32E73E0
	0x032E73DC BL 0x1C5C684
	0x032E73E0 CBZ X22, 0x32E7410
	0x032E73E4 LDR X8, [X22]
	0x032E73E8 MOV X0, X22
	0x032E73EC MOV X1, X23
	0x032E73F0 MOV X2, X24
	0x032E73F4 LDP X9, X6, [X8 + 0x1E8]
	0x032E73F8 MOV X3, X20
	0x032E73FC MOV X4, X21
	0x032E7400 MOV W5, W31
	0x032E7404 BLR X9
	0x032E7408 STR W31, [X19 + 0x44]
	0x032E740C B 0x32E7334
	0x032E7410 BL 0x1C16F20
	0x032E7414 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xE0D000
	004 Move X0, [X0+1456]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xE40000
	009 Move X0, [X0+3568]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call InvalidOperationException..ctor, X0, X1
	015 Move X0, 0xE40000
	016 Move X0, [X0+3576]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Void .ctor()

Disassembly:
	0x032E7418 STP X22, X21, [X31 + 0x10]
	0x032E741C STP X20, X19, [X31 + 0x20]
	0x032E7420 ADRP X20, 0x10F5000
	0x032E7424 LDRB W8, [X20 + 0x9BD]
	0x032E7428 MOV X19, X0
	0x032E742C TBNZ X8, 0x0, 0x32E7444
	0x032E7430 ADRP X0, 0xE0C000
	0x032E7434 LDR X0, [X0 + 0x8F0]
	0x032E7438 BL 0x1C16CF4
	0x032E743C MOVZ W8, 0x1
	0x032E7440 STRB W8, [X20 + 0x9BD]
	0x032E7444 LDR X8, [X19 + 0x18]
	0x032E7448 CBZ X8, 0x32E74DC
	0x032E744C ADRP X20, 0xE0C000
	0x032E7450 LDR X20, [X20 + 0x8F0]
	0x032E7454 MOV X0, X19
	0x032E7458 BL 0x32E6368
	0x032E745C LDR X0, [X20]
	0x032E7460 LDP W22, W21, [X19 + 0x40]
	0x032E7464 BL 0x1C16F10
	0x032E7468 SUB W1, W21, W22
	0x032E746C MOV X2, X31
	0x032E7470 MOV X20, X0
	0x032E7474 BL 0x3231B28
	0x032E7478 CBZ X20, 0x32E7528
	0x032E747C LDR W8, [X19 + 0x44]
	0x032E7480 LDR W2, [X19 + 0x40]
	0x032E7484 LDR X1, [X19 + 0x38]
	0x032E7488 MOV X0, X20
	0x032E748C MOV X4, X31
	0x032E7490 SUB W3, W8, W2
	0x032E7494 BL 0x3233154
	0x032E7498 LDR W8, [X19 + 0x44]
	0x032E749C LDR X9, [X19]
	0x032E74A0 MOV X0, X19
	0x032E74A4 STR W8, [X19 + 0x40]
	0x032E74A8 LDR X8, [X9 + 0x228]
	0x032E74AC LDR X1, [X9 + 0x230]
	0x032E74B0 BLR X8
	0x032E74B4 LDR W8, [X19 + 0x44]
	0x032E74B8 CMP W8, 0x0
	0x032E74BC B.GT 0x32E7480
	0x032E74C0 LDR X8, [X20]
	0x032E74C4 MOV X0, X20
	0x032E74C8 LDP X20, X19, [X31 + 0x20]
	0x032E74CC LDP X22, X21, [X31 + 0x10]
	0x032E74D0 LDP X2, X1, [X8 + 0x168]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10F6000
	006 Move X20, 0xE0E000
	007 Move W8, [X21+2487]
	008 Move X20, [X20+1976]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xE0E000
	015 Move X0, [X0+1976]
	016 Call 0x1C17CF4
	017 Move X0, 0xE40000
	018 Move X0, [X0+3584]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2487], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X21, 0x10F2000
	028 Move W8, [X21+3869]
	029 Compare W8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, 0xE0E000
	032 Move X0, [X0+1976]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+3869], W8
	036 Move X0, [X20]
	037 Move X21, 0xE40000
	038 Move W8, [X0+224]
	039 Move X21, [X21+3584]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X20]
	044 Move X8, [X0+184]
	045 Move X8, [X8+48]
	046 Move [X19+88], X8
	047 Move X0, [X21]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X19
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X1, X31
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Call MarshalByRefObject..ctor, X0
	059 Return 

Method: System.Void .ctor(System.IO.Stream stream, System.Text.Encoding encoding)

Disassembly:
	0x032E74DC ADRP X0, 0xE35000
	0x032E74E0 LDR X0, [X0 + 0x4B8]
	0x032E74E4 BL 0x1C16D08
	0x032E74E8 BL 0x1C16F10

ISIL:
	001 Move W3, 1
	002 Move W4, 1024
	003 Move W5, W31

Method: System.Void .ctor(System.IO.Stream stream, System.Text.Encoding encoding, System.Boolean detectEncodingFromByteOrderMarks, System.Int32 bufferSize, System.Boolean leaveOpen)

Disassembly:
	0x032E74EC MOV X19, X0
	0x032E74F0 ADRP X0, 0xE3F000
	0x032E74F4 LDR X0, [X0 + 0xE20]
	0x032E74F8 BL 0x1C16D08
	0x032E74FC MOV X2, X0
	0x032E7500 MOV X0, X19
	0x032E7504 MOV X1, X31
	0x032E7508 MOV X3, X31
	0x032E750C BL 0x338C410
	0x032E7510 ADRP X0, 0xE3F000
	0x032E7514 LDR X0, [X0 + 0xE50]
	0x032E7518 BL 0x1C16D08
	0x032E751C MOV X1, X0
	0x032E7520 MOV X0, X19
	0x032E7524 BL 0x1C16DEC
	0x032E7528 BL 0x1C16F20
	0x032E752C STR X30, [X31 - 0x20]!
	0x032E7530 STP X20, X19, [X31 + 0x10]
	0x032E7534 MOV X19, X0
	0x032E7538 LDR W8, [X0 + 0x48]
	0x032E753C LDR X0, [X0 + 0x30]
	0x032E7540 MOV W3, W31
	0x032E7544 MOV X5, X31
	0x032E7548 SUB W4, W8, W1
	0x032E754C MOV X2, X0
	0x032E7550 MOV W20, W1
	0x032E7554 BL 0x33A8A9C
	0x032E7558 LDR W8, [X19 + 0x48]
	0x032E755C SUB W8, W8, W20
	0x032E7560 STR W8, [X19 + 0x48]
	0x032E7564 LDP X20, X19, [X31 + 0x10]
	0x032E7568 LDR X30, [X31], #0x20
	0x032E756C RET
	0x032E7570 STR X30, [X31 - 0x20]!
	0x032E7574 STP X20, X19, [X31 + 0x10]
	0x032E7578 ADRP X20, 0x10F5000
	0x032E757C LDRB W8, [X20 + 0x9BE]
	0x032E7580 MOV X19, X0
	0x032E7584 TBNZ X8, 0x0, 0x32E75A8
	0x032E7588 ADRP X0, 0xE15000
	0x032E758C LDR X0, [X0 + 0x8D8]
	0x032E7590 BL 0x1C16CF4
	0x032E7594 ADRP X0, 0xE3B000
	0x032E7598 LDR X0, [X0 + 0x6F8]
	0x032E759C BL 0x1C16CF4
	0x032E75A0 MOVZ W8, 0x1
	0x032E75A4 STRB W8, [X20 + 0x9BE]
	0x032E75A8 LDR W10, [X19 + 0x48]
	0x032E75AC CMP W10, 0x2
	0x032E75B0 B.LT 0x32E76F4
	0x032E75B4 LDR X8, [X19 + 0x30]
	0x032E75B8 STRB W31, [X19 + 0x54]
	0x032E75BC CBZ X8, 0x32E781C
	0x032E75C0 LDR W9, [X8 + 0x18]
	0x032E75C4 CBZ W9, 0x32E7820
	0x032E75C8 LDRB W11, [X8 + 0x20]
	0x032E75CC CMP W11, 0xFF
	0x032E75D0 B.EQ 0x32E75FC
	0x032E75D4 CMP W11, 0xFE
	0x032E75D8 B.NE 0x32E76E4
	0x032E75DC CMP W9, 0x1
	0x032E75E0 B.LS 0x32E7820
	0x032E75E4 LDRB W12, [X8 + 0x21]
	0x032E75E8 CMP W12, 0xFF
	0x032E75EC B.NE 0x32E76E4
	0x032E75F0 MOV X0, X31
	0x032E75F4 BL 0x3242CD8
	0x032E75F8 B 0x32E7640
	0x032E75FC CMP W9, 0x1
	0x032E7600 B.LS 0x32E7820
	0x032E7604 LDRB W12, [X8 + 0x21]
	0x032E7608 CMP W12, 0xFE
	0x032E760C B.NE 0x32E76E4
	0x032E7610 CMP W10, 0x4
	0x032E7614 B.LT 0x32E7638
	0x032E7618 CMP W9, 0x2
	0x032E761C B.LS 0x32E7820
	0x032E7620 LDRB W10, [X8 + 0x22]
	0x032E7624 CBNZ W10, 0x32E7638
	0x032E7628 CMP W9, 0x3
	0x032E762C B.LS 0x32E7820
	0x032E7630 LDRB W8, [X8 + 0x23]
	0x032E7634 CBZ W8, 0x32E77E8
	0x032E7638 MOV X0, X31
	0x032E763C BL 0x3242C30
	0x032E7640 LDR W8, [X19 + 0x48]
	0x032E7644 LDR X2, [X19 + 0x30]
	0x032E7648 STR X0, [X19 + 0x20]
	0x032E764C MOVZ W1, 0x2
	0x032E7650 SUB W4, W8, 0x2
	0x032E7654 MOV X0, X2
	0x032E7658 MOV W3, W31
	0x032E765C MOV X5, X31
	0x032E7660 BL 0x33A8A9C
	0x032E7664 MOVN W8, 0x1
	0x032E7668 LDR W9, [X19 + 0x48]
	0x032E766C LDR X0, [X19 + 0x20]
	0x032E7670 ADD W8, W9, W8
	0x032E7674 STR W8, [X19 + 0x48]
	0x032E7678 CBZ X0, 0x32E781C
	0x032E767C LDR X8, [X0]
	0x032E7680 LDR X9, [X8 + 0x338]
	0x032E7684 LDR X1, [X8 + 0x340]
	0x032E7688 BLR X9
	0x032E768C LDR X8, [X19 + 0x30]
	0x032E7690 STR X0, [X19 + 0x28]
	0x032E7694 CBZ X8, 0x32E781C
	0x032E7698 LDR X0, [X19 + 0x20]
	0x032E769C CBZ X0, 0x32E781C
	0x032E76A0 LDR X9, [X0]
	0x032E76A4 LDR W1, [X8 + 0x18]
	0x032E76A8 LDR X8, [X9 + 0x368]
	0x032E76AC LDR X2, [X9 + 0x370]
	0x032E76B0 BLR X8
	0x032E76B4 LDR W8, [X19 + 0x50]
	0x032E76B8 MOV W20, W0
	0x032E76BC CMP W0, W8
	0x032E76C0 B.LE 0x32E76DC
	0x032E76C4 ADRP X8, 0xE15000
	0x032E76C8 LDR X8, [X8 + 0x8D8]
	0x032E76CC MOV W1, W20
	0x032E76D0 LDR X0, [X8]
	0x032E76D4 BL 0x1C16D6C
	0x032E76D8 STR X0, [X19 + 0x38]
	0x032E76DC STR W20, [X19 + 0x50]
	0x032E76E0 B 0x32E76F4
	0x032E76E4 CMP W10, 0x3
	0x032E76E8 B.GE 0x32E7700
	0x032E76EC MOVZ W8, 0x1
	0x032E76F0 STRB W8, [X19 + 0x54]
	0x032E76F4 LDP X20, X19, [X31 + 0x10]
	0x032E76F8 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x10F6000
	011 Move X25, 0xE0E000
	012 Move W8, [X26+2488]
	013 Move X25, [X25+1976]
	014 Move W22, W5
	015 Move W19, W4
	016 Move W23, W3
	017 Move X21, X2
	018 Move X20, X1
	019 Move X24, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0xE0E000
	025 Move X0, [X0+1976]
	026 Call 0x1C17CF4
	027 Move X0, 0xE40000
	028 Move X0, [X0+3584]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X26+2488], W8
	032 Move X0, [X25]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X26, 0x10F2000
	038 Move W8, [X26+3869]
	039 Compare W8, 0
	040 JumpIfNotEqual {46}
	041 Move X0, 0xE0E000
	042 Move X0, [X0+1976]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X26+3869], W8
	046 Move X0, [X25]
	047 Move X26, 0xE40000
	048 Move W8, [X0+224]
	049 Move X26, [X26+3584]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X25]
	054 Move X8, [X0+184]
	055 Move X8, [X8+48]
	056 Move [X24+88], X8
	057 Move X0, [X26]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X24
	063 Move X1, X31
	064 Call MarshalByRefObject..ctor, X0
	065 Compare X20, 0
	066 JumpIfEqual {94}
	067 Compare X21, 0
	068 JumpIfEqual {94}
	069 Move X8, [X20]
	070 Move X0, X20
	071 Move X9, [X8+424]
	072 Move X1, [X8+432]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {116}
	078 NotImplemented "Instruction CMP not yet implemented."
	079 And W3, W23, 1
	080 And W5, W22, 1
	081 Move X0, X24
	082 Move X1, X20
	083 Move X2, X21
	084 Move W4, W19
	085 Move X20, [X31+64]
	086 Move X19, [X31+72]
	087 Move X22, [X31+48]
	088 Move X21, [X31+56]
	089 Move X24, [X31+32]
	090 Move X23, [X31+40]
	091 Move X26, [X31+16]
	092 Move X25, [X31+24]
	093 Move X30, [X31+80]
	094 Move X8, 0xE3C000
	095 Move X9, 0xE3C000
	096 Move X8, [X8+2848]
	097 Move X9, [X9+3384]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 NotImplemented "Instruction CSEL not yet implemented."
	100 Call 0x1C17D08
	101 Move X19, X0
	102 Move X0, 0xE12000
	103 Move X0, [X0+1320]
	104 Call 0x1C17D08
	105 Call 0x1C17F10
	106 Move X1, X19
	107 Move X2, X31
	108 Move X20, X0
	109 Call ArgumentNullException..ctor, X0, X1
	110 Move X0, 0xE40000
	111 Move X0, [X0+3592]
	112 Call 0x1C17D08
	113 Move X1, X0
	114 Move X0, X20
	115 Call 0x1C17DEC
	116 Move X0, 0xE15000
	117 Move X0, [X0+1400]
	118 Call 0x1C17D08
	119 Call 0x1C17F10
	120 Move X19, X0
	121 Move X0, 0xE3C000
	122 Move X0, [X0+3368]
	123 Call 0x1C17D08
	124 Move X1, X0
	125 Move X0, X19
	126 Move X2, X31
	127 Call ArgumentException..ctor, X0, X1
	128 Move X0, 0xE15000
	129 Move X0, [X0+1888]
	130 Call 0x1C17D08
	131 Call 0x1C17F10
	132 Move X19, X0
	133 Move X0, 0xE38000
	134 Move X0, [X0+3928]
	135 Call 0x1C17D08
	136 Move X20, X0
	137 Move X0, 0xE40000
	138 Move X0, [X0+3368]
	139 Call 0x1C17D08
	140 Move X2, X0
	141 Move X0, X19
	142 Move X1, X20
	143 Move X3, X31
	144 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	145 Move X0, 0xE40000
	146 Move X0, [X0+3592]
	147 Call 0x1C17D08
	148 Move X1, X0
	149 Move X0, X19
	150 Call 0x1C17DEC

Method: System.Void .ctor(System.String path)

Disassembly:
	0x032E7824 STR X30, [X31 - 0x20]!
	0x032E7828 STP X20, X19, [X31 + 0x10]
	0x032E782C ADRP X20, 0x10F5000
	0x032E7830 LDRB W8, [X20 + 0x9BF]
	0x032E7834 MOV X19, X0
	0x032E7838 TBNZ X8, 0x0, 0x32E7850
	0x032E783C ADRP X0, 0xE3B000
	0x032E7840 LDR X0, [X0 + 0xAC0]
	0x032E7844 BL 0x1C16CF4
	0x032E7848 MOVZ W8, 0x1
	0x032E784C STRB W8, [X20 + 0x9BF]
	0x032E7850 LDRB W8, [X19 + 0x55]
	0x032E7854 CBZ W8, 0x32E790C
	0x032E7858 LDR X0, [X19 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, X31
	006 Move X19, X1
	007 Call Encoding.get_UTF8
	008 Move X2, X0
	009 Move X0, X20
	010 Move X1, X19
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move W3, 1
	014 Move W4, 1024
	015 Move X30, [X31+32]
	016 Call StreamReader..ctor, X0, X1, X2, X3, X4
	017 Return 

Method: System.Void .ctor(System.String path, System.Boolean detectEncodingFromByteOrderMarks)

Disassembly:
	0x032E785C CBZ X0, 0x32E7938
	0x032E7860 LDR X8, [X0]
	0x032E7864 LDP X9, X1, [X8 + 0x1A8]
	0x032E7868 BLR X9
	0x032E786C LDP W8, W9, [X19 + 0x48]
	0x032E7870 MOV X20, X1
	0x032E7874 SUBS W4, W8, W20
	0x032E7878 CSEL W8, W8, W20, LT
	0x032E787C SUB W10, W8, W9
	0x032E7880 CMP W10, 0x1
	0x032E7884 B.LT 0x32E78CC
	0x032E7888 LDR X10, [X19 + 0x30]
	0x032E788C CBZ X10, 0x32E7938
	0x032E7890 LDR W11, [X10 + 0x18]
	0x032E7894 CMP W9, W11

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, X0
	006 Move X0, X31
	007 Move W19, W2
	008 Move X20, X1
	009 Call Encoding.get_UTF8
	010 And W3, W19, 1
	011 Move X1, X20
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move W4, 1024
	015 Move X2, X0
	016 Move X0, X21
	017 Move X30, [X31+32]
	018 Move X21, [X31+40]

Method: System.Void .ctor(System.String path, System.Text.Encoding encoding, System.Boolean detectEncodingFromByteOrderMarks)

Disassembly:
	0x032E7ACC LDR X0, [X0 + 0x8F0]
	0x032E7AD0 BL 0x1C16CF4
	0x032E7AD4 MOVZ W8, 0x1

ISIL:
	001 And W3, W3, 1
	002 Move W4, 1024
	003 Call StreamReader..ctor, X0, X1, X2, X3, X4
	004 Return 

Method: System.Void .ctor(System.String path, System.Text.Encoding encoding, System.Boolean detectEncodingFromByteOrderMarks, System.Int32 bufferSize)

Disassembly:
	0x032E7898 B.CS 0x32E7934
	0x032E789C SXTW X9, W9
	0x032E78A0 CMP W9, W20
	0x032E78A4 B.CS 0x32E7934
	0x032E78A8 ADD X12, X10, X9
	0x032E78AC LDRB W12, [X12 + 0x20]
	0x032E78B0 LDRB W13, [X0, X9, LSL]
	0x032E78B4 CMP W12, W13
	0x032E78B8 B.NE 0x32E7914
	0x032E78BC ADD W9, W9, 0x1
	0x032E78C0 CMP W8, W9
	0x032E78C4 STR W9, [X19 + 0x4C]
	0x032E78C8 B.NE 0x32E7894
	0x032E78CC LDRB W8, [X19 + 0x55]
	0x032E78D0 CBZ W8, 0x32E790C
	0x032E78D4 CMP W9, W20
	0x032E78D8 B.NE 0x32E7924
	0x032E78DC LDR X0, [X19 + 0x30]
	0x032E78E0 MOV W1, W20
	0x032E78E4 MOV W3, W31
	0x032E78E8 MOV X5, X31
	0x032E78EC MOV X2, X0
	0x032E78F0 BL 0x33A8A9C
	0x032E78F4 LDR W8, [X19 + 0x48]
	0x032E78F8 MOV W0, W31
	0x032E78FC STRH W31, [X19 + 0x54]
	0x032E7900 SUB W8, W8, W20
	0x032E7904 STP W8, W31, [X19 + 0x48]
	0x032E7908 B 0x32E7928
	0x032E790C MOV W0, W31
	0x032E7910 B 0x32E7928
	0x032E7914 MOV W0, W31
	0x032E7918 STR W31, [X19 + 0x4C]
	0x032E791C STRB W31, [X19 + 0x55]
	0x032E7920 B 0x32E7928
	0x032E7924 MOVZ W0, 0x1
	0x032E7928 LDP X20, X19, [X31 + 0x10]
	0x032E792C LDR X30, [X31], #0x20
	0x032E7930 RET
	0x032E7934 BL 0x1C16F28
	0x032E7938 BL 0x1C16F20
	0x032E793C STR X30, [X31 - 0x20]!
	0x032E7940 STP X20, X19, [X31 + 0x10]
	0x032E7944 LDRB W8, [X0 + 0x55]
	0x032E7948 MOV X19, X0
	0x032E794C STR X31, [X0 + 0x40]
	0x032E7950 CBZ W8, 0x32E795C
	0x032E7954 MOVZ W8, 0x1
	0x032E7958 B 0x32E7960
	0x032E795C STR W31, [X19 + 0x48]
	0x032E7960 LDR X0, [X19 + 0x18]
	0x032E7964 LDR X1, [X19 + 0x30]
	0x032E7968 ANDS W31, W8, 0xFF
	0x032E796C B.EQ 0x32E79A8
	0x032E7970 CBZ X1, 0x32E7AA4
	0x032E7974 CBZ X0, 0x32E7AA4
	0x032E7978 LDR X8, [X0]
	0x032E797C LDR W2, [X19 + 0x4C]
	0x032E7980 LDR W9, [X1 + 0x18]
	0x032E7984 LDR X10, [X8 + 0x358]
	0x032E7988 LDR X4, [X8 + 0x360]
	0x032E798C SUB W3, W9, W2
	0x032E7990 BLR X10
	0x032E7994 LDR W3, [X19 + 0x48]
	0x032E7998 CBZ W0, 0x32E7A54
	0x032E799C ADD W0, W3, W0
	0x032E79A0 STR W0, [X19 + 0x48]
	0x032E79A4 B 0x32E79D0
	0x032E79A8 CBZ X1, 0x32E7AA4
	0x032E79AC CBZ X0, 0x32E7AA4
	0x032E79B0 LDR X8, [X0]
	0x032E79B4 LDR W3, [X1 + 0x18]
	0x032E79B8 MOV W2, W31
	0x032E79BC LDR X9, [X8 + 0x358]
	0x032E79C0 LDR X4, [X8 + 0x360]
	0x032E79C4 BLR X9
	0x032E79C8 STR W0, [X19 + 0x48]
	0x032E79CC CBZ W0, 0x32E7A90
	0x032E79D0 LDR X8, [X19 + 0x30]
	0x032E79D4 CBZ X8, 0x32E7AA4
	0x032E79D8 LDR W8, [X8 + 0x18]
	0x032E79DC CMP W0, W8
	0x032E79E0 CSET W8, LT
	0x032E79E4 MOV X0, X19
	0x032E79E8 STRB W8, [X19 + 0x56]
	0x032E79EC BL 0x32E7824
	0x032E79F0 TBZ X0, 0x0, 0x32E7A00
	0x032E79F4 LDR W20, [X19 + 0x44]
	0x032E79F8 CBZ W20, 0x32E7A4C
	0x032E79FC B 0x32E7A94
	0x032E7A00 LDRB W8, [X19 + 0x54]
	0x032E7A04 CBZ W8, 0x32E7A1C
	0x032E7A08 LDR W8, [X19 + 0x48]
	0x032E7A0C CMP W8, 0x2
	0x032E7A10 B.LT 0x32E7A1C
	0x032E7A14 MOV X0, X19
	0x032E7A18 BL 0x32E7570
	0x032E7A1C LDR X0, [X19 + 0x28]
	0x032E7A20 CBZ X0, 0x32E7AA4
	0x032E7A24 LDR X8, [X0]
	0x032E7A28 LDP W20, W3, [X19 + 0x44]
	0x032E7A2C LDP X1, X4, [X19 + 0x30]
	0x032E7A30 MOV W2, W31
	0x032E7A34 LDP X9, X6, [X8 + 0x1B8]
	0x032E7A38 MOV W5, W20
	0x032E7A3C BLR X9
	0x032E7A40 ADD W20, W0, W20
	0x032E7A44 STR W20, [X19 + 0x44]
	0x032E7A48 CBNZ W20, 0x32E7A94
	0x032E7A4C LDRB W8, [X19 + 0x55]
	0x032E7A50 B 0x32E7960
	0x032E7A54 LDR W20, [X19 + 0x44]
	0x032E7A58 CMP W3, 0x1
	0x032E7A5C B.LT 0x32E7A94
	0x032E7A60 LDR X0, [X19 + 0x28]
	0x032E7A64 CBZ X0, 0x32E7AA4
	0x032E7A68 LDR X8, [X0]
	0x032E7A6C LDP X1, X4, [X19 + 0x30]
	0x032E7A70 MOV W2, W31
	0x032E7A74 MOV W5, W20
	0x032E7A78 LDP X9, X6, [X8 + 0x1B8]
	0x032E7A7C BLR X9
	0x032E7A80 ADD W20, W0, W20
	0x032E7A84 STR X31, [X19 + 0x48]
	0x032E7A88 STR W20, [X19 + 0x44]
	0x032E7A8C B 0x32E7A94
	0x032E7A90 LDR W20, [X19 + 0x44]
	0x032E7A94 MOV W0, W20
	0x032E7A98 LDP X20, X19, [X31 + 0x10]
	0x032E7A9C LDR X30, [X31], #0x20
	0x032E7AA0 RET
	0x032E7AA4 BL 0x1C16F20
	0x032E7AA8 STR X30, [X31 - 0x40]!
	0x032E7AAC STP X24, X23, [X31 + 0x10]
	0x032E7AB0 STP X22, X21, [X31 + 0x20]
	0x032E7AB4 STP X20, X19, [X31 + 0x30]
	0x032E7AB8 ADRP X20, 0x10F5000
	0x032E7ABC LDRB W8, [X20 + 0x9C1]
	0x032E7AC0 MOV X19, X0
	0x032E7AC4 TBNZ X8, 0x0, 0x32E7ADC
	0x032E7AC8 ADRP X0, 0xE0C000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x10F6000
	010 Move X24, 0xE0E000
	011 Move W8, [X25+2489]
	012 Move X24, [X24+1976]
	013 Move W19, W4
	014 Move W21, W3
	015 Move X20, X2
	016 Move X23, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0xE3B000
	023 Move X0, [X0+1648]
	024 Call 0x1C17CF4
	025 Move X0, 0xE0E000
	026 Move X0, [X0+1976]
	027 Call 0x1C17CF4
	028 Move X0, 0xE40000
	029 Move X0, [X0+3584]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X25+2489], W8
	033 Move X0, [X24]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X25, 0x10F2000
	039 Move W8, [X25+3869]
	040 Compare W8, 0
	041 JumpIfNotEqual {47}
	042 Move X0, 0xE0E000
	043 Move X0, [X0+1976]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X25+3869], W8
	047 Move X0, [X24]
	048 Move X25, 0xE40000
	049 Move W8, [X0+224]
	050 Move X25, [X25+3584]
	051 Compare W8, 0
	052 JumpIfNotEqual {55}
	053 Call 0x1C17DFC
	054 Move X0, [X24]
	055 Move X8, [X0+184]
	056 Move X8, [X8+48]
	057 Move [X22+88], X8
	058 Move X0, [X25]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X22
	064 Move X1, X31
	065 Call MarshalByRefObject..ctor, X0
	066 Compare X23, 0
	067 JumpIfEqual {103}
	068 Compare X20, 0
	069 JumpIfEqual {110}
	070 Move W8, [X23+16]
	071 Compare W8, 0
	072 JumpIfEqual {122}
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X8, 0xE3B000
	075 Move X8, [X8+1648]
	076 Move X0, [X8]
	077 Call 0x1C17F10
	078 Move W2, 3
	079 Move W3, 1
	080 Move W4, 1
	081 Move W5, 4096
	082 Move W6, 0x8000000
	083 Move X1, X23
	084 Move X7, X31
	085 Move X24, X0
	086 Call FileStream..ctor, X0, X1, X2, X3, X4, X5, X6
	087 And W3, W21, 1
	088 Move X0, X22
	089 Move X1, X24
	090 Move X2, X20
	091 Move W4, W19
	092 Move X20, [X31+48]
	093 Move X19, [X31+56]
	094 Move X22, [X31+32]
	095 Move X21, [X31+40]
	096 Move X24, [X31+16]
	097 Move X23, [X31+24]
	098 Move W5, W31
	099 Move X30, [X31+64]
	100 Move X25, [X31+72]
	101 Call StreamReader.Init, X0, X1, X2, X3, X4, X5
	102 Return 
	103 Move X0, 0xE12000
	104 Move X0, [X0+1320]
	105 Call 0x1C17D08
	106 Call 0x1C17F10
	107 Move X19, X0
	108 Move X0, 0xE18000
	109 Move X0, [X0+288]
	110 Move X0, 0xE12000
	111 Move X0, [X0+1320]
	112 Call 0x1C17D08
	113 Call 0x1C17F10
	114 Move X19, X0
	115 Move X0, 0xE3C000
	116 Move X0, [X0+2848]
	117 Call 0x1C17D08
	118 Move X1, X0
	119 Move X0, X19
	120 Move X2, X31
	121 Call ArgumentNullException..ctor, X0, X1
	122 Move X0, 0xE15000
	123 Move X0, [X0+1400]
	124 Call 0x1C17D08
	125 Call 0x1C17F10
	126 Move X19, X0
	127 Move X0, 0xE40000
	128 Move X0, [X0+3600]
	129 Call 0x1C17D08
	130 Move X1, X0
	131 Move X0, X19
	132 Move X2, X31
	133 Call ArgumentException..ctor, X0, X1
	134 Move X0, 0xE15000
	135 Move X0, [X0+1888]
	136 Call 0x1C17D08
	137 Call 0x1C17F10
	138 Move X19, X0
	139 Move X0, 0xE38000
	140 Move X0, [X0+3928]
	141 Call 0x1C17D08
	142 Move X20, X0
	143 Move X0, 0xE40000
	144 Move X0, [X0+3368]
	145 Call 0x1C17D08
	146 Move X2, X0
	147 Move X0, X19
	148 Move X1, X20
	149 Move X3, X31
	150 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	151 Move X0, 0xE40000
	152 Move X0, [X0+3608]
	153 Call 0x1C17D08
	154 Move X1, X0
	155 Move X0, X19
	156 Call 0x1C17DEC

Method: System.Void Init(System.IO.Stream stream, System.Text.Encoding encoding, System.Boolean detectEncodingFromByteOrderMarks, System.Int32 bufferSize, System.Boolean leaveOpen)

Disassembly:
	0x032E76FC RET
	0x032E7700 CMP W11, 0xEF
	0x032E7704 B.NE 0x32E7764
	0x032E7708 CMP W9, 0x1
	0x032E770C B.LS 0x32E7820
	0x032E7710 LDRB W10, [X8 + 0x21]
	0x032E7714 CMP W10, 0xBB
	0x032E7718 B.NE 0x32E76F4
	0x032E771C CMP W9, 0x2
	0x032E7720 B.LS 0x32E7820
	0x032E7724 LDRB W8, [X8 + 0x22]
	0x032E7728 CMP W8, 0xBF
	0x032E772C B.NE 0x32E76F4
	0x032E7730 MOV X0, X31
	0x032E7734 BL 0x3241948
	0x032E7738 LDR W8, [X19 + 0x48]
	0x032E773C LDR X2, [X19 + 0x30]
	0x032E7740 STR X0, [X19 + 0x20]
	0x032E7744 MOVZ W1, 0x3
	0x032E7748 SUB W4, W8, 0x3
	0x032E774C MOV X0, X2
	0x032E7750 MOV W3, W31
	0x032E7754 MOV X5, X31
	0x032E7758 BL 0x33A8A9C
	0x032E775C MOVN W8, 0x2
	0x032E7760 B 0x32E7668
	0x032E7764 CMP W10, 0x4
	0x032E7768 B.LT 0x32E76F4
	0x032E776C CBNZ W11, 0x32E76F4
	0x032E7770 CMP W9, 0x1
	0x032E7774 B.LS 0x32E7820
	0x032E7778 LDRB W10, [X8 + 0x21]
	0x032E777C CBNZ W10, 0x32E76F4
	0x032E7780 CMP W9, 0x2
	0x032E7784 B.LS 0x32E7820
	0x032E7788 LDRB W10, [X8 + 0x22]
	0x032E778C CMP W10, 0xFE
	0x032E7790 B.NE 0x32E76F4
	0x032E7794 CMP W9, 0x3
	0x032E7798 B.LS 0x32E7820
	0x032E779C LDRB W8, [X8 + 0x23]
	0x032E77A0 CMP W8, 0xFF
	0x032E77A4 B.NE 0x32E76F4
	0x032E77A8 ADRP X8, 0xE3B000
	0x032E77AC LDR X8, [X8 + 0x6F8]
	0x032E77B0 LDR X0, [X8]
	0x032E77B4 BL 0x1C16F10
	0x032E77B8 MOVZ W1, 0x1
	0x032E77BC MOVZ W2, 0x1
	0x032E77C0 MOV X3, X31
	0x032E77C4 MOV X20, X0
	0x032E77C8 BL 0x3235CB8
	0x032E77CC LDR W8, [X19 + 0x48]
	0x032E77D0 LDR X0, [X19 + 0x30]
	0x032E77D4 STR X20, [X19 + 0x20]
	0x032E77D8 MOVZ W1, 0x4
	0x032E77DC SUB W4, W8, 0x4
	0x032E77E0 MOV X2, X0
	0x032E77E4 B 0x32E7808
	0x032E77E8 MOV X0, X31
	0x032E77EC BL 0x3242E20
	0x032E77F0 LDR W8, [X19 + 0x48]
	0x032E77F4 LDR X2, [X19 + 0x30]
	0x032E77F8 STR X0, [X19 + 0x20]
	0x032E77FC MOVZ W1, 0x4
	0x032E7800 SUB W4, W8, 0x4
	0x032E7804 MOV X0, X2
	0x032E7808 MOV W3, W31
	0x032E780C MOV X5, X31
	0x032E7810 BL 0x33A8A9C
	0x032E7814 MOVN W8, 0x3
	0x032E7818 B 0x32E7668
	0x032E781C BL 0x1C16F20
	0x032E7820 BL 0x1C16F28

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x10F6000
	010 Move W8, [X25+2490]
	011 Move W19, W5
	012 Move W22, W4
	013 Move W23, W3
	014 Move X21, X2
	015 Move X24, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xE0D000
	022 Move X0, [X0+1560]
	023 Call 0x1C17CF4
	024 Move X0, 0xE16000
	025 Move X0, [X0+2264]
	026 Call 0x1C17CF4
	027 Move X0, 0xE3C000
	028 Move X0, [X0+2752]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X25+2490], W8
	032 Move [X20+24], X24
	033 Move [X20+32], X21
	034 Compare X21, 0
	035 JumpIfEqual {88}
	036 Move X8, [X21]
	037 Move X24, 0xE0D000
	038 Move X25, 0xE16000
	039 Move X0, X21
	040 Move X9, [X8+824]
	041 Move X1, [X8+832]
	042 Move X24, [X24+1560]
	043 Move X25, [X25+2264]
	044 And W23, W23, 1
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move [X20+40], X0
	047 Move X0, [X24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W8, 128
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 Move W1, W22
	052 Call 0x1C17D6C
	053 Move [X20+48], X0
	054 Move X8, [X21]
	055 Move X0, X21
	056 Move W1, W22
	057 Move X9, [X8+872]
	058 Move X2, [X8+880]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move [X20+80], W0
	061 Move W1, W0
	062 Move X0, [X25]
	063 Call 0x1C17D6C
	064 Move [X20+56], X0
	065 Move [X20+72], X31
	066 Move [X20+84], W23
	067 Move X8, [X21]
	068 Move X0, X21
	069 Move X9, [X8+424]
	070 Move X1, [X8+432]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction ORN not yet implemented."
	074 NotImplemented "Instruction CSET not yet implemented."
	075 And W8, W8, 1
	076 Move [X20+86], W31
	077 Move [X20+85], W9
	078 Move [X20+87], W8
	079 Move X20, [X31+48]
	080 Move X19, [X31+56]
	081 Move X22, [X31+32]
	082 Move X21, [X31+40]
	083 Move X24, [X31+16]
	084 Move X23, [X31+24]
	085 Move X30, [X31+64]
	086 Move X25, [X31+72]
	087 Return 
	088 Call 0x1C17F20

Method: System.Void Init(System.IO.Stream stream)

Disassembly:
	0x032E7AD8 STRB W8, [X20 + 0x9C1]
	0x032E7ADC LDR X8, [X19 + 0x18]
	0x032E7AE0 CBZ X8, 0x32E7CB8
	0x032E7AE4 MOV X0, X19

ISIL:
	001 Move W8, 1
	002 Move [X0+24], X1
	003 Move [X0+87], W8
	004 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x032E7AE8 BL 0x32E6368
	0x032E7AEC LDP W8, W9, [X19 + 0x40]
	0x032E7AF0 CMP W8, W9
	0x032E7AF4 B.NE 0x32E7B10
	0x032E7AF8 LDR X8, [X19]
	0x032E7AFC MOV X0, X19
	0x032E7B00 LDR X9, [X8 + 0x228]
	0x032E7B04 LDR X1, [X8 + 0x230]
	0x032E7B08 BLR X9
	0x032E7B0C CBZ W0, 0x32E7C94
	0x032E7B10 ADRP X23, 0xE0C000
	0x032E7B14 LDR X23, [X23 + 0x8F0]
	0x032E7B18 MOV X20, X31
	0x032E7B1C LDR X1, [X19 + 0x38]
	0x032E7B20 CBZ X1, 0x32E7CB4
	0x032E7B24 LDR W21, [X19 + 0x40]
	0x032E7B28 LDR W8, [X1 + 0x18]
	0x032E7B2C MOV W22, W31
	0x032E7B30 ADD W9, W21, W22
	0x032E7B34 CMP W9, W8
	0x032E7B38 B.CS 0x32E7CB0
	0x032E7B3C ADD X9, X1, W9, 0x1, SXTW
	0x032E7B40 LDRH W24, [X9 + 0x20]
	0x032E7B44 CMP W24, 0xD
	0x032E7B48 B.EQ 0x32E7BE0
	0x032E7B4C CMP W24, 0xA
	0x032E7B50 B.EQ 0x32E7BE0
	0x032E7B54 LDR W9, [X19 + 0x44]
	0x032E7B58 ADD W22, W22, 0x1
	0x032E7B5C ADD W10, W21, W22
	0x032E7B60 CMP W10, W9
	0x032E7B64 B.LT 0x32E7B30
	0x032E7B68 SUB W21, W9, W21
	0x032E7B6C CBNZ X20, 0x32E7B8C
	0x032E7B70 LDR X0, [X23]
	0x032E7B74 BL 0x1C16F10
	0x032E7B78 ADD W1, W21, 0x50
	0x032E7B7C MOV X2, X31
	0x032E7B80 MOV X20, X0
	0x032E7B84 BL 0x3231B28
	0x032E7B88 CBZ X20, 0x32E7CB4
	0x032E7B8C LDR W2, [X19 + 0x40]
	0x032E7B90 LDR X1, [X19 + 0x38]
	0x032E7B94 MOV X0, X20
	0x032E7B98 MOV W3, W21
	0x032E7B9C MOV X4, X31
	0x032E7BA0 BL 0x3233154
	0x032E7BA4 LDR X8, [X19]
	0x032E7BA8 MOV X0, X19
	0x032E7BAC LDR X9, [X8 + 0x228]
	0x032E7BB0 LDR X1, [X8 + 0x230]
	0x032E7BB4 BLR X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+87]
	005 Move X19, X0
	006 And W31, W1, W8
	007 Move X20, X19
	008 Add X20, X20, 24
	009 Move X0, [X20]
	010 Compare X0, 0
	011 JumpIfEqual {17}
	012 Move X8, [X0]
	013 Move X1, [X8+640]
	014 Move X9, [X8+632]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move X0, X31
	017 Move W8, [X19+87]
	018 Compare W8, 0
	019 JumpIfNotEqual {23}
	020 Move X0, X31
	021 Compare W8, 0
	022 JumpIfEqual {31}
	023 Add X19, X19, 24
	024 Move X8, [X19]
	025 Compare X8, 0
	026 JumpIfEqual {31}
	027 NotImplemented "Instruction MOVI not yet implemented."
	028 Move [X19+16], V0
	029 Move [X19+24], V0
	030 Move [X19], V0
	031 Compare X0, 0
	032 JumpIfNotEqual {37}
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return 
	037 Call 0x1C17F18
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Call 0x3EB2AD0
	040 Move X8, [X0]
	041 Move [X31+8], X8
	042 Call 0x3EB2AE0
	043 Move X0, [X31+8]
	044 Move [X31+8], X31
	045 Move W8, [X19+87]
	046 Compare W8, 0
	047 JumpIfEqual {55}
	048 Move X8, [X20]
	049 Compare X8, 0
	050 JumpIfEqual {55}
	051 NotImplemented "Instruction MOVI not yet implemented."
	052 Move [X20+16], V0
	053 Move [X20+24], V0
	054 Move [X20], V0
	055 Move X8, [X31+8]
	056 Compare X8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1D2D690
	059 Move X0, [X31+8]
	060 Call 0x1C17F18
	061 Call 0x1991590

Method: System.Text.Encoding get_CurrentEncoding()

Disassembly:
	0x032E7BC8 LDP X20, X19, [X31 + 0x30]
	0x032E7BCC LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.IO.Stream get_BaseStream()

Disassembly:
	0x032E7BD0 LDP X2, X1, [X8 + 0x168]
	0x032E7BD4 LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Boolean get_LeaveOpen()

Disassembly:
	0x032E7BB8 CMP W0, 0x0
	0x032E7BBC B.GT 0x32E7B1C
	0x032E7BC0 LDR X8, [X20]
	0x032E7BC4 MOV X0, X20

ISIL:
	001 Move W8, [X0+87]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Int32 Peek()

Disassembly:
	0x032E7BD8 LDR X30, [X31], #0x40
	0x032E7BDC BR X2
	0x032E7BE0 CBZ X20, 0x32E7C0C
	0x032E7BE4 MOV X0, X20
	0x032E7BE8 MOV W2, W21
	0x032E7BEC MOV W3, W22
	0x032E7BF0 MOV X4, X31
	0x032E7BF4 BL 0x3233154
	0x032E7BF8 LDR X8, [X20]
	0x032E7BFC MOV X0, X20
	0x032E7C00 LDP X9, X1, [X8 + 0x168]
	0x032E7C04 BLR X9
	0x032E7C08 B 0x32E7C20
	0x032E7C0C MOV X0, X31
	0x032E7C10 MOV W2, W21
	0x032E7C14 MOV W3, W22
	0x032E7C18 MOV X4, X31
	0x032E7C1C BL 0x322EAE4
	0x032E7C20 ADD W8, W21, W22
	0x032E7C24 MOV X20, X0
	0x032E7C28 ADD W8, W8, 0x1
	0x032E7C2C CMP W24, 0xD
	0x032E7C30 STR W8, [X19 + 0x40]
	0x032E7C34 B.NE 0x32E7C98
	0x032E7C38 LDR W9, [X19 + 0x44]
	0x032E7C3C CMP W8, W9
	0x032E7C40 B.LT 0x32E7C64
	0x032E7C44 LDR X8, [X19]
	0x032E7C48 MOV X0, X19
	0x032E7C4C LDR X9, [X8 + 0x228]
	0x032E7C50 LDR X1, [X8 + 0x230]
	0x032E7C54 BLR X9
	0x032E7C58 CMP W0, 0x1
	0x032E7C5C B.LT 0x32E7C98
	0x032E7C60 LDR W8, [X19 + 0x40]
	0x032E7C64 LDR X9, [X19 + 0x38]
	0x032E7C68 CBZ X9, 0x32E7CB4
	0x032E7C6C LDR W10, [X9 + 0x18]
	0x032E7C70 CMP W8, W10
	0x032E7C74 B.CS 0x32E7CB0
	0x032E7C78 ADD X9, X9, W8, 0x1, SXTW
	0x032E7C7C LDRH W9, [X9 + 0x20]
	0x032E7C80 CMP W9, 0xA
	0x032E7C84 B.NE 0x32E7C98
	0x032E7C88 ADD W8, W8, 0x1
	0x032E7C8C STR W8, [X19 + 0x40]
	0x032E7C90 B 0x32E7C98
	0x032E7C94 MOV X20, X31
	0x032E7C98 MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+24]
	004 Compare X8, 0
	005 JumpIfEqual {35}
	006 Move X19, X0
	007 Call StreamReader.CheckAsyncTaskInProgress, X0
	008 Move W8, [X19+64]
	009 Move W9, [X19+68]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W8, [X19+86]
	012 Compare W8, 0
	013 JumpIfEqual {17}
	014 Move TEMP, 0
	015 Not TEMP
	016 Move W0, TEMP
	017 Move X8, [X19]
	018 Move X0, X19
	019 Move X9, [X8+552]
	020 Move X1, [X8+560]
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Compare W0, 0
	023 JumpIfEqual {14}
	024 Move W8, [X19+64]
	025 Move X9, [X19+56]
	026 Compare X9, 0
	027 JumpIfEqual {54}
	028 Move W10, [X9+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Add X8, X9, W8
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X30, [X31+16]
	033 Move X19, [X31+24]
	034 Return X0
	035 Move X0, 0xE36000
	036 Move X0, [X0+1208]
	037 Call 0x1C17D08
	038 Call 0x1C17F10
	039 Move X19, X0
	040 Move X0, 0xE40000
	041 Move X0, [X0+3616]
	042 Call 0x1C17D08
	043 Move X2, X0
	044 Move X0, X19
	045 Move X1, X31
	046 Move X3, X31
	047 Call ObjectDisposedException..ctor, X0, X1, X2
	048 Move X0, 0xE40000
	049 Move X0, [X0+3624]
	050 Call 0x1C17D08
	051 Move X1, X0
	052 Move X0, X19
	053 Call 0x1C17DEC
	054 Call 0x1C17F20
	055 Call 0x1C17F28

Method: System.Int32 Read()

Disassembly:
	0x032E7C9C LDP X20, X19, [X31 + 0x30]
	0x032E7CA0 LDP X22, X21, [X31 + 0x20]
	0x032E7CA4 LDP X24, X23, [X31 + 0x10]
	0x032E7CA8 LDR X30, [X31], #0x40
	0x032E7CAC RET
	0x032E7CB0 BL 0x1C16F28
	0x032E7CB4 BL 0x1C16F20
	0x032E7CB8 ADRP X0, 0xE35000
	0x032E7CBC LDR X0, [X0 + 0x4B8]
	0x032E7CC0 BL 0x1C16D08
	0x032E7CC4 BL 0x1C16F10
	0x032E7CC8 MOV X19, X0
	0x032E7CCC ADRP X0, 0xE3F000
	0x032E7CD0 LDR X0, [X0 + 0xE20]
	0x032E7CD4 BL 0x1C16D08
	0x032E7CD8 MOV X2, X0
	0x032E7CDC MOV X0, X19
	0x032E7CE0 MOV X1, X31
	0x032E7CE4 MOV X3, X31
	0x032E7CE8 BL 0x338C410
	0x032E7CEC ADRP X0, 0xE3F000
	0x032E7CF0 LDR X0, [X0 + 0xE58]
	0x032E7CF4 BL 0x1C16D08
	0x032E7CF8 MOV X1, X0
	0x032E7CFC MOV X0, X19
	0x032E7D00 BL 0x1C16DEC
	0x032E7D04 LDP W8, W9, [X0 + 0x40]
	0x032E7D08 CMP W8, W9
	0x032E7D0C CSET W0, LT
	0x032E7D10 RET
	0x032E7D14 STP X30, X21, [X31 - 0x20]!
	0x032E7D18 STP X20, X19, [X31 + 0x10]
	0x032E7D1C ADRP X19, 0x10F5000
	0x032E7D20 ADRP X21, 0xE3F000
	0x032E7D24 ADRP X20, 0xE3B000
	0x032E7D28 LDRB W8, [X19 + 0x9C2]
	0x032E7D2C LDR X21, [X21 + 0xE60]
	0x032E7D30 LDR X20, [X20 + 0xCC8]
	0x032E7D34 TBNZ X8, 0x0, 0x32E7D58
	0x032E7D38 ADRP X0, 0xE3F000
	0x032E7D3C LDR X0, [X0 + 0xE60]
	0x032E7D40 BL 0x1C16CF4
	0x032E7D44 ADRP X0, 0xE3B000
	0x032E7D48 LDR X0, [X0 + 0xCC8]
	0x032E7D4C BL 0x1C16CF4
	0x032E7D50 MOVZ W8, 0x1
	0x032E7D54 STRB W8, [X19 + 0x9C2]
	0x032E7D58 LDR X0, [X21]
	0x032E7D5C BL 0x1C16F10

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+24]
	004 Compare X8, 0
	005 JumpIfEqual {34}
	006 Move X19, X0
	007 Call StreamReader.CheckAsyncTaskInProgress, X0
	008 Move W8, [X19+64]
	009 Move W9, [X19+68]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X8, [X19]
	012 Move X0, X19
	013 Move X9, [X8+552]
	014 Move X1, [X8+560]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Compare W0, 0
	017 JumpIfEqual {31}
	018 Move W8, [X19+64]
	019 Move X9, [X19+56]
	020 Compare X9, 0
	021 JumpIfEqual {53}
	022 Move W10, [X9+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Add X9, X9, W8
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Add W8, W8, 1
	027 Move [X19+64], W8
	028 Move X30, [X31+16]
	029 Move X19, [X31+24]
	030 Return X0
	031 Move TEMP, 0
	032 Not TEMP
	033 Move W0, TEMP
	034 Move X0, 0xE36000
	035 Move X0, [X0+1208]
	036 Call 0x1C17D08
	037 Call 0x1C17F10
	038 Move X19, X0
	039 Move X0, 0xE40000
	040 Move X0, [X0+3616]
	041 Call 0x1C17D08
	042 Move X2, X0
	043 Move X0, X19
	044 Move X1, X31
	045 Move X3, X31
	046 Call ObjectDisposedException..ctor, X0, X1, X2
	047 Move X0, 0xE40000
	048 Move X0, [X0+3632]
	049 Call 0x1C17D08
	050 Move X1, X0
	051 Move X0, X19
	052 Call 0x1C17DEC
	053 Call 0x1C17F20
	054 Call 0x1C17F28

Method: System.Int32 Read(System.Char[] buffer, System.Int32 index, System.Int32 count)

Disassembly:
	0x032E7D60 MOV X19, X0
	0x032E7D64 BL 0x32E7D80
	0x032E7D68 LDR X8, [X20]
	0x032E7D6C LDR X8, [X8 + 0xB8]
	0x032E7D70 STR X19, [X8]
	0x032E7D74 LDP X20, X19, [X31 + 0x10]
	0x032E7D78 LDP X30, X21, [X31], #0x20
	0x032E7D7C RET
	0x032E7D80 STP X30, X21, [X31 - 0x20]!
	0x032E7D84 STP X20, X19, [X31 + 0x10]
	0x032E7D88 ADRP X21, 0x10F5000
	0x032E7D8C ADRP X20, 0xE3B000
	0x032E7D90 LDRB W8, [X21 + 0x9C3]
	0x032E7D94 LDR X20, [X20 + 0xCC8]
	0x032E7D98 MOV X19, X0
	0x032E7D9C TBNZ X8, 0x0, 0x32E7DC0
	0x032E7DA0 ADRP X0, 0xE3B000
	0x032E7DA4 LDR X0, [X0 + 0xCC8]
	0x032E7DA8 BL 0x1C16CF4
	0x032E7DAC ADRP X0, 0xE3B000
	0x032E7DB0 LDR X0, [X0 + 0xD10]
	0x032E7DB4 BL 0x1C16CF4
	0x032E7DB8 MOVZ W8, 0x1
	0x032E7DBC STRB W8, [X21 + 0x9C3]
	0x032E7DC0 LDR X0, [X20]
	0x032E7DC4 ADRP X20, 0xE3B000
	0x032E7DC8 LDR W8, [X0 + 0xE0]
	0x032E7DCC LDR X20, [X20 + 0xD10]
	0x032E7DD0 CBNZ W8, 0x32E7DD8
	0x032E7DD4 BL 0x1C16DFC
	0x032E7DD8 MOV X0, X19
	0x032E7DDC BL 0x32E6418
	0x032E7DE0 LDR X0, [X20]
	0x032E7DE4 LDR W8, [X0 + 0xE0]
	0x032E7DE8 CBNZ W8, 0x32E7DF4
	0x032E7DEC BL 0x1C16DFC
	0x032E7DF0 LDR X0, [X20]
	0x032E7DF4 LDR X8, [X0 + 0xB8]
	0x032E7DF8 MOVZ W9, 0x1
	0x032E7DFC LDR X8, [X8]
	0x032E7E00 STRB W9, [X19 + 0x57]
	0x032E7E04 STR X8, [X19 + 0x18]
	0x032E7E08 LDP X20, X19, [X31 + 0x10]
	0x032E7E0C LDP X30, X21, [X31], #0x20
	0x032E7E10 RET
	0x032E7E14 STR X30, [X31 - 0x20]!
	0x032E7E18 STP X20, X19, [X31 + 0x10]
	0x032E7E1C ADRP X20, 0x10F5000
	0x032E7E20 ADRP X19, 0xE3B000
	0x032E7E24 LDRB W8, [X20 + 0x9C4]
	0x032E7E28 LDR X19, [X19 + 0xD10]
	0x032E7E2C TBNZ X8, 0x0, 0x32E7E44
	0x032E7E30 ADRP X0, 0xE3B000
	0x032E7E34 LDR X0, [X0 + 0xD10]
	0x032E7E38 BL 0x1C16CF4
	0x032E7E3C MOVZ W8, 0x1
	0x032E7E40 STRB W8, [X20 + 0x9C4]
	0x032E7E44 LDR X0, [X19]
	0x032E7E48 LDR W8, [X0 + 0xE0]
	0x032E7E4C CBNZ W8, 0x32E7E58
	0x032E7E50 BL 0x1C16DFC
	0x032E7E54 LDR X0, [X19]
	0x032E7E58 LDR X8, [X0 + 0xB8]
	0x032E7E5C LDP X20, X19, [X31 + 0x10]
	0x032E7E60 LDR X0, [X8]
	0x032E7E64 LDR X30, [X31], #0x20
	0x032E7E68 RET
	0x032E7E6C MOV X0, X31
	0x032E7E70 B 0x3242C30
	0x032E7E74 RET
	0x032E7E78 MOVN W0, 0x0
	0x032E7E7C RET
	0x032E7E80 MOVN W0, 0x0
	0x032E7E84 RET
	0x032E7E88 MOV W0, W31
	0x032E7E8C RET
	0x032E7E90 MOV X0, X31
	0x032E7E94 RET
	0x032E7E98 STR X30, [X31 - 0x20]!
	0x032E7E9C STP X20, X19, [X31 + 0x10]
	0x032E7EA0 ADRP X19, 0x10F5000
	0x032E7EA4 ADRP X20, 0xE0E000
	0x032E7EA8 LDRB W8, [X19 + 0x9C5]
	0x032E7EAC LDR X20, [X20 + 0x278]
	0x032E7EB0 TBNZ X8, 0x0, 0x32E7EC8
	0x032E7EB4 ADRP X0, 0xE0E000
	0x032E7EB8 LDR X0, [X0 + 0x278]
	0x032E7EBC BL 0x1C16CF4
	0x032E7EC0 MOVZ W8, 0x1
	0x032E7EC4 STRB W8, [X19 + 0x9C5]
	0x032E7EC8 LDR X8, [X20]
	0x032E7ECC LDP X20, X19, [X31 + 0x10]
	0x032E7ED0 LDR X8, [X8 + 0xB8]
	0x032E7ED4 LDR X0, [X8]
	0x032E7ED8 LDR X30, [X31], #0x20
	0x032E7EDC RET
	0x032E7EE0 MOV W0, W31
	0x032E7EE4 RET
	0x032E7EE8 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x10F6000
	008 Move W8, [X23+2491]
	009 Move W20, W3
	010 Move W19, W2
	011 Move X22, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xE3C000
	018 Move X0, [X0+1400]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+2491], W8
	022 Compare X22, 0
	023 JumpIfEqual {49}
	024 Move TEMP, X20
	025 And TEMP, TEMP, -2147483648
	026 Compare TEMP, -2147483648
	027 JumpIfEqual {66}
	028 Move TEMP, X19
	029 And TEMP, TEMP, -2147483648
	030 Compare TEMP, -2147483648
	031 JumpIfEqual {66}
	032 Move W9, [X22+24]
	033 Subtract W8, W9, W19
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, X31
	038 Call ThrowHelper.ThrowArgumentOutOfRangeException
	039 Add X8, X22, W19
	040 Move W2, W20
	041 Move X0, X21
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Add X1, X8, 32
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Move X0, 0xE12000
	050 Move X0, [X0+1320]
	051 Call 0x1C17D08
	052 Call 0x1C17F10
	053 Move X19, X0
	054 Move X0, 0xE38000
	055 Move X0, [X0+3912]
	056 Call 0x1C17D08
	057 Move X20, X0
	058 Move X0, 0xE40000
	059 Move X0, [X0+3136]
	060 Call 0x1C17D08
	061 Move X2, X0
	062 Move X0, X19
	063 Move X1, X20
	064 Move X3, X31
	065 Call ArgumentNullException..ctor, X0, X1, X2
	066 Move X8, 0xE35000
	067 Move X9, 0xE18000
	068 Move X8, [X8+1608]
	069 Move X9, [X9+304]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 NotImplemented "Instruction CSEL not yet implemented."
	072 Call 0x1C17D08
	073 Move X19, X0
	074 Move X0, 0xE15000
	075 Move X0, [X0+1888]
	076 Call 0x1C17D08
	077 Call 0x1C17F10
	078 Move X20, X0
	079 Move X0, 0xE35000
	080 Move X0, [X0+1648]
	081 Call 0x1C17D08
	082 Move X2, X0
	083 Move X0, X20
	084 Move X1, X19
	085 Move X3, X31
	086 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	087 Move X0, 0xE40000
	088 Move X0, [X0+3640]
	089 Call 0x1C17D08
	090 Move X1, X0
	091 Move X0, X20
	092 Call 0x1C17DEC
	093 Move X0, 0xE15000
	094 Move X0, [X0+1400]
	095 Call 0x1C17D08
	096 Call 0x1C17F10
	097 Move X19, X0
	098 Move X0, 0xE35000
	099 Move X0, [X0+1888]
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X19
	103 Move X2, X31
	104 Call ArgumentException..ctor, X0, X1
	105 Move X0, 0xE40000
	106 Move X0, [X0+3640]
	107 Call 0x1C17D08
	108 Move X1, X0
	109 Move X0, X19
	110 Call 0x1C17DEC

Method: System.Int32 ReadSpan(System.Span`1<System.Char> buffer)

Disassembly:
	0x032E7EEC STP X20, X19, [X31 + 0x10]
	0x032E7EF0 ADRP X20, 0x10F5000
	0x032E7EF4 LDRB W8, [X20 + 0x9C6]
	0x032E7EF8 MOV X19, X0
	0x032E7EFC TBNZ X8, 0x0, 0x32E7F14
	0x032E7F00 ADRP X0, 0xE3A000
	0x032E7F04 LDR X0, [X0 + 0xD08]
	0x032E7F08 BL 0x1C16CF4
	0x032E7F0C MOVZ W8, 0x1
	0x032E7F10 STRB W8, [X20 + 0x9C6]
	0x032E7F14 LDR X0, [X19 + 0x68]
	0x032E7F18 CBZ X0, 0x32E7F34
	0x032E7F1C MOV X1, X31
	0x032E7F20 BL 0x33ED11C
	0x032E7F24 TBZ X0, 0x0, 0x32E7F38
	0x032E7F28 LDP X20, X19, [X31 + 0x10]
	0x032E7F2C LDR X30, [X31], #0x20
	0x032E7F30 RET
	0x032E7F34 BL 0x1C16F20
	0x032E7F38 ADRP X8, 0xE3A000
	0x032E7F3C LDR X8, [X8 + 0xD08]
	0x032E7F40 LDR X0, [X8]
	0x032E7F44 BL 0x19903D0
	0x032E7F48 BL 0x32E7F4C
	0x032E7F4C STP X30, X19, [X31 - 0x10]!
	0x032E7F50 ADRP X0, 0xE0C000
	0x032E7F54 LDR X0, [X0 + 0x5B0]
	0x032E7F58 BL 0x1C16D08
	0x032E7F5C BL 0x1C16F10
	0x032E7F60 MOV X19, X0
	0x032E7F64 ADRP X0, 0xE3F000
	0x032E7F68 LDR X0, [X0 + 0xDF0]
	0x032E7F6C BL 0x1C16D08
	0x032E7F70 MOV X1, X0
	0x032E7F74 MOV X0, X19
	0x032E7F78 MOV X2, X31
	0x032E7F7C BL 0x337DF1C
	0x032E7F80 ADRP X0, 0xE3F000
	0x032E7F84 LDR X0, [X0 + 0xE68]
	0x032E7F88 BL 0x1C16D08
	0x032E7F8C MOV X1, X0
	0x032E7F90 MOV X0, X19
	0x032E7F94 BL 0x1C16DEC
	0x032E7F98 STR X30, [X31 - 0x20]!
	0x032E7F9C STP X20, X19, [X31 + 0x10]
	0x032E7FA0 ADRP X19, 0x10F5000
	0x032E7FA4 ADRP X20, 0xE3B000
	0x032E7FA8 LDRB W8, [X19 + 0x9C7]
	0x032E7FAC LDR X20, [X20 + 0x9D8]
	0x032E7FB0 TBNZ X8, 0x0, 0x32E7FC8
	0x032E7FB4 ADRP X0, 0xE3B000
	0x032E7FB8 LDR X0, [X0 + 0x9D8]
	0x032E7FBC BL 0x1C16CF4
	0x032E7FC0 MOVZ W8, 0x1
	0x032E7FC4 STRB W8, [X19 + 0x9C7]
	0x032E7FC8 LDR X0, [X20]
	0x032E7FCC LDR W8, [X0 + 0xE0]
	0x032E7FD0 CBNZ W8, 0x32E7FD8
	0x032E7FD4 BL 0x1C16DFC
	0x032E7FD8 LDP X20, X19, [X31 + 0x10]
	0x032E7FDC MOV X0, X31
	0x032E7FE0 LDR X30, [X31], #0x20
	0x032E7FE4 B 0x3247D44
	0x032E7FE8 STP X30, X21, [X31 - 0x20]!
	0x032E7FEC STP X20, X19, [X31 + 0x10]
	0x032E7FF0 ADRP X21, 0x10F5000
	0x032E7FF4 ADRP X20, 0xE0D000
	0x032E7FF8 LDRB W8, [X21 + 0x9C8]
	0x032E7FFC LDR X20, [X20 + 0x7B8]
	0x032E8000 MOV X19, X0
	0x032E8004 TBNZ X8, 0x0, 0x32E8028
	0x032E8008 ADRP X0, 0xE0C000
	0x032E800C LDR X0, [X0 + 0x7B8]
	0x032E8010 BL 0x1C16CF4
	0x032E8014 ADRP X0, 0xE3E000
	0x032E8018 LDR X0, [X0 + 0xE70]
	0x032E801C BL 0x1C16CF4
	0x032E8020 MOVZ W8, 0x1
	0x032E8024 STRB W8, [X21 + 0x9C8]
	0x032E8028 LDR X0, [X20]
	0x032E802C LDR W8, [X0 + 0xE0]
	0x032E8030 CBNZ W8, 0x32E8038
	0x032E8034 BL 0x1C16DFC
	0x032E8038 ADRP X21, 0x10F0000
	0x032E803C LDRB W8, [X21 + 0xF1D]
	0x032E8040 CBNZ W8, 0x32E8058
	0x032E8044 ADRP X0, 0xE0C000
	0x032E8048 LDR X0, [X0 + 0x7B8]
	0x032E804C BL 0x1C16CF4
	0x032E8050 MOVZ W8, 0x1
	0x032E8054 STRB W8, [X21 + 0xF1D]
	0x032E8058 LDR X0, [X20]
	0x032E805C ADRP X21, 0xE3E000
	0x032E8060 LDR W8, [X0 + 0xE0]
	0x032E8064 LDR X21, [X21 + 0xE70]
	0x032E8068 CBNZ W8, 0x32E8074
	0x032E806C BL 0x1C16DFC
	0x032E8070 LDR X0, [X20]
	0x032E8074 LDR X8, [X0 + 0xB8]
	0x032E8078 LDR X8, [X8 + 0x30]
	0x032E807C STR X8, [X19 + 0x68]
	0x032E8080 LDR X0, [X21]
	0x032E8084 LDR W8, [X0 + 0xE0]
	0x032E8088 CBNZ W8, 0x32E8090
	0x032E808C BL 0x1C16DFC
	0x032E8090 MOV X0, X19
	0x032E8094 LDP X20, X19, [X31 + 0x10]
	0x032E8098 MOV X1, X31
	0x032E809C LDP X30, X21, [X31], #0x20
	0x032E80A0 B 0x32E80A4
	0x032E80A4 STR X30, [X31 - 0x30]!
	0x032E80A8 STP X22, X21, [X31 + 0x10]
	0x032E80AC STP X20, X19, [X31 + 0x20]
	0x032E80B0 ADRP X22, 0x10F4000
	0x032E80B4 ADRP X21, 0xE3E000
	0x032E80B8 LDRB W8, [X22 + 0x9DF]
	0x032E80BC LDR X21, [X21 + 0xE70]
	0x032E80C0 MOV X19, X1
	0x032E80C4 MOV X20, X0
	0x032E80C8 TBNZ X8, 0x0, 0x32E80E0
	0x032E80CC ADRP X0, 0xE3E000
	0x032E80D0 LDR X0, [X0 + 0xE70]
	0x032E80D4 BL 0x1C16CF4
	0x032E80D8 MOVZ W8, 0x1
	0x032E80DC STRB W8, [X22 + 0x9DF]
	0x032E80E0 LDR X0, [X21]
	0x032E80E4 LDR W8, [X0 + 0xE0]
	0x032E80E8 CBNZ W8, 0x32E80F4
	0x032E80EC BL 0x1C16DFC
	0x032E80F0 LDR X0, [X21]
	0x032E80F4 LDR X8, [X0 + 0xB8]
	0x032E80F8 MOV X0, X31
	0x032E80FC LDR X8, [X8 + 0x8]
	0x032E8100 STR X8, [X20 + 0x18]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X22, 0x10F6000
	015 Move W8, [X22+2492]
	016 Move X19, X2
	017 Move X20, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0xE3C000
	024 Move X0, [X0+2328]
	025 Call 0x1C17CF4
	026 Move X0, 0xE3C000
	027 Move X0, [X0+424]
	028 Call 0x1C17CF4
	029 Move X0, 0xE3C000
	030 Move X0, [X0+1400]
	031 Call 0x1C17CF4
	032 Move X0, 0xE3C000
	033 Move X0, [X0+1416]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X22+2492], W8
	037 Move [X31+8], X31
	038 Move [X31+16], X31
	039 Move X8, [X21+24]
	040 Compare X8, 0
	041 JumpIfEqual {136}
	042 Move X23, 0xE3C000
	043 Move X24, 0xE3C000
	044 Move X23, [X23+424]
	045 Move X24, [X24+2328]
	046 Move X0, X21
	047 Call StreamReader.CheckAsyncTaskInProgress, X0
	048 Move W26, W31
	049 Move W22, W31
	050 Move [X31+28], W31
	051 Move W25, W19
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W9, [X21+64]
	054 Move W8, [X21+68]
	055 Subtract W0, W8, W9
	056 Move X26, [X23]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X0, X31
	059 Call ThrowHelper.ThrowArgumentOutOfRangeException
	060 Move X0, [X26+32]
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Subtract W2, W19, W22
	068 Add X1, X20, W22
	069 Add X3, X31, 28
	070 Move X0, X21
	071 Call StreamReader.ReadBuffer, X0, X1, X2
	072 Compare W0, 0
	073 JumpIfEqual {121}
	074 Move W26, [X31+28]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction CSEL not yet implemented."
	077 And W31, W26, 255
	078 Move X28, [X21+56]
	079 Compare X28, 0
	080 JumpIfEqual {90}
	081 NotImplemented "Instruction LDRSW not yet implemented."
	082 Move W8, [X28+24]
	083 Subtract W8, W8, W29
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X0, X31
	086 Call ThrowHelper.ThrowArgumentOutOfRangeException
	087 Add X8, X28, X29
	088 Add X9, X8, 32
	089 Move W8, W27
	090 Move X0, X31
	091 Call ThrowHelper.ThrowArgumentOutOfRangeException
	092 Move X9, X31
	093 Move W8, W31
	094 Move X28, [X23]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move [X31+8], X9
	097 Move [X31+16], W8
	098 Move [X31+20], W31
	099 Move X0, X31
	100 Call ThrowHelper.ThrowArgumentOutOfRangeException
	101 Move X0, [X28+32]
	102 Move W8, [X0+309]
	103 Move TEMP, X8
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfEqual {108}
	107 Call 0x1C5D684
	108 Move X3, [X24]
	109 Subtract W2, W19, W22
	110 Add X1, X20, W22
	111 Add X0, X31, 8
	112 Call Span`1<Char>.CopyTo, X0, X1
	113 Move W8, [X21+64]
	114 Add W8, W8, W27
	115 Move [X21+64], W8
	116 Move W8, [X21+86]
	117 Add W22, W27, W22
	118 Subtract W25, W25, W27
	119 Compare W8, 0
	120 JumpIfEqual {52}
	121 Move W0, W22
	122 Move X20, [X31+112]
	123 Move X19, [X31+120]
	124 Move X22, [X31+96]
	125 Move X21, [X31+104]
	126 Move X24, [X31+80]
	127 Move X23, [X31+88]
	128 Move X26, [X31+64]
	129 Move X25, [X31+72]
	130 Move X28, [X31+48]
	131 Move X27, [X31+56]
	132 Move X29, [X31+32]
	133 Move X30, [X31+40]
	134 Add X31, X31, 128
	135 Return X0
	136 Move X0, 0xE35000
	137 Move X0, [X0+1208]
	138 Call 0x1C17D08
	139 Call 0x1C17F10
	140 Move X19, X0
	141 Move X0, 0xE3F000
	142 Move X0, [X0+3616]
	143 Call 0x1C17D08
	144 Move X2, X0
	145 Move X0, X19
	146 Move X1, X31
	147 Move X3, X31
	148 Call ObjectDisposedException..ctor, X0, X1, X2
	149 Move X0, 0xE3F000
	150 Move X0, [X0+3648]
	151 Call 0x1C17D08
	152 Move X1, X0
	153 Move X0, X19
	154 Call 0x1C17DEC

Method: System.String ReadToEnd()

Disassembly:
	0x032E8414 MOV X0, X22
	0x032E8418 LDR X9, [X8 + 0x348]
	0x032E841C LDR X1, [X8 + 0x350]
	0x032E8420 LDR X23, [X23 + 0x8D8]
	0x032E8424 BLR X9
	0x032E8428 STR X0, [X20 + 0x40]
	0x032E842C LDR X0, [X23]
	0x032E8430 CMP W21, 0x80
	0x032E8434 MOVZ W8, 0x80
	0x032E8438 CSEL W21, W21, W8, GT
	0x032E843C MOV W1, W21
	0x032E8440 BL 0x1C16D6C
	0x032E8444 LDR X8, [X20 + 0x38]
	0x032E8448 STR X0, [X20 + 0x50]
	0x032E844C CBZ X8, 0x32E84E8
	0x032E8450 LDR X9, [X8]
	0x032E8454 ADRP X22, 0xE0B000
	0x032E8458 MOV X0, X8
	0x032E845C MOV W1, W21
	0x032E8460 LDR X10, [X9 + 0x358]
	0x032E8464 LDR X2, [X9 + 0x360]
	0x032E8468 LDR X22, [X22 + 0x618]
	0x032E846C BLR X10
	0x032E8470 LDR X8, [X22]
	0x032E8474 MOV W1, W0
	0x032E8478 MOV X0, X8
	0x032E847C BL 0x1C16D6C
	0x032E8480 MOV X8, X0
	0x032E8484 LDR X0, [X20 + 0x30]
	0x032E8488 STR X8, [X20 + 0x48]
	0x032E848C STR W21, [X20 + 0x5C]
	0x032E8490 CBZ X0, 0x32E84E8
	0x032E8494 LDR X8, [X0]
	0x032E8498 LDP X9, X1, [X8 + 0x1B8]
	0x032E849C BLR X9
	0x032E84A0 TBZ X0, 0x0, 0x32E84C8
	0x032E84A4 LDR X0, [X20 + 0x30]
	0x032E84A8 CBZ X0, 0x32E84E8
	0x032E84AC LDR X8, [X0]
	0x032E84B0 LDP X9, X1, [X8 + 0x1F8]
	0x032E84B4 BLR X9
	0x032E84B8 CMP X0, 0x1
	0x032E84BC B.LT 0x32E84C8
	0x032E84C0 MOVZ W8, 0x1
	0x032E84C4 STRB W8, [X20 + 0x61]
	0x032E84C8 ORN W8, W31, W19, 0x0
	0x032E84CC AND W8, W8, 0x1
	0x032E84D0 STRB W8, [X20 + 0x62]
	0x032E84D4 LDP X20, X19, [X31 + 0x30]
	0x032E84D8 LDP X22, X21, [X31 + 0x20]
	0x032E84DC LDP X24, X23, [X31 + 0x10]
	0x032E84E0 LDR X30, [X31], #0x40
	0x032E84E4 RET
	0x032E84E8 BL 0x1C16F20
	0x032E84EC STR X30, [X31 - 0x30]!
	0x032E84F0 STP X22, X21, [X31 + 0x10]
	0x032E84F4 STP X20, X19, [X31 + 0x20]
	0x032E84F8 ADRP X21, 0x10F4000
	0x032E84FC ADRP X22, 0xE39000
	0x032E8500 LDRB W8, [X21 + 0x9CB]
	0x032E8504 LDR X22, [X22 + 0xD08]
	0x032E8508 MOV X19, X1
	0x032E850C MOV X20, X0
	0x032E8510 TBNZ X8, 0x0, 0x32E8528
	0x032E8514 ADRP X0, 0xE39000
	0x032E8518 LDR X0, [X0 + 0xD08]
	0x032E851C BL 0x1C16CF4
	0x032E8520 MOVZ W8, 0x1
	0x032E8524 STRB W8, [X21 + 0x9CB]
	0x032E8528 LDR X0, [X22]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x10F5000
	007 Move W8, [X20+2493]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE0C000
	014 Move X0, [X0+2288]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2493], W8
	018 Move X8, [X19+24]
	019 Compare X8, 0
	020 JumpIfEqual {61}
	021 Move X20, 0xE0C000
	022 Move X20, [X20+2288]
	023 Move X0, X19
	024 Call StreamReader.CheckAsyncTaskInProgress, X0
	025 Move X0, [X20]
	026 Move W22, [X19+64]
	027 Move W21, [X19+68]
	028 Call 0x1C17F10
	029 Subtract W1, W21, W22
	030 Move X2, X31
	031 Move X20, X0
	032 Call StringBuilder..ctor, X0, X1
	033 Compare X20, 0
	034 JumpIfEqual {80}
	035 Move W8, [X19+68]
	036 Move W2, [X19+64]
	037 Move X1, [X19+56]
	038 Move X0, X20
	039 Move X4, X31
	040 Subtract W3, W8, W2
	041 Call StringBuilder.Append, X0, X1, X2, X3
	042 Move W8, [X19+68]
	043 Move X9, [X19]
	044 Move X0, X19
	045 Move [X19+64], W8
	046 Move X8, [X9+552]
	047 Move X1, [X9+560]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move W8, [X19+68]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X8, [X20]
	052 Move X0, X20
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X2, [X8+360]
	058 Move X1, [X8+368]
	059 Move X30, [X31+48]
	060 CallNoReturn X2
	061 Move X0, 0xE35000
	062 Move X0, [X0+1208]
	063 Call 0x1C17D08
	064 Call 0x1C17F10
	065 Move X19, X0
	066 Move X0, 0xE3F000
	067 Move X0, [X0+3616]
	068 Call 0x1C17D08
	069 Move X2, X0
	070 Move X0, X19
	071 Move X1, X31
	072 Move X3, X31
	073 Call ObjectDisposedException..ctor, X0, X1, X2
	074 Move X0, 0xE3F000
	075 Move X0, [X0+3664]
	076 Call 0x1C17D08
	077 Move X1, X0
	078 Move X0, X19
	079 Call 0x1C17DEC
	080 Call 0x1C17F20

Method: System.Void CompressBuffer(System.Int32 n)

Disassembly:
	0x032E852C LDR W8, [X0 + 0xE0]
	0x032E8530 CBNZ W8, 0x32E8538
	0x032E8534 BL 0x1C16DFC
	0x032E8538 BL 0x32E7F98
	0x032E853C MOV X3, X0
	0x032E8540 MOV X0, X20
	0x032E8544 MOV X1, X19
	0x032E8548 LDP X20, X19, [X31 + 0x20]
	0x032E854C LDP X22, X21, [X31 + 0x10]
	0x032E8550 MOVZ W4, 0x400
	0x032E8554 MOV W2, W31
	0x032E8558 LDR X30, [X31], #0x30
	0x032E855C B 0x32E8560
	0x032E8560 STP X30, X25, [X31 - 0x40]!
	0x032E8564 STP X24, X23, [X31 + 0x10]
	0x032E8568 STP X22, X21, [X31 + 0x20]
	0x032E856C STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move W8, [X0+72]
	006 Move X0, [X0+48]
	007 Move W3, W31
	008 Move X5, X31
	009 Subtract W4, W8, W1
	010 Move X2, X0
	011 Move W20, W1
	012 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	013 Move W8, [X19+72]
	014 Subtract W8, W8, W20
	015 Move [X19+72], W8
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Return 

Method: System.Void DetectEncoding()

Disassembly:
	0x032E8570 ADRP X25, 0x10F4000
	0x032E8574 ADRP X24, 0xE0C000
	0x032E8578 LDRB W8, [X25 + 0x9CD]
	0x032E857C LDR X24, [X24 + 0x7B8]
	0x032E8580 MOV W19, W4
	0x032E8584 MOV X20, X3
	0x032E8588 MOV W23, W2
	0x032E858C MOV X22, X1
	0x032E8590 MOV X21, X0
	0x032E8594 TBNZ X8, 0x0, 0x32E85C4
	0x032E8598 ADRP X0, 0xE39000
	0x032E859C LDR X0, [X0 + 0x670]
	0x032E85A0 BL 0x1C16CF4
	0x032E85A4 ADRP X0, 0xE0C000
	0x032E85A8 LDR X0, [X0 + 0x7B8]
	0x032E85AC BL 0x1C16CF4
	0x032E85B0 ADRP X0, 0xE3E000
	0x032E85B4 LDR X0, [X0 + 0xE70]
	0x032E85B8 BL 0x1C16CF4
	0x032E85BC MOVZ W8, 0x1
	0x032E85C0 STRB W8, [X25 + 0x9CD]
	0x032E85C4 LDR X0, [X24]
	0x032E85C8 LDR W8, [X0 + 0xE0]
	0x032E85CC CBNZ W8, 0x32E85D4
	0x032E85D0 BL 0x1C16DFC
	0x032E85D4 ADRP X25, 0x10F0000
	0x032E85D8 LDRB W8, [X25 + 0xF1D]
	0x032E85DC CBNZ W8, 0x32E85F4
	0x032E85E0 ADRP X0, 0xE0C000
	0x032E85E4 LDR X0, [X0 + 0x7B8]
	0x032E85E8 BL 0x1C16CF4
	0x032E85EC MOVZ W8, 0x1
	0x032E85F0 STRB W8, [X25 + 0xF1D]
	0x032E85F4 LDR X0, [X24]
	0x032E85F8 ADRP X25, 0xE3E000
	0x032E85FC LDR W8, [X0 + 0xE0]
	0x032E8600 LDR X25, [X25 + 0xE70]
	0x032E8604 CBNZ W8, 0x32E8610
	0x032E8608 BL 0x1C16DFC
	0x032E860C LDR X0, [X24]
	0x032E8610 LDR X8, [X0 + 0xB8]
	0x032E8614 LDR X8, [X8 + 0x30]
	0x032E8618 STR X8, [X21 + 0x68]
	0x032E861C LDR X0, [X25]
	0x032E8620 LDR W8, [X0 + 0xE0]
	0x032E8624 CBNZ W8, 0x32E862C
	0x032E8628 BL 0x1C16DFC
	0x032E862C MOV X0, X21
	0x032E8630 BL 0x32E8814
	0x032E8634 CBZ X22, 0x32E86B8
	0x032E8638 CBZ X20, 0x32E86D8
	0x032E863C LDR W8, [X22 + 0x10]
	0x032E8640 CBZ W8, 0x32E870C
	0x032E8644 CMP W19, 0x0
	0x032E8648 B.LE 0x32E8740
	0x032E864C ADRP X8, 0xE39000
	0x032E8650 LDR X8, [X8 + 0x670]
	0x032E8654 ANDS W31, W23, 0x1
	0x032E8658 MOVZ W9, 0x6
	0x032E865C LDR X0, [X8]
	0x032E8660 MOVZ W8, 0x2
	0x032E8664 CSEL W23, W9, W8, NE
	0x032E8668 BL 0x1C16F10
	0x032E866C MOVZ W3, 0x2
	0x032E8670 MOVZ W4, 0x1
	0x032E8674 MOVZ W5, 0x1000
	0x032E8678 MOVZ W6, 0x8000000
	0x032E867C MOV X1, X22
	0x032E8680 MOV W2, W23
	0x032E8684 MOV X7, X31
	0x032E8688 MOV X24, X0
	0x032E868C BL 0x32F8A08
	0x032E8690 MOV X0, X21
	0x032E8694 MOV X1, X24
	0x032E8698 MOV X2, X20
	0x032E869C MOV W3, W19
	0x032E86A0 LDP X20, X19, [X31 + 0x30]
	0x032E86A4 LDP X22, X21, [X31 + 0x20]
	0x032E86A8 LDP X24, X23, [X31 + 0x10]
	0x032E86AC MOV W4, W31
	0x032E86B0 LDP X30, X25, [X31], #0x40
	0x032E86B4 B 0x32E83B4
	0x032E86B8 ADRP X0, 0xE10000
	0x032E86BC LDR X0, [X0 + 0x528]
	0x032E86C0 BL 0x1C16D08
	0x032E86C4 BL 0x1C16F10
	0x032E86C8 MOV X19, X0
	0x032E86CC ADRP X0, 0xE16000
	0x032E86D0 LDR X0, [X0 + 0x120]
	0x032E86D4 B 0x32E86F4
	0x032E86D8 ADRP X0, 0xE10000
	0x032E86DC LDR X0, [X0 + 0x528]
	0x032E86E0 BL 0x1C16D08
	0x032E86E4 BL 0x1C16F10
	0x032E86E8 MOV X19, X0
	0x032E86EC ADRP X0, 0xE3A000
	0x032E86F0 LDR X0, [X0 + 0xB20]
	0x032E86F4 BL 0x1C16D08
	0x032E86F8 MOV X1, X0
	0x032E86FC MOV X0, X19
	0x032E8700 MOV X2, X31
	0x032E8704 BL 0x330E100
	0x032E8708 B 0x32E8784
	0x032E870C ADRP X0, 0xE13000
	0x032E8710 LDR X0, [X0 + 0x578]
	0x032E8714 BL 0x1C16D08
	0x032E8718 BL 0x1C16F10
	0x032E871C MOV X19, X0
	0x032E8720 ADRP X0, 0xE3E000
	0x032E8724 LDR X0, [X0 + 0xE10]
	0x032E8728 BL 0x1C16D08
	0x032E872C MOV X1, X0
	0x032E8730 MOV X0, X19
	0x032E8734 MOV X2, X31
	0x032E8738 BL 0x3314A68
	0x032E873C B 0x32E8784
	0x032E8740 ADRP X0, 0xE13000
	0x032E8744 LDR X0, [X0 + 0x760]
	0x032E8748 BL 0x1C16D08
	0x032E874C BL 0x1C16F10
	0x032E8750 MOV X19, X0
	0x032E8754 ADRP X0, 0xE36000
	0x032E8758 LDR X0, [X0 + 0xF58]
	0x032E875C BL 0x1C16D08
	0x032E8760 MOV X20, X0
	0x032E8764 ADRP X0, 0xE3E000
	0x032E8768 LDR X0, [X0 + 0xD28]
	0x032E876C BL 0x1C16D08
	0x032E8770 MOV X2, X0
	0x032E8774 MOV X0, X19
	0x032E8778 MOV X1, X20
	0x032E877C MOV X3, X31
	0x032E8780 BL 0x3311888
	0x032E8784 ADRP X0, 0xE3E000
	0x032E8788 LDR X0, [X0 + 0xE80]
	0x032E878C BL 0x1C16D08
	0x032E8790 MOV X1, X0
	0x032E8794 MOV X0, X19
	0x032E8798 BL 0x1C16DEC
	0x032E879C STP X30, X23, [X31 - 0x30]!
	0x032E87A0 STP X22, X21, [X31 + 0x10]
	0x032E87A4 STP X20, X19, [X31 + 0x20]
	0x032E87A8 ADRP X22, 0x10F4000
	0x032E87AC ADRP X23, 0xE39000
	0x032E87B0 LDRB W8, [X22 + 0x9CC]
	0x032E87B4 LDR X23, [X23 + 0xD08]
	0x032E87B8 MOV W21, W2
	0x032E87BC MOV X19, X1
	0x032E87C0 MOV X20, X0
	0x032E87C4 TBNZ X8, 0x0, 0x32E87DC
	0x032E87C8 ADRP X0, 0xE39000
	0x032E87CC LDR X0, [X0 + 0xD08]
	0x032E87D0 BL 0x1C16CF4
	0x032E87D4 MOVZ W8, 0x1
	0x032E87D8 STRB W8, [X22 + 0x9CC]
	0x032E87DC LDR X0, [X23]
	0x032E87E0 LDR W8, [X0 + 0xE0]
	0x032E87E4 CBNZ W8, 0x32E87EC
	0x032E87E8 BL 0x1C16DFC
	0x032E87EC BL 0x32E7F98
	0x032E87F0 AND W2, W21, 0x1
	0x032E87F4 MOV X3, X0
	0x032E87F8 MOV X0, X20
	0x032E87FC MOV X1, X19
	0x032E8800 LDP X20, X19, [X31 + 0x20]
	0x032E8804 LDP X22, X21, [X31 + 0x10]
	0x032E8808 MOVZ W4, 0x400
	0x032E880C LDP X30, X23, [X31], #0x30
	0x032E8810 B 0x32E8560
	0x032E8814 STP X30, X21, [X31 - 0x20]!
	0x032E8818 STP X20, X19, [X31 + 0x10]
	0x032E881C ADRP X21, 0x10F4000
	0x032E8820 ADRP X20, 0xE3E000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10F5000
	005 Move W8, [X20+2494]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xE15000
	012 Move X0, [X0+2264]
	013 Call 0x1C17CF4
	014 Move X0, 0xE3B000
	015 Move X0, [X0+1784]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2494], W8
	019 Move W10, [X19+72]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X8, [X19+48]
	022 Move [X19+84], W31
	023 Compare X8, 0
	024 JumpIfEqual {164}
	025 Move W9, [X8+24]
	026 Compare W9, 0
	027 JumpIfEqual {165}
	028 Move W11, [X8+32]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W12, [X8+33]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X31
	035 Call Encoding.get_BigEndianUnicode
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W12, [X8+33]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W10, [X8+34]
	042 Compare W10, 0
	043 JumpIfNotEqual {48}
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W8, [X8+35]
	046 Compare W8, 0
	047 JumpIfEqual {150}
	048 Move X0, X31
	049 Call Encoding.get_Unicode
	050 Move W8, [X19+72]
	051 Move X2, [X19+48]
	052 Move [X19+32], X0
	053 Move W1, 2
	054 Subtract W4, W8, 2
	055 Move X0, X2
	056 Move W3, W31
	057 Move X5, X31
	058 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	059 Move TEMP, 1
	060 Not TEMP
	061 Move W8, TEMP
	062 Move W9, [X19+72]
	063 Move X0, [X19+32]
	064 Add W8, W9, W8
	065 Move [X19+72], W8
	066 Compare X0, 0
	067 JumpIfEqual {164}
	068 Move X8, [X0]
	069 Move X9, [X8+824]
	070 Move X1, [X8+832]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X8, [X19+48]
	073 Move [X19+40], X0
	074 Compare X8, 0
	075 JumpIfEqual {164}
	076 Move X0, [X19+32]
	077 Compare X0, 0
	078 JumpIfEqual {164}
	079 Move X9, [X0]
	080 Move W1, [X8+24]
	081 Move X8, [X9+872]
	082 Move X2, [X9+880]
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move W8, [X19+80]
	085 Move W20, W0
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X8, 0xE15000
	088 Move X8, [X8+2264]
	089 Move W1, W20
	090 Move X0, [X8]
	091 Call 0x1C17D6C
	092 Move [X19+56], X0
	093 Move [X19+80], W20
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move W8, 1
	096 Move [X19+84], W8
	097 Move X20, [X31+16]
	098 Move X19, [X31+24]
	099 Move X30, [X31+32]
	100 Return 
	101 NotImplemented "Instruction CMP not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move W10, [X8+33]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move W8, [X8+34]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X0, X31
	109 Call Encoding.get_UTF8
	110 Move W8, [X19+72]
	111 Move X2, [X19+48]
	112 Move [X19+32], X0
	113 Move W1, 3
	114 Subtract W4, W8, 3
	115 Move X0, X2
	116 Move W3, W31
	117 Move X5, X31
	118 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	119 Move TEMP, 2
	120 Not TEMP
	121 Move W8, TEMP
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Compare W11, 0
	124 JumpIfNotEqual {97}
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move W10, [X8+33]
	127 Compare W10, 0
	128 JumpIfNotEqual {97}
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move W10, [X8+34]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move W8, [X8+35]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X8, 0xE3B000
	136 Move X8, [X8+1784]
	137 Move X0, [X8]
	138 Call 0x1C17F10
	139 Move W1, 1
	140 Move W2, 1
	141 Move X3, X31
	142 Move X20, X0
	143 Call UTF32Encoding..ctor, X0, X1, X2
	144 Move W8, [X19+72]
	145 Move X0, [X19+48]
	146 Move [X19+32], X20
	147 Move W1, 4
	148 Subtract W4, W8, 4
	149 Move X2, X0
	150 Move X0, X31
	151 Call Encoding.get_UTF32
	152 Move W8, [X19+72]
	153 Move X2, [X19+48]
	154 Move [X19+32], X0
	155 Move W1, 4
	156 Subtract W4, W8, 4
	157 Move X0, X2
	158 Move W3, W31
	159 Move X5, X31
	160 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	161 Move TEMP, 3
	162 Not TEMP
	163 Move W8, TEMP
	164 Call 0x1C17F20
	165 Call 0x1C17F28

Method: System.Boolean IsPreamble()

Disassembly:
	0x032E8824 LDRB W8, [X21 + 0x9DE]
	0x032E8828 LDR X20, [X20 + 0xE70]
	0x032E882C MOV X19, X0
	0x032E8830 TBNZ X8, 0x0, 0x32E8848
	0x032E8834 ADRP X0, 0xE3E000
	0x032E8838 LDR X0, [X0 + 0xE70]
	0x032E883C BL 0x1C16CF4
	0x032E8840 MOVZ W8, 0x1
	0x032E8844 STRB W8, [X21 + 0x9DE]
	0x032E8848 LDR X0, [X20]
	0x032E884C LDR W8, [X0 + 0xE0]
	0x032E8850 CBNZ W8, 0x32E885C
	0x032E8854 BL 0x1C16DFC
	0x032E8858 LDR X0, [X20]
	0x032E885C LDR X8, [X0 + 0xB8]
	0x032E8860 MOV X0, X31
	0x032E8864 LDR X8, [X8 + 0x8]
	0x032E8868 STR X8, [X19 + 0x18]
	0x032E886C BL 0x33C1548
	0x032E8870 STR X0, [X19 + 0x20]
	0x032E8874 MOV X0, X19
	0x032E8878 MOV X1, X31
	0x032E887C BL 0x33C011C
	0x032E8880 STR X31, [X19 + 0x28]
	0x032E8884 LDP X20, X19, [X31 + 0x10]
	0x032E8888 LDP X30, X21, [X31], #0x20
	0x032E888C RET
	0x032E8890 STP X30, X21, [X31 - 0x20]!
	0x032E8894 STP X20, X19, [X31 + 0x10]
	0x032E8898 ADRP X21, 0x10F4000
	0x032E889C ADRP X20, 0xE12000
	0x032E88A0 LDRB W8, [X21 + 0x9CF]
	0x032E88A4 LDR X20, [X20 + 0xC10]
	0x032E88A8 MOV X19, X0
	0x032E88AC TBNZ X8, 0x0, 0x32E88C4
	0x032E88B0 ADRP X0, 0xE12000
	0x032E88B4 LDR X0, [X0 + 0xC10]
	0x032E88B8 BL 0x1C16CF4
	0x032E88BC MOVZ W8, 0x1
	0x032E88C0 STRB W8, [X21 + 0x9CF]
	0x032E88C4 LDR X8, [X19]
	0x032E88C8 MOVZ W1, 0x1
	0x032E88CC MOV X0, X19
	0x032E88D0 LDP X9, X2, [X8 + 0x1C8]
	0x032E88D4 BLR X9
	0x032E88D8 LDR X0, [X20]
	0x032E88DC LDR W8, [X0 + 0xE0]
	0x032E88E0 CBNZ W8, 0x32E88E8
	0x032E88E4 BL 0x1C16DFC
	0x032E88E8 MOV X0, X19
	0x032E88EC LDP X20, X19, [X31 + 0x10]
	0x032E88F0 MOV X1, X31
	0x032E88F4 LDP X30, X21, [X31], #0x20
	0x032E88F8 B 0x33B3E9C
	0x032E88FC SUB X31, X31, 0x40
	0x032E8900 STP X30, X19, [X31 + 0x30]
	0x032E8904 AND W8, W1, 0x1
	0x032E8908 ADD X9, X31, 0x28
	0x032E890C ADD X10, X31, 0x24
	0x032E8910 STR X0, [X31 + 0x28]
	0x032E8914 STRB W8, [X31 + 0x24]
	0x032E8918 STP X31, X9, [X31 + 0x8]
	0x032E891C STR X10, [X31 + 0x18]
	0x032E8920 LDR X8, [X0 + 0x30]
	0x032E8924 CBZ X8, 0x32E8940
	0x032E8928 TBZ X1, 0x0, 0x32E8940
	0x032E892C BL 0x32E7EE8
	0x032E8930 LDR X0, [X31 + 0x28]
	0x032E8934 MOVZ W1, 0x1
	0x032E8938 MOVZ W2, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10F5000
	005 Move W8, [X20+2495]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE3B000
	012 Move X0, [X0+2752]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2495], W8
	016 Move W8, [X19+85]
	017 Compare W8, 0
	018 JumpIfEqual {63}
	019 Move X0, [X19+32]
	020 Compare X0, 0
	021 JumpIfEqual {73}
	022 Move X8, [X0]
	023 Move X9, [X8+424]
	024 Move X1, [X8+432]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move W8, [X19+72]
	027 Move W9, [X19+76]
	028 Move X20, X1
	029 Subtract W4, W8, W20
	030 NotImplemented "Instruction CSEL not yet implemented."
	031 Subtract W10, W8, W9
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X10, [X19+48]
	034 Compare X10, 0
	035 JumpIfEqual {73}
	036 Move W11, [X10+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X9, W9
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X12, X10, X9
	041 Move W12, [X12+32]
	042 Move W13, [X0]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add W9, W9, 1
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move [X19+76], W9
	047 Move W8, [X19+85]
	048 Compare W8, 0
	049 JumpIfEqual {63}
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, [X19+48]
	052 Move W1, W20
	053 Move W3, W31
	054 Move X5, X31
	055 Move X2, X0
	056 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	057 Move W8, [X19+72]
	058 Move W0, W31
	059 NotImplemented "Instruction STRH not yet implemented."
	060 Subtract W8, W8, W20
	061 Move [X19+72], W8
	062 Move [X19+76], W31
	063 Move W0, W31
	064 Move W0, W31
	065 Move [X19+76], W31
	066 Move [X19+85], W31
	067 Move W0, 1
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Return X0
	072 Call 0x1C17F28
	073 Call 0x1C17F20

Method: System.Int32 ReadBuffer()

Disassembly:
	0x032E893C BL 0x32E8990
	0x032E8940 ADD X0, X31, 0x8
	0x032E8944 BL 0x1BB72AC
	0x032E8948 LDP X30, X19, [X31 + 0x30]
	0x032E894C ADD X31, X31, 0x40
	0x032E8950 RET
	0x032E8954 CMP W1, 0x1
	0x032E8958 MOV X19, X0
	0x032E895C B.NE 0x32E897C
	0x032E8960 MOV X0, X19
	0x032E8964 BL 0x3EB1AD0
	0x032E8968 LDR X8, [X0]
	0x032E896C STR X8, [X31 + 0x8]
	0x032E8970 BL 0x3EB1AE0
	0x032E8974 B 0x32E8940
	0x032E8978 MOV X19, X0
	0x032E897C ADD X0, X31, 0x8
	0x032E8980 BL 0x1BB72AC
	0x032E8984 MOV X0, X19
	0x032E8988 BL 0x1D2C690
	0x032E898C BL 0x1990590
	0x032E8990 STR X30, [X31 - 0x30]!
	0x032E8994 STP X22, X21, [X31 + 0x10]
	0x032E8998 STP X20, X19, [X31 + 0x20]
	0x032E899C ADRP X22, 0x10F4000
	0x032E89A0 LDRB W8, [X22 + 0x9D0]
	0x032E89A4 MOV W21, W2
	0x032E89A8 MOV W19, W1
	0x032E89AC MOV X20, X0
	0x032E89B0 TBNZ X8, 0x0, 0x32E89C8
	0x032E89B4 ADRP X0, 0xE3A000
	0x032E89B8 LDR X0, [X0 + 0xAC0]
	0x032E89BC BL 0x1C16CF4
	0x032E89C0 MOVZ W8, 0x1
	0x032E89C4 STRB W8, [X22 + 0x9D0]
	0x032E89C8 LDR X8, [X20 + 0x30]
	0x032E89CC CBZ X8, 0x32E8AC0
	0x032E89D0 LDR W8, [X20 + 0x58]
	0x032E89D4 CBNZ W8, 0x32E89E0
	0x032E89D8 TBNZ X19, 0x0, 0x32E89E0
	0x032E89DC TBZ X21, 0x0, 0x32E8AAC
	0x032E89E0 LDRB W8, [X20 + 0x61]
	0x032E89E4 CBNZ W8, 0x32E8A2C
	0x032E89E8 LDR X0, [X20 + 0x38]
	0x032E89EC MOVZ W8, 0x1
	0x032E89F0 STRB W8, [X20 + 0x61]
	0x032E89F4 CBZ X0, 0x32E8ABC
	0x032E89F8 LDR X8, [X0]
	0x032E89FC LDP X9, X1, [X8 + 0x1A8]
	0x032E8A00 BLR X9
	0x032E8A04 MOV X2, X1
	0x032E8A08 CMP W2, 0x1
	0x032E8A0C B.LT 0x32E8A2C
	0x032E8A10 MOV X1, X0
	0x032E8A14 LDR X0, [X20 + 0x30]
	0x032E8A18 CBZ X0, 0x32E8ABC
	0x032E8A1C LDR X8, [X0]
	0x032E8A20 LDR X9, [X8 + 0x398]
	0x032E8A24 LDR X3, [X8 + 0x3A0]
	0x032E8A28 BLR X9
	0x032E8A2C LDR X0, [X20 + 0x40]
	0x032E8A30 CBZ X0, 0x32E8ABC
	0x032E8A34 LDR X8, [X0]
	0x032E8A38 LDR W3, [X20 + 0x58]
	0x032E8A3C LDP X4, X1, [X20 + 0x48]
	0x032E8A40 AND W6, W21, 0x1
	0x032E8A44 LDP X9, X7, [X8 + 0x1A8]
	0x032E8A48 MOV W2, W31
	0x032E8A4C MOV W5, W31
	0x032E8A50 BLR X9
	0x032E8A54 CMP W0, 0x1
	0x032E8A58 STR W31, [X20 + 0x58]
	0x032E8A5C B.LT 0x32E8A84
	0x032E8A60 MOV W3, W0
	0x032E8A64 LDR X0, [X20 + 0x30]
	0x032E8A68 CBZ X0, 0x32E8ABC
	0x032E8A6C LDR X8, [X0]
	0x032E8A70 LDR X1, [X20 + 0x48]
	0x032E8A74 MOV W2, W31
	0x032E8A78 LDR X9, [X8 + 0x388]
	0x032E8A7C LDR X4, [X8 + 0x390]
	0x032E8A80 BLR X9
	0x032E8A84 TBZ X19, 0x0, 0x32E8AAC
	0x032E8A88 LDR X0, [X20 + 0x30]
	0x032E8A8C CBZ X0, 0x32E8ABC
	0x032E8A90 LDR X8, [X0]
	0x032E8A94 LDP X20, X19, [X31 + 0x20]
	0x032E8A98 LDP X22, X21, [X31 + 0x10]
	0x032E8A9C LDR X2, [X8 + 0x298]
	0x032E8AA0 LDR X1, [X8 + 0x2A0]
	0x032E8AA4 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+85]
	005 Move X19, X0
	006 Move [X0+64], X31
	007 Compare W8, 0
	008 JumpIfEqual {10}
	009 Move W8, 1
	010 Move [X19+72], W31
	011 Move X0, [X19+24]
	012 Move X1, [X19+48]
	013 And W31, W8, 255
	014 Compare X1, 0
	015 JumpIfEqual {106}
	016 Compare X0, 0
	017 JumpIfEqual {106}
	018 Move X8, [X0]
	019 Move W2, [X19+76]
	020 Move W9, [X1+24]
	021 Move X10, [X8+856]
	022 Move X4, [X8+864]
	023 Subtract W3, W9, W2
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move W3, [X19+72]
	026 Compare W0, 0
	027 JumpIfEqual {84}
	028 Add W0, W3, W0
	029 Move [X19+72], W0
	030 Compare X1, 0
	031 JumpIfEqual {106}
	032 Compare X0, 0
	033 JumpIfEqual {106}
	034 Move X8, [X0]
	035 Move W3, [X1+24]
	036 Move W2, W31
	037 Move X9, [X8+856]
	038 Move X4, [X8+864]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move [X19+72], W0
	041 Compare W0, 0
	042 JumpIfEqual {100}
	043 Move X8, [X19+48]
	044 Compare X8, 0
	045 JumpIfEqual {106}
	046 Move W8, [X8+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSET not yet implemented."
	049 Move X0, X19
	050 Move [X19+86], W8
	051 Call StreamReader.IsPreamble, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {59}
	056 Move W20, [X19+68]
	057 Compare W20, 0
	058 JumpIfEqual {83}
	059 Move W8, [X19+84]
	060 Compare W8, 0
	061 JumpIfEqual {66}
	062 Move W8, [X19+72]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X0, X19
	065 Call StreamReader.DetectEncoding, X0
	066 Move X0, [X19+40]
	067 Compare X0, 0
	068 JumpIfEqual {106}
	069 Move X8, [X0]
	070 Move W20, [X19+68]
	071 Move W3, [X19+72]
	072 Move X1, [X19+48]
	073 Move X4, [X19+56]
	074 Move W2, W31
	075 Move X9, [X8+440]
	076 Move X6, [X8+448]
	077 Move W5, W20
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Add W20, W0, W20
	080 Move [X19+68], W20
	081 Compare W20, 0
	082 JumpIfNotEqual {101}
	083 Move W8, [X19+85]
	084 Move W20, [X19+68]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X0, [X19+40]
	087 Compare X0, 0
	088 JumpIfEqual {106}
	089 Move X8, [X0]
	090 Move X1, [X19+48]
	091 Move X4, [X19+56]
	092 Move W2, W31
	093 Move W5, W20
	094 Move X9, [X8+440]
	095 Move X6, [X8+448]
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Add W20, W0, W20
	098 Move [X19+72], X31
	099 Move [X19+68], W20
	100 Move W20, [X19+68]
	101 Move W0, W20
	102 Move X20, [X31+16]
	103 Move X19, [X31+24]
	104 Move X30, [X31+32]
	105 Return X0
	106 Call 0x1C17F20

Method: System.Int32 ReadBuffer(System.Span`1<System.Char> userBuffer, out System.Boolean readToUserBuffer)

Disassembly:
	0x032E8104 BL 0x33C1548
	0x032E8108 STR X0, [X20 + 0x20]
	0x032E810C MOV X0, X20
	0x032E8110 MOV X1, X31
	0x032E8114 BL 0x33C011C
	0x032E8118 STR X19, [X20 + 0x28]
	0x032E811C LDP X20, X19, [X31 + 0x20]
	0x032E8120 LDP X22, X21, [X31 + 0x10]
	0x032E8124 LDR X30, [X31], #0x30
	0x032E8128 RET
	0x032E812C STR X30, [X31 - 0x30]!
	0x032E8130 STP X22, X21, [X31 + 0x10]
	0x032E8134 STP X20, X19, [X31 + 0x20]
	0x032E8138 ADRP X21, 0x10F4000
	0x032E813C ADRP X22, 0xE39000
	0x032E8140 LDRB W8, [X21 + 0x9C9]
	0x032E8144 LDR X22, [X22 + 0xD08]
	0x032E8148 MOV X19, X1
	0x032E814C MOV X20, X0
	0x032E8150 TBNZ X8, 0x0, 0x32E8168
	0x032E8154 ADRP X0, 0xE39000
	0x032E8158 LDR X0, [X0 + 0xD08]
	0x032E815C BL 0x1C16CF4
	0x032E8160 MOVZ W8, 0x1
	0x032E8164 STRB W8, [X21 + 0x9C9]
	0x032E8168 LDR X0, [X22]
	0x032E816C LDR W8, [X0 + 0xE0]
	0x032E8170 CBNZ W8, 0x32E8178
	0x032E8174 BL 0x1C16DFC
	0x032E8178 BL 0x32E7F98
	0x032E817C MOV X2, X0
	0x032E8180 MOV X0, X20
	0x032E8184 MOV X1, X19
	0x032E8188 LDP X20, X19, [X31 + 0x20]
	0x032E818C LDP X22, X21, [X31 + 0x10]
	0x032E8190 MOVZ W3, 0x400
	0x032E8194 MOV W4, W31
	0x032E8198 LDR X30, [X31], #0x30
	0x032E819C B 0x32E81A0
	0x032E81A0 STP X30, X25, [X31 - 0x40]!
	0x032E81A4 STP X24, X23, [X31 + 0x10]
	0x032E81A8 STP X22, X21, [X31 + 0x20]
	0x032E81AC STP X20, X19, [X31 + 0x30]
	0x032E81B0 ADRP X25, 0x10F4000
	0x032E81B4 ADRP X24, 0xE0C000
	0x032E81B8 LDRB W8, [X25 + 0x9CA]
	0x032E81BC LDR X24, [X24 + 0x7B8]
	0x032E81C0 MOV W22, W4
	0x032E81C4 MOV W19, W3
	0x032E81C8 MOV X21, X2
	0x032E81CC MOV X20, X1
	0x032E81D0 MOV X23, X0
	0x032E81D4 TBNZ X8, 0x0, 0x32E81F8
	0x032E81D8 ADRP X0, 0xE0C000
	0x032E81DC LDR X0, [X0 + 0x7B8]
	0x032E81E0 BL 0x1C16CF4
	0x032E81E4 ADRP X0, 0xE3E000
	0x032E81E8 LDR X0, [X0 + 0xE70]
	0x032E81EC BL 0x1C16CF4
	0x032E81F0 MOVZ W8, 0x1
	0x032E81F4 STRB W8, [X25 + 0x9CA]
	0x032E81F8 LDR X0, [X24]
	0x032E81FC LDR W8, [X0 + 0xE0]
	0x032E8200 CBNZ W8, 0x32E8208
	0x032E8204 BL 0x1C16DFC
	0x032E8208 ADRP X25, 0x10F0000
	0x032E820C LDRB W8, [X25 + 0xF1D]
	0x032E8210 CBNZ W8, 0x32E8228
	0x032E8214 ADRP X0, 0xE0C000
	0x032E8218 LDR X0, [X0 + 0x7B8]
	0x032E821C BL 0x1C16CF4
	0x032E8220 MOVZ W8, 0x1
	0x032E8224 STRB W8, [X25 + 0xF1D]
	0x032E8228 LDR X0, [X24]
	0x032E822C ADRP X25, 0xE3E000
	0x032E8230 LDR W8, [X0 + 0xE0]
	0x032E8234 LDR X25, [X25 + 0xE70]
	0x032E8238 CBNZ W8, 0x32E8244
	0x032E823C BL 0x1C16DFC
	0x032E8240 LDR X0, [X24]
	0x032E8244 LDR X8, [X0 + 0xB8]
	0x032E8248 LDR X8, [X8 + 0x30]
	0x032E824C STR X8, [X23 + 0x68]
	0x032E8250 LDR X0, [X25]
	0x032E8254 LDR W8, [X0 + 0xE0]
	0x032E8258 CBNZ W8, 0x32E8260
	0x032E825C BL 0x1C16DFC
	0x032E8260 MOV X0, X23
	0x032E8264 MOV X1, X31
	0x032E8268 BL 0x32E80A4
	0x032E826C CBZ X20, 0x32E82B8
	0x032E8270 CBZ X21, 0x32E82B8
	0x032E8274 LDR X8, [X20]
	0x032E8278 MOV X0, X20
	0x032E827C LDP X9, X1, [X8 + 0x1D8]
	0x032E8280 BLR X9
	0x032E8284 TBZ X0, 0x0, 0x32E8310
	0x032E8288 CMP W19, 0x0
	0x032E828C B.LE 0x32E8344
	0x032E8290 AND W4, W22, 0x1
	0x032E8294 MOV X0, X23
	0x032E8298 MOV X1, X20
	0x032E829C MOV X2, X21
	0x032E82A0 MOV W3, W19
	0x032E82A4 LDP X20, X19, [X31 + 0x30]
	0x032E82A8 LDP X22, X21, [X31 + 0x20]
	0x032E82AC LDP X24, X23, [X31 + 0x10]
	0x032E82B0 LDP X30, X25, [X31], #0x40
	0x032E82B4 B 0x32E83B4
	0x032E82B8 ADRP X8, 0xE3A000
	0x032E82BC ADRP X9, 0xE3A000
	0x032E82C0 LDR X8, [X8 + 0xB20]
	0x032E82C4 LDR X9, [X9 + 0xD38]
	0x032E82C8 CMP X20, 0x0
	0x032E82CC CSEL X0, X9, X8, EQ
	0x032E82D0 BL 0x1C16D08
	0x032E82D4 MOV X19, X0
	0x032E82D8 ADRP X0, 0xE10000
	0x032E82DC LDR X0, [X0 + 0x528]
	0x032E82E0 BL 0x1C16D08
	0x032E82E4 BL 0x1C16F10
	0x032E82E8 MOV X1, X19
	0x032E82EC MOV X2, X31
	0x032E82F0 MOV X20, X0
	0x032E82F4 BL 0x330E100
	0x032E82F8 ADRP X0, 0xE3E000
	0x032E82FC LDR X0, [X0 + 0xE78]
	0x032E8300 BL 0x1C16D08
	0x032E8304 MOV X1, X0
	0x032E8308 MOV X0, X20
	0x032E830C BL 0x1C16DEC
	0x032E8310 ADRP X0, 0xE13000
	0x032E8314 LDR X0, [X0 + 0x578]
	0x032E8318 BL 0x1C16D08
	0x032E831C BL 0x1C16F10
	0x032E8320 MOV X19, X0
	0x032E8324 ADRP X0, 0xE3A000
	0x032E8328 LDR X0, [X0 + 0xD30]
	0x032E832C BL 0x1C16D08
	0x032E8330 MOV X1, X0
	0x032E8334 MOV X0, X19
	0x032E8338 MOV X2, X31
	0x032E833C BL 0x3314A68
	0x032E8340 B 0x32E8388
	0x032E8344 ADRP X0, 0xE13000
	0x032E8348 LDR X0, [X0 + 0x760]
	0x032E834C BL 0x1C16D08
	0x032E8350 BL 0x1C16F10
	0x032E8354 MOV X19, X0
	0x032E8358 ADRP X0, 0xE36000
	0x032E835C LDR X0, [X0 + 0xF58]
	0x032E8360 BL 0x1C16D08
	0x032E8364 MOV X20, X0
	0x032E8368 ADRP X0, 0xE3E000
	0x032E836C LDR X0, [X0 + 0xD28]
	0x032E8370 BL 0x1C16D08
	0x032E8374 MOV X2, X0
	0x032E8378 MOV X0, X19
	0x032E837C MOV X1, X20
	0x032E8380 MOV X3, X31
	0x032E8384 BL 0x3311888
	0x032E8388 ADRP X0, 0xE3E000
	0x032E838C LDR X0, [X0 + 0xE78]
	0x032E8390 BL 0x1C16D08
	0x032E8394 MOV X1, X0
	0x032E8398 MOV X0, X19
	0x032E839C BL 0x1C16DEC
	0x032E83A0 MOVZ W3, 0x400
	0x032E83A4 MOV W4, W31
	0x032E83A8 B 0x32E81A0
	0x032E83AC MOV W4, W31
	0x032E83B0 B 0x32E81A0
	0x032E83B4 STR X30, [X31 - 0x40]!
	0x032E83B8 STP X24, X23, [X31 + 0x10]
	0x032E83BC STP X22, X21, [X31 + 0x20]
	0x032E83C0 STP X20, X19, [X31 + 0x30]
	0x032E83C4 ADRP X24, 0x10F4000
	0x032E83C8 LDRB W8, [X24 + 0x9CE]
	0x032E83CC MOV W19, W4
	0x032E83D0 MOV W21, W3
	0x032E83D4 MOV X22, X2
	0x032E83D8 MOV X23, X1
	0x032E83DC MOV X20, X0
	0x032E83E0 TBNZ X8, 0x0, 0x32E8404
	0x032E83E4 ADRP X0, 0xE0B000
	0x032E83E8 LDR X0, [X0 + 0x618]
	0x032E83EC BL 0x1C16CF4
	0x032E83F0 ADRP X0, 0xE14000
	0x032E83F4 LDR X0, [X0 + 0x8D8]
	0x032E83F8 BL 0x1C16CF4
	0x032E83FC MOVZ W8, 0x1
	0x032E8400 STRB W8, [X24 + 0x9CE]
	0x032E8404 STP X23, X22, [X20 + 0x30]
	0x032E8408 CBZ X22, 0x32E84E8
	0x032E840C LDR X8, [X22]
	0x032E8410 ADRP X23, 0xE14000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x10F5000
	012 Move W8, [X21+2496]
	013 Move X23, X3
	014 Move X22, X2
	015 Move X20, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xE3F000
	022 Move X0, [X0+3656]
	023 Call 0x1C17CF4
	024 Move X0, 0xE3B000
	025 Move X0, [X0+424]
	026 Call 0x1C17CF4
	027 Move X0, 0xE3B000
	028 Move X0, [X0+1416]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2496], W8
	032 Move W8, [X19+85]
	033 Move [X19+64], X31
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Move [X19+72], W31
	037 Move W8, [X19+80]
	038 Move X27, 0xE3B000
	039 Move X27, [X27+424]
	040 And X21, X22, 0
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CSET not yet implemented."
	043 Move [X23], W8
	044 Move W8, [X19+85]
	045 Move X0, [X19+24]
	046 Move X1, [X19+48]
	047 Compare W8, 0
	048 JumpIfEqual {65}
	049 Compare X1, 0
	050 JumpIfEqual {233}
	051 Compare X0, 0
	052 JumpIfEqual {233}
	053 Move X8, [X0]
	054 Move W2, [X19+76]
	055 Move W9, [X1+24]
	056 Move X10, [X8+856]
	057 Move X4, [X8+864]
	058 Subtract W3, W9, W2
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move W24, [X19+72]
	061 Compare W0, 0
	062 JumpIfEqual {180}
	063 Add W0, W24, W0
	064 Move [X19+72], W0
	065 Compare X1, 0
	066 JumpIfEqual {233}
	067 Compare X0, 0
	068 JumpIfEqual {233}
	069 Move X8, [X0]
	070 Move W3, [X1+24]
	071 Move W2, W31
	072 Move X9, [X8+856]
	073 Move X4, [X8+864]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move [X19+72], W0
	076 Compare W0, 0
	077 JumpIfEqual {164}
	078 Move X8, [X19+48]
	079 Compare X8, 0
	080 JumpIfEqual {233}
	081 Move W8, [X8+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 NotImplemented "Instruction CSET not yet implemented."
	084 Move X0, X19
	085 Move [X19+86], W8
	086 Call StreamReader.IsPreamble, X0
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {94}
	091 Move W0, W31
	092 Compare W0, 0
	093 JumpIfEqual {44}
	094 Move W8, [X19+84]
	095 Compare W8, 0
	096 JumpIfEqual {105}
	097 Move W25, [X19+72]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X0, X19
	100 Call StreamReader.DetectEncoding, X0
	101 Move W8, [X19+80]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 NotImplemented "Instruction CSET not yet implemented."
	104 Move [X23], W8
	105 Move W25, [X19+72]
	106 Move [X19+64], W31
	107 Move W8, [X23]
	108 Move X24, [X19+40]
	109 Move X26, [X19+48]
	110 Compare W8, 0
	111 JumpIfEqual {120}
	112 Compare X26, 0
	113 JumpIfEqual {134}
	114 Move W8, [X26+24]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X0, X31
	117 Call ThrowHelper.ThrowArgumentOutOfRangeException
	118 Add X26, X26, 32
	119 Move W25, W25
	120 Compare X24, 0
	121 JumpIfEqual {233}
	122 Move X8, [X24]
	123 Move X4, [X19+56]
	124 Move X0, X24
	125 Move X1, X26
	126 Move X9, [X8+440]
	127 Move X6, [X8+448]
	128 Move W2, W31
	129 Move W3, W25
	130 Move W5, W31
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move W8, [X19+68]
	133 Add W8, W8, W0
	134 Compare W25, 0
	135 JumpIfEqual {138}
	136 Move X0, X31
	137 Call ThrowHelper.ThrowArgumentOutOfRangeException
	138 Move X26, X31
	139 Move X25, X31
	140 Move X8, [X27]
	141 Move X0, [X8+32]
	142 Move W8, [X0+309]
	143 Move TEMP, X8
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfEqual {148}
	147 Call 0x1C5D684
	148 Compare X24, 0
	149 JumpIfEqual {233}
	150 Move X8, [X24]
	151 Move X0, X24
	152 Move X1, X26
	153 Move X2, X25
	154 Move X9, [X8+488]
	155 Move X6, [X8+496]
	156 Move X3, X20
	157 Move X4, X21
	158 Move W5, W31
	159 NotImplemented "Instruction BLR not yet implemented."
	160 Move W8, W31
	161 Move [X19+68], W8
	162 Compare W0, 0
	163 JumpIfEqual {44}
	164 Move W8, [X19+86]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 NotImplemented "Instruction CSET not yet implemented."
	167 And W8, W8, W9
	168 Move [X19+86], W8
	169 Move X20, [X31+64]
	170 Move X19, [X31+72]
	171 Move X22, [X31+48]
	172 Move X21, [X31+56]
	173 Move X24, [X31+32]
	174 Move X23, [X31+40]
	175 Move X26, [X31+16]
	176 Move X25, [X31+24]
	177 Move X30, [X31+80]
	178 Move X27, [X31+88]
	179 Return X0
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move W8, [X23]
	182 Move X22, [X19+40]
	183 Move X23, [X19+48]
	184 Compare W8, 0
	185 JumpIfEqual {194}
	186 Compare X23, 0
	187 JumpIfEqual {209}
	188 Move W8, [X23+24]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X0, X31
	191 Call ThrowHelper.ThrowArgumentOutOfRangeException
	192 Add X23, X23, 32
	193 Move W0, W31
	194 Compare X22, 0
	195 JumpIfEqual {233}
	196 Move X8, [X22]
	197 Move X4, [X19+56]
	198 Move X0, X22
	199 Move X1, X23
	200 Move X9, [X8+440]
	201 Move X6, [X8+448]
	202 Move W2, W31
	203 Move W3, W24
	204 Move W5, W31
	205 NotImplemented "Instruction BLR not yet implemented."
	206 Move W8, [X19+68]
	207 Add W8, W8, W0
	208 Move [X19+68], W8
	209 Move X0, X31
	210 Call ThrowHelper.ThrowArgumentOutOfRangeException
	211 Move X24, X31
	212 Move X8, [X27]
	213 Move X0, [X8+32]
	214 Move W8, [X0+309]
	215 Move TEMP, X8
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfEqual {220}
	219 Call 0x1C5D684
	220 Compare X22, 0
	221 JumpIfEqual {233}
	222 Move X8, [X22]
	223 Move X0, X22
	224 Move X1, X23
	225 Move X2, X24
	226 Move X9, [X8+488]
	227 Move X6, [X8+496]
	228 Move X3, X20
	229 Move X4, X21
	230 Move W5, W31
	231 NotImplemented "Instruction BLR not yet implemented."
	232 Move [X19+68], W31
	233 Call 0x1C17F20

Method: System.String ReadLine()

Disassembly:
	0x032E8AA8 BR X2
	0x032E8AAC LDP X20, X19, [X31 + 0x20]
	0x032E8AB0 LDP X22, X21, [X31 + 0x10]
	0x032E8AB4 LDR X30, [X31], #0x30
	0x032E8AB8 RET
	0x032E8ABC BL 0x1C16F20
	0x032E8AC0 ADRP X0, 0xE34000
	0x032E8AC4 LDR X0, [X0 + 0x4B8]
	0x032E8AC8 BL 0x1C16D08
	0x032E8ACC BL 0x1C16F10
	0x032E8AD0 MOV X19, X0
	0x032E8AD4 ADRP X0, 0xE3E000
	0x032E8AD8 LDR X0, [X0 + 0xE88]
	0x032E8ADC BL 0x1C16D08
	0x032E8AE0 MOV X2, X0
	0x032E8AE4 MOV X0, X19
	0x032E8AE8 MOV X1, X31
	0x032E8AEC MOV X3, X31
	0x032E8AF0 BL 0x338C410
	0x032E8AF4 ADRP X0, 0xE3E000
	0x032E8AF8 LDR X0, [X0 + 0xE90]
	0x032E8AFC BL 0x1C16D08
	0x032E8B00 MOV X1, X0
	0x032E8B04 MOV X0, X19
	0x032E8B08 BL 0x1C16DEC
	0x032E8B0C STP X30, X19, [X31 - 0x10]!
	0x032E8B10 MOV X19, X0
	0x032E8B14 BL 0x32E7EE8
	0x032E8B18 MOVZ W1, 0x1
	0x032E8B1C MOVZ W2, 0x1
	0x032E8B20 MOV X0, X19
	0x032E8B24 LDP X30, X19, [X31], #0x10
	0x032E8B28 B 0x32E8990
	0x032E8B2C STP X30, X21, [X31 - 0x20]!
	0x032E8B30 STP X20, X19, [X31 + 0x10]
	0x032E8B34 MOV W20, W1
	0x032E8B38 MOV X19, X0
	0x032E8B3C AND W21, W1, 0x1
	0x032E8B40 BL 0x32E7EE8
	0x032E8B44 STRB W21, [X19 + 0x60]
	0x032E8B48 TBZ X20, 0x0, 0x32E8B64
	0x032E8B4C MOV X0, X19
	0x032E8B50 LDP X20, X19, [X31 + 0x10]
	0x032E8B54 MOVZ W1, 0x1
	0x032E8B58 MOV W2, W31
	0x032E8B5C LDP X30, X21, [X31], #0x20
	0x032E8B60 B 0x32E8990
	0x032E8B64 LDP X20, X19, [X31 + 0x10]
	0x032E8B68 LDP X30, X21, [X31], #0x20
	0x032E8B6C RET
	0x032E8B70 LDRB W8, [X0 + 0x62]
	0x032E8B74 CMP W8, 0x0
	0x032E8B78 CSET W0, EQ
	0x032E8B7C RET
	0x032E8B80 STR X30, [X31 - 0x20]!
	0x032E8B84 STP X20, X19, [X31 + 0x10]
	0x032E8B88 MOV W20, W1
	0x032E8B8C MOV X19, X0
	0x032E8B90 BL 0x32E7EE8
	0x032E8B94 LDP W8, W9, [X19 + 0x58]
	0x032E8B98 CMP W8, W9
	0x032E8B9C B.NE 0x32E8BB4
	0x032E8BA0 MOV X0, X19
	0x032E8BA4 MOV W1, W31
	0x032E8BA8 MOV W2, W31
	0x032E8BAC BL 0x32E8990
	0x032E8BB0 LDR W8, [X19 + 0x58]
	0x032E8BB4 LDR X9, [X19 + 0x50]
	0x032E8BB8 CBZ X9, 0x32E8C04
	0x032E8BBC LDR W10, [X9 + 0x18]
	0x032E8BC0 CMP W8, W10
	0x032E8BC4 B.CS 0x32E8C08
	0x032E8BC8 ADD X9, X9, W8, 0x1, SXTW
	0x032E8BCC STRH W20, [X9 + 0x20]
	0x032E8BD0 LDRB W9, [X19 + 0x60]
	0x032E8BD4 ADD W8, W8, 0x1
	0x032E8BD8 STR W8, [X19 + 0x58]
	0x032E8BDC CBZ W9, 0x32E8BF8
	0x032E8BE0 MOV X0, X19
	0x032E8BE4 LDP X20, X19, [X31 + 0x10]
	0x032E8BE8 MOVZ W1, 0x1
	0x032E8BEC MOV W2, W31
	0x032E8BF0 LDR X30, [X31], #0x20
	0x032E8BF4 B 0x32E8990
	0x032E8BF8 LDP X20, X19, [X31 + 0x10]
	0x032E8BFC LDR X30, [X31], #0x20
	0x032E8C00 RET
	0x032E8C04 BL 0x1C16F20
	0x032E8C08 BL 0x1C16F28
	0x032E8C0C STR X30, [X31 - 0x30]!
	0x032E8C10 STP X22, X21, [X31 + 0x10]
	0x032E8C14 STP X20, X19, [X31 + 0x20]
	0x032E8C18 ADRP X21, 0x10F4000
	0x032E8C1C ADRP X22, 0xE3A000
	0x032E8C20 LDRB W8, [X21 + 0x9D1]
	0x032E8C24 LDR X22, [X22 + 0x1D8]
	0x032E8C28 MOV X20, X1
	0x032E8C2C MOV X19, X0
	0x032E8C30 TBNZ X8, 0x0, 0x32E8C48
	0x032E8C34 ADRP X0, 0xE3A000
	0x032E8C38 LDR X0, [X0 + 0x1D8]
	0x032E8C3C BL 0x1C16CF4
	0x032E8C40 MOVZ W8, 0x1
	0x032E8C44 STRB W8, [X21 + 0x9D1]
	0x032E8C48 LDR X1, [X22]
	0x032E8C4C MOV X0, X20
	0x032E8C50 BL 0x25BF134
	0x032E8C54 MOV X2, X0
	0x032E8C58 MOV X0, X19
	0x032E8C5C LDP X20, X19, [X31 + 0x20]
	0x032E8C60 LDP X22, X21, [X31 + 0x10]
	0x032E8C64 MOV X3, X1
	0x032E8C68 MOV X1, X2
	0x032E8C6C MOV X2, X3
	0x032E8C70 MOV W3, W31
	0x032E8C74 MOV X4, X31
	0x032E8C78 LDR X30, [X31], #0x30
	0x032E8C7C B 0x32EDE70
	0x032E8C80 STP X30, X23, [X31 - 0x30]!
	0x032E8C84 STP X22, X21, [X31 + 0x10]
	0x032E8C88 STP X20, X19, [X31 + 0x20]
	0x032E8C8C ADRP X23, 0x10F4000
	0x032E8C90 LDRB W8, [X23 + 0x9D2]
	0x032E8C94 MOV W20, W3
	0x032E8C98 MOV W21, W2
	0x032E8C9C MOV X22, X1
	0x032E8CA0 MOV X19, X0
	0x032E8CA4 TBNZ X8, 0x0, 0x32E8CC8
	0x032E8CA8 ADRP X0, 0xE3E000
	0x032E8CAC LDR X0, [X0 + 0xE98]
	0x032E8CB0 BL 0x1C16CF4
	0x032E8CB4 ADRP X0, 0xE39000
	0x032E8CB8 LDR X0, [X0 + 0x858]
	0x032E8CBC BL 0x1C16CF4
	0x032E8CC0 MOVZ W8, 0x1
	0x032E8CC4 STRB W8, [X23 + 0x9D2]
	0x032E8CC8 CBZ X22, 0x32E8D64
	0x032E8CCC TBNZ X21, 0x1F, 0x32E8DAC
	0x032E8CD0 TBNZ X20, 0x1F, 0x32E8DCC
	0x032E8CD4 LDR W9, [X22 + 0x18]
	0x032E8CD8 SUB W8, W9, W21
	0x032E8CDC CMP W8, W20
	0x032E8CE0 B.LT 0x32E8E14
	0x032E8CE4 ADRP X10, 0xE3E000
	0x032E8CE8 LDR X10, [X10 + 0xE98]
	0x032E8CEC LDR X0, [X10]
	0x032E8CF0 LDR X10, [X0 + 0x38]
	0x032E8CF4 CBNZ X10, 0x32E8D04
	0x032E8CF8 BL 0x1C5C6E0
	0x032E8CFC LDR W9, [X22 + 0x18]
	0x032E8D00 SUB W8, W9, W21

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x10F5000
	009 Move W8, [X20+2497]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xE0C000
	016 Move X0, [X0+2288]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2497], W8
	020 Move X8, [X19+24]
	021 Compare X8, 0
	022 JumpIfEqual {142}
	023 Move X0, X19
	024 Call StreamReader.CheckAsyncTaskInProgress, X0
	025 Move W8, [X19+64]
	026 Move W9, [X19+68]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X8, [X19]
	029 Move X0, X19
	030 Move X9, [X8+552]
	031 Move X1, [X8+560]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Compare W0, 0
	034 JumpIfEqual {130}
	035 Move X23, 0xE0C000
	036 Move X23, [X23+2288]
	037 Move X20, X31
	038 Move X1, [X19+56]
	039 Compare X1, 0
	040 JumpIfEqual {141}
	041 Move W21, [X19+64]
	042 Move W8, [X1+24]
	043 Move W22, W31
	044 Add W9, W21, W22
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Add X9, X1, W9
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W9, [X19+68]
	051 Add W22, W22, 1
	052 Add W10, W21, W22
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Subtract W21, W9, W21
	055 Compare X20, 0
	056 JumpIfNotEqual {65}
	057 Move X0, [X23]
	058 Call 0x1C17F10
	059 Add W1, W21, 80
	060 Move X2, X31
	061 Move X20, X0
	062 Call StringBuilder..ctor, X0, X1
	063 Compare X20, 0
	064 JumpIfEqual {141}
	065 Move W2, [X19+64]
	066 Move X1, [X19+56]
	067 Move X0, X20
	068 Move W3, W21
	069 Move X4, X31
	070 Call StringBuilder.Append, X0, X1, X2, X3
	071 Move X8, [X19]
	072 Move X0, X19
	073 Move X9, [X8+552]
	074 Move X1, [X8+560]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X8, [X20]
	078 Move X0, X20
	079 Move X20, [X31+48]
	080 Move X19, [X31+56]
	081 Move X22, [X31+32]
	082 Move X21, [X31+40]
	083 Move X2, [X8+360]
	084 Move X1, [X8+368]
	085 Move X24, [X31+16]
	086 Move X23, [X31+24]
	087 Move X30, [X31+64]
	088 CallNoReturn X2
	089 Compare X20, 0
	090 JumpIfEqual {101}
	091 Move X0, X20
	092 Move W2, W21
	093 Move W3, W22
	094 Move X4, X31
	095 Call StringBuilder.Append, X0, X1, X2, X3
	096 Move X8, [X20]
	097 Move X0, X20
	098 Move X9, [X8+360]
	099 Move X1, [X8+368]
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Move X0, X31
	102 Move W2, W21
	103 Move W3, W22
	104 Move X4, X31
	105 Call String.CreateString, X0, X1, X2, X3
	106 Add W8, W21, W22
	107 Move X20, X0
	108 Add W8, W8, 1
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move [X19+64], W8
	111 Move W9, [X19+68]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X8, [X19]
	114 Move X0, X19
	115 Move X9, [X8+552]
	116 Move X1, [X8+560]
	117 NotImplemented "Instruction BLR not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move W8, [X19+64]
	120 Move X9, [X19+56]
	121 Compare X9, 0
	122 JumpIfEqual {141}
	123 Move W10, [X9+24]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Add X9, X9, W8
	126 NotImplemented "Instruction LDRH not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Add W8, W8, 1
	129 Move [X19+64], W8
	130 Move X20, X31
	131 Move X0, X20
	132 Move X20, [X31+48]
	133 Move X19, [X31+56]
	134 Move X22, [X31+32]
	135 Move X21, [X31+40]
	136 Move X24, [X31+16]
	137 Move X23, [X31+24]
	138 Move X30, [X31+64]
	139 Return X0
	140 Call 0x1C17F28
	141 Call 0x1C17F20
	142 Move X0, 0xE35000
	143 Move X0, [X0+1208]
	144 Call 0x1C17D08
	145 Call 0x1C17F10
	146 Move X19, X0
	147 Move X0, 0xE3F000
	148 Move X0, [X0+3616]
	149 Call 0x1C17D08
	150 Move X2, X0
	151 Move X0, X19
	152 Move X1, X31
	153 Move X3, X31
	154 Call ObjectDisposedException..ctor, X0, X1, X2
	155 Move X0, 0xE3F000
	156 Move X0, [X0+3672]
	157 Call 0x1C17D08
	158 Move X1, X0
	159 Move X0, X19
	160 Call 0x1C17DEC

Method: System.Boolean DataAvailable()

Disassembly:
	0x032E8D04 ADRP X23, 0xE39000
	0x032E8D08 LDR X23, [X23 + 0x858]
	0x032E8D0C CMP W9, W21
	0x032E8D10 B.CC 0x32E8D1C

ISIL:
	001 Move W8, [X0+64]
	002 Move W9, [X0+68]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.Void .cctor()

Disassembly:
	0x032E8D14 CMP W8, W20
	0x032E8D18 B.CS 0x32E8D24
	0x032E8D1C MOV X0, X31
	0x032E8D20 BL 0x339D6EC
	0x032E8D24 LDR X2, [X23]
	0x032E8D28 ADD X8, X22, W21, 0x1, UXTW
	0x032E8D2C ADD X0, X8, 0x20
	0x032E8D30 MOV W1, W20
	0x032E8D34 BL 0x25FB81C
	0x032E8D38 MOV X2, X0
	0x032E8D3C MOV X0, X19
	0x032E8D40 LDP X20, X19, [X31 + 0x20]
	0x032E8D44 LDP X22, X21, [X31 + 0x10]
	0x032E8D48 MOV X3, X1
	0x032E8D4C MOV X1, X2
	0x032E8D50 MOV X2, X3
	0x032E8D54 MOV W3, W31
	0x032E8D58 MOV X4, X31
	0x032E8D5C LDP X30, X23, [X31], #0x30
	0x032E8D60 B 0x32EDE70
	0x032E8D64 ADRP X0, 0xE10000
	0x032E8D68 LDR X0, [X0 + 0x528]
	0x032E8D6C BL 0x1C16D08
	0x032E8D70 BL 0x1C16F10
	0x032E8D74 MOV X19, X0
	0x032E8D78 ADRP X0, 0xE36000
	0x032E8D7C LDR X0, [X0 + 0xF48]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x10F5000
	006 Move X21, 0xE3F000
	007 Move X20, 0xE3B000
	008 Move W8, [X19+2498]
	009 Move X21, [X21+3680]
	010 Move X20, [X20+3272]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xE3F000
	016 Move X0, [X0+3680]
	017 Call 0x1C17CF4
	018 Move X0, 0xE3B000
	019 Move X0, [X0+3272]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+2498], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X19, X0
	026 Call NullStreamReader..ctor, X0
	027 Move X8, [X20]
	028 Move X8, [X8+184]
	029 Move [X8], X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 

