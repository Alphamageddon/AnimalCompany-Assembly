Type: System.IO.Path

Method: System.String Combine(System.String path1, System.String path2)

Disassembly:
	0x032FDE04 BL 0x3228058
	0x032FDE08 MOV X20, X0
	0x032FDE0C MOV X0, X31
	0x032FDE10 BL 0x33C1A14
	0x032FDE14 TBNZ X0, 0x0, 0x32FDE60
	0x032FDE18 ADRP X8, 0xDF6000
	0x032FDE1C LDR X8, [X8 + 0x988]
	0x032FDE20 MOV X0, X19
	0x032FDE24 MOV X2, X31
	0x032FDE28 LDR X1, [X8]
	0x032FDE2C BL 0x3226EF8
	0x032FDE30 TBZ X0, 0x0, 0x32FDE60
	0x032FDE34 CBZ X20, 0x32FDEAC
	0x032FDE38 LDR W8, [X20 + 0x10]
	0x032FDE3C CMP W8, 0x1
	0x032FDE40 B.LT 0x32FDE60
	0x032FDE44 MOV X0, X20
	0x032FDE48 MOV W1, W31
	0x032FDE4C MOV X2, X31
	0x032FDE50 BL 0x3222A1C
	0x032FDE54 AND W8, W0, 0xFFFF
	0x032FDE58 CMP W8, 0x2F
	0x032FDE5C B.NE 0x32FDE80
	0x032FDE60 MOV X0, X20
	0x032FDE64 LDP X20, X19, [X31 + 0x50]
	0x032FDE68 LDP X22, X21, [X31 + 0x40]
	0x032FDE6C LDP X24, X23, [X31 + 0x30]
	0x032FDE70 LDP X26, X25, [X31 + 0x20]
	0x032FDE74 LDP X28, X27, [X31 + 0x10]
	0x032FDE78 LDR X30, [X31], #0x60
	0x032FDE7C RET
	0x032FDE80 MOV X0, X19
	0x032FDE84 MOV X1, X20
	0x032FDE88 LDP X20, X19, [X31 + 0x50]
	0x032FDE8C LDP X22, X21, [X31 + 0x40]
	0x032FDE90 LDP X24, X23, [X31 + 0x30]
	0x032FDE94 LDP X26, X25, [X31 + 0x20]
	0x032FDE98 LDP X28, X27, [X31 + 0x10]
	0x032FDE9C MOV X2, X31
	0x032FDEA0 LDR X30, [X31], #0x60
	0x032FDEA4 B 0x321B938
	0x032FDEA8 BL 0x1C16F28
	0x032FDEAC BL 0x1C16F20
	0x032FDEB0 STP X30, X21, [X31 - 0x20]!
	0x032FDEB4 STP X20, X19, [X31 + 0x10]
	0x032FDEB8 ADRP X19, 0x10DF000
	0x032FDEBC ADRP X21, 0xE1D000
	0x032FDEC0 LDRB W8, [X19 + 0xAA1]
	0x032FDEC4 LDR X21, [X21 + 0x1D0]
	0x032FDEC8 TBNZ X8, 0x0, 0x32FDEEC
	0x032FDECC ADRP X0, 0xDF8000
	0x032FDED0 LDR X0, [X0 + 0x170]
	0x032FDED4 BL 0x1C16CF4
	0x032FDED8 ADRP X0, 0xE1D000
	0x032FDEDC LDR X0, [X0 + 0x1D0]
	0x032FDEE0 BL 0x1C16CF4
	0x032FDEE4 MOVZ W8, 0x1
	0x032FDEE8 STRB W8, [X19 + 0xAA1]
	0x032FDEEC MOV X0, X31
	0x032FDEF0 BL 0x324ABEC
	0x032FDEF4 LDR X0, [X21]
	0x032FDEF8 LDR W8, [X0 + 0xE0]
	0x032FDEFC CBNZ W8, 0x32FDF04
	0x032FDF00 BL 0x1C16DFC
	0x032FDF04 BL 0x1C2843C
	0x032FDF08 CBZ X0, 0x32FDFB8
	0x032FDF0C LDR W8, [X0 + 0x10]
	0x032FDF10 MOV X19, X0
	0x032FDF14 SUBS W1, W8, 0x1
	0x032FDF18 B.LT 0x32FDF54
	0x032FDF1C MOV X0, X19
	0x032FDF20 MOV X2, X31
	0x032FDF24 BL 0x3222A1C
	0x032FDF28 LDR X8, [X21]
	0x032FDF2C MOV W20, W0
	0x032FDF30 LDR W9, [X8 + 0xE0]
	0x032FDF34 CBNZ W9, 0x32FDF44
	0x032FDF38 MOV X0, X8
	0x032FDF3C BL 0x1C16DFC
	0x032FDF40 LDR X8, [X21]
	0x032FDF44 LDR X9, [X8 + 0xB8]
	0x032FDF48 LDRH W9, [X9 + 0xA]
	0x032FDF4C CMP W9, W20, UXTH
	0x032FDF50 B.NE 0x32FDF64
	0x032FDF54 MOV X0, X19
	0x032FDF58 LDP X20, X19, [X31 + 0x10]
	0x032FDF5C LDP X30, X21, [X31], #0x20
	0x032FDF60 RET
	0x032FDF64 LDR W9, [X8 + 0xE0]
	0x032FDF68 CBNZ W9, 0x32FDF74
	0x032FDF6C MOV X0, X8
	0x032FDF70 BL 0x1C16DFC
	0x032FDF74 ADRP X8, 0xDF8000
	0x032FDF78 LDR X8, [X8 + 0x170]
	0x032FDF7C LDR X0, [X8]
	0x032FDF80 LDR W8, [X0 + 0xE0]
	0x032FDF84 CBNZ W8, 0x32FDF8C
	0x032FDF88 BL 0x1C16DFC
	0x032FDF8C LDR X8, [X21]
	0x032FDF90 MOV X1, X31
	0x032FDF94 LDR X8, [X8 + 0xB8]
	0x032FDF98 ADD X0, X8, 0xA
	0x032FDF9C BL 0x330A76C
	0x032FDFA0 MOV X1, X0
	0x032FDFA4 MOV X0, X19
	0x032FDFA8 LDP X20, X19, [X31 + 0x10]
	0x032FDFAC MOV X2, X31
	0x032FDFB0 LDP X30, X21, [X31], #0x20
	0x032FDFB4 B 0x321B938
	0x032FDFB8 BL 0x1C16F20
	0x032FDFBC B 0x1C2843C
	0x032FDFC0 STR X30, [X31 - 0x20]!
	0x032FDFC4 STP X20, X19, [X31 + 0x10]
	0x032FDFC8 ADRP X20, 0x10DF000
	0x032FDFCC LDRB W8, [X20 + 0xAA2]
	0x032FDFD0 MOV X19, X0
	0x032FDFD4 TBNZ X8, 0x0, 0x32FDFEC
	0x032FDFD8 ADRP X0, 0xE1D000
	0x032FDFDC LDR X0, [X0 + 0x1D0]
	0x032FDFE0 BL 0x1C16CF4
	0x032FDFE4 MOVZ W8, 0x1
	0x032FDFE8 STRB W8, [X20 + 0xAA2]
	0x032FDFEC CBZ X19, 0x32FE070
	0x032FDFF0 MOV X0, X19
	0x032FDFF4 MOV X1, X31
	0x032FDFF8 BL 0x322B8DC
	0x032FDFFC CBZ X0, 0x32FE080
	0x032FE000 LDR W8, [X0 + 0x10]
	0x032FE004 CBZ W8, 0x32FE070
	0x032FE008 ADRP X20, 0xE1C000
	0x032FE00C LDR X20, [X20 + 0x1D0]
	0x032FE010 LDR X0, [X20]
	0x032FE014 LDR W8, [X0 + 0xE0]
	0x032FE018 CBNZ W8, 0x32FE024
	0x032FE01C BL 0x1C16DFC
	0x032FE020 LDR X0, [X20]
	0x032FE024 LDR X8, [X0 + 0xB8]
	0x032FE028 MOV X0, X19
	0x032FE02C MOV X2, X31
	0x032FE030 LDR X1, [X8]
	0x032FE034 BL 0x322BE8C
	0x032FE038 ADDS W31, W0, 0x1
	0x032FE03C B.NE 0x32FE084
	0x032FE040 LDR X0, [X20]
	0x032FE044 LDR W8, [X0 + 0xE0]
	0x032FE048 CBNZ W8, 0x32FE050
	0x032FE04C BL 0x1C16DFC
	0x032FE050 MOV X0, X19
	0x032FE054 BL 0x32FE0CC
	0x032FE058 TBNZ X0, 0x1F, 0x32FE070
	0x032FE05C LDR W8, [X19 + 0x10]
	0x032FE060 SUB W8, W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10E0000
	007 Move W8, [X21+2711]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE1E000
	015 Move X0, [X0+464]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2711], W8
	019 Compare X20, 0
	020 JumpIfEqual {136}
	021 Compare X19, 0
	022 JumpIfEqual {143}
	023 Move W8, [X20+16]
	024 Compare W8, 0
	025 JumpIfEqual {111}
	026 Move W8, [X19+16]
	027 Compare W8, 0
	028 JumpIfEqual {110}
	029 Move X22, 0xE1E000
	030 Move X22, [X22+464]
	031 Move X0, [X22]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X22]
	037 Move X8, [X0+184]
	038 Move X0, X20
	039 Move X2, X31
	040 Move X1, [X8]
	041 Call String.IndexOfAny, X0, X1
	042 Add W31, W0, 1
	043 Move X0, [X22]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Call 0x1C17DFC
	048 Move X0, [X22]
	049 Move X8, [X0+184]
	050 Move X0, X19
	051 Move X2, X31
	052 Move X1, [X8]
	053 Call String.IndexOfAny, X0, X1
	054 Add W31, W0, 1
	055 Move X0, [X22]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X19
	061 Call Path.IsPathRooted, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {111}
	066 Move W8, [X20+16]
	067 Move X0, X20
	068 Move X2, X31
	069 Subtract W1, W8, 1
	070 Call String.get_Chars, X0, X1
	071 Move X8, [X22]
	072 Move W21, W0
	073 Move W9, [X8+224]
	074 Compare W9, 0
	075 JumpIfNotEqual {79}
	076 Move X0, X8
	077 Call 0x1C17DFC
	078 Move X8, [X22]
	079 Move X9, [X8+184]
	080 NotImplemented "Instruction LDRH not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move W10, [X8+224]
	083 Compare W10, 0
	084 JumpIfNotEqual {89}
	085 Move X0, X8
	086 Call 0x1C17DFC
	087 Move X8, [X22]
	088 Move X9, [X8+184]
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move W10, [X8+224]
	092 Compare W10, 0
	093 JumpIfNotEqual {98}
	094 Move X0, X8
	095 Call 0x1C17DFC
	096 Move X8, [X22]
	097 Move X9, [X8+184]
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X0, X20
	101 Move X1, X19
	102 Move X20, [X31+32]
	103 Move X19, [X31+40]
	104 Move X22, [X31+16]
	105 Move X21, [X31+24]
	106 Move X2, X31
	107 Move X30, [X31+48]
	108 Call String.Concat, X0, X1
	109 Return X0
	110 Move X19, X20
	111 Move X0, X19
	112 Move X20, [X31+32]
	113 Move X19, [X31+40]
	114 Move X22, [X31+16]
	115 Move X21, [X31+24]
	116 Move X30, [X31+48]
	117 Return X0
	118 Move W10, [X8+224]
	119 Compare W10, 0
	120 JumpIfNotEqual {125}
	121 Move X0, X8
	122 Call 0x1C17DFC
	123 Move X8, [X22]
	124 Move X9, [X8+184]
	125 Move X1, [X9+16]
	126 Move X0, X20
	127 Move X2, X19
	128 Move X20, [X31+32]
	129 Move X19, [X31+40]
	130 Move X22, [X31+16]
	131 Move X21, [X31+24]
	132 Move X3, X31
	133 Move X30, [X31+48]
	134 Call String.Concat, X0, X1, X2
	135 Return X0
	136 Move X0, 0xDFC000
	137 Move X0, [X0+1320]
	138 Call 0x1C17D08
	139 Call 0x1C17F10
	140 Move X19, X0
	141 Move X0, 0xE2B000
	142 Move X0, [X0+1752]
	143 Move X0, 0xDFC000
	144 Move X0, [X0+1320]
	145 Call 0x1C17D08
	146 Call 0x1C17F10
	147 Move X19, X0
	148 Move X0, 0xE2B000
	149 Move X0, [X0+1760]
	150 Call 0x1C17D08
	151 Move X1, X0
	152 Move X0, X19
	153 Move X2, X31
	154 Call ArgumentNullException..ctor, X0, X1
	155 Move X0, 0xDFE000
	156 Move X0, [X0+1400]
	157 Call 0x1C17D08
	158 Call 0x1C17F10
	159 Move X19, X0
	160 Move X0, 0xE2A000
	161 Move X0, [X0+72]
	162 Call 0x1C17D08
	163 Move X1, X0
	164 Move X0, X19
	165 Move X2, X31
	166 Call ArgumentException..ctor, X0, X1
	167 Move X0, 0xE2A000
	168 Move X0, [X0+1768]
	169 Call 0x1C17D08
	170 Move X1, X0
	171 Move X0, X19
	172 Call 0x1C17DEC

Method: System.String CleanPath(System.String s)

Disassembly:
	0x032FE188 BL 0x1C16CF4
	0x032FE18C ADRP X0, 0xE24000
	0x032FE190 LDR X0, [X0 + 0x28]
	0x032FE194 BL 0x1C16CF4
	0x032FE198 MOVZ W8, 0x1
	0x032FE19C STRB W8, [X21 + 0xAA3]
	0x032FE1A0 CBZ W20, 0x32FE1FC
	0x032FE1A4 ADRP X21, 0xE1C000
	0x032FE1A8 LDR X21, [X21 + 0x1D0]
	0x032FE1AC LDRH W22, [X19]
	0x032FE1B0 LDR X0, [X21]
	0x032FE1B4 LDR W8, [X0 + 0xE0]
	0x032FE1B8 CBNZ W8, 0x32FE1C4
	0x032FE1BC BL 0x1C16DFC
	0x032FE1C0 LDR X0, [X21]
	0x032FE1C4 LDR X9, [X0 + 0xB8]
	0x032FE1C8 LDRH W8, [X9 + 0xA]
	0x032FE1CC CMP W22, W8
	0x032FE1D0 B.EQ 0x32FE1F4
	0x032FE1D4 LDR W8, [X0 + 0xE0]
	0x032FE1D8 CBNZ W8, 0x32FE1E8
	0x032FE1DC BL 0x1C16DFC
	0x032FE1E0 LDR X0, [X21]
	0x032FE1E4 LDR X9, [X0 + 0xB8]
	0x032FE1E8 LDRH W8, [X9 + 0x8]
	0x032FE1EC CMP W22, W8
	0x032FE1F0 B.NE 0x32FE214
	0x032FE1F4 MOVZ W8, 0x1
	0x032FE1F8 B 0x32FE200
	0x032FE1FC MOV W8, W31
	0x032FE200 LDP X20, X19, [X31 + 0x20]
	0x032FE204 LDP X22, X21, [X31 + 0x10]
	0x032FE208 MOV W0, W8
	0x032FE20C LDR X30, [X31], #0x30
	0x032FE210 RET
	0x032FE214 LDR W8, [X0 + 0xE0]
	0x032FE218 CBNZ W8, 0x32FE228
	0x032FE21C BL 0x1C16DFC
	0x032FE220 LDR X0, [X21]
	0x032FE224 LDR X9, [X0 + 0xB8]
	0x032FE228 CMP W20, 0x2
	0x032FE22C MOV W8, W31
	0x032FE230 B.LT 0x32FE200
	0x032FE234 LDRB W10, [X9 + 0x28]
	0x032FE238 CBNZ W10, 0x32FE200
	0x032FE23C LDR W8, [X0 + 0xE0]
	0x032FE240 LDRH W19, [X19 + 0x2]
	0x032FE244 CBNZ W8, 0x32FE254
	0x032FE248 BL 0x1C16DFC
	0x032FE24C LDR X8, [X21]
	0x032FE250 LDR X9, [X8 + 0xB8]
	0x032FE254 LDRH W8, [X9 + 0x18]
	0x032FE258 CMP W19, W8
	0x032FE25C CSET W8, EQ
	0x032FE260 B 0x32FE200
	0x032FE264 STR X30, [X31 - 0x20]!
	0x032FE268 STP X20, X19, [X31 + 0x10]
	0x032FE26C ADRP X20, 0x10DE000
	0x032FE270 ADRP X19, 0xDFE000
	0x032FE274 LDRB W8, [X20 + 0xAA5]
	0x032FE278 LDR X19, [X19 + 0x8D8]
	0x032FE27C TBNZ X8, 0x0, 0x32FE2A0
	0x032FE280 ADRP X0, 0xDFE000
	0x032FE284 LDR X0, [X0 + 0x8D8]
	0x032FE288 BL 0x1C16CF4
	0x032FE28C ADRP X0, 0xE29000
	0x032FE290 LDR X0, [X0 + 0x710]
	0x032FE294 BL 0x1C16CF4
	0x032FE298 MOVZ W8, 0x1
	0x032FE29C STRB W8, [X20 + 0xAA5]
	0x032FE2A0 MOV X0, X31
	0x032FE2A4 BL 0x33C1A14
	0x032FE2A8 LDR X8, [X19]
	0x032FE2AC TBZ X0, 0x0, 0x32FE2E4
	0x032FE2B0 ADRP X19, 0xE29000
	0x032FE2B4 LDR X19, [X19 + 0x710]
	0x032FE2B8 MOVZ W1, 0x24
	0x032FE2BC MOV X0, X8
	0x032FE2C0 BL 0x1C16D6C
	0x032FE2C4 LDR X1, [X19]
	0x032FE2C8 MOV X2, X31
	0x032FE2CC MOV X19, X0
	0x032FE2D0 BL 0x32C5BD8
	0x032FE2D4 MOV X0, X19
	0x032FE2D8 LDP X20, X19, [X31 + 0x10]
	0x032FE2DC LDR X30, [X31], #0x20
	0x032FE2E0 RET
	0x032FE2E4 LDP X20, X19, [X31 + 0x10]
	0x032FE2E8 MOVZ W1, 0x1
	0x032FE2EC MOV X0, X8
	0x032FE2F0 LDR X30, [X31], #0x20
	0x032FE2F4 B 0x1C16D6C
	0x032FE2F8 STP X30, X23, [X31 - 0x30]!
	0x032FE2FC STP X22, X21, [X31 + 0x10]
	0x032FE300 STP X20, X19, [X31 + 0x20]
	0x032FE304 ADRP X22, 0x10DE000
	0x032FE308 ADRP X21, 0xDFE000
	0x032FE30C ADRP X19, 0xE29000
	0x032FE310 ADRP X20, 0xE1C000
	0x032FE314 ADRP X23, 0xE23000
	0x032FE318 LDRB W8, [X22 + 0xAA7]
	0x032FE31C LDR X21, [X21 + 0x8D8]
	0x032FE320 LDR X19, [X19 + 0x718]
	0x032FE324 LDR X20, [X20 + 0x1D0]
	0x032FE328 LDR X23, [X23 + 0xFA8]
	0x032FE32C TBNZ X8, 0x0, 0x32FE374
	0x032FE330 ADRP X0, 0xDFE000
	0x032FE334 LDR X0, [X0 + 0x8D8]
	0x032FE338 BL 0x1C16CF4
	0x032FE33C ADRP X0, 0xDF7000
	0x032FE340 LDR X0, [X0 + 0x170]
	0x032FE344 BL 0x1C16CF4
	0x032FE348 ADRP X0, 0xE23000
	0x032FE34C LDR X0, [X0 + 0xFA8]
	0x032FE350 BL 0x1C16CF4
	0x032FE354 ADRP X0, 0xE1C000
	0x032FE358 LDR X0, [X0 + 0x1D0]
	0x032FE35C BL 0x1C16CF4
	0x032FE360 ADRP X0, 0xE29000
	0x032FE364 LDR X0, [X0 + 0x718]
	0x032FE368 BL 0x1C16CF4
	0x032FE36C MOVZ W8, 0x1
	0x032FE370 STRB W8, [X22 + 0xAA7]
	0x032FE374 LDR X0, [X21]
	0x032FE378 ADRP X22, 0xDF7000
	0x032FE37C LDR X22, [X22 + 0x170]
	0x032FE380 MOVZ W1, 0x8
	0x032FE384 BL 0x1C16D6C
	0x032FE388 LDR X1, [X19]
	0x032FE38C MOV X2, X31
	0x032FE390 MOV X19, X0
	0x032FE394 BL 0x32C5BD8
	0x032FE398 LDR X8, [X20]
	0x032FE39C MOV W1, W31
	0x032FE3A0 LDR X8, [X8 + 0xB8]
	0x032FE3A4 STR X19, [X8 + 0x30]
	0x032FE3A8 LDR X0, [X21]
	0x032FE3AC BL 0x1C16D6C
	0x032FE3B0 LDR X8, [X20]
	0x032FE3B4 LDR X8, [X8 + 0xB8]
	0x032FE3B8 STR X0, [X8 + 0x38]
	0x032FE3BC LDR X0, [X23]
	0x032FE3C0 LDR W8, [X0 + 0xE0]
	0x032FE3C4 CBNZ W8, 0x32FE3CC
	0x032FE3C8 BL 0x1C16DFC
	0x032FE3CC BL 0x1C281F0
	0x032FE3D0 LDR X8, [X20]
	0x032FE3D4 LDR X8, [X8 + 0xB8]
	0x032FE3D8 STRH W0, [X8 + 0x18]
	0x032FE3DC BL 0x1C281F0
	0x032FE3E0 LDR X8, [X20]
	0x032FE3E4 LDR X8, [X8 + 0xB8]
	0x032FE3E8 STRH W0, [X8 + 0xA]
	0x032FE3EC BL 0x1C281F0
	0x032FE3F0 LDR X8, [X20]
	0x032FE3F4 LDR X8, [X8 + 0xB8]
	0x032FE3F8 STRH W0, [X8 + 0x8]
	0x032FE3FC BL 0x1C281F8
	0x032FE400 LDR X8, [X20]
	0x032FE404 LDR X8, [X8 + 0xB8]
	0x032FE408 STRH W0, [X8 + 0xC]
	0x032FE40C BL 0x32FE264
	0x032FE410 LDR X8, [X20]
	0x032FE414 LDR X8, [X8 + 0xB8]
	0x032FE418 STR X0, [X8]
	0x032FE41C LDR X0, [X22]
	0x032FE420 LDR W8, [X0 + 0xE0]
	0x032FE424 CBNZ W8, 0x32FE42C
	0x032FE428 BL 0x1C16DFC
	0x032FE42C LDR X8, [X20]
	0x032FE430 MOV X1, X31
	0x032FE434 LDR X8, [X8 + 0xB8]
	0x032FE438 ADD X0, X8, 0xA
	0x032FE43C BL 0x330A76C
	0x032FE440 LDR X8, [X20]
	0x032FE444 MOVZ W1, 0x3
	0x032FE448 LDR X8, [X8 + 0xB8]
	0x032FE44C STR X0, [X8 + 0x10]
	0x032FE450 LDR X0, [X21]
	0x032FE454 BL 0x1C16D6C
	0x032FE458 CBZ X0, 0x32FE4C0
	0x032FE45C LDR W9, [X0 + 0x18]
	0x032FE460 CBZ W9, 0x32FE4BC
	0x032FE464 LDR X8, [X20]
	0x032FE468 CMP W9, 0x1
	0x032FE46C LDR X8, [X8 + 0xB8]
	0x032FE470 LDRH W10, [X8 + 0xA]
	0x032FE474 STRH W10, [X0 + 0x20]
	0x032FE478 B.EQ 0x32FE4BC
	0x032FE47C LDRH W10, [X8 + 0x8]
	0x032FE480 CMP W9, 0x2
	0x032FE484 STRH W10, [X0 + 0x22]
	0x032FE488 B.LS 0x32FE4BC
	0x032FE48C LDRH W9, [X8 + 0x18]
	0x032FE490 LDP X20, X19, [X31 + 0x20]
	0x032FE494 LDP X22, X21, [X31 + 0x10]
	0x032FE498 STRH W9, [X0 + 0x24]
	0x032FE49C LDRH W9, [X8 + 0xA]
	0x032FE4A0 LDRH W10, [X8 + 0x18]
	0x032FE4A4 STR X0, [X8 + 0x20]
	0x032FE4A8 CMP W9, W10
	0x032FE4AC CSET W9, EQ
	0x032FE4B0 STRB W9, [X8 + 0x28]
	0x032FE4B4 LDP X30, X23, [X31], #0x30
	0x032FE4B8 RET
	0x032FE4BC BL 0x1C16F28
	0x032FE4C0 BL 0x1C16F20
	0x032FE4C4 STR X30, [X31 - 0x50]!
	0x032FE4C8 STP X26, X25, [X31 + 0x10]
	0x032FE4CC STP X24, X23, [X31 + 0x20]
	0x032FE4D0 STP X22, X21, [X31 + 0x30]
	0x032FE4D4 STP X20, X19, [X31 + 0x40]
	0x032FE4D8 ADRP X20, 0x10DE000
	0x032FE4DC LDRB W8, [X20 + 0xAA9]
	0x032FE4E0 MOV X19, X0
	0x032FE4E4 TBNZ X8, 0x0, 0x32FE508
	0x032FE4E8 ADRP X0, 0xE1C000
	0x032FE4EC LDR X0, [X0 + 0x1D0]
	0x032FE4F0 BL 0x1C16CF4
	0x032FE4F4 ADRP X0, 0xDF5000
	0x032FE4F8 LDR X0, [X0 + 0x8F0]
	0x032FE4FC BL 0x1C16CF4
	0x032FE500 MOVZ W8, 0x1
	0x032FE504 STRB W8, [X20 + 0xAA9]
	0x032FE508 CBZ X19, 0x32FE780
	0x032FE50C ADRP X8, 0xDF5000
	0x032FE510 LDR X8, [X8 + 0x8F0]
	0x032FE514 LDR X0, [X8]
	0x032FE518 BL 0x1C16F10
	0x032FE51C MOV X1, X31
	0x032FE520 MOV X20, X0
	0x032FE524 BL 0x3231AC4
	0x032FE528 LDR W8, [X19 + 0x18]
	0x032FE52C CMP W8, 0x1
	0x032FE530 B.LT 0x32FE6C0
	0x032FE534 ADRP X23, 0xE1C000
	0x032FE538 LDR X23, [X23 + 0x1D0]
	0x032FE53C MOV X22, X31
	0x032FE540 MOV W26, W31
	0x032FE544 ADD X24, X19, 0x20
	0x032FE548 MOV W25, W8
	0x032FE54C CMP W22, W8
	0x032FE550 B.CS 0x32FE6E8
	0x032FE554 LDR X21, [X24, X22, LSL #3]
	0x032FE558 CBZ X21, 0x32FE6EC
	0x032FE55C LDR W8, [X21 + 0x10]
	0x032FE560 CBZ W8, 0x32FE6B0
	0x032FE564 LDR X0, [X23]
	0x032FE568 LDR W8, [X0 + 0xE0]
	0x032FE56C CBNZ W8, 0x32FE578
	0x032FE570 BL 0x1C16DFC
	0x032FE574 LDR X0, [X23]
	0x032FE578 LDR X8, [X0 + 0xB8]
	0x032FE57C MOV X0, X21
	0x032FE580 MOV X2, X31
	0x032FE584 LDR X1, [X8]
	0x032FE588 BL 0x322BE8C
	0x032FE58C ADDS W31, W0, 0x1
	0x032FE590 B.NE 0x32FE738
	0x032FE594 TBZ X26, 0x0, 0x32FE5C4
	0x032FE598 LDR X0, [X23]
	0x032FE59C LDR W8, [X0 + 0xE0]
	0x032FE5A0 CBNZ W8, 0x32FE5A8
	0x032FE5A4 BL 0x1C16DFC
	0x032FE5A8 CBZ X20, 0x32FE734
	0x032FE5AC LDR X8, [X23]
	0x032FE5B0 MOV X0, X20
	0x032FE5B4 MOV X2, X31
	0x032FE5B8 LDR X8, [X8 + 0xB8]
	0x032FE5BC LDR X1, [X8 + 0x10]
	0x032FE5C0 BL 0x32333E0
	0x032FE5C4 LDR X0, [X23]
	0x032FE5C8 LDR W8, [X0 + 0xE0]
	0x032FE5CC CBNZ W8, 0x32FE5D4
	0x032FE5D0 BL 0x1C16DFC
	0x032FE5D4 MOV X0, X21

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x10DF000
	012 Move W8, [X20+2712]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xDFF000
	019 Move X0, [X0+2264]
	020 Call 0x1C17CF4
	021 Move X0, 0xE1D000
	022 Move X0, [X0+464]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+2712], W8
	026 Compare X19, 0
	027 JumpIfEqual {287}
	028 Move W24, [X19+16]
	029 Move X0, X19
	030 Move W1, W31
	031 Move X2, X31
	032 Call String.get_Chars, X0, X1
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W20, W0
	035 And W8, W20, 0xFFFF
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W1, 1
	038 Move X0, X19
	039 Move X2, X31
	040 Call String.get_Chars, X0, X1
	041 And W8, W0, 0xFFFF
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSET not yet implemented."
	044 NotImplemented "Instruction CSET not yet implemented."
	045 Move W20, W8
	046 ShiftRight W20, 31
	047 And W20, W20, 0x3FFFFFFF
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X21, 0xE1D000
	050 Move X21, [X21+464]
	051 Move X0, [X21]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X21]
	057 Move X8, [X0+184]
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W9, [X0+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {66}
	063 Call 0x1C17DFC
	064 Move X8, [X21]
	065 Move X8, [X8+184]
	066 NotImplemented "Instruction LDRH not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move W20, W31
	069 Move W23, 1
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X27, 0xE1D000
	072 Move X27, [X27+464]
	073 Move W25, W31
	074 Move W26, W31
	075 Move W21, W20
	076 Move X0, X19
	077 Move W1, W21
	078 Move X2, X31
	079 Call String.get_Chars, X0, X1
	080 Move X8, [X27]
	081 Move W22, W0
	082 Move W9, [X8+224]
	083 Compare W9, 0
	084 JumpIfNotEqual {88}
	085 Move X0, X8
	086 Call 0x1C17DFC
	087 Move X8, [X27]
	088 Move X9, [X8+184]
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move W10, [X8+224]
	092 Compare W10, 0
	093 JumpIfNotEqual {98}
	094 Move X0, X8
	095 Call 0x1C17DFC
	096 Move X8, [X27]
	097 Move X9, [X8+184]
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move W9, [X8+224]
	101 Compare W9, 0
	102 JumpIfNotEqual {106}
	103 Move X0, X8
	104 Call 0x1C17DFC
	105 Move X8, [X27]
	106 Move X9, [X8+184]
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 NotImplemented "Instruction LDRH not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move W10, [X8+224]
	111 Compare W10, 0
	112 JumpIfNotEqual {118}
	113 Move X0, X8
	114 Call 0x1C17DFC
	115 Move X8, [X27]
	116 Move X8, [X8+184]
	117 NotImplemented "Instruction LDRH not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 NotImplemented "Instruction CINC not yet implemented."
	120 Add W21, W21, 1
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X0, X19
	123 Move W1, W21
	124 Move X2, X31
	125 Call String.get_Chars, X0, X1
	126 Move X8, [X27]
	127 Move W22, W0
	128 Move W9, [X8+224]
	129 Compare W9, 0
	130 JumpIfNotEqual {134}
	131 Move X0, X8
	132 Call 0x1C17DFC
	133 Move X8, [X27]
	134 Move X9, [X8+184]
	135 NotImplemented "Instruction LDRH not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move W10, [X8+224]
	138 Compare W10, 0
	139 JumpIfNotEqual {144}
	140 Move X0, X8
	141 Call 0x1C17DFC
	142 Move X8, [X27]
	143 Move X9, [X8+184]
	144 NotImplemented "Instruction LDRH not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Add W25, W25, 1
	147 Add W21, W21, 1
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move W26, W31
	150 Move W25, W31
	151 Or W8, W26, W25
	152 Compare W8, 0
	153 JumpIfEqual {274}
	154 Move X8, 0xDFF000
	155 Move X8, [X8+2264]
	156 Subtract W1, W24, W25
	157 Move X0, [X8]
	158 Call 0x1C17D6C
	159 Move X21, X0
	160 Move TEMP, X23
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfEqual {173}
	164 Compare X21, 0
	165 JumpIfEqual {287}
	166 Move W8, [X21+24]
	167 Compare W8, 0
	168 JumpIfEqual {286}
	169 Move W9, 92
	170 NotImplemented "Instruction CMP not yet implemented."
	171 NotImplemented "Instruction STRH not yet implemented."
	172 NotImplemented "Instruction STRH not yet implemented."
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Compare X21, 0
	175 JumpIfEqual {287}
	176 Move X26, 0xE1D000
	177 Move X26, [X26+464]
	178 Subtract W25, W24, 1
	179 Move W23, W20
	180 Move W8, [X21+24]
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X0, X19
	183 Move W1, W20
	184 Move X2, X31
	185 Call String.get_Chars, X0, X1
	186 Move X8, [X26]
	187 Move W22, W0
	188 Move W9, [X8+224]
	189 Compare W9, 0
	190 JumpIfNotEqual {194}
	191 Move X0, X8
	192 Call 0x1C17DFC
	193 Move X8, [X26]
	194 Move X9, [X8+184]
	195 NotImplemented "Instruction LDRH not yet implemented."
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Move W10, [X8+224]
	198 Compare W10, 0
	199 JumpIfNotEqual {204}
	200 Move X0, X8
	201 Call 0x1C17DFC
	202 Move X8, [X26]
	203 Move X9, [X8+184]
	204 NotImplemented "Instruction LDRH not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move W9, [X21+24]
	207 Add W27, W23, 1
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move W10, [X8+224]
	210 Compare W10, 0
	211 JumpIfNotEqual {215}
	212 Move X0, X8
	213 Call 0x1C17DFC
	214 Move W9, [X21+24]
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move X8, [X26]
	217 Add X9, X21, W23
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Move X8, [X8+184]
	220 NotImplemented "Instruction LDRH not yet implemented."
	221 NotImplemented "Instruction STRH not yet implemented."
	222 Add W22, W20, 1
	223 Move X0, X19
	224 Move W1, W22
	225 Move X2, X31
	226 Call String.get_Chars, X0, X1
	227 Move X8, [X26]
	228 Move W23, W0
	229 Move W9, [X8+224]
	230 Compare W9, 0
	231 JumpIfNotEqual {235}
	232 Move X0, X8
	233 Call 0x1C17DFC
	234 Move X8, [X26]
	235 Move X9, [X8+184]
	236 NotImplemented "Instruction LDRH not yet implemented."
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move W10, [X8+224]
	239 Compare W10, 0
	240 JumpIfNotEqual {245}
	241 Move X0, X8
	242 Call 0x1C17DFC
	243 Move X8, [X26]
	244 Move X9, [X8+184]
	245 NotImplemented "Instruction LDRH not yet implemented."
	246 NotImplemented "Instruction CMP not yet implemented."
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Move W20, W22
	249 Move W23, W27
	250 Move W20, W25
	251 Move W23, W27
	252 Move W8, [X21+24]
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Add X8, X21, W23
	255 Add W23, W23, 1
	256 NotImplemented "Instruction STRH not yet implemented."
	257 Add W20, W20, 1
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Move X1, X21
	260 Move X20, [X31+64]
	261 Move X19, [X31+72]
	262 Move X22, [X31+48]
	263 Move X21, [X31+56]
	264 Move X24, [X31+32]
	265 Move X23, [X31+40]
	266 Move X26, [X31+16]
	267 Move X25, [X31+24]
	268 Move X0, X31
	269 Move X2, X31
	270 Move X30, [X31+80]
	271 Move X27, [X31+88]
	272 Call String.CreateString, X0, X1
	273 Return X0
	274 Move X0, X19
	275 Move X20, [X31+64]
	276 Move X19, [X31+72]
	277 Move X22, [X31+48]
	278 Move X21, [X31+56]
	279 Move X24, [X31+32]
	280 Move X23, [X31+40]
	281 Move X26, [X31+16]
	282 Move X25, [X31+24]
	283 Move X30, [X31+80]
	284 Move X27, [X31+88]
	285 Return X0
	286 Call 0x1C17F28
	287 Call 0x1C17F20

Method: System.String GetDirectoryName(System.String path)

Disassembly:
	0x032EF4AC MOV X0, X8
	0x032EF4B0 BL 0x1C16DFC
	0x032EF4B4 MOV W0, W21
	0x032EF4B8 MOV X1, X31
	0x032EF4BC BL 0x32E50A0
	0x032EF4C0 TBNZ X0, 0x0, 0x32EF4D8
	0x032EF4C4 SUB W24, W24, 0x1
	0x032EF4C8 CMP W24, W22
	0x032EF4CC B.GT 0x32EF48C
	0x032EF4D0 MOV W21, W22
	0x032EF4D4 B 0x32EF4DC
	0x032EF4D8 MOV W21, W24
	0x032EF4DC SUB W24, W21, 0x1
	0x032EF4E0 CMP W24, W22
	0x032EF4E4 AND W8, W27, 0x1
	0x032EF4E8 B.LT 0x32EF4F8
	0x032EF4EC CBZ W8, 0x32EF400
	0x032EF4F0 B 0x32EF4F8
	0x032EF4F4 MOV W8, W31
	0x032EF4F8 CBZ X20, 0x32EF714
	0x032EF4FC LDR W9, [X20 + 0x18]
	0x032EF500 CMP W9, 0x0
	0x032EF504 CSET W10, EQ
	0x032EF508 BIC W8, W10, W8, 0x0
	0x032EF50C TBNZ X8, 0x0, 0x32EF690
	0x032EF510 CMP W9, 0x1
	0x032EF514 B.LT 0x32EF6F4
	0x032EF518 ADRP X27, 0xE38000
	0x032EF51C ADRP X28, 0xE2F000
	0x032EF520 LDR X27, [X27 + 0xA0]
	0x032EF524 LDR X28, [X28 + 0xD78]
	0x032EF528 MOVZ W26, 0x14
	0x032EF52C MOVK W26, 0x10000
	0x032EF530 MOV W29, W31
	0x032EF534 MOV W23, W31
	0x032EF538 SUB W21, W26, 0x12
	0x032EF53C LDR X1, [X27]
	0x032EF540 MOV X0, X20
	0x032EF544 BL 0x26022C0
	0x032EF548 LDR X8, [X28]
	0x032EF54C MOV X24, X0
	0x032EF550 LDR W9, [X8 + 0xE0]
	0x032EF554 CBNZ W9, 0x32EF560
	0x032EF558 MOV X0, X8
	0x032EF55C BL 0x1C16DFC
	0x032EF560 MOVZ W1, 0x1FF
	0x032EF564 MOV X0, X24
	0x032EF568 MOV X2, X31
	0x032EF56C BL 0x3209CC4
	0x032EF570 MOV W22, W0
	0x032EF574 CBNZ W23, 0x32EF670
	0x032EF578 TBZ X22, 0x1F, 0x32EF670
	0x032EF57C LDR X0, [X28]
	0x032EF580 LDR W8, [X0 + 0xE0]
	0x032EF584 CBNZ W8, 0x32EF58C
	0x032EF588 BL 0x1C16DFC
	0x032EF58C MOV X0, X31
	0x032EF590 BL 0x3209954
	0x032EF594 MOV X23, X0
	0x032EF598 CMP W23, W26
	0x032EF59C STR X0, [X31]
	0x032EF5A0 B.NE 0x32EF5C4
	0x032EF5A4 LDRB W8, [X25 + 0x762]
	0x032EF5A8 CBZ W8, 0x32EF5CC
	0x032EF5AC CBZ X24, 0x32EF5E4
	0x032EF5B0 MOV X0, X24
	0x032EF5B4 MOV X1, X31
	0x032EF5B8 BL 0x3225708
	0x032EF5BC LDR W1, [X24 + 0x10]
	0x032EF5C0 B 0x32EF5EC
	0x032EF5C4 UBFM X29, X23, 0x20, 0x3F
	0x032EF5C8 B 0x32EF670
	0x032EF5CC ADRP X0, 0xE2B000
	0x032EF5D0 LDR X0, [X0 + 0x290]
	0x032EF5D4 BL 0x1C16CF4
	0x032EF5D8 MOVZ W8, 0x1
	0x032EF5DC STRB W8, [X25 + 0x762]
	0x032EF5E0 CBNZ X24, 0x32EF5B0
	0x032EF5E4 MOV X0, X31
	0x032EF5E8 MOV X1, X31
	0x032EF5EC BL 0x32EF7CC
	0x032EF5F0 MOVZ W8, 0x14
	0x032EF5F4 MOVK W8, 0x10000
	0x032EF5F8 TBNZ X0, 0x0, 0x32EF664
	0x032EF5FC LDRB W8, [X25 + 0x762]
	0x032EF600 CBZ W8, 0x32EF61C
	0x032EF604 CBZ X24, 0x32EF634
	0x032EF608 MOV X0, X24
	0x032EF60C MOV X1, X31
	0x032EF610 BL 0x3225708
	0x032EF614 LDR W1, [X24 + 0x10]
	0x032EF618 B 0x32EF63C
	0x032EF61C ADRP X0, 0xE2B000
	0x032EF620 LDR X0, [X0 + 0x290]
	0x032EF624 BL 0x1C16CF4
	0x032EF628 MOVZ W8, 0x1
	0x032EF62C STRB W8, [X25 + 0x762]
	0x032EF630 CBNZ X24, 0x32EF608
	0x032EF634 MOV X0, X31
	0x032EF638 MOV X1, X31
	0x032EF63C ADD X3, X31, 0x0
	0x032EF640 MOVZ W2, 0x4000
	0x032EF644 BL 0x32EF0C0
	0x032EF648 LDR W8, [X31]
	0x032EF64C MOV W23, W31
	0x032EF650 CMP W8, W21
	0x032EF654 B.NE 0x32EF670
	0x032EF658 TBNZ X0, 0x0, 0x32EF670
	0x032EF65C LDR X8, [X31]
	0x032EF660 MOV X23, X8
	0x032EF664 UBFM X29, X23, 0x20, 0x3F
	0x032EF668 MOV W23, W8
	0x032EF66C MOV X19, X24
	0x032EF670 LDR W8, [X20 + 0x18]
	0x032EF674 CMP W8, 0x0
	0x032EF678 B.GT 0x32EF53C
	0x032EF67C CBZ W23, 0x32EF6F4
	0x032EF680 TBZ X22, 0x1F, 0x32EF6F4
	0x032EF684 MOV W0, W23
	0x032EF688 BFM X0, X29, 0x20, 0x1F
	0x032EF68C B 0x32EF780
	0x032EF690 MOV X0, X19
	0x032EF694 MOV X1, X31
	0x032EF698 BL 0x32EC79C
	0x032EF69C LDRB W8, [X25 + 0x762]
	0x032EF6A0 MOV X20, X0
	0x032EF6A4 CBZ W8, 0x32EF6C0
	0x032EF6A8 CBZ X20, 0x32EF6D8
	0x032EF6AC MOV X0, X20
	0x032EF6B0 MOV X1, X31
	0x032EF6B4 BL 0x3225708
	0x032EF6B8 LDR W1, [X20 + 0x10]
	0x032EF6BC B 0x32EF6E0
	0x032EF6C0 ADRP X0, 0xE2B000
	0x032EF6C4 LDR X0, [X0 + 0x290]
	0x032EF6C8 BL 0x1C16CF4
	0x032EF6CC MOVZ W8, 0x1
	0x032EF6D0 STRB W8, [X25 + 0x762]
	0x032EF6D4 CBNZ X20, 0x32EF6AC
	0x032EF6D8 MOV X0, X31
	0x032EF6DC MOV X1, X31
	0x032EF6E0 ADD X3, X31, 0x8
	0x032EF6E4 MOVZ W2, 0x4000
	0x032EF6E8 STR X31, [X31 + 0x8]
	0x032EF6EC BL 0x32EF0C0
	0x032EF6F0 TBZ X0, 0x0, 0x32EF76C
	0x032EF6F4 LDP X20, X19, [X31 + 0x60]
	0x032EF6F8 LDP X22, X21, [X31 + 0x50]
	0x032EF6FC LDP X24, X23, [X31 + 0x40]
	0x032EF700 LDP X26, X25, [X31 + 0x30]
	0x032EF704 LDP X28, X27, [X31 + 0x20]
	0x032EF708 LDP X29, X30, [X31 + 0x10]
	0x032EF70C ADD X31, X31, 0x70
	0x032EF710 RET
	0x032EF714 BL 0x1C16F20
	0x032EF718 ADRP X0, 0xE38000
	0x032EF71C LDR X0, [X0 + 0xC8]
	0x032EF720 BL 0x1C16D08
	0x032EF724 MOV X1, X19
	0x032EF728 MOV X2, X31
	0x032EF72C BL 0x32094D4
	0x032EF730 MOV X19, X0
	0x032EF734 ADRP X0, 0xE32000
	0x032EF738 LDR X0, [X0 + 0x7A8]
	0x032EF73C BL 0x1C16D08
	0x032EF740 BL 0x1C16F10
	0x032EF744 MOV X1, X19
	0x032EF748 MOV X2, X31
	0x032EF74C MOV X20, X0
	0x032EF750 BL 0x32E16BC
	0x032EF754 ADRP X0, 0xE38000
	0x032EF758 LDR X0, [X0 + 0xD0]
	0x032EF75C BL 0x1C16D08
	0x032EF760 MOV X1, X0
	0x032EF764 MOV X0, X20
	0x032EF768 BL 0x1C16DEC
	0x032EF76C MOVZ W8, 0x14
	0x032EF770 MOVK W8, 0x10000
	0x032EF774 ADD W0, W8, 0x19
	0x032EF778 MOV X1, X31
	0x032EF77C BL 0x320A158
	0x032EF780 MOVZ W2, 0x1
	0x032EF784 MOV X1, X19
	0x032EF788 MOV X3, X31
	0x032EF78C BL 0x3208FE8
	0x032EF790 MOV X19, X0
	0x032EF794 ADRP X0, 0xE38000
	0x032EF798 LDR X0, [X0 + 0xD0]
	0x032EF79C BL 0x1C16D08
	0x032EF7A0 MOV X1, X0
	0x032EF7A4 MOV X0, X19
	0x032EF7A8 BL 0x1C16DEC
	0x032EF7AC STR X30, [X31 - 0x10]!
	0x032EF7B0 ADD X3, X31, 0x8
	0x032EF7B4 MOVZ W2, 0x4000
	0x032EF7B8 STR X31, [X31 + 0x8]
	0x032EF7BC BL 0x32EF0C0
	0x032EF7C0 AND W0, W0, 0x1
	0x032EF7C4 LDR X30, [X31], #0x10
	0x032EF7C8 RET
	0x032EF7CC STR X30, [X31 - 0x30]!
	0x032EF7D0 STP X22, X21, [X31 + 0x10]
	0x032EF7D4 STP X20, X19, [X31 + 0x20]
	0x032EF7D8 ADRP X22, 0x10ED000
	0x032EF7DC ADRP X21, 0xE2F000
	0x032EF7E0 LDRB W8, [X22 + 0xA1D]
	0x032EF7E4 LDR X21, [X21 + 0xD70]
	0x032EF7E8 MOV X19, X1
	0x032EF7EC MOV X20, X0
	0x032EF7F0 TBNZ X8, 0x0, 0x32EF808
	0x032EF7F4 ADRP X0, 0xE2F000
	0x032EF7F8 LDR X0, [X0 + 0xD70]
	0x032EF7FC BL 0x1C16CF4
	0x032EF800 MOVZ W8, 0x1
	0x032EF804 STRB W8, [X22 + 0xA1D]
	0x032EF808 LDR X0, [X21]
	0x032EF80C STR X31, [X31 + 0x8]
	0x032EF810 LDR W8, [X0 + 0xE0]
	0x032EF814 CBNZ W8, 0x32EF81C
	0x032EF818 BL 0x1C16DFC
	0x032EF81C MOV X0, X20
	0x032EF820 MOV X1, X19
	0x032EF824 MOV X2, X31
	0x032EF828 BL 0x32E5368
	0x032EF82C ADD X3, X31, 0x8
	0x032EF830 MOVZ W2, 0x8000
	0x032EF834 BL 0x32EF0C0
	0x032EF838 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x10EE000
	008 Move X19, 0xE07000
	009 Move W8, [X21+2713]
	010 Move X19, [X19+632]
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xE07000
	017 Move X0, [X0+368]
	018 Call 0x1C17CF4
	019 Move X0, 0xE2C000
	020 Move X0, [X0+464]
	021 Call 0x1C17CF4
	022 Move X0, 0xE07000
	023 Move X0, [X0+632]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+2713], W8
	027 Move X8, [X19]
	028 Move X0, X20
	029 Move X2, X31
	030 Move X8, [X8+184]
	031 Move X1, [X8]
	032 Call String.op_Equality, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {227}
	037 Compare X20, 0
	038 JumpIfEqual {98}
	039 Move X22, 0xE2C000
	040 Move X22, [X22+464]
	041 Move X0, [X22]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X20
	047 Call Path.GetPathRoot, X0
	048 Move X1, X20
	049 Move X2, X31
	050 Call String.op_Equality, X0, X1
	051 Move W8, W0
	052 Move X0, X31
	053 Move TEMP, X8
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {99}
	057 Move X0, X20
	058 Move X1, X31
	059 Call String.Trim, X0
	060 Compare X0, 0
	061 JumpIfEqual {234}
	062 Move W8, [X0+16]
	063 Compare W8, 0
	064 JumpIfEqual {235}
	065 Move X0, [X22]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X22]
	071 Move X8, [X0+184]
	072 Move X0, X20
	073 Move X2, X31
	074 Move X1, [X8]
	075 Call String.IndexOfAny, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, -2147483648
	078 Compare TEMP, -2147483648
	079 JumpIfNotEqual {242}
	080 Move X0, [X22]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {86}
	084 Call 0x1C17DFC
	085 Move X0, [X22]
	086 Move X8, [X0+184]
	087 Move X0, X20
	088 Move X2, X31
	089 Move X1, [X8+32]
	090 Call String.LastIndexOfAny, X0, X1
	091 Compare W0, 0
	092 JumpIfEqual {106}
	093 Move W21, W0
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X8, [X19]
	096 Move X8, [X8+184]
	097 Move X0, [X8]
	098 Move X0, X31
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X22, [X31+16]
	102 Move X21, [X31+24]
	103 Move X30, [X31+48]
	104 Move X23, [X31+56]
	105 Return X0
	106 Move W21, 1
	107 Move X0, X20
	108 Move W1, W31
	109 Move W2, W21
	110 Move X3, X31
	111 Call String.Substring, X0, X1, X2
	112 Compare X0, 0
	113 JumpIfEqual {234}
	114 Move W23, [X0+16]
	115 Move X19, X0
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X8, [X22]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move W9, [X8+224]
	120 Compare W9, 0
	121 JumpIfNotEqual {125}
	122 Move X0, X8
	123 Call 0x1C17DFC
	124 Move X8, [X22]
	125 Move X9, [X8+184]
	126 NotImplemented "Instruction LDRH not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move W9, [X20+16]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X0, X20
	131 Move W1, W21
	132 Move X2, X31
	133 Call String.get_Chars, X0, X1
	134 Move X8, [X22]
	135 Move W20, W0
	136 Move W9, [X8+224]
	137 Compare W9, 0
	138 JumpIfNotEqual {142}
	139 Move X0, X8
	140 Call 0x1C17DFC
	141 Move X8, [X22]
	142 Move X9, [X8+184]
	143 NotImplemented "Instruction LDRH not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move W9, [X8+224]
	146 Compare W9, 0
	147 JumpIfNotEqual {150}
	148 Move X0, X8
	149 Call 0x1C17DFC
	150 Move X8, 0xE07000
	151 Move X8, [X8+368]
	152 Move X0, [X8]
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {157}
	156 Call 0x1C17DFC
	157 Move X8, [X22]
	158 Move X8, [X8+184]
	159 Add X0, X8, 24
	160 Move X8, [X22]
	161 Move W9, [X8+224]
	162 Compare W9, 0
	163 JumpIfNotEqual {167}
	164 Move X0, X8
	165 Call 0x1C17DFC
	166 Move X8, [X22]
	167 Move X9, [X8+184]
	168 NotImplemented "Instruction LDRH not yet implemented."
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Subtract W1, W23, 1
	171 Move X0, X19
	172 Move X2, X31
	173 Call String.get_Chars, X0, X1
	174 Move X8, [X22]
	175 Move W20, W0
	176 Move W9, [X8+224]
	177 Compare W9, 0
	178 JumpIfNotEqual {182}
	179 Move X0, X8
	180 Call 0x1C17DFC
	181 Move X8, [X22]
	182 Move X9, [X8+184]
	183 NotImplemented "Instruction LDRH not yet implemented."
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move W9, [X8+224]
	186 Compare W9, 0
	187 JumpIfNotEqual {190}
	188 Move X0, X8
	189 Call 0x1C17DFC
	190 Move X8, 0xE07000
	191 Move X8, [X8+368]
	192 Move X0, [X8]
	193 Move W8, [X0+224]
	194 Compare W8, 0
	195 JumpIfNotEqual {197}
	196 Call 0x1C17DFC
	197 Move X8, [X22]
	198 Move X8, [X8+184]
	199 Add X0, X8, 10
	200 Move X1, X31
	201 Call Char.ToString, X0
	202 Move X1, X0
	203 Move X0, X19
	204 Move X20, [X31+32]
	205 Move X19, [X31+40]
	206 Move X22, [X31+16]
	207 Move X21, [X31+24]
	208 Move X2, X31
	209 Move X30, [X31+48]
	210 Move X23, [X31+56]
	211 Call String.Concat, X0, X1
	212 Return X0
	213 Move W9, [X8+224]
	214 Compare W9, 0
	215 JumpIfNotEqual {218}
	216 Move X0, X8
	217 Call 0x1C17DFC
	218 Move X0, X19
	219 Move X20, [X31+32]
	220 Move X19, [X31+40]
	221 Move X22, [X31+16]
	222 Move X21, [X31+24]
	223 Move X30, [X31+48]
	224 Move X23, [X31+56]
	225 Call Path.CleanPath, X0
	226 Return X0
	227 Move X0, 0xE0D000
	228 Move X0, [X0+1400]
	229 Call 0x1C17D08
	230 Call 0x1C17F10
	231 Move X19, X0
	232 Move X0, 0xE39000
	233 Move X0, [X0+88]
	234 Call 0x1C17F20
	235 Move X0, 0xE0D000
	236 Move X0, [X0+1400]
	237 Call 0x1C17D08
	238 Call 0x1C17F10
	239 Move X19, X0
	240 Move X0, 0xE39000
	241 Move X0, [X0+96]
	242 Move X0, 0xE0D000
	243 Move X0, [X0+1400]
	244 Call 0x1C17D08
	245 Call 0x1C17F10
	246 Move X19, X0
	247 Move X0, 0xE39000
	248 Move X0, [X0+104]
	249 Call 0x1C17D08
	250 Move X1, X0
	251 Move X0, X19
	252 Move X2, X31
	253 Call ArgumentException..ctor, X0, X1
	254 Move X0, 0xE39000
	255 Move X0, [X0+112]
	256 Call 0x1C17D08
	257 Move X1, X0
	258 Move X0, X19
	259 Call 0x1C17DEC

Method: System.ReadOnlySpan`1<System.Char> GetDirectoryName(System.ReadOnlySpan`1<System.Char> path)

Disassembly:
	0x032FEA04 LDR X0, [X22 + 0x20]
	0x032FEA08 LDRB W8, [X0 + 0x135]
	0x032FEA0C TBNZ X8, 0x0, 0x32FEA14
	0x032FEA10 BL 0x1C5C684
	0x032FEA14 ADD X19, X19, W21, 0x1, SXTW
	0x032FEA18 SUB X20, X31, X23
	0x032FEA1C MOV X0, X19
	0x032FEA20 MOV X1, X20
	0x032FEA24 LDP X20, X19, [X31 + 0x40]
	0x032FEA28 LDP X22, X21, [X31 + 0x30]
	0x032FEA2C LDP X24, X23, [X31 + 0x20]
	0x032FEA30 LDP X26, X25, [X31 + 0x10]
	0x032FEA34 LDR X30, [X31], #0x50
	0x032FEA38 RET
	0x032FEA3C BL 0x1C16F28
	0x032FEA40 BL 0x1C16F20
	0x032FEA44 STP X30, X23, [X31 - 0x30]!
	0x032FEA48 STP X22, X21, [X31 + 0x10]
	0x032FEA4C STP X20, X19, [X31 + 0x20]
	0x032FEA50 ADRP X23, 0x10DE000
	0x032FEA54 LDRB W8, [X23 + 0xAAC]
	0x032FEA58 MOV X19, X3
	0x032FEA5C MOV X20, X2
	0x032FEA60 MOV X21, X1
	0x032FEA64 MOV X22, X0
	0x032FEA68 TBNZ X8, 0x0, 0x32FEA8C
	0x032FEA6C ADRP X0, 0xE1C000
	0x032FEA70 LDR X0, [X0 + 0x1D0]
	0x032FEA74 BL 0x1C16CF4
	0x032FEA78 ADRP X0, 0xE24000
	0x032FEA7C LDR X0, [X0 + 0x28]
	0x032FEA80 BL 0x1C16CF4
	0x032FEA84 MOVZ W8, 0x1
	0x032FEA88 STRB W8, [X23 + 0xAAC]
	0x032FEA8C CBZ W21, 0x32FEACC
	0x032FEA90 CBZ W19, 0x32FEADC
	0x032FEA94 ADRP X8, 0xE1C000
	0x032FEA98 LDR X8, [X8 + 0x1D0]
	0x032FEA9C LDR X0, [X8]
	0x032FEAA0 LDR W8, [X0 + 0xE0]
	0x032FEAA4 CBNZ W8, 0x32FEAAC
	0x032FEAA8 BL 0x1C16DFC
	0x032FEAAC MOV X0, X22
	0x032FEAB0 MOV X1, X21
	0x032FEAB4 MOV X2, X20
	0x032FEAB8 MOV X3, X19
	0x032FEABC LDP X20, X19, [X31 + 0x20]
	0x032FEAC0 LDP X22, X21, [X31 + 0x10]
	0x032FEAC4 LDP X30, X23, [X31], #0x30
	0x032FEAC8 B 0x32FEAFC
	0x032FEACC MOV X0, X31
	0x032FEAD0 MOV X1, X20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x10DF000
	007 Move [X31], X0
	008 Move [X31+8], X1
	009 Move X21, 0xE29000
	010 Move X19, 0xE1D000
	011 Move W8, [X20+2714]
	012 Move X21, [X21+4056]
	013 Move X19, [X19+464]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xE1D000
	019 Move X0, [X0+464]
	020 Call 0x1C17CF4
	021 Move X0, 0xE29000
	022 Move X0, [X0+4056]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+2714], W8
	026 Move X1, [X21]
	027 Add X0, X31, 0
	028 Call ReadOnlySpan`1<Char>.ToString, X0
	029 Move X8, [X19]
	030 Move X19, X0
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {36}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X0, X19
	037 Call Path.GetDirectoryName, X0
	038 Move X20, 0x10DF000
	039 Move W8, [X20+939]
	040 Move X19, X0
	041 Compare W8, 0
	042 JumpIfEqual {49}
	043 Compare X19, 0
	044 JumpIfEqual {56}
	045 Move X0, X19
	046 Move X1, X31
	047 Call String.GetRawStringData, X0
	048 Move W1, [X19+16]
	049 Move X0, 0xE1D000
	050 Move X0, [X0+656]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X20+939], W8
	054 Compare X19, 0
	055 JumpIfNotEqual {45}
	056 Move X0, X31
	057 Move X1, X31
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X30, [X31+16]
	061 Move X21, [X31+24]
	062 Add X31, X31, 48
	063 Return X0

Method: System.String GetFileName(System.String path)

Disassembly:
	0x032EF348 MOVZ W2, 0x4000
	0x032EF34C STR X31, [X31 + 0x8]
	0x032EF350 BL 0x32EF0C0
	0x032EF354 TBNZ X0, 0x0, 0x32EF6F4
	0x032EF358 ADRP X8, 0xE38000
	0x032EF35C LDR X8, [X8 + 0xC0]
	0x032EF360 LDR X0, [X8]
	0x032EF364 BL 0x1C16F10
	0x032EF368 ADRP X8, 0xE38000
	0x032EF36C LDR X8, [X8 + 0xB0]
	0x032EF370 MOV X20, X0
	0x032EF374 LDR X1, [X8]
	0x032EF378 BL 0x2601D04
	0x032EF37C LDRB W8, [X25 + 0x762]
	0x032EF380 CBNZ W8, 0x32EF398
	0x032EF384 ADRP X0, 0xE2B000
	0x032EF388 LDR X0, [X0 + 0x290]
	0x032EF38C BL 0x1C16CF4
	0x032EF390 MOVZ W8, 0x1
	0x032EF394 STRB W8, [X25 + 0x762]
	0x032EF398 MOV X0, X19
	0x032EF39C MOV X1, X31
	0x032EF3A0 BL 0x3225708
	0x032EF3A4 ADRP X26, 0xE2F000
	0x032EF3A8 LDR X26, [X26 + 0xD70]
	0x032EF3AC LDR W22, [X19 + 0x10]
	0x032EF3B0 MOV X23, X0
	0x032EF3B4 LDR X8, [X26]
	0x032EF3B8 LDR W9, [X8 + 0xE0]
	0x032EF3BC CBNZ W9, 0x32EF3C8
	0x032EF3C0 MOV X0, X8
	0x032EF3C4 BL 0x1C16DFC
	0x032EF3C8 MOV X0, X23
	0x032EF3CC MOV X1, X22
	0x032EF3D0 MOV X2, X31
	0x032EF3D4 BL 0x32E5024
	0x032EF3D8 CMP W21, W0
	0x032EF3DC B.LE 0x32EF4F4
	0x032EF3E0 ADRP X23, 0xE2B000
	0x032EF3E4 ADRP X29, 0xE38000
	0x032EF3E8 LDR X23, [X23 + 0x290]
	0x032EF3EC LDR X29, [X29 + 0xA8]
	0x032EF3F0 MOV W22, W0
	0x032EF3F4 MOV W27, W31
	0x032EF3F8 SUB W24, W21, 0x1
	0x032EF3FC MOVZ W28, 0x1
	0x032EF400 MOV X0, X19
	0x032EF404 MOV W1, W31
	0x032EF408 MOV W2, W21
	0x032EF40C MOV X3, X31
	0x032EF410 BL 0x3228DE4
	0x032EF414 LDRB W8, [X25 + 0x762]
	0x032EF418 MOV X21, X0
	0x032EF41C CBZ W8, 0x32EF438
	0x032EF420 CBZ X21, 0x32EF448
	0x032EF424 MOV X0, X21
	0x032EF428 MOV X1, X31
	0x032EF42C BL 0x3225708
	0x032EF430 LDR W1, [X21 + 0x10]
	0x032EF434 B 0x32EF450
	0x032EF438 MOV X0, X23
	0x032EF43C BL 0x1C16CF4
	0x032EF440 STRB W28, [X25 + 0x762]
	0x032EF444 CBNZ X21, 0x32EF424
	0x032EF448 MOV X0, X31
	0x032EF44C MOV X1, X31
	0x032EF450 ADD X3, X31, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10EE000
	005 Move W8, [X20+2715]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE2C000
	012 Move X0, [X0+464]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2715], W8
	016 Compare X19, 0
	017 JumpIfEqual {58}
	018 Move W8, [X19+16]
	019 Compare W8, 0
	020 JumpIfEqual {58}
	021 Move X20, 0xE2C000
	022 Move X20, [X20+464]
	023 Move X0, [X20]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X20]
	029 Move X8, [X0+184]
	030 Move X0, X19
	031 Move X2, X31
	032 Move X1, [X8]
	033 Call String.IndexOfAny, X0, X1
	034 Add W31, W0, 1
	035 Move X0, [X20]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X20]
	041 Move X8, [X0+184]
	042 Move X0, X19
	043 Move X2, X31
	044 Move X1, [X8+32]
	045 Call String.LastIndexOfAny, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, -2147483648
	048 Compare TEMP, -2147483648
	049 JumpIfEqual {58}
	050 Add W1, W0, 1
	051 Move X0, X19
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X2, X31
	055 Move X30, [X31+32]
	056 Call String.Substring, X0, X1
	057 Return X0
	058 Move X0, X19
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Return X0
	063 Move X0, 0xE0D000
	064 Move X0, [X0+1400]
	065 Call 0x1C17D08
	066 Call 0x1C17F10
	067 Move X19, X0
	068 Move X0, 0xE39000
	069 Move X0, [X0+72]
	070 Call 0x1C17D08
	071 Move X1, X0
	072 Move X0, X19
	073 Move X2, X31
	074 Call ArgumentException..ctor, X0, X1
	075 Move X0, 0xE39000
	076 Move X0, [X0+80]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X19
	080 Call 0x1C17DEC

Method: System.String GetFullPath(System.String path)

Disassembly:
	0x032EF2E0 MOV X0, X19
	0x032EF2E4 MOV X2, X31
	0x032EF2E8 BL 0x3222A1C
	0x032EF2EC LDR X8, [X23]
	0x032EF2F0 MOV W20, W0
	0x032EF2F4 LDR W9, [X8 + 0xE0]
	0x032EF2F8 CBNZ W9, 0x32EF304
	0x032EF2FC MOV X0, X8
	0x032EF300 BL 0x1C16DFC
	0x032EF304 MOV W0, W20
	0x032EF308 MOV X1, X31
	0x032EF30C BL 0x32E50A0
	0x032EF310 TBNZ X0, 0x0, 0x32EF718
	0x032EF314 MOVZ W21, 0x2
	0x032EF318 LDRB W8, [X25 + 0x762]
	0x032EF31C CBNZ W8, 0x32EF334
	0x032EF320 ADRP X0, 0xE2B000
	0x032EF324 LDR X0, [X0 + 0x290]
	0x032EF328 BL 0x1C16CF4
	0x032EF32C MOVZ W8, 0x1
	0x032EF330 STRB W8, [X25 + 0x762]
	0x032EF334 MOV X0, X19
	0x032EF338 MOV X1, X31
	0x032EF33C BL 0x3225708
	0x032EF340 LDR W1, [X19 + 0x10]
	0x032EF344 ADD X3, X31, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x10EE000
	006 Move X21, 0xE2C000
	007 Move W8, [X20+2716]
	008 Move X21, [X21+464]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE2C000
	015 Move X0, [X0+464]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2716], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call Path.InsecureGetFullPath, X0
	026 Move X19, X0
	027 Move X0, X31
	028 Call SecurityManager.EnsureElevatedPermissions
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return X0

Method: System.String GetFullPathInternal(System.String path)

Disassembly:
	0x032F08F8 BL 0x1C16DFC
	0x032F08FC ADRP X23, 0x10E9000
	0x032F0900 LDRB W8, [X23 + 0x88D]
	0x032F0904 CBNZ W8, 0x32F091C
	0x032F0908 ADRP X0, 0xE0B000
	0x032F090C LDR X0, [X0 + 0x7E8]
	0x032F0910 BL 0x1C16CF4
	0x032F0914 MOVZ W8, 0x1
	0x032F0918 STRB W8, [X23 + 0x88D]
	0x032F091C LDR X0, [X22]
	0x032F0920 LDR W8, [X0 + 0xE0]
	0x032F0924 CBNZ W8, 0x32F0930
	0x032F0928 BL 0x1C16DFC
	0x032F092C LDR X0, [X22]
	0x032F0930 LDR X8, [X0 + 0xB8]
	0x032F0934 MOV X0, X20
	0x032F0938 MOV X1, X21
	0x032F093C MOV X2, X19
	0x032F0940 LDR X5, [X8 + 0x8]
	0x032F0944 LDP X20, X19, [X31 + 0x20]
	0x032F0948 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x10ED000
	006 Move X21, 0xE2B000
	007 Move W8, [X20+2717]
	008 Move X21, [X21+464]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE2B000
	015 Move X0, [X0+464]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2717], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Path.InsecureGetFullPath, X0
	030 Return X0

Method: System.String InsecureGetFullPath(System.String path)

Disassembly:
	0x032F9AF0 MOV W21, W0
	0x032F9AF4 CBZ W8, 0x32F9B0C
	0x032F9AF8 MOV X20, X31
	0x032F9AFC MOV X0, X19
	0x032F9B00 MOV X1, X31
	0x032F9B04 BL 0x32BFAB4
	0x032F9B08 CBNZ X20, 0x32F9B64
	0x032F9B0C MOV W0, W21
	0x032F9B10 LDP X20, X19, [X31 + 0x20]
	0x032F9B14 LDP X30, X21, [X31 + 0x10]
	0x032F9B18 ADD X31, X31, 0x30
	0x032F9B1C RET
	0x032F9B20 BL 0x1C16F20
	0x032F9B24 B 0x32F9B2C
	0x032F9B28 B 0x32F9B2C
	0x032F9B2C MOV X21, X0
	0x032F9B30 CMP W1, 0x1
	0x032F9B34 B.NE 0x32F9B6C
	0x032F9B38 MOV X0, X21
	0x032F9B3C BL 0x3EB1AD0
	0x032F9B40 LDR X20, [X0]
	0x032F9B44 BL 0x3EB1AE0
	0x032F9B48 LDRB W8, [X31 + 0xC]
	0x032F9B4C CBZ W8, 0x32F9B5C
	0x032F9B50 CBZ X19, 0x32F9B74
	0x032F9B54 MOV W21, W31
	0x032F9B58 B 0x32F9AFC
	0x032F9B5C MOV W21, W31
	0x032F9B60 CBZ X20, 0x32F9B0C
	0x032F9B64 MOV X0, X20
	0x032F9B68 BL 0x1C16F18
	0x032F9B6C MOV X20, X31
	0x032F9B70 B 0x32F9B7C
	0x032F9B74 BL 0x1C16F20
	0x032F9B78 MOV X21, X0
	0x032F9B7C LDRB W8, [X31 + 0xC]
	0x032F9B80 CBZ W8, 0x32F9B98
	0x032F9B84 CBNZ X19, 0x32F9B8C
	0x032F9B88 BL 0x1C16F20
	0x032F9B8C MOV X0, X19
	0x032F9B90 MOV X1, X31
	0x032F9B94 BL 0x32BFAB4
	0x032F9B98 CBNZ X20, 0x32F9BA4
	0x032F9B9C MOV X0, X21
	0x032F9BA0 BL 0x1D2C690
	0x032F9BA4 MOV X0, X20
	0x032F9BA8 BL 0x1C16F18
	0x032F9BAC BL 0x1990590
	0x032F9BB0 STR X30, [X31 - 0x40]!
	0x032F9BB4 STP X24, X23, [X31 + 0x10]
	0x032F9BB8 STP X22, X21, [X31 + 0x20]
	0x032F9BBC STP X20, X19, [X31 + 0x30]
	0x032F9BC0 ADRP X22, 0x10E3000
	0x032F9BC4 LDRB W8, [X22 + 0xA85]
	0x032F9BC8 MOV W21, W2
	0x032F9BCC MOV W20, W1
	0x032F9BD0 MOV X19, X0
	0x032F9BD4 TBNZ X8, 0x0, 0x32F9C04
	0x032F9BD8 ADRP X0, 0xDFA000
	0x032F9BDC LDR X0, [X0 + 0x618]
	0x032F9BE0 BL 0x1C16CF4
	0x032F9BE4 ADRP X0, 0xE28000
	0x032F9BE8 LDR X0, [X0 + 0x670]
	0x032F9BEC BL 0x1C16CF4
	0x032F9BF0 ADRP X0, 0xDFA000
	0x032F9BF4 LDR X0, [X0 + 0x5A8]
	0x032F9BF8 BL 0x1C16CF4
	0x032F9BFC MOVZ W8, 0x1
	0x032F9C00 STRB W8, [X22 + 0xA85]
	0x032F9C04 ADRP X24, 0xDFA000
	0x032F9C08 LDR X24, [X24 + 0x618]
	0x032F9C0C STRB W31, [X31 + 0xC]
	0x032F9C10 TBZ X21, 0x0, 0x32F9C28
	0x032F9C14 LDR X0, [X24]
	0x032F9C18 MOVZ W1, 0x1
	0x032F9C1C BL 0x1C16D6C
	0x032F9C20 MOV W20, W31
	0x032F9C24 B 0x32F9D54
	0x032F9C28 CMP W20, 0x0
	0x032F9C2C B.LE 0x32F9D70
	0x032F9C30 ADRP X8, 0xDFA000
	0x032F9C34 LDR X8, [X8 + 0x5A8]
	0x032F9C38 LDR X0, [X8]
	0x032F9C3C LDR W8, [X0 + 0xE0]
	0x032F9C40 CBNZ W8, 0x32F9C48
	0x032F9C44 BL 0x1C16DFC
	0x032F9C48 MOVZ W1, 0x8
	0x032F9C4C MOV W0, W20
	0x032F9C50 MOV X2, X31
	0x032F9C54 BL 0x337EDF0
	0x032F9C58 MOV W20, W0
	0x032F9C5C CMP W0, 0x1000
	0x032F9C60 B.GT 0x32F9D2C
	0x032F9C64 ADRP X22, 0xE28000
	0x032F9C68 LDR X22, [X22 + 0x670]
	0x032F9C6C LDR X0, [X22]
	0x032F9C70 LDR W8, [X0 + 0xE0]
	0x032F9C74 CBNZ W8, 0x32F9C80
	0x032F9C78 BL 0x1C16DFC
	0x032F9C7C LDR X0, [X22]
	0x032F9C80 LDR X8, [X0 + 0xB8]
	0x032F9C84 LDR X9, [X8]
	0x032F9C88 CBZ X9, 0x32F9D2C
	0x032F9C8C LDR W9, [X0 + 0xE0]
	0x032F9C90 CBNZ W9, 0x32F9CA0
	0x032F9C94 BL 0x1C16DFC
	0x032F9C98 LDR X8, [X22]
	0x032F9C9C LDR X8, [X8 + 0xB8]
	0x032F9CA0 LDR X21, [X8 + 0x8]
	0x032F9CA4 STRB W31, [X31 + 0xC]
	0x032F9CA8 ADD X1, X31, 0xC
	0x032F9CAC MOV X0, X21
	0x032F9CB0 MOV X2, X31
	0x032F9CB4 BL 0x33DE64C
	0x032F9CB8 LDR X0, [X22]
	0x032F9CBC LDR W8, [X0 + 0xE0]
	0x032F9CC0 CBNZ W8, 0x32F9CCC
	0x032F9CC4 BL 0x1C16DFC
	0x032F9CC8 LDR X0, [X22]
	0x032F9CCC LDR X8, [X0 + 0xB8]
	0x032F9CD0 LDR X9, [X8]
	0x032F9CD4 CBZ X9, 0x32F9D00
	0x032F9CD8 LDR W10, [X0 + 0xE0]
	0x032F9CDC CBNZ W10, 0x32F9CF0
	0x032F9CE0 BL 0x1C16DFC
	0x032F9CE4 LDR X8, [X22]
	0x032F9CE8 LDR X8, [X8 + 0xB8]
	0x032F9CEC LDR X9, [X8]
	0x032F9CF0 MOV X22, X31
	0x032F9CF4 STR X9, [X19 + 0x28]
	0x032F9CF8 STR X31, [X8]
	0x032F9CFC B 0x32F9D04
	0x032F9D00 MOV X22, X31
	0x032F9D04 MOVZ W23, 0x7
	0x032F9D08 LDRB W8, [X31 + 0xC]
	0x032F9D0C CBZ W8, 0x32F9D1C
	0x032F9D10 MOV X0, X21
	0x032F9D14 MOV X1, X31
	0x032F9D18 BL 0x33E14E4
	0x032F9D1C CBNZ X22, 0x32F9DCC
	0x032F9D20 CMP W23, 0x7
	0x032F9D24 B.EQ 0x32F9D2C
	0x032F9D28 CBNZ W23, 0x32F9D5C
	0x032F9D2C LDR X0, [X19 + 0x28]
	0x032F9D30 CBZ X0, 0x32F9D48
	0x032F9D34 MOV W1, W31
	0x032F9D38 MOV W2, W20
	0x032F9D3C MOV X3, X31
	0x032F9D40 BL 0x339FA34
	0x032F9D44 B 0x32F9D58
	0x032F9D48 LDR X0, [X24]
	0x032F9D4C MOV W1, W20
	0x032F9D50 BL 0x1C16D6C
	0x032F9D54 STR X0, [X19 + 0x28]
	0x032F9D58 STR W20, [X19 + 0x5C]
	0x032F9D5C LDP X20, X19, [X31 + 0x30]
	0x032F9D60 LDP X22, X21, [X31 + 0x20]
	0x032F9D64 LDP X24, X23, [X31 + 0x10]
	0x032F9D68 LDR X30, [X31], #0x40
	0x032F9D6C RET
	0x032F9D70 ADRP X0, 0xE02000
	0x032F9D74 LDR X0, [X0 + 0x760]
	0x032F9D78 BL 0x1C16D08
	0x032F9D7C BL 0x1C16F10
	0x032F9D80 MOV X19, X0
	0x032F9D84 ADRP X0, 0xE25000
	0x032F9D88 LDR X0, [X0 + 0xF58]
	0x032F9D8C BL 0x1C16D08
	0x032F9D90 MOV X20, X0
	0x032F9D94 ADRP X0, 0xE2D000
	0x032F9D98 LDR X0, [X0 + 0xD28]
	0x032F9D9C BL 0x1C16D08
	0x032F9DA0 MOV X2, X0
	0x032F9DA4 MOV X0, X19
	0x032F9DA8 MOV X1, X20
	0x032F9DAC MOV X3, X31
	0x032F9DB0 BL 0x3311888
	0x032F9DB4 ADRP X0, 0xE2E000
	0x032F9DB8 LDR X0, [X0 + 0x568]
	0x032F9DBC BL 0x1C16D08
	0x032F9DC0 MOV X1, X0
	0x032F9DC4 MOV X0, X19
	0x032F9DC8 BL 0x1C16DEC
	0x032F9DCC MOV X0, X22
	0x032F9DD0 BL 0x1C16F18
	0x032F9DD4 B 0x32F9DD8
	0x032F9DD8 MOV X23, X0
	0x032F9DDC CMP W1, 0x1
	0x032F9DE0 B.NE 0x32F9DFC
	0x032F9DE4 MOV X0, X23
	0x032F9DE8 BL 0x3EB1AD0
	0x032F9DEC LDR X22, [X0]
	0x032F9DF0 BL 0x3EB1AE0
	0x032F9DF4 MOV W23, W31
	0x032F9DF8 B 0x32F9D08
	0x032F9DFC MOV X22, X31
	0x032F9E00 B 0x32F9E08
	0x032F9E04 MOV X23, X0
	0x032F9E08 LDRB W8, [X31 + 0xC]
	0x032F9E0C CBZ W8, 0x32F9E1C
	0x032F9E10 MOV X0, X21
	0x032F9E14 MOV X1, X31
	0x032F9E18 BL 0x33E14E4
	0x032F9E1C CBNZ X22, 0x32F9E28
	0x032F9E20 MOV X0, X23
	0x032F9E24 BL 0x1D2C690
	0x032F9E28 MOV X0, X22
	0x032F9E2C BL 0x1C16F18
	0x032F9E30 BL 0x1990590
	0x032F9E34 STP X30, X19, [X31 - 0x10]!
	0x032F9E38 MOVZ W8, 0x1
	0x032F9E3C MOV X19, X0
	0x032F9E40 STRB W8, [X0 + 0x40]
	0x032F9E44 BL 0x32FA4B0
	0x032F9E48 MOVZ W2, 0x1
	0x032F9E4C MOV X0, X19
	0x032F9E50 MOV W1, W31
	0x032F9E54 LDP X30, X19, [X31], #0x10
	0x032F9E58 B 0x32F9BB0
	0x032F9E5C SUB X31, X31, 0x40
	0x032F9E60 STP X30, X23, [X31 + 0x10]
	0x032F9E64 STP X22, X21, [X31 + 0x20]
	0x032F9E68 STP X20, X19, [X31 + 0x30]
	0x032F9E6C ADRP X23, 0x10E3000
	0x032F9E70 LDRB W8, [X23 + 0xA93]
	0x032F9E74 MOV X20, X3
	0x032F9E78 MOV W21, W2
	0x032F9E7C MOV X22, X1
	0x032F9E80 MOV X19, X0
	0x032F9E84 TBNZ X8, 0x0, 0x32F9E9C
	0x032F9E88 ADRP X0, 0xE28000
	0x032F9E8C LDR X0, [X0 + 0xFA8]
	0x032F9E90 BL 0x1C16CF4
	0x032F9E94 MOVZ W8, 0x1
	0x032F9E98 STRB W8, [X23 + 0xA93]
	0x032F9E9C STRB W31, [X31 + 0xC]
	0x032F9EA0 CBZ X19, 0x32F9F1C
	0x032F9EA4 ADD X1, X31, 0xC
	0x032F9EA8 MOV X0, X19
	0x032F9EAC MOV X2, X31
	0x032F9EB0 BL 0x32BF948
	0x032F9EB4 ADRP X8, 0xE28000
	0x032F9EB8 LDR X8, [X8 + 0xFA8]
	0x032F9EBC LDR X23, [X19 + 0x10]
	0x032F9EC0 LDR X0, [X8]
	0x032F9EC4 LDR W8, [X0 + 0xE0]
	0x032F9EC8 CBNZ W8, 0x32F9ED0
	0x032F9ECC BL 0x1C16DFC
	0x032F9ED0 MOV X0, X23
	0x032F9ED4 MOV X1, X22
	0x032F9ED8 MOV W2, W21
	0x032F9EDC MOV X3, X20
	0x032F9EE0 BL 0x1C2832C
	0x032F9EE4 LDRB W8, [X31 + 0xC]
	0x032F9EE8 MOV X21, X0
	0x032F9EEC CBZ W8, 0x32F9F04
	0x032F9EF0 MOV X20, X31
	0x032F9EF4 MOV X0, X19
	0x032F9EF8 MOV X1, X31
	0x032F9EFC BL 0x32BFAB4
	0x032F9F00 CBNZ X20, 0x32F9F60
	0x032F9F04 MOV X0, X21
	0x032F9F08 LDP X20, X19, [X31 + 0x30]
	0x032F9F0C LDP X22, X21, [X31 + 0x20]
	0x032F9F10 LDP X30, X23, [X31 + 0x10]
	0x032F9F14 ADD X31, X31, 0x40
	0x032F9F18 RET
	0x032F9F1C BL 0x1C16F20
	0x032F9F20 B 0x32F9F28
	0x032F9F24 B 0x32F9F28
	0x032F9F28 MOV X21, X0
	0x032F9F2C CMP W1, 0x1
	0x032F9F30 B.NE 0x32F9F68
	0x032F9F34 MOV X0, X21
	0x032F9F38 BL 0x3EB1AD0
	0x032F9F3C LDR X20, [X0]
	0x032F9F40 BL 0x3EB1AE0
	0x032F9F44 LDRB W8, [X31 + 0xC]
	0x032F9F48 CBZ W8, 0x32F9F58
	0x032F9F4C CBZ X19, 0x32F9F70
	0x032F9F50 MOV X21, X31
	0x032F9F54 B 0x32F9EF4
	0x032F9F58 MOV X21, X31
	0x032F9F5C CBZ X20, 0x32F9F04
	0x032F9F60 MOV X0, X20
	0x032F9F64 BL 0x1C16F18
	0x032F9F68 MOV X20, X31
	0x032F9F6C B 0x32F9F78
	0x032F9F70 BL 0x1C16F20
	0x032F9F74 MOV X21, X0
	0x032F9F78 LDRB W8, [X31 + 0xC]
	0x032F9F7C CBZ W8, 0x32F9F94
	0x032F9F80 CBNZ X19, 0x32F9F88
	0x032F9F84 BL 0x1C16F20
	0x032F9F88 MOV X0, X19
	0x032F9F8C MOV X1, X31
	0x032F9F90 BL 0x32BFAB4
	0x032F9F94 CBNZ X20, 0x32F9FA0
	0x032F9F98 MOV X0, X21
	0x032F9F9C BL 0x1D2C690
	0x032F9FA0 MOV X0, X20
	0x032F9FA4 BL 0x1C16F18
	0x032F9FA8 BL 0x1990590
	0x032F9FAC LDR W8, [X0 + 0x50]
	0x032F9FB0 AND W8, W8, 0xFFFFFFFD
	0x032F9FB4 CMP W8, 0x1
	0x032F9FB8 CSET W0, EQ
	0x032F9FBC RET
	0x032F9FC0 LDR W8, [X0 + 0x50]
	0x032F9FC4 AND W8, W8, 0xFFFFFFFE
	0x032F9FC8 CMP W8, 0x2
	0x032F9FCC CSET W0, EQ
	0x032F9FD0 RET
	0x032F9FD4 LDRB W0, [X0 + 0x56]
	0x032F9FD8 RET
	0x032F9FDC STR X30, [X31 - 0x20]!
	0x032F9FE0 STP X20, X19, [X31 + 0x10]
	0x032F9FE4 ADRP X20, 0x10E3000
	0x032F9FE8 LDRB W8, [X20 + 0xA78]
	0x032F9FEC MOV X19, X0
	0x032F9FF0 TBNZ X8, 0x0, 0x32FA008
	0x032F9FF4 ADRP X0, 0xE28000
	0x032F9FF8 LDR X0, [X0 + 0xFA8]
	0x032F9FFC BL 0x1C16CF4
	0x032FA000 MOVZ W8, 0x1
	0x032FA004 STRB W8, [X20 + 0xA78]
	0x032FA008 STR W31, [X31 + 0xC]
	0x032FA00C LDR X0, [X19 + 0x38]
	0x032FA010 CBZ X0, 0x32FA080
	0x032FA014 MOV X1, X31
	0x032FA018 BL 0x32C02A8
	0x032FA01C TBNZ X0, 0x0, 0x32FA084
	0x032FA020 LDR X8, [X19]
	0x032FA024 MOV X0, X19
	0x032FA028 LDP X9, X1, [X8 + 0x1B8]
	0x032FA02C BLR X9
	0x032FA030 TBZ X0, 0x0, 0x32FA0B8
	0x032FA034 ADRP X20, 0xE27000
	0x032FA038 LDRB W8, [X19 + 0x58]
	0x032FA03C LDR X20, [X20 + 0xFA8]
	0x032FA040 CBZ W8, 0x32FA04C
	0x032FA044 MOV X0, X19
	0x032FA048 BL 0x32FA4B0
	0x032FA04C LDR X0, [X20]
	0x032FA050 LDR X20, [X19 + 0x38]
	0x032FA054 LDR W8, [X0 + 0xE0]
	0x032FA058 CBNZ W8, 0x32FA060
	0x032FA05C BL 0x1C16DFC
	0x032FA060 ADD X1, X31, 0xC
	0x032FA064 MOV X0, X20
	0x032FA068 BL 0x32FA148
	0x032FA06C LDR W8, [X31 + 0xC]
	0x032FA070 CBNZ W8, 0x32FA0EC
	0x032FA074 LDP X20, X19, [X31 + 0x10]
	0x032FA078 LDR X30, [X31], #0x20
	0x032FA07C RET
	0x032FA080 BL 0x1C16F20
	0x032FA084 ADRP X0, 0xE22000
	0x032FA088 LDR X0, [X0 + 0x4B8]
	0x032FA08C BL 0x1C16D08
	0x032FA090 BL 0x1C16F10
	0x032FA094 MOV X19, X0
	0x032FA098 ADRP X0, 0xE2D000
	0x032FA09C LDR X0, [X0 + 0x570]
	0x032FA0A0 BL 0x1C16D08
	0x032FA0A4 MOV X1, X0
	0x032FA0A8 MOV X0, X19
	0x032FA0AC MOV X2, X31
	0x032FA0B0 BL 0x338C448
	0x032FA0B4 B 0x32FA120
	0x032FA0B8 ADRP X0, 0xDF9000
	0x032FA0BC LDR X0, [X0 + 0xB40]
	0x032FA0C0 BL 0x1C16D08
	0x032FA0C4 BL 0x1C16F10
	0x032FA0C8 MOV X19, X0
	0x032FA0CC ADRP X0, 0xE2D000
	0x032FA0D0 LDR X0, [X0 + 0x578]
	0x032FA0D4 BL 0x1C16D08
	0x032FA0D8 MOV X1, X0
	0x032FA0DC MOV X0, X19
	0x032FA0E0 MOV X2, X31
	0x032FA0E4 BL 0x3379A44
	0x032FA0E8 B 0x32FA120
	0x032FA0EC LDR X1, [X19 + 0x30]
	0x032FA0F0 MOV X0, X19
	0x032FA0F4 BL 0x32F92BC
	0x032FA0F8 MOV X20, X0
	0x032FA0FC ADRP X0, 0xE27000
	0x032FA100 LDR W19, [X31 + 0xC]
	0x032FA104 LDR X0, [X0 + 0xFA8]
	0x032FA108 BL 0x1C16D08
	0x032FA10C BL 0x19903D0
	0x032FA110 MOV X0, X20
	0x032FA114 MOV W1, W19
	0x032FA118 BL 0x32F9334
	0x032FA11C MOV X19, X0
	0x032FA120 ADRP X0, 0xE2D000
	0x032FA124 LDR X0, [X0 + 0x580]
	0x032FA128 BL 0x1C16D08
	0x032FA12C MOV X1, X0
	0x032FA130 MOV X0, X19
	0x032FA134 BL 0x1C16DEC
	0x032FA138 LDRB W8, [X0 + 0x58]
	0x032FA13C CBZ W8, 0x32FA144
	0x032FA140 B 0x32FA4B0
	0x032FA144 RET
	0x032FA148 SUB X31, X31, 0x30
	0x032FA14C STP X30, X21, [X31 + 0x10]
	0x032FA150 STP X20, X19, [X31 + 0x20]
	0x032FA154 ADRP X21, 0x10E2000
	0x032FA158 LDRB W8, [X21 + 0xA94]
	0x032FA15C MOV X20, X1
	0x032FA160 MOV X19, X0
	0x032FA164 TBNZ X8, 0x0, 0x32FA17C
	0x032FA168 ADRP X0, 0xE27000
	0x032FA16C LDR X0, [X0 + 0xFA8]
	0x032FA170 BL 0x1C16CF4
	0x032FA174 MOVZ W8, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x10E4000
	009 Move W8, [X20+2718]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xDFD000
	016 Move X0, [X0+368]
	017 Call 0x1C17CF4
	018 Move X0, 0xE29000
	019 Move X0, [X0+4008]
	020 Call 0x1C17CF4
	021 Move X0, 0xE22000
	022 Move X0, [X0+464]
	023 Call 0x1C17CF4
	024 Move X0, 0xE2F000
	025 Move X0, [X0+1192]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+2718], W8
	029 Move [X31+8], X31
	030 Compare X19, 0
	031 JumpIfEqual {415}
	032 Move X0, X19
	033 Move X1, X31
	034 Call String.Trim, X0
	035 Compare X0, 0
	036 JumpIfEqual {414}
	037 Move W8, [X0+16]
	038 Compare W8, 0
	039 JumpIfEqual {427}
	040 Move W8, [X19+16]
	041 Move X23, 0xE22000
	042 Move X23, [X23+464]
	043 Move X0, X19
	044 Subtract W1, W8, 1
	045 Move X2, X31
	046 Call String.get_Chars, X0, X1
	047 Move W8, [X19+16]
	048 Move W20, W0
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, X19
	051 Move W1, W31
	052 Move X2, X31
	053 Call String.get_Chars, X0, X1
	054 Move X8, [X23]
	055 Move W21, W0
	056 Move W9, [X8+224]
	057 Compare W9, 0
	058 JumpIfNotEqual {61}
	059 Move X0, X8
	060 Call 0x1C17DFC
	061 Move W0, W21
	062 Call Path.IsDirectorySeparator, X0
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {127}
	067 Move W1, 1
	068 Move X0, X19
	069 Move X2, X31
	070 Call String.get_Chars, X0, X1
	071 Move X8, [X23]
	072 Move W21, W0
	073 Move W9, [X8+224]
	074 Compare W9, 0
	075 JumpIfNotEqual {78}
	076 Move X0, X8
	077 Call 0x1C17DFC
	078 Move W0, W21
	079 Call Path.IsDirectorySeparator, X0
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {127}
	084 Move W8, [X19+16]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X0, X19
	087 Move W1, W31
	088 Move X2, X31
	089 Call String.get_Chars, X0, X1
	090 Move W1, W0
	091 Move W2, 2
	092 Move X0, X19
	093 Move X3, X31
	094 Call String.IndexOf, X0, X1, X2
	095 Move TEMP, X0
	096 And TEMP, TEMP, -2147483648
	097 Compare TEMP, -2147483648
	098 JumpIfEqual {447}
	099 Move X0, X19
	100 Move W1, W31
	101 Move X2, X31
	102 Call String.get_Chars, X0, X1
	103 Move X8, [X23]
	104 Move W21, W0
	105 Move W9, [X8+224]
	106 Compare W9, 0
	107 JumpIfNotEqual {111}
	108 Move X0, X8
	109 Call 0x1C17DFC
	110 Move X8, [X23]
	111 Move X9, [X8+184]
	112 NotImplemented "Instruction LDRH not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move W10, [X8+224]
	115 Compare W10, 0
	116 JumpIfNotEqual {122}
	117 Move X0, X8
	118 Call 0x1C17DFC
	119 Move X8, [X23]
	120 Move X9, [X8+184]
	121 NotImplemented "Instruction LDRH not yet implemented."
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move X0, X19
	124 Move X3, X31
	125 Call String.Replace, X0, X1, X2
	126 Move X19, X0
	127 Move X0, [X23]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Move X0, X19
	133 Call Path.IsPathRooted, X0
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfNotEqual {210}
	138 Move X0, [X23]
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {144}
	142 Call 0x1C17DFC
	143 Move X0, [X23]
	144 Move X8, [X0+184]
	145 NotImplemented "Instruction LDRH not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move W8, [X19+16]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move X0, X19
	150 Move W1, W31
	151 Move X2, X31
	152 Call String.get_Chars, X0, X1
	153 Move X8, [X23]
	154 Move W21, W0
	155 Move W9, [X8+224]
	156 Compare W9, 0
	157 JumpIfNotEqual {160}
	158 Move X0, X8
	159 Call 0x1C17DFC
	160 Move W0, W21
	161 Call Path.IsDirectorySeparator, X0
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfNotEqual {316}
	166 Move W1, 1
	167 Move X0, X19
	168 Move X2, X31
	169 Call String.get_Chars, X0, X1
	170 Move X8, [X23]
	171 Move W21, W0
	172 Move W9, [X8+224]
	173 Compare W9, 0
	174 JumpIfNotEqual {177}
	175 Move X0, X8
	176 Call 0x1C17DFC
	177 Move W0, W21
	178 Call Path.IsDirectorySeparator, X0
	179 Move TEMP, X0
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfEqual {316}
	183 Move X0, X31
	184 Call Directory.InsecureGetCurrentDirectory
	185 Compare X0, 0
	186 JumpIfEqual {414}
	187 Move W1, 1
	188 Move X2, X31
	189 Move X21, X0
	190 Call String.get_Chars, X0, X1
	191 Move X8, [X23]
	192 Move W22, W0
	193 Move W9, [X8+224]
	194 Compare W9, 0
	195 JumpIfNotEqual {199}
	196 Move X0, X8
	197 Call 0x1C17DFC
	198 Move X8, [X23]
	199 Move X8, [X8+184]
	200 NotImplemented "Instruction LDRH not yet implemented."
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move W2, 2
	203 Move X0, X21
	204 Move W1, W31
	205 Move X3, X31
	206 Call String.Substring, X0, X1, X2
	207 Move X1, X19
	208 Move X2, X31
	209 Call String.Concat, X0, X1
	210 Move X0, X31
	211 Call Environment.get_IsRunningOnWindows
	212 Move TEMP, X0
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfNotEqual {217}
	216 Move W24, 1
	217 Move W21, W31
	218 Move W1, 46
	219 Move X0, X19
	220 Move W2, W21
	221 Move X3, X31
	222 Call String.IndexOf, X0, X1, X2
	223 Add W31, W0, 1
	224 Move W8, [X19+16]
	225 Add W21, W0, 1
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Move X0, X19
	228 Move W1, W21
	229 Move X2, X31
	230 Call String.get_Chars, X0, X1
	231 Move X8, [X23]
	232 Move W22, W0
	233 Move W9, [X8+224]
	234 Compare W9, 0
	235 JumpIfNotEqual {239}
	236 Move X0, X8
	237 Call 0x1C17DFC
	238 Move X8, [X23]
	239 Move X8, [X8+184]
	240 NotImplemented "Instruction LDRH not yet implemented."
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move X0, X19
	243 Move W1, W21
	244 Move X2, X31
	245 Call String.get_Chars, X0, X1
	246 Move X8, [X23]
	247 Move W22, W0
	248 Move W9, [X8+224]
	249 Compare W9, 0
	250 JumpIfNotEqual {254}
	251 Move X0, X8
	252 Call 0x1C17DFC
	253 Move X8, [X23]
	254 Move X8, [X8+184]
	255 NotImplemented "Instruction LDRH not yet implemented."
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Move TEMP, 0
	258 Not TEMP
	259 Move W21, TEMP
	260 NotImplemented "Instruction CMP not yet implemented."
	261 NotImplemented "Instruction CSET not yet implemented."
	262 Move X0, X31
	263 Call Directory.InsecureGetCurrentDirectory
	264 Compare X0, 0
	265 JumpIfEqual {414}
	266 Move W8, [X0+16]
	267 Move X2, X31
	268 Move X21, X0
	269 Subtract W1, W8, 1
	270 Call String.get_Chars, X0, X1
	271 Move X8, [X23]
	272 Move W22, W0
	273 Move W9, [X8+224]
	274 Compare W9, 0
	275 JumpIfNotEqual {279}
	276 Move X0, X8
	277 Call 0x1C17DFC
	278 Move X8, [X23]
	279 Move X9, [X8+184]
	280 NotImplemented "Instruction LDRH not yet implemented."
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Move X0, X21
	283 Move X1, X19
	284 Move X2, X31
	285 Call String.Concat, X0, X1
	286 Move X19, X0
	287 Compare W24, 0
	288 JumpIfNotEqual {316}
	289 Move W9, [X8+224]
	290 Compare W9, 0
	291 JumpIfNotEqual {294}
	292 Move X0, X8
	293 Call 0x1C17DFC
	294 Move X8, 0xDFD000
	295 Move X8, [X8+368]
	296 Move X0, [X8]
	297 Move W8, [X0+224]
	298 Compare W8, 0
	299 JumpIfNotEqual {301}
	300 Call 0x1C17DFC
	301 Move X8, [X23]
	302 Move X1, X31
	303 Move X8, [X8+184]
	304 Add X0, X8, 10
	305 Call Char.ToString, X0
	306 Move X1, X0
	307 Move X0, X21
	308 Move X2, X19
	309 Move X3, X31
	310 Call String.Concat, X0, X1, X2
	311 Move X19, X0
	312 Move TEMP, X24
	313 And TEMP, TEMP, 1
	314 Compare TEMP, 1
	315 JumpIfNotEqual {324}
	316 Move X0, [X23]
	317 Move W8, [X0+224]
	318 Compare W8, 0
	319 JumpIfNotEqual {321}
	320 Call 0x1C17DFC
	321 Move X0, X19
	322 Call Path.CanonicalizePath, X0
	323 Move X19, X0
	324 Move X0, [X23]
	325 Move W8, [X0+224]
	326 Compare W8, 0
	327 JumpIfNotEqual {329}
	328 Call 0x1C17DFC
	329 Move W0, W20
	330 Call Path.IsDirectorySeparator, X0
	331 Move TEMP, X0
	332 And TEMP, TEMP, 1
	333 Compare TEMP, 1
	334 JumpIfNotEqual {375}
	335 Compare X19, 0
	336 JumpIfEqual {414}
	337 Move W8, [X19+16]
	338 Move X0, X19
	339 Move X2, X31
	340 Subtract W1, W8, 1
	341 Call String.get_Chars, X0, X1
	342 Move X8, [X23]
	343 Move W20, W0
	344 Move W9, [X8+224]
	345 Compare W9, 0
	346 JumpIfNotEqual {350}
	347 Move X0, X8
	348 Call 0x1C17DFC
	349 Move X8, [X23]
	350 Move X9, [X8+184]
	351 NotImplemented "Instruction LDRH not yet implemented."
	352 NotImplemented "Instruction CMP not yet implemented."
	353 Move W9, [X8+224]
	354 Compare W9, 0
	355 JumpIfNotEqual {358}
	356 Move X0, X8
	357 Call 0x1C17DFC
	358 Move X8, 0xDFD000
	359 Move X8, [X8+368]
	360 Move X0, [X8]
	361 Move W8, [X0+224]
	362 Compare W8, 0
	363 JumpIfNotEqual {365}
	364 Call 0x1C17DFC
	365 Move X8, [X23]
	366 Move X1, X31
	367 Move X8, [X8+184]
	368 Add X0, X8, 10
	369 Call Char.ToString, X0
	370 Move X1, X0
	371 Move X0, X19
	372 Move X2, X31
	373 Call String.Concat, X0, X1
	374 Move X19, X0
	375 Move X8, 0xE28000
	376 Move X8, [X8+4008]
	377 Move X0, [X8]
	378 Move W8, [X0+224]
	379 Compare W8, 0
	380 JumpIfNotEqual {382}
	381 Call 0x1C17DFC
	382 Add X1, X31, 8
	383 Move X0, X19
	384 Call 0x1C291E0
	385 Move X8, [X31+8]
	386 And W31, W0, 1
	387 Move X22, [X31+32]
	388 Move X21, [X31+40]
	389 Move X24, [X31+16]
	390 Move X23, [X31+24]
	391 NotImplemented "Instruction CSEL not yet implemented."
	392 Move X20, [X31+48]
	393 Move X19, [X31+56]
	394 Move X30, [X31+64]
	395 Return X0
	396 Move X8, 0xE2E000
	397 Move W3, [X21+16]
	398 Move X8, [X8+1192]
	399 Move X0, X21
	400 Move W2, W31
	401 Move X4, X31
	402 Move X1, [X8]
	403 Call String.IndexOfUnchecked, X0, X1, X2, X3
	404 Add W2, W0, 1
	405 Move W1, 92
	406 Move X0, X21
	407 Move X3, X31
	408 Call String.IndexOf, X0, X1, X2
	409 Move W2, W0
	410 Move X0, X21
	411 Move W1, W31
	412 Move X3, X31
	413 Call String.Substring, X0, X1, X2
	414 Call 0x1C17F20
	415 Move X0, 0xDFF000
	416 Move X0, [X0+1320]
	417 Call 0x1C17D08
	418 Call 0x1C17F10
	419 Move X19, X0
	420 Move X0, 0xE05000
	421 Move X0, [X0+288]
	422 Call 0x1C17D08
	423 Move X1, X0
	424 Move X0, X19
	425 Move X2, X31
	426 Call ArgumentNullException..ctor, X0, X1
	427 Move X0, 0xE2E000
	428 Move X0, [X0+1200]
	429 Call 0x1C17D08
	430 Move X1, X31
	431 Call Locale.GetText, X0
	432 Move X19, X0
	433 Move X0, 0xE02000
	434 Move X0, [X0+1400]
	435 Call 0x1C17D08
	436 Call 0x1C17F10
	437 Move X1, X19
	438 Move X2, X31
	439 Move X20, X0
	440 Call ArgumentException..ctor, X0, X1
	441 Move X0, 0xE2E000
	442 Move X0, [X0+1208]
	443 Call 0x1C17D08
	444 Move X1, X0
	445 Move X0, X20
	446 Call 0x1C17DEC
	447 Move X0, 0xE02000
	448 Move X0, [X0+1400]
	449 Call 0x1C17D08
	450 Call 0x1C17F10
	451 Move X19, X0
	452 Move X0, 0xE2E000
	453 Move X0, [X0+1216]
	454 Call 0x1C17D08
	455 Move X1, X0
	456 Move X0, X19
	457 Move X2, X31
	458 Call ArgumentException..ctor, X0, X1
	459 Move X0, 0xE2E000
	460 Move X0, [X0+1208]
	461 Call 0x1C17D08
	462 Move X1, X0
	463 Move X0, X19
	464 Call 0x1C17DEC

Method: System.Boolean IsDirectorySeparator(System.Char c)

Disassembly:
	0x032F5A0C B.EQ 0x32F5A54
	0x032F5A10 LDRB W9, [X8 + 0x20]
	0x032F5A14 LDRB W10, [X8 + 0x21]
	0x032F5A18 LDRB W11, [X8 + 0x22]
	0x032F5A1C LDRB W12, [X8 + 0x23]
	0x032F5A20 LDRB W13, [X8 + 0x24]
	0x032F5A24 LDRB W14, [X8 + 0x25]
	0x032F5A28 BFM X9, X10, 0x38, 0x7
	0x032F5A2C LDRB W15, [X8 + 0x26]
	0x032F5A30 BFM X9, X11, 0x30, 0x7
	0x032F5A34 LDRB W8, [X8 + 0x27]
	0x032F5A38 BFM X9, X12, 0x28, 0x7
	0x032F5A3C BFM X9, X13, 0x20, 0x7
	0x032F5A40 BFM X9, X14, 0x18, 0x7
	0x032F5A44 ORR X9, X9, X15, 0x30
	0x032F5A48 ORR X0, X9, X8, 0x38
	0x032F5A4C LDP X30, X19, [X31], #0x10
	0x032F5A50 RET
	0x032F5A54 BL 0x1C16F28
	0x032F5A58 BL 0x1C16F20
	0x032F5A5C STP X30, X19, [X31 - 0x10]!
	0x032F5A60 LDR X8, [X0]
	0x032F5A64 MOVZ W1, 0x4
	0x032F5A68 MOV X19, X0
	0x032F5A6C LDR X9, [X8 + 0x2D8]
	0x032F5A70 LDR X2, [X8 + 0x2E0]
	0x032F5A74 BLR X9
	0x032F5A78 LDR X0, [X19 + 0x18]
	0x032F5A7C MOV W1, W31
	0x032F5A80 MOV X2, X31
	0x032F5A84 LDP X30, X19, [X31], #0x10
	0x032F5A88 B 0x3216DA4
	0x032F5A8C STP X30, X19, [X31 - 0x10]!
	0x032F5A90 LDR X8, [X0]
	0x032F5A94 MOVZ W1, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10E8000
	006 Move X20, 0xE26000
	007 Move W8, [X21+2719]
	008 Move X20, [X20+464]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE26000
	015 Move X0, [X0+464]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2719], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W0, 1
	029 Move W9, [X0+224]
	030 Compare W9, 0
	031 JumpIfNotEqual {35}
	032 Call 0x1C17DFC
	033 Move X8, [X20]
	034 Move X8, [X8+184]
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSET not yet implemented."
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0

Method: System.String GetPathRoot(System.String path)

Disassembly:
	0x032FE5D8 BL 0x32FD064
	0x032FE5DC TBZ X0, 0x0, 0x32FE5F8
	0x032FE5E0 CBZ X20, 0x32FE734
	0x032FE5E4 MOV X0, X20
	0x032FE5E8 MOV W1, W31
	0x032FE5EC MOV X2, X31
	0x032FE5F0 BL 0x3232ADC
	0x032FE5F4 B 0x32FE5FC
	0x032FE5F8 CBZ X20, 0x32FE734
	0x032FE5FC MOV X0, X20
	0x032FE600 MOV X1, X21
	0x032FE604 MOV X2, X31
	0x032FE608 SUB W25, W25, 0x1
	0x032FE60C BL 0x32333E0
	0x032FE610 CMP W25, 0x1
	0x032FE614 MOV W26, W31
	0x032FE618 B.LT 0x32FE6B0
	0x032FE61C LDR W8, [X21 + 0x10]
	0x032FE620 SUBS W1, W8, 0x1
	0x032FE624 B.LT 0x32FE6B0
	0x032FE628 MOV X0, X21
	0x032FE62C MOV X2, X31
	0x032FE630 BL 0x3222A1C
	0x032FE634 LDR X8, [X23]
	0x032FE638 MOV W21, W0
	0x032FE63C LDR W9, [X8 + 0xE0]
	0x032FE640 CBNZ W9, 0x32FE650
	0x032FE644 MOV X0, X8
	0x032FE648 BL 0x1C16DFC
	0x032FE64C LDR X8, [X23]
	0x032FE650 LDR X9, [X8 + 0xB8]
	0x032FE654 LDRH W10, [X9 + 0xA]
	0x032FE658 CMP W10, W21, UXTH
	0x032FE65C B.EQ 0x32FE684
	0x032FE660 LDR W10, [X8 + 0xE0]
	0x032FE664 CBNZ W10, 0x32FE678
	0x032FE668 MOV X0, X8
	0x032FE66C BL 0x1C16DFC
	0x032FE670 LDR X8, [X23]
	0x032FE674 LDR X9, [X8 + 0xB8]
	0x032FE678 LDRH W10, [X9 + 0x8]
	0x032FE67C CMP W10, W21, UXTH
	0x032FE680 B.NE 0x32FE68C
	0x032FE684 MOV W26, W31
	0x032FE688 B 0x32FE6B0
	0x032FE68C LDR W10, [X8 + 0xE0]
	0x032FE690 CBNZ W10, 0x32FE6A4
	0x032FE694 MOV X0, X8
	0x032FE698 BL 0x1C16DFC
	0x032FE69C LDR X8, [X23]
	0x032FE6A0 LDR X9, [X8 + 0xB8]
	0x032FE6A4 LDRH W8, [X9 + 0x18]
	0x032FE6A8 CMP W8, W21, UXTH
	0x032FE6AC CSET W26, NE
	0x032FE6B0 LDR W8, [X19 + 0x18]
	0x032FE6B4 ADD X22, X22, 0x1
	0x032FE6B8 CMP W22, W8
	0x032FE6BC B.LT 0x32FE54C
	0x032FE6C0 CBZ X20, 0x32FE734
	0x032FE6C4 LDR X8, [X20]
	0x032FE6C8 MOV X0, X20
	0x032FE6CC LDP X20, X19, [X31 + 0x40]
	0x032FE6D0 LDP X22, X21, [X31 + 0x30]
	0x032FE6D4 LDP X2, X1, [X8 + 0x168]
	0x032FE6D8 LDP X24, X23, [X31 + 0x20]
	0x032FE6DC LDP X26, X25, [X31 + 0x10]
	0x032FE6E0 LDR X30, [X31], #0x50
	0x032FE6E4 BR X2
	0x032FE6E8 BL 0x1C16F28
	0x032FE6EC ADRP X0, 0xDFA000
	0x032FE6F0 LDR X0, [X0 + 0x528]
	0x032FE6F4 BL 0x1C16D08
	0x032FE6F8 BL 0x1C16F10
	0x032FE6FC MOV X19, X0
	0x032FE700 ADRP X0, 0xE29000
	0x032FE704 LDR X0, [X0 + 0x720]
	0x032FE708 BL 0x1C16D08
	0x032FE70C MOV X20, X0
	0x032FE710 ADRP X0, 0xE29000
	0x032FE714 LDR X0, [X0 + 0x728]
	0x032FE718 BL 0x1C16D08
	0x032FE71C MOV X2, X0
	0x032FE720 MOV X0, X19
	0x032FE724 MOV X1, X20
	0x032FE728 MOV X3, X31
	0x032FE72C BL 0x3315F7C
	0x032FE730 B 0x32FE768
	0x032FE734 BL 0x1C16F20
	0x032FE738 ADRP X0, 0xDFD000
	0x032FE73C LDR X0, [X0 + 0x578]
	0x032FE740 BL 0x1C16D08
	0x032FE744 BL 0x1C16F10
	0x032FE748 MOV X19, X0
	0x032FE74C ADRP X0, 0xE29000
	0x032FE750 LDR X0, [X0 + 0x48]
	0x032FE754 BL 0x1C16D08
	0x032FE758 MOV X1, X0
	0x032FE75C MOV X0, X19
	0x032FE760 MOV X2, X31
	0x032FE764 BL 0x3314A68
	0x032FE768 ADRP X0, 0xE29000
	0x032FE76C LDR X0, [X0 + 0x730]
	0x032FE770 BL 0x1C16D08
	0x032FE774 MOV X1, X0
	0x032FE778 MOV X0, X19
	0x032FE77C BL 0x1C16DEC
	0x032FE780 ADRP X0, 0xDFA000
	0x032FE784 LDR X0, [X0 + 0x528]
	0x032FE788 BL 0x1C16D08
	0x032FE78C BL 0x1C16F10
	0x032FE790 MOV X19, X0
	0x032FE794 ADRP X0, 0xE29000
	0x032FE798 LDR X0, [X0 + 0x728]
	0x032FE79C BL 0x1C16D08
	0x032FE7A0 MOV X1, X0
	0x032FE7A4 MOV X0, X19
	0x032FE7A8 MOV X2, X31
	0x032FE7AC BL 0x330E100
	0x032FE7B0 B 0x32FE768
	0x032FE7B4 STR X30, [X31 - 0x30]!
	0x032FE7B8 STP X22, X21, [X31 + 0x10]
	0x032FE7BC STP X20, X19, [X31 + 0x20]
	0x032FE7C0 ADRP X22, 0x10DE000
	0x032FE7C4 LDRB W8, [X22 + 0xAAA]
	0x032FE7C8 MOV X19, X2
	0x032FE7CC MOV X20, X1
	0x032FE7D0 MOV X21, X0
	0x032FE7D4 TBNZ X8, 0x0, 0x32FE7F8
	0x032FE7D8 ADRP X0, 0xE1C000
	0x032FE7DC LDR X0, [X0 + 0x1D0]
	0x032FE7E0 BL 0x1C16CF4
	0x032FE7E4 ADRP X0, 0xDF5000
	0x032FE7E8 LDR X0, [X0 + 0xAC8]
	0x032FE7EC BL 0x1C16CF4
	0x032FE7F0 MOVZ W8, 0x1
	0x032FE7F4 STRB W8, [X22 + 0xAAA]
	0x032FE7F8 CBZ X21, 0x32FE874
	0x032FE7FC CBZ X20, 0x32FE894
	0x032FE800 CBZ X19, 0x32FE8B4
	0x032FE804 ADRP X8, 0xDF5000
	0x032FE808 LDR X8, [X8 + 0xAC8]
	0x032FE80C MOVZ W1, 0x3
	0x032FE810 LDR X0, [X8]
	0x032FE814 BL 0x1C16D6C
	0x032FE818 CBZ X0, 0x32FE8FC
	0x032FE81C LDR W8, [X0 + 0x18]
	0x032FE820 MOV X22, X0
	0x032FE824 CBZ W8, 0x32FE870
	0x032FE828 CMP W8, 0x1
	0x032FE82C STR X21, [X22 + 0x20]
	0x032FE830 B.EQ 0x32FE870
	0x032FE834 CMP W8, 0x2
	0x032FE838 STR X20, [X22 + 0x28]
	0x032FE83C B.LS 0x32FE870
	0x032FE840 ADRP X8, 0xE1C000
	0x032FE844 LDR X8, [X8 + 0x1D0]
	0x032FE848 STR X19, [X22 + 0x30]
	0x032FE84C LDR X0, [X8]
	0x032FE850 LDR W8, [X0 + 0xE0]
	0x032FE854 CBNZ W8, 0x32FE85C
	0x032FE858 BL 0x1C16DFC
	0x032FE85C MOV X0, X22
	0x032FE860 LDP X20, X19, [X31 + 0x20]
	0x032FE864 LDP X22, X21, [X31 + 0x10]
	0x032FE868 LDR X30, [X31], #0x30
	0x032FE86C B 0x32FE4C4
	0x032FE870 BL 0x1C16F28
	0x032FE874 ADRP X0, 0xDFA000
	0x032FE878 LDR X0, [X0 + 0x528]
	0x032FE87C BL 0x1C16D08
	0x032FE880 BL 0x1C16F10
	0x032FE884 MOV X19, X0
	0x032FE888 ADRP X0, 0xE29000
	0x032FE88C LDR X0, [X0 + 0x6D8]
	0x032FE890 B 0x32FE8D0
	0x032FE894 ADRP X0, 0xDFA000
	0x032FE898 LDR X0, [X0 + 0x528]
	0x032FE89C BL 0x1C16D08
	0x032FE8A0 BL 0x1C16F10
	0x032FE8A4 MOV X19, X0
	0x032FE8A8 ADRP X0, 0xE29000
	0x032FE8AC LDR X0, [X0 + 0x6E0]
	0x032FE8B0 B 0x32FE8D0
	0x032FE8B4 ADRP X0, 0xDFA000
	0x032FE8B8 LDR X0, [X0 + 0x528]
	0x032FE8BC BL 0x1C16D08
	0x032FE8C0 BL 0x1C16F10
	0x032FE8C4 MOV X19, X0
	0x032FE8C8 ADRP X0, 0xE29000
	0x032FE8CC LDR X0, [X0 + 0x738]
	0x032FE8D0 BL 0x1C16D08
	0x032FE8D4 MOV X1, X0
	0x032FE8D8 MOV X0, X19
	0x032FE8DC MOV X2, X31
	0x032FE8E0 BL 0x330E100
	0x032FE8E4 ADRP X0, 0xE29000
	0x032FE8E8 LDR X0, [X0 + 0x740]
	0x032FE8EC BL 0x1C16D08
	0x032FE8F0 MOV X1, X0
	0x032FE8F4 MOV X0, X19
	0x032FE8F8 BL 0x1C16DEC
	0x032FE8FC BL 0x1C16F20
	0x032FE900 STR X30, [X31 - 0x50]!
	0x032FE904 STP X26, X25, [X31 + 0x10]
	0x032FE908 STP X24, X23, [X31 + 0x20]
	0x032FE90C STP X22, X21, [X31 + 0x30]
	0x032FE910 STP X20, X19, [X31 + 0x40]
	0x032FE914 ADRP X21, 0x10DE000
	0x032FE918 ADRP X22, 0xE1C000
	0x032FE91C LDRB W8, [X21 + 0xAAB]
	0x032FE920 LDR X22, [X22 + 0x1D0]
	0x032FE924 MOV X20, X1
	0x032FE928 MOV X19, X0
	0x032FE92C TBNZ X8, 0x0, 0x32FE95C
	0x032FE930 ADRP X0, 0xE1C000
	0x032FE934 LDR X0, [X0 + 0x1D0]
	0x032FE938 BL 0x1C16CF4
	0x032FE93C ADRP X0, 0xE28000
	0x032FE940 LDR X0, [X0 + 0xD90]
	0x032FE944 BL 0x1C16CF4
	0x032FE948 ADRP X0, 0xE24000
	0x032FE94C LDR X0, [X0 + 0x28]
	0x032FE950 BL 0x1C16CF4
	0x032FE954 MOVZ W8, 0x1
	0x032FE958 STRB W8, [X21 + 0xAAB]
	0x032FE95C MOV X0, X31
	0x032FE960 MOV X1, X19
	0x032FE964 MOV X2, X20
	0x032FE968 MOV X3, X31
	0x032FE96C BL 0x322EB14
	0x032FE970 LDR X8, [X22]
	0x032FE974 MOV X21, X0
	0x032FE978 LDR W9, [X8 + 0xE0]
	0x032FE97C CBNZ W9, 0x32FE988
	0x032FE980 MOV X0, X8
	0x032FE984 BL 0x1C16DFC
	0x032FE988 MOV X0, X21
	0x032FE98C BL 0x32FD5D8
	0x032FE990 CBZ X0, 0x32FEA40
	0x032FE994 ADRP X24, 0xE28000
	0x032FE998 LDR W25, [X0 + 0x10]
	0x032FE99C LDR X24, [X24 + 0xD90]
	0x032FE9A0 MOV X8, X31
	0x032FE9A4 SUB X26, X20, 0x1
	0x032FE9A8 MOV X23, X8
	0x032FE9AC ADDS W31, W26, W23
	0x032FE9B0 B.MI 0x32FEA1C
	0x032FE9B4 ADD X8, X26, X23
	0x032FE9B8 CMP W8, W25
	0x032FE9BC B.LT 0x32FE9EC
	0x032FE9C0 CMP W8, W20
	0x032FE9C4 B.CS 0x32FEA3C
	0x032FE9C8 LDR X0, [X22]
	0x032FE9CC LDRH W21, [X19, W8, UXTW]
	0x032FE9D0 LDR W9, [X0 + 0xE0]
	0x032FE9D4 CBNZ W9, 0x32FE9DC
	0x032FE9D8 BL 0x1C16DFC
	0x032FE9DC MOV W0, W21
	0x032FE9E0 BL 0x32F4A0C
	0x032FE9E4 SUB X8, X23, 0x1
	0x032FE9E8 TBZ X0, 0x0, 0x32FE9A8
	0x032FE9EC LDR X22, [X24]
	0x032FE9F0 ADD X21, X20, X23
	0x032FE9F4 CMP W21, W20
	0x032FE9F8 B.LS 0x32FEA04
	0x032FE9FC MOV X0, X31
	0x032FEA00 BL 0x339D6EC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x10DF000
	007 Move W8, [X20+2720]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xE1D000
	014 Move X0, [X0+464]
	015 Call 0x1C17CF4
	016 Move X0, 0xDF8000
	017 Move X0, [X0+632]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2720], W8
	021 Compare X19, 0
	022 JumpIfEqual {70}
	023 Move X0, X19
	024 Move X1, X31
	025 Call String.Trim, X0
	026 Compare X0, 0
	027 JumpIfEqual {306}
	028 Move W8, [X0+16]
	029 Compare W8, 0
	030 JumpIfEqual {288}
	031 Move X22, 0xE1D000
	032 Move X22, [X22+464]
	033 Move X0, [X22]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X19
	039 Call Path.IsPathRooted, X0
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {149}
	044 Move X0, [X22]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X22]
	050 Move X8, [X0+184]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X0, X19
	054 Move W1, W31
	055 Move X2, X31
	056 Call String.get_Chars, X0, X1
	057 Move X8, [X22]
	058 Move W19, W0
	059 Move W9, [X8+224]
	060 Compare W9, 0
	061 JumpIfNotEqual {64}
	062 Move X0, X8
	063 Call 0x1C17DFC
	064 Move W0, W19
	065 Call Path.IsDirectorySeparator, X0
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {149}
	070 Move X0, X31
	071 Move W8, [X19+16]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X0, X19
	074 Move W1, W31
	075 Move X2, X31
	076 Call String.get_Chars, X0, X1
	077 Move X8, [X22]
	078 Move W20, W0
	079 Move W9, [X8+224]
	080 Compare W9, 0
	081 JumpIfNotEqual {84}
	082 Move X0, X8
	083 Call 0x1C17DFC
	084 Move W0, W20
	085 Call Path.IsDirectorySeparator, X0
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {171}
	090 Move W8, [X19+16]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X0, X19
	093 Move W1, W31
	094 Move X2, X31
	095 Call String.get_Chars, X0, X1
	096 Move X8, [X22]
	097 Move W20, W0
	098 Move W9, [X8+224]
	099 Compare W9, 0
	100 JumpIfNotEqual {103}
	101 Move X0, X8
	102 Call 0x1C17DFC
	103 Move W0, W20
	104 Call Path.IsDirectorySeparator, X0
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {154}
	109 Move W1, 1
	110 Move X0, X19
	111 Move X2, X31
	112 Call String.get_Chars, X0, X1
	113 Move X8, [X22]
	114 Move W20, W0
	115 Move W9, [X8+224]
	116 Compare W9, 0
	117 JumpIfNotEqual {120}
	118 Move X0, X8
	119 Call 0x1C17DFC
	120 Move W0, W20
	121 Call Path.IsDirectorySeparator, X0
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {154}
	126 Move W8, [X19+16]
	127 Move W20, 2
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X0, X19
	130 Move W1, W20
	131 Move X2, X31
	132 Call String.get_Chars, X0, X1
	133 Move X8, [X22]
	134 Move W21, W0
	135 Move W9, [X8+224]
	136 Compare W9, 0
	137 JumpIfNotEqual {140}
	138 Move X0, X8
	139 Call 0x1C17DFC
	140 Move W0, W21
	141 Call Path.IsDirectorySeparator, X0
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfEqual {234}
	146 Move W8, [X19+16]
	147 Add W20, W20, 1
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move X8, 0xDF8000
	150 Move X8, [X8+632]
	151 Move X8, [X8]
	152 Move X8, [X8+184]
	153 Move X0, [X8]
	154 Move X0, X19
	155 Move W1, W31
	156 Move X2, X31
	157 Call String.get_Chars, X0, X1
	158 Move X8, [X22]
	159 Move W20, W0
	160 Move W9, [X8+224]
	161 Compare W9, 0
	162 JumpIfNotEqual {165}
	163 Move X0, X8
	164 Call 0x1C17DFC
	165 Move W0, W20
	166 Call Path.IsDirectorySeparator, X0
	167 Move TEMP, X0
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfNotEqual {185}
	171 Move X0, [X22]
	172 Move W8, [X0+224]
	173 Compare W8, 0
	174 JumpIfNotEqual {177}
	175 Call 0x1C17DFC
	176 Move X0, [X22]
	177 Move X8, [X0+184]
	178 Move X0, [X8+16]
	179 Move X20, [X31+32]
	180 Move X19, [X31+40]
	181 Move X22, [X31+16]
	182 Move X21, [X31+24]
	183 Move X30, [X31+48]
	184 Return X0
	185 Move W1, 1
	186 Move X0, X19
	187 Move X2, X31
	188 Call String.get_Chars, X0, X1
	189 Move X8, [X22]
	190 Move W20, W0
	191 Move W9, [X8+224]
	192 Compare W9, 0
	193 JumpIfNotEqual {197}
	194 Move X0, X8
	195 Call 0x1C17DFC
	196 Move X8, [X22]
	197 Move X8, [X8+184]
	198 NotImplemented "Instruction LDRH not yet implemented."
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move W8, [X19+16]
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move W2, 2
	203 Move X0, X31
	204 Call Directory.GetCurrentDirectory
	205 Compare X0, 0
	206 JumpIfEqual {306}
	207 Move W2, 2
	208 Move W1, 2
	209 Move X0, X19
	210 Move X2, X31
	211 Move W21, 2
	212 Call String.get_Chars, X0, X1
	213 Move X8, [X22]
	214 Move W20, W0
	215 Move W9, [X8+224]
	216 Compare W9, 0
	217 JumpIfNotEqual {220}
	218 Move X0, X8
	219 Call 0x1C17DFC
	220 Move W0, W20
	221 Call Path.IsDirectorySeparator, X0
	222 And W31, W0, 1
	223 NotImplemented "Instruction CINC not yet implemented."
	224 Move X0, X19
	225 Move X20, [X31+32]
	226 Move X19, [X31+40]
	227 Move X22, [X31+16]
	228 Move X21, [X31+24]
	229 Move W1, W31
	230 Move X3, X31
	231 Move X30, [X31+48]
	232 Call String.Substring, X0, X1, X2
	233 Return X0
	234 Move W8, [X19+16]
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Add W20, W20, 1
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move X0, X19
	239 Move W1, W20
	240 Move X2, X31
	241 Call String.get_Chars, X0, X1
	242 Move X8, [X22]
	243 Move W21, W0
	244 Move W9, [X8+224]
	245 Compare W9, 0
	246 JumpIfNotEqual {249}
	247 Move X0, X8
	248 Call 0x1C17DFC
	249 Move W0, W21
	250 Call Path.IsDirectorySeparator, X0
	251 Move TEMP, X0
	252 And TEMP, TEMP, 1
	253 Compare TEMP, 1
	254 JumpIfEqual {256}
	255 Move W8, [X19+16]
	256 Move X0, [X22]
	257 Move W8, [X0+224]
	258 Compare W8, 0
	259 JumpIfNotEqual {262}
	260 Call 0x1C17DFC
	261 Move X0, [X22]
	262 Move X8, [X0+184]
	263 Subtract W2, W20, 2
	264 Move W1, 2
	265 Move X0, X19
	266 Move X21, [X8+16]
	267 Move X3, X31
	268 Call String.Substring, X0, X1, X2
	269 Compare X0, 0
	270 JumpIfEqual {306}
	271 Move X8, [X22]
	272 Move X3, X31
	273 Move X8, [X8+184]
	274 NotImplemented "Instruction LDRH not yet implemented."
	275 NotImplemented "Instruction LDRH not yet implemented."
	276 Call String.Replace, X0, X1, X2
	277 Move X2, X0
	278 Move X0, X21
	279 Move X1, X21
	280 Move X20, [X31+32]
	281 Move X19, [X31+40]
	282 Move X22, [X31+16]
	283 Move X21, [X31+24]
	284 Move X3, X31
	285 Move X30, [X31+48]
	286 Call String.Concat, X0, X1, X2
	287 Return X0
	288 Move X0, 0xDFE000
	289 Move X0, [X0+1400]
	290 Call 0x1C17D08
	291 Call 0x1C17F10
	292 Move X19, X0
	293 Move X0, 0xE2A000
	294 Move X0, [X0+1784]
	295 Call 0x1C17D08
	296 Move X1, X0
	297 Move X0, X19
	298 Move X2, X31
	299 Call ArgumentException..ctor, X0, X1
	300 Move X0, 0xE2A000
	301 Move X0, [X0+1792]
	302 Call 0x1C17D08
	303 Move X1, X0
	304 Move X0, X19
	305 Call 0x1C17DEC
	306 Call 0x1C17F20

Method: System.String GetTempPath()

Disassembly:
	0x032FEEB0 MOV X21, X1
	0x032FEEB4 MOV X25, X0
	0x032FEEB8 TBNZ X8, 0x0, 0x32FEF30
	0x032FEEBC ADRP X0, 0xE24000
	0x032FEEC0 LDR X0, [X0 + 0x20]
	0x032FEEC4 BL 0x1C16CF4
	0x032FEEC8 ADRP X0, 0xE20000
	0x032FEECC LDR X0, [X0 + 0xD70]
	0x032FEED0 BL 0x1C16CF4
	0x032FEED4 ADRP X0, 0xE24000
	0x032FEED8 LDR X0, [X0 + 0x28]
	0x032FEEDC BL 0x1C16CF4
	0x032FEEE0 ADRP X0, 0xE29000
	0x032FEEE4 LDR X0, [X0 + 0x770]
	0x032FEEE8 BL 0x1C16CF4
	0x032FEEEC ADRP X0, 0xE29000
	0x032FEEF0 LDR X0, [X0 + 0x778]
	0x032FEEF4 BL 0x1C16CF4
	0x032FEEF8 ADRP X0, 0xE29000
	0x032FEEFC LDR X0, [X0 + 0x780]
	0x032FEF00 BL 0x1C16CF4
	0x032FEF04 ADRP X0, 0xE29000
	0x032FEF08 LDR X0, [X0 + 0x760]
	0x032FEF0C BL 0x1C16CF4
	0x032FEF10 ADRP X0, 0xE29000
	0x032FEF14 LDR X0, [X0 + 0x788]
	0x032FEF18 BL 0x1C16CF4
	0x032FEF1C ADRP X0, 0xE29000
	0x032FEF20 LDR X0, [X0 + 0x790]
	0x032FEF24 BL 0x1C16CF4
	0x032FEF28 MOVZ W8, 0x1
	0x032FEF2C STRB W8, [X22 + 0xAB0]
	0x032FEF30 MOVI V0.2D, 0x0
	0x032FEF34 STP V0, V0, [X31 + 0x60]
	0x032FEF38 STP V0, V0, [X31 + 0x40]
	0x032FEF3C STP V0, V0, [X31 + 0x20]
	0x032FEF40 CBZ W21, 0x32FF1D0
	0x032FEF44 ADRP X27, 0xE20000
	0x032FEF48 LDR X27, [X27 + 0xD70]
	0x032FEF4C MOV X8, INVALID
	0x032FEF50 ADD X8, X8, X21, 0x20, LSL
	0x032FEF54 SBFM X8, X8, 0x1F, 0x3F
	0x032FEF58 LDR X0, [X27]
	0x032FEF5C LDRH W22, [X25, X8, LSL]
	0x032FEF60 LDR W9, [X0 + 0xE0]
	0x032FEF64 CBNZ W9, 0x32FEF6C
	0x032FEF68 BL 0x1C16DFC
	0x032FEF6C MOV W0, W22
	0x032FEF70 MOV X1, X31
	0x032FEF74 BL 0x32E50A0
	0x032FEF78 TBZ X0, 0x0, 0x32FEF88
	0x032FEF7C CBZ W20, 0x32FF1D0
	0x032FEF80 MOVZ W22, 0x1
	0x032FEF84 B 0x32FEFB0
	0x032FEF88 CBZ W20, 0x32FF1D0
	0x032FEF8C LDR X0, [X27]
	0x032FEF90 LDRH W22, [X24]
	0x032FEF94 LDR W8, [X0 + 0xE0]
	0x032FEF98 CBNZ W8, 0x32FEFA0
	0x032FEF9C BL 0x1C16DFC
	0x032FEFA0 MOV W0, W22
	0x032FEFA4 MOV X1, X31
	0x032FEFA8 BL 0x32E50A0
	0x032FEFAC MOV W22, W0
	0x032FEFB0 LDR X0, [X27]
	0x032FEFB4 MOV X8, INVALID
	0x032FEFB8 ADD X8, X8, X20, 0x20, LSL

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x10DF000
	006 Move X21, 0xE1D000
	007 Move W8, [X19+2721]
	008 Move X21, [X21+464]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xDF8000
	014 Move X0, [X0+368]
	015 Call 0x1C17CF4
	016 Move X0, 0xE1D000
	017 Move X0, [X0+464]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+2721], W8
	021 Move X0, X31
	022 Call SecurityManager.EnsureElevatedPermissions
	023 Move X0, [X21]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call 0x1C2943C
	029 Compare X0, 0
	030 JumpIfEqual {80}
	031 Move W8, [X0+16]
	032 Move X19, X0
	033 Subtract W1, W8, 1
	034 Move X0, X19
	035 Move X2, X31
	036 Call String.get_Chars, X0, X1
	037 Move X8, [X21]
	038 Move W20, W0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X8, [X21]
	045 Move X9, [X8+184]
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Return X0
	054 Move W9, [X8+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Move X8, 0xDF8000
	060 Move X8, [X8+368]
	061 Move X0, [X8]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X8, [X21]
	067 Move X1, X31
	068 Move X8, [X8+184]
	069 Add X0, X8, 10
	070 Call Char.ToString, X0
	071 Move X1, X0
	072 Move X0, X19
	073 Move X20, [X31+16]
	074 Move X19, [X31+24]
	075 Move X2, X31
	076 Move X30, [X31+32]
	077 Move X21, [X31+40]
	078 Call String.Concat, X0, X1
	079 Return X0
	080 Call 0x1C17F20

Method: System.String get_temp_path()

Disassembly:
	0x032FEFBC SBFM X8, X8, 0x1F, 0x3F

ISIL:
	001 Call 0x1C2943C
	002 Return X0

Method: System.Boolean HasExtension(System.String path)

Disassembly:
	0x032FEFC0 LDR W9, [X0 + 0xE0]
	0x032FEFC4 LDRH W26, [X24, X8, LSL]
	0x032FEFC8 CBNZ W9, 0x32FEFD0
	0x032FEFCC BL 0x1C16DFC
	0x032FEFD0 MOV W0, W26
	0x032FEFD4 MOV X1, X31
	0x032FEFD8 BL 0x32E50A0
	0x032FEFDC TBZ X0, 0x0, 0x32FEFE8
	0x032FEFE0 MOVZ W26, 0x1
	0x032FEFE4 B 0x32FF010
	0x032FEFE8 CBZ W19, 0x32FF1D0
	0x032FEFEC LDR X0, [X27]
	0x032FEFF0 LDRH W26, [X23]
	0x032FEFF4 LDR W8, [X0 + 0xE0]
	0x032FEFF8 CBNZ W8, 0x32FF000
	0x032FEFFC BL 0x1C16DFC
	0x032FF000 MOV W0, W26
	0x032FF004 MOV X1, X31
	0x032FF008 BL 0x32E50A0
	0x032FF00C MOV W26, W0
	0x032FF010 ADRP X28, 0xE23000
	0x032FF014 LDR X28, [X28 + 0x20]
	0x032FF018 ADRP X29, 0xE28000
	0x032FF01C ADRP X27, 0xE28000
	0x032FF020 MOV X0, X25
	0x032FF024 LDR X2, [X28]
	0x032FF028 LDR X29, [X29 + 0x790]
	0x032FF02C LDR X27, [X27 + 0x760]
	0x032FF030 MOV X1, X21
	0x032FF034 BL 0x2218CF8
	0x032FF038 LDR X2, [X28]
	0x032FF03C MOV X25, X0
	0x032FF040 MOV X0, X24
	0x032FF044 MOV X1, X20
	0x032FF048 BL 0x2218CF8
	0x032FF04C LDR X2, [X28]
	0x032FF050 MOV X24, X0
	0x032FF054 MOV X0, X23
	0x032FF058 MOV X1, X19
	0x032FF05C BL 0x2218CF8
	0x032FF060 MOV X23, X0
	0x032FF064 MOV X0, X25
	0x032FF068 MOV X1, X31
	0x032FF06C BL 0x33C693C
	0x032FF070 MOV X25, X0
	0x032FF074 MOV X0, X24
	0x032FF078 MOV X1, X31
	0x032FF07C BL 0x33C693C
	0x032FF080 MOV X24, X0
	0x032FF084 MOV X0, X23
	0x032FF088 MOV X1, X31
	0x032FF08C BL 0x33C693C
	0x032FF090 LDR X8, [X29]
	0x032FF094 MOV X5, X0
	0x032FF098 MOVI V0.2D, 0x0
	0x032FF09C AND X9, X26, 0x1
	0x032FF0A0 AND W7, W22, 0x1
	0x032FF0A4 ADD X0, X31, 0x80
	0x032FF0A8 MOV X1, X25
	0x032FF0AC MOV W2, W21
	0x032FF0B0 MOV X3, X24
	0x032FF0B4 MOV W4, W20
	0x032FF0B8 MOV W6, W19
	0x032FF0BC STP V0, V0, [X31 + 0x90]
	0x032FF0C0 STR V0, [X31 + 0x8]
	0x032FF0C4 STP X9, X8, [X31]
	0x032FF0C8 BL 0x27D9378

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10DF000
	005 Move W8, [X20+2722]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE1D000
	012 Move X0, [X0+464]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2722], W8
	016 Compare X19, 0
	017 JumpIfEqual {55}
	018 Move X0, X19
	019 Move X1, X31
	020 Call String.Trim, X0
	021 Compare X0, 0
	022 JumpIfEqual {60}
	023 Move W8, [X0+16]
	024 Compare W8, 0
	025 JumpIfEqual {55}
	026 Move X20, 0xE1C000
	027 Move X20, [X20+464]
	028 Move X0, [X20]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X20]
	034 Move X8, [X0+184]
	035 Move X0, X19
	036 Move X2, X31
	037 Move X1, [X8]
	038 Call String.IndexOfAny, X0, X1
	039 Add W31, W0, 1
	040 Move X0, [X20]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X19
	046 Call Path.findExtension, X0
	047 Move TEMP, X0
	048 And TEMP, TEMP, -2147483648
	049 Compare TEMP, -2147483648
	050 JumpIfEqual {55}
	051 Move W8, [X19+16]
	052 Subtract W8, W8, 1
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CSET not yet implemented."
	055 Move W0, W31
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Return X0
	060 Call 0x1C17F20
	061 Move X0, 0xDFD000
	062 Move X0, [X0+1400]
	063 Call 0x1C17D08
	064 Call 0x1C17F10
	065 Move X19, X0
	066 Move X0, 0xE29000
	067 Move X0, [X0+72]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X19
	071 Move X2, X31
	072 Call ArgumentException..ctor, X0, X1
	073 Move X0, 0xE29000
	074 Move X0, [X0+1800]
	075 Call 0x1C17D08
	076 Move X1, X0
	077 Move X0, X19
	078 Call 0x1C17DEC

Method: System.Boolean IsPathRooted(System.ReadOnlySpan`1<System.Char> path)

Disassembly:
	0x032FF160 LDP V0, V1, [X31 + 0x20]
	0x032FF164 LDR V2, [X31 + 0x4]
	0x032FF168 STP V0, V1, [X31 + 0x50]
	0x032FF16C STR V2, [X31 + 0x7]
	0x032FF170 ADD W9, W20, W21
	0x032FF174 ORN W10, W31, W22, 0x0
	0x032FF178 LDR X3, [X25]
	0x032FF17C LDP V0, V1, [X31 + 0x50]
	0x032FF180 LDR V2, [X31 + 0x7]
	0x032FF184 ORN W8, W31, W26, 0x0
	0x032FF188 ADD W9, W9, W19
	0x032FF18C AND W10, W10, 0x1
	0x032FF190 AND W8, W8, 0x1
	0x032FF194 ADD W9, W9, W10
	0x032FF198 ADD W0, W9, W8
	0x032FF19C ADD X1, X31, 0x80
	0x032FF1A0 MOV X2, X23
	0x032FF1A4 STP V0, V1, [X31 + 0x80]
	0x032FF1A8 STR V2, [X31 + 0xA]
	0x032FF1AC BL 0x226B1AC
	0x032FF1B0 LDP X20, X19, [X31 + 0x100]
	0x032FF1B4 LDP X22, X21, [X31 + 0xF0]
	0x032FF1B8 LDP X24, X23, [X31 + 0xE0]
	0x032FF1BC LDP X26, X25, [X31 + 0xD0]
	0x032FF1C0 LDP X28, X27, [X31 + 0xC0]
	0x032FF1C4 LDP X29, X30, [X31 + 0xB0]
	0x032FF1C8 ADD X31, X31, 0x110
	0x032FF1CC RET
	0x032FF1D0 BL 0x1C16F28
	0x032FF1D4 SUB X31, X31, 0x80
	0x032FF1D8 STP X1, X30, [X31 + 0x28]
	0x032FF1DC STP X26, X25, [X31 + 0x40]
	0x032FF1E0 STP X24, X23, [X31 + 0x50]
	0x032FF1E4 STP X22, X21, [X31 + 0x60]
	0x032FF1E8 STP X20, X19, [X31 + 0x70]
	0x032FF1EC ADRP X26, 0x10DD000
	0x032FF1F0 LDRB W8, [X26 + 0xAAE]
	0x032FF1F4 MOV X19, X6
	0x032FF1F8 MOV X21, X5
	0x032FF1FC MOV X20, X4
	0x032FF200 MOV X23, X3
	0x032FF204 MOV X24, X2
	0x032FF208 MOV X22, X1
	0x032FF20C MOV X25, X0
	0x032FF210 STP X3, X0, [X31 + 0x18]
	0x032FF214 STP X5, X2, [X31 + 0x8]
	0x032FF218 STR X4, [X31]
	0x032FF21C TBNZ X8, 0x0, 0x32FF270
	0x032FF220 ADRP X0, 0xE1F000
	0x032FF224 LDR X0, [X0 + 0xD70]
	0x032FF228 BL 0x1C16CF4
	0x032FF22C ADRP X0, 0xE1B000
	0x032FF230 LDR X0, [X0 + 0x1D0]
	0x032FF234 BL 0x1C16CF4
	0x032FF238 ADRP X0, 0xE23000
	0x032FF23C LDR X0, [X0 + 0x198]
	0x032FF240 BL 0x1C16CF4
	0x032FF244 ADRP X0, 0xE23000
	0x032FF248 LDR X0, [X0 + 0x28]
	0x032FF24C BL 0x1C16CF4
	0x032FF250 ADRP X0, 0xE23000
	0x032FF254 LDR X0, [X0 + 0x1A8]
	0x032FF258 BL 0x1C16CF4
	0x032FF25C ADRP X0, 0xE23000
	0x032FF260 LDR X0, [X0 + 0x588]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10DE000
	007 Move W8, [X21+2723]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xE1C000
	015 Move X0, [X0+464]
	016 Call 0x1C17CF4
	017 Move X0, 0xE24000
	018 Move X0, [X0+40]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2723], W8
	022 Compare W20, 0
	023 JumpIfEqual {45}
	024 Move X21, 0xE1C000
	025 Move X21, [X21+464]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X0, [X21]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X21]
	033 Move X9, [X0+184]
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {42}
	039 Call 0x1C17DFC
	040 Move X0, [X21]
	041 Move X9, [X0+184]
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W8, 1
	045 Move W8, W31
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move W0, W8
	051 Move X30, [X31+48]
	052 Return X0
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {59}
	056 Call 0x1C17DFC
	057 Move X0, [X21]
	058 Move X9, [X0+184]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W8, W31
	061 Move W10, [X9+40]
	062 Compare W10, 0
	063 JumpIfNotEqual {46}
	064 Move W8, [X0+224]
	065 NotImplemented "Instruction LDRH not yet implemented."
	066 Compare W8, 0
	067 JumpIfNotEqual {71}
	068 Call 0x1C17DFC
	069 Move X8, [X21]
	070 Move X9, [X8+184]
	071 NotImplemented "Instruction LDRH not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CSET not yet implemented."

Method: System.Boolean IsPathRooted(System.String path)

Disassembly:
	0x032FE064 CMP W0, W8
	0x032FE068 CSET W0, LT
	0x032FE06C B 0x32FE074
	0x032FE070 MOV W0, W31
	0x032FE074 LDP X20, X19, [X31 + 0x10]
	0x032FE078 LDR X30, [X31], #0x20
	0x032FE07C RET
	0x032FE080 BL 0x1C16F20
	0x032FE084 ADRP X0, 0xDFD000
	0x032FE088 LDR X0, [X0 + 0x578]
	0x032FE08C BL 0x1C16D08
	0x032FE090 BL 0x1C16F10
	0x032FE094 MOV X19, X0
	0x032FE098 ADRP X0, 0xE29000
	0x032FE09C LDR X0, [X0 + 0x48]
	0x032FE0A0 BL 0x1C16D08
	0x032FE0A4 MOV X1, X0
	0x032FE0A8 MOV X0, X19
	0x032FE0AC MOV X2, X31
	0x032FE0B0 BL 0x3314A68
	0x032FE0B4 ADRP X0, 0xE29000
	0x032FE0B8 LDR X0, [X0 + 0x708]
	0x032FE0BC BL 0x1C16D08
	0x032FE0C0 MOV X1, X0
	0x032FE0C4 MOV X0, X19
	0x032FE0C8 BL 0x1C16DEC
	0x032FE0CC STP X30, X21, [X31 - 0x20]!
	0x032FE0D0 STP X20, X19, [X31 + 0x10]
	0x032FE0D4 ADRP X20, 0x10DE000
	0x032FE0D8 LDRB W8, [X20 + 0xAA6]
	0x032FE0DC MOV X19, X0
	0x032FE0E0 TBNZ X8, 0x0, 0x32FE0F8
	0x032FE0E4 ADRP X0, 0xE1C000
	0x032FE0E8 LDR X0, [X0 + 0x1D0]
	0x032FE0EC BL 0x1C16CF4
	0x032FE0F0 MOVZ W8, 0x1
	0x032FE0F4 STRB W8, [X20 + 0xAA6]
	0x032FE0F8 CBZ X19, 0x32FE14C
	0x032FE0FC ADRP X21, 0xE1C000
	0x032FE100 LDR X21, [X21 + 0x1D0]
	0x032FE104 MOVZ W1, 0x2E
	0x032FE108 MOV X0, X19
	0x032FE10C MOV X2, X31
	0x032FE110 BL 0x322C668
	0x032FE114 LDR X8, [X21]
	0x032FE118 MOV W20, W0
	0x032FE11C LDR W9, [X8 + 0xE0]
	0x032FE120 CBNZ W9, 0x32FE130
	0x032FE124 MOV X0, X8
	0x032FE128 BL 0x1C16DFC
	0x032FE12C LDR X8, [X21]
	0x032FE130 LDR X8, [X8 + 0xB8]
	0x032FE134 MOV X0, X19
	0x032FE138 MOV X2, X31
	0x032FE13C LDR X1, [X8 + 0x20]
	0x032FE140 BL 0x322C764
	0x032FE144 CMP W20, W0
	0x032FE148 B.GT 0x32FE150
	0x032FE14C MOVN W20, 0x0
	0x032FE150 MOV W0, W20
	0x032FE154 LDP X20, X19, [X31 + 0x10]
	0x032FE158 LDP X30, X21, [X31], #0x20
	0x032FE15C RET
	0x032FE160 STR X30, [X31 - 0x30]!
	0x032FE164 STP X22, X21, [X31 + 0x10]
	0x032FE168 STP X20, X19, [X31 + 0x20]
	0x032FE16C ADRP X21, 0x10DE000
	0x032FE170 LDRB W8, [X21 + 0xAA3]
	0x032FE174 MOV X20, X1
	0x032FE178 MOV X19, X0
	0x032FE17C TBNZ X8, 0x0, 0x32FE1A0
	0x032FE180 ADRP X0, 0xE1C000
	0x032FE184 LDR X0, [X0 + 0x1D0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x10DF000
	006 Move W8, [X20+2724]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE1D000
	013 Move X0, [X0+464]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2724], W8
	017 Compare X19, 0
	018 JumpIfEqual {64}
	019 Move W8, [X19+16]
	020 Compare W8, 0
	021 JumpIfEqual {64}
	022 Move X20, 0xE1D000
	023 Move X20, [X20+464]
	024 Move X0, [X20]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X20]
	030 Move X8, [X0+184]
	031 Move X0, X19
	032 Move X2, X31
	033 Move X1, [X8]
	034 Call String.IndexOfAny, X0, X1
	035 Add W31, W0, 1
	036 Move X21, 0x10DF000
	037 Move W8, [X21+939]
	038 Compare W8, 0
	039 JumpIfNotEqual {45}
	040 Move X0, 0xE1D000
	041 Move X0, [X0+656]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+939], W8
	045 Move X0, X19
	046 Move X1, X31
	047 Call String.GetRawStringData, X0
	048 Move X8, [X20]
	049 Move W19, [X19+16]
	050 Move X20, X0
	051 Move W9, [X8+224]
	052 Compare W9, 0
	053 JumpIfNotEqual {56}
	054 Move X0, X8
	055 Call 0x1C17DFC
	056 Move X0, X20
	057 Move X1, X19
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Call Path.IsPathRooted, X0
	063 Return X0
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move W0, W31
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Return X0
	070 Move X0, 0xDFE000
	071 Move X0, [X0+1400]
	072 Call 0x1C17D08
	073 Call 0x1C17F10
	074 Move X19, X0
	075 Move X0, 0xE2A000
	076 Move X0, [X0+72]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X19
	080 Move X2, X31
	081 Call ArgumentException..ctor, X0, X1
	082 Move X0, 0xE2A000
	083 Move X0, [X0+1776]
	084 Call 0x1C17D08
	085 Move X1, X0
	086 Move X0, X19
	087 Call 0x1C17DEC

Method: System.Char[] GetInvalidPathChars()

Disassembly:
	0x032FF264 BL 0x1C16CF4
	0x032FF268 MOVZ W8, 0x1
	0x032FF26C STRB W8, [X26 + 0xAAE]
	0x032FF270 STR W31, [X19]
	0x032FF274 CBZ W22, 0x32FF2B0
	0x032FF278 CBZ W23, 0x32FF2C0
	0x032FF27C ADRP X26, 0xE1F000
	0x032FF280 LDR X26, [X26 + 0xD70]
	0x032FF284 LDR X0, [X26]
	0x032FF288 LDR W8, [X0 + 0xE0]
	0x032FF28C CBNZ W8, 0x32FF294
	0x032FF290 BL 0x1C16DFC
	0x032FF294 MOV X0, X25
	0x032FF298 MOV X1, X22
	0x032FF29C MOV X2, X31
	0x032FF2A0 BL 0x32E50B0
	0x032FF2A4 TBZ X0, 0x0, 0x32FF308
	0x032FF2A8 ADD W8, W23, W22
	0x032FF2AC B 0x32FF330
	0x032FF2B0 CBZ W23, 0x32FF41C
	0x032FF2B4 ADD X8, X31, 0x10
	0x032FF2B8 ADD X24, X8, 0x8
	0x032FF2BC B 0x32FF2CC
	0x032FF2C0 ADD X8, X31, 0x20
	0x032FF2C4 ADD X24, X8, 0x8
	0x032FF2C8 MOV W23, W22
	0x032FF2CC CMP W23, W21
	0x032FF2D0 B.GT 0x32FF350
	0x032FF2D4 ADRP X8, 0xE23000
	0x032FF2D8 LDR X8, [X8 + 0x198]
	0x032FF2DC CMP W22, 0x0
	0x032FF2E0 ADD X9, X31, 0x10
	0x032FF2E4 MOV X1, X20
	0x032FF2E8 LDR X3, [X8]
	0x032FF2EC ADD X8, X31, 0x20
	0x032FF2F0 CSEL X0, X9, X8, EQ
	0x032FF2F4 MOV X2, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10DE000
	005 Move X19, 0xDFE000
	006 Move W8, [X20+2725]
	007 Move X19, [X19+2264]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xDFE000
	013 Move X0, [X0+2264]
	014 Call 0x1C17CF4
	015 Move X0, 0xE29000
	016 Move X0, [X0+1808]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2725], W8
	020 Move X0, X31
	021 Call Environment.get_IsRunningOnWindows
	022 Move X8, [X19]
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {41}
	027 Move X19, 0xE29000
	028 Move X19, [X19+1808]
	029 Move W1, 36
	030 Move X0, X8
	031 Call 0x1C17D6C
	032 Move X1, [X19]
	033 Move X2, X31
	034 Move X19, X0
	035 Call RuntimeHelpers.InitializeArray, X0, X1
	036 Move X0, X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Return X0
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move W1, 1
	044 Move X0, X8
	045 Move X30, [X31+32]
	046 Call 0x1C17D6C
	047 Return X0

Method: System.Int32 findExtension(System.String path)

Disassembly:
	0x032FF0CC LDR X0, [X27]
	0x032FF0D0 LDR W8, [X0 + 0xE0]
	0x032FF0D4 CBNZ W8, 0x32FF0E0
	0x032FF0D8 BL 0x1C16DFC
	0x032FF0DC LDR X0, [X27]
	0x032FF0E0 LDR X8, [X0 + 0xB8]
	0x032FF0E4 ADRP X25, 0xE28000
	0x032FF0E8 LDR X23, [X8 + 0x10]
	0x032FF0EC LDR X25, [X25 + 0x778]
	0x032FF0F0 CBZ X23, 0x32FF100
	0x032FF0F4 LDP V0, V1, [X31 + 0x80]
	0x032FF0F8 LDR V2, [X31 + 0xA]
	0x032FF0FC B 0x32FF168
	0x032FF100 LDP V0, V1, [X31 + 0x80]
	0x032FF104 LDR V2, [X31 + 0xA]
	0x032FF108 STP V0, V1, [X31 + 0x20]
	0x032FF10C STR V2, [X31 + 0x4]
	0x032FF110 LDR W8, [X0 + 0xE0]
	0x032FF114 CBNZ W8, 0x32FF120
	0x032FF118 BL 0x1C16DFC
	0x032FF11C LDR X0, [X27]
	0x032FF120 ADRP X9, 0xE28000
	0x032FF124 LDR X8, [X0 + 0xB8]
	0x032FF128 LDR X9, [X9 + 0x770]
	0x032FF12C LDR X24, [X8]
	0x032FF130 LDR X0, [X9]
	0x032FF134 BL 0x1C16F10
	0x032FF138 ADRP X8, 0xE28000
	0x032FF13C LDR X8, [X8 + 0x780]
	0x032FF140 MOV X1, X24
	0x032FF144 MOV X3, X31
	0x032FF148 MOV X23, X0
	0x032FF14C LDR X2, [X8]
	0x032FF150 BL 0x25FACDC
	0x032FF154 LDR X8, [X27]
	0x032FF158 LDR X8, [X8 + 0xB8]
	0x032FF15C STR X23, [X8 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x10DE000
	006 Move W8, [X20+2726]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE1C000
	013 Move X0, [X0+464]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2726], W8
	017 Compare X19, 0
	018 JumpIfEqual {39}
	019 Move X21, 0xE1C000
	020 Move X21, [X21+464]
	021 Move W1, 46
	022 Move X0, X19
	023 Move X2, X31
	024 Call String.LastIndexOf, X0, X1
	025 Move X8, [X21]
	026 Move W20, W0
	027 Move W9, [X8+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {33}
	030 Move X0, X8
	031 Call 0x1C17DFC
	032 Move X8, [X21]
	033 Move X8, [X8+184]
	034 Move X0, X19
	035 Move X2, X31
	036 Move X1, [X8+32]
	037 Call String.LastIndexOfAny, X0, X1
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move TEMP, 0
	040 Not TEMP
	041 Move W20, TEMP
	042 Move W0, W20
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return X0

Method: System.Void .cctor()

Disassembly:
	0x032FF2F8 BL 0x25BEC30
	0x032FF2FC LDR W8, [X24]
	0x032FF300 STR W8, [X19]
	0x032FF304 B 0x32FF41C
	0x032FF308 LDR X0, [X26]
	0x032FF30C LDR W8, [X0 + 0xE0]
	0x032FF310 CBNZ W8, 0x32FF318
	0x032FF314 BL 0x1C16DFC
	0x032FF318 MOV X0, X24
	0x032FF31C MOV X1, X23
	0x032FF320 MOV X2, X31
	0x032FF324 BL 0x32E5130
	0x032FF328 ADD W8, W23, W22
	0x032FF32C TBZ X0, 0x0, 0x32FF33C
	0x032FF330 MOV W9, W31
	0x032FF334 MOVZ W24, 0x1
	0x032FF338 B 0x32FF344
	0x032FF33C MOV W24, W31
	0x032FF340 MOVZ W9, 0x1
	0x032FF344 ADD W22, W9, W8
	0x032FF348 CMP W22, W21
	0x032FF34C B.LE 0x32FF358
	0x032FF350 MOV W0, W31
	0x032FF354 B 0x32FF420
	0x032FF358 ADRP X23, 0xE23000
	0x032FF35C LDR X23, [X23 + 0x198]
	0x032FF360 ADD X0, X31, 0x20
	0x032FF364 MOV X1, X20
	0x032FF368 MOV X2, X21
	0x032FF36C LDR X3, [X23]
	0x032FF370 BL 0x25BEC30
	0x032FF374 ADD X25, X31, 0x0
	0x032FF378 ADD X8, X31, 0x0
	0x032FF37C TBNZ X24, 0x0, 0x32FF3B8
	0x032FF380 LDRSW X26, [X31 + 0x28]
	0x032FF384 CMP W26, W21
	0x032FF388 B.CS 0x32FF43C
	0x032FF38C ADRP X21, 0xE1B000
	0x032FF390 LDR X21, [X21 + 0x1D0]
	0x032FF394 LDR X0, [X21]
	0x032FF398 LDR W8, [X0 + 0xE0]
	0x032FF39C CBNZ W8, 0x32FF3A8
	0x032FF3A0 BL 0x1C16DFC
	0x032FF3A4 LDR X0, [X21]
	0x032FF3A8 LDR X9, [X0 + 0xB8]
	0x032FF3AC MOV X8, X31
	0x032FF3B0 LDRH W9, [X9 + 0xA]
	0x032FF3B4 STRH W9, [X20, X26, LSL #1]
	0x032FF3B8 CMP W24, 0x0
	0x032FF3BC CSEL X25, X8, X25, NE
	0x032FF3C0 ADRP X8, 0xE23000
	0x032FF3C4 LDR W9, [X31 + 0x28]
	0x032FF3C8 LDR W21, [X25 + 0x8]
	0x032FF3CC LDR X8, [X8 + 0x1A8]
	0x032FF3D0 EOR W10, W24, 0x1
	0x032FF3D4 ADD W20, W9, W10
	0x032FF3D8 CMP W21, W20
	0x032FF3DC LDR X24, [X8]
	0x032FF3E0 B.CS 0x32FF3F0
	0x032FF3E4 MOV X0, X31
	0x032FF3E8 BL 0x339D6EC
	0x032FF3EC LDR W21, [X25 + 0x8]
	0x032FF3F0 LDR X0, [X24 + 0x20]
	0x032FF3F4 LDR X24, [X31]
	0x032FF3F8 LDRB W8, [X0 + 0x135]
	0x032FF3FC TBNZ X8, 0x0, 0x32FF404
	0x032FF400 BL 0x1C5C684
	0x032FF404 LDR X3, [X23]
	0x032FF408 SUB W2, W21, W20
	0x032FF40C ADD X1, X24, W20, 0x1, SXTW
	0x032FF410 ADD X0, X31, 0x10
	0x032FF414 BL 0x25BEC30
	0x032FF418 STR W22, [X19]
	0x032FF41C MOVZ W0, 0x1
	0x032FF420 LDP X20, X19, [X31 + 0x70]
	0x032FF424 LDP X22, X21, [X31 + 0x60]
	0x032FF428 LDP X24, X23, [X31 + 0x50]
	0x032FF42C LDP X26, X25, [X31 + 0x40]
	0x032FF430 LDR X30, [X31 + 0x30]
	0x032FF434 ADD X31, X31, 0x80
	0x032FF438 RET
	0x032FF43C BL 0x1C16F28
	0x032FF440 STR X30, [X31 - 0x20]!
	0x032FF444 STP X20, X19, [X31 + 0x10]
	0x032FF448 ADRP X19, 0x10DD000
	0x032FF44C ADRP X20, 0xE28000
	0x032FF450 LDRB W8, [X19 + 0xAB1]
	0x032FF454 LDR X20, [X20 + 0x760]
	0x032FF458 TBNZ X8, 0x0, 0x32FF470
	0x032FF45C ADRP X0, 0xE28000
	0x032FF460 LDR X0, [X0 + 0x760]
	0x032FF464 BL 0x1C16CF4
	0x032FF468 MOVZ W8, 0x1
	0x032FF46C STRB W8, [X19 + 0xAB1]
	0x032FF470 LDR X0, [X20]
	0x032FF474 BL 0x1C16F10
	0x032FF478 MOV X1, X31
	0x032FF47C MOV X19, X0
	0x032FF480 BL 0x33BDD8C
	0x032FF484 LDR X8, [X20]
	0x032FF488 LDR X8, [X8 + 0xB8]
	0x032FF48C STR X19, [X8]
	0x032FF490 LDP X20, X19, [X31 + 0x10]
	0x032FF494 LDR X30, [X31], #0x20
	0x032FF498 RET
	0x032FF49C MOV X1, X31
	0x032FF4A0 B 0x33BDD8C
	0x032FF4A4 SUB X31, X31, 0x50
	0x032FF4A8 STR X30, [X31 + 0x10]
	0x032FF4AC STP X24, X23, [X31 + 0x20]
	0x032FF4B0 STP X22, X21, [X31 + 0x30]
	0x032FF4B4 STP X20, X19, [X31 + 0x40]
	0x032FF4B8 ADRP X22, 0x10DD000
	0x032FF4BC LDRB W8, [X22 + 0xAB2]
	0x032FF4C0 MOV X20, X3

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x10DE000
	008 Move X21, 0xDFE000
	009 Move X19, 0xE29000
	010 Move X20, 0xE1C000
	011 Move X23, 0xE23000
	012 Move W8, [X22+2727]
	013 Move X21, [X21+2264]
	014 Move X19, [X19+1816]
	015 Move X20, [X20+464]
	016 Move X23, [X23+4008]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0xDFE000
	022 Move X0, [X0+2264]
	023 Call 0x1C17CF4
	024 Move X0, 0xDF7000
	025 Move X0, [X0+368]
	026 Call 0x1C17CF4
	027 Move X0, 0xE23000
	028 Move X0, [X0+4008]
	029 Call 0x1C17CF4
	030 Move X0, 0xE1C000
	031 Move X0, [X0+464]
	032 Call 0x1C17CF4
	033 Move X0, 0xE29000
	034 Move X0, [X0+1816]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X22+2727], W8
	038 Move X0, [X21]
	039 Move X22, 0xDF7000
	040 Move X22, [X22+368]
	041 Move W1, 8
	042 Call 0x1C17D6C
	043 Move X1, [X19]
	044 Move X2, X31
	045 Move X19, X0
	046 Call RuntimeHelpers.InitializeArray, X0, X1
	047 Move X8, [X20]
	048 Move W1, W31
	049 Move X8, [X8+184]
	050 Move [X8+48], X19
	051 Move X0, [X21]
	052 Call 0x1C17D6C
	053 Move X8, [X20]
	054 Move X8, [X8+184]
	055 Move [X8+56], X0
	056 Move X0, [X23]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Call 0x1C291F0
	062 Move X8, [X20]
	063 Move X8, [X8+184]
	064 NotImplemented "Instruction STRH not yet implemented."
	065 Call 0x1C291F0
	066 Move X8, [X20]
	067 Move X8, [X8+184]
	068 NotImplemented "Instruction STRH not yet implemented."
	069 Call 0x1C291F0
	070 Move X8, [X20]
	071 Move X8, [X8+184]
	072 NotImplemented "Instruction STRH not yet implemented."
	073 Call 0x1C291F8
	074 Move X8, [X20]
	075 Move X8, [X8+184]
	076 NotImplemented "Instruction STRH not yet implemented."
	077 Call Path.GetInvalidPathChars
	078 Move X8, [X20]
	079 Move X8, [X8+184]
	080 Move [X8], X0
	081 Move X0, [X22]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X8, [X20]
	087 Move X1, X31
	088 Move X8, [X8+184]
	089 Add X0, X8, 10
	090 Call Char.ToString, X0
	091 Move X8, [X20]
	092 Move W1, 3
	093 Move X8, [X8+184]
	094 Move [X8+16], X0
	095 Move X0, [X21]
	096 Call 0x1C17D6C
	097 Compare X0, 0
	098 JumpIfEqual {126}
	099 Move W9, [X0+24]
	100 Compare W9, 0
	101 JumpIfEqual {125}
	102 Move X8, [X20]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X8, [X8+184]
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 NotImplemented "Instruction STRH not yet implemented."
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 NotImplemented "Instruction CMP not yet implemented."
	109 NotImplemented "Instruction STRH not yet implemented."
	110 NotImplemented "Instruction LDRH not yet implemented."
	111 Move X20, [X31+32]
	112 Move X19, [X31+40]
	113 Move X22, [X31+16]
	114 Move X21, [X31+24]
	115 NotImplemented "Instruction STRH not yet implemented."
	116 NotImplemented "Instruction LDRH not yet implemented."
	117 NotImplemented "Instruction LDRH not yet implemented."
	118 Move [X8+32], X0
	119 NotImplemented "Instruction CMP not yet implemented."
	120 NotImplemented "Instruction CSET not yet implemented."
	121 Move [X8+40], W9
	122 Move X30, [X31+48]
	123 Move X23, [X31+56]
	124 Return 
	125 Call 0x1C17F28
	126 Call 0x1C17F20

Method: System.String CanonicalizePath(System.String path)

Disassembly:
	0x032FEAD4 MOV X2, X19
	0x032FEAD8 B 0x32FEAE8
	0x032FEADC MOV X0, X31
	0x032FEAE0 MOV X1, X22
	0x032FEAE4 MOV X2, X21
	0x032FEAE8 LDP X20, X19, [X31 + 0x20]
	0x032FEAEC LDP X22, X21, [X31 + 0x10]
	0x032FEAF0 MOV X3, X31
	0x032FEAF4 LDP X30, X23, [X31], #0x30
	0x032FEAF8 B 0x322EB14
	0x032FEAFC SUB X31, X31, 0xB0
	0x032FEB00 STR X30, [X31 + 0x60]
	0x032FEB04 STP X26, X25, [X31 + 0x70]
	0x032FEB08 STP X24, X23, [X31 + 0x80]
	0x032FEB0C STP X22, X21, [X31 + 0x90]
	0x032FEB10 STP X20, X19, [X31 + 0xA0]
	0x032FEB14 ADRP X21, 0x10DE000
	0x032FEB18 LDRB W8, [X21 + 0xAAF]
	0x032FEB1C MOV X19, X3
	0x032FEB20 MOV X22, X2
	0x032FEB24 MOV X20, X1
	0x032FEB28 MOV X23, X0
	0x032FEB2C TBNZ X8, 0x0, 0x32FEB98
	0x032FEB30 ADRP X0, 0xE24000
	0x032FEB34 LDR X0, [X0 + 0x20]
	0x032FEB38 BL 0x1C16CF4
	0x032FEB3C ADRP X0, 0xE20000
	0x032FEB40 LDR X0, [X0 + 0xD70]
	0x032FEB44 BL 0x1C16CF4
	0x032FEB48 ADRP X0, 0xE24000
	0x032FEB4C LDR X0, [X0 + 0x28]
	0x032FEB50 BL 0x1C16CF4
	0x032FEB54 ADRP X0, 0xE29000
	0x032FEB58 LDR X0, [X0 + 0x748]
	0x032FEB5C BL 0x1C16CF4
	0x032FEB60 ADRP X0, 0xE29000
	0x032FEB64 LDR X0, [X0 + 0x750]
	0x032FEB68 BL 0x1C16CF4
	0x032FEB6C ADRP X0, 0xE29000
	0x032FEB70 LDR X0, [X0 + 0x758]
	0x032FEB74 BL 0x1C16CF4
	0x032FEB78 ADRP X0, 0xE29000
	0x032FEB7C LDR X0, [X0 + 0x760]
	0x032FEB80 BL 0x1C16CF4
	0x032FEB84 ADRP X0, 0xE29000
	0x032FEB88 LDR X0, [X0 + 0x768]
	0x032FEB8C BL 0x1C16CF4
	0x032FEB90 MOVZ W8, 0x1
	0x032FEB94 STRB W8, [X21 + 0xAAF]
	0x032FEB98 MOVI V0.2D, 0x0
	0x032FEB9C STP V0, V0, [X31 + 0x20]
	0x032FEBA0 STP V0, V0, [X31]
	0x032FEBA4 CBZ W20, 0x32FED68
	0x032FEBA8 ADRP X24, 0xE20000
	0x032FEBAC LDR X24, [X24 + 0xD70]
	0x032FEBB0 MOV X8, INVALID
	0x032FEBB4 ADD X8, X8, X20, 0x20, LSL
	0x032FEBB8 SBFM X8, X8, 0x1F, 0x3F
	0x032FEBBC LDR X0, [X24]
	0x032FEBC0 LDRH W21, [X23, X8, LSL]
	0x032FEBC4 LDR W9, [X0 + 0xE0]
	0x032FEBC8 CBNZ W9, 0x32FEBD0
	0x032FEBCC BL 0x1C16DFC
	0x032FEBD0 MOV W0, W21
	0x032FEBD4 MOV X1, X31
	0x032FEBD8 BL 0x32E50A0
	0x032FEBDC TBZ X0, 0x0, 0x32FEBE8
	0x032FEBE0 MOVZ W21, 0x1
	0x032FEBE4 B 0x32FEC10
	0x032FEBE8 CBZ W19, 0x32FED68
	0x032FEBEC LDR X0, [X24]
	0x032FEBF0 LDRH W21, [X22]
	0x032FEBF4 LDR W8, [X0 + 0xE0]
	0x032FEBF8 CBNZ W8, 0x32FEC00
	0x032FEBFC BL 0x1C16DFC
	0x032FEC00 MOV W0, W21
	0x032FEC04 MOV X1, X31
	0x032FEC08 BL 0x32E50A0
	0x032FEC0C MOV W21, W0
	0x032FEC10 ADRP X25, 0xE24000
	0x032FEC14 LDR X25, [X25 + 0x20]
	0x032FEC18 ADRP X26, 0xE29000
	0x032FEC1C ADRP X24, 0xE29000
	0x032FEC20 MOV X0, X23
	0x032FEC24 LDR X2, [X25]
	0x032FEC28 LDR X26, [X26 + 0x768]
	0x032FEC2C LDR X24, [X24 + 0x760]
	0x032FEC30 MOV X1, X20
	0x032FEC34 BL 0x2218CF8
	0x032FEC38 LDR X2, [X25]
	0x032FEC3C MOV X23, X0
	0x032FEC40 MOV X0, X22
	0x032FEC44 MOV X1, X19
	0x032FEC48 BL 0x2218CF8
	0x032FEC4C MOV X22, X0
	0x032FEC50 MOV X0, X23
	0x032FEC54 MOV X1, X31
	0x032FEC58 BL 0x33C693C
	0x032FEC5C MOV X23, X0
	0x032FEC60 MOV X0, X22
	0x032FEC64 MOV X1, X31
	0x032FEC68 BL 0x33C693C
	0x032FEC6C LDR X6, [X26]
	0x032FEC70 MOV X3, X0
	0x032FEC74 MOVI V0.2D, 0x0
	0x032FEC78 AND W5, W21, 0x1
	0x032FEC7C ADD X0, X31, 0x40
	0x032FEC80 MOV X1, X23
	0x032FEC84 MOV W2, W20
	0x032FEC88 MOV W4, W19
	0x032FEC8C STP V0, V0, [X31 + 0x40]
	0x032FEC90 BL 0x27CF4B8
	0x032FEC94 LDR X0, [X24]
	0x032FEC98 LDR W8, [X0 + 0xE0]
	0x032FEC9C CBNZ W8, 0x32FECA8
	0x032FECA0 BL 0x1C16DFC
	0x032FECA4 LDR X0, [X24]
	0x032FECA8 LDR X8, [X0 + 0xB8]
	0x032FECAC ADRP X25, 0xE29000
	0x032FECB0 LDR X22, [X8 + 0x8]
	0x032FECB4 LDR X25, [X25 + 0x750]
	0x032FECB8 CBZ X22, 0x32FECC4
	0x032FECBC LDP V0, V1, [X31 + 0x40]
	0x032FECC0 B 0x32FED20
	0x032FECC4 LDP V0, V1, [X31 + 0x40]
	0x032FECC8 STP V0, V1, [X31]
	0x032FECCC LDR W8, [X0 + 0xE0]
	0x032FECD0 CBNZ W8, 0x32FECDC
	0x032FECD4 BL 0x1C16DFC
	0x032FECD8 LDR X0, [X24]
	0x032FECDC ADRP X9, 0xE29000
	0x032FECE0 LDR X8, [X0 + 0xB8]
	0x032FECE4 LDR X9, [X9 + 0x748]
	0x032FECE8 LDR X23, [X8]
	0x032FECEC LDR X0, [X9]
	0x032FECF0 BL 0x1C16F10
	0x032FECF4 ADRP X8, 0xE29000
	0x032FECF8 LDR X8, [X8 + 0x758]
	0x032FECFC MOV X1, X23
	0x032FED00 MOV X3, X31
	0x032FED04 MOV X22, X0
	0x032FED08 LDR X2, [X8]
	0x032FED0C BL 0x25FAC1C
	0x032FED10 LDR X8, [X24]
	0x032FED14 LDR X8, [X8 + 0xB8]
	0x032FED18 STR X22, [X8 + 0x8]
	0x032FED1C LDP V0, V1, [X31]
	0x032FED20 STP V0, V1, [X31 + 0x20]
	0x032FED24 LDR X3, [X25]
	0x032FED28 LDP V0, V1, [X31 + 0x20]
	0x032FED2C ORN W8, W31, W21, 0x0
	0x032FED30 ADD W9, W19, W20
	0x032FED34 AND W8, W8, 0x1
	0x032FED38 ADD W0, W9, W8
	0x032FED3C ADD X1, X31, 0x40
	0x032FED40 MOV X2, X22
	0x032FED44 STP V0, V1, [X31 + 0x40]
	0x032FED48 BL 0x226B060
	0x032FED4C LDP X20, X19, [X31 + 0xA0]
	0x032FED50 LDP X22, X21, [X31 + 0x90]
	0x032FED54 LDP X24, X23, [X31 + 0x80]
	0x032FED58 LDP X26, X25, [X31 + 0x70]
	0x032FED5C LDR X30, [X31 + 0x60]
	0x032FED60 ADD X31, X31, 0xB0
	0x032FED64 RET
	0x032FED68 BL 0x1C16F28
	0x032FED6C STP X30, X25, [X31 - 0x40]!
	0x032FED70 STP X24, X23, [X31 + 0x10]
	0x032FED74 STP X22, X21, [X31 + 0x20]
	0x032FED78 STP X20, X19, [X31 + 0x30]
	0x032FED7C ADRP X25, 0x10DE000
	0x032FED80 LDRB W8, [X25 + 0xAAD]
	0x032FED84 MOV X19, X5
	0x032FED88 MOV X20, X4
	0x032FED8C MOV X21, X3
	0x032FED90 MOV X22, X2
	0x032FED94 MOV X23, X1
	0x032FED98 MOV X24, X0
	0x032FED9C TBNZ X8, 0x0, 0x32FEDC0
	0x032FEDA0 ADRP X0, 0xE1C000
	0x032FEDA4 LDR X0, [X0 + 0x1D0]
	0x032FEDA8 BL 0x1C16CF4
	0x032FEDAC ADRP X0, 0xE24000
	0x032FEDB0 LDR X0, [X0 + 0x28]
	0x032FEDB4 BL 0x1C16CF4
	0x032FEDB8 MOVZ W8, 0x1
	0x032FEDBC STRB W8, [X25 + 0xAAD]
	0x032FEDC0 ADRP X8, 0xE1C000
	0x032FEDC4 LDR X8, [X8 + 0x1D0]
	0x032FEDC8 CBZ W23, 0x32FEE10
	0x032FEDCC CBZ W21, 0x32FEE2C
	0x032FEDD0 LDR X0, [X8]
	0x032FEDD4 LDR W8, [X0 + 0xE0]
	0x032FEDD8 CBZ W19, 0x32FEE60
	0x032FEDDC CBNZ W8, 0x32FEDE4
	0x032FEDE0 BL 0x1C16DFC
	0x032FEDE4 MOV X0, X24
	0x032FEDE8 MOV X1, X23
	0x032FEDEC MOV X2, X22
	0x032FEDF0 MOV X3, X21
	0x032FEDF4 MOV X4, X20
	0x032FEDF8 MOV X5, X19
	0x032FEDFC LDP X20, X19, [X31 + 0x30]
	0x032FEE00 LDP X22, X21, [X31 + 0x20]
	0x032FEE04 LDP X24, X23, [X31 + 0x10]
	0x032FEE08 LDP X30, X25, [X31], #0x40
	0x032FEE0C B 0x32FEE7C
	0x032FEE10 LDR X0, [X8]
	0x032FEE14 LDR W8, [X0 + 0xE0]
	0x032FEE18 CBNZ W8, 0x32FEE20
	0x032FEE1C BL 0x1C16DFC
	0x032FEE20 MOV X0, X22
	0x032FEE24 MOV X1, X21
	0x032FEE28 B 0x32FEE44
	0x032FEE2C LDR X0, [X8]
	0x032FEE30 LDR W8, [X0 + 0xE0]
	0x032FEE34 CBNZ W8, 0x32FEE3C
	0x032FEE38 BL 0x1C16DFC
	0x032FEE3C MOV X0, X24
	0x032FEE40 MOV X1, X23
	0x032FEE44 MOV X2, X20
	0x032FEE48 MOV X3, X19
	0x032FEE4C LDP X20, X19, [X31 + 0x30]
	0x032FEE50 LDP X22, X21, [X31 + 0x20]
	0x032FEE54 LDP X24, X23, [X31 + 0x10]
	0x032FEE58 LDP X30, X25, [X31], #0x40
	0x032FEE5C B 0x32FEA44
	0x032FEE60 CBNZ W8, 0x32FEE68
	0x032FEE64 BL 0x1C16DFC
	0x032FEE68 MOV X0, X24
	0x032FEE6C MOV X1, X23
	0x032FEE70 MOV X2, X22
	0x032FEE74 MOV X3, X21
	0x032FEE78 B 0x32FEE4C
	0x032FEE7C SUB X31, X31, 0x110
	0x032FEE80 STP X29, X30, [X31 + 0xB0]
	0x032FEE84 STP X28, X27, [X31 + 0xC0]
	0x032FEE88 STP X26, X25, [X31 + 0xD0]
	0x032FEE8C STP X24, X23, [X31 + 0xE0]
	0x032FEE90 STP X22, X21, [X31 + 0xF0]
	0x032FEE94 STP X20, X19, [X31 + 0x100]
	0x032FEE98 ADRP X22, 0x10DE000
	0x032FEE9C LDRB W8, [X22 + 0xAB0]
	0x032FEEA0 MOV X19, X5
	0x032FEEA4 MOV X23, X4
	0x032FEEA8 MOV X20, X3
	0x032FEEAC MOV X24, X2

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X19, 0x10DF000
	013 Move W8, [X19+2728]
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0xDFF000
	020 Move X0, [X0+2264]
	021 Call 0x1C17CF4
	022 Move X0, 0xE1D000
	023 Move X0, [X0+464]
	024 Call 0x1C17CF4
	025 Move X0, 0xDF8000
	026 Move X0, [X0+504]
	027 Call 0x1C17CF4
	028 Move X0, 0xDF6000
	029 Move X0, [X0+2440]
	030 Call 0x1C17CF4
	031 Move X0, 0xDFF000
	032 Move X0, [X0+1936]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X19+2728], W8
	036 Compare X20, 0
	037 JumpIfEqual {268}
	038 Move X0, X31
	039 Call Environment.get_IsRunningOnWindows
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {50}
	044 Move X0, X20
	045 Move X1, X31
	046 Call String.Trim, X0
	047 Move X20, X0
	048 Compare X0, 0
	049 JumpIfEqual {298}
	050 Move W8, [X20+16]
	051 Compare W8, 0
	052 JumpIfEqual {268}
	053 Move X22, 0xE1D000
	054 Move X22, [X22+464]
	055 Move X0, [X22]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X20
	061 Call Path.GetPathRoot, X0
	062 Move X8, 0xDFF000
	063 Move X8, [X8+2264]
	064 Move X19, X0
	065 Move W1, 2
	066 Move X8, [X8]
	067 Move X0, X8
	068 Call 0x1C17D6C
	069 Compare X0, 0
	070 JumpIfEqual {298}
	071 Move W9, [X0+24]
	072 Move X1, X0
	073 Compare W9, 0
	074 JumpIfEqual {297}
	075 Move X8, [X22]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X8, [X8+184]
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 NotImplemented "Instruction STRH not yet implemented."
	080 NotImplemented "Instruction LDRH not yet implemented."
	081 Move X0, X20
	082 Move X2, X31
	083 NotImplemented "Instruction STRH not yet implemented."
	084 Call String.Split, X0, X1
	085 Move X20, X0
	086 Move X0, X31
	087 Call Environment.get_IsRunningOnWindows
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {132}
	092 Compare X19, 0
	093 JumpIfEqual {298}
	094 Move W8, [X19+16]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X0, X19
	097 Move W1, W31
	098 Move X2, X31
	099 Call String.get_Chars, X0, X1
	100 Move X8, [X22]
	101 Move W21, W0
	102 Move W9, [X8+224]
	103 Compare W9, 0
	104 JumpIfNotEqual {107}
	105 Move X0, X8
	106 Call 0x1C17DFC
	107 Move W0, W21
	108 Call Path.IsDirectorySeparator, X0
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {132}
	113 Move W1, 1
	114 Move X0, X19
	115 Move X2, X31
	116 Call String.get_Chars, X0, X1
	117 Move X8, [X22]
	118 Move W21, W0
	119 Move W9, [X8+224]
	120 Compare W9, 0
	121 JumpIfNotEqual {124}
	122 Move X0, X8
	123 Call 0x1C17DFC
	124 Move W0, W21
	125 Call Path.IsDirectorySeparator, X0
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfNotEqual {132}
	130 Move W23, 3
	131 Move W24, 1
	132 Move W24, W31
	133 Move W23, W31
	134 Compare X20, 0
	135 JumpIfEqual {298}
	136 Move X8, [X20+24]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X27, 0xDF8000
	139 Move X28, 0xDFF000
	140 Move X27, [X27+504]
	141 Move X28, [X28+1936]
	142 Move W21, W31
	143 Move X25, X31
	144 Add X26, X20, 32
	145 Move X0, X31
	146 Call Environment.get_IsRunningOnWindows
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfNotEqual {161}
	151 Move W8, [X20+24]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X0, [X26]
	154 Compare X0, 0
	155 JumpIfEqual {298}
	156 Move X1, X31
	157 Call String.TrimEnd, X0
	158 Move W8, [X20+24]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move [X26], X0
	161 NotImplemented "Instruction CMP not yet implemented."
	162 NotImplemented "Instruction CSET not yet implemented."
	163 And W8, W8, W24
	164 Move TEMP, X8
	165 And TEMP, TEMP, 1
	166 Compare TEMP, 1
	167 JumpIfEqual {180}
	168 Move W8, [X20+24]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move X0, [X26]
	171 Move X1, [X28]
	172 Move X2, X31
	173 Call String.op_Equality, X0, X1
	174 Move TEMP, X0
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfEqual {207}
	178 Compare X25, 0
	179 JumpIfEqual {210}
	180 Move W8, [X20+24]
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X9, [X26]
	183 Compare X9, 0
	184 JumpIfEqual {298}
	185 Move W9, [X9+16]
	186 Compare W9, 0
	187 JumpIfEqual {207}
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X0, [X26]
	190 Move X1, [X27]
	191 Move X2, X31
	192 Call String.op_Equality, X0, X1
	193 Move TEMP, X0
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfNotEqual {200}
	197 NotImplemented "Instruction CMP not yet implemented."
	198 NotImplemented "Instruction CSET not yet implemented."
	199 Subtract W21, W21, W8
	200 Move W8, [X20+24]
	201 NotImplemented "Instruction CMP not yet implemented."
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move X8, [X26]
	204 Add X9, X20, W21
	205 Add W21, W21, 1
	206 Move [X9+32], X8
	207 Move X8, [X20+24]
	208 Add X25, X25, 1
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move W8, [X20+24]
	211 Move W21, W31
	212 Compare W21, 0
	213 JumpIfEqual {227}
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Compare W8, 0
	216 JumpIfEqual {297}
	217 Move X8, 0xDF6000
	218 Move X0, [X20+32]
	219 Move X8, [X8+2440]
	220 Move X2, X31
	221 Move X1, [X8]
	222 Call String.op_Equality, X0, X1
	223 Move TEMP, X0
	224 And TEMP, TEMP, 1
	225 Compare TEMP, 1
	226 JumpIfNotEqual {228}
	227 Move X20, X19
	228 Move X0, [X22]
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {234}
	232 Call 0x1C17DFC
	233 Move X0, [X22]
	234 Move X8, [X0+184]
	235 Move X1, X20
	236 Move W2, W31
	237 Move W3, W21
	238 Move X0, [X8+16]
	239 Move X4, X31
	240 Call String.Join, X0, X1, X2, X3
	241 Move X20, X0
	242 Move X0, X31
	243 Call Environment.get_IsRunningOnWindows
	244 Move TEMP, X0
	245 And TEMP, TEMP, 1
	246 Compare TEMP, 1
	247 JumpIfEqual {268}
	248 Move X8, 0xDF6000
	249 Move X8, [X8+2440]
	250 Move X0, X19
	251 Move X2, X31
	252 Move X1, [X8]
	253 Call String.op_Inequality, X0, X1
	254 Move TEMP, X0
	255 And TEMP, TEMP, 1
	256 Compare TEMP, 1
	257 JumpIfNotEqual {268}
	258 Compare X20, 0
	259 JumpIfEqual {298}
	260 Move W8, [X20+16]
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Move X0, X20
	263 Move W1, W31
	264 Move X2, X31
	265 Call String.get_Chars, X0, X1
	266 And W8, W0, 0xFFFF
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Move X0, X20
	269 Move X20, [X31+80]
	270 Move X19, [X31+88]
	271 Move X22, [X31+64]
	272 Move X21, [X31+72]
	273 Move X24, [X31+48]
	274 Move X23, [X31+56]
	275 Move X26, [X31+32]
	276 Move X25, [X31+40]
	277 Move X28, [X31+16]
	278 Move X27, [X31+24]
	279 Move X30, [X31+96]
	280 Return X0
	281 Move X0, X19
	282 Move X1, X20
	283 Move X20, [X31+80]
	284 Move X19, [X31+88]
	285 Move X22, [X31+64]
	286 Move X21, [X31+72]
	287 Move X24, [X31+48]
	288 Move X23, [X31+56]
	289 Move X26, [X31+32]
	290 Move X25, [X31+40]
	291 Move X28, [X31+16]
	292 Move X27, [X31+24]
	293 Move X2, X31
	294 Move X30, [X31+96]
	295 Call String.Concat, X0, X1
	296 Return X0
	297 Call 0x1C17F28
	298 Call 0x1C17F20

Method: System.String Combine(System.String[] paths)

Disassembly:
	0x032FF4C4 MOV X21, X2
	0x032FF4C8 MOV X19, X1
	0x032FF4CC STR W21, [X31 + 0x18]
	0x032FF4D0 TBNZ X8, 0x0, 0x32FF500
	0x032FF4D4 ADRP X0, 0xE23000
	0x032FF4D8 LDR X0, [X0 + 0x918]
	0x032FF4DC BL 0x1C16CF4
	0x032FF4E0 ADRP X0, 0xE23000
	0x032FF4E4 LDR X0, [X0 + 0x1A8]
	0x032FF4E8 BL 0x1C16CF4
	0x032FF4EC ADRP X0, 0xE23000
	0x032FF4F0 LDR X0, [X0 + 0x4E8]
	0x032FF4F4 BL 0x1C16CF4
	0x032FF4F8 MOVZ W8, 0x1
	0x032FF4FC STRB W8, [X22 + 0xAB2]
	0x032FF500 LDR X0, [X20]
	0x032FF504 ADRP X23, 0xE23000
	0x032FF508 LDR X23, [X23 + 0x918]
	0x032FF50C MOV X1, X31
	0x032FF510 BL 0x33C6948
	0x032FF514 LDR W24, [X20 + 0x8]
	0x032FF518 MOV X22, X0
	0x032FF51C TBZ X24, 0x1F, 0x32FF528
	0x032FF520 MOV X0, X31
	0x032FF524 BL 0x339D6EC
	0x032FF528 LDR X3, [X23]
	0x032FF52C ADD X0, X31, 0x0
	0x032FF530 MOV X1, X19
	0x032FF534 MOV X2, X21
	0x032FF538 STR X22, [X31]
	0x032FF53C STP W24, W31, [X31 + 0x8]
	0x032FF540 BL 0x25FB714
	0x032FF544 LDRB W8, [X20 + 0x1C]
	0x032FF548 TBNZ X8, 0x0, 0x32FF560
	0x032FF54C LDRSW X8, [X20 + 0x8]
	0x032FF550 CMP W8, W21
	0x032FF554 B.CS 0x32FF5FC
	0x032FF558 MOVZ W9, 0x2F
	0x032FF55C STRH W9, [X19, X8, LSL #1]
	0x032FF560 LDR X0, [X20 + 0x10]
	0x032FF564 ADRP X22, 0xE23000
	0x032FF568 LDR X22, [X22 + 0x1A8]
	0x032FF56C MOV X1, X31
	0x032FF570 BL 0x33C6948
	0x032FF574 LDR W24, [X20 + 0x18]
	0x032FF578 MOV X21, X0
	0x032FF57C TBZ X24, 0x1F, 0x32FF588
	0x032FF580 MOV X0, X31
	0x032FF584 BL 0x339D6EC
	0x032FF588 STR X21, [X31]
	0x032FF58C STP W24, W31, [X31 + 0x8]
	0x032FF590 LDRB W8, [X20 + 0x1C]
	0x032FF594 LDR W9, [X20 + 0x8]
	0x032FF598 LDR W21, [X31 + 0x18]
	0x032FF59C LDR X22, [X22]
	0x032FF5A0 ORN W8, W31, W8, 0x0
	0x032FF5A4 AND W8, W8, 0x1
	0x032FF5A8 ADD W20, W9, W8
	0x032FF5AC CMP W21, W20
	0x032FF5B0 B.CS 0x32FF5C0
	0x032FF5B4 MOV X0, X31
	0x032FF5B8 BL 0x339D6EC
	0x032FF5BC LDR W21, [X31 + 0x18]
	0x032FF5C0 LDR X0, [X22 + 0x20]
	0x032FF5C4 LDRB W8, [X0 + 0x135]
	0x032FF5C8 TBNZ X8, 0x0, 0x32FF5D0
	0x032FF5CC BL 0x1C5C684
	0x032FF5D0 LDR X3, [X23]
	0x032FF5D4 SUB W2, W21, W20
	0x032FF5D8 ADD X1, X19, W20, 0x1, SXTW
	0x032FF5DC ADD X0, X31, 0x0
	0x032FF5E0 BL 0x25FB714
	0x032FF5E4 LDP X20, X19, [X31 + 0x40]
	0x032FF5E8 LDP X22, X21, [X31 + 0x30]
	0x032FF5EC LDP X24, X23, [X31 + 0x20]
	0x032FF5F0 LDR X30, [X31 + 0x10]
	0x032FF5F4 ADD X31, X31, 0x50
	0x032FF5F8 RET
	0x032FF5FC BL 0x1C16F28
	0x032FF600 SUB X31, X31, 0x60
	0x032FF604 STR X30, [X31 + 0x10]
	0x032FF608 STP X26, X25, [X31 + 0x20]
	0x032FF60C STP X24, X23, [X31 + 0x30]
	0x032FF610 STP X22, X21, [X31 + 0x40]
	0x032FF614 STP X20, X19, [X31 + 0x50]
	0x032FF618 ADRP X22, 0x10DD000
	0x032FF61C LDRB W8, [X22 + 0xAB3]
	0x032FF620 MOV X21, X3
	0x032FF624 MOV X19, X2
	0x032FF628 MOV X20, X1
	0x032FF62C STR W19, [X31 + 0x18]
	0x032FF630 TBNZ X8, 0x0, 0x32FF66C
	0x032FF634 ADRP X0, 0xE23000
	0x032FF638 LDR X0, [X0 + 0x918]
	0x032FF63C BL 0x1C16CF4
	0x032FF640 ADRP X0, 0xE23000
	0x032FF644 LDR X0, [X0 + 0x1A8]
	0x032FF648 BL 0x1C16CF4
	0x032FF64C ADRP X0, 0xE23000
	0x032FF650 LDR X0, [X0 + 0x4E8]
	0x032FF654 BL 0x1C16CF4
	0x032FF658 ADRP X0, 0xE23000
	0x032FF65C LDR X0, [X0 + 0x588]
	0x032FF660 BL 0x1C16CF4
	0x032FF664 MOVZ W8, 0x1
	0x032FF668 STRB W8, [X22 + 0xAB3]
	0x032FF66C LDR X0, [X21]
	0x032FF670 ADRP X23, 0xE23000
	0x032FF674 LDR X23, [X23 + 0x918]
	0x032FF678 MOV X1, X31
	0x032FF67C BL 0x33C6948
	0x032FF680 LDR W24, [X21 + 0x8]
	0x032FF684 MOV X22, X0
	0x032FF688 TBZ X24, 0x1F, 0x32FF694
	0x032FF68C MOV X0, X31
	0x032FF690 BL 0x339D6EC
	0x032FF694 LDR X3, [X23]
	0x032FF698 ADD X0, X31, 0x0
	0x032FF69C MOV X1, X20
	0x032FF6A0 MOV X2, X19
	0x032FF6A4 STR X22, [X31]
	0x032FF6A8 STP W24, W31, [X31 + 0x8]
	0x032FF6AC BL 0x25FB714
	0x032FF6B0 LDRB W8, [X21 + 0x2C]
	0x032FF6B4 TBNZ X8, 0x0, 0x32FF6CC
	0x032FF6B8 LDRSW X8, [X21 + 0x8]
	0x032FF6BC CMP W8, W19
	0x032FF6C0 B.CS 0x32FF7F8
	0x032FF6C4 MOVZ W9, 0x2F
	0x032FF6C8 STRH W9, [X20, X8, LSL #1]
	0x032FF6CC LDR X0, [X21 + 0x10]
	0x032FF6D0 ADRP X24, 0xE23000
	0x032FF6D4 LDR X24, [X24 + 0x1A8]
	0x032FF6D8 MOV X1, X31
	0x032FF6DC BL 0x33C6948
	0x032FF6E0 LDR W25, [X21 + 0x18]
	0x032FF6E4 MOV X22, X0
	0x032FF6E8 TBZ X25, 0x1F, 0x32FF6F4
	0x032FF6EC MOV X0, X31
	0x032FF6F0 BL 0x339D6EC
	0x032FF6F4 STR X22, [X31]
	0x032FF6F8 STP W25, W31, [X31 + 0x8]
	0x032FF6FC LDRB W8, [X21 + 0x2C]
	0x032FF700 LDR W9, [X21 + 0x8]
	0x032FF704 LDR W25, [X31 + 0x18]
	0x032FF708 LDR X26, [X24]
	0x032FF70C ORN W8, W31, W8, 0x0
	0x032FF710 AND W8, W8, 0x1
	0x032FF714 ADD W22, W9, W8
	0x032FF718 CMP W25, W22
	0x032FF71C B.CS 0x32FF72C
	0x032FF720 MOV X0, X31
	0x032FF724 BL 0x339D6EC
	0x032FF728 LDR W25, [X31 + 0x18]
	0x032FF72C LDR X0, [X26 + 0x20]
	0x032FF730 LDRB W8, [X0 + 0x135]
	0x032FF734 TBNZ X8, 0x0, 0x32FF73C
	0x032FF738 BL 0x1C5C684
	0x032FF73C LDR X3, [X23]
	0x032FF740 SUB W2, W25, W22
	0x032FF744 ADD X1, X20, W22, 0x1, SXTW
	0x032FF748 ADD X0, X31, 0x0
	0x032FF74C BL 0x25FB714
	0x032FF750 LDRB W8, [X21 + 0x2D]
	0x032FF754 TBNZ X8, 0x0, 0x32FF770
	0x032FF758 LDR W8, [X21 + 0x28]
	0x032FF75C ORN W8, W31, W8, 0x0
	0x032FF760 ADDS W8, W19, W8
	0x032FF764 B.CC 0x32FF7F8
	0x032FF768 MOVZ W9, 0x2F
	0x032FF76C STRH W9, [X20, W8, SXTW]
	0x032FF770 LDR X0, [X21 + 0x20]
	0x032FF774 MOV X1, X31
	0x032FF778 BL 0x33C6948
	0x032FF77C LDR W26, [X21 + 0x28]
	0x032FF780 MOV X22, X0
	0x032FF784 MOV W25, W26
	0x032FF788 TBZ X26, 0x1F, 0x32FF798
	0x032FF78C MOV X0, X31
	0x032FF790 BL 0x339D6EC
	0x032FF794 LDR W25, [X21 + 0x28]
	0x032FF798 LDR X21, [X24]
	0x032FF79C CMP W25, W19
	0x032FF7A0 STR X22, [X31]
	0x032FF7A4 STP W26, W31, [X31 + 0x8]
	0x032FF7A8 B.LS 0x32FF7B4
	0x032FF7AC MOV X0, X31
	0x032FF7B0 BL 0x339D6EC

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x10DE000
	011 Move W8, [X20+2729]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xE1C000
	018 Move X0, [X0+464]
	019 Call 0x1C17CF4
	020 Move X0, 0xDF5000
	021 Move X0, [X0+2288]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2729], W8
	025 Compare X19, 0
	026 JumpIfEqual {196}
	027 Move X8, 0xDF5000
	028 Move X8, [X8+2288]
	029 Move X0, [X8]
	030 Call 0x1C17F10
	031 Move X1, X31
	032 Move X20, X0
	033 Call StringBuilder..ctor, X0
	034 Move W8, [X19+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X23, 0xE1C000
	037 Move X23, [X23+464]
	038 Move X22, X31
	039 Move W26, W31
	040 Add X24, X19, 32
	041 Move W25, W8
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, [X24]
	044 Compare X21, 0
	045 JumpIfEqual {160}
	046 Move W8, [X21+16]
	047 Compare W8, 0
	048 JumpIfEqual {140}
	049 Move X0, [X23]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {55}
	053 Call 0x1C17DFC
	054 Move X0, [X23]
	055 Move X8, [X0+184]
	056 Move X0, X21
	057 Move X2, X31
	058 Move X1, [X8]
	059 Call String.IndexOfAny, X0, X1
	060 Add W31, W0, 1
	061 Move TEMP, X26
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {78}
	065 Move X0, [X23]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Compare X20, 0
	071 JumpIfEqual {177}
	072 Move X8, [X23]
	073 Move X0, X20
	074 Move X2, X31
	075 Move X8, [X8+184]
	076 Move X1, [X8+16]
	077 Call StringBuilder.Append, X0, X1
	078 Move X0, [X23]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X0, X21
	084 Call Path.IsPathRooted, X0
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {95}
	089 Compare X20, 0
	090 JumpIfEqual {177}
	091 Move X0, X20
	092 Move W1, W31
	093 Move X2, X31
	094 Call StringBuilder.set_Length, X0, X1
	095 Compare X20, 0
	096 JumpIfEqual {177}
	097 Move X0, X20
	098 Move X1, X21
	099 Move X2, X31
	100 Subtract W25, W25, 1
	101 Call StringBuilder.Append, X0, X1
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move W26, W31
	104 Move W8, [X21+16]
	105 Subtract W1, W8, 1
	106 Move X0, X21
	107 Move X2, X31
	108 Call String.get_Chars, X0, X1
	109 Move X8, [X23]
	110 Move W21, W0
	111 Move W9, [X8+224]
	112 Compare W9, 0
	113 JumpIfNotEqual {117}
	114 Move X0, X8
	115 Call 0x1C17DFC
	116 Move X8, [X23]
	117 Move X9, [X8+184]
	118 NotImplemented "Instruction LDRH not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move W10, [X8+224]
	121 Compare W10, 0
	122 JumpIfNotEqual {127}
	123 Move X0, X8
	124 Call 0x1C17DFC
	125 Move X8, [X23]
	126 Move X9, [X8+184]
	127 NotImplemented "Instruction LDRH not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move W26, W31
	130 Move W10, [X8+224]
	131 Compare W10, 0
	132 JumpIfNotEqual {137}
	133 Move X0, X8
	134 Call 0x1C17DFC
	135 Move X8, [X23]
	136 Move X9, [X8+184]
	137 NotImplemented "Instruction LDRH not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 NotImplemented "Instruction CSET not yet implemented."
	140 Move W8, [X19+24]
	141 Add X22, X22, 1
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Compare X20, 0
	144 JumpIfEqual {177}
	145 Move X8, [X20]
	146 Move X0, X20
	147 Move X20, [X31+64]
	148 Move X19, [X31+72]
	149 Move X22, [X31+48]
	150 Move X21, [X31+56]
	151 Move X2, [X8+360]
	152 Move X1, [X8+368]
	153 Move X24, [X31+32]
	154 Move X23, [X31+40]
	155 Move X26, [X31+16]
	156 Move X25, [X31+24]
	157 Move X30, [X31+80]
	158 CallNoReturn X2
	159 Call 0x1C17F28
	160 Move X0, 0xDFA000
	161 Move X0, [X0+1320]
	162 Call 0x1C17D08
	163 Call 0x1C17F10
	164 Move X19, X0
	165 Move X0, 0xE29000
	166 Move X0, [X0+1824]
	167 Call 0x1C17D08
	168 Move X20, X0
	169 Move X0, 0xE29000
	170 Move X0, [X0+1832]
	171 Call 0x1C17D08
	172 Move X2, X0
	173 Move X0, X19
	174 Move X1, X20
	175 Move X3, X31
	176 Call ArgumentNullException..ctor, X0, X1, X2
	177 Call 0x1C17F20
	178 Move X0, 0xDFD000
	179 Move X0, [X0+1400]
	180 Call 0x1C17D08
	181 Call 0x1C17F10
	182 Move X19, X0
	183 Move X0, 0xE29000
	184 Move X0, [X0+72]
	185 Call 0x1C17D08
	186 Move X1, X0
	187 Move X0, X19
	188 Move X2, X31
	189 Call ArgumentException..ctor, X0, X1
	190 Move X0, 0xE29000
	191 Move X0, [X0+1840]
	192 Call 0x1C17D08
	193 Move X1, X0
	194 Move X0, X19
	195 Call 0x1C17DEC
	196 Move X0, 0xDFA000
	197 Move X0, [X0+1320]
	198 Call 0x1C17D08
	199 Call 0x1C17F10
	200 Move X19, X0
	201 Move X0, 0xE29000
	202 Move X0, [X0+1832]
	203 Call 0x1C17D08
	204 Move X1, X0
	205 Move X0, X19
	206 Move X2, X31
	207 Call ArgumentNullException..ctor, X0, X1

Method: System.String Combine(System.String path1, System.String path2, System.String path3)

Disassembly:
	0x032FF7B4 LDR X0, [X21 + 0x20]
	0x032FF7B8 LDRB W8, [X0 + 0x135]
	0x032FF7BC TBNZ X8, 0x0, 0x32FF7C4
	0x032FF7C0 BL 0x1C5C684
	0x032FF7C4 LDR X3, [X23]
	0x032FF7C8 SUB W8, W19, W25
	0x032FF7CC ADD X1, X20, W8, 0x1, SXTW
	0x032FF7D0 MOV W2, W25
	0x032FF7D4 ADD X0, X31, 0x0
	0x032FF7D8 BL 0x25FB714
	0x032FF7DC LDP X20, X19, [X31 + 0x50]
	0x032FF7E0 LDP X22, X21, [X31 + 0x40]
	0x032FF7E4 LDP X24, X23, [X31 + 0x30]
	0x032FF7E8 LDP X26, X25, [X31 + 0x20]
	0x032FF7EC LDR X30, [X31 + 0x10]
	0x032FF7F0 ADD X31, X31, 0x60
	0x032FF7F4 RET
	0x032FF7F8 BL 0x1C16F28
	0x032FF7FC STP X30, X19, [X31 - 0x10]!
	0x032FF800 ADRP X19, 0x10DD000
	0x032FF804 LDRB W8, [X19 + 0xAB4]
	0x032FF808 TBNZ X8, 0x0, 0x32FF82C
	0x032FF80C ADRP X0, 0xDF6000
	0x032FF810 LDR X0, [X0 + 0x9B8]
	0x032FF814 BL 0x1C16CF4
	0x032FF818 ADRP X0, 0xE28000
	0x032FF81C LDR X0, [X0 + 0x798]
	0x032FF820 BL 0x1C16CF4
	0x032FF824 MOVZ W8, 0x1
	0x032FF828 STRB W8, [X19 + 0xAB4]
	0x032FF82C MOV X0, X31
	0x032FF830 BL 0x33C1548
	0x032FF834 CBZ X0, 0x32FF898
	0x032FF838 ADRP X8, 0xDF6000
	0x032FF83C LDR X8, [X8 + 0x9B8]
	0x032FF840 LDR W1, [X0 + 0x10]
	0x032FF844 ADRP X19, 0xE28000
	0x032FF848 LDR X0, [X8]
	0x032FF84C LDR X19, [X19 + 0x798]
	0x032FF850 BL 0x1C16D6C
	0x032FF854 LDR X8, [X19]
	0x032FF858 LDR X8, [X8 + 0xB8]
	0x032FF85C STR X0, [X8]
	0x032FF860 MOV X0, X31
	0x032FF864 BL 0x33C1548
	0x032FF868 CBZ X0, 0x32FF898
	0x032FF86C LDR W8, [X0 + 0x10]
	0x032FF870 CMP W8, 0x1
	0x032FF874 B.NE 0x32FF890
	0x032FF878 MOV W1, W31
	0x032FF87C MOV X2, X31
	0x032FF880 BL 0x3222A1C
	0x032FF884 LDR X8, [X19]
	0x032FF888 LDR X8, [X8 + 0xB8]
	0x032FF88C STRH W0, [X8 + 0x8]
	0x032FF890 LDP X30, X19, [X31], #0x10
	0x032FF894 RET
	0x032FF898 BL 0x1C16F20
	0x032FF89C STP X30, X23, [X31 - 0x30]!
	0x032FF8A0 STP X22, X21, [X31 + 0x10]
	0x032FF8A4 STP X20, X19, [X31 + 0x20]
	0x032FF8A8 ADRP X22, 0x10DD000
	0x032FF8AC ADRP X23, 0xE23000
	0x032FF8B0 LDRB W8, [X22 + 0xAB5]
	0x032FF8B4 LDR X23, [X23 + 0xCC8]
	0x032FF8B8 MOV X19, X2
	0x032FF8BC MOV X20, X1
	0x032FF8C0 MOV X21, X0
	0x032FF8C4 TBNZ X8, 0x0, 0x32FF8DC
	0x032FF8C8 ADRP X0, 0xE23000
	0x032FF8CC LDR X0, [X0 + 0xCC8]
	0x032FF8D0 BL 0x1C16CF4
	0x032FF8D4 MOVZ W8, 0x1
	0x032FF8D8 STRB W8, [X22 + 0xAB5]
	0x032FF8DC LDR X0, [X23]
	0x032FF8E0 LDR W8, [X0 + 0xE0]
	0x032FF8E4 CBNZ W8, 0x32FF8EC
	0x032FF8E8 BL 0x1C16DFC
	0x032FF8EC MOV X0, X21
	0x032FF8F0 MOV X1, X20
	0x032FF8F4 MOV X2, X19
	0x032FF8F8 LDP X20, X19, [X31 + 0x20]
	0x032FF8FC LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x10DE000
	007 Move W8, [X22+2730]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xE1C000
	016 Move X0, [X0+464]
	017 Call 0x1C17CF4
	018 Move X0, 0xDF5000
	019 Move X0, [X0+2760]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2730], W8
	023 Compare X21, 0
	024 JumpIfEqual {61}
	025 Compare X20, 0
	026 JumpIfEqual {68}
	027 Compare X19, 0
	028 JumpIfEqual {75}
	029 Move X8, 0xDF5000
	030 Move X8, [X8+2760]
	031 Move W1, 3
	032 Move X0, [X8]
	033 Call 0x1C17D6C
	034 Compare X0, 0
	035 JumpIfEqual {93}
	036 Move W8, [X0+24]
	037 Move X22, X0
	038 Compare W8, 0
	039 JumpIfEqual {60}
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move [X22+32], X21
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move [X22+40], X20
	044 Move X8, 0xE1C000
	045 Move X8, [X8+464]
	046 Move [X22+48], X19
	047 Move X0, [X8]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X22
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 Call Path.Combine, X0
	059 Return X0
	060 Call 0x1C17F28
	061 Move X0, 0xDFA000
	062 Move X0, [X0+1320]
	063 Call 0x1C17D08
	064 Call 0x1C17F10
	065 Move X19, X0
	066 Move X0, 0xE29000
	067 Move X0, [X0+1752]
	068 Move X0, 0xDFA000
	069 Move X0, [X0+1320]
	070 Call 0x1C17D08
	071 Call 0x1C17F10
	072 Move X19, X0
	073 Move X0, 0xE29000
	074 Move X0, [X0+1760]
	075 Move X0, 0xDFA000
	076 Move X0, [X0+1320]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X19, X0
	080 Move X0, 0xE29000
	081 Move X0, [X0+1848]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X19
	085 Move X2, X31
	086 Call ArgumentNullException..ctor, X0, X1
	087 Move X0, 0xE29000
	088 Move X0, [X0+1856]
	089 Call 0x1C17D08
	090 Move X1, X0
	091 Move X0, X19
	092 Call 0x1C17DEC
	093 Call 0x1C17F20

Method: System.ReadOnlySpan`1<System.Char> GetFileName(System.ReadOnlySpan`1<System.Char> path)

Disassembly:
	0x032FF900 MOV X3, X31
	0x032FF904 LDP X30, X23, [X31], #0x30
	0x032FF908 B 0x32E64DC
	0x032FF90C STP X30, X19, [X31 - 0x10]!
	0x032FF910 MOV X1, X31
	0x032FF914 BL 0x32E6BD8
	0x032FF918 LDP X30, X19, [X31], #0x10
	0x032FF91C RET
	0x032FF920 CMP W1, 0x1
	0x032FF924 MOV X19, X0
	0x032FF928 B.NE 0x32FF988
	0x032FF92C MOV X0, X19
	0x032FF930 BL 0x3EB1AD0
	0x032FF934 MOV X19, X0
	0x032FF938 ADRP X0, 0xE22000
	0x032FF93C LDR X0, [X0 + 0x7A8]
	0x032FF940 BL 0x1C16D08
	0x032FF944 LDR X8, [X19]
	0x032FF948 LDR X1, [X8]
	0x032FF94C BL 0x1C17270
	0x032FF950 TBZ X0, 0x0, 0x32FF960
	0x032FF954 BL 0x3EB1AE0
	0x032FF958 MOVN W0, 0x0
	0x032FF95C B 0x32FF918
	0x032FF960 MOVZ W0, 0x8
	0x032FF964 BL 0x3EB1AF0
	0x032FF968 LDR X8, [X19]
	0x032FF96C STR X8, [X0]
	0x032FF970 ADRP X1, 0xBB5000
	0x032FF974 ADD X1, X1, 0xE58
	0x032FF978 MOV X2, X31
	0x032FF97C BL 0x3EB1B00
	0x032FF980 MOV X19, X0
	0x032FF984 BL 0x3EB1AE0
	0x032FF988 MOV X0, X19
	0x032FF98C BL 0x1D2C690
	0x032FF990 BL 0x1990590
	0x032FF994 STP X30, X19, [X31 - 0x10]!
	0x032FF998 MOV X1, X31
	0x032FF99C BL 0x32E6C9C
	0x032FF9A0 LDP X30, X19, [X31], #0x10
	0x032FF9A4 RET
	0x032FF9A8 CMP W1, 0x1
	0x032FF9AC MOV X19, X0
	0x032FF9B0 B.NE 0x32FFA10
	0x032FF9B4 MOV X0, X19
	0x032FF9B8 BL 0x3EB1AD0
	0x032FF9BC MOV X19, X0
	0x032FF9C0 ADRP X0, 0xE22000
	0x032FF9C4 LDR X0, [X0 + 0x7A8]
	0x032FF9C8 BL 0x1C16D08
	0x032FF9CC LDR X8, [X19]
	0x032FF9D0 LDR X1, [X8]
	0x032FF9D4 BL 0x1C17270
	0x032FF9D8 TBZ X0, 0x0, 0x32FF9E8
	0x032FF9DC BL 0x3EB1AE0
	0x032FF9E0 MOVN W0, 0x0
	0x032FF9E4 B 0x32FF9A0
	0x032FF9E8 MOVZ W0, 0x8
	0x032FF9EC BL 0x3EB1AF0
	0x032FF9F0 LDR X8, [X19]
	0x032FF9F4 STR X8, [X0]
	0x032FF9F8 ADRP X1, 0xBB5000
	0x032FF9FC ADD X1, X1, 0xE58
	0x032FFA00 MOV X2, X31
	0x032FFA04 BL 0x3EB1B00
	0x032FFA08 MOV X19, X0
	0x032FFA0C BL 0x3EB1AE0
	0x032FFA10 MOV X0, X19
	0x032FFA14 BL 0x1D2C690
	0x032FFA18 BL 0x1990590
	0x032FFA1C STP X30, X25, [X31 - 0x40]!
	0x032FFA20 STP X24, X23, [X31 + 0x10]
	0x032FFA24 STP X22, X21, [X31 + 0x20]
	0x032FFA28 STP X20, X19, [X31 + 0x30]
	0x032FFA2C ADRP X19, 0x10DD000
	0x032FFA30 LDRB W8, [X19 + 0xAB6]
	0x032FFA34 MOV W20, W3
	0x032FFA38 MOV W21, W2
	0x032FFA3C MOV X22, X1
	0x032FFA40 MOV X23, X0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x10DE000
	011 Move X22, 0xE1C000
	012 Move W8, [X21+2731]
	013 Move X22, [X22+464]
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xE1C000
	021 Move X0, [X0+464]
	022 Call 0x1C17CF4
	023 Move X0, 0xE28000
	024 Move X0, [X0+3472]
	025 Call 0x1C17CF4
	026 Move X0, 0xE24000
	027 Move X0, [X0+40]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+2731], W8
	031 Move X0, X31
	032 Move X1, X19
	033 Move X2, X20
	034 Move X3, X31
	035 Call String.CreateString, X0, X1
	036 Move X8, [X22]
	037 Move X21, X0
	038 Move W9, [X8+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 Move X0, X21
	044 Call Path.GetPathRoot, X0
	045 Compare X0, 0
	046 JumpIfEqual {97}
	047 Move X24, 0xE28000
	048 Move W25, [X0+16]
	049 Move X24, [X24+3472]
	050 Move X8, X31
	051 Subtract X26, X20, 1
	052 Move X23, X8
	053 Add W31, W26, W23
	054 Add X8, X26, X23
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, [X22]
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Move W9, [X0+224]
	060 Compare W9, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move W0, W21
	064 Call Path.IsDirectorySeparator, X0
	065 Subtract X8, X23, 1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {52}
	070 Move X22, [X24]
	071 Add X21, X20, X23
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X0, X31
	074 Call ThrowHelper.ThrowArgumentOutOfRangeException
	075 Move X0, [X22+32]
	076 Move W8, [X0+309]
	077 Move TEMP, X8
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {82}
	081 Call 0x1C5D684
	082 Add X19, X19, W21
	083 Subtract X20, X31, X23
	084 Move X0, X19
	085 Move X1, X20
	086 Move X20, [X31+64]
	087 Move X19, [X31+72]
	088 Move X22, [X31+48]
	089 Move X21, [X31+56]
	090 Move X24, [X31+32]
	091 Move X23, [X31+40]
	092 Move X26, [X31+16]
	093 Move X25, [X31+24]
	094 Move X30, [X31+80]
	095 Return X0
	096 Call 0x1C17F28
	097 Call 0x1C17F20

Method: System.String Join(System.ReadOnlySpan`1<System.Char> path1, System.ReadOnlySpan`1<System.Char> path2)

Disassembly:
	0x032FFA44 TBNZ X8, 0x0, 0x32FFA5C
	0x032FFA48 ADRP X0, 0xE28000
	0x032FFA4C LDR X0, [X0 + 0x798]
	0x032FFA50 BL 0x1C16CF4
	0x032FFA54 MOVZ W8, 0x1
	0x032FFA58 STRB W8, [X19 + 0xAB6]
	0x032FFA5C CBZ X22, 0x32FFB38
	0x032FFA60 TBNZ X21, 0x1F, 0x32FFB6C
	0x032FFA64 TBNZ X20, 0x1F, 0x32FFB8C
	0x032FFA68 LDR W8, [X22 + 0x18]
	0x032FFA6C SUB W8, W8, W20
	0x032FFA70 CMP W8, W21
	0x032FFA74 B.LT 0x32FFBD4
	0x032FFA78 ADRP X19, 0xE28000
	0x032FFA7C LDR X19, [X19 + 0x798]
	0x032FFA80 LDR X0, [X19]
	0x032FFA84 LDR W8, [X0 + 0xE0]
	0x032FFA88 CBNZ W8, 0x32FFA94
	0x032FFA8C BL 0x1C16DFC
	0x032FFA90 LDR X0, [X19]
	0x032FFA94 CMP W20, 0x1
	0x032FFA98 B.LT 0x32FFB08
	0x032FFA9C LDR X8, [X0 + 0xB8]
	0x032FFAA0 MOV W19, W31
	0x032FFAA4 LDRH W24, [X8 + 0x8]
	0x032FFAA8 MOV X0, X23
	0x032FFAAC MOV X1, X31
	0x032FFAB0 BL 0x32E6C9C
	0x032FFAB4 MOV W8, W0
	0x032FFAB8 TBNZ X0, 0x1F, 0x32FFB1C
	0x032FFABC LDR W10, [X22 + 0x18]
	0x032FFAC0 ADD W9, W21, W19
	0x032FFAC4 ADD W25, W19, 0x1
	0x032FFAC8 CMP W9, W10
	0x032FFACC B.CS 0x32FFB34
	0x032FFAD0 ADD X9, X22, W9, 0x1, SXTW
	0x032FFAD4 STRH W8, [X9 + 0x20]
	0x032FFAD8 CBZ W24, 0x32FFAE8
	0x032FFADC CMP W24, W8, UXTH
	0x032FFAE0 B.NE 0x32FFAF4
	0x032FFAE4 B 0x32FFB10
	0x032FFAE8 MOV W1, W8
	0x032FFAEC BL 0x32FFCA4
	0x032FFAF0 TBNZ X0, 0x0, 0x32FFB18
	0x032FFAF4 CMP W20, W25
	0x032FFAF8 MOV W19, W25

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x10DE000
	008 Move W8, [X23+2732]
	009 Move X19, X3
	010 Move X20, X2
	011 Move X21, X1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xE1C000
	018 Move X0, [X0+464]
	019 Call 0x1C17CF4
	020 Move X0, 0xE24000
	021 Move X0, [X0+40]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+2732], W8
	025 Compare W21, 0
	026 JumpIfEqual {46}
	027 Compare W19, 0
	028 JumpIfEqual {49}
	029 Move X8, 0xE1C000
	030 Move X8, [X8+464]
	031 Move X0, [X8]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X22
	037 Move X1, X21
	038 Move X2, X20
	039 Move X3, X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Move X23, [X31+56]
	046 Move X0, X31
	047 Move X1, X20
	048 Move X2, X19
	049 Move X0, X31
	050 Move X1, X22
	051 Move X2, X21
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X3, X31
	057 Move X30, [X31+48]
	058 Move X23, [X31+56]
	059 Call String.CreateString, X0, X1
	060 Return X0

Method: System.String Join(System.ReadOnlySpan`1<System.Char> path1, System.ReadOnlySpan`1<System.Char> path2, System.ReadOnlySpan`1<System.Char> path3)

Disassembly:
	0x032FFD6C LDR X0, [X21]
	0x032FFD70 AND W8, W8, 0xFFFF
	0x032FFD74 CMP W8, W19, UXTH
	0x032FFD78 B.NE 0x32FFDBC
	0x032FFD7C LDR W8, [X0 + 0xE0]
	0x032FFD80 CBNZ W8, 0x32FFD8C
	0x032FFD84 BL 0x1C16DFC
	0x032FFD88 LDR X0, [X21]
	0x032FFD8C LDR X8, [X0 + 0xB8]
	0x032FFD90 LDR X8, [X8]
	0x032FFD94 CBZ X8, 0x32FFE34
	0x032FFD98 LDR W9, [X8 + 0x18]
	0x032FFD9C CMP W20, W9
	0x032FFDA0 B.CS 0x32FFE38
	0x032FFDA4 ADD X8, X8, X23
	0x032FFDA8 MOVZ W10, 0x1
	0x032FFDAC CMP W9, W22
	0x032FFDB0 STRB W10, [X8 + 0x20]
	0x032FFDB4 CSET W0, EQ
	0x032FFDB8 B 0x32FFE24
	0x032FFDBC MOV X19, X31
	0x032FFDC0 LDR W8, [X0 + 0xE0]
	0x032FFDC4 CBNZ W8, 0x32FFDD0
	0x032FFDC8 BL 0x1C16DFC
	0x032FFDCC LDR X0, [X21]
	0x032FFDD0 LDR X8, [X0 + 0xB8]
	0x032FFDD4 LDR X8, [X8]
	0x032FFDD8 CBZ X8, 0x32FFE34
	0x032FFDDC LDRSW X8, [X8 + 0x18]
	0x032FFDE0 CMP X19, X8
	0x032FFDE4 B.GE 0x32FFE20
	0x032FFDE8 LDR W8, [X0 + 0xE0]
	0x032FFDEC CBNZ W8, 0x32FFDF8
	0x032FFDF0 BL 0x1C16DFC
	0x032FFDF4 LDR X0, [X21]
	0x032FFDF8 LDR X8, [X0 + 0xB8]
	0x032FFDFC LDR X8, [X8]
	0x032FFE00 CBZ X8, 0x32FFE34
	0x032FFE04 LDR W9, [X8 + 0x18]
	0x032FFE08 CMP X19, X9
	0x032FFE0C B.CS 0x32FFE38
	0x032FFE10 ADD X8, X8, X19
	0x032FFE14 ADD X19, X19, 0x1
	0x032FFE18 STRB W31, [X8 + 0x20]
	0x032FFE1C B 0x32FFDC0
	0x032FFE20 MOV W0, W31
	0x032FFE24 LDP X20, X19, [X31 + 0x20]
	0x032FFE28 LDP X22, X21, [X31 + 0x10]
	0x032FFE2C LDP X30, X23, [X31], #0x30
	0x032FFE30 RET
	0x032FFE34 BL 0x1C16F20
	0x032FFE38 BL 0x1C16F28
	0x032FFE3C STP X30, X19, [X31 - 0x10]!
	0x032FFE40 MOV X1, X31
	0x032FFE44 BL 0x32E7AA8
	0x032FFE48 LDP X30, X19, [X31], #0x10
	0x032FFE4C RET
	0x032FFE50 CMP W1, 0x1
	0x032FFE54 MOV X19, X0
	0x032FFE58 B.NE 0x32FFEB8
	0x032FFE5C MOV X0, X19
	0x032FFE60 BL 0x3EB1AD0
	0x032FFE64 MOV X19, X0
	0x032FFE68 ADRP X0, 0xE22000
	0x032FFE6C LDR X0, [X0 + 0x7A8]
	0x032FFE70 BL 0x1C16D08
	0x032FFE74 LDR X8, [X19]
	0x032FFE78 LDR X1, [X8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x10DE000
	010 Move W8, [X25+2733]
	011 Move X19, X5
	012 Move X20, X4
	013 Move X21, X3
	014 Move X22, X2
	015 Move X23, X1
	016 Move X24, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xE1C000
	022 Move X0, [X0+464]
	023 Call 0x1C17CF4
	024 Move X0, 0xE24000
	025 Move X0, [X0+40]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X25+2733], W8
	029 Move X8, 0xE1C000
	030 Move X8, [X8+464]
	031 Compare W23, 0
	032 JumpIfEqual {56}
	033 Compare W21, 0
	034 JumpIfEqual {63}
	035 Move X0, [X8]
	036 Move W8, [X0+224]
	037 Compare W19, 0
	038 JumpIfEqual {82}
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X24
	043 Move X1, X23
	044 Move X2, X22
	045 Move X3, X21
	046 Move X4, X20
	047 Move X5, X19
	048 Move X20, [X31+48]
	049 Move X19, [X31+56]
	050 Move X22, [X31+32]
	051 Move X21, [X31+40]
	052 Move X24, [X31+16]
	053 Move X23, [X31+24]
	054 Move X30, [X31+64]
	055 Move X25, [X31+72]
	056 Move X0, [X8]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X22
	062 Move X1, X21
	063 Move X0, [X8]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, X24
	069 Move X1, X23
	070 Move X2, X20
	071 Move X3, X19
	072 Move X20, [X31+48]
	073 Move X19, [X31+56]
	074 Move X22, [X31+32]
	075 Move X21, [X31+40]
	076 Move X24, [X31+16]
	077 Move X23, [X31+24]
	078 Move X30, [X31+64]
	079 Move X25, [X31+72]
	080 Call Path.Join, X0, X1
	081 Return X0
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X0, X24
	086 Move X1, X23
	087 Move X2, X22
	088 Move X3, X21

Method: System.Boolean TryJoin(System.ReadOnlySpan`1<System.Char> path1, System.ReadOnlySpan`1<System.Char> path2, System.Span`1<System.Char> destination, out System.Int32 charsWritten)

Disassembly:
	0x033001D4 STP X30, X19, [X31 - 0x10]!
	0x033001D8 MOV X2, X31
	0x033001DC BL 0x32E93C4
	0x033001E0 LDP X30, X19, [X31], #0x10
	0x033001E4 RET
	0x033001E8 CMP W1, 0x1
	0x033001EC MOV X19, X0
	0x033001F0 B.NE 0x330024C
	0x033001F4 MOV X0, X19
	0x033001F8 BL 0x3EB1AD0
	0x033001FC MOV X19, X0
	0x03300200 ADRP X0, 0xDF3000
	0x03300204 LDR X0, [X0 + 0x7D0]
	0x03300208 BL 0x1C16D08
	0x0330020C LDR X8, [X19]
	0x03300210 LDR X1, [X8]
	0x03300214 BL 0x1C17270
	0x03300218 TBZ X0, 0x0, 0x3300224
	0x0330021C LDP X30, X19, [X31], #0x10
	0x03300220 B 0x3EB1AE0
	0x03300224 MOVZ W0, 0x8
	0x03300228 BL 0x3EB1AF0
	0x0330022C LDR X8, [X19]
	0x03300230 STR X8, [X0]
	0x03300234 ADRP X1, 0xBB4000
	0x03300238 ADD X1, X1, 0xE58
	0x0330023C MOV X2, X31
	0x03300240 BL 0x3EB1B00
	0x03300244 MOV X19, X0
	0x03300248 BL 0x3EB1AE0
	0x0330024C MOV X0, X19
	0x03300250 BL 0x1D2C690
	0x03300254 BL 0x1990590
	0x03300258 STP X30, X23, [X31 - 0x30]!
	0x0330025C STP X22, X21, [X31 + 0x10]
	0x03300260 STP X20, X19, [X31 + 0x20]
	0x03300264 ADRP X23, 0x10DC000
	0x03300268 ADRP X22, 0xE22000
	0x0330026C LDRB W8, [X23 + 0xAB9]
	0x03300270 LDR X22, [X22 + 0xCC8]
	0x03300274 MOV X20, X2
	0x03300278 MOV X21, X1
	0x0330027C MOV X19, X0
	0x03300280 TBNZ X8, 0x0, 0x33002B0
	0x03300284 ADRP X0, 0xE27000
	0x03300288 LDR X0, [X0 + 0x7B8]
	0x0330028C BL 0x1C16CF4
	0x03300290 ADRP X0, 0xE22000
	0x03300294 LDR X0, [X0 + 0xCC8]
	0x03300298 BL 0x1C16CF4
	0x0330029C ADRP X0, 0xE27000
	0x033002A0 LDR X0, [X0 + 0x7C0]
	0x033002A4 BL 0x1C16CF4
	0x033002A8 MOVZ W8, 0x1
	0x033002AC STRB W8, [X23 + 0xAB9]
	0x033002B0 LDR X0, [X22]
	0x033002B4 ADRP X22, 0xE27000
	0x033002B8 LDR W8, [X0 + 0xE0]
	0x033002BC LDR X22, [X22 + 0x7B8]
	0x033002C0 CBNZ W8, 0x33002C8
	0x033002C4 BL 0x1C16DFC
	0x033002C8 MOV X0, X19
	0x033002CC MOV X1, X21
	0x033002D0 MOV X2, X20
	0x033002D4 MOV X3, X31
	0x033002D8 BL 0x32E64DC
	0x033002DC LDR X0, [X22]
	0x033002E0 LDR W8, [X0 + 0xE0]
	0x033002E4 CBNZ W8, 0x33002F0
	0x033002E8 BL 0x1C16DFC
	0x033002EC LDR X0, [X22]
	0x033002F0 LDR X8, [X0 + 0xB8]
	0x033002F4 LDR X0, [X8]
	0x033002F8 CBZ X0, 0x3300358
	0x033002FC ADRP X8, 0xE27000
	0x03300300 LDR X8, [X8 + 0x7C0]
	0x03300304 LDR X9, [X0]
	0x03300308 LDR X1, [X8]
	0x0330030C LDRB W10, [X9 + 0x130]
	0x03300310 LDRB W8, [X1 + 0x130]
	0x03300314 CMP W10, W8
	0x03300318 B.CC 0x3300354
	0x0330031C LDR X10, [X9 + 0xC8]
	0x03300320 SUB X9, X8, 0x1
	0x03300324 LDR X10, [X10, X9, LSL #3]
	0x03300328 CMP X10, X1
	0x0330032C B.NE 0x3300354
	0x03300330 STR X0, [X19 + 0x60]
	0x03300334 LDR X10, [X0]
	0x03300338 LDRB W11, [X10 + 0x130]
	0x0330033C CMP W11, W8
	0x03300340 B.CC 0x3300354
	0x03300344 LDR X8, [X10 + 0xC8]
	0x03300348 LDR X8, [X8, X9, LSL #3]
	0x0330034C CMP X8, X1
	0x03300350 B.EQ 0x330035C
	0x03300354 BL 0x1C171E0
	0x03300358 STR X31, [X19 + 0x60]
	0x0330035C LDP X20, X19, [X31 + 0x20]
	0x03300360 LDP X22, X21, [X31 + 0x10]
	0x03300364 LDP X30, X23, [X31], #0x30
	0x03300368 RET
	0x0330036C STP X30, X19, [X31 - 0x10]!
	0x03300370 MOV X1, X31
	0x03300374 BL 0x32E6BD8
	0x03300378 LDP X30, X19, [X31], #0x10
	0x0330037C RET
	0x03300380 CMP W1, 0x1
	0x03300384 MOV X19, X0
	0x03300388 B.NE 0x33003E8
	0x0330038C MOV X0, X19
	0x03300390 BL 0x3EB1AD0
	0x03300394 MOV X19, X0
	0x03300398 ADRP X0, 0xE21000
	0x0330039C LDR X0, [X0 + 0x7A8]
	0x033003A0 BL 0x1C16D08
	0x033003A4 LDR X8, [X19]
	0x033003A8 LDR X1, [X8]
	0x033003AC BL 0x1C17270
	0x033003B0 TBZ X0, 0x0, 0x33003C0
	0x033003B4 BL 0x3EB1AE0
	0x033003B8 MOVN W0, 0x0
	0x033003BC B 0x3300378
	0x033003C0 MOVZ W0, 0x8
	0x033003C4 BL 0x3EB1AF0
	0x033003C8 LDR X8, [X19]
	0x033003CC STR X8, [X0]
	0x033003D0 ADRP X1, 0xBB4000
	0x033003D4 ADD X1, X1, 0xE58
	0x033003D8 MOV X2, X31
	0x033003DC BL 0x3EB1B00
	0x033003E0 MOV X19, X0
	0x033003E4 BL 0x3EB1AE0
	0x033003E8 MOV X0, X19
	0x033003EC BL 0x1D2C690
	0x033003F0 BL 0x1990590
	0x033003F4 STR X30, [X31 - 0x20]!
	0x033003F8 STP X20, X19, [X31 + 0x10]
	0x033003FC ADRP X19, 0x10DC000
	0x03300400 ADRP X20, 0xDFB000
	0x03300404 LDRB W8, [X19 + 0xABA]
	0x03300408 LDR X20, [X20 + 0x958]
	0x0330040C TBNZ X8, 0x0, 0x3300424
	0x03300410 ADRP X0, 0xDFB000
	0x03300414 LDR X0, [X0 + 0x958]
	0x03300418 BL 0x1C16CF4
	0x0330041C MOVZ W8, 0x1
	0x03300420 STRB W8, [X19 + 0xABA]
	0x03300424 LDR X0, [X20]
	0x03300428 LDR W8, [X0 + 0xE0]
	0x0330042C CBNZ W8, 0x3300434
	0x03300430 BL 0x1C16DFC
	0x03300434 MOV X0, X31
	0x03300438 BL 0x33C364C
	0x0330043C AND W0, W0, 0xFFFF

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+40], X1
	003 Move [X31+48], X30
	004 Move [X31+64], X26
	005 Move [X31+72], X25
	006 Move [X31+80], X24
	007 Move [X31+88], X23
	008 Move [X31+96], X22
	009 Move [X31+104], X21
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 Move X26, 0x10DD000
	013 Move W8, [X26+2734]
	014 Move X19, X6
	015 Move X21, X5
	016 Move X20, X4
	017 Move X23, X3
	018 Move X24, X2
	019 Move X22, X1
	020 Move X25, X0
	021 Move [X31+24], X3
	022 Move [X31+32], X0
	023 Move [X31+8], X5
	024 Move [X31+16], X2
	025 Move [X31], X4
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {50}
	030 Move X0, 0xE1F000
	031 Move X0, [X0+3440]
	032 Call 0x1C17CF4
	033 Move X0, 0xE1B000
	034 Move X0, [X0+464]
	035 Call 0x1C17CF4
	036 Move X0, 0xE23000
	037 Move X0, [X0+408]
	038 Call 0x1C17CF4
	039 Move X0, 0xE23000
	040 Move X0, [X0+40]
	041 Call 0x1C17CF4
	042 Move X0, 0xE23000
	043 Move X0, [X0+424]
	044 Call 0x1C17CF4
	045 Move X0, 0xE23000
	046 Move X0, [X0+1416]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X26+2734], W8
	050 Move [X19], W31
	051 Compare W22, 0
	052 JumpIfEqual {71}
	053 Compare W23, 0
	054 JumpIfEqual {75}
	055 Move X26, 0xE1F000
	056 Move X26, [X26+3440]
	057 Move X0, [X26]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X25
	063 Move X1, X22
	064 Move X2, X31
	065 Call PathInternal.EndsInDirectorySeparator, X0
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {91}
	070 Add W8, W23, W22
	071 Compare W23, 0
	072 JumpIfEqual {166}
	073 Add X8, X31, 16
	074 Add X24, X8, 8
	075 Add X8, X31, 32
	076 Add X24, X8, 8
	077 Move W23, W22
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X8, 0xE23000
	080 Move X8, [X8+408]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Add X9, X31, 16
	083 Move X1, X20
	084 Move X3, [X8]
	085 Add X8, X31, 32
	086 NotImplemented "Instruction CSEL not yet implemented."
	087 Move X2, X21
	088 Call ReadOnlySpan`1<Char>.CopyTo, X0, X1
	089 Move W8, [X24]
	090 Move [X19], W8
	091 Move X0, [X26]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X0, X24
	097 Move X1, X23
	098 Move X2, X31
	099 Call PathInternal.StartsWithDirectorySeparator, X0
	100 Add W8, W23, W22
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {107}
	105 Move W9, W31
	106 Move W24, 1
	107 Move W24, W31
	108 Move W9, 1
	109 Add W22, W9, W8
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move W0, W31
	112 Move X23, 0xE23000
	113 Move X23, [X23+408]
	114 Add X0, X31, 32
	115 Move X1, X20
	116 Move X2, X21
	117 Move X3, [X23]
	118 Call ReadOnlySpan`1<Char>.CopyTo, X0, X1
	119 Add X25, X31, 0
	120 Add X8, X31, 0
	121 Move TEMP, X24
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfEqual {139}
	125 NotImplemented "Instruction LDRSW not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X21, 0xE1B000
	128 Move X21, [X21+464]
	129 Move X0, [X21]
	130 Move W8, [X0+224]
	131 Compare W8, 0
	132 JumpIfNotEqual {135}
	133 Call 0x1C17DFC
	134 Move X0, [X21]
	135 Move X9, [X0+184]
	136 Move X8, X31
	137 NotImplemented "Instruction LDRH not yet implemented."
	138 NotImplemented "Instruction STRH not yet implemented."
	139 NotImplemented "Instruction CMP not yet implemented."
	140 NotImplemented "Instruction CSEL not yet implemented."
	141 Move X8, 0xE23000
	142 Move W9, [X31+40]
	143 Move W21, [X25+8]
	144 Move X8, [X8+424]
	145 Xor W10, W24, 1
	146 Add W20, W9, W10
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X24, [X8]
	149 Move X0, X31
	150 Call ThrowHelper.ThrowArgumentOutOfRangeException
	151 Move W21, [X25+8]
	152 Move X0, [X24+32]
	153 Move X24, [X31]
	154 Move W8, [X0+309]
	155 Move TEMP, X8
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfEqual {160}
	159 Call 0x1C5D684
	160 Move X3, [X23]
	161 Subtract W2, W21, W20
	162 Add X1, X24, W20
	163 Add X0, X31, 16
	164 Call ReadOnlySpan`1<Char>.CopyTo, X0, X1
	165 Move [X19], W22
	166 Move W0, 1
	167 Move X20, [X31+112]
	168 Move X19, [X31+120]
	169 Move X22, [X31+96]
	170 Move X21, [X31+104]
	171 Move X24, [X31+80]
	172 Move X23, [X31+88]
	173 Move X26, [X31+64]
	174 Move X25, [X31+72]
	175 Move X30, [X31+48]
	176 Add X31, X31, 128
	177 Return X0
	178 Call 0x1C17F28

Method: System.String JoinInternal(System.ReadOnlySpan`1<System.Char> first, System.ReadOnlySpan`1<System.Char> second)

Disassembly:
	0x032FFAFC B.NE 0x32FFAA8
	0x032FFB00 MOV W19, W20
	0x032FFB04 B 0x32FFB1C
	0x032FFB08 MOV W19, W31
	0x032FFB0C B 0x32FFB1C
	0x032FFB10 ADD W19, W19, 0x1
	0x032FFB14 B 0x32FFB1C
	0x032FFB18 MOV W19, W25
	0x032FFB1C MOV W0, W19
	0x032FFB20 LDP X20, X19, [X31 + 0x30]
	0x032FFB24 LDP X22, X21, [X31 + 0x20]
	0x032FFB28 LDP X24, X23, [X31 + 0x10]
	0x032FFB2C LDP X30, X25, [X31], #0x40
	0x032FFB30 RET
	0x032FFB34 BL 0x1C16F28
	0x032FFB38 ADRP X0, 0xDF9000
	0x032FFB3C LDR X0, [X0 + 0x528]
	0x032FFB40 BL 0x1C16D08
	0x032FFB44 BL 0x1C16F10
	0x032FFB48 MOV X19, X0
	0x032FFB4C ADRP X0, 0xE28000
	0x032FFB50 LDR X0, [X0 + 0x7A0]
	0x032FFB54 BL 0x1C16D08
	0x032FFB58 MOV X1, X0
	0x032FFB5C MOV X0, X19
	0x032FFB60 MOV X2, X31
	0x032FFB64 BL 0x330E100
	0x032FFB68 B 0x32FFC04
	0x032FFB6C ADRP X0, 0xDFC000
	0x032FFB70 LDR X0, [X0 + 0x760]
	0x032FFB74 BL 0x1C16D08
	0x032FFB78 BL 0x1C16F10
	0x032FFB7C MOV X19, X0
	0x032FFB80 ADRP X0, 0xDFF000
	0x032FFB84 LDR X0, [X0 + 0x130]
	0x032FFB88 B 0x32FFBA8
	0x032FFB8C ADRP X0, 0xDFC000
	0x032FFB90 LDR X0, [X0 + 0x760]
	0x032FFB94 BL 0x1C16D08
	0x032FFB98 BL 0x1C16F10
	0x032FFB9C MOV X19, X0
	0x032FFBA0 ADRP X0, 0xE1C000
	0x032FFBA4 LDR X0, [X0 + 0x648]
	0x032FFBA8 BL 0x1C16D08
	0x032FFBAC MOV X20, X0
	0x032FFBB0 ADRP X0, 0xE22000
	0x032FFBB4 LDR X0, [X0 + 0xE48]
	0x032FFBB8 BL 0x1C16D08
	0x032FFBBC MOV X2, X0
	0x032FFBC0 MOV X0, X19
	0x032FFBC4 MOV X1, X20
	0x032FFBC8 MOV X3, X31
	0x032FFBCC BL 0x3311888
	0x032FFBD0 B 0x32FFC04
	0x032FFBD4 ADRP X0, 0xDFC000
	0x032FFBD8 LDR X0, [X0 + 0x578]
	0x032FFBDC BL 0x1C16D08
	0x032FFBE0 BL 0x1C16F10
	0x032FFBE4 MOV X19, X0
	0x032FFBE8 ADRP X0, 0xE28000
	0x032FFBEC LDR X0, [X0 + 0x7A8]
	0x032FFBF0 BL 0x1C16D08
	0x032FFBF4 MOV X1, X0
	0x032FFBF8 MOV X0, X19
	0x032FFBFC MOV X2, X31
	0x032FFC00 BL 0x3314A68
	0x032FFC04 ADRP X0, 0xE28000
	0x032FFC08 LDR X0, [X0 + 0x7B0]
	0x032FFC0C BL 0x1C16D08
	0x032FFC10 MOV X1, X0
	0x032FFC14 MOV X0, X19
	0x032FFC18 BL 0x1C16DEC
	0x032FFC1C MOV X20, X0
	0x032FFC20 ADD W19, W19, 0x1
	0x032FFC24 B 0x32FFC38
	0x032FFC28 MOV X20, X0
	0x032FFC2C MOV W19, W25
	0x032FFC30 B 0x32FFC38
	0x032FFC34 MOV X20, X0
	0x032FFC38 CMP W1, 0x1
	0x032FFC3C B.NE 0x32FFC98
	0x032FFC40 MOV X0, X20
	0x032FFC44 BL 0x3EB1AD0
	0x032FFC48 MOV X20, X0
	0x032FFC4C ADRP X0, 0xE22000
	0x032FFC50 LDR X0, [X0 + 0x7A8]
	0x032FFC54 BL 0x1C16D08
	0x032FFC58 LDR X8, [X20]
	0x032FFC5C LDR X1, [X8]
	0x032FFC60 BL 0x1C17270
	0x032FFC64 TBZ X0, 0x0, 0x32FFC70
	0x032FFC68 BL 0x3EB1AE0
	0x032FFC6C B 0x32FFB1C
	0x032FFC70 MOVZ W0, 0x8
	0x032FFC74 BL 0x3EB1AF0
	0x032FFC78 LDR X8, [X20]
	0x032FFC7C STR X8, [X0]
	0x032FFC80 ADRP X1, 0xBB5000
	0x032FFC84 ADD X1, X1, 0xE58
	0x032FFC88 MOV X2, X31
	0x032FFC8C BL 0x3EB1B00
	0x032FFC90 MOV X20, X0
	0x032FFC94 BL 0x3EB1AE0
	0x032FFC98 MOV X0, X20
	0x032FFC9C BL 0x1D2C690
	0x032FFCA0 BL 0x1990590
	0x032FFCA4 STP X30, X23, [X31 - 0x30]!
	0x032FFCA8 STP X22, X21, [X31 + 0x10]
	0x032FFCAC STP X20, X19, [X31 + 0x20]
	0x032FFCB0 ADRP X20, 0x10DD000
	0x032FFCB4 ADRP X21, 0xE28000
	0x032FFCB8 LDRB W8, [X20 + 0xAB7]
	0x032FFCBC LDR X21, [X21 + 0x798]
	0x032FFCC0 MOV W19, W1
	0x032FFCC4 TBNZ X8, 0x0, 0x32FFCDC
	0x032FFCC8 ADRP X0, 0xE28000
	0x032FFCCC LDR X0, [X0 + 0x798]
	0x032FFCD0 BL 0x1C16CF4
	0x032FFCD4 MOVZ W8, 0x1
	0x032FFCD8 STRB W8, [X20 + 0xAB7]
	0x032FFCDC LDR X0, [X21]
	0x032FFCE0 MOVZ W22, 0x1
	0x032FFCE4 LDR W8, [X0 + 0xE0]
	0x032FFCE8 CBNZ W8, 0x32FFCF4
	0x032FFCEC BL 0x1C16DFC
	0x032FFCF0 LDR X0, [X21]
	0x032FFCF4 LDR X8, [X0 + 0xB8]
	0x032FFCF8 LDR X8, [X8]
	0x032FFCFC CBZ X8, 0x32FFE34
	0x032FFD00 LDR W8, [X8 + 0x18]
	0x032FFD04 SUB W20, W22, 0x1
	0x032FFD08 CMP W20, W8
	0x032FFD0C B.GE 0x32FFDBC
	0x032FFD10 LDR W8, [X0 + 0xE0]
	0x032FFD14 CBNZ W8, 0x32FFD20
	0x032FFD18 BL 0x1C16DFC
	0x032FFD1C LDR X0, [X21]
	0x032FFD20 LDR X8, [X0 + 0xB8]
	0x032FFD24 LDR X8, [X8]
	0x032FFD28 CBZ X8, 0x32FFE34
	0x032FFD2C LDR W9, [X8 + 0x18]
	0x032FFD30 CMP W20, W9
	0x032FFD34 B.CS 0x32FFE38
	0x032FFD38 SXTW X23, W20
	0x032FFD3C ADD X8, X8, X23
	0x032FFD40 LDRB W8, [X8 + 0x20]
	0x032FFD44 CBZ W8, 0x32FFD50
	0x032FFD48 ADD W22, W22, 0x1
	0x032FFD4C B 0x32FFCE4
	0x032FFD50 MOV X0, X31
	0x032FFD54 BL 0x33C1548
	0x032FFD58 CBZ X0, 0x32FFE34
	0x032FFD5C MOV W1, W20
	0x032FFD60 MOV X2, X31
	0x032FFD64 BL 0x3222A1C
	0x032FFD68 MOV W8, W0

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+112], X26
	004 Move [X31+120], X25
	005 Move [X31+128], X24
	006 Move [X31+136], X23
	007 Move [X31+144], X22
	008 Move [X31+152], X21
	009 Move [X31+160], X20
	010 Move [X31+168], X19
	011 Move X21, 0x10DE000
	012 Move W8, [X21+2735]
	013 Move X19, X3
	014 Move X22, X2
	015 Move X20, X1
	016 Move X23, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {47}
	021 Move X0, 0xE24000
	022 Move X0, [X0+32]
	023 Call 0x1C17CF4
	024 Move X0, 0xE20000
	025 Move X0, [X0+3440]
	026 Call 0x1C17CF4
	027 Move X0, 0xE24000
	028 Move X0, [X0+40]
	029 Call 0x1C17CF4
	030 Move X0, 0xE29000
	031 Move X0, [X0+1864]
	032 Call 0x1C17CF4
	033 Move X0, 0xE29000
	034 Move X0, [X0+1872]
	035 Call 0x1C17CF4
	036 Move X0, 0xE29000
	037 Move X0, [X0+1880]
	038 Call 0x1C17CF4
	039 Move X0, 0xE29000
	040 Move X0, [X0+1888]
	041 Call 0x1C17CF4
	042 Move X0, 0xE29000
	043 Move X0, [X0+1896]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X21+2735], W8
	047 NotImplemented "Instruction MOVI not yet implemented."
	048 Move [X31+32], V0
	049 Move [X31+40], V0
	050 Move [X31], V0
	051 Move [X31+8], V0
	052 Compare W20, 0
	053 JumpIfEqual {185}
	054 Move X24, 0xE20000
	055 Move X24, [X24+3440]
	056 Move X8, INVALID
	057 Add X8, X8, X20
	058 NotImplemented "Instruction SBFM not yet implemented."
	059 Move X0, [X24]
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Move W9, [X0+224]
	062 Compare W9, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move W0, W21
	066 Move X1, X31
	067 Call PathInternal.IsDirectorySeparator, X0
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {73}
	072 Move W21, 1
	073 Compare W19, 0
	074 JumpIfEqual {185}
	075 Move X0, [X24]
	076 NotImplemented "Instruction LDRH not yet implemented."
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move W0, W21
	082 Move X1, X31
	083 Call PathInternal.IsDirectorySeparator, X0
	084 Move W21, W0
	085 Move X25, 0xE24000
	086 Move X25, [X25+32]
	087 Move X26, 0xE29000
	088 Move X24, 0xE29000
	089 Move X0, X23
	090 Move X2, [X25]
	091 Move X26, [X26+1896]
	092 Move X24, [X24+1888]
	093 Move X1, X20
	094 Call MemoryMarshal.GetReference, X0
	095 Move X2, [X25]
	096 Move X23, X0
	097 Move X0, X22
	098 Move X1, X19
	099 Call MemoryMarshal.GetReference, X0
	100 Move X22, X0
	101 Move X0, X23
	102 Move X1, X31
	103 Call IntPtr.op_Explicit, X0
	104 Move X23, X0
	105 Move X0, X22
	106 Move X1, X31
	107 Call IntPtr.op_Explicit, X0
	108 Move X6, [X26]
	109 Move X3, X0
	110 NotImplemented "Instruction MOVI not yet implemented."
	111 And W5, W21, 1
	112 Add X0, X31, 64
	113 Move X1, X23
	114 Move W2, W20
	115 Move W4, W19
	116 Move [X31+64], V0
	117 Move [X31+72], V0
	118 Call 0x27D04B8, X0, X1, X2, X3, X4, X5
	119 Move X0, [X24]
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {125}
	123 Call 0x1C17DFC
	124 Move X0, [X24]
	125 Move X8, [X0+184]
	126 Move X25, 0xE29000
	127 Move X22, [X8+8]
	128 Move X25, [X25+1872]
	129 Compare X22, 0
	130 JumpIfEqual {133}
	131 Move V0, [X31+64]
	132 Move V1, [X31+80]
	133 Move V0, [X31+64]
	134 Move V1, [X31+80]
	135 Move [X31], V0
	136 Move [X31+8], V1
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfNotEqual {142}
	140 Call 0x1C17DFC
	141 Move X0, [X24]
	142 Move X9, 0xE29000
	143 Move X8, [X0+184]
	144 Move X9, [X9+1864]
	145 Move X23, [X8]
	146 Move X0, [X9]
	147 Call 0x1C17F10
	148 Move X8, 0xE29000
	149 Move X8, [X8+1880]
	150 Move X1, X23
	151 Move X3, X31
	152 Move X22, X0
	153 Move X2, [X8]
	154 Call SpanAction`2<Char, ValueTuple`5<IntPtr, Int32, IntPtr, Int32, Boolean>>..ctor, X0, X1, X2
	155 Move X8, [X24]
	156 Move X8, [X8+184]
	157 Move [X8+8], X22
	158 Move V0, [X31]
	159 Move V1, [X31+16]
	160 Move [X31+32], V0
	161 Move [X31+40], V1
	162 Move X3, [X25]
	163 Move V0, [X31+32]
	164 Move V1, [X31+48]
	165 NotImplemented "Instruction ORN not yet implemented."
	166 Add W9, W19, W20
	167 And W8, W8, 1
	168 Add W0, W9, W8
	169 Add X1, X31, 64
	170 Move X2, X22
	171 Move [X31+64], V0
	172 Move [X31+72], V1
	173 Call String.Create, X0, X1, X2
	174 Move X20, [X31+160]
	175 Move X19, [X31+168]
	176 Move X22, [X31+144]
	177 Move X21, [X31+152]
	178 Move X24, [X31+128]
	179 Move X23, [X31+136]
	180 Move X26, [X31+112]
	181 Move X25, [X31+120]
	182 Move X30, [X31+96]
	183 Add X31, X31, 176
	184 Return X0
	185 Call 0x1C17F28

Method: System.String JoinInternal(System.ReadOnlySpan`1<System.Char> first, System.ReadOnlySpan`1<System.Char> second, System.ReadOnlySpan`1<System.Char> third)

Disassembly:
	0x032FFE7C BL 0x1C17270
	0x032FFE80 TBZ X0, 0x0, 0x32FFE90
	0x032FFE84 BL 0x3EB1AE0
	0x032FFE88 MOV X0, X31
	0x032FFE8C B 0x32FFE48
	0x032FFE90 MOVZ W0, 0x8
	0x032FFE94 BL 0x3EB1AF0
	0x032FFE98 LDR X8, [X19]
	0x032FFE9C STR X8, [X0]
	0x032FFEA0 ADRP X1, 0xBB5000
	0x032FFEA4 ADD X1, X1, 0xE58
	0x032FFEA8 MOV X2, X31
	0x032FFEAC BL 0x3EB1B00
	0x032FFEB0 MOV X19, X0
	0x032FFEB4 BL 0x3EB1AE0
	0x032FFEB8 MOV X0, X19
	0x032FFEBC BL 0x1D2C690
	0x032FFEC0 BL 0x1990590
	0x032FFEC4 STP X30, X19, [X31 - 0x10]!
	0x032FFEC8 MOV X1, X31
	0x032FFECC BL 0x32E7414
	0x032FFED0 LDP X30, X19, [X31], #0x10
	0x032FFED4 RET
	0x032FFED8 CMP W1, 0x1
	0x032FFEDC MOV X19, X0
	0x032FFEE0 B.NE 0x32FFF40
	0x032FFEE4 MOV X0, X19
	0x032FFEE8 BL 0x3EB1AD0
	0x032FFEEC MOV X19, X0
	0x032FFEF0 ADRP X0, 0xE22000
	0x032FFEF4 LDR X0, [X0 + 0x7A8]
	0x032FFEF8 BL 0x1C16D08
	0x032FFEFC LDR X8, [X19]
	0x032FFF00 LDR X1, [X8]
	0x032FFF04 BL 0x1C17270
	0x032FFF08 TBZ X0, 0x0, 0x32FFF18
	0x032FFF0C BL 0x3EB1AE0
	0x032FFF10 MOV X0, X31
	0x032FFF14 B 0x32FFED0
	0x032FFF18 MOVZ W0, 0x8
	0x032FFF1C BL 0x3EB1AF0
	0x032FFF20 LDR X8, [X19]
	0x032FFF24 STR X8, [X0]
	0x032FFF28 ADRP X1, 0xBB5000
	0x032FFF2C ADD X1, X1, 0xE58
	0x032FFF30 MOV X2, X31
	0x032FFF34 BL 0x3EB1B00
	0x032FFF38 MOV X19, X0
	0x032FFF3C BL 0x3EB1AE0
	0x032FFF40 MOV X0, X19
	0x032FFF44 BL 0x1D2C690
	0x032FFF48 BL 0x1990590
	0x032FFF4C STP X30, X23, [X31 - 0x30]!
	0x032FFF50 STP X22, X21, [X31 + 0x10]
	0x032FFF54 STP X20, X19, [X31 + 0x20]
	0x032FFF58 ADRP X22, 0x10DD000
	0x032FFF5C ADRP X23, 0xE22000
	0x032FFF60 LDRB W8, [X22 + 0xAB8]
	0x032FFF64 LDR X23, [X23 + 0xD08]
	0x032FFF68 MOV X19, X2
	0x032FFF6C MOV X20, X1
	0x032FFF70 MOV X21, X0
	0x032FFF74 TBNZ X8, 0x0, 0x32FFF8C
	0x032FFF78 ADRP X0, 0xE22000
	0x032FFF7C LDR X0, [X0 + 0xD08]
	0x032FFF80 BL 0x1C16CF4
	0x032FFF84 MOVZ W8, 0x1
	0x032FFF88 STRB W8, [X22 + 0xAB8]
	0x032FFF8C LDR X0, [X23]
	0x032FFF90 LDR W8, [X0 + 0xE0]
	0x032FFF94 CBNZ W8, 0x32FFF9C
	0x032FFF98 BL 0x1C16DFC
	0x032FFF9C MOV X0, X21
	0x032FFFA0 MOV X1, X20
	0x032FFFA4 MOV X2, X19
	0x032FFFA8 LDP X20, X19, [X31 + 0x20]
	0x032FFFAC LDP X22, X21, [X31 + 0x10]
	0x032FFFB0 MOVZ W3, 0x400
	0x032FFFB4 MOVZ W4, 0x1
	0x032FFFB8 MOV X5, X31
	0x032FFFBC LDP X30, X23, [X31], #0x30
	0x032FFFC0 B 0x32E81A0
	0x032FFFC4 STP X30, X19, [X31 - 0x10]!
	0x032FFFC8 MOV X1, X31
	0x032FFFCC BL 0x32E8B0C
	0x032FFFD0 LDP X30, X19, [X31], #0x10
	0x032FFFD4 RET
	0x032FFFD8 CMP W1, 0x1
	0x032FFFDC MOV X19, X0
	0x032FFFE0 B.NE 0x330003C
	0x032FFFE4 MOV X0, X19
	0x032FFFE8 BL 0x3EB1AD0
	0x032FFFEC MOV X19, X0
	0x032FFFF0 ADRP X0, 0xDF4000
	0x032FFFF4 LDR X0, [X0 + 0x7D0]
	0x032FFFF8 BL 0x1C16D08
	0x032FFFFC LDR X8, [X19]
	0x03300000 LDR X1, [X8]
	0x03300004 BL 0x1C17270
	0x03300008 TBZ X0, 0x0, 0x3300014
	0x0330000C LDP X30, X19, [X31], #0x10
	0x03300010 B 0x3EB1AE0
	0x03300014 MOVZ W0, 0x8
	0x03300018 BL 0x3EB1AF0
	0x0330001C LDR X8, [X19]
	0x03300020 STR X8, [X0]
	0x03300024 ADRP X1, 0xBB4000
	0x03300028 ADD X1, X1, 0xE58
	0x0330002C MOV X2, X31
	0x03300030 BL 0x3EB1B00
	0x03300034 MOV X19, X0
	0x03300038 BL 0x3EB1AE0
	0x0330003C MOV X0, X19
	0x03300040 BL 0x1D2C690
	0x03300044 BL 0x1990590
	0x03300048 STP X30, X19, [X31 - 0x10]!
	0x0330004C MOV X4, X31
	0x03300050 BL 0x32E8C80
	0x03300054 LDP X30, X19, [X31], #0x10
	0x03300058 RET
	0x0330005C CMP W1, 0x1
	0x03300060 MOV X19, X0
	0x03300064 B.NE 0x33000C0
	0x03300068 MOV X0, X19
	0x0330006C BL 0x3EB1AD0
	0x03300070 MOV X19, X0
	0x03300074 ADRP X0, 0xDF3000
	0x03300078 LDR X0, [X0 + 0x7D0]
	0x0330007C BL 0x1C16D08
	0x03300080 LDR X8, [X19]
	0x03300084 LDR X1, [X8]
	0x03300088 BL 0x1C17270
	0x0330008C TBZ X0, 0x0, 0x3300098
	0x03300090 LDP X30, X19, [X31], #0x10
	0x03300094 B 0x3EB1AE0
	0x03300098 MOVZ W0, 0x8
	0x0330009C BL 0x3EB1AF0
	0x033000A0 LDR X8, [X19]
	0x033000A4 STR X8, [X0]
	0x033000A8 ADRP X1, 0xBB4000
	0x033000AC ADD X1, X1, 0xE58
	0x033000B0 MOV X2, X31
	0x033000B4 BL 0x3EB1B00
	0x033000B8 MOV X19, X0
	0x033000BC BL 0x3EB1AE0
	0x033000C0 MOV X0, X19
	0x033000C4 BL 0x1D2C690
	0x033000C8 BL 0x1990590
	0x033000CC STP X30, X19, [X31 - 0x10]!
	0x033000D0 MOV X2, X31
	0x033000D4 BL 0x32E8B80
	0x033000D8 LDP X30, X19, [X31], #0x10
	0x033000DC RET
	0x033000E0 CMP W1, 0x1
	0x033000E4 MOV X19, X0
	0x033000E8 B.NE 0x3300144
	0x033000EC MOV X0, X19
	0x033000F0 BL 0x3EB1AD0
	0x033000F4 MOV X19, X0
	0x033000F8 ADRP X0, 0xDF3000
	0x033000FC LDR X0, [X0 + 0x7D0]
	0x03300100 BL 0x1C16D08
	0x03300104 LDR X8, [X19]
	0x03300108 LDR X1, [X8]
	0x0330010C BL 0x1C17270
	0x03300110 TBZ X0, 0x0, 0x330011C
	0x03300114 LDP X30, X19, [X31], #0x10
	0x03300118 B 0x3EB1AE0
	0x0330011C MOVZ W0, 0x8
	0x03300120 BL 0x3EB1AF0
	0x03300124 LDR X8, [X19]
	0x03300128 STR X8, [X0]
	0x0330012C ADRP X1, 0xBB4000
	0x03300130 ADD X1, X1, 0xE58
	0x03300134 MOV X2, X31
	0x03300138 BL 0x3EB1B00
	0x0330013C MOV X19, X0
	0x03300140 BL 0x3EB1AE0
	0x03300144 MOV X0, X19
	0x03300148 BL 0x1D2C690
	0x0330014C BL 0x1990590
	0x03300150 STP X30, X19, [X31 - 0x10]!
	0x03300154 MOV X2, X31
	0x03300158 BL 0x32E8C0C
	0x0330015C LDP X30, X19, [X31], #0x10
	0x03300160 RET
	0x03300164 CMP W1, 0x1
	0x03300168 MOV X19, X0
	0x0330016C B.NE 0x33001C8
	0x03300170 MOV X0, X19
	0x03300174 BL 0x3EB1AD0
	0x03300178 MOV X19, X0
	0x0330017C ADRP X0, 0xDF3000
	0x03300180 LDR X0, [X0 + 0x7D0]
	0x03300184 BL 0x1C16D08
	0x03300188 LDR X8, [X19]
	0x0330018C LDR X1, [X8]
	0x03300190 BL 0x1C17270
	0x03300194 TBZ X0, 0x0, 0x33001A0
	0x03300198 LDP X30, X19, [X31], #0x10
	0x0330019C B 0x3EB1AE0
	0x033001A0 MOVZ W0, 0x8
	0x033001A4 BL 0x3EB1AF0
	0x033001A8 LDR X8, [X19]
	0x033001AC STR X8, [X0]
	0x033001B0 ADRP X1, 0xBB4000
	0x033001B4 ADD X1, X1, 0xE58
	0x033001B8 MOV X2, X31
	0x033001BC BL 0x3EB1B00
	0x033001C0 MOV X19, X0
	0x033001C4 BL 0x3EB1AE0
	0x033001C8 MOV X0, X19
	0x033001CC BL 0x1D2C690
	0x033001D0 BL 0x1990590

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+176], X29
	003 Move [X31+184], X30
	004 Move [X31+192], X28
	005 Move [X31+200], X27
	006 Move [X31+208], X26
	007 Move [X31+216], X25
	008 Move [X31+224], X24
	009 Move [X31+232], X23
	010 Move [X31+240], X22
	011 Move [X31+248], X21
	012 Move [X31+256], X20
	013 Move [X31+264], X19
	014 Move X22, 0x10DE000
	015 Move W8, [X22+2736]
	016 Move X19, X5
	017 Move X23, X4
	018 Move X20, X3
	019 Move X24, X2
	020 Move X21, X1
	021 Move X25, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {55}
	026 Move X0, 0xE24000
	027 Move X0, [X0+32]
	028 Call 0x1C17CF4
	029 Move X0, 0xE20000
	030 Move X0, [X0+3440]
	031 Call 0x1C17CF4
	032 Move X0, 0xE24000
	033 Move X0, [X0+40]
	034 Call 0x1C17CF4
	035 Move X0, 0xE29000
	036 Move X0, [X0+1904]
	037 Call 0x1C17CF4
	038 Move X0, 0xE29000
	039 Move X0, [X0+1912]
	040 Call 0x1C17CF4
	041 Move X0, 0xE29000
	042 Move X0, [X0+1920]
	043 Call 0x1C17CF4
	044 Move X0, 0xE29000
	045 Move X0, [X0+1888]
	046 Call 0x1C17CF4
	047 Move X0, 0xE29000
	048 Move X0, [X0+1928]
	049 Call 0x1C17CF4
	050 Move X0, 0xE29000
	051 Move X0, [X0+1936]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X22+2736], W8
	055 NotImplemented "Instruction MOVI not yet implemented."
	056 Move [X31+96], V0
	057 Move [X31+104], V0
	058 Move [X31+64], V0
	059 Move [X31+72], V0
	060 Move [X31+32], V0
	061 Move [X31+40], V0
	062 Compare W21, 0
	063 JumpIfEqual {255}
	064 Move X27, 0xE20000
	065 Move X27, [X27+3440]
	066 Move X8, INVALID
	067 Add X8, X8, X21
	068 NotImplemented "Instruction SBFM not yet implemented."
	069 Move X0, [X27]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Move W9, [X0+224]
	072 Compare W9, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move W0, W22
	076 Move X1, X31
	077 Call PathInternal.IsDirectorySeparator, X0
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {85}
	082 Compare W20, 0
	083 JumpIfEqual {255}
	084 Move W22, 1
	085 Compare W20, 0
	086 JumpIfEqual {255}
	087 Move X0, [X27]
	088 NotImplemented "Instruction LDRH not yet implemented."
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Move W0, W22
	094 Move X1, X31
	095 Call PathInternal.IsDirectorySeparator, X0
	096 Move W22, W0
	097 Move X0, [X27]
	098 Move X8, INVALID
	099 Add X8, X8, X20
	100 NotImplemented "Instruction SBFM not yet implemented."
	101 Move W9, [X0+224]
	102 NotImplemented "Instruction LDRH not yet implemented."
	103 Compare W9, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move W0, W26
	107 Move X1, X31
	108 Call PathInternal.IsDirectorySeparator, X0
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {114}
	113 Move W26, 1
	114 Compare W19, 0
	115 JumpIfEqual {255}
	116 Move X0, [X27]
	117 NotImplemented "Instruction LDRH not yet implemented."
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move W0, W26
	123 Move X1, X31
	124 Call PathInternal.IsDirectorySeparator, X0
	125 Move W26, W0
	126 Move X28, 0xE23000
	127 Move X28, [X28+32]
	128 Move X29, 0xE28000
	129 Move X27, 0xE28000
	130 Move X0, X25
	131 Move X2, [X28]
	132 Move X29, [X29+1936]
	133 Move X27, [X27+1888]
	134 Move X1, X21
	135 Call MemoryMarshal.GetReference, X0
	136 Move X2, [X28]
	137 Move X25, X0
	138 Move X0, X24
	139 Move X1, X20
	140 Call MemoryMarshal.GetReference, X0
	141 Move X2, [X28]
	142 Move X24, X0
	143 Move X0, X23
	144 Move X1, X19
	145 Call MemoryMarshal.GetReference, X0
	146 Move X23, X0
	147 Move X0, X25
	148 Move X1, X31
	149 Call IntPtr.op_Explicit, X0
	150 Move X25, X0
	151 Move X0, X24
	152 Move X1, X31
	153 Call IntPtr.op_Explicit, X0
	154 Move X24, X0
	155 Move X0, X23
	156 Move X1, X31
	157 Call IntPtr.op_Explicit, X0
	158 Move X8, [X29]
	159 Move X5, X0
	160 NotImplemented "Instruction MOVI not yet implemented."
	161 And X9, X26, 1
	162 And W7, W22, 1
	163 Add X0, X31, 128
	164 Move X1, X25
	165 Move W2, W21
	166 Move X3, X24
	167 Move W4, W20
	168 Move W6, W19
	169 Move [X31+144], V0
	170 Move [X31+152], V0
	171 Move [X31+8], V0
	172 Move [X31], X9
	173 Move [X31+8], X8
	174 Call 0x27DA378, X0, X1, X2, X3, X4, X5, X6, X7, X8
	175 Move X0, [X27]
	176 Move W8, [X0+224]
	177 Compare W8, 0
	178 JumpIfNotEqual {181}
	179 Call 0x1C17DFC
	180 Move X0, [X27]
	181 Move X8, [X0+184]
	182 Move X25, 0xE28000
	183 Move X23, [X8+16]
	184 Move X25, [X25+1912]
	185 Compare X23, 0
	186 JumpIfEqual {190}
	187 Move V0, [X31+128]
	188 Move V1, [X31+144]
	189 Move V2, [X31+10]
	190 Move V0, [X31+128]
	191 Move V1, [X31+144]
	192 Move V2, [X31+10]
	193 Move [X31+32], V0
	194 Move [X31+40], V1
	195 Move [X31+4], V2
	196 Move W8, [X0+224]
	197 Compare W8, 0
	198 JumpIfNotEqual {201}
	199 Call 0x1C17DFC
	200 Move X0, [X27]
	201 Move X9, 0xE28000
	202 Move X8, [X0+184]
	203 Move X9, [X9+1904]
	204 Move X24, [X8]
	205 Move X0, [X9]
	206 Call 0x1C17F10
	207 Move X8, 0xE28000
	208 Move X8, [X8+1920]
	209 Move X1, X24
	210 Move X3, X31
	211 Move X23, X0
	212 Move X2, [X8]
	213 Call SpanAction`2<Char, ValueTuple`8<IntPtr, Int32, IntPtr, Int32, IntPtr, Int32, Boolean, ValueTuple`1<Boolean>>>..ctor, X0, X1, X2
	214 Move X8, [X27]
	215 Move X8, [X8+184]
	216 Move [X8+16], X23
	217 Move V0, [X31+32]
	218 Move V1, [X31+48]
	219 Move V2, [X31+4]
	220 Move [X31+80], V0
	221 Move [X31+88], V1
	222 Move [X31+7], V2
	223 Add W9, W20, W21
	224 NotImplemented "Instruction ORN not yet implemented."
	225 Move X3, [X25]
	226 Move V0, [X31+80]
	227 Move V1, [X31+96]
	228 Move V2, [X31+7]
	229 NotImplemented "Instruction ORN not yet implemented."
	230 Add W9, W9, W19
	231 And W10, W10, 1
	232 And W8, W8, 1
	233 Add W9, W9, W10
	234 Add W0, W9, W8
	235 Add X1, X31, 128
	236 Move X2, X23
	237 Move [X31+128], V0
	238 Move [X31+136], V1
	239 Move [X31+10], V2
	240 Call String.Create, X0, X1, X2
	241 Move X20, [X31+256]
	242 Move X19, [X31+264]
	243 Move X22, [X31+240]
	244 Move X21, [X31+248]
	245 Move X24, [X31+224]
	246 Move X23, [X31+232]
	247 Move X26, [X31+208]
	248 Move X25, [X31+216]
	249 Move X28, [X31+192]
	250 Move X27, [X31+200]
	251 Move X29, [X31+176]
	252 Move X30, [X31+184]
	253 Add X31, X31, 272
	254 Return X0
	255 Call 0x1C17F28

