Type: System.IO.Enumeration.FileSystemName

Method: System.String TranslateWin32Expression(System.String expression)

Disassembly:
	0x03302ADC LDR X0, [X8 + 0x20]
	0x03302AE0 LDRB W8, [X0 + 0x135]
	0x03302AE4 TBNZ X8, 0x0, 0x3302AEC
	0x03302AE8 BL 0x1C5C684
	0x03302AEC ADRP X20, 0xE25000
	0x03302AF0 LDR X20, [X20 + 0x7F0]
	0x03302AF4 ADD X26, X21, 0x2
	0x03302AF8 LDR X0, [X20]
	0x03302AFC LDR W8, [X0 + 0xE0]
	0x03302B00 CBNZ W8, 0x3302B0C
	0x03302B04 BL 0x1C16DFC
	0x03302B08 LDR X0, [X20]
	0x03302B0C LDUR W9, [X29 - 0x34]
	0x03302B10 LDR X8, [X0 + 0xB8]
	0x03302B14 ANDS W31, W9, 0x1
	0x03302B18 ADRP X9, 0xE20000
	0x03302B1C LDR X9, [X9 + 0x1D8]
	0x03302B20 ADD X10, X8, 0x8
	0x03302B24 CSEL X8, X8, X10, NE
	0x03302B28 LDR X0, [X8]
	0x03302B2C LDR X1, [X9]
	0x03302B30 BL 0x25BF134
	0x03302B34 ADRP X8, 0xE25000
	0x03302B38 LDR X8, [X8 + 0x8C8]
	0x03302B3C MOV X2, X0
	0x03302B40 MOV X3, X1
	0x03302B44 MOV X0, X26
	0x03302B48 LDR X4, [X8]
	0x03302B4C MOV X1, X25
	0x03302B50 BL 0x3307BFC
	0x03302B54 ADDS W31, W0, 0x1
	0x03302B58 B.EQ 0x33030C0
	0x03302B5C ADD X8, X31, 0x0
	0x03302B60 SUB X9, X8, 0x40
	0x03302B64 STUR X22, [X29 - 0xA0]
	0x03302B68 ADD X31, X9, 0x0
	0x03302B6C ADRP X10, 0xFFFFFFFFFD7EC000
	0x03302B70 LDR V1, [X10 + 0x1D0]
	0x03302B74 MOVI V0.2D, 0x0
	0x03302B78 STP V0, V0, [X8 - 0x20]
	0x03302B7C STP V0, V0, [X8 - 0x40]
	0x03302B80 ADD X8, X31, 0x0
	0x03302B84 STUR X9, [X29 - 0x18]
	0x03302B88 SUB X9, X8, 0x40
	0x03302B8C STUR D1, [X29 - 0x10]
	0x03302B90 ADD X31, X9, 0x0
	0x03302B94 STP V0, V0, [X8 - 0x20]
	0x03302B98 STP V0, V0, [X8 - 0x40]
	0x03302B9C STUR W31, [X8 - 0x40]
	0x03302BA0 UBFM W8, W27, 0x1F, 0x1E
	0x03302BA4 STUR W8, [X29 - 0x5C]
	0x03302BA8 MOV W8, W31
	0x03302BAC SXTW X24, W27
	0x03302BB0 MOVZ W22, 0x1
	0x03302BB4 MOV W10, W31
	0x03302BB8 STUR W31, [X29 - 0x94]
	0x03302BBC STUR X9, [X29 - 0x30]
	0x03302BC0 STUR D1, [X29 - 0x28]
	0x03302BC4 STP X27, X24, [X29 - 0x48]
	0x03302BC8 STP X19, X21, [X29 - 0x58]
	0x03302BCC CMP W8, W19
	0x03302BD0 B.GE 0x3302BE8
	0x03302BD4 B.CS 0x33030F4
	0x03302BD8 LDRH W10, [X28, W8, SXTW]
	0x03302BDC ADD W0, W8, 0x1
	0x03302BE0 MOV W12, W8
	0x03302BE4 B 0x3302C18
	0x03302BE8 LDUR W9, [X29 - 0x28]
	0x03302BEC MOV W12, W8
	0x03302BF0 SUB W8, W22, 0x1
	0x03302BF4 CMP W8, W9
	0x03302BF8 B.CS 0x33030F4
	0x03302BFC LDUR X10, [X29 - 0x30]
	0x03302C00 LDUR W11, [X29 - 0x5C]
	0x03302C04 MOV W0, W12
	0x03302C08 LDR W10, [X10, W8, SXTW]
	0x03302C0C CMP W10, W11
	0x03302C10 LDUR W10, [X29 - 0x94]
	0x03302C14 B.EQ 0x3303060
	0x03302C18 CMP W12, W19
	0x03302C1C AND W9, W10, 0xFFFF
	0x03302C20 STUR W10, [X29 - 0x94]
	0x03302C24 CSET W10, LT
	0x03302C28 CSET W11, GE
	0x03302C2C CMP W9, 0x2E
	0x03302C30 CSET W9, EQ
	0x03302C34 STUR W12, [X29 - 0x74]
	0x03302C38 CSET W12, NE
	0x03302C3C CMP W0, W19
	0x03302C40 ORR W13, W9, W11, 0x0
	0x03302C44 AND W9, W10, W9, 0x0
	0x03302C48 MOV W14, W31
	0x03302C4C CSET W10, GE
	0x03302C50 EOR W9, W9, 0x1
	0x03302C54 MOV W8, W31
	0x03302C58 ORR W11, W12, W11, 0x0
	0x03302C5C CSEL W25, W0, W19, HI
	0x03302C60 SXTW X1, W22
	0x03302C64 ORR W9, W10, W9, 0x0
	0x03302C68 MOV W22, W14
	0x03302C6C STUR W13, [X29 - 0x78]
	0x03302C70 STP W11, W9, [X29 - 0x64]
	0x03302C74 STP X14, X1, [X29 - 0x90]
	0x03302C78 STUR W0, [X29 - 0x68]
	0x03302C7C SXTW X15, W8
	0x03302C80 CMP X15, X1
	0x03302C84 CSEL X8, X15, X1, GT
	0x03302C88 STUR X8, [X29 - 0x80]
	0x03302C8C LDUR X8, [X29 - 0x80]
	0x03302C90 CMP X15, X8
	0x03302C94 B.EQ 0x3303034
	0x03302C98 LDUR W8, [X29 - 0x28]
	0x03302C9C CMP W8, W15
	0x03302CA0 B.LS 0x33030F4
	0x03302CA4 LDUR X8, [X29 - 0x30]
	0x03302CA8 STUR X15, [X29 - 0x70]
	0x03302CAC LDR W8, [X8, X15, LSL #2]
	0x03302CB0 ADD W9, W8, 0x1
	0x03302CB4 ADD W10, W8, 0x2
	0x03302CB8 CMP W9, 0x0
	0x03302CBC CSINC W8, W10, W8, LT
	0x03302CC0 SBFM W8, W8, 0x1, 0x1F
	0x03302CC4 CMP W8, W27
	0x03302CC8 B.GE 0x3302E98
	0x03302CCC SXTW X23, W8
	0x03302CD0 CMP W23, W27
	0x03302CD4 B.CS 0x33030F4
	0x03302CD8 LDUR W8, [X29 - 0x10]
	0x03302CDC LDRH W26, [X21, X23, LSL #1]
	0x03302CE0 SUB W9, W8, 0x2
	0x03302CE4 CMP W22, W9
	0x03302CE8 B.LT 0x3302D8C
	0x03302CEC ADRP X20, 0xDF2000
	0x03302CF0 LDR X20, [X20 + 0xE58]
	0x03302CF4 UBFM W27, W8, 0x1F, 0x1E
	0x03302CF8 MOV W1, W27
	0x03302CFC LDR X0, [X20]
	0x03302D00 BL 0x1C16D6C
	0x03302D04 ADRP X24, 0xE25000
	0x03302D08 LDR X24, [X24 + 0x8E0]
	0x03302D0C LDR X1, [X24]
	0x03302D10 BL 0x25FC3C4
	0x03302D14 ADRP X8, 0xE25000
	0x03302D18 LDR X8, [X8 + 0x8D0]
	0x03302D1C MOV X19, X28
	0x03302D20 MOV X28, X0
	0x03302D24 MOV X21, X1
	0x03302D28 LDR X3, [X8]
	0x03302D2C SUB X0, X29, 0x18
	0x03302D30 MOV X1, X28
	0x03302D34 MOV X2, X21
	0x03302D38 BL 0x25FBE98
	0x03302D3C LDR X0, [X20]
	0x03302D40 MOV W1, W27
	0x03302D44 STP X28, X21, [X29 - 0x18]
	0x03302D48 MOV X28, X19
	0x03302D4C BL 0x1C16D6C
	0x03302D50 LDR X1, [X24]
	0x03302D54 BL 0x25FC3C4
	0x03302D58 ADRP X8, 0xE25000
	0x03302D5C LDR X8, [X8 + 0x8D0]
	0x03302D60 MOV X21, X0
	0x03302D64 MOV X27, X1
	0x03302D68 SUB X0, X29, 0x30
	0x03302D6C LDR X3, [X8]
	0x03302D70 MOV X1, X21
	0x03302D74 MOV X2, X27
	0x03302D78 BL 0x25FBE98
	0x03302D7C STP X21, X27, [X29 - 0x30]
	0x03302D80 LDP X21, X27, [X29 - 0x50]
	0x03302D84 LDUR X24, [X29 - 0x40]
	0x03302D88 LDUR X19, [X29 - 0x58]
	0x03302D8C CMP W26, 0x2A
	0x03302D90 UBFM W8, W23, 0x1F, 0x1E
	0x03302D94 B.EQ 0x3302E28
	0x03302D98 CMP W26, 0x3C
	0x03302D9C B.NE 0x3302DDC
	0x03302DA0 LDUR W9, [X29 - 0x34]
	0x03302DA4 TBZ X9, 0x0, 0x3302DDC
	0x03302DA8 LDUR W9, [X29 - 0x60]
	0x03302DAC TBNZ X9, 0x0, 0x3302DD4
	0x03302DB0 LDUR W9, [X29 - 0x68]
	0x03302DB4 CMP W25, W9
	0x03302DB8 B.EQ 0x33030F4
	0x03302DBC LDRH W10, [X28, W9, SXTW]
	0x03302DC0 CMP W10, 0x2E
	0x03302DC4 B.EQ 0x3302E18
	0x03302DC8 ADD W9, W9, 0x1
	0x03302DCC CMP W19, W9
	0x03302DD0 B.NE 0x3302DB4
	0x03302DD4 MOV W9, W31
	0x03302DD8 B 0x3302E1C
	0x03302DDC CMP W26, 0x3E
	0x03302DE0 B.NE 0x3302DF8
	0x03302DE4 LDUR W9, [X29 - 0x34]
	0x03302DE8 TBZ X9, 0x0, 0x3302DF8
	0x03302DEC LDUR W9, [X29 - 0x78]
	0x03302DF0 TBNZ X9, 0x0, 0x3302E64
	0x03302DF4 B 0x3302F04
	0x03302DF8 CMP W26, 0x22
	0x03302DFC B.NE 0x3302EC0
	0x03302E00 LDUR W9, [X29 - 0x34]
	0x03302E04 TBZ X9, 0x0, 0x3302EC0
	0x03302E08 LDUR W9, [X29 - 0x74]
	0x03302E0C CMP W9, W19
	0x03302E10 B.GE 0x3302E64
	0x03302E14 B 0x3302EF4
	0x03302E18 MOVZ W9, 0x1
	0x03302E1C LDUR W10, [X29 - 0x64]
	0x03302E20 ORR W9, W9, W10, 0x0
	0x03302E24 CBZ W9, 0x3302E44
	0x03302E28 LDUR W9, [X29 - 0x10]
	0x03302E2C CMP W22, W9
	0x03302E30 B.CS 0x33030F4
	0x03302E34 LDUR X9, [X29 - 0x18]
	0x03302E38 ADD W10, W22, 0x1
	0x03302E3C STR W8, [X9, W22, SXTW]
	0x03302E40 MOV W22, W10
	0x03302E44 LDUR W9, [X29 - 0x10]
	0x03302E48 CMP W22, W9
	0x03302E4C B.CS 0x33030F4
	0x03302E50 LDUR X9, [X29 - 0x18]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 48
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X24+40]
	017 Move X20, 0x10DB000
	018 Move X19, X0
	019 Move [X29-8], X8
	020 Move W8, [X20+2762]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {36}
	025 Move X0, 0xE21000
	026 Move X0, [X0+1256]
	027 Call 0x1C17CF4
	028 Move X0, 0xE26000
	029 Move X0, [X0+2072]
	030 Call 0x1C17CF4
	031 Move X0, 0xE24000
	032 Move X0, [X0+3824]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+2762], W8
	036 Move X20, 0xE24000
	037 Move X20, [X20+3824]
	038 NotImplemented "Instruction MOVI not yet implemented."
	039 Move X0, X19
	040 Move X1, X31
	041 Move [X29-48], V0
	042 Move [X29-40], V0
	043 Call String.IsNullOrEmpty, X0
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {66}
	048 Move X1, [X20]
	049 Move X0, X19
	050 Move X2, X31
	051 Call String.op_Equality, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {66}
	056 Move X8, 0xE26000
	057 Move X8, [X8+2072]
	058 Move X0, X19
	059 Move X2, X31
	060 Move X1, [X8]
	061 Call String.op_Equality, X0, X1
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {85}
	066 Move X19, [X20]
	067 Move X8, [X24+40]
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X0, X19
	071 Add X31, X29, 0
	072 Move X20, [X31+80]
	073 Move X19, [X31+88]
	074 Move X22, [X31+64]
	075 Move X21, [X31+72]
	076 Move X24, [X31+48]
	077 Move X23, [X31+56]
	078 Move X26, [X31+32]
	079 Move X25, [X31+40]
	080 Move X28, [X31+16]
	081 Move X27, [X31+24]
	082 Move X29, [X31+96]
	083 Move X30, [X31+104]
	084 Return X0
	085 Add X8, X31, 0
	086 Subtract X1, X8, 64
	087 Add X31, X1, 0
	088 NotImplemented "Instruction MOVI not yet implemented."
	089 Subtract X0, X29, 48
	090 Move W2, 32
	091 Move X3, X31
	092 Move [X8-32], V0
	093 Move [X8-24], V0
	094 Move [X8-64], V0
	095 Move [X8-56], V0
	096 Call ValueStringBuilder..ctor, X0, X1
	097 Compare X19, 0
	098 JumpIfEqual {230}
	099 Move W8, [X19+16]
	100 Subtract W25, W8, 1
	101 Move X22, 0xE21000
	102 Move X22, [X22+1416]
	103 Move W28, W31
	104 Move W20, W31
	105 Subtract W21, W8, 2
	106 Subtract W26, W31, W8
	107 Move X27, 0x10DB000
	108 Move X0, X19
	109 Move W1, W20
	110 Move X2, X31
	111 Call String.get_Chars, X0, X1
	112 And W8, W0, 0xFFFF
	113 NotImplemented "Instruction CMP not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Compare W20, 0
	116 JumpIfEqual {162}
	117 Add W8, W26, W20
	118 Add W31, W8, 1
	119 Move X0, X19
	120 Move W1, W21
	121 Move X2, X31
	122 Call String.get_Chars, X0, X1
	123 And W8, W0, 0xFFFF
	124 NotImplemented "Instruction CMP not yet implemented."
	125 NotImplemented "Instruction LDUR not yet implemented."
	126 Subtract X0, X29, 48
	127 Move X2, X31
	128 Subtract W1, W8, 1
	129 Call ValueStringBuilder.get_Item, X0, X1
	130 Move W8, 60
	131 NotImplemented "Instruction STRH not yet implemented."
	132 Move W8, [X27+1250]
	133 Compare W8, 0
	134 JumpIfNotEqual {139}
	135 Move X0, X22
	136 Call 0x1C17CF4
	137 Move W8, 1
	138 Move [X27+1250], W8
	139 NotImplemented "Instruction LDURSW not yet implemented."
	140 NotImplemented "Instruction LDUR not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 Add W10, W8, 1
	145 Move W11, 62
	146 Move W8, [X27+1250]
	147 Move W23, W0
	148 Compare W8, 0
	149 JumpIfNotEqual {154}
	150 Move X0, X22
	151 Call 0x1C17CF4
	152 Move W8, 1
	153 Move [X27+1250], W8
	154 NotImplemented "Instruction LDURSW not yet implemented."
	155 NotImplemented "Instruction LDUR not yet implemented."
	156 NotImplemented "Instruction CMP not yet implemented."
	157 NotImplemented "Instruction CMP not yet implemented."
	158 NotImplemented "Instruction LDUR not yet implemented."
	159 Add W10, W8, 1
	160 NotImplemented "Instruction STRH not yet implemented."
	161 Move [X29-24], W10
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Add W23, W20, 1
	164 Move X0, X19
	165 Move W1, W23
	166 Move X2, X31
	167 Call String.get_Chars, X0, X1
	168 And W8, W0, 0xFFFF
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move X0, X19
	171 Move W1, W23
	172 Move X2, X31
	173 Call String.get_Chars, X0, X1
	174 And W8, W0, 0xFFFF
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move W8, [X27+1250]
	177 Compare W8, 0
	178 JumpIfNotEqual {183}
	179 Move X0, X22
	180 Call 0x1C17CF4
	181 Move W8, 1
	182 Move [X27+1250], W8
	183 NotImplemented "Instruction LDURSW not yet implemented."
	184 NotImplemented "Instruction LDUR not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 NotImplemented "Instruction CMP not yet implemented."
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 Add W10, W8, 1
	189 Move W11, 34
	190 Subtract X0, X29, 48
	191 Move W1, 62
	192 Subtract X0, X29, 48
	193 Move W1, W23
	194 Move X2, X31
	195 Call ValueStringBuilder.GrowAndAppend, X0, X1
	196 Move W8, [X27+1250]
	197 Compare W8, 0
	198 JumpIfNotEqual {203}
	199 Move X0, X22
	200 Call 0x1C17CF4
	201 Move W8, 1
	202 Move [X27+1250], W8
	203 NotImplemented "Instruction LDURSW not yet implemented."
	204 NotImplemented "Instruction LDUR not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 NotImplemented "Instruction CMP not yet implemented."
	207 NotImplemented "Instruction LDUR not yet implemented."
	208 Add W10, W8, 1
	209 Move W11, 46
	210 NotImplemented "Instruction STRH not yet implemented."
	211 Move [X29-24], W10
	212 Subtract X0, X29, 48
	213 Move W1, 46
	214 Subtract X0, X29, 48
	215 Move W1, 34
	216 Move X2, X31
	217 Call ValueStringBuilder.GrowAndAppend, X0, X1
	218 Move W28, 1
	219 Add W20, W20, 1
	220 Add W31, W26, W20
	221 Move TEMP, X28
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfNotEqual {67}
	225 Subtract X0, X29, 48
	226 Move X1, X31
	227 Call ValueStringBuilder.ToString, X0
	228 Move X19, X0
	229 Call 0x1C17F28
	230 Call 0x1C17F20
	231 Call 0x3EB2B20

Method: System.Boolean MatchesWin32Expression(System.ReadOnlySpan`1<System.Char> expression, System.ReadOnlySpan`1<System.Char> name, System.Boolean ignoreCase = True)

Disassembly:
	0x03303104 STP X20, X19, [X31 + 0x20]
	0x03303108 ADRP X22, 0x10D9000
	0x0330310C ADRP X21, 0xDF9000
	0x03303110 ADRP X19, 0xE24000
	0x03303114 ADRP X20, 0xE24000
	0x03303118 LDRB W8, [X22 + 0xACE]
	0x0330311C LDR X21, [X21 + 0x8D8]
	0x03303120 LDR X19, [X19 + 0x8E8]
	0x03303124 LDR X20, [X20 + 0x7F0]
	0x03303128 TBNZ X8, 0x0, 0x3303158
	0x0330312C ADRP X0, 0xDF9000
	0x03303130 LDR X0, [X0 + 0x8D8]
	0x03303134 BL 0x1C16CF4
	0x03303138 ADRP X0, 0xE24000
	0x0330313C LDR X0, [X0 + 0x7F0]
	0x03303140 BL 0x1C16CF4
	0x03303144 ADRP X0, 0xE24000
	0x03303148 LDR X0, [X0 + 0x8E8]
	0x0330314C BL 0x1C16CF4
	0x03303150 MOVZ W8, 0x1
	0x03303154 STRB W8, [X22 + 0xACE]
	0x03303158 LDR X0, [X21]
	0x0330315C MOVZ W1, 0x5
	0x03303160 BL 0x1C16D6C
	0x03303164 LDR X1, [X19]
	0x03303168 MOV X2, X31
	0x0330316C MOV X19, X0
	0x03303170 BL 0x32C5BD8
	0x03303174 LDR X8, [X20]
	0x03303178 MOVZ W1, 0x2
	0x0330317C LDR X8, [X8 + 0xB8]
	0x03303180 STR X19, [X8]
	0x03303184 LDR X0, [X21]
	0x03303188 BL 0x1C16D6C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x10DA000
	010 Move X24, 0xE25000
	011 Move W8, [X25+2763]
	012 Move X24, [X24+2032]
	013 Move W23, W4
	014 Move X19, X3
	015 Move X20, X2
	016 Move X21, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xE25000
	023 Move X0, [X0+2032]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+2763], W8
	027 Move X0, [X24]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 And W4, W23, 1
	033 Move X0, X22
	034 Move X1, X21
	035 Move X2, X20
	036 Move X3, X19
	037 Move X20, [X31+48]
	038 Move X19, [X31+56]
	039 Move X22, [X31+32]
	040 Move X21, [X31+40]
	041 Move X24, [X31+16]
	042 Move X23, [X31+24]
	043 Move W5, 1
	044 Move X30, [X31+64]
	045 Move X25, [X31+72]
	046 Call FileSystemName.MatchPattern, X0, X1, X2, X3
	047 Return X0

Method: System.Boolean MatchesSimpleExpression(System.ReadOnlySpan`1<System.Char> expression, System.ReadOnlySpan`1<System.Char> name, System.Boolean ignoreCase = True)

Disassembly:
	0x0330307C CSET W0, EQ
	0x03303080 B 0x330308C
	0x03303084 LDUR X22, [X29 - 0xA0]
	0x03303088 MOV W0, W31
	0x0330308C LDR X8, [X22 + 0x28]
	0x03303090 LDUR X9, [X29 - 0x8]
	0x03303094 CMP X8, X9
	0x03303098 B.NE 0x33030F8
	0x0330309C AND W0, W0, 0x1
	0x033030A0 ADD X31, X29, 0x0
	0x033030A4 LDP X20, X19, [X31 + 0x50]
	0x033030A8 LDP X22, X21, [X31 + 0x40]
	0x033030AC LDP X24, X23, [X31 + 0x30]
	0x033030B0 LDP X26, X25, [X31 + 0x20]
	0x033030B4 LDP X28, X27, [X31 + 0x10]
	0x033030B8 LDP X29, X30, [X31], #0x60
	0x033030BC RET
	0x033030C0 CMP W25, W19
	0x033030C4 B.GT 0x3303088
	0x033030C8 LDUR W8, [X29 - 0x98]
	0x033030CC MOV X0, X28
	0x033030D0 MOV X1, X19
	0x033030D4 MOV X2, X26
	0x033030D8 ANDS W31, W8, 0x1
	0x033030DC MOVZ W8, 0x4
	0x033030E0 CINC W4, W8, NE
	0x033030E4 MOV X3, X25
	0x033030E8 MOV X5, X31
	0x033030EC BL 0x337F9C4
	0x033030F0 B 0x330308C
	0x033030F4 BL 0x1C16F28
	0x033030F8 BL 0x3EB1B20
	0x033030FC STR X30, [X31 - 0x30]!
	0x03303100 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x10DA000
	010 Move X24, 0xE25000
	011 Move W8, [X25+2764]
	012 Move X24, [X24+2032]
	013 Move W21, W4
	014 Move X19, X3
	015 Move X20, X2
	016 Move X22, X1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xE25000
	023 Move X0, [X0+2032]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+2764], W8
	027 Move X0, [X24]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 And W4, W21, 1
	033 Move X0, X23
	034 Move X1, X22
	035 Move X2, X20
	036 Move X3, X19
	037 Move X20, [X31+48]
	038 Move X19, [X31+56]
	039 Move X22, [X31+32]
	040 Move X21, [X31+40]
	041 Move X24, [X31+16]
	042 Move X23, [X31+24]
	043 Move W5, W31
	044 Move X30, [X31+64]
	045 Move X25, [X31+72]
	046 Call FileSystemName.MatchPattern, X0, X1, X2, X3
	047 Return X0

Method: System.Boolean MatchPattern(System.ReadOnlySpan`1<System.Char> expression, System.ReadOnlySpan`1<System.Char> name, System.Boolean ignoreCase, System.Boolean useExtendedWildcards)

Disassembly:
	0x033039C4 MOV W10, W19
	0x033039C8 MOV W8, W31
	0x033039CC ADD X9, X21, 0x2
	0x033039D0 SUB X10, X10, 0x1
	0x033039D4 MOVN W0, 0x0
	0x033039D8 LDRH W11, [X20, W8, SXTW]
	0x033039DC CMP W11, W25
	0x033039E0 B.NE 0x3303A28
	0x033039E4 MOVZ W11, 0x1
	0x033039E8 CMP W19, 0x2
	0x033039EC B.LT 0x3303A20
	0x033039F0 MOV X12, X10
	0x033039F4 MOV X13, X9
	0x033039F8 ADD W14, W8, W11
	0x033039FC LDRH W14, [X20, W14, SXTW]
	0x03303A00 LDRH W15, [X13]
	0x03303A04 CMP W14, W15
	0x03303A08 B.NE 0x3303A20
	0x03303A0C ADD W11, W11, 0x1
	0x03303A10 SUBS X12, X12, 0x1
	0x03303A14 ADD X13, X13, 0x2
	0x03303A18 B.NE 0x33039F8
	0x03303A1C B 0x3303ABC
	0x03303A20 CMP W11, W19
	0x03303A24 B.EQ 0x3303ABC
	0x03303A28 ADD W8, W8, 0x1
	0x03303A2C CMP W8, W24
	0x03303A30 B.LE 0x33039D8
	0x03303A34 B 0x330379C
	0x03303A38 TBNZ X24, 0x1F, 0x3303788
	0x03303A3C MOV W9, W19
	0x03303A40 ADD X8, X21, 0x2
	0x03303A44 SUB X9, X9, 0x1
	0x03303A48 MOVN W0, 0x0
	0x03303A4C LDRH W10, [X20, W24, UXTW]
	0x03303A50 CMP W10, W25
	0x03303A54 B.NE 0x3303A9C
	0x03303A58 MOVZ W10, 0x1
	0x03303A5C CMP W19, 0x2
	0x03303A60 B.LT 0x3303A94
	0x03303A64 MOV X11, X9
	0x03303A68 MOV X12, X8
	0x03303A6C ADD W13, W24, W10
	0x03303A70 LDRH W13, [X20, W13, SXTW]
	0x03303A74 LDRH W14, [X12]
	0x03303A78 CMP W13, W14
	0x03303A7C B.NE 0x3303A94
	0x03303A80 ADD W10, W10, 0x1
	0x03303A84 SUBS X11, X11, 0x1
	0x03303A88 ADD X12, X12, 0x2
	0x03303A8C B.NE 0x3303A6C
	0x03303A90 B 0x3303AAC
	0x03303A94 CMP W10, W19
	0x03303A98 B.EQ 0x3303AAC
	0x03303A9C CMP W24, 0x0
	0x03303AA0 SUB W24, W24, 0x1
	0x03303AA4 B.GT 0x3303A4C
	0x03303AA8 B 0x330379C
	0x03303AAC MOV W0, W24
	0x03303AB0 B 0x330379C
	0x03303AB4 MOV W0, W25
	0x03303AB8 B 0x330379C
	0x03303ABC MOV W0, W8
	0x03303AC0 B 0x330379C
	0x03303AC4 STP X30, X25, [X31 - 0x40]!
	0x03303AC8 STP X24, X23, [X31 + 0x10]
	0x03303ACC STP X22, X21, [X31 + 0x20]
	0x03303AD0 STP X20, X19, [X31 + 0x30]
	0x03303AD4 ADRP X24, 0x10D9000
	0x03303AD8 LDRB W8, [X24 + 0xAD5]
	0x03303ADC MOV W20, W4
	0x03303AE0 MOV W19, W3
	0x03303AE4 MOV W21, W2
	0x03303AE8 MOV X22, X1
	0x03303AEC MOV X23, X0
	0x03303AF0 TBNZ X8, 0x0, 0x3303B08
	0x03303AF4 ADRP X0, 0xE1E000
	0x03303AF8 LDR X0, [X0 + 0xFD0]
	0x03303AFC BL 0x1C16CF4
	0x03303B00 MOVZ W8, 0x1
	0x03303B04 STRB W8, [X24 + 0xAD5]
	0x03303B08 CBZ X23, 0x3303B18
	0x03303B0C MOV X0, X31
	0x03303B10 BL 0x32C1424
	0x03303B14 ADD X23, X23, W0, SXTW
	0x03303B18 CBZ X22, 0x3303B8C
	0x03303B1C ADRP X24, 0xE1E000
	0x03303B20 LDR X24, [X24 + 0xFD0]
	0x03303B24 MOV X0, X31
	0x03303B28 BL 0x32C1424
	0x03303B2C LDR X8, [X24]
	0x03303B30 LDR W24, [X22 + 0x10]
	0x03303B34 MOV W25, W0
	0x03303B38 LDR W9, [X8 + 0xE0]
	0x03303B3C CBNZ W9, 0x3303B48
	0x03303B40 MOV X0, X8
	0x03303B44 BL 0x1C16DFC
	0x03303B48 SUB W8, W21, W19
	0x03303B4C ADD W21, W8, 0x1
	0x03303B50 ADD X2, X22, W25, SXTW
	0x03303B54 ADD X0, X23, W21, 0x1, SXTW
	0x03303B58 AND W4, W20, 0x1
	0x03303B5C MOV W1, W19
	0x03303B60 MOV W3, W24
	0x03303B64 MOV W5, W31
	0x03303B68 BL 0x3303728
	0x03303B6C ADD W8, W21, W0
	0x03303B70 LDP X20, X19, [X31 + 0x30]
	0x03303B74 LDP X22, X21, [X31 + 0x20]
	0x03303B78 LDP X24, X23, [X31 + 0x10]
	0x03303B7C CMP W0, 0x0
	0x03303B80 CSINV W0, W8, W31, GE
	0x03303B84 LDP X30, X25, [X31], #0x40
	0x03303B88 RET
	0x03303B8C BL 0x1C16F20
	0x03303B90 AND W8, W0, 0xFFFF
	0x03303B94 SUB W8, W8, 0x61
	0x03303B98 SUB W9, W0, 0x20
	0x03303B9C CMP W8, 0x19
	0x03303BA0 CSEL W0, W0, W9, HI
	0x03303BA4 RET
	0x03303BA8 STR X30, [X31 - 0x50]!
	0x03303BAC STP X26, X25, [X31 + 0x10]
	0x03303BB0 STP X24, X23, [X31 + 0x20]
	0x03303BB4 STP X22, X21, [X31 + 0x30]
	0x03303BB8 STP X20, X19, [X31 + 0x40]
	0x03303BBC ADRP X22, 0x10D9000
	0x03303BC0 LDRB W8, [X22 + 0xAD7]
	0x03303BC4 MOV W19, W2
	0x03303BC8 MOV X20, X1
	0x03303BCC MOV X21, X0
	0x03303BD0 TBNZ X8, 0x0, 0x3303C0C
	0x03303BD4 ADRP X0, 0xDF8000
	0x03303BD8 LDR X0, [X0 + 0xCC8]
	0x03303BDC BL 0x1C16CF4
	0x03303BE0 ADRP X0, 0xDF0000
	0x03303BE4 LDR X0, [X0 + 0x618]
	0x03303BE8 BL 0x1C16CF4
	0x03303BEC ADRP X0, 0xE1E000
	0x03303BF0 LDR X0, [X0 + 0xFD0]
	0x03303BF4 BL 0x1C16CF4
	0x03303BF8 ADRP X0, 0xE1E000
	0x03303BFC LDR X0, [X0 + 0xC18]
	0x03303C00 BL 0x1C16CF4
	0x03303C04 MOVZ W8, 0x1
	0x03303C08 STRB W8, [X22 + 0xAD7]
	0x03303C0C CBZ X20, 0x3303DBC
	0x03303C10 MOVZ W8, 0xFFE0
	0x03303C14 MOVK W8, 0xDFFF0000
	0x03303C18 ANDS W31, W19, W8, 0x0
	0x03303C1C B.NE 0x3303DF0
	0x03303C20 LDR W8, [X20 + 0x10]
	0x03303C24 CBZ W8, 0x3303C8C
	0x03303C28 ADRP X9, 0xDF0000
	0x03303C2C LDR X9, [X9 + 0x618]
	0x03303C30 MOVZ W24, 0x1
	0x03303C34 UBFM W1, W8, 0x1F, 0x1E
	0x03303C38 MOVK W24, 0x10000000
	0x03303C3C LDR X0, [X9]
	0x03303C40 BL 0x1C16D6C
	0x03303C44 MOV X22, X0
	0x03303C48 MOV X0, X31
	0x03303C4C BL 0x32C1424
	0x03303C50 CBZ X22, 0x3303CE8
	0x03303C54 LDR W8, [X22 + 0x18]
	0x03303C58 ADD X9, X22, 0x20
	0x03303C5C CMP W8, 0x0
	0x03303C60 CSEL X23, X31, X9, EQ
	0x03303C64 ANDS W31, W19, W24, 0x0
	0x03303C68 B.NE 0x3303CF4
	0x03303C6C CBZ X22, 0x3303E4C
	0x03303C70 LDRSW X2, [X22 + 0x18]
	0x03303C74 ADD X0, X20, W0, SXTW
	0x03303C78 MOV X1, X23
	0x03303C7C MOV X4, X31
	0x03303C80 MOV X3, X2
	0x03303C84 BL 0x33A8C44
	0x03303C88 B 0x3303D5C
	0x03303C8C ADRP X8, 0xDF8000
	0x03303C90 LDR X8, [X8 + 0xCC8]
	0x03303C94 LDR X22, [X8]
	0x03303C98 LDR X8, [X22 + 0x38]
	0x03303C9C CBNZ X8, 0x3303CAC
	0x03303CA0 MOV X0, X22
	0x03303CA4 BL 0x1C5C6E0
	0x03303CA8 LDR X8, [X22 + 0x38]
	0x03303CAC LDR X0, [X8 + 0x10]
	0x03303CB0 LDRB W8, [X0 + 0x135]
	0x03303CB4 TBNZ X8, 0x0, 0x3303CBC
	0x03303CB8 BL 0x1C5C684
	0x03303CBC LDR W8, [X0 + 0xE0]
	0x03303CC0 CBNZ W8, 0x3303CC8
	0x03303CC4 BL 0x1C16DFC
	0x03303CC8 LDR X8, [X22 + 0x38]
	0x03303CCC LDR X0, [X8 + 0x10]
	0x03303CD0 LDRB W8, [X0 + 0x135]
	0x03303CD4 TBNZ X8, 0x0, 0x3303CDC
	0x03303CD8 BL 0x1C5C684
	0x03303CDC LDR X8, [X0 + 0xB8]
	0x03303CE0 LDR X22, [X8]
	0x03303CE4 B 0x3303D5C
	0x03303CE8 ANDS W31, W19, W24, 0x0
	0x03303CEC B.EQ 0x3303E4C
	0x03303CF0 MOV X23, X31
	0x03303CF4 LDR W8, [X20 + 0x10]
	0x03303CF8 CMP W8, 0x1
	0x03303CFC B.LT 0x3303D5C
	0x03303D00 ADRP X26, 0xE1E000
	0x03303D04 LDR X26, [X26 + 0xFD0]
	0x03303D08 MOV X24, X31
	0x03303D0C MOV X0, X20
	0x03303D10 MOV W1, W24
	0x03303D14 MOV X2, X31
	0x03303D18 BL 0x3222A1C
	0x03303D1C LDR X8, [X26]
	0x03303D20 MOV W25, W0
	0x03303D24 LDR W9, [X8 + 0xE0]
	0x03303D28 CBNZ W9, 0x3303D34
	0x03303D2C MOV X0, X8
	0x03303D30 BL 0x1C16DFC
	0x03303D34 AND W8, W25, 0xFFFF
	0x03303D38 SUB W8, W8, 0x61
	0x03303D3C SUB W9, W25, 0x20
	0x03303D40 CMP W8, 0x19
	0x03303D44 CSEL W8, W25, W9, HI
	0x03303D48 STRH W8, [X23], #0x2
	0x03303D4C LDRSW X8, [X20 + 0x10]
	0x03303D50 ADD X24, X24, 0x1
	0x03303D54 CMP X24, X8
	0x03303D58 B.LT 0x3303D0C
	0x03303D5C LDR X8, [X21]
	0x03303D60 ADRP X23, 0xE1E000
	0x03303D64 MOV X0, X21
	0x03303D68 LDP X9, X1, [X8 + 0x188]
	0x03303D6C LDR X23, [X23 + 0xC18]
	0x03303D70 BLR X9
	0x03303D74 LDR X8, [X23]
	0x03303D78 MOV X21, X0
	0x03303D7C MOV X0, X8
	0x03303D80 BL 0x1C16F10
	0x03303D84 MOV X1, X21
	0x03303D88 MOV X2, X20
	0x03303D8C MOV W3, W19
	0x03303D90 MOV X4, X22
	0x03303D94 MOV X5, X31
	0x03303D98 MOV X23, X0
	0x03303D9C BL 0x333FD24
	0x03303DA0 MOV X0, X23
	0x03303DA4 LDP X20, X19, [X31 + 0x40]
	0x03303DA8 LDP X22, X21, [X31 + 0x30]
	0x03303DAC LDP X24, X23, [X31 + 0x20]
	0x03303DB0 LDP X26, X25, [X31 + 0x10]
	0x03303DB4 LDR X30, [X31], #0x50
	0x03303DB8 RET
	0x03303DBC ADRP X0, 0xDF5000
	0x03303DC0 LDR X0, [X0 + 0x528]
	0x03303DC4 BL 0x1C16D08
	0x03303DC8 BL 0x1C16F10
	0x03303DCC MOV X19, X0
	0x03303DD0 ADRP X0, 0xDFB000
	0x03303DD4 LDR X0, [X0 + 0x580]
	0x03303DD8 BL 0x1C16D08
	0x03303DDC MOV X1, X0
	0x03303DE0 MOV X0, X19
	0x03303DE4 MOV X2, X31
	0x03303DE8 BL 0x330E100
	0x03303DEC B 0x3303E34
	0x03303DF0 ADRP X0, 0xDF8000
	0x03303DF4 LDR X0, [X0 + 0x578]
	0x03303DF8 BL 0x1C16D08
	0x03303DFC BL 0x1C16F10
	0x03303E00 MOV X19, X0
	0x03303E04 ADRP X0, 0xE20000
	0x03303E08 LDR X0, [X0 + 0x958]
	0x03303E0C BL 0x1C16D08
	0x03303E10 MOV X20, X0
	0x03303E14 ADRP X0, 0xE24000
	0x03303E18 LDR X0, [X0 + 0x830]
	0x03303E1C BL 0x1C16D08
	0x03303E20 MOV X2, X0
	0x03303E24 MOV X0, X19
	0x03303E28 MOV X1, X20
	0x03303E2C MOV X3, X31
	0x03303E30 BL 0x330E16C
	0x03303E34 ADRP X0, 0xE24000
	0x03303E38 LDR X0, [X0 + 0x920]
	0x03303E3C BL 0x1C16D08
	0x03303E40 MOV X1, X0
	0x03303E44 MOV X0, X19
	0x03303E48 BL 0x1C16DEC
	0x03303E4C BL 0x1C16F20
	0x03303E50 STR X30, [X31 - 0x20]!
	0x03303E54 STP X20, X19, [X31 + 0x10]
	0x03303E58 MOV X20, X1
	0x03303E5C MOV X1, X31
	0x03303E60 MOV X19, X0
	0x03303E64 BL 0x33BDD8C
	0x03303E68 CBZ X20, 0x3303E80
	0x03303E6C LDR X8, [X20 + 0x48]
	0x03303E70 STP X8, X8, [X19 + 0x10]
	0x03303E74 LDP X20, X19, [X31 + 0x10]
	0x03303E78 LDR X30, [X31], #0x20
	0x03303E7C RET
	0x03303E80 BL 0x1C16F20
	0x03303E84 STR X30, [X31 - 0x10]!
	0x03303E88 CBZ X1, 0x3303E9C
	0x03303E8C LDR X8, [X1 + 0x48]
	0x03303E90 STR X8, [X0 + 0x18]
	0x03303E94 LDR X30, [X31], #0x10
	0x03303E98 RET
	0x03303E9C BL 0x1C16F20
	0x03303EA0 STR X30, [X31 - 0x20]!
	0x03303EA4 STP X20, X19, [X31 + 0x10]
	0x03303EA8 ADRP X20, 0x10D9000
	0x03303EAC LDRB W8, [X20 + 0xAD8]
	0x03303EB0 MOV X19, X0
	0x03303EB4 TBNZ X8, 0x0, 0x3303ECC
	0x03303EB8 ADRP X0, 0xDF2000
	0x03303EBC LDR X0, [X0 + 0xC48]
	0x03303EC0 BL 0x1C16CF4
	0x03303EC4 MOVZ W8, 0x1
	0x03303EC8 STRB W8, [X20 + 0xAD8]
	0x03303ECC CBZ X19, 0x3303F0C
	0x03303ED0 ADRP X8, 0xDF2000
	0x03303ED4 LDR X8, [X8 + 0xC48]
	0x03303ED8 LDR X0, [X8]
	0x03303EDC LDR W8, [X0 + 0xE0]
	0x03303EE0 CBNZ W8, 0x3303EE8
	0x03303EE4 BL 0x1C16DFC
	0x03303EE8 MOV X0, X19
	0x03303EEC MOV X1, X31
	0x03303EF0 BL 0x333C3F8
	0x03303EF4 CBZ X0, 0x3303F54
	0x03303EF8 LDR X8, [X0]
	0x03303EFC LDP X20, X19, [X31 + 0x10]
	0x03303F00 LDP X2, X1, [X8 + 0x1F8]
	0x03303F04 LDR X30, [X31], #0x20
	0x03303F08 BR X2
	0x03303F0C ADRP X0, 0xDF5000
	0x03303F10 LDR X0, [X0 + 0x528]
	0x03303F14 BL 0x1C16D08
	0x03303F18 BL 0x1C16F10
	0x03303F1C MOV X19, X0
	0x03303F20 ADRP X0, 0xDF8000
	0x03303F24 LDR X0, [X0 + 0x588]
	0x03303F28 BL 0x1C16D08
	0x03303F2C MOV X1, X0
	0x03303F30 MOV X0, X19
	0x03303F34 MOV X2, X31
	0x03303F38 BL 0x330E100
	0x03303F3C ADRP X0, 0xE24000
	0x03303F40 LDR X0, [X0 + 0x928]
	0x03303F44 BL 0x1C16D08
	0x03303F48 MOV X1, X0
	0x03303F4C MOV X0, X19
	0x03303F50 BL 0x1C16DEC
	0x03303F54 BL 0x1C16F20
	0x03303F58 STR X31, [X0 + 0x10]
	0x03303F5C RET
	0x03303F60 B 0x3303F64
	0x03303F64 STR X30, [X31 - 0x20]!
	0x03303F68 STP X20, X19, [X31 + 0x10]
	0x03303F6C ADRP X20, 0x10D9000
	0x03303F70 LDRB W8, [X20 + 0xAD9]
	0x03303F74 MOV X19, X0
	0x03303F78 TBNZ X8, 0x0, 0x3303F90
	0x03303F7C ADRP X0, 0xDF2000
	0x03303F80 LDR X0, [X0 + 0xC48]
	0x03303F84 BL 0x1C16CF4
	0x03303F88 MOVZ W8, 0x1
	0x03303F8C STRB W8, [X20 + 0xAD9]
	0x03303F90 ADRP X8, 0xDF2000
	0x03303F94 LDR X20, [X19 + 0x10]
	0x03303F98 LDR X8, [X8 + 0xC48]
	0x03303F9C CBZ X20, 0x3303FCC
	0x03303FA0 LDR X0, [X8]
	0x03303FA4 LDR W8, [X0 + 0xE0]
	0x03303FA8 CBNZ W8, 0x3303FB0
	0x03303FAC BL 0x1C16DFC
	0x03303FB0 MOV X0, X20
	0x03303FB4 MOV X1, X31
	0x03303FB8 BL 0x333C3F8
	0x03303FBC CBZ X0, 0x3304004
	0x03303FC0 LDR X8, [X0 + 0x48]
	0x03303FC4 STR X8, [X19 + 0x18]
	0x03303FC8 B 0x3303FF8
	0x03303FCC LDR X0, [X8]
	0x03303FD0 LDR W20, [X19 + 0x28]
	0x03303FD4 LDR W8, [X0 + 0xE0]
	0x03303FD8 CBNZ W8, 0x3303FE0
	0x03303FDC BL 0x1C16DFC
	0x03303FE0 MOV W0, W20
	0x03303FE4 MOV X1, X31
	0x03303FE8 BL 0x333C1C8
	0x03303FEC CBZ X0, 0x3304004
	0x03303FF0 LDR X8, [X0 + 0x48]
	0x03303FF4 STR X8, [X19 + 0x10]
	0x03303FF8 LDP X20, X19, [X31 + 0x10]
	0x03303FFC LDR X30, [X31], #0x20
	0x03304000 RET
	0x03304004 BL 0x1C16F20
	0x03304008 B 0x3303F64
	0x0330400C STP X30, X21, [X31 - 0x20]!
	0x03304010 STP X20, X19, [X31 + 0x10]
	0x03304014 ADRP X21, 0x10D8000
	0x03304018 ADRP X20, 0xDF1000
	0x0330401C LDRB W8, [X21 + 0xADA]
	0x03304020 LDR X20, [X20 + 0xC48]
	0x03304024 MOV X19, X0
	0x03304028 TBNZ X8, 0x0, 0x3304040
	0x0330402C ADRP X0, 0xDF1000
	0x03304030 LDR X0, [X0 + 0xC48]
	0x03304034 BL 0x1C16CF4
	0x03304038 MOVZ W8, 0x1
	0x0330403C STRB W8, [X21 + 0xADA]
	0x03304040 LDR X8, [X19]
	0x03304044 MOV X0, X19
	0x03304048 LDP X9, X1, [X8 + 0x188]
	0x0330404C BLR X9
	0x03304050 LDR X8, [X20]
	0x03304054 MOV X20, X0
	0x03304058 LDR W9, [X8 + 0xE0]
	0x0330405C CBNZ W9, 0x3304068
	0x03304060 MOV X0, X8
	0x03304064 BL 0x1C16DFC
	0x03304068 MOV X0, X20
	0x0330406C MOV X1, X31
	0x03304070 BL 0x333C3F8
	0x03304074 CBZ X0, 0x3304094
	0x03304078 LDR X8, [X0]
	0x0330407C LDP X9, X1, [X8 + 0x198]
	0x03304080 BLR X9
	0x03304084 STR W0, [X19 + 0x28]
	0x03304088 LDP X20, X19, [X31 + 0x10]
	0x0330408C LDP X30, X21, [X31], #0x20
	0x03304090 RET
	0x03304094 BL 0x1C16F20
	0x03304098 STP X30, X21, [X31 - 0x20]!
	0x0330409C STP X20, X19, [X31 + 0x10]
	0x033040A0 ADRP X20, 0x10D8000
	0x033040A4 ADRP X21, 0xE1D000
	0x033040A8 LDRB W8, [X20 + 0xADB]
	0x033040AC LDR X21, [X21 + 0xAC0]
	0x033040B0 MOV X19, X0
	0x033040B4 TBNZ X8, 0x0, 0x33040D8
	0x033040B8 ADRP X0, 0xE1D000
	0x033040BC LDR X0, [X0 + 0xAC0]
	0x033040C0 BL 0x1C16CF4
	0x033040C4 ADRP X0, 0xE1D000
	0x033040C8 LDR X0, [X0 + 0xAA0]
	0x033040CC BL 0x1C16CF4
	0x033040D0 MOVZ W8, 0x1
	0x033040D4 STRB W8, [X20 + 0xADB]
	0x033040D8 MOV X20, X19
	0x033040DC LDR X0, [X20 + 0x10]!
	0x033040E0 LDR X1, [X21]
	0x033040E4 MOV X2, X31
	0x033040E8 BL 0x321BA08
	0x033040EC TBNZ X0, 0x0, 0x3304114
	0x033040F0 ADRP X8, 0xE1D000
	0x033040F4 LDR X8, [X8 + 0xAA0]
	0x033040F8 LDR X0, [X19 + 0x10]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 160
	015 Move [X29-52], W5
	016 Move [X29-152], W4
	017 NotImplemented "Instruction MRS not yet implemented."
	018 Move X8, [X22+40]
	019 Move X20, 0x10DA000
	020 Move X19, X3
	021 Move X28, X2
	022 Move [X29-8], X8
	023 Move W8, [X20+2765]
	024 Move X27, X1
	025 Move X21, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {65}
	030 Move X0, 0xDF3000
	031 Move X0, [X0+368]
	032 Call 0x1C17CF4
	033 Move X0, 0xE25000
	034 Move X0, [X0+2032]
	035 Call 0x1C17CF4
	036 Move X0, 0xDF2000
	037 Move X0, [X0+3672]
	038 Call 0x1C17CF4
	039 Move X0, 0xE25000
	040 Move X0, [X0+2248]
	041 Call 0x1C17CF4
	042 Move X0, 0xE25000
	043 Move X0, [X0+2024]
	044 Call 0x1C17CF4
	045 Move X0, 0xE20000
	046 Move X0, [X0+40]
	047 Call 0x1C17CF4
	048 Move X0, 0xE20000
	049 Move X0, [X0+472]
	050 Call 0x1C17CF4
	051 Move X0, 0xE25000
	052 Move X0, [X0+2256]
	053 Call 0x1C17CF4
	054 Move X0, 0xE20000
	055 Move X0, [X0+352]
	056 Call 0x1C17CF4
	057 Move X0, 0xE25000
	058 Move X0, [X0+2264]
	059 Call 0x1C17CF4
	060 Move X0, 0xE25000
	061 Move X0, [X0+2272]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X20+2765], W8
	065 Move W0, W31
	066 Move [X29-24], X31
	067 Move [X29-16], X31
	068 Move [X29-48], X31
	069 Move [X29-40], X31
	070 Compare W27, 0
	071 JumpIfEqual {436}
	072 Compare W19, 0
	073 JumpIfEqual {436}
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Subtract W25, W27, 1
	077 Move W0, 1
	078 Move X8, 0xE25000
	079 Move X8, [X8+2024]
	080 Move X8, [X8]
	081 Move X0, [X8+32]
	082 Move W8, [X0+309]
	083 Move TEMP, X8
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {88}
	087 Call 0x1C5D684
	088 Move X20, 0xE25000
	089 Move X20, [X20+2032]
	090 Add X26, X21, 2
	091 Move X0, [X20]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {97}
	095 Call 0x1C17DFC
	096 Move X0, [X20]
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 Move X8, [X0+184]
	099 And W31, W9, 1
	100 Move X9, 0xE20000
	101 Move X9, [X9+472]
	102 Add X10, X8, 8
	103 NotImplemented "Instruction CSEL not yet implemented."
	104 Move X0, [X8]
	105 Move X1, [X9]
	106 Call ReadOnlySpan`1<Char>.op_Implicit, X0
	107 Move X8, 0xE25000
	108 Move X8, [X8+2248]
	109 Move X2, X0
	110 Move X3, X1
	111 Move X0, X26
	112 Move X4, [X8]
	113 Move X1, X25
	114 Call 0x3308BFC
	115 Add W31, W0, 1
	116 Add X8, X31, 0
	117 Subtract X9, X8, 64
	118 Move [X29-160], X22
	119 Add X31, X9, 0
	120 Move X10, -42024960
	121 Move V1, [X10+464]
	122 NotImplemented "Instruction MOVI not yet implemented."
	123 Move [X8-32], V0
	124 Move [X8-24], V0
	125 Move [X8-64], V0
	126 Move [X8-56], V0
	127 Add X8, X31, 0
	128 Move [X29-24], X9
	129 Subtract X9, X8, 64
	130 Move [X29-16], D1
	131 Add X31, X9, 0
	132 Move [X8-32], V0
	133 Move [X8-24], V0
	134 Move [X8-64], V0
	135 Move [X8-56], V0
	136 Move [X8-64], W31
	137 Move W8, W27
	138 ShiftRight W8, 31
	139 And W8, W8, 0x3FFFFFFF
	140 Move [X29-92], W8
	141 Move W8, W31
	142 Move X24, W27
	143 Move W22, 1
	144 Move W10, W31
	145 Move [X29-148], W31
	146 Move [X29-48], X9
	147 Move [X29-40], D1
	148 Move [X29-72], X27
	149 Move [X29-64], X24
	150 Move [X29-88], X19
	151 Move [X29-80], X21
	152 NotImplemented "Instruction CMP not yet implemented."
	153 NotImplemented "Instruction LDRH not yet implemented."
	154 Add W0, W8, 1
	155 Move W12, W8
	156 NotImplemented "Instruction LDUR not yet implemented."
	157 Move W12, W8
	158 Subtract W8, W22, 1
	159 NotImplemented "Instruction CMP not yet implemented."
	160 NotImplemented "Instruction LDUR not yet implemented."
	161 NotImplemented "Instruction LDUR not yet implemented."
	162 Move W0, W12
	163 Move W10, [X10]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 NotImplemented "Instruction LDUR not yet implemented."
	166 NotImplemented "Instruction CMP not yet implemented."
	167 And W9, W10, 0xFFFF
	168 Move [X29-148], W10
	169 NotImplemented "Instruction CSET not yet implemented."
	170 NotImplemented "Instruction CSET not yet implemented."
	171 NotImplemented "Instruction CMP not yet implemented."
	172 NotImplemented "Instruction CSET not yet implemented."
	173 Move [X29-116], W12
	174 NotImplemented "Instruction CSET not yet implemented."
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Or W13, W9, W11
	177 And W9, W10, W9
	178 Move W14, W31
	179 NotImplemented "Instruction CSET not yet implemented."
	180 Xor W9, W9, 1
	181 Move W8, W31
	182 Or W11, W12, W11
	183 NotImplemented "Instruction CSEL not yet implemented."
	184 Move X1, W22
	185 Or W9, W10, W9
	186 Move W22, W14
	187 Move [X29-120], W13
	188 Move [X29-100], W11
	189 Move [X29-96], W9
	190 Move [X29-144], X14
	191 Move [X29-136], X1
	192 Move [X29-104], W0
	193 Move X15, W8
	194 NotImplemented "Instruction CMP not yet implemented."
	195 NotImplemented "Instruction CSEL not yet implemented."
	196 Move [X29-128], X8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 NotImplemented "Instruction LDUR not yet implemented."
	200 NotImplemented "Instruction CMP not yet implemented."
	201 NotImplemented "Instruction LDUR not yet implemented."
	202 Move [X29-112], X15
	203 Move W8, [X8]
	204 Add W9, W8, 1
	205 Add W10, W8, 2
	206 NotImplemented "Instruction CMP not yet implemented."
	207 NotImplemented "Instruction CSINC not yet implemented."
	208 NotImplemented "Instruction SBFM not yet implemented."
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X23, W8
	211 NotImplemented "Instruction CMP not yet implemented."
	212 NotImplemented "Instruction LDUR not yet implemented."
	213 NotImplemented "Instruction LDRH not yet implemented."
	214 Subtract W9, W8, 2
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move X20, 0xDF2000
	217 Move X20, [X20+3672]
	218 Move W27, W8
	219 ShiftRight W27, 31
	220 And W27, W27, 0x3FFFFFFF
	221 Move W1, W27
	222 Move X0, [X20]
	223 Call 0x1C17D6C
	224 Move X24, 0xE25000
	225 Move X24, [X24+2272]
	226 Move X1, [X24]
	227 Call Span`1<Int32>.op_Implicit, X0
	228 Move X8, 0xE25000
	229 Move X8, [X8+2256]
	230 Move X19, X28
	231 Move X28, X0
	232 Move X21, X1
	233 Move X3, [X8]
	234 Subtract X0, X29, 24
	235 Move X1, X28
	236 Move X2, X21
	237 Call Span`1<Int32>.CopyTo, X0, X1
	238 Move X0, [X20]
	239 Move W1, W27
	240 Move [X29-24], X28
	241 Move [X29-16], X21
	242 Move X28, X19
	243 Call 0x1C17D6C
	244 Move X1, [X24]
	245 Call Span`1<Int32>.op_Implicit, X0
	246 Move X8, 0xE25000
	247 Move X8, [X8+2256]
	248 Move X21, X0
	249 Move X27, X1
	250 Subtract X0, X29, 48
	251 Move X3, [X8]
	252 Move X1, X21
	253 Move X2, X27
	254 Call Span`1<Int32>.CopyTo, X0, X1
	255 Move [X29-48], X21
	256 Move [X29-40], X27
	257 Move X21, [X29-80]
	258 Move X27, [X29-72]
	259 NotImplemented "Instruction LDUR not yet implemented."
	260 NotImplemented "Instruction LDUR not yet implemented."
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Move W8, W23
	263 ShiftRight W8, 31
	264 And W8, W8, 0x3FFFFFFF
	265 NotImplemented "Instruction CMP not yet implemented."
	266 NotImplemented "Instruction LDUR not yet implemented."
	267 Move TEMP, X9
	268 And TEMP, TEMP, 1
	269 Compare TEMP, 1
	270 JumpIfNotEqual {283}
	271 NotImplemented "Instruction LDUR not yet implemented."
	272 Move TEMP, X9
	273 And TEMP, TEMP, 1
	274 Compare TEMP, 1
	275 JumpIfEqual {282}
	276 NotImplemented "Instruction LDUR not yet implemented."
	277 NotImplemented "Instruction CMP not yet implemented."
	278 NotImplemented "Instruction LDRH not yet implemented."
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Add W9, W9, 1
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Move W9, W31
	283 NotImplemented "Instruction CMP not yet implemented."
	284 NotImplemented "Instruction LDUR not yet implemented."
	285 Move TEMP, X9
	286 And TEMP, TEMP, 1
	287 Compare TEMP, 1
	288 JumpIfNotEqual {294}
	289 NotImplemented "Instruction LDUR not yet implemented."
	290 Move TEMP, X9
	291 And TEMP, TEMP, 1
	292 Compare TEMP, 1
	293 JumpIfEqual {320}
	294 NotImplemented "Instruction CMP not yet implemented."
	295 NotImplemented "Instruction LDUR not yet implemented."
	296 Move TEMP, X9
	297 And TEMP, TEMP, 1
	298 Compare TEMP, 1
	299 JumpIfNotEqual {337}
	300 NotImplemented "Instruction LDUR not yet implemented."
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Move W9, 1
	303 NotImplemented "Instruction LDUR not yet implemented."
	304 Or W9, W9, W10
	305 Compare W9, 0
	306 JumpIfEqual {313}
	307 NotImplemented "Instruction LDUR not yet implemented."
	308 NotImplemented "Instruction CMP not yet implemented."
	309 NotImplemented "Instruction LDUR not yet implemented."
	310 Add W10, W22, 1
	311 Move [X9], W8
	312 Move W22, W10
	313 NotImplemented "Instruction LDUR not yet implemented."
	314 NotImplemented "Instruction CMP not yet implemented."
	315 NotImplemented "Instruction LDUR not yet implemented."
	316 Add W10, W22, 1
	317 Or W8, W8, 1
	318 Move [X9], W8
	319 Move W22, W10
	320 Add X23, X23, 1
	321 NotImplemented "Instruction CMP not yet implemented."
	322 NotImplemented "Instruction LDUR not yet implemented."
	323 NotImplemented "Instruction CMP not yet implemented."
	324 NotImplemented "Instruction LDUR not yet implemented."
	325 NotImplemented "Instruction LDUR not yet implemented."
	326 Add W9, W22, 1
	327 Move [X8], W10
	328 Move W22, W9
	329 NotImplemented "Instruction CMP not yet implemented."
	330 NotImplemented "Instruction LDUR not yet implemented."
	331 NotImplemented "Instruction LDUR not yet implemented."
	332 NotImplemented "Instruction LDUR not yet implemented."
	333 Add X15, X15, 1
	334 NotImplemented "Instruction CMP not yet implemented."
	335 NotImplemented "Instruction LDUR not yet implemented."
	336 NotImplemented "Instruction CMP not yet implemented."
	337 NotImplemented "Instruction CMP not yet implemented."
	338 Add W8, W23, 1
	339 NotImplemented "Instruction CMP not yet implemented."
	340 NotImplemented "Instruction LDUR not yet implemented."
	341 NotImplemented "Instruction CMP not yet implemented."
	342 NotImplemented "Instruction LDUR not yet implemented."
	343 NotImplemented "Instruction LDUR not yet implemented."
	344 Add W9, W22, 1
	345 Move [X8], W10
	346 NotImplemented "Instruction LDUR not yet implemented."
	347 And W9, W9, 0xFFFF
	348 NotImplemented "Instruction CMP not yet implemented."
	349 NotImplemented "Instruction LDUR not yet implemented."
	350 NotImplemented "Instruction CMP not yet implemented."
	351 NotImplemented "Instruction LDUR not yet implemented."
	352 Add W8, W8, 2
	353 Add W10, W22, 1
	354 Move [X9], W8
	355 Move W22, W10
	356 NotImplemented "Instruction LDRH not yet implemented."
	357 Move W8, W8
	358 ShiftRight W8, 31
	359 And W8, W8, 0x3FFFFFFF
	360 NotImplemented "Instruction LDUR not yet implemented."
	361 NotImplemented "Instruction CMP not yet implemented."
	362 NotImplemented "Instruction CMP not yet implemented."
	363 Add W20, W8, 2
	364 NotImplemented "Instruction LDUR not yet implemented."
	365 NotImplemented "Instruction CMP not yet implemented."
	366 NotImplemented "Instruction LDUR not yet implemented."
	367 Add W9, W22, 1
	368 Move [X8], W20
	369 Move W22, W9
	370 Move W8, [X29-152]
	371 Move W9, [X29-148]
	372 Move TEMP, X8
	373 And TEMP, TEMP, 1
	374 Compare TEMP, 1
	375 JumpIfNotEqual {391}
	376 Move X8, 0xDF3000
	377 Move X8, [X8+368]
	378 Move X0, [X8]
	379 Move W8, [X0+224]
	380 Compare W8, 0
	381 JumpIfNotEqual {383}
	382 Call 0x1C17DFC
	383 Move W0, W26
	384 Move X1, X31
	385 Call Char.ToUpperInvariant, X0
	386 And W23, W0, 0xFFFF
	387 NotImplemented "Instruction LDUR not yet implemented."
	388 Move X1, X31
	389 Call Char.ToUpperInvariant, X0
	390 NotImplemented "Instruction CMP not yet implemented."
	391 NotImplemented "Instruction CMP not yet implemented."
	392 NotImplemented "Instruction LDUR not yet implemented."
	393 NotImplemented "Instruction LDUR not yet implemented."
	394 NotImplemented "Instruction LDUR not yet implemented."
	395 NotImplemented "Instruction LDUR not yet implemented."
	396 NotImplemented "Instruction LDUR not yet implemented."
	397 Move X13, W8
	398 Move X14, W22
	399 Move W8, W15
	400 NotImplemented "Instruction CMP not yet implemented."
	401 NotImplemented "Instruction CSEL not yet implemented."
	402 NotImplemented "Instruction CMP not yet implemented."
	403 NotImplemented "Instruction CMP not yet implemented."
	404 Move W16, [X12]
	405 Move W17, [X11]
	406 NotImplemented "Instruction CMP not yet implemented."
	407 Add W8, W8, 1
	408 NotImplemented "Instruction CMP not yet implemented."
	409 Move W8, W9
	410 Add X13, X13, 1
	411 NotImplemented "Instruction CMP not yet implemented."
	412 Move W9, W22
	413 Move [X29-144], X9
	414 Compare W22, 0
	415 JumpIfEqual {434}
	416 Move X8, [X29-48]
	417 Move X9, [X29-40]
	418 NotImplemented "Instruction LDUR not yet implemented."
	419 NotImplemented "Instruction LDUR not yet implemented."
	420 Move [X29-24], X8
	421 Move [X29-16], X9
	422 NotImplemented "Instruction CMP not yet implemented."
	423 Move W8, W0
	424 Move [X29-48], V0
	425 NotImplemented "Instruction LDUR not yet implemented."
	426 Subtract W8, W22, 1
	427 NotImplemented "Instruction LDUR not yet implemented."
	428 NotImplemented "Instruction CMP not yet implemented."
	429 NotImplemented "Instruction LDUR not yet implemented."
	430 Move W8, [X9]
	431 NotImplemented "Instruction LDUR not yet implemented."
	432 NotImplemented "Instruction CMP not yet implemented."
	433 NotImplemented "Instruction CSET not yet implemented."
	434 NotImplemented "Instruction LDUR not yet implemented."
	435 Move W0, W31
	436 Move X8, [X22+40]
	437 NotImplemented "Instruction LDUR not yet implemented."
	438 NotImplemented "Instruction CMP not yet implemented."
	439 And W0, W0, 1
	440 Add X31, X29, 0
	441 Move X20, [X31+80]
	442 Move X19, [X31+88]
	443 Move X22, [X31+64]
	444 Move X21, [X31+72]
	445 Move X24, [X31+48]
	446 Move X23, [X31+56]
	447 Move X26, [X31+32]
	448 Move X25, [X31+40]
	449 Move X28, [X31+16]
	450 Move X27, [X31+24]
	451 Move X29, [X31+96]
	452 Move X30, [X31+104]
	453 Return X0
	454 NotImplemented "Instruction CMP not yet implemented."
	455 NotImplemented "Instruction LDUR not yet implemented."
	456 Move X0, X28
	457 Move X1, X19
	458 Move X2, X26
	459 And W31, W8, 1
	460 Move W8, 4
	461 NotImplemented "Instruction CINC not yet implemented."
	462 Move X3, X25
	463 Move X5, X31
	464 Call MemoryExtensions.EndsWith, X0, X1, X2
	465 Call 0x1C17F28
	466 Call 0x3EB2B20

Method: System.Void .cctor()

Disassembly:
	0x033040FC MOV X2, X31
	0x03304100 LDR X1, [X8]
	0x03304104 BL 0x321BA08
	0x03304108 ADD X8, X19, 0x18
	0x0330410C ANDS W31, W0, 0x1
	0x03304110 CSEL X20, X20, X8, NE
	0x03304114 LDR X0, [X20]
	0x03304118 LDP X20, X19, [X31 + 0x10]
	0x0330411C LDP X30, X21, [X31], #0x20
	0x03304120 RET
	0x03304124 LDR X8, [X0]
	0x03304128 MOV W3, W31
	0x0330412C LDP X5, X4, [X8 + 0x1A8]
	0x03304130 BR X5
	0x03304134 SUB X31, X31, 0x50
	0x03304138 STR X30, [X31 + 0x10]
	0x0330413C STP X24, X23, [X31 + 0x20]
	0x03304140 STP X22, X21, [X31 + 0x30]
	0x03304144 STP X20, X19, [X31 + 0x40]
	0x03304148 ADRP X23, 0x10D8000
	0x0330414C LDRB W8, [X23 + 0xADC]
	0x03304150 MOV W21, W3
	0x03304154 MOV X19, X2
	0x03304158 MOV X20, X1
	0x0330415C MOV X22, X0
	0x03304160 TBNZ X8, 0x0, 0x3304184
	0x03304164 ADRP X0, 0xE1D000
	0x03304168 LDR X0, [X0 + 0xFD0]
	0x0330416C BL 0x1C16CF4
	0x03304170 ADRP X0, 0xE23000
	0x03304174 LDR X0, [X0 + 0x930]
	0x03304178 BL 0x1C16CF4
	0x0330417C MOVZ W8, 0x1
	0x03304180 STRB W8, [X23 + 0xADC]
	0x03304184 MOVZ W8, 0x10000000
	0x03304188 CMP W21, W8
	0x0330418C B.NE 0x33041B8
	0x03304190 MOV X0, X20
	0x03304194 MOV X1, X19
	0x03304198 LDP X20, X19, [X31 + 0x40]
	0x0330419C LDP X22, X21, [X31 + 0x30]
	0x033041A0 LDP X24, X23, [X31 + 0x20]
	0x033041A4 LDR X30, [X31 + 0x10]
	0x033041A8 MOVZ W2, 0x5
	0x033041AC MOV X3, X31
	0x033041B0 ADD X31, X31, 0x50
	0x033041B4 B 0x322590C
	0x033041B8 TBNZ X21, 0x1E, 0x33042D8
	0x033041BC MOVZ W8, 0xFFE0
	0x033041C0 MOVK W8, 0xDFFF0000
	0x033041C4 ANDS W31, W21, W8, 0x0
	0x033041C8 B.NE 0x3304358
	0x033041CC CBZ X20, 0x3304308
	0x033041D0 CBZ X19, 0x3304314

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x10D9000
	007 Move X21, 0xDF9000
	008 Move X19, 0xE24000
	009 Move X20, 0xE24000
	010 Move W8, [X22+2766]
	011 Move X21, [X21+2264]
	012 Move X19, [X19+2280]
	013 Move X20, [X20+2032]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xDF9000
	019 Move X0, [X0+2264]
	020 Call 0x1C17CF4
	021 Move X0, 0xE24000
	022 Move X0, [X0+2032]
	023 Call 0x1C17CF4
	024 Move X0, 0xE24000
	025 Move X0, [X0+2280]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+2766], W8
	029 Move X0, [X21]
	030 Move W1, 5
	031 Call 0x1C17D6C
	032 Move X1, [X19]
	033 Move X2, X31
	034 Move X19, X0
	035 Call RuntimeHelpers.InitializeArray, X0, X1
	036 Move X8, [X20]
	037 Move W1, 2
	038 Move X8, [X8+184]
	039 Move [X8], X19
	040 Move X0, [X21]
	041 Call 0x1C17D6C
	042 Compare X0, 0
	043 JumpIfEqual {62}
	044 Move W8, [X0+24]
	045 Compare W8, 0
	046 JumpIfEqual {61}
	047 Move W9, 42
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction STRH not yet implemented."
	050 Move W8, 63
	051 NotImplemented "Instruction STRH not yet implemented."
	052 Move X8, [X20]
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X8, [X8+184]
	058 Move [X8+8], X0
	059 Move X30, [X31+48]
	060 Return 
	061 Call 0x1C17F28
	062 Call 0x1C17F20

