Type: System.IO.Enumeration.FileSystemEntry

Method: System.IO.FileAttributes Initialize(ref System.IO.Enumeration.FileSystemEntry entry, Interop/Sys/DirectoryEntry directoryEntry, System.ReadOnlySpan`1<System.Char> directory, System.ReadOnlySpan`1<System.Char> rootDirectory, System.ReadOnlySpan`1<System.Char> originalRootDirectory, System.Span`1<System.Char> pathBuffer)

Disassembly:
	0x03302058 MOV X0, X19
	0x0330205C MOV X2, X31
	0x03302060 BL 0x3316014
	0x03302064 ADRP X0, 0xE25000
	0x03302068 LDR X0, [X0 + 0x840]
	0x0330206C BL 0x1C16D08
	0x03302070 MOV X1, X0
	0x03302074 MOV X0, X19
	0x03302078 BL 0x1C16DEC
	0x0330207C STP X30, X25, [X31 - 0x40]!
	0x03302080 STP X24, X23, [X31 + 0x10]
	0x03302084 STP X22, X21, [X31 + 0x20]
	0x03302088 STP X20, X19, [X31 + 0x30]
	0x0330208C ADRP X25, 0x10DA000
	0x03302090 ADRP X24, 0xE25000
	0x03302094 LDRB W8, [X25 + 0xACC]
	0x03302098 LDR X24, [X24 + 0x7F0]
	0x0330209C MOV W21, W4
	0x033020A0 MOV X19, X3
	0x033020A4 MOV X20, X2
	0x033020A8 MOV X22, X1
	0x033020AC MOV X23, X0
	0x033020B0 TBNZ X8, 0x0, 0x33020C8
	0x033020B4 ADRP X0, 0xE25000
	0x033020B8 LDR X0, [X0 + 0x7F0]
	0x033020BC BL 0x1C16CF4
	0x033020C0 MOVZ W8, 0x1
	0x033020C4 STRB W8, [X25 + 0xACC]
	0x033020C8 LDR X0, [X24]
	0x033020CC LDR W8, [X0 + 0xE0]
	0x033020D0 CBNZ W8, 0x33020D8
	0x033020D4 BL 0x1C16DFC
	0x033020D8 AND W4, W21, 0x1
	0x033020DC MOV X0, X23
	0x033020E0 MOV X1, X22
	0x033020E4 MOV X2, X20
	0x033020E8 MOV X3, X19
	0x033020EC LDP X20, X19, [X31 + 0x30]
	0x033020F0 LDP X22, X21, [X31 + 0x20]
	0x033020F4 LDP X24, X23, [X31 + 0x10]
	0x033020F8 MOV W5, W31
	0x033020FC LDP X30, X25, [X31], #0x40
	0x03302100 B 0x33029C4
	0x03302104 STP X30, X25, [X31 - 0x40]!
	0x03302108 STP X24, X23, [X31 + 0x10]
	0x0330210C STP X22, X21, [X31 + 0x20]
	0x03302110 STP X20, X19, [X31 + 0x30]
	0x03302114 ADRP X25, 0x10DA000
	0x03302118 ADRP X24, 0xE25000
	0x0330211C LDRB W8, [X25 + 0xACB]
	0x03302120 LDR X24, [X24 + 0x7F0]
	0x03302124 MOV W23, W4
	0x03302128 MOV X19, X3
	0x0330212C MOV X20, X2
	0x03302130 MOV X21, X1
	0x03302134 MOV X22, X0
	0x03302138 TBNZ X8, 0x0, 0x3302150
	0x0330213C ADRP X0, 0xE25000
	0x03302140 LDR X0, [X0 + 0x7F0]
	0x03302144 BL 0x1C16CF4
	0x03302148 MOVZ W8, 0x1
	0x0330214C STRB W8, [X25 + 0xACB]
	0x03302150 LDR X0, [X24]
	0x03302154 LDR W8, [X0 + 0xE0]
	0x03302158 CBNZ W8, 0x3302160
	0x0330215C BL 0x1C16DFC
	0x03302160 AND W4, W23, 0x1
	0x03302164 MOV X0, X22
	0x03302168 MOV X1, X21
	0x0330216C MOV X2, X20
	0x03302170 MOV X3, X19
	0x03302174 LDP X20, X19, [X31 + 0x30]
	0x03302178 LDP X22, X21, [X31 + 0x20]
	0x0330217C LDP X24, X23, [X31 + 0x10]
	0x03302180 MOVZ W5, 0x1
	0x03302184 LDP X30, X25, [X31], #0x40
	0x03302188 B 0x33029C4
	0x0330218C STP X30, X27, [X31 - 0x50]!
	0x03302190 STP X26, X25, [X31 + 0x10]
	0x03302194 STP X24, X23, [X31 + 0x20]
	0x03302198 STP X22, X21, [X31 + 0x30]
	0x0330219C STP X20, X19, [X31 + 0x40]
	0x033021A0 ADRP X20, 0x10DA000
	0x033021A4 ADRP X23, 0xE25000
	0x033021A8 LDRB W8, [X20 + 0xAC2]
	0x033021AC LDR X23, [X23 + 0x848]
	0x033021B0 MOV X21, X2
	0x033021B4 MOV X22, X1
	0x033021B8 MOV X19, X0
	0x033021BC TBNZ X8, 0x0, 0x3302234
	0x033021C0 ADRP X0, 0xE25000
	0x033021C4 LDR X0, [X0 + 0x850]
	0x033021C8 BL 0x1C16CF4
	0x033021CC ADRP X0, 0xE25000
	0x033021D0 LDR X0, [X0 + 0x858]
	0x033021D4 BL 0x1C16CF4
	0x033021D8 ADRP X0, 0xE25000
	0x033021DC LDR X0, [X0 + 0x860]
	0x033021E0 BL 0x1C16CF4
	0x033021E4 ADRP X0, 0xE25000
	0x033021E8 LDR X0, [X0 + 0x868]
	0x033021EC BL 0x1C16CF4
	0x033021F0 ADRP X0, 0xE25000
	0x033021F4 LDR X0, [X0 + 0x870]
	0x033021F8 BL 0x1C16CF4
	0x033021FC ADRP X0, 0xE25000
	0x03302200 LDR X0, [X0 + 0x878]
	0x03302204 BL 0x1C16CF4
	0x03302208 ADRP X0, 0xE25000
	0x0330220C LDR X0, [X0 + 0x880]
	0x03302210 BL 0x1C16CF4
	0x03302214 ADRP X0, 0xE25000
	0x03302218 LDR X0, [X0 + 0x848]
	0x0330221C BL 0x1C16CF4
	0x03302220 ADRP X0, 0xE25000
	0x03302224 LDR X0, [X0 + 0x888]
	0x03302228 BL 0x1C16CF4
	0x0330222C MOVZ W8, 0x1
	0x03302230 STRB W8, [X20 + 0xAC2]
	0x03302234 LDR X0, [X23]
	0x03302238 BL 0x1C16F10
	0x0330223C MOV X1, X31
	0x03302240 MOV X20, X0
	0x03302244 BL 0x33BDD8C
	0x03302248 CBZ X20, 0x330234C
	0x0330224C ADRP X23, 0xE25000
	0x03302250 LDR X23, [X23 + 0x888]
	0x03302254 STP X22, X21, [X20 + 0x10]
	0x03302258 LDR X0, [X23]
	0x0330225C LDR W8, [X0 + 0xE0]
	0x03302260 CBNZ W8, 0x330226C
	0x03302264 BL 0x1C16DFC
	0x03302268 LDR X0, [X23]
	0x0330226C LDR X8, [X0 + 0xB8]
	0x03302270 ADRP X27, 0xE25000
	0x03302274 ADRP X26, 0xE25000
	0x03302278 ADRP X25, 0xE25000
	0x0330227C ADRP X24, 0xE25000
	0x03302280 LDR X21, [X8 + 0x8]
	0x03302284 LDR X27, [X27 + 0x860]
	0x03302288 LDR X26, [X26 + 0x850]
	0x0330228C LDR X25, [X25 + 0x868]
	0x03302290 LDR X24, [X24 + 0x880]
	0x03302294 CBNZ X21, 0x33022E8
	0x03302298 LDR W8, [X0 + 0xE0]
	0x0330229C CBNZ W8, 0x33022A8
	0x033022A0 BL 0x1C16DFC
	0x033022A4 LDR X0, [X23]
	0x033022A8 ADRP X9, 0xE25000
	0x033022AC LDR X8, [X0 + 0xB8]
	0x033022B0 LDR X9, [X9 + 0x870]
	0x033022B4 LDR X22, [X8]
	0x033022B8 LDR X0, [X9]
	0x033022BC BL 0x1C16F10
	0x033022C0 ADRP X8, 0xE25000
	0x033022C4 LDR X8, [X8 + 0x878]
	0x033022C8 MOV X1, X22
	0x033022CC MOV X3, X31

ISIL:
	001 Subtract X31, X31, 336
	002 Move [X31+240], X29
	003 Move [X31+248], X30
	004 Move [X31+256], X28
	005 Move [X31+264], X27
	006 Move [X31+272], X26
	007 Move [X31+280], X25
	008 Move [X31+288], X24
	009 Move [X31+296], X23
	010 Move [X31+304], X22
	011 Move [X31+312], X21
	012 Move [X31+320], X20
	013 Move [X31+328], X19
	014 Move X8, 0x10DB000
	015 Move X23, 0xE26000
	016 Move X27, [X31+336]
	017 Move X25, [X31+344]
	018 Move W8, [X8+2748]
	019 Move X20, [X31+352]
	020 Move X29, [X31+360]
	021 Move X23, [X23+2016]
	022 Move X21, X2
	023 Move X22, X1
	024 Move X19, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {48}
	029 Move X0, 0xE26000
	030 Move X0, [X0+2016]
	031 Move X23, X6
	032 Move X24, X5
	033 Move X26, X4
	034 Move X28, X3
	035 Call 0x1C17CF4
	036 Move X0, 0xE1D000
	037 Move X0, [X0+3448]
	038 Call 0x1C17CF4
	039 Move X6, X23
	040 Move X23, 0xE26000
	041 Move X23, [X23+2016]
	042 Move X3, X28
	043 Move X4, X26
	044 Move X5, X24
	045 Move W8, 1
	046 Move X11, 0x10DB000
	047 Move [X11+2748], W8
	048 NotImplemented "Instruction MOVI not yet implemented."
	049 Move [X31+208], V0
	050 Move [X31+216], V0
	051 Move [X31+176], V0
	052 Move [X31+184], V0
	053 Move [X31+144], V0
	054 Move [X31+152], V0
	055 Move [X31+112], V0
	056 Move [X31+120], V0
	057 Move [X31+80], V0
	058 Move [X31+88], V0
	059 Move [X31+48], V0
	060 Move [X31+56], V0
	061 Move [X31+16], V0
	062 Move [X31+24], V0
	063 Move [X19], X22
	064 Move [X19+8], X21
	065 Move [X19+704], X3
	066 Move [X19+712], X4
	067 Move [X19+720], X5
	068 Move [X19+728], X6
	069 Move [X19+736], X27
	070 Move [X19+744], X25
	071 Move [X19+136], X20
	072 Move [X19+144], X29
	073 Move X0, [X23]
	074 Call ReadOnlySpan`1<Char>.get_Empty
	075 Move [X19+152], X0
	076 Move [X19+160], X1
	077 Move X0, [X23]
	078 Call ReadOnlySpan`1<Char>.get_Empty
	079 Move X24, X21
	080 ShiftRight X24, 32
	081 And X24, X24, 0x7FFFFFFF
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X25, X22
	084 Move [X19+168], X0
	085 Move [X19+176], X1
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Compare W24, 0
	088 JumpIfNotEqual {131}
	089 Move X0, X19
	090 Call FileSystemEntry.get_FullPath, X0
	091 Move X20, 0xE1D000
	092 Move X20, [X20+3448]
	093 Move X21, X0
	094 Move X22, X1
	095 Move X0, [X20]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Add X2, X31, 128
	101 Move X0, X21
	102 Move X1, X22
	103 Move X3, X31
	104 Call Sys.Stat, X0, X1
	105 Move TEMP, X0
	106 And TEMP, TEMP, -2147483648
	107 Compare TEMP, -2147483648
	108 JumpIfNotEqual {127}
	109 Move X0, X19
	110 Call FileSystemEntry.get_FullPath, X0
	111 Move X21, X0
	112 Move X0, [X20]
	113 Move X22, X1
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1C17DFC
	118 Add X2, X31, 128
	119 Move X0, X21
	120 Move X1, X22
	121 Move X3, X31
	122 Call Sys.LStat, X0, X1
	123 Move TEMP, X0
	124 And TEMP, TEMP, -2147483648
	125 Compare TEMP, -2147483648
	126 JumpIfEqual {131}
	127 Move W8, [X31+132]
	128 And W8, W8, 0xF000
	129 NotImplemented "Instruction CMP not yet implemented."
	130 NotImplemented "Instruction CSET not yet implemented."
	131 Move W23, W31
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Compare W24, 0
	134 JumpIfNotEqual {163}
	135 Move X0, X19
	136 Call FileSystemEntry.get_FullPath, X0
	137 Move X8, 0xE1D000
	138 Move X8, [X8+3448]
	139 Move X21, X0
	140 Move X22, X1
	141 Move X0, [X8]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Add X2, X31, 16
	147 Move X0, X21
	148 Move X1, X22
	149 Move X3, X31
	150 Call Sys.LStat, X0, X1
	151 Move TEMP, X0
	152 And TEMP, TEMP, -2147483648
	153 Compare TEMP, -2147483648
	154 JumpIfEqual {163}
	155 Move W8, [X31+20]
	156 And W8, W8, 0xF000
	157 NotImplemented "Instruction CMP not yet implemented."
	158 NotImplemented "Instruction CSET not yet implemented."
	159 Move W8, W8
	160 ShiftRight W8, 22
	161 And W8, W8, 0x1FFFFF
	162 Move W23, 1
	163 Move W8, W31
	164 Move W8, 1024
	165 NotImplemented "Instruction MOVI not yet implemented."
	166 Move TEMP, 0
	167 Not TEMP
	168 Move W9, TEMP
	169 Move [X19+128], X31
	170 Move [X19+132], W23
	171 Move [X19+128], W9
	172 Move [X19+96], V0
	173 Move [X19+104], V0
	174 Move [X19+64], V0
	175 Move [X19+72], V0
	176 Move [X19+32], V0
	177 Move [X19+40], V0
	178 Move [X19+1], V0
	179 Move W10, [X25]
	180 Or W9, W8, 16
	181 NotImplemented "Instruction CMP not yet implemented."
	182 NotImplemented "Instruction CSEL not yet implemented."
	183 Or W9, W8, 2
	184 NotImplemented "Instruction CMP not yet implemented."
	185 NotImplemented "Instruction CSEL not yet implemented."
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move W9, 128
	188 NotImplemented "Instruction CSEL not yet implemented."
	189 Move [X19+696], W0
	190 Move X20, [X31+320]
	191 Move X19, [X31+328]
	192 Move X22, [X31+304]
	193 Move X21, [X31+312]
	194 Move X24, [X31+288]
	195 Move X23, [X31+296]
	196 Move X26, [X31+272]
	197 Move X25, [X31+280]
	198 Move X28, [X31+256]
	199 Move X27, [X31+264]
	200 Move X29, [X31+240]
	201 Move X30, [X31+248]
	202 Add X31, X31, 336
	203 Return X0

Method: System.ReadOnlySpan`1<System.Char> get_FullPath()

Disassembly:
	0x033022D0 MOV X21, X0
	0x033022D4 LDR X2, [X8]
	0x033022D8 BL 0x2D1EEB4
	0x033022DC LDR X8, [X23]
	0x033022E0 LDR X8, [X8 + 0xB8]
	0x033022E4 STR X21, [X8 + 0x8]
	0x033022E8 LDR X0, [X27]
	0x033022EC LDR X23, [X20 + 0x18]
	0x033022F0 BL 0x1C16F10
	0x033022F4 LDR X4, [X26]
	0x033022F8 MOV X1, X19
	0x033022FC MOV X2, X21
	0x03302300 MOV X3, X23
	0x03302304 MOV X22, X0
	0x03302308 BL 0x2D1B79C
	0x0330230C LDR X0, [X25]
	0x03302310 BL 0x1C16F10
	0x03302314 LDR X2, [X24]
	0x03302318 MOV X1, X20
	0x0330231C MOV X3, X31
	0x03302320 MOV X19, X0
	0x03302324 BL 0x2D1ED54
	0x03302328 CBZ X22, 0x330234C
	0x0330232C STR X19, [X22 + 0x30]
	0x03302330 MOV X0, X22
	0x03302334 LDP X20, X19, [X31 + 0x40]
	0x03302338 LDP X22, X21, [X31 + 0x30]
	0x0330233C LDP X24, X23, [X31 + 0x20]
	0x03302340 LDP X26, X25, [X31 + 0x10]
	0x03302344 LDP X30, X27, [X31], #0x50
	0x03302348 RET
	0x0330234C BL 0x1C16F20
	0x03302350 MOV X1, X31
	0x03302354 B 0x33BDD8C
	0x03302358 STP X30, X27, [X31 - 0x50]!
	0x0330235C STP X26, X25, [X31 + 0x10]
	0x03302360 STP X24, X23, [X31 + 0x20]
	0x03302364 STP X22, X21, [X31 + 0x30]
	0x03302368 STP X20, X19, [X31 + 0x40]
	0x0330236C ADRP X20, 0x10DA000
	0x03302370 ADRP X23, 0xE25000
	0x03302374 LDRB W8, [X20 + 0xAC3]
	0x03302378 LDR X23, [X23 + 0x890]
	0x0330237C MOV X21, X2
	0x03302380 MOV X22, X1
	0x03302384 MOV X19, X0
	0x03302388 TBNZ X8, 0x0, 0x3302400
	0x0330238C ADRP X0, 0xE25000
	0x03302390 LDR X0, [X0 + 0x850]
	0x03302394 BL 0x1C16CF4
	0x03302398 ADRP X0, 0xE25000
	0x0330239C LDR X0, [X0 + 0x858]
	0x033023A0 BL 0x1C16CF4
	0x033023A4 ADRP X0, 0xE25000
	0x033023A8 LDR X0, [X0 + 0x860]
	0x033023AC BL 0x1C16CF4
	0x033023B0 ADRP X0, 0xE25000
	0x033023B4 LDR X0, [X0 + 0x868]
	0x033023B8 BL 0x1C16CF4
	0x033023BC ADRP X0, 0xE25000
	0x033023C0 LDR X0, [X0 + 0x870]
	0x033023C4 BL 0x1C16CF4
	0x033023C8 ADRP X0, 0xE25000
	0x033023CC LDR X0, [X0 + 0x898]
	0x033023D0 BL 0x1C16CF4
	0x033023D4 ADRP X0, 0xE25000
	0x033023D8 LDR X0, [X0 + 0x8A0]
	0x033023DC BL 0x1C16CF4
	0x033023E0 ADRP X0, 0xE25000
	0x033023E4 LDR X0, [X0 + 0x890]
	0x033023E8 BL 0x1C16CF4
	0x033023EC ADRP X0, 0xE25000
	0x033023F0 LDR X0, [X0 + 0x888]
	0x033023F4 BL 0x1C16CF4
	0x033023F8 MOVZ W8, 0x1
	0x033023FC STRB W8, [X20 + 0xAC3]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x10DB000
	011 Move W8, [X20+2749]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xE19000
	018 Move X0, [X0+464]
	019 Call 0x1C17CF4
	020 Move X0, 0xE21000
	021 Move X0, [X0+40]
	022 Call 0x1C17CF4
	023 Move X0, 0xE20000
	024 Move X0, [X0+2128]
	025 Call 0x1C17CF4
	026 Move X0, 0xE20000
	027 Move X0, [X0+2136]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+2749], W8
	031 Move [X31+12], W31
	032 Move W8, [X19+160]
	033 Compare W8, 0
	034 JumpIfEqual {37}
	035 Move X0, [X19+152]
	036 Move X1, [X19+160]
	037 Move X20, [X19+704]
	038 Move X21, [X19+712]
	039 Move X0, X19
	040 Call FileSystemEntry.get_FileName, X0
	041 Move X8, 0xE19000
	042 Move X8, [X8+464]
	043 Move X22, X0
	044 Move X23, [X19+136]
	045 Move X24, [X19+144]
	046 Move X25, X1
	047 Move X0, [X8]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Add X6, X31, 12
	053 Move X0, X20
	054 Move X1, X21
	055 Move X2, X22
	056 Move X3, X25
	057 Move X4, X23
	058 Move X5, X24
	059 Call Path.TryJoin, X0, X1, X2, X3
	060 Move X9, 0xE20000
	061 Move W20, [X31+12]
	062 Move W8, [X19+144]
	063 Move X9, [X9+2128]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X21, [X9]
	066 Move X0, X31
	067 Call ThrowHelper.ThrowArgumentOutOfRangeException
	068 Move X0, [X21+32]
	069 Move X21, [X19+136]
	070 Move W8, [X0+309]
	071 Move TEMP, X8
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {76}
	075 Call 0x1C5D684
	076 Move X8, 0xE20000
	077 Move X8, [X8+2136]
	078 Move X0, X21
	079 Move X1, X20
	080 Move X2, [X8]
	081 Call Span`1<Char>.op_Implicit, X0
	082 Move [X19+152], X0
	083 Move [X19+160], X1
	084 Move X20, [X31+64]
	085 Move X19, [X31+72]
	086 Move X22, [X31+48]
	087 Move X21, [X31+56]
	088 Move X24, [X31+32]
	089 Move X23, [X31+40]
	090 Move X30, [X31+16]
	091 Move X25, [X31+24]
	092 Add X31, X31, 80
	093 Return X0

Method: System.ReadOnlySpan`1<System.Char> get_FileName()

Disassembly:
	0x03302400 LDR X0, [X23]
	0x03302404 BL 0x1C16F10
	0x03302408 MOV X1, X31
	0x0330240C MOV X20, X0
	0x03302410 BL 0x33BDD8C
	0x03302414 CBZ X20, 0x3302518
	0x03302418 ADRP X23, 0xE25000
	0x0330241C LDR X23, [X23 + 0x888]
	0x03302420 STP X22, X21, [X20 + 0x10]
	0x03302424 LDR X0, [X23]
	0x03302428 LDR W8, [X0 + 0xE0]
	0x0330242C CBNZ W8, 0x3302438
	0x03302430 BL 0x1C16DFC
	0x03302434 LDR X0, [X23]
	0x03302438 LDR X8, [X0 + 0xB8]
	0x0330243C ADRP X27, 0xE25000
	0x03302440 ADRP X26, 0xE25000
	0x03302444 ADRP X25, 0xE25000
	0x03302448 ADRP X24, 0xE25000
	0x0330244C LDR X21, [X8 + 0x10]
	0x03302450 LDR X27, [X27 + 0x860]
	0x03302454 LDR X26, [X26 + 0x850]
	0x03302458 LDR X25, [X25 + 0x868]
	0x0330245C LDR X24, [X24 + 0x8A0]
	0x03302460 CBNZ X21, 0x33024B4
	0x03302464 LDR W8, [X0 + 0xE0]
	0x03302468 CBNZ W8, 0x3302474
	0x0330246C BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10DB000
	005 Move W8, [X20+2750]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xE21000
	012 Move X0, [X0+40]
	013 Call 0x1C17CF4
	014 Move X0, 0xE21000
	015 Move X0, [X0+1256]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2750], W8
	019 Move W8, [X19+8]
	020 Compare W8, 0
	021 JumpIfEqual {32}
	022 Move W8, [X19+176]
	023 Compare W8, 0
	024 JumpIfNotEqual {32}
	025 Add X1, X19, 184
	026 Move W2, 256
	027 Move X0, X19
	028 Move X3, X31
	029 Call DirectoryEntry.GetName, X0, X1
	030 Move [X19+168], X0
	031 Move [X19+176], X1
	032 Move X0, [X19+168]
	033 Move X1, [X19+176]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return X0

Method: System.ReadOnlySpan`1<System.Char> get_Directory()

Disassembly:
	0x03302470 LDR X0, [X23]
	0x03302474 ADRP X9, 0xE25000
	0x03302478 LDR X8, [X0 + 0xB8]
	0x0330247C LDR X9, [X9 + 0x870]

ISIL:
	001 Move X8, [X0+704]
	002 Move X1, [X0+712]
	003 Move X0, X8
	004 Return X0

Method: System.Void set_Directory(System.ReadOnlySpan`1<System.Char> value)

Disassembly:
	0x03302480 LDR X22, [X8]
	0x03302484 LDR X0, [X9]
	0x03302488 BL 0x1C16F10

ISIL:
	001 Move [X0+704], X1
	002 Move [X0+712], X2
	003 Return 

Method: System.ReadOnlySpan`1<System.Char> get_RootDirectory()

Disassembly:
	0x0330248C ADRP X8, 0xE25000
	0x03302490 LDR X8, [X8 + 0x898]
	0x03302494 MOV X1, X22
	0x03302498 MOV X3, X31

ISIL:
	001 Move X8, [X0+720]
	002 Move X1, [X0+728]
	003 Move X0, X8
	004 Return X0

Method: System.Void set_RootDirectory(System.ReadOnlySpan`1<System.Char> value)

Disassembly:
	0x0330249C MOV X21, X0
	0x033024A0 LDR X2, [X8]
	0x033024A4 BL 0x2D1EEB4

ISIL:
	001 Move [X0+720], X1
	002 Move [X0+728], X2
	003 Return 

Method: System.ReadOnlySpan`1<System.Char> get_OriginalRootDirectory()

Disassembly:
	0x033024A8 LDR X8, [X23]
	0x033024AC LDR X8, [X8 + 0xB8]
	0x033024B0 STR X21, [X8 + 0x10]
	0x033024B4 LDR X0, [X27]

ISIL:
	001 Move X8, [X0+736]
	002 Move X1, [X0+744]
	003 Move X0, X8
	004 Return X0

Method: System.Void set_OriginalRootDirectory(System.ReadOnlySpan`1<System.Char> value)

Disassembly:
	0x033024B8 LDR X23, [X20 + 0x18]
	0x033024BC BL 0x1C16F10
	0x033024C0 LDR X4, [X26]

ISIL:
	001 Move [X0+736], X1
	002 Move [X0+744], X2
	003 Return 

Method: System.IO.FileAttributes get_Attributes()

Disassembly:
	0x033024C4 MOV X1, X19
	0x033024C8 MOV X2, X21
	0x033024CC MOV X3, X23
	0x033024D0 MOV X22, X0
	0x033024D4 BL 0x2D1B79C
	0x033024D8 LDR X0, [X25]
	0x033024DC BL 0x1C16F10
	0x033024E0 LDR X2, [X24]
	0x033024E4 MOV X1, X20
	0x033024E8 MOV X3, X31
	0x033024EC MOV X19, X0
	0x033024F0 BL 0x2D1ED54
	0x033024F4 CBZ X22, 0x3302518
	0x033024F8 STR X19, [X22 + 0x30]
	0x033024FC MOV X0, X22
	0x03302500 LDP X20, X19, [X31 + 0x40]
	0x03302504 LDP X22, X21, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, [X0+696]
	005 Add X19, X0, 16
	006 Call FileSystemEntry.get_FullPath, X0
	007 Move X2, X0
	008 Move X4, X1
	009 Move W3, 1
	010 Move X0, X19
	011 Move X1, X2
	012 Move X2, X4
	013 Call FileStatus.IsReadOnly, X0, X1, X2
	014 And W8, W0, 1
	015 Or W0, W20, W8
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Return X0

Method: System.Boolean get_IsDirectory()

Disassembly:
	0x03302508 LDP X24, X23, [X31 + 0x20]
	0x0330250C LDP X26, X25, [X31 + 0x10]

ISIL:
	001 Move W0, [X0+132]
	002 Return X0

Method: System.String ToSpecifiedFullPath()

Disassembly:
	0x03302510 LDP X30, X27, [X31], #0x50
	0x03302514 RET
	0x03302518 BL 0x1C16F20
	0x0330251C MOV X1, X31
	0x03302520 B 0x33BDD8C
	0x03302524 STP X30, X27, [X31 - 0x50]!
	0x03302528 STP X26, X25, [X31 + 0x10]
	0x0330252C STP X24, X23, [X31 + 0x20]
	0x03302530 STP X22, X21, [X31 + 0x30]
	0x03302534 STP X20, X19, [X31 + 0x40]
	0x03302538 ADRP X20, 0x10DA000
	0x0330253C ADRP X23, 0xE25000
	0x03302540 LDRB W8, [X20 + 0xAC4]
	0x03302544 LDR X23, [X23 + 0x8A8]
	0x03302548 MOV X21, X2
	0x0330254C MOV X22, X1
	0x03302550 MOV X19, X0
	0x03302554 TBNZ X8, 0x0, 0x33025CC
	0x03302558 ADRP X0, 0xE25000
	0x0330255C LDR X0, [X0 + 0x850]
	0x03302560 BL 0x1C16CF4
	0x03302564 ADRP X0, 0xE25000
	0x03302568 LDR X0, [X0 + 0x858]
	0x0330256C BL 0x1C16CF4
	0x03302570 ADRP X0, 0xE25000
	0x03302574 LDR X0, [X0 + 0x860]
	0x03302578 BL 0x1C16CF4
	0x0330257C ADRP X0, 0xE25000
	0x03302580 LDR X0, [X0 + 0x868]
	0x03302584 BL 0x1C16CF4
	0x03302588 ADRP X0, 0xE25000
	0x0330258C LDR X0, [X0 + 0x870]
	0x03302590 BL 0x1C16CF4
	0x03302594 ADRP X0, 0xE25000
	0x03302598 LDR X0, [X0 + 0x8B0]
	0x0330259C BL 0x1C16CF4
	0x033025A0 ADRP X0, 0xE25000
	0x033025A4 LDR X0, [X0 + 0x8B8]
	0x033025A8 BL 0x1C16CF4
	0x033025AC ADRP X0, 0xE25000
	0x033025B0 LDR X0, [X0 + 0x8A8]
	0x033025B4 BL 0x1C16CF4
	0x033025B8 ADRP X0, 0xE25000
	0x033025BC LDR X0, [X0 + 0x888]
	0x033025C0 BL 0x1C16CF4
	0x033025C4 MOVZ W8, 0x1
	0x033025C8 STRB W8, [X20 + 0xAC4]
	0x033025CC LDR X0, [X23]
	0x033025D0 BL 0x1C16F10
	0x033025D4 MOV X1, X31
	0x033025D8 MOV X20, X0
	0x033025DC BL 0x33BDD8C
	0x033025E0 CBZ X20, 0x33026E4
	0x033025E4 ADRP X23, 0xE25000
	0x033025E8 LDR X23, [X23 + 0x888]
	0x033025EC STP X22, X21, [X20 + 0x10]
	0x033025F0 LDR X0, [X23]
	0x033025F4 LDR W8, [X0 + 0xE0]
	0x033025F8 CBNZ W8, 0x3302604
	0x033025FC BL 0x1C16DFC
	0x03302600 LDR X0, [X23]
	0x03302604 LDR X8, [X0 + 0xB8]
	0x03302608 ADRP X27, 0xE25000
	0x0330260C ADRP X26, 0xE25000
	0x03302610 ADRP X25, 0xE25000
	0x03302614 ADRP X24, 0xE25000
	0x03302618 LDR X21, [X8 + 0x18]
	0x0330261C LDR X27, [X27 + 0x860]
	0x03302620 LDR X26, [X26 + 0x850]
	0x03302624 LDR X25, [X25 + 0x868]
	0x03302628 LDR X24, [X24 + 0x8B8]
	0x0330262C CBNZ X21, 0x3302680
	0x03302630 LDR W8, [X0 + 0xE0]
	0x03302634 CBNZ W8, 0x3302640
	0x03302638 BL 0x1C16DFC
	0x0330263C LDR X0, [X23]
	0x03302640 ADRP X9, 0xE25000
	0x03302644 LDR X8, [X0 + 0xB8]
	0x03302648 LDR X9, [X9 + 0x870]
	0x0330264C LDR X22, [X8]
	0x03302650 LDR X0, [X9]
	0x03302654 BL 0x1C16F10
	0x03302658 ADRP X8, 0xE25000
	0x0330265C LDR X8, [X8 + 0x8B0]
	0x03302660 MOV X1, X22
	0x03302664 MOV X3, X31
	0x03302668 MOV X21, X0
	0x0330266C LDR X2, [X8]
	0x03302670 BL 0x2D1EEB4
	0x03302674 LDR X8, [X23]
	0x03302678 LDR X8, [X8 + 0xB8]
	0x0330267C STR X21, [X8 + 0x18]
	0x03302680 LDR X0, [X27]
	0x03302684 LDR X23, [X20 + 0x18]
	0x03302688 BL 0x1C16F10

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x10DB000
	011 Move X24, 0xE26000
	012 Move W8, [X20+2751]
	013 Move X24, [X24+2024]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0xE1D000
	020 Move X0, [X0+3440]
	021 Call 0x1C17CF4
	022 Move X0, 0xE19000
	023 Move X0, [X0+464]
	024 Call 0x1C17CF4
	025 Move X0, 0xE26000
	026 Move X0, [X0+2024]
	027 Call 0x1C17CF4
	028 Move X0, 0xE21000
	029 Move X0, [X0+40]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+2751], W8
	033 Move W8, [X19+712]
	034 Move X25, [X19+728]
	035 Move X21, [X19+704]
	036 Move X22, [X24]
	037 Subtract W20, W8, W25
	038 Move X0, X31
	039 Call ThrowHelper.ThrowArgumentOutOfRangeException
	040 Move X0, [X22+32]
	041 Move X26, 0xE1D000
	042 Move W8, [X0+309]
	043 Move X26, [X26+3440]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {49}
	048 Call 0x1C5D684
	049 Move X0, [X26]
	050 Move X22, [X19+736]
	051 Move X23, [X19+744]
	052 Move X9, X25
	053 ShiftRight X9, 32
	054 And X9, X9, 0x7FFFFFFF
	055 Move W8, [X0+224]
	056 Add X21, X21, X9
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X25, 0xE19000
	061 Move X25, [X25+464]
	062 Move X0, X22
	063 Move X1, X23
	064 Move X2, X31
	065 Call PathInternal.EndsInDirectorySeparator, X0
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {97}
	070 Move X0, [X26]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X0, X21
	076 Move X1, X20
	077 Move X2, X31
	078 Call PathInternal.StartsWithDirectorySeparator, X0
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {97}
	083 Move X22, [X24]
	084 Compare W20, 0
	085 JumpIfNotEqual {88}
	086 Move X0, X31
	087 Call ThrowHelper.ThrowArgumentOutOfRangeException
	088 Move X0, [X22+32]
	089 Move W8, [X0+309]
	090 Move TEMP, X8
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {95}
	094 Call 0x1C5D684
	095 Subtract W20, W20, 1
	096 Add X21, X21, 2
	097 Move X22, [X19+736]
	098 Move X23, [X19+744]
	099 Move X0, X19
	100 Call FileSystemEntry.get_FileName, X0
	101 Move X19, X0
	102 Move X0, [X25]
	103 Move X24, X1
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Move X0, X22
	109 Move X1, X23
	110 Move X2, X21
	111 Move X3, X20
	112 Move X4, X19
	113 Move X5, X24
	114 Move X20, [X31+64]
	115 Move X19, [X31+72]
	116 Move X22, [X31+48]
	117 Move X21, [X31+56]
	118 Move X24, [X31+32]
	119 Move X23, [X31+40]
	120 Move X26, [X31+16]
	121 Move X25, [X31+24]
	122 Move X30, [X31+80]
	123 Call Path.Join, X0, X1, X2
	124 Return X0

