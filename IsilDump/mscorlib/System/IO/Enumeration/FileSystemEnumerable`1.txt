Type: System.IO.Enumeration.FileSystemEnumerable`1

Method: System.Void .ctor(System.String directory, System.IO.Enumeration.FileSystemEnumerable`1/FindTransform<TResult> transform, System.IO.EnumerationOptions options = null)

Disassembly:
	0x02D1C79C CMP W2, 0x0
	0x02D1C7A0 CSEL X8, X31, X8, EQ
	0x02D1C7A4 B 0x2D1C7AC
	0x02D1C7A8 MOV W2, W31
	0x02D1C7AC LDR X9, [X1 + 0x20]
	0x02D1C7B0 MOV X1, X8
	0x02D1C7B4 LDR X9, [X9 + 0xC0]
	0x02D1C7B8 LDR X3, [X9 + 0x40]
	0x02D1C7BC B 0x2D1C7C0
	0x02D1C7C0 STR X30, [X31 - 0x40]!
	0x02D1C7C4 STP X24, X23, [X31 + 0x10]
	0x02D1C7C8 STP X22, X21, [X31 + 0x20]
	0x02D1C7CC STP X20, X19, [X31 + 0x30]
	0x02D1C7D0 ADRP X24, 0x16BF000
	0x02D1C7D4 ADRP X23, 0x1402000
	0x02D1C7D8 LDRB W8, [X24 + 0x7CE]
	0x02D1C7DC LDR X23, [X23 + 0xD78]
	0x02D1C7E0 MOV X19, X3
	0x02D1C7E4 MOV W21, W2
	0x02D1C7E8 MOV X22, X1
	0x02D1C7EC MOV X20, X0
	0x02D1C7F0 TBNZ X8, 0x0, 0x2D1C808
	0x02D1C7F4 ADRP X0, 0x1402000
	0x02D1C7F8 LDR X0, [X0 + 0xD78]
	0x02D1C7FC BL 0x1C16CF4
	0x02D1C800 MOVZ W8, 0x1
	0x02D1C804 STRB W8, [X24 + 0x7CE]
	0x02D1C808 LDR X0, [X23]
	0x02D1C80C LDR X24, [X20 + 0x38]
	0x02D1C810 ADD X23, X20, 0x50
	0x02D1C814 LDR W8, [X0 + 0xE0]
	0x02D1C818 CBNZ W8, 0x2D1C820
	0x02D1C81C BL 0x1C16DFC
	0x02D1C820 MOV X0, X24
	0x02D1C824 MOV X1, X22
	0x02D1C828 MOV W2, W21
	0x02D1C82C MOV X3, X23
	0x02D1C830 MOV X4, X31
	0x02D1C834 BL 0x32099F8
	0x02D1C838 CBZ W0, 0x2D1C8B4
	0x02D1C83C MOV W21, W0
	0x02D1C840 ADDS W31, W0, 0x1
	0x02D1C844 B.NE 0x2D1C86C
	0x02D1C848 LDR X8, [X19 + 0x20]
	0x02D1C84C MOV X0, X20
	0x02D1C850 LDP X20, X19, [X31 + 0x30]
	0x02D1C854 LDP X22, X21, [X31 + 0x20]
	0x02D1C858 LDR X8, [X8 + 0xC0]
	0x02D1C85C LDP X24, X23, [X31 + 0x10]
	0x02D1C860 LDR X1, [X8 + 0x68]
	0x02D1C864 LDR X30, [X31], #0x40
	0x02D1C868 B 0x2D1CC94
	0x02D1C86C ADD X0, X31, 0x8
	0x02D1C870 MOV W1, W21
	0x02D1C874 MOV X2, X31
	0x02D1C878 STR X31, [X31 + 0x8]
	0x02D1C87C BL 0x3209700
	0x02D1C880 LDR X8, [X19 + 0x20]
	0x02D1C884 LDR X1, [X31 + 0x8]
	0x02D1C888 MOV X0, X20
	0x02D1C88C MOV W2, W31
	0x02D1C890 LDR X8, [X8 + 0xC0]
	0x02D1C894 LDR X3, [X8 + 0x38]
	0x02D1C898 BL 0x2D1BFFC
	0x02D1C89C TBZ X0, 0x0, 0x2D1C8C8
	0x02D1C8A0 LDR X8, [X19 + 0x20]
	0x02D1C8A4 MOV X0, X20
	0x02D1C8A8 LDR X8, [X8 + 0xC0]
	0x02D1C8AC LDR X1, [X8 + 0x68]
	0x02D1C8B0 BL 0x2D1CC94
	0x02D1C8B4 LDP X20, X19, [X31 + 0x30]
	0x02D1C8B8 LDP X22, X21, [X31 + 0x20]
	0x02D1C8BC LDP X24, X23, [X31 + 0x10]
	0x02D1C8C0 LDR X30, [X31], #0x40
	0x02D1C8C4 RET
	0x02D1C8C8 ADD X0, X31, 0x8
	0x02D1C8CC MOV W1, W21
	0x02D1C8D0 MOV X2, X31
	0x02D1C8D4 STR X31, [X31 + 0x8]
	0x02D1C8D8 BL 0x3209700
	0x02D1C8DC LDR X1, [X20 + 0x30]
	0x02D1C8E0 LDR X0, [X31 + 0x8]
	0x02D1C8E4 MOVZ W2, 0x1
	0x02D1C8E8 MOV X3, X31
	0x02D1C8EC BL 0x3208FE8
	0x02D1C8F0 MOV X1, X19
	0x02D1C8F4 BL 0x1C16DEC
	0x02D1C8F8 STR X30, [X31 - 0x30]!
	0x02D1C8FC STP X22, X21, [X31 + 0x10]
	0x02D1C900 STP X20, X19, [X31 + 0x20]
	0x02D1C904 ADRP X21, 0x16BF000
	0x02D1C908 LDRB W8, [X21 + 0x7CF]
	0x02D1C90C MOV X19, X1
	0x02D1C910 MOV X20, X0
	0x02D1C914 TBNZ X8, 0x0, 0x2D1C938
	0x02D1C918 ADRP X0, 0x1402000
	0x02D1C91C LDR X0, [X0 + 0xDA0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x16C0000
	009 Move W8, [X24+1992]
	010 Move X19, X4
	011 Move X21, X3
	012 Move X22, X2
	013 Move X23, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x1403000
	020 Move X0, [X0+3384]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+1992], W8
	024 Move X0, X20
	025 Move X1, X31
	026 Call Object..ctor, X0
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CSEL not yet implemented."
	029 Compare X23, 0
	030 JumpIfEqual {96}
	031 Compare X8, 0
	032 JumpIfEqual {95}
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move [X8+40], X23
	035 NotImplemented "Instruction CSEL not yet implemented."
	036 Compare X22, 0
	037 JumpIfEqual {103}
	038 Compare X8, 0
	039 JumpIfEqual {95}
	040 Move [X8+24], X22
	041 Compare X21, 0
	042 JumpIfNotEqual {67}
	043 Move X21, 0x1403000
	044 Move X21, [X21+3384]
	045 Move X0, [X21]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X22, 0x16C0000
	051 Move W8, [X22+2037]
	052 Compare W8, 0
	053 JumpIfNotEqual {59}
	054 Move X0, 0x1403000
	055 Move X0, [X0+3384]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X22+2037], W8
	059 Move X0, [X21]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X21]
	065 Move X8, [X0+184]
	066 Move X21, [X8+16]
	067 Compare X20, 0
	068 JumpIfEqual {95}
	069 Move [X20+32], X21
	070 Move X8, [X19+32]
	071 Move X8, [X8+192]
	072 Move X0, [X8+16]
	073 Move W8, [X0+309]
	074 Move TEMP, X8
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {79}
	078 Call 0x1C5D684
	079 Call 0x1C17F10
	080 Move X8, [X19+32]
	081 Move X1, X20
	082 Move X19, X0
	083 Move X8, [X8+192]
	084 Move X2, [X8+24]
	085 Call 0x29B51E4, X0, X1
	086 Move [X20+16], X19
	087 Move X20, [X31+48]
	088 Move X19, [X31+56]
	089 Move X22, [X31+32]
	090 Move X21, [X31+40]
	091 Move X24, [X31+16]
	092 Move X23, [X31+24]
	093 Move X30, [X31+64]
	094 Return 
	095 Call 0x1C17F20
	096 Move X0, 0x13DD000
	097 Move X0, [X0+1320]
	098 Call 0x1C17D08
	099 Call 0x1C17F10
	100 Move X20, X0
	101 Move X0, 0x1403000
	102 Move X0, [X0+3392]
	103 Move X0, 0x13DD000
	104 Move X0, [X0+1320]
	105 Call 0x1C17D08
	106 Call 0x1C17F10
	107 Move X20, X0
	108 Move X0, 0x1403000
	109 Move X0, [X0+3400]
	110 Call 0x1C17D08
	111 Move X1, X0
	112 Move X0, X20
	113 Move X2, X31
	114 Call ArgumentNullException..ctor, X0, X1
	115 Move X0, X20
	116 Move X1, X19
	117 Call 0x1C17DEC

Method: System.IO.Enumeration.FileSystemEnumerable`1/FindPredicate<TResult> get_ShouldIncludePredicate()

Disassembly:
	0x02D1C920 BL 0x1C16CF4
	0x02D1C924 ADRP X0, 0x1402000

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_ShouldIncludePredicate(System.IO.Enumeration.FileSystemEnumerable`1/FindPredicate<TResult> value)

Disassembly:
	0x02D1C928 LDR X0, [X0 + 0xDA8]
	0x02D1C92C BL 0x1C16CF4

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.IO.Enumeration.FileSystemEnumerable`1/FindPredicate<TResult> get_ShouldRecursePredicate()

Disassembly:
	0x02D1C930 MOVZ W8, 0x1
	0x02D1C934 STRB W8, [X21 + 0x7CF]

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Collections.Generic.IEnumerator`1<TResult> GetEnumerator()

Disassembly:
	0x02D1C938 MOV X0, X31
	0x02D1C93C MOV X1, X31
	0x02D1C940 MOV X2, X31
	0x02D1C944 STR X31, [X20 + 0x38]
	0x02D1C948 BL 0x33BE5B0
	0x02D1C94C TBZ X0, 0x0, 0x2D1C9AC
	0x02D1C950 ADRP X22, 0x1402000
	0x02D1C954 LDR X22, [X22 + 0xDA0]
	0x02D1C958 MOVZ W21, 0x1
	0x02D1C95C LDR X0, [X20 + 0x48]
	0x02D1C960 CBZ X0, 0x2D1C9B4
	0x02D1C964 LDR W8, [X0 + 0x20]
	0x02D1C968 CBZ W8, 0x2D1C9B4
	0x02D1C96C LDR X1, [X22]
	0x02D1C970 BL 0x24F18D4
	0x02D1C974 STR X0, [X20 + 0x30]
	0x02D1C978 LDR X8, [X19 + 0x20]
	0x02D1C97C MOV X1, X0
	0x02D1C980 MOVZ W2, 0x1
	0x02D1C984 MOV X0, X20
	0x02D1C988 LDR X8, [X8 + 0xC0]
	0x02D1C98C LDR X3, [X8 + 0x8]
	0x02D1C990 BL 0x2D1C114
	0x02D1C994 MOV X1, X31
	0x02D1C998 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X19, X0
	006 Add X0, X0, 16
	007 Move X1, X31
	008 Call 0x1C252E8
	009 Compare X0, 0
	010 JumpIfNotEqual {28}
	011 Move X8, [X20+32]
	012 Move X8, [X8+192]
	013 Move X0, [X8+16]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Call 0x1C17F10
	021 Move X8, [X20+32]
	022 Move X1, X19
	023 Move X20, X0
	024 Move X8, [X8+192]
	025 Move X2, [X8+24]
	026 Call 0x29B51E4, X0, X1
	027 Move X0, X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x02D1C99C STR X0, [X20 + 0x38]
	0x02D1C9A0 BL 0x33BE5B0
	0x02D1C9A4 TBNZ X0, 0x0, 0x2D1C95C
	0x02D1C9A8 B 0x2D1C9B8

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+56]
	004 Call 0x2D1C938, X0
	005 Return X0

