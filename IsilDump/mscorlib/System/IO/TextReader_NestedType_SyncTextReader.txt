Type: System.IO.TextReader/SyncTextReader

Method: System.Void .ctor(System.IO.TextReader t)

Disassembly:
	0x032EAA2C MOV X0, X19
	0x032EAA30 BL 0x1C16DEC
	0x032EAA34 STP X30, X19, [X31 - 0x10]!
	0x032EAA38 LDR X8, [X0 + 0x28]
	0x032EAA3C CBNZ X8, 0x32EAA70
	0x032EAA40 MOV X19, X0
	0x032EAA44 BL 0x32EA6DC
	0x032EAA48 ADD X0, X19, 0x48
	0x032EAA4C MOV X1, X31
	0x032EAA50 BL 0x33EB198
	0x032EAA54 LDR X8, [X19 + 0x40]
	0x032EAA58 CMP X0, X8
	0x032EAA5C B.GT 0x32EAAA4
	0x032EAA60 LDR X8, [X19 + 0x30]
	0x032EAA64 ADD X0, X0, X8
	0x032EAA68 LDP X30, X19, [X31], #0x10
	0x032EAA6C RET
	0x032EAA70 ADRP X0, 0xE09000
	0x032EAA74 LDR X0, [X0 + 0xB40]
	0x032EAA78 BL 0x1C16D08
	0x032EAA7C BL 0x1C16F10
	0x032EAA80 MOV X19, X0
	0x032EAA84 ADRP X0, 0xE3C000
	0x032EAA88 LDR X0, [X0 + 0xF28]
	0x032EAA8C BL 0x1C16D08
	0x032EAA90 MOV X1, X0
	0x032EAA94 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10F3000
	007 Move X22, 0xE3D000
	008 Move W8, [X21+2524]
	009 Move X22, [X22+3584]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE3D000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2524], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X31
	028 Call MarshalByRefObject..ctor, X0
	029 Move [X20+24], X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x032EAB6C LDP X22, X21, [X31 + 0x10]
	0x032EAB70 ADD X1, X8, 0x20
	0x032EAB74 LDP X30, X23, [X31], #0x30
	0x032EAB78 B 0x32E5D50
	0x032EAB7C ADRP X0, 0xE0E000
	0x032EAB80 LDR X0, [X0 + 0x528]
	0x032EAB84 BL 0x1C16D08
	0x032EAB88 BL 0x1C16F10
	0x032EAB8C MOV X19, X0
	0x032EAB90 ADRP X0, 0xE34000
	0x032EAB94 LDR X0, [X0 + 0xF48]
	0x032EAB98 BL 0x1C16D08
	0x032EAB9C MOV X20, X0
	0x032EABA0 ADRP X0, 0xE3C000
	0x032EABA4 LDR X0, [X0 + 0xC40]
	0x032EABA8 BL 0x1C16D08
	0x032EABAC MOV X2, X0
	0x032EABB0 MOV X0, X19
	0x032EABB4 MOV X1, X20
	0x032EABB8 MOV X3, X31
	0x032EABBC BL 0x3315F7C
	0x032EABC0 B 0x32EAC5C
	0x032EABC4 ADRP X0, 0xE11000
	0x032EABC8 LDR X0, [X0 + 0x760]
	0x032EABCC BL 0x1C16D08
	0x032EABD0 BL 0x1C16F10
	0x032EABD4 MOV X19, X0
	0x032EABD8 ADRP X0, 0xE38000
	0x032EABDC LDR X0, [X0 + 0xD90]
	0x032EABE0 B 0x32EAC00
	0x032EABE4 ADRP X0, 0xE11000
	0x032EABE8 LDR X0, [X0 + 0x760]
	0x032EABEC BL 0x1C16D08
	0x032EABF0 BL 0x1C16F10
	0x032EABF4 MOV X19, X0
	0x032EABF8 ADRP X0, 0xE31000
	0x032EABFC LDR X0, [X0 + 0x648]
	0x032EAC00 BL 0x1C16D08
	0x032EAC04 MOV X20, X0
	0x032EAC08 ADRP X0, 0xE31000
	0x032EAC0C LDR X0, [X0 + 0x670]
	0x032EAC10 BL 0x1C16D08
	0x032EAC14 MOV X2, X0
	0x032EAC18 MOV X0, X19
	0x032EAC1C MOV X1, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10F3000
	006 Move W8, [X21+2525]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE0A000
	014 Move X0, [X0+3584]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2525], W8
	018 Move TEMP, X19
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {41}
	022 Move X19, [X20+24]
	023 Compare X19, 0
	024 JumpIfEqual {57}
	025 Move X10, 0xE0A000
	026 Move X8, [X19]
	027 Move X10, [X10+3584]
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 Move X1, [X10]
	030 Compare X9, 0
	031 JumpIfEqual {38}
	032 Move X10, [X8+176]
	033 Add X10, X10, 8
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Subtract X9, X9, 1
	037 Add X10, X10, 16
	038 Move X0, X19
	039 Move W2, W31
	040 Call 0x1C5D788
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return 
	046 NotImplemented "Instruction LDRSW not yet implemented."
	047 Add X8, X8, X9
	048 Add X0, X8, 312
	049 Move X2, [X0]
	050 Move X1, [X0+8]
	051 Move X0, X19
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 CallNoReturn X2
	057 Call 0x1C17F20

Method: System.Int32 Peek()

Disassembly:
	0x032EAC20 MOV X3, X31
	0x032EAC24 BL 0x3311888
	0x032EAC28 B 0x32EAC5C
	0x032EAC2C ADRP X0, 0xE11000
	0x032EAC30 LDR X0, [X0 + 0x578]
	0x032EAC34 BL 0x1C16D08
	0x032EAC38 BL 0x1C16F10
	0x032EAC3C MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+440]
	007 Move X1, [X8+448]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Int32 Read()

Disassembly:
	0x032EAC40 ADRP X0, 0xE31000
	0x032EAC44 LDR X0, [X0 + 0x760]
	0x032EAC48 BL 0x1C16D08
	0x032EAC4C MOV X1, X0
	0x032EAC50 MOV X0, X19
	0x032EAC54 MOV X2, X31
	0x032EAC58 BL 0x3314A68
	0x032EAC5C ADRP X0, 0xE3C000

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+456]
	007 Move X1, [X8+464]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Int32 Read(System.Char[] buffer, System.Int32 index, System.Int32 count)

Disassembly:
	0x032EAC60 LDR X0, [X0 + 0xF40]
	0x032EAC64 BL 0x1C16D08
	0x032EAC68 MOV X1, X0
	0x032EAC6C MOV X0, X19
	0x032EAC70 BL 0x1C16DEC
	0x032EAC74 STR X30, [X31 - 0x40]!
	0x032EAC78 STP X24, X23, [X31 + 0x10]
	0x032EAC7C STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X5, [X8+472]
	007 Move X4, [X8+480]
	008 Move X30, [X31+16]
	009 CallNoReturn X5
	010 Call 0x1C17F20

Method: System.String ReadLine()

Disassembly:
	0x032EAC80 STP X20, X19, [X31 + 0x30]
	0x032EAC84 ADRP X24, 0x10F2000
	0x032EAC88 ADRP X22, 0xE3C000
	0x032EAC8C ADRP X23, 0xE09000
	0x032EAC90 LDRB W8, [X24 + 0x9EE]
	0x032EAC94 LDR X22, [X22 + 0xF48]
	0x032EAC98 LDR X23, [X23 + 0x6C0]
	0x032EAC9C MOV X19, X2

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+504]
	007 Move X1, [X8+512]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.String ReadToEnd()

Disassembly:
	0x032EACA0 MOV X20, X1
	0x032EACA4 MOV X21, X0
	0x032EACA8 TBNZ X8, 0x0, 0x32EACCC
	0x032EACAC ADRP X0, 0xE09000
	0x032EACB0 LDR X0, [X0 + 0x6C0]
	0x032EACB4 BL 0x1C16CF4
	0x032EACB8 ADRP X0, 0xE3C000
	0x032EACBC LDR X0, [X0 + 0xF48]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+488]
	007 Move X1, [X8+496]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

