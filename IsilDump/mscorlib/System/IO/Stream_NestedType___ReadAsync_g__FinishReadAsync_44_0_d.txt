Type: System.IO.Stream/<<ReadAsync>g__FinishReadAsync|44_0>d

Method: System.Void MoveNext()

Disassembly:
	0x032F53EC LDR X0, [X0 + 0x8D8]
	0x032F53F0 BL 0x1C16CF4
	0x032F53F4 MOVZ W8, 0x1
	0x032F53F8 STRB W8, [X20 + 0xA67]
	0x032F53FC LDR X0, [X19 + 0x10]
	0x032F5400 CBZ X0, 0x32F55A4
	0x032F5404 LDR X8, [X0]
	0x032F5408 LDP X9, X1, [X8 + 0x1B8]
	0x032F540C BLR X9
	0x032F5410 TBZ X0, 0x0, 0x32F5430
	0x032F5414 LDR X0, [X19 + 0x10]
	0x032F5418 CBZ X0, 0x32F55A4
	0x032F541C LDR X8, [X0]
	0x032F5420 LDP X9, X1, [X8 + 0x1F8]
	0x032F5424 BLR X9
	0x032F5428 MOV X20, X0
	0x032F542C B 0x32F5434
	0x032F5430 MOV X20, X31
	0x032F5434 LDR X8, [X19 + 0x28]
	0x032F5438 CBNZ X8, 0x32F5454
	0x032F543C ADRP X8, 0xDFE000
	0x032F5440 LDR X8, [X8 + 0x618]
	0x032F5444 MOVZ W1, 0x80
	0x032F5448 LDR X0, [X8]
	0x032F544C BL 0x1C16D6C
	0x032F5450 STR X0, [X19 + 0x28]
	0x032F5454 LDR X8, [X19 + 0x30]
	0x032F5458 CBNZ X8, 0x32F5474
	0x032F545C ADRP X8, 0xE07000
	0x032F5460 LDR X8, [X8 + 0x8D8]
	0x032F5464 MOVZ W1, 0x1
	0x032F5468 LDR X0, [X8]
	0x032F546C BL 0x1C16D6C
	0x032F5470 STR X0, [X19 + 0x30]
	0x032F5474 MOV W0, W31
	0x032F5478 MOVZ W22, 0x1
	0x032F547C CBNZ W0, 0x32F5530
	0x032F5480 LDRB W23, [X19 + 0x44]
	0x032F5484 LDR X0, [X19 + 0x10]
	0x032F5488 CMP W23, 0x0
	0x032F548C CINC W21, W22, NE
	0x032F5490 CBZ X0, 0x32F55A4
	0x032F5494 LDR X8, [X0]
	0x032F5498 LDR X9, [X8 + 0x378]
	0x032F549C LDR X1, [X8 + 0x380]
	0x032F54A0 BLR X9
	0x032F54A4 LDR X8, [X19 + 0x28]
	0x032F54A8 CBZ X8, 0x32F55A4
	0x032F54AC LDR W9, [X8 + 0x18]
	0x032F54B0 CBZ W9, 0x32F5554
	0x032F54B4 ADDS W31, W0, 0x1
	0x032F54B8 STRB W0, [X8 + 0x20]
	0x032F54BC B.EQ 0x32F5500
	0x032F54C0 CBZ W23, 0x32F5500
	0x032F54C4 LDR X0, [X19 + 0x10]
	0x032F54C8 CBZ X0, 0x32F55A4
	0x032F54CC LDR X8, [X0]
	0x032F54D0 LDR X9, [X8 + 0x378]
	0x032F54D4 LDR X1, [X8 + 0x380]
	0x032F54D8 BLR X9
	0x032F54DC LDR X8, [X19 + 0x28]
	0x032F54E0 CBZ X8, 0x32F55A4
	0x032F54E4 LDR W9, [X8 + 0x18]
	0x032F54E8 CMP W9, 0x1
	0x032F54EC B.LS 0x32F5554
	0x032F54F0 ADDS W31, W0, 0x1
	0x032F54F4 STRB W0, [X8 + 0x21]
	0x032F54F8 CINC W21, W22, NE
	0x032F54FC B 0x32F5508
	0x032F5500 ADDS W31, W0, 0x1
	0x032F5504 B.EQ 0x32F5544
	0x032F5508 LDR X0, [X19 + 0x20]
	0x032F550C CBZ X0, 0x32F5558
	0x032F5510 LDR X8, [X0]
	0x032F5514 LDP X1, X4, [X19 + 0x28]
	0x032F5518 LDP X9, X6, [X8 + 0x1B8]
	0x032F551C MOV W2, W31
	0x032F5520 MOV W3, W21
	0x032F5524 MOV W5, W31
	0x032F5528 BLR X9
	0x032F552C B 0x32F547C
	0x032F5530 LDR X8, [X19 + 0x30]
	0x032F5534 CBZ X8, 0x32F55A4
	0x032F5538 LDR W9, [X8 + 0x18]
	0x032F553C CBZ W9, 0x32F5554
	0x032F5540 LDRH W0, [X8 + 0x20]
	0x032F5544 LDP X20, X19, [X31 + 0x20]
	0x032F5548 LDP X22, X21, [X31 + 0x10]
	0x032F554C LDP X30, X23, [X31], #0x30
	0x032F5550 RET
	0x032F5554 BL 0x1C16F28
	0x032F5558 BL 0x1C16F20
	0x032F555C B 0x32F5560
	0x032F5560 MOV X21, X0
	0x032F5564 CMP W1, 0x1
	0x032F5568 B.NE 0x32F561C
	0x032F556C MOV X0, X21
	0x032F5570 BL 0x3EB1AD0
	0x032F5574 MOV X21, X0
	0x032F5578 ADRP X0, 0xE04000
	0x032F557C LDR X0, [X0 + 0xCC0]
	0x032F5580 BL 0x1C16D08
	0x032F5584 LDR X8, [X21]
	0x032F5588 LDR X1, [X8]
	0x032F558C BL 0x1C17270
	0x032F5590 TBZ X0, 0x0, 0x32F55A8
	0x032F5594 LDR X21, [X21]
	0x032F5598 BL 0x3EB1AE0
	0x032F559C LDR X0, [X19 + 0x10]
	0x032F55A0 CBNZ X0, 0x32F55C8
	0x032F55A4 BL 0x1C16F20
	0x032F55A8 MOVZ W0, 0x8
	0x032F55AC BL 0x3EB1AF0
	0x032F55B0 LDR X8, [X21]
	0x032F55B4 STR X8, [X0]
	0x032F55B8 ADRP X1, 0xBBF000
	0x032F55BC ADD X1, X1, 0xE58
	0x032F55C0 MOV X2, X31
	0x032F55C4 BL 0x3EB1B00
	0x032F55C8 LDR X8, [X0]
	0x032F55CC LDP X9, X1, [X8 + 0x1B8]
	0x032F55D0 BLR X9
	0x032F55D4 TBZ X0, 0x0, 0x32F560C
	0x032F55D8 LDR X19, [X19 + 0x10]
	0x032F55DC CBZ X19, 0x32F55A4
	0x032F55E0 LDR X8, [X19]
	0x032F55E4 MOV X0, X19
	0x032F55E8 LDP X9, X1, [X8 + 0x1F8]
	0x032F55EC BLR X9
	0x032F55F0 LDR X8, [X19]
	0x032F55F4 SUB X1, X20, X0
	0x032F55F8 MOVZ W2, 0x1
	0x032F55FC MOV X0, X19
	0x032F5600 LDR X9, [X8 + 0x338]
	0x032F5604 LDR X3, [X8 + 0x340]
	0x032F5608 BLR X9
	0x032F560C MOV X0, X21
	0x032F5610 BL 0x1C16F18
	0x032F5614 MOV X21, X0
	0x032F5618 BL 0x3EB1AE0
	0x032F561C MOV X0, X21
	0x032F5620 BL 0x1D2C690
	0x032F5624 BL 0x1990590
	0x032F5628 STP X30, X19, [X31 - 0x10]!
	0x032F562C LDR X8, [X0]
	0x032F5630 MOVZ W1, 0x1
	0x032F5634 MOV X19, X0
	0x032F5638 LDR X9, [X8 + 0x2D8]
	0x032F563C LDR X2, [X8 + 0x2E0]
	0x032F5640 BLR X9
	0x032F5644 LDR X8, [X19 + 0x18]
	0x032F5648 CBZ X8, 0x32F5668
	0x032F564C LDR W9, [X8 + 0x18]
	0x032F5650 CBZ W9, 0x32F566C
	0x032F5654 LDRB W8, [X8 + 0x20]
	0x032F5658 CMP W8, 0x0
	0x032F565C CSET W0, NE
	0x032F5660 LDP X30, X19, [X31], #0x10
	0x032F5664 RET
	0x032F5668 BL 0x1C16F20
	0x032F566C BL 0x1C16F28
	0x032F5670 STR X30, [X31 - 0x10]!
	0x032F5674 LDR X0, [X0 + 0x10]
	0x032F5678 CBZ X0, 0x32F569C
	0x032F567C LDR X8, [X0]
	0x032F5680 LDR X9, [X8 + 0x378]
	0x032F5684 LDR X1, [X8 + 0x380]
	0x032F5688 BLR X9
	0x032F568C ADDS W31, W0, 0x1
	0x032F5690 B.EQ 0x32F56A0
	0x032F5694 LDR X30, [X31], #0x10
	0x032F5698 RET
	0x032F569C BL 0x32F4810
	0x032F56A0 BL 0x32F47B8
	0x032F56A4 STP X30, X19, [X31 - 0x10]!
	0x032F56A8 LDR X8, [X0]
	0x032F56AC MOVZ W1, 0x1
	0x032F56B0 MOV X19, X0
	0x032F56B4 LDR X9, [X8 + 0x2D8]
	0x032F56B8 LDR X2, [X8 + 0x2E0]
	0x032F56BC BLR X9
	0x032F56C0 LDR X8, [X19 + 0x18]
	0x032F56C4 CBZ X8, 0x32F56DC
	0x032F56C8 LDR W9, [X8 + 0x18]
	0x032F56CC CBZ W9, 0x32F56E0
	0x032F56D0 LDRB W0, [X8 + 0x20]
	0x032F56D4 LDP X30, X19, [X31], #0x10
	0x032F56D8 RET
	0x032F56DC BL 0x1C16F20
	0x032F56E0 BL 0x1C16F28
	0x032F56E4 STR X30, [X31 - 0x10]!
	0x032F56E8 LDR X8, [X0]
	0x032F56EC LDP X9, X1, [X8 + 0x1B8]
	0x032F56F0 BLR X9
	0x032F56F4 ADDS W31, W0, 0x1
	0x032F56F8 B.EQ 0x32F5704
	0x032F56FC LDR X30, [X31], #0x10
	0x032F5700 RET
	0x032F5704 BL 0x32F47B8
	0x032F5708 STP X30, X19, [X31 - 0x10]!
	0x032F570C LDR X8, [X0]
	0x032F5710 MOVZ W1, 0x2
	0x032F5714 MOV X19, X0
	0x032F5718 LDR X9, [X8 + 0x2D8]
	0x032F571C LDR X2, [X8 + 0x2E0]
	0x032F5720 BLR X9
	0x032F5724 LDR X8, [X19 + 0x18]
	0x032F5728 CBZ X8, 0x32F574C
	0x032F572C LDR W9, [X8 + 0x18]
	0x032F5730 CMP W9, 0x1
	0x032F5734 B.EQ 0x32F5748
	0x032F5738 CBZ W9, 0x32F5748
	0x032F573C LDRH W0, [X8 + 0x20]
	0x032F5740 LDP X30, X19, [X31], #0x10
	0x032F5744 RET
	0x032F5748 BL 0x1C16F28
	0x032F574C BL 0x1C16F20
	0x032F5750 STP X30, X19, [X31 - 0x10]!
	0x032F5754 LDR X8, [X0]
	0x032F5758 MOVZ W1, 0x2
	0x032F575C MOV X19, X0

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+104], X0
	004 Move [X31+112], X20
	005 Move [X31+120], X19
	006 Move X20, 0x10E8000
	007 Move W8, [X20+2654]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {48}
	013 Move X0, 0xE2A000
	014 Move X0, [X0+3408]
	015 Call 0x1C17CF4
	016 Move X0, 0xE2A000
	017 Move X0, [X0+3432]
	018 Call 0x1C17CF4
	019 Move X0, 0xE33000
	020 Move X0, [X0+680]
	021 Call 0x1C17CF4
	022 Move X0, 0xE33000
	023 Move X0, [X0+688]
	024 Call 0x1C17CF4
	025 Move X0, 0xE33000
	026 Move X0, [X0+696]
	027 Call 0x1C17CF4
	028 Move X0, 0xE33000
	029 Move X0, [X0+704]
	030 Call 0x1C17CF4
	031 Move X0, 0xE33000
	032 Move X0, [X0+712]
	033 Call 0x1C17CF4
	034 Move X0, 0xE2A000
	035 Move X0, [X0+736]
	036 Call 0x1C17CF4
	037 Move X0, 0xE2A000
	038 Move X0, [X0+744]
	039 Call 0x1C17CF4
	040 Move X0, 0xE2E000
	041 Move X0, [X0+3680]
	042 Call 0x1C17CF4
	043 Move X0, 0xE33000
	044 Move X0, [X0+720]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X20+2654], W8
	048 Move [X31+64], X31
	049 Move [X31+72], X31
	050 Move [X31+48], X31
	051 Move [X31+56], X31
	052 Move [X31+40], W31
	053 Move W9, [X19]
	054 Add X8, X31, 92
	055 Add X10, X31, 104
	056 Move [X31+8], X31
	057 Move [X31+16], X8
	058 Move [X31+92], W9
	059 Move [X31+24], X10
	060 Compare W9, 0
	061 JumpIfEqual {95}
	062 Move X0, [X19+40]
	063 Compare X0, 0
	064 JumpIfEqual {182}
	065 Move X8, 0xE33000
	066 Move X8, [X8+720]
	067 Move X2, [X8]
	068 Move W1, W31
	069 Call Task`1<Int32>.ConfigureAwait, X0, X1
	070 Move X8, 0xE33000
	071 Move X8, [X8+712]
	072 Move [X31+64], X0
	073 Move [X31+72], X1
	074 Move X8, [X8]
	075 Add X0, X31, 64
	076 Move X1, X8
	077 Call ConfiguredTaskAwaiter<Int32>.get_IsCompleted, X0
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {104}
	082 Move X2, [X31+104]
	083 Move [X31+92], W31
	084 Move X8, 0xE33000
	085 Move [X2], W31
	086 Move V0, [X31+4]
	087 Add X0, X2, 8
	088 Move [X2+72], V0
	089 Move X8, [X8+680]
	090 Move X3, [X8]
	091 Add X1, X31, 64
	092 Call 0x212E994, X0, X1, X2
	093 Move W19, W31
	094 Move W20, 4
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 Move TEMP, 0
	097 Not TEMP
	098 Move W8, TEMP
	099 Move [X31+4], V0
	100 Move [X19+72], X31
	101 Move [X19+80], X31
	102 Move [X31+92], W8
	103 Move [X19], W8
	104 Move X8, 0xE33000
	105 Move X8, [X8+704]
	106 Move X1, [X8]
	107 Add X0, X31, 64
	108 Call ConfiguredTaskAwaiter<Int32>.GetResult, X0
	109 Move X8, [X31+104]
	110 Move W19, W0
	111 Move X20, [X8+48]
	112 Compare X20, 0
	113 JumpIfEqual {120}
	114 Move W8, [X20+24]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X0, X31
	117 Call ThrowHelper.ThrowArgumentOutOfRangeException
	118 Add X9, X20, 32
	119 Move W8, W19
	120 Compare W19, 0
	121 JumpIfEqual {124}
	122 Move X0, X31
	123 Call ThrowHelper.ThrowArgumentOutOfRangeException
	124 Move X9, X31
	125 Move W8, W31
	126 Move X10, 0xE2A000
	127 Move X10, [X10+736]
	128 Move [X31+48], X9
	129 Move X9, [X31+104]
	130 Move [X31+56], W8
	131 Move [X31+60], W31
	132 Move X1, [X10]
	133 Add X0, X9, 56
	134 Call 0x2985784
	135 Move X8, 0xE2A000
	136 Move X8, [X8+744]
	137 Move X2, X0
	138 Move X4, X1
	139 Move X3, [X8]
	140 Add X0, X31, 48
	141 Move X1, X2
	142 Move X2, X4
	143 Call 0x25FBF94, X0, X1
	144 Move W20, 5
	145 Add X0, X31, 8
	146 Call 0x1BB8904
	147 Compare W20, 0
	148 JumpIfEqual {160}
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move X0, [X31+104]
	151 Move TEMP, 1
	152 Not TEMP
	153 Move W8, TEMP
	154 Move W1, W19
	155 Move [X0+8], W8
	156 Move X8, 0xE33000
	157 Move X8, [X8+688]
	158 Move X2, [X8]
	159 Call 0x263E044, X0, X1
	160 Move TEMP, 0
	161 Not TEMP
	162 Move X8, TEMP
	163 Move X19, [X31+104]
	164 Add X9, X31, 32
	165 Move X20, [X9]
	166 Move TEMP, 1
	167 Not TEMP
	168 Move W8, TEMP
	169 Move [X19+8], W8
	170 Move X0, 0xE33000
	171 Move X0, [X0+728]
	172 Call 0x1C17D08
	173 Move X2, X0
	174 Move X0, X19
	175 Move X1, X20
	176 Call 0x263E0D4, X0, X1
	177 Move X20, [X31+112]
	178 Move X19, [X31+120]
	179 Move X30, [X31+96]
	180 Add X31, X31, 128
	181 Return 
	182 Call 0x1C17F20
	183 Move X20, X1
	184 Move X19, X0
	185 Move X19, X0
	186 Move W20, W1
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move X0, X19
	189 Call 0x3EB2AD0
	190 Move X8, [X0]
	191 Move [X31+8], X8
	192 Call 0x3EB2AE0
	193 Move W20, W31
	194 Move W19, W31
	195 Move X19, X0
	196 Move W20, W1
	197 Add X0, X31, 8
	198 Call 0x1BB8904
	199 Move W8, 1
	200 Move X19, X0
	201 Move W8, 1
	202 Move W20, W1
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move X0, X19
	205 Call 0x3EB2AD0
	206 Move X19, X0
	207 Move X0, 0xDFF000
	208 Move X0, [X0+2000]
	209 Call 0x1C17D08
	210 Move X8, [X19]
	211 Move X1, [X8]
	212 Call 0x1C18270
	213 Move TEMP, X0
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfNotEqual {223}
	217 Move X8, [X19]
	218 Move W9, 1
	219 Move [X31+40], W9
	220 Move [X31+32], X8
	221 Call 0x3EB2AE0
	222 Move X8, X31
	223 Move W0, 8
	224 Call 0x3EB2AF0
	225 Move X8, [X19]
	226 Move [X0], X8
	227 Move X1, 0xBC0000
	228 Add X1, X1, 3672
	229 Move X2, X31
	230 Call 0x3EB2B00
	231 Move X19, X0
	232 Call 0x3EB2AE0
	233 Move X0, X19
	234 Call 0x1D2D690
	235 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x032F5760 LDR X9, [X8 + 0x2D8]
	0x032F5764 LDR X2, [X8 + 0x2E0]
	0x032F5768 BLR X9
	0x032F576C LDR X8, [X19 + 0x18]
	0x032F5770 CBZ X8, 0x32F5794
	0x032F5774 LDR W9, [X8 + 0x18]
	0x032F5778 CMP W9, 0x1
	0x032F577C B.EQ 0x32F5790
	0x032F5780 CBZ W9, 0x32F5790
	0x032F5784 LDRH W0, [X8 + 0x20]
	0x032F5788 LDP X30, X19, [X31], #0x10
	0x032F578C RET
	0x032F5790 BL 0x1C16F28
	0x032F5794 BL 0x1C16F20
	0x032F5798 STR X30, [X31 - 0x20]!
	0x032F579C STP X20, X19, [X31 + 0x10]
	0x032F57A0 ADRP X20, 0x10E7000
	0x032F57A4 LDRB W8, [X20 + 0xA63]
	0x032F57A8 MOV X19, X0
	0x032F57AC TBNZ X8, 0x0, 0x32F57C4
	0x032F57B0 ADRP X0, 0xE06000
	0x032F57B4 LDR X0, [X0 + 0x558]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x10E8000
	007 Move X21, 0xE33000
	008 Move W8, [X22+2655]
	009 Move X21, [X21+736]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE33000
	017 Move X0, [X0+736]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2655], W8
	021 Move X2, [X21]
	022 Add X0, X20, 8
	023 Move X1, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Call 0x263DFD0, X0, X1
	030 Return 

