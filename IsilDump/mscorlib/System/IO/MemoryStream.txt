Type: System.IO.MemoryStream

Method: System.Void .ctor()

Disassembly:
	0x032E33B4 LDR W8, [X22 + 0x18]
	0x032E33B8 SUB W8, W8, W21

ISIL:
	001 Move W1, W31

Method: System.Void .ctor(System.Int32 capacity)

Disassembly:
	0x032E33BC CMP W8, W20
	0x032E33C0 B.LT 0x32E3568
	0x032E33C4 ADRP X8, 0xE18000
	0x032E33C8 LDR X8, [X8 + 0x7D8]
	0x032E33CC LDR X0, [X8]
	0x032E33D0 LDR W8, [X0 + 0xE0]
	0x032E33D4 CBNZ W8, 0x32E33DC
	0x032E33D8 BL 0x1C16DFC
	0x032E33DC ADD X0, X31, 0x8
	0x032E33E0 MOV X1, X31
	0x032E33E4 BL 0x33DD2B0
	0x032E33E8 TBZ X0, 0x0, 0x32E3424
	0x032E33EC ADRP X8, 0xE11000
	0x032E33F0 LDR X8, [X8 + 0x7B8]
	0x032E33F4 LDR X19, [X31 + 0x8]
	0x032E33F8 LDR X0, [X8]
	0x032E33FC LDR W8, [X0 + 0xE0]
	0x032E3400 CBNZ W8, 0x32E3408
	0x032E3404 BL 0x1C16DFC
	0x032E3408 ADRP X8, 0xE43000
	0x032E340C LDR X8, [X8 + 0xCC8]
	0x032E3410 MOV X0, X19
	0x032E3414 LDR X1, [X8]
	0x032E3418 BL 0x2299598
	0x032E341C MOV X21, X0
	0x032E3420 B 0x32E34A0
	0x032E3424 LDR X8, [X19]
	0x032E3428 LDR X9, [X8 + 0x358]
	0x032E342C LDR X4, [X8 + 0x360]
	0x032E3430 MOV X0, X19
	0x032E3434 MOV X1, X22
	0x032E3438 MOV W2, W21
	0x032E343C MOV W3, W20
	0x032E3440 BLR X9
	0x032E3444 LDR X21, [X19 + 0x48]
	0x032E3448 MOV W20, W0
	0x032E344C CBZ X21, 0x32E346C
	0x032E3450 ADRP X8, 0xE43000
	0x032E3454 LDR X8, [X8 + 0xCC0]
	0x032E3458 LDR X1, [X8]
	0x032E345C MOV X0, X21
	0x032E3460 BL 0x269D120
	0x032E3464 CMP W0, W20
	0x032E3468 B.EQ 0x32E34A0
	0x032E346C ADRP X8, 0xE11000
	0x032E3470 LDR X8, [X8 + 0x7B8]
	0x032E3474 LDR X0, [X8]
	0x032E3478 LDR W8, [X0 + 0xE0]
	0x032E347C CBNZ W8, 0x32E3484
	0x032E3480 BL 0x1C16DFC
	0x032E3484 ADRP X8, 0xE43000
	0x032E3488 LDR X8, [X8 + 0xCD0]
	0x032E348C LDR X1, [X8]
	0x032E3490 MOV W0, W20
	0x032E3494 BL 0x229A250
	0x032E3498 MOV X21, X0
	0x032E349C STR X0, [X19 + 0x48]
	0x032E34A0 MOV X0, X21
	0x032E34A4 LDP X20, X19, [X31 + 0x30]
	0x032E34A8 LDP X22, X21, [X31 + 0x20]
	0x032E34AC LDP X30, X23, [X31 + 0x10]
	0x032E34B0 ADD X31, X31, 0x40
	0x032E34B4 RET
	0x032E34B8 ADRP X0, 0xE15000
	0x032E34BC LDR X0, [X0 + 0x528]
	0x032E34C0 BL 0x1C16D08
	0x032E34C4 BL 0x1C16F10
	0x032E34C8 MOV X19, X0
	0x032E34CC ADRP X0, 0xE3B000
	0x032E34D0 LDR X0, [X0 + 0xF48]
	0x032E34D4 BL 0x1C16D08
	0x032E34D8 MOV X20, X0
	0x032E34DC ADRP X0, 0xE43000
	0x032E34E0 LDR X0, [X0 + 0xC40]
	0x032E34E4 BL 0x1C16D08
	0x032E34E8 MOV X2, X0
	0x032E34EC MOV X0, X19
	0x032E34F0 MOV X1, X20
	0x032E34F4 MOV X3, X31
	0x032E34F8 BL 0x3315F7C
	0x032E34FC B 0x32E3598
	0x032E3500 ADRP X0, 0xE18000
	0x032E3504 LDR X0, [X0 + 0x760]
	0x032E3508 BL 0x1C16D08
	0x032E350C BL 0x1C16F10
	0x032E3510 MOV X19, X0
	0x032E3514 ADRP X0, 0xE3F000
	0x032E3518 LDR X0, [X0 + 0xD90]
	0x032E351C B 0x32E353C
	0x032E3520 ADRP X0, 0xE18000
	0x032E3524 LDR X0, [X0 + 0x760]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10FA000
	007 Move X22, 0xE40000
	008 Move W8, [X21+2460]
	009 Move X22, [X22+3344]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xE19000
	017 Move X0, [X0+3272]
	018 Call 0x1C17CF4
	019 Move X0, 0xE11000
	020 Move X0, [X0+1560]
	021 Call 0x1C17CF4
	022 Move X0, 0xE40000
	023 Move X0, [X0+3344]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+2460], W8
	027 Move X0, [X22]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X19
	033 Move X1, X31
	034 Call Stream..ctor, X0
	035 Move TEMP, X20
	036 And TEMP, TEMP, -2147483648
	037 Compare TEMP, -2147483648
	038 JumpIfEqual {92}
	039 Compare W20, 0
	040 JumpIfEqual {59}
	041 Move X8, 0xE11000
	042 Move X8, [X8+1560]
	043 Move W1, W20
	044 Move X0, [X8]
	045 Call 0x1C17D6C
	046 Compare X19, 0
	047 JumpIfEqual {91}
	048 Or W8, W31, 0x1010101
	049 Move [X19+40], X0
	050 Move [X19+60], W20
	051 Move [X19+64], W8
	052 Move [X19+48], W31
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 Return 
	059 Move X8, 0xE19000
	060 Move X8, [X8+3272]
	061 Move X21, [X8]
	062 Move X8, [X21+56]
	063 Compare X8, 0
	064 JumpIfNotEqual {68}
	065 Move X0, X21
	066 Call 0x1C5D6E0
	067 Move X8, [X21+56]
	068 Move X0, [X8+16]
	069 Move W8, [X0+309]
	070 Move TEMP, X8
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {75}
	074 Call 0x1C5D684
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X8, [X21+56]
	080 Move X0, [X8+16]
	081 Move W8, [X0+309]
	082 Move TEMP, X8
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {87}
	086 Call 0x1C5D684
	087 Move X8, [X0+184]
	088 Move X0, [X8]
	089 Compare X19, 0
	090 JumpIfNotEqual {48}
	091 Call 0x1C17F20
	092 Move X0, 0xE19000
	093 Move X0, [X0+1888]
	094 Call 0x1C17D08
	095 Call 0x1C17F10
	096 Move X19, X0
	097 Move X0, 0xE3B000
	098 Move X0, [X0+88]
	099 Call 0x1C17D08
	100 Move X20, X0
	101 Move X0, 0xE40000
	102 Move X0, [X0+1224]
	103 Call 0x1C17D08
	104 Move X2, X0
	105 Move X0, X19
	106 Move X1, X20
	107 Move X3, X31
	108 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	109 Move X0, 0xE44000
	110 Move X0, [X0+3128]
	111 Call 0x1C17D08
	112 Move X1, X0
	113 Move X0, X19
	114 Call 0x1C17DEC

Method: System.Void .ctor(System.Byte[] buffer)

Disassembly:
	0x032E3528 BL 0x1C16D08
	0x032E352C BL 0x1C16F10

ISIL:
	001 Move W2, 1

Method: System.Void .ctor(System.Byte[] buffer, System.Boolean writable)

Disassembly:
	0x032E3530 MOV X19, X0
	0x032E3534 ADRP X0, 0xE38000
	0x032E3538 LDR X0, [X0 + 0x648]
	0x032E353C BL 0x1C16D08
	0x032E3540 MOV X20, X0
	0x032E3544 ADRP X0, 0xE38000
	0x032E3548 LDR X0, [X0 + 0x670]
	0x032E354C BL 0x1C16D08
	0x032E3550 MOV X2, X0
	0x032E3554 MOV X0, X19
	0x032E3558 MOV X1, X20
	0x032E355C MOV X3, X31
	0x032E3560 BL 0x3311888
	0x032E3564 B 0x32E3598
	0x032E3568 ADRP X0, 0xE18000
	0x032E356C LDR X0, [X0 + 0x578]
	0x032E3570 BL 0x1C16D08
	0x032E3574 BL 0x1C16F10
	0x032E3578 MOV X19, X0
	0x032E357C ADRP X0, 0xE38000
	0x032E3580 LDR X0, [X0 + 0x760]
	0x032E3584 BL 0x1C16D08
	0x032E3588 MOV X1, X0
	0x032E358C MOV X0, X19
	0x032E3590 MOV X2, X31
	0x032E3594 BL 0x3314A68
	0x032E3598 ADRP X0, 0xE43000
	0x032E359C LDR X0, [X0 + 0xCD8]
	0x032E35A0 BL 0x1C16D08
	0x032E35A4 MOV X1, X0
	0x032E35A8 MOV X0, X19
	0x032E35AC BL 0x1C16DEC
	0x032E35B0 B 0x32E35BC
	0x032E35B4 B 0x32E35BC
	0x032E35B8 B 0x32E35BC
	0x032E35BC MOV X19, X0
	0x032E35C0 CMP W1, 0x1
	0x032E35C4 B.NE 0x32E36AC
	0x032E35C8 MOV X0, X19
	0x032E35CC BL 0x3EB1AD0
	0x032E35D0 MOV X19, X0
	0x032E35D4 ADRP X0, 0xE18000
	0x032E35D8 LDR X0, [X0 + 0x8A8]
	0x032E35DC BL 0x1C16D08
	0x032E35E0 LDR X8, [X19]
	0x032E35E4 LDR X1, [X8]
	0x032E35E8 BL 0x1C17270
	0x032E35EC TBZ X0, 0x0, 0x32E362C
	0x032E35F0 LDR X19, [X19]
	0x032E35F4 BL 0x3EB1AE0
	0x032E35F8 ADRP X0, 0xE11000
	0x032E35FC LDR X0, [X0 + 0x7B8]
	0x032E3600 BL 0x1C16D08
	0x032E3604 LDR W8, [X0 + 0xE0]
	0x032E3608 CBNZ W8, 0x32E3610
	0x032E360C BL 0x1C16DFC
	0x032E3610 ADRP X0, 0xE43000
	0x032E3614 LDR X0, [X0 + 0xCE0]
	0x032E3618 BL 0x1C16D08

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x10FA000
	008 Move X23, 0xE40000
	009 Move W8, [X22+2461]
	010 Move X23, [X23+3344]
	011 Move W21, W2
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xE40000
	019 Move X0, [X0+3344]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2461], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X19
	029 Move X1, X31
	030 Call Stream..ctor, X0
	031 Compare X20, 0
	032 JumpIfEqual {49}
	033 Move [X19+40], X20
	034 Move W9, [X20+24]
	035 And W8, W21, 1
	036 Move W10, 256
	037 Move [X19+65], W8
	038 NotImplemented "Instruction STRH not yet implemented."
	039 Move [X19+56], W9
	040 Move [X19+60], W9
	041 Move [X19+48], W31
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Return 
	049 Move X0, 0xE16000
	050 Move X0, [X0+1320]
	051 Call 0x1C17D08
	052 Call 0x1C17F10
	053 Move X19, X0
	054 Move X0, 0xE3C000
	055 Move X0, [X0+3912]
	056 Call 0x1C17D08
	057 Move X20, X0
	058 Move X0, 0xE44000
	059 Move X0, [X0+3136]
	060 Call 0x1C17D08
	061 Move X2, X0
	062 Move X0, X19
	063 Move X1, X20
	064 Move X3, X31
	065 Call ArgumentNullException..ctor, X0, X1, X2
	066 Move X0, 0xE44000
	067 Move X0, [X0+3144]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X19
	071 Call 0x1C17DEC

Method: System.Void .ctor(System.Byte[] buffer, System.Int32 index, System.Int32 count)

Disassembly:
	0x032E361C MOV X1, X0
	0x032E3620 MOV X0, X19
	0x032E3624 BL 0x2299890

ISIL:
	001 Move W4, 1
	002 Move W5, W31

Method: System.Void .ctor(System.Byte[] buffer, System.Int32 index, System.Int32 count, System.Boolean writable, System.Boolean publiclyVisible)

Disassembly:
	0x032E3628 B 0x32E341C
	0x032E362C ADRP X0, 0xE10000
	0x032E3630 LDR X0, [X0 + 0x7D0]
	0x032E3634 BL 0x1C16D08
	0x032E3638 LDR X8, [X19]
	0x032E363C LDR X1, [X8]
	0x032E3640 BL 0x1C17270
	0x032E3644 TBZ X0, 0x0, 0x32E3684
	0x032E3648 LDR X19, [X19]
	0x032E364C BL 0x3EB1AE0
	0x032E3650 ADRP X0, 0xE11000
	0x032E3654 LDR X0, [X0 + 0x7B8]
	0x032E3658 BL 0x1C16D08
	0x032E365C LDR W8, [X0 + 0xE0]
	0x032E3660 CBNZ W8, 0x32E3668
	0x032E3664 BL 0x1C16DFC
	0x032E3668 ADRP X0, 0xE43000
	0x032E366C LDR X0, [X0 + 0xCE8]
	0x032E3670 BL 0x1C16D08
	0x032E3674 MOV X1, X0
	0x032E3678 MOV X0, X19
	0x032E367C BL 0x2299DFC
	0x032E3680 B 0x32E341C
	0x032E3684 MOVZ W0, 0x8
	0x032E3688 BL 0x3EB1AF0
	0x032E368C LDR X8, [X19]
	0x032E3690 STR X8, [X0]
	0x032E3694 ADRP X1, 0xBD1000
	0x032E3698 ADD X1, X1, 0xE58
	0x032E369C MOV X2, X31
	0x032E36A0 BL 0x3EB1B00
	0x032E36A4 MOV X19, X0
	0x032E36A8 BL 0x3EB1AE0
	0x032E36AC MOV X0, X19
	0x032E36B0 BL 0x1D2C690
	0x032E36B4 BL 0x1990590
	0x032E36B8 SUB X31, X31, 0x60
	0x032E36BC STP X30, X23, [X31 + 0x30]
	0x032E36C0 STP X22, X21, [X31 + 0x40]
	0x032E36C4 STP X20, X19, [X31 + 0x50]
	0x032E36C8 ADRP X23, 0x10F9000
	0x032E36CC STP X1, X2, [X31 + 0x20]
	0x032E36D0 STR X3, [X31 + 0x18]
	0x032E36D4 ADRP X22, 0xE18000
	0x032E36D8 LDRB W8, [X23 + 0x9A4]
	0x032E36DC LDR X22, [X22 + 0x7D8]
	0x032E36E0 MOV X20, X2
	0x032E36E4 MOV X21, X1
	0x032E36E8 MOV X19, X0
	0x032E36EC TBNZ X8, 0x0, 0x32E3788
	0x032E36F0 ADRP X0, 0xE43000
	0x032E36F4 LDR X0, [X0 + 0xCF0]
	0x032E36F8 BL 0x1C16CF4
	0x032E36FC ADRP X0, 0xE43000
	0x032E3700 LDR X0, [X0 + 0xCF8]
	0x032E3704 BL 0x1C16CF4
	0x032E3708 ADRP X0, 0xE43000
	0x032E370C LDR X0, [X0 + 0xD00]
	0x032E3710 BL 0x1C16CF4
	0x032E3714 ADRP X0, 0xE38000
	0x032E3718 LDR X0, [X0 + 0x5B0]
	0x032E371C BL 0x1C16CF4
	0x032E3720 ADRP X0, 0xE18000
	0x032E3724 LDR X0, [X0 + 0x7D8]
	0x032E3728 BL 0x1C16CF4
	0x032E372C ADRP X0, 0xE43000
	0x032E3730 LDR X0, [X0 + 0xD08]
	0x032E3734 BL 0x1C16CF4
	0x032E3738 ADRP X0, 0xE3B000
	0x032E373C LDR X0, [X0 + 0x2E0]
	0x032E3740 BL 0x1C16CF4
	0x032E3744 ADRP X0, 0xE43000
	0x032E3748 LDR X0, [X0 + 0xD10]
	0x032E374C BL 0x1C16CF4
	0x032E3750 ADRP X0, 0xE43000
	0x032E3754 LDR X0, [X0 + 0xCC8]
	0x032E3758 BL 0x1C16CF4
	0x032E375C ADRP X0, 0xE11000
	0x032E3760 LDR X0, [X0 + 0x7B8]
	0x032E3764 BL 0x1C16CF4
	0x032E3768 ADRP X0, 0xE43000
	0x032E376C LDR X0, [X0 + 0xD18]
	0x032E3770 BL 0x1C16CF4
	0x032E3774 ADRP X0, 0xE43000
	0x032E3778 LDR X0, [X0 + 0xD20]
	0x032E377C BL 0x1C16CF4
	0x032E3780 MOVZ W8, 0x1
	0x032E3784 STRB W8, [X23 + 0x9A4]
	0x032E3788 LDR X0, [X22]
	0x032E378C STP X31, X31, [X31 + 0x8]
	0x032E3790 LDR W8, [X0 + 0xE0]
	0x032E3794 CBNZ W8, 0x32E379C
	0x032E3798 BL 0x1C16DFC
	0x032E379C ADD X0, X31, 0x18
	0x032E37A0 MOV X1, X31
	0x032E37A4 BL 0x33DD2B0
	0x032E37A8 TBZ X0, 0x0, 0x32E37F8
	0x032E37AC ADRP X8, 0xE11000
	0x032E37B0 LDR X8, [X8 + 0x7B8]
	0x032E37B4 ADRP X20, 0xE43000
	0x032E37B8 LDR X19, [X31 + 0x18]
	0x032E37BC LDR X0, [X8]
	0x032E37C0 LDR W8, [X0 + 0xE0]
	0x032E37C4 LDR X20, [X20 + 0xCC8]
	0x032E37C8 CBNZ W8, 0x32E37D0
	0x032E37CC BL 0x1C16DFC
	0x032E37D0 LDR X1, [X20]
	0x032E37D4 MOV X0, X19
	0x032E37D8 BL 0x2299598
	0x032E37DC MOV X19, X0
	0x032E37E0 CBNZ X0, 0x32E37F0
	0x032E37E4 MOVZ W0, 0x26
	0x032E37E8 MOV X1, X31
	0x032E37EC BL 0x338F3E0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x10FA000
	011 Move X26, 0xE40000
	012 Move W8, [X25+2462]
	013 Move X26, [X26+3344]
	014 Move W23, W5
	015 Move W22, W4
	016 Move W20, W3
	017 Move W21, W2
	018 Move X24, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0xE40000
	025 Move X0, [X0+3344]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X25+2462], W8
	029 Move X0, [X26]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call Stream..ctor, X0
	037 Compare X24, 0
	038 JumpIfEqual {73}
	039 Move TEMP, X21
	040 And TEMP, TEMP, -2147483648
	041 Compare TEMP, -2147483648
	042 JumpIfEqual {90}
	043 Move TEMP, X20
	044 And TEMP, TEMP, -2147483648
	045 Compare TEMP, -2147483648
	046 JumpIfEqual {97}
	047 Move W8, [X24+24]
	048 Subtract W8, W8, W21
	049 NotImplemented "Instruction CMP not yet implemented."
	050 And W8, W23, 1
	051 And W9, W22, 1
	052 Add W10, W20, W21
	053 Move W11, 1
	054 Move [X19+40], X24
	055 Move [X19+48], W21
	056 Move [X19+52], W21
	057 Move [X19+64], W31
	058 Move [X19+56], W10
	059 Move [X19+60], W10
	060 Move [X19+65], W9
	061 Move [X19+66], W8
	062 Move [X19+67], W11
	063 Move X20, [X31+64]
	064 Move X19, [X31+72]
	065 Move X22, [X31+48]
	066 Move X21, [X31+56]
	067 Move X24, [X31+32]
	068 Move X23, [X31+40]
	069 Move X26, [X31+16]
	070 Move X25, [X31+24]
	071 Move X30, [X31+80]
	072 Return 
	073 Move X0, 0xE16000
	074 Move X0, [X0+1320]
	075 Call 0x1C17D08
	076 Call 0x1C17F10
	077 Move X19, X0
	078 Move X0, 0xE3C000
	079 Move X0, [X0+3912]
	080 Call 0x1C17D08
	081 Move X20, X0
	082 Move X0, 0xE44000
	083 Move X0, [X0+3136]
	084 Call 0x1C17D08
	085 Move X2, X0
	086 Move X0, X19
	087 Move X1, X20
	088 Move X3, X31
	089 Call ArgumentNullException..ctor, X0, X1, X2
	090 Move X0, 0xE19000
	091 Move X0, [X0+1888]
	092 Call 0x1C17D08
	093 Call 0x1C17F10
	094 Move X19, X0
	095 Move X0, 0xE1C000
	096 Move X0, [X0+304]
	097 Move X0, 0xE19000
	098 Move X0, [X0+1888]
	099 Call 0x1C17D08
	100 Call 0x1C17F10
	101 Move X19, X0
	102 Move X0, 0xE39000
	103 Move X0, [X0+1608]
	104 Call 0x1C17D08
	105 Move X20, X0
	106 Move X0, 0xE39000
	107 Move X0, [X0+1648]
	108 Call 0x1C17D08
	109 Move X2, X0
	110 Move X0, X19
	111 Move X1, X20
	112 Move X3, X31
	113 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	114 Move X0, 0xE19000
	115 Move X0, [X0+1400]
	116 Call 0x1C17D08
	117 Call 0x1C17F10
	118 Move X19, X0
	119 Move X0, 0xE39000
	120 Move X0, [X0+1888]
	121 Call 0x1C17D08
	122 Move X1, X0
	123 Move X0, X19
	124 Move X2, X31
	125 Call ArgumentException..ctor, X0, X1
	126 Move X0, 0xE44000
	127 Move X0, [X0+3152]
	128 Call 0x1C17D08
	129 Move X1, X0
	130 Move X0, X19
	131 Call 0x1C17DEC

Method: System.Boolean get_CanRead()

Disassembly:
	0x032E37F0 MOVZ X1, 0x10000
	0x032E37F4 B 0x32E38A4

ISIL:
	001 Move W0, [X0+67]
	002 Return X0

Method: System.Boolean get_CanSeek()

Disassembly:
	0x032E37F8 ADRP X8, 0xE43000
	0x032E37FC LDR X8, [X8 + 0xD10]

ISIL:
	001 Move W0, [X0+67]
	002 Return X0

Method: System.Boolean get_CanWrite()

Disassembly:
	0x032E3800 LDR X2, [X8]
	0x032E3804 MOV X0, X21

ISIL:
	001 Move W0, [X0+65]
	002 Return X0

Method: System.Void EnsureNotClosed()

Disassembly:
	0x032E3808 MOV X1, X20
	0x032E380C BL 0x319DCE0
	0x032E3810 ADRP X8, 0xE43000
	0x032E3814 LDR X8, [X8 + 0xD08]
	0x032E3818 LDR X3, [X8]
	0x032E381C ADD X2, X31, 0x8
	0x032E3820 BL 0x2218D10
	0x032E3824 TBZ X0, 0x0, 0x32E3860
	0x032E3828 ADRP X8, 0xE38000
	0x032E382C LDR X8, [X8 + 0x5B0]
	0x032E3830 LDR X0, [X8]
	0x032E3834 LDR W8, [X0 + 0xE0]
	0x032E3838 CBNZ W8, 0x32E3840

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+67]
	004 Compare W8, 0
	005 JumpIfEqual {9}
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return 
	009 Call Error.GetStreamIsClosed
	010 Move X19, X0
	011 Move X0, 0xE44000
	012 Move X0, [X0+3160]
	013 Call 0x1C17D08
	014 Move X1, X0
	015 Move X0, X19
	016 Call 0x1C17DEC

Method: System.Void EnsureWriteable()

Disassembly:
	0x032E383C BL 0x1C16DFC
	0x032E3840 LDR X8, [X19]
	0x032E3844 LDR X1, [X31 + 0x8]
	0x032E3848 LDP W2, W3, [X31 + 0x10]
	0x032E384C LDR X9, [X8 + 0x358]
	0x032E3850 LDR X4, [X8 + 0x360]
	0x032E3854 MOV X0, X19
	0x032E3858 BLR X9
	0x032E385C B 0x32E3898
	0x032E3860 ADRP X8, 0xE3B000
	0x032E3864 LDR X8, [X8 + 0x2E0]
	0x032E3868 LDR X1, [X8]
	0x032E386C ADD X0, X31, 0x20
	0x032E3870 BL 0x2984784
	0x032E3874 LDR X8, [X19]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X9, [X8+472]
	005 Move X1, [X8+480]
	006 NotImplemented "Instruction BLR not yet implemented."
	007 Move TEMP, X0
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {14}
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return 
	014 Call Error.GetWriteNotSupported
	015 Move X19, X0
	016 Move X0, 0xE44000
	017 Move X0, [X0+3168]
	018 Call 0x1C17D08
	019 Move X1, X0
	020 Move X0, X19
	021 Call 0x1C17DEC

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x032E3878 MOV X2, X0
	0x032E387C MOV X4, X1
	0x032E3880 LDR X9, [X8 + 0x368]
	0x032E3884 LDR X3, [X8 + 0x370]
	0x032E3888 MOV X0, X19
	0x032E388C MOV X1, X2
	0x032E3890 MOV X2, X4

ISIL:
	001 Move TEMP, X1
	002 And TEMP, TEMP, 1
	003 Compare TEMP, 1
	004 JumpIfNotEqual {8}
	005 Move [X0+67], W31
	006 NotImplemented "Instruction STRH not yet implemented."
	007 Move [X0+72], X31
	008 And W1, W1, 1
	009 Move X2, X31
	010 Call Stream.Dispose, X0, X1
	011 Return 

Method: System.Boolean EnsureCapacity(System.Int32 value)

Disassembly:
	0x032E3894 BLR X9
	0x032E3898 MOV X19, X31
	0x032E389C MOV W8, W0
	0x032E38A0 ORR X1, X8, 0x1FFFFFFFFFFFF
	0x032E38A4 MOV X0, X19
	0x032E38A8 LDP X20, X19, [X31 + 0x50]
	0x032E38AC LDP X22, X21, [X31 + 0x40]
	0x032E38B0 LDP X30, X23, [X31 + 0x30]
	0x032E38B4 ADD X31, X31, 0x60
	0x032E38B8 RET
	0x032E38BC B 0x32E38D0
	0x032E38C0 B 0x32E38D0
	0x032E38C4 B 0x32E38D0
	0x032E38C8 B 0x32E38D0
	0x032E38CC B 0x32E38D0
	0x032E38D0 MOV X19, X0
	0x032E38D4 CMP W1, 0x1
	0x032E38D8 B.NE 0x32E39E4
	0x032E38DC MOV X0, X19
	0x032E38E0 BL 0x3EB1AD0
	0x032E38E4 MOV X19, X0
	0x032E38E8 ADRP X0, 0xE18000
	0x032E38EC LDR X0, [X0 + 0x8A8]
	0x032E38F0 BL 0x1C16D08
	0x032E38F4 LDR X8, [X19]
	0x032E38F8 LDR X1, [X8]
	0x032E38FC BL 0x1C17270
	0x032E3900 TBZ X0, 0x0, 0x32E3940
	0x032E3904 LDR X19, [X19]
	0x032E3908 BL 0x3EB1AE0
	0x032E390C ADRP X0, 0xE11000
	0x032E3910 LDR X0, [X0 + 0x7B8]
	0x032E3914 BL 0x1C16D08
	0x032E3918 LDR W8, [X0 + 0xE0]
	0x032E391C CBNZ W8, 0x32E3924
	0x032E3920 BL 0x1C16DFC
	0x032E3924 ADRP X0, 0xE43000
	0x032E3928 LDR X0, [X0 + 0xCE0]
	0x032E392C BL 0x1C16D08
	0x032E3930 MOV X1, X0
	0x032E3934 MOV X0, X19
	0x032E3938 BL 0x2299890
	0x032E393C B 0x32E3994
	0x032E3940 ADRP X0, 0xE10000
	0x032E3944 LDR X0, [X0 + 0x7D0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move TEMP, X1
	005 And TEMP, TEMP, -2147483648
	006 Compare TEMP, -2147483648
	007 JumpIfEqual {35}
	008 Move W20, [X0+60]
	009 Move W19, W1
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X11, [X0]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move W8, 256
	014 Move W10, 0xFFC7
	015 NotImplemented "Instruction CSEL not yet implemented."
	016 Move W9, W20
	017 ShiftRight W9, 31
	018 And W9, W9, 0x3FFFFFFF
	019 NotImplemented "Instruction MOVK not yet implemented."
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X12, [X11+1000]
	022 Move X2, [X11+1008]
	023 NotImplemented "Instruction CSEL not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CSEL not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CSEL not yet implemented."
	028 NotImplemented "Instruction BLR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 NotImplemented "Instruction CSET not yet implemented."
	033 Move X30, [X31+32]
	034 Return X0
	035 Move X0, 0xE3F000
	036 Move X0, [X0+1960]
	037 Call 0x1C17D08
	038 Call 0x1C17F10
	039 Move X19, X0
	040 Move X0, 0xE44000
	041 Move X0, [X0+3176]
	042 Call 0x1C17D08
	043 Move X1, X0
	044 Move X0, X19
	045 Call IOException..ctor, X0, X1
	046 Move X0, 0xE44000
	047 Move X0, [X0+3184]
	048 Call 0x1C17D08
	049 Move X1, X0
	050 Move X0, X19
	051 Call 0x1C17DEC

Method: System.Void Flush()

Disassembly:
	0x032E3948 BL 0x1C16D08

ISIL:
	001 Return 

Method: System.Threading.Tasks.Task FlushAsync(System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x032E394C LDR X8, [X19]
	0x032E3950 LDR X1, [X8]
	0x032E3954 BL 0x1C17270
	0x032E3958 TBZ X0, 0x0, 0x32E39BC
	0x032E395C LDR X19, [X19]
	0x032E3960 BL 0x3EB1AE0
	0x032E3964 ADRP X0, 0xE11000
	0x032E3968 LDR X0, [X0 + 0x7B8]
	0x032E396C BL 0x1C16D08
	0x032E3970 LDR W8, [X0 + 0xE0]
	0x032E3974 CBNZ W8, 0x32E397C
	0x032E3978 BL 0x1C16DFC
	0x032E397C ADRP X0, 0xE43000
	0x032E3980 LDR X0, [X0 + 0xCE8]
	0x032E3984 BL 0x1C16D08
	0x032E3988 MOV X1, X0
	0x032E398C MOV X0, X19
	0x032E3990 BL 0x2299DFC
	0x032E3994 MOV X19, X0
	0x032E3998 ADRP X0, 0xE43000
	0x032E399C LDR X0, [X0 + 0xD20]
	0x032E39A0 BL 0x1C16D08
	0x032E39A4 CBNZ X19, 0x32E39B4
	0x032E39A8 MOVZ W0, 0x26
	0x032E39AC MOV X1, X31
	0x032E39B0 BL 0x338F3E0
	0x032E39B4 MOV W0, W31
	0x032E39B8 B 0x32E389C
	0x032E39BC MOVZ W0, 0x8
	0x032E39C0 BL 0x3EB1AF0
	0x032E39C4 LDR X8, [X19]
	0x032E39C8 STR X8, [X0]
	0x032E39CC ADRP X1, 0xBD1000
	0x032E39D0 ADD X1, X1, 0xE58
	0x032E39D4 MOV X2, X31
	0x032E39D8 BL 0x3EB1B00
	0x032E39DC MOV X19, X0
	0x032E39E0 BL 0x3EB1AE0
	0x032E39E4 MOV X0, X19
	0x032E39E8 BL 0x1D2C690
	0x032E39EC BL 0x1990590
	0x032E39F0 STP X30, X19, [X31 - 0x10]!
	0x032E39F4 MOV X19, X0
	0x032E39F8 BL 0x32E2808
	0x032E39FC LDP W8, W9, [X19 + 0x34]
	0x032E3A00 SXTW X8, W8
	0x032E3A04 CMP W8, W9
	0x032E3A08 B.GE 0x32E3A34
	0x032E3A0C LDR X9, [X19 + 0x28]
	0x032E3A10 ADD W10, W8, 0x1
	0x032E3A14 STR W10, [X19 + 0x34]
	0x032E3A18 CBZ X9, 0x32E3A40
	0x032E3A1C LDR W10, [X9 + 0x18]
	0x032E3A20 CMP W8, W10
	0x032E3A24 B.CS 0x32E3A44
	0x032E3A28 ADD X8, X9, X8
	0x032E3A2C LDRB W0, [X8 + 0x20]
	0x032E3A30 B 0x32E3A38
	0x032E3A34 MOVN W0, 0x0
	0x032E3A38 LDP X30, X19, [X31], #0x10
	0x032E3A3C RET
	0x032E3A40 BL 0x1C16F20
	0x032E3A44 BL 0x1C16F28
	0x032E3A48 STR X30, [X31 - 0x40]!
	0x032E3A4C STP X24, X23, [X31 + 0x10]
	0x032E3A50 STP X22, X21, [X31 + 0x20]
	0x032E3A54 STP X20, X19, [X31 + 0x30]
	0x032E3A58 ADRP X24, 0x10F9000
	0x032E3A5C ADRP X22, 0xE43000
	0x032E3A60 ADRP X23, 0xE10000
	0x032E3A64 LDRB W8, [X24 + 0x9A5]
	0x032E3A68 LDR X22, [X22 + 0xCB8]
	0x032E3A6C LDR X23, [X23 + 0x6C0]
	0x032E3A70 MOV W21, W2
	0x032E3A74 MOV X19, X1
	0x032E3A78 MOV X20, X0
	0x032E3A7C TBNZ X8, 0x0, 0x32E3AA0
	0x032E3A80 ADRP X0, 0xE43000
	0x032E3A84 LDR X0, [X0 + 0xCB8]
	0x032E3A88 BL 0x1C16CF4
	0x032E3A8C ADRP X0, 0xE10000
	0x032E3A90 LDR X0, [X0 + 0x6C0]
	0x032E3A94 BL 0x1C16CF4
	0x032E3A98 MOVZ W8, 0x1
	0x032E3A9C STRB W8, [X24 + 0x9A5]
	0x032E3AA0 MOV X0, X20
	0x032E3AA4 MOV X1, X19
	0x032E3AA8 MOV W2, W21
	0x032E3AAC BL 0x32E3B98
	0x032E3AB0 MOV X0, X20
	0x032E3AB4 MOV X1, X31
	0x032E3AB8 BL 0x33BE520
	0x032E3ABC LDR X8, [X23]
	0x032E3AC0 LDR X23, [X22]
	0x032E3AC4 MOV X22, X0
	0x032E3AC8 LDR W9, [X8 + 0xE0]
	0x032E3ACC CBNZ W9, 0x32E3AD8
	0x032E3AD0 MOV X0, X8
	0x032E3AD4 BL 0x1C16DFC
	0x032E3AD8 MOV X0, X23
	0x032E3ADC MOV X1, X31
	0x032E3AE0 BL 0x338C698
	0x032E3AE4 MOV X1, X0
	0x032E3AE8 MOV X0, X22

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x10FA000
	007 Move [X31+8], X1
	008 Move X21, 0xE19000
	009 Move W8, [X20+2463]
	010 Move X21, [X21+2008]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xE19000
	017 Move X0, [X0+2008]
	018 Call 0x1C17CF4
	019 Move X0, 0xE12000
	020 Move X0, [X0+1976]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2463], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X20, 0xE12000
	030 Move X20, [X20+1976]
	031 Add X0, X31, 8
	032 Move X1, X31
	033 Call CancellationToken.get_IsCancellationRequested, X0
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {47}
	038 Move X0, [X20]
	039 Move X19, [X31+8]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X19
	045 Move X1, X31
	046 Call Task.FromCanceled, X0
	047 Move X8, [X19]
	048 Move X1, [X8+672]
	049 Move X9, [X8+664]
	050 Move X0, X19
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X0, [X20]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X19, 0x10F6000
	058 Move W8, [X19+3869]
	059 Compare W8, 0
	060 JumpIfNotEqual {66}
	061 Move X0, 0xE12000
	062 Move X0, [X0+1976]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X19+3869], W8
	066 Move X0, [X20]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {72}
	070 Call 0x1C17DFC
	071 Move X0, [X20]
	072 Move X8, [X0+184]
	073 Move X0, [X8+48]
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X30, [X31+16]
	077 Move X21, [X31+24]
	078 Add X31, X31, 48
	079 Return X0
	080 Move X19, X0
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X0, X19
	083 Call 0x3EB2AD0
	084 Move X19, X0
	085 Move X0, 0xE11000
	086 Move X0, [X0+2000]
	087 Call 0x1C17D08
	088 Move X8, [X19]
	089 Move X1, [X8]
	090 Call 0x1C18270
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {107}
	095 Move X19, [X19]
	096 Call 0x3EB2AE0
	097 Move X0, 0xE12000
	098 Move X0, [X0+1976]
	099 Call 0x1C17D08
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move X0, X19
	105 Move X1, X31
	106 Call Task.FromException, X0
	107 Move W0, 8
	108 Call 0x3EB2AF0
	109 Move X8, [X19]
	110 Move [X0], X8
	111 Move X1, 0xBD2000
	112 Add X1, X1, 3672
	113 Move X2, X31
	114 Call 0x3EB2B00
	115 Move X19, X0
	116 Call 0x3EB2AE0
	117 Move X0, X19
	118 Call 0x1D2D690
	119 Call 0x1991590

Method: System.Byte[] GetBuffer()

Disassembly:
	0x032E3AEC MOV X2, X31
	0x032E3AF0 BL 0x3395F0C
	0x032E3AF4 TBZ X0, 0x0, 0x32E3B1C
	0x032E3AF8 MOV X0, X20
	0x032E3AFC MOV X1, X19
	0x032E3B00 MOV W2, W21
	0x032E3B04 LDP X20, X19, [X31 + 0x30]
	0x032E3B08 LDP X22, X21, [X31 + 0x20]
	0x032E3B0C LDP X24, X23, [X31 + 0x10]
	0x032E3B10 MOV X3, X31
	0x032E3B14 LDR X30, [X31], #0x40
	0x032E3B18 B 0x32F0088
	0x032E3B1C LDP W21, W8, [X20 + 0x34]
	0x032E3B20 MOV X0, X20
	0x032E3B24 SUB W22, W8, W21
	0x032E3B28 BL 0x32E2808
	0x032E3B2C LDP W9, W8, [X20 + 0x34]
	0x032E3B30 SUB W8, W8, W9
	0x032E3B34 CMP W8, W22
	0x032E3B38 CSEL W8, W22, W8, GT
	0x032E3B3C BIC W3, W8, W8, 0x1F
	0x032E3B40 ADD W9, W3, W9
	0x032E3B44 CMP W8, 0x1
	0x032E3B48 STR W9, [X20 + 0x34]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+66]
	004 Compare W8, 0
	005 JumpIfEqual {10}
	006 Move X0, [X0+40]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, 0xE3F000
	011 Move X0, [X0+1976]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0xE44000
	016 Move X0, [X0+3192]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call UnauthorizedAccessException..ctor, X0, X1
	022 Move X0, 0xE44000
	023 Move X0, [X0+3200]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Boolean TryGetBuffer(out System.ArraySegment`1<System.Byte> buffer)

Disassembly:
	0x032E3B4C B.LT 0x32E3B80
	0x032E3B50 CBZ X19, 0x32E3B94
	0x032E3B54 LDR X8, [X19]
	0x032E3B58 LDR X1, [X20 + 0x28]
	0x032E3B5C MOV X0, X19
	0x032E3B60 MOV W2, W21
	0x032E3B64 LDR X5, [X8 + 0x388]
	0x032E3B68 LDR X4, [X8 + 0x390]
	0x032E3B6C LDP X20, X19, [X31 + 0x30]
	0x032E3B70 LDP X22, X21, [X31 + 0x20]
	0x032E3B74 LDP X24, X23, [X31 + 0x10]
	0x032E3B78 LDR X30, [X31], #0x40
	0x032E3B7C BR X5
	0x032E3B80 LDP X20, X19, [X31 + 0x30]
	0x032E3B84 LDP X22, X21, [X31 + 0x20]
	0x032E3B88 LDP X24, X23, [X31 + 0x10]
	0x032E3B8C LDR X30, [X31], #0x40
	0x032E3B90 RET
	0x032E3B94 BL 0x1C16F20
	0x032E3B98 SUB X31, X31, 0x30
	0x032E3B9C STP X30, X21, [X31 + 0x10]
	0x032E3BA0 STP X20, X19, [X31 + 0x20]
	0x032E3BA4 CBZ X1, 0x32E3C10
	0x032E3BA8 CMP W2, 0x0
	0x032E3BAC B.LE 0x32E3C44
	0x032E3BB0 MOV X21, X0
	0x032E3BB4 CBZ X0, 0x32E3CC0
	0x032E3BB8 LDR X8, [X21]
	0x032E3BBC MOV X19, X1
	0x032E3BC0 MOV X0, X21
	0x032E3BC4 LDP X9, X1, [X8 + 0x1A8]
	0x032E3BC8 BLR X9
	0x032E3BCC MOV W20, W0
	0x032E3BD0 TBNZ X0, 0x0, 0x32E3BE8
	0x032E3BD4 LDR X8, [X21]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10FA000
	007 Move W8, [X21+2464]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE3C000
	015 Move X0, [X0+2952]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2464], W8
	019 Move W21, [X20+66]
	020 Compare W21, 0
	021 JumpIfEqual {35}
	022 Move X8, 0xE3C000
	023 Move X8, [X8+2952]
	024 Move W2, [X20+48]
	025 Move W9, [X20+56]
	026 Move X1, [X20+40]
	027 Move X4, [X8]
	028 Add X0, X31, 0
	029 Subtract W3, W9, W2
	030 Move [X31], X31
	031 Move [X31+8], X31
	032 Call 0x2B88BB0, X0, X1, X2, X3
	033 Move V0, [X31]
	034 Move [X19], V0
	035 Move [X19], X31
	036 Move [X19+8], X31
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X30, [X31+16]
	041 Move X21, [X31+24]
	042 NotImplemented "Instruction CSET not yet implemented."
	043 Add X31, X31, 48
	044 Return X0

Method: System.Byte[] InternalGetBuffer()

Disassembly:
	0x032E3BD8 MOV X0, X21
	0x032E3BDC LDP X9, X1, [X8 + 0x1D8]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Int32 InternalGetPosition()

Disassembly:
	0x032E3BE0 BLR X9
	0x032E3BE4 TBZ X0, 0x0, 0x32E3D30

ISIL:
	001 Move W0, [X0+52]
	002 Return X0

Method: System.Int32 InternalReadInt32()

Disassembly:
	0x032E3BE8 LDR X8, [X19]
	0x032E3BEC MOV X0, X19
	0x032E3BF0 LDP X9, X1, [X8 + 0x1D8]
	0x032E3BF4 BLR X9
	0x032E3BF8 TBZ X0, 0x0, 0x32E3CC4
	0x032E3BFC TBZ X20, 0x0, 0x32E3CFC
	0x032E3C00 LDP X20, X19, [X31 + 0x20]
	0x032E3C04 LDP X30, X21, [X31 + 0x10]
	0x032E3C08 ADD X31, X31, 0x30
	0x032E3C0C RET
	0x032E3C10 ADRP X0, 0xE15000
	0x032E3C14 LDR X0, [X0 + 0x528]
	0x032E3C18 BL 0x1C16D08
	0x032E3C1C BL 0x1C16F10
	0x032E3C20 MOV X19, X0
	0x032E3C24 ADRP X0, 0xE3F000
	0x032E3C28 LDR X0, [X0 + 0x278]
	0x032E3C2C BL 0x1C16D08
	0x032E3C30 MOV X1, X0
	0x032E3C34 MOV X0, X19
	0x032E3C38 MOV X2, X31
	0x032E3C3C BL 0x330E100
	0x032E3C40 B 0x32E3DA4
	0x032E3C44 STR W2, [X31 + 0xC]
	0x032E3C48 ADRP X0, 0xE10000
	0x032E3C4C LDR X0, [X0 + 0x758]
	0x032E3C50 BL 0x1C16D08
	0x032E3C54 ADD X1, X31, 0xC
	0x032E3C58 BL 0x1C16E04
	0x032E3C5C MOV X19, X0
	0x032E3C60 ADRP X0, 0xE18000
	0x032E3C64 LDR X0, [X0 + 0x760]
	0x032E3C68 BL 0x1C16D08
	0x032E3C6C BL 0x1C16F10
	0x032E3C70 MOV X20, X0
	0x032E3C74 ADRP X0, 0xE3B000
	0x032E3C78 LDR X0, [X0 + 0xF58]
	0x032E3C7C BL 0x1C16D08
	0x032E3C80 MOV X21, X0
	0x032E3C84 ADRP X0, 0xE43000
	0x032E3C88 LDR X0, [X0 + 0xD28]
	0x032E3C8C BL 0x1C16D08
	0x032E3C90 MOV X3, X0
	0x032E3C94 MOV X0, X20
	0x032E3C98 MOV X1, X21
	0x032E3C9C MOV X2, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call MemoryStream.EnsureNotClosed, X0
	005 Move W8, [X19+52]
	006 Move W9, [X19+56]
	007 Move X8, W8
	008 Add W10, W8, 4
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move [X19+52], W10
	011 Move X9, [X19+40]
	012 Compare X9, 0
	013 JumpIfEqual {45}
	014 Move W10, [X9+24]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Add W11, W8, 1
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Add W12, W8, 2
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Add W13, W8, 3
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Add X8, X9, X8
	023 Add X10, X9, W11
	024 Move W0, [X8+32]
	025 Move W8, [X10+32]
	026 Add X9, X9, 32
	027 Move W10, [X9]
	028 Move W9, [X9]
	029 NotImplemented "Instruction BFM not yet implemented."
	030 NotImplemented "Instruction BFM not yet implemented."
	031 NotImplemented "Instruction BFM not yet implemented."
	032 Move X30, [X31+16]
	033 Move X19, [X31+24]
	034 Return X0
	035 Call 0x1C17F28
	036 Move [X19+52], W9
	037 Call Error.GetEndOfFile
	038 Move X19, X0
	039 Move X0, 0xE44000
	040 Move X0, [X0+3208]
	041 Call 0x1C17D08
	042 Move X1, X0
	043 Move X0, X19
	044 Call 0x1C17DEC
	045 Call 0x1C17F20

Method: System.Int32 InternalEmulateRead(System.Int32 count)

Disassembly:
	0x032E3CA0 MOV X4, X31
	0x032E3CA4 BL 0x3312C8C
	0x032E3CA8 ADRP X0, 0xE43000
	0x032E3CAC LDR X0, [X0 + 0xD30]
	0x032E3CB0 BL 0x1C16D08
	0x032E3CB4 MOV X1, X0
	0x032E3CB8 MOV X0, X20
	0x032E3CBC BL 0x1C16DEC
	0x032E3CC0 BL 0x1C16F20
	0x032E3CC4 LDR X8, [X19]
	0x032E3CC8 MOV X0, X19
	0x032E3CCC LDP X9, X1, [X8 + 0x1A8]
	0x032E3CD0 BLR X9
	0x032E3CD4 TBZ X0, 0x0, 0x32E3D60
	0x032E3CD8 TBZ X20, 0x0, 0x32E3CFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X20, X0
	006 Call MemoryStream.EnsureNotClosed, X0
	007 Move W9, [X20+52]
	008 Move W8, [X20+56]
	009 Subtract W8, W8, W9
	010 NotImplemented "Instruction CMP not yet implemented."
	011 NotImplemented "Instruction CSEL not yet implemented."
	012 NotImplemented "Instruction BIC not yet implemented."
	013 Add W8, W0, W9
	014 Move [X20+52], W8
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 Return X0

Method: System.Int32 get_Capacity()

Disassembly:
	0x032E3CDC ADRP X0, 0xE10000
	0x032E3CE0 LDR X0, [X0 + 0xB40]
	0x032E3CE4 BL 0x1C16D08
	0x032E3CE8 BL 0x1C16F10
	0x032E3CEC MOV X19, X0
	0x032E3CF0 ADRP X0, 0xE3F000
	0x032E3CF4 LDR X0, [X0 + 0xDE0]
	0x032E3CF8 B 0x32E3D18

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call MemoryStream.EnsureNotClosed, X0
	005 Move W8, [X19+60]
	006 Move W9, [X19+48]
	007 Subtract W0, W8, W9
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return X0

Method: System.Void set_Capacity(System.Int32 value)

Disassembly:
	0x032E3CFC ADRP X0, 0xE10000
	0x032E3D00 LDR X0, [X0 + 0xB40]
	0x032E3D04 BL 0x1C16D08
	0x032E3D08 BL 0x1C16F10
	0x032E3D0C MOV X19, X0
	0x032E3D10 ADRP X0, 0xE3F000
	0x032E3D14 LDR X0, [X0 + 0xD88]
	0x032E3D18 BL 0x1C16D08
	0x032E3D1C MOV X1, X0
	0x032E3D20 MOV X0, X19
	0x032E3D24 MOV X2, X31
	0x032E3D28 BL 0x3379A44
	0x032E3D2C B 0x32E3DA4
	0x032E3D30 ADRP X0, 0xE39000
	0x032E3D34 LDR X0, [X0 + 0x4B8]
	0x032E3D38 BL 0x1C16D08
	0x032E3D3C BL 0x1C16F10
	0x032E3D40 MOV X19, X0
	0x032E3D44 ADRP X0, 0xE43000
	0x032E3D48 LDR X0, [X0 + 0xBE8]
	0x032E3D4C BL 0x1C16D08
	0x032E3D50 MOV X2, X0
	0x032E3D54 MOV X0, X19
	0x032E3D58 MOV X1, X31
	0x032E3D5C B 0x32E3D9C
	0x032E3D60 ADRP X0, 0xE39000
	0x032E3D64 LDR X0, [X0 + 0x4B8]
	0x032E3D68 BL 0x1C16D08
	0x032E3D6C BL 0x1C16F10
	0x032E3D70 MOV X19, X0
	0x032E3D74 ADRP X0, 0xE3F000
	0x032E3D78 LDR X0, [X0 + 0x278]
	0x032E3D7C BL 0x1C16D08
	0x032E3D80 MOV X20, X0
	0x032E3D84 ADRP X0, 0xE43000
	0x032E3D88 LDR X0, [X0 + 0xBE8]
	0x032E3D8C BL 0x1C16D08
	0x032E3D90 MOV X2, X0
	0x032E3D94 MOV X0, X19
	0x032E3D98 MOV X1, X20
	0x032E3D9C MOV X3, X31
	0x032E3DA0 BL 0x338C410
	0x032E3DA4 ADRP X0, 0xE43000
	0x032E3DA8 LDR X0, [X0 + 0xD30]
	0x032E3DAC BL 0x1C16D08
	0x032E3DB0 MOV X1, X0
	0x032E3DB4 MOV X0, X19
	0x032E3DB8 BL 0x1C16DEC
	0x032E3DBC SUB X31, X31, 0x50
	0x032E3DC0 STP X30, X25, [X31 + 0x10]
	0x032E3DC4 STP X24, X23, [X31 + 0x20]
	0x032E3DC8 STP X22, X21, [X31 + 0x30]
	0x032E3DCC STP X20, X19, [X31 + 0x40]
	0x032E3DD0 ADRP X25, 0x10F9000
	0x032E3DD4 STR X3, [X31 + 0x8]
	0x032E3DD8 ADRP X23, 0xE43000
	0x032E3DDC ADRP X24, 0xE10000
	0x032E3DE0 LDRB W8, [X25 + 0x9A6]
	0x032E3DE4 LDR X23, [X23 + 0xCB8]
	0x032E3DE8 LDR X24, [X24 + 0x6C0]
	0x032E3DEC MOV X21, X3
	0x032E3DF0 MOV W22, W2
	0x032E3DF4 MOV X19, X1
	0x032E3DF8 MOV X20, X0
	0x032E3DFC TBNZ X8, 0x0, 0x32E3E44
	0x032E3E00 ADRP X0, 0xE18000
	0x032E3E04 LDR X0, [X0 + 0x7D8]
	0x032E3E08 BL 0x1C16CF4
	0x032E3E0C ADRP X0, 0xE43000
	0x032E3E10 LDR X0, [X0 + 0xCB8]
	0x032E3E14 BL 0x1C16CF4
	0x032E3E18 ADRP X0, 0xE18000
	0x032E3E1C LDR X0, [X0 + 0x558]
	0x032E3E20 BL 0x1C16CF4
	0x032E3E24 ADRP X0, 0xE11000
	0x032E3E28 LDR X0, [X0 + 0x7B8]
	0x032E3E2C BL 0x1C16CF4
	0x032E3E30 ADRP X0, 0xE10000
	0x032E3E34 LDR X0, [X0 + 0x6C0]
	0x032E3E38 BL 0x1C16CF4
	0x032E3E3C MOVZ W8, 0x1
	0x032E3E40 STRB W8, [X25 + 0x9A6]
	0x032E3E44 MOV X0, X20
	0x032E3E48 MOV X1, X19
	0x032E3E4C MOV W2, W22
	0x032E3E50 BL 0x32E3B98
	0x032E3E54 MOV X0, X20
	0x032E3E58 MOV X1, X31
	0x032E3E5C BL 0x33BE520
	0x032E3E60 LDR X8, [X24]
	0x032E3E64 LDR X24, [X23]
	0x032E3E68 MOV X23, X0
	0x032E3E6C LDR W9, [X8 + 0xE0]
	0x032E3E70 CBNZ W9, 0x32E3E7C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10FA000
	006 Move W8, [X21+2465]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE11000
	014 Move X0, [X0+1560]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2465], W8
	018 Move X8, [X20]
	019 Move X0, X20
	020 Move X9, [X8+488]
	021 Move X1, [X8+496]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X0, X20
	025 Call MemoryStream.EnsureNotClosed, X0
	026 Move W8, [X20+64]
	027 Compare W8, 0
	028 JumpIfNotEqual {38}
	029 Move X8, [X20]
	030 Move X0, X20
	031 Move X9, [X8+984]
	032 Move X1, [X8+992]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W8, [X20+64]
	036 Compare W8, 0
	037 JumpIfEqual {58}
	038 Move W8, [X20+60]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X8, 0xE11000
	042 Move X8, [X8+1560]
	043 Move W1, W19
	044 Move X0, [X8]
	045 Call 0x1C17D6C
	046 Move W4, [X20+56]
	047 Move X21, X0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X0, [X20+40]
	050 Move W1, W31
	051 Move X2, X21
	052 Move W3, W31
	053 Move X5, X31
	054 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	055 Move [X20+40], X21
	056 Move [X20+40], X31
	057 Move [X20+60], W19
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Return 
	063 Move X0, 0xE19000
	064 Move X0, [X0+1888]
	065 Call 0x1C17D08
	066 Call 0x1C17F10
	067 Move X19, X0
	068 Move X0, 0xE1B000
	069 Move X0, [X0+3784]
	070 Call 0x1C17D08
	071 Move X20, X0
	072 Move X0, 0xE3B000
	073 Move X0, [X0+672]
	074 Call 0x1C17D08
	075 Move X2, X0
	076 Move X0, X19
	077 Move X1, X20
	078 Move X3, X31
	079 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	080 Move X0, 0xE11000
	081 Move X0, [X0+2880]
	082 Call 0x1C17D08
	083 Call 0x1C17F10
	084 Move X19, X0
	085 Move X0, 0xE44000
	086 Move X0, [X0+3216]
	087 Call 0x1C17D08
	088 Move X1, X0
	089 Move X0, X19
	090 Move X2, X31
	091 Call NotSupportedException..ctor, X0, X1
	092 Move X0, 0xE44000
	093 Move X0, [X0+3224]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X19
	097 Call 0x1C17DEC

Method: System.Int64 get_Length()

Disassembly:
	0x032E3E74 MOV X0, X8
	0x032E3E78 BL 0x1C16DFC
	0x032E3E7C MOV X0, X24
	0x032E3E80 MOV X1, X31
	0x032E3E84 BL 0x338C698
	0x032E3E88 MOV X1, X0
	0x032E3E8C MOV X0, X23
	0x032E3E90 MOV X2, X31
	0x032E3E94 BL 0x3395F0C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call MemoryStream.EnsureNotClosed, X0
	005 Move W8, [X19+56]
	006 Move W9, [X19+48]
	007 Subtract W8, W8, W9
	008 Move X0, W8
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0

Method: System.Int64 get_Position()

Disassembly:
	0x032E3E98 TBZ X0, 0x0, 0x32E3EC8
	0x032E3E9C MOV X0, X20
	0x032E3EA0 MOV X1, X19
	0x032E3EA4 MOV W2, W22
	0x032E3EA8 MOV X3, X21
	0x032E3EAC LDP X20, X19, [X31 + 0x40]
	0x032E3EB0 LDP X22, X21, [X31 + 0x30]
	0x032E3EB4 LDP X24, X23, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call MemoryStream.EnsureNotClosed, X0
	005 Move W9, [X19+48]
	006 Move W8, [X19+52]
	007 Subtract W8, W8, W9
	008 Move X0, W8
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0

Method: System.Void set_Position(System.Int64 value)

Disassembly:
	0x032E3EB8 LDP X30, X25, [X31 + 0x10]
	0x032E3EBC MOV X4, X31
	0x032E3EC0 ADD X31, X31, 0x50
	0x032E3EC4 B 0x32EFF1C
	0x032E3EC8 ADRP X8, 0xE18000
	0x032E3ECC LDR X8, [X8 + 0x7D8]
	0x032E3ED0 LDR X0, [X8]
	0x032E3ED4 LDR W8, [X0 + 0xE0]
	0x032E3ED8 CBNZ W8, 0x32E3EE0
	0x032E3EDC BL 0x1C16DFC
	0x032E3EE0 ADD X0, X31, 0x8
	0x032E3EE4 MOV X1, X31
	0x032E3EE8 BL 0x33DD2B0
	0x032E3EEC TBZ X0, 0x0, 0x32E3F1C
	0x032E3EF0 ADRP X8, 0xE11000
	0x032E3EF4 LDR X8, [X8 + 0x7B8]
	0x032E3EF8 LDR X19, [X31 + 0x8]
	0x032E3EFC LDR X0, [X8]
	0x032E3F00 LDR W8, [X0 + 0xE0]
	0x032E3F04 CBNZ W8, 0x32E3F0C
	0x032E3F08 BL 0x1C16DFC
	0x032E3F0C MOV X0, X19
	0x032E3F10 MOV X1, X31
	0x032E3F14 BL 0x33EE044
	0x032E3F18 B 0x32E4060
	0x032E3F1C LDP W21, W8, [X20 + 0x34]
	0x032E3F20 MOV X0, X20
	0x032E3F24 SUB W22, W8, W21
	0x032E3F28 BL 0x32E2808
	0x032E3F2C LDP W9, W8, [X20 + 0x34]
	0x032E3F30 SUB W8, W8, W9
	0x032E3F34 CMP W8, W22
	0x032E3F38 CSEL W8, W22, W8, GT
	0x032E3F3C BIC W3, W8, W8, 0x1F
	0x032E3F40 ADD W9, W3, W9
	0x032E3F44 CMP W8, 0x0
	0x032E3F48 STR W9, [X20 + 0x34]
	0x032E3F4C B.LE 0x32E3FA8
	0x032E3F50 CBZ X19, 0x32E4078
	0x032E3F54 ADRP X9, 0xE18000
	0x032E3F58 LDR X9, [X9 + 0x558]
	0x032E3F5C LDR X8, [X19]
	0x032E3F60 LDR X9, [X9]
	0x032E3F64 LDRB W11, [X8 + 0x130]
	0x032E3F68 LDRB W10, [X9 + 0x130]
	0x032E3F6C CMP W11, W10
	0x032E3F70 B.CC 0x32E3F88
	0x032E3F74 LDR X11, [X8 + 0xC8]
	0x032E3F78 ADD X10, X11, X10, 0x3, LSL
	0x032E3F7C LDUR X10, [X10 - 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move TEMP, X1
	005 And TEMP, TEMP, 1
	006 Compare TEMP, 1
	007 JumpIfEqual {20}
	008 Move X20, X1
	009 Move X19, X0
	010 Call MemoryStream.EnsureNotClosed, X0
	011 Move W8, 0x80000000
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move W8, [X19+48]
	014 Add W8, W8, W20
	015 Move [X19+52], W8
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Return 
	020 Move X0, 0xE19000
	021 Move X0, [X0+1888]
	022 Call 0x1C17D08
	023 Call 0x1C17F10
	024 Move X19, X0
	025 Move X0, 0xE1B000
	026 Move X0, [X0+3784]
	027 Call 0x1C17D08
	028 Move X20, X0
	029 Move X0, 0xE39000
	030 Move X0, [X0+1648]
	031 Move X0, 0xE19000
	032 Move X0, [X0+1888]
	033 Call 0x1C17D08
	034 Call 0x1C17F10
	035 Move X19, X0
	036 Move X0, 0xE1B000
	037 Move X0, [X0+3784]
	038 Call 0x1C17D08
	039 Move X20, X0
	040 Move X0, 0xE44000
	041 Move X0, [X0+3232]
	042 Call 0x1C17D08
	043 Move X2, X0
	044 Move X0, X19
	045 Move X1, X20
	046 Move X3, X31
	047 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	048 Move X0, 0xE44000
	049 Move X0, [X0+3240]
	050 Call 0x1C17D08
	051 Move X1, X0
	052 Move X0, X19
	053 Call 0x1C17DEC

Method: System.Int32 Read(System.Byte[] buffer, System.Int32 offset, System.Int32 count)

Disassembly:
	0x032E3F80 CMP X10, X9
	0x032E3F84 B.EQ 0x32E3FF4
	0x032E3F88 LDR X4, [X31 + 0x8]
	0x032E3F8C LDR X1, [X20 + 0x28]
	0x032E3F90 LDR X9, [X8 + 0x318]
	0x032E3F94 LDR X5, [X8 + 0x320]
	0x032E3F98 MOV X0, X19
	0x032E3F9C MOV W2, W21
	0x032E3FA0 BLR X9
	0x032E3FA4 B 0x32E4060
	0x032E3FA8 ADRP X19, 0xE11000
	0x032E3FAC LDR X19, [X19 + 0x7B8]
	0x032E3FB0 LDR X0, [X19]
	0x032E3FB4 LDR W8, [X0 + 0xE0]
	0x032E3FB8 CBNZ W8, 0x32E3FC0
	0x032E3FBC BL 0x1C16DFC
	0x032E3FC0 ADRP X20, 0x10F5000
	0x032E3FC4 LDRB W8, [X20 + 0xF1D]
	0x032E3FC8 CBNZ W8, 0x32E3FE0
	0x032E3FCC ADRP X0, 0xE11000
	0x032E3FD0 LDR X0, [X0 + 0x7B8]
	0x032E3FD4 BL 0x1C16CF4
	0x032E3FD8 MOVZ W8, 0x1
	0x032E3FDC STRB W8, [X20 + 0xF1D]
	0x032E3FE0 LDR X0, [X19]
	0x032E3FE4 LDR W8, [X0 + 0xE0]
	0x032E3FE8 CBNZ W8, 0x32E4058
	0x032E3FEC BL 0x1C16DFC
	0x032E3FF0 B 0x32E4054
	0x032E3FF4 LDR X1, [X20 + 0x28]
	0x032E3FF8 LDR X9, [X8 + 0x388]
	0x032E3FFC LDR X4, [X8 + 0x390]
	0x032E4000 MOV X0, X19
	0x032E4004 MOV W2, W21
	0x032E4008 BLR X9
	0x032E400C ADRP X19, 0xE10000
	0x032E4010 LDR X19, [X19 + 0x7B8]
	0x032E4014 LDR X0, [X19]
	0x032E4018 LDR W8, [X0 + 0xE0]
	0x032E401C CBNZ W8, 0x32E4024
	0x032E4020 BL 0x1C16DFC
	0x032E4024 ADRP X20, 0x10F4000
	0x032E4028 LDRB W8, [X20 + 0xF1D]
	0x032E402C CBNZ W8, 0x32E4044
	0x032E4030 ADRP X0, 0xE10000
	0x032E4034 LDR X0, [X0 + 0x7B8]
	0x032E4038 BL 0x1C16CF4
	0x032E403C MOVZ W8, 0x1
	0x032E4040 STRB W8, [X20 + 0xF1D]
	0x032E4044 LDR X0, [X19]
	0x032E4048 LDR W8, [X0 + 0xE0]
	0x032E404C CBNZ W8, 0x32E4058
	0x032E4050 BL 0x1C16DFC
	0x032E4054 LDR X0, [X19]
	0x032E4058 LDR X8, [X0 + 0xB8]
	0x032E405C LDR X0, [X8 + 0x30]
	0x032E4060 LDP X20, X19, [X31 + 0x40]
	0x032E4064 LDP X22, X21, [X31 + 0x30]
	0x032E4068 LDP X24, X23, [X31 + 0x20]
	0x032E406C LDP X30, X25, [X31 + 0x10]
	0x032E4070 ADD X31, X31, 0x50
	0x032E4074 RET
	0x032E4078 BL 0x1C16F20
	0x032E407C B 0x32E4080
	0x032E4080 MOV X19, X0
	0x032E4084 CMP W1, 0x1
	0x032E4088 B.NE 0x32E410C
	0x032E408C MOV X0, X19
	0x032E4090 BL 0x3EB1AD0
	0x032E4094 MOV X19, X0
	0x032E4098 ADRP X0, 0xE0F000
	0x032E409C LDR X0, [X0 + 0x7D0]
	0x032E40A0 BL 0x1C16D08
	0x032E40A4 LDR X8, [X19]
	0x032E40A8 LDR X1, [X8]
	0x032E40AC BL 0x1C17270
	0x032E40B0 TBZ X0, 0x0, 0x32E40E4
	0x032E40B4 LDR X19, [X19]
	0x032E40B8 BL 0x3EB1AE0
	0x032E40BC ADRP X0, 0xE10000
	0x032E40C0 LDR X0, [X0 + 0x7B8]
	0x032E40C4 BL 0x1C16D08
	0x032E40C8 LDR W8, [X0 + 0xE0]
	0x032E40CC CBNZ W8, 0x32E40D4
	0x032E40D0 BL 0x1C16DFC
	0x032E40D4 MOV X0, X19
	0x032E40D8 MOV X1, X31
	0x032E40DC BL 0x33EDAC4
	0x032E40E0 B 0x32E4060
	0x032E40E4 MOVZ W0, 0x8
	0x032E40E8 BL 0x3EB1AF0
	0x032E40EC LDR X8, [X19]
	0x032E40F0 STR X8, [X0]
	0x032E40F4 ADRP X1, 0xBD0000
	0x032E40F8 ADD X1, X1, 0xE58
	0x032E40FC MOV X2, X31
	0x032E4100 BL 0x3EB1B00
	0x032E4104 MOV X19, X0
	0x032E4108 BL 0x3EB1AE0
	0x032E410C MOV X0, X19
	0x032E4110 BL 0x1D2C690
	0x032E4114 BL 0x1990590
	0x032E4118 STP X30, X21, [X31 - 0x20]!
	0x032E411C STP X20, X19, [X31 + 0x10]
	0x032E4120 MOV W21, W2
	0x032E4124 MOV X20, X1
	0x032E4128 MOV X19, X0
	0x032E412C BL 0x32E2808
	0x032E4130 MOVZ W8, 0x80000000
	0x032E4134 CMP X20, X8
	0x032E4138 B.GE 0x32E41A4
	0x032E413C CMP W21, 0x2
	0x032E4140 B.EQ 0x32E4168
	0x032E4144 CMP W21, 0x1
	0x032E4148 B.EQ 0x32E4170
	0x032E414C CBNZ W21, 0x32E421C
	0x032E4150 TBNZ X20, 0x0, 0x32E41EC
	0x032E4154 LDR W9, [X19 + 0x30]
	0x032E4158 ADD W8, W9, W20
	0x032E415C CMP W8, W9
	0x032E4160 B.GE 0x32E4190

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {65}
	008 Move W20, W2
	009 Move TEMP, X2
	010 And TEMP, TEMP, -2147483648
	011 Compare TEMP, -2147483648
	012 JumpIfEqual {82}
	013 Move W22, W3
	014 Move TEMP, X3
	015 And TEMP, TEMP, -2147483648
	016 Compare TEMP, -2147483648
	017 JumpIfEqual {89}
	018 Move W8, [X1+24]
	019 Move X21, X1
	020 Subtract W8, W8, W20
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X19, X0
	023 Call MemoryStream.EnsureNotClosed, X0
	024 Move W1, [X19+52]
	025 Move W8, [X19+56]
	026 Subtract W8, W8, W1
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CSEL not yet implemented."
	029 Subtract W8, W22, 1
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, [X19+40]
	032 Move X2, X21
	033 Move W3, W20
	034 Move W4, W22
	035 Move X5, X31
	036 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	037 Move X9, [X19+40]
	038 Compare X9, 0
	039 JumpIfEqual {64}
	040 Move W10, [X19+52]
	041 Move W11, [X9+24]
	042 Add W10, W8, W10
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W12, [X21+24]
	045 Add W11, W20, W8
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Add X9, X9, W10
	048 Move W9, [X9+32]
	049 Add X10, X21, W11
	050 Subtract W8, W8, 1
	051 Move [X10+32], W9
	052 Move W8, [X19+52]
	053 Add W8, W8, W22
	054 Move [X19+52], W8
	055 Move W22, W31
	056 Move W0, W22
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Return X0
	063 Call 0x1C17F28
	064 Call 0x1C17F20
	065 Move X0, 0xE15000
	066 Move X0, [X0+1320]
	067 Call 0x1C17D08
	068 Call 0x1C17F10
	069 Move X19, X0
	070 Move X0, 0xE3B000
	071 Move X0, [X0+3912]
	072 Call 0x1C17D08
	073 Move X20, X0
	074 Move X0, 0xE43000
	075 Move X0, [X0+3136]
	076 Call 0x1C17D08
	077 Move X2, X0
	078 Move X0, X19
	079 Move X1, X20
	080 Move X3, X31
	081 Call ArgumentNullException..ctor, X0, X1, X2
	082 Move X0, 0xE18000
	083 Move X0, [X0+1888]
	084 Call 0x1C17D08
	085 Call 0x1C17F10
	086 Move X19, X0
	087 Move X0, 0xE3F000
	088 Move X0, [X0+3472]
	089 Move X0, 0xE18000
	090 Move X0, [X0+1888]
	091 Call 0x1C17D08
	092 Call 0x1C17F10
	093 Move X19, X0
	094 Move X0, 0xE38000
	095 Move X0, [X0+1608]
	096 Call 0x1C17D08
	097 Move X20, X0
	098 Move X0, 0xE38000
	099 Move X0, [X0+1648]
	100 Call 0x1C17D08
	101 Move X2, X0
	102 Move X0, X19
	103 Move X1, X20
	104 Move X3, X31
	105 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	106 Move X0, 0xE18000
	107 Move X0, [X0+1400]
	108 Call 0x1C17D08
	109 Call 0x1C17F10
	110 Move X19, X0
	111 Move X0, 0xE38000
	112 Move X0, [X0+1888]
	113 Call 0x1C17D08
	114 Move X1, X0
	115 Move X0, X19
	116 Move X2, X31
	117 Call ArgumentException..ctor, X0, X1
	118 Move X0, 0xE43000
	119 Move X0, [X0+3248]
	120 Call 0x1C17D08
	121 Move X1, X0
	122 Move X0, X19
	123 Call 0x1C17DEC

Method: System.Int32 Read(System.Span`1<System.Byte> buffer)

Disassembly:
	0x032E4164 B 0x32E41EC
	0x032E4168 LDRSW X9, [X19 + 0x38]
	0x032E416C B 0x32E4174
	0x032E4170 LDRSW X9, [X19 + 0x34]
	0x032E4174 LDRSW X10, [X19 + 0x30]
	0x032E4178 ADD W8, W9, W20
	0x032E417C CMP W8, W10
	0x032E4180 B.LT 0x32E41EC
	0x032E4184 ADD X9, X9, X20
	0x032E4188 CMP X9, X10
	0x032E418C B.LT 0x32E41EC
	0x032E4190 STR W8, [X19 + 0x34]
	0x032E4194 LDP X20, X19, [X31 + 0x10]
	0x032E4198 SXTW X0, W8
	0x032E419C LDP X30, X21, [X31], #0x20
	0x032E41A0 RET
	0x032E41A4 ADRP X0, 0xE17000
	0x032E41A8 LDR X0, [X0 + 0x760]
	0x032E41AC BL 0x1C16D08
	0x032E41B0 BL 0x1C16F10
	0x032E41B4 MOV X19, X0
	0x032E41B8 ADRP X0, 0xE3E000
	0x032E41BC LDR X0, [X0 + 0xD90]
	0x032E41C0 BL 0x1C16D08
	0x032E41C4 MOV X20, X0
	0x032E41C8 ADRP X0, 0xE42000
	0x032E41CC LDR X0, [X0 + 0xCA0]
	0x032E41D0 BL 0x1C16D08
	0x032E41D4 MOV X2, X0
	0x032E41D8 MOV X0, X19
	0x032E41DC MOV X1, X20
	0x032E41E0 MOV X3, X31
	0x032E41E4 BL 0x3311888
	0x032E41E8 B 0x32E424C
	0x032E41EC ADRP X0, 0xE3D000
	0x032E41F0 LDR X0, [X0 + 0x7A8]
	0x032E41F4 BL 0x1C16D08
	0x032E41F8 BL 0x1C16F10
	0x032E41FC MOV X19, X0
	0x032E4200 ADRP X0, 0xE42000
	0x032E4204 LDR X0, [X0 + 0xD38]
	0x032E4208 BL 0x1C16D08
	0x032E420C MOV X1, X0
	0x032E4210 MOV X0, X19
	0x032E4214 BL 0x32E16BC
	0x032E4218 B 0x32E424C
	0x032E421C ADRP X0, 0xE17000
	0x032E4220 LDR X0, [X0 + 0x578]
	0x032E4224 BL 0x1C16D08
	0x032E4228 BL 0x1C16F10
	0x032E422C MOV X19, X0
	0x032E4230 ADRP X0, 0xE42000
	0x032E4234 LDR X0, [X0 + 0xD40]
	0x032E4238 BL 0x1C16D08
	0x032E423C MOV X1, X0
	0x032E4240 MOV X0, X19
	0x032E4244 MOV X2, X31
	0x032E4248 BL 0x3314A68
	0x032E424C ADRP X0, 0xE42000
	0x032E4250 LDR X0, [X0 + 0xD48]
	0x032E4254 BL 0x1C16D08
	0x032E4258 MOV X1, X0
	0x032E425C MOV X0, X19
	0x032E4260 BL 0x1C16DEC
	0x032E4264 STR X30, [X31 - 0x20]!
	0x032E4268 STP X20, X19, [X31 + 0x10]
	0x032E426C UBFM X8, X1, 0x1F, 0x3F
	0x032E4270 CBNZ X8, 0x32E42E4
	0x032E4274 MOV X20, X1
	0x032E4278 MOV X19, X0
	0x032E427C BL 0x32E283C
	0x032E4280 LDR W8, [X19 + 0x30]
	0x032E4284 MOVN W9, 0x80000000
	0x032E4288 SUB W9, W9, W8
	0x032E428C SXTW X9, W9
	0x032E4290 CMP X9, X20
	0x032E4294 B.LT 0x32E42E4
	0x032E4298 ADD W20, W8, W20
	0x032E429C MOV X0, X19
	0x032E42A0 MOV W1, W20
	0x032E42A4 BL 0x32E2894
	0x032E42A8 TBNZ X0, 0x0, 0x32E42C4
	0x032E42AC LDR W1, [X19 + 0x38]
	0x032E42B0 SUBS W2, W20, W1
	0x032E42B4 B.LE 0x32E42C4
	0x032E42B8 LDR X0, [X19 + 0x28]
	0x032E42BC MOV X3, X31
	0x032E42C0 BL 0x339FA34
	0x032E42C4 LDR W8, [X19 + 0x34]
	0x032E42C8 STR W20, [X19 + 0x38]
	0x032E42CC CMP W8, W20
	0x032E42D0 B.LE 0x32E42D8
	0x032E42D4 STR W20, [X19 + 0x34]
	0x032E42D8 LDP X20, X19, [X31 + 0x10]
	0x032E42DC LDR X30, [X31], #0x20
	0x032E42E0 RET
	0x032E42E4 ADRP X0, 0xE17000
	0x032E42E8 LDR X0, [X0 + 0x760]
	0x032E42EC BL 0x1C16D08
	0x032E42F0 BL 0x1C16F10
	0x032E42F4 MOV X19, X0
	0x032E42F8 ADRP X0, 0xE19000
	0x032E42FC LDR X0, [X0 + 0xEC8]
	0x032E4300 BL 0x1C16D08
	0x032E4304 MOV X20, X0
	0x032E4308 ADRP X0, 0xE42000
	0x032E430C LDR X0, [X0 + 0xCA0]
	0x032E4310 BL 0x1C16D08
	0x032E4314 MOV X2, X0
	0x032E4318 MOV X0, X19
	0x032E431C MOV X1, X20
	0x032E4320 MOV X3, X31
	0x032E4324 BL 0x3311888
	0x032E4328 ADRP X0, 0xE42000
	0x032E432C LDR X0, [X0 + 0xD50]
	0x032E4330 BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X24, 0x10F9000
	010 Move X22, 0xE43000
	011 Move X23, 0xE10000
	012 Move W8, [X24+2466]
	013 Move X22, [X22+3256]
	014 Move X23, [X23+1728]
	015 Move X20, X2
	016 Move X21, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {42}
	022 Move X0, 0xE10000
	023 Move X0, [X0+1448]
	024 Call 0x1C17CF4
	025 Move X0, 0xE43000
	026 Move X0, [X0+3256]
	027 Call 0x1C17CF4
	028 Move X0, 0xE3B000
	029 Move X0, [X0+744]
	030 Call 0x1C17CF4
	031 Move X0, 0xE3F000
	032 Move X0, [X0+3680]
	033 Call 0x1C17CF4
	034 Move X0, 0xE3F000
	035 Move X0, [X0+2344]
	036 Call 0x1C17CF4
	037 Move X0, 0xE10000
	038 Move X0, [X0+1728]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X24+2466], W8
	042 Move X0, X19
	043 Move X1, X31
	044 Move [X31], X31
	045 Move [X31+8], X31
	046 Call "il2cpp_vm_object_is_inst", X0
	047 Move X8, [X23]
	048 Move X23, [X22]
	049 Move X22, X0
	050 Move W9, [X8+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {55}
	053 Move X0, X8
	054 Call 0x1C17DFC
	055 Move X0, X23
	056 Move X1, X31
	057 Call Type.GetTypeFromHandle, X0
	058 Move X1, X0
	059 Move X0, X22
	060 Move X2, X31
	061 Call Type.op_Inequality, X0, X1
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {72}
	066 Move X0, X19
	067 Move X1, X21
	068 Move X2, X20
	069 Move X3, X31
	070 Call Stream.Read, X0, X1
	071 Move W22, W0
	072 Move X0, X19
	073 Call MemoryStream.EnsureNotClosed, X0
	074 Move X8, 0xE10000
	075 Move X8, [X8+1448]
	076 Move W23, [X19+52]
	077 Move W22, [X19+56]
	078 Move X0, [X8]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Subtract W0, W22, W23
	084 Move W1, W20
	085 Move X2, X31
	086 Call Math.Min, X0, X1
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X23, [X19+40]
	089 Move W22, W0
	090 Compare X23, 0
	091 JumpIfEqual {102}
	092 NotImplemented "Instruction LDRSW not yet implemented."
	093 Move W8, [X23+24]
	094 Subtract W8, W8, W24
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X0, X31
	097 Call ThrowHelper.ThrowArgumentOutOfRangeException
	098 Add X8, X23, X24
	099 Add X8, X8, 32
	100 Move W9, W22
	101 Move W22, W31
	102 Move X0, X31
	103 Call ThrowHelper.ThrowArgumentOutOfRangeException
	104 Move X8, X31
	105 Move W9, W31
	106 Move X10, 0xE3B000
	107 Move X10, [X10+744]
	108 Add X0, X31, 0
	109 Move X1, X21
	110 Move X2, X20
	111 Move X3, [X10]
	112 Move [X31], X8
	113 Move [X31+8], W9
	114 Move [X31+12], W31
	115 Call 0x25FBF94, X0, X1
	116 Move W8, [X19+52]
	117 Add W8, W8, W22
	118 Move [X19+52], W8
	119 Move W0, W22
	120 Move X20, [X31+64]
	121 Move X19, [X31+72]
	122 Move X22, [X31+48]
	123 Move X21, [X31+56]
	124 Move X24, [X31+32]
	125 Move X23, [X31+40]
	126 Move X30, [X31+16]
	127 Add X31, X31, 80
	128 Return X0

Method: System.Threading.Tasks.Task`1<System.Int32> ReadAsync(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x032E4334 MOV X1, X0
	0x032E4338 MOV X0, X19
	0x032E433C BL 0x1C16DEC
	0x032E4340 STR X30, [X31 - 0x20]!
	0x032E4344 STP X20, X19, [X31 + 0x10]
	0x032E4348 ADRP X20, 0x10F8000
	0x032E434C LDRB W8, [X20 + 0x9A7]
	0x032E4350 MOV X19, X0
	0x032E4354 TBNZ X8, 0x0, 0x32E4378
	0x032E4358 ADRP X0, 0xE17000
	0x032E435C LDR X0, [X0 + 0xCC8]
	0x032E4360 BL 0x1C16CF4
	0x032E4364 ADRP X0, 0xE0F000
	0x032E4368 LDR X0, [X0 + 0x618]
	0x032E436C BL 0x1C16CF4
	0x032E4370 MOVZ W8, 0x1
	0x032E4374 STRB W8, [X20 + 0x9A7]
	0x032E4378 LDR W8, [X19 + 0x38]
	0x032E437C LDR W9, [X19 + 0x30]
	0x032E4380 SUBS W20, W8, W9
	0x032E4384 B.EQ 0x32E43C4
	0x032E4388 ADRP X8, 0xE0F000
	0x032E438C LDR X8, [X8 + 0x618]
	0x032E4390 MOV W1, W20
	0x032E4394 LDR X0, [X8]
	0x032E4398 BL 0x1C16D6C
	0x032E439C LDR X8, [X19 + 0x28]
	0x032E43A0 LDR W1, [X19 + 0x30]
	0x032E43A4 MOV X19, X0
	0x032E43A8 MOV X2, X19
	0x032E43AC MOV X0, X8
	0x032E43B0 MOV W3, W31
	0x032E43B4 MOV W4, W20
	0x032E43B8 MOV X5, X31
	0x032E43BC BL 0x33A8A9C
	0x032E43C0 B 0x32E441C
	0x032E43C4 ADRP X8, 0xE17000
	0x032E43C8 LDR X8, [X8 + 0xCC8]
	0x032E43CC LDR X19, [X8]
	0x032E43D0 LDR X8, [X19 + 0x38]
	0x032E43D4 CBNZ X8, 0x32E43E4
	0x032E43D8 MOV X0, X19
	0x032E43DC BL 0x1C5C6E0
	0x032E43E0 LDR X8, [X19 + 0x38]
	0x032E43E4 LDR X0, [X8 + 0x10]
	0x032E43E8 LDRB W8, [X0 + 0x135]
	0x032E43EC TBNZ X8, 0x0, 0x32E43F4
	0x032E43F0 BL 0x1C5C684
	0x032E43F4 LDR W8, [X0 + 0xE0]
	0x032E43F8 CBNZ W8, 0x32E4400
	0x032E43FC BL 0x1C16DFC
	0x032E4400 LDR X8, [X19 + 0x38]
	0x032E4404 LDR X0, [X8 + 0x10]
	0x032E4408 LDRB W8, [X0 + 0x135]
	0x032E440C TBNZ X8, 0x0, 0x32E4414
	0x032E4410 BL 0x1C5C684
	0x032E4414 LDR X8, [X0 + 0xB8]
	0x032E4418 LDR X19, [X8]
	0x032E441C MOV X0, X19
	0x032E4420 LDP X20, X19, [X31 + 0x10]
	0x032E4424 LDR X30, [X31], #0x20
	0x032E4428 RET
	0x032E442C STP X30, X25, [X31 - 0x40]!
	0x032E4430 STP X24, X23, [X31 + 0x10]
	0x032E4434 STP X22, X21, [X31 + 0x20]
	0x032E4438 STP X20, X19, [X31 + 0x30]
	0x032E443C CBZ X1, 0x32E4588
	0x032E4440 MOV W20, W2
	0x032E4444 TBNZ X2, 0x1F, 0x32E45D0
	0x032E4448 MOV W23, W3
	0x032E444C TBNZ X3, 0x1F, 0x32E45F0
	0x032E4450 LDR W8, [X1 + 0x18]
	0x032E4454 MOV X21, X1
	0x032E4458 SUB W8, W8, W20
	0x032E445C CMP W8, W23
	0x032E4460 B.LT 0x32E4638
	0x032E4464 MOV X19, X0
	0x032E4468 BL 0x32E2808
	0x032E446C MOV X0, X19
	0x032E4470 BL 0x32E283C
	0x032E4474 LDR W25, [X19 + 0x34]
	0x032E4478 ADDS W22, W25, W23
	0x032E447C B.MI 0x32E466C
	0x032E4480 LDR W24, [X19 + 0x38]
	0x032E4484 CMP W22, W24
	0x032E4488 B.LE 0x32E44D8
	0x032E448C LDR W8, [X19 + 0x3C]
	0x032E4490 CMP W22, W8
	0x032E4494 B.LE 0x32E44B8
	0x032E4498 MOV X0, X19
	0x032E449C MOV W1, W22
	0x032E44A0 BL 0x32E2894
	0x032E44A4 CMP W25, W24
	0x032E44A8 B.LE 0x32E44D4
	0x032E44AC TBNZ X0, 0x0, 0x32E44D4
	0x032E44B0 LDR W24, [X19 + 0x38]
	0x032E44B4 B 0x32E44C0
	0x032E44B8 CMP W25, W24
	0x032E44BC B.LE 0x32E44D4
	0x032E44C0 LDR X0, [X19 + 0x28]
	0x032E44C4 SUB W2, W22, W24
	0x032E44C8 MOV W1, W24
	0x032E44CC MOV X3, X31
	0x032E44D0 BL 0x339FA34
	0x032E44D4 STR W22, [X19 + 0x38]
	0x032E44D8 CMP W23, 0x9
	0x032E44DC B.LT 0x32E44E8
	0x032E44E0 LDR X2, [X19 + 0x28]
	0x032E44E4 B 0x32E4550
	0x032E44E8 LDR X2, [X19 + 0x28]
	0x032E44EC CMP X21, X2
	0x032E44F0 B.EQ 0x32E4550
	0x032E44F4 SUBS W8, W23, 0x1
	0x032E44F8 B.LT 0x32E4568
	0x032E44FC LDR W9, [X21 + 0x18]
	0x032E4500 ADD W10, W8, W20
	0x032E4504 CMP W10, W9
	0x032E4508 B.CS 0x32E4580
	0x032E450C CBZ X2, 0x32E4584
	0x032E4510 LDR W9, [X19 + 0x34]
	0x032E4514 LDR W10, [X2 + 0x18]
	0x032E4518 ADD W9, W8, W9
	0x032E451C CMP W9, W10
	0x032E4520 B.CS 0x32E4580
	0x032E4524 ADD W10, W20, W8
	0x032E4528 ADD X10, X21, W10, SXTW
	0x032E452C LDRB W10, [X10 + 0x20]
	0x032E4530 ADD X9, X2, W9, SXTW
	0x032E4534 SUBS W8, W8, 0x1
	0x032E4538 STRB W10, [X9 + 0x20]
	0x032E453C B.MI 0x32E4568
	0x032E4540 LDR W9, [X21 + 0x18]
	0x032E4544 LDR X2, [X19 + 0x28]
	0x032E4548 ADD W10, W20, W8
	0x032E454C B 0x32E4504
	0x032E4550 LDR W3, [X19 + 0x34]
	0x032E4554 MOV X0, X21
	0x032E4558 MOV W1, W20
	0x032E455C MOV W4, W23
	0x032E4560 MOV X5, X31
	0x032E4564 BL 0x33A8A9C
	0x032E4568 STR W22, [X19 + 0x34]
	0x032E456C LDP X20, X19, [X31 + 0x30]
	0x032E4570 LDP X22, X21, [X31 + 0x20]
	0x032E4574 LDP X24, X23, [X31 + 0x10]
	0x032E4578 LDP X30, X25, [X31], #0x40
	0x032E457C RET
	0x032E4580 BL 0x1C16F28
	0x032E4584 BL 0x1C16F20
	0x032E4588 ADRP X0, 0xE14000
	0x032E458C LDR X0, [X0 + 0x528]
	0x032E4590 BL 0x1C16D08
	0x032E4594 BL 0x1C16F10
	0x032E4598 MOV X19, X0
	0x032E459C ADRP X0, 0xE3A000
	0x032E45A0 LDR X0, [X0 + 0xF48]
	0x032E45A4 BL 0x1C16D08
	0x032E45A8 MOV X20, X0
	0x032E45AC ADRP X0, 0xE42000
	0x032E45B0 LDR X0, [X0 + 0xC40]
	0x032E45B4 BL 0x1C16D08
	0x032E45B8 MOV X2, X0
	0x032E45BC MOV X0, X19
	0x032E45C0 MOV X1, X20
	0x032E45C4 MOV X3, X31
	0x032E45C8 BL 0x3315F7C
	0x032E45CC B 0x32E4698
	0x032E45D0 ADRP X0, 0xE17000
	0x032E45D4 LDR X0, [X0 + 0x760]
	0x032E45D8 BL 0x1C16D08
	0x032E45DC BL 0x1C16F10
	0x032E45E0 MOV X19, X0
	0x032E45E4 ADRP X0, 0xE3E000
	0x032E45E8 LDR X0, [X0 + 0xD90]
	0x032E45EC B 0x32E460C
	0x032E45F0 ADRP X0, 0xE17000
	0x032E45F4 LDR X0, [X0 + 0x760]
	0x032E45F8 BL 0x1C16D08
	0x032E45FC BL 0x1C16F10
	0x032E4600 MOV X19, X0
	0x032E4604 ADRP X0, 0xE37000
	0x032E4608 LDR X0, [X0 + 0x648]
	0x032E460C BL 0x1C16D08
	0x032E4610 MOV X20, X0
	0x032E4614 ADRP X0, 0xE37000
	0x032E4618 LDR X0, [X0 + 0x670]
	0x032E461C BL 0x1C16D08
	0x032E4620 MOV X2, X0
	0x032E4624 MOV X0, X19
	0x032E4628 MOV X1, X20
	0x032E462C MOV X3, X31
	0x032E4630 BL 0x3311888
	0x032E4634 B 0x32E4698
	0x032E4638 ADRP X0, 0xE17000
	0x032E463C LDR X0, [X0 + 0x578]
	0x032E4640 BL 0x1C16D08
	0x032E4644 BL 0x1C16F10
	0x032E4648 MOV X19, X0
	0x032E464C ADRP X0, 0xE37000
	0x032E4650 LDR X0, [X0 + 0x760]
	0x032E4654 BL 0x1C16D08
	0x032E4658 MOV X1, X0
	0x032E465C MOV X0, X19
	0x032E4660 MOV X2, X31
	0x032E4664 BL 0x3314A68
	0x032E4668 B 0x32E4698
	0x032E466C ADRP X0, 0xE3D000
	0x032E4670 LDR X0, [X0 + 0x7A8]
	0x032E4674 BL 0x1C16D08
	0x032E4678 BL 0x1C16F10
	0x032E467C MOV X19, X0
	0x032E4680 ADRP X0, 0xE42000
	0x032E4684 LDR X0, [X0 + 0xC68]
	0x032E4688 BL 0x1C16D08
	0x032E468C MOV X1, X0
	0x032E4690 MOV X0, X19
	0x032E4694 BL 0x32E16BC
	0x032E4698 ADRP X0, 0xE42000
	0x032E469C LDR X0, [X0 + 0xD58]
	0x032E46A0 BL 0x1C16D08
	0x032E46A4 MOV X1, X0
	0x032E46A8 MOV X0, X19
	0x032E46AC BL 0x1C16DEC
	0x032E46B0 SUB X31, X31, 0x50
	0x032E46B4 STP X2, X30, [X31 + 0x8]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x10F9000
	009 Move W8, [X23+2467]
	010 Move W20, W3
	011 Move W21, W2
	012 Move X22, X1
	013 Move X19, X0
	014 Move [X31+8], X4
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0xE18000
	020 Move X0, [X0+2008]
	021 Call 0x1C17CF4
	022 Move X0, 0xE43000
	023 Move X0, [X0+3264]
	024 Call 0x1C17CF4
	025 Move X0, 0xE43000
	026 Move X0, [X0+3272]
	027 Call 0x1C17CF4
	028 Move X0, 0xE43000
	029 Move X0, [X0+3280]
	030 Call 0x1C17CF4
	031 Move X0, 0xE11000
	032 Move X0, [X0+1976]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X23+2467], W8
	036 Compare X22, 0
	037 JumpIfEqual {118}
	038 Move TEMP, X21
	039 And TEMP, TEMP, -2147483648
	040 Compare TEMP, -2147483648
	041 JumpIfEqual {135}
	042 Move TEMP, X20
	043 And TEMP, TEMP, -2147483648
	044 Compare TEMP, -2147483648
	045 JumpIfEqual {142}
	046 Move W8, [X22+24]
	047 Subtract W8, W8, W21
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X8, 0xE18000
	050 Move X8, [X8+2008]
	051 Move X0, [X8]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Add X0, X31, 8
	057 Move X1, X31
	058 Call CancellationToken.get_IsCancellationRequested, X0
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {77}
	063 Move X8, 0xE11000
	064 Move X8, [X8+1976]
	065 Move X19, [X31+8]
	066 Move X0, [X8]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X8, 0xE43000
	072 Move X8, [X8+3272]
	073 Move X0, X19
	074 Move X1, [X8]
	075 Call 0x229A598, X0
	076 Move X21, X0
	077 Move X8, [X19]
	078 Move X9, [X8+856]
	079 Move X4, [X8+864]
	080 Move X0, X19
	081 Move X1, X22
	082 Move W2, W21
	083 Move W3, W20
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move X21, [X19+72]
	086 Move W20, W0
	087 Compare X21, 0
	088 JumpIfEqual {95}
	089 Move X8, 0xE43000
	090 Move X8, [X8+3264]
	091 Move X1, [X8]
	092 Move X0, X21
	093 Call Task`1<Int32>.get_Result, X0
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X8, 0xE11000
	096 Move X8, [X8+1976]
	097 Move X0, [X8]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X8, 0xE43000
	103 Move X8, [X8+3280]
	104 Move X1, [X8]
	105 Move W0, W20
	106 Call Task.FromResult, X0
	107 Move X21, X0
	108 Move [X19+72], X0
	109 Move X0, X21
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X30, [X31+16]
	115 Move X23, [X31+24]
	116 Add X31, X31, 64
	117 Return X0
	118 Move X0, 0xE15000
	119 Move X0, [X0+1320]
	120 Call 0x1C17D08
	121 Call 0x1C17F10
	122 Move X19, X0
	123 Move X0, 0xE3B000
	124 Move X0, [X0+3912]
	125 Call 0x1C17D08
	126 Move X20, X0
	127 Move X0, 0xE43000
	128 Move X0, [X0+3136]
	129 Call 0x1C17D08
	130 Move X2, X0
	131 Move X0, X19
	132 Move X1, X20
	133 Move X3, X31
	134 Call ArgumentNullException..ctor, X0, X1, X2
	135 Move X0, 0xE18000
	136 Move X0, [X0+1888]
	137 Call 0x1C17D08
	138 Call 0x1C17F10
	139 Move X19, X0
	140 Move X0, 0xE3F000
	141 Move X0, [X0+3472]
	142 Move X0, 0xE18000
	143 Move X0, [X0+1888]
	144 Call 0x1C17D08
	145 Call 0x1C17F10
	146 Move X19, X0
	147 Move X0, 0xE38000
	148 Move X0, [X0+1608]
	149 Call 0x1C17D08
	150 Move X20, X0
	151 Move X0, 0xE38000
	152 Move X0, [X0+1648]
	153 Call 0x1C17D08
	154 Move X2, X0
	155 Move X0, X19
	156 Move X1, X20
	157 Move X3, X31
	158 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	159 Move X0, 0xE18000
	160 Move X0, [X0+1400]
	161 Call 0x1C17D08
	162 Call 0x1C17F10
	163 Move X19, X0
	164 Move X0, 0xE38000
	165 Move X0, [X0+1888]
	166 Call 0x1C17D08
	167 Move X1, X0
	168 Move X0, X19
	169 Move X2, X31
	170 Call ArgumentException..ctor, X0, X1
	171 Move X0, 0xE43000
	172 Move X0, [X0+3288]
	173 Call 0x1C17D08
	174 Move X1, X0
	175 Move X0, X19
	176 Call 0x1C17DEC
	177 Move X19, X0
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X0, X19
	180 Call 0x3EB2AD0
	181 Move X19, X0
	182 Move X0, 0xE18000
	183 Move X0, [X0+2216]
	184 Call 0x1C17D08
	185 Move X8, [X19]
	186 Move X1, [X8]
	187 Call 0x1C18270
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfNotEqual {207}
	192 Move X19, [X19]
	193 Call 0x3EB2AE0
	194 Move X0, 0xE11000
	195 Move X0, [X0+1976]
	196 Call 0x1C17D08
	197 Move W8, [X0+224]
	198 Compare W8, 0
	199 JumpIfNotEqual {201}
	200 Call 0x1C17DFC
	201 Move X0, 0xE43000
	202 Move X0, [X0+3296]
	203 Call 0x1C17D08
	204 Move X1, X0
	205 Move X0, X19
	206 Call 0x229A890, X0
	207 Move X0, 0xE10000
	208 Move X0, [X0+2000]
	209 Call 0x1C17D08
	210 Move X8, [X19]
	211 Move X1, [X8]
	212 Call 0x1C18270
	213 Move TEMP, X0
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfNotEqual {232}
	217 Move X19, [X19]
	218 Call 0x3EB2AE0
	219 Move X0, 0xE11000
	220 Move X0, [X0+1976]
	221 Call 0x1C17D08
	222 Move W8, [X0+224]
	223 Compare W8, 0
	224 JumpIfNotEqual {226}
	225 Call 0x1C17DFC
	226 Move X0, 0xE43000
	227 Move X0, [X0+3304]
	228 Call 0x1C17D08
	229 Move X1, X0
	230 Move X0, X19
	231 Call Task.FromException, X0
	232 Move W0, 8
	233 Call 0x3EB2AF0
	234 Move X8, [X19]
	235 Move [X0], X8
	236 Move X1, 0xBD1000
	237 Add X1, X1, 3672
	238 Move X2, X31
	239 Call 0x3EB2B00
	240 Move X19, X0
	241 Call 0x3EB2AE0
	242 Move X0, X19
	243 Call 0x1D2D690
	244 Call 0x1991590

Method: System.Threading.Tasks.ValueTask`1<System.Int32> ReadAsync(System.Memory`1<System.Byte> buffer, System.Threading.CancellationToken cancellationToken = null)

Disassembly:
	0x032E46B8 STP X24, X23, [X31 + 0x20]
	0x032E46BC STP X22, X21, [X31 + 0x30]
	0x032E46C0 STP X20, X19, [X31 + 0x40]
	0x032E46C4 ADRP X24, 0x10F8000
	0x032E46C8 STR X1, [X31]
	0x032E46CC ADRP X22, 0xE42000
	0x032E46D0 ADRP X23, 0xE0F000
	0x032E46D4 LDRB W8, [X24 + 0x9A8]
	0x032E46D8 LDR X22, [X22 + 0xCB8]
	0x032E46DC LDR X23, [X23 + 0x6C0]
	0x032E46E0 MOV X20, X2
	0x032E46E4 MOV X21, X1
	0x032E46E8 MOV X19, X0
	0x032E46EC TBNZ X8, 0x0, 0x32E4734
	0x032E46F0 ADRP X0, 0xE42000
	0x032E46F4 LDR X0, [X0 + 0xCB8]
	0x032E46F8 BL 0x1C16CF4
	0x032E46FC ADRP X0, 0xE42000
	0x032E4700 LDR X0, [X0 + 0xD60]
	0x032E4704 BL 0x1C16CF4
	0x032E4708 ADRP X0, 0xE3E000
	0x032E470C LDR X0, [X0 + 0xAC0]
	0x032E4710 BL 0x1C16CF4
	0x032E4714 ADRP X0, 0xE3E000
	0x032E4718 LDR X0, [X0 + 0xE60]
	0x032E471C BL 0x1C16CF4
	0x032E4720 ADRP X0, 0xE0F000
	0x032E4724 LDR X0, [X0 + 0x6C0]
	0x032E4728 BL 0x1C16CF4
	0x032E472C MOVZ W8, 0x1
	0x032E4730 STRB W8, [X24 + 0x9A8]
	0x032E4734 MOV X0, X19
	0x032E4738 MOV X1, X31
	0x032E473C BL 0x33BE520
	0x032E4740 LDR X8, [X23]
	0x032E4744 LDR X23, [X22]
	0x032E4748 MOV X22, X0
	0x032E474C LDR W9, [X8 + 0xE0]
	0x032E4750 CBNZ W9, 0x32E475C
	0x032E4754 MOV X0, X8
	0x032E4758 BL 0x1C16DFC
	0x032E475C MOV X0, X23
	0x032E4760 MOV X1, X31
	0x032E4764 BL 0x338C698
	0x032E4768 MOV X1, X0
	0x032E476C MOV X0, X22
	0x032E4770 MOV X2, X31
	0x032E4774 BL 0x3395F0C
	0x032E4778 TBZ X0, 0x0, 0x32E47A4
	0x032E477C MOV X0, X19
	0x032E4780 MOV X1, X21
	0x032E4784 MOV X2, X20
	0x032E4788 LDP X20, X19, [X31 + 0x40]
	0x032E478C LDP X22, X21, [X31 + 0x30]
	0x032E4790 LDP X24, X23, [X31 + 0x20]
	0x032E4794 LDR X30, [X31 + 0x10]
	0x032E4798 MOV X3, X31
	0x032E479C ADD X31, X31, 0x50
	0x032E47A0 B 0x32F2000
	0x032E47A4 MOV X0, X19
	0x032E47A8 BL 0x32E2808
	0x032E47AC MOV X0, X19
	0x032E47B0 BL 0x32E283C
	0x032E47B4 LDR W23, [X19 + 0x34]
	0x032E47B8 ADDS W21, W23, W20
	0x032E47BC B.MI 0x32E4898
	0x032E47C0 LDR W22, [X19 + 0x38]
	0x032E47C4 CMP W21, W22
	0x032E47C8 B.LE 0x32E481C
	0x032E47CC LDR W8, [X19 + 0x3C]
	0x032E47D0 CMP W21, W8
	0x032E47D4 B.LE 0x32E47F8
	0x032E47D8 MOV X0, X19
	0x032E47DC MOV W1, W21
	0x032E47E0 BL 0x32E2894
	0x032E47E4 CMP W23, W22
	0x032E47E8 B.LE 0x32E4814
	0x032E47EC TBNZ X0, 0x0, 0x32E4814
	0x032E47F0 LDR W22, [X19 + 0x38]
	0x032E47F4 B 0x32E4800
	0x032E47F8 CMP W23, W22
	0x032E47FC B.LE 0x32E4814
	0x032E4800 LDR X0, [X19 + 0x28]
	0x032E4804 SUB W2, W21, W22
	0x032E4808 MOV W1, W22
	0x032E480C MOV X3, X31
	0x032E4810 BL 0x339FA34
	0x032E4814 LDR W23, [X19 + 0x34]
	0x032E4818 STR W21, [X19 + 0x38]
	0x032E481C LDR X22, [X19 + 0x28]
	0x032E4820 CBZ X22, 0x32E4850
	0x032E4824 LDR W8, [X22 + 0x18]
	0x032E4828 SUBS W8, W8, W23
	0x032E482C B.CC 0x32E4838
	0x032E4830 CMP W8, W20
	0x032E4834 B.CS 0x32E4840
	0x032E4838 MOV X0, X31
	0x032E483C BL 0x339D6EC
	0x032E4840 ADD X8, X22, W23, SXTW
	0x032E4844 ADD X1, X8, 0x20
	0x032E4848 AND X2, X20, 0x0
	0x032E484C B 0x32E4868
	0x032E4850 ORR W8, W23, W20, 0x0
	0x032E4854 CBZ W8, 0x32E4860
	0x032E4858 MOV X0, X31
	0x032E485C BL 0x339D6EC
	0x032E4860 MOV X1, X31
	0x032E4864 MOV X2, X31
	0x032E4868 ADRP X8, 0xE42000
	0x032E486C LDR X8, [X8 + 0xD60]
	0x032E4870 ADD X0, X31, 0x0
	0x032E4874 LDR X3, [X8]
	0x032E4878 BL 0x25BE5D8
	0x032E487C STR W21, [X19 + 0x34]
	0x032E4880 LDP X20, X19, [X31 + 0x40]
	0x032E4884 LDP X22, X21, [X31 + 0x30]
	0x032E4888 LDP X24, X23, [X31 + 0x20]
	0x032E488C LDR X30, [X31 + 0x10]
	0x032E4890 ADD X31, X31, 0x50
	0x032E4894 RET
	0x032E4898 ADRP X0, 0xE3D000
	0x032E489C LDR X0, [X0 + 0x7A8]
	0x032E48A0 BL 0x1C16D08
	0x032E48A4 BL 0x1C16F10
	0x032E48A8 MOV X19, X0
	0x032E48AC ADRP X0, 0xE42000
	0x032E48B0 LDR X0, [X0 + 0xC68]
	0x032E48B4 BL 0x1C16D08
	0x032E48B8 MOV X1, X0
	0x032E48BC MOV X0, X19
	0x032E48C0 BL 0x32E16BC
	0x032E48C4 ADRP X0, 0xE42000
	0x032E48C8 LDR X0, [X0 + 0xD68]
	0x032E48CC BL 0x1C16D08
	0x032E48D0 MOV X1, X0
	0x032E48D4 MOV X0, X19
	0x032E48D8 BL 0x1C16DEC
	0x032E48DC SUB X31, X31, 0x40
	0x032E48E0 STP X30, X23, [X31 + 0x10]
	0x032E48E4 STP X22, X21, [X31 + 0x20]
	0x032E48E8 STP X20, X19, [X31 + 0x30]
	0x032E48EC ADRP X23, 0x10F8000
	0x032E48F0 LDRB W8, [X23 + 0x9A9]
	0x032E48F4 MOV W19, W3
	0x032E48F8 MOV W20, W2
	0x032E48FC MOV X21, X1
	0x032E4900 MOV X22, X0
	0x032E4904 STR X4, [X31 + 0x8]
	0x032E4908 TBNZ X8, 0x0, 0x32E492C
	0x032E490C ADRP X0, 0xE17000
	0x032E4910 LDR X0, [X0 + 0x7D8]
	0x032E4914 BL 0x1C16CF4
	0x032E4918 ADRP X0, 0xE10000
	0x032E491C LDR X0, [X0 + 0x7B8]
	0x032E4920 BL 0x1C16CF4
	0x032E4924 MOVZ W8, 0x1
	0x032E4928 STRB W8, [X23 + 0x9A9]
	0x032E492C CBZ X21, 0x32E4A24
	0x032E4930 TBNZ X20, 0x1F, 0x32E4A6C
	0x032E4934 TBNZ X19, 0x1F, 0x32E4A8C
	0x032E4938 LDR W8, [X21 + 0x18]
	0x032E493C SUB W8, W8, W20
	0x032E4940 CMP W8, W19
	0x032E4944 B.LT 0x32E4AD4
	0x032E4948 ADRP X8, 0xE17000
	0x032E494C LDR X8, [X8 + 0x7D8]
	0x032E4950 LDR X0, [X8]
	0x032E4954 LDR W8, [X0 + 0xE0]
	0x032E4958 CBNZ W8, 0x32E4960
	0x032E495C BL 0x1C16DFC
	0x032E4960 ADD X0, X31, 0x8
	0x032E4964 MOV X1, X31
	0x032E4968 BL 0x33DD2B0
	0x032E496C TBZ X0, 0x0, 0x32E499C
	0x032E4970 ADRP X8, 0xE10000
	0x032E4974 LDR X8, [X8 + 0x7B8]
	0x032E4978 LDR X19, [X31 + 0x8]
	0x032E497C LDR X0, [X8]
	0x032E4980 LDR W8, [X0 + 0xE0]
	0x032E4984 CBNZ W8, 0x32E498C
	0x032E4988 BL 0x1C16DFC
	0x032E498C MOV X0, X19
	0x032E4990 MOV X1, X31
	0x032E4994 BL 0x33EE044
	0x032E4998 B 0x32E4A10
	0x032E499C LDR X8, [X22]
	0x032E49A0 LDR X9, [X8 + 0x388]
	0x032E49A4 LDR X4, [X8 + 0x390]
	0x032E49A8 MOV X0, X22
	0x032E49AC MOV X1, X21
	0x032E49B0 MOV W2, W20
	0x032E49B4 MOV W3, W19
	0x032E49B8 BLR X9
	0x032E49BC ADRP X19, 0xE10000
	0x032E49C0 LDR X19, [X19 + 0x7B8]
	0x032E49C4 LDR X0, [X19]
	0x032E49C8 LDR W8, [X0 + 0xE0]
	0x032E49CC CBNZ W8, 0x32E49D4
	0x032E49D0 BL 0x1C16DFC
	0x032E49D4 ADRP X20, 0x10F4000
	0x032E49D8 LDRB W8, [X20 + 0xF1D]
	0x032E49DC CBNZ W8, 0x32E49F4
	0x032E49E0 ADRP X0, 0xE10000
	0x032E49E4 LDR X0, [X0 + 0x7B8]
	0x032E49E8 BL 0x1C16CF4
	0x032E49EC MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X23, 0x10F9000
	009 Move [X31+32], X1
	010 Move [X31+40], X2
	011 Move [X31+24], X3
	012 Move X22, 0xE18000
	013 Move W8, [X23+2468]
	014 Move X22, [X22+2008]
	015 Move X20, X2
	016 Move X21, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {60}
	022 Move X0, 0xE43000
	023 Move X0, [X0+3312]
	024 Call 0x1C17CF4
	025 Move X0, 0xE43000
	026 Move X0, [X0+3320]
	027 Call 0x1C17CF4
	028 Move X0, 0xE43000
	029 Move X0, [X0+3328]
	030 Call 0x1C17CF4
	031 Move X0, 0xE38000
	032 Move X0, [X0+1456]
	033 Call 0x1C17CF4
	034 Move X0, 0xE18000
	035 Move X0, [X0+2008]
	036 Call 0x1C17CF4
	037 Move X0, 0xE43000
	038 Move X0, [X0+3336]
	039 Call 0x1C17CF4
	040 Move X0, 0xE3B000
	041 Move X0, [X0+736]
	042 Call 0x1C17CF4
	043 Move X0, 0xE43000
	044 Move X0, [X0+3344]
	045 Call 0x1C17CF4
	046 Move X0, 0xE43000
	047 Move X0, [X0+3272]
	048 Call 0x1C17CF4
	049 Move X0, 0xE11000
	050 Move X0, [X0+1976]
	051 Call 0x1C17CF4
	052 Move X0, 0xE43000
	053 Move X0, [X0+3352]
	054 Call 0x1C17CF4
	055 Move X0, 0xE43000
	056 Move X0, [X0+3360]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X23+2468], W8
	060 Move X0, [X22]
	061 Move [X31+8], X31
	062 Move [X31+16], X31
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Add X0, X31, 24
	068 Move X1, X31
	069 Call CancellationToken.get_IsCancellationRequested, X0
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {94}
	074 Move X8, 0xE11000
	075 Move X8, [X8+1976]
	076 Move X20, 0xE43000
	077 Move X19, [X31+24]
	078 Move X0, [X8]
	079 Move W8, [X0+224]
	080 Move X20, [X20+3272]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X1, [X20]
	085 Move X0, X19
	086 Call 0x229A598, X0
	087 Move X19, X0
	088 Compare X0, 0
	089 JumpIfNotEqual {93}
	090 Move W0, 38
	091 Move X1, X31
	092 Call ThrowHelper.ThrowArgumentNullException, X0
	093 Move X1, 0x10000
	094 Move X8, 0xE43000
	095 Move X8, [X8+3344]
	096 Move X2, [X8]
	097 Move X0, X21
	098 Move X1, X20
	099 Call 0x319ECE0, X0
	100 Move X8, 0xE43000
	101 Move X8, [X8+3336]
	102 Move X3, [X8]
	103 Add X2, X31, 8
	104 Call 0x2219D10, X0, X1
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {124}
	109 Move X8, 0xE38000
	110 Move X8, [X8+1456]
	111 Move X0, [X8]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Move X8, [X19]
	117 Move X1, [X31+8]
	118 Move W2, [X31+16]
	119 Move W3, [X31+20]
	120 Move X9, [X8+856]
	121 Move X4, [X8+864]
	122 Move X0, X19
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move X8, 0xE3B000
	125 Move X8, [X8+736]
	126 Move X1, [X8]
	127 Add X0, X31, 32
	128 Call 0x2985784
	129 Move X8, [X19]
	130 Move X2, X0
	131 Move X4, X1
	132 Move X9, [X8+872]
	133 Move X3, [X8+880]
	134 Move X0, X19
	135 Move X1, X2
	136 Move X2, X4
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Move X19, X31
	139 Move W8, W0
	140 Or X1, X8, 0x1FFFFFFFFFFFF
	141 Move X0, X19
	142 Move X20, [X31+80]
	143 Move X19, [X31+88]
	144 Move X22, [X31+64]
	145 Move X21, [X31+72]
	146 Move X30, [X31+48]
	147 Move X23, [X31+56]
	148 Add X31, X31, 96
	149 Return X0
	150 Move X19, X0
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X0, X19
	153 Call 0x3EB2AD0
	154 Move X19, X0
	155 Move X0, 0xE18000
	156 Move X0, [X0+2216]
	157 Call 0x1C17D08
	158 Move X8, [X19]
	159 Move X1, [X8]
	160 Call 0x1C18270
	161 Move TEMP, X0
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfNotEqual {180}
	165 Move X19, [X19]
	166 Call 0x3EB2AE0
	167 Move X0, 0xE11000
	168 Move X0, [X0+1976]
	169 Call 0x1C17D08
	170 Move W8, [X0+224]
	171 Compare W8, 0
	172 JumpIfNotEqual {174}
	173 Call 0x1C17DFC
	174 Move X0, 0xE43000
	175 Move X0, [X0+3296]
	176 Call 0x1C17D08
	177 Move X1, X0
	178 Move X0, X19
	179 Call 0x229A890, X0
	180 Move X0, 0xE10000
	181 Move X0, [X0+2000]
	182 Call 0x1C17D08
	183 Move X8, [X19]
	184 Move X1, [X8]
	185 Call 0x1C18270
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {215}
	190 Move X19, [X19]
	191 Call 0x3EB2AE0
	192 Move X0, 0xE11000
	193 Move X0, [X0+1976]
	194 Call 0x1C17D08
	195 Move W8, [X0+224]
	196 Compare W8, 0
	197 JumpIfNotEqual {199}
	198 Call 0x1C17DFC
	199 Move X0, 0xE43000
	200 Move X0, [X0+3304]
	201 Call 0x1C17D08
	202 Move X1, X0
	203 Move X0, X19
	204 Call Task.FromException, X0
	205 Move X19, X0
	206 Move X0, 0xE43000
	207 Move X0, [X0+3360]
	208 Call 0x1C17D08
	209 Compare X19, 0
	210 JumpIfNotEqual {214}
	211 Move W0, 38
	212 Move X1, X31
	213 Call ThrowHelper.ThrowArgumentNullException, X0
	214 Move W0, W31
	215 Move W0, 8
	216 Call 0x3EB2AF0
	217 Move X8, [X19]
	218 Move [X0], X8
	219 Move X1, 0xBD1000
	220 Add X1, X1, 3672
	221 Move X2, X31
	222 Call 0x3EB2B00
	223 Move X19, X0
	224 Call 0x3EB2AE0
	225 Move X0, X19
	226 Call 0x1D2D690
	227 Call 0x1991590

Method: System.Int32 ReadByte()

Disassembly:
	0x032E49F0 STRB W8, [X20 + 0xF1D]
	0x032E49F4 LDR X0, [X19]
	0x032E49F8 LDR W8, [X0 + 0xE0]
	0x032E49FC CBNZ W8, 0x32E4A08
	0x032E4A00 BL 0x1C16DFC
	0x032E4A04 LDR X0, [X19]
	0x032E4A08 LDR X8, [X0 + 0xB8]
	0x032E4A0C LDR X0, [X8 + 0x30]
	0x032E4A10 LDP X20, X19, [X31 + 0x30]
	0x032E4A14 LDP X22, X21, [X31 + 0x20]
	0x032E4A18 LDP X30, X23, [X31 + 0x10]
	0x032E4A1C ADD X31, X31, 0x40
	0x032E4A20 RET
	0x032E4A24 ADRP X0, 0xE14000
	0x032E4A28 LDR X0, [X0 + 0x528]
	0x032E4A2C BL 0x1C16D08
	0x032E4A30 BL 0x1C16F10
	0x032E4A34 MOV X19, X0
	0x032E4A38 ADRP X0, 0xE3A000
	0x032E4A3C LDR X0, [X0 + 0xF48]
	0x032E4A40 BL 0x1C16D08
	0x032E4A44 MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call MemoryStream.EnsureNotClosed, X0
	005 Move W8, [X19+52]
	006 Move W9, [X19+56]
	007 Move X8, W8
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X9, [X19+40]
	010 Add W10, W8, 1
	011 Move [X19+52], W10
	012 Compare X9, 0
	013 JumpIfEqual {24}
	014 Move W10, [X9+24]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Add X8, X9, X8
	017 Move W0, [X8+32]
	018 Move TEMP, 0
	019 Not TEMP
	020 Move W0, TEMP
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Return X0
	024 Call 0x1C17F20
	025 Call 0x1C17F28

Method: System.Void CopyTo(System.IO.Stream destination, System.Int32 bufferSize)

Disassembly:
	0x032E4A48 ADRP X0, 0xE42000
	0x032E4A4C LDR X0, [X0 + 0xC40]
	0x032E4A50 BL 0x1C16D08
	0x032E4A54 MOV X2, X0
	0x032E4A58 MOV X0, X19
	0x032E4A5C MOV X1, X20
	0x032E4A60 MOV X3, X31
	0x032E4A64 BL 0x3315F7C
	0x032E4A68 B 0x32E4B04
	0x032E4A6C ADRP X0, 0xE17000
	0x032E4A70 LDR X0, [X0 + 0x760]
	0x032E4A74 BL 0x1C16D08
	0x032E4A78 BL 0x1C16F10
	0x032E4A7C MOV X19, X0
	0x032E4A80 ADRP X0, 0xE3E000
	0x032E4A84 LDR X0, [X0 + 0xD90]
	0x032E4A88 B 0x32E4AA8
	0x032E4A8C ADRP X0, 0xE17000
	0x032E4A90 LDR X0, [X0 + 0x760]
	0x032E4A94 BL 0x1C16D08
	0x032E4A98 BL 0x1C16F10
	0x032E4A9C MOV X19, X0
	0x032E4AA0 ADRP X0, 0xE37000
	0x032E4AA4 LDR X0, [X0 + 0x648]
	0x032E4AA8 BL 0x1C16D08
	0x032E4AAC MOV X20, X0
	0x032E4AB0 ADRP X0, 0xE37000
	0x032E4AB4 LDR X0, [X0 + 0x670]
	0x032E4AB8 BL 0x1C16D08
	0x032E4ABC MOV X2, X0
	0x032E4AC0 MOV X0, X19
	0x032E4AC4 MOV X1, X20
	0x032E4AC8 MOV X3, X31
	0x032E4ACC BL 0x3311888
	0x032E4AD0 B 0x32E4B04
	0x032E4AD4 ADRP X0, 0xE17000
	0x032E4AD8 LDR X0, [X0 + 0x578]
	0x032E4ADC BL 0x1C16D08
	0x032E4AE0 BL 0x1C16F10
	0x032E4AE4 MOV X19, X0
	0x032E4AE8 ADRP X0, 0xE37000
	0x032E4AEC LDR X0, [X0 + 0x760]
	0x032E4AF0 BL 0x1C16D08
	0x032E4AF4 MOV X1, X0
	0x032E4AF8 MOV X0, X19
	0x032E4AFC MOV X2, X31
	0x032E4B00 BL 0x3314A68
	0x032E4B04 ADRP X0, 0xE42000
	0x032E4B08 LDR X0, [X0 + 0xD70]
	0x032E4B0C BL 0x1C16D08
	0x032E4B10 MOV X1, X0
	0x032E4B14 MOV X0, X19
	0x032E4B18 BL 0x1C16DEC
	0x032E4B1C B 0x32E4B20
	0x032E4B20 MOV X19, X0
	0x032E4B24 CMP W1, 0x1
	0x032E4B28 B.NE 0x32E4C04
	0x032E4B2C MOV X0, X19
	0x032E4B30 BL 0x3EB1AD0
	0x032E4B34 MOV X19, X0
	0x032E4B38 ADRP X0, 0xE17000
	0x032E4B3C LDR X0, [X0 + 0x8A8]
	0x032E4B40 BL 0x1C16D08
	0x032E4B44 LDR X8, [X19]
	0x032E4B48 LDR X1, [X8]
	0x032E4B4C BL 0x1C17270
	0x032E4B50 TBZ X0, 0x0, 0x32E4B90
	0x032E4B54 LDR X19, [X19]
	0x032E4B58 BL 0x3EB1AE0
	0x032E4B5C ADRP X0, 0xE10000
	0x032E4B60 LDR X0, [X0 + 0x7B8]
	0x032E4B64 BL 0x1C16D08
	0x032E4B68 LDR W8, [X0 + 0xE0]
	0x032E4B6C CBNZ W8, 0x32E4B74
	0x032E4B70 BL 0x1C16DFC
	0x032E4B74 ADRP X0, 0xE42000
	0x032E4B78 LDR X0, [X0 + 0xD78]
	0x032E4B7C BL 0x1C16D08
	0x032E4B80 MOV X1, X0
	0x032E4B84 MOV X0, X19
	0x032E4B88 BL 0x2299A28
	0x032E4B8C B 0x32E4A10
	0x032E4B90 ADRP X0, 0xE0F000
	0x032E4B94 LDR X0, [X0 + 0x7D0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x10F9000
	009 Move X22, 0xE43000
	010 Move X23, 0xE10000
	011 Move W8, [X24+2469]
	012 Move X22, [X22+3256]
	013 Move X23, [X23+1728]
	014 Move W21, W2
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xE43000
	022 Move X0, [X0+3256]
	023 Call 0x1C17CF4
	024 Move X0, 0xE10000
	025 Move X0, [X0+1728]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+2469], W8
	029 Move X0, X20
	030 Move X1, X19
	031 Move W2, W21
	032 Call StreamHelpers.ValidateCopyToArgs, X0, X1, X2
	033 Move X0, X20
	034 Move X1, X31
	035 Call "il2cpp_vm_object_is_inst", X0
	036 Move X8, [X23]
	037 Move X23, [X22]
	038 Move X22, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {44}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X0, X23
	045 Move X1, X31
	046 Call Type.GetTypeFromHandle, X0
	047 Move X1, X0
	048 Move X0, X22
	049 Move X2, X31
	050 Call Type.op_Inequality, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {68}
	055 Move X0, X20
	056 Move X1, X19
	057 Move W2, W21
	058 Move X20, [X31+48]
	059 Move X19, [X31+56]
	060 Move X22, [X31+32]
	061 Move X21, [X31+40]
	062 Move X24, [X31+16]
	063 Move X23, [X31+24]
	064 Move X3, X31
	065 Move X30, [X31+64]
	066 Call Stream.CopyTo, X0, X1, X2
	067 Return 
	068 Move W21, [X20+52]
	069 Move W8, [X20+56]
	070 Move X0, X20
	071 Subtract W22, W8, W21
	072 Call MemoryStream.EnsureNotClosed, X0
	073 Move W9, [X20+52]
	074 Move W8, [X20+56]
	075 Subtract W8, W8, W9
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CSEL not yet implemented."
	078 NotImplemented "Instruction BIC not yet implemented."
	079 Add W9, W3, W9
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move [X20+52], W9
	082 Compare X19, 0
	083 JumpIfEqual {106}
	084 Move X8, [X19]
	085 Move X1, [X20+40]
	086 Move X0, X19
	087 Move W2, W21
	088 Move X5, [X8+904]
	089 Move X4, [X8+912]
	090 Move X20, [X31+48]
	091 Move X19, [X31+56]
	092 Move X22, [X31+32]
	093 Move X21, [X31+40]
	094 Move X24, [X31+16]
	095 Move X23, [X31+24]
	096 Move X30, [X31+64]
	097 CallNoReturn X5
	098 Move X20, [X31+48]
	099 Move X19, [X31+56]
	100 Move X22, [X31+32]
	101 Move X21, [X31+40]
	102 Move X24, [X31+16]
	103 Move X23, [X31+24]
	104 Move X30, [X31+64]
	105 Return 
	106 Call 0x1C17F20

Method: System.Threading.Tasks.Task CopyToAsync(System.IO.Stream destination, System.Int32 bufferSize, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x032E4DBC LDP X30, X23, [X31 + 0x30]
	0x032E4DC0 ADD X31, X31, 0x60
	0x032E4DC4 RET
	0x032E4DC8 B 0x32E4DD8
	0x032E4DCC B 0x32E4DD8
	0x032E4DD0 B 0x32E4DD8
	0x032E4DD4 B 0x32E4DD8
	0x032E4DD8 MOV X19, X0
	0x032E4DDC CMP W1, 0x1
	0x032E4DE0 B.NE 0x32E4EBC
	0x032E4DE4 MOV X0, X19
	0x032E4DE8 BL 0x3EB1AD0
	0x032E4DEC MOV X19, X0
	0x032E4DF0 ADRP X0, 0xE17000
	0x032E4DF4 LDR X0, [X0 + 0x8A8]
	0x032E4DF8 BL 0x1C16D08
	0x032E4DFC LDR X8, [X19]
	0x032E4E00 LDR X1, [X8]
	0x032E4E04 BL 0x1C17270
	0x032E4E08 TBZ X0, 0x0, 0x32E4E48
	0x032E4E0C LDR X19, [X19]
	0x032E4E10 BL 0x3EB1AE0
	0x032E4E14 ADRP X0, 0xE10000
	0x032E4E18 LDR X0, [X0 + 0x7B8]
	0x032E4E1C BL 0x1C16D08
	0x032E4E20 LDR W8, [X0 + 0xE0]
	0x032E4E24 CBNZ W8, 0x32E4E2C
	0x032E4E28 BL 0x1C16DFC
	0x032E4E2C ADRP X0, 0xE42000
	0x032E4E30 LDR X0, [X0 + 0xD78]
	0x032E4E34 BL 0x1C16D08
	0x032E4E38 MOV X1, X0
	0x032E4E3C MOV X0, X19
	0x032E4E40 BL 0x2299A28
	0x032E4E44 B 0x32E4CFC
	0x032E4E48 ADRP X0, 0xE0F000
	0x032E4E4C LDR X0, [X0 + 0x7D0]
	0x032E4E50 BL 0x1C16D08
	0x032E4E54 LDR X8, [X19]
	0x032E4E58 LDR X1, [X8]
	0x032E4E5C BL 0x1C17270
	0x032E4E60 TBZ X0, 0x0, 0x32E4E94
	0x032E4E64 LDR X19, [X19]
	0x032E4E68 BL 0x3EB1AE0
	0x032E4E6C ADRP X0, 0xE10000
	0x032E4E70 LDR X0, [X0 + 0x7B8]
	0x032E4E74 BL 0x1C16D08
	0x032E4E78 LDR W8, [X0 + 0xE0]
	0x032E4E7C CBNZ W8, 0x32E4E84
	0x032E4E80 BL 0x1C16DFC
	0x032E4E84 MOV X0, X19
	0x032E4E88 MOV X1, X31
	0x032E4E8C BL 0x33EDAC4
	0x032E4E90 B 0x32E4CFC
	0x032E4E94 MOVZ W0, 0x8
	0x032E4E98 BL 0x3EB1AF0
	0x032E4E9C LDR X8, [X19]
	0x032E4EA0 STR X8, [X0]
	0x032E4EA4 ADRP X1, 0xBD0000
	0x032E4EA8 ADD X1, X1, 0xE58
	0x032E4EAC MOV X2, X31
	0x032E4EB0 BL 0x3EB1B00
	0x032E4EB4 MOV X19, X0
	0x032E4EB8 BL 0x3EB1AE0
	0x032E4EBC MOV X0, X19
	0x032E4EC0 BL 0x1D2C690
	0x032E4EC4 BL 0x1990590
	0x032E4EC8 STP X30, X23, [X31 - 0x30]!
	0x032E4ECC STP X22, X21, [X31 + 0x10]
	0x032E4ED0 STP X20, X19, [X31 + 0x20]
	0x032E4ED4 MOV W19, W1
	0x032E4ED8 MOV X20, X0
	0x032E4EDC BL 0x32E2808
	0x032E4EE0 MOV X0, X20
	0x032E4EE4 BL 0x32E283C
	0x032E4EE8 LDP W23, W22, [X20 + 0x34]
	0x032E4EEC CMP W23, W22
	0x032E4EF0 B.LT 0x32E4F48
	0x032E4EF4 LDR W8, [X20 + 0x3C]
	0x032E4EF8 ADD W21, W23, 0x1
	0x032E4EFC CMP W21, W8
	0x032E4F00 B.GE 0x32E4F10
	0x032E4F04 CMP W23, W22
	0x032E4F08 B.GT 0x32E4F2C
	0x032E4F0C B 0x32E4F40
	0x032E4F10 MOV X0, X20
	0x032E4F14 MOV W1, W21
	0x032E4F18 BL 0x32E2894
	0x032E4F1C CMP W23, W22
	0x032E4F20 B.LE 0x32E4F40
	0x032E4F24 TBNZ X0, 0x0, 0x32E4F40
	0x032E4F28 LDP W23, W22, [X20 + 0x34]
	0x032E4F2C LDR X0, [X20 + 0x28]
	0x032E4F30 SUB W2, W23, W22
	0x032E4F34 MOV W1, W22
	0x032E4F38 MOV X3, X31
	0x032E4F3C BL 0x339FA34
	0x032E4F40 LDR W23, [X20 + 0x34]
	0x032E4F44 STR W21, [X20 + 0x38]
	0x032E4F48 LDR X8, [X20 + 0x28]
	0x032E4F4C ADD W9, W23, 0x1
	0x032E4F50 STR W9, [X20 + 0x34]
	0x032E4F54 CBZ X8, 0x32E4F7C
	0x032E4F58 LDR W9, [X8 + 0x18]
	0x032E4F5C CMP W23, W9
	0x032E4F60 B.CS 0x32E4F80
	0x032E4F64 ADD X8, X8, W23, SXTW
	0x032E4F68 STRB W19, [X8 + 0x20]
	0x032E4F6C LDP X20, X19, [X31 + 0x20]
	0x032E4F70 LDP X22, X21, [X31 + 0x10]
	0x032E4F74 LDP X30, X23, [X31], #0x30
	0x032E4F78 RET
	0x032E4F7C BL 0x1C16F20
	0x032E4F80 BL 0x1C16F28
	0x032E4F84 STR X30, [X31 - 0x20]!
	0x032E4F88 STP X20, X19, [X31 + 0x10]
	0x032E4F8C CBZ X1, 0x32E4FC8
	0x032E4F90 MOV X19, X1
	0x032E4F94 MOV X20, X0
	0x032E4F98 BL 0x32E2808
	0x032E4F9C LDR X8, [X19]
	0x032E4FA0 LDR W2, [X20 + 0x30]
	0x032E4FA4 LDR W9, [X20 + 0x38]
	0x032E4FA8 LDR X1, [X20 + 0x28]
	0x032E4FAC LDR X5, [X8 + 0x388]
	0x032E4FB0 LDR X4, [X8 + 0x390]
	0x032E4FB4 MOV X0, X19
	0x032E4FB8 LDP X20, X19, [X31 + 0x10]
	0x032E4FBC SUB W3, W9, W2
	0x032E4FC0 LDR X30, [X31], #0x20
	0x032E4FC4 BR X5
	0x032E4FC8 ADRP X0, 0xE14000
	0x032E4FCC LDR X0, [X0 + 0x528]
	0x032E4FD0 BL 0x1C16D08
	0x032E4FD4 BL 0x1C16F10
	0x032E4FD8 MOV X19, X0
	0x032E4FDC ADRP X0, 0xE3E000
	0x032E4FE0 LDR X0, [X0 + 0xD38]
	0x032E4FE4 BL 0x1C16D08
	0x032E4FE8 MOV X20, X0
	0x032E4FEC ADRP X0, 0xE41000
	0x032E4FF0 LDR X0, [X0 + 0x1E8]
	0x032E4FF4 BL 0x1C16D08
	0x032E4FF8 MOV X2, X0
	0x032E4FFC MOV X0, X19
	0x032E5000 MOV X1, X20
	0x032E5004 MOV X3, X31
	0x032E5008 BL 0x3315F7C
	0x032E500C ADRP X0, 0xE41000
	0x032E5010 LDR X0, [X0 + 0xD88]
	0x032E5014 BL 0x1C16D08
	0x032E5018 MOV X1, X0
	0x032E501C MOV X0, X19
	0x032E5020 BL 0x1C16DEC
	0x032E5024 STP X30, X21, [X31 - 0x20]!
	0x032E5028 STP X20, X19, [X31 + 0x10]
	0x032E502C ADRP X21, 0x10F7000
	0x032E5030 LDRB W8, [X21 + 0x9AB]
	0x032E5034 MOV X20, X1
	0x032E5038 MOV X19, X0
	0x032E503C TBNZ X8, 0x0, 0x32E5060
	0x032E5040 ADRP X0, 0xE39000
	0x032E5044 LDR X0, [X0 + 0xD70]
	0x032E5048 BL 0x1C16CF4
	0x032E504C ADRP X0, 0xE3D000
	0x032E5050 LDR X0, [X0 + 0x28]
	0x032E5054 BL 0x1C16CF4
	0x032E5058 MOVZ W8, 0x1
	0x032E505C STRB W8, [X21 + 0x9AB]
	0x032E5060 CMP W20, 0x1
	0x032E5064 B.LT 0x32E5090
	0x032E5068 ADRP X8, 0xE39000
	0x032E506C LDR X8, [X8 + 0xD70]
	0x032E5070 LDRH W19, [X19]
	0x032E5074 LDR X0, [X8]
	0x032E5078 LDR W8, [X0 + 0xE0]
	0x032E507C CBNZ W8, 0x32E5084
	0x032E5080 BL 0x1C16DFC
	0x032E5084 CMP W19, 0x2F
	0x032E5088 CSET W0, EQ
	0x032E508C B 0x32E5094
	0x032E5090 MOV W0, W31
	0x032E5094 LDP X20, X19, [X31 + 0x10]
	0x032E5098 LDP X30, X21, [X31], #0x20
	0x032E509C RET
	0x032E50A0 AND W8, W0, 0xFFFF
	0x032E50A4 CMP W8, 0x2F
	0x032E50A8 CSET W0, EQ
	0x032E50AC RET
	0x032E50B0 STP X30, X21, [X31 - 0x20]!
	0x032E50B4 STP X20, X19, [X31 + 0x10]
	0x032E50B8 ADRP X21, 0x10F7000
	0x032E50BC LDRB W8, [X21 + 0x9AC]
	0x032E50C0 MOV X19, X1
	0x032E50C4 MOV X20, X0
	0x032E50C8 TBNZ X8, 0x0, 0x32E50EC
	0x032E50CC ADRP X0, 0xE39000
	0x032E50D0 LDR X0, [X0 + 0xD70]
	0x032E50D4 BL 0x1C16CF4
	0x032E50D8 ADRP X0, 0xE3D000
	0x032E50DC LDR X0, [X0 + 0x28]
	0x032E50E0 BL 0x1C16CF4
	0x032E50E4 MOVZ W8, 0x1
	0x032E50E8 STRB W8, [X21 + 0x9AC]
	0x032E50EC CMP W19, 0x1
	0x032E50F0 B.LT 0x32E5120
	0x032E50F4 ADRP X8, 0xE39000
	0x032E50F8 LDR X8, [X8 + 0xD70]
	0x032E50FC LDR X0, [X8]
	0x032E5100 SUB W8, W19, 0x1
	0x032E5104 LDRH W19, [X20, W8, UXTW]
	0x032E5108 LDR W9, [X0 + 0xE0]
	0x032E510C CBNZ W9, 0x32E5114
	0x032E5110 BL 0x1C16DFC
	0x032E5114 CMP W19, 0x2F

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x10F9000
	011 Move [X31+8], X3
	012 Move X23, 0xE43000
	013 Move X24, 0xE10000
	014 Move W8, [X25+2470]
	015 Move X23, [X23+3256]
	016 Move X24, [X24+1728]
	017 Move X21, X3
	018 Move W22, W2
	019 Move X19, X1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {42}
	025 Move X0, 0xE18000
	026 Move X0, [X0+2008]
	027 Call 0x1C17CF4
	028 Move X0, 0xE43000
	029 Move X0, [X0+3256]
	030 Call 0x1C17CF4
	031 Move X0, 0xE18000
	032 Move X0, [X0+1368]
	033 Call 0x1C17CF4
	034 Move X0, 0xE11000
	035 Move X0, [X0+1976]
	036 Call 0x1C17CF4
	037 Move X0, 0xE10000
	038 Move X0, [X0+1728]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X25+2470], W8
	042 Move X0, X20
	043 Move X1, X19
	044 Move W2, W22
	045 Call StreamHelpers.ValidateCopyToArgs, X0, X1, X2
	046 Move X0, X20
	047 Move X1, X31
	048 Call "il2cpp_vm_object_is_inst", X0
	049 Move X8, [X24]
	050 Move X24, [X23]
	051 Move X23, X0
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Move X0, X24
	058 Move X1, X31
	059 Call Type.GetTypeFromHandle, X0
	060 Move X1, X0
	061 Move X0, X23
	062 Move X2, X31
	063 Call Type.op_Inequality, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {84}
	068 Move X0, X20
	069 Move X1, X19
	070 Move W2, W22
	071 Move X3, X21
	072 Move X20, [X31+64]
	073 Move X19, [X31+72]
	074 Move X22, [X31+48]
	075 Move X21, [X31+56]
	076 Move X24, [X31+32]
	077 Move X23, [X31+40]
	078 Move X30, [X31+16]
	079 Move X25, [X31+24]
	080 Move X4, X31
	081 Add X31, X31, 80
	082 Call Stream.CopyToAsync, X0, X1, X2, X3
	083 Return X0
	084 Move X8, 0xE18000
	085 Move X8, [X8+2008]
	086 Move X0, [X8]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Add X0, X31, 8
	092 Move X1, X31
	093 Call CancellationToken.get_IsCancellationRequested, X0
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {109}
	098 Move X8, 0xE11000
	099 Move X8, [X8+1976]
	100 Move X19, [X31+8]
	101 Move X0, [X8]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move X0, X19
	107 Move X1, X31
	108 Call Task.FromCanceled, X0
	109 Move W21, [X20+52]
	110 Move W8, [X20+56]
	111 Move X0, X20
	112 Subtract W22, W8, W21
	113 Call MemoryStream.EnsureNotClosed, X0
	114 Move W9, [X20+52]
	115 Move W8, [X20+56]
	116 Subtract W8, W8, W9
	117 NotImplemented "Instruction CMP not yet implemented."
	118 NotImplemented "Instruction CSEL not yet implemented."
	119 NotImplemented "Instruction BIC not yet implemented."
	120 Add W9, W3, W9
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move [X20+52], W9
	123 Compare X19, 0
	124 JumpIfEqual {204}
	125 Move X9, 0xE18000
	126 Move X9, [X9+1368]
	127 Move X8, [X19]
	128 Move X9, [X9]
	129 Move W11, [X8+304]
	130 Move W10, [X9+304]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X11, [X8+200]
	133 Add X10, X11, X10
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X4, [X31+8]
	137 Move X1, [X20+40]
	138 Move X9, [X8+792]
	139 Move X5, [X8+800]
	140 Move X0, X19
	141 Move W2, W21
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X19, 0xE11000
	144 Move X19, [X19+1976]
	145 Move X0, [X19]
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Move X20, 0x10F5000
	151 Move W8, [X20+3869]
	152 Compare W8, 0
	153 JumpIfNotEqual {159}
	154 Move X0, 0xE11000
	155 Move X0, [X0+1976]
	156 Call 0x1C17CF4
	157 Move W8, 1
	158 Move [X20+3869], W8
	159 Move X0, [X19]
	160 Move W8, [X0+224]
	161 Compare W8, 0
	162 JumpIfNotEqual {192}
	163 Call 0x1C17DFC
	164 Move X1, [X20+40]
	165 Move X9, [X8+904]
	166 Move X4, [X8+912]
	167 Move X0, X19
	168 Move W2, W21
	169 NotImplemented "Instruction BLR not yet implemented."
	170 Move X19, 0xE10000
	171 Move X19, [X19+1976]
	172 Move X0, [X19]
	173 Move W8, [X0+224]
	174 Compare W8, 0
	175 JumpIfNotEqual {177}
	176 Call 0x1C17DFC
	177 Move X20, 0x10F4000
	178 Move W8, [X20+3869]
	179 Compare W8, 0
	180 JumpIfNotEqual {186}
	181 Move X0, 0xE10000
	182 Move X0, [X0+1976]
	183 Call 0x1C17CF4
	184 Move W8, 1
	185 Move [X20+3869], W8
	186 Move X0, [X19]
	187 Move W8, [X0+224]
	188 Compare W8, 0
	189 JumpIfNotEqual {192}
	190 Call 0x1C17DFC
	191 Move X0, [X19]
	192 Move X8, [X0+184]
	193 Move X0, [X8+48]
	194 Move X20, [X31+64]
	195 Move X19, [X31+72]
	196 Move X22, [X31+48]
	197 Move X21, [X31+56]
	198 Move X24, [X31+32]
	199 Move X23, [X31+40]
	200 Move X30, [X31+16]
	201 Move X25, [X31+24]
	202 Add X31, X31, 80
	203 Return X0
	204 Call 0x1C17F20
	205 Move X19, X0
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move X0, X19
	208 Call 0x3EB2AD0
	209 Move X19, X0
	210 Move X0, 0xE0F000
	211 Move X0, [X0+2000]
	212 Call 0x1C17D08
	213 Move X8, [X19]
	214 Move X1, [X8]
	215 Call 0x1C18270
	216 Move TEMP, X0
	217 And TEMP, TEMP, 1
	218 Compare TEMP, 1
	219 JumpIfNotEqual {232}
	220 Move X19, [X19]
	221 Call 0x3EB2AE0
	222 Move X0, 0xE10000
	223 Move X0, [X0+1976]
	224 Call 0x1C17D08
	225 Move W8, [X0+224]
	226 Compare W8, 0
	227 JumpIfNotEqual {229}
	228 Call 0x1C17DFC
	229 Move X0, X19
	230 Move X1, X31
	231 Call Task.FromException, X0
	232 Move W0, 8
	233 Call 0x3EB2AF0
	234 Move X8, [X19]
	235 Move [X0], X8
	236 Move X1, 0xBD0000
	237 Add X1, X1, 3672
	238 Move X2, X31
	239 Call 0x3EB2B00
	240 Move X19, X0
	241 Call 0x3EB2AE0
	242 Move X0, X19
	243 Call 0x1D2D690
	244 Call 0x1991590

Method: System.Int64 Seek(System.Int64 offset, System.IO.SeekOrigin loc)

Disassembly:
	0x032E5118 CSET W0, EQ
	0x032E511C B 0x32E5124
	0x032E5120 MOV W0, W31
	0x032E5124 LDP X20, X19, [X31 + 0x10]
	0x032E5128 LDP X30, X21, [X31], #0x20
	0x032E512C RET
	0x032E5130 STP X30, X21, [X31 - 0x20]!
	0x032E5134 STP X20, X19, [X31 + 0x10]
	0x032E5138 ADRP X21, 0x10F7000
	0x032E513C LDRB W8, [X21 + 0x9AD]
	0x032E5140 MOV X20, X1
	0x032E5144 MOV X19, X0
	0x032E5148 TBNZ X8, 0x0, 0x32E516C
	0x032E514C ADRP X0, 0xE39000
	0x032E5150 LDR X0, [X0 + 0xD70]
	0x032E5154 BL 0x1C16CF4
	0x032E5158 ADRP X0, 0xE3D000
	0x032E515C LDR X0, [X0 + 0x28]
	0x032E5160 BL 0x1C16CF4
	0x032E5164 MOVZ W8, 0x1
	0x032E5168 STRB W8, [X21 + 0x9AD]
	0x032E516C CMP W20, 0x1
	0x032E5170 B.LT 0x32E519C
	0x032E5174 ADRP X8, 0xE39000
	0x032E5178 LDR X8, [X8 + 0xD70]
	0x032E517C LDRH W19, [X19]
	0x032E5180 LDR X0, [X8]
	0x032E5184 LDR W8, [X0 + 0xE0]
	0x032E5188 CBNZ W8, 0x32E5190
	0x032E518C BL 0x1C16DFC
	0x032E5190 CMP W19, 0x2F
	0x032E5194 CSET W0, EQ
	0x032E5198 B 0x32E51A0
	0x032E519C MOV W0, W31
	0x032E51A0 LDP X20, X19, [X31 + 0x10]
	0x032E51A4 LDP X30, X21, [X31], #0x20
	0x032E51A8 RET
	0x032E51AC STP X30, X23, [X31 - 0x30]!
	0x032E51B0 STP X22, X21, [X31 + 0x10]
	0x032E51B4 STP X20, X19, [X31 + 0x20]
	0x032E51B8 ADRP X20, 0x10F7000
	0x032E51BC LDRB W8, [X20 + 0x9AE]
	0x032E51C0 MOV X19, X0
	0x032E51C4 TBNZ X8, 0x0, 0x32E51DC
	0x032E51C8 ADRP X0, 0xE39000
	0x032E51CC LDR X0, [X0 + 0xD70]
	0x032E51D0 BL 0x1C16CF4
	0x032E51D4 MOVZ W8, 0x1
	0x032E51D8 STRB W8, [X20 + 0x9AE]
	0x032E51DC ADRP X23, 0x10F4000
	0x032E51E0 LDRB W8, [X23 + 0x762]
	0x032E51E4 CBNZ W8, 0x32E51FC
	0x032E51E8 ADRP X0, 0xE35000
	0x032E51EC LDR X0, [X0 + 0x290]
	0x032E51F0 BL 0x1C16CF4
	0x032E51F4 MOVZ W8, 0x1
	0x032E51F8 STRB W8, [X23 + 0x762]
	0x032E51FC ADRP X22, 0xE39000
	0x032E5200 LDR X22, [X22 + 0xD70]
	0x032E5204 CBZ X19, 0x32E5220
	0x032E5208 MOV X0, X19
	0x032E520C MOV X1, X31
	0x032E5210 BL 0x3225708
	0x032E5214 LDR W20, [X19 + 0x10]
	0x032E5218 MOV X21, X0
	0x032E521C B 0x32E5228
	0x032E5220 MOV X21, X31
	0x032E5224 MOV X20, X31
	0x032E5228 LDR X0, [X22]
	0x032E522C LDR W8, [X0 + 0xE0]
	0x032E5230 CBNZ W8, 0x32E5238
	0x032E5234 BL 0x1C16DFC
	0x032E5238 MOV X0, X21
	0x032E523C MOV X1, X20
	0x032E5240 BL 0x32E50B0
	0x032E5244 TBZ X0, 0x0, 0x32E52AC
	0x032E5248 LDRB W8, [X23 + 0x762]
	0x032E524C CBZ W8, 0x32E526C
	0x032E5250 CBZ X19, 0x32E5284
	0x032E5254 MOV X0, X19
	0x032E5258 MOV X1, X31
	0x032E525C BL 0x3225708
	0x032E5260 LDR W20, [X19 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W21, W2
	006 Move X20, X1
	007 Move X19, X0
	008 Call MemoryStream.EnsureNotClosed, X0
	009 Move W8, 0x80000000
	010 NotImplemented "Instruction CMP not yet implemented."
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Compare W21, 0
	014 JumpIfNotEqual {64}
	015 Move TEMP, X20
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {53}
	019 Move W9, [X19+48]
	020 Add W8, W9, W20
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction LDRSW not yet implemented."
	023 NotImplemented "Instruction LDRSW not yet implemented."
	024 NotImplemented "Instruction LDRSW not yet implemented."
	025 Add W8, W9, W20
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Add X9, X9, X20
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move [X19+52], W8
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X0, W8
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0
	036 Move X0, 0xE17000
	037 Move X0, [X0+1888]
	038 Call 0x1C17D08
	039 Call 0x1C17F10
	040 Move X19, X0
	041 Move X0, 0xE3E000
	042 Move X0, [X0+3472]
	043 Call 0x1C17D08
	044 Move X20, X0
	045 Move X0, 0xE42000
	046 Move X0, [X0+3232]
	047 Call 0x1C17D08
	048 Move X2, X0
	049 Move X0, X19
	050 Move X1, X20
	051 Move X3, X31
	052 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	053 Move X0, 0xE3D000
	054 Move X0, [X0+1960]
	055 Call 0x1C17D08
	056 Call 0x1C17F10
	057 Move X19, X0
	058 Move X0, 0xE42000
	059 Move X0, [X0+3384]
	060 Call 0x1C17D08
	061 Move X1, X0
	062 Move X0, X19
	063 Call IOException..ctor, X0, X1
	064 Move X0, 0xE17000
	065 Move X0, [X0+1400]
	066 Call 0x1C17D08
	067 Call 0x1C17F10
	068 Move X19, X0
	069 Move X0, 0xE42000
	070 Move X0, [X0+3392]
	071 Call 0x1C17D08
	072 Move X1, X0
	073 Move X0, X19
	074 Move X2, X31
	075 Call ArgumentException..ctor, X0, X1
	076 Move X0, 0xE42000
	077 Move X0, [X0+3400]
	078 Call 0x1C17D08
	079 Move X1, X0
	080 Move X0, X19
	081 Call 0x1C17DEC

Method: System.Void SetLength(System.Int64 value)

Disassembly:
	0x032E5264 MOV X21, X0
	0x032E5268 B 0x32E528C
	0x032E526C ADRP X0, 0xE35000
	0x032E5270 LDR X0, [X0 + 0x290]
	0x032E5274 BL 0x1C16CF4
	0x032E5278 MOVZ W8, 0x1
	0x032E527C STRB W8, [X23 + 0x762]
	0x032E5280 CBNZ X19, 0x32E5254
	0x032E5284 MOV X21, X31
	0x032E5288 MOV X20, X31
	0x032E528C LDR X0, [X22]
	0x032E5290 LDR W8, [X0 + 0xE0]
	0x032E5294 CBNZ W8, 0x32E529C
	0x032E5298 BL 0x1C16DFC
	0x032E529C MOV X0, X21
	0x032E52A0 MOV X1, X20
	0x032E52A4 BL 0x32E52EC
	0x032E52A8 TBZ X0, 0x0, 0x32E52C0
	0x032E52AC MOV X0, X19
	0x032E52B0 LDP X20, X19, [X31 + 0x20]
	0x032E52B4 LDP X22, X21, [X31 + 0x10]
	0x032E52B8 LDP X30, X23, [X31], #0x30
	0x032E52BC RET
	0x032E52C0 CBZ X19, 0x32E52E8
	0x032E52C4 LDR W8, [X19 + 0x10]
	0x032E52C8 MOV X0, X19
	0x032E52CC LDP X20, X19, [X31 + 0x20]
	0x032E52D0 LDP X22, X21, [X31 + 0x10]
	0x032E52D4 SUB W2, W8, 0x1
	0x032E52D8 MOV W1, W31
	0x032E52DC MOV X3, X31
	0x032E52E0 LDP X30, X23, [X31], #0x30
	0x032E52E4 B 0x3228DE4
	0x032E52E8 BL 0x1C16F20
	0x032E52EC STR X30, [X31 - 0x30]!
	0x032E52F0 STP X22, X21, [X31 + 0x10]
	0x032E52F4 STP X20, X19, [X31 + 0x20]
	0x032E52F8 ADRP X22, 0x10F7000
	0x032E52FC ADRP X21, 0xE39000
	0x032E5300 LDRB W8, [X22 + 0x9B0]
	0x032E5304 LDR X21, [X21 + 0xD70]
	0x032E5308 MOV X19, X1
	0x032E530C MOV X20, X0
	0x032E5310 TBNZ X8, 0x0, 0x32E5334
	0x032E5314 ADRP X0, 0xE39000
	0x032E5318 LDR X0, [X0 + 0xD70]
	0x032E531C BL 0x1C16CF4
	0x032E5320 ADRP X0, 0xE3D000
	0x032E5324 LDR X0, [X0 + 0x28]
	0x032E5328 BL 0x1C16CF4
	0x032E532C MOVZ W8, 0x1
	0x032E5330 STRB W8, [X22 + 0x9B0]
	0x032E5334 LDR X0, [X21]
	0x032E5338 LDR W8, [X0 + 0xE0]
	0x032E533C CBNZ W8, 0x32E5344

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, X1
	005 ShiftRight X8, 31
	006 And X8, X8, 0x7FFFFFFF
	007 Compare X8, 0
	008 JumpIfNotEqual {40}
	009 Move X20, X1
	010 Move X19, X0
	011 Call MemoryStream.EnsureWriteable, X0
	012 Move W8, [X19+48]
	013 Move TEMP, 0x80000000
	014 Not TEMP
	015 Move W9, TEMP
	016 Subtract W9, W9, W8
	017 Move X9, W9
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Add W20, W8, W20
	020 Move X0, X19
	021 Move W1, W20
	022 Call MemoryStream.EnsureCapacity, X0, X1
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move W1, [X19+56]
	028 Subtract W2, W20, W1
	029 Move X0, [X19+40]
	030 Move X3, X31
	031 Call Array.Clear, X0, X1, X2
	032 Move W8, [X19+52]
	033 Move [X19+56], W20
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move [X19+52], W20
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Return 
	040 Move X0, 0xE17000
	041 Move X0, [X0+1888]
	042 Call 0x1C17D08
	043 Call 0x1C17F10
	044 Move X19, X0
	045 Move X0, 0xE19000
	046 Move X0, [X0+3784]
	047 Call 0x1C17D08
	048 Move X20, X0
	049 Move X0, 0xE42000
	050 Move X0, [X0+3232]
	051 Call 0x1C17D08
	052 Move X2, X0
	053 Move X0, X19
	054 Move X1, X20
	055 Move X3, X31
	056 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	057 Move X0, 0xE42000
	058 Move X0, [X0+3408]
	059 Call 0x1C17D08
	060 Move X1, X0
	061 Move X0, X19
	062 Call 0x1C17DEC

Method: System.Byte[] ToArray()

Disassembly:
	0x032E5340 BL 0x1C16DFC
	0x032E5344 MOV X0, X20
	0x032E5348 MOV X1, X19
	0x032E534C BL 0x32E5024
	0x032E5350 CMP W0, W19
	0x032E5354 LDP X20, X19, [X31 + 0x20]
	0x032E5358 LDP X22, X21, [X31 + 0x10]
	0x032E535C CSET W0, EQ
	0x032E5360 LDR X30, [X31], #0x30
	0x032E5364 RET
	0x032E5368 STR X30, [X31 - 0x30]!
	0x032E536C STP X22, X21, [X31 + 0x10]
	0x032E5370 STP X20, X19, [X31 + 0x20]
	0x032E5374 ADRP X22, 0x10F7000
	0x032E5378 ADRP X21, 0xE39000
	0x032E537C LDRB W8, [X22 + 0x9AF]
	0x032E5380 LDR X21, [X21 + 0xD70]
	0x032E5384 MOV X20, X1
	0x032E5388 MOV X19, X0
	0x032E538C TBNZ X8, 0x0, 0x32E53BC
	0x032E5390 ADRP X0, 0xE39000
	0x032E5394 LDR X0, [X0 + 0xD70]
	0x032E5398 BL 0x1C16CF4
	0x032E539C ADRP X0, 0xE41000
	0x032E53A0 LDR X0, [X0 + 0xD90]
	0x032E53A4 BL 0x1C16CF4
	0x032E53A8 ADRP X0, 0xE3D000
	0x032E53AC LDR X0, [X0 + 0x28]
	0x032E53B0 BL 0x1C16CF4
	0x032E53B4 MOVZ W8, 0x1
	0x032E53B8 STRB W8, [X22 + 0x9AF]
	0x032E53BC LDR X0, [X21]
	0x032E53C0 LDR W8, [X0 + 0xE0]
	0x032E53C4 CBNZ W8, 0x32E53CC
	0x032E53C8 BL 0x1C16DFC
	0x032E53CC MOV X0, X19
	0x032E53D0 MOV X1, X20
	0x032E53D4 BL 0x32E50B0
	0x032E53D8 TBZ X0, 0x0, 0x32E5430
	0x032E53DC LDR X0, [X21]
	0x032E53E0 LDR W8, [X0 + 0xE0]
	0x032E53E4 CBNZ W8, 0x32E53EC
	0x032E53E8 BL 0x1C16DFC
	0x032E53EC MOV X0, X19
	0x032E53F0 MOV X1, X20
	0x032E53F4 BL 0x32E52EC
	0x032E53F8 TBNZ X0, 0x0, 0x32E5430
	0x032E53FC ADRP X8, 0xE41000
	0x032E5400 LDR X8, [X8 + 0xD90]
	0x032E5404 MOVN W21, 0x0
	0x032E5408 LDR X22, [X8]
	0x032E540C CBNZ W20, 0x32E5418
	0x032E5410 MOV X0, X31
	0x032E5414 BL 0x339D6EC
	0x032E5418 LDR X0, [X22 + 0x20]
	0x032E541C ADD X20, X20, X21
	0x032E5420 LDRB W8, [X0 + 0x135]
	0x032E5424 TBNZ X8, 0x0, 0x32E542C
	0x032E5428 BL 0x1C5C684

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10F8000
	005 Move W8, [X20+2471]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xE17000
	012 Move X0, [X0+3272]
	013 Call 0x1C17CF4
	014 Move X0, 0xE0F000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2471], W8
	019 Move W8, [X19+56]
	020 Move W9, [X19+48]
	021 Subtract W20, W8, W9
	022 Move X8, 0xE0F000
	023 Move X8, [X8+1560]
	024 Move W1, W20
	025 Move X0, [X8]
	026 Call 0x1C17D6C
	027 Move X8, [X19+40]
	028 Move W1, [X19+48]
	029 Move X19, X0
	030 Move X2, X19
	031 Move X0, X8
	032 Move W3, W31
	033 Move W4, W20
	034 Move X5, X31
	035 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	036 Move X8, 0xE17000
	037 Move X8, [X8+3272]
	038 Move X19, [X8]
	039 Move X8, [X19+56]
	040 Compare X8, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X19
	043 Call 0x1C5D6E0
	044 Move X8, [X19+56]
	045 Move X0, [X8+16]
	046 Move W8, [X0+309]
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {52}
	051 Call 0x1C5D684
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X8, [X19+56]
	057 Move X0, [X8+16]
	058 Move W8, [X0+309]
	059 Move TEMP, X8
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {64}
	063 Call 0x1C5D684
	064 Move X8, [X0+184]
	065 Move X19, [X8]
	066 Move X0, X19
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X30, [X31+32]
	070 Return X0

Method: System.Void Write(System.Byte[] buffer, System.Int32 offset, System.Int32 count)

Disassembly:
	0x032E542C AND X20, X20, 0x0
	0x032E5430 MOV X0, X19
	0x032E5434 MOV X1, X20
	0x032E5438 LDP X20, X19, [X31 + 0x20]
	0x032E543C LDP X22, X21, [X31 + 0x10]
	0x032E5440 LDR X30, [X31], #0x30
	0x032E5444 RET
	0x032E5448 STR X30, [X31 - 0x20]!
	0x032E544C STP X20, X19, [X31 + 0x10]
	0x032E5450 ADRP X20, 0x10F7000
	0x032E5454 ADRP X19, 0xE39000
	0x032E5458 LDRB W8, [X20 + 0x9B1]
	0x032E545C LDR X19, [X19 + 0xD70]
	0x032E5460 TBNZ X8, 0x0, 0x32E5478
	0x032E5464 ADRP X0, 0xE39000
	0x032E5468 LDR X0, [X0 + 0xD70]
	0x032E546C BL 0x1C16CF4
	0x032E5470 MOVZ W8, 0x1
	0x032E5474 STRB W8, [X20 + 0x9B1]
	0x032E5478 LDR X0, [X19]
	0x032E547C LDR W8, [X0 + 0xE0]
	0x032E5480 CBNZ W8, 0x32E548C
	0x032E5484 BL 0x1C16DFC
	0x032E5488 LDR X0, [X19]
	0x032E548C LDR X8, [X0 + 0xB8]
	0x032E5490 LDP X20, X19, [X31 + 0x10]
	0x032E5494 LDRB W0, [X8]
	0x032E5498 LDR X30, [X31], #0x20
	0x032E549C RET
	0x032E54A0 SUB X31, X31, 0x40
	0x032E54A4 STP X30, X23, [X31 + 0x10]
	0x032E54A8 STP X22, X21, [X31 + 0x20]
	0x032E54AC STP X20, X19, [X31 + 0x30]
	0x032E54B0 ADRP X20, 0x10F7000
	0x032E54B4 ADRP X19, 0xE35000
	0x032E54B8 LDRB W8, [X20 + 0x9B2]
	0x032E54BC LDR X19, [X19 + 0x1D0]
	0x032E54C0 TBNZ X8, 0x0, 0x32E5508
	0x032E54C4 ADRP X0, 0xE3C000
	0x032E54C8 LDR X0, [X0 + 0x670]
	0x032E54CC BL 0x1C16CF4
	0x032E54D0 ADRP X0, 0xE0E000
	0x032E54D4 LDR X0, [X0 + 0xE00]
	0x032E54D8 BL 0x1C16CF4
	0x032E54DC ADRP X0, 0xE35000
	0x032E54E0 LDR X0, [X0 + 0x1D0]
	0x032E54E4 BL 0x1C16CF4
	0x032E54E8 ADRP X0, 0xE41000
	0x032E54EC LDR X0, [X0 + 0xD98]
	0x032E54F0 BL 0x1C16CF4
	0x032E54F4 ADRP X0, 0xE19000
	0x032E54F8 LDR X0, [X0 + 0x358]
	0x032E54FC BL 0x1C16CF4
	0x032E5500 MOVZ W8, 0x1
	0x032E5504 STRB W8, [X20 + 0x9B2]
	0x032E5508 LDR X0, [X19]
	0x032E550C STP X31, X31, [X31]
	0x032E5510 LDR W8, [X0 + 0xE0]
	0x032E5514 CBNZ W8, 0x32E551C
	0x032E5518 BL 0x1C16DFC
	0x032E551C MOV X0, X31
	0x032E5520 BL 0x32FDEB0
	0x032E5524 MOV X19, X0
	0x032E5528 MOV X0, X31
	0x032E552C BL 0x337684C
	0x032E5530 ADRP X8, 0xE19000
	0x032E5534 LDR X8, [X8 + 0x358]
	0x032E5538 STP X0, X1, [X31]
	0x032E553C LDR X8, [X8]
	0x032E5540 ADD X0, X31, 0x0
	0x032E5544 MOV X1, X8
	0x032E5548 MOV X2, X31
	0x032E554C BL 0x3378CA4
	0x032E5550 MOV X1, X0
	0x032E5554 ADRP X8, 0xE41000
	0x032E5558 LDR X8, [X8 + 0xD98]
	0x032E555C LDR X0, [X8]
	0x032E5560 MOV X2, X31
	0x032E5564 BL 0x321B938
	0x032E5568 MOV X1, X0
	0x032E556C MOV X0, X19
	0x032E5570 MOV X2, X31
	0x032E5574 BL 0x32FCE04
	0x032E5578 ADRP X8, 0xE3C000
	0x032E557C LDR X8, [X8 + 0x670]
	0x032E5580 MOV X20, X0
	0x032E5584 LDR X0, [X8]
	0x032E5588 BL 0x1C16F10
	0x032E558C MOV X19, X0
	0x032E5590 MOVZ W2, 0x1
	0x032E5594 MOVZ W3, 0x3
	0x032E5598 MOVZ W5, 0x1000
	0x032E559C MOVZ W6, 0x4000000
	0x032E55A0 MOV X1, X20
	0x032E55A4 MOV W4, W31
	0x032E55A8 MOV X7, X31
	0x032E55AC BL 0x32F8A08
	0x032E55B0 ADRP X23, 0xE0E000
	0x032E55B4 LDR X23, [X23 + 0xE00]
	0x032E55B8 CBZ X20, 0x32E5658
	0x032E55BC MOV X0, X20
	0x032E55C0 MOV X1, X31
	0x032E55C4 BL 0x322B6E4
	0x032E55C8 BL 0x32E57A8
	0x032E55CC MOV X20, X31
	0x032E55D0 MOV W22, W31
	0x032E55D4 EOR W21, W0, 0x1
	0x032E55D8 CBZ X19, 0x32E5634
	0x032E55DC LDR X8, [X19]
	0x032E55E0 LDR X1, [X23]
	0x032E55E4 LDRH W9, [X8 + 0x12E]
	0x032E55E8 CBZ X9, 0x32E560C
	0x032E55EC LDR X10, [X8 + 0xB0]
	0x032E55F0 ADD X10, X10, 0x8
	0x032E55F4 LDUR X11, [X10 - 0x8]
	0x032E55F8 CMP X11, X1
	0x032E55FC B.EQ 0x32E561C
	0x032E5600 SUBS X9, X9, 0x1
	0x032E5604 ADD X10, X10, 0x10
	0x032E5608 B.NE 0x32E55F4
	0x032E560C MOV X0, X19
	0x032E5610 MOV W2, W31
	0x032E5614 BL 0x1C5C788
	0x032E5618 B 0x32E5628
	0x032E561C LDRSW X9, [X10]
	0x032E5620 ADD X8, X8, X9, 0x4, LSL
	0x032E5624 ADD X0, X8, 0x138
	0x032E5628 LDP X8, X1, [X0]
	0x032E562C MOV X0, X19
	0x032E5630 BLR X8
	0x032E5634 CBNZ X20, 0x32E565C
	0x032E5638 TBZ X22, 0x0, 0x32E5640
	0x032E563C MOV W21, W31
	0x032E5640 AND W0, W21, 0x1
	0x032E5644 LDP X20, X19, [X31 + 0x30]
	0x032E5648 LDP X22, X21, [X31 + 0x20]
	0x032E564C LDP X30, X23, [X31 + 0x10]
	0x032E5650 ADD X31, X31, 0x40
	0x032E5654 RET
	0x032E5658 BL 0x1C16F20
	0x032E565C MOV X0, X20
	0x032E5660 BL 0x1C16F18
	0x032E5664 B 0x32E5734
	0x032E5668 B 0x32E5670
	0x032E566C B 0x32E5670
	0x032E5670 MOV X22, X1
	0x032E5674 MOV X21, X0
	0x032E5678 CMP W22, 0x1
	0x032E567C B.NE 0x32E56A0
	0x032E5680 MOV X0, X21
	0x032E5684 BL 0x3EB1AD0
	0x032E5688 LDR X20, [X0]
	0x032E568C BL 0x3EB1AE0
	0x032E5690 MOV W21, W31
	0x032E5694 MOVZ W22, 0x1
	0x032E5698 CBNZ X19, 0x32E55DC
	0x032E569C B 0x32E5634
	0x032E56A0 MOV X20, X31
	0x032E56A4 CBZ X19, 0x32E5700
	0x032E56A8 LDR X8, [X19]
	0x032E56AC LDR X1, [X23]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Compare X1, 0
	010 JumpIfEqual {92}
	011 Move W20, W2
	012 Move TEMP, X2
	013 And TEMP, TEMP, -2147483648
	014 Compare TEMP, -2147483648
	015 JumpIfEqual {109}
	016 Move W23, W3
	017 Move TEMP, X3
	018 And TEMP, TEMP, -2147483648
	019 Compare TEMP, -2147483648
	020 JumpIfEqual {116}
	021 Move W8, [X1+24]
	022 Move X21, X1
	023 Subtract W8, W8, W20
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X19, X0
	026 Call MemoryStream.EnsureNotClosed, X0
	027 Move X0, X19
	028 Call MemoryStream.EnsureWriteable, X0
	029 Move W25, [X19+52]
	030 Add W22, W25, W23
	031 Move W24, [X19+56]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W8, [X19+60]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X0, X19
	036 Move W1, W22
	037 Call MemoryStream.EnsureCapacity, X0, X1
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {50}
	043 Move W24, [X19+56]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X0, [X19+40]
	046 Subtract W2, W22, W24
	047 Move W1, W24
	048 Move X3, X31
	049 Call Array.Clear, X0, X1, X2
	050 Move [X19+56], W22
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X2, [X19+40]
	053 Move X2, [X19+40]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract W8, W23, 1
	056 Move W9, [X21+24]
	057 Add W10, W8, W20
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Compare X2, 0
	060 JumpIfEqual {91}
	061 Move W9, [X19+52]
	062 Move W10, [X2+24]
	063 Add W9, W8, W9
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Add W10, W20, W8
	066 Add X10, X21, W10
	067 Move W10, [X10+32]
	068 Add X9, X2, W9
	069 Subtract W8, W8, 1
	070 Move [X9+32], W10
	071 Move W9, [X21+24]
	072 Move X2, [X19+40]
	073 Add W10, W20, W8
	074 Move W3, [X19+52]
	075 Move X0, X21
	076 Move W1, W20
	077 Move W4, W23
	078 Move X5, X31
	079 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	080 Move [X19+52], W22
	081 Move X20, [X31+48]
	082 Move X19, [X31+56]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X24, [X31+16]
	086 Move X23, [X31+24]
	087 Move X30, [X31+64]
	088 Move X25, [X31+72]
	089 Return 
	090 Call 0x1C17F28
	091 Call 0x1C17F20
	092 Move X0, 0xE14000
	093 Move X0, [X0+1320]
	094 Call 0x1C17D08
	095 Call 0x1C17F10
	096 Move X19, X0
	097 Move X0, 0xE3A000
	098 Move X0, [X0+3912]
	099 Call 0x1C17D08
	100 Move X20, X0
	101 Move X0, 0xE42000
	102 Move X0, [X0+3136]
	103 Call 0x1C17D08
	104 Move X2, X0
	105 Move X0, X19
	106 Move X1, X20
	107 Move X3, X31
	108 Call ArgumentNullException..ctor, X0, X1, X2
	109 Move X0, 0xE17000
	110 Move X0, [X0+1888]
	111 Call 0x1C17D08
	112 Call 0x1C17F10
	113 Move X19, X0
	114 Move X0, 0xE3E000
	115 Move X0, [X0+3472]
	116 Move X0, 0xE17000
	117 Move X0, [X0+1888]
	118 Call 0x1C17D08
	119 Call 0x1C17F10
	120 Move X19, X0
	121 Move X0, 0xE37000
	122 Move X0, [X0+1608]
	123 Call 0x1C17D08
	124 Move X20, X0
	125 Move X0, 0xE37000
	126 Move X0, [X0+1648]
	127 Call 0x1C17D08
	128 Move X2, X0
	129 Move X0, X19
	130 Move X1, X20
	131 Move X3, X31
	132 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	133 Move X0, 0xE17000
	134 Move X0, [X0+1400]
	135 Call 0x1C17D08
	136 Call 0x1C17F10
	137 Move X19, X0
	138 Move X0, 0xE37000
	139 Move X0, [X0+1888]
	140 Call 0x1C17D08
	141 Move X1, X0
	142 Move X0, X19
	143 Move X2, X31
	144 Call ArgumentException..ctor, X0, X1
	145 Move X0, 0xE3D000
	146 Move X0, [X0+1960]
	147 Call 0x1C17D08
	148 Call 0x1C17F10
	149 Move X19, X0
	150 Move X0, 0xE42000
	151 Move X0, [X0+3176]
	152 Call 0x1C17D08
	153 Move X1, X0
	154 Move X0, X19
	155 Call IOException..ctor, X0, X1
	156 Move X0, 0xE42000
	157 Move X0, [X0+3416]
	158 Call 0x1C17D08
	159 Move X1, X0
	160 Move X0, X19
	161 Call 0x1C17DEC

Method: System.Void Write(System.ReadOnlySpan`1<System.Byte> buffer)

Disassembly:
	0x032E56B0 LDRH W9, [X8 + 0x12E]
	0x032E56B4 CBZ X9, 0x32E56D8
	0x032E56B8 LDR X10, [X8 + 0xB0]
	0x032E56BC ADD X10, X10, 0x8
	0x032E56C0 LDUR X11, [X10 - 0x8]
	0x032E56C4 CMP X11, X1
	0x032E56C8 B.EQ 0x32E56E8
	0x032E56CC SUBS X9, X9, 0x1
	0x032E56D0 ADD X10, X10, 0x10
	0x032E56D4 B.NE 0x32E56C0
	0x032E56D8 MOV X0, X19
	0x032E56DC MOV W2, W31
	0x032E56E0 BL 0x1C5C788
	0x032E56E4 B 0x32E56F4
	0x032E56E8 LDRSW X9, [X10]
	0x032E56EC ADD X8, X8, X9, 0x4, LSL
	0x032E56F0 ADD X0, X8, 0x138
	0x032E56F4 LDP X8, X1, [X0]
	0x032E56F8 MOV X0, X19
	0x032E56FC BLR X8
	0x032E5700 CBZ X20, 0x32E573C
	0x032E5704 MOV X0, X20
	0x032E5708 BL 0x1C16F18
	0x032E570C MOV X22, X1
	0x032E5710 MOV X21, X0
	0x032E5714 CBNZ X19, 0x32E56A8
	0x032E5718 B 0x32E5700
	0x032E571C B 0x32E5734
	0x032E5720 B 0x32E5734
	0x032E5724 B 0x32E5734
	0x032E5728 B 0x32E5734
	0x032E572C B 0x32E5734
	0x032E5730 B 0x32E5734
	0x032E5734 MOV X22, X1
	0x032E5738 MOV X21, X0
	0x032E573C CMP W22, 0x1
	0x032E5740 B.NE 0x32E579C
	0x032E5744 MOV X0, X21
	0x032E5748 BL 0x3EB1AD0
	0x032E574C MOV X19, X0
	0x032E5750 ADRP X0, 0xE0E000
	0x032E5754 LDR X0, [X0 + 0x7D0]
	0x032E5758 BL 0x1C16D08
	0x032E575C LDR X8, [X19]
	0x032E5760 LDR X1, [X8]
	0x032E5764 BL 0x1C17270
	0x032E5768 TBZ X0, 0x0, 0x32E5774
	0x032E576C BL 0x3EB1AE0
	0x032E5770 B 0x32E563C
	0x032E5774 MOVZ W0, 0x8
	0x032E5778 BL 0x3EB1AF0
	0x032E577C LDR X8, [X19]
	0x032E5780 STR X8, [X0]
	0x032E5784 ADRP X1, 0xBCF000
	0x032E5788 ADD X1, X1, 0xE58
	0x032E578C MOV X2, X31
	0x032E5790 BL 0x3EB1B00
	0x032E5794 MOV X21, X0
	0x032E5798 BL 0x3EB1AE0
	0x032E579C MOV X0, X21
	0x032E57A0 BL 0x1D2C690
	0x032E57A4 BL 0x1990590
	0x032E57A8 STR X30, [X31 - 0x20]!
	0x032E57AC STP X20, X19, [X31 + 0x10]
	0x032E57B0 ADRP X20, 0x10F7000
	0x032E57B4 LDRB W8, [X20 + 0xA09]
	0x032E57B8 MOV X19, X0
	0x032E57BC TBNZ X8, 0x0, 0x32E57E0
	0x032E57C0 ADRP X0, 0xE39000
	0x032E57C4 LDR X0, [X0 + 0xD70]
	0x032E57C8 BL 0x1C16CF4
	0x032E57CC ADRP X0, 0xE35000
	0x032E57D0 LDR X0, [X0 + 0x1D0]
	0x032E57D4 BL 0x1C16CF4
	0x032E57D8 MOVZ W8, 0x1
	0x032E57DC STRB W8, [X20 + 0xA09]
	0x032E57E0 CBZ X19, 0x32E5858
	0x032E57E4 LDR W8, [X19 + 0x10]
	0x032E57E8 CBZ W8, 0x32E5858
	0x032E57EC ADRP X8, 0xE35000
	0x032E57F0 LDR X8, [X8 + 0x1D0]
	0x032E57F4 LDR X0, [X8]
	0x032E57F8 LDR W8, [X0 + 0xE0]
	0x032E57FC CBNZ W8, 0x32E5804
	0x032E5800 BL 0x1C16DFC
	0x032E5804 MOV X0, X19
	0x032E5808 MOV X1, X31
	0x032E580C BL 0x32EE2E0
	0x032E5810 MOV X19, X0
	0x032E5814 CBZ X0, 0x32E58A8
	0x032E5818 LDR W8, [X19 + 0x10]
	0x032E581C SUBS W1, W8, 0x1
	0x032E5820 B.LT 0x32E5860
	0x032E5824 MOV X0, X19
	0x032E5828 MOV X2, X31
	0x032E582C BL 0x3222A1C
	0x032E5830 ADRP X8, 0xE39000
	0x032E5834 LDR X8, [X8 + 0xD70]
	0x032E5838 MOV W20, W0
	0x032E583C LDR X0, [X8]
	0x032E5840 LDR W8, [X0 + 0xE0]
	0x032E5844 CBNZ W8, 0x32E584C
	0x032E5848 BL 0x1C16DFC
	0x032E584C AND W8, W20, 0xFFFF
	0x032E5850 CMP W8, 0x2F
	0x032E5854 B.NE 0x32E5860
	0x032E5858 MOV W0, W31
	0x032E585C B 0x32E5898
	0x032E5860 ADRP X20, 0x10F4000
	0x032E5864 LDRB W8, [X20 + 0x762]
	0x032E5868 CBNZ W8, 0x32E5880
	0x032E586C ADRP X0, 0xE35000
	0x032E5870 LDR X0, [X0 + 0x290]
	0x032E5874 BL 0x1C16CF4
	0x032E5878 MOVZ W8, 0x1
	0x032E587C STRB W8, [X20 + 0x762]
	0x032E5880 MOV X0, X19
	0x032E5884 MOV X1, X31
	0x032E5888 BL 0x3225708
	0x032E588C LDR W1, [X19 + 0x10]
	0x032E5890 MOV X2, X31
	0x032E5894 BL 0x32EF7CC
	0x032E5898 LDP X20, X19, [X31 + 0x10]
	0x032E589C AND W0, W0, 0x1
	0x032E58A0 LDR X30, [X31], #0x20
	0x032E58A4 RET
	0x032E58A8 BL 0x1C16F20
	0x032E58AC B 0x32E58C0
	0x032E58B0 B 0x32E58C0
	0x032E58B4 B 0x32E58C0
	0x032E58B8 B 0x32E58C0
	0x032E58BC B 0x32E58C0
	0x032E58C0 MOV X19, X0
	0x032E58C4 CMP W1, 0x1
	0x032E58C8 B.NE 0x32E595C
	0x032E58CC MOV X0, X19
	0x032E58D0 BL 0x3EB1AD0
	0x032E58D4 MOV X19, X0
	0x032E58D8 ADRP X0, 0xE16000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+8], X2
	003 Move [X31+16], X30
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0x10F8000
	011 Move [X31], X1
	012 Move X22, 0xE42000
	013 Move X23, 0xE0F000
	014 Move W8, [X24+2472]
	015 Move X22, [X22+3256]
	016 Move X23, [X23+1728]
	017 Move X20, X2
	018 Move X21, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0xE42000
	025 Move X0, [X0+3256]
	026 Call 0x1C17CF4
	027 Move X0, 0xE42000
	028 Move X0, [X0+3424]
	029 Call 0x1C17CF4
	030 Move X0, 0xE3E000
	031 Move X0, [X0+2752]
	032 Call 0x1C17CF4
	033 Move X0, 0xE3E000
	034 Move X0, [X0+3680]
	035 Call 0x1C17CF4
	036 Move X0, 0xE0F000
	037 Move X0, [X0+1728]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X24+2472], W8
	041 Move X0, X19
	042 Move X1, X31
	043 Call "il2cpp_vm_object_is_inst", X0
	044 Move X8, [X23]
	045 Move X23, [X22]
	046 Move X22, X0
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Move X0, X23
	053 Move X1, X31
	054 Call Type.GetTypeFromHandle, X0
	055 Move X1, X0
	056 Move X0, X22
	057 Move X2, X31
	058 Call Type.op_Inequality, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {77}
	063 Move X0, X19
	064 Move X1, X21
	065 Move X2, X20
	066 Move X20, [X31+64]
	067 Move X19, [X31+72]
	068 Move X22, [X31+48]
	069 Move X21, [X31+56]
	070 Move X24, [X31+32]
	071 Move X23, [X31+40]
	072 Move X30, [X31+16]
	073 Move X3, X31
	074 Add X31, X31, 80
	075 Call Stream.Write, X0, X1
	076 Return 
	077 Move X0, X19
	078 Call MemoryStream.EnsureNotClosed, X0
	079 Move X0, X19
	080 Call MemoryStream.EnsureWriteable, X0
	081 Move W23, [X19+52]
	082 Add W21, W23, W20
	083 Move W22, [X19+56]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move W8, [X19+60]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X0, X19
	088 Move W1, W21
	089 Call MemoryStream.EnsureCapacity, X0, X1
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfEqual {102}
	095 Move W22, [X19+56]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X0, [X19+40]
	098 Subtract W2, W21, W22
	099 Move W1, W22
	100 Move X3, X31
	101 Call Array.Clear, X0, X1, X2
	102 Move W23, [X19+52]
	103 Move [X19+56], W21
	104 Move X22, [X19+40]
	105 Compare X22, 0
	106 JumpIfEqual {115}
	107 Move W8, [X22+24]
	108 Subtract W8, W8, W23
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X0, X31
	111 Call ThrowHelper.ThrowArgumentOutOfRangeException
	112 Add X8, X22, W23
	113 Add X1, X8, 32
	114 And X2, X20, 0
	115 Or W8, W23, W20
	116 Compare W8, 0
	117 JumpIfEqual {120}
	118 Move X0, X31
	119 Call ThrowHelper.ThrowArgumentOutOfRangeException
	120 Move X1, X31
	121 Move X2, X31
	122 Move X8, 0xE42000
	123 Move X8, [X8+3424]
	124 Add X0, X31, 0
	125 Move X3, [X8]
	126 Call 0x25BF5D8, X0, X1
	127 Move [X19+52], W21
	128 Move X20, [X31+64]
	129 Move X19, [X31+72]
	130 Move X22, [X31+48]
	131 Move X21, [X31+56]
	132 Move X24, [X31+32]
	133 Move X23, [X31+40]
	134 Move X30, [X31+16]
	135 Add X31, X31, 80
	136 Return 
	137 Move X0, 0xE3D000
	138 Move X0, [X0+1960]
	139 Call 0x1C17D08
	140 Call 0x1C17F10
	141 Move X19, X0
	142 Move X0, 0xE42000
	143 Move X0, [X0+3176]
	144 Call 0x1C17D08
	145 Move X1, X0
	146 Move X0, X19
	147 Call IOException..ctor, X0, X1
	148 Move X0, 0xE42000
	149 Move X0, [X0+3432]
	150 Call 0x1C17D08
	151 Move X1, X0
	152 Move X0, X19
	153 Call 0x1C17DEC

Method: System.Threading.Tasks.Task WriteAsync(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x032E58DC LDR X0, [X0 + 0x578]
	0x032E58E0 BL 0x1C16D08
	0x032E58E4 LDR X8, [X19]
	0x032E58E8 LDR X1, [X8]
	0x032E58EC BL 0x1C17270
	0x032E58F0 TBNZ X0, 0x0, 0x32E592C
	0x032E58F4 ADRP X0, 0xE3C000
	0x032E58F8 LDR X0, [X0 + 0x7A8]
	0x032E58FC BL 0x1C16D08
	0x032E5900 LDR X8, [X19]
	0x032E5904 LDR X1, [X8]
	0x032E5908 BL 0x1C17270
	0x032E590C TBNZ X0, 0x0, 0x32E592C
	0x032E5910 ADRP X0, 0xE3C000
	0x032E5914 LDR X0, [X0 + 0x7B8]
	0x032E5918 BL 0x1C16D08
	0x032E591C LDR X8, [X19]
	0x032E5920 LDR X1, [X8]
	0x032E5924 BL 0x1C17270
	0x032E5928 TBZ X0, 0x0, 0x32E5934
	0x032E592C BL 0x3EB1AE0
	0x032E5930 B 0x32E5858
	0x032E5934 MOVZ W0, 0x8
	0x032E5938 BL 0x3EB1AF0
	0x032E593C LDR X8, [X19]
	0x032E5940 STR X8, [X0]
	0x032E5944 ADRP X1, 0xBCF000
	0x032E5948 ADD X1, X1, 0xE58
	0x032E594C MOV X2, X31
	0x032E5950 BL 0x3EB1B00
	0x032E5954 MOV X19, X0
	0x032E5958 BL 0x3EB1AE0
	0x032E595C MOV X0, X19
	0x032E5960 BL 0x1D2C690
	0x032E5964 BL 0x1990590
	0x032E5968 MOV W0, W31
	0x032E596C RET
	0x032E5970 STR X30, [X31 - 0x20]!
	0x032E5974 STP X20, X19, [X31 + 0x10]
	0x032E5978 ADRP X20, 0x10F7000
	0x032E597C ADRP X19, 0xE39000
	0x032E5980 LDRB W8, [X20 + 0x9B3]
	0x032E5984 LDR X19, [X19 + 0xD70]
	0x032E5988 TBNZ X8, 0x0, 0x32E59A0
	0x032E598C ADRP X0, 0xE39000
	0x032E5990 LDR X0, [X0 + 0xD70]
	0x032E5994 BL 0x1C16CF4
	0x032E5998 MOVZ W8, 0x1
	0x032E599C STRB W8, [X20 + 0x9B3]
	0x032E59A0 BL 0x32E54A0
	0x032E59A4 LDR X8, [X19]
	0x032E59A8 LDP X20, X19, [X31 + 0x10]
	0x032E59AC AND W9, W0, 0x1
	0x032E59B0 LDR X8, [X8 + 0xB8]
	0x032E59B4 STRB W9, [X8]
	0x032E59B8 LDR X30, [X31], #0x20
	0x032E59BC RET
	0x032E59C0 STP X30, X21, [X31 - 0x20]!
	0x032E59C4 STP X20, X19, [X31 + 0x10]
	0x032E59C8 ADRP X20, 0x10F7000
	0x032E59CC ADRP X21, 0xE3C000
	0x032E59D0 LDRB W8, [X20 + 0x9B4]
	0x032E59D4 LDR X21, [X21 + 0x7F0]
	0x032E59D8 MOV X19, X0
	0x032E59DC TBNZ X8, 0x0, 0x32E59F4
	0x032E59E0 ADRP X0, 0xE3C000
	0x032E59E4 LDR X0, [X0 + 0x7F0]
	0x032E59E8 BL 0x1C16CF4
	0x032E59EC MOVZ W8, 0x1
	0x032E59F0 STRB W8, [X20 + 0x9B4]
	0x032E59F4 LDR X1, [X21]
	0x032E59F8 MOV X0, X19
	0x032E59FC MOV X2, X31
	0x032E5A00 BL 0x338C8D8
	0x032E5A04 MOVZ W8, 0xCE
	0x032E5A08 MOVK W8, 0x80070000
	0x032E5A0C STR W8, [X19 + 0x60]
	0x032E5A10 LDP X20, X19, [X31 + 0x10]
	0x032E5A14 LDP X30, X21, [X31], #0x20
	0x032E5A18 RET
	0x032E5A1C STP X30, X19, [X31 - 0x10]!
	0x032E5A20 MOV X2, X31
	0x032E5A24 MOV X19, X0
	0x032E5A28 BL 0x338C8D8
	0x032E5A2C MOVZ W8, 0xCE
	0x032E5A30 MOVK W8, 0x80070000
	0x032E5A34 STR W8, [X19 + 0x60]
	0x032E5A38 LDP X30, X19, [X31], #0x10
	0x032E5A3C RET
	0x032E5A40 MOV X4, X31
	0x032E5A44 B 0x338CA74
	0x032E5A48 STR X30, [X31 - 0x30]!
	0x032E5A4C STP X22, X21, [X31 + 0x10]
	0x032E5A50 STP X20, X19, [X31 + 0x20]
	0x032E5A54 ADRP X21, 0x10F7000
	0x032E5A58 LDRB W8, [X21 + 0x9B5]
	0x032E5A5C MOV X20, X1
	0x032E5A60 MOV X19, X0
	0x032E5A64 TBNZ X8, 0x0, 0x32E5A88
	0x032E5A68 ADRP X0, 0xE3C000
	0x032E5A6C LDR X0, [X0 + 0x830]
	0x032E5A70 BL 0x1C16CF4
	0x032E5A74 ADRP X0, 0xE3D000
	0x032E5A78 LDR X0, [X0 + 0x2F8]
	0x032E5A7C BL 0x1C16CF4
	0x032E5A80 MOVZ W8, 0x1
	0x032E5A84 STRB W8, [X21 + 0x9B5]
	0x032E5A88 MOV X0, X19
	0x032E5A8C BL 0x32E5AFC
	0x032E5A90 MOVZ W1, 0x3
	0x032E5A94 MOV X0, X20
	0x032E5A98 MOV X2, X31
	0x032E5A9C STR X20, [X19 + 0x68]
	0x032E5AA0 BL 0x32C0780
	0x032E5AA4 STR X0, [X19 + 0x70]
	0x032E5AA8 CBZ X20, 0x32E5AF8
	0x032E5AAC ADRP X8, 0xE3D000
	0x032E5AB0 LDR X8, [X8 + 0x2F8]
	0x032E5AB4 ADRP X22, 0xE3C000
	0x032E5AB8 LDRSW X21, [X20 + 0x18]
	0x032E5ABC MOV X0, X20
	0x032E5AC0 LDR X1, [X8]
	0x032E5AC4 LDR X22, [X22 + 0x830]
	0x032E5AC8 BL 0x25FB4C0
	0x032E5ACC LDR X2, [X22]
	0x032E5AD0 BL 0x2218CF4
	0x032E5AD4 MOV X1, X0
	0x032E5AD8 MOV X0, X19
	0x032E5ADC MOV X2, X21
	0x032E5AE0 MOV X3, X21
	0x032E5AE4 LDP X20, X19, [X31 + 0x20]
	0x032E5AE8 LDP X22, X21, [X31 + 0x10]
	0x032E5AEC MOVZ W4, 0x1
	0x032E5AF0 LDR X30, [X31], #0x30
	0x032E5AF4 B 0x32E5B60
	0x032E5AF8 BL 0x1C16F20
	0x032E5AFC STP X30, X21, [X31 - 0x20]!
	0x032E5B00 STP X20, X19, [X31 + 0x10]
	0x032E5B04 ADRP X20, 0x10F7000
	0x032E5B08 ADRP X21, 0xE3D000
	0x032E5B0C LDRB W8, [X20 + 0x9E9]
	0x032E5B10 LDR X21, [X21 + 0xD10]
	0x032E5B14 MOV X19, X0
	0x032E5B18 TBNZ X8, 0x0, 0x32E5B30
	0x032E5B1C ADRP X0, 0xE3D000
	0x032E5B20 LDR X0, [X0 + 0xD10]
	0x032E5B24 BL 0x1C16CF4
	0x032E5B28 MOVZ W8, 0x1
	0x032E5B2C STRB W8, [X20 + 0x9E9]
	0x032E5B30 LDR X0, [X21]
	0x032E5B34 LDR W8, [X0 + 0xE0]
	0x032E5B38 CBNZ W8, 0x32E5B40
	0x032E5B3C BL 0x1C16DFC
	0x032E5B40 MOV X0, X19
	0x032E5B44 MOV X1, X31
	0x032E5B48 BL 0x32F27B0
	0x032E5B4C STR X31, [X19 + 0x30]
	0x032E5B50 STRB W31, [X19 + 0x5C]
	0x032E5B54 LDP X20, X19, [X31 + 0x10]
	0x032E5B58 LDP X30, X21, [X31], #0x20
	0x032E5B5C RET
	0x032E5B60 STR X30, [X31 - 0x20]!
	0x032E5B64 STP X20, X19, [X31 + 0x10]
	0x032E5B68 CBZ X1, 0x32E5BBC
	0x032E5B6C TBNZ X3, 0x0, 0x32E5BF0
	0x032E5B70 TBNZ X2, 0x0, 0x32E5BF0
	0x032E5B74 CMP X2, X3
	0x032E5B78 B.GT 0x32E5C5C
	0x032E5B7C ADDS X31, X1, X3
	0x032E5B80 B.CS 0x32E5C8C
	0x032E5B84 SUB W8, W4, 0x1
	0x032E5B88 CMP W8, 0x3
	0x032E5B8C B.CS 0x32E5CBC
	0x032E5B90 LDRB W8, [X0 + 0x5C]
	0x032E5B94 CBNZ W8, 0x32E5D04
	0x032E5B98 LDP X20, X19, [X31 + 0x10]
	0x032E5B9C MOVZ W8, 0x1
	0x032E5BA0 STR X31, [X0 + 0x50]
	0x032E5BA4 STP X1, X2, [X0 + 0x30]
	0x032E5BA8 STR X3, [X0 + 0x40]
	0x032E5BAC STR W4, [X0 + 0x58]
	0x032E5BB0 STRB W8, [X0 + 0x5C]
	0x032E5BB4 LDR X30, [X31], #0x20
	0x032E5BB8 RET
	0x032E5BBC ADRP X0, 0xE13000
	0x032E5BC0 LDR X0, [X0 + 0x528]
	0x032E5BC4 BL 0x1C16D08
	0x032E5BC8 BL 0x1C16F10
	0x032E5BCC MOV X19, X0
	0x032E5BD0 ADRP X0, 0xE41000
	0x032E5BD4 LDR X0, [X0 + 0xDA0]
	0x032E5BD8 BL 0x1C16D08
	0x032E5BDC MOV X1, X0
	0x032E5BE0 MOV X0, X19
	0x032E5BE4 MOV X2, X31
	0x032E5BE8 BL 0x330E100
	0x032E5BEC B 0x32E5D34
	0x032E5BF0 ADRP X8, 0xE38000
	0x032E5BF4 ADRP X9, 0xE16000
	0x032E5BF8 LDR X8, [X8 + 0x58]
	0x032E5BFC LDR X9, [X9 + 0x768]
	0x032E5C00 CMP X2, 0x0
	0x032E5C04 CSEL X0, X9, X8, LT
	0x032E5C08 BL 0x1C16D08
	0x032E5C0C MOV X19, X0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x10F8000
	009 Move W8, [X23+2473]
	010 Move W19, W3
	011 Move W20, W2
	012 Move X21, X1
	013 Move X22, X0
	014 Move [X31+8], X4
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xE17000
	020 Move X0, [X0+2008]
	021 Call 0x1C17CF4
	022 Move X0, 0xE10000
	023 Move X0, [X0+1976]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2473], W8
	027 Compare X21, 0
	028 JumpIfEqual {105}
	029 Move TEMP, X20
	030 And TEMP, TEMP, -2147483648
	031 Compare TEMP, -2147483648
	032 JumpIfEqual {122}
	033 Move TEMP, X19
	034 And TEMP, TEMP, -2147483648
	035 Compare TEMP, -2147483648
	036 JumpIfEqual {129}
	037 Move W8, [X21+24]
	038 Subtract W8, W8, W20
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, 0xE17000
	041 Move X8, [X8+2008]
	042 Move X0, [X8]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Add X0, X31, 8
	048 Move X1, X31
	049 Call CancellationToken.get_IsCancellationRequested, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {65}
	054 Move X8, 0xE10000
	055 Move X8, [X8+1976]
	056 Move X19, [X31+8]
	057 Move X0, [X8]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X19
	063 Move X1, X31
	064 Call Task.FromCanceled, X0
	065 Move X8, [X22]
	066 Move X9, [X8+904]
	067 Move X4, [X8+912]
	068 Move X0, X22
	069 Move X1, X21
	070 Move W2, W20
	071 Move W3, W19
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move X19, 0xE10000
	074 Move X19, [X19+1976]
	075 Move X0, [X19]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X20, 0x10F4000
	081 Move W8, [X20+3869]
	082 Compare W8, 0
	083 JumpIfNotEqual {89}
	084 Move X0, 0xE10000
	085 Move X0, [X0+1976]
	086 Call 0x1C17CF4
	087 Move W8, 1
	088 Move [X20+3869], W8
	089 Move X0, [X19]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {95}
	093 Call 0x1C17DFC
	094 Move X0, [X19]
	095 Move X8, [X0+184]
	096 Move X0, [X8+48]
	097 Move X20, [X31+48]
	098 Move X19, [X31+56]
	099 Move X22, [X31+32]
	100 Move X21, [X31+40]
	101 Move X30, [X31+16]
	102 Move X23, [X31+24]
	103 Add X31, X31, 64
	104 Return X0
	105 Move X0, 0xE14000
	106 Move X0, [X0+1320]
	107 Call 0x1C17D08
	108 Call 0x1C17F10
	109 Move X19, X0
	110 Move X0, 0xE3A000
	111 Move X0, [X0+3912]
	112 Call 0x1C17D08
	113 Move X20, X0
	114 Move X0, 0xE42000
	115 Move X0, [X0+3136]
	116 Call 0x1C17D08
	117 Move X2, X0
	118 Move X0, X19
	119 Move X1, X20
	120 Move X3, X31
	121 Call ArgumentNullException..ctor, X0, X1, X2
	122 Move X0, 0xE17000
	123 Move X0, [X0+1888]
	124 Call 0x1C17D08
	125 Call 0x1C17F10
	126 Move X19, X0
	127 Move X0, 0xE3E000
	128 Move X0, [X0+3472]
	129 Move X0, 0xE17000
	130 Move X0, [X0+1888]
	131 Call 0x1C17D08
	132 Call 0x1C17F10
	133 Move X19, X0
	134 Move X0, 0xE37000
	135 Move X0, [X0+1608]
	136 Call 0x1C17D08
	137 Move X20, X0
	138 Move X0, 0xE37000
	139 Move X0, [X0+1648]
	140 Call 0x1C17D08
	141 Move X2, X0
	142 Move X0, X19
	143 Move X1, X20
	144 Move X3, X31
	145 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	146 Move X0, 0xE17000
	147 Move X0, [X0+1400]
	148 Call 0x1C17D08
	149 Call 0x1C17F10
	150 Move X19, X0
	151 Move X0, 0xE37000
	152 Move X0, [X0+1888]
	153 Call 0x1C17D08
	154 Move X1, X0
	155 Move X0, X19
	156 Move X2, X31
	157 Call ArgumentException..ctor, X0, X1
	158 Move X0, 0xE42000
	159 Move X0, [X0+3440]
	160 Call 0x1C17D08
	161 Move X1, X0
	162 Move X0, X19
	163 Call 0x1C17DEC
	164 Move X19, X0
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move X0, X19
	167 Call 0x3EB2AD0
	168 Move X19, X0
	169 Move X0, 0xE17000
	170 Move X0, [X0+2216]
	171 Call 0x1C17D08
	172 Move X8, [X19]
	173 Move X1, [X8]
	174 Call 0x1C18270
	175 Move TEMP, X0
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfNotEqual {194}
	179 Move X19, [X19]
	180 Call 0x3EB2AE0
	181 Move X0, 0xE10000
	182 Move X0, [X0+1976]
	183 Call 0x1C17D08
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {188}
	187 Call 0x1C17DFC
	188 Move X0, 0xE42000
	189 Move X0, [X0+3448]
	190 Call 0x1C17D08
	191 Move X1, X0
	192 Move X0, X19
	193 Call Task.FromCancellation, X0
	194 Move X0, 0xE0F000
	195 Move X0, [X0+2000]
	196 Call 0x1C17D08
	197 Move X8, [X19]
	198 Move X1, [X8]
	199 Call 0x1C18270
	200 Move TEMP, X0
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfNotEqual {216}
	204 Move X19, [X19]
	205 Call 0x3EB2AE0
	206 Move X0, 0xE10000
	207 Move X0, [X0+1976]
	208 Call 0x1C17D08
	209 Move W8, [X0+224]
	210 Compare W8, 0
	211 JumpIfNotEqual {213}
	212 Call 0x1C17DFC
	213 Move X0, X19
	214 Move X1, X31
	215 Call Task.FromException, X0
	216 Move W0, 8
	217 Call 0x3EB2AF0
	218 Move X8, [X19]
	219 Move [X0], X8
	220 Move X1, 0xBD0000
	221 Add X1, X1, 3672
	222 Move X2, X31
	223 Call 0x3EB2B00
	224 Move X19, X0
	225 Call 0x3EB2AE0
	226 Move X0, X19
	227 Call 0x1D2D690
	228 Call 0x1991590

Method: System.Threading.Tasks.ValueTask WriteAsync(System.ReadOnlyMemory`1<System.Byte> buffer, System.Threading.CancellationToken cancellationToken = null)

Disassembly:
	0x032E5C10 ADRP X0, 0xE16000
	0x032E5C14 LDR X0, [X0 + 0x760]
	0x032E5C18 BL 0x1C16D08
	0x032E5C1C BL 0x1C16F10
	0x032E5C20 MOV X20, X0
	0x032E5C24 ADRP X0, 0xE36000
	0x032E5C28 LDR X0, [X0 + 0x670]
	0x032E5C2C BL 0x1C16D08
	0x032E5C30 MOV X2, X0
	0x032E5C34 MOV X0, X20
	0x032E5C38 MOV X1, X19
	0x032E5C3C MOV X3, X31
	0x032E5C40 BL 0x3311888
	0x032E5C44 ADRP X0, 0xE41000
	0x032E5C48 LDR X0, [X0 + 0xDA8]
	0x032E5C4C BL 0x1C16D08
	0x032E5C50 MOV X1, X0
	0x032E5C54 MOV X0, X20
	0x032E5C58 BL 0x1C16DEC
	0x032E5C5C ADRP X0, 0xE16000
	0x032E5C60 LDR X0, [X0 + 0x760]
	0x032E5C64 BL 0x1C16D08
	0x032E5C68 BL 0x1C16F10
	0x032E5C6C MOV X19, X0
	0x032E5C70 ADRP X0, 0xE16000
	0x032E5C74 LDR X0, [X0 + 0x768]
	0x032E5C78 BL 0x1C16D08
	0x032E5C7C MOV X20, X0
	0x032E5C80 ADRP X0, 0xE3D000
	0x032E5C84 LDR X0, [X0 + 0x520]
	0x032E5C88 B 0x32E5CE8
	0x032E5C8C ADRP X0, 0xE16000
	0x032E5C90 LDR X0, [X0 + 0x760]
	0x032E5C94 BL 0x1C16D08
	0x032E5C98 BL 0x1C16F10
	0x032E5C9C MOV X19, X0
	0x032E5CA0 ADRP X0, 0xE38000
	0x032E5CA4 LDR X0, [X0 + 0x58]
	0x032E5CA8 BL 0x1C16D08
	0x032E5CAC MOV X20, X0
	0x032E5CB0 ADRP X0, 0xE41000
	0x032E5CB4 LDR X0, [X0 + 0xDB0]
	0x032E5CB8 B 0x32E5CE8
	0x032E5CBC ADRP X0, 0xE16000
	0x032E5CC0 LDR X0, [X0 + 0x760]
	0x032E5CC4 BL 0x1C16D08
	0x032E5CC8 BL 0x1C16F10
	0x032E5CCC MOV X19, X0
	0x032E5CD0 ADRP X0, 0xE41000
	0x032E5CD4 LDR X0, [X0 + 0xDB8]
	0x032E5CD8 BL 0x1C16D08
	0x032E5CDC MOV X20, X0
	0x032E5CE0 ADRP X0, 0xE41000
	0x032E5CE4 LDR X0, [X0 + 0xDC0]
	0x032E5CE8 BL 0x1C16D08
	0x032E5CEC MOV X2, X0
	0x032E5CF0 MOV X0, X19
	0x032E5CF4 MOV X1, X20
	0x032E5CF8 MOV X3, X31
	0x032E5CFC BL 0x3311888
	0x032E5D00 B 0x32E5D34
	0x032E5D04 ADRP X0, 0xE0E000
	0x032E5D08 LDR X0, [X0 + 0x5B0]
	0x032E5D0C BL 0x1C16D08
	0x032E5D10 BL 0x1C16F10
	0x032E5D14 MOV X19, X0
	0x032E5D18 ADRP X0, 0xE41000
	0x032E5D1C LDR X0, [X0 + 0xDC8]
	0x032E5D20 BL 0x1C16D08
	0x032E5D24 MOV X1, X0
	0x032E5D28 MOV X0, X19
	0x032E5D2C MOV X2, X31
	0x032E5D30 BL 0x337DF1C
	0x032E5D34 ADRP X0, 0xE41000
	0x032E5D38 LDR X0, [X0 + 0xDA8]
	0x032E5D3C BL 0x1C16D08
	0x032E5D40 MOV X1, X0
	0x032E5D44 MOV X0, X19
	0x032E5D48 BL 0x1C16DEC
	0x032E5D4C B 0x32E5D50
	0x032E5D50 SUB X31, X31, 0x50
	0x032E5D54 STP X30, X25, [X31 + 0x10]
	0x032E5D58 STP X24, X23, [X31 + 0x20]
	0x032E5D5C STP X22, X21, [X31 + 0x30]
	0x032E5D60 STP X20, X19, [X31 + 0x40]
	0x032E5D64 ADRP X20, 0x10F7000
	0x032E5D68 ADRP X22, 0xE0E000
	0x032E5D6C LDRB W8, [X20 + 0x9EF]
	0x032E5D70 LDR X22, [X22 + 0x5A8]
	0x032E5D74 MOV X23, X2
	0x032E5D78 MOV X24, X1
	0x032E5D7C MOV X19, X0
	0x032E5D80 TBNZ X8, 0x0, 0x32E5DB0
	0x032E5D84 ADRP X0, 0xE0E000
	0x032E5D88 LDR X0, [X0 + 0x5A8]
	0x032E5D8C BL 0x1C16CF4
	0x032E5D90 ADRP X0, 0xE3C000
	0x032E5D94 LDR X0, [X0 + 0x830]
	0x032E5D98 BL 0x1C16CF4
	0x032E5D9C ADRP X0, 0xE3D000
	0x032E5DA0 LDR X0, [X0 + 0x928]
	0x032E5DA4 BL 0x1C16CF4
	0x032E5DA8 MOVZ W8, 0x1
	0x032E5DAC STRB W8, [X20 + 0x9EF]
	0x032E5DB0 MOV X0, X19
	0x032E5DB4 STR X31, [X31 + 0x8]
	0x032E5DB8 BL 0x32EA6DC
	0x032E5DBC MOV X0, X19
	0x032E5DC0 BL 0x32EA710
	0x032E5DC4 ADD X20, X19, 0x48
	0x032E5DC8 MOV X0, X20
	0x032E5DCC MOV X1, X31
	0x032E5DD0 BL 0x33EB198
	0x032E5DD4 MOV X21, X0
	0x032E5DD8 ADD X0, X19, 0x38
	0x032E5DDC MOV X1, X31
	0x032E5DE0 BL 0x33EB198
	0x032E5DE4 LDR X8, [X22]
	0x032E5DE8 MOV X22, X0
	0x032E5DEC LDR W9, [X8 + 0xE0]
	0x032E5DF0 CBNZ W9, 0x32E5DFC
	0x032E5DF4 MOV X0, X8
	0x032E5DF8 BL 0x1C16DFC
	0x032E5DFC SUB X0, X22, X21
	0x032E5E00 SXTW X1, W23
	0x032E5E04 MOV X2, X31
	0x032E5E08 BL 0x337EEA0
	0x032E5E0C CMP X0, 0x1
	0x032E5E10 B.LT 0x32E5EDC
	0x032E5E14 MOV X22, X0
	0x032E5E18 TBNZ X22, 0x1F, 0x32E5EDC
	0x032E5E1C ADRP X8, 0xE3C000
	0x032E5E20 LDR X8, [X8 + 0x830]
	0x032E5E24 MOV X0, X24
	0x032E5E28 MOV X1, X23
	0x032E5E2C LDR X2, [X8]
	0x032E5E30 BL 0x2218CF4
	0x032E5E34 LDR X8, [X19 + 0x28]
	0x032E5E38 MOV X23, X0
	0x032E5E3C CBZ X8, 0x32E5EB0
	0x032E5E40 MOV X0, X31
	0x032E5E44 STR X31, [X31 + 0x8]
	0x032E5E48 BL 0x32C5C58
	0x032E5E4C LDR X0, [X19 + 0x28]
	0x032E5E50 CBZ X0, 0x32E5EFC
	0x032E5E54 ADD X1, X31, 0x8
	0x032E5E58 MOV X2, X31
	0x032E5E5C BL 0x32BF80C
	0x032E5E60 LDR X8, [X31 + 0x8]
	0x032E5E64 LDR X9, [X19 + 0x50]
	0x032E5E68 ADD X8, X21, X8
	0x032E5E6C ADD X1, X8, X9
	0x032E5E70 MOV X0, X23
	0x032E5E74 MOV W2, W22
	0x032E5E78 MOV X3, X31
	0x032E5E7C BL 0x33A8924
	0x032E5E80 MOV X24, X31
	0x032E5E84 MOVZ W25, 0x5
	0x032E5E88 LDR X8, [X31 + 0x8]
	0x032E5E8C CBZ X8, 0x32E5EA0
	0x032E5E90 LDR X0, [X19 + 0x28]
	0x032E5E94 CBZ X0, 0x32E5F08
	0x032E5E98 MOV X1, X31
	0x032E5E9C BL 0x32BFA0C
	0x032E5EA0 CBNZ X24, 0x32E5F00
	0x032E5EA4 CMP W25, 0x5
	0x032E5EA8 B.EQ 0x32E5EC8
	0x032E5EAC CBNZ W25, 0x32E5EE0
	0x032E5EB0 LDR X8, [X19 + 0x30]
	0x032E5EB4 MOV X0, X23
	0x032E5EB8 MOV W2, W22
	0x032E5EBC MOV X3, X31
	0x032E5EC0 ADD X1, X21, X8
	0x032E5EC4 BL 0x33A8924

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X23, 0x10F8000
	009 Move [X31+32], X1
	010 Move [X31+40], X2
	011 Move [X31+24], X3
	012 Move X22, 0xE17000
	013 Move W8, [X23+2474]
	014 Move X22, [X22+2008]
	015 Move X20, X2
	016 Move X21, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {48}
	022 Move X0, 0xE42000
	023 Move X0, [X0+3312]
	024 Call 0x1C17CF4
	025 Move X0, 0xE42000
	026 Move X0, [X0+3320]
	027 Call 0x1C17CF4
	028 Move X0, 0xE42000
	029 Move X0, [X0+3328]
	030 Call 0x1C17CF4
	031 Move X0, 0xE37000
	032 Move X0, [X0+1456]
	033 Call 0x1C17CF4
	034 Move X0, 0xE17000
	035 Move X0, [X0+2008]
	036 Call 0x1C17CF4
	037 Move X0, 0xE42000
	038 Move X0, [X0+3336]
	039 Call 0x1C17CF4
	040 Move X0, 0xE42000
	041 Move X0, [X0+3456]
	042 Call 0x1C17CF4
	043 Move X0, 0xE10000
	044 Move X0, [X0+1976]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X23+2474], W8
	048 Move X0, [X22]
	049 Move [X31+8], X31
	050 Move [X31+16], X31
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Add X0, X31, 24
	056 Move X1, X31
	057 Call CancellationToken.get_IsCancellationRequested, X0
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {80}
	062 Move X8, 0xE10000
	063 Move X8, [X8+1976]
	064 Move X19, [X31+24]
	065 Move X0, [X8]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X19
	071 Move X1, X31
	072 Call Task.FromCanceled, X0
	073 Move X19, X0
	074 Compare X0, 0
	075 JumpIfNotEqual {79}
	076 Move W0, 38
	077 Move X1, X31
	078 Call ThrowHelper.ThrowArgumentNullException, X0
	079 Move W1, 0x10000
	080 Move X8, 0xE42000
	081 Move X8, [X8+3336]
	082 Move X3, [X8]
	083 Add X2, X31, 8
	084 Move X0, X21
	085 Move X1, X20
	086 Call 0x2219D10, X0, X1
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {106}
	091 Move X8, 0xE37000
	092 Move X8, [X8+1456]
	093 Move X0, [X8]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move X8, [X19]
	099 Move X1, [X31+8]
	100 Move W2, [X31+16]
	101 Move W3, [X31+20]
	102 Move X9, [X8+904]
	103 Move X4, [X8+912]
	104 Move X0, X19
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move X8, 0xE42000
	107 Move X8, [X8+3456]
	108 Move X1, [X8]
	109 Add X0, X31, 32
	110 Call 0x25D8918
	111 Move X8, [X19]
	112 Move X2, X0
	113 Move X4, X1
	114 Move X9, [X8+920]
	115 Move X3, [X8+928]
	116 Move X0, X19
	117 Move X1, X2
	118 Move X2, X4
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move X1, X31
	121 Move X19, X31
	122 Move X0, X19
	123 Move X20, [X31+80]
	124 Move X19, [X31+88]
	125 Move X22, [X31+64]
	126 Move X21, [X31+72]
	127 Move X30, [X31+48]
	128 Move X23, [X31+56]
	129 Add X31, X31, 96
	130 Return X0
	131 Move X19, X0
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X0, X19
	134 Call 0x3EB2AD0
	135 Move X19, X0
	136 Move X0, 0xE17000
	137 Move X0, [X0+2216]
	138 Call 0x1C17D08
	139 Move X8, [X19]
	140 Move X1, [X8]
	141 Call 0x1C18270
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfNotEqual {161}
	146 Move X19, [X19]
	147 Call 0x3EB2AE0
	148 Move X0, 0xE10000
	149 Move X0, [X0+1976]
	150 Call 0x1C17D08
	151 Move W8, [X0+224]
	152 Compare W8, 0
	153 JumpIfNotEqual {155}
	154 Call 0x1C17DFC
	155 Move X0, 0xE42000
	156 Move X0, [X0+3448]
	157 Call 0x1C17D08
	158 Move X1, X0
	159 Move X0, X19
	160 Call Task.FromCancellation, X0
	161 Move X0, 0xE0F000
	162 Move X0, [X0+2000]
	163 Call 0x1C17D08
	164 Move X8, [X19]
	165 Move X1, [X8]
	166 Call 0x1C18270
	167 Move TEMP, X0
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfNotEqual {183}
	171 Move X19, [X19]
	172 Call 0x3EB2AE0
	173 Move X0, 0xE10000
	174 Move X0, [X0+1976]
	175 Call 0x1C17D08
	176 Move W8, [X0+224]
	177 Compare W8, 0
	178 JumpIfNotEqual {180}
	179 Call 0x1C17DFC
	180 Move X0, X19
	181 Move X1, X31
	182 Call Task.FromException, X0
	183 Move W0, 8
	184 Call 0x3EB2AF0
	185 Move X8, [X19]
	186 Move [X0], X8
	187 Move X1, 0xBD0000
	188 Add X1, X1, 3672
	189 Move X2, X31
	190 Call 0x3EB2B00
	191 Move X19, X0
	192 Call 0x3EB2AE0
	193 Move X0, X19
	194 Call 0x1D2D690
	195 Call 0x1991590

Method: System.Void WriteByte(System.Byte value)

Disassembly:
	0x032E5EC8 ADD X1, X22, X21
	0x032E5ECC MOV X0, X20
	0x032E5ED0 MOV X2, X31
	0x032E5ED4 BL 0x33EB18C
	0x032E5ED8 B 0x32E5EE0
	0x032E5EDC MOV W22, W31
	0x032E5EE0 MOV W0, W22
	0x032E5EE4 LDP X20, X19, [X31 + 0x40]
	0x032E5EE8 LDP X22, X21, [X31 + 0x30]
	0x032E5EEC LDP X24, X23, [X31 + 0x20]
	0x032E5EF0 LDP X30, X25, [X31 + 0x10]
	0x032E5EF4 ADD X31, X31, 0x50
	0x032E5EF8 RET
	0x032E5EFC BL 0x1C16F20
	0x032E5F00 MOV X0, X24
	0x032E5F04 BL 0x1C16F18
	0x032E5F08 BL 0x1C16F20
	0x032E5F0C B 0x32E5F10
	0x032E5F10 MOV X25, X0
	0x032E5F14 CMP W1, 0x1
	0x032E5F18 B.NE 0x32E5F34
	0x032E5F1C MOV X0, X25
	0x032E5F20 BL 0x3EB1AD0
	0x032E5F24 LDR X24, [X0]
	0x032E5F28 BL 0x3EB1AE0
	0x032E5F2C MOV W25, W31
	0x032E5F30 B 0x32E5E88
	0x032E5F34 MOV X24, X31
	0x032E5F38 B 0x32E5F40
	0x032E5F3C MOV X25, X0
	0x032E5F40 LDR X8, [X31 + 0x8]
	0x032E5F44 CBZ X8, 0x32E5F5C
	0x032E5F48 LDR X0, [X19 + 0x28]
	0x032E5F4C CBNZ X0, 0x32E5F54
	0x032E5F50 BL 0x1C16F20
	0x032E5F54 MOV X1, X31
	0x032E5F58 BL 0x32BFA0C
	0x032E5F5C CBNZ X24, 0x32E5F68
	0x032E5F60 MOV X0, X25
	0x032E5F64 BL 0x1D2C690
	0x032E5F68 MOV X0, X24
	0x032E5F6C BL 0x1C16F18
	0x032E5F70 BL 0x1990590
	0x032E5F74 B 0x32E5F78
	0x032E5F78 SUB X31, X31, 0x60
	0x032E5F7C STP X30, X27, [X31 + 0x10]
	0x032E5F80 STP X26, X25, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W19, W1
	008 Move X20, X0
	009 Call MemoryStream.EnsureNotClosed, X0
	010 Move X0, X20
	011 Call MemoryStream.EnsureWriteable, X0
	012 Move W23, [X20+52]
	013 Move W22, [X20+56]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move W8, [X20+60]
	016 Add W21, W23, 1
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X0, X20
	020 Move W1, W21
	021 Call MemoryStream.EnsureCapacity, X0, X1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {34}
	027 Move W23, [X20+52]
	028 Move W22, [X20+56]
	029 Move X0, [X20+40]
	030 Subtract W2, W23, W22
	031 Move W1, W22
	032 Move X3, X31
	033 Call Array.Clear, X0, X1, X2
	034 Move W23, [X20+52]
	035 Move [X20+56], W21
	036 Move X8, [X20+40]
	037 Add W9, W23, 1
	038 Move [X20+52], W9
	039 Compare X8, 0
	040 JumpIfEqual {52}
	041 Move W9, [X8+24]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Add X8, X8, W23
	044 Move [X8+32], W19
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Return 
	052 Call 0x1C17F20
	053 Call 0x1C17F28

Method: System.Void WriteTo(System.IO.Stream stream)

Disassembly:
	0x032E5F84 STP X24, X23, [X31 + 0x30]
	0x032E5F88 STP X22, X21, [X31 + 0x40]
	0x032E5F8C STP X20, X19, [X31 + 0x50]
	0x032E5F90 ADRP X21, 0x10F7000
	0x032E5F94 LDRB W8, [X21 + 0x9F4]
	0x032E5F98 MOV X20, X2
	0x032E5F9C MOV X24, X1
	0x032E5FA0 MOV X19, X0
	0x032E5FA4 TBNZ X8, 0x0, 0x32E5FC8
	0x032E5FA8 ADRP X0, 0xE41000
	0x032E5FAC LDR X0, [X0 + 0xDD0]
	0x032E5FB0 BL 0x1C16CF4
	0x032E5FB4 ADRP X0, 0xE3D000
	0x032E5FB8 LDR X0, [X0 + 0xAC0]
	0x032E5FBC BL 0x1C16CF4
	0x032E5FC0 MOVZ W8, 0x1
	0x032E5FC4 STRB W8, [X21 + 0x9F4]
	0x032E5FC8 MOV X0, X19
	0x032E5FCC STR X31, [X31 + 0x8]
	0x032E5FD0 BL 0x32EA6DC
	0x032E5FD4 MOV X0, X19
	0x032E5FD8 BL 0x32EA74C
	0x032E5FDC ADD X21, X19, 0x48
	0x032E5FE0 MOV X0, X21
	0x032E5FE4 MOV X1, X31
	0x032E5FE8 BL 0x33EB198
	0x032E5FEC ADD X25, X19, 0x38
	0x032E5FF0 MOV X23, X0
	0x032E5FF4 MOV X0, X25
	0x032E5FF8 MOV X1, X31
	0x032E5FFC BL 0x33EB198
	0x032E6000 ADDS X22, X23, W20, SXTW
	0x032E6004 B.MI 0x32E613C
	0x032E6008 LDR X8, [X19 + 0x40]
	0x032E600C CMP X22, X8
	0x032E6010 B.GT 0x32E616C
	0x032E6014 ADRP X27, 0xE40000
	0x032E6018 LDR X8, [X19 + 0x28]
	0x032E601C LDR X27, [X27 + 0xDD0]
	0x032E6020 CBNZ X8, 0x32E6058

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {21}
	006 Move X19, X1
	007 Move X20, X0
	008 Call MemoryStream.EnsureNotClosed, X0
	009 Move X8, [X19]
	010 Move W2, [X20+48]
	011 Move W9, [X20+56]
	012 Move X1, [X20+40]
	013 Move X5, [X8+904]
	014 Move X4, [X8+912]
	015 Move X0, X19
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Subtract W3, W9, W2
	019 Move X30, [X31+32]
	020 CallNoReturn X5
	021 Move X0, 0xE14000
	022 Move X0, [X0+1320]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X19, X0
	026 Move X0, 0xE3E000
	027 Move X0, [X0+3384]
	028 Call 0x1C17D08
	029 Move X20, X0
	030 Move X0, 0xE41000
	031 Move X0, [X0+488]
	032 Call 0x1C17D08
	033 Move X2, X0
	034 Move X0, X19
	035 Move X1, X20
	036 Move X3, X31
	037 Call ArgumentNullException..ctor, X0, X1, X2
	038 Move X0, 0xE41000
	039 Move X0, [X0+3464]
	040 Call 0x1C17D08
	041 Move X1, X0
	042 Move X0, X19
	043 Call 0x1C17DEC

