Type: System.IO.MonoIO

Method: System.Exception GetException(System.IO.MonoIOError error)

Disassembly:
	0x032FDC14 LDR X8, [X22]
	0x032FDC18 MOV W21, W0
	0x032FDC1C LDR W9, [X8 + 0xE0]
	0x032FDC20 CBNZ W9, 0x32FDC2C
	0x032FDC24 MOV X0, X8
	0x032FDC28 BL 0x1C16DFC
	0x032FDC2C MOV W0, W21
	0x032FDC30 BL 0x32F4A0C
	0x032FDC34 TBZ X0, 0x0, 0x32FDC78
	0x032FDC38 MOVZ W1, 0x1
	0x032FDC3C MOV X0, X19
	0x032FDC40 MOV X2, X31
	0x032FDC44 BL 0x3222A1C
	0x032FDC48 LDR X8, [X22]
	0x032FDC4C MOV W21, W0
	0x032FDC50 LDR W9, [X8 + 0xE0]
	0x032FDC54 CBNZ W9, 0x32FDC60
	0x032FDC58 MOV X0, X8
	0x032FDC5C BL 0x1C16DFC
	0x032FDC60 MOV W0, W21
	0x032FDC64 BL 0x32F4A0C
	0x032FDC68 TBZ X0, 0x0, 0x32FDC78
	0x032FDC6C MOVZ W23, 0x3
	0x032FDC70 MOVZ W24, 0x1
	0x032FDC74 B 0x32FDC80
	0x032FDC78 MOV W24, W31
	0x032FDC7C MOV W23, W31
	0x032FDC80 CBZ X20, 0x32FDEAC
	0x032FDC84 LDR X8, [X20 + 0x18]
	0x032FDC88 CMP W8, 0x1
	0x032FDC8C B.LT 0x32FDDA0
	0x032FDC90 ADRP X27, 0xDF8000
	0x032FDC94 ADRP X28, 0xDFF000
	0x032FDC98 LDR X27, [X27 + 0x1F8]
	0x032FDC9C LDR X28, [X28 + 0x790]
	0x032FDCA0 MOV W21, W31
	0x032FDCA4 MOV X25, X31
	0x032FDCA8 ADD X26, X20, 0x20
	0x032FDCAC MOV X0, X31
	0x032FDCB0 BL 0x33C1A14
	0x032FDCB4 TBZ X0, 0x0, 0x32FDCE4
	0x032FDCB8 LDR W8, [X20 + 0x18]
	0x032FDCBC CMP X25, X8
	0x032FDCC0 B.CS 0x32FDEA8
	0x032FDCC4 LDR X0, [X26, X25, LSL #3]
	0x032FDCC8 CBZ X0, 0x32FDEAC
	0x032FDCCC MOV X1, X31
	0x032FDCD0 BL 0x322BC30
	0x032FDCD4 LDR W8, [X20 + 0x18]
	0x032FDCD8 CMP X25, X8
	0x032FDCDC B.CS 0x32FDEA8
	0x032FDCE0 STR X0, [X26, X25, LSL #3]
	0x032FDCE4 CMP X25, 0x2
	0x032FDCE8 CSET W8, EQ
	0x032FDCEC AND W8, W8, W24, 0x0
	0x032FDCF0 TBNZ X8, 0x0, 0x32FDD18
	0x032FDCF4 LDR W8, [X20 + 0x18]
	0x032FDCF8 CMP X25, X8
	0x032FDCFC B.CS 0x32FDEA8
	0x032FDD00 LDR X0, [X26, X25, LSL #3]
	0x032FDD04 LDR X1, [X28]
	0x032FDD08 MOV X2, X31
	0x032FDD0C BL 0x321BA08
	0x032FDD10 TBNZ X0, 0x0, 0x32FDD84
	0x032FDD14 CBZ X25, 0x32FDD98
	0x032FDD18 LDR W8, [X20 + 0x18]
	0x032FDD1C CMP X25, X8
	0x032FDD20 B.CS 0x32FDEA8
	0x032FDD24 LDR X9, [X26, X25, LSL #3]
	0x032FDD28 CBZ X9, 0x32FDEAC
	0x032FDD2C LDR W9, [X9 + 0x10]
	0x032FDD30 CBZ W9, 0x32FDD84
	0x032FDD34 CMP X25, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10E0000
	005 Move W8, [X20+2701]
	006 Move W19, W0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {31}
	011 Move X0, 0xE25000
	012 Move X0, [X0+1960]
	013 Call 0x1C17CF4
	014 Move X0, 0xE25000
	015 Move X0, [X0+4008]
	016 Call 0x1C17CF4
	017 Move X0, 0xDF9000
	018 Move X0, [X0+632]
	019 Call 0x1C17CF4
	020 Move X0, 0xE25000
	021 Move X0, [X0+1976]
	022 Call 0x1C17CF4
	023 Move X0, 0xE2B000
	024 Move X0, [X0+1736]
	025 Call 0x1C17CF4
	026 Move X0, 0xE25000
	027 Move X0, [X0+2016]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+2701], W8
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, 0xE25000
	034 Move X8, [X8+1976]
	035 Move X0, [X8]
	036 Call 0x1C17F10
	037 Move X8, 0xE25000
	038 Move X8, [X8+2016]
	039 Move X2, X31
	040 Move X19, X0
	041 Move X1, [X8]
	042 Call UnauthorizedAccessException..ctor, X0, X1
	043 Move X8, 0xE25000
	044 Move X8, [X8+1960]
	045 Move X0, [X8]
	046 Call 0x1C17F10
	047 Move X8, 0xE2B000
	048 Move X8, [X8+1736]
	049 Move W2, 80
	050 NotImplemented "Instruction MOVK not yet implemented."
	051 Move X3, X31
	052 Move X1, [X8]
	053 Move X19, X0
	054 Call IOException..ctor, X0, X1, X2
	055 Move X0, X19
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Return X0
	060 Move X8, 0xDF9000
	061 Move X8, [X8+632]
	062 Move X9, 0xE25000
	063 Move X8, [X8]
	064 Move X9, [X9+4008]
	065 Move X8, [X8+184]
	066 Move X0, [X9]
	067 Move X20, [X8]
	068 Move W9, [X0+224]
	069 Compare W9, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X20
	073 Move W1, W19
	074 Move X20, [X31+16]
	075 Move X19, [X31+24]
	076 Move X30, [X31+32]
	077 Call MonoIO.GetException, X0, X1
	078 Return X0

Method: System.Exception GetException(System.String path, System.IO.MonoIOError error)

Disassembly:
	0x032FA334 BL 0x1C16D08
	0x032FA338 BL 0x19903D0
	0x032FA33C MOV X0, X20
	0x032FA340 MOV W1, W19
	0x032FA344 BL 0x32F9334
	0x032FA348 MOV X19, X0
	0x032FA34C B 0x32FA3D0
	0x032FA350 LDR X8, [X19 + 0x68]
	0x032FA354 LDRSW X9, [X19 + 0x64]
	0x032FA358 ADD X0, X8, X9
	0x032FA35C LDP X20, X19, [X31 + 0x10]
	0x032FA360 LDR X30, [X31], #0x20
	0x032FA364 RET
	0x032FA368 BL 0x1C16F20
	0x032FA36C ADRP X0, 0xE22000
	0x032FA370 LDR X0, [X0 + 0x4B8]
	0x032FA374 BL 0x1C16D08
	0x032FA378 BL 0x1C16F10
	0x032FA37C MOV X19, X0
	0x032FA380 ADRP X0, 0xE2D000
	0x032FA384 LDR X0, [X0 + 0x570]
	0x032FA388 BL 0x1C16D08
	0x032FA38C MOV X1, X0
	0x032FA390 MOV X0, X19
	0x032FA394 MOV X2, X31
	0x032FA398 BL 0x338C448
	0x032FA39C B 0x32FA3D0
	0x032FA3A0 ADRP X0, 0xDF9000
	0x032FA3A4 LDR X0, [X0 + 0xB40]
	0x032FA3A8 BL 0x1C16D08
	0x032FA3AC BL 0x1C16F10
	0x032FA3B0 MOV X19, X0
	0x032FA3B4 ADRP X0, 0xE2D000
	0x032FA3B8 LDR X0, [X0 + 0x578]
	0x032FA3BC BL 0x1C16D08
	0x032FA3C0 MOV X1, X0
	0x032FA3C4 MOV X0, X19
	0x032FA3C8 MOV X2, X31
	0x032FA3CC BL 0x3379A44
	0x032FA3D0 ADRP X0, 0xE2D000
	0x032FA3D4 LDR X0, [X0 + 0x588]
	0x032FA3D8 BL 0x1C16D08
	0x032FA3DC MOV X1, X0
	0x032FA3E0 MOV X0, X19
	0x032FA3E4 BL 0x1C16DEC
	0x032FA3E8 STR X30, [X31 - 0x20]!
	0x032FA3EC STP X20, X19, [X31 + 0x10]
	0x032FA3F0 TBNZ X1, 0x0, 0x32FA410
	0x032FA3F4 LDR X8, [X0]
	0x032FA3F8 LDP X20, X19, [X31 + 0x10]
	0x032FA3FC MOV W2, W31
	0x032FA400 LDR X4, [X8 + 0x338]
	0x032FA404 LDR X3, [X8 + 0x340]
	0x032FA408 LDR X30, [X31], #0x20
	0x032FA40C BR X4
	0x032FA410 ADRP X0, 0xE21000
	0x032FA414 LDR X0, [X0 + 0x670]
	0x032FA418 BL 0x1C16D08
	0x032FA41C MOV X1, X31
	0x032FA420 BL 0x33BDD84
	0x032FA424 MOV X19, X0
	0x032FA428 ADRP X0, 0xE01000
	0x032FA42C LDR X0, [X0 + 0x760]
	0x032FA430 BL 0x1C16D08
	0x032FA434 BL 0x1C16F10
	0x032FA438 MOV X20, X0
	0x032FA43C ADRP X0, 0xE03000
	0x032FA440 LDR X0, [X0 + 0xEC8]
	0x032FA444 BL 0x1C16D08
	0x032FA448 MOV X1, X0
	0x032FA44C MOV X0, X20
	0x032FA450 MOV X2, X19
	0x032FA454 MOV X3, X31
	0x032FA458 BL 0x3311888
	0x032FA45C ADRP X0, 0xE2D000
	0x032FA460 LDR X0, [X0 + 0x590]
	0x032FA464 BL 0x1C16D08
	0x032FA468 MOV X1, X0
	0x032FA46C MOV X0, X20
	0x032FA470 BL 0x1C16DEC
	0x032FA474 STP X30, X19, [X31 - 0x10]!
	0x032FA478 LDRB W8, [X0 + 0x40]
	0x032FA47C MOV X19, X0
	0x032FA480 CBNZ W8, 0x32FA4A4
	0x032FA484 MOVZ W8, 0x1
	0x032FA488 MOV X0, X19
	0x032FA48C STRB W8, [X19 + 0x40]
	0x032FA490 BL 0x32FA4B0
	0x032FA494 MOVZ W2, 0x1
	0x032FA498 MOV X0, X19
	0x032FA49C MOV W1, W31
	0x032FA4A0 BL 0x32F9BB0
	0x032FA4A4 LDR X0, [X19 + 0x38]
	0x032FA4A8 LDP X30, X19, [X31], #0x10
	0x032FA4AC RET
	0x032FA4B0 SUB X31, X31, 0x50
	0x032FA4B4 STP X30, X25, [X31 + 0x10]
	0x032FA4B8 STP X24, X23, [X31 + 0x20]
	0x032FA4BC STP X22, X21, [X31 + 0x30]
	0x032FA4C0 STP X20, X19, [X31 + 0x40]
	0x032FA4C4 ADRP X20, 0x10E2000
	0x032FA4C8 LDRB W8, [X20 + 0xA83]
	0x032FA4CC MOV X19, X0
	0x032FA4D0 TBNZ X8, 0x0, 0x32FA4E8
	0x032FA4D4 ADRP X0, 0xE27000
	0x032FA4D8 LDR X0, [X0 + 0xFA8]
	0x032FA4DC BL 0x1C16CF4
	0x032FA4E0 MOVZ W8, 0x1
	0x032FA4E4 STRB W8, [X20 + 0xA83]
	0x032FA4E8 STR W31, [X31 + 0xC]
	0x032FA4EC LDRB W8, [X19 + 0x58]
	0x032FA4F0 CBZ W8, 0x32FA5B8
	0x032FA4F4 LDR X8, [X19]
	0x032FA4F8 MOV X0, X19
	0x032FA4FC LDP X9, X1, [X8 + 0x1B8]
	0x032FA500 BLR X9
	0x032FA504 TBZ X0, 0x0, 0x32FA54C
	0x032FA508 LDRB W8, [X19 + 0x40]
	0x032FA50C CBNZ W8, 0x32FA54C
	0x032FA510 ADRP X8, 0xE27000
	0x032FA514 LDR X8, [X8 + 0xFA8]
	0x032FA518 LDR X20, [X19 + 0x38]
	0x032FA51C LDR X21, [X19 + 0x68]
	0x032FA520 LDR X0, [X8]
	0x032FA524 LDR W8, [X0 + 0xE0]
	0x032FA528 CBNZ W8, 0x32FA530
	0x032FA52C BL 0x1C16DFC
	0x032FA530 ADD X3, X31, 0xC
	0x032FA534 MOV X0, X20
	0x032FA538 MOV X1, X21
	0x032FA53C MOV W2, W31
	0x032FA540 BL 0x32F9E5C
	0x032FA544 LDR W8, [X31 + 0xC]
	0x032FA548 CBNZ W8, 0x32FA5E4
	0x032FA54C LDR W21, [X19 + 0x60]
	0x032FA550 CMP W21, 0x1
	0x032FA554 B.LT 0x32FA5B8
	0x032FA558 ADRP X24, 0xE27000
	0x032FA55C LDR X24, [X24 + 0xFA8]
	0x032FA560 MOV W20, W31
	0x032FA564 MOV W25, W21
	0x032FA568 LDR X0, [X24]
	0x032FA56C LDR X22, [X19 + 0x38]
	0x032FA570 LDR X23, [X19 + 0x28]
	0x032FA574 LDR W8, [X0 + 0xE0]
	0x032FA578 CBNZ W8, 0x32FA580
	0x032FA57C BL 0x1C16DFC
	0x032FA580 ADD X4, X31, 0xC
	0x032FA584 MOV X0, X22
	0x032FA588 MOV X1, X23
	0x032FA58C MOV W2, W20
	0x032FA590 MOV W3, W21
	0x032FA594 BL 0x32FB6EC
	0x032FA598 LDR W8, [X31 + 0xC]
	0x032FA59C CBNZ W8, 0x32FA5E4
	0x032FA5A0 SUB W25, W25, W0
	0x032FA5A4 CMP W25, 0x1
	0x032FA5A8 B.LT 0x32FA5B8
	0x032FA5AC LDR W21, [X19 + 0x60]
	0x032FA5B0 ADD W20, W0, W20
	0x032FA5B4 B 0x32FA568
	0x032FA5B8 LDR X8, [X19 + 0x68]
	0x032FA5BC LDRSW X9, [X19 + 0x64]
	0x032FA5C0 STRB W31, [X19 + 0x58]
	0x032FA5C4 LDP X22, X21, [X31 + 0x30]
	0x032FA5C8 LDP X24, X23, [X31 + 0x20]
	0x032FA5CC ADD X8, X8, X9
	0x032FA5D0 STP X31, X8, [X19 + 0x60]
	0x032FA5D4 LDP X20, X19, [X31 + 0x40]
	0x032FA5D8 LDP X30, X25, [X31 + 0x10]
	0x032FA5DC ADD X31, X31, 0x50
	0x032FA5E0 RET
	0x032FA5E4 LDR X1, [X19 + 0x30]
	0x032FA5E8 MOV X0, X19
	0x032FA5EC BL 0x32F92BC
	0x032FA5F0 MOV X20, X0
	0x032FA5F4 ADRP X0, 0xE27000
	0x032FA5F8 LDR W19, [X31 + 0xC]
	0x032FA5FC LDR X0, [X0 + 0xFA8]
	0x032FA600 BL 0x1C16D08
	0x032FA604 BL 0x19903D0
	0x032FA608 MOV X0, X20
	0x032FA60C MOV W1, W19
	0x032FA610 BL 0x32F9334
	0x032FA614 MOV X19, X0
	0x032FA618 ADRP X0, 0xE2D000
	0x032FA61C LDR X0, [X0 + 0x598]
	0x032FA620 BL 0x1C16D08
	0x032FA624 MOV X1, X0
	0x032FA628 MOV X0, X19
	0x032FA62C BL 0x1C16DEC
	0x032FA630 STP X30, X19, [X31 - 0x10]!
	0x032FA634 MOV X19, X0
	0x032FA638 LDR X0, [X0 + 0x38]
	0x032FA63C CBZ X0, 0x32FA6EC
	0x032FA640 MOV X1, X31
	0x032FA644 BL 0x32C02A8
	0x032FA648 TBNZ X0, 0x0, 0x32FA6F0
	0x032FA64C LDR X8, [X19]
	0x032FA650 MOV X0, X19
	0x032FA654 LDP X9, X1, [X8 + 0x1A8]
	0x032FA658 BLR X9
	0x032FA65C TBZ X0, 0x0, 0x32FA724
	0x032FA660 LDR W8, [X19 + 0x5C]
	0x032FA664 CBZ W8, 0x32FA6AC
	0x032FA668 LDP W9, W8, [X19 + 0x60]
	0x032FA66C CMP W8, W9
	0x032FA670 B.LT 0x32FA688
	0x032FA674 MOV X0, X19
	0x032FA678 BL 0x32FA890
	0x032FA67C LDR W8, [X19 + 0x60]
	0x032FA680 CBZ W8, 0x32FA6E0
	0x032FA684 LDR W8, [X19 + 0x64]
	0x032FA688 LDR X9, [X19 + 0x28]
	0x032FA68C ADD W10, W8, 0x1
	0x032FA690 STR W10, [X19 + 0x64]
	0x032FA694 CBZ X9, 0x32FA6EC
	0x032FA698 LDR W10, [X9 + 0x18]
	0x032FA69C CMP W8, W10
	0x032FA6A0 B.CS 0x32FA76C
	0x032FA6A4 ADD X8, X9, W8, SXTW
	0x032FA6A8 B 0x32FA6D8
	0x032FA6AC LDR X1, [X19 + 0x38]
	0x032FA6B0 LDR X2, [X19 + 0x28]
	0x032FA6B4 MOVZ W4, 0x1
	0x032FA6B8 MOV X0, X19
	0x032FA6BC MOV W3, W31
	0x032FA6C0 BL 0x32FA770
	0x032FA6C4 CBZ W0, 0x32FA6E0
	0x032FA6C8 LDR X8, [X19 + 0x28]
	0x032FA6CC CBZ X8, 0x32FA6EC
	0x032FA6D0 LDR W9, [X8 + 0x18]
	0x032FA6D4 CBZ W9, 0x32FA76C
	0x032FA6D8 LDRB W0, [X8 + 0x20]
	0x032FA6DC B 0x32FA6E4
	0x032FA6E0 MOVN W0, 0x0
	0x032FA6E4 LDP X30, X19, [X31], #0x10
	0x032FA6E8 RET
	0x032FA6EC BL 0x1C16F20
	0x032FA6F0 ADRP X0, 0xE22000
	0x032FA6F4 LDR X0, [X0 + 0x4B8]
	0x032FA6F8 BL 0x1C16D08
	0x032FA6FC BL 0x1C16F10
	0x032FA700 MOV X19, X0
	0x032FA704 ADRP X0, 0xE2D000
	0x032FA708 LDR X0, [X0 + 0x570]
	0x032FA70C BL 0x1C16D08
	0x032FA710 MOV X1, X0
	0x032FA714 MOV X0, X19
	0x032FA718 MOV X2, X31
	0x032FA71C BL 0x338C448
	0x032FA720 B 0x32FA754
	0x032FA724 ADRP X0, 0xDF9000
	0x032FA728 LDR X0, [X0 + 0xB40]
	0x032FA72C BL 0x1C16D08
	0x032FA730 BL 0x1C16F10
	0x032FA734 MOV X19, X0
	0x032FA738 ADRP X0, 0xE2D000
	0x032FA73C LDR X0, [X0 + 0x5A0]
	0x032FA740 BL 0x1C16D08
	0x032FA744 MOV X1, X0
	0x032FA748 MOV X0, X19
	0x032FA74C MOV X2, X31
	0x032FA750 BL 0x3379A44
	0x032FA754 ADRP X0, 0xE2D000
	0x032FA758 LDR X0, [X0 + 0x5A8]
	0x032FA75C BL 0x1C16D08
	0x032FA760 MOV X1, X0
	0x032FA764 MOV X0, X19
	0x032FA768 BL 0x1C16DEC
	0x032FA76C BL 0x1C16F28
	0x032FA770 SUB X31, X31, 0x50
	0x032FA774 STP X30, X25, [X31 + 0x10]
	0x032FA778 STP X24, X23, [X31 + 0x20]
	0x032FA77C STP X22, X21, [X31 + 0x30]
	0x032FA780 STP X20, X19, [X31 + 0x40]
	0x032FA784 ADRP X25, 0x10E2000
	0x032FA788 ADRP X24, 0xE27000
	0x032FA78C LDRB W8, [X25 + 0xA84]
	0x032FA790 LDR X24, [X24 + 0xFA8]
	0x032FA794 MOV W20, W4
	0x032FA798 MOV W21, W3
	0x032FA79C MOV X22, X2
	0x032FA7A0 MOV X23, X1
	0x032FA7A4 MOV X19, X0
	0x032FA7A8 TBNZ X8, 0x0, 0x32FA7C0
	0x032FA7AC ADRP X0, 0xE27000
	0x032FA7B0 LDR X0, [X0 + 0xFA8]
	0x032FA7B4 BL 0x1C16CF4
	0x032FA7B8 MOVZ W8, 0x1
	0x032FA7BC STRB W8, [X25 + 0xA84]
	0x032FA7C0 LDR X0, [X24]
	0x032FA7C4 STR W31, [X31 + 0xC]
	0x032FA7C8 LDR W8, [X0 + 0xE0]
	0x032FA7CC CBNZ W8, 0x32FA7D4
	0x032FA7D0 BL 0x1C16DFC
	0x032FA7D4 ADD X4, X31, 0xC
	0x032FA7D8 MOV X0, X23
	0x032FA7DC MOV X1, X22
	0x032FA7E0 MOV W2, W21
	0x032FA7E4 MOV W3, W20
	0x032FA7E8 BL 0x32FC970
	0x032FA7EC LDR W8, [X31 + 0xC]
	0x032FA7F0 CBZ W8, 0x32FA804
	0x032FA7F4 CMP W8, 0x6D
	0x032FA7F8 B.NE 0x32FA824
	0x032FA7FC MOV W0, W31
	0x032FA800 B 0x32FA80C
	0x032FA804 ADDS W31, W0, 0x1
	0x032FA808 B.EQ 0x32FA85C
	0x032FA80C LDP X20, X19, [X31 + 0x40]
	0x032FA810 LDP X22, X21, [X31 + 0x30]
	0x032FA814 LDP X24, X23, [X31 + 0x20]
	0x032FA818 LDP X30, X25, [X31 + 0x10]
	0x032FA81C ADD X31, X31, 0x50
	0x032FA820 RET
	0x032FA824 LDR X1, [X19 + 0x30]
	0x032FA828 MOV X0, X19
	0x032FA82C BL 0x32F92BC
	0x032FA830 MOV X20, X0
	0x032FA834 ADRP X0, 0xE27000
	0x032FA838 LDR W19, [X31 + 0xC]
	0x032FA83C LDR X0, [X0 + 0xFA8]
	0x032FA840 BL 0x1C16D08
	0x032FA844 BL 0x19903D0
	0x032FA848 MOV X0, X20
	0x032FA84C MOV W1, W19
	0x032FA850 BL 0x32F9334
	0x032FA854 MOV X19, X0
	0x032FA858 B 0x32FA878
	0x032FA85C ADRP X0, 0xE27000
	0x032FA860 LDR X0, [X0 + 0x7A8]
	0x032FA864 BL 0x1C16D08
	0x032FA868 BL 0x1C16F10
	0x032FA86C MOV X1, X31
	0x032FA870 MOV X19, X0
	0x032FA874 BL 0x32E230C
	0x032FA878 ADRP X0, 0xE2D000
	0x032FA87C LDR X0, [X0 + 0x5B0]
	0x032FA880 BL 0x1C16D08
	0x032FA884 MOV X1, X0
	0x032FA888 MOV X0, X19
	0x032FA88C BL 0x1C16DEC
	0x032FA890 STP X30, X19, [X31 - 0x10]!
	0x032FA894 MOV X19, X0
	0x032FA898 BL 0x32FA4B0
	0x032FA89C LDR X1, [X19 + 0x38]
	0x032FA8A0 LDR X2, [X19 + 0x28]
	0x032FA8A4 LDR W4, [X19 + 0x5C]
	0x032FA8A8 MOV X0, X19
	0x032FA8AC MOV W3, W31
	0x032FA8B0 BL 0x32FA770
	0x032FA8B4 STR W0, [X19 + 0x60]
	0x032FA8B8 LDP X30, X19, [X31], #0x10
	0x032FA8BC RET
	0x032FA8C0 STR X30, [X31 - 0x20]!
	0x032FA8C4 STP X20, X19, [X31 + 0x10]
	0x032FA8C8 MOV X19, X0
	0x032FA8CC LDR X0, [X0 + 0x38]
	0x032FA8D0 CBZ X0, 0x32FA990
	0x032FA8D4 MOV W20, W1
	0x032FA8D8 MOV X1, X31
	0x032FA8DC BL 0x32C02A8
	0x032FA8E0 TBNZ X0, 0x0, 0x32FA994
	0x032FA8E4 LDR X8, [X19]
	0x032FA8E8 MOV X0, X19
	0x032FA8EC LDP X9, X1, [X8 + 0x1D8]
	0x032FA8F0 BLR X9
	0x032FA8F4 TBZ X0, 0x0, 0x32FA9C8
	0x032FA8F8 LDR W8, [X19 + 0x64]
	0x032FA8FC LDR W9, [X19 + 0x5C]
	0x032FA900 CMP W8, W9
	0x032FA904 B.NE 0x32FA914
	0x032FA908 MOV X0, X19
	0x032FA90C BL 0x32FA4B0
	0x032FA910 LDR W9, [X19 + 0x5C]
	0x032FA914 LDR X8, [X19 + 0x28]
	0x032FA918 CBZ W9, 0x32FA964
	0x032FA91C LDRSW X9, [X19 + 0x64]
	0x032FA920 ADD W10, W9, 0x1
	0x032FA924 STR W10, [X19 + 0x64]
	0x032FA928 CBZ X8, 0x32FA990
	0x032FA92C LDR W10, [X8 + 0x18]
	0x032FA930 CMP W9, W10
	0x032FA934 B.CS 0x32FAA10
	0x032FA938 ADD X8, X8, X9
	0x032FA93C STRB W20, [X8 + 0x20]
	0x032FA940 LDP W9, W8, [X19 + 0x60]
	0x032FA944 CMP W8, W9
	0x032FA948 B.LE 0x32FA950
	0x032FA94C STR W8, [X19 + 0x60]
	0x032FA950 MOVZ W8, 0x1
	0x032FA954 STRB W8, [X19 + 0x58]
	0x032FA958 LDP X20, X19, [X31 + 0x10]
	0x032FA95C LDR X30, [X31], #0x20
	0x032FA960 RET
	0x032FA964 CBZ X8, 0x32FA990
	0x032FA968 LDR W9, [X8 + 0x18]
	0x032FA96C CBZ W9, 0x32FAA10
	0x032FA970 STRB W20, [X8 + 0x20]
	0x032FA974 MOVZ W8, 0x1
	0x032FA978 STRB W8, [X19 + 0x58]
	0x032FA97C STR W8, [X19 + 0x60]
	0x032FA980 MOV X0, X19
	0x032FA984 LDP X20, X19, [X31 + 0x10]
	0x032FA988 LDR X30, [X31], #0x20
	0x032FA98C B 0x32FA4B0
	0x032FA990 BL 0x1C16F20
	0x032FA994 ADRP X0, 0xE22000
	0x032FA998 LDR X0, [X0 + 0x4B8]
	0x032FA99C BL 0x1C16D08
	0x032FA9A0 BL 0x1C16F10
	0x032FA9A4 MOV X19, X0
	0x032FA9A8 ADRP X0, 0xE2D000
	0x032FA9AC LDR X0, [X0 + 0x570]
	0x032FA9B0 BL 0x1C16D08
	0x032FA9B4 MOV X1, X0
	0x032FA9B8 MOV X0, X19
	0x032FA9BC MOV X2, X31
	0x032FA9C0 BL 0x338C448
	0x032FA9C4 B 0x32FA9F8
	0x032FA9C8 ADRP X0, 0xDF9000
	0x032FA9CC LDR X0, [X0 + 0xB40]
	0x032FA9D0 BL 0x1C16D08
	0x032FA9D4 BL 0x1C16F10
	0x032FA9D8 MOV X19, X0
	0x032FA9DC ADRP X0, 0xE2D000
	0x032FA9E0 LDR X0, [X0 + 0x5B8]
	0x032FA9E4 BL 0x1C16D08
	0x032FA9E8 MOV X1, X0
	0x032FA9EC MOV X0, X19
	0x032FA9F0 MOV X2, X31
	0x032FA9F4 BL 0x3379A44
	0x032FA9F8 ADRP X0, 0xE2D000
	0x032FA9FC LDR X0, [X0 + 0x5C0]
	0x032FAA00 BL 0x1C16D08
	0x032FAA04 MOV X1, X0
	0x032FAA08 MOV X0, X19
	0x032FAA0C BL 0x1C16DEC
	0x032FAA10 BL 0x1C16F28
	0x032FAA14 STR X30, [X31 - 0x30]!
	0x032FAA18 STP X22, X21, [X31 + 0x10]
	0x032FAA1C STP X20, X19, [X31 + 0x20]
	0x032FAA20 MOV X19, X0
	0x032FAA24 LDR X0, [X0 + 0x38]
	0x032FAA28 CBZ X0, 0x32FAAF0
	0x032FAA2C MOV X22, X1
	0x032FAA30 MOV X1, X31
	0x032FAA34 MOV W20, W3
	0x032FAA38 MOV W21, W2
	0x032FAA3C BL 0x32C02A8
	0x032FAA40 TBNZ X0, 0x0, 0x32FAAF4
	0x032FAA44 CBZ X22, 0x32FAB28
	0x032FAA48 LDR X8, [X19]
	0x032FAA4C MOV X0, X19
	0x032FAA50 LDP X9, X1, [X8 + 0x1A8]
	0x032FAA54 BLR X9
	0x032FAA58 TBZ X0, 0x0, 0x32FAB5C
	0x032FAA5C TBNZ X21, 0x1F, 0x32FAB90
	0x032FAA60 TBNZ X20, 0x1F, 0x32FABB0
	0x032FAA64 LDR W8, [X22 + 0x18]
	0x032FAA68 CMP W8, W21
	0x032FAA6C B.LT 0x32FABF8
	0x032FAA70 SUB W8, W8, W20
	0x032FAA74 CMP W8, W21

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x10E3000
	007 Move W8, [X20+2702]
	008 Move W21, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {97}
	014 Move X0, 0xDFA000
	015 Move X0, [X0+2504]
	016 Call 0x1C17CF4
	017 Move X0, 0xE28000
	018 Move X0, [X0+1944]
	019 Call 0x1C17CF4
	020 Move X0, 0xE28000
	021 Move X0, [X0+1952]
	022 Call 0x1C17CF4
	023 Move X0, 0xE28000
	024 Move X0, [X0+1960]
	025 Call 0x1C17CF4
	026 Move X0, 0xE2E000
	027 Move X0, [X0+1224]
	028 Call 0x1C17CF4
	029 Move X0, 0xE28000
	030 Move X0, [X0+4008]
	031 Call 0x1C17CF4
	032 Move X0, 0xE28000
	033 Move X0, [X0+1968]
	034 Call 0x1C17CF4
	035 Move X0, 0xE28000
	036 Move X0, [X0+1976]
	037 Call 0x1C17CF4
	038 Move X0, 0xE2E000
	039 Move X0, [X0+1232]
	040 Call 0x1C17CF4
	041 Move X0, 0xE2E000
	042 Move X0, [X0+1240]
	043 Call 0x1C17CF4
	044 Move X0, 0xE2E000
	045 Move X0, [X0+1248]
	046 Call 0x1C17CF4
	047 Move X0, 0xE2E000
	048 Move X0, [X0+1256]
	049 Call 0x1C17CF4
	050 Move X0, 0xE2E000
	051 Move X0, [X0+1264]
	052 Call 0x1C17CF4
	053 Move X0, 0xE2E000
	054 Move X0, [X0+1272]
	055 Call 0x1C17CF4
	056 Move X0, 0xE2E000
	057 Move X0, [X0+1280]
	058 Call 0x1C17CF4
	059 Move X0, 0xE2E000
	060 Move X0, [X0+1288]
	061 Call 0x1C17CF4
	062 Move X0, 0xE2E000
	063 Move X0, [X0+1296]
	064 Call 0x1C17CF4
	065 Move X0, 0xE2E000
	066 Move X0, [X0+1304]
	067 Call 0x1C17CF4
	068 Move X0, 0xE2E000
	069 Move X0, [X0+1312]
	070 Call 0x1C17CF4
	071 Move X0, 0xE2E000
	072 Move X0, [X0+1320]
	073 Call 0x1C17CF4
	074 Move X0, 0xE2E000
	075 Move X0, [X0+1328]
	076 Call 0x1C17CF4
	077 Move X0, 0xE2E000
	078 Move X0, [X0+1336]
	079 Call 0x1C17CF4
	080 Move X0, 0xE2E000
	081 Move X0, [X0+1344]
	082 Call 0x1C17CF4
	083 Move X0, 0xE2E000
	084 Move X0, [X0+1352]
	085 Call 0x1C17CF4
	086 Move X0, 0xE2E000
	087 Move X0, [X0+1360]
	088 Call 0x1C17CF4
	089 Move X0, 0xE2E000
	090 Move X0, [X0+1368]
	091 Call 0x1C17CF4
	092 Move X0, 0xE2E000
	093 Move X0, [X0+1376]
	094 Call 0x1C17CF4
	095 Move W8, 1
	096 Move [X20+2702], W8
	097 NotImplemented "Instruction CMP not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move W8, 0x1770
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X8, 0xE28000
	104 Move X8, [X8+1960]
	105 Move X0, [X8]
	106 Call 0x1C17F10
	107 Move X8, 0xE2E000
	108 Move X8, [X8+1264]
	109 Move W2, 0x1770
	110 Move X20, X0
	111 NotImplemented "Instruction MOVK not yet implemented."
	112 Move X1, [X8]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X8, 0xE2E000
	119 Move X8, [X8+1240]
	120 Move X1, X19
	121 Move X2, X31
	122 Move X0, [X8]
	123 Call String.Format, X0, X1
	124 Move X8, 0xE28000
	125 Move X8, [X8+1960]
	126 Move X19, X0
	127 Move X8, [X8]
	128 Move X0, X8
	129 Call 0x1C17F10
	130 Move X20, X0
	131 Move W8, 80
	132 NotImplemented "Instruction CMP not yet implemented."
	133 NotImplemented "Instruction CMP not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X8, 0xE2E000
	136 Move X8, [X8+1328]
	137 Move X1, X19
	138 Move X2, X31
	139 Move X0, [X8]
	140 Call String.Format, X0, X1
	141 Move X8, 0xE28000
	142 Move X8, [X8+1960]
	143 Move X19, X0
	144 Move X8, [X8]
	145 Move X0, X8
	146 Call 0x1C17F10
	147 Move X20, X0
	148 Move W8, 145
	149 Subtract W8, W21, 2
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X9, -41299968
	152 Add X9, X9, 1572
	153 NotImplemented "Instruction ADR not yet implemented."
	154 NotImplemented "Instruction LDRH not yet implemented."
	155 Add X10, X10, X11
	156 CallNoReturn X10
	157 Move X8, 0xE2E000
	158 Move X8, [X8+1368]
	159 Move X1, X19
	160 Move X2, X31
	161 Move X0, [X8]
	162 Call String.Format, X0, X1
	163 Move X8, 0xE28000
	164 Move X8, [X8+1952]
	165 Move X21, X0
	166 Move X8, [X8]
	167 Move X0, X8
	168 Call 0x1C17F10
	169 Move X1, X21
	170 Move X2, X19
	171 Move X3, X31
	172 Move X20, X0
	173 Call FileNotFoundException..ctor, X0, X1, X2
	174 NotImplemented "Instruction CMP not yet implemented."
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X8, 0xE2E000
	177 Move X8, [X8+1296]
	178 Move X1, X19
	179 Move X2, X31
	180 Move X0, [X8]
	181 Call String.Format, X0, X1
	182 Move X8, 0xE28000
	183 Move X8, [X8+1960]
	184 Move X19, X0
	185 Move X8, [X8]
	186 Move X0, X8
	187 Call 0x1C17F10
	188 Move W8, 0x80070000
	189 Move X20, X0
	190 Or W2, W8, 32
	191 Move X8, 0xE2E000
	192 Move X8, [X8+1224]
	193 Add X1, X31, 12
	194 Move [X31+12], W21
	195 Move X0, [X8]
	196 Call 0x1C17E04
	197 Move X8, 0xE2E000
	198 Move X8, [X8+1256]
	199 Move X1, X0
	200 Move X2, X19
	201 Move X3, X31
	202 Move X8, [X8]
	203 Move X0, X8
	204 Call String.Format, X0, X1, X2
	205 Move X8, 0xE28000
	206 Move X8, [X8+1960]
	207 Move X19, X0
	208 Move X8, [X8]
	209 Move X0, X8
	210 Call 0x1C17F10
	211 Move W8, 0x80070000
	212 Move X20, X0
	213 Or W2, W21, W8
	214 Move X8, 0xE2E000
	215 Move X8, [X8+1352]
	216 Move X1, X19
	217 Move X2, X31
	218 Move X0, [X8]
	219 Call String.Format, X0, X1
	220 Move X8, 0xE28000
	221 Move X8, [X8+1968]
	222 Move X19, X0
	223 Move X8, [X8]
	224 Move X0, X8
	225 Call 0x1C17F10
	226 Move X1, X19
	227 Move X2, X31
	228 Move X20, X0
	229 Call PathTooLongException..ctor, X0, X1
	230 Move X8, 0xE28000
	231 Move X8, [X8+1960]
	232 Move X0, [X8]
	233 Call 0x1C17F10
	234 Move X8, 0xE2E000
	235 Move X8, [X8+1336]
	236 Move X20, X0
	237 Move X1, [X8]
	238 Move W8, 267
	239 Move X8, 0xE2E000
	240 Move X8, [X8+1280]
	241 Move X1, X19
	242 Move X2, X31
	243 Move X0, [X8]
	244 Call String.Format, X0, X1
	245 Move X8, 0xE28000
	246 Move X8, [X8+1960]
	247 Move X19, X0
	248 Move X8, [X8]
	249 Move X0, X8
	250 Call 0x1C17F10
	251 Move X20, X0
	252 Move W8, 82
	253 Move X8, 0xDFA000
	254 Move X8, [X8+2504]
	255 Move X19, [X8]
	256 Move X8, [X19+56]
	257 Compare X8, 0
	258 JumpIfNotEqual {262}
	259 Move X0, X19
	260 Call 0x1C5D6E0
	261 Move X8, [X19+56]
	262 Move X0, [X8+16]
	263 Move W8, [X0+309]
	264 Move TEMP, X8
	265 And TEMP, TEMP, 1
	266 Compare TEMP, 1
	267 JumpIfEqual {269}
	268 Call 0x1C5D684
	269 Move W8, [X0+224]
	270 Compare W8, 0
	271 JumpIfNotEqual {273}
	272 Call 0x1C17DFC
	273 Move X8, [X19+56]
	274 Move X0, [X8+16]
	275 Move W8, [X0+309]
	276 Move TEMP, X8
	277 And TEMP, TEMP, 1
	278 Compare TEMP, 1
	279 JumpIfEqual {281}
	280 Call 0x1C5D684
	281 Move X9, 0xE2E000
	282 Move X8, [X0+184]
	283 Move X9, [X9+1288]
	284 Move X2, X31
	285 Move X1, [X8]
	286 Move X0, [X9]
	287 Call String.Format, X0, X1
	288 Move X8, 0xE28000
	289 Move X8, [X8+1960]
	290 Move X19, X0
	291 Move X8, [X8]
	292 Move X0, X8
	293 Call 0x1C17F10
	294 Move X20, X0
	295 Move W8, 87
	296 Move X8, 0xE2E000
	297 Move X8, [X8+1360]
	298 Move X1, X19
	299 Move X2, X31
	300 Move X0, [X8]
	301 Call String.Format, X0, X1
	302 Move X8, 0xE28000
	303 Move X8, [X8+1960]
	304 Move X19, X0
	305 Move X8, [X8]
	306 Move X0, X8
	307 Call 0x1C17F10
	308 Move X20, X0
	309 Move W8, 33
	310 Move X8, 0xE2E000
	311 Move X8, [X8+1344]
	312 Move X1, X19
	313 Move X2, X31
	314 Move X0, [X8]
	315 Call String.Format, X0, X1
	316 Move X8, 0xE28000
	317 Move X8, [X8+1960]
	318 Move X19, X0
	319 Move X8, [X8]
	320 Move X0, X8
	321 Call 0x1C17F10
	322 Move X20, X0
	323 Move W8, 39
	324 Move X8, 0xE2E000
	325 Move X8, [X8+1320]
	326 Move X1, X19
	327 Move X2, X31
	328 Move X0, [X8]
	329 Call String.Format, X0, X1
	330 Move X8, 0xE28000
	331 Move X8, [X8+1960]
	332 Move X19, X0
	333 Move X8, [X8]
	334 Move X0, X8
	335 Call 0x1C17F10
	336 Move X20, X0
	337 Move W8, 29
	338 Move W9, 0x80070000
	339 Or W2, W9, W8
	340 Move X1, X19
	341 Move X3, X31
	342 Call IOException..ctor, X0, X1, X2
	343 Move X0, X20
	344 Move X20, [X31+32]
	345 Move X19, [X31+40]
	346 Move X30, [X31+16]
	347 Move X21, [X31+24]
	348 Add X31, X31, 48
	349 Return X0
	350 Move X8, 0xE2E000
	351 Move X8, [X8+1248]
	352 Move X1, X19
	353 Move X2, X31
	354 Move X0, [X8]
	355 Call String.Format, X0, X1
	356 Move X8, 0xE28000
	357 Move X8, [X8+1944]
	358 Move X19, X0
	359 Move X8, [X8]
	360 Move X0, X8
	361 Call 0x1C17F10
	362 Move X1, X19
	363 Move X2, X31
	364 Move X20, X0
	365 Call DirectoryNotFoundException..ctor, X0, X1
	366 Move X19, 0xE28000
	367 Move X19, [X19+4008]
	368 Move X0, [X19]
	369 Move W8, [X0+224]
	370 Compare W8, 0
	371 JumpIfNotEqual {374}
	372 Call 0x1C17DFC
	373 Move X0, [X19]
	374 Move X8, [X0+184]
	375 Move W8, [X8+8]
	376 Compare W8, 0
	377 JumpIfEqual {383}
	378 Move W8, [X0+224]
	379 Compare W8, 0
	380 JumpIfNotEqual {382}
	381 Call 0x1C17DFC
	382 Call 0x1C17CAC
	383 Move X8, 0xE28000
	384 Move X8, [X8+1960]
	385 Move X0, [X8]
	386 Call 0x1C17F10
	387 Move X8, 0xE2E000
	388 Move X8, [X8+1376]
	389 Move X20, X0
	390 Move X1, [X8]
	391 Move W8, 0x80070000
	392 Or W2, W8, 4
	393 Move X8, 0xE2E000
	394 Move X8, [X8+1232]
	395 Move X1, X19
	396 Move X2, X31
	397 Move X0, [X8]
	398 Call String.Format, X0, X1
	399 Move X8, 0xE28000
	400 Move X8, [X8+1976]
	401 Move X19, X0
	402 Move X8, [X8]
	403 Move X0, X8
	404 Call 0x1C17F10
	405 Move X1, X19
	406 Move X2, X31
	407 Move X20, X0
	408 Call UnauthorizedAccessException..ctor, X0, X1
	409 Move X8, 0xE2E000
	410 Move X8, [X8+1272]
	411 Move X1, X19
	412 Move X2, X31
	413 Move X0, [X8]
	414 Call String.Format, X0, X1
	415 Move X8, 0xE28000
	416 Move X8, [X8+1960]
	417 Move X19, X0
	418 Move X8, [X8]
	419 Move X0, X8
	420 Call 0x1C17F10
	421 Move W8, 0x80070000
	422 Move X20, X0
	423 Or W2, W8, 6
	424 Move X8, 0xE2E000
	425 Move X8, [X8+1304]
	426 Move X1, X19
	427 Move X2, X31
	428 Move X0, [X8]
	429 Call String.Format, X0, X1
	430 Move X8, 0xE28000
	431 Move X8, [X8+1960]
	432 Move X19, X0
	433 Move X8, [X8]
	434 Move X0, X8
	435 Call 0x1C17F10
	436 Move W8, 0x80070000
	437 Move X20, X0
	438 Or W2, W8, 15
	439 Move X8, 0xE28000
	440 Move X8, [X8+1960]
	441 Move X0, [X8]
	442 Call 0x1C17F10
	443 Move X8, 0xE2E000
	444 Move X8, [X8+1312]
	445 Move X20, X0
	446 Move X1, [X8]
	447 Move W8, 17
	448 Move W9, 0x80070000
	449 Or W2, W9, W8

Method: System.String GetCurrentDirectory(out System.IO.MonoIOError error)

Disassembly:
	0x032FDD3C LDR X0, [X26, X25, LSL #3]

ISIL:
	001 Call 0x1C293D0
	002 Return X0

Method: System.IO.MonoFileType GetFileType(System.IntPtr handle, out System.IO.MonoIOError error)

Disassembly:
	0x032FDD40 LDR X1, [X27]

ISIL:
	001 Call 0x1C293CC
	002 Return X0

Method: System.IO.MonoFileType GetFileType(System.Runtime.InteropServices.SafeHandle safeHandle, out System.IO.MonoIOError error)

Disassembly:
	0x032FAA78 B.LT 0x32FAC18
	0x032FAA7C LDRB W8, [X19 + 0x55]
	0x032FAA80 CBZ W8, 0x32FAAD0
	0x032FAA84 LDR X8, [X19]
	0x032FAA88 MOV X0, X19
	0x032FAA8C MOV X1, X22
	0x032FAA90 MOV W2, W21
	0x032FAA94 LDR X9, [X8 + 0x2B8]
	0x032FAA98 LDR X6, [X8 + 0x2C0]
	0x032FAA9C MOV W3, W20
	0x032FAAA0 MOV X4, X31
	0x032FAAA4 MOV X5, X31
	0x032FAAA8 BLR X9
	0x032FAAAC LDR X8, [X19]
	0x032FAAB0 MOV X1, X0
	0x032FAAB4 MOV X0, X19
	0x032FAAB8 LDP X20, X19, [X31 + 0x20]
	0x032FAABC LDR X3, [X8 + 0x2C8]
	0x032FAAC0 LDR X2, [X8 + 0x2D0]
	0x032FAAC4 LDP X22, X21, [X31 + 0x10]
	0x032FAAC8 LDR X30, [X31], #0x30
	0x032FAACC BR X3
	0x032FAAD0 MOV X0, X19
	0x032FAAD4 MOV X1, X22
	0x032FAAD8 MOV W2, W21
	0x032FAADC MOV W3, W20
	0x032FAAE0 LDP X20, X19, [X31 + 0x20]
	0x032FAAE4 LDP X22, X21, [X31 + 0x10]
	0x032FAAE8 LDR X30, [X31], #0x30
	0x032FAAEC B 0x32FAC60
	0x032FAAF0 BL 0x1C16F20
	0x032FAAF4 ADRP X0, 0xE22000
	0x032FAAF8 LDR X0, [X0 + 0x4B8]
	0x032FAAFC BL 0x1C16D08
	0x032FAB00 BL 0x1C16F10
	0x032FAB04 MOV X19, X0
	0x032FAB08 ADRP X0, 0xE2D000
	0x032FAB0C LDR X0, [X0 + 0x570]
	0x032FAB10 BL 0x1C16D08
	0x032FAB14 MOV X1, X0
	0x032FAB18 MOV X0, X19
	0x032FAB1C MOV X2, X31
	0x032FAB20 BL 0x338C448
	0x032FAB24 B 0x32FAC48
	0x032FAB28 ADRP X0, 0xDFE000
	0x032FAB2C LDR X0, [X0 + 0x528]
	0x032FAB30 BL 0x1C16D08
	0x032FAB34 BL 0x1C16F10
	0x032FAB38 MOV X19, X0
	0x032FAB3C ADRP X0, 0xE21000
	0x032FAB40 LDR X0, [X0 + 0x640]
	0x032FAB44 BL 0x1C16D08
	0x032FAB48 MOV X1, X0
	0x032FAB4C MOV X0, X19
	0x032FAB50 MOV X2, X31
	0x032FAB54 BL 0x330E100
	0x032FAB58 B 0x32FAC48
	0x032FAB5C ADRP X0, 0xDF9000
	0x032FAB60 LDR X0, [X0 + 0xB40]
	0x032FAB64 BL 0x1C16D08
	0x032FAB68 BL 0x1C16F10
	0x032FAB6C MOV X19, X0
	0x032FAB70 ADRP X0, 0xE2D000
	0x032FAB74 LDR X0, [X0 + 0x5A0]
	0x032FAB78 BL 0x1C16D08
	0x032FAB7C MOV X1, X0
	0x032FAB80 MOV X0, X19
	0x032FAB84 MOV X2, X31
	0x032FAB88 BL 0x3379A44
	0x032FAB8C B 0x32FAC48
	0x032FAB90 ADRP X0, 0xE01000
	0x032FAB94 LDR X0, [X0 + 0x760]
	0x032FAB98 BL 0x1C16D08
	0x032FAB9C BL 0x1C16F10
	0x032FABA0 MOV X19, X0
	0x032FABA4 ADRP X0, 0xE28000
	0x032FABA8 LDR X0, [X0 + 0xD90]
	0x032FABAC B 0x32FABCC

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10E3000
	007 Move W8, [X21+2703]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE28000
	015 Move X0, [X0+4008]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2703], W8
	019 Move [X31+12], W31
	020 Compare X19, 0
	021 JumpIfEqual {54}
	022 Add X1, X31, 12
	023 Move X0, X19
	024 Move X2, X31
	025 Call SafeHandle.DangerousAddRef, X0, X1
	026 Move X8, 0xE28000
	027 Move X8, [X8+4008]
	028 Move X21, [X19+16]
	029 Move X0, [X8]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X21
	035 Move X1, X20
	036 Call 0x1C293CC
	037 Move W8, [X31+12]
	038 Move W21, W0
	039 Compare W8, 0
	040 JumpIfEqual {47}
	041 Move X20, X31
	042 Move X0, X19
	043 Move X1, X31
	044 Call SafeHandle.DangerousRelease, X0
	045 Compare X20, 0
	046 JumpIfNotEqual {70}
	047 Move W0, W21
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X30, [X31+16]
	051 Move X21, [X31+24]
	052 Add X31, X31, 48
	053 Return X0
	054 Call 0x1C17F20
	055 Move X21, X0
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, X21
	058 Call 0x3EB2AD0
	059 Move X20, [X0]
	060 Call 0x3EB2AE0
	061 Move W8, [X31+12]
	062 Compare W8, 0
	063 JumpIfEqual {67}
	064 Compare X19, 0
	065 JumpIfEqual {73}
	066 Move W21, W31
	067 Move W21, W31
	068 Compare X20, 0
	069 JumpIfEqual {47}
	070 Move X0, X20
	071 Call 0x1C17F18
	072 Move X20, X31
	073 Call 0x1C17F20
	074 Move X21, X0
	075 Move W8, [X31+12]
	076 Compare W8, 0
	077 JumpIfEqual {84}
	078 Compare X19, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17F20
	081 Move X0, X19
	082 Move X1, X31
	083 Call SafeHandle.DangerousRelease, X0
	084 Compare X20, 0
	085 JumpIfNotEqual {88}
	086 Move X0, X21
	087 Call 0x1D2D690
	088 Move X0, X20
	089 Call 0x1C17F18
	090 Call 0x1991590

Method: System.IntPtr Open(System.Char* filename, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, System.IO.FileOptions options, out System.IO.MonoIOError error)

Disassembly:
	0x032FDD44 MOV X2, X31

ISIL:
	001 Call 0x1C2933C
	002 Return X0

Method: System.IntPtr Open(System.String filename, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, System.IO.FileOptions options, out System.IO.MonoIOError error)

Disassembly:
	0x032FA220 CBZ X19, 0x32FA244
	0x032FA224 MOV X21, X31
	0x032FA228 B 0x32FA1CC
	0x032FA22C MOV X21, X31
	0x032FA230 CBZ X20, 0x32FA1DC
	0x032FA234 MOV X0, X20
	0x032FA238 BL 0x1C16F18
	0x032FA23C MOV X20, X31
	0x032FA240 B 0x32FA24C
	0x032FA244 BL 0x1C16F20
	0x032FA248 MOV X21, X0
	0x032FA24C LDRB W8, [X31 + 0xC]
	0x032FA250 CBZ W8, 0x32FA268
	0x032FA254 CBNZ X19, 0x32FA25C
	0x032FA258 BL 0x1C16F20
	0x032FA25C MOV X0, X19
	0x032FA260 MOV X1, X31
	0x032FA264 BL 0x32BFAB4
	0x032FA268 CBNZ X20, 0x32FA274
	0x032FA26C MOV X0, X21
	0x032FA270 BL 0x1D2C690
	0x032FA274 MOV X0, X20
	0x032FA278 BL 0x1C16F18
	0x032FA27C BL 0x1990590
	0x032FA280 STR X30, [X31 - 0x20]!
	0x032FA284 STP X20, X19, [X31 + 0x10]
	0x032FA288 ADRP X20, 0x10E2000
	0x032FA28C LDRB W8, [X20 + 0xA79]
	0x032FA290 MOV X19, X0
	0x032FA294 TBNZ X8, 0x0, 0x32FA2AC
	0x032FA298 ADRP X0, 0xE27000
	0x032FA29C LDR X0, [X0 + 0xFA8]
	0x032FA2A0 BL 0x1C16CF4
	0x032FA2A4 MOVZ W8, 0x1
	0x032FA2A8 STRB W8, [X20 + 0xA79]
	0x032FA2AC STR W31, [X31 + 0xC]
	0x032FA2B0 LDR X0, [X19 + 0x38]
	0x032FA2B4 CBZ X0, 0x32FA368
	0x032FA2B8 MOV X1, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x10E3000
	010 Move W8, [X25+2704]
	011 Move X19, X5
	012 Move W20, W4
	013 Move W21, W3
	014 Move W22, W2
	015 Move W23, W1
	016 Move X24, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xE28000
	022 Move X0, [X0+4008]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X25+2704], W8
	026 Move X25, 0xE28000
	027 Move X25, [X25+4008]
	028 Compare X24, 0
	029 JumpIfEqual {33}
	030 Move X0, X31
	031 Call RuntimeHelpers.get_OffsetToStringData
	032 Add X24, X24, W0
	033 Move X0, [X25]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X24
	039 Move W1, W23
	040 Move W2, W22
	041 Move W3, W21
	042 Move W4, W20
	043 Move X5, X19
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Move X25, [X31+72]
	052 Call 0x1C2933C
	053 Return X0

Method: System.Boolean Close(System.IntPtr handle, out System.IO.MonoIOError error)

Disassembly:
	0x032FD8E0 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Call 0x1C291B4
	002 Return X0

Method: System.Int32 Read(System.IntPtr handle, System.Byte[] dest, System.Int32 dest_offset, System.Int32 count, out System.IO.MonoIOError error)

Disassembly:
	0x032FDD48 BL 0x321BA08

ISIL:
	001 Call 0x1C29200
	002 Return X0

Method: System.Int32 Read(System.Runtime.InteropServices.SafeHandle safeHandle, System.Byte[] dest, System.Int32 dest_offset, System.Int32 count, out System.IO.MonoIOError error)

Disassembly:
	0x032FD970 LDR X21, [X8 + 0x10]
	0x032FD974 MOV X3, X31
	0x032FD978 BL 0x3228DE4
	0x032FD97C CBZ X0, 0x32FDA00
	0x032FD980 LDR X8, [X22]
	0x032FD984 MOV X3, X31
	0x032FD988 LDR X8, [X8 + 0xB8]
	0x032FD98C LDRH W1, [X8 + 0x8]
	0x032FD990 LDRH W2, [X8 + 0xA]
	0x032FD994 BL 0x32296D0
	0x032FD998 MOV X2, X0
	0x032FD99C MOV X0, X21
	0x032FD9A0 MOV X1, X21
	0x032FD9A4 LDP X20, X19, [X31 + 0x20]
	0x032FD9A8 LDP X22, X21, [X31 + 0x10]
	0x032FD9AC MOV X3, X31
	0x032FD9B0 LDR X30, [X31], #0x30
	0x032FD9B4 B 0x32274B8
	0x032FD9B8 ADRP X0, 0xDFE000
	0x032FD9BC LDR X0, [X0 + 0x578]
	0x032FD9C0 BL 0x1C16D08
	0x032FD9C4 BL 0x1C16F10
	0x032FD9C8 MOV X19, X0
	0x032FD9CC ADRP X0, 0xE2A000
	0x032FD9D0 LDR X0, [X0 + 0x6F8]
	0x032FD9D4 BL 0x1C16D08
	0x032FD9D8 MOV X1, X0
	0x032FD9DC MOV X0, X19
	0x032FD9E0 MOV X2, X31
	0x032FD9E4 BL 0x3314A68
	0x032FD9E8 ADRP X0, 0xE2A000
	0x032FD9EC LDR X0, [X0 + 0x700]
	0x032FD9F0 BL 0x1C16D08
	0x032FD9F4 MOV X1, X0
	0x032FD9F8 MOV X0, X19
	0x032FD9FC BL 0x1C16DEC
	0x032FDA00 BL 0x1C16F20
	0x032FDA04 SUB X31, X31, 0x30
	0x032FDA08 STP X30, X21, [X31 + 0x10]
	0x032FDA0C STP X20, X19, [X31 + 0x20]
	0x032FDA10 ADRP X20, 0x10DF000
	0x032FDA14 STP X0, X1, [X31]
	0x032FDA18 ADRP X21, 0xE29000
	0x032FDA1C ADRP X19, 0xE1D000
	0x032FDA20 LDRB W8, [X20 + 0xA9A]
	0x032FDA24 LDR X21, [X21 + 0xFD8]
	0x032FDA28 LDR X19, [X19 + 0x1D0]
	0x032FDA2C TBNZ X8, 0x0, 0x32FDA50
	0x032FDA30 ADRP X0, 0xE1D000
	0x032FDA34 LDR X0, [X0 + 0x1D0]
	0x032FDA38 BL 0x1C16CF4
	0x032FDA3C ADRP X0, 0xE29000
	0x032FDA40 LDR X0, [X0 + 0xFD8]
	0x032FDA44 BL 0x1C16CF4
	0x032FDA48 MOVZ W8, 0x1
	0x032FDA4C STRB W8, [X20 + 0xA9A]
	0x032FDA50 LDR X1, [X21]
	0x032FDA54 ADD X0, X31, 0x0
	0x032FDA58 BL 0x25BED38
	0x032FDA5C LDR X8, [X19]
	0x032FDA60 MOV X19, X0
	0x032FDA64 LDR W9, [X8 + 0xE0]
	0x032FDA68 CBNZ W9, 0x32FDA74
	0x032FDA6C MOV X0, X8
	0x032FDA70 BL 0x1C16DFC
	0x032FDA74 MOV X0, X19
	0x032FDA78 BL 0x32EE4AC
	0x032FDA7C ADRP X20, 0x10DF000
	0x032FDA80 LDRB W8, [X20 + 0x3AB]
	0x032FDA84 MOV X19, X0
	0x032FDA88 CBZ W8, 0x32FDAA4
	0x032FDA8C CBZ X19, 0x32FDABC
	0x032FDA90 MOV X0, X19
	0x032FDA94 MOV X1, X31
	0x032FDA98 BL 0x3225708
	0x032FDA9C LDR W1, [X19 + 0x10]
	0x032FDAA0 B 0x32FDAC4
	0x032FDAA4 ADRP X0, 0xE1D000
	0x032FDAA8 LDR X0, [X0 + 0x290]
	0x032FDAAC BL 0x1C16CF4
	0x032FDAB0 MOVZ W8, 0x1
	0x032FDAB4 STRB W8, [X20 + 0x3AB]
	0x032FDAB8 CBNZ X19, 0x32FDA90
	0x032FDABC MOV X0, X31
	0x032FDAC0 MOV X1, X31
	0x032FDAC4 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x10E0000
	009 Move W8, [X24+2705]
	010 Move X20, X4
	011 Move W21, W3
	012 Move W22, W2
	013 Move X23, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xE25000
	020 Move X0, [X0+4008]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+2705], W8
	024 Move [X31+12], W31
	025 Compare X19, 0
	026 JumpIfEqual {64}
	027 Add X1, X31, 12
	028 Move X0, X19
	029 Move X2, X31
	030 Call SafeHandle.DangerousAddRef, X0, X1
	031 Move X8, 0xE25000
	032 Move X8, [X8+4008]
	033 Move X24, [X19+16]
	034 Move X0, [X8]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X24
	040 Move X1, X23
	041 Move W2, W22
	042 Move W3, W21
	043 Move X4, X20
	044 Call 0x1C29200
	045 Move W8, [X31+12]
	046 Move W21, W0
	047 Compare W8, 0
	048 JumpIfEqual {55}
	049 Move X20, X31
	050 Move X0, X19
	051 Move X1, X31
	052 Call SafeHandle.DangerousRelease, X0
	053 Compare X20, 0
	054 JumpIfNotEqual {80}
	055 Move W0, W21
	056 Move X20, [X31+48]
	057 Move X19, [X31+56]
	058 Move X22, [X31+32]
	059 Move X21, [X31+40]
	060 Move X24, [X31+16]
	061 Move X23, [X31+24]
	062 Move X30, [X31+64]
	063 Return X0
	064 Call 0x1C17F20
	065 Move X21, X0
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, X21
	068 Call 0x3EB2AD0
	069 Move X20, [X0]
	070 Call 0x3EB2AE0
	071 Move W8, [X31+12]
	072 Compare W8, 0
	073 JumpIfEqual {77}
	074 Compare X19, 0
	075 JumpIfEqual {83}
	076 Move W21, W31
	077 Move W21, W31
	078 Compare X20, 0
	079 JumpIfEqual {55}
	080 Move X0, X20
	081 Call 0x1C17F18
	082 Move X20, X31
	083 Call 0x1C17F20
	084 Move X21, X0
	085 Move W8, [X31+12]
	086 Compare W8, 0
	087 JumpIfEqual {94}
	088 Compare X19, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17F20
	091 Move X0, X19
	092 Move X1, X31
	093 Call SafeHandle.DangerousRelease, X0
	094 Compare X20, 0
	095 JumpIfNotEqual {98}
	096 Move X0, X21
	097 Call 0x1D2D690
	098 Move X0, X20
	099 Call 0x1C17F18
	100 Call 0x1991590

Method: System.Int32 Write(System.IntPtr handle, in System.Byte[] src, System.Int32 src_offset, System.Int32 count, out System.IO.MonoIOError error)

Disassembly:
	0x032FDD4C TBZ X0, 0x0, 0x32FDD60

ISIL:
	001 Call 0x1C29298
	002 Return X0

Method: System.Int32 Write(System.Runtime.InteropServices.SafeHandle safeHandle, System.Byte[] src, System.Int32 src_offset, System.Int32 count, out System.IO.MonoIOError error)

Disassembly:
	0x032FC6EC BL 0x33B3E9C
	0x032FC6F0 CBNZ X20, 0x32FC7A8
	0x032FC6F4 LDP X20, X19, [X31 + 0x30]
	0x032FC6F8 LDP X22, X21, [X31 + 0x20]
	0x032FC6FC LDP X30, X23, [X31 + 0x10]
	0x032FC700 ADD X31, X31, 0x40
	0x032FC704 RET
	0x032FC708 LDR W9, [X0 + 0xE0]
	0x032FC70C CBNZ W9, 0x32FC71C
	0x032FC710 BL 0x1C16DFC
	0x032FC714 LDR X8, [X22]
	0x032FC718 LDR X8, [X8 + 0xB8]
	0x032FC71C LDR X21, [X8 + 0x8]
	0x032FC720 STRB W31, [X31 + 0x8]
	0x032FC724 ADD X1, X31, 0x8
	0x032FC728 MOV X0, X21
	0x032FC72C MOV X2, X31
	0x032FC730 BL 0x33DE64C
	0x032FC734 LDR X0, [X22]
	0x032FC738 LDR W8, [X0 + 0xE0]
	0x032FC73C CBNZ W8, 0x32FC748
	0x032FC740 BL 0x1C16DFC
	0x032FC744 LDR X0, [X22]
	0x032FC748 LDR X8, [X0 + 0xB8]
	0x032FC74C LDR X9, [X8]
	0x032FC750 CBZ X9, 0x32FC75C
	0x032FC754 MOV X22, X31
	0x032FC758 B 0x32FC77C
	0x032FC75C LDR W9, [X0 + 0xE0]
	0x032FC760 LDR X23, [X19 + 0x28]
	0x032FC764 CBNZ W9, 0x32FC774
	0x032FC768 BL 0x1C16DFC
	0x032FC76C LDR X8, [X22]
	0x032FC770 LDR X8, [X8 + 0xB8]
	0x032FC774 MOV X22, X31
	0x032FC778 STR X23, [X8]
	0x032FC77C MOVZ W23, 0x9
	0x032FC780 LDRB W8, [X31 + 0x8]
	0x032FC784 CBZ W8, 0x32FC794
	0x032FC788 MOV X0, X21
	0x032FC78C MOV X1, X31
	0x032FC790 BL 0x33E14E4
	0x032FC794 CBNZ X22, 0x32FC810
	0x032FC798 CMP W23, 0x9
	0x032FC79C B.EQ 0x32FC6C8
	0x032FC7A0 CBZ W23, 0x32FC6C8
	0x032FC7A4 B 0x32FC6F4
	0x032FC7A8 ADRP X0, 0xE2B000
	0x032FC7AC LDR X0, [X0 + 0x6B8]
	0x032FC7B0 BL 0x1C16D08
	0x032FC7B4 MOV X1, X0
	0x032FC7B8 MOV X0, X20
	0x032FC7BC BL 0x1C16DEC
	0x032FC7C0 BL 0x1C16F20
	0x032FC7C4 LDR X1, [X19 + 0x30]
	0x032FC7C8 MOV X0, X19
	0x032FC7CC BL 0x32F92BC
	0x032FC7D0 MOV X20, X0
	0x032FC7D4 ADRP X0, 0xE25000
	0x032FC7D8 LDR W19, [X31 + 0xC]
	0x032FC7DC LDR X0, [X0 + 0xFA8]
	0x032FC7E0 BL 0x1C16D08
	0x032FC7E4 BL 0x19903D0
	0x032FC7E8 MOV X0, X20
	0x032FC7EC MOV W1, W19
	0x032FC7F0 BL 0x32F9334
	0x032FC7F4 MOV X19, X0
	0x032FC7F8 ADRP X0, 0xE2B000
	0x032FC7FC LDR X0, [X0 + 0x6B8]
	0x032FC800 BL 0x1C16D08
	0x032FC804 MOV X1, X0
	0x032FC808 MOV X0, X19
	0x032FC80C BL 0x1C16DEC
	0x032FC810 MOV X0, X22
	0x032FC814 BL 0x1C16F18
	0x032FC818 B 0x32FC81C
	0x032FC81C MOV X23, X0
	0x032FC820 CMP W1, 0x1
	0x032FC824 B.NE 0x32FC840
	0x032FC828 MOV X0, X23
	0x032FC82C BL 0x3EB1AD0
	0x032FC830 LDR X22, [X0]
	0x032FC834 BL 0x3EB1AE0
	0x032FC838 MOV W23, W31
	0x032FC83C B 0x32FC780
	0x032FC840 MOV X22, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x10E1000
	009 Move W8, [X24+2706]
	010 Move X20, X4
	011 Move W21, W3
	012 Move W22, W2
	013 Move X23, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xE26000
	020 Move X0, [X0+4008]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+2706], W8
	024 Move [X31+12], W31
	025 Compare X19, 0
	026 JumpIfEqual {64}
	027 Add X1, X31, 12
	028 Move X0, X19
	029 Move X2, X31
	030 Call SafeHandle.DangerousAddRef, X0, X1
	031 Move X8, 0xE26000
	032 Move X8, [X8+4008]
	033 Move X24, [X19+16]
	034 Move X0, [X8]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X24
	040 Move X1, X23
	041 Move W2, W22
	042 Move W3, W21
	043 Move X4, X20
	044 Call 0x1C29298
	045 Move W8, [X31+12]
	046 Move W21, W0
	047 Compare W8, 0
	048 JumpIfEqual {55}
	049 Move X20, X31
	050 Move X0, X19
	051 Move X1, X31
	052 Call SafeHandle.DangerousRelease, X0
	053 Compare X20, 0
	054 JumpIfNotEqual {80}
	055 Move W0, W21
	056 Move X20, [X31+48]
	057 Move X19, [X31+56]
	058 Move X22, [X31+32]
	059 Move X21, [X31+40]
	060 Move X24, [X31+16]
	061 Move X23, [X31+24]
	062 Move X30, [X31+64]
	063 Return X0
	064 Call 0x1C17F20
	065 Move X21, X0
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, X21
	068 Call 0x3EB2AD0
	069 Move X20, [X0]
	070 Call 0x3EB2AE0
	071 Move W8, [X31+12]
	072 Compare W8, 0
	073 JumpIfEqual {77}
	074 Compare X19, 0
	075 JumpIfEqual {83}
	076 Move W21, W31
	077 Move W21, W31
	078 Compare X20, 0
	079 JumpIfEqual {55}
	080 Move X0, X20
	081 Call 0x1C17F18
	082 Move X20, X31
	083 Call 0x1C17F20
	084 Move X21, X0
	085 Move W8, [X31+12]
	086 Compare W8, 0
	087 JumpIfEqual {94}
	088 Compare X19, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17F20
	091 Move X0, X19
	092 Move X1, X31
	093 Call SafeHandle.DangerousRelease, X0
	094 Compare X20, 0
	095 JumpIfNotEqual {98}
	096 Move X0, X21
	097 Call 0x1D2D690
	098 Move X0, X20
	099 Call 0x1C17F18
	100 Call 0x1991590

Method: System.Int64 Seek(System.IntPtr handle, System.Int64 offset, System.IO.SeekOrigin origin, out System.IO.MonoIOError error)

Disassembly:
	0x032FDD50 CMP W21, W23

ISIL:
	001 Call 0x1C2932C
	002 Return X0

Method: System.Int64 Seek(System.Runtime.InteropServices.SafeHandle safeHandle, System.Int64 offset, System.IO.SeekOrigin origin, out System.IO.MonoIOError error)

Disassembly:
	0x032FAE5C LDR X8, [X8 + 0x5E8]
	0x032FAE60 ADRP X25, 0xE2D000
	0x032FAE64 LDR X0, [X8]
	0x032FAE68 LDR X25, [X25 + 0x5E0]
	0x032FAE6C BL 0x1C16F10
	0x032FAE70 LDR X2, [X25]
	0x032FAE74 MOV X1, X24
	0x032FAE78 MOV X25, X0
	0x032FAE7C BL 0x32FB040
	0x032FAE80 CBZ X25, 0x32FAEF0
	0x032FAE84 MOV X0, X25
	0x032FAE88 MOV X1, X23
	0x032FAE8C MOV W2, W22
	0x032FAE90 MOV W3, W21
	0x032FAE94 MOV X4, X20
	0x032FAE98 MOV X5, X19
	0x032FAE9C LDP X20, X19, [X31 + 0x40]
	0x032FAEA0 LDP X22, X21, [X31 + 0x30]
	0x032FAEA4 LDP X24, X23, [X31 + 0x20]
	0x032FAEA8 LDP X30, X25, [X31 + 0x10]
	0x032FAEAC ADD X31, X31, 0x50
	0x032FAEB0 B 0x32FB0E0
	0x032FAEB4 MOVZ W7, 0x1
	0x032FAEB8 MOV X0, X24
	0x032FAEBC MOV X1, X23
	0x032FAEC0 MOV W2, W22
	0x032FAEC4 MOV W3, W21
	0x032FAEC8 MOV X4, X20
	0x032FAECC MOV X5, X19
	0x032FAED0 MOV W6, W31
	0x032FAED4 BL 0x32F04AC
	0x032FAED8 LDP X20, X19, [X31 + 0x40]
	0x032FAEDC LDP X22, X21, [X31 + 0x30]
	0x032FAEE0 LDP X24, X23, [X31 + 0x20]
	0x032FAEE4 LDP X30, X25, [X31 + 0x10]
	0x032FAEE8 ADD X31, X31, 0x50
	0x032FAEEC RET
	0x032FAEF0 BL 0x1C16F20
	0x032FAEF4 ADRP X0, 0xE22000
	0x032FAEF8 LDR X0, [X0 + 0x4B8]
	0x032FAEFC BL 0x1C16D08
	0x032FAF00 BL 0x1C16F10
	0x032FAF04 MOV X19, X0
	0x032FAF08 ADRP X0, 0xE2D000
	0x032FAF0C LDR X0, [X0 + 0x570]
	0x032FAF10 BL 0x1C16D08
	0x032FAF14 MOV X1, X0
	0x032FAF18 MOV X0, X19
	0x032FAF1C MOV X2, X31
	0x032FAF20 BL 0x338C448
	0x032FAF24 B 0x32FB028
	0x032FAF28 ADRP X0, 0xDF9000
	0x032FAF2C LDR X0, [X0 + 0xB40]
	0x032FAF30 BL 0x1C16D08
	0x032FAF34 BL 0x1C16F10
	0x032FAF38 MOV X19, X0
	0x032FAF3C ADRP X0, 0xE2D000
	0x032FAF40 LDR X0, [X0 + 0x5F0]
	0x032FAF44 BL 0x1C16D08
	0x032FAF48 MOV X1, X0
	0x032FAF4C MOV X0, X19
	0x032FAF50 MOV X2, X31
	0x032FAF54 BL 0x3379A44
	0x032FAF58 B 0x32FB028
	0x032FAF5C ADRP X0, 0xDFE000
	0x032FAF60 LDR X0, [X0 + 0x528]
	0x032FAF64 BL 0x1C16D08
	0x032FAF68 BL 0x1C16F10
	0x032FAF6C MOV X19, X0
	0x032FAF70 ADRP X0, 0xE21000
	0x032FAF74 LDR X0, [X0 + 0x640]
	0x032FAF78 BL 0x1C16D08
	0x032FAF7C MOV X1, X0
	0x032FAF80 MOV X0, X19
	0x032FAF84 MOV X2, X31
	0x032FAF88 BL 0x330E100
	0x032FAF8C B 0x32FB028
	0x032FAF90 ADRP X0, 0xE01000
	0x032FAF94 LDR X0, [X0 + 0x760]
	0x032FAF98 BL 0x1C16D08
	0x032FAF9C BL 0x1C16F10
	0x032FAFA0 MOV X19, X0
	0x032FAFA4 ADRP X0, 0xE2D000
	0x032FAFA8 LDR X0, [X0 + 0x3B8]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x10E3000
	009 Move W8, [X23+2707]
	010 Move X20, X3
	011 Move W21, W2
	012 Move X22, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xE28000
	019 Move X0, [X0+4008]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+2707], W8
	023 Move [X31+12], W31
	024 Compare X19, 0
	025 JumpIfEqual {62}
	026 Add X1, X31, 12
	027 Move X0, X19
	028 Move X2, X31
	029 Call SafeHandle.DangerousAddRef, X0, X1
	030 Move X8, 0xE28000
	031 Move X8, [X8+4008]
	032 Move X23, [X19+16]
	033 Move X0, [X8]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X23
	039 Move X1, X22
	040 Move W2, W21
	041 Move X3, X20
	042 Call 0x1C2932C
	043 Move W8, [X31+12]
	044 Move X21, X0
	045 Compare W8, 0
	046 JumpIfEqual {53}
	047 Move X20, X31
	048 Move X0, X19
	049 Move X1, X31
	050 Call SafeHandle.DangerousRelease, X0
	051 Compare X20, 0
	052 JumpIfNotEqual {78}
	053 Move X0, X21
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X30, [X31+16]
	059 Move X23, [X31+24]
	060 Add X31, X31, 64
	061 Return X0
	062 Call 0x1C17F20
	063 Move X21, X0
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X0, X21
	066 Call 0x3EB2AD0
	067 Move X20, [X0]
	068 Call 0x3EB2AE0
	069 Move W8, [X31+12]
	070 Compare W8, 0
	071 JumpIfEqual {75}
	072 Compare X19, 0
	073 JumpIfEqual {81}
	074 Move X21, X31
	075 Move X21, X31
	076 Compare X20, 0
	077 JumpIfEqual {53}
	078 Move X0, X20
	079 Call 0x1C17F18
	080 Move X20, X31
	081 Call 0x1C17F20
	082 Move X21, X0
	083 Move W8, [X31+12]
	084 Compare W8, 0
	085 JumpIfEqual {92}
	086 Compare X19, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17F20
	089 Move X0, X19
	090 Move X1, X31
	091 Call SafeHandle.DangerousRelease, X0
	092 Compare X20, 0
	093 JumpIfNotEqual {96}
	094 Move X0, X21
	095 Call 0x1D2D690
	096 Move X0, X20
	097 Call 0x1C17F18
	098 Call 0x1991590

Method: System.Int64 GetLength(System.IntPtr handle, out System.IO.MonoIOError error)

Disassembly:
	0x032FDD54 CSET W8, GT

ISIL:
	001 Call 0x1C29328
	002 Return X0

Method: System.Int64 GetLength(System.Runtime.InteropServices.SafeHandle safeHandle, out System.IO.MonoIOError error)

Disassembly:
	0x032FB148 STR X0, [X31 + 0x8]
	0x032FB14C ADD X1, X31, 0x28
	0x032FB150 MOV X0, X8
	0x032FB154 BL 0x1C16E04
	0x032FB158 STR X0, [X31 + 0x10]
	0x032FB15C ADD X1, X31, 0x0
	0x032FB160 MOV X0, X21
	0x032FB164 MOV X2, X20
	0x032FB168 MOV X3, X19
	0x032FB16C BL 0x1C16CB0
	0x032FB170 LDP X20, X19, [X31 + 0x50]
	0x032FB174 LDP X22, X21, [X31 + 0x40]
	0x032FB178 LDP X24, X23, [X31 + 0x30]
	0x032FB17C LDR X30, [X31 + 0x20]
	0x032FB180 ADD X31, X31, 0x60
	0x032FB184 RET
	0x032FB188 STP X30, X21, [X31 - 0x20]!
	0x032FB18C STP X20, X19, [X31 + 0x10]
	0x032FB190 ADRP X21, 0x10E1000
	0x032FB194 LDRB W8, [X21 + 0xA7B]
	0x032FB198 MOV X19, X1
	0x032FB19C MOV X20, X0
	0x032FB1A0 TBNZ X8, 0x0, 0x32FB1C4
	0x032FB1A4 ADRP X0, 0xE2C000
	0x032FB1A8 LDR X0, [X0 + 0x610]
	0x032FB1AC BL 0x1C16CF4
	0x032FB1B0 ADRP X0, 0xE2C000
	0x032FB1B4 LDR X0, [X0 + 0x5E8]
	0x032FB1B8 BL 0x1C16CF4
	0x032FB1BC MOVZ W8, 0x1
	0x032FB1C0 STRB W8, [X21 + 0xA7B]
	0x032FB1C4 CBZ X19, 0x32FB29C
	0x032FB1C8 LDRB W8, [X20 + 0x55]
	0x032FB1CC CBZ W8, 0x32FB240
	0x032FB1D0 ADRP X9, 0xE2C000
	0x032FB1D4 LDR X9, [X9 + 0x610]
	0x032FB1D8 LDR X8, [X19]
	0x032FB1DC LDR X9, [X9]
	0x032FB1E0 LDRB W11, [X8 + 0x130]
	0x032FB1E4 LDRB W10, [X9 + 0x130]
	0x032FB1E8 CMP W11, W10
	0x032FB1EC B.CC 0x32FB254
	0x032FB1F0 LDR X11, [X8 + 0xC8]
	0x032FB1F4 ADD X10, X11, X10, 0x3, LSL
	0x032FB1F8 LDUR X10, [X10 - 0x8]
	0x032FB1FC CMP X10, X9
	0x032FB200 B.NE 0x32FB254
	0x032FB204 LDR X9, [X8 + 0x238]
	0x032FB208 LDR X1, [X8 + 0x240]
	0x032FB20C MOV X0, X19
	0x032FB210 BLR X9
	0x032FB214 CBZ X0, 0x32FB254
	0x032FB218 ADRP X8, 0xE2C000
	0x032FB21C LDR X8, [X8 + 0x5E8]
	0x032FB220 LDR X9, [X0]
	0x032FB224 LDR X8, [X8]
	0x032FB228 CMP X9, X8
	0x032FB22C B.NE 0x32FB254
	0x032FB230 MOV X1, X19
	0x032FB234 LDP X20, X19, [X31 + 0x10]
	0x032FB238 LDP X30, X21, [X31], #0x20
	0x032FB23C B 0x32FB2E4
	0x032FB240 MOV X0, X20
	0x032FB244 MOV X1, X19
	0x032FB248 LDP X20, X19, [X31 + 0x10]
	0x032FB24C LDP X30, X21, [X31], #0x20
	0x032FB250 B 0x32F0A18
	0x032FB254 ADRP X0, 0xE00000
	0x032FB258 LDR X0, [X0 + 0x578]
	0x032FB25C BL 0x1C16D08
	0x032FB260 BL 0x1C16F10
	0x032FB264 MOV X19, X0
	0x032FB268 ADRP X0, 0xE2C000
	0x032FB26C LDR X0, [X0 + 0x618]
	0x032FB270 BL 0x1C16D08
	0x032FB274 MOV X20, X0
	0x032FB278 ADRP X0, 0xE23000
	0x032FB27C LDR X0, [X0 + 0xDD0]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10E2000
	007 Move W8, [X21+2708]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE27000
	015 Move X0, [X0+4008]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2708], W8
	019 Move [X31+12], W31
	020 Compare X19, 0
	021 JumpIfEqual {54}
	022 Add X1, X31, 12
	023 Move X0, X19
	024 Move X2, X31
	025 Call SafeHandle.DangerousAddRef, X0, X1
	026 Move X8, 0xE27000
	027 Move X8, [X8+4008]
	028 Move X21, [X19+16]
	029 Move X0, [X8]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X21
	035 Move X1, X20
	036 Call 0x1C29328
	037 Move W8, [X31+12]
	038 Move X21, X0
	039 Compare W8, 0
	040 JumpIfEqual {47}
	041 Move X20, X31
	042 Move X0, X19
	043 Move X1, X31
	044 Call SafeHandle.DangerousRelease, X0
	045 Compare X20, 0
	046 JumpIfNotEqual {70}
	047 Move X0, X21
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X30, [X31+16]
	051 Move X21, [X31+24]
	052 Add X31, X31, 48
	053 Return X0
	054 Call 0x1C17F20
	055 Move X21, X0
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, X21
	058 Call 0x3EB2AD0
	059 Move X20, [X0]
	060 Call 0x3EB2AE0
	061 Move W8, [X31+12]
	062 Compare W8, 0
	063 JumpIfEqual {67}
	064 Compare X19, 0
	065 JumpIfEqual {73}
	066 Move X21, X31
	067 Move X21, X31
	068 Compare X20, 0
	069 JumpIfEqual {47}
	070 Move X0, X20
	071 Call 0x1C17F18
	072 Move X20, X31
	073 Call 0x1C17F20
	074 Move X21, X0
	075 Move W8, [X31+12]
	076 Compare W8, 0
	077 JumpIfEqual {84}
	078 Compare X19, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17F20
	081 Move X0, X19
	082 Move X1, X31
	083 Call SafeHandle.DangerousRelease, X0
	084 Compare X20, 0
	085 JumpIfNotEqual {88}
	086 Move X0, X21
	087 Call 0x1D2D690
	088 Move X0, X20
	089 Call 0x1C17F18
	090 Call 0x1991590

Method: System.Boolean SetLength(System.IntPtr handle, System.Int64 length, out System.IO.MonoIOError error)

Disassembly:
	0x032FDD58 SUB W21, W21, W8

ISIL:
	001 Call 0x1C291EC
	002 Return X0

Method: System.Boolean SetLength(System.Runtime.InteropServices.SafeHandle safeHandle, System.Int64 length, out System.IO.MonoIOError error)

Disassembly:
	0x032FD354 MOV X0, X19
	0x032FD358 MOV W1, W21
	0x032FD35C MOV X2, X31
	0x032FD360 BL 0x3222A1C
	0x032FD364 LDR X8, [X27]
	0x032FD368 MOV W22, W0
	0x032FD36C LDR W9, [X8 + 0xE0]
	0x032FD370 CBNZ W9, 0x32FD380
	0x032FD374 MOV X0, X8
	0x032FD378 BL 0x1C16DFC
	0x032FD37C LDR X8, [X27]
	0x032FD380 LDR X9, [X8 + 0xB8]
	0x032FD384 LDRH W10, [X9 + 0xA]
	0x032FD388 CMP W10, W22, UXTH
	0x032FD38C B.EQ 0x32FD3B4
	0x032FD390 LDR W10, [X8 + 0xE0]
	0x032FD394 CBNZ W10, 0x32FD3A8
	0x032FD398 MOV X0, X8
	0x032FD39C BL 0x1C16DFC
	0x032FD3A0 LDR X8, [X27]
	0x032FD3A4 LDR X9, [X8 + 0xB8]
	0x032FD3A8 LDRH W8, [X9 + 0x8]
	0x032FD3AC CMP W8, W22, UXTH
	0x032FD3B0 B.NE 0x32FD3C0
	0x032FD3B4 ADD W25, W25, 0x1
	0x032FD3B8 B 0x32FD3C0
	0x032FD3BC ADD W21, W21, 0x1
	0x032FD3C0 CMP W21, W24
	0x032FD3C4 B.NE 0x32FD29C
	0x032FD3C8 B 0x32FD3D4
	0x032FD3CC MOV W26, W31
	0x032FD3D0 MOV W25, W31
	0x032FD3D4 ORR W8, W26, W25, 0x0
	0x032FD3D8 CBZ W8, 0x32FD5B4
	0x032FD3DC ADRP X8, 0xDFF000
	0x032FD3E0 LDR X8, [X8 + 0x8D8]
	0x032FD3E4 SUB W1, W24, W25
	0x032FD3E8 LDR X0, [X8]
	0x032FD3EC BL 0x1C16D6C
	0x032FD3F0 MOV X21, X0
	0x032FD3F4 TBNZ X23, 0x0, 0x32FD418
	0x032FD3F8 CBZ X21, 0x32FD5D4
	0x032FD3FC LDR W8, [X21 + 0x18]
	0x032FD400 CBZ W8, 0x32FD5D0
	0x032FD404 MOVZ W9, 0x5C
	0x032FD408 CMP W8, 0x1
	0x032FD40C STRH W9, [X21 + 0x20]
	0x032FD410 B.EQ 0x32FD5D0
	0x032FD414 STRH W9, [X21 + 0x22]
	0x032FD418 CMP W20, W24
	0x032FD41C B.GE 0x32FD590
	0x032FD420 CBZ X21, 0x32FD5D4
	0x032FD424 ADRP X26, 0xE1D000
	0x032FD428 LDR X26, [X26 + 0x1D0]
	0x032FD42C SUB W25, W24, 0x1
	0x032FD430 MOV W23, W20
	0x032FD434 LDR W8, [X21 + 0x18]
	0x032FD438 CMP W23, W8
	0x032FD43C B.GE 0x32FD590
	0x032FD440 MOV X0, X19
	0x032FD444 MOV W1, W20
	0x032FD448 MOV X2, X31
	0x032FD44C BL 0x3222A1C
	0x032FD450 LDR X8, [X26]
	0x032FD454 MOV W22, W0
	0x032FD458 LDR W9, [X8 + 0xE0]
	0x032FD45C CBNZ W9, 0x32FD46C
	0x032FD460 MOV X0, X8
	0x032FD464 BL 0x1C16DFC
	0x032FD468 LDR X8, [X26]
	0x032FD46C LDR X9, [X8 + 0xB8]
	0x032FD470 LDRH W10, [X9 + 0xA]
	0x032FD474 CMP W10, W22, UXTH
	0x032FD478 B.EQ 0x32FD4A0
	0x032FD47C LDR W10, [X8 + 0xE0]
	0x032FD480 CBNZ W10, 0x32FD494
	0x032FD484 MOV X0, X8
	0x032FD488 BL 0x1C16DFC
	0x032FD48C LDR X8, [X26]
	0x032FD490 LDR X9, [X8 + 0xB8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x10E0000
	007 Move W8, [X22+2709]
	008 Move X20, X2
	009 Move X21, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xE25000
	016 Move X0, [X0+4008]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2709], W8
	020 Move [X31+12], W31
	021 Compare X19, 0
	022 JumpIfEqual {56}
	023 Add X1, X31, 12
	024 Move X0, X19
	025 Move X2, X31
	026 Call SafeHandle.DangerousAddRef, X0, X1
	027 Move X8, 0xE25000
	028 Move X8, [X8+4008]
	029 Move X22, [X19+16]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X22
	036 Move X1, X21
	037 Move X2, X20
	038 Call 0x1C291EC
	039 Move W8, [X31+12]
	040 Move W21, W0
	041 Compare W8, 0
	042 JumpIfEqual {49}
	043 Move X20, X31
	044 Move X0, X19
	045 Move X1, X31
	046 Call SafeHandle.DangerousRelease, X0
	047 Compare X20, 0
	048 JumpIfNotEqual {72}
	049 And W0, W21, 1
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Return X0
	056 Call 0x1C17F20
	057 Move X21, X0
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, X21
	060 Call 0x3EB2AD0
	061 Move X20, [X0]
	062 Call 0x3EB2AE0
	063 Move W8, [X31+12]
	064 Compare W8, 0
	065 JumpIfEqual {69}
	066 Compare X19, 0
	067 JumpIfEqual {75}
	068 Move W21, W31
	069 Move W21, W31
	070 Compare X20, 0
	071 JumpIfEqual {49}
	072 Move X0, X20
	073 Call 0x1C17F18
	074 Move X20, X31
	075 Call 0x1C17F20
	076 Move X21, X0
	077 Move W8, [X31+12]
	078 Compare W8, 0
	079 JumpIfEqual {86}
	080 Compare X19, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17F20
	083 Move X0, X19
	084 Move X1, X31
	085 Call SafeHandle.DangerousRelease, X0
	086 Compare X20, 0
	087 JumpIfNotEqual {90}
	088 Move X0, X21
	089 Call 0x1D2D690
	090 Move X0, X20
	091 Call 0x1C17F18
	092 Call 0x1991590

Method: System.IntPtr get_ConsoleOutput()

Disassembly:
	0x032FDD5C B 0x32FDD84

ISIL:
	001 Call 0x1C29338
	002 Return X0

Method: System.IntPtr get_ConsoleInput()

Disassembly:
	0x032FDD60 LDR W8, [X20 + 0x18]

ISIL:
	001 Call 0x1C29334
	002 Return X0

Method: System.IntPtr get_ConsoleError()

Disassembly:
	0x032FDD64 CMP X25, X8

ISIL:
	001 Call 0x1C29330
	002 Return X0

Method: System.Char get_VolumeSeparatorChar()

Disassembly:
	0x032FDD68 B.CS 0x32FDEA8

ISIL:
	001 Call 0x1C291F0
	002 Return X0

Method: System.Char get_DirectorySeparatorChar()

Disassembly:
	0x032FDD6C CMP W21, W8

ISIL:
	001 Call 0x1C291F0
	002 Return X0

Method: System.Char get_AltDirectorySeparatorChar()

Disassembly:
	0x032FDD70 B.CS 0x32FDEA8

ISIL:
	001 Call 0x1C291F0
	002 Return X0

Method: System.Char get_PathSeparator()

Disassembly:
	0x032FDD74 LDR X8, [X26, X25, LSL #3]

ISIL:
	001 Call 0x1C291F8
	002 Return X0

Method: System.Void DumpHandles()

Disassembly:
	0x032FDD38 B.CS 0x32FDEA8

ISIL:
	001 Call 0x1C17CAC
	002 Return 

Method: System.Boolean RemapPath(System.String path, out System.String newPath)

Disassembly:
	0x032FDD78 ADD X9, X20, W21, 0x3, SXTW

ISIL:
	001 Call 0x1C291E0
	002 Return X0

Method: System.Void .cctor()

Disassembly:
	0x032FDD7C ADD W21, W21, 0x1
	0x032FDD80 STR X8, [X9 + 0x20]
	0x032FDD84 LDR X8, [X20 + 0x18]
	0x032FDD88 ADD X25, X25, 0x1
	0x032FDD8C CMP X25, W8, SXTW
	0x032FDD90 B.LT 0x32FDCAC
	0x032FDD94 B 0x32FDDA4
	0x032FDD98 LDR W8, [X20 + 0x18]
	0x032FDD9C B 0x32FDD34
	0x032FDDA0 MOV W21, W31
	0x032FDDA4 CBZ W21, 0x32FDDD0
	0x032FDDA8 CMP W21, 0x1
	0x032FDDAC B.NE 0x32FDDD8
	0x032FDDB0 CBZ W8, 0x32FDEA8
	0x032FDDB4 ADRP X8, 0xDF6000
	0x032FDDB8 LDR X0, [X20 + 0x20]
	0x032FDDBC LDR X8, [X8 + 0x988]
	0x032FDDC0 MOV X2, X31
	0x032FDDC4 LDR X1, [X8]
	0x032FDDC8 BL 0x321BA08
	0x032FDDCC TBZ X0, 0x0, 0x32FDDD8
	0x032FDDD0 MOV X20, X19
	0x032FDDD4 B 0x32FDE60
	0x032FDDD8 LDR X0, [X22]
	0x032FDDDC LDR W8, [X0 + 0xE0]
	0x032FDDE0 CBNZ W8, 0x32FDDEC
	0x032FDDE4 BL 0x1C16DFC
	0x032FDDE8 LDR X0, [X22]
	0x032FDDEC LDR X8, [X0 + 0xB8]
	0x032FDDF0 MOV X1, X20
	0x032FDDF4 MOV W2, W31
	0x032FDDF8 MOV W3, W21
	0x032FDDFC LDR X0, [X8 + 0x10]
	0x032FDE00 MOV X4, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10E0000
	006 Move X19, 0xE25000
	007 Move X20, 0xE2B000
	008 Move W8, [X21+2710]
	009 Move X19, [X19+4008]
	010 Move X20, [X20+1744]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xE25000
	016 Move X0, [X0+4008]
	017 Call 0x1C17CF4
	018 Move X0, 0xE2B000
	019 Move X0, [X0+1744]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2710], W8
	023 Move TEMP, 0
	024 Not TEMP
	025 Move X0, TEMP
	026 Move X1, X31
	027 Call IntPtr.op_Explicit, X0
	028 Move X8, [X19]
	029 Move X1, X31
	030 Move X8, [X8+184]
	031 Move [X8], X0
	032 Move X0, [X20]
	033 Call Environment.GetEnvironmentVariable, X0
	034 Move X8, [X19]
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSET not yet implemented."
	039 Move X8, [X8+184]
	040 Move [X8+8], W9
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return 

