Type: System.IO.TextReader

Method: System.Void .ctor()

Disassembly:
	0x032E74D4 LDR X30, [X31], #0x30
	0x032E74D8 BR X2

ISIL:
	001 Move X1, X31
	002 Call MarshalByRefObject..ctor, X0
	003 Return 

Method: System.Void Dispose()

Disassembly:
	0x032EA554 LDR X3, [X8 + 0x268]
	0x032EA558 LDR X2, [X8 + 0x270]
	0x032EA55C LDR X30, [X31], #0x10
	0x032EA560 BR X3
	0x032EA564 BL 0x1C16F20
	0x032EA568 STR X30, [X31 - 0x10]!
	0x032EA56C LDR X0, [X0 + 0x30]
	0x032EA570 CBZ X0, 0x32EA588
	0x032EA574 LDR X8, [X0]
	0x032EA578 LDR X3, [X8 + 0x278]
	0x032EA57C LDR X2, [X8 + 0x280]
	0x032EA580 LDR X30, [X31], #0x10
	0x032EA584 BR X3
	0x032EA588 BL 0x1C16F20
	0x032EA58C STP X30, X23, [X31 - 0x30]!
	0x032EA590 STP X22, X21, [X31 + 0x10]
	0x032EA594 STP X20, X19, [X31 + 0x20]
	0x032EA598 ADRP X22, 0x10F2000
	0x032EA59C ADRP X23, 0xE38000
	0x032EA5A0 LDRB W8, [X22 + 0x9EA]
	0x032EA5A4 LDR X23, [X23 + 0xD10]
	0x032EA5A8 MOV X19, X2
	0x032EA5AC MOV X20, X1
	0x032EA5B0 MOV X21, X0
	0x032EA5B4 TBNZ X8, 0x0, 0x32EA5CC
	0x032EA5B8 ADRP X0, 0xE38000
	0x032EA5BC LDR X0, [X0 + 0xD10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10F3000
	006 Move X20, 0xE11000
	007 Move W8, [X21+2518]
	008 Move X20, [X20+3088]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE11000
	015 Move X0, [X0+3088]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2518], W8
	019 Move X8, [X19]
	020 Move W1, 1
	021 Move X0, X19
	022 Move X9, [X8+424]
	023 Move X2, [X8+432]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X1, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call GC.SuppressFinalize, X0
	037 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x032EA5C0 BL 0x1C16CF4

ISIL:
	001 Return 

Method: System.Int32 Peek()

Disassembly:
	0x032EA5C4 MOVZ W8, 0x1
	0x032EA5C8 STRB W8, [X22 + 0x9EA]

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W0, TEMP
	004 Return X0

Method: System.Int32 Read()

Disassembly:
	0x032EA5CC LDR X0, [X23]
	0x032EA5D0 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W0, TEMP
	004 Return X0

Method: System.Int32 Read(System.Char[] buffer, System.Int32 index, System.Int32 count)

Disassembly:
	0x032EA5D4 CBNZ W8, 0x32EA5DC
	0x032EA5D8 BL 0x1C16DFC
	0x032EA5DC MOV X0, X21
	0x032EA5E0 MOV X1, X31
	0x032EA5E4 BL 0x32F27B0
	0x032EA5E8 MOV X0, X21
	0x032EA5EC MOV X1, X20
	0x032EA5F0 MOV X2, X19
	0x032EA5F4 MOV X3, X19
	0x032EA5F8 LDP X20, X19, [X31 + 0x20]
	0x032EA5FC LDP X22, X21, [X31 + 0x10]
	0x032EA600 MOVZ W4, 0x1
	0x032EA604 LDP X30, X23, [X31], #0x30
	0x032EA608 B 0x32E5B60
	0x032EA60C STP X30, X25, [X31 - 0x40]!
	0x032EA610 STP X24, X23, [X31 + 0x10]
	0x032EA614 STP X22, X21, [X31 + 0x20]
	0x032EA618 STP X20, X19, [X31 + 0x30]
	0x032EA61C ADRP X24, 0x10F2000
	0x032EA620 ADRP X25, 0xE38000
	0x032EA624 LDRB W8, [X24 + 0x9EB]
	0x032EA628 LDR X25, [X25 + 0xD10]
	0x032EA62C MOV W19, W4
	0x032EA630 MOV X20, X3
	0x032EA634 MOV X21, X2
	0x032EA638 MOV X22, X1
	0x032EA63C MOV X23, X0
	0x032EA640 TBNZ X8, 0x0, 0x32EA658
	0x032EA644 ADRP X0, 0xE38000
	0x032EA648 LDR X0, [X0 + 0xD10]
	0x032EA64C BL 0x1C16CF4
	0x032EA650 MOVZ W8, 0x1
	0x032EA654 STRB W8, [X24 + 0x9EB]
	0x032EA658 LDR X0, [X25]
	0x032EA65C LDR W8, [X0 + 0xE0]
	0x032EA660 CBNZ W8, 0x32EA668
	0x032EA664 BL 0x1C16DFC
	0x032EA668 MOV X0, X23
	0x032EA66C MOV X1, X31
	0x032EA670 BL 0x32F27B0
	0x032EA674 MOV X0, X23
	0x032EA678 MOV X1, X22
	0x032EA67C MOV X2, X21
	0x032EA680 MOV X3, X20
	0x032EA684 MOV W4, W19
	0x032EA688 LDP X20, X19, [X31 + 0x30]
	0x032EA68C LDP X22, X21, [X31 + 0x20]
	0x032EA690 LDP X24, X23, [X31 + 0x10]
	0x032EA694 LDP X30, X25, [X31], #0x40
	0x032EA698 B 0x32E5B60
	0x032EA69C LDRB W8, [X0 + 0x5C]
	0x032EA6A0 CBZ W8, 0x32EA6B0
	0x032EA6A4 LDRB W8, [X0 + 0x58]
	0x032EA6A8 AND W0, W8, 0x1
	0x032EA6AC RET
	0x032EA6B0 MOV W0, W31
	0x032EA6B4 RET
	0x032EA6B8 LDRB W0, [X0 + 0x5C]
	0x032EA6BC RET
	0x032EA6C0 LDRB W8, [X0 + 0x5C]
	0x032EA6C4 CBZ W8, 0x32EA6D4
	0x032EA6C8 LDRB W8, [X0 + 0x58]
	0x032EA6CC UBFM W0, W8, 0x1, 0x1
	0x032EA6D0 RET
	0x032EA6D4 MOV W0, W31
	0x032EA6D8 RET
	0x032EA6DC STP X30, X19, [X31 - 0x10]!
	0x032EA6E0 LDRB W8, [X0 + 0x5C]
	0x032EA6E4 CBZ W8, 0x32EA6F0
	0x032EA6E8 LDP X30, X19, [X31], #0x10
	0x032EA6EC RET
	0x032EA6F0 BL 0x32E179C
	0x032EA6F4 MOV X19, X0
	0x032EA6F8 ADRP X0, 0xE3C000
	0x032EA6FC LDR X0, [X0 + 0xF00]
	0x032EA700 BL 0x1C16D08
	0x032EA704 MOV X1, X0
	0x032EA708 MOV X0, X19
	0x032EA70C BL 0x1C16DEC
	0x032EA710 STP X30, X19, [X31 - 0x10]!
	0x032EA714 LDR X8, [X0]
	0x032EA718 LDP X9, X1, [X8 + 0x1A8]
	0x032EA71C BLR X9
	0x032EA720 TBZ X0, 0x0, 0x32EA72C
	0x032EA724 LDP X30, X19, [X31], #0x10
	0x032EA728 RET
	0x032EA72C BL 0x32E1884
	0x032EA730 MOV X19, X0
	0x032EA734 ADRP X0, 0xE3C000
	0x032EA738 LDR X0, [X0 + 0xF08]
	0x032EA73C BL 0x1C16D08
	0x032EA740 MOV X1, X0
	0x032EA744 MOV X0, X19
	0x032EA748 BL 0x1C16DEC
	0x032EA74C STP X30, X19, [X31 - 0x10]!
	0x032EA750 LDR X8, [X0]
	0x032EA754 LDP X9, X1, [X8 + 0x1D8]
	0x032EA758 BLR X9
	0x032EA75C TBZ X0, 0x0, 0x32EA768
	0x032EA760 LDP X30, X19, [X31], #0x10
	0x032EA764 RET
	0x032EA768 BL 0x32E18F0
	0x032EA76C MOV X19, X0
	0x032EA770 ADRP X0, 0xE3C000
	0x032EA774 LDR X0, [X0 + 0xF10]
	0x032EA778 BL 0x1C16D08
	0x032EA77C MOV X1, X0
	0x032EA780 MOV X0, X19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Compare X1, 0
	010 JumpIfEqual {59}
	011 Move TEMP, X2
	012 And TEMP, TEMP, -2147483648
	013 Compare TEMP, -2147483648
	014 JumpIfEqual {76}
	015 Move TEMP, X3
	016 And TEMP, TEMP, -2147483648
	017 Compare TEMP, -2147483648
	018 JumpIfEqual {83}
	019 Move W8, [X1+24]
	020 Move X19, X1
	021 Subtract W8, W8, W2
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W23, W2
	025 Move X20, X0
	026 Move X21, X31
	027 Move W22, W3
	028 Move X24, X23
	029 ShiftRight X24, 32
	030 And X24, X24, 0x7FFFFFFF
	031 Move X25, 1
	032 Move X8, [X20]
	033 Move X0, X20
	034 Move X9, [X8+456]
	035 Move X1, [X8+464]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Add W31, W0, 1
	038 Move W8, [X19+24]
	039 Add X9, X23, X21
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Add X21, X21, 1
	042 Add X8, X19, X24
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add X24, X24, X25
	045 NotImplemented "Instruction STRH not yet implemented."
	046 Move W21, W22
	047 Move W21, W31
	048 Move W0, W21
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X22, [X31+32]
	052 Move X21, [X31+40]
	053 Move X24, [X31+16]
	054 Move X23, [X31+24]
	055 Move X30, [X31+64]
	056 Move X25, [X31+72]
	057 Return X0
	058 Call 0x1C17F28
	059 Move X0, 0xE0F000
	060 Move X0, [X0+1320]
	061 Call 0x1C17D08
	062 Call 0x1C17F10
	063 Move X19, X0
	064 Move X0, 0xE35000
	065 Move X0, [X0+3912]
	066 Call 0x1C17D08
	067 Move X20, X0
	068 Move X0, 0xE3D000
	069 Move X0, [X0+3136]
	070 Call 0x1C17D08
	071 Move X2, X0
	072 Move X0, X19
	073 Move X1, X20
	074 Move X3, X31
	075 Call ArgumentNullException..ctor, X0, X1, X2
	076 Move X0, 0xE12000
	077 Move X0, [X0+1888]
	078 Call 0x1C17D08
	079 Call 0x1C17F10
	080 Move X19, X0
	081 Move X0, 0xE15000
	082 Move X0, [X0+304]
	083 Move X0, 0xE12000
	084 Move X0, [X0+1888]
	085 Call 0x1C17D08
	086 Call 0x1C17F10
	087 Move X19, X0
	088 Move X0, 0xE32000
	089 Move X0, [X0+1608]
	090 Call 0x1C17D08
	091 Move X20, X0
	092 Move X0, 0xE32000
	093 Move X0, [X0+1648]
	094 Call 0x1C17D08
	095 Move X2, X0
	096 Move X0, X19
	097 Move X1, X20
	098 Move X3, X31
	099 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	100 Move X0, 0xE12000
	101 Move X0, [X0+1400]
	102 Call 0x1C17D08
	103 Call 0x1C17F10
	104 Move X19, X0
	105 Move X0, 0xE32000
	106 Move X0, [X0+1888]
	107 Call 0x1C17D08
	108 Move X1, X0
	109 Move X0, X19
	110 Move X2, X31
	111 Call ArgumentException..ctor, X0, X1
	112 Move X0, 0xE3D000
	113 Move X0, [X0+3768]
	114 Call 0x1C17D08
	115 Move X1, X0
	116 Move X0, X19
	117 Call 0x1C17DEC

Method: System.String ReadToEnd()

Disassembly:
	0x032EA784 BL 0x1C16DEC
	0x032EA788 B 0x32EA6DC
	0x032EA78C SUB X31, X31, 0x30
	0x032EA790 STP X30, X21, [X31 + 0x10]
	0x032EA794 STP X20, X19, [X31 + 0x20]
	0x032EA798 ADRP X20, 0x10F2000
	0x032EA79C STR X1, [X31 + 0x8]
	0x032EA7A0 ADRP X21, 0xE11000
	0x032EA7A4 LDRB W8, [X20 + 0x9EC]
	0x032EA7A8 LDR X21, [X21 + 0x7D8]
	0x032EA7AC MOV X19, X0
	0x032EA7B0 TBNZ X8, 0x0, 0x32EA7D4
	0x032EA7B4 ADRP X0, 0xE11000
	0x032EA7B8 LDR X0, [X0 + 0x7D8]
	0x032EA7BC BL 0x1C16CF4
	0x032EA7C0 ADRP X0, 0xE0A000
	0x032EA7C4 LDR X0, [X0 + 0x7B8]
	0x032EA7C8 BL 0x1C16CF4
	0x032EA7CC MOVZ W8, 0x1
	0x032EA7D0 STRB W8, [X20 + 0x9EC]
	0x032EA7D4 LDR X0, [X21]
	0x032EA7D8 LDR W8, [X0 + 0xE0]
	0x032EA7DC CBNZ W8, 0x32EA7E4
	0x032EA7E0 BL 0x1C16DFC
	0x032EA7E4 ADRP X20, 0xE0A000
	0x032EA7E8 LDR X20, [X20 + 0x7B8]
	0x032EA7EC ADD X0, X31, 0x8
	0x032EA7F0 MOV X1, X31
	0x032EA7F4 BL 0x33DD2B0
	0x032EA7F8 TBZ X0, 0x0, 0x32EA820
	0x032EA7FC LDR X0, [X20]
	0x032EA800 LDR X19, [X31 + 0x8]
	0x032EA804 LDR W8, [X0 + 0xE0]
	0x032EA808 CBNZ W8, 0x32EA810
	0x032EA80C BL 0x1C16DFC
	0x032EA810 MOV X0, X19
	0x032EA814 MOV X1, X31
	0x032EA818 BL 0x33EE044
	0x032EA81C B 0x32EA880
	0x032EA820 LDR X8, [X19]
	0x032EA824 LDR X1, [X8 + 0x2A0]
	0x032EA828 LDR X9, [X8 + 0x298]
	0x032EA82C MOV X0, X19
	0x032EA830 BLR X9
	0x032EA834 LDR X0, [X20]
	0x032EA838 LDR W8, [X0 + 0xE0]
	0x032EA83C CBNZ W8, 0x32EA844
	0x032EA840 BL 0x1C16DFC
	0x032EA844 ADRP X19, 0x10EE000
	0x032EA848 LDRB W8, [X19 + 0xF1D]
	0x032EA84C CBNZ W8, 0x32EA864
	0x032EA850 ADRP X0, 0xE0A000
	0x032EA854 LDR X0, [X0 + 0x7B8]
	0x032EA858 BL 0x1C16CF4
	0x032EA85C MOVZ W8, 0x1
	0x032EA860 STRB W8, [X19 + 0xF1D]
	0x032EA864 LDR X0, [X20]
	0x032EA868 LDR W8, [X0 + 0xE0]
	0x032EA86C CBNZ W8, 0x32EA878
	0x032EA870 BL 0x1C16DFC
	0x032EA874 LDR X0, [X20]
	0x032EA878 LDR X8, [X0 + 0xB8]
	0x032EA87C LDR X0, [X8 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10F3000
	007 Move X22, 0xE13000
	008 Move X20, 0xE0A000
	009 Move W8, [X21+2519]
	010 Move X22, [X22+2264]
	011 Move X20, [X20+2288]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xE13000
	018 Move X0, [X0+2264]
	019 Call 0x1C17CF4
	020 Move X0, 0xE0A000
	021 Move X0, [X0+2288]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2519], W8
	025 Move X0, [X22]
	026 Move W1, 4096
	027 Call 0x1C17D6C
	028 Move X8, [X20]
	029 Move X20, X0
	030 Move X0, X8
	031 Call 0x1C17F10
	032 Move W1, 4096
	033 Move X2, X31
	034 Move X21, X0
	035 Call StringBuilder..ctor, X0, X1
	036 Compare X20, 0
	037 JumpIfEqual {67}
	038 Move X8, [X19]
	039 Move W3, [X20+24]
	040 Move X0, X19
	041 Move X1, X20
	042 Move X9, [X8+472]
	043 Move X4, [X8+480]
	044 Move W2, W31
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Compare X21, 0
	047 JumpIfEqual {67}
	048 Move W3, W0
	049 Compare W3, 0
	050 JumpIfEqual {68}
	051 Move X0, X21
	052 Move X1, X20
	053 Move W2, W31
	054 Move X4, X31
	055 Call StringBuilder.Append, X0, X1, X2, X3
	056 Move X8, [X19]
	057 Move W3, [X20+24]
	058 Move X0, X19
	059 Move X1, X20
	060 Move X9, [X8+472]
	061 Move X4, [X8+480]
	062 Move W2, W31
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move W3, W0
	065 Compare X21, 0
	066 JumpIfNotEqual {49}
	067 Call 0x1C17F20
	068 Move X8, [X21]
	069 Move X0, X21
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X2, [X8+360]
	075 Move X1, [X8+368]
	076 Move X30, [X31+48]
	077 CallNoReturn X2

Method: System.String ReadLine()

Disassembly:
	0x032EA880 LDP X20, X19, [X31 + 0x20]
	0x032EA884 LDP X30, X21, [X31 + 0x10]
	0x032EA888 ADD X31, X31, 0x30
	0x032EA88C RET
	0x032EA890 B 0x32EA894
	0x032EA894 MOV X19, X0
	0x032EA898 CMP W1, 0x1
	0x032EA89C B.NE 0x32EA920
	0x032EA8A0 MOV X0, X19
	0x032EA8A4 BL 0x3EB1AD0
	0x032EA8A8 MOV X19, X0
	0x032EA8AC ADRP X0, 0xE09000
	0x032EA8B0 LDR X0, [X0 + 0x7D0]
	0x032EA8B4 BL 0x1C16D08
	0x032EA8B8 LDR X8, [X19]
	0x032EA8BC LDR X1, [X8]
	0x032EA8C0 BL 0x1C17270
	0x032EA8C4 TBZ X0, 0x0, 0x32EA8F8
	0x032EA8C8 LDR X19, [X19]
	0x032EA8CC BL 0x3EB1AE0
	0x032EA8D0 ADRP X0, 0xE0A000
	0x032EA8D4 LDR X0, [X0 + 0x7B8]
	0x032EA8D8 BL 0x1C16D08
	0x032EA8DC LDR W8, [X0 + 0xE0]
	0x032EA8E0 CBNZ W8, 0x32EA8E8
	0x032EA8E4 BL 0x1C16DFC
	0x032EA8E8 MOV X0, X19
	0x032EA8EC MOV X1, X31
	0x032EA8F0 BL 0x33EDAC4
	0x032EA8F4 B 0x32EA880
	0x032EA8F8 MOVZ W0, 0x8
	0x032EA8FC BL 0x3EB1AF0
	0x032EA900 LDR X8, [X19]
	0x032EA904 STR X8, [X0]
	0x032EA908 ADRP X1, 0xBCA000
	0x032EA90C ADD X1, X1, 0xE58
	0x032EA910 MOV X2, X31
	0x032EA914 BL 0x3EB1B00
	0x032EA918 MOV X19, X0
	0x032EA91C BL 0x3EB1AE0
	0x032EA920 MOV X0, X19
	0x032EA924 BL 0x1D2C690
	0x032EA928 BL 0x1990590
	0x032EA92C STP X30, X19, [X31 - 0x10]!
	0x032EA930 MOV X19, X0
	0x032EA934 BL 0x32EA6DC
	0x032EA938 ADD X0, X19, 0x38
	0x032EA93C MOV X1, X31
	0x032EA940 LDP X30, X19, [X31], #0x10
	0x032EA944 B 0x33EB198
	0x032EA948 STP X30, X19, [X31 - 0x10]!
	0x032EA94C LDR X8, [X0]
	0x032EA950 MOV X19, X0
	0x032EA954 LDP X9, X1, [X8 + 0x1B8]
	0x032EA958 BLR X9
	0x032EA95C TBZ X0, 0x0, 0x32EA970
	0x032EA960 ADD X0, X19, 0x48
	0x032EA964 MOV X1, X31
	0x032EA968 LDP X30, X19, [X31], #0x10
	0x032EA96C B 0x33EB198
	0x032EA970 BL 0x32E179C
	0x032EA974 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x10F3000
	006 Move X21, 0xE0A000
	007 Move W8, [X19+2520]
	008 Move X21, [X21+2288]
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE0A000
	015 Move X0, [X0+2288]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+2520], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X19, X0
	023 Call StringBuilder..ctor, X0
	024 Move X8, [X20]
	025 Move X0, X20
	026 Move X9, [X8+456]
	027 Move X1, [X8+464]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Add W31, W0, 1
	030 Move W1, W0
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Compare X19, 0
	034 JumpIfEqual {72}
	035 Move X0, X19
	036 Move X2, X31
	037 Call StringBuilder.Append, X0, X1
	038 Compare X19, 0
	039 JumpIfEqual {72}
	040 Move X0, X19
	041 Move X1, X31
	042 Call StringBuilder.get_Length, X0
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X0, X31
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return X0
	050 Move X8, [X20]
	051 Move X0, X20
	052 Move X9, [X8+440]
	053 Move X1, [X8+448]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X8, [X20]
	057 Move X0, X20
	058 Move X9, [X8+456]
	059 Move X1, [X8+464]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Compare X19, 0
	062 JumpIfEqual {72}
	063 Move X8, [X19]
	064 Move X0, X19
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X2, [X8+360]
	068 Move X1, [X8+368]
	069 Move X30, [X31+32]
	070 Move X21, [X31+40]
	071 CallNoReturn X2
	072 Call 0x1C17F20

Method: System.IO.TextReader Synchronized(System.IO.TextReader reader)

Disassembly:
	0x032EA978 ADRP X0, 0xE3C000
	0x032EA97C LDR X0, [X0 + 0xF18]
	0x032EA980 BL 0x1C16D08
	0x032EA984 MOV X1, X0
	0x032EA988 MOV X0, X19
	0x032EA98C BL 0x1C16DEC
	0x032EA990 STR X30, [X31 - 0x20]!
	0x032EA994 STP X20, X19, [X31 + 0x10]
	0x032EA998 TBNZ X1, 0x0, 0x32EA9CC
	0x032EA99C LDR X8, [X0]
	0x032EA9A0 MOV X19, X1
	0x032EA9A4 MOV X20, X0
	0x032EA9A8 LDP X9, X1, [X8 + 0x1B8]
	0x032EA9AC BLR X9
	0x032EA9B0 TBZ X0, 0x0, 0x32EAA14
	0x032EA9B4 ADD X0, X20, 0x48
	0x032EA9B8 MOV X1, X19
	0x032EA9BC LDP X20, X19, [X31 + 0x10]
	0x032EA9C0 MOV X2, X31
	0x032EA9C4 LDR X30, [X31], #0x20
	0x032EA9C8 B 0x33EB18C
	0x032EA9CC ADRP X0, 0xE11000
	0x032EA9D0 LDR X0, [X0 + 0x760]
	0x032EA9D4 BL 0x1C16D08
	0x032EA9D8 BL 0x1C16F10
	0x032EA9DC MOV X19, X0
	0x032EA9E0 ADRP X0, 0xE13000
	0x032EA9E4 LDR X0, [X0 + 0xEC8]
	0x032EA9E8 BL 0x1C16D08
	0x032EA9EC MOV X20, X0
	0x032EA9F0 ADRP X0, 0xE31000
	0x032EA9F4 LDR X0, [X0 + 0x670]
	0x032EA9F8 BL 0x1C16D08
	0x032EA9FC MOV X2, X0
	0x032EAA00 MOV X0, X19
	0x032EAA04 MOV X1, X20
	0x032EAA08 MOV X3, X31
	0x032EAA0C BL 0x3311888
	0x032EAA10 B 0x32EAA1C
	0x032EAA14 BL 0x32E179C
	0x032EAA18 MOV X19, X0
	0x032EAA1C ADRP X0, 0xE3C000
	0x032EAA20 LDR X0, [X0 + 0xF20]
	0x032EAA24 BL 0x1C16D08
	0x032EAA28 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10F3000
	005 Move W8, [X20+2521]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE3D000
	012 Move X0, [X0+3776]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2521], W8
	016 Compare X19, 0
	017 JumpIfEqual {33}
	018 Move X8, 0xE3D000
	019 Move X8, [X8+3776]
	020 Move X0, [X8]
	021 Move X8, [X19]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Call 0x1C17F10
	024 Move X1, X19
	025 Move X20, X0
	026 Call SyncTextReader..ctor, X0, X1
	027 Move X19, X20
	028 Move X0, X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0
	033 Move X0, 0xE0F000
	034 Move X0, [X0+1320]
	035 Call 0x1C17D08
	036 Call 0x1C17F10
	037 Move X19, X0
	038 Move X0, 0xE3D000
	039 Move X0, [X0+3784]
	040 Call 0x1C17D08
	041 Move X1, X0
	042 Move X0, X19
	043 Move X2, X31
	044 Call ArgumentNullException..ctor, X0, X1
	045 Move X0, 0xE3D000
	046 Move X0, [X0+3792]
	047 Call 0x1C17D08
	048 Move X1, X0
	049 Move X0, X19
	050 Call 0x1C17DEC

Method: System.Void .cctor()

Disassembly:
	0x032EAA98 MOV X2, X31
	0x032EAA9C BL 0x3379A44
	0x032EAAA0 B 0x32EAAD4
	0x032EAAA4 ADRP X0, 0xE13000
	0x032EAAA8 LDR X0, [X0 + 0xF78]
	0x032EAAAC BL 0x1C16D08
	0x032EAAB0 BL 0x1C16F10
	0x032EAAB4 MOV X19, X0
	0x032EAAB8 ADRP X0, 0xE3C000
	0x032EAABC LDR X0, [X0 + 0xF30]
	0x032EAAC0 BL 0x1C16D08
	0x032EAAC4 MOV X1, X0
	0x032EAAC8 MOV X0, X19
	0x032EAACC MOV X2, X31
	0x032EAAD0 BL 0x3379B6C
	0x032EAAD4 ADRP X0, 0xE3C000
	0x032EAAD8 LDR X0, [X0 + 0xF38]
	0x032EAADC BL 0x1C16D08
	0x032EAAE0 MOV X1, X0
	0x032EAAE4 MOV X0, X19
	0x032EAAE8 BL 0x1C16DEC
	0x032EAAEC STP X30, X23, [X31 - 0x30]!
	0x032EAAF0 STP X22, X21, [X31 + 0x10]
	0x032EAAF4 STP X20, X19, [X31 + 0x20]
	0x032EAAF8 ADRP X23, 0x10F2000
	0x032EAAFC LDRB W8, [X23 + 0x9ED]
	0x032EAB00 MOV W19, W3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x10F3000
	006 Move X21, 0xE3D000
	007 Move X20, 0xE3D000
	008 Move W8, [X19+2522]
	009 Move X21, [X21+3800]
	010 Move X20, [X20+3584]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xE3D000
	016 Move X0, [X0+3800]
	017 Call 0x1C17CF4
	018 Move X0, 0xE3D000
	019 Move X0, [X0+3584]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+2522], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X19, X0
	026 Call NullTextReader..ctor, X0
	027 Move X8, [X20]
	028 Move X8, [X8+184]
	029 Move [X8], X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 

