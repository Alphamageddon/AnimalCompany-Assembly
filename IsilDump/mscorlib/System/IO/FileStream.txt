Type: System.IO.FileStream

Method: System.Void .ctor(System.IntPtr handle, System.IO.FileAccess access, System.Boolean ownsHandle, System.Int32 bufferSize, System.Boolean isAsync, System.Boolean isConsoleWrapper)

Disassembly:
	0x032F8E64 BL 0x1C16DFC
	0x032F8E68 LDR X8, [X23]
	0x032F8E6C LDR X8, [X8 + 0xB8]
	0x032F8E70 LDRH W8, [X8 + 0x8]
	0x032F8E74 CMP W8, W22, UXTH
	0x032F8E78 B.NE 0x32F8DD8
	0x032F8E7C B 0x32F8E84
	0x032F8E80 MOVN W21, 0x0
	0x032F8E84 CMP W21, 0x0
	0x032F8E88 CSET W24, GT
	0x032F8E8C MOV X0, X31
	0x032F8E90 BL 0x32EC85C
	0x032F8E94 CBZ X0, 0x32F90A8
	0x032F8E98 LDR W8, [X0 + 0x10]
	0x032F8E9C MOV X2, X31
	0x032F8EA0 MOV X21, X0
	0x032F8EA4 SUB W1, W8, 0x1
	0x032F8EA8 BL 0x3222A1C
	0x032F8EAC LDR X8, [X23]
	0x032F8EB0 MOV W22, W0
	0x032F8EB4 LDR W9, [X8 + 0xE0]
	0x032F8EB8 CBNZ W9, 0x32F8EC8
	0x032F8EBC MOV X0, X8
	0x032F8EC0 BL 0x1C16DFC
	0x032F8EC4 LDR X8, [X23]
	0x032F8EC8 LDR X9, [X8 + 0xB8]
	0x032F8ECC LDRH W9, [X9 + 0xA]
	0x032F8ED0 CMP W9, W22, UXTH
	0x032F8ED4 B.NE 0x32F8EF4
	0x032F8ED8 MOV X0, X21
	0x032F8EDC MOV X1, X19
	0x032F8EE0 MOV X2, X31
	0x032F8EE4 BL 0x321B938
	0x032F8EE8 MOV X19, X0
	0x032F8EEC CBNZ W24, 0x32F8F4C
	0x032F8EF0 B 0x32F8F68
	0x032F8EF4 LDR W9, [X8 + 0xE0]
	0x032F8EF8 CBNZ W9, 0x32F8F04
	0x032F8EFC MOV X0, X8
	0x032F8F00 BL 0x1C16DFC
	0x032F8F04 ADRP X8, 0xDFD000
	0x032F8F08 LDR X8, [X8 + 0x170]
	0x032F8F0C LDR X0, [X8]
	0x032F8F10 LDR W8, [X0 + 0xE0]
	0x032F8F14 CBNZ W8, 0x32F8F1C
	0x032F8F18 BL 0x1C16DFC
	0x032F8F1C LDR X8, [X23]
	0x032F8F20 MOV X1, X31
	0x032F8F24 LDR X8, [X8 + 0xB8]
	0x032F8F28 ADD X0, X8, 0xA
	0x032F8F2C BL 0x330A76C
	0x032F8F30 MOV X1, X0
	0x032F8F34 MOV X0, X21
	0x032F8F38 MOV X2, X19
	0x032F8F3C MOV X3, X31
	0x032F8F40 BL 0x32274B8
	0x032F8F44 MOV X19, X0
	0x032F8F48 TBZ X24, 0x0, 0x32F8F68
	0x032F8F4C LDR X0, [X23]
	0x032F8F50 LDR W8, [X0 + 0xE0]
	0x032F8F54 CBNZ W8, 0x32F8F5C
	0x032F8F58 BL 0x1C16DFC
	0x032F8F5C MOV X0, X19
	0x032F8F60 BL 0x32FDAD4
	0x032F8F64 MOV X19, X0
	0x032F8F68 LDR X0, [X23]
	0x032F8F6C LDR W8, [X0 + 0xE0]
	0x032F8F70 CBNZ W8, 0x32F8F78
	0x032F8F74 BL 0x1C16DFC
	0x032F8F78 MOV W0, W20
	0x032F8F7C BL 0x32F4A0C
	0x032F8F80 TBZ X0, 0x0, 0x32F9018
	0x032F8F84 CBZ X19, 0x32F90A8
	0x032F8F88 LDR W8, [X19 + 0x10]
	0x032F8F8C MOV X0, X19
	0x032F8F90 MOV X2, X31
	0x032F8F94 SUB W1, W8, 0x1
	0x032F8F98 BL 0x3222A1C
	0x032F8F9C LDR X8, [X23]
	0x032F8FA0 MOV W20, W0
	0x032F8FA4 LDR W9, [X8 + 0xE0]
	0x032F8FA8 CBNZ W9, 0x32F8FB8
	0x032F8FAC MOV X0, X8
	0x032F8FB0 BL 0x1C16DFC
	0x032F8FB4 LDR X8, [X23]
	0x032F8FB8 LDR X9, [X8 + 0xB8]
	0x032F8FBC LDRH W9, [X9 + 0xA]
	0x032F8FC0 CMP W9, W20, UXTH
	0x032F8FC4 B.EQ 0x32F9018
	0x032F8FC8 LDR W9, [X8 + 0xE0]
	0x032F8FCC CBNZ W9, 0x32F8FD8
	0x032F8FD0 MOV X0, X8
	0x032F8FD4 BL 0x1C16DFC
	0x032F8FD8 ADRP X8, 0xDFD000
	0x032F8FDC LDR X8, [X8 + 0x170]
	0x032F8FE0 LDR X0, [X8]
	0x032F8FE4 LDR W8, [X0 + 0xE0]
	0x032F8FE8 CBNZ W8, 0x32F8FF0
	0x032F8FEC BL 0x1C16DFC
	0x032F8FF0 LDR X8, [X23]
	0x032F8FF4 MOV X1, X31
	0x032F8FF8 LDR X8, [X8 + 0xB8]
	0x032F8FFC ADD X0, X8, 0xA
	0x032F9000 BL 0x330A76C

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X28, 0x10E5000
	013 Move X27, 0xE30000
	014 Move X26, 0xE2B000
	015 Move W8, [X28+2676]
	016 Move X27, [X27+1064]
	017 Move X26, [X26+3344]
	018 Move W20, W6
	019 Move W22, W5
	020 Move W19, W4
	021 Move W24, W3
	022 Move W21, W2
	023 Move X25, X1
	024 Move X23, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {43}
	029 Move X0, 0xE2A000
	030 Move X0, [X0+4008]
	031 Call 0x1C17CF4
	032 Move X0, 0xE30000
	033 Move X0, [X0+1072]
	034 Call 0x1C17CF4
	035 Move X0, 0xE2B000
	036 Move X0, [X0+3344]
	037 Call 0x1C17CF4
	038 Move X0, 0xE30000
	039 Move X0, [X0+1064]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X28+2676], W8
	043 Move X8, [X27]
	044 Move [X23+48], X8
	045 Move X0, [X26]
	046 Move X26, 0xE2A000
	047 Move W8, [X0+224]
	048 Move X26, [X26+4008]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X23
	053 Move X1, X31
	054 Call MarshalByRefObject..ctor, X0
	055 Move X0, [X26]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {61}
	059 Call 0x1C17DFC
	060 Move X0, [X26]
	061 Move X8, [X0+184]
	062 Move X0, X25
	063 Move X2, X31
	064 Move X1, [X8]
	065 Call IntPtr.op_Equality, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {97}
	070 Move X8, 0xE30000
	071 Move X8, [X8+1072]
	072 Move X0, [X8]
	073 Call 0x1C17F10
	074 Move X1, X25
	075 Move W2, W31
	076 Move X3, X31
	077 Move X26, X0
	078 Call SafeFileHandle..ctor, X0, X1, X2
	079 And W3, W24, 1
	080 And W5, W22, 1
	081 And W6, W20, 1
	082 Move X0, X23
	083 Move X1, X26
	084 Move W2, W21
	085 Move W4, W19
	086 Move X20, [X31+80]
	087 Move X19, [X31+88]
	088 Move X22, [X31+64]
	089 Move X21, [X31+72]
	090 Move X24, [X31+48]
	091 Move X23, [X31+56]
	092 Move X26, [X31+32]
	093 Move X25, [X31+40]
	094 Move X28, [X31+16]
	095 Move X27, [X31+24]
	096 Move X30, [X31+96]
	097 Move X0, 0xE30000
	098 Move X0, [X0+1080]
	099 Call 0x1C17D08
	100 Move X1, X31
	101 Call Locale.GetText, X0
	102 Move X19, X0
	103 Move X0, 0xE04000
	104 Move X0, [X0+1400]
	105 Call 0x1C17D08
	106 Call 0x1C17F10
	107 Move X20, X0
	108 Move X0, 0xE30000
	109 Move X0, [X0+1088]
	110 Call 0x1C17D08
	111 Move X1, X0
	112 Move X0, X20
	113 Move X2, X19
	114 Move X3, X31
	115 Call ArgumentException..ctor, X0, X1, X2
	116 Move X0, 0xE30000
	117 Move X0, [X0+1096]
	118 Call 0x1C17D08
	119 Move X1, X0
	120 Move X0, X20
	121 Call 0x1C17DEC

Method: System.Void .ctor(System.String path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share)

Disassembly:
	0x032F92DC MOV X20, X0
	0x032F92E0 TBNZ X8, 0x0, 0x32F92F8
	0x032F92E4 ADRP X0, 0xE21000
	0x032F92E8 LDR X0, [X0 + 0x1D0]
	0x032F92EC BL 0x1C16CF4
	0x032F92F0 MOVZ W8, 0x1
	0x032F92F4 STRB W8, [X22 + 0xA86]
	0x032F92F8 LDR X0, [X21]
	0x032F92FC LDRB W20, [X20 + 0x57]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move W5, 4096
	004 Move W6, W31
	005 Move W7, W31
	006 Call FileStream..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	007 Move X30, [X31+16]
	008 Add X31, X31, 32
	009 Return 

Method: System.Void .ctor(System.String path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, System.Int32 bufferSize)

Disassembly:
	0x032F99E8 MOV X19, X0
	0x032F99EC LDR X8, [X8]
	0x032F99F0 MOV X0, X8
	0x032F99F4 BL 0x1C16F10
	0x032F99F8 MOVZ W8, 0x80070000
	0x032F99FC MOV X20, X0
	0x032F9A00 ORR W2, W8, 0x6
	0x032F9A04 B 0x32F98BC

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move W6, W31
	004 Move W7, W31
	005 Call FileStream..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	006 Move X30, [X31+16]
	007 Add X31, X31, 32
	008 Return 

Method: System.Void .ctor(System.String path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, System.Int32 bufferSize, System.Boolean useAsync)

Disassembly:
	0x032EF9EC ADRP X8, 0xE38000
	0x032EF9F0 LDR X8, [X8 + 0x78]
	0x032EF9F4 ADRP X22, 0xE38000
	0x032EF9F8 ADRP X24, 0xE09000
	0x032EF9FC MOV X3, X0
	0x032EFA00 LDR X1, [X8]
	0x032EFA04 LDR X22, [X22 + 0x80]
	0x032EFA08 LDR X24, [X24 + 0x170]
	0x032EFA0C MOV X0, X19
	0x032EFA10 MOV X2, X21

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 And W31, W6, 1
	004 Move W8, 0x40000000
	005 NotImplemented "Instruction CSEL not yet implemented."
	006 Move W6, W31
	007 Call FileStream..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	008 Move X30, [X31+16]
	009 Add X31, X31, 32
	010 Return 

Method: System.Void .ctor(System.String path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, System.Int32 bufferSize, System.IO.FileOptions options)

Disassembly:
	0x032F9A08 ADRP X8, 0xE2E000
	0x032F9A0C LDR X8, [X8 + 0x518]
	0x032F9A10 MOV X1, X19
	0x032F9A14 MOV X2, X31
	0x032F9A18 LDR X0, [X8]
	0x032F9A1C BL 0x321EFD0
	0x032F9A20 ADRP X8, 0xE28000
	0x032F9A24 LDR X8, [X8 + 0x7A8]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move W7, W6
	004 Move W6, W31
	005 Call FileStream..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	006 Move X30, [X31+16]
	007 Add X31, X31, 32
	008 Return 

Method: System.Void .ctor(Microsoft.Win32.SafeHandles.SafeFileHandle handle, System.IO.FileAccess access)

Disassembly:
	0x032F9A28 MOV X19, X0
	0x032F9A2C LDR X8, [X8]
	0x032F9A30 MOV X0, X8

ISIL:
	001 Move W3, 4096
	002 Move W4, W31

Method: System.Void .ctor(Microsoft.Win32.SafeHandles.SafeFileHandle handle, System.IO.FileAccess access, System.Int32 bufferSize, System.Boolean isAsync)

Disassembly:
	0x032F9A34 BL 0x1C16F10
	0x032F9A38 MOVZ W8, 0x80070000
	0x032F9A3C MOV X20, X0
	0x032F9A40 ORR W2, W8, 0xF
	0x032F9A44 B 0x32F98BC
	0x032F9A48 ADRP X8, 0xE28000
	0x032F9A4C LDR X8, [X8 + 0x7A8]
	0x032F9A50 LDR X0, [X8]
	0x032F9A54 BL 0x1C16F10
	0x032F9A58 ADRP X8, 0xE2E000
	0x032F9A5C LDR X8, [X8 + 0x520]
	0x032F9A60 MOV X20, X0
	0x032F9A64 LDR X1, [X8]
	0x032F9A68 MOVZ W8, 0x11
	0x032F9A6C MOVZ W9, 0x80070000
	0x032F9A70 ORR W2, W9, W8, 0x0
	0x032F9A74 B 0x32F98C0
	0x032F9A78 SUB X31, X31, 0x30
	0x032F9A7C STP X30, X21, [X31 + 0x10]
	0x032F9A80 STP X20, X19, [X31 + 0x20]
	0x032F9A84 ADRP X21, 0x10E3000
	0x032F9A88 LDRB W8, [X21 + 0xA8F]
	0x032F9A8C MOV X20, X1
	0x032F9A90 MOV X19, X0
	0x032F9A94 TBNZ X8, 0x0, 0x32F9AAC
	0x032F9A98 ADRP X0, 0xE28000
	0x032F9A9C LDR X0, [X0 + 0xFA8]
	0x032F9AA0 BL 0x1C16CF4
	0x032F9AA4 MOVZ W8, 0x1
	0x032F9AA8 STRB W8, [X21 + 0xA8F]
	0x032F9AAC STRB W31, [X31 + 0xC]
	0x032F9AB0 CBZ X19, 0x32F9B20
	0x032F9AB4 ADD X1, X31, 0xC
	0x032F9AB8 MOV X0, X19
	0x032F9ABC MOV X2, X31
	0x032F9AC0 BL 0x32BF948
	0x032F9AC4 ADRP X8, 0xE28000
	0x032F9AC8 LDR X8, [X8 + 0xFA8]
	0x032F9ACC LDR X21, [X19 + 0x10]
	0x032F9AD0 LDR X0, [X8]
	0x032F9AD4 LDR W8, [X0 + 0xE0]
	0x032F9AD8 CBNZ W8, 0x32F9AE0
	0x032F9ADC BL 0x1C16DFC
	0x032F9AE0 MOV X0, X21
	0x032F9AE4 MOV X1, X20
	0x032F9AE8 BL 0x1C283CC
	0x032F9AEC LDRB W8, [X31 + 0xC]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x10E4000
	011 Move X26, 0xE2F000
	012 Move X24, 0xE2A000
	013 Move W8, [X25+2677]
	014 Move X26, [X26+1064]
	015 Move X24, [X24+3344]
	016 Move W22, W4
	017 Move W19, W3
	018 Move W20, W2
	019 Move X21, X1
	020 Move X23, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xE2A000
	026 Move X0, [X0+3344]
	027 Call 0x1C17CF4
	028 Move X0, 0xE2F000
	029 Move X0, [X0+1064]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X25+2677], W8
	033 Move X8, [X26]
	034 Move [X23+48], X8
	035 Move X0, [X24]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X23
	041 Move X1, X31
	042 Call MarshalByRefObject..ctor, X0
	043 And W5, W22, 1
	044 Move X0, X23
	045 Move X1, X21
	046 Move W2, W20
	047 Move W4, W19
	048 Move X20, [X31+64]
	049 Move X19, [X31+72]
	050 Move X22, [X31+48]
	051 Move X21, [X31+56]
	052 Move X24, [X31+32]
	053 Move X23, [X31+40]
	054 Move X26, [X31+16]
	055 Move X25, [X31+24]
	056 Move W3, W31
	057 Move W6, W31
	058 Move X30, [X31+80]
	059 Call FileStream.Init, X0, X1, X2, X3, X4, X5, X6
	060 Return 

Method: System.Void .ctor(System.String path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, System.Int32 bufferSize, System.Boolean anonymous, System.IO.FileOptions options)

Disassembly:
	0x032F9300 LDR W8, [X0 + 0xE0]
	0x032F9304 CBNZ W8, 0x32F930C
	0x032F9308 BL 0x1C16DFC
	0x032F930C MOV X0, X19
	0x032F9310 CBZ W20, 0x32F9324
	0x032F9314 LDP X20, X19, [X31 + 0x20]
	0x032F9318 LDP X22, X21, [X31 + 0x10]
	0x032F931C LDR X30, [X31], #0x30
	0x032F9320 B 0x32EE348
	0x032F9324 LDP X20, X19, [X31 + 0x20]
	0x032F9328 LDP X22, X21, [X31 + 0x10]
	0x032F932C LDR X30, [X31], #0x30
	0x032F9330 B 0x32EE2E0
	0x032F9334 SUB X31, X31, 0x30
	0x032F9338 STP X30, X21, [X31 + 0x10]
	0x032F933C STP X20, X19, [X31 + 0x20]
	0x032F9340 ADRP X20, 0x10E3000
	0x032F9344 LDRB W8, [X20 + 0xA8E]
	0x032F9348 MOV W21, W1
	0x032F934C MOV X19, X0
	0x032F9350 TBNZ X8, 0x0, 0x32F94A0
	0x032F9354 ADRP X0, 0xDFA000
	0x032F9358 LDR X0, [X0 + 0x9C8]
	0x032F935C BL 0x1C16CF4
	0x032F9360 ADRP X0, 0xE28000
	0x032F9364 LDR X0, [X0 + 0x798]
	0x032F9368 BL 0x1C16CF4
	0x032F936C ADRP X0, 0xE28000
	0x032F9370 LDR X0, [X0 + 0x7A0]
	0x032F9374 BL 0x1C16CF4
	0x032F9378 ADRP X0, 0xE28000
	0x032F937C LDR X0, [X0 + 0x7A8]
	0x032F9380 BL 0x1C16CF4
	0x032F9384 ADRP X0, 0xE2E000
	0x032F9388 LDR X0, [X0 + 0x4C8]
	0x032F938C BL 0x1C16CF4
	0x032F9390 ADRP X0, 0xE28000
	0x032F9394 LDR X0, [X0 + 0xFA8]
	0x032F9398 BL 0x1C16CF4
	0x032F939C ADRP X0, 0xE28000
	0x032F93A0 LDR X0, [X0 + 0x7B0]
	0x032F93A4 BL 0x1C16CF4
	0x032F93A8 ADRP X0, 0xE28000
	0x032F93AC LDR X0, [X0 + 0x7B8]
	0x032F93B0 BL 0x1C16CF4
	0x032F93B4 ADRP X0, 0xE2E000
	0x032F93B8 LDR X0, [X0 + 0x4D0]
	0x032F93BC BL 0x1C16CF4
	0x032F93C0 ADRP X0, 0xE2E000
	0x032F93C4 LDR X0, [X0 + 0x4D8]
	0x032F93C8 BL 0x1C16CF4
	0x032F93CC ADRP X0, 0xE2E000
	0x032F93D0 LDR X0, [X0 + 0x4E0]
	0x032F93D4 BL 0x1C16CF4
	0x032F93D8 ADRP X0, 0xE2E000
	0x032F93DC LDR X0, [X0 + 0x4E8]
	0x032F93E0 BL 0x1C16CF4
	0x032F93E4 ADRP X0, 0xE2E000
	0x032F93E8 LDR X0, [X0 + 0x4F0]
	0x032F93EC BL 0x1C16CF4
	0x032F93F0 ADRP X0, 0xE2E000
	0x032F93F4 LDR X0, [X0 + 0x4F8]
	0x032F93F8 BL 0x1C16CF4
	0x032F93FC ADRP X0, 0xE2E000
	0x032F9400 LDR X0, [X0 + 0x500]
	0x032F9404 BL 0x1C16CF4
	0x032F9408 ADRP X0, 0xE2E000
	0x032F940C LDR X0, [X0 + 0x508]
	0x032F9410 BL 0x1C16CF4
	0x032F9414 ADRP X0, 0xE2E000
	0x032F9418 LDR X0, [X0 + 0x510]
	0x032F941C BL 0x1C16CF4
	0x032F9420 ADRP X0, 0xE2E000
	0x032F9424 LDR X0, [X0 + 0x518]
	0x032F9428 BL 0x1C16CF4
	0x032F942C ADRP X0, 0xE2E000
	0x032F9430 LDR X0, [X0 + 0x520]
	0x032F9434 BL 0x1C16CF4
	0x032F9438 ADRP X0, 0xE2E000
	0x032F943C LDR X0, [X0 + 0x528]
	0x032F9440 BL 0x1C16CF4
	0x032F9444 ADRP X0, 0xE2E000
	0x032F9448 LDR X0, [X0 + 0x530]
	0x032F944C BL 0x1C16CF4
	0x032F9450 ADRP X0, 0xE2E000
	0x032F9454 LDR X0, [X0 + 0x538]
	0x032F9458 BL 0x1C16CF4
	0x032F945C ADRP X0, 0xE2E000
	0x032F9460 LDR X0, [X0 + 0x540]
	0x032F9464 BL 0x1C16CF4
	0x032F9468 ADRP X0, 0xE2E000
	0x032F946C LDR X0, [X0 + 0x548]
	0x032F9470 BL 0x1C16CF4
	0x032F9474 ADRP X0, 0xE2E000
	0x032F9478 LDR X0, [X0 + 0x550]
	0x032F947C BL 0x1C16CF4
	0x032F9480 ADRP X0, 0xE2E000
	0x032F9484 LDR X0, [X0 + 0x558]
	0x032F9488 BL 0x1C16CF4
	0x032F948C ADRP X0, 0xE2E000
	0x032F9490 LDR X0, [X0 + 0x560]
	0x032F9494 BL 0x1C16CF4
	0x032F9498 MOVZ W8, 0x1
	0x032F949C STRB W8, [X20 + 0xA8E]
	0x032F94A0 CMP W21, 0x50
	0x032F94A4 B.LE 0x32F94F8
	0x032F94A8 CMP W21, 0x91
	0x032F94AC B.LE 0x32F955C
	0x032F94B0 CMP W21, 0xCE
	0x032F94B4 B.EQ 0x32F96CC
	0x032F94B8 CMP W21, 0x10B
	0x032F94BC B.EQ 0x32F9710
	0x032F94C0 MOVZ W8, 0x1770
	0x032F94C4 CMP W21, W8
	0x032F94C8 B.NE 0x32F966C
	0x032F94CC ADRP X8, 0xE28000
	0x032F94D0 LDR X8, [X8 + 0x7A8]
	0x032F94D4 LDR X0, [X8]
	0x032F94D8 BL 0x1C16F10
	0x032F94DC ADRP X8, 0xE2E000
	0x032F94E0 LDR X8, [X8 + 0x4F0]
	0x032F94E4 MOVZ W2, 0x1770
	0x032F94E8 MOV X20, X0
	0x032F94EC MOVK W2, 0x80070000
	0x032F94F0 LDR X1, [X8]
	0x032F94F4 B 0x32F98C0
	0x032F94F8 CMP W21, 0x11
	0x032F94FC B.LE 0x32F95B0
	0x032F9500 CMP W21, 0x20
	0x032F9504 B.LE 0x32F961C
	0x032F9508 CMP W21, 0x21
	0x032F950C B.EQ 0x32F9804
	0x032F9510 CMP W21, 0x27
	0x032F9514 B.EQ 0x32F9840
	0x032F9518 CMP W21, 0x50
	0x032F951C B.NE 0x32F966C
	0x032F9520 ADRP X8, 0xE2E000
	0x032F9524 LDR X8, [X8 + 0x4D8]
	0x032F9528 MOV X1, X19
	0x032F952C MOV X2, X31
	0x032F9530 LDR X0, [X8]
	0x032F9534 BL 0x321EFD0
	0x032F9538 ADRP X8, 0xE28000
	0x032F953C LDR X8, [X8 + 0x7A8]
	0x032F9540 MOV X19, X0
	0x032F9544 LDR X8, [X8]
	0x032F9548 MOV X0, X8
	0x032F954C BL 0x1C16F10
	0x032F9550 MOV X20, X0
	0x032F9554 MOVZ W8, 0x50
	0x032F9558 B 0x32F98B4
	0x032F955C CMP W21, 0x52
	0x032F9560 B.EQ 0x32F9738
	0x032F9564 CMP W21, 0x57
	0x032F9568 B.EQ 0x32F9774
	0x032F956C CMP W21, 0x91
	0x032F9570 B.NE 0x32F966C
	0x032F9574 ADRP X8, 0xE2E000
	0x032F9578 LDR X8, [X8 + 0x530]
	0x032F957C MOV X1, X19
	0x032F9580 MOV X2, X31
	0x032F9584 LDR X0, [X8]
	0x032F9588 BL 0x321EFD0
	0x032F958C ADRP X8, 0xE28000
	0x032F9590 LDR X8, [X8 + 0x7A8]
	0x032F9594 MOV X19, X0
	0x032F9598 LDR X8, [X8]
	0x032F959C MOV X0, X8
	0x032F95A0 BL 0x1C16F10
	0x032F95A4 MOV X20, X0
	0x032F95A8 MOVZ W8, 0x91
	0x032F95AC B 0x32F98B4
	0x032F95B0 SUB W8, W21, 0x2
	0x032F95B4 CMP W8, 0xF
	0x032F95B8 B.HI 0x32F966C
	0x032F95BC ADRP X9, 0xFFFFFFFFFD89D000
	0x032F95C0 ADD X9, X9, 0x624
	0x032F95C4 ADR X10, 0x10
	0x032F95C8 LDRH W11, [X9, X8, LSL #1]
	0x032F95CC ADD X10, X10, X11, 0x2, LSL
	0x032F95D0 BR X10
	0x032F95D4 ADRP X8, 0xE2E000
	0x032F95D8 LDR X8, [X8 + 0x558]
	0x032F95DC MOV X1, X19
	0x032F95E0 MOV X2, X31
	0x032F95E4 LDR X0, [X8]
	0x032F95E8 BL 0x321EFD0
	0x032F95EC ADRP X8, 0xE28000
	0x032F95F0 LDR X8, [X8 + 0x7A0]
	0x032F95F4 MOV X21, X0
	0x032F95F8 LDR X8, [X8]
	0x032F95FC MOV X0, X8
	0x032F9600 BL 0x1C16F10
	0x032F9604 MOV X1, X21
	0x032F9608 MOV X2, X19
	0x032F960C MOV X3, X31
	0x032F9610 MOV X20, X0
	0x032F9614 BL 0x32E1E8C
	0x032F9618 B 0x32F98C8
	0x032F961C CMP W21, 0x1D
	0x032F9620 B.EQ 0x32F987C
	0x032F9624 CMP W21, 0x20
	0x032F9628 B.NE 0x32F966C
	0x032F962C ADRP X8, 0xE2E000
	0x032F9630 LDR X8, [X8 + 0x510]
	0x032F9634 MOV X1, X19
	0x032F9638 MOV X2, X31
	0x032F963C LDR X0, [X8]
	0x032F9640 BL 0x321EFD0
	0x032F9644 ADRP X8, 0xE28000
	0x032F9648 LDR X8, [X8 + 0x7A8]
	0x032F964C MOV X19, X0
	0x032F9650 LDR X8, [X8]
	0x032F9654 MOV X0, X8
	0x032F9658 BL 0x1C16F10
	0x032F965C MOVZ W8, 0x80070000
	0x032F9660 MOV X20, X0
	0x032F9664 ORR W2, W8, 0x20
	0x032F9668 B 0x32F98BC
	0x032F966C ADRP X8, 0xE2E000
	0x032F9670 LDR X8, [X8 + 0x4C8]
	0x032F9674 ADD X1, X31, 0xC
	0x032F9678 STR W21, [X31 + 0xC]
	0x032F967C LDR X0, [X8]
	0x032F9680 BL 0x1C16E04
	0x032F9684 ADRP X8, 0xE2E000
	0x032F9688 LDR X8, [X8 + 0x4E8]
	0x032F968C MOV X1, X0
	0x032F9690 MOV X2, X19
	0x032F9694 MOV X3, X31
	0x032F9698 LDR X8, [X8]
	0x032F969C MOV X0, X8
	0x032F96A0 BL 0x3227BD4
	0x032F96A4 ADRP X8, 0xE28000
	0x032F96A8 LDR X8, [X8 + 0x7A8]
	0x032F96AC MOV X19, X0
	0x032F96B0 LDR X8, [X8]
	0x032F96B4 MOV X0, X8
	0x032F96B8 BL 0x1C16F10
	0x032F96BC MOVZ W8, 0x80070000
	0x032F96C0 MOV X20, X0
	0x032F96C4 ORR W2, W21, W8, 0x0
	0x032F96C8 B 0x32F98BC
	0x032F96CC ADRP X8, 0xE2E000
	0x032F96D0 LDR X8, [X8 + 0x548]
	0x032F96D4 MOV X1, X19
	0x032F96D8 MOV X2, X31
	0x032F96DC LDR X0, [X8]
	0x032F96E0 BL 0x321EFD0
	0x032F96E4 ADRP X8, 0xE28000
	0x032F96E8 LDR X8, [X8 + 0x7B0]
	0x032F96EC MOV X19, X0
	0x032F96F0 LDR X8, [X8]
	0x032F96F4 MOV X0, X8
	0x032F96F8 BL 0x1C16F10
	0x032F96FC MOV X1, X19
	0x032F9700 MOV X2, X31
	0x032F9704 MOV X20, X0
	0x032F9708 BL 0x32E5A1C
	0x032F970C B 0x32F98C8
	0x032F9710 ADRP X8, 0xE28000
	0x032F9714 LDR X8, [X8 + 0x7A8]
	0x032F9718 LDR X0, [X8]
	0x032F971C BL 0x1C16F10
	0x032F9720 ADRP X8, 0xE2E000
	0x032F9724 LDR X8, [X8 + 0x538]
	0x032F9728 MOV X20, X0
	0x032F972C LDR X1, [X8]
	0x032F9730 MOVZ W8, 0x10B
	0x032F9734 B 0x32F9A6C
	0x032F9738 ADRP X8, 0xE2E000
	0x032F973C LDR X8, [X8 + 0x500]
	0x032F9740 MOV X1, X19
	0x032F9744 MOV X2, X31
	0x032F9748 LDR X0, [X8]
	0x032F974C BL 0x321EFD0
	0x032F9750 ADRP X8, 0xE28000
	0x032F9754 LDR X8, [X8 + 0x7A8]
	0x032F9758 MOV X19, X0
	0x032F975C LDR X8, [X8]
	0x032F9760 MOV X0, X8
	0x032F9764 BL 0x1C16F10
	0x032F9768 MOV X20, X0
	0x032F976C MOVZ W8, 0x52
	0x032F9770 B 0x32F98B4
	0x032F9774 ADRP X8, 0xDFA000
	0x032F9778 LDR X8, [X8 + 0x9C8]
	0x032F977C LDR X19, [X8]
	0x032F9780 LDR X8, [X19 + 0x38]
	0x032F9784 CBNZ X8, 0x32F9794
	0x032F9788 MOV X0, X19
	0x032F978C BL 0x1C5C6E0
	0x032F9790 LDR X8, [X19 + 0x38]
	0x032F9794 LDR X0, [X8 + 0x10]
	0x032F9798 LDRB W8, [X0 + 0x135]
	0x032F979C TBNZ X8, 0x0, 0x32F97A4
	0x032F97A0 BL 0x1C5C684
	0x032F97A4 LDR W8, [X0 + 0xE0]
	0x032F97A8 CBNZ W8, 0x32F97B0
	0x032F97AC BL 0x1C16DFC
	0x032F97B0 LDR X8, [X19 + 0x38]
	0x032F97B4 LDR X0, [X8 + 0x10]
	0x032F97B8 LDRB W8, [X0 + 0x135]
	0x032F97BC TBNZ X8, 0x0, 0x32F97C4
	0x032F97C0 BL 0x1C5C684
	0x032F97C4 ADRP X9, 0xE2E000
	0x032F97C8 LDR X8, [X0 + 0xB8]
	0x032F97CC LDR X9, [X9 + 0x508]
	0x032F97D0 MOV X2, X31
	0x032F97D4 LDR X1, [X8]
	0x032F97D8 LDR X0, [X9]
	0x032F97DC BL 0x3227C5C
	0x032F97E0 ADRP X8, 0xE28000
	0x032F97E4 LDR X8, [X8 + 0x7A8]
	0x032F97E8 MOV X19, X0
	0x032F97EC LDR X8, [X8]
	0x032F97F0 MOV X0, X8
	0x032F97F4 BL 0x1C16F10
	0x032F97F8 MOV X20, X0
	0x032F97FC MOVZ W8, 0x57
	0x032F9800 B 0x32F98B4
	0x032F9804 ADRP X8, 0xE2E000
	0x032F9808 LDR X8, [X8 + 0x550]
	0x032F980C MOV X1, X19
	0x032F9810 MOV X2, X31
	0x032F9814 LDR X0, [X8]
	0x032F9818 BL 0x321EFD0
	0x032F981C ADRP X8, 0xE28000
	0x032F9820 LDR X8, [X8 + 0x7A8]
	0x032F9824 MOV X19, X0
	0x032F9828 LDR X8, [X8]
	0x032F982C MOV X0, X8
	0x032F9830 BL 0x1C16F10
	0x032F9834 MOV X20, X0
	0x032F9838 MOVZ W8, 0x21
	0x032F983C B 0x32F98B4
	0x032F9840 ADRP X8, 0xE2E000
	0x032F9844 LDR X8, [X8 + 0x540]
	0x032F9848 MOV X1, X19
	0x032F984C MOV X2, X31
	0x032F9850 LDR X0, [X8]
	0x032F9854 BL 0x321EFD0
	0x032F9858 ADRP X8, 0xE28000
	0x032F985C LDR X8, [X8 + 0x7A8]
	0x032F9860 MOV X19, X0
	0x032F9864 LDR X8, [X8]
	0x032F9868 MOV X0, X8
	0x032F986C BL 0x1C16F10
	0x032F9870 MOV X20, X0
	0x032F9874 MOVZ W8, 0x27
	0x032F9878 B 0x32F98B4
	0x032F987C ADRP X8, 0xE2E000
	0x032F9880 LDR X8, [X8 + 0x528]
	0x032F9884 MOV X1, X19
	0x032F9888 MOV X2, X31
	0x032F988C LDR X0, [X8]
	0x032F9890 BL 0x321EFD0
	0x032F9894 ADRP X8, 0xE28000
	0x032F9898 LDR X8, [X8 + 0x7A8]
	0x032F989C MOV X19, X0
	0x032F98A0 LDR X8, [X8]
	0x032F98A4 MOV X0, X8
	0x032F98A8 BL 0x1C16F10
	0x032F98AC MOV X20, X0
	0x032F98B0 MOVZ W8, 0x1D
	0x032F98B4 MOVZ W9, 0x80070000
	0x032F98B8 ORR W2, W9, W8, 0x0
	0x032F98BC MOV X1, X19
	0x032F98C0 MOV X3, X31
	0x032F98C4 BL 0x32E2368
	0x032F98C8 MOV X0, X20
	0x032F98CC LDP X20, X19, [X31 + 0x20]
	0x032F98D0 LDP X30, X21, [X31 + 0x10]
	0x032F98D4 ADD X31, X31, 0x30
	0x032F98D8 RET
	0x032F98DC ADRP X8, 0xE2E000
	0x032F98E0 LDR X8, [X8 + 0x4E0]
	0x032F98E4 MOV X1, X19
	0x032F98E8 MOV X2, X31
	0x032F98EC LDR X0, [X8]
	0x032F98F0 BL 0x321EFD0
	0x032F98F4 ADRP X8, 0xE28000
	0x032F98F8 LDR X8, [X8 + 0x798]
	0x032F98FC MOV X19, X0
	0x032F9900 LDR X8, [X8]
	0x032F9904 MOV X0, X8
	0x032F9908 BL 0x1C16F10
	0x032F990C MOV X1, X19
	0x032F9910 MOV X2, X31
	0x032F9914 MOV X20, X0
	0x032F9918 BL 0x32E16E0
	0x032F991C B 0x32F98C8
	0x032F9920 ADRP X19, 0xE28000
	0x032F9924 LDR X19, [X19 + 0xFA8]
	0x032F9928 LDR X0, [X19]
	0x032F992C LDR W8, [X0 + 0xE0]
	0x032F9930 CBNZ W8, 0x32F993C
	0x032F9934 BL 0x1C16DFC
	0x032F9938 LDR X0, [X19]
	0x032F993C LDR X8, [X0 + 0xB8]
	0x032F9940 LDRB W8, [X8 + 0x8]
	0x032F9944 CBZ W8, 0x32F9958
	0x032F9948 LDR W8, [X0 + 0xE0]
	0x032F994C CBNZ W8, 0x32F9954
	0x032F9950 BL 0x1C16DFC
	0x032F9954 BL 0x1C16CAC
	0x032F9958 ADRP X8, 0xE28000
	0x032F995C LDR X8, [X8 + 0x7A8]
	0x032F9960 LDR X0, [X8]
	0x032F9964 BL 0x1C16F10
	0x032F9968 ADRP X8, 0xE2E000
	0x032F996C LDR X8, [X8 + 0x560]
	0x032F9970 MOV X20, X0
	0x032F9974 LDR X1, [X8]
	0x032F9978 MOVZ W8, 0x80070000
	0x032F997C ORR W2, W8, 0x4
	0x032F9980 B 0x32F98C0
	0x032F9984 ADRP X8, 0xE2E000
	0x032F9988 LDR X8, [X8 + 0x4D0]
	0x032F998C MOV X1, X19
	0x032F9990 MOV X2, X31
	0x032F9994 LDR X0, [X8]
	0x032F9998 BL 0x321EFD0
	0x032F999C ADRP X8, 0xE28000
	0x032F99A0 LDR X8, [X8 + 0x7B8]
	0x032F99A4 MOV X19, X0
	0x032F99A8 LDR X8, [X8]
	0x032F99AC MOV X0, X8
	0x032F99B0 BL 0x1C16F10
	0x032F99B4 MOV X1, X19
	0x032F99B8 MOV X2, X31
	0x032F99BC MOV X20, X0
	0x032F99C0 BL 0x339B6AC
	0x032F99C4 B 0x32F98C8
	0x032F99C8 ADRP X8, 0xE2E000
	0x032F99CC LDR X8, [X8 + 0x4F8]
	0x032F99D0 MOV X1, X19
	0x032F99D4 MOV X2, X31
	0x032F99D8 LDR X0, [X8]
	0x032F99DC BL 0x321EFD0
	0x032F99E0 ADRP X8, 0xE28000
	0x032F99E4 LDR X8, [X8 + 0x7A8]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X29, 0x10E4000
	015 Move X27, 0xE2F000
	016 Move X28, 0xE2A000
	017 Move W8, [X29+2678]
	018 Move X27, [X27+1064]
	019 Move X28, [X28+3344]
	020 Move W23, W7
	021 Move W24, W6
	022 Move W21, W5
	023 Move W26, W4
	024 Move W22, W3
	025 Move W20, W2
	026 Move X25, X1
	027 Move X19, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {49}
	032 Move X0, 0xE29000
	033 Move X0, [X0+4008]
	034 Call 0x1C17CF4
	035 Move X0, 0xE22000
	036 Move X0, [X0+464]
	037 Call 0x1C17CF4
	038 Move X0, 0xE2F000
	039 Move X0, [X0+1072]
	040 Call 0x1C17CF4
	041 Move X0, 0xE2A000
	042 Move X0, [X0+3344]
	043 Call 0x1C17CF4
	044 Move X0, 0xE2F000
	045 Move X0, [X0+1064]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X29+2678], W8
	049 Move X8, [X27]
	050 Move [X31+12], W31
	051 Move [X19+48], X8
	052 Move X0, [X28]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X0, X19
	058 Move X1, X31
	059 Call MarshalByRefObject..ctor, X0
	060 Compare X25, 0
	061 JumpIfEqual {255}
	062 Move W8, [X25+16]
	063 Compare W8, 0
	064 JumpIfEqual {267}
	065 And W8, W24, 1
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move [X19+87], W8
	068 Subtract W8, W20, 1
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Subtract W8, W22, 1
	071 NotImplemented "Instruction CMP not yet implemented."
	072 And W26, W26, 0xFFFFFFEF
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X29, 0xE22000
	075 Move X29, [X29+464]
	076 Move X0, [X29]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {82}
	080 Call 0x1C17DFC
	081 Move X0, [X29]
	082 Move X8, [X0+184]
	083 Move X0, X25
	084 Move X2, X31
	085 Move X1, [X8]
	086 Call String.IndexOfAny, X0, X1
	087 Add W31, W0, 1
	088 Move X0, [X29]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Move X0, X25
	094 Call Path.InsecureGetFullPath, X0
	095 Move X1, X31
	096 Move X25, X0
	097 Call Directory.Exists, X0
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {327}
	102 Move TEMP, X22
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {107}
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Subtract W8, W20, 3
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move TEMP, X22
	110 And TEMP, TEMP, 2
	111 Compare TEMP, 2
	112 JumpIfNotEqual {362}
	113 Move X0, X31
	114 Call SecurityManager.EnsureElevatedPermissions
	115 Move X0, [X29]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1C17DFC
	120 Move X0, X25
	121 Call Path.GetDirectoryName, X0
	122 Compare X0, 0
	123 JumpIfEqual {395}
	124 Move W8, [X0+16]
	125 Move X27, X0
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X0, [X29]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Move X0, X27
	133 Call Path.GetFullPath, X0
	134 Move X1, X31
	135 Call Directory.Exists, X0
	136 Move TEMP, X0
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfNotEqual {409}
	140 Move X27, 0xE29000
	141 Move X27, [X27+4008]
	142 Move TEMP, X24
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfEqual {147}
	146 Move [X19+48], X25
	147 Move X0, [X27]
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {152}
	151 Call 0x1C17DFC
	152 Add X5, X31, 12
	153 Move X0, X25
	154 Move W1, W20
	155 Move W2, W22
	156 Move W3, W26
	157 Move W4, W23
	158 Call MonoIO.Open, X0, X1, X2, X3, X4, X5
	159 Move X8, [X27]
	160 Move X2, X31
	161 Move X26, X0
	162 Move X8, [X8+184]
	163 Move X1, [X8]
	164 Call IntPtr.op_Equality, X0, X1
	165 Move TEMP, X0
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfEqual {396}
	169 Move X8, 0xE2F000
	170 Move X8, [X8+1072]
	171 Move X0, [X8]
	172 Call 0x1C17F10
	173 Move X1, X26
	174 Move W2, W31
	175 Move X3, X31
	176 Move X24, X0
	177 Call SafeFileHandle..ctor, X0, X1, X2
	178 Move W8, 1
	179 Move [X19+56], X24
	180 Move [X19+80], W22
	181 Move [X19+84], W8
	182 Move X0, [X27]
	183 Move W8, [X0+224]
	184 Compare W8, 0
	185 JumpIfNotEqual {187}
	186 Call 0x1C17DFC
	187 Add X1, X31, 12
	188 Move X0, X24
	189 Call MonoIO.GetFileType, X0, X1
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move W8, 1
	192 Move [X19+86], W8
	193 Move W8, W23
	194 ShiftRight W8, 30
	195 And W8, W8, 0x3FFFFFFF
	196 Move W8, W31
	197 Move [X19+86], W31
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move [X19+85], W8
	200 NotImplemented "Instruction CMP not yet implemented."
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move X0, [X28]
	203 Move W8, [X0+224]
	204 Compare W8, 0
	205 JumpIfNotEqual {207}
	206 Call 0x1C17DFC
	207 Move X8, [X19]
	208 Move X0, X19
	209 Move X9, [X8+488]
	210 Move X1, [X8+496]
	211 NotImplemented "Instruction BLR not yet implemented."
	212 NotImplemented "Instruction CMP not yet implemented."
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move W8, 1000
	215 NotImplemented "Instruction CSEL not yet implemented."
	216 Move W21, 4096
	217 Move X0, X19
	218 Move W1, W21
	219 Move W2, W31
	220 Call FileStream.InitBuffer, X0, X1, X2
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move X0, [X28]
	223 Move W8, [X0+224]
	224 Compare W8, 0
	225 JumpIfNotEqual {227}
	226 Call 0x1C17DFC
	227 Move X8, [X19]
	228 Move W2, 2
	229 Move X0, X19
	230 Move X1, X31
	231 Move X9, [X8+824]
	232 Move X3, [X8+832]
	233 NotImplemented "Instruction BLR not yet implemented."
	234 Move X8, [X19]
	235 Move X0, X19
	236 Move X9, [X8+504]
	237 Move X1, [X8+512]
	238 NotImplemented "Instruction BLR not yet implemented."
	239 Move X0, X31
	240 Move [X19+72], X0
	241 Move X20, [X31+96]
	242 Move X19, [X31+104]
	243 Move X22, [X31+80]
	244 Move X21, [X31+88]
	245 Move X24, [X31+64]
	246 Move X23, [X31+72]
	247 Move X26, [X31+48]
	248 Move X25, [X31+56]
	249 Move X28, [X31+32]
	250 Move X27, [X31+40]
	251 Move X29, [X31+16]
	252 Move X30, [X31+24]
	253 Add X31, X31, 112
	254 Return 
	255 Move X0, 0xE00000
	256 Move X0, [X0+1320]
	257 Call 0x1C17D08
	258 Call 0x1C17F10
	259 Move X19, X0
	260 Move X0, 0xE06000
	261 Move X0, [X0+288]
	262 Call 0x1C17D08
	263 Move X1, X0
	264 Move X0, X19
	265 Move X2, X31
	266 Call ArgumentNullException..ctor, X0, X1
	267 Move X0, 0xE03000
	268 Move X0, [X0+1400]
	269 Call 0x1C17D08
	270 Call 0x1C17F10
	271 Move X19, X0
	272 Move X0, 0xE2F000
	273 Move X0, [X0+1120]
	274 Move X0, 0xE03000
	275 Move X0, [X0+1888]
	276 Call 0x1C17D08
	277 Call 0x1C17F10
	278 Move X19, X0
	279 Move X0, 0xE26000
	280 Move X0, [X0+3928]
	281 Call 0x1C17D08
	282 Move X20, X0
	283 Move X0, 0xE2E000
	284 Move X0, [X0+3368]
	285 Move TEMP, X24
	286 And TEMP, TEMP, 1
	287 Compare TEMP, 1
	288 JumpIfNotEqual {448}
	289 Move X0, 0xE03000
	290 Move X0, [X0+1400]
	291 Call 0x1C17D08
	292 Call 0x1C17F10
	293 Move X19, X0
	294 Move X0, 0xE2C000
	295 Move X0, [X0+104]
	296 Call 0x1C17D08
	297 Move X20, X0
	298 Move X0, 0xE2E000
	299 Move X0, [X0+3520]
	300 Call 0x1C17D08
	301 Move X2, X0
	302 Move X0, X19
	303 Move X1, X20
	304 Move X3, X31
	305 Call ArgumentException..ctor, X0, X1, X2
	306 Move X0, 0xE03000
	307 Move X0, [X0+1888]
	308 Call 0x1C17D08
	309 Call 0x1C17F10
	310 Move X19, X0
	311 Move X0, 0xE2E000
	312 Move X0, [X0+3512]
	313 Move X0, 0xE03000
	314 Move X0, [X0+1888]
	315 Call 0x1C17D08
	316 Call 0x1C17F10
	317 Move X19, X0
	318 Move X0, 0xE2F000
	319 Move X0, [X0+1128]
	320 Move X0, 0xE03000
	321 Move X0, [X0+1400]
	322 Call 0x1C17D08
	323 Call 0x1C17F10
	324 Move X19, X0
	325 Move X0, 0xE2F000
	326 Move X0, [X0+1136]
	327 Move X0, 0xE29000
	328 Move X0, [X0+2048]
	329 Call 0x1C17D08
	330 Move X1, X31
	331 Call Locale.GetText, X0
	332 Move X20, X0
	333 Move X0, X19
	334 Move X1, X25
	335 Move W2, W31
	336 Call FileStream.GetSecureFileName, X0, X1, X2
	337 Move X1, X0
	338 Move X0, X20
	339 Move X2, X31
	340 Call String.Format, X0, X1
	341 Move X19, X0
	342 Move X0, 0xE29000
	343 Move X0, [X0+1976]
	344 Call 0x1C17D08
	345 Call 0x1C17F10
	346 Move X1, X19
	347 Move X2, X31
	348 Move X20, X0
	349 Call UnauthorizedAccessException..ctor, X0, X1
	350 Move X0, 0xE03000
	351 Move X0, [X0+1400]
	352 Call 0x1C17D08
	353 Call 0x1C17F10
	354 Move X19, X0
	355 Move X0, 0xE2F000
	356 Move X0, [X0+1144]
	357 Call 0x1C17D08
	358 Move X1, X0
	359 Move X0, X19
	360 Move X2, X31
	361 Call ArgumentException..ctor, X0, X1
	362 Move X0, 0xE2F000
	363 Move X0, [X0+1152]
	364 Call 0x1C17D08
	365 Move X1, X31
	366 Call Locale.GetText, X0
	367 Move X19, X0
	368 Move [X31+8], W22
	369 Move X0, 0xE2F000
	370 Move X0, [X0+1160]
	371 Call 0x1C17D08
	372 Add X1, X31, 8
	373 Call 0x1C17E04
	374 Move X21, X0
	375 Move [X31+4], W20
	376 Move X0, 0xE2F000
	377 Move X0, [X0+1168]
	378 Call 0x1C17D08
	379 Add X1, X31, 4
	380 Call 0x1C17E04
	381 Move X2, X0
	382 Move X0, X19
	383 Move X1, X21
	384 Move X3, X31
	385 Call String.Format, X0, X1, X2
	386 Move X19, X0
	387 Move X0, 0xE03000
	388 Move X0, [X0+1400]
	389 Call 0x1C17D08
	390 Call 0x1C17F10
	391 Move X1, X19
	392 Move X2, X31
	393 Move X20, X0
	394 Call ArgumentException..ctor, X0, X1
	395 Call 0x1C17F20
	396 Move X0, X19
	397 Move X1, X25
	398 Call FileStream.GetSecureFileName, X0, X1
	399 Move X20, X0
	400 Move X0, 0xE29000
	401 Move W19, [X31+12]
	402 Move X0, [X0+4008]
	403 Call 0x1C17D08
	404 Call 0x19913D0
	405 Move X0, X20
	406 Move W1, W19
	407 Call MonoIO.GetException, X0, X1
	408 Move X19, X0
	409 Move X0, 0xE2F000
	410 Move X0, [X0+1176]
	411 Call 0x1C17D08
	412 Move X1, X31
	413 Call Locale.GetText, X0
	414 Move X19, X0
	415 Move TEMP, X24
	416 And TEMP, TEMP, 1
	417 Compare TEMP, 1
	418 JumpIfEqual {429}
	419 Move X0, 0xE22000
	420 Move X0, [X0+464]
	421 Call 0x1C17D08
	422 Move W8, [X0+224]
	423 Compare W8, 0
	424 JumpIfNotEqual {426}
	425 Call 0x1C17DFC
	426 Move X0, X25
	427 Call Path.GetFullPath, X0
	428 Move X27, X0
	429 Move X0, X19
	430 Move X1, X27
	431 Move X2, X31
	432 Call String.Format, X0, X1
	433 Move X19, X0
	434 Move X0, 0xE29000
	435 Move X0, [X0+1944]
	436 Call 0x1C17D08
	437 Call 0x1C17F10
	438 Move X1, X19
	439 Move X2, X31
	440 Move X20, X0
	441 Call DirectoryNotFoundException..ctor, X0, X1
	442 Move X0, 0xE2F000
	443 Move X0, [X0+1184]
	444 Call 0x1C17D08
	445 Move X1, X0
	446 Move X0, X20
	447 Call 0x1C17DEC
	448 Move X0, 0xE03000
	449 Move X0, [X0+1888]
	450 Call 0x1C17D08
	451 Call 0x1C17F10
	452 Move X19, X0
	453 Move X0, 0xE2C000
	454 Move X0, [X0+104]
	455 Call 0x1C17D08
	456 Move X20, X0
	457 Move X0, 0xE2E000
	458 Move X0, [X0+3520]
	459 Call 0x1C17D08
	460 Move X2, X0
	461 Move X0, X19
	462 Move X1, X20
	463 Move X3, X31
	464 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	465 Move X0, 0xE2F000
	466 Move X0, [X0+1184]
	467 Call 0x1C17D08
	468 Move X1, X0
	469 Move X0, X19
	470 Call 0x1C17DEC

Method: System.Void Init(Microsoft.Win32.SafeHandles.SafeFileHandle safeHandle, System.IO.FileAccess access, System.Boolean ownsHandle, System.Int32 bufferSize, System.Boolean isAsync, System.Boolean isConsoleWrapper)

Disassembly:
	0x032F9004 MOV X1, X0
	0x032F9008 MOV X0, X19
	0x032F900C MOV X2, X31
	0x032F9010 BL 0x321B938
	0x032F9014 MOV X19, X0
	0x032F9018 ADRP X8, 0xE28000
	0x032F901C LDR X8, [X8 + 0xFA8]
	0x032F9020 LDR X0, [X8]
	0x032F9024 LDR W8, [X0 + 0xE0]
	0x032F9028 CBNZ W8, 0x32F9030
	0x032F902C BL 0x1C16DFC
	0x032F9030 ADD X1, X31, 0x8
	0x032F9034 MOV X0, X19
	0x032F9038 BL 0x1C281E0
	0x032F903C LDR X8, [X31 + 0x8]
	0x032F9040 ANDS W31, W0, 0x1
	0x032F9044 LDP X22, X21, [X31 + 0x20]
	0x032F9048 LDP X24, X23, [X31 + 0x10]
	0x032F904C CSEL X0, X8, X19, NE
	0x032F9050 LDP X20, X19, [X31 + 0x30]
	0x032F9054 LDR X30, [X31], #0x40
	0x032F9058 RET
	0x032F905C ADRP X8, 0xE2E000
	0x032F9060 LDR W3, [X21 + 0x10]
	0x032F9064 LDR X8, [X8 + 0x4A8]
	0x032F9068 MOV X0, X21
	0x032F906C MOV W2, W31
	0x032F9070 MOV X4, X31
	0x032F9074 LDR X1, [X8]
	0x032F9078 BL 0x322E440
	0x032F907C ADD W2, W0, 0x1
	0x032F9080 MOVZ W1, 0x5C
	0x032F9084 MOV X0, X21
	0x032F9088 MOV X3, X31
	0x032F908C BL 0x322BDA8
	0x032F9090 MOV W2, W0
	0x032F9094 MOV X0, X21
	0x032F9098 MOV W1, W31
	0x032F909C MOV X3, X31
	0x032F90A0 BL 0x3228DE4
	0x032F90A4 B 0x32F8C98
	0x032F90A8 BL 0x1C16F20
	0x032F90AC ADRP X0, 0xDFF000
	0x032F90B0 LDR X0, [X0 + 0x528]
	0x032F90B4 BL 0x1C16D08
	0x032F90B8 BL 0x1C16F10
	0x032F90BC MOV X19, X0
	0x032F90C0 ADRP X0, 0xE05000
	0x032F90C4 LDR X0, [X0 + 0x120]
	0x032F90C8 BL 0x1C16D08
	0x032F90CC MOV X1, X0
	0x032F90D0 MOV X0, X19
	0x032F90D4 MOV X2, X31
	0x032F90D8 BL 0x330E100
	0x032F90DC B 0x32F9160
	0x032F90E0 ADRP X0, 0xE2E000
	0x032F90E4 LDR X0, [X0 + 0x4B0]
	0x032F90E8 BL 0x1C16D08
	0x032F90EC MOV X1, X31
	0x032F90F0 BL 0x320A160
	0x032F90F4 MOV X19, X0
	0x032F90F8 ADRP X0, 0xE02000
	0x032F90FC LDR X0, [X0 + 0x578]
	0x032F9100 BL 0x1C16D08
	0x032F9104 BL 0x1C16F10
	0x032F9108 MOV X1, X19
	0x032F910C MOV X2, X31
	0x032F9110 MOV X20, X0
	0x032F9114 BL 0x3314A68
	0x032F9118 ADRP X0, 0xE2E000
	0x032F911C LDR X0, [X0 + 0x4B8]
	0x032F9120 BL 0x1C16D08
	0x032F9124 MOV X1, X0
	0x032F9128 MOV X0, X20
	0x032F912C BL 0x1C16DEC
	0x032F9130 ADRP X0, 0xE02000
	0x032F9134 LDR X0, [X0 + 0x578]
	0x032F9138 BL 0x1C16D08
	0x032F913C BL 0x1C16F10
	0x032F9140 MOV X19, X0
	0x032F9144 ADRP X0, 0xE2E000
	0x032F9148 LDR X0, [X0 + 0x4C0]
	0x032F914C BL 0x1C16D08
	0x032F9150 MOV X1, X0
	0x032F9154 MOV X0, X19
	0x032F9158 MOV X2, X31
	0x032F915C BL 0x3314A68
	0x032F9160 ADRP X0, 0xE2E000
	0x032F9164 LDR X0, [X0 + 0x4B8]
	0x032F9168 BL 0x1C16D08
	0x032F916C MOV X1, X0
	0x032F9170 MOV X0, X19
	0x032F9174 BL 0x1C16DEC
	0x032F9178 STR X30, [X31 - 0x30]!
	0x032F917C STP X22, X21, [X31 + 0x10]
	0x032F9180 STP X20, X19, [X31 + 0x20]
	0x032F9184 ADRP X22, 0x10E3000
	0x032F9188 LDRB W8, [X22 + 0xA87]
	0x032F918C MOV W20, W2
	0x032F9190 MOV X19, X1
	0x032F9194 MOV X21, X0
	0x032F9198 TBNZ X8, 0x0, 0x32F91B0
	0x032F919C ADRP X0, 0xE21000
	0x032F91A0 LDR X0, [X0 + 0x1D0]
	0x032F91A4 BL 0x1C16CF4
	0x032F91A8 MOVZ W8, 0x1
	0x032F91AC STRB W8, [X22 + 0xA87]
	0x032F91B0 ADRP X8, 0xE21000
	0x032F91B4 LDRB W9, [X21 + 0x57]
	0x032F91B8 LDR X8, [X8 + 0x1D0]
	0x032F91BC CBZ W9, 0x32F91E4
	0x032F91C0 LDR X0, [X8]
	0x032F91C4 LDR W8, [X0 + 0xE0]
	0x032F91C8 CBNZ W8, 0x32F91D0
	0x032F91CC BL 0x1C16DFC
	0x032F91D0 MOV X0, X19
	0x032F91D4 LDP X20, X19, [X31 + 0x20]
	0x032F91D8 LDP X22, X21, [X31 + 0x10]
	0x032F91DC LDR X30, [X31], #0x30
	0x032F91E0 B 0x32EE348
	0x032F91E4 TBZ X20, 0x0, 0x32F920C
	0x032F91E8 LDR X0, [X8]
	0x032F91EC LDR W8, [X0 + 0xE0]
	0x032F91F0 CBNZ W8, 0x32F91F8
	0x032F91F4 BL 0x1C16DFC
	0x032F91F8 MOV X0, X19
	0x032F91FC LDP X20, X19, [X31 + 0x20]
	0x032F9200 LDP X22, X21, [X31 + 0x10]
	0x032F9204 LDR X30, [X31], #0x30
	0x032F9208 B 0x32EE2E0
	0x032F920C MOV X0, X19
	0x032F9210 LDP X20, X19, [X31 + 0x20]
	0x032F9214 LDP X22, X21, [X31 + 0x10]
	0x032F9218 LDR X30, [X31], #0x30
	0x032F921C RET
	0x032F9220 STP X30, X25, [X31 - 0x40]!
	0x032F9224 STP X24, X23, [X31 + 0x10]
	0x032F9228 STP X22, X21, [X31 + 0x20]
	0x032F922C STP X20, X19, [X31 + 0x30]
	0x032F9230 ADRP X25, 0x10E3000
	0x032F9234 LDRB W8, [X25 + 0xA90]
	0x032F9238 MOV X19, X5
	0x032F923C MOV W20, W4
	0x032F9240 MOV W21, W3
	0x032F9244 MOV W22, W2
	0x032F9248 MOV W23, W1
	0x032F924C MOV X24, X0
	0x032F9250 TBNZ X8, 0x0, 0x32F9268
	0x032F9254 ADRP X0, 0xE28000
	0x032F9258 LDR X0, [X0 + 0xFA8]
	0x032F925C BL 0x1C16CF4
	0x032F9260 MOVZ W8, 0x1
	0x032F9264 STRB W8, [X25 + 0xA90]
	0x032F9268 ADRP X25, 0xE28000
	0x032F926C LDR X25, [X25 + 0xFA8]
	0x032F9270 CBZ X24, 0x32F9280
	0x032F9274 MOV X0, X31
	0x032F9278 BL 0x32C1424
	0x032F927C ADD X24, X24, W0, SXTW
	0x032F9280 LDR X0, [X25]
	0x032F9284 LDR W8, [X0 + 0xE0]
	0x032F9288 CBNZ W8, 0x32F9290
	0x032F928C BL 0x1C16DFC
	0x032F9290 MOV X0, X24
	0x032F9294 MOV W1, W23
	0x032F9298 MOV W2, W22
	0x032F929C MOV W3, W21
	0x032F92A0 MOV W4, W20
	0x032F92A4 MOV X5, X19
	0x032F92A8 LDP X20, X19, [X31 + 0x30]
	0x032F92AC LDP X22, X21, [X31 + 0x20]
	0x032F92B0 LDP X24, X23, [X31 + 0x10]
	0x032F92B4 LDP X30, X25, [X31], #0x40
	0x032F92B8 B 0x1C2833C
	0x032F92BC STR X30, [X31 - 0x30]!
	0x032F92C0 STP X22, X21, [X31 + 0x10]
	0x032F92C4 STP X20, X19, [X31 + 0x20]
	0x032F92C8 ADRP X22, 0x10E3000
	0x032F92CC ADRP X21, 0xE21000
	0x032F92D0 LDRB W8, [X22 + 0xA86]
	0x032F92D4 LDR X21, [X21 + 0x1D0]
	0x032F92D8 MOV X19, X1

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x10E4000
	011 Move W8, [X26+2679]
	012 Move W24, W6
	013 Move W22, W5
	014 Move W25, W4
	015 Move W23, W3
	016 Move W21, W2
	017 Move X20, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xE29000
	024 Move X0, [X0+4008]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X26+2679], W8
	028 Move [X31+12], W31
	029 Move TEMP, X24
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {44}
	033 Compare X20, 0
	034 JumpIfEqual {160}
	035 Move X8, [X20]
	036 Move X0, X20
	037 Move X9, [X8+392]
	038 Move X1, [X8+400]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {161}
	044 Subtract W8, W21, 1
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move TEMP, X24
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {125}
	051 Move X25, 0xE29000
	052 Move X25, [X25+4008]
	053 Move X0, [X25]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Add X1, X31, 12
	059 Move X0, X20
	060 Call MonoIO.GetFileType, X0, X1
	061 Move W24, [X31+12]
	062 Compare W24, 0
	063 JumpIfNotEqual {144}
	064 Move W8, 1
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move W9, 1
	067 Compare W0, 0
	068 JumpIfEqual {186}
	069 Move W9, W31
	070 Move X0, X19
	071 And W23, W23, 1
	072 And W22, W22, 1
	073 Move [X19+86], W9
	074 Move [X19+56], X20
	075 Move [X19+64], W8
	076 Call FileStream.FlushBuffer, X0
	077 Move W2, 1
	078 Move X0, X19
	079 Move W1, W31
	080 Call FileStream.InitBuffer, X0, X1, X2
	081 Move W8, [X19+86]
	082 Move [X19+80], W21
	083 Move [X19+84], W23
	084 Move [X19+85], W22
	085 Move [X19+87], W31
	086 Compare W8, 0
	087 JumpIfEqual {102}
	088 Move X0, [X25]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Add X3, X31, 12
	094 Move W2, 1
	095 Move X0, X20
	096 Move X1, X31
	097 Call MonoIO.Seek, X0, X1, X2, X3
	098 Move [X19+104], X0
	099 Move W20, [X31+12]
	100 Compare W20, 0
	101 JumpIfNotEqual {151}
	102 Move [X19+72], X31
	103 Move X20, [X31+64]
	104 Move X19, [X31+72]
	105 Move X22, [X31+48]
	106 Move X21, [X31+56]
	107 Move X24, [X31+32]
	108 Move X23, [X31+40]
	109 Move X26, [X31+16]
	110 Move X25, [X31+24]
	111 Move X30, [X31+80]
	112 Return 
	113 Move X0, 0xE03000
	114 Move X0, [X0+1888]
	115 Call 0x1C17D08
	116 Call 0x1C17F10
	117 Move X19, X0
	118 Move X0, 0xE2E000
	119 Move X0, [X0+3512]
	120 Call 0x1C17D08
	121 Move X1, X0
	122 Move X0, X19
	123 Move X2, X31
	124 Call ArgumentOutOfRangeException..ctor, X0, X1
	125 Move X0, 0xE2E000
	126 Move X0, [X0+3368]
	127 Call 0x1C17D08
	128 Move X1, X31
	129 Call Environment.GetResourceString, X0
	130 Move X19, X0
	131 Move X0, 0xE03000
	132 Move X0, [X0+1888]
	133 Call 0x1C17D08
	134 Call 0x1C17F10
	135 Move X20, X0
	136 Move X0, 0xE26000
	137 Move X0, [X0+3928]
	138 Call 0x1C17D08
	139 Move X1, X0
	140 Move X0, X20
	141 Move X2, X19
	142 Move X3, X31
	143 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	144 Move X0, 0xE29000
	145 Move X19, [X19+48]
	146 Move X0, [X0+4008]
	147 Call 0x1C17D08
	148 Call 0x19913D0
	149 Move X0, X19
	150 Move W1, W24
	151 Move X0, 0xE29000
	152 Move X19, [X19+48]
	153 Move X0, [X0+4008]
	154 Call 0x1C17D08
	155 Call 0x19913D0
	156 Move X0, X19
	157 Move W1, W20
	158 Call MonoIO.GetException, X0, X1
	159 Move X19, X0
	160 Call 0x1C17F20
	161 Move X0, 0xE2F000
	162 Move X0, [X0+1104]
	163 Call 0x1C17D08
	164 Move X1, X31
	165 Call Environment.GetResourceString, X0
	166 Move X19, X0
	167 Move X0, 0xE03000
	168 Move X0, [X0+1400]
	169 Call 0x1C17D08
	170 Call 0x1C17F10
	171 Move X20, X0
	172 Move X0, 0xE2F000
	173 Move X0, [X0+1088]
	174 Call 0x1C17D08
	175 Move X2, X0
	176 Move X0, X20
	177 Move X1, X19
	178 Move X3, X31
	179 Call ArgumentException..ctor, X0, X1, X2
	180 Move X0, 0xE2F000
	181 Move X0, [X0+1112]
	182 Call 0x1C17D08
	183 Move X1, X0
	184 Move X0, X20
	185 Call 0x1C17DEC
	186 Move X0, 0xE29000
	187 Move X0, [X0+1960]
	188 Call 0x1C17D08
	189 Call 0x1C17F10
	190 Move X19, X0
	191 Move X0, 0xE2F000
	192 Move X0, [X0+1104]
	193 Call 0x1C17D08
	194 Move X1, X0
	195 Move X0, X19
	196 Move X2, X31
	197 Call IOException..ctor, X0, X1
	198 Move X0, 0xE2F000
	199 Move X0, [X0+1112]
	200 Call 0x1C17D08
	201 Move X1, X0
	202 Move X0, X19
	203 Call 0x1C17DEC

Method: System.Boolean get_CanRead()

Disassembly:
	0x032FAFAC B 0x32FAFCC
	0x032FAFB0 ADRP X0, 0xE01000
	0x032FAFB4 LDR X0, [X0 + 0x760]
	0x032FAFB8 BL 0x1C16D08
	0x032FAFBC BL 0x1C16F10

ISIL:
	001 Move W8, [X0+80]
	002 And W8, W8, 0xFFFFFFFD
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.Boolean get_CanWrite()

Disassembly:
	0x032FAFC0 MOV X19, X0
	0x032FAFC4 ADRP X0, 0xE28000
	0x032FAFC8 LDR X0, [X0 + 0xD90]
	0x032FAFCC BL 0x1C16D08
	0x032FAFD0 MOV X20, X0

ISIL:
	001 Move W8, [X0+80]
	002 And W8, W8, 0xFFFFFFFE
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.Boolean get_CanSeek()

Disassembly:
	0x032FAFD4 ADRP X0, 0xE2D000
	0x032FAFD8 LDR X0, [X0 + 0x5F8]

ISIL:
	001 Move W0, [X0+86]
	002 Return X0

Method: System.Int64 get_Length()

Disassembly:
	0x032FAFDC BL 0x1C16D08
	0x032FAFE0 MOV X2, X0
	0x032FAFE4 MOV X0, X19
	0x032FAFE8 MOV X1, X20
	0x032FAFEC MOV X3, X31
	0x032FAFF0 BL 0x3311888
	0x032FAFF4 B 0x32FB028
	0x032FAFF8 ADRP X0, 0xE01000
	0x032FAFFC LDR X0, [X0 + 0x578]
	0x032FB000 BL 0x1C16D08
	0x032FB004 BL 0x1C16F10
	0x032FB008 MOV X19, X0
	0x032FB00C ADRP X0, 0xE2C000
	0x032FB010 LDR X0, [X0 + 0x600]
	0x032FB014 BL 0x1C16D08
	0x032FB018 MOV X1, X0
	0x032FB01C MOV X0, X19
	0x032FB020 MOV X2, X31
	0x032FB024 BL 0x3314A68
	0x032FB028 ADRP X0, 0xE2C000
	0x032FB02C LDR X0, [X0 + 0x608]
	0x032FB030 BL 0x1C16D08
	0x032FB034 MOV X1, X0
	0x032FB038 MOV X0, X19
	0x032FB03C BL 0x1C16DEC
	0x032FB040 STP X30, X21, [X31 - 0x20]!
	0x032FB044 STP X20, X19, [X31 + 0x10]
	0x032FB048 LDR X8, [X2 + 0x8]
	0x032FB04C STP X1, X2, [X0 + 0x20]
	0x032FB050 MOV X19, X0
	0x032FB054 MOV X20, X1
	0x032FB058 STR X8, [X0 + 0x10]
	0x032FB05C LDRB W21, [X2 + 0x52]
	0x032FB060 STR X0, [X0 + 0x40]
	0x032FB064 MOV X0, X2
	0x032FB068 BL 0x1C16D84
	0x032FB06C TBZ X0, 0x0, 0x32FB084
	0x032FB070 CMP W21, 0x3
	0x032FB074 B.NE 0x32FB0A0
	0x032FB078 ADRP X8, 0xFFFFFFFFFE8BC000
	0x032FB07C ADD X8, X8, 0xA78
	0x032FB080 B 0x32FB094
	0x032FB084 CMP W21, 0x2
	0x032FB088 B.NE 0x32FB09C
	0x032FB08C ADRP X8, 0xFFFFFFFFFE8BC000
	0x032FB090 ADD X8, X8, 0xA50
	0x032FB094 STR X8, [X19 + 0x18]
	0x032FB098 B 0x32FB0B0
	0x032FB09C CBZ X20, 0x32FB0C8
	0x032FB0A0 LDR X8, [X19 + 0x10]
	0x032FB0A4 LDR X9, [X19 + 0x20]
	0x032FB0A8 STR X8, [X19 + 0x18]
	0x032FB0AC STR X9, [X19 + 0x40]
	0x032FB0B0 ADRP X8, 0xFFFFFFFFFE8BC000
	0x032FB0B4 ADD X8, X8, 0x9E8
	0x032FB0B8 STR X8, [X19 + 0x38]
	0x032FB0BC LDP X20, X19, [X31 + 0x10]
	0x032FB0C0 LDP X30, X21, [X31], #0x20
	0x032FB0C4 RET
	0x032FB0C8 ADRP X1, 0xFFFFFFFFFD820000
	0x032FB0CC ADD X1, X1, 0xEE3
	0x032FB0D0 MOV X0, X31
	0x032FB0D4 BL 0x1C16F3C
	0x032FB0D8 MOV X1, X31
	0x032FB0DC BL 0x1C16DEC
	0x032FB0E0 SUB X31, X31, 0x60
	0x032FB0E4 STR X30, [X31 + 0x20]
	0x032FB0E8 STP X24, X23, [X31 + 0x30]
	0x032FB0EC STP X22, X21, [X31 + 0x40]
	0x032FB0F0 STP X20, X19, [X31 + 0x50]
	0x032FB0F4 ADRP X24, 0x10E1000
	0x032FB0F8 STP W3, W2, [X31 + 0x28]
	0x032FB0FC ADRP X23, 0xDF8000
	0x032FB100 LDRB W8, [X24 + 0xA89]
	0x032FB104 LDR X23, [X23 + 0x758]
	0x032FB108 MOV X19, X5
	0x032FB10C MOV X20, X4
	0x032FB110 MOV X22, X1
	0x032FB114 MOV X21, X0
	0x032FB118 TBNZ X8, 0x0, 0x32FB130
	0x032FB11C ADRP X0, 0xDF8000
	0x032FB120 LDR X0, [X0 + 0x758]
	0x032FB124 BL 0x1C16CF4
	0x032FB128 MOVZ W8, 0x1
	0x032FB12C STRB W8, [X24 + 0xA89]
	0x032FB130 LDR X0, [X23]
	0x032FB134 ADD X1, X31, 0x2C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10E3000
	005 Move W8, [X20+2680]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE28000
	012 Move X0, [X0+4008]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2680], W8
	016 Move [X31+12], W31
	017 Move X0, [X19+56]
	018 Compare X0, 0
	019 JumpIfEqual {58}
	020 Move X1, X31
	021 Call SafeHandle.get_IsClosed, X0
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {59}
	026 Move X8, [X19]
	027 Move X0, X19
	028 Move X9, [X8+440]
	029 Move X1, [X8+448]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {71}
	035 Move X20, 0xE27000
	036 Move W8, [X19+88]
	037 Move X20, [X20+4008]
	038 Compare W8, 0
	039 JumpIfEqual {42}
	040 Move X0, X19
	041 Call FileStream.FlushBuffer, X0
	042 Move X0, [X20]
	043 Move X20, [X19+56]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Add X1, X31, 12
	049 Move X0, X20
	050 Call MonoIO.GetLength, X0, X1
	051 Move W8, [X31+12]
	052 Compare W8, 0
	053 JumpIfNotEqual {83}
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Return X0
	058 Call 0x1C17F20
	059 Move X0, 0xE22000
	060 Move X0, [X0+1208]
	061 Call 0x1C17D08
	062 Call 0x1C17F10
	063 Move X19, X0
	064 Move X0, 0xE2D000
	065 Move X0, [X0+1392]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X19
	069 Move X2, X31
	070 Call ObjectDisposedException..ctor, X0, X1
	071 Move X0, 0xDF9000
	072 Move X0, [X0+2880]
	073 Call 0x1C17D08
	074 Call 0x1C17F10
	075 Move X19, X0
	076 Move X0, 0xE2D000
	077 Move X0, [X0+1400]
	078 Call 0x1C17D08
	079 Move X1, X0
	080 Move X0, X19
	081 Move X2, X31
	082 Call NotSupportedException..ctor, X0, X1
	083 Move X1, [X19+48]
	084 Move X0, X19
	085 Call FileStream.GetSecureFileName, X0, X1
	086 Move X20, X0
	087 Move X0, 0xE27000
	088 Move W19, [X31+12]
	089 Move X0, [X0+4008]
	090 Call 0x1C17D08
	091 Call 0x19913D0
	092 Move X0, X20
	093 Move W1, W19
	094 Call MonoIO.GetException, X0, X1
	095 Move X19, X0
	096 Move X0, 0xE2D000
	097 Move X0, [X0+1408]
	098 Call 0x1C17D08
	099 Move X1, X0
	100 Move X0, X19
	101 Call 0x1C17DEC

Method: System.Int64 get_Position()

Disassembly:
	0x032FB280 BL 0x1C16D08
	0x032FB284 MOV X2, X0
	0x032FB288 MOV X0, X19
	0x032FB28C MOV X1, X20
	0x032FB290 MOV X3, X31
	0x032FB294 BL 0x330E16C
	0x032FB298 B 0x32FB2CC
	0x032FB29C ADRP X0, 0xDFD000
	0x032FB2A0 LDR X0, [X0 + 0x528]
	0x032FB2A4 BL 0x1C16D08
	0x032FB2A8 BL 0x1C16F10
	0x032FB2AC MOV X19, X0
	0x032FB2B0 ADRP X0, 0xE23000
	0x032FB2B4 LDR X0, [X0 + 0xDD0]
	0x032FB2B8 BL 0x1C16D08
	0x032FB2BC MOV X1, X0
	0x032FB2C0 MOV X0, X19
	0x032FB2C4 MOV X2, X31
	0x032FB2C8 BL 0x330E100
	0x032FB2CC ADRP X0, 0xE2C000
	0x032FB2D0 LDR X0, [X0 + 0x620]
	0x032FB2D4 BL 0x1C16D08
	0x032FB2D8 MOV X1, X0
	0x032FB2DC MOV X0, X19
	0x032FB2E0 BL 0x1C16DEC
	0x032FB2E4 STR X30, [X31 - 0x10]!
	0x032FB2E8 MOV X0, X1
	0x032FB2EC MOV X1, X31
	0x032FB2F0 BL 0x1C16CB4
	0x032FB2F4 CBZ X0, 0x32FB308
	0x032FB2F8 BL 0x1C16E08
	0x032FB2FC LDR W0, [X0]
	0x032FB300 LDR X30, [X31], #0x10
	0x032FB304 RET
	0x032FB308 BL 0x1C16F20
	0x032FB30C STR X30, [X31 - 0x30]!
	0x032FB310 STP X22, X21, [X31 + 0x10]
	0x032FB314 STP X20, X19, [X31 + 0x20]
	0x032FB318 MOV X19, X0
	0x032FB31C LDR X0, [X0 + 0x38]
	0x032FB320 CBZ X0, 0x32FB3E0
	0x032FB324 MOV X22, X1
	0x032FB328 MOV X1, X31
	0x032FB32C MOV W20, W3
	0x032FB330 MOV W21, W2
	0x032FB334 BL 0x32C02A8
	0x032FB338 TBNZ X0, 0x0, 0x32FB3E4
	0x032FB33C CBZ X22, 0x32FB418
	0x032FB340 TBNZ X21, 0x1F, 0x32FB44C
	0x032FB344 TBNZ X20, 0x1F, 0x32FB46C
	0x032FB348 LDR W8, [X22 + 0x18]
	0x032FB34C SUB W8, W8, W20
	0x032FB350 CMP W8, W21
	0x032FB354 B.LT 0x32FB4B4
	0x032FB358 LDR X8, [X19]
	0x032FB35C MOV X0, X19
	0x032FB360 LDP X9, X1, [X8 + 0x1D8]
	0x032FB364 BLR X9
	0x032FB368 TBZ X0, 0x0, 0x32FB4E8
	0x032FB36C LDRB W8, [X19 + 0x55]
	0x032FB370 CBZ W8, 0x32FB3C0
	0x032FB374 LDR X8, [X19]
	0x032FB378 MOV X0, X19
	0x032FB37C MOV X1, X22
	0x032FB380 MOV W2, W21
	0x032FB384 LDR X9, [X8 + 0x2F8]
	0x032FB388 LDR X6, [X8 + 0x300]
	0x032FB38C MOV W3, W20
	0x032FB390 MOV X4, X31
	0x032FB394 MOV X5, X31
	0x032FB398 BLR X9
	0x032FB39C LDR X8, [X19]
	0x032FB3A0 MOV X1, X0
	0x032FB3A4 MOV X0, X19
	0x032FB3A8 LDP X20, X19, [X31 + 0x20]
	0x032FB3AC LDR X3, [X8 + 0x308]
	0x032FB3B0 LDR X2, [X8 + 0x310]
	0x032FB3B4 LDP X22, X21, [X31 + 0x10]
	0x032FB3B8 LDR X30, [X31], #0x30
	0x032FB3BC BR X3
	0x032FB3C0 MOV X0, X19
	0x032FB3C4 MOV X1, X22
	0x032FB3C8 MOV W2, W21
	0x032FB3CC MOV W3, W20
	0x032FB3D0 LDP X20, X19, [X31 + 0x20]
	0x032FB3D4 LDP X22, X21, [X31 + 0x10]
	0x032FB3D8 LDR X30, [X31], #0x30
	0x032FB3DC B 0x32FB530
	0x032FB3E0 BL 0x1C16F20
	0x032FB3E4 ADRP X0, 0xE21000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10E2000
	005 Move W8, [X20+2681]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE27000
	012 Move X0, [X0+4008]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2681], W8
	016 Move [X31+12], W31
	017 Move X0, [X19+56]
	018 Compare X0, 0
	019 JumpIfEqual {74}
	020 Move X1, X31
	021 Call SafeHandle.get_IsClosed, X0
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {75}
	026 Move X8, [X19]
	027 Move X0, X19
	028 Move X9, [X8+440]
	029 Move X1, [X8+448]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {87}
	035 Move W8, [X19+64]
	036 Compare W8, 0
	037 JumpIfEqual {67}
	038 Move X8, 0xE27000
	039 Move X8, [X8+4008]
	040 Move X20, [X19+56]
	041 Move X0, [X8]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Add X3, X31, 12
	047 Move W2, 1
	048 Move X0, X20
	049 Move X1, X31
	050 Call MonoIO.Seek, X0, X1, X2, X3
	051 Move W8, [X31+12]
	052 Compare W8, 0
	053 JumpIfEqual {70}
	054 Move X1, [X19+48]
	055 Move X0, X19
	056 Call FileStream.GetSecureFileName, X0, X1
	057 Move X20, X0
	058 Move X0, 0xE27000
	059 Move W19, [X31+12]
	060 Move X0, [X0+4008]
	061 Call 0x1C17D08
	062 Call 0x19913D0
	063 Move X0, X20
	064 Move W1, W19
	065 Call MonoIO.GetException, X0, X1
	066 Move X19, X0
	067 Move X8, [X19+104]
	068 NotImplemented "Instruction LDRSW not yet implemented."
	069 Add X0, X8, X9
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X30, [X31+32]
	073 Return X0
	074 Call 0x1C17F20
	075 Move X0, 0xE22000
	076 Move X0, [X0+1208]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X19, X0
	080 Move X0, 0xE2D000
	081 Move X0, [X0+1392]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X19
	085 Move X2, X31
	086 Call ObjectDisposedException..ctor, X0, X1
	087 Move X0, 0xDF9000
	088 Move X0, [X0+2880]
	089 Call 0x1C17D08
	090 Call 0x1C17F10
	091 Move X19, X0
	092 Move X0, 0xE2D000
	093 Move X0, [X0+1400]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X19
	097 Move X2, X31
	098 Call NotSupportedException..ctor, X0, X1
	099 Move X0, 0xE2D000
	100 Move X0, [X0+1416]
	101 Call 0x1C17D08
	102 Move X1, X0
	103 Move X0, X19
	104 Call 0x1C17DEC

Method: System.Void set_Position(System.Int64 value)

Disassembly:
	0x032FB3E8 LDR X0, [X0 + 0x4B8]
	0x032FB3EC BL 0x1C16D08
	0x032FB3F0 BL 0x1C16F10
	0x032FB3F4 MOV X19, X0
	0x032FB3F8 ADRP X0, 0xE2C000
	0x032FB3FC LDR X0, [X0 + 0x570]
	0x032FB400 BL 0x1C16D08
	0x032FB404 MOV X1, X0
	0x032FB408 MOV X0, X19
	0x032FB40C MOV X2, X31
	0x032FB410 BL 0x338C448
	0x032FB414 B 0x32FB518
	0x032FB418 ADRP X0, 0xDFD000
	0x032FB41C LDR X0, [X0 + 0x528]
	0x032FB420 BL 0x1C16D08
	0x032FB424 BL 0x1C16F10
	0x032FB428 MOV X19, X0
	0x032FB42C ADRP X0, 0xE20000
	0x032FB430 LDR X0, [X0 + 0x640]
	0x032FB434 BL 0x1C16D08
	0x032FB438 MOV X1, X0
	0x032FB43C MOV X0, X19
	0x032FB440 MOV X2, X31
	0x032FB444 BL 0x330E100
	0x032FB448 B 0x32FB518
	0x032FB44C ADRP X0, 0xE00000
	0x032FB450 LDR X0, [X0 + 0x760]
	0x032FB454 BL 0x1C16D08
	0x032FB458 BL 0x1C16F10
	0x032FB45C MOV X19, X0
	0x032FB460 ADRP X0, 0xE27000
	0x032FB464 LDR X0, [X0 + 0xD90]
	0x032FB468 B 0x32FB488
	0x032FB46C ADRP X0, 0xE00000
	0x032FB470 LDR X0, [X0 + 0x760]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move TEMP, X1
	005 And TEMP, TEMP, 1
	006 Compare TEMP, 1
	007 JumpIfEqual {16}
	008 Move X8, [X0]
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move W2, W31
	012 Move X4, [X8+824]
	013 Move X3, [X8+832]
	014 Move X30, [X31+32]
	015 CallNoReturn X4
	016 Move X0, 0xE21000
	017 Move X0, [X0+1648]
	018 Call 0x1C17D08
	019 Move X1, X31
	020 Call Environment.GetResourceString, X0
	021 Move X19, X0
	022 Move X0, 0xE01000
	023 Move X0, [X0+1888]
	024 Call 0x1C17D08
	025 Call 0x1C17F10
	026 Move X20, X0
	027 Move X0, 0xE03000
	028 Move X0, [X0+3784]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X20
	032 Move X2, X19
	033 Move X3, X31
	034 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	035 Move X0, 0xE2D000
	036 Move X0, [X0+1424]
	037 Call 0x1C17D08
	038 Move X1, X0
	039 Move X0, X20
	040 Call 0x1C17DEC

Method: Microsoft.Win32.SafeHandles.SafeFileHandle get_SafeFileHandle()

Disassembly:
	0x032FB474 BL 0x1C16D08
	0x032FB478 BL 0x1C16F10
	0x032FB47C MOV X19, X0
	0x032FB480 ADRP X0, 0xE20000
	0x032FB484 LDR X0, [X0 + 0x648]
	0x032FB488 BL 0x1C16D08
	0x032FB48C MOV X20, X0
	0x032FB490 ADRP X0, 0xE26000
	0x032FB494 LDR X0, [X0 + 0xE48]
	0x032FB498 BL 0x1C16D08
	0x032FB49C MOV X2, X0
	0x032FB4A0 MOV X0, X19
	0x032FB4A4 MOV X1, X20
	0x032FB4A8 MOV X3, X31
	0x032FB4AC BL 0x3311888

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+64]
	004 Move X19, X0
	005 Compare W8, 0
	006 JumpIfNotEqual {15}
	007 Move W8, 1
	008 Move X0, X19
	009 Move [X19+64], W8
	010 Call FileStream.FlushBuffer, X0
	011 Move W2, 1
	012 Move X0, X19
	013 Move W1, W31
	014 Call FileStream.InitBuffer, X0, X1, X2
	015 Move X0, [X19+56]
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Return X0

Method: System.Void ExposeHandle()

Disassembly:
	0x032FAE34 CBZ X23, 0x32FAF5C
	0x032FAE38 TBNZ X21, 0x1F, 0x32FAF90
	0x032FAE3C TBNZ X22, 0x1F, 0x32FAFB0
	0x032FAE40 LDR W8, [X23 + 0x18]
	0x032FAE44 SUB W8, W8, W22
	0x032FAE48 CMP W8, W21
	0x032FAE4C B.LT 0x32FAFF8
	0x032FAE50 LDRB W8, [X24 + 0x55]
	0x032FAE54 CBZ W8, 0x32FAEB4
	0x032FAE58 ADRP X8, 0xE2D000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, 1
	004 Move X19, X0
	005 Move [X0+64], W8
	006 Call FileStream.FlushBuffer, X0
	007 Move W2, 1
	008 Move X0, X19
	009 Move W1, W31
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Call FileStream.InitBuffer, X0, X1, X2
	013 Return 

Method: System.Int32 ReadByte()

Disassembly:
	0x032FB630 CMP W23, 0x0
	0x032FB634 ADD W21, W0, W21
	0x032FB638 B.GT 0x32FB5F8
	0x032FB63C LDR X8, [X19 + 0x68]
	0x032FB640 ADD X8, X8, W20, SXTW
	0x032FB644 STR X8, [X19 + 0x68]
	0x032FB648 B 0x32FB688
	0x032FB64C CMP W20, 0x1
	0x032FB650 B.LT 0x32FB688
	0x032FB654 MOV W23, W31
	0x032FB658 ADD W2, W23, W21
	0x032FB65C MOV X0, X19
	0x032FB660 MOV X1, X22
	0x032FB664 MOV W3, W20
	0x032FB668 BL 0x32FB844
	0x032FB66C SUBS W20, W20, W0
	0x032FB670 B.EQ 0x32FB688
	0x032FB674 ADD W23, W0, W23
	0x032FB678 MOV X0, X19
	0x032FB67C BL 0x32FA4B0
	0x032FB680 CMP W20, 0x0
	0x032FB684 B.GT 0x32FB658
	0x032FB688 LDP X20, X19, [X31 + 0x40]
	0x032FB68C LDP X22, X21, [X31 + 0x30]
	0x032FB690 LDP X24, X23, [X31 + 0x20]
	0x032FB694 LDP X30, X25, [X31 + 0x10]
	0x032FB698 ADD X31, X31, 0x50
	0x032FB69C RET
	0x032FB6A0 LDR X1, [X19 + 0x30]
	0x032FB6A4 MOV X0, X19
	0x032FB6A8 BL 0x32F92BC
	0x032FB6AC MOV X20, X0
	0x032FB6B0 ADRP X0, 0xE26000
	0x032FB6B4 LDR W19, [X31 + 0xC]
	0x032FB6B8 LDR X0, [X0 + 0xFA8]
	0x032FB6BC BL 0x1C16D08
	0x032FB6C0 BL 0x19903D0
	0x032FB6C4 MOV X0, X20
	0x032FB6C8 MOV W1, W19
	0x032FB6CC BL 0x32F9334
	0x032FB6D0 MOV X19, X0
	0x032FB6D4 ADRP X0, 0xE2C000
	0x032FB6D8 LDR X0, [X0 + 0x630]
	0x032FB6DC BL 0x1C16D08
	0x032FB6E0 MOV X1, X0
	0x032FB6E4 MOV X0, X19
	0x032FB6E8 BL 0x1C16DEC
	0x032FB6EC STR X30, [X31 - 0x40]!
	0x032FB6F0 STP X24, X23, [X31 + 0x10]
	0x032FB6F4 STP X22, X21, [X31 + 0x20]
	0x032FB6F8 STP X20, X19, [X31 + 0x30]
	0x032FB6FC ADRP X24, 0x10E1000
	0x032FB700 LDRB W8, [X24 + 0xA92]
	0x032FB704 MOV X20, X4
	0x032FB708 MOV W21, W3
	0x032FB70C MOV W22, W2
	0x032FB710 MOV X23, X1
	0x032FB714 MOV X19, X0
	0x032FB718 TBNZ X8, 0x0, 0x32FB730
	0x032FB71C ADRP X0, 0xE26000
	0x032FB720 LDR X0, [X0 + 0xFA8]
	0x032FB724 BL 0x1C16CF4
	0x032FB728 MOVZ W8, 0x1
	0x032FB72C STRB W8, [X24 + 0xA92]
	0x032FB730 STRB W31, [X31 + 0xC]
	0x032FB734 CBZ X19, 0x32FB7B4
	0x032FB738 ADD X1, X31, 0xC
	0x032FB73C MOV X0, X19
	0x032FB740 MOV X2, X31
	0x032FB744 BL 0x32BF948
	0x032FB748 ADRP X8, 0xE26000
	0x032FB74C LDR X8, [X8 + 0xFA8]
	0x032FB750 LDR X24, [X19 + 0x10]
	0x032FB754 LDR X0, [X8]
	0x032FB758 LDR W8, [X0 + 0xE0]
	0x032FB75C CBNZ W8, 0x32FB764
	0x032FB760 BL 0x1C16DFC
	0x032FB764 MOV X0, X24
	0x032FB768 MOV X1, X23
	0x032FB76C MOV W2, W22

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+56]
	005 Compare X0, 0
	006 JumpIfEqual {63}
	007 Move X1, X31
	008 Call SafeHandle.get_IsClosed, X0
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {64}
	013 Move X8, [X19]
	014 Move X0, X19
	015 Move X9, [X8+424]
	016 Move X1, [X8+432]
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {76}
	022 Move W8, [X19+92]
	023 Compare W8, 0
	024 JumpIfEqual {42}
	025 Move W9, [X19+96]
	026 Move W8, [X19+100]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X0, X19
	029 Call FileStream.RefillBuffer, X0
	030 Move W8, [X19+96]
	031 Compare W8, 0
	032 JumpIfEqual {57}
	033 Move W8, [X19+100]
	034 Move X9, [X19+40]
	035 Add W10, W8, 1
	036 Move [X19+100], W10
	037 Compare X9, 0
	038 JumpIfEqual {63}
	039 Move W10, [X9+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Add X8, X9, W8
	042 Move X1, [X19+56]
	043 Move X2, [X19+40]
	044 Move W4, 1
	045 Move X0, X19
	046 Move W3, W31
	047 Call FileStream.ReadData, X0, X1, X2, X3, X4
	048 Compare W0, 0
	049 JumpIfEqual {57}
	050 Move X8, [X19+40]
	051 Compare X8, 0
	052 JumpIfEqual {63}
	053 Move W9, [X8+24]
	054 Compare W9, 0
	055 JumpIfEqual {94}
	056 Move W0, [X8+32]
	057 Move TEMP, 0
	058 Not TEMP
	059 Move W0, TEMP
	060 Move X30, [X31+16]
	061 Move X19, [X31+24]
	062 Return X0
	063 Call 0x1C17F20
	064 Move X0, 0xE22000
	065 Move X0, [X0+1208]
	066 Call 0x1C17D08
	067 Call 0x1C17F10
	068 Move X19, X0
	069 Move X0, 0xE2D000
	070 Move X0, [X0+1392]
	071 Call 0x1C17D08
	072 Move X1, X0
	073 Move X0, X19
	074 Move X2, X31
	075 Call ObjectDisposedException..ctor, X0, X1
	076 Move X0, 0xDF9000
	077 Move X0, [X0+2880]
	078 Call 0x1C17D08
	079 Call 0x1C17F10
	080 Move X19, X0
	081 Move X0, 0xE2D000
	082 Move X0, [X0+1440]
	083 Call 0x1C17D08
	084 Move X1, X0
	085 Move X0, X19
	086 Move X2, X31
	087 Call NotSupportedException..ctor, X0, X1
	088 Move X0, 0xE2D000
	089 Move X0, [X0+1448]
	090 Call 0x1C17D08
	091 Move X1, X0
	092 Move X0, X19
	093 Call 0x1C17DEC
	094 Call 0x1C17F28

Method: System.Void WriteByte(System.Byte value)

Disassembly:
	0x032FB8C0 STP X30, X25, [X31 + 0x10]
	0x032FB8C4 STP X24, X23, [X31 + 0x20]
	0x032FB8C8 STP X22, X21, [X31 + 0x30]
	0x032FB8CC STP X20, X19, [X31 + 0x40]
	0x032FB8D0 ADRP X25, 0x10E1000
	0x032FB8D4 LDRB W8, [X25 + 0xA7D]
	0x032FB8D8 MOV X19, X5
	0x032FB8DC MOV X20, X4
	0x032FB8E0 MOV W21, W3
	0x032FB8E4 MOV W22, W2
	0x032FB8E8 MOV X23, X1
	0x032FB8EC MOV X24, X0
	0x032FB8F0 TBNZ X8, 0x0, 0x32FB920
	0x032FB8F4 ADRP X0, 0xE2C000
	0x032FB8F8 LDR X0, [X0 + 0x638]
	0x032FB8FC BL 0x1C16CF4
	0x032FB900 ADRP X0, 0xE2C000
	0x032FB904 LDR X0, [X0 + 0x630]
	0x032FB908 BL 0x1C16CF4
	0x032FB90C ADRP X0, 0xE2C000
	0x032FB910 LDR X0, [X0 + 0x640]
	0x032FB914 BL 0x1C16CF4
	0x032FB918 MOVZ W8, 0x1
	0x032FB91C STRB W8, [X25 + 0xA7D]
	0x032FB920 LDR X0, [X24 + 0x38]
	0x032FB924 CBZ X0, 0x32FBA34
	0x032FB928 MOV X1, X31
	0x032FB92C BL 0x32C02A8
	0x032FB930 TBNZ X0, 0x0, 0x32FBA38
	0x032FB934 LDR X8, [X24]
	0x032FB938 MOV X0, X24
	0x032FB93C LDP X9, X1, [X8 + 0x1D8]
	0x032FB940 BLR X9
	0x032FB944 TBZ X0, 0x0, 0x32FBA6C
	0x032FB948 CBZ X23, 0x32FBAA0
	0x032FB94C TBNZ X21, 0x1F, 0x32FBAD4
	0x032FB950 TBNZ X22, 0x1F, 0x32FBAF4
	0x032FB954 LDR W8, [X23 + 0x18]
	0x032FB958 SUB W8, W8, W22
	0x032FB95C CMP W8, W21
	0x032FB960 B.LT 0x32FBB3C
	0x032FB964 LDRB W8, [X24 + 0x55]
	0x032FB968 CBZ W8, 0x32FB9F8
	0x032FB96C ADRP X8, 0xE2C000
	0x032FB970 LDR X8, [X8 + 0x638]
	0x032FB974 LDR X0, [X8]
	0x032FB978 BL 0x1C16F10
	0x032FB97C MOV X1, X20
	0x032FB980 MOV X2, X19
	0x032FB984 MOV X25, X0
	0x032FB988 BL 0x32FBB84
	0x032FB98C CBZ X25, 0x32FBA34
	0x032FB990 ADRP X8, 0xE2C000
	0x032FB994 LDR X8, [X8 + 0x640]
	0x032FB998 MOVN W9, 0x0
	0x032FB99C STP W21, W9, [X25 + 0x38]
	0x032FB9A0 STR W21, [X25 + 0x34]
	0x032FB9A4 LDR X0, [X8]
	0x032FB9A8 ADRP X25, 0xE2C000
	0x032FB9AC LDR X25, [X25 + 0x630]
	0x032FB9B0 BL 0x1C16F10
	0x032FB9B4 LDR X2, [X25]
	0x032FB9B8 MOV X1, X24
	0x032FB9BC MOV X25, X0
	0x032FB9C0 BL 0x32FBC50
	0x032FB9C4 CBZ X25, 0x32FBA34
	0x032FB9C8 MOV X0, X25
	0x032FB9CC MOV X1, X23
	0x032FB9D0 MOV W2, W22
	0x032FB9D4 MOV W3, W21
	0x032FB9D8 MOV X4, X20
	0x032FB9DC MOV X5, X19
	0x032FB9E0 LDP X20, X19, [X31 + 0x40]
	0x032FB9E4 LDP X22, X21, [X31 + 0x30]
	0x032FB9E8 LDP X24, X23, [X31 + 0x20]
	0x032FB9EC LDP X30, X25, [X31 + 0x10]
	0x032FB9F0 ADD X31, X31, 0x50
	0x032FB9F4 B 0x32FBCF0
	0x032FB9F8 MOVZ W7, 0x1
	0x032FB9FC MOV X0, X24
	0x032FBA00 MOV X1, X23
	0x032FBA04 MOV W2, W22
	0x032FBA08 MOV W3, W21
	0x032FBA0C MOV X4, X20
	0x032FBA10 MOV X5, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+56]
	006 Compare X0, 0
	007 JumpIfEqual {67}
	008 Move W20, W1
	009 Move X1, X31
	010 Call SafeHandle.get_IsClosed, X0
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {68}
	015 Move X8, [X19]
	016 Move X0, X19
	017 Move X9, [X8+472]
	018 Move X1, [X8+480]
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {80}
	024 Move W8, [X19+100]
	025 Move W9, [X19+92]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X0, X19
	028 Call FileStream.FlushBuffer, X0
	029 Move W9, [X19+92]
	030 Move X8, [X19+40]
	031 Compare W9, 0
	032 JumpIfEqual {52}
	033 NotImplemented "Instruction LDRSW not yet implemented."
	034 Add W10, W9, 1
	035 Move [X19+100], W10
	036 Compare X8, 0
	037 JumpIfEqual {67}
	038 Move W10, [X8+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X8, X8, X9
	041 Move [X8+32], W20
	042 Move W9, [X19+96]
	043 Move W8, [X19+100]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move [X19+96], W8
	046 Move W8, 1
	047 Move [X19+88], W8
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Return 
	052 Compare X8, 0
	053 JumpIfEqual {67}
	054 Move W9, [X8+24]
	055 Compare W9, 0
	056 JumpIfEqual {98}
	057 Move [X8+32], W20
	058 Move W8, 1
	059 Move [X19+88], W8
	060 Move [X19+96], W8
	061 Move X0, X19
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X30, [X31+32]
	065 Call FileStream.FlushBuffer, X0
	066 Return 
	067 Call 0x1C17F20
	068 Move X0, 0xE22000
	069 Move X0, [X0+1208]
	070 Call 0x1C17D08
	071 Call 0x1C17F10
	072 Move X19, X0
	073 Move X0, 0xE2D000
	074 Move X0, [X0+1392]
	075 Call 0x1C17D08
	076 Move X1, X0
	077 Move X0, X19
	078 Move X2, X31
	079 Call ObjectDisposedException..ctor, X0, X1
	080 Move X0, 0xDF9000
	081 Move X0, [X0+2880]
	082 Call 0x1C17D08
	083 Call 0x1C17F10
	084 Move X19, X0
	085 Move X0, 0xE2D000
	086 Move X0, [X0+1464]
	087 Call 0x1C17D08
	088 Move X1, X0
	089 Move X0, X19
	090 Move X2, X31
	091 Call NotSupportedException..ctor, X0, X1
	092 Move X0, 0xE2D000
	093 Move X0, [X0+1472]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X19
	097 Call 0x1C17DEC
	098 Call 0x1C17F28

Method: System.Int32 Read(out System.Byte[] array, System.Int32 offset, System.Int32 count)

Disassembly:
	0x032FBA14 MOV W6, W31
	0x032FBA18 BL 0x32F12D8
	0x032FBA1C LDP X20, X19, [X31 + 0x40]
	0x032FBA20 LDP X22, X21, [X31 + 0x30]
	0x032FBA24 LDP X24, X23, [X31 + 0x20]
	0x032FBA28 LDP X30, X25, [X31 + 0x10]
	0x032FBA2C ADD X31, X31, 0x50
	0x032FBA30 RET
	0x032FBA34 BL 0x1C16F20
	0x032FBA38 ADRP X0, 0xE21000
	0x032FBA3C LDR X0, [X0 + 0x4B8]
	0x032FBA40 BL 0x1C16D08
	0x032FBA44 BL 0x1C16F10
	0x032FBA48 MOV X19, X0
	0x032FBA4C ADRP X0, 0xE2C000
	0x032FBA50 LDR X0, [X0 + 0x570]
	0x032FBA54 BL 0x1C16D08
	0x032FBA58 MOV X1, X0
	0x032FBA5C MOV X0, X19
	0x032FBA60 MOV X2, X31
	0x032FBA64 BL 0x338C448
	0x032FBA68 B 0x32FBB6C
	0x032FBA6C ADRP X0, 0xDF8000
	0x032FBA70 LDR X0, [X0 + 0xB40]
	0x032FBA74 BL 0x1C16D08
	0x032FBA78 BL 0x1C16F10
	0x032FBA7C MOV X19, X0
	0x032FBA80 ADRP X0, 0xE2C000
	0x032FBA84 LDR X0, [X0 + 0x648]
	0x032FBA88 BL 0x1C16D08
	0x032FBA8C MOV X1, X0
	0x032FBA90 MOV X0, X19
	0x032FBA94 MOV X2, X31
	0x032FBA98 BL 0x3379A44
	0x032FBA9C B 0x32FBB6C
	0x032FBAA0 ADRP X0, 0xDFD000
	0x032FBAA4 LDR X0, [X0 + 0x528]
	0x032FBAA8 BL 0x1C16D08
	0x032FBAAC BL 0x1C16F10
	0x032FBAB0 MOV X19, X0
	0x032FBAB4 ADRP X0, 0xE20000
	0x032FBAB8 LDR X0, [X0 + 0x640]
	0x032FBABC BL 0x1C16D08
	0x032FBAC0 MOV X1, X0
	0x032FBAC4 MOV X0, X19
	0x032FBAC8 MOV X2, X31
	0x032FBACC BL 0x330E100
	0x032FBAD0 B 0x32FBB6C
	0x032FBAD4 ADRP X0, 0xE00000
	0x032FBAD8 LDR X0, [X0 + 0x760]
	0x032FBADC BL 0x1C16D08
	0x032FBAE0 BL 0x1C16F10
	0x032FBAE4 MOV X19, X0
	0x032FBAE8 ADRP X0, 0xE2C000
	0x032FBAEC LDR X0, [X0 + 0x3B8]
	0x032FBAF0 B 0x32FBB10
	0x032FBAF4 ADRP X0, 0xE00000
	0x032FBAF8 LDR X0, [X0 + 0x760]
	0x032FBAFC BL 0x1C16D08
	0x032FBB00 BL 0x1C16F10
	0x032FBB04 MOV X19, X0
	0x032FBB08 ADRP X0, 0xE27000
	0x032FBB0C LDR X0, [X0 + 0xD90]
	0x032FBB10 BL 0x1C16D08
	0x032FBB14 MOV X20, X0
	0x032FBB18 ADRP X0, 0xE2C000
	0x032FBB1C LDR X0, [X0 + 0x5F8]
	0x032FBB20 BL 0x1C16D08
	0x032FBB24 MOV X2, X0
	0x032FBB28 MOV X0, X19
	0x032FBB2C MOV X1, X20
	0x032FBB30 MOV X3, X31
	0x032FBB34 BL 0x3311888
	0x032FBB38 B 0x32FBB6C
	0x032FBB3C ADRP X0, 0xE00000
	0x032FBB40 LDR X0, [X0 + 0x578]
	0x032FBB44 BL 0x1C16D08
	0x032FBB48 BL 0x1C16F10
	0x032FBB4C MOV X19, X0
	0x032FBB50 ADRP X0, 0xE2C000
	0x032FBB54 LDR X0, [X0 + 0x650]
	0x032FBB58 BL 0x1C16D08
	0x032FBB5C MOV X1, X0
	0x032FBB60 MOV X0, X19
	0x032FBB64 MOV X2, X31
	0x032FBB68 BL 0x3314A68
	0x032FBB6C ADRP X0, 0xE2C000
	0x032FBB70 LDR X0, [X0 + 0x658]
	0x032FBB74 BL 0x1C16D08
	0x032FBB78 MOV X1, X0
	0x032FBB7C MOV X0, X19
	0x032FBB80 BL 0x1C16DEC
	0x032FBB84 STR X30, [X31 - 0x30]!
	0x032FBB88 STP X22, X21, [X31 + 0x10]
	0x032FBB8C STP X20, X19, [X31 + 0x20]
	0x032FBB90 ADRP X22, 0x10E1000
	0x032FBB94 LDRB W8, [X22 + 0xA8B]
	0x032FBB98 MOV X21, X2
	0x032FBB9C MOV X20, X1
	0x032FBBA0 MOV X19, X0
	0x032FBBA4 TBNZ X8, 0x0, 0x32FBBD4
	0x032FBBA8 ADRP X0, 0xE20000
	0x032FBBAC LDR X0, [X0 + 0x720]
	0x032FBBB0 BL 0x1C16CF4
	0x032FBBB4 ADRP X0, 0xE2C000
	0x032FBBB8 LDR X0, [X0 + 0x660]
	0x032FBBBC BL 0x1C16CF4
	0x032FBBC0 ADRP X0, 0xE29000
	0x032FBBC4 LDR X0, [X0 + 0x7C8]
	0x032FBBC8 BL 0x1C16CF4
	0x032FBBCC MOVZ W8, 0x1
	0x032FBBD0 STRB W8, [X22 + 0xA8B]
	0x032FBBD4 ADRP X22, 0xE29000
	0x032FBBD8 LDR X22, [X22 + 0x7C8]
	0x032FBBDC MOV X0, X19
	0x032FBBE0 MOV X1, X31
	0x032FBBE4 BL 0x33BDD8C
	0x032FBBE8 STR X21, [X19 + 0x10]
	0x032FBBEC STR X20, [X19 + 0x40]
	0x032FBBF0 CBZ X20, 0x32FBC24
	0x032FBBF4 ADRP X8, 0xE20000
	0x032FBBF8 LDR X8, [X8 + 0x720]
	0x032FBBFC ADRP X20, 0xE2C000
	0x032FBC00 LDR X0, [X8]
	0x032FBC04 LDR X20, [X20 + 0x660]
	0x032FBC08 BL 0x1C16F10
	0x032FBC0C LDR X2, [X20]
	0x032FBC10 MOV X1, X31
	0x032FBC14 MOV X3, X31
	0x032FBC18 MOV X20, X0
	0x032FBC1C BL 0x3316570
	0x032FBC20 STR X20, [X19 + 0x28]
	0x032FBC24 LDR X0, [X22]
	0x032FBC28 BL 0x1C16F10
	0x032FBC2C MOV W1, W31
	0x032FBC30 MOV X2, X31
	0x032FBC34 MOV X20, X0
	0x032FBC38 BL 0x33DCD78
	0x032FBC3C STR X20, [X19 + 0x20]
	0x032FBC40 LDP X20, X19, [X31 + 0x20]
	0x032FBC44 LDP X22, X21, [X31 + 0x10]
	0x032FBC48 LDR X30, [X31], #0x30
	0x032FBC4C RET
	0x032FBC50 STP X30, X21, [X31 - 0x20]!
	0x032FBC54 STP X20, X19, [X31 + 0x10]
	0x032FBC58 LDR X8, [X2 + 0x8]
	0x032FBC5C STP X1, X2, [X0 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move X0, [X0+56]
	008 Compare X0, 0
	009 JumpIfEqual {75}
	010 Move X22, X1
	011 Move X1, X31
	012 Move W20, W3
	013 Move W21, W2
	014 Call SafeHandle.get_IsClosed, X0
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {76}
	019 Compare X22, 0
	020 JumpIfEqual {88}
	021 Move X8, [X19]
	022 Move X0, X19
	023 Move X9, [X8+424]
	024 Move X1, [X8+432]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {100}
	030 Move TEMP, X21
	031 And TEMP, TEMP, -2147483648
	032 Compare TEMP, -2147483648
	033 JumpIfEqual {112}
	034 Move TEMP, X20
	035 And TEMP, TEMP, -2147483648
	036 Compare TEMP, -2147483648
	037 JumpIfEqual {119}
	038 Move W8, [X22+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Subtract W8, W8, W20
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W8, [X19+85]
	043 Compare W8, 0
	044 JumpIfEqual {66}
	045 Move X8, [X19]
	046 Move X0, X19
	047 Move X1, X22
	048 Move W2, W21
	049 Move X9, [X8+696]
	050 Move X6, [X8+704]
	051 Move W3, W20
	052 Move X4, X31
	053 Move X5, X31
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move X8, [X19]
	056 Move X1, X0
	057 Move X0, X19
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X3, [X8+712]
	061 Move X2, [X8+720]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X30, [X31+48]
	065 CallNoReturn X3
	066 Move X0, X19
	067 Move X1, X22
	068 Move W2, W21
	069 Move W3, W20
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Call 0x1C17F20
	076 Move X0, 0xE22000
	077 Move X0, [X0+1208]
	078 Call 0x1C17D08
	079 Call 0x1C17F10
	080 Move X19, X0
	081 Move X0, 0xE2D000
	082 Move X0, [X0+1392]
	083 Call 0x1C17D08
	084 Move X1, X0
	085 Move X0, X19
	086 Move X2, X31
	087 Call ObjectDisposedException..ctor, X0, X1
	088 Move X0, 0xDFE000
	089 Move X0, [X0+1320]
	090 Call 0x1C17D08
	091 Call 0x1C17F10
	092 Move X19, X0
	093 Move X0, 0xE21000
	094 Move X0, [X0+1600]
	095 Call 0x1C17D08
	096 Move X1, X0
	097 Move X0, X19
	098 Move X2, X31
	099 Call ArgumentNullException..ctor, X0, X1
	100 Move X0, 0xDF9000
	101 Move X0, [X0+2880]
	102 Call 0x1C17D08
	103 Call 0x1C17F10
	104 Move X19, X0
	105 Move X0, 0xE2D000
	106 Move X0, [X0+1440]
	107 Call 0x1C17D08
	108 Move X1, X0
	109 Move X0, X19
	110 Move X2, X31
	111 Call NotSupportedException..ctor, X0, X1
	112 Move X0, 0xE01000
	113 Move X0, [X0+1888]
	114 Call 0x1C17D08
	115 Call 0x1C17F10
	116 Move X19, X0
	117 Move X0, 0xE28000
	118 Move X0, [X0+3472]
	119 Move X0, 0xE01000
	120 Move X0, [X0+1888]
	121 Call 0x1C17D08
	122 Call 0x1C17F10
	123 Move X19, X0
	124 Move X0, 0xE21000
	125 Move X0, [X0+1608]
	126 Call 0x1C17D08
	127 Move X20, X0
	128 Move X0, 0xE27000
	129 Move X0, [X0+3656]
	130 Call 0x1C17D08
	131 Move X2, X0
	132 Move X0, X19
	133 Move X1, X20
	134 Move X3, X31
	135 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	136 Move X0, 0xE01000
	137 Move X0, [X0+1400]
	138 Call 0x1C17D08
	139 Call 0x1C17F10
	140 Move X19, X0
	141 Move X0, 0xE2D000
	142 Move X0, [X0+1480]
	143 Move X0, 0xE01000
	144 Move X0, [X0+1400]
	145 Call 0x1C17D08
	146 Call 0x1C17F10
	147 Move X19, X0
	148 Move X0, 0xE2D000
	149 Move X0, [X0+1488]
	150 Call 0x1C17D08
	151 Move X1, X0
	152 Move X0, X19
	153 Move X2, X31
	154 Call ArgumentException..ctor, X0, X1
	155 Move X0, 0xE2D000
	156 Move X0, [X0+1496]
	157 Call 0x1C17D08
	158 Move X1, X0
	159 Move X0, X19
	160 Call 0x1C17DEC

Method: System.Int32 ReadInternal(System.Byte[] dest, System.Int32 offset, System.Int32 count)

Disassembly:
	0x032FBC60 MOV X19, X0
	0x032FBC64 MOV X20, X1
	0x032FBC68 STR X8, [X0 + 0x10]
	0x032FBC6C LDRB W21, [X2 + 0x52]
	0x032FBC70 STR X0, [X0 + 0x40]
	0x032FBC74 MOV X0, X2
	0x032FBC78 BL 0x1C16D84
	0x032FBC7C TBZ X0, 0x0, 0x32FBC94
	0x032FBC80 CMP W21, 0x3
	0x032FBC84 B.NE 0x32FBCB0
	0x032FBC88 ADRP X8, 0xFFFFFFFFFE8BC000
	0x032FBC8C ADD X8, X8, 0xB34
	0x032FBC90 B 0x32FBCA4
	0x032FBC94 CMP W21, 0x2
	0x032FBC98 B.NE 0x32FBCAC
	0x032FBC9C ADRP X8, 0xFFFFFFFFFE8BC000
	0x032FBCA0 ADD X8, X8, 0xB0C
	0x032FBCA4 STR X8, [X19 + 0x18]
	0x032FBCA8 B 0x32FBCC0
	0x032FBCAC CBZ X20, 0x32FBCD8
	0x032FBCB0 LDR X8, [X19 + 0x10]
	0x032FBCB4 LDR X9, [X19 + 0x20]
	0x032FBCB8 STR X8, [X19 + 0x18]
	0x032FBCBC STR X9, [X19 + 0x40]
	0x032FBCC0 ADRP X8, 0xFFFFFFFFFE8BC000
	0x032FBCC4 ADD X8, X8, 0xAAC
	0x032FBCC8 STR X8, [X19 + 0x38]
	0x032FBCCC LDP X20, X19, [X31 + 0x10]
	0x032FBCD0 LDP X30, X21, [X31], #0x20
	0x032FBCD4 RET
	0x032FBCD8 ADRP X1, 0xFFFFFFFFFD820000
	0x032FBCDC ADD X1, X1, 0xEE3
	0x032FBCE0 MOV X0, X31
	0x032FBCE4 BL 0x1C16F3C
	0x032FBCE8 MOV X1, X31
	0x032FBCEC BL 0x1C16DEC
	0x032FBCF0 SUB X31, X31, 0x60
	0x032FBCF4 STR X30, [X31 + 0x20]
	0x032FBCF8 STP X24, X23, [X31 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W23, W3
	008 Move W22, W2
	009 Move X21, X1
	010 Move X20, X0
	011 Call FileStream.ReadSegment, X0, X1, X2, X3
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move W8, [X20+92]
	014 Subtract W23, W23, W0
	015 Move W19, W0
	016 Move X0, X20
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Call FileStream.FlushBuffer, X0
	019 Move X1, [X20+56]
	020 Add W3, W19, W22
	021 Move X0, X20
	022 Move X2, X21
	023 Move W4, W23
	024 Call FileStream.ReadData, X0, X1, X2, X3, X4
	025 Move X8, [X20+104]
	026 Add X8, X8, W0
	027 Move [X20+104], X8
	028 Call FileStream.RefillBuffer, X0
	029 Add W2, W19, W22
	030 Move X0, X20
	031 Move X1, X21
	032 Move W3, W23
	033 Call FileStream.ReadSegment, X0, X1, X2, X3
	034 Add W23, W0, W19
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move W0, W23
	040 Move X30, [X31+48]
	041 Move X23, [X31+56]
	042 Return X0

Method: System.IAsyncResult BeginRead(System.Byte[] array, System.Int32 offset, System.Int32 numBytes, System.AsyncCallback userCallback, System.Object stateObject)

Disassembly:
	0x032FBDB4 ADRP X0, 0xE2C000
	0x032FBDB8 LDR X0, [X0 + 0x610]
	0x032FBDBC BL 0x1C16CF4
	0x032FBDC0 ADRP X0, 0xE2C000
	0x032FBDC4 LDR X0, [X0 + 0x640]
	0x032FBDC8 BL 0x1C16CF4
	0x032FBDCC MOVZ W8, 0x1
	0x032FBDD0 STRB W8, [X21 + 0xA7E]
	0x032FBDD4 CBZ X19, 0x32FBEB0
	0x032FBDD8 LDRB W8, [X20 + 0x55]
	0x032FBDDC CBZ W8, 0x32FBE54
	0x032FBDE0 ADRP X9, 0xE2C000
	0x032FBDE4 LDR X9, [X9 + 0x610]
	0x032FBDE8 LDR X8, [X19]
	0x032FBDEC LDR X9, [X9]
	0x032FBDF0 LDRB W11, [X8 + 0x130]
	0x032FBDF4 LDRB W10, [X9 + 0x130]
	0x032FBDF8 CMP W11, W10
	0x032FBDFC B.CC 0x32FBE68
	0x032FBE00 LDR X11, [X8 + 0xC8]
	0x032FBE04 ADD X10, X11, X10, 0x3, LSL
	0x032FBE08 LDUR X10, [X10 - 0x8]
	0x032FBE0C CMP X10, X9
	0x032FBE10 B.NE 0x32FBE68
	0x032FBE14 LDR X9, [X8 + 0x238]
	0x032FBE18 LDR X1, [X8 + 0x240]
	0x032FBE1C MOV X0, X19
	0x032FBE20 BLR X9
	0x032FBE24 CBZ X0, 0x32FBE68
	0x032FBE28 ADRP X8, 0xE2C000
	0x032FBE2C LDR X8, [X8 + 0x640]
	0x032FBE30 LDR X9, [X0]
	0x032FBE34 LDR X8, [X8]
	0x032FBE38 CMP X9, X8
	0x032FBE3C B.NE 0x32FBE68
	0x032FBE40 MOV X0, X19
	0x032FBE44 LDP X20, X19, [X31 + 0x10]
	0x032FBE48 MOV X1, X31
	0x032FBE4C LDP X30, X21, [X31], #0x20
	0x032FBE50 B 0x1C16CB4
	0x032FBE54 MOV X0, X20
	0x032FBE58 MOV X1, X19
	0x032FBE5C LDP X20, X19, [X31 + 0x10]
	0x032FBE60 LDP X30, X21, [X31], #0x20
	0x032FBE64 B 0x32F14E0
	0x032FBE68 ADRP X0, 0xE00000
	0x032FBE6C LDR X0, [X0 + 0x578]
	0x032FBE70 BL 0x1C16D08
	0x032FBE74 BL 0x1C16F10
	0x032FBE78 MOV X19, X0
	0x032FBE7C ADRP X0, 0xE2C000
	0x032FBE80 LDR X0, [X0 + 0x618]
	0x032FBE84 BL 0x1C16D08
	0x032FBE88 MOV X20, X0
	0x032FBE8C ADRP X0, 0xE23000
	0x032FBE90 LDR X0, [X0 + 0xDD0]
	0x032FBE94 BL 0x1C16D08
	0x032FBE98 MOV X2, X0
	0x032FBE9C MOV X0, X19
	0x032FBEA0 MOV X1, X20
	0x032FBEA4 MOV X3, X31
	0x032FBEA8 BL 0x330E16C
	0x032FBEAC B 0x32FBEE0
	0x032FBEB0 ADRP X0, 0xDFD000
	0x032FBEB4 LDR X0, [X0 + 0x528]
	0x032FBEB8 BL 0x1C16D08
	0x032FBEBC BL 0x1C16F10
	0x032FBEC0 MOV X19, X0
	0x032FBEC4 ADRP X0, 0xE23000
	0x032FBEC8 LDR X0, [X0 + 0xDD0]
	0x032FBECC BL 0x1C16D08
	0x032FBED0 MOV X1, X0
	0x032FBED4 MOV X0, X19
	0x032FBED8 MOV X2, X31
	0x032FBEDC BL 0x330E100
	0x032FBEE0 ADRP X0, 0xE2C000
	0x032FBEE4 LDR X0, [X0 + 0x668]
	0x032FBEE8 BL 0x1C16D08
	0x032FBEEC MOV X1, X0
	0x032FBEF0 MOV X0, X19
	0x032FBEF4 BL 0x1C16DEC
	0x032FBEF8 MOV X0, X1
	0x032FBEFC MOV X1, X31
	0x032FBF00 B 0x1C16CB4
	0x032FBF04 STR X30, [X31 - 0x30]!
	0x032FBF08 STP X22, X21, [X31 + 0x10]
	0x032FBF0C STP X20, X19, [X31 + 0x20]
	0x032FBF10 ADRP X22, 0x10E1000
	0x032FBF14 LDRB W8, [X22 + 0xA7F]
	0x032FBF18 MOV W21, W2
	0x032FBF1C MOV X20, X1
	0x032FBF20 MOV X19, X0
	0x032FBF24 TBNZ X8, 0x0, 0x32FBF3C
	0x032FBF28 ADRP X0, 0xE26000
	0x032FBF2C LDR X0, [X0 + 0xFA8]
	0x032FBF30 BL 0x1C16CF4
	0x032FBF34 MOVZ W8, 0x1
	0x032FBF38 STRB W8, [X22 + 0xA7F]
	0x032FBF3C STR W31, [X31 + 0xC]
	0x032FBF40 LDR X0, [X19 + 0x38]
	0x032FBF44 CBZ X0, 0x32FC000
	0x032FBF48 MOV X1, X31
	0x032FBF4C BL 0x32C02A8
	0x032FBF50 TBNZ X0, 0x0, 0x32FC004
	0x032FBF54 LDR X8, [X19]
	0x032FBF58 MOV X0, X19
	0x032FBF5C LDP X9, X1, [X8 + 0x1B8]
	0x032FBF60 BLR X9
	0x032FBF64 TBZ X0, 0x0, 0x32FC038
	0x032FBF68 CBZ W21, 0x32FBF9C
	0x032FBF6C CMP W21, 0x1
	0x032FBF70 B.EQ 0x32FBF88
	0x032FBF74 CMP W21, 0x2
	0x032FBF78 B.NE 0x32FC0F8
	0x032FBF7C LDR X8, [X19]
	0x032FBF80 LDP X9, X1, [X8 + 0x1E8]
	0x032FBF84 B 0x32FBF90
	0x032FBF88 LDR X8, [X19]
	0x032FBF8C LDP X9, X1, [X8 + 0x1F8]
	0x032FBF90 MOV X0, X19
	0x032FBF94 BLR X9
	0x032FBF98 ADD X20, X0, X20
	0x032FBF9C TBNZ X20, 0x0, 0x32FC06C
	0x032FBFA0 LDR X8, [X19 + 0x48]
	0x032FBFA4 CMP X20, X8
	0x032FBFA8 B.LT 0x32FC08C
	0x032FBFAC ADRP X21, 0xE26000
	0x032FBFB0 LDR X21, [X21 + 0xFA8]
	0x032FBFB4 MOV X0, X19
	0x032FBFB8 BL 0x32FA4B0
	0x032FBFBC LDR X0, [X21]
	0x032FBFC0 LDR X21, [X19 + 0x38]
	0x032FBFC4 LDR W8, [X0 + 0xE0]
	0x032FBFC8 CBNZ W8, 0x32FBFD0
	0x032FBFCC BL 0x1C16DFC
	0x032FBFD0 ADD X3, X31, 0xC
	0x032FBFD4 MOV X0, X21
	0x032FBFD8 MOV X1, X20
	0x032FBFDC MOV W2, W31
	0x032FBFE0 BL 0x32F9E5C
	0x032FBFE4 STR X0, [X19 + 0x68]
	0x032FBFE8 LDR W8, [X31 + 0xC]
	0x032FBFEC CBNZ W8, 0x32FC0C0
	0x032FBFF0 LDP X20, X19, [X31 + 0x20]
	0x032FBFF4 LDP X22, X21, [X31 + 0x10]
	0x032FBFF8 LDR X30, [X31], #0x30
	0x032FBFFC RET
	0x032FC000 BL 0x1C16F20
	0x032FC004 ADRP X0, 0xE20000
	0x032FC008 LDR X0, [X0 + 0x4B8]
	0x032FC00C BL 0x1C16D08
	0x032FC010 BL 0x1C16F10
	0x032FC014 MOV X19, X0
	0x032FC018 ADRP X0, 0xE2B000
	0x032FC01C LDR X0, [X0 + 0x570]
	0x032FC020 BL 0x1C16D08
	0x032FC024 MOV X1, X0
	0x032FC028 MOV X0, X19
	0x032FC02C MOV X2, X31
	0x032FC030 BL 0x338C448
	0x032FC034 B 0x32FC13C
	0x032FC038 ADRP X0, 0xDF7000
	0x032FC03C LDR X0, [X0 + 0xB40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x10E2000
	011 Move W8, [X25+2682]
	012 Move X19, X5
	013 Move X20, X4
	014 Move W21, W3
	015 Move W22, W2
	016 Move X23, X1
	017 Move X24, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xE2D000
	023 Move X0, [X0+1504]
	024 Call 0x1C17CF4
	025 Move X0, 0xE2D000
	026 Move X0, [X0+1512]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+2682], W8
	030 Move X0, [X24+56]
	031 Compare X0, 0
	032 JumpIfEqual {112}
	033 Move X1, X31
	034 Call SafeHandle.get_IsClosed, X0
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {113}
	039 Move X8, [X24]
	040 Move X0, X24
	041 Move X9, [X8+424]
	042 Move X1, [X8+432]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {125}
	048 Compare X23, 0
	049 JumpIfEqual {137}
	050 Move TEMP, X21
	051 And TEMP, TEMP, -2147483648
	052 Compare TEMP, -2147483648
	053 JumpIfEqual {149}
	054 Move TEMP, X22
	055 And TEMP, TEMP, -2147483648
	056 Compare TEMP, -2147483648
	057 JumpIfEqual {156}
	058 Move W8, [X23+24]
	059 Subtract W8, W8, W22
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W8, [X24+85]
	062 Compare W8, 0
	063 JumpIfEqual {93}
	064 Move X8, 0xE2D000
	065 Move X8, [X8+1512]
	066 Move X25, 0xE2D000
	067 Move X0, [X8]
	068 Move X25, [X25+1504]
	069 Call 0x1C17F10
	070 Move X2, [X25]
	071 Move X1, X24
	072 Move X25, X0
	073 Call ReadDelegate..ctor, X0, X1, X2
	074 Compare X25, 0
	075 JumpIfEqual {112}
	076 Move X0, X25
	077 Move X1, X23
	078 Move W2, W22
	079 Move W3, W21
	080 Move X4, X20
	081 Move X5, X19
	082 Move X20, [X31+64]
	083 Move X19, [X31+72]
	084 Move X22, [X31+48]
	085 Move X21, [X31+56]
	086 Move X24, [X31+32]
	087 Move X23, [X31+40]
	088 Move X30, [X31+16]
	089 Move X25, [X31+24]
	090 Add X31, X31, 80
	091 Call ReadDelegate.BeginInvoke, X0, X1, X2, X3, X4, X5
	092 Return X0
	093 Move W7, 1
	094 Move X0, X24
	095 Move X1, X23
	096 Move W2, W22
	097 Move W3, W21
	098 Move X4, X20
	099 Move X5, X19
	100 Move W6, W31
	101 Call Stream.BeginReadInternal, X0, X1, X2, X3, X4, X5, X6, X7
	102 Move X20, [X31+64]
	103 Move X19, [X31+72]
	104 Move X22, [X31+48]
	105 Move X21, [X31+56]
	106 Move X24, [X31+32]
	107 Move X23, [X31+40]
	108 Move X30, [X31+16]
	109 Move X25, [X31+24]
	110 Add X31, X31, 80
	111 Return X0
	112 Call 0x1C17F20
	113 Move X0, 0xE22000
	114 Move X0, [X0+1208]
	115 Call 0x1C17D08
	116 Call 0x1C17F10
	117 Move X19, X0
	118 Move X0, 0xE2D000
	119 Move X0, [X0+1392]
	120 Call 0x1C17D08
	121 Move X1, X0
	122 Move X0, X19
	123 Move X2, X31
	124 Call ObjectDisposedException..ctor, X0, X1
	125 Move X0, 0xDF9000
	126 Move X0, [X0+2880]
	127 Call 0x1C17D08
	128 Call 0x1C17F10
	129 Move X19, X0
	130 Move X0, 0xE2D000
	131 Move X0, [X0+1520]
	132 Call 0x1C17D08
	133 Move X1, X0
	134 Move X0, X19
	135 Move X2, X31
	136 Call NotSupportedException..ctor, X0, X1
	137 Move X0, 0xDFE000
	138 Move X0, [X0+1320]
	139 Call 0x1C17D08
	140 Call 0x1C17F10
	141 Move X19, X0
	142 Move X0, 0xE21000
	143 Move X0, [X0+1600]
	144 Call 0x1C17D08
	145 Move X1, X0
	146 Move X0, X19
	147 Move X2, X31
	148 Call ArgumentNullException..ctor, X0, X1
	149 Move X0, 0xE01000
	150 Move X0, [X0+1888]
	151 Call 0x1C17D08
	152 Call 0x1C17F10
	153 Move X19, X0
	154 Move X0, 0xE2D000
	155 Move X0, [X0+952]
	156 Move X0, 0xE01000
	157 Move X0, [X0+1888]
	158 Call 0x1C17D08
	159 Call 0x1C17F10
	160 Move X19, X0
	161 Move X0, 0xE28000
	162 Move X0, [X0+3472]
	163 Call 0x1C17D08
	164 Move X20, X0
	165 Move X0, 0xE2D000
	166 Move X0, [X0+1528]
	167 Call 0x1C17D08
	168 Move X2, X0
	169 Move X0, X19
	170 Move X1, X20
	171 Move X3, X31
	172 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	173 Move X0, 0xE01000
	174 Move X0, [X0+1400]
	175 Call 0x1C17D08
	176 Call 0x1C17F10
	177 Move X19, X0
	178 Move X0, 0xE2C000
	179 Move X0, [X0+1536]
	180 Call 0x1C17D08
	181 Move X1, X0
	182 Move X0, X19
	183 Move X2, X31
	184 Call ArgumentException..ctor, X0, X1
	185 Move X0, 0xE2C000
	186 Move X0, [X0+1544]
	187 Call 0x1C17D08
	188 Move X1, X0
	189 Move X0, X19
	190 Call 0x1C17DEC

Method: System.Int32 EndRead(System.IAsyncResult asyncResult)

Disassembly:
	0x032FC188 STR W31, [X31 + 0xC]
	0x032FC18C LDR X0, [X20 + 0x38]
	0x032FC190 CBZ X0, 0x32FC248
	0x032FC194 MOV X1, X31
	0x032FC198 BL 0x32C02A8
	0x032FC19C TBNZ X0, 0x0, 0x32FC24C
	0x032FC1A0 LDR X8, [X20]
	0x032FC1A4 MOV X0, X20
	0x032FC1A8 LDP X9, X1, [X8 + 0x1B8]
	0x032FC1AC BLR X9
	0x032FC1B0 TBZ X0, 0x0, 0x32FC280
	0x032FC1B4 LDR X8, [X20]
	0x032FC1B8 MOV X0, X20
	0x032FC1BC LDP X9, X1, [X8 + 0x1D8]
	0x032FC1C0 BLR X9
	0x032FC1C4 TBZ X0, 0x0, 0x32FC2A0
	0x032FC1C8 TBNZ X19, 0x0, 0x32FC2D4
	0x032FC1CC ADRP X21, 0xE25000
	0x032FC1D0 LDR X21, [X21 + 0xFA8]
	0x032FC1D4 MOV X0, X20
	0x032FC1D8 BL 0x32FA4B0
	0x032FC1DC LDR X0, [X21]
	0x032FC1E0 LDR X21, [X20 + 0x38]
	0x032FC1E4 LDR W8, [X0 + 0xE0]
	0x032FC1E8 CBNZ W8, 0x32FC1F0
	0x032FC1EC BL 0x1C16DFC
	0x032FC1F0 ADD X2, X31, 0xC
	0x032FC1F4 MOV X0, X21
	0x032FC1F8 MOV X1, X19
	0x032FC1FC BL 0x32FC354
	0x032FC200 LDR W8, [X31 + 0xC]
	0x032FC204 CBNZ W8, 0x32FC308
	0x032FC208 LDR X8, [X20]
	0x032FC20C MOV X0, X20
	0x032FC210 LDP X9, X1, [X8 + 0x1F8]
	0x032FC214 BLR X9
	0x032FC218 CMP X0, X19
	0x032FC21C B.LE 0x32FC238
	0x032FC220 LDR X8, [X20]
	0x032FC224 MOV X0, X20
	0x032FC228 MOV X1, X19
	0x032FC22C LDR X9, [X8 + 0x208]
	0x032FC230 LDR X2, [X8 + 0x210]
	0x032FC234 BLR X9
	0x032FC238 LDP X20, X19, [X31 + 0x20]
	0x032FC23C LDP X30, X21, [X31 + 0x10]
	0x032FC240 ADD X31, X31, 0x30
	0x032FC244 RET
	0x032FC248 BL 0x1C16F20
	0x032FC24C ADRP X0, 0xE20000
	0x032FC250 LDR X0, [X0 + 0x4B8]
	0x032FC254 BL 0x1C16D08
	0x032FC258 BL 0x1C16F10
	0x032FC25C MOV X19, X0
	0x032FC260 ADRP X0, 0xE2B000
	0x032FC264 LDR X0, [X0 + 0x570]
	0x032FC268 BL 0x1C16D08
	0x032FC26C MOV X1, X0
	0x032FC270 MOV X0, X19
	0x032FC274 MOV X2, X31
	0x032FC278 BL 0x338C448
	0x032FC27C B 0x32FC33C
	0x032FC280 ADRP X0, 0xDF7000
	0x032FC284 LDR X0, [X0 + 0xB40]
	0x032FC288 BL 0x1C16D08
	0x032FC28C BL 0x1C16F10
	0x032FC290 MOV X19, X0
	0x032FC294 ADRP X0, 0xE2B000
	0x032FC298 LDR X0, [X0 + 0x578]
	0x032FC29C B 0x32FC2BC
	0x032FC2A0 ADRP X0, 0xDF7000
	0x032FC2A4 LDR X0, [X0 + 0xB40]
	0x032FC2A8 BL 0x1C16D08
	0x032FC2AC BL 0x1C16F10
	0x032FC2B0 MOV X19, X0
	0x032FC2B4 ADRP X0, 0xE2B000
	0x032FC2B8 LDR X0, [X0 + 0x698]
	0x032FC2BC BL 0x1C16D08
	0x032FC2C0 MOV X1, X0
	0x032FC2C4 MOV X0, X19
	0x032FC2C8 MOV X2, X31
	0x032FC2CC BL 0x3379A44
	0x032FC2D0 B 0x32FC33C
	0x032FC2D4 ADRP X0, 0xDFF000
	0x032FC2D8 LDR X0, [X0 + 0x760]
	0x032FC2DC BL 0x1C16D08
	0x032FC2E0 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10E1000
	006 Move W8, [X21+2683]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xE2C000
	014 Move X0, [X0+1552]
	015 Call 0x1C17CF4
	016 Move X0, 0xE2C000
	017 Move X0, [X0+1512]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2683], W8
	021 Compare X19, 0
	022 JumpIfEqual {78}
	023 Move W8, [X20+85]
	024 Compare W8, 0
	025 JumpIfEqual {53}
	026 Move X9, 0xE2C000
	027 Move X9, [X9+1552]
	028 Move X8, [X19]
	029 Move X9, [X9]
	030 Move W11, [X8+304]
	031 Move W10, [X9+304]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X11, [X8+200]
	034 Add X10, X11, X10
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X9, [X8+568]
	038 Move X1, [X8+576]
	039 Move X0, X19
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Compare X0, 0
	042 JumpIfEqual {61}
	043 Move X8, 0xE2C000
	044 Move X8, [X8+1512]
	045 Move X9, [X0]
	046 Move X8, [X8]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X1, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Move X0, X20
	054 Move X1, X19
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Call Stream.EndRead, X0, X1
	060 Return X0
	061 Move X0, 0xE00000
	062 Move X0, [X0+1400]
	063 Call 0x1C17D08
	064 Call 0x1C17F10
	065 Move X19, X0
	066 Move X0, 0xE2C000
	067 Move X0, [X0+1560]
	068 Call 0x1C17D08
	069 Move X20, X0
	070 Move X0, 0xE23000
	071 Move X0, [X0+3536]
	072 Call 0x1C17D08
	073 Move X2, X0
	074 Move X0, X19
	075 Move X1, X20
	076 Move X3, X31
	077 Call ArgumentException..ctor, X0, X1, X2
	078 Move X0, 0xDFD000
	079 Move X0, [X0+1320]
	080 Call 0x1C17D08
	081 Call 0x1C17F10
	082 Move X19, X0
	083 Move X0, 0xE23000
	084 Move X0, [X0+3536]
	085 Call 0x1C17D08
	086 Move X1, X0
	087 Move X0, X19
	088 Move X2, X31
	089 Call ArgumentNullException..ctor, X0, X1
	090 Move X0, 0xE2C000
	091 Move X0, [X0+1568]
	092 Call 0x1C17D08
	093 Move X1, X0
	094 Move X0, X19
	095 Call 0x1C17DEC

Method: System.Void Write(System.Byte[] array, System.Int32 offset, System.Int32 count)

Disassembly:
	0x032FC30C MOV X0, X20
	0x032FC310 BL 0x32F92BC
	0x032FC314 MOV X20, X0
	0x032FC318 ADRP X0, 0xE25000
	0x032FC31C LDR W19, [X31 + 0xC]
	0x032FC320 LDR X0, [X0 + 0xFA8]
	0x032FC324 BL 0x1C16D08
	0x032FC328 BL 0x19903D0
	0x032FC32C MOV X0, X20
	0x032FC330 MOV W1, W19
	0x032FC334 BL 0x32F9334
	0x032FC338 MOV X19, X0
	0x032FC33C ADRP X0, 0xE2B000
	0x032FC340 LDR X0, [X0 + 0x6A8]
	0x032FC344 BL 0x1C16D08
	0x032FC348 MOV X1, X0
	0x032FC34C MOV X0, X19
	0x032FC350 BL 0x1C16DEC
	0x032FC354 STR X30, [X31 - 0x30]!
	0x032FC358 STP X22, X21, [X31 + 0x10]
	0x032FC35C STP X20, X19, [X31 + 0x20]
	0x032FC360 ADRP X22, 0x10E0000
	0x032FC364 LDRB W8, [X22 + 0xA95]
	0x032FC368 MOV X20, X2
	0x032FC36C MOV X21, X1
	0x032FC370 MOV X19, X0
	0x032FC374 TBNZ X8, 0x0, 0x32FC38C
	0x032FC378 ADRP X0, 0xE25000
	0x032FC37C LDR X0, [X0 + 0xFA8]
	0x032FC380 BL 0x1C16CF4
	0x032FC384 MOVZ W8, 0x1
	0x032FC388 STRB W8, [X22 + 0xA95]
	0x032FC38C STRB W31, [X31 + 0xC]
	0x032FC390 CBZ X19, 0x32FC404
	0x032FC394 ADD X1, X31, 0xC
	0x032FC398 MOV X0, X19
	0x032FC39C MOV X2, X31
	0x032FC3A0 BL 0x32BF948
	0x032FC3A4 ADRP X8, 0xE25000
	0x032FC3A8 LDR X8, [X8 + 0xFA8]
	0x032FC3AC LDR X22, [X19 + 0x10]
	0x032FC3B0 LDR X0, [X8]
	0x032FC3B4 LDR W8, [X0 + 0xE0]
	0x032FC3B8 CBNZ W8, 0x32FC3C0
	0x032FC3BC BL 0x1C16DFC
	0x032FC3C0 MOV X0, X22
	0x032FC3C4 MOV X1, X21
	0x032FC3C8 MOV X2, X20
	0x032FC3CC BL 0x1C281EC
	0x032FC3D0 LDRB W8, [X31 + 0xC]
	0x032FC3D4 MOV W21, W0
	0x032FC3D8 CBZ W8, 0x32FC3F0
	0x032FC3DC MOV X20, X31
	0x032FC3E0 MOV X0, X19
	0x032FC3E4 MOV X1, X31
	0x032FC3E8 BL 0x32BFAB4
	0x032FC3EC CBNZ X20, 0x32FC448
	0x032FC3F0 AND W0, W21, 0x1
	0x032FC3F4 LDP X20, X19, [X31 + 0x20]
	0x032FC3F8 LDP X22, X21, [X31 + 0x10]
	0x032FC3FC LDR X30, [X31], #0x30
	0x032FC400 RET
	0x032FC404 BL 0x1C16F20
	0x032FC408 B 0x32FC410
	0x032FC40C B 0x32FC410
	0x032FC410 MOV X21, X0
	0x032FC414 CMP W1, 0x1
	0x032FC418 B.NE 0x32FC450
	0x032FC41C MOV X0, X21
	0x032FC420 BL 0x3EB1AD0
	0x032FC424 LDR X20, [X0]
	0x032FC428 BL 0x3EB1AE0
	0x032FC42C LDRB W8, [X31 + 0xC]
	0x032FC430 CBZ W8, 0x32FC440
	0x032FC434 CBZ X19, 0x32FC458
	0x032FC438 MOV W21, W31
	0x032FC43C B 0x32FC3E0
	0x032FC440 MOV W21, W31
	0x032FC444 CBZ X20, 0x32FC3F0
	0x032FC448 MOV X0, X20
	0x032FC44C BL 0x1C16F18
	0x032FC450 MOV X20, X31
	0x032FC454 B 0x32FC460
	0x032FC458 BL 0x1C16F20
	0x032FC45C MOV X21, X0
	0x032FC460 LDRB W8, [X31 + 0xC]
	0x032FC464 CBZ W8, 0x32FC47C
	0x032FC468 CBNZ X19, 0x32FC470
	0x032FC46C BL 0x1C16F20
	0x032FC470 MOV X0, X19
	0x032FC474 MOV X1, X31
	0x032FC478 BL 0x32BFAB4
	0x032FC47C CBNZ X20, 0x32FC488
	0x032FC480 MOV X0, X21
	0x032FC484 BL 0x1D2C690
	0x032FC488 MOV X0, X20
	0x032FC48C BL 0x1C16F18
	0x032FC490 BL 0x1990590
	0x032FC494 STP X30, X19, [X31 - 0x10]!
	0x032FC498 MOV X19, X0
	0x032FC49C LDR X0, [X0 + 0x38]
	0x032FC4A0 CBZ X0, 0x32FC4BC
	0x032FC4A4 MOV X1, X31
	0x032FC4A8 BL 0x32C02A8
	0x032FC4AC TBNZ X0, 0x0, 0x32FC4C0
	0x032FC4B0 MOV X0, X19
	0x032FC4B4 LDP X30, X19, [X31], #0x10
	0x032FC4B8 B 0x32FA4B0
	0x032FC4BC BL 0x1C16F20
	0x032FC4C0 ADRP X0, 0xE20000
	0x032FC4C4 LDR X0, [X0 + 0x4B8]
	0x032FC4C8 BL 0x1C16D08
	0x032FC4CC BL 0x1C16F10
	0x032FC4D0 MOV X19, X0
	0x032FC4D4 ADRP X0, 0xE2B000
	0x032FC4D8 LDR X0, [X0 + 0x570]
	0x032FC4DC BL 0x1C16D08
	0x032FC4E0 MOV X1, X0
	0x032FC4E4 MOV X0, X19
	0x032FC4E8 MOV X2, X31
	0x032FC4EC BL 0x338C448
	0x032FC4F0 ADRP X0, 0xE2B000
	0x032FC4F4 LDR X0, [X0 + 0x6B0]
	0x032FC4F8 BL 0x1C16D08
	0x032FC4FC MOV X1, X0
	0x032FC500 MOV X0, X19
	0x032FC504 BL 0x1C16DEC
	0x032FC508 STP X30, X21, [X31 - 0x20]!
	0x032FC50C STP X20, X19, [X31 + 0x10]
	0x032FC510 LDR X8, [X0]
	0x032FC514 MOV X19, X0
	0x032FC518 LDR X9, [X8 + 0x288]
	0x032FC51C LDR X2, [X8 + 0x290]
	0x032FC520 MOV W1, W31
	0x032FC524 BLR X9
	0x032FC528 MOV X0, X19
	0x032FC52C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move X0, [X0+56]
	008 Compare X0, 0
	009 JumpIfEqual {74}
	010 Move X22, X1
	011 Move X1, X31
	012 Move W20, W3
	013 Move W21, W2
	014 Call SafeHandle.get_IsClosed, X0
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {75}
	019 Compare X22, 0
	020 JumpIfEqual {87}
	021 Move TEMP, X21
	022 And TEMP, TEMP, -2147483648
	023 Compare TEMP, -2147483648
	024 JumpIfEqual {99}
	025 Move TEMP, X20
	026 And TEMP, TEMP, -2147483648
	027 Compare TEMP, -2147483648
	028 JumpIfEqual {106}
	029 Move W8, [X22+24]
	030 Subtract W8, W8, W20
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X8, [X19]
	033 Move X0, X19
	034 Move X9, [X8+472]
	035 Move X1, [X8+480]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {135}
	041 Move W8, [X19+85]
	042 Compare W8, 0
	043 JumpIfEqual {65}
	044 Move X8, [X19]
	045 Move X0, X19
	046 Move X1, X22
	047 Move W2, W21
	048 Move X9, [X8+760]
	049 Move X6, [X8+768]
	050 Move W3, W20
	051 Move X4, X31
	052 Move X5, X31
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X8, [X19]
	055 Move X1, X0
	056 Move X0, X19
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X3, [X8+776]
	060 Move X2, [X8+784]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 CallNoReturn X3
	065 Move X0, X19
	066 Move X1, X22
	067 Move W2, W21
	068 Move W3, W20
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Call 0x1C17F20
	075 Move X0, 0xE21000
	076 Move X0, [X0+1208]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X19, X0
	080 Move X0, 0xE2C000
	081 Move X0, [X0+1392]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X19
	085 Move X2, X31
	086 Call ObjectDisposedException..ctor, X0, X1
	087 Move X0, 0xDFD000
	088 Move X0, [X0+1320]
	089 Call 0x1C17D08
	090 Call 0x1C17F10
	091 Move X19, X0
	092 Move X0, 0xE20000
	093 Move X0, [X0+1600]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X19
	097 Move X2, X31
	098 Call ArgumentNullException..ctor, X0, X1
	099 Move X0, 0xE00000
	100 Move X0, [X0+1888]
	101 Call 0x1C17D08
	102 Call 0x1C17F10
	103 Move X19, X0
	104 Move X0, 0xE27000
	105 Move X0, [X0+3472]
	106 Move X0, 0xE00000
	107 Move X0, [X0+1888]
	108 Call 0x1C17D08
	109 Call 0x1C17F10
	110 Move X19, X0
	111 Move X0, 0xE20000
	112 Move X0, [X0+1608]
	113 Call 0x1C17D08
	114 Move X20, X0
	115 Move X0, 0xE26000
	116 Move X0, [X0+3656]
	117 Call 0x1C17D08
	118 Move X2, X0
	119 Move X0, X19
	120 Move X1, X20
	121 Move X3, X31
	122 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	123 Move X0, 0xE00000
	124 Move X0, [X0+1400]
	125 Call 0x1C17D08
	126 Call 0x1C17F10
	127 Move X19, X0
	128 Move X0, 0xE2C000
	129 Move X0, [X0+1488]
	130 Call 0x1C17D08
	131 Move X1, X0
	132 Move X0, X19
	133 Move X2, X31
	134 Call ArgumentException..ctor, X0, X1
	135 Move X0, 0xDF8000
	136 Move X0, [X0+2880]
	137 Call 0x1C17D08
	138 Call 0x1C17F10
	139 Move X19, X0
	140 Move X0, 0xE2C000
	141 Move X0, [X0+1464]
	142 Call 0x1C17D08
	143 Move X1, X0
	144 Move X0, X19
	145 Move X2, X31
	146 Call NotSupportedException..ctor, X0, X1
	147 Move X0, 0xE2C000
	148 Move X0, [X0+1576]
	149 Call 0x1C17D08
	150 Move X1, X0
	151 Move X0, X19
	152 Call 0x1C17DEC

Method: System.Void WriteInternal(System.Byte[] src, System.Int32 offset, System.Int32 count)

Disassembly:
	0x032FC530 MOV X1, X31
	0x032FC534 LDP X30, X21, [X31], #0x20
	0x032FC538 B 0x33CB4DC
	0x032FC53C CMP W1, 0x1
	0x032FC540 MOV X21, X0
	0x032FC544 B.NE 0x32FC574
	0x032FC548 MOV X0, X21
	0x032FC54C BL 0x3EB1AD0
	0x032FC550 LDR X20, [X0]
	0x032FC554 BL 0x3EB1AE0
	0x032FC558 MOV X0, X19
	0x032FC55C MOV X1, X31
	0x032FC560 BL 0x33CB4DC
	0x032FC564 CBNZ X20, 0x32FC57C
	0x032FC568 LDP X20, X19, [X31 + 0x10]
	0x032FC56C LDP X30, X21, [X31], #0x20
	0x032FC570 RET
	0x032FC574 MOV X20, X31
	0x032FC578 B 0x32FC588
	0x032FC57C MOV X0, X20
	0x032FC580 BL 0x1C16F18
	0x032FC584 MOV X21, X0
	0x032FC588 MOV X0, X19
	0x032FC58C MOV X1, X31
	0x032FC590 BL 0x33CB4DC
	0x032FC594 CBNZ X20, 0x32FC5A0
	0x032FC598 MOV X0, X21
	0x032FC59C BL 0x1D2C690
	0x032FC5A0 MOV X0, X20
	0x032FC5A4 BL 0x1C16F18
	0x032FC5A8 BL 0x1990590
	0x032FC5AC SUB X31, X31, 0x40
	0x032FC5B0 STP X30, X23, [X31 + 0x10]
	0x032FC5B4 STP X22, X21, [X31 + 0x20]
	0x032FC5B8 STP X20, X19, [X31 + 0x30]
	0x032FC5BC ADRP X20, 0x10E0000
	0x032FC5C0 LDRB W8, [X20 + 0xA81]
	0x032FC5C4 MOV W21, W1
	0x032FC5C8 MOV X19, X0
	0x032FC5CC TBNZ X8, 0x0, 0x32FC5FC
	0x032FC5D0 ADRP X0, 0xE25000
	0x032FC5D4 LDR X0, [X0 + 0x670]
	0x032FC5D8 BL 0x1C16CF4
	0x032FC5DC ADRP X0, 0xDFE000
	0x032FC5E0 LDR X0, [X0 + 0xC10]
	0x032FC5E4 BL 0x1C16CF4
	0x032FC5E8 ADRP X0, 0xE25000
	0x032FC5EC LDR X0, [X0 + 0xFA8]
	0x032FC5F0 BL 0x1C16CF4
	0x032FC5F4 MOVZ W8, 0x1
	0x032FC5F8 STRB W8, [X20 + 0xA81]
	0x032FC5FC STR W31, [X31 + 0xC]
	0x032FC600 STRB W31, [X31 + 0x8]
	0x032FC604 LDR X0, [X19 + 0x38]
	0x032FC608 CBZ X0, 0x32FC67C
	0x032FC60C MOV X1, X31
	0x032FC610 BL 0x32C02A8
	0x032FC614 MOV X20, X31
	0x032FC618 TBNZ X0, 0x0, 0x32FC680
	0x032FC61C MOV X0, X19
	0x032FC620 BL 0x32FA4B0
	0x032FC624 MOV X20, X31
	0x032FC628 LDRB W8, [X19 + 0x54]
	0x032FC62C CBZ W8, 0x32FC680
	0x032FC630 LDR X8, [X19 + 0x38]
	0x032FC634 CBZ X8, 0x32FC7C0
	0x032FC638 ADRP X9, 0xE25000
	0x032FC63C LDR X9, [X9 + 0xFA8]
	0x032FC640 LDR X22, [X8 + 0x10]
	0x032FC644 LDR X0, [X9]
	0x032FC648 LDR W9, [X0 + 0xE0]
	0x032FC64C CBNZ W9, 0x32FC654
	0x032FC650 BL 0x1C16DFC
	0x032FC654 ADD X1, X31, 0xC
	0x032FC658 MOV X0, X22
	0x032FC65C BL 0x1C281B4
	0x032FC660 LDR W8, [X31 + 0xC]
	0x032FC664 CBNZ W8, 0x32FC7C4
	0x032FC668 LDR X0, [X19 + 0x38]
	0x032FC66C CBZ X0, 0x32FC7C0
	0x032FC670 MOV X1, X31
	0x032FC674 BL 0x32BFAB4
	0x032FC678 B 0x32FC680
	0x032FC67C MOV X20, X31
	0x032FC680 STRB W31, [X19 + 0x56]
	0x032FC684 STR W31, [X19 + 0x50]
	0x032FC688 TBZ X21, 0x0, 0x32FC6F0
	0x032FC68C LDR X8, [X19 + 0x28]
	0x032FC690 CBZ X8, 0x32FC6F0
	0x032FC694 LDR W8, [X8 + 0x18]
	0x032FC698 CMP W8, 0x1000
	0x032FC69C B.NE 0x32FC6C8
	0x032FC6A0 ADRP X22, 0xE25000
	0x032FC6A4 LDR X22, [X22 + 0x670]
	0x032FC6A8 LDR X0, [X22]
	0x032FC6AC LDR W8, [X0 + 0xE0]
	0x032FC6B0 CBNZ W8, 0x32FC6BC
	0x032FC6B4 BL 0x1C16DFC
	0x032FC6B8 LDR X0, [X22]
	0x032FC6BC LDR X8, [X0 + 0xB8]
	0x032FC6C0 LDR X9, [X8]
	0x032FC6C4 CBZ X9, 0x32FC708
	0x032FC6C8 STR X31, [X19 + 0x28]
	0x032FC6CC ADRP X8, 0xDFE000
	0x032FC6D0 LDR X8, [X8 + 0xC10]
	0x032FC6D4 LDR X0, [X8]
	0x032FC6D8 LDR W8, [X0 + 0xE0]
	0x032FC6DC CBNZ W8, 0x32FC6E4
	0x032FC6E0 BL 0x1C16DFC
	0x032FC6E4 MOV X0, X19
	0x032FC6E8 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x10E1000
	011 Move W8, [X23+2684]
	012 Move W20, W3
	013 Move W21, W2
	014 Move X22, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xE26000
	021 Move X0, [X0+4008]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+2684], W8
	025 Move [X31+12], W31
	026 Move W8, [X19+92]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X0, X19
	029 Call FileStream.FlushBuffer, X0
	030 Move X8, [X19]
	031 Move X0, X19
	032 Move X9, [X8+440]
	033 Move X1, [X8+448]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {59}
	039 Move W8, [X19+64]
	040 Compare W8, 0
	041 JumpIfNotEqual {59}
	042 Move X8, 0xE26000
	043 Move X8, [X8+4008]
	044 Move X23, [X19+56]
	045 Move X24, [X19+104]
	046 Move X0, [X8]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Add X3, X31, 12
	052 Move X0, X23
	053 Move X1, X24
	054 Move W2, W31
	055 Call MonoIO.Seek, X0, X1, X2, X3
	056 Move W8, [X31+12]
	057 Compare W8, 0
	058 JumpIfNotEqual {106}
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X25, 0xE26000
	061 Move X25, [X25+4008]
	062 Move W23, W20
	063 Move X0, [X25]
	064 Move X24, [X19+56]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Add X4, X31, 12
	070 Move X0, X24
	071 Move X1, X22
	072 Move W2, W21
	073 Move W3, W23
	074 Call MonoIO.Write, X0, X1, X2, X3, X4
	075 Move W8, [X31+12]
	076 Compare W8, 0
	077 JumpIfNotEqual {106}
	078 Subtract W23, W23, W0
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Add W21, W0, W21
	081 Move X8, [X19+104]
	082 Add X8, X8, W20
	083 Move [X19+104], X8
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move W23, W31
	086 Add W2, W23, W21
	087 Move X0, X19
	088 Move X1, X22
	089 Move W3, W20
	090 Call FileStream.WriteSegment, X0, X1, X2, X3
	091 Subtract W20, W20, W0
	092 Add W23, W0, W23
	093 Move X0, X19
	094 Call FileStream.FlushBuffer, X0
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X20, [X31+64]
	097 Move X19, [X31+72]
	098 Move X22, [X31+48]
	099 Move X21, [X31+56]
	100 Move X24, [X31+32]
	101 Move X23, [X31+40]
	102 Move X30, [X31+16]
	103 Move X25, [X31+24]
	104 Add X31, X31, 80
	105 Return 
	106 Move X1, [X19+48]
	107 Move X0, X19
	108 Call FileStream.GetSecureFileName, X0, X1
	109 Move X20, X0
	110 Move X0, 0xE26000
	111 Move W19, [X31+12]
	112 Move X0, [X0+4008]
	113 Call 0x1C17D08
	114 Call 0x19913D0
	115 Move X0, X20
	116 Move W1, W19
	117 Call MonoIO.GetException, X0, X1
	118 Move X19, X0
	119 Move X0, 0xE2C000
	120 Move X0, [X0+1584]
	121 Call 0x1C17D08
	122 Move X1, X0
	123 Move X0, X19
	124 Call 0x1C17DEC

Method: System.IAsyncResult BeginWrite(System.Byte[] array, System.Int32 offset, System.Int32 numBytes, System.AsyncCallback userCallback, System.Object stateObject)

Disassembly:
	0x032FC8BC ADRP X1, 0xBB8000
	0x032FC8C0 ADD X1, X1, 0xE58
	0x032FC8C4 MOV X2, X31
	0x032FC8C8 BL 0x3EB1B00
	0x032FC8CC MOV X23, X0
	0x032FC8D0 BL 0x3EB1AE0
	0x032FC8D4 MOV X0, X23
	0x032FC8D8 BL 0x1D2C690
	0x032FC8DC BL 0x1990590
	0x032FC8E0 B 0x1C281B4
	0x032FC8E4 STR X30, [X31 - 0x20]!
	0x032FC8E8 STP X20, X19, [X31 + 0x10]
	0x032FC8EC MOV X19, X0
	0x032FC8F0 LDR X0, [X0 + 0x38]
	0x032FC8F4 CBZ X0, 0x32FC91C
	0x032FC8F8 MOV X20, X1
	0x032FC8FC MOV X1, X31
	0x032FC900 BL 0x32C02A8
	0x032FC904 TBNZ X0, 0x0, 0x32FC920
	0x032FC908 MOV X0, X19
	0x032FC90C MOV X1, X20
	0x032FC910 LDP X20, X19, [X31 + 0x10]
	0x032FC914 LDR X30, [X31], #0x20
	0x032FC918 B 0x32F02CC
	0x032FC91C BL 0x1C16F20
	0x032FC920 ADRP X0, 0xE20000
	0x032FC924 LDR X0, [X0 + 0x4B8]
	0x032FC928 BL 0x1C16D08
	0x032FC92C BL 0x1C16F10
	0x032FC930 MOV X19, X0
	0x032FC934 ADRP X0, 0xE2B000
	0x032FC938 LDR X0, [X0 + 0x570]
	0x032FC93C BL 0x1C16D08
	0x032FC940 MOV X1, X0
	0x032FC944 MOV X0, X19
	0x032FC948 MOV X2, X31
	0x032FC94C BL 0x338C448
	0x032FC950 ADRP X0, 0xE2B000
	0x032FC954 LDR X0, [X0 + 0x6C0]
	0x032FC958 BL 0x1C16D08
	0x032FC95C MOV X1, X0
	0x032FC960 MOV X0, X19
	0x032FC964 BL 0x1C16DEC
	0x032FC968 B 0x32F0C6C
	0x032FC96C B 0x32F1724
	0x032FC970 STR X30, [X31 - 0x40]!
	0x032FC974 STP X24, X23, [X31 + 0x10]
	0x032FC978 STP X22, X21, [X31 + 0x20]
	0x032FC97C STP X20, X19, [X31 + 0x30]
	0x032FC980 ADRP X24, 0x10E0000
	0x032FC984 LDRB W8, [X24 + 0xA91]
	0x032FC988 MOV X20, X4
	0x032FC98C MOV W21, W3
	0x032FC990 MOV W22, W2
	0x032FC994 MOV X23, X1
	0x032FC998 MOV X19, X0
	0x032FC99C TBNZ X8, 0x0, 0x32FC9B4
	0x032FC9A0 ADRP X0, 0xE25000
	0x032FC9A4 LDR X0, [X0 + 0xFA8]
	0x032FC9A8 BL 0x1C16CF4
	0x032FC9AC MOVZ W8, 0x1
	0x032FC9B0 STRB W8, [X24 + 0xA91]
	0x032FC9B4 STRB W31, [X31 + 0xC]
	0x032FC9B8 CBZ X19, 0x32FCA38
	0x032FC9BC ADD X1, X31, 0xC
	0x032FC9C0 MOV X0, X19
	0x032FC9C4 MOV X2, X31
	0x032FC9C8 BL 0x32BF948
	0x032FC9CC ADRP X8, 0xE25000
	0x032FC9D0 LDR X8, [X8 + 0xFA8]
	0x032FC9D4 LDR X24, [X19 + 0x10]
	0x032FC9D8 LDR X0, [X8]
	0x032FC9DC LDR W8, [X0 + 0xE0]
	0x032FC9E0 CBNZ W8, 0x32FC9E8
	0x032FC9E4 BL 0x1C16DFC
	0x032FC9E8 MOV X0, X24
	0x032FC9EC MOV X1, X23
	0x032FC9F0 MOV W2, W22
	0x032FC9F4 MOV W3, W21
	0x032FC9F8 MOV X4, X20
	0x032FC9FC BL 0x1C28200
	0x032FCA00 LDRB W8, [X31 + 0xC]
	0x032FCA04 MOV W21, W0
	0x032FCA08 CBZ W8, 0x32FCA20
	0x032FCA0C MOV X20, X31
	0x032FCA10 MOV X0, X19
	0x032FCA14 MOV X1, X31
	0x032FCA18 BL 0x32BFAB4
	0x032FCA1C CBNZ X20, 0x32FCA7C
	0x032FCA20 MOV W0, W21
	0x032FCA24 LDP X20, X19, [X31 + 0x30]
	0x032FCA28 LDP X22, X21, [X31 + 0x20]
	0x032FCA2C LDP X24, X23, [X31 + 0x10]
	0x032FCA30 LDR X30, [X31], #0x40
	0x032FCA34 RET
	0x032FCA38 BL 0x1C16F20
	0x032FCA3C B 0x32FCA44
	0x032FCA40 B 0x32FCA44
	0x032FCA44 MOV X21, X0
	0x032FCA48 CMP W1, 0x1
	0x032FCA4C B.NE 0x32FCA84
	0x032FCA50 MOV X0, X21
	0x032FCA54 BL 0x3EB1AD0
	0x032FCA58 LDR X20, [X0]
	0x032FCA5C BL 0x3EB1AE0
	0x032FCA60 LDRB W8, [X31 + 0xC]
	0x032FCA64 CBZ W8, 0x32FCA74
	0x032FCA68 CBZ X19, 0x32FCA8C
	0x032FCA6C MOV W21, W31
	0x032FCA70 B 0x32FCA10
	0x032FCA74 MOV W21, W31
	0x032FCA78 CBZ X20, 0x32FCA20
	0x032FCA7C MOV X0, X20
	0x032FCA80 BL 0x1C16F18
	0x032FCA84 MOV X20, X31
	0x032FCA88 B 0x32FCA94
	0x032FCA8C BL 0x1C16F20
	0x032FCA90 MOV X21, X0
	0x032FCA94 LDRB W8, [X31 + 0xC]
	0x032FCA98 CBZ W8, 0x32FCAB0
	0x032FCA9C CBNZ X19, 0x32FCAA4
	0x032FCAA0 BL 0x1C16F20
	0x032FCAA4 MOV X0, X19
	0x032FCAA8 MOV X1, X31
	0x032FCAAC BL 0x32BFAB4
	0x032FCAB0 CBNZ X20, 0x32FCABC
	0x032FCAB4 MOV X0, X21
	0x032FCAB8 BL 0x1D2C690
	0x032FCABC MOV X0, X20
	0x032FCAC0 BL 0x1C16F18
	0x032FCAC4 BL 0x1990590
	0x032FCAC8 STP X30, X21, [X31 - 0x20]!
	0x032FCACC STP X20, X19, [X31 + 0x10]
	0x032FCAD0 ADRP X19, 0x10E0000
	0x032FCAD4 ADRP X21, 0xDFD000
	0x032FCAD8 ADRP X20, 0xE25000
	0x032FCADC LDRB W8, [X19 + 0xA88]
	0x032FCAE0 LDR X21, [X21 + 0xCC0]
	0x032FCAE4 LDR X20, [X20 + 0x670]
	0x032FCAE8 TBNZ X8, 0x0, 0x32FCB0C
	0x032FCAEC ADRP X0, 0xE25000
	0x032FCAF0 LDR X0, [X0 + 0x670]
	0x032FCAF4 BL 0x1C16CF4
	0x032FCAF8 ADRP X0, 0xDFD000
	0x032FCAFC LDR X0, [X0 + 0xCC0]
	0x032FCB00 BL 0x1C16CF4
	0x032FCB04 MOVZ W8, 0x1
	0x032FCB08 STRB W8, [X19 + 0xA88]
	0x032FCB0C LDR X0, [X21]
	0x032FCB10 BL 0x1C16F10
	0x032FCB14 MOV X1, X31
	0x032FCB18 MOV X19, X0
	0x032FCB1C BL 0x33BDD8C
	0x032FCB20 LDR X8, [X20]
	0x032FCB24 LDR X8, [X8 + 0xB8]
	0x032FCB28 STR X19, [X8 + 0x8]
	0x032FCB2C LDP X20, X19, [X31 + 0x10]
	0x032FCB30 LDP X30, X21, [X31], #0x20
	0x032FCB34 RET
	0x032FCB38 LDR X8, [X0 + 0x40]
	0x032FCB3C LDR X5, [X0 + 0x18]
	0x032FCB40 LDR X4, [X0 + 0x28]
	0x032FCB44 MOV X0, X8
	0x032FCB48 BR X5
	0x032FCB4C LDR X8, [X0 + 0x40]
	0x032FCB50 LDR X5, [X0 + 0x18]
	0x032FCB54 LDR X4, [X0 + 0x28]
	0x032FCB58 MOV X0, X8
	0x032FCB5C BR X5
	0x032FCB60 STR X30, [X31 - 0x20]!
	0x032FCB64 STP X20, X19, [X31 + 0x10]
	0x032FCB68 ADRP X20, 0x10E0000
	0x032FCB6C LDRB W8, [X20 + 0xA8C]
	0x032FCB70 MOV X19, X0
	0x032FCB74 TBNZ X8, 0x0, 0x32FCB8C
	0x032FCB78 ADRP X0, 0xE2B000
	0x032FCB7C LDR X0, [X0 + 0x638]
	0x032FCB80 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x10E1000
	011 Move W8, [X25+2685]
	012 Move X19, X5
	013 Move X20, X4
	014 Move W21, W3
	015 Move W22, W2
	016 Move X23, X1
	017 Move X24, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0xE2C000
	023 Move X0, [X0+1592]
	024 Call 0x1C17CF4
	025 Move X0, 0xE2C000
	026 Move X0, [X0+1584]
	027 Call 0x1C17CF4
	028 Move X0, 0xE2C000
	029 Move X0, [X0+1600]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X25+2685], W8
	033 Move X0, [X24+56]
	034 Compare X0, 0
	035 JumpIfEqual {131}
	036 Move X1, X31
	037 Call SafeHandle.get_IsClosed, X0
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {132}
	042 Move X8, [X24]
	043 Move X0, X24
	044 Move X9, [X8+472]
	045 Move X1, [X8+480]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {144}
	051 Compare X23, 0
	052 JumpIfEqual {156}
	053 Move TEMP, X21
	054 And TEMP, TEMP, -2147483648
	055 Compare TEMP, -2147483648
	056 JumpIfEqual {168}
	057 Move TEMP, X22
	058 And TEMP, TEMP, -2147483648
	059 Compare TEMP, -2147483648
	060 JumpIfEqual {175}
	061 Move W8, [X23+24]
	062 Subtract W8, W8, W22
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move W8, [X24+85]
	065 Compare W8, 0
	066 JumpIfEqual {112}
	067 Move X8, 0xE2C000
	068 Move X8, [X8+1592]
	069 Move X0, [X8]
	070 Call 0x1C17F10
	071 Move X1, X20
	072 Move X2, X19
	073 Move X25, X0
	074 Call FileStreamAsyncResult..ctor, X0, X1, X2
	075 Compare X25, 0
	076 JumpIfEqual {131}
	077 Move X8, 0xE2C000
	078 Move X8, [X8+1600]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X25+56], W21
	083 Move [X25+60], W9
	084 Move [X25+52], W21
	085 Move X0, [X8]
	086 Move X25, 0xE2C000
	087 Move X25, [X25+1584]
	088 Call 0x1C17F10
	089 Move X2, [X25]
	090 Move X1, X24
	091 Move X25, X0
	092 Call WriteDelegate..ctor, X0, X1, X2
	093 Compare X25, 0
	094 JumpIfEqual {131}
	095 Move X0, X25
	096 Move X1, X23
	097 Move W2, W22
	098 Move W3, W21
	099 Move X4, X20
	100 Move X5, X19
	101 Move X20, [X31+64]
	102 Move X19, [X31+72]
	103 Move X22, [X31+48]
	104 Move X21, [X31+56]
	105 Move X24, [X31+32]
	106 Move X23, [X31+40]
	107 Move X30, [X31+16]
	108 Move X25, [X31+24]
	109 Add X31, X31, 80
	110 Call WriteDelegate.BeginInvoke, X0, X1, X2, X3, X4, X5
	111 Return X0
	112 Move W7, 1
	113 Move X0, X24
	114 Move X1, X23
	115 Move W2, W22
	116 Move W3, W21
	117 Move X4, X20
	118 Move X5, X19
	119 Move W6, W31
	120 Call Stream.BeginWriteInternal, X0, X1, X2, X3, X4, X5, X6, X7
	121 Move X20, [X31+64]
	122 Move X19, [X31+72]
	123 Move X22, [X31+48]
	124 Move X21, [X31+56]
	125 Move X24, [X31+32]
	126 Move X23, [X31+40]
	127 Move X30, [X31+16]
	128 Move X25, [X31+24]
	129 Add X31, X31, 80
	130 Return X0
	131 Call 0x1C17F20
	132 Move X0, 0xE21000
	133 Move X0, [X0+1208]
	134 Call 0x1C17D08
	135 Call 0x1C17F10
	136 Move X19, X0
	137 Move X0, 0xE2C000
	138 Move X0, [X0+1392]
	139 Call 0x1C17D08
	140 Move X1, X0
	141 Move X0, X19
	142 Move X2, X31
	143 Call ObjectDisposedException..ctor, X0, X1
	144 Move X0, 0xDF8000
	145 Move X0, [X0+2880]
	146 Call 0x1C17D08
	147 Call 0x1C17F10
	148 Move X19, X0
	149 Move X0, 0xE2C000
	150 Move X0, [X0+1608]
	151 Call 0x1C17D08
	152 Move X1, X0
	153 Move X0, X19
	154 Move X2, X31
	155 Call NotSupportedException..ctor, X0, X1
	156 Move X0, 0xDFD000
	157 Move X0, [X0+1320]
	158 Call 0x1C17D08
	159 Call 0x1C17F10
	160 Move X19, X0
	161 Move X0, 0xE20000
	162 Move X0, [X0+1600]
	163 Call 0x1C17D08
	164 Move X1, X0
	165 Move X0, X19
	166 Move X2, X31
	167 Call ArgumentNullException..ctor, X0, X1
	168 Move X0, 0xE00000
	169 Move X0, [X0+1888]
	170 Call 0x1C17D08
	171 Call 0x1C17F10
	172 Move X19, X0
	173 Move X0, 0xE2C000
	174 Move X0, [X0+952]
	175 Move X0, 0xE00000
	176 Move X0, [X0+1888]
	177 Call 0x1C17D08
	178 Call 0x1C17F10
	179 Move X19, X0
	180 Move X0, 0xE27000
	181 Move X0, [X0+3472]
	182 Call 0x1C17D08
	183 Move X20, X0
	184 Move X0, 0xE2C000
	185 Move X0, [X0+1528]
	186 Call 0x1C17D08
	187 Move X2, X0
	188 Move X0, X19
	189 Move X1, X20
	190 Move X3, X31
	191 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	192 Move X0, 0xE00000
	193 Move X0, [X0+1400]
	194 Call 0x1C17D08
	195 Call 0x1C17F10
	196 Move X19, X0
	197 Move X0, 0xE2C000
	198 Move X0, [X0+1616]
	199 Call 0x1C17D08
	200 Move X1, X0
	201 Move X0, X19
	202 Move X2, X31
	203 Call ArgumentException..ctor, X0, X1
	204 Move X0, 0xE2C000
	205 Move X0, [X0+1624]
	206 Call 0x1C17D08
	207 Move X1, X0
	208 Move X0, X19
	209 Call 0x1C17DEC

Method: System.Void EndWrite(System.IAsyncResult asyncResult)

Disassembly:
	0x032FCD98 LDR X20, [X20 + 0x6D0]
	0x032FCD9C TBNZ X8, 0x0, 0x32FCDC0
	0x032FCDA0 ADRP X0, 0xE25000
	0x032FCDA4 LDR X0, [X0 + 0xFA8]
	0x032FCDA8 BL 0x1C16CF4
	0x032FCDAC ADRP X0, 0xE2B000
	0x032FCDB0 LDR X0, [X0 + 0x6D0]
	0x032FCDB4 BL 0x1C16CF4
	0x032FCDB8 MOVZ W8, 0x1
	0x032FCDBC STRB W8, [X21 + 0xA96]
	0x032FCDC0 MOVN X0, 0x0
	0x032FCDC4 MOV X1, X31
	0x032FCDC8 BL 0x33C6938
	0x032FCDCC LDR X8, [X19]
	0x032FCDD0 MOV X1, X31
	0x032FCDD4 LDR X8, [X8 + 0xB8]
	0x032FCDD8 STR X0, [X8]
	0x032FCDDC LDR X0, [X20]
	0x032FCDE0 BL 0x33C19D0
	0x032FCDE4 LDR X8, [X19]
	0x032FCDE8 LDP X20, X19, [X31 + 0x10]
	0x032FCDEC CMP X0, 0x0
	0x032FCDF0 CSET W9, NE
	0x032FCDF4 LDR X8, [X8 + 0xB8]
	0x032FCDF8 STRB W9, [X8 + 0x8]
	0x032FCDFC LDP X30, X21, [X31], #0x20
	0x032FCE00 RET
	0x032FCE04 STR X30, [X31 - 0x30]!
	0x032FCE08 STP X22, X21, [X31 + 0x10]
	0x032FCE0C STP X20, X19, [X31 + 0x20]
	0x032FCE10 ADRP X21, 0x10E0000
	0x032FCE14 LDRB W8, [X21 + 0xA97]
	0x032FCE18 MOV X19, X1
	0x032FCE1C MOV X20, X0
	0x032FCE20 TBNZ X8, 0x0, 0x32FCE38
	0x032FCE24 ADRP X0, 0xE1E000
	0x032FCE28 LDR X0, [X0 + 0x1D0]
	0x032FCE2C BL 0x1C16CF4
	0x032FCE30 MOVZ W8, 0x1
	0x032FCE34 STRB W8, [X21 + 0xA97]
	0x032FCE38 CBZ X20, 0x32FCFC8
	0x032FCE3C CBZ X19, 0x32FCFE8
	0x032FCE40 LDR W8, [X20 + 0x10]
	0x032FCE44 CBZ W8, 0x32FCF7C
	0x032FCE48 LDR W8, [X19 + 0x10]
	0x032FCE4C CBZ W8, 0x32FCF78
	0x032FCE50 ADRP X22, 0xE1E000
	0x032FCE54 LDR X22, [X22 + 0x1D0]
	0x032FCE58 LDR X0, [X22]
	0x032FCE5C LDR W8, [X0 + 0xE0]
	0x032FCE60 CBNZ W8, 0x32FCE6C
	0x032FCE64 BL 0x1C16DFC
	0x032FCE68 LDR X0, [X22]
	0x032FCE6C LDR X8, [X0 + 0xB8]
	0x032FCE70 MOV X0, X20
	0x032FCE74 MOV X2, X31
	0x032FCE78 LDR X1, [X8]
	0x032FCE7C BL 0x322BE8C
	0x032FCE80 ADDS W31, W0, 0x1
	0x032FCE84 B.NE 0x32FD01C
	0x032FCE88 LDR X0, [X22]
	0x032FCE8C LDR W8, [X0 + 0xE0]
	0x032FCE90 CBNZ W8, 0x32FCE9C
	0x032FCE94 BL 0x1C16DFC
	0x032FCE98 LDR X0, [X22]
	0x032FCE9C LDR X8, [X0 + 0xB8]
	0x032FCEA0 MOV X0, X19
	0x032FCEA4 MOV X2, X31
	0x032FCEA8 LDR X1, [X8]
	0x032FCEAC BL 0x322BE8C
	0x032FCEB0 ADDS W31, W0, 0x1
	0x032FCEB4 B.NE 0x32FD01C
	0x032FCEB8 LDR X0, [X22]
	0x032FCEBC LDR W8, [X0 + 0xE0]
	0x032FCEC0 CBNZ W8, 0x32FCEC8
	0x032FCEC4 BL 0x1C16DFC
	0x032FCEC8 MOV X0, X19
	0x032FCECC BL 0x32FD064
	0x032FCED0 TBNZ X0, 0x0, 0x32FCF7C
	0x032FCED4 LDR W8, [X20 + 0x10]
	0x032FCED8 MOV X0, X20
	0x032FCEDC MOV X2, X31
	0x032FCEE0 SUB W1, W8, 0x1
	0x032FCEE4 BL 0x3222A1C
	0x032FCEE8 LDR X8, [X22]
	0x032FCEEC MOV W21, W0
	0x032FCEF0 LDR W9, [X8 + 0xE0]
	0x032FCEF4 CBNZ W9, 0x32FCF04

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10E1000
	006 Move W8, [X21+2686]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xE2C000
	014 Move X0, [X0+1552]
	015 Call 0x1C17CF4
	016 Move X0, 0xE2C000
	017 Move X0, [X0+1600]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2686], W8
	021 Compare X19, 0
	022 JumpIfEqual {81}
	023 Move W8, [X20+85]
	024 Compare W8, 0
	025 JumpIfEqual {56}
	026 Move X9, 0xE2C000
	027 Move X9, [X9+1552]
	028 Move X8, [X19]
	029 Move X9, [X9]
	030 Move W11, [X8+304]
	031 Move W10, [X9+304]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X11, [X8+200]
	034 Add X10, X11, X10
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X9, [X8+568]
	038 Move X1, [X8+576]
	039 Move X0, X19
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Compare X0, 0
	042 JumpIfEqual {64}
	043 Move X8, 0xE2C000
	044 Move X8, [X8+1600]
	045 Move X9, [X0]
	046 Move X8, [X8]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X1, X31
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Call 0x1C17CB4
	055 Return 
	056 Move X0, X20
	057 Move X1, X19
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Call Stream.EndWrite, X0, X1
	063 Return 
	064 Move X0, 0xE00000
	065 Move X0, [X0+1400]
	066 Call 0x1C17D08
	067 Call 0x1C17F10
	068 Move X19, X0
	069 Move X0, 0xE2C000
	070 Move X0, [X0+1560]
	071 Call 0x1C17D08
	072 Move X20, X0
	073 Move X0, 0xE23000
	074 Move X0, [X0+3536]
	075 Call 0x1C17D08
	076 Move X2, X0
	077 Move X0, X19
	078 Move X1, X20
	079 Move X3, X31
	080 Call ArgumentException..ctor, X0, X1, X2
	081 Move X0, 0xDFD000
	082 Move X0, [X0+1320]
	083 Call 0x1C17D08
	084 Call 0x1C17F10
	085 Move X19, X0
	086 Move X0, 0xE23000
	087 Move X0, [X0+3536]
	088 Call 0x1C17D08
	089 Move X1, X0
	090 Move X0, X19
	091 Move X2, X31
	092 Call ArgumentNullException..ctor, X0, X1
	093 Move X0, 0xE2C000
	094 Move X0, [X0+1640]
	095 Call 0x1C17D08
	096 Move X1, X0
	097 Move X0, X19
	098 Call 0x1C17DEC

Method: System.Int64 Seek(System.Int64 offset, System.IO.SeekOrigin origin)

Disassembly:
	0x032FCF04 LDR X9, [X8 + 0xB8]
	0x032FCF08 LDRH W10, [X9 + 0xA]
	0x032FCF0C CMP W10, W21, UXTH
	0x032FCF10 B.EQ 0x32FCF5C
	0x032FCF14 LDR W10, [X8 + 0xE0]
	0x032FCF18 CBNZ W10, 0x32FCF2C
	0x032FCF1C MOV X0, X8
	0x032FCF20 BL 0x1C16DFC
	0x032FCF24 LDR X8, [X22]
	0x032FCF28 LDR X9, [X8 + 0xB8]
	0x032FCF2C LDRH W10, [X9 + 0x8]
	0x032FCF30 CMP W10, W21, UXTH
	0x032FCF34 B.EQ 0x32FCF5C
	0x032FCF38 LDR W10, [X8 + 0xE0]
	0x032FCF3C CBNZ W10, 0x32FCF50
	0x032FCF40 MOV X0, X8
	0x032FCF44 BL 0x1C16DFC
	0x032FCF48 LDR X8, [X22]
	0x032FCF4C LDR X9, [X8 + 0xB8]
	0x032FCF50 LDRH W10, [X9 + 0x18]
	0x032FCF54 CMP W10, W21, UXTH
	0x032FCF58 B.NE 0x32FCF90
	0x032FCF5C MOV X0, X20
	0x032FCF60 MOV X1, X19
	0x032FCF64 LDP X20, X19, [X31 + 0x20]
	0x032FCF68 LDP X22, X21, [X31 + 0x10]
	0x032FCF6C MOV X2, X31
	0x032FCF70 LDR X30, [X31], #0x30
	0x032FCF74 B 0x321B938
	0x032FCF78 MOV X19, X20
	0x032FCF7C MOV X0, X19
	0x032FCF80 LDP X20, X19, [X31 + 0x20]
	0x032FCF84 LDP X22, X21, [X31 + 0x10]
	0x032FCF88 LDR X30, [X31], #0x30
	0x032FCF8C RET
	0x032FCF90 LDR W10, [X8 + 0xE0]
	0x032FCF94 CBNZ W10, 0x32FCFA8
	0x032FCF98 MOV X0, X8
	0x032FCF9C BL 0x1C16DFC
	0x032FCFA0 LDR X8, [X22]
	0x032FCFA4 LDR X9, [X8 + 0xB8]
	0x032FCFA8 LDR X1, [X9 + 0x10]
	0x032FCFAC MOV X0, X20
	0x032FCFB0 MOV X2, X19
	0x032FCFB4 LDP X20, X19, [X31 + 0x20]
	0x032FCFB8 LDP X22, X21, [X31 + 0x10]
	0x032FCFBC MOV X3, X31
	0x032FCFC0 LDR X30, [X31], #0x30
	0x032FCFC4 B 0x32274B8
	0x032FCFC8 ADRP X0, 0xDFC000
	0x032FCFCC LDR X0, [X0 + 0x528]
	0x032FCFD0 BL 0x1C16D08
	0x032FCFD4 BL 0x1C16F10
	0x032FCFD8 MOV X19, X0
	0x032FCFDC ADRP X0, 0xE2B000
	0x032FCFE0 LDR X0, [X0 + 0x6D8]
	0x032FCFE4 B 0x32FD004
	0x032FCFE8 ADRP X0, 0xDFC000
	0x032FCFEC LDR X0, [X0 + 0x528]
	0x032FCFF0 BL 0x1C16D08
	0x032FCFF4 BL 0x1C16F10
	0x032FCFF8 MOV X19, X0
	0x032FCFFC ADRP X0, 0xE2B000
	0x032FD000 LDR X0, [X0 + 0x6E0]
	0x032FD004 BL 0x1C16D08
	0x032FD008 MOV X1, X0
	0x032FD00C MOV X0, X19
	0x032FD010 MOV X2, X31
	0x032FD014 BL 0x330E100
	0x032FD018 B 0x32FD04C
	0x032FD01C ADRP X0, 0xDFE000
	0x032FD020 LDR X0, [X0 + 0x578]
	0x032FD024 BL 0x1C16D08
	0x032FD028 BL 0x1C16F10
	0x032FD02C MOV X19, X0
	0x032FD030 ADRP X0, 0xE2A000
	0x032FD034 LDR X0, [X0 + 0x48]
	0x032FD038 BL 0x1C16D08
	0x032FD03C MOV X1, X0
	0x032FD040 MOV X0, X19
	0x032FD044 MOV X2, X31
	0x032FD048 BL 0x3314A68
	0x032FD04C ADRP X0, 0xE2A000
	0x032FD050 LDR X0, [X0 + 0x6E8]
	0x032FD054 BL 0x1C16D08
	0x032FD058 MOV X1, X0
	0x032FD05C MOV X0, X19
	0x032FD060 BL 0x1C16DEC
	0x032FD064 STP X30, X21, [X31 - 0x20]!
	0x032FD068 STP X20, X19, [X31 + 0x10]
	0x032FD06C ADRP X20, 0x10DF000
	0x032FD070 LDRB W8, [X20 + 0xAA4]
	0x032FD074 MOV X19, X0
	0x032FD078 TBNZ X8, 0x0, 0x32FD090
	0x032FD07C ADRP X0, 0xE1D000
	0x032FD080 LDR X0, [X0 + 0x1D0]
	0x032FD084 BL 0x1C16CF4
	0x032FD088 MOVZ W8, 0x1
	0x032FD08C STRB W8, [X20 + 0xAA4]
	0x032FD090 CBZ X19, 0x32FD130
	0x032FD094 LDR W8, [X19 + 0x10]
	0x032FD098 CBZ W8, 0x32FD130
	0x032FD09C ADRP X20, 0xE1D000
	0x032FD0A0 LDR X20, [X20 + 0x1D0]
	0x032FD0A4 LDR X0, [X20]
	0x032FD0A8 LDR W8, [X0 + 0xE0]
	0x032FD0AC CBNZ W8, 0x32FD0B8
	0x032FD0B0 BL 0x1C16DFC
	0x032FD0B4 LDR X0, [X20]
	0x032FD0B8 LDR X8, [X0 + 0xB8]
	0x032FD0BC MOV X0, X19
	0x032FD0C0 MOV X2, X31
	0x032FD0C4 LDR X1, [X8]
	0x032FD0C8 BL 0x322BE8C
	0x032FD0CC ADDS W31, W0, 0x1
	0x032FD0D0 B.NE 0x32FD140
	0x032FD0D4 ADRP X21, 0x10DF000
	0x032FD0D8 LDRB W8, [X21 + 0x3AB]
	0x032FD0DC CBNZ W8, 0x32FD0F4
	0x032FD0E0 ADRP X0, 0xE1D000
	0x032FD0E4 LDR X0, [X0 + 0x290]
	0x032FD0E8 BL 0x1C16CF4
	0x032FD0EC MOVZ W8, 0x1
	0x032FD0F0 STRB W8, [X21 + 0x3AB]
	0x032FD0F4 MOV X0, X19
	0x032FD0F8 MOV X1, X31
	0x032FD0FC BL 0x3225708
	0x032FD100 LDR X8, [X20]
	0x032FD104 LDR W19, [X19 + 0x10]
	0x032FD108 MOV X20, X0
	0x032FD10C LDR W9, [X8 + 0xE0]
	0x032FD110 CBNZ W9, 0x32FD11C
	0x032FD114 MOV X0, X8
	0x032FD118 BL 0x1C16DFC
	0x032FD11C MOV X0, X20
	0x032FD120 MOV X1, X19
	0x032FD124 LDP X20, X19, [X31 + 0x10]
	0x032FD128 LDP X30, X21, [X31], #0x20
	0x032FD12C B 0x32FE160
	0x032FD130 LDP X20, X19, [X31 + 0x10]
	0x032FD134 MOV W0, W31
	0x032FD138 LDP X30, X21, [X31], #0x20
	0x032FD13C RET
	0x032FD140 ADRP X0, 0xDFE000
	0x032FD144 LDR X0, [X0 + 0x578]
	0x032FD148 BL 0x1C16D08
	0x032FD14C BL 0x1C16F10
	0x032FD150 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x10E1000
	007 Move W8, [X22+2687]
	008 Move W21, W2
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xE26000
	016 Move X0, [X0+4008]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2687], W8
	020 Move [X31+12], W31
	021 Move X0, [X19+56]
	022 Compare X0, 0
	023 JumpIfEqual {83}
	024 Move X1, X31
	025 Call SafeHandle.get_IsClosed, X0
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {84}
	030 Move X8, [X19]
	031 Move X0, X19
	032 Move X9, [X8+440]
	033 Move X1, [X8+448]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {96}
	039 Compare W21, 0
	040 JumpIfEqual {52}
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X8, [X19]
	044 Move X9, [X8+488]
	045 Move X1, [X8+496]
	046 Move X8, [X19]
	047 Move X9, [X8+504]
	048 Move X1, [X8+512]
	049 Move X0, X19
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Add X20, X0, X20
	052 Move TEMP, X20
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {108}
	056 Move X8, [X19+72]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X21, 0xE26000
	059 Move X21, [X21+4008]
	060 Move X0, X19
	061 Call FileStream.FlushBuffer, X0
	062 Move X0, [X21]
	063 Move X21, [X19+56]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Add X3, X31, 12
	069 Move X0, X21
	070 Move X1, X20
	071 Move W2, W31
	072 Call MonoIO.Seek, X0, X1, X2, X3
	073 Move [X19+104], X0
	074 Move W8, [X31+12]
	075 Compare W8, 0
	076 JumpIfNotEqual {127}
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X22, [X31+16]
	080 Move X21, [X31+24]
	081 Move X30, [X31+48]
	082 Return X0
	083 Call 0x1C17F20
	084 Move X0, 0xE20000
	085 Move X0, [X0+1208]
	086 Call 0x1C17D08
	087 Call 0x1C17F10
	088 Move X19, X0
	089 Move X0, 0xE2B000
	090 Move X0, [X0+1392]
	091 Call 0x1C17D08
	092 Move X1, X0
	093 Move X0, X19
	094 Move X2, X31
	095 Call ObjectDisposedException..ctor, X0, X1
	096 Move X0, 0xDF7000
	097 Move X0, [X0+2880]
	098 Call 0x1C17D08
	099 Call 0x1C17F10
	100 Move X19, X0
	101 Move X0, 0xE2B000
	102 Move X0, [X0+1400]
	103 Call 0x1C17D08
	104 Move X1, X0
	105 Move X0, X19
	106 Move X2, X31
	107 Call NotSupportedException..ctor, X0, X1
	108 Move X0, 0xE25000
	109 Move X0, [X0+1960]
	110 Call 0x1C17D08
	111 Call 0x1C17F10
	112 Move X19, X0
	113 Move X0, 0xE2B000
	114 Move X0, [X0+1648]
	115 Move X0, 0xE25000
	116 Move X0, [X0+1960]
	117 Call 0x1C17D08
	118 Call 0x1C17F10
	119 Move X19, X0
	120 Move X0, 0xE2B000
	121 Move X0, [X0+1656]
	122 Call 0x1C17D08
	123 Move X1, X0
	124 Move X0, X19
	125 Move X2, X31
	126 Call IOException..ctor, X0, X1
	127 Move X1, [X19+48]
	128 Move X0, X19
	129 Call FileStream.GetSecureFileName, X0, X1
	130 Move X20, X0
	131 Move X0, 0xE25000
	132 Move W19, [X31+12]
	133 Move X0, [X0+4008]
	134 Call 0x1C17D08
	135 Call 0x19913D0
	136 Move X0, X20
	137 Move W1, W19
	138 Call MonoIO.GetException, X0, X1
	139 Move X19, X0
	140 Move X0, 0xDFF000
	141 Move X0, [X0+1400]
	142 Call 0x1C17D08
	143 Call 0x1C17F10
	144 Move X19, X0
	145 Move X0, 0xE2B000
	146 Move X0, [X0+1664]
	147 Call 0x1C17D08
	148 Move X20, X0
	149 Move X0, 0xE2B000
	150 Move X0, [X0+1672]
	151 Call 0x1C17D08
	152 Move X2, X0
	153 Move X0, X19
	154 Move X1, X20
	155 Move X3, X31
	156 Call ArgumentException..ctor, X0, X1, X2
	157 Move X0, 0xE2B000
	158 Move X0, [X0+1680]
	159 Call 0x1C17D08
	160 Move X1, X0
	161 Move X0, X19
	162 Call 0x1C17DEC

Method: System.Void SetLength(System.Int64 value)

Disassembly:
	0x032FD154 ADRP X0, 0xE2A000
	0x032FD158 LDR X0, [X0 + 0x48]
	0x032FD15C BL 0x1C16D08
	0x032FD160 MOV X1, X0
	0x032FD164 MOV X0, X19
	0x032FD168 MOV X2, X31
	0x032FD16C BL 0x3314A68
	0x032FD170 ADRP X0, 0xE2A000
	0x032FD174 LDR X0, [X0 + 0x6F0]
	0x032FD178 BL 0x1C16D08
	0x032FD17C MOV X1, X0
	0x032FD180 MOV X0, X19
	0x032FD184 BL 0x1C16DEC
	0x032FD188 STP X30, X27, [X31 - 0x50]!
	0x032FD18C STP X26, X25, [X31 + 0x10]
	0x032FD190 STP X24, X23, [X31 + 0x20]
	0x032FD194 STP X22, X21, [X31 + 0x30]
	0x032FD198 STP X20, X19, [X31 + 0x40]
	0x032FD19C ADRP X20, 0x10DF000
	0x032FD1A0 LDRB W8, [X20 + 0xA98]
	0x032FD1A4 MOV X19, X0
	0x032FD1A8 TBNZ X8, 0x0, 0x32FD1CC
	0x032FD1AC ADRP X0, 0xDFF000
	0x032FD1B0 LDR X0, [X0 + 0x8D8]
	0x032FD1B4 BL 0x1C16CF4
	0x032FD1B8 ADRP X0, 0xE1D000
	0x032FD1BC LDR X0, [X0 + 0x1D0]
	0x032FD1C0 BL 0x1C16CF4
	0x032FD1C4 MOVZ W8, 0x1
	0x032FD1C8 STRB W8, [X20 + 0xA98]
	0x032FD1CC CBZ X19, 0x32FD5D4
	0x032FD1D0 LDR W24, [X19 + 0x10]
	0x032FD1D4 MOV X0, X19
	0x032FD1D8 MOV W1, W31
	0x032FD1DC MOV X2, X31
	0x032FD1E0 BL 0x3222A1C
	0x032FD1E4 CMP W24, 0x3
	0x032FD1E8 MOV W20, W0
	0x032FD1EC B.LT 0x32FD224
	0x032FD1F0 AND W8, W20, 0xFFFF
	0x032FD1F4 CMP W8, 0x5C
	0x032FD1F8 B.NE 0x32FD224
	0x032FD1FC MOVZ W1, 0x1
	0x032FD200 MOV X0, X19
	0x032FD204 MOV X2, X31
	0x032FD208 BL 0x3222A1C
	0x032FD20C AND W8, W0, 0xFFFF
	0x032FD210 CMP W8, 0x5C
	0x032FD214 CSET W8, EQ
	0x032FD218 CSET W23, NE
	0x032FD21C UBFM W20, W8, 0x1F, 0x1E
	0x032FD220 B 0x32FD280
	0x032FD224 CMP W24, 0x1
	0x032FD228 B.NE 0x32FD278
	0x032FD22C ADRP X21, 0xE1D000
	0x032FD230 LDR X21, [X21 + 0x1D0]
	0x032FD234 LDR X0, [X21]
	0x032FD238 LDR W8, [X0 + 0xE0]
	0x032FD23C CBNZ W8, 0x32FD248
	0x032FD240 BL 0x1C16DFC
	0x032FD244 LDR X0, [X21]
	0x032FD248 LDR X8, [X0 + 0xB8]
	0x032FD24C LDRH W9, [X8 + 0xA]
	0x032FD250 CMP W9, W20, UXTH
	0x032FD254 B.EQ 0x32FD5B4
	0x032FD258 LDR W9, [X0 + 0xE0]
	0x032FD25C CBNZ W9, 0x32FD26C
	0x032FD260 BL 0x1C16DFC
	0x032FD264 LDR X8, [X21]
	0x032FD268 LDR X8, [X8 + 0xB8]
	0x032FD26C LDRH W8, [X8 + 0x8]
	0x032FD270 CMP W8, W20, UXTH
	0x032FD274 B.EQ 0x32FD5B4
	0x032FD278 MOV W20, W31
	0x032FD27C MOVZ W23, 0x1
	0x032FD280 CMP W20, W24
	0x032FD284 B.GE 0x32FD3CC
	0x032FD288 ADRP X27, 0xE1D000
	0x032FD28C LDR X27, [X27 + 0x1D0]
	0x032FD290 MOV W25, W31
	0x032FD294 MOV W26, W31
	0x032FD298 MOV W21, W20
	0x032FD29C MOV X0, X19
	0x032FD2A0 MOV W1, W21
	0x032FD2A4 MOV X2, X31
	0x032FD2A8 BL 0x3222A1C
	0x032FD2AC LDR X8, [X27]
	0x032FD2B0 MOV W22, W0
	0x032FD2B4 LDR W9, [X8 + 0xE0]
	0x032FD2B8 CBNZ W9, 0x32FD2C8
	0x032FD2BC MOV X0, X8
	0x032FD2C0 BL 0x1C16DFC
	0x032FD2C4 LDR X8, [X27]
	0x032FD2C8 LDR X9, [X8 + 0xB8]
	0x032FD2CC LDRH W10, [X9 + 0xA]
	0x032FD2D0 CMP W10, W22, UXTH
	0x032FD2D4 B.EQ 0x32FD2FC
	0x032FD2D8 LDR W10, [X8 + 0xE0]
	0x032FD2DC CBNZ W10, 0x32FD2F0
	0x032FD2E0 MOV X0, X8
	0x032FD2E4 BL 0x1C16DFC
	0x032FD2E8 LDR X8, [X27]
	0x032FD2EC LDR X9, [X8 + 0xB8]
	0x032FD2F0 LDRH W9, [X9 + 0x8]
	0x032FD2F4 CMP W9, W22, UXTH
	0x032FD2F8 B.NE 0x32FD3BC
	0x032FD2FC LDR W9, [X8 + 0xE0]
	0x032FD300 CBNZ W9, 0x32FD310
	0x032FD304 MOV X0, X8
	0x032FD308 BL 0x1C16DFC
	0x032FD30C LDR X8, [X27]
	0x032FD310 LDR X9, [X8 + 0xB8]
	0x032FD314 LDRH W10, [X9 + 0xA]
	0x032FD318 LDRH W9, [X9 + 0x8]
	0x032FD31C CMP W10, W9
	0x032FD320 B.EQ 0x32FD348
	0x032FD324 LDR W10, [X8 + 0xE0]
	0x032FD328 CBNZ W10, 0x32FD340
	0x032FD32C MOV X0, X8
	0x032FD330 BL 0x1C16DFC
	0x032FD334 LDR X8, [X27]
	0x032FD338 LDR X8, [X8 + 0xB8]
	0x032FD33C LDRH W9, [X8 + 0x8]
	0x032FD340 CMP W9, W22, UXTH
	0x032FD344 CINC W26, W26, EQ
	0x032FD348 ADD W21, W21, 0x1
	0x032FD34C CMP W21, W24
	0x032FD350 B.EQ 0x32FD3B4

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10E0000
	007 Move W8, [X21+2688]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE25000
	015 Move X0, [X0+4008]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2688], W8
	019 Move [X31+12], W31
	020 Move X0, [X20+56]
	021 Compare X0, 0
	022 JumpIfEqual {86}
	023 Move X1, X31
	024 Call SafeHandle.get_IsClosed, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {87}
	029 Move X8, [X20]
	030 Move X0, X20
	031 Move X9, [X8+440]
	032 Move X1, [X8+448]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {99}
	038 Move X8, [X20]
	039 Move X0, X20
	040 Move X9, [X8+472]
	041 Move X1, [X8+480]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {106}
	047 Move TEMP, X19
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {118}
	051 Move X21, 0xE25000
	052 Move X21, [X21+4008]
	053 Move X0, X20
	054 Call FileStream.FlushBuffer, X0
	055 Move X0, [X21]
	056 Move X21, [X20+56]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Add X2, X31, 12
	062 Move X0, X21
	063 Move X1, X19
	064 Call MonoIO.SetLength, X0, X1, X2
	065 Move W8, [X31+12]
	066 Compare W8, 0
	067 JumpIfNotEqual {130}
	068 Move X8, [X20]
	069 Move X0, X20
	070 Move X9, [X8+504]
	071 Move X1, [X8+512]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X8, [X20]
	075 Move X0, X20
	076 Move X1, X19
	077 Move X9, [X8+520]
	078 Move X2, [X8+528]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X30, [X31+16]
	083 Move X21, [X31+24]
	084 Add X31, X31, 48
	085 Return 
	086 Call 0x1C17F20
	087 Move X0, 0xE20000
	088 Move X0, [X0+1208]
	089 Call 0x1C17D08
	090 Call 0x1C17F10
	091 Move X19, X0
	092 Move X0, 0xE2B000
	093 Move X0, [X0+1392]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X19
	097 Move X2, X31
	098 Call ObjectDisposedException..ctor, X0, X1
	099 Move X0, 0xDF7000
	100 Move X0, [X0+2880]
	101 Call 0x1C17D08
	102 Call 0x1C17F10
	103 Move X19, X0
	104 Move X0, 0xE2B000
	105 Move X0, [X0+1400]
	106 Move X0, 0xDF7000
	107 Move X0, [X0+2880]
	108 Call 0x1C17D08
	109 Call 0x1C17F10
	110 Move X19, X0
	111 Move X0, 0xE2B000
	112 Move X0, [X0+1688]
	113 Call 0x1C17D08
	114 Move X1, X0
	115 Move X0, X19
	116 Move X2, X31
	117 Call NotSupportedException..ctor, X0, X1
	118 Move X0, 0xDFF000
	119 Move X0, [X0+1888]
	120 Call 0x1C17D08
	121 Call 0x1C17F10
	122 Move X19, X0
	123 Move X0, 0xE2B000
	124 Move X0, [X0+1696]
	125 Call 0x1C17D08
	126 Move X1, X0
	127 Move X0, X19
	128 Move X2, X31
	129 Call ArgumentOutOfRangeException..ctor, X0, X1
	130 Move X1, [X20+48]
	131 Move X0, X20
	132 Call FileStream.GetSecureFileName, X0, X1
	133 Move X20, X0
	134 Move X0, 0xE25000
	135 Move W19, [X31+12]
	136 Move X0, [X0+4008]
	137 Call 0x1C17D08
	138 Call 0x19913D0
	139 Move X0, X20
	140 Move W1, W19
	141 Call MonoIO.GetException, X0, X1
	142 Move X19, X0
	143 Move X0, 0xE2B000
	144 Move X0, [X0+1704]
	145 Call 0x1C17D08
	146 Move X1, X0
	147 Move X0, X19
	148 Call 0x1C17DEC

Method: System.Void Flush()

Disassembly:
	0x032FD494 LDRH W9, [X9 + 0x8]
	0x032FD498 CMP W9, W22, UXTH
	0x032FD49C B.NE 0x32FD56C
	0x032FD4A0 LDR W9, [X21 + 0x18]
	0x032FD4A4 ADD W27, W23, 0x1
	0x032FD4A8 CMP W27, W9
	0x032FD4AC B.EQ 0x32FD584
	0x032FD4B0 LDR W10, [X8 + 0xE0]
	0x032FD4B4 CBNZ W10, 0x32FD4C4
	0x032FD4B8 MOV X0, X8
	0x032FD4BC BL 0x1C16DFC
	0x032FD4C0 LDR W9, [X21 + 0x18]
	0x032FD4C4 CMP W23, W9
	0x032FD4C8 B.CS 0x32FD5D0
	0x032FD4CC LDR X8, [X26]
	0x032FD4D0 ADD X9, X21, W23, 0x1, SXTW
	0x032FD4D4 CMP W20, W25
	0x032FD4D8 LDR X8, [X8 + 0xB8]
	0x032FD4DC LDRH W8, [X8 + 0xA]
	0x032FD4E0 STRH W8, [X9 + 0x20]
	0x032FD4E4 B.GE 0x32FD564
	0x032FD4E8 ADD W22, W20, 0x1
	0x032FD4EC MOV X0, X19
	0x032FD4F0 MOV W1, W22
	0x032FD4F4 MOV X2, X31
	0x032FD4F8 BL 0x3222A1C
	0x032FD4FC LDR X8, [X26]
	0x032FD500 MOV W23, W0
	0x032FD504 LDR W9, [X8 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+56]
	005 Compare X0, 0
	006 JumpIfEqual {18}
	007 Move X1, X31
	008 Call SafeHandle.get_IsClosed, X0
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {19}
	013 Move X0, X19
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Call FileStream.FlushBuffer, X0
	017 Return 
	018 Call 0x1C17F20
	019 Move X0, 0xE20000
	020 Move X0, [X0+1208]
	021 Call 0x1C17D08
	022 Call 0x1C17F10
	023 Move X19, X0
	024 Move X0, 0xE2B000
	025 Move X0, [X0+1392]
	026 Call 0x1C17D08
	027 Move X1, X0
	028 Move X0, X19
	029 Move X2, X31
	030 Call ObjectDisposedException..ctor, X0, X1
	031 Move X0, 0xE2B000
	032 Move X0, [X0+1712]
	033 Call 0x1C17D08
	034 Move X1, X0
	035 Move X0, X19
	036 Call 0x1C17DEC

Method: System.Void Finalize()

Disassembly:
	0x032FD508 CBNZ W9, 0x32FD518
	0x032FD50C MOV X0, X8
	0x032FD510 BL 0x1C16DFC
	0x032FD514 LDR X8, [X26]
	0x032FD518 LDR X9, [X8 + 0xB8]
	0x032FD51C LDRH W10, [X9 + 0xA]
	0x032FD520 CMP W10, W23, UXTH
	0x032FD524 B.EQ 0x32FD54C
	0x032FD528 LDR W10, [X8 + 0xE0]
	0x032FD52C CBNZ W10, 0x32FD540
	0x032FD530 MOV X0, X8
	0x032FD534 BL 0x1C16DFC
	0x032FD538 LDR X8, [X26]
	0x032FD53C LDR X9, [X8 + 0xB8]
	0x032FD540 LDRH W8, [X9 + 0x8]
	0x032FD544 CMP W8, W23, UXTH
	0x032FD548 B.NE 0x32FD564
	0x032FD54C CMP W25, W22
	0x032FD550 MOV W20, W22
	0x032FD554 B.NE 0x32FD4E8
	0x032FD558 MOV W23, W27
	0x032FD55C MOV W20, W25
	0x032FD560 B 0x32FD584
	0x032FD564 MOV W23, W27
	0x032FD568 B 0x32FD584
	0x032FD56C LDR W8, [X21 + 0x18]
	0x032FD570 CMP W23, W8
	0x032FD574 B.CS 0x32FD5D0
	0x032FD578 ADD X8, X21, W23, 0x1, SXTW
	0x032FD57C ADD W23, W23, 0x1
	0x032FD580 STRH W22, [X8 + 0x20]
	0x032FD584 ADD W20, W20, 0x1
	0x032FD588 CMP W20, W24
	0x032FD58C B.LT 0x32FD434
	0x032FD590 MOV X1, X21
	0x032FD594 LDP X20, X19, [X31 + 0x40]
	0x032FD598 LDP X22, X21, [X31 + 0x30]
	0x032FD59C LDP X24, X23, [X31 + 0x20]
	0x032FD5A0 LDP X26, X25, [X31 + 0x10]
	0x032FD5A4 MOV X0, X31
	0x032FD5A8 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0]
	006 Move X19, X0
	007 Move X9, [X8+648]
	008 Move X2, [X8+656]
	009 Move W1, W31
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move X0, X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X1, X31
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Call Object.Finalize, X0
	018 Return 
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X21, X0
	021 Move X0, X21
	022 Call 0x3EB2AD0
	023 Move X20, [X0]
	024 Call 0x3EB2AE0
	025 Move X0, X19
	026 Move X1, X31
	027 Call Object.Finalize, X0
	028 Compare X20, 0
	029 JumpIfNotEqual {36}
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 
	035 Move X20, X31
	036 Move X0, X20
	037 Call 0x1C17F18
	038 Move X21, X0
	039 Move X0, X19
	040 Move X1, X31
	041 Call Object.Finalize, X0
	042 Compare X20, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X21
	045 Call 0x1D2D690
	046 Move X0, X20
	047 Call 0x1C17F18
	048 Call 0x1991590

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x032FD5AC LDP X30, X27, [X31], #0x50
	0x032FD5B0 B 0x32256D4
	0x032FD5B4 MOV X0, X19
	0x032FD5B8 LDP X20, X19, [X31 + 0x40]
	0x032FD5BC LDP X22, X21, [X31 + 0x30]
	0x032FD5C0 LDP X24, X23, [X31 + 0x20]
	0x032FD5C4 LDP X26, X25, [X31 + 0x10]
	0x032FD5C8 LDP X30, X27, [X31], #0x50
	0x032FD5CC RET
	0x032FD5D0 BL 0x1C16F28
	0x032FD5D4 BL 0x1C16F20
	0x032FD5D8 STR X30, [X31 - 0x30]!
	0x032FD5DC STP X22, X21, [X31 + 0x10]
	0x032FD5E0 STP X20, X19, [X31 + 0x20]
	0x032FD5E4 ADRP X20, 0x10DF000
	0x032FD5E8 LDRB W8, [X20 + 0xAA0]
	0x032FD5EC MOV X19, X0
	0x032FD5F0 TBNZ X8, 0x0, 0x32FD614
	0x032FD5F4 ADRP X0, 0xE1D000
	0x032FD5F8 LDR X0, [X0 + 0x1D0]
	0x032FD5FC BL 0x1C16CF4
	0x032FD600 ADRP X0, 0xDF8000
	0x032FD604 LDR X0, [X0 + 0x278]
	0x032FD608 BL 0x1C16CF4
	0x032FD60C MOVZ W8, 0x1
	0x032FD610 STRB W8, [X20 + 0xAA0]
	0x032FD614 CBZ X19, 0x32FD6B0
	0x032FD618 MOV X0, X19
	0x032FD61C MOV X1, X31
	0x032FD620 BL 0x322B8DC
	0x032FD624 CBZ X0, 0x32FDA00
	0x032FD628 LDR W8, [X0 + 0x10]
	0x032FD62C CBZ W8, 0x32FD9B8
	0x032FD630 ADRP X22, 0xE1D000
	0x032FD634 LDR X22, [X22 + 0x1D0]
	0x032FD638 LDR X0, [X22]
	0x032FD63C LDR W8, [X0 + 0xE0]
	0x032FD640 CBNZ W8, 0x32FD648
	0x032FD644 BL 0x1C16DFC
	0x032FD648 MOV X0, X19
	0x032FD64C BL 0x32FD064
	0x032FD650 TBZ X0, 0x0, 0x32FD7C4
	0x032FD654 LDR X0, [X22]
	0x032FD658 LDR W8, [X0 + 0xE0]
	0x032FD65C CBNZ W8, 0x32FD668
	0x032FD660 BL 0x1C16DFC
	0x032FD664 LDR X0, [X22]
	0x032FD668 LDR X8, [X0 + 0xB8]
	0x032FD66C LDRH W8, [X8 + 0xA]
	0x032FD670 CMP W8, 0x2F
	0x032FD674 B.NE 0x32FD6B8
	0x032FD678 MOV X0, X19
	0x032FD67C MOV W1, W31
	0x032FD680 MOV X2, X31
	0x032FD684 BL 0x3222A1C
	0x032FD688 LDR X8, [X22]
	0x032FD68C MOV W19, W0
	0x032FD690 LDR W9, [X8 + 0xE0]
	0x032FD694 CBNZ W9, 0x32FD6A0
	0x032FD698 MOV X0, X8
	0x032FD69C BL 0x1C16DFC
	0x032FD6A0 MOV W0, W19
	0x032FD6A4 BL 0x32F4A0C
	0x032FD6A8 TBZ X0, 0x0, 0x32FD7C4
	0x032FD6AC B 0x32FD810
	0x032FD6B0 MOV X0, X31
	0x032FD6B4 B 0x32FD82C
	0x032FD6B8 LDR W8, [X19 + 0x10]
	0x032FD6BC CMP W8, 0x1
	0x032FD6C0 B.NE 0x32FD6FC
	0x032FD6C4 MOV X0, X19
	0x032FD6C8 MOV W1, W31
	0x032FD6CC MOV X2, X31
	0x032FD6D0 BL 0x3222A1C
	0x032FD6D4 LDR X8, [X22]
	0x032FD6D8 MOV W20, W0
	0x032FD6DC LDR W9, [X8 + 0xE0]
	0x032FD6E0 CBNZ W9, 0x32FD6EC
	0x032FD6E4 MOV X0, X8
	0x032FD6E8 BL 0x1C16DFC
	0x032FD6EC MOV W0, W20
	0x032FD6F0 BL 0x32F4A0C
	0x032FD6F4 TBNZ X0, 0x0, 0x32FD810
	0x032FD6F8 LDR W8, [X19 + 0x10]
	0x032FD6FC CMP W8, 0x1
	0x032FD700 B.LE 0x32FD7C4
	0x032FD704 MOV X0, X19
	0x032FD708 MOV W1, W31
	0x032FD70C MOV X2, X31
	0x032FD710 BL 0x3222A1C
	0x032FD714 LDR X8, [X22]
	0x032FD718 MOV W20, W0
	0x032FD71C LDR W9, [X8 + 0xE0]
	0x032FD720 CBNZ W9, 0x32FD72C
	0x032FD724 MOV X0, X8
	0x032FD728 BL 0x1C16DFC
	0x032FD72C MOV W0, W20
	0x032FD730 BL 0x32F4A0C
	0x032FD734 TBZ X0, 0x0, 0x32FD7DC
	0x032FD738 MOVZ W1, 0x1
	0x032FD73C MOV X0, X19
	0x032FD740 MOV X2, X31
	0x032FD744 BL 0x3222A1C
	0x032FD748 LDR X8, [X22]
	0x032FD74C MOV W20, W0
	0x032FD750 LDR W9, [X8 + 0xE0]
	0x032FD754 CBNZ W9, 0x32FD760
	0x032FD758 MOV X0, X8
	0x032FD75C BL 0x1C16DFC
	0x032FD760 MOV W0, W20
	0x032FD764 BL 0x32F4A0C
	0x032FD768 TBZ X0, 0x0, 0x32FD7DC
	0x032FD76C LDR W8, [X19 + 0x10]
	0x032FD770 MOVZ W20, 0x2
	0x032FD774 CMP W8, 0x3
	0x032FD778 B.LT 0x32FD8FC
	0x032FD77C MOV X0, X19
	0x032FD780 MOV W1, W20
	0x032FD784 MOV X2, X31
	0x032FD788 BL 0x3222A1C
	0x032FD78C LDR X8, [X22]
	0x032FD790 MOV W21, W0
	0x032FD794 LDR W9, [X8 + 0xE0]
	0x032FD798 CBNZ W9, 0x32FD7A4
	0x032FD79C MOV X0, X8
	0x032FD7A0 BL 0x1C16DFC
	0x032FD7A4 MOV W0, W21
	0x032FD7A8 BL 0x32F4A0C
	0x032FD7AC TBNZ X0, 0x0, 0x32FD8F8
	0x032FD7B0 LDR W8, [X19 + 0x10]
	0x032FD7B4 ADD W20, W20, 0x1
	0x032FD7B8 CMP W20, W8
	0x032FD7BC B.LT 0x32FD77C
	0x032FD7C0 B 0x32FD8FC
	0x032FD7C4 ADRP X8, 0xDF8000
	0x032FD7C8 LDR X8, [X8 + 0x278]
	0x032FD7CC LDR X8, [X8]
	0x032FD7D0 LDR X8, [X8 + 0xB8]
	0x032FD7D4 LDR X0, [X8]
	0x032FD7D8 B 0x32FD82C
	0x032FD7DC MOV X0, X19
	0x032FD7E0 MOV W1, W31
	0x032FD7E4 MOV X2, X31
	0x032FD7E8 BL 0x3222A1C
	0x032FD7EC LDR X8, [X22]
	0x032FD7F0 MOV W20, W0
	0x032FD7F4 LDR W9, [X8 + 0xE0]
	0x032FD7F8 CBNZ W9, 0x32FD804
	0x032FD7FC MOV X0, X8
	0x032FD800 BL 0x1C16DFC
	0x032FD804 MOV W0, W20
	0x032FD808 BL 0x32F4A0C
	0x032FD80C TBZ X0, 0x0, 0x32FD83C
	0x032FD810 LDR X0, [X22]
	0x032FD814 LDR W8, [X0 + 0xE0]
	0x032FD818 CBNZ W8, 0x32FD824
	0x032FD81C BL 0x1C16DFC
	0x032FD820 LDR X0, [X22]
	0x032FD824 LDR X8, [X0 + 0xB8]
	0x032FD828 LDR X0, [X8 + 0x10]
	0x032FD82C LDP X20, X19, [X31 + 0x20]
	0x032FD830 LDP X22, X21, [X31 + 0x10]
	0x032FD834 LDR X30, [X31], #0x30
	0x032FD838 RET
	0x032FD83C MOVZ W1, 0x1
	0x032FD840 MOV X0, X19
	0x032FD844 MOV X2, X31
	0x032FD848 BL 0x3222A1C
	0x032FD84C LDR X8, [X22]
	0x032FD850 MOV W20, W0
	0x032FD854 LDR W9, [X8 + 0xE0]
	0x032FD858 CBNZ W9, 0x32FD868
	0x032FD85C MOV X0, X8
	0x032FD860 BL 0x1C16DFC
	0x032FD864 LDR X8, [X22]
	0x032FD868 LDR X8, [X8 + 0xB8]
	0x032FD86C LDRH W8, [X8 + 0x18]
	0x032FD870 CMP W8, W20, UXTH
	0x032FD874 B.NE 0x32FD88C
	0x032FD878 LDR W8, [X19 + 0x10]
	0x032FD87C CMP W8, 0x3
	0x032FD880 B.GE 0x32FD8A0
	0x032FD884 MOVZ W2, 0x2
	0x032FD888 B 0x32FD8DC
	0x032FD88C MOV X0, X31
	0x032FD890 BL 0x32EC854
	0x032FD894 CBZ X0, 0x32FDA00
	0x032FD898 MOVZ W2, 0x2
	0x032FD89C B 0x32FD8E0
	0x032FD8A0 MOVZ W1, 0x2
	0x032FD8A4 MOV X0, X19
	0x032FD8A8 MOV X2, X31
	0x032FD8AC MOVZ W21, 0x2
	0x032FD8B0 BL 0x3222A1C
	0x032FD8B4 LDR X8, [X22]
	0x032FD8B8 MOV W20, W0
	0x032FD8BC LDR W9, [X8 + 0xE0]
	0x032FD8C0 CBNZ W9, 0x32FD8CC
	0x032FD8C4 MOV X0, X8
	0x032FD8C8 BL 0x1C16DFC
	0x032FD8CC MOV W0, W20
	0x032FD8D0 BL 0x32F4A0C
	0x032FD8D4 ANDS W31, W0, 0x1
	0x032FD8D8 CINC W2, W21, NE
	0x032FD8DC MOV X0, X19

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x10E0000
	009 Move W8, [X20+2689]
	010 Move W21, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xE25000
	017 Move X0, [X0+1648]
	018 Call 0x1C17CF4
	019 Move X0, 0xDFE000
	020 Move X0, [X0+3088]
	021 Call 0x1C17CF4
	022 Move X0, 0xE25000
	023 Move X0, [X0+4008]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+2689], W8
	027 Move [X31+12], W31
	028 Move [X31+8], W31
	029 Move X0, [X19+56]
	030 Compare X0, 0
	031 JumpIfEqual {67}
	032 Move X1, X31
	033 Call SafeHandle.get_IsClosed, X0
	034 Move X20, X31
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {68}
	039 Move X0, X19
	040 Call FileStream.FlushBuffer, X0
	041 Move X20, X31
	042 Move W8, [X19+84]
	043 Compare W8, 0
	044 JumpIfEqual {68}
	045 Move X8, [X19+56]
	046 Compare X8, 0
	047 JumpIfEqual {162}
	048 Move X9, 0xE25000
	049 Move X9, [X9+4008]
	050 Move X22, [X8+16]
	051 Move X0, [X9]
	052 Move W9, [X0+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Add X1, X31, 12
	057 Move X0, X22
	058 Call 0x1C291B4
	059 Move W8, [X31+12]
	060 Compare W8, 0
	061 JumpIfNotEqual {163}
	062 Move X0, [X19+56]
	063 Compare X0, 0
	064 JumpIfEqual {162}
	065 Move X1, X31
	066 Call SafeHandle.DangerousRelease, X0
	067 Move X20, X31
	068 Move [X19+86], W31
	069 Move [X19+80], W31
	070 Move TEMP, X21
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {102}
	074 Move X8, [X19+40]
	075 Compare X8, 0
	076 JumpIfEqual {102}
	077 Move W8, [X8+24]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X22, 0xE25000
	080 Move X22, [X22+1648]
	081 Move X0, [X22]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {87}
	085 Call 0x1C17DFC
	086 Move X0, [X22]
	087 Move X8, [X0+184]
	088 Move X9, [X8]
	089 Compare X9, 0
	090 JumpIfEqual {112}
	091 Move [X19+40], X31
	092 Move X8, 0xDFE000
	093 Move X8, [X8+3088]
	094 Move X0, [X8]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X0, X19
	100 Move X1, X31
	101 Call GC.SuppressFinalize, X0
	102 Compare X20, 0
	103 JumpIfNotEqual {156}
	104 Move X20, [X31+48]
	105 Move X19, [X31+56]
	106 Move X22, [X31+32]
	107 Move X21, [X31+40]
	108 Move X30, [X31+16]
	109 Move X23, [X31+24]
	110 Add X31, X31, 64
	111 Return 
	112 Move W9, [X0+224]
	113 Compare W9, 0
	114 JumpIfNotEqual {118}
	115 Call 0x1C17DFC
	116 Move X8, [X22]
	117 Move X8, [X8+184]
	118 Move X21, [X8+8]
	119 Move [X31+8], W31
	120 Add X1, X31, 8
	121 Move X0, X21
	122 Move X2, X31
	123 Call Monitor.Enter, X0, X1
	124 Move X0, [X22]
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {130}
	128 Call 0x1C17DFC
	129 Move X0, [X22]
	130 Move X8, [X0+184]
	131 Move X9, [X8]
	132 Compare X9, 0
	133 JumpIfEqual {135}
	134 Move X22, X31
	135 Move W9, [X0+224]
	136 Move X23, [X19+40]
	137 Compare W9, 0
	138 JumpIfNotEqual {142}
	139 Call 0x1C17DFC
	140 Move X8, [X22]
	141 Move X8, [X8+184]
	142 Move X22, X31
	143 Move [X8], X23
	144 Move W23, 9
	145 Move W8, [X31+8]
	146 Compare W8, 0
	147 JumpIfEqual {151}
	148 Move X0, X21
	149 Move X1, X31
	150 Call Monitor.Exit, X0
	151 Compare X22, 0
	152 JumpIfNotEqual {182}
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Compare W23, 0
	155 JumpIfEqual {91}
	156 Move X0, 0xE2B000
	157 Move X0, [X0+1720]
	158 Call 0x1C17D08
	159 Move X1, X0
	160 Move X0, X20
	161 Call 0x1C17DEC
	162 Call 0x1C17F20
	163 Move X1, [X19+48]
	164 Move X0, X19
	165 Call FileStream.GetSecureFileName, X0, X1
	166 Move X20, X0
	167 Move X0, 0xE25000
	168 Move W19, [X31+12]
	169 Move X0, [X0+4008]
	170 Call 0x1C17D08
	171 Call 0x19913D0
	172 Move X0, X20
	173 Move W1, W19
	174 Call MonoIO.GetException, X0, X1
	175 Move X19, X0
	176 Move X0, 0xE2B000
	177 Move X0, [X0+1720]
	178 Call 0x1C17D08
	179 Move X1, X0
	180 Move X0, X19
	181 Call 0x1C17DEC
	182 Move X0, X22
	183 Call 0x1C17F18
	184 Move X23, X0
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X0, X23
	187 Call 0x3EB2AD0
	188 Move X22, [X0]
	189 Call 0x3EB2AE0
	190 Move W23, W31
	191 Move X22, X31
	192 Move X23, X0
	193 Move W8, [X31+8]
	194 Compare W8, 0
	195 JumpIfEqual {199}
	196 Move X0, X21
	197 Move X1, X31
	198 Call Monitor.Exit, X0
	199 Compare X22, 0
	200 JumpIfEqual {230}
	201 Move X0, X22
	202 Call 0x1C17F18
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move X23, X0
	205 Move X0, X23
	206 Call 0x3EB2AD0
	207 Move X20, X0
	208 Move X0, 0xDF7000
	209 Move X0, [X0+2000]
	210 Call 0x1C17D08
	211 Move X8, [X20]
	212 Move X1, [X8]
	213 Call 0x1C18270
	214 Move TEMP, X0
	215 And TEMP, TEMP, 1
	216 Compare TEMP, 1
	217 JumpIfNotEqual {220}
	218 Move X20, [X20]
	219 Call 0x3EB2AE0
	220 Move W0, 8
	221 Call 0x3EB2AF0
	222 Move X8, [X20]
	223 Move [X0], X8
	224 Move X1, 0xBB8000
	225 Add X1, X1, 3672
	226 Move X2, X31
	227 Call 0x3EB2B00
	228 Move X23, X0
	229 Call 0x3EB2AE0
	230 Move X0, X23
	231 Call 0x1D2D690
	232 Call 0x1991590

Method: System.Threading.Tasks.Task FlushAsync(System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x032FD8E4 LDP X22, X21, [X31 + 0x10]
	0x032FD8E8 MOV W1, W31
	0x032FD8EC MOV X3, X31
	0x032FD8F0 LDR X30, [X31], #0x30
	0x032FD8F4 B 0x3228DE4
	0x032FD8F8 LDR W8, [X19 + 0x10]
	0x032FD8FC CMP W20, W8
	0x032FD900 B.GE 0x32FD94C
	0x032FD904 ADD W20, W20, 0x1
	0x032FD908 CMP W20, W8
	0x032FD90C B.GE 0x32FD94C
	0x032FD910 MOV X0, X19
	0x032FD914 MOV W1, W20
	0x032FD918 MOV X2, X31
	0x032FD91C BL 0x3222A1C
	0x032FD920 LDR X8, [X22]
	0x032FD924 MOV W21, W0
	0x032FD928 LDR W9, [X8 + 0xE0]
	0x032FD92C CBNZ W9, 0x32FD938
	0x032FD930 MOV X0, X8
	0x032FD934 BL 0x1C16DFC
	0x032FD938 MOV W0, W21
	0x032FD93C BL 0x32F4A0C
	0x032FD940 TBNZ X0, 0x0, 0x32FD94C
	0x032FD944 LDR W8, [X19 + 0x10]
	0x032FD948 B 0x32FD904
	0x032FD94C LDR X0, [X22]
	0x032FD950 LDR W8, [X0 + 0xE0]
	0x032FD954 CBNZ W8, 0x32FD960
	0x032FD958 BL 0x1C16DFC
	0x032FD95C LDR X0, [X22]
	0x032FD960 LDR X8, [X0 + 0xB8]
	0x032FD964 SUB W2, W20, 0x2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+56]
	006 Compare X0, 0
	007 JumpIfEqual {22}
	008 Move X20, X1
	009 Move X1, X31
	010 Call SafeHandle.get_IsClosed, X0
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, X19
	016 Move X1, X20
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Call Stream.FlushAsync, X0, X1
	021 Return X0
	022 Call 0x1C17F20
	023 Move X0, 0xE20000
	024 Move X0, [X0+1208]
	025 Call 0x1C17D08
	026 Call 0x1C17F10
	027 Move X19, X0
	028 Move X0, 0xE2B000
	029 Move X0, [X0+1392]
	030 Call 0x1C17D08
	031 Move X1, X0
	032 Move X0, X19
	033 Move X2, X31
	034 Call ObjectDisposedException..ctor, X0, X1
	035 Move X0, 0xE2B000
	036 Move X0, [X0+1728]
	037 Call 0x1C17D08
	038 Move X1, X0
	039 Move X0, X19
	040 Call 0x1C17DEC

Method: System.Threading.Tasks.Task`1<System.Int32> ReadAsync(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x032FD968 MOVZ W1, 0x2

ISIL:
	001 Call Stream.ReadAsync, X0, X1, X2, X3, X4
	002 Return X0

Method: System.Threading.Tasks.Task WriteAsync(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x032FD96C MOV X0, X19

ISIL:
	001 Call Stream.WriteAsync, X0, X1, X2, X3, X4
	002 Return X0

Method: System.Int32 ReadSegment(System.Byte[] dest, System.Int32 dest_offset, System.Int32 count)

Disassembly:
	0x032FBCFC STP X22, X21, [X31 + 0x40]
	0x032FBD00 STP X20, X19, [X31 + 0x50]
	0x032FBD04 ADRP X24, 0x10E1000
	0x032FBD08 STP W3, W2, [X31 + 0x28]
	0x032FBD0C ADRP X23, 0xDF8000
	0x032FBD10 LDRB W8, [X24 + 0xA8A]
	0x032FBD14 LDR X23, [X23 + 0x758]
	0x032FBD18 MOV X19, X5
	0x032FBD1C MOV X20, X4
	0x032FBD20 MOV X22, X1
	0x032FBD24 MOV X21, X0
	0x032FBD28 TBNZ X8, 0x0, 0x32FBD40
	0x032FBD2C ADRP X0, 0xDF8000
	0x032FBD30 LDR X0, [X0 + 0x758]
	0x032FBD34 BL 0x1C16CF4
	0x032FBD38 MOVZ W8, 0x1
	0x032FBD3C STRB W8, [X24 + 0xA8A]
	0x032FBD40 LDR X0, [X23]
	0x032FBD44 ADD X1, X31, 0x2C
	0x032FBD48 STP X31, X31, [X31 + 0x10]
	0x032FBD4C STP X22, X31, [X31]
	0x032FBD50 BL 0x1C16E04
	0x032FBD54 LDR X8, [X23]
	0x032FBD58 STR X0, [X31 + 0x8]
	0x032FBD5C ADD X1, X31, 0x28
	0x032FBD60 MOV X0, X8
	0x032FBD64 BL 0x1C16E04
	0x032FBD68 STR X0, [X31 + 0x10]
	0x032FBD6C ADD X1, X31, 0x0
	0x032FBD70 MOV X0, X21
	0x032FBD74 MOV X2, X20
	0x032FBD78 MOV X3, X19
	0x032FBD7C BL 0x1C16CB0
	0x032FBD80 LDP X20, X19, [X31 + 0x50]
	0x032FBD84 LDP X22, X21, [X31 + 0x40]
	0x032FBD88 LDP X24, X23, [X31 + 0x30]
	0x032FBD8C LDR X30, [X31 + 0x20]
	0x032FBD90 ADD X31, X31, 0x60
	0x032FBD94 RET
	0x032FBD98 STP X30, X21, [X31 - 0x20]!
	0x032FBD9C STP X20, X19, [X31 + 0x10]
	0x032FBDA0 ADRP X21, 0x10E1000
	0x032FBDA4 LDRB W8, [X21 + 0xA7E]
	0x032FBDA8 MOV X19, X1
	0x032FBDAC MOV X20, X0
	0x032FBDB0 TBNZ X8, 0x0, 0x32FBDD4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x10E2000
	009 Move X23, 0xDF9000
	010 Move W8, [X24+2690]
	011 Move X23, [X23+1448]
	012 Move W22, W3
	013 Move W20, W2
	014 Move X21, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xDF9000
	021 Move X0, [X0+1448]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+2690], W8
	025 Move X0, [X23]
	026 Move W23, [X19+96]
	027 Move W24, [X19+100]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Subtract W1, W23, W24
	033 Move W0, W22
	034 Move X2, X31
	035 Call Math.Min, X0, X1
	036 Move W22, W0
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, [X19+40]
	039 Move W1, [X19+100]
	040 Move X2, X21
	041 Move W3, W20
	042 Move W4, W22
	043 Move X5, X31
	044 Call Buffer.InternalBlockCopy, X0, X1, X2, X3, X4
	045 Move W8, [X19+100]
	046 Add W8, W8, W22
	047 Move [X19+100], W8
	048 Move W0, W22
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X22, [X31+32]
	052 Move X21, [X31+40]
	053 Move X24, [X31+16]
	054 Move X23, [X31+24]
	055 Move X30, [X31+64]
	056 Return X0

Method: System.Int32 WriteSegment(System.Byte[] src, System.Int32 src_offset, System.Int32 count)

Disassembly:
	0x032FC844 B 0x32FC84C
	0x032FC848 MOV X23, X0
	0x032FC84C LDRB W8, [X31 + 0x8]
	0x032FC850 CBZ W8, 0x32FC860
	0x032FC854 MOV X0, X21
	0x032FC858 MOV X1, X31
	0x032FC85C BL 0x33E14E4
	0x032FC860 CBZ X22, 0x32FC8D4
	0x032FC864 MOV X0, X22
	0x032FC868 BL 0x1C16F18
	0x032FC86C CMP W1, 0x1
	0x032FC870 MOV X23, X0
	0x032FC874 B.NE 0x32FC8D4
	0x032FC878 MOV X0, X23
	0x032FC87C BL 0x3EB1AD0
	0x032FC880 MOV X20, X0
	0x032FC884 ADRP X0, 0xDF7000
	0x032FC888 LDR X0, [X0 + 0x7D0]
	0x032FC88C BL 0x1C16D08
	0x032FC890 LDR X8, [X20]
	0x032FC894 LDR X1, [X8]
	0x032FC898 BL 0x1C17270
	0x032FC89C TBZ X0, 0x0, 0x32FC8AC
	0x032FC8A0 LDR X20, [X20]
	0x032FC8A4 BL 0x3EB1AE0
	0x032FC8A8 B 0x32FC628
	0x032FC8AC MOVZ W0, 0x8
	0x032FC8B0 BL 0x3EB1AF0
	0x032FC8B4 LDR X8, [X20]
	0x032FC8B8 STR X8, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, W3
	005 Move W9, [X0+92]
	006 Move W3, [X0+100]
	007 Subtract W9, W9, W3
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CSEL not yet implemented."
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X8, [X0+40]
	012 Move X19, X0
	013 Move X0, X1
	014 Move W1, W2
	015 Move X2, X8
	016 Move W4, W20
	017 Move X5, X31
	018 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	019 Move W9, [X19+96]
	020 Move W8, [X19+100]
	021 Add W8, W8, W20
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move [X19+100], W8
	024 Move [X19+96], W8
	025 Move W8, 1
	026 Move [X19+88], W8
	027 Move W0, W20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0

Method: System.Void FlushBuffer()

Disassembly:
	0x032FB4B0 B 0x32FB518
	0x032FB4B4 ADRP X0, 0xE00000
	0x032FB4B8 LDR X0, [X0 + 0x578]
	0x032FB4BC BL 0x1C16D08
	0x032FB4C0 BL 0x1C16F10
	0x032FB4C4 MOV X19, X0
	0x032FB4C8 ADRP X0, 0xE2C000
	0x032FB4CC LDR X0, [X0 + 0x5D0]
	0x032FB4D0 BL 0x1C16D08
	0x032FB4D4 MOV X1, X0
	0x032FB4D8 MOV X0, X19
	0x032FB4DC MOV X2, X31
	0x032FB4E0 BL 0x3314A68
	0x032FB4E4 B 0x32FB518
	0x032FB4E8 ADRP X0, 0xDF8000
	0x032FB4EC LDR X0, [X0 + 0xB40]
	0x032FB4F0 BL 0x1C16D08
	0x032FB4F4 BL 0x1C16F10
	0x032FB4F8 MOV X19, X0
	0x032FB4FC ADRP X0, 0xE2C000
	0x032FB500 LDR X0, [X0 + 0x5B8]
	0x032FB504 BL 0x1C16D08
	0x032FB508 MOV X1, X0
	0x032FB50C MOV X0, X19
	0x032FB510 MOV X2, X31
	0x032FB514 BL 0x3379A44
	0x032FB518 ADRP X0, 0xE2C000
	0x032FB51C LDR X0, [X0 + 0x628]
	0x032FB520 BL 0x1C16D08
	0x032FB524 MOV X1, X0
	0x032FB528 MOV X0, X19
	0x032FB52C BL 0x1C16DEC
	0x032FB530 SUB X31, X31, 0x50
	0x032FB534 STP X30, X25, [X31 + 0x10]
	0x032FB538 STP X24, X23, [X31 + 0x20]
	0x032FB53C STP X22, X21, [X31 + 0x30]
	0x032FB540 STP X20, X19, [X31 + 0x40]
	0x032FB544 ADRP X23, 0x10E1000
	0x032FB548 LDRB W8, [X23 + 0xA7C]
	0x032FB54C MOV W20, W3
	0x032FB550 MOV W21, W2
	0x032FB554 MOV X22, X1
	0x032FB558 MOV X19, X0
	0x032FB55C TBNZ X8, 0x0, 0x32FB574
	0x032FB560 ADRP X0, 0xE26000
	0x032FB564 LDR X0, [X0 + 0xFA8]
	0x032FB568 BL 0x1C16CF4
	0x032FB56C MOVZ W8, 0x1
	0x032FB570 STRB W8, [X23 + 0xA7C]
	0x032FB574 STR W31, [X31 + 0xC]
	0x032FB578 LDR W8, [X19 + 0x5C]
	0x032FB57C CMP W8, W20
	0x032FB580 B.GE 0x32FB64C
	0x032FB584 MOV X0, X19
	0x032FB588 BL 0x32FA4B0
	0x032FB58C LDR X8, [X19]
	0x032FB590 MOV X0, X19
	0x032FB594 LDP X9, X1, [X8 + 0x1B8]
	0x032FB598 BLR X9
	0x032FB59C TBZ X0, 0x0, 0x32FB5E4
	0x032FB5A0 LDRB W8, [X19 + 0x40]
	0x032FB5A4 CBNZ W8, 0x32FB5E4
	0x032FB5A8 ADRP X8, 0xE26000
	0x032FB5AC LDR X8, [X8 + 0xFA8]
	0x032FB5B0 LDR X23, [X19 + 0x38]
	0x032FB5B4 LDR X24, [X19 + 0x68]
	0x032FB5B8 LDR X0, [X8]
	0x032FB5BC LDR W8, [X0 + 0xE0]
	0x032FB5C0 CBNZ W8, 0x32FB5C8
	0x032FB5C4 BL 0x1C16DFC
	0x032FB5C8 ADD X3, X31, 0xC
	0x032FB5CC MOV X0, X23
	0x032FB5D0 MOV X1, X24
	0x032FB5D4 MOV W2, W31
	0x032FB5D8 BL 0x32F9E5C
	0x032FB5DC LDR W8, [X31 + 0xC]
	0x032FB5E0 CBNZ W8, 0x32FB6A0
	0x032FB5E4 CMP W20, 0x1
	0x032FB5E8 B.LT 0x32FB63C
	0x032FB5EC ADRP X25, 0xE26000
	0x032FB5F0 LDR X25, [X25 + 0xFA8]
	0x032FB5F4 MOV W23, W20
	0x032FB5F8 LDR X0, [X25]
	0x032FB5FC LDR X24, [X19 + 0x38]
	0x032FB600 LDR W8, [X0 + 0xE0]
	0x032FB604 CBNZ W8, 0x32FB60C
	0x032FB608 BL 0x1C16DFC
	0x032FB60C ADD X4, X31, 0xC
	0x032FB610 MOV X0, X24
	0x032FB614 MOV X1, X22
	0x032FB618 MOV W2, W21
	0x032FB61C MOV W3, W23
	0x032FB620 BL 0x32FB6EC
	0x032FB624 LDR W8, [X31 + 0xC]
	0x032FB628 CBNZ W8, 0x32FB6A0
	0x032FB62C SUB W23, W23, W0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x10E2000
	011 Move W8, [X20+2691]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xE27000
	018 Move X0, [X0+4008]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2691], W8
	022 Move [X31+12], W31
	023 Move W8, [X19+88]
	024 Compare W8, 0
	025 JumpIfEqual {81}
	026 Move X8, [X19]
	027 Move X0, X19
	028 Move X9, [X8+440]
	029 Move X1, [X8+448]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {55}
	035 Move W8, [X19+64]
	036 Compare W8, 0
	037 JumpIfNotEqual {55}
	038 Move X8, 0xE27000
	039 Move X8, [X8+4008]
	040 Move X20, [X19+56]
	041 Move X21, [X19+104]
	042 Move X0, [X8]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Add X3, X31, 12
	048 Move X0, X20
	049 Move X1, X21
	050 Move W2, W31
	051 Call MonoIO.Seek, X0, X1, X2, X3
	052 Move W8, [X31+12]
	053 Compare W8, 0
	054 JumpIfNotEqual {97}
	055 Move W21, [X19+96]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X24, 0xE27000
	058 Move X24, [X24+4008]
	059 Move W20, W31
	060 Move W25, W21
	061 Move X0, [X24]
	062 Move X22, [X19+56]
	063 Move X23, [X19+40]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Add X4, X31, 12
	069 Move X0, X22
	070 Move X1, X23
	071 Move W2, W20
	072 Move W3, W21
	073 Call MonoIO.Write, X0, X1, X2, X3, X4
	074 Move W8, [X31+12]
	075 Compare W8, 0
	076 JumpIfNotEqual {97}
	077 Subtract W25, W25, W0
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move W21, [X19+96]
	080 Add W20, W0, W20
	081 Move X8, [X19+104]
	082 NotImplemented "Instruction LDRSW not yet implemented."
	083 Move [X19+88], W31
	084 Move X22, [X31+48]
	085 Move X21, [X31+56]
	086 Move X24, [X31+32]
	087 Move X23, [X31+40]
	088 Add X8, X8, X9
	089 Move [X19+96], X31
	090 Move [X19+104], X8
	091 Move X20, [X31+64]
	092 Move X19, [X31+72]
	093 Move X30, [X31+16]
	094 Move X25, [X31+24]
	095 Add X31, X31, 80
	096 Return 
	097 Move X1, [X19+48]
	098 Move X0, X19
	099 Call FileStream.GetSecureFileName, X0, X1
	100 Move X20, X0
	101 Move X0, 0xE27000
	102 Move W19, [X31+12]
	103 Move X0, [X0+4008]
	104 Call 0x1C17D08
	105 Call 0x19913D0
	106 Move X0, X20
	107 Move W1, W19
	108 Call MonoIO.GetException, X0, X1
	109 Move X19, X0
	110 Move X0, 0xE2D000
	111 Move X0, [X0+1432]
	112 Call 0x1C17D08
	113 Move X1, X0
	114 Move X0, X19
	115 Call 0x1C17DEC

Method: System.Void FlushBufferIfDirty()

Disassembly:
	0x032FB138 STP X31, X31, [X31 + 0x10]
	0x032FB13C STP X22, X31, [X31]
	0x032FB140 BL 0x1C16E04
	0x032FB144 LDR X8, [X23]

ISIL:
	001 Move W8, [X0+88]
	002 Compare W8, 0
	003 JumpIfEqual {6}
	004 Call FileStream.FlushBuffer, X0
	005 Return 
	006 Return 

Method: System.Void RefillBuffer()

Disassembly:
	0x032FB890 ADD W8, W8, W20
	0x032FB894 CMP W8, W9
	0x032FB898 STR W8, [X19 + 0x64]
	0x032FB89C B.LE 0x32FB8A4
	0x032FB8A0 STR W8, [X19 + 0x60]
	0x032FB8A4 MOVZ W8, 0x1
	0x032FB8A8 STRB W8, [X19 + 0x58]
	0x032FB8AC MOV W0, W20
	0x032FB8B0 LDP X20, X19, [X31 + 0x10]
	0x032FB8B4 LDR X30, [X31], #0x20
	0x032FB8B8 RET
	0x032FB8BC SUB X31, X31, 0x50

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call FileStream.FlushBuffer, X0
	005 Move X1, [X19+56]
	006 Move X2, [X19+40]
	007 Move W4, [X19+92]
	008 Move X0, X19
	009 Move W3, W31
	010 Call FileStream.ReadData, X0, X1, X2, X3, X4
	011 Move [X19+96], W0
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return 

Method: System.Int32 ReadData(System.Runtime.InteropServices.SafeHandle safeHandle, System.Byte[] buf, System.Int32 offset, System.Int32 count)

Disassembly:
	0x032FB770 MOV W3, W21
	0x032FB774 MOV X4, X20
	0x032FB778 BL 0x1C28298
	0x032FB77C LDRB W8, [X31 + 0xC]
	0x032FB780 MOV W21, W0
	0x032FB784 CBZ W8, 0x32FB79C
	0x032FB788 MOV X20, X31
	0x032FB78C MOV X0, X19
	0x032FB790 MOV X1, X31
	0x032FB794 BL 0x32BFAB4
	0x032FB798 CBNZ X20, 0x32FB7F8
	0x032FB79C MOV W0, W21
	0x032FB7A0 LDP X20, X19, [X31 + 0x30]
	0x032FB7A4 LDP X22, X21, [X31 + 0x20]
	0x032FB7A8 LDP X24, X23, [X31 + 0x10]
	0x032FB7AC LDR X30, [X31], #0x40
	0x032FB7B0 RET
	0x032FB7B4 BL 0x1C16F20
	0x032FB7B8 B 0x32FB7C0
	0x032FB7BC B 0x32FB7C0
	0x032FB7C0 MOV X21, X0
	0x032FB7C4 CMP W1, 0x1
	0x032FB7C8 B.NE 0x32FB800
	0x032FB7CC MOV X0, X21
	0x032FB7D0 BL 0x3EB1AD0
	0x032FB7D4 LDR X20, [X0]
	0x032FB7D8 BL 0x3EB1AE0
	0x032FB7DC LDRB W8, [X31 + 0xC]
	0x032FB7E0 CBZ W8, 0x32FB7F0
	0x032FB7E4 CBZ X19, 0x32FB808
	0x032FB7E8 MOV W21, W31
	0x032FB7EC B 0x32FB78C
	0x032FB7F0 MOV W21, W31
	0x032FB7F4 CBZ X20, 0x32FB79C
	0x032FB7F8 MOV X0, X20
	0x032FB7FC BL 0x1C16F18
	0x032FB800 MOV X20, X31
	0x032FB804 B 0x32FB810
	0x032FB808 BL 0x1C16F20
	0x032FB80C MOV X21, X0
	0x032FB810 LDRB W8, [X31 + 0xC]
	0x032FB814 CBZ W8, 0x32FB82C
	0x032FB818 CBNZ X19, 0x32FB820
	0x032FB81C BL 0x1C16F20
	0x032FB820 MOV X0, X19
	0x032FB824 MOV X1, X31
	0x032FB828 BL 0x32BFAB4
	0x032FB82C CBNZ X20, 0x32FB838
	0x032FB830 MOV X0, X21
	0x032FB834 BL 0x1D2C690
	0x032FB838 MOV X0, X20
	0x032FB83C BL 0x1C16F18
	0x032FB840 BL 0x1990590
	0x032FB844 STR X30, [X31 - 0x20]!
	0x032FB848 STP X20, X19, [X31 + 0x10]
	0x032FB84C MOV W8, W3
	0x032FB850 LDR W9, [X0 + 0x5C]
	0x032FB854 LDR W3, [X0 + 0x64]
	0x032FB858 SUB W9, W9, W3
	0x032FB85C CMP W9, W8
	0x032FB860 CSEL W20, W9, W8, LT
	0x032FB864 CMP W20, 0x1
	0x032FB868 B.LT 0x32FB8AC
	0x032FB86C LDR X8, [X0 + 0x28]
	0x032FB870 MOV X19, X0
	0x032FB874 MOV X0, X1
	0x032FB878 MOV W1, W2
	0x032FB87C MOV X2, X8
	0x032FB880 MOV W4, W20
	0x032FB884 MOV X5, X31
	0x032FB888 BL 0x33A8A9C
	0x032FB88C LDP W9, W8, [X19 + 0x60]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x10E2000
	011 Move X24, 0xE27000
	012 Move W8, [X25+2692]
	013 Move X24, [X24+4008]
	014 Move W20, W4
	015 Move W21, W3
	016 Move X22, X2
	017 Move X23, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xE27000
	024 Move X0, [X0+4008]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X25+2692], W8
	028 Move X0, [X24]
	029 Move [X31+12], W31
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Add X4, X31, 12
	035 Move X0, X23
	036 Move X1, X22
	037 Move W2, W21
	038 Move W3, W20
	039 Call MonoIO.Read, X0, X1, X2, X3, X4
	040 Move W8, [X31+12]
	041 Compare W8, 0
	042 JumpIfEqual {45}
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W0, W31
	045 Add W31, W0, 1
	046 Move X20, [X31+64]
	047 Move X19, [X31+72]
	048 Move X22, [X31+48]
	049 Move X21, [X31+56]
	050 Move X24, [X31+32]
	051 Move X23, [X31+40]
	052 Move X30, [X31+16]
	053 Move X25, [X31+24]
	054 Add X31, X31, 80
	055 Return X0
	056 Move X1, [X19+48]
	057 Move X0, X19
	058 Call FileStream.GetSecureFileName, X0, X1
	059 Move X20, X0
	060 Move X0, 0xE27000
	061 Move W19, [X31+12]
	062 Move X0, [X0+4008]
	063 Call 0x1C17D08
	064 Call 0x19913D0
	065 Move X0, X20
	066 Move W1, W19
	067 Call MonoIO.GetException, X0, X1
	068 Move X19, X0
	069 Move X0, 0xE27000
	070 Move X0, [X0+1960]
	071 Call 0x1C17D08
	072 Call 0x1C17F10
	073 Move X1, X31
	074 Move X19, X0
	075 Call IOException..ctor, X0
	076 Move X0, 0xE2D000
	077 Move X0, [X0+1456]
	078 Call 0x1C17D08
	079 Move X1, X0
	080 Move X0, X19
	081 Call 0x1C17DEC

Method: System.Void InitBuffer(System.Int32 size, System.Boolean isZeroSize)

Disassembly:
	0x032FABB0 ADRP X0, 0xE01000
	0x032FABB4 LDR X0, [X0 + 0x760]
	0x032FABB8 BL 0x1C16D08
	0x032FABBC BL 0x1C16F10
	0x032FABC0 MOV X19, X0
	0x032FABC4 ADRP X0, 0xE21000
	0x032FABC8 LDR X0, [X0 + 0x648]
	0x032FABCC BL 0x1C16D08
	0x032FABD0 MOV X20, X0
	0x032FABD4 ADRP X0, 0xE27000
	0x032FABD8 LDR X0, [X0 + 0xE48]
	0x032FABDC BL 0x1C16D08
	0x032FABE0 MOV X2, X0
	0x032FABE4 MOV X0, X19
	0x032FABE8 MOV X1, X20
	0x032FABEC MOV X3, X31
	0x032FABF0 BL 0x3311888
	0x032FABF4 B 0x32FAC48
	0x032FABF8 ADRP X0, 0xE01000
	0x032FABFC LDR X0, [X0 + 0x578]
	0x032FAC00 BL 0x1C16D08
	0x032FAC04 BL 0x1C16F10
	0x032FAC08 MOV X19, X0
	0x032FAC0C ADRP X0, 0xE2D000
	0x032FAC10 LDR X0, [X0 + 0x5C8]
	0x032FAC14 B 0x32FAC34
	0x032FAC18 ADRP X0, 0xE01000
	0x032FAC1C LDR X0, [X0 + 0x578]
	0x032FAC20 BL 0x1C16D08
	0x032FAC24 BL 0x1C16F10
	0x032FAC28 MOV X19, X0
	0x032FAC2C ADRP X0, 0xE2D000
	0x032FAC30 LDR X0, [X0 + 0x5D0]
	0x032FAC34 BL 0x1C16D08
	0x032FAC38 MOV X1, X0
	0x032FAC3C MOV X0, X19
	0x032FAC40 MOV X2, X31
	0x032FAC44 BL 0x3314A68
	0x032FAC48 ADRP X0, 0xE2D000
	0x032FAC4C LDR X0, [X0 + 0x5D8]
	0x032FAC50 BL 0x1C16D08
	0x032FAC54 MOV X1, X0
	0x032FAC58 MOV X0, X19
	0x032FAC5C BL 0x1C16DEC
	0x032FAC60 STP X30, X23, [X31 - 0x30]!
	0x032FAC64 STP X22, X21, [X31 + 0x10]
	0x032FAC68 STP X20, X19, [X31 + 0x20]
	0x032FAC6C MOV W23, W3
	0x032FAC70 MOV W22, W2
	0x032FAC74 MOV X21, X1
	0x032FAC78 MOV X20, X0
	0x032FAC7C BL 0x32FACFC
	0x032FAC80 CMP W0, W23
	0x032FAC84 B.EQ 0x32FACE8
	0x032FAC88 LDR W8, [X20 + 0x5C]
	0x032FAC8C SUB W23, W23, W0
	0x032FAC90 MOV W19, W0
	0x032FAC94 MOV X0, X20
	0x032FAC98 CMP W23, W8
	0x032FAC9C B.LE 0x32FACCC
	0x032FACA0 BL 0x32FA4B0
	0x032FACA4 LDR X1, [X20 + 0x38]
	0x032FACA8 ADD W3, W19, W22
	0x032FACAC MOV X0, X20
	0x032FACB0 MOV X2, X21
	0x032FACB4 MOV W4, W23
	0x032FACB8 BL 0x32FA770
	0x032FACBC LDR X8, [X20 + 0x68]
	0x032FACC0 ADD X8, X8, W0, SXTW
	0x032FACC4 STR X8, [X20 + 0x68]
	0x032FACC8 B 0x32FACE4
	0x032FACCC BL 0x32FA890
	0x032FACD0 ADD W2, W19, W22
	0x032FACD4 MOV X0, X20
	0x032FACD8 MOV X1, X21
	0x032FACDC MOV W3, W23
	0x032FACE0 BL 0x32FACFC
	0x032FACE4 ADD W23, W0, W19
	0x032FACE8 LDP X20, X19, [X31 + 0x20]
	0x032FACEC LDP X22, X21, [X31 + 0x10]
	0x032FACF0 MOV W0, W23
	0x032FACF4 LDP X30, X23, [X31], #0x30
	0x032FACF8 RET
	0x032FACFC STR X30, [X31 - 0x40]!
	0x032FAD00 STP X24, X23, [X31 + 0x10]
	0x032FAD04 STP X22, X21, [X31 + 0x20]
	0x032FAD08 STP X20, X19, [X31 + 0x30]
	0x032FAD0C ADRP X24, 0x10E2000
	0x032FAD10 ADRP X23, 0xDF9000
	0x032FAD14 LDRB W8, [X24 + 0xA82]
	0x032FAD18 LDR X23, [X23 + 0x5A8]
	0x032FAD1C MOV W22, W3
	0x032FAD20 MOV W20, W2
	0x032FAD24 MOV X21, X1
	0x032FAD28 MOV X19, X0
	0x032FAD2C TBNZ X8, 0x0, 0x32FAD44
	0x032FAD30 ADRP X0, 0xDF9000
	0x032FAD34 LDR X0, [X0 + 0x5A8]
	0x032FAD38 BL 0x1C16CF4
	0x032FAD3C MOVZ W8, 0x1
	0x032FAD40 STRB W8, [X24 + 0xA82]
	0x032FAD44 LDR X0, [X23]
	0x032FAD48 LDP W23, W24, [X19 + 0x60]
	0x032FAD4C LDR W8, [X0 + 0xE0]
	0x032FAD50 CBNZ W8, 0x32FAD58
	0x032FAD54 BL 0x1C16DFC
	0x032FAD58 SUB W1, W23, W24
	0x032FAD5C MOV W0, W22
	0x032FAD60 MOV X2, X31
	0x032FAD64 BL 0x337EE94
	0x032FAD68 MOV W22, W0
	0x032FAD6C CMP W0, 0x1
	0x032FAD70 B.LT 0x32FAD9C
	0x032FAD74 LDR X0, [X19 + 0x28]
	0x032FAD78 LDR W1, [X19 + 0x64]
	0x032FAD7C MOV X2, X21
	0x032FAD80 MOV W3, W20
	0x032FAD84 MOV W4, W22
	0x032FAD88 MOV X5, X31
	0x032FAD8C BL 0x33A8750
	0x032FAD90 LDR W8, [X19 + 0x64]
	0x032FAD94 ADD W8, W8, W22
	0x032FAD98 STR W8, [X19 + 0x64]
	0x032FAD9C MOV W0, W22
	0x032FADA0 LDP X20, X19, [X31 + 0x30]
	0x032FADA4 LDP X22, X21, [X31 + 0x20]
	0x032FADA8 LDP X24, X23, [X31 + 0x10]
	0x032FADAC LDR X30, [X31], #0x40
	0x032FADB0 RET
	0x032FADB4 SUB X31, X31, 0x50
	0x032FADB8 STP X30, X25, [X31 + 0x10]
	0x032FADBC STP X24, X23, [X31 + 0x20]
	0x032FADC0 STP X22, X21, [X31 + 0x30]
	0x032FADC4 STP X20, X19, [X31 + 0x40]
	0x032FADC8 ADRP X25, 0x10E2000
	0x032FADCC LDRB W8, [X25 + 0xA7A]
	0x032FADD0 MOV X19, X5
	0x032FADD4 MOV X20, X4
	0x032FADD8 MOV W21, W3
	0x032FADDC MOV W22, W2
	0x032FADE0 MOV X23, X1
	0x032FADE4 MOV X24, X0
	0x032FADE8 TBNZ X8, 0x0, 0x32FAE0C
	0x032FADEC ADRP X0, 0xE2D000
	0x032FADF0 LDR X0, [X0 + 0x5E0]
	0x032FADF4 BL 0x1C16CF4
	0x032FADF8 ADRP X0, 0xE2D000
	0x032FADFC LDR X0, [X0 + 0x5E8]
	0x032FAE00 BL 0x1C16CF4
	0x032FAE04 MOVZ W8, 0x1
	0x032FAE08 STRB W8, [X25 + 0xA7A]
	0x032FAE0C LDR X0, [X24 + 0x38]
	0x032FAE10 CBZ X0, 0x32FAEF0
	0x032FAE14 MOV X1, X31
	0x032FAE18 BL 0x32C02A8
	0x032FAE1C TBNZ X0, 0x0, 0x32FAEF4
	0x032FAE20 LDR X8, [X24]
	0x032FAE24 MOV X0, X24
	0x032FAE28 LDP X9, X1, [X8 + 0x1A8]
	0x032FAE2C BLR X9
	0x032FAE30 TBZ X0, 0x0, 0x32FAF28

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x10E3000
	009 Move W8, [X22+2693]
	010 Move W21, W2
	011 Move W20, W1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xDFA000
	018 Move X0, [X0+1560]
	019 Call 0x1C17CF4
	020 Move X0, 0xE28000
	021 Move X0, [X0+1648]
	022 Call 0x1C17CF4
	023 Move X0, 0xDFA000
	024 Move X0, [X0+1448]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+2693], W8
	028 Move X24, 0xDFA000
	029 Move X24, [X24+1560]
	030 Move [X31+12], W31
	031 Move TEMP, X21
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {39}
	035 Move X0, [X24]
	036 Move W1, 1
	037 Call 0x1C17D6C
	038 Move W20, W31
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, 0xDFA000
	041 Move X8, [X8+1448]
	042 Move X0, [X8]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move W1, 8
	048 Move W0, W20
	049 Move X2, X31
	050 Call Math.Max, X0, X1
	051 Move W20, W0
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X22, 0xE28000
	054 Move X22, [X22+1648]
	055 Move X0, [X22]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {61}
	059 Call 0x1C17DFC
	060 Move X0, [X22]
	061 Move X8, [X0+184]
	062 Move X9, [X8]
	063 Compare X9, 0
	064 JumpIfEqual {110}
	065 Move W9, [X0+224]
	066 Compare W9, 0
	067 JumpIfNotEqual {71}
	068 Call 0x1C17DFC
	069 Move X8, [X22]
	070 Move X8, [X8+184]
	071 Move X21, [X8+8]
	072 Move [X31+12], W31
	073 Add X1, X31, 12
	074 Move X0, X21
	075 Move X2, X31
	076 Call Monitor.Enter, X0, X1
	077 Move X0, [X22]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {83}
	081 Call 0x1C17DFC
	082 Move X0, [X22]
	083 Move X8, [X0+184]
	084 Move X9, [X8]
	085 Compare X9, 0
	086 JumpIfEqual {97}
	087 Move W10, [X0+224]
	088 Compare W10, 0
	089 JumpIfNotEqual {94}
	090 Call 0x1C17DFC
	091 Move X8, [X22]
	092 Move X8, [X8+184]
	093 Move X9, [X8]
	094 Move X22, X31
	095 Move [X19+40], X9
	096 Move [X8], X31
	097 Move X22, X31
	098 Move W23, 7
	099 Move W8, [X31+12]
	100 Compare W8, 0
	101 JumpIfEqual {105}
	102 Move X0, X21
	103 Move X1, X31
	104 Call Monitor.Exit, X0
	105 Compare X22, 0
	106 JumpIfNotEqual {153}
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Compare W23, 0
	109 JumpIfNotEqual {122}
	110 Move X0, [X19+40]
	111 Compare X0, 0
	112 JumpIfEqual {117}
	113 Move W1, W31
	114 Move W2, W20
	115 Move X3, X31
	116 Call Array.Clear, X0, X1, X2
	117 Move X0, [X24]
	118 Move W1, W20
	119 Call 0x1C17D6C
	120 Move [X19+40], X0
	121 Move [X19+92], W20
	122 Move X20, [X31+48]
	123 Move X19, [X31+56]
	124 Move X22, [X31+32]
	125 Move X21, [X31+40]
	126 Move X24, [X31+16]
	127 Move X23, [X31+24]
	128 Move X30, [X31+64]
	129 Return 
	130 Move X0, 0xE02000
	131 Move X0, [X0+1888]
	132 Call 0x1C17D08
	133 Call 0x1C17F10
	134 Move X19, X0
	135 Move X0, 0xE25000
	136 Move X0, [X0+3928]
	137 Call 0x1C17D08
	138 Move X20, X0
	139 Move X0, 0xE2D000
	140 Move X0, [X0+3368]
	141 Call 0x1C17D08
	142 Move X2, X0
	143 Move X0, X19
	144 Move X1, X20
	145 Move X3, X31
	146 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	147 Move X0, 0xE2E000
	148 Move X0, [X0+1384]
	149 Call 0x1C17D08
	150 Move X1, X0
	151 Move X0, X19
	152 Call 0x1C17DEC
	153 Move X0, X22
	154 Call 0x1C17F18
	155 Move X23, X0
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move X0, X23
	158 Call 0x3EB2AD0
	159 Move X22, [X0]
	160 Call 0x3EB2AE0
	161 Move W23, W31
	162 Move X22, X31
	163 Move X23, X0
	164 Move W8, [X31+12]
	165 Compare W8, 0
	166 JumpIfEqual {170}
	167 Move X0, X21
	168 Move X1, X31
	169 Call Monitor.Exit, X0
	170 Compare X22, 0
	171 JumpIfNotEqual {174}
	172 Move X0, X23
	173 Call 0x1D2D690
	174 Move X0, X22
	175 Call 0x1C17F18
	176 Call 0x1991590

Method: System.String GetSecureFileName(System.String filename)

Disassembly:
	0x032FA2BC BL 0x32C02A8
	0x032FA2C0 TBNZ X0, 0x0, 0x32FA36C
	0x032FA2C4 LDR X8, [X19]
	0x032FA2C8 MOV X0, X19
	0x032FA2CC LDP X9, X1, [X8 + 0x1B8]
	0x032FA2D0 BLR X9
	0x032FA2D4 TBZ X0, 0x0, 0x32FA3A0
	0x032FA2D8 LDRB W8, [X19 + 0x40]
	0x032FA2DC CBZ W8, 0x32FA350
	0x032FA2E0 ADRP X8, 0xE27000
	0x032FA2E4 LDR X8, [X8 + 0xFA8]
	0x032FA2E8 LDR X20, [X19 + 0x38]
	0x032FA2EC LDR X0, [X8]
	0x032FA2F0 LDR W8, [X0 + 0xE0]
	0x032FA2F4 CBNZ W8, 0x32FA2FC
	0x032FA2F8 BL 0x1C16DFC
	0x032FA2FC ADD X3, X31, 0xC
	0x032FA300 MOVZ W2, 0x1
	0x032FA304 MOV X0, X20
	0x032FA308 MOV X1, X31
	0x032FA30C BL 0x32F9E5C
	0x032FA310 LDR W8, [X31 + 0xC]
	0x032FA314 CBZ W8, 0x32FA35C
	0x032FA318 LDR X1, [X19 + 0x30]
	0x032FA31C MOV X0, X19
	0x032FA320 BL 0x32F92BC
	0x032FA324 MOV X20, X0
	0x032FA328 ADRP X0, 0xE27000
	0x032FA32C LDR W19, [X31 + 0xC]
	0x032FA330 LDR X0, [X0 + 0xFA8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x10E3000
	007 Move X21, 0xE21000
	008 Move W8, [X22+2694]
	009 Move X21, [X21+464]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE21000
	017 Move X0, [X0+464]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2694], W8
	021 Move X0, [X21]
	022 Move W20, [X20+87]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Compare W20, 0
	029 JumpIfEqual {37}
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Call Path.GetFileName, X0
	036 Return X0
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Call Path.GetFullPath, X0
	043 Return X0

Method: System.String GetSecureFileName(System.String filename, System.Boolean full)

Disassembly:
	0x032FA178 STRB W8, [X21 + 0xA94]
	0x032FA17C STRB W31, [X31 + 0xC]
	0x032FA180 CBZ X19, 0x32FA1F0
	0x032FA184 ADD X1, X31, 0xC
	0x032FA188 MOV X0, X19
	0x032FA18C MOV X2, X31
	0x032FA190 BL 0x32BF948
	0x032FA194 ADRP X8, 0xE27000
	0x032FA198 LDR X8, [X8 + 0xFA8]
	0x032FA19C LDR X21, [X19 + 0x10]
	0x032FA1A0 LDR X0, [X8]
	0x032FA1A4 LDR W8, [X0 + 0xE0]
	0x032FA1A8 CBNZ W8, 0x32FA1B0
	0x032FA1AC BL 0x1C16DFC
	0x032FA1B0 MOV X0, X21
	0x032FA1B4 MOV X1, X20
	0x032FA1B8 BL 0x1C28328
	0x032FA1BC LDRB W8, [X31 + 0xC]
	0x032FA1C0 MOV X21, X0
	0x032FA1C4 CBZ W8, 0x32FA1DC
	0x032FA1C8 MOV X20, X31
	0x032FA1CC MOV X0, X19
	0x032FA1D0 MOV X1, X31
	0x032FA1D4 BL 0x32BFAB4
	0x032FA1D8 CBNZ X20, 0x32FA234
	0x032FA1DC MOV X0, X21
	0x032FA1E0 LDP X20, X19, [X31 + 0x20]
	0x032FA1E4 LDP X30, X21, [X31 + 0x10]
	0x032FA1E8 ADD X31, X31, 0x30
	0x032FA1EC RET
	0x032FA1F0 BL 0x1C16F20
	0x032FA1F4 B 0x32FA1FC
	0x032FA1F8 B 0x32FA1FC
	0x032FA1FC MOV X21, X0
	0x032FA200 CMP W1, 0x1
	0x032FA204 B.NE 0x32FA23C
	0x032FA208 MOV X0, X21
	0x032FA20C BL 0x3EB1AD0
	0x032FA210 LDR X20, [X0]
	0x032FA214 BL 0x3EB1AE0
	0x032FA218 LDRB W8, [X31 + 0xC]
	0x032FA21C CBZ W8, 0x32FA22C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x10E3000
	007 Move W8, [X22+2695]
	008 Move W20, W2
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xE21000
	016 Move X0, [X0+464]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2695], W8
	020 Move X8, 0xE21000
	021 Move W9, [X21+87]
	022 Move X8, [X8+464]
	023 Compare W9, 0
	024 JumpIfEqual {38}
	025 Move X0, [X8]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 Call Path.GetFileName, X0
	037 Return X0
	038 Move TEMP, X20
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {55}
	042 Move X0, [X8]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X19
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Call Path.GetFullPath, X0
	054 Return X0
	055 Move X0, X19
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 Return X0

Method: System.Void .cctor()

Disassembly:
	0x032FDAC8 LDP X30, X21, [X31 + 0x10]
	0x032FDACC ADD X31, X31, 0x30
	0x032FDAD0 RET
	0x032FDAD4 STR X30, [X31 - 0x60]!
	0x032FDAD8 STP X28, X27, [X31 + 0x10]
	0x032FDADC STP X26, X25, [X31 + 0x20]
	0x032FDAE0 STP X24, X23, [X31 + 0x30]
	0x032FDAE4 STP X22, X21, [X31 + 0x40]
	0x032FDAE8 STP X20, X19, [X31 + 0x50]
	0x032FDAEC ADRP X19, 0x10DF000
	0x032FDAF0 LDRB W8, [X19 + 0xAA8]
	0x032FDAF4 MOV X20, X0
	0x032FDAF8 TBNZ X8, 0x0, 0x32FDB40
	0x032FDAFC ADRP X0, 0xDFF000
	0x032FDB00 LDR X0, [X0 + 0x8D8]
	0x032FDB04 BL 0x1C16CF4
	0x032FDB08 ADRP X0, 0xE1D000
	0x032FDB0C LDR X0, [X0 + 0x1D0]
	0x032FDB10 BL 0x1C16CF4
	0x032FDB14 ADRP X0, 0xDF8000
	0x032FDB18 LDR X0, [X0 + 0x1F8]
	0x032FDB1C BL 0x1C16CF4
	0x032FDB20 ADRP X0, 0xDF6000
	0x032FDB24 LDR X0, [X0 + 0x988]
	0x032FDB28 BL 0x1C16CF4
	0x032FDB2C ADRP X0, 0xDFF000
	0x032FDB30 LDR X0, [X0 + 0x790]
	0x032FDB34 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x10E0000
	006 Move X21, 0xDFD000
	007 Move X20, 0xE25000
	008 Move W8, [X19+2696]
	009 Move X21, [X21+3264]
	010 Move X20, [X20+1648]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xE25000
	016 Move X0, [X0+1648]
	017 Call 0x1C17CF4
	018 Move X0, 0xDFD000
	019 Move X0, [X0+3264]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+2696], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X19, X0
	027 Call Object..ctor, X0
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move [X8+8], X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

