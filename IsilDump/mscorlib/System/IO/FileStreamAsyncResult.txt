Type: System.IO.FileStreamAsyncResult

Method: System.Void .ctor(System.AsyncCallback cb, System.Object state)

Disassembly:
	0x032FCB84 MOVZ W8, 0x1
	0x032FCB88 STRB W8, [X20 + 0xA8C]
	0x032FCB8C CBZ X19, 0x32FCBE8
	0x032FCB90 ADRP X9, 0xE2B000
	0x032FCB94 LDR X9, [X9 + 0x638]
	0x032FCB98 LDR X8, [X19]
	0x032FCB9C LDR X1, [X9]
	0x032FCBA0 LDRB W10, [X8 + 0x130]
	0x032FCBA4 LDRB W9, [X1 + 0x130]
	0x032FCBA8 CMP W10, W9
	0x032FCBAC B.CC 0x32FCBEC
	0x032FCBB0 LDR X8, [X8 + 0xC8]
	0x032FCBB4 ADD X8, X8, X9, 0x3, LSL
	0x032FCBB8 LDUR X8, [X8 - 0x8]
	0x032FCBBC CMP X8, X1
	0x032FCBC0 B.NE 0x32FCBEC
	0x032FCBC4 LDR X0, [X19 + 0x40]
	0x032FCBC8 CBZ X0, 0x32FCBE8
	0x032FCBCC MOV X1, X19
	0x032FCBD0 LDP X20, X19, [X31 + 0x10]
	0x032FCBD4 MOV X2, X31
	0x032FCBD8 MOV X3, X31
	0x032FCBDC MOV X4, X31
	0x032FCBE0 LDR X30, [X31], #0x20
	0x032FCBE4 B 0x3316684
	0x032FCBE8 BL 0x1C16F20
	0x032FCBEC MOV X0, X19
	0x032FCBF0 BL 0x1C171E0
	0x032FCBF4 LDR X0, [X0 + 0x10]
	0x032FCBF8 RET
	0x032FCBFC LDRB W0, [X0 + 0x30]
	0x032FCC00 RET
	0x032FCC04 LDR X0, [X0 + 0x20]
	0x032FCC08 RET
	0x032FCC0C LDRB W0, [X0 + 0x18]
	0x032FCC10 RET
	0x032FCC14 STR X30, [X31 - 0x20]!
	0x032FCC18 STP X20, X19, [X31 + 0x10]
	0x032FCC1C ADRP X20, 0x10E0000
	0x032FCC20 LDRB W8, [X20 + 0xA8D]
	0x032FCC24 MOV W19, W0
	0x032FCC28 TBNZ X8, 0x0, 0x32FCC7C
	0x032FCC2C ADRP X0, 0xE25000
	0x032FCC30 LDR X0, [X0 + 0x7A8]
	0x032FCC34 BL 0x1C16CF4
	0x032FCC38 ADRP X0, 0xE25000
	0x032FCC3C LDR X0, [X0 + 0xFA8]
	0x032FCC40 BL 0x1C16CF4
	0x032FCC44 ADRP X0, 0xDF9000
	0x032FCC48 LDR X0, [X0 + 0x278]
	0x032FCC4C BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x10E1000
	007 Move W8, [X22+2699]
	008 Move X21, X2
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xE20000
	016 Move X0, [X0+1824]
	017 Call 0x1C17CF4
	018 Move X0, 0xE2C000
	019 Move X0, [X0+1632]
	020 Call 0x1C17CF4
	021 Move X0, 0xE29000
	022 Move X0, [X0+1992]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+2699], W8
	026 Move X22, 0xE29000
	027 Move X22, [X22+1992]
	028 Move X0, X19
	029 Move X1, X31
	030 Call Object..ctor, X0
	031 Move [X19+16], X21
	032 Move [X19+64], X20
	033 Compare X20, 0
	034 JumpIfEqual {47}
	035 Move X8, 0xE20000
	036 Move X8, [X8+1824]
	037 Move X20, 0xE2C000
	038 Move X0, [X8]
	039 Move X20, [X20+1632]
	040 Call 0x1C17F10
	041 Move X2, [X20]
	042 Move X1, X31
	043 Move X3, X31
	044 Move X20, X0
	045 Call AsyncCallback..ctor, X0, X1, X2
	046 Move [X19+40], X20
	047 Move X0, [X22]
	048 Call 0x1C17F10
	049 Move W1, W31
	050 Move X2, X31
	051 Move X20, X0
	052 Call ManualResetEvent..ctor, X0, X1
	053 Move [X19+32], X20
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Return 

Method: System.Void CBWrapper(System.IAsyncResult ares)

Disassembly:
	0x032FDB60 CBZ X0, 0x32FDEAC
	0x032FDB64 LDR W8, [X20 + 0x10]
	0x032FDB68 CBZ W8, 0x32FDE60
	0x032FDB6C ADRP X22, 0xE1D000
	0x032FDB70 LDR X22, [X22 + 0x1D0]
	0x032FDB74 LDR X0, [X22]
	0x032FDB78 LDR W8, [X0 + 0xE0]
	0x032FDB7C CBNZ W8, 0x32FDB84
	0x032FDB80 BL 0x1C16DFC
	0x032FDB84 MOV X0, X20
	0x032FDB88 BL 0x32FD5D8
	0x032FDB8C ADRP X8, 0xDFF000
	0x032FDB90 LDR X8, [X8 + 0x8D8]
	0x032FDB94 MOV X19, X0
	0x032FDB98 MOVZ W1, 0x2
	0x032FDB9C LDR X8, [X8]
	0x032FDBA0 MOV X0, X8
	0x032FDBA4 BL 0x1C16D6C
	0x032FDBA8 CBZ X0, 0x32FDEAC
	0x032FDBAC LDR W9, [X0 + 0x18]
	0x032FDBB0 MOV X1, X0
	0x032FDBB4 CBZ W9, 0x32FDEA8
	0x032FDBB8 LDR X8, [X22]
	0x032FDBBC CMP W9, 0x1
	0x032FDBC0 LDR X8, [X8 + 0xB8]
	0x032FDBC4 LDRH W10, [X8 + 0xA]
	0x032FDBC8 STRH W10, [X1 + 0x20]
	0x032FDBCC B.EQ 0x32FDEA8
	0x032FDBD0 LDRH W8, [X8 + 0x8]
	0x032FDBD4 MOV X0, X20
	0x032FDBD8 MOV X2, X31
	0x032FDBDC STRH W8, [X1 + 0x22]
	0x032FDBE0 BL 0x3229E68
	0x032FDBE4 MOV X20, X0
	0x032FDBE8 MOV X0, X31
	0x032FDBEC BL 0x33C1A14
	0x032FDBF0 TBZ X0, 0x0, 0x32FDC78

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10E0000
	005 Move W8, [X20+2700]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE2B000
	012 Move X0, [X0+1592]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2700], W8
	016 Compare X19, 0
	017 JumpIfEqual {41}
	018 Move X9, 0xE2B000
	019 Move X9, [X9+1592]
	020 Move X8, [X19]
	021 Move X1, [X9]
	022 Move W10, [X8+304]
	023 Move W9, [X1+304]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X8, [X8+200]
	026 Add X8, X8, X9
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X0, [X19+64]
	030 Compare X0, 0
	031 JumpIfEqual {41}
	032 Move X1, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X2, X31
	036 Move X3, X31
	037 Move X4, X31
	038 Move X30, [X31+32]
	039 Call AsyncCallback.BeginInvoke, X0, X1, X2, X3
	040 Return 
	041 Call 0x1C17F20
	042 Move X0, X19
	043 Call 0x1C181E0

Method: System.Object get_AsyncState()

Disassembly:
	0x032FDBF4 CBZ X19, 0x32FDEAC
	0x032FDBF8 LDR W8, [X19 + 0x10]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Boolean get_CompletedSynchronously()

Disassembly:
	0x032FDBFC CMP W8, 0x3
	0x032FDC00 B.LT 0x32FDC78

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Threading.WaitHandle get_AsyncWaitHandle()

Disassembly:
	0x032FDC04 MOV X0, X19
	0x032FDC08 MOV W1, W31

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Boolean get_IsCompleted()

Disassembly:
	0x032FDC0C MOV X2, X31
	0x032FDC10 BL 0x3222A1C

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

