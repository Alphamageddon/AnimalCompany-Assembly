Type: System.IO.UnmanagedMemoryStream

Method: System.Void .ctor()

Disassembly:
	0x032E6AFC B.EQ 0x32E6B2C
	0x032E6B00 MOV X20, X19
	0x032E6B04 LDR X0, [X20 + 0x18]!
	0x032E6B08 CBZ X0, 0x32E6B20
	0x032E6B0C LDR X8, [X0]
	0x032E6B10 LDR X1, [X8 + 0x280]
	0x032E6B14 LDR X9, [X8 + 0x278]
	0x032E6B18 BLR X9
	0x032E6B1C MOV X0, X31
	0x032E6B20 LDRB W8, [X19 + 0x57]
	0x032E6B24 CBNZ W8, 0x32E6B34
	0x032E6B28 B 0x32E6B48
	0x032E6B2C MOV X0, X31
	0x032E6B30 CBZ W8, 0x32E6B48
	0x032E6B34 LDR X8, [X19 + 0x18]!
	0x032E6B38 CBZ X8, 0x32E6B48
	0x032E6B3C MOVI V0.2D, 0x0
	0x032E6B40 STP V0, V0, [X19 + 0x10]
	0x032E6B44 STR V0, [X19]
	0x032E6B48 CBNZ X0, 0x32E6B58
	0x032E6B4C LDP X20, X19, [X31 + 0x10]
	0x032E6B50 LDR X30, [X31], #0x20
	0x032E6B54 RET
	0x032E6B58 BL 0x1C16F18
	0x032E6B5C CMP W1, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x10F7000
	006 Move X21, 0xE3D000
	007 Move W8, [X20+2537]
	008 Move X21, [X21+3344]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE3D000
	015 Move X0, [X0+3344]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2537], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X1, X31
	026 Call Stream..ctor, X0
	027 Move [X19+48], X31
	028 Move [X19+92], W31
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 

Method: System.Void .ctor(System.Byte* pointer, System.Int64 length)

Disassembly:
	0x032EB58C BL 0x1C16D08
	0x032EB590 BL 0x1C16F10
	0x032EB594 MOV X19, X0
	0x032EB598 ADRP X0, 0xE3B000
	0x032EB59C LDR X0, [X0 + 0xD40]
	0x032EB5A0 BL 0x1C16D08
	0x032EB5A4 MOV X1, X0
	0x032EB5A8 MOV X0, X19
	0x032EB5AC MOV X2, X31
	0x032EB5B0 BL 0x3314A68
	0x032EB5B4 ADRP X0, 0xE3B000
	0x032EB5B8 LDR X0, [X0 + 0xF58]
	0x032EB5BC BL 0x1C16D08
	0x032EB5C0 MOV X1, X0
	0x032EB5C4 MOV X0, X19
	0x032EB5C8 BL 0x1C16DEC
	0x032EB5CC STP X30, X23, [X31 - 0x30]!
	0x032EB5D0 STP X22, X21, [X31 + 0x10]
	0x032EB5D4 STP X20, X19, [X31 + 0x20]
	0x032EB5D8 TBNZ X1, 0x0, 0x32EB690
	0x032EB5DC LDR X8, [X0 + 0x28]
	0x032EB5E0 MOV X21, X0
	0x032EB5E4 CBNZ X8, 0x32EB6D8
	0x032EB5E8 MOV X0, X21
	0x032EB5EC MOV X19, X1
	0x032EB5F0 BL 0x32EA6DC
	0x032EB5F4 MOV X0, X21
	0x032EB5F8 BL 0x32EA74C
	0x032EB5FC LDR X8, [X21 + 0x40]
	0x032EB600 CMP X8, X19
	0x032EB604 B.LT 0x32EB70C
	0x032EB608 ADD X20, X21, 0x48

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x10F2000
	008 Move X23, 0xE38000
	009 Move W8, [X22+2538]
	010 Move X23, [X23+3344]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xE38000
	019 Move X0, [X0+3344]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2538], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X21
	029 Move X1, X31
	030 Call Stream..ctor, X0
	031 Move X0, X21
	032 Move X1, X20
	033 Move X2, X19
	034 Move X3, X19
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move W4, 1
	040 Move X30, [X31+48]
	041 Move X23, [X31+56]
	042 Call UnmanagedMemoryStream.Initialize, X0, X1, X2, X3, X4
	043 Return 

Method: System.Void .ctor(System.Byte* pointer, System.Int64 length, System.Int64 capacity, System.IO.FileAccess access)

Disassembly:
	0x032EB60C MOV X0, X20
	0x032EB610 MOV X1, X31
	0x032EB614 BL 0x33EB198
	0x032EB618 ADD X23, X21, 0x38
	0x032EB61C MOV X22, X0
	0x032EB620 MOV X0, X23
	0x032EB624 MOV X1, X31
	0x032EB628 BL 0x33EB198
	0x032EB62C CMP X0, X19
	0x032EB630 B.GE 0x32EB64C
	0x032EB634 LDR X8, [X21 + 0x30]
	0x032EB638 SUB X1, X19, X0
	0x032EB63C MOV X2, X31
	0x032EB640 ADD X8, X0, X8
	0x032EB644 MOV X0, X8
	0x032EB648 BL 0x33A8870
	0x032EB64C MOV X0, X23
	0x032EB650 MOV X1, X19
	0x032EB654 MOV X2, X31
	0x032EB658 BL 0x33EB18C
	0x032EB65C CMP X22, X19
	0x032EB660 B.LE 0x32EB680
	0x032EB664 MOV X0, X20
	0x032EB668 MOV X1, X19
	0x032EB66C LDP X20, X19, [X31 + 0x20]
	0x032EB670 LDP X22, X21, [X31 + 0x10]
	0x032EB674 MOV X2, X31
	0x032EB678 LDP X30, X23, [X31], #0x30
	0x032EB67C B 0x33EB18C
	0x032EB680 LDP X20, X19, [X31 + 0x20]
	0x032EB684 LDP X22, X21, [X31 + 0x10]
	0x032EB688 LDP X30, X23, [X31], #0x30
	0x032EB68C RET
	0x032EB690 ADRP X0, 0xE10000
	0x032EB694 LDR X0, [X0 + 0x760]
	0x032EB698 BL 0x1C16D08

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x10F2000
	010 Move X25, 0xE38000
	011 Move W8, [X24+2539]
	012 Move X25, [X25+3344]
	013 Move W19, W4
	014 Move X20, X3
	015 Move X21, X2
	016 Move X22, X1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xE38000
	023 Move X0, [X0+3344]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X24+2539], W8
	027 Move X0, [X25]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X23
	033 Move X1, X31
	034 Call Stream..ctor, X0
	035 Move X0, X23
	036 Move X1, X22
	037 Move X2, X21
	038 Move X3, X20
	039 Move W4, W19
	040 Move X20, [X31+48]
	041 Move X19, [X31+56]
	042 Move X22, [X31+32]
	043 Move X21, [X31+40]
	044 Move X24, [X31+16]
	045 Move X23, [X31+24]
	046 Move X30, [X31+64]
	047 Move X25, [X31+72]
	048 Call UnmanagedMemoryStream.Initialize, X0, X1, X2, X3, X4
	049 Return 

Method: System.Void Initialize(System.Byte* pointer, System.Int64 length, System.Int64 capacity, System.IO.FileAccess access)

Disassembly:
	0x032E6B60 B.NE 0x32E6B7C
	0x032E6B64 BL 0x3EB1AD0
	0x032E6B68 LDR X8, [X0]
	0x032E6B6C STR X8, [X31 + 0x8]
	0x032E6B70 BL 0x3EB1AE0
	0x032E6B74 LDR X0, [X31 + 0x8]
	0x032E6B78 B 0x32E6B20
	0x032E6B7C STR X31, [X31 + 0x8]
	0x032E6B80 B 0x32E6B84
	0x032E6B84 LDRB W8, [X19 + 0x57]
	0x032E6B88 CBZ W8, 0x32E6BA0
	0x032E6B8C LDR X8, [X20]
	0x032E6B90 CBZ X8, 0x32E6BA0
	0x032E6B94 MOVI V0.2D, 0x0
	0x032E6B98 STP V0, V0, [X20 + 0x10]
	0x032E6B9C STR V0, [X20]
	0x032E6BA0 LDR X8, [X31 + 0x8]
	0x032E6BA4 CBNZ X8, 0x32E6BAC
	0x032E6BA8 BL 0x1D2C690
	0x032E6BAC LDR X0, [X31 + 0x8]
	0x032E6BB0 BL 0x1C16F18
	0x032E6BB4 BL 0x1990590
	0x032E6BB8 LDRB W8, [X0 + 0x57]
	0x032E6BBC CMP W8, 0x0
	0x032E6BC0 CSET W0, EQ
	0x032E6BC4 RET
	0x032E6BC8 LDR X0, [X0 + 0x20]
	0x032E6BCC RET
	0x032E6BD0 LDR X0, [X0 + 0x18]
	0x032E6BD4 RET
	0x032E6BD8 STP X30, X19, [X31 - 0x10]!
	0x032E6BDC LDR X8, [X0 + 0x18]
	0x032E6BE0 CBZ X8, 0x32E6C48
	0x032E6BE4 MOV X19, X0
	0x032E6BE8 BL 0x32E6368
	0x032E6BEC LDP W8, W9, [X19 + 0x40]
	0x032E6BF0 CMP W8, W9
	0x032E6BF4 B.NE 0x32E6C24
	0x032E6BF8 LDRB W8, [X19 + 0x56]
	0x032E6BFC CBZ W8, 0x32E6C08
	0x032E6C00 MOVN W0, 0x0
	0x032E6C04 B 0x32E6C40
	0x032E6C08 LDR X8, [X19]
	0x032E6C0C MOV X0, X19
	0x032E6C10 LDR X9, [X8 + 0x228]
	0x032E6C14 LDR X1, [X8 + 0x230]
	0x032E6C18 BLR X9
	0x032E6C1C CBZ W0, 0x32E6C00
	0x032E6C20 LDR W8, [X19 + 0x40]
	0x032E6C24 LDR X9, [X19 + 0x38]
	0x032E6C28 CBZ X9, 0x32E6C94
	0x032E6C2C LDR W10, [X9 + 0x18]
	0x032E6C30 CMP W8, W10
	0x032E6C34 B.CS 0x32E6C98
	0x032E6C38 ADD X8, X9, W8, 0x1, SXTW
	0x032E6C3C LDRH W0, [X8 + 0x20]
	0x032E6C40 LDP X30, X19, [X31], #0x10
	0x032E6C44 RET
	0x032E6C48 ADRP X0, 0xE36000
	0x032E6C4C LDR X0, [X0 + 0x4B8]
	0x032E6C50 BL 0x1C16D08
	0x032E6C54 BL 0x1C16F10
	0x032E6C58 MOV X19, X0
	0x032E6C5C ADRP X0, 0xE40000
	0x032E6C60 LDR X0, [X0 + 0xE20]
	0x032E6C64 BL 0x1C16D08
	0x032E6C68 MOV X2, X0
	0x032E6C6C MOV X0, X19
	0x032E6C70 MOV X1, X31
	0x032E6C74 MOV X3, X31
	0x032E6C78 BL 0x338C410
	0x032E6C7C ADRP X0, 0xE40000
	0x032E6C80 LDR X0, [X0 + 0xE28]
	0x032E6C84 BL 0x1C16D08
	0x032E6C88 MOV X1, X0
	0x032E6C8C MOV X0, X19
	0x032E6C90 BL 0x1C16DEC
	0x032E6C94 BL 0x1C16F20
	0x032E6C98 BL 0x1C16F28
	0x032E6C9C STP X30, X19, [X31 - 0x10]!
	0x032E6CA0 LDR X8, [X0 + 0x18]
	0x032E6CA4 CBZ X8, 0x32E6D0C
	0x032E6CA8 MOV X19, X0
	0x032E6CAC BL 0x32E6368
	0x032E6CB0 LDP W8, W9, [X19 + 0x40]
	0x032E6CB4 CMP W8, W9
	0x032E6CB8 B.NE 0x32E6CD8
	0x032E6CBC LDR X8, [X19]
	0x032E6CC0 MOV X0, X19
	0x032E6CC4 LDR X9, [X8 + 0x228]
	0x032E6CC8 LDR X1, [X8 + 0x230]
	0x032E6CCC BLR X9
	0x032E6CD0 CBZ W0, 0x32E6D04
	0x032E6CD4 LDR W8, [X19 + 0x40]
	0x032E6CD8 LDR X9, [X19 + 0x38]
	0x032E6CDC CBZ X9, 0x32E6D58
	0x032E6CE0 LDR W10, [X9 + 0x18]
	0x032E6CE4 CMP W8, W10
	0x032E6CE8 B.CS 0x32E6D5C
	0x032E6CEC ADD X9, X9, W8, 0x1, SXTW
	0x032E6CF0 LDRH W0, [X9 + 0x20]
	0x032E6CF4 ADD W8, W8, 0x1
	0x032E6CF8 STR W8, [X19 + 0x40]
	0x032E6CFC LDP X30, X19, [X31], #0x10
	0x032E6D00 RET
	0x032E6D04 MOVN W0, 0x0
	0x032E6D08 B 0x32E6CFC
	0x032E6D0C ADRP X0, 0xE36000
	0x032E6D10 LDR X0, [X0 + 0x4B8]
	0x032E6D14 BL 0x1C16D08
	0x032E6D18 BL 0x1C16F10
	0x032E6D1C MOV X19, X0
	0x032E6D20 ADRP X0, 0xE40000
	0x032E6D24 LDR X0, [X0 + 0xE20]
	0x032E6D28 BL 0x1C16D08
	0x032E6D2C MOV X2, X0
	0x032E6D30 MOV X0, X19
	0x032E6D34 MOV X1, X31
	0x032E6D38 MOV X3, X31
	0x032E6D3C BL 0x338C410
	0x032E6D40 ADRP X0, 0xE40000
	0x032E6D44 LDR X0, [X0 + 0xE30]
	0x032E6D48 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {32}
	006 Move TEMP, X3
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {44}
	010 Move TEMP, X2
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {44}
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Add X31, X1, X3
	016 Subtract W8, W4, 1
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W8, [X0+92]
	019 Compare W8, 0
	020 JumpIfNotEqual {110}
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move W8, 1
	024 Move [X0+80], X31
	025 Move [X0+48], X1
	026 Move [X0+56], X2
	027 Move [X0+64], X3
	028 Move [X0+88], W4
	029 Move [X0+92], W8
	030 Move X30, [X31+32]
	031 Return 
	032 Move X0, 0xE13000
	033 Move X0, [X0+1320]
	034 Call 0x1C17D08
	035 Call 0x1C17F10
	036 Move X19, X0
	037 Move X0, 0xE41000
	038 Move X0, [X0+3488]
	039 Call 0x1C17D08
	040 Move X1, X0
	041 Move X0, X19
	042 Move X2, X31
	043 Call ArgumentNullException..ctor, X0, X1
	044 Move X8, 0xE38000
	045 Move X9, 0xE16000
	046 Move X8, [X8+88]
	047 Move X9, [X9+1896]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CSEL not yet implemented."
	050 Call 0x1C17D08
	051 Move X19, X0
	052 Move X0, 0xE16000
	053 Move X0, [X0+1888]
	054 Call 0x1C17D08
	055 Call 0x1C17F10
	056 Move X20, X0
	057 Move X0, 0xE36000
	058 Move X0, [X0+1648]
	059 Call 0x1C17D08
	060 Move X2, X0
	061 Move X0, X20
	062 Move X1, X19
	063 Move X3, X31
	064 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	065 Move X0, 0xE41000
	066 Move X0, [X0+3496]
	067 Call 0x1C17D08
	068 Move X1, X0
	069 Move X0, X20
	070 Call 0x1C17DEC
	071 Move X0, 0xE16000
	072 Move X0, [X0+1888]
	073 Call 0x1C17D08
	074 Call 0x1C17F10
	075 Move X19, X0
	076 Move X0, 0xE16000
	077 Move X0, [X0+1896]
	078 Call 0x1C17D08
	079 Move X20, X0
	080 Move X0, 0xE3D000
	081 Move X0, [X0+1312]
	082 Move X0, 0xE16000
	083 Move X0, [X0+1888]
	084 Call 0x1C17D08
	085 Call 0x1C17F10
	086 Move X19, X0
	087 Move X0, 0xE38000
	088 Move X0, [X0+88]
	089 Call 0x1C17D08
	090 Move X20, X0
	091 Move X0, 0xE41000
	092 Move X0, [X0+3504]
	093 Move X0, 0xE16000
	094 Move X0, [X0+1888]
	095 Call 0x1C17D08
	096 Call 0x1C17F10
	097 Move X19, X0
	098 Move X0, 0xE41000
	099 Move X0, [X0+3512]
	100 Call 0x1C17D08
	101 Move X20, X0
	102 Move X0, 0xE41000
	103 Move X0, [X0+3520]
	104 Call 0x1C17D08
	105 Move X2, X0
	106 Move X0, X19
	107 Move X1, X20
	108 Move X3, X31
	109 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	110 Move X0, 0xE0E000
	111 Move X0, [X0+1456]
	112 Call 0x1C17D08
	113 Call 0x1C17F10
	114 Move X19, X0
	115 Move X0, 0xE41000
	116 Move X0, [X0+3528]
	117 Call 0x1C17D08
	118 Move X1, X0
	119 Move X0, X19
	120 Move X2, X31
	121 Call InvalidOperationException..ctor, X0, X1
	122 Move X0, 0xE41000
	123 Move X0, [X0+3496]
	124 Call 0x1C17D08
	125 Move X1, X0
	126 Move X0, X19
	127 Call 0x1C17DEC

Method: System.Boolean get_CanRead()

Disassembly:
	0x032EB69C BL 0x1C16F10
	0x032EB6A0 MOV X19, X0
	0x032EB6A4 ADRP X0, 0xE12000
	0x032EB6A8 LDR X0, [X0 + 0xEC8]
	0x032EB6AC BL 0x1C16D08
	0x032EB6B0 MOV X20, X0
	0x032EB6B4 ADRP X0, 0xE30000

ISIL:
	001 Move W8, [X0+92]
	002 Compare W8, 0
	003 JumpIfEqual {7}
	004 Move W8, [X0+88]
	005 And W0, W8, 1
	006 Return X0
	007 Move W0, W31
	008 Return X0

Method: System.Boolean get_CanSeek()

Disassembly:
	0x032EB6B8 LDR X0, [X0 + 0x670]
	0x032EB6BC BL 0x1C16D08

ISIL:
	001 Move W0, [X0+92]
	002 Return X0

Method: System.Boolean get_CanWrite()

Disassembly:
	0x032EB6C0 MOV X2, X0
	0x032EB6C4 MOV X0, X19
	0x032EB6C8 MOV X1, X20
	0x032EB6CC MOV X3, X31
	0x032EB6D0 BL 0x3311888
	0x032EB6D4 B 0x32EB738
	0x032EB6D8 ADRP X0, 0xE08000

ISIL:
	001 Move W8, [X0+92]
	002 Compare W8, 0
	003 JumpIfEqual {9}
	004 Move W8, [X0+88]
	005 Move W0, W8
	006 ShiftRight W0, 1
	007 And W0, W0, 1
	008 Return X0
	009 Move W0, W31
	010 Return X0

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x032E7354 LDRB W8, [X23]
	0x032E7358 LDP X22, X23, [X19 + 0x28]
	0x032E735C CBZ W8, 0x32E7388
	0x032E7360 CBZ X23, 0x32E73C0
	0x032E7364 LDR W8, [X23 + 0x18]

ISIL:
	001 And W1, W1, 1
	002 Move X2, X31
	003 Move [X0+92], W31
	004 Move [X0+48], X31
	005 Call Stream.Dispose, X0, X1
	006 Return 

Method: System.Void EnsureNotClosed()

Disassembly:
	0x032EB6DC LDR X0, [X0 + 0xB40]
	0x032EB6E0 BL 0x1C16D08
	0x032EB6E4 BL 0x1C16F10
	0x032EB6E8 MOV X19, X0
	0x032EB6EC ADRP X0, 0xE3B000
	0x032EB6F0 LDR X0, [X0 + 0xF28]
	0x032EB6F4 BL 0x1C16D08
	0x032EB6F8 MOV X1, X0
	0x032EB6FC MOV X0, X19
	0x032EB700 MOV X2, X31
	0x032EB704 BL 0x3379A44
	0x032EB708 B 0x32EB738
	0x032EB70C ADRP X0, 0xE36000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+92]
	004 Compare W8, 0
	005 JumpIfEqual {9}
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return 
	009 Call Error.GetStreamIsClosed
	010 Move X19, X0
	011 Move X0, 0xE3C000
	012 Move X0, [X0+3840]
	013 Call 0x1C17D08
	014 Move X1, X0
	015 Move X0, X19
	016 Call 0x1C17DEC

Method: System.Void EnsureReadable()

Disassembly:
	0x032EB710 LDR X0, [X0 + 0x7A8]
	0x032EB714 BL 0x1C16D08
	0x032EB718 BL 0x1C16F10
	0x032EB71C MOV X19, X0
	0x032EB720 ADRP X0, 0xE3B000
	0x032EB724 LDR X0, [X0 + 0xDD8]
	0x032EB728 BL 0x1C16D08
	0x032EB72C MOV X1, X0
	0x032EB730 MOV X0, X19
	0x032EB734 BL 0x32E16BC
	0x032EB738 ADRP X0, 0xE3B000
	0x032EB73C LDR X0, [X0 + 0xF60]
	0x032EB740 BL 0x1C16D08
	0x032EB744 MOV X1, X0
	0x032EB748 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X9, [X8+424]
	005 Move X1, [X8+432]
	006 NotImplemented "Instruction BLR not yet implemented."
	007 Move TEMP, X0
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {14}
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return 
	014 Call Error.GetReadNotSupported
	015 Move X19, X0
	016 Move X0, 0xE3C000
	017 Move X0, [X0+3848]
	018 Call 0x1C17D08
	019 Move X1, X0
	020 Move X0, X19
	021 Call 0x1C17DEC

Method: System.Void EnsureWriteable()

Disassembly:
	0x032EB74C BL 0x1C16DEC
	0x032EB750 STP X30, X23, [X31 - 0x30]!
	0x032EB754 STP X22, X21, [X31 + 0x10]
	0x032EB758 STP X20, X19, [X31 + 0x20]
	0x032EB75C ADRP X23, 0x10F1000
	0x032EB760 LDRB W8, [X23 + 0x9F2]
	0x032EB764 MOV W20, W3
	0x032EB768 MOV W21, W2
	0x032EB76C MOV X22, X1
	0x032EB770 MOV X19, X0
	0x032EB774 TBNZ X8, 0x0, 0x32EB798
	0x032EB778 ADRP X0, 0xE37000
	0x032EB77C LDR X0, [X0 + 0xE60]
	0x032EB780 BL 0x1C16CF4
	0x032EB784 ADRP X0, 0xE3B000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X9, [X8+472]
	005 Move X1, [X8+480]
	006 NotImplemented "Instruction BLR not yet implemented."
	007 Move TEMP, X0
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {14}
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return 
	014 Call Error.GetWriteNotSupported
	015 Move X19, X0
	016 Move X0, 0xE3C000
	017 Move X0, [X0+3856]
	018 Call 0x1C17D08
	019 Move X1, X0
	020 Move X0, X19
	021 Call 0x1C17DEC

Method: System.Void Flush()

Disassembly:
	0x032EB788 LDR X0, [X0 + 0xF68]

ISIL:
	001 Call UnmanagedMemoryStream.EnsureNotClosed, X0
	002 Return 

Method: System.Threading.Tasks.Task FlushAsync(System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x032EB78C BL 0x1C16CF4
	0x032EB790 MOVZ W8, 0x1
	0x032EB794 STRB W8, [X23 + 0x9F2]
	0x032EB798 CBZ X22, 0x32EB80C
	0x032EB79C TBNZ X21, 0x1F, 0x32EB854
	0x032EB7A0 TBNZ X20, 0x1F, 0x32EB874
	0x032EB7A4 LDR W9, [X22 + 0x18]
	0x032EB7A8 SUB W8, W9, W21
	0x032EB7AC CMP W8, W20
	0x032EB7B0 B.LT 0x32EB8BC
	0x032EB7B4 ADRP X23, 0xE3B000
	0x032EB7B8 LDR X23, [X23 + 0xF68]
	0x032EB7BC CMP W9, W21
	0x032EB7C0 B.CC 0x32EB7CC
	0x032EB7C4 CMP W8, W20
	0x032EB7C8 B.CS 0x32EB7D4
	0x032EB7CC MOV X0, X31
	0x032EB7D0 BL 0x339D6EC
	0x032EB7D4 LDR X2, [X23]
	0x032EB7D8 ADD X8, X22, W21, UXTW
	0x032EB7DC ADD X0, X8, 0x20
	0x032EB7E0 MOV W1, W20
	0x032EB7E4 BL 0x25FB09C
	0x032EB7E8 MOV X2, X0
	0x032EB7EC MOV X0, X19
	0x032EB7F0 LDP X20, X19, [X31 + 0x20]
	0x032EB7F4 LDP X22, X21, [X31 + 0x10]
	0x032EB7F8 MOV X3, X1
	0x032EB7FC MOV X1, X2
	0x032EB800 MOV X2, X3
	0x032EB804 LDP X30, X23, [X31], #0x30
	0x032EB808 B 0x32E5F78
	0x032EB80C ADRP X0, 0xE0D000
	0x032EB810 LDR X0, [X0 + 0x528]
	0x032EB814 BL 0x1C16D08
	0x032EB818 BL 0x1C16F10
	0x032EB81C MOV X19, X0
	0x032EB820 ADRP X0, 0xE33000
	0x032EB824 LDR X0, [X0 + 0xF48]
	0x032EB828 BL 0x1C16D08
	0x032EB82C MOV X20, X0
	0x032EB830 ADRP X0, 0xE3B000
	0x032EB834 LDR X0, [X0 + 0xC40]
	0x032EB838 BL 0x1C16D08
	0x032EB83C MOV X2, X0
	0x032EB840 MOV X0, X19
	0x032EB844 MOV X1, X20
	0x032EB848 MOV X3, X31
	0x032EB84C BL 0x3315F7C
	0x032EB850 B 0x32EB8EC
	0x032EB854 ADRP X0, 0xE10000
	0x032EB858 LDR X0, [X0 + 0x760]
	0x032EB85C BL 0x1C16D08
	0x032EB860 BL 0x1C16F10
	0x032EB864 MOV X19, X0
	0x032EB868 ADRP X0, 0xE37000
	0x032EB86C LDR X0, [X0 + 0xD90]
	0x032EB870 B 0x32EB890
	0x032EB874 ADRP X0, 0xE10000
	0x032EB878 LDR X0, [X0 + 0x760]
	0x032EB87C BL 0x1C16D08
	0x032EB880 BL 0x1C16F10
	0x032EB884 MOV X19, X0
	0x032EB888 ADRP X0, 0xE30000
	0x032EB88C LDR X0, [X0 + 0x648]
	0x032EB890 BL 0x1C16D08
	0x032EB894 MOV X20, X0
	0x032EB898 ADRP X0, 0xE30000
	0x032EB89C LDR X0, [X0 + 0x670]
	0x032EB8A0 BL 0x1C16D08
	0x032EB8A4 MOV X2, X0
	0x032EB8A8 MOV X0, X19
	0x032EB8AC MOV X1, X20
	0x032EB8B0 MOV X3, X31
	0x032EB8B4 BL 0x3311888
	0x032EB8B8 B 0x32EB8EC
	0x032EB8BC ADRP X0, 0xE10000
	0x032EB8C0 LDR X0, [X0 + 0x578]
	0x032EB8C4 BL 0x1C16D08
	0x032EB8C8 BL 0x1C16F10
	0x032EB8CC MOV X19, X0
	0x032EB8D0 ADRP X0, 0xE30000
	0x032EB8D4 LDR X0, [X0 + 0x760]
	0x032EB8D8 BL 0x1C16D08
	0x032EB8DC MOV X1, X0
	0x032EB8E0 MOV X0, X19
	0x032EB8E4 MOV X2, X31
	0x032EB8E8 BL 0x3314A68
	0x032EB8EC ADRP X0, 0xE3B000
	0x032EB8F0 LDR X0, [X0 + 0xF70]
	0x032EB8F4 BL 0x1C16D08
	0x032EB8F8 MOV X1, X0
	0x032EB8FC MOV X0, X19
	0x032EB900 BL 0x1C16DEC
	0x032EB904 STR X30, [X31 - 0x40]!
	0x032EB908 STP X24, X23, [X31 + 0x10]
	0x032EB90C STP X22, X21, [X31 + 0x20]
	0x032EB910 STP X20, X19, [X31 + 0x30]
	0x032EB914 ADRP X24, 0x10F1000
	0x032EB918 ADRP X22, 0xE3B000
	0x032EB91C ADRP X23, 0xE08000
	0x032EB920 LDRB W8, [X24 + 0x9F3]
	0x032EB924 LDR X22, [X22 + 0xF48]
	0x032EB928 LDR X23, [X23 + 0x6C0]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x10F2000
	007 Move [X31+8], X1
	008 Move X21, 0xE11000
	009 Move W8, [X20+2540]
	010 Move X21, [X21+2008]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xE11000
	017 Move X0, [X0+2008]
	018 Call 0x1C17CF4
	019 Move X0, 0xE0A000
	020 Move X0, [X0+1976]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2540], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X20, 0xE0A000
	030 Move X20, [X20+1976]
	031 Add X0, X31, 8
	032 Move X1, X31
	033 Call CancellationToken.get_IsCancellationRequested, X0
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {47}
	038 Move X0, [X20]
	039 Move X19, [X31+8]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X19
	045 Move X1, X31
	046 Call Task.FromCanceled, X0
	047 Move X8, [X19]
	048 Move X1, [X8+672]
	049 Move X9, [X8+664]
	050 Move X0, X19
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X0, [X20]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X19, 0x10EE000
	058 Move W8, [X19+3869]
	059 Compare W8, 0
	060 JumpIfNotEqual {66}
	061 Move X0, 0xE0A000
	062 Move X0, [X0+1976]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X19+3869], W8
	066 Move X0, [X20]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {72}
	070 Call 0x1C17DFC
	071 Move X0, [X20]
	072 Move X8, [X0+184]
	073 Move X0, [X8+48]
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X30, [X31+16]
	077 Move X21, [X31+24]
	078 Add X31, X31, 48
	079 Return X0
	080 Move X19, X0
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X0, X19
	083 Call 0x3EB2AD0
	084 Move X19, X0
	085 Move X0, 0xE09000
	086 Move X0, [X0+2000]
	087 Call 0x1C17D08
	088 Move X8, [X19]
	089 Move X1, [X8]
	090 Call 0x1C18270
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {107}
	095 Move X19, [X19]
	096 Call 0x3EB2AE0
	097 Move X0, 0xE0A000
	098 Move X0, [X0+1976]
	099 Call 0x1C17D08
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move X0, X19
	105 Move X1, X31
	106 Call Task.FromException, X0
	107 Move W0, 8
	108 Call 0x3EB2AF0
	109 Move X8, [X19]
	110 Move [X0], X8
	111 Move X1, 0xBCA000
	112 Add X1, X1, 3672
	113 Move X2, X31
	114 Call 0x3EB2B00
	115 Move X19, X0
	116 Call 0x3EB2AE0
	117 Move X0, X19
	118 Call 0x1D2D690
	119 Call 0x1991590

Method: System.Int64 get_Length()

Disassembly:
	0x032EB92C MOV X19, X2
	0x032EB930 MOV X20, X1
	0x032EB934 MOV X21, X0
	0x032EB938 TBNZ X8, 0x0, 0x32EB95C
	0x032EB93C ADRP X0, 0xE08000
	0x032EB940 LDR X0, [X0 + 0x6C0]
	0x032EB944 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call UnmanagedMemoryStream.EnsureNotClosed, X0
	005 Add X0, X19, 56
	006 Move X1, X31
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Call Interlocked.Read, X0
	010 Return X0

Method: System.Int64 get_Position()

Disassembly:
	0x032EB948 ADRP X0, 0xE3B000
	0x032EB94C LDR X0, [X0 + 0xF48]
	0x032EB950 BL 0x1C16CF4
	0x032EB954 MOVZ W8, 0x1
	0x032EB958 STRB W8, [X24 + 0x9F3]
	0x032EB95C MOV X0, X21
	0x032EB960 MOV X1, X31
	0x032EB964 BL 0x33BE520
	0x032EB968 LDR X8, [X23]
	0x032EB96C LDR X23, [X22]
	0x032EB970 MOV X22, X0
	0x032EB974 LDR W9, [X8 + 0xE0]
	0x032EB978 CBNZ W9, 0x32EB984
	0x032EB97C MOV X0, X8
	0x032EB980 BL 0x1C16DFC
	0x032EB984 MOV X0, X23
	0x032EB988 MOV X1, X31
	0x032EB98C BL 0x338C698

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+440]
	006 Move X1, [X8+448]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {18}
	012 Add X0, X19, 72
	013 Move X1, X31
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Call Interlocked.Read, X0
	017 Return X0
	018 Call Error.GetStreamIsClosed
	019 Move X19, X0
	020 Move X0, 0xE3C000
	021 Move X0, [X0+3864]
	022 Call 0x1C17D08
	023 Move X1, X0
	024 Move X0, X19
	025 Call 0x1C17DEC

Method: System.Void set_Position(System.Int64 value)

Disassembly:
	0x032EB990 MOV X1, X0
	0x032EB994 MOV X0, X22
	0x032EB998 MOV X2, X31
	0x032EB99C BL 0x3395194
	0x032EB9A0 TBZ X0, 0x0, 0x32EB9C4
	0x032EB9A4 MOV X0, X21
	0x032EB9A8 MOV X1, X20
	0x032EB9AC MOV X2, X19
	0x032EB9B0 LDP X20, X19, [X31 + 0x30]
	0x032EB9B4 LDP X22, X21, [X31 + 0x20]
	0x032EB9B8 LDP X24, X23, [X31 + 0x10]
	0x032EB9BC LDR X30, [X31], #0x40
	0x032EB9C0 B 0x32E5F78
	0x032EB9C4 MOV X0, X21
	0x032EB9C8 MOV X1, X20
	0x032EB9CC MOV X2, X19
	0x032EB9D0 LDP X20, X19, [X31 + 0x30]
	0x032EB9D4 LDP X22, X21, [X31 + 0x20]
	0x032EB9D8 LDP X24, X23, [X31 + 0x10]
	0x032EB9DC MOV X3, X31
	0x032EB9E0 LDR X30, [X31], #0x40
	0x032EB9E4 B 0x32F2000
	0x032EB9E8 SUB X31, X31, 0x40
	0x032EB9EC STP X30, X23, [X31 + 0x10]
	0x032EB9F0 STP X22, X21, [X31 + 0x20]
	0x032EB9F4 STP X20, X19, [X31 + 0x30]
	0x032EB9F8 ADRP X23, 0x10F1000
	0x032EB9FC LDRB W8, [X23 + 0x9F5]
	0x032EBA00 MOV W19, W3
	0x032EBA04 MOV W20, W2
	0x032EBA08 MOV X21, X1
	0x032EBA0C MOV X22, X0
	0x032EBA10 STR X4, [X31 + 0x8]
	0x032EBA14 TBNZ X8, 0x0, 0x32EBA38
	0x032EBA18 ADRP X0, 0xE10000
	0x032EBA1C LDR X0, [X0 + 0x7D8]
	0x032EBA20 BL 0x1C16CF4
	0x032EBA24 ADRP X0, 0xE09000
	0x032EBA28 LDR X0, [X0 + 0x7B8]
	0x032EBA2C BL 0x1C16CF4
	0x032EBA30 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move TEMP, X1
	005 And TEMP, TEMP, 1
	006 Compare TEMP, 1
	007 JumpIfEqual {26}
	008 Move X8, [X0]
	009 Move X19, X1
	010 Move X20, X0
	011 Move X9, [X8+440]
	012 Move X1, [X8+448]
	013 NotImplemented "Instruction BLR not yet implemented."
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {43}
	018 Add X0, X20, 72
	019 Move X1, X19
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X2, X31
	023 Move X30, [X31+32]
	024 Call Interlocked.Exchange, X0, X1
	025 Return 
	026 Move X0, 0xE11000
	027 Move X0, [X0+1888]
	028 Call 0x1C17D08
	029 Call 0x1C17F10
	030 Move X19, X0
	031 Move X0, 0xE13000
	032 Move X0, [X0+3784]
	033 Call 0x1C17D08
	034 Move X20, X0
	035 Move X0, 0xE31000
	036 Move X0, [X0+1648]
	037 Call 0x1C17D08
	038 Move X2, X0
	039 Move X0, X19
	040 Move X1, X20
	041 Move X3, X31
	042 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	043 Call Error.GetStreamIsClosed
	044 Move X19, X0
	045 Move X0, 0xE3C000
	046 Move X0, [X0+3872]
	047 Call 0x1C17D08
	048 Move X1, X0
	049 Move X0, X19
	050 Call 0x1C17DEC

Method: System.Byte* get_PositionPointer()

Disassembly:
	0x032EBA34 STRB W8, [X23 + 0x9F5]
	0x032EBA38 CBZ X21, 0x32EBB30
	0x032EBA3C TBNZ X20, 0x1F, 0x32EBB78
	0x032EBA40 TBNZ X19, 0x1F, 0x32EBB98
	0x032EBA44 LDR W8, [X21 + 0x18]
	0x032EBA48 SUB W8, W8, W20
	0x032EBA4C CMP W8, W19
	0x032EBA50 B.LT 0x32EBBE0
	0x032EBA54 ADRP X8, 0xE10000
	0x032EBA58 LDR X8, [X8 + 0x7D8]
	0x032EBA5C LDR X0, [X8]
	0x032EBA60 LDR W8, [X0 + 0xE0]
	0x032EBA64 CBNZ W8, 0x32EBA6C
	0x032EBA68 BL 0x1C16DFC
	0x032EBA6C ADD X0, X31, 0x8
	0x032EBA70 MOV X1, X31
	0x032EBA74 BL 0x33DD2B0
	0x032EBA78 TBZ X0, 0x0, 0x32EBAA8
	0x032EBA7C ADRP X8, 0xE09000
	0x032EBA80 LDR X8, [X8 + 0x7B8]
	0x032EBA84 LDR X19, [X31 + 0x8]
	0x032EBA88 LDR X0, [X8]
	0x032EBA8C LDR W8, [X0 + 0xE0]
	0x032EBA90 CBNZ W8, 0x32EBA98
	0x032EBA94 BL 0x1C16DFC
	0x032EBA98 MOV X0, X19
	0x032EBA9C MOV X1, X31
	0x032EBAA0 BL 0x33EE044
	0x032EBAA4 B 0x32EBB1C
	0x032EBAA8 LDR X8, [X22]
	0x032EBAAC LDR X9, [X8 + 0x388]
	0x032EBAB0 LDR X4, [X8 + 0x390]
	0x032EBAB4 MOV X0, X22
	0x032EBAB8 MOV X1, X21
	0x032EBABC MOV W2, W20
	0x032EBAC0 MOV W3, W19
	0x032EBAC4 BLR X9
	0x032EBAC8 ADRP X19, 0xE09000
	0x032EBACC LDR X19, [X19 + 0x7B8]
	0x032EBAD0 LDR X0, [X19]
	0x032EBAD4 LDR W8, [X0 + 0xE0]
	0x032EBAD8 CBNZ W8, 0x32EBAE0
	0x032EBADC BL 0x1C16DFC
	0x032EBAE0 ADRP X20, 0x10ED000
	0x032EBAE4 LDRB W8, [X20 + 0xF1D]
	0x032EBAE8 CBNZ W8, 0x32EBB00

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+40]
	004 Compare X8, 0
	005 JumpIfNotEqual {18}
	006 Move X19, X0
	007 Call UnmanagedMemoryStream.EnsureNotClosed, X0
	008 Add X0, X19, 72
	009 Move X1, X31
	010 Call Interlocked.Read, X0
	011 Move X8, [X19+64]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X8, [X19+48]
	014 Add X0, X0, X8
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return X0
	018 Move X0, 0xE09000
	019 Move X0, [X0+2880]
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X19, X0
	023 Move X0, 0xE3C000
	024 Move X0, [X0+3880]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X19
	028 Move X2, X31
	029 Call NotSupportedException..ctor, X0, X1
	030 Move X0, 0xE13000
	031 Move X0, [X0+3960]
	032 Call 0x1C17D08
	033 Call 0x1C17F10
	034 Move X19, X0
	035 Move X0, 0xE3C000
	036 Move X0, [X0+3888]
	037 Call 0x1C17D08
	038 Move X1, X0
	039 Move X0, X19
	040 Move X2, X31
	041 Call IndexOutOfRangeException..ctor, X0, X1
	042 Move X0, 0xE3C000
	043 Move X0, [X0+3896]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X19
	047 Call 0x1C17DEC

Method: System.Int32 Read(System.Byte[] buffer, System.Int32 offset, System.Int32 count)

Disassembly:
	0x032EBAEC ADRP X0, 0xE09000
	0x032EBAF0 LDR X0, [X0 + 0x7B8]
	0x032EBAF4 BL 0x1C16CF4
	0x032EBAF8 MOVZ W8, 0x1
	0x032EBAFC STRB W8, [X20 + 0xF1D]
	0x032EBB00 LDR X0, [X19]
	0x032EBB04 LDR W8, [X0 + 0xE0]
	0x032EBB08 CBNZ W8, 0x32EBB14
	0x032EBB0C BL 0x1C16DFC
	0x032EBB10 LDR X0, [X19]
	0x032EBB14 LDR X8, [X0 + 0xB8]
	0x032EBB18 LDR X0, [X8 + 0x30]
	0x032EBB1C LDP X20, X19, [X31 + 0x30]
	0x032EBB20 LDP X22, X21, [X31 + 0x20]
	0x032EBB24 LDP X30, X23, [X31 + 0x10]
	0x032EBB28 ADD X31, X31, 0x40
	0x032EBB2C RET
	0x032EBB30 ADRP X0, 0xE0D000
	0x032EBB34 LDR X0, [X0 + 0x528]
	0x032EBB38 BL 0x1C16D08
	0x032EBB3C BL 0x1C16F10
	0x032EBB40 MOV X19, X0
	0x032EBB44 ADRP X0, 0xE33000
	0x032EBB48 LDR X0, [X0 + 0xF48]
	0x032EBB4C BL 0x1C16D08
	0x032EBB50 MOV X20, X0
	0x032EBB54 ADRP X0, 0xE3B000
	0x032EBB58 LDR X0, [X0 + 0xC40]
	0x032EBB5C BL 0x1C16D08
	0x032EBB60 MOV X2, X0
	0x032EBB64 MOV X0, X19
	0x032EBB68 MOV X1, X20
	0x032EBB6C MOV X3, X31
	0x032EBB70 BL 0x3315F7C
	0x032EBB74 B 0x32EBC10
	0x032EBB78 ADRP X0, 0xE10000
	0x032EBB7C LDR X0, [X0 + 0x760]
	0x032EBB80 BL 0x1C16D08
	0x032EBB84 BL 0x1C16F10
	0x032EBB88 MOV X19, X0
	0x032EBB8C ADRP X0, 0xE37000
	0x032EBB90 LDR X0, [X0 + 0xD90]
	0x032EBB94 B 0x32EBBB4
	0x032EBB98 ADRP X0, 0xE10000
	0x032EBB9C LDR X0, [X0 + 0x760]
	0x032EBBA0 BL 0x1C16D08
	0x032EBBA4 BL 0x1C16F10
	0x032EBBA8 MOV X19, X0
	0x032EBBAC ADRP X0, 0xE30000
	0x032EBBB0 LDR X0, [X0 + 0x648]
	0x032EBBB4 BL 0x1C16D08
	0x032EBBB8 MOV X20, X0
	0x032EBBBC ADRP X0, 0xE30000
	0x032EBBC0 LDR X0, [X0 + 0x670]
	0x032EBBC4 BL 0x1C16D08
	0x032EBBC8 MOV X2, X0
	0x032EBBCC MOV X0, X19
	0x032EBBD0 MOV X1, X20
	0x032EBBD4 MOV X3, X31
	0x032EBBD8 BL 0x3311888
	0x032EBBDC B 0x32EBC10
	0x032EBBE0 ADRP X0, 0xE10000
	0x032EBBE4 LDR X0, [X0 + 0x578]
	0x032EBBE8 BL 0x1C16D08
	0x032EBBEC BL 0x1C16F10
	0x032EBBF0 MOV X19, X0
	0x032EBBF4 ADRP X0, 0xE30000
	0x032EBBF8 LDR X0, [X0 + 0x760]
	0x032EBBFC BL 0x1C16D08
	0x032EBC00 MOV X1, X0
	0x032EBC04 MOV X0, X19
	0x032EBC08 MOV X2, X31
	0x032EBC0C BL 0x3314A68
	0x032EBC10 ADRP X0, 0xE3B000
	0x032EBC14 LDR X0, [X0 + 0xF78]
	0x032EBC18 BL 0x1C16D08
	0x032EBC1C MOV X1, X0
	0x032EBC20 MOV X0, X19
	0x032EBC24 BL 0x1C16DEC
	0x032EBC28 B 0x32EBC2C
	0x032EBC2C MOV X19, X0
	0x032EBC30 CMP W1, 0x1
	0x032EBC34 B.NE 0x32EBCB8
	0x032EBC38 MOV X0, X19
	0x032EBC3C BL 0x3EB1AD0
	0x032EBC40 MOV X19, X0
	0x032EBC44 ADRP X0, 0xE08000
	0x032EBC48 LDR X0, [X0 + 0x7D0]
	0x032EBC4C BL 0x1C16D08
	0x032EBC50 LDR X8, [X19]
	0x032EBC54 LDR X1, [X8]
	0x032EBC58 BL 0x1C17270
	0x032EBC5C TBZ X0, 0x0, 0x32EBC90
	0x032EBC60 LDR X19, [X19]
	0x032EBC64 BL 0x3EB1AE0
	0x032EBC68 ADRP X0, 0xE09000
	0x032EBC6C LDR X0, [X0 + 0x7B8]
	0x032EBC70 BL 0x1C16D08

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x10F2000
	008 Move W8, [X23+2541]
	009 Move W19, W3
	010 Move W20, W2
	011 Move X22, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xE38000
	018 Move X0, [X0+3680]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+2541], W8
	022 Compare X22, 0
	023 JumpIfEqual {51}
	024 Move TEMP, X20
	025 And TEMP, TEMP, -2147483648
	026 Compare TEMP, -2147483648
	027 JumpIfEqual {68}
	028 Move TEMP, X19
	029 And TEMP, TEMP, -2147483648
	030 Compare TEMP, -2147483648
	031 JumpIfEqual {75}
	032 Move W9, [X22+24]
	033 Subtract W8, W9, W20
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, X31
	038 Call ThrowHelper.ThrowArgumentOutOfRangeException
	039 Add X8, X22, W20
	040 Move W2, W19
	041 Move X0, X21
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Add X1, X8, 32
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Call UnmanagedMemoryStream.ReadCore, X0, X1
	050 Return X0
	051 Move X0, 0xE0E000
	052 Move X0, [X0+1320]
	053 Call 0x1C17D08
	054 Call 0x1C17F10
	055 Move X19, X0
	056 Move X0, 0xE34000
	057 Move X0, [X0+3912]
	058 Call 0x1C17D08
	059 Move X20, X0
	060 Move X0, 0xE3C000
	061 Move X0, [X0+3136]
	062 Call 0x1C17D08
	063 Move X2, X0
	064 Move X0, X19
	065 Move X1, X20
	066 Move X3, X31
	067 Call ArgumentNullException..ctor, X0, X1, X2
	068 Move X0, 0xE11000
	069 Move X0, [X0+1888]
	070 Call 0x1C17D08
	071 Call 0x1C17F10
	072 Move X19, X0
	073 Move X0, 0xE38000
	074 Move X0, [X0+3472]
	075 Move X0, 0xE11000
	076 Move X0, [X0+1888]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X19, X0
	080 Move X0, 0xE31000
	081 Move X0, [X0+1608]
	082 Call 0x1C17D08
	083 Move X20, X0
	084 Move X0, 0xE31000
	085 Move X0, [X0+1648]
	086 Call 0x1C17D08
	087 Move X2, X0
	088 Move X0, X19
	089 Move X1, X20
	090 Move X3, X31
	091 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	092 Move X0, 0xE11000
	093 Move X0, [X0+1400]
	094 Call 0x1C17D08
	095 Call 0x1C17F10
	096 Move X19, X0
	097 Move X0, 0xE31000
	098 Move X0, [X0+1888]
	099 Call 0x1C17D08
	100 Move X1, X0
	101 Move X0, X19
	102 Move X2, X31
	103 Call ArgumentException..ctor, X0, X1
	104 Move X0, 0xE3C000
	105 Move X0, [X0+3904]
	106 Call 0x1C17D08
	107 Move X1, X0
	108 Move X0, X19
	109 Call 0x1C17DEC

Method: System.Int32 Read(System.Span`1<System.Byte> buffer)

Disassembly:
	0x032EBC74 LDR W8, [X0 + 0xE0]
	0x032EBC78 CBNZ W8, 0x32EBC80
	0x032EBC7C BL 0x1C16DFC
	0x032EBC80 MOV X0, X19
	0x032EBC84 MOV X1, X31
	0x032EBC88 BL 0x33EDAC4
	0x032EBC8C B 0x32EBB1C
	0x032EBC90 MOVZ W0, 0x8
	0x032EBC94 BL 0x3EB1AF0
	0x032EBC98 LDR X8, [X19]
	0x032EBC9C STR X8, [X0]
	0x032EBCA0 ADRP X1, 0xBC9000
	0x032EBCA4 ADD X1, X1, 0xE58
	0x032EBCA8 MOV X2, X31
	0x032EBCAC BL 0x3EB1B00
	0x032EBCB0 MOV X19, X0
	0x032EBCB4 BL 0x3EB1AE0
	0x032EBCB8 MOV X0, X19
	0x032EBCBC BL 0x1D2C690
	0x032EBCC0 BL 0x1990590
	0x032EBCC4 SUB X31, X31, 0x60
	0x032EBCC8 STP X30, X23, [X31 + 0x30]
	0x032EBCCC STP X22, X21, [X31 + 0x40]
	0x032EBCD0 STP X20, X19, [X31 + 0x50]
	0x032EBCD4 ADRP X23, 0x10F1000
	0x032EBCD8 STP X1, X2, [X31 + 0x20]
	0x032EBCDC STR X3, [X31 + 0x18]
	0x032EBCE0 ADRP X22, 0xE10000
	0x032EBCE4 LDRB W8, [X23 + 0x9F6]
	0x032EBCE8 LDR X22, [X22 + 0x7D8]
	0x032EBCEC MOV X20, X2
	0x032EBCF0 MOV X21, X1
	0x032EBCF4 MOV X19, X0
	0x032EBCF8 TBNZ X8, 0x0, 0x32EBD64
	0x032EBCFC ADRP X0, 0xE3B000
	0x032EBD00 LDR X0, [X0 + 0xCF0]
	0x032EBD04 BL 0x1C16CF4
	0x032EBD08 ADRP X0, 0xE3B000
	0x032EBD0C LDR X0, [X0 + 0xCF8]
	0x032EBD10 BL 0x1C16CF4
	0x032EBD14 ADRP X0, 0xE3B000
	0x032EBD18 LDR X0, [X0 + 0xD00]
	0x032EBD1C BL 0x1C16CF4
	0x032EBD20 ADRP X0, 0xE30000
	0x032EBD24 LDR X0, [X0 + 0x5B0]
	0x032EBD28 BL 0x1C16CF4
	0x032EBD2C ADRP X0, 0xE10000
	0x032EBD30 LDR X0, [X0 + 0x7D8]
	0x032EBD34 BL 0x1C16CF4
	0x032EBD38 ADRP X0, 0xE3B000
	0x032EBD3C LDR X0, [X0 + 0xD08]
	0x032EBD40 BL 0x1C16CF4
	0x032EBD44 ADRP X0, 0xE3B000
	0x032EBD48 LDR X0, [X0 + 0xD80]
	0x032EBD4C BL 0x1C16CF4
	0x032EBD50 ADRP X0, 0xE09000
	0x032EBD54 LDR X0, [X0 + 0x7B8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x10F2000
	009 Move X22, 0xE3C000
	010 Move X23, 0xE09000
	011 Move W8, [X24+2542]
	012 Move X22, [X22+3912]
	013 Move X23, [X23+1728]
	014 Move X19, X2
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xE09000
	022 Move X0, [X0+1728]
	023 Call 0x1C17CF4
	024 Move X0, 0xE3C000
	025 Move X0, [X0+3912]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+2542], W8
	029 Move X0, X21
	030 Move X1, X31
	031 Call "il2cpp_vm_object_is_inst", X0
	032 Move X8, [X23]
	033 Move X23, [X22]
	034 Move X22, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X23
	041 Move X1, X31
	042 Call Type.GetTypeFromHandle, X0
	043 Move X1, X0
	044 Move X0, X22
	045 Move X2, X31
	046 Call Type.op_Equality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {63}
	051 Move X0, X21
	052 Move X1, X20
	053 Move X2, X19
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X24, [X31+16]
	059 Move X23, [X31+24]
	060 Move X30, [X31+64]
	061 Call UnmanagedMemoryStream.ReadCore, X0, X1
	062 Return X0
	063 Move X0, X21
	064 Move X1, X20
	065 Move X2, X19
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X24, [X31+16]
	071 Move X23, [X31+24]
	072 Move X3, X31
	073 Move X30, [X31+64]
	074 Call Stream.Read, X0, X1
	075 Return X0

Method: System.Int32 ReadCore(System.Span`1<System.Byte> buffer)

Disassembly:
	0x032E6D50 MOV X0, X19
	0x032E6D54 BL 0x1C16DEC
	0x032E6D58 BL 0x1C16F20
	0x032E6D5C BL 0x1C16F28
	0x032E6D60 STP X30, X23, [X31 - 0x30]!
	0x032E6D64 STP X22, X21, [X31 + 0x10]
	0x032E6D68 STP X20, X19, [X31 + 0x20]
	0x032E6D6C ADRP X23, 0x10F6000
	0x032E6D70 LDRB W8, [X23 + 0x9BB]
	0x032E6D74 MOV W20, W3
	0x032E6D78 MOV W19, W2
	0x032E6D7C MOV X22, X1
	0x032E6D80 MOV X21, X0
	0x032E6D84 TBNZ X8, 0x0, 0x32E6D9C
	0x032E6D88 ADRP X0, 0xE3C000
	0x032E6D8C LDR X0, [X0 + 0x578]
	0x032E6D90 BL 0x1C16CF4
	0x032E6D94 MOVZ W8, 0x1
	0x032E6D98 STRB W8, [X23 + 0x9BB]
	0x032E6D9C CBZ X22, 0x32E6DF0
	0x032E6DA0 TBNZ X20, 0x1F, 0x32E6E38
	0x032E6DA4 TBNZ X19, 0x1F, 0x32E6E38
	0x032E6DA8 LDR W9, [X22 + 0x18]
	0x032E6DAC SUB W8, W9, W19
	0x032E6DB0 CMP W8, W20
	0x032E6DB4 B.LT 0x32E6EA4
	0x032E6DB8 CMP W9, W19
	0x032E6DBC B.CC 0x32E6DC8
	0x032E6DC0 CMP W8, W20
	0x032E6DC4 B.CS 0x32E6DD0
	0x032E6DC8 MOV X0, X31
	0x032E6DCC BL 0x339D6EC
	0x032E6DD0 ADD X8, X22, W19, 0x1, SXTW
	0x032E6DD4 MOV W2, W20
	0x032E6DD8 MOV X0, X21
	0x032E6DDC LDP X20, X19, [X31 + 0x20]
	0x032E6DE0 LDP X22, X21, [X31 + 0x10]
	0x032E6DE4 ADD X1, X8, 0x20
	0x032E6DE8 LDP X30, X23, [X31], #0x30
	0x032E6DEC B 0x32E6EEC
	0x032E6DF0 ADRP X0, 0xE12000
	0x032E6DF4 LDR X0, [X0 + 0x528]
	0x032E6DF8 BL 0x1C16D08
	0x032E6DFC BL 0x1C16F10
	0x032E6E00 MOV X19, X0
	0x032E6E04 ADRP X0, 0xE38000
	0x032E6E08 LDR X0, [X0 + 0xF48]
	0x032E6E0C BL 0x1C16D08
	0x032E6E10 MOV X20, X0
	0x032E6E14 ADRP X0, 0xE40000
	0x032E6E18 LDR X0, [X0 + 0xC40]
	0x032E6E1C BL 0x1C16D08
	0x032E6E20 MOV X2, X0
	0x032E6E24 MOV X0, X19
	0x032E6E28 MOV X1, X20
	0x032E6E2C MOV X3, X31
	0x032E6E30 BL 0x3315F7C
	0x032E6E34 B 0x32E6ED4
	0x032E6E38 ADRP X8, 0xE35000
	0x032E6E3C ADRP X9, 0xE18000
	0x032E6E40 LDR X8, [X8 + 0x648]
	0x032E6E44 LDR X9, [X9 + 0x130]
	0x032E6E48 CMP W19, 0x0
	0x032E6E4C CSEL X0, X9, X8, LT
	0x032E6E50 BL 0x1C16D08
	0x032E6E54 MOV X19, X0
	0x032E6E58 ADRP X0, 0xE15000
	0x032E6E5C LDR X0, [X0 + 0x760]
	0x032E6E60 BL 0x1C16D08
	0x032E6E64 BL 0x1C16F10
	0x032E6E68 MOV X20, X0
	0x032E6E6C ADRP X0, 0xE35000
	0x032E6E70 LDR X0, [X0 + 0x670]
	0x032E6E74 BL 0x1C16D08
	0x032E6E78 MOV X2, X0
	0x032E6E7C MOV X0, X20
	0x032E6E80 MOV X1, X19
	0x032E6E84 MOV X3, X31
	0x032E6E88 BL 0x3311888
	0x032E6E8C ADRP X0, 0xE40000
	0x032E6E90 LDR X0, [X0 + 0xE38]
	0x032E6E94 BL 0x1C16D08
	0x032E6E98 MOV X1, X0
	0x032E6E9C MOV X0, X20
	0x032E6EA0 BL 0x1C16DEC
	0x032E6EA4 ADRP X0, 0xE15000
	0x032E6EA8 LDR X0, [X0 + 0x578]
	0x032E6EAC BL 0x1C16D08
	0x032E6EB0 BL 0x1C16F10
	0x032E6EB4 MOV X19, X0
	0x032E6EB8 ADRP X0, 0xE35000
	0x032E6EBC LDR X0, [X0 + 0x760]
	0x032E6EC0 BL 0x1C16D08
	0x032E6EC4 MOV X1, X0
	0x032E6EC8 MOV X0, X19
	0x032E6ECC MOV X2, X31
	0x032E6ED0 BL 0x3314A68
	0x032E6ED4 ADRP X0, 0xE40000
	0x032E6ED8 LDR X0, [X0 + 0xE38]
	0x032E6EDC BL 0x1C16D08
	0x032E6EE0 MOV X1, X0
	0x032E6EE4 MOV X0, X19
	0x032E6EE8 BL 0x1C16DEC
	0x032E6EEC SUB X31, X31, 0x80
	0x032E6EF0 STP X29, X30, [X31 + 0x20]
	0x032E6EF4 STP X28, X27, [X31 + 0x30]
	0x032E6EF8 STP X26, X25, [X31 + 0x40]
	0x032E6EFC STP X24, X23, [X31 + 0x50]
	0x032E6F00 STP X22, X21, [X31 + 0x60]
	0x032E6F04 STP X20, X19, [X31 + 0x70]
	0x032E6F08 ADRP X22, 0x10F6000
	0x032E6F0C LDRB W8, [X22 + 0x9BC]
	0x032E6F10 MOV X19, X2
	0x032E6F14 MOV X20, X1
	0x032E6F18 MOV X21, X0
	0x032E6F1C TBNZ X8, 0x0, 0x32E6F58
	0x032E6F20 ADRP X0, 0xE3C000
	0x032E6F24 LDR X0, [X0 + 0x918]
	0x032E6F28 BL 0x1C16CF4
	0x032E6F2C ADRP X0, 0xE3C000
	0x032E6F30 LDR X0, [X0 + 0x1A8]
	0x032E6F34 BL 0x1C16CF4
	0x032E6F38 ADRP X0, 0xE3C000
	0x032E6F3C LDR X0, [X0 + 0x578]
	0x032E6F40 BL 0x1C16CF4
	0x032E6F44 ADRP X0, 0xE3C000
	0x032E6F48 LDR X0, [X0 + 0x588]
	0x032E6F4C BL 0x1C16CF4
	0x032E6F50 MOVZ W8, 0x1
	0x032E6F54 STRB W8, [X22 + 0x9BC]
	0x032E6F58 STP X31, X31, [X31 + 0x8]
	0x032E6F5C LDR X8, [X21 + 0x18]
	0x032E6F60 CBZ X8, 0x32E70B8
	0x032E6F64 ADRP X23, 0xE3C000
	0x032E6F68 ADRP X24, 0xE3C000
	0x032E6F6C LDR X23, [X23 + 0x1A8]
	0x032E6F70 LDR X24, [X24 + 0x918]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x10F7000
	011 Move X22, 0xE0E000
	012 Move W8, [X20+2543]
	013 Move X22, [X22+1448]
	014 Move X23, X2
	015 Move X24, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xE0E000
	022 Move X0, [X0+1448]
	023 Call 0x1C17CF4
	024 Move X0, 0xE3C000
	025 Move X0, [X0+2096]
	026 Call 0x1C17CF4
	027 Move X0, 0xE3D000
	028 Move X0, [X0+2344]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+2543], W8
	032 Move X0, X19
	033 Move [X31+8], X31
	034 Call UnmanagedMemoryStream.EnsureNotClosed, X0
	035 Move X0, X19
	036 Call UnmanagedMemoryStream.EnsureReadable, X0
	037 Add X20, X19, 72
	038 Move X0, X20
	039 Move X1, X31
	040 Call Interlocked.Read, X0
	041 Move X21, X0
	042 Add X0, X19, 56
	043 Move X1, X31
	044 Call Interlocked.Read, X0
	045 Move X8, [X22]
	046 Move X22, X0
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Subtract X0, X22, X21
	053 Move X1, W23
	054 Move X2, X31
	055 Call Math.Min, X0, X1
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X22, X0
	058 Move TEMP, X22
	059 And TEMP, TEMP, -2147483648
	060 Compare TEMP, -2147483648
	061 JumpIfEqual {114}
	062 Move X8, 0xE3C000
	063 Move X8, [X8+2096]
	064 Move X0, X24
	065 Move X1, X23
	066 Move X2, [X8]
	067 Call 0x2219CF4, X0
	068 Move X8, [X19+40]
	069 Move X23, X0
	070 Compare X8, 0
	071 JumpIfEqual {104}
	072 Move X0, X31
	073 Move [X31+8], X31
	074 Call RuntimeHelpers.PrepareConstrainedRegions
	075 Move X0, [X19+40]
	076 Compare X0, 0
	077 JumpIfEqual {126}
	078 Add X1, X31, 8
	079 Move X2, X31
	080 Call SafeBuffer.AcquirePointer, X0, X1
	081 Move X8, [X31+8]
	082 Move X9, [X19+80]
	083 Add X8, X21, X8
	084 Add X1, X8, X9
	085 Move X0, X23
	086 Move W2, W22
	087 Move X3, X31
	088 Call Buffer.Memcpy, X0, X1, X2
	089 Move X24, X31
	090 Move W25, 5
	091 Move X8, [X31+8]
	092 Compare X8, 0
	093 JumpIfEqual {99}
	094 Move X0, [X19+40]
	095 Compare X0, 0
	096 JumpIfEqual {129}
	097 Move X1, X31
	098 Call SafeBuffer.ReleasePointer, X0
	099 Compare X24, 0
	100 JumpIfNotEqual {127}
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Compare W25, 0
	103 JumpIfNotEqual {115}
	104 Move X8, [X19+48]
	105 Move X0, X23
	106 Move W2, W22
	107 Move X3, X31
	108 Add X1, X21, X8
	109 Call Buffer.Memcpy, X0, X1, X2
	110 Add X1, X22, X21
	111 Move X0, X20
	112 Move X2, X31
	113 Call Interlocked.Exchange, X0, X1
	114 Move W22, W31
	115 Move W0, W22
	116 Move X20, [X31+64]
	117 Move X19, [X31+72]
	118 Move X22, [X31+48]
	119 Move X21, [X31+56]
	120 Move X24, [X31+32]
	121 Move X23, [X31+40]
	122 Move X30, [X31+16]
	123 Move X25, [X31+24]
	124 Add X31, X31, 80
	125 Return X0
	126 Call 0x1C17F20
	127 Move X0, X24
	128 Call 0x1C17F18
	129 Call 0x1C17F20
	130 Move X25, X0
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X0, X25
	133 Call 0x3EB2AD0
	134 Move X24, [X0]
	135 Call 0x3EB2AE0
	136 Move W25, W31
	137 Move X24, X31
	138 Move X25, X0
	139 Move X8, [X31+8]
	140 Compare X8, 0
	141 JumpIfEqual {148}
	142 Move X0, [X19+40]
	143 Compare X0, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17F20
	146 Move X1, X31
	147 Call SafeBuffer.ReleasePointer, X0
	148 Compare X24, 0
	149 JumpIfNotEqual {152}
	150 Move X0, X25
	151 Call 0x1D2D690
	152 Move X0, X24
	153 Call 0x1C17F18
	154 Call 0x1991590

Method: System.Threading.Tasks.Task`1<System.Int32> ReadAsync(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x032EBD58 BL 0x1C16CF4
	0x032EBD5C MOVZ W8, 0x1
	0x032EBD60 STRB W8, [X23 + 0x9F6]
	0x032EBD64 LDR X0, [X22]
	0x032EBD68 STP X31, X31, [X31 + 0x8]
	0x032EBD6C LDR W8, [X0 + 0xE0]
	0x032EBD70 CBNZ W8, 0x32EBD78
	0x032EBD74 BL 0x1C16DFC
	0x032EBD78 ADD X0, X31, 0x18
	0x032EBD7C MOV X1, X31
	0x032EBD80 BL 0x33DD2B0
	0x032EBD84 TBZ X0, 0x0, 0x32EBDCC
	0x032EBD88 ADRP X8, 0xE09000
	0x032EBD8C LDR X8, [X8 + 0x7B8]
	0x032EBD90 LDR X19, [X31 + 0x18]
	0x032EBD94 LDR X0, [X8]
	0x032EBD98 LDR W8, [X0 + 0xE0]
	0x032EBD9C CBNZ W8, 0x32EBDA4
	0x032EBDA0 BL 0x1C16DFC
	0x032EBDA4 MOV X0, X19
	0x032EBDA8 MOV X1, X31
	0x032EBDAC BL 0x33EE044
	0x032EBDB0 MOV X19, X0
	0x032EBDB4 CBNZ X0, 0x32EBDC4
	0x032EBDB8 MOVZ W0, 0x26
	0x032EBDBC MOV X1, X31
	0x032EBDC0 BL 0x338F3E0
	0x032EBDC4 MOVZ W1, 0x10000
	0x032EBDC8 B 0x32EBE64
	0x032EBDCC ADRP X8, 0xE3B000
	0x032EBDD0 LDR X8, [X8 + 0xD08]
	0x032EBDD4 LDR X3, [X8]
	0x032EBDD8 ADD X2, X31, 0x8
	0x032EBDDC MOV X0, X21
	0x032EBDE0 MOV X1, X20
	0x032EBDE4 BL 0x2218D10
	0x032EBDE8 TBZ X0, 0x0, 0x32EBE24
	0x032EBDEC ADRP X8, 0xE30000
	0x032EBDF0 LDR X8, [X8 + 0x5B0]
	0x032EBDF4 LDR X0, [X8]
	0x032EBDF8 LDR W8, [X0 + 0xE0]
	0x032EBDFC CBNZ W8, 0x32EBE04
	0x032EBE00 BL 0x1C16DFC
	0x032EBE04 LDR X8, [X19]
	0x032EBE08 LDR X1, [X31 + 0x8]
	0x032EBE0C LDP W2, W3, [X31 + 0x10]
	0x032EBE10 LDR X9, [X8 + 0x388]
	0x032EBE14 LDR X4, [X8 + 0x390]
	0x032EBE18 MOV X0, X19
	0x032EBE1C BLR X9
	0x032EBE20 B 0x32EBE5C
	0x032EBE24 ADRP X8, 0xE3B000
	0x032EBE28 LDR X8, [X8 + 0xD80]
	0x032EBE2C LDR X1, [X8]
	0x032EBE30 ADD X0, X31, 0x20
	0x032EBE34 BL 0x25D7918
	0x032EBE38 LDR X8, [X19]
	0x032EBE3C MOV X2, X0
	0x032EBE40 MOV X4, X1
	0x032EBE44 LDR X9, [X8 + 0x398]
	0x032EBE48 LDR X3, [X8 + 0x3A0]
	0x032EBE4C MOV X0, X19
	0x032EBE50 MOV X1, X2
	0x032EBE54 MOV X2, X4
	0x032EBE58 BLR X9
	0x032EBE5C MOV X1, X31
	0x032EBE60 MOV X19, X31
	0x032EBE64 MOV X0, X19
	0x032EBE68 LDP X20, X19, [X31 + 0x50]
	0x032EBE6C LDP X22, X21, [X31 + 0x40]
	0x032EBE70 LDP X30, X23, [X31 + 0x30]
	0x032EBE74 ADD X31, X31, 0x60
	0x032EBE78 RET
	0x032EBE7C B 0x32EBE8C
	0x032EBE80 B 0x32EBE8C
	0x032EBE84 B 0x32EBE8C
	0x032EBE88 B 0x32EBE8C
	0x032EBE8C MOV X19, X0
	0x032EBE90 CMP W1, 0x1
	0x032EBE94 B.NE 0x32EBF18
	0x032EBE98 MOV X0, X19
	0x032EBE9C BL 0x3EB1AD0
	0x032EBEA0 MOV X19, X0
	0x032EBEA4 ADRP X0, 0xE08000
	0x032EBEA8 LDR X0, [X0 + 0x7D0]
	0x032EBEAC BL 0x1C16D08
	0x032EBEB0 LDR X8, [X19]
	0x032EBEB4 LDR X1, [X8]
	0x032EBEB8 BL 0x1C17270
	0x032EBEBC TBZ X0, 0x0, 0x32EBEF0
	0x032EBEC0 LDR X19, [X19]
	0x032EBEC4 BL 0x3EB1AE0
	0x032EBEC8 ADRP X0, 0xE09000
	0x032EBECC LDR X0, [X0 + 0x7B8]
	0x032EBED0 BL 0x1C16D08
	0x032EBED4 LDR W8, [X0 + 0xE0]
	0x032EBED8 CBNZ W8, 0x32EBEE0
	0x032EBEDC BL 0x1C16DFC
	0x032EBEE0 MOV X0, X19
	0x032EBEE4 MOV X1, X31
	0x032EBEE8 BL 0x33EDAC4
	0x032EBEEC B 0x32EBDB0
	0x032EBEF0 MOVZ W0, 0x8
	0x032EBEF4 BL 0x3EB1AF0
	0x032EBEF8 LDR X8, [X19]
	0x032EBEFC STR X8, [X0]
	0x032EBF00 ADRP X1, 0xBC9000
	0x032EBF04 ADD X1, X1, 0xE58
	0x032EBF08 MOV X2, X31
	0x032EBF0C BL 0x3EB1B00
	0x032EBF10 MOV X19, X0
	0x032EBF14 BL 0x3EB1AE0
	0x032EBF18 MOV X0, X19
	0x032EBF1C BL 0x1D2C690
	0x032EBF20 BL 0x1990590
	0x032EBF24 SUB X31, X31, 0x50
	0x032EBF28 STP X30, X25, [X31 + 0x10]
	0x032EBF2C STP X24, X23, [X31 + 0x20]
	0x032EBF30 STP X22, X21, [X31 + 0x30]
	0x032EBF34 STP X20, X19, [X31 + 0x40]
	0x032EBF38 MOV W20, W1
	0x032EBF3C MOV X19, X0
	0x032EBF40 STR X31, [X31 + 0x8]
	0x032EBF44 BL 0x32EA6DC
	0x032EBF48 MOV X0, X19
	0x032EBF4C BL 0x32EA74C
	0x032EBF50 ADD X21, X19, 0x48
	0x032EBF54 MOV X0, X21
	0x032EBF58 MOV X1, X31
	0x032EBF5C BL 0x33EB198
	0x032EBF60 ADD X24, X19, 0x38
	0x032EBF64 MOV X22, X0
	0x032EBF68 MOV X0, X24
	0x032EBF6C MOV X1, X31
	0x032EBF70 BL 0x33EB198
	0x032EBF74 CMP X22, X0
	0x032EBF78 ADD X23, X22, 0x1
	0x032EBF7C B.LT 0x32EBFC0
	0x032EBF80 TBNZ X23, 0x0, 0x32EC064
	0x032EBF84 LDR X8, [X19 + 0x40]
	0x032EBF88 CMP X23, X8
	0x032EBF8C B.GT 0x32EC094
	0x032EBF90 LDR X8, [X19 + 0x28]
	0x032EBF94 CBNZ X8, 0x32EBFC0
	0x032EBF98 SUBS X1, X22, X0
	0x032EBF9C B.LE 0x32EBFB0
	0x032EBFA0 LDR X8, [X19 + 0x30]
	0x032EBFA4 MOV X2, X31
	0x032EBFA8 ADD X0, X0, X8
	0x032EBFAC BL 0x33A8870
	0x032EBFB0 MOV X0, X24
	0x032EBFB4 MOV X1, X23
	0x032EBFB8 MOV X2, X31
	0x032EBFBC BL 0x33EB18C
	0x032EBFC0 LDR X8, [X19 + 0x28]
	0x032EBFC4 CBZ X8, 0x32EC028
	0x032EBFC8 MOV X0, X31
	0x032EBFCC STR X31, [X31 + 0x8]
	0x032EBFD0 BL 0x32C5C58
	0x032EBFD4 LDR X0, [X19 + 0x28]
	0x032EBFD8 CBZ X0, 0x32EC058
	0x032EBFDC ADD X1, X31, 0x8
	0x032EBFE0 MOV X2, X31
	0x032EBFE4 BL 0x32BF80C
	0x032EBFE8 LDR X8, [X31 + 0x8]
	0x032EBFEC LDR X9, [X19 + 0x50]
	0x032EBFF0 MOV X24, X31
	0x032EBFF4 MOVZ W25, 0xB
	0x032EBFF8 ADD X8, X22, X8
	0x032EBFFC STRB W20, [X8, X9, LSL]
	0x032EC000 LDR X8, [X31 + 0x8]
	0x032EC004 CBZ X8, 0x32EC018
	0x032EC008 LDR X0, [X19 + 0x28]
	0x032EC00C CBZ X0, 0x32EC0DC
	0x032EC010 MOV X1, X31
	0x032EC014 BL 0x32BFA0C
	0x032EC018 CBNZ X24, 0x32EC05C
	0x032EC01C CMP W25, 0xB
	0x032EC020 B.EQ 0x32EC030
	0x032EC024 CBNZ W25, 0x32EC040
	0x032EC028 LDR X8, [X19 + 0x30]
	0x032EC02C STRB W20, [X22, X8, LSL]
	0x032EC030 MOV X0, X21
	0x032EC034 MOV X1, X23
	0x032EC038 MOV X2, X31
	0x032EC03C BL 0x33EB18C
	0x032EC040 LDP X20, X19, [X31 + 0x40]
	0x032EC044 LDP X22, X21, [X31 + 0x30]
	0x032EC048 LDP X24, X23, [X31 + 0x20]
	0x032EC04C LDP X30, X25, [X31 + 0x10]
	0x032EC050 ADD X31, X31, 0x50
	0x032EC054 RET
	0x032EC058 BL 0x1C16F20
	0x032EC05C MOV X0, X24
	0x032EC060 BL 0x1C16F18
	0x032EC064 ADRP X0, 0xE35000
	0x032EC068 LDR X0, [X0 + 0x7A8]
	0x032EC06C BL 0x1C16D08
	0x032EC070 BL 0x1C16F10
	0x032EC074 MOV X19, X0
	0x032EC078 ADRP X0, 0xE3A000
	0x032EC07C LDR X0, [X0 + 0xC68]
	0x032EC080 BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x10F2000
	009 Move W8, [X23+2544]
	010 Move W20, W3
	011 Move W21, W2
	012 Move X22, X1
	013 Move X19, X0
	014 Move [X31+8], X4
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0xE11000
	020 Move X0, [X0+2008]
	021 Call 0x1C17CF4
	022 Move X0, 0xE3C000
	023 Move X0, [X0+3264]
	024 Call 0x1C17CF4
	025 Move X0, 0xE3C000
	026 Move X0, [X0+3272]
	027 Call 0x1C17CF4
	028 Move X0, 0xE3C000
	029 Move X0, [X0+3280]
	030 Call 0x1C17CF4
	031 Move X0, 0xE0A000
	032 Move X0, [X0+1976]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X23+2544], W8
	036 Compare X22, 0
	037 JumpIfEqual {118}
	038 Move TEMP, X21
	039 And TEMP, TEMP, -2147483648
	040 Compare TEMP, -2147483648
	041 JumpIfEqual {135}
	042 Move TEMP, X20
	043 And TEMP, TEMP, -2147483648
	044 Compare TEMP, -2147483648
	045 JumpIfEqual {142}
	046 Move W8, [X22+24]
	047 Subtract W8, W8, W21
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X8, 0xE11000
	050 Move X8, [X8+2008]
	051 Move X0, [X8]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Add X0, X31, 8
	057 Move X1, X31
	058 Call CancellationToken.get_IsCancellationRequested, X0
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {77}
	063 Move X8, 0xE0A000
	064 Move X8, [X8+1976]
	065 Move X19, [X31+8]
	066 Move X0, [X8]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X8, 0xE3C000
	072 Move X8, [X8+3272]
	073 Move X0, X19
	074 Move X1, [X8]
	075 Call 0x229A598, X0
	076 Move X21, X0
	077 Move X8, [X19]
	078 Move X9, [X8+856]
	079 Move X4, [X8+864]
	080 Move X0, X19
	081 Move X1, X22
	082 Move W2, W21
	083 Move W3, W20
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move X21, [X19+96]
	086 Move W20, W0
	087 Compare X21, 0
	088 JumpIfEqual {95}
	089 Move X8, 0xE3C000
	090 Move X8, [X8+3264]
	091 Move X1, [X8]
	092 Move X0, X21
	093 Call Task`1<Int32>.get_Result, X0
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X8, 0xE0A000
	096 Move X8, [X8+1976]
	097 Move X0, [X8]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X8, 0xE3C000
	103 Move X8, [X8+3280]
	104 Move X1, [X8]
	105 Move W0, W20
	106 Call Task.FromResult, X0
	107 Move X21, X0
	108 Move [X19+96], X0
	109 Move X0, X21
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X30, [X31+16]
	115 Move X23, [X31+24]
	116 Add X31, X31, 64
	117 Return X0
	118 Move X0, 0xE0E000
	119 Move X0, [X0+1320]
	120 Call 0x1C17D08
	121 Call 0x1C17F10
	122 Move X19, X0
	123 Move X0, 0xE34000
	124 Move X0, [X0+3912]
	125 Call 0x1C17D08
	126 Move X20, X0
	127 Move X0, 0xE3C000
	128 Move X0, [X0+3136]
	129 Call 0x1C17D08
	130 Move X2, X0
	131 Move X0, X19
	132 Move X1, X20
	133 Move X3, X31
	134 Call ArgumentNullException..ctor, X0, X1, X2
	135 Move X0, 0xE11000
	136 Move X0, [X0+1888]
	137 Call 0x1C17D08
	138 Call 0x1C17F10
	139 Move X19, X0
	140 Move X0, 0xE38000
	141 Move X0, [X0+3472]
	142 Move X0, 0xE11000
	143 Move X0, [X0+1888]
	144 Call 0x1C17D08
	145 Call 0x1C17F10
	146 Move X19, X0
	147 Move X0, 0xE31000
	148 Move X0, [X0+1608]
	149 Call 0x1C17D08
	150 Move X20, X0
	151 Move X0, 0xE31000
	152 Move X0, [X0+1648]
	153 Call 0x1C17D08
	154 Move X2, X0
	155 Move X0, X19
	156 Move X1, X20
	157 Move X3, X31
	158 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	159 Move X0, 0xE11000
	160 Move X0, [X0+1400]
	161 Call 0x1C17D08
	162 Call 0x1C17F10
	163 Move X19, X0
	164 Move X0, 0xE31000
	165 Move X0, [X0+1888]
	166 Call 0x1C17D08
	167 Move X1, X0
	168 Move X0, X19
	169 Move X2, X31
	170 Call ArgumentException..ctor, X0, X1
	171 Move X0, 0xE3C000
	172 Move X0, [X0+3920]
	173 Call 0x1C17D08
	174 Move X1, X0
	175 Move X0, X19
	176 Call 0x1C17DEC
	177 Move X19, X0
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X0, X19
	180 Call 0x3EB2AD0
	181 Move X19, X0
	182 Move X0, 0xE09000
	183 Move X0, [X0+2000]
	184 Call 0x1C17D08
	185 Move X8, [X19]
	186 Move X1, [X8]
	187 Call 0x1C18270
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfNotEqual {207}
	192 Move X19, [X19]
	193 Call 0x3EB2AE0
	194 Move X0, 0xE09000
	195 Move X0, [X0+1976]
	196 Call 0x1C17D08
	197 Move W8, [X0+224]
	198 Compare W8, 0
	199 JumpIfNotEqual {201}
	200 Call 0x1C17DFC
	201 Move X0, 0xE3B000
	202 Move X0, [X0+3304]
	203 Call 0x1C17D08
	204 Move X1, X0
	205 Move X0, X19
	206 Call Task.FromException, X0
	207 Move W0, 8
	208 Call 0x3EB2AF0
	209 Move X8, [X19]
	210 Move [X0], X8
	211 Move X1, 0xBC9000
	212 Add X1, X1, 3672
	213 Move X2, X31
	214 Call 0x3EB2B00
	215 Move X19, X0
	216 Call 0x3EB2AE0
	217 Move X0, X19
	218 Call 0x1D2D690
	219 Call 0x1991590

Method: System.Threading.Tasks.ValueTask`1<System.Int32> ReadAsync(System.Memory`1<System.Byte> buffer, System.Threading.CancellationToken cancellationToken = null)

Disassembly:
	0x032EC084 MOV X1, X0
	0x032EC088 MOV X0, X19
	0x032EC08C BL 0x32E16BC
	0x032EC090 B 0x32EC0C4
	0x032EC094 ADRP X0, 0xE07000
	0x032EC098 LDR X0, [X0 + 0xB40]
	0x032EC09C BL 0x1C16D08
	0x032EC0A0 BL 0x1C16F10
	0x032EC0A4 MOV X19, X0
	0x032EC0A8 ADRP X0, 0xE3A000
	0x032EC0AC LDR X0, [X0 + 0xDD8]
	0x032EC0B0 BL 0x1C16D08
	0x032EC0B4 MOV X1, X0
	0x032EC0B8 MOV X0, X19
	0x032EC0BC MOV X2, X31
	0x032EC0C0 BL 0x3379A44
	0x032EC0C4 ADRP X0, 0xE3A000
	0x032EC0C8 LDR X0, [X0 + 0xF80]
	0x032EC0CC BL 0x1C16D08
	0x032EC0D0 MOV X1, X0
	0x032EC0D4 MOV X0, X19
	0x032EC0D8 BL 0x1C16DEC
	0x032EC0DC BL 0x1C16F20
	0x032EC0E0 CMP W1, 0x1
	0x032EC0E4 MOV X25, X0
	0x032EC0E8 B.NE 0x32EC104
	0x032EC0EC MOV X0, X25
	0x032EC0F0 BL 0x3EB1AD0
	0x032EC0F4 LDR X24, [X0]
	0x032EC0F8 BL 0x3EB1AE0
	0x032EC0FC MOV W25, W31
	0x032EC100 B 0x32EC000
	0x032EC104 MOV X24, X31
	0x032EC108 B 0x32EC110
	0x032EC10C MOV X25, X0
	0x032EC110 LDR X8, [X31 + 0x8]
	0x032EC114 CBZ X8, 0x32EC12C
	0x032EC118 LDR X0, [X19 + 0x28]
	0x032EC11C CBNZ X0, 0x32EC124
	0x032EC120 BL 0x1C16F20
	0x032EC124 MOV X1, X31
	0x032EC128 BL 0x32BFA0C
	0x032EC12C CBNZ X24, 0x32EC138
	0x032EC130 MOV X0, X25
	0x032EC134 BL 0x1D2C690
	0x032EC138 MOV X0, X24
	0x032EC13C BL 0x1C16F18
	0x032EC140 BL 0x1990590
	0x032EC144 STP X30, X21, [X31 - 0x20]!
	0x032EC148 STP X20, X19, [X31 + 0x10]
	0x032EC14C ADRP X20, 0x10F0000
	0x032EC150 ADRP X21, 0xE3A000
	0x032EC154 LDRB W8, [X20 + 0x9F7]
	0x032EC158 LDR X21, [X21 + 0xF88]
	0x032EC15C MOV X19, X0
	0x032EC160 TBNZ X8, 0x0, 0x32EC178
	0x032EC164 ADRP X0, 0xE3A000
	0x032EC168 LDR X0, [X0 + 0xF88]
	0x032EC16C BL 0x1C16CF4
	0x032EC170 MOVZ W8, 0x1
	0x032EC174 STRB W8, [X20 + 0x9F7]
	0x032EC178 LDR X1, [X21]
	0x032EC17C MOV X0, X19
	0x032EC180 MOV X2, X31
	0x032EC184 BL 0x338C8D8
	0x032EC188 MOVZ W8, 0x3
	0x032EC18C MOVK W8, 0x80070000
	0x032EC190 STR W8, [X19 + 0x60]
	0x032EC194 LDP X20, X19, [X31 + 0x10]
	0x032EC198 LDP X30, X21, [X31], #0x20
	0x032EC19C RET
	0x032EC1A0 STP X30, X19, [X31 - 0x10]!
	0x032EC1A4 MOV X2, X31
	0x032EC1A8 MOV X19, X0
	0x032EC1AC BL 0x338C8D8
	0x032EC1B0 MOVZ W8, 0x3
	0x032EC1B4 MOVK W8, 0x80070000
	0x032EC1B8 STR W8, [X19 + 0x60]
	0x032EC1BC LDP X30, X19, [X31], #0x10
	0x032EC1C0 RET
	0x032EC1C4 MOV X4, X31
	0x032EC1C8 B 0x338CA74
	0x032EC1CC STR X30, [X31 - 0x20]!
	0x032EC1D0 STP X20, X19, [X31 + 0x10]
	0x032EC1D4 ADRP X20, 0x10F0000
	0x032EC1D8 LDRB W8, [X20 + 0x9F8]
	0x032EC1DC MOV X19, X0
	0x032EC1E0 TBNZ X8, 0x0, 0x32EC204
	0x032EC1E4 ADRP X0, 0xE3A000
	0x032EC1E8 LDR X0, [X0 + 0xF90]
	0x032EC1EC BL 0x1C16CF4
	0x032EC1F0 ADRP X0, 0xE2E000
	0x032EC1F4 LDR X0, [X0 + 0x1D0]
	0x032EC1F8 BL 0x1C16CF4
	0x032EC1FC MOVZ W8, 0x1
	0x032EC200 STRB W8, [X20 + 0x9F8]
	0x032EC204 CBZ X19, 0x32EC284
	0x032EC208 LDR W8, [X19 + 0x10]
	0x032EC20C CBZ W8, 0x32EC2B8
	0x032EC210 ADRP X8, 0xE2E000
	0x032EC214 LDR X8, [X8 + 0x1D0]
	0x032EC218 ADRP X20, 0xE3A000
	0x032EC21C LDR X0, [X8]
	0x032EC220 LDR W8, [X0 + 0xE0]
	0x032EC224 LDR X20, [X20 + 0xF90]
	0x032EC228 CBNZ W8, 0x32EC230
	0x032EC22C BL 0x1C16DFC
	0x032EC230 MOV X0, X19
	0x032EC234 MOV X1, X31
	0x032EC238 BL 0x32EE2E0
	0x032EC23C MOV X1, X31
	0x032EC240 MOV X19, X0
	0x032EC244 BL 0x32EF1D0
	0x032EC248 LDR X0, [X20]
	0x032EC24C BL 0x1C16F10
	0x032EC250 MOV X1, X31
	0x032EC254 MOV X20, X0
	0x032EC258 BL 0x32EE138
	0x032EC25C MOV X0, X20
	0x032EC260 MOV X1, X19
	0x032EC264 MOV X2, X31
	0x032EC268 MOV X3, X31
	0x032EC26C MOV W4, W31
	0x032EC270 BL 0x32EC980
	0x032EC274 MOV X0, X20
	0x032EC278 LDP X20, X19, [X31 + 0x10]
	0x032EC27C LDR X30, [X31], #0x20
	0x032EC280 RET
	0x032EC284 ADRP X0, 0xE0C000
	0x032EC288 LDR X0, [X0 + 0x528]
	0x032EC28C BL 0x1C16D08
	0x032EC290 BL 0x1C16F10
	0x032EC294 MOV X19, X0
	0x032EC298 ADRP X0, 0xE12000
	0x032EC29C LDR X0, [X0 + 0x120]
	0x032EC2A0 BL 0x1C16D08
	0x032EC2A4 MOV X1, X0
	0x032EC2A8 MOV X0, X19
	0x032EC2AC MOV X2, X31
	0x032EC2B0 BL 0x330E100
	0x032EC2B4 B 0x32EC2FC
	0x032EC2B8 ADRP X0, 0xE0F000
	0x032EC2BC LDR X0, [X0 + 0x578]
	0x032EC2C0 BL 0x1C16D08
	0x032EC2C4 BL 0x1C16F10
	0x032EC2C8 MOV X19, X0
	0x032EC2CC ADRP X0, 0xE3A000
	0x032EC2D0 LDR X0, [X0 + 0xF98]
	0x032EC2D4 BL 0x1C16D08
	0x032EC2D8 MOV X20, X0
	0x032EC2DC ADRP X0, 0xE12000
	0x032EC2E0 LDR X0, [X0 + 0x120]
	0x032EC2E4 BL 0x1C16D08
	0x032EC2E8 MOV X2, X0
	0x032EC2EC MOV X0, X19
	0x032EC2F0 MOV X1, X20
	0x032EC2F4 MOV X3, X31
	0x032EC2F8 BL 0x330E16C
	0x032EC2FC ADRP X0, 0xE3A000
	0x032EC300 LDR X0, [X0 + 0xFA0]
	0x032EC304 BL 0x1C16D08
	0x032EC308 MOV X1, X0
	0x032EC30C MOV X0, X19
	0x032EC310 BL 0x1C16DEC
	0x032EC314 STP X30, X23, [X31 - 0x30]!
	0x032EC318 STP X22, X21, [X31 + 0x10]
	0x032EC31C STP X20, X19, [X31 + 0x20]
	0x032EC320 MOV X22, X1
	0x032EC324 MOV X1, X31
	0x032EC328 MOV W19, W4
	0x032EC32C MOV X20, X3
	0x032EC330 MOV X21, X2
	0x032EC334 MOV X23, X0
	0x032EC338 BL 0x32EE138
	0x032EC33C AND W4, W19, 0x1
	0x032EC340 MOV X1, X22
	0x032EC344 MOV X2, X21
	0x032EC348 MOV X3, X20
	0x032EC34C LDP X20, X19, [X31 + 0x20]
	0x032EC350 LDP X22, X21, [X31 + 0x10]
	0x032EC354 MOV X0, X23
	0x032EC358 LDP X30, X23, [X31], #0x30
	0x032EC35C B 0x32EC980
	0x032EC360 STR X30, [X31 - 0x20]!

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X23, 0x10F1000
	009 Move [X31+32], X1
	010 Move [X31+40], X2
	011 Move [X31+24], X3
	012 Move X22, 0xE10000
	013 Move W8, [X23+2545]
	014 Move X22, [X22+2008]
	015 Move X20, X2
	016 Move X21, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {60}
	022 Move X0, 0xE3B000
	023 Move X0, [X0+3312]
	024 Call 0x1C17CF4
	025 Move X0, 0xE3B000
	026 Move X0, [X0+3320]
	027 Call 0x1C17CF4
	028 Move X0, 0xE3B000
	029 Move X0, [X0+3328]
	030 Call 0x1C17CF4
	031 Move X0, 0xE30000
	032 Move X0, [X0+1456]
	033 Call 0x1C17CF4
	034 Move X0, 0xE10000
	035 Move X0, [X0+2008]
	036 Call 0x1C17CF4
	037 Move X0, 0xE3B000
	038 Move X0, [X0+3336]
	039 Call 0x1C17CF4
	040 Move X0, 0xE33000
	041 Move X0, [X0+736]
	042 Call 0x1C17CF4
	043 Move X0, 0xE3B000
	044 Move X0, [X0+3344]
	045 Call 0x1C17CF4
	046 Move X0, 0xE3B000
	047 Move X0, [X0+3272]
	048 Call 0x1C17CF4
	049 Move X0, 0xE09000
	050 Move X0, [X0+1976]
	051 Call 0x1C17CF4
	052 Move X0, 0xE3B000
	053 Move X0, [X0+3352]
	054 Call 0x1C17CF4
	055 Move X0, 0xE3B000
	056 Move X0, [X0+3360]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X23+2545], W8
	060 Move X0, [X22]
	061 Move [X31+8], X31
	062 Move [X31+16], X31
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Add X0, X31, 24
	068 Move X1, X31
	069 Call CancellationToken.get_IsCancellationRequested, X0
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {94}
	074 Move X8, 0xE09000
	075 Move X8, [X8+1976]
	076 Move X20, 0xE3B000
	077 Move X19, [X31+24]
	078 Move X0, [X8]
	079 Move W8, [X0+224]
	080 Move X20, [X20+3272]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X1, [X20]
	085 Move X0, X19
	086 Call 0x229A598, X0
	087 Move X19, X0
	088 Compare X0, 0
	089 JumpIfNotEqual {93}
	090 Move W0, 38
	091 Move X1, X31
	092 Call ThrowHelper.ThrowArgumentNullException, X0
	093 Move X1, 0x10000
	094 Move X8, 0xE3B000
	095 Move X8, [X8+3344]
	096 Move X2, [X8]
	097 Move X0, X21
	098 Move X1, X20
	099 Call 0x319ECE0, X0
	100 Move X8, 0xE3B000
	101 Move X8, [X8+3336]
	102 Move X3, [X8]
	103 Add X2, X31, 8
	104 Call 0x2219D10, X0, X1
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {124}
	109 Move X8, 0xE30000
	110 Move X8, [X8+1456]
	111 Move X0, [X8]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Move X8, [X19]
	117 Move X1, [X31+8]
	118 Move W2, [X31+16]
	119 Move W3, [X31+20]
	120 Move X9, [X8+856]
	121 Move X4, [X8+864]
	122 Move X0, X19
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move X8, 0xE33000
	125 Move X8, [X8+736]
	126 Move X1, [X8]
	127 Add X0, X31, 32
	128 Call 0x2985784
	129 Move X8, [X19]
	130 Move X2, X0
	131 Move X4, X1
	132 Move X9, [X8+872]
	133 Move X3, [X8+880]
	134 Move X0, X19
	135 Move X1, X2
	136 Move X2, X4
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Move X19, X31
	139 Move W8, W0
	140 Or X1, X8, 0x1FFFFFFFFFFFF
	141 Move X0, X19
	142 Move X20, [X31+80]
	143 Move X19, [X31+88]
	144 Move X22, [X31+64]
	145 Move X21, [X31+72]
	146 Move X30, [X31+48]
	147 Move X23, [X31+56]
	148 Add X31, X31, 96
	149 Return X0
	150 Move X19, X0
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X0, X19
	153 Call 0x3EB2AD0
	154 Move X19, X0
	155 Move X0, 0xE08000
	156 Move X0, [X0+2000]
	157 Call 0x1C17D08
	158 Move X8, [X19]
	159 Move X1, [X8]
	160 Call 0x1C18270
	161 Move TEMP, X0
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfNotEqual {190}
	165 Move X19, [X19]
	166 Call 0x3EB2AE0
	167 Move X0, 0xE09000
	168 Move X0, [X0+1976]
	169 Call 0x1C17D08
	170 Move W8, [X0+224]
	171 Compare W8, 0
	172 JumpIfNotEqual {174}
	173 Call 0x1C17DFC
	174 Move X0, 0xE3B000
	175 Move X0, [X0+3304]
	176 Call 0x1C17D08
	177 Move X1, X0
	178 Move X0, X19
	179 Call Task.FromException, X0
	180 Move X19, X0
	181 Move X0, 0xE3B000
	182 Move X0, [X0+3360]
	183 Call 0x1C17D08
	184 Compare X19, 0
	185 JumpIfNotEqual {189}
	186 Move W0, 38
	187 Move X1, X31
	188 Call ThrowHelper.ThrowArgumentNullException, X0
	189 Move W0, W31
	190 Move W0, 8
	191 Call 0x3EB2AF0
	192 Move X8, [X19]
	193 Move [X0], X8
	194 Move X1, 0xBC9000
	195 Add X1, X1, 3672
	196 Move X2, X31
	197 Call 0x3EB2B00
	198 Move X19, X0
	199 Call 0x3EB2AE0
	200 Move X0, X19
	201 Call 0x1D2D690
	202 Call 0x1991590

Method: System.Int32 ReadByte()

Disassembly:
	0x032EC364 STP X20, X19, [X31 + 0x10]
	0x032EC368 ADRP X20, 0x10F0000
	0x032EC36C LDRB W8, [X20 + 0x9F9]
	0x032EC370 MOV X19, X0
	0x032EC374 TBNZ X8, 0x0, 0x32EC38C
	0x032EC378 ADRP X0, 0xE2E000
	0x032EC37C LDR X0, [X0 + 0x1D0]
	0x032EC380 BL 0x1C16CF4
	0x032EC384 MOVZ W8, 0x1
	0x032EC388 STRB W8, [X20 + 0x9F9]
	0x032EC38C CBZ X19, 0x32EC48C
	0x032EC390 LDR W8, [X19 + 0x10]
	0x032EC394 CBZ W8, 0x32EC48C
	0x032EC398 ADRP X8, 0xE2E000
	0x032EC39C LDR X8, [X8 + 0x1D0]
	0x032EC3A0 LDR X0, [X8]
	0x032EC3A4 LDR W8, [X0 + 0xE0]
	0x032EC3A8 CBNZ W8, 0x32EC3B0
	0x032EC3AC BL 0x1C16DFC
	0x032EC3B0 MOV X0, X19
	0x032EC3B4 MOV X1, X31
	0x032EC3B8 BL 0x32EE2E0
	0x032EC3BC ADRP X20, 0x10ED000
	0x032EC3C0 LDRB W8, [X20 + 0x762]
	0x032EC3C4 MOV X19, X0
	0x032EC3C8 CBZ W8, 0x32EC3E4
	0x032EC3CC CBZ X19, 0x32EC3FC
	0x032EC3D0 MOV X0, X19
	0x032EC3D4 MOV X1, X31
	0x032EC3D8 BL 0x3225708
	0x032EC3DC LDR W1, [X19 + 0x10]
	0x032EC3E0 B 0x32EC404
	0x032EC3E4 ADRP X0, 0xE2E000
	0x032EC3E8 LDR X0, [X0 + 0x290]
	0x032EC3EC BL 0x1C16CF4
	0x032EC3F0 MOVZ W8, 0x1
	0x032EC3F4 STRB W8, [X20 + 0x762]
	0x032EC3F8 CBNZ X19, 0x32EC3D0
	0x032EC3FC MOV X0, X31
	0x032EC400 MOV X1, X31
	0x032EC404 MOV X2, X31
	0x032EC408 BL 0x32EF7AC
	0x032EC40C B 0x32EC490
	0x032EC410 B 0x32EC41C
	0x032EC414 B 0x32EC41C
	0x032EC418 B 0x32EC41C
	0x032EC41C MOV X19, X0
	0x032EC420 CMP W1, 0x1
	0x032EC424 B.NE 0x32EC4C8
	0x032EC428 MOV X0, X19
	0x032EC42C BL 0x3EB1AD0
	0x032EC430 MOV X19, X0
	0x032EC434 ADRP X0, 0xE0F000
	0x032EC438 LDR X0, [X0 + 0x578]
	0x032EC43C BL 0x1C16D08
	0x032EC440 LDR X8, [X19]
	0x032EC444 LDR X1, [X8]
	0x032EC448 BL 0x1C17270
	0x032EC44C TBNZ X0, 0x0, 0x32EC488
	0x032EC450 ADRP X0, 0xE35000
	0x032EC454 LDR X0, [X0 + 0x7A8]
	0x032EC458 BL 0x1C16D08
	0x032EC45C LDR X8, [X19]
	0x032EC460 LDR X1, [X8]
	0x032EC464 BL 0x1C17270
	0x032EC468 TBNZ X0, 0x0, 0x32EC488
	0x032EC46C ADRP X0, 0xE35000
	0x032EC470 LDR X0, [X0 + 0x7B8]
	0x032EC474 BL 0x1C16D08
	0x032EC478 LDR X8, [X19]
	0x032EC47C LDR X1, [X8]
	0x032EC480 BL 0x1C17270
	0x032EC484 TBZ X0, 0x0, 0x32EC4A0
	0x032EC488 BL 0x3EB1AE0
	0x032EC48C MOV W0, W31
	0x032EC490 LDP X20, X19, [X31 + 0x10]
	0x032EC494 AND W0, W0, 0x1
	0x032EC498 LDR X30, [X31], #0x20
	0x032EC49C RET
	0x032EC4A0 MOVZ W0, 0x8
	0x032EC4A4 BL 0x3EB1AF0
	0x032EC4A8 LDR X8, [X19]
	0x032EC4AC STR X8, [X0]
	0x032EC4B0 ADRP X1, 0xBC8000
	0x032EC4B4 ADD X1, X1, 0xE58
	0x032EC4B8 MOV X2, X31
	0x032EC4BC BL 0x3EB1B00
	0x032EC4C0 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, X0
	009 Move [X31+8], X31
	010 Call UnmanagedMemoryStream.EnsureNotClosed, X0
	011 Move X0, X19
	012 Call UnmanagedMemoryStream.EnsureReadable, X0
	013 Add X21, X19, 72
	014 Move X0, X21
	015 Move X1, X31
	016 Call Interlocked.Read, X0
	017 Move X20, X0
	018 Add X0, X19, 56
	019 Move X1, X31
	020 Call Interlocked.Read, X0
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Add X1, X20, 1
	023 Move X0, X21
	024 Move X2, X31
	025 Call Interlocked.Exchange, X0, X1
	026 Move X8, [X19+40]
	027 Compare X8, 0
	028 JumpIfEqual {55}
	029 Move X0, X31
	030 Move [X31+8], X31
	031 Call RuntimeHelpers.PrepareConstrainedRegions
	032 Move X0, [X19+40]
	033 Compare X0, 0
	034 JumpIfEqual {69}
	035 Add X1, X31, 8
	036 Move X2, X31
	037 Call SafeBuffer.AcquirePointer, X0, X1
	038 Move X8, [X31+8]
	039 Move X9, [X19+80]
	040 Move X21, X31
	041 Move W23, W31
	042 Add X10, X20, X8
	043 Move W22, [X10]
	044 Compare X8, 0
	045 JumpIfEqual {51}
	046 Move X0, [X19+40]
	047 Compare X0, 0
	048 JumpIfEqual {72}
	049 Move X1, X31
	050 Call SafeBuffer.ReleasePointer, X0
	051 Compare X21, 0
	052 JumpIfNotEqual {70}
	053 Compare W23, 0
	054 JumpIfEqual {60}
	055 Move X8, [X19+48]
	056 Move W22, [X20]
	057 Move TEMP, 0
	058 Not TEMP
	059 Move W22, TEMP
	060 Move W0, W22
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move X22, [X31+32]
	064 Move X21, [X31+40]
	065 Move X30, [X31+16]
	066 Move X23, [X31+24]
	067 Add X31, X31, 64
	068 Return X0
	069 Call 0x1C17F20
	070 Move X0, X21
	071 Call 0x1C17F18
	072 Call 0x1C17F20
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X22, X0
	075 Move X0, X22
	076 Call 0x3EB2AD0
	077 Move X21, [X0]
	078 Call 0x3EB2AE0
	079 Move X8, [X31+8]
	080 Move W22, W31
	081 Move W23, 1
	082 Compare X8, 0
	083 JumpIfNotEqual {46}
	084 Move X21, X31
	085 Move X22, X0
	086 Move X8, [X31+8]
	087 Compare X8, 0
	088 JumpIfEqual {95}
	089 Move X0, [X19+40]
	090 Compare X0, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17F20
	093 Move X1, X31
	094 Call SafeBuffer.ReleasePointer, X0
	095 Compare X21, 0
	096 JumpIfNotEqual {99}
	097 Move X0, X22
	098 Call 0x1D2D690
	099 Move X0, X21
	100 Call 0x1C17F18
	101 Call 0x1991590

Method: System.Int64 Seek(System.Int64 offset, System.IO.SeekOrigin loc)

Disassembly:
	0x032EC4C4 BL 0x3EB1AE0
	0x032EC4C8 MOV X0, X19
	0x032EC4CC BL 0x1D2C690
	0x032EC4D0 BL 0x1990590
	0x032EC4D4 STR X30, [X31 - 0x30]!
	0x032EC4D8 STP X22, X21, [X31 + 0x10]
	0x032EC4DC STP X20, X19, [X31 + 0x20]
	0x032EC4E0 ADRP X22, 0x10F0000
	0x032EC4E4 ADRP X21, 0xE32000
	0x032EC4E8 LDRB W8, [X22 + 0x9FA]
	0x032EC4EC LDR X21, [X21 + 0xD38]
	0x032EC4F0 MOV X19, X1
	0x032EC4F4 MOV X20, X0
	0x032EC4F8 TBNZ X8, 0x0, 0x32EC510
	0x032EC4FC ADRP X0, 0xE32000
	0x032EC500 LDR X0, [X0 + 0xD38]
	0x032EC504 BL 0x1C16CF4
	0x032EC508 MOVZ W8, 0x1
	0x032EC50C STRB W8, [X22 + 0x9FA]
	0x032EC510 LDR X0, [X21]
	0x032EC514 LDR W8, [X0 + 0xE0]
	0x032EC518 CBNZ W8, 0x32EC520
	0x032EC51C BL 0x1C16DFC
	0x032EC520 ADRP X22, 0x10F0000
	0x032EC524 LDRB W8, [X22 + 0xA12]
	0x032EC528 CBNZ W8, 0x32EC540
	0x032EC52C ADRP X0, 0xE32000
	0x032EC530 LDR X0, [X0 + 0xD38]
	0x032EC534 BL 0x1C16CF4
	0x032EC538 MOVZ W8, 0x1
	0x032EC53C STRB W8, [X22 + 0xA12]
	0x032EC540 LDR X0, [X21]
	0x032EC544 LDR W8, [X0 + 0xE0]
	0x032EC548 CBNZ W8, 0x32EC554
	0x032EC54C BL 0x1C16DFC
	0x032EC550 LDR X0, [X21]
	0x032EC554 LDR X8, [X0 + 0xB8]
	0x032EC558 MOV X0, X20
	0x032EC55C MOV X1, X19
	0x032EC560 LDP X20, X19, [X31 + 0x20]
	0x032EC564 LDR X2, [X8]
	0x032EC568 LDP X22, X21, [X31 + 0x10]
	0x032EC56C LDR X30, [X31], #0x30
	0x032EC570 B 0x32EC574
	0x032EC574 STP X30, X23, [X31 - 0x30]!
	0x032EC578 STP X22, X21, [X31 + 0x10]
	0x032EC57C STP X20, X19, [X31 + 0x20]
	0x032EC580 ADRP X23, 0x10F0000
	0x032EC584 ADRP X22, 0xE3A000
	0x032EC588 LDRB W8, [X23 + 0x9FB]
	0x032EC58C LDR X22, [X22 + 0xFA8]
	0x032EC590 MOV X19, X2
	0x032EC594 MOV X20, X1
	0x032EC598 MOV X21, X0
	0x032EC59C TBNZ X8, 0x0, 0x32EC5B4
	0x032EC5A0 ADRP X0, 0xE3A000
	0x032EC5A4 LDR X0, [X0 + 0xFA8]
	0x032EC5A8 BL 0x1C16CF4
	0x032EC5AC MOVZ W8, 0x1
	0x032EC5B0 STRB W8, [X23 + 0x9FB]
	0x032EC5B4 MOVZ W2, 0x1
	0x032EC5B8 MOV X0, X21
	0x032EC5BC MOV X1, X20
	0x032EC5C0 MOV X3, X19
	0x032EC5C4 BL 0x32EC5DC
	0x032EC5C8 LDR X1, [X22]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W21, W2
	006 Move X20, X1
	007 Move X19, X0
	008 Call UnmanagedMemoryStream.EnsureNotClosed, X0
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Compare W21, 0
	012 JumpIfNotEqual {51}
	013 Move TEMP, X20
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Add X0, X19, 72
	018 Move X1, X20
	019 Add X0, X19, 56
	020 Move X1, X31
	021 Call Interlocked.Read, X0
	022 Add X1, X0, X20
	023 Add X0, X19, 72
	024 Add X21, X19, 72
	025 Move X0, X21
	026 Move X1, X31
	027 Call Interlocked.Read, X0
	028 Add X1, X0, X20
	029 Move X0, X21
	030 Move X2, X31
	031 Call Interlocked.Exchange, X0, X1
	032 Add X0, X19, 72
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X1, X31
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Call Interlocked.Read, X0
	039 Return X0
	040 Move X0, 0xE36000
	041 Move X0, [X0+1960]
	042 Call 0x1C17D08
	043 Call 0x1C17F10
	044 Move X19, X0
	045 Move X0, 0xE3B000
	046 Move X0, [X0+3384]
	047 Call 0x1C17D08
	048 Move X1, X0
	049 Move X0, X19
	050 Call IOException..ctor, X0, X1
	051 Move X0, 0xE10000
	052 Move X0, [X0+1400]
	053 Call 0x1C17D08
	054 Call 0x1C17F10
	055 Move X19, X0
	056 Move X0, 0xE3B000
	057 Move X0, [X0+3392]
	058 Call 0x1C17D08
	059 Move X1, X0
	060 Move X0, X19
	061 Move X2, X31
	062 Call ArgumentException..ctor, X0, X1
	063 Move X0, 0xE3B000
	064 Move X0, [X0+3928]
	065 Call 0x1C17D08
	066 Move X1, X0
	067 Move X0, X19
	068 Call 0x1C17DEC

Method: System.Void SetLength(System.Int64 value)

Disassembly:
	0x032EC5CC LDP X20, X19, [X31 + 0x20]
	0x032EC5D0 LDP X22, X21, [X31 + 0x10]
	0x032EC5D4 LDP X30, X23, [X31], #0x30
	0x032EC5D8 B 0x221F9AC
	0x032EC5DC SUB X31, X31, 0x40
	0x032EC5E0 STP X30, X23, [X31 + 0x10]
	0x032EC5E4 STP X22, X21, [X31 + 0x20]
	0x032EC5E8 STP X20, X19, [X31 + 0x30]
	0x032EC5EC ADRP X23, 0x10F0000
	0x032EC5F0 LDRB W8, [X23 + 0x9FC]
	0x032EC5F4 MOV X19, X3
	0x032EC5F8 MOV W20, W2
	0x032EC5FC MOV X21, X1
	0x032EC600 MOV X22, X0
	0x032EC604 STP X1, X0, [X31]
	0x032EC608 TBNZ X8, 0x0, 0x32EC620
	0x032EC60C ADRP X0, 0xE3A000
	0x032EC610 LDR X0, [X0 + 0xFB0]
	0x032EC614 BL 0x1C16CF4
	0x032EC618 MOVZ W8, 0x1
	0x032EC61C STRB W8, [X23 + 0x9FC]
	0x032EC620 CBZ X22, 0x32EC700
	0x032EC624 CBZ X21, 0x32EC720
	0x032EC628 ADRP X21, 0xE3A000
	0x032EC62C LDR X21, [X21 + 0xFB0]
	0x032EC630 LDR X0, [X21]
	0x032EC634 LDR W8, [X0 + 0xE0]
	0x032EC638 CBNZ W8, 0x32EC640
	0x032EC63C BL 0x1C16DFC
	0x032EC640 ADD X0, X31, 0x8
	0x032EC644 ADD X1, X31, 0x0
	0x032EC648 MOV X2, X19
	0x032EC64C MOV X3, X31
	0x032EC650 BL 0x330168C
	0x032EC654 CMP W20, 0x3
	0x032EC658 B.EQ 0x32EC698
	0x032EC65C CMP W20, 0x2
	0x032EC660 B.EQ 0x32EC6C4
	0x032EC664 CMP W20, 0x1
	0x032EC668 B.NE 0x32EC768
	0x032EC66C LDR X0, [X21]
	0x032EC670 LDP X21, X20, [X31]
	0x032EC674 LDR W8, [X0 + 0xE0]
	0x032EC678 CBNZ W8, 0x32EC680
	0x032EC67C BL 0x1C16DFC
	0x032EC680 MOV X0, X20
	0x032EC684 MOV X1, X21
	0x032EC688 MOV X2, X19
	0x032EC68C MOV X3, X31
	0x032EC690 BL 0x330218C
	0x032EC694 B 0x32EC6EC
	0x032EC698 LDR X0, [X21]
	0x032EC69C LDP X21, X20, [X31]
	0x032EC6A0 LDR W8, [X0 + 0xE0]
	0x032EC6A4 CBNZ W8, 0x32EC6AC
	0x032EC6A8 BL 0x1C16DFC
	0x032EC6AC MOV X0, X20
	0x032EC6B0 MOV X1, X21
	0x032EC6B4 MOV X2, X19
	0x032EC6B8 MOV X3, X31
	0x032EC6BC BL 0x3302524
	0x032EC6C0 B 0x32EC6EC
	0x032EC6C4 LDR X0, [X21]
	0x032EC6C8 LDP X21, X20, [X31]
	0x032EC6CC LDR W8, [X0 + 0xE0]
	0x032EC6D0 CBNZ W8, 0x32EC6D8
	0x032EC6D4 BL 0x1C16DFC
	0x032EC6D8 MOV X0, X20
	0x032EC6DC MOV X1, X21
	0x032EC6E0 MOV X2, X19
	0x032EC6E4 MOV X3, X31
	0x032EC6E8 BL 0x3302358
	0x032EC6EC LDP X20, X19, [X31 + 0x30]
	0x032EC6F0 LDP X22, X21, [X31 + 0x20]
	0x032EC6F4 LDP X30, X23, [X31 + 0x10]
	0x032EC6F8 ADD X31, X31, 0x40
	0x032EC6FC RET
	0x032EC700 ADRP X0, 0xE0C000
	0x032EC704 LDR X0, [X0 + 0x528]
	0x032EC708 BL 0x1C16D08
	0x032EC70C BL 0x1C16F10
	0x032EC710 MOV X19, X0
	0x032EC714 ADRP X0, 0xE12000
	0x032EC718 LDR X0, [X0 + 0x120]
	0x032EC71C B 0x32EC73C
	0x032EC720 ADRP X0, 0xE0C000
	0x032EC724 LDR X0, [X0 + 0x528]
	0x032EC728 BL 0x1C16D08
	0x032EC72C BL 0x1C16F10
	0x032EC730 MOV X19, X0
	0x032EC734 ADRP X0, 0xE3A000
	0x032EC738 LDR X0, [X0 + 0xFB8]
	0x032EC73C BL 0x1C16D08
	0x032EC740 MOV X1, X0
	0x032EC744 MOV X0, X19
	0x032EC748 MOV X2, X31
	0x032EC74C BL 0x330E100

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move TEMP, X1
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {61}
	011 Move X8, [X0+40]
	012 Move X21, X0
	013 Compare X8, 0
	014 JumpIfNotEqual {78}
	015 Move X0, X21
	016 Move X19, X1
	017 Call UnmanagedMemoryStream.EnsureNotClosed, X0
	018 Move X0, X21
	019 Call UnmanagedMemoryStream.EnsureWriteable, X0
	020 Move X8, [X21+64]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Add X20, X21, 72
	023 Move X0, X20
	024 Move X1, X31
	025 Call Interlocked.Read, X0
	026 Add X23, X21, 56
	027 Move X22, X0
	028 Move X0, X23
	029 Move X1, X31
	030 Call Interlocked.Read, X0
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X8, [X21+48]
	033 Subtract X1, X19, X0
	034 Move X2, X31
	035 Add X8, X0, X8
	036 Move X0, X8
	037 Call Buffer.ZeroMemory, X0, X1
	038 Move X0, X23
	039 Move X1, X19
	040 Move X2, X31
	041 Call Interlocked.Exchange, X0, X1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, X20
	044 Move X1, X19
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X2, X31
	050 Move X30, [X31+48]
	051 Move X23, [X31+56]
	052 Call Interlocked.Exchange, X0, X1
	053 Return 
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Move X23, [X31+56]
	060 Return 
	061 Move X0, 0xE10000
	062 Move X0, [X0+1888]
	063 Call 0x1C17D08
	064 Call 0x1C17F10
	065 Move X19, X0
	066 Move X0, 0xE12000
	067 Move X0, [X0+3784]
	068 Call 0x1C17D08
	069 Move X20, X0
	070 Move X0, 0xE30000
	071 Move X0, [X0+1648]
	072 Call 0x1C17D08
	073 Move X2, X0
	074 Move X0, X19
	075 Move X1, X20
	076 Move X3, X31
	077 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	078 Move X0, 0xE08000
	079 Move X0, [X0+2880]
	080 Call 0x1C17D08
	081 Call 0x1C17F10
	082 Move X19, X0
	083 Move X0, 0xE3B000
	084 Move X0, [X0+3880]
	085 Call 0x1C17D08
	086 Move X1, X0
	087 Move X0, X19
	088 Move X2, X31
	089 Call NotSupportedException..ctor, X0, X1
	090 Move X0, 0xE36000
	091 Move X0, [X0+1960]
	092 Call 0x1C17D08
	093 Call 0x1C17F10
	094 Move X19, X0
	095 Move X0, 0xE3B000
	096 Move X0, [X0+3544]
	097 Call 0x1C17D08
	098 Move X1, X0
	099 Move X0, X19
	100 Call IOException..ctor, X0, X1
	101 Move X0, 0xE3B000
	102 Move X0, [X0+3936]
	103 Call 0x1C17D08
	104 Move X1, X0
	105 Move X0, X19
	106 Call 0x1C17DEC

Method: System.Void Write(System.Byte[] buffer, System.Int32 offset, System.Int32 count)

Disassembly:
	0x032EC750 ADRP X0, 0xE3A000
	0x032EC754 LDR X0, [X0 + 0xFC0]
	0x032EC758 BL 0x1C16D08
	0x032EC75C MOV X1, X0
	0x032EC760 MOV X0, X19
	0x032EC764 BL 0x1C16DEC
	0x032EC768 ADRP X0, 0xE0F000
	0x032EC76C LDR X0, [X0 + 0x760]
	0x032EC770 BL 0x1C16D08
	0x032EC774 BL 0x1C16F10
	0x032EC778 MOV X19, X0
	0x032EC77C ADRP X0, 0xE3A000
	0x032EC780 LDR X0, [X0 + 0xFC8]
	0x032EC784 BL 0x1C16D08
	0x032EC788 MOV X1, X0
	0x032EC78C MOV X0, X19
	0x032EC790 MOV X2, X31
	0x032EC794 BL 0x3316014
	0x032EC798 B 0x32EC750
	0x032EC79C STP X30, X21, [X31 - 0x20]!
	0x032EC7A0 STP X20, X19, [X31 + 0x10]
	0x032EC7A4 ADRP X20, 0x10F0000
	0x032EC7A8 LDRB W8, [X20 + 0x9FD]
	0x032EC7AC MOV X19, X0
	0x032EC7B0 TBNZ X8, 0x0, 0x32EC7C8
	0x032EC7B4 ADRP X0, 0xE32000
	0x032EC7B8 LDR X0, [X0 + 0xD70]
	0x032EC7BC BL 0x1C16CF4
	0x032EC7C0 MOVZ W8, 0x1
	0x032EC7C4 STRB W8, [X20 + 0x9FD]
	0x032EC7C8 CBZ X19, 0x32EC844
	0x032EC7CC ADRP X21, 0x10ED000
	0x032EC7D0 ADRP X20, 0xE32000
	0x032EC7D4 LDRB W8, [X21 + 0x762]
	0x032EC7D8 LDR X20, [X20 + 0xD70]
	0x032EC7DC CBNZ W8, 0x32EC7F4
	0x032EC7E0 ADRP X0, 0xE2E000
	0x032EC7E4 LDR X0, [X0 + 0x290]
	0x032EC7E8 BL 0x1C16CF4
	0x032EC7EC MOVZ W8, 0x1
	0x032EC7F0 STRB W8, [X21 + 0x762]
	0x032EC7F4 MOV X0, X19
	0x032EC7F8 MOV X1, X31
	0x032EC7FC BL 0x3225708
	0x032EC800 LDR X8, [X20]
	0x032EC804 LDR W20, [X19 + 0x10]
	0x032EC808 MOV X21, X0
	0x032EC80C LDR W9, [X8 + 0xE0]
	0x032EC810 CBNZ W9, 0x32EC81C
	0x032EC814 MOV X0, X8
	0x032EC818 BL 0x1C16DFC
	0x032EC81C MOV X0, X21
	0x032EC820 MOV X1, X20
	0x032EC824 BL 0x32E5024
	0x032EC828 MOV W2, W0
	0x032EC82C MOV X0, X19
	0x032EC830 LDP X20, X19, [X31 + 0x10]
	0x032EC834 MOV W1, W31
	0x032EC838 MOV X3, X31
	0x032EC83C LDP X30, X21, [X31], #0x20
	0x032EC840 B 0x3228DE4
	0x032EC844 LDP X20, X19, [X31 + 0x10]
	0x032EC848 MOV X0, X31
	0x032EC84C LDP X30, X21, [X31], #0x20
	0x032EC850 RET
	0x032EC854 MOV X0, X31
	0x032EC858 B 0x33C1514
	0x032EC85C STR X30, [X31 - 0x20]!
	0x032EC860 STP X20, X19, [X31 + 0x10]
	0x032EC864 ADRP X20, 0x10F0000
	0x032EC868 ADRP X19, 0xE35000
	0x032EC86C LDRB W8, [X20 + 0x9FE]
	0x032EC870 LDR X19, [X19 + 0xFA8]
	0x032EC874 TBNZ X8, 0x0, 0x32EC88C
	0x032EC878 ADRP X0, 0xE35000
	0x032EC87C LDR X0, [X0 + 0xFA8]
	0x032EC880 BL 0x1C16CF4
	0x032EC884 MOVZ W8, 0x1
	0x032EC888 STRB W8, [X20 + 0x9FE]
	0x032EC88C LDR X0, [X19]
	0x032EC890 STR W31, [X31 + 0xC]
	0x032EC894 LDR W8, [X0 + 0xE0]
	0x032EC898 CBNZ W8, 0x32EC8A0
	0x032EC89C BL 0x1C16DFC
	0x032EC8A0 ADD X0, X31, 0xC
	0x032EC8A4 MOV X1, X31
	0x032EC8A8 BL 0x32FCD3C
	0x032EC8AC LDR W19, [X31 + 0xC]
	0x032EC8B0 CBNZ W19, 0x32EC8C0
	0x032EC8B4 LDP X20, X19, [X31 + 0x10]
	0x032EC8B8 LDR X30, [X31], #0x20
	0x032EC8BC RET
	0x032EC8C0 ADRP X0, 0xE35000
	0x032EC8C4 LDR X0, [X0 + 0xFA8]
	0x032EC8C8 BL 0x1C16D08
	0x032EC8CC BL 0x19903D0
	0x032EC8D0 MOV W0, W19
	0x032EC8D4 MOV X1, X31
	0x032EC8D8 BL 0x32FCC14
	0x032EC8DC MOV X19, X0
	0x032EC8E0 ADRP X0, 0xE3A000
	0x032EC8E4 LDR X0, [X0 + 0xFD0]
	0x032EC8E8 BL 0x1C16D08
	0x032EC8EC MOV X1, X0
	0x032EC8F0 MOV X0, X19
	0x032EC8F4 BL 0x1C16DEC
	0x032EC8F8 STR X30, [X31 - 0x30]!
	0x032EC8FC STP X22, X21, [X31 + 0x10]
	0x032EC900 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x10F1000
	008 Move W8, [X23+2546]
	009 Move W20, W3
	010 Move W21, W2
	011 Move X22, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xE37000
	018 Move X0, [X0+3680]
	019 Call 0x1C17CF4
	020 Move X0, 0xE3B000
	021 Move X0, [X0+3944]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+2546], W8
	025 Compare X22, 0
	026 JumpIfEqual {62}
	027 Move TEMP, X21
	028 And TEMP, TEMP, -2147483648
	029 Compare TEMP, -2147483648
	030 JumpIfEqual {79}
	031 Move TEMP, X20
	032 And TEMP, TEMP, -2147483648
	033 Compare TEMP, -2147483648
	034 JumpIfEqual {86}
	035 Move W9, [X22+24]
	036 Subtract W8, W9, W21
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X23, 0xE3B000
	039 Move X23, [X23+3944]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X0, X31
	043 Call ThrowHelper.ThrowArgumentOutOfRangeException
	044 Move X2, [X23]
	045 Add X8, X22, W21
	046 Add X0, X8, 32
	047 Move W1, W20
	048 Call 0x25FC09C, X0
	049 Move X2, X0
	050 Move X0, X19
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X3, X1
	056 Move X1, X2
	057 Move X2, X3
	058 Move X30, [X31+48]
	059 Move X23, [X31+56]
	060 Call UnmanagedMemoryStream.WriteCore, X0, X1
	061 Return 
	062 Move X0, 0xE0D000
	063 Move X0, [X0+1320]
	064 Call 0x1C17D08
	065 Call 0x1C17F10
	066 Move X19, X0
	067 Move X0, 0xE33000
	068 Move X0, [X0+3912]
	069 Call 0x1C17D08
	070 Move X20, X0
	071 Move X0, 0xE3B000
	072 Move X0, [X0+3136]
	073 Call 0x1C17D08
	074 Move X2, X0
	075 Move X0, X19
	076 Move X1, X20
	077 Move X3, X31
	078 Call ArgumentNullException..ctor, X0, X1, X2
	079 Move X0, 0xE10000
	080 Move X0, [X0+1888]
	081 Call 0x1C17D08
	082 Call 0x1C17F10
	083 Move X19, X0
	084 Move X0, 0xE37000
	085 Move X0, [X0+3472]
	086 Move X0, 0xE10000
	087 Move X0, [X0+1888]
	088 Call 0x1C17D08
	089 Call 0x1C17F10
	090 Move X19, X0
	091 Move X0, 0xE30000
	092 Move X0, [X0+1608]
	093 Call 0x1C17D08
	094 Move X20, X0
	095 Move X0, 0xE30000
	096 Move X0, [X0+1648]
	097 Call 0x1C17D08
	098 Move X2, X0
	099 Move X0, X19
	100 Move X1, X20
	101 Move X3, X31
	102 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	103 Move X0, 0xE10000
	104 Move X0, [X0+1400]
	105 Call 0x1C17D08
	106 Call 0x1C17F10
	107 Move X19, X0
	108 Move X0, 0xE30000
	109 Move X0, [X0+1888]
	110 Call 0x1C17D08
	111 Move X1, X0
	112 Move X0, X19
	113 Move X2, X31
	114 Call ArgumentException..ctor, X0, X1
	115 Move X0, 0xE3B000
	116 Move X0, [X0+3952]
	117 Call 0x1C17D08
	118 Move X1, X0
	119 Move X0, X19
	120 Call 0x1C17DEC

Method: System.Void Write(System.ReadOnlySpan`1<System.Byte> buffer)

Disassembly:
	0x032EC904 ADRP X22, 0x10F0000
	0x032EC908 ADRP X21, 0xE2E000
	0x032EC90C LDRB W8, [X22 + 0x9FF]
	0x032EC910 LDR X21, [X21 + 0x1D0]
	0x032EC914 MOV X19, X1
	0x032EC918 MOV X20, X0
	0x032EC91C TBNZ X8, 0x0, 0x32EC934
	0x032EC920 ADRP X0, 0xE2E000
	0x032EC924 LDR X0, [X0 + 0x1D0]
	0x032EC928 BL 0x1C16CF4
	0x032EC92C MOVZ W8, 0x1
	0x032EC930 STRB W8, [X22 + 0x9FF]
	0x032EC934 MOV X0, X20
	0x032EC938 MOV X1, X31
	0x032EC93C BL 0x32EE138
	0x032EC940 LDR X0, [X21]
	0x032EC944 LDR W8, [X0 + 0xE0]
	0x032EC948 CBNZ W8, 0x32EC950
	0x032EC94C BL 0x1C16DFC
	0x032EC950 MOV X0, X19
	0x032EC954 MOV X1, X31
	0x032EC958 BL 0x32EE2E0
	0x032EC95C MOV X2, X0
	0x032EC960 MOV X0, X20
	0x032EC964 MOV X1, X19
	0x032EC968 LDP X20, X19, [X31 + 0x20]
	0x032EC96C LDP X22, X21, [X31 + 0x10]
	0x032EC970 MOVZ W4, 0x1
	0x032EC974 MOV X3, X31
	0x032EC978 LDR X30, [X31], #0x30
	0x032EC97C B 0x32EC980
	0x032EC980 SUB X31, X31, 0x50
	0x032EC984 STR X30, [X31 + 0x10]
	0x032EC988 STP X24, X23, [X31 + 0x20]
	0x032EC98C STP X22, X21, [X31 + 0x30]
	0x032EC990 STP X20, X19, [X31 + 0x40]
	0x032EC994 ADRP X24, 0x10F0000
	0x032EC998 LDRB W8, [X24 + 0xA00]
	0x032EC99C MOV W22, W4
	0x032EC9A0 MOV X21, X3
	0x032EC9A4 MOV X20, X2
	0x032EC9A8 MOV X23, X1
	0x032EC9AC MOV X19, X0
	0x032EC9B0 TBNZ X8, 0x0, 0x32EC9E0
	0x032EC9B4 ADRP X0, 0xE32000
	0x032EC9B8 LDR X0, [X0 + 0xD70]
	0x032EC9BC BL 0x1C16CF4
	0x032EC9C0 ADRP X0, 0xE2E000
	0x032EC9C4 LDR X0, [X0 + 0x1D0]
	0x032EC9C8 BL 0x1C16CF4
	0x032EC9CC ADRP X0, 0xE3A000
	0x032EC9D0 LDR X0, [X0 + 0xFD8]
	0x032EC9D4 BL 0x1C16CF4
	0x032EC9D8 MOVZ W8, 0x1
	0x032EC9DC STRB W8, [X24 + 0xA00]
	0x032EC9E0 CMP X23, 0x0
	0x032EC9E4 CSEL X8, X31, X19, EQ

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x10F1000
	009 Move X22, 0xE3B000
	010 Move X23, 0xE08000
	011 Move W8, [X24+2547]
	012 Move X22, [X22+3912]
	013 Move X23, [X23+1728]
	014 Move X19, X2
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xE08000
	022 Move X0, [X0+1728]
	023 Call 0x1C17CF4
	024 Move X0, 0xE3B000
	025 Move X0, [X0+3912]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+2547], W8
	029 Move X0, X21
	030 Move X1, X31
	031 Call "il2cpp_vm_object_is_inst", X0
	032 Move X8, [X23]
	033 Move X23, [X22]
	034 Move X22, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X23
	041 Move X1, X31
	042 Call Type.GetTypeFromHandle, X0
	043 Move X1, X0
	044 Move X0, X22
	045 Move X2, X31
	046 Call Type.op_Equality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {63}
	051 Move X0, X21
	052 Move X1, X20
	053 Move X2, X19
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X24, [X31+16]
	059 Move X23, [X31+24]
	060 Move X30, [X31+64]
	061 Call UnmanagedMemoryStream.WriteCore, X0, X1
	062 Return 
	063 Move X0, X21
	064 Move X1, X20
	065 Move X2, X19
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X24, [X31+16]
	071 Move X23, [X31+24]
	072 Move X3, X31
	073 Move X30, [X31+64]
	074 Call Stream.Write, X0, X1
	075 Return 

Method: System.Void WriteCore(System.ReadOnlySpan`1<System.Byte> buffer)

Disassembly:
	0x032E6F78 BL 0x32E6368
	0x032E6F7C MOV W26, W31
	0x032E6F80 MOV W22, W31
	0x032E6F84 STRB W31, [X31 + 0x1C]
	0x032E6F88 MOV W25, W19
	0x032E6F8C CMP W25, 0x0
	0x032E6F90 B.LE 0x32E7094
	0x032E6F94 LDP W9, W8, [X21 + 0x40]
	0x032E6F98 SUBS W0, W8, W9
	0x032E6F9C B.NE 0x32E6FE0
	0x032E6FA0 LDR X26, [X23]
	0x032E6FA4 CMP W22, W19
	0x032E6FA8 B.LS 0x32E6FB4
	0x032E6FAC MOV X0, X31
	0x032E6FB0 BL 0x339D6EC
	0x032E6FB4 LDR X0, [X26 + 0x20]
	0x032E6FB8 LDRB W8, [X0 + 0x135]
	0x032E6FBC TBNZ X8, 0x0, 0x32E6FC4
	0x032E6FC0 BL 0x1C5C684
	0x032E6FC4 SUB W2, W19, W22
	0x032E6FC8 ADD X1, X20, W22, 0x1, SXTW
	0x032E6FCC ADD X3, X31, 0x1C
	0x032E6FD0 MOV X0, X21
	0x032E6FD4 BL 0x32E7104
	0x032E6FD8 CBZ W0, 0x32E7094
	0x032E6FDC LDRB W26, [X31 + 0x1C]
	0x032E6FE0 CMP W0, W25
	0x032E6FE4 CSEL W27, W25, W0, GT
	0x032E6FE8 ANDS W31, W26, 0xFF
	0x032E6FEC B.NE 0x32E7084
	0x032E6FF0 LDR X28, [X21 + 0x38]
	0x032E6FF4 CBZ X28, 0x32E7028
	0x032E6FF8 LDRSW X29, [X21 + 0x40]
	0x032E6FFC LDR W8, [X28 + 0x18]
	0x032E7000 SUBS W8, W8, W29
	0x032E7004 B.CC 0x32E7010
	0x032E7008 CMP W8, W27
	0x032E700C B.CS 0x32E7018
	0x032E7010 MOV X0, X31
	0x032E7014 BL 0x339D6EC
	0x032E7018 ADD X8, X28, X29, 0x1, LSL
	0x032E701C ADD X9, X8, 0x20
	0x032E7020 MOV W8, W27
	0x032E7024 B 0x32E7038
	0x032E7028 MOV X0, X31
	0x032E702C BL 0x339D6EC
	0x032E7030 MOV X9, X31
	0x032E7034 MOV W8, W31
	0x032E7038 LDR X28, [X23]
	0x032E703C CMP W22, W19
	0x032E7040 STR X9, [X31 + 0x8]
	0x032E7044 STP W8, W31, [X31 + 0x10]
	0x032E7048 B.LS 0x32E7054
	0x032E704C MOV X0, X31
	0x032E7050 BL 0x339D6EC
	0x032E7054 LDR X0, [X28 + 0x20]
	0x032E7058 LDRB W8, [X0 + 0x135]
	0x032E705C TBNZ X8, 0x0, 0x32E7064
	0x032E7060 BL 0x1C5C684
	0x032E7064 LDR X3, [X24]
	0x032E7068 SUB W2, W19, W22
	0x032E706C ADD X1, X20, W22, 0x1, SXTW
	0x032E7070 ADD X0, X31, 0x8
	0x032E7074 BL 0x25FB714
	0x032E7078 LDR W8, [X21 + 0x40]
	0x032E707C ADD W8, W8, W27
	0x032E7080 STR W8, [X21 + 0x40]
	0x032E7084 LDRB W8, [X21 + 0x56]
	0x032E7088 ADD W22, W27, W22
	0x032E708C SUB W25, W25, W27
	0x032E7090 CBZ W8, 0x32E6F8C
	0x032E7094 MOV W0, W22
	0x032E7098 LDP X20, X19, [X31 + 0x70]
	0x032E709C LDP X22, X21, [X31 + 0x60]
	0x032E70A0 LDP X24, X23, [X31 + 0x50]
	0x032E70A4 LDP X26, X25, [X31 + 0x40]
	0x032E70A8 LDP X28, X27, [X31 + 0x30]
	0x032E70AC LDP X29, X30, [X31 + 0x20]
	0x032E70B0 ADD X31, X31, 0x80
	0x032E70B4 RET
	0x032E70B8 ADRP X0, 0xE35000
	0x032E70BC LDR X0, [X0 + 0x4B8]
	0x032E70C0 BL 0x1C16D08
	0x032E70C4 BL 0x1C16F10
	0x032E70C8 MOV X19, X0
	0x032E70CC ADRP X0, 0xE3F000
	0x032E70D0 LDR X0, [X0 + 0xE20]
	0x032E70D4 BL 0x1C16D08
	0x032E70D8 MOV X2, X0
	0x032E70DC MOV X0, X19
	0x032E70E0 MOV X1, X31
	0x032E70E4 MOV X3, X31
	0x032E70E8 BL 0x338C410
	0x032E70EC ADRP X0, 0xE3F000
	0x032E70F0 LDR X0, [X0 + 0xE40]
	0x032E70F4 BL 0x1C16D08
	0x032E70F8 MOV X1, X0
	0x032E70FC MOV X0, X19
	0x032E7100 BL 0x1C16DEC
	0x032E7104 STP X30, X27, [X31 - 0x50]!
	0x032E7108 STP X26, X25, [X31 + 0x10]
	0x032E710C STP X24, X23, [X31 + 0x20]
	0x032E7110 STP X22, X21, [X31 + 0x30]
	0x032E7114 STP X20, X19, [X31 + 0x40]
	0x032E7118 ADRP X21, 0x10F5000
	0x032E711C LDRB W8, [X21 + 0x9C0]
	0x032E7120 MOV X23, X3
	0x032E7124 MOV X22, X2
	0x032E7128 MOV X20, X1
	0x032E712C MOV X19, X0
	0x032E7130 TBNZ X8, 0x0, 0x32E7160
	0x032E7134 ADRP X0, 0xE3F000
	0x032E7138 LDR X0, [X0 + 0xE48]
	0x032E713C BL 0x1C16CF4
	0x032E7140 ADRP X0, 0xE3B000
	0x032E7144 LDR X0, [X0 + 0x1A8]
	0x032E7148 BL 0x1C16CF4
	0x032E714C ADRP X0, 0xE3B000
	0x032E7150 LDR X0, [X0 + 0x588]
	0x032E7154 BL 0x1C16CF4
	0x032E7158 MOVZ W8, 0x1
	0x032E715C STRB W8, [X21 + 0x9C0]
	0x032E7160 LDRB W8, [X19 + 0x55]
	0x032E7164 STR X31, [X19 + 0x40]
	0x032E7168 CBNZ W8, 0x32E7170
	0x032E716C STR W31, [X19 + 0x48]
	0x032E7170 LDR W8, [X19 + 0x50]
	0x032E7174 ADRP X27, 0xE3B000
	0x032E7178 LDR X27, [X27 + 0x1A8]
	0x032E717C AND X21, X22, 0x0
	0x032E7180 CMP W8, W22
	0x032E7184 CSET W8, LE
	0x032E7188 STRB W8, [X23]
	0x032E718C LDRB W8, [X19 + 0x55]
	0x032E7190 LDR X0, [X19 + 0x18]
	0x032E7194 LDR X1, [X19 + 0x30]
	0x032E7198 CBZ W8, 0x32E71D4
	0x032E719C CBZ X1, 0x32E7410
	0x032E71A0 CBZ X0, 0x32E7410
	0x032E71A4 LDR X8, [X0]
	0x032E71A8 LDR W2, [X19 + 0x4C]
	0x032E71AC LDR W9, [X1 + 0x18]
	0x032E71B0 LDR X10, [X8 + 0x358]
	0x032E71B4 LDR X4, [X8 + 0x360]
	0x032E71B8 SUB W3, W9, W2
	0x032E71BC BLR X10
	0x032E71C0 LDR W24, [X19 + 0x48]
	0x032E71C4 CBZ W0, 0x32E734C
	0x032E71C8 ADD W0, W24, W0
	0x032E71CC STR W0, [X19 + 0x48]
	0x032E71D0 B 0x32E71FC
	0x032E71D4 CBZ X1, 0x32E7410
	0x032E71D8 CBZ X0, 0x32E7410
	0x032E71DC LDR X8, [X0]
	0x032E71E0 LDR W3, [X1 + 0x18]
	0x032E71E4 MOV W2, W31
	0x032E71E8 LDR X9, [X8 + 0x358]
	0x032E71EC LDR X4, [X8 + 0x360]
	0x032E71F0 BLR X9
	0x032E71F4 STR W0, [X19 + 0x48]
	0x032E71F8 CBZ W0, 0x32E7320
	0x032E71FC LDR X8, [X19 + 0x30]
	0x032E7200 CBZ X8, 0x32E7410
	0x032E7204 LDR W8, [X8 + 0x18]
	0x032E7208 CMP W0, W8
	0x032E720C CSET W8, LT
	0x032E7210 MOV X0, X19
	0x032E7214 STRB W8, [X19 + 0x56]
	0x032E7218 BL 0x32E7824
	0x032E721C TBZ X0, 0x0, 0x32E722C
	0x032E7220 MOV W0, W31
	0x032E7224 CBZ W0, 0x32E718C
	0x032E7228 B 0x32E7320
	0x032E722C LDRB W8, [X19 + 0x54]
	0x032E7230 CBZ W8, 0x32E7258
	0x032E7234 LDR W25, [X19 + 0x48]
	0x032E7238 CMP W25, 0x2
	0x032E723C B.LT 0x32E725C
	0x032E7240 MOV X0, X19
	0x032E7244 BL 0x32E7570
	0x032E7248 LDR W8, [X19 + 0x50]
	0x032E724C CMP W8, W22
	0x032E7250 CSET W8, LE
	0x032E7254 STRB W8, [X23]
	0x032E7258 LDR W25, [X19 + 0x48]
	0x032E725C STR W31, [X19 + 0x40]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x10F7000
	013 Move W8, [X21+2548]
	014 Move X20, X2
	015 Move X24, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xE41000
	022 Move X0, [X0+3536]
	023 Call 0x1C17CF4
	024 Move X0, 0xE3D000
	025 Move X0, [X0+2752]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2548], W8
	029 Move X0, X19
	030 Move [X31+8], X31
	031 Call UnmanagedMemoryStream.EnsureNotClosed, X0
	032 Move X0, X19
	033 Call UnmanagedMemoryStream.EnsureWriteable, X0
	034 Add X21, X19, 72
	035 Move X0, X21
	036 Move X1, X31
	037 Call Interlocked.Read, X0
	038 Add X25, X19, 56
	039 Move X23, X0
	040 Move X0, X25
	041 Move X1, X31
	042 Call Interlocked.Read, X0
	043 Add X22, X23, W20
	044 Move X8, [X19+64]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X27, 0xE40000
	047 Move X8, [X19+40]
	048 Move X27, [X27+3536]
	049 Compare X8, 0
	050 JumpIfNotEqual {62}
	051 Move X26, X0
	052 Subtract X1, X23, X0
	053 Move X8, [X19+48]
	054 Move X2, X31
	055 Add X0, X26, X8
	056 Call Buffer.ZeroMemory, X0, X1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X0, X25
	059 Move X1, X22
	060 Move X2, X31
	061 Call Interlocked.Exchange, X0, X1
	062 Move X2, [X27]
	063 Move X0, X24
	064 Move X1, X20
	065 Call 0x2219CF0, X0
	066 Move X8, [X19+40]
	067 Move X24, X0
	068 Compare X8, 0
	069 JumpIfEqual {106}
	070 Move X8, [X19+64]
	071 Move X9, W20
	072 Subtract X8, X8, X23
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X0, X31
	075 Move [X31+8], X31
	076 Call RuntimeHelpers.PrepareConstrainedRegions
	077 Move X0, [X19+40]
	078 Compare X0, 0
	079 JumpIfEqual {169}
	080 Add X1, X31, 8
	081 Move X2, X31
	082 Call SafeBuffer.AcquirePointer, X0, X1
	083 Move X8, [X31+8]
	084 Move X9, [X19+80]
	085 Add X8, X23, X8
	086 Add X0, X8, X9
	087 Move X1, X24
	088 Move W2, W20
	089 Move X3, X31
	090 Call Buffer.Memcpy, X0, X1, X2
	091 Move X25, X31
	092 Move W26, 14
	093 Move X8, [X31+8]
	094 Compare X8, 0
	095 JumpIfEqual {101}
	096 Move X0, [X19+40]
	097 Compare X0, 0
	098 JumpIfEqual {172}
	099 Move X1, X31
	100 Call SafeBuffer.ReleasePointer, X0
	101 Compare X25, 0
	102 JumpIfNotEqual {170}
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Compare W26, 0
	105 JumpIfNotEqual {116}
	106 Move X8, [X19+48]
	107 Move X1, X24
	108 Move W2, W20
	109 Move X3, X31
	110 Add X0, X23, X8
	111 Call Buffer.Memcpy, X0, X1, X2
	112 Move X0, X21
	113 Move X1, X22
	114 Move X2, X31
	115 Call Interlocked.Exchange, X0, X1
	116 Move X20, [X31+80]
	117 Move X19, [X31+88]
	118 Move X22, [X31+64]
	119 Move X21, [X31+72]
	120 Move X24, [X31+48]
	121 Move X23, [X31+56]
	122 Move X26, [X31+32]
	123 Move X25, [X31+40]
	124 Move X30, [X31+16]
	125 Move X27, [X31+24]
	126 Add X31, X31, 96
	127 Return 
	128 Move X0, 0xE3B000
	129 Move X0, [X0+1960]
	130 Call 0x1C17D08
	131 Call 0x1C17F10
	132 Move X19, X0
	133 Move X0, 0xE40000
	134 Move X0, [X0+3176]
	135 Call 0x1C17D08
	136 Move X1, X0
	137 Move X0, X19
	138 Call IOException..ctor, X0, X1
	139 Move X0, 0xE0D000
	140 Move X0, [X0+2880]
	141 Call 0x1C17D08
	142 Call 0x1C17F10
	143 Move X19, X0
	144 Move X0, 0xE40000
	145 Move X0, [X0+3544]
	146 Call 0x1C17D08
	147 Move X1, X0
	148 Move X0, X19
	149 Move X2, X31
	150 Call NotSupportedException..ctor, X0, X1
	151 Move X0, 0xE15000
	152 Move X0, [X0+1400]
	153 Call 0x1C17D08
	154 Call 0x1C17F10
	155 Move X19, X0
	156 Move X0, 0xE40000
	157 Move X0, [X0+3552]
	158 Call 0x1C17D08
	159 Move X1, X0
	160 Move X0, X19
	161 Move X2, X31
	162 Call ArgumentException..ctor, X0, X1
	163 Move X0, 0xE40000
	164 Move X0, [X0+3560]
	165 Call 0x1C17D08
	166 Move X1, X0
	167 Move X0, X19
	168 Call 0x1C17DEC
	169 Call 0x1C17F20
	170 Move X0, X25
	171 Call 0x1C17F18
	172 Call 0x1C17F20
	173 Move X26, X0
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X0, X26
	176 Call 0x3EB2AD0
	177 Move X25, [X0]
	178 Call 0x3EB2AE0
	179 Move W26, W31
	180 Move X25, X31
	181 Move X26, X0
	182 Move X8, [X31+8]
	183 Compare X8, 0
	184 JumpIfEqual {191}
	185 Move X0, [X19+40]
	186 Compare X0, 0
	187 JumpIfNotEqual {189}
	188 Call 0x1C17F20
	189 Move X1, X31
	190 Call SafeBuffer.ReleasePointer, X0
	191 Compare X25, 0
	192 JumpIfNotEqual {195}
	193 Move X0, X26
	194 Call 0x1D2D690
	195 Move X0, X25
	196 Call 0x1C17F18
	197 Call 0x1991590

Method: System.Threading.Tasks.Task WriteAsync(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x032EC9E8 STP X31, X31, [X31]
	0x032EC9EC CBZ X23, 0x32ECBC8
	0x032EC9F0 CBZ X8, 0x32ECBC4
	0x032EC9F4 CMP X20, 0x0
	0x032EC9F8 CSEL X20, X23, X20, EQ
	0x032EC9FC STR X23, [X8 + 0x98]
	0x032ECA00 TBZ X22, 0x0, 0x32ECA2C
	0x032ECA04 CBZ X21, 0x32ECA58
	0x032ECA08 CBZ X19, 0x32ECBC4
	0x032ECA0C STR X21, [X19 + 0xA0]
	0x032ECA10 STR X20, [X19 + 0x90]
	0x032ECA14 LDP X20, X19, [X31 + 0x40]
	0x032ECA18 LDP X22, X21, [X31 + 0x30]
	0x032ECA1C LDP X24, X23, [X31 + 0x20]
	0x032ECA20 LDR X30, [X31 + 0x10]
	0x032ECA24 ADD X31, X31, 0x50
	0x032ECA28 RET
	0x032ECA2C ADRP X8, 0xE2E000
	0x032ECA30 LDR X8, [X8 + 0x1D0]
	0x032ECA34 LDR X0, [X8]
	0x032ECA38 LDR W8, [X0 + 0xE0]
	0x032ECA3C CBNZ W8, 0x32ECA44
	0x032ECA40 BL 0x1C16DFC
	0x032ECA44 MOV X0, X20
	0x032ECA48 MOV X1, X31
	0x032ECA4C BL 0x32EE2E0
	0x032ECA50 MOV X20, X0
	0x032ECA54 CBNZ X21, 0x32ECA08
	0x032ECA58 ADRP X23, 0x10ED000
	0x032ECA5C LDRB W8, [X23 + 0x762]
	0x032ECA60 CBZ W8, 0x32ECA80
	0x032ECA64 CBZ X20, 0x32ECA98
	0x032ECA68 MOV X0, X20
	0x032ECA6C MOV X1, X31
	0x032ECA70 BL 0x3225708
	0x032ECA74 LDR W21, [X20 + 0x10]
	0x032ECA78 MOV X22, X0
	0x032ECA7C B 0x32ECAA0
	0x032ECA80 ADRP X0, 0xE2E000
	0x032ECA84 LDR X0, [X0 + 0x290]
	0x032ECA88 BL 0x1C16CF4
	0x032ECA8C MOVZ W8, 0x1
	0x032ECA90 STRB W8, [X23 + 0x762]
	0x032ECA94 CBNZ X20, 0x32ECA68
	0x032ECA98 MOV X22, X31
	0x032ECA9C MOV X21, X31
	0x032ECAA0 ADRP X24, 0xE32000
	0x032ECAA4 LDR X24, [X24 + 0xD70]
	0x032ECAA8 LDR X0, [X24]
	0x032ECAAC LDR W8, [X0 + 0xE0]
	0x032ECAB0 CBNZ W8, 0x32ECAB8
	0x032ECAB4 BL 0x1C16DFC
	0x032ECAB8 MOV X0, X22
	0x032ECABC MOV X1, X21
	0x032ECAC0 BL 0x32E52EC
	0x032ECAC4 TBZ X0, 0x0, 0x32ECAE8
	0x032ECAC8 LDRB W8, [X23 + 0x762]
	0x032ECACC CBZ W8, 0x32ECB10
	0x032ECAD0 CBZ X20, 0x32ECB28
	0x032ECAD4 MOV X0, X20
	0x032ECAD8 MOV X1, X31
	0x032ECADC BL 0x3225708
	0x032ECAE0 LDR W1, [X20 + 0x10]
	0x032ECAE4 B 0x32ECBA0
	0x032ECAE8 ADRP X21, 0x10F0000
	0x032ECAEC LDRB W8, [X21 + 0x3AB]
	0x032ECAF0 CBZ W8, 0x32ECB34
	0x032ECAF4 CBZ X20, 0x32ECB4C
	0x032ECAF8 MOV X0, X20
	0x032ECAFC MOV X1, X31
	0x032ECB00 BL 0x3225708
	0x032ECB04 LDR W21, [X20 + 0x10]
	0x032ECB08 MOV X22, X0
	0x032ECB0C B 0x32ECB54
	0x032ECB10 ADRP X0, 0xE2E000
	0x032ECB14 LDR X0, [X0 + 0x290]
	0x032ECB18 BL 0x1C16CF4
	0x032ECB1C MOVZ W8, 0x1
	0x032ECB20 STRB W8, [X23 + 0x762]
	0x032ECB24 CBNZ X20, 0x32ECAD4
	0x032ECB28 MOV X0, X31
	0x032ECB2C MOV X1, X31
	0x032ECB30 B 0x32ECBA0
	0x032ECB34 ADRP X0, 0xE2E000
	0x032ECB38 LDR X0, [X0 + 0x290]
	0x032ECB3C BL 0x1C16CF4
	0x032ECB40 MOVZ W8, 0x1
	0x032ECB44 STRB W8, [X21 + 0x3AB]
	0x032ECB48 CBNZ X20, 0x32ECAF8
	0x032ECB4C MOV X22, X31
	0x032ECB50 MOV X21, X31
	0x032ECB54 LDR X0, [X24]
	0x032ECB58 LDR W8, [X0 + 0xE0]
	0x032ECB5C CBNZ W8, 0x32ECB64
	0x032ECB60 BL 0x1C16DFC
	0x032ECB64 MOV X0, X22
	0x032ECB68 MOV X1, X21
	0x032ECB6C BL 0x32E5368
	0x032ECB70 ADRP X8, 0xE2E000
	0x032ECB74 LDR X8, [X8 + 0x1D0]
	0x032ECB78 MOV X21, X0
	0x032ECB7C MOV X22, X1
	0x032ECB80 LDR X0, [X8]
	0x032ECB84 LDR W8, [X0 + 0xE0]
	0x032ECB88 CBNZ W8, 0x32ECB90
	0x032ECB8C BL 0x1C16DFC
	0x032ECB90 MOV X0, X21
	0x032ECB94 MOV X1, X22
	0x032ECB98 MOV X2, X31
	0x032ECB9C BL 0x32FE900
	0x032ECBA0 ADRP X8, 0xE3A000
	0x032ECBA4 LDR X8, [X8 + 0xFD8]
	0x032ECBA8 STP X0, X1, [X31]
	0x032ECBAC ADD X0, X31, 0x0
	0x032ECBB0 LDR X8, [X8]
	0x032ECBB4 MOV X1, X8
	0x032ECBB8 BL 0x25BED38
	0x032ECBBC MOV X21, X0
	0x032ECBC0 CBNZ X19, 0x32ECA0C
	0x032ECBC4 BL 0x1C16F20
	0x032ECBC8 ADRP X0, 0xE0C000
	0x032ECBCC LDR X0, [X0 + 0x528]
	0x032ECBD0 BL 0x1C16D08
	0x032ECBD4 BL 0x1C16F10
	0x032ECBD8 MOV X19, X0
	0x032ECBDC ADRP X0, 0xE12000
	0x032ECBE0 LDR X0, [X0 + 0x120]
	0x032ECBE4 BL 0x1C16D08
	0x032ECBE8 MOV X1, X0
	0x032ECBEC MOV X0, X19
	0x032ECBF0 MOV X2, X31
	0x032ECBF4 BL 0x330E100
	0x032ECBF8 ADRP X0, 0xE3A000
	0x032ECBFC LDR X0, [X0 + 0xFE0]
	0x032ECC00 BL 0x1C16D08
	0x032ECC04 MOV X1, X0
	0x032ECC08 MOV X0, X19
	0x032ECC0C BL 0x1C16DEC
	0x032ECC10 MOV X4, X31
	0x032ECC14 B 0x32EEA18
	0x032ECC18 STR X30, [X31 - 0x20]!
	0x032ECC1C STP X20, X19, [X31 + 0x10]
	0x032ECC20 ADRP X20, 0x10F0000
	0x032ECC24 ADRP X19, 0xE32000
	0x032ECC28 LDRB W8, [X20 + 0xA01]
	0x032ECC2C LDR X19, [X19 + 0xD38]
	0x032ECC30 TBNZ X8, 0x0, 0x32ECC48
	0x032ECC34 ADRP X0, 0xE32000
	0x032ECC38 LDR X0, [X0 + 0xD38]
	0x032ECC3C BL 0x1C16CF4
	0x032ECC40 MOVZ W8, 0x1
	0x032ECC44 STRB W8, [X20 + 0xA01]
	0x032ECC48 LDR X0, [X19]
	0x032ECC4C LDR W8, [X0 + 0xE0]
	0x032ECC50 CBNZ W8, 0x32ECC5C
	0x032ECC54 BL 0x1C16DFC
	0x032ECC58 LDR X0, [X19]
	0x032ECC5C LDR X8, [X0 + 0xB8]
	0x032ECC60 LDP X20, X19, [X31 + 0x10]
	0x032ECC64 LDR X0, [X8]
	0x032ECC68 LDR X30, [X31], #0x20
	0x032ECC6C RET
	0x032ECC70 STR X30, [X31 - 0x20]!
	0x032ECC74 STP X20, X19, [X31 + 0x10]
	0x032ECC78 ADRP X20, 0x10F0000
	0x032ECC7C ADRP X19, 0xE32000
	0x032ECC80 LDRB W8, [X20 + 0xA02]
	0x032ECC84 LDR X19, [X19 + 0xD38]
	0x032ECC88 TBNZ X8, 0x0, 0x32ECCA0
	0x032ECC8C ADRP X0, 0xE32000
	0x032ECC90 LDR X0, [X0 + 0xD38]
	0x032ECC94 BL 0x1C16CF4
	0x032ECC98 MOVZ W8, 0x1
	0x032ECC9C STRB W8, [X20 + 0xA02]
	0x032ECCA0 LDR X0, [X19]
	0x032ECCA4 LDR W8, [X0 + 0xE0]
	0x032ECCA8 CBNZ W8, 0x32ECCB4
	0x032ECCAC BL 0x1C16DFC
	0x032ECCB0 LDR X0, [X19]
	0x032ECCB4 LDR X8, [X0 + 0xB8]
	0x032ECCB8 LDP X20, X19, [X31 + 0x10]
	0x032ECCBC LDR X0, [X8 + 0x10]
	0x032ECCC0 LDR X30, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x10F1000
	009 Move W8, [X23+2549]
	010 Move W19, W3
	011 Move W20, W2
	012 Move X21, X1
	013 Move X22, X0
	014 Move [X31+8], X4
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xE10000
	020 Move X0, [X0+2008]
	021 Call 0x1C17CF4
	022 Move X0, 0xE09000
	023 Move X0, [X0+1976]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2549], W8
	027 Compare X21, 0
	028 JumpIfEqual {105}
	029 Move TEMP, X20
	030 And TEMP, TEMP, -2147483648
	031 Compare TEMP, -2147483648
	032 JumpIfEqual {122}
	033 Move TEMP, X19
	034 And TEMP, TEMP, -2147483648
	035 Compare TEMP, -2147483648
	036 JumpIfEqual {129}
	037 Move W8, [X21+24]
	038 Subtract W8, W8, W20
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, 0xE10000
	041 Move X8, [X8+2008]
	042 Move X0, [X8]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Add X0, X31, 8
	048 Move X1, X31
	049 Call CancellationToken.get_IsCancellationRequested, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {65}
	054 Move X8, 0xE09000
	055 Move X8, [X8+1976]
	056 Move X19, [X31+8]
	057 Move X0, [X8]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X19
	063 Move X1, X31
	064 Call Task.FromCanceled, X0
	065 Move X8, [X22]
	066 Move X9, [X8+904]
	067 Move X4, [X8+912]
	068 Move X0, X22
	069 Move X1, X21
	070 Move W2, W20
	071 Move W3, W19
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move X19, 0xE09000
	074 Move X19, [X19+1976]
	075 Move X0, [X19]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X20, 0x10ED000
	081 Move W8, [X20+3869]
	082 Compare W8, 0
	083 JumpIfNotEqual {89}
	084 Move X0, 0xE09000
	085 Move X0, [X0+1976]
	086 Call 0x1C17CF4
	087 Move W8, 1
	088 Move [X20+3869], W8
	089 Move X0, [X19]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {95}
	093 Call 0x1C17DFC
	094 Move X0, [X19]
	095 Move X8, [X0+184]
	096 Move X0, [X8+48]
	097 Move X20, [X31+48]
	098 Move X19, [X31+56]
	099 Move X22, [X31+32]
	100 Move X21, [X31+40]
	101 Move X30, [X31+16]
	102 Move X23, [X31+24]
	103 Add X31, X31, 64
	104 Return X0
	105 Move X0, 0xE0D000
	106 Move X0, [X0+1320]
	107 Call 0x1C17D08
	108 Call 0x1C17F10
	109 Move X19, X0
	110 Move X0, 0xE33000
	111 Move X0, [X0+3912]
	112 Call 0x1C17D08
	113 Move X20, X0
	114 Move X0, 0xE3B000
	115 Move X0, [X0+3136]
	116 Call 0x1C17D08
	117 Move X2, X0
	118 Move X0, X19
	119 Move X1, X20
	120 Move X3, X31
	121 Call ArgumentNullException..ctor, X0, X1, X2
	122 Move X0, 0xE10000
	123 Move X0, [X0+1888]
	124 Call 0x1C17D08
	125 Call 0x1C17F10
	126 Move X19, X0
	127 Move X0, 0xE37000
	128 Move X0, [X0+3472]
	129 Move X0, 0xE10000
	130 Move X0, [X0+1888]
	131 Call 0x1C17D08
	132 Call 0x1C17F10
	133 Move X19, X0
	134 Move X0, 0xE30000
	135 Move X0, [X0+1608]
	136 Call 0x1C17D08
	137 Move X20, X0
	138 Move X0, 0xE30000
	139 Move X0, [X0+1648]
	140 Call 0x1C17D08
	141 Move X2, X0
	142 Move X0, X19
	143 Move X1, X20
	144 Move X3, X31
	145 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	146 Move X0, 0xE10000
	147 Move X0, [X0+1400]
	148 Call 0x1C17D08
	149 Call 0x1C17F10
	150 Move X19, X0
	151 Move X0, 0xE30000
	152 Move X0, [X0+1888]
	153 Call 0x1C17D08
	154 Move X1, X0
	155 Move X0, X19
	156 Move X2, X31
	157 Call ArgumentException..ctor, X0, X1
	158 Move X0, 0xE3B000
	159 Move X0, [X0+3960]
	160 Call 0x1C17D08
	161 Move X1, X0
	162 Move X0, X19
	163 Call 0x1C17DEC
	164 Move X19, X0
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move X0, X19
	167 Call 0x3EB2AD0
	168 Move X19, X0
	169 Move X0, 0xE08000
	170 Move X0, [X0+2000]
	171 Call 0x1C17D08
	172 Move X8, [X19]
	173 Move X1, [X8]
	174 Call 0x1C18270
	175 Move TEMP, X0
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfNotEqual {191}
	179 Move X19, [X19]
	180 Call 0x3EB2AE0
	181 Move X0, 0xE09000
	182 Move X0, [X0+1976]
	183 Call 0x1C17D08
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {188}
	187 Call 0x1C17DFC
	188 Move X0, X19
	189 Move X1, X31
	190 Call Task.FromException, X0
	191 Move W0, 8
	192 Call 0x3EB2AF0
	193 Move X8, [X19]
	194 Move [X0], X8
	195 Move X1, 0xBC9000
	196 Add X1, X1, 3672
	197 Move X2, X31
	198 Call 0x3EB2B00
	199 Move X19, X0
	200 Call 0x3EB2AE0
	201 Move X0, X19
	202 Call 0x1D2D690
	203 Call 0x1991590

Method: System.Threading.Tasks.ValueTask WriteAsync(System.ReadOnlyMemory`1<System.Byte> buffer, System.Threading.CancellationToken cancellationToken = null)

Disassembly:
	0x032ECCC4 RET
	0x032ECCC8 STP X30, X19, [X31 - 0x10]!
	0x032ECCCC MOV X1, X31
	0x032ECCD0 MOV X19, X0
	0x032ECCD4 BL 0x33BDD8C
	0x032ECCD8 MOVZ W8, 0x1
	0x032ECCDC MOVZ W9, 0x6
	0x032ECCE0 STRB W8, [X19 + 0x11]
	0x032ECCE4 STR W9, [X19 + 0x14]
	0x032ECCE8 LDP X30, X19, [X31], #0x10
	0x032ECCEC RET
	0x032ECCF0 LDRB W0, [X0 + 0x10]
	0x032ECCF4 RET
	0x032ECCF8 AND W8, W1, 0x1
	0x032ECCFC STRB W8, [X0 + 0x10]
	0x032ECD00 RET
	0x032ECD04 LDRB W0, [X0 + 0x11]
	0x032ECD08 RET
	0x032ECD0C AND W8, W1, 0x1
	0x032ECD10 STRB W8, [X0 + 0x11]
	0x032ECD14 RET
	0x032ECD18 LDR W0, [X0 + 0x14]
	0x032ECD1C RET
	0x032ECD20 STR W1, [X0 + 0x14]
	0x032ECD24 RET
	0x032ECD28 LDR W0, [X0 + 0x18]
	0x032ECD2C RET
	0x032ECD30 STR W1, [X0 + 0x18]
	0x032ECD34 RET
	0x032ECD38 LDR W0, [X0 + 0x1C]
	0x032ECD3C RET
	0x032ECD40 LDRB W0, [X0 + 0x20]
	0x032ECD44 RET
	0x032ECD48 STR D8, [X31 - 0x30]!
	0x032ECD4C STP X30, X21, [X31 + 0x10]
	0x032ECD50 STP X20, X19, [X31 + 0x20]
	0x032ECD54 ADRP X19, 0x10F0000
	0x032ECD58 ADRP X20, 0xE32000
	0x032ECD5C LDRB W8, [X19 + 0xA03]
	0x032ECD60 LDR X20, [X20 + 0xD38]
	0x032ECD64 TBNZ X8, 0x0, 0x32ECD7C
	0x032ECD68 ADRP X0, 0xE32000
	0x032ECD6C LDR X0, [X0 + 0xD38]
	0x032ECD70 BL 0x1C16CF4
	0x032ECD74 MOVZ W8, 0x1
	0x032ECD78 STRB W8, [X19 + 0xA03]
	0x032ECD7C LDR X0, [X20]
	0x032ECD80 BL 0x1C16F10
	0x032ECD84 MOV X1, X31
	0x032ECD88 MOV X19, X0
	0x032ECD8C BL 0x33BDD8C
	0x032ECD90 ADRP X8, 0xFFFFFFFFFD801000
	0x032ECD94 LDR V8, [X8 + 0x640]
	0x032ECD98 STRB W31, [X19 + 0x11]
	0x032ECD9C STUR D8, [X19 + 0x14]
	0x032ECDA0 LDR X8, [X20]
	0x032ECDA4 LDR X8, [X8 + 0xB8]
	0x032ECDA8 STR X19, [X8]
	0x032ECDAC LDR X0, [X20]
	0x032ECDB0 BL 0x1C16F10
	0x032ECDB4 MOV X1, X31
	0x032ECDB8 MOV X19, X0
	0x032ECDBC BL 0x33BDD8C
	0x032ECDC0 MOVZ W21, 0x1
	0x032ECDC4 STRH W21, [X19 + 0x10]
	0x032ECDC8 STUR D8, [X19 + 0x14]
	0x032ECDCC LDR X0, [X20]
	0x032ECDD0 LDR X8, [X0 + 0xB8]
	0x032ECDD4 STR X19, [X8 + 0x8]
	0x032ECDD8 BL 0x1C16F10
	0x032ECDDC MOV X1, X31
	0x032ECDE0 MOV X19, X0
	0x032ECDE4 BL 0x33BDD8C
	0x032ECDE8 MOVZ W8, 0x6
	0x032ECDEC STRB W21, [X19 + 0x11]
	0x032ECDF0 STR W8, [X19 + 0x14]
	0x032ECDF4 LDR X8, [X20]
	0x032ECDF8 LDP X30, X21, [X31 + 0x10]
	0x032ECDFC LDR X8, [X8 + 0xB8]
	0x032ECE00 STR X19, [X8 + 0x10]
	0x032ECE04 LDP X20, X19, [X31 + 0x20]
	0x032ECE08 LDR V8, [X31], #0x30
	0x032ECE0C RET
	0x032ECE10 STR X30, [X31 - 0x20]!
	0x032ECE14 STP X20, X19, [X31 + 0x10]
	0x032ECE18 ADRP X20, 0x10F0000
	0x032ECE1C LDRB W8, [X20 + 0xA04]
	0x032ECE20 MOV X19, X0
	0x032ECE24 TBNZ X8, 0x0, 0x32ECE3C
	0x032ECE28 ADRP X0, 0xE36000
	0x032ECE2C LDR X0, [X0 + 0xCC8]
	0x032ECE30 BL 0x1C16CF4
	0x032ECE34 MOVZ W8, 0x1
	0x032ECE38 STRB W8, [X20 + 0xA04]
	0x032ECE3C CBZ X19, 0x32ECE84
	0x032ECE40 ADRP X8, 0xE36000
	0x032ECE44 LDR X8, [X8 + 0xCC8]
	0x032ECE48 LDR X0, [X8]
	0x032ECE4C BL 0x1C16F10
	0x032ECE50 MOV X20, X0
	0x032ECE54 MOV X0, X31
	0x032ECE58 BL 0x3241948
	0x032ECE5C MOV X2, X0
	0x032ECE60 MOVZ W3, 0x1
	0x032ECE64 MOVZ W4, 0x400
	0x032ECE68 MOV X0, X20
	0x032ECE6C MOV X1, X19
	0x032ECE70 BL 0x32E6898
	0x032ECE74 MOV X0, X20
	0x032ECE78 LDP X20, X19, [X31 + 0x10]
	0x032ECE7C LDR X30, [X31], #0x20
	0x032ECE80 RET
	0x032ECE84 ADRP X0, 0xE0C000
	0x032ECE88 LDR X0, [X0 + 0x528]
	0x032ECE8C BL 0x1C16D08
	0x032ECE90 BL 0x1C16F10
	0x032ECE94 MOV X19, X0
	0x032ECE98 ADRP X0, 0xE12000
	0x032ECE9C LDR X0, [X0 + 0x120]
	0x032ECEA0 BL 0x1C16D08
	0x032ECEA4 MOV X1, X0
	0x032ECEA8 MOV X0, X19
	0x032ECEAC MOV X2, X31
	0x032ECEB0 BL 0x330E100
	0x032ECEB4 ADRP X0, 0xE3A000
	0x032ECEB8 LDR X0, [X0 + 0xFE8]
	0x032ECEBC BL 0x1C16D08
	0x032ECEC0 MOV X1, X0
	0x032ECEC4 MOV X0, X19
	0x032ECEC8 BL 0x1C16DEC
	0x032ECECC STR X30, [X31 - 0x20]!
	0x032ECED0 STP X20, X19, [X31 + 0x10]
	0x032ECED4 ADRP X20, 0x10F0000
	0x032ECED8 LDRB W8, [X20 + 0xA05]
	0x032ECEDC MOV X19, X0
	0x032ECEE0 TBNZ X8, 0x0, 0x32ECEF8
	0x032ECEE4 ADRP X0, 0xE35000
	0x032ECEE8 LDR X0, [X0 + 0xD08]
	0x032ECEEC BL 0x1C16CF4
	0x032ECEF0 MOVZ W8, 0x1
	0x032ECEF4 STRB W8, [X20 + 0xA05]
	0x032ECEF8 CBZ X19, 0x32ECF2C
	0x032ECEFC ADRP X8, 0xE35000
	0x032ECF00 LDR X8, [X8 + 0xD08]
	0x032ECF04 LDR X0, [X8]
	0x032ECF08 BL 0x1C16F10
	0x032ECF0C MOV X1, X19
	0x032ECF10 MOV W2, W31
	0x032ECF14 MOV X20, X0
	0x032ECF18 BL 0x32E879C
	0x032ECF1C MOV X0, X20
	0x032ECF20 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X23, 0x10F1000
	009 Move [X31+32], X1
	010 Move [X31+40], X2
	011 Move [X31+24], X3
	012 Move X22, 0xE10000
	013 Move W8, [X23+2550]
	014 Move X22, [X22+2008]
	015 Move X20, X2
	016 Move X21, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {48}
	022 Move X0, 0xE3B000
	023 Move X0, [X0+3312]
	024 Call 0x1C17CF4
	025 Move X0, 0xE3B000
	026 Move X0, [X0+3320]
	027 Call 0x1C17CF4
	028 Move X0, 0xE3B000
	029 Move X0, [X0+3328]
	030 Call 0x1C17CF4
	031 Move X0, 0xE30000
	032 Move X0, [X0+1456]
	033 Call 0x1C17CF4
	034 Move X0, 0xE10000
	035 Move X0, [X0+2008]
	036 Call 0x1C17CF4
	037 Move X0, 0xE3B000
	038 Move X0, [X0+3336]
	039 Call 0x1C17CF4
	040 Move X0, 0xE3B000
	041 Move X0, [X0+3456]
	042 Call 0x1C17CF4
	043 Move X0, 0xE09000
	044 Move X0, [X0+1976]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X23+2550], W8
	048 Move X0, [X22]
	049 Move [X31+8], X31
	050 Move [X31+16], X31
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Add X0, X31, 24
	056 Move X1, X31
	057 Call CancellationToken.get_IsCancellationRequested, X0
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {80}
	062 Move X8, 0xE09000
	063 Move X8, [X8+1976]
	064 Move X19, [X31+24]
	065 Move X0, [X8]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X19
	071 Move X1, X31
	072 Call Task.FromCanceled, X0
	073 Move X19, X0
	074 Compare X0, 0
	075 JumpIfNotEqual {79}
	076 Move W0, 38
	077 Move X1, X31
	078 Call ThrowHelper.ThrowArgumentNullException, X0
	079 Move W1, 0x10000
	080 Move X8, 0xE3B000
	081 Move X8, [X8+3336]
	082 Move X3, [X8]
	083 Add X2, X31, 8
	084 Move X0, X21
	085 Move X1, X20
	086 Call 0x2219D10, X0, X1
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {106}
	091 Move X8, 0xE30000
	092 Move X8, [X8+1456]
	093 Move X0, [X8]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move X8, [X19]
	099 Move X1, [X31+8]
	100 Move W2, [X31+16]
	101 Move W3, [X31+20]
	102 Move X9, [X8+904]
	103 Move X4, [X8+912]
	104 Move X0, X19
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move X8, 0xE3B000
	107 Move X8, [X8+3456]
	108 Move X1, [X8]
	109 Add X0, X31, 32
	110 Call 0x25D8918
	111 Move X8, [X19]
	112 Move X2, X0
	113 Move X4, X1
	114 Move X9, [X8+920]
	115 Move X3, [X8+928]
	116 Move X0, X19
	117 Move X1, X2
	118 Move X2, X4
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move X1, X31
	121 Move X19, X31
	122 Move X0, X19
	123 Move X20, [X31+80]
	124 Move X19, [X31+88]
	125 Move X22, [X31+64]
	126 Move X21, [X31+72]
	127 Move X30, [X31+48]
	128 Move X23, [X31+56]
	129 Add X31, X31, 96
	130 Return X0
	131 Move X19, X0
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X0, X19
	134 Call 0x3EB2AD0
	135 Move X19, X0
	136 Move X0, 0xE08000
	137 Move X0, [X0+2000]
	138 Call 0x1C17D08
	139 Move X8, [X19]
	140 Move X1, [X8]
	141 Call 0x1C18270
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfNotEqual {158}
	146 Move X19, [X19]
	147 Call 0x3EB2AE0
	148 Move X0, 0xE09000
	149 Move X0, [X0+1976]
	150 Call 0x1C17D08
	151 Move W8, [X0+224]
	152 Compare W8, 0
	153 JumpIfNotEqual {155}
	154 Call 0x1C17DFC
	155 Move X0, X19
	156 Move X1, X31
	157 Call Task.FromException, X0
	158 Move W0, 8
	159 Call 0x3EB2AF0
	160 Move X8, [X19]
	161 Move [X0], X8
	162 Move X1, 0xBC9000
	163 Add X1, X1, 3672
	164 Move X2, X31
	165 Call 0x3EB2B00
	166 Move X19, X0
	167 Call 0x3EB2AE0
	168 Move X0, X19
	169 Call 0x1D2D690
	170 Call 0x1991590

Method: System.Void WriteByte(System.Byte value)

Disassembly:
	0x032ECF24 LDR X30, [X31], #0x20
	0x032ECF28 RET
	0x032ECF2C ADRP X0, 0xE0C000
	0x032ECF30 LDR X0, [X0 + 0x528]
	0x032ECF34 BL 0x1C16D08
	0x032ECF38 BL 0x1C16F10
	0x032ECF3C MOV X19, X0
	0x032ECF40 ADRP X0, 0xE12000
	0x032ECF44 LDR X0, [X0 + 0x120]
	0x032ECF48 BL 0x1C16D08
	0x032ECF4C MOV X1, X0
	0x032ECF50 MOV X0, X19
	0x032ECF54 MOV X2, X31
	0x032ECF58 BL 0x330E100
	0x032ECF5C ADRP X0, 0xE3A000
	0x032ECF60 LDR X0, [X0 + 0xFF0]
	0x032ECF64 BL 0x1C16D08
	0x032ECF68 MOV X1, X0
	0x032ECF6C MOV X0, X19
	0x032ECF70 BL 0x1C16DEC
	0x032ECF74 STR X30, [X31 - 0x20]!
	0x032ECF78 STP X20, X19, [X31 + 0x10]
	0x032ECF7C ADRP X20, 0x10F0000
	0x032ECF80 LDRB W8, [X20 + 0xA06]
	0x032ECF84 MOV X19, X0
	0x032ECF88 TBNZ X8, 0x0, 0x32ECFA0
	0x032ECF8C ADRP X0, 0xE35000
	0x032ECF90 LDR X0, [X0 + 0xD08]
	0x032ECF94 BL 0x1C16CF4
	0x032ECF98 MOVZ W8, 0x1
	0x032ECF9C STRB W8, [X20 + 0xA06]
	0x032ECFA0 CBZ X19, 0x32ECFD4
	0x032ECFA4 ADRP X8, 0xE35000
	0x032ECFA8 LDR X8, [X8 + 0xD08]
	0x032ECFAC LDR X0, [X8]
	0x032ECFB0 BL 0x1C16F10
	0x032ECFB4 MOVZ W2, 0x1
	0x032ECFB8 MOV X1, X19
	0x032ECFBC MOV X20, X0
	0x032ECFC0 BL 0x32E879C
	0x032ECFC4 MOV X0, X20
	0x032ECFC8 LDP X20, X19, [X31 + 0x10]
	0x032ECFCC LDR X30, [X31], #0x20
	0x032ECFD0 RET
	0x032ECFD4 ADRP X0, 0xE0C000
	0x032ECFD8 LDR X0, [X0 + 0x528]
	0x032ECFDC BL 0x1C16D08
	0x032ECFE0 BL 0x1C16F10
	0x032ECFE4 MOV X19, X0
	0x032ECFE8 ADRP X0, 0xE12000
	0x032ECFEC LDR X0, [X0 + 0x120]
	0x032ECFF0 BL 0x1C16D08
	0x032ECFF4 MOV X1, X0
	0x032ECFF8 MOV X0, X19
	0x032ECFFC MOV X2, X31
	0x032ED000 BL 0x330E100
	0x032ED004 ADRP X0, 0xE39000
	0x032ED008 LDR X0, [X0 + 0xFF8]
	0x032ED00C BL 0x1C16D08
	0x032ED010 MOV X1, X0
	0x032ED014 MOV X0, X19
	0x032ED018 BL 0x1C16DEC
	0x032ED01C MOVZ W1, 0x1000
	0x032ED020 B 0x32ED024
	0x032ED024 STR X30, [X31 - 0x30]!
	0x032ED028 STP X22, X21, [X31 + 0x10]
	0x032ED02C STP X20, X19, [X31 + 0x20]
	0x032ED030 ADRP X21, 0x10EF000
	0x032ED034 ADRP X22, 0xE34000
	0x032ED038 LDRB W8, [X21 + 0xA07]
	0x032ED03C LDR X22, [X22 + 0x670]
	0x032ED040 MOV W19, W1
	0x032ED044 MOV X20, X0
	0x032ED048 TBNZ X8, 0x0, 0x32ED060
	0x032ED04C ADRP X0, 0xE34000
	0x032ED050 LDR X0, [X0 + 0x670]
	0x032ED054 BL 0x1C16CF4
	0x032ED058 MOVZ W8, 0x1
	0x032ED05C STRB W8, [X21 + 0xA07]
	0x032ED060 LDR X0, [X22]
	0x032ED064 BL 0x1C16F10
	0x032ED068 MOVZ W2, 0x2
	0x032ED06C MOVZ W3, 0x3
	0x032ED070 MOV X1, X20
	0x032ED074 MOV W4, W31
	0x032ED078 MOV W5, W19
	0x032ED07C MOV X6, X31
	0x032ED080 MOV X21, X0
	0x032ED084 BL 0x32F89E8
	0x032ED088 MOV X0, X21
	0x032ED08C LDP X20, X19, [X31 + 0x20]
	0x032ED090 LDP X22, X21, [X31 + 0x10]
	0x032ED094 LDR X30, [X31], #0x30
	0x032ED098 RET
	0x032ED09C STR X30, [X31 - 0x20]!
	0x032ED0A0 STP X20, X19, [X31 + 0x10]
	0x032ED0A4 ADRP X20, 0x10EF000
	0x032ED0A8 LDRB W8, [X20 + 0xA08]
	0x032ED0AC MOV X19, X0
	0x032ED0B0 TBNZ X8, 0x0, 0x32ED0C8
	0x032ED0B4 ADRP X0, 0xE2D000
	0x032ED0B8 LDR X0, [X0 + 0x1D0]
	0x032ED0BC BL 0x1C16CF4
	0x032ED0C0 MOVZ W8, 0x1
	0x032ED0C4 STRB W8, [X20 + 0xA08]
	0x032ED0C8 CBZ X19, 0x32ED100
	0x032ED0CC ADRP X8, 0xE2D000
	0x032ED0D0 LDR X8, [X8 + 0x1D0]
	0x032ED0D4 LDR X0, [X8]
	0x032ED0D8 LDR W8, [X0 + 0xE0]
	0x032ED0DC CBNZ W8, 0x32ED0E4
	0x032ED0E0 BL 0x1C16DFC
	0x032ED0E4 MOV X0, X19
	0x032ED0E8 MOV X1, X31
	0x032ED0EC BL 0x32EE2E0
	0x032ED0F0 LDP X20, X19, [X31 + 0x10]
	0x032ED0F4 MOV X1, X31
	0x032ED0F8 LDR X30, [X31], #0x20
	0x032ED0FC B 0x32EEF10
	0x032ED100 ADRP X0, 0xE0B000
	0x032ED104 LDR X0, [X0 + 0x528]
	0x032ED108 BL 0x1C16D08
	0x032ED10C BL 0x1C16F10
	0x032ED110 MOV X19, X0
	0x032ED114 ADRP X0, 0xE11000
	0x032ED118 LDR X0, [X0 + 0x120]
	0x032ED11C BL 0x1C16D08
	0x032ED120 MOV X1, X0
	0x032ED124 MOV X0, X19
	0x032ED128 MOV X2, X31
	0x032ED12C BL 0x330E100
	0x032ED130 ADRP X0, 0xE3A000
	0x032ED134 LDR X0, [X0]
	0x032ED138 BL 0x1C16D08
	0x032ED13C MOV X1, X0
	0x032ED140 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move W20, W1
	011 Move X19, X0
	012 Move [X31+8], X31
	013 Call UnmanagedMemoryStream.EnsureNotClosed, X0
	014 Move X0, X19
	015 Call UnmanagedMemoryStream.EnsureWriteable, X0
	016 Add X21, X19, 72
	017 Move X0, X21
	018 Move X1, X31
	019 Call Interlocked.Read, X0
	020 Add X24, X19, 56
	021 Move X22, X0
	022 Move X0, X24
	023 Move X1, X31
	024 Call Interlocked.Read, X0
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Add X23, X22, 1
	027 Move TEMP, X23
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {95}
	031 Move X8, [X19+64]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, [X19+40]
	034 Compare X8, 0
	035 JumpIfNotEqual {45}
	036 Subtract X1, X22, X0
	037 Move X8, [X19+48]
	038 Move X2, X31
	039 Add X0, X0, X8
	040 Call Buffer.ZeroMemory, X0, X1
	041 Move X0, X24
	042 Move X1, X23
	043 Move X2, X31
	044 Call Interlocked.Exchange, X0, X1
	045 Move X8, [X19+40]
	046 Compare X8, 0
	047 JumpIfEqual {76}
	048 Move X0, X31
	049 Move [X31+8], X31
	050 Call RuntimeHelpers.PrepareConstrainedRegions
	051 Move X0, [X19+40]
	052 Compare X0, 0
	053 JumpIfEqual {92}
	054 Add X1, X31, 8
	055 Move X2, X31
	056 Call SafeBuffer.AcquirePointer, X0, X1
	057 Move X8, [X31+8]
	058 Move X9, [X19+80]
	059 Move X24, X31
	060 Move W25, 11
	061 Add X8, X22, X8
	062 Move [X8], W20
	063 Move X8, [X31+8]
	064 Compare X8, 0
	065 JumpIfEqual {71}
	066 Move X0, [X19+40]
	067 Compare X0, 0
	068 JumpIfEqual {124}
	069 Move X1, X31
	070 Call SafeBuffer.ReleasePointer, X0
	071 Compare X24, 0
	072 JumpIfNotEqual {93}
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Compare W25, 0
	075 JumpIfNotEqual {82}
	076 Move X8, [X19+48]
	077 Move [X22], W20
	078 Move X0, X21
	079 Move X1, X23
	080 Move X2, X31
	081 Call Interlocked.Exchange, X0, X1
	082 Move X20, [X31+64]
	083 Move X19, [X31+72]
	084 Move X22, [X31+48]
	085 Move X21, [X31+56]
	086 Move X24, [X31+32]
	087 Move X23, [X31+40]
	088 Move X30, [X31+16]
	089 Move X25, [X31+24]
	090 Add X31, X31, 80
	091 Return 
	092 Call 0x1C17F20
	093 Move X0, X24
	094 Call 0x1C17F18
	095 Move X0, 0xE35000
	096 Move X0, [X0+1960]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X19, X0
	100 Move X0, 0xE3A000
	101 Move X0, [X0+3176]
	102 Call 0x1C17D08
	103 Move X1, X0
	104 Move X0, X19
	105 Call IOException..ctor, X0, X1
	106 Move X0, 0xE07000
	107 Move X0, [X0+2880]
	108 Call 0x1C17D08
	109 Call 0x1C17F10
	110 Move X19, X0
	111 Move X0, 0xE3A000
	112 Move X0, [X0+3544]
	113 Call 0x1C17D08
	114 Move X1, X0
	115 Move X0, X19
	116 Move X2, X31
	117 Call NotSupportedException..ctor, X0, X1
	118 Move X0, 0xE3A000
	119 Move X0, [X0+3968]
	120 Call 0x1C17D08
	121 Move X1, X0
	122 Move X0, X19
	123 Call 0x1C17DEC
	124 Call 0x1C17F20
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X25, X0
	127 Move X0, X25
	128 Call 0x3EB2AD0
	129 Move X24, [X0]
	130 Call 0x3EB2AE0
	131 Move W25, W31
	132 Move X24, X31
	133 Move X25, X0
	134 Move X8, [X31+8]
	135 Compare X8, 0
	136 JumpIfEqual {143}
	137 Move X0, [X19+40]
	138 Compare X0, 0
	139 JumpIfNotEqual {141}
	140 Call 0x1C17F20
	141 Move X1, X31
	142 Call SafeBuffer.ReleasePointer, X0
	143 Compare X24, 0
	144 JumpIfNotEqual {147}
	145 Move X0, X25
	146 Call 0x1D2D690
	147 Move X0, X24
	148 Call 0x1C17F18
	149 Call 0x1991590

