Type: System.IO.BinaryReader

Method: System.Void .ctor(System.IO.Stream input)

Disassembly:
	0x032F6054 LDRB W11, [X10 + 0x130]
	0x032F6058 CMP W8, W11
	0x032F605C MOV W8, W23
	0x032F6060 B.CC 0x32F6094
	0x032F6064 LDR X8, [X9 + 0xC8]
	0x032F6068 ADD X8, X8, X11, 0x3, LSL
	0x032F606C LDUR X8, [X8 - 0x8]
	0x032F6070 CMP X8, X10
	0x032F6074 MOV W8, W23
	0x032F6078 B.NE 0x32F6094
	0x032F607C LDP X8, X1, [X9 + 0x1F8]
	0x032F6080 BLR X8
	0x032F6084 CMP W23, 0x1
	0x032F6088 CSET W8, GT
	0x032F608C AND W8, W8, W0, 0x0
	0x032F6090 SUB W8, W23, W8
	0x032F6094 LDRB W9, [X22 + 0x44]
	0x032F6098 LDRB W10, [X22 + 0x45]
	0x032F609C LSLV W8, W8, W9
	0x032F60A0 CMP W8, 0x80
	0x032F60A4 CSEL W3, W8, W29, LT
	0x032F60A8 CBZ W10, 0x32F6104
	0x032F60AC LDR X24, [X22 + 0x10]
	0x032F60B0 CBZ X24, 0x32F61F8
	0x032F60B4 LDR X9, [X24]
	0x032F60B8 LDR X8, [X27]
	0x032F60BC LDRB W11, [X9 + 0x130]
	0x032F60C0 LDRB W10, [X8 + 0x130]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10E7000
	007 Move X22, 0xE2D000
	008 Move W8, [X21+2657]
	009 Move X22, [X22+2088]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE2D000
	017 Move X0, [X0+2088]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2657], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X21, X0
	025 Call UTF8Encoding..ctor, X0
	026 Move X0, X20
	027 Move X1, X19
	028 Move X2, X21
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move W3, W31
	034 Move X30, [X31+48]

Method: System.Void .ctor(System.IO.Stream input, System.Text.Encoding encoding)

Disassembly:
	0x032F6334 ADRP X19, 0xE2C000
	0x032F6338 LDR X19, [X19 + 0xAE0]

ISIL:
	001 Move W3, W31
	002 Call BinaryReader..ctor, X0, X1, X2, X3
	003 Return 

Method: System.Void .ctor(System.IO.Stream input, System.Text.Encoding encoding, System.Boolean leaveOpen)

Disassembly:
	0x032F60C4 CMP W11, W10
	0x032F60C8 B.CC 0x32F61F8
	0x032F60CC LDR X9, [X9 + 0xC8]
	0x032F60D0 ADD X9, X9, X10, 0x3, LSL
	0x032F60D4 LDUR X9, [X9 - 0x8]
	0x032F60D8 CMP X9, X8
	0x032F60DC B.NE 0x32F61F8
	0x032F60E0 LDR W26, [X24 + 0x34]
	0x032F60E4 MOV X0, X24
	0x032F60E8 MOV W1, W3
	0x032F60EC MOV X2, X31
	0x032F60F0 BL 0x32E2CA0
	0x032F60F4 MOV W2, W0
	0x032F60F8 ADD X8, X24, 0x28
	0x032F60FC CBNZ W2, 0x32F6134
	0x032F6100 B 0x32F61D8
	0x032F6104 LDR X0, [X22 + 0x10]
	0x032F6108 CBZ X0, 0x32F61F8
	0x032F610C LDR X8, [X0]
	0x032F6110 LDR X1, [X25]
	0x032F6114 MOV W2, W31
	0x032F6118 LDR X9, [X8 + 0x358]
	0x032F611C LDR X4, [X8 + 0x360]
	0x032F6120 BLR X9
	0x032F6124 MOV W2, W0
	0x032F6128 MOV W26, W31
	0x032F612C MOV X8, X25
	0x032F6130 CBZ W2, 0x32F61D8
	0x032F6134 ORR W9, W2, W26, 0x0
	0x032F6138 TBNZ X9, 0x1F, 0x32F61FC
	0x032F613C MOV W9, W2
	0x032F6140 ADD X9, X9, W26, UXTW
	0x032F6144 UBFM X9, X9, 0x1F, 0x3F
	0x032F6148 CBNZ X9, 0x32F621C
	0x032F614C LDR X8, [X8]
	0x032F6150 CBZ X8, 0x32F61F8
	0x032F6154 LDR W9, [X8 + 0x18]
	0x032F6158 ADD W10, W2, W26
	0x032F615C CMP W10, W9
	0x032F6160 B.GT 0x32F61FC
	0x032F6164 TBNZ X20, 0x1F, 0x32F6230
	0x032F6168 MOV W10, W20
	0x032F616C ADD X11, X10, W23, UXTW
	0x032F6170 UBFM X11, X11, 0x1F, 0x3F
	0x032F6174 CBNZ X11, 0x32F621C
	0x032F6178 CBZ X21, 0x32F61F8
	0x032F617C LDR W11, [X21 + 0x18]
	0x032F6180 ADD W12, W20, W23
	0x032F6184 CMP W12, W11
	0x032F6188 B.GT 0x32F6230
	0x032F618C LDR X0, [X22 + 0x20]
	0x032F6190 CBZ X0, 0x32F61F8
	0x032F6194 CMP W11, 0x0
	0x032F6198 LDR X11, [X0]
	0x032F619C CSEL X13, X31, X28, EQ
	0x032F61A0 CMP W9, 0x0
	0x032F61A4 ADD X8, X8, 0x20
	0x032F61A8 LDP X9, X6, [X11 + 0x1D8]
	0x032F61AC MOV W12, W26
	0x032F61B0 CSEL X8, X31, X8, EQ
	0x032F61B4 ADD X1, X8, X12
	0x032F61B8 ADD X3, X13, X10, 0x1, LSL
	0x032F61BC MOV W4, W23
	0x032F61C0 MOV W5, W31
	0x032F61C4 BLR X9
	0x032F61C8 SUB W23, W23, W0
	0x032F61CC CMP W23, 0x0
	0x032F61D0 ADD W20, W0, W20
	0x032F61D4 B.GT 0x32F6034
	0x032F61D8 SUB W0, W19, W23
	0x032F61DC LDP X20, X19, [X31 + 0x50]
	0x032F61E0 LDP X22, X21, [X31 + 0x40]
	0x032F61E4 LDP X24, X23, [X31 + 0x30]
	0x032F61E8 LDP X26, X25, [X31 + 0x20]
	0x032F61EC LDP X28, X27, [X31 + 0x10]
	0x032F61F0 LDP X29, X30, [X31], #0x60
	0x032F61F4 RET
	0x032F61F8 BL 0x1C16F20
	0x032F61FC ADRP X0, 0xE05000
	0x032F6200 LDR X0, [X0 + 0x760]
	0x032F6204 BL 0x1C16D08
	0x032F6208 BL 0x1C16F10
	0x032F620C MOV X19, X0
	0x032F6210 ADRP X0, 0xE2C000
	0x032F6214 LDR X0, [X0 + 0x328]
	0x032F6218 B 0x32F624C
	0x032F621C BL 0x1C16F30
	0x032F6220 ADRP X8, 0xE31000
	0x032F6224 LDR X8, [X8 + 0x388]
	0x032F6228 LDR X1, [X8]
	0x032F622C BL 0x1C16DEC
	0x032F6230 ADRP X0, 0xE05000
	0x032F6234 LDR X0, [X0 + 0x760]
	0x032F6238 BL 0x1C16D08
	0x032F623C BL 0x1C16F10
	0x032F6240 MOV X19, X0
	0x032F6244 ADRP X0, 0xE31000
	0x032F6248 LDR X0, [X0 + 0x390]
	0x032F624C BL 0x1C16D08
	0x032F6250 MOV X1, X0
	0x032F6254 MOV X0, X19
	0x032F6258 MOV X2, X31
	0x032F625C BL 0x3316014
	0x032F6260 ADRP X0, 0xE31000
	0x032F6264 LDR X0, [X0 + 0x388]
	0x032F6268 BL 0x1C16D08
	0x032F626C MOV X1, X0
	0x032F6270 MOV X0, X19
	0x032F6274 BL 0x1C16DEC
	0x032F6278 STR X30, [X31 - 0x30]!
	0x032F627C STP X22, X21, [X31 + 0x10]
	0x032F6280 STP X20, X19, [X31 + 0x20]
	0x032F6284 ADRP X21, 0x10E6000
	0x032F6288 LDRB W8, [X21 + 0xA68]
	0x032F628C MOV W19, W1
	0x032F6290 MOV X20, X0
	0x032F6294 TBNZ X8, 0x0, 0x32F62B8
	0x032F6298 ADRP X0, 0xE06000
	0x032F629C LDR X0, [X0 + 0x8D8]
	0x032F62A0 BL 0x1C16CF4
	0x032F62A4 ADRP X0, 0xE2C000
	0x032F62A8 LDR X0, [X0 + 0xAE0]
	0x032F62AC BL 0x1C16CF4
	0x032F62B0 MOVZ W8, 0x1
	0x032F62B4 STRB W8, [X21 + 0xA68]
	0x032F62B8 TBNZ X19, 0x1F, 0x32F636C
	0x032F62BC LDR X8, [X20 + 0x10]
	0x032F62C0 CBZ X8, 0x32F63D0
	0x032F62C4 CBZ W19, 0x32F6334
	0x032F62C8 ADRP X22, 0xE06000
	0x032F62CC LDR X22, [X22 + 0x8D8]
	0x032F62D0 MOV W1, W19
	0x032F62D4 LDR X0, [X22]
	0x032F62D8 BL 0x1C16D6C
	0x032F62DC MOV X21, X0
	0x032F62E0 MOV X0, X20
	0x032F62E4 MOV X1, X21
	0x032F62E8 MOV W2, W31
	0x032F62EC MOV W3, W19
	0x032F62F0 BL 0x32F5F84
	0x032F62F4 CMP W0, W19
	0x032F62F8 B.EQ 0x32F6358
	0x032F62FC MOV W20, W0
	0x032F6300 LDR X0, [X22]
	0x032F6304 MOV W1, W20
	0x032F6308 BL 0x1C16D6C
	0x032F630C MOV X19, X0
	0x032F6310 UBFM W4, W20, 0x1F, 0x1E
	0x032F6314 MOV X0, X21
	0x032F6318 MOV W1, W31
	0x032F631C MOV X2, X19
	0x032F6320 MOV W3, W31
	0x032F6324 MOV X5, X31
	0x032F6328 BL 0x33A8750
	0x032F632C MOV X21, X19
	0x032F6330 B 0x32F6358

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x10E7000
	008 Move W8, [X23+2658]
	009 Move W20, W3
	010 Move X21, X2
	011 Move X22, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xDFE000
	018 Move X0, [X0+1560]
	019 Call 0x1C17CF4
	020 Move X0, 0xE31000
	021 Move X0, [X0+3256]
	022 Call 0x1C17CF4
	023 Move X0, 0xDFE000
	024 Move X0, [X0+1728]
	025 Call 0x1C17CF4
	026 Move X0, 0xE2D000
	027 Move X0, [X0+2256]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+2658], W8
	031 Move X0, X19
	032 Move X1, X31
	033 Call Object..ctor, X0
	034 Compare X22, 0
	035 JumpIfEqual {125}
	036 Compare X21, 0
	037 JumpIfEqual {132}
	038 Move X8, [X22]
	039 Move X0, X22
	040 Move X9, [X8+424]
	041 Move X1, [X8+432]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {150}
	047 Move [X19+16], X22
	048 Move X8, [X21]
	049 Move X22, 0xDFE000
	050 Move X23, 0xE2D000
	051 Move X0, X21
	052 Move X9, [X8+824]
	053 Move X1, [X8+832]
	054 Move X22, [X22+1560]
	055 Move X23, [X23+2256]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move [X19+32], X0
	058 Move X8, [X21]
	059 Move W1, 128
	060 Move X0, X21
	061 Move X9, [X8+872]
	062 Move X2, [X8+880]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move [X19+64], W0
	065 Move X8, [X21]
	066 Move W1, 1
	067 Move X0, X21
	068 Move X9, [X8+856]
	069 Move X2, [X8+864]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X8, [X22]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move W9, 16
	074 NotImplemented "Instruction CSEL not yet implemented."
	075 Move X0, X8
	076 Call 0x1C17D6C
	077 Move [X19+24], X0
	078 Move X9, [X21]
	079 Move X8, [X23]
	080 Move W11, [X9+304]
	081 Move W10, [X8+304]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move W8, W31
	084 Move X9, [X9+200]
	085 Add X9, X9, X10
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 NotImplemented "Instruction CSET not yet implemented."
	089 Move X0, [X19+16]
	090 Move [X19+68], W8
	091 Compare X0, 0
	092 JumpIfEqual {170}
	093 Move X21, 0xE31000
	094 Move X22, 0xDFE000
	095 Move X21, [X21+3256]
	096 Move X22, [X22+1728]
	097 Move X1, X31
	098 Call "il2cpp_vm_object_is_inst", X0
	099 Move X8, [X22]
	100 Move X22, [X21]
	101 Move X21, X0
	102 Move W9, [X8+224]
	103 Compare W9, 0
	104 JumpIfNotEqual {107}
	105 Move X0, X8
	106 Call 0x1C17DFC
	107 Move X0, X22
	108 Move X1, X31
	109 And W20, W20, 1
	110 Call Type.GetTypeFromHandle, X0
	111 Move X1, X0
	112 Move X0, X21
	113 Move X2, X31
	114 Call Type.op_Equality, X0, X1
	115 And W8, W0, 1
	116 Move [X19+69], W8
	117 Move [X19+70], W20
	118 Move X20, [X31+32]
	119 Move X19, [X31+40]
	120 Move X22, [X31+16]
	121 Move X21, [X31+24]
	122 Move X30, [X31+48]
	123 Move X23, [X31+56]
	124 Return 
	125 Move X0, 0xE03000
	126 Move X0, [X0+1320]
	127 Call 0x1C17D08
	128 Call 0x1C17F10
	129 Move X19, X0
	130 Move X0, 0xE32000
	131 Move X0, [X0+840]
	132 Move X0, 0xE03000
	133 Move X0, [X0+1320]
	134 Call 0x1C17D08
	135 Call 0x1C17F10
	136 Move X19, X0
	137 Move X0, 0xE2D000
	138 Move X0, [X0+2848]
	139 Call 0x1C17D08
	140 Move X1, X0
	141 Move X0, X19
	142 Move X2, X31
	143 Call ArgumentNullException..ctor, X0, X1
	144 Move X0, 0xE32000
	145 Move X0, [X0+848]
	146 Call 0x1C17D08
	147 Move X1, X0
	148 Move X0, X19
	149 Call 0x1C17DEC
	150 Move X0, 0xE2D000
	151 Move X0, [X0+3368]
	152 Call 0x1C17D08
	153 Move X1, X31
	154 Call Environment.GetResourceString, X0
	155 Move X19, X0
	156 Move X0, 0xE06000
	157 Move X0, [X0+1400]
	158 Call 0x1C17D08
	159 Call 0x1C17F10
	160 Move X1, X19
	161 Move X2, X31
	162 Move X20, X0
	163 Call ArgumentException..ctor, X0, X1
	164 Move X0, 0xE32000
	165 Move X0, [X0+848]
	166 Call 0x1C17D08
	167 Move X1, X0
	168 Move X0, X20
	169 Call 0x1C17DEC
	170 Call 0x1C17F20

Method: System.IO.Stream get_BaseStream()

Disassembly:
	0x032F633C LDR X0, [X19]
	0x032F6340 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void Close()

Disassembly:
	0x032F6344 CBNZ W8, 0x32F6350
	0x032F6348 BL 0x1C16DFC
	0x032F634C LDR X0, [X19]
	0x032F6350 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move X8, [X0]
	002 Move W1, 1
	003 Move X3, [X8+424]
	004 Move X2, [X8+432]
	005 CallNoReturn X3

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x032F6354 LDR X21, [X8]
	0x032F6358 MOV X0, X21
	0x032F635C LDP X20, X19, [X31 + 0x20]
	0x032F6360 LDP X22, X21, [X31 + 0x10]
	0x032F6364 LDR X30, [X31], #0x30
	0x032F6368 RET
	0x032F636C ADRP X0, 0xE25000
	0x032F6370 LDR X0, [X0 + 0x670]
	0x032F6374 BL 0x1C16D08
	0x032F6378 MOV X1, X31
	0x032F637C BL 0x33BDD84
	0x032F6380 MOV X19, X0
	0x032F6384 ADRP X0, 0xE05000
	0x032F6388 LDR X0, [X0 + 0x760]
	0x032F638C BL 0x1C16D08
	0x032F6390 BL 0x1C16F10
	0x032F6394 MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move TEMP, X1
	005 And TEMP, TEMP, 1
	006 Compare TEMP, 1
	007 JumpIfNotEqual {19}
	008 Move X0, [X19+16]
	009 Move [X19+16], X31
	010 Compare X0, 0
	011 JumpIfEqual {19}
	012 Move W8, [X19+70]
	013 Compare W8, 0
	014 JumpIfNotEqual {19}
	015 Move X8, [X0]
	016 Move X9, [X8+632]
	017 Move X1, [X8+640]
	018 NotImplemented "Instruction BLR not yet implemented."
	019 NotImplemented "Instruction MOVI not yet implemented."
	020 Move [X19+32], V0
	021 Move [X19+40], V0
	022 Move [X19+1], V0
	023 Move X30, [X31+16]
	024 Move X19, [X31+24]
	025 Return 

Method: System.Void Dispose()

Disassembly:
	0x032F6398 ADRP X0, 0xE25000
	0x032F639C LDR X0, [X0 + 0x648]
	0x032F63A0 BL 0x1C16D08
	0x032F63A4 MOV X1, X0

ISIL:
	001 Move X8, [X0]
	002 Move W1, 1
	003 Move X3, [X8+424]
	004 Move X2, [X8+432]
	005 CallNoReturn X3

Method: System.Int32 Read()

Disassembly:
	0x032F63A8 MOV X0, X20
	0x032F63AC MOV X2, X19
	0x032F63B0 MOV X3, X31
	0x032F63B4 BL 0x3311888
	0x032F63B8 ADRP X0, 0xE31000
	0x032F63BC LDR X0, [X0 + 0x398]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {6}
	005 Move X30, [X31+16]
	006 Call __Error.FileNotOpen

Method: System.Boolean ReadBoolean()

Disassembly:
	0x032F6628 B 0x32F6650
	0x032F662C ADRP X19, 0xE2C000
	0x032F6630 LDR X19, [X19 + 0xA50]
	0x032F6634 LDR X0, [X19]
	0x032F6638 LDR W8, [X0 + 0xE0]
	0x032F663C CBNZ W8, 0x32F6648
	0x032F6640 BL 0x1C16DFC
	0x032F6644 LDR X0, [X19]
	0x032F6648 LDR X8, [X0 + 0xB8]
	0x032F664C LDR X21, [X8]
	0x032F6650 MOV X0, X21
	0x032F6654 LDP X20, X19, [X31 + 0x20]
	0x032F6658 LDP X22, X21, [X31 + 0x10]
	0x032F665C LDP X30, X23, [X31], #0x30
	0x032F6660 RET
	0x032F6664 BL 0x1C16F20
	0x032F6668 ADRP X0, 0xE25000
	0x032F666C LDR X0, [X0 + 0x670]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move W1, 1
	005 Move X19, X0
	006 Move X9, [X8+728]
	007 Move X2, [X8+736]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move X8, [X19+24]
	010 Compare X8, 0
	011 JumpIfEqual {21}
	012 Move W9, [X8+24]
	013 Compare W9, 0
	014 JumpIfEqual {22}
	015 Move W8, [X8+32]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction CSET not yet implemented."
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return X0
	021 Call 0x1C17F20
	022 Call 0x1C17F28

Method: System.Byte ReadByte()

Disassembly:
	0x032F6670 BL 0x1C16D08
	0x032F6674 MOV X1, X31
	0x032F6678 BL 0x33BDD84
	0x032F667C MOV X19, X0
	0x032F6680 ADRP X0, 0xE05000
	0x032F6684 LDR X0, [X0 + 0x760]
	0x032F6688 BL 0x1C16D08
	0x032F668C BL 0x1C16F10
	0x032F6690 MOV X20, X0
	0x032F6694 ADRP X0, 0xE25000
	0x032F6698 LDR X0, [X0 + 0x648]
	0x032F669C BL 0x1C16D08
	0x032F66A0 MOV X1, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {12}
	005 Move X8, [X0]
	006 Move X9, [X8+888]
	007 Move X1, [X8+896]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Add W31, W0, 1
	010 Move X30, [X31+16]
	011 Return X0
	012 Call __Error.FileNotOpen
	013 Call __Error.EndOfFile

Method: System.SByte ReadSByte()

Disassembly:
	0x032F66A4 MOV X0, X20
	0x032F66A8 MOV X2, X19
	0x032F66AC MOV X3, X31
	0x032F66B0 BL 0x3311888
	0x032F66B4 ADRP X0, 0xE31000
	0x032F66B8 LDR X0, [X0 + 0x3A8]
	0x032F66BC BL 0x1C16D08
	0x032F66C0 MOV X1, X0
	0x032F66C4 MOV X0, X20
	0x032F66C8 BL 0x1C16DEC
	0x032F66CC BL 0x32F4810
	0x032F66D0 STP X30, X21, [X31 - 0x20]!
	0x032F66D4 STP X20, X19, [X31 + 0x10]
	0x032F66D8 LDR X8, [X0 + 0x18]
	0x032F66DC MOV X19, X0
	0x032F66E0 MOV W20, W1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move W1, 1
	005 Move X19, X0
	006 Move X9, [X8+728]
	007 Move X2, [X8+736]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move X8, [X19+24]
	010 Compare X8, 0
	011 JumpIfEqual {19}
	012 Move W9, [X8+24]
	013 Compare W9, 0
	014 JumpIfEqual {20}
	015 Move W0, [X8+32]
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Return X0
	019 Call 0x1C17F20
	020 Call 0x1C17F28

Method: System.Char ReadChar()

Disassembly:
	0x032F66E4 CBZ X8, 0x32F66F8
	0x032F66E8 TBNZ X20, 0x1F, 0x32F6780
	0x032F66EC LDR W8, [X8 + 0x18]
	0x032F66F0 CMP W8, W20
	0x032F66F4 B.LT 0x32F6780
	0x032F66F8 LDR X0, [X19 + 0x10]
	0x032F66FC CBZ X0, 0x32F67E4
	0x032F6700 CMP W20, 0x1
	0x032F6704 B.NE 0x32F6740

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+440]
	004 Move X1, [X8+448]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 Add W31, W0, 1
	007 Move X30, [X31+16]
	008 Return X0
	009 Call __Error.EndOfFile

Method: System.Int16 ReadInt16()

Disassembly:
	0x032F6708 LDR X8, [X0]
	0x032F670C LDR X9, [X8 + 0x378]
	0x032F6710 LDR X1, [X8 + 0x380]
	0x032F6714 BLR X9
	0x032F6718 ADDS W31, W0, 0x1
	0x032F671C B.EQ 0x32F677C
	0x032F6720 LDR X8, [X19 + 0x18]
	0x032F6724 CBZ X8, 0x32F6778
	0x032F6728 LDR W9, [X8 + 0x18]
	0x032F672C CBZ W9, 0x32F67E8
	0x032F6730 STRB W0, [X8 + 0x20]
	0x032F6734 LDP X20, X19, [X31 + 0x10]
	0x032F6738 LDP X30, X21, [X31], #0x20
	0x032F673C RET
	0x032F6740 MOV W21, W31
	0x032F6744 LDR X8, [X0]
	0x032F6748 LDR X1, [X19 + 0x18]
	0x032F674C SUB W3, W20, W21

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move W1, 2
	005 Move X19, X0
	006 Move X9, [X8+728]
	007 Move X2, [X8+736]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move X8, [X19+24]
	010 Compare X8, 0
	011 JumpIfEqual {21}
	012 Move W9, [X8+24]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Compare W9, 0
	015 JumpIfEqual {20}
	016 NotImplemented "Instruction LDRH not yet implemented."
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return X0
	020 Call 0x1C17F28
	021 Call 0x1C17F20

Method: System.UInt16 ReadUInt16()

Disassembly:
	0x032F6750 MOV W2, W21
	0x032F6754 LDR X9, [X8 + 0x358]
	0x032F6758 LDR X4, [X8 + 0x360]
	0x032F675C BLR X9
	0x032F6760 CBZ W0, 0x32F677C
	0x032F6764 ADD W21, W0, W21
	0x032F6768 CMP W21, W20
	0x032F676C B.GE 0x32F6734
	0x032F6770 LDR X0, [X19 + 0x10]
	0x032F6774 CBNZ X0, 0x32F6744
	0x032F6778 BL 0x1C16F20
	0x032F677C BL 0x32F47B8
	0x032F6780 ADRP X0, 0xE31000
	0x032F6784 LDR X0, [X0 + 0x3B0]
	0x032F6788 BL 0x1C16D08
	0x032F678C MOV X1, X31
	0x032F6790 BL 0x33BDD84
	0x032F6794 MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move W1, 2
	005 Move X19, X0
	006 Move X9, [X8+728]
	007 Move X2, [X8+736]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move X8, [X19+24]
	010 Compare X8, 0
	011 JumpIfEqual {21}
	012 Move W9, [X8+24]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Compare W9, 0
	015 JumpIfEqual {20}
	016 NotImplemented "Instruction LDRH not yet implemented."
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return X0
	020 Call 0x1C17F28
	021 Call 0x1C17F20

Method: System.Int32 ReadInt32()

Disassembly:
	0x032F6798 ADRP X0, 0xE05000
	0x032F679C LDR X0, [X0 + 0x760]
	0x032F67A0 BL 0x1C16D08
	0x032F67A4 BL 0x1C16F10
	0x032F67A8 MOV X20, X0
	0x032F67AC ADRP X0, 0xE31000
	0x032F67B0 LDR X0, [X0 + 0x3B8]
	0x032F67B4 BL 0x1C16D08
	0x032F67B8 MOV X1, X0
	0x032F67BC MOV X0, X20
	0x032F67C0 MOV X2, X19
	0x032F67C4 MOV X3, X31
	0x032F67C8 BL 0x3311888
	0x032F67CC ADRP X0, 0xE31000
	0x032F67D0 LDR X0, [X0 + 0x3C0]
	0x032F67D4 BL 0x1C16D08
	0x032F67D8 MOV X1, X0
	0x032F67DC MOV X0, X20
	0x032F67E0 BL 0x1C16DEC
	0x032F67E4 BL 0x32F4810
	0x032F67E8 BL 0x1C16F28
	0x032F67EC STR X30, [X31 - 0x30]!
	0x032F67F0 STP X22, X21, [X31 + 0x10]
	0x032F67F4 STP X20, X19, [X31 + 0x20]
	0x032F67F8 ADRP X21, 0x10E6000
	0x032F67FC ADRP X20, 0xE2C000
	0x032F6800 LDRB W8, [X21 + 0xA6A]
	0x032F6804 LDR X20, [X20 + 0xD10]
	0x032F6808 MOV X19, X0
	0x032F680C TBNZ X8, 0x0, 0x32F683C
	0x032F6810 ADRP X0, 0xDFD000
	0x032F6814 LDR X0, [X0 + 0x618]
	0x032F6818 BL 0x1C16CF4
	0x032F681C ADRP X0, 0xE2C000
	0x032F6820 LDR X0, [X0 + 0xD10]
	0x032F6824 BL 0x1C16CF4
	0x032F6828 ADRP X0, 0xE2C000
	0x032F682C LDR X0, [X0 + 0x828]
	0x032F6830 BL 0x1C16CF4
	0x032F6834 MOVZ W8, 0x1
	0x032F6838 STRB W8, [X21 + 0xA6A]
	0x032F683C ADRP X22, 0xDFD000
	0x032F6840 ADRP X21, 0xE2C000
	0x032F6844 LDR X22, [X22 + 0x618]
	0x032F6848 LDR X21, [X21 + 0x828]
	0x032F684C MOV X0, X19
	0x032F6850 MOV X1, X31
	0x032F6854 BL 0x33BDD8C
	0x032F6858 LDR X0, [X20]
	0x032F685C LDR W8, [X0 + 0xE0]
	0x032F6860 CBNZ W8, 0x32F686C
	0x032F6864 BL 0x1C16DFC
	0x032F6868 LDR X0, [X20]
	0x032F686C LDR X8, [X0 + 0xB8]
	0x032F6870 MOVZ W1, 0x10
	0x032F6874 LDR X8, [X8]
	0x032F6878 STR X8, [X19 + 0x10]
	0x032F687C LDR X0, [X22]
	0x032F6880 BL 0x1C16D6C
	0x032F6884 STR X0, [X19 + 0x18]
	0x032F6888 LDR X0, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10E7000
	005 Move W8, [X20+2659]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE06000
	012 Move X0, [X0+1368]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2659], W8
	016 Move W8, [X19+69]
	017 Compare W8, 0
	018 JumpIfEqual {39}
	019 Move X0, [X19+16]
	020 Compare X0, 0
	021 JumpIfEqual {67}
	022 Move X8, 0xE06000
	023 Move X8, [X8+1368]
	024 Move X9, [X0]
	025 Move X8, [X8]
	026 Move W11, [X9+304]
	027 Move W10, [X8+304]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X9, [X9+200]
	030 Add X9, X9, X10
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X1, X31
	036 Move X30, [X31+32]
	037 Call MemoryStream.InternalReadInt32, X0
	038 Return X0
	039 Move X8, [X19]
	040 Move W1, 4
	041 Move X0, X19
	042 Move X9, [X8+728]
	043 Move X2, [X8+736]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X8, [X19+24]
	046 Compare X8, 0
	047 JumpIfEqual {65}
	048 Move W9, [X8+24]
	049 Compare W9, 0
	050 JumpIfEqual {66}
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W0, [X8+32]
	055 Move W9, [X8+33]
	056 Move W10, [X8+34]
	057 Move W8, [X8+35]
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 NotImplemented "Instruction BFM not yet implemented."
	061 NotImplemented "Instruction BFM not yet implemented."
	062 NotImplemented "Instruction BFM not yet implemented."
	063 Move X30, [X31+32]
	064 Return X0
	065 Call 0x1C17F20
	066 Call 0x1C17F28
	067 Call __Error.FileNotOpen

Method: System.UInt32 ReadUInt32()

Disassembly:
	0x032F688C BL 0x1C16F10
	0x032F6890 MOVZ W2, 0x1
	0x032F6894 MOV W1, W31
	0x032F6898 MOV X3, X31
	0x032F689C MOV X20, X0
	0x032F68A0 BL 0x323A334
	0x032F68A4 STR X20, [X19 + 0x20]
	0x032F68A8 CBZ X20, 0x32F68D4
	0x032F68AC LDR X8, [X20]
	0x032F68B0 MOV X0, X20
	0x032F68B4 LDR X9, [X8 + 0x348]
	0x032F68B8 LDR X1, [X8 + 0x350]
	0x032F68BC BLR X9
	0x032F68C0 STR X0, [X19 + 0x28]
	0x032F68C4 LDP X20, X19, [X31 + 0x20]
	0x032F68C8 LDP X22, X21, [X31 + 0x10]
	0x032F68CC LDR X30, [X31], #0x30
	0x032F68D0 RET
	0x032F68D4 BL 0x1C16F20
	0x032F68D8 STR X30, [X31 - 0x30]!
	0x032F68DC STP X22, X21, [X31 + 0x10]
	0x032F68E0 STP X20, X19, [X31 + 0x20]
	0x032F68E4 ADRP X21, 0x10E6000
	0x032F68E8 ADRP X22, 0xE2C000
	0x032F68EC LDRB W8, [X21 + 0xA6B]
	0x032F68F0 LDR X22, [X22 + 0x828]
	0x032F68F4 MOV X19, X1
	0x032F68F8 MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move W1, 4
	005 Move X19, X0
	006 Move X9, [X8+728]
	007 Move X2, [X8+736]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move X8, [X19+24]
	010 Compare X8, 0
	011 JumpIfEqual {29}
	012 Move W9, [X8+24]
	013 Compare W9, 0
	014 JumpIfEqual {28}
	015 NotImplemented "Instruction CMP not yet implemented."
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W0, [X8+32]
	019 Move W9, [X8+33]
	020 Move W10, [X8+34]
	021 Move W8, [X8+35]
	022 NotImplemented "Instruction BFM not yet implemented."
	023 NotImplemented "Instruction BFM not yet implemented."
	024 NotImplemented "Instruction BFM not yet implemented."
	025 Move X30, [X31+16]
	026 Move X19, [X31+24]
	027 Return X0
	028 Call 0x1C17F28
	029 Call 0x1C17F20

Method: System.Int64 ReadInt64()

Disassembly:
	0x032F68FC TBNZ X8, 0x0, 0x32F6914
	0x032F6900 ADRP X0, 0xE2C000
	0x032F6904 LDR X0, [X0 + 0x828]
	0x032F6908 BL 0x1C16CF4
	0x032F690C MOVZ W8, 0x1
	0x032F6910 STRB W8, [X21 + 0xA6B]
	0x032F6914 LDR X0, [X22]
	0x032F6918 BL 0x1C16F10
	0x032F691C MOVZ W2, 0x1
	0x032F6920 MOV W1, W31
	0x032F6924 MOV X3, X31
	0x032F6928 MOV X21, X0
	0x032F692C BL 0x323A334
	0x032F6930 MOV X0, X20
	0x032F6934 MOV X1, X19
	0x032F6938 MOV X2, X21
	0x032F693C LDP X20, X19, [X31 + 0x20]
	0x032F6940 LDP X22, X21, [X31 + 0x10]
	0x032F6944 MOV W3, W31
	0x032F6948 LDR X30, [X31], #0x30
	0x032F694C B 0x32F6950
	0x032F6950 STP X30, X23, [X31 - 0x30]!
	0x032F6954 STP X22, X21, [X31 + 0x10]
	0x032F6958 STP X20, X19, [X31 + 0x20]
	0x032F695C ADRP X23, 0x10E6000
	0x032F6960 LDRB W8, [X23 + 0xA6C]
	0x032F6964 MOV W21, W3
	0x032F6968 MOV X20, X2
	0x032F696C MOV X22, X1
	0x032F6970 MOV X19, X0
	0x032F6974 TBNZ X8, 0x0, 0x32F698C
	0x032F6978 ADRP X0, 0xDFD000
	0x032F697C LDR X0, [X0 + 0x618]
	0x032F6980 BL 0x1C16CF4
	0x032F6984 MOVZ W8, 0x1
	0x032F6988 STRB W8, [X23 + 0xA6C]
	0x032F698C MOV X0, X19
	0x032F6990 MOV X1, X31
	0x032F6994 BL 0x33BDD8C
	0x032F6998 CBZ X22, 0x32F6A00
	0x032F699C CBZ X20, 0x32F6A20
	0x032F69A0 LDR X8, [X22]
	0x032F69A4 MOV X0, X22
	0x032F69A8 LDP X9, X1, [X8 + 0x1D8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move W1, 8
	005 Move X19, X0
	006 Move X9, [X8+728]
	007 Move X2, [X8+736]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move X8, [X19+24]
	010 Compare X8, 0
	011 JumpIfEqual {41}
	012 Move W9, [X8+24]
	013 Compare W9, 0
	014 JumpIfEqual {40}
	015 NotImplemented "Instruction CMP not yet implemented."
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction CMP not yet implemented."
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W9, [X8+32]
	023 Move W10, [X8+33]
	024 Move W11, [X8+34]
	025 Move W12, [X8+35]
	026 Move W13, [X8+36]
	027 Move W14, [X8+37]
	028 NotImplemented "Instruction BFM not yet implemented."
	029 Move W15, [X8+38]
	030 NotImplemented "Instruction BFM not yet implemented."
	031 Move W8, [X8+39]
	032 NotImplemented "Instruction BFM not yet implemented."
	033 NotImplemented "Instruction BFM not yet implemented."
	034 NotImplemented "Instruction BFM not yet implemented."
	035 Or X9, X9, X15
	036 Or X0, X9, X8
	037 Move X30, [X31+16]
	038 Move X19, [X31+24]
	039 Return X0
	040 Call 0x1C17F28
	041 Call 0x1C17F20

Method: System.UInt64 ReadUInt64()

Disassembly:
	0x032F69AC BLR X9
	0x032F69B0 TBZ X0, 0x0, 0x32F6A68
	0x032F69B4 ADRP X8, 0xDFD000
	0x032F69B8 LDR X8, [X8 + 0x618]
	0x032F69BC STR X22, [X19 + 0x10]
	0x032F69C0 MOVZ W1, 0x10
	0x032F69C4 AND W21, W21, 0x1
	0x032F69C8 LDR X0, [X8]
	0x032F69CC BL 0x1C16D6C
	0x032F69D0 STP X0, X20, [X19 + 0x18]
	0x032F69D4 LDR X8, [X20]
	0x032F69D8 MOV X0, X20
	0x032F69DC LDR X9, [X8 + 0x348]
	0x032F69E0 LDR X1, [X8 + 0x350]
	0x032F69E4 BLR X9
	0x032F69E8 STR X0, [X19 + 0x28]
	0x032F69EC STRB W21, [X19 + 0x30]
	0x032F69F0 LDP X20, X19, [X31 + 0x20]
	0x032F69F4 LDP X22, X21, [X31 + 0x10]
	0x032F69F8 LDP X30, X23, [X31], #0x30
	0x032F69FC RET
	0x032F6A00 ADRP X0, 0xE02000
	0x032F6A04 LDR X0, [X0 + 0x528]
	0x032F6A08 BL 0x1C16D08
	0x032F6A0C BL 0x1C16F10
	0x032F6A10 MOV X19, X0
	0x032F6A14 ADRP X0, 0xE31000
	0x032F6A18 LDR X0, [X0 + 0x3C8]
	0x032F6A1C B 0x32F6A3C
	0x032F6A20 ADRP X0, 0xE02000
	0x032F6A24 LDR X0, [X0 + 0x528]
	0x032F6A28 BL 0x1C16D08
	0x032F6A2C BL 0x1C16F10
	0x032F6A30 MOV X19, X0
	0x032F6A34 ADRP X0, 0xE2C000
	0x032F6A38 LDR X0, [X0 + 0xB20]
	0x032F6A3C BL 0x1C16D08
	0x032F6A40 MOV X1, X0
	0x032F6A44 MOV X0, X19
	0x032F6A48 MOV X2, X31
	0x032F6A4C BL 0x330E100
	0x032F6A50 ADRP X0, 0xE31000
	0x032F6A54 LDR X0, [X0 + 0x3D0]
	0x032F6A58 BL 0x1C16D08

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move W1, 8
	005 Move X19, X0
	006 Move X9, [X8+728]
	007 Move X2, [X8+736]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move X8, [X19+24]
	010 Compare X8, 0
	011 JumpIfEqual {41}
	012 Move W9, [X8+24]
	013 Compare W9, 0
	014 JumpIfEqual {40}
	015 NotImplemented "Instruction CMP not yet implemented."
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction CMP not yet implemented."
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W9, [X8+32]
	023 Move W10, [X8+33]
	024 Move W11, [X8+34]
	025 Move W12, [X8+35]
	026 Move W13, [X8+36]
	027 Move W14, [X8+37]
	028 NotImplemented "Instruction BFM not yet implemented."
	029 Move W15, [X8+38]
	030 NotImplemented "Instruction BFM not yet implemented."
	031 Move W8, [X8+39]
	032 NotImplemented "Instruction BFM not yet implemented."
	033 NotImplemented "Instruction BFM not yet implemented."
	034 NotImplemented "Instruction BFM not yet implemented."
	035 Or X9, X9, X15
	036 Or X0, X9, X8
	037 Move X30, [X31+16]
	038 Move X19, [X31+24]
	039 Return X0
	040 Call 0x1C17F28
	041 Call 0x1C17F20

Method: System.Single ReadSingle()

Disassembly:
	0x032F6A5C MOV X1, X0
	0x032F6A60 MOV X0, X19
	0x032F6A64 BL 0x1C16DEC
	0x032F6A68 ADRP X0, 0xE2C000
	0x032F6A6C LDR X0, [X0 + 0xD30]
	0x032F6A70 BL 0x1C16D08
	0x032F6A74 MOV X1, X31
	0x032F6A78 BL 0x33BDD84
	0x032F6A7C MOV X19, X0
	0x032F6A80 ADRP X0, 0xE05000
	0x032F6A84 LDR X0, [X0 + 0x578]
	0x032F6A88 BL 0x1C16D08

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move W1, 4
	005 Move X19, X0
	006 Move X9, [X8+728]
	007 Move X2, [X8+736]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move X0, [X19+24]
	010 Move W1, W31
	011 Move X2, X31
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Call BitConverterLE.ToSingle, X0, X1
	015 Return V0

Method: System.Double ReadDouble()

Disassembly:
	0x032F6A8C BL 0x1C16F10
	0x032F6A90 MOV X1, X19
	0x032F6A94 MOV X2, X31
	0x032F6A98 MOV X20, X0
	0x032F6A9C BL 0x3314A68
	0x032F6AA0 ADRP X0, 0xE31000
	0x032F6AA4 LDR X0, [X0 + 0x3D0]
	0x032F6AA8 BL 0x1C16D08
	0x032F6AAC MOV X1, X0
	0x032F6AB0 MOV X0, X20
	0x032F6AB4 BL 0x1C16DEC
	0x032F6AB8 MOV W3, W31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move W1, 8
	005 Move X19, X0
	006 Move X9, [X8+728]
	007 Move X2, [X8+736]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move X0, [X19+24]
	010 Move W1, W31
	011 Move X2, X31
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Call BitConverterLE.ToDouble, X0, X1
	015 Return V0

Method: System.Decimal ReadDecimal()

Disassembly:
	0x032F6ABC B 0x32F6950
	0x032F6AC0 LDR X8, [X0]
	0x032F6AC4 MOVZ W1, 0x1
	0x032F6AC8 LDP X3, X2, [X8 + 0x198]
	0x032F6ACC BR X3
	0x032F6AD0 STR X30, [X31 - 0x10]!
	0x032F6AD4 TBZ X1, 0x0, 0x32F6AFC
	0x032F6AD8 MOV X8, X0
	0x032F6ADC LDR X0, [X0 + 0x10]
	0x032F6AE0 CBZ X0, 0x32F6B14
	0x032F6AE4 LDRB W9, [X8 + 0x30]
	0x032F6AE8 LDR X8, [X0]
	0x032F6AEC CBZ W9, 0x32F6B04
	0x032F6AF0 LDR X2, [X8 + 0x298]
	0x032F6AF4 LDR X1, [X8 + 0x2A0]
	0x032F6AF8 B 0x32F6B0C
	0x032F6AFC LDR X30, [X31], #0x10
	0x032F6B00 RET
	0x032F6B04 LDR X2, [X8 + 0x278]
	0x032F6B08 LDR X1, [X8 + 0x280]
	0x032F6B0C LDR X30, [X31], #0x10
	0x032F6B10 BR X2
	0x032F6B14 BL 0x1C16F20
	0x032F6B18 LDR X8, [X0]
	0x032F6B1C MOVZ W1, 0x1
	0x032F6B20 LDP X3, X2, [X8 + 0x198]
	0x032F6B24 BR X3
	0x032F6B28 STR X30, [X31 - 0x10]!
	0x032F6B2C LDR X0, [X0 + 0x10]
	0x032F6B30 CBZ X0, 0x32F6B48
	0x032F6B34 LDR X8, [X0]
	0x032F6B38 LDR X2, [X8 + 0x298]
	0x032F6B3C LDR X1, [X8 + 0x2A0]
	0x032F6B40 LDR X30, [X31], #0x10
	0x032F6B44 BR X2
	0x032F6B48 BL 0x1C16F20
	0x032F6B4C STR X30, [X31 - 0x10]!
	0x032F6B50 LDR X8, [X0 + 0x18]
	0x032F6B54 CBZ X8, 0x32F6B94
	0x032F6B58 LDR W9, [X8 + 0x18]
	0x032F6B5C CBZ W9, 0x32F6B98
	0x032F6B60 AND W9, W1, 0x1
	0x032F6B64 STRB W9, [X8 + 0x20]
	0x032F6B68 LDR X8, [X0 + 0x10]
	0x032F6B6C CBZ X8, 0x32F6B94
	0x032F6B70 LDR X9, [X8]
	0x032F6B74 LDR X1, [X0 + 0x18]
	0x032F6B78 MOVZ W3, 0x1
	0x032F6B7C MOV X0, X8
	0x032F6B80 LDR X5, [X9 + 0x388]
	0x032F6B84 LDR X4, [X9 + 0x390]
	0x032F6B88 MOV W2, W31
	0x032F6B8C LDR X30, [X31], #0x10
	0x032F6B90 BR X5
	0x032F6B94 BL 0x1C16F20
	0x032F6B98 BL 0x1C16F28
	0x032F6B9C STR X30, [X31 - 0x10]!
	0x032F6BA0 LDR X0, [X0 + 0x10]
	0x032F6BA4 CBZ X0, 0x32F6BBC
	0x032F6BA8 LDR X8, [X0]
	0x032F6BAC LDR X3, [X8 + 0x3A8]
	0x032F6BB0 LDR X2, [X8 + 0x3B0]
	0x032F6BB4 LDR X30, [X31], #0x10
	0x032F6BB8 BR X3
	0x032F6BBC BL 0x1C16F20
	0x032F6BC0 STP X30, X19, [X31 - 0x10]!
	0x032F6BC4 CBZ X1, 0x32F6BEC
	0x032F6BC8 LDR X0, [X0 + 0x10]
	0x032F6BCC CBZ X0, 0x32F6C34
	0x032F6BD0 LDR X8, [X0]
	0x032F6BD4 LDR W3, [X1 + 0x18]
	0x032F6BD8 MOV W2, W31
	0x032F6BDC LDR X5, [X8 + 0x388]
	0x032F6BE0 LDR X4, [X8 + 0x390]
	0x032F6BE4 LDP X30, X19, [X31], #0x10
	0x032F6BE8 BR X5
	0x032F6BEC ADRP X0, 0xE02000
	0x032F6BF0 LDR X0, [X0 + 0x528]
	0x032F6BF4 BL 0x1C16D08
	0x032F6BF8 BL 0x1C16F10
	0x032F6BFC MOV X19, X0
	0x032F6C00 ADRP X0, 0xE28000
	0x032F6C04 LDR X0, [X0 + 0xF48]
	0x032F6C08 BL 0x1C16D08
	0x032F6C0C MOV X1, X0
	0x032F6C10 MOV X0, X19
	0x032F6C14 MOV X2, X31
	0x032F6C18 BL 0x330E100
	0x032F6C1C ADRP X0, 0xE31000
	0x032F6C20 LDR X0, [X0 + 0x3D8]
	0x032F6C24 BL 0x1C16D08
	0x032F6C28 MOV X1, X0
	0x032F6C2C MOV X0, X19
	0x032F6C30 BL 0x1C16DEC
	0x032F6C34 BL 0x1C16F20
	0x032F6C38 STR X30, [X31 - 0x10]!
	0x032F6C3C LDR X0, [X0 + 0x10]
	0x032F6C40 CBZ X0, 0x32F6C58
	0x032F6C44 LDR X8, [X0]
	0x032F6C48 LDR X5, [X8 + 0x388]
	0x032F6C4C LDR X4, [X8 + 0x390]
	0x032F6C50 LDR X30, [X31], #0x10

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 NotImplemented "Instruction MRS not yet implemented."
	008 Move X8, [X21+40]
	009 Move X22, 0x10E7000
	010 Move X20, 0xDFF000
	011 Move X19, X0
	012 Move [X31+24], X8
	013 Move W8, [X22+2660]
	014 Move X20, [X20+3672]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xDFF000
	020 Move X0, [X0+3672]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2660], W8
	024 Move X8, [X19]
	025 Move W1, 16
	026 Move X0, X19
	027 Move X9, [X8+728]
	028 Move X2, [X8+736]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move X0, [X20]
	031 Move W1, 4
	032 Call 0x1C17D6C
	033 Move X20, X0
	034 Move X0, [X19+24]
	035 Move W4, 16
	036 Move W1, W31
	037 Move X2, X20
	038 Move W3, W31
	039 Move X5, X31
	040 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	041 Move [X31+8], X31
	042 Move [X31+16], X31
	043 Add X0, X31, 8
	044 Move X1, X20
	045 Move X2, X31
	046 Call Decimal..ctor, X0, X1
	047 Move X0, [X31+8]
	048 Move X1, [X31+16]
	049 Move X8, [X21+40]
	050 Move X9, [X31+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X20, [X31+64]
	053 Move X19, [X31+72]
	054 Move X22, [X31+48]
	055 Move X21, [X31+56]
	056 Move X30, [X31+32]
	057 Add X31, X31, 80
	058 Return X0
	059 Call 0x3EB2B20
	060 Move X19, X0
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X0, X19
	063 Call 0x3EB2AD0
	064 Move X19, X0
	065 Move X0, 0xE06000
	066 Move X0, [X0+1400]
	067 Call 0x1C17D08
	068 Move X8, [X19]
	069 Move X1, [X8]
	070 Call 0x1C18270
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {98}
	075 Move X19, [X19]
	076 Call 0x3EB2AE0
	077 Move X0, 0xE32000
	078 Move X0, [X0+856]
	079 Call 0x1C17D08
	080 Move X1, X31
	081 Call Environment.GetResourceString, X0
	082 Move X20, X0
	083 Move X0, 0xE2C000
	084 Move X0, [X0+1960]
	085 Call 0x1C17D08
	086 Call 0x1C17F10
	087 Move X1, X20
	088 Move X2, X19
	089 Move X3, X31
	090 Move X21, X0
	091 Call IOException..ctor, X0, X1, X2
	092 Move X0, 0xE32000
	093 Move X0, [X0+864]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X21
	097 Call 0x1C17DEC
	098 Move W0, 8
	099 Call 0x3EB2AF0
	100 Move X8, [X19]
	101 Move [X0], X8
	102 Move X1, 0xBBF000
	103 Add X1, X1, 3672
	104 Move X2, X31
	105 Call 0x3EB2B00
	106 Move X19, X0
	107 Call 0x3EB2AE0
	108 Move X0, X19
	109 Call 0x1D2D690
	110 Call 0x1991590

Method: System.String ReadString()

Disassembly:
	0x032F6C54 BR X5
	0x032F6C58 BL 0x1C16F20
	0x032F6C5C STR X30, [X31 - 0x30]!
	0x032F6C60 STP X22, X21, [X31 + 0x10]
	0x032F6C64 STP X20, X19, [X31 + 0x20]
	0x032F6C68 ADRP X22, 0x10E6000
	0x032F6C6C STRH W1, [X31 + 0xC]
	0x032F6C70 ADRP X21, 0xDFF000
	0x032F6C74 LDRB W8, [X22 + 0xA6D]
	0x032F6C78 LDR X21, [X21 + 0x170]
	0x032F6C7C MOV W20, W1
	0x032F6C80 MOV X19, X0
	0x032F6C84 TBNZ X8, 0x0, 0x32F6C9C
	0x032F6C88 ADRP X0, 0xDFF000
	0x032F6C8C LDR X0, [X0 + 0x170]
	0x032F6C90 BL 0x1C16CF4
	0x032F6C94 MOVZ W8, 0x1
	0x032F6C98 STRB W8, [X22 + 0xA6D]
	0x032F6C9C LDR X0, [X21]
	0x032F6CA0 LDR W8, [X0 + 0xE0]
	0x032F6CA4 CBNZ W8, 0x32F6CAC
	0x032F6CA8 BL 0x1C16DFC
	0x032F6CAC MOV W0, W20
	0x032F6CB0 MOV X1, X31
	0x032F6CB4 BL 0x331BBA4
	0x032F6CB8 TBNZ X0, 0x0, 0x32F6D30
	0x032F6CBC LDR X8, [X19 + 0x18]
	0x032F6CC0 CBZ X8, 0x32F6D2C
	0x032F6CC4 LDR X0, [X19 + 0x28]
	0x032F6CC8 CBZ X0, 0x32F6D2C
	0x032F6CCC LDR X9, [X0]
	0x032F6CD0 LDR W4, [X8 + 0x18]
	0x032F6CD4 ADD X8, X8, 0x20
	0x032F6CD8 ADD X1, X31, 0xC
	0x032F6CDC LDP X10, X6, [X9 + 0x1B8]
	0x032F6CE0 CMP W4, 0x0
	0x032F6CE4 CSEL X3, X31, X8, EQ
	0x032F6CE8 MOVZ W2, 0x1
	0x032F6CEC MOVZ W5, 0x1
	0x032F6CF0 BLR X10
	0x032F6CF4 LDR X8, [X19 + 0x10]
	0x032F6CF8 CBZ X8, 0x32F6D2C
	0x032F6CFC LDR X9, [X8]
	0x032F6D00 LDR X1, [X19 + 0x18]
	0x032F6D04 MOV W3, W0
	0x032F6D08 MOV X0, X8
	0x032F6D0C LDR X10, [X9 + 0x388]
	0x032F6D10 LDR X4, [X9 + 0x390]
	0x032F6D14 MOV W2, W31
	0x032F6D18 BLR X10
	0x032F6D1C LDP X20, X19, [X31 + 0x20]
	0x032F6D20 LDP X22, X21, [X31 + 0x10]
	0x032F6D24 LDR X30, [X31], #0x30
	0x032F6D28 RET
	0x032F6D2C BL 0x1C16F20
	0x032F6D30 ADRP X0, 0xE31000
	0x032F6D34 LDR X0, [X0 + 0x3E0]
	0x032F6D38 BL 0x1C16D08
	0x032F6D3C MOV X1, X31
	0x032F6D40 BL 0x33BDD84
	0x032F6D44 MOV X19, X0
	0x032F6D48 ADRP X0, 0xE05000
	0x032F6D4C LDR X0, [X0 + 0x578]
	0x032F6D50 BL 0x1C16D08
	0x032F6D54 BL 0x1C16F10
	0x032F6D58 MOV X1, X19
	0x032F6D5C MOV X2, X31
	0x032F6D60 MOV X20, X0
	0x032F6D64 BL 0x3314A68
	0x032F6D68 ADRP X0, 0xE31000
	0x032F6D6C LDR X0, [X0 + 0x3E8]
	0x032F6D70 BL 0x1C16D08
	0x032F6D74 MOV X1, X0
	0x032F6D78 MOV X0, X20
	0x032F6D7C BL 0x1C16DEC
	0x032F6D80 STP X30, X19, [X31 - 0x10]!
	0x032F6D84 CBZ X1, 0x32F6DDC
	0x032F6D88 MOV X19, X0
	0x032F6D8C LDR X0, [X0 + 0x20]
	0x032F6D90 CBZ X0, 0x32F6DD8
	0x032F6D94 LDR X8, [X0]
	0x032F6D98 LDR W3, [X1 + 0x18]
	0x032F6D9C MOV W2, W31
	0x032F6DA0 LDR X9, [X8 + 0x248]
	0x032F6DA4 LDR X4, [X8 + 0x250]
	0x032F6DA8 BLR X9
	0x032F6DAC CBZ X0, 0x32F6DD8
	0x032F6DB0 MOV X1, X0
	0x032F6DB4 LDR X0, [X19 + 0x10]
	0x032F6DB8 CBZ X0, 0x32F6DD8
	0x032F6DBC LDR X8, [X0]
	0x032F6DC0 LDR W3, [X1 + 0x18]
	0x032F6DC4 MOV W2, W31
	0x032F6DC8 LDR X5, [X8 + 0x388]
	0x032F6DCC LDR X4, [X8 + 0x390]
	0x032F6DD0 LDP X30, X19, [X31], #0x10
	0x032F6DD4 BR X5
	0x032F6DD8 BL 0x1C16F20
	0x032F6DDC ADRP X0, 0xE02000
	0x032F6DE0 LDR X0, [X0 + 0x528]
	0x032F6DE4 BL 0x1C16D08
	0x032F6DE8 BL 0x1C16F10
	0x032F6DEC MOV X19, X0
	0x032F6DF0 ADRP X0, 0xE2C000
	0x032F6DF4 LDR X0, [X0 + 0x2D8]
	0x032F6DF8 BL 0x1C16D08
	0x032F6DFC MOV X1, X0
	0x032F6E00 MOV X0, X19
	0x032F6E04 MOV X2, X31
	0x032F6E08 BL 0x330E100
	0x032F6E0C ADRP X0, 0xE31000
	0x032F6E10 LDR X0, [X0 + 0x3F0]
	0x032F6E14 BL 0x1C16D08
	0x032F6E18 MOV X1, X0
	0x032F6E1C MOV X0, X19
	0x032F6E20 BL 0x1C16DEC
	0x032F6E24 STP X30, X19, [X31 - 0x10]!
	0x032F6E28 LDR X19, [X0 + 0x10]
	0x032F6E2C MOV X0, X31
	0x032F6E30 BL 0x3216CB4
	0x032F6E34 CBZ X19, 0x32F6E5C
	0x032F6E38 LDR X8, [X19]
	0x032F6E3C MOV X1, X0
	0x032F6E40 MOVZ W3, 0x8
	0x032F6E44 MOV X0, X19
	0x032F6E48 LDR X5, [X8 + 0x388]
	0x032F6E4C LDR X4, [X8 + 0x390]
	0x032F6E50 MOV W2, W31
	0x032F6E54 LDP X30, X19, [X31], #0x10
	0x032F6E58 BR X5
	0x032F6E5C BL 0x1C16F20
	0x032F6E60 STR X30, [X31 - 0x10]!
	0x032F6E64 LDR X8, [X0 + 0x18]
	0x032F6E68 CBZ X8, 0x32F6EC0
	0x032F6E6C LDR W9, [X8 + 0x18]
	0x032F6E70 CBZ W9, 0x32F6EC4
	0x032F6E74 STRB W1, [X8 + 0x20]
	0x032F6E78 LDR X8, [X0 + 0x18]
	0x032F6E7C CBZ X8, 0x32F6EC0
	0x032F6E80 LDR W9, [X8 + 0x18]
	0x032F6E84 CMP W9, 0x1
	0x032F6E88 B.LS 0x32F6EC4
	0x032F6E8C UBFM W9, W1, 0x8, 0x1F
	0x032F6E90 STRB W9, [X8 + 0x21]
	0x032F6E94 LDR X8, [X0 + 0x10]
	0x032F6E98 CBZ X8, 0x32F6EC0
	0x032F6E9C LDR X9, [X8]
	0x032F6EA0 LDR X1, [X0 + 0x18]
	0x032F6EA4 MOVZ W3, 0x2
	0x032F6EA8 MOV X0, X8
	0x032F6EAC LDR X5, [X9 + 0x388]
	0x032F6EB0 LDR X4, [X9 + 0x390]
	0x032F6EB4 MOV W2, W31
	0x032F6EB8 LDR X30, [X31], #0x10
	0x032F6EBC BR X5
	0x032F6EC0 BL 0x1C16F20
	0x032F6EC4 BL 0x1C16F28
	0x032F6EC8 STR X30, [X31 - 0x10]!
	0x032F6ECC LDR X8, [X0 + 0x18]
	0x032F6ED0 CBZ X8, 0x32F6F28
	0x032F6ED4 LDR W9, [X8 + 0x18]
	0x032F6ED8 CBZ W9, 0x32F6F2C
	0x032F6EDC STRB W1, [X8 + 0x20]
	0x032F6EE0 LDR X8, [X0 + 0x18]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x10E7000
	011 Move W8, [X20+2661]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xDFE000
	018 Move X0, [X0+1560]
	019 Call 0x1C17CF4
	020 Move X0, 0xE07000
	021 Move X0, [X0+2264]
	022 Call 0x1C17CF4
	023 Move X0, 0xE00000
	024 Move X0, [X0+632]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+2661], W8
	028 Move X8, [X19+16]
	029 Compare X8, 0
	030 JumpIfEqual {154}
	031 Move X0, X19
	032 Call BinaryReader.Read7BitEncodedInt, X0
	033 Move W20, W0
	034 Move TEMP, X0
	035 And TEMP, TEMP, -2147483648
	036 Compare TEMP, -2147483648
	037 JumpIfEqual {155}
	038 Compare W20, 0
	039 JumpIfEqual {121}
	040 Move X8, [X19+40]
	041 Compare X8, 0
	042 JumpIfNotEqual {49}
	043 Move X8, 0xDFE000
	044 Move X8, [X8+1560]
	045 Move W1, 128
	046 Move X0, [X8]
	047 Call 0x1C17D6C
	048 Move [X19+40], X0
	049 Move X8, [X19+56]
	050 Compare X8, 0
	051 JumpIfNotEqual {58}
	052 Move X8, 0xE07000
	053 Move W1, [X19+64]
	054 Move X8, [X8+2264]
	055 Move X0, [X8]
	056 Call 0x1C17D6C
	057 Move [X19+56], X0
	058 Move X21, X31
	059 Move W24, W31
	060 Move W25, 128
	061 Move X0, [X19+16]
	062 Compare X0, 0
	063 JumpIfEqual {152}
	064 Move X8, [X0]
	065 Move X1, [X19+40]
	066 Move W2, W31
	067 Move X9, [X8+856]
	068 Move X4, [X8+864]
	069 Subtract W8, W20, W24
	070 NotImplemented "Instruction CMP not yet implemented."
	071 NotImplemented "Instruction CSEL not yet implemented."
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Compare W0, 0
	074 JumpIfEqual {153}
	075 Move W22, W0
	076 Move X0, [X19+32]
	077 Compare X0, 0
	078 JumpIfEqual {152}
	079 Move X8, [X0]
	080 Move X4, [X19+56]
	081 Move X1, [X19+40]
	082 Move W2, W31
	083 Move X9, [X8+440]
	084 Move X6, [X8+448]
	085 Move W3, W22
	086 Move W5, W31
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move W23, W0
	089 Compare W24, 0
	090 JumpIfNotEqual {92}
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Compare X21, 0
	093 JumpIfNotEqual {100}
	094 Move W0, W20
	095 Move X1, X31
	096 Call StringBuilderCache.Acquire, X0
	097 Move X21, X0
	098 Compare X0, 0
	099 JumpIfEqual {152}
	100 Move X1, [X19+56]
	101 Move X0, X21
	102 Move W2, W31
	103 Move W3, W23
	104 Move X4, X31
	105 Call StringBuilder.Append, X0, X1, X2, X3
	106 Add W24, W22, W24
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X0, X21
	109 Move X20, [X31+64]
	110 Move X19, [X31+72]
	111 Move X22, [X31+48]
	112 Move X21, [X31+56]
	113 Move X24, [X31+32]
	114 Move X23, [X31+40]
	115 Move X30, [X31+16]
	116 Move X25, [X31+24]
	117 Move X1, X31
	118 Add X31, X31, 80
	119 Call StringBuilderCache.GetStringAndRelease, X0
	120 Return X0
	121 Move X8, 0xE00000
	122 Move X8, [X8+632]
	123 Move X20, [X31+64]
	124 Move X19, [X31+72]
	125 Move X22, [X31+48]
	126 Move X21, [X31+56]
	127 Move X24, [X31+32]
	128 Move X23, [X31+40]
	129 Move X8, [X8]
	130 Move X30, [X31+16]
	131 Move X25, [X31+24]
	132 Move X8, [X8+184]
	133 Move X0, [X8]
	134 Add X31, X31, 80
	135 Return X0
	136 Move X1, [X19+56]
	137 Move W3, W23
	138 Move X20, [X31+64]
	139 Move X19, [X31+72]
	140 Move X22, [X31+48]
	141 Move X21, [X31+56]
	142 Move X24, [X31+32]
	143 Move X23, [X31+40]
	144 Move X30, [X31+16]
	145 Move X25, [X31+24]
	146 Move X0, X31
	147 Move W2, W31
	148 Move X4, X31
	149 Add X31, X31, 80
	150 Call String.CreateString, X0, X1, X2, X3
	151 Return X0
	152 Call 0x1C17F20
	153 Call __Error.EndOfFile
	154 Call __Error.FileNotOpen
	155 Move X0, 0xDFE000
	156 Move X0, [X0+2512]
	157 Call 0x1C17D08
	158 Move W1, 1
	159 Call 0x1C17D6C
	160 Move X19, X0
	161 Move [X31+12], W20
	162 Move X0, 0xDFE000
	163 Move X0, [X0+1880]
	164 Call 0x1C17D08
	165 Add X1, X31, 12
	166 Call 0x1C17E04
	167 Move X20, X0
	168 Move X0, X19
	169 Call 0x19913C0
	170 Move X0, X19
	171 Move X1, X20
	172 Call 0x19990B4
	173 Move X0, X19
	174 Move X1, X31
	175 Move X2, X20
	176 Call 0x1994444
	177 Move X0, 0xE32000
	178 Move X0, [X0+872]
	179 Call 0x1C17D08
	180 Move X1, X19
	181 Move X2, X31
	182 Call Environment.GetResourceString, X0, X1
	183 Move X19, X0
	184 Move X0, 0xE2C000
	185 Move X0, [X0+1960]
	186 Call 0x1C17D08
	187 Call 0x1C17F10
	188 Move X1, X19
	189 Move X2, X31
	190 Move X20, X0
	191 Call IOException..ctor, X0, X1
	192 Move X0, 0xE32000
	193 Move X0, [X0+880]
	194 Call 0x1C17D08
	195 Move X1, X0
	196 Move X0, X20
	197 Call 0x1C17DEC

Method: System.Int32 InternalReadChars(System.Char[] buffer, System.Int32 index, System.Int32 count)

Disassembly:
	0x032F6F84 CBZ X8, 0x32F6FC8
	0x032F6F88 LDR W9, [X8 + 0x18]
	0x032F6F8C CMP W9, 0x3
	0x032F6F90 B.LS 0x32F6FCC
	0x032F6F94 UBFM W9, W1, 0x18, 0x1F
	0x032F6F98 STRB W9, [X8 + 0x23]
	0x032F6F9C LDR X8, [X0 + 0x10]
	0x032F6FA0 CBZ X8, 0x32F6FC8
	0x032F6FA4 LDR X9, [X8]
	0x032F6FA8 LDR X1, [X0 + 0x18]
	0x032F6FAC MOVZ W3, 0x4
	0x032F6FB0 MOV X0, X8
	0x032F6FB4 LDR X5, [X9 + 0x388]
	0x032F6FB8 LDR X4, [X9 + 0x390]
	0x032F6FBC MOV W2, W31
	0x032F6FC0 LDR X30, [X31], #0x10
	0x032F6FC4 BR X5
	0x032F6FC8 BL 0x1C16F20
	0x032F6FCC BL 0x1C16F28
	0x032F6FD0 STR X30, [X31 - 0x10]!
	0x032F6FD4 LDR X8, [X0 + 0x18]
	0x032F6FD8 CBZ X8, 0x32F7068
	0x032F6FDC LDR W9, [X8 + 0x18]
	0x032F6FE0 CBZ W9, 0x32F706C
	0x032F6FE4 STRB W1, [X8 + 0x20]
	0x032F6FE8 LDR X8, [X0 + 0x18]
	0x032F6FEC CBZ X8, 0x32F7068
	0x032F6FF0 LDR W9, [X8 + 0x18]
	0x032F6FF4 CMP W9, 0x1
	0x032F6FF8 B.LS 0x32F706C
	0x032F6FFC UBFM W9, W1, 0x8, 0x1F
	0x032F7000 STRB W9, [X8 + 0x21]
	0x032F7004 LDR X8, [X0 + 0x18]
	0x032F7008 CBZ X8, 0x32F7068
	0x032F700C LDR W9, [X8 + 0x18]
	0x032F7010 CMP W9, 0x2
	0x032F7014 B.LS 0x32F706C
	0x032F7018 UBFM W9, W1, 0x10, 0x1F
	0x032F701C STRB W9, [X8 + 0x22]
	0x032F7020 LDR X8, [X0 + 0x18]
	0x032F7024 CBZ X8, 0x32F7068
	0x032F7028 LDR W9, [X8 + 0x18]
	0x032F702C CMP W9, 0x3
	0x032F7030 B.LS 0x32F706C
	0x032F7034 UBFM W9, W1, 0x18, 0x1F
	0x032F7038 STRB W9, [X8 + 0x23]
	0x032F703C LDR X8, [X0 + 0x10]
	0x032F7040 CBZ X8, 0x32F7068
	0x032F7044 LDR X9, [X8]
	0x032F7048 LDR X1, [X0 + 0x18]
	0x032F704C MOVZ W3, 0x4
	0x032F7050 MOV X0, X8
	0x032F7054 LDR X5, [X9 + 0x388]
	0x032F7058 LDR X4, [X9 + 0x390]
	0x032F705C MOV W2, W31
	0x032F7060 LDR X30, [X31], #0x10
	0x032F7064 BR X5
	0x032F7068 BL 0x1C16F20
	0x032F706C BL 0x1C16F28
	0x032F7070 STR X30, [X31 - 0x10]!
	0x032F7074 LDR X8, [X0 + 0x18]
	0x032F7078 CBZ X8, 0x32F7178
	0x032F707C LDR W9, [X8 + 0x18]
	0x032F7080 CBZ W9, 0x32F717C
	0x032F7084 STRB W1, [X8 + 0x20]
	0x032F7088 LDR X8, [X0 + 0x18]
	0x032F708C CBZ X8, 0x32F7178
	0x032F7090 LDR W9, [X8 + 0x18]
	0x032F7094 CMP W9, 0x1
	0x032F7098 B.LS 0x32F717C
	0x032F709C UBFM X9, X1, 0x8, 0x3F
	0x032F70A0 STRB W9, [X8 + 0x21]
	0x032F70A4 LDR X8, [X0 + 0x18]
	0x032F70A8 CBZ X8, 0x32F7178
	0x032F70AC LDR W9, [X8 + 0x18]
	0x032F70B0 CMP W9, 0x2
	0x032F70B4 B.LS 0x32F717C
	0x032F70B8 UBFM X9, X1, 0x10, 0x3F
	0x032F70BC STRB W9, [X8 + 0x22]
	0x032F70C0 LDR X8, [X0 + 0x18]
	0x032F70C4 CBZ X8, 0x32F7178
	0x032F70C8 LDR W9, [X8 + 0x18]
	0x032F70CC CMP W9, 0x3
	0x032F70D0 B.LS 0x32F717C
	0x032F70D4 UBFM X9, X1, 0x18, 0x3F
	0x032F70D8 STRB W9, [X8 + 0x23]
	0x032F70DC LDR X8, [X0 + 0x18]
	0x032F70E0 CBZ X8, 0x32F7178
	0x032F70E4 LDR W9, [X8 + 0x18]
	0x032F70E8 CMP W9, 0x4
	0x032F70EC B.LS 0x32F717C
	0x032F70F0 UBFM X9, X1, 0x20, 0x3F
	0x032F70F4 STRB W9, [X8 + 0x24]
	0x032F70F8 LDR X8, [X0 + 0x18]
	0x032F70FC CBZ X8, 0x32F7178
	0x032F7100 LDR W9, [X8 + 0x18]
	0x032F7104 CMP W9, 0x5
	0x032F7108 B.LS 0x32F717C
	0x032F710C UBFM X9, X1, 0x28, 0x3F
	0x032F7110 STRB W9, [X8 + 0x25]
	0x032F7114 LDR X8, [X0 + 0x18]
	0x032F7118 CBZ X8, 0x32F7178
	0x032F711C LDR W9, [X8 + 0x18]
	0x032F7120 CMP W9, 0x6
	0x032F7124 B.LS 0x32F717C
	0x032F7128 UBFM X9, X1, 0x30, 0x3F
	0x032F712C STRB W9, [X8 + 0x26]
	0x032F7130 LDR X8, [X0 + 0x18]
	0x032F7134 CBZ X8, 0x32F7178
	0x032F7138 LDR W9, [X8 + 0x18]
	0x032F713C CMP W9, 0x7
	0x032F7140 B.LS 0x32F717C
	0x032F7144 UBFM X9, X1, 0x38, 0x3F
	0x032F7148 STRB W9, [X8 + 0x27]
	0x032F714C LDR X8, [X0 + 0x10]
	0x032F7150 CBZ X8, 0x32F7178
	0x032F7154 LDR X9, [X8]
	0x032F7158 LDR X1, [X0 + 0x18]
	0x032F715C MOVZ W3, 0x8
	0x032F7160 MOV X0, X8
	0x032F7164 LDR X5, [X9 + 0x388]
	0x032F7168 LDR X4, [X9 + 0x390]
	0x032F716C MOV W2, W31
	0x032F7170 LDR X30, [X31], #0x10
	0x032F7174 BR X5
	0x032F7178 BL 0x1C16F20
	0x032F717C BL 0x1C16F28
	0x032F7180 STR X30, [X31 - 0x10]!
	0x032F7184 LDR X8, [X0 + 0x18]
	0x032F7188 CBZ X8, 0x32F7288
	0x032F718C LDR W9, [X8 + 0x18]
	0x032F7190 CBZ W9, 0x32F728C
	0x032F7194 STRB W1, [X8 + 0x20]
	0x032F7198 LDR X8, [X0 + 0x18]
	0x032F719C CBZ X8, 0x32F7288
	0x032F71A0 LDR W9, [X8 + 0x18]
	0x032F71A4 CMP W9, 0x1
	0x032F71A8 B.LS 0x32F728C
	0x032F71AC UBFM X9, X1, 0x8, 0x3F
	0x032F71B0 STRB W9, [X8 + 0x21]
	0x032F71B4 LDR X8, [X0 + 0x18]
	0x032F71B8 CBZ X8, 0x32F7288
	0x032F71BC LDR W9, [X8 + 0x18]
	0x032F71C0 CMP W9, 0x2
	0x032F71C4 B.LS 0x32F728C
	0x032F71C8 UBFM X9, X1, 0x10, 0x3F
	0x032F71CC STRB W9, [X8 + 0x22]
	0x032F71D0 LDR X8, [X0 + 0x18]
	0x032F71D4 CBZ X8, 0x32F7288
	0x032F71D8 LDR W9, [X8 + 0x18]
	0x032F71DC CMP W9, 0x3
	0x032F71E0 B.LS 0x32F728C
	0x032F71E4 UBFM X9, X1, 0x18, 0x3F
	0x032F71E8 STRB W9, [X8 + 0x23]
	0x032F71EC LDR X8, [X0 + 0x18]
	0x032F71F0 CBZ X8, 0x32F7288
	0x032F71F4 LDR W9, [X8 + 0x18]
	0x032F71F8 CMP W9, 0x4
	0x032F71FC B.LS 0x32F728C
	0x032F7200 UBFM X9, X1, 0x20, 0x3F
	0x032F7204 STRB W9, [X8 + 0x24]
	0x032F7208 LDR X8, [X0 + 0x18]
	0x032F720C CBZ X8, 0x32F7288
	0x032F7210 LDR W9, [X8 + 0x18]
	0x032F7214 CMP W9, 0x5
	0x032F7218 B.LS 0x32F728C
	0x032F721C UBFM X9, X1, 0x28, 0x3F
	0x032F7220 STRB W9, [X8 + 0x25]
	0x032F7224 LDR X8, [X0 + 0x18]
	0x032F7228 CBZ X8, 0x32F7288
	0x032F722C LDR W9, [X8 + 0x18]
	0x032F7230 CMP W9, 0x6
	0x032F7234 B.LS 0x32F728C
	0x032F7238 UBFM X9, X1, 0x30, 0x3F
	0x032F723C STRB W9, [X8 + 0x26]
	0x032F7240 LDR X8, [X0 + 0x18]
	0x032F7244 CBZ X8, 0x32F7288
	0x032F7248 LDR W9, [X8 + 0x18]
	0x032F724C CMP W9, 0x7
	0x032F7250 B.LS 0x32F728C
	0x032F7254 UBFM X9, X1, 0x38, 0x3F
	0x032F7258 STRB W9, [X8 + 0x27]
	0x032F725C LDR X8, [X0 + 0x10]
	0x032F7260 CBZ X8, 0x32F7288
	0x032F7264 LDR X9, [X8]
	0x032F7268 LDR X1, [X0 + 0x18]
	0x032F726C MOVZ W3, 0x8
	0x032F7270 MOV X0, X8
	0x032F7274 LDR X5, [X9 + 0x388]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X23, 0x10E7000
	014 Move W8, [X23+2662]
	015 Move W19, W3
	016 Move W20, W2
	017 Move X21, X1
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0xE32000
	024 Move X0, [X0+904]
	025 Call 0x1C17CF4
	026 Move X0, 0xDFE000
	027 Move X0, [X0+1560]
	028 Call 0x1C17CF4
	029 Move X0, 0xE2D000
	030 Move X0, [X0+1000]
	031 Call 0x1C17CF4
	032 Move X0, 0xE06000
	033 Move X0, [X0+1368]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+2662], W8
	037 Move X25, X22
	038 Add X25, X25, 40
	039 Move X8, [X25]
	040 Compare X8, 0
	041 JumpIfNotEqual {48}
	042 Move X8, 0xDFE000
	043 Move X8, [X8+1560]
	044 Move W1, 128
	045 Move X0, [X8]
	046 Call 0x1C17D6C
	047 Move [X25], X0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W23, W19
	050 Move X27, 0xE05000
	051 Move X27, [X27+1368]
	052 Add X28, X21, 32
	053 Move W29, 128
	054 Move W23, W19
	055 Move X0, [X22+32]
	056 Move W8, W23
	057 Compare X0, 0
	058 JumpIfEqual {79}
	059 Move X8, 0xE2C000
	060 Move X9, [X0]
	061 Move X8, [X8+1000]
	062 Move X10, [X8]
	063 Move W8, [X9+304]
	064 Move W11, [X10+304]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move W8, W23
	067 Move X8, [X9+200]
	068 Add X8, X8, X11
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W8, W23
	072 Move X8, [X9+504]
	073 Move X1, [X9+512]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction CSET not yet implemented."
	077 And W8, W8, W0
	078 Subtract W8, W23, W8
	079 Move W9, [X22+68]
	080 Move W10, [X22+69]
	081 NotImplemented "Instruction LSLV not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 NotImplemented "Instruction CSEL not yet implemented."
	084 Compare W10, 0
	085 JumpIfEqual {107}
	086 Move X24, [X22+16]
	087 Compare X24, 0
	088 JumpIfEqual {189}
	089 Move X9, [X24]
	090 Move X8, [X27]
	091 Move W11, [X9+304]
	092 Move W10, [X8+304]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X9, [X9+200]
	095 Add X9, X9, X10
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move W26, [X24+52]
	099 Move X0, X24
	100 Move W1, W3
	101 Move X2, X31
	102 Call MemoryStream.InternalEmulateRead, X0, X1
	103 Move W2, W0
	104 Add X8, X24, 40
	105 Compare W2, 0
	106 JumpIfNotEqual {121}
	107 Move X0, [X22+16]
	108 Compare X0, 0
	109 JumpIfEqual {189}
	110 Move X8, [X0]
	111 Move X1, [X25]
	112 Move W2, W31
	113 Move X9, [X8+856]
	114 Move X4, [X8+864]
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move W2, W0
	117 Move W26, W31
	118 Move X8, X25
	119 Compare W2, 0
	120 JumpIfEqual {175}
	121 Or W9, W2, W26
	122 Move TEMP, X9
	123 And TEMP, TEMP, -2147483648
	124 Compare TEMP, -2147483648
	125 JumpIfEqual {190}
	126 Move W9, W2
	127 Add X9, X9, W26
	128 Move X9, X9
	129 ShiftRight X9, 31
	130 And X9, X9, 0x7FFFFFFF
	131 Compare X9, 0
	132 JumpIfNotEqual {197}
	133 Move X8, [X8]
	134 Compare X8, 0
	135 JumpIfEqual {189}
	136 Move W9, [X8+24]
	137 Add W10, W2, W26
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move TEMP, X20
	140 And TEMP, TEMP, -2147483648
	141 Compare TEMP, -2147483648
	142 JumpIfEqual {202}
	143 Move W10, W20
	144 Add X11, X10, W23
	145 Move X11, X11
	146 ShiftRight X11, 31
	147 And X11, X11, 0x7FFFFFFF
	148 Compare X11, 0
	149 JumpIfNotEqual {197}
	150 Compare X21, 0
	151 JumpIfEqual {189}
	152 Move W11, [X21+24]
	153 Add W12, W20, W23
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X0, [X22+32]
	156 Compare X0, 0
	157 JumpIfEqual {189}
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X11, [X0]
	160 NotImplemented "Instruction CSEL not yet implemented."
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Add X8, X8, 32
	163 Move X9, [X11+472]
	164 Move X6, [X11+480]
	165 Move W12, W26
	166 NotImplemented "Instruction CSEL not yet implemented."
	167 Add X1, X8, X12
	168 Add X3, X13, X10
	169 Move W4, W23
	170 Move W5, W31
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Subtract W23, W23, W0
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Add W20, W0, W20
	175 Subtract W0, W19, W23
	176 Move X20, [X31+80]
	177 Move X19, [X31+88]
	178 Move X22, [X31+64]
	179 Move X21, [X31+72]
	180 Move X24, [X31+48]
	181 Move X23, [X31+56]
	182 Move X26, [X31+32]
	183 Move X25, [X31+40]
	184 Move X28, [X31+16]
	185 Move X27, [X31+24]
	186 Move X29, [X31+96]
	187 Move X30, [X31+104]
	188 Return X0
	189 Call 0x1C17F20
	190 Move X0, 0xE05000
	191 Move X0, [X0+1888]
	192 Call 0x1C17D08
	193 Call 0x1C17F10
	194 Move X19, X0
	195 Move X0, 0xE2C000
	196 Move X0, [X0+808]
	197 Call 0x1C17F30
	198 Move X8, 0xE31000
	199 Move X8, [X8+904]
	200 Move X1, [X8]
	201 Call 0x1C17DEC
	202 Move X0, 0xE05000
	203 Move X0, [X0+1888]
	204 Call 0x1C17D08
	205 Call 0x1C17F10
	206 Move X19, X0
	207 Move X0, 0xE31000
	208 Move X0, [X0+912]
	209 Call 0x1C17D08
	210 Move X1, X0
	211 Move X0, X19
	212 Move X2, X31
	213 Call ArgumentOutOfRangeException..ctor, X0, X1
	214 Move X0, 0xE31000
	215 Move X0, [X0+904]
	216 Call 0x1C17D08
	217 Move X1, X0
	218 Move X0, X19
	219 Call 0x1C17DEC

Method: System.Int32 InternalReadOneChar()

Disassembly:
	0x032F63C0 BL 0x1C16D08
	0x032F63C4 MOV X1, X0
	0x032F63C8 MOV X0, X20
	0x032F63CC BL 0x1C16DEC
	0x032F63D0 BL 0x32F4810
	0x032F63D4 STR X30, [X31 - 0x20]!
	0x032F63D8 STP X20, X19, [X31 + 0x10]
	0x032F63DC CBZ X1, 0x32F6418
	0x032F63E0 TBNZ X2, 0x1F, 0x32F6468
	0x032F63E4 TBNZ X3, 0x1F, 0x32F64A0
	0x032F63E8 LDR W8, [X1 + 0x18]
	0x032F63EC SUB W8, W8, W2
	0x032F63F0 CMP W8, W3
	0x032F63F4 B.LT 0x32F64F0
	0x032F63F8 LDR X0, [X0 + 0x10]
	0x032F63FC CBZ X0, 0x32F6540
	0x032F6400 LDR X8, [X0]
	0x032F6404 LDP X20, X19, [X31 + 0x10]
	0x032F6408 LDR X5, [X8 + 0x358]
	0x032F640C LDR X4, [X8 + 0x360]
	0x032F6410 LDR X30, [X31], #0x20
	0x032F6414 BR X5
	0x032F6418 ADRP X0, 0xE30000
	0x032F641C LDR X0, [X0 + 0xC40]
	0x032F6420 BL 0x1C16D08
	0x032F6424 MOV X1, X31
	0x032F6428 BL 0x33BDD84
	0x032F642C MOV X19, X0
	0x032F6430 ADRP X0, 0xE02000
	0x032F6434 LDR X0, [X0 + 0x528]
	0x032F6438 BL 0x1C16D08
	0x032F643C BL 0x1C16F10
	0x032F6440 MOV X20, X0
	0x032F6444 ADRP X0, 0xE28000
	0x032F6448 LDR X0, [X0 + 0xF48]
	0x032F644C BL 0x1C16D08
	0x032F6450 MOV X1, X0
	0x032F6454 MOV X0, X20
	0x032F6458 MOV X2, X19
	0x032F645C MOV X3, X31
	0x032F6460 BL 0x3315F7C
	0x032F6464 B 0x32F6528
	0x032F6468 ADRP X0, 0xE25000
	0x032F646C LDR X0, [X0 + 0x670]
	0x032F6470 BL 0x1C16D08
	0x032F6474 MOV X1, X31
	0x032F6478 BL 0x33BDD84
	0x032F647C MOV X19, X0
	0x032F6480 ADRP X0, 0xE05000
	0x032F6484 LDR X0, [X0 + 0x760]
	0x032F6488 BL 0x1C16D08
	0x032F648C BL 0x1C16F10
	0x032F6490 MOV X20, X0
	0x032F6494 ADRP X0, 0xE08000
	0x032F6498 LDR X0, [X0 + 0x130]
	0x032F649C B 0x32F64D4
	0x032F64A0 ADRP X0, 0xE25000
	0x032F64A4 LDR X0, [X0 + 0x670]
	0x032F64A8 BL 0x1C16D08
	0x032F64AC MOV X1, X31
	0x032F64B0 BL 0x33BDD84
	0x032F64B4 MOV X19, X0
	0x032F64B8 ADRP X0, 0xE05000
	0x032F64BC LDR X0, [X0 + 0x760]
	0x032F64C0 BL 0x1C16D08
	0x032F64C4 BL 0x1C16F10
	0x032F64C8 MOV X20, X0
	0x032F64CC ADRP X0, 0xE25000
	0x032F64D0 LDR X0, [X0 + 0x648]
	0x032F64D4 BL 0x1C16D08
	0x032F64D8 MOV X1, X0
	0x032F64DC MOV X0, X20
	0x032F64E0 MOV X2, X19
	0x032F64E4 MOV X3, X31
	0x032F64E8 BL 0x3311888
	0x032F64EC B 0x32F6528
	0x032F64F0 ADRP X0, 0xE25000
	0x032F64F4 LDR X0, [X0 + 0x760]
	0x032F64F8 BL 0x1C16D08
	0x032F64FC MOV X1, X31
	0x032F6500 BL 0x33BDD84
	0x032F6504 MOV X19, X0
	0x032F6508 ADRP X0, 0xE05000
	0x032F650C LDR X0, [X0 + 0x578]
	0x032F6510 BL 0x1C16D08
	0x032F6514 BL 0x1C16F10
	0x032F6518 MOV X1, X19
	0x032F651C MOV X2, X31
	0x032F6520 MOV X20, X0
	0x032F6524 BL 0x3314A68
	0x032F6528 ADRP X0, 0xE31000
	0x032F652C LDR X0, [X0 + 0x3A0]
	0x032F6530 BL 0x1C16D08
	0x032F6534 MOV X1, X0
	0x032F6538 MOV X0, X20
	0x032F653C BL 0x1C16DEC
	0x032F6540 BL 0x32F4810
	0x032F6544 STP X30, X23, [X31 - 0x30]!
	0x032F6548 STP X22, X21, [X31 + 0x10]
	0x032F654C STP X20, X19, [X31 + 0x20]
	0x032F6550 ADRP X21, 0x10E6000
	0x032F6554 LDRB W8, [X21 + 0xA69]
	0x032F6558 MOV W19, W1
	0x032F655C MOV X20, X0
	0x032F6560 TBNZ X8, 0x0, 0x32F6584
	0x032F6564 ADRP X0, 0xDFD000
	0x032F6568 LDR X0, [X0 + 0x618]
	0x032F656C BL 0x1C16CF4
	0x032F6570 ADRP X0, 0xE2C000
	0x032F6574 LDR X0, [X0 + 0xA50]
	0x032F6578 BL 0x1C16CF4
	0x032F657C MOVZ W8, 0x1
	0x032F6580 STRB W8, [X21 + 0xA69]
	0x032F6584 TBNZ X19, 0x1F, 0x32F6668
	0x032F6588 LDR X8, [X20 + 0x10]
	0x032F658C CBZ X8, 0x32F66CC
	0x032F6590 CBZ W19, 0x32F662C
	0x032F6594 ADRP X23, 0xDFD000
	0x032F6598 LDR X23, [X23 + 0x618]
	0x032F659C MOV W1, W19
	0x032F65A0 LDR X0, [X23]
	0x032F65A4 BL 0x1C16D6C
	0x032F65A8 MOV X21, X0
	0x032F65AC MOV W22, W31
	0x032F65B0 LDR X0, [X20 + 0x10]
	0x032F65B4 CBZ X0, 0x32F6664
	0x032F65B8 LDR X8, [X0]
	0x032F65BC MOV X1, X21
	0x032F65C0 MOV W2, W22
	0x032F65C4 MOV W3, W19
	0x032F65C8 LDR X9, [X8 + 0x358]
	0x032F65CC LDR X4, [X8 + 0x360]
	0x032F65D0 BLR X9
	0x032F65D4 CBZ W0, 0x32F65E8
	0x032F65D8 SUB W19, W19, W0
	0x032F65DC CMP W19, 0x0
	0x032F65E0 ADD W22, W0, W22
	0x032F65E4 B.GT 0x32F65B0
	0x032F65E8 CBZ X21, 0x32F6664
	0x032F65EC LDR W8, [X21 + 0x18]
	0x032F65F0 CMP W22, W8
	0x032F65F4 B.EQ 0x32F6650
	0x032F65F8 LDR X0, [X23]
	0x032F65FC MOV W1, W22
	0x032F6600 BL 0x1C16D6C
	0x032F6604 MOV X19, X0
	0x032F6608 MOV X0, X21
	0x032F660C MOV W1, W31
	0x032F6610 MOV X2, X19
	0x032F6614 MOV W3, W31
	0x032F6618 MOV W4, W22
	0x032F661C MOV X5, X31
	0x032F6620 BL 0x33A8750
	0x032F6624 MOV X21, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x10E7000
	008 Move W8, [X20+2663]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xDFE000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move X0, 0xE07000
	018 Move X0, [X0+2264]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2663], W8
	022 Move X0, [X19+16]
	023 Compare X0, 0
	024 JumpIfEqual {148}
	025 Move X8, [X0]
	026 Move X9, [X8+440]
	027 Move X1, [X8+448]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {41}
	033 Move X0, [X19+16]
	034 Compare X0, 0
	035 JumpIfEqual {148}
	036 Move X8, [X0]
	037 Move X9, [X8+504]
	038 Move X1, [X8+512]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X20, X0
	041 Move X20, X31
	042 Move X8, [X19+40]
	043 Compare X8, 0
	044 JumpIfNotEqual {51}
	045 Move X8, 0xDFE000
	046 Move X8, [X8+1560]
	047 Move W1, 128
	048 Move X0, [X8]
	049 Call 0x1C17D6C
	050 Move [X19+40], X0
	051 Move X8, [X19+48]
	052 Compare X8, 0
	053 JumpIfNotEqual {60}
	054 Move X8, 0xE07000
	055 Move X8, [X8+2264]
	056 Move W1, 1
	057 Move X0, [X8]
	058 Call 0x1C17D6C
	059 Move [X19+48], X0
	060 Move W0, W31
	061 Move W22, 1
	062 Compare W0, 0
	063 JumpIfNotEqual {112}
	064 Move W23, [X19+68]
	065 Move X0, [X19+16]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 NotImplemented "Instruction CINC not yet implemented."
	068 Compare X0, 0
	069 JumpIfEqual {148}
	070 Move X8, [X0]
	071 Move X9, [X8+888]
	072 Move X1, [X8+896]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X8, [X19+40]
	075 Compare X8, 0
	076 JumpIfEqual {148}
	077 Move W9, [X8+24]
	078 Compare W9, 0
	079 JumpIfEqual {126}
	080 Add W31, W0, 1
	081 Move [X8+32], W0
	082 Compare W23, 0
	083 JumpIfEqual {99}
	084 Move X0, [X19+16]
	085 Compare X0, 0
	086 JumpIfEqual {148}
	087 Move X8, [X0]
	088 Move X9, [X8+888]
	089 Move X1, [X8+896]
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move X8, [X19+40]
	092 Compare X8, 0
	093 JumpIfEqual {148}
	094 Move W9, [X8+24]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Add W31, W0, 1
	097 Move [X8+33], W0
	098 NotImplemented "Instruction CINC not yet implemented."
	099 Add W31, W0, 1
	100 Move X0, [X19+32]
	101 Compare X0, 0
	102 JumpIfEqual {127}
	103 Move X8, [X0]
	104 Move X1, [X19+40]
	105 Move X4, [X19+48]
	106 Move X9, [X8+440]
	107 Move X6, [X8+448]
	108 Move W2, W31
	109 Move W3, W21
	110 Move W5, W31
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Move X8, [X19+48]
	113 Compare X8, 0
	114 JumpIfEqual {148}
	115 Move W9, [X8+24]
	116 Compare W9, 0
	117 JumpIfEqual {126}
	118 NotImplemented "Instruction LDRH not yet implemented."
	119 Move X20, [X31+32]
	120 Move X19, [X31+40]
	121 Move X22, [X31+16]
	122 Move X21, [X31+24]
	123 Move X30, [X31+48]
	124 Move X23, [X31+56]
	125 Return X0
	126 Call 0x1C17F28
	127 Call 0x1C17F20
	128 Move X21, X0
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X0, X21
	131 Call 0x3EB2AD0
	132 Move X21, X0
	133 Move X0, 0xE04000
	134 Move X0, [X0+3264]
	135 Call 0x1C17D08
	136 Move X8, [X21]
	137 Move X1, [X8]
	138 Call 0x1C18270
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfNotEqual {149}
	143 Move X21, [X21]
	144 Call 0x3EB2AE0
	145 Move X0, [X19+16]
	146 Compare X0, 0
	147 JumpIfNotEqual {157}
	148 Call 0x1C17F20
	149 Move W0, 8
	150 Call 0x3EB2AF0
	151 Move X8, [X21]
	152 Move [X0], X8
	153 Move X1, 0xBBF000
	154 Add X1, X1, 3672
	155 Move X2, X31
	156 Call 0x3EB2B00
	157 Move X8, [X0]
	158 Move X9, [X8+440]
	159 Move X1, [X8+448]
	160 NotImplemented "Instruction BLR not yet implemented."
	161 Move TEMP, X0
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfNotEqual {180}
	165 Move X19, [X19+16]
	166 Compare X19, 0
	167 JumpIfEqual {148}
	168 Move X8, [X19]
	169 Move X0, X19
	170 Move X9, [X8+504]
	171 Move X1, [X8+512]
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move X8, [X19]
	174 Subtract X1, X20, X0
	175 Move W2, 1
	176 Move X0, X19
	177 Move X9, [X8+824]
	178 Move X3, [X8+832]
	179 NotImplemented "Instruction BLR not yet implemented."
	180 Move X0, X21
	181 Call 0x1C17F18
	182 Move X21, X0
	183 Call 0x3EB2AE0
	184 Move X0, X21
	185 Call 0x1D2D690
	186 Call 0x1991590

Method: System.Char[] ReadChars(System.Int32 count)

Disassembly:
	0x032F7278 LDR X4, [X9 + 0x390]
	0x032F727C MOV W2, W31
	0x032F7280 LDR X30, [X31], #0x10
	0x032F7284 BR X5
	0x032F7288 BL 0x1C16F20
	0x032F728C BL 0x1C16F28
	0x032F7290 STP X30, X19, [X31 - 0x10]!
	0x032F7294 LDR X19, [X0 + 0x10]
	0x032F7298 MOV X0, X31
	0x032F729C BL 0x3216C9C
	0x032F72A0 CBZ X19, 0x32F72C8
	0x032F72A4 LDR X8, [X19]
	0x032F72A8 MOV X1, X0
	0x032F72AC MOVZ W3, 0x4
	0x032F72B0 MOV X0, X19
	0x032F72B4 LDR X5, [X8 + 0x388]
	0x032F72B8 LDR X4, [X8 + 0x390]
	0x032F72BC MOV W2, W31
	0x032F72C0 LDP X30, X19, [X31], #0x10
	0x032F72C4 BR X5
	0x032F72C8 BL 0x1C16F20
	0x032F72CC STP X30, X25, [X31 - 0x40]!
	0x032F72D0 STP X24, X23, [X31 + 0x10]
	0x032F72D4 STP X22, X21, [X31 + 0x20]
	0x032F72D8 STP X20, X19, [X31 + 0x30]
	0x032F72DC ADRP X21, 0x10E5000
	0x032F72E0 LDRB W8, [X21 + 0xA6E]
	0x032F72E4 MOV X20, X1
	0x032F72E8 MOV X19, X0
	0x032F72EC TBNZ X8, 0x0, 0x32F7310
	0x032F72F0 ADRP X0, 0xE30000
	0x032F72F4 LDR X0, [X0 + 0x3F8]
	0x032F72F8 BL 0x1C16CF4
	0x032F72FC ADRP X0, 0xDFC000
	0x032F7300 LDR X0, [X0 + 0x618]
	0x032F7304 BL 0x1C16CF4
	0x032F7308 MOVZ W8, 0x1
	0x032F730C STRB W8, [X21 + 0xA6E]
	0x032F7310 CBZ X20, 0x32F7540
	0x032F7314 LDR X0, [X19 + 0x20]
	0x032F7318 CBZ X0, 0x32F74E0
	0x032F731C LDR X8, [X0]
	0x032F7320 MOV X1, X20
	0x032F7324 LDP X9, X2, [X8 + 0x1F8]
	0x032F7328 BLR X9
	0x032F732C MOV W21, W0
	0x032F7330 MOV X0, X19
	0x032F7334 MOV W1, W21
	0x032F7338 BL 0x32F7574
	0x032F733C LDR X4, [X19 + 0x40]
	0x032F7340 CBNZ X4, 0x32F7394
	0x032F7344 ADRP X8, 0xDFC000
	0x032F7348 LDR X8, [X8 + 0x618]
	0x032F734C MOVZ W1, 0x100
	0x032F7350 LDR X0, [X8]
	0x032F7354 BL 0x1C16D6C
	0x032F7358 STR X0, [X19 + 0x40]
	0x032F735C CBZ X0, 0x32F74E0
	0x032F7360 MOV X22, X0
	0x032F7364 LDR X0, [X19 + 0x20]
	0x032F7368 CBZ X0, 0x32F74E0
	0x032F736C LDR X8, [X0]
	0x032F7370 MOVZ W1, 0x1
	0x032F7374 LDR X9, [X8 + 0x358]
	0x032F7378 LDR X2, [X8 + 0x360]
	0x032F737C BLR X9
	0x032F7380 LDR W8, [X22 + 0x18]
	0x032F7384 LDR X4, [X19 + 0x40]
	0x032F7388 SDIV W8, W8, W0
	0x032F738C STR W8, [X19 + 0x48]
	0x032F7390 CBZ X4, 0x32F74E0
	0x032F7394 LDR W8, [X4 + 0x18]
	0x032F7398 CMP W21, W8
	0x032F739C B.LE 0x32F7484
	0x032F73A0 LDR W22, [X20 + 0x10]
	0x032F73A4 CMP W22, 0x1
	0x032F73A8 B.LT 0x32F7470
	0x032F73AC MOV W25, W31
	0x032F73B0 LDR W24, [X19 + 0x48]
	0x032F73B4 CMP W22, W24
	0x032F73B8 CSEL W21, W24, W22, GT
	0x032F73BC ORR W8, W21, W25, 0x0
	0x032F73C0 TBNZ X8, 0x1F, 0x32F74E4
	0x032F73C4 MOV W8, W21
	0x032F73C8 ADD X8, X8, W25, UXTW
	0x032F73CC UBFM X8, X8, 0x1F, 0x3F
	0x032F73D0 CBNZ X8, 0x32F752C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10E6000
	007 Move W8, [X21+2664]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xE06000
	015 Move X0, [X0+2264]
	016 Call 0x1C17CF4
	017 Move X0, 0xE2C000
	018 Move X0, [X0+2784]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2664], W8
	022 Move TEMP, X19
	023 And TEMP, TEMP, -2147483648
	024 Compare TEMP, -2147483648
	025 JumpIfEqual {75}
	026 Move X8, [X20+16]
	027 Compare X8, 0
	028 JumpIfEqual {100}
	029 Compare W19, 0
	030 JumpIfEqual {58}
	031 Move X22, 0xE06000
	032 Move X22, [X22+2264]
	033 Move W1, W19
	034 Move X0, [X22]
	035 Call 0x1C17D6C
	036 Move X21, X0
	037 Move X0, X20
	038 Move X1, X21
	039 Move W2, W31
	040 Move W3, W19
	041 Call BinaryReader.InternalReadChars, X0, X1, X2, X3
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move W20, W0
	044 Move X0, [X22]
	045 Move W1, W20
	046 Call 0x1C17D6C
	047 Move X19, X0
	048 Move W4, W20
	049 ShiftRight W4, 31
	050 And W4, W4, 0x3FFFFFFF
	051 Move X0, X21
	052 Move W1, W31
	053 Move X2, X19
	054 Move W3, W31
	055 Move X5, X31
	056 Call Buffer.InternalBlockCopy, X0, X1, X2, X3, X4
	057 Move X21, X19
	058 Move X19, 0xE2C000
	059 Move X19, [X19+2784]
	060 Move X0, [X19]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {66}
	064 Call 0x1C17DFC
	065 Move X0, [X19]
	066 Move X8, [X0+184]
	067 Move X21, [X8]
	068 Move X0, X21
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Return X0
	075 Move X0, 0xE25000
	076 Move X0, [X0+1648]
	077 Call 0x1C17D08
	078 Move X1, X31
	079 Call Environment.GetResourceString, X0
	080 Move X19, X0
	081 Move X0, 0xE05000
	082 Move X0, [X0+1888]
	083 Call 0x1C17D08
	084 Call 0x1C17F10
	085 Move X20, X0
	086 Move X0, 0xE25000
	087 Move X0, [X0+1608]
	088 Call 0x1C17D08
	089 Move X1, X0
	090 Move X0, X20
	091 Move X2, X19
	092 Move X3, X31
	093 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	094 Move X0, 0xE31000
	095 Move X0, [X0+920]
	096 Call 0x1C17D08
	097 Move X1, X0
	098 Move X0, X20
	099 Call 0x1C17DEC
	100 Call __Error.FileNotOpen

Method: System.Int32 Read(System.Byte[] buffer, System.Int32 index, System.Int32 count)

Disassembly:
	0x032F73D4 LDR W8, [X20 + 0x10]
	0x032F73D8 ADD W23, W21, W25
	0x032F73DC CMP W23, W8
	0x032F73E0 B.GT 0x32F74E4
	0x032F73E4 MOV X0, X31
	0x032F73E8 BL 0x32C1424
	0x032F73EC LDR X9, [X19 + 0x40]
	0x032F73F0 CBZ X9, 0x32F74E0
	0x032F73F4 MOV W8, W0
	0x032F73F8 LDR X0, [X19 + 0x28]
	0x032F73FC CBZ X0, 0x32F74E0
	0x032F7400 LDR X11, [X0]
	0x032F7404 LDR W4, [X9 + 0x18]
	0x032F7408 MOV W10, W25
	0x032F740C ADD X9, X9, 0x20
	0x032F7410 LDP X12, X6, [X11 + 0x1B8]
	0x032F7414 CMP W4, 0x0
	0x032F7418 SXTW X8, W8
	0x032F741C ADD X10, X20, X10, 0x1, LSL
	0x032F7420 CSEL X3, X31, X9, EQ
	0x032F7424 CMP W22, W24
	0x032F7428 ADD X1, X10, X8
	0x032F742C CSET W5, LE
	0x032F7430 MOV W2, W21
	0x032F7434 BLR X12
	0x032F7438 LDR X8, [X19 + 0x10]
	0x032F743C CBZ X8, 0x32F74E0
	0x032F7440 LDR X9, [X8]
	0x032F7444 LDR X1, [X19 + 0x40]
	0x032F7448 MOV W3, W0
	0x032F744C MOV X0, X8
	0x032F7450 LDR X10, [X9 + 0x388]
	0x032F7454 LDR X4, [X9 + 0x390]
	0x032F7458 MOV W2, W31
	0x032F745C BLR X10
	0x032F7460 SUB W22, W22, W21
	0x032F7464 CMP W22, 0x0
	0x032F7468 MOV W25, W23
	0x032F746C B.GT 0x32F73B0
	0x032F7470 LDP X20, X19, [X31 + 0x30]
	0x032F7474 LDP X22, X21, [X31 + 0x20]
	0x032F7478 LDP X24, X23, [X31 + 0x10]
	0x032F747C LDP X30, X25, [X31], #0x40
	0x032F7480 RET
	0x032F7484 LDR X0, [X19 + 0x20]
	0x032F7488 CBZ X0, 0x32F74E0
	0x032F748C LDR X8, [X0]
	0x032F7490 LDR W3, [X20 + 0x10]
	0x032F7494 MOV X1, X20
	0x032F7498 MOV W2, W31
	0x032F749C LDR X9, [X8 + 0x278]
	0x032F74A0 LDR X6, [X8 + 0x280]
	0x032F74A4 MOV W5, W31
	0x032F74A8 BLR X9
	0x032F74AC LDR X0, [X19 + 0x10]
	0x032F74B0 CBZ X0, 0x32F74E0
	0x032F74B4 LDR X8, [X0]
	0x032F74B8 LDR X1, [X19 + 0x40]
	0x032F74BC MOV W3, W21
	0x032F74C0 LDP X20, X19, [X31 + 0x30]
	0x032F74C4 LDR X5, [X8 + 0x388]
	0x032F74C8 LDR X4, [X8 + 0x390]
	0x032F74CC LDP X22, X21, [X31 + 0x20]
	0x032F74D0 LDP X24, X23, [X31 + 0x10]
	0x032F74D4 MOV W2, W31
	0x032F74D8 LDP X30, X25, [X31], #0x40
	0x032F74DC BR X5
	0x032F74E0 BL 0x1C16F20
	0x032F74E4 ADRP X0, 0xE04000
	0x032F74E8 LDR X0, [X0 + 0x760]
	0x032F74EC BL 0x1C16D08
	0x032F74F0 BL 0x1C16F10
	0x032F74F4 MOV X19, X0
	0x032F74F8 ADRP X0, 0xE2B000
	0x032F74FC LDR X0, [X0 + 0x310]
	0x032F7500 BL 0x1C16D08
	0x032F7504 MOV X1, X0
	0x032F7508 MOV X0, X19
	0x032F750C MOV X2, X31
	0x032F7510 BL 0x3316014
	0x032F7514 ADRP X0, 0xE30000
	0x032F7518 LDR X0, [X0 + 0x3F8]
	0x032F751C BL 0x1C16D08
	0x032F7520 MOV X1, X0
	0x032F7524 MOV X0, X19
	0x032F7528 BL 0x1C16DEC
	0x032F752C BL 0x1C16F30
	0x032F7530 ADRP X8, 0xE30000
	0x032F7534 LDR X8, [X8 + 0x3F8]
	0x032F7538 LDR X1, [X8]
	0x032F753C BL 0x1C16DEC
	0x032F7540 ADRP X0, 0xE01000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {27}
	006 Move TEMP, X2
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {46}
	010 Move TEMP, X3
	011 And TEMP, TEMP, -2147483648
	012 Compare TEMP, -2147483648
	013 JumpIfEqual {59}
	014 Move W8, [X1+24]
	015 Subtract W8, W8, W2
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X0, [X0+16]
	018 Compare X0, 0
	019 JumpIfEqual {98}
	020 Move X8, [X0]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X5, [X8+856]
	024 Move X4, [X8+864]
	025 Move X30, [X31+32]
	026 CallNoReturn X5
	027 Move X0, 0xE30000
	028 Move X0, [X0+3136]
	029 Call 0x1C17D08
	030 Move X1, X31
	031 Call Environment.GetResourceString, X0
	032 Move X19, X0
	033 Move X0, 0xE02000
	034 Move X0, [X0+1320]
	035 Call 0x1C17D08
	036 Call 0x1C17F10
	037 Move X20, X0
	038 Move X0, 0xE28000
	039 Move X0, [X0+3912]
	040 Call 0x1C17D08
	041 Move X1, X0
	042 Move X0, X20
	043 Move X2, X19
	044 Move X3, X31
	045 Call ArgumentNullException..ctor, X0, X1, X2
	046 Move X0, 0xE25000
	047 Move X0, [X0+1648]
	048 Call 0x1C17D08
	049 Move X1, X31
	050 Call Environment.GetResourceString, X0
	051 Move X19, X0
	052 Move X0, 0xE05000
	053 Move X0, [X0+1888]
	054 Call 0x1C17D08
	055 Call 0x1C17F10
	056 Move X20, X0
	057 Move X0, 0xE08000
	058 Move X0, [X0+304]
	059 Move X0, 0xE25000
	060 Move X0, [X0+1648]
	061 Call 0x1C17D08
	062 Move X1, X31
	063 Call Environment.GetResourceString, X0
	064 Move X19, X0
	065 Move X0, 0xE05000
	066 Move X0, [X0+1888]
	067 Call 0x1C17D08
	068 Call 0x1C17F10
	069 Move X20, X0
	070 Move X0, 0xE25000
	071 Move X0, [X0+1608]
	072 Call 0x1C17D08
	073 Move X1, X0
	074 Move X0, X20
	075 Move X2, X19
	076 Move X3, X31
	077 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	078 Move X0, 0xE25000
	079 Move X0, [X0+1888]
	080 Call 0x1C17D08
	081 Move X1, X31
	082 Call Environment.GetResourceString, X0
	083 Move X19, X0
	084 Move X0, 0xE05000
	085 Move X0, [X0+1400]
	086 Call 0x1C17D08
	087 Call 0x1C17F10
	088 Move X1, X19
	089 Move X2, X31
	090 Move X20, X0
	091 Call ArgumentException..ctor, X0, X1
	092 Move X0, 0xE31000
	093 Move X0, [X0+928]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X20
	097 Call 0x1C17DEC
	098 Call __Error.FileNotOpen

Method: System.Byte[] ReadBytes(System.Int32 count)

Disassembly:
	0x032F7544 LDR X0, [X0 + 0x528]
	0x032F7548 BL 0x1C16D08
	0x032F754C BL 0x1C16F10
	0x032F7550 MOV X19, X0
	0x032F7554 ADRP X0, 0xE06000
	0x032F7558 LDR X0, [X0 + 0xEC8]
	0x032F755C BL 0x1C16D08
	0x032F7560 MOV X1, X0
	0x032F7564 MOV X0, X19
	0x032F7568 MOV X2, X31
	0x032F756C BL 0x330E100
	0x032F7570 B 0x32F7514
	0x032F7574 STR X30, [X31 - 0x20]!
	0x032F7578 STP X20, X19, [X31 + 0x10]
	0x032F757C MOV W20, W1
	0x032F7580 CMP W1, 0x7F
	0x032F7584 MOV X19, X0
	0x032F7588 B.LS 0x32F75B8
	0x032F758C MOV W8, W20
	0x032F7590 LDR X9, [X19]
	0x032F7594 ORR W1, W8, 0xFFFFFF80
	0x032F7598 MOV X0, X19
	0x032F759C LDP X10, X2, [X9 + 0x1C8]
	0x032F75A0 BLR X10
	0x032F75A4 UBFM W8, W20, 0x7, 0x1F
	0x032F75A8 UBFM W9, W20, 0xE, 0x1F
	0x032F75AC MOV W20, W8
	0x032F75B0 CBNZ W9, 0x32F7590
	0x032F75B4 MOV W20, W8
	0x032F75B8 LDR X8, [X19]
	0x032F75BC MOV X0, X19
	0x032F75C0 MOV W1, W20
	0x032F75C4 LDP X20, X19, [X31 + 0x10]
	0x032F75C8 LDP X3, X2, [X8 + 0x1C8]
	0x032F75CC LDR X30, [X31], #0x20
	0x032F75D0 BR X3
	0x032F75D4 STR X30, [X31 - 0x20]!
	0x032F75D8 STP X20, X19, [X31 + 0x10]
	0x032F75DC ADRP X19, 0x10E5000
	0x032F75E0 ADRP X20, 0xE2E000
	0x032F75E4 LDRB W8, [X19 + 0xA6F]
	0x032F75E8 LDR X20, [X20 + 0x260]
	0x032F75EC TBNZ X8, 0x0, 0x32F7604
	0x032F75F0 ADRP X0, 0xE2E000
	0x032F75F4 LDR X0, [X0 + 0x260]
	0x032F75F8 BL 0x1C16CF4
	0x032F75FC MOVZ W8, 0x1
	0x032F7600 STRB W8, [X19 + 0xA6F]
	0x032F7604 LDR X0, [X20]
	0x032F7608 BL 0x1C16F10
	0x032F760C MOV X19, X0
	0x032F7610 BL 0x32F67EC
	0x032F7614 LDR X8, [X20]
	0x032F7618 LDR X8, [X8 + 0xB8]
	0x032F761C STR X19, [X8]
	0x032F7620 LDP X20, X19, [X31 + 0x10]
	0x032F7624 LDR X30, [X31], #0x20
	0x032F7628 RET
	0x032F762C STR X30, [X31 - 0x30]!
	0x032F7630 STP X22, X21, [X31 + 0x10]
	0x032F7634 STP X20, X19, [X31 + 0x20]
	0x032F7638 ADRP X21, 0x10E5000
	0x032F763C ADRP X22, 0xE2F000
	0x032F7640 LDRB W8, [X21 + 0xA70]
	0x032F7644 LDR X22, [X22 + 0xE00]
	0x032F7648 MOV X20, X1
	0x032F764C MOV X19, X0
	0x032F7650 TBNZ X8, 0x0, 0x32F7668
	0x032F7654 ADRP X0, 0xE2F000
	0x032F7658 LDR X0, [X0 + 0xE00]
	0x032F765C BL 0x1C16CF4
	0x032F7660 MOVZ W8, 0x1
	0x032F7664 STRB W8, [X21 + 0xA70]
	0x032F7668 LDR X0, [X22]
	0x032F766C LDR W8, [X0 + 0xE0]
	0x032F7670 CBNZ W8, 0x32F7678
	0x032F7674 BL 0x1C16DFC
	0x032F7678 MOV X0, X19
	0x032F767C MOV X1, X31
	0x032F7680 BL 0x32E64D4
	0x032F7684 CBZ X20, 0x32F76A4
	0x032F7688 STR X20, [X19 + 0x18]
	0x032F768C LDR W8, [X20 + 0x10]
	0x032F7690 LDP X22, X21, [X31 + 0x10]
	0x032F7694 STR W8, [X19 + 0x24]
	0x032F7698 LDP X20, X19, [X31 + 0x20]
	0x032F769C LDR X30, [X31], #0x30
	0x032F76A0 RET
	0x032F76A4 ADRP X0, 0xE01000
	0x032F76A8 LDR X0, [X0 + 0x528]
	0x032F76AC BL 0x1C16D08
	0x032F76B0 BL 0x1C16F10
	0x032F76B4 MOV X19, X0
	0x032F76B8 ADRP X0, 0xE25000
	0x032F76BC LDR X0, [X0 + 0xCC0]
	0x032F76C0 BL 0x1C16D08
	0x032F76C4 MOV X1, X0
	0x032F76C8 MOV X0, X19
	0x032F76CC MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x10E6000
	008 Move W8, [X21+2665]
	009 Move W19, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xDFD000
	016 Move X0, [X0+1560]
	017 Call 0x1C17CF4
	018 Move X0, 0xE2C000
	019 Move X0, [X0+2640]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2665], W8
	023 Move TEMP, X19
	024 And TEMP, TEMP, -2147483648
	025 Compare TEMP, -2147483648
	026 JumpIfEqual {89}
	027 Move X8, [X20+16]
	028 Compare X8, 0
	029 JumpIfEqual {114}
	030 Compare W19, 0
	031 JumpIfEqual {70}
	032 Move X23, 0xDFD000
	033 Move X23, [X23+1560]
	034 Move W1, W19
	035 Move X0, [X23]
	036 Call 0x1C17D6C
	037 Move X21, X0
	038 Move W22, W31
	039 Move X0, [X20+16]
	040 Compare X0, 0
	041 JumpIfEqual {88}
	042 Move X8, [X0]
	043 Move X1, X21
	044 Move W2, W22
	045 Move W3, W19
	046 Move X9, [X8+856]
	047 Move X4, [X8+864]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Compare W0, 0
	050 JumpIfEqual {54}
	051 Subtract W19, W19, W0
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add W22, W0, W22
	054 Compare X21, 0
	055 JumpIfEqual {88}
	056 Move W8, [X21+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X0, [X23]
	059 Move W1, W22
	060 Call 0x1C17D6C
	061 Move X19, X0
	062 Move X0, X21
	063 Move W1, W31
	064 Move X2, X19
	065 Move W3, W31
	066 Move W4, W22
	067 Move X5, X31
	068 Call Buffer.InternalBlockCopy, X0, X1, X2, X3, X4
	069 Move X21, X19
	070 Move X19, 0xE2C000
	071 Move X19, [X19+2640]
	072 Move X0, [X19]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {78}
	076 Call 0x1C17DFC
	077 Move X0, [X19]
	078 Move X8, [X0+184]
	079 Move X21, [X8]
	080 Move X0, X21
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X30, [X31+48]
	086 Move X23, [X31+56]
	087 Return X0
	088 Call 0x1C17F20
	089 Move X0, 0xE25000
	090 Move X0, [X0+1648]
	091 Call 0x1C17D08
	092 Move X1, X31
	093 Call Environment.GetResourceString, X0
	094 Move X19, X0
	095 Move X0, 0xE05000
	096 Move X0, [X0+1888]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X20, X0
	100 Move X0, 0xE25000
	101 Move X0, [X0+1608]
	102 Call 0x1C17D08
	103 Move X1, X0
	104 Move X0, X20
	105 Move X2, X19
	106 Move X3, X31
	107 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	108 Move X0, 0xE31000
	109 Move X0, [X0+936]
	110 Call 0x1C17D08
	111 Move X1, X0
	112 Move X0, X20
	113 Call 0x1C17DEC
	114 Call __Error.FileNotOpen

Method: System.Void FillBuffer(System.Int32 numBytes)

Disassembly:
	0x032F76D0 BL 0x330E100
	0x032F76D4 ADRP X0, 0xE30000
	0x032F76D8 LDR X0, [X0 + 0x400]
	0x032F76DC BL 0x1C16D08
	0x032F76E0 MOV X1, X0
	0x032F76E4 MOV X0, X19
	0x032F76E8 BL 0x1C16DEC
	0x032F76EC AND W1, W1, 0x1
	0x032F76F0 MOV X2, X31
	0x032F76F4 STP X31, X31, [X0 + 0x18]
	0x032F76F8 B 0x32E95C0
	0x032F76FC STR X30, [X31 - 0x10]!
	0x032F7700 MOV X8, X0
	0x032F7704 LDR X0, [X0 + 0x18]
	0x032F7708 CBZ X0, 0x32F7734
	0x032F770C LDP W1, W8, [X8 + 0x20]
	0x032F7710 CMP W1, W8
	0x032F7714 B.NE 0x32F7720
	0x032F7718 MOVN W0, 0x0
	0x032F771C B 0x32F772C
	0x032F7720 MOV X2, X31
	0x032F7724 BL 0x3222A1C
	0x032F7728 AND W0, W0, 0xFFFF
	0x032F772C LDR X30, [X31], #0x10
	0x032F7730 RET
	0x032F7734 BL 0x32F486C
	0x032F7738 STR X30, [X31 - 0x10]!
	0x032F773C MOV X8, X0
	0x032F7740 LDR X0, [X0 + 0x18]
	0x032F7744 CBZ X0, 0x32F7778
	0x032F7748 LDP W1, W9, [X8 + 0x20]
	0x032F774C CMP W1, W9
	0x032F7750 B.NE 0x32F775C
	0x032F7754 MOVN W0, 0x0
	0x032F7758 B 0x32F7770
	0x032F775C ADD W9, W1, 0x1
	0x032F7760 MOV X2, X31
	0x032F7764 STR W9, [X8 + 0x20]
	0x032F7768 BL 0x3222A1C
	0x032F776C AND W0, W0, 0xFFFF
	0x032F7770 LDR X30, [X31], #0x10
	0x032F7774 RET
	0x032F7778 BL 0x32F486C
	0x032F777C STR X30, [X31 - 0x20]!
	0x032F7780 STP X20, X19, [X31 + 0x10]
	0x032F7784 CBZ X1, 0x32F77F8
	0x032F7788 MOV W8, W2
	0x032F778C TBNZ X2, 0x1F, 0x32F7848
	0x032F7790 TBNZ X3, 0x1F, 0x32F7880
	0x032F7794 LDR W9, [X1 + 0x18]
	0x032F7798 MOV X2, X1
	0x032F779C SUB W9, W9, W8
	0x032F77A0 CMP W9, W3
	0x032F77A4 B.LT 0x32F78D0
	0x032F77A8 MOV X19, X0
	0x032F77AC LDR X0, [X0 + 0x18]
	0x032F77B0 CBZ X0, 0x32F7920
	0x032F77B4 LDP W1, W9, [X19 + 0x20]
	0x032F77B8 SUB W20, W9, W1
	0x032F77BC CMP W20, 0x1
	0x032F77C0 B.LT 0x32F77E8
	0x032F77C4 CMP W20, W3
	0x032F77C8 CSEL W20, W3, W20, GT
	0x032F77CC MOV W3, W8
	0x032F77D0 MOV W4, W20
	0x032F77D4 MOV X5, X31
	0x032F77D8 BL 0x322D7E4
	0x032F77DC LDR W8, [X19 + 0x20]
	0x032F77E0 ADD W8, W8, W20
	0x032F77E4 STR W8, [X19 + 0x20]
	0x032F77E8 MOV W0, W20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0+24]
	006 Move X19, X0
	007 Move W20, W1
	008 Compare X8, 0
	009 JumpIfEqual {16}
	010 Move TEMP, X20
	011 And TEMP, TEMP, -2147483648
	012 Compare TEMP, -2147483648
	013 JumpIfEqual {54}
	014 Move W8, [X8+24]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X0, [X19+16]
	017 Compare X0, 0
	018 JumpIfEqual {79}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, [X0]
	021 Move X9, [X8+888]
	022 Move X1, [X8+896]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Add W31, W0, 1
	025 Move X8, [X19+24]
	026 Compare X8, 0
	027 JumpIfEqual {52}
	028 Move W9, [X8+24]
	029 Compare W9, 0
	030 JumpIfEqual {80}
	031 Move [X8+32], W0
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 
	037 Move W21, W31
	038 Move X8, [X0]
	039 Move X1, [X19+24]
	040 Subtract W3, W20, W21
	041 Move W2, W21
	042 Move X9, [X8+856]
	043 Move X4, [X8+864]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Compare W0, 0
	046 JumpIfEqual {53}
	047 Add W21, W0, W21
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X0, [X19+16]
	050 Compare X0, 0
	051 JumpIfNotEqual {38}
	052 Call 0x1C17F20
	053 Call __Error.EndOfFile
	054 Move X0, 0xE31000
	055 Move X0, [X0+944]
	056 Call 0x1C17D08
	057 Move X1, X31
	058 Call Environment.GetResourceString, X0
	059 Move X19, X0
	060 Move X0, 0xE05000
	061 Move X0, [X0+1888]
	062 Call 0x1C17D08
	063 Call 0x1C17F10
	064 Move X20, X0
	065 Move X0, 0xE31000
	066 Move X0, [X0+952]
	067 Call 0x1C17D08
	068 Move X1, X0
	069 Move X0, X20
	070 Move X2, X19
	071 Move X3, X31
	072 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	073 Move X0, 0xE31000
	074 Move X0, [X0+960]
	075 Call 0x1C17D08
	076 Move X1, X0
	077 Move X0, X20
	078 Call 0x1C17DEC
	079 Call __Error.FileNotOpen
	080 Call 0x1C17F28

Method: System.Int32 Read7BitEncodedInt()

Disassembly:
	0x032F6EE4 CBZ X8, 0x32F6F28
	0x032F6EE8 LDR W9, [X8 + 0x18]
	0x032F6EEC CMP W9, 0x1
	0x032F6EF0 B.LS 0x32F6F2C
	0x032F6EF4 UBFM W9, W1, 0x8, 0x1F
	0x032F6EF8 STRB W9, [X8 + 0x21]
	0x032F6EFC LDR X8, [X0 + 0x10]
	0x032F6F00 CBZ X8, 0x32F6F28
	0x032F6F04 LDR X9, [X8]
	0x032F6F08 LDR X1, [X0 + 0x18]
	0x032F6F0C MOVZ W3, 0x2
	0x032F6F10 MOV X0, X8
	0x032F6F14 LDR X5, [X9 + 0x388]
	0x032F6F18 LDR X4, [X9 + 0x390]
	0x032F6F1C MOV W2, W31
	0x032F6F20 LDR X30, [X31], #0x10
	0x032F6F24 BR X5
	0x032F6F28 BL 0x1C16F20
	0x032F6F2C BL 0x1C16F28
	0x032F6F30 STR X30, [X31 - 0x10]!
	0x032F6F34 LDR X8, [X0 + 0x18]
	0x032F6F38 CBZ X8, 0x32F6FC8
	0x032F6F3C LDR W9, [X8 + 0x18]
	0x032F6F40 CBZ W9, 0x32F6FCC
	0x032F6F44 STRB W1, [X8 + 0x20]
	0x032F6F48 LDR X8, [X0 + 0x18]
	0x032F6F4C CBZ X8, 0x32F6FC8
	0x032F6F50 LDR W9, [X8 + 0x18]
	0x032F6F54 CMP W9, 0x1
	0x032F6F58 B.LS 0x32F6FCC
	0x032F6F5C UBFM W9, W1, 0x8, 0x1F
	0x032F6F60 STRB W9, [X8 + 0x21]
	0x032F6F64 LDR X8, [X0 + 0x18]
	0x032F6F68 CBZ X8, 0x32F6FC8
	0x032F6F6C LDR W9, [X8 + 0x18]
	0x032F6F70 CMP W9, 0x2
	0x032F6F74 B.LS 0x32F6FCC
	0x032F6F78 UBFM W9, W1, 0x10, 0x1F
	0x032F6F7C STRB W9, [X8 + 0x22]
	0x032F6F80 LDR X8, [X0 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move W21, W31
	007 Move W20, W31
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X8, [X19]
	010 Move X0, X19
	011 Move X9, [X8+472]
	012 Move X1, [X8+480]
	013 NotImplemented "Instruction BLR not yet implemented."
	014 And W8, W0, 127
	015 NotImplemented "Instruction LSLV not yet implemented."
	016 Or W20, W8, W20
	017 Add W21, W21, 7
	018 Move TEMP, X0
	019 And TEMP, TEMP, 128
	020 Compare TEMP, 128
	021 JumpIfEqual {8}
	022 Move W0, W20
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0
	028 Move X0, 0xE32000
	029 Move X0, [X0+888]
	030 Call 0x1C17D08
	031 Move X1, X31
	032 Call Environment.GetResourceString, X0
	033 Move X19, X0
	034 Move X0, 0xE2B000
	035 Move X0, [X0+3080]
	036 Call 0x1C17D08
	037 Call 0x1C17F10
	038 Move X1, X19
	039 Move X2, X31
	040 Move X20, X0
	041 Call FormatException..ctor, X0, X1
	042 Move X0, 0xE32000
	043 Move X0, [X0+896]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X20
	047 Call 0x1C17DEC

