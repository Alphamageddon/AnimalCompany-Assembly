Type: System.IO.FileSystem

Method: System.Void DeleteFile(System.String fullPath)

Disassembly:
	0x032EFF10 LDP X22, X21, [X31 + 0x10]
	0x032EFF14 LDP X30, X23, [X31], #0x30
	0x032EFF18 BR X5
	0x032EFF1C STR X30, [X31 - 0x30]!
	0x032EFF20 STP X22, X21, [X31 + 0x10]
	0x032EFF24 STP X20, X19, [X31 + 0x20]
	0x032EFF28 MOV X19, X3
	0x032EFF2C MOV X3, X31
	0x032EFF30 MOV W20, W2
	0x032EFF34 MOV X21, X1
	0x032EFF38 MOV X22, X0
	0x032EFF3C BL 0x32E3B98
	0x032EFF40 MOV X0, X22
	0x032EFF44 MOV X1, X21
	0x032EFF48 MOV W2, W20
	0x032EFF4C MOV X3, X19
	0x032EFF50 LDP X20, X19, [X31 + 0x20]
	0x032EFF54 LDP X22, X21, [X31 + 0x10]
	0x032EFF58 LDR X30, [X31], #0x30
	0x032EFF5C B 0x32EFF60
	0x032EFF60 SUB X31, X31, 0xD0
	0x032EFF64 STR X30, [X31 + 0x90]
	0x032EFF68 STP X24, X23, [X31 + 0xA0]
	0x032EFF6C STP X22, X21, [X31 + 0xB0]
	0x032EFF70 STP X20, X19, [X31 + 0xC0]
	0x032EFF74 ADRP X24, 0x10ED000
	0x032EFF78 ADRP X23, 0xE07000
	0x032EFF7C LDRB W8, [X24 + 0xA25]
	0x032EFF80 LDR X23, [X23 + 0x280]
	0x032EFF84 MOV X19, X3
	0x032EFF88 MOV W20, W2
	0x032EFF8C MOV X22, X1
	0x032EFF90 MOV X21, X0
	0x032EFF94 TBNZ X8, 0x0, 0x32EFFB8
	0x032EFF98 ADRP X0, 0xE38000
	0x032EFF9C LDR X0, [X0 + 0x110]
	0x032EFFA0 BL 0x1C16CF4
	0x032EFFA4 ADRP X0, 0xE07000
	0x032EFFA8 LDR X0, [X0 + 0x280]
	0x032EFFAC BL 0x1C16CF4
	0x032EFFB0 MOVZ W8, 0x1
	0x032EFFB4 STRB W8, [X24 + 0xA25]
	0x032EFFB8 LDR X0, [X23]
	0x032EFFBC MOVI V0.2D, 0x0
	0x032EFFC0 STR X31, [X31 + 0x80]
	0x032EFFC4 STP V0, V0, [X31 + 0x40]
	0x032EFFC8 STP V0, V0, [X31 + 0x60]
	0x032EFFCC STP V0, V0, [X31 + 0x20]
	0x032EFFD0 STP X19, X22, [X31 + 0x50]
	0x032EFFD4 STR W20, [X31 + 0x40]
	0x032EFFD8 STR X21, [X31 + 0x48]
	0x032EFFDC ADRP X19, 0xE38000
	0x032EFFE0 LDR W8, [X0 + 0xE0]
	0x032EFFE4 LDR X19, [X19 + 0x110]
	0x032EFFE8 CBNZ W8, 0x32EFFF0
	0x032EFFEC BL 0x1C16DFC
	0x032EFFF0 ADD X8, X31, 0x8
	0x032EFFF4 MOV X0, X31
	0x032EFFF8 BL 0x32C4770
	0x032EFFFC LDUR V0, [X31 + 0x8]
	0x032F0000 LDR X9, [X31 + 0x18]
	0x032F0004 LDR X2, [X19]
	0x032F0008 ADD X8, X31, 0x20
	0x032F000C ORR X19, X8, 0xF
	0x032F0010 MOVN W10, 0x0
	0x032F0014 ADD X1, X31, 0x20
	0x032F0018 MOV X0, X19
	0x032F001C STUR V0, [X31 + 0x28]
	0x032F0020 STR X9, [X31 + 0x38]
	0x032F0024 STR W10, [X31 + 0x20]
	0x032F0028 BL 0x2195CB8
	0x032F002C MOV X0, X19
	0x032F0030 MOV X1, X31
	0x032F0034 BL 0x32C47F8
	0x032F0038 LDP X20, X19, [X31 + 0xC0]
	0x032F003C LDP X22, X21, [X31 + 0xB0]
	0x032F0040 LDP X24, X23, [X31 + 0xA0]
	0x032F0044 LDR X30, [X31 + 0x90]
	0x032F0048 ADD X31, X31, 0xD0
	0x032F004C RET
	0x032F0050 STR X30, [X31 - 0x20]!
	0x032F0054 STP X20, X19, [X31 + 0x10]
	0x032F0058 MOV X19, X1
	0x032F005C MOV X20, X0
	0x032F0060 BL 0x32EFDD4
	0x032F0064 LDR X8, [X20]
	0x032F0068 MOV W2, W0
	0x032F006C MOV X0, X20
	0x032F0070 MOV X1, X19
	0x032F0074 LDR X4, [X8 + 0x268]
	0x032F0078 LDR X3, [X8 + 0x270]
	0x032F007C LDP X20, X19, [X31 + 0x10]
	0x032F0080 LDR X30, [X31], #0x20
	0x032F0084 BR X4
	0x032F0088 SUB X31, X31, 0x50
	0x032F008C STP X30, X23, [X31 + 0x20]
	0x032F0090 STP X22, X21, [X31 + 0x30]
	0x032F0094 STP X20, X19, [X31 + 0x40]
	0x032F0098 ADRP X23, 0x10EC000
	0x032F009C ADRP X22, 0xE2E000
	0x032F00A0 LDRB W8, [X23 + 0xA26]
	0x032F00A4 LDR X22, [X22 + 0xD68]
	0x032F00A8 MOV W21, W2
	0x032F00AC MOV X19, X1
	0x032F00B0 MOV X20, X0
	0x032F00B4 TBNZ X8, 0x0, 0x32F00D8
	0x032F00B8 ADRP X0, 0xE2E000
	0x032F00BC LDR X0, [X0 + 0xD50]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10EE000
	007 Move X20, 0xE30000
	008 Move W8, [X21+2587]
	009 Move X20, [X20+3448]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xE30000
	016 Move X0, [X0+3440]
	017 Call 0x1C17CF4
	018 Move X0, 0xE30000
	019 Move X0, [X0+3448]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2587], W8
	023 Move X0, [X20]
	024 Move [X31+8], X31
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Move X1, X31
	031 Call Sys.Unlink, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, -2147483648
	034 Compare TEMP, -2147483648
	035 JumpIfNotEqual {94}
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X31
	042 Call Sys.GetLastErrorInfo
	043 Move W8, 45
	044 Move X20, X0
	045 NotImplemented "Instruction MOVK not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W8, 72
	048 NotImplemented "Instruction MOVK not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X8, 0xE30000
	051 Move X8, [X8+3440]
	052 Move X0, [X8]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X0, X19
	058 Move X1, X31
	059 Call PathInternal.TrimEndingDirectorySeparator, X0
	060 Move X22, 0x10EB000
	061 Move W8, [X22+1890]
	062 Move X21, X0
	063 Compare W8, 0
	064 JumpIfEqual {71}
	065 Compare X21, 0
	066 JumpIfEqual {78}
	067 Move X0, X21
	068 Move X1, X31
	069 Call String.GetRawStringData, X0
	070 Move W1, [X21+16]
	071 Move X0, 0xE2B000
	072 Move X0, [X0+656]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X22+1890], W8
	076 Compare X21, 0
	077 JumpIfNotEqual {67}
	078 Move X0, X31
	079 Move X1, X31
	080 Move W21, 72
	081 Add X3, X31, 8
	082 Move W2, 0x8000
	083 NotImplemented "Instruction MOVK not yet implemented."
	084 Call FileSystem.FileExists, X0, X1, X2
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfEqual {110}
	089 Move W8, [X31+8]
	090 Move W9, 2
	091 NotImplemented "Instruction MOVK not yet implemented."
	092 Add W9, W9, 43
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X20, [X31+32]
	095 Move X19, [X31+40]
	096 Move X22, [X31+16]
	097 Move X21, [X31+24]
	098 Move X30, [X31+48]
	099 Return 
	100 Move W8, 31
	101 NotImplemented "Instruction MOVK not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X21, X20
	104 Move W0, 2
	105 NotImplemented "Instruction MOVK not yet implemented."
	106 Move X1, X31
	107 Call InteropErrorExtensions.Info, X0
	108 Move X20, X0
	109 Move X21, X0
	110 NotImplemented "Instruction BFM not yet implemented."
	111 Move X0, X20
	112 Move X1, X19
	113 Move W2, W31
	114 Move X3, X31
	115 Call Interop.GetExceptionForIoErrno, X0, X1, X2
	116 Move X19, X0
	117 Move X0, 0xE38000
	118 Move X0, [X0+152]
	119 Call 0x1C17D08
	120 Move X1, X0
	121 Move X0, X19
	122 Call 0x1C17DEC

Method: System.Void CreateDirectory(System.String fullPath)

Disassembly:
	0x032F01D0 BLR X9
	0x032F01D4 LDR X1, [X31 + 0x18]
	0x032F01D8 CBNZ X1, 0x32F0190
	0x032F01DC BL 0x1C16F20
	0x032F01E0 BL 0x1C16F20
	0x032F01E4 BL 0x1C16F20
	0x032F01E8 B 0x32F01F4
	0x032F01EC B 0x32F01F4
	0x032F01F0 B 0x32F01F4
	0x032F01F4 MOV X19, X0
	0x032F01F8 CMP W1, 0x1
	0x032F01FC B.NE 0x32F0234
	0x032F0200 MOV X0, X19
	0x032F0204 BL 0x3EB1AD0
	0x032F0208 LDR X8, [X0]
	0x032F020C STR X8, [X31 + 0x8]
	0x032F0210 BL 0x3EB1AE0
	0x032F0214 ADD X0, X31, 0x8
	0x032F0218 BL 0x1BB3A54
	0x032F021C LDP X20, X19, [X31 + 0x40]
	0x032F0220 LDP X22, X21, [X31 + 0x30]
	0x032F0224 LDP X30, X23, [X31 + 0x20]
	0x032F0228 ADD X31, X31, 0x50
	0x032F022C RET
	0x032F0230 MOV X19, X0
	0x032F0234 ADD X0, X31, 0x8
	0x032F0238 BL 0x1BB3A54
	0x032F023C MOV X0, X19
	0x032F0240 BL 0x1D2C690
	0x032F0244 BL 0x1990590
	0x032F0248 STP X30, X21, [X31 - 0x20]!
	0x032F024C STP X20, X19, [X31 + 0x10]
	0x032F0250 ADRP X21, 0x10EC000
	0x032F0254 ADRP X20, 0xE0A000
	0x032F0258 LDRB W8, [X21 + 0xA28]
	0x032F025C LDR X20, [X20 + 0xC10]
	0x032F0260 MOV X19, X0
	0x032F0264 TBNZ X8, 0x0, 0x32F027C
	0x032F0268 ADRP X0, 0xE0A000
	0x032F026C LDR X0, [X0 + 0xC10]
	0x032F0270 BL 0x1C16CF4
	0x032F0274 MOVZ W8, 0x1
	0x032F0278 STRB W8, [X21 + 0xA28]
	0x032F027C LDR X8, [X19]
	0x032F0280 MOVZ W1, 0x1
	0x032F0284 MOV X0, X19
	0x032F0288 LDR X9, [X8 + 0x288]
	0x032F028C LDR X2, [X8 + 0x290]
	0x032F0290 BLR X9
	0x032F0294 LDR X0, [X20]
	0x032F0298 LDR W8, [X0 + 0xE0]
	0x032F029C CBNZ W8, 0x32F02A4
	0x032F02A0 BL 0x1C16DFC
	0x032F02A4 MOV X0, X19
	0x032F02A8 LDP X20, X19, [X31 + 0x10]
	0x032F02AC MOV X1, X31
	0x032F02B0 LDP X30, X21, [X31], #0x20
	0x032F02B4 B 0x33B3E9C
	0x032F02B8 LDR X8, [X0]
	0x032F02BC LDR X2, [X8 + 0x278]
	0x032F02C0 LDR X1, [X8 + 0x280]
	0x032F02C4 BR X2
	0x032F02C8 RET
	0x032F02CC STP X30, X25, [X31 - 0x40]!
	0x032F02D0 STP X24, X23, [X31 + 0x10]
	0x032F02D4 STP X22, X21, [X31 + 0x20]
	0x032F02D8 STP X20, X19, [X31 + 0x30]
	0x032F02DC ADRP X22, 0x10EC000
	0x032F02E0 ADRP X21, 0xE04000
	0x032F02E4 LDRB W8, [X22 + 0xA29]
	0x032F02E8 LDR X21, [X21 + 0x7B8]
	0x032F02EC MOV X19, X1
	0x032F02F0 MOV X20, X0
	0x032F02F4 TBNZ X8, 0x0, 0x32F033C
	0x032F02F8 ADRP X0, 0xE2D000
	0x032F02FC LDR X0, [X0 + 0xE48]
	0x032F0300 BL 0x1C16CF4
	0x032F0304 ADRP X0, 0xE0B000
	0x032F0308 LDR X0, [X0 + 0x7E8]
	0x032F030C BL 0x1C16CF4
	0x032F0310 ADRP X0, 0xE04000
	0x032F0314 LDR X0, [X0 + 0x7B8]
	0x032F0318 BL 0x1C16CF4
	0x032F031C ADRP X0, 0xE37000
	0x032F0320 LDR X0, [X0 + 0x118]
	0x032F0324 BL 0x1C16CF4
	0x032F0328 ADRP X0, 0xE37000
	0x032F032C LDR X0, [X0 + 0xD8]
	0x032F0330 BL 0x1C16CF4
	0x032F0334 MOVZ W8, 0x1
	0x032F0338 STRB W8, [X22 + 0xA29]
	0x032F033C LDR X0, [X21]
	0x032F0340 LDR W8, [X0 + 0xE0]
	0x032F0344 CBNZ W8, 0x32F034C
	0x032F0348 BL 0x1C16DFC
	0x032F034C ADRP X22, 0x10E8000
	0x032F0350 LDRB W8, [X22 + 0xF1B]
	0x032F0354 CBNZ W8, 0x32F036C
	0x032F0358 ADRP X0, 0xE04000
	0x032F035C LDR X0, [X0 + 0x7B8]
	0x032F0360 BL 0x1C16CF4
	0x032F0364 MOVZ W8, 0x1
	0x032F0368 STRB W8, [X22 + 0xF1B]
	0x032F036C LDR X8, [X21]
	0x032F0370 ADRP X25, 0xE37000
	0x032F0374 LDR W9, [X8 + 0xE0]
	0x032F0378 LDR X25, [X25 + 0xD8]
	0x032F037C CBNZ W9, 0x32F038C
	0x032F0380 MOV X0, X8
	0x032F0384 BL 0x1C16DFC
	0x032F0388 LDR X8, [X21]
	0x032F038C LDR X0, [X25]
	0x032F0390 LDR X8, [X8 + 0xB8]
	0x032F0394 LDR W9, [X0 + 0xE0]
	0x032F0398 LDR X21, [X8 + 0x28]
	0x032F039C CBNZ W9, 0x32F03A8
	0x032F03A0 BL 0x1C16DFC
	0x032F03A4 LDR X0, [X25]
	0x032F03A8 LDR X8, [X0 + 0xB8]
	0x032F03AC ADRP X24, 0xE0B000
	0x032F03B0 LDR X22, [X8 + 0x10]
	0x032F03B4 LDR X24, [X24 + 0x7E8]
	0x032F03B8 CBNZ X22, 0x32F040C
	0x032F03BC LDR W8, [X0 + 0xE0]
	0x032F03C0 CBNZ W8, 0x32F03CC
	0x032F03C4 BL 0x1C16DFC
	0x032F03C8 LDR X0, [X25]
	0x032F03CC ADRP X9, 0xE2D000
	0x032F03D0 LDR X8, [X0 + 0xB8]
	0x032F03D4 LDR X9, [X9 + 0xE48]
	0x032F03D8 LDR X23, [X8]
	0x032F03DC LDR X0, [X9]
	0x032F03E0 BL 0x1C16F10
	0x032F03E4 ADRP X8, 0xE37000
	0x032F03E8 LDR X8, [X8 + 0x118]
	0x032F03EC MOV X1, X23
	0x032F03F0 MOV X3, X31
	0x032F03F4 MOV X22, X0
	0x032F03F8 LDR X2, [X8]
	0x032F03FC BL 0x2A6B948
	0x032F0400 LDR X8, [X25]
	0x032F0404 LDR X8, [X8 + 0xB8]
	0x032F0408 STR X22, [X8 + 0x10]
	0x032F040C LDR X0, [X24]
	0x032F0410 LDR W8, [X0 + 0xE0]
	0x032F0414 CBNZ W8, 0x32F041C
	0x032F0418 BL 0x1C16DFC
	0x032F041C ADRP X23, 0x10E9000
	0x032F0420 LDRB W8, [X23 + 0x88D]
	0x032F0424 CBNZ W8, 0x32F043C
	0x032F0428 ADRP X0, 0xE0B000
	0x032F042C LDR X0, [X0 + 0x7E8]
	0x032F0430 BL 0x1C16CF4
	0x032F0434 MOVZ W8, 0x1
	0x032F0438 STRB W8, [X23 + 0x88D]
	0x032F043C LDR X0, [X24]
	0x032F0440 LDR W8, [X0 + 0xE0]
	0x032F0444 CBNZ W8, 0x32F0450
	0x032F0448 BL 0x1C16DFC
	0x032F044C LDR X0, [X24]
	0x032F0450 CBZ X21, 0x32F0488
	0x032F0454 LDR X8, [X0 + 0xB8]
	0x032F0458 MOV X0, X21
	0x032F045C MOV X1, X22
	0x032F0460 MOV X2, X20
	0x032F0464 LDR X5, [X8 + 0x8]
	0x032F0468 MOV X3, X19
	0x032F046C LDP X20, X19, [X31 + 0x30]
	0x032F0470 LDP X22, X21, [X31 + 0x20]
	0x032F0474 LDP X24, X23, [X31 + 0x10]
	0x032F0478 MOVZ W4, 0x8
	0x032F047C MOV X6, X31
	0x032F0480 LDP X30, X25, [X31], #0x40
	0x032F0484 B 0x33F96F0
	0x032F0488 BL 0x1C16F20
	0x032F048C SUB X31, X31, 0x20
	0x032F0490 STR X30, [X31 + 0x10]
	0x032F0494 MOVZ W7, 0x1
	0x032F0498 MOV W6, W31
	0x032F049C BL 0x32F04AC
	0x032F04A0 LDR X30, [X31 + 0x10]
	0x032F04A4 ADD X31, X31, 0x20
	0x032F04A8 RET
	0x032F04AC SUB X31, X31, 0x80
	0x032F04B0 STP X29, X30, [X31 + 0x20]
	0x032F04B4 STP X28, X27, [X31 + 0x30]
	0x032F04B8 STP X26, X25, [X31 + 0x40]
	0x032F04BC STP X24, X23, [X31 + 0x50]
	0x032F04C0 STP X22, X21, [X31 + 0x60]
	0x032F04C4 STP X20, X19, [X31 + 0x70]
	0x032F04C8 ADRP X20, 0x10EC000
	0x032F04CC LDRB W8, [X20 + 0xA2A]
	0x032F04D0 MOV W21, W7
	0x032F04D4 MOV W26, W6
	0x032F04D8 MOV X22, X5
	0x032F04DC MOV X29, X4
	0x032F04E0 MOV W24, W3
	0x032F04E4 MOV W27, W2
	0x032F04E8 MOV X23, X1
	0x032F04EC MOV X19, X0
	0x032F04F0 TBNZ X8, 0x0, 0x32F052C
	0x032F04F4 ADRP X0, 0xE37000
	0x032F04F8 LDR X0, [X0 + 0x120]
	0x032F04FC BL 0x1C16CF4
	0x032F0500 ADRP X0, 0xE37000
	0x032F0504 LDR X0, [X0 + 0x128]
	0x032F0508 BL 0x1C16CF4
	0x032F050C ADRP X0, 0xE37000
	0x032F0510 LDR X0, [X0 + 0x130]
	0x032F0514 BL 0x1C16CF4
	0x032F0518 ADRP X0, 0xE37000
	0x032F051C LDR X0, [X0 + 0xD8]
	0x032F0520 BL 0x1C16CF4
	0x032F0524 MOVZ W8, 0x1
	0x032F0528 STRB W8, [X20 + 0xA2A]
	0x032F052C LDR X8, [X19]
	0x032F0530 MOV X0, X19
	0x032F0534 LDP X9, X1, [X8 + 0x1A8]
	0x032F0538 BLR X9
	0x032F053C TBZ X0, 0x0, 0x32F0678
	0x032F0540 MOV X0, X19
	0x032F0544 BL 0x32EFB80
	0x032F0548 CBZ X0, 0x32F069C
	0x032F054C ADRP X20, 0xE37000
	0x032F0550 LDR X20, [X20 + 0xD8]
	0x032F0554 MOV X1, X31
	0x032F0558 TBZ X26, 0x0, 0x32F0568
	0x032F055C BL 0x33E20D8
	0x032F0560 MOV X26, X0
	0x032F0564 B 0x32F0570
	0x032F0568 BL 0x33E16DC
	0x032F056C MOV X26, X31
	0x032F0570 LDR X0, [X20]
	0x032F0574 MOV W25, W24
	0x032F0578 LDR W8, [X0 + 0xE0]
	0x032F057C CBZ W8, 0x32F0588
	0x032F0580 MOV W24, W27
	0x032F0584 B 0x32F0594
	0x032F0588 MOV W24, W27
	0x032F058C BL 0x1C16DFC
	0x032F0590 LDR X0, [X20]
	0x032F0594 LDR X8, [X0 + 0xB8]
	0x032F0598 LDR X27, [X8 + 0x18]
	0x032F059C ADRP X8, 0xE37000
	0x032F05A0 LDR X8, [X8 + 0x128]
	0x032F05A4 CBNZ X27, 0x32F0600
	0x032F05A8 LDR W8, [X0 + 0xE0]
	0x032F05AC CBNZ W8, 0x32F05B8
	0x032F05B0 BL 0x1C16DFC
	0x032F05B4 LDR X0, [X20]
	0x032F05B8 ADRP X9, 0xE37000
	0x032F05BC LDR X8, [X0 + 0xB8]
	0x032F05C0 LDR X9, [X9 + 0x120]
	0x032F05C4 LDR X28, [X8]
	0x032F05C8 LDR X0, [X9]
	0x032F05CC BL 0x1C16F10
	0x032F05D0 ADRP X8, 0xE37000
	0x032F05D4 LDR X8, [X8 + 0x130]
	0x032F05D8 MOV X1, X28
	0x032F05DC MOV X3, X31
	0x032F05E0 MOV X27, X0
	0x032F05E4 LDR X2, [X8]
	0x032F05E8 BL 0x2D30128
	0x032F05EC LDR X8, [X20]
	0x032F05F0 LDR X8, [X8 + 0xB8]
	0x032F05F4 STR X27, [X8 + 0x18]
	0x032F05F8 ADRP X8, 0xE37000
	0x032F05FC LDR X8, [X8 + 0x128]
	0x032F0600 LDR X0, [X8]
	0x032F0604 BL 0x1C16F10
	0x032F0608 AND W2, W21, 0x1
	0x032F060C MOVZ W1, 0x1
	0x032F0610 MOV X3, X27
	0x032F0614 MOV X4, X22
	0x032F0618 MOV X5, X19
	0x032F061C MOV X6, X23
	0x032F0620 MOV W7, W24
	0x032F0624 MOV X28, X0
	0x032F0628 STR X29, [X31 + 0x8]
	0x032F062C STR W25, [X31]
	0x032F0630 BL 0x32F06A0
	0x032F0634 MOV X0, X19
	0x032F0638 CBZ X26, 0x32F064C
	0x032F063C MOV X1, X26
	0x032F0640 MOV X2, X28
	0x032F0644 BL 0x32F07E4
	0x032F0648 B 0x32F0654
	0x032F064C MOV X1, X28
	0x032F0650 BL 0x32F0964
	0x032F0654 MOV X0, X28
	0x032F0658 LDP X20, X19, [X31 + 0x70]
	0x032F065C LDP X22, X21, [X31 + 0x60]
	0x032F0660 LDP X24, X23, [X31 + 0x50]
	0x032F0664 LDP X26, X25, [X31 + 0x40]
	0x032F0668 LDP X28, X27, [X31 + 0x30]
	0x032F066C LDP X29, X30, [X31 + 0x20]
	0x032F0670 ADD X31, X31, 0x80
	0x032F0674 RET
	0x032F0678 MOV X0, X31
	0x032F067C BL 0x32E1884
	0x032F0680 MOV X19, X0
	0x032F0684 ADRP X0, 0xE37000
	0x032F0688 LDR X0, [X0 + 0x138]
	0x032F068C BL 0x1C16D08
	0x032F0690 MOV X1, X0
	0x032F0694 MOV X0, X19
	0x032F0698 BL 0x1C16DEC
	0x032F069C BL 0x1C16F20
	0x032F06A0 STP X29, X30, [X31 - 0x60]!
	0x032F06A4 STP X28, X27, [X31 + 0x10]
	0x032F06A8 STP X26, X25, [X31 + 0x20]
	0x032F06AC STP X24, X23, [X31 + 0x30]
	0x032F06B0 STP X22, X21, [X31 + 0x40]
	0x032F06B4 STP X20, X19, [X31 + 0x50]
	0x032F06B8 ADRP X29, 0x10EC000
	0x032F06BC ADRP X9, 0xE0B000
	0x032F06C0 LDR X25, [X31 + 0x68]
	0x032F06C4 LDRB W8, [X29 + 0xA42]
	0x032F06C8 LDR W26, [X31 + 0x60]
	0x032F06CC LDR X9, [X9 + 0x7D8]
	0x032F06D0 MOV W20, W7
	0x032F06D4 MOV X21, X6
	0x032F06D8 MOV X22, X5
	0x032F06DC MOV X23, X4
	0x032F06E0 MOV X24, X3
	0x032F06E4 MOV X19, X0
	0x032F06E8 AND W28, W1, 0x1
	0x032F06EC AND W27, W2, 0x1
	0x032F06F0 TBNZ X8, 0x0, 0x32F0728
	0x032F06F4 ADRP X0, 0xE0B000
	0x032F06F8 LDR X0, [X0 + 0x7D8]
	0x032F06FC BL 0x1C16CF4
	0x032F0700 ADRP X0, 0xE2B000
	0x032F0704 LDR X0, [X0 + 0x580]
	0x032F0708 BL 0x1C16CF4
	0x032F070C ADRP X0, 0xE37000
	0x032F0710 LDR X0, [X0 + 0x140]
	0x032F0714 BL 0x1C16CF4
	0x032F0718 ADRP X9, 0xE0B000
	0x032F071C LDR X9, [X9 + 0x7D8]
	0x032F0720 MOVZ W8, 0x1
	0x032F0724 STRB W8, [X29 + 0xA42]
	0x032F0728 LDR X0, [X9]
	0x032F072C ADRP X29, 0xE37000
	0x032F0730 LDR W8, [X0 + 0xE0]
	0x032F0734 LDR X29, [X29 + 0x140]
	0x032F0738 CBNZ W8, 0x32F0740
	0x032F073C BL 0x1C16DFC
	0x032F0740 MOV X0, X31
	0x032F0744 BL 0x33DD2A8
	0x032F0748 LDR X5, [X29]
	0x032F074C MOV X3, X0
	0x032F0750 MOVZ W4, 0x8
	0x032F0754 MOV X0, X19
	0x032F0758 MOV X1, X24
	0x032F075C MOV X2, X23
	0x032F0760 BL 0x269CBD4
	0x032F0764 STRB W28, [X19 + 0x54]
	0x032F0768 STRB W27, [X19 + 0x55]
	0x032F076C STP X22, X21, [X19 + 0x58]
	0x032F0770 STP W20, W26, [X19 + 0x68]
	0x032F0774 CBZ X25, 0x32F07C8
	0x032F0778 ADRP X8, 0xE2B000
	0x032F077C LDR X8, [X8 + 0x580]
	0x032F0780 STR X25, [X19 + 0x70]
	0x032F0784 LDR X0, [X8]
	0x032F0788 LDR W8, [X0 + 0xE0]
	0x032F078C CBNZ W8, 0x32F0794
	0x032F0790 BL 0x1C16DFC
	0x032F0794 MOV X0, X31
	0x032F0798 BL 0x33DD730
	0x032F079C STR X0, [X19 + 0x78]
	0x032F07A0 MOV X0, X19
	0x032F07A4 MOV X1, X19
	0x032F07A8 LDP X20, X19, [X31 + 0x50]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x10ED000
	015 Move W8, [X20+2588]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {44}
	021 Move X0, 0xE2F000
	022 Move X0, [X0+3440]
	023 Call 0x1C17CF4
	024 Move X0, 0xE38000
	025 Move X0, [X0+160]
	026 Call 0x1C17CF4
	027 Move X0, 0xE38000
	028 Move X0, [X0+168]
	029 Call 0x1C17CF4
	030 Move X0, 0xE38000
	031 Move X0, [X0+176]
	032 Call 0x1C17CF4
	033 Move X0, 0xE38000
	034 Move X0, [X0+184]
	035 Call 0x1C17CF4
	036 Move X0, 0xE38000
	037 Move X0, [X0+192]
	038 Call 0x1C17CF4
	039 Move X0, 0xE2F000
	040 Move X0, [X0+3448]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X20+2588], W8
	044 Move [X31], X31
	045 Compare X19, 0
	046 JumpIfEqual {395}
	047 Move W21, [X19+16]
	048 Move X25, 0x10EA000
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W8, [X25+1890]
	051 Compare W8, 0
	052 JumpIfNotEqual {58}
	053 Move X0, 0xE2B000
	054 Move X0, [X0+656]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X25+1890], W8
	058 Move X0, X19
	059 Move X1, X31
	060 Call String.GetRawStringData, X0
	061 Move X23, 0xE2F000
	062 Move X23, [X23+3440]
	063 Move W20, [X19+16]
	064 Move X22, X0
	065 Move X8, [X23]
	066 Move W9, [X8+224]
	067 Compare W9, 0
	068 JumpIfNotEqual {71}
	069 Move X0, X8
	070 Call 0x1C17DFC
	071 Move X0, X22
	072 Move X1, X20
	073 Move X2, X31
	074 Call PathInternal.EndsInDirectorySeparator, X0
	075 And W8, W0, 1
	076 Subtract W21, W21, W8
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move W1, 1
	079 Move X0, X19
	080 Move X2, X31
	081 Call String.get_Chars, X0, X1
	082 Move X8, [X23]
	083 Move W20, W0
	084 Move W9, [X8+224]
	085 Compare W9, 0
	086 JumpIfNotEqual {89}
	087 Move X0, X8
	088 Call 0x1C17DFC
	089 Move W0, W20
	090 Move X1, X31
	091 Call PathInternal.IsDirectorySeparator, X0
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {396}
	096 Move W21, 2
	097 Move W8, [X25+1890]
	098 Compare W8, 0
	099 JumpIfNotEqual {105}
	100 Move X0, 0xE2B000
	101 Move X0, [X0+656]
	102 Call 0x1C17CF4
	103 Move W8, 1
	104 Move [X25+1890], W8
	105 Move X0, X19
	106 Move X1, X31
	107 Call String.GetRawStringData, X0
	108 Move W1, [X19+16]
	109 Add X3, X31, 8
	110 Move W2, 0x4000
	111 Move [X31+8], X31
	112 Call FileSystem.FileExists, X0, X1, X2
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfEqual {381}
	117 Move X8, 0xE38000
	118 Move X8, [X8+192]
	119 Move X0, [X8]
	120 Call 0x1C17F10
	121 Move X8, 0xE38000
	122 Move X8, [X8+176]
	123 Move X20, X0
	124 Move X1, [X8]
	125 Call Stack`1<Object>..ctor, X0
	126 Move W8, [X25+1890]
	127 Compare W8, 0
	128 JumpIfNotEqual {134}
	129 Move X0, 0xE2B000
	130 Move X0, [X0+656]
	131 Call 0x1C17CF4
	132 Move W8, 1
	133 Move [X25+1890], W8
	134 Move X0, X19
	135 Move X1, X31
	136 Call String.GetRawStringData, X0
	137 Move X26, 0xE2F000
	138 Move X26, [X26+3440]
	139 Move W22, [X19+16]
	140 Move X23, X0
	141 Move X8, [X26]
	142 Move W9, [X8+224]
	143 Compare W9, 0
	144 JumpIfNotEqual {147}
	145 Move X0, X8
	146 Call 0x1C17DFC
	147 Move X0, X23
	148 Move X1, X22
	149 Move X2, X31
	150 Call PathInternal.GetRootLength, X0
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X23, 0xE2B000
	153 Move X29, 0xE38000
	154 Move X23, [X23+656]
	155 Move X29, [X29+168]
	156 Move W22, W0
	157 Move W27, W31
	158 Subtract W24, W21, 1
	159 Move W28, 1
	160 Move X0, X19
	161 Move W1, W31
	162 Move W2, W21
	163 Move X3, X31
	164 Call String.Substring, X0, X1, X2
	165 Move W8, [X25+1890]
	166 Move X21, X0
	167 Compare W8, 0
	168 JumpIfEqual {175}
	169 Compare X21, 0
	170 JumpIfEqual {180}
	171 Move X0, X21
	172 Move X1, X31
	173 Call String.GetRawStringData, X0
	174 Move W1, [X21+16]
	175 Move X0, X23
	176 Call 0x1C17CF4
	177 Move [X25+1890], W28
	178 Compare X21, 0
	179 JumpIfNotEqual {171}
	180 Move X0, X31
	181 Move X1, X31
	182 Add X3, X31, 8
	183 Move W2, 0x4000
	184 Move [X31+8], X31
	185 Call FileSystem.FileExists, X0, X1, X2
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {191}
	190 Move W27, 1
	191 Compare X20, 0
	192 JumpIfEqual {395}
	193 Move X2, [X29]
	194 Move X0, X20
	195 Move X1, X21
	196 Call Stack`1<Object>.Push, X0, X1
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move W21, W24
	199 Move X0, X19
	200 Move W1, W24
	201 Move X2, X31
	202 Call String.get_Chars, X0, X1
	203 Move X8, [X26]
	204 Move W21, W0
	205 Move W9, [X8+224]
	206 Compare W9, 0
	207 JumpIfNotEqual {210}
	208 Move X0, X8
	209 Call 0x1C17DFC
	210 Move W0, W21
	211 Move X1, X31
	212 Call PathInternal.IsDirectorySeparator, X0
	213 Move TEMP, X0
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfEqual {220}
	217 Subtract W24, W24, 1
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Move W21, W22
	220 Move W21, W24
	221 Subtract W24, W21, 1
	222 NotImplemented "Instruction CMP not yet implemented."
	223 And W8, W27, 1
	224 Compare W8, 0
	225 JumpIfEqual {160}
	226 Move W8, W31
	227 Compare X20, 0
	228 JumpIfEqual {395}
	229 Move W9, [X20+24]
	230 NotImplemented "Instruction CMP not yet implemented."
	231 NotImplemented "Instruction CSET not yet implemented."
	232 NotImplemented "Instruction BIC not yet implemented."
	233 Move TEMP, X8
	234 And TEMP, TEMP, 1
	235 Compare TEMP, 1
	236 JumpIfEqual {351}
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move X27, 0xE38000
	239 Move X28, 0xE2F000
	240 Move X27, [X27+160]
	241 Move X28, [X28+3448]
	242 Move W26, 20
	243 NotImplemented "Instruction MOVK not yet implemented."
	244 Move W29, W31
	245 Move W23, W31
	246 Subtract W21, W26, 18
	247 Move X1, [X27]
	248 Move X0, X20
	249 Call Stack`1<Object>.Pop, X0
	250 Move X8, [X28]
	251 Move X24, X0
	252 Move W9, [X8+224]
	253 Compare W9, 0
	254 JumpIfNotEqual {257}
	255 Move X0, X8
	256 Call 0x1C17DFC
	257 Move W1, 511
	258 Move X0, X24
	259 Move X2, X31
	260 Call Sys.MkDir, X0, X1
	261 Move W22, W0
	262 Compare W23, 0
	263 JumpIfNotEqual {341}
	264 Move TEMP, X22
	265 And TEMP, TEMP, -2147483648
	266 Compare TEMP, -2147483648
	267 JumpIfNotEqual {341}
	268 Move X0, [X28]
	269 Move W8, [X0+224]
	270 Compare W8, 0
	271 JumpIfNotEqual {273}
	272 Call 0x1C17DFC
	273 Move X0, X31
	274 Call Sys.GetLastErrorInfo
	275 Move X23, X0
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Move [X31], X0
	278 Move W8, [X25+1890]
	279 Compare W8, 0
	280 JumpIfEqual {290}
	281 Compare X24, 0
	282 JumpIfEqual {297}
	283 Move X0, X24
	284 Move X1, X31
	285 Call String.GetRawStringData, X0
	286 Move W1, [X24+16]
	287 Move X29, X23
	288 ShiftRight X29, 32
	289 And X29, X29, 0x7FFFFFFF
	290 Move X0, 0xE2B000
	291 Move X0, [X0+656]
	292 Call 0x1C17CF4
	293 Move W8, 1
	294 Move [X25+1890], W8
	295 Compare X24, 0
	296 JumpIfNotEqual {283}
	297 Move X0, X31
	298 Move X1, X31
	299 Call FileSystem.FileExists, X0
	300 Move W8, 20
	301 NotImplemented "Instruction MOVK not yet implemented."
	302 Move TEMP, X0
	303 And TEMP, TEMP, 1
	304 Compare TEMP, 1
	305 JumpIfEqual {336}
	306 Move W8, [X25+1890]
	307 Compare W8, 0
	308 JumpIfEqual {315}
	309 Compare X24, 0
	310 JumpIfEqual {322}
	311 Move X0, X24
	312 Move X1, X31
	313 Call String.GetRawStringData, X0
	314 Move W1, [X24+16]
	315 Move X0, 0xE2B000
	316 Move X0, [X0+656]
	317 Call 0x1C17CF4
	318 Move W8, 1
	319 Move [X25+1890], W8
	320 Compare X24, 0
	321 JumpIfNotEqual {311}
	322 Move X0, X31
	323 Move X1, X31
	324 Add X3, X31, 0
	325 Move W2, 0x4000
	326 Call FileSystem.FileExists, X0, X1, X2
	327 Move W8, [X31]
	328 Move W23, W31
	329 NotImplemented "Instruction CMP not yet implemented."
	330 Move TEMP, X0
	331 And TEMP, TEMP, 1
	332 Compare TEMP, 1
	333 JumpIfEqual {341}
	334 Move X8, [X31]
	335 Move X23, X8
	336 Move X29, X23
	337 ShiftRight X29, 32
	338 And X29, X29, 0x7FFFFFFF
	339 Move W23, W8
	340 Move X19, X24
	341 Move W8, [X20+24]
	342 NotImplemented "Instruction CMP not yet implemented."
	343 Compare W23, 0
	344 JumpIfEqual {381}
	345 Move TEMP, X22
	346 And TEMP, TEMP, -2147483648
	347 Compare TEMP, -2147483648
	348 JumpIfNotEqual {381}
	349 Move W0, W23
	350 NotImplemented "Instruction BFM not yet implemented."
	351 Move X0, X19
	352 Move X1, X31
	353 Call Directory.InternalGetDirectoryRoot, X0
	354 Move W8, [X25+1890]
	355 Move X20, X0
	356 Compare W8, 0
	357 JumpIfEqual {364}
	358 Compare X20, 0
	359 JumpIfEqual {371}
	360 Move X0, X20
	361 Move X1, X31
	362 Call String.GetRawStringData, X0
	363 Move W1, [X20+16]
	364 Move X0, 0xE2B000
	365 Move X0, [X0+656]
	366 Call 0x1C17CF4
	367 Move W8, 1
	368 Move [X25+1890], W8
	369 Compare X20, 0
	370 JumpIfNotEqual {360}
	371 Move X0, X31
	372 Move X1, X31
	373 Add X3, X31, 8
	374 Move W2, 0x4000
	375 Move [X31+8], X31
	376 Call FileSystem.FileExists, X0, X1, X2
	377 Move TEMP, X0
	378 And TEMP, TEMP, 1
	379 Compare TEMP, 1
	380 JumpIfNotEqual {417}
	381 Move X20, [X31+96]
	382 Move X19, [X31+104]
	383 Move X22, [X31+80]
	384 Move X21, [X31+88]
	385 Move X24, [X31+64]
	386 Move X23, [X31+72]
	387 Move X26, [X31+48]
	388 Move X25, [X31+56]
	389 Move X28, [X31+32]
	390 Move X27, [X31+40]
	391 Move X29, [X31+16]
	392 Move X30, [X31+24]
	393 Add X31, X31, 112
	394 Return 
	395 Call 0x1C17F20
	396 Move X0, 0xE38000
	397 Move X0, [X0+200]
	398 Call 0x1C17D08
	399 Move X1, X19
	400 Move X2, X31
	401 Call SR.Format, X0, X1
	402 Move X19, X0
	403 Move X0, 0xE32000
	404 Move X0, [X0+1960]
	405 Call 0x1C17D08
	406 Call 0x1C17F10
	407 Move X1, X19
	408 Move X2, X31
	409 Move X20, X0
	410 Call IOException..ctor, X0, X1
	411 Move X0, 0xE38000
	412 Move X0, [X0+208]
	413 Call 0x1C17D08
	414 Move X1, X0
	415 Move X0, X20
	416 Call 0x1C17DEC
	417 Move W8, 20
	418 NotImplemented "Instruction MOVK not yet implemented."
	419 Add W0, W8, 25
	420 Move X1, X31
	421 Call InteropErrorExtensions.Info, X0
	422 Move W2, 1
	423 Move X1, X19
	424 Move X3, X31
	425 Call Interop.GetExceptionForIoErrno, X0, X1, X2
	426 Move X19, X0
	427 Move X0, 0xE38000
	428 Move X0, [X0+208]
	429 Call 0x1C17D08
	430 Move X1, X0
	431 Move X0, X19
	432 Call 0x1C17DEC

Method: System.Boolean DirectoryExists(System.ReadOnlySpan`1<System.Char> fullPath)

Disassembly:
	0x032F07AC LDP X22, X21, [X31 + 0x40]
	0x032F07B0 LDP X24, X23, [X31 + 0x30]
	0x032F07B4 LDP X26, X25, [X31 + 0x20]
	0x032F07B8 LDP X28, X27, [X31 + 0x10]
	0x032F07BC MOV X2, X31
	0x032F07C0 LDP X29, X30, [X31], #0x60
	0x032F07C4 B 0x33F47D4
	0x032F07C8 LDP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X31-16], X30
	002 Add X3, X31, 8
	003 Move W2, 0x4000
	004 Move [X31+8], X31
	005 Call FileSystem.FileExists, X0, X1, X2
	006 And W0, W0, 1
	007 Move X30, [X31+16]
	008 Return X0

Method: System.Boolean DirectoryExists(System.ReadOnlySpan`1<System.Char> fullPath, out Interop/ErrorInfo errorInfo)

Disassembly:
	0x032F084C BL 0x33ED11C
	0x032F0850 TBZ X0, 0x0, 0x32F086C
	0x032F0854 MOV X0, X21

ISIL:
	001 Move X3, X2
	002 Move W2, 0x4000
	003 Call FileSystem.FileExists, X0, X1, X2
	004 Return X0

Method: System.Boolean FileExists(System.ReadOnlySpan`1<System.Char> fullPath)

Disassembly:
	0x032F07CC LDP X22, X21, [X31 + 0x40]
	0x032F07D0 LDP X24, X23, [X31 + 0x30]
	0x032F07D4 LDP X26, X25, [X31 + 0x20]
	0x032F07D8 LDP X28, X27, [X31 + 0x10]
	0x032F07DC LDP X29, X30, [X31], #0x60
	0x032F07E0 RET
	0x032F07E4 STP X30, X23, [X31 - 0x30]!
	0x032F07E8 STP X22, X21, [X31 + 0x10]
	0x032F07EC STP X20, X19, [X31 + 0x20]
	0x032F07F0 ADRP X22, 0x10EC000
	0x032F07F4 LDRB W8, [X22 + 0xA31]
	0x032F07F8 MOV X19, X2
	0x032F07FC MOV X20, X1
	0x032F0800 MOV X21, X0
	0x032F0804 TBNZ X8, 0x0, 0x32F0840
	0x032F0808 ADRP X0, 0xE37000
	0x032F080C LDR X0, [X0 + 0x148]
	0x032F0810 BL 0x1C16CF4
	0x032F0814 ADRP X0, 0xE0B000
	0x032F0818 LDR X0, [X0 + 0x7E8]
	0x032F081C BL 0x1C16CF4
	0x032F0820 ADRP X0, 0xE37000
	0x032F0824 LDR X0, [X0 + 0x150]
	0x032F0828 BL 0x1C16CF4
	0x032F082C ADRP X0, 0xE37000
	0x032F0830 LDR X0, [X0 + 0xD8]
	0x032F0834 BL 0x1C16CF4
	0x032F0838 MOVZ W8, 0x1
	0x032F083C STRB W8, [X22 + 0xA31]
	0x032F0840 CBZ X20, 0x32F0960
	0x032F0844 MOV X0, X20
	0x032F0848 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x10ED000
	007 Move X21, 0xE2F000
	008 Move W8, [X22+2589]
	009 Move X21, [X21+3440]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE2F000
	017 Move X0, [X0+3440]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2589], W8
	021 Move X0, [X21]
	022 Move [X31+8], X31
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X1, X19
	029 Move X2, X31
	030 Call PathInternal.TrimEndingDirectorySeparator, X0
	031 Add X3, X31, 8
	032 Move W2, 0x8000
	033 Call FileSystem.FileExists, X0, X1, X2
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 And W0, W0, 1
	039 Move X30, [X31+48]
	040 Return X0

Method: System.Boolean FileExists(System.ReadOnlySpan`1<System.Char> fullPath, System.Int32 fileType, out Interop/ErrorInfo errorInfo)

Disassembly:
	0x032F00C0 BL 0x1C16CF4
	0x032F00C4 ADRP X0, 0xE2E000
	0x032F00C8 LDR X0, [X0 + 0xD68]
	0x032F00CC BL 0x1C16CF4
	0x032F00D0 MOVZ W8, 0x1
	0x032F00D4 STRB W8, [X23 + 0xA26]
	0x032F00D8 ADRP X23, 0xE2E000
	0x032F00DC LDR X23, [X23 + 0xD50]
	0x032F00E0 MOV X0, X20
	0x032F00E4 MOV X1, X19
	0x032F00E8 MOV W2, W21
	0x032F00EC MOV X3, X31
	0x032F00F0 STR X31, [X31 + 0x18]
	0x032F00F4 BL 0x32E3B98
	0x032F00F8 LDR X0, [X22]
	0x032F00FC LDR W8, [X0 + 0xE0]
	0x032F0100 CBNZ W8, 0x32F0108
	0x032F0104 BL 0x1C16DFC
	0x032F0108 LDR X22, [X23]
	0x032F010C LDR X0, [X22 + 0x20]
	0x032F0110 LDRB W8, [X0 + 0x135]
	0x032F0114 TBNZ X8, 0x0, 0x32F011C
	0x032F0118 BL 0x1C5C684
	0x032F011C LDR X8, [X0 + 0xC0]
	0x032F0120 LDR X0, [X8 + 0x8]
	0x032F0124 LDRB W8, [X0 + 0x135]
	0x032F0128 TBNZ X8, 0x0, 0x32F0130
	0x032F012C BL 0x1C5C684
	0x032F0130 LDR W8, [X0 + 0xE0]
	0x032F0134 CBNZ W8, 0x32F013C
	0x032F0138 BL 0x1C16DFC
	0x032F013C LDR X0, [X22 + 0x20]
	0x032F0140 LDRB W8, [X0 + 0x135]
	0x032F0144 TBNZ X8, 0x0, 0x32F014C
	0x032F0148 BL 0x1C5C684
	0x032F014C LDR X8, [X0 + 0xC0]
	0x032F0150 LDR X0, [X8 + 0x8]
	0x032F0154 LDRB W8, [X0 + 0x135]
	0x032F0158 TBNZ X8, 0x0, 0x32F0160
	0x032F015C BL 0x1C5C684
	0x032F0160 LDR X8, [X0 + 0xB8]
	0x032F0164 LDR X0, [X8]
	0x032F0168 CBZ X0, 0x32F01E4
	0x032F016C LDR X8, [X0]
	0x032F0170 MOV W1, W21
	0x032F0174 LDP X9, X2, [X8 + 0x178]
	0x032F0178 BLR X9
	0x032F017C ADD X8, X31, 0x18
	0x032F0180 STR X31, [X31 + 0x8]
	0x032F0184 STP X8, X0, [X31 + 0x10]
	0x032F0188 CBZ X0, 0x32F01DC
	0x032F018C MOV X1, X0
	0x032F0190 LDR X8, [X20]
	0x032F0194 LDR W3, [X1 + 0x18]
	0x032F0198 LDR X9, [X8 + 0x358]
	0x032F019C LDR X4, [X8 + 0x360]
	0x032F01A0 MOV X0, X20
	0x032F01A4 MOV W2, W31
	0x032F01A8 BLR X9
	0x032F01AC MOV W3, W0
	0x032F01B0 CBZ W0, 0x32F0214
	0x032F01B4 CBZ X19, 0x32F01E0
	0x032F01B8 LDR X8, [X19]
	0x032F01BC LDR X1, [X31 + 0x18]
	0x032F01C0 LDR X9, [X8 + 0x388]
	0x032F01C4 LDR X4, [X8 + 0x390]
	0x032F01C8 MOV X0, X19
	0x032F01CC MOV W2, W31

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+128], X24
	004 Move [X31+136], X23
	005 Move [X31+144], X22
	006 Move [X31+152], X21
	007 Move [X31+160], X20
	008 Move [X31+168], X19
	009 Move X24, 0x10ED000
	010 Move X23, 0xE2F000
	011 Move W8, [X24+2590]
	012 Move X23, [X23+3448]
	013 Move X19, X3
	014 Move W20, W2
	015 Move X21, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xE2F000
	022 Move X0, [X0+3448]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X24+2590], W8
	026 NotImplemented "Instruction MOVI not yet implemented."
	027 Move [X31+80], V0
	028 Move [X31+88], V0
	029 Move [X31+48], V0
	030 Move [X31+56], V0
	031 Move [X31+16], V0
	032 Move [X31+24], V0
	033 Move [X31], V0
	034 Move [X19], X31
	035 Move X0, [X23]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Add X2, X31, 0
	041 Move X0, X22
	042 Move X1, X21
	043 Move X3, X31
	044 Call Sys.Stat, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, -2147483648
	047 Compare TEMP, -2147483648
	048 JumpIfNotEqual {63}
	049 Move X0, [X23]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Add X2, X31, 0
	055 Move X0, X22
	056 Move X1, X21
	057 Move X3, X31
	058 Call Sys.LStat, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, -2147483648
	061 Compare TEMP, -2147483648
	062 JumpIfEqual {79}
	063 Move W8, [X31+4]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction CSET not yet implemented."
	066 And W8, W8, 0xF000
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CSET not yet implemented."
	069 Xor W0, W9, W8
	070 Move X20, [X31+160]
	071 Move X19, [X31+168]
	072 Move X22, [X31+144]
	073 Move X21, [X31+152]
	074 Move X24, [X31+128]
	075 Move X23, [X31+136]
	076 Move X30, [X31+112]
	077 Add X31, X31, 176
	078 Return X0
	079 Move X0, [X23]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X0, X31
	085 Call Sys.GetLastErrorInfo
	086 Move X8, X0
	087 Move W0, W31
	088 Move [X19], X8

