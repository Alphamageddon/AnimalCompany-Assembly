Type: System.IO.File

Method: System.IO.StreamReader OpenText(System.String path)

Disassembly:
	0x032EDE10 B 0x32EDE30
	0x032EDE14 B 0x32EDE30
	0x032EDE18 B 0x32EDE30
	0x032EDE1C B 0x32EDE30
	0x032EDE20 B 0x32EDE30
	0x032EDE24 B 0x32EDE30
	0x032EDE28 B 0x32EDE30
	0x032EDE2C B 0x32EDE30
	0x032EDE30 MOV X19, X0
	0x032EDE34 CMP W1, 0x1
	0x032EDE38 B.NE 0x32EDE5C
	0x032EDE3C MOV X0, X19
	0x032EDE40 BL 0x3EB1AD0
	0x032EDE44 LDR X8, [X0]
	0x032EDE48 STUR X8, [X29 - 0x40]
	0x032EDE4C BL 0x3EB1AE0
	0x032EDE50 MOV X19, X31
	0x032EDE54 B 0x32EDDA0
	0x032EDE58 MOV X19, X0
	0x032EDE5C SUB X0, X29, 0x40
	0x032EDE60 BL 0x1BB7474
	0x032EDE64 MOV X0, X19
	0x032EDE68 BL 0x1D2C690
	0x032EDE6C BL 0x1990590
	0x032EDE70 STP X30, X27, [X31 - 0x50]!
	0x032EDE74 STP X26, X25, [X31 + 0x10]
	0x032EDE78 STP X24, X23, [X31 + 0x20]
	0x032EDE7C STP X22, X21, [X31 + 0x30]
	0x032EDE80 STP X20, X19, [X31 + 0x40]
	0x032EDE84 ADRP X23, 0x10EF000
	0x032EDE88 LDRB W8, [X23 + 0xA11]
	0x032EDE8C MOV W20, W3
	0x032EDE90 MOV X21, X2
	0x032EDE94 MOV X22, X1
	0x032EDE98 MOV X19, X0
	0x032EDE9C CBNZ W8, 0x32EDECC
	0x032EDEA0 ADRP X0, 0xE06000
	0x032EDEA4 LDR X0, [X0 + 0x5A8]
	0x032EDEA8 BL 0x1C16CF4
	0x032EDEAC ADRP X0, 0xE35000
	0x032EDEB0 LDR X0, [X0 + 0x20]
	0x032EDEB4 BL 0x1C16CF4
	0x032EDEB8 ADRP X0, 0xE35000
	0x032EDEBC LDR X0, [X0 + 0x28]
	0x032EDEC0 BL 0x1C16CF4
	0x032EDEC4 MOVZ W8, 0x1
	0x032EDEC8 STRB W8, [X23 + 0xA11]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10F0000
	005 Move W8, [X20+2564]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE36000
	012 Move X0, [X0+3272]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2564], W8
	016 Compare X19, 0
	017 JumpIfEqual {36}
	018 Move X8, 0xE36000
	019 Move X8, [X8+3272]
	020 Move X0, [X8]
	021 Call 0x1C17F10
	022 Move X20, X0
	023 Move X0, X31
	024 Call Encoding.get_UTF8
	025 Move X2, X0
	026 Move W3, 1
	027 Move W4, 1024
	028 Move X0, X20
	029 Move X1, X19
	030 Call StreamReader..ctor, X0, X1, X2, X3, X4
	031 Move X0, X20
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0
	036 Move X0, 0xE0C000
	037 Move X0, [X0+1320]
	038 Call 0x1C17D08
	039 Call 0x1C17F10
	040 Move X19, X0
	041 Move X0, 0xE12000
	042 Move X0, [X0+288]
	043 Call 0x1C17D08
	044 Move X1, X0
	045 Move X0, X19
	046 Move X2, X31
	047 Call ArgumentNullException..ctor, X0, X1
	048 Move X0, 0xE3A000
	049 Move X0, [X0+4072]
	050 Call 0x1C17D08
	051 Move X1, X0
	052 Move X0, X19
	053 Call 0x1C17DEC

Method: System.IO.StreamWriter CreateText(System.String path)

Disassembly:
	0x032EDECC MOV X0, X19
	0x032EDED0 BL 0x32E7EE8
	0x032EDED4 CMP W21, 0x4
	0x032EDED8 B.GT 0x32EDEEC
	0x032EDEDC LDP W8, W9, [X19 + 0x58]
	0x032EDEE0 SUB W9, W9, W8
	0x032EDEE4 CMP W9, W21
	0x032EDEE8 B.GE 0x32EDFB8
	0x032EDEEC LDR X25, [X19 + 0x50]
	0x032EDEF0 CBZ X25, 0x32EE0E8
	0x032EDEF4 ADRP X8, 0xE35000
	0x032EDEF8 LDR X8, [X8 + 0x20]
	0x032EDEFC MOV X0, X22
	0x032EDF00 MOV X1, X21
	0x032EDF04 LDR X2, [X8]
	0x032EDF08 BL 0x2218CF8
	0x032EDF0C LDR X8, [X25 + 0x18]
	0x032EDF10 CBZ W8, 0x32EE0CC
	0x032EDF14 LDR W24, [X19 + 0x58]
	0x032EDF18 CMP W21, 0x1
	0x032EDF1C B.LT 0x32EDFF8
	0x032EDF20 ADRP X27, 0xE06000
	0x032EDF24 LDR X27, [X27 + 0x5A8]
	0x032EDF28 MOV X22, X0
	0x032EDF2C ADD X26, X25, 0x20
	0x032EDF30 CMP W24, W8
	0x032EDF34 B.NE 0x32EDF4C
	0x032EDF38 MOV X0, X19
	0x032EDF3C MOV W1, W31
	0x032EDF40 MOV W2, W31
	0x032EDF44 BL 0x32E8990
	0x032EDF48 MOV W24, W31
	0x032EDF4C LDR X0, [X27]
	0x032EDF50 LDR W8, [X0 + 0xE0]
	0x032EDF54 CBNZ W8, 0x32EDF5C
	0x032EDF58 BL 0x1C16DFC
	0x032EDF5C LDR W8, [X25 + 0x18]
	0x032EDF60 MOV W1, W21
	0x032EDF64 MOV X2, X31
	0x032EDF68 SUB W0, W8, W24
	0x032EDF6C BL 0x337EE94
	0x032EDF70 UBFM W8, W0, 0x1F, 0x1E

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10F0000
	005 Move W8, [X20+2565]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE35000
	012 Move X0, [X0+3336]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2565], W8
	016 Compare X19, 0
	017 JumpIfEqual {31}
	018 Move X8, 0xE35000
	019 Move X8, [X8+3336]
	020 Move X0, [X8]
	021 Call 0x1C17F10
	022 Move X1, X19
	023 Move W2, W31
	024 Move X20, X0
	025 Call StreamWriter..ctor, X0, X1, X2
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0
	031 Move X0, 0xE0C000
	032 Move X0, [X0+1320]
	033 Call 0x1C17D08
	034 Call 0x1C17F10
	035 Move X19, X0
	036 Move X0, 0xE12000
	037 Move X0, [X0+288]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X19
	041 Move X2, X31
	042 Call ArgumentNullException..ctor, X0, X1
	043 Move X0, 0xE3A000
	044 Move X0, [X0+4080]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Call 0x1C17DEC

Method: System.IO.StreamWriter AppendText(System.String path)

Disassembly:
	0x032EDF74 SXTW X2, W8
	0x032EDF78 MOV W23, W0
	0x032EDF7C ADD X1, X26, W24, 0x1, SXTW
	0x032EDF80 MOV X0, X22
	0x032EDF84 MOV X3, X2
	0x032EDF88 MOV X4, X31
	0x032EDF8C BL 0x33A8C44
	0x032EDF90 LDR W8, [X19 + 0x58]
	0x032EDF94 SUB W21, W21, W23
	0x032EDF98 CMP W21, 0x1
	0x032EDF9C ADD W8, W8, W23
	0x032EDFA0 STR W8, [X19 + 0x58]
	0x032EDFA4 B.LT 0x32EE000
	0x032EDFA8 LDR X8, [X25 + 0x18]
	0x032EDFAC ADD X22, X22, W23, 0x1, SXTW
	0x032EDFB0 ADD W24, W23, W24
	0x032EDFB4 B 0x32EDF30
	0x032EDFB8 CMP W21, 0x1
	0x032EDFBC B.LT 0x32EE000
	0x032EDFC0 LDR X9, [X19 + 0x50]
	0x032EDFC4 AND X10, X21, 0x0
	0x032EDFC8 ADD W24, W8, 0x1
	0x032EDFCC CBZ X9, 0x32EE0D4
	0x032EDFD0 LDR W11, [X9 + 0x18]
	0x032EDFD4 CMP W8, W11
	0x032EDFD8 B.CS 0x32EE0DC
	0x032EDFDC LDRH W11, [X22], #0x2
	0x032EDFE0 ADD X8, X9, W8, 0x1, SXTW
	0x032EDFE4 SUBS X10, X10, 0x1
	0x032EDFE8 STRH W11, [X8 + 0x20]
	0x032EDFEC MOV W8, W24
	0x032EDFF0 B.NE 0x32EDFC8
	0x032EDFF4 STR W24, [X19 + 0x58]
	0x032EDFF8 TBNZ X20, 0x0, 0x32EE008
	0x032EDFFC B 0x32EE088
	0x032EE000 MOV W24, W8
	0x032EE004 TBZ X20, 0x0, 0x32EE088
	0x032EE008 LDR X20, [X19 + 0x18]
	0x032EE00C CBZ X20, 0x32EE0D0
	0x032EE010 LDR X8, [X20 + 0x18]
	0x032EE014 CMP W8, 0x1
	0x032EE018 B.LT 0x32EE088

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10F0000
	005 Move W8, [X20+2566]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE35000
	012 Move X0, [X0+3336]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2566], W8
	016 Compare X19, 0
	017 JumpIfEqual {31}
	018 Move X8, 0xE35000
	019 Move X8, [X8+3336]
	020 Move X0, [X8]
	021 Call 0x1C17F10
	022 Move W2, 1
	023 Move X1, X19
	024 Move X20, X0
	025 Call StreamWriter..ctor, X0, X1, X2
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0
	031 Move X0, 0xE0C000
	032 Move X0, [X0+1320]
	033 Call 0x1C17D08
	034 Call 0x1C17F10
	035 Move X19, X0
	036 Move X0, 0xE12000
	037 Move X0, [X0+288]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X19
	041 Move X2, X31
	042 Call ArgumentNullException..ctor, X0, X1
	043 Move X0, 0xE39000
	044 Move X0, [X0+4088]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Call 0x1C17DEC

Method: System.IO.FileStream Create(System.String path)

Disassembly:
	0x032EE01C MOV X21, X31
	0x032EE020 AND X8, X8, 0x0

ISIL:
	001 Move W1, 4096

Method: System.IO.FileStream Create(System.String path, System.Int32 bufferSize)

Disassembly:
	0x032EE024 ADD X22, X20, 0x20
	0x032EE028 LDR W9, [X19 + 0x5C]
	0x032EE02C CMP W24, W9
	0x032EE030 B.NE 0x32EE04C
	0x032EE034 MOV X0, X19
	0x032EE038 MOV W1, W31
	0x032EE03C MOV W2, W31
	0x032EE040 BL 0x32E8990
	0x032EE044 LDR W24, [X19 + 0x58]
	0x032EE048 LDR W8, [X20 + 0x18]
	0x032EE04C CMP X21, W8, UXTW
	0x032EE050 B.CS 0x32EE0CC
	0x032EE054 LDR X9, [X19 + 0x50]
	0x032EE058 CBZ X9, 0x32EE0D0
	0x032EE05C LDR W10, [X9 + 0x18]
	0x032EE060 CMP W24, W10
	0x032EE064 B.CS 0x32EE0CC
	0x032EE068 LDRH W10, [X22, X21, LSL #1]
	0x032EE06C ADD X21, X21, 0x1
	0x032EE070 ADD X9, X9, W24, 0x1, SXTW
	0x032EE074 ADD W24, W24, 0x1
	0x032EE078 CMP X21, W8, SXTW
	0x032EE07C STRH W10, [X9 + 0x20]
	0x032EE080 STR W24, [X19 + 0x58]
	0x032EE084 B.LT 0x32EE028
	0x032EE088 LDRB W8, [X19 + 0x60]
	0x032EE08C CBZ W8, 0x32EE0B4
	0x032EE090 MOV X0, X19
	0x032EE094 LDP X20, X19, [X31 + 0x40]
	0x032EE098 LDP X22, X21, [X31 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10EF000
	007 Move X22, 0xE34000
	008 Move W8, [X21+2567]
	009 Move X22, [X22+1648]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE34000
	017 Move X0, [X0+1648]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2567], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move W2, 2
	024 Move W3, 3
	025 Move X1, X20
	026 Move W4, W31
	027 Move W5, W19
	028 Move X6, X31
	029 Move X21, X0
	030 Call FileStream..ctor, X0, X1, X2, X3, X4, X5
	031 Move X0, X21
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Return X0

Method: System.Void Delete(System.String path)

Disassembly:
	0x032EE09C LDP X24, X23, [X31 + 0x20]
	0x032EE0A0 LDP X26, X25, [X31 + 0x10]
	0x032EE0A4 MOVZ W1, 0x1
	0x032EE0A8 MOV W2, W31
	0x032EE0AC LDP X30, X27, [X31], #0x50
	0x032EE0B0 B 0x32E8990
	0x032EE0B4 LDP X20, X19, [X31 + 0x40]
	0x032EE0B8 LDP X22, X21, [X31 + 0x30]
	0x032EE0BC LDP X24, X23, [X31 + 0x20]
	0x032EE0C0 LDP X26, X25, [X31 + 0x10]
	0x032EE0C4 LDP X30, X27, [X31], #0x50
	0x032EE0C8 RET
	0x032EE0CC BL 0x1C16F28
	0x032EE0D0 BL 0x1C16F20
	0x032EE0D4 STR W24, [X19 + 0x58]
	0x032EE0D8 BL 0x1C16F20
	0x032EE0DC ADD W8, W8, 0x1
	0x032EE0E0 STR W8, [X19 + 0x58]
	0x032EE0E4 BL 0x1C16F28
	0x032EE0E8 ADRP X0, 0xE2E000
	0x032EE0EC LDR X0, [X0 + 0x4B8]
	0x032EE0F0 BL 0x1C16D08
	0x032EE0F4 BL 0x1C16F10
	0x032EE0F8 MOV X19, X0
	0x032EE0FC ADRP X0, 0xE38000
	0x032EE100 LDR X0, [X0 + 0xE88]
	0x032EE104 BL 0x1C16D08
	0x032EE108 MOV X2, X0
	0x032EE10C MOV X0, X19
	0x032EE110 MOV X1, X31
	0x032EE114 MOV X3, X31
	0x032EE118 BL 0x338C410
	0x032EE11C ADRP X0, 0xE38000
	0x032EE120 LDR X0, [X0 + 0xEB0]
	0x032EE124 BL 0x1C16D08
	0x032EE128 MOV X1, X0
	0x032EE12C MOV X0, X19
	0x032EE130 BL 0x1C16DEC
	0x032EE134 B 0x32EE138
	0x032EE138 STR X30, [X31 - 0x20]!
	0x032EE13C STP X20, X19, [X31 + 0x10]
	0x032EE140 ADRP X20, 0x10EE000
	0x032EE144 LDRB W8, [X20 + 0xA1F]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10EF000
	005 Move W8, [X20+2568]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE2D000
	012 Move X0, [X0+464]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2568], W8
	016 Compare X19, 0
	017 JumpIfEqual {34}
	018 Move X8, 0xE2D000
	019 Move X8, [X8+464]
	020 Move X0, [X8]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X19
	026 Move X1, X31
	027 Call Path.GetFullPath, X0
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X1, X31
	031 Move X30, [X31+32]
	032 Call FileSystem.DeleteFile, X0
	033 Return 
	034 Move X0, 0xE0B000
	035 Move X0, [X0+1320]
	036 Call 0x1C17D08
	037 Call 0x1C17F10
	038 Move X19, X0
	039 Move X0, 0xE11000
	040 Move X0, [X0+288]
	041 Call 0x1C17D08
	042 Move X1, X0
	043 Move X0, X19
	044 Move X2, X31
	045 Call ArgumentNullException..ctor, X0, X1
	046 Move X0, 0xE3A000
	047 Move X0, [X0]
	048 Call 0x1C17D08
	049 Move X1, X0
	050 Move X0, X19
	051 Call 0x1C17DEC

Method: System.Boolean Exists(System.String path)

Disassembly:
	0x032E67A8 STR X0, [X20 + 0x30]
	0x032E67AC LDR X8, [X21]
	0x032E67B0 MOV X0, X21
	0x032E67B4 MOV W1, W22
	0x032E67B8 LDR X9, [X8 + 0x368]
	0x032E67BC LDR X2, [X8 + 0x370]
	0x032E67C0 BLR X9
	0x032E67C4 STR W0, [X20 + 0x50]
	0x032E67C8 MOV W1, W0
	0x032E67CC LDR X0, [X25]
	0x032E67D0 BL 0x1C16D6C
	0x032E67D4 STR X0, [X20 + 0x38]
	0x032E67D8 STR X31, [X20 + 0x48]
	0x032E67DC STRB W23, [X20 + 0x54]
	0x032E67E0 LDR X8, [X21]
	0x032E67E4 MOV X0, X21
	0x032E67E8 LDP X9, X1, [X8 + 0x1A8]
	0x032E67EC BLR X9
	0x032E67F0 CMP W1, 0x0
	0x032E67F4 ORN W8, W31, W19, 0x0
	0x032E67F8 CSET W9, GT
	0x032E67FC AND W8, W8, 0x1
	0x032E6800 STRB W31, [X20 + 0x56]
	0x032E6804 STRB W9, [X20 + 0x55]
	0x032E6808 STRB W8, [X20 + 0x57]
	0x032E680C LDP X20, X19, [X31 + 0x30]
	0x032E6810 LDP X22, X21, [X31 + 0x20]
	0x032E6814 LDP X24, X23, [X31 + 0x10]
	0x032E6818 LDP X30, X25, [X31], #0x40
	0x032E681C RET
	0x032E6820 BL 0x1C16F20
	0x032E6824 STR X30, [X31 - 0x20]!
	0x032E6828 STP X20, X19, [X31 + 0x10]
	0x032E682C MOV X20, X0
	0x032E6830 MOV X0, X31
	0x032E6834 MOV X19, X1
	0x032E6838 BL 0x3241948
	0x032E683C MOV X2, X0
	0x032E6840 MOV X0, X20
	0x032E6844 MOV X1, X19
	0x032E6848 LDP X20, X19, [X31 + 0x10]
	0x032E684C MOVZ W3, 0x1
	0x032E6850 MOVZ W4, 0x400
	0x032E6854 LDR X30, [X31], #0x20
	0x032E6858 B 0x32E6898
	0x032E685C STP X30, X21, [X31 - 0x20]!
	0x032E6860 STP X20, X19, [X31 + 0x10]
	0x032E6864 MOV X21, X0
	0x032E6868 MOV X0, X31
	0x032E686C MOV W19, W2
	0x032E6870 MOV X20, X1
	0x032E6874 BL 0x3241948
	0x032E6878 AND W3, W19, 0x1
	0x032E687C MOV X1, X20
	0x032E6880 LDP X20, X19, [X31 + 0x10]
	0x032E6884 MOVZ W4, 0x400
	0x032E6888 MOV X2, X0
	0x032E688C MOV X0, X21
	0x032E6890 LDP X30, X21, [X31], #0x20
	0x032E6894 B 0x32E6898
	0x032E6898 STP X30, X25, [X31 - 0x40]!
	0x032E689C STP X24, X23, [X31 + 0x10]
	0x032E68A0 STP X22, X21, [X31 + 0x20]
	0x032E68A4 STP X20, X19, [X31 + 0x30]
	0x032E68A8 ADRP X25, 0x10F6000
	0x032E68AC ADRP X24, 0xE0E000
	0x032E68B0 LDRB W8, [X25 + 0x9B9]
	0x032E68B4 LDR X24, [X24 + 0x7B8]
	0x032E68B8 MOV W19, W4
	0x032E68BC MOV W21, W3
	0x032E68C0 MOV X20, X2
	0x032E68C4 MOV X23, X1
	0x032E68C8 MOV X22, X0
	0x032E68CC TBNZ X8, 0x0, 0x32E68FC
	0x032E68D0 ADRP X0, 0xE3B000
	0x032E68D4 LDR X0, [X0 + 0x670]
	0x032E68D8 BL 0x1C16CF4
	0x032E68DC ADRP X0, 0xE0E000
	0x032E68E0 LDR X0, [X0 + 0x7B8]
	0x032E68E4 BL 0x1C16CF4
	0x032E68E8 ADRP X0, 0xE40000
	0x032E68EC LDR X0, [X0 + 0xE00]
	0x032E68F0 BL 0x1C16CF4
	0x032E68F4 MOVZ W8, 0x1
	0x032E68F8 STRB W8, [X25 + 0x9B9]
	0x032E68FC LDR X0, [X24]
	0x032E6900 LDR W8, [X0 + 0xE0]
	0x032E6904 CBNZ W8, 0x32E690C
	0x032E6908 BL 0x1C16DFC
	0x032E690C ADRP X25, 0x10F2000
	0x032E6910 LDRB W8, [X25 + 0xF1D]
	0x032E6914 CBNZ W8, 0x32E692C
	0x032E6918 ADRP X0, 0xE0E000
	0x032E691C LDR X0, [X0 + 0x7B8]
	0x032E6920 BL 0x1C16CF4
	0x032E6924 MOVZ W8, 0x1
	0x032E6928 STRB W8, [X25 + 0xF1D]
	0x032E692C LDR X0, [X24]
	0x032E6930 ADRP X25, 0xE40000
	0x032E6934 LDR W8, [X0 + 0xE0]
	0x032E6938 LDR X25, [X25 + 0xE00]
	0x032E693C CBNZ W8, 0x32E6948
	0x032E6940 BL 0x1C16DFC
	0x032E6944 LDR X0, [X24]
	0x032E6948 LDR X8, [X0 + 0xB8]
	0x032E694C LDR X8, [X8 + 0x30]
	0x032E6950 STR X8, [X22 + 0x58]
	0x032E6954 LDR X0, [X25]
	0x032E6958 LDR W8, [X0 + 0xE0]
	0x032E695C CBNZ W8, 0x32E6964
	0x032E6960 BL 0x1C16DFC
	0x032E6964 MOV X0, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10F7000
	005 Move W8, [X20+2569]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xE39000
	012 Move X0, [X0+3440]
	013 Call 0x1C17CF4
	014 Move X0, 0xE35000
	015 Move X0, [X0+464]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2569], W8
	019 Compare X19, 0
	020 JumpIfEqual {52}
	021 Move W8, [X19+16]
	022 Compare W8, 0
	023 JumpIfEqual {52}
	024 Move X8, 0xE35000
	025 Move X8, [X8+464]
	026 Move X0, [X8]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X19
	032 Move X1, X31
	033 Call Path.GetFullPath, X0
	034 Move X19, X0
	035 Compare X0, 0
	036 JumpIfEqual {73}
	037 Move W8, [X19+16]
	038 Subtract W1, W8, 1
	039 Move X0, X19
	040 Move X2, X31
	041 Call String.get_Chars, X0, X1
	042 Move X8, 0xE39000
	043 Move X8, [X8+3440]
	044 Move W20, W0
	045 Move X0, [X8]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 And W8, W20, 0xFFFF
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W0, W31
	053 Move X20, 0x10F4000
	054 Move W8, [X20+1890]
	055 Compare W8, 0
	056 JumpIfNotEqual {62}
	057 Move X0, 0xE35000
	058 Move X0, [X0+656]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X20+1890], W8
	062 Move X0, X19
	063 Move X1, X31
	064 Call String.GetRawStringData, X0
	065 Move W1, [X19+16]
	066 Move X2, X31
	067 Call FileSystem.FileExists, X0
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 And W0, W0, 1
	071 Move X30, [X31+32]
	072 Return X0
	073 Call 0x1C17F20
	074 Move X19, X0
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X0, X19
	077 Call 0x3EB2AD0
	078 Move X19, X0
	079 Move X0, 0xE16000
	080 Move X0, [X0+1400]
	081 Call 0x1C17D08
	082 Move X8, [X19]
	083 Move X1, [X8]
	084 Call 0x1C18270
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfEqual {109}
	089 Move X0, 0xE3C000
	090 Move X0, [X0+1960]
	091 Call 0x1C17D08
	092 Move X8, [X19]
	093 Move X1, [X8]
	094 Call 0x1C18270
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {109}
	099 Move X0, 0xE3C000
	100 Move X0, [X0+1976]
	101 Call 0x1C17D08
	102 Move X8, [X19]
	103 Move X1, [X8]
	104 Call 0x1C18270
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {110}
	109 Call 0x3EB2AE0
	110 Move W0, 8
	111 Call 0x3EB2AF0
	112 Move X8, [X19]
	113 Move [X0], X8
	114 Move X1, 0xBCF000
	115 Add X1, X1, 3672
	116 Move X2, X31
	117 Call 0x3EB2B00
	118 Move X19, X0
	119 Call 0x3EB2AE0
	120 Move X0, X19
	121 Call 0x1D2D690
	122 Call 0x1991590

Method: System.IO.FileStream Open(System.String path, System.IO.FileMode mode)

Disassembly:
	0x032EE148 MOV X19, X0
	0x032EE14C TBNZ X8, 0x0, 0x32EE164
	0x032EE150 ADRP X0, 0xE38000
	0x032EE154 LDR X0, [X0 + 0xF90]
	0x032EE158 BL 0x1C16CF4

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, 2
	003 NotImplemented "Instruction CINC not yet implemented."
	004 Move W3, W31

Method: System.IO.FileStream Open(System.String path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share)

Disassembly:
	0x032EE15C MOVZ W8, 0x1
	0x032EE160 STRB W8, [X20 + 0xA1F]
	0x032EE164 MOV X0, X19
	0x032EE168 MOV X1, X31
	0x032EE16C BL 0x33C011C
	0x032EE170 CBZ X19, 0x32EE190
	0x032EE174 ADRP X8, 0xE38000
	0x032EE178 LDR X8, [X8 + 0xF90]
	0x032EE17C LDR X9, [X19]
	0x032EE180 LDR X8, [X8]
	0x032EE184 CMP X9, X8
	0x032EE188 CSET W8, EQ
	0x032EE18C B 0x32EE194
	0x032EE190 MOV W8, W31
	0x032EE194 STRB W8, [X19 + 0x8C]
	0x032EE198 MOVN W8, 0x0
	0x032EE19C STR W8, [X19 + 0x88]
	0x032EE1A0 LDP X20, X19, [X31 + 0x10]
	0x032EE1A4 LDR X30, [X31], #0x20
	0x032EE1A8 RET
	0x032EE1AC MOV X2, X31
	0x032EE1B0 MOV X3, X31
	0x032EE1B4 MOV W4, W31
	0x032EE1B8 B 0x32EE1BC
	0x032EE1BC STR X30, [X31 - 0x40]!
	0x032EE1C0 STP X24, X23, [X31 + 0x10]
	0x032EE1C4 STP X22, X21, [X31 + 0x20]
	0x032EE1C8 STP X20, X19, [X31 + 0x30]
	0x032EE1CC ADRP X24, 0x10EE000
	0x032EE1D0 LDRB W8, [X24 + 0xA13]
	0x032EE1D4 MOV W22, W4
	0x032EE1D8 MOV X21, X3
	0x032EE1DC MOV X23, X2

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x10EF000
	009 Move X24, 0xE34000
	010 Move W8, [X23+2570]
	011 Move X24, [X24+1648]
	012 Move W19, W3
	013 Move W20, W2
	014 Move W21, W1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xE34000
	021 Move X0, [X0+1648]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+2570], W8
	025 Move X0, [X24]
	026 Call 0x1C17F10
	027 Move X1, X22
	028 Move W2, W21
	029 Move W3, W20
	030 Move W4, W19
	031 Move X5, X31
	032 Move X23, X0
	033 Call FileStream..ctor, X0, X1, X2, X3, X4
	034 Move X0, X23
	035 Move X20, [X31+48]
	036 Move X19, [X31+56]
	037 Move X22, [X31+32]
	038 Move X21, [X31+40]
	039 Move X24, [X31+16]
	040 Move X23, [X31+24]
	041 Move X30, [X31+64]
	042 Return X0

Method: System.IO.FileStream OpenRead(System.String path)

Disassembly:
	0x032EE1E0 MOV X20, X1
	0x032EE1E4 MOV X19, X0
	0x032EE1E8 TBNZ X8, 0x0, 0x32EE200
	0x032EE1EC ADRP X0, 0xE2C000
	0x032EE1F0 LDR X0, [X0 + 0x1D0]
	0x032EE1F4 BL 0x1C16CF4
	0x032EE1F8 MOVZ W8, 0x1
	0x032EE1FC STRB W8, [X24 + 0xA13]
	0x032EE200 MOV X0, X19
	0x032EE204 BL 0x32EE138
	0x032EE208 CMP X20, 0x0
	0x032EE20C CSEL X8, X31, X19, EQ
	0x032EE210 CBZ X20, 0x32EE298
	0x032EE214 CBZ X8, 0x32EE294
	0x032EE218 CMP X23, 0x0
	0x032EE21C CSEL X23, X20, X23, EQ
	0x032EE220 STR X20, [X8 + 0x98]
	0x032EE224 TBNZ X22, 0x0, 0x32EE24C
	0x032EE228 ADRP X8, 0xE2C000
	0x032EE22C LDR X8, [X8 + 0x1D0]
	0x032EE230 LDR X0, [X8]
	0x032EE234 LDR W8, [X0 + 0xE0]
	0x032EE238 CBNZ W8, 0x32EE240
	0x032EE23C BL 0x1C16DFC
	0x032EE240 MOV X0, X23
	0x032EE244 BL 0x32EE2E0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x10EF000
	006 Move X21, 0xE34000
	007 Move W8, [X20+2571]
	008 Move X21, [X21+1648]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE34000
	015 Move X0, [X0+1648]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2571], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move W2, 3
	022 Move W3, 1
	023 Move W4, 1
	024 Move X1, X19
	025 Move X5, X31
	026 Move X20, X0
	027 Call FileStream..ctor, X0, X1, X2, X3, X4
	028 Move X0, X20
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0

Method: System.IO.FileStream OpenWrite(System.String path)

Disassembly:
	0x032EE248 MOV X23, X0
	0x032EE24C CBZ X19, 0x32EE294
	0x032EE250 STR X23, [X19 + 0x90]
	0x032EE254 CBNZ X21, 0x32EE27C
	0x032EE258 ADRP X8, 0xE2C000
	0x032EE25C LDR X8, [X8 + 0x1D0]
	0x032EE260 LDR X0, [X8]
	0x032EE264 LDR W8, [X0 + 0xE0]
	0x032EE268 CBNZ W8, 0x32EE270
	0x032EE26C BL 0x1C16DFC
	0x032EE270 MOV X0, X20
	0x032EE274 BL 0x32EE348
	0x032EE278 MOV X21, X0
	0x032EE27C STR X21, [X19 + 0xA0]
	0x032EE280 LDP X20, X19, [X31 + 0x30]
	0x032EE284 LDP X22, X21, [X31 + 0x20]
	0x032EE288 LDP X24, X23, [X31 + 0x10]
	0x032EE28C LDR X30, [X31], #0x40
	0x032EE290 RET
	0x032EE294 BL 0x1C16F20
	0x032EE298 ADRP X0, 0xE0A000
	0x032EE29C LDR X0, [X0 + 0x528]
	0x032EE2A0 BL 0x1C16D08
	0x032EE2A4 BL 0x1C16F10
	0x032EE2A8 MOV X19, X0
	0x032EE2AC ADRP X0, 0xE35000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x10EF000
	006 Move X21, 0xE34000
	007 Move W8, [X20+2572]
	008 Move X21, [X21+1648]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE34000
	015 Move X0, [X0+1648]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2572], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move W2, 4
	022 Move W3, 2
	023 Move X1, X19
	024 Move W4, W31
	025 Move X5, X31
	026 Move X20, X0
	027 Call FileStream..ctor, X0, X1, X2, X3, X4
	028 Move X0, X20
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0

Method: System.String ReadAllText(System.String path)

Disassembly:
	0x032EE2B0 LDR X0, [X0 + 0x948]
	0x032EE2B4 BL 0x1C16D08
	0x032EE2B8 MOV X1, X0
	0x032EE2BC MOV X0, X19
	0x032EE2C0 MOV X2, X31
	0x032EE2C4 BL 0x330E100
	0x032EE2C8 ADRP X0, 0xE39000
	0x032EE2CC LDR X0, [X0 + 0x40]
	0x032EE2D0 BL 0x1C16D08
	0x032EE2D4 MOV X1, X0
	0x032EE2D8 MOV X0, X19
	0x032EE2DC BL 0x1C16DEC
	0x032EE2E0 STP X30, X21, [X31 - 0x20]!
	0x032EE2E4 STP X20, X19, [X31 + 0x10]
	0x032EE2E8 ADRP X20, 0x10EE000
	0x032EE2EC ADRP X21, 0xE2C000
	0x032EE2F0 LDRB W8, [X20 + 0xA9C]
	0x032EE2F4 LDR X21, [X21 + 0x1D0]
	0x032EE2F8 MOV X19, X0
	0x032EE2FC TBNZ X8, 0x0, 0x32EE314
	0x032EE300 ADRP X0, 0xE2C000
	0x032EE304 LDR X0, [X0 + 0x1D0]
	0x032EE308 BL 0x1C16CF4
	0x032EE30C MOVZ W8, 0x1
	0x032EE310 STRB W8, [X20 + 0xA9C]
	0x032EE314 LDR X0, [X21]
	0x032EE318 LDR W8, [X0 + 0xE0]
	0x032EE31C CBNZ W8, 0x32EE324
	0x032EE320 BL 0x1C16DFC
	0x032EE324 MOV X0, X19
	0x032EE328 BL 0x32F8AF0
	0x032EE32C MOV X19, X0
	0x032EE330 MOV X0, X31
	0x032EE334 BL 0x324ABEC
	0x032EE338 MOV X0, X19
	0x032EE33C LDP X20, X19, [X31 + 0x10]
	0x032EE340 LDP X30, X21, [X31], #0x20
	0x032EE344 RET
	0x032EE348 STR X30, [X31 - 0x20]!
	0x032EE34C STP X20, X19, [X31 + 0x10]
	0x032EE350 ADRP X20, 0x10EE000
	0x032EE354 LDRB W8, [X20 + 0xA9B]
	0x032EE358 MOV X19, X0
	0x032EE35C TBNZ X8, 0x0, 0x32EE374
	0x032EE360 ADRP X0, 0xE2C000
	0x032EE364 LDR X0, [X0 + 0x1D0]
	0x032EE368 BL 0x1C16CF4
	0x032EE36C MOVZ W8, 0x1
	0x032EE370 STRB W8, [X20 + 0xA9B]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {17}
	006 Move W8, [X0+16]
	007 Move X19, X0
	008 Compare W8, 0
	009 JumpIfEqual {29}
	010 Move X0, X31
	011 Call Encoding.get_UTF8
	012 Move X1, X0
	013 Move X0, X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Move X0, 0xE0B000
	018 Move X0, [X0+1320]
	019 Call 0x1C17D08
	020 Call 0x1C17F10
	021 Move X19, X0
	022 Move X0, 0xE11000
	023 Move X0, [X0+288]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Move X2, X31
	028 Call ArgumentNullException..ctor, X0, X1
	029 Move X0, 0xE0E000
	030 Move X0, [X0+1400]
	031 Call 0x1C17D08
	032 Call 0x1C17F10
	033 Move X19, X0
	034 Move X0, 0xE39000
	035 Move X0, [X0+3600]
	036 Call 0x1C17D08
	037 Move X20, X0
	038 Move X0, 0xE11000
	039 Move X0, [X0+288]
	040 Call 0x1C17D08
	041 Move X2, X0
	042 Move X0, X19
	043 Move X1, X20
	044 Move X3, X31
	045 Call ArgumentException..ctor, X0, X1, X2
	046 Move X0, 0xE3A000
	047 Move X0, [X0+8]
	048 Call 0x1C17D08
	049 Move X1, X0
	050 Move X0, X19
	051 Call 0x1C17DEC

Method: System.String InternalReadAllText(System.String path, System.Text.Encoding encoding)

Disassembly:
	0x032EE374 CBZ X19, 0x32EE3FC
	0x032EE378 LDR W8, [X19 + 0x10]
	0x032EE37C CBZ W8, 0x32EE3FC
	0x032EE380 ADRP X20, 0xE2C000
	0x032EE384 LDR X20, [X20 + 0x1D0]
	0x032EE388 LDR X0, [X20]
	0x032EE38C LDR W8, [X0 + 0xE0]
	0x032EE390 CBNZ W8, 0x32EE39C
	0x032EE394 BL 0x1C16DFC
	0x032EE398 LDR X0, [X20]
	0x032EE39C LDR X8, [X0 + 0xB8]
	0x032EE3A0 MOV X0, X19
	0x032EE3A4 MOV X2, X31
	0x032EE3A8 LDR X1, [X8]
	0x032EE3AC BL 0x322BE8C
	0x032EE3B0 ADDS W31, W0, 0x1
	0x032EE3B4 B.NE 0x32EE40C
	0x032EE3B8 LDR X0, [X20]
	0x032EE3BC LDR W8, [X0 + 0xE0]
	0x032EE3C0 CBNZ W8, 0x32EE3CC
	0x032EE3C4 BL 0x1C16DFC
	0x032EE3C8 LDR X0, [X20]
	0x032EE3CC LDR X8, [X0 + 0xB8]
	0x032EE3D0 MOV X0, X19
	0x032EE3D4 MOV X2, X31
	0x032EE3D8 LDR X1, [X8 + 0x20]
	0x032EE3DC BL 0x322C764
	0x032EE3E0 TBNZ X0, 0x1F, 0x32EE3FC
	0x032EE3E4 ADD W1, W0, 0x1
	0x032EE3E8 MOV X0, X19
	0x032EE3EC LDP X20, X19, [X31 + 0x10]
	0x032EE3F0 MOV X2, X31
	0x032EE3F4 LDR X30, [X31], #0x20
	0x032EE3F8 B 0x322B484
	0x032EE3FC MOV X0, X19
	0x032EE400 LDP X20, X19, [X31 + 0x10]
	0x032EE404 LDR X30, [X31], #0x20
	0x032EE408 RET
	0x032EE40C ADRP X0, 0xE0D000
	0x032EE410 LDR X0, [X0 + 0x578]
	0x032EE414 BL 0x1C16D08
	0x032EE418 BL 0x1C16F10
	0x032EE41C MOV X19, X0
	0x032EE420 ADRP X0, 0xE39000
	0x032EE424 LDR X0, [X0 + 0x48]
	0x032EE428 BL 0x1C16D08
	0x032EE42C MOV X1, X0
	0x032EE430 MOV X0, X19
	0x032EE434 MOV X2, X31
	0x032EE438 BL 0x3314A68
	0x032EE43C ADRP X0, 0xE39000
	0x032EE440 LDR X0, [X0 + 0x50]
	0x032EE444 BL 0x1C16D08
	0x032EE448 MOV X1, X0
	0x032EE44C MOV X0, X19
	0x032EE450 BL 0x1C16DEC
	0x032EE454 STP X30, X21, [X31 - 0x20]!
	0x032EE458 STP X20, X19, [X31 + 0x10]
	0x032EE45C ADRP X21, 0x10EE000
	0x032EE460 ADRP X20, 0xE2C000
	0x032EE464 LDRB W8, [X21 + 0xA14]
	0x032EE468 LDR X20, [X20 + 0x1D0]
	0x032EE46C MOV X19, X0
	0x032EE470 TBNZ X8, 0x0, 0x32EE488
	0x032EE474 ADRP X0, 0xE2C000
	0x032EE478 LDR X0, [X0 + 0x1D0]
	0x032EE47C BL 0x1C16CF4
	0x032EE480 MOVZ W8, 0x1
	0x032EE484 STRB W8, [X21 + 0xA14]
	0x032EE488 LDR X0, [X20]
	0x032EE48C LDR X19, [X19 + 0x90]
	0x032EE490 LDR W8, [X0 + 0xE0]
	0x032EE494 CBNZ W8, 0x32EE49C
	0x032EE498 BL 0x1C16DFC
	0x032EE49C MOV X0, X19
	0x032EE4A0 LDP X20, X19, [X31 + 0x10]
	0x032EE4A4 LDP X30, X21, [X31], #0x20
	0x032EE4A8 B 0x32EE4AC
	0x032EE4AC STP X30, X23, [X31 - 0x30]!
	0x032EE4B0 STP X22, X21, [X31 + 0x10]
	0x032EE4B4 STP X20, X19, [X31 + 0x20]
	0x032EE4B8 ADRP X21, 0x10EE000
	0x032EE4BC ADRP X19, 0xE07000
	0x032EE4C0 LDRB W8, [X21 + 0xA99]
	0x032EE4C4 LDR X19, [X19 + 0x278]
	0x032EE4C8 MOV X20, X0
	0x032EE4CC TBNZ X8, 0x0, 0x32EE4FC
	0x032EE4D0 ADRP X0, 0xE07000
	0x032EE4D4 LDR X0, [X0 + 0x170]
	0x032EE4D8 BL 0x1C16CF4
	0x032EE4DC ADRP X0, 0xE2C000
	0x032EE4E0 LDR X0, [X0 + 0x1D0]
	0x032EE4E4 BL 0x1C16CF4
	0x032EE4E8 ADRP X0, 0xE07000
	0x032EE4EC LDR X0, [X0 + 0x278]
	0x032EE4F0 BL 0x1C16CF4
	0x032EE4F4 MOVZ W8, 0x1
	0x032EE4F8 STRB W8, [X21 + 0xA99]
	0x032EE4FC LDR X8, [X19]
	0x032EE500 MOV X0, X20
	0x032EE504 MOV X2, X31
	0x032EE508 LDR X8, [X8 + 0xB8]
	0x032EE50C LDR X1, [X8]
	0x032EE510 BL 0x321BA08
	0x032EE514 TBNZ X0, 0x0, 0x32EE7B0
	0x032EE518 CBZ X20, 0x32EE5E0
	0x032EE51C ADRP X22, 0xE2C000
	0x032EE520 LDR X22, [X22 + 0x1D0]
	0x032EE524 LDR X0, [X22]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x10EF000
	007 Move X19, 0xE35000
	008 Move W8, [X22+2573]
	009 Move X19, [X19+3272]
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xE06000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move X0, 0xE35000
	020 Move X0, [X0+3272]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2573], W8
	024 Move X0, [X19]
	025 Move X22, 0xE06000
	026 Move X22, [X22+3584]
	027 Call 0x1C17F10
	028 Move W3, 1
	029 Move W4, 1024
	030 Move X1, X21
	031 Move X2, X20
	032 Move X19, X0
	033 Call StreamReader..ctor, X0, X1, X2, X3, X4
	034 Compare X19, 0
	035 JumpIfEqual {73}
	036 Move X8, [X19]
	037 Move X9, [X8+488]
	038 Move X1, [X8+496]
	039 Move X0, X19
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X21, X0
	042 Move X20, X31
	043 Move X8, [X19]
	044 Move X1, [X22]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Compare X9, 0
	047 JumpIfEqual {54}
	048 Move X10, [X8+176]
	049 Add X10, X10, 8
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Subtract X9, X9, 1
	053 Add X10, X10, 16
	054 Move X0, X19
	055 Move W2, W31
	056 Call 0x1C5D788
	057 NotImplemented "Instruction LDRSW not yet implemented."
	058 Add X8, X8, X9
	059 Add X0, X8, 312
	060 Move X8, [X0]
	061 Move X1, [X0+8]
	062 Move X0, X19
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Compare X20, 0
	065 JumpIfNotEqual {74}
	066 Move X0, X21
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Return X0
	073 Call 0x1C17F20
	074 Move X0, X20
	075 Call 0x1C17F18
	076 Move X21, X0
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, X21
	079 Call 0x3EB2AD0
	080 Move X20, [X0]
	081 Call 0x3EB2AE0
	082 Move X21, X31
	083 Compare X19, 0
	084 JumpIfNotEqual {43}
	085 Move X20, X31
	086 Move X21, X0
	087 Compare X19, 0
	088 JumpIfEqual {110}
	089 Move X8, [X19]
	090 Move X1, [X22]
	091 NotImplemented "Instruction LDRH not yet implemented."
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move X0, X19
	101 Move W2, W31
	102 Call 0x1C5D788
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Add X8, X8, X9
	105 Add X0, X8, 312
	106 Move X8, [X0]
	107 Move X1, [X0+8]
	108 Move X0, X19
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Compare X20, 0
	111 JumpIfNotEqual {114}
	112 Move X0, X21
	113 Call 0x1D2D690
	114 Move X0, X20
	115 Call 0x1C17F18
	116 Call 0x1991590

Method: System.Void WriteAllText(System.String path, System.String contents)

Disassembly:
	0x032EE528 LDR W8, [X0 + 0xE0]
	0x032EE52C CBNZ W8, 0x32EE534
	0x032EE530 BL 0x1C16DFC
	0x032EE534 MOV X0, X20
	0x032EE538 BL 0x32FD5D8
	0x032EE53C MOV X1, X20
	0x032EE540 MOV X2, X31
	0x032EE544 BL 0x321BA08
	0x032EE548 MOV W8, W0
	0x032EE54C MOV X0, X31
	0x032EE550 TBNZ X8, 0x0, 0x32EE5E4
	0x032EE554 MOV X0, X20
	0x032EE558 MOV X1, X31
	0x032EE55C BL 0x322B8DC
	0x032EE560 CBZ X0, 0x32EE7D0
	0x032EE564 LDR W8, [X0 + 0x10]
	0x032EE568 CBZ W8, 0x32EE7D4
	0x032EE56C LDR X0, [X22]
	0x032EE570 LDR W8, [X0 + 0xE0]
	0x032EE574 CBNZ W8, 0x32EE580
	0x032EE578 BL 0x1C16DFC
	0x032EE57C LDR X0, [X22]
	0x032EE580 LDR X8, [X0 + 0xB8]
	0x032EE584 MOV X0, X20
	0x032EE588 MOV X2, X31
	0x032EE58C LDR X1, [X8]
	0x032EE590 BL 0x322BE8C
	0x032EE594 TBZ X0, 0x1F, 0x32EE7F4
	0x032EE598 LDR X0, [X22]
	0x032EE59C LDR W8, [X0 + 0xE0]
	0x032EE5A0 CBNZ W8, 0x32EE5AC
	0x032EE5A4 BL 0x1C16DFC
	0x032EE5A8 LDR X0, [X22]
	0x032EE5AC LDR X8, [X0 + 0xB8]
	0x032EE5B0 MOV X0, X20
	0x032EE5B4 MOV X2, X31
	0x032EE5B8 LDR X1, [X8 + 0x20]
	0x032EE5BC BL 0x322C764
	0x032EE5C0 CBZ W0, 0x32EE5F4
	0x032EE5C4 MOV W21, W0
	0x032EE5C8 CMP W0, 0x1
	0x032EE5CC B.GE 0x32EE5F8
	0x032EE5D0 LDR X8, [X19]
	0x032EE5D4 LDR X8, [X8 + 0xB8]
	0x032EE5D8 LDR X0, [X8]
	0x032EE5DC B 0x32EE5E4
	0x032EE5E0 MOV X0, X31
	0x032EE5E4 LDP X20, X19, [X31 + 0x20]
	0x032EE5E8 LDP X22, X21, [X31 + 0x10]
	0x032EE5EC LDP X30, X23, [X31], #0x30
	0x032EE5F0 RET
	0x032EE5F4 MOVZ W21, 0x1
	0x032EE5F8 MOV X0, X20
	0x032EE5FC MOV W1, W31
	0x032EE600 MOV W2, W21
	0x032EE604 MOV X3, X31
	0x032EE608 BL 0x3228DE4
	0x032EE60C CBZ X0, 0x32EE7D0
	0x032EE610 LDR W23, [X0 + 0x10]
	0x032EE614 MOV X19, X0
	0x032EE618 CMP W23, 0x2
	0x032EE61C B.GE 0x32EE6D0
	0x032EE620 LDR X8, [X22]
	0x032EE624 CMP W23, 0x1
	0x032EE628 B.NE 0x32EE78C
	0x032EE62C LDR W9, [X8 + 0xE0]
	0x032EE630 CBNZ W9, 0x32EE640
	0x032EE634 MOV X0, X8
	0x032EE638 BL 0x1C16DFC
	0x032EE63C LDR X8, [X22]
	0x032EE640 LDR X9, [X8 + 0xB8]
	0x032EE644 LDRH W9, [X9 + 0xA]
	0x032EE648 CMP W9, 0x5C
	0x032EE64C B.NE 0x32EE78C
	0x032EE650 LDR W9, [X20 + 0x10]
	0x032EE654 CMP W9, 0x2
	0x032EE658 B.LT 0x32EE78C
	0x032EE65C MOV X0, X20
	0x032EE660 MOV W1, W21
	0x032EE664 MOV X2, X31
	0x032EE668 BL 0x3222A1C
	0x032EE66C LDR X8, [X22]
	0x032EE670 MOV W20, W0
	0x032EE674 LDR W9, [X8 + 0xE0]
	0x032EE678 CBNZ W9, 0x32EE688
	0x032EE67C MOV X0, X8
	0x032EE680 BL 0x1C16DFC
	0x032EE684 LDR X8, [X22]
	0x032EE688 LDR X9, [X8 + 0xB8]
	0x032EE68C LDRH W9, [X9 + 0x18]
	0x032EE690 CMP W9, W20, UXTH
	0x032EE694 B.NE 0x32EE78C
	0x032EE698 LDR W9, [X8 + 0xE0]
	0x032EE69C CBNZ W9, 0x32EE6A8
	0x032EE6A0 MOV X0, X8
	0x032EE6A4 BL 0x1C16DFC
	0x032EE6A8 ADRP X8, 0xE07000
	0x032EE6AC LDR X8, [X8 + 0x170]
	0x032EE6B0 LDR X0, [X8]
	0x032EE6B4 LDR W8, [X0 + 0xE0]
	0x032EE6B8 CBNZ W8, 0x32EE6C0
	0x032EE6BC BL 0x1C16DFC
	0x032EE6C0 LDR X8, [X22]
	0x032EE6C4 LDR X8, [X8 + 0xB8]
	0x032EE6C8 ADD X0, X8, 0x18
	0x032EE6CC B 0x32EE768
	0x032EE6D0 LDR X8, [X22]
	0x032EE6D4 LDR W9, [X8 + 0xE0]
	0x032EE6D8 CBNZ W9, 0x32EE6E8
	0x032EE6DC MOV X0, X8
	0x032EE6E0 BL 0x1C16DFC
	0x032EE6E4 LDR X8, [X22]
	0x032EE6E8 LDR X9, [X8 + 0xB8]
	0x032EE6EC LDRH W9, [X9 + 0xA]
	0x032EE6F0 CMP W9, 0x5C
	0x032EE6F4 B.NE 0x32EE78C
	0x032EE6F8 SUB W1, W23, 0x1
	0x032EE6FC MOV X0, X19
	0x032EE700 MOV X2, X31
	0x032EE704 BL 0x3222A1C
	0x032EE708 LDR X8, [X22]
	0x032EE70C MOV W20, W0
	0x032EE710 LDR W9, [X8 + 0xE0]
	0x032EE714 CBNZ W9, 0x32EE724
	0x032EE718 MOV X0, X8
	0x032EE71C BL 0x1C16DFC
	0x032EE720 LDR X8, [X22]
	0x032EE724 LDR X9, [X8 + 0xB8]
	0x032EE728 LDRH W9, [X9 + 0x18]
	0x032EE72C CMP W9, W20, UXTH
	0x032EE730 B.NE 0x32EE78C
	0x032EE734 LDR W9, [X8 + 0xE0]
	0x032EE738 CBNZ W9, 0x32EE744
	0x032EE73C MOV X0, X8
	0x032EE740 BL 0x1C16DFC
	0x032EE744 ADRP X8, 0xE07000
	0x032EE748 LDR X8, [X8 + 0x170]
	0x032EE74C LDR X0, [X8]
	0x032EE750 LDR W8, [X0 + 0xE0]
	0x032EE754 CBNZ W8, 0x32EE75C
	0x032EE758 BL 0x1C16DFC
	0x032EE75C LDR X8, [X22]
	0x032EE760 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x10EF000
	007 Move W8, [X19+2574]
	008 Move X20, X1
	009 Move X21, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xE06000
	015 Move X0, [X0+3584]
	016 Call 0x1C17CF4
	017 Move X0, 0xE34000
	018 Move X0, [X0+3336]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+2574], W8
	022 Compare X21, 0
	023 JumpIfEqual {74}
	024 Move W8, [X21+16]
	025 Compare W8, 0
	026 JumpIfEqual {86}
	027 Move X8, 0xE34000
	028 Move X8, [X8+3336]
	029 Move X22, 0xE06000
	030 Move X0, [X8]
	031 Move X22, [X22+3584]
	032 Call 0x1C17F10
	033 Move X1, X21
	034 Move X19, X0
	035 Call StreamWriter..ctor, X0, X1
	036 Compare X19, 0
	037 JumpIfEqual {109}
	038 Move X8, [X19]
	039 Move X9, [X8+584]
	040 Move X2, [X8+592]
	041 Move X0, X19
	042 Move X1, X20
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X20, X31
	045 Move X8, [X19]
	046 Move X1, [X22]
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Compare X9, 0
	049 JumpIfEqual {56}
	050 Move X10, [X8+176]
	051 Add X10, X10, 8
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Subtract X9, X9, 1
	055 Add X10, X10, 16
	056 Move X0, X19
	057 Move W2, W31
	058 Call 0x1C5D788
	059 NotImplemented "Instruction LDRSW not yet implemented."
	060 Add X8, X8, X9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X1, [X0+8]
	064 Move X0, X19
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Compare X20, 0
	067 JumpIfNotEqual {110}
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X30, [X31+48]
	073 Return 
	074 Move X0, 0xE0B000
	075 Move X0, [X0+1320]
	076 Call 0x1C17D08
	077 Call 0x1C17F10
	078 Move X19, X0
	079 Move X0, 0xE11000
	080 Move X0, [X0+288]
	081 Call 0x1C17D08
	082 Move X1, X0
	083 Move X0, X19
	084 Move X2, X31
	085 Call ArgumentNullException..ctor, X0, X1
	086 Move X0, 0xE0E000
	087 Move X0, [X0+1400]
	088 Call 0x1C17D08
	089 Call 0x1C17F10
	090 Move X19, X0
	091 Move X0, 0xE39000
	092 Move X0, [X0+3600]
	093 Call 0x1C17D08
	094 Move X20, X0
	095 Move X0, 0xE11000
	096 Move X0, [X0+288]
	097 Call 0x1C17D08
	098 Move X2, X0
	099 Move X0, X19
	100 Move X1, X20
	101 Move X3, X31
	102 Call ArgumentException..ctor, X0, X1, X2
	103 Move X0, 0xE3A000
	104 Move X0, [X0+16]
	105 Call 0x1C17D08
	106 Move X1, X0
	107 Move X0, X19
	108 Call 0x1C17DEC
	109 Call 0x1C17F20
	110 Move X0, X20
	111 Call 0x1C17F18
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X21, X0
	114 Move X0, X21
	115 Call 0x3EB2AD0
	116 Move X20, [X0]
	117 Call 0x3EB2AE0
	118 Compare X19, 0
	119 JumpIfNotEqual {45}
	120 Move X20, X31
	121 Move X21, X0
	122 Compare X19, 0
	123 JumpIfEqual {145}
	124 Move X8, [X19]
	125 Move X1, [X22]
	126 NotImplemented "Instruction LDRH not yet implemented."
	127 Compare X9, 0
	128 JumpIfEqual {135}
	129 Move X10, [X8+176]
	130 Add X10, X10, 8
	131 NotImplemented "Instruction LDUR not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Subtract X9, X9, 1
	134 Add X10, X10, 16
	135 Move X0, X19
	136 Move W2, W31
	137 Call 0x1C5D788
	138 NotImplemented "Instruction LDRSW not yet implemented."
	139 Add X8, X8, X9
	140 Add X0, X8, 312
	141 Move X8, [X0]
	142 Move X1, [X0+8]
	143 Move X0, X19
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Compare X20, 0
	146 JumpIfNotEqual {149}
	147 Move X0, X21
	148 Call 0x1D2D690
	149 Move X0, X20
	150 Call 0x1C17F18
	151 Call 0x1991590

Method: System.Byte[] ReadAllBytes(System.String path)

Disassembly:
	0x032EE764 ADD X0, X8, 0xA
	0x032EE768 MOV X1, X31
	0x032EE76C BL 0x330A76C
	0x032EE770 MOV X1, X0
	0x032EE774 MOV X0, X19
	0x032EE778 LDP X20, X19, [X31 + 0x20]
	0x032EE77C LDP X22, X21, [X31 + 0x10]
	0x032EE780 MOV X2, X31
	0x032EE784 LDP X30, X23, [X31], #0x30
	0x032EE788 B 0x321B938
	0x032EE78C LDR W9, [X8 + 0xE0]
	0x032EE790 CBNZ W9, 0x32EE79C
	0x032EE794 MOV X0, X8
	0x032EE798 BL 0x1C16DFC
	0x032EE79C MOV X0, X19
	0x032EE7A0 LDP X20, X19, [X31 + 0x20]
	0x032EE7A4 LDP X22, X21, [X31 + 0x10]
	0x032EE7A8 LDP X30, X23, [X31], #0x30
	0x032EE7AC B 0x32FD188
	0x032EE7B0 ADRP X0, 0xE0D000
	0x032EE7B4 LDR X0, [X0 + 0x578]
	0x032EE7B8 BL 0x1C16D08
	0x032EE7BC BL 0x1C16F10
	0x032EE7C0 MOV X19, X0
	0x032EE7C4 ADRP X0, 0xE39000
	0x032EE7C8 LDR X0, [X0 + 0x58]
	0x032EE7CC B 0x32EE810
	0x032EE7D0 BL 0x1C16F20
	0x032EE7D4 ADRP X0, 0xE0D000
	0x032EE7D8 LDR X0, [X0 + 0x578]
	0x032EE7DC BL 0x1C16D08
	0x032EE7E0 BL 0x1C16F10
	0x032EE7E4 MOV X19, X0
	0x032EE7E8 ADRP X0, 0xE39000
	0x032EE7EC LDR X0, [X0 + 0x60]
	0x032EE7F0 B 0x32EE810
	0x032EE7F4 ADRP X0, 0xE0D000
	0x032EE7F8 LDR X0, [X0 + 0x578]
	0x032EE7FC BL 0x1C16D08
	0x032EE800 BL 0x1C16F10
	0x032EE804 MOV X19, X0
	0x032EE808 ADRP X0, 0xE39000
	0x032EE80C LDR X0, [X0 + 0x68]
	0x032EE810 BL 0x1C16D08
	0x032EE814 MOV X1, X0
	0x032EE818 MOV X0, X19
	0x032EE81C MOV X2, X31
	0x032EE820 BL 0x3314A68
	0x032EE824 ADRP X0, 0xE39000
	0x032EE828 LDR X0, [X0 + 0x70]
	0x032EE82C BL 0x1C16D08
	0x032EE830 MOV X1, X0
	0x032EE834 MOV X0, X19
	0x032EE838 BL 0x1C16DEC
	0x032EE83C STR X30, [X31 - 0x20]!
	0x032EE840 STP X20, X19, [X31 + 0x10]
	0x032EE844 ADRP X20, 0x10EE000
	0x032EE848 LDRB W8, [X20 + 0xA15]
	0x032EE84C MOV X19, X0
	0x032EE850 TBNZ X8, 0x0, 0x32EE868
	0x032EE854 ADRP X0, 0xE38000
	0x032EE858 LDR X0, [X0 + 0xF90]
	0x032EE85C BL 0x1C16CF4
	0x032EE860 MOVZ W8, 0x1
	0x032EE864 STRB W8, [X20 + 0xA15]
	0x032EE868 MOV X0, X19
	0x032EE86C BL 0x32EE454
	0x032EE870 CBZ X0, 0x32EE89C
	0x032EE874 ADRP X8, 0xE38000
	0x032EE878 LDR X8, [X8 + 0xF90]
	0x032EE87C MOV X19, X0
	0x032EE880 LDR X0, [X8]
	0x032EE884 BL 0x1C16F10
	0x032EE888 MOV X1, X19
	0x032EE88C MOV X2, X31
	0x032EE890 MOV X20, X0
	0x032EE894 BL 0x32EC8F8
	0x032EE898 MOV X0, X20
	0x032EE89C LDP X20, X19, [X31 + 0x10]
	0x032EE8A0 LDR X30, [X31], #0x20
	0x032EE8A4 RET
	0x032EE8A8 STP X30, X21, [X31 - 0x20]!
	0x032EE8AC STP X20, X19, [X31 + 0x10]
	0x032EE8B0 ADRP X21, 0x10EE000
	0x032EE8B4 ADRP X20, 0xE33000
	0x032EE8B8 LDRB W8, [X21 + 0xA16]
	0x032EE8BC LDR X20, [X20 + 0xD08]
	0x032EE8C0 MOV X19, X0
	0x032EE8C4 TBNZ X8, 0x0, 0x32EE8DC
	0x032EE8C8 ADRP X0, 0xE33000
	0x032EE8CC LDR X0, [X0 + 0xD08]
	0x032EE8D0 BL 0x1C16CF4
	0x032EE8D4 MOVZ W8, 0x1
	0x032EE8D8 STRB W8, [X21 + 0xA16]
	0x032EE8DC LDR X0, [X20]
	0x032EE8E0 LDR X19, [X19 + 0x90]
	0x032EE8E4 BL 0x1C16F10
	0x032EE8E8 MOV X1, X19
	0x032EE8EC MOV W2, W31
	0x032EE8F0 MOV X3, X31
	0x032EE8F4 MOV X20, X0
	0x032EE8F8 BL 0x32E879C
	0x032EE8FC MOV X0, X20
	0x032EE900 LDP X20, X19, [X31 + 0x10]
	0x032EE904 LDP X30, X21, [X31], #0x20
	0x032EE908 RET
	0x032EE90C STP X30, X21, [X31 - 0x20]!
	0x032EE910 STP X20, X19, [X31 + 0x10]
	0x032EE914 ADRP X21, 0x10EE000
	0x032EE918 ADRP X20, 0xE33000
	0x032EE91C LDRB W8, [X21 + 0xA17]
	0x032EE920 LDR X20, [X20 + 0xD08]
	0x032EE924 MOV X19, X0
	0x032EE928 TBNZ X8, 0x0, 0x32EE940
	0x032EE92C ADRP X0, 0xE33000
	0x032EE930 LDR X0, [X0 + 0xD08]
	0x032EE934 BL 0x1C16CF4
	0x032EE938 MOVZ W8, 0x1
	0x032EE93C STRB W8, [X21 + 0xA17]
	0x032EE940 LDR X0, [X20]
	0x032EE944 LDR X19, [X19 + 0x90]
	0x032EE948 BL 0x1C16F10
	0x032EE94C MOVZ W2, 0x1
	0x032EE950 MOV X1, X19
	0x032EE954 MOV X3, X31
	0x032EE958 MOV X20, X0
	0x032EE95C BL 0x32E879C
	0x032EE960 MOV X0, X20
	0x032EE964 LDP X20, X19, [X31 + 0x10]
	0x032EE968 LDP X30, X21, [X31], #0x20
	0x032EE96C RET
	0x032EE970 SUB X31, X31, 0x30
	0x032EE974 STP X30, X21, [X31 + 0x10]
	0x032EE978 STP X20, X19, [X31 + 0x20]
	0x032EE97C ADRP X21, 0x10EE000
	0x032EE980 ADRP X20, 0xE33000
	0x032EE984 LDRB W8, [X21 + 0xA18]
	0x032EE988 LDR X20, [X20 + 0x670]
	0x032EE98C MOV X19, X0
	0x032EE990 TBNZ X8, 0x0, 0x32EE9A8
	0x032EE994 ADRP X0, 0xE33000
	0x032EE998 LDR X0, [X0 + 0x670]
	0x032EE99C BL 0x1C16CF4
	0x032EE9A0 MOVZ W8, 0x1
	0x032EE9A4 STRB W8, [X21 + 0xA18]
	0x032EE9A8 LDR X0, [X20]
	0x032EE9AC LDR X19, [X19 + 0x90]
	0x032EE9B0 BL 0x1C16F10
	0x032EE9B4 MOVZ W2, 0x3
	0x032EE9B8 MOVZ W3, 0x1
	0x032EE9BC MOVZ W4, 0x1
	0x032EE9C0 MOVZ W5, 0x1000
	0x032EE9C4 MOV X1, X19
	0x032EE9C8 MOV W6, W31
	0x032EE9CC MOV W7, W31
	0x032EE9D0 MOV X20, X0
	0x032EE9D4 BL 0x32F8300
	0x032EE9D8 MOV X0, X20
	0x032EE9DC LDP X20, X19, [X31 + 0x20]
	0x032EE9E0 LDP X30, X21, [X31 + 0x10]
	0x032EE9E4 ADD X31, X31, 0x30
	0x032EE9E8 RET
	0x032EE9EC SUB X31, X31, 0x20
	0x032EE9F0 STR X30, [X31 + 0x10]
	0x032EE9F4 ANDS W31, W6, 0x1
	0x032EE9F8 MOVZ W8, 0x40000000
	0x032EE9FC CSEL W7, W8, W31, NE
	0x032EEA00 MOV W6, W31
	0x032EEA04 BL 0x32F8300
	0x032EEA08 LDR X30, [X31 + 0x10]
	0x032EEA0C ADD X31, X31, 0x20
	0x032EEA10 RET
	0x032EEA14 B 0x32EEA18
	0x032EEA18 STP X30, X23, [X31 - 0x30]!
	0x032EEA1C STP X22, X21, [X31 + 0x10]
	0x032EEA20 STP X20, X19, [X31 + 0x20]
	0x032EEA24 ADRP X21, 0x10EE000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x10EF000
	008 Move X19, 0xE34000
	009 Move W8, [X21+2575]
	010 Move X19, [X19+1648]
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xE06000
	017 Move X0, [X0+1560]
	018 Call 0x1C17CF4
	019 Move X0, 0xE34000
	020 Move X0, [X0+1648]
	021 Call 0x1C17CF4
	022 Move X0, 0xE06000
	023 Move X0, [X0+3584]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+2575], W8
	027 Move X0, [X19]
	028 Move X23, 0xE06000
	029 Move X23, [X23+3584]
	030 Call 0x1C17F10
	031 Move W2, 3
	032 Move W3, 1
	033 Move W4, 1
	034 Move W5, 1
	035 Move X1, X20
	036 Move X6, X31
	037 Move X19, X0
	038 Call FileStream..ctor, X0, X1, X2, X3, X4, X5
	039 Compare X19, 0
	040 JumpIfEqual {115}
	041 Move X8, [X19]
	042 Move X9, [X8+488]
	043 Move X1, [X8+496]
	044 Move X0, X19
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move W8, 0x80000000
	047 Move X20, X0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Compare X20, 0
	050 JumpIfEqual {72}
	051 Move X8, 0xE06000
	052 Move X8, [X8+1560]
	053 Move X0, [X8]
	054 Move W1, W20
	055 Call 0x1C17D6C
	056 Move X21, X0
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move W22, W31
	059 Move X8, [X19]
	060 Move X9, [X8+856]
	061 Move X4, [X8+864]
	062 Move X0, X19
	063 Move X1, X21
	064 Move W2, W22
	065 Move W3, W20
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Compare W0, 0
	068 JumpIfEqual {107}
	069 Subtract W20, W20, W0
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Add W22, W0, W22
	072 Move X0, X19
	073 Call File.ReadAllBytesUnknownLength, X0
	074 Move X21, X0
	075 Move X20, X31
	076 Move X8, [X19]
	077 Move X1, [X23]
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 Compare X9, 0
	080 JumpIfEqual {87}
	081 Move X10, [X8+176]
	082 Add X10, X10, 8
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Subtract X9, X9, 1
	086 Add X10, X10, 16
	087 Move X0, X19
	088 Move W2, W31
	089 Call 0x1C5D788
	090 NotImplemented "Instruction LDRSW not yet implemented."
	091 Add X8, X8, X9
	092 Add X0, X8, 312
	093 Move X8, [X0]
	094 Move X1, [X0+8]
	095 Move X0, X19
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Compare X20, 0
	098 JumpIfNotEqual {116}
	099 Move X0, X21
	100 Move X20, [X31+32]
	101 Move X19, [X31+40]
	102 Move X22, [X31+16]
	103 Move X21, [X31+24]
	104 Move X30, [X31+48]
	105 Move X23, [X31+56]
	106 Return X0
	107 Call Error.GetEndOfFile
	108 Move X20, X0
	109 Move X0, 0xE3A000
	110 Move X0, [X0+24]
	111 Call 0x1C17D08
	112 Move X1, X0
	113 Move X0, X20
	114 Call 0x1C17DEC
	115 Call 0x1C17F20
	116 Move X0, X20
	117 Call 0x1C17F18
	118 Move X0, 0xE34000
	119 Move X0, [X0+1960]
	120 Call 0x1C17D08
	121 Call 0x1C17F10
	122 Move X20, X0
	123 Move X0, 0xE3A000
	124 Move X0, [X0+32]
	125 Call 0x1C17D08
	126 Move X1, X0
	127 Move X0, X20
	128 Move X2, X31
	129 Call SystemException..ctor, X0, X1
	130 Move W8, 0x1620
	131 NotImplemented "Instruction MOVK not yet implemented."
	132 Move [X20+96], W8
	133 Move X0, 0xE3A000
	134 Move X0, [X0+24]
	135 Call 0x1C17D08
	136 Move X1, X0
	137 Move X0, X20
	138 Call 0x1C17DEC
	139 Move X21, X0
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move X0, X21
	142 Call 0x3EB2AD0
	143 Move X20, [X0]
	144 Call 0x3EB2AE0
	145 Move X21, X31
	146 Compare X19, 0
	147 JumpIfNotEqual {76}
	148 Move X20, X31
	149 Move X21, X0
	150 Compare X19, 0
	151 JumpIfEqual {173}
	152 Move X8, [X19]
	153 Move X1, [X23]
	154 NotImplemented "Instruction LDRH not yet implemented."
	155 Compare X9, 0
	156 JumpIfEqual {163}
	157 Move X10, [X8+176]
	158 Add X10, X10, 8
	159 NotImplemented "Instruction LDUR not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Subtract X9, X9, 1
	162 Add X10, X10, 16
	163 Move X0, X19
	164 Move W2, W31
	165 Call 0x1C5D788
	166 NotImplemented "Instruction LDRSW not yet implemented."
	167 Add X8, X8, X9
	168 Add X0, X8, 312
	169 Move X8, [X0]
	170 Move X1, [X0+8]
	171 Move X0, X19
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Compare X20, 0
	174 JumpIfNotEqual {177}
	175 Move X0, X21
	176 Call 0x1D2D690
	177 Move X0, X20
	178 Call 0x1C17F18
	179 Call 0x1991590

Method: System.Byte[] ReadAllBytesUnknownLength(System.IO.FileStream fs)

Disassembly:
	0x032EEA28 LDRB W8, [X21 + 0xA20]
	0x032EEA2C MOV X20, X1
	0x032EEA30 MOV X19, X0
	0x032EEA34 TBNZ X8, 0x0, 0x32EEA70
	0x032EEA38 ADRP X0, 0xE2C000
	0x032EEA3C LDR X0, [X0 + 0x1D0]
	0x032EEA40 BL 0x1C16CF4
	0x032EEA44 ADRP X0, 0xE0A000
	0x032EEA48 LDR X0, [X0 + 0x170]
	0x032EEA4C BL 0x1C16CF4
	0x032EEA50 ADRP X0, 0xE39000
	0x032EEA54 LDR X0, [X0 + 0x78]
	0x032EEA58 BL 0x1C16CF4
	0x032EEA5C ADRP X0, 0xE39000
	0x032EEA60 LDR X0, [X0 + 0x80]
	0x032EEA64 BL 0x1C16CF4
	0x032EEA68 MOVZ W8, 0x1
	0x032EEA6C STRB W8, [X21 + 0xA20]
	0x032EEA70 MOV X0, X19
	0x032EEA74 MOV X1, X31
	0x032EEA78 BL 0x33C011C
	0x032EEA7C CBZ X20, 0x32EEB0C
	0x032EEA80 ADRP X8, 0xE39000
	0x032EEA84 LDR X8, [X8 + 0x80]
	0x032EEA88 ADRP X21, 0xE2C000
	0x032EEA8C ADRP X23, 0xE39000
	0x032EEA90 ADRP X22, 0xE0A000
	0x032EEA94 LDR X1, [X8]
	0x032EEA98 LDR X21, [X21 + 0x1D0]
	0x032EEA9C LDR X23, [X23 + 0x78]
	0x032EEAA0 LDR X22, [X22 + 0x170]
	0x032EEAA4 MOV X0, X20
	0x032EEAA8 MOV X2, X31
	0x032EEAAC BL 0x32A9F64
	0x032EEAB0 LDR X8, [X21]
	0x032EEAB4 MOV X21, X0
	0x032EEAB8 LDR W9, [X8 + 0xE0]
	0x032EEABC CBNZ W9, 0x32EEAC8
	0x032EEAC0 MOV X0, X8
	0x032EEAC4 BL 0x1C16DFC
	0x032EEAC8 MOV X0, X21
	0x032EEACC BL 0x32EF8F8
	0x032EEAD0 STR X0, [X19 + 0x90]
	0x032EEAD4 LDR X1, [X23]
	0x032EEAD8 MOV X0, X20
	0x032EEADC MOV X2, X31
	0x032EEAE0 BL 0x32A9F64
	0x032EEAE4 STR X0, [X19 + 0x98]
	0x032EEAE8 LDR X1, [X22]
	0x032EEAEC MOV X0, X20
	0x032EEAF0 MOV X2, X31
	0x032EEAF4 BL 0x32A9F64
	0x032EEAF8 STR X0, [X19 + 0xA0]
	0x032EEAFC LDP X20, X19, [X31 + 0x20]
	0x032EEB00 LDP X22, X21, [X31 + 0x10]
	0x032EEB04 LDP X30, X23, [X31], #0x30
	0x032EEB08 RET
	0x032EEB0C ADRP X0, 0xE0A000
	0x032EEB10 LDR X0, [X0 + 0x528]
	0x032EEB14 BL 0x1C16D08
	0x032EEB18 BL 0x1C16F10
	0x032EEB1C MOV X19, X0
	0x032EEB20 ADRP X0, 0xE2F000
	0x032EEB24 LDR X0, [X0 + 0x2D8]
	0x032EEB28 BL 0x1C16D08
	0x032EEB2C MOV X1, X0
	0x032EEB30 MOV X0, X19
	0x032EEB34 MOV X2, X31
	0x032EEB38 BL 0x330E100
	0x032EEB3C ADRP X0, 0xE39000
	0x032EEB40 LDR X0, [X0 + 0x88]
	0x032EEB44 BL 0x1C16D08
	0x032EEB48 MOV X1, X0
	0x032EEB4C MOV X0, X19
	0x032EEB50 BL 0x1C16DEC
	0x032EEB54 LDR X0, [X0 + 0xA0]
	0x032EEB58 RET
	0x032EEB5C LDRB W0, [X0 + 0x74]
	0x032EEB60 RET
	0x032EEB64 AND W8, W1, 0x1
	0x032EEB68 STRB W8, [X0 + 0x74]
	0x032EEB6C RET
	0x032EEB70 AND W8, W1, 0x1
	0x032EEB74 MOVN W9, 0x0
	0x032EEB78 STRB W8, [X0 + 0x74]
	0x032EEB7C STR W9, [X0 + 0x70]
	0x032EEB80 RET
	0x032EEB84 STR X30, [X31 - 0x40]!
	0x032EEB88 STP X24, X23, [X31 + 0x10]
	0x032EEB8C STP X22, X21, [X31 + 0x20]
	0x032EEB90 STP X20, X19, [X31 + 0x30]
	0x032EEB94 ADRP X24, 0x10EE000
	0x032EEB98 ADRP X23, 0xE30000
	0x032EEB9C LDRB W8, [X24 + 0xA19]
	0x032EEBA0 LDR X23, [X23 + 0xD78]
	0x032EEBA4 MOV W21, W3
	0x032EEBA8 MOV X20, X2
	0x032EEBAC MOV X22, X1
	0x032EEBB0 MOV X19, X0
	0x032EEBB4 TBNZ X8, 0x0, 0x32EEBCC
	0x032EEBB8 ADRP X0, 0xE30000
	0x032EEBBC LDR X0, [X0 + 0xD78]
	0x032EEBC0 BL 0x1C16CF4
	0x032EEBC4 MOVZ W8, 0x1
	0x032EEBC8 STRB W8, [X24 + 0xA19]
	0x032EEBCC AND W3, W21, 0x1
	0x032EEBD0 MOV X0, X19
	0x032EEBD4 MOV X1, X22
	0x032EEBD8 MOV X2, X20
	0x032EEBDC BL 0x32EEC74
	0x032EEBE0 LDR X0, [X23]
	0x032EEBE4 LDR W20, [X19 + 0x8]
	0x032EEBE8 LDR W8, [X0 + 0xE0]
	0x032EEBEC CBNZ W8, 0x32EEBF4
	0x032EEBF0 BL 0x1C16DFC
	0x032EEBF4 MOV X0, X31
	0x032EEBF8 BL 0x3209CBC
	0x032EEBFC CMP W20, W0
	0x032EEC00 B.NE 0x32EEC10
	0x032EEC04 MOVZ W9, 0x100
	0x032EEC08 MOVZ W8, 0x80
	0x032EEC0C B 0x32EEC48
	0x032EEC10 LDR X0, [X23]
	0x032EEC14 LDR W20, [X19 + 0xC]
	0x032EEC18 LDR W8, [X0 + 0xE0]
	0x032EEC1C CBNZ W8, 0x32EEC24
	0x032EEC20 BL 0x1C16DFC
	0x032EEC24 MOV X0, X31
	0x032EEC28 BL 0x3209CB8
	0x032EEC2C CMP W20, W0
	0x032EEC30 MOVZ W8, 0x2
	0x032EEC34 MOVZ W9, 0x10
	0x032EEC38 MOVZ W10, 0x4
	0x032EEC3C MOVZ W11, 0x20
	0x032EEC40 CSEL W8, W9, W8, EQ
	0x032EEC44 CSEL W9, W11, W10, EQ
	0x032EEC48 LDR W10, [X19 + 0x4]
	0x032EEC4C LDP X20, X19, [X31 + 0x30]
	0x032EEC50 LDP X22, X21, [X31 + 0x20]
	0x032EEC54 LDP X24, X23, [X31 + 0x10]
	0x032EEC58 ANDS W31, W10, W9, 0x0
	0x032EEC5C CSET W9, NE
	0x032EEC60 ANDS W31, W10, W8, 0x0
	0x032EEC64 CSET W8, EQ
	0x032EEC68 AND W0, W9, W8, 0x0
	0x032EEC6C LDR X30, [X31], #0x40
	0x032EEC70 RET
	0x032EEC74 STR X30, [X31 - 0x30]!
	0x032EEC78 STP X22, X21, [X31 + 0x10]
	0x032EEC7C STP X20, X19, [X31 + 0x20]
	0x032EEC80 LDR W8, [X0 + 0x70]
	0x032EEC84 MOV W22, W3
	0x032EEC88 MOV X19, X2
	0x032EEC8C MOV X21, X0
	0x032EEC90 ADDS W31, W8, 0x1
	0x032EEC94 MOV X20, X1
	0x032EEC98 B.EQ 0x32EECA4
	0x032EEC9C CBNZ W8, 0x32EECBC
	0x032EECA0 B 0x32EECC0
	0x032EECA4 MOV X0, X21
	0x032EECA8 MOV X1, X20
	0x032EECAC MOV X2, X19
	0x032EECB0 BL 0x32EED78
	0x032EECB4 LDR W8, [X21 + 0x70]
	0x032EECB8 CBZ W8, 0x32EECC0
	0x032EECBC TBZ X22, 0x0, 0x32EECD0
	0x032EECC0 LDP X20, X19, [X31 + 0x20]
	0x032EECC4 LDP X22, X21, [X31 + 0x10]
	0x032EECC8 LDR X30, [X31], #0x30
	0x032EECCC RET
	0x032EECD0 MOVN W9, 0x0
	0x032EECD4 ADD X0, X31, 0x8
	0x032EECD8 MOV W1, W8
	0x032EECDC MOV X2, X31
	0x032EECE0 STR W9, [X21 + 0x70]
	0x032EECE4 STR X31, [X31 + 0x8]
	0x032EECE8 BL 0x3209700
	0x032EECEC MOV X0, X31
	0x032EECF0 MOV X1, X20
	0x032EECF4 MOV X2, X19
	0x032EECF8 MOV X3, X31
	0x032EECFC BL 0x322EB14
	0x032EED00 LDR X8, [X31 + 0x8]
	0x032EED04 MOV X1, X0
	0x032EED08 MOV W2, W31
	0x032EED0C MOV X3, X31
	0x032EED10 MOV X0, X8
	0x032EED14 BL 0x3208FE8
	0x032EED18 MOV X19, X0
	0x032EED1C ADRP X0, 0xE39000
	0x032EED20 LDR X0, [X0 + 0x90]
	0x032EED24 BL 0x1C16D08
	0x032EED28 MOV X1, X0
	0x032EED2C MOV X0, X19
	0x032EED30 BL 0x1C16DEC
	0x032EED34 STP X30, X19, [X31 - 0x10]!
	0x032EED38 LDR W8, [X0 + 0x70]
	0x032EED3C MOV X19, X0
	0x032EED40 ADDS W31, W8, 0x1
	0x032EED44 B.NE 0x32EED50
	0x032EED48 MOV X0, X19
	0x032EED4C BL 0x32EED78
	0x032EED50 LDRB W8, [X19 + 0x76]
	0x032EED54 CBZ W8, 0x32EED6C
	0x032EED58 LDRB W8, [X19 + 0x74]
	0x032EED5C LDRB W9, [X19 + 0x75]
	0x032EED60 CMP W9, W8
	0x032EED64 CSET W0, EQ
	0x032EED68 B 0x32EED70
	0x032EED6C MOV W0, W31
	0x032EED70 LDP X30, X19, [X31], #0x10
	0x032EED74 RET
	0x032EED78 SUB X31, X31, 0xB0
	0x032EED7C STP X30, X23, [X31 + 0x80]
	0x032EED80 STP X22, X21, [X31 + 0x90]
	0x032EED84 STP X20, X19, [X31 + 0xA0]
	0x032EED88 ADRP X23, 0x10EE000
	0x032EED8C ADRP X22, 0xE30000
	0x032EED90 LDRB W8, [X23 + 0xA1A]
	0x032EED94 LDR X22, [X22 + 0xD70]
	0x032EED98 MOV X20, X2
	0x032EED9C MOV X21, X1
	0x032EEDA0 MOV X19, X0
	0x032EEDA4 TBNZ X8, 0x0, 0x32EEDC8
	0x032EEDA8 ADRP X0, 0xE30000
	0x032EEDAC LDR X0, [X0 + 0xD70]
	0x032EEDB0 BL 0x1C16CF4
	0x032EEDB4 ADRP X0, 0xE30000
	0x032EEDB8 LDR X0, [X0 + 0xD78]
	0x032EEDBC BL 0x1C16CF4
	0x032EEDC0 MOVZ W8, 0x1
	0x032EEDC4 STRB W8, [X23 + 0xA1A]
	0x032EEDC8 MOVI V0.2D, 0x0
	0x032EEDCC STR X31, [X31 + 0x8]
	0x032EEDD0 STP V0, V0, [X31 + 0x60]
	0x032EEDD4 STP V0, V0, [X31 + 0x40]
	0x032EEDD8 STP V0, V0, [X31 + 0x20]
	0x032EEDDC STR V0, [X31 + 0x1]
	0x032EEDE0 STRB W31, [X19 + 0x75]
	0x032EEDE4 LDR X0, [X22]
	0x032EEDE8 ADRP X22, 0xE30000
	0x032EEDEC LDR W8, [X0 + 0xE0]
	0x032EEDF0 LDR X22, [X22 + 0xD78]
	0x032EEDF4 CBNZ W8, 0x32EEDFC
	0x032EEDF8 BL 0x1C16DFC
	0x032EEDFC MOV X0, X21
	0x032EEE00 MOV X1, X20
	0x032EEE04 MOV X2, X31
	0x032EEE08 BL 0x32E5368
	0x032EEE0C MOV X20, X0
	0x032EEE10 LDR X0, [X22]
	0x032EEE14 MOV X21, X1
	0x032EEE18 LDR W8, [X0 + 0xE0]
	0x032EEE1C CBNZ W8, 0x32EEE24
	0x032EEE20 BL 0x1C16DFC
	0x032EEE24 MOV X0, X20
	0x032EEE28 MOV X1, X21
	0x032EEE2C MOV X2, X19
	0x032EEE30 MOV X3, X31
	0x032EEE34 BL 0x3209E70
	0x032EEE38 TBNZ X0, 0x1F, 0x32EEEA4
	0x032EEE3C LDR W8, [X19 + 0x4]
	0x032EEE40 MOVZ W9, 0x1
	0x032EEE44 STRB W9, [X19 + 0x76]
	0x032EEE48 AND W8, W8, 0xF000
	0x032EEE4C CMP W8, 0x4000
	0x032EEE50 CSET W9, EQ
	0x032EEE54 CMP W8, 0xA000
	0x032EEE58 STRB W9, [X19 + 0x75]
	0x032EEE5C B.NE 0x32EEE9C
	0x032EEE60 LDR X0, [X22]
	0x032EEE64 LDR W8, [X0 + 0xE0]
	0x032EEE68 CBNZ W8, 0x32EEE70
	0x032EEE6C BL 0x1C16DFC
	0x032EEE70 ADD X2, X31, 0x10
	0x032EEE74 MOV X0, X20
	0x032EEE78 MOV X1, X21
	0x032EEE7C MOV X3, X31
	0x032EEE80 BL 0x3209D1C
	0x032EEE84 TBNZ X0, 0x1F, 0x32EEE9C
	0x032EEE88 LDR W8, [X31 + 0x14]
	0x032EEE8C AND W8, W8, 0xF000
	0x032EEE90 CMP W8, 0x4000
	0x032EEE94 CSET W8, EQ
	0x032EEE98 STRB W8, [X19 + 0x75]
	0x032EEE9C STR W31, [X19 + 0x70]
	0x032EEEA0 B 0x32EEEFC
	0x032EEEA4 LDR X0, [X22]
	0x032EEEA8 LDR W8, [X0 + 0xE0]
	0x032EEEAC CBNZ W8, 0x32EEEB4
	0x032EEEB0 BL 0x1C16DFC
	0x032EEEB4 MOV X0, X31
	0x032EEEB8 BL 0x3209954
	0x032EEEBC MOVZ W8, 0x39
	0x032EEEC0 MOVK W8, 0x10000
	0x032EEEC4 CMP W0, W8
	0x032EEEC8 STR X0, [X31 + 0x8]
	0x032EEECC B.EQ 0x32EEEE0
	0x032EEED0 MOVZ W8, 0x2D
	0x032EEED4 MOVK W8, 0x10000
	0x032EEED8 CMP W0, W8
	0x032EEEDC B.NE 0x32EEEEC
	0x032EEEE0 STR W31, [X19 + 0x70]
	0x032EEEE4 STRB W31, [X19 + 0x76]
	0x032EEEE8 B 0x32EEEFC
	0x032EEEEC ADD X0, X31, 0x8
	0x032EEEF0 MOV X1, X31
	0x032EEEF4 BL 0x32095C8
	0x032EEEF8 STR W0, [X19 + 0x70]
	0x032EEEFC LDP X20, X19, [X31 + 0xA0]
	0x032EEF00 LDP X22, X21, [X31 + 0x90]
	0x032EEF04 LDP X30, X23, [X31 + 0x80]
	0x032EEF08 ADD X31, X31, 0xB0
	0x032EEF0C RET
	0x032EEF10 STR X30, [X31 - 0x30]!
	0x032EEF14 STP X22, X21, [X31 + 0x10]
	0x032EEF18 STP X20, X19, [X31 + 0x20]
	0x032EEF1C ADRP X21, 0x10EE000
	0x032EEF20 ADRP X20, 0xE30000
	0x032EEF24 LDRB W8, [X21 + 0xA1B]
	0x032EEF28 LDR X20, [X20 + 0xD78]
	0x032EEF2C MOV X19, X0
	0x032EEF30 TBNZ X8, 0x0, 0x32EEF54
	0x032EEF34 ADRP X0, 0xE30000
	0x032EEF38 LDR X0, [X0 + 0xD70]
	0x032EEF3C BL 0x1C16CF4
	0x032EEF40 ADRP X0, 0xE30000
	0x032EEF44 LDR X0, [X0 + 0xD78]
	0x032EEF48 BL 0x1C16CF4
	0x032EEF4C MOVZ W8, 0x1
	0x032EEF50 STRB W8, [X21 + 0xA1B]
	0x032EEF54 LDR X0, [X20]
	0x032EEF58 STR X31, [X31 + 0x8]
	0x032EEF5C LDR W8, [X0 + 0xE0]
	0x032EEF60 CBNZ W8, 0x32EEF68
	0x032EEF64 BL 0x1C16DFC
	0x032EEF68 MOV X0, X19
	0x032EEF6C MOV X1, X31
	0x032EEF70 BL 0x3209FA8
	0x032EEF74 TBZ X0, 0x1F, 0x32EF050
	0x032EEF78 LDR X0, [X20]
	0x032EEF7C LDR W8, [X0 + 0xE0]
	0x032EEF80 CBNZ W8, 0x32EEF88
	0x032EEF84 BL 0x1C16DFC
	0x032EEF88 MOV X0, X31
	0x032EEF8C BL 0x3209954
	0x032EEF90 MOVZ W8, 0x2D
	0x032EEF94 MOV X20, X0
	0x032EEF98 MOVK W8, 0x10000
	0x032EEF9C CMP W20, W8
	0x032EEFA0 B.EQ 0x32EF050
	0x032EEFA4 MOVZ W8, 0x48
	0x032EEFA8 MOVK W8, 0x10000
	0x032EEFAC CMP W20, W8
	0x032EEFB0 B.NE 0x32EF060
	0x032EEFB4 ADRP X8, 0xE30000
	0x032EEFB8 LDR X8, [X8 + 0xD70]
	0x032EEFBC LDR X0, [X8]
	0x032EEFC0 LDR W8, [X0 + 0xE0]
	0x032EEFC4 CBNZ W8, 0x32EEFCC
	0x032EEFC8 BL 0x1C16DFC
	0x032EEFCC MOV X0, X19
	0x032EEFD0 MOV X1, X31
	0x032EEFD4 BL 0x32E51AC
	0x032EEFD8 ADRP X22, 0x10EB000
	0x032EEFDC LDRB W8, [X22 + 0x762]
	0x032EEFE0 MOV X21, X0
	0x032EEFE4 CBZ W8, 0x32EF000
	0x032EEFE8 CBZ X21, 0x32EF018
	0x032EEFEC MOV X0, X21
	0x032EEFF0 MOV X1, X31
	0x032EEFF4 BL 0x3225708
	0x032EEFF8 LDR W1, [X21 + 0x10]
	0x032EEFFC B 0x32EF020
	0x032EF000 ADRP X0, 0xE2B000
	0x032EF004 LDR X0, [X0 + 0x290]
	0x032EF008 BL 0x1C16CF4
	0x032EF00C MOVZ W8, 0x1
	0x032EF010 STRB W8, [X22 + 0x762]
	0x032EF014 CBNZ X21, 0x32EEFEC
	0x032EF018 MOV X0, X31
	0x032EF01C MOV X1, X31
	0x032EF020 MOVZ W21, 0x48
	0x032EF024 ADD X3, X31, 0x8
	0x032EF028 MOVZ W2, 0x8000
	0x032EF02C MOVK W21, 0x10000
	0x032EF030 BL 0x32EF0C0
	0x032EF034 TBNZ X0, 0x0, 0x32EF08C
	0x032EF038 LDR W8, [X31 + 0x8]
	0x032EF03C MOVZ W9, 0x2
	0x032EF040 MOVK W9, 0x10000
	0x032EF044 ADD W9, W9, 0x2B
	0x032EF048 CMP W8, W9
	0x032EF04C B.NE 0x32EF08C
	0x032EF050 LDP X20, X19, [X31 + 0x20]
	0x032EF054 LDP X22, X21, [X31 + 0x10]
	0x032EF058 LDR X30, [X31], #0x30
	0x032EF05C RET
	0x032EF060 MOVZ W8, 0x1F
	0x032EF064 MOVK W8, 0x10000
	0x032EF068 CMP W20, W8
	0x032EF06C MOV X21, X20
	0x032EF070 B.NE 0x32EF08C
	0x032EF074 MOVZ W0, 0x2
	0x032EF078 MOVK W0, 0x10000
	0x032EF07C MOV X1, X31
	0x032EF080 BL 0x320A158
	0x032EF084 MOV X20, X0
	0x032EF088 MOV X21, X0
	0x032EF08C BFM X20, X21, 0x0, 0x1F
	0x032EF090 MOV X0, X20
	0x032EF094 MOV X1, X19
	0x032EF098 MOV W2, W31
	0x032EF09C MOV X3, X31
	0x032EF0A0 BL 0x3208FE8
	0x032EF0A4 MOV X19, X0
	0x032EF0A8 ADRP X0, 0xE38000
	0x032EF0AC LDR X0, [X0 + 0x98]
	0x032EF0B0 BL 0x1C16D08
	0x032EF0B4 MOV X1, X0
	0x032EF0B8 MOV X0, X19
	0x032EF0BC BL 0x1C16DEC
	0x032EF0C0 SUB X31, X31, 0xB0
	0x032EF0C4 STR X30, [X31 + 0x70]
	0x032EF0C8 STP X24, X23, [X31 + 0x80]
	0x032EF0CC STP X22, X21, [X31 + 0x90]
	0x032EF0D0 STP X20, X19, [X31 + 0xA0]
	0x032EF0D4 ADRP X24, 0x10ED000
	0x032EF0D8 ADRP X23, 0xE2F000
	0x032EF0DC LDRB W8, [X24 + 0xA1E]
	0x032EF0E0 LDR X23, [X23 + 0xD78]
	0x032EF0E4 MOV X19, X3
	0x032EF0E8 MOV W20, W2
	0x032EF0EC MOV X21, X1
	0x032EF0F0 MOV X22, X0
	0x032EF0F4 TBNZ X8, 0x0, 0x32EF10C
	0x032EF0F8 ADRP X0, 0xE2F000
	0x032EF0FC LDR X0, [X0 + 0xD78]
	0x032EF100 BL 0x1C16CF4
	0x032EF104 MOVZ W8, 0x1
	0x032EF108 STRB W8, [X24 + 0xA1E]
	0x032EF10C MOVI V0.2D, 0x0
	0x032EF110 STP V0, V0, [X31 + 0x50]
	0x032EF114 STP V0, V0, [X31 + 0x30]
	0x032EF118 STP V0, V0, [X31 + 0x10]
	0x032EF11C STR V0, [X31]
	0x032EF120 STR X31, [X19]
	0x032EF124 LDR X0, [X23]
	0x032EF128 LDR W8, [X0 + 0xE0]
	0x032EF12C CBNZ W8, 0x32EF134
	0x032EF130 BL 0x1C16DFC

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 80
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move [X29-72], X8
	017 Move X8, [X8+40]
	018 Move X20, 0x10EF000
	019 Move X19, X0
	020 Move [X29-8], X8
	021 Move W8, [X20+2576]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {58}
	026 Move X0, 0xE31000
	027 Move X0, [X0+3408]
	028 Call 0x1C17CF4
	029 Move X0, 0xE31000
	030 Move X0, [X0+3432]
	031 Call 0x1C17CF4
	032 Move X0, 0xE06000
	033 Move X0, [X0+1448]
	034 Call 0x1C17CF4
	035 Move X0, 0xE31000
	036 Move X0, [X0+744]
	037 Call 0x1C17CF4
	038 Move X0, 0xE3A000
	039 Move X0, [X0+40]
	040 Call 0x1C17CF4
	041 Move X0, 0xE31000
	042 Move X0, [X0+752]
	043 Call 0x1C17CF4
	044 Move X0, 0xE3A000
	045 Move X0, [X0+48]
	046 Call 0x1C17CF4
	047 Move X0, 0xE34000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xE35000
	051 Move X0, [X0+2344]
	052 Call 0x1C17CF4
	053 Move X0, 0xE35000
	054 Move X0, [X0+760]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X20+2576], W8
	058 Move X26, 0xE31000
	059 Move X27, 0xE31000
	060 Move X28, 0xE35000
	061 Move X23, 0xE31000
	062 Move X22, 0xE3A000
	063 Move X26, [X26+3432]
	064 Move X27, [X27+3408]
	065 Move X28, [X28+760]
	066 Move X23, [X23+744]
	067 Move X22, [X22+40]
	068 Subtract X20, X31, 512
	069 Move [X29-48], X31
	070 Move [X29-40], X31
	071 Move [X29-16], X31
	072 Add X31, X20, 0
	073 Move W2, 512
	074 Move X0, X20
	075 Move W1, W31
	076 Move W21, 512
	077 Call 0x3EB2B10
	078 Move X8, -41943040
	079 Move V0, [X8+3008]
	080 Move W25, 0xFFC8
	081 Move W24, W31
	082 Subtract X8, X29, 16
	083 NotImplemented "Instruction MOVK not yet implemented."
	084 Move [X29-32], X20
	085 Move [X29-64], X31
	086 Move [X29-56], X8
	087 Move [X29-24], D0
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move W20, W21
	090 ShiftRight W20, 31
	091 And W20, W20, 0x3FFFFFFF
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X8, 0xE06000
	094 Move X8, [X8+1448]
	095 Move X0, [X8]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Add W1, W21, 1
	101 Move W0, 0xFFC7
	102 NotImplemented "Instruction MOVK not yet implemented."
	103 Move X2, X31
	104 Call Math.Max, X0, X1
	105 Move W20, W0
	106 Move X0, [X26]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move X21, [X27]
	112 Move X0, [X21+32]
	113 Move W8, [X0+309]
	114 Move TEMP, X8
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfEqual {119}
	118 Call 0x1C5D684
	119 Move X8, [X0+192]
	120 Move X0, [X8+8]
	121 Move W8, [X0+309]
	122 Move TEMP, X8
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfEqual {127}
	126 Call 0x1C5D684
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Move X0, [X21+32]
	132 Move W8, [X0+309]
	133 Move TEMP, X8
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfEqual {138}
	137 Call 0x1C5D684
	138 Move X8, [X0+192]
	139 Move X0, [X8+8]
	140 Move W8, [X0+309]
	141 Move TEMP, X8
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfEqual {146}
	145 Call 0x1C5D684
	146 Move X8, [X0+184]
	147 Move X0, [X8]
	148 Compare X0, 0
	149 JumpIfEqual {297}
	150 Move X8, [X0]
	151 Move X9, [X8+376]
	152 Move X2, [X8+384]
	153 Move W1, W20
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Move X1, [X28]
	156 Move X20, X0
	157 Call 0x25FC4C0, X0
	158 Move X3, [X23]
	159 Move X2, X0
	160 Move X4, X1
	161 Subtract X0, X29, 32
	162 Move X1, X2
	163 Move X2, X4
	164 Call 0x25FBF94, X0, X1
	165 NotImplemented "Instruction LDUR not yet implemented."
	166 Compare X8, 0
	167 JumpIfEqual {218}
	168 Move X0, [X26]
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {173}
	172 Call 0x1C17DFC
	173 Move X21, [X27]
	174 Move X0, [X21+32]
	175 Move W8, [X0+309]
	176 Move TEMP, X8
	177 And TEMP, TEMP, 1
	178 Compare TEMP, 1
	179 JumpIfEqual {181}
	180 Call 0x1C5D684
	181 Move X8, [X0+192]
	182 Move X0, [X8+8]
	183 Move W8, [X0+309]
	184 Move TEMP, X8
	185 And TEMP, TEMP, 1
	186 Compare TEMP, 1
	187 JumpIfEqual {189}
	188 Call 0x1C5D684
	189 Move W8, [X0+224]
	190 Compare W8, 0
	191 JumpIfNotEqual {193}
	192 Call 0x1C17DFC
	193 Move X0, [X21+32]
	194 Move W8, [X0+309]
	195 Move TEMP, X8
	196 And TEMP, TEMP, 1
	197 Compare TEMP, 1
	198 JumpIfEqual {200}
	199 Call 0x1C5D684
	200 Move X8, [X0+192]
	201 Move X0, [X8+8]
	202 Move W8, [X0+309]
	203 Move TEMP, X8
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfEqual {208}
	207 Call 0x1C5D684
	208 Move X8, [X0+184]
	209 Move X0, [X8]
	210 Compare X0, 0
	211 JumpIfEqual {298}
	212 Move X8, [X0]
	213 NotImplemented "Instruction LDUR not yet implemented."
	214 Move X9, [X8+392]
	215 Move X3, [X8+400]
	216 Move W2, W31
	217 NotImplemented "Instruction BLR not yet implemented."
	218 Move X1, [X28]
	219 Move [X29-16], X20
	220 Move X0, X20
	221 Call 0x25FC4C0, X0
	222 Move X21, X1
	223 Move [X29-32], X0
	224 Move [X29-24], X1
	225 Move X20, [X22]
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Move X0, X31
	228 Call ThrowHelper.ThrowArgumentOutOfRangeException
	229 NotImplemented "Instruction LDUR not yet implemented."
	230 Move X0, [X20+32]
	231 NotImplemented "Instruction LDUR not yet implemented."
	232 Move W8, [X0+309]
	233 Move TEMP, X8
	234 And TEMP, TEMP, 1
	235 Compare TEMP, 1
	236 JumpIfEqual {238}
	237 Call 0x1C5D684
	238 Compare X19, 0
	239 JumpIfEqual {296}
	240 Move X8, [X19]
	241 Add X1, X20, W24
	242 Subtract W2, W21, W24
	243 Move X9, [X8+872]
	244 Move X3, [X8+880]
	245 Move X0, X19
	246 NotImplemented "Instruction BLR not yet implemented."
	247 Compare W0, 0
	248 JumpIfEqual {251}
	249 NotImplemented "Instruction LDUR not yet implemented."
	250 Add W24, W0, W24
	251 Move X9, 0xE31000
	252 NotImplemented "Instruction LDUR not yet implemented."
	253 Move X9, [X9+752]
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Move X19, [X9]
	256 Move X0, X31
	257 Call ThrowHelper.ThrowArgumentOutOfRangeException
	258 Move X0, [X19+32]
	259 NotImplemented "Instruction LDUR not yet implemented."
	260 Move W8, [X0+309]
	261 Move TEMP, X8
	262 And TEMP, TEMP, 1
	263 Compare TEMP, 1
	264 JumpIfEqual {266}
	265 Call 0x1C5D684
	266 Move X8, 0xE3A000
	267 Move X8, [X8+48]
	268 Move X1, [X8]
	269 Move W8, W24
	270 Move [X29-48], X19
	271 Move [X29-40], X8
	272 Subtract X0, X29, 48
	273 Call 0x31A9580
	274 Move X19, X0
	275 Subtract X0, X29, 64
	276 Call 0x1BB8474
	277 NotImplemented "Instruction LDUR not yet implemented."
	278 Move X8, [X8+40]
	279 NotImplemented "Instruction LDUR not yet implemented."
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Move X0, X19
	282 Add X31, X29, 0
	283 Move X20, [X31+80]
	284 Move X19, [X31+88]
	285 Move X22, [X31+64]
	286 Move X21, [X31+72]
	287 Move X24, [X31+48]
	288 Move X23, [X31+56]
	289 Move X26, [X31+32]
	290 Move X25, [X31+40]
	291 Move X28, [X31+16]
	292 Move X27, [X31+24]
	293 Move X29, [X31+96]
	294 Move X30, [X31+104]
	295 Return X0
	296 Call 0x1C17F20
	297 Call 0x1C17F20
	298 Call 0x1C17F20
	299 Call 0x3EB2B20
	300 Move X19, X0
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Move X0, X19
	303 Call 0x3EB2AD0
	304 Move X8, [X0]
	305 Move [X29-64], X8
	306 Call 0x3EB2AE0
	307 Move X19, X31
	308 Move X19, X0
	309 Subtract X0, X29, 64
	310 Call 0x1BB8474
	311 Move X0, X19
	312 Call 0x1D2D690
	313 Call 0x1991590
	314 Move [X31-80], X30
	315 Move [X31-72], X27
	316 Move [X31+16], X26
	317 Move [X31+24], X25
	318 Move [X31+32], X24
	319 Move [X31+40], X23
	320 Move [X31+48], X22
	321 Move [X31+56], X21
	322 Move [X31+64], X20
	323 Move [X31+72], X19
	324 Move X23, 0x10EF000
	325 Move W8, [X23+2577]
	326 Move W20, W3
	327 Move X21, X2
	328 Move X22, X1
	329 Move X19, X0
	330 Compare W8, 0
	331 JumpIfNotEqual {343}
	332 Move X0, 0xE06000
	333 Move X0, [X0+1448]
	334 Call 0x1C17CF4
	335 Move X0, 0xE35000
	336 Move X0, [X0+32]
	337 Call 0x1C17CF4
	338 Move X0, 0xE35000
	339 Move X0, [X0+40]
	340 Call 0x1C17CF4
	341 Move W8, 1
	342 Move [X23+2577], W8
	343 Move X0, X19
	344 Call StreamWriter.CheckAsyncTaskInProgress, X0
	345 NotImplemented "Instruction CMP not yet implemented."
	346 Move W8, [X19+88]
	347 Move W9, [X19+92]
	348 Subtract W9, W9, W8
	349 NotImplemented "Instruction CMP not yet implemented."
	350 Move X25, [X19+80]
	351 Compare X25, 0
	352 JumpIfEqual {490}
	353 Move X8, 0xE35000
	354 Move X8, [X8+32]
	355 Move X0, X22
	356 Move X1, X21
	357 Move X2, [X8]
	358 Call MemoryMarshal.GetReference, X0
	359 Move X8, [X25+24]
	360 Compare W8, 0
	361 JumpIfEqual {483}
	362 Move W24, [X19+88]
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Move X27, 0xE06000
	365 Move X27, [X27+1448]
	366 Move X22, X0
	367 Add X26, X25, 32
	368 NotImplemented "Instruction CMP not yet implemented."
	369 Move X0, X19
	370 Move W1, W31
	371 Move W2, W31
	372 Call StreamWriter.Flush, X0, X1, X2
	373 Move W24, W31
	374 Move X0, [X27]
	375 Move W8, [X0+224]
	376 Compare W8, 0
	377 JumpIfNotEqual {379}
	378 Call 0x1C17DFC
	379 Move W8, [X25+24]
	380 Move W1, W21
	381 Move X2, X31
	382 Subtract W0, W8, W24
	383 Call Math.Min, X0, X1
	384 Move W8, W0
	385 ShiftRight W8, 31
	386 And W8, W8, 0x3FFFFFFF
	387 Move X2, W8
	388 Move W23, W0
	389 Add X1, X26, W24
	390 Move X0, X22
	391 Move X3, X2
	392 Move X4, X31
	393 Call Buffer.MemoryCopy, X0, X1, X2, X3
	394 Move W8, [X19+88]
	395 Subtract W21, W21, W23
	396 NotImplemented "Instruction CMP not yet implemented."
	397 Add W8, W8, W23
	398 Move [X19+88], W8
	399 Move X8, [X25+24]
	400 Add X22, X22, W23
	401 Add W24, W23, W24
	402 NotImplemented "Instruction CMP not yet implemented."
	403 Move X9, [X19+80]
	404 And X10, X21, 0
	405 Add W24, W8, 1
	406 Compare X9, 0
	407 JumpIfEqual {485}
	408 Move W11, [X9+24]
	409 NotImplemented "Instruction CMP not yet implemented."
	410 NotImplemented "Instruction LDRH not yet implemented."
	411 Add X8, X9, W8
	412 Subtract X10, X10, 1
	413 NotImplemented "Instruction STRH not yet implemented."
	414 Move W8, W24
	415 Move [X19+88], W24
	416 Move TEMP, X20
	417 And TEMP, TEMP, 1
	418 Compare TEMP, 1
	419 JumpIfEqual {425}
	420 Move W24, W8
	421 Move TEMP, X20
	422 And TEMP, TEMP, 1
	423 Compare TEMP, 1
	424 JumpIfNotEqual {454}
	425 Move X20, [X19+24]
	426 Compare X20, 0
	427 JumpIfEqual {484}
	428 Move X8, [X20+24]
	429 NotImplemented "Instruction CMP not yet implemented."
	430 Move X21, X31
	431 And X8, X8, 0
	432 Add X22, X20, 32
	433 Move W9, [X19+92]
	434 NotImplemented "Instruction CMP not yet implemented."
	435 Move X0, X19
	436 Move W1, W31
	437 Move W2, W31
	438 Call StreamWriter.Flush, X0, X1, X2
	439 Move W24, [X19+88]
	440 Move W8, [X20+24]
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Move X9, [X19+80]
	443 Compare X9, 0
	444 JumpIfEqual {484}
	445 Move W10, [X9+24]
	446 NotImplemented "Instruction CMP not yet implemented."
	447 NotImplemented "Instruction LDRH not yet implemented."
	448 Add X21, X21, 1
	449 Add X9, X9, W24
	450 Add W24, W24, 1
	451 NotImplemented "Instruction CMP not yet implemented."
	452 NotImplemented "Instruction STRH not yet implemented."
	453 Move [X19+88], W24
	454 Move W8, [X19+96]
	455 Compare W8, 0
	456 JumpIfEqual {472}
	457 Move X0, X19
	458 Move X20, [X31+64]
	459 Move X19, [X31+72]
	460 Move X22, [X31+48]
	461 Move X21, [X31+56]
	462 Move X24, [X31+32]
	463 Move X23, [X31+40]
	464 Move X26, [X31+16]
	465 Move X25, [X31+24]
	466 Move W1, 1
	467 Move W2, W31
	468 Move X30, [X31+80]
	469 Move X27, [X31+88]
	470 Call StreamWriter.Flush, X0, X1, X2
	471 Return X0
	472 Move X20, [X31+64]
	473 Move X19, [X31+72]
	474 Move X22, [X31+48]
	475 Move X21, [X31+56]
	476 Move X24, [X31+32]
	477 Move X23, [X31+40]
	478 Move X26, [X31+16]
	479 Move X25, [X31+24]
	480 Move X30, [X31+80]
	481 Move X27, [X31+88]
	482 Return X0
	483 Call 0x1C17F28
	484 Call 0x1C17F20
	485 Move [X19+88], W24
	486 Call 0x1C17F20
	487 Add W8, W8, 1
	488 Move [X19+88], W8
	489 Call 0x1C17F28
	490 Move X0, 0xE2E000
	491 Move X0, [X0+1208]
	492 Call 0x1C17D08
	493 Call 0x1C17F10
	494 Move X19, X0
	495 Move X0, 0xE38000
	496 Move X0, [X0+3720]
	497 Call 0x1C17D08
	498 Move X2, X0
	499 Move X0, X19
	500 Move X1, X31
	501 Move X3, X31
	502 Call ObjectDisposedException..ctor, X0, X1, X2
	503 Move X0, 0xE38000
	504 Move X0, [X0+3760]
	505 Call 0x1C17D08
	506 Move X1, X0
	507 Move X0, X19
	508 Call 0x1C17DEC

