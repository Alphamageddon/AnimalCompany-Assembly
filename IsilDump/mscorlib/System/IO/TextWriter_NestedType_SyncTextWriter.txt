Type: System.IO.TextWriter/SyncTextWriter

Method: System.Void .ctor(System.IO.TextWriter t)

Disassembly:
	0x032EB190 LDR X20, [X20 + 0xCC8]
	0x032EB194 CBNZ W8, 0x32EB19C
	0x032EB198 BL 0x1C16DFC
	0x032EB19C LDR X1, [X20]
	0x032EB1A0 MOV X0, X19
	0x032EB1A4 BL 0x2299598
	0x032EB1A8 MOV X19, X0
	0x032EB1AC CBNZ X0, 0x32EB1BC
	0x032EB1B0 MOVZ W0, 0x26
	0x032EB1B4 MOV X1, X31
	0x032EB1B8 BL 0x338F3E0
	0x032EB1BC MOVZ X1, 0x10000
	0x032EB1C0 B 0x32EB270
	0x032EB1C4 ADRP X8, 0xE3B000
	0x032EB1C8 LDR X8, [X8 + 0xD10]
	0x032EB1CC LDR X2, [X8]
	0x032EB1D0 MOV X0, X21
	0x032EB1D4 MOV X1, X20
	0x032EB1D8 BL 0x319DCE0
	0x032EB1DC ADRP X8, 0xE3B000
	0x032EB1E0 LDR X8, [X8 + 0xD08]
	0x032EB1E4 LDR X3, [X8]
	0x032EB1E8 ADD X2, X31, 0x8
	0x032EB1EC BL 0x2218D10
	0x032EB1F0 TBZ X0, 0x0, 0x32EB22C
	0x032EB1F4 ADRP X8, 0xE30000
	0x032EB1F8 LDR X8, [X8 + 0x5B0]
	0x032EB1FC LDR X0, [X8]
	0x032EB200 LDR W8, [X0 + 0xE0]
	0x032EB204 CBNZ W8, 0x32EB20C
	0x032EB208 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10F2000
	006 Move W8, [X21+2535]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE3C000
	014 Move X0, [X0+3696]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2535], W8
	018 Compare X19, 0
	019 JumpIfEqual {41}
	020 Move X8, 0xE3C000
	021 Move X8, [X8+3696]
	022 Move X0, [X8]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X8, [X19]
	028 Move X0, X19
	029 Move X9, [X8+424]
	030 Move X1, [X8+432]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X1, X0
	033 Move X0, X20
	034 Call TextWriter..ctor, X0, X1
	035 Move [X20+48], X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 
	041 Call 0x1C17F20

Method: System.IFormatProvider get_FormatProvider()

Disassembly:
	0x032EB33C STR X8, [X0]
	0x032EB340 ADRP X1, 0xBC9000
	0x032EB344 ADD X1, X1, 0xE58
	0x032EB348 MOV X2, X31
	0x032EB34C BL 0x3EB1B00
	0x032EB350 MOV X19, X0
	0x032EB354 BL 0x3EB1AE0
	0x032EB358 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+424]
	007 Move X1, [X8+432]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.String get_NewLine()

Disassembly:
	0x032EB35C BL 0x1D2C690
	0x032EB360 BL 0x1990590
	0x032EB364 SUB X31, X31, 0x40
	0x032EB368 STP X30, X23, [X31 + 0x10]
	0x032EB36C STP X22, X21, [X31 + 0x20]
	0x032EB370 STP X20, X19, [X31 + 0x30]
	0x032EB374 MOV X19, X0
	0x032EB378 STR X31, [X31 + 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+488]
	007 Move X1, [X8+496]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Void Close()

Disassembly:
	0x032EB37C BL 0x32EA6DC
	0x032EB380 MOV X0, X19
	0x032EB384 BL 0x32EA710
	0x032EB388 ADD X21, X19, 0x48
	0x032EB38C MOV X0, X21
	0x032EB390 MOV X1, X31
	0x032EB394 BL 0x33EB198
	0x032EB398 MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+440]
	007 Move X1, [X8+448]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x032EB39C ADD X0, X19, 0x38
	0x032EB3A0 MOV X1, X31
	0x032EB3A4 BL 0x33EB198
	0x032EB3A8 CMP X20, X0
	0x032EB3AC B.GE 0x32EB428
	0x032EB3B0 ADD X1, X20, 0x1
	0x032EB3B4 MOV X0, X21
	0x032EB3B8 MOV X2, X31
	0x032EB3BC BL 0x33EB18C
	0x032EB3C0 LDR X8, [X19 + 0x28]
	0x032EB3C4 CBZ X8, 0x32EB41C
	0x032EB3C8 MOV X0, X31
	0x032EB3CC STR X31, [X31 + 0x8]
	0x032EB3D0 BL 0x32C5C58
	0x032EB3D4 LDR X0, [X19 + 0x28]
	0x032EB3D8 CBZ X0, 0x32EB444
	0x032EB3DC ADD X1, X31, 0x8
	0x032EB3E0 MOV X2, X31
	0x032EB3E4 BL 0x32BF80C
	0x032EB3E8 LDR X8, [X31 + 0x8]
	0x032EB3EC LDR X9, [X19 + 0x50]
	0x032EB3F0 MOV X21, X31
	0x032EB3F4 MOV W23, W31
	0x032EB3F8 ADD X10, X20, X8
	0x032EB3FC LDRB W22, [X10, X9, LSL]
	0x032EB400 CBZ X8, 0x32EB414
	0x032EB404 LDR X0, [X19 + 0x28]
	0x032EB408 CBZ X0, 0x32EB450
	0x032EB40C MOV X1, X31
	0x032EB410 BL 0x32BFA0C
	0x032EB414 CBNZ X21, 0x32EB448
	0x032EB418 CBZ W23, 0x32EB42C
	0x032EB41C LDR X8, [X19 + 0x30]
	0x032EB420 LDRB W22, [X20, X8, LSL]
	0x032EB424 B 0x32EB42C
	0x032EB428 MOVN W22, 0x0
	0x032EB42C MOV W0, W22
	0x032EB430 LDP X20, X19, [X31 + 0x30]
	0x032EB434 LDP X22, X21, [X31 + 0x20]
	0x032EB438 LDP X30, X23, [X31 + 0x10]
	0x032EB43C ADD X31, X31, 0x40
	0x032EB440 RET
	0x032EB444 BL 0x1C16F20
	0x032EB448 MOV X0, X21
	0x032EB44C BL 0x1C16F18

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10F2000
	006 Move W8, [X21+2536]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE09000
	014 Move X0, [X0+3584]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2536], W8
	018 Move TEMP, X19
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {41}
	022 Move X19, [X20+48]
	023 Compare X19, 0
	024 JumpIfEqual {57}
	025 Move X10, 0xE09000
	026 Move X8, [X19]
	027 Move X10, [X10+3584]
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 Move X1, [X10]
	030 Compare X9, 0
	031 JumpIfEqual {38}
	032 Move X10, [X8+176]
	033 Add X10, X10, 8
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Subtract X9, X9, 1
	037 Add X10, X10, 16
	038 Move X0, X19
	039 Move W2, W31
	040 Call 0x1C5D788
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return 
	046 NotImplemented "Instruction LDRSW not yet implemented."
	047 Add X8, X8, X9
	048 Add X0, X8, 312
	049 Move X2, [X0]
	050 Move X1, [X0+8]
	051 Move X0, X19
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 CallNoReturn X2
	057 Call 0x1C17F20

Method: System.Void Flush()

Disassembly:
	0x032EB450 BL 0x1C16F20
	0x032EB454 CMP W1, 0x1
	0x032EB458 MOV X22, X0
	0x032EB45C B.NE 0x32EB484
	0x032EB460 MOV X0, X22
	0x032EB464 BL 0x3EB1AD0
	0x032EB468 LDR X21, [X0]
	0x032EB46C BL 0x3EB1AE0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+472]
	007 Move X1, [X8+480]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Void Write(System.Char value)

Disassembly:
	0x032EB470 LDR X8, [X31 + 0x8]
	0x032EB474 MOV W22, W31
	0x032EB478 MOVZ W23, 0x1
	0x032EB47C CBNZ X8, 0x32EB404
	0x032EB480 B 0x32EB414
	0x032EB484 MOV X21, X31
	0x032EB488 B 0x32EB490
	0x032EB48C MOV X22, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+504]
	007 Move X2, [X8+512]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Void Write(System.Char[] buffer)

Disassembly:
	0x032EB490 LDR X8, [X31 + 0x8]
	0x032EB494 CBZ X8, 0x32EB4AC
	0x032EB498 LDR X0, [X19 + 0x28]
	0x032EB49C CBNZ X0, 0x32EB4A4
	0x032EB4A0 BL 0x1C16F20
	0x032EB4A4 MOV X1, X31
	0x032EB4A8 BL 0x32BFA0C
	0x032EB4AC CBNZ X21, 0x32EB4B8
	0x032EB4B0 MOV X0, X22

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+520]
	007 Move X2, [X8+528]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Void Write(System.Char[] buffer, System.Int32 index, System.Int32 count)

Disassembly:
	0x032EB4B4 BL 0x1D2C690
	0x032EB4B8 MOV X0, X21
	0x032EB4BC BL 0x1C16F18
	0x032EB4C0 BL 0x1990590
	0x032EB4C4 STP X30, X21, [X31 - 0x20]!
	0x032EB4C8 STP X20, X19, [X31 + 0x10]
	0x032EB4CC MOV W21, W2
	0x032EB4D0 MOV X20, X1
	0x032EB4D4 MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X5, [X8+536]
	007 Move X4, [X8+544]
	008 Move X30, [X31+16]
	009 CallNoReturn X5
	010 Call 0x1C17F20

Method: System.Void Write(System.Int32 value)

Disassembly:
	0x032EB4D8 BL 0x32EA6DC
	0x032EB4DC CMP W21, 0x2
	0x032EB4E0 B.EQ 0x32EB500
	0x032EB4E4 CMP W21, 0x1
	0x032EB4E8 B.EQ 0x32EB51C
	0x032EB4EC CBNZ W21, 0x32EB584
	0x032EB4F0 TBNZ X20, 0x0, 0x32EB554
	0x032EB4F4 ADD X0, X19, 0x48
	0x032EB4F8 MOV X1, X20

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+568]
	007 Move X2, [X8+576]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Void Write(System.String value)

Disassembly:
	0x032EB4FC B 0x32EB538
	0x032EB500 ADD X0, X19, 0x38
	0x032EB504 MOV X1, X31
	0x032EB508 BL 0x33EB198
	0x032EB50C ADDS X1, X0, X20
	0x032EB510 B.MI 0x32EB554
	0x032EB514 ADD X0, X19, 0x48
	0x032EB518 B 0x32EB538
	0x032EB51C ADD X21, X19, 0x48

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+584]
	007 Move X2, [X8+592]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Void WriteLine()

Disassembly:
	0x032EB520 MOV X0, X21
	0x032EB524 MOV X1, X31
	0x032EB528 BL 0x33EB198
	0x032EB52C ADDS X1, X0, X20
	0x032EB530 B.MI 0x32EB554
	0x032EB534 MOV X0, X21
	0x032EB538 MOV X2, X31
	0x032EB53C BL 0x33EB18C
	0x032EB540 ADD X0, X19, 0x48

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+600]
	007 Move X1, [X8+608]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Void WriteLine(System.Int32 value)

Disassembly:
	0x032EB544 LDP X20, X19, [X31 + 0x10]
	0x032EB548 MOV X1, X31
	0x032EB54C LDP X30, X21, [X31], #0x20
	0x032EB550 B 0x33EB198
	0x032EB554 ADRP X0, 0xE36000
	0x032EB558 LDR X0, [X0 + 0x7A8]
	0x032EB55C BL 0x1C16D08
	0x032EB560 BL 0x1C16F10
	0x032EB564 MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+616]
	007 Move X2, [X8+624]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Void WriteLine(System.String value)

Disassembly:
	0x032EB568 ADRP X0, 0xE3B000
	0x032EB56C LDR X0, [X0 + 0xD38]
	0x032EB570 BL 0x1C16D08
	0x032EB574 MOV X1, X0
	0x032EB578 MOV X0, X19
	0x032EB57C BL 0x32E16BC
	0x032EB580 B 0x32EB5B4
	0x032EB584 ADRP X0, 0xE10000
	0x032EB588 LDR X0, [X0 + 0x578]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+632]
	007 Move X2, [X8+640]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

