Type: System.IO.FileSystemInfo

Method: System.Void .ctor()

Disassembly:
	0x032EF138 MOV X0, X22
	0x032EF13C MOV X1, X21
	0x032EF140 MOV X3, X31
	0x032EF144 BL 0x3209D1C
	0x032EF148 TBZ X0, 0x1F, 0x32EF174
	0x032EF14C LDR X0, [X23]
	0x032EF150 LDR W8, [X0 + 0xE0]
	0x032EF154 CBNZ W8, 0x32EF15C
	0x032EF158 BL 0x1C16DFC
	0x032EF15C ADD X2, X31, 0x0
	0x032EF160 MOV X0, X22
	0x032EF164 MOV X1, X21
	0x032EF168 MOV X3, X31
	0x032EF16C BL 0x3209E70
	0x032EF170 TBNZ X0, 0x1F, 0x32EF1A8
	0x032EF174 LDR W8, [X31 + 0x4]
	0x032EF178 CMP W20, 0x4000
	0x032EF17C CSET W9, NE
	0x032EF180 AND W8, W8, 0xF000
	0x032EF184 CMP W8, 0x4000
	0x032EF188 CSET W8, EQ
	0x032EF18C EOR W0, W9, W8, 0x0
	0x032EF190 LDP X20, X19, [X31 + 0xA0]
	0x032EF194 LDP X22, X21, [X31 + 0x90]
	0x032EF198 LDP X24, X23, [X31 + 0x80]
	0x032EF19C LDR X30, [X31 + 0x70]
	0x032EF1A0 ADD X31, X31, 0xB0
	0x032EF1A4 RET
	0x032EF1A8 LDR X0, [X23]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10EE000
	005 Move W8, [X20+2591]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE38000
	012 Move X0, [X0+3984]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2591], W8
	016 Move X0, X19
	017 Move X1, X31
	018 Call MarshalByRefObject..ctor, X0
	019 Compare X19, 0
	020 JumpIfEqual {27}
	021 Move X8, 0xE38000
	022 Move X8, [X8+3984]
	023 Move X9, [X19]
	024 Move X8, [X8]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CSET not yet implemented."
	027 Move W8, W31
	028 Move [X19+140], W8
	029 Move TEMP, 0
	030 Not TEMP
	031 Move W8, TEMP
	032 Move [X19+136], W8
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return 

Method: System.Boolean get_ExistsCore()

Disassembly:
	0x032F0858 MOV X1, X19
	0x032F085C LDP X20, X19, [X31 + 0x20]
	0x032F0860 LDP X22, X21, [X31 + 0x10]
	0x032F0864 LDP X30, X23, [X31], #0x30
	0x032F0868 B 0x32F0964
	0x032F086C ADRP X23, 0xE37000
	0x032F0870 LDR X23, [X23 + 0xD8]
	0x032F0874 LDR X0, [X23]
	0x032F0878 LDR W8, [X0 + 0xE0]
	0x032F087C CBNZ W8, 0x32F0888
	0x032F0880 BL 0x1C16DFC
	0x032F0884 LDR X0, [X23]
	0x032F0888 LDR X8, [X0 + 0xB8]
	0x032F088C LDR X21, [X8 + 0x38]
	0x032F0890 CBNZ X21, 0x32F08E4
	0x032F0894 LDR W8, [X0 + 0xE0]
	0x032F0898 CBNZ W8, 0x32F08A4
	0x032F089C BL 0x1C16DFC
	0x032F08A0 LDR X0, [X23]
	0x032F08A4 ADRP X9, 0xE37000
	0x032F08A8 LDR X8, [X0 + 0xB8]
	0x032F08AC LDR X9, [X9 + 0x148]
	0x032F08B0 LDR X22, [X8]
	0x032F08B4 LDR X0, [X9]
	0x032F08B8 BL 0x1C16F10
	0x032F08BC ADRP X8, 0xE37000
	0x032F08C0 LDR X8, [X8 + 0x150]
	0x032F08C4 MOV X1, X22
	0x032F08C8 MOV X3, X31
	0x032F08CC MOV X21, X0
	0x032F08D0 LDR X2, [X8]
	0x032F08D4 BL 0x2A76D00
	0x032F08D8 LDR X8, [X23]
	0x032F08DC LDR X8, [X8 + 0xB8]
	0x032F08E0 STR X21, [X8 + 0x38]
	0x032F08E4 ADRP X22, 0xE0B000
	0x032F08E8 LDR X22, [X22 + 0x7E8]
	0x032F08EC LDR X0, [X22]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10EA000
	006 Move W8, [X21+1890]
	007 Move X20, [X0+144]
	008 Move X19, X0
	009 Compare W8, 0
	010 JumpIfEqual {18}
	011 Compare X20, 0
	012 JumpIfEqual {25}
	013 Move X0, X20
	014 Move X1, X31
	015 Call String.GetRawStringData, X0
	016 Move W2, [X20+16]
	017 Move X1, X0
	018 Move X0, 0xE2B000
	019 Move X0, [X0+656]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+1890], W8
	023 Compare X20, 0
	024 JumpIfNotEqual {13}
	025 Move X1, X31
	026 Move X2, X31
	027 Move W8, [X19+136]
	028 Add W31, W8, 1
	029 Add X0, X19, 24
	030 Call FileStatus.Refresh, X0, X1
	031 Move W8, [X19+142]
	032 Compare W8, 0
	033 JumpIfEqual {38}
	034 Move W8, [X19+140]
	035 Move W9, [X19+141]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSET not yet implemented."
	038 Move W0, W31
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return X0

Method: System.String get_NormalizedPath()

Disassembly:
	0x032F08F0 LDR W8, [X0 + 0xE0]
	0x032F08F4 CBNZ W8, 0x32F08FC

ISIL:
	001 Move X0, [X0+144]
	002 Return X0

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x032EFA18 BL 0x32A89BC
	0x032EFA1C LDR X0, [X23]
	0x032EFA20 LDR X21, [X20 + 0x90]
	0x032EFA24 MOV X1, X31
	0x032EFA28 BL 0x338C698
	0x032EFA2C LDR X1, [X22]
	0x032EFA30 MOV X3, X0
	0x032EFA34 MOV X0, X19
	0x032EFA38 MOV X2, X21
	0x032EFA3C MOV X4, X31
	0x032EFA40 BL 0x32A89BC
	0x032EFA44 LDR X8, [X20]
	0x032EFA48 MOV X0, X20
	0x032EFA4C LDP X9, X1, [X8 + 0x1C8]
	0x032EFA50 BLR X9
	0x032EFA54 LDR X8, [X23]
	0x032EFA58 MOV X20, X0
	0x032EFA5C MOV X1, X31
	0x032EFA60 MOV X0, X8
	0x032EFA64 BL 0x338C698
	0x032EFA68 LDR X1, [X24]
	0x032EFA6C MOV X3, X0
	0x032EFA70 MOV X0, X19
	0x032EFA74 MOV X2, X20
	0x032EFA78 LDP X20, X19, [X31 + 0x30]
	0x032EFA7C LDP X22, X21, [X31 + 0x20]
	0x032EFA80 LDP X24, X23, [X31 + 0x10]
	0x032EFA84 MOV X4, X31
	0x032EFA88 LDR X30, [X31], #0x40
	0x032EFA8C B 0x32A89BC
	0x032EFA90 BL 0x1C16F20
	0x032EFA94 LDR X0, [X0 + 0x90]
	0x032EFA98 RET
	0x032EFA9C LDR X0, [X0 + 0xA0]
	0x032EFAA0 RET
	0x032EFAA4 STP X30, X19, [X31 - 0x10]!
	0x032EFAA8 BL 0x32EF858
	0x032EFAAC AND W0, W0, 0x1
	0x032EFAB0 LDP X30, X19, [X31], #0x10
	0x032EFAB4 RET
	0x032EFAB8 CMP W1, 0x1
	0x032EFABC MOV X19, X0
	0x032EFAC0 B.NE 0x32EFB20
	0x032EFAC4 MOV X0, X19
	0x032EFAC8 BL 0x3EB1AD0
	0x032EFACC MOV X19, X0
	0x032EFAD0 ADRP X0, 0xE0A000
	0x032EFAD4 LDR X0, [X0 + 0xCC0]
	0x032EFAD8 BL 0x1C16D08
	0x032EFADC LDR X8, [X19]
	0x032EFAE0 LDR X1, [X8]
	0x032EFAE4 BL 0x1C17270
	0x032EFAE8 TBZ X0, 0x0, 0x32EFAF8
	0x032EFAEC BL 0x3EB1AE0
	0x032EFAF0 MOV W0, W31
	0x032EFAF4 B 0x32EFAAC
	0x032EFAF8 MOVZ W0, 0x8
	0x032EFAFC BL 0x3EB1AF0
	0x032EFB00 LDR X8, [X19]
	0x032EFB04 STR X8, [X0]
	0x032EFB08 ADRP X1, 0xBC5000
	0x032EFB0C ADD X1, X1, 0xE58
	0x032EFB10 MOV X2, X31
	0x032EFB14 BL 0x3EB1B00
	0x032EFB18 MOV X19, X0
	0x032EFB1C BL 0x3EB1AE0
	0x032EFB20 MOV X0, X19
	0x032EFB24 BL 0x1D2C690
	0x032EFB28 BL 0x1990590
	0x032EFB2C STR X30, [X31 - 0x20]!
	0x032EFB30 STP X20, X19, [X31 + 0x10]
	0x032EFB34 ADRP X20, 0x10ED000
	0x032EFB38 LDRB W8, [X20 + 0xA22]
	0x032EFB3C MOV X19, X0
	0x032EFB40 TBNZ X8, 0x0, 0x32EFB58
	0x032EFB44 ADRP X0, 0xE06000
	0x032EFB48 LDR X0, [X0 + 0x278]
	0x032EFB4C BL 0x1C16CF4
	0x032EFB50 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x10EE000
	008 Move W8, [X21+2592]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xE2C000
	016 Move X0, [X0+464]
	017 Call 0x1C17CF4
	018 Move X0, 0xE0A000
	019 Move X0, [X0+368]
	020 Call 0x1C17CF4
	021 Move X0, 0xE39000
	022 Move X0, [X0+120]
	023 Call 0x1C17CF4
	024 Move X0, 0xE39000
	025 Move X0, [X0+128]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2592], W8
	029 Move X0, X19
	030 Move X1, X31
	031 Call MarshalByRefObject..ctor, X0
	032 Compare X20, 0
	033 JumpIfEqual {73}
	034 Move X8, 0xE39000
	035 Move X8, [X8+128]
	036 Move X21, 0xE2C000
	037 Move X23, 0xE39000
	038 Move X22, 0xE0A000
	039 Move X1, [X8]
	040 Move X21, [X21+464]
	041 Move X23, [X23+120]
	042 Move X22, [X22+368]
	043 Move X0, X20
	044 Move X2, X31
	045 Call SerializationInfo.GetString, X0, X1
	046 Move X8, [X21]
	047 Move X21, X0
	048 Move W9, [X8+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Move X0, X21
	054 Call Path.GetFullPathInternal, X0
	055 Move [X19+144], X0
	056 Move X1, [X23]
	057 Move X0, X20
	058 Move X2, X31
	059 Call SerializationInfo.GetString, X0, X1
	060 Move [X19+152], X0
	061 Move X1, [X22]
	062 Move X0, X20
	063 Move X2, X31
	064 Call SerializationInfo.GetString, X0, X1
	065 Move [X19+160], X0
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Move X23, [X31+56]
	072 Return 
	073 Move X0, 0xE0A000
	074 Move X0, [X0+1320]
	075 Call 0x1C17D08
	076 Call 0x1C17F10
	077 Move X19, X0
	078 Move X0, 0xE2F000
	079 Move X0, [X0+728]
	080 Call 0x1C17D08
	081 Move X1, X0
	082 Move X0, X19
	083 Move X2, X31
	084 Call ArgumentNullException..ctor, X0, X1
	085 Move X0, 0xE39000
	086 Move X0, [X0+136]
	087 Call 0x1C17D08
	088 Move X1, X0
	089 Move X0, X19
	090 Call 0x1C17DEC

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x032F094C MOVZ W4, 0x80000
	0x032F0950 MOV X3, X31
	0x032F0954 MOV X6, X31
	0x032F0958 LDP X30, X23, [X31], #0x30
	0x032F095C B 0x33F4540
	0x032F0960 BL 0x1C16F20
	0x032F0964 STR X30, [X31 - 0x30]!
	0x032F0968 STP X22, X21, [X31 + 0x10]
	0x032F096C STP X20, X19, [X31 + 0x20]
	0x032F0970 ADRP X22, 0x10EC000
	0x032F0974 ADRP X21, 0xE0B000
	0x032F0978 LDRB W8, [X22 + 0xA32]
	0x032F097C LDR X21, [X21 + 0x7E8]
	0x032F0980 MOV X19, X1
	0x032F0984 MOV X20, X0
	0x032F0988 TBNZ X8, 0x0, 0x32F09A0
	0x032F098C ADRP X0, 0xE0B000
	0x032F0990 LDR X0, [X0 + 0x7E8]
	0x032F0994 BL 0x1C16CF4
	0x032F0998 MOVZ W8, 0x1
	0x032F099C STRB W8, [X22 + 0xA32]
	0x032F09A0 STR X19, [X20 + 0x18]
	0x032F09A4 LDR X0, [X21]
	0x032F09A8 LDR W8, [X0 + 0xE0]
	0x032F09AC CBNZ W8, 0x32F09B4
	0x032F09B0 BL 0x1C16DFC
	0x032F09B4 ADRP X20, 0x10E9000
	0x032F09B8 LDRB W8, [X20 + 0x88D]
	0x032F09BC CBNZ W8, 0x32F09D4
	0x032F09C0 ADRP X0, 0xE0B000
	0x032F09C4 LDR X0, [X0 + 0x7E8]
	0x032F09C8 BL 0x1C16CF4
	0x032F09CC MOVZ W8, 0x1
	0x032F09D0 STRB W8, [X20 + 0x88D]
	0x032F09D4 LDR X0, [X21]
	0x032F09D8 LDR W8, [X0 + 0xE0]
	0x032F09DC CBNZ W8, 0x32F09E8
	0x032F09E0 BL 0x1C16DFC
	0x032F09E4 LDR X0, [X21]
	0x032F09E8 CBZ X19, 0x32F0A14
	0x032F09EC LDR X8, [X0 + 0xB8]
	0x032F09F0 MOV X0, X19
	0x032F09F4 LDP X22, X21, [X31 + 0x10]
	0x032F09F8 MOV W1, W31
	0x032F09FC LDR X8, [X8 + 0x8]
	0x032F0A00 MOV X2, X31
	0x032F0A04 STR X8, [X19 + 0x28]
	0x032F0A08 LDP X20, X19, [X31 + 0x20]
	0x032F0A0C LDR X30, [X31], #0x30
	0x032F0A10 B 0x33F0124
	0x032F0A14 BL 0x1C16F20
	0x032F0A18 SUB X31, X31, 0x30
	0x032F0A1C STP X30, X21, [X31 + 0x10]
	0x032F0A20 STP X20, X19, [X31 + 0x20]
	0x032F0A24 ADRP X21, 0x10EC000
	0x032F0A28 LDRB W8, [X21 + 0xA2B]
	0x032F0A2C MOV X20, X1
	0x032F0A30 MOV X19, X0
	0x032F0A34 TBNZ X8, 0x0, 0x32F0A58
	0x032F0A38 ADRP X0, 0xE32000
	0x032F0A3C LDR X0, [X0 + 0xDC8]
	0x032F0A40 BL 0x1C16CF4
	0x032F0A44 ADRP X0, 0xE32000
	0x032F0A48 LDR X0, [X0 + 0xDD0]
	0x032F0A4C BL 0x1C16CF4
	0x032F0A50 MOVZ W8, 0x1
	0x032F0A54 STRB W8, [X21 + 0xA2B]
	0x032F0A58 STR X31, [X31 + 0x8]
	0x032F0A5C CBZ X20, 0x32F0AF4
	0x032F0A60 LDR X0, [X19 + 0x18]
	0x032F0A64 CBZ X0, 0x32F0AC0
	0x032F0A68 CMP X0, X20
	0x032F0A6C B.NE 0x32F0B28
	0x032F0A70 LDRB W8, [X0 + 0x54]
	0x032F0A74 CBZ W8, 0x32F0AC0
	0x032F0A78 ADRP X8, 0xE32000
	0x032F0A7C LDR X8, [X8 + 0xDD0]
	0x032F0A80 LDR X1, [X8]
	0x032F0A84 BL 0x269D3A4
	0x032F0A88 ADRP X8, 0xE32000
	0x032F0A8C LDR X8, [X8 + 0xDC8]
	0x032F0A90 STR X0, [X31 + 0x8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x10ED000
	009 Move X23, 0xE2C000
	010 Move X21, 0xE04000
	011 Move W8, [X22+2593]
	012 Move X23, [X23+2912]
	013 Move X21, [X21+1728]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {37}
	020 Move X0, 0xE2C000
	021 Move X0, [X0+2912]
	022 Call 0x1C17CF4
	023 Move X0, 0xE04000
	024 Move X0, [X0+1728]
	025 Call 0x1C17CF4
	026 Move X0, 0xE09000
	027 Move X0, [X0+368]
	028 Call 0x1C17CF4
	029 Move X0, 0xE38000
	030 Move X0, [X0+120]
	031 Call 0x1C17CF4
	032 Move X0, 0xE38000
	033 Move X0, [X0+128]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X22+2593], W8
	037 Move X0, [X21]
	038 Move X21, [X20+152]
	039 Move X22, [X23]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X22
	045 Move X1, X31
	046 Call Type.GetTypeFromHandle, X0
	047 Compare X19, 0
	048 JumpIfEqual {95}
	049 Move X8, 0xE38000
	050 Move X8, [X8+120]
	051 Move X22, 0xE38000
	052 Move X24, 0xE09000
	053 Move X3, X0
	054 Move X1, [X8]
	055 Move X22, [X22+128]
	056 Move X24, [X24+368]
	057 Move X0, X19
	058 Move X2, X21
	059 Move X4, X31
	060 Call SerializationInfo.AddValue, X0, X1, X2, X3
	061 Move X0, [X23]
	062 Move X21, [X20+144]
	063 Move X1, X31
	064 Call Type.GetTypeFromHandle, X0
	065 Move X1, [X22]
	066 Move X3, X0
	067 Move X0, X19
	068 Move X2, X21
	069 Move X4, X31
	070 Call SerializationInfo.AddValue, X0, X1, X2, X3
	071 Move X8, [X20]
	072 Move X0, X20
	073 Move X9, [X8+456]
	074 Move X1, [X8+464]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X8, [X23]
	077 Move X20, X0
	078 Move X1, X31
	079 Move X0, X8
	080 Call Type.GetTypeFromHandle, X0
	081 Move X1, [X24]
	082 Move X3, X0
	083 Move X0, X19
	084 Move X2, X20
	085 Move X20, [X31+48]
	086 Move X19, [X31+56]
	087 Move X22, [X31+32]
	088 Move X21, [X31+40]
	089 Move X24, [X31+16]
	090 Move X23, [X31+24]
	091 Move X4, X31
	092 Move X30, [X31+64]
	093 Call SerializationInfo.AddValue, X0, X1, X2, X3
	094 Return 
	095 Call 0x1C17F20

Method: System.String get_FullName()

Disassembly:
	0x032F0A94 LDR X1, [X8]
	0x032F0A98 ADD X0, X31, 0x8

ISIL:
	001 Move X0, [X0+144]
	002 Return X0

Method: System.String get_Name()

Disassembly:
	0x032F0A9C BL 0x26772B8
	0x032F0AA0 MOV W20, W0

ISIL:
	001 Move X0, [X0+160]
	002 Return X0

Method: System.Boolean get_Exists()

Disassembly:
	0x032F0AA4 MOV X0, X19
	0x032F0AA8 BL 0x32F14BC
	0x032F0AAC MOV W0, W20
	0x032F0AB0 LDP X20, X19, [X31 + 0x20]
	0x032F0AB4 LDP X30, X21, [X31 + 0x10]
	0x032F0AB8 ADD X31, X31, 0x30
	0x032F0ABC RET
	0x032F0AC0 ADRP X0, 0xE0B000
	0x032F0AC4 LDR X0, [X0 + 0x578]
	0x032F0AC8 BL 0x1C16D08
	0x032F0ACC BL 0x1C16F10
	0x032F0AD0 MOV X19, X0
	0x032F0AD4 ADRP X0, 0xE37000
	0x032F0AD8 LDR X0, [X0 + 0x158]
	0x032F0ADC BL 0x1C16D08
	0x032F0AE0 MOV X1, X0
	0x032F0AE4 MOV X0, X19
	0x032F0AE8 MOV X2, X31
	0x032F0AEC BL 0x3314A68
	0x032F0AF0 B 0x32F0B58
	0x032F0AF4 ADRP X0, 0xE08000
	0x032F0AF8 LDR X0, [X0 + 0x528]
	0x032F0AFC BL 0x1C16D08
	0x032F0B00 BL 0x1C16F10
	0x032F0B04 MOV X19, X0
	0x032F0B08 ADRP X0, 0xE2E000
	0x032F0B0C LDR X0, [X0 + 0xDD0]
	0x032F0B10 BL 0x1C16D08
	0x032F0B14 MOV X1, X0
	0x032F0B18 MOV X0, X19
	0x032F0B1C MOV X2, X31
	0x032F0B20 BL 0x330E100
	0x032F0B24 B 0x32F0B58
	0x032F0B28 ADRP X0, 0xE03000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Call FileSystemInfo.get_ExistsCore, X0
	004 And W0, W0, 1
	005 Move X30, [X31+16]
	006 Move X19, [X31+24]
	007 Return X0
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X19, X0
	010 Move X0, X19
	011 Call 0x3EB2AD0
	012 Move X19, X0
	013 Move X0, 0xE0A000
	014 Move X0, [X0+3264]
	015 Call 0x1C17D08
	016 Move X8, [X19]
	017 Move X1, [X8]
	018 Call 0x1C18270
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {25}
	023 Call 0x3EB2AE0
	024 Move W0, W31
	025 Move W0, 8
	026 Call 0x3EB2AF0
	027 Move X8, [X19]
	028 Move [X0], X8
	029 Move X1, 0xBC5000
	030 Add X1, X1, 3672
	031 Move X2, X31
	032 Call 0x3EB2B00
	033 Move X19, X0
	034 Call 0x3EB2AE0
	035 Move X0, X19
	036 Call 0x1D2D690
	037 Call 0x1991590

Method: System.String ToString()

Disassembly:
	0x032F0B2C LDR X0, [X0 + 0x5B0]
	0x032F0B30 BL 0x1C16D08
	0x032F0B34 BL 0x1C16F10
	0x032F0B38 MOV X19, X0
	0x032F0B3C ADRP X0, 0xE37000
	0x032F0B40 LDR X0, [X0 + 0x158]
	0x032F0B44 BL 0x1C16D08
	0x032F0B48 MOV X1, X0
	0x032F0B4C MOV X0, X19
	0x032F0B50 MOV X2, X31
	0x032F0B54 BL 0x337DF1C
	0x032F0B58 ADRP X0, 0xE37000
	0x032F0B5C LDR X0, [X0 + 0x160]
	0x032F0B60 BL 0x1C16D08
	0x032F0B64 MOV X1, X0
	0x032F0B68 MOV X0, X19
	0x032F0B6C BL 0x1C16DEC
	0x032F0B70 B 0x32F0B74
	0x032F0B74 MOV X20, X0
	0x032F0B78 CMP W1, 0x1
	0x032F0B7C B.NE 0x32F0BA4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10ED000
	005 Move W8, [X20+2594]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE06000
	012 Move X0, [X0+632]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2594], W8
	016 Move X0, [X19+152]
	017 Compare X0, 0
	018 JumpIfNotEqual {24}
	019 Move X8, 0xE06000
	020 Move X8, [X8+632]
	021 Move X8, [X8]
	022 Move X8, [X8+184]
	023 Move X0, [X8]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return X0

