Type: System.IO.Stream/SynchronousAsyncResult

Method: System.Void .ctor(System.Int32 bytesRead, System.Object asyncStateObject)

Disassembly:
	0x032F33C4 RET
	0x032F33C8 MOV X1, X31
	0x032F33CC B 0x33BDD8C
	0x032F33D0 STR X30, [X31 - 0x20]!
	0x032F33D4 STP X20, X19, [X31 + 0x10]
	0x032F33D8 ADRP X19, 0x10E9000
	0x032F33DC ADRP X20, 0xE2F000
	0x032F33E0 LDRB W8, [X19 + 0xA55]
	0x032F33E4 LDR X20, [X20 + 0xEB0]
	0x032F33E8 TBNZ X8, 0x0, 0x32F3400
	0x032F33EC ADRP X0, 0xE2F000
	0x032F33F0 LDR X0, [X0 + 0xEB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move [X21+52], W20
	011 Move [X21+16], X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: System.Void .ctor(System.Object asyncStateObject)

Disassembly:
	0x032F3690 MOV X2, X8
	0x032F3694 LDR X30, [X31], #0x10
	0x032F3698 BR X3
	0x032F369C BL 0x1C16F20
	0x032F36A0 STP X30, X21, [X31 - 0x20]!
	0x032F36A4 STP X20, X19, [X31 + 0x10]
	0x032F36A8 ADRP X20, 0x10E9000
	0x032F36AC ADRP X19, 0xE01000
	0x032F36B0 LDRB W8, [X20 + 0xA58]
	0x032F36B4 LDR X19, [X19 + 0x7B8]
	0x032F36B8 TBNZ X8, 0x0, 0x32F36DC
	0x032F36BC ADRP X0, 0xE34000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move W8, 1
	009 Move [X20+16], X19
	010 Move [X20+24], W8
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X30, [X31+32]
	014 Return 

Method: System.Void .ctor(System.Exception ex, System.Object asyncStateObject, System.Boolean isWrite)

Disassembly:
	0x032F33F4 BL 0x1C16CF4
	0x032F33F8 MOVZ W8, 0x1
	0x032F33FC STRB W8, [X19 + 0xA55]
	0x032F3400 LDR X0, [X20]
	0x032F3404 BL 0x1C16F10
	0x032F3408 MOVZ W1, 0x1
	0x032F340C MOVZ W2, 0x1
	0x032F3410 MOV X3, X31
	0x032F3414 MOV X19, X0
	0x032F3418 BL 0x33E1550
	0x032F341C MOV X0, X19
	0x032F3420 LDP X20, X19, [X31 + 0x10]
	0x032F3424 LDR X30, [X31], #0x20
	0x032F3428 RET
	0x032F342C STR X30, [X31 - 0x20]!
	0x032F3430 STP X20, X19, [X31 + 0x10]
	0x032F3434 ADRP X20, 0x10E9000
	0x032F3438 LDRB W8, [X20 + 0xA56]
	0x032F343C MOV X19, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X1
	007 Move X1, X31
	008 Move X19, X2
	009 Move X21, X0
	010 And W22, W3, 1
	011 Call Object..ctor, X0
	012 Move X0, X20
	013 Move X1, X31
	014 Call ExceptionDispatchInfo.Capture, X0
	015 Move [X21+40], X0
	016 Move [X21+16], X19
	017 Move [X21+24], W22
	018 Move X20, [X31+32]
	019 Move X19, [X31+40]
	020 Move X22, [X31+16]
	021 Move X21, [X31+24]
	022 Move X30, [X31+48]
	023 Return 

Method: System.Boolean get_IsCompleted()

Disassembly:
	0x032F4194 MOV W1, W31
	0x032F4198 MOV X2, X31

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Threading.WaitHandle get_AsyncWaitHandle()

Disassembly:
	0x032F419C BL 0x33ED3A0
	0x032F41A0 STP X0, X1, [X31 + 0x20]
	0x032F41A4 ADD X0, X31, 0x20
	0x032F41A8 MOV X1, X31
	0x032F41AC BL 0x32C40D4
	0x032F41B0 TBNZ X0, 0x0, 0x32F4218
	0x032F41B4 LDR X19, [X31 + 0x38]
	0x032F41B8 STR W31, [X31 + 0x34]
	0x032F41BC STR W31, [X19]
	0x032F41C0 LDR V0, [X31 + 0x2]
	0x032F41C4 MOV X2, X19
	0x032F41C8 STR V0, [X19 + 0x3]
	0x032F41CC LDR X0, [X21]
	0x032F41D0 LDR W8, [X0 + 0xE0]
	0x032F41D4 CBNZ W8, 0x32F41E0
	0x032F41D8 BL 0x1C16DFC
	0x032F41DC LDR X2, [X31 + 0x38]
	0x032F41E0 ADRP X8, 0xE33000
	0x032F41E4 LDR X8, [X8 + 0x2A0]
	0x032F41E8 ADD X0, X19, 0x8
	0x032F41EC LDR X3, [X8]
	0x032F41F0 ADD X1, X31, 0x20
	0x032F41F4 BL 0x218BF7C
	0x032F41F8 MOVZ W19, 0x4
	0x032F41FC B 0x32F4228
	0x032F4200 LDR V0, [X19 + 0x3]
	0x032F4204 MOVN W8, 0x0
	0x032F4208 STR V0, [X31 + 0x2]
	0x032F420C STP X31, X31, [X19 + 0x30]
	0x032F4210 STR W8, [X31 + 0x34]
	0x032F4214 STR W8, [X19]
	0x032F4218 ADD X0, X31, 0x20
	0x032F421C MOV X1, X31
	0x032F4220 BL 0x32C40F0
	0x032F4224 MOVZ W19, 0x5
	0x032F4228 ADD X0, X31, 0x8
	0x032F422C BL 0x1BB7820
	0x032F4230 CBZ W19, 0x32F423C
	0x032F4234 CMP W19, 0x5
	0x032F4238 B.NE 0x32F4264
	0x032F423C LDR X19, [X31 + 0x38]
	0x032F4240 MOVN W8, 0x1
	0x032F4244 STR W8, [X19], #0x8
	0x032F4248 LDR X0, [X21]
	0x032F424C LDR W8, [X0 + 0xE0]
	0x032F4250 CBNZ W8, 0x32F4258
	0x032F4254 BL 0x1C16DFC
	0x032F4258 MOV X0, X19
	0x032F425C MOV X1, X31
	0x032F4260 BL 0x32C4864
	0x032F4264 LDP X20, X19, [X31 + 0x50]
	0x032F4268 LDP X30, X21, [X31 + 0x40]
	0x032F426C ADD X31, X31, 0x60
	0x032F4270 RET
	0x032F4274 BL 0x1C16F20
	0x032F4278 MOV X20, X1
	0x032F427C MOV X19, X0
	0x032F4280 B 0x32F4298
	0x032F4284 B 0x32F4290
	0x032F4288 B 0x32F4290

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x10E9000
	008 Move X22, 0xE34000
	009 Move W8, [X20+2639]
	010 Move X22, [X22+616]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0xE34000
	017 Move X0, [X0+624]
	018 Call 0x1C17CF4
	019 Move X0, 0xE34000
	020 Move X0, [X0+632]
	021 Call 0x1C17CF4
	022 Move X0, 0xE34000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move X0, 0xE34000
	026 Move X0, [X0+616]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2639], W8
	030 Move X0, [X22]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X22]
	036 Move X8, [X0+184]
	037 Move X23, 0xE34000
	038 Move X20, [X8+8]
	039 Move X23, [X23+632]
	040 Compare X20, 0
	041 JumpIfNotEqual {63}
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X22]
	047 Move X9, 0xE34000
	048 Move X8, [X0+184]
	049 Move X9, [X9+624]
	050 Move X21, [X8]
	051 Move X0, [X9]
	052 Call 0x1C17F10
	053 Move X8, 0xE34000
	054 Move X8, [X8+640]
	055 Move X1, X21
	056 Move X3, X31
	057 Move X20, X0
	058 Move X2, [X8]
	059 Call Func`1<Object>..ctor, X0, X1, X2
	060 Move X8, [X22]
	061 Move X8, [X8+184]
	062 Move [X8+8], X20
	063 Move X2, [X23]
	064 Add X0, X19, 32
	065 Move X1, X20
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Move X23, [X31+56]
	072 Call 0x2213A40, X0, X1
	073 Return X0

Method: System.Object get_AsyncState()

Disassembly:
	0x032F428C B 0x32F4290
	0x032F4290 MOV X19, X0

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Boolean get_CompletedSynchronously()

Disassembly:
	0x032F4294 MOV W20, W1
	0x032F4298 CMP W20, 0x1

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Void ThrowIfError()

Disassembly:
	0x032F429C B.NE 0x32F42C4
	0x032F42A0 MOV X0, X19
	0x032F42A4 BL 0x3EB1AD0
	0x032F42A8 LDR X8, [X0]
	0x032F42AC STR X8, [X31 + 0x8]

ISIL:
	001 Move X0, [X0+40]
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X1, X31
	005 Call ExceptionDispatchInfo.Throw, X0
	006 Return 
	007 Return 

Method: System.Int32 EndRead(System.IAsyncResult asyncResult)

Disassembly:
	0x032F3444 ADRP X0, 0xE2F000
	0x032F3448 LDR X0, [X0 + 0xD10]
	0x032F344C BL 0x1C16CF4
	0x032F3450 MOVZ W8, 0x1
	0x032F3454 STRB W8, [X20 + 0xA56]
	0x032F3458 CBZ X19, 0x32F34B0
	0x032F345C ADRP X9, 0xE2F000
	0x032F3460 LDR X9, [X9 + 0xD10]
	0x032F3464 LDR X8, [X19]
	0x032F3468 LDR X1, [X9]
	0x032F346C LDRB W10, [X8 + 0x130]
	0x032F3470 LDRB W9, [X1 + 0x130]
	0x032F3474 CMP W10, W9
	0x032F3478 B.CC 0x32F34A8
	0x032F347C LDR X10, [X8 + 0xC8]
	0x032F3480 ADD X9, X10, X9, 0x3, LSL
	0x032F3484 LDUR X9, [X9 - 0x8]
	0x032F3488 CMP X9, X1
	0x032F348C B.NE 0x32F34A8
	0x032F3490 LDR X2, [X8 + 0x298]
	0x032F3494 LDR X1, [X8 + 0x2A0]
	0x032F3498 MOV X0, X19
	0x032F349C LDP X20, X19, [X31 + 0x10]
	0x032F34A0 LDR X30, [X31], #0x20
	0x032F34A4 BR X2
	0x032F34A8 MOV X0, X19
	0x032F34AC BL 0x1C171E0
	0x032F34B0 BL 0x1C16F20
	0x032F34B4 STP X30, X21, [X31 - 0x20]!
	0x032F34B8 STP X20, X19, [X31 + 0x10]
	0x032F34BC ADRP X20, 0x10E9000
	0x032F34C0 ADRP X19, 0xE01000
	0x032F34C4 LDRB W8, [X20 + 0xA57]
	0x032F34C8 LDR X19, [X19 + 0x7B8]
	0x032F34CC TBNZ X8, 0x0, 0x32F34F0
	0x032F34D0 ADRP X0, 0xE34000
	0x032F34D4 LDR X0, [X0 + 0x128]
	0x032F34D8 BL 0x1C16CF4
	0x032F34DC ADRP X0, 0xE01000
	0x032F34E0 LDR X0, [X0 + 0x7B8]
	0x032F34E4 BL 0x1C16CF4
	0x032F34E8 MOVZ W8, 0x1
	0x032F34EC STRB W8, [X20 + 0xA57]
	0x032F34F0 LDR X0, [X19]
	0x032F34F4 LDR W8, [X0 + 0xE0]
	0x032F34F8 CBNZ W8, 0x32F3500
	0x032F34FC BL 0x1C16DFC
	0x032F3500 ADRP X20, 0x10E6000
	0x032F3504 LDRB W8, [X20 + 0x88E]
	0x032F3508 CBNZ W8, 0x32F3520
	0x032F350C ADRP X0, 0xE01000
	0x032F3510 LDR X0, [X0 + 0x7B8]
	0x032F3514 BL 0x1C16CF4
	0x032F3518 MOVZ W8, 0x1
	0x032F351C STRB W8, [X20 + 0x88E]
	0x032F3520 LDR X0, [X19]
	0x032F3524 LDR W8, [X0 + 0xE0]
	0x032F3528 CBNZ W8, 0x32F3534

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10EA000
	005 Move W8, [X20+2640]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE35000
	012 Move X0, [X0+520]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2640], W8
	016 Compare X19, 0
	017 JumpIfEqual {41}
	018 Move X8, 0xE35000
	019 Move X8, [X8+520]
	020 Move X9, [X19]
	021 Move X8, [X8]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move W8, [X19+24]
	024 Compare W8, 0
	025 JumpIfNotEqual {41}
	026 Move W8, [X19+48]
	027 Compare W8, 0
	028 JumpIfNotEqual {48}
	029 Move X0, [X19+40]
	030 Move W8, 1
	031 Move [X19+48], W8
	032 Compare X0, 0
	033 JumpIfEqual {36}
	034 Move X1, X31
	035 Call ExceptionDispatchInfo.Throw, X0
	036 Move W0, [X19+52]
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Return X0
	041 Move X0, 0xE09000
	042 Move X0, [X0+1400]
	043 Call 0x1C17D08
	044 Call 0x1C17F10
	045 Move X19, X0
	046 Move X0, 0xE35000
	047 Move X0, [X0+528]
	048 Move X0, 0xE09000
	049 Move X0, [X0+1400]
	050 Call 0x1C17D08
	051 Call 0x1C17F10
	052 Move X19, X0
	053 Move X0, 0xE35000
	054 Move X0, [X0+536]
	055 Call 0x1C17D08
	056 Move X1, X0
	057 Move X0, X19
	058 Move X2, X31
	059 Call ArgumentException..ctor, X0, X1
	060 Move X0, 0xE35000
	061 Move X0, [X0+544]
	062 Call 0x1C17D08
	063 Move X1, X0
	064 Move X0, X19
	065 Call 0x1C17DEC

Method: System.Void EndWrite(System.IAsyncResult asyncResult)

Disassembly:
	0x032F36C4 BL 0x1C16CF4
	0x032F36C8 ADRP X0, 0xE01000
	0x032F36CC LDR X0, [X0 + 0x7B8]
	0x032F36D0 BL 0x1C16CF4
	0x032F36D4 MOVZ W8, 0x1
	0x032F36D8 STRB W8, [X20 + 0xA58]
	0x032F36DC LDR X0, [X19]
	0x032F36E0 LDR W8, [X0 + 0xE0]
	0x032F36E4 CBNZ W8, 0x32F36EC
	0x032F36E8 BL 0x1C16DFC
	0x032F36EC ADRP X20, 0x10E6000
	0x032F36F0 LDRB W8, [X20 + 0x88E]
	0x032F36F4 CBNZ W8, 0x32F370C
	0x032F36F8 ADRP X0, 0xE01000
	0x032F36FC LDR X0, [X0 + 0x7B8]
	0x032F3700 BL 0x1C16CF4
	0x032F3704 MOVZ W8, 0x1
	0x032F3708 STRB W8, [X20 + 0x88E]
	0x032F370C LDR X0, [X19]
	0x032F3710 LDR W8, [X0 + 0xE0]
	0x032F3714 CBNZ W8, 0x32F3720
	0x032F3718 BL 0x1C16DFC
	0x032F371C LDR X0, [X19]
	0x032F3720 BL 0x1C16D0C
	0x032F3724 LDR X21, [X0]
	0x032F3728 CBZ X21, 0x32F3794
	0x032F372C ADRP X8, 0xE34000
	0x032F3730 LDR X8, [X8 + 0x128]
	0x032F3734 LDR X9, [X21]
	0x032F3738 LDR X8, [X8]
	0x032F373C CMP X9, X8
	0x032F3740 B.NE 0x32F3794
	0x032F3744 LDR X0, [X21 + 0x58]
	0x032F3748 CBZ X0, 0x32F37A0
	0x032F374C LDR X8, [X0]
	0x032F3750 LDR X1, [X21 + 0x60]
	0x032F3754 LDP W2, W3, [X21 + 0x68]
	0x032F3758 LDR X9, [X8 + 0x388]
	0x032F375C LDR X4, [X8 + 0x390]
	0x032F3760 BLR X9
	0x032F3764 MOV X19, X31
	0x032F3768 LDRB W8, [X21 + 0x55]
	0x032F376C CBNZ W8, 0x32F377C
	0x032F3770 LDR X0, [X21 + 0x58]
	0x032F3774 CBZ X0, 0x32F37D0
	0x032F3778 BL 0x32F14BC
	0x032F377C STP X31, X31, [X21 + 0x58]
	0x032F3780 CBNZ X19, 0x32F3798
	0x032F3784 LDP X20, X19, [X31 + 0x10]
	0x032F3788 MOV W0, W31
	0x032F378C LDP X30, X21, [X31], #0x20
	0x032F3790 RET
	0x032F3794 BL 0x1C16F20
	0x032F3798 MOV X0, X19
	0x032F379C BL 0x1C16F18
	0x032F37A0 BL 0x1C16F20
	0x032F37A4 MOV X20, X0
	0x032F37A8 B 0x32F37B4
	0x032F37AC MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10EA000
	005 Move W8, [X20+2641]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE35000
	012 Move X0, [X0+520]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2641], W8
	016 Compare X19, 0
	017 JumpIfEqual {44}
	018 Move X8, 0xE35000
	019 Move X8, [X8+520]
	020 Move X9, [X19]
	021 Move X8, [X8]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move W8, [X19+24]
	024 Compare W8, 0
	025 JumpIfEqual {44}
	026 Move W8, [X19+48]
	027 Compare W8, 0
	028 JumpIfNotEqual {51}
	029 Move X0, [X19+40]
	030 Move W8, 1
	031 Move [X19+48], W8
	032 Compare X0, 0
	033 JumpIfEqual {40}
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+32]
	038 Call ExceptionDispatchInfo.Throw, X0
	039 Return 
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Return 
	044 Move X0, 0xE09000
	045 Move X0, [X0+1400]
	046 Call 0x1C17D08
	047 Call 0x1C17F10
	048 Move X19, X0
	049 Move X0, 0xE35000
	050 Move X0, [X0+528]
	051 Move X0, 0xE09000
	052 Move X0, [X0+1400]
	053 Call 0x1C17D08
	054 Call 0x1C17F10
	055 Move X19, X0
	056 Move X0, 0xE35000
	057 Move X0, [X0+552]
	058 Call 0x1C17D08
	059 Move X1, X0
	060 Move X0, X19
	061 Move X2, X31
	062 Call ArgumentException..ctor, X0, X1
	063 Move X0, 0xE35000
	064 Move X0, [X0+560]
	065 Call 0x1C17D08
	066 Move X1, X0
	067 Move X0, X19
	068 Call 0x1C17DEC

