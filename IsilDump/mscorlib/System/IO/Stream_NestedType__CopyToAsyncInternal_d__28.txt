Type: System.IO.Stream/<CopyToAsyncInternal>d__28

Method: System.Void MoveNext()

Disassembly:
	0x032F48F0 ADRP X0, 0xE26000
	0x032F48F4 LDR X0, [X0 + 0x1D0]
	0x032F48F8 BL 0x1C16CF4
	0x032F48FC ADRP X0, 0xE01000
	0x032F4900 LDR X0, [X0 + 0x278]
	0x032F4904 BL 0x1C16CF4
	0x032F4908 ADRP X0, 0xE33000
	0x032F490C LDR X0, [X0 + 0x308]
	0x032F4910 BL 0x1C16CF4
	0x032F4914 MOVZ W8, 0x1
	0x032F4918 STRB W8, [X21 + 0xA60]
	0x032F491C MOV X0, X19
	0x032F4920 MOV X1, X31
	0x032F4924 BL 0x32277A8
	0x032F4928 TBZ X0, 0x0, 0x32F4944
	0x032F492C ADRP X8, 0xE01000
	0x032F4930 LDR X8, [X8 + 0x278]
	0x032F4934 LDR X8, [X8]
	0x032F4938 LDR X8, [X8 + 0xB8]
	0x032F493C LDR X19, [X8]
	0x032F4940 B 0x32F49D8
	0x032F4944 CBZ X19, 0x32F4A08
	0x032F4948 LDR W8, [X19 + 0x10]
	0x032F494C CMP W8, 0x2
	0x032F4950 B.LT 0x32F49D8
	0x032F4954 ADRP X8, 0xE2A000
	0x032F4958 LDR X8, [X8 + 0xD70]
	0x032F495C LDR X0, [X8]
	0x032F4960 LDR W8, [X0 + 0xE0]
	0x032F4964 CBNZ W8, 0x32F496C
	0x032F4968 BL 0x1C16DFC
	0x032F496C MOV X0, X19
	0x032F4970 MOV X1, X31
	0x032F4974 BL 0x32E5968
	0x032F4978 TBZ X20, 0x0, 0x32F49D8
	0x032F497C LDR W8, [X19 + 0x10]
	0x032F4980 MOV X0, X19
	0x032F4984 MOV X2, X31
	0x032F4988 SUB W1, W8, 0x1
	0x032F498C BL 0x3222A1C
	0x032F4990 ADRP X21, 0xE26000
	0x032F4994 LDR X21, [X21 + 0x1D0]
	0x032F4998 MOV W20, W0
	0x032F499C LDR X8, [X21]
	0x032F49A0 LDR W9, [X8 + 0xE0]
	0x032F49A4 CBNZ W9, 0x32F49B0
	0x032F49A8 MOV X0, X8
	0x032F49AC BL 0x1C16DFC
	0x032F49B0 MOV W0, W20
	0x032F49B4 BL 0x32F4A0C
	0x032F49B8 TBZ X0, 0x0, 0x32F49E8
	0x032F49BC ADRP X8, 0xE33000
	0x032F49C0 LDR X8, [X8 + 0x308]
	0x032F49C4 LDP X20, X19, [X31 + 0x10]
	0x032F49C8 MOV X1, X31
	0x032F49CC LDR X0, [X8]
	0x032F49D0 LDP X30, X21, [X31], #0x20
	0x032F49D4 B 0x33BDD84
	0x032F49D8 MOV X0, X19
	0x032F49DC LDP X20, X19, [X31 + 0x10]
	0x032F49E0 LDP X30, X21, [X31], #0x20
	0x032F49E4 RET
	0x032F49E8 LDR X0, [X21]
	0x032F49EC LDR W8, [X0 + 0xE0]
	0x032F49F0 CBNZ W8, 0x32F49F8
	0x032F49F4 BL 0x1C16DFC
	0x032F49F8 MOV X0, X19
	0x032F49FC LDP X20, X19, [X31 + 0x10]
	0x032F4A00 LDP X30, X21, [X31], #0x20
	0x032F4A04 B 0x32EE348
	0x032F4A08 BL 0x1C16F20
	0x032F4A0C STP X30, X21, [X31 - 0x20]!
	0x032F4A10 STP X20, X19, [X31 + 0x10]
	0x032F4A14 ADRP X21, 0x10E8000
	0x032F4A18 ADRP X20, 0xE26000
	0x032F4A1C LDRB W8, [X21 + 0xA9F]
	0x032F4A20 LDR X20, [X20 + 0x1D0]
	0x032F4A24 MOV W19, W0
	0x032F4A28 TBNZ X8, 0x0, 0x32F4A40
	0x032F4A2C ADRP X0, 0xE26000
	0x032F4A30 LDR X0, [X0 + 0x1D0]
	0x032F4A34 BL 0x1C16CF4
	0x032F4A38 MOVZ W8, 0x1
	0x032F4A3C STRB W8, [X21 + 0xA9F]
	0x032F4A40 LDR X0, [X20]
	0x032F4A44 LDR W8, [X0 + 0xE0]
	0x032F4A48 CBNZ W8, 0x32F4A54
	0x032F4A4C BL 0x1C16DFC
	0x032F4A50 LDR X0, [X20]
	0x032F4A54 LDR X8, [X0 + 0xB8]
	0x032F4A58 LDRH W9, [X8 + 0xA]
	0x032F4A5C CMP W9, W19, UXTH
	0x032F4A60 B.NE 0x32F4A6C
	0x032F4A64 MOVZ W0, 0x1
	0x032F4A68 B 0x32F4A8C
	0x032F4A6C LDR W9, [X0 + 0xE0]
	0x032F4A70 CBNZ W9, 0x32F4A80
	0x032F4A74 BL 0x1C16DFC
	0x032F4A78 LDR X8, [X20]
	0x032F4A7C LDR X8, [X8 + 0xB8]
	0x032F4A80 LDRH W8, [X8 + 0x8]
	0x032F4A84 CMP W8, W19, UXTH
	0x032F4A88 CSET W0, EQ
	0x032F4A8C LDP X20, X19, [X31 + 0x10]
	0x032F4A90 LDP X30, X21, [X31], #0x20
	0x032F4A94 RET
	0x032F4A98 STP X30, X21, [X31 - 0x20]!
	0x032F4A9C STP X20, X19, [X31 + 0x10]
	0x032F4AA0 CMP W0, 0x7B
	0x032F4AA4 CSET W9, EQ
	0x032F4AA8 CMP W0, 0xA1
	0x032F4AAC MOV X8, X1
	0x032F4AB0 CSET W10, EQ
	0x032F4AB4 MOV W20, W0
	0x032F4AB8 ORR W1, W9, W10, 0x0
	0x032F4ABC MOV X0, X8
	0x032F4AC0 BL 0x32F48C8
	0x032F4AC4 CMP W20, 0x50
	0x032F4AC8 MOV X19, X0
	0x032F4ACC B.LE 0x32F4B1C
	0x032F4AD0 CMP W20, 0xB7
	0x032F4AD4 B.LE 0x32F4B9C
	0x032F4AD8 CMP W20, 0xCE
	0x032F4ADC B.EQ 0x32F4D34
	0x032F4AE0 CMP W20, 0x3E3
	0x032F4AE4 B.NE 0x32F4CD8
	0x032F4AE8 ADRP X0, 0xE07000
	0x032F4AEC LDR X0, [X0 + 0x8A8]
	0x032F4AF0 BL 0x1C16D08
	0x032F4AF4 BL 0x1C16F10
	0x032F4AF8 MOV X1, X31
	0x032F4AFC MOV X19, X0
	0x032F4B00 BL 0x338C880
	0x032F4B04 ADRP X0, 0xE33000
	0x032F4B08 LDR X0, [X0 + 0x310]
	0x032F4B0C BL 0x1C16D08
	0x032F4B10 MOV X1, X0
	0x032F4B14 MOV X0, X19
	0x032F4B18 BL 0x1C16DEC
	0x032F4B1C CMP W20, 0xF
	0x032F4B20 B.LE 0x32F4C14
	0x032F4B24 CMP W20, 0x20
	0x032F4B28 B.EQ 0x32F4D70
	0x032F4B2C CMP W20, 0x50
	0x032F4B30 B.NE 0x32F4CD8
	0x032F4B34 CBZ X19, 0x32F4DF8
	0x032F4B38 LDR W8, [X19 + 0x10]
	0x032F4B3C CBZ W8, 0x32F4CD8
	0x032F4B40 ADRP X0, 0xDFF000
	0x032F4B44 LDR X0, [X0 + 0x9D0]
	0x032F4B48 BL 0x1C16D08
	0x032F4B4C MOVZ W1, 0x1
	0x032F4B50 BL 0x1C16D6C
	0x032F4B54 MOV X20, X0
	0x032F4B58 BL 0x19903C0
	0x032F4B5C MOV X0, X20
	0x032F4B60 MOV X1, X19
	0x032F4B64 BL 0x19980B4
	0x032F4B68 MOV X0, X20
	0x032F4B6C MOV X1, X31
	0x032F4B70 MOV X2, X19
	0x032F4B74 BL 0x1993444
	0x032F4B78 ADRP X0, 0xE2D000
	0x032F4B7C LDR X0, [X0 + 0x818]
	0x032F4B80 BL 0x1C16D08
	0x032F4B84 MOV X1, X20
	0x032F4B88 MOV X2, X31
	0x032F4B8C BL 0x33BFB40
	0x032F4B90 MOV X19, X0
	0x032F4B94 MOVZ W0, 0x50
	0x032F4B98 B 0x32F4CEC
	0x032F4B9C CMP W20, 0x57
	0x032F4BA0 B.EQ 0x32F4D94
	0x032F4BA4 CMP W20, 0xB7
	0x032F4BA8 B.NE 0x32F4CD8
	0x032F4BAC CBZ X19, 0x32F4DF8
	0x032F4BB0 LDR W8, [X19 + 0x10]
	0x032F4BB4 CBZ W8, 0x32F4CD8
	0x032F4BB8 ADRP X0, 0xDFF000
	0x032F4BBC LDR X0, [X0 + 0x9D0]
	0x032F4BC0 BL 0x1C16D08
	0x032F4BC4 MOVZ W1, 0x1
	0x032F4BC8 BL 0x1C16D6C
	0x032F4BCC MOV X20, X0
	0x032F4BD0 BL 0x19903C0
	0x032F4BD4 MOV X0, X20
	0x032F4BD8 MOV X1, X19
	0x032F4BDC BL 0x19980B4
	0x032F4BE0 MOV X0, X20
	0x032F4BE4 MOV X1, X31
	0x032F4BE8 MOV X2, X19
	0x032F4BEC BL 0x1993444
	0x032F4BF0 ADRP X0, 0xE33000
	0x032F4BF4 LDR X0, [X0 + 0x318]
	0x032F4BF8 BL 0x1C16D08
	0x032F4BFC MOV X1, X20
	0x032F4C00 MOV X2, X31
	0x032F4C04 BL 0x33BFB40
	0x032F4C08 MOV X19, X0
	0x032F4C0C MOVZ W0, 0xB7
	0x032F4C10 B 0x32F4CEC
	0x032F4C14 CMP W20, 0x4
	0x032F4C18 B.GT 0x32F4C50
	0x032F4C1C CMP W20, 0x2
	0x032F4C20 B.EQ 0x32F4DAC
	0x032F4C24 CMP W20, 0x3
	0x032F4C28 B.NE 0x32F4CD8
	0x032F4C2C CBZ X19, 0x32F4DF8
	0x032F4C30 LDR W8, [X19 + 0x10]
	0x032F4C34 CBNZ W8, 0x32F4E78
	0x032F4C38 ADRP X0, 0xE2D000
	0x032F4C3C LDR X0, [X0 + 0x7D8]
	0x032F4C40 BL 0x1C16D08
	0x032F4C44 MOV X1, X31
	0x032F4C48 BL 0x33BDD84
	0x032F4C4C B 0x32F4EC8
	0x032F4C50 CMP W20, 0x5
	0x032F4C54 B.EQ 0x32F4DF4
	0x032F4C58 CMP W20, 0xF
	0x032F4C5C B.NE 0x32F4CD8
	0x032F4C60 ADRP X0, 0xDFF000
	0x032F4C64 LDR X0, [X0 + 0x9D0]
	0x032F4C68 BL 0x1C16D08
	0x032F4C6C MOVZ W1, 0x1
	0x032F4C70 BL 0x1C16D6C
	0x032F4C74 MOV X20, X0
	0x032F4C78 BL 0x19903C0
	0x032F4C7C MOV X0, X20
	0x032F4C80 MOV X1, X19
	0x032F4C84 BL 0x19980B4
	0x032F4C88 MOV X0, X20
	0x032F4C8C MOV X1, X31
	0x032F4C90 MOV X2, X19
	0x032F4C94 BL 0x1993444
	0x032F4C98 ADRP X0, 0xE33000
	0x032F4C9C LDR X0, [X0 + 0x320]
	0x032F4CA0 BL 0x1C16D08
	0x032F4CA4 MOV X1, X20
	0x032F4CA8 MOV X2, X31
	0x032F4CAC BL 0x33BFB40
	0x032F4CB0 MOV X19, X0
	0x032F4CB4 ADRP X0, 0xE33000
	0x032F4CB8 LDR X0, [X0 + 0x328]
	0x032F4CBC BL 0x1C16D08
	0x032F4CC0 BL 0x1C16F10
	0x032F4CC4 MOV X1, X19
	0x032F4CC8 MOV X2, X31
	0x032F4CCC MOV X20, X0
	0x032F4CD0 BL 0x32EC1A0
	0x032F4CD4 B 0x32F4FE0
	0x032F4CD8 MOV W0, W20
	0x032F4CDC MOV X1, X31
	0x032F4CE0 BL 0x3224B84
	0x032F4CE4 MOV X19, X0
	0x032F4CE8 MOV W0, W20
	0x032F4CEC MOV X1, X31
	0x032F4CF0 BL 0x3224BE0
	0x032F4CF4 MOV W20, W0
	0x032F4CF8 ADRP X0, 0xE2D000
	0x032F4CFC LDR X0, [X0 + 0x7A8]
	0x032F4D00 BL 0x1C16D08
	0x032F4D04 BL 0x1C16F10
	0x032F4D08 MOV X1, X19
	0x032F4D0C MOV W2, W20
	0x032F4D10 MOV X3, X31
	0x032F4D14 MOV X21, X0
	0x032F4D18 BL 0x32E2368
	0x032F4D1C ADRP X0, 0xE33000
	0x032F4D20 LDR X0, [X0 + 0x310]
	0x032F4D24 BL 0x1C16D08
	0x032F4D28 MOV X1, X0
	0x032F4D2C MOV X0, X21
	0x032F4D30 BL 0x1C16DEC
	0x032F4D34 ADRP X0, 0xE33000
	0x032F4D38 LDR X0, [X0 + 0x330]
	0x032F4D3C BL 0x1C16D08
	0x032F4D40 MOV X1, X31
	0x032F4D44 BL 0x33BDD84
	0x032F4D48 MOV X19, X0
	0x032F4D4C ADRP X0, 0xE2D000
	0x032F4D50 LDR X0, [X0 + 0x7B0]
	0x032F4D54 BL 0x1C16D08
	0x032F4D58 BL 0x1C16F10
	0x032F4D5C MOV X1, X19
	0x032F4D60 MOV X2, X31
	0x032F4D64 MOV X20, X0
	0x032F4D68 BL 0x32E5A1C
	0x032F4D6C B 0x32F4FE0
	0x032F4D70 CBZ X19, 0x32F4DF8
	0x032F4D74 LDR W8, [X19 + 0x10]
	0x032F4D78 CBNZ W8, 0x32F4E1C
	0x032F4D7C ADRP X0, 0xE2D000
	0x032F4D80 LDR X0, [X0 + 0x7D0]
	0x032F4D84 BL 0x1C16D08
	0x032F4D88 MOV X1, X31
	0x032F4D8C BL 0x33BDD84
	0x032F4D90 B 0x32F4E6C
	0x032F4D94 MOVZ W0, 0x57
	0x032F4D98 MOV X1, X31
	0x032F4D9C BL 0x3224B84
	0x032F4DA0 MOV X19, X0
	0x032F4DA4 MOVZ W0, 0x57
	0x032F4DA8 B 0x32F4CEC
	0x032F4DAC CBZ X19, 0x32F4DF8
	0x032F4DB0 LDR W8, [X19 + 0x10]
	0x032F4DB4 CBNZ W8, 0x32F4EF0
	0x032F4DB8 ADRP X0, 0xE2D000
	0x032F4DBC LDR X0, [X0 + 0x7E8]
	0x032F4DC0 BL 0x1C16D08
	0x032F4DC4 MOV X1, X31
	0x032F4DC8 BL 0x33BDD84
	0x032F4DCC MOV X19, X0
	0x032F4DD0 ADRP X0, 0xE2D000
	0x032F4DD4 LDR X0, [X0 + 0x7A0]
	0x032F4DD8 BL 0x1C16D08
	0x032F4DDC BL 0x1C16F10
	0x032F4DE0 MOV X1, X19
	0x032F4DE4 MOV X2, X31
	0x032F4DE8 MOV X20, X0
	0x032F4DEC BL 0x32E1E68
	0x032F4DF0 B 0x32F4FE0
	0x032F4DF4 CBNZ X19, 0x32F4DFC
	0x032F4DF8 BL 0x1C16F20
	0x032F4DFC LDR W8, [X19 + 0x10]
	0x032F4E00 CBNZ W8, 0x32F4F6C
	0x032F4E04 ADRP X0, 0xE2D000
	0x032F4E08 LDR X0, [X0 + 0x7E0]
	0x032F4E0C BL 0x1C16D08
	0x032F4E10 MOV X1, X31
	0x032F4E14 BL 0x33BDD84
	0x032F4E18 B 0x32F4FBC
	0x032F4E1C ADRP X0, 0xDFF000
	0x032F4E20 LDR X0, [X0 + 0x9D0]
	0x032F4E24 BL 0x1C16D08
	0x032F4E28 MOVZ W1, 0x1
	0x032F4E2C BL 0x1C16D6C
	0x032F4E30 MOV X20, X0
	0x032F4E34 BL 0x19903C0
	0x032F4E38 MOV X0, X20
	0x032F4E3C MOV X1, X19
	0x032F4E40 BL 0x19980B4
	0x032F4E44 MOV X0, X20
	0x032F4E48 MOV X1, X31
	0x032F4E4C MOV X2, X19
	0x032F4E50 BL 0x1993444
	0x032F4E54 ADRP X0, 0xE2D000
	0x032F4E58 LDR X0, [X0 + 0x7C8]
	0x032F4E5C BL 0x1C16D08
	0x032F4E60 MOV X1, X20
	0x032F4E64 MOV X2, X31
	0x032F4E68 BL 0x33BFB40
	0x032F4E6C MOV X19, X0
	0x032F4E70 MOVZ W0, 0x20
	0x032F4E74 B 0x32F4CEC
	0x032F4E78 ADRP X0, 0xDFF000
	0x032F4E7C LDR X0, [X0 + 0x9D0]
	0x032F4E80 BL 0x1C16D08
	0x032F4E84 MOVZ W1, 0x1
	0x032F4E88 BL 0x1C16D6C
	0x032F4E8C MOV X20, X0
	0x032F4E90 BL 0x19903C0
	0x032F4E94 MOV X0, X20
	0x032F4E98 MOV X1, X19
	0x032F4E9C BL 0x19980B4
	0x032F4EA0 MOV X0, X20
	0x032F4EA4 MOV X1, X31
	0x032F4EA8 MOV X2, X19
	0x032F4EAC BL 0x1993444
	0x032F4EB0 ADRP X0, 0xE2D000
	0x032F4EB4 LDR X0, [X0 + 0x810]
	0x032F4EB8 BL 0x1C16D08
	0x032F4EBC MOV X1, X20
	0x032F4EC0 MOV X2, X31
	0x032F4EC4 BL 0x33BFB40
	0x032F4EC8 MOV X19, X0
	0x032F4ECC ADRP X0, 0xE2D000
	0x032F4ED0 LDR X0, [X0 + 0x798]
	0x032F4ED4 BL 0x1C16D08
	0x032F4ED8 BL 0x1C16F10
	0x032F4EDC MOV X1, X19
	0x032F4EE0 MOV X2, X31
	0x032F4EE4 MOV X20, X0
	0x032F4EE8 BL 0x32E16E0
	0x032F4EEC B 0x32F4FE0
	0x032F4EF0 ADRP X0, 0xDFF000
	0x032F4EF4 LDR X0, [X0 + 0x9D0]
	0x032F4EF8 BL 0x1C16D08
	0x032F4EFC MOVZ W1, 0x1
	0x032F4F00 BL 0x1C16D6C
	0x032F4F04 MOV X20, X0
	0x032F4F08 BL 0x19903C0
	0x032F4F0C MOV X0, X20
	0x032F4F10 MOV X1, X19
	0x032F4F14 BL 0x19980B4
	0x032F4F18 MOV X0, X20
	0x032F4F1C MOV X1, X31
	0x032F4F20 MOV X2, X19
	0x032F4F24 BL 0x1993444
	0x032F4F28 ADRP X0, 0xE2D000
	0x032F4F2C LDR X0, [X0 + 0x7C0]
	0x032F4F30 BL 0x1C16D08
	0x032F4F34 MOV X1, X20
	0x032F4F38 MOV X2, X31
	0x032F4F3C BL 0x33BFB40
	0x032F4F40 MOV X20, X0
	0x032F4F44 ADRP X0, 0xE2D000
	0x032F4F48 LDR X0, [X0 + 0x7A0]
	0x032F4F4C BL 0x1C16D08
	0x032F4F50 BL 0x1C16F10
	0x032F4F54 MOV X1, X20
	0x032F4F58 MOV X2, X19
	0x032F4F5C MOV X3, X31
	0x032F4F60 MOV X21, X0
	0x032F4F64 BL 0x32E1E8C
	0x032F4F68 B 0x32F4D1C
	0x032F4F6C ADRP X0, 0xDFF000
	0x032F4F70 LDR X0, [X0 + 0x9D0]
	0x032F4F74 BL 0x1C16D08
	0x032F4F78 MOVZ W1, 0x1
	0x032F4F7C BL 0x1C16D6C
	0x032F4F80 MOV X20, X0
	0x032F4F84 BL 0x19903C0
	0x032F4F88 MOV X0, X20
	0x032F4F8C MOV X1, X19
	0x032F4F90 BL 0x19980B4
	0x032F4F94 MOV X0, X20
	0x032F4F98 MOV X1, X31
	0x032F4F9C MOV X2, X19
	0x032F4FA0 BL 0x1993444
	0x032F4FA4 ADRP X0, 0xE2D000
	0x032F4FA8 LDR X0, [X0 + 0x800]
	0x032F4FAC BL 0x1C16D08
	0x032F4FB0 MOV X1, X20
	0x032F4FB4 MOV X2, X31
	0x032F4FB8 BL 0x33BFB40
	0x032F4FBC MOV X19, X0
	0x032F4FC0 ADRP X0, 0xE2D000
	0x032F4FC4 LDR X0, [X0 + 0x7B8]
	0x032F4FC8 BL 0x1C16D08
	0x032F4FCC BL 0x1C16F10
	0x032F4FD0 MOV X1, X19
	0x032F4FD4 MOV X2, X31
	0x032F4FD8 MOV X20, X0
	0x032F4FDC BL 0x339B6AC
	0x032F4FE0 ADRP X0, 0xE33000
	0x032F4FE4 LDR X0, [X0 + 0x310]
	0x032F4FE8 BL 0x1C16D08
	0x032F4FEC MOV X1, X0
	0x032F4FF0 MOV X0, X20
	0x032F4FF4 BL 0x1C16DEC
	0x032F4FF8 STR X30, [X31 - 0x20]!
	0x032F4FFC STP X20, X19, [X31 + 0x10]
	0x032F5000 ADRP X0, 0xE32000
	0x032F5004 LDR X0, [X0 + 0x338]
	0x032F5008 BL 0x1C16D08
	0x032F500C MOV X1, X31
	0x032F5010 BL 0x33BDD84
	0x032F5014 MOV X19, X0
	0x032F5018 ADRP X0, 0xE27000
	0x032F501C LDR X0, [X0 + 0x4B8]
	0x032F5020 BL 0x1C16D08
	0x032F5024 BL 0x1C16F10
	0x032F5028 MOV X1, X31
	0x032F502C MOV X2, X19
	0x032F5030 MOV X3, X31
	0x032F5034 MOV X20, X0
	0x032F5038 BL 0x338C410
	0x032F503C ADRP X0, 0xE32000
	0x032F5040 LDR X0, [X0 + 0x340]
	0x032F5044 BL 0x1C16D08
	0x032F5048 MOV X1, X0
	0x032F504C MOV X0, X20
	0x032F5050 BL 0x1C16DEC
	0x032F5054 STR X30, [X31 - 0x30]!
	0x032F5058 STP X22, X21, [X31 + 0x10]
	0x032F505C STP X20, X19, [X31 + 0x20]
	0x032F5060 ADRP X21, 0x10E7000
	0x032F5064 ADRP X22, 0xE2D000
	0x032F5068 LDRB W8, [X21 + 0xA61]
	0x032F506C LDR X22, [X22 + 0x828]
	0x032F5070 MOV X19, X1
	0x032F5074 MOV X20, X0
	0x032F5078 TBNZ X8, 0x0, 0x32F5090
	0x032F507C ADRP X0, 0xE2D000
	0x032F5080 LDR X0, [X0 + 0x828]
	0x032F5084 BL 0x1C16CF4
	0x032F5088 MOVZ W8, 0x1
	0x032F508C STRB W8, [X21 + 0xA61]
	0x032F5090 LDR X0, [X22]
	0x032F5094 BL 0x1C16F10
	0x032F5098 MOV X1, X31
	0x032F509C MOV X21, X0
	0x032F50A0 BL 0x323A2E4

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+88], X0
	004 Move [X31+96], X26
	005 Move [X31+104], X25
	006 Move [X31+112], X24
	007 Move [X31+120], X23
	008 Move [X31+128], X22
	009 Move [X31+136], X21
	010 Move [X31+144], X20
	011 Move [X31+152], X19
	012 Move X19, 0x10E9000
	013 Move W8, [X19+2650]
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {57}
	019 Move X0, 0xE2B000
	020 Move X0, [X0+3408]
	021 Call 0x1C17CF4
	022 Move X0, 0xE2B000
	023 Move X0, [X0+3432]
	024 Call 0x1C17CF4
	025 Move X0, 0xE34000
	026 Move X0, [X0+648]
	027 Call 0x1C17CF4
	028 Move X0, 0xE34000
	029 Move X0, [X0+656]
	030 Call 0x1C17CF4
	031 Move X0, 0xE03000
	032 Move X0, [X0+640]
	033 Call 0x1C17CF4
	034 Move X0, 0xE2B000
	035 Move X0, [X0+696]
	036 Call 0x1C17CF4
	037 Move X0, 0xE2B000
	038 Move X0, [X0+704]
	039 Call 0x1C17CF4
	040 Move X0, 0xE2B000
	041 Move X0, [X0+712]
	042 Call 0x1C17CF4
	043 Move X0, 0xE34000
	044 Move X0, [X0+664]
	045 Call 0x1C17CF4
	046 Move X0, 0xE2F000
	047 Move X0, [X0+3744]
	048 Call 0x1C17CF4
	049 Move X0, 0xE2B000
	050 Move X0, [X0+760]
	051 Call 0x1C17CF4
	052 Move X0, 0xE2A000
	053 Move X0, [X0+3648]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X19+2650], W8
	057 Move [X31+48], X31
	058 Move [X31+56], X31
	059 Move [X31+32], X31
	060 Move [X31+40], X31
	061 Move W8, [X20]
	062 Move [X31+76], W8
	063 Move X19, [X20+40]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X8, 0xE2B000
	066 Move X8, [X8+3432]
	067 Move X0, [X8]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X8, 0xE2B000
	073 Move X8, [X8+3408]
	074 Move X20, [X8]
	075 Move X0, [X20+32]
	076 Move W8, [X0+309]
	077 Move TEMP, X8
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {82}
	081 Call 0x1C5D684
	082 Move X8, [X0+192]
	083 Move X0, [X8+8]
	084 Move W8, [X0+309]
	085 Move TEMP, X8
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfEqual {90}
	089 Call 0x1C5D684
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move X0, [X20+32]
	095 Move W8, [X0+309]
	096 Move TEMP, X8
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {101}
	100 Call 0x1C5D684
	101 Move X8, [X0+192]
	102 Move X0, [X8+8]
	103 Move W8, [X0+309]
	104 Move TEMP, X8
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfEqual {109}
	108 Call 0x1C5D684
	109 Move X8, [X0+184]
	110 Move X0, [X8]
	111 Compare X0, 0
	112 JumpIfEqual {156}
	113 Move X8, [X31+88]
	114 Move X9, [X0]
	115 Move W1, [X8+32]
	116 Move X8, [X9+376]
	117 Move X2, [X9+384]
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move X20, [X31+88]
	120 Move [X20+64], X0
	121 Move W8, [X31+76]
	122 Move X24, 0xE2A000
	123 Move X23, 0xE03000
	124 Add X9, X31, 76
	125 Add X10, X31, 88
	126 Move X25, 0xE01000
	127 Move X24, [X24+3648]
	128 Move X23, [X23+640]
	129 Move X25, [X25+1976]
	130 Move [X31+8], X31
	131 Move [X31+16], X9
	132 Move [X31+24], X10
	133 Move X26, 0xE2F000
	134 Move X26, [X26+3752]
	135 Compare W8, 0
	136 JumpIfEqual {147}
	137 NotImplemented "Instruction CMP not yet implemented."
	138 NotImplemented "Instruction LDUR not yet implemented."
	139 Move TEMP, 0
	140 Not TEMP
	141 Move W8, TEMP
	142 Move [X31+2], V0
	143 Move [X20+88], X31
	144 Move [X20+96], X31
	145 Move [X31+76], W8
	146 Move [X20], W8
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 Move TEMP, 0
	149 Not TEMP
	150 Move W8, TEMP
	151 Move [X31+3], V0
	152 Move [X20+72], X31
	153 Move [X20+80], X31
	154 Move [X31+76], W8
	155 Move [X20], W8
	156 Call 0x1C17F20
	157 Move X8, [X31+88]
	158 Move X1, [X8+64]
	159 Compare X1, 0
	160 JumpIfEqual {326}
	161 Move X9, [X1+24]
	162 Move X2, X9
	163 ShiftRight X2, 32
	164 And X2, X2, 0x7FFFFFFF
	165 Compare X19, 0
	166 JumpIfEqual {329}
	167 Move X9, [X19]
	168 Move X3, [X8+48]
	169 Move X8, [X9+744]
	170 Move X4, [X9+752]
	171 Move X0, X19
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move X8, 0xE2B000
	174 Move X8, [X8+760]
	175 Move X20, X0
	176 Move X21, X1
	177 Move X22, [X8]
	178 Move X0, [X22+32]
	179 Add X8, X0, 309
	180 NotImplemented "Instruction LDRH not yet implemented."
	181 Move TEMP, X8
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfEqual {189}
	185 Call 0x1C5D684
	186 Move X0, [X22+32]
	187 Add X8, X0, 309
	188 NotImplemented "Instruction LDRH not yet implemented."
	189 Move TEMP, X8
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfEqual {194}
	193 Call 0x1C5D684
	194 Move X8, 0xE2B000
	195 Move X8, [X8+696]
	196 Move X8, [X8]
	197 Move X0, [X8+32]
	198 Move W8, [X0+309]
	199 Move TEMP, X8
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfEqual {204}
	203 Call 0x1C5D684
	204 Move X8, 0xE2B000
	205 Move X8, [X8+712]
	206 And X9, X21, 0xFFFF
	207 Move [X31+48], X20
	208 Move [X31+56], X9
	209 Move X8, [X8]
	210 Move X0, [X8+32]
	211 Move W8, [X0+309]
	212 Move TEMP, X8
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfEqual {217}
	216 Call 0x1C5D684
	217 Move X8, [X0+192]
	218 Move X1, [X8+16]
	219 Add X0, X31, 48
	220 Call 0x27A3398
	221 Move TEMP, X0
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfNotEqual {438}
	225 Move X8, 0xE2B000
	226 Move X8, [X8+704]
	227 Move X8, [X8]
	228 Move X0, [X8+32]
	229 Move W8, [X0+309]
	230 Move TEMP, X8
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfEqual {235}
	234 Call 0x1C5D684
	235 Move X8, [X0+192]
	236 Move X1, [X8+32]
	237 Add X0, X31, 48
	238 Call 0x27A34B4
	239 Move W22, W0
	240 Compare W0, 0
	241 JumpIfEqual {437}
	242 Move X8, [X31+88]
	243 Move X20, [X8+56]
	244 Move X21, [X8+64]
	245 Compare X21, 0
	246 JumpIfEqual {330}
	247 Move W8, [X21+24]
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move X0, X31
	250 Call ThrowHelper.ThrowArgumentOutOfRangeException
	251 Move X2, X22
	252 ShiftRight X2, 32
	253 And X2, X2, 0x7FFFFFFF
	254 Compare X20, 0
	255 JumpIfEqual {336}
	256 Move X8, [X31+88]
	257 Move X9, [X20]
	258 Move X3, [X8+48]
	259 Move X8, [X9+808]
	260 Move X4, [X9+816]
	261 Move X0, X20
	262 Move X1, X21
	263 NotImplemented "Instruction BLR not yet implemented."
	264 Move X20, X0
	265 Move X0, [X24]
	266 Move X21, X1
	267 Move W8, [X0+224]
	268 Compare W8, 0
	269 JumpIfNotEqual {271}
	270 Call 0x1C17DFC
	271 Move X22, 0x10E9000
	272 Move W8, [X22+2340]
	273 And X9, X21, 0xFFFF
	274 Move [X31+32], X20
	275 Move [X31+40], X9
	276 Compare W8, 0
	277 JumpIfNotEqual {283}
	278 Move X0, 0xE2A000
	279 Move X0, [X0+3648]
	280 Call 0x1C17CF4
	281 Move W8, 1
	282 Move [X22+2340], W8
	283 Move X0, [X24]
	284 Move W8, [X0+224]
	285 Compare W8, 0
	286 JumpIfNotEqual {288}
	287 Call 0x1C17DFC
	288 Move X20, 0x10E9000
	289 Move W8, [X20+1252]
	290 Compare W8, 0
	291 JumpIfNotEqual {300}
	292 Move X0, 0xE2F000
	293 Move X0, [X0+3752]
	294 Call 0x1C17CF4
	295 Move X0, 0xE01000
	296 Move X0, [X0+1976]
	297 Call 0x1C17CF4
	298 Move W8, 1
	299 Move [X20+1252], W8
	300 Move X20, [X31+32]
	301 Compare X20, 0
	302 JumpIfEqual {347}
	303 Move X8, [X20]
	304 Move X9, [X25]
	305 Move W11, [X8+304]
	306 Move W10, [X9+304]
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Move X11, [X8+200]
	309 Add X10, X11, X10
	310 NotImplemented "Instruction LDUR not yet implemented."
	311 NotImplemented "Instruction CMP not yet implemented."
	312 NotImplemented "Instruction LDRH not yet implemented."
	313 NotImplemented "Instruction LDRH not yet implemented."
	314 Move X1, [X26]
	315 Compare X9, 0
	316 JumpIfEqual {323}
	317 Move X10, [X8+176]
	318 Add X10, X10, 8
	319 NotImplemented "Instruction LDUR not yet implemented."
	320 NotImplemented "Instruction CMP not yet implemented."
	321 Subtract X9, X9, 1
	322 Add X10, X10, 16
	323 Move X0, X20
	324 Move W2, W31
	325 Call 0x1C5D788
	326 Move X2, X31
	327 Compare X19, 0
	328 JumpIfNotEqual {167}
	329 Call 0x1C17F20
	330 Move X0, X31
	331 Call ThrowHelper.ThrowArgumentOutOfRangeException
	332 Move X21, X31
	333 Move X2, X31
	334 Compare X20, 0
	335 JumpIfNotEqual {256}
	336 Call 0x1C17F20
	337 NotImplemented "Instruction LDRSW not yet implemented."
	338 Add X8, X8, X9
	339 Add X0, X8, 312
	340 Move X8, [X0]
	341 Move X2, [X0+8]
	342 Move X0, X20
	343 Move W1, W21
	344 NotImplemented "Instruction BLR not yet implemented."
	345 Compare W0, 0
	346 JumpIfEqual {418}
	347 Move X20, 0x10E9000
	348 Move W8, [X20+2341]
	349 Compare W8, 0
	350 JumpIfNotEqual {356}
	351 Move X0, 0xE2A000
	352 Move X0, [X0+3648]
	353 Call 0x1C17CF4
	354 Move W8, 1
	355 Move [X20+2341], W8
	356 Move X0, [X24]
	357 Move W8, [X0+224]
	358 Compare W8, 0
	359 JumpIfNotEqual {361}
	360 Call 0x1C17DFC
	361 Move X20, 0x10E9000
	362 Move W8, [X20+1254]
	363 Compare W8, 0
	364 JumpIfNotEqual {373}
	365 Move X0, 0xE2F000
	366 Move X0, [X0+3752]
	367 Call 0x1C17CF4
	368 Move X0, 0xE01000
	369 Move X0, [X0+1976]
	370 Call 0x1C17CF4
	371 Move W8, 1
	372 Move [X20+1254], W8
	373 Move X20, [X31+32]
	374 Compare X20, 0
	375 JumpIfEqual {157}
	376 Move X8, [X20]
	377 Move X9, [X25]
	378 Move W11, [X8+304]
	379 Move W10, [X9+304]
	380 NotImplemented "Instruction CMP not yet implemented."
	381 Move X11, [X8+200]
	382 Add X10, X11, X10
	383 NotImplemented "Instruction LDUR not yet implemented."
	384 NotImplemented "Instruction CMP not yet implemented."
	385 NotImplemented "Instruction LDRH not yet implemented."
	386 NotImplemented "Instruction LDRH not yet implemented."
	387 Move X1, [X26]
	388 Compare X9, 0
	389 JumpIfEqual {396}
	390 Move X10, [X8+176]
	391 Add X10, X10, 8
	392 NotImplemented "Instruction LDUR not yet implemented."
	393 NotImplemented "Instruction CMP not yet implemented."
	394 Subtract X9, X9, 1
	395 Add X10, X10, 16
	396 Move W2, 2
	397 Move X0, X20
	398 Call 0x1C5D788
	399 Move W9, [X10]
	400 Add W9, W9, 2
	401 Add X8, X8, W9
	402 Add X0, X8, 312
	403 Move X8, [X0]
	404 Move X2, [X0+8]
	405 Move X0, X20
	406 Move W1, W21
	407 NotImplemented "Instruction BLR not yet implemented."
	408 Move X0, X20
	409 Move X1, X31
	410 Call TaskAwaiter.ValidateEnd, X0
	411 Move X0, X20
	412 Move X1, X31
	413 Call Task.get_IsCompleted, X0
	414 Move TEMP, X0
	415 And TEMP, TEMP, 1
	416 Compare TEMP, 1
	417 JumpIfEqual {347}
	418 Move X19, [X31+88]
	419 Move W8, 1
	420 Move [X31+76], W8
	421 Move [X19], W8
	422 Move V0, [X31+2]
	423 Move X2, X19
	424 Move [X19+88], V0
	425 Move X0, [X23]
	426 Move W8, [X0+224]
	427 Compare W8, 0
	428 JumpIfNotEqual {431}
	429 Call 0x1C17DFC
	430 Move X2, [X31+88]
	431 Move X8, 0xE34000
	432 Move X8, [X8+648]
	433 Add X0, X19, 8
	434 Move X3, [X8]
	435 Add X1, X31, 32
	436 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	437 Move W19, 10
	438 Move X19, [X31+88]
	439 Move [X31+76], W31
	440 Move [X19], W31
	441 Move V0, [X31+3]
	442 Move X2, X19
	443 Move [X19+72], V0
	444 Move X0, [X23]
	445 Move W8, [X0+224]
	446 Compare W8, 0
	447 JumpIfNotEqual {450}
	448 Call 0x1C17DFC
	449 Move X2, [X31+88]
	450 Move X8, 0xE34000
	451 Move X8, [X8+656]
	452 Add X0, X19, 8
	453 Move X3, [X8]
	454 Add X1, X31, 48
	455 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	456 Move W19, 7
	457 Add X0, X31, 8
	458 Call 0x1BB873C
	459 Compare W19, 0
	460 JumpIfEqual {462}
	461 NotImplemented "Instruction CMP not yet implemented."
	462 Move X8, [X31+88]
	463 Move TEMP, 1
	464 Not TEMP
	465 Move W9, TEMP
	466 Move [X8], W9
	467 Move [X8+64], X31
	468 Move X0, [X23]
	469 Add X19, X8, 8
	470 Move W9, [X0+224]
	471 Compare W9, 0
	472 JumpIfNotEqual {474}
	473 Call 0x1C17DFC
	474 Move X0, X19
	475 Move X1, X31
	476 Call AsyncTaskMethodBuilder.SetResult, X0
	477 Move X20, [X31+144]
	478 Move X19, [X31+152]
	479 Move X22, [X31+128]
	480 Move X21, [X31+136]
	481 Move X24, [X31+112]
	482 Move X23, [X31+120]
	483 Move X26, [X31+96]
	484 Move X25, [X31+104]
	485 Move X30, [X31+80]
	486 Add X31, X31, 160
	487 Return 
	488 Move X20, X1
	489 Move X19, X0
	490 Move X19, X0
	491 NotImplemented "Instruction CMP not yet implemented."
	492 Move X0, X19
	493 Call 0x3EB2AD0
	494 Move X8, [X0]
	495 Move [X31+8], X8
	496 Call 0x3EB2AE0
	497 Move W19, W31
	498 Move X20, X1
	499 Add X0, X31, 8
	500 Call 0x1BB873C
	501 NotImplemented "Instruction CMP not yet implemented."
	502 Move X0, X19
	503 Call 0x3EB2AD0
	504 Move X19, X0
	505 Move X0, 0xDFF000
	506 Move X0, [X0+2000]
	507 Call 0x1C17D08
	508 Move X8, [X19]
	509 Move X1, [X8]
	510 Call 0x1C18270
	511 Move TEMP, X0
	512 And TEMP, TEMP, 1
	513 Compare TEMP, 1
	514 JumpIfNotEqual {535}
	515 Move X19, [X19]
	516 Call 0x3EB2AE0
	517 Move X8, [X31+88]
	518 Move TEMP, 1
	519 Not TEMP
	520 Move W9, TEMP
	521 Move X0, 0xE02000
	522 Move [X8], W9
	523 Move [X8+64], X31
	524 Move X0, [X0+640]
	525 Add X20, X8, 8
	526 Call 0x1C17D08
	527 Move W8, [X0+224]
	528 Compare W8, 0
	529 JumpIfNotEqual {531}
	530 Call 0x1C17DFC
	531 Move X0, X20
	532 Move X1, X19
	533 Move X2, X31
	534 Call AsyncTaskMethodBuilder.SetException, X0, X1
	535 Move W0, 8
	536 Call 0x3EB2AF0
	537 Move X8, [X19]
	538 Move [X0], X8
	539 Move X1, 0xBC0000
	540 Add X1, X1, 3672
	541 Move X2, X31
	542 Call 0x3EB2B00
	543 Move X20, X1
	544 Move X19, X0
	545 Move X19, X0
	546 Call 0x3EB2AE0
	547 Move X0, X19
	548 Call 0x1D2D690
	549 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x032F50A4 MOV X0, X20
	0x032F50A8 MOV X1, X19
	0x032F50AC MOV X2, X21
	0x032F50B0 LDP X20, X19, [X31 + 0x20]
	0x032F50B4 LDP X22, X21, [X31 + 0x10]
	0x032F50B8 MOV W3, W31
	0x032F50BC LDR X30, [X31], #0x30
	0x032F50C0 B 0x32F50C4
	0x032F50C4 STP X30, X23, [X31 - 0x30]!
	0x032F50C8 STP X22, X21, [X31 + 0x10]
	0x032F50CC STP X20, X19, [X31 + 0x20]
	0x032F50D0 ADRP X23, 0x10E7000
	0x032F50D4 LDRB W8, [X23 + 0xA62]
	0x032F50D8 MOV W20, W3
	0x032F50DC MOV X21, X2
	0x032F50E0 MOV X22, X1
	0x032F50E4 MOV X19, X0
	0x032F50E8 TBNZ X8, 0x0, 0x32F5124
	0x032F50EC ADRP X0, 0xDFE000
	0x032F50F0 LDR X0, [X0 + 0x618]
	0x032F50F4 BL 0x1C16CF4
	0x032F50F8 ADRP X0, 0xE31000
	0x032F50FC LDR X0, [X0 + 0xCB8]
	0x032F5100 BL 0x1C16CF4
	0x032F5104 ADRP X0, 0xDFE000
	0x032F5108 LDR X0, [X0 + 0x6C0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10E8000
	007 Move X22, 0xE02000
	008 Move W8, [X21+2651]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE02000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2651], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

