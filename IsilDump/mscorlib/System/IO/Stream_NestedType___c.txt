Type: System.IO.Stream/<>c

Method: System.Void .cctor()

Disassembly:
	0x032F436C BL 0x3EB1B00
	0x032F4370 MOV X19, X0
	0x032F4374 BL 0x3EB1AE0
	0x032F4378 MOV X0, X19
	0x032F437C BL 0x1D2C690
	0x032F4380 BL 0x1990590
	0x032F4384 STR X30, [X31 - 0x30]!
	0x032F4388 STP X22, X21, [X31 + 0x10]
	0x032F438C STP X20, X19, [X31 + 0x20]
	0x032F4390 ADRP X21, 0x10E8000
	0x032F4394 ADRP X22, 0xE02000
	0x032F4398 LDRB W8, [X21 + 0xA5D]
	0x032F439C LDR X22, [X22 + 0x280]
	0x032F43A0 MOV X19, X1
	0x032F43A4 MOV X20, X0
	0x032F43A8 TBNZ X8, 0x0, 0x32F43C0
	0x032F43AC ADRP X0, 0xE02000
	0x032F43B0 LDR X0, [X0 + 0x280]
	0x032F43B4 BL 0x1C16CF4
	0x032F43B8 MOVZ W8, 0x1
	0x032F43BC STRB W8, [X21 + 0xA5D]
	0x032F43C0 LDR X0, [X22]
	0x032F43C4 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x10E9000
	005 Move X20, 0xE34000
	006 Move W8, [X19+2644]
	007 Move X20, [X20+216]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE34000
	013 Move X0, [X0+216]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2644], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x032F43C8 CBNZ W8, 0x32F43D0
	0x032F43CC BL 0x1C16DFC

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Threading.SemaphoreSlim <EnsureAsyncActiveSemaphoreInitialized>b__4_0()

Disassembly:
	0x032F43D0 ADD X0, X20, 0x8
	0x032F43D4 MOV X1, X19
	0x032F43D8 LDP X20, X19, [X31 + 0x20]
	0x032F43DC LDP X22, X21, [X31 + 0x10]
	0x032F43E0 MOV X2, X31
	0x032F43E4 LDR X30, [X31], #0x30
	0x032F43E8 B 0x32C477C
	0x032F43EC SUB X31, X31, 0x80
	0x032F43F0 STP X30, X0, [X31 + 0x60]
	0x032F43F4 STP X20, X19, [X31 + 0x70]
	0x032F43F8 ADRP X20, 0x10E8000
	0x032F43FC LDRB W8, [X20 + 0xA5E]
	0x032F4400 MOV X19, X0
	0x032F4404 TBNZ X8, 0x0, 0x32F4494
	0x032F4408 ADRP X0, 0xE2A000
	0x032F440C LDR X0, [X0 + 0xD50]
	0x032F4410 BL 0x1C16CF4
	0x032F4414 ADRP X0, 0xE2A000
	0x032F4418 LDR X0, [X0 + 0xD68]
	0x032F441C BL 0x1C16CF4
	0x032F4420 ADRP X0, 0xE33000
	0x032F4424 LDR X0, [X0 + 0x2A8]
	0x032F4428 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x10E9000
	005 Move X20, 0xE2F000
	006 Move W8, [X19+2645]
	007 Move X20, [X20+3760]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE2F000
	013 Move X0, [X0+3760]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2645], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move W1, 1
	020 Move W2, 1
	021 Move X3, X31
	022 Move X19, X0
	023 Call SemaphoreSlim..ctor, X0, X1, X2
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void <FlushAsync>b__37_0(System.Object state)

Disassembly:
	0x032F442C ADRP X0, 0xE33000
	0x032F4430 LDR X0, [X0 + 0x2B0]
	0x032F4434 BL 0x1C16CF4
	0x032F4438 ADRP X0, 0xE33000
	0x032F443C LDR X0, [X0 + 0x2B8]
	0x032F4440 BL 0x1C16CF4
	0x032F4444 ADRP X0, 0xE33000
	0x032F4448 LDR X0, [X0 + 0x2C0]
	0x032F444C BL 0x1C16CF4
	0x032F4450 ADRP X0, 0xE33000
	0x032F4454 LDR X0, [X0 + 0x2C8]
	0x032F4458 BL 0x1C16CF4
	0x032F445C ADRP X0, 0xE2A000
	0x032F4460 LDR X0, [X0 + 0x2E0]
	0x032F4464 BL 0x1C16CF4
	0x032F4468 ADRP X0, 0xE2A000
	0x032F446C LDR X0, [X0 + 0x2E8]
	0x032F4470 BL 0x1C16CF4
	0x032F4474 ADRP X0, 0xE2E000
	0x032F4478 LDR X0, [X0 + 0xE60]
	0x032F447C BL 0x1C16CF4
	0x032F4480 ADRP X0, 0xE33000
	0x032F4484 LDR X0, [X0 + 0x2D0]
	0x032F4488 BL 0x1C16CF4
	0x032F448C MOVZ W8, 0x1
	0x032F4490 STRB W8, [X20 + 0xA5E]
	0x032F4494 STP X31, X31, [X31 + 0x40]
	0x032F4498 STP X31, X31, [X31 + 0x30]
	0x032F449C STR W31, [X31 + 0x28]
	0x032F44A0 LDR W9, [X19]
	0x032F44A4 ADD X8, X31, 0x5C
	0x032F44A8 ADD X10, X31, 0x68
	0x032F44AC STP X31, X8, [X31 + 0x8]
	0x032F44B0 STR W9, [X31 + 0x5C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10E9000
	005 Move W8, [X20+2646]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE2F000
	012 Move X0, [X0+3344]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2646], W8
	016 Compare X19, 0
	017 JumpIfEqual {38}
	018 Move X9, 0xE2F000
	019 Move X9, [X9+3344]
	020 Move X8, [X19]
	021 Move X1, [X9]
	022 Move W10, [X8+304]
	023 Move W9, [X1+304]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X10, [X8+200]
	026 Add X9, X10, X9
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X2, [X8+664]
	030 Move X1, [X8+672]
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 CallNoReturn X2
	036 Move X0, X19
	037 Call 0x1C181E0
	038 Call 0x1C17F20

Method: System.Int32 <BeginReadInternal>b__40_0(System.Object <p0>)

Disassembly:
	0x032F44B4 STR X10, [X31 + 0x18]
	0x032F44B8 CBZ W9, 0x32F4530
	0x032F44BC LDR X0, [X19 + 0x28]
	0x032F44C0 CBZ X0, 0x32F4664
	0x032F44C4 ADRP X8, 0xE33000
	0x032F44C8 LDR X8, [X8 + 0x2D0]
	0x032F44CC LDR X2, [X8]
	0x032F44D0 MOV W1, W31
	0x032F44D4 BL 0x269D3A8
	0x032F44D8 ADRP X8, 0xE33000
	0x032F44DC LDR X8, [X8 + 0x2C8]
	0x032F44E0 STP X0, X1, [X31 + 0x40]
	0x032F44E4 LDR X8, [X8]
	0x032F44E8 ADD X0, X31, 0x40
	0x032F44EC MOV X1, X8
	0x032F44F0 BL 0x2998978
	0x032F44F4 TBNZ X0, 0x0, 0x32F4548
	0x032F44F8 LDR X2, [X31 + 0x68]
	0x032F44FC STR W31, [X31 + 0x5C]
	0x032F4500 ADRP X8, 0xE33000
	0x032F4504 STR W31, [X2]
	0x032F4508 LDR V0, [X31 + 0x4]
	0x032F450C ADD X0, X2, 0x8
	0x032F4510 STUR V0, [X2 + 0x48]
	0x032F4514 LDR X8, [X8 + 0x2A8]
	0x032F4518 LDR X3, [X8]
	0x032F451C ADD X1, X31, 0x40
	0x032F4520 BL 0x212D994
	0x032F4524 MOV W19, W31
	0x032F4528 MOVZ W20, 0x4
	0x032F452C B 0x32F45E8
	0x032F4530 LDUR V0, [X19 + 0x48]
	0x032F4534 MOVN W8, 0x0
	0x032F4538 STR V0, [X31 + 0x4]
	0x032F453C STP X31, X31, [X19 + 0x48]
	0x032F4540 STR W8, [X31 + 0x5C]
	0x032F4544 STR W8, [X19]
	0x032F4548 ADRP X8, 0xE33000
	0x032F454C LDR X8, [X8 + 0x2C0]
	0x032F4550 LDR X1, [X8]
	0x032F4554 ADD X0, X31, 0x40
	0x032F4558 BL 0x29989C4
	0x032F455C LDR X8, [X31 + 0x68]
	0x032F4560 MOV W19, W0
	0x032F4564 LDR X20, [X8 + 0x30]
	0x032F4568 CBZ X20, 0x32F458C
	0x032F456C LDR W8, [X20 + 0x18]
	0x032F4570 CMP W19, W8
	0x032F4574 B.LS 0x32F4580
	0x032F4578 MOV X0, X31
	0x032F457C BL 0x339D6EC
	0x032F4580 ADD X9, X20, 0x20
	0x032F4584 MOV W8, W19
	0x032F4588 B 0x32F45A0
	0x032F458C CBZ W19, 0x32F4598
	0x032F4590 MOV X0, X31
	0x032F4594 BL 0x339D6EC
	0x032F4598 MOV X9, X31
	0x032F459C MOV W8, W31
	0x032F45A0 ADRP X10, 0xE2A000
	0x032F45A4 LDR X10, [X10 + 0x2E0]
	0x032F45A8 STR X9, [X31 + 0x30]
	0x032F45AC LDR X9, [X31 + 0x68]
	0x032F45B0 STP W8, W31, [X31 + 0x38]
	0x032F45B4 LDR X1, [X10]
	0x032F45B8 ADD X0, X9, 0x38
	0x032F45BC BL 0x2984784
	0x032F45C0 ADRP X8, 0xE2A000
	0x032F45C4 LDR X8, [X8 + 0x2E8]
	0x032F45C8 MOV X2, X0
	0x032F45CC MOV X4, X1
	0x032F45D0 LDR X3, [X8]
	0x032F45D4 ADD X0, X31, 0x30
	0x032F45D8 MOV X1, X2
	0x032F45DC MOV X2, X4
	0x032F45E0 BL 0x25FAF94
	0x032F45E4 MOVZ W20, 0x5
	0x032F45E8 ADD X0, X31, 0x8
	0x032F45EC BL 0x1BB7904
	0x032F45F0 CBZ W20, 0x32F4620
	0x032F45F4 CMP W20, 0x5
	0x032F45F8 B.NE 0x32F4654
	0x032F45FC LDR X0, [X31 + 0x68]
	0x032F4600 MOVN W8, 0x1
	0x032F4604 MOV W1, W19
	0x032F4608 STR W8, [X0], #0x8
	0x032F460C ADRP X8, 0xE33000
	0x032F4610 LDR X8, [X8 + 0x2B0]
	0x032F4614 LDR X2, [X8]
	0x032F4618 BL 0x263D044
	0x032F461C B 0x32F4654
	0x032F4620 MOVN X8, 0x0
	0x032F4624 LDR X19, [X31 + 0x68]
	0x032F4628 ADD X9, X31, 0x20
	0x032F462C LDR X20, [X9, X8, LSL #3]
	0x032F4630 MOVN W8, 0x1
	0x032F4634 STR W8, [X19], #0x8
	0x032F4638 ADRP X0, 0xE33000
	0x032F463C LDR X0, [X0 + 0x2D8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x10E9000
	006 Move X19, 0xE01000
	007 Move W8, [X20+2647]
	008 Move X19, [X19+1976]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xE34000
	014 Move X0, [X0+296]
	015 Call 0x1C17CF4
	016 Move X0, 0xE01000
	017 Move X0, [X0+1976]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2647], W8
	021 Move X0, [X19]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X20, 0x10E6000
	027 Move W8, [X20+2190]
	028 Compare W8, 0
	029 JumpIfNotEqual {35}
	030 Move X0, 0xE01000
	031 Move X0, [X0+1976]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+2190], W8
	035 Move X0, [X19]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X19]
	041 Call 0x1C17D0C
	042 Move X21, [X0]
	043 Compare X21, 0
	044 JumpIfEqual {79}
	045 Move X8, 0xE34000
	046 Move X8, [X8+296]
	047 Move X9, [X21]
	048 Move X8, [X8]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, [X21+88]
	051 Compare X0, 0
	052 JumpIfEqual {82}
	053 Move X8, [X0]
	054 Move X1, [X21+96]
	055 Move W2, [X21+104]
	056 Move W3, [X21+108]
	057 Move X9, [X8+856]
	058 Move X4, [X8+864]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move W20, W0
	061 Move X19, X31
	062 Move W8, [X21+85]
	063 Compare W8, 0
	064 JumpIfNotEqual {69}
	065 Move X0, [X21+88]
	066 Compare X0, 0
	067 JumpIfEqual {94}
	068 Call Stream.FinishTrackingAsyncOperation, X0
	069 Move [X21+88], X31
	070 Move [X21+96], X31
	071 Compare X19, 0
	072 JumpIfNotEqual {80}
	073 Move W0, W20
	074 Move X20, [X31+16]
	075 Move X19, [X31+24]
	076 Move X30, [X31+32]
	077 Move X21, [X31+40]
	078 Return X0
	079 Call 0x1C17F20
	080 Move X0, X19
	081 Call 0x1C17F18
	082 Call 0x1C17F20
	083 Move X20, X0
	084 Move X20, X0
	085 Move X21, X31
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X0, X20
	088 Call 0x3EB2AD0
	089 Move X19, [X0]
	090 Call 0x3EB2AE0
	091 Compare X21, 0
	092 JumpIfEqual {94}
	093 Move W20, W31
	094 Call 0x1C17F20
	095 Move X19, X31
	096 Move X20, X0
	097 Compare X21, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17F20
	100 Move W8, [X21+85]
	101 Compare W8, 0
	102 JumpIfNotEqual {108}
	103 Move X0, [X21+88]
	104 Compare X0, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17F20
	107 Call Stream.FinishTrackingAsyncOperation, X0
	108 Move [X21+88], X31
	109 Move [X21+96], X31
	110 Compare X19, 0
	111 JumpIfNotEqual {114}
	112 Move X0, X20
	113 Call 0x1D2D690
	114 Move X0, X19
	115 Call 0x1C17F18
	116 Call 0x1991590

Method: System.IAsyncResult <BeginEndReadAsync>b__45_0(System.IO.Stream stream, System.IO.Stream/ReadWriteParameters args, System.AsyncCallback callback, System.Object state)

Disassembly:
	0x032F4640 BL 0x1C16D08
	0x032F4644 MOV X2, X0
	0x032F4648 MOV X0, X19
	0x032F464C MOV X1, X20
	0x032F4650 BL 0x263D0D4
	0x032F4654 LDP X20, X19, [X31 + 0x70]
	0x032F4658 LDR X30, [X31 + 0x60]
	0x032F465C ADD X31, X31, 0x80
	0x032F4660 RET
	0x032F4664 BL 0x1C16F20
	0x032F4668 B 0x32F468C
	0x032F466C MOV X20, X1
	0x032F4670 MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {16}
	004 Move X8, [X1]
	005 Move X0, X1
	006 Move X1, X2
	007 Move W2, W3
	008 Move X7, [X8+696]
	009 Move X6, [X8+704]
	010 Move X8, X3
	011 ShiftRight X8, 32
	012 And X8, X8, 0x7FFFFFFF
	013 Move W3, W8
	014 Move X30, [X31+16]
	015 CallNoReturn X7
	016 Call 0x1C17F20

Method: System.Int32 <BeginEndReadAsync>b__45_1(System.IO.Stream stream, System.IAsyncResult asyncResult)

Disassembly:
	0x032F4674 B 0x32F4694
	0x032F4678 B 0x32F468C
	0x032F467C B 0x32F468C
	0x032F4680 B 0x32F468C
	0x032F4684 B 0x32F468C
	0x032F4688 B 0x32F468C
	0x032F468C MOV X19, X0
	0x032F4690 MOV W20, W1
	0x032F4694 CMP W20, 0x1
	0x032F4698 B.NE 0x32F46C4
	0x032F469C MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {12}
	004 Move X8, [X1]
	005 Move X0, X1
	006 Move X1, X2
	007 Move X3, [X8+712]
	008 Move X8, [X8+720]
	009 Move X2, X8
	010 Move X30, [X31+16]
	011 CallNoReturn X3
	012 Call 0x1C17F20

Method: System.Int32 <BeginWriteInternal>b__48_0(System.Object <p0>)

Disassembly:
	0x032F46A0 BL 0x3EB1AD0
	0x032F46A4 LDR X8, [X0]
	0x032F46A8 STR X8, [X31 + 0x8]
	0x032F46AC BL 0x3EB1AE0
	0x032F46B0 MOV W20, W31
	0x032F46B4 MOV W19, W31
	0x032F46B8 B 0x32F45E8
	0x032F46BC MOV X19, X0
	0x032F46C0 MOV W20, W1
	0x032F46C4 ADD X0, X31, 0x8
	0x032F46C8 BL 0x1BB7904
	0x032F46CC MOVZ W8, 0x1
	0x032F46D0 B 0x32F46E0
	0x032F46D4 MOV X19, X0
	0x032F46D8 MOVZ W8, 0x1
	0x032F46DC MOV W20, W1
	0x032F46E0 CMP W20, W8
	0x032F46E4 B.NE 0x32F4754
	0x032F46E8 MOV X0, X19
	0x032F46EC BL 0x3EB1AD0
	0x032F46F0 MOV X19, X0
	0x032F46F4 ADRP X0, 0xDFF000
	0x032F46F8 LDR X0, [X0 + 0x7D0]
	0x032F46FC BL 0x1C16D08
	0x032F4700 LDR X8, [X19]
	0x032F4704 LDR X1, [X8]
	0x032F4708 BL 0x1C17270
	0x032F470C TBZ X0, 0x0, 0x32F472C
	0x032F4710 LDR X8, [X19]
	0x032F4714 MOVZ W9, 0x1
	0x032F4718 STR W9, [X31 + 0x28]
	0x032F471C STR X8, [X31 + 0x20]
	0x032F4720 BL 0x3EB1AE0
	0x032F4724 MOV X8, X31
	0x032F4728 B 0x32F4624
	0x032F472C MOVZ W0, 0x8
	0x032F4730 BL 0x3EB1AF0
	0x032F4734 LDR X8, [X19]
	0x032F4738 STR X8, [X0]
	0x032F473C ADRP X1, 0xBC0000
	0x032F4740 ADD X1, X1, 0xE58
	0x032F4744 MOV X2, X31
	0x032F4748 BL 0x3EB1B00
	0x032F474C MOV X19, X0
	0x032F4750 BL 0x3EB1AE0
	0x032F4754 MOV X0, X19
	0x032F4758 BL 0x1D2C690
	0x032F475C BL 0x1990590
	0x032F4760 STR X30, [X31 - 0x30]!
	0x032F4764 STP X22, X21, [X31 + 0x10]
	0x032F4768 STP X20, X19, [X31 + 0x20]
	0x032F476C ADRP X22, 0x10E8000
	0x032F4770 ADRP X21, 0xE33000
	0x032F4774 LDRB W8, [X22 + 0xA5F]
	0x032F4778 LDR X21, [X21 + 0x2E0]
	0x032F477C MOV X19, X1
	0x032F4780 MOV X20, X0
	0x032F4784 TBNZ X8, 0x0, 0x32F479C
	0x032F4788 ADRP X0, 0xE33000
	0x032F478C LDR X0, [X0 + 0x2E0]
	0x032F4790 BL 0x1C16CF4
	0x032F4794 MOVZ W8, 0x1
	0x032F4798 STRB W8, [X22 + 0xA5F]
	0x032F479C LDR X2, [X21]
	0x032F47A0 ADD X0, X20, 0x8
	0x032F47A4 MOV X1, X19
	0x032F47A8 LDP X20, X19, [X31 + 0x20]
	0x032F47AC LDP X22, X21, [X31 + 0x10]
	0x032F47B0 LDR X30, [X31], #0x30
	0x032F47B4 B 0x263CFD0
	0x032F47B8 STR X30, [X31 - 0x20]!
	0x032F47BC STP X20, X19, [X31 + 0x10]
	0x032F47C0 ADRP X0, 0xE32000
	0x032F47C4 LDR X0, [X0 + 0xBF0]
	0x032F47C8 BL 0x1C16D08
	0x032F47CC MOV X1, X31
	0x032F47D0 BL 0x33BDD84
	0x032F47D4 MOV X19, X0
	0x032F47D8 ADRP X0, 0xE31000
	0x032F47DC LDR X0, [X0 + 0x3D8]
	0x032F47E0 BL 0x1C16D08
	0x032F47E4 BL 0x1C16F10
	0x032F47E8 MOV X1, X19
	0x032F47EC MOV X2, X31
	0x032F47F0 MOV X20, X0
	0x032F47F4 BL 0x32E1770
	0x032F47F8 ADRP X0, 0xE33000
	0x032F47FC LDR X0, [X0 + 0x2E8]
	0x032F4800 BL 0x1C16D08
	0x032F4804 MOV X1, X0
	0x032F4808 MOV X0, X20
	0x032F480C BL 0x1C16DEC
	0x032F4810 STR X30, [X31 - 0x20]!
	0x032F4814 STP X20, X19, [X31 + 0x10]
	0x032F4818 ADRP X0, 0xE33000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x10E9000
	006 Move X19, 0xE01000
	007 Move W8, [X20+2648]
	008 Move X19, [X19+1976]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xE34000
	014 Move X0, [X0+296]
	015 Call 0x1C17CF4
	016 Move X0, 0xE01000
	017 Move X0, [X0+1976]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2648], W8
	021 Move X0, [X19]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X20, 0x10E6000
	027 Move W8, [X20+2190]
	028 Compare W8, 0
	029 JumpIfNotEqual {35}
	030 Move X0, 0xE01000
	031 Move X0, [X0+1976]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+2190], W8
	035 Move X0, [X19]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X19]
	041 Call 0x1C17D0C
	042 Move X21, [X0]
	043 Compare X21, 0
	044 JumpIfEqual {78}
	045 Move X8, 0xE34000
	046 Move X8, [X8+296]
	047 Move X9, [X21]
	048 Move X8, [X8]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, [X21+88]
	051 Compare X0, 0
	052 JumpIfEqual {81}
	053 Move X8, [X0]
	054 Move X1, [X21+96]
	055 Move W2, [X21+104]
	056 Move W3, [X21+108]
	057 Move X9, [X8+904]
	058 Move X4, [X8+912]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X19, X31
	061 Move W8, [X21+85]
	062 Compare W8, 0
	063 JumpIfNotEqual {68}
	064 Move X0, [X21+88]
	065 Compare X0, 0
	066 JumpIfEqual {92}
	067 Call Stream.FinishTrackingAsyncOperation, X0
	068 Move [X21+88], X31
	069 Move [X21+96], X31
	070 Compare X19, 0
	071 JumpIfNotEqual {79}
	072 Move X20, [X31+16]
	073 Move X19, [X31+24]
	074 Move W0, W31
	075 Move X30, [X31+32]
	076 Move X21, [X31+40]
	077 Return X0
	078 Call 0x1C17F20
	079 Move X0, X19
	080 Call 0x1C17F18
	081 Call 0x1C17F20
	082 Move X20, X0
	083 Move X20, X0
	084 Move X21, X31
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X0, X20
	087 Call 0x3EB2AD0
	088 Move X19, [X0]
	089 Call 0x3EB2AE0
	090 Compare X21, 0
	091 JumpIfNotEqual {61}
	092 Call 0x1C17F20
	093 Move X19, X31
	094 Move X20, X0
	095 Compare X21, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17F20
	098 Move W8, [X21+85]
	099 Compare W8, 0
	100 JumpIfNotEqual {106}
	101 Move X0, [X21+88]
	102 Compare X0, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17F20
	105 Call Stream.FinishTrackingAsyncOperation, X0
	106 Move [X21+88], X31
	107 Move [X21+96], X31
	108 Compare X19, 0
	109 JumpIfNotEqual {112}
	110 Move X0, X20
	111 Call 0x1D2D690
	112 Move X0, X19
	113 Call 0x1C17F18
	114 Call 0x1991590

Method: System.Void <RunReadWriteTaskWhenReady>b__49_0(System.Threading.Tasks.Task t, System.Object state)

Disassembly:
	0x032F481C LDR X0, [X0 + 0x2F0]
	0x032F4820 BL 0x1C16D08
	0x032F4824 MOV X1, X31
	0x032F4828 BL 0x33BDD84
	0x032F482C MOV X19, X0
	0x032F4830 ADRP X0, 0xE28000
	0x032F4834 LDR X0, [X0 + 0x4B8]
	0x032F4838 BL 0x1C16D08
	0x032F483C BL 0x1C16F10
	0x032F4840 MOV X1, X31
	0x032F4844 MOV X2, X19
	0x032F4848 MOV X3, X31
	0x032F484C MOV X20, X0
	0x032F4850 BL 0x338C410
	0x032F4854 ADRP X0, 0xE33000
	0x032F4858 LDR X0, [X0 + 0x2F8]
	0x032F485C BL 0x1C16D08
	0x032F4860 MOV X1, X0
	0x032F4864 MOV X0, X20
	0x032F4868 BL 0x1C16DEC
	0x032F486C STR X30, [X31 - 0x20]!
	0x032F4870 STP X20, X19, [X31 + 0x10]
	0x032F4874 ADRP X0, 0xE32000
	0x032F4878 LDR X0, [X0 + 0xE20]
	0x032F487C BL 0x1C16D08
	0x032F4880 MOV X1, X31
	0x032F4884 BL 0x33BDD84

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10E9000
	005 Move W8, [X20+2649]
	006 Move X19, X2
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE34000
	012 Move X0, [X0+296]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2649], W8
	016 Compare X19, 0
	017 JumpIfEqual {32}
	018 Move X8, 0xE34000
	019 Move X8, [X8+296]
	020 Move X1, [X8]
	021 Move X8, [X19]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X0, [X19+88]
	024 Compare X0, 0
	025 JumpIfEqual {32}
	026 Move X1, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Call Stream.RunReadWriteTask, X0, X1
	031 Return 
	032 Call 0x1C17F20
	033 Move X0, X19
	034 Call 0x1C181E0

Method: System.IAsyncResult <BeginEndWriteAsync>b__58_0(System.IO.Stream stream, System.IO.Stream/ReadWriteParameters args, System.AsyncCallback callback, System.Object state)

Disassembly:
	0x032F4888 MOV X19, X0
	0x032F488C ADRP X0, 0xE28000
	0x032F4890 LDR X0, [X0 + 0x4B8]
	0x032F4894 BL 0x1C16D08
	0x032F4898 BL 0x1C16F10
	0x032F489C MOV X1, X31
	0x032F48A0 MOV X2, X19
	0x032F48A4 MOV X3, X31
	0x032F48A8 MOV X20, X0
	0x032F48AC BL 0x338C410
	0x032F48B0 ADRP X0, 0xE33000
	0x032F48B4 LDR X0, [X0 + 0x300]
	0x032F48B8 BL 0x1C16D08

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {16}
	004 Move X8, [X1]
	005 Move X0, X1
	006 Move X1, X2
	007 Move W2, W3
	008 Move X7, [X8+760]
	009 Move X6, [X8+768]
	010 Move X8, X3
	011 ShiftRight X8, 32
	012 And X8, X8, 0x7FFFFFFF
	013 Move W3, W8
	014 Move X30, [X31+16]
	015 CallNoReturn X7
	016 Call 0x1C17F20

Method: System.Threading.Tasks.VoidTaskResult <BeginEndWriteAsync>b__58_1(System.IO.Stream stream, System.IAsyncResult asyncResult)

Disassembly:
	0x032F48BC MOV X1, X0
	0x032F48C0 MOV X0, X20
	0x032F48C4 BL 0x1C16DEC
	0x032F48C8 STP X30, X21, [X31 - 0x20]!
	0x032F48CC STP X20, X19, [X31 + 0x10]
	0x032F48D0 ADRP X21, 0x10E8000
	0x032F48D4 LDRB W8, [X21 + 0xA60]
	0x032F48D8 MOV W20, W1
	0x032F48DC MOV X19, X0
	0x032F48E0 TBNZ X8, 0x0, 0x32F491C
	0x032F48E4 ADRP X0, 0xE2A000
	0x032F48E8 LDR X0, [X0 + 0xD70]
	0x032F48EC BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {14}
	004 Move X8, [X1]
	005 Move X0, X1
	006 Move X1, X2
	007 Move X9, [X8+776]
	008 Move X8, [X8+784]
	009 Move X2, X8
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move X0, X31
	012 Move X30, [X31+16]
	013 Return X0
	014 Call 0x1C17F20

