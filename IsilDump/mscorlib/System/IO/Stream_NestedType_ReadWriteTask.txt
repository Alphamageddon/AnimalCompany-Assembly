Type: System.IO.Stream/ReadWriteTask

Method: System.Void ClearBeginState()

Disassembly:
	0x032F387C BL 0x1C16F20
	0x032F3880 MOV X0, X19

ISIL:
	001 Move [X0+88], X31
	002 Move [X0+96], X31
	003 Return 

Method: System.Void .ctor(System.Boolean isRead, System.Boolean apm, System.Func`2<System.Object, System.Int32> function, System.Object state, System.IO.Stream stream, System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.AsyncCallback callback)

Disassembly:
	0x032F16A0 ADRP X23, 0x10EB000
	0x032F16A4 ADRP X24, 0xE0A000
	0x032F16A8 LDRB W8, [X23 + 0xA34]
	0x032F16AC LDR X24, [X24 + 0x7D8]
	0x032F16B0 MOV W19, W3
	0x032F16B4 MOV W20, W2
	0x032F16B8 MOV X21, X1
	0x032F16BC MOV X22, X0
	0x032F16C0 TBNZ X8, 0x0, 0x32F16D8
	0x032F16C4 ADRP X0, 0xE0A000
	0x032F16C8 LDR X0, [X0 + 0x7D8]
	0x032F16CC BL 0x1C16CF4
	0x032F16D0 MOVZ W8, 0x1
	0x032F16D4 STRB W8, [X23 + 0xA34]
	0x032F16D8 LDR X0, [X24]
	0x032F16DC LDR W8, [X0 + 0xE0]
	0x032F16E0 CBNZ W8, 0x32F16E8
	0x032F16E4 BL 0x1C16DFC
	0x032F16E8 MOV X0, X31
	0x032F16EC BL 0x33DD2A8
	0x032F16F0 LDR X8, [X22]
	0x032F16F4 MOV X4, X0
	0x032F16F8 MOV X0, X22
	0x032F16FC MOV X1, X21
	0x032F1700 LDR X6, [X8 + 0x318]
	0x032F1704 LDR X5, [X8 + 0x320]
	0x032F1708 MOV W2, W20
	0x032F170C MOV W3, W19
	0x032F1710 LDP X20, X19, [X31 + 0x30]
	0x032F1714 LDP X22, X21, [X31 + 0x20]
	0x032F1718 LDP X24, X23, [X31 + 0x10]
	0x032F171C LDR X30, [X31], #0x40
	0x032F1720 BR X6
	0x032F1724 STR X30, [X31 - 0x40]!
	0x032F1728 STP X24, X23, [X31 + 0x10]
	0x032F172C STP X22, X21, [X31 + 0x20]
	0x032F1730 STP X20, X19, [X31 + 0x30]
	0x032F1734 ADRP X23, 0x10EB000
	0x032F1738 STR X4, [X31 + 0x8]
	0x032F173C ADRP X24, 0xE0A000
	0x032F1740 LDRB W8, [X23 + 0xA35]
	0x032F1744 LDR X24, [X24 + 0x7D8]
	0x032F1748 MOV W19, W3
	0x032F174C MOV W20, W2
	0x032F1750 MOV X21, X1
	0x032F1754 MOV X22, X0
	0x032F1758 TBNZ X8, 0x0, 0x32F177C
	0x032F175C ADRP X0, 0xE0A000
	0x032F1760 LDR X0, [X0 + 0x7D8]
	0x032F1764 BL 0x1C16CF4
	0x032F1768 ADRP X0, 0xE03000
	0x032F176C LDR X0, [X0 + 0x7B8]
	0x032F1770 BL 0x1C16CF4
	0x032F1774 MOVZ W8, 0x1
	0x032F1778 STRB W8, [X23 + 0xA35]
	0x032F177C LDR X0, [X24]
	0x032F1780 LDR W8, [X0 + 0xE0]
	0x032F1784 CBNZ W8, 0x32F178C
	0x032F1788 BL 0x1C16DFC
	0x032F178C ADD X0, X31, 0x8
	0x032F1790 MOV X1, X31
	0x032F1794 BL 0x33DD2B0
	0x032F1798 TBZ X0, 0x0, 0x32F17C8
	0x032F179C ADRP X8, 0xE03000
	0x032F17A0 LDR X8, [X8 + 0x7B8]
	0x032F17A4 LDR X19, [X31 + 0x8]
	0x032F17A8 LDR X0, [X8]
	0x032F17AC LDR W8, [X0 + 0xE0]
	0x032F17B0 CBNZ W8, 0x32F17B8
	0x032F17B4 BL 0x1C16DFC
	0x032F17B8 MOV X0, X19
	0x032F17BC MOV X1, X31
	0x032F17C0 BL 0x33EE044
	0x032F17C4 B 0x32F17DC
	0x032F17C8 MOV X0, X22
	0x032F17CC MOV X1, X21
	0x032F17D0 MOV W2, W20
	0x032F17D4 MOV W3, W19
	0x032F17D8 BL 0x32F17F0
	0x032F17DC LDP X20, X19, [X31 + 0x30]
	0x032F17E0 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0x10EC000
	014 Move X9, 0xE0B000
	015 Move X25, [X31+104]
	016 Move W8, [X29+2626]
	017 Move W26, [X31+96]
	018 Move X9, [X9+2008]
	019 Move W20, W7
	020 Move X21, X6
	021 Move X22, X5
	022 Move X23, X4
	023 Move X24, X3
	024 Move X19, X0
	025 And W28, W1, 1
	026 And W27, W2, 1
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {44}
	031 Move X0, 0xE0B000
	032 Move X0, [X0+2008]
	033 Call 0x1C17CF4
	034 Move X0, 0xE2B000
	035 Move X0, [X0+1408]
	036 Call 0x1C17CF4
	037 Move X0, 0xE37000
	038 Move X0, [X0+320]
	039 Call 0x1C17CF4
	040 Move X9, 0xE0B000
	041 Move X9, [X9+2008]
	042 Move W8, 1
	043 Move [X29+2626], W8
	044 Move X0, [X9]
	045 Move X29, 0xE37000
	046 Move W8, [X0+224]
	047 Move X29, [X29+320]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X31
	052 Call CancellationToken.get_None
	053 Move X5, [X29]
	054 Move X3, X0
	055 Move W4, 8
	056 Move X0, X19
	057 Move X1, X24
	058 Move X2, X23
	059 Call Task`1<Int32>..ctor, X0, X1, X2, X3, X4
	060 Move [X19+84], W28
	061 Move [X19+85], W27
	062 Move [X19+88], X22
	063 Move [X19+96], X21
	064 Move [X19+104], W20
	065 Move [X19+108], W26
	066 Compare X25, 0
	067 JumpIfEqual {96}
	068 Move X8, 0xE2B000
	069 Move X8, [X8+1408]
	070 Move [X19+112], X25
	071 Move X0, [X8]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X31
	077 Call ExecutionContext.Capture
	078 Move [X19+120], X0
	079 Move X0, X19
	080 Move X1, X19
	081 Move X20, [X31+80]
	082 Move X19, [X31+88]
	083 Move X22, [X31+64]
	084 Move X21, [X31+72]
	085 Move X24, [X31+48]
	086 Move X23, [X31+56]
	087 Move X26, [X31+32]
	088 Move X25, [X31+40]
	089 Move X28, [X31+16]
	090 Move X27, [X31+24]
	091 Move X2, X31
	092 Move X29, [X31+96]
	093 Move X30, [X31+104]
	094 Call Task.AddCompletionAction, X0, X1
	095 Return 
	096 Move X20, [X31+80]
	097 Move X19, [X31+88]
	098 Move X22, [X31+64]
	099 Move X21, [X31+72]
	100 Move X24, [X31+48]
	101 Move X23, [X31+56]
	102 Move X26, [X31+32]
	103 Move X25, [X31+40]
	104 Move X28, [X31+16]
	105 Move X27, [X31+24]
	106 Move X29, [X31+96]
	107 Move X30, [X31+104]
	108 Return 

Method: System.Void InvokeAsyncCallback(System.Object completedTask)

Disassembly:
	0x032F3884 BL 0x1C171E0
	0x032F3888 STR X30, [X31 - 0x10]!
	0x032F388C CBZ X1, 0x32F38B8
	0x032F3890 LDR X8, [X1]
	0x032F3894 MOV X0, X1
	0x032F3898 MOV X1, X2
	0x032F389C MOV W2, W3
	0x032F38A0 LDR X7, [X8 + 0x2F8]
	0x032F38A4 LDR X6, [X8 + 0x300]
	0x032F38A8 UBFM X8, X3, 0x20, 0x3F
	0x032F38AC MOV W3, W8
	0x032F38B0 LDR X30, [X31], #0x10
	0x032F38B4 BR X7
	0x032F38B8 BL 0x1C16F20
	0x032F38BC STR X30, [X31 - 0x10]!
	0x032F38C0 CBZ X1, 0x32F38EC
	0x032F38C4 LDR X8, [X1]
	0x032F38C8 MOV X0, X1
	0x032F38CC MOV X1, X2
	0x032F38D0 LDR X9, [X8 + 0x308]
	0x032F38D4 LDR X8, [X8 + 0x310]
	0x032F38D8 MOV X2, X8
	0x032F38DC BLR X9
	0x032F38E0 MOV X0, X31
	0x032F38E4 LDR X30, [X31], #0x10
	0x032F38E8 RET
	0x032F38EC BL 0x1C16F20
	0x032F38F0 SUB X31, X31, 0xA0
	0x032F38F4 STP X30, X0, [X31 + 0x50]
	0x032F38F8 STP X26, X25, [X31 + 0x60]
	0x032F38FC STP X24, X23, [X31 + 0x70]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10EA000
	005 Move W8, [X20+2627]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE35000
	012 Move X0, [X0+296]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2627], W8
	016 Compare X19, 0
	017 JumpIfEqual {35}
	018 Move X8, 0xE35000
	019 Move X8, [X8+296]
	020 Move X1, [X8]
	021 Move X8, [X19]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, [X19+112]
	024 Move [X19+112], X31
	025 Compare X8, 0
	026 JumpIfEqual {35}
	027 Move X3, [X8+24]
	028 Move X0, [X8+64]
	029 Move X2, [X8+40]
	030 Move X1, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 CallNoReturn X3
	035 Call 0x1C17F20
	036 Move X0, X19
	037 Call 0x1C181E0

Method: System.Void System.Threading.Tasks.ITaskCompletionAction.Invoke(System.Threading.Tasks.Task completingTask)

Disassembly:
	0x032F3900 STP X22, X21, [X31 + 0x80]
	0x032F3904 STP X20, X19, [X31 + 0x90]
	0x032F3908 ADRP X19, 0x10E9000
	0x032F390C LDRB W8, [X19 + 0xA5A]
	0x032F3910 MOV X20, X0
	0x032F3914 TBNZ X8, 0x0, 0x32F39B0
	0x032F3918 ADRP X0, 0xE2B000
	0x032F391C LDR X0, [X0 + 0xD50]
	0x032F3920 BL 0x1C16CF4
	0x032F3924 ADRP X0, 0xE2B000
	0x032F3928 LDR X0, [X0 + 0xD68]
	0x032F392C BL 0x1C16CF4
	0x032F3930 ADRP X0, 0xE34000
	0x032F3934 LDR X0, [X0 + 0x288]
	0x032F3938 BL 0x1C16CF4
	0x032F393C ADRP X0, 0xE34000
	0x032F3940 LDR X0, [X0 + 0x290]
	0x032F3944 BL 0x1C16CF4
	0x032F3948 ADRP X0, 0xE03000
	0x032F394C LDR X0, [X0 + 0x280]
	0x032F3950 BL 0x1C16CF4
	0x032F3954 ADRP X0, 0xE2B000
	0x032F3958 LDR X0, [X0 + 0x2B8]
	0x032F395C BL 0x1C16CF4
	0x032F3960 ADRP X0, 0xE2B000
	0x032F3964 LDR X0, [X0 + 0x2C0]
	0x032F3968 BL 0x1C16CF4
	0x032F396C ADRP X0, 0xE2B000
	0x032F3970 LDR X0, [X0 + 0x2C8]
	0x032F3974 BL 0x1C16CF4
	0x032F3978 ADRP X0, 0xE34000
	0x032F397C LDR X0, [X0 + 0x298]
	0x032F3980 BL 0x1C16CF4
	0x032F3984 ADRP X0, 0xE2F000
	0x032F3988 LDR X0, [X0 + 0xEA0]
	0x032F398C BL 0x1C16CF4
	0x032F3990 ADRP X0, 0xE2B000
	0x032F3994 LDR X0, [X0 + 0x2F8]
	0x032F3998 BL 0x1C16CF4
	0x032F399C ADRP X0, 0xE2A000
	0x032F39A0 LDR X0, [X0 + 0xE40]
	0x032F39A4 BL 0x1C16CF4
	0x032F39A8 MOVZ W8, 0x1
	0x032F39AC STRB W8, [X19 + 0xA5A]
	0x032F39B0 STP X31, X31, [X31 + 0x30]
	0x032F39B4 STP X31, X31, [X31 + 0x20]
	0x032F39B8 LDR W8, [X20]
	0x032F39BC STR W8, [X31 + 0x4C]
	0x032F39C0 LDR X19, [X20 + 0x28]
	0x032F39C4 CMP W8, 0x2
	0x032F39C8 B.CC 0x32F3A70
	0x032F39CC ADRP X8, 0xE2B000
	0x032F39D0 LDR X8, [X8 + 0xD68]
	0x032F39D4 LDR X0, [X8]
	0x032F39D8 LDR W8, [X0 + 0xE0]
	0x032F39DC CBNZ W8, 0x32F39E4
	0x032F39E0 BL 0x1C16DFC
	0x032F39E4 ADRP X8, 0xE2B000
	0x032F39E8 LDR X8, [X8 + 0xD50]
	0x032F39EC LDR X20, [X8]
	0x032F39F0 LDR X0, [X20 + 0x20]
	0x032F39F4 LDRB W8, [X0 + 0x135]
	0x032F39F8 TBNZ X8, 0x0, 0x32F3A00
	0x032F39FC BL 0x1C5C684
	0x032F3A00 LDR X8, [X0 + 0xC0]
	0x032F3A04 LDR X0, [X8 + 0x8]
	0x032F3A08 LDRB W8, [X0 + 0x135]
	0x032F3A0C TBNZ X8, 0x0, 0x32F3A14
	0x032F3A10 BL 0x1C5C684
	0x032F3A14 LDR W8, [X0 + 0xE0]
	0x032F3A18 CBNZ W8, 0x32F3A20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x10EA000
	008 Move W8, [X20+2628]
	009 Move X21, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xE33000
	016 Move X0, [X0+2376]
	017 Call 0x1C17CF4
	018 Move X0, 0xE29000
	019 Move X0, [X0+1408]
	020 Call 0x1C17CF4
	021 Move X0, 0xE35000
	022 Move X0, [X0+576]
	023 Call 0x1C17CF4
	024 Move X0, 0xE35000
	025 Move X0, [X0+296]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+2628], W8
	029 Move X20, [X19+120]
	030 Compare X20, 0
	031 JumpIfEqual {73}
	032 Move X23, 0xE35000
	033 Move X23, [X23+296]
	034 Move [X19+120], X31
	035 Move X22, 0xE29000
	036 Move X8, [X23]
	037 Move X8, [X8+184]
	038 Move X21, [X8]
	039 Move X22, [X22+1408]
	040 Compare X21, 0
	041 JumpIfNotEqual {56}
	042 Move X8, 0xE33000
	043 Move X8, [X8+2376]
	044 Move X0, [X8]
	045 Call 0x1C17F10
	046 Move X8, 0xE35000
	047 Move X8, [X8+576]
	048 Move X1, X31
	049 Move X3, X31
	050 Move X21, X0
	051 Move X2, [X8]
	052 Call ContextCallback..ctor, X0, X1, X2
	053 Move X8, [X23]
	054 Move X8, [X8+184]
	055 Move [X8], X21
	056 Move X0, [X22]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X20
	062 Move X1, X21
	063 Move X2, X19
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X3, X31
	069 Move X30, [X31+48]
	070 Move X23, [X31+56]
	071 Call ExecutionContext.RunInternal, X0, X1, X2
	072 Return 
	073 Move X8, [X19+112]
	074 Move [X19+112], X31
	075 Compare X8, 0
	076 JumpIfEqual {88}
	077 Move X3, [X8+24]
	078 Move X0, [X8+64]
	079 Move X2, [X8+40]
	080 Move X1, X21
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X30, [X31+48]
	086 Move X23, [X31+56]
	087 CallNoReturn X3
	088 Call 0x1C17F20

Method: System.Boolean System.Threading.Tasks.ITaskCompletionAction.get_InvokeMayRunArbitraryCode()

Disassembly:
	0x032F3A1C BL 0x1C16DFC
	0x032F3A20 LDR X0, [X20 + 0x20]

ISIL:
	001 Move W0, 1
	002 Return X0

