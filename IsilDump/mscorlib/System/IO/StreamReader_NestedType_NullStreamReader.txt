Type: System.IO.StreamReader/NullStreamReader

Method: System.Void .ctor()

Disassembly:
	0x032E8D80 BL 0x1C16D08
	0x032E8D84 MOV X20, X0
	0x032E8D88 ADRP X0, 0xE3E000
	0x032E8D8C LDR X0, [X0 + 0xC40]
	0x032E8D90 BL 0x1C16D08
	0x032E8D94 MOV X2, X0
	0x032E8D98 MOV X0, X19
	0x032E8D9C MOV X1, X20
	0x032E8DA0 MOV X3, X31
	0x032E8DA4 BL 0x3315F7C
	0x032E8DA8 B 0x32E8E44
	0x032E8DAC ADRP X0, 0xE13000
	0x032E8DB0 LDR X0, [X0 + 0x760]
	0x032E8DB4 BL 0x1C16D08
	0x032E8DB8 BL 0x1C16F10
	0x032E8DBC MOV X19, X0
	0x032E8DC0 ADRP X0, 0xE16000
	0x032E8DC4 LDR X0, [X0 + 0x130]
	0x032E8DC8 B 0x32E8DE8
	0x032E8DCC ADRP X0, 0xE13000
	0x032E8DD0 LDR X0, [X0 + 0x760]
	0x032E8DD4 BL 0x1C16D08
	0x032E8DD8 BL 0x1C16F10
	0x032E8DDC MOV X19, X0
	0x032E8DE0 ADRP X0, 0xE33000
	0x032E8DE4 LDR X0, [X0 + 0x648]
	0x032E8DE8 BL 0x1C16D08
	0x032E8DEC MOV X20, X0
	0x032E8DF0 ADRP X0, 0xE33000
	0x032E8DF4 LDR X0, [X0 + 0x670]
	0x032E8DF8 BL 0x1C16D08
	0x032E8DFC MOV X2, X0
	0x032E8E00 MOV X0, X19
	0x032E8E04 MOV X1, X20
	0x032E8E08 MOV X3, X31
	0x032E8E0C BL 0x3311888
	0x032E8E10 B 0x32E8E44

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10F5000
	006 Move X20, 0xE3B000
	007 Move W8, [X21+2499]
	008 Move X20, [X20+3272]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xE3B000
	015 Move X0, [X0+3272]
	016 Call 0x1C17CF4
	017 Move X0, 0xE3B000
	018 Move X0, [X0+3344]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2499], W8
	022 Move X0, [X20]
	023 Move X20, 0xE3B000
	024 Move W8, [X0+224]
	025 Move X20, [X20+3344]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Call StreamReader..ctor, X0
	031 Move X0, [X20]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X20]
	037 Move X8, [X0+184]
	038 Move W9, 1
	039 Move X8, [X8]
	040 Move [X19+87], W9
	041 Move [X19+24], X8
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return 

Method: System.IO.Stream get_BaseStream()

Disassembly:
	0x032E8E14 ADRP X0, 0xE13000
	0x032E8E18 LDR X0, [X0 + 0x578]
	0x032E8E1C BL 0x1C16D08
	0x032E8E20 BL 0x1C16F10
	0x032E8E24 MOV X19, X0
	0x032E8E28 ADRP X0, 0xE33000
	0x032E8E2C LDR X0, [X0 + 0x760]
	0x032E8E30 BL 0x1C16D08
	0x032E8E34 MOV X1, X0
	0x032E8E38 MOV X0, X19
	0x032E8E3C MOV X2, X31
	0x032E8E40 BL 0x3314A68
	0x032E8E44 ADRP X0, 0xE3E000
	0x032E8E48 LDR X0, [X0 + 0xEA0]
	0x032E8E4C BL 0x1C16D08
	0x032E8E50 MOV X1, X0
	0x032E8E54 MOV X0, X19
	0x032E8E58 BL 0x1C16DEC
	0x032E8E5C STR X30, [X31 - 0x40]!
	0x032E8E60 STP X24, X23, [X31 + 0x10]
	0x032E8E64 STP X22, X21, [X31 + 0x20]
	0x032E8E68 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10F5000
	005 Move X19, 0xE3B000
	006 Move W8, [X20+2500]
	007 Move X19, [X19+3344]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE3B000
	013 Move X0, [X0+3344]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2500], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Text.Encoding get_CurrentEncoding()

Disassembly:
	0x032E8E6C ADRP X24, 0x10F4000
	0x032E8E70 ADRP X22, 0xE3E000

ISIL:
	001 Move X0, X31
	002 Call Encoding.get_Unicode
	003 Return X0

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x032E8E74 ADRP X23, 0xE0B000

ISIL:
	001 Return 

Method: System.Int32 Peek()

Disassembly:
	0x032E8E78 LDRB W8, [X24 + 0x9D3]
	0x032E8E7C LDR X22, [X22 + 0xEA8]

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W0, TEMP
	004 Return X0

Method: System.Int32 Read()

Disassembly:
	0x032E8E80 LDR X23, [X23 + 0x6C0]
	0x032E8E84 MOV X19, X2

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W0, TEMP
	004 Return X0

Method: System.Int32 Read(System.Char[] buffer, System.Int32 index, System.Int32 count)

Disassembly:
	0x032E8E88 MOV X20, X1
	0x032E8E8C MOV X21, X0

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.String ReadLine()

Disassembly:
	0x032E8E90 TBNZ X8, 0x0, 0x32E8EB4
	0x032E8E94 ADRP X0, 0xE3E000

ISIL:
	001 Move X0, X31
	002 Return X0

Method: System.String ReadToEnd()

Disassembly:
	0x032E8E98 LDR X0, [X0 + 0xEA8]
	0x032E8E9C BL 0x1C16CF4
	0x032E8EA0 ADRP X0, 0xE0B000
	0x032E8EA4 LDR X0, [X0 + 0x6C0]
	0x032E8EA8 BL 0x1C16CF4
	0x032E8EAC MOVZ W8, 0x1
	0x032E8EB0 STRB W8, [X24 + 0x9D3]
	0x032E8EB4 MOV X0, X21
	0x032E8EB8 MOV X1, X31
	0x032E8EBC BL 0x33BE520
	0x032E8EC0 LDR X8, [X23]
	0x032E8EC4 LDR X23, [X22]
	0x032E8EC8 MOV X22, X0
	0x032E8ECC LDR W9, [X8 + 0xE0]
	0x032E8ED0 CBNZ W9, 0x32E8EDC
	0x032E8ED4 MOV X0, X8
	0x032E8ED8 BL 0x1C16DFC
	0x032E8EDC MOV X0, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x10F5000
	005 Move X20, 0xE0E000
	006 Move W8, [X19+2501]
	007 Move X20, [X20+632]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE0E000
	013 Move X0, [X0+632]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2501], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move X0, [X8]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Int32 ReadBuffer()

Disassembly:
	0x032E8EE0 MOV X1, X31
	0x032E8EE4 BL 0x338C698

ISIL:
	001 Move W0, W31
	002 Return X0

