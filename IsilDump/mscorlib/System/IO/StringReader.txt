Type: System.IO.StringReader

Method: System.Void .ctor(System.String s)

Disassembly:
	0x032F862C MOV X1, X31
	0x032F8630 LDR X9, [X8 + 0x338]
	0x032F8634 LDR X3, [X8 + 0x340]
	0x032F8638 BLR X9
	0x032F863C LDR X8, [X19]
	0x032F8640 MOV X0, X19
	0x032F8644 LDP X9, X1, [X8 + 0x1F8]
	0x032F8648 BLR X9
	0x032F864C B 0x32F8654
	0x032F8650 MOV X0, X31
	0x032F8654 STR X0, [X19 + 0x48]
	0x032F8658 LDP X20, X19, [X31 + 0x60]
	0x032F865C LDP X22, X21, [X31 + 0x50]
	0x032F8660 LDP X24, X23, [X31 + 0x40]
	0x032F8664 LDP X26, X25, [X31 + 0x30]
	0x032F8668 LDP X28, X27, [X31 + 0x20]
	0x032F866C LDP X29, X30, [X31 + 0x10]
	0x032F8670 ADD X31, X31, 0x70
	0x032F8674 RET
	0x032F8678 ADRP X0, 0xE00000
	0x032F867C LDR X0, [X0 + 0x528]
	0x032F8680 BL 0x1C16D08
	0x032F8684 BL 0x1C16F10
	0x032F8688 MOV X19, X0
	0x032F868C ADRP X0, 0xE06000
	0x032F8690 LDR X0, [X0 + 0x120]
	0x032F8694 BL 0x1C16D08
	0x032F8698 MOV X1, X0
	0x032F869C MOV X0, X19
	0x032F86A0 MOV X2, X31
	0x032F86A4 BL 0x330E100
	0x032F86A8 B 0x32F89D0
	0x032F86AC ADRP X0, 0xE03000
	0x032F86B0 LDR X0, [X0 + 0x578]
	0x032F86B4 BL 0x1C16D08
	0x032F86B8 BL 0x1C16F10
	0x032F86BC MOV X19, X0
	0x032F86C0 ADRP X0, 0xE2F000
	0x032F86C4 LDR X0, [X0 + 0x460]
	0x032F86C8 B 0x32F8824
	0x032F86CC ADRP X0, 0xE03000
	0x032F86D0 LDR X0, [X0 + 0x760]
	0x032F86D4 BL 0x1C16D08
	0x032F86D8 BL 0x1C16F10
	0x032F86DC MOV X19, X0
	0x032F86E0 ADRP X0, 0xE26000
	0x032F86E4 LDR X0, [X0 + 0xF58]
	0x032F86E8 BL 0x1C16D08

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10E5000
	007 Move X22, 0xE2F000
	008 Move W8, [X21+2672]
	009 Move X22, [X22+3584]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE2F000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2672], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X19
	027 Move X1, X31
	028 Call TextReader..ctor, X0
	029 Compare X20, 0
	030 JumpIfEqual {40}
	031 Move [X19+24], X20
	032 Move W8, [X20+16]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move [X19+36], W8
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X30, [X31+48]
	039 Return 
	040 Move X0, 0xE01000
	041 Move X0, [X0+1320]
	042 Call 0x1C17D08
	043 Call 0x1C17F10
	044 Move X19, X0
	045 Move X0, 0xE25000
	046 Move X0, [X0+3264]
	047 Call 0x1C17D08
	048 Move X1, X0
	049 Move X0, X19
	050 Move X2, X31
	051 Call ArgumentNullException..ctor, X0, X1
	052 Move X0, 0xE30000
	053 Move X0, [X0+1024]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X19
	057 Call 0x1C17DEC

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x032F86EC MOV X20, X0
	0x032F86F0 ADRP X0, 0xE2E000
	0x032F86F4 LDR X0, [X0 + 0xD28]
	0x032F86F8 B 0x32F89B8

ISIL:
	001 And W1, W1, 1
	002 Move X2, X31
	003 Move [X0+24], X31
	004 Move [X0+32], X31
	005 Call TextReader.Dispose, X0, X1
	006 Return 

Method: System.Int32 Peek()

Disassembly:
	0x032F86FC TBZ X24, 0x0, 0x32F898C
	0x032F8700 ADRP X0, 0xE03000
	0x032F8704 LDR X0, [X0 + 0x578]
	0x032F8708 BL 0x1C16D08
	0x032F870C BL 0x1C16F10
	0x032F8710 MOV X19, X0
	0x032F8714 ADRP X0, 0xE2C000
	0x032F8718 LDR X0, [X0 + 0x68]
	0x032F871C BL 0x1C16D08
	0x032F8720 MOV X20, X0
	0x032F8724 ADRP X0, 0xE2E000
	0x032F8728 LDR X0, [X0 + 0xDC0]
	0x032F872C BL 0x1C16D08
	0x032F8730 MOV X2, X0
	0x032F8734 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Move X0, [X0+24]
	004 Compare X0, 0
	005 JumpIfEqual {17}
	006 Move W1, [X8+32]
	007 Move W8, [X8+36]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move TEMP, 0
	010 Not TEMP
	011 Move W0, TEMP
	012 Move X2, X31
	013 Call String.get_Chars, X0, X1
	014 And W0, W0, 0xFFFF
	015 Move X30, [X31+16]
	016 Return X0
	017 Call __Error.ReaderClosed

Method: System.Int32 Read()

Disassembly:
	0x032F8738 MOV X1, X20
	0x032F873C MOV X3, X31
	0x032F8740 BL 0x330E16C
	0x032F8744 B 0x32F89D0
	0x032F8748 ADRP X0, 0xE03000
	0x032F874C LDR X0, [X0 + 0x760]
	0x032F8750 BL 0x1C16D08
	0x032F8754 BL 0x1C16F10
	0x032F8758 MOV X19, X0
	0x032F875C ADRP X0, 0xE2E000
	0x032F8760 LDR X0, [X0 + 0xDB8]
	0x032F8764 B 0x32F89A8
	0x032F8768 ADRP X0, 0xE03000
	0x032F876C LDR X0, [X0 + 0x760]
	0x032F8770 BL 0x1C16D08
	0x032F8774 BL 0x1C16F10
	0x032F8778 MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Move X0, [X0+24]
	004 Compare X0, 0
	005 JumpIfEqual {19}
	006 Move W1, [X8+32]
	007 Move W9, [X8+36]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move TEMP, 0
	010 Not TEMP
	011 Move W0, TEMP
	012 Add W9, W1, 1
	013 Move X2, X31
	014 Move [X8+32], W9
	015 Call String.get_Chars, X0, X1
	016 And W0, W0, 0xFFFF
	017 Move X30, [X31+16]
	018 Return X0
	019 Call __Error.ReaderClosed

Method: System.Int32 Read(out System.Char[] buffer, System.Int32 index, System.Int32 count)

Disassembly:
	0x032F877C ADRP X0, 0xE2F000
	0x032F8780 LDR X0, [X0 + 0x468]
	0x032F8784 B 0x32F89A8
	0x032F8788 ADRP X0, 0xE03000
	0x032F878C LDR X0, [X0 + 0x578]
	0x032F8790 BL 0x1C16D08
	0x032F8794 BL 0x1C16F10
	0x032F8798 MOV X19, X0
	0x032F879C ADRP X0, 0xE2F000
	0x032F87A0 LDR X0, [X0 + 0x470]
	0x032F87A4 B 0x32F8824
	0x032F87A8 ADRP X0, 0xE29000
	0x032F87AC LDR X0, [X0 + 0x800]
	0x032F87B0 BL 0x1C16D08
	0x032F87B4 MOV X1, X31
	0x032F87B8 BL 0x320A160
	0x032F87BC MOV X20, X0
	0x032F87C0 MOV X0, X19
	0x032F87C4 MOV X1, X25
	0x032F87C8 MOV W2, W31
	0x032F87CC BL 0x32F9178
	0x032F87D0 MOV X1, X0
	0x032F87D4 MOV X0, X20
	0x032F87D8 MOV X2, X31
	0x032F87DC BL 0x321EFD0
	0x032F87E0 MOV X19, X0
	0x032F87E4 ADRP X0, 0xE29000
	0x032F87E8 LDR X0, [X0 + 0x7B8]
	0x032F87EC BL 0x1C16D08
	0x032F87F0 BL 0x1C16F10
	0x032F87F4 MOV X1, X19
	0x032F87F8 MOV X2, X31
	0x032F87FC MOV X20, X0
	0x032F8800 BL 0x339B6AC
	0x032F8804 B 0x32F8974
	0x032F8808 ADRP X0, 0xE03000
	0x032F880C LDR X0, [X0 + 0x578]
	0x032F8810 BL 0x1C16D08
	0x032F8814 BL 0x1C16F10
	0x032F8818 MOV X19, X0
	0x032F881C ADRP X0, 0xE2F000
	0x032F8820 LDR X0, [X0 + 0x478]
	0x032F8824 BL 0x1C16D08
	0x032F8828 MOV X1, X0
	0x032F882C MOV X0, X19
	0x032F8830 MOV X2, X31
	0x032F8834 BL 0x3314A68
	0x032F8838 B 0x32F89D0
	0x032F883C ADRP X0, 0xE2F000
	0x032F8840 LDR X0, [X0 + 0x480]
	0x032F8844 BL 0x1C16D08
	0x032F8848 MOV X1, X31
	0x032F884C BL 0x320A160
	0x032F8850 MOV X19, X0
	0x032F8854 STR W22, [X31 + 0x8]
	0x032F8858 ADRP X0, 0xE2F000
	0x032F885C LDR X0, [X0 + 0x488]
	0x032F8860 BL 0x1C16D08
	0x032F8864 ADD X1, X31, 0x8
	0x032F8868 BL 0x1C16E04
	0x032F886C MOV X21, X0
	0x032F8870 STR W20, [X31 + 0x4]
	0x032F8874 ADRP X0, 0xE2F000
	0x032F8878 LDR X0, [X0 + 0x490]
	0x032F887C BL 0x1C16D08
	0x032F8880 ADD X1, X31, 0x4
	0x032F8884 BL 0x1C16E04
	0x032F8888 MOV X2, X0
	0x032F888C MOV X0, X19
	0x032F8890 MOV X1, X21
	0x032F8894 MOV X3, X31
	0x032F8898 BL 0x3227BD4
	0x032F889C MOV X19, X0
	0x032F88A0 ADRP X0, 0xE03000
	0x032F88A4 LDR X0, [X0 + 0x578]
	0x032F88A8 BL 0x1C16D08
	0x032F88AC BL 0x1C16F10
	0x032F88B0 MOV X1, X19
	0x032F88B4 MOV X2, X31
	0x032F88B8 MOV X20, X0
	0x032F88BC BL 0x3314A68
	0x032F88C0 B 0x32F8974
	0x032F88C4 BL 0x1C16F20
	0x032F88C8 MOV X0, X19
	0x032F88CC MOV X1, X25
	0x032F88D0 BL 0x32F92BC
	0x032F88D4 MOV X20, X0
	0x032F88D8 ADRP X0, 0xE29000
	0x032F88DC LDR W19, [X31 + 0xC]
	0x032F88E0 LDR X0, [X0 + 0xFA8]
	0x032F88E4 BL 0x1C16D08
	0x032F88E8 BL 0x19903D0
	0x032F88EC MOV X0, X20
	0x032F88F0 MOV W1, W19
	0x032F88F4 BL 0x32F9334
	0x032F88F8 MOV X19, X0
	0x032F88FC B 0x32F89D0
	0x032F8900 ADRP X0, 0xE2F000
	0x032F8904 LDR X0, [X0 + 0x498]
	0x032F8908 BL 0x1C16D08
	0x032F890C MOV X1, X31
	0x032F8910 BL 0x320A160
	0x032F8914 MOV X19, X0
	0x032F8918 TBNZ X24, 0x0, 0x32F8940
	0x032F891C ADRP X0, 0xE22000
	0x032F8920 LDR X0, [X0 + 0x1D0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {41}
	006 Move W8, W2
	007 Move TEMP, X2
	008 And TEMP, TEMP, -2147483648
	009 Compare TEMP, -2147483648
	010 JumpIfEqual {60}
	011 Move TEMP, X3
	012 And TEMP, TEMP, -2147483648
	013 Compare TEMP, -2147483648
	014 JumpIfEqual {73}
	015 Move W9, [X1+24]
	016 Move X2, X1
	017 Subtract W9, W9, W8
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X19, X0
	020 Move X0, [X0+24]
	021 Compare X0, 0
	022 JumpIfEqual {112}
	023 Move W1, [X19+32]
	024 Move W9, [X19+36]
	025 Subtract W20, W9, W1
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CSEL not yet implemented."
	029 Move W3, W8
	030 Move W4, W20
	031 Move X5, X31
	032 Call String.CopyTo, X0, X1, X2, X3, X4
	033 Move W8, [X19+32]
	034 Add W8, W8, W20
	035 Move [X19+32], W8
	036 Move W0, W20
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Return X0
	041 Move X0, 0xE2F000
	042 Move X0, [X0+3136]
	043 Call 0x1C17D08
	044 Move X1, X31
	045 Call Environment.GetResourceString, X0
	046 Move X19, X0
	047 Move X0, 0xE01000
	048 Move X0, [X0+1320]
	049 Call 0x1C17D08
	050 Call 0x1C17F10
	051 Move X20, X0
	052 Move X0, 0xE27000
	053 Move X0, [X0+3912]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X20
	057 Move X2, X19
	058 Move X3, X31
	059 Call ArgumentNullException..ctor, X0, X1, X2
	060 Move X0, 0xE24000
	061 Move X0, [X0+1648]
	062 Call 0x1C17D08
	063 Move X1, X31
	064 Call Environment.GetResourceString, X0
	065 Move X19, X0
	066 Move X0, 0xE04000
	067 Move X0, [X0+1888]
	068 Call 0x1C17D08
	069 Call 0x1C17F10
	070 Move X20, X0
	071 Move X0, 0xE07000
	072 Move X0, [X0+304]
	073 Move X0, 0xE24000
	074 Move X0, [X0+1648]
	075 Call 0x1C17D08
	076 Move X1, X31
	077 Call Environment.GetResourceString, X0
	078 Move X19, X0
	079 Move X0, 0xE04000
	080 Move X0, [X0+1888]
	081 Call 0x1C17D08
	082 Call 0x1C17F10
	083 Move X20, X0
	084 Move X0, 0xE24000
	085 Move X0, [X0+1608]
	086 Call 0x1C17D08
	087 Move X1, X0
	088 Move X0, X20
	089 Move X2, X19
	090 Move X3, X31
	091 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	092 Move X0, 0xE24000
	093 Move X0, [X0+1888]
	094 Call 0x1C17D08
	095 Move X1, X31
	096 Call Environment.GetResourceString, X0
	097 Move X19, X0
	098 Move X0, 0xE04000
	099 Move X0, [X0+1400]
	100 Call 0x1C17D08
	101 Call 0x1C17F10
	102 Move X1, X19
	103 Move X2, X31
	104 Move X20, X0
	105 Call ArgumentException..ctor, X0, X1
	106 Move X0, 0xE30000
	107 Move X0, [X0+1032]
	108 Call 0x1C17D08
	109 Move X1, X0
	110 Move X0, X20
	111 Call 0x1C17DEC
	112 Call __Error.ReaderClosed

Method: System.String ReadToEnd()

Disassembly:
	0x032F8924 BL 0x1C16D08
	0x032F8928 LDR W8, [X0 + 0xE0]
	0x032F892C CBNZ W8, 0x32F8934
	0x032F8930 BL 0x1C16DFC
	0x032F8934 MOV X0, X25
	0x032F8938 BL 0x32EE2E0
	0x032F893C MOV X27, X0
	0x032F8940 MOV X0, X19
	0x032F8944 MOV X1, X27
	0x032F8948 MOV X2, X31
	0x032F894C BL 0x321EFD0
	0x032F8950 MOV X19, X0
	0x032F8954 ADRP X0, 0xE29000
	0x032F8958 LDR X0, [X0 + 0x798]
	0x032F895C BL 0x1C16D08

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+24]
	005 Compare X0, 0
	006 JumpIfEqual {19}
	007 Move W1, [X19+32]
	008 Compare W1, 0
	009 JumpIfEqual {14}
	010 Move W8, [X19+36]
	011 Move X3, X31
	012 Subtract W2, W8, W1
	013 Call String.Substring, X0, X1, X2
	014 Move W8, [X19+36]
	015 Move [X19+32], W8
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Return X0
	019 Call __Error.ReaderClosed

Method: System.String ReadLine()

Disassembly:
	0x032F8960 BL 0x1C16F10
	0x032F8964 MOV X1, X19
	0x032F8968 MOV X2, X31
	0x032F896C MOV X20, X0
	0x032F8970 BL 0x32E16E0
	0x032F8974 ADRP X0, 0xE2F000
	0x032F8978 LDR X0, [X0 + 0x4A0]
	0x032F897C BL 0x1C16D08
	0x032F8980 MOV X1, X0
	0x032F8984 MOV X0, X20
	0x032F8988 BL 0x1C16DEC
	0x032F898C ADRP X0, 0xE03000
	0x032F8990 LDR X0, [X0 + 0x760]
	0x032F8994 BL 0x1C16D08
	0x032F8998 BL 0x1C16F10
	0x032F899C MOV X19, X0
	0x032F89A0 ADRP X0, 0xE2C000
	0x032F89A4 LDR X0, [X0 + 0x68]
	0x032F89A8 BL 0x1C16D08
	0x032F89AC MOV X20, X0
	0x032F89B0 ADRP X0, 0xE2E000
	0x032F89B4 LDR X0, [X0 + 0xDC0]
	0x032F89B8 BL 0x1C16D08
	0x032F89BC MOV X2, X0
	0x032F89C0 MOV X0, X19
	0x032F89C4 MOV X1, X20
	0x032F89C8 MOV X3, X31
	0x032F89CC BL 0x3311888
	0x032F89D0 ADRP X0, 0xE2F000
	0x032F89D4 LDR X0, [X0 + 0x4A0]
	0x032F89D8 BL 0x1C16D08
	0x032F89DC MOV X1, X0
	0x032F89E0 MOV X0, X19
	0x032F89E4 BL 0x1C16DEC
	0x032F89E8 SUB X31, X31, 0x20
	0x032F89EC STR X30, [X31 + 0x10]
	0x032F89F0 MOV W6, W31
	0x032F89F4 MOV W7, W31
	0x032F89F8 BL 0x32F8300
	0x032F89FC LDR X30, [X31 + 0x10]
	0x032F8A00 ADD X31, X31, 0x20
	0x032F8A04 RET
	0x032F8A08 SUB X31, X31, 0x20
	0x032F8A0C STR X30, [X31 + 0x10]
	0x032F8A10 MOV W7, W6
	0x032F8A14 MOV W6, W31
	0x032F8A18 BL 0x32F8300
	0x032F8A1C LDR X30, [X31 + 0x10]
	0x032F8A20 ADD X31, X31, 0x20
	0x032F8A24 RET
	0x032F8A28 MOVZ W3, 0x1000
	0x032F8A2C MOV W4, W31
	0x032F8A30 B 0x32F8A34
	0x032F8A34 STR X30, [X31 - 0x50]!
	0x032F8A38 STP X26, X25, [X31 + 0x10]
	0x032F8A3C STP X24, X23, [X31 + 0x20]
	0x032F8A40 STP X22, X21, [X31 + 0x30]
	0x032F8A44 STP X20, X19, [X31 + 0x40]
	0x032F8A48 ADRP X25, 0x10E4000
	0x032F8A4C ADRP X26, 0xE2F000
	0x032F8A50 ADRP X24, 0xE2A000
	0x032F8A54 LDRB W8, [X25 + 0xA75]
	0x032F8A58 LDR X26, [X26 + 0x428]
	0x032F8A5C LDR X24, [X24 + 0xD10]
	0x032F8A60 MOV W22, W4
	0x032F8A64 MOV W19, W3
	0x032F8A68 MOV W20, W2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+24]
	007 Compare X0, 0
	008 JumpIfEqual {67}
	009 Move W20, [X19+32]
	010 Move W8, [X19+36]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W1, W20
	013 Move X2, X31
	014 Call String.get_Chars, X0, X1
	015 And W8, W0, 0xFFFF
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W8, [X19+36]
	019 Add W21, W20, 1
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X0, [X19+24]
	022 Move W20, W21
	023 Compare X0, 0
	024 JumpIfNotEqual {12}
	025 Call 0x1C17F20
	026 Move X8, [X19+24]
	027 Compare X8, 0
	028 JumpIfEqual {25}
	029 Move W1, [X19+32]
	030 And W21, W0, 0xFFFF
	031 Move X0, X8
	032 Move X3, X31
	033 Subtract W2, W20, W1
	034 Call String.Substring, X0, X1, X2
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Add W1, W20, 1
	037 NotImplemented "Instruction CSEL not yet implemented."
	038 Move [X19+32], W1
	039 Move W8, [X19+36]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X0, [X19+24]
	042 Compare X0, 0
	043 JumpIfEqual {25}
	044 Move X2, X31
	045 Call String.get_Chars, X0, X1
	046 And W8, W0, 0xFFFF
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W8, [X19+32]
	049 Add W8, W8, 1
	050 Move [X19+32], W8
	051 Move X0, X20
	052 Move W1, [X19+32]
	053 Subtract W8, W20, W1
	054 Move X0, X31
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Return X0
	060 Move X0, [X19+24]
	061 Compare X0, 0
	062 JumpIfEqual {25}
	063 Add W2, W8, 1
	064 Move X3, X31
	065 Call String.Substring, X0, X1, X2
	066 Move [X19+32], W21
	067 Call __Error.ReaderClosed

