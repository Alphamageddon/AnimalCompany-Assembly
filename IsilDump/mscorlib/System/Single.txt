Type: System.Single

Method: System.Boolean IsInfinity(System.Single f)

Disassembly:
	0x03390B70 LDR X0, [X0 + 0x9E8]
	0x03390B74 BL 0x1C16CF4
	0x03390B78 MOVZ W8, 0x1
	0x03390B7C STRB W8, [X21 + 0x4A]
	0x03390B80 LDR X0, [X20]
	0x03390B84 LDR V8, [X19]

ISIL:
	001 Move W8, S0
	002 And W8, W8, 0x7FFFFFFF
	003 Move W9, 0x7F800000
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSET not yet implemented."
	006 Return X0

Method: System.Boolean IsNaN(System.Single f)

Disassembly:
	0x03390B88 LDR W8, [X0 + 0xE0]
	0x03390B8C CBNZ W8, 0x3390B94
	0x03390B90 BL 0x1C16DFC
	0x03390B94 LDP X20, X19, [X31 + 0x20]
	0x03390B98 LDP X30, X21, [X31 + 0x10]
	0x03390B9C MOV V0.16B, V8.16B

ISIL:
	001 Move W8, S0
	002 And W8, W8, 0x7FFFFFFF
	003 Move W9, 0x7F800000
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSET not yet implemented."
	006 Return X0

Method: System.Boolean IsNegativeInfinity(System.Single f)

Disassembly:
	0x03390BA0 MOV X0, X31
	0x03390BA4 LDR V8, [X31], #0x30
	0x03390BA8 B 0x3321AD8
	0x03390BAC STR D8, [X31 - 0x30]!
	0x03390BB0 STP X30, X21, [X31 + 0x10]

ISIL:
	001 Move W8, 0xFF800000
	002 Move S1, W8
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.Int32 CompareTo(System.Object value)

Disassembly:
	0x03390BB4 STP X20, X19, [X31 + 0x20]
	0x03390BB8 ADRP X21, 0x104D000
	0x03390BBC ADRP X20, 0xD6C000
	0x03390BC0 LDRB W8, [X21 + 0x4B]
	0x03390BC4 LDR X20, [X20 + 0x9E8]
	0x03390BC8 MOV X19, X0
	0x03390BCC TBNZ X8, 0x0, 0x3390BE4
	0x03390BD0 ADRP X0, 0xD6C000
	0x03390BD4 LDR X0, [X0 + 0x9E8]
	0x03390BD8 BL 0x1C16CF4
	0x03390BDC MOVZ W8, 0x1
	0x03390BE0 STRB W8, [X21 + 0x4B]
	0x03390BE4 LDR X0, [X20]
	0x03390BE8 LDR V8, [X19]
	0x03390BEC LDR W8, [X0 + 0xE0]
	0x03390BF0 CBNZ W8, 0x3390BF8
	0x03390BF4 BL 0x1C16DFC
	0x03390BF8 LDP X20, X19, [X31 + 0x20]
	0x03390BFC LDP X30, X21, [X31 + 0x10]
	0x03390C00 MOV V0.16B, V8.16B
	0x03390C04 MOV X0, X31
	0x03390C08 LDR V8, [X31], #0x30
	0x03390C0C B 0x3321EF4
	0x03390C10 STR X30, [X31 - 0x20]!
	0x03390C14 STP X20, X19, [X31 + 0x10]
	0x03390C18 ADRP X0, 0xD98000
	0x03390C1C LDR X0, [X0 + 0x30]
	0x03390C20 BL 0x1C16D08
	0x03390C24 MOV X19, X0
	0x03390C28 ADRP X0, 0xD95000
	0x03390C2C LDR X0, [X0 + 0xE8]
	0x03390C30 BL 0x1C16D08
	0x03390C34 MOV X20, X0
	0x03390C38 ADRP X0, 0xD95000
	0x03390C3C LDR X0, [X0 + 0x98]
	0x03390C40 BL 0x1C16D08
	0x03390C44 MOV X2, X0
	0x03390C48 MOV X0, X19
	0x03390C4C MOV X1, X20
	0x03390C50 MOV X3, X31
	0x03390C54 BL 0x320A264
	0x03390C58 MOV X19, X0
	0x03390C5C ADRP X0, 0xD6B000
	0x03390C60 LDR X0, [X0 + 0xC08]
	0x03390C64 BL 0x1C16D08
	0x03390C68 BL 0x1C16F10
	0x03390C6C MOV X1, X19
	0x03390C70 MOV X2, X31
	0x03390C74 MOV X20, X0
	0x03390C78 BL 0x337B498
	0x03390C7C ADRP X0, 0xD9B000
	0x03390C80 LDR X0, [X0 + 0x278]
	0x03390C84 BL 0x1C16D08
	0x03390C88 MOV X1, X0
	0x03390C8C MOV X0, X20
	0x03390C90 BL 0x1C16DEC
	0x03390C94 STR X30, [X31 - 0x40]!
	0x03390C98 STP X24, X23, [X31 + 0x10]
	0x03390C9C STP X22, X21, [X31 + 0x20]
	0x03390CA0 STP X20, X19, [X31 + 0x30]
	0x03390CA4 ADRP X24, 0x104D000
	0x03390CA8 ADRP X23, 0xD63000
	0x03390CAC ADRP X22, 0xD6C000
	0x03390CB0 LDRB W8, [X24 + 0x4C]
	0x03390CB4 LDR X23, [X23 + 0xA90]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x104E000
	006 Move W8, [X21+54]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD64000
	014 Move X0, [X0+2704]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+54], W8
	018 Compare X20, 0
	019 JumpIfEqual {40}
	020 Move X8, 0xD64000
	021 Move X8, [X8+2704]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X20
	026 Call 0x1C17E08
	027 Move V0, [X0]
	028 Move V1, [X19]
	029 NotImplemented "Instruction FCMP not yet implemented."
	030 NotImplemented "Instruction FCMP not yet implemented."
	031 Move W8, S1
	032 And W9, W8, 0x7FFFFFFF
	033 Move W8, 1
	034 NotImplemented "Instruction MOVK not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W9, S0
	037 And W9, W9, 0x7FFFFFFF
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSINV not yet implemented."
	040 Move W0, 1
	041 Move TEMP, 0
	042 Not TEMP
	043 Move W0, TEMP
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0
	049 Move W0, W31
	050 Move X0, 0xD6C000
	051 Move X0, [X0+1400]
	052 Call 0x1C17D08
	053 Call 0x1C17F10
	054 Move X19, X0
	055 Move X0, 0xD9C000
	056 Move X0, [X0+608]
	057 Call 0x1C17D08
	058 Move X1, X0
	059 Move X0, X19
	060 Move X2, X31
	061 Call ArgumentException..ctor, X0, X1
	062 Move X0, 0xD9C000
	063 Move X0, [X0+616]
	064 Call 0x1C17D08
	065 Move X1, X0
	066 Move X0, X19
	067 Call 0x1C17DEC

Method: System.Int32 CompareTo(System.Single value)

Disassembly:
	0x03390CB8 LDR X22, [X22 + 0x9E8]
	0x03390CBC MOV X19, X2
	0x03390CC0 MOV X20, X1
	0x03390CC4 MOV X21, X0
	0x03390CC8 TBNZ X8, 0x0, 0x3390CEC
	0x03390CCC ADRP X0, 0xD6C000
	0x03390CD0 LDR X0, [X0 + 0x9E8]
	0x03390CD4 BL 0x1C16CF4
	0x03390CD8 ADRP X0, 0xD63000
	0x03390CDC LDR X0, [X0 + 0xA90]
	0x03390CE0 BL 0x1C16CF4
	0x03390CE4 MOVZ W8, 0x1
	0x03390CE8 STRB W8, [X24 + 0x4C]
	0x03390CEC LDR V0, [X21]
	0x03390CF0 LDR X0, [X23]
	0x03390CF4 ADD X1, X31, 0xC
	0x03390CF8 STR S0, [X31 + 0xC]
	0x03390CFC BL 0x1C16E04
	0x03390D00 LDR X8, [X22]
	0x03390D04 MOV X21, X0
	0x03390D08 LDR W9, [X8 + 0xE0]
	0x03390D0C CBNZ W9, 0x3390D18
	0x03390D10 MOV X0, X8

ISIL:
	001 Move V1, [X0]
	002 NotImplemented "Instruction FCMP not yet implemented."
	003 Move TEMP, 0
	004 Not TEMP
	005 Move W0, TEMP
	006 Return X0
	007 Move W0, 1
	008 Return X0
	009 NotImplemented "Instruction FCMP not yet implemented."
	010 Move W0, W31
	011 Return X0
	012 Move W8, S1
	013 And W9, W8, 0x7FFFFFFF
	014 Move W8, 1
	015 NotImplemented "Instruction MOVK not yet implemented."
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W9, S0
	018 And W9, W9, 0x7FFFFFFF
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CSINV not yet implemented."
	021 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03390D14 BL 0x1C16DFC
	0x03390D18 MOV X0, X21
	0x03390D1C MOV X1, X20
	0x03390D20 MOV X2, X19
	0x03390D24 MOV X3, X31
	0x03390D28 BL 0x3318718
	0x03390D2C LDP X20, X19, [X31 + 0x30]
	0x03390D30 LDP X22, X21, [X31 + 0x20]
	0x03390D34 LDP X24, X23, [X31 + 0x10]
	0x03390D38 LDR X30, [X31], #0x40
	0x03390D3C RET
	0x03390D40 STP X30, X23, [X31 - 0x30]!
	0x03390D44 STP X22, X21, [X31 + 0x10]
	0x03390D48 STP X20, X19, [X31 + 0x20]
	0x03390D4C CBZ W3, 0x3390DA0
	0x03390D50 CMP W3, 0x1
	0x03390D54 B.LT 0x3390DA8
	0x03390D58 MOV X19, X2
	0x03390D5C MOV W22, W1
	0x03390D60 MOV X20, X0
	0x03390D64 MOV W23, W3
	0x03390D68 MOVN W21, 0x0
	0x03390D6C LDRB W1, [X19]
	0x03390D70 MOV X0, X20
	0x03390D74 MOV W2, W22
	0x03390D78 BL 0x3390DC0
	0x03390D7C CMP W0, W21
	0x03390D80 B.CS 0x3390D90
	0x03390D84 MOV W21, W0
	0x03390D88 MOV W22, W0
	0x03390D8C CBZ W0, 0x3390DAC
	0x03390D90 SUBS X23, X23, 0x1
	0x03390D94 ADD X19, X19, 0x1
	0x03390D98 B.NE 0x3390D6C
	0x03390D9C B 0x3390DAC
	0x03390DA0 MOV W21, W31
	0x03390DA4 B 0x3390DAC
	0x03390DA8 MOVN W21, 0x0
	0x03390DAC MOV W0, W21
	0x03390DB0 LDP X20, X19, [X31 + 0x20]
	0x03390DB4 LDP X22, X21, [X31 + 0x10]
	0x03390DB8 LDP X30, X23, [X31], #0x30
	0x03390DBC RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x104E000
	006 Move W8, [X21+55]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD64000
	014 Move X0, [X0+2704]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+55], W8
	018 Compare X20, 0
	019 JumpIfEqual {25}
	020 Move X8, 0xD64000
	021 Move X8, [X8+2704]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0
	031 Move X0, X20
	032 Call 0x1C17E08
	033 Move V1, [X0]
	034 Move V0, [X19]
	035 NotImplemented "Instruction FCMP not yet implemented."
	036 Move W8, S1
	037 Move W9, 1
	038 And W8, W8, 0x7FFFFFFF
	039 NotImplemented "Instruction MOVK not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W8, S0
	042 And W8, W8, 0x7FFFFFFF
	043 Move W9, 0x7F800000
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CSET not yet implemented."
	046 Move W0, 1

Method: System.Boolean Equals(System.Single obj)

Disassembly:
	0x03390DC0 STR X30, [X31 - 0x30]!
	0x03390DC4 STP X22, X21, [X31 + 0x10]
	0x03390DC8 STP X20, X19, [X31 + 0x20]
	0x03390DCC MOV W20, W1
	0x03390DD0 MOV X21, X0
	0x03390DD4 MOV W0, W31
	0x03390DD8 MOV X1, X31
	0x03390DDC MOV W22, W2
	0x03390DE0 BL 0x33C6930
	0x03390DE4 MOV X19, X0
	0x03390DE8 MOV W0, W22
	0x03390DEC MOV X1, X31
	0x03390DF0 BL 0x33C6930
	0x03390DF4 MOV X1, X31
	0x03390DF8 MOV X22, X0
	0x03390DFC BL 0x33C6948
	0x03390E00 CMP X0, 0x8
	0x03390E04 B.CS 0x3390E60
	0x03390E08 MOV X0, X22

ISIL:
	001 Move V1, [X0]
	002 NotImplemented "Instruction FCMP not yet implemented."
	003 Move W0, 1
	004 Return X0
	005 Move W8, S0
	006 Move W9, 1
	007 And W8, W8, 0x7FFFFFFF
	008 NotImplemented "Instruction MOVK not yet implemented."
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W8, S1
	011 And W8, W8, 0x7FFFFFFF
	012 Move W9, 0x7F800000
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction CSET not yet implemented."
	015 Return X0
	016 Move W0, W31
	017 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03390E0C MOV X1, X31
	0x03390E10 BL 0x33C6948
	0x03390E14 CMP X0, 0x4
	0x03390E18 B.CC 0x339100C
	0x03390E1C MOVZ W1, 0x4
	0x03390E20 MOV X0, X22

ISIL:
	001 Move W8, [X0]
	002 Subtract W9, W31, W8
	003 And W10, W8, 0x7F800000
	004 And W31, W9, 0x7F800000
	005 NotImplemented "Instruction CSEL not yet implemented."
	006 Return X0

Method: System.String ToString()

Disassembly:
	0x03390E24 MOV X2, X31
	0x03390E28 BL 0x33C695C
	0x03390E2C LDRB W8, [X21, X19, LSL]
	0x03390E30 CMP W8, W20, UXTB
	0x03390E34 B.EQ 0x3391044
	0x03390E38 MOV X22, X0
	0x03390E3C MOVZ W1, 0x1
	0x03390E40 MOV X0, X19
	0x03390E44 MOV X2, X31
	0x03390E48 BL 0x33C6954
	0x03390E4C LDRB W8, [X21, X0, LSL]
	0x03390E50 CMP W8, W20, UXTB
	0x03390E54 B.NE 0x3390F70
	0x03390E58 MOVZ W1, 0x1
	0x03390E5C B 0x3390FE8
	0x03390E60 MOVZ W1, 0x8
	0x03390E64 MOV X0, X22
	0x03390E68 MOV X2, X31
	0x03390E6C BL 0x33C695C
	0x03390E70 LDRB W8, [X21, X19, LSL]
	0x03390E74 CMP W8, W20, UXTB
	0x03390E78 B.EQ 0x3391044
	0x03390E7C MOV X22, X0
	0x03390E80 MOVZ W1, 0x1
	0x03390E84 MOV X0, X19
	0x03390E88 MOV X2, X31
	0x03390E8C BL 0x33C6954
	0x03390E90 LDRB W8, [X21, X0, LSL]
	0x03390E94 CMP W8, W20, UXTB
	0x03390E98 B.EQ 0x3390E58
	0x03390E9C MOVZ W1, 0x2

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x104E000
	007 Move X20, 0xD99000
	008 Move W8, [X21+56]
	009 Move X20, [X20+120]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD99000
	016 Move X0, [X0+120]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+56], W8
	020 Move V8, [X19]
	021 Move X0, X31
	022 Call NumberFormatInfo.get_CurrentInfo
	023 Move X8, [X20]
	024 Move X19, X0
	025 Move W9, [X8+224]
	026 Compare W9, 0
	027 JumpIfNotEqual {30}
	028 Move X0, X8
	029 Call 0x1C17DFC
	030 Move X1, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X30, [X31+16]
	034 Move X21, [X31+24]
	035 Move V0, V8
	036 Move X0, X31
	037 Move X2, X31
	038 Move V8, [X31+48]
	039 Call Number.FormatSingle, V0, X0, X1
	040 Return X0

Method: System.String ToString(System.IFormatProvider provider)

Disassembly:
	0x03390EA0 MOV X0, X19
	0x03390EA4 MOV X2, X31
	0x03390EA8 BL 0x33C6954
	0x03390EAC LDRB W8, [X21, X0, LSL]
	0x03390EB0 CMP W8, W20, UXTB
	0x03390EB4 B.EQ 0x3390F8C
	0x03390EB8 MOVZ W1, 0x3
	0x03390EBC MOV X0, X19
	0x03390EC0 MOV X2, X31
	0x03390EC4 BL 0x33C6954
	0x03390EC8 LDRB W8, [X21, X0, LSL]
	0x03390ECC CMP W8, W20, UXTB
	0x03390ED0 B.EQ 0x3390FE4
	0x03390ED4 MOVZ W1, 0x4
	0x03390ED8 MOV X0, X19
	0x03390EDC MOV X2, X31
	0x03390EE0 BL 0x33C6954
	0x03390EE4 LDRB W8, [X21, X0, LSL]
	0x03390EE8 CMP W8, W20, UXTB
	0x03390EEC B.EQ 0x3390F94
	0x03390EF0 MOVZ W1, 0x5
	0x03390EF4 MOV X0, X19
	0x03390EF8 MOV X2, X31
	0x03390EFC BL 0x33C6954
	0x03390F00 LDRB W8, [X21, X0, LSL]
	0x03390F04 CMP W8, W20, UXTB
	0x03390F08 B.EQ 0x3390F9C
	0x03390F0C MOVZ W1, 0x6
	0x03390F10 MOV X0, X19
	0x03390F14 MOV X2, X31
	0x03390F18 BL 0x33C6954
	0x03390F1C LDRB W8, [X21, X0, LSL]
	0x03390F20 CMP W8, W20, UXTB
	0x03390F24 B.EQ 0x3390FA4
	0x03390F28 MOVZ W1, 0x7

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x104E000
	008 Move X21, 0xD99000
	009 Move W8, [X22+57]
	010 Move X21, [X21+120]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xD99000
	018 Move X0, [X0+120]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+57], W8
	022 Move V8, [X20]
	023 Move X0, X19
	024 Move X1, X31
	025 Call NumberFormatInfo.GetInstance, X0
	026 Move X8, [X21]
	027 Move X19, X0
	028 Move W9, [X8+224]
	029 Compare W9, 0
	030 JumpIfNotEqual {33}
	031 Move X0, X8
	032 Call 0x1C17DFC
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+8]
	039 Move V0, V8
	040 Move X0, X31
	041 Move X2, X31
	042 Move V8, [X31+48]
	043 Call Number.FormatSingle, V0, X0, X1
	044 Return X0

Method: System.String ToString(System.String format)

Disassembly:
	0x03390F2C MOV X0, X19
	0x03390F30 MOV X2, X31
	0x03390F34 BL 0x33C6954
	0x03390F38 LDRB W8, [X21, X0, LSL]
	0x03390F3C CMP W8, W20, UXTB
	0x03390F40 B.EQ 0x3390FAC
	0x03390F44 MOVZ W1, 0x8
	0x03390F48 MOV X0, X19
	0x03390F4C MOV X2, X31
	0x03390F50 BL 0x33C6954
	0x03390F54 MOV X19, X0
	0x03390F58 MOV X0, X22
	0x03390F5C MOV X1, X31
	0x03390F60 BL 0x33C6948
	0x03390F64 CMP X0, 0x7
	0x03390F68 B.HI 0x3390E60
	0x03390F6C B 0x3390E08
	0x03390F70 MOVZ W1, 0x2
	0x03390F74 MOV X0, X19
	0x03390F78 MOV X2, X31
	0x03390F7C BL 0x33C6954
	0x03390F80 LDRB W8, [X21, X0, LSL]
	0x03390F84 CMP W8, W20, UXTB
	0x03390F88 B.NE 0x3390FC8
	0x03390F8C MOVZ W1, 0x2
	0x03390F90 B 0x3390FE8
	0x03390F94 MOVZ W1, 0x4
	0x03390F98 B 0x3390FB0
	0x03390F9C MOVZ W1, 0x5
	0x03390FA0 B 0x3390FB0
	0x03390FA4 MOVZ W1, 0x6
	0x03390FA8 B 0x3390FB0
	0x03390FAC MOVZ W1, 0x7
	0x03390FB0 MOV X0, X19

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x104E000
	008 Move X21, 0xD99000
	009 Move W8, [X22+58]
	010 Move X21, [X21+120]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xD99000
	018 Move X0, [X0+120]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+58], W8
	022 Move V8, [X20]
	023 Move X0, X31
	024 Call NumberFormatInfo.get_CurrentInfo
	025 Move X8, [X21]
	026 Move X20, X0
	027 Move W9, [X8+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {32}
	030 Move X0, X8
	031 Call 0x1C17DFC
	032 Move X0, X19
	033 Move X1, X20
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+8]
	039 Move V0, V8
	040 Move X2, X31
	041 Move V8, [X31+48]
	042 Call Number.FormatSingle, V0, X0, X1
	043 Return X0

Method: System.String ToString(System.String format, System.IFormatProvider provider)

Disassembly:
	0x03390FB4 MOV X2, X31
	0x03390FB8 BL 0x33C6954
	0x03390FBC MOV X1, X31
	0x03390FC0 BL 0x33C6948
	0x03390FC4 B 0x3391058
	0x03390FC8 MOVZ W1, 0x3
	0x03390FCC MOV X0, X19
	0x03390FD0 MOV X2, X31
	0x03390FD4 BL 0x33C6954
	0x03390FD8 LDRB W8, [X21, X0, LSL]
	0x03390FDC CMP W8, W20, UXTB
	0x03390FE0 B.NE 0x3390FF8
	0x03390FE4 MOVZ W1, 0x3
	0x03390FE8 MOV X0, X19
	0x03390FEC MOV X2, X31
	0x03390FF0 BL 0x33C6954
	0x03390FF4 B 0x3391048
	0x03390FF8 MOVZ W1, 0x4
	0x03390FFC MOV X0, X19
	0x03391000 MOV X2, X31
	0x03391004 BL 0x33C6954
	0x03391008 MOV X19, X0
	0x0339100C MOV X0, X22
	0x03391010 MOV X1, X31
	0x03391014 BL 0x33C6948
	0x03391018 CBZ X0, 0x3391054
	0x0339101C MOVZ W1, 0x1
	0x03391020 MOV X0, X22
	0x03391024 MOV X2, X31
	0x03391028 BL 0x33C695C
	0x0339102C LDRB W8, [X21, X19, LSL]
	0x03391030 CMP W8, W20, UXTB
	0x03391034 B.EQ 0x3391044
	0x03391038 MOV X22, X0
	0x0339103C MOVZ W1, 0x1
	0x03391040 B 0x3390FFC

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x104E000
	009 Move X22, 0xD99000
	010 Move W8, [X23+59]
	011 Move X22, [X22+120]
	012 Move X20, X2
	013 Move X19, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xD99000
	020 Move X0, [X0+120]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+59], W8
	024 Move V8, [X21]
	025 Move X0, X20
	026 Move X1, X31
	027 Call NumberFormatInfo.GetInstance, X0
	028 Move X8, [X22]
	029 Move X20, X0
	030 Move W9, [X8+224]
	031 Compare W9, 0
	032 JumpIfNotEqual {35}
	033 Move X0, X8
	034 Call 0x1C17DFC
	035 Move X0, X19
	036 Move X1, X20
	037 Move X20, [X31+48]
	038 Move X19, [X31+56]
	039 Move X22, [X31+32]
	040 Move X21, [X31+40]
	041 Move X30, [X31+16]
	042 Move X23, [X31+24]
	043 Move V0, V8
	044 Move X2, X31
	045 Move V8, [X31+64]
	046 Call Number.FormatSingle, V0, X0, X1
	047 Return X0

Method: System.Boolean TryFormat(System.Span`1<System.Char> destination, out System.Int32 charsWritten, System.ReadOnlySpan`1<System.Char> format = null, System.IFormatProvider provider = null)

Disassembly:
	0x03391044 MOV X0, X19
	0x03391048 MOV X1, X31
	0x0339104C BL 0x33C6948
	0x03391050 B 0x3391058
	0x03391054 MOVN W0, 0x0
	0x03391058 LDP X20, X19, [X31 + 0x20]
	0x0339105C LDP X22, X21, [X31 + 0x10]
	0x03391060 LDR X30, [X31], #0x30
	0x03391064 RET
	0x03391068 STR X30, [X31 - 0x40]!
	0x0339106C STP X24, X23, [X31 + 0x10]
	0x03391070 STP X22, X21, [X31 + 0x20]
	0x03391074 STP X20, X19, [X31 + 0x30]
	0x03391078 CMP X0, X1
	0x0339107C B.EQ 0x3391194
	0x03391080 MOV X19, X1
	0x03391084 MOV X20, X0
	0x03391088 MOV W0, W31
	0x0339108C MOV X1, X31
	0x03391090 MOV X22, X2
	0x03391094 BL 0x33C6930
	0x03391098 MOV X21, X0
	0x0339109C MOV X0, X22
	0x033910A0 MOV X1, X31
	0x033910A4 BL 0x33C693C
	0x033910A8 MOV X1, X31
	0x033910AC MOV X22, X0
	0x033910B0 BL 0x33C6948
	0x033910B4 CMP X0, 0x7
	0x033910B8 B.LS 0x3391120
	0x033910BC MOVZ W1, 0x8
	0x033910C0 MOV X0, X22
	0x033910C4 MOV X2, X31
	0x033910C8 BL 0x33C695C
	0x033910CC MOV X22, X0
	0x033910D0 MOV X1, X31
	0x033910D4 BL 0x33C6948
	0x033910D8 MOV X23, X0
	0x033910DC MOV X0, X21
	0x033910E0 MOV X1, X31
	0x033910E4 BL 0x33C6948
	0x033910E8 CMP X23, X0
	0x033910EC B.LS 0x33911B0
	0x033910F0 LDR X0, [X20, X21, LSL]
	0x033910F4 LDR X1, [X19, X21, LSL]
	0x033910F8 MOV X2, X31
	0x033910FC BL 0x33D539C
	0x03391100 TBNZ X0, 0x0, 0x33911D0

ISIL:
	001 Move [X31-96], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X27, 0x104D000
	013 Move X26, 0xD98000
	014 Move W8, [X27+60]
	015 Move X26, [X26+120]
	016 Move X24, X6
	017 Move X21, X5
	018 Move X23, X4
	019 Move X19, X3
	020 Move X20, X2
	021 Move X22, X1
	022 Move X25, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0xD98000
	028 Move X0, [X0+120]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X27+60], W8
	032 Move V8, [X25]
	033 Move X0, X24
	034 Move X1, X31
	035 Call NumberFormatInfo.GetInstance, X0
	036 Move X8, [X26]
	037 Move X24, X0
	038 Move W9, [X8+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 Move X0, X23
	044 Move X1, X21
	045 Move X2, X24
	046 Move X3, X22
	047 Move X4, X20
	048 Move X5, X19
	049 Move X20, [X31+80]
	050 Move X19, [X31+88]
	051 Move X22, [X31+64]
	052 Move X21, [X31+72]
	053 Move X24, [X31+48]
	054 Move X23, [X31+56]
	055 Move X26, [X31+32]
	056 Move X25, [X31+40]
	057 Move X30, [X31+16]
	058 Move X27, [X31+24]
	059 Move V0, V8
	060 Move X6, X31
	061 Move V8, [X31+96]
	062 Call Number.TryFormatSingle, V0, X0, X1, X2, X3
	063 Return X0

Method: System.Single Parse(System.String s)

Disassembly:
	0x03391104 MOVZ W1, 0x8
	0x03391108 MOV X0, X21
	0x0339110C MOV X2, X31
	0x03391110 BL 0x33C6954
	0x03391114 MOV X21, X0
	0x03391118 MOV X0, X22
	0x0339111C B 0x33910D0
	0x03391120 MOV X0, X22
	0x03391124 MOV X1, X31
	0x03391128 BL 0x33C6948
	0x0339112C MOV X23, X0
	0x03391130 MOV X0, X21
	0x03391134 MOV X1, X31
	0x03391138 BL 0x33C6948
	0x0339113C CMP X23, X0
	0x03391140 B.LS 0x3391194
	0x03391144 LDRB W8, [X20, X21, LSL]
	0x03391148 LDRB W9, [X19, X21, LSL]
	0x0339114C CMP W8, W9
	0x03391150 CSET W23, EQ
	0x03391154 B.NE 0x3391198
	0x03391158 MOVZ W1, 0x1
	0x0339115C MOV X0, X21
	0x03391160 MOV X2, X31
	0x03391164 BL 0x33C6954
	0x03391168 MOV X21, X0
	0x0339116C MOV X0, X22
	0x03391170 MOV X1, X31
	0x03391174 BL 0x33C6948
	0x03391178 MOV X24, X0
	0x0339117C MOV X0, X21
	0x03391180 MOV X1, X31
	0x03391184 BL 0x33C6948
	0x03391188 CMP X24, X0
	0x0339118C B.HI 0x3391144
	0x03391190 B 0x3391198
	0x03391194 MOVZ W23, 0x1
	0x03391198 MOV W0, W23
	0x0339119C LDP X20, X19, [X31 + 0x30]
	0x033911A0 LDP X22, X21, [X31 + 0x20]
	0x033911A4 LDP X24, X23, [X31 + 0x10]
	0x033911A8 LDR X30, [X31], #0x40
	0x033911AC RET
	0x033911B0 LDR X0, [X20, X22, LSL]
	0x033911B4 LDR X1, [X19, X22, LSL]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x104D000
	006 Move W8, [X20+61]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD98000
	013 Move X0, [X0+120]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+61], W8
	017 Compare X19, 0
	018 JumpIfEqual {55}
	019 Move X20, 0x1049000
	020 Move X21, 0xD98000
	021 Move W8, [X20+1890]
	022 Move X21, [X21+120]
	023 Compare W8, 0
	024 JumpIfNotEqual {30}
	025 Move X0, 0xD8A000
	026 Move X0, [X0+656]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+1890], W8
	030 Move X0, X19
	031 Move X1, X31
	032 Call String.GetRawStringData, X0
	033 Move W19, [X19+16]
	034 Move X20, X0
	035 Move X0, X31
	036 Call NumberFormatInfo.get_CurrentInfo
	037 Move X8, [X21]
	038 Move X21, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {44}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X0, X20
	045 Move X1, X19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move W2, 231
	049 Move X3, X21
	050 Move X4, X31
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Call Number.ParseSingle, X0, X1, X2
	054 Return V0
	055 Move W0, 48
	056 Call ThrowHelper.ThrowArgumentNullException, X0

Method: System.Single Parse(System.String s, System.IFormatProvider provider)

Disassembly:
	0x033911B8 LDP X20, X19, [X31 + 0x30]
	0x033911BC LDP X22, X21, [X31 + 0x20]
	0x033911C0 LDP X24, X23, [X31 + 0x10]
	0x033911C4 MOV X2, X31
	0x033911C8 LDR X30, [X31], #0x40
	0x033911CC B 0x33D5390
	0x033911D0 MOV W23, W31
	0x033911D4 B 0x3391198
	0x033911D8 SUB X31, X31, 0x90
	0x033911DC STP X29, X30, [X31 + 0x30]
	0x033911E0 STP X28, X27, [X31 + 0x40]
	0x033911E4 STP X26, X25, [X31 + 0x50]
	0x033911E8 STP X24, X23, [X31 + 0x60]
	0x033911EC STP X22, X21, [X31 + 0x70]
	0x033911F0 STP X20, X19, [X31 + 0x80]
	0x033911F4 MRS X26, 0xC000
	0x033911F8 LDR X8, [X26 + 0x28]
	0x033911FC ADRP X21, 0x104C000
	0x03391200 MOV W22, W3
	0x03391204 MOV X19, X2
	0x03391208 STR X8, [X31 + 0x28]
	0x0339120C LDRB W8, [X21 + 0x4D]
	0x03391210 MOV W23, W1
	0x03391214 MOV X20, X0
	0x03391218 TBNZ X8, 0x0, 0x3391254
	0x0339121C ADRP X0, 0xD64000
	0x03391220 LDR X0, [X0 + 0x170]
	0x03391224 BL 0x1C16CF4
	0x03391228 ADRP X0, 0xD9A000
	0x0339122C LDR X0, [X0 + 0x280]
	0x03391230 BL 0x1C16CF4
	0x03391234 ADRP X0, 0xD9A000
	0x03391238 LDR X0, [X0 + 0x288]
	0x0339123C BL 0x1C16CF4
	0x03391240 ADRP X0, 0xD9A000
	0x03391244 LDR X0, [X0 + 0x290]
	0x03391248 BL 0x1C16CF4
	0x0339124C MOVZ W8, 0x1
	0x03391250 STRB W8, [X21 + 0x4D]
	0x03391254 CMP X20, X19
	0x03391258 SUB W25, W23, W22
	0x0339125C B.EQ 0x33916E0
	0x03391260 CMP W23, W22
	0x03391264 CSEL W0, W23, W22, LT
	0x03391268 MOV X1, X31
	0x0339126C BL 0x33C6930
	0x03391270 MOV X22, X0
	0x03391274 MOV W0, W31
	0x03391278 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x104D000
	007 Move W8, [X21+62]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD98000
	015 Move X0, [X0+120]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+62], W8
	019 Compare X20, 0
	020 JumpIfEqual {59}
	021 Move X21, 0x1049000
	022 Move X22, 0xD98000
	023 Move W8, [X21+1890]
	024 Move X22, [X22+120]
	025 Compare W8, 0
	026 JumpIfNotEqual {32}
	027 Move X0, 0xD8A000
	028 Move X0, [X0+656]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+1890], W8
	032 Move X0, X20
	033 Move X1, X31
	034 Call String.GetRawStringData, X0
	035 Move W20, [X20+16]
	036 Move X21, X0
	037 Move X0, X19
	038 Move X1, X31
	039 Call NumberFormatInfo.GetInstance, X0
	040 Move X8, [X22]
	041 Move X19, X0
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X0, X21
	048 Move X1, X20
	049 Move X3, X19
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move W2, 231
	055 Move X4, X31
	056 Move X30, [X31+48]
	057 Call Number.ParseSingle, X0, X1, X2
	058 Return V0
	059 Move W0, 48
	060 Call ThrowHelper.ThrowArgumentNullException, X0

Method: System.Single Parse(System.String s, System.Globalization.NumberStyles style, System.IFormatProvider provider)

Disassembly:
	0x0339127C BL 0x33C6930
	0x03391280 MOV X23, X0
	0x03391284 MOV X0, X22
	0x03391288 MOV X1, X31
	0x0339128C BL 0x33C6948
	0x03391290 CMP X0, 0x4
	0x03391294 B.CC 0x33915F8
	0x03391298 MOV X0, X31
	0x0339129C STR X26, [X31 + 0x8]
	0x033912A0 BL 0x32E15B8
	0x033912A4 STR W25, [X31 + 0x14]
	0x033912A8 TBZ X0, 0x0, 0x3391558
	0x033912AC MOV X0, X22
	0x033912B0 MOV X1, X31
	0x033912B4 BL 0x33C6948
	0x033912B8 ADRP X26, 0xD9A000
	0x033912BC LDR X26, [X26 + 0x290]
	0x033912C0 MOV X24, X0
	0x033912C4 LDR X8, [X26]
	0x033912C8 LDR W9, [X8 + 0xE0]
	0x033912CC CBNZ W9, 0x33912D8
	0x033912D0 MOV X0, X8
	0x033912D4 BL 0x1C16DFC
	0x033912D8 ADRP X8, 0xD9A000
	0x033912DC LDR X8, [X8 + 0x280]
	0x033912E0 LDR X21, [X8]
	0x033912E4 LDR X0, [X21 + 0x20]
	0x033912E8 LDRB W8, [X0 + 0x135]
	0x033912EC TBNZ X8, 0x0, 0x33912F4
	0x033912F0 BL 0x1C5C684
	0x033912F4 LDR X8, [X0 + 0xC0]
	0x033912F8 LDR X0, [X8 + 0x8]
	0x033912FC LDRB W8, [X0 + 0x135]
	0x03391300 TBNZ X8, 0x0, 0x3391308
	0x03391304 BL 0x1C5C684
	0x03391308 LDR W8, [X0 + 0xE0]
	0x0339130C CBNZ W8, 0x3391314
	0x03391310 BL 0x1C16DFC
	0x03391314 LDR X0, [X21 + 0x20]
	0x03391318 LDRB W8, [X0 + 0x135]
	0x0339131C TBNZ X8, 0x0, 0x3391324
	0x03391320 BL 0x1C5C684
	0x03391324 LDR X8, [X0 + 0xC0]
	0x03391328 LDR X0, [X8 + 0x8]
	0x0339132C LDRB W8, [X0 + 0x135]
	0x03391330 TBNZ X8, 0x0, 0x3391338
	0x03391334 BL 0x1C5C684
	0x03391338 LDR X8, [X0 + 0xB8]
	0x0339133C LDRSW X8, [X8]
	0x03391340 CMP X24, X8
	0x03391344 B.CC 0x3391558
	0x03391348 LDR X0, [X26]
	0x0339134C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x104D000
	008 Move W8, [X22+63]
	009 Move X20, X2
	010 Move W19, W1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD98000
	017 Move X0, [X0+120]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+63], W8
	021 Move W0, W19
	022 Move X1, X31
	023 Call NumberFormatInfo.ValidateParseStyleFloatingPoint, X0
	024 Compare X21, 0
	025 JumpIfEqual {65}
	026 Move X22, 0x1049000
	027 Move X23, 0xD98000
	028 Move W8, [X22+1890]
	029 Move X23, [X23+120]
	030 Compare W8, 0
	031 JumpIfNotEqual {37}
	032 Move X0, 0xD8A000
	033 Move X0, [X0+656]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X22+1890], W8
	037 Move X0, X21
	038 Move X1, X31
	039 Call String.GetRawStringData, X0
	040 Move W21, [X21+16]
	041 Move X22, X0
	042 Move X0, X20
	043 Move X1, X31
	044 Call NumberFormatInfo.GetInstance, X0
	045 Move X8, [X23]
	046 Move X20, X0
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Move X0, X22
	053 Move X1, X21
	054 Move W2, W19
	055 Move X3, X20
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X4, X31
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Call Number.ParseSingle, X0, X1, X2
	064 Return V0
	065 Move W0, 48
	066 Call ThrowHelper.ThrowArgumentNullException, X0

Method: System.Boolean TryParse(System.String s, out System.Single result)

Disassembly:
	0x03391350 CBNZ W8, 0x3391358
	0x03391354 BL 0x1C16DFC
	0x03391358 ADRP X8, 0xD9A000
	0x0339135C LDR X8, [X8 + 0x280]
	0x03391360 LDR X21, [X8]
	0x03391364 LDR X0, [X21 + 0x20]
	0x03391368 LDRB W8, [X0 + 0x135]
	0x0339136C TBNZ X8, 0x0, 0x3391374
	0x03391370 BL 0x1C5C684
	0x03391374 LDR X8, [X0 + 0xC0]
	0x03391378 LDR X0, [X8 + 0x8]
	0x0339137C LDRB W8, [X0 + 0x135]
	0x03391380 TBNZ X8, 0x0, 0x3391388
	0x03391384 BL 0x1C5C684
	0x03391388 LDR W8, [X0 + 0xE0]
	0x0339138C CBNZ W8, 0x3391394
	0x03391390 BL 0x1C16DFC
	0x03391394 LDR X0, [X21 + 0x20]
	0x03391398 LDRB W8, [X0 + 0x135]
	0x0339139C TBNZ X8, 0x0, 0x33913A4
	0x033913A0 BL 0x1C5C684
	0x033913A4 LDR X8, [X0 + 0xC0]
	0x033913A8 LDR X0, [X8 + 0x8]
	0x033913AC LDRB W8, [X0 + 0x135]
	0x033913B0 TBNZ X8, 0x0, 0x33913B8
	0x033913B4 BL 0x1C5C684
	0x033913B8 LDR X8, [X0 + 0xB8]
	0x033913BC MOV X0, X22
	0x033913C0 MOV X2, X31
	0x033913C4 LDR W1, [X8]
	0x033913C8 BL 0x33C695C
	0x033913CC MOV X24, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X1
	006 Compare X0, 0
	007 JumpIfEqual {34}
	008 Move X21, 0x1049000
	009 Move W8, [X21+1890]
	010 Move X20, X0
	011 Compare W8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, 0xD8A000
	014 Move X0, [X0+656]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1890], W8
	018 Move X0, X20
	019 Move X1, X31
	020 Call String.GetRawStringData, X0
	021 Move W20, [X20+16]
	022 Move X21, X0
	023 Move X0, X31
	024 Call NumberFormatInfo.get_CurrentInfo
	025 Move X1, X20
	026 Move X4, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move W2, 231
	030 Move X3, X0
	031 Move X0, X21
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Move [X19], W31
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return X0

Method: System.Boolean TryParse(System.String s, System.Globalization.NumberStyles style, System.IFormatProvider provider, out System.Single result)

Disassembly:
	0x03391688 CBNZ W8, 0x3391690
	0x0339168C BL 0x1C16DFC
	0x03391690 ADD X0, X20, X23, 0x1, LSL
	0x03391694 MOV W1, W24
	0x03391698 MOV X2, X31
	0x0339169C BL 0x331A770
	0x033916A0 CBNZ W0, 0x33916DC
	0x033916A4 MOVZ W1, 0x1
	0x033916A8 MOV X0, X23
	0x033916AC MOV X2, X31
	0x033916B0 BL 0x33C6954
	0x033916B4 MOV X1, X31
	0x033916B8 MOV X23, X0
	0x033916BC BL 0x33C6948
	0x033916C0 MOV X24, X0
	0x033916C4 MOV X0, X22
	0x033916C8 MOV X1, X31
	0x033916CC BL 0x33C6948
	0x033916D0 CMP X24, X0
	0x033916D4 B.CC 0x339167C
	0x033916D8 B 0x33916E0
	0x033916DC MOV W25, W0
	0x033916E0 LDR X8, [X26 + 0x28]
	0x033916E4 LDR X9, [X31 + 0x28]
	0x033916E8 CMP X8, X9
	0x033916EC B.NE 0x3391714
	0x033916F0 MOV W0, W25
	0x033916F4 LDP X20, X19, [X31 + 0x80]
	0x033916F8 LDP X22, X21, [X31 + 0x70]
	0x033916FC LDP X24, X23, [X31 + 0x60]
	0x03391700 LDP X26, X25, [X31 + 0x50]
	0x03391704 LDP X28, X27, [X31 + 0x40]
	0x03391708 LDP X29, X30, [X31 + 0x30]
	0x0339170C ADD X31, X31, 0x90
	0x03391710 RET
	0x03391714 BL 0x3EB1B20
	0x03391718 SUB X31, X31, 0xB0
	0x0339171C STP X29, X30, [X31 + 0x50]
	0x03391720 STP X28, X27, [X31 + 0x60]
	0x03391724 STP X26, X25, [X31 + 0x70]
	0x03391728 STP X24, X23, [X31 + 0x80]
	0x0339172C STP X22, X21, [X31 + 0x90]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W20, W1
	008 Move X22, X0
	009 Move W0, W1
	010 Move X1, X31
	011 Move X19, X3
	012 Move X21, X2
	013 Call NumberFormatInfo.ValidateParseStyleFloatingPoint, X0
	014 Compare X22, 0
	015 JumpIfEqual {46}
	016 Move X23, 0x1049000
	017 Move W8, [X23+1890]
	018 Compare W8, 0
	019 JumpIfNotEqual {25}
	020 Move X0, 0xD8A000
	021 Move X0, [X0+656]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+1890], W8
	025 Move X0, X22
	026 Move X1, X31
	027 Call String.GetRawStringData, X0
	028 Move W22, [X22+16]
	029 Move X23, X0
	030 Move X0, X21
	031 Move X1, X31
	032 Call NumberFormatInfo.GetInstance, X0
	033 Move X1, X22
	034 Move W2, W20
	035 Move X4, X19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X3, X0
	041 Move X0, X23
	042 Move X30, [X31+48]
	043 Move X23, [X31+56]
	044 Call Single.TryParse, X0, X1, X2, X3
	045 Return X0
	046 Move [X19], W31
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move W0, W31
	052 Move X30, [X31+48]
	053 Move X23, [X31+56]
	054 Return X0

Method: System.Boolean TryParse(System.ReadOnlySpan`1<System.Char> s, System.Globalization.NumberStyles style, System.Globalization.NumberFormatInfo info, out System.Single result)

Disassembly:
	0x033913D0 LDR X0, [X26]
	0x033913D4 ADD X8, X20, X23, 0x1, LSL
	0x033913D8 ADD X9, X19, X23, 0x1, LSL
	0x033913DC MOV X27, X26
	0x033913E0 LDP X21, X29, [X8]
	0x033913E4 LDR W8, [X0 + 0xE0]
	0x033913E8 LDP X26, X25, [X9]
	0x033913EC CBNZ W8, 0x33913F4
	0x033913F0 BL 0x1C16DFC
	0x033913F4 ADRP X8, 0xD9A000
	0x033913F8 LDR X8, [X8 + 0x288]
	0x033913FC LDR X28, [X8]
	0x03391400 LDR X0, [X28 + 0x20]
	0x03391404 LDRB W8, [X0 + 0x135]
	0x03391408 TBNZ X8, 0x0, 0x3391410
	0x0339140C BL 0x1C5C684
	0x03391410 LDR X8, [X0 + 0xC0]
	0x03391414 LDR X0, [X8 + 0x8]
	0x03391418 LDRB W8, [X0 + 0x135]
	0x0339141C TBNZ X8, 0x0, 0x3391424
	0x03391420 BL 0x1C5C684
	0x03391424 LDR W8, [X0 + 0xE0]
	0x03391428 CBNZ W8, 0x3391430
	0x0339142C BL 0x1C16DFC
	0x03391430 LDR X0, [X28 + 0x20]
	0x03391434 LDRB W8, [X0 + 0x135]
	0x03391438 TBNZ X8, 0x0, 0x3391440
	0x0339143C BL 0x1C5C684
	0x03391440 LDR X8, [X0 + 0xC0]
	0x03391444 LDR X28, [X8 + 0x58]
	0x03391448 STP X21, X29, [X31 + 0x18]
	0x0339144C LDR X0, [X28 + 0x20]
	0x03391450 LDRB W8, [X0 + 0x135]
	0x03391454 TBNZ X8, 0x0, 0x339145C
	0x03391458 BL 0x1C5C684
	0x0339145C LDR X8, [X0 + 0xC0]
	0x03391460 LDR X0, [X8 + 0x8]
	0x03391464 LDRB W8, [X0 + 0x135]
	0x03391468 TBNZ X8, 0x0, 0x3391470
	0x0339146C BL 0x1C5C684
	0x03391470 LDR W8, [X0 + 0xE0]
	0x03391474 CBNZ W8, 0x339147C
	0x03391478 BL 0x1C16DFC
	0x0339147C LDR X0, [X28 + 0x20]
	0x03391480 LDRB W8, [X0 + 0x135]
	0x03391484 TBNZ X8, 0x0, 0x339148C
	0x03391488 BL 0x1C5C684
	0x0339148C LDR X8, [X0 + 0xC0]
	0x03391490 ADD X0, X31, 0x18
	0x03391494 MOV X1, X26
	0x03391498 MOV X2, X25
	0x0339149C LDR X3, [X8 + 0x38]
	0x033914A0 BL 0x2822174
	0x033914A4 TBZ X0, 0x0, 0x3391558
	0x033914A8 LDR X0, [X27]
	0x033914AC MOV X26, X27
	0x033914B0 LDR W8, [X0 + 0xE0]
	0x033914B4 CBNZ W8, 0x33914BC
	0x033914B8 BL 0x1C16DFC
	0x033914BC ADRP X8, 0xD9A000
	0x033914C0 LDR X8, [X8 + 0x280]
	0x033914C4 LDR X21, [X8]
	0x033914C8 LDR X0, [X21 + 0x20]
	0x033914CC LDRB W8, [X0 + 0x135]
	0x033914D0 TBNZ X8, 0x0, 0x33914D8
	0x033914D4 BL 0x1C5C684
	0x033914D8 LDR X8, [X0 + 0xC0]
	0x033914DC LDR X0, [X8 + 0x8]
	0x033914E0 LDRB W8, [X0 + 0x135]
	0x033914E4 TBNZ X8, 0x0, 0x33914EC
	0x033914E8 BL 0x1C5C684
	0x033914EC LDR W8, [X0 + 0xE0]
	0x033914F0 CBNZ W8, 0x33914F8
	0x033914F4 BL 0x1C16DFC
	0x033914F8 LDR X0, [X21 + 0x20]
	0x033914FC LDRB W8, [X0 + 0x135]
	0x03391500 TBNZ X8, 0x0, 0x3391508
	0x03391504 BL 0x1C5C684
	0x03391508 LDR X8, [X0 + 0xC0]
	0x0339150C LDR X0, [X8 + 0x8]
	0x03391510 LDRB W8, [X0 + 0x135]
	0x03391514 TBNZ X8, 0x0, 0x339151C
	0x03391518 BL 0x1C5C684
	0x0339151C LDR X8, [X0 + 0xB8]
	0x03391520 MOV X0, X23
	0x03391524 MOV X2, X31
	0x03391528 LDR W1, [X8]
	0x0339152C BL 0x33C6954
	0x03391530 MOV X23, X0
	0x03391534 MOV X0, X24
	0x03391538 MOV X1, X31
	0x0339153C BL 0x33C6948
	0x03391540 MOV X25, X0
	0x03391544 MOV X0, X23
	0x03391548 MOV X1, X31
	0x0339154C BL 0x33C6948
	0x03391550 CMP X25, X0
	0x03391554 B.CS 0x33913D0
	0x03391558 MOV X0, X22
	0x0339155C MOV X1, X31
	0x03391560 BL 0x33C6948
	0x03391564 MOV X24, X0
	0x03391568 MOVZ W1, 0x4
	0x0339156C MOV X0, X23
	0x03391570 MOV X2, X31
	0x03391574 BL 0x33C6954
	0x03391578 MOV X1, X31
	0x0339157C BL 0x33C6948
	0x03391580 CMP X24, X0
	0x03391584 B.CS 0x3391594
	0x03391588 LDR W25, [X31 + 0x14]
	0x0339158C LDR X26, [X31 + 0x8]
	0x03391590 B 0x33915F8
	0x03391594 LDR W25, [X31 + 0x14]
	0x03391598 LDR X26, [X31 + 0x8]
	0x0339159C UBFM X8, X23, 0x3F, 0x3E
	0x033915A0 LDR X0, [X20, X8, LSL]
	0x033915A4 LDR X1, [X19, X8, LSL]
	0x033915A8 MOV X2, X31
	0x033915AC BL 0x33D539C
	0x033915B0 TBNZ X0, 0x0, 0x33915F8
	0x033915B4 MOVZ W1, 0x4
	0x033915B8 MOV X0, X23
	0x033915BC MOV X2, X31
	0x033915C0 BL 0x33C6954
	0x033915C4 MOV X23, X0
	0x033915C8 MOV X0, X22
	0x033915CC MOV X1, X31
	0x033915D0 BL 0x33C6948
	0x033915D4 MOV X24, X0
	0x033915D8 MOVZ W1, 0x4
	0x033915DC MOV X0, X23
	0x033915E0 MOV X2, X31
	0x033915E4 BL 0x33C6954
	0x033915E8 MOV X1, X31
	0x033915EC BL 0x33C6948
	0x033915F0 CMP X24, X0
	0x033915F4 B.CS 0x339159C
	0x033915F8 MOV X0, X22
	0x033915FC MOV X1, X31
	0x03391600 BL 0x33C6948
	0x03391604 MOV X24, X0
	0x03391608 MOVZ W1, 0x2
	0x0339160C MOV X0, X23
	0x03391610 MOV X2, X31
	0x03391614 BL 0x33C6954
	0x03391618 MOV X1, X31
	0x0339161C BL 0x33C6948
	0x03391620 CMP X24, X0
	0x03391624 B.CC 0x3391650
	0x03391628 UBFM X8, X23, 0x3F, 0x3E
	0x0339162C LDR W9, [X20, X8, LSL]
	0x03391630 LDR W8, [X19, X8, LSL]
	0x03391634 CMP W9, W8
	0x03391638 B.NE 0x3391650
	0x0339163C MOVZ W1, 0x2
	0x03391640 MOV X0, X23
	0x03391644 MOV X2, X31
	0x03391648 BL 0x33C6954
	0x0339164C MOV X23, X0
	0x03391650 MOV X0, X23
	0x03391654 MOV X1, X31
	0x03391658 BL 0x33C6948
	0x0339165C MOV X24, X0
	0x03391660 MOV X0, X22
	0x03391664 MOV X1, X31
	0x03391668 BL 0x33C6948
	0x0339166C CMP X24, X0
	0x03391670 B.CS 0x33916E0
	0x03391674 ADRP X21, 0xD64000
	0x03391678 LDR X21, [X21 + 0x170]
	0x0339167C LDR X0, [X21]
	0x03391680 LDRH W24, [X19, X23, LSL #1]
	0x03391684 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x104D000
	011 Move X24, 0xD98000
	012 Move W8, [X25+64]
	013 Move X24, [X24+120]
	014 Move X19, X4
	015 Move X22, X3
	016 Move W23, W2
	017 Move X20, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xD98000
	024 Move X0, [X0+120]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X25+64], W8
	028 Move X0, [X24]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X21
	034 Move X1, X20
	035 Move W2, W23
	036 Move X3, X22
	037 Move X4, X19
	038 Move X5, X31
	039 Call Number.TryParseSingle, X0, X1, X2, X3
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {193}
	044 Move X0, X21
	045 Move X1, X20
	046 Move X2, X31
	047 Call MemoryExtensions.Trim, X0
	048 Compare X22, 0
	049 JumpIfEqual {205}
	050 Move X26, 0x1049000
	051 Move W8, [X26+1890]
	052 Move X23, [X22+112]
	053 Move X20, X0
	054 Move X21, X1
	055 Compare W8, 0
	056 JumpIfEqual {64}
	057 Compare X23, 0
	058 JumpIfEqual {71}
	059 Move X0, X23
	060 Move X1, X31
	061 Call String.GetRawStringData, X0
	062 Move W23, [X23+16]
	063 Move X24, X0
	064 Move X0, 0xD8A000
	065 Move X0, [X0+656]
	066 Call 0x1C17CF4
	067 Move W8, 1
	068 Move [X26+1890], W8
	069 Compare X23, 0
	070 JumpIfNotEqual {59}
	071 Move X24, X31
	072 Move X25, 0x104C000
	073 Move W8, [X25+3334]
	074 Compare W8, 0
	075 JumpIfNotEqual {84}
	076 Move X0, 0xD8A000
	077 Move X0, [X0+720]
	078 Call 0x1C17CF4
	079 Move X0, 0xD92000
	080 Move X0, [X0+40]
	081 Call 0x1C17CF4
	082 Move W8, 1
	083 Move [X25+3334], W8
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Compare W21, 0
	086 JumpIfEqual {99}
	087 Move X8, 0xD8A000
	088 Move X8, [X8+720]
	089 Move X0, X20
	090 Move X1, X21
	091 Move X2, X24
	092 Move X4, [X8]
	093 Move X3, X23
	094 Call 0x1F97ECC
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {100}
	099 Move W8, 0x7F800000
	100 Move W8, [X26+1890]
	101 Move X23, [X22+120]
	102 Compare W8, 0
	103 JumpIfEqual {111}
	104 Compare X23, 0
	105 JumpIfEqual {118}
	106 Move X0, X23
	107 Move X1, X31
	108 Call String.GetRawStringData, X0
	109 Move W23, [X23+16]
	110 Move X24, X0
	111 Move X0, 0xD8A000
	112 Move X0, [X0+656]
	113 Call 0x1C17CF4
	114 Move W8, 1
	115 Move [X26+1890], W8
	116 Compare X23, 0
	117 JumpIfNotEqual {106}
	118 Move X24, X31
	119 Move W8, [X25+3334]
	120 Compare W8, 0
	121 JumpIfNotEqual {130}
	122 Move X0, 0xD8A000
	123 Move X0, [X0+720]
	124 Call 0x1C17CF4
	125 Move X0, 0xD92000
	126 Move X0, [X0+40]
	127 Call 0x1C17CF4
	128 Move W8, 1
	129 Move [X25+3334], W8
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Compare W21, 0
	132 JumpIfEqual {145}
	133 Move X8, 0xD8A000
	134 Move X8, [X8+720]
	135 Move X0, X20
	136 Move X1, X21
	137 Move X2, X24
	138 Move X4, [X8]
	139 Move X3, X23
	140 Call 0x1F97ECC
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {146}
	145 Move W8, 0xFF800000
	146 Move W8, [X26+1890]
	147 Move X22, [X22+104]
	148 Compare W8, 0
	149 JumpIfEqual {157}
	150 Compare X22, 0
	151 JumpIfEqual {164}
	152 Move X0, X22
	153 Move X1, X31
	154 Call String.GetRawStringData, X0
	155 Move W22, [X22+16]
	156 Move X23, X0
	157 Move X0, 0xD8A000
	158 Move X0, [X0+656]
	159 Call 0x1C17CF4
	160 Move W8, 1
	161 Move [X26+1890], W8
	162 Compare X22, 0
	163 JumpIfNotEqual {152}
	164 Move X23, X31
	165 Move W8, [X25+3334]
	166 Compare W8, 0
	167 JumpIfNotEqual {176}
	168 Move X0, 0xD8A000
	169 Move X0, [X0+720]
	170 Call 0x1C17CF4
	171 Move X0, 0xD92000
	172 Move X0, [X0+40]
	173 Call 0x1C17CF4
	174 Move W8, 1
	175 Move [X25+3334], W8
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Compare W21, 0
	178 JumpIfEqual {191}
	179 Move X8, 0xD8A000
	180 Move X8, [X8+720]
	181 Move X0, X20
	182 Move X1, X21
	183 Move X2, X23
	184 Move X4, [X8]
	185 Move X3, X22
	186 Call 0x1F97ECC
	187 Move TEMP, X0
	188 And TEMP, TEMP, 1
	189 Compare TEMP, 1
	190 JumpIfNotEqual {204}
	191 Move W8, 0x7FC00000
	192 Move [X19], W8
	193 Move W0, 1
	194 Move X20, [X31+64]
	195 Move X19, [X31+72]
	196 Move X22, [X31+48]
	197 Move X21, [X31+56]
	198 Move X24, [X31+32]
	199 Move X23, [X31+40]
	200 Move X26, [X31+16]
	201 Move X25, [X31+24]
	202 Move X30, [X31+80]
	203 Return X0
	204 Move W0, W31
	205 Call 0x1C17F20

Method: System.TypeCode GetTypeCode()

Disassembly:
	0x03391730 STP X20, X19, [X31 + 0xA0]
	0x03391734 MRS X8, 0xC000

ISIL:
	001 Move W0, 13
	002 Return X0

Method: System.Boolean System.IConvertible.ToBoolean(System.IFormatProvider provider)

Disassembly:
	0x03391738 STR X8, [X31 + 0x18]
	0x0339173C LDR X8, [X8 + 0x28]
	0x03391740 ADRP X19, 0x104C000
	0x03391744 MOV W21, W2
	0x03391748 MOV W20, W1
	0x0339174C STR X8, [X31 + 0x48]
	0x03391750 LDRB W8, [X19 + 0x4E]
	0x03391754 MOV X23, X0
	0x03391758 TBNZ X8, 0x0, 0x33917AC
	0x0339175C ADRP X0, 0xD9A000
	0x03391760 LDR X0, [X0 + 0x298]
	0x03391764 BL 0x1C16CF4
	0x03391768 ADRP X0, 0xD9A000
	0x0339176C LDR X0, [X0 + 0x2A0]
	0x03391770 BL 0x1C16CF4
	0x03391774 ADRP X0, 0xD9A000
	0x03391778 LDR X0, [X0 + 0x280]
	0x0339177C BL 0x1C16CF4
	0x03391780 ADRP X0, 0xD9A000
	0x03391784 LDR X0, [X0 + 0x2A8]
	0x03391788 BL 0x1C16CF4
	0x0339178C ADRP X0, 0xD9A000
	0x03391790 LDR X0, [X0 + 0x290]
	0x03391794 BL 0x1C16CF4
	0x03391798 ADRP X0, 0xD9A000

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x104D000
	007 Move X20, 0xD6C000
	008 Move W8, [X21+65]
	009 Move X20, [X20+2536]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD6C000
	016 Move X0, [X0+2536]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+65], W8
	020 Move X0, [X20]
	021 Move V8, [X19]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X30, [X31+16]
	029 Move X21, [X31+24]
	030 Move V0, V8
	031 Move X0, X31
	032 Move V8, [X31+48]
	033 Call Convert.ToBoolean, V0
	034 Return X0

Method: System.Char System.IConvertible.ToChar(System.IFormatProvider provider)

Disassembly:
	0x0339179C LDR X0, [X0 + 0x2B0]
	0x033917A0 BL 0x1C16CF4
	0x033917A4 MOVZ W8, 0x1
	0x033917A8 STRB W8, [X19 + 0x4E]
	0x033917AC ADRP X27, 0xD9A000
	0x033917B0 ADRP X28, 0xD9A000
	0x033917B4 LDR X27, [X27 + 0x290]
	0x033917B8 LDR X28, [X28 + 0x280]
	0x033917BC MOV X0, X31
	0x033917C0 STP X31, X31, [X31 + 0x38]
	0x033917C4 STP X31, X31, [X31 + 0x20]
	0x033917C8 BL 0x32E15B8
	0x033917CC MOV W8, W21
	0x033917D0 TBZ X0, 0x0, 0x3391938
	0x033917D4 LDR X0, [X27]
	0x033917D8 LDR W8, [X0 + 0xE0]
	0x033917DC CBNZ W8, 0x33917E4
	0x033917E0 BL 0x1C16DFC
	0x033917E4 LDR X19, [X28]
	0x033917E8 LDR X0, [X19 + 0x20]
	0x033917EC LDRB W8, [X0 + 0x135]
	0x033917F0 TBNZ X8, 0x0, 0x33917F8
	0x033917F4 BL 0x1C5C684
	0x033917F8 LDR X8, [X0 + 0xC0]
	0x033917FC LDR X0, [X8 + 0x8]
	0x03391800 LDRB W8, [X0 + 0x135]
	0x03391804 TBNZ X8, 0x0, 0x339180C
	0x03391808 BL 0x1C5C684
	0x0339180C LDR W8, [X0 + 0xE0]
	0x03391810 CBNZ W8, 0x3391818
	0x03391814 BL 0x1C16DFC
	0x03391818 LDR X0, [X19 + 0x20]
	0x0339181C LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xD98000
	005 Move X0, [X0+48]
	006 Call 0x1C17D08
	007 Move X19, X0
	008 Move X0, 0xD95000
	009 Move X0, [X0+232]
	010 Call 0x1C17D08
	011 Move X20, X0
	012 Move X0, 0xD95000
	013 Move X0, [X0+224]
	014 Call 0x1C17D08
	015 Move X2, X0
	016 Move X0, X19
	017 Move X1, X20
	018 Move X3, X31
	019 Call SR.Format, X0, X1, X2
	020 Move X19, X0
	021 Move X0, 0xD6B000
	022 Move X0, [X0+3080]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X2, X31
	027 Move X20, X0
	028 Call InvalidCastException..ctor, X0, X1
	029 Move X0, 0xD9B000
	030 Move X0, [X0+624]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X20
	034 Call 0x1C17DEC

Method: System.SByte System.IConvertible.ToSByte(System.IFormatProvider provider)

Disassembly:
	0x03391820 TBNZ X8, 0x0, 0x3391828
	0x03391824 BL 0x1C5C684
	0x03391828 LDR X8, [X0 + 0xC0]
	0x0339182C LDR X0, [X8 + 0x8]
	0x03391830 LDRB W8, [X0 + 0x135]
	0x03391834 TBNZ X8, 0x0, 0x339183C
	0x03391838 BL 0x1C5C684
	0x0339183C LDR X8, [X0 + 0xB8]
	0x03391840 LDR W8, [X8]
	0x03391844 CMP W21, W8, LSL
	0x03391848 MOV W8, W21
	0x0339184C B.LT 0x3391938
	0x03391850 LDR X0, [X27]
	0x03391854 LDR W8, [X0 + 0xE0]
	0x03391858 CBNZ W8, 0x3391860
	0x0339185C BL 0x1C16DFC
	0x03391860 LDR X19, [X28]
	0x03391864 LDR X0, [X19 + 0x20]
	0x03391868 LDRB W8, [X0 + 0x135]
	0x0339186C TBNZ X8, 0x0, 0x3391874
	0x03391870 BL 0x1C5C684
	0x03391874 LDR X8, [X0 + 0xC0]
	0x03391878 LDR X0, [X8 + 0x8]
	0x0339187C LDRB W8, [X0 + 0x135]
	0x03391880 TBNZ X8, 0x0, 0x3391888

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x104D000
	007 Move X20, 0xD6C000
	008 Move W8, [X21+66]
	009 Move X20, [X20+2536]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD6C000
	016 Move X0, [X0+2536]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+66], W8
	020 Move X0, [X20]
	021 Move V8, [X19]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X30, [X31+16]
	029 Move X21, [X31+24]
	030 Move V0, V8
	031 Move X0, X31
	032 Move V8, [X31+48]
	033 Call Convert.ToSByte, V0
	034 Return X0

Method: System.Byte System.IConvertible.ToByte(System.IFormatProvider provider)

Disassembly:
	0x03391884 BL 0x1C5C684
	0x03391888 LDR W8, [X0 + 0xE0]
	0x0339188C CBNZ W8, 0x3391894
	0x03391890 BL 0x1C16DFC
	0x03391894 LDR X0, [X19 + 0x20]
	0x03391898 LDRB W8, [X0 + 0x135]
	0x0339189C TBNZ X8, 0x0, 0x33918A4
	0x033918A0 BL 0x1C5C684
	0x033918A4 LDR X8, [X0 + 0xC0]
	0x033918A8 LDR X0, [X8 + 0x8]
	0x033918AC LDRB W8, [X0 + 0x135]
	0x033918B0 TBNZ X8, 0x0, 0x33918B8
	0x033918B4 BL 0x1C5C684
	0x033918B8 LDR X22, [X28]
	0x033918BC LDR X9, [X0 + 0xB8]
	0x033918C0 LDR X8, [X22 + 0x20]
	0x033918C4 LDR W19, [X9]
	0x033918C8 LDRB W10, [X8 + 0x135]
	0x033918CC TBNZ X10, 0x0, 0x33918DC
	0x033918D0 MOV X0, X8
	0x033918D4 BL 0x1C5C684
	0x033918D8 MOV X8, X0
	0x033918DC LDR X8, [X8 + 0xC0]
	0x033918E0 LDR X0, [X8 + 0x8]
	0x033918E4 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x104D000
	007 Move X20, 0xD6C000
	008 Move W8, [X21+67]
	009 Move X20, [X20+2536]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD6C000
	016 Move X0, [X0+2536]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+67], W8
	020 Move X0, [X20]
	021 Move V8, [X19]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X30, [X31+16]
	029 Move X21, [X31+24]
	030 Move V0, V8
	031 Move X0, X31
	032 Move V8, [X31+48]
	033 Call Convert.ToByte, V0
	034 Return X0

Method: System.Int16 System.IConvertible.ToInt16(System.IFormatProvider provider)

Disassembly:
	0x033918E8 TBNZ X8, 0x0, 0x33918F0
	0x033918EC BL 0x1C5C684
	0x033918F0 LDR W8, [X0 + 0xE0]
	0x033918F4 CBNZ W8, 0x33918FC
	0x033918F8 BL 0x1C16DFC
	0x033918FC LDR X0, [X22 + 0x20]
	0x03391900 LDRB W8, [X0 + 0x135]
	0x03391904 TBNZ X8, 0x0, 0x339190C
	0x03391908 BL 0x1C5C684
	0x0339190C LDR X8, [X0 + 0xC0]
	0x03391910 UBFM W22, W23, 0x1, 0x3
	0x03391914 LDR X0, [X8 + 0x8]
	0x03391918 LDRB W8, [X0 + 0x135]
	0x0339191C TBNZ X8, 0x0, 0x3391924
	0x03391920 BL 0x1C5C684
	0x03391924 LDR X8, [X0 + 0xB8]
	0x03391928 SUB W9, W19, W22
	0x0339192C LDR W8, [X8]
	0x03391930 SUB W8, W8, 0x1
	0x03391934 AND W8, W8, W9, 0x0
	0x03391938 ADRP X26, 0xD9A000
	0x0339193C LDR X26, [X26 + 0x298]
	0x03391940 ADD X19, X23, W21, 0x1, SXTW
	0x03391944 STR X23, [X31 + 0x10]
	0x03391948 MOV X29, X23

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x104D000
	007 Move X20, 0xD6C000
	008 Move W8, [X21+68]
	009 Move X20, [X20+2536]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD6C000
	016 Move X0, [X0+2536]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+68], W8
	020 Move X0, [X20]
	021 Move V8, [X19]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X30, [X31+16]
	029 Move X21, [X31+24]
	030 Move V0, V8
	031 Move X0, X31
	032 Move V8, [X31+48]
	033 Call Convert.ToInt16, V0
	034 Return X0

Method: System.UInt16 System.IConvertible.ToUInt16(System.IFormatProvider provider)

Disassembly:
	0x0339194C CMP W8, 0x3
	0x03391950 B.LE 0x3391994
	0x03391954 LDRH W9, [X29]
	0x03391958 CMP W9, W20, UXTH
	0x0339195C B.EQ 0x3391CBC
	0x03391960 MOV X9, X29
	0x03391964 LDRH W10, [X9 + 0x2]!
	0x03391968 CMP W10, W20, UXTH
	0x0339196C B.EQ 0x3391CAC
	0x03391970 LDRH W10, [X29 + 0x4]
	0x03391974 CMP W10, W20, UXTH
	0x03391978 B.EQ 0x3391CB8
	0x0339197C LDRH W9, [X29 + 0x6]
	0x03391980 CMP W9, W20, UXTH
	0x03391984 B.EQ 0x3391CB4
	0x03391988 SUB W8, W8, 0x4
	0x0339198C ADD X29, X29, 0x8
	0x03391990 B 0x339194C
	0x03391994 CMP W8, 0x1
	0x03391998 B.LT 0x33919BC
	0x0339199C ADD W8, W8, 0x1
	0x033919A0 LDRH W9, [X29]
	0x033919A4 CMP W9, W20, UXTH
	0x033919A8 B.EQ 0x3391CBC
	0x033919AC SUB W8, W8, 0x1

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x104D000
	007 Move X20, 0xD6C000
	008 Move W8, [X21+69]
	009 Move X20, [X20+2536]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD6C000
	016 Move X0, [X0+2536]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+69], W8
	020 Move X0, [X20]
	021 Move V8, [X19]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X30, [X31+16]
	029 Move X21, [X31+24]
	030 Move V0, V8
	031 Move X0, X31
	032 Move V8, [X31+48]
	033 Call Convert.ToUInt16, V0
	034 Return X0

Method: System.Int32 System.IConvertible.ToInt32(System.IFormatProvider provider)

Disassembly:
	0x033919B0 CMP W8, 0x1
	0x033919B4 ADD X29, X29, 0x2
	0x033919B8 B.GT 0x33919A0
	0x033919BC MOV X0, X31
	0x033919C0 BL 0x32E15B8
	0x033919C4 TBZ X0, 0x0, 0x3391CA4
	0x033919C8 STR X19, [X31 + 0x8]
	0x033919CC SUBS X19, X19, X29
	0x033919D0 B.LS 0x3391CA4
	0x033919D4 LDR X0, [X27]
	0x033919D8 LDR W8, [X0 + 0xE0]
	0x033919DC CBNZ W8, 0x33919E4
	0x033919E0 BL 0x1C16DFC
	0x033919E4 LDR X21, [X28]
	0x033919E8 LDR X0, [X21 + 0x20]
	0x033919EC LDRB W8, [X0 + 0x135]
	0x033919F0 TBNZ X8, 0x0, 0x33919F8
	0x033919F4 BL 0x1C5C684
	0x033919F8 LDR X8, [X0 + 0xC0]
	0x033919FC LDR X0, [X8 + 0x8]
	0x03391A00 LDRB W8, [X0 + 0x135]
	0x03391A04 TBNZ X8, 0x0, 0x3391A0C
	0x03391A08 BL 0x1C5C684
	0x03391A0C LDR W8, [X0 + 0xE0]
	0x03391A10 CBNZ W8, 0x3391A18

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x104D000
	007 Move X20, 0xD6C000
	008 Move W8, [X21+70]
	009 Move X20, [X20+2536]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD6C000
	016 Move X0, [X0+2536]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+70], W8
	020 Move X0, [X20]
	021 Move V8, [X19]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X30, [X31+16]
	029 Move X21, [X31+24]
	030 Move V0, V8
	031 Move X0, X31
	032 Move V8, [X31+48]
	033 Call Convert.ToInt32, V0
	034 Return X0

Method: System.UInt32 System.IConvertible.ToUInt32(System.IFormatProvider provider)

Disassembly:
	0x03391A14 BL 0x1C16DFC
	0x03391A18 LDR X0, [X21 + 0x20]
	0x03391A1C LDRB W8, [X0 + 0x135]
	0x03391A20 TBNZ X8, 0x0, 0x3391A28
	0x03391A24 BL 0x1C5C684
	0x03391A28 LDR X8, [X0 + 0xC0]
	0x03391A2C LDR X0, [X8 + 0x8]
	0x03391A30 LDRB W8, [X0 + 0x135]
	0x03391A34 TBNZ X8, 0x0, 0x3391A3C
	0x03391A38 BL 0x1C5C684
	0x03391A3C LDR X8, [X0 + 0xB8]
	0x03391A40 ADRP X10, 0xD9A000
	0x03391A44 CMP X19, 0x0
	0x03391A48 CINC X9, X19, LT
	0x03391A4C LDR W8, [X8]
	0x03391A50 LDR X10, [X10 + 0x2A0]
	0x03391A54 UBFM X9, X9, 0x1, 0x3F
	0x03391A58 ADD X0, X31, 0x38
	0x03391A5C SUB W8, W31, W8
	0x03391A60 LDR X2, [X10]
	0x03391A64 MOV W1, W20
	0x03391A68 AND W19, W8, W9, 0x0
	0x03391A6C BL 0x281EB6C
	0x03391A70 CMP W19, 0x1
	0x03391A74 B.LT 0x3391C5C

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x104D000
	007 Move X20, 0xD6C000
	008 Move W8, [X21+71]
	009 Move X20, [X20+2536]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD6C000
	016 Move X0, [X0+2536]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+71], W8
	020 Move X0, [X20]
	021 Move V8, [X19]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X30, [X31+16]
	029 Move X21, [X31+24]
	030 Move V0, V8
	031 Move X0, X31
	032 Move V8, [X31+48]
	033 Call Convert.ToUInt32, V0
	034 Return X0

Method: System.Int64 System.IConvertible.ToInt64(System.IFormatProvider provider)

Disassembly:
	0x03391A78 ADRP X8, 0xD9A000
	0x03391A7C LDR X8, [X8 + 0x2B0]
	0x03391A80 LDP X24, X22, [X31 + 0x38]
	0x03391A84 LDP X23, X21, [X29]
	0x03391A88 LDR X25, [X8]
	0x03391A8C LDR X8, [X25 + 0x38]
	0x03391A90 CBNZ X8, 0x3391AA0
	0x03391A94 MOV X0, X25
	0x03391A98 BL 0x1C5C6E0
	0x03391A9C LDR X8, [X25 + 0x38]
	0x03391AA0 LDR X0, [X8 + 0x10]
	0x03391AA4 LDRB W8, [X0 + 0x135]
	0x03391AA8 TBNZ X8, 0x0, 0x3391AB0
	0x03391AAC BL 0x1C5C684
	0x03391AB0 LDR W8, [X0 + 0xE0]
	0x03391AB4 CBNZ W8, 0x3391ABC
	0x03391AB8 BL 0x1C16DFC
	0x03391ABC LDR X8, [X25 + 0x38]
	0x03391AC0 MOV X0, X24
	0x03391AC4 MOV X1, X22
	0x03391AC8 MOV X2, X23
	0x03391ACC LDR X4, [X8 + 0x8]
	0x03391AD0 MOV X3, X21
	0x03391AD4 BL 0x22BA330
	0x03391AD8 MOV X21, X0

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x104D000
	007 Move X20, 0xD6C000
	008 Move W8, [X21+72]
	009 Move X20, [X20+2536]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD6C000
	016 Move X0, [X0+2536]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+72], W8
	020 Move X0, [X20]
	021 Move V8, [X19]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X30, [X31+16]
	029 Move X21, [X31+24]
	030 Move V0, V8
	031 Move X0, X31
	032 Move V8, [X31+48]
	033 Call Convert.ToInt64, V0
	034 Return X0

Method: System.UInt64 System.IConvertible.ToUInt64(System.IFormatProvider provider)

Disassembly:
	0x03391ADC LDR X0, [X27]
	0x03391AE0 MOV X22, X1
	0x03391AE4 LDR W8, [X0 + 0xE0]
	0x03391AE8 CBNZ W8, 0x3391AF0
	0x03391AEC BL 0x1C16DFC
	0x03391AF0 ADRP X8, 0xD9A000
	0x03391AF4 LDR X8, [X8 + 0x2A8]
	0x03391AF8 LDR X23, [X8]
	0x03391AFC LDR X0, [X23 + 0x20]
	0x03391B00 LDRB W8, [X0 + 0x135]
	0x03391B04 TBNZ X8, 0x0, 0x3391B0C
	0x03391B08 BL 0x1C5C684
	0x03391B0C LDR X8, [X0 + 0xC0]
	0x03391B10 LDR X0, [X8 + 0x8]
	0x03391B14 LDRB W8, [X0 + 0x135]
	0x03391B18 TBNZ X8, 0x0, 0x3391B20
	0x03391B1C BL 0x1C5C684
	0x03391B20 LDR W8, [X0 + 0xE0]
	0x03391B24 CBNZ W8, 0x3391B2C
	0x03391B28 BL 0x1C16DFC
	0x03391B2C LDR X0, [X23 + 0x20]
	0x03391B30 LDRB W8, [X0 + 0x135]
	0x03391B34 TBNZ X8, 0x0, 0x3391B3C
	0x03391B38 BL 0x1C5C684
	0x03391B3C LDR X8, [X0 + 0xC0]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x104D000
	007 Move X20, 0xD6C000
	008 Move W8, [X21+73]
	009 Move X20, [X20+2536]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD6C000
	016 Move X0, [X0+2536]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+73], W8
	020 Move X0, [X20]
	021 Move V8, [X19]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X30, [X31+16]
	029 Move X21, [X31+24]
	030 Move V0, V8
	031 Move X0, X31
	032 Move V8, [X31+48]
	033 Call Convert.ToUInt64, V0
	034 Return X0

Method: System.Single System.IConvertible.ToSingle(System.IFormatProvider provider)

Disassembly:
	0x03391B40 LDR X0, [X8 + 0x8]
	0x03391B44 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move V0, [X0]
	002 Return V0

Method: System.Double System.IConvertible.ToDouble(System.IFormatProvider provider)

Disassembly:
	0x03391B48 TBNZ X8, 0x0, 0x3391B50
	0x03391B4C BL 0x1C5C684
	0x03391B50 LDR X8, [X0 + 0xB8]
	0x03391B54 LDR X3, [X26]
	0x03391B58 ADD X0, X31, 0x20
	0x03391B5C MOV X1, X21
	0x03391B60 LDUR V0, [X8 + 0x8]
	0x03391B64 MOV X2, X22
	0x03391B68 STR V0, [X31 + 0x2]
	0x03391B6C BL 0x2822174
	0x03391B70 TBZ X0, 0x0, 0x3391C78
	0x03391B74 LDR X0, [X27]
	0x03391B78 LDR W8, [X0 + 0xE0]
	0x03391B7C CBNZ W8, 0x3391B84
	0x03391B80 BL 0x1C16DFC
	0x03391B84 LDR X21, [X28]
	0x03391B88 LDR X0, [X21 + 0x20]
	0x03391B8C LDRB W8, [X0 + 0x135]
	0x03391B90 TBNZ X8, 0x0, 0x3391B98
	0x03391B94 BL 0x1C5C684
	0x03391B98 LDR X8, [X0 + 0xC0]
	0x03391B9C LDR X0, [X8 + 0x8]
	0x03391BA0 LDRB W8, [X0 + 0x135]
	0x03391BA4 TBNZ X8, 0x0, 0x3391BAC
	0x03391BA8 BL 0x1C5C684

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x104D000
	007 Move X20, 0xD6C000
	008 Move W8, [X21+74]
	009 Move X20, [X20+2536]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD6C000
	016 Move X0, [X0+2536]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+74], W8
	020 Move X0, [X20]
	021 Move V8, [X19]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X30, [X31+16]
	029 Move X21, [X31+24]
	030 Move V0, V8
	031 Move X0, X31
	032 Move V8, [X31+48]
	033 Call Convert.ToDouble, V0
	034 Return V0

Method: System.Decimal System.IConvertible.ToDecimal(System.IFormatProvider provider)

Disassembly:
	0x03391BAC LDR W8, [X0 + 0xE0]
	0x03391BB0 CBNZ W8, 0x3391BB8
	0x03391BB4 BL 0x1C16DFC
	0x03391BB8 LDR X0, [X21 + 0x20]
	0x03391BBC LDRB W8, [X0 + 0x135]
	0x03391BC0 TBNZ X8, 0x0, 0x3391BC8
	0x03391BC4 BL 0x1C5C684
	0x03391BC8 LDR X8, [X0 + 0xC0]
	0x03391BCC LDR X0, [X8 + 0x8]
	0x03391BD0 LDRB W8, [X0 + 0x135]
	0x03391BD4 TBNZ X8, 0x0, 0x3391BDC
	0x03391BD8 BL 0x1C5C684
	0x03391BDC LDR X22, [X28]
	0x03391BE0 LDR X9, [X0 + 0xB8]
	0x03391BE4 LDR X8, [X22 + 0x20]
	0x03391BE8 LDRSW X21, [X9]
	0x03391BEC LDRB W10, [X8 + 0x135]
	0x03391BF0 TBNZ X10, 0x0, 0x3391C00
	0x03391BF4 MOV X0, X8
	0x03391BF8 BL 0x1C5C684
	0x03391BFC MOV X8, X0
	0x03391C00 LDR X8, [X8 + 0xC0]
	0x03391C04 LDR X0, [X8 + 0x8]
	0x03391C08 LDRB W8, [X0 + 0x135]
	0x03391C0C TBNZ X8, 0x0, 0x3391C14

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x104D000
	007 Move X20, 0xD6C000
	008 Move W8, [X21+75]
	009 Move X20, [X20+2536]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD6C000
	016 Move X0, [X0+2536]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+75], W8
	020 Move X0, [X20]
	021 Move V8, [X19]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X30, [X31+16]
	029 Move X21, [X31+24]
	030 Move V0, V8
	031 Move X0, X31
	032 Move V8, [X31+48]
	033 Call Convert.ToDecimal, V0
	034 Return X0

Method: System.DateTime System.IConvertible.ToDateTime(System.IFormatProvider provider)

Disassembly:
	0x03391C10 BL 0x1C5C684
	0x03391C14 LDR W8, [X0 + 0xE0]
	0x03391C18 CBNZ W8, 0x3391C20
	0x03391C1C BL 0x1C16DFC
	0x03391C20 LDR X0, [X22 + 0x20]
	0x03391C24 LDRB W8, [X0 + 0x135]
	0x03391C28 TBNZ X8, 0x0, 0x3391C30
	0x03391C2C BL 0x1C5C684
	0x03391C30 LDR X8, [X0 + 0xC0]
	0x03391C34 LDR X0, [X8 + 0x8]
	0x03391C38 LDRB W8, [X0 + 0x135]
	0x03391C3C TBNZ X8, 0x0, 0x3391C44
	0x03391C40 BL 0x1C5C684
	0x03391C44 LDR X8, [X0 + 0xB8]
	0x03391C48 ADD X29, X29, X21, 0x1, LSL
	0x03391C4C LDR W8, [X8]
	0x03391C50 SUB W19, W19, W8
	0x03391C54 CMP W19, 0x0
	0x03391C58 B.GT 0x3391A78
	0x03391C5C LDR X19, [X31 + 0x8]
	0x03391C60 SUBS X8, X19, X29
	0x03391C64 B.LS 0x3391CA4
	0x03391C68 CMP X8, 0x0
	0x03391C6C CINC X8, X8, LT
	0x03391C70 UBFM X8, X8, 0x1, 0x3F
	0x03391C74 B 0x339194C
	0x03391C78 MOV X0, X21
	0x03391C7C MOV X1, X22
	0x03391C80 MOV X2, X31
	0x03391C84 BL 0x33A3044
	0x03391C88 LDR X8, [X31 + 0x10]
	0x03391C8C SUB X8, X29, X8
	0x03391C90 CMP X8, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xD98000
	005 Move X0, [X0+48]
	006 Call 0x1C17D08
	007 Move X19, X0
	008 Move X0, 0xD95000
	009 Move X0, [X0+232]
	010 Call 0x1C17D08
	011 Move X20, X0
	012 Move X0, 0xD95000
	013 Move X0, [X0+152]
	014 Call 0x1C17D08
	015 Move X2, X0
	016 Move X0, X19
	017 Move X1, X20
	018 Move X3, X31
	019 Call SR.Format, X0, X1, X2
	020 Move X19, X0
	021 Move X0, 0xD6B000
	022 Move X0, [X0+3080]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X2, X31
	027 Move X20, X0
	028 Call InvalidCastException..ctor, X0, X1
	029 Move X0, 0xD9B000
	030 Move X0, [X0+632]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X20
	034 Call 0x1C17DEC

Method: System.Object System.IConvertible.ToType(System.Type type, System.IFormatProvider provider)

Disassembly:
	0x03391C94 CINC X8, X8, LT
	0x03391C98 UBFM X8, X8, 0x1, 0x3F
	0x03391C9C ADD W0, W0, W8
	0x03391CA0 B 0x3391CD0
	0x03391CA4 MOVN W0, 0x0
	0x03391CA8 B 0x3391CD0
	0x03391CAC MOV X29, X9
	0x03391CB0 B 0x3391CBC
	0x03391CB4 ADD X9, X29, 0x4
	0x03391CB8 ADD X29, X9, 0x2
	0x03391CBC LDR X8, [X31 + 0x10]
	0x03391CC0 SUB X8, X29, X8
	0x03391CC4 CMP X8, 0x0
	0x03391CC8 CINC X8, X8, LT
	0x03391CCC UBFM X0, X8, 0x1, 0x3F
	0x03391CD0 LDR X8, [X31 + 0x18]
	0x03391CD4 LDR X8, [X8 + 0x28]
	0x03391CD8 LDR X9, [X31 + 0x48]
	0x03391CDC CMP X8, X9
	0x03391CE0 B.NE 0x3391D04
	0x03391CE4 LDP X20, X19, [X31 + 0xA0]
	0x03391CE8 LDP X22, X21, [X31 + 0x90]
	0x03391CEC LDP X24, X23, [X31 + 0x80]
	0x03391CF0 LDP X26, X25, [X31 + 0x70]
	0x03391CF4 LDP X28, X27, [X31 + 0x60]
	0x03391CF8 LDP X29, X30, [X31 + 0x50]
	0x03391CFC ADD X31, X31, 0xB0
	0x03391D00 RET
	0x03391D04 BL 0x3EB1B20
	0x03391D08 SUB X31, X31, 0xA0
	0x03391D0C STP X29, X30, [X31 + 0x40]
	0x03391D10 STP X28, X27, [X31 + 0x50]
	0x03391D14 STP X26, X25, [X31 + 0x60]
	0x03391D18 STP X24, X23, [X31 + 0x70]
	0x03391D1C STP X22, X21, [X31 + 0x80]
	0x03391D20 STP X20, X19, [X31 + 0x90]
	0x03391D24 MRS X8, 0xC000
	0x03391D28 STR X8, [X31]
	0x03391D2C LDR X8, [X8 + 0x28]
	0x03391D30 ADRP X19, 0x104C000
	0x03391D34 MOV W21, W2
	0x03391D38 MOV W20, W1
	0x03391D3C STR X8, [X31 + 0x38]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x104D000
	009 Move X23, 0xD63000
	010 Move X22, 0xD6C000
	011 Move W8, [X24+76]
	012 Move X23, [X23+2704]
	013 Move X22, [X22+2536]
	014 Move X19, X2
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xD6C000
	022 Move X0, [X0+2536]
	023 Call 0x1C17CF4
	024 Move X0, 0xD63000
	025 Move X0, [X0+2704]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+76], W8
	029 Move V0, [X21]
	030 Move X0, [X23]
	031 Add X1, X31, 12
	032 Move [X31+12], S0
	033 Call 0x1C17E04
	034 Move X8, [X22]
	035 Move X21, X0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X0, X21
	042 Move X1, X20
	043 Move X2, X19
	044 Move X3, X31
	045 Call Convert.DefaultToType, X0, X1, X2
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X22, [X31+32]
	049 Move X21, [X31+40]
	050 Move X24, [X31+16]
	051 Move X23, [X31+24]
	052 Move X30, [X31+64]
	053 Return X0

