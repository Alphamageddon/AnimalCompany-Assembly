Type: System.Array/SorterGenericArray

Method: System.Void .ctor(System.Array keys, System.Array items, System.Collections.IComparer comparer)

Disassembly:
	0x033A54D0 MOV X0, X21
	0x033A54D4 BL 0x1D2C690
	0x033A54D8 MOV X0, X20
	0x033A54DC BL 0x1C16F18
	0x033A54E0 BL 0x1990590
	0x033A54E4 STR X30, [X31 - 0x20]!
	0x033A54E8 STP X20, X19, [X31 + 0x10]
	0x033A54EC MOV X20, X0
	0x033A54F0 LDR X0, [X0 + 0x18]
	0x033A54F4 CBZ X0, 0x33A555C
	0x033A54F8 MOV X19, X1
	0x033A54FC BL 0x33A55B4
	0x033A5500 CBZ X19, 0x33A555C
	0x033A5504 LDR W8, [X19 + 0x18]
	0x033A5508 TBNZ X8, 0x1F, 0x33A5560
	0x033A550C LDR X9, [X20 + 0x10]
	0x033A5510 CBZ X9, 0x33A555C
	0x033A5514 LDR W10, [X9 + 0x18]
	0x033A5518 CMP W8, W10
	0x033A551C B.GE 0x33A554C
	0x033A5520 CMP W8, W10
	0x033A5524 B.CS 0x33A55B0
	0x033A5528 ADD X8, X9, X8, 0x3, LSL
	0x033A552C LDR X8, [X8 + 0x20]
	0x033A5530 CBZ X8, 0x33A554C
	0x033A5534 LDR X9, [X8 + 0x18]
	0x033A5538 LDR X10, [X19 + 0x20]
	0x033A553C CMP X9, X10
	0x033A5540 B.NE 0x33A5560
	0x033A5544 LDR X0, [X8 + 0x10]
	0x033A5548 B 0x33A5550

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1039000
	008 Move W8, [X23+324]
	009 Move X22, X3
	010 Move X19, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xD78000
	018 Move X0, [X0+3376]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+324], W8
	022 Compare X22, 0
	023 JumpIfNotEqual {34}
	024 Move X22, 0xD78000
	025 Move X22, [X22+3376]
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X22]
	032 Move X8, [X0+184]
	033 Move X22, [X8]
	034 Move [X21], X20
	035 Move [X21+8], X19
	036 Move [X21+16], X22
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Move X23, [X31+56]
	043 Return 

Method: System.Void SwapIfGreaterWithItems(System.Int32 a, System.Int32 b)

Disassembly:
	0x033A554C MOV X0, X31
	0x033A5550 LDP X20, X19, [X31 + 0x10]
	0x033A5554 LDR X30, [X31], #0x20
	0x033A5558 RET
	0x033A555C BL 0x1C16F20
	0x033A5560 ADRP X0, 0xD86000
	0x033A5564 LDR X0, [X0 + 0xBF0]
	0x033A5568 BL 0x1C16D08
	0x033A556C MOV X1, X31
	0x033A5570 BL 0x33BDD84
	0x033A5574 MOV X19, X0
	0x033A5578 ADRP X0, 0xD4E000
	0x033A557C LDR X0, [X0 + 0x5B0]
	0x033A5580 BL 0x1C16D08
	0x033A5584 BL 0x1C16F10
	0x033A5588 MOV X1, X19
	0x033A558C MOV X2, X31
	0x033A5590 MOV X20, X0
	0x033A5594 BL 0x337DF1C
	0x033A5598 ADRP X0, 0xD86000
	0x033A559C LDR X0, [X0 + 0xBF8]
	0x033A55A0 BL 0x1C16D08
	0x033A55A4 MOV X1, X0
	0x033A55A8 MOV X0, X20
	0x033A55AC BL 0x1C16DEC
	0x033A55B0 BL 0x1C16F28
	0x033A55B4 STR X30, [X31 - 0x20]!
	0x033A55B8 STP X20, X19, [X31 + 0x10]
	0x033A55BC CBZ X1, 0x33A55D8
	0x033A55C0 LDR X8, [X1 + 0x10]
	0x033A55C4 CMP X8, X0
	0x033A55C8 B.NE 0x33A55D8
	0x033A55CC LDP X20, X19, [X31 + 0x10]
	0x033A55D0 LDR X30, [X31], #0x20
	0x033A55D4 RET
	0x033A55D8 ADRP X0, 0xD86000
	0x033A55DC LDR X0, [X0 + 0xC00]
	0x033A55E0 BL 0x1C16D08
	0x033A55E4 MOV X1, X31
	0x033A55E8 BL 0x33BDD84
	0x033A55EC MOV X19, X0
	0x033A55F0 ADRP X0, 0xD56000
	0x033A55F4 LDR X0, [X0 + 0x578]
	0x033A55F8 BL 0x1C16D08
	0x033A55FC BL 0x1C16F10
	0x033A5600 MOV X1, X19
	0x033A5604 MOV X2, X31
	0x033A5608 MOV X20, X0
	0x033A560C BL 0x3314A68
	0x033A5610 ADRP X0, 0xD86000
	0x033A5614 LDR X0, [X0 + 0xC08]
	0x033A5618 BL 0x1C16D08
	0x033A561C MOV X1, X0
	0x033A5620 MOV X0, X20
	0x033A5624 BL 0x1C16DEC
	0x033A5628 STP X30, X21, [X31 - 0x20]!
	0x033A562C STP X20, X19, [X31 + 0x10]
	0x033A5630 MOV X21, X0
	0x033A5634 LDR X0, [X0 + 0x18]
	0x033A5638 CBZ X0, 0x33A56AC
	0x033A563C MOV X19, X2
	0x033A5640 MOV X20, X1
	0x033A5644 BL 0x33A55B4
	0x033A5648 CBZ X20, 0x33A56AC
	0x033A564C LDR W8, [X20 + 0x18]
	0x033A5650 TBNZ X8, 0x1F, 0x33A56B0
	0x033A5654 LDR X9, [X21 + 0x10]
	0x033A5658 CBZ X9, 0x33A56AC
	0x033A565C LDR W10, [X9 + 0x18]
	0x033A5660 CMP W8, W10
	0x033A5664 B.GE 0x33A567C
	0x033A5668 CMP W8, W10
	0x033A566C B.CS 0x33A5700
	0x033A5670 ADD X8, X9, X8, 0x3, LSL
	0x033A5674 LDR X0, [X8 + 0x20]
	0x033A5678 CBNZ X0, 0x33A568C
	0x033A567C MOV X0, X21
	0x033A5680 MOV X1, X20
	0x033A5684 BL 0x33A5704
	0x033A5688 CBZ X0, 0x33A56AC
	0x033A568C LDR X8, [X0 + 0x18]
	0x033A5690 LDR X9, [X20 + 0x20]
	0x033A5694 CMP X8, X9
	0x033A5698 B.NE 0x33A56B0
	0x033A569C STR X19, [X0 + 0x10]
	0x033A56A0 LDP X20, X19, [X31 + 0x10]
	0x033A56A4 LDP X30, X21, [X31], #0x20
	0x033A56A8 RET
	0x033A56AC BL 0x1C16F20
	0x033A56B0 ADRP X0, 0xD86000
	0x033A56B4 LDR X0, [X0 + 0xBF0]
	0x033A56B8 BL 0x1C16D08
	0x033A56BC MOV X1, X31
	0x033A56C0 BL 0x33BDD84
	0x033A56C4 MOV X19, X0
	0x033A56C8 ADRP X0, 0xD4E000
	0x033A56CC LDR X0, [X0 + 0x5B0]
	0x033A56D0 BL 0x1C16D08
	0x033A56D4 BL 0x1C16F10
	0x033A56D8 MOV X1, X19
	0x033A56DC MOV X2, X31
	0x033A56E0 MOV X20, X0
	0x033A56E4 BL 0x337DF1C
	0x033A56E8 ADRP X0, 0xD86000
	0x033A56EC LDR X0, [X0 + 0xC10]
	0x033A56F0 BL 0x1C16D08
	0x033A56F4 MOV X1, X0
	0x033A56F8 MOV X0, X20
	0x033A56FC BL 0x1C16DEC
	0x033A5700 BL 0x1C16F28
	0x033A5704 STR X30, [X31 - 0x40]!
	0x033A5708 STP X24, X23, [X31 + 0x10]
	0x033A570C STP X22, X21, [X31 + 0x20]
	0x033A5710 STP X20, X19, [X31 + 0x30]
	0x033A5714 ADRP X21, 0x1038000
	0x033A5718 LDRB W8, [X21 + 0x14A]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1039000
	009 Move W8, [X22+325]
	010 Move W19, W2
	011 Move W21, W1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xD79000
	018 Move X0, [X0+2328]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+325], W8
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X0, [X20]
	024 Compare X0, 0
	025 JumpIfEqual {135}
	026 Move X22, [X20+16]
	027 Move W1, W21
	028 Move X2, X31
	029 Call Array.GetValue, X0, X1
	030 Move X8, [X20]
	031 Compare X8, 0
	032 JumpIfEqual {135}
	033 Move X23, X0
	034 Move X0, X8
	035 Move W1, W19
	036 Move X2, X31
	037 Call Array.GetValue, X0, X1
	038 Compare X22, 0
	039 JumpIfEqual {135}
	040 Move X10, 0xD79000
	041 Move X8, [X22]
	042 Move X10, [X10+2328]
	043 Move X24, X0
	044 NotImplemented "Instruction LDRH not yet implemented."
	045 Move X1, [X10]
	046 Compare X9, 0
	047 JumpIfEqual {54}
	048 Move X10, [X8+176]
	049 Add X10, X10, 8
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Subtract X9, X9, 1
	053 Add X10, X10, 16
	054 Move X0, X22
	055 Move W2, W31
	056 Call 0x1C5D788
	057 NotImplemented "Instruction LDRSW not yet implemented."
	058 Add X8, X8, X9
	059 Add X0, X8, 312
	060 Move X8, [X0]
	061 Move X3, [X0+8]
	062 Move X0, X22
	063 Move X1, X23
	064 Move X2, X24
	065 NotImplemented "Instruction BLR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, [X20]
	068 Compare X0, 0
	069 JumpIfEqual {135}
	070 Move W1, W21
	071 Move X2, X31
	072 Call Array.GetValue, X0, X1
	073 Move X23, [X20]
	074 Compare X23, 0
	075 JumpIfEqual {135}
	076 Move X22, X0
	077 Move X0, X23
	078 Move W1, W19
	079 Move X2, X31
	080 Call Array.GetValue, X0, X1
	081 Move X1, X0
	082 Move X0, X23
	083 Move W2, W21
	084 Move X3, X31
	085 Call Array.SetValue, X0, X1, X2
	086 Move X0, [X20]
	087 Compare X0, 0
	088 JumpIfEqual {135}
	089 Move X1, X22
	090 Move W2, W19
	091 Move X3, X31
	092 Call Array.SetValue, X0, X1, X2
	093 Move X0, [X20+8]
	094 Compare X0, 0
	095 JumpIfEqual {127}
	096 Move W1, W21
	097 Move X2, X31
	098 Call Array.GetValue, X0, X1
	099 Move X23, [X20+8]
	100 Compare X23, 0
	101 JumpIfEqual {135}
	102 Move X22, X0
	103 Move X0, X23
	104 Move W1, W19
	105 Move X2, X31
	106 Call Array.GetValue, X0, X1
	107 Move X1, X0
	108 Move X0, X23
	109 Move W2, W21
	110 Move X3, X31
	111 Call Array.SetValue, X0, X1, X2
	112 Move X0, [X20+8]
	113 Compare X0, 0
	114 JumpIfEqual {135}
	115 Move X1, X22
	116 Move W2, W19
	117 Move X20, [X31+48]
	118 Move X19, [X31+56]
	119 Move X22, [X31+32]
	120 Move X21, [X31+40]
	121 Move X24, [X31+16]
	122 Move X23, [X31+24]
	123 Move X3, X31
	124 Move X30, [X31+64]
	125 Call Array.SetValue, X0, X1, X2
	126 Return 
	127 Move X20, [X31+48]
	128 Move X19, [X31+56]
	129 Move X22, [X31+32]
	130 Move X21, [X31+40]
	131 Move X24, [X31+16]
	132 Move X23, [X31+24]
	133 Move X30, [X31+64]
	134 Return 
	135 Call 0x1C17F20

Method: System.Void Swap(System.Int32 i, System.Int32 j)

Disassembly:
	0x033A571C MOV X20, X1
	0x033A5720 MOV X19, X0
	0x033A5724 TBNZ X8, 0x0, 0x33A5748
	0x033A5728 ADRP X0, 0xD86000
	0x033A572C LDR X0, [X0 + 0xBE0]
	0x033A5730 BL 0x1C16CF4
	0x033A5734 ADRP X0, 0xD86000
	0x033A5738 LDR X0, [X0 + 0xC18]
	0x033A573C BL 0x1C16CF4
	0x033A5740 MOVZ W8, 0x1
	0x033A5744 STRB W8, [X21 + 0x14A]
	0x033A5748 MOV X0, X31
	0x033A574C STRB W31, [X31 + 0xC]
	0x033A5750 BL 0x32C5C58
	0x033A5754 LDR X0, [X19 + 0x18]
	0x033A5758 ADD X1, X31, 0xC
	0x033A575C MOV X2, X31
	0x033A5760 BL 0x33DE64C
	0x033A5764 CBZ X20, 0x33A5870
	0x033A5768 LDR W22, [X20 + 0x18]
	0x033A576C TBNZ X22, 0x1F, 0x33A5874
	0x033A5770 LDR X21, [X19 + 0x10]
	0x033A5774 CBZ X21, 0x33A58C4
	0x033A5778 LDR W8, [X21 + 0x18]
	0x033A577C CMP W22, W8
	0x033A5780 B.LT 0x33A57CC
	0x033A5784 LDR X8, [X19 + 0x18]
	0x033A5788 CBZ X8, 0x33A58D0
	0x033A578C LDR X8, [X8 + 0x10]
	0x033A5790 CBZ X8, 0x33A58D4
	0x033A5794 LDR W1, [X8 + 0x18]
	0x033A5798 ADRP X8, 0xD86000
	0x033A579C LDR X8, [X8 + 0xBE0]
	0x033A57A0 LDR X0, [X8]
	0x033A57A4 BL 0x1C16D6C
	0x033A57A8 MOV X21, X0
	0x033A57AC LDR X0, [X19 + 0x10]
	0x033A57B0 CBZ X0, 0x33A58D8
	0x033A57B4 LDR W2, [X0 + 0x18]
	0x033A57B8 MOV X1, X21
	0x033A57BC MOV X3, X31
	0x033A57C0 BL 0x33A0C7C
	0x033A57C4 STR X21, [X19 + 0x10]
	0x033A57C8 CBZ X21, 0x33A58DC
	0x033A57CC LDR W8, [X21 + 0x18]
	0x033A57D0 CMP W22, W8
	0x033A57D4 B.CS 0x33A58C8
	0x033A57D8 ADD X23, X21, X22, 0x3, LSL
	0x033A57DC LDR X8, [X23 + 0x20]!
	0x033A57E0 CBNZ X8, 0x33A5820
	0x033A57E4 ADRP X8, 0xD86000
	0x033A57E8 LDR X24, [X20 + 0x20]
	0x033A57EC LDR X8, [X8 + 0xC18]
	0x033A57F0 LDR X0, [X8]
	0x033A57F4 BL 0x1C16F10
	0x033A57F8 MOV X20, X0
	0x033A57FC MOV X1, X31
	0x033A5800 BL 0x33BDD8C
	0x033A5804 STR X24, [X20 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, X0
	008 Move X0, [X0]
	009 Compare X0, 0
	010 JumpIfEqual {75}
	011 Move W19, W2
	012 Move X2, X31
	013 Move W21, W1
	014 Call Array.GetValue, X0, X1
	015 Move X23, [X20]
	016 Compare X23, 0
	017 JumpIfEqual {75}
	018 Move X22, X0
	019 Move X0, X23
	020 Move W1, W19
	021 Move X2, X31
	022 Call Array.GetValue, X0, X1
	023 Move X1, X0
	024 Move X0, X23
	025 Move W2, W21
	026 Move X3, X31
	027 Call Array.SetValue, X0, X1, X2
	028 Move X0, [X20]
	029 Compare X0, 0
	030 JumpIfEqual {75}
	031 Move X1, X22
	032 Move W2, W19
	033 Move X3, X31
	034 Call Array.SetValue, X0, X1, X2
	035 Move X0, [X20+8]
	036 Compare X0, 0
	037 JumpIfEqual {68}
	038 Move W1, W21
	039 Move X2, X31
	040 Call Array.GetValue, X0, X1
	041 Move X23, [X20+8]
	042 Compare X23, 0
	043 JumpIfEqual {75}
	044 Move X22, X0
	045 Move X0, X23
	046 Move W1, W19
	047 Move X2, X31
	048 Call Array.GetValue, X0, X1
	049 Move X1, X0
	050 Move X0, X23
	051 Move W2, W21
	052 Move X3, X31
	053 Call Array.SetValue, X0, X1, X2
	054 Move X0, [X20+8]
	055 Compare X0, 0
	056 JumpIfEqual {75}
	057 Move X1, X22
	058 Move W2, W19
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X3, X31
	064 Move X30, [X31+48]
	065 Move X23, [X31+56]
	066 Call Array.SetValue, X0, X1, X2
	067 Return 
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X30, [X31+48]
	073 Move X23, [X31+56]
	074 Return 
	075 Call 0x1C17F20

Method: System.Void Sort(System.Int32 left, System.Int32 length)

Disassembly:
	0x033A5808 LDR W8, [X21 + 0x18]

ISIL:
No ISIL was generated
Method: System.Void IntrospectiveSort(System.Int32 left, System.Int32 length)

Disassembly:
	0x033A580C CMP W22, W8
	0x033A5810 B.CS 0x33A58E0
	0x033A5814 STR X20, [X23]
	0x033A5818 LDR X21, [X19 + 0x10]
	0x033A581C CBZ X21, 0x33A58E4
	0x033A5820 LDR W8, [X21 + 0x18]
	0x033A5824 CMP W22, W8
	0x033A5828 B.CS 0x33A58CC
	0x033A582C ADD X8, X21, X22, 0x3, LSL
	0x033A5830 LDR X20, [X8 + 0x20]
	0x033A5834 MOV X21, X31
	0x033A5838 LDRB W8, [X31 + 0xC]
	0x033A583C CBZ W8, 0x33A584C
	0x033A5840 LDR X0, [X19 + 0x18]
	0x033A5844 MOV X1, X31
	0x033A5848 BL 0x33E14E4
	0x033A584C CBNZ X21, 0x33A5868
	0x033A5850 MOV X0, X20
	0x033A5854 LDP X20, X19, [X31 + 0x30]
	0x033A5858 LDP X22, X21, [X31 + 0x20]
	0x033A585C LDP X24, X23, [X31 + 0x10]
	0x033A5860 LDR X30, [X31], #0x40
	0x033A5864 RET
	0x033A5868 MOV X0, X21
	0x033A586C BL 0x1C16F18
	0x033A5870 BL 0x1C16F20
	0x033A5874 ADRP X0, 0xD86000
	0x033A5878 LDR X0, [X0 + 0xBF0]
	0x033A587C BL 0x1C16D08
	0x033A5880 MOV X1, X31
	0x033A5884 BL 0x33BDD84
	0x033A5888 MOV X20, X0
	0x033A588C ADRP X0, 0xD4E000
	0x033A5890 LDR X0, [X0 + 0x5B0]
	0x033A5894 BL 0x1C16D08
	0x033A5898 BL 0x1C16F10
	0x033A589C MOV X21, X0
	0x033A58A0 MOV X1, X20
	0x033A58A4 MOV X2, X31
	0x033A58A8 BL 0x337DF1C
	0x033A58AC ADRP X0, 0xD86000
	0x033A58B0 LDR X0, [X0 + 0xC20]
	0x033A58B4 BL 0x1C16D08
	0x033A58B8 MOV X1, X0
	0x033A58BC MOV X0, X21
	0x033A58C0 BL 0x1C16DEC
	0x033A58C4 BL 0x1C16F20
	0x033A58C8 BL 0x1C16F28
	0x033A58CC BL 0x1C16F28
	0x033A58D0 BL 0x1C16F20
	0x033A58D4 BL 0x1C16F20
	0x033A58D8 BL 0x1C16F20
	0x033A58DC BL 0x1C16F20
	0x033A58E0 BL 0x1C16F28
	0x033A58E4 BL 0x1C16F20
	0x033A58E8 B 0x33A591C
	0x033A58EC B 0x33A591C
	0x033A58F0 B 0x33A591C
	0x033A58F4 B 0x33A591C
	0x033A58F8 B 0x33A591C
	0x033A58FC B 0x33A591C
	0x033A5900 B 0x33A591C
	0x033A5904 B 0x33A591C
	0x033A5908 B 0x33A591C
	0x033A590C B 0x33A591C
	0x033A5910 B 0x33A591C
	0x033A5914 B 0x33A591C
	0x033A5918 B 0x33A591C
	0x033A591C MOV X20, X0
	0x033A5920 CMP W1, 0x1
	0x033A5924 B.NE 0x33A5940
	0x033A5928 MOV X0, X20
	0x033A592C BL 0x3EB1AD0
	0x033A5930 LDR X21, [X0]
	0x033A5934 BL 0x3EB1AE0
	0x033A5938 MOV X20, X31
	0x033A593C B 0x33A5838
	0x033A5940 MOV X21, X31
	0x033A5944 B 0x33A594C
	0x033A5948 MOV X20, X0
	0x033A594C LDRB W8, [X31 + 0xC]
	0x033A5950 CBZ W8, 0x33A5960
	0x033A5954 LDR X0, [X19 + 0x18]
	0x033A5958 MOV X1, X31
	0x033A595C BL 0x33E14E4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X19, X0
	007 Move X0, [X0]
	008 Compare X0, 0
	009 JumpIfEqual {29}
	010 Move W21, W2
	011 Move W20, W1
	012 Move X1, X31
	013 Call Array.get_Length, X0
	014 Move X1, X31
	015 Call IntrospectiveSortUtilities.FloorLog2PlusOne, X0
	016 Add W8, W20, W21
	017 Subtract W2, W8, 1
	018 Move W3, W0
	019 ShiftRight W3, 31
	020 And W3, W3, 0x3FFFFFFF
	021 Move X0, X19
	022 Move W1, W20
	023 Call SorterGenericArray.IntroSort, X0, X1, X2, X3
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 Return 
	029 Call 0x1C17F20
	030 Move X20, X0
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X0, X20
	033 Call 0x3EB2AD0
	034 Move X20, X0
	035 Move X0, 0xD59000
	036 Move X0, [X0+3960]
	037 Call 0x1C17D08
	038 Move X8, [X20]
	039 Move X1, [X8]
	040 Call 0x1C18270
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {54}
	045 Call 0x3EB2AE0
	046 Move X0, [X19+16]
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X1, X31
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Call IntrospectiveSortUtilities.ThrowOrIgnoreBadComparer, X0
	053 Return 
	054 Move X0, 0xD4F000
	055 Move X0, [X0+2000]
	056 Call 0x1C17D08
	057 Move X8, [X20]
	058 Move X1, [X8]
	059 Call 0x1C18270
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {85}
	064 Move X19, [X20]
	065 Call 0x3EB2AE0
	066 Move X0, 0xD4F000
	067 Move X0, [X0+1456]
	068 Call 0x1C17D08
	069 Call 0x1C17F10
	070 Move X20, X0
	071 Move X0, 0xD78000
	072 Move X0, [X0+3008]
	073 Call 0x1C17D08
	074 Move X1, X0
	075 Move X0, X20
	076 Move X2, X19
	077 Move X3, X31
	078 Call InvalidOperationException..ctor, X0, X1, X2
	079 Move X0, 0xD87000
	080 Move X0, [X0+3032]
	081 Call 0x1C17D08
	082 Move X1, X0
	083 Move X0, X20
	084 Call 0x1C17DEC
	085 Move W0, 8
	086 Call 0x3EB2AF0
	087 Move X8, [X20]
	088 Move [X0], X8
	089 Move X1, 0xB10000
	090 Add X1, X1, 3672
	091 Move X2, X31
	092 Call 0x3EB2B00
	093 Move X20, X0
	094 Call 0x3EB2AE0
	095 Move X0, X20
	096 Call 0x1D2D690
	097 Call 0x1991590

Method: System.Void IntroSort(System.Int32 lo, System.Int32 hi, System.Int32 depthLimit)

Disassembly:
	0x033A5960 CBNZ X21, 0x33A596C
	0x033A5964 MOV X0, X20
	0x033A5968 BL 0x1D2C690
	0x033A596C MOV X0, X21
	0x033A5970 BL 0x1C16F18
	0x033A5974 BL 0x1990590
	0x033A5978 STR X30, [X31 - 0x10]!
	0x033A597C LDR X8, [X0 + 0x10]
	0x033A5980 CBZ X8, 0x33A59B8
	0x033A5984 LDR W9, [X8 + 0x18]
	0x033A5988 CMP W9, W1
	0x033A598C B.LE 0x33A59B0
	0x033A5990 B.LS 0x33A59BC
	0x033A5994 ADD X8, X8, W1, 0x3, SXTW
	0x033A5998 LDR X9, [X8 + 0x20]!
	0x033A599C CBZ X9, 0x33A59B0
	0x033A59A0 LDR X9, [X9 + 0x18]
	0x033A59A4 CMP X9, X2
	0x033A59A8 B.NE 0x33A59B0
	0x033A59AC STR X31, [X8]
	0x033A59B0 LDR X30, [X31], #0x10
	0x033A59B4 RET
	0x033A59B8 BL 0x1C16F20
	0x033A59BC BL 0x1C16F28
	0x033A59C0 STR X30, [X31 - 0x10]!
	0x033A59C4 LDR X8, [X0 + 0x10]
	0x033A59C8 CBZ X8, 0x33A59D8
	0x033A59CC LDR W0, [X8 + 0x18]
	0x033A59D0 LDR X30, [X31], #0x10
	0x033A59D4 RET
	0x033A59D8 BL 0x1C16F20
	0x033A59DC STR X30, [X31 - 0x30]!
	0x033A59E0 STP X22, X21, [X31 + 0x10]
	0x033A59E4 STP X20, X19, [X31 + 0x20]
	0x033A59E8 MOV X21, X1
	0x033A59EC MOV X1, X31
	0x033A59F0 MOV X19, X3
	0x033A59F4 MOV W20, W2
	0x033A59F8 MOV X22, X0
	0x033A59FC BL 0x33BDD8C
	0x033A5A00 STR X21, [X22 + 0x10]
	0x033A5A04 STR W20, [X22 + 0x18]
	0x033A5A08 STR X19, [X22 + 0x20]
	0x033A5A0C LDP X20, X19, [X31 + 0x20]
	0x033A5A10 LDP X22, X21, [X31 + 0x10]
	0x033A5A14 LDR X30, [X31], #0x30
	0x033A5A18 RET
	0x033A5A1C LDR X0, [X0 + 0x10]
	0x033A5A20 RET
	0x033A5A24 LDR W0, [X0 + 0x18]
	0x033A5A28 RET
	0x033A5A2C LDR X0, [X0 + 0x20]
	0x033A5A30 RET
	0x033A5A34 STP X30, X21, [X31 - 0x20]!
	0x033A5A38 STP X20, X19, [X31 + 0x10]
	0x033A5A3C MOV X19, X0
	0x033A5A40 LDR X0, [X0 + 0x10]
	0x033A5A44 CBZ X0, 0x33A5A5C
	0x033A5A48 LDR W1, [X19 + 0x18]
	0x033A5A4C LDR X2, [X19 + 0x20]
	0x033A5A50 MOVN W8, 0x0
	0x033A5A54 STR W8, [X19 + 0x18]
	0x033A5A58 BL 0x33A5AE0
	0x033A5A5C MOV X0, X19
	0x033A5A60 LDP X20, X19, [X31 + 0x10]
	0x033A5A64 MOV X1, X31
	0x033A5A68 LDP X30, X21, [X31], #0x20
	0x033A5A6C B 0x33CB4DC
	0x033A5A70 CMP W1, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W19, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Subtract W22, W3, 1
	012 Subtract W8, W19, W20
	013 Add W9, W8, 1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Add W31, W22, 1
	016 Move X0, X21
	017 Move W1, W20
	018 Move W2, W19
	019 Call SorterGenericArray.PickPivotAndPartition, X0, X1, X2
	020 Move W23, W0
	021 Add W1, W0, 1
	022 Move X0, X21
	023 Move W2, W19
	024 Move W3, W22
	025 Call SorterGenericArray.IntroSort, X0, X1, X2, X3
	026 Subtract W19, W23, 1
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Subtract W22, W22, 1
	029 Compare W8, 0
	030 JumpIfEqual {42}
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X0, X21
	033 Move W1, W20
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W2, W19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Move X23, [X31+56]
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Return 
	049 Move X0, X21
	050 Move W1, W20
	051 Move W2, W19
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X30, [X31+48]
	057 Move X23, [X31+56]
	058 Call SorterGenericArray.Heapsort, X0, X1, X2
	059 Return 
	060 Subtract W22, W19, 1
	061 Move X0, X21
	062 Move W1, W20
	063 Move W2, W22
	064 Call SorterGenericArray.SwapIfGreaterWithItems, X0, X1, X2
	065 Move X0, X21
	066 Move W1, W20
	067 Move W2, W19
	068 Call SorterGenericArray.SwapIfGreaterWithItems, X0, X1, X2
	069 Move X0, X21
	070 Move W1, W22
	071 Move W2, W19
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Move X23, [X31+56]
	078 Call SorterGenericArray.SwapIfGreaterWithItems, X0, X1, X2
	079 Return 

Method: System.Int32 PickPivotAndPartition(System.Int32 lo, System.Int32 hi)

Disassembly:
	0x033A5CFC MOV X20, X0
	0x033A5D00 BL 0x33BDD8C
	0x033A5D04 MOV X0, X31
	0x033A5D08 STR X21, [X20 + 0x10]
	0x033A5D0C STRB W31, [X31 + 0xC]
	0x033A5D10 BL 0x32C5C58
	0x033A5D14 ADD X1, X31, 0xC
	0x033A5D18 MOV X0, X19
	0x033A5D1C MOV X2, X31
	0x033A5D20 BL 0x33DE64C
	0x033A5D24 LDR X0, [X19 + 0x20]
	0x033A5D28 CBZ X0, 0x33A5DC4
	0x033A5D2C ADRP X9, 0xD86000
	0x033A5D30 LDR X9, [X9 + 0xC38]
	0x033A5D34 LDR W10, [X0 + 0x1C]
	0x033A5D38 LDR X8, [X0 + 0x10]
	0x033A5D3C LDR X9, [X9]
	0x033A5D40 ADD W10, W10, 0x1
	0x033A5D44 STR W10, [X0 + 0x1C]
	0x033A5D48 CBZ X8, 0x33A5DC8
	0x033A5D4C LDRSW X10, [X0 + 0x18]
	0x033A5D50 LDR W11, [X8 + 0x18]
	0x033A5D54 CMP W10, W11
	0x033A5D58 B.CS 0x33A5D74
	0x033A5D5C ADD W9, W10, 0x1
	0x033A5D60 ADD X8, X8, X10, 0x3, LSL
	0x033A5D64 MOV X22, X31
	0x033A5D68 STR W9, [X0 + 0x18]
	0x033A5D6C STR X21, [X8 + 0x20]
	0x033A5D70 B 0x33A5D8C
	0x033A5D74 LDR X8, [X9 + 0x20]
	0x033A5D78 LDR X8, [X8 + 0xC0]
	0x033A5D7C LDR X2, [X8 + 0x70]
	0x033A5D80 MOV X1, X21
	0x033A5D84 BL 0x301BF90
	0x033A5D88 MOV X22, X31
	0x033A5D8C LDRB W8, [X31 + 0xC]
	0x033A5D90 CBZ W8, 0x33A5DA0
	0x033A5D94 MOV X0, X19
	0x033A5D98 MOV X1, X31
	0x033A5D9C BL 0x33E14E4
	0x033A5DA0 CBNZ X22, 0x33A5DBC
	0x033A5DA4 MOV X0, X20
	0x033A5DA8 LDP X20, X19, [X31 + 0x20]
	0x033A5DAC LDP X22, X21, [X31 + 0x10]
	0x033A5DB0 LDR X30, [X31], #0x30
	0x033A5DB4 RET
	0x033A5DB8 BL 0x1C16F20
	0x033A5DBC MOV X0, X22
	0x033A5DC0 BL 0x1C16F18
	0x033A5DC4 BL 0x1C16F20
	0x033A5DC8 BL 0x1C16F20
	0x033A5DCC B 0x33A5DD0
	0x033A5DD0 MOV X21, X0
	0x033A5DD4 CMP W1, 0x1
	0x033A5DD8 B.NE 0x33A5DF0
	0x033A5DDC MOV X0, X21
	0x033A5DE0 BL 0x3EB1AD0
	0x033A5DE4 LDR X22, [X0]
	0x033A5DE8 BL 0x3EB1AE0
	0x033A5DEC B 0x33A5D8C
	0x033A5DF0 MOV X22, X31
	0x033A5DF4 B 0x33A5DFC
	0x033A5DF8 MOV X21, X0
	0x033A5DFC LDRB W8, [X31 + 0xC]
	0x033A5E00 CBZ W8, 0x33A5E10
	0x033A5E04 MOV X0, X19
	0x033A5E08 MOV X1, X31
	0x033A5E0C BL 0x33E14E4
	0x033A5E10 CBNZ X22, 0x33A5E1C
	0x033A5E14 MOV X0, X21
	0x033A5E18 BL 0x1D2C690
	0x033A5E1C MOV X0, X22
	0x033A5E20 BL 0x1C16F18
	0x033A5E24 BL 0x1990590
	0x033A5E28 SUB X31, X31, 0x40
	0x033A5E2C STP X30, X23, [X31 + 0x10]
	0x033A5E30 STP X22, X21, [X31 + 0x20]
	0x033A5E34 STP X20, X19, [X31 + 0x30]
	0x033A5E38 ADRP X20, 0x1038000
	0x033A5E3C LDRB W8, [X20 + 0x14D]
	0x033A5E40 MOV X19, X0
	0x033A5E44 TBNZ X8, 0x0, 0x33A5E74
	0x033A5E48 ADRP X0, 0xD50000
	0x033A5E4C LDR X0, [X0 + 0x9B8]
	0x033A5E50 BL 0x1C16CF4
	0x033A5E54 ADRP X0, 0xD86000
	0x033A5E58 LDR X0, [X0 + 0xC50]
	0x033A5E5C BL 0x1C16CF4
	0x033A5E60 ADRP X0, 0xD86000
	0x033A5E64 LDR X0, [X0 + 0xC58]
	0x033A5E68 BL 0x1C16CF4
	0x033A5E6C MOVZ W8, 0x1
	0x033A5E70 STRB W8, [X20 + 0x14D]
	0x033A5E74 MOV X0, X31
	0x033A5E78 STRB W31, [X31 + 0xC]
	0x033A5E7C BL 0x32C5C58
	0x033A5E80 ADD X1, X31, 0xC
	0x033A5E84 MOV X0, X19
	0x033A5E88 MOV X2, X31
	0x033A5E8C BL 0x33DE64C
	0x033A5E90 LDR X20, [X19 + 0x10]
	0x033A5E94 CBZ X20, 0x33A5FD8
	0x033A5E98 LDR W21, [X20 + 0x18]
	0x033A5E9C LDR W22, [X19 + 0x18]
	0x033A5EA0 CMP W22, W21
	0x033A5EA4 B.GE 0x33A5ED0
	0x033A5EA8 CSEL W8, W22, W21, HI
	0x033A5EAC CMP W8, W22
	0x033A5EB0 B.EQ 0x33A5FB8
	0x033A5EB4 ADD X9, X20, W22, SXTW
	0x033A5EB8 LDRB W9, [X9 + 0x20]
	0x033A5EBC CBZ W9, 0x33A5F10
	0x033A5EC0 ADD W22, W22, 0x1
	0x033A5EC4 CMP W21, W22
	0x033A5EC8 B.NE 0x33A5EAC
	0x033A5ECC MOV W22, W21
	0x033A5ED0 ADRP X8, 0xD50000
	0x033A5ED4 LDR X8, [X8 + 0x9B8]
	0x033A5ED8 ADD W9, W21, 0x80
	0x033A5EDC CMP W21, 0x1FF
	0x033A5EE0 LDR X0, [X8]
	0x033A5EE4 UBFM W8, W21, 0x1F, 0x1E
	0x033A5EE8 CSEL W1, W9, W8, GT
	0x033A5EEC BL 0x1C16D6C
	0x033A5EF0 MOV X20, X0
	0x033A5EF4 LDR X0, [X19 + 0x10]
	0x033A5EF8 MOV X1, X20
	0x033A5EFC MOV W2, W21
	0x033A5F00 MOV X3, X31
	0x033A5F04 BL 0x33A0C7C
	0x033A5F08 STR X20, [X19 + 0x10]
	0x033A5F0C CBZ X20, 0x33A5FE0
	0x033A5F10 LDR W8, [X20 + 0x18]
	0x033A5F14 CMP W22, W8

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x1039000
	011 Move W8, [X22+326]
	012 Move W21, W2
	013 Move W19, W1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xD79000
	020 Move X0, [X0+2328]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+326], W8
	024 Subtract W8, W21, W19
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CINC not yet implemented."
	027 Add W23, W19, W8
	028 Move X0, X20
	029 Move W1, W19
	030 Move W2, W23
	031 Call SorterGenericArray.SwapIfGreaterWithItems, X0, X1, X2
	032 Move X0, X20
	033 Move W1, W19
	034 Move W2, W21
	035 Call SorterGenericArray.SwapIfGreaterWithItems, X0, X1, X2
	036 Move X0, X20
	037 Move W1, W23
	038 Move W2, W21
	039 Call SorterGenericArray.SwapIfGreaterWithItems, X0, X1, X2
	040 Move X0, [X20]
	041 Compare X0, 0
	042 JumpIfEqual {152}
	043 Move W1, W23
	044 Move X2, X31
	045 Call Array.GetValue, X0, X1
	046 Subtract W21, W21, 1
	047 Move X22, X0
	048 Move X0, X20
	049 Move W1, W23
	050 Move W2, W21
	051 Call SorterGenericArray.Swap, X0, X1, X2
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X26, 0xD79000
	054 Move X26, [X26+2328]
	055 Move W23, W21
	056 Move X0, [X20]
	057 Compare X0, 0
	058 JumpIfEqual {152}
	059 Move X24, [X20+16]
	060 Add W19, W19, 1
	061 Move W1, W19
	062 Move X2, X31
	063 Call Array.GetValue, X0, X1
	064 Compare X24, 0
	065 JumpIfEqual {152}
	066 Move X8, [X24]
	067 Move X1, [X26]
	068 Move X25, X0
	069 NotImplemented "Instruction LDRH not yet implemented."
	070 Compare X9, 0
	071 JumpIfEqual {78}
	072 Move X10, [X8+176]
	073 Add X10, X10, 8
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Subtract X9, X9, 1
	077 Add X10, X10, 16
	078 Move X0, X24
	079 Move W2, W31
	080 Call 0x1C5D788
	081 NotImplemented "Instruction LDRSW not yet implemented."
	082 Add X8, X8, X9
	083 Add X0, X8, 312
	084 Move X8, [X0]
	085 Move X3, [X0+8]
	086 Move X0, X24
	087 Move X1, X25
	088 Move X2, X22
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move TEMP, X0
	091 And TEMP, TEMP, -2147483648
	092 Compare TEMP, -2147483648
	093 JumpIfEqual {56}
	094 Move X0, [X20]
	095 Compare X0, 0
	096 JumpIfEqual {152}
	097 Move X24, [X20+16]
	098 Subtract W23, W23, 1
	099 Move W1, W23
	100 Move X2, X31
	101 Call Array.GetValue, X0, X1
	102 Compare X24, 0
	103 JumpIfEqual {152}
	104 Move X8, [X24]
	105 Move X1, [X26]
	106 Move X25, X0
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Compare X9, 0
	109 JumpIfEqual {116}
	110 Move X10, [X8+176]
	111 Add X10, X10, 8
	112 NotImplemented "Instruction LDUR not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Subtract X9, X9, 1
	115 Add X10, X10, 16
	116 Move X0, X24
	117 Move W2, W31
	118 Call 0x1C5D788
	119 NotImplemented "Instruction LDRSW not yet implemented."
	120 Add X8, X8, X9
	121 Add X0, X8, 312
	122 Move X8, [X0]
	123 Move X3, [X0+8]
	124 Move X0, X24
	125 Move X1, X22
	126 Move X2, X25
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move TEMP, X0
	129 And TEMP, TEMP, -2147483648
	130 Compare TEMP, -2147483648
	131 JumpIfEqual {94}
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X0, X20
	134 Move W1, W19
	135 Move W2, W23
	136 Call SorterGenericArray.Swap, X0, X1, X2
	137 Move X0, X20
	138 Move W1, W19
	139 Move W2, W21
	140 Call SorterGenericArray.Swap, X0, X1, X2
	141 Move W0, W19
	142 Move X20, [X31+64]
	143 Move X19, [X31+72]
	144 Move X22, [X31+48]
	145 Move X21, [X31+56]
	146 Move X24, [X31+32]
	147 Move X23, [X31+40]
	148 Move X26, [X31+16]
	149 Move X25, [X31+24]
	150 Move X30, [X31+80]
	151 Return X0
	152 Call 0x1C17F20

Method: System.Void Heapsort(System.Int32 lo, System.Int32 hi)

Disassembly:
	0x033A5C5C BL 0x33E14E4
	0x033A5C60 CBNZ X21, 0x33A5C6C
	0x033A5C64 MOV X0, X20
	0x033A5C68 BL 0x1D2C690
	0x033A5C6C MOV X0, X21
	0x033A5C70 BL 0x1C16F18
	0x033A5C74 BL 0x1990590
	0x033A5C78 STR X30, [X31 - 0x30]!
	0x033A5C7C STP X22, X21, [X31 + 0x10]
	0x033A5C80 STP X20, X19, [X31 + 0x20]
	0x033A5C84 ADRP X20, 0x1038000
	0x033A5C88 LDRB W8, [X20 + 0x14B]
	0x033A5C8C MOV X19, X0
	0x033A5C90 TBNZ X8, 0x0, 0x33A5CC0
	0x033A5C94 ADRP X0, 0xD86000
	0x033A5C98 LDR X0, [X0 + 0xC38]
	0x033A5C9C BL 0x1C16CF4
	0x033A5CA0 ADRP X0, 0xD86000
	0x033A5CA4 LDR X0, [X0 + 0xC40]
	0x033A5CA8 BL 0x1C16CF4
	0x033A5CAC ADRP X0, 0xD86000
	0x033A5CB0 LDR X0, [X0 + 0xC48]
	0x033A5CB4 BL 0x1C16CF4
	0x033A5CB8 MOVZ W8, 0x1
	0x033A5CBC STRB W8, [X20 + 0x14B]
	0x033A5CC0 LDR X20, [X19 + 0x10]
	0x033A5CC4 CBZ X20, 0x33A5DB8
	0x033A5CC8 ADRP X8, 0xD86000
	0x033A5CCC LDR X8, [X8 + 0xC48]
	0x033A5CD0 ADRP X22, 0xD86000
	0x033A5CD4 LDR X0, [X8]
	0x033A5CD8 LDR X22, [X22 + 0xC40]
	0x033A5CDC BL 0x1C16F10
	0x033A5CE0 LDR W2, [X20 + 0x18]
	0x033A5CE4 MOV X1, X19
	0x033A5CE8 MOV X21, X0
	0x033A5CEC BL 0x33A5370
	0x033A5CF0 LDR X0, [X22]
	0x033A5CF4 BL 0x1C16F10
	0x033A5CF8 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Subtract W8, W2, W1
	008 Add W22, W8, 1
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W19, W2
	011 Move W20, W1
	012 Move X21, X0
	013 Move W23, W22
	014 ShiftRight W23, 1
	015 And W23, W23, 0x7FFFFFFF
	016 Move X0, X21
	017 Move W1, W23
	018 Move W2, W22
	019 Move W3, W20
	020 Call SorterGenericArray.DownHeap, X0, X1, X2, X3
	021 Subtract W23, W23, 1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Subtract W23, W31, W20
	024 Move X0, X21
	025 Move W1, W20
	026 Move W2, W19
	027 Add W22, W23, W19
	028 Call SorterGenericArray.Swap, X0, X1, X2
	029 Move W1, 1
	030 Move X0, X21
	031 Move W2, W22
	032 Move W3, W20
	033 Call SorterGenericArray.DownHeap, X0, X1, X2, X3
	034 Subtract W19, W19, 1
	035 Add W8, W23, W19
	036 Add W8, W8, 2
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Move X23, [X31+56]
	044 Return 

Method: System.Void DownHeap(System.Int32 i, System.Int32 n, System.Int32 lo)

Disassembly:
	0x033A5F18 B.CS 0x33A5FDC
	0x033A5F1C ADD X8, X20, W22, SXTW
	0x033A5F20 MOVZ W9, 0x1
	0x033A5F24 STRB W9, [X8 + 0x20]
	0x033A5F28 LDR X23, [X19 + 0x30]
	0x033A5F2C MOVN X8, 0x80000000
	0x033A5F30 CMP X23, X8
	0x033A5F34 B.EQ 0x33A5FBC
	0x033A5F38 TBZ X23, 0x0, 0x33A5F4C
	0x033A5F3C MOVZ X8, 0x80000000
	0x033A5F40 SUB X8, X8, X23
	0x033A5F44 CMP X8, 0x2
	0x033A5F48 B.GE 0x33A5FBC
	0x033A5F4C ADRP X8, 0xD86000
	0x033A5F50 LDR X8, [X8 + 0xC58]
	0x033A5F54 ADD X9, X23, 0x1
	0x033A5F58 STR X9, [X19 + 0x30]
	0x033A5F5C LDR X0, [X8]
	0x033A5F60 BL 0x1C16F10
	0x033A5F64 MOV X20, X0
	0x033A5F68 MOV X1, X31
	0x033A5F6C BL 0x33BDD8C
	0x033A5F70 ADD W8, W22, 0x1
	0x033A5F74 MOV X21, X31
	0x033A5F78 STR X19, [X20 + 0x10]
	0x033A5F7C STR W22, [X20 + 0x18]
	0x033A5F80 STR X23, [X20 + 0x20]
	0x033A5F84 STR W8, [X19 + 0x18]
	0x033A5F88 LDRB W8, [X31 + 0xC]
	0x033A5F8C CBZ W8, 0x33A5F9C
	0x033A5F90 MOV X0, X19
	0x033A5F94 MOV X1, X31
	0x033A5F98 BL 0x33E14E4
	0x033A5F9C CBNZ X21, 0x33A5FD0
	0x033A5FA0 MOV X0, X20
	0x033A5FA4 LDP X20, X19, [X31 + 0x30]
	0x033A5FA8 LDP X22, X21, [X31 + 0x20]
	0x033A5FAC LDP X30, X23, [X31 + 0x10]
	0x033A5FB0 ADD X31, X31, 0x40
	0x033A5FB4 RET
	0x033A5FB8 BL 0x1C16F28
	0x033A5FBC BL 0x1C16F30
	0x033A5FC0 ADRP X8, 0xD86000
	0x033A5FC4 LDR X8, [X8 + 0xC50]
	0x033A5FC8 LDR X1, [X8]
	0x033A5FCC BL 0x1C16DEC
	0x033A5FD0 MOV X0, X21
	0x033A5FD4 BL 0x1C16F18
	0x033A5FD8 BL 0x1C16F20
	0x033A5FDC BL 0x1C16F28
	0x033A5FE0 BL 0x1C16F20
	0x033A5FE4 B 0x33A6000
	0x033A5FE8 B 0x33A6000
	0x033A5FEC B 0x33A6000
	0x033A5FF0 B 0x33A6000
	0x033A5FF4 B 0x33A6000
	0x033A5FF8 B 0x33A6000
	0x033A5FFC B 0x33A6000
	0x033A6000 MOV X20, X0
	0x033A6004 CMP W1, 0x1
	0x033A6008 B.NE 0x33A6024
	0x033A600C MOV X0, X20
	0x033A6010 BL 0x3EB1AD0
	0x033A6014 LDR X21, [X0]
	0x033A6018 BL 0x3EB1AE0
	0x033A601C MOV X20, X31
	0x033A6020 B 0x33A5F88
	0x033A6024 MOV X21, X31
	0x033A6028 B 0x33A6030
	0x033A602C MOV X20, X0
	0x033A6030 LDRB W8, [X31 + 0xC]
	0x033A6034 CBZ W8, 0x33A6044
	0x033A6038 MOV X0, X19
	0x033A603C MOV X1, X31
	0x033A6040 BL 0x33E14E4
	0x033A6044 CBNZ X21, 0x33A6050
	0x033A6048 MOV X0, X20
	0x033A604C BL 0x1D2C690
	0x033A6050 MOV X0, X21
	0x033A6054 BL 0x1C16F18
	0x033A6058 BL 0x1990590
	0x033A605C SUB X31, X31, 0x30
	0x033A6060 STP X30, X21, [X31 + 0x10]
	0x033A6064 STP X20, X19, [X31 + 0x20]
	0x033A6068 ADRP X21, 0x1037000
	0x033A606C LDRB W8, [X21 + 0x14E]
	0x033A6070 MOV X20, X1
	0x033A6074 MOV X19, X0
	0x033A6078 TBNZ X8, 0x0, 0x33A6090
	0x033A607C ADRP X0, 0xD85000
	0x033A6080 LDR X0, [X0 + 0xC60]
	0x033A6084 BL 0x1C16CF4
	0x033A6088 MOVZ W8, 0x1
	0x033A608C STRB W8, [X21 + 0x14E]
	0x033A6090 MOV X0, X31
	0x033A6094 STRB W31, [X31 + 0xC]
	0x033A6098 BL 0x32C5C58
	0x033A609C ADD X1, X31, 0xC
	0x033A60A0 MOV X0, X19
	0x033A60A4 MOV X2, X31
	0x033A60A8 BL 0x33DE64C
	0x033A60AC MOV X0, X19
	0x033A60B0 BL 0x33A5E28
	0x033A60B4 MOV X21, X0
	0x033A60B8 LDR X0, [X19 + 0x28]
	0x033A60BC CBZ X0, 0x33A6110
	0x033A60C0 ADRP X8, 0xD85000
	0x033A60C4 LDR X8, [X8 + 0xC60]
	0x033A60C8 LDR X3, [X8]
	0x033A60CC MOV X1, X20
	0x033A60D0 MOV X2, X21
	0x033A60D4 BL 0x2AA5098
	0x033A60D8 MOV X20, X31
	0x033A60DC LDRB W8, [X31 + 0xC]
	0x033A60E0 CBZ W8, 0x33A60F0
	0x033A60E4 MOV X0, X19
	0x033A60E8 MOV X1, X31
	0x033A60EC BL 0x33E14E4
	0x033A60F0 CBNZ X20, 0x33A6108
	0x033A60F4 MOV X0, X21
	0x033A60F8 LDP X20, X19, [X31 + 0x20]
	0x033A60FC LDP X30, X21, [X31 + 0x10]
	0x033A6100 ADD X31, X31, 0x30
	0x033A6104 RET
	0x033A6108 MOV X0, X20
	0x033A610C BL 0x1C16F18
	0x033A6110 BL 0x1C16F20
	0x033A6114 B 0x33A611C
	0x033A6118 B 0x33A611C
	0x033A611C MOV X21, X0
	0x033A6120 CMP W1, 0x1
	0x033A6124 B.NE 0x33A6140
	0x033A6128 MOV X0, X21
	0x033A612C BL 0x3EB1AD0
	0x033A6130 LDR X20, [X0]
	0x033A6134 BL 0x3EB1AE0
	0x033A6138 MOV X21, X31
	0x033A613C B 0x33A60DC
	0x033A6140 MOV X20, X31
	0x033A6144 B 0x33A614C
	0x033A6148 MOV X21, X0
	0x033A614C LDRB W8, [X31 + 0xC]
	0x033A6150 CBZ W8, 0x33A6160
	0x033A6154 MOV X0, X19
	0x033A6158 MOV X1, X31
	0x033A615C BL 0x33E14E4
	0x033A6160 CBNZ X20, 0x33A616C
	0x033A6164 MOV X0, X21
	0x033A6168 BL 0x1D2C690
	0x033A616C MOV X0, X20
	0x033A6170 BL 0x1C16F18
	0x033A6174 BL 0x1990590
	0x033A6178 SUB X31, X31, 0x30
	0x033A617C STP X30, X21, [X31 + 0x10]
	0x033A6180 STP X20, X19, [X31 + 0x20]
	0x033A6184 ADRP X21, 0x1037000
	0x033A6188 LDRB W8, [X21 + 0x14F]
	0x033A618C MOV X20, X1
	0x033A6190 MOV X19, X0
	0x033A6194 TBNZ X8, 0x0, 0x33A61AC
	0x033A6198 ADRP X0, 0xD85000
	0x033A619C LDR X0, [X0 + 0xC68]
	0x033A61A0 BL 0x1C16CF4
	0x033A61A4 MOVZ W8, 0x1
	0x033A61A8 STRB W8, [X21 + 0x14F]
	0x033A61AC MOV X0, X31
	0x033A61B0 STRB W31, [X31 + 0xC]
	0x033A61B4 BL 0x32C5C58
	0x033A61B8 ADD X1, X31, 0xC
	0x033A61BC MOV X0, X19
	0x033A61C0 MOV X2, X31
	0x033A61C4 BL 0x33DE64C
	0x033A61C8 ADRP X8, 0xD85000
	0x033A61CC LDR X8, [X8 + 0xC68]
	0x033A61D0 LDR X0, [X19 + 0x28]
	0x033A61D4 LDR X2, [X8]
	0x033A61D8 MOV X1, X20
	0x033A61DC BL 0x21A1918
	0x033A61E0 MOV X21, X0
	0x033A61E4 CBNZ X0, 0x33A61F8

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x1039000
	015 Move W8, [X20+327]
	016 Move W21, W2
	017 Move W24, W1
	018 Move X19, X0
	019 Move [X31+12], W3
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0xD79000
	025 Move X0, [X0+2328]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+327], W8
	029 Move X0, [X19]
	030 Compare X0, 0
	031 JumpIfEqual {211}
	032 Move W8, [X31+12]
	033 Move X2, X31
	034 Subtract W28, W8, 1
	035 Add W23, W28, W24
	036 Move W1, W23
	037 Call Array.GetValue, X0, X1
	038 Move X8, [X19+8]
	039 Move X22, X0
	040 Compare X8, 0
	041 JumpIfEqual {47}
	042 Move X0, X8
	043 Move W1, W23
	044 Move X2, X31
	045 Call Array.GetValue, X0, X1
	046 Move [X31], X0
	047 Move [X31], X31
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CINC not yet implemented."
	050 NotImplemented "Instruction SBFM not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W29, W24
	053 Move X20, 0xD79000
	054 Move X20, [X20+2328]
	055 Move W29, W24
	056 ShiftRight W29, 31
	057 And W29, W29, 0x3FFFFFFF
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, [X19]
	060 Compare X0, 0
	061 JumpIfEqual {211}
	062 Move W8, [X31+12]
	063 Move X25, [X19+16]
	064 Move X2, X31
	065 Add W27, W29, W8
	066 Subtract W1, W27, 1
	067 Call Array.GetValue, X0, X1
	068 Move X8, [X19]
	069 Compare X8, 0
	070 JumpIfEqual {211}
	071 Move X26, X0
	072 Move X0, X8
	073 Move W1, W27
	074 Move X2, X31
	075 Call Array.GetValue, X0, X1
	076 Compare X25, 0
	077 JumpIfEqual {211}
	078 Move X8, [X25]
	079 Move X1, [X20]
	080 Move X27, X0
	081 NotImplemented "Instruction LDRH not yet implemented."
	082 Compare X9, 0
	083 JumpIfEqual {90}
	084 Move X10, [X8+176]
	085 Add X10, X10, 8
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Subtract X9, X9, 1
	089 Add X10, X10, 16
	090 Move X0, X25
	091 Move W2, W31
	092 Call 0x1C5D788
	093 NotImplemented "Instruction LDRSW not yet implemented."
	094 Add X8, X8, X9
	095 Add X0, X8, 312
	096 Move X8, [X0]
	097 Move X3, [X0+8]
	098 Move X0, X25
	099 Move X1, X26
	100 Move X2, X27
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Or W29, W29, W0
	103 Move X0, [X19]
	104 Compare X0, 0
	105 JumpIfEqual {211}
	106 Move X26, [X19+16]
	107 Add W25, W28, W29
	108 Move W1, W25
	109 Move X2, X31
	110 Call Array.GetValue, X0, X1
	111 Compare X26, 0
	112 JumpIfEqual {211}
	113 Move X8, [X26]
	114 Move X1, [X20]
	115 Move X27, X0
	116 NotImplemented "Instruction LDRH not yet implemented."
	117 Compare X9, 0
	118 JumpIfEqual {125}
	119 Move X10, [X8+176]
	120 Add X10, X10, 8
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Subtract X9, X9, 1
	124 Add X10, X10, 16
	125 Move X0, X26
	126 Move W2, W31
	127 Call 0x1C5D788
	128 NotImplemented "Instruction LDRSW not yet implemented."
	129 Add X8, X8, X9
	130 Add X0, X8, 312
	131 Move X8, [X0]
	132 Move X3, [X0+8]
	133 Move X0, X26
	134 Move X1, X22
	135 Move X2, X27
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Move TEMP, X0
	138 And TEMP, TEMP, -2147483648
	139 Compare TEMP, -2147483648
	140 JumpIfNotEqual {52}
	141 Move X26, [X19]
	142 Compare X26, 0
	143 JumpIfEqual {211}
	144 Move X0, X26
	145 Move W1, W25
	146 Move X2, X31
	147 Call Array.GetValue, X0, X1
	148 Add W24, W28, W24
	149 Move X1, X0
	150 Move X0, X26
	151 Move W2, W24
	152 Move X3, X31
	153 Call Array.SetValue, X0, X1, X2
	154 Move X26, [X19+8]
	155 Compare X26, 0
	156 JumpIfEqual {166}
	157 Move X0, X26
	158 Move W1, W25
	159 Move X2, X31
	160 Call Array.GetValue, X0, X1
	161 Move X1, X0
	162 Move X0, X26
	163 Move W2, W24
	164 Move X3, X31
	165 Call Array.SetValue, X0, X1, X2
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move W24, W29
	168 Move X0, [X19]
	169 Compare X0, 0
	170 JumpIfEqual {211}
	171 Add W20, W28, W29
	172 Move X1, X22
	173 Move W2, W20
	174 Move X3, X31
	175 Call Array.SetValue, X0, X1, X2
	176 Move X0, [X19+8]
	177 Compare X0, 0
	178 JumpIfEqual {197}
	179 Move X1, [X31]
	180 Move W2, W20
	181 Move X20, [X31+96]
	182 Move X19, [X31+104]
	183 Move X22, [X31+80]
	184 Move X21, [X31+88]
	185 Move X24, [X31+64]
	186 Move X23, [X31+72]
	187 Move X26, [X31+48]
	188 Move X25, [X31+56]
	189 Move X28, [X31+32]
	190 Move X27, [X31+40]
	191 Move X29, [X31+16]
	192 Move X30, [X31+24]
	193 Move X3, X31
	194 Add X31, X31, 112
	195 Call Array.SetValue, X0, X1, X2
	196 Return 
	197 Move X20, [X31+96]
	198 Move X19, [X31+104]
	199 Move X22, [X31+80]
	200 Move X21, [X31+88]
	201 Move X24, [X31+64]
	202 Move X23, [X31+72]
	203 Move X26, [X31+48]
	204 Move X25, [X31+56]
	205 Move X28, [X31+32]
	206 Move X27, [X31+40]
	207 Move X29, [X31+16]
	208 Move X30, [X31+24]
	209 Add X31, X31, 112
	210 Return 
	211 Call 0x1C17F20

Method: System.Void InsertionSort(System.Int32 lo, System.Int32 hi)

Disassembly:
	0x033A5A74 MOV X21, X0
	0x033A5A78 B.NE 0x33A5AA8
	0x033A5A7C MOV X0, X21
	0x033A5A80 BL 0x3EB1AD0
	0x033A5A84 LDR X20, [X0]
	0x033A5A88 BL 0x3EB1AE0
	0x033A5A8C MOV X0, X19
	0x033A5A90 MOV X1, X31
	0x033A5A94 BL 0x33CB4DC
	0x033A5A98 CBNZ X20, 0x33A5AB0
	0x033A5A9C LDP X20, X19, [X31 + 0x10]
	0x033A5AA0 LDP X30, X21, [X31], #0x20
	0x033A5AA4 RET
	0x033A5AA8 MOV X20, X31
	0x033A5AAC B 0x33A5ABC
	0x033A5AB0 MOV X0, X20
	0x033A5AB4 BL 0x1C16F18
	0x033A5AB8 MOV X21, X0
	0x033A5ABC MOV X0, X19
	0x033A5AC0 MOV X1, X31
	0x033A5AC4 BL 0x33CB4DC
	0x033A5AC8 CBNZ X20, 0x33A5AD4
	0x033A5ACC MOV X0, X21
	0x033A5AD0 BL 0x1D2C690
	0x033A5AD4 MOV X0, X20
	0x033A5AD8 BL 0x1C16F18
	0x033A5ADC BL 0x1990590
	0x033A5AE0 SUB X31, X31, 0x40
	0x033A5AE4 STP X30, X23, [X31 + 0x10]
	0x033A5AE8 STP X22, X21, [X31 + 0x20]
	0x033A5AEC STP X20, X19, [X31 + 0x30]
	0x033A5AF0 ADRP X22, 0x1038000
	0x033A5AF4 LDRB W8, [X22 + 0x151]
	0x033A5AF8 MOV X21, X2
	0x033A5AFC MOV W20, W1
	0x033A5B00 MOV X19, X0
	0x033A5B04 TBNZ X8, 0x0, 0x33A5B28
	0x033A5B08 ADRP X0, 0xD86000
	0x033A5B0C LDR X0, [X0 + 0xC28]
	0x033A5B10 BL 0x1C16CF4
	0x033A5B14 ADRP X0, 0xD86000
	0x033A5B18 LDR X0, [X0 + 0xC30]
	0x033A5B1C BL 0x1C16CF4
	0x033A5B20 MOVZ W8, 0x1
	0x033A5B24 STRB W8, [X22 + 0x151]
	0x033A5B28 MOV X0, X31
	0x033A5B2C STRB W31, [X31 + 0xC]
	0x033A5B30 BL 0x32C5C58
	0x033A5B34 ADD X1, X31, 0xC
	0x033A5B38 MOV X0, X19
	0x033A5B3C MOV X2, X31
	0x033A5B40 BL 0x33DE64C
	0x033A5B44 LDR X8, [X19 + 0x20]
	0x033A5B48 CBZ X8, 0x33A5B90
	0x033A5B4C ADRP X23, 0xD86000
	0x033A5B50 LDR X23, [X23 + 0xC30]
	0x033A5B54 MOV W22, W31
	0x033A5B58 LDR W9, [X8 + 0x18]
	0x033A5B5C CMP W22, W9
	0x033A5B60 B.GE 0x33A5B94
	0x033A5B64 LDR X2, [X23]
	0x033A5B68 MOV X0, X8
	0x033A5B6C MOV W1, W22
	0x033A5B70 BL 0x301BCCC
	0x033A5B74 CBZ X0, 0x33A5BF8
	0x033A5B78 MOV W1, W20
	0x033A5B7C MOV X2, X21
	0x033A5B80 BL 0x33A5978
	0x033A5B84 LDR X8, [X19 + 0x20]
	0x033A5B88 ADD W22, W22, 0x1
	0x033A5B8C CBNZ X8, 0x33A5B58
	0x033A5B90 BL 0x1C16F20
	0x033A5B94 LDR X8, [X19 + 0x10]
	0x033A5B98 CBZ X8, 0x33A5C04
	0x033A5B9C LDR W9, [X8 + 0x18]
	0x033A5BA0 CMP W9, W20
	0x033A5BA4 B.LS 0x33A5C08
	0x033A5BA8 ADD X8, X8, W20, SXTW
	0x033A5BAC STRB W31, [X8 + 0x20]
	0x033A5BB0 LDR W8, [X19 + 0x18]
	0x033A5BB4 CMP W8, W20
	0x033A5BB8 B.LE 0x33A5BC8
	0x033A5BBC MOV X21, X31
	0x033A5BC0 STR W20, [X19 + 0x18]
	0x033A5BC4 B 0x33A5BCC
	0x033A5BC8 MOV X21, X31
	0x033A5BCC LDRB W8, [X31 + 0xC]
	0x033A5BD0 CBZ W8, 0x33A5BE0
	0x033A5BD4 MOV X0, X19
	0x033A5BD8 MOV X1, X31
	0x033A5BDC BL 0x33E14E4
	0x033A5BE0 CBNZ X21, 0x33A5BFC
	0x033A5BE4 LDP X20, X19, [X31 + 0x30]
	0x033A5BE8 LDP X22, X21, [X31 + 0x20]
	0x033A5BEC LDP X30, X23, [X31 + 0x10]
	0x033A5BF0 ADD X31, X31, 0x40
	0x033A5BF4 RET
	0x033A5BF8 BL 0x1C16F20
	0x033A5BFC MOV X0, X21
	0x033A5C00 BL 0x1C16F18
	0x033A5C04 BL 0x1C16F20
	0x033A5C08 BL 0x1C16F28
	0x033A5C0C B 0x33A5C20
	0x033A5C10 B 0x33A5C20
	0x033A5C14 B 0x33A5C20
	0x033A5C18 B 0x33A5C20
	0x033A5C1C B 0x33A5C20
	0x033A5C20 MOV X20, X0
	0x033A5C24 CMP W1, 0x1
	0x033A5C28 B.NE 0x33A5C40
	0x033A5C2C MOV X0, X20
	0x033A5C30 BL 0x3EB1AD0
	0x033A5C34 LDR X21, [X0]
	0x033A5C38 BL 0x3EB1AE0
	0x033A5C3C B 0x33A5BCC
	0x033A5C40 MOV X21, X31
	0x033A5C44 B 0x33A5C4C
	0x033A5C48 MOV X20, X0
	0x033A5C4C LDRB W8, [X31 + 0xC]
	0x033A5C50 CBZ W8, 0x33A5C60
	0x033A5C54 MOV X0, X19
	0x033A5C58 MOV X1, X31

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0x1039000
	013 Move W8, [X22+328]
	014 Move W19, W2
	015 Move W20, W1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xD79000
	022 Move X0, [X0+2328]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+328], W8
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X28, 0xD79000
	028 Move X28, [X28+2328]
	029 Move W23, W20
	030 Move X0, [X21]
	031 Compare X0, 0
	032 JumpIfEqual {140}
	033 Add W22, W23, 1
	034 Move W1, W22
	035 Move X2, X31
	036 Call Array.GetValue, X0, X1
	037 Move X8, [X21+8]
	038 Move X25, X0
	039 Compare X8, 0
	040 JumpIfEqual {46}
	041 Move X0, X8
	042 Move W1, W22
	043 Move X2, X31
	044 Call Array.GetValue, X0, X1
	045 Move X24, X0
	046 Move X24, X31
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X0, [X21]
	049 Compare X0, 0
	050 JumpIfEqual {140}
	051 Move X26, [X21+16]
	052 Move W1, W23
	053 Move X2, X31
	054 Call Array.GetValue, X0, X1
	055 Compare X26, 0
	056 JumpIfEqual {140}
	057 Move X8, [X26]
	058 Move X1, [X28]
	059 Move X27, X0
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move X0, X26
	070 Move W2, W31
	071 Call 0x1C5D788
	072 NotImplemented "Instruction LDRSW not yet implemented."
	073 Add X8, X8, X9
	074 Add X0, X8, 312
	075 Move X8, [X0]
	076 Move X3, [X0+8]
	077 Move X0, X26
	078 Move X1, X25
	079 Move X2, X27
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move TEMP, X0
	082 And TEMP, TEMP, -2147483648
	083 Compare TEMP, -2147483648
	084 JumpIfNotEqual {111}
	085 Move X27, [X21]
	086 Compare X27, 0
	087 JumpIfEqual {140}
	088 Move X0, X27
	089 Move W1, W23
	090 Move X2, X31
	091 Call Array.GetValue, X0, X1
	092 Add W26, W23, 1
	093 Move X1, X0
	094 Move X0, X27
	095 Move W2, W26
	096 Move X3, X31
	097 Call Array.SetValue, X0, X1, X2
	098 Move X27, [X21+8]
	099 Compare X27, 0
	100 JumpIfEqual {110}
	101 Move X0, X27
	102 Move W1, W23
	103 Move X2, X31
	104 Call Array.GetValue, X0, X1
	105 Move X1, X0
	106 Move X0, X27
	107 Move W2, W26
	108 Move X3, X31
	109 Call Array.SetValue, X0, X1, X2
	110 Subtract W23, W23, 1
	111 Move X0, [X21]
	112 Compare X0, 0
	113 JumpIfEqual {140}
	114 Add W23, W23, 1
	115 Move X1, X25
	116 Move W2, W23
	117 Move X3, X31
	118 Call Array.SetValue, X0, X1, X2
	119 Move X0, [X21+8]
	120 Compare X0, 0
	121 JumpIfEqual {126}
	122 Move X1, X24
	123 Move W2, W23
	124 Move X3, X31
	125 Call Array.SetValue, X0, X1, X2
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move W23, W22
	128 Move X20, [X31+80]
	129 Move X19, [X31+88]
	130 Move X22, [X31+64]
	131 Move X21, [X31+72]
	132 Move X24, [X31+48]
	133 Move X23, [X31+56]
	134 Move X26, [X31+32]
	135 Move X25, [X31+40]
	136 Move X28, [X31+16]
	137 Move X27, [X31+24]
	138 Move X30, [X31+96]
	139 Return 
	140 Call 0x1C17F20

