Type: System.Tuple

Method: System.Tuple`2<T1, T2> Create(T1 item1, T2 item2)

Disassembly:
	0x0229F5F8 LDRB W8, [X0 + 0x135]
	0x0229F5FC TBNZ X8, 0x0, 0x229F604
	0x0229F600 BL 0x1C5C684
	0x0229F604 ADRP X21, 0x1E7C000
	0x0229F608 LDR X21, [X21 + 0x6E8]
	0x0229F60C LDR X0, [X21]
	0x0229F610 LDR W8, [X0 + 0xE0]
	0x0229F614 CBNZ W8, 0x229F620
	0x0229F618 BL 0x1C16DFC
	0x0229F61C LDR X0, [X21]
	0x0229F620 ADRP X9, 0x1E54000
	0x0229F624 LDR X8, [X0 + 0xB8]
	0x0229F628 LDR X9, [X9 + 0x6C0]
	0x0229F62C LDR X0, [X9]
	0x0229F630 LDR X9, [X19 + 0x38]
	0x0229F634 LDR X19, [X8]
	0x0229F638 LDR W8, [X0 + 0xE0]
	0x0229F63C LDR X21, [X9 + 0x28]
	0x0229F640 CBNZ W8, 0x229F648
	0x0229F644 BL 0x1C16DFC
	0x0229F648 MOV X0, X21
	0x0229F64C MOV X1, X31
	0x0229F650 BL 0x338C698
	0x0229F654 CBZ X19, 0x229F684
	0x0229F658 ADRP X8, 0x1E7D000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X21, X2
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {14}
	011 Move X0, X21
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X0, [X8+16]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Call 0x1C17F10
	022 Move X8, [X21+56]
	023 Move X1, X20
	024 Move X2, X19
	025 Move X21, X0
	026 Move X3, [X8+24]
	027 Call Tuple`2<Object, Object>..ctor, X0, X1, X2
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X0, X21
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0

Method: System.Tuple`3<T1, T2, T3> Create(T1 item1, T2 item2, T3 item3)

Disassembly:
	0x0229F7A8 BL 0x1C16F20
	0x0229F7AC STP X30, X21, [X31 - 0x20]!
	0x0229F7B0 STP X20, X19, [X31 + 0x10]
	0x0229F7B4 LDR X8, [X0 + 0x38]
	0x0229F7B8 MOV X19, X0
	0x0229F7BC CBNZ X8, 0x229F7F8
	0x0229F7C0 ADRP X0, 0x1E7D000
	0x0229F7C4 LDR X0, [X0 + 0x7D0]
	0x0229F7C8 BL 0x1C16CF4
	0x0229F7CC ADRP X0, 0x1E7C000
	0x0229F7D0 LDR X0, [X0 + 0x6E8]
	0x0229F7D4 BL 0x1C16CF4
	0x0229F7D8 ADRP X0, 0x1E54000
	0x0229F7DC LDR X0, [X0 + 0x6C0]
	0x0229F7E0 BL 0x1C16CF4
	0x0229F7E4 LDR X8, [X19 + 0x38]
	0x0229F7E8 CBNZ X8, 0x229F7F8
	0x0229F7EC MOV X0, X19
	0x0229F7F0 BL 0x1C5C6E0
	0x0229F7F4 LDR X8, [X19 + 0x38]
	0x0229F7F8 LDR X0, [X8]
	0x0229F7FC LDRB W8, [X0 + 0x135]
	0x0229F800 TBNZ X8, 0x0, 0x229F808
	0x0229F804 BL 0x1C5C684
	0x0229F808 BL 0x1C16F10
	0x0229F80C LDR X8, [X19 + 0x38]
	0x0229F810 MOV X20, X0
	0x0229F814 LDR X1, [X8 + 0x8]
	0x0229F818 BL 0x27141E0
	0x0229F81C LDR X8, [X19 + 0x38]
	0x0229F820 LDR X0, [X8 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X4+56]
	008 Move X22, X4
	009 Move X19, X3
	010 Move X20, X2
	011 Move X21, X1
	012 Move X23, X0
	013 Compare X8, 0
	014 JumpIfNotEqual {18}
	015 Move X0, X22
	016 Call 0x1C5D6E0
	017 Move X8, [X22+56]
	018 Move X0, [X8+24]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Call 0x1C17F10
	026 Move X8, [X22+56]
	027 Move X1, X23
	028 Move X2, X21
	029 Move X3, X20
	030 Move X5, [X8+32]
	031 Move X4, X19
	032 Move X22, X0
	033 Call 0x270664C, X0, X1, X2, X3
	034 Move X0, X22
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Move X23, [X31+56]
	041 Return X0

Method: System.Int32 CombineHashCodes(System.Int32 h1, System.Int32 h2)

Disassembly:
	0x03395DFC CMP X19, X0
	0x03395E00 B.EQ 0x3395E68
	0x03395E04 LDR X0, [X22]

ISIL:
	001 Add W8, W0, W0
	002 Xor W0, W8, W1
	003 Return X0

Method: System.Int32 CombineHashCodes(System.Int32 h1, System.Int32 h2, System.Int32 h3)

Disassembly:
	0x03395E08 LDR X20, [X23]
	0x03395E0C LDR W8, [X0 + 0xE0]
	0x03395E10 CBNZ W8, 0x3395E18
	0x03395E14 BL 0x1C16DFC
	0x03395E18 MOV X0, X20

ISIL:
	001 Add W8, W0, W0
	002 Xor W8, W8, W1
	003 Add W8, W8, W8
	004 Xor W0, W8, W2
	005 Return X0

