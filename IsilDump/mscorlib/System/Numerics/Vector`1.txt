Type: System.Numerics.Vector`1

Method: System.Int32 get_Count()

Disassembly:
	0x0281F4F0 LDR X8, [X8 + 0x40]
	0x0281F4F4 LDR X9, [X1 + 0x40]
	0x0281F4F8 CMP X8, X9
	0x0281F4FC B.NE 0x2820AD0
	0x0281F500 BL 0x1C16E08
	0x0281F504 LDRB W8, [X0]
	0x0281F508 STRB W8, [X19 + 0xF]
	0x0281F50C B 0x282051C
	0x0281F510 LDR X0, [X20]
	0x0281F514 LDRB W8, [X0 + 0x135]
	0x0281F518 TBNZ X8, 0x0, 0x281F520
	0x0281F51C BL 0x1C5C684
	0x0281F520 LDR X8, [X24]
	0x0281F524 LDR X9, [X0 + 0xC0]
	0x0281F528 LDR W10, [X8 + 0xE0]
	0x0281F52C LDR X22, [X9 + 0x18]
	0x0281F530 CBNZ W10, 0x281F53C
	0x0281F534 MOV X0, X8
	0x0281F538 BL 0x1C16DFC
	0x0281F53C MOV X0, X22
	0x0281F540 MOV X1, X31
	0x0281F544 BL 0x338C698
	0x0281F548 ADRP X8, 0x18FB000
	0x0281F54C LDR X8, [X8 + 0xD98]
	0x0281F550 MOV X22, X0
	0x0281F554 MOV X1, X31
	0x0281F558 LDR X8, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+32]
	005 Move W8, [X0+309]
	006 Move TEMP, X8
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {11}
	010 Call 0x1C5D684
	011 Move X8, [X0+192]
	012 Move X0, [X8+8]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move X0, [X19+32]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move X8, [X0+192]
	031 Move X0, [X8+8]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X0+184]
	039 Move W0, [X8]
	040 Move X30, [X31+16]
	041 Move X19, [X31+24]
	042 Return X0

Method: System.Numerics.Vector`1<T> get_Zero()

Disassembly:
	0x0281F55C MOV X0, X8
	0x0281F560 BL 0x338C698
	0x0281F564 MOV X1, X0
	0x0281F568 MOV X0, X22
	0x0281F56C MOV X2, X31
	0x0281F570 BL 0x3395194
	0x0281F574 TBZ X0, 0x0, 0x281F720
	0x0281F578 ADRP X23, 0x18D9000
	0x0281F57C LDR X23, [X23 + 0x658]
	0x0281F580 MOV X22, X31
	0x0281F584 LDR X0, [X20]
	0x0281F588 LDRB W8, [X0 + 0x135]
	0x0281F58C TBNZ X8, 0x0, 0x281F594
	0x0281F590 BL 0x1C5C684
	0x0281F594 LDR X8, [X0 + 0xC0]
	0x0281F598 LDR X0, [X8 + 0x8]
	0x0281F59C LDRB W8, [X0 + 0x135]
	0x0281F5A0 TBNZ X8, 0x0, 0x281F5A8
	0x0281F5A4 BL 0x1C5C684
	0x0281F5A8 LDR W8, [X0 + 0xE0]
	0x0281F5AC CBNZ W8, 0x281F5B4
	0x0281F5B0 BL 0x1C16DFC
	0x0281F5B4 LDR X0, [X20]
	0x0281F5B8 LDRB W8, [X0 + 0x135]
	0x0281F5BC TBNZ X8, 0x0, 0x281F5C4
	0x0281F5C0 BL 0x1C5C684
	0x0281F5C4 LDR X8, [X0 + 0xC0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+32]
	005 Move W8, [X0+309]
	006 Move TEMP, X8
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {11}
	010 Call 0x1C5D684
	011 Move X8, [X0+192]
	012 Move X0, [X8+8]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move X0, [X19+32]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move X8, [X0+192]
	031 Move X0, [X8+8]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X0+184]
	039 Move X0, [X8+8]
	040 Move X1, [X8+16]
	041 Move X30, [X31+16]
	042 Move X19, [X31+24]
	043 Return X0

Method: System.Int32 InitializeCount()

Disassembly:
	0x0281F5C8 LDR X24, [X8 + 0x28]
	0x0281F5CC LDR X0, [X24 + 0x20]
	0x0281F5D0 LDRB W8, [X0 + 0x135]
	0x0281F5D4 TBNZ X8, 0x0, 0x281F5DC
	0x0281F5D8 BL 0x1C5C684
	0x0281F5DC LDR X8, [X0 + 0xC0]
	0x0281F5E0 LDR X0, [X8 + 0x8]
	0x0281F5E4 LDRB W8, [X0 + 0x135]
	0x0281F5E8 TBNZ X8, 0x0, 0x281F5F0
	0x0281F5EC BL 0x1C5C684
	0x0281F5F0 LDR W8, [X0 + 0xE0]
	0x0281F5F4 CBNZ W8, 0x281F5FC
	0x0281F5F8 BL 0x1C16DFC
	0x0281F5FC LDR X0, [X24 + 0x20]
	0x0281F600 LDRB W8, [X0 + 0x135]
	0x0281F604 TBNZ X8, 0x0, 0x281F60C
	0x0281F608 BL 0x1C5C684
	0x0281F60C LDR X8, [X0 + 0xC0]
	0x0281F610 LDR X0, [X8 + 0x8]
	0x0281F614 LDRB W8, [X0 + 0x135]
	0x0281F618 TBNZ X8, 0x0, 0x281F620
	0x0281F61C BL 0x1C5C684
	0x0281F620 LDR X8, [X0 + 0xB8]
	0x0281F624 LDRSW X8, [X8]
	0x0281F628 CMP X22, X8
	0x0281F62C B.GE 0x282051C
	0x0281F630 STRH W21, [X31 + 0x3C]
	0x0281F634 LDR X0, [X20]
	0x0281F638 LDRB W8, [X0 + 0x135]
	0x0281F63C TBNZ X8, 0x0, 0x281F644
	0x0281F640 BL 0x1C5C684
	0x0281F644 LDR X8, [X0 + 0xC0]
	0x0281F648 ADD X1, X31, 0x3C
	0x0281F64C LDR X0, [X8 + 0x20]
	0x0281F650 BL 0x1C16E04
	0x0281F654 CBZ X0, 0x2820ACC
	0x0281F658 LDR X8, [X0]
	0x0281F65C LDR X1, [X23]
	0x0281F660 LDR X8, [X8 + 0x40]
	0x0281F664 LDR X9, [X1 + 0x40]
	0x0281F668 CMP X8, X9
	0x0281F66C B.NE 0x2820AD0
	0x0281F670 BL 0x1C16E08
	0x0281F674 LDRH W8, [X0]
	0x0281F678 ADD X22, X22, 0x1
	0x0281F67C STRH W8, [X19], #0x2
	0x0281F680 B 0x281F584
	0x0281F684 LDR X0, [X20]
	0x0281F688 LDRB W8, [X0 + 0x135]
	0x0281F68C TBNZ X8, 0x0, 0x281F694
	0x0281F690 BL 0x1C5C684
	0x0281F694 LDR X8, [X24]
	0x0281F698 LDR X9, [X0 + 0xC0]
	0x0281F69C LDR W10, [X8 + 0xE0]
	0x0281F6A0 LDR X22, [X9 + 0x18]
	0x0281F6A4 CBNZ W10, 0x281F6B0
	0x0281F6A8 MOV X0, X8
	0x0281F6AC BL 0x1C16DFC
	0x0281F6B0 MOV X0, X22
	0x0281F6B4 MOV X1, X31
	0x0281F6B8 BL 0x338C698
	0x0281F6BC ADRP X8, 0x18FB000
	0x0281F6C0 LDR X8, [X8 + 0xD98]
	0x0281F6C4 MOV X22, X0
	0x0281F6C8 MOV X1, X31
	0x0281F6CC LDR X8, [X8]
	0x0281F6D0 MOV X0, X8
	0x0281F6D4 BL 0x338C698
	0x0281F6D8 MOV X1, X0
	0x0281F6DC MOV X0, X22
	0x0281F6E0 MOV X2, X31
	0x0281F6E4 BL 0x3395194
	0x0281F6E8 TBZ X0, 0x0, 0x281F894
	0x0281F6EC STRH W21, [X31 + 0x3C]
	0x0281F6F0 LDR X0, [X20]
	0x0281F6F4 LDRB W8, [X0 + 0x135]
	0x0281F6F8 TBNZ X8, 0x0, 0x281F700
	0x0281F6FC BL 0x1C5C684
	0x0281F700 LDR X8, [X0 + 0xC0]
	0x0281F704 ADD X1, X31, 0x3C
	0x0281F708 LDR X0, [X8 + 0x20]
	0x0281F70C BL 0x1C16E04
	0x0281F710 CBZ X0, 0x2820ACC
	0x0281F714 ADRP X22, 0x18D9000
	0x0281F718 LDR X22, [X22 + 0x658]
	0x0281F71C B 0x281F92C
	0x0281F720 LDR X0, [X20]
	0x0281F724 LDRB W8, [X0 + 0x135]
	0x0281F728 TBNZ X8, 0x0, 0x281F730
	0x0281F72C BL 0x1C5C684
	0x0281F730 LDR X8, [X24]
	0x0281F734 LDR X9, [X0 + 0xC0]
	0x0281F738 LDR W10, [X8 + 0xE0]
	0x0281F73C LDR X22, [X9 + 0x18]
	0x0281F740 CBNZ W10, 0x281F74C
	0x0281F744 MOV X0, X8
	0x0281F748 BL 0x1C16DFC
	0x0281F74C MOV X0, X22
	0x0281F750 MOV X1, X31
	0x0281F754 BL 0x338C698
	0x0281F758 ADRP X8, 0x18FB000
	0x0281F75C LDR X8, [X8 + 0xD78]
	0x0281F760 MOV X22, X0
	0x0281F764 MOV X1, X31
	0x0281F768 LDR X8, [X8]
	0x0281F76C MOV X0, X8
	0x0281F770 BL 0x338C698
	0x0281F774 MOV X1, X0
	0x0281F778 MOV X0, X22
	0x0281F77C MOV X2, X31
	0x0281F780 BL 0x3395194
	0x0281F784 TBZ X0, 0x0, 0x281FB68
	0x0281F788 ADRP X23, 0x18D8000
	0x0281F78C LDR X23, [X23 + 0x628]
	0x0281F790 MOV X22, X31
	0x0281F794 LDR X0, [X20]
	0x0281F798 LDRB W8, [X0 + 0x135]
	0x0281F79C TBNZ X8, 0x0, 0x281F7A4
	0x0281F7A0 BL 0x1C5C684
	0x0281F7A4 LDR X8, [X0 + 0xC0]
	0x0281F7A8 LDR X0, [X8 + 0x8]
	0x0281F7AC LDRB W8, [X0 + 0x135]
	0x0281F7B0 TBNZ X8, 0x0, 0x281F7B8
	0x0281F7B4 BL 0x1C5C684
	0x0281F7B8 LDR W8, [X0 + 0xE0]
	0x0281F7BC CBNZ W8, 0x281F7C4
	0x0281F7C0 BL 0x1C16DFC
	0x0281F7C4 LDR X0, [X20]
	0x0281F7C8 LDRB W8, [X0 + 0x135]
	0x0281F7CC TBNZ X8, 0x0, 0x281F7D4
	0x0281F7D0 BL 0x1C5C684
	0x0281F7D4 LDR X8, [X0 + 0xC0]
	0x0281F7D8 LDR X24, [X8 + 0x28]
	0x0281F7DC LDR X0, [X24 + 0x20]
	0x0281F7E0 LDRB W8, [X0 + 0x135]
	0x0281F7E4 TBNZ X8, 0x0, 0x281F7EC
	0x0281F7E8 BL 0x1C5C684
	0x0281F7EC LDR X8, [X0 + 0xC0]
	0x0281F7F0 LDR X0, [X8 + 0x8]
	0x0281F7F4 LDRB W8, [X0 + 0x135]
	0x0281F7F8 TBNZ X8, 0x0, 0x281F800
	0x0281F7FC BL 0x1C5C684
	0x0281F800 LDR W8, [X0 + 0xE0]
	0x0281F804 CBNZ W8, 0x281F80C
	0x0281F808 BL 0x1C16DFC
	0x0281F80C LDR X0, [X24 + 0x20]
	0x0281F810 LDRB W8, [X0 + 0x135]
	0x0281F814 TBNZ X8, 0x0, 0x281F81C
	0x0281F818 BL 0x1C5C684
	0x0281F81C LDR X8, [X0 + 0xC0]
	0x0281F820 LDR X0, [X8 + 0x8]
	0x0281F824 LDRB W8, [X0 + 0x135]
	0x0281F828 TBNZ X8, 0x0, 0x281F830
	0x0281F82C BL 0x1C5C684
	0x0281F830 LDR X8, [X0 + 0xB8]
	0x0281F834 LDRSW X8, [X8]
	0x0281F838 CMP X22, X8
	0x0281F83C B.GE 0x282051C
	0x0281F840 STRH W21, [X31 + 0x3C]
	0x0281F844 LDR X0, [X20]
	0x0281F848 LDRB W8, [X0 + 0x135]
	0x0281F84C TBNZ X8, 0x0, 0x281F854
	0x0281F850 BL 0x1C5C684
	0x0281F854 LDR X8, [X0 + 0xC0]
	0x0281F858 ADD X1, X31, 0x3C
	0x0281F85C LDR X0, [X8 + 0x20]
	0x0281F860 BL 0x1C16E04
	0x0281F864 CBZ X0, 0x2820ACC
	0x0281F868 LDR X8, [X0]
	0x0281F86C LDR X1, [X23]
	0x0281F870 LDR X8, [X8 + 0x40]
	0x0281F874 LDR X9, [X1 + 0x40]
	0x0281F878 CMP X8, X9
	0x0281F87C B.NE 0x2820AD0
	0x0281F880 BL 0x1C16E08
	0x0281F884 LDRH W8, [X0]
	0x0281F888 ADD X22, X22, 0x1
	0x0281F88C STRH W8, [X19], #0x2
	0x0281F890 B 0x281F794
	0x0281F894 LDR X0, [X20]
	0x0281F898 LDRB W8, [X0 + 0x135]
	0x0281F89C TBNZ X8, 0x0, 0x281F8A4
	0x0281F8A0 BL 0x1C5C684
	0x0281F8A4 LDR X8, [X24]
	0x0281F8A8 LDR X9, [X0 + 0xC0]
	0x0281F8AC LDR W10, [X8 + 0xE0]
	0x0281F8B0 LDR X22, [X9 + 0x18]
	0x0281F8B4 CBNZ W10, 0x281F8C0
	0x0281F8B8 MOV X0, X8
	0x0281F8BC BL 0x1C16DFC
	0x0281F8C0 MOV X0, X22
	0x0281F8C4 MOV X1, X31
	0x0281F8C8 BL 0x338C698
	0x0281F8CC ADRP X8, 0x18FB000
	0x0281F8D0 LDR X8, [X8 + 0xD78]
	0x0281F8D4 MOV X22, X0
	0x0281F8D8 MOV X1, X31
	0x0281F8DC LDR X8, [X8]
	0x0281F8E0 MOV X0, X8
	0x0281F8E4 BL 0x338C698
	0x0281F8E8 MOV X1, X0
	0x0281F8EC MOV X0, X22
	0x0281F8F0 MOV X2, X31
	0x0281F8F4 BL 0x3395194
	0x0281F8F8 TBZ X0, 0x0, 0x281FCDC
	0x0281F8FC STRH W21, [X31 + 0x3C]
	0x0281F900 LDR X0, [X20]
	0x0281F904 LDRB W8, [X0 + 0x135]
	0x0281F908 TBNZ X8, 0x0, 0x281F910
	0x0281F90C BL 0x1C5C684
	0x0281F910 LDR X8, [X0 + 0xC0]
	0x0281F914 ADD X1, X31, 0x3C
	0x0281F918 LDR X0, [X8 + 0x20]
	0x0281F91C BL 0x1C16E04
	0x0281F920 CBZ X0, 0x2820ACC
	0x0281F924 ADRP X22, 0x18D8000
	0x0281F928 LDR X22, [X22 + 0x628]
	0x0281F92C LDR X8, [X0]
	0x0281F930 LDR X1, [X22]
	0x0281F934 LDR X8, [X8 + 0x40]
	0x0281F938 LDR X9, [X1 + 0x40]
	0x0281F93C CMP X8, X9
	0x0281F940 B.NE 0x2820AD0
	0x0281F944 BL 0x1C16E08
	0x0281F948 LDRH W8, [X0]
	0x0281F94C STRH W8, [X19]
	0x0281F950 STRH W21, [X31 + 0x38]
	0x0281F954 LDR X0, [X20]
	0x0281F958 LDRB W8, [X0 + 0x135]
	0x0281F95C TBNZ X8, 0x0, 0x281F964
	0x0281F960 BL 0x1C5C684
	0x0281F964 LDR X8, [X0 + 0xC0]
	0x0281F968 ADD X1, X31, 0x38
	0x0281F96C LDR X0, [X8 + 0x20]
	0x0281F970 BL 0x1C16E04
	0x0281F974 CBZ X0, 0x2820ACC
	0x0281F978 LDR X8, [X0]
	0x0281F97C LDR X1, [X22]
	0x0281F980 LDR X8, [X8 + 0x40]
	0x0281F984 LDR X9, [X1 + 0x40]
	0x0281F988 CMP X8, X9
	0x0281F98C B.NE 0x2820AD0
	0x0281F990 BL 0x1C16E08
	0x0281F994 LDRH W8, [X0]
	0x0281F998 STRH W8, [X19 + 0x2]
	0x0281F99C STRH W21, [X31 + 0x34]
	0x0281F9A0 LDR X0, [X20]
	0x0281F9A4 LDRB W8, [X0 + 0x135]
	0x0281F9A8 TBNZ X8, 0x0, 0x281F9B0
	0x0281F9AC BL 0x1C5C684
	0x0281F9B0 LDR X8, [X0 + 0xC0]
	0x0281F9B4 ADD X1, X31, 0x34
	0x0281F9B8 LDR X0, [X8 + 0x20]
	0x0281F9BC BL 0x1C16E04
	0x0281F9C0 CBZ X0, 0x2820ACC
	0x0281F9C4 LDR X8, [X0]
	0x0281F9C8 LDR X1, [X22]
	0x0281F9CC LDR X8, [X8 + 0x40]
	0x0281F9D0 LDR X9, [X1 + 0x40]
	0x0281F9D4 CMP X8, X9
	0x0281F9D8 B.NE 0x2820AD0
	0x0281F9DC BL 0x1C16E08
	0x0281F9E0 LDRH W8, [X0]
	0x0281F9E4 STRH W8, [X19 + 0x4]
	0x0281F9E8 STRH W21, [X31 + 0x30]
	0x0281F9EC LDR X0, [X20]
	0x0281F9F0 LDRB W8, [X0 + 0x135]
	0x0281F9F4 TBNZ X8, 0x0, 0x281F9FC
	0x0281F9F8 BL 0x1C5C684
	0x0281F9FC LDR X8, [X0 + 0xC0]
	0x0281FA00 ADD X1, X31, 0x30
	0x0281FA04 LDR X0, [X8 + 0x20]
	0x0281FA08 BL 0x1C16E04
	0x0281FA0C CBZ X0, 0x2820ACC
	0x0281FA10 LDR X8, [X0]
	0x0281FA14 LDR X1, [X22]
	0x0281FA18 LDR X8, [X8 + 0x40]
	0x0281FA1C LDR X9, [X1 + 0x40]
	0x0281FA20 CMP X8, X9
	0x0281FA24 B.NE 0x2820AD0
	0x0281FA28 BL 0x1C16E08
	0x0281FA2C LDRH W8, [X0]
	0x0281FA30 STRH W8, [X19 + 0x6]
	0x0281FA34 STRH W21, [X31 + 0x2C]
	0x0281FA38 LDR X0, [X20]
	0x0281FA3C LDRB W8, [X0 + 0x135]
	0x0281FA40 TBNZ X8, 0x0, 0x281FA48
	0x0281FA44 BL 0x1C5C684
	0x0281FA48 LDR X8, [X0 + 0xC0]
	0x0281FA4C ADD X1, X31, 0x2C
	0x0281FA50 LDR X0, [X8 + 0x20]
	0x0281FA54 BL 0x1C16E04
	0x0281FA58 CBZ X0, 0x2820ACC
	0x0281FA5C LDR X8, [X0]
	0x0281FA60 LDR X1, [X22]
	0x0281FA64 LDR X8, [X8 + 0x40]
	0x0281FA68 LDR X9, [X1 + 0x40]
	0x0281FA6C CMP X8, X9
	0x0281FA70 B.NE 0x2820AD0
	0x0281FA74 BL 0x1C16E08
	0x0281FA78 LDRH W8, [X0]
	0x0281FA7C STRH W8, [X19 + 0x8]
	0x0281FA80 STRH W21, [X31 + 0x28]
	0x0281FA84 LDR X0, [X20]
	0x0281FA88 LDRB W8, [X0 + 0x135]
	0x0281FA8C TBNZ X8, 0x0, 0x281FA94
	0x0281FA90 BL 0x1C5C684
	0x0281FA94 LDR X8, [X0 + 0xC0]
	0x0281FA98 ADD X1, X31, 0x28
	0x0281FA9C LDR X0, [X8 + 0x20]
	0x0281FAA0 BL 0x1C16E04
	0x0281FAA4 CBZ X0, 0x2820ACC
	0x0281FAA8 LDR X8, [X0]
	0x0281FAAC LDR X1, [X22]
	0x0281FAB0 LDR X8, [X8 + 0x40]
	0x0281FAB4 LDR X9, [X1 + 0x40]
	0x0281FAB8 CMP X8, X9
	0x0281FABC B.NE 0x2820AD0
	0x0281FAC0 BL 0x1C16E08
	0x0281FAC4 LDRH W8, [X0]
	0x0281FAC8 STRH W8, [X19 + 0xA]
	0x0281FACC STRH W21, [X31 + 0x24]
	0x0281FAD0 LDR X0, [X20]
	0x0281FAD4 LDRB W8, [X0 + 0x135]
	0x0281FAD8 TBNZ X8, 0x0, 0x281FAE0
	0x0281FADC BL 0x1C5C684
	0x0281FAE0 LDR X8, [X0 + 0xC0]
	0x0281FAE4 ADD X1, X31, 0x24
	0x0281FAE8 LDR X0, [X8 + 0x20]
	0x0281FAEC BL 0x1C16E04
	0x0281FAF0 CBZ X0, 0x2820ACC
	0x0281FAF4 LDR X8, [X0]
	0x0281FAF8 LDR X1, [X22]
	0x0281FAFC LDR X8, [X8 + 0x40]
	0x0281FB00 LDR X9, [X1 + 0x40]
	0x0281FB04 CMP X8, X9
	0x0281FB08 B.NE 0x2820AD0
	0x0281FB0C BL 0x1C16E08
	0x0281FB10 LDRH W8, [X0]
	0x0281FB14 STRH W8, [X19 + 0xC]
	0x0281FB18 STRH W21, [X31 + 0x20]
	0x0281FB1C LDR X0, [X20]
	0x0281FB20 LDRB W8, [X0 + 0x135]
	0x0281FB24 TBNZ X8, 0x0, 0x281FB2C
	0x0281FB28 BL 0x1C5C684
	0x0281FB2C LDR X8, [X0 + 0xC0]
	0x0281FB30 ADD X1, X31, 0x20
	0x0281FB34 LDR X0, [X8 + 0x20]
	0x0281FB38 BL 0x1C16E04
	0x0281FB3C CBZ X0, 0x2820ACC
	0x0281FB40 LDR X8, [X0]
	0x0281FB44 LDR X1, [X22]
	0x0281FB48 LDR X8, [X8 + 0x40]
	0x0281FB4C LDR X9, [X1 + 0x40]
	0x0281FB50 CMP X8, X9
	0x0281FB54 B.NE 0x2820AD0
	0x0281FB58 BL 0x1C16E08
	0x0281FB5C LDRH W8, [X0]
	0x0281FB60 STRH W8, [X19 + 0xE]
	0x0281FB64 B 0x282051C
	0x0281FB68 LDR X0, [X20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x1BBC000
	009 Move W8, [X20+2674]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {50}
	015 Move X0, 0x18FC000
	016 Move X0, [X0+3432]
	017 Call 0x1C17CF4
	018 Move X0, 0x18FD000
	019 Move X0, [X0+2680]
	020 Call 0x1C17CF4
	021 Move X0, 0x18FC000
	022 Move X0, [X0+3448]
	023 Call 0x1C17CF4
	024 Move X0, 0x18FC000
	025 Move X0, [X0+3456]
	026 Call 0x1C17CF4
	027 Move X0, 0x18FC000
	028 Move X0, [X0+3464]
	029 Call 0x1C17CF4
	030 Move X0, 0x18FC000
	031 Move X0, [X0+3472]
	032 Call 0x1C17CF4
	033 Move X0, 0x18FD000
	034 Move X0, [X0+2688]
	035 Call 0x1C17CF4
	036 Move X0, 0x18D5000
	037 Move X0, [X0+1728]
	038 Call 0x1C17CF4
	039 Move X0, 0x18FC000
	040 Move X0, [X0+3480]
	041 Call 0x1C17CF4
	042 Move X0, 0x18FC000
	043 Move X0, [X0+3488]
	044 Call 0x1C17CF4
	045 Move X0, 0x18FC000
	046 Move X0, [X0+3496]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X20+2674], W8
	050 Move X0, [X19+32]
	051 Move X21, 0x18D5000
	052 Move W8, [X0+309]
	053 Move X21, [X21+1728]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {59}
	058 Call 0x1C5D684
	059 Move X8, [X21]
	060 Move X9, [X0+192]
	061 Move X22, 0x18FC000
	062 Move W10, [X8+224]
	063 Move X20, [X9+24]
	064 Move X22, [X22+3432]
	065 Compare W10, 0
	066 JumpIfNotEqual {69}
	067 Move X0, X8
	068 Call 0x1C17DFC
	069 Move X0, X20
	070 Move X1, X31
	071 Call Type.GetTypeFromHandle, X0
	072 Move X8, [X22]
	073 Move X20, X0
	074 Move X1, X31
	075 Move X0, X8
	076 Call Type.GetTypeFromHandle, X0
	077 Move X1, X0
	078 Move X0, X20
	079 Move X2, X31
	080 Call Type.op_Equality, X0, X1
	081 And W8, W0, 1
	082 Move W22, 16
	083 NotImplemented "Instruction CSEL not yet implemented."
	084 Compare W8, 0
	085 JumpIfEqual {87}
	086 Move W8, 1
	087 Move X0, [X19+32]
	088 Move W8, [X0+309]
	089 Move TEMP, X8
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {94}
	093 Call 0x1C5D684
	094 Move X8, [X21]
	095 Move X9, [X0+192]
	096 Move X22, 0x18FC000
	097 Move W10, [X8+224]
	098 Move X20, [X9+24]
	099 Move X22, [X22+3472]
	100 Compare W10, 0
	101 JumpIfNotEqual {104}
	102 Move X0, X8
	103 Call 0x1C17DFC
	104 Move X0, X20
	105 Move X1, X31
	106 Call Type.GetTypeFromHandle, X0
	107 Move X8, [X22]
	108 Move X20, X0
	109 Move X1, X31
	110 Move X0, X8
	111 Call Type.GetTypeFromHandle, X0
	112 Move X1, X0
	113 Move X0, X20
	114 Move X2, X31
	115 Call Type.op_Equality, X0, X1
	116 And W8, W0, 1
	117 NotImplemented "Instruction CSEL not yet implemented."
	118 Compare W8, 0
	119 JumpIfEqual {122}
	120 Move W8, 1
	121 Move W22, 16
	122 Move X0, [X19+32]
	123 Move W8, [X0+309]
	124 Move TEMP, X8
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {129}
	128 Call 0x1C5D684
	129 Move X8, [X21]
	130 Move X9, [X0+192]
	131 Move W10, [X8+224]
	132 Move X20, [X9+24]
	133 Compare W10, 0
	134 JumpIfNotEqual {137}
	135 Move X0, X8
	136 Call 0x1C17DFC
	137 Move X0, X20
	138 Move X1, X31
	139 Call Type.GetTypeFromHandle, X0
	140 Move X8, 0x18FC000
	141 Move X8, [X8+3480]
	142 Move X20, X0
	143 Move X1, X31
	144 Move X8, [X8]
	145 Move X0, X8
	146 Call Type.GetTypeFromHandle, X0
	147 Move X1, X0
	148 Move X0, X20
	149 Move X2, X31
	150 Call Type.op_Equality, X0, X1
	151 And W8, W0, 1
	152 NotImplemented "Instruction CSEL not yet implemented."
	153 Compare W8, 0
	154 JumpIfEqual {157}
	155 Move W8, 2
	156 Move W22, W23
	157 Move X0, [X19+32]
	158 Move W8, [X0+309]
	159 Move TEMP, X8
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfEqual {164}
	163 Call 0x1C5D684
	164 Move X8, [X21]
	165 Move X9, [X0+192]
	166 Move W10, [X8+224]
	167 Move X20, [X9+24]
	168 Compare W10, 0
	169 JumpIfNotEqual {172}
	170 Move X0, X8
	171 Call 0x1C17DFC
	172 Move X0, X20
	173 Move X1, X31
	174 Call Type.GetTypeFromHandle, X0
	175 Move X8, 0x18FC000
	176 Move X8, [X8+3448]
	177 Move X20, X0
	178 Move X1, X31
	179 Move X8, [X8]
	180 Move X0, X8
	181 Call Type.GetTypeFromHandle, X0
	182 Move X1, X0
	183 Move X0, X20
	184 Move X2, X31
	185 Call Type.op_Equality, X0, X1
	186 And W8, W0, 1
	187 NotImplemented "Instruction CSEL not yet implemented."
	188 Compare W8, 0
	189 JumpIfEqual {191}
	190 Move W8, 2
	191 Move X0, [X19+32]
	192 Move W8, [X0+309]
	193 Move TEMP, X8
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfEqual {198}
	197 Call 0x1C5D684
	198 Move X8, [X21]
	199 Move X9, [X0+192]
	200 Move W10, [X8+224]
	201 Move X20, [X9+24]
	202 Compare W10, 0
	203 JumpIfNotEqual {206}
	204 Move X0, X8
	205 Call 0x1C17DFC
	206 Move X0, X20
	207 Move X1, X31
	208 Call Type.GetTypeFromHandle, X0
	209 Move X8, 0x18FC000
	210 Move X8, [X8+3488]
	211 Move X20, X0
	212 Move X1, X31
	213 Move X8, [X8]
	214 Move X0, X8
	215 Call Type.GetTypeFromHandle, X0
	216 Move X1, X0
	217 Move X0, X20
	218 Move X2, X31
	219 Call Type.op_Equality, X0, X1
	220 And W8, W0, 1
	221 NotImplemented "Instruction CSEL not yet implemented."
	222 Compare W8, 0
	223 JumpIfEqual {226}
	224 Move W8, 4
	225 Move W22, W24
	226 Move X0, [X19+32]
	227 Move W8, [X0+309]
	228 Move TEMP, X8
	229 And TEMP, TEMP, 1
	230 Compare TEMP, 1
	231 JumpIfEqual {233}
	232 Call 0x1C5D684
	233 Move X8, [X21]
	234 Move X9, [X0+192]
	235 Move W10, [X8+224]
	236 Move X20, [X9+24]
	237 Compare W10, 0
	238 JumpIfNotEqual {241}
	239 Move X0, X8
	240 Call 0x1C17DFC
	241 Move X0, X20
	242 Move X1, X31
	243 Call Type.GetTypeFromHandle, X0
	244 Move X8, 0x18FC000
	245 Move X8, [X8+3456]
	246 Move X20, X0
	247 Move X1, X31
	248 Move X8, [X8]
	249 Move X0, X8
	250 Call Type.GetTypeFromHandle, X0
	251 Move X1, X0
	252 Move X0, X20
	253 Move X2, X31
	254 Call Type.op_Equality, X0, X1
	255 And W8, W0, 1
	256 NotImplemented "Instruction CSEL not yet implemented."
	257 Compare W8, 0
	258 JumpIfEqual {260}
	259 Move W8, 4
	260 Move X0, [X19+32]
	261 Move W8, [X0+309]
	262 Move TEMP, X8
	263 And TEMP, TEMP, 1
	264 Compare TEMP, 1
	265 JumpIfEqual {267}
	266 Call 0x1C5D684
	267 Move X8, [X21]
	268 Move X9, [X0+192]
	269 Move W10, [X8+224]
	270 Move X20, [X9+24]
	271 Compare W10, 0
	272 JumpIfNotEqual {275}
	273 Move X0, X8
	274 Call 0x1C17DFC
	275 Move X0, X20
	276 Move X1, X31
	277 Call Type.GetTypeFromHandle, X0
	278 Move X8, 0x18FC000
	279 Move X8, [X8+3496]
	280 Move X20, X0
	281 Move X1, X31
	282 Move X8, [X8]
	283 Move X0, X8
	284 Call Type.GetTypeFromHandle, X0
	285 Move X1, X0
	286 Move X0, X20
	287 Move X2, X31
	288 Call Type.op_Equality, X0, X1
	289 And W8, W0, 1
	290 NotImplemented "Instruction CSEL not yet implemented."
	291 Compare W8, 0
	292 JumpIfEqual {303}
	293 Move W8, 8
	294 NotImplemented "Instruction UDIV not yet implemented."
	295 Move X20, [X31+48]
	296 Move X19, [X31+56]
	297 Move X22, [X31+32]
	298 Move X21, [X31+40]
	299 Move X24, [X31+16]
	300 Move X23, [X31+24]
	301 Move X30, [X31+64]
	302 Return X0
	303 Move X0, [X19+32]
	304 Move W8, [X0+309]
	305 Move TEMP, X8
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfEqual {310}
	309 Call 0x1C5D684
	310 Move X8, [X21]
	311 Move X9, [X0+192]
	312 Move W10, [X8+224]
	313 Move X20, [X9+24]
	314 Compare W10, 0
	315 JumpIfNotEqual {318}
	316 Move X0, X8
	317 Call 0x1C17DFC
	318 Move X0, X20
	319 Move X1, X31
	320 Call Type.GetTypeFromHandle, X0
	321 Move X8, 0x18FC000
	322 Move X8, [X8+3464]
	323 Move X20, X0
	324 Move X1, X31
	325 Move X8, [X8]
	326 Move X0, X8
	327 Call Type.GetTypeFromHandle, X0
	328 Move X1, X0
	329 Move X0, X20
	330 Move X2, X31
	331 Call Type.op_Equality, X0, X1
	332 And W8, W0, 1
	333 NotImplemented "Instruction CSEL not yet implemented."
	334 Compare W8, 0
	335 JumpIfEqual {337}
	336 Move W8, 8
	337 Move X0, [X19+32]
	338 Move W8, [X0+309]
	339 Move TEMP, X8
	340 And TEMP, TEMP, 1
	341 Compare TEMP, 1
	342 JumpIfEqual {344}
	343 Call 0x1C5D684
	344 Move X8, [X21]
	345 Move X9, [X0+192]
	346 Move W10, [X8+224]
	347 Move X20, [X9+24]
	348 Compare W10, 0
	349 JumpIfNotEqual {352}
	350 Move X0, X8
	351 Call 0x1C17DFC
	352 Move X0, X20
	353 Move X1, X31
	354 Call Type.GetTypeFromHandle, X0
	355 Move X8, 0x18FD000
	356 Move X8, [X8+2688]
	357 Move X20, X0
	358 Move X1, X31
	359 Move X8, [X8]
	360 Move X0, X8
	361 Call Type.GetTypeFromHandle, X0
	362 Move X1, X0
	363 Move X0, X20
	364 Move X2, X31
	365 Call Type.op_Equality, X0, X1
	366 Move TEMP, X0
	367 And TEMP, TEMP, 1
	368 Compare TEMP, 1
	369 JumpIfEqual {259}
	370 Move X0, [X19+32]
	371 Move W8, [X0+309]
	372 Move TEMP, X8
	373 And TEMP, TEMP, 1
	374 Compare TEMP, 1
	375 JumpIfEqual {377}
	376 Call 0x1C5D684
	377 Move X8, [X21]
	378 Move X9, [X0+192]
	379 Move W10, [X8+224]
	380 Move X20, [X9+24]
	381 Compare W10, 0
	382 JumpIfNotEqual {385}
	383 Move X0, X8
	384 Call 0x1C17DFC
	385 Move X0, X20
	386 Move X1, X31
	387 Call Type.GetTypeFromHandle, X0
	388 Move X8, 0x18FD000
	389 Move X8, [X8+2680]
	390 Move X20, X0
	391 Move X1, X31
	392 Move X8, [X8]
	393 Move X0, X8
	394 Call Type.GetTypeFromHandle, X0
	395 Move X1, X0
	396 Move X0, X20
	397 Move X2, X31
	398 Call Type.op_Equality, X0, X1
	399 Move TEMP, X0
	400 And TEMP, TEMP, 1
	401 Compare TEMP, 1
	402 JumpIfEqual {293}
	403 Move X0, 0x18D5000
	404 Move X0, [X0+2880]
	405 Call 0x1C17D08
	406 Call 0x1C17F10
	407 Move X20, X0
	408 Move X0, 0x18FE000
	409 Move X0, [X0+2704]
	410 Call 0x1C17D08
	411 Move X1, X0
	412 Move X0, X20
	413 Move X2, X31
	414 Call NotSupportedException..ctor, X0, X1
	415 Move X0, X20
	416 Move X1, X19
	417 Call 0x1C17DEC

Method: System.Void .ctor(T value)

Disassembly:
	0x0281FB6C LDRB W8, [X0 + 0x135]
	0x0281FB70 TBNZ X8, 0x0, 0x281FB78
	0x0281FB74 BL 0x1C5C684
	0x0281FB78 LDR X8, [X24]
	0x0281FB7C LDR X9, [X0 + 0xC0]
	0x0281FB80 LDR W10, [X8 + 0xE0]
	0x0281FB84 LDR X22, [X9 + 0x18]
	0x0281FB88 CBNZ W10, 0x281FB94
	0x0281FB8C MOV X0, X8
	0x0281FB90 BL 0x1C16DFC
	0x0281FB94 MOV X0, X22
	0x0281FB98 MOV X1, X31
	0x0281FB9C BL 0x338C698
	0x0281FBA0 ADRP X8, 0x18FB000
	0x0281FBA4 LDR X8, [X8 + 0xDA0]
	0x0281FBA8 MOV X22, X0
	0x0281FBAC MOV X1, X31
	0x0281FBB0 LDR X8, [X8]
	0x0281FBB4 MOV X0, X8
	0x0281FBB8 BL 0x338C698
	0x0281FBBC MOV X1, X0
	0x0281FBC0 MOV X0, X22
	0x0281FBC4 MOV X2, X31
	0x0281FBC8 BL 0x3395194
	0x0281FBCC TBZ X0, 0x0, 0x281FD78
	0x0281FBD0 ADRP X23, 0x18DC000
	0x0281FBD4 LDR X23, [X23 + 0x720]
	0x0281FBD8 MOV X22, X31
	0x0281FBDC LDR X0, [X20]
	0x0281FBE0 LDRB W8, [X0 + 0x135]
	0x0281FBE4 TBNZ X8, 0x0, 0x281FBEC
	0x0281FBE8 BL 0x1C5C684
	0x0281FBEC LDR X8, [X0 + 0xC0]
	0x0281FBF0 LDR X0, [X8 + 0x8]
	0x0281FBF4 LDRB W8, [X0 + 0x135]
	0x0281FBF8 TBNZ X8, 0x0, 0x281FC00
	0x0281FBFC BL 0x1C5C684
	0x0281FC00 LDR W8, [X0 + 0xE0]
	0x0281FC04 CBNZ W8, 0x281FC0C
	0x0281FC08 BL 0x1C16DFC
	0x0281FC0C LDR X0, [X20]
	0x0281FC10 LDRB W8, [X0 + 0x135]
	0x0281FC14 TBNZ X8, 0x0, 0x281FC1C
	0x0281FC18 BL 0x1C5C684
	0x0281FC1C LDR X8, [X0 + 0xC0]
	0x0281FC20 LDR X24, [X8 + 0x28]
	0x0281FC24 LDR X0, [X24 + 0x20]
	0x0281FC28 LDRB W8, [X0 + 0x135]
	0x0281FC2C TBNZ X8, 0x0, 0x281FC34
	0x0281FC30 BL 0x1C5C684
	0x0281FC34 LDR X8, [X0 + 0xC0]
	0x0281FC38 LDR X0, [X8 + 0x8]
	0x0281FC3C LDRB W8, [X0 + 0x135]
	0x0281FC40 TBNZ X8, 0x0, 0x281FC48
	0x0281FC44 BL 0x1C5C684
	0x0281FC48 LDR W8, [X0 + 0xE0]
	0x0281FC4C CBNZ W8, 0x281FC54
	0x0281FC50 BL 0x1C16DFC
	0x0281FC54 LDR X0, [X24 + 0x20]
	0x0281FC58 LDRB W8, [X0 + 0x135]
	0x0281FC5C TBNZ X8, 0x0, 0x281FC64
	0x0281FC60 BL 0x1C5C684
	0x0281FC64 LDR X8, [X0 + 0xC0]
	0x0281FC68 LDR X0, [X8 + 0x8]
	0x0281FC6C LDRB W8, [X0 + 0x135]
	0x0281FC70 TBNZ X8, 0x0, 0x281FC78
	0x0281FC74 BL 0x1C5C684
	0x0281FC78 LDR X8, [X0 + 0xB8]
	0x0281FC7C LDRSW X8, [X8]
	0x0281FC80 CMP X22, X8
	0x0281FC84 B.GE 0x282051C
	0x0281FC88 STRH W21, [X31 + 0x3C]
	0x0281FC8C LDR X0, [X20]
	0x0281FC90 LDRB W8, [X0 + 0x135]
	0x0281FC94 TBNZ X8, 0x0, 0x281FC9C
	0x0281FC98 BL 0x1C5C684
	0x0281FC9C LDR X8, [X0 + 0xC0]
	0x0281FCA0 ADD X1, X31, 0x3C
	0x0281FCA4 LDR X0, [X8 + 0x20]
	0x0281FCA8 BL 0x1C16E04
	0x0281FCAC CBZ X0, 0x2820ACC
	0x0281FCB0 LDR X8, [X0]
	0x0281FCB4 LDR X1, [X23]
	0x0281FCB8 LDR X8, [X8 + 0x40]
	0x0281FCBC LDR X9, [X1 + 0x40]
	0x0281FCC0 CMP X8, X9
	0x0281FCC4 B.NE 0x2820AD0
	0x0281FCC8 BL 0x1C16E08
	0x0281FCCC LDR W8, [X0]
	0x0281FCD0 ADD X22, X22, 0x1
	0x0281FCD4 STR W8, [X19], #0x4
	0x0281FCD8 B 0x281FBDC
	0x0281FCDC LDR X0, [X20]
	0x0281FCE0 LDRB W8, [X0 + 0x135]
	0x0281FCE4 TBNZ X8, 0x0, 0x281FCEC
	0x0281FCE8 BL 0x1C5C684
	0x0281FCEC LDR X8, [X24]
	0x0281FCF0 LDR X9, [X0 + 0xC0]
	0x0281FCF4 LDR W10, [X8 + 0xE0]
	0x0281FCF8 LDR X22, [X9 + 0x18]
	0x0281FCFC CBNZ W10, 0x281FD08
	0x0281FD00 MOV X0, X8
	0x0281FD04 BL 0x1C16DFC
	0x0281FD08 MOV X0, X22
	0x0281FD0C MOV X1, X31
	0x0281FD10 BL 0x338C698
	0x0281FD14 ADRP X8, 0x18FB000
	0x0281FD18 LDR X8, [X8 + 0xDA0]
	0x0281FD1C MOV X22, X0
	0x0281FD20 MOV X1, X31
	0x0281FD24 LDR X8, [X8]
	0x0281FD28 MOV X0, X8
	0x0281FD2C BL 0x338C698
	0x0281FD30 MOV X1, X0
	0x0281FD34 MOV X0, X22
	0x0281FD38 MOV X2, X31
	0x0281FD3C BL 0x3395194
	0x0281FD40 TBZ X0, 0x0, 0x281FEEC
	0x0281FD44 STRH W21, [X31 + 0x3C]
	0x0281FD48 LDR X0, [X20]
	0x0281FD4C LDRB W8, [X0 + 0x135]
	0x0281FD50 TBNZ X8, 0x0, 0x281FD58
	0x0281FD54 BL 0x1C5C684
	0x0281FD58 LDR X8, [X0 + 0xC0]
	0x0281FD5C ADD X1, X31, 0x3C
	0x0281FD60 LDR X0, [X8 + 0x20]
	0x0281FD64 BL 0x1C16E04
	0x0281FD68 CBZ X0, 0x2820ACC
	0x0281FD6C ADRP X22, 0x18DC000
	0x0281FD70 LDR X22, [X22 + 0x720]
	0x0281FD74 B 0x281FF84
	0x0281FD78 LDR X0, [X20]
	0x0281FD7C LDRB W8, [X0 + 0x135]
	0x0281FD80 TBNZ X8, 0x0, 0x281FD88
	0x0281FD84 BL 0x1C5C684
	0x0281FD88 LDR X8, [X24]
	0x0281FD8C LDR X9, [X0 + 0xC0]
	0x0281FD90 LDR W10, [X8 + 0xE0]
	0x0281FD94 LDR X22, [X9 + 0x18]
	0x0281FD98 CBNZ W10, 0x281FDA4
	0x0281FD9C MOV X0, X8
	0x0281FDA0 BL 0x1C16DFC
	0x0281FDA4 MOV X0, X22
	0x0281FDA8 MOV X1, X31
	0x0281FDAC BL 0x338C698
	0x0281FDB0 ADRP X8, 0x18FB000
	0x0281FDB4 LDR X8, [X8 + 0xD80]
	0x0281FDB8 MOV X22, X0
	0x0281FDBC MOV X1, X31
	0x0281FDC0 LDR X8, [X8]
	0x0281FDC4 MOV X0, X8
	0x0281FDC8 BL 0x338C698
	0x0281FDCC MOV X1, X0
	0x0281FDD0 MOV X0, X22
	0x0281FDD4 MOV X2, X31
	0x0281FDD8 BL 0x3395194
	0x0281FDDC TBZ X0, 0x0, 0x2820090
	0x0281FDE0 ADRP X23, 0x18D4000
	0x0281FDE4 LDR X23, [X23 + 0x758]
	0x0281FDE8 MOV X22, X31
	0x0281FDEC LDR X0, [X20]
	0x0281FDF0 LDRB W8, [X0 + 0x135]
	0x0281FDF4 TBNZ X8, 0x0, 0x281FDFC
	0x0281FDF8 BL 0x1C5C684
	0x0281FDFC LDR X8, [X0 + 0xC0]
	0x0281FE00 LDR X0, [X8 + 0x8]
	0x0281FE04 LDRB W8, [X0 + 0x135]
	0x0281FE08 TBNZ X8, 0x0, 0x281FE10
	0x0281FE0C BL 0x1C5C684
	0x0281FE10 LDR W8, [X0 + 0xE0]
	0x0281FE14 CBNZ W8, 0x281FE1C
	0x0281FE18 BL 0x1C16DFC
	0x0281FE1C LDR X0, [X20]
	0x0281FE20 LDRB W8, [X0 + 0x135]
	0x0281FE24 TBNZ X8, 0x0, 0x281FE2C
	0x0281FE28 BL 0x1C5C684
	0x0281FE2C LDR X8, [X0 + 0xC0]
	0x0281FE30 LDR X24, [X8 + 0x28]
	0x0281FE34 LDR X0, [X24 + 0x20]
	0x0281FE38 LDRB W8, [X0 + 0x135]
	0x0281FE3C TBNZ X8, 0x0, 0x281FE44
	0x0281FE40 BL 0x1C5C684
	0x0281FE44 LDR X8, [X0 + 0xC0]
	0x0281FE48 LDR X0, [X8 + 0x8]
	0x0281FE4C LDRB W8, [X0 + 0x135]
	0x0281FE50 TBNZ X8, 0x0, 0x281FE58
	0x0281FE54 BL 0x1C5C684
	0x0281FE58 LDR W8, [X0 + 0xE0]
	0x0281FE5C CBNZ W8, 0x281FE64
	0x0281FE60 BL 0x1C16DFC
	0x0281FE64 LDR X0, [X24 + 0x20]
	0x0281FE68 LDRB W8, [X0 + 0x135]
	0x0281FE6C TBNZ X8, 0x0, 0x281FE74
	0x0281FE70 BL 0x1C5C684
	0x0281FE74 LDR X8, [X0 + 0xC0]
	0x0281FE78 LDR X0, [X8 + 0x8]
	0x0281FE7C LDRB W8, [X0 + 0x135]
	0x0281FE80 TBNZ X8, 0x0, 0x281FE88
	0x0281FE84 BL 0x1C5C684
	0x0281FE88 LDR X8, [X0 + 0xB8]
	0x0281FE8C LDRSW X8, [X8]
	0x0281FE90 CMP X22, X8
	0x0281FE94 B.GE 0x282051C
	0x0281FE98 STRH W21, [X31 + 0x3C]
	0x0281FE9C LDR X0, [X20]
	0x0281FEA0 LDRB W8, [X0 + 0x135]
	0x0281FEA4 TBNZ X8, 0x0, 0x281FEAC
	0x0281FEA8 BL 0x1C5C684
	0x0281FEAC LDR X8, [X0 + 0xC0]
	0x0281FEB0 ADD X1, X31, 0x3C
	0x0281FEB4 LDR X0, [X8 + 0x20]
	0x0281FEB8 BL 0x1C16E04
	0x0281FEBC CBZ X0, 0x2820ACC
	0x0281FEC0 LDR X8, [X0]
	0x0281FEC4 LDR X1, [X23]
	0x0281FEC8 LDR X8, [X8 + 0x40]
	0x0281FECC LDR X9, [X1 + 0x40]
	0x0281FED0 CMP X8, X9
	0x0281FED4 B.NE 0x2820AD0
	0x0281FED8 BL 0x1C16E08
	0x0281FEDC LDR W8, [X0]
	0x0281FEE0 ADD X22, X22, 0x1
	0x0281FEE4 STR W8, [X19], #0x4
	0x0281FEE8 B 0x281FDEC
	0x0281FEEC LDR X0, [X20]
	0x0281FEF0 LDRB W8, [X0 + 0x135]
	0x0281FEF4 TBNZ X8, 0x0, 0x281FEFC
	0x0281FEF8 BL 0x1C5C684
	0x0281FEFC LDR X8, [X24]
	0x0281FF00 LDR X9, [X0 + 0xC0]
	0x0281FF04 LDR W10, [X8 + 0xE0]
	0x0281FF08 LDR X22, [X9 + 0x18]
	0x0281FF0C CBNZ W10, 0x281FF18
	0x0281FF10 MOV X0, X8
	0x0281FF14 BL 0x1C16DFC
	0x0281FF18 MOV X0, X22
	0x0281FF1C MOV X1, X31
	0x0281FF20 BL 0x338C698
	0x0281FF24 ADRP X8, 0x18FB000
	0x0281FF28 LDR X8, [X8 + 0xD80]
	0x0281FF2C MOV X22, X0
	0x0281FF30 MOV X1, X31
	0x0281FF34 LDR X8, [X8]
	0x0281FF38 MOV X0, X8
	0x0281FF3C BL 0x338C698
	0x0281FF40 MOV X1, X0
	0x0281FF44 MOV X0, X22
	0x0281FF48 MOV X2, X31
	0x0281FF4C BL 0x3395194
	0x0281FF50 TBZ X0, 0x0, 0x2820204
	0x0281FF54 STRH W21, [X31 + 0x3C]
	0x0281FF58 LDR X0, [X20]
	0x0281FF5C LDRB W8, [X0 + 0x135]
	0x0281FF60 TBNZ X8, 0x0, 0x281FF68
	0x0281FF64 BL 0x1C5C684
	0x0281FF68 LDR X8, [X0 + 0xC0]
	0x0281FF6C ADD X1, X31, 0x3C
	0x0281FF70 LDR X0, [X8 + 0x20]
	0x0281FF74 BL 0x1C16E04
	0x0281FF78 CBZ X0, 0x2820ACC
	0x0281FF7C ADRP X22, 0x18D4000
	0x0281FF80 LDR X22, [X22 + 0x758]
	0x0281FF84 LDR X8, [X0]
	0x0281FF88 LDR X1, [X22]
	0x0281FF8C LDR X8, [X8 + 0x40]
	0x0281FF90 LDR X9, [X1 + 0x40]
	0x0281FF94 CMP X8, X9
	0x0281FF98 B.NE 0x2820AD0
	0x0281FF9C BL 0x1C16E08
	0x0281FFA0 LDR W8, [X0]
	0x0281FFA4 STR W8, [X19]
	0x0281FFA8 STRH W21, [X31 + 0x38]
	0x0281FFAC LDR X0, [X20]
	0x0281FFB0 LDRB W8, [X0 + 0x135]
	0x0281FFB4 TBNZ X8, 0x0, 0x281FFBC
	0x0281FFB8 BL 0x1C5C684
	0x0281FFBC LDR X8, [X0 + 0xC0]
	0x0281FFC0 ADD X1, X31, 0x38
	0x0281FFC4 LDR X0, [X8 + 0x20]
	0x0281FFC8 BL 0x1C16E04
	0x0281FFCC CBZ X0, 0x2820ACC
	0x0281FFD0 LDR X8, [X0]
	0x0281FFD4 LDR X1, [X22]
	0x0281FFD8 LDR X8, [X8 + 0x40]
	0x0281FFDC LDR X9, [X1 + 0x40]
	0x0281FFE0 CMP X8, X9
	0x0281FFE4 B.NE 0x2820AD0
	0x0281FFE8 BL 0x1C16E08
	0x0281FFEC LDR W8, [X0]
	0x0281FFF0 STR W8, [X19 + 0x4]
	0x0281FFF4 STRH W21, [X31 + 0x34]
	0x0281FFF8 LDR X0, [X20]
	0x0281FFFC LDRB W8, [X0 + 0x135]
	0x02820000 TBNZ X8, 0x0, 0x2820008
	0x02820004 BL 0x1C5C684
	0x02820008 LDR X8, [X0 + 0xC0]
	0x0282000C ADD X1, X31, 0x34
	0x02820010 LDR X0, [X8 + 0x20]
	0x02820014 BL 0x1C16E04
	0x02820018 CBZ X0, 0x2820ACC
	0x0282001C LDR X8, [X0]
	0x02820020 LDR X1, [X22]
	0x02820024 LDR X8, [X8 + 0x40]
	0x02820028 LDR X9, [X1 + 0x40]
	0x0282002C CMP X8, X9
	0x02820030 B.NE 0x2820AD0
	0x02820034 BL 0x1C16E08
	0x02820038 LDR W8, [X0]
	0x0282003C STR W8, [X19 + 0x8]
	0x02820040 STRH W21, [X31 + 0x30]
	0x02820044 LDR X0, [X20]
	0x02820048 LDRB W8, [X0 + 0x135]
	0x0282004C TBNZ X8, 0x0, 0x2820054
	0x02820050 BL 0x1C5C684
	0x02820054 LDR X8, [X0 + 0xC0]
	0x02820058 ADD X1, X31, 0x30
	0x0282005C LDR X0, [X8 + 0x20]
	0x02820060 BL 0x1C16E04
	0x02820064 CBZ X0, 0x2820ACC
	0x02820068 LDR X8, [X0]
	0x0282006C LDR X1, [X22]
	0x02820070 LDR X8, [X8 + 0x40]
	0x02820074 LDR X9, [X1 + 0x40]
	0x02820078 CMP X8, X9
	0x0282007C B.NE 0x2820AD0
	0x02820080 BL 0x1C16E08
	0x02820084 LDR W8, [X0]
	0x02820088 STR W8, [X19 + 0xC]
	0x0282008C B 0x282051C
	0x02820090 LDR X0, [X20]
	0x02820094 LDRB W8, [X0 + 0x135]
	0x02820098 TBNZ X8, 0x0, 0x28200A0
	0x0282009C BL 0x1C5C684
	0x028200A0 LDR X8, [X24]
	0x028200A4 LDR X9, [X0 + 0xC0]
	0x028200A8 LDR W10, [X8 + 0xE0]
	0x028200AC LDR X22, [X9 + 0x18]
	0x028200B0 CBNZ W10, 0x28200BC
	0x028200B4 MOV X0, X8
	0x028200B8 BL 0x1C16DFC
	0x028200BC MOV X0, X22
	0x028200C0 MOV X1, X31
	0x028200C4 BL 0x338C698
	0x028200C8 ADRP X8, 0x18FA000
	0x028200CC LDR X8, [X8 + 0xDA8]
	0x028200D0 MOV X22, X0
	0x028200D4 MOV X1, X31
	0x028200D8 LDR X8, [X8]
	0x028200DC MOV X0, X8
	0x028200E0 BL 0x338C698
	0x028200E4 MOV X1, X0
	0x028200E8 MOV X0, X22
	0x028200EC MOV X2, X31
	0x028200F0 BL 0x3395194
	0x028200F4 TBZ X0, 0x0, 0x28202A0
	0x028200F8 ADRP X23, 0x18D4000
	0x028200FC LDR X23, [X23 + 0x758]
	0x02820100 MOV X22, X31
	0x02820104 LDR X0, [X20]
	0x02820108 LDRB W8, [X0 + 0x135]
	0x0282010C TBNZ X8, 0x0, 0x2820114
	0x02820110 BL 0x1C5C684
	0x02820114 LDR X8, [X0 + 0xC0]
	0x02820118 LDR X0, [X8 + 0x8]
	0x0282011C LDRB W8, [X0 + 0x135]
	0x02820120 TBNZ X8, 0x0, 0x2820128
	0x02820124 BL 0x1C5C684
	0x02820128 LDR W8, [X0 + 0xE0]
	0x0282012C CBNZ W8, 0x2820134
	0x02820130 BL 0x1C16DFC
	0x02820134 LDR X0, [X20]
	0x02820138 LDRB W8, [X0 + 0x135]
	0x0282013C TBNZ X8, 0x0, 0x2820144
	0x02820140 BL 0x1C5C684
	0x02820144 LDR X8, [X0 + 0xC0]
	0x02820148 LDR X24, [X8 + 0x28]
	0x0282014C LDR X0, [X24 + 0x20]
	0x02820150 LDRB W8, [X0 + 0x135]
	0x02820154 TBNZ X8, 0x0, 0x282015C
	0x02820158 BL 0x1C5C684
	0x0282015C LDR X8, [X0 + 0xC0]
	0x02820160 LDR X0, [X8 + 0x8]
	0x02820164 LDRB W8, [X0 + 0x135]
	0x02820168 TBNZ X8, 0x0, 0x2820170
	0x0282016C BL 0x1C5C684
	0x02820170 LDR W8, [X0 + 0xE0]
	0x02820174 CBNZ W8, 0x282017C
	0x02820178 BL 0x1C16DFC
	0x0282017C LDR X0, [X24 + 0x20]
	0x02820180 LDRB W8, [X0 + 0x135]
	0x02820184 TBNZ X8, 0x0, 0x282018C
	0x02820188 BL 0x1C5C684
	0x0282018C LDR X8, [X0 + 0xC0]
	0x02820190 LDR X0, [X8 + 0x8]
	0x02820194 LDRB W8, [X0 + 0x135]
	0x02820198 TBNZ X8, 0x0, 0x28201A0
	0x0282019C BL 0x1C5C684
	0x028201A0 LDR X8, [X0 + 0xB8]
	0x028201A4 LDRSW X8, [X8]
	0x028201A8 CMP X22, X8
	0x028201AC B.GE 0x282051C
	0x028201B0 STRH W21, [X31 + 0x3C]
	0x028201B4 LDR X0, [X20]
	0x028201B8 LDRB W8, [X0 + 0x135]
	0x028201BC TBNZ X8, 0x0, 0x28201C4
	0x028201C0 BL 0x1C5C684
	0x028201C4 LDR X8, [X0 + 0xC0]
	0x028201C8 ADD X1, X31, 0x3C
	0x028201CC LDR X0, [X8 + 0x20]
	0x028201D0 BL 0x1C16E04
	0x028201D4 CBZ X0, 0x2820ACC
	0x028201D8 LDR X8, [X0]
	0x028201DC LDR X1, [X23]
	0x028201E0 LDR X8, [X8 + 0x40]
	0x028201E4 LDR X9, [X1 + 0x40]
	0x028201E8 CMP X8, X9
	0x028201EC B.NE 0x2820AD0
	0x028201F0 BL 0x1C16E08
	0x028201F4 LDR X8, [X0]
	0x028201F8 ADD X22, X22, 0x1
	0x028201FC STR X8, [X19], #0x8
	0x02820200 B 0x2820104
	0x02820204 LDR X0, [X20]
	0x02820208 LDRB W8, [X0 + 0x135]
	0x0282020C TBNZ X8, 0x0, 0x2820214
	0x02820210 BL 0x1C5C684
	0x02820214 LDR X8, [X24]
	0x02820218 LDR X9, [X0 + 0xC0]
	0x0282021C LDR W10, [X8 + 0xE0]
	0x02820220 LDR X22, [X9 + 0x18]
	0x02820224 CBNZ W10, 0x2820230
	0x02820228 MOV X0, X8
	0x0282022C BL 0x1C16DFC
	0x02820230 MOV X0, X22
	0x02820234 MOV X1, X31
	0x02820238 BL 0x338C698
	0x0282023C ADRP X8, 0x18FA000
	0x02820240 LDR X8, [X8 + 0xDA8]
	0x02820244 MOV X22, X0
	0x02820248 MOV X1, X31
	0x0282024C LDR X8, [X8]
	0x02820250 MOV X0, X8
	0x02820254 BL 0x338C698
	0x02820258 MOV X1, X0
	0x0282025C MOV X0, X22
	0x02820260 MOV X2, X31
	0x02820264 BL 0x3395194
	0x02820268 TBZ X0, 0x0, 0x2820414
	0x0282026C STRH W21, [X31 + 0x3C]
	0x02820270 LDR X0, [X20]
	0x02820274 LDRB W8, [X0 + 0x135]
	0x02820278 TBNZ X8, 0x0, 0x2820280
	0x0282027C BL 0x1C5C684
	0x02820280 LDR X8, [X0 + 0xC0]
	0x02820284 ADD X1, X31, 0x3C
	0x02820288 LDR X0, [X8 + 0x20]
	0x0282028C BL 0x1C16E04
	0x02820290 CBZ X0, 0x2820ACC
	0x02820294 ADRP X22, 0x18D4000
	0x02820298 LDR X22, [X22 + 0x758]
	0x0282029C B 0x28204AC
	0x028202A0 LDR X0, [X20]
	0x028202A4 LDRB W8, [X0 + 0x135]
	0x028202A8 TBNZ X8, 0x0, 0x28202B0
	0x028202AC BL 0x1C5C684
	0x028202B0 LDR X8, [X24]
	0x028202B4 LDR X9, [X0 + 0xC0]
	0x028202B8 LDR W10, [X8 + 0xE0]
	0x028202BC LDR X22, [X9 + 0x18]
	0x028202C0 CBNZ W10, 0x28202CC
	0x028202C4 MOV X0, X8
	0x028202C8 BL 0x1C16DFC
	0x028202CC MOV X0, X22
	0x028202D0 MOV X1, X31
	0x028202D4 BL 0x338C698
	0x028202D8 ADRP X8, 0x18FA000
	0x028202DC LDR X8, [X8 + 0xD88]
	0x028202E0 MOV X22, X0
	0x028202E4 MOV X1, X31
	0x028202E8 LDR X8, [X8]
	0x028202EC MOV X0, X8
	0x028202F0 BL 0x338C698
	0x028202F4 MOV X1, X0
	0x028202F8 MOV X0, X22
	0x028202FC MOV X2, X31
	0x02820300 BL 0x3395194
	0x02820304 TBZ X0, 0x0, 0x2820534
	0x02820308 ADRP X23, 0x18D5000
	0x0282030C LDR X23, [X23 + 0xA60]
	0x02820310 MOV X22, X31
	0x02820314 LDR X0, [X20]
	0x02820318 LDRB W8, [X0 + 0x135]
	0x0282031C TBNZ X8, 0x0, 0x2820324
	0x02820320 BL 0x1C5C684
	0x02820324 LDR X8, [X0 + 0xC0]
	0x02820328 LDR X0, [X8 + 0x8]
	0x0282032C LDRB W8, [X0 + 0x135]
	0x02820330 TBNZ X8, 0x0, 0x2820338
	0x02820334 BL 0x1C5C684
	0x02820338 LDR W8, [X0 + 0xE0]
	0x0282033C CBNZ W8, 0x2820344
	0x02820340 BL 0x1C16DFC
	0x02820344 LDR X0, [X20]
	0x02820348 LDRB W8, [X0 + 0x135]
	0x0282034C TBNZ X8, 0x0, 0x2820354
	0x02820350 BL 0x1C5C684
	0x02820354 LDR X8, [X0 + 0xC0]
	0x02820358 LDR X24, [X8 + 0x28]
	0x0282035C LDR X0, [X24 + 0x20]
	0x02820360 LDRB W8, [X0 + 0x135]
	0x02820364 TBNZ X8, 0x0, 0x282036C
	0x02820368 BL 0x1C5C684
	0x0282036C LDR X8, [X0 + 0xC0]
	0x02820370 LDR X0, [X8 + 0x8]
	0x02820374 LDRB W8, [X0 + 0x135]
	0x02820378 TBNZ X8, 0x0, 0x2820380
	0x0282037C BL 0x1C5C684
	0x02820380 LDR W8, [X0 + 0xE0]
	0x02820384 CBNZ W8, 0x282038C
	0x02820388 BL 0x1C16DFC
	0x0282038C LDR X0, [X24 + 0x20]
	0x02820390 LDRB W8, [X0 + 0x135]
	0x02820394 TBNZ X8, 0x0, 0x282039C
	0x02820398 BL 0x1C5C684
	0x0282039C LDR X8, [X0 + 0xC0]
	0x028203A0 LDR X0, [X8 + 0x8]
	0x028203A4 LDRB W8, [X0 + 0x135]
	0x028203A8 TBNZ X8, 0x0, 0x28203B0
	0x028203AC BL 0x1C5C684
	0x028203B0 LDR X8, [X0 + 0xB8]
	0x028203B4 LDRSW X8, [X8]
	0x028203B8 CMP X22, X8
	0x028203BC B.GE 0x282051C
	0x028203C0 STRH W21, [X31 + 0x3C]
	0x028203C4 LDR X0, [X20]
	0x028203C8 LDRB W8, [X0 + 0x135]
	0x028203CC TBNZ X8, 0x0, 0x28203D4
	0x028203D0 BL 0x1C5C684
	0x028203D4 LDR X8, [X0 + 0xC0]
	0x028203D8 ADD X1, X31, 0x3C
	0x028203DC LDR X0, [X8 + 0x20]
	0x028203E0 BL 0x1C16E04
	0x028203E4 CBZ X0, 0x2820ACC
	0x028203E8 LDR X8, [X0]
	0x028203EC LDR X1, [X23]
	0x028203F0 LDR X8, [X8 + 0x40]
	0x028203F4 LDR X9, [X1 + 0x40]
	0x028203F8 CMP X8, X9
	0x028203FC B.NE 0x2820AD0
	0x02820400 BL 0x1C16E08
	0x02820404 LDR X8, [X0]
	0x02820408 ADD X22, X22, 0x1
	0x0282040C STR X8, [X19], #0x8
	0x02820410 B 0x2820314
	0x02820414 LDR X0, [X20]
	0x02820418 LDRB W8, [X0 + 0x135]
	0x0282041C TBNZ X8, 0x0, 0x2820424
	0x02820420 BL 0x1C5C684
	0x02820424 LDR X8, [X24]
	0x02820428 LDR X9, [X0 + 0xC0]
	0x0282042C LDR W10, [X8 + 0xE0]
	0x02820430 LDR X22, [X9 + 0x18]
	0x02820434 CBNZ W10, 0x2820440
	0x02820438 MOV X0, X8
	0x0282043C BL 0x1C16DFC
	0x02820440 MOV X0, X22
	0x02820444 MOV X1, X31
	0x02820448 BL 0x338C698
	0x0282044C ADRP X8, 0x18FA000
	0x02820450 LDR X8, [X8 + 0xD88]
	0x02820454 MOV X22, X0
	0x02820458 MOV X1, X31
	0x0282045C LDR X8, [X8]
	0x02820460 MOV X0, X8
	0x02820464 BL 0x338C698
	0x02820468 MOV X1, X0
	0x0282046C MOV X0, X22
	0x02820470 MOV X2, X31
	0x02820474 BL 0x3395194
	0x02820478 TBZ X0, 0x0, 0x28206A8
	0x0282047C STRH W21, [X31 + 0x3C]
	0x02820480 LDR X0, [X20]
	0x02820484 LDRB W8, [X0 + 0x135]
	0x02820488 TBNZ X8, 0x0, 0x2820490
	0x0282048C BL 0x1C5C684
	0x02820490 LDR X8, [X0 + 0xC0]
	0x02820494 ADD X1, X31, 0x3C
	0x02820498 LDR X0, [X8 + 0x20]
	0x0282049C BL 0x1C16E04
	0x028204A0 CBZ X0, 0x2820ACC
	0x028204A4 ADRP X22, 0x18D5000
	0x028204A8 LDR X22, [X22 + 0xA60]
	0x028204AC LDR X8, [X0]
	0x028204B0 LDR X1, [X22]
	0x028204B4 LDR X8, [X8 + 0x40]
	0x028204B8 LDR X9, [X1 + 0x40]
	0x028204BC CMP X8, X9
	0x028204C0 B.NE 0x2820AD0
	0x028204C4 BL 0x1C16E08
	0x028204C8 LDR X8, [X0]
	0x028204CC STR X8, [X19]
	0x028204D0 STRH W21, [X31 + 0x38]
	0x028204D4 LDR X0, [X20]
	0x028204D8 LDRB W8, [X0 + 0x135]
	0x028204DC TBNZ X8, 0x0, 0x28204E4
	0x028204E0 BL 0x1C5C684
	0x028204E4 LDR X8, [X0 + 0xC0]
	0x028204E8 ADD X1, X31, 0x38
	0x028204EC LDR X0, [X8 + 0x20]
	0x028204F0 BL 0x1C16E04
	0x028204F4 CBZ X0, 0x2820ACC
	0x028204F8 LDR X8, [X0]
	0x028204FC LDR X1, [X22]
	0x02820500 LDR X8, [X8 + 0x40]
	0x02820504 LDR X9, [X1 + 0x40]
	0x02820508 CMP X8, X9
	0x0282050C B.NE 0x2820AD0
	0x02820510 BL 0x1C16E08
	0x02820514 LDR X8, [X0]
	0x02820518 STR X8, [X19 + 0x8]
	0x0282051C LDP X20, X19, [X31 + 0x70]
	0x02820520 LDP X22, X21, [X31 + 0x60]
	0x02820524 LDP X24, X23, [X31 + 0x50]
	0x02820528 LDP X30, X25, [X31 + 0x40]
	0x0282052C ADD X31, X31, 0x80
	0x02820530 RET
	0x02820534 LDR X0, [X20]
	0x02820538 LDRB W8, [X0 + 0x135]
	0x0282053C TBNZ X8, 0x0, 0x2820544
	0x02820540 BL 0x1C5C684
	0x02820544 LDR X8, [X24]
	0x02820548 LDR X9, [X0 + 0xC0]
	0x0282054C LDR W10, [X8 + 0xE0]
	0x02820550 LDR X22, [X9 + 0x18]
	0x02820554 CBNZ W10, 0x2820560
	0x02820558 MOV X0, X8
	0x0282055C BL 0x1C16DFC
	0x02820560 MOV X0, X22
	0x02820564 MOV X1, X31
	0x02820568 BL 0x338C698
	0x0282056C ADRP X8, 0x18FB000
	0x02820570 LDR X8, [X8 + 0xA80]
	0x02820574 MOV X22, X0
	0x02820578 MOV X1, X31
	0x0282057C LDR X8, [X8]
	0x02820580 MOV X0, X8
	0x02820584 BL 0x338C698
	0x02820588 MOV X1, X0
	0x0282058C MOV X0, X22
	0x02820590 MOV X2, X31
	0x02820594 BL 0x3395194
	0x02820598 TBZ X0, 0x0, 0x282084C
	0x0282059C ADRP X23, 0x18D3000
	0x028205A0 LDR X23, [X23 + 0xA90]
	0x028205A4 MOV X22, X31
	0x028205A8 LDR X0, [X20]
	0x028205AC LDRB W8, [X0 + 0x135]
	0x028205B0 TBNZ X8, 0x0, 0x28205B8
	0x028205B4 BL 0x1C5C684
	0x028205B8 LDR X8, [X0 + 0xC0]
	0x028205BC LDR X0, [X8 + 0x8]
	0x028205C0 LDRB W8, [X0 + 0x135]
	0x028205C4 TBNZ X8, 0x0, 0x28205CC
	0x028205C8 BL 0x1C5C684
	0x028205CC LDR W8, [X0 + 0xE0]
	0x028205D0 CBNZ W8, 0x28205D8
	0x028205D4 BL 0x1C16DFC
	0x028205D8 LDR X0, [X20]
	0x028205DC LDRB W8, [X0 + 0x135]
	0x028205E0 TBNZ X8, 0x0, 0x28205E8
	0x028205E4 BL 0x1C5C684
	0x028205E8 LDR X8, [X0 + 0xC0]
	0x028205EC LDR X24, [X8 + 0x28]
	0x028205F0 LDR X0, [X24 + 0x20]
	0x028205F4 LDRB W8, [X0 + 0x135]
	0x028205F8 TBNZ X8, 0x0, 0x2820600
	0x028205FC BL 0x1C5C684
	0x02820600 LDR X8, [X0 + 0xC0]
	0x02820604 LDR X0, [X8 + 0x8]
	0x02820608 LDRB W8, [X0 + 0x135]
	0x0282060C TBNZ X8, 0x0, 0x2820614
	0x02820610 BL 0x1C5C684
	0x02820614 LDR W8, [X0 + 0xE0]
	0x02820618 CBNZ W8, 0x2820620
	0x0282061C BL 0x1C16DFC
	0x02820620 LDR X0, [X24 + 0x20]
	0x02820624 LDRB W8, [X0 + 0x135]
	0x02820628 TBNZ X8, 0x0, 0x2820630
	0x0282062C BL 0x1C5C684
	0x02820630 LDR X8, [X0 + 0xC0]
	0x02820634 LDR X0, [X8 + 0x8]
	0x02820638 LDRB W8, [X0 + 0x135]
	0x0282063C TBNZ X8, 0x0, 0x2820644
	0x02820640 BL 0x1C5C684
	0x02820644 LDR X8, [X0 + 0xB8]
	0x02820648 LDRSW X8, [X8]
	0x0282064C CMP X22, X8
	0x02820650 B.GE 0x282051C
	0x02820654 STRH W21, [X31 + 0x3C]
	0x02820658 LDR X0, [X20]
	0x0282065C LDRB W8, [X0 + 0x135]
	0x02820660 TBNZ X8, 0x0, 0x2820668
	0x02820664 BL 0x1C5C684
	0x02820668 LDR X8, [X0 + 0xC0]
	0x0282066C ADD X1, X31, 0x3C
	0x02820670 LDR X0, [X8 + 0x20]
	0x02820674 BL 0x1C16E04
	0x02820678 CBZ X0, 0x2820ACC
	0x0282067C LDR X8, [X0]
	0x02820680 LDR X1, [X23]
	0x02820684 LDR X8, [X8 + 0x40]
	0x02820688 LDR X9, [X1 + 0x40]
	0x0282068C CMP X8, X9
	0x02820690 B.NE 0x2820AD0
	0x02820694 BL 0x1C16E08
	0x02820698 LDR V0, [X0]
	0x0282069C ADD X22, X22, 0x1
	0x028206A0 STR S0, [X19], #0x4
	0x028206A4 B 0x28205A8
	0x028206A8 LDR X0, [X20]
	0x028206AC LDRB W8, [X0 + 0x135]
	0x028206B0 TBNZ X8, 0x0, 0x28206B8
	0x028206B4 BL 0x1C5C684
	0x028206B8 LDR X8, [X24]
	0x028206BC LDR X9, [X0 + 0xC0]
	0x028206C0 LDR W10, [X8 + 0xE0]
	0x028206C4 LDR X22, [X9 + 0x18]
	0x028206C8 CBNZ W10, 0x28206D4
	0x028206CC MOV X0, X8
	0x028206D0 BL 0x1C16DFC
	0x028206D4 MOV X0, X22
	0x028206D8 MOV X1, X31
	0x028206DC BL 0x338C698
	0x028206E0 ADRP X8, 0x18FB000
	0x028206E4 LDR X8, [X8 + 0xA80]
	0x028206E8 MOV X22, X0
	0x028206EC MOV X1, X31
	0x028206F0 LDR X8, [X8]
	0x028206F4 MOV X0, X8
	0x028206F8 BL 0x338C698
	0x028206FC MOV X1, X0
	0x02820700 MOV X0, X22
	0x02820704 MOV X2, X31
	0x02820708 BL 0x3395194
	0x0282070C TBZ X0, 0x0, 0x28209C0
	0x02820710 STRH W21, [X31 + 0x3C]
	0x02820714 LDR X0, [X20]
	0x02820718 LDRB W8, [X0 + 0x135]
	0x0282071C TBNZ X8, 0x0, 0x2820724
	0x02820720 BL 0x1C5C684
	0x02820724 LDR X8, [X0 + 0xC0]
	0x02820728 ADD X1, X31, 0x3C
	0x0282072C LDR X0, [X8 + 0x20]
	0x02820730 BL 0x1C16E04
	0x02820734 CBZ X0, 0x2820ACC
	0x02820738 ADRP X22, 0x18D3000
	0x0282073C LDR X22, [X22 + 0xA90]
	0x02820740 LDR X8, [X0]
	0x02820744 LDR X1, [X22]
	0x02820748 LDR X8, [X8 + 0x40]
	0x0282074C LDR X9, [X1 + 0x40]
	0x02820750 CMP X8, X9
	0x02820754 B.NE 0x2820AD0
	0x02820758 BL 0x1C16E08
	0x0282075C LDR V0, [X0]
	0x02820760 STR S0, [X19]
	0x02820764 STRH W21, [X31 + 0x38]
	0x02820768 LDR X0, [X20]
	0x0282076C LDRB W8, [X0 + 0x135]
	0x02820770 TBNZ X8, 0x0, 0x2820778
	0x02820774 BL 0x1C5C684
	0x02820778 LDR X8, [X0 + 0xC0]
	0x0282077C ADD X1, X31, 0x38
	0x02820780 LDR X0, [X8 + 0x20]
	0x02820784 BL 0x1C16E04
	0x02820788 CBZ X0, 0x2820ACC
	0x0282078C LDR X8, [X0]
	0x02820790 LDR X1, [X22]
	0x02820794 LDR X8, [X8 + 0x40]
	0x02820798 LDR X9, [X1 + 0x40]
	0x0282079C CMP X8, X9
	0x028207A0 B.NE 0x2820AD0
	0x028207A4 BL 0x1C16E08
	0x028207A8 LDR V0, [X0]
	0x028207AC STR S0, [X19 + 0x4]
	0x028207B0 STRH W21, [X31 + 0x34]
	0x028207B4 LDR X0, [X20]
	0x028207B8 LDRB W8, [X0 + 0x135]
	0x028207BC TBNZ X8, 0x0, 0x28207C4
	0x028207C0 BL 0x1C5C684
	0x028207C4 LDR X8, [X0 + 0xC0]
	0x028207C8 ADD X1, X31, 0x34
	0x028207CC LDR X0, [X8 + 0x20]
	0x028207D0 BL 0x1C16E04
	0x028207D4 CBZ X0, 0x2820ACC
	0x028207D8 LDR X8, [X0]
	0x028207DC LDR X1, [X22]
	0x028207E0 LDR X8, [X8 + 0x40]
	0x028207E4 LDR X9, [X1 + 0x40]
	0x028207E8 CMP X8, X9
	0x028207EC B.NE 0x2820AD0
	0x028207F0 BL 0x1C16E08
	0x028207F4 LDR V0, [X0]
	0x028207F8 STR S0, [X19 + 0x8]
	0x028207FC STRH W21, [X31 + 0x30]
	0x02820800 LDR X0, [X20]
	0x02820804 LDRB W8, [X0 + 0x135]
	0x02820808 TBNZ X8, 0x0, 0x2820810
	0x0282080C BL 0x1C5C684
	0x02820810 LDR X8, [X0 + 0xC0]
	0x02820814 ADD X1, X31, 0x30
	0x02820818 LDR X0, [X8 + 0x20]
	0x0282081C BL 0x1C16E04
	0x02820820 CBZ X0, 0x2820ACC
	0x02820824 LDR X8, [X0]
	0x02820828 LDR X1, [X22]
	0x0282082C LDR X8, [X8 + 0x40]
	0x02820830 LDR X9, [X1 + 0x40]
	0x02820834 CMP X8, X9
	0x02820838 B.NE 0x2820AD0
	0x0282083C BL 0x1C16E08
	0x02820840 LDR V0, [X0]
	0x02820844 STR S0, [X19 + 0xC]
	0x02820848 B 0x282051C
	0x0282084C LDR X0, [X20]
	0x02820850 LDRB W8, [X0 + 0x135]
	0x02820854 TBNZ X8, 0x0, 0x282085C
	0x02820858 BL 0x1C5C684
	0x0282085C LDR X8, [X24]
	0x02820860 LDR X9, [X0 + 0xC0]
	0x02820864 LDR W10, [X8 + 0xE0]
	0x02820868 LDR X22, [X9 + 0x18]
	0x0282086C CBNZ W10, 0x2820878
	0x02820870 MOV X0, X8
	0x02820874 BL 0x1C16DFC
	0x02820878 MOV X0, X22
	0x0282087C MOV X1, X31
	0x02820880 BL 0x338C698
	0x02820884 ADRP X8, 0x18FB000
	0x02820888 LDR X8, [X8 + 0xA78]
	0x0282088C MOV X22, X0
	0x02820890 MOV X1, X31
	0x02820894 LDR X8, [X8]
	0x02820898 MOV X0, X8
	0x0282089C BL 0x338C698
	0x028208A0 MOV X1, X0
	0x028208A4 MOV X0, X22
	0x028208A8 MOV X2, X31
	0x028208AC BL 0x3395194
	0x028208B0 TBZ X0, 0x0, 0x282051C
	0x028208B4 ADRP X23, 0x18D6000
	0x028208B8 LDR X23, [X23 + 0x978]
	0x028208BC MOV X22, X31
	0x028208C0 LDR X0, [X20]
	0x028208C4 LDRB W8, [X0 + 0x135]
	0x028208C8 TBNZ X8, 0x0, 0x28208D0
	0x028208CC BL 0x1C5C684
	0x028208D0 LDR X8, [X0 + 0xC0]
	0x028208D4 LDR X0, [X8 + 0x8]
	0x028208D8 LDRB W8, [X0 + 0x135]
	0x028208DC TBNZ X8, 0x0, 0x28208E4
	0x028208E0 BL 0x1C5C684
	0x028208E4 LDR W8, [X0 + 0xE0]
	0x028208E8 CBNZ W8, 0x28208F0
	0x028208EC BL 0x1C16DFC
	0x028208F0 LDR X0, [X20]
	0x028208F4 LDRB W8, [X0 + 0x135]
	0x028208F8 TBNZ X8, 0x0, 0x2820900
	0x028208FC BL 0x1C5C684
	0x02820900 LDR X8, [X0 + 0xC0]
	0x02820904 LDR X24, [X8 + 0x28]
	0x02820908 LDR X0, [X24 + 0x20]
	0x0282090C LDRB W8, [X0 + 0x135]
	0x02820910 TBNZ X8, 0x0, 0x2820918
	0x02820914 BL 0x1C5C684
	0x02820918 LDR X8, [X0 + 0xC0]
	0x0282091C LDR X0, [X8 + 0x8]
	0x02820920 LDRB W8, [X0 + 0x135]
	0x02820924 TBNZ X8, 0x0, 0x282092C
	0x02820928 BL 0x1C5C684
	0x0282092C LDR W8, [X0 + 0xE0]
	0x02820930 CBNZ W8, 0x2820938
	0x02820934 BL 0x1C16DFC
	0x02820938 LDR X0, [X24 + 0x20]
	0x0282093C LDRB W8, [X0 + 0x135]
	0x02820940 TBNZ X8, 0x0, 0x2820948
	0x02820944 BL 0x1C5C684
	0x02820948 LDR X8, [X0 + 0xC0]
	0x0282094C LDR X0, [X8 + 0x8]
	0x02820950 LDRB W8, [X0 + 0x135]
	0x02820954 TBNZ X8, 0x0, 0x282095C
	0x02820958 BL 0x1C5C684
	0x0282095C LDR X8, [X0 + 0xB8]
	0x02820960 LDRSW X8, [X8]
	0x02820964 CMP X22, X8
	0x02820968 B.GE 0x282051C
	0x0282096C STRH W21, [X31 + 0x3C]
	0x02820970 LDR X0, [X20]
	0x02820974 LDRB W8, [X0 + 0x135]
	0x02820978 TBNZ X8, 0x0, 0x2820980
	0x0282097C BL 0x1C5C684
	0x02820980 LDR X8, [X0 + 0xC0]
	0x02820984 ADD X1, X31, 0x3C
	0x02820988 LDR X0, [X8 + 0x20]
	0x0282098C BL 0x1C16E04
	0x02820990 CBZ X0, 0x2820ACC
	0x02820994 LDR X8, [X0]
	0x02820998 LDR X1, [X23]
	0x0282099C LDR X8, [X8 + 0x40]
	0x028209A0 LDR X9, [X1 + 0x40]
	0x028209A4 CMP X8, X9
	0x028209A8 B.NE 0x2820AD0
	0x028209AC BL 0x1C16E08
	0x028209B0 LDR V0, [X0]
	0x028209B4 ADD X22, X22, 0x1
	0x028209B8 STR D0, [X19], #0x8
	0x028209BC B 0x28208C0
	0x028209C0 LDR X0, [X20]
	0x028209C4 LDRB W8, [X0 + 0x135]
	0x028209C8 TBNZ X8, 0x0, 0x28209D0
	0x028209CC BL 0x1C5C684
	0x028209D0 LDR X8, [X24]
	0x028209D4 LDR X9, [X0 + 0xC0]
	0x028209D8 LDR W10, [X8 + 0xE0]
	0x028209DC LDR X22, [X9 + 0x18]
	0x028209E0 CBNZ W10, 0x28209EC
	0x028209E4 MOV X0, X8
	0x028209E8 BL 0x1C16DFC
	0x028209EC MOV X0, X22
	0x028209F0 MOV X1, X31
	0x028209F4 BL 0x338C698
	0x028209F8 ADRP X8, 0x18FB000
	0x028209FC LDR X8, [X8 + 0xA78]
	0x02820A00 MOV X22, X0
	0x02820A04 MOV X1, X31
	0x02820A08 LDR X8, [X8]
	0x02820A0C MOV X0, X8
	0x02820A10 BL 0x338C698
	0x02820A14 MOV X1, X0
	0x02820A18 MOV X0, X22
	0x02820A1C MOV X2, X31
	0x02820A20 BL 0x3395194
	0x02820A24 TBZ X0, 0x0, 0x282051C
	0x02820A28 STRH W21, [X31 + 0x3C]
	0x02820A2C LDR X0, [X20]
	0x02820A30 LDRB W8, [X0 + 0x135]
	0x02820A34 TBNZ X8, 0x0, 0x2820A3C
	0x02820A38 BL 0x1C5C684
	0x02820A3C LDR X8, [X0 + 0xC0]
	0x02820A40 ADD X1, X31, 0x3C
	0x02820A44 LDR X0, [X8 + 0x20]
	0x02820A48 BL 0x1C16E04
	0x02820A4C CBZ X0, 0x2820ACC
	0x02820A50 ADRP X22, 0x18D6000
	0x02820A54 LDR X22, [X22 + 0x978]
	0x02820A58 LDR X8, [X0]
	0x02820A5C LDR X1, [X22]
	0x02820A60 LDR X8, [X8 + 0x40]
	0x02820A64 LDR X9, [X1 + 0x40]
	0x02820A68 CMP X8, X9
	0x02820A6C B.NE 0x2820AD0
	0x02820A70 BL 0x1C16E08
	0x02820A74 LDR V0, [X0]
	0x02820A78 STR D0, [X19]
	0x02820A7C STRH W21, [X31 + 0x38]
	0x02820A80 LDR X0, [X20]
	0x02820A84 LDRB W8, [X0 + 0x135]
	0x02820A88 TBNZ X8, 0x0, 0x2820A90
	0x02820A8C BL 0x1C5C684
	0x02820A90 LDR X8, [X0 + 0xC0]
	0x02820A94 ADD X1, X31, 0x38
	0x02820A98 LDR X0, [X8 + 0x20]
	0x02820A9C BL 0x1C16E04
	0x02820AA0 CBZ X0, 0x2820ACC
	0x02820AA4 LDR X8, [X0]
	0x02820AA8 LDR X1, [X22]
	0x02820AAC LDR X8, [X8 + 0x40]
	0x02820AB0 LDR X9, [X1 + 0x40]
	0x02820AB4 CMP X8, X9
	0x02820AB8 B.NE 0x2820AD0
	0x02820ABC BL 0x1C16E08
	0x02820AC0 LDR V0, [X0]
	0x02820AC4 STR D0, [X19 + 0x8]
	0x02820AC8 B 0x282051C
	0x02820ACC BL 0x1C16F20
	0x02820AD0 BL 0x1C171E0
	0x02820AD4 STP X30, X21, [X31 - 0x20]!
	0x02820AD8 STP X20, X19, [X31 + 0x10]
	0x02820ADC LDR X8, [X2 + 0x20]
	0x02820AE0 MOV X21, X2
	0x02820AE4 MOV X19, X1
	0x02820AE8 MOV X20, X0
	0x02820AEC LDRB W9, [X8 + 0x135]
	0x02820AF0 TBNZ X9, 0x0, 0x2820B00
	0x02820AF4 MOV X0, X8
	0x02820AF8 BL 0x1C5C684
	0x02820AFC MOV X8, X0
	0x02820B00 LDR X8, [X8 + 0xC0]
	0x02820B04 LDR X0, [X8 + 0x8]
	0x02820B08 LDRB W8, [X0 + 0x135]
	0x02820B0C TBNZ X8, 0x0, 0x2820B14
	0x02820B10 BL 0x1C5C684
	0x02820B14 LDR W8, [X0 + 0xE0]
	0x02820B18 CBNZ W8, 0x2820B20
	0x02820B1C BL 0x1C16DFC
	0x02820B20 LDR X0, [X21 + 0x20]
	0x02820B24 LDRB W8, [X0 + 0x135]
	0x02820B28 TBNZ X8, 0x0, 0x2820B30
	0x02820B2C BL 0x1C5C684
	0x02820B30 LDR X8, [X0 + 0xC0]
	0x02820B34 MOV X0, X20
	0x02820B38 MOV X1, X19
	0x02820B3C LDP X20, X19, [X31 + 0x10]
	0x02820B40 LDR X3, [X8 + 0x30]
	0x02820B44 MOV W2, W31
	0x02820B48 LDP X30, X21, [X31], #0x20
	0x02820B4C B 0x2820B50
	0x02820B50 STR X30, [X31 - 0x50]!
	0x02820B54 STP X26, X25, [X31 + 0x10]
	0x02820B58 STP X24, X23, [X31 + 0x20]
	0x02820B5C STP X22, X21, [X31 + 0x30]
	0x02820B60 STP X20, X19, [X31 + 0x40]
	0x02820B64 ADRP X23, 0x1BBA000
	0x02820B68 LDRB W8, [X23 + 0xA74]
	0x02820B6C MOV X20, X3
	0x02820B70 MOV W21, W2
	0x02820B74 MOV X22, X1
	0x02820B78 MOV X19, X0
	0x02820B7C TBNZ X8, 0x0, 0x2820C0C
	0x02820B80 ADRP X0, 0x18FA000
	0x02820B84 LDR X0, [X0 + 0xD68]
	0x02820B88 BL 0x1C16CF4
	0x02820B8C ADRP X0, 0x18FB000
	0x02820B90 LDR X0, [X0 + 0xA78]
	0x02820B94 BL 0x1C16CF4
	0x02820B98 ADRP X0, 0x18FA000
	0x02820B9C LDR X0, [X0 + 0xD78]
	0x02820BA0 BL 0x1C16CF4
	0x02820BA4 ADRP X0, 0x18FA000
	0x02820BA8 LDR X0, [X0 + 0xD80]
	0x02820BAC BL 0x1C16CF4
	0x02820BB0 ADRP X0, 0x18FA000
	0x02820BB4 LDR X0, [X0 + 0xD88]
	0x02820BB8 BL 0x1C16CF4
	0x02820BBC ADRP X0, 0x18FA000
	0x02820BC0 LDR X0, [X0 + 0xD90]
	0x02820BC4 BL 0x1C16CF4
	0x02820BC8 ADRP X0, 0x18FB000
	0x02820BCC LDR X0, [X0 + 0xA80]
	0x02820BD0 BL 0x1C16CF4
	0x02820BD4 ADRP X0, 0x18D3000
	0x02820BD8 LDR X0, [X0 + 0x6C0]
	0x02820BDC BL 0x1C16CF4
	0x02820BE0 ADRP X0, 0x18FA000
	0x02820BE4 LDR X0, [X0 + 0xD98]
	0x02820BE8 BL 0x1C16CF4
	0x02820BEC ADRP X0, 0x18FA000
	0x02820BF0 LDR X0, [X0 + 0xDA0]
	0x02820BF4 BL 0x1C16CF4
	0x02820BF8 ADRP X0, 0x18FA000
	0x02820BFC LDR X0, [X0 + 0xDA8]
	0x02820C00 BL 0x1C16CF4
	0x02820C04 MOVZ W8, 0x1
	0x02820C08 STRB W8, [X23 + 0xA74]
	0x02820C0C STP X31, X31, [X19]
	0x02820C10 MOV X24, X20
	0x02820C14 LDR X0, [X24 + 0x20]!
	0x02820C18 ADRP X25, 0x18D3000
	0x02820C1C LDRB W8, [X0 + 0x135]
	0x02820C20 LDR X25, [X25 + 0x6C0]
	0x02820C24 TBNZ X8, 0x0, 0x2820C2C
	0x02820C28 BL 0x1C5C684
	0x02820C2C LDR X8, [X25]
	0x02820C30 LDR X9, [X0 + 0xC0]
	0x02820C34 ADRP X26, 0x18FA000
	0x02820C38 LDR W10, [X8 + 0xE0]
	0x02820C3C LDR X23, [X9 + 0x18]
	0x02820C40 LDR X26, [X26 + 0xD68]
	0x02820C44 CBNZ W10, 0x2820C50
	0x02820C48 MOV X0, X8
	0x02820C4C BL 0x1C16DFC
	0x02820C50 MOV X0, X23
	0x02820C54 MOV X1, X31
	0x02820C58 BL 0x338C698
	0x02820C5C LDR X8, [X26]
	0x02820C60 MOV X23, X0
	0x02820C64 MOV X1, X31
	0x02820C68 MOV X0, X8
	0x02820C6C BL 0x338C698
	0x02820C70 MOV X1, X0
	0x02820C74 MOV X0, X23
	0x02820C78 MOV X2, X31
	0x02820C7C BL 0x3395194
	0x02820C80 TBZ X0, 0x0, 0x2820D48
	0x02820C84 MOV X20, X31
	0x02820C88 ADD X21, X22, W21, SXTW
	0x02820C8C LDR X0, [X24]
	0x02820C90 LDRB W8, [X0 + 0x135]
	0x02820C94 TBNZ X8, 0x0, 0x2820C9C
	0x02820C98 BL 0x1C5C684
	0x02820C9C LDR X8, [X0 + 0xC0]
	0x02820CA0 LDR X0, [X8 + 0x8]
	0x02820CA4 LDRB W8, [X0 + 0x135]
	0x02820CA8 TBNZ X8, 0x0, 0x2820CB0
	0x02820CAC BL 0x1C5C684
	0x02820CB0 LDR W8, [X0 + 0xE0]
	0x02820CB4 CBNZ W8, 0x2820CBC
	0x02820CB8 BL 0x1C16DFC
	0x02820CBC LDR X0, [X24]
	0x02820CC0 LDRB W8, [X0 + 0x135]
	0x02820CC4 TBNZ X8, 0x0, 0x2820CCC
	0x02820CC8 BL 0x1C5C684
	0x02820CCC LDR X8, [X0 + 0xC0]
	0x02820CD0 LDR X22, [X8 + 0x28]
	0x02820CD4 LDR X0, [X22 + 0x20]
	0x02820CD8 LDRB W8, [X0 + 0x135]
	0x02820CDC TBNZ X8, 0x0, 0x2820CE4
	0x02820CE0 BL 0x1C5C684
	0x02820CE4 LDR X8, [X0 + 0xC0]
	0x02820CE8 LDR X0, [X8 + 0x8]
	0x02820CEC LDRB W8, [X0 + 0x135]
	0x02820CF0 TBNZ X8, 0x0, 0x2820CF8
	0x02820CF4 BL 0x1C5C684
	0x02820CF8 LDR W8, [X0 + 0xE0]
	0x02820CFC CBNZ W8, 0x2820D04
	0x02820D00 BL 0x1C16DFC
	0x02820D04 LDR X0, [X22 + 0x20]
	0x02820D08 LDRB W8, [X0 + 0x135]
	0x02820D0C TBNZ X8, 0x0, 0x2820D14
	0x02820D10 BL 0x1C5C684
	0x02820D14 LDR X8, [X0 + 0xC0]
	0x02820D18 LDR X0, [X8 + 0x8]
	0x02820D1C LDRB W8, [X0 + 0x135]
	0x02820D20 TBNZ X8, 0x0, 0x2820D28
	0x02820D24 BL 0x1C5C684
	0x02820D28 LDR X8, [X0 + 0xB8]
	0x02820D2C LDRSW X8, [X8]
	0x02820D30 CMP X20, X8
	0x02820D34 B.GE 0x28217D4
	0x02820D38 LDRB W8, [X21, X20, LSL]
	0x02820D3C STRB W8, [X19, X20, LSL]
	0x02820D40 ADD X20, X20, 0x1
	0x02820D44 B 0x2820C8C
	0x02820D48 LDR X0, [X24]
	0x02820D4C LDRB W8, [X0 + 0x135]
	0x02820D50 TBNZ X8, 0x0, 0x2820D58
	0x02820D54 BL 0x1C5C684
	0x02820D58 LDR X8, [X25]
	0x02820D5C LDR X9, [X0 + 0xC0]
	0x02820D60 ADRP X26, 0x18FA000
	0x02820D64 LDR W10, [X8 + 0xE0]
	0x02820D68 LDR X23, [X9 + 0x18]
	0x02820D6C LDR X26, [X26 + 0xD90]
	0x02820D70 CBNZ W10, 0x2820D7C
	0x02820D74 MOV X0, X8
	0x02820D78 BL 0x1C16DFC
	0x02820D7C MOV X0, X23
	0x02820D80 MOV X1, X31
	0x02820D84 BL 0x338C698
	0x02820D88 LDR X8, [X26]
	0x02820D8C MOV X23, X0
	0x02820D90 MOV X1, X31
	0x02820D94 MOV X0, X8
	0x02820D98 BL 0x338C698
	0x02820D9C MOV X1, X0
	0x02820DA0 MOV X0, X23
	0x02820DA4 MOV X2, X31
	0x02820DA8 BL 0x3395194
	0x02820DAC TBZ X0, 0x0, 0x2820E74
	0x02820DB0 MOV X20, X31
	0x02820DB4 ADD X21, X22, W21, SXTW
	0x02820DB8 LDR X0, [X24]
	0x02820DBC LDRB W8, [X0 + 0x135]
	0x02820DC0 TBNZ X8, 0x0, 0x2820DC8
	0x02820DC4 BL 0x1C5C684
	0x02820DC8 LDR X8, [X0 + 0xC0]
	0x02820DCC LDR X0, [X8 + 0x8]
	0x02820DD0 LDRB W8, [X0 + 0x135]
	0x02820DD4 TBNZ X8, 0x0, 0x2820DDC
	0x02820DD8 BL 0x1C5C684
	0x02820DDC LDR W8, [X0 + 0xE0]
	0x02820DE0 CBNZ W8, 0x2820DE8
	0x02820DE4 BL 0x1C16DFC
	0x02820DE8 LDR X0, [X24]
	0x02820DEC LDRB W8, [X0 + 0x135]
	0x02820DF0 TBNZ X8, 0x0, 0x2820DF8
	0x02820DF4 BL 0x1C5C684
	0x02820DF8 LDR X8, [X0 + 0xC0]
	0x02820DFC LDR X22, [X8 + 0x28]
	0x02820E00 LDR X0, [X22 + 0x20]
	0x02820E04 LDRB W8, [X0 + 0x135]
	0x02820E08 TBNZ X8, 0x0, 0x2820E10
	0x02820E0C BL 0x1C5C684
	0x02820E10 LDR X8, [X0 + 0xC0]
	0x02820E14 LDR X0, [X8 + 0x8]
	0x02820E18 LDRB W8, [X0 + 0x135]
	0x02820E1C TBNZ X8, 0x0, 0x2820E24
	0x02820E20 BL 0x1C5C684
	0x02820E24 LDR W8, [X0 + 0xE0]
	0x02820E28 CBNZ W8, 0x2820E30
	0x02820E2C BL 0x1C16DFC
	0x02820E30 LDR X0, [X22 + 0x20]
	0x02820E34 LDRB W8, [X0 + 0x135]
	0x02820E38 TBNZ X8, 0x0, 0x2820E40
	0x02820E3C BL 0x1C5C684
	0x02820E40 LDR X8, [X0 + 0xC0]
	0x02820E44 LDR X0, [X8 + 0x8]
	0x02820E48 LDRB W8, [X0 + 0x135]
	0x02820E4C TBNZ X8, 0x0, 0x2820E54
	0x02820E50 BL 0x1C5C684
	0x02820E54 LDR X8, [X0 + 0xB8]
	0x02820E58 LDRSW X8, [X8]
	0x02820E5C CMP X20, X8
	0x02820E60 B.GE 0x28217D4
	0x02820E64 LDRB W8, [X21, X20, LSL]
	0x02820E68 STRB W8, [X19, X20, LSL]
	0x02820E6C ADD X20, X20, 0x1
	0x02820E70 B 0x2820DB8
	0x02820E74 LDR X0, [X24]
	0x02820E78 LDRB W8, [X0 + 0x135]
	0x02820E7C TBNZ X8, 0x0, 0x2820E84
	0x02820E80 BL 0x1C5C684
	0x02820E84 LDR X8, [X25]
	0x02820E88 LDR X9, [X0 + 0xC0]
	0x02820E8C LDR W10, [X8 + 0xE0]
	0x02820E90 LDR X23, [X9 + 0x18]
	0x02820E94 CBNZ W10, 0x2820EA0
	0x02820E98 MOV X0, X8
	0x02820E9C BL 0x1C16DFC
	0x02820EA0 MOV X0, X23
	0x02820EA4 MOV X1, X31
	0x02820EA8 BL 0x338C698
	0x02820EAC ADRP X8, 0x18FA000
	0x02820EB0 LDR X8, [X8 + 0xD98]
	0x02820EB4 MOV X23, X0
	0x02820EB8 MOV X1, X31
	0x02820EBC LDR X8, [X8]
	0x02820EC0 MOV X0, X8
	0x02820EC4 BL 0x338C698
	0x02820EC8 MOV X1, X0
	0x02820ECC MOV X0, X23
	0x02820ED0 MOV X2, X31
	0x02820ED4 BL 0x3395194
	0x02820ED8 TBZ X0, 0x0, 0x2820FA0
	0x02820EDC MOV X20, X31
	0x02820EE0 ADD X21, X22, W21, 0x1, SXTW
	0x02820EE4 LDR X0, [X24]
	0x02820EE8 LDRB W8, [X0 + 0x135]
	0x02820EEC TBNZ X8, 0x0, 0x2820EF4
	0x02820EF0 BL 0x1C5C684
	0x02820EF4 LDR X8, [X0 + 0xC0]
	0x02820EF8 LDR X0, [X8 + 0x8]
	0x02820EFC LDRB W8, [X0 + 0x135]
	0x02820F00 TBNZ X8, 0x0, 0x2820F08
	0x02820F04 BL 0x1C5C684
	0x02820F08 LDR W8, [X0 + 0xE0]
	0x02820F0C CBNZ W8, 0x2820F14
	0x02820F10 BL 0x1C16DFC
	0x02820F14 LDR X0, [X24]
	0x02820F18 LDRB W8, [X0 + 0x135]
	0x02820F1C TBNZ X8, 0x0, 0x2820F24
	0x02820F20 BL 0x1C5C684
	0x02820F24 LDR X8, [X0 + 0xC0]
	0x02820F28 LDR X22, [X8 + 0x28]
	0x02820F2C LDR X0, [X22 + 0x20]
	0x02820F30 LDRB W8, [X0 + 0x135]
	0x02820F34 TBNZ X8, 0x0, 0x2820F3C
	0x02820F38 BL 0x1C5C684
	0x02820F3C LDR X8, [X0 + 0xC0]
	0x02820F40 LDR X0, [X8 + 0x8]
	0x02820F44 LDRB W8, [X0 + 0x135]
	0x02820F48 TBNZ X8, 0x0, 0x2820F50
	0x02820F4C BL 0x1C5C684
	0x02820F50 LDR W8, [X0 + 0xE0]
	0x02820F54 CBNZ W8, 0x2820F5C
	0x02820F58 BL 0x1C16DFC
	0x02820F5C LDR X0, [X22 + 0x20]
	0x02820F60 LDRB W8, [X0 + 0x135]
	0x02820F64 TBNZ X8, 0x0, 0x2820F6C
	0x02820F68 BL 0x1C5C684
	0x02820F6C LDR X8, [X0 + 0xC0]
	0x02820F70 LDR X0, [X8 + 0x8]
	0x02820F74 LDRB W8, [X0 + 0x135]
	0x02820F78 TBNZ X8, 0x0, 0x2820F80
	0x02820F7C BL 0x1C5C684
	0x02820F80 LDR X8, [X0 + 0xB8]
	0x02820F84 LDRSW X8, [X8]
	0x02820F88 CMP X20, X8
	0x02820F8C B.GE 0x28217D4
	0x02820F90 LDRH W8, [X21], #0x2
	0x02820F94 ADD X20, X20, 0x1
	0x02820F98 STRH W8, [X19], #0x2
	0x02820F9C B 0x2820EE4
	0x02820FA0 LDR X0, [X24]
	0x02820FA4 LDRB W8, [X0 + 0x135]
	0x02820FA8 TBNZ X8, 0x0, 0x2820FB0
	0x02820FAC BL 0x1C5C684
	0x02820FB0 LDR X8, [X25]
	0x02820FB4 LDR X9, [X0 + 0xC0]
	0x02820FB8 LDR W10, [X8 + 0xE0]
	0x02820FBC LDR X23, [X9 + 0x18]
	0x02820FC0 CBNZ W10, 0x2820FCC
	0x02820FC4 MOV X0, X8
	0x02820FC8 BL 0x1C16DFC
	0x02820FCC MOV X0, X23
	0x02820FD0 MOV X1, X31
	0x02820FD4 BL 0x338C698
	0x02820FD8 ADRP X8, 0x18FA000
	0x02820FDC LDR X8, [X8 + 0xD78]
	0x02820FE0 MOV X23, X0
	0x02820FE4 MOV X1, X31
	0x02820FE8 LDR X8, [X8]
	0x02820FEC MOV X0, X8
	0x02820FF0 BL 0x338C698
	0x02820FF4 MOV X1, X0
	0x02820FF8 MOV X0, X23
	0x02820FFC MOV X2, X31
	0x02821000 BL 0x3395194
	0x02821004 TBZ X0, 0x0, 0x28210CC
	0x02821008 MOV X20, X31
	0x0282100C ADD X21, X22, W21, 0x1, SXTW
	0x02821010 LDR X0, [X24]
	0x02821014 LDRB W8, [X0 + 0x135]
	0x02821018 TBNZ X8, 0x0, 0x2821020
	0x0282101C BL 0x1C5C684
	0x02821020 LDR X8, [X0 + 0xC0]
	0x02821024 LDR X0, [X8 + 0x8]
	0x02821028 LDRB W8, [X0 + 0x135]
	0x0282102C TBNZ X8, 0x0, 0x2821034
	0x02821030 BL 0x1C5C684
	0x02821034 LDR W8, [X0 + 0xE0]
	0x02821038 CBNZ W8, 0x2821040
	0x0282103C BL 0x1C16DFC
	0x02821040 LDR X0, [X24]
	0x02821044 LDRB W8, [X0 + 0x135]
	0x02821048 TBNZ X8, 0x0, 0x2821050
	0x0282104C BL 0x1C5C684
	0x02821050 LDR X8, [X0 + 0xC0]
	0x02821054 LDR X22, [X8 + 0x28]
	0x02821058 LDR X0, [X22 + 0x20]
	0x0282105C LDRB W8, [X0 + 0x135]
	0x02821060 TBNZ X8, 0x0, 0x2821068
	0x02821064 BL 0x1C5C684
	0x02821068 LDR X8, [X0 + 0xC0]
	0x0282106C LDR X0, [X8 + 0x8]
	0x02821070 LDRB W8, [X0 + 0x135]
	0x02821074 TBNZ X8, 0x0, 0x282107C
	0x02821078 BL 0x1C5C684
	0x0282107C LDR W8, [X0 + 0xE0]
	0x02821080 CBNZ W8, 0x2821088
	0x02821084 BL 0x1C16DFC
	0x02821088 LDR X0, [X22 + 0x20]
	0x0282108C LDRB W8, [X0 + 0x135]
	0x02821090 TBNZ X8, 0x0, 0x2821098
	0x02821094 BL 0x1C5C684
	0x02821098 LDR X8, [X0 + 0xC0]
	0x0282109C LDR X0, [X8 + 0x8]
	0x028210A0 LDRB W8, [X0 + 0x135]
	0x028210A4 TBNZ X8, 0x0, 0x28210AC
	0x028210A8 BL 0x1C5C684
	0x028210AC LDR X8, [X0 + 0xB8]
	0x028210B0 LDRSW X8, [X8]
	0x028210B4 CMP X20, X8
	0x028210B8 B.GE 0x28217D4
	0x028210BC LDRH W8, [X21], #0x2
	0x028210C0 ADD X20, X20, 0x1
	0x028210C4 STRH W8, [X19], #0x2
	0x028210C8 B 0x2821010
	0x028210CC LDR X0, [X24]
	0x028210D0 LDRB W8, [X0 + 0x135]
	0x028210D4 TBNZ X8, 0x0, 0x28210DC
	0x028210D8 BL 0x1C5C684
	0x028210DC LDR X8, [X25]
	0x028210E0 LDR X9, [X0 + 0xC0]
	0x028210E4 LDR W10, [X8 + 0xE0]
	0x028210E8 LDR X23, [X9 + 0x18]
	0x028210EC CBNZ W10, 0x28210F8
	0x028210F0 MOV X0, X8
	0x028210F4 BL 0x1C16DFC
	0x028210F8 MOV X0, X23
	0x028210FC MOV X1, X31
	0x02821100 BL 0x338C698
	0x02821104 ADRP X8, 0x18F9000
	0x02821108 LDR X8, [X8 + 0xDA0]
	0x0282110C MOV X23, X0
	0x02821110 MOV X1, X31
	0x02821114 LDR X8, [X8]
	0x02821118 MOV X0, X8
	0x0282111C BL 0x338C698
	0x02821120 MOV X1, X0
	0x02821124 MOV X0, X23
	0x02821128 MOV X2, X31
	0x0282112C BL 0x3395194
	0x02821130 TBZ X0, 0x0, 0x28211F8
	0x02821134 MOV X20, X31
	0x02821138 ADD X21, X22, W21, 0x2, SXTW
	0x0282113C LDR X0, [X24]
	0x02821140 LDRB W8, [X0 + 0x135]
	0x02821144 TBNZ X8, 0x0, 0x282114C
	0x02821148 BL 0x1C5C684
	0x0282114C LDR X8, [X0 + 0xC0]
	0x02821150 LDR X0, [X8 + 0x8]
	0x02821154 LDRB W8, [X0 + 0x135]
	0x02821158 TBNZ X8, 0x0, 0x2821160
	0x0282115C BL 0x1C5C684
	0x02821160 LDR W8, [X0 + 0xE0]
	0x02821164 CBNZ W8, 0x282116C
	0x02821168 BL 0x1C16DFC
	0x0282116C LDR X0, [X24]
	0x02821170 LDRB W8, [X0 + 0x135]
	0x02821174 TBNZ X8, 0x0, 0x282117C
	0x02821178 BL 0x1C5C684
	0x0282117C LDR X8, [X0 + 0xC0]
	0x02821180 LDR X22, [X8 + 0x28]
	0x02821184 LDR X0, [X22 + 0x20]
	0x02821188 LDRB W8, [X0 + 0x135]
	0x0282118C TBNZ X8, 0x0, 0x2821194
	0x02821190 BL 0x1C5C684
	0x02821194 LDR X8, [X0 + 0xC0]
	0x02821198 LDR X0, [X8 + 0x8]
	0x0282119C LDRB W8, [X0 + 0x135]
	0x028211A0 TBNZ X8, 0x0, 0x28211A8
	0x028211A4 BL 0x1C5C684
	0x028211A8 LDR W8, [X0 + 0xE0]
	0x028211AC CBNZ W8, 0x28211B4
	0x028211B0 BL 0x1C16DFC
	0x028211B4 LDR X0, [X22 + 0x20]
	0x028211B8 LDRB W8, [X0 + 0x135]
	0x028211BC TBNZ X8, 0x0, 0x28211C4
	0x028211C0 BL 0x1C5C684
	0x028211C4 LDR X8, [X0 + 0xC0]
	0x028211C8 LDR X0, [X8 + 0x8]
	0x028211CC LDRB W8, [X0 + 0x135]
	0x028211D0 TBNZ X8, 0x0, 0x28211D8
	0x028211D4 BL 0x1C5C684
	0x028211D8 LDR X8, [X0 + 0xB8]
	0x028211DC LDRSW X8, [X8]
	0x028211E0 CMP X20, X8
	0x028211E4 B.GE 0x28217D4
	0x028211E8 LDR W8, [X21], #0x4
	0x028211EC ADD X20, X20, 0x1
	0x028211F0 STR W8, [X19], #0x4
	0x028211F4 B 0x282113C
	0x028211F8 LDR X0, [X24]
	0x028211FC LDRB W8, [X0 + 0x135]
	0x02821200 TBNZ X8, 0x0, 0x2821208
	0x02821204 BL 0x1C5C684
	0x02821208 LDR X8, [X25]
	0x0282120C LDR X9, [X0 + 0xC0]
	0x02821210 LDR W10, [X8 + 0xE0]
	0x02821214 LDR X23, [X9 + 0x18]
	0x02821218 CBNZ W10, 0x2821224
	0x0282121C MOV X0, X8
	0x02821220 BL 0x1C16DFC
	0x02821224 MOV X0, X23
	0x02821228 MOV X1, X31
	0x0282122C BL 0x338C698
	0x02821230 ADRP X8, 0x18F9000
	0x02821234 LDR X8, [X8 + 0xD80]
	0x02821238 MOV X23, X0
	0x0282123C MOV X1, X31
	0x02821240 LDR X8, [X8]
	0x02821244 MOV X0, X8
	0x02821248 BL 0x338C698
	0x0282124C MOV X1, X0
	0x02821250 MOV X0, X23
	0x02821254 MOV X2, X31
	0x02821258 BL 0x3395194
	0x0282125C TBZ X0, 0x0, 0x2821324
	0x02821260 MOV X20, X31
	0x02821264 ADD X21, X22, W21, 0x2, SXTW
	0x02821268 LDR X0, [X24]
	0x0282126C LDRB W8, [X0 + 0x135]
	0x02821270 TBNZ X8, 0x0, 0x2821278
	0x02821274 BL 0x1C5C684
	0x02821278 LDR X8, [X0 + 0xC0]
	0x0282127C LDR X0, [X8 + 0x8]
	0x02821280 LDRB W8, [X0 + 0x135]
	0x02821284 TBNZ X8, 0x0, 0x282128C
	0x02821288 BL 0x1C5C684
	0x0282128C LDR W8, [X0 + 0xE0]
	0x02821290 CBNZ W8, 0x2821298
	0x02821294 BL 0x1C16DFC
	0x02821298 LDR X0, [X24]
	0x0282129C LDRB W8, [X0 + 0x135]
	0x028212A0 TBNZ X8, 0x0, 0x28212A8
	0x028212A4 BL 0x1C5C684
	0x028212A8 LDR X8, [X0 + 0xC0]
	0x028212AC LDR X22, [X8 + 0x28]
	0x028212B0 LDR X0, [X22 + 0x20]
	0x028212B4 LDRB W8, [X0 + 0x135]
	0x028212B8 TBNZ X8, 0x0, 0x28212C0
	0x028212BC BL 0x1C5C684
	0x028212C0 LDR X8, [X0 + 0xC0]
	0x028212C4 LDR X0, [X8 + 0x8]
	0x028212C8 LDRB W8, [X0 + 0x135]
	0x028212CC TBNZ X8, 0x0, 0x28212D4
	0x028212D0 BL 0x1C5C684
	0x028212D4 LDR W8, [X0 + 0xE0]
	0x028212D8 CBNZ W8, 0x28212E0
	0x028212DC BL 0x1C16DFC
	0x028212E0 LDR X0, [X22 + 0x20]
	0x028212E4 LDRB W8, [X0 + 0x135]
	0x028212E8 TBNZ X8, 0x0, 0x28212F0
	0x028212EC BL 0x1C5C684
	0x028212F0 LDR X8, [X0 + 0xC0]
	0x028212F4 LDR X0, [X8 + 0x8]
	0x028212F8 LDRB W8, [X0 + 0x135]
	0x028212FC TBNZ X8, 0x0, 0x2821304
	0x02821300 BL 0x1C5C684
	0x02821304 LDR X8, [X0 + 0xB8]
	0x02821308 LDRSW X8, [X8]
	0x0282130C CMP X20, X8
	0x02821310 B.GE 0x28217D4
	0x02821314 LDR W8, [X21], #0x4
	0x02821318 ADD X20, X20, 0x1
	0x0282131C STR W8, [X19], #0x4
	0x02821320 B 0x2821268
	0x02821324 LDR X0, [X24]
	0x02821328 LDRB W8, [X0 + 0x135]
	0x0282132C TBNZ X8, 0x0, 0x2821334
	0x02821330 BL 0x1C5C684
	0x02821334 LDR X8, [X25]
	0x02821338 LDR X9, [X0 + 0xC0]
	0x0282133C LDR W10, [X8 + 0xE0]
	0x02821340 LDR X23, [X9 + 0x18]
	0x02821344 CBNZ W10, 0x2821350
	0x02821348 MOV X0, X8
	0x0282134C BL 0x1C16DFC
	0x02821350 MOV X0, X23
	0x02821354 MOV X1, X31
	0x02821358 BL 0x338C698
	0x0282135C ADRP X8, 0x18F9000
	0x02821360 LDR X8, [X8 + 0xDA8]
	0x02821364 MOV X23, X0
	0x02821368 MOV X1, X31
	0x0282136C LDR X8, [X8]
	0x02821370 MOV X0, X8
	0x02821374 BL 0x338C698
	0x02821378 MOV X1, X0
	0x0282137C MOV X0, X23
	0x02821380 MOV X2, X31
	0x02821384 BL 0x3395194
	0x02821388 TBZ X0, 0x0, 0x2821450
	0x0282138C MOV X20, X31
	0x02821390 ADD X21, X22, W21, 0x3, SXTW
	0x02821394 LDR X0, [X24]
	0x02821398 LDRB W8, [X0 + 0x135]
	0x0282139C TBNZ X8, 0x0, 0x28213A4
	0x028213A0 BL 0x1C5C684
	0x028213A4 LDR X8, [X0 + 0xC0]
	0x028213A8 LDR X0, [X8 + 0x8]
	0x028213AC LDRB W8, [X0 + 0x135]
	0x028213B0 TBNZ X8, 0x0, 0x28213B8
	0x028213B4 BL 0x1C5C684
	0x028213B8 LDR W8, [X0 + 0xE0]
	0x028213BC CBNZ W8, 0x28213C4
	0x028213C0 BL 0x1C16DFC
	0x028213C4 LDR X0, [X24]
	0x028213C8 LDRB W8, [X0 + 0x135]
	0x028213CC TBNZ X8, 0x0, 0x28213D4
	0x028213D0 BL 0x1C5C684
	0x028213D4 LDR X8, [X0 + 0xC0]
	0x028213D8 LDR X22, [X8 + 0x28]
	0x028213DC LDR X0, [X22 + 0x20]
	0x028213E0 LDRB W8, [X0 + 0x135]
	0x028213E4 TBNZ X8, 0x0, 0x28213EC
	0x028213E8 BL 0x1C5C684
	0x028213EC LDR X8, [X0 + 0xC0]
	0x028213F0 LDR X0, [X8 + 0x8]
	0x028213F4 LDRB W8, [X0 + 0x135]
	0x028213F8 TBNZ X8, 0x0, 0x2821400
	0x028213FC BL 0x1C5C684
	0x02821400 LDR W8, [X0 + 0xE0]
	0x02821404 CBNZ W8, 0x282140C
	0x02821408 BL 0x1C16DFC
	0x0282140C LDR X0, [X22 + 0x20]
	0x02821410 LDRB W8, [X0 + 0x135]
	0x02821414 TBNZ X8, 0x0, 0x282141C
	0x02821418 BL 0x1C5C684
	0x0282141C LDR X8, [X0 + 0xC0]
	0x02821420 LDR X0, [X8 + 0x8]
	0x02821424 LDRB W8, [X0 + 0x135]
	0x02821428 TBNZ X8, 0x0, 0x2821430
	0x0282142C BL 0x1C5C684
	0x02821430 LDR X8, [X0 + 0xB8]
	0x02821434 LDRSW X8, [X8]
	0x02821438 CMP X20, X8
	0x0282143C B.GE 0x28217D4
	0x02821440 LDR X8, [X21], #0x8
	0x02821444 ADD X20, X20, 0x1
	0x02821448 STR X8, [X19], #0x8
	0x0282144C B 0x2821394
	0x02821450 LDR X0, [X24]
	0x02821454 LDRB W8, [X0 + 0x135]
	0x02821458 TBNZ X8, 0x0, 0x2821460
	0x0282145C BL 0x1C5C684
	0x02821460 LDR X8, [X25]
	0x02821464 LDR X9, [X0 + 0xC0]
	0x02821468 LDR W10, [X8 + 0xE0]
	0x0282146C LDR X23, [X9 + 0x18]
	0x02821470 CBNZ W10, 0x282147C
	0x02821474 MOV X0, X8
	0x02821478 BL 0x1C16DFC
	0x0282147C MOV X0, X23
	0x02821480 MOV X1, X31
	0x02821484 BL 0x338C698
	0x02821488 ADRP X8, 0x18F9000
	0x0282148C LDR X8, [X8 + 0xD88]
	0x02821490 MOV X23, X0
	0x02821494 MOV X1, X31
	0x02821498 LDR X8, [X8]
	0x0282149C MOV X0, X8
	0x028214A0 BL 0x338C698
	0x028214A4 MOV X1, X0
	0x028214A8 MOV X0, X23
	0x028214AC MOV X2, X31
	0x028214B0 BL 0x3395194
	0x028214B4 TBZ X0, 0x0, 0x282157C
	0x028214B8 MOV X20, X31
	0x028214BC ADD X21, X22, W21, 0x3, SXTW
	0x028214C0 LDR X0, [X24]
	0x028214C4 LDRB W8, [X0 + 0x135]
	0x028214C8 TBNZ X8, 0x0, 0x28214D0
	0x028214CC BL 0x1C5C684
	0x028214D0 LDR X8, [X0 + 0xC0]
	0x028214D4 LDR X0, [X8 + 0x8]
	0x028214D8 LDRB W8, [X0 + 0x135]
	0x028214DC TBNZ X8, 0x0, 0x28214E4
	0x028214E0 BL 0x1C5C684
	0x028214E4 LDR W8, [X0 + 0xE0]
	0x028214E8 CBNZ W8, 0x28214F0
	0x028214EC BL 0x1C16DFC
	0x028214F0 LDR X0, [X24]
	0x028214F4 LDRB W8, [X0 + 0x135]
	0x028214F8 TBNZ X8, 0x0, 0x2821500
	0x028214FC BL 0x1C5C684
	0x02821500 LDR X8, [X0 + 0xC0]
	0x02821504 LDR X22, [X8 + 0x28]
	0x02821508 LDR X0, [X22 + 0x20]
	0x0282150C LDRB W8, [X0 + 0x135]
	0x02821510 TBNZ X8, 0x0, 0x2821518
	0x02821514 BL 0x1C5C684
	0x02821518 LDR X8, [X0 + 0xC0]
	0x0282151C LDR X0, [X8 + 0x8]
	0x02821520 LDRB W8, [X0 + 0x135]
	0x02821524 TBNZ X8, 0x0, 0x282152C
	0x02821528 BL 0x1C5C684
	0x0282152C LDR W8, [X0 + 0xE0]
	0x02821530 CBNZ W8, 0x2821538
	0x02821534 BL 0x1C16DFC
	0x02821538 LDR X0, [X22 + 0x20]
	0x0282153C LDRB W8, [X0 + 0x135]
	0x02821540 TBNZ X8, 0x0, 0x2821548
	0x02821544 BL 0x1C5C684
	0x02821548 LDR X8, [X0 + 0xC0]
	0x0282154C LDR X0, [X8 + 0x8]
	0x02821550 LDRB W8, [X0 + 0x135]
	0x02821554 TBNZ X8, 0x0, 0x282155C
	0x02821558 BL 0x1C5C684
	0x0282155C LDR X8, [X0 + 0xB8]
	0x02821560 LDRSW X8, [X8]
	0x02821564 CMP X20, X8
	0x02821568 B.GE 0x28217D4
	0x0282156C LDR X8, [X21], #0x8
	0x02821570 ADD X20, X20, 0x1
	0x02821574 STR X8, [X19], #0x8
	0x02821578 B 0x28214C0
	0x0282157C LDR X0, [X24]
	0x02821580 LDRB W8, [X0 + 0x135]
	0x02821584 TBNZ X8, 0x0, 0x282158C
	0x02821588 BL 0x1C5C684
	0x0282158C LDR X8, [X25]
	0x02821590 LDR X9, [X0 + 0xC0]
	0x02821594 LDR W10, [X8 + 0xE0]
	0x02821598 LDR X23, [X9 + 0x18]
	0x0282159C CBNZ W10, 0x28215A8
	0x028215A0 MOV X0, X8
	0x028215A4 BL 0x1C16DFC
	0x028215A8 MOV X0, X23
	0x028215AC MOV X1, X31
	0x028215B0 BL 0x338C698
	0x028215B4 ADRP X8, 0x18FA000
	0x028215B8 LDR X8, [X8 + 0xA80]
	0x028215BC MOV X23, X0
	0x028215C0 MOV X1, X31
	0x028215C4 LDR X8, [X8]
	0x028215C8 MOV X0, X8
	0x028215CC BL 0x338C698
	0x028215D0 MOV X1, X0
	0x028215D4 MOV X0, X23
	0x028215D8 MOV X2, X31
	0x028215DC BL 0x3395194
	0x028215E0 TBZ X0, 0x0, 0x28216A8
	0x028215E4 MOV X20, X31
	0x028215E8 ADD X21, X22, W21, 0x2, SXTW
	0x028215EC LDR X0, [X24]
	0x028215F0 LDRB W8, [X0 + 0x135]
	0x028215F4 TBNZ X8, 0x0, 0x28215FC
	0x028215F8 BL 0x1C5C684
	0x028215FC LDR X8, [X0 + 0xC0]
	0x02821600 LDR X0, [X8 + 0x8]
	0x02821604 LDRB W8, [X0 + 0x135]
	0x02821608 TBNZ X8, 0x0, 0x2821610
	0x0282160C BL 0x1C5C684
	0x02821610 LDR W8, [X0 + 0xE0]
	0x02821614 CBNZ W8, 0x282161C
	0x02821618 BL 0x1C16DFC
	0x0282161C LDR X0, [X24]
	0x02821620 LDRB W8, [X0 + 0x135]
	0x02821624 TBNZ X8, 0x0, 0x282162C
	0x02821628 BL 0x1C5C684
	0x0282162C LDR X8, [X0 + 0xC0]
	0x02821630 LDR X22, [X8 + 0x28]
	0x02821634 LDR X0, [X22 + 0x20]
	0x02821638 LDRB W8, [X0 + 0x135]
	0x0282163C TBNZ X8, 0x0, 0x2821644
	0x02821640 BL 0x1C5C684
	0x02821644 LDR X8, [X0 + 0xC0]
	0x02821648 LDR X0, [X8 + 0x8]
	0x0282164C LDRB W8, [X0 + 0x135]
	0x02821650 TBNZ X8, 0x0, 0x2821658
	0x02821654 BL 0x1C5C684
	0x02821658 LDR W8, [X0 + 0xE0]
	0x0282165C CBNZ W8, 0x2821664
	0x02821660 BL 0x1C16DFC
	0x02821664 LDR X0, [X22 + 0x20]
	0x02821668 LDRB W8, [X0 + 0x135]
	0x0282166C TBNZ X8, 0x0, 0x2821674
	0x02821670 BL 0x1C5C684
	0x02821674 LDR X8, [X0 + 0xC0]
	0x02821678 LDR X0, [X8 + 0x8]
	0x0282167C LDRB W8, [X0 + 0x135]
	0x02821680 TBNZ X8, 0x0, 0x2821688
	0x02821684 BL 0x1C5C684
	0x02821688 LDR X8, [X0 + 0xB8]
	0x0282168C LDRSW X8, [X8]
	0x02821690 CMP X20, X8
	0x02821694 B.GE 0x28217D4
	0x02821698 LDR V0, [X21], #0x4
	0x0282169C ADD X20, X20, 0x1
	0x028216A0 STR S0, [X19], #0x4
	0x028216A4 B 0x28215EC
	0x028216A8 LDR X0, [X24]
	0x028216AC LDRB W8, [X0 + 0x135]
	0x028216B0 TBNZ X8, 0x0, 0x28216B8
	0x028216B4 BL 0x1C5C684
	0x028216B8 LDR X8, [X25]
	0x028216BC LDR X9, [X0 + 0xC0]
	0x028216C0 LDR W10, [X8 + 0xE0]
	0x028216C4 LDR X23, [X9 + 0x18]
	0x028216C8 CBNZ W10, 0x28216D4
	0x028216CC MOV X0, X8
	0x028216D0 BL 0x1C16DFC
	0x028216D4 MOV X0, X23
	0x028216D8 MOV X1, X31
	0x028216DC BL 0x338C698
	0x028216E0 ADRP X8, 0x18FA000
	0x028216E4 LDR X8, [X8 + 0xA78]
	0x028216E8 MOV X23, X0
	0x028216EC MOV X1, X31
	0x028216F0 LDR X8, [X8]
	0x028216F4 MOV X0, X8
	0x028216F8 BL 0x338C698
	0x028216FC MOV X1, X0
	0x02821700 MOV X0, X23
	0x02821704 MOV X2, X31
	0x02821708 BL 0x3395194
	0x0282170C TBZ X0, 0x0, 0x28217EC
	0x02821710 MOV X20, X31
	0x02821714 ADD X21, X22, W21, 0x3, SXTW
	0x02821718 LDR X0, [X24]
	0x0282171C LDRB W8, [X0 + 0x135]
	0x02821720 TBNZ X8, 0x0, 0x2821728
	0x02821724 BL 0x1C5C684
	0x02821728 LDR X8, [X0 + 0xC0]
	0x0282172C LDR X0, [X8 + 0x8]
	0x02821730 LDRB W8, [X0 + 0x135]
	0x02821734 TBNZ X8, 0x0, 0x282173C
	0x02821738 BL 0x1C5C684
	0x0282173C LDR W8, [X0 + 0xE0]
	0x02821740 CBNZ W8, 0x2821748
	0x02821744 BL 0x1C16DFC
	0x02821748 LDR X0, [X24]
	0x0282174C LDRB W8, [X0 + 0x135]
	0x02821750 TBNZ X8, 0x0, 0x2821758
	0x02821754 BL 0x1C5C684
	0x02821758 LDR X8, [X0 + 0xC0]
	0x0282175C LDR X22, [X8 + 0x28]
	0x02821760 LDR X0, [X22 + 0x20]
	0x02821764 LDRB W8, [X0 + 0x135]
	0x02821768 TBNZ X8, 0x0, 0x2821770
	0x0282176C BL 0x1C5C684
	0x02821770 LDR X8, [X0 + 0xC0]
	0x02821774 LDR X0, [X8 + 0x8]
	0x02821778 LDRB W8, [X0 + 0x135]
	0x0282177C TBNZ X8, 0x0, 0x2821784
	0x02821780 BL 0x1C5C684
	0x02821784 LDR W8, [X0 + 0xE0]
	0x02821788 CBNZ W8, 0x2821790
	0x0282178C BL 0x1C16DFC
	0x02821790 LDR X0, [X22 + 0x20]
	0x02821794 LDRB W8, [X0 + 0x135]
	0x02821798 TBNZ X8, 0x0, 0x28217A0
	0x0282179C BL 0x1C5C684
	0x028217A0 LDR X8, [X0 + 0xC0]
	0x028217A4 LDR X0, [X8 + 0x8]
	0x028217A8 LDRB W8, [X0 + 0x135]
	0x028217AC TBNZ X8, 0x0, 0x28217B4
	0x028217B0 BL 0x1C5C684
	0x028217B4 LDR X8, [X0 + 0xB8]
	0x028217B8 LDRSW X8, [X8]
	0x028217BC CMP X20, X8
	0x028217C0 B.GE 0x28217D4
	0x028217C4 LDR V0, [X21], #0x8
	0x028217C8 ADD X20, X20, 0x1
	0x028217CC STR D0, [X19], #0x8
	0x028217D0 B 0x2821718
	0x028217D4 LDP X20, X19, [X31 + 0x40]
	0x028217D8 LDP X22, X21, [X31 + 0x30]
	0x028217DC LDP X24, X23, [X31 + 0x20]
	0x028217E0 LDP X26, X25, [X31 + 0x10]
	0x028217E4 LDR X30, [X31], #0x50
	0x028217E8 RET
	0x028217EC ADRP X0, 0x18D2000
	0x028217F0 LDR X0, [X0 + 0xB40]
	0x028217F4 BL 0x1C16D08
	0x028217F8 BL 0x1C16F10
	0x028217FC MOV X19, X0
	0x02821800 ADRP X0, 0x18FB000
	0x02821804 LDR X0, [X0 + 0xA90]
	0x02821808 BL 0x1C16D08
	0x0282180C MOV X1, X0
	0x02821810 MOV X0, X19
	0x02821814 MOV X2, X31
	0x02821818 BL 0x3379A44
	0x0282181C MOV X0, X19
	0x02821820 MOV X1, X20
	0x02821824 BL 0x1C16DEC
	0x02821828 LDR V0, [X1]
	0x0282182C STR V0, [X0]
	0x02821830 RET
	0x02821834 SUB X31, X31, 0x50
	0x02821838 STP X30, X25, [X31 + 0x10]
	0x0282183C STP X24, X23, [X31 + 0x20]
	0x02821840 STP X22, X21, [X31 + 0x30]
	0x02821844 STP X20, X19, [X31 + 0x40]
	0x02821848 ADRP X22, 0x1BB9000
	0x0282184C LDRB W8, [X22 + 0xA75]
	0x02821850 MOV X19, X2
	0x02821854 MOV W20, W1
	0x02821858 MOV X21, X0
	0x0282185C TBNZ X8, 0x0, 0x2821964
	0x02821860 ADRP X0, 0x18F9000
	0x02821864 LDR X0, [X0 + 0xD68]
	0x02821868 BL 0x1C16CF4
	0x0282186C ADRP X0, 0x18D3000
	0x02821870 LDR X0, [X0 + 0x9D8]
	0x02821874 BL 0x1C16CF4
	0x02821878 ADRP X0, 0x18FA000
	0x0282187C LDR X0, [X0 + 0xA78]
	0x02821880 BL 0x1C16CF4
	0x02821884 ADRP X0, 0x18D5000
	0x02821888 LDR X0, [X0 + 0x978]
	0x0282188C BL 0x1C16CF4
	0x02821890 ADRP X0, 0x18F9000
	0x02821894 LDR X0, [X0 + 0xD78]
	0x02821898 BL 0x1C16CF4
	0x0282189C ADRP X0, 0x18D6000
	0x028218A0 LDR X0, [X0 + 0x628]
	0x028218A4 BL 0x1C16CF4
	0x028218A8 ADRP X0, 0x18F9000
	0x028218AC LDR X0, [X0 + 0xD80]
	0x028218B0 BL 0x1C16CF4
	0x028218B4 ADRP X0, 0x18D2000
	0x028218B8 LDR X0, [X0 + 0x758]
	0x028218BC BL 0x1C16CF4
	0x028218C0 ADRP X0, 0x18F9000
	0x028218C4 LDR X0, [X0 + 0xD88]
	0x028218C8 BL 0x1C16CF4
	0x028218CC ADRP X0, 0x18D4000
	0x028218D0 LDR X0, [X0 + 0xA60]
	0x028218D4 BL 0x1C16CF4
	0x028218D8 ADRP X0, 0x18F9000
	0x028218DC LDR X0, [X0 + 0xD90]
	0x028218E0 BL 0x1C16CF4
	0x028218E4 ADRP X0, 0x18FB000
	0x028218E8 LDR X0, [X0 + 0x6B0]
	0x028218EC BL 0x1C16CF4
	0x028218F0 ADRP X0, 0x18FA000
	0x028218F4 LDR X0, [X0 + 0xA80]
	0x028218F8 BL 0x1C16CF4
	0x028218FC ADRP X0, 0x18D2000
	0x02821900 LDR X0, [X0 + 0xA90]
	0x02821904 BL 0x1C16CF4
	0x02821908 ADRP X0, 0x18D2000
	0x0282190C LDR X0, [X0 + 0x6C0]
	0x02821910 BL 0x1C16CF4
	0x02821914 ADRP X0, 0x18F9000
	0x02821918 LDR X0, [X0 + 0xD98]
	0x0282191C BL 0x1C16CF4
	0x02821920 ADRP X0, 0x18D7000
	0x02821924 LDR X0, [X0 + 0x658]
	0x02821928 BL 0x1C16CF4
	0x0282192C ADRP X0, 0x18F9000
	0x02821930 LDR X0, [X0 + 0xDA0]
	0x02821934 BL 0x1C16CF4
	0x02821938 ADRP X0, 0x18DA000
	0x0282193C LDR X0, [X0 + 0x720]
	0x02821940 BL 0x1C16CF4
	0x02821944 ADRP X0, 0x18F9000
	0x02821948 LDR X0, [X0 + 0xDA8]
	0x0282194C BL 0x1C16CF4
	0x02821950 ADRP X0, 0x18D3000
	0x02821954 LDR X0, [X0 + 0x758]
	0x02821958 BL 0x1C16CF4
	0x0282195C MOVZ W8, 0x1
	0x02821960 STRB W8, [X22 + 0xA75]
	0x02821964 MOV X23, X19
	0x02821968 LDR X0, [X23 + 0x20]!
	0x0282196C LDRB W8, [X0 + 0x135]
	0x02821970 TBNZ X8, 0x0, 0x2821978
	0x02821974 BL 0x1C5C684
	0x02821978 LDR X8, [X0 + 0xC0]
	0x0282197C LDR X0, [X8 + 0x8]
	0x02821980 LDRB W8, [X0 + 0x135]
	0x02821984 TBNZ X8, 0x0, 0x282198C
	0x02821988 BL 0x1C5C684
	0x0282198C LDR W8, [X0 + 0xE0]
	0x02821990 CBNZ W8, 0x2821998
	0x02821994 BL 0x1C16DFC
	0x02821998 LDR X0, [X23]
	0x0282199C LDRB W8, [X0 + 0x135]
	0x028219A0 TBNZ X8, 0x0, 0x28219A8
	0x028219A4 BL 0x1C5C684
	0x028219A8 LDR X8, [X0 + 0xC0]
	0x028219AC LDR X22, [X8 + 0x28]
	0x028219B0 LDR X0, [X22 + 0x20]
	0x028219B4 LDRB W8, [X0 + 0x135]
	0x028219B8 TBNZ X8, 0x0, 0x28219C0
	0x028219BC BL 0x1C5C684
	0x028219C0 LDR X8, [X0 + 0xC0]
	0x028219C4 LDR X0, [X8 + 0x8]
	0x028219C8 LDRB W8, [X0 + 0x135]
	0x028219CC TBNZ X8, 0x0, 0x28219D4
	0x028219D0 BL 0x1C5C684
	0x028219D4 LDR W8, [X0 + 0xE0]
	0x028219D8 CBNZ W8, 0x28219E0
	0x028219DC BL 0x1C16DFC
	0x028219E0 LDR X0, [X22 + 0x20]
	0x028219E4 LDRB W8, [X0 + 0x135]
	0x028219E8 TBNZ X8, 0x0, 0x28219F0
	0x028219EC BL 0x1C5C684
	0x028219F0 LDR X8, [X0 + 0xC0]
	0x028219F4 LDR X0, [X8 + 0x8]
	0x028219F8 LDRB W8, [X0 + 0x135]
	0x028219FC TBNZ X8, 0x0, 0x2821A04
	0x02821A00 BL 0x1C5C684
	0x02821A04 TBNZ X20, 0x1F, 0x2821FC0
	0x02821A08 LDR X8, [X0 + 0xB8]
	0x02821A0C LDR W8, [X8]
	0x02821A10 CMP W8, W20
	0x02821A14 B.LE 0x2821FC0
	0x02821A18 LDR X0, [X23]
	0x02821A1C ADRP X24, 0x18D2000
	0x02821A20 LDRB W8, [X0 + 0x135]
	0x02821A24 LDR X24, [X24 + 0x6C0]
	0x02821A28 TBNZ X8, 0x0, 0x2821A30
	0x02821A2C BL 0x1C5C684
	0x02821A30 LDR X8, [X24]
	0x02821A34 LDR X9, [X0 + 0xC0]
	0x02821A38 ADRP X25, 0x18F9000
	0x02821A3C LDR W10, [X8 + 0xE0]
	0x02821A40 LDR X22, [X9 + 0x18]
	0x02821A44 LDR X25, [X25 + 0xD68]
	0x02821A48 CBNZ W10, 0x2821A54
	0x02821A4C MOV X0, X8
	0x02821A50 BL 0x1C16DFC
	0x02821A54 MOV X0, X22
	0x02821A58 MOV X1, X31
	0x02821A5C BL 0x338C698
	0x02821A60 LDR X8, [X25]
	0x02821A64 MOV X22, X0
	0x02821A68 MOV X1, X31
	0x02821A6C MOV X0, X8
	0x02821A70 BL 0x338C698
	0x02821A74 MOV X1, X0
	0x02821A78 MOV X0, X22
	0x02821A7C MOV X2, X31
	0x02821A80 BL 0x3395194
	0x02821A84 TBZ X0, 0x0, 0x2821B18
	0x02821A88 ADRP X9, 0x18D3000
	0x02821A8C LDRB W8, [X21, W20, UXTW]
	0x02821A90 LDR X9, [X9 + 0x9D8]
	0x02821A94 ADD X1, X31, 0x8
	0x02821A98 STRB W8, [X31 + 0x8]
	0x02821A9C LDR X0, [X9]
	0x02821AA0 BL 0x1C16E04
	0x02821AA4 LDR X8, [X23]
	0x02821AA8 MOV X19, X0
	0x02821AAC LDRB W9, [X8 + 0x135]
	0x02821AB0 TBNZ X9, 0x0, 0x2821AC0
	0x02821AB4 MOV X0, X8
	0x02821AB8 BL 0x1C5C684
	0x02821ABC MOV X8, X0
	0x02821AC0 LDR X8, [X8 + 0xC0]
	0x02821AC4 LDR X1, [X8 + 0x20]
	0x02821AC8 LDRB W8, [X1 + 0x135]
	0x02821ACC TBNZ X8, 0x0, 0x2821ADC
	0x02821AD0 MOV X0, X1

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X22, 0x1BBC000
	011 Move W8, [X22+2675]
	012 Move X20, X2
	013 Move W21, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {84}
	019 Move X0, 0x18FC000
	020 Move X0, [X0+3432]
	021 Call 0x1C17CF4
	022 Move X0, 0x18D6000
	023 Move X0, [X0+2520]
	024 Call 0x1C17CF4
	025 Move X0, 0x18FD000
	026 Move X0, [X0+2680]
	027 Call 0x1C17CF4
	028 Move X0, 0x18D8000
	029 Move X0, [X0+2424]
	030 Call 0x1C17CF4
	031 Move X0, 0x18FC000
	032 Move X0, [X0+3448]
	033 Call 0x1C17CF4
	034 Move X0, 0x18D9000
	035 Move X0, [X0+1576]
	036 Call 0x1C17CF4
	037 Move X0, 0x18FC000
	038 Move X0, [X0+3456]
	039 Call 0x1C17CF4
	040 Move X0, 0x18D5000
	041 Move X0, [X0+1880]
	042 Call 0x1C17CF4
	043 Move X0, 0x18FC000
	044 Move X0, [X0+3464]
	045 Call 0x1C17CF4
	046 Move X0, 0x18D7000
	047 Move X0, [X0+2656]
	048 Call 0x1C17CF4
	049 Move X0, 0x18FC000
	050 Move X0, [X0+3472]
	051 Call 0x1C17CF4
	052 Move X0, 0x18FE000
	053 Move X0, [X0+1712]
	054 Call 0x1C17CF4
	055 Move X0, 0x18FD000
	056 Move X0, [X0+2688]
	057 Call 0x1C17CF4
	058 Move X0, 0x18D5000
	059 Move X0, [X0+2704]
	060 Call 0x1C17CF4
	061 Move X0, 0x18D5000
	062 Move X0, [X0+1728]
	063 Call 0x1C17CF4
	064 Move X0, 0x18FC000
	065 Move X0, [X0+3480]
	066 Call 0x1C17CF4
	067 Move X0, 0x18DA000
	068 Move X0, [X0+1624]
	069 Call 0x1C17CF4
	070 Move X0, 0x18FC000
	071 Move X0, [X0+3488]
	072 Call 0x1C17CF4
	073 Move X0, 0x18DD000
	074 Move X0, [X0+1824]
	075 Call 0x1C17CF4
	076 Move X0, 0x18FC000
	077 Move X0, [X0+3496]
	078 Call 0x1C17CF4
	079 Move X0, 0x18D6000
	080 Move X0, [X0+1880]
	081 Call 0x1C17CF4
	082 Move W8, 1
	083 Move [X22+2675], W8
	084 Move X24, 0x18D5000
	085 Move X24, [X24+1728]
	086 Move X0, X31
	087 Move [X19], X31
	088 Move [X19+8], X31
	089 Call Vector.get_IsHardwareAccelerated
	090 Add X20, X20, 32
	091 Move X8, [X20]
	092 Move W22, W0
	093 Move W9, [X8+309]
	094 Move TEMP, X9
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {101}
	098 Move X0, X8
	099 Call 0x1C5D684
	100 Move X8, X0
	101 Move X0, [X24]
	102 Move X8, [X8+192]
	103 Move X25, 0x18FC000
	104 Move W9, [X0+224]
	105 Move X23, [X8+24]
	106 Move X25, [X25+3432]
	107 Compare W9, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move X0, X23
	111 Move X1, X31
	112 Call Type.GetTypeFromHandle, X0
	113 Move X8, [X25]
	114 Move X23, X0
	115 Move X1, X31
	116 Move X0, X8
	117 Call Type.GetTypeFromHandle, X0
	118 Move X1, X0
	119 Move X0, X23
	120 Move X2, X31
	121 Call Type.op_Equality, X0, X1
	122 Move TEMP, X22
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {221}
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfNotEqual {241}
	130 Move X23, 0x18D6000
	131 Move X23, [X23+2520]
	132 Move X22, X31
	133 Move X0, [X20]
	134 Move W8, [X0+309]
	135 Move TEMP, X8
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfEqual {140}
	139 Call 0x1C5D684
	140 Move X8, [X0+192]
	141 Move X0, [X8+8]
	142 Move W8, [X0+309]
	143 Move TEMP, X8
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfEqual {148}
	147 Call 0x1C5D684
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {152}
	151 Call 0x1C17DFC
	152 Move X0, [X20]
	153 Move W8, [X0+309]
	154 Move TEMP, X8
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfEqual {159}
	158 Call 0x1C5D684
	159 Move X8, [X0+192]
	160 Move X24, [X8+40]
	161 Move X0, [X24+32]
	162 Move W8, [X0+309]
	163 Move TEMP, X8
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfEqual {168}
	167 Call 0x1C5D684
	168 Move X8, [X0+192]
	169 Move X0, [X8+8]
	170 Move W8, [X0+309]
	171 Move TEMP, X8
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfEqual {176}
	175 Call 0x1C5D684
	176 Move W8, [X0+224]
	177 Compare W8, 0
	178 JumpIfNotEqual {180}
	179 Call 0x1C17DFC
	180 Move X0, [X24+32]
	181 Move W8, [X0+309]
	182 Move TEMP, X8
	183 And TEMP, TEMP, 1
	184 Compare TEMP, 1
	185 JumpIfEqual {187}
	186 Call 0x1C5D684
	187 Move X8, [X0+192]
	188 Move X0, [X8+8]
	189 Move W8, [X0+309]
	190 Move TEMP, X8
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfEqual {195}
	194 Call 0x1C5D684
	195 Move X8, [X0+184]
	196 NotImplemented "Instruction LDRSW not yet implemented."
	197 NotImplemented "Instruction CMP not yet implemented."
	198 NotImplemented "Instruction STRH not yet implemented."
	199 Move X0, [X20]
	200 Move W8, [X0+309]
	201 Move TEMP, X8
	202 And TEMP, TEMP, 1
	203 Compare TEMP, 1
	204 JumpIfEqual {206}
	205 Call 0x1C5D684
	206 Move X8, [X0+192]
	207 Add X1, X31, 60
	208 Move X0, [X8+32]
	209 Call 0x1C17E04
	210 Compare X0, 0
	211 JumpIfEqual {2516}
	212 Move X8, [X0]
	213 Move X1, [X23]
	214 Move X8, [X8+64]
	215 Move X9, [X1+64]
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Call 0x1C17E08
	218 Move W8, [X0]
	219 Move [X19], W8
	220 Add X22, X22, 1
	221 Move TEMP, X0
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfNotEqual {365}
	225 NotImplemented "Instruction STRH not yet implemented."
	226 Move X0, [X20]
	227 Move W8, [X0+309]
	228 Move TEMP, X8
	229 And TEMP, TEMP, 1
	230 Compare TEMP, 1
	231 JumpIfEqual {233}
	232 Call 0x1C5D684
	233 Move X8, [X0+192]
	234 Add X1, X31, 60
	235 Move X0, [X8+32]
	236 Call 0x1C17E04
	237 Compare X0, 0
	238 JumpIfEqual {2516}
	239 Move X22, 0x18D6000
	240 Move X22, [X22+2520]
	241 Move X0, [X20]
	242 Move W8, [X0+309]
	243 Move TEMP, X8
	244 And TEMP, TEMP, 1
	245 Compare TEMP, 1
	246 JumpIfEqual {248}
	247 Call 0x1C5D684
	248 Move X8, [X24]
	249 Move X9, [X0+192]
	250 Move W10, [X8+224]
	251 Move X22, [X9+24]
	252 Compare W10, 0
	253 JumpIfNotEqual {256}
	254 Move X0, X8
	255 Call 0x1C17DFC
	256 Move X0, X22
	257 Move X1, X31
	258 Call Type.GetTypeFromHandle, X0
	259 Move X8, 0x18FC000
	260 Move X8, [X8+3472]
	261 Move X22, X0
	262 Move X1, X31
	263 Move X8, [X8]
	264 Move X0, X8
	265 Call Type.GetTypeFromHandle, X0
	266 Move X1, X0
	267 Move X0, X22
	268 Move X2, X31
	269 Call Type.op_Equality, X0, X1
	270 Move TEMP, X0
	271 And TEMP, TEMP, 1
	272 Compare TEMP, 1
	273 JumpIfNotEqual {752}
	274 Move X23, 0x18FE000
	275 Move X23, [X23+1712]
	276 Move X22, X31
	277 Move X0, [X20]
	278 Move W8, [X0+309]
	279 Move TEMP, X8
	280 And TEMP, TEMP, 1
	281 Compare TEMP, 1
	282 JumpIfEqual {284}
	283 Call 0x1C5D684
	284 Move X8, [X0+192]
	285 Move X0, [X8+8]
	286 Move W8, [X0+309]
	287 Move TEMP, X8
	288 And TEMP, TEMP, 1
	289 Compare TEMP, 1
	290 JumpIfEqual {292}
	291 Call 0x1C5D684
	292 Move W8, [X0+224]
	293 Compare W8, 0
	294 JumpIfNotEqual {296}
	295 Call 0x1C17DFC
	296 Move X0, [X20]
	297 Move W8, [X0+309]
	298 Move TEMP, X8
	299 And TEMP, TEMP, 1
	300 Compare TEMP, 1
	301 JumpIfEqual {303}
	302 Call 0x1C5D684
	303 Move X8, [X0+192]
	304 Move X24, [X8+40]
	305 Move X0, [X24+32]
	306 Move W8, [X0+309]
	307 Move TEMP, X8
	308 And TEMP, TEMP, 1
	309 Compare TEMP, 1
	310 JumpIfEqual {312}
	311 Call 0x1C5D684
	312 Move X8, [X0+192]
	313 Move X0, [X8+8]
	314 Move W8, [X0+309]
	315 Move TEMP, X8
	316 And TEMP, TEMP, 1
	317 Compare TEMP, 1
	318 JumpIfEqual {320}
	319 Call 0x1C5D684
	320 Move W8, [X0+224]
	321 Compare W8, 0
	322 JumpIfNotEqual {324}
	323 Call 0x1C17DFC
	324 Move X0, [X24+32]
	325 Move W8, [X0+309]
	326 Move TEMP, X8
	327 And TEMP, TEMP, 1
	328 Compare TEMP, 1
	329 JumpIfEqual {331}
	330 Call 0x1C5D684
	331 Move X8, [X0+192]
	332 Move X0, [X8+8]
	333 Move W8, [X0+309]
	334 Move TEMP, X8
	335 And TEMP, TEMP, 1
	336 Compare TEMP, 1
	337 JumpIfEqual {339}
	338 Call 0x1C5D684
	339 Move X8, [X0+184]
	340 NotImplemented "Instruction LDRSW not yet implemented."
	341 NotImplemented "Instruction CMP not yet implemented."
	342 NotImplemented "Instruction STRH not yet implemented."
	343 Move X0, [X20]
	344 Move W8, [X0+309]
	345 Move TEMP, X8
	346 And TEMP, TEMP, 1
	347 Compare TEMP, 1
	348 JumpIfEqual {350}
	349 Call 0x1C5D684
	350 Move X8, [X0+192]
	351 Add X1, X31, 60
	352 Move X0, [X8+32]
	353 Call 0x1C17E04
	354 Compare X0, 0
	355 JumpIfEqual {2516}
	356 Move X8, [X0]
	357 Move X1, [X23]
	358 Move X8, [X8+64]
	359 Move X9, [X1+64]
	360 NotImplemented "Instruction CMP not yet implemented."
	361 Call 0x1C17E08
	362 Move W8, [X0]
	363 Move [X19], W8
	364 Add X22, X22, 1
	365 Move X0, [X20]
	366 Move W8, [X0+309]
	367 Move TEMP, X8
	368 And TEMP, TEMP, 1
	369 Compare TEMP, 1
	370 JumpIfEqual {372}
	371 Call 0x1C5D684
	372 Move X8, [X24]
	373 Move X9, [X0+192]
	374 Move W10, [X8+224]
	375 Move X22, [X9+24]
	376 Compare W10, 0
	377 JumpIfNotEqual {380}
	378 Move X0, X8
	379 Call 0x1C17DFC
	380 Move X0, X22
	381 Move X1, X31
	382 Call Type.GetTypeFromHandle, X0
	383 Move X8, 0x18FB000
	384 Move X8, [X8+3472]
	385 Move X22, X0
	386 Move X1, X31
	387 Move X8, [X8]
	388 Move X0, X8
	389 Call Type.GetTypeFromHandle, X0
	390 Move X1, X0
	391 Move X0, X22
	392 Move X2, X31
	393 Call Type.op_Equality, X0, X1
	394 Move TEMP, X0
	395 And TEMP, TEMP, 1
	396 Compare TEMP, 1
	397 JumpIfNotEqual {876}
	398 NotImplemented "Instruction STRH not yet implemented."
	399 Move X0, [X20]
	400 Move W8, [X0+309]
	401 Move TEMP, X8
	402 And TEMP, TEMP, 1
	403 Compare TEMP, 1
	404 JumpIfEqual {406}
	405 Call 0x1C5D684
	406 Move X8, [X0+192]
	407 Add X1, X31, 60
	408 Move X0, [X8+32]
	409 Call 0x1C17E04
	410 Compare X0, 0
	411 JumpIfEqual {2516}
	412 Move X22, 0x18FD000
	413 Move X22, [X22+1712]
	414 Move X8, [X0]
	415 Move X1, [X22]
	416 Move X8, [X8+64]
	417 Move X9, [X1+64]
	418 NotImplemented "Instruction CMP not yet implemented."
	419 Call 0x1C17E08
	420 Move W8, [X0]
	421 Move [X19], W8
	422 NotImplemented "Instruction STRH not yet implemented."
	423 Move X0, [X20]
	424 Move W8, [X0+309]
	425 Move TEMP, X8
	426 And TEMP, TEMP, 1
	427 Compare TEMP, 1
	428 JumpIfEqual {430}
	429 Call 0x1C5D684
	430 Move X8, [X0+192]
	431 Add X1, X31, 56
	432 Move X0, [X8+32]
	433 Call 0x1C17E04
	434 Compare X0, 0
	435 JumpIfEqual {2516}
	436 Move X8, [X0]
	437 Move X1, [X22]
	438 Move X8, [X8+64]
	439 Move X9, [X1+64]
	440 NotImplemented "Instruction CMP not yet implemented."
	441 Call 0x1C17E08
	442 Move W8, [X0]
	443 Move [X19+1], W8
	444 NotImplemented "Instruction STRH not yet implemented."
	445 Move X0, [X20]
	446 Move W8, [X0+309]
	447 Move TEMP, X8
	448 And TEMP, TEMP, 1
	449 Compare TEMP, 1
	450 JumpIfEqual {452}
	451 Call 0x1C5D684
	452 Move X8, [X0+192]
	453 Add X1, X31, 52
	454 Move X0, [X8+32]
	455 Call 0x1C17E04
	456 Compare X0, 0
	457 JumpIfEqual {2516}
	458 Move X8, [X0]
	459 Move X1, [X22]
	460 Move X8, [X8+64]
	461 Move X9, [X1+64]
	462 NotImplemented "Instruction CMP not yet implemented."
	463 Call 0x1C17E08
	464 Move W8, [X0]
	465 Move [X19+2], W8
	466 NotImplemented "Instruction STRH not yet implemented."
	467 Move X0, [X20]
	468 Move W8, [X0+309]
	469 Move TEMP, X8
	470 And TEMP, TEMP, 1
	471 Compare TEMP, 1
	472 JumpIfEqual {474}
	473 Call 0x1C5D684
	474 Move X8, [X0+192]
	475 Add X1, X31, 48
	476 Move X0, [X8+32]
	477 Call 0x1C17E04
	478 Compare X0, 0
	479 JumpIfEqual {2516}
	480 Move X8, [X0]
	481 Move X1, [X22]
	482 Move X8, [X8+64]
	483 Move X9, [X1+64]
	484 NotImplemented "Instruction CMP not yet implemented."
	485 Call 0x1C17E08
	486 Move W8, [X0]
	487 Move [X19+3], W8
	488 NotImplemented "Instruction STRH not yet implemented."
	489 Move X0, [X20]
	490 Move W8, [X0+309]
	491 Move TEMP, X8
	492 And TEMP, TEMP, 1
	493 Compare TEMP, 1
	494 JumpIfEqual {496}
	495 Call 0x1C5D684
	496 Move X8, [X0+192]
	497 Add X1, X31, 44
	498 Move X0, [X8+32]
	499 Call 0x1C17E04
	500 Compare X0, 0
	501 JumpIfEqual {2516}
	502 Move X8, [X0]
	503 Move X1, [X22]
	504 Move X8, [X8+64]
	505 Move X9, [X1+64]
	506 NotImplemented "Instruction CMP not yet implemented."
	507 Call 0x1C17E08
	508 Move W8, [X0]
	509 Move [X19+4], W8
	510 NotImplemented "Instruction STRH not yet implemented."
	511 Move X0, [X20]
	512 Move W8, [X0+309]
	513 Move TEMP, X8
	514 And TEMP, TEMP, 1
	515 Compare TEMP, 1
	516 JumpIfEqual {518}
	517 Call 0x1C5D684
	518 Move X8, [X0+192]
	519 Add X1, X31, 40
	520 Move X0, [X8+32]
	521 Call 0x1C17E04
	522 Compare X0, 0
	523 JumpIfEqual {2516}
	524 Move X8, [X0]
	525 Move X1, [X22]
	526 Move X8, [X8+64]
	527 Move X9, [X1+64]
	528 NotImplemented "Instruction CMP not yet implemented."
	529 Call 0x1C17E08
	530 Move W8, [X0]
	531 Move [X19+5], W8
	532 NotImplemented "Instruction STRH not yet implemented."
	533 Move X0, [X20]
	534 Move W8, [X0+309]
	535 Move TEMP, X8
	536 And TEMP, TEMP, 1
	537 Compare TEMP, 1
	538 JumpIfEqual {540}
	539 Call 0x1C5D684
	540 Move X8, [X0+192]
	541 Add X1, X31, 36
	542 Move X0, [X8+32]
	543 Call 0x1C17E04
	544 Compare X0, 0
	545 JumpIfEqual {2516}
	546 Move X8, [X0]
	547 Move X1, [X22]
	548 Move X8, [X8+64]
	549 Move X9, [X1+64]
	550 NotImplemented "Instruction CMP not yet implemented."
	551 Call 0x1C17E08
	552 Move W8, [X0]
	553 Move [X19+6], W8
	554 NotImplemented "Instruction STRH not yet implemented."
	555 Move X0, [X20]
	556 Move W8, [X0+309]
	557 Move TEMP, X8
	558 And TEMP, TEMP, 1
	559 Compare TEMP, 1
	560 JumpIfEqual {562}
	561 Call 0x1C5D684
	562 Move X8, [X0+192]
	563 Add X1, X31, 32
	564 Move X0, [X8+32]
	565 Call 0x1C17E04
	566 Compare X0, 0
	567 JumpIfEqual {2516}
	568 Move X8, [X0]
	569 Move X1, [X22]
	570 Move X8, [X8+64]
	571 Move X9, [X1+64]
	572 NotImplemented "Instruction CMP not yet implemented."
	573 Call 0x1C17E08
	574 Move W8, [X0]
	575 Move [X19+7], W8
	576 NotImplemented "Instruction STRH not yet implemented."
	577 Move X0, [X20]
	578 Move W8, [X0+309]
	579 Move TEMP, X8
	580 And TEMP, TEMP, 1
	581 Compare TEMP, 1
	582 JumpIfEqual {584}
	583 Call 0x1C5D684
	584 Move X8, [X0+192]
	585 Add X1, X31, 28
	586 Move X0, [X8+32]
	587 Call 0x1C17E04
	588 Compare X0, 0
	589 JumpIfEqual {2516}
	590 Move X8, [X0]
	591 Move X1, [X22]
	592 Move X8, [X8+64]
	593 Move X9, [X1+64]
	594 NotImplemented "Instruction CMP not yet implemented."
	595 Call 0x1C17E08
	596 Move W8, [X0]
	597 Move [X19+8], W8
	598 NotImplemented "Instruction STRH not yet implemented."
	599 Move X0, [X20]
	600 Move W8, [X0+309]
	601 Move TEMP, X8
	602 And TEMP, TEMP, 1
	603 Compare TEMP, 1
	604 JumpIfEqual {606}
	605 Call 0x1C5D684
	606 Move X8, [X0+192]
	607 Add X1, X31, 24
	608 Move X0, [X8+32]
	609 Call 0x1C17E04
	610 Compare X0, 0
	611 JumpIfEqual {2516}
	612 Move X8, [X0]
	613 Move X1, [X22]
	614 Move X8, [X8+64]
	615 Move X9, [X1+64]
	616 NotImplemented "Instruction CMP not yet implemented."
	617 Call 0x1C17E08
	618 Move W8, [X0]
	619 Move [X19+9], W8
	620 NotImplemented "Instruction STRH not yet implemented."
	621 Move X0, [X20]
	622 Move W8, [X0+309]
	623 Move TEMP, X8
	624 And TEMP, TEMP, 1
	625 Compare TEMP, 1
	626 JumpIfEqual {628}
	627 Call 0x1C5D684
	628 Move X8, [X0+192]
	629 Add X1, X31, 20
	630 Move X0, [X8+32]
	631 Call 0x1C17E04
	632 Compare X0, 0
	633 JumpIfEqual {2516}
	634 Move X8, [X0]
	635 Move X1, [X22]
	636 Move X8, [X8+64]
	637 Move X9, [X1+64]
	638 NotImplemented "Instruction CMP not yet implemented."
	639 Call 0x1C17E08
	640 Move W8, [X0]
	641 Move [X19+10], W8
	642 NotImplemented "Instruction STRH not yet implemented."
	643 Move X0, [X20]
	644 Move W8, [X0+309]
	645 Move TEMP, X8
	646 And TEMP, TEMP, 1
	647 Compare TEMP, 1
	648 JumpIfEqual {650}
	649 Call 0x1C5D684
	650 Move X8, [X0+192]
	651 Add X1, X31, 16
	652 Move X0, [X8+32]
	653 Call 0x1C17E04
	654 Compare X0, 0
	655 JumpIfEqual {2516}
	656 Move X8, [X0]
	657 Move X1, [X22]
	658 Move X8, [X8+64]
	659 Move X9, [X1+64]
	660 NotImplemented "Instruction CMP not yet implemented."
	661 Call 0x1C17E08
	662 Move W8, [X0]
	663 Move [X19+11], W8
	664 NotImplemented "Instruction STRH not yet implemented."
	665 Move X0, [X20]
	666 Move W8, [X0+309]
	667 Move TEMP, X8
	668 And TEMP, TEMP, 1
	669 Compare TEMP, 1
	670 JumpIfEqual {672}
	671 Call 0x1C5D684
	672 Move X8, [X0+192]
	673 Add X1, X31, 12
	674 Move X0, [X8+32]
	675 Call 0x1C17E04
	676 Compare X0, 0
	677 JumpIfEqual {2516}
	678 Move X8, [X0]
	679 Move X1, [X22]
	680 Move X8, [X8+64]
	681 Move X9, [X1+64]
	682 NotImplemented "Instruction CMP not yet implemented."
	683 Call 0x1C17E08
	684 Move W8, [X0]
	685 Move [X19+12], W8
	686 NotImplemented "Instruction STRH not yet implemented."
	687 Move X0, [X20]
	688 Move W8, [X0+309]
	689 Move TEMP, X8
	690 And TEMP, TEMP, 1
	691 Compare TEMP, 1
	692 JumpIfEqual {694}
	693 Call 0x1C5D684
	694 Move X8, [X0+192]
	695 Add X1, X31, 8
	696 Move X0, [X8+32]
	697 Call 0x1C17E04
	698 Compare X0, 0
	699 JumpIfEqual {2516}
	700 Move X8, [X0]
	701 Move X1, [X22]
	702 Move X8, [X8+64]
	703 Move X9, [X1+64]
	704 NotImplemented "Instruction CMP not yet implemented."
	705 Call 0x1C17E08
	706 Move W8, [X0]
	707 Move [X19+13], W8
	708 NotImplemented "Instruction STRH not yet implemented."
	709 Move X0, [X20]
	710 Move W8, [X0+309]
	711 Move TEMP, X8
	712 And TEMP, TEMP, 1
	713 Compare TEMP, 1
	714 JumpIfEqual {716}
	715 Call 0x1C5D684
	716 Move X8, [X0+192]
	717 Add X1, X31, 4
	718 Move X0, [X8+32]
	719 Call 0x1C17E04
	720 Compare X0, 0
	721 JumpIfEqual {2516}
	722 Move X8, [X0]
	723 Move X1, [X22]
	724 Move X8, [X8+64]
	725 Move X9, [X1+64]
	726 NotImplemented "Instruction CMP not yet implemented."
	727 Call 0x1C17E08
	728 Move W8, [X0]
	729 Move [X19+14], W8
	730 NotImplemented "Instruction STRH not yet implemented."
	731 Move X0, [X20]
	732 Move W8, [X0+309]
	733 Move TEMP, X8
	734 And TEMP, TEMP, 1
	735 Compare TEMP, 1
	736 JumpIfEqual {738}
	737 Call 0x1C5D684
	738 Move X8, [X0+192]
	739 Add X1, X31, 0
	740 Move X0, [X8+32]
	741 Call 0x1C17E04
	742 Compare X0, 0
	743 JumpIfEqual {2516}
	744 Move X8, [X0]
	745 Move X1, [X22]
	746 Move X8, [X8+64]
	747 Move X9, [X1+64]
	748 NotImplemented "Instruction CMP not yet implemented."
	749 Call 0x1C17E08
	750 Move W8, [X0]
	751 Move [X19+15], W8
	752 Move X0, [X20]
	753 Move W8, [X0+309]
	754 Move TEMP, X8
	755 And TEMP, TEMP, 1
	756 Compare TEMP, 1
	757 JumpIfEqual {759}
	758 Call 0x1C5D684
	759 Move X8, [X24]
	760 Move X9, [X0+192]
	761 Move W10, [X8+224]
	762 Move X22, [X9+24]
	763 Compare W10, 0
	764 JumpIfNotEqual {767}
	765 Move X0, X8
	766 Call 0x1C17DFC
	767 Move X0, X22
	768 Move X1, X31
	769 Call Type.GetTypeFromHandle, X0
	770 Move X8, 0x18FB000
	771 Move X8, [X8+3480]
	772 Move X22, X0
	773 Move X1, X31
	774 Move X8, [X8]
	775 Move X0, X8
	776 Call Type.GetTypeFromHandle, X0
	777 Move X1, X0
	778 Move X0, X22
	779 Move X2, X31
	780 Call Type.op_Equality, X0, X1
	781 Move TEMP, X0
	782 And TEMP, TEMP, 1
	783 Compare TEMP, 1
	784 JumpIfNotEqual {925}
	785 Move X23, 0x18D9000
	786 Move X23, [X23+1624]
	787 Move X22, X31
	788 Move X0, [X20]
	789 Move W8, [X0+309]
	790 Move TEMP, X8
	791 And TEMP, TEMP, 1
	792 Compare TEMP, 1
	793 JumpIfEqual {795}
	794 Call 0x1C5D684
	795 Move X8, [X0+192]
	796 Move X0, [X8+8]
	797 Move W8, [X0+309]
	798 Move TEMP, X8
	799 And TEMP, TEMP, 1
	800 Compare TEMP, 1
	801 JumpIfEqual {803}
	802 Call 0x1C5D684
	803 Move W8, [X0+224]
	804 Compare W8, 0
	805 JumpIfNotEqual {807}
	806 Call 0x1C17DFC
	807 Move X0, [X20]
	808 Move W8, [X0+309]
	809 Move TEMP, X8
	810 And TEMP, TEMP, 1
	811 Compare TEMP, 1
	812 JumpIfEqual {814}
	813 Call 0x1C5D684
	814 Move X8, [X0+192]
	815 Move X24, [X8+40]
	816 Move X0, [X24+32]
	817 Move W8, [X0+309]
	818 Move TEMP, X8
	819 And TEMP, TEMP, 1
	820 Compare TEMP, 1
	821 JumpIfEqual {823}
	822 Call 0x1C5D684
	823 Move X8, [X0+192]
	824 Move X0, [X8+8]
	825 Move W8, [X0+309]
	826 Move TEMP, X8
	827 And TEMP, TEMP, 1
	828 Compare TEMP, 1
	829 JumpIfEqual {831}
	830 Call 0x1C5D684
	831 Move W8, [X0+224]
	832 Compare W8, 0
	833 JumpIfNotEqual {835}
	834 Call 0x1C17DFC
	835 Move X0, [X24+32]
	836 Move W8, [X0+309]
	837 Move TEMP, X8
	838 And TEMP, TEMP, 1
	839 Compare TEMP, 1
	840 JumpIfEqual {842}
	841 Call 0x1C5D684
	842 Move X8, [X0+192]
	843 Move X0, [X8+8]
	844 Move W8, [X0+309]
	845 Move TEMP, X8
	846 And TEMP, TEMP, 1
	847 Compare TEMP, 1
	848 JumpIfEqual {850}
	849 Call 0x1C5D684
	850 Move X8, [X0+184]
	851 NotImplemented "Instruction LDRSW not yet implemented."
	852 NotImplemented "Instruction CMP not yet implemented."
	853 NotImplemented "Instruction STRH not yet implemented."
	854 Move X0, [X20]
	855 Move W8, [X0+309]
	856 Move TEMP, X8
	857 And TEMP, TEMP, 1
	858 Compare TEMP, 1
	859 JumpIfEqual {861}
	860 Call 0x1C5D684
	861 Move X8, [X0+192]
	862 Add X1, X31, 60
	863 Move X0, [X8+32]
	864 Call 0x1C17E04
	865 Compare X0, 0
	866 JumpIfEqual {2516}
	867 Move X8, [X0]
	868 Move X1, [X23]
	869 Move X8, [X8+64]
	870 Move X9, [X1+64]
	871 NotImplemented "Instruction CMP not yet implemented."
	872 Call 0x1C17E08
	873 NotImplemented "Instruction LDRH not yet implemented."
	874 Add X22, X22, 1
	875 NotImplemented "Instruction STRH not yet implemented."
	876 Move X0, [X20]
	877 Move W8, [X0+309]
	878 Move TEMP, X8
	879 And TEMP, TEMP, 1
	880 Compare TEMP, 1
	881 JumpIfEqual {883}
	882 Call 0x1C5D684
	883 Move X8, [X24]
	884 Move X9, [X0+192]
	885 Move W10, [X8+224]
	886 Move X22, [X9+24]
	887 Compare W10, 0
	888 JumpIfNotEqual {891}
	889 Move X0, X8
	890 Call 0x1C17DFC
	891 Move X0, X22
	892 Move X1, X31
	893 Call Type.GetTypeFromHandle, X0
	894 Move X8, 0x18FB000
	895 Move X8, [X8+3480]
	896 Move X22, X0
	897 Move X1, X31
	898 Move X8, [X8]
	899 Move X0, X8
	900 Call Type.GetTypeFromHandle, X0
	901 Move X1, X0
	902 Move X0, X22
	903 Move X2, X31
	904 Call Type.op_Equality, X0, X1
	905 Move TEMP, X0
	906 And TEMP, TEMP, 1
	907 Compare TEMP, 1
	908 JumpIfNotEqual {1049}
	909 NotImplemented "Instruction STRH not yet implemented."
	910 Move X0, [X20]
	911 Move W8, [X0+309]
	912 Move TEMP, X8
	913 And TEMP, TEMP, 1
	914 Compare TEMP, 1
	915 JumpIfEqual {917}
	916 Call 0x1C5D684
	917 Move X8, [X0+192]
	918 Add X1, X31, 60
	919 Move X0, [X8+32]
	920 Call 0x1C17E04
	921 Compare X0, 0
	922 JumpIfEqual {2516}
	923 Move X22, 0x18D9000
	924 Move X22, [X22+1624]
	925 Move X0, [X20]
	926 Move W8, [X0+309]
	927 Move TEMP, X8
	928 And TEMP, TEMP, 1
	929 Compare TEMP, 1
	930 JumpIfEqual {932}
	931 Call 0x1C5D684
	932 Move X8, [X24]
	933 Move X9, [X0+192]
	934 Move W10, [X8+224]
	935 Move X22, [X9+24]
	936 Compare W10, 0
	937 JumpIfNotEqual {940}
	938 Move X0, X8
	939 Call 0x1C17DFC
	940 Move X0, X22
	941 Move X1, X31
	942 Call Type.GetTypeFromHandle, X0
	943 Move X8, 0x18FB000
	944 Move X8, [X8+3448]
	945 Move X22, X0
	946 Move X1, X31
	947 Move X8, [X8]
	948 Move X0, X8
	949 Call Type.GetTypeFromHandle, X0
	950 Move X1, X0
	951 Move X0, X22
	952 Move X2, X31
	953 Call Type.op_Equality, X0, X1
	954 Move TEMP, X0
	955 And TEMP, TEMP, 1
	956 Compare TEMP, 1
	957 JumpIfNotEqual {1260}
	958 Move X23, 0x18D8000
	959 Move X23, [X23+1576]
	960 Move X22, X31
	961 Move X0, [X20]
	962 Move W8, [X0+309]
	963 Move TEMP, X8
	964 And TEMP, TEMP, 1
	965 Compare TEMP, 1
	966 JumpIfEqual {968}
	967 Call 0x1C5D684
	968 Move X8, [X0+192]
	969 Move X0, [X8+8]
	970 Move W8, [X0+309]
	971 Move TEMP, X8
	972 And TEMP, TEMP, 1
	973 Compare TEMP, 1
	974 JumpIfEqual {976}
	975 Call 0x1C5D684
	976 Move W8, [X0+224]
	977 Compare W8, 0
	978 JumpIfNotEqual {980}
	979 Call 0x1C17DFC
	980 Move X0, [X20]
	981 Move W8, [X0+309]
	982 Move TEMP, X8
	983 And TEMP, TEMP, 1
	984 Compare TEMP, 1
	985 JumpIfEqual {987}
	986 Call 0x1C5D684
	987 Move X8, [X0+192]
	988 Move X24, [X8+40]
	989 Move X0, [X24+32]
	990 Move W8, [X0+309]
	991 Move TEMP, X8
	992 And TEMP, TEMP, 1
	993 Compare TEMP, 1
	994 JumpIfEqual {996}
	995 Call 0x1C5D684
	996 Move X8, [X0+192]
	997 Move X0, [X8+8]
	998 Move W8, [X0+309]
	999 Move TEMP, X8
	1000 And TEMP, TEMP, 1
	1001 Compare TEMP, 1
	1002 JumpIfEqual {1004}
	1003 Call 0x1C5D684
	1004 Move W8, [X0+224]
	1005 Compare W8, 0
	1006 JumpIfNotEqual {1008}
	1007 Call 0x1C17DFC
	1008 Move X0, [X24+32]
	1009 Move W8, [X0+309]
	1010 Move TEMP, X8
	1011 And TEMP, TEMP, 1
	1012 Compare TEMP, 1
	1013 JumpIfEqual {1015}
	1014 Call 0x1C5D684
	1015 Move X8, [X0+192]
	1016 Move X0, [X8+8]
	1017 Move W8, [X0+309]
	1018 Move TEMP, X8
	1019 And TEMP, TEMP, 1
	1020 Compare TEMP, 1
	1021 JumpIfEqual {1023}
	1022 Call 0x1C5D684
	1023 Move X8, [X0+184]
	1024 NotImplemented "Instruction LDRSW not yet implemented."
	1025 NotImplemented "Instruction CMP not yet implemented."
	1026 NotImplemented "Instruction STRH not yet implemented."
	1027 Move X0, [X20]
	1028 Move W8, [X0+309]
	1029 Move TEMP, X8
	1030 And TEMP, TEMP, 1
	1031 Compare TEMP, 1
	1032 JumpIfEqual {1034}
	1033 Call 0x1C5D684
	1034 Move X8, [X0+192]
	1035 Add X1, X31, 60
	1036 Move X0, [X8+32]
	1037 Call 0x1C17E04
	1038 Compare X0, 0
	1039 JumpIfEqual {2516}
	1040 Move X8, [X0]
	1041 Move X1, [X23]
	1042 Move X8, [X8+64]
	1043 Move X9, [X1+64]
	1044 NotImplemented "Instruction CMP not yet implemented."
	1045 Call 0x1C17E08
	1046 NotImplemented "Instruction LDRH not yet implemented."
	1047 Add X22, X22, 1
	1048 NotImplemented "Instruction STRH not yet implemented."
	1049 Move X0, [X20]
	1050 Move W8, [X0+309]
	1051 Move TEMP, X8
	1052 And TEMP, TEMP, 1
	1053 Compare TEMP, 1
	1054 JumpIfEqual {1056}
	1055 Call 0x1C5D684
	1056 Move X8, [X24]
	1057 Move X9, [X0+192]
	1058 Move W10, [X8+224]
	1059 Move X22, [X9+24]
	1060 Compare W10, 0
	1061 JumpIfNotEqual {1064}
	1062 Move X0, X8
	1063 Call 0x1C17DFC
	1064 Move X0, X22
	1065 Move X1, X31
	1066 Call Type.GetTypeFromHandle, X0
	1067 Move X8, 0x18FB000
	1068 Move X8, [X8+3448]
	1069 Move X22, X0
	1070 Move X1, X31
	1071 Move X8, [X8]
	1072 Move X0, X8
	1073 Call Type.GetTypeFromHandle, X0
	1074 Move X1, X0
	1075 Move X0, X22
	1076 Move X2, X31
	1077 Call Type.op_Equality, X0, X1
	1078 Move TEMP, X0
	1079 And TEMP, TEMP, 1
	1080 Compare TEMP, 1
	1081 JumpIfNotEqual {1384}
	1082 NotImplemented "Instruction STRH not yet implemented."
	1083 Move X0, [X20]
	1084 Move W8, [X0+309]
	1085 Move TEMP, X8
	1086 And TEMP, TEMP, 1
	1087 Compare TEMP, 1
	1088 JumpIfEqual {1090}
	1089 Call 0x1C5D684
	1090 Move X8, [X0+192]
	1091 Add X1, X31, 60
	1092 Move X0, [X8+32]
	1093 Call 0x1C17E04
	1094 Compare X0, 0
	1095 JumpIfEqual {2516}
	1096 Move X22, 0x18D8000
	1097 Move X22, [X22+1576]
	1098 Move X8, [X0]
	1099 Move X1, [X22]
	1100 Move X8, [X8+64]
	1101 Move X9, [X1+64]
	1102 NotImplemented "Instruction CMP not yet implemented."
	1103 Call 0x1C17E08
	1104 NotImplemented "Instruction LDRH not yet implemented."
	1105 NotImplemented "Instruction STRH not yet implemented."
	1106 NotImplemented "Instruction STRH not yet implemented."
	1107 Move X0, [X20]
	1108 Move W8, [X0+309]
	1109 Move TEMP, X8
	1110 And TEMP, TEMP, 1
	1111 Compare TEMP, 1
	1112 JumpIfEqual {1114}
	1113 Call 0x1C5D684
	1114 Move X8, [X0+192]
	1115 Add X1, X31, 56
	1116 Move X0, [X8+32]
	1117 Call 0x1C17E04
	1118 Compare X0, 0
	1119 JumpIfEqual {2516}
	1120 Move X8, [X0]
	1121 Move X1, [X22]
	1122 Move X8, [X8+64]
	1123 Move X9, [X1+64]
	1124 NotImplemented "Instruction CMP not yet implemented."
	1125 Call 0x1C17E08
	1126 NotImplemented "Instruction LDRH not yet implemented."
	1127 NotImplemented "Instruction STRH not yet implemented."
	1128 NotImplemented "Instruction STRH not yet implemented."
	1129 Move X0, [X20]
	1130 Move W8, [X0+309]
	1131 Move TEMP, X8
	1132 And TEMP, TEMP, 1
	1133 Compare TEMP, 1
	1134 JumpIfEqual {1136}
	1135 Call 0x1C5D684
	1136 Move X8, [X0+192]
	1137 Add X1, X31, 52
	1138 Move X0, [X8+32]
	1139 Call 0x1C17E04
	1140 Compare X0, 0
	1141 JumpIfEqual {2516}
	1142 Move X8, [X0]
	1143 Move X1, [X22]
	1144 Move X8, [X8+64]
	1145 Move X9, [X1+64]
	1146 NotImplemented "Instruction CMP not yet implemented."
	1147 Call 0x1C17E08
	1148 NotImplemented "Instruction LDRH not yet implemented."
	1149 NotImplemented "Instruction STRH not yet implemented."
	1150 NotImplemented "Instruction STRH not yet implemented."
	1151 Move X0, [X20]
	1152 Move W8, [X0+309]
	1153 Move TEMP, X8
	1154 And TEMP, TEMP, 1
	1155 Compare TEMP, 1
	1156 JumpIfEqual {1158}
	1157 Call 0x1C5D684
	1158 Move X8, [X0+192]
	1159 Add X1, X31, 48
	1160 Move X0, [X8+32]
	1161 Call 0x1C17E04
	1162 Compare X0, 0
	1163 JumpIfEqual {2516}
	1164 Move X8, [X0]
	1165 Move X1, [X22]
	1166 Move X8, [X8+64]
	1167 Move X9, [X1+64]
	1168 NotImplemented "Instruction CMP not yet implemented."
	1169 Call 0x1C17E08
	1170 NotImplemented "Instruction LDRH not yet implemented."
	1171 NotImplemented "Instruction STRH not yet implemented."
	1172 NotImplemented "Instruction STRH not yet implemented."
	1173 Move X0, [X20]
	1174 Move W8, [X0+309]
	1175 Move TEMP, X8
	1176 And TEMP, TEMP, 1
	1177 Compare TEMP, 1
	1178 JumpIfEqual {1180}
	1179 Call 0x1C5D684
	1180 Move X8, [X0+192]
	1181 Add X1, X31, 44
	1182 Move X0, [X8+32]
	1183 Call 0x1C17E04
	1184 Compare X0, 0
	1185 JumpIfEqual {2516}
	1186 Move X8, [X0]
	1187 Move X1, [X22]
	1188 Move X8, [X8+64]
	1189 Move X9, [X1+64]
	1190 NotImplemented "Instruction CMP not yet implemented."
	1191 Call 0x1C17E08
	1192 NotImplemented "Instruction LDRH not yet implemented."
	1193 NotImplemented "Instruction STRH not yet implemented."
	1194 NotImplemented "Instruction STRH not yet implemented."
	1195 Move X0, [X20]
	1196 Move W8, [X0+309]
	1197 Move TEMP, X8
	1198 And TEMP, TEMP, 1
	1199 Compare TEMP, 1
	1200 JumpIfEqual {1202}
	1201 Call 0x1C5D684
	1202 Move X8, [X0+192]
	1203 Add X1, X31, 40
	1204 Move X0, [X8+32]
	1205 Call 0x1C17E04
	1206 Compare X0, 0
	1207 JumpIfEqual {2516}
	1208 Move X8, [X0]
	1209 Move X1, [X22]
	1210 Move X8, [X8+64]
	1211 Move X9, [X1+64]
	1212 NotImplemented "Instruction CMP not yet implemented."
	1213 Call 0x1C17E08
	1214 NotImplemented "Instruction LDRH not yet implemented."
	1215 NotImplemented "Instruction STRH not yet implemented."
	1216 NotImplemented "Instruction STRH not yet implemented."
	1217 Move X0, [X20]
	1218 Move W8, [X0+309]
	1219 Move TEMP, X8
	1220 And TEMP, TEMP, 1
	1221 Compare TEMP, 1
	1222 JumpIfEqual {1224}
	1223 Call 0x1C5D684
	1224 Move X8, [X0+192]
	1225 Add X1, X31, 36
	1226 Move X0, [X8+32]
	1227 Call 0x1C17E04
	1228 Compare X0, 0
	1229 JumpIfEqual {2516}
	1230 Move X8, [X0]
	1231 Move X1, [X22]
	1232 Move X8, [X8+64]
	1233 Move X9, [X1+64]
	1234 NotImplemented "Instruction CMP not yet implemented."
	1235 Call 0x1C17E08
	1236 NotImplemented "Instruction LDRH not yet implemented."
	1237 NotImplemented "Instruction STRH not yet implemented."
	1238 NotImplemented "Instruction STRH not yet implemented."
	1239 Move X0, [X20]
	1240 Move W8, [X0+309]
	1241 Move TEMP, X8
	1242 And TEMP, TEMP, 1
	1243 Compare TEMP, 1
	1244 JumpIfEqual {1246}
	1245 Call 0x1C5D684
	1246 Move X8, [X0+192]
	1247 Add X1, X31, 32
	1248 Move X0, [X8+32]
	1249 Call 0x1C17E04
	1250 Compare X0, 0
	1251 JumpIfEqual {2516}
	1252 Move X8, [X0]
	1253 Move X1, [X22]
	1254 Move X8, [X8+64]
	1255 Move X9, [X1+64]
	1256 NotImplemented "Instruction CMP not yet implemented."
	1257 Call 0x1C17E08
	1258 NotImplemented "Instruction LDRH not yet implemented."
	1259 NotImplemented "Instruction STRH not yet implemented."
	1260 Move X0, [X20]
	1261 Move W8, [X0+309]
	1262 Move TEMP, X8
	1263 And TEMP, TEMP, 1
	1264 Compare TEMP, 1
	1265 JumpIfEqual {1267}
	1266 Call 0x1C5D684
	1267 Move X8, [X24]
	1268 Move X9, [X0+192]
	1269 Move W10, [X8+224]
	1270 Move X22, [X9+24]
	1271 Compare W10, 0
	1272 JumpIfNotEqual {1275}
	1273 Move X0, X8
	1274 Call 0x1C17DFC
	1275 Move X0, X22
	1276 Move X1, X31
	1277 Call Type.GetTypeFromHandle, X0
	1278 Move X8, 0x18FB000
	1279 Move X8, [X8+3488]
	1280 Move X22, X0
	1281 Move X1, X31
	1282 Move X8, [X8]
	1283 Move X0, X8
	1284 Call Type.GetTypeFromHandle, X0
	1285 Move X1, X0
	1286 Move X0, X22
	1287 Move X2, X31
	1288 Call Type.op_Equality, X0, X1
	1289 Move TEMP, X0
	1290 And TEMP, TEMP, 1
	1291 Compare TEMP, 1
	1292 JumpIfNotEqual {1433}
	1293 Move X23, 0x18DC000
	1294 Move X23, [X23+1824]
	1295 Move X22, X31
	1296 Move X0, [X20]
	1297 Move W8, [X0+309]
	1298 Move TEMP, X8
	1299 And TEMP, TEMP, 1
	1300 Compare TEMP, 1
	1301 JumpIfEqual {1303}
	1302 Call 0x1C5D684
	1303 Move X8, [X0+192]
	1304 Move X0, [X8+8]
	1305 Move W8, [X0+309]
	1306 Move TEMP, X8
	1307 And TEMP, TEMP, 1
	1308 Compare TEMP, 1
	1309 JumpIfEqual {1311}
	1310 Call 0x1C5D684
	1311 Move W8, [X0+224]
	1312 Compare W8, 0
	1313 JumpIfNotEqual {1315}
	1314 Call 0x1C17DFC
	1315 Move X0, [X20]
	1316 Move W8, [X0+309]
	1317 Move TEMP, X8
	1318 And TEMP, TEMP, 1
	1319 Compare TEMP, 1
	1320 JumpIfEqual {1322}
	1321 Call 0x1C5D684
	1322 Move X8, [X0+192]
	1323 Move X24, [X8+40]
	1324 Move X0, [X24+32]
	1325 Move W8, [X0+309]
	1326 Move TEMP, X8
	1327 And TEMP, TEMP, 1
	1328 Compare TEMP, 1
	1329 JumpIfEqual {1331}
	1330 Call 0x1C5D684
	1331 Move X8, [X0+192]
	1332 Move X0, [X8+8]
	1333 Move W8, [X0+309]
	1334 Move TEMP, X8
	1335 And TEMP, TEMP, 1
	1336 Compare TEMP, 1
	1337 JumpIfEqual {1339}
	1338 Call 0x1C5D684
	1339 Move W8, [X0+224]
	1340 Compare W8, 0
	1341 JumpIfNotEqual {1343}
	1342 Call 0x1C17DFC
	1343 Move X0, [X24+32]
	1344 Move W8, [X0+309]
	1345 Move TEMP, X8
	1346 And TEMP, TEMP, 1
	1347 Compare TEMP, 1
	1348 JumpIfEqual {1350}
	1349 Call 0x1C5D684
	1350 Move X8, [X0+192]
	1351 Move X0, [X8+8]
	1352 Move W8, [X0+309]
	1353 Move TEMP, X8
	1354 And TEMP, TEMP, 1
	1355 Compare TEMP, 1
	1356 JumpIfEqual {1358}
	1357 Call 0x1C5D684
	1358 Move X8, [X0+184]
	1359 NotImplemented "Instruction LDRSW not yet implemented."
	1360 NotImplemented "Instruction CMP not yet implemented."
	1361 NotImplemented "Instruction STRH not yet implemented."
	1362 Move X0, [X20]
	1363 Move W8, [X0+309]
	1364 Move TEMP, X8
	1365 And TEMP, TEMP, 1
	1366 Compare TEMP, 1
	1367 JumpIfEqual {1369}
	1368 Call 0x1C5D684
	1369 Move X8, [X0+192]
	1370 Add X1, X31, 60
	1371 Move X0, [X8+32]
	1372 Call 0x1C17E04
	1373 Compare X0, 0
	1374 JumpIfEqual {2516}
	1375 Move X8, [X0]
	1376 Move X1, [X23]
	1377 Move X8, [X8+64]
	1378 Move X9, [X1+64]
	1379 NotImplemented "Instruction CMP not yet implemented."
	1380 Call 0x1C17E08
	1381 Move W8, [X0]
	1382 Add X22, X22, 1
	1383 Move [X19+4], W8
	1384 Move X0, [X20]
	1385 Move W8, [X0+309]
	1386 Move TEMP, X8
	1387 And TEMP, TEMP, 1
	1388 Compare TEMP, 1
	1389 JumpIfEqual {1391}
	1390 Call 0x1C5D684
	1391 Move X8, [X24]
	1392 Move X9, [X0+192]
	1393 Move W10, [X8+224]
	1394 Move X22, [X9+24]
	1395 Compare W10, 0
	1396 JumpIfNotEqual {1399}
	1397 Move X0, X8
	1398 Call 0x1C17DFC
	1399 Move X0, X22
	1400 Move X1, X31
	1401 Call Type.GetTypeFromHandle, X0
	1402 Move X8, 0x18FB000
	1403 Move X8, [X8+3488]
	1404 Move X22, X0
	1405 Move X1, X31
	1406 Move X8, [X8]
	1407 Move X0, X8
	1408 Call Type.GetTypeFromHandle, X0
	1409 Move X1, X0
	1410 Move X0, X22
	1411 Move X2, X31
	1412 Call Type.op_Equality, X0, X1
	1413 Move TEMP, X0
	1414 And TEMP, TEMP, 1
	1415 Compare TEMP, 1
	1416 JumpIfNotEqual {1557}
	1417 NotImplemented "Instruction STRH not yet implemented."
	1418 Move X0, [X20]
	1419 Move W8, [X0+309]
	1420 Move TEMP, X8
	1421 And TEMP, TEMP, 1
	1422 Compare TEMP, 1
	1423 JumpIfEqual {1425}
	1424 Call 0x1C5D684
	1425 Move X8, [X0+192]
	1426 Add X1, X31, 60
	1427 Move X0, [X8+32]
	1428 Call 0x1C17E04
	1429 Compare X0, 0
	1430 JumpIfEqual {2516}
	1431 Move X22, 0x18DC000
	1432 Move X22, [X22+1824]
	1433 Move X0, [X20]
	1434 Move W8, [X0+309]
	1435 Move TEMP, X8
	1436 And TEMP, TEMP, 1
	1437 Compare TEMP, 1
	1438 JumpIfEqual {1440}
	1439 Call 0x1C5D684
	1440 Move X8, [X24]
	1441 Move X9, [X0+192]
	1442 Move W10, [X8+224]
	1443 Move X22, [X9+24]
	1444 Compare W10, 0
	1445 JumpIfNotEqual {1448}
	1446 Move X0, X8
	1447 Call 0x1C17DFC
	1448 Move X0, X22
	1449 Move X1, X31
	1450 Call Type.GetTypeFromHandle, X0
	1451 Move X8, 0x18FB000
	1452 Move X8, [X8+3456]
	1453 Move X22, X0
	1454 Move X1, X31
	1455 Move X8, [X8]
	1456 Move X0, X8
	1457 Call Type.GetTypeFromHandle, X0
	1458 Move X1, X0
	1459 Move X0, X22
	1460 Move X2, X31
	1461 Call Type.op_Equality, X0, X1
	1462 Move TEMP, X0
	1463 And TEMP, TEMP, 1
	1464 Compare TEMP, 1
	1465 JumpIfNotEqual {1680}
	1466 Move X23, 0x18D4000
	1467 Move X23, [X23+1880]
	1468 Move X22, X31
	1469 Move X0, [X20]
	1470 Move W8, [X0+309]
	1471 Move TEMP, X8
	1472 And TEMP, TEMP, 1
	1473 Compare TEMP, 1
	1474 JumpIfEqual {1476}
	1475 Call 0x1C5D684
	1476 Move X8, [X0+192]
	1477 Move X0, [X8+8]
	1478 Move W8, [X0+309]
	1479 Move TEMP, X8
	1480 And TEMP, TEMP, 1
	1481 Compare TEMP, 1
	1482 JumpIfEqual {1484}
	1483 Call 0x1C5D684
	1484 Move W8, [X0+224]
	1485 Compare W8, 0
	1486 JumpIfNotEqual {1488}
	1487 Call 0x1C17DFC
	1488 Move X0, [X20]
	1489 Move W8, [X0+309]
	1490 Move TEMP, X8
	1491 And TEMP, TEMP, 1
	1492 Compare TEMP, 1
	1493 JumpIfEqual {1495}
	1494 Call 0x1C5D684
	1495 Move X8, [X0+192]
	1496 Move X24, [X8+40]
	1497 Move X0, [X24+32]
	1498 Move W8, [X0+309]
	1499 Move TEMP, X8
	1500 And TEMP, TEMP, 1
	1501 Compare TEMP, 1
	1502 JumpIfEqual {1504}
	1503 Call 0x1C5D684
	1504 Move X8, [X0+192]
	1505 Move X0, [X8+8]
	1506 Move W8, [X0+309]
	1507 Move TEMP, X8
	1508 And TEMP, TEMP, 1
	1509 Compare TEMP, 1
	1510 JumpIfEqual {1512}
	1511 Call 0x1C5D684
	1512 Move W8, [X0+224]
	1513 Compare W8, 0
	1514 JumpIfNotEqual {1516}
	1515 Call 0x1C17DFC
	1516 Move X0, [X24+32]
	1517 Move W8, [X0+309]
	1518 Move TEMP, X8
	1519 And TEMP, TEMP, 1
	1520 Compare TEMP, 1
	1521 JumpIfEqual {1523}
	1522 Call 0x1C5D684
	1523 Move X8, [X0+192]
	1524 Move X0, [X8+8]
	1525 Move W8, [X0+309]
	1526 Move TEMP, X8
	1527 And TEMP, TEMP, 1
	1528 Compare TEMP, 1
	1529 JumpIfEqual {1531}
	1530 Call 0x1C5D684
	1531 Move X8, [X0+184]
	1532 NotImplemented "Instruction LDRSW not yet implemented."
	1533 NotImplemented "Instruction CMP not yet implemented."
	1534 NotImplemented "Instruction STRH not yet implemented."
	1535 Move X0, [X20]
	1536 Move W8, [X0+309]
	1537 Move TEMP, X8
	1538 And TEMP, TEMP, 1
	1539 Compare TEMP, 1
	1540 JumpIfEqual {1542}
	1541 Call 0x1C5D684
	1542 Move X8, [X0+192]
	1543 Add X1, X31, 60
	1544 Move X0, [X8+32]
	1545 Call 0x1C17E04
	1546 Compare X0, 0
	1547 JumpIfEqual {2516}
	1548 Move X8, [X0]
	1549 Move X1, [X23]
	1550 Move X8, [X8+64]
	1551 Move X9, [X1+64]
	1552 NotImplemented "Instruction CMP not yet implemented."
	1553 Call 0x1C17E08
	1554 Move W8, [X0]
	1555 Add X22, X22, 1
	1556 Move [X19+4], W8
	1557 Move X0, [X20]
	1558 Move W8, [X0+309]
	1559 Move TEMP, X8
	1560 And TEMP, TEMP, 1
	1561 Compare TEMP, 1
	1562 JumpIfEqual {1564}
	1563 Call 0x1C5D684
	1564 Move X8, [X24]
	1565 Move X9, [X0+192]
	1566 Move W10, [X8+224]
	1567 Move X22, [X9+24]
	1568 Compare W10, 0
	1569 JumpIfNotEqual {1572}
	1570 Move X0, X8
	1571 Call 0x1C17DFC
	1572 Move X0, X22
	1573 Move X1, X31
	1574 Call Type.GetTypeFromHandle, X0
	1575 Move X8, 0x18FB000
	1576 Move X8, [X8+3456]
	1577 Move X22, X0
	1578 Move X1, X31
	1579 Move X8, [X8]
	1580 Move X0, X8
	1581 Call Type.GetTypeFromHandle, X0
	1582 Move X1, X0
	1583 Move X0, X22
	1584 Move X2, X31
	1585 Call Type.op_Equality, X0, X1
	1586 Move TEMP, X0
	1587 And TEMP, TEMP, 1
	1588 Compare TEMP, 1
	1589 JumpIfNotEqual {1804}
	1590 NotImplemented "Instruction STRH not yet implemented."
	1591 Move X0, [X20]
	1592 Move W8, [X0+309]
	1593 Move TEMP, X8
	1594 And TEMP, TEMP, 1
	1595 Compare TEMP, 1
	1596 JumpIfEqual {1598}
	1597 Call 0x1C5D684
	1598 Move X8, [X0+192]
	1599 Add X1, X31, 60
	1600 Move X0, [X8+32]
	1601 Call 0x1C17E04
	1602 Compare X0, 0
	1603 JumpIfEqual {2516}
	1604 Move X22, 0x18D4000
	1605 Move X22, [X22+1880]
	1606 Move X8, [X0]
	1607 Move X1, [X22]
	1608 Move X8, [X8+64]
	1609 Move X9, [X1+64]
	1610 NotImplemented "Instruction CMP not yet implemented."
	1611 Call 0x1C17E08
	1612 Move W8, [X0]
	1613 Move [X19], W8
	1614 NotImplemented "Instruction STRH not yet implemented."
	1615 Move X0, [X20]
	1616 Move W8, [X0+309]
	1617 Move TEMP, X8
	1618 And TEMP, TEMP, 1
	1619 Compare TEMP, 1
	1620 JumpIfEqual {1622}
	1621 Call 0x1C5D684
	1622 Move X8, [X0+192]
	1623 Add X1, X31, 56
	1624 Move X0, [X8+32]
	1625 Call 0x1C17E04
	1626 Compare X0, 0
	1627 JumpIfEqual {2516}
	1628 Move X8, [X0]
	1629 Move X1, [X22]
	1630 Move X8, [X8+64]
	1631 Move X9, [X1+64]
	1632 NotImplemented "Instruction CMP not yet implemented."
	1633 Call 0x1C17E08
	1634 Move W8, [X0]
	1635 Move [X19+4], W8
	1636 NotImplemented "Instruction STRH not yet implemented."
	1637 Move X0, [X20]
	1638 Move W8, [X0+309]
	1639 Move TEMP, X8
	1640 And TEMP, TEMP, 1
	1641 Compare TEMP, 1
	1642 JumpIfEqual {1644}
	1643 Call 0x1C5D684
	1644 Move X8, [X0+192]
	1645 Add X1, X31, 52
	1646 Move X0, [X8+32]
	1647 Call 0x1C17E04
	1648 Compare X0, 0
	1649 JumpIfEqual {2516}
	1650 Move X8, [X0]
	1651 Move X1, [X22]
	1652 Move X8, [X8+64]
	1653 Move X9, [X1+64]
	1654 NotImplemented "Instruction CMP not yet implemented."
	1655 Call 0x1C17E08
	1656 Move W8, [X0]
	1657 Move [X19+8], W8
	1658 NotImplemented "Instruction STRH not yet implemented."
	1659 Move X0, [X20]
	1660 Move W8, [X0+309]
	1661 Move TEMP, X8
	1662 And TEMP, TEMP, 1
	1663 Compare TEMP, 1
	1664 JumpIfEqual {1666}
	1665 Call 0x1C5D684
	1666 Move X8, [X0+192]
	1667 Add X1, X31, 48
	1668 Move X0, [X8+32]
	1669 Call 0x1C17E04
	1670 Compare X0, 0
	1671 JumpIfEqual {2516}
	1672 Move X8, [X0]
	1673 Move X1, [X22]
	1674 Move X8, [X8+64]
	1675 Move X9, [X1+64]
	1676 NotImplemented "Instruction CMP not yet implemented."
	1677 Call 0x1C17E08
	1678 Move W8, [X0]
	1679 Move [X19+12], W8
	1680 Move X0, [X20]
	1681 Move W8, [X0+309]
	1682 Move TEMP, X8
	1683 And TEMP, TEMP, 1
	1684 Compare TEMP, 1
	1685 JumpIfEqual {1687}
	1686 Call 0x1C5D684
	1687 Move X8, [X24]
	1688 Move X9, [X0+192]
	1689 Move W10, [X8+224]
	1690 Move X22, [X9+24]
	1691 Compare W10, 0
	1692 JumpIfNotEqual {1695}
	1693 Move X0, X8
	1694 Call 0x1C17DFC
	1695 Move X0, X22
	1696 Move X1, X31
	1697 Call Type.GetTypeFromHandle, X0
	1698 Move X8, 0x18FA000
	1699 Move X8, [X8+3496]
	1700 Move X22, X0
	1701 Move X1, X31
	1702 Move X8, [X8]
	1703 Move X0, X8
	1704 Call Type.GetTypeFromHandle, X0
	1705 Move X1, X0
	1706 Move X0, X22
	1707 Move X2, X31
	1708 Call Type.op_Equality, X0, X1
	1709 Move TEMP, X0
	1710 And TEMP, TEMP, 1
	1711 Compare TEMP, 1
	1712 JumpIfNotEqual {1853}
	1713 Move X23, 0x18D4000
	1714 Move X23, [X23+1880]
	1715 Move X22, X31
	1716 Move X0, [X20]
	1717 Move W8, [X0+309]
	1718 Move TEMP, X8
	1719 And TEMP, TEMP, 1
	1720 Compare TEMP, 1
	1721 JumpIfEqual {1723}
	1722 Call 0x1C5D684
	1723 Move X8, [X0+192]
	1724 Move X0, [X8+8]
	1725 Move W8, [X0+309]
	1726 Move TEMP, X8
	1727 And TEMP, TEMP, 1
	1728 Compare TEMP, 1
	1729 JumpIfEqual {1731}
	1730 Call 0x1C5D684
	1731 Move W8, [X0+224]
	1732 Compare W8, 0
	1733 JumpIfNotEqual {1735}
	1734 Call 0x1C17DFC
	1735 Move X0, [X20]
	1736 Move W8, [X0+309]
	1737 Move TEMP, X8
	1738 And TEMP, TEMP, 1
	1739 Compare TEMP, 1
	1740 JumpIfEqual {1742}
	1741 Call 0x1C5D684
	1742 Move X8, [X0+192]
	1743 Move X24, [X8+40]
	1744 Move X0, [X24+32]
	1745 Move W8, [X0+309]
	1746 Move TEMP, X8
	1747 And TEMP, TEMP, 1
	1748 Compare TEMP, 1
	1749 JumpIfEqual {1751}
	1750 Call 0x1C5D684
	1751 Move X8, [X0+192]
	1752 Move X0, [X8+8]
	1753 Move W8, [X0+309]
	1754 Move TEMP, X8
	1755 And TEMP, TEMP, 1
	1756 Compare TEMP, 1
	1757 JumpIfEqual {1759}
	1758 Call 0x1C5D684
	1759 Move W8, [X0+224]
	1760 Compare W8, 0
	1761 JumpIfNotEqual {1763}
	1762 Call 0x1C17DFC
	1763 Move X0, [X24+32]
	1764 Move W8, [X0+309]
	1765 Move TEMP, X8
	1766 And TEMP, TEMP, 1
	1767 Compare TEMP, 1
	1768 JumpIfEqual {1770}
	1769 Call 0x1C5D684
	1770 Move X8, [X0+192]
	1771 Move X0, [X8+8]
	1772 Move W8, [X0+309]
	1773 Move TEMP, X8
	1774 And TEMP, TEMP, 1
	1775 Compare TEMP, 1
	1776 JumpIfEqual {1778}
	1777 Call 0x1C5D684
	1778 Move X8, [X0+184]
	1779 NotImplemented "Instruction LDRSW not yet implemented."
	1780 NotImplemented "Instruction CMP not yet implemented."
	1781 NotImplemented "Instruction STRH not yet implemented."
	1782 Move X0, [X20]
	1783 Move W8, [X0+309]
	1784 Move TEMP, X8
	1785 And TEMP, TEMP, 1
	1786 Compare TEMP, 1
	1787 JumpIfEqual {1789}
	1788 Call 0x1C5D684
	1789 Move X8, [X0+192]
	1790 Add X1, X31, 60
	1791 Move X0, [X8+32]
	1792 Call 0x1C17E04
	1793 Compare X0, 0
	1794 JumpIfEqual {2516}
	1795 Move X8, [X0]
	1796 Move X1, [X23]
	1797 Move X8, [X8+64]
	1798 Move X9, [X1+64]
	1799 NotImplemented "Instruction CMP not yet implemented."
	1800 Call 0x1C17E08
	1801 Move X8, [X0]
	1802 Add X22, X22, 1
	1803 Move [X19+8], X8
	1804 Move X0, [X20]
	1805 Move W8, [X0+309]
	1806 Move TEMP, X8
	1807 And TEMP, TEMP, 1
	1808 Compare TEMP, 1
	1809 JumpIfEqual {1811}
	1810 Call 0x1C5D684
	1811 Move X8, [X24]
	1812 Move X9, [X0+192]
	1813 Move W10, [X8+224]
	1814 Move X22, [X9+24]
	1815 Compare W10, 0
	1816 JumpIfNotEqual {1819}
	1817 Move X0, X8
	1818 Call 0x1C17DFC
	1819 Move X0, X22
	1820 Move X1, X31
	1821 Call Type.GetTypeFromHandle, X0
	1822 Move X8, 0x18FA000
	1823 Move X8, [X8+3496]
	1824 Move X22, X0
	1825 Move X1, X31
	1826 Move X8, [X8]
	1827 Move X0, X8
	1828 Call Type.GetTypeFromHandle, X0
	1829 Move X1, X0
	1830 Move X0, X22
	1831 Move X2, X31
	1832 Call Type.op_Equality, X0, X1
	1833 Move TEMP, X0
	1834 And TEMP, TEMP, 1
	1835 Compare TEMP, 1
	1836 JumpIfNotEqual {1977}
	1837 NotImplemented "Instruction STRH not yet implemented."
	1838 Move X0, [X20]
	1839 Move W8, [X0+309]
	1840 Move TEMP, X8
	1841 And TEMP, TEMP, 1
	1842 Compare TEMP, 1
	1843 JumpIfEqual {1845}
	1844 Call 0x1C5D684
	1845 Move X8, [X0+192]
	1846 Add X1, X31, 60
	1847 Move X0, [X8+32]
	1848 Call 0x1C17E04
	1849 Compare X0, 0
	1850 JumpIfEqual {2516}
	1851 Move X22, 0x18D4000
	1852 Move X22, [X22+1880]
	1853 Move X0, [X20]
	1854 Move W8, [X0+309]
	1855 Move TEMP, X8
	1856 And TEMP, TEMP, 1
	1857 Compare TEMP, 1
	1858 JumpIfEqual {1860}
	1859 Call 0x1C5D684
	1860 Move X8, [X24]
	1861 Move X9, [X0+192]
	1862 Move W10, [X8+224]
	1863 Move X22, [X9+24]
	1864 Compare W10, 0
	1865 JumpIfNotEqual {1868}
	1866 Move X0, X8
	1867 Call 0x1C17DFC
	1868 Move X0, X22
	1869 Move X1, X31
	1870 Call Type.GetTypeFromHandle, X0
	1871 Move X8, 0x18FA000
	1872 Move X8, [X8+3464]
	1873 Move X22, X0
	1874 Move X1, X31
	1875 Move X8, [X8]
	1876 Move X0, X8
	1877 Call Type.GetTypeFromHandle, X0
	1878 Move X1, X0
	1879 Move X0, X22
	1880 Move X2, X31
	1881 Call Type.op_Equality, X0, X1
	1882 Move TEMP, X0
	1883 And TEMP, TEMP, 1
	1884 Compare TEMP, 1
	1885 JumpIfNotEqual {2066}
	1886 Move X23, 0x18D5000
	1887 Move X23, [X23+2656]
	1888 Move X22, X31
	1889 Move X0, [X20]
	1890 Move W8, [X0+309]
	1891 Move TEMP, X8
	1892 And TEMP, TEMP, 1
	1893 Compare TEMP, 1
	1894 JumpIfEqual {1896}
	1895 Call 0x1C5D684
	1896 Move X8, [X0+192]
	1897 Move X0, [X8+8]
	1898 Move W8, [X0+309]
	1899 Move TEMP, X8
	1900 And TEMP, TEMP, 1
	1901 Compare TEMP, 1
	1902 JumpIfEqual {1904}
	1903 Call 0x1C5D684
	1904 Move W8, [X0+224]
	1905 Compare W8, 0
	1906 JumpIfNotEqual {1908}
	1907 Call 0x1C17DFC
	1908 Move X0, [X20]
	1909 Move W8, [X0+309]
	1910 Move TEMP, X8
	1911 And TEMP, TEMP, 1
	1912 Compare TEMP, 1
	1913 JumpIfEqual {1915}
	1914 Call 0x1C5D684
	1915 Move X8, [X0+192]
	1916 Move X24, [X8+40]
	1917 Move X0, [X24+32]
	1918 Move W8, [X0+309]
	1919 Move TEMP, X8
	1920 And TEMP, TEMP, 1
	1921 Compare TEMP, 1
	1922 JumpIfEqual {1924}
	1923 Call 0x1C5D684
	1924 Move X8, [X0+192]
	1925 Move X0, [X8+8]
	1926 Move W8, [X0+309]
	1927 Move TEMP, X8
	1928 And TEMP, TEMP, 1
	1929 Compare TEMP, 1
	1930 JumpIfEqual {1932}
	1931 Call 0x1C5D684
	1932 Move W8, [X0+224]
	1933 Compare W8, 0
	1934 JumpIfNotEqual {1936}
	1935 Call 0x1C17DFC
	1936 Move X0, [X24+32]
	1937 Move W8, [X0+309]
	1938 Move TEMP, X8
	1939 And TEMP, TEMP, 1
	1940 Compare TEMP, 1
	1941 JumpIfEqual {1943}
	1942 Call 0x1C5D684
	1943 Move X8, [X0+192]
	1944 Move X0, [X8+8]
	1945 Move W8, [X0+309]
	1946 Move TEMP, X8
	1947 And TEMP, TEMP, 1
	1948 Compare TEMP, 1
	1949 JumpIfEqual {1951}
	1950 Call 0x1C5D684
	1951 Move X8, [X0+184]
	1952 NotImplemented "Instruction LDRSW not yet implemented."
	1953 NotImplemented "Instruction CMP not yet implemented."
	1954 NotImplemented "Instruction STRH not yet implemented."
	1955 Move X0, [X20]
	1956 Move W8, [X0+309]
	1957 Move TEMP, X8
	1958 And TEMP, TEMP, 1
	1959 Compare TEMP, 1
	1960 JumpIfEqual {1962}
	1961 Call 0x1C5D684
	1962 Move X8, [X0+192]
	1963 Add X1, X31, 60
	1964 Move X0, [X8+32]
	1965 Call 0x1C17E04
	1966 Compare X0, 0
	1967 JumpIfEqual {2516}
	1968 Move X8, [X0]
	1969 Move X1, [X23]
	1970 Move X8, [X8+64]
	1971 Move X9, [X1+64]
	1972 NotImplemented "Instruction CMP not yet implemented."
	1973 Call 0x1C17E08
	1974 Move X8, [X0]
	1975 Add X22, X22, 1
	1976 Move [X19+8], X8
	1977 Move X0, [X20]
	1978 Move W8, [X0+309]
	1979 Move TEMP, X8
	1980 And TEMP, TEMP, 1
	1981 Compare TEMP, 1
	1982 JumpIfEqual {1984}
	1983 Call 0x1C5D684
	1984 Move X8, [X24]
	1985 Move X9, [X0+192]
	1986 Move W10, [X8+224]
	1987 Move X22, [X9+24]
	1988 Compare W10, 0
	1989 JumpIfNotEqual {1992}
	1990 Move X0, X8
	1991 Call 0x1C17DFC
	1992 Move X0, X22
	1993 Move X1, X31
	1994 Call Type.GetTypeFromHandle, X0
	1995 Move X8, 0x18FA000
	1996 Move X8, [X8+3464]
	1997 Move X22, X0
	1998 Move X1, X31
	1999 Move X8, [X8]
	2000 Move X0, X8
	2001 Call Type.GetTypeFromHandle, X0
	2002 Move X1, X0
	2003 Move X0, X22
	2004 Move X2, X31
	2005 Call Type.op_Equality, X0, X1
	2006 Move TEMP, X0
	2007 And TEMP, TEMP, 1
	2008 Compare TEMP, 1
	2009 JumpIfNotEqual {2190}
	2010 NotImplemented "Instruction STRH not yet implemented."
	2011 Move X0, [X20]
	2012 Move W8, [X0+309]
	2013 Move TEMP, X8
	2014 And TEMP, TEMP, 1
	2015 Compare TEMP, 1
	2016 JumpIfEqual {2018}
	2017 Call 0x1C5D684
	2018 Move X8, [X0+192]
	2019 Add X1, X31, 60
	2020 Move X0, [X8+32]
	2021 Call 0x1C17E04
	2022 Compare X0, 0
	2023 JumpIfEqual {2516}
	2024 Move X22, 0x18D5000
	2025 Move X22, [X22+2656]
	2026 Move X8, [X0]
	2027 Move X1, [X22]
	2028 Move X8, [X8+64]
	2029 Move X9, [X1+64]
	2030 NotImplemented "Instruction CMP not yet implemented."
	2031 Call 0x1C17E08
	2032 Move X8, [X0]
	2033 Move [X19], X8
	2034 NotImplemented "Instruction STRH not yet implemented."
	2035 Move X0, [X20]
	2036 Move W8, [X0+309]
	2037 Move TEMP, X8
	2038 And TEMP, TEMP, 1
	2039 Compare TEMP, 1
	2040 JumpIfEqual {2042}
	2041 Call 0x1C5D684
	2042 Move X8, [X0+192]
	2043 Add X1, X31, 56
	2044 Move X0, [X8+32]
	2045 Call 0x1C17E04
	2046 Compare X0, 0
	2047 JumpIfEqual {2516}
	2048 Move X8, [X0]
	2049 Move X1, [X22]
	2050 Move X8, [X8+64]
	2051 Move X9, [X1+64]
	2052 NotImplemented "Instruction CMP not yet implemented."
	2053 Call 0x1C17E08
	2054 Move X8, [X0]
	2055 Move [X19+8], X8
	2056 Move X20, [X31+112]
	2057 Move X19, [X31+120]
	2058 Move X22, [X31+96]
	2059 Move X21, [X31+104]
	2060 Move X24, [X31+80]
	2061 Move X23, [X31+88]
	2062 Move X30, [X31+64]
	2063 Move X25, [X31+72]
	2064 Add X31, X31, 128
	2065 Return 
	2066 Move X0, [X20]
	2067 Move W8, [X0+309]
	2068 Move TEMP, X8
	2069 And TEMP, TEMP, 1
	2070 Compare TEMP, 1
	2071 JumpIfEqual {2073}
	2072 Call 0x1C5D684
	2073 Move X8, [X24]
	2074 Move X9, [X0+192]
	2075 Move W10, [X8+224]
	2076 Move X22, [X9+24]
	2077 Compare W10, 0
	2078 JumpIfNotEqual {2081}
	2079 Move X0, X8
	2080 Call 0x1C17DFC
	2081 Move X0, X22
	2082 Move X1, X31
	2083 Call Type.GetTypeFromHandle, X0
	2084 Move X8, 0x18FB000
	2085 Move X8, [X8+2688]
	2086 Move X22, X0
	2087 Move X1, X31
	2088 Move X8, [X8]
	2089 Move X0, X8
	2090 Call Type.GetTypeFromHandle, X0
	2091 Move X1, X0
	2092 Move X0, X22
	2093 Move X2, X31
	2094 Call Type.op_Equality, X0, X1
	2095 Move TEMP, X0
	2096 And TEMP, TEMP, 1
	2097 Compare TEMP, 1
	2098 JumpIfNotEqual {2313}
	2099 Move X23, 0x18D3000
	2100 Move X23, [X23+2704]
	2101 Move X22, X31
	2102 Move X0, [X20]
	2103 Move W8, [X0+309]
	2104 Move TEMP, X8
	2105 And TEMP, TEMP, 1
	2106 Compare TEMP, 1
	2107 JumpIfEqual {2109}
	2108 Call 0x1C5D684
	2109 Move X8, [X0+192]
	2110 Move X0, [X8+8]
	2111 Move W8, [X0+309]
	2112 Move TEMP, X8
	2113 And TEMP, TEMP, 1
	2114 Compare TEMP, 1
	2115 JumpIfEqual {2117}
	2116 Call 0x1C5D684
	2117 Move W8, [X0+224]
	2118 Compare W8, 0
	2119 JumpIfNotEqual {2121}
	2120 Call 0x1C17DFC
	2121 Move X0, [X20]
	2122 Move W8, [X0+309]
	2123 Move TEMP, X8
	2124 And TEMP, TEMP, 1
	2125 Compare TEMP, 1
	2126 JumpIfEqual {2128}
	2127 Call 0x1C5D684
	2128 Move X8, [X0+192]
	2129 Move X24, [X8+40]
	2130 Move X0, [X24+32]
	2131 Move W8, [X0+309]
	2132 Move TEMP, X8
	2133 And TEMP, TEMP, 1
	2134 Compare TEMP, 1
	2135 JumpIfEqual {2137}
	2136 Call 0x1C5D684
	2137 Move X8, [X0+192]
	2138 Move X0, [X8+8]
	2139 Move W8, [X0+309]
	2140 Move TEMP, X8
	2141 And TEMP, TEMP, 1
	2142 Compare TEMP, 1
	2143 JumpIfEqual {2145}
	2144 Call 0x1C5D684
	2145 Move W8, [X0+224]
	2146 Compare W8, 0
	2147 JumpIfNotEqual {2149}
	2148 Call 0x1C17DFC
	2149 Move X0, [X24+32]
	2150 Move W8, [X0+309]
	2151 Move TEMP, X8
	2152 And TEMP, TEMP, 1
	2153 Compare TEMP, 1
	2154 JumpIfEqual {2156}
	2155 Call 0x1C5D684
	2156 Move X8, [X0+192]
	2157 Move X0, [X8+8]
	2158 Move W8, [X0+309]
	2159 Move TEMP, X8
	2160 And TEMP, TEMP, 1
	2161 Compare TEMP, 1
	2162 JumpIfEqual {2164}
	2163 Call 0x1C5D684
	2164 Move X8, [X0+184]
	2165 NotImplemented "Instruction LDRSW not yet implemented."
	2166 NotImplemented "Instruction CMP not yet implemented."
	2167 NotImplemented "Instruction STRH not yet implemented."
	2168 Move X0, [X20]
	2169 Move W8, [X0+309]
	2170 Move TEMP, X8
	2171 And TEMP, TEMP, 1
	2172 Compare TEMP, 1
	2173 JumpIfEqual {2175}
	2174 Call 0x1C5D684
	2175 Move X8, [X0+192]
	2176 Add X1, X31, 60
	2177 Move X0, [X8+32]
	2178 Call 0x1C17E04
	2179 Compare X0, 0
	2180 JumpIfEqual {2516}
	2181 Move X8, [X0]
	2182 Move X1, [X23]
	2183 Move X8, [X8+64]
	2184 Move X9, [X1+64]
	2185 NotImplemented "Instruction CMP not yet implemented."
	2186 Call 0x1C17E08
	2187 Move V0, [X0]
	2188 Add X22, X22, 1
	2189 Move [X19+4], S0
	2190 Move X0, [X20]
	2191 Move W8, [X0+309]
	2192 Move TEMP, X8
	2193 And TEMP, TEMP, 1
	2194 Compare TEMP, 1
	2195 JumpIfEqual {2197}
	2196 Call 0x1C5D684
	2197 Move X8, [X24]
	2198 Move X9, [X0+192]
	2199 Move W10, [X8+224]
	2200 Move X22, [X9+24]
	2201 Compare W10, 0
	2202 JumpIfNotEqual {2205}
	2203 Move X0, X8
	2204 Call 0x1C17DFC
	2205 Move X0, X22
	2206 Move X1, X31
	2207 Call Type.GetTypeFromHandle, X0
	2208 Move X8, 0x18FB000
	2209 Move X8, [X8+2688]
	2210 Move X22, X0
	2211 Move X1, X31
	2212 Move X8, [X8]
	2213 Move X0, X8
	2214 Call Type.GetTypeFromHandle, X0
	2215 Move X1, X0
	2216 Move X0, X22
	2217 Move X2, X31
	2218 Call Type.op_Equality, X0, X1
	2219 Move TEMP, X0
	2220 And TEMP, TEMP, 1
	2221 Compare TEMP, 1
	2222 JumpIfNotEqual {2437}
	2223 NotImplemented "Instruction STRH not yet implemented."
	2224 Move X0, [X20]
	2225 Move W8, [X0+309]
	2226 Move TEMP, X8
	2227 And TEMP, TEMP, 1
	2228 Compare TEMP, 1
	2229 JumpIfEqual {2231}
	2230 Call 0x1C5D684
	2231 Move X8, [X0+192]
	2232 Add X1, X31, 60
	2233 Move X0, [X8+32]
	2234 Call 0x1C17E04
	2235 Compare X0, 0
	2236 JumpIfEqual {2516}
	2237 Move X22, 0x18D3000
	2238 Move X22, [X22+2704]
	2239 Move X8, [X0]
	2240 Move X1, [X22]
	2241 Move X8, [X8+64]
	2242 Move X9, [X1+64]
	2243 NotImplemented "Instruction CMP not yet implemented."
	2244 Call 0x1C17E08
	2245 Move V0, [X0]
	2246 Move [X19], S0
	2247 NotImplemented "Instruction STRH not yet implemented."
	2248 Move X0, [X20]
	2249 Move W8, [X0+309]
	2250 Move TEMP, X8
	2251 And TEMP, TEMP, 1
	2252 Compare TEMP, 1
	2253 JumpIfEqual {2255}
	2254 Call 0x1C5D684
	2255 Move X8, [X0+192]
	2256 Add X1, X31, 56
	2257 Move X0, [X8+32]
	2258 Call 0x1C17E04
	2259 Compare X0, 0
	2260 JumpIfEqual {2516}
	2261 Move X8, [X0]
	2262 Move X1, [X22]
	2263 Move X8, [X8+64]
	2264 Move X9, [X1+64]
	2265 NotImplemented "Instruction CMP not yet implemented."
	2266 Call 0x1C17E08
	2267 Move V0, [X0]
	2268 Move [X19+4], S0
	2269 NotImplemented "Instruction STRH not yet implemented."
	2270 Move X0, [X20]
	2271 Move W8, [X0+309]
	2272 Move TEMP, X8
	2273 And TEMP, TEMP, 1
	2274 Compare TEMP, 1
	2275 JumpIfEqual {2277}
	2276 Call 0x1C5D684
	2277 Move X8, [X0+192]
	2278 Add X1, X31, 52
	2279 Move X0, [X8+32]
	2280 Call 0x1C17E04
	2281 Compare X0, 0
	2282 JumpIfEqual {2516}
	2283 Move X8, [X0]
	2284 Move X1, [X22]
	2285 Move X8, [X8+64]
	2286 Move X9, [X1+64]
	2287 NotImplemented "Instruction CMP not yet implemented."
	2288 Call 0x1C17E08
	2289 Move V0, [X0]
	2290 Move [X19+8], S0
	2291 NotImplemented "Instruction STRH not yet implemented."
	2292 Move X0, [X20]
	2293 Move W8, [X0+309]
	2294 Move TEMP, X8
	2295 And TEMP, TEMP, 1
	2296 Compare TEMP, 1
	2297 JumpIfEqual {2299}
	2298 Call 0x1C5D684
	2299 Move X8, [X0+192]
	2300 Add X1, X31, 48
	2301 Move X0, [X8+32]
	2302 Call 0x1C17E04
	2303 Compare X0, 0
	2304 JumpIfEqual {2516}
	2305 Move X8, [X0]
	2306 Move X1, [X22]
	2307 Move X8, [X8+64]
	2308 Move X9, [X1+64]
	2309 NotImplemented "Instruction CMP not yet implemented."
	2310 Call 0x1C17E08
	2311 Move V0, [X0]
	2312 Move [X19+12], S0
	2313 Move X0, [X20]
	2314 Move W8, [X0+309]
	2315 Move TEMP, X8
	2316 And TEMP, TEMP, 1
	2317 Compare TEMP, 1
	2318 JumpIfEqual {2320}
	2319 Call 0x1C5D684
	2320 Move X8, [X24]
	2321 Move X9, [X0+192]
	2322 Move W10, [X8+224]
	2323 Move X22, [X9+24]
	2324 Compare W10, 0
	2325 JumpIfNotEqual {2328}
	2326 Move X0, X8
	2327 Call 0x1C17DFC
	2328 Move X0, X22
	2329 Move X1, X31
	2330 Call Type.GetTypeFromHandle, X0
	2331 Move X8, 0x18FB000
	2332 Move X8, [X8+2680]
	2333 Move X22, X0
	2334 Move X1, X31
	2335 Move X8, [X8]
	2336 Move X0, X8
	2337 Call Type.GetTypeFromHandle, X0
	2338 Move X1, X0
	2339 Move X0, X22
	2340 Move X2, X31
	2341 Call Type.op_Equality, X0, X1
	2342 Move TEMP, X0
	2343 And TEMP, TEMP, 1
	2344 Compare TEMP, 1
	2345 JumpIfNotEqual {2056}
	2346 Move X23, 0x18D6000
	2347 Move X23, [X23+2424]
	2348 Move X22, X31
	2349 Move X0, [X20]
	2350 Move W8, [X0+309]
	2351 Move TEMP, X8
	2352 And TEMP, TEMP, 1
	2353 Compare TEMP, 1
	2354 JumpIfEqual {2356}
	2355 Call 0x1C5D684
	2356 Move X8, [X0+192]
	2357 Move X0, [X8+8]
	2358 Move W8, [X0+309]
	2359 Move TEMP, X8
	2360 And TEMP, TEMP, 1
	2361 Compare TEMP, 1
	2362 JumpIfEqual {2364}
	2363 Call 0x1C5D684
	2364 Move W8, [X0+224]
	2365 Compare W8, 0
	2366 JumpIfNotEqual {2368}
	2367 Call 0x1C17DFC
	2368 Move X0, [X20]
	2369 Move W8, [X0+309]
	2370 Move TEMP, X8
	2371 And TEMP, TEMP, 1
	2372 Compare TEMP, 1
	2373 JumpIfEqual {2375}
	2374 Call 0x1C5D684
	2375 Move X8, [X0+192]
	2376 Move X24, [X8+40]
	2377 Move X0, [X24+32]
	2378 Move W8, [X0+309]
	2379 Move TEMP, X8
	2380 And TEMP, TEMP, 1
	2381 Compare TEMP, 1
	2382 JumpIfEqual {2384}
	2383 Call 0x1C5D684
	2384 Move X8, [X0+192]
	2385 Move X0, [X8+8]
	2386 Move W8, [X0+309]
	2387 Move TEMP, X8
	2388 And TEMP, TEMP, 1
	2389 Compare TEMP, 1
	2390 JumpIfEqual {2392}
	2391 Call 0x1C5D684
	2392 Move W8, [X0+224]
	2393 Compare W8, 0
	2394 JumpIfNotEqual {2396}
	2395 Call 0x1C17DFC
	2396 Move X0, [X24+32]
	2397 Move W8, [X0+309]
	2398 Move TEMP, X8
	2399 And TEMP, TEMP, 1
	2400 Compare TEMP, 1
	2401 JumpIfEqual {2403}
	2402 Call 0x1C5D684
	2403 Move X8, [X0+192]
	2404 Move X0, [X8+8]
	2405 Move W8, [X0+309]
	2406 Move TEMP, X8
	2407 And TEMP, TEMP, 1
	2408 Compare TEMP, 1
	2409 JumpIfEqual {2411}
	2410 Call 0x1C5D684
	2411 Move X8, [X0+184]
	2412 NotImplemented "Instruction LDRSW not yet implemented."
	2413 NotImplemented "Instruction CMP not yet implemented."
	2414 NotImplemented "Instruction STRH not yet implemented."
	2415 Move X0, [X20]
	2416 Move W8, [X0+309]
	2417 Move TEMP, X8
	2418 And TEMP, TEMP, 1
	2419 Compare TEMP, 1
	2420 JumpIfEqual {2422}
	2421 Call 0x1C5D684
	2422 Move X8, [X0+192]
	2423 Add X1, X31, 60
	2424 Move X0, [X8+32]
	2425 Call 0x1C17E04
	2426 Compare X0, 0
	2427 JumpIfEqual {2516}
	2428 Move X8, [X0]
	2429 Move X1, [X23]
	2430 Move X8, [X8+64]
	2431 Move X9, [X1+64]
	2432 NotImplemented "Instruction CMP not yet implemented."
	2433 Call 0x1C17E08
	2434 Move V0, [X0]
	2435 Add X22, X22, 1
	2436 Move [X19+8], D0
	2437 Move X0, [X20]
	2438 Move W8, [X0+309]
	2439 Move TEMP, X8
	2440 And TEMP, TEMP, 1
	2441 Compare TEMP, 1
	2442 JumpIfEqual {2444}
	2443 Call 0x1C5D684
	2444 Move X8, [X24]
	2445 Move X9, [X0+192]
	2446 Move W10, [X8+224]
	2447 Move X22, [X9+24]
	2448 Compare W10, 0
	2449 JumpIfNotEqual {2452}
	2450 Move X0, X8
	2451 Call 0x1C17DFC
	2452 Move X0, X22
	2453 Move X1, X31
	2454 Call Type.GetTypeFromHandle, X0
	2455 Move X8, 0x18FB000
	2456 Move X8, [X8+2680]
	2457 Move X22, X0
	2458 Move X1, X31
	2459 Move X8, [X8]
	2460 Move X0, X8
	2461 Call Type.GetTypeFromHandle, X0
	2462 Move X1, X0
	2463 Move X0, X22
	2464 Move X2, X31
	2465 Call Type.op_Equality, X0, X1
	2466 Move TEMP, X0
	2467 And TEMP, TEMP, 1
	2468 Compare TEMP, 1
	2469 JumpIfNotEqual {2056}
	2470 NotImplemented "Instruction STRH not yet implemented."
	2471 Move X0, [X20]
	2472 Move W8, [X0+309]
	2473 Move TEMP, X8
	2474 And TEMP, TEMP, 1
	2475 Compare TEMP, 1
	2476 JumpIfEqual {2478}
	2477 Call 0x1C5D684
	2478 Move X8, [X0+192]
	2479 Add X1, X31, 60
	2480 Move X0, [X8+32]
	2481 Call 0x1C17E04
	2482 Compare X0, 0
	2483 JumpIfEqual {2516}
	2484 Move X22, 0x18D6000
	2485 Move X22, [X22+2424]
	2486 Move X8, [X0]
	2487 Move X1, [X22]
	2488 Move X8, [X8+64]
	2489 Move X9, [X1+64]
	2490 NotImplemented "Instruction CMP not yet implemented."
	2491 Call 0x1C17E08
	2492 Move V0, [X0]
	2493 Move [X19], D0
	2494 NotImplemented "Instruction STRH not yet implemented."
	2495 Move X0, [X20]
	2496 Move W8, [X0+309]
	2497 Move TEMP, X8
	2498 And TEMP, TEMP, 1
	2499 Compare TEMP, 1
	2500 JumpIfEqual {2502}
	2501 Call 0x1C5D684
	2502 Move X8, [X0+192]
	2503 Add X1, X31, 56
	2504 Move X0, [X8+32]
	2505 Call 0x1C17E04
	2506 Compare X0, 0
	2507 JumpIfEqual {2516}
	2508 Move X8, [X0]
	2509 Move X1, [X22]
	2510 Move X8, [X8+64]
	2511 Move X9, [X1+64]
	2512 NotImplemented "Instruction CMP not yet implemented."
	2513 Call 0x1C17E08
	2514 Move V0, [X0]
	2515 Move [X19+8], D0
	2516 Call 0x1C17F20
	2517 Call 0x1C181E0

Method: System.Void .ctor(System.Void* dataPointer)

Disassembly:
	0x02821AD4 BL 0x1C5C684
	0x02821AD8 MOV X1, X0
	0x02821ADC CBZ X19, 0x2821CD0
	0x02821AE0 LDR X8, [X19]
	0x02821AE4 LDR X9, [X1 + 0x40]
	0x02821AE8 MOV X0, X19
	0x02821AEC LDR X8, [X8 + 0x40]
	0x02821AF0 CMP X8, X9
	0x02821AF4 B.NE 0x2822024
	0x02821AF8 BL 0x1C16E08
	0x02821AFC LDRH W0, [X0]
	0x02821B00 LDP X20, X19, [X31 + 0x40]
	0x02821B04 LDP X22, X21, [X31 + 0x30]
	0x02821B08 LDP X24, X23, [X31 + 0x20]
	0x02821B0C LDP X30, X25, [X31 + 0x10]
	0x02821B10 ADD X31, X31, 0x50
	0x02821B14 RET
	0x02821B18 LDR X0, [X23]
	0x02821B1C LDRB W8, [X0 + 0x135]
	0x02821B20 TBNZ X8, 0x0, 0x2821B28
	0x02821B24 BL 0x1C5C684
	0x02821B28 LDR X8, [X24]
	0x02821B2C LDR X9, [X0 + 0xC0]
	0x02821B30 LDR W10, [X8 + 0xE0]
	0x02821B34 LDR X22, [X9 + 0x18]
	0x02821B38 CBNZ W10, 0x2821B44
	0x02821B3C MOV X0, X8
	0x02821B40 BL 0x1C16DFC
	0x02821B44 MOV X0, X22
	0x02821B48 MOV X1, X31
	0x02821B4C BL 0x338C698

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X21, X2
	007 Move X19, X1
	008 Move X20, X0
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X8, [X8+192]
	018 Move X0, [X8+8]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, [X21+32]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move X8, [X0+192]
	037 Move X0, X20
	038 Move X1, X19
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X3, [X8+48]
	042 Move W2, W31
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]

Method: System.Void .ctor(System.Void* dataPointer, System.Int32 offset)

Disassembly:
	0x02821B50 ADRP X8, 0x18F9000
	0x02821B54 LDR X8, [X8 + 0xD90]
	0x02821B58 MOV X22, X0
	0x02821B5C MOV X1, X31
	0x02821B60 LDR X8, [X8]
	0x02821B64 MOV X0, X8
	0x02821B68 BL 0x338C698
	0x02821B6C MOV X1, X0
	0x02821B70 MOV X0, X22
	0x02821B74 MOV X2, X31
	0x02821B78 BL 0x3395194
	0x02821B7C TBZ X0, 0x0, 0x2821B98
	0x02821B80 ADRP X9, 0x18FB000
	0x02821B84 LDRB W8, [X21, W20, UXTW]
	0x02821B88 LDR X9, [X9 + 0x6B0]
	0x02821B8C STRB W8, [X31 + 0x8]
	0x02821B90 LDR X0, [X9]
	0x02821B94 B 0x2821C8C
	0x02821B98 LDR X0, [X23]
	0x02821B9C LDRB W8, [X0 + 0x135]
	0x02821BA0 TBNZ X8, 0x0, 0x2821BA8
	0x02821BA4 BL 0x1C5C684
	0x02821BA8 LDR X8, [X24]
	0x02821BAC LDR X9, [X0 + 0xC0]
	0x02821BB0 LDR W10, [X8 + 0xE0]
	0x02821BB4 LDR X22, [X9 + 0x18]
	0x02821BB8 CBNZ W10, 0x2821BC4
	0x02821BBC MOV X0, X8
	0x02821BC0 BL 0x1C16DFC
	0x02821BC4 MOV X0, X22
	0x02821BC8 MOV X1, X31
	0x02821BCC BL 0x338C698
	0x02821BD0 ADRP X8, 0x18F9000
	0x02821BD4 LDR X8, [X8 + 0xD98]
	0x02821BD8 MOV X22, X0
	0x02821BDC MOV X1, X31
	0x02821BE0 LDR X8, [X8]
	0x02821BE4 MOV X0, X8
	0x02821BE8 BL 0x338C698
	0x02821BEC MOV X1, X0
	0x02821BF0 MOV X0, X22
	0x02821BF4 MOV X2, X31
	0x02821BF8 BL 0x3395194
	0x02821BFC TBZ X0, 0x0, 0x2821C10
	0x02821C00 ADRP X9, 0x18D7000
	0x02821C04 LDRH W8, [X21, W20, UXTW]
	0x02821C08 LDR X9, [X9 + 0x658]
	0x02821C0C B 0x2821C84
	0x02821C10 LDR X0, [X23]
	0x02821C14 LDRB W8, [X0 + 0x135]
	0x02821C18 TBNZ X8, 0x0, 0x2821C20
	0x02821C1C BL 0x1C5C684
	0x02821C20 LDR X8, [X24]
	0x02821C24 LDR X9, [X0 + 0xC0]
	0x02821C28 LDR W10, [X8 + 0xE0]
	0x02821C2C LDR X22, [X9 + 0x18]
	0x02821C30 CBNZ W10, 0x2821C3C
	0x02821C34 MOV X0, X8
	0x02821C38 BL 0x1C16DFC
	0x02821C3C MOV X0, X22
	0x02821C40 MOV X1, X31
	0x02821C44 BL 0x338C698
	0x02821C48 ADRP X8, 0x18F9000
	0x02821C4C LDR X8, [X8 + 0xD78]
	0x02821C50 MOV X22, X0
	0x02821C54 MOV X1, X31
	0x02821C58 LDR X8, [X8]
	0x02821C5C MOV X0, X8
	0x02821C60 BL 0x338C698
	0x02821C64 MOV X1, X0
	0x02821C68 MOV X0, X22
	0x02821C6C MOV X2, X31
	0x02821C70 BL 0x3395194
	0x02821C74 TBZ X0, 0x0, 0x2821CD4
	0x02821C78 ADRP X9, 0x18D6000
	0x02821C7C LDRH W8, [X21, W20, UXTW]
	0x02821C80 LDR X9, [X9 + 0x628]
	0x02821C84 LDR X0, [X9]
	0x02821C88 STRH W8, [X31 + 0x8]
	0x02821C8C ADD X1, X31, 0x8
	0x02821C90 BL 0x1C16E04
	0x02821C94 LDR X8, [X23]
	0x02821C98 MOV X19, X0
	0x02821C9C LDRB W9, [X8 + 0x135]
	0x02821CA0 TBNZ X9, 0x0, 0x2821CB0
	0x02821CA4 MOV X0, X8
	0x02821CA8 BL 0x1C5C684
	0x02821CAC MOV X8, X0
	0x02821CB0 LDR X8, [X8 + 0xC0]
	0x02821CB4 LDR X1, [X8 + 0x20]
	0x02821CB8 LDRB W8, [X1 + 0x135]
	0x02821CBC TBNZ X8, 0x0, 0x2821CCC
	0x02821CC0 MOV X0, X1
	0x02821CC4 BL 0x1C5C684
	0x02821CC8 MOV X1, X0
	0x02821CCC CBNZ X19, 0x2821AE0
	0x02821CD0 BL 0x1C16F20
	0x02821CD4 LDR X0, [X23]
	0x02821CD8 LDRB W8, [X0 + 0x135]
	0x02821CDC TBNZ X8, 0x0, 0x2821CE4
	0x02821CE0 BL 0x1C5C684
	0x02821CE4 LDR X8, [X24]
	0x02821CE8 LDR X9, [X0 + 0xC0]
	0x02821CEC LDR W10, [X8 + 0xE0]
	0x02821CF0 LDR X22, [X9 + 0x18]
	0x02821CF4 CBNZ W10, 0x2821D00
	0x02821CF8 MOV X0, X8
	0x02821CFC BL 0x1C16DFC
	0x02821D00 MOV X0, X22
	0x02821D04 MOV X1, X31
	0x02821D08 BL 0x338C698
	0x02821D0C ADRP X8, 0x18F9000
	0x02821D10 LDR X8, [X8 + 0xDA0]
	0x02821D14 MOV X22, X0
	0x02821D18 MOV X1, X31
	0x02821D1C LDR X8, [X8]
	0x02821D20 MOV X0, X8
	0x02821D24 BL 0x338C698
	0x02821D28 MOV X1, X0
	0x02821D2C MOV X0, X22
	0x02821D30 MOV X2, X31
	0x02821D34 BL 0x3395194
	0x02821D38 TBZ X0, 0x0, 0x2821D4C
	0x02821D3C ADRP X9, 0x18DA000
	0x02821D40 LDR W8, [X21, W20, UXTW]
	0x02821D44 LDR X9, [X9 + 0x720]
	0x02821D48 B 0x2821DC0
	0x02821D4C LDR X0, [X23]
	0x02821D50 LDRB W8, [X0 + 0x135]
	0x02821D54 TBNZ X8, 0x0, 0x2821D5C
	0x02821D58 BL 0x1C5C684
	0x02821D5C LDR X8, [X24]
	0x02821D60 LDR X9, [X0 + 0xC0]
	0x02821D64 LDR W10, [X8 + 0xE0]
	0x02821D68 LDR X22, [X9 + 0x18]
	0x02821D6C CBNZ W10, 0x2821D78
	0x02821D70 MOV X0, X8
	0x02821D74 BL 0x1C16DFC
	0x02821D78 MOV X0, X22
	0x02821D7C MOV X1, X31
	0x02821D80 BL 0x338C698
	0x02821D84 ADRP X8, 0x18F9000
	0x02821D88 LDR X8, [X8 + 0xD80]
	0x02821D8C MOV X22, X0
	0x02821D90 MOV X1, X31
	0x02821D94 LDR X8, [X8]
	0x02821D98 MOV X0, X8
	0x02821D9C BL 0x338C698
	0x02821DA0 MOV X1, X0
	0x02821DA4 MOV X0, X22
	0x02821DA8 MOV X2, X31
	0x02821DAC BL 0x3395194
	0x02821DB0 TBZ X0, 0x0, 0x2821DCC
	0x02821DB4 ADRP X9, 0x18D2000
	0x02821DB8 LDR W8, [X21, W20, UXTW]
	0x02821DBC LDR X9, [X9 + 0x758]
	0x02821DC0 LDR X0, [X9]
	0x02821DC4 STR W8, [X31 + 0x8]
	0x02821DC8 B 0x2821C8C
	0x02821DCC LDR X0, [X23]
	0x02821DD0 LDRB W8, [X0 + 0x135]
	0x02821DD4 TBNZ X8, 0x0, 0x2821DDC
	0x02821DD8 BL 0x1C5C684
	0x02821DDC LDR X8, [X24]
	0x02821DE0 LDR X9, [X0 + 0xC0]
	0x02821DE4 LDR W10, [X8 + 0xE0]
	0x02821DE8 LDR X22, [X9 + 0x18]
	0x02821DEC CBNZ W10, 0x2821DF8
	0x02821DF0 MOV X0, X8
	0x02821DF4 BL 0x1C16DFC
	0x02821DF8 MOV X0, X22
	0x02821DFC MOV X1, X31
	0x02821E00 BL 0x338C698
	0x02821E04 ADRP X8, 0x18F9000
	0x02821E08 LDR X8, [X8 + 0xDA8]
	0x02821E0C MOV X22, X0
	0x02821E10 MOV X1, X31
	0x02821E14 LDR X8, [X8]
	0x02821E18 MOV X0, X8
	0x02821E1C BL 0x338C698
	0x02821E20 MOV X1, X0
	0x02821E24 MOV X0, X22
	0x02821E28 MOV X2, X31
	0x02821E2C BL 0x3395194
	0x02821E30 TBZ X0, 0x0, 0x2821E44
	0x02821E34 ADRP X9, 0x18D3000
	0x02821E38 LDR X8, [X21, W20, UXTW]
	0x02821E3C LDR X9, [X9 + 0x758]
	0x02821E40 B 0x2821EB8
	0x02821E44 LDR X0, [X23]
	0x02821E48 LDRB W8, [X0 + 0x135]
	0x02821E4C TBNZ X8, 0x0, 0x2821E54
	0x02821E50 BL 0x1C5C684
	0x02821E54 LDR X8, [X24]
	0x02821E58 LDR X9, [X0 + 0xC0]
	0x02821E5C LDR W10, [X8 + 0xE0]
	0x02821E60 LDR X22, [X9 + 0x18]
	0x02821E64 CBNZ W10, 0x2821E70
	0x02821E68 MOV X0, X8
	0x02821E6C BL 0x1C16DFC
	0x02821E70 MOV X0, X22
	0x02821E74 MOV X1, X31
	0x02821E78 BL 0x338C698
	0x02821E7C ADRP X8, 0x18F9000
	0x02821E80 LDR X8, [X8 + 0xD88]
	0x02821E84 MOV X22, X0
	0x02821E88 MOV X1, X31
	0x02821E8C LDR X8, [X8]
	0x02821E90 MOV X0, X8
	0x02821E94 BL 0x338C698
	0x02821E98 MOV X1, X0
	0x02821E9C MOV X0, X22
	0x02821EA0 MOV X2, X31
	0x02821EA4 BL 0x3395194
	0x02821EA8 TBZ X0, 0x0, 0x2821EC4
	0x02821EAC ADRP X9, 0x18D4000
	0x02821EB0 LDR X8, [X21, W20, UXTW]
	0x02821EB4 LDR X9, [X9 + 0xA60]
	0x02821EB8 LDR X0, [X9]
	0x02821EBC STR X8, [X31 + 0x8]
	0x02821EC0 B 0x2821C8C
	0x02821EC4 LDR X0, [X23]
	0x02821EC8 LDRB W8, [X0 + 0x135]
	0x02821ECC TBNZ X8, 0x0, 0x2821ED4
	0x02821ED0 BL 0x1C5C684
	0x02821ED4 LDR X8, [X24]
	0x02821ED8 LDR X9, [X0 + 0xC0]
	0x02821EDC LDR W10, [X8 + 0xE0]
	0x02821EE0 LDR X22, [X9 + 0x18]
	0x02821EE4 CBNZ W10, 0x2821EF0
	0x02821EE8 MOV X0, X8
	0x02821EEC BL 0x1C16DFC
	0x02821EF0 MOV X0, X22
	0x02821EF4 MOV X1, X31
	0x02821EF8 BL 0x338C698
	0x02821EFC ADRP X8, 0x18FA000
	0x02821F00 LDR X8, [X8 + 0xA80]
	0x02821F04 MOV X22, X0
	0x02821F08 MOV X1, X31
	0x02821F0C LDR X8, [X8]
	0x02821F10 MOV X0, X8
	0x02821F14 BL 0x338C698
	0x02821F18 MOV X1, X0
	0x02821F1C MOV X0, X22
	0x02821F20 MOV X2, X31
	0x02821F24 BL 0x3395194
	0x02821F28 TBZ X0, 0x0, 0x2821F40
	0x02821F2C ADRP X8, 0x18D2000
	0x02821F30 LDR V0, [X21, W20, UXTW]
	0x02821F34 LDR X8, [X8 + 0xA90]
	0x02821F38 STR S0, [X31 + 0x8]
	0x02821F3C B 0x2821FB8
	0x02821F40 LDR X0, [X23]
	0x02821F44 LDRB W8, [X0 + 0x135]
	0x02821F48 TBNZ X8, 0x0, 0x2821F50
	0x02821F4C BL 0x1C5C684
	0x02821F50 LDR X8, [X24]
	0x02821F54 LDR X9, [X0 + 0xC0]
	0x02821F58 LDR W10, [X8 + 0xE0]
	0x02821F5C LDR X22, [X9 + 0x18]
	0x02821F60 CBNZ W10, 0x2821F6C
	0x02821F64 MOV X0, X8
	0x02821F68 BL 0x1C16DFC
	0x02821F6C MOV X0, X22
	0x02821F70 MOV X1, X31
	0x02821F74 BL 0x338C698
	0x02821F78 ADRP X8, 0x18FA000
	0x02821F7C LDR X8, [X8 + 0xA78]
	0x02821F80 MOV X22, X0
	0x02821F84 MOV X1, X31
	0x02821F88 LDR X8, [X8]
	0x02821F8C MOV X0, X8
	0x02821F90 BL 0x338C698
	0x02821F94 MOV X1, X0
	0x02821F98 MOV X0, X22
	0x02821F9C MOV X2, X31
	0x02821FA0 BL 0x3395194
	0x02821FA4 TBZ X0, 0x0, 0x2822028
	0x02821FA8 ADRP X8, 0x18D5000
	0x02821FAC LDR V0, [X21, W20, UXTW]
	0x02821FB0 LDR X8, [X8 + 0x978]
	0x02821FB4 STR D0, [X31 + 0x8]
	0x02821FB8 LDR X0, [X8]
	0x02821FBC B 0x2821C8C
	0x02821FC0 STR W20, [X31 + 0x8]
	0x02821FC4 ADRP X0, 0x18D2000
	0x02821FC8 LDR X0, [X0 + 0x758]
	0x02821FCC BL 0x1C16D08
	0x02821FD0 ADD X1, X31, 0x8
	0x02821FD4 BL 0x1C16E04
	0x02821FD8 MOV X20, X0
	0x02821FDC ADRP X0, 0x18FC000
	0x02821FE0 LDR X0, [X0 + 0xEE0]
	0x02821FE4 BL 0x1C16D08
	0x02821FE8 MOV X1, X20
	0x02821FEC MOV X2, X31
	0x02821FF0 BL 0x32094D4
	0x02821FF4 MOV X20, X0
	0x02821FF8 ADRP X0, 0x18DC000
	0x02821FFC LDR X0, [X0 + 0xF78]
	0x02822000 BL 0x1C16D08
	0x02822004 BL 0x1C16F10
	0x02822008 MOV X1, X20
	0x0282200C MOV X2, X31
	0x02822010 MOV X21, X0
	0x02822014 BL 0x3379B6C
	0x02822018 MOV X0, X21
	0x0282201C MOV X1, X19
	0x02822020 BL 0x1C16DEC
	0x02822024 BL 0x1C171E0
	0x02822028 ADRP X0, 0x18D1000
	0x0282202C LDR X0, [X0 + 0xB40]
	0x02822030 BL 0x1C16D08
	0x02822034 BL 0x1C16F10
	0x02822038 MOV X20, X0
	0x0282203C ADRP X0, 0x18FA000
	0x02822040 LDR X0, [X0 + 0xA90]
	0x02822044 BL 0x1C16D08
	0x02822048 MOV X1, X0
	0x0282204C MOV X0, X20
	0x02822050 MOV X2, X31
	0x02822054 BL 0x3379A44
	0x02822058 MOV X0, X20
	0x0282205C B 0x282201C
	0x02822060 STP X30, X21, [X31 - 0x20]!
	0x02822064 STP X20, X19, [X31 + 0x10]
	0x02822068 LDR X8, [X2 + 0x20]
	0x0282206C MOV X20, X2
	0x02822070 MOV X21, X1
	0x02822074 MOV X19, X0
	0x02822078 LDRB W9, [X8 + 0x135]
	0x0282207C TBNZ X9, 0x0, 0x282208C
	0x02822080 MOV X0, X8
	0x02822084 BL 0x1C5C684
	0x02822088 MOV X8, X0
	0x0282208C LDR X8, [X8 + 0xC0]
	0x02822090 LDR X0, [X8]
	0x02822094 LDRB W8, [X0 + 0x135]
	0x02822098 TBNZ X8, 0x0, 0x28220A0
	0x0282209C BL 0x1C5C684
	0x028220A0 CBZ X21, 0x28220B0
	0x028220A4 LDR X8, [X21]
	0x028220A8 CMP X8, X0
	0x028220AC B.EQ 0x28220C0
	0x028220B0 LDP X20, X19, [X31 + 0x10]
	0x028220B4 MOV W0, W31
	0x028220B8 LDP X30, X21, [X31], #0x20
	0x028220BC RET
	0x028220C0 LDR X0, [X20 + 0x20]
	0x028220C4 LDRB W8, [X0 + 0x135]
	0x028220C8 TBNZ X8, 0x0, 0x28220D0
	0x028220CC BL 0x1C5C684
	0x028220D0 LDR X8, [X0 + 0xC0]
	0x028220D4 LDR X0, [X8 + 0x8]
	0x028220D8 LDRB W8, [X0 + 0x135]
	0x028220DC TBNZ X8, 0x0, 0x28220E4
	0x028220E0 BL 0x1C5C684
	0x028220E4 LDR W8, [X0 + 0xE0]
	0x028220E8 CBNZ W8, 0x28220F0
	0x028220EC BL 0x1C16DFC
	0x028220F0 LDR X0, [X20 + 0x20]
	0x028220F4 LDRB W8, [X0 + 0x135]
	0x028220F8 TBNZ X8, 0x0, 0x2822100
	0x028220FC BL 0x1C5C684
	0x02822100 LDR X8, [X0 + 0xC0]
	0x02822104 LDR X1, [X8]
	0x02822108 LDRB W8, [X1 + 0x135]
	0x0282210C TBNZ X8, 0x0, 0x282211C
	0x02822110 MOV X0, X1
	0x02822114 BL 0x1C5C684
	0x02822118 MOV X1, X0
	0x0282211C LDR X8, [X21]
	0x02822120 LDR X9, [X1 + 0x40]
	0x02822124 MOV X0, X21
	0x02822128 LDR X8, [X8 + 0x40]
	0x0282212C CMP X8, X9
	0x02822130 B.NE 0x2822170
	0x02822134 BL 0x1C16E08
	0x02822138 MOV X8, X0
	0x0282213C LDR X0, [X20 + 0x20]
	0x02822140 LDP X21, X20, [X8]
	0x02822144 LDRB W9, [X0 + 0x135]
	0x02822148 TBNZ X9, 0x0, 0x2822150
	0x0282214C BL 0x1C5C684
	0x02822150 LDR X8, [X0 + 0xC0]
	0x02822154 MOV X0, X19
	0x02822158 MOV X2, X20
	0x0282215C LDP X20, X19, [X31 + 0x10]
	0x02822160 LDR X3, [X8 + 0x38]
	0x02822164 MOV X1, X21
	0x02822168 LDP X30, X21, [X31], #0x20
	0x0282216C B 0x2822174
	0x02822170 BL 0x1C171E0
	0x02822174 SUB X31, X31, 0x70
	0x02822178 STP X30, X27, [X31 + 0x20]
	0x0282217C STP X26, X25, [X31 + 0x30]
	0x02822180 STP X24, X23, [X31 + 0x40]
	0x02822184 STP X22, X21, [X31 + 0x50]
	0x02822188 STP X20, X19, [X31 + 0x60]
	0x0282218C MRS X24, 0xC000
	0x02822190 LDR X8, [X24 + 0x28]
	0x02822194 ADRP X23, 0x1BB8000
	0x02822198 MOV X20, X3
	0x0282219C MOV X21, X2
	0x028221A0 STR X8, [X31 + 0x18]
	0x028221A4 LDRB W8, [X23 + 0xA76]
	0x028221A8 MOV X22, X1
	0x028221AC MOV X19, X0
	0x028221B0 STP X1, X2, [X31 + 0x8]
	0x028221B4 TBNZ X8, 0x0, 0x2822244
	0x028221B8 ADRP X0, 0x18F8000
	0x028221BC LDR X0, [X0 + 0xD68]
	0x028221C0 BL 0x1C16CF4
	0x028221C4 ADRP X0, 0x18F9000
	0x028221C8 LDR X0, [X0 + 0xA78]
	0x028221CC BL 0x1C16CF4
	0x028221D0 ADRP X0, 0x18F8000
	0x028221D4 LDR X0, [X0 + 0xD78]
	0x028221D8 BL 0x1C16CF4
	0x028221DC ADRP X0, 0x18F8000
	0x028221E0 LDR X0, [X0 + 0xD80]
	0x028221E4 BL 0x1C16CF4
	0x028221E8 ADRP X0, 0x18F8000
	0x028221EC LDR X0, [X0 + 0xD88]
	0x028221F0 BL 0x1C16CF4
	0x028221F4 ADRP X0, 0x18F8000
	0x028221F8 LDR X0, [X0 + 0xD90]
	0x028221FC BL 0x1C16CF4
	0x02822200 ADRP X0, 0x18F9000
	0x02822204 LDR X0, [X0 + 0xA80]
	0x02822208 BL 0x1C16CF4
	0x0282220C ADRP X0, 0x18D1000
	0x02822210 LDR X0, [X0 + 0x6C0]
	0x02822214 BL 0x1C16CF4
	0x02822218 ADRP X0, 0x18F8000
	0x0282221C LDR X0, [X0 + 0xD98]
	0x02822220 BL 0x1C16CF4
	0x02822224 ADRP X0, 0x18F8000
	0x02822228 LDR X0, [X0 + 0xDA0]
	0x0282222C BL 0x1C16CF4
	0x02822230 ADRP X0, 0x18F8000
	0x02822234 LDR X0, [X0 + 0xDA8]
	0x02822238 BL 0x1C16CF4
	0x0282223C MOVZ W8, 0x1
	0x02822240 STRB W8, [X23 + 0xA76]
	0x02822244 MOV X0, X31
	0x02822248 BL 0x32E15B8
	0x0282224C TBZ X0, 0x0, 0x28223CC
	0x02822250 MOV W8, W31
	0x02822254 LDR X0, [X20 + 0x20]
	0x02822258 MOV W21, W8
	0x0282225C LDRB W9, [X0 + 0x135]
	0x02822260 TBNZ X9, 0x0, 0x2822268
	0x02822264 BL 0x1C5C684
	0x02822268 LDR X8, [X0 + 0xC0]
	0x0282226C LDR X0, [X8 + 0x8]
	0x02822270 LDRB W8, [X0 + 0x135]
	0x02822274 TBNZ X8, 0x0, 0x282227C
	0x02822278 BL 0x1C5C684
	0x0282227C LDR W8, [X0 + 0xE0]
	0x02822280 CBNZ W8, 0x2822288
	0x02822284 BL 0x1C16DFC
	0x02822288 LDR X0, [X20 + 0x20]
	0x0282228C LDRB W8, [X0 + 0x135]
	0x02822290 TBNZ X8, 0x0, 0x2822298
	0x02822294 BL 0x1C5C684
	0x02822298 LDR X8, [X0 + 0xC0]
	0x0282229C LDR X22, [X8 + 0x28]
	0x028222A0 LDR X0, [X22 + 0x20]
	0x028222A4 LDRB W8, [X0 + 0x135]
	0x028222A8 TBNZ X8, 0x0, 0x28222B0
	0x028222AC BL 0x1C5C684
	0x028222B0 LDR X8, [X0 + 0xC0]
	0x028222B4 LDR X0, [X8 + 0x8]
	0x028222B8 LDRB W8, [X0 + 0x135]
	0x028222BC TBNZ X8, 0x0, 0x28222C4
	0x028222C0 BL 0x1C5C684
	0x028222C4 LDR W8, [X0 + 0xE0]
	0x028222C8 CBNZ W8, 0x28222D0
	0x028222CC BL 0x1C16DFC
	0x028222D0 LDR X0, [X22 + 0x20]
	0x028222D4 LDRB W8, [X0 + 0x135]
	0x028222D8 TBNZ X8, 0x0, 0x28222E0
	0x028222DC BL 0x1C5C684
	0x028222E0 LDR X8, [X0 + 0xC0]
	0x028222E4 LDR X0, [X8 + 0x8]
	0x028222E8 LDRB W8, [X0 + 0x135]
	0x028222EC TBNZ X8, 0x0, 0x28222F4
	0x028222F0 BL 0x1C5C684
	0x028222F4 LDR X8, [X0 + 0xB8]
	0x028222F8 LDR W25, [X8]
	0x028222FC CMP W21, W25
	0x02822300 B.GE 0x28223C0
	0x02822304 LDR X0, [X20 + 0x20]
	0x02822308 LDRB W8, [X0 + 0x135]
	0x0282230C TBNZ X8, 0x0, 0x2822314
	0x02822310 BL 0x1C5C684
	0x02822314 LDR X8, [X0 + 0xC0]
	0x02822318 LDR X0, [X8 + 0x8]
	0x0282231C LDRB W8, [X0 + 0x135]
	0x02822320 TBNZ X8, 0x0, 0x2822328
	0x02822324 BL 0x1C5C684
	0x02822328 LDR W8, [X0 + 0xE0]
	0x0282232C CBNZ W8, 0x2822334
	0x02822330 BL 0x1C16DFC
	0x02822334 LDR X0, [X20 + 0x20]
	0x02822338 LDRB W8, [X0 + 0x135]
	0x0282233C TBNZ X8, 0x0, 0x2822344
	0x02822340 BL 0x1C5C684
	0x02822344 LDR X8, [X0 + 0xC0]
	0x02822348 MOV X0, X19
	0x0282234C MOV W1, W21
	0x02822350 LDR X2, [X8 + 0x40]
	0x02822354 BL 0x2821834
	0x02822358 LDR X8, [X20 + 0x20]
	0x0282235C MOV W22, W0
	0x02822360 LDRB W9, [X8 + 0x135]
	0x02822364 TBNZ X9, 0x0, 0x2822374
	0x02822368 MOV X0, X8
	0x0282236C BL 0x1C5C684
	0x02822370 MOV X8, X0
	0x02822374 LDR X8, [X8 + 0xC0]
	0x02822378 ADD X0, X31, 0x8
	0x0282237C MOV W1, W21
	0x02822380 LDR X2, [X8 + 0x40]
	0x02822384 BL 0x2821834
	0x02822388 LDR X8, [X20 + 0x20]
	0x0282238C MOV W23, W0
	0x02822390 LDRB W9, [X8 + 0x135]
	0x02822394 TBNZ X9, 0x0, 0x28223A4
	0x02822398 MOV X0, X8
	0x0282239C BL 0x1C5C684
	0x028223A0 MOV X8, X0
	0x028223A4 LDR X8, [X8 + 0xC0]
	0x028223A8 MOV W0, W22
	0x028223AC MOV W1, W23
	0x028223B0 LDR X2, [X8 + 0x48]
	0x028223B4 BL 0x22BC5BC
	0x028223B8 ADD W8, W21, 0x1
	0x028223BC TBNZ X0, 0x0, 0x2822254
	0x028223C0 CMP W21, W25
	0x028223C4 CSET W0, GE
	0x028223C8 B 0x2822AD8
	0x028223CC LDR X0, [X20 + 0x20]
	0x028223D0 ADRP X27, 0x18D1000
	0x028223D4 LDRB W8, [X0 + 0x135]
	0x028223D8 LDR X27, [X27 + 0x6C0]
	0x028223DC TBNZ X8, 0x0, 0x28223E4
	0x028223E0 BL 0x1C5C684
	0x028223E4 LDR X8, [X27]
	0x028223E8 LDR X9, [X0 + 0xC0]
	0x028223EC ADRP X25, 0x18F8000
	0x028223F0 LDR W10, [X8 + 0xE0]
	0x028223F4 LDR X23, [X9 + 0x18]
	0x028223F8 LDR X25, [X25 + 0xD68]
	0x028223FC CBNZ W10, 0x2822408
	0x02822400 MOV X0, X8
	0x02822404 BL 0x1C16DFC
	0x02822408 MOV X0, X23
	0x0282240C MOV X1, X31
	0x02822410 UBFM X26, X22, 0x20, 0x3F
	0x02822414 BL 0x338C698
	0x02822418 LDR X8, [X25]
	0x0282241C MOV X23, X0
	0x02822420 MOV X1, X31
	0x02822424 MOV X0, X8
	0x02822428 BL 0x338C698
	0x0282242C MOV X1, X0
	0x02822430 MOV X0, X23
	0x02822434 MOV X2, X31
	0x02822438 BL 0x3395194
	0x0282243C TBZ X0, 0x0, 0x2822530
	0x02822440 LDRB W8, [X19]
	0x02822444 CMP W8, W22, UXTB
	0x02822448 B.NE 0x2822AD4
	0x0282244C LDRB W8, [X19 + 0x1]
	0x02822450 UBFM X9, X22, 0x8, 0x1F
	0x02822454 CMP W8, W9, UXTB
	0x02822458 B.NE 0x2822AD4
	0x0282245C LDRB W8, [X19 + 0x2]
	0x02822460 UBFM X9, X22, 0x10, 0x1F
	0x02822464 CMP W8, W9, UXTB
	0x02822468 B.NE 0x2822AD4
	0x0282246C LDRB W8, [X19 + 0x3]
	0x02822470 CMP W8, W22, LSR
	0x02822474 B.NE 0x2822AD4
	0x02822478 LDRB W8, [X19 + 0x4]
	0x0282247C CMP W8, W26, UXTB
	0x02822480 B.NE 0x2822AD4
	0x02822484 LDRB W8, [X19 + 0x5]
	0x02822488 UBFM X9, X22, 0x28, 0x3F
	0x0282248C CMP W8, W9, UXTB
	0x02822490 B.NE 0x2822AD4
	0x02822494 LDRB W8, [X19 + 0x6]
	0x02822498 UBFM X9, X22, 0x30, 0x3F
	0x0282249C CMP W8, W9, UXTB
	0x028224A0 B.NE 0x2822AD4
	0x028224A4 LDRB W8, [X19 + 0x7]
	0x028224A8 LDRB W9, [X31 + 0xF]
	0x028224AC CMP W8, W9
	0x028224B0 B.NE 0x2822AD4
	0x028224B4 LDRB W8, [X19 + 0x8]
	0x028224B8 CMP W8, W21, UXTB
	0x028224BC B.NE 0x2822AD4
	0x028224C0 LDRB W8, [X19 + 0x9]
	0x028224C4 UBFM X9, X21, 0x8, 0x1F
	0x028224C8 CMP W8, W9, UXTB
	0x028224CC B.NE 0x2822AD4
	0x028224D0 LDRB W8, [X19 + 0xA]
	0x028224D4 LDRB W9, [X31 + 0x12]
	0x028224D8 CMP W8, W9
	0x028224DC B.NE 0x2822AD4
	0x028224E0 LDRB W8, [X19 + 0xB]
	0x028224E4 LDRB W9, [X31 + 0x13]
	0x028224E8 CMP W8, W9
	0x028224EC B.NE 0x2822AD4
	0x028224F0 LDRB W8, [X19 + 0xC]
	0x028224F4 LDRB W9, [X31 + 0x14]
	0x028224F8 CMP W8, W9
	0x028224FC B.NE 0x2822AD4
	0x02822500 LDRB W8, [X19 + 0xD]
	0x02822504 LDRB W9, [X31 + 0x15]
	0x02822508 CMP W8, W9
	0x0282250C B.NE 0x2822AD4
	0x02822510 LDRB W8, [X19 + 0xE]
	0x02822514 LDRB W9, [X31 + 0x16]
	0x02822518 CMP W8, W9
	0x0282251C B.NE 0x2822AD4
	0x02822520 LDRB W8, [X19 + 0xF]
	0x02822524 LDRB W9, [X31 + 0x17]
	0x02822528 CMP W8, W9
	0x0282252C B 0x282299C
	0x02822530 LDR X0, [X20 + 0x20]
	0x02822534 LDRB W8, [X0 + 0x135]
	0x02822538 TBNZ X8, 0x0, 0x2822540
	0x0282253C BL 0x1C5C684
	0x02822540 LDR X8, [X27]
	0x02822544 LDR X9, [X0 + 0xC0]
	0x02822548 LDR W10, [X8 + 0xE0]
	0x0282254C LDR X23, [X9 + 0x18]
	0x02822550 CBNZ W10, 0x282255C
	0x02822554 MOV X0, X8
	0x02822558 BL 0x1C16DFC
	0x0282255C MOV X0, X23
	0x02822560 MOV X1, X31
	0x02822564 UBFM X25, X21, 0x20, 0x3F
	0x02822568 BL 0x338C698
	0x0282256C ADRP X8, 0x18F8000
	0x02822570 LDR X8, [X8 + 0xD90]
	0x02822574 MOV X23, X0
	0x02822578 MOV X1, X31
	0x0282257C LDR X8, [X8]
	0x02822580 MOV X0, X8
	0x02822584 BL 0x338C698
	0x02822588 MOV X1, X0
	0x0282258C MOV X0, X23
	0x02822590 MOV X2, X31
	0x02822594 BL 0x3395194
	0x02822598 TBZ X0, 0x0, 0x2822680
	0x0282259C LDRB W8, [X19]
	0x028225A0 CMP W8, W22, UXTB
	0x028225A4 B.NE 0x2822AD4
	0x028225A8 LDRB W8, [X19 + 0x1]
	0x028225AC UBFM X9, X22, 0x8, 0x1F
	0x028225B0 CMP W8, W9, UXTB
	0x028225B4 B.NE 0x2822AD4
	0x028225B8 LDRB W8, [X19 + 0x2]
	0x028225BC UBFM X9, X22, 0x10, 0x1F
	0x028225C0 CMP W8, W9, UXTB
	0x028225C4 B.NE 0x2822AD4
	0x028225C8 LDRB W8, [X19 + 0x3]
	0x028225CC CMP W8, W22, LSR
	0x028225D0 B.NE 0x2822AD4
	0x028225D4 LDRB W8, [X19 + 0x4]
	0x028225D8 CMP W8, W26, UXTB
	0x028225DC B.NE 0x2822AD4
	0x028225E0 LDRB W8, [X19 + 0x5]
	0x028225E4 UBFM X9, X22, 0x28, 0x3F
	0x028225E8 CMP W8, W9, UXTB
	0x028225EC B.NE 0x2822AD4
	0x028225F0 LDRB W8, [X19 + 0x6]
	0x028225F4 UBFM X9, X22, 0x30, 0x3F
	0x028225F8 CMP W8, W9, UXTB
	0x028225FC B.NE 0x2822AD4
	0x02822600 LDRB W8, [X19 + 0x7]
	0x02822604 UBFM X9, X22, 0x38, 0x3F
	0x02822608 CMP W8, W9
	0x0282260C B.NE 0x2822AD4
	0x02822610 LDRB W8, [X19 + 0x8]
	0x02822614 CMP W8, W21, UXTB
	0x02822618 B.NE 0x2822AD4
	0x0282261C LDRB W8, [X19 + 0x9]
	0x02822620 UBFM X9, X21, 0x8, 0x1F
	0x02822624 CMP W8, W9, UXTB
	0x02822628 B.NE 0x2822AD4
	0x0282262C LDRB W8, [X19 + 0xA]
	0x02822630 UBFM X9, X21, 0x10, 0x1F
	0x02822634 CMP W8, W9, UXTB
	0x02822638 B.NE 0x2822AD4
	0x0282263C LDRB W8, [X19 + 0xB]
	0x02822640 CMP W8, W21, LSR
	0x02822644 B.NE 0x2822AD4
	0x02822648 LDRB W8, [X19 + 0xC]
	0x0282264C CMP W8, W25, UXTB
	0x02822650 B.NE 0x2822AD4
	0x02822654 LDRB W8, [X19 + 0xD]
	0x02822658 UBFM X9, X21, 0x28, 0x3F
	0x0282265C CMP W8, W9, UXTB
	0x02822660 B.NE 0x2822AD4
	0x02822664 LDRB W8, [X19 + 0xE]
	0x02822668 UBFM X9, X21, 0x30, 0x3F
	0x0282266C CMP W8, W9, UXTB
	0x02822670 B.NE 0x2822AD4
	0x02822674 LDRB W8, [X19 + 0xF]
	0x02822678 UBFM X9, X21, 0x38, 0x3F
	0x0282267C B 0x28227B0
	0x02822680 LDR X0, [X20 + 0x20]
	0x02822684 LDRB W8, [X0 + 0x135]
	0x02822688 TBNZ X8, 0x0, 0x2822690
	0x0282268C BL 0x1C5C684
	0x02822690 LDR X8, [X27]
	0x02822694 LDR X9, [X0 + 0xC0]
	0x02822698 LDR W10, [X8 + 0xE0]
	0x0282269C LDR X23, [X9 + 0x18]
	0x028226A0 CBNZ W10, 0x28226AC
	0x028226A4 MOV X0, X8
	0x028226A8 BL 0x1C16DFC
	0x028226AC MOV X0, X23
	0x028226B0 MOV X1, X31
	0x028226B4 BL 0x338C698
	0x028226B8 ADRP X8, 0x18F8000
	0x028226BC LDR X8, [X8 + 0xD98]
	0x028226C0 MOV X23, X0
	0x028226C4 MOV X1, X31
	0x028226C8 LDR X8, [X8]
	0x028226CC MOV X0, X8
	0x028226D0 BL 0x338C698
	0x028226D4 MOV X1, X0
	0x028226D8 MOV X0, X23
	0x028226DC MOV X2, X31
	0x028226E0 BL 0x3395194
	0x028226E4 TBNZ X0, 0x0, 0x2822750
	0x028226E8 LDR X0, [X20 + 0x20]
	0x028226EC LDRB W8, [X0 + 0x135]
	0x028226F0 TBNZ X8, 0x0, 0x28226F8
	0x028226F4 BL 0x1C5C684
	0x028226F8 LDR X8, [X27]
	0x028226FC LDR X9, [X0 + 0xC0]
	0x02822700 LDR W10, [X8 + 0xE0]
	0x02822704 LDR X23, [X9 + 0x18]
	0x02822708 CBNZ W10, 0x2822714
	0x0282270C MOV X0, X8
	0x02822710 BL 0x1C16DFC
	0x02822714 MOV X0, X23
	0x02822718 MOV X1, X31
	0x0282271C BL 0x338C698
	0x02822720 ADRP X8, 0x18F8000
	0x02822724 LDR X8, [X8 + 0xD78]
	0x02822728 MOV X23, X0
	0x0282272C MOV X1, X31
	0x02822730 LDR X8, [X8]
	0x02822734 MOV X0, X8
	0x02822738 BL 0x338C698
	0x0282273C MOV X1, X0
	0x02822740 MOV X0, X23
	0x02822744 MOV X2, X31
	0x02822748 BL 0x3395194
	0x0282274C TBZ X0, 0x0, 0x28227B8
	0x02822750 LDRH W8, [X19]
	0x02822754 CMP W8, W22, UXTH
	0x02822758 B.NE 0x2822AD4
	0x0282275C LDRH W8, [X19 + 0x2]
	0x02822760 CMP W8, W22, LSR
	0x02822764 B.NE 0x2822AD4
	0x02822768 LDRH W8, [X19 + 0x4]
	0x0282276C CMP W8, W26, UXTH
	0x02822770 B.NE 0x2822AD4
	0x02822774 LDRH W8, [X19 + 0x6]
	0x02822778 UBFM X9, X22, 0x30, 0x3F
	0x0282277C CMP W8, W9
	0x02822780 B.NE 0x2822AD4
	0x02822784 LDRH W8, [X19 + 0x8]
	0x02822788 CMP W8, W21, UXTH
	0x0282278C B.NE 0x2822AD4
	0x02822790 LDRH W8, [X19 + 0xA]
	0x02822794 CMP W8, W21, LSR
	0x02822798 B.NE 0x2822AD4
	0x0282279C LDRH W8, [X19 + 0xC]
	0x028227A0 CMP W8, W25, UXTH
	0x028227A4 B.NE 0x2822AD4
	0x028227A8 LDRH W8, [X19 + 0xE]
	0x028227AC UBFM X9, X21, 0x30, 0x3F
	0x028227B0 CMP W8, W9
	0x028227B4 B 0x282299C
	0x028227B8 LDR X0, [X20 + 0x20]
	0x028227BC LDRB W8, [X0 + 0x135]
	0x028227C0 TBNZ X8, 0x0, 0x28227C8
	0x028227C4 BL 0x1C5C684
	0x028227C8 LDR X8, [X27]
	0x028227CC LDR X9, [X0 + 0xC0]
	0x028227D0 LDR W10, [X8 + 0xE0]
	0x028227D4 LDR X23, [X9 + 0x18]
	0x028227D8 CBNZ W10, 0x28227E4
	0x028227DC MOV X0, X8
	0x028227E0 BL 0x1C16DFC
	0x028227E4 MOV X0, X23
	0x028227E8 MOV X1, X31
	0x028227EC BL 0x338C698
	0x028227F0 ADRP X8, 0x18F8000
	0x028227F4 LDR X8, [X8 + 0xDA0]
	0x028227F8 MOV X23, X0
	0x028227FC MOV X1, X31
	0x02822800 LDR X8, [X8]
	0x02822804 MOV X0, X8
	0x02822808 BL 0x338C698
	0x0282280C MOV X1, X0
	0x02822810 MOV X0, X23
	0x02822814 MOV X2, X31
	0x02822818 BL 0x3395194
	0x0282281C TBNZ X0, 0x0, 0x2822888
	0x02822820 LDR X0, [X20 + 0x20]
	0x02822824 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x1BBA000
	011 Move W8, [X23+2676]
	012 Move X20, X3
	013 Move W21, W2
	014 Move X22, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {55}
	020 Move X0, 0x18FA000
	021 Move X0, [X0+3432]
	022 Call 0x1C17CF4
	023 Move X0, 0x18FB000
	024 Move X0, [X0+2680]
	025 Call 0x1C17CF4
	026 Move X0, 0x18FA000
	027 Move X0, [X0+3448]
	028 Call 0x1C17CF4
	029 Move X0, 0x18FA000
	030 Move X0, [X0+3456]
	031 Call 0x1C17CF4
	032 Move X0, 0x18FA000
	033 Move X0, [X0+3464]
	034 Call 0x1C17CF4
	035 Move X0, 0x18FA000
	036 Move X0, [X0+3472]
	037 Call 0x1C17CF4
	038 Move X0, 0x18FB000
	039 Move X0, [X0+2688]
	040 Call 0x1C17CF4
	041 Move X0, 0x18D3000
	042 Move X0, [X0+1728]
	043 Call 0x1C17CF4
	044 Move X0, 0x18FA000
	045 Move X0, [X0+3480]
	046 Call 0x1C17CF4
	047 Move X0, 0x18FA000
	048 Move X0, [X0+3488]
	049 Call 0x1C17CF4
	050 Move X0, 0x18FA000
	051 Move X0, [X0+3496]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X23+2676], W8
	055 Move [X19], X31
	056 Move [X19+8], X31
	057 Move X24, X20
	058 Add X24, X24, 32
	059 Move X0, [X24]
	060 Move X25, 0x18D3000
	061 Move W8, [X0+309]
	062 Move X25, [X25+1728]
	063 Move TEMP, X8
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {68}
	067 Call 0x1C5D684
	068 Move X8, [X25]
	069 Move X9, [X0+192]
	070 Move X26, 0x18FA000
	071 Move W10, [X8+224]
	072 Move X23, [X9+24]
	073 Move X26, [X26+3432]
	074 Compare W10, 0
	075 JumpIfNotEqual {78}
	076 Move X0, X8
	077 Call 0x1C17DFC
	078 Move X0, X23
	079 Move X1, X31
	080 Call Type.GetTypeFromHandle, X0
	081 Move X8, [X26]
	082 Move X23, X0
	083 Move X1, X31
	084 Move X0, X8
	085 Call Type.GetTypeFromHandle, X0
	086 Move X1, X0
	087 Move X0, X23
	088 Move X2, X31
	089 Call Type.op_Equality, X0, X1
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {164}
	094 Move X20, X31
	095 Add X21, X22, W21
	096 Move X0, [X24]
	097 Move W8, [X0+309]
	098 Move TEMP, X8
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {103}
	102 Call 0x1C5D684
	103 Move X8, [X0+192]
	104 Move X0, [X8+8]
	105 Move W8, [X0+309]
	106 Move TEMP, X8
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfEqual {111}
	110 Call 0x1C5D684
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Move X0, [X24]
	116 Move W8, [X0+309]
	117 Move TEMP, X8
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfEqual {122}
	121 Call 0x1C5D684
	122 Move X8, [X0+192]
	123 Move X22, [X8+40]
	124 Move X0, [X22+32]
	125 Move W8, [X0+309]
	126 Move TEMP, X8
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfEqual {131}
	130 Call 0x1C5D684
	131 Move X8, [X0+192]
	132 Move X0, [X8+8]
	133 Move W8, [X0+309]
	134 Move TEMP, X8
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {139}
	138 Call 0x1C5D684
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {143}
	142 Call 0x1C17DFC
	143 Move X0, [X22+32]
	144 Move W8, [X0+309]
	145 Move TEMP, X8
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {150}
	149 Call 0x1C5D684
	150 Move X8, [X0+192]
	151 Move X0, [X8+8]
	152 Move W8, [X0+309]
	153 Move TEMP, X8
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfEqual {158}
	157 Call 0x1C5D684
	158 Move X8, [X0+184]
	159 NotImplemented "Instruction LDRSW not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move W8, [X21]
	162 Move [X19], W8
	163 Add X20, X20, 1
	164 Move X0, [X24]
	165 Move W8, [X0+309]
	166 Move TEMP, X8
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfEqual {171}
	170 Call 0x1C5D684
	171 Move X8, [X25]
	172 Move X9, [X0+192]
	173 Move X26, 0x18FA000
	174 Move W10, [X8+224]
	175 Move X23, [X9+24]
	176 Move X26, [X26+3472]
	177 Compare W10, 0
	178 JumpIfNotEqual {181}
	179 Move X0, X8
	180 Call 0x1C17DFC
	181 Move X0, X23
	182 Move X1, X31
	183 Call Type.GetTypeFromHandle, X0
	184 Move X8, [X26]
	185 Move X23, X0
	186 Move X1, X31
	187 Move X0, X8
	188 Call Type.GetTypeFromHandle, X0
	189 Move X1, X0
	190 Move X0, X23
	191 Move X2, X31
	192 Call Type.op_Equality, X0, X1
	193 Move TEMP, X0
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfNotEqual {267}
	197 Move X20, X31
	198 Add X21, X22, W21
	199 Move X0, [X24]
	200 Move W8, [X0+309]
	201 Move TEMP, X8
	202 And TEMP, TEMP, 1
	203 Compare TEMP, 1
	204 JumpIfEqual {206}
	205 Call 0x1C5D684
	206 Move X8, [X0+192]
	207 Move X0, [X8+8]
	208 Move W8, [X0+309]
	209 Move TEMP, X8
	210 And TEMP, TEMP, 1
	211 Compare TEMP, 1
	212 JumpIfEqual {214}
	213 Call 0x1C5D684
	214 Move W8, [X0+224]
	215 Compare W8, 0
	216 JumpIfNotEqual {218}
	217 Call 0x1C17DFC
	218 Move X0, [X24]
	219 Move W8, [X0+309]
	220 Move TEMP, X8
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfEqual {225}
	224 Call 0x1C5D684
	225 Move X8, [X0+192]
	226 Move X22, [X8+40]
	227 Move X0, [X22+32]
	228 Move W8, [X0+309]
	229 Move TEMP, X8
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfEqual {234}
	233 Call 0x1C5D684
	234 Move X8, [X0+192]
	235 Move X0, [X8+8]
	236 Move W8, [X0+309]
	237 Move TEMP, X8
	238 And TEMP, TEMP, 1
	239 Compare TEMP, 1
	240 JumpIfEqual {242}
	241 Call 0x1C5D684
	242 Move W8, [X0+224]
	243 Compare W8, 0
	244 JumpIfNotEqual {246}
	245 Call 0x1C17DFC
	246 Move X0, [X22+32]
	247 Move W8, [X0+309]
	248 Move TEMP, X8
	249 And TEMP, TEMP, 1
	250 Compare TEMP, 1
	251 JumpIfEqual {253}
	252 Call 0x1C5D684
	253 Move X8, [X0+192]
	254 Move X0, [X8+8]
	255 Move W8, [X0+309]
	256 Move TEMP, X8
	257 And TEMP, TEMP, 1
	258 Compare TEMP, 1
	259 JumpIfEqual {261}
	260 Call 0x1C5D684
	261 Move X8, [X0+184]
	262 NotImplemented "Instruction LDRSW not yet implemented."
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Move W8, [X21]
	265 Move [X19], W8
	266 Add X20, X20, 1
	267 Move X0, [X24]
	268 Move W8, [X0+309]
	269 Move TEMP, X8
	270 And TEMP, TEMP, 1
	271 Compare TEMP, 1
	272 JumpIfEqual {274}
	273 Call 0x1C5D684
	274 Move X8, [X25]
	275 Move X9, [X0+192]
	276 Move W10, [X8+224]
	277 Move X23, [X9+24]
	278 Compare W10, 0
	279 JumpIfNotEqual {282}
	280 Move X0, X8
	281 Call 0x1C17DFC
	282 Move X0, X23
	283 Move X1, X31
	284 Call Type.GetTypeFromHandle, X0
	285 Move X8, 0x18FA000
	286 Move X8, [X8+3480]
	287 Move X23, X0
	288 Move X1, X31
	289 Move X8, [X8]
	290 Move X0, X8
	291 Call Type.GetTypeFromHandle, X0
	292 Move X1, X0
	293 Move X0, X23
	294 Move X2, X31
	295 Call Type.op_Equality, X0, X1
	296 Move TEMP, X0
	297 And TEMP, TEMP, 1
	298 Compare TEMP, 1
	299 JumpIfNotEqual {370}
	300 Move X20, X31
	301 Add X21, X22, W21
	302 Move X0, [X24]
	303 Move W8, [X0+309]
	304 Move TEMP, X8
	305 And TEMP, TEMP, 1
	306 Compare TEMP, 1
	307 JumpIfEqual {309}
	308 Call 0x1C5D684
	309 Move X8, [X0+192]
	310 Move X0, [X8+8]
	311 Move W8, [X0+309]
	312 Move TEMP, X8
	313 And TEMP, TEMP, 1
	314 Compare TEMP, 1
	315 JumpIfEqual {317}
	316 Call 0x1C5D684
	317 Move W8, [X0+224]
	318 Compare W8, 0
	319 JumpIfNotEqual {321}
	320 Call 0x1C17DFC
	321 Move X0, [X24]
	322 Move W8, [X0+309]
	323 Move TEMP, X8
	324 And TEMP, TEMP, 1
	325 Compare TEMP, 1
	326 JumpIfEqual {328}
	327 Call 0x1C5D684
	328 Move X8, [X0+192]
	329 Move X22, [X8+40]
	330 Move X0, [X22+32]
	331 Move W8, [X0+309]
	332 Move TEMP, X8
	333 And TEMP, TEMP, 1
	334 Compare TEMP, 1
	335 JumpIfEqual {337}
	336 Call 0x1C5D684
	337 Move X8, [X0+192]
	338 Move X0, [X8+8]
	339 Move W8, [X0+309]
	340 Move TEMP, X8
	341 And TEMP, TEMP, 1
	342 Compare TEMP, 1
	343 JumpIfEqual {345}
	344 Call 0x1C5D684
	345 Move W8, [X0+224]
	346 Compare W8, 0
	347 JumpIfNotEqual {349}
	348 Call 0x1C17DFC
	349 Move X0, [X22+32]
	350 Move W8, [X0+309]
	351 Move TEMP, X8
	352 And TEMP, TEMP, 1
	353 Compare TEMP, 1
	354 JumpIfEqual {356}
	355 Call 0x1C5D684
	356 Move X8, [X0+192]
	357 Move X0, [X8+8]
	358 Move W8, [X0+309]
	359 Move TEMP, X8
	360 And TEMP, TEMP, 1
	361 Compare TEMP, 1
	362 JumpIfEqual {364}
	363 Call 0x1C5D684
	364 Move X8, [X0+184]
	365 NotImplemented "Instruction LDRSW not yet implemented."
	366 NotImplemented "Instruction CMP not yet implemented."
	367 NotImplemented "Instruction LDRH not yet implemented."
	368 Add X20, X20, 1
	369 NotImplemented "Instruction STRH not yet implemented."
	370 Move X0, [X24]
	371 Move W8, [X0+309]
	372 Move TEMP, X8
	373 And TEMP, TEMP, 1
	374 Compare TEMP, 1
	375 JumpIfEqual {377}
	376 Call 0x1C5D684
	377 Move X8, [X25]
	378 Move X9, [X0+192]
	379 Move W10, [X8+224]
	380 Move X23, [X9+24]
	381 Compare W10, 0
	382 JumpIfNotEqual {385}
	383 Move X0, X8
	384 Call 0x1C17DFC
	385 Move X0, X23
	386 Move X1, X31
	387 Call Type.GetTypeFromHandle, X0
	388 Move X8, 0x18FA000
	389 Move X8, [X8+3448]
	390 Move X23, X0
	391 Move X1, X31
	392 Move X8, [X8]
	393 Move X0, X8
	394 Call Type.GetTypeFromHandle, X0
	395 Move X1, X0
	396 Move X0, X23
	397 Move X2, X31
	398 Call Type.op_Equality, X0, X1
	399 Move TEMP, X0
	400 And TEMP, TEMP, 1
	401 Compare TEMP, 1
	402 JumpIfNotEqual {473}
	403 Move X20, X31
	404 Add X21, X22, W21
	405 Move X0, [X24]
	406 Move W8, [X0+309]
	407 Move TEMP, X8
	408 And TEMP, TEMP, 1
	409 Compare TEMP, 1
	410 JumpIfEqual {412}
	411 Call 0x1C5D684
	412 Move X8, [X0+192]
	413 Move X0, [X8+8]
	414 Move W8, [X0+309]
	415 Move TEMP, X8
	416 And TEMP, TEMP, 1
	417 Compare TEMP, 1
	418 JumpIfEqual {420}
	419 Call 0x1C5D684
	420 Move W8, [X0+224]
	421 Compare W8, 0
	422 JumpIfNotEqual {424}
	423 Call 0x1C17DFC
	424 Move X0, [X24]
	425 Move W8, [X0+309]
	426 Move TEMP, X8
	427 And TEMP, TEMP, 1
	428 Compare TEMP, 1
	429 JumpIfEqual {431}
	430 Call 0x1C5D684
	431 Move X8, [X0+192]
	432 Move X22, [X8+40]
	433 Move X0, [X22+32]
	434 Move W8, [X0+309]
	435 Move TEMP, X8
	436 And TEMP, TEMP, 1
	437 Compare TEMP, 1
	438 JumpIfEqual {440}
	439 Call 0x1C5D684
	440 Move X8, [X0+192]
	441 Move X0, [X8+8]
	442 Move W8, [X0+309]
	443 Move TEMP, X8
	444 And TEMP, TEMP, 1
	445 Compare TEMP, 1
	446 JumpIfEqual {448}
	447 Call 0x1C5D684
	448 Move W8, [X0+224]
	449 Compare W8, 0
	450 JumpIfNotEqual {452}
	451 Call 0x1C17DFC
	452 Move X0, [X22+32]
	453 Move W8, [X0+309]
	454 Move TEMP, X8
	455 And TEMP, TEMP, 1
	456 Compare TEMP, 1
	457 JumpIfEqual {459}
	458 Call 0x1C5D684
	459 Move X8, [X0+192]
	460 Move X0, [X8+8]
	461 Move W8, [X0+309]
	462 Move TEMP, X8
	463 And TEMP, TEMP, 1
	464 Compare TEMP, 1
	465 JumpIfEqual {467}
	466 Call 0x1C5D684
	467 Move X8, [X0+184]
	468 NotImplemented "Instruction LDRSW not yet implemented."
	469 NotImplemented "Instruction CMP not yet implemented."
	470 NotImplemented "Instruction LDRH not yet implemented."
	471 Add X20, X20, 1
	472 NotImplemented "Instruction STRH not yet implemented."
	473 Move X0, [X24]
	474 Move W8, [X0+309]
	475 Move TEMP, X8
	476 And TEMP, TEMP, 1
	477 Compare TEMP, 1
	478 JumpIfEqual {480}
	479 Call 0x1C5D684
	480 Move X8, [X25]
	481 Move X9, [X0+192]
	482 Move W10, [X8+224]
	483 Move X23, [X9+24]
	484 Compare W10, 0
	485 JumpIfNotEqual {488}
	486 Move X0, X8
	487 Call 0x1C17DFC
	488 Move X0, X23
	489 Move X1, X31
	490 Call Type.GetTypeFromHandle, X0
	491 Move X8, 0x18F9000
	492 Move X8, [X8+3488]
	493 Move X23, X0
	494 Move X1, X31
	495 Move X8, [X8]
	496 Move X0, X8
	497 Call Type.GetTypeFromHandle, X0
	498 Move X1, X0
	499 Move X0, X23
	500 Move X2, X31
	501 Call Type.op_Equality, X0, X1
	502 Move TEMP, X0
	503 And TEMP, TEMP, 1
	504 Compare TEMP, 1
	505 JumpIfNotEqual {576}
	506 Move X20, X31
	507 Add X21, X22, W21
	508 Move X0, [X24]
	509 Move W8, [X0+309]
	510 Move TEMP, X8
	511 And TEMP, TEMP, 1
	512 Compare TEMP, 1
	513 JumpIfEqual {515}
	514 Call 0x1C5D684
	515 Move X8, [X0+192]
	516 Move X0, [X8+8]
	517 Move W8, [X0+309]
	518 Move TEMP, X8
	519 And TEMP, TEMP, 1
	520 Compare TEMP, 1
	521 JumpIfEqual {523}
	522 Call 0x1C5D684
	523 Move W8, [X0+224]
	524 Compare W8, 0
	525 JumpIfNotEqual {527}
	526 Call 0x1C17DFC
	527 Move X0, [X24]
	528 Move W8, [X0+309]
	529 Move TEMP, X8
	530 And TEMP, TEMP, 1
	531 Compare TEMP, 1
	532 JumpIfEqual {534}
	533 Call 0x1C5D684
	534 Move X8, [X0+192]
	535 Move X22, [X8+40]
	536 Move X0, [X22+32]
	537 Move W8, [X0+309]
	538 Move TEMP, X8
	539 And TEMP, TEMP, 1
	540 Compare TEMP, 1
	541 JumpIfEqual {543}
	542 Call 0x1C5D684
	543 Move X8, [X0+192]
	544 Move X0, [X8+8]
	545 Move W8, [X0+309]
	546 Move TEMP, X8
	547 And TEMP, TEMP, 1
	548 Compare TEMP, 1
	549 JumpIfEqual {551}
	550 Call 0x1C5D684
	551 Move W8, [X0+224]
	552 Compare W8, 0
	553 JumpIfNotEqual {555}
	554 Call 0x1C17DFC
	555 Move X0, [X22+32]
	556 Move W8, [X0+309]
	557 Move TEMP, X8
	558 And TEMP, TEMP, 1
	559 Compare TEMP, 1
	560 JumpIfEqual {562}
	561 Call 0x1C5D684
	562 Move X8, [X0+192]
	563 Move X0, [X8+8]
	564 Move W8, [X0+309]
	565 Move TEMP, X8
	566 And TEMP, TEMP, 1
	567 Compare TEMP, 1
	568 JumpIfEqual {570}
	569 Call 0x1C5D684
	570 Move X8, [X0+184]
	571 NotImplemented "Instruction LDRSW not yet implemented."
	572 NotImplemented "Instruction CMP not yet implemented."
	573 Move W8, [X21+4]
	574 Add X20, X20, 1
	575 Move [X19+4], W8
	576 Move X0, [X24]
	577 Move W8, [X0+309]
	578 Move TEMP, X8
	579 And TEMP, TEMP, 1
	580 Compare TEMP, 1
	581 JumpIfEqual {583}
	582 Call 0x1C5D684
	583 Move X8, [X25]
	584 Move X9, [X0+192]
	585 Move W10, [X8+224]
	586 Move X23, [X9+24]
	587 Compare W10, 0
	588 JumpIfNotEqual {591}
	589 Move X0, X8
	590 Call 0x1C17DFC
	591 Move X0, X23
	592 Move X1, X31
	593 Call Type.GetTypeFromHandle, X0
	594 Move X8, 0x18F9000
	595 Move X8, [X8+3456]
	596 Move X23, X0
	597 Move X1, X31
	598 Move X8, [X8]
	599 Move X0, X8
	600 Call Type.GetTypeFromHandle, X0
	601 Move X1, X0
	602 Move X0, X23
	603 Move X2, X31
	604 Call Type.op_Equality, X0, X1
	605 Move TEMP, X0
	606 And TEMP, TEMP, 1
	607 Compare TEMP, 1
	608 JumpIfNotEqual {679}
	609 Move X20, X31
	610 Add X21, X22, W21
	611 Move X0, [X24]
	612 Move W8, [X0+309]
	613 Move TEMP, X8
	614 And TEMP, TEMP, 1
	615 Compare TEMP, 1
	616 JumpIfEqual {618}
	617 Call 0x1C5D684
	618 Move X8, [X0+192]
	619 Move X0, [X8+8]
	620 Move W8, [X0+309]
	621 Move TEMP, X8
	622 And TEMP, TEMP, 1
	623 Compare TEMP, 1
	624 JumpIfEqual {626}
	625 Call 0x1C5D684
	626 Move W8, [X0+224]
	627 Compare W8, 0
	628 JumpIfNotEqual {630}
	629 Call 0x1C17DFC
	630 Move X0, [X24]
	631 Move W8, [X0+309]
	632 Move TEMP, X8
	633 And TEMP, TEMP, 1
	634 Compare TEMP, 1
	635 JumpIfEqual {637}
	636 Call 0x1C5D684
	637 Move X8, [X0+192]
	638 Move X22, [X8+40]
	639 Move X0, [X22+32]
	640 Move W8, [X0+309]
	641 Move TEMP, X8
	642 And TEMP, TEMP, 1
	643 Compare TEMP, 1
	644 JumpIfEqual {646}
	645 Call 0x1C5D684
	646 Move X8, [X0+192]
	647 Move X0, [X8+8]
	648 Move W8, [X0+309]
	649 Move TEMP, X8
	650 And TEMP, TEMP, 1
	651 Compare TEMP, 1
	652 JumpIfEqual {654}
	653 Call 0x1C5D684
	654 Move W8, [X0+224]
	655 Compare W8, 0
	656 JumpIfNotEqual {658}
	657 Call 0x1C17DFC
	658 Move X0, [X22+32]
	659 Move W8, [X0+309]
	660 Move TEMP, X8
	661 And TEMP, TEMP, 1
	662 Compare TEMP, 1
	663 JumpIfEqual {665}
	664 Call 0x1C5D684
	665 Move X8, [X0+192]
	666 Move X0, [X8+8]
	667 Move W8, [X0+309]
	668 Move TEMP, X8
	669 And TEMP, TEMP, 1
	670 Compare TEMP, 1
	671 JumpIfEqual {673}
	672 Call 0x1C5D684
	673 Move X8, [X0+184]
	674 NotImplemented "Instruction LDRSW not yet implemented."
	675 NotImplemented "Instruction CMP not yet implemented."
	676 Move W8, [X21+4]
	677 Add X20, X20, 1
	678 Move [X19+4], W8
	679 Move X0, [X24]
	680 Move W8, [X0+309]
	681 Move TEMP, X8
	682 And TEMP, TEMP, 1
	683 Compare TEMP, 1
	684 JumpIfEqual {686}
	685 Call 0x1C5D684
	686 Move X8, [X25]
	687 Move X9, [X0+192]
	688 Move W10, [X8+224]
	689 Move X23, [X9+24]
	690 Compare W10, 0
	691 JumpIfNotEqual {694}
	692 Move X0, X8
	693 Call 0x1C17DFC
	694 Move X0, X23
	695 Move X1, X31
	696 Call Type.GetTypeFromHandle, X0
	697 Move X8, 0x18F9000
	698 Move X8, [X8+3496]
	699 Move X23, X0
	700 Move X1, X31
	701 Move X8, [X8]
	702 Move X0, X8
	703 Call Type.GetTypeFromHandle, X0
	704 Move X1, X0
	705 Move X0, X23
	706 Move X2, X31
	707 Call Type.op_Equality, X0, X1
	708 Move TEMP, X0
	709 And TEMP, TEMP, 1
	710 Compare TEMP, 1
	711 JumpIfNotEqual {782}
	712 Move X20, X31
	713 Add X21, X22, W21
	714 Move X0, [X24]
	715 Move W8, [X0+309]
	716 Move TEMP, X8
	717 And TEMP, TEMP, 1
	718 Compare TEMP, 1
	719 JumpIfEqual {721}
	720 Call 0x1C5D684
	721 Move X8, [X0+192]
	722 Move X0, [X8+8]
	723 Move W8, [X0+309]
	724 Move TEMP, X8
	725 And TEMP, TEMP, 1
	726 Compare TEMP, 1
	727 JumpIfEqual {729}
	728 Call 0x1C5D684
	729 Move W8, [X0+224]
	730 Compare W8, 0
	731 JumpIfNotEqual {733}
	732 Call 0x1C17DFC
	733 Move X0, [X24]
	734 Move W8, [X0+309]
	735 Move TEMP, X8
	736 And TEMP, TEMP, 1
	737 Compare TEMP, 1
	738 JumpIfEqual {740}
	739 Call 0x1C5D684
	740 Move X8, [X0+192]
	741 Move X22, [X8+40]
	742 Move X0, [X22+32]
	743 Move W8, [X0+309]
	744 Move TEMP, X8
	745 And TEMP, TEMP, 1
	746 Compare TEMP, 1
	747 JumpIfEqual {749}
	748 Call 0x1C5D684
	749 Move X8, [X0+192]
	750 Move X0, [X8+8]
	751 Move W8, [X0+309]
	752 Move TEMP, X8
	753 And TEMP, TEMP, 1
	754 Compare TEMP, 1
	755 JumpIfEqual {757}
	756 Call 0x1C5D684
	757 Move W8, [X0+224]
	758 Compare W8, 0
	759 JumpIfNotEqual {761}
	760 Call 0x1C17DFC
	761 Move X0, [X22+32]
	762 Move W8, [X0+309]
	763 Move TEMP, X8
	764 And TEMP, TEMP, 1
	765 Compare TEMP, 1
	766 JumpIfEqual {768}
	767 Call 0x1C5D684
	768 Move X8, [X0+192]
	769 Move X0, [X8+8]
	770 Move W8, [X0+309]
	771 Move TEMP, X8
	772 And TEMP, TEMP, 1
	773 Compare TEMP, 1
	774 JumpIfEqual {776}
	775 Call 0x1C5D684
	776 Move X8, [X0+184]
	777 NotImplemented "Instruction LDRSW not yet implemented."
	778 NotImplemented "Instruction CMP not yet implemented."
	779 Move X8, [X21+8]
	780 Add X20, X20, 1
	781 Move [X19+8], X8
	782 Move X0, [X24]
	783 Move W8, [X0+309]
	784 Move TEMP, X8
	785 And TEMP, TEMP, 1
	786 Compare TEMP, 1
	787 JumpIfEqual {789}
	788 Call 0x1C5D684
	789 Move X8, [X25]
	790 Move X9, [X0+192]
	791 Move W10, [X8+224]
	792 Move X23, [X9+24]
	793 Compare W10, 0
	794 JumpIfNotEqual {797}
	795 Move X0, X8
	796 Call 0x1C17DFC
	797 Move X0, X23
	798 Move X1, X31
	799 Call Type.GetTypeFromHandle, X0
	800 Move X8, 0x18F9000
	801 Move X8, [X8+3464]
	802 Move X23, X0
	803 Move X1, X31
	804 Move X8, [X8]
	805 Move X0, X8
	806 Call Type.GetTypeFromHandle, X0
	807 Move X1, X0
	808 Move X0, X23
	809 Move X2, X31
	810 Call Type.op_Equality, X0, X1
	811 Move TEMP, X0
	812 And TEMP, TEMP, 1
	813 Compare TEMP, 1
	814 JumpIfNotEqual {885}
	815 Move X20, X31
	816 Add X21, X22, W21
	817 Move X0, [X24]
	818 Move W8, [X0+309]
	819 Move TEMP, X8
	820 And TEMP, TEMP, 1
	821 Compare TEMP, 1
	822 JumpIfEqual {824}
	823 Call 0x1C5D684
	824 Move X8, [X0+192]
	825 Move X0, [X8+8]
	826 Move W8, [X0+309]
	827 Move TEMP, X8
	828 And TEMP, TEMP, 1
	829 Compare TEMP, 1
	830 JumpIfEqual {832}
	831 Call 0x1C5D684
	832 Move W8, [X0+224]
	833 Compare W8, 0
	834 JumpIfNotEqual {836}
	835 Call 0x1C17DFC
	836 Move X0, [X24]
	837 Move W8, [X0+309]
	838 Move TEMP, X8
	839 And TEMP, TEMP, 1
	840 Compare TEMP, 1
	841 JumpIfEqual {843}
	842 Call 0x1C5D684
	843 Move X8, [X0+192]
	844 Move X22, [X8+40]
	845 Move X0, [X22+32]
	846 Move W8, [X0+309]
	847 Move TEMP, X8
	848 And TEMP, TEMP, 1
	849 Compare TEMP, 1
	850 JumpIfEqual {852}
	851 Call 0x1C5D684
	852 Move X8, [X0+192]
	853 Move X0, [X8+8]
	854 Move W8, [X0+309]
	855 Move TEMP, X8
	856 And TEMP, TEMP, 1
	857 Compare TEMP, 1
	858 JumpIfEqual {860}
	859 Call 0x1C5D684
	860 Move W8, [X0+224]
	861 Compare W8, 0
	862 JumpIfNotEqual {864}
	863 Call 0x1C17DFC
	864 Move X0, [X22+32]
	865 Move W8, [X0+309]
	866 Move TEMP, X8
	867 And TEMP, TEMP, 1
	868 Compare TEMP, 1
	869 JumpIfEqual {871}
	870 Call 0x1C5D684
	871 Move X8, [X0+192]
	872 Move X0, [X8+8]
	873 Move W8, [X0+309]
	874 Move TEMP, X8
	875 And TEMP, TEMP, 1
	876 Compare TEMP, 1
	877 JumpIfEqual {879}
	878 Call 0x1C5D684
	879 Move X8, [X0+184]
	880 NotImplemented "Instruction LDRSW not yet implemented."
	881 NotImplemented "Instruction CMP not yet implemented."
	882 Move X8, [X21+8]
	883 Add X20, X20, 1
	884 Move [X19+8], X8
	885 Move X0, [X24]
	886 Move W8, [X0+309]
	887 Move TEMP, X8
	888 And TEMP, TEMP, 1
	889 Compare TEMP, 1
	890 JumpIfEqual {892}
	891 Call 0x1C5D684
	892 Move X8, [X25]
	893 Move X9, [X0+192]
	894 Move W10, [X8+224]
	895 Move X23, [X9+24]
	896 Compare W10, 0
	897 JumpIfNotEqual {900}
	898 Move X0, X8
	899 Call 0x1C17DFC
	900 Move X0, X23
	901 Move X1, X31
	902 Call Type.GetTypeFromHandle, X0
	903 Move X8, 0x18FA000
	904 Move X8, [X8+2688]
	905 Move X23, X0
	906 Move X1, X31
	907 Move X8, [X8]
	908 Move X0, X8
	909 Call Type.GetTypeFromHandle, X0
	910 Move X1, X0
	911 Move X0, X23
	912 Move X2, X31
	913 Call Type.op_Equality, X0, X1
	914 Move TEMP, X0
	915 And TEMP, TEMP, 1
	916 Compare TEMP, 1
	917 JumpIfNotEqual {988}
	918 Move X20, X31
	919 Add X21, X22, W21
	920 Move X0, [X24]
	921 Move W8, [X0+309]
	922 Move TEMP, X8
	923 And TEMP, TEMP, 1
	924 Compare TEMP, 1
	925 JumpIfEqual {927}
	926 Call 0x1C5D684
	927 Move X8, [X0+192]
	928 Move X0, [X8+8]
	929 Move W8, [X0+309]
	930 Move TEMP, X8
	931 And TEMP, TEMP, 1
	932 Compare TEMP, 1
	933 JumpIfEqual {935}
	934 Call 0x1C5D684
	935 Move W8, [X0+224]
	936 Compare W8, 0
	937 JumpIfNotEqual {939}
	938 Call 0x1C17DFC
	939 Move X0, [X24]
	940 Move W8, [X0+309]
	941 Move TEMP, X8
	942 And TEMP, TEMP, 1
	943 Compare TEMP, 1
	944 JumpIfEqual {946}
	945 Call 0x1C5D684
	946 Move X8, [X0+192]
	947 Move X22, [X8+40]
	948 Move X0, [X22+32]
	949 Move W8, [X0+309]
	950 Move TEMP, X8
	951 And TEMP, TEMP, 1
	952 Compare TEMP, 1
	953 JumpIfEqual {955}
	954 Call 0x1C5D684
	955 Move X8, [X0+192]
	956 Move X0, [X8+8]
	957 Move W8, [X0+309]
	958 Move TEMP, X8
	959 And TEMP, TEMP, 1
	960 Compare TEMP, 1
	961 JumpIfEqual {963}
	962 Call 0x1C5D684
	963 Move W8, [X0+224]
	964 Compare W8, 0
	965 JumpIfNotEqual {967}
	966 Call 0x1C17DFC
	967 Move X0, [X22+32]
	968 Move W8, [X0+309]
	969 Move TEMP, X8
	970 And TEMP, TEMP, 1
	971 Compare TEMP, 1
	972 JumpIfEqual {974}
	973 Call 0x1C5D684
	974 Move X8, [X0+192]
	975 Move X0, [X8+8]
	976 Move W8, [X0+309]
	977 Move TEMP, X8
	978 And TEMP, TEMP, 1
	979 Compare TEMP, 1
	980 JumpIfEqual {982}
	981 Call 0x1C5D684
	982 Move X8, [X0+184]
	983 NotImplemented "Instruction LDRSW not yet implemented."
	984 NotImplemented "Instruction CMP not yet implemented."
	985 Move V0, [X21+4]
	986 Add X20, X20, 1
	987 Move [X19+4], S0
	988 Move X0, [X24]
	989 Move W8, [X0+309]
	990 Move TEMP, X8
	991 And TEMP, TEMP, 1
	992 Compare TEMP, 1
	993 JumpIfEqual {995}
	994 Call 0x1C5D684
	995 Move X8, [X25]
	996 Move X9, [X0+192]
	997 Move W10, [X8+224]
	998 Move X23, [X9+24]
	999 Compare W10, 0
	1000 JumpIfNotEqual {1003}
	1001 Move X0, X8
	1002 Call 0x1C17DFC
	1003 Move X0, X23
	1004 Move X1, X31
	1005 Call Type.GetTypeFromHandle, X0
	1006 Move X8, 0x18FA000
	1007 Move X8, [X8+2680]
	1008 Move X23, X0
	1009 Move X1, X31
	1010 Move X8, [X8]
	1011 Move X0, X8
	1012 Call Type.GetTypeFromHandle, X0
	1013 Move X1, X0
	1014 Move X0, X23
	1015 Move X2, X31
	1016 Call Type.op_Equality, X0, X1
	1017 Move TEMP, X0
	1018 And TEMP, TEMP, 1
	1019 Compare TEMP, 1
	1020 JumpIfNotEqual {1101}
	1021 Move X20, X31
	1022 Add X21, X22, W21
	1023 Move X0, [X24]
	1024 Move W8, [X0+309]
	1025 Move TEMP, X8
	1026 And TEMP, TEMP, 1
	1027 Compare TEMP, 1
	1028 JumpIfEqual {1030}
	1029 Call 0x1C5D684
	1030 Move X8, [X0+192]
	1031 Move X0, [X8+8]
	1032 Move W8, [X0+309]
	1033 Move TEMP, X8
	1034 And TEMP, TEMP, 1
	1035 Compare TEMP, 1
	1036 JumpIfEqual {1038}
	1037 Call 0x1C5D684
	1038 Move W8, [X0+224]
	1039 Compare W8, 0
	1040 JumpIfNotEqual {1042}
	1041 Call 0x1C17DFC
	1042 Move X0, [X24]
	1043 Move W8, [X0+309]
	1044 Move TEMP, X8
	1045 And TEMP, TEMP, 1
	1046 Compare TEMP, 1
	1047 JumpIfEqual {1049}
	1048 Call 0x1C5D684
	1049 Move X8, [X0+192]
	1050 Move X22, [X8+40]
	1051 Move X0, [X22+32]
	1052 Move W8, [X0+309]
	1053 Move TEMP, X8
	1054 And TEMP, TEMP, 1
	1055 Compare TEMP, 1
	1056 JumpIfEqual {1058}
	1057 Call 0x1C5D684
	1058 Move X8, [X0+192]
	1059 Move X0, [X8+8]
	1060 Move W8, [X0+309]
	1061 Move TEMP, X8
	1062 And TEMP, TEMP, 1
	1063 Compare TEMP, 1
	1064 JumpIfEqual {1066}
	1065 Call 0x1C5D684
	1066 Move W8, [X0+224]
	1067 Compare W8, 0
	1068 JumpIfNotEqual {1070}
	1069 Call 0x1C17DFC
	1070 Move X0, [X22+32]
	1071 Move W8, [X0+309]
	1072 Move TEMP, X8
	1073 And TEMP, TEMP, 1
	1074 Compare TEMP, 1
	1075 JumpIfEqual {1077}
	1076 Call 0x1C5D684
	1077 Move X8, [X0+192]
	1078 Move X0, [X8+8]
	1079 Move W8, [X0+309]
	1080 Move TEMP, X8
	1081 And TEMP, TEMP, 1
	1082 Compare TEMP, 1
	1083 JumpIfEqual {1085}
	1084 Call 0x1C5D684
	1085 Move X8, [X0+184]
	1086 NotImplemented "Instruction LDRSW not yet implemented."
	1087 NotImplemented "Instruction CMP not yet implemented."
	1088 Move V0, [X21+8]
	1089 Add X20, X20, 1
	1090 Move [X19+8], D0
	1091 Move X20, [X31+64]
	1092 Move X19, [X31+72]
	1093 Move X22, [X31+48]
	1094 Move X21, [X31+56]
	1095 Move X24, [X31+32]
	1096 Move X23, [X31+40]
	1097 Move X26, [X31+16]
	1098 Move X25, [X31+24]
	1099 Move X30, [X31+80]
	1100 Return 
	1101 Move X0, 0x18D2000
	1102 Move X0, [X0+2880]
	1103 Call 0x1C17D08
	1104 Call 0x1C17F10
	1105 Move X19, X0
	1106 Move X0, 0x18FB000
	1107 Move X0, [X0+2704]
	1108 Call 0x1C17D08
	1109 Move X1, X0
	1110 Move X0, X19
	1111 Move X2, X31
	1112 Call NotSupportedException..ctor, X0, X1
	1113 Move X0, X19
	1114 Move X1, X20
	1115 Call 0x1C17DEC

Method: System.Void .ctor(ref System.Numerics.Register existingRegister)

Disassembly:
	0x02822828 TBNZ X8, 0x0, 0x2822830
	0x0282282C BL 0x1C5C684
	0x02822830 LDR X8, [X27]

ISIL:
	001 Move V0, [X1]
	002 Move [X0], V0
	003 Return 

Method: T get_Item(System.Int32 index)

Disassembly:
	0x02822834 LDR X9, [X0 + 0xC0]
	0x02822838 LDR W10, [X8 + 0xE0]
	0x0282283C LDR X23, [X9 + 0x18]
	0x02822840 CBNZ W10, 0x282284C
	0x02822844 MOV X0, X8
	0x02822848 BL 0x1C16DFC
	0x0282284C MOV X0, X23
	0x02822850 MOV X1, X31
	0x02822854 BL 0x338C698
	0x02822858 ADRP X8, 0x18F8000
	0x0282285C LDR X8, [X8 + 0xD80]
	0x02822860 MOV X23, X0
	0x02822864 MOV X1, X31
	0x02822868 LDR X8, [X8]
	0x0282286C MOV X0, X8
	0x02822870 BL 0x338C698
	0x02822874 MOV X1, X0
	0x02822878 MOV X0, X23
	0x0282287C MOV X2, X31
	0x02822880 BL 0x3395194
	0x02822884 TBZ X0, 0x0, 0x28228B8
	0x02822888 LDR W8, [X19]
	0x0282288C CMP W8, W22
	0x02822890 B.NE 0x2822AD4
	0x02822894 LDR W8, [X19 + 0x4]
	0x02822898 CMP W8, W26
	0x0282289C B.NE 0x2822AD4
	0x028228A0 LDR W8, [X19 + 0x8]
	0x028228A4 CMP W8, W21
	0x028228A8 B.NE 0x2822AD4
	0x028228AC LDR W8, [X19 + 0xC]
	0x028228B0 CMP W8, W25
	0x028228B4 B 0x282299C
	0x028228B8 LDR X0, [X20 + 0x20]
	0x028228BC LDRB W8, [X0 + 0x135]
	0x028228C0 TBNZ X8, 0x0, 0x28228C8
	0x028228C4 BL 0x1C5C684
	0x028228C8 LDR X8, [X27]
	0x028228CC LDR X9, [X0 + 0xC0]
	0x028228D0 LDR W10, [X8 + 0xE0]
	0x028228D4 LDR X23, [X9 + 0x18]
	0x028228D8 CBNZ W10, 0x28228E4
	0x028228DC MOV X0, X8
	0x028228E0 BL 0x1C16DFC
	0x028228E4 MOV X0, X23
	0x028228E8 MOV X1, X31
	0x028228EC BL 0x338C698
	0x028228F0 ADRP X8, 0x18F8000
	0x028228F4 LDR X8, [X8 + 0xDA8]
	0x028228F8 MOV X23, X0
	0x028228FC MOV X1, X31
	0x02822900 LDR X8, [X8]
	0x02822904 MOV X0, X8
	0x02822908 BL 0x338C698
	0x0282290C MOV X1, X0
	0x02822910 MOV X0, X23
	0x02822914 MOV X2, X31
	0x02822918 BL 0x3395194
	0x0282291C TBNZ X0, 0x0, 0x2822988
	0x02822920 LDR X0, [X20 + 0x20]
	0x02822924 LDRB W8, [X0 + 0x135]
	0x02822928 TBNZ X8, 0x0, 0x2822930
	0x0282292C BL 0x1C5C684
	0x02822930 LDR X8, [X27]
	0x02822934 LDR X9, [X0 + 0xC0]
	0x02822938 LDR W10, [X8 + 0xE0]
	0x0282293C LDR X23, [X9 + 0x18]
	0x02822940 CBNZ W10, 0x282294C
	0x02822944 MOV X0, X8
	0x02822948 BL 0x1C16DFC
	0x0282294C MOV X0, X23
	0x02822950 MOV X1, X31
	0x02822954 BL 0x338C698
	0x02822958 ADRP X8, 0x18F8000
	0x0282295C LDR X8, [X8 + 0xD88]
	0x02822960 MOV X23, X0
	0x02822964 MOV X1, X31
	0x02822968 LDR X8, [X8]
	0x0282296C MOV X0, X8
	0x02822970 BL 0x338C698
	0x02822974 MOV X1, X0
	0x02822978 MOV X0, X23
	0x0282297C MOV X2, X31
	0x02822980 BL 0x3395194
	0x02822984 TBZ X0, 0x0, 0x28229A4
	0x02822988 LDR X8, [X19]
	0x0282298C CMP X8, X22
	0x02822990 B.NE 0x2822AD4
	0x02822994 LDR X8, [X19 + 0x8]
	0x02822998 CMP X8, X21
	0x0282299C CSET W0, EQ
	0x028229A0 B 0x2822AD8
	0x028229A4 LDR X0, [X20 + 0x20]
	0x028229A8 LDRB W8, [X0 + 0x135]
	0x028229AC TBNZ X8, 0x0, 0x28229B4
	0x028229B0 BL 0x1C5C684
	0x028229B4 LDR X8, [X27]
	0x028229B8 LDR X9, [X0 + 0xC0]
	0x028229BC LDR W10, [X8 + 0xE0]
	0x028229C0 LDR X23, [X9 + 0x18]
	0x028229C4 CBNZ W10, 0x28229D0
	0x028229C8 MOV X0, X8
	0x028229CC BL 0x1C16DFC
	0x028229D0 MOV X0, X23
	0x028229D4 MOV X1, X31
	0x028229D8 BL 0x338C698
	0x028229DC ADRP X8, 0x18F9000
	0x028229E0 LDR X8, [X8 + 0xA80]
	0x028229E4 MOV X23, X0
	0x028229E8 MOV X1, X31
	0x028229EC LDR X8, [X8]
	0x028229F0 MOV X0, X8
	0x028229F4 BL 0x338C698
	0x028229F8 MOV X1, X0
	0x028229FC MOV X0, X23
	0x02822A00 MOV X2, X31
	0x02822A04 BL 0x3395194
	0x02822A08 TBZ X0, 0x0, 0x2822A4C
	0x02822A0C LDR V0, [X19]
	0x02822A10 FMOV S1, W22
	0x02822A14 FCMP S0, S1
	0x02822A18 B.NE 0x2822AD4
	0x02822A1C LDR V0, [X19 + 0x4]
	0x02822A20 FMOV S1, W26
	0x02822A24 FCMP S0, S1
	0x02822A28 B.NE 0x2822AD4
	0x02822A2C LDR V0, [X19 + 0x8]
	0x02822A30 FMOV S1, W21
	0x02822A34 FCMP S0, S1
	0x02822A38 B.NE 0x2822AD4
	0x02822A3C LDR V0, [X19 + 0xC]
	0x02822A40 FMOV S1, W25
	0x02822A44 FCMP S0, S1
	0x02822A48 B 0x282299C
	0x02822A4C LDR X0, [X20 + 0x20]
	0x02822A50 LDRB W8, [X0 + 0x135]
	0x02822A54 TBNZ X8, 0x0, 0x2822A5C
	0x02822A58 BL 0x1C5C684
	0x02822A5C LDR X8, [X27]
	0x02822A60 LDR X9, [X0 + 0xC0]
	0x02822A64 LDR W10, [X8 + 0xE0]
	0x02822A68 LDR X23, [X9 + 0x18]
	0x02822A6C CBNZ W10, 0x2822A78
	0x02822A70 MOV X0, X8
	0x02822A74 BL 0x1C16DFC
	0x02822A78 MOV X0, X23
	0x02822A7C MOV X1, X31
	0x02822A80 BL 0x338C698
	0x02822A84 ADRP X8, 0x18F9000
	0x02822A88 LDR X8, [X8 + 0xA78]
	0x02822A8C MOV X23, X0
	0x02822A90 MOV X1, X31
	0x02822A94 LDR X8, [X8]
	0x02822A98 MOV X0, X8
	0x02822A9C BL 0x338C698
	0x02822AA0 MOV X1, X0
	0x02822AA4 MOV X0, X23
	0x02822AA8 MOV X2, X31
	0x02822AAC BL 0x3395194
	0x02822AB0 TBZ X0, 0x0, 0x2822B04
	0x02822AB4 LDR V0, [X19]
	0x02822AB8 FMOV D1, X22
	0x02822ABC FCMP D0, D1
	0x02822AC0 B.NE 0x2822AD4
	0x02822AC4 LDR V0, [X19 + 0x8]
	0x02822AC8 FMOV D1, X21
	0x02822ACC FCMP D0, D1
	0x02822AD0 B 0x282299C
	0x02822AD4 MOV W0, W31
	0x02822AD8 LDR X8, [X24 + 0x28]
	0x02822ADC LDR X9, [X31 + 0x18]
	0x02822AE0 CMP X8, X9
	0x02822AE4 B.NE 0x2822B40
	0x02822AE8 LDP X20, X19, [X31 + 0x60]
	0x02822AEC LDP X22, X21, [X31 + 0x50]
	0x02822AF0 LDP X24, X23, [X31 + 0x40]
	0x02822AF4 LDP X26, X25, [X31 + 0x30]
	0x02822AF8 LDP X30, X27, [X31 + 0x20]
	0x02822AFC ADD X31, X31, 0x70
	0x02822B00 RET
	0x02822B04 ADRP X0, 0x18D1000
	0x02822B08 LDR X0, [X0 + 0xB40]
	0x02822B0C BL 0x1C16D08
	0x02822B10 BL 0x1C16F10
	0x02822B14 MOV X19, X0
	0x02822B18 ADRP X0, 0x18FA000
	0x02822B1C LDR X0, [X0 + 0xA90]
	0x02822B20 BL 0x1C16D08
	0x02822B24 MOV X1, X0
	0x02822B28 MOV X0, X19
	0x02822B2C MOV X2, X31
	0x02822B30 BL 0x3379A44
	0x02822B34 MOV X0, X19
	0x02822B38 MOV X1, X20
	0x02822B3C BL 0x1C16DEC
	0x02822B40 BL 0x3EB1B20
	0x02822B44 SUB X31, X31, 0x70
	0x02822B48 STP X30, X25, [X31 + 0x30]
	0x02822B4C STP X24, X23, [X31 + 0x40]
	0x02822B50 STP X22, X21, [X31 + 0x50]
	0x02822B54 STP X20, X19, [X31 + 0x60]
	0x02822B58 ADRP X21, 0x1BB8000
	0x02822B5C LDRB W8, [X21 + 0xA77]
	0x02822B60 MOV X20, X1
	0x02822B64 MOV X19, X0
	0x02822B68 TBNZ X8, 0x0, 0x2822C7C
	0x02822B6C ADRP X0, 0x18F8000
	0x02822B70 LDR X0, [X0 + 0xD68]
	0x02822B74 BL 0x1C16CF4
	0x02822B78 ADRP X0, 0x18D2000
	0x02822B7C LDR X0, [X0 + 0x9D8]
	0x02822B80 BL 0x1C16CF4
	0x02822B84 ADRP X0, 0x18F9000
	0x02822B88 LDR X0, [X0 + 0xA78]
	0x02822B8C BL 0x1C16CF4
	0x02822B90 ADRP X0, 0x18D4000
	0x02822B94 LDR X0, [X0 + 0x978]
	0x02822B98 BL 0x1C16CF4
	0x02822B9C ADRP X0, 0x18FB000
	0x02822BA0 LDR X0, [X0 + 0xEE8]
	0x02822BA4 BL 0x1C16CF4
	0x02822BA8 ADRP X0, 0x18F8000
	0x02822BAC LDR X0, [X0 + 0xD78]
	0x02822BB0 BL 0x1C16CF4
	0x02822BB4 ADRP X0, 0x18D5000
	0x02822BB8 LDR X0, [X0 + 0x628]
	0x02822BBC BL 0x1C16CF4
	0x02822BC0 ADRP X0, 0x18F8000
	0x02822BC4 LDR X0, [X0 + 0xD80]
	0x02822BC8 BL 0x1C16CF4
	0x02822BCC ADRP X0, 0x18D1000
	0x02822BD0 LDR X0, [X0 + 0x758]
	0x02822BD4 BL 0x1C16CF4
	0x02822BD8 ADRP X0, 0x18F8000
	0x02822BDC LDR X0, [X0 + 0xD88]
	0x02822BE0 BL 0x1C16CF4
	0x02822BE4 ADRP X0, 0x18D3000
	0x02822BE8 LDR X0, [X0 + 0xA60]
	0x02822BEC BL 0x1C16CF4
	0x02822BF0 ADRP X0, 0x18F8000
	0x02822BF4 LDR X0, [X0 + 0xD90]
	0x02822BF8 BL 0x1C16CF4
	0x02822BFC ADRP X0, 0x18FA000
	0x02822C00 LDR X0, [X0 + 0x6B0]
	0x02822C04 BL 0x1C16CF4
	0x02822C08 ADRP X0, 0x18F9000
	0x02822C0C LDR X0, [X0 + 0xA80]
	0x02822C10 BL 0x1C16CF4
	0x02822C14 ADRP X0, 0x18D1000
	0x02822C18 LDR X0, [X0 + 0xA90]
	0x02822C1C BL 0x1C16CF4
	0x02822C20 ADRP X0, 0x18D1000
	0x02822C24 LDR X0, [X0 + 0x6C0]
	0x02822C28 BL 0x1C16CF4
	0x02822C2C ADRP X0, 0x18F8000
	0x02822C30 LDR X0, [X0 + 0xD98]
	0x02822C34 BL 0x1C16CF4
	0x02822C38 ADRP X0, 0x18D6000
	0x02822C3C LDR X0, [X0 + 0x658]
	0x02822C40 BL 0x1C16CF4
	0x02822C44 ADRP X0, 0x18F8000
	0x02822C48 LDR X0, [X0 + 0xDA0]
	0x02822C4C BL 0x1C16CF4
	0x02822C50 ADRP X0, 0x18D9000
	0x02822C54 LDR X0, [X0 + 0x720]
	0x02822C58 BL 0x1C16CF4
	0x02822C5C ADRP X0, 0x18F8000
	0x02822C60 LDR X0, [X0 + 0xDA8]
	0x02822C64 BL 0x1C16CF4
	0x02822C68 ADRP X0, 0x18D2000
	0x02822C6C LDR X0, [X0 + 0x758]
	0x02822C70 BL 0x1C16CF4
	0x02822C74 MOVZ W8, 0x1
	0x02822C78 STRB W8, [X21 + 0xA77]
	0x02822C7C ADRP X24, 0x18D1000
	0x02822C80 LDR X24, [X24 + 0x6C0]
	0x02822C84 MOV X0, X31
	0x02822C88 STRB W31, [X31 + 0x2C]
	0x02822C8C STRB W31, [X31 + 0x28]
	0x02822C90 STRH W31, [X31 + 0x24]
	0x02822C94 STRH W31, [X31 + 0x20]
	0x02822C98 STP X31, X31, [X31 + 0x10]
	0x02822C9C STR X31, [X31 + 0x8]
	0x02822CA0 STR W31, [X31 + 0x4]
	0x02822CA4 BL 0x32E15B8
	0x02822CA8 MOV X23, X20
	0x02822CAC LDR X8, [X23 + 0x20]!
	0x02822CB0 MOV W21, W0
	0x02822CB4 LDRB W9, [X8 + 0x135]
	0x02822CB8 TBNZ X9, 0x0, 0x2822CC8
	0x02822CBC MOV X0, X8
	0x02822CC0 BL 0x1C5C684
	0x02822CC4 MOV X8, X0
	0x02822CC8 LDR X0, [X24]
	0x02822CCC LDR X8, [X8 + 0xC0]
	0x02822CD0 ADRP X25, 0x18F8000
	0x02822CD4 LDR W9, [X0 + 0xE0]
	0x02822CD8 LDR X22, [X8 + 0x18]
	0x02822CDC LDR X25, [X25 + 0xD68]
	0x02822CE0 CBNZ W9, 0x2822CE8
	0x02822CE4 BL 0x1C16DFC
	0x02822CE8 MOV X0, X22
	0x02822CEC MOV X1, X31
	0x02822CF0 BL 0x338C698
	0x02822CF4 LDR X8, [X25]
	0x02822CF8 MOV X22, X0
	0x02822CFC MOV X1, X31
	0x02822D00 MOV X0, X8
	0x02822D04 BL 0x338C698
	0x02822D08 MOV X1, X0
	0x02822D0C MOV X0, X22
	0x02822D10 MOV X2, X31
	0x02822D14 BL 0x3395194
	0x02822D18 TBZ X21, 0x0, 0x2822EC4
	0x02822D1C TBZ X0, 0x0, 0x28230D8
	0x02822D20 ADRP X24, 0x18D2000
	0x02822D24 ADRP X25, 0x18FB000
	0x02822D28 LDR X24, [X24 + 0x9D8]
	0x02822D2C LDR X25, [X25 + 0xEE8]
	0x02822D30 MOV W21, W31
	0x02822D34 MOV W20, W31
	0x02822D38 LDR X0, [X23]
	0x02822D3C LDRB W8, [X0 + 0x135]
	0x02822D40 TBNZ X8, 0x0, 0x2822D48
	0x02822D44 BL 0x1C5C684
	0x02822D48 LDR X8, [X0 + 0xC0]
	0x02822D4C LDR X0, [X8 + 0x8]
	0x02822D50 LDRB W8, [X0 + 0x135]
	0x02822D54 TBNZ X8, 0x0, 0x2822D5C
	0x02822D58 BL 0x1C5C684
	0x02822D5C LDR W8, [X0 + 0xE0]
	0x02822D60 CBNZ W8, 0x2822D68
	0x02822D64 BL 0x1C16DFC
	0x02822D68 LDR X0, [X23]
	0x02822D6C LDRB W8, [X0 + 0x135]
	0x02822D70 TBNZ X8, 0x0, 0x2822D78
	0x02822D74 BL 0x1C5C684
	0x02822D78 LDR X8, [X0 + 0xC0]
	0x02822D7C LDR X22, [X8 + 0x28]
	0x02822D80 LDR X0, [X22 + 0x20]
	0x02822D84 LDRB W8, [X0 + 0x135]
	0x02822D88 TBNZ X8, 0x0, 0x2822D90
	0x02822D8C BL 0x1C5C684
	0x02822D90 LDR X8, [X0 + 0xC0]
	0x02822D94 LDR X0, [X8 + 0x8]
	0x02822D98 LDRB W8, [X0 + 0x135]
	0x02822D9C TBNZ X8, 0x0, 0x2822DA4
	0x02822DA0 BL 0x1C5C684
	0x02822DA4 LDR W8, [X0 + 0xE0]
	0x02822DA8 CBNZ W8, 0x2822DB0
	0x02822DAC BL 0x1C16DFC
	0x02822DB0 LDR X0, [X22 + 0x20]
	0x02822DB4 LDRB W8, [X0 + 0x135]
	0x02822DB8 TBNZ X8, 0x0, 0x2822DC0
	0x02822DBC BL 0x1C5C684
	0x02822DC0 LDR X8, [X0 + 0xC0]
	0x02822DC4 LDR X0, [X8 + 0x8]
	0x02822DC8 LDRB W8, [X0 + 0x135]
	0x02822DCC TBNZ X8, 0x0, 0x2822DD4
	0x02822DD0 BL 0x1C5C684
	0x02822DD4 LDR X8, [X0 + 0xB8]
	0x02822DD8 LDR W8, [X8]
	0x02822DDC CMP W21, W8
	0x02822DE0 B.GE 0x2824B08
	0x02822DE4 LDR X0, [X23]
	0x02822DE8 LDRB W8, [X0 + 0x135]
	0x02822DEC TBNZ X8, 0x0, 0x2822DF4
	0x02822DF0 BL 0x1C5C684
	0x02822DF4 LDR X8, [X0 + 0xC0]
	0x02822DF8 LDR X0, [X8 + 0x8]
	0x02822DFC LDRB W8, [X0 + 0x135]
	0x02822E00 TBNZ X8, 0x0, 0x2822E08
	0x02822E04 BL 0x1C5C684
	0x02822E08 LDR W8, [X0 + 0xE0]
	0x02822E0C CBNZ W8, 0x2822E14
	0x02822E10 BL 0x1C16DFC
	0x02822E14 LDR X0, [X23]
	0x02822E18 LDRB W8, [X0 + 0x135]
	0x02822E1C TBNZ X8, 0x0, 0x2822E24
	0x02822E20 BL 0x1C5C684
	0x02822E24 LDR X8, [X0 + 0xC0]
	0x02822E28 MOV X0, X19
	0x02822E2C MOV W1, W21
	0x02822E30 LDR X2, [X8 + 0x40]
	0x02822E34 BL 0x2821834
	0x02822E38 STRH W0, [X31]
	0x02822E3C LDR X0, [X23]
	0x02822E40 LDRB W8, [X0 + 0x135]
	0x02822E44 TBNZ X8, 0x0, 0x2822E4C
	0x02822E48 BL 0x1C5C684
	0x02822E4C LDR X8, [X0 + 0xC0]
	0x02822E50 ADD X1, X31, 0x0
	0x02822E54 LDR X0, [X8 + 0x20]
	0x02822E58 BL 0x1C16E04
	0x02822E5C CBZ X0, 0x2824DFC
	0x02822E60 LDR X8, [X0]
	0x02822E64 LDR X1, [X24]
	0x02822E68 LDR X8, [X8 + 0x40]
	0x02822E6C LDR X9, [X1 + 0x40]
	0x02822E70 CMP X8, X9
	0x02822E74 B.NE 0x2824E00
	0x02822E78 BL 0x1C16E08
	0x02822E7C LDRB W8, [X0]
	0x02822E80 ADD X0, X31, 0x2C
	0x02822E84 MOV X1, X31
	0x02822E88 STRB W8, [X31 + 0x2C]
	0x02822E8C BL 0x3319718
	0x02822E90 LDR X8, [X25]
	0x02822E94 MOV W22, W0
	0x02822E98 LDR W9, [X8 + 0xE0]
	0x02822E9C CBNZ W9, 0x2822EA8
	0x02822EA0 MOV X0, X8
	0x02822EA4 BL 0x1C16DFC
	0x02822EA8 MOV W0, W20
	0x02822EAC MOV W1, W22
	0x02822EB0 MOV X2, X31
	0x02822EB4 BL 0x32E15C0
	0x02822EB8 MOV W20, W0
	0x02822EBC ADD W21, W21, 0x1
	0x02822EC0 B 0x2822D38
	0x02822EC4 TBZ X0, 0x0, 0x28232E4
	0x02822EC8 MOV X0, X19
	0x02822ECC MOV X1, X31
	0x02822ED0 BL 0x3319718
	0x02822ED4 ADRP X8, 0x18FB000
	0x02822ED8 LDR X8, [X8 + 0xEE8]
	0x02822EDC MOV W20, W0
	0x02822EE0 LDR X8, [X8]
	0x02822EE4 LDR W9, [X8 + 0xE0]
	0x02822EE8 CBNZ W9, 0x2822EF4
	0x02822EEC MOV X0, X8
	0x02822EF0 BL 0x1C16DFC
	0x02822EF4 MOV W0, W31
	0x02822EF8 MOV W1, W20
	0x02822EFC MOV X2, X31
	0x02822F00 BL 0x32E15C0
	0x02822F04 MOV W20, W0
	0x02822F08 ADD X0, X19, 0x1
	0x02822F0C MOV X1, X31
	0x02822F10 BL 0x3319718
	0x02822F14 MOV W1, W0
	0x02822F18 MOV W0, W20
	0x02822F1C MOV X2, X31
	0x02822F20 BL 0x32E15C0
	0x02822F24 MOV W20, W0
	0x02822F28 ADD X0, X19, 0x2
	0x02822F2C MOV X1, X31
	0x02822F30 BL 0x3319718
	0x02822F34 MOV W1, W0
	0x02822F38 MOV W0, W20
	0x02822F3C MOV X2, X31
	0x02822F40 BL 0x32E15C0
	0x02822F44 MOV W20, W0
	0x02822F48 ADD X0, X19, 0x3
	0x02822F4C MOV X1, X31
	0x02822F50 BL 0x3319718
	0x02822F54 MOV W1, W0
	0x02822F58 MOV W0, W20
	0x02822F5C MOV X2, X31
	0x02822F60 BL 0x32E15C0
	0x02822F64 MOV W20, W0
	0x02822F68 ADD X0, X19, 0x4
	0x02822F6C MOV X1, X31
	0x02822F70 BL 0x3319718
	0x02822F74 MOV W1, W0
	0x02822F78 MOV W0, W20
	0x02822F7C MOV X2, X31
	0x02822F80 BL 0x32E15C0
	0x02822F84 MOV W20, W0
	0x02822F88 ADD X0, X19, 0x5
	0x02822F8C MOV X1, X31
	0x02822F90 BL 0x3319718
	0x02822F94 MOV W1, W0
	0x02822F98 MOV W0, W20
	0x02822F9C MOV X2, X31
	0x02822FA0 BL 0x32E15C0
	0x02822FA4 MOV W20, W0
	0x02822FA8 ADD X0, X19, 0x6
	0x02822FAC MOV X1, X31
	0x02822FB0 BL 0x3319718
	0x02822FB4 MOV W1, W0
	0x02822FB8 MOV W0, W20
	0x02822FBC MOV X2, X31
	0x02822FC0 BL 0x32E15C0
	0x02822FC4 MOV W20, W0
	0x02822FC8 ADD X0, X19, 0x7
	0x02822FCC MOV X1, X31
	0x02822FD0 BL 0x3319718
	0x02822FD4 MOV W1, W0
	0x02822FD8 MOV W0, W20
	0x02822FDC MOV X2, X31
	0x02822FE0 BL 0x32E15C0
	0x02822FE4 MOV W20, W0
	0x02822FE8 ADD X0, X19, 0x8
	0x02822FEC MOV X1, X31
	0x02822FF0 BL 0x3319718
	0x02822FF4 MOV W1, W0
	0x02822FF8 MOV W0, W20
	0x02822FFC MOV X2, X31
	0x02823000 BL 0x32E15C0
	0x02823004 MOV W20, W0
	0x02823008 ADD X0, X19, 0x9
	0x0282300C MOV X1, X31
	0x02823010 BL 0x3319718
	0x02823014 MOV W1, W0
	0x02823018 MOV W0, W20
	0x0282301C MOV X2, X31
	0x02823020 BL 0x32E15C0
	0x02823024 MOV W20, W0
	0x02823028 ADD X0, X19, 0xA
	0x0282302C MOV X1, X31
	0x02823030 BL 0x3319718
	0x02823034 MOV W1, W0
	0x02823038 MOV W0, W20
	0x0282303C MOV X2, X31
	0x02823040 BL 0x32E15C0
	0x02823044 MOV W20, W0
	0x02823048 ADD X0, X19, 0xB
	0x0282304C MOV X1, X31
	0x02823050 BL 0x3319718
	0x02823054 MOV W1, W0
	0x02823058 MOV W0, W20
	0x0282305C MOV X2, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x1BB9000
	011 Move W8, [X22+2677]
	012 Move X19, X2
	013 Move W20, W1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {84}
	019 Move X0, 0x18F9000
	020 Move X0, [X0+3432]
	021 Call 0x1C17CF4
	022 Move X0, 0x18D3000
	023 Move X0, [X0+2520]
	024 Call 0x1C17CF4
	025 Move X0, 0x18FA000
	026 Move X0, [X0+2680]
	027 Call 0x1C17CF4
	028 Move X0, 0x18D5000
	029 Move X0, [X0+2424]
	030 Call 0x1C17CF4
	031 Move X0, 0x18F9000
	032 Move X0, [X0+3448]
	033 Call 0x1C17CF4
	034 Move X0, 0x18D6000
	035 Move X0, [X0+1576]
	036 Call 0x1C17CF4
	037 Move X0, 0x18F9000
	038 Move X0, [X0+3456]
	039 Call 0x1C17CF4
	040 Move X0, 0x18D2000
	041 Move X0, [X0+1880]
	042 Call 0x1C17CF4
	043 Move X0, 0x18F9000
	044 Move X0, [X0+3464]
	045 Call 0x1C17CF4
	046 Move X0, 0x18D4000
	047 Move X0, [X0+2656]
	048 Call 0x1C17CF4
	049 Move X0, 0x18F9000
	050 Move X0, [X0+3472]
	051 Call 0x1C17CF4
	052 Move X0, 0x18FB000
	053 Move X0, [X0+1712]
	054 Call 0x1C17CF4
	055 Move X0, 0x18FA000
	056 Move X0, [X0+2688]
	057 Call 0x1C17CF4
	058 Move X0, 0x18D2000
	059 Move X0, [X0+2704]
	060 Call 0x1C17CF4
	061 Move X0, 0x18D2000
	062 Move X0, [X0+1728]
	063 Call 0x1C17CF4
	064 Move X0, 0x18F9000
	065 Move X0, [X0+3480]
	066 Call 0x1C17CF4
	067 Move X0, 0x18D7000
	068 Move X0, [X0+1624]
	069 Call 0x1C17CF4
	070 Move X0, 0x18F9000
	071 Move X0, [X0+3488]
	072 Call 0x1C17CF4
	073 Move X0, 0x18DA000
	074 Move X0, [X0+1824]
	075 Call 0x1C17CF4
	076 Move X0, 0x18F9000
	077 Move X0, [X0+3496]
	078 Call 0x1C17CF4
	079 Move X0, 0x18D3000
	080 Move X0, [X0+1880]
	081 Call 0x1C17CF4
	082 Move W8, 1
	083 Move [X22+2677], W8
	084 Move X23, X19
	085 Add X23, X23, 32
	086 Move X0, [X23]
	087 Move W8, [X0+309]
	088 Move TEMP, X8
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {93}
	092 Call 0x1C5D684
	093 Move X8, [X0+192]
	094 Move X0, [X8+8]
	095 Move W8, [X0+309]
	096 Move TEMP, X8
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {101}
	100 Call 0x1C5D684
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 Move X0, [X23]
	106 Move W8, [X0+309]
	107 Move TEMP, X8
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfEqual {112}
	111 Call 0x1C5D684
	112 Move X8, [X0+192]
	113 Move X22, [X8+40]
	114 Move X0, [X22+32]
	115 Move W8, [X0+309]
	116 Move TEMP, X8
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfEqual {121}
	120 Call 0x1C5D684
	121 Move X8, [X0+192]
	122 Move X0, [X8+8]
	123 Move W8, [X0+309]
	124 Move TEMP, X8
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {129}
	128 Call 0x1C5D684
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move X0, [X22+32]
	134 Move W8, [X0+309]
	135 Move TEMP, X8
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfEqual {140}
	139 Call 0x1C5D684
	140 Move X8, [X0+192]
	141 Move X0, [X8+8]
	142 Move W8, [X0+309]
	143 Move TEMP, X8
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfEqual {148}
	147 Call 0x1C5D684
	148 Move TEMP, X20
	149 And TEMP, TEMP, -2147483648
	150 Compare TEMP, -2147483648
	151 JumpIfEqual {596}
	152 Move X8, [X0+184]
	153 Move W8, [X8]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X0, [X23]
	156 Move X24, 0x18D2000
	157 Move W8, [X0+309]
	158 Move X24, [X24+1728]
	159 Move TEMP, X8
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfEqual {164}
	163 Call 0x1C5D684
	164 Move X8, [X24]
	165 Move X9, [X0+192]
	166 Move X25, 0x18F9000
	167 Move W10, [X8+224]
	168 Move X22, [X9+24]
	169 Move X25, [X25+3432]
	170 Compare W10, 0
	171 JumpIfNotEqual {174}
	172 Move X0, X8
	173 Call 0x1C17DFC
	174 Move X0, X22
	175 Move X1, X31
	176 Call Type.GetTypeFromHandle, X0
	177 Move X8, [X25]
	178 Move X22, X0
	179 Move X1, X31
	180 Move X0, X8
	181 Call Type.GetTypeFromHandle, X0
	182 Move X1, X0
	183 Move X0, X22
	184 Move X2, X31
	185 Call Type.op_Equality, X0, X1
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {236}
	190 Move X9, 0x18D3000
	191 Move W8, [X21]
	192 Move X9, [X9+2520]
	193 Add X1, X31, 8
	194 Move [X31+8], W8
	195 Move X0, [X9]
	196 Call 0x1C17E04
	197 Move X8, [X23]
	198 Move X19, X0
	199 Move W9, [X8+309]
	200 Move TEMP, X9
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfEqual {207}
	204 Move X0, X8
	205 Call 0x1C5D684
	206 Move X8, X0
	207 Move X8, [X8+192]
	208 Move X1, [X8+32]
	209 Move W8, [X1+309]
	210 Move TEMP, X8
	211 And TEMP, TEMP, 1
	212 Compare TEMP, 1
	213 JumpIfEqual {217}
	214 Move X0, X1
	215 Call 0x1C5D684
	216 Move X1, X0
	217 Compare X19, 0
	218 JumpIfEqual {372}
	219 Move X8, [X19]
	220 Move X9, [X1+64]
	221 Move X0, X19
	222 Move X8, [X8+64]
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Call 0x1C17E08
	225 NotImplemented "Instruction LDRH not yet implemented."
	226 Move X20, [X31+64]
	227 Move X19, [X31+72]
	228 Move X22, [X31+48]
	229 Move X21, [X31+56]
	230 Move X24, [X31+32]
	231 Move X23, [X31+40]
	232 Move X30, [X31+16]
	233 Move X25, [X31+24]
	234 Add X31, X31, 80
	235 Return X0
	236 Move X0, [X23]
	237 Move W8, [X0+309]
	238 Move TEMP, X8
	239 And TEMP, TEMP, 1
	240 Compare TEMP, 1
	241 JumpIfEqual {243}
	242 Call 0x1C5D684
	243 Move X8, [X24]
	244 Move X9, [X0+192]
	245 Move W10, [X8+224]
	246 Move X22, [X9+24]
	247 Compare W10, 0
	248 JumpIfNotEqual {251}
	249 Move X0, X8
	250 Call 0x1C17DFC
	251 Move X0, X22
	252 Move X1, X31
	253 Call Type.GetTypeFromHandle, X0
	254 Move X8, 0x18F9000
	255 Move X8, [X8+3472]
	256 Move X22, X0
	257 Move X1, X31
	258 Move X8, [X8]
	259 Move X0, X8
	260 Call Type.GetTypeFromHandle, X0
	261 Move X1, X0
	262 Move X0, X22
	263 Move X2, X31
	264 Call Type.op_Equality, X0, X1
	265 Move TEMP, X0
	266 And TEMP, TEMP, 1
	267 Compare TEMP, 1
	268 JumpIfNotEqual {274}
	269 Move X9, 0x18FB000
	270 Move W8, [X21]
	271 Move X9, [X9+1712]
	272 Move [X31+8], W8
	273 Move X0, [X9]
	274 Move X0, [X23]
	275 Move W8, [X0+309]
	276 Move TEMP, X8
	277 And TEMP, TEMP, 1
	278 Compare TEMP, 1
	279 JumpIfEqual {281}
	280 Call 0x1C5D684
	281 Move X8, [X24]
	282 Move X9, [X0+192]
	283 Move W10, [X8+224]
	284 Move X22, [X9+24]
	285 Compare W10, 0
	286 JumpIfNotEqual {289}
	287 Move X0, X8
	288 Call 0x1C17DFC
	289 Move X0, X22
	290 Move X1, X31
	291 Call Type.GetTypeFromHandle, X0
	292 Move X8, 0x18F9000
	293 Move X8, [X8+3480]
	294 Move X22, X0
	295 Move X1, X31
	296 Move X8, [X8]
	297 Move X0, X8
	298 Call Type.GetTypeFromHandle, X0
	299 Move X1, X0
	300 Move X0, X22
	301 Move X2, X31
	302 Call Type.op_Equality, X0, X1
	303 Move TEMP, X0
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfNotEqual {310}
	307 Move X9, 0x18D7000
	308 NotImplemented "Instruction LDRH not yet implemented."
	309 Move X9, [X9+1624]
	310 Move X0, [X23]
	311 Move W8, [X0+309]
	312 Move TEMP, X8
	313 And TEMP, TEMP, 1
	314 Compare TEMP, 1
	315 JumpIfEqual {317}
	316 Call 0x1C5D684
	317 Move X8, [X24]
	318 Move X9, [X0+192]
	319 Move W10, [X8+224]
	320 Move X22, [X9+24]
	321 Compare W10, 0
	322 JumpIfNotEqual {325}
	323 Move X0, X8
	324 Call 0x1C17DFC
	325 Move X0, X22
	326 Move X1, X31
	327 Call Type.GetTypeFromHandle, X0
	328 Move X8, 0x18F9000
	329 Move X8, [X8+3448]
	330 Move X22, X0
	331 Move X1, X31
	332 Move X8, [X8]
	333 Move X0, X8
	334 Call Type.GetTypeFromHandle, X0
	335 Move X1, X0
	336 Move X0, X22
	337 Move X2, X31
	338 Call Type.op_Equality, X0, X1
	339 Move TEMP, X0
	340 And TEMP, TEMP, 1
	341 Compare TEMP, 1
	342 JumpIfNotEqual {373}
	343 Move X9, 0x18D6000
	344 NotImplemented "Instruction LDRH not yet implemented."
	345 Move X9, [X9+1576]
	346 Move X0, [X9]
	347 NotImplemented "Instruction STRH not yet implemented."
	348 Add X1, X31, 8
	349 Call 0x1C17E04
	350 Move X8, [X23]
	351 Move X19, X0
	352 Move W9, [X8+309]
	353 Move TEMP, X9
	354 And TEMP, TEMP, 1
	355 Compare TEMP, 1
	356 JumpIfEqual {360}
	357 Move X0, X8
	358 Call 0x1C5D684
	359 Move X8, X0
	360 Move X8, [X8+192]
	361 Move X1, [X8+32]
	362 Move W8, [X1+309]
	363 Move TEMP, X8
	364 And TEMP, TEMP, 1
	365 Compare TEMP, 1
	366 JumpIfEqual {370}
	367 Move X0, X1
	368 Call 0x1C5D684
	369 Move X1, X0
	370 Compare X19, 0
	371 JumpIfNotEqual {219}
	372 Call 0x1C17F20
	373 Move X0, [X23]
	374 Move W8, [X0+309]
	375 Move TEMP, X8
	376 And TEMP, TEMP, 1
	377 Compare TEMP, 1
	378 JumpIfEqual {380}
	379 Call 0x1C5D684
	380 Move X8, [X24]
	381 Move X9, [X0+192]
	382 Move W10, [X8+224]
	383 Move X22, [X9+24]
	384 Compare W10, 0
	385 JumpIfNotEqual {388}
	386 Move X0, X8
	387 Call 0x1C17DFC
	388 Move X0, X22
	389 Move X1, X31
	390 Call Type.GetTypeFromHandle, X0
	391 Move X8, 0x18F9000
	392 Move X8, [X8+3488]
	393 Move X22, X0
	394 Move X1, X31
	395 Move X8, [X8]
	396 Move X0, X8
	397 Call Type.GetTypeFromHandle, X0
	398 Move X1, X0
	399 Move X0, X22
	400 Move X2, X31
	401 Call Type.op_Equality, X0, X1
	402 Move TEMP, X0
	403 And TEMP, TEMP, 1
	404 Compare TEMP, 1
	405 JumpIfNotEqual {409}
	406 Move X9, 0x18DA000
	407 Move W8, [X21]
	408 Move X9, [X9+1824]
	409 Move X0, [X23]
	410 Move W8, [X0+309]
	411 Move TEMP, X8
	412 And TEMP, TEMP, 1
	413 Compare TEMP, 1
	414 JumpIfEqual {416}
	415 Call 0x1C5D684
	416 Move X8, [X24]
	417 Move X9, [X0+192]
	418 Move W10, [X8+224]
	419 Move X22, [X9+24]
	420 Compare W10, 0
	421 JumpIfNotEqual {424}
	422 Move X0, X8
	423 Call 0x1C17DFC
	424 Move X0, X22
	425 Move X1, X31
	426 Call Type.GetTypeFromHandle, X0
	427 Move X8, 0x18F9000
	428 Move X8, [X8+3456]
	429 Move X22, X0
	430 Move X1, X31
	431 Move X8, [X8]
	432 Move X0, X8
	433 Call Type.GetTypeFromHandle, X0
	434 Move X1, X0
	435 Move X0, X22
	436 Move X2, X31
	437 Call Type.op_Equality, X0, X1
	438 Move TEMP, X0
	439 And TEMP, TEMP, 1
	440 Compare TEMP, 1
	441 JumpIfNotEqual {447}
	442 Move X9, 0x18D2000
	443 Move W8, [X21]
	444 Move X9, [X9+1880]
	445 Move X0, [X9]
	446 Move [X31+8], W8
	447 Move X0, [X23]
	448 Move W8, [X0+309]
	449 Move TEMP, X8
	450 And TEMP, TEMP, 1
	451 Compare TEMP, 1
	452 JumpIfEqual {454}
	453 Call 0x1C5D684
	454 Move X8, [X24]
	455 Move X9, [X0+192]
	456 Move W10, [X8+224]
	457 Move X22, [X9+24]
	458 Compare W10, 0
	459 JumpIfNotEqual {462}
	460 Move X0, X8
	461 Call 0x1C17DFC
	462 Move X0, X22
	463 Move X1, X31
	464 Call Type.GetTypeFromHandle, X0
	465 Move X8, 0x18F9000
	466 Move X8, [X8+3496]
	467 Move X22, X0
	468 Move X1, X31
	469 Move X8, [X8]
	470 Move X0, X8
	471 Call Type.GetTypeFromHandle, X0
	472 Move X1, X0
	473 Move X0, X22
	474 Move X2, X31
	475 Call Type.op_Equality, X0, X1
	476 Move TEMP, X0
	477 And TEMP, TEMP, 1
	478 Compare TEMP, 1
	479 JumpIfNotEqual {483}
	480 Move X9, 0x18D3000
	481 Move X8, [X21]
	482 Move X9, [X9+1880]
	483 Move X0, [X23]
	484 Move W8, [X0+309]
	485 Move TEMP, X8
	486 And TEMP, TEMP, 1
	487 Compare TEMP, 1
	488 JumpIfEqual {490}
	489 Call 0x1C5D684
	490 Move X8, [X24]
	491 Move X9, [X0+192]
	492 Move W10, [X8+224]
	493 Move X22, [X9+24]
	494 Compare W10, 0
	495 JumpIfNotEqual {498}
	496 Move X0, X8
	497 Call 0x1C17DFC
	498 Move X0, X22
	499 Move X1, X31
	500 Call Type.GetTypeFromHandle, X0
	501 Move X8, 0x18F9000
	502 Move X8, [X8+3464]
	503 Move X22, X0
	504 Move X1, X31
	505 Move X8, [X8]
	506 Move X0, X8
	507 Call Type.GetTypeFromHandle, X0
	508 Move X1, X0
	509 Move X0, X22
	510 Move X2, X31
	511 Call Type.op_Equality, X0, X1
	512 Move TEMP, X0
	513 And TEMP, TEMP, 1
	514 Compare TEMP, 1
	515 JumpIfNotEqual {521}
	516 Move X9, 0x18D4000
	517 Move X8, [X21]
	518 Move X9, [X9+2656]
	519 Move X0, [X9]
	520 Move [X31+8], X8
	521 Move X0, [X23]
	522 Move W8, [X0+309]
	523 Move TEMP, X8
	524 And TEMP, TEMP, 1
	525 Compare TEMP, 1
	526 JumpIfEqual {528}
	527 Call 0x1C5D684
	528 Move X8, [X24]
	529 Move X9, [X0+192]
	530 Move W10, [X8+224]
	531 Move X22, [X9+24]
	532 Compare W10, 0
	533 JumpIfNotEqual {536}
	534 Move X0, X8
	535 Call 0x1C17DFC
	536 Move X0, X22
	537 Move X1, X31
	538 Call Type.GetTypeFromHandle, X0
	539 Move X8, 0x18FA000
	540 Move X8, [X8+2688]
	541 Move X22, X0
	542 Move X1, X31
	543 Move X8, [X8]
	544 Move X0, X8
	545 Call Type.GetTypeFromHandle, X0
	546 Move X1, X0
	547 Move X0, X22
	548 Move X2, X31
	549 Call Type.op_Equality, X0, X1
	550 Move TEMP, X0
	551 And TEMP, TEMP, 1
	552 Compare TEMP, 1
	553 JumpIfNotEqual {558}
	554 Move X8, 0x18D2000
	555 Move V0, [X21]
	556 Move X8, [X8+2704]
	557 Move [X31+8], S0
	558 Move X0, [X23]
	559 Move W8, [X0+309]
	560 Move TEMP, X8
	561 And TEMP, TEMP, 1
	562 Compare TEMP, 1
	563 JumpIfEqual {565}
	564 Call 0x1C5D684
	565 Move X8, [X24]
	566 Move X9, [X0+192]
	567 Move W10, [X8+224]
	568 Move X22, [X9+24]
	569 Compare W10, 0
	570 JumpIfNotEqual {573}
	571 Move X0, X8
	572 Call 0x1C17DFC
	573 Move X0, X22
	574 Move X1, X31
	575 Call Type.GetTypeFromHandle, X0
	576 Move X8, 0x18FA000
	577 Move X8, [X8+2680]
	578 Move X22, X0
	579 Move X1, X31
	580 Move X8, [X8]
	581 Move X0, X8
	582 Call Type.GetTypeFromHandle, X0
	583 Move X1, X0
	584 Move X0, X22
	585 Move X2, X31
	586 Call Type.op_Equality, X0, X1
	587 Move TEMP, X0
	588 And TEMP, TEMP, 1
	589 Compare TEMP, 1
	590 JumpIfNotEqual {622}
	591 Move X8, 0x18D5000
	592 Move V0, [X21]
	593 Move X8, [X8+2424]
	594 Move [X31+8], D0
	595 Move X0, [X8]
	596 Move [X31+8], W20
	597 Move X0, 0x18D2000
	598 Move X0, [X0+1880]
	599 Call 0x1C17D08
	600 Add X1, X31, 8
	601 Call 0x1C17E04
	602 Move X20, X0
	603 Move X0, 0x18FC000
	604 Move X0, [X0+3808]
	605 Call 0x1C17D08
	606 Move X1, X20
	607 Move X2, X31
	608 Call SR.Format, X0, X1
	609 Move X20, X0
	610 Move X0, 0x18DC000
	611 Move X0, [X0+3960]
	612 Call 0x1C17D08
	613 Call 0x1C17F10
	614 Move X1, X20
	615 Move X2, X31
	616 Move X21, X0
	617 Call IndexOutOfRangeException..ctor, X0, X1
	618 Move X0, X21
	619 Move X1, X19
	620 Call 0x1C17DEC
	621 Call 0x1C181E0
	622 Move X0, 0x18D1000
	623 Move X0, [X0+2880]
	624 Call 0x1C17D08
	625 Call 0x1C17F10
	626 Move X20, X0
	627 Move X0, 0x18FA000
	628 Move X0, [X0+2704]
	629 Call 0x1C17D08
	630 Move X1, X0
	631 Move X0, X20
	632 Move X2, X31
	633 Call NotSupportedException..ctor, X0, X1
	634 Move X0, X20

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x02823060 BL 0x32E15C0
	0x02823064 MOV W20, W0
	0x02823068 ADD X0, X19, 0xC
	0x0282306C MOV X1, X31
	0x02823070 BL 0x3319718
	0x02823074 MOV W1, W0
	0x02823078 MOV W0, W20
	0x0282307C MOV X2, X31
	0x02823080 BL 0x32E15C0
	0x02823084 MOV W20, W0
	0x02823088 ADD X0, X19, 0xD
	0x0282308C MOV X1, X31
	0x02823090 BL 0x3319718
	0x02823094 MOV W1, W0
	0x02823098 MOV W0, W20
	0x0282309C MOV X2, X31
	0x028230A0 BL 0x32E15C0
	0x028230A4 MOV W20, W0
	0x028230A8 ADD X0, X19, 0xE
	0x028230AC MOV X1, X31
	0x028230B0 BL 0x3319718
	0x028230B4 MOV W1, W0
	0x028230B8 MOV W0, W20
	0x028230BC MOV X2, X31
	0x028230C0 BL 0x32E15C0
	0x028230C4 MOV W20, W0
	0x028230C8 ADD X0, X19, 0xF
	0x028230CC MOV X1, X31
	0x028230D0 BL 0x3319718
	0x028230D4 B 0x2824AF4
	0x028230D8 LDR X0, [X23]
	0x028230DC LDRB W8, [X0 + 0x135]
	0x028230E0 TBNZ X8, 0x0, 0x28230E8
	0x028230E4 BL 0x1C5C684
	0x028230E8 LDR X8, [X24]
	0x028230EC LDR X9, [X0 + 0xC0]
	0x028230F0 LDR W10, [X8 + 0xE0]
	0x028230F4 LDR X21, [X9 + 0x18]
	0x028230F8 CBNZ W10, 0x2823104
	0x028230FC MOV X0, X8
	0x02823100 BL 0x1C16DFC
	0x02823104 MOV X0, X21
	0x02823108 MOV X1, X31
	0x0282310C BL 0x338C698
	0x02823110 ADRP X8, 0x18F7000
	0x02823114 LDR X8, [X8 + 0xD90]
	0x02823118 MOV X21, X0
	0x0282311C MOV X1, X31
	0x02823120 LDR X8, [X8]
	0x02823124 MOV X0, X8
	0x02823128 BL 0x338C698
	0x0282312C MOV X1, X0
	0x02823130 MOV X0, X21
	0x02823134 MOV X2, X31
	0x02823138 BL 0x3395194
	0x0282313C TBZ X0, 0x0, 0x282355C
	0x02823140 ADRP X24, 0x18F9000
	0x02823144 ADRP X25, 0x18FA000
	0x02823148 LDR X24, [X24 + 0x6B0]
	0x0282314C LDR X25, [X25 + 0xEE8]
	0x02823150 MOV W21, W31
	0x02823154 MOV W20, W31
	0x02823158 LDR X0, [X23]
	0x0282315C LDRB W8, [X0 + 0x135]
	0x02823160 TBNZ X8, 0x0, 0x2823168
	0x02823164 BL 0x1C5C684
	0x02823168 LDR X8, [X0 + 0xC0]
	0x0282316C LDR X0, [X8 + 0x8]
	0x02823170 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X20, X2
	007 Move X21, X1
	008 Move X19, X0
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X8, [X8+192]
	018 Move X0, [X8]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Compare X21, 0
	026 JumpIfEqual {29}
	027 Move X8, [X21]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move W0, W31
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return X0
	035 Move X0, [X20+32]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X0+192]
	043 Move X0, [X8+8]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, [X20+32]
	055 Move W8, [X0+309]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {61}
	060 Call 0x1C5D684
	061 Move X8, [X0+192]
	062 Move X1, [X8]
	063 Move W8, [X1+309]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {71}
	068 Move X0, X1
	069 Call 0x1C5D684
	070 Move X1, X0
	071 Move X8, [X21]
	072 Move X9, [X1+64]
	073 Move X0, X21
	074 Move X8, [X8+64]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Call 0x1C17E08
	077 Move X8, X0
	078 Move X0, [X20+32]
	079 Move X21, [X8]
	080 Move X20, [X8+8]
	081 Move W9, [X0+309]
	082 Move TEMP, X9
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {87}
	086 Call 0x1C5D684
	087 Move X8, [X0+192]
	088 Move X0, X19
	089 Move X2, X20
	090 Move X20, [X31+16]
	091 Move X19, [X31+24]
	092 Move X3, [X8+56]
	093 Move X1, X21
	094 Move X30, [X31+32]
	095 Move X21, [X31+40]
	096 Call 0x1C181E0

Method: System.Boolean Equals(System.Numerics.Vector`1<T> other)

Disassembly:
	0x02823174 TBNZ X8, 0x0, 0x282317C
	0x02823178 BL 0x1C5C684
	0x0282317C LDR W8, [X0 + 0xE0]
	0x02823180 CBNZ W8, 0x2823188
	0x02823184 BL 0x1C16DFC
	0x02823188 LDR X0, [X23]
	0x0282318C LDRB W8, [X0 + 0x135]
	0x02823190 TBNZ X8, 0x0, 0x2823198
	0x02823194 BL 0x1C5C684
	0x02823198 LDR X8, [X0 + 0xC0]
	0x0282319C LDR X22, [X8 + 0x28]
	0x028231A0 LDR X0, [X22 + 0x20]
	0x028231A4 LDRB W8, [X0 + 0x135]
	0x028231A8 TBNZ X8, 0x0, 0x28231B0
	0x028231AC BL 0x1C5C684
	0x028231B0 LDR X8, [X0 + 0xC0]
	0x028231B4 LDR X0, [X8 + 0x8]
	0x028231B8 LDRB W8, [X0 + 0x135]
	0x028231BC TBNZ X8, 0x0, 0x28231C4
	0x028231C0 BL 0x1C5C684
	0x028231C4 LDR W8, [X0 + 0xE0]
	0x028231C8 CBNZ W8, 0x28231D0
	0x028231CC BL 0x1C16DFC
	0x028231D0 LDR X0, [X22 + 0x20]
	0x028231D4 LDRB W8, [X0 + 0x135]
	0x028231D8 TBNZ X8, 0x0, 0x28231E0
	0x028231DC BL 0x1C5C684
	0x028231E0 LDR X8, [X0 + 0xC0]
	0x028231E4 LDR X0, [X8 + 0x8]
	0x028231E8 LDRB W8, [X0 + 0x135]
	0x028231EC TBNZ X8, 0x0, 0x28231F4
	0x028231F0 BL 0x1C5C684
	0x028231F4 LDR X8, [X0 + 0xB8]
	0x028231F8 LDR W8, [X8]
	0x028231FC CMP W21, W8
	0x02823200 B.GE 0x2824B08
	0x02823204 LDR X0, [X23]
	0x02823208 LDRB W8, [X0 + 0x135]
	0x0282320C TBNZ X8, 0x0, 0x2823214
	0x02823210 BL 0x1C5C684
	0x02823214 LDR X8, [X0 + 0xC0]
	0x02823218 LDR X0, [X8 + 0x8]
	0x0282321C LDRB W8, [X0 + 0x135]
	0x02823220 TBNZ X8, 0x0, 0x2823228
	0x02823224 BL 0x1C5C684
	0x02823228 LDR W8, [X0 + 0xE0]
	0x0282322C CBNZ W8, 0x2823234
	0x02823230 BL 0x1C16DFC
	0x02823234 LDR X0, [X23]
	0x02823238 LDRB W8, [X0 + 0x135]
	0x0282323C TBNZ X8, 0x0, 0x2823244
	0x02823240 BL 0x1C5C684
	0x02823244 LDR X8, [X0 + 0xC0]
	0x02823248 MOV X0, X19
	0x0282324C MOV W1, W21
	0x02823250 LDR X2, [X8 + 0x40]
	0x02823254 BL 0x2821834
	0x02823258 STRH W0, [X31]
	0x0282325C LDR X0, [X23]
	0x02823260 LDRB W8, [X0 + 0x135]
	0x02823264 TBNZ X8, 0x0, 0x282326C
	0x02823268 BL 0x1C5C684
	0x0282326C LDR X8, [X0 + 0xC0]
	0x02823270 ADD X1, X31, 0x0
	0x02823274 LDR X0, [X8 + 0x20]
	0x02823278 BL 0x1C16E04
	0x0282327C CBZ X0, 0x2824DFC
	0x02823280 LDR X8, [X0]
	0x02823284 LDR X1, [X24]
	0x02823288 LDR X8, [X8 + 0x40]
	0x0282328C LDR X9, [X1 + 0x40]
	0x02823290 CMP X8, X9
	0x02823294 B.NE 0x2824E00
	0x02823298 BL 0x1C16E08
	0x0282329C LDRB W8, [X0]
	0x028232A0 ADD X0, X31, 0x28
	0x028232A4 MOV X1, X31
	0x028232A8 STRB W8, [X31 + 0x28]
	0x028232AC BL 0x338EF90
	0x028232B0 LDR X8, [X25]
	0x028232B4 MOV W22, W0
	0x028232B8 LDR W9, [X8 + 0xE0]
	0x028232BC CBNZ W9, 0x28232C8
	0x028232C0 MOV X0, X8
	0x028232C4 BL 0x1C16DFC
	0x028232C8 MOV W0, W20
	0x028232CC MOV W1, W22
	0x028232D0 MOV X2, X31
	0x028232D4 BL 0x32E15C0
	0x028232D8 MOV W20, W0
	0x028232DC ADD W21, W21, 0x1
	0x028232E0 B 0x2823158
	0x028232E4 LDR X0, [X23]
	0x028232E8 LDRB W8, [X0 + 0x135]
	0x028232EC TBNZ X8, 0x0, 0x28232F4
	0x028232F0 BL 0x1C5C684
	0x028232F4 LDR X8, [X24]
	0x028232F8 LDR X9, [X0 + 0xC0]
	0x028232FC LDR W10, [X8 + 0xE0]
	0x02823300 LDR X21, [X9 + 0x18]
	0x02823304 CBNZ W10, 0x2823310
	0x02823308 MOV X0, X8
	0x0282330C BL 0x1C16DFC
	0x02823310 MOV X0, X21
	0x02823314 MOV X1, X31
	0x02823318 BL 0x338C698
	0x0282331C ADRP X8, 0x18F7000
	0x02823320 LDR X8, [X8 + 0xD90]
	0x02823324 MOV X21, X0
	0x02823328 MOV X1, X31
	0x0282332C LDR X8, [X8]
	0x02823330 MOV X0, X8
	0x02823334 BL 0x338C698
	0x02823338 MOV X1, X0
	0x0282333C MOV X0, X21
	0x02823340 MOV X2, X31
	0x02823344 BL 0x3395194
	0x02823348 TBZ X0, 0x0, 0x2823768
	0x0282334C MOV X0, X19
	0x02823350 MOV X1, X31
	0x02823354 BL 0x338EF90
	0x02823358 ADRP X8, 0x18FA000
	0x0282335C LDR X8, [X8 + 0xEE8]
	0x02823360 MOV W20, W0
	0x02823364 LDR X8, [X8]
	0x02823368 LDR W9, [X8 + 0xE0]
	0x0282336C CBNZ W9, 0x2823378
	0x02823370 MOV X0, X8
	0x02823374 BL 0x1C16DFC
	0x02823378 MOV W0, W31
	0x0282337C MOV W1, W20
	0x02823380 MOV X2, X31
	0x02823384 BL 0x32E15C0
	0x02823388 MOV W20, W0
	0x0282338C ADD X0, X19, 0x1
	0x02823390 MOV X1, X31
	0x02823394 BL 0x338EF90
	0x02823398 MOV W1, W0
	0x0282339C MOV W0, W20
	0x028233A0 MOV X2, X31
	0x028233A4 BL 0x32E15C0
	0x028233A8 MOV W20, W0
	0x028233AC ADD X0, X19, 0x2
	0x028233B0 MOV X1, X31
	0x028233B4 BL 0x338EF90
	0x028233B8 MOV W1, W0
	0x028233BC MOV W0, W20
	0x028233C0 MOV X2, X31
	0x028233C4 BL 0x32E15C0
	0x028233C8 MOV W20, W0
	0x028233CC ADD X0, X19, 0x3
	0x028233D0 MOV X1, X31
	0x028233D4 BL 0x338EF90
	0x028233D8 MOV W1, W0
	0x028233DC MOV W0, W20
	0x028233E0 MOV X2, X31
	0x028233E4 BL 0x32E15C0
	0x028233E8 MOV W20, W0
	0x028233EC ADD X0, X19, 0x4
	0x028233F0 MOV X1, X31
	0x028233F4 BL 0x338EF90
	0x028233F8 MOV W1, W0
	0x028233FC MOV W0, W20
	0x02823400 MOV X2, X31
	0x02823404 BL 0x32E15C0
	0x02823408 MOV W20, W0
	0x0282340C ADD X0, X19, 0x5
	0x02823410 MOV X1, X31
	0x02823414 BL 0x338EF90
	0x02823418 MOV W1, W0
	0x0282341C MOV W0, W20
	0x02823420 MOV X2, X31
	0x02823424 BL 0x32E15C0
	0x02823428 MOV W20, W0
	0x0282342C ADD X0, X19, 0x6
	0x02823430 MOV X1, X31
	0x02823434 BL 0x338EF90
	0x02823438 MOV W1, W0
	0x0282343C MOV W0, W20
	0x02823440 MOV X2, X31
	0x02823444 BL 0x32E15C0
	0x02823448 MOV W20, W0
	0x0282344C ADD X0, X19, 0x7
	0x02823450 MOV X1, X31
	0x02823454 BL 0x338EF90
	0x02823458 MOV W1, W0
	0x0282345C MOV W0, W20
	0x02823460 MOV X2, X31
	0x02823464 BL 0x32E15C0
	0x02823468 MOV W20, W0
	0x0282346C ADD X0, X19, 0x8
	0x02823470 MOV X1, X31
	0x02823474 BL 0x338EF90
	0x02823478 MOV W1, W0
	0x0282347C MOV W0, W20
	0x02823480 MOV X2, X31
	0x02823484 BL 0x32E15C0
	0x02823488 MOV W20, W0
	0x0282348C ADD X0, X19, 0x9
	0x02823490 MOV X1, X31
	0x02823494 BL 0x338EF90
	0x02823498 MOV W1, W0
	0x0282349C MOV W0, W20
	0x028234A0 MOV X2, X31
	0x028234A4 BL 0x32E15C0
	0x028234A8 MOV W20, W0
	0x028234AC ADD X0, X19, 0xA
	0x028234B0 MOV X1, X31
	0x028234B4 BL 0x338EF90
	0x028234B8 MOV W1, W0
	0x028234BC MOV W0, W20
	0x028234C0 MOV X2, X31
	0x028234C4 BL 0x32E15C0
	0x028234C8 MOV W20, W0
	0x028234CC ADD X0, X19, 0xB
	0x028234D0 MOV X1, X31
	0x028234D4 BL 0x338EF90
	0x028234D8 MOV W1, W0
	0x028234DC MOV W0, W20
	0x028234E0 MOV X2, X31
	0x028234E4 BL 0x32E15C0
	0x028234E8 MOV W20, W0
	0x028234EC ADD X0, X19, 0xC
	0x028234F0 MOV X1, X31
	0x028234F4 BL 0x338EF90
	0x028234F8 MOV W1, W0
	0x028234FC MOV W0, W20
	0x02823500 MOV X2, X31
	0x02823504 BL 0x32E15C0
	0x02823508 MOV W20, W0
	0x0282350C ADD X0, X19, 0xD
	0x02823510 MOV X1, X31
	0x02823514 BL 0x338EF90
	0x02823518 MOV W1, W0
	0x0282351C MOV W0, W20
	0x02823520 MOV X2, X31
	0x02823524 BL 0x32E15C0
	0x02823528 MOV W20, W0
	0x0282352C ADD X0, X19, 0xE
	0x02823530 MOV X1, X31
	0x02823534 BL 0x338EF90
	0x02823538 MOV W1, W0
	0x0282353C MOV W0, W20
	0x02823540 MOV X2, X31
	0x02823544 BL 0x32E15C0
	0x02823548 MOV W20, W0
	0x0282354C ADD X0, X19, 0xF
	0x02823550 MOV X1, X31
	0x02823554 BL 0x338EF90
	0x02823558 B 0x2824AF4
	0x0282355C LDR X0, [X23]
	0x02823560 LDRB W8, [X0 + 0x135]
	0x02823564 TBNZ X8, 0x0, 0x282356C
	0x02823568 BL 0x1C5C684
	0x0282356C LDR X8, [X24]
	0x02823570 LDR X9, [X0 + 0xC0]
	0x02823574 LDR W10, [X8 + 0xE0]
	0x02823578 LDR X21, [X9 + 0x18]
	0x0282357C CBNZ W10, 0x2823588
	0x02823580 MOV X0, X8
	0x02823584 BL 0x1C16DFC
	0x02823588 MOV X0, X21
	0x0282358C MOV X1, X31
	0x02823590 BL 0x338C698
	0x02823594 ADRP X8, 0x18F7000
	0x02823598 LDR X8, [X8 + 0xD98]
	0x0282359C MOV X21, X0
	0x028235A0 MOV X1, X31
	0x028235A4 LDR X8, [X8]
	0x028235A8 MOV X0, X8
	0x028235AC BL 0x338C698
	0x028235B0 MOV X1, X0
	0x028235B4 MOV X0, X21
	0x028235B8 MOV X2, X31
	0x028235BC BL 0x3395194
	0x028235C0 TBZ X0, 0x0, 0x28238E0
	0x028235C4 ADRP X24, 0x18D5000
	0x028235C8 ADRP X25, 0x18FA000
	0x028235CC LDR X24, [X24 + 0x658]
	0x028235D0 LDR X25, [X25 + 0xEE8]
	0x028235D4 MOV W21, W31
	0x028235D8 MOV W20, W31
	0x028235DC LDR X0, [X23]
	0x028235E0 LDRB W8, [X0 + 0x135]
	0x028235E4 TBNZ X8, 0x0, 0x28235EC
	0x028235E8 BL 0x1C5C684
	0x028235EC LDR X8, [X0 + 0xC0]
	0x028235F0 LDR X0, [X8 + 0x8]
	0x028235F4 LDRB W8, [X0 + 0x135]
	0x028235F8 TBNZ X8, 0x0, 0x2823600
	0x028235FC BL 0x1C5C684
	0x02823600 LDR W8, [X0 + 0xE0]
	0x02823604 CBNZ W8, 0x282360C
	0x02823608 BL 0x1C16DFC
	0x0282360C LDR X0, [X23]
	0x02823610 LDRB W8, [X0 + 0x135]
	0x02823614 TBNZ X8, 0x0, 0x282361C
	0x02823618 BL 0x1C5C684
	0x0282361C LDR X8, [X0 + 0xC0]
	0x02823620 LDR X22, [X8 + 0x28]
	0x02823624 LDR X0, [X22 + 0x20]
	0x02823628 LDRB W8, [X0 + 0x135]
	0x0282362C TBNZ X8, 0x0, 0x2823634
	0x02823630 BL 0x1C5C684
	0x02823634 LDR X8, [X0 + 0xC0]
	0x02823638 LDR X0, [X8 + 0x8]
	0x0282363C LDRB W8, [X0 + 0x135]
	0x02823640 TBNZ X8, 0x0, 0x2823648
	0x02823644 BL 0x1C5C684
	0x02823648 LDR W8, [X0 + 0xE0]
	0x0282364C CBNZ W8, 0x2823654
	0x02823650 BL 0x1C16DFC
	0x02823654 LDR X0, [X22 + 0x20]
	0x02823658 LDRB W8, [X0 + 0x135]
	0x0282365C TBNZ X8, 0x0, 0x2823664
	0x02823660 BL 0x1C5C684
	0x02823664 LDR X8, [X0 + 0xC0]
	0x02823668 LDR X0, [X8 + 0x8]
	0x0282366C LDRB W8, [X0 + 0x135]
	0x02823670 TBNZ X8, 0x0, 0x2823678
	0x02823674 BL 0x1C5C684
	0x02823678 LDR X8, [X0 + 0xB8]
	0x0282367C LDR W8, [X8]
	0x02823680 CMP W21, W8
	0x02823684 B.GE 0x2824B08
	0x02823688 LDR X0, [X23]
	0x0282368C LDRB W8, [X0 + 0x135]
	0x02823690 TBNZ X8, 0x0, 0x2823698
	0x02823694 BL 0x1C5C684
	0x02823698 LDR X8, [X0 + 0xC0]
	0x0282369C LDR X0, [X8 + 0x8]
	0x028236A0 LDRB W8, [X0 + 0x135]
	0x028236A4 TBNZ X8, 0x0, 0x28236AC
	0x028236A8 BL 0x1C5C684
	0x028236AC LDR W8, [X0 + 0xE0]
	0x028236B0 CBNZ W8, 0x28236B8
	0x028236B4 BL 0x1C16DFC
	0x028236B8 LDR X0, [X23]
	0x028236BC LDRB W8, [X0 + 0x135]
	0x028236C0 TBNZ X8, 0x0, 0x28236C8
	0x028236C4 BL 0x1C5C684
	0x028236C8 LDR X8, [X0 + 0xC0]
	0x028236CC MOV X0, X19
	0x028236D0 MOV W1, W21
	0x028236D4 LDR X2, [X8 + 0x40]
	0x028236D8 BL 0x2821834
	0x028236DC STRH W0, [X31]
	0x028236E0 LDR X0, [X23]
	0x028236E4 LDRB W8, [X0 + 0x135]
	0x028236E8 TBNZ X8, 0x0, 0x28236F0
	0x028236EC BL 0x1C5C684
	0x028236F0 LDR X8, [X0 + 0xC0]
	0x028236F4 ADD X1, X31, 0x0
	0x028236F8 LDR X0, [X8 + 0x20]
	0x028236FC BL 0x1C16E04
	0x02823700 CBZ X0, 0x2824DFC
	0x02823704 LDR X8, [X0]
	0x02823708 LDR X1, [X24]
	0x0282370C LDR X8, [X8 + 0x40]
	0x02823710 LDR X9, [X1 + 0x40]
	0x02823714 CMP X8, X9
	0x02823718 B.NE 0x2824E00
	0x0282371C BL 0x1C16E08
	0x02823720 LDRH W8, [X0]
	0x02823724 ADD X0, X31, 0x24
	0x02823728 MOV X1, X31
	0x0282372C STRH W8, [X31 + 0x24]
	0x02823730 BL 0x3398CDC
	0x02823734 LDR X8, [X25]
	0x02823738 MOV W22, W0
	0x0282373C LDR W9, [X8 + 0xE0]
	0x02823740 CBNZ W9, 0x282374C
	0x02823744 MOV X0, X8
	0x02823748 BL 0x1C16DFC
	0x0282374C MOV W0, W20
	0x02823750 MOV W1, W22
	0x02823754 MOV X2, X31
	0x02823758 BL 0x32E15C0
	0x0282375C MOV W20, W0
	0x02823760 ADD W21, W21, 0x1
	0x02823764 B 0x28235DC
	0x02823768 LDR X0, [X23]
	0x0282376C LDRB W8, [X0 + 0x135]
	0x02823770 TBNZ X8, 0x0, 0x2823778
	0x02823774 BL 0x1C5C684
	0x02823778 LDR X8, [X24]
	0x0282377C LDR X9, [X0 + 0xC0]
	0x02823780 LDR W10, [X8 + 0xE0]
	0x02823784 LDR X21, [X9 + 0x18]
	0x02823788 CBNZ W10, 0x2823794
	0x0282378C MOV X0, X8
	0x02823790 BL 0x1C16DFC
	0x02823794 MOV X0, X21
	0x02823798 MOV X1, X31
	0x0282379C BL 0x338C698
	0x028237A0 ADRP X8, 0x18F7000
	0x028237A4 LDR X8, [X8 + 0xD98]
	0x028237A8 MOV X21, X0
	0x028237AC MOV X1, X31
	0x028237B0 LDR X8, [X8]
	0x028237B4 MOV X0, X8
	0x028237B8 BL 0x338C698
	0x028237BC MOV X1, X0
	0x028237C0 MOV X0, X21
	0x028237C4 MOV X2, X31
	0x028237C8 BL 0x3395194
	0x028237CC TBZ X0, 0x0, 0x2823AEC
	0x028237D0 MOV X0, X19
	0x028237D4 MOV X1, X31
	0x028237D8 BL 0x3398CDC
	0x028237DC ADRP X8, 0x18FA000
	0x028237E0 LDR X8, [X8 + 0xEE8]
	0x028237E4 MOV W20, W0
	0x028237E8 LDR X8, [X8]
	0x028237EC LDR W9, [X8 + 0xE0]
	0x028237F0 CBNZ W9, 0x28237FC
	0x028237F4 MOV X0, X8
	0x028237F8 BL 0x1C16DFC
	0x028237FC MOV W0, W31
	0x02823800 MOV W1, W20
	0x02823804 MOV X2, X31
	0x02823808 BL 0x32E15C0
	0x0282380C MOV W20, W0
	0x02823810 ADD X0, X19, 0x2
	0x02823814 MOV X1, X31
	0x02823818 BL 0x3398CDC
	0x0282381C MOV W1, W0
	0x02823820 MOV W0, W20
	0x02823824 MOV X2, X31
	0x02823828 BL 0x32E15C0
	0x0282382C MOV W20, W0
	0x02823830 ADD X0, X19, 0x4
	0x02823834 MOV X1, X31
	0x02823838 BL 0x3398CDC
	0x0282383C MOV W1, W0
	0x02823840 MOV W0, W20
	0x02823844 MOV X2, X31
	0x02823848 BL 0x32E15C0
	0x0282384C MOV W20, W0
	0x02823850 ADD X0, X19, 0x6
	0x02823854 MOV X1, X31
	0x02823858 BL 0x3398CDC
	0x0282385C MOV W1, W0
	0x02823860 MOV W0, W20
	0x02823864 MOV X2, X31
	0x02823868 BL 0x32E15C0
	0x0282386C MOV W20, W0
	0x02823870 ADD X0, X19, 0x8
	0x02823874 MOV X1, X31
	0x02823878 BL 0x3398CDC
	0x0282387C MOV W1, W0
	0x02823880 MOV W0, W20
	0x02823884 MOV X2, X31
	0x02823888 BL 0x32E15C0
	0x0282388C MOV W20, W0
	0x02823890 ADD X0, X19, 0xA
	0x02823894 MOV X1, X31
	0x02823898 BL 0x3398CDC
	0x0282389C MOV W1, W0
	0x028238A0 MOV W0, W20
	0x028238A4 MOV X2, X31
	0x028238A8 BL 0x32E15C0
	0x028238AC MOV W20, W0
	0x028238B0 ADD X0, X19, 0xC
	0x028238B4 MOV X1, X31
	0x028238B8 BL 0x3398CDC
	0x028238BC MOV W1, W0
	0x028238C0 MOV W0, W20
	0x028238C4 MOV X2, X31
	0x028238C8 BL 0x32E15C0
	0x028238CC MOV W20, W0
	0x028238D0 ADD X0, X19, 0xE
	0x028238D4 MOV X1, X31
	0x028238D8 BL 0x3398CDC
	0x028238DC B 0x2824AF4
	0x028238E0 LDR X0, [X23]
	0x028238E4 LDRB W8, [X0 + 0x135]
	0x028238E8 TBNZ X8, 0x0, 0x28238F0
	0x028238EC BL 0x1C5C684
	0x028238F0 LDR X8, [X24]
	0x028238F4 LDR X9, [X0 + 0xC0]
	0x028238F8 LDR W10, [X8 + 0xE0]
	0x028238FC LDR X21, [X9 + 0x18]
	0x02823900 CBNZ W10, 0x282390C
	0x02823904 MOV X0, X8
	0x02823908 BL 0x1C16DFC
	0x0282390C MOV X0, X21
	0x02823910 MOV X1, X31
	0x02823914 BL 0x338C698
	0x02823918 ADRP X8, 0x18F7000
	0x0282391C LDR X8, [X8 + 0xD78]
	0x02823920 MOV X21, X0
	0x02823924 MOV X1, X31
	0x02823928 LDR X8, [X8]
	0x0282392C MOV X0, X8
	0x02823930 BL 0x338C698
	0x02823934 MOV X1, X0
	0x02823938 MOV X0, X21
	0x0282393C MOV X2, X31
	0x02823940 BL 0x3395194
	0x02823944 TBZ X0, 0x0, 0x2823C64
	0x02823948 ADRP X24, 0x18D4000
	0x0282394C ADRP X25, 0x18FA000
	0x02823950 LDR X24, [X24 + 0x628]
	0x02823954 LDR X25, [X25 + 0xEE8]
	0x02823958 MOV W21, W31
	0x0282395C MOV W20, W31
	0x02823960 LDR X0, [X23]
	0x02823964 LDRB W8, [X0 + 0x135]
	0x02823968 TBNZ X8, 0x0, 0x2823970
	0x0282396C BL 0x1C5C684
	0x02823970 LDR X8, [X0 + 0xC0]
	0x02823974 LDR X0, [X8 + 0x8]
	0x02823978 LDRB W8, [X0 + 0x135]
	0x0282397C TBNZ X8, 0x0, 0x2823984
	0x02823980 BL 0x1C5C684
	0x02823984 LDR W8, [X0 + 0xE0]
	0x02823988 CBNZ W8, 0x2823990
	0x0282398C BL 0x1C16DFC
	0x02823990 LDR X0, [X23]
	0x02823994 LDRB W8, [X0 + 0x135]
	0x02823998 TBNZ X8, 0x0, 0x28239A0
	0x0282399C BL 0x1C5C684
	0x028239A0 LDR X8, [X0 + 0xC0]
	0x028239A4 LDR X22, [X8 + 0x28]
	0x028239A8 LDR X0, [X22 + 0x20]
	0x028239AC LDRB W8, [X0 + 0x135]
	0x028239B0 TBNZ X8, 0x0, 0x28239B8
	0x028239B4 BL 0x1C5C684
	0x028239B8 LDR X8, [X0 + 0xC0]
	0x028239BC LDR X0, [X8 + 0x8]
	0x028239C0 LDRB W8, [X0 + 0x135]
	0x028239C4 TBNZ X8, 0x0, 0x28239CC
	0x028239C8 BL 0x1C5C684
	0x028239CC LDR W8, [X0 + 0xE0]
	0x028239D0 CBNZ W8, 0x28239D8
	0x028239D4 BL 0x1C16DFC
	0x028239D8 LDR X0, [X22 + 0x20]
	0x028239DC LDRB W8, [X0 + 0x135]
	0x028239E0 TBNZ X8, 0x0, 0x28239E8
	0x028239E4 BL 0x1C5C684
	0x028239E8 LDR X8, [X0 + 0xC0]
	0x028239EC LDR X0, [X8 + 0x8]
	0x028239F0 LDRB W8, [X0 + 0x135]
	0x028239F4 TBNZ X8, 0x0, 0x28239FC
	0x028239F8 BL 0x1C5C684
	0x028239FC LDR X8, [X0 + 0xB8]
	0x02823A00 LDR W8, [X8]
	0x02823A04 CMP W21, W8
	0x02823A08 B.GE 0x2824B08
	0x02823A0C LDR X0, [X23]
	0x02823A10 LDRB W8, [X0 + 0x135]
	0x02823A14 TBNZ X8, 0x0, 0x2823A1C
	0x02823A18 BL 0x1C5C684
	0x02823A1C LDR X8, [X0 + 0xC0]
	0x02823A20 LDR X0, [X8 + 0x8]
	0x02823A24 LDRB W8, [X0 + 0x135]
	0x02823A28 TBNZ X8, 0x0, 0x2823A30
	0x02823A2C BL 0x1C5C684
	0x02823A30 LDR W8, [X0 + 0xE0]
	0x02823A34 CBNZ W8, 0x2823A3C
	0x02823A38 BL 0x1C16DFC
	0x02823A3C LDR X0, [X23]
	0x02823A40 LDRB W8, [X0 + 0x135]
	0x02823A44 TBNZ X8, 0x0, 0x2823A4C
	0x02823A48 BL 0x1C5C684
	0x02823A4C LDR X8, [X0 + 0xC0]
	0x02823A50 MOV X0, X19
	0x02823A54 MOV W1, W21
	0x02823A58 LDR X2, [X8 + 0x40]
	0x02823A5C BL 0x2821834
	0x02823A60 STRH W0, [X31]
	0x02823A64 LDR X0, [X23]
	0x02823A68 LDRB W8, [X0 + 0x135]
	0x02823A6C TBNZ X8, 0x0, 0x2823A74
	0x02823A70 BL 0x1C5C684
	0x02823A74 LDR X8, [X0 + 0xC0]
	0x02823A78 ADD X1, X31, 0x0
	0x02823A7C LDR X0, [X8 + 0x20]
	0x02823A80 BL 0x1C16E04
	0x02823A84 CBZ X0, 0x2824DFC
	0x02823A88 LDR X8, [X0]
	0x02823A8C LDR X1, [X24]
	0x02823A90 LDR X8, [X8 + 0x40]
	0x02823A94 LDR X9, [X1 + 0x40]
	0x02823A98 CMP X8, X9
	0x02823A9C B.NE 0x2824E00
	0x02823AA0 BL 0x1C16E08
	0x02823AA4 LDRH W8, [X0]
	0x02823AA8 ADD X0, X31, 0x20
	0x02823AAC MOV X1, X31
	0x02823AB0 STRH W8, [X31 + 0x20]
	0x02823AB4 BL 0x3379CE8
	0x02823AB8 LDR X8, [X25]
	0x02823ABC MOV W22, W0
	0x02823AC0 LDR W9, [X8 + 0xE0]
	0x02823AC4 CBNZ W9, 0x2823AD0
	0x02823AC8 MOV X0, X8
	0x02823ACC BL 0x1C16DFC
	0x02823AD0 MOV W0, W20
	0x02823AD4 MOV W1, W22
	0x02823AD8 MOV X2, X31
	0x02823ADC BL 0x32E15C0
	0x02823AE0 MOV W20, W0
	0x02823AE4 ADD W21, W21, 0x1
	0x02823AE8 B 0x2823960
	0x02823AEC LDR X0, [X23]
	0x02823AF0 LDRB W8, [X0 + 0x135]
	0x02823AF4 TBNZ X8, 0x0, 0x2823AFC
	0x02823AF8 BL 0x1C5C684
	0x02823AFC LDR X8, [X24]
	0x02823B00 LDR X9, [X0 + 0xC0]
	0x02823B04 LDR W10, [X8 + 0xE0]
	0x02823B08 LDR X21, [X9 + 0x18]
	0x02823B0C CBNZ W10, 0x2823B18
	0x02823B10 MOV X0, X8
	0x02823B14 BL 0x1C16DFC
	0x02823B18 MOV X0, X21
	0x02823B1C MOV X1, X31
	0x02823B20 BL 0x338C698
	0x02823B24 ADRP X8, 0x18F7000
	0x02823B28 LDR X8, [X8 + 0xD78]
	0x02823B2C MOV X21, X0
	0x02823B30 MOV X1, X31
	0x02823B34 LDR X8, [X8]
	0x02823B38 MOV X0, X8
	0x02823B3C BL 0x338C698
	0x02823B40 MOV X1, X0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X24+40]
	014 Move X23, 0x1BB8000
	015 Move X20, X3
	016 Move X21, X2
	017 Move [X31+24], X8
	018 Move W8, [X23+2678]
	019 Move X22, X1
	020 Move X19, X0
	021 Move [X31+8], X1
	022 Move [X31+16], X2
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {62}
	027 Move X0, 0x18F8000
	028 Move X0, [X0+3432]
	029 Call 0x1C17CF4
	030 Move X0, 0x18F9000
	031 Move X0, [X0+2680]
	032 Call 0x1C17CF4
	033 Move X0, 0x18F8000
	034 Move X0, [X0+3448]
	035 Call 0x1C17CF4
	036 Move X0, 0x18F8000
	037 Move X0, [X0+3456]
	038 Call 0x1C17CF4
	039 Move X0, 0x18F8000
	040 Move X0, [X0+3464]
	041 Call 0x1C17CF4
	042 Move X0, 0x18F8000
	043 Move X0, [X0+3472]
	044 Call 0x1C17CF4
	045 Move X0, 0x18F9000
	046 Move X0, [X0+2688]
	047 Call 0x1C17CF4
	048 Move X0, 0x18D1000
	049 Move X0, [X0+1728]
	050 Call 0x1C17CF4
	051 Move X0, 0x18F8000
	052 Move X0, [X0+3480]
	053 Call 0x1C17CF4
	054 Move X0, 0x18F8000
	055 Move X0, [X0+3488]
	056 Call 0x1C17CF4
	057 Move X0, 0x18F8000
	058 Move X0, [X0+3496]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X23+2678], W8
	062 Move X0, X31
	063 Call Vector.get_IsHardwareAccelerated
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {203}
	068 Move W8, W31
	069 Move X0, [X20+32]
	070 Move W21, W8
	071 Move W9, [X0+309]
	072 Move TEMP, X9
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {77}
	076 Call 0x1C5D684
	077 Move X8, [X0+192]
	078 Move X0, [X8+8]
	079 Move W8, [X0+309]
	080 Move TEMP, X8
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {85}
	084 Call 0x1C5D684
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X0, [X20+32]
	090 Move W8, [X0+309]
	091 Move TEMP, X8
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfEqual {96}
	095 Call 0x1C5D684
	096 Move X8, [X0+192]
	097 Move X22, [X8+40]
	098 Move X0, [X22+32]
	099 Move W8, [X0+309]
	100 Move TEMP, X8
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {105}
	104 Call 0x1C5D684
	105 Move X8, [X0+192]
	106 Move X0, [X8+8]
	107 Move W8, [X0+309]
	108 Move TEMP, X8
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {113}
	112 Call 0x1C5D684
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Move X0, [X22+32]
	118 Move W8, [X0+309]
	119 Move TEMP, X8
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfEqual {124}
	123 Call 0x1C5D684
	124 Move X8, [X0+192]
	125 Move X0, [X8+8]
	126 Move W8, [X0+309]
	127 Move TEMP, X8
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfEqual {132}
	131 Call 0x1C5D684
	132 Move X8, [X0+184]
	133 Move W25, [X8]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X0, [X20+32]
	136 Move W8, [X0+309]
	137 Move TEMP, X8
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfEqual {142}
	141 Call 0x1C5D684
	142 Move X8, [X0+192]
	143 Move X0, [X8+8]
	144 Move W8, [X0+309]
	145 Move TEMP, X8
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {150}
	149 Call 0x1C5D684
	150 Move W8, [X0+224]
	151 Compare W8, 0
	152 JumpIfNotEqual {154}
	153 Call 0x1C17DFC
	154 Move X0, [X20+32]
	155 Move W8, [X0+309]
	156 Move TEMP, X8
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfEqual {161}
	160 Call 0x1C5D684
	161 Move X8, [X0+192]
	162 Move X0, X19
	163 Move W1, W21
	164 Move X2, [X8+64]
	165 Call 0x2822834, X0, X1
	166 Move X8, [X20+32]
	167 Move W22, W0
	168 Move W9, [X8+309]
	169 Move TEMP, X9
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfEqual {176}
	173 Move X0, X8
	174 Call 0x1C5D684
	175 Move X8, X0
	176 Move X8, [X8+192]
	177 Add X0, X31, 8
	178 Move W1, W21
	179 Move X2, [X8+64]
	180 Call 0x2822834, X0, X1
	181 Move X8, [X20+32]
	182 Move W23, W0
	183 Move W9, [X8+309]
	184 Move TEMP, X9
	185 And TEMP, TEMP, 1
	186 Compare TEMP, 1
	187 JumpIfEqual {191}
	188 Move X0, X8
	189 Call 0x1C5D684
	190 Move X8, X0
	191 Move X8, [X8+192]
	192 Move W0, W22
	193 Move W1, W23
	194 Move X2, [X8+72]
	195 Call 0x22BD5BC
	196 Add W8, W21, 1
	197 Move TEMP, X0
	198 And TEMP, TEMP, 1
	199 Compare TEMP, 1
	200 JumpIfEqual {69}
	201 NotImplemented "Instruction CMP not yet implemented."
	202 NotImplemented "Instruction CSET not yet implemented."
	203 Move X0, [X20+32]
	204 Move X27, 0x18D1000
	205 Move W8, [X0+309]
	206 Move X27, [X27+1728]
	207 Move TEMP, X8
	208 And TEMP, TEMP, 1
	209 Compare TEMP, 1
	210 JumpIfEqual {212}
	211 Call 0x1C5D684
	212 Move X8, [X27]
	213 Move X9, [X0+192]
	214 Move X25, 0x18F8000
	215 Move W10, [X8+224]
	216 Move X23, [X9+24]
	217 Move X25, [X25+3432]
	218 Compare W10, 0
	219 JumpIfNotEqual {222}
	220 Move X0, X8
	221 Call 0x1C17DFC
	222 Move X0, X23
	223 Move X1, X31
	224 Move X26, X22
	225 ShiftRight X26, 32
	226 And X26, X26, 0x7FFFFFFF
	227 Call Type.GetTypeFromHandle, X0
	228 Move X8, [X25]
	229 Move X23, X0
	230 Move X1, X31
	231 Move X0, X8
	232 Call Type.GetTypeFromHandle, X0
	233 Move X1, X0
	234 Move X0, X23
	235 Move X2, X31
	236 Call Type.op_Equality, X0, X1
	237 Move TEMP, X0
	238 And TEMP, TEMP, 1
	239 Compare TEMP, 1
	240 JumpIfNotEqual {295}
	241 Move W8, [X19]
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move W8, [X19+1]
	244 Move X9, X22
	245 ShiftRight X9, 8
	246 And X9, X9, 0x7FFFFFFF
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Move W8, [X19+2]
	249 Move X9, X22
	250 ShiftRight X9, 16
	251 And X9, X9, 0x7FFFFFFF
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Move W8, [X19+3]
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Move W8, [X19+4]
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Move W8, [X19+5]
	258 Move X9, X22
	259 ShiftRight X9, 40
	260 And X9, X9, 0x7FFFFFFF
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Move W8, [X19+6]
	263 Move X9, X22
	264 ShiftRight X9, 48
	265 And X9, X9, 0x7FFFFFFF
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Move W8, [X19+7]
	268 Move W9, [X31+15]
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Move W8, [X19+8]
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Move W8, [X19+9]
	273 Move X9, X21
	274 ShiftRight X9, 8
	275 And X9, X9, 0x7FFFFFFF
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Move W8, [X19+10]
	278 Move W9, [X31+18]
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move W8, [X19+11]
	281 Move W9, [X31+19]
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Move W8, [X19+12]
	284 Move W9, [X31+20]
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Move W8, [X19+13]
	287 Move W9, [X31+21]
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Move W8, [X19+14]
	290 Move W9, [X31+22]
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Move W8, [X19+15]
	293 Move W9, [X31+23]
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Move X0, [X20+32]
	296 Move W8, [X0+309]
	297 Move TEMP, X8
	298 And TEMP, TEMP, 1
	299 Compare TEMP, 1
	300 JumpIfEqual {302}
	301 Call 0x1C5D684
	302 Move X8, [X27]
	303 Move X9, [X0+192]
	304 Move W10, [X8+224]
	305 Move X23, [X9+24]
	306 Compare W10, 0
	307 JumpIfNotEqual {310}
	308 Move X0, X8
	309 Call 0x1C17DFC
	310 Move X0, X23
	311 Move X1, X31
	312 Move X25, X21
	313 ShiftRight X25, 32
	314 And X25, X25, 0x7FFFFFFF
	315 Call Type.GetTypeFromHandle, X0
	316 Move X8, 0x18F8000
	317 Move X8, [X8+3472]
	318 Move X23, X0
	319 Move X1, X31
	320 Move X8, [X8]
	321 Move X0, X8
	322 Call Type.GetTypeFromHandle, X0
	323 Move X1, X0
	324 Move X0, X23
	325 Move X2, X31
	326 Call Type.op_Equality, X0, X1
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {392}
	331 Move W8, [X19]
	332 NotImplemented "Instruction CMP not yet implemented."
	333 Move W8, [X19+1]
	334 Move X9, X22
	335 ShiftRight X9, 8
	336 And X9, X9, 0x7FFFFFFF
	337 NotImplemented "Instruction CMP not yet implemented."
	338 Move W8, [X19+2]
	339 Move X9, X22
	340 ShiftRight X9, 16
	341 And X9, X9, 0x7FFFFFFF
	342 NotImplemented "Instruction CMP not yet implemented."
	343 Move W8, [X19+3]
	344 NotImplemented "Instruction CMP not yet implemented."
	345 Move W8, [X19+4]
	346 NotImplemented "Instruction CMP not yet implemented."
	347 Move W8, [X19+5]
	348 Move X9, X22
	349 ShiftRight X9, 40
	350 And X9, X9, 0x7FFFFFFF
	351 NotImplemented "Instruction CMP not yet implemented."
	352 Move W8, [X19+6]
	353 Move X9, X22
	354 ShiftRight X9, 48
	355 And X9, X9, 0x7FFFFFFF
	356 NotImplemented "Instruction CMP not yet implemented."
	357 Move W8, [X19+7]
	358 Move X9, X22
	359 ShiftRight X9, 56
	360 And X9, X9, 0x7FFFFFFF
	361 NotImplemented "Instruction CMP not yet implemented."
	362 Move W8, [X19+8]
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Move W8, [X19+9]
	365 Move X9, X21
	366 ShiftRight X9, 8
	367 And X9, X9, 0x7FFFFFFF
	368 NotImplemented "Instruction CMP not yet implemented."
	369 Move W8, [X19+10]
	370 Move X9, X21
	371 ShiftRight X9, 16
	372 And X9, X9, 0x7FFFFFFF
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Move W8, [X19+11]
	375 NotImplemented "Instruction CMP not yet implemented."
	376 Move W8, [X19+12]
	377 NotImplemented "Instruction CMP not yet implemented."
	378 Move W8, [X19+13]
	379 Move X9, X21
	380 ShiftRight X9, 40
	381 And X9, X9, 0x7FFFFFFF
	382 NotImplemented "Instruction CMP not yet implemented."
	383 Move W8, [X19+14]
	384 Move X9, X21
	385 ShiftRight X9, 48
	386 And X9, X9, 0x7FFFFFFF
	387 NotImplemented "Instruction CMP not yet implemented."
	388 Move W8, [X19+15]
	389 Move X9, X21
	390 ShiftRight X9, 56
	391 And X9, X9, 0x7FFFFFFF
	392 Move X0, [X20+32]
	393 Move W8, [X0+309]
	394 Move TEMP, X8
	395 And TEMP, TEMP, 1
	396 Compare TEMP, 1
	397 JumpIfEqual {399}
	398 Call 0x1C5D684
	399 Move X8, [X27]
	400 Move X9, [X0+192]
	401 Move W10, [X8+224]
	402 Move X23, [X9+24]
	403 Compare W10, 0
	404 JumpIfNotEqual {407}
	405 Move X0, X8
	406 Call 0x1C17DFC
	407 Move X0, X23
	408 Move X1, X31
	409 Call Type.GetTypeFromHandle, X0
	410 Move X8, 0x18F8000
	411 Move X8, [X8+3480]
	412 Move X23, X0
	413 Move X1, X31
	414 Move X8, [X8]
	415 Move X0, X8
	416 Call Type.GetTypeFromHandle, X0
	417 Move X1, X0
	418 Move X0, X23
	419 Move X2, X31
	420 Call Type.op_Equality, X0, X1
	421 Move TEMP, X0
	422 And TEMP, TEMP, 1
	423 Compare TEMP, 1
	424 JumpIfEqual {458}
	425 Move X0, [X20+32]
	426 Move W8, [X0+309]
	427 Move TEMP, X8
	428 And TEMP, TEMP, 1
	429 Compare TEMP, 1
	430 JumpIfEqual {432}
	431 Call 0x1C5D684
	432 Move X8, [X27]
	433 Move X9, [X0+192]
	434 Move W10, [X8+224]
	435 Move X23, [X9+24]
	436 Compare W10, 0
	437 JumpIfNotEqual {440}
	438 Move X0, X8
	439 Call 0x1C17DFC
	440 Move X0, X23
	441 Move X1, X31
	442 Call Type.GetTypeFromHandle, X0
	443 Move X8, 0x18F8000
	444 Move X8, [X8+3448]
	445 Move X23, X0
	446 Move X1, X31
	447 Move X8, [X8]
	448 Move X0, X8
	449 Call Type.GetTypeFromHandle, X0
	450 Move X1, X0
	451 Move X0, X23
	452 Move X2, X31
	453 Call Type.op_Equality, X0, X1
	454 Move TEMP, X0
	455 And TEMP, TEMP, 1
	456 Compare TEMP, 1
	457 JumpIfNotEqual {480}
	458 NotImplemented "Instruction LDRH not yet implemented."
	459 NotImplemented "Instruction CMP not yet implemented."
	460 NotImplemented "Instruction LDRH not yet implemented."
	461 NotImplemented "Instruction CMP not yet implemented."
	462 NotImplemented "Instruction LDRH not yet implemented."
	463 NotImplemented "Instruction CMP not yet implemented."
	464 NotImplemented "Instruction LDRH not yet implemented."
	465 Move X9, X22
	466 ShiftRight X9, 48
	467 And X9, X9, 0x7FFFFFFF
	468 NotImplemented "Instruction CMP not yet implemented."
	469 NotImplemented "Instruction LDRH not yet implemented."
	470 NotImplemented "Instruction CMP not yet implemented."
	471 NotImplemented "Instruction LDRH not yet implemented."
	472 NotImplemented "Instruction CMP not yet implemented."
	473 NotImplemented "Instruction LDRH not yet implemented."
	474 NotImplemented "Instruction CMP not yet implemented."
	475 NotImplemented "Instruction LDRH not yet implemented."
	476 Move X9, X21
	477 ShiftRight X9, 48
	478 And X9, X9, 0x7FFFFFFF
	479 NotImplemented "Instruction CMP not yet implemented."
	480 Move X0, [X20+32]
	481 Move W8, [X0+309]
	482 Move TEMP, X8
	483 And TEMP, TEMP, 1
	484 Compare TEMP, 1
	485 JumpIfEqual {487}
	486 Call 0x1C5D684
	487 Move X8, [X27]
	488 Move X9, [X0+192]
	489 Move W10, [X8+224]
	490 Move X23, [X9+24]
	491 Compare W10, 0
	492 JumpIfNotEqual {495}
	493 Move X0, X8
	494 Call 0x1C17DFC
	495 Move X0, X23
	496 Move X1, X31
	497 Call Type.GetTypeFromHandle, X0
	498 Move X8, 0x18F8000
	499 Move X8, [X8+3488]
	500 Move X23, X0
	501 Move X1, X31
	502 Move X8, [X8]
	503 Move X0, X8
	504 Call Type.GetTypeFromHandle, X0
	505 Move X1, X0
	506 Move X0, X23
	507 Move X2, X31
	508 Call Type.op_Equality, X0, X1
	509 Move TEMP, X0
	510 And TEMP, TEMP, 1
	511 Compare TEMP, 1
	512 JumpIfEqual {546}
	513 Move X0, [X20+32]
	514 Move W8, [X0+309]
	515 Move TEMP, X8
	516 And TEMP, TEMP, 1
	517 Compare TEMP, 1
	518 JumpIfEqual {520}
	519 Call 0x1C5D684
	520 Move X8, [X27]
	521 Move X9, [X0+192]
	522 Move W10, [X8+224]
	523 Move X23, [X9+24]
	524 Compare W10, 0
	525 JumpIfNotEqual {528}
	526 Move X0, X8
	527 Call 0x1C17DFC
	528 Move X0, X23
	529 Move X1, X31
	530 Call Type.GetTypeFromHandle, X0
	531 Move X8, 0x18F8000
	532 Move X8, [X8+3456]
	533 Move X23, X0
	534 Move X1, X31
	535 Move X8, [X8]
	536 Move X0, X8
	537 Call Type.GetTypeFromHandle, X0
	538 Move X1, X0
	539 Move X0, X23
	540 Move X2, X31
	541 Call Type.op_Equality, X0, X1
	542 Move TEMP, X0
	543 And TEMP, TEMP, 1
	544 Compare TEMP, 1
	545 JumpIfNotEqual {554}
	546 Move W8, [X19]
	547 NotImplemented "Instruction CMP not yet implemented."
	548 Move W8, [X19+4]
	549 NotImplemented "Instruction CMP not yet implemented."
	550 Move W8, [X19+8]
	551 NotImplemented "Instruction CMP not yet implemented."
	552 Move W8, [X19+12]
	553 NotImplemented "Instruction CMP not yet implemented."
	554 Move X0, [X20+32]
	555 Move W8, [X0+309]
	556 Move TEMP, X8
	557 And TEMP, TEMP, 1
	558 Compare TEMP, 1
	559 JumpIfEqual {561}
	560 Call 0x1C5D684
	561 Move X8, [X27]
	562 Move X9, [X0+192]
	563 Move W10, [X8+224]
	564 Move X23, [X9+24]
	565 Compare W10, 0
	566 JumpIfNotEqual {569}
	567 Move X0, X8
	568 Call 0x1C17DFC
	569 Move X0, X23
	570 Move X1, X31
	571 Call Type.GetTypeFromHandle, X0
	572 Move X8, 0x18F8000
	573 Move X8, [X8+3496]
	574 Move X23, X0
	575 Move X1, X31
	576 Move X8, [X8]
	577 Move X0, X8
	578 Call Type.GetTypeFromHandle, X0
	579 Move X1, X0
	580 Move X0, X23
	581 Move X2, X31
	582 Call Type.op_Equality, X0, X1
	583 Move TEMP, X0
	584 And TEMP, TEMP, 1
	585 Compare TEMP, 1
	586 JumpIfEqual {620}
	587 Move X0, [X20+32]
	588 Move W8, [X0+309]
	589 Move TEMP, X8
	590 And TEMP, TEMP, 1
	591 Compare TEMP, 1
	592 JumpIfEqual {594}
	593 Call 0x1C5D684
	594 Move X8, [X27]
	595 Move X9, [X0+192]
	596 Move W10, [X8+224]
	597 Move X23, [X9+24]
	598 Compare W10, 0
	599 JumpIfNotEqual {602}
	600 Move X0, X8
	601 Call 0x1C17DFC
	602 Move X0, X23
	603 Move X1, X31
	604 Call Type.GetTypeFromHandle, X0
	605 Move X8, 0x18F8000
	606 Move X8, [X8+3464]
	607 Move X23, X0
	608 Move X1, X31
	609 Move X8, [X8]
	610 Move X0, X8
	611 Call Type.GetTypeFromHandle, X0
	612 Move X1, X0
	613 Move X0, X23
	614 Move X2, X31
	615 Call Type.op_Equality, X0, X1
	616 Move TEMP, X0
	617 And TEMP, TEMP, 1
	618 Compare TEMP, 1
	619 JumpIfNotEqual {625}
	620 Move X8, [X19]
	621 NotImplemented "Instruction CMP not yet implemented."
	622 Move X8, [X19+8]
	623 NotImplemented "Instruction CMP not yet implemented."
	624 NotImplemented "Instruction CSET not yet implemented."
	625 Move X0, [X20+32]
	626 Move W8, [X0+309]
	627 Move TEMP, X8
	628 And TEMP, TEMP, 1
	629 Compare TEMP, 1
	630 JumpIfEqual {632}
	631 Call 0x1C5D684
	632 Move X8, [X27]
	633 Move X9, [X0+192]
	634 Move W10, [X8+224]
	635 Move X23, [X9+24]
	636 Compare W10, 0
	637 JumpIfNotEqual {640}
	638 Move X0, X8
	639 Call 0x1C17DFC
	640 Move X0, X23
	641 Move X1, X31
	642 Call Type.GetTypeFromHandle, X0
	643 Move X8, 0x18F9000
	644 Move X8, [X8+2688]
	645 Move X23, X0
	646 Move X1, X31
	647 Move X8, [X8]
	648 Move X0, X8
	649 Call Type.GetTypeFromHandle, X0
	650 Move X1, X0
	651 Move X0, X23
	652 Move X2, X31
	653 Call Type.op_Equality, X0, X1
	654 Move TEMP, X0
	655 And TEMP, TEMP, 1
	656 Compare TEMP, 1
	657 JumpIfNotEqual {670}
	658 Move V0, [X19]
	659 Move S1, W22
	660 NotImplemented "Instruction FCMP not yet implemented."
	661 Move V0, [X19+4]
	662 Move S1, W26
	663 NotImplemented "Instruction FCMP not yet implemented."
	664 Move V0, [X19+8]
	665 Move S1, W21
	666 NotImplemented "Instruction FCMP not yet implemented."
	667 Move V0, [X19+12]
	668 Move S1, W25
	669 NotImplemented "Instruction FCMP not yet implemented."
	670 Move X0, [X20+32]
	671 Move W8, [X0+309]
	672 Move TEMP, X8
	673 And TEMP, TEMP, 1
	674 Compare TEMP, 1
	675 JumpIfEqual {677}
	676 Call 0x1C5D684
	677 Move X8, [X27]
	678 Move X9, [X0+192]
	679 Move W10, [X8+224]
	680 Move X23, [X9+24]
	681 Compare W10, 0
	682 JumpIfNotEqual {685}
	683 Move X0, X8
	684 Call 0x1C17DFC
	685 Move X0, X23
	686 Move X1, X31
	687 Call Type.GetTypeFromHandle, X0
	688 Move X8, 0x18F9000
	689 Move X8, [X8+2680]
	690 Move X23, X0
	691 Move X1, X31
	692 Move X8, [X8]
	693 Move X0, X8
	694 Call Type.GetTypeFromHandle, X0
	695 Move X1, X0
	696 Move X0, X23
	697 Move X2, X31
	698 Call Type.op_Equality, X0, X1
	699 Move TEMP, X0
	700 And TEMP, TEMP, 1
	701 Compare TEMP, 1
	702 JumpIfNotEqual {725}
	703 Move V0, [X19]
	704 Move D1, X22
	705 NotImplemented "Instruction FCMP not yet implemented."
	706 Move V0, [X19+8]
	707 Move D1, X21
	708 NotImplemented "Instruction FCMP not yet implemented."
	709 Move W0, W31
	710 Move X8, [X24+40]
	711 Move X9, [X31+24]
	712 NotImplemented "Instruction CMP not yet implemented."
	713 Move X20, [X31+96]
	714 Move X19, [X31+104]
	715 Move X22, [X31+80]
	716 Move X21, [X31+88]
	717 Move X24, [X31+64]
	718 Move X23, [X31+72]
	719 Move X26, [X31+48]
	720 Move X25, [X31+56]
	721 Move X30, [X31+32]
	722 Move X27, [X31+40]
	723 Add X31, X31, 112
	724 Return X0
	725 Move X0, 0x18D1000
	726 Move X0, [X0+2880]
	727 Call 0x1C17D08
	728 Call 0x1C17F10
	729 Move X19, X0
	730 Move X0, 0x18FA000
	731 Move X0, [X0+2704]
	732 Call 0x1C17D08
	733 Move X1, X0
	734 Move X0, X19
	735 Move X2, X31
	736 Call NotSupportedException..ctor, X0, X1
	737 Move X0, X19
	738 Move X1, X20
	739 Call 0x1C17DEC
	740 Call 0x3EB2B20

Method: System.Int32 GetHashCode()

Disassembly:
	0x02823B44 MOV X0, X21
	0x02823B48 MOV X2, X31
	0x02823B4C BL 0x3395194
	0x02823B50 TBZ X0, 0x0, 0x2823E70
	0x02823B54 MOV X0, X19
	0x02823B58 MOV X1, X31
	0x02823B5C BL 0x3379CE8
	0x02823B60 ADRP X8, 0x18FA000
	0x02823B64 LDR X8, [X8 + 0xEE8]
	0x02823B68 MOV W20, W0
	0x02823B6C LDR X8, [X8]
	0x02823B70 LDR W9, [X8 + 0xE0]
	0x02823B74 CBNZ W9, 0x2823B80
	0x02823B78 MOV X0, X8
	0x02823B7C BL 0x1C16DFC
	0x02823B80 MOV W0, W31
	0x02823B84 MOV W1, W20
	0x02823B88 MOV X2, X31
	0x02823B8C BL 0x32E15C0
	0x02823B90 MOV W20, W0
	0x02823B94 ADD X0, X19, 0x2
	0x02823B98 MOV X1, X31
	0x02823B9C BL 0x3379CE8
	0x02823BA0 MOV W1, W0
	0x02823BA4 MOV W0, W20
	0x02823BA8 MOV X2, X31
	0x02823BAC BL 0x32E15C0
	0x02823BB0 MOV W20, W0
	0x02823BB4 ADD X0, X19, 0x4
	0x02823BB8 MOV X1, X31
	0x02823BBC BL 0x3379CE8
	0x02823BC0 MOV W1, W0
	0x02823BC4 MOV W0, W20
	0x02823BC8 MOV X2, X31
	0x02823BCC BL 0x32E15C0
	0x02823BD0 MOV W20, W0
	0x02823BD4 ADD X0, X19, 0x6
	0x02823BD8 MOV X1, X31
	0x02823BDC BL 0x3379CE8
	0x02823BE0 MOV W1, W0
	0x02823BE4 MOV W0, W20
	0x02823BE8 MOV X2, X31
	0x02823BEC BL 0x32E15C0
	0x02823BF0 MOV W20, W0
	0x02823BF4 ADD X0, X19, 0x8
	0x02823BF8 MOV X1, X31
	0x02823BFC BL 0x3379CE8
	0x02823C00 MOV W1, W0
	0x02823C04 MOV W0, W20
	0x02823C08 MOV X2, X31
	0x02823C0C BL 0x32E15C0
	0x02823C10 MOV W20, W0
	0x02823C14 ADD X0, X19, 0xA
	0x02823C18 MOV X1, X31
	0x02823C1C BL 0x3379CE8
	0x02823C20 MOV W1, W0
	0x02823C24 MOV W0, W20
	0x02823C28 MOV X2, X31
	0x02823C2C BL 0x32E15C0
	0x02823C30 MOV W20, W0
	0x02823C34 ADD X0, X19, 0xC
	0x02823C38 MOV X1, X31
	0x02823C3C BL 0x3379CE8
	0x02823C40 MOV W1, W0
	0x02823C44 MOV W0, W20
	0x02823C48 MOV X2, X31
	0x02823C4C BL 0x32E15C0
	0x02823C50 MOV W20, W0
	0x02823C54 ADD X0, X19, 0xE
	0x02823C58 MOV X1, X31
	0x02823C5C BL 0x3379CE8
	0x02823C60 B 0x2824AF4
	0x02823C64 LDR X0, [X23]
	0x02823C68 LDRB W8, [X0 + 0x135]
	0x02823C6C TBNZ X8, 0x0, 0x2823C74
	0x02823C70 BL 0x1C5C684
	0x02823C74 LDR X8, [X24]
	0x02823C78 LDR X9, [X0 + 0xC0]
	0x02823C7C LDR W10, [X8 + 0xE0]
	0x02823C80 LDR X21, [X9 + 0x18]
	0x02823C84 CBNZ W10, 0x2823C90
	0x02823C88 MOV X0, X8
	0x02823C8C BL 0x1C16DFC
	0x02823C90 MOV X0, X21
	0x02823C94 MOV X1, X31
	0x02823C98 BL 0x338C698
	0x02823C9C ADRP X8, 0x18F7000
	0x02823CA0 LDR X8, [X8 + 0xDA0]
	0x02823CA4 MOV X21, X0
	0x02823CA8 MOV X1, X31
	0x02823CAC LDR X8, [X8]
	0x02823CB0 MOV X0, X8
	0x02823CB4 BL 0x338C698
	0x02823CB8 MOV X1, X0
	0x02823CBC MOV X0, X21
	0x02823CC0 MOV X2, X31
	0x02823CC4 BL 0x3395194
	0x02823CC8 TBZ X0, 0x0, 0x2823F68
	0x02823CCC ADRP X24, 0x18D8000
	0x02823CD0 ADRP X25, 0x18FA000
	0x02823CD4 LDR X24, [X24 + 0x720]
	0x02823CD8 LDR X25, [X25 + 0xEE8]
	0x02823CDC MOV W21, W31
	0x02823CE0 MOV W20, W31
	0x02823CE4 LDR X0, [X23]
	0x02823CE8 LDRB W8, [X0 + 0x135]
	0x02823CEC TBNZ X8, 0x0, 0x2823CF4
	0x02823CF0 BL 0x1C5C684
	0x02823CF4 LDR X8, [X0 + 0xC0]
	0x02823CF8 LDR X0, [X8 + 0x8]
	0x02823CFC LDRB W8, [X0 + 0x135]
	0x02823D00 TBNZ X8, 0x0, 0x2823D08
	0x02823D04 BL 0x1C5C684
	0x02823D08 LDR W8, [X0 + 0xE0]
	0x02823D0C CBNZ W8, 0x2823D14
	0x02823D10 BL 0x1C16DFC
	0x02823D14 LDR X0, [X23]
	0x02823D18 LDRB W8, [X0 + 0x135]
	0x02823D1C TBNZ X8, 0x0, 0x2823D24
	0x02823D20 BL 0x1C5C684
	0x02823D24 LDR X8, [X0 + 0xC0]
	0x02823D28 LDR X22, [X8 + 0x28]
	0x02823D2C LDR X0, [X22 + 0x20]
	0x02823D30 LDRB W8, [X0 + 0x135]
	0x02823D34 TBNZ X8, 0x0, 0x2823D3C
	0x02823D38 BL 0x1C5C684
	0x02823D3C LDR X8, [X0 + 0xC0]
	0x02823D40 LDR X0, [X8 + 0x8]
	0x02823D44 LDRB W8, [X0 + 0x135]
	0x02823D48 TBNZ X8, 0x0, 0x2823D50
	0x02823D4C BL 0x1C5C684
	0x02823D50 LDR W8, [X0 + 0xE0]
	0x02823D54 CBNZ W8, 0x2823D5C
	0x02823D58 BL 0x1C16DFC
	0x02823D5C LDR X0, [X22 + 0x20]
	0x02823D60 LDRB W8, [X0 + 0x135]
	0x02823D64 TBNZ X8, 0x0, 0x2823D6C
	0x02823D68 BL 0x1C5C684
	0x02823D6C LDR X8, [X0 + 0xC0]
	0x02823D70 LDR X0, [X8 + 0x8]
	0x02823D74 LDRB W8, [X0 + 0x135]
	0x02823D78 TBNZ X8, 0x0, 0x2823D80
	0x02823D7C BL 0x1C5C684
	0x02823D80 LDR X8, [X0 + 0xB8]
	0x02823D84 LDR W8, [X8]
	0x02823D88 CMP W21, W8
	0x02823D8C B.GE 0x2824B08
	0x02823D90 LDR X0, [X23]
	0x02823D94 LDRB W8, [X0 + 0x135]
	0x02823D98 TBNZ X8, 0x0, 0x2823DA0
	0x02823D9C BL 0x1C5C684
	0x02823DA0 LDR X8, [X0 + 0xC0]
	0x02823DA4 LDR X0, [X8 + 0x8]
	0x02823DA8 LDRB W8, [X0 + 0x135]
	0x02823DAC TBNZ X8, 0x0, 0x2823DB4
	0x02823DB0 BL 0x1C5C684
	0x02823DB4 LDR W8, [X0 + 0xE0]
	0x02823DB8 CBNZ W8, 0x2823DC0
	0x02823DBC BL 0x1C16DFC
	0x02823DC0 LDR X0, [X23]
	0x02823DC4 LDRB W8, [X0 + 0x135]
	0x02823DC8 TBNZ X8, 0x0, 0x2823DD0
	0x02823DCC BL 0x1C5C684
	0x02823DD0 LDR X8, [X0 + 0xC0]
	0x02823DD4 MOV X0, X19
	0x02823DD8 MOV W1, W21
	0x02823DDC LDR X2, [X8 + 0x40]
	0x02823DE0 BL 0x2821834
	0x02823DE4 STRH W0, [X31]
	0x02823DE8 LDR X0, [X23]
	0x02823DEC LDRB W8, [X0 + 0x135]
	0x02823DF0 TBNZ X8, 0x0, 0x2823DF8
	0x02823DF4 BL 0x1C5C684
	0x02823DF8 LDR X8, [X0 + 0xC0]
	0x02823DFC ADD X1, X31, 0x0
	0x02823E00 LDR X0, [X8 + 0x20]
	0x02823E04 BL 0x1C16E04
	0x02823E08 CBZ X0, 0x2824DFC
	0x02823E0C LDR X8, [X0]
	0x02823E10 LDR X1, [X24]
	0x02823E14 LDR X8, [X8 + 0x40]
	0x02823E18 LDR X9, [X1 + 0x40]
	0x02823E1C CMP X8, X9
	0x02823E20 B.NE 0x2824E00
	0x02823E24 BL 0x1C16E08
	0x02823E28 LDR W8, [X0]
	0x02823E2C ADD X0, X31, 0x1C
	0x02823E30 MOV X1, X31
	0x02823E34 STR W8, [X31 + 0x1C]
	0x02823E38 BL 0x3399AF8
	0x02823E3C LDR X8, [X25]
	0x02823E40 MOV W22, W0
	0x02823E44 LDR W9, [X8 + 0xE0]
	0x02823E48 CBNZ W9, 0x2823E54
	0x02823E4C MOV X0, X8
	0x02823E50 BL 0x1C16DFC
	0x02823E54 MOV W0, W20
	0x02823E58 MOV W1, W22
	0x02823E5C MOV X2, X31
	0x02823E60 BL 0x32E15C0
	0x02823E64 MOV W20, W0
	0x02823E68 ADD W21, W21, 0x1
	0x02823E6C B 0x2823CE4
	0x02823E70 LDR X0, [X23]
	0x02823E74 LDRB W8, [X0 + 0x135]
	0x02823E78 TBNZ X8, 0x0, 0x2823E80
	0x02823E7C BL 0x1C5C684
	0x02823E80 LDR X8, [X24]
	0x02823E84 LDR X9, [X0 + 0xC0]
	0x02823E88 LDR W10, [X8 + 0xE0]
	0x02823E8C LDR X21, [X9 + 0x18]
	0x02823E90 CBNZ W10, 0x2823E9C
	0x02823E94 MOV X0, X8
	0x02823E98 BL 0x1C16DFC
	0x02823E9C MOV X0, X21
	0x02823EA0 MOV X1, X31
	0x02823EA4 BL 0x338C698
	0x02823EA8 ADRP X8, 0x18F7000
	0x02823EAC LDR X8, [X8 + 0xDA0]
	0x02823EB0 MOV X21, X0
	0x02823EB4 MOV X1, X31
	0x02823EB8 LDR X8, [X8]
	0x02823EBC MOV X0, X8
	0x02823EC0 BL 0x338C698
	0x02823EC4 MOV X1, X0
	0x02823EC8 MOV X0, X21
	0x02823ECC MOV X2, X31
	0x02823ED0 BL 0x3395194
	0x02823ED4 TBZ X0, 0x0, 0x2824174
	0x02823ED8 MOV X0, X19
	0x02823EDC MOV X1, X31
	0x02823EE0 BL 0x3399AF8
	0x02823EE4 ADRP X8, 0x18FA000
	0x02823EE8 LDR X8, [X8 + 0xEE8]
	0x02823EEC MOV W20, W0
	0x02823EF0 LDR X8, [X8]
	0x02823EF4 LDR W9, [X8 + 0xE0]
	0x02823EF8 CBNZ W9, 0x2823F04
	0x02823EFC MOV X0, X8
	0x02823F00 BL 0x1C16DFC
	0x02823F04 MOV W0, W31
	0x02823F08 MOV W1, W20
	0x02823F0C MOV X2, X31
	0x02823F10 BL 0x32E15C0
	0x02823F14 MOV W20, W0
	0x02823F18 ADD X0, X19, 0x4
	0x02823F1C MOV X1, X31
	0x02823F20 BL 0x3399AF8
	0x02823F24 MOV W1, W0
	0x02823F28 MOV W0, W20
	0x02823F2C MOV X2, X31
	0x02823F30 BL 0x32E15C0
	0x02823F34 MOV W20, W0
	0x02823F38 ADD X0, X19, 0x8
	0x02823F3C MOV X1, X31
	0x02823F40 BL 0x3399AF8
	0x02823F44 MOV W1, W0
	0x02823F48 MOV W0, W20
	0x02823F4C MOV X2, X31
	0x02823F50 BL 0x32E15C0
	0x02823F54 MOV W20, W0
	0x02823F58 ADD X0, X19, 0xC
	0x02823F5C MOV X1, X31
	0x02823F60 BL 0x3399AF8
	0x02823F64 B 0x2824AF4
	0x02823F68 LDR X0, [X23]
	0x02823F6C LDRB W8, [X0 + 0x135]
	0x02823F70 TBNZ X8, 0x0, 0x2823F78
	0x02823F74 BL 0x1C5C684
	0x02823F78 LDR X8, [X24]
	0x02823F7C LDR X9, [X0 + 0xC0]
	0x02823F80 LDR W10, [X8 + 0xE0]
	0x02823F84 LDR X21, [X9 + 0x18]
	0x02823F88 CBNZ W10, 0x2823F94
	0x02823F8C MOV X0, X8
	0x02823F90 BL 0x1C16DFC
	0x02823F94 MOV X0, X21
	0x02823F98 MOV X1, X31
	0x02823F9C BL 0x338C698
	0x02823FA0 ADRP X8, 0x18F7000
	0x02823FA4 LDR X8, [X8 + 0xD80]
	0x02823FA8 MOV X21, X0
	0x02823FAC MOV X1, X31
	0x02823FB0 LDR X8, [X8]
	0x02823FB4 MOV X0, X8
	0x02823FB8 BL 0x338C698
	0x02823FBC MOV X1, X0
	0x02823FC0 MOV X0, X21
	0x02823FC4 MOV X2, X31
	0x02823FC8 BL 0x3395194
	0x02823FCC TBZ X0, 0x0, 0x282426C
	0x02823FD0 ADRP X24, 0x18D0000
	0x02823FD4 ADRP X25, 0x18FA000
	0x02823FD8 LDR X24, [X24 + 0x758]
	0x02823FDC LDR X25, [X25 + 0xEE8]
	0x02823FE0 MOV W21, W31
	0x02823FE4 MOV W20, W31
	0x02823FE8 LDR X0, [X23]
	0x02823FEC LDRB W8, [X0 + 0x135]
	0x02823FF0 TBNZ X8, 0x0, 0x2823FF8
	0x02823FF4 BL 0x1C5C684
	0x02823FF8 LDR X8, [X0 + 0xC0]
	0x02823FFC LDR X0, [X8 + 0x8]
	0x02824000 LDRB W8, [X0 + 0x135]
	0x02824004 TBNZ X8, 0x0, 0x282400C
	0x02824008 BL 0x1C5C684
	0x0282400C LDR W8, [X0 + 0xE0]
	0x02824010 CBNZ W8, 0x2824018
	0x02824014 BL 0x1C16DFC
	0x02824018 LDR X0, [X23]
	0x0282401C LDRB W8, [X0 + 0x135]
	0x02824020 TBNZ X8, 0x0, 0x2824028
	0x02824024 BL 0x1C5C684
	0x02824028 LDR X8, [X0 + 0xC0]
	0x0282402C LDR X22, [X8 + 0x28]
	0x02824030 LDR X0, [X22 + 0x20]
	0x02824034 LDRB W8, [X0 + 0x135]
	0x02824038 TBNZ X8, 0x0, 0x2824040
	0x0282403C BL 0x1C5C684
	0x02824040 LDR X8, [X0 + 0xC0]
	0x02824044 LDR X0, [X8 + 0x8]
	0x02824048 LDRB W8, [X0 + 0x135]
	0x0282404C TBNZ X8, 0x0, 0x2824054
	0x02824050 BL 0x1C5C684
	0x02824054 LDR W8, [X0 + 0xE0]
	0x02824058 CBNZ W8, 0x2824060
	0x0282405C BL 0x1C16DFC
	0x02824060 LDR X0, [X22 + 0x20]
	0x02824064 LDRB W8, [X0 + 0x135]
	0x02824068 TBNZ X8, 0x0, 0x2824070
	0x0282406C BL 0x1C5C684
	0x02824070 LDR X8, [X0 + 0xC0]
	0x02824074 LDR X0, [X8 + 0x8]
	0x02824078 LDRB W8, [X0 + 0x135]
	0x0282407C TBNZ X8, 0x0, 0x2824084
	0x02824080 BL 0x1C5C684
	0x02824084 LDR X8, [X0 + 0xB8]
	0x02824088 LDR W8, [X8]
	0x0282408C CMP W21, W8
	0x02824090 B.GE 0x2824B08
	0x02824094 LDR X0, [X23]
	0x02824098 LDRB W8, [X0 + 0x135]
	0x0282409C TBNZ X8, 0x0, 0x28240A4
	0x028240A0 BL 0x1C5C684
	0x028240A4 LDR X8, [X0 + 0xC0]
	0x028240A8 LDR X0, [X8 + 0x8]
	0x028240AC LDRB W8, [X0 + 0x135]
	0x028240B0 TBNZ X8, 0x0, 0x28240B8
	0x028240B4 BL 0x1C5C684
	0x028240B8 LDR W8, [X0 + 0xE0]
	0x028240BC CBNZ W8, 0x28240C4
	0x028240C0 BL 0x1C16DFC
	0x028240C4 LDR X0, [X23]
	0x028240C8 LDRB W8, [X0 + 0x135]
	0x028240CC TBNZ X8, 0x0, 0x28240D4
	0x028240D0 BL 0x1C5C684
	0x028240D4 LDR X8, [X0 + 0xC0]
	0x028240D8 MOV X0, X19
	0x028240DC MOV W1, W21
	0x028240E0 LDR X2, [X8 + 0x40]
	0x028240E4 BL 0x2821834
	0x028240E8 STRH W0, [X31]
	0x028240EC LDR X0, [X23]
	0x028240F0 LDRB W8, [X0 + 0x135]
	0x028240F4 TBNZ X8, 0x0, 0x28240FC
	0x028240F8 BL 0x1C5C684
	0x028240FC LDR X8, [X0 + 0xC0]
	0x02824100 ADD X1, X31, 0x0
	0x02824104 LDR X0, [X8 + 0x20]
	0x02824108 BL 0x1C16E04
	0x0282410C CBZ X0, 0x2824DFC
	0x02824110 LDR X8, [X0]
	0x02824114 LDR X1, [X24]
	0x02824118 LDR X8, [X8 + 0x40]
	0x0282411C LDR X9, [X1 + 0x40]
	0x02824120 CMP X8, X9
	0x02824124 B.NE 0x2824E00
	0x02824128 BL 0x1C16E08
	0x0282412C LDR W8, [X0]
	0x02824130 ADD X0, X31, 0x18
	0x02824134 MOV X1, X31
	0x02824138 STR W8, [X31 + 0x18]
	0x0282413C BL 0x337B6D8
	0x02824140 LDR X8, [X25]
	0x02824144 MOV W22, W0
	0x02824148 LDR W9, [X8 + 0xE0]
	0x0282414C CBNZ W9, 0x2824158
	0x02824150 MOV X0, X8
	0x02824154 BL 0x1C16DFC
	0x02824158 MOV W0, W20
	0x0282415C MOV W1, W22
	0x02824160 MOV X2, X31
	0x02824164 BL 0x32E15C0
	0x02824168 MOV W20, W0
	0x0282416C ADD W21, W21, 0x1
	0x02824170 B 0x2823FE8
	0x02824174 LDR X0, [X23]
	0x02824178 LDRB W8, [X0 + 0x135]
	0x0282417C TBNZ X8, 0x0, 0x2824184
	0x02824180 BL 0x1C5C684
	0x02824184 LDR X8, [X24]
	0x02824188 LDR X9, [X0 + 0xC0]
	0x0282418C LDR W10, [X8 + 0xE0]
	0x02824190 LDR X21, [X9 + 0x18]
	0x02824194 CBNZ W10, 0x28241A0
	0x02824198 MOV X0, X8
	0x0282419C BL 0x1C16DFC
	0x028241A0 MOV X0, X21
	0x028241A4 MOV X1, X31
	0x028241A8 BL 0x338C698
	0x028241AC ADRP X8, 0x18F6000
	0x028241B0 LDR X8, [X8 + 0xD80]
	0x028241B4 MOV X21, X0
	0x028241B8 MOV X1, X31
	0x028241BC LDR X8, [X8]
	0x028241C0 MOV X0, X8
	0x028241C4 BL 0x338C698
	0x028241C8 MOV X1, X0
	0x028241CC MOV X0, X21
	0x028241D0 MOV X2, X31
	0x028241D4 BL 0x3395194
	0x028241D8 TBZ X0, 0x0, 0x2824478
	0x028241DC MOV X0, X19
	0x028241E0 MOV X1, X31
	0x028241E4 BL 0x337B6D8
	0x028241E8 ADRP X8, 0x18F9000
	0x028241EC LDR X8, [X8 + 0xEE8]
	0x028241F0 MOV W20, W0
	0x028241F4 LDR X8, [X8]
	0x028241F8 LDR W9, [X8 + 0xE0]
	0x028241FC CBNZ W9, 0x2824208
	0x02824200 MOV X0, X8
	0x02824204 BL 0x1C16DFC
	0x02824208 MOV W0, W31
	0x0282420C MOV W1, W20
	0x02824210 MOV X2, X31
	0x02824214 BL 0x32E15C0
	0x02824218 MOV W20, W0
	0x0282421C ADD X0, X19, 0x4
	0x02824220 MOV X1, X31
	0x02824224 BL 0x337B6D8
	0x02824228 MOV W1, W0
	0x0282422C MOV W0, W20
	0x02824230 MOV X2, X31
	0x02824234 BL 0x32E15C0
	0x02824238 MOV W20, W0
	0x0282423C ADD X0, X19, 0x8
	0x02824240 MOV X1, X31
	0x02824244 BL 0x337B6D8
	0x02824248 MOV W1, W0
	0x0282424C MOV W0, W20
	0x02824250 MOV X2, X31
	0x02824254 BL 0x32E15C0
	0x02824258 MOV W20, W0
	0x0282425C ADD X0, X19, 0xC
	0x02824260 MOV X1, X31
	0x02824264 BL 0x337B6D8
	0x02824268 B 0x2824AF4
	0x0282426C LDR X0, [X23]
	0x02824270 LDRB W8, [X0 + 0x135]
	0x02824274 TBNZ X8, 0x0, 0x282427C
	0x02824278 BL 0x1C5C684
	0x0282427C LDR X8, [X24]
	0x02824280 LDR X9, [X0 + 0xC0]
	0x02824284 LDR W10, [X8 + 0xE0]
	0x02824288 LDR X21, [X9 + 0x18]
	0x0282428C CBNZ W10, 0x2824298
	0x02824290 MOV X0, X8
	0x02824294 BL 0x1C16DFC
	0x02824298 MOV X0, X21
	0x0282429C MOV X1, X31
	0x028242A0 BL 0x338C698
	0x028242A4 ADRP X8, 0x18F6000
	0x028242A8 LDR X8, [X8 + 0xDA8]
	0x028242AC MOV X21, X0
	0x028242B0 MOV X1, X31
	0x028242B4 LDR X8, [X8]
	0x028242B8 MOV X0, X8
	0x028242BC BL 0x338C698
	0x028242C0 MOV X1, X0
	0x028242C4 MOV X0, X21
	0x028242C8 MOV X2, X31
	0x028242CC BL 0x3395194
	0x028242D0 TBZ X0, 0x0, 0x2824530
	0x028242D4 ADRP X24, 0x18D0000
	0x028242D8 ADRP X25, 0x18F9000
	0x028242DC LDR X24, [X24 + 0x758]
	0x028242E0 LDR X25, [X25 + 0xEE8]
	0x028242E4 MOV W21, W31
	0x028242E8 MOV W20, W31
	0x028242EC LDR X0, [X23]
	0x028242F0 LDRB W8, [X0 + 0x135]
	0x028242F4 TBNZ X8, 0x0, 0x28242FC
	0x028242F8 BL 0x1C5C684
	0x028242FC LDR X8, [X0 + 0xC0]
	0x02824300 LDR X0, [X8 + 0x8]
	0x02824304 LDRB W8, [X0 + 0x135]
	0x02824308 TBNZ X8, 0x0, 0x2824310
	0x0282430C BL 0x1C5C684
	0x02824310 LDR W8, [X0 + 0xE0]
	0x02824314 CBNZ W8, 0x282431C
	0x02824318 BL 0x1C16DFC
	0x0282431C LDR X0, [X23]
	0x02824320 LDRB W8, [X0 + 0x135]
	0x02824324 TBNZ X8, 0x0, 0x282432C
	0x02824328 BL 0x1C5C684
	0x0282432C LDR X8, [X0 + 0xC0]
	0x02824330 LDR X22, [X8 + 0x28]
	0x02824334 LDR X0, [X22 + 0x20]
	0x02824338 LDRB W8, [X0 + 0x135]
	0x0282433C TBNZ X8, 0x0, 0x2824344
	0x02824340 BL 0x1C5C684
	0x02824344 LDR X8, [X0 + 0xC0]
	0x02824348 LDR X0, [X8 + 0x8]
	0x0282434C LDRB W8, [X0 + 0x135]
	0x02824350 TBNZ X8, 0x0, 0x2824358
	0x02824354 BL 0x1C5C684
	0x02824358 LDR W8, [X0 + 0xE0]
	0x0282435C CBNZ W8, 0x2824364
	0x02824360 BL 0x1C16DFC
	0x02824364 LDR X0, [X22 + 0x20]
	0x02824368 LDRB W8, [X0 + 0x135]
	0x0282436C TBNZ X8, 0x0, 0x2824374
	0x02824370 BL 0x1C5C684
	0x02824374 LDR X8, [X0 + 0xC0]
	0x02824378 LDR X0, [X8 + 0x8]
	0x0282437C LDRB W8, [X0 + 0x135]
	0x02824380 TBNZ X8, 0x0, 0x2824388
	0x02824384 BL 0x1C5C684
	0x02824388 LDR X8, [X0 + 0xB8]
	0x0282438C LDR W8, [X8]
	0x02824390 CMP W21, W8
	0x02824394 B.GE 0x2824B08
	0x02824398 LDR X0, [X23]
	0x0282439C LDRB W8, [X0 + 0x135]
	0x028243A0 TBNZ X8, 0x0, 0x28243A8
	0x028243A4 BL 0x1C5C684
	0x028243A8 LDR X8, [X0 + 0xC0]
	0x028243AC LDR X0, [X8 + 0x8]
	0x028243B0 LDRB W8, [X0 + 0x135]
	0x028243B4 TBNZ X8, 0x0, 0x28243BC
	0x028243B8 BL 0x1C5C684
	0x028243BC LDR W8, [X0 + 0xE0]
	0x028243C0 CBNZ W8, 0x28243C8
	0x028243C4 BL 0x1C16DFC
	0x028243C8 LDR X0, [X23]
	0x028243CC LDRB W8, [X0 + 0x135]
	0x028243D0 TBNZ X8, 0x0, 0x28243D8
	0x028243D4 BL 0x1C5C684
	0x028243D8 LDR X8, [X0 + 0xC0]
	0x028243DC MOV X0, X19
	0x028243E0 MOV W1, W21
	0x028243E4 LDR X2, [X8 + 0x40]
	0x028243E8 BL 0x2821834
	0x028243EC STRH W0, [X31]
	0x028243F0 LDR X0, [X23]
	0x028243F4 LDRB W8, [X0 + 0x135]
	0x028243F8 TBNZ X8, 0x0, 0x2824400
	0x028243FC BL 0x1C5C684
	0x02824400 LDR X8, [X0 + 0xC0]
	0x02824404 ADD X1, X31, 0x0
	0x02824408 LDR X0, [X8 + 0x20]
	0x0282440C BL 0x1C16E04
	0x02824410 CBZ X0, 0x2824DFC
	0x02824414 LDR X8, [X0]
	0x02824418 LDR X1, [X24]
	0x0282441C LDR X8, [X8 + 0x40]
	0x02824420 LDR X9, [X1 + 0x40]
	0x02824424 CMP X8, X9
	0x02824428 B.NE 0x2824E00
	0x0282442C BL 0x1C16E08
	0x02824430 LDR X8, [X0]
	0x02824434 ADD X0, X31, 0x10
	0x02824438 MOV X1, X31
	0x0282443C STR X8, [X31 + 0x10]
	0x02824440 BL 0x339A95C
	0x02824444 LDR X8, [X25]
	0x02824448 MOV W22, W0
	0x0282444C LDR W9, [X8 + 0xE0]
	0x02824450 CBNZ W9, 0x282445C
	0x02824454 MOV X0, X8
	0x02824458 BL 0x1C16DFC
	0x0282445C MOV W0, W20
	0x02824460 MOV W1, W22
	0x02824464 MOV X2, X31
	0x02824468 BL 0x32E15C0
	0x0282446C MOV W20, W0
	0x02824470 ADD W21, W21, 0x1
	0x02824474 B 0x28242EC
	0x02824478 LDR X0, [X23]
	0x0282447C LDRB W8, [X0 + 0x135]
	0x02824480 TBNZ X8, 0x0, 0x2824488
	0x02824484 BL 0x1C5C684
	0x02824488 LDR X8, [X24]
	0x0282448C LDR X9, [X0 + 0xC0]
	0x02824490 LDR W10, [X8 + 0xE0]
	0x02824494 LDR X21, [X9 + 0x18]
	0x02824498 CBNZ W10, 0x28244A4
	0x0282449C MOV X0, X8
	0x028244A0 BL 0x1C16DFC
	0x028244A4 MOV X0, X21
	0x028244A8 MOV X1, X31
	0x028244AC BL 0x338C698
	0x028244B0 ADRP X8, 0x18F6000
	0x028244B4 LDR X8, [X8 + 0xDA8]
	0x028244B8 MOV X21, X0
	0x028244BC MOV X1, X31
	0x028244C0 LDR X8, [X8]
	0x028244C4 MOV X0, X8
	0x028244C8 BL 0x338C698
	0x028244CC MOV X1, X0
	0x028244D0 MOV X0, X21
	0x028244D4 MOV X2, X31
	0x028244D8 BL 0x3395194
	0x028244DC TBZ X0, 0x0, 0x282473C
	0x028244E0 MOV X0, X19
	0x028244E4 MOV X1, X31
	0x028244E8 BL 0x339A95C
	0x028244EC ADRP X8, 0x18F9000
	0x028244F0 LDR X8, [X8 + 0xEE8]
	0x028244F4 MOV W20, W0
	0x028244F8 LDR X8, [X8]
	0x028244FC LDR W9, [X8 + 0xE0]
	0x02824500 CBNZ W9, 0x282450C
	0x02824504 MOV X0, X8
	0x02824508 BL 0x1C16DFC
	0x0282450C MOV W0, W31
	0x02824510 MOV W1, W20
	0x02824514 MOV X2, X31
	0x02824518 BL 0x32E15C0
	0x0282451C MOV W20, W0
	0x02824520 ADD X0, X19, 0x8
	0x02824524 MOV X1, X31
	0x02824528 BL 0x339A95C
	0x0282452C B 0x2824AF4
	0x02824530 LDR X0, [X23]
	0x02824534 LDRB W8, [X0 + 0x135]
	0x02824538 TBNZ X8, 0x0, 0x2824540
	0x0282453C BL 0x1C5C684
	0x02824540 LDR X8, [X24]
	0x02824544 LDR X9, [X0 + 0xC0]
	0x02824548 LDR W10, [X8 + 0xE0]
	0x0282454C LDR X21, [X9 + 0x18]
	0x02824550 CBNZ W10, 0x282455C
	0x02824554 MOV X0, X8
	0x02824558 BL 0x1C16DFC
	0x0282455C MOV X0, X21
	0x02824560 MOV X1, X31
	0x02824564 BL 0x338C698
	0x02824568 ADRP X8, 0x18F6000
	0x0282456C LDR X8, [X8 + 0xD88]
	0x02824570 MOV X21, X0
	0x02824574 MOV X1, X31
	0x02824578 LDR X8, [X8]
	0x0282457C MOV X0, X8
	0x02824580 BL 0x338C698
	0x02824584 MOV X1, X0
	0x02824588 MOV X0, X21
	0x0282458C MOV X2, X31
	0x02824590 BL 0x3395194
	0x02824594 TBZ X0, 0x0, 0x28247F4
	0x02824598 ADRP X24, 0x18D1000
	0x0282459C ADRP X25, 0x18F9000
	0x028245A0 LDR X24, [X24 + 0xA60]
	0x028245A4 LDR X25, [X25 + 0xEE8]
	0x028245A8 MOV W21, W31
	0x028245AC MOV W20, W31
	0x028245B0 LDR X0, [X23]
	0x028245B4 LDRB W8, [X0 + 0x135]
	0x028245B8 TBNZ X8, 0x0, 0x28245C0
	0x028245BC BL 0x1C5C684
	0x028245C0 LDR X8, [X0 + 0xC0]
	0x028245C4 LDR X0, [X8 + 0x8]
	0x028245C8 LDRB W8, [X0 + 0x135]
	0x028245CC TBNZ X8, 0x0, 0x28245D4
	0x028245D0 BL 0x1C5C684
	0x028245D4 LDR W8, [X0 + 0xE0]
	0x028245D8 CBNZ W8, 0x28245E0
	0x028245DC BL 0x1C16DFC
	0x028245E0 LDR X0, [X23]
	0x028245E4 LDRB W8, [X0 + 0x135]
	0x028245E8 TBNZ X8, 0x0, 0x28245F0
	0x028245EC BL 0x1C5C684
	0x028245F0 LDR X8, [X0 + 0xC0]
	0x028245F4 LDR X22, [X8 + 0x28]
	0x028245F8 LDR X0, [X22 + 0x20]
	0x028245FC LDRB W8, [X0 + 0x135]
	0x02824600 TBNZ X8, 0x0, 0x2824608
	0x02824604 BL 0x1C5C684
	0x02824608 LDR X8, [X0 + 0xC0]
	0x0282460C LDR X0, [X8 + 0x8]
	0x02824610 LDRB W8, [X0 + 0x135]
	0x02824614 TBNZ X8, 0x0, 0x282461C
	0x02824618 BL 0x1C5C684
	0x0282461C LDR W8, [X0 + 0xE0]
	0x02824620 CBNZ W8, 0x2824628
	0x02824624 BL 0x1C16DFC
	0x02824628 LDR X0, [X22 + 0x20]
	0x0282462C LDRB W8, [X0 + 0x135]
	0x02824630 TBNZ X8, 0x0, 0x2824638
	0x02824634 BL 0x1C5C684
	0x02824638 LDR X8, [X0 + 0xC0]
	0x0282463C LDR X0, [X8 + 0x8]
	0x02824640 LDRB W8, [X0 + 0x135]
	0x02824644 TBNZ X8, 0x0, 0x282464C
	0x02824648 BL 0x1C5C684
	0x0282464C LDR X8, [X0 + 0xB8]
	0x02824650 LDR W8, [X8]
	0x02824654 CMP W21, W8
	0x02824658 B.GE 0x2824B08
	0x0282465C LDR X0, [X23]
	0x02824660 LDRB W8, [X0 + 0x135]
	0x02824664 TBNZ X8, 0x0, 0x282466C
	0x02824668 BL 0x1C5C684
	0x0282466C LDR X8, [X0 + 0xC0]
	0x02824670 LDR X0, [X8 + 0x8]
	0x02824674 LDRB W8, [X0 + 0x135]
	0x02824678 TBNZ X8, 0x0, 0x2824680
	0x0282467C BL 0x1C5C684
	0x02824680 LDR W8, [X0 + 0xE0]
	0x02824684 CBNZ W8, 0x282468C
	0x02824688 BL 0x1C16DFC
	0x0282468C LDR X0, [X23]
	0x02824690 LDRB W8, [X0 + 0x135]
	0x02824694 TBNZ X8, 0x0, 0x282469C
	0x02824698 BL 0x1C5C684
	0x0282469C LDR X8, [X0 + 0xC0]
	0x028246A0 MOV X0, X19
	0x028246A4 MOV W1, W21
	0x028246A8 LDR X2, [X8 + 0x40]
	0x028246AC BL 0x2821834
	0x028246B0 STRH W0, [X31]
	0x028246B4 LDR X0, [X23]
	0x028246B8 LDRB W8, [X0 + 0x135]
	0x028246BC TBNZ X8, 0x0, 0x28246C4
	0x028246C0 BL 0x1C5C684
	0x028246C4 LDR X8, [X0 + 0xC0]
	0x028246C8 ADD X1, X31, 0x0
	0x028246CC LDR X0, [X8 + 0x20]
	0x028246D0 BL 0x1C16E04
	0x028246D4 CBZ X0, 0x2824DFC
	0x028246D8 LDR X8, [X0]
	0x028246DC LDR X1, [X24]
	0x028246E0 LDR X8, [X8 + 0x40]
	0x028246E4 LDR X9, [X1 + 0x40]
	0x028246E8 CMP X8, X9
	0x028246EC B.NE 0x2824E00
	0x028246F0 BL 0x1C16E08
	0x028246F4 LDR X8, [X0]
	0x028246F8 ADD X0, X31, 0x8
	0x028246FC MOV X1, X31
	0x02824700 STR X8, [X31 + 0x8]
	0x02824704 BL 0x337C960
	0x02824708 LDR X8, [X25]
	0x0282470C MOV W22, W0
	0x02824710 LDR W9, [X8 + 0xE0]
	0x02824714 CBNZ W9, 0x2824720
	0x02824718 MOV X0, X8
	0x0282471C BL 0x1C16DFC
	0x02824720 MOV W0, W20
	0x02824724 MOV W1, W22
	0x02824728 MOV X2, X31
	0x0282472C BL 0x32E15C0
	0x02824730 MOV W20, W0
	0x02824734 ADD W21, W21, 0x1
	0x02824738 B 0x28245B0
	0x0282473C LDR X0, [X23]
	0x02824740 LDRB W8, [X0 + 0x135]
	0x02824744 TBNZ X8, 0x0, 0x282474C
	0x02824748 BL 0x1C5C684
	0x0282474C LDR X8, [X24]
	0x02824750 LDR X9, [X0 + 0xC0]
	0x02824754 LDR W10, [X8 + 0xE0]
	0x02824758 LDR X21, [X9 + 0x18]
	0x0282475C CBNZ W10, 0x2824768
	0x02824760 MOV X0, X8
	0x02824764 BL 0x1C16DFC
	0x02824768 MOV X0, X21
	0x0282476C MOV X1, X31
	0x02824770 BL 0x338C698
	0x02824774 ADRP X8, 0x18F6000
	0x02824778 LDR X8, [X8 + 0xD88]
	0x0282477C MOV X21, X0
	0x02824780 MOV X1, X31
	0x02824784 LDR X8, [X8]
	0x02824788 MOV X0, X8
	0x0282478C BL 0x338C698
	0x02824790 MOV X1, X0
	0x02824794 MOV X0, X21
	0x02824798 MOV X2, X31
	0x0282479C BL 0x3395194
	0x028247A0 TBZ X0, 0x0, 0x2824A00
	0x028247A4 MOV X0, X19
	0x028247A8 MOV X1, X31
	0x028247AC BL 0x337C960
	0x028247B0 ADRP X8, 0x18F9000
	0x028247B4 LDR X8, [X8 + 0xEE8]
	0x028247B8 MOV W20, W0
	0x028247BC LDR X8, [X8]
	0x028247C0 LDR W9, [X8 + 0xE0]
	0x028247C4 CBNZ W9, 0x28247D0
	0x028247C8 MOV X0, X8
	0x028247CC BL 0x1C16DFC
	0x028247D0 MOV W0, W31
	0x028247D4 MOV W1, W20
	0x028247D8 MOV X2, X31
	0x028247DC BL 0x32E15C0
	0x028247E0 MOV W20, W0
	0x028247E4 ADD X0, X19, 0x8
	0x028247E8 MOV X1, X31
	0x028247EC BL 0x337C960
	0x028247F0 B 0x2824AF4
	0x028247F4 LDR X0, [X23]
	0x028247F8 LDRB W8, [X0 + 0x135]
	0x028247FC TBNZ X8, 0x0, 0x2824804
	0x02824800 BL 0x1C5C684
	0x02824804 LDR X8, [X24]
	0x02824808 LDR X9, [X0 + 0xC0]
	0x0282480C LDR W10, [X8 + 0xE0]
	0x02824810 LDR X21, [X9 + 0x18]
	0x02824814 CBNZ W10, 0x2824820
	0x02824818 MOV X0, X8
	0x0282481C BL 0x1C16DFC
	0x02824820 MOV X0, X21
	0x02824824 MOV X1, X31
	0x02824828 BL 0x338C698
	0x0282482C ADRP X8, 0x18F7000
	0x02824830 LDR X8, [X8 + 0xA80]
	0x02824834 MOV X21, X0
	0x02824838 MOV X1, X31
	0x0282483C LDR X8, [X8]
	0x02824840 MOV X0, X8
	0x02824844 BL 0x338C698
	0x02824848 MOV X1, X0
	0x0282484C MOV X0, X21
	0x02824850 MOV X2, X31
	0x02824854 BL 0x3395194
	0x02824858 TBZ X0, 0x0, 0x2824B24
	0x0282485C ADRP X24, 0x18CF000
	0x02824860 ADRP X25, 0x18F9000
	0x02824864 LDR X24, [X24 + 0xA90]
	0x02824868 LDR X25, [X25 + 0xEE8]
	0x0282486C MOV W21, W31
	0x02824870 MOV W20, W31
	0x02824874 LDR X0, [X23]
	0x02824878 LDRB W8, [X0 + 0x135]
	0x0282487C TBNZ X8, 0x0, 0x2824884
	0x02824880 BL 0x1C5C684
	0x02824884 LDR X8, [X0 + 0xC0]
	0x02824888 LDR X0, [X8 + 0x8]
	0x0282488C LDRB W8, [X0 + 0x135]
	0x02824890 TBNZ X8, 0x0, 0x2824898
	0x02824894 BL 0x1C5C684
	0x02824898 LDR W8, [X0 + 0xE0]
	0x0282489C CBNZ W8, 0x28248A4
	0x028248A0 BL 0x1C16DFC
	0x028248A4 LDR X0, [X23]
	0x028248A8 LDRB W8, [X0 + 0x135]
	0x028248AC TBNZ X8, 0x0, 0x28248B4
	0x028248B0 BL 0x1C5C684
	0x028248B4 LDR X8, [X0 + 0xC0]
	0x028248B8 LDR X22, [X8 + 0x28]
	0x028248BC LDR X0, [X22 + 0x20]
	0x028248C0 LDRB W8, [X0 + 0x135]
	0x028248C4 TBNZ X8, 0x0, 0x28248CC
	0x028248C8 BL 0x1C5C684
	0x028248CC LDR X8, [X0 + 0xC0]
	0x028248D0 LDR X0, [X8 + 0x8]
	0x028248D4 LDRB W8, [X0 + 0x135]
	0x028248D8 TBNZ X8, 0x0, 0x28248E0
	0x028248DC BL 0x1C5C684
	0x028248E0 LDR W8, [X0 + 0xE0]
	0x028248E4 CBNZ W8, 0x28248EC
	0x028248E8 BL 0x1C16DFC
	0x028248EC LDR X0, [X22 + 0x20]
	0x028248F0 LDRB W8, [X0 + 0x135]
	0x028248F4 TBNZ X8, 0x0, 0x28248FC
	0x028248F8 BL 0x1C5C684
	0x028248FC LDR X8, [X0 + 0xC0]
	0x02824900 LDR X0, [X8 + 0x8]
	0x02824904 LDRB W8, [X0 + 0x135]
	0x02824908 TBNZ X8, 0x0, 0x2824910
	0x0282490C BL 0x1C5C684
	0x02824910 LDR X8, [X0 + 0xB8]
	0x02824914 LDR W8, [X8]
	0x02824918 CMP W21, W8
	0x0282491C B.GE 0x2824B08
	0x02824920 LDR X0, [X23]
	0x02824924 LDRB W8, [X0 + 0x135]
	0x02824928 TBNZ X8, 0x0, 0x2824930
	0x0282492C BL 0x1C5C684
	0x02824930 LDR X8, [X0 + 0xC0]
	0x02824934 LDR X0, [X8 + 0x8]
	0x02824938 LDRB W8, [X0 + 0x135]
	0x0282493C TBNZ X8, 0x0, 0x2824944
	0x02824940 BL 0x1C5C684
	0x02824944 LDR W8, [X0 + 0xE0]
	0x02824948 CBNZ W8, 0x2824950
	0x0282494C BL 0x1C16DFC
	0x02824950 LDR X0, [X23]
	0x02824954 LDRB W8, [X0 + 0x135]
	0x02824958 TBNZ X8, 0x0, 0x2824960
	0x0282495C BL 0x1C5C684
	0x02824960 LDR X8, [X0 + 0xC0]
	0x02824964 MOV X0, X19
	0x02824968 MOV W1, W21
	0x0282496C LDR X2, [X8 + 0x40]
	0x02824970 BL 0x2821834
	0x02824974 STRH W0, [X31]
	0x02824978 LDR X0, [X23]
	0x0282497C LDRB W8, [X0 + 0x135]
	0x02824980 TBNZ X8, 0x0, 0x2824988
	0x02824984 BL 0x1C5C684
	0x02824988 LDR X8, [X0 + 0xC0]
	0x0282498C ADD X1, X31, 0x0
	0x02824990 LDR X0, [X8 + 0x20]
	0x02824994 BL 0x1C16E04
	0x02824998 CBZ X0, 0x2824DFC
	0x0282499C LDR X8, [X0]
	0x028249A0 LDR X1, [X24]
	0x028249A4 LDR X8, [X8 + 0x40]
	0x028249A8 LDR X9, [X1 + 0x40]
	0x028249AC CMP X8, X9
	0x028249B0 B.NE 0x2824E00
	0x028249B4 BL 0x1C16E08
	0x028249B8 LDR V0, [X0]
	0x028249BC ADD X0, X31, 0x4
	0x028249C0 MOV X1, X31
	0x028249C4 STR S0, [X31 + 0x4]
	0x028249C8 BL 0x338FE0C
	0x028249CC LDR X8, [X25]
	0x028249D0 MOV W22, W0
	0x028249D4 LDR W9, [X8 + 0xE0]
	0x028249D8 CBNZ W9, 0x28249E4
	0x028249DC MOV X0, X8
	0x028249E0 BL 0x1C16DFC
	0x028249E4 MOV W0, W20
	0x028249E8 MOV W1, W22
	0x028249EC MOV X2, X31
	0x028249F0 BL 0x32E15C0
	0x028249F4 MOV W20, W0
	0x028249F8 ADD W21, W21, 0x1
	0x028249FC B 0x2824874
	0x02824A00 LDR X0, [X23]
	0x02824A04 LDRB W8, [X0 + 0x135]
	0x02824A08 TBNZ X8, 0x0, 0x2824A10
	0x02824A0C BL 0x1C5C684
	0x02824A10 LDR X8, [X24]
	0x02824A14 LDR X9, [X0 + 0xC0]
	0x02824A18 LDR W10, [X8 + 0xE0]
	0x02824A1C LDR X21, [X9 + 0x18]
	0x02824A20 CBNZ W10, 0x2824A2C
	0x02824A24 MOV X0, X8
	0x02824A28 BL 0x1C16DFC
	0x02824A2C MOV X0, X21
	0x02824A30 MOV X1, X31
	0x02824A34 BL 0x338C698
	0x02824A38 ADRP X8, 0x18F7000
	0x02824A3C LDR X8, [X8 + 0xA80]
	0x02824A40 MOV X21, X0
	0x02824A44 MOV X1, X31
	0x02824A48 LDR X8, [X8]
	0x02824A4C MOV X0, X8
	0x02824A50 BL 0x338C698
	0x02824A54 MOV X1, X0
	0x02824A58 MOV X0, X21
	0x02824A5C MOV X2, X31
	0x02824A60 BL 0x3395194
	0x02824A64 TBZ X0, 0x0, 0x2824D30
	0x02824A68 MOV X0, X19
	0x02824A6C MOV X1, X31
	0x02824A70 BL 0x338FE0C
	0x02824A74 ADRP X8, 0x18F9000
	0x02824A78 LDR X8, [X8 + 0xEE8]
	0x02824A7C MOV W20, W0
	0x02824A80 LDR X8, [X8]
	0x02824A84 LDR W9, [X8 + 0xE0]
	0x02824A88 CBNZ W9, 0x2824A94
	0x02824A8C MOV X0, X8
	0x02824A90 BL 0x1C16DFC
	0x02824A94 MOV W0, W31
	0x02824A98 MOV W1, W20
	0x02824A9C MOV X2, X31
	0x02824AA0 BL 0x32E15C0
	0x02824AA4 MOV W20, W0
	0x02824AA8 ADD X0, X19, 0x4
	0x02824AAC MOV X1, X31
	0x02824AB0 BL 0x338FE0C
	0x02824AB4 MOV W1, W0
	0x02824AB8 MOV W0, W20
	0x02824ABC MOV X2, X31
	0x02824AC0 BL 0x32E15C0
	0x02824AC4 MOV W20, W0
	0x02824AC8 ADD X0, X19, 0x8
	0x02824ACC MOV X1, X31
	0x02824AD0 BL 0x338FE0C
	0x02824AD4 MOV W1, W0
	0x02824AD8 MOV W0, W20
	0x02824ADC MOV X2, X31
	0x02824AE0 BL 0x32E15C0
	0x02824AE4 MOV W20, W0
	0x02824AE8 ADD X0, X19, 0xC
	0x02824AEC MOV X1, X31
	0x02824AF0 BL 0x338FE0C
	0x02824AF4 MOV W1, W0
	0x02824AF8 MOV W0, W20
	0x02824AFC MOV X2, X31
	0x02824B00 BL 0x32E15C0
	0x02824B04 MOV W20, W0
	0x02824B08 MOV W0, W20
	0x02824B0C LDP X20, X19, [X31 + 0x60]
	0x02824B10 LDP X22, X21, [X31 + 0x50]
	0x02824B14 LDP X24, X23, [X31 + 0x40]
	0x02824B18 LDP X30, X25, [X31 + 0x30]
	0x02824B1C ADD X31, X31, 0x70
	0x02824B20 RET
	0x02824B24 LDR X0, [X23]
	0x02824B28 LDRB W8, [X0 + 0x135]
	0x02824B2C TBNZ X8, 0x0, 0x2824B34
	0x02824B30 BL 0x1C5C684
	0x02824B34 LDR X8, [X24]
	0x02824B38 LDR X9, [X0 + 0xC0]
	0x02824B3C LDR W10, [X8 + 0xE0]
	0x02824B40 LDR X21, [X9 + 0x18]
	0x02824B44 CBNZ W10, 0x2824B50
	0x02824B48 MOV X0, X8
	0x02824B4C BL 0x1C16DFC
	0x02824B50 MOV X0, X21
	0x02824B54 MOV X1, X31
	0x02824B58 BL 0x338C698
	0x02824B5C ADRP X8, 0x18F7000
	0x02824B60 LDR X8, [X8 + 0xA78]
	0x02824B64 MOV X21, X0
	0x02824B68 MOV X1, X31
	0x02824B6C LDR X8, [X8]
	0x02824B70 MOV X0, X8
	0x02824B74 BL 0x338C698
	0x02824B78 MOV X1, X0
	0x02824B7C MOV X0, X21
	0x02824B80 MOV X2, X31
	0x02824B84 BL 0x3395194
	0x02824B88 TBZ X0, 0x0, 0x2824E04
	0x02824B8C ADRP X22, 0x18D2000
	0x02824B90 ADRP X24, 0x18F9000
	0x02824B94 LDR X22, [X22 + 0x978]
	0x02824B98 LDR X24, [X24 + 0xEE8]
	0x02824B9C MOV W21, W31
	0x02824BA0 MOV W20, W31
	0x02824BA4 LDR X0, [X23]
	0x02824BA8 LDRB W8, [X0 + 0x135]
	0x02824BAC TBNZ X8, 0x0, 0x2824BB4
	0x02824BB0 BL 0x1C5C684
	0x02824BB4 LDR X8, [X0 + 0xC0]
	0x02824BB8 LDR X0, [X8 + 0x8]
	0x02824BBC LDRB W8, [X0 + 0x135]
	0x02824BC0 TBNZ X8, 0x0, 0x2824BC8
	0x02824BC4 BL 0x1C5C684
	0x02824BC8 LDR W8, [X0 + 0xE0]
	0x02824BCC CBNZ W8, 0x2824BD4
	0x02824BD0 BL 0x1C16DFC
	0x02824BD4 LDR X0, [X23]
	0x02824BD8 LDRB W8, [X0 + 0x135]
	0x02824BDC TBNZ X8, 0x0, 0x2824BE4
	0x02824BE0 BL 0x1C5C684
	0x02824BE4 LDR X8, [X0 + 0xC0]
	0x02824BE8 LDR X25, [X8 + 0x28]
	0x02824BEC LDR X0, [X25 + 0x20]
	0x02824BF0 LDRB W8, [X0 + 0x135]
	0x02824BF4 TBNZ X8, 0x0, 0x2824BFC
	0x02824BF8 BL 0x1C5C684
	0x02824BFC LDR X8, [X0 + 0xC0]
	0x02824C00 LDR X0, [X8 + 0x8]
	0x02824C04 LDRB W8, [X0 + 0x135]
	0x02824C08 TBNZ X8, 0x0, 0x2824C10
	0x02824C0C BL 0x1C5C684
	0x02824C10 LDR W8, [X0 + 0xE0]
	0x02824C14 CBNZ W8, 0x2824C1C
	0x02824C18 BL 0x1C16DFC
	0x02824C1C LDR X0, [X25 + 0x20]
	0x02824C20 LDRB W8, [X0 + 0x135]
	0x02824C24 TBNZ X8, 0x0, 0x2824C2C
	0x02824C28 BL 0x1C5C684
	0x02824C2C LDR X8, [X0 + 0xC0]
	0x02824C30 LDR X0, [X8 + 0x8]
	0x02824C34 LDRB W8, [X0 + 0x135]
	0x02824C38 TBNZ X8, 0x0, 0x2824C40
	0x02824C3C BL 0x1C5C684
	0x02824C40 LDR X8, [X0 + 0xB8]
	0x02824C44 LDR W8, [X8]
	0x02824C48 CMP W21, W8
	0x02824C4C B.GE 0x2824B08
	0x02824C50 LDR X0, [X23]
	0x02824C54 LDRB W8, [X0 + 0x135]
	0x02824C58 TBNZ X8, 0x0, 0x2824C60
	0x02824C5C BL 0x1C5C684
	0x02824C60 LDR X8, [X0 + 0xC0]
	0x02824C64 LDR X0, [X8 + 0x8]
	0x02824C68 LDRB W8, [X0 + 0x135]
	0x02824C6C TBNZ X8, 0x0, 0x2824C74
	0x02824C70 BL 0x1C5C684
	0x02824C74 LDR W8, [X0 + 0xE0]
	0x02824C78 CBNZ W8, 0x2824C80
	0x02824C7C BL 0x1C16DFC
	0x02824C80 LDR X0, [X23]
	0x02824C84 LDRB W8, [X0 + 0x135]
	0x02824C88 TBNZ X8, 0x0, 0x2824C90
	0x02824C8C BL 0x1C5C684
	0x02824C90 LDR X8, [X0 + 0xC0]
	0x02824C94 MOV X0, X19
	0x02824C98 MOV W1, W21
	0x02824C9C LDR X2, [X8 + 0x40]
	0x02824CA0 BL 0x2821834
	0x02824CA4 STRH W0, [X31]
	0x02824CA8 LDR X0, [X23]
	0x02824CAC LDRB W8, [X0 + 0x135]
	0x02824CB0 TBNZ X8, 0x0, 0x2824CB8
	0x02824CB4 BL 0x1C5C684
	0x02824CB8 LDR X8, [X0 + 0xC0]
	0x02824CBC ADD X1, X31, 0x0
	0x02824CC0 LDR X0, [X8 + 0x20]
	0x02824CC4 BL 0x1C16E04
	0x02824CC8 CBZ X0, 0x2824DFC
	0x02824CCC LDR X8, [X0]
	0x02824CD0 LDR X1, [X22]
	0x02824CD4 LDR X8, [X8 + 0x40]
	0x02824CD8 LDR X9, [X1 + 0x40]
	0x02824CDC CMP X8, X9
	0x02824CE0 B.NE 0x2824E00
	0x02824CE4 BL 0x1C16E08
	0x02824CE8 MOV X8, X0
	0x02824CEC LDR X0, [X24]
	0x02824CF0 LDR X8, [X8]
	0x02824CF4 LDR W9, [X0 + 0xE0]
	0x02824CF8 SUB X10, X31, X8
	0x02824CFC AND X11, X8, 0x7FFFFFFFFFFFFFFF
	0x02824D00 ANDS X31, X10, 0x7FFFFFFFFFFFFFFF
	0x02824D04 CSEL X25, X11, X8, EQ
	0x02824D08 CBNZ W9, 0x2824D10
	0x02824D0C BL 0x1C16DFC
	0x02824D10 UBFM X8, X25, 0x20, 0x3F
	0x02824D14 EOR W1, W8, W25, 0x0
	0x02824D18 MOV W0, W20
	0x02824D1C MOV X2, X31
	0x02824D20 BL 0x32E15C0
	0x02824D24 MOV W20, W0
	0x02824D28 ADD W21, W21, 0x1
	0x02824D2C B 0x2824BA4
	0x02824D30 LDR X0, [X23]
	0x02824D34 LDRB W8, [X0 + 0x135]
	0x02824D38 TBNZ X8, 0x0, 0x2824D40
	0x02824D3C BL 0x1C5C684
	0x02824D40 LDR X8, [X24]
	0x02824D44 LDR X9, [X0 + 0xC0]
	0x02824D48 LDR W10, [X8 + 0xE0]
	0x02824D4C LDR X21, [X9 + 0x18]
	0x02824D50 CBNZ W10, 0x2824D5C
	0x02824D54 MOV X0, X8
	0x02824D58 BL 0x1C16DFC
	0x02824D5C MOV X0, X21
	0x02824D60 MOV X1, X31
	0x02824D64 BL 0x338C698
	0x02824D68 ADRP X8, 0x18F7000
	0x02824D6C LDR X8, [X8 + 0xA78]
	0x02824D70 MOV X21, X0
	0x02824D74 MOV X1, X31
	0x02824D78 LDR X8, [X8]
	0x02824D7C MOV X0, X8
	0x02824D80 BL 0x338C698
	0x02824D84 MOV X1, X0
	0x02824D88 MOV X0, X21
	0x02824D8C MOV X2, X31
	0x02824D90 BL 0x3395194
	0x02824D94 TBZ X0, 0x0, 0x2824E04
	0x02824D98 ADRP X9, 0x18F9000
	0x02824D9C LDR X8, [X19]
	0x02824DA0 LDR X9, [X9 + 0xEE8]
	0x02824DA4 AND X10, X8, 0x7FFFFFFFFFFFFFFF
	0x02824DA8 LDR X0, [X9]
	0x02824DAC SUB X9, X31, X8
	0x02824DB0 ANDS X31, X9, 0x7FFFFFFFFFFFFFFF
	0x02824DB4 CSEL X8, X10, X8, EQ
	0x02824DB8 LDR W11, [X0 + 0xE0]
	0x02824DBC UBFM X9, X8, 0x20, 0x3F
	0x02824DC0 EOR W20, W9, W8, 0x0
	0x02824DC4 CBNZ W11, 0x2824DCC
	0x02824DC8 BL 0x1C16DFC
	0x02824DCC MOV W0, W31
	0x02824DD0 MOV W1, W20
	0x02824DD4 MOV X2, X31
	0x02824DD8 BL 0x32E15C0
	0x02824DDC LDR X8, [X19 + 0x8]
	0x02824DE0 SUB X9, X31, X8
	0x02824DE4 AND X10, X8, 0x7FFFFFFFFFFFFFFF
	0x02824DE8 ANDS X31, X9, 0x7FFFFFFFFFFFFFFF
	0x02824DEC CSEL X8, X10, X8, EQ
	0x02824DF0 UBFM X9, X8, 0x20, 0x3F
	0x02824DF4 EOR W1, W9, W8, 0x0
	0x02824DF8 B 0x2824AFC
	0x02824DFC BL 0x1C16F20
	0x02824E00 BL 0x1C171E0
	0x02824E04 ADRP X0, 0x18CF000
	0x02824E08 LDR X0, [X0 + 0xB40]
	0x02824E0C BL 0x1C16D08
	0x02824E10 BL 0x1C16F10
	0x02824E14 MOV X19, X0
	0x02824E18 ADRP X0, 0x18F8000
	0x02824E1C LDR X0, [X0 + 0xA90]
	0x02824E20 BL 0x1C16D08
	0x02824E24 MOV X1, X0
	0x02824E28 MOV X0, X19
	0x02824E2C MOV X2, X31
	0x02824E30 BL 0x3379A44
	0x02824E34 MOV X0, X19
	0x02824E38 MOV X1, X20
	0x02824E3C BL 0x1C16DEC
	0x02824E40 STR X30, [X31 - 0x30]!
	0x02824E44 STP X22, X21, [X31 + 0x10]
	0x02824E48 STP X20, X19, [X31 + 0x20]
	0x02824E4C ADRP X21, 0x1BB6000
	0x02824E50 ADRP X22, 0x18D1000
	0x02824E54 LDRB W8, [X21 + 0xA78]
	0x02824E58 LDR X22, [X22 + 0xC48]
	0x02824E5C MOV X20, X1
	0x02824E60 MOV X19, X0
	0x02824E64 TBNZ X8, 0x0, 0x2824E88
	0x02824E68 ADRP X0, 0x18D1000
	0x02824E6C LDR X0, [X0 + 0xC48]
	0x02824E70 BL 0x1C16CF4
	0x02824E74 ADRP X0, 0x18F9000
	0x02824E78 LDR X0, [X0 + 0xEF0]
	0x02824E7C BL 0x1C16CF4
	0x02824E80 MOVZ W8, 0x1
	0x02824E84 STRB W8, [X21 + 0xA78]
	0x02824E88 LDR X0, [X22]
	0x02824E8C LDR W8, [X0 + 0xE0]
	0x02824E90 CBNZ W8, 0x2824E98
	0x02824E94 BL 0x1C16DFC
	0x02824E98 MOV X0, X31
	0x02824E9C BL 0x33387A0
	0x02824EA0 LDR X8, [X20 + 0x20]
	0x02824EA4 MOV X21, X0
	0x02824EA8 LDRB W9, [X8 + 0x135]
	0x02824EAC TBNZ X9, 0x0, 0x2824EBC
	0x02824EB0 MOV X0, X8
	0x02824EB4 BL 0x1C5C684
	0x02824EB8 MOV X8, X0
	0x02824EBC LDR X8, [X8 + 0xC0]
	0x02824EC0 LDR X0, [X8 + 0x8]
	0x02824EC4 LDRB W8, [X0 + 0x135]
	0x02824EC8 TBNZ X8, 0x0, 0x2824ED0
	0x02824ECC BL 0x1C5C684
	0x02824ED0 ADRP X22, 0x18F9000
	0x02824ED4 LDR W8, [X0 + 0xE0]
	0x02824ED8 LDR X22, [X22 + 0xEF0]
	0x02824EDC CBNZ W8, 0x2824EE4
	0x02824EE0 BL 0x1C16DFC
	0x02824EE4 LDR X0, [X20 + 0x20]
	0x02824EE8 LDR X20, [X22]
	0x02824EEC LDRB W8, [X0 + 0x135]
	0x02824EF0 TBNZ X8, 0x0, 0x2824EF8
	0x02824EF4 BL 0x1C5C684
	0x02824EF8 LDR X8, [X0 + 0xC0]
	0x02824EFC MOV X0, X19
	0x02824F00 MOV X1, X20
	0x02824F04 MOV X2, X21
	0x02824F08 LDR X3, [X8 + 0x50]
	0x02824F0C LDP X20, X19, [X31 + 0x20]
	0x02824F10 LDP X22, X21, [X31 + 0x10]
	0x02824F14 LDR X30, [X31], #0x30
	0x02824F18 B 0x2824F1C
	0x02824F1C SUB X31, X31, 0x60
	0x02824F20 STP X30, X27, [X31 + 0x10]
	0x02824F24 STP X26, X25, [X31 + 0x20]
	0x02824F28 STP X24, X23, [X31 + 0x30]
	0x02824F2C STP X22, X21, [X31 + 0x40]
	0x02824F30 STP X20, X19, [X31 + 0x50]
	0x02824F34 ADRP X21, 0x1BB6000
	0x02824F38 ADRP X24, 0x18CF000
	0x02824F3C LDRB W8, [X21 + 0xA79]
	0x02824F40 LDR X24, [X24 + 0x8F0]
	0x02824F44 MOV X22, X3
	0x02824F48 MOV X19, X2
	0x02824F4C MOV X20, X1
	0x02824F50 MOV X23, X0
	0x02824F54 TBNZ X8, 0x0, 0x2824F78
	0x02824F58 ADRP X0, 0x18F9000
	0x02824F5C LDR X0, [X0 + 0xEF8]
	0x02824F60 BL 0x1C16CF4
	0x02824F64 ADRP X0, 0x18CF000
	0x02824F68 LDR X0, [X0 + 0x8F0]
	0x02824F6C BL 0x1C16CF4
	0x02824F70 MOVZ W8, 0x1
	0x02824F74 STRB W8, [X21 + 0xA79]
	0x02824F78 LDR X0, [X24]
	0x02824F7C BL 0x1C16F10
	0x02824F80 MOV X1, X31
	0x02824F84 MOV X21, X0
	0x02824F88 BL 0x3231AC4
	0x02824F8C MOV X0, X19
	0x02824F90 MOV X1, X31
	0x02824F94 BL 0x333ACEC
	0x02824F98 CBZ X0, 0x28252E8
	0x02824F9C CBZ X21, 0x28252E8
	0x02824FA0 ADRP X27, 0x18F9000
	0x02824FA4 LDR X24, [X0 + 0x40]
	0x02824FA8 LDR X27, [X27 + 0xEF8]
	0x02824FAC MOVZ W1, 0x3C
	0x02824FB0 MOV X0, X21
	0x02824FB4 MOV X2, X31
	0x02824FB8 BL 0x3233D30
	0x02824FBC MOV W25, W31
	0x02824FC0 LDR X0, [X22 + 0x20]
	0x02824FC4 LDRB W8, [X0 + 0x135]
	0x02824FC8 TBNZ X8, 0x0, 0x2824FD0
	0x02824FCC BL 0x1C5C684
	0x02824FD0 LDR X8, [X0 + 0xC0]
	0x02824FD4 LDR X0, [X8 + 0x8]
	0x02824FD8 LDRB W8, [X0 + 0x135]
	0x02824FDC TBNZ X8, 0x0, 0x2824FE4
	0x02824FE0 BL 0x1C5C684
	0x02824FE4 LDR W8, [X0 + 0xE0]
	0x02824FE8 CBNZ W8, 0x2824FF0
	0x02824FEC BL 0x1C16DFC
	0x02824FF0 LDR X0, [X22 + 0x20]
	0x02824FF4 LDRB W8, [X0 + 0x135]
	0x02824FF8 TBNZ X8, 0x0, 0x2825000
	0x02824FFC BL 0x1C5C684
	0x02825000 LDR X8, [X0 + 0xC0]
	0x02825004 LDR X26, [X8 + 0x28]
	0x02825008 LDR X0, [X26 + 0x20]
	0x0282500C LDRB W8, [X0 + 0x135]
	0x02825010 TBNZ X8, 0x0, 0x2825018
	0x02825014 BL 0x1C5C684
	0x02825018 LDR X8, [X0 + 0xC0]
	0x0282501C LDR X0, [X8 + 0x8]
	0x02825020 LDRB W8, [X0 + 0x135]
	0x02825024 TBNZ X8, 0x0, 0x282502C
	0x02825028 BL 0x1C5C684
	0x0282502C LDR W8, [X0 + 0xE0]
	0x02825030 CBNZ W8, 0x2825038
	0x02825034 BL 0x1C16DFC
	0x02825038 LDR X0, [X26 + 0x20]
	0x0282503C LDRB W8, [X0 + 0x135]
	0x02825040 TBNZ X8, 0x0, 0x2825048
	0x02825044 BL 0x1C5C684
	0x02825048 LDR X8, [X0 + 0xC0]
	0x0282504C LDR X0, [X8 + 0x8]
	0x02825050 LDRB W8, [X0 + 0x135]
	0x02825054 TBNZ X8, 0x0, 0x282505C
	0x02825058 BL 0x1C5C684
	0x0282505C LDR X8, [X22 + 0x20]
	0x02825060 LDR X9, [X0 + 0xB8]
	0x02825064 LDRB W10, [X8 + 0x135]
	0x02825068 LDR W26, [X9]
	0x0282506C TBNZ X10, 0x0, 0x282507C
	0x02825070 MOV X0, X8
	0x02825074 BL 0x1C5C684
	0x02825078 MOV X8, X0
	0x0282507C LDR X8, [X8 + 0xC0]
	0x02825080 LDR X0, [X8 + 0x8]
	0x02825084 LDRB W8, [X0 + 0x135]
	0x02825088 TBNZ X8, 0x0, 0x2825090
	0x0282508C BL 0x1C5C684
	0x02825090 LDR W8, [X0 + 0xE0]
	0x02825094 CBNZ W8, 0x282509C
	0x02825098 BL 0x1C16DFC
	0x0282509C LDR X0, [X22 + 0x20]
	0x028250A0 SUB W26, W26, 0x1
	0x028250A4 LDRB W8, [X0 + 0x135]
	0x028250A8 TBNZ X8, 0x0, 0x28250B0
	0x028250AC BL 0x1C5C684
	0x028250B0 LDR X8, [X0 + 0xC0]
	0x028250B4 CMP W25, W26
	0x028250B8 B.GE 0x282518C
	0x028250BC LDR X2, [X8 + 0x40]
	0x028250C0 MOV X0, X23
	0x028250C4 MOV W1, W25
	0x028250C8 BL 0x2821834
	0x028250CC STRH W0, [X31 + 0xC]
	0x028250D0 LDR X0, [X22 + 0x20]
	0x028250D4 LDRB W8, [X0 + 0x135]
	0x028250D8 TBNZ X8, 0x0, 0x28250E0
	0x028250DC BL 0x1C5C684
	0x028250E0 LDR X8, [X0 + 0xC0]
	0x028250E4 ADD X1, X31, 0xC
	0x028250E8 LDR X0, [X8 + 0x20]
	0x028250EC BL 0x1C16E04
	0x028250F0 LDR X8, [X0]
	0x028250F4 LDR X1, [X27]
	0x028250F8 MOV X26, X0
	0x028250FC LDRH W9, [X8 + 0x12E]
	0x02825100 CBZ X9, 0x2825124
	0x02825104 LDR X10, [X8 + 0xB0]
	0x02825108 ADD X10, X10, 0x8
	0x0282510C LDUR X11, [X10 - 0x8]
	0x02825110 CMP X11, X1
	0x02825114 B.EQ 0x2825134
	0x02825118 SUBS X9, X9, 0x1
	0x0282511C ADD X10, X10, 0x10
	0x02825120 B.NE 0x282510C
	0x02825124 MOV X0, X26
	0x02825128 MOV W2, W31
	0x0282512C BL 0x1C5C788
	0x02825130 B 0x2825140
	0x02825134 LDRSW X9, [X10]
	0x02825138 ADD X8, X8, X9, 0x4, LSL
	0x0282513C ADD X0, X8, 0x138
	0x02825140 LDP X8, X3, [X0]
	0x02825144 MOV X0, X26
	0x02825148 MOV X1, X20
	0x0282514C MOV X2, X19
	0x02825150 BLR X8
	0x02825154 MOV X1, X0
	0x02825158 MOV X0, X21
	0x0282515C MOV X2, X31
	0x02825160 BL 0x32333E0
	0x02825164 MOV X0, X21
	0x02825168 MOV X1, X24
	0x0282516C MOV X2, X31
	0x02825170 BL 0x32333E0
	0x02825174 MOVZ W1, 0x20
	0x02825178 MOV X0, X21
	0x0282517C MOV X2, X31
	0x02825180 BL 0x3233D30
	0x02825184 ADD W25, W25, 0x1
	0x02825188 B 0x2824FC0
	0x0282518C LDR X24, [X8 + 0x28]
	0x02825190 LDR X0, [X24 + 0x20]
	0x02825194 LDRB W8, [X0 + 0x135]
	0x02825198 TBNZ X8, 0x0, 0x28251A0
	0x0282519C BL 0x1C5C684
	0x028251A0 LDR X8, [X0 + 0xC0]
	0x028251A4 LDR X0, [X8 + 0x8]
	0x028251A8 LDRB W8, [X0 + 0x135]
	0x028251AC TBNZ X8, 0x0, 0x28251B4
	0x028251B0 BL 0x1C5C684
	0x028251B4 LDR W8, [X0 + 0xE0]
	0x028251B8 CBNZ W8, 0x28251C0
	0x028251BC BL 0x1C16DFC
	0x028251C0 LDR X0, [X24 + 0x20]
	0x028251C4 LDRB W8, [X0 + 0x135]
	0x028251C8 TBNZ X8, 0x0, 0x28251D0
	0x028251CC BL 0x1C5C684
	0x028251D0 LDR X8, [X0 + 0xC0]
	0x028251D4 LDR X0, [X8 + 0x8]
	0x028251D8 LDRB W8, [X0 + 0x135]
	0x028251DC TBNZ X8, 0x0, 0x28251E4
	0x028251E0 BL 0x1C5C684
	0x028251E4 LDR X8, [X0 + 0xB8]
	0x028251E8 LDR X0, [X22 + 0x20]
	0x028251EC LDR W8, [X8]
	0x028251F0 LDRB W9, [X0 + 0x135]
	0x028251F4 SUB W24, W8, 0x1
	0x028251F8 TBNZ X9, 0x0, 0x2825200
	0x028251FC BL 0x1C5C684
	0x02825200 LDR X8, [X0 + 0xC0]
	0x02825204 MOV X0, X23
	0x02825208 MOV W1, W24
	0x0282520C LDR X2, [X8 + 0x40]
	0x02825210 BL 0x2821834
	0x02825214 STRH W0, [X31 + 0x8]
	0x02825218 LDR X0, [X22 + 0x20]
	0x0282521C LDRB W8, [X0 + 0x135]
	0x02825220 TBNZ X8, 0x0, 0x2825228
	0x02825224 BL 0x1C5C684
	0x02825228 LDR X8, [X0 + 0xC0]
	0x0282522C ADD X1, X31, 0x8
	0x02825230 LDR X0, [X8 + 0x20]
	0x02825234 BL 0x1C16E04
	0x02825238 LDR X8, [X0]
	0x0282523C LDR X1, [X27]
	0x02825240 MOV X22, X0
	0x02825244 LDRH W9, [X8 + 0x12E]
	0x02825248 CBZ X9, 0x282526C
	0x0282524C LDR X10, [X8 + 0xB0]
	0x02825250 ADD X10, X10, 0x8
	0x02825254 LDUR X11, [X10 - 0x8]
	0x02825258 CMP X11, X1
	0x0282525C B.EQ 0x282527C
	0x02825260 SUBS X9, X9, 0x1
	0x02825264 ADD X10, X10, 0x10
	0x02825268 B.NE 0x2825254
	0x0282526C MOV X0, X22
	0x02825270 MOV W2, W31
	0x02825274 BL 0x1C5C788
	0x02825278 B 0x2825288
	0x0282527C LDRSW X9, [X10]
	0x02825280 ADD X8, X8, X9, 0x4, LSL
	0x02825284 ADD X0, X8, 0x138
	0x02825288 LDP X8, X3, [X0]
	0x0282528C MOV X0, X22
	0x02825290 MOV X1, X20
	0x02825294 MOV X2, X19
	0x02825298 BLR X8
	0x0282529C MOV X1, X0
	0x028252A0 MOV X0, X21
	0x028252A4 MOV X2, X31
	0x028252A8 BL 0x32333E0
	0x028252AC MOVZ W1, 0x3E
	0x028252B0 MOV X0, X21
	0x028252B4 MOV X2, X31
	0x028252B8 BL 0x3233D30
	0x028252BC LDR X8, [X21]
	0x028252C0 MOV X0, X21
	0x028252C4 LDP X9, X1, [X8 + 0x168]
	0x028252C8 BLR X9
	0x028252CC LDP X20, X19, [X31 + 0x50]
	0x028252D0 LDP X22, X21, [X31 + 0x40]
	0x028252D4 LDP X24, X23, [X31 + 0x30]
	0x028252D8 LDP X26, X25, [X31 + 0x20]
	0x028252DC LDP X30, X27, [X31 + 0x10]
	0x028252E0 ADD X31, X31, 0x60
	0x028252E4 RET
	0x028252E8 BL 0x1C16F20
	0x028252EC SUB X31, X31, 0x50
	0x028252F0 STR X30, [X31 + 0x20]
	0x028252F4 STP X22, X21, [X31 + 0x30]
	0x028252F8 STP X20, X19, [X31 + 0x40]
	0x028252FC MRS X22, 0xC000
	0x02825300 LDR X8, [X22 + 0x28]
	0x02825304 MOV X21, X4
	0x02825308 MOV X19, X3
	0x0282530C MOV X20, X2
	0x02825310 STR X8, [X31 + 0x18]
	0x02825314 STP X0, X1, [X31 + 0x8]
	0x02825318 LDR X0, [X4 + 0x20]
	0x0282531C LDRB W8, [X0 + 0x135]
	0x02825320 TBNZ X8, 0x0, 0x2825328
	0x02825324 BL 0x1C5C684
	0x02825328 LDR X8, [X0 + 0xC0]
	0x0282532C LDR X0, [X8 + 0x8]
	0x02825330 LDRB W8, [X0 + 0x135]
	0x02825334 TBNZ X8, 0x0, 0x282533C
	0x02825338 BL 0x1C5C684
	0x0282533C LDR W8, [X0 + 0xE0]
	0x02825340 CBNZ W8, 0x2825348
	0x02825344 BL 0x1C16DFC
	0x02825348 LDR X0, [X21 + 0x20]
	0x0282534C LDRB W8, [X0 + 0x135]
	0x02825350 TBNZ X8, 0x0, 0x2825358
	0x02825354 BL 0x1C5C684
	0x02825358 LDR X8, [X0 + 0xC0]
	0x0282535C ADD X0, X31, 0x8
	0x02825360 MOV X1, X20
	0x02825364 MOV X2, X19
	0x02825368 LDR X3, [X8 + 0x38]
	0x0282536C BL 0x2822174
	0x02825370 LDR X8, [X22 + 0x28]
	0x02825374 LDR X9, [X31 + 0x18]
	0x02825378 CMP X8, X9
	0x0282537C B.NE 0x2825398
	0x02825380 LDP X20, X19, [X31 + 0x40]
	0x02825384 LDP X22, X21, [X31 + 0x30]
	0x02825388 LDR X30, [X31 + 0x20]
	0x0282538C AND W0, W0, 0x1
	0x02825390 ADD X31, X31, 0x50
	0x02825394 RET
	0x02825398 BL 0x3EB1B20
	0x0282539C SUB X31, X31, 0x60
	0x028253A0 STR X30, [X31 + 0x20]
	0x028253A4 STP X24, X23, [X31 + 0x30]
	0x028253A8 STP X22, X21, [X31 + 0x40]
	0x028253AC STP X20, X19, [X31 + 0x50]
	0x028253B0 MRS X24, 0xC000
	0x028253B4 LDR X8, [X24 + 0x28]
	0x028253B8 MOV X23, X4
	0x028253BC MOV X19, X3
	0x028253C0 MOV X20, X2
	0x028253C4 STR X8, [X31 + 0x18]
	0x028253C8 LDR X8, [X4 + 0x20]
	0x028253CC MOV X21, X1
	0x028253D0 MOV X22, X0
	0x028253D4 LDRB W9, [X8 + 0x135]
	0x028253D8 TBNZ X9, 0x0, 0x28253E8
	0x028253DC MOV X0, X8
	0x028253E0 BL 0x1C5C684
	0x028253E4 MOV X8, X0
	0x028253E8 LDR X8, [X8 + 0xC0]
	0x028253EC LDR X0, [X8 + 0x8]
	0x028253F0 LDRB W8, [X0 + 0x135]
	0x028253F4 TBNZ X8, 0x0, 0x28253FC
	0x028253F8 BL 0x1C5C684
	0x028253FC LDR W8, [X0 + 0xE0]
	0x02825400 CBNZ W8, 0x2825408
	0x02825404 BL 0x1C16DFC
	0x02825408 LDR X0, [X23 + 0x20]
	0x0282540C LDRB W8, [X0 + 0x135]
	0x02825410 TBNZ X8, 0x0, 0x2825418
	0x02825414 BL 0x1C5C684
	0x02825418 LDR X8, [X0 + 0xC0]
	0x0282541C LDR X23, [X8 + 0x58]
	0x02825420 STP X22, X21, [X31 + 0x8]
	0x02825424 LDR X0, [X23 + 0x20]
	0x02825428 LDRB W8, [X0 + 0x135]
	0x0282542C TBNZ X8, 0x0, 0x2825434
	0x02825430 BL 0x1C5C684
	0x02825434 LDR X8, [X0 + 0xC0]
	0x02825438 LDR X0, [X8 + 0x8]
	0x0282543C LDRB W8, [X0 + 0x135]
	0x02825440 TBNZ X8, 0x0, 0x2825448
	0x02825444 BL 0x1C5C684
	0x02825448 LDR W8, [X0 + 0xE0]
	0x0282544C CBNZ W8, 0x2825454
	0x02825450 BL 0x1C16DFC
	0x02825454 LDR X0, [X23 + 0x20]
	0x02825458 LDRB W8, [X0 + 0x135]
	0x0282545C TBNZ X8, 0x0, 0x2825464
	0x02825460 BL 0x1C5C684
	0x02825464 LDR X8, [X0 + 0xC0]
	0x02825468 ADD X0, X31, 0x8
	0x0282546C MOV X1, X20
	0x02825470 MOV X2, X19
	0x02825474 LDR X3, [X8 + 0x38]
	0x02825478 BL 0x2822174
	0x0282547C LDR X8, [X24 + 0x28]
	0x02825480 LDR X9, [X31 + 0x18]
	0x02825484 CMP X8, X9
	0x02825488 B.NE 0x28254AC
	0x0282548C LDP X20, X19, [X31 + 0x50]
	0x02825490 LDP X22, X21, [X31 + 0x40]
	0x02825494 LDP X24, X23, [X31 + 0x30]
	0x02825498 LDR X30, [X31 + 0x20]
	0x0282549C EOR W8, W0, 0x1
	0x028254A0 AND W0, W8, 0x1
	0x028254A4 ADD X31, X31, 0x60
	0x028254A8 RET
	0x028254AC BL 0x3EB1B20
	0x028254B0 STP X30, X21, [X31 - 0x20]!
	0x028254B4 STP X20, X19, [X31 + 0x10]
	0x028254B8 ADRP X21, 0x1BB5000
	0x028254BC LDRB W8, [X21 + 0xA7A]
	0x028254C0 MOV X19, X1
	0x028254C4 MOV X20, X0
	0x028254C8 TBNZ X8, 0x0, 0x28254E0
	0x028254CC ADRP X0, 0x18F8000
	0x028254D0 LDR X0, [X0 + 0xF00]
	0x028254D4 BL 0x1C16CF4
	0x028254D8 MOVZ W8, 0x1
	0x028254DC STRB W8, [X21 + 0xA7A]
	0x028254E0 MOV X0, X20
	0x028254E4 MOV X1, X19
	0x028254E8 LDP X20, X19, [X31 + 0x10]
	0x028254EC LDP X30, X21, [X31], #0x20
	0x028254F0 RET
	0x028254F4 STP D9, D8, [X31 - 0x70]!
	0x028254F8 STP X29, X30, [X31 + 0x10]
	0x028254FC STP X28, X27, [X31 + 0x20]
	0x02825500 STP X26, X25, [X31 + 0x30]
	0x02825504 STP X24, X23, [X31 + 0x40]
	0x02825508 STP X22, X21, [X31 + 0x50]
	0x0282550C STP X20, X19, [X31 + 0x60]
	0x02825510 ADD X29, X31, 0x10
	0x02825514 SUB X31, X31, 0x70
	0x02825518 MRS X25, 0xC000
	0x0282551C LDR X8, [X25 + 0x28]
	0x02825520 ADRP X24, 0x1BB5000
	0x02825524 MOV X19, X4
	0x02825528 MOV X20, X3
	0x0282552C STUR X8, [X29 - 0x18]
	0x02825530 LDRB W8, [X24 + 0xA7B]
	0x02825534 MOV X22, X2
	0x02825538 MOV X21, X1
	0x0282553C MOV X23, X0
	0x02825540 STP X0, X1, [X29 - 0x38]
	0x02825544 STP X2, X3, [X29 - 0x48]
	0x02825548 TBNZ X8, 0x0, 0x28255D8
	0x0282554C ADRP X0, 0x18F5000
	0x02825550 LDR X0, [X0 + 0xD68]
	0x02825554 BL 0x1C16CF4
	0x02825558 ADRP X0, 0x18F6000
	0x0282555C LDR X0, [X0 + 0xA78]
	0x02825560 BL 0x1C16CF4
	0x02825564 ADRP X0, 0x18F5000
	0x02825568 LDR X0, [X0 + 0xD78]
	0x0282556C BL 0x1C16CF4
	0x02825570 ADRP X0, 0x18F5000
	0x02825574 LDR X0, [X0 + 0xD80]
	0x02825578 BL 0x1C16CF4
	0x0282557C ADRP X0, 0x18F5000
	0x02825580 LDR X0, [X0 + 0xD88]
	0x02825584 BL 0x1C16CF4
	0x02825588 ADRP X0, 0x18F5000
	0x0282558C LDR X0, [X0 + 0xD90]
	0x02825590 BL 0x1C16CF4
	0x02825594 ADRP X0, 0x18F6000
	0x02825598 LDR X0, [X0 + 0xA80]
	0x0282559C BL 0x1C16CF4
	0x028255A0 ADRP X0, 0x18CE000
	0x028255A4 LDR X0, [X0 + 0x6C0]
	0x028255A8 BL 0x1C16CF4
	0x028255AC ADRP X0, 0x18F5000
	0x028255B0 LDR X0, [X0 + 0xD98]
	0x028255B4 BL 0x1C16CF4
	0x028255B8 ADRP X0, 0x18F5000
	0x028255BC LDR X0, [X0 + 0xDA0]
	0x028255C0 BL 0x1C16CF4
	0x028255C4 ADRP X0, 0x18F5000
	0x028255C8 LDR X0, [X0 + 0xDA8]
	0x028255CC BL 0x1C16CF4
	0x028255D0 MOVZ W8, 0x1
	0x028255D4 STRB W8, [X24 + 0xA7B]
	0x028255D8 ADRP X26, 0x18CE000
	0x028255DC ADRP X27, 0x18F5000
	0x028255E0 LDR X26, [X26 + 0x6C0]
	0x028255E4 LDR X27, [X27 + 0xD68]
	0x028255E8 MOV X0, X31
	0x028255EC STURB W31, [X29 - 0x50]
	0x028255F0 STURB W31, [X29 - 0x54]
	0x028255F4 STURH W31, [X29 - 0x58]
	0x028255F8 STUR W31, [X29 - 0x5C]
	0x028255FC STUR X31, [X29 - 0x68]
	0x02825600 BL 0x32E15B8
	0x02825604 TBZ X0, 0x0, 0x2825738
	0x02825608 MOV X23, X19
	0x0282560C LDR X0, [X23 + 0x20]!
	0x02825610 LDRB W8, [X0 + 0x135]
	0x02825614 TBNZ X8, 0x0, 0x282561C
	0x02825618 BL 0x1C5C684
	0x0282561C LDR X8, [X26]
	0x02825620 LDR X9, [X0 + 0xC0]
	0x02825624 LDR W10, [X8 + 0xE0]
	0x02825628 LDR X20, [X9 + 0x18]
	0x0282562C CBNZ W10, 0x2825638
	0x02825630 MOV X0, X8
	0x02825634 BL 0x1C16DFC
	0x02825638 MOV X0, X20
	0x0282563C MOV X1, X31
	0x02825640 BL 0x338C698
	0x02825644 LDR X8, [X27]
	0x02825648 MOV X20, X0
	0x0282564C MOV X1, X31
	0x02825650 MOV X0, X8
	0x02825654 BL 0x338C698
	0x02825658 MOV X1, X0
	0x0282565C MOV X0, X20
	0x02825660 MOV X2, X31
	0x02825664 BL 0x3395194
	0x02825668 LDR X8, [X23]
	0x0282566C MOV W20, W0
	0x02825670 LDRB W9, [X8 + 0x135]
	0x02825674 TBNZ X9, 0x0, 0x2825684
	0x02825678 MOV X0, X8
	0x0282567C BL 0x1C5C684
	0x02825680 MOV X8, X0
	0x02825684 LDR X8, [X8 + 0xC0]
	0x02825688 TBZ X20, 0x0, 0x2825900
	0x0282568C LDR X0, [X8 + 0x8]
	0x02825690 LDRB W8, [X0 + 0x135]
	0x02825694 TBNZ X8, 0x0, 0x282569C
	0x02825698 BL 0x1C5C684
	0x0282569C LDR W8, [X0 + 0xE0]
	0x028256A0 CBNZ W8, 0x28256A8
	0x028256A4 BL 0x1C16DFC
	0x028256A8 LDR X0, [X23]
	0x028256AC LDRB W8, [X0 + 0x135]
	0x028256B0 TBNZ X8, 0x0, 0x28256B8
	0x028256B4 BL 0x1C5C684
	0x028256B8 LDR X8, [X0 + 0xC0]
	0x028256BC LDR X19, [X8 + 0x28]
	0x028256C0 LDR X0, [X19 + 0x20]
	0x028256C4 LDRB W8, [X0 + 0x135]
	0x028256C8 TBNZ X8, 0x0, 0x28256D0
	0x028256CC BL 0x1C5C684
	0x028256D0 LDR X8, [X0 + 0xC0]
	0x028256D4 LDR X0, [X8 + 0x8]
	0x028256D8 LDRB W8, [X0 + 0x135]
	0x028256DC TBNZ X8, 0x0, 0x28256E4
	0x028256E0 BL 0x1C5C684
	0x028256E4 LDR W8, [X0 + 0xE0]
	0x028256E8 CBNZ W8, 0x28256F0
	0x028256EC BL 0x1C16DFC
	0x028256F0 LDR X0, [X19 + 0x20]
	0x028256F4 LDRB W8, [X0 + 0x135]
	0x028256F8 TBNZ X8, 0x0, 0x2825700
	0x028256FC BL 0x1C5C684
	0x02825700 LDR X8, [X0 + 0xC0]
	0x02825704 LDR X0, [X8 + 0x8]
	0x02825708 LDRB W8, [X0 + 0x135]
	0x0282570C TBNZ X8, 0x0, 0x2825714
	0x02825710 BL 0x1C5C684
	0x02825714 LDR X8, [X0 + 0xB8]
	0x02825718 LDRSW X2, [X8]
	0x0282571C CBZ W2, 0x2825C34
	0x02825720 ADD X9, X2, 0xF
	0x02825724 ADD X8, X31, 0x0
	0x02825728 AND X9, X9, 0xFFFFFFFF
	0x0282572C SUB X19, X8, X9
	0x02825730 ADD X31, X19, 0x0
	0x02825734 B 0x2825C38
	0x02825738 STURB W31, [X29 - 0x50]
	0x0282573C STURB W31, [X29 - 0x54]
	0x02825740 STURH W31, [X29 - 0x58]
	0x02825744 STUR W31, [X29 - 0x5C]
	0x02825748 STUR X31, [X29 - 0x68]
	0x0282574C LDR X0, [X19 + 0x20]
	0x02825750 LDRB W8, [X0 + 0x135]
	0x02825754 TBNZ X8, 0x0, 0x282575C
	0x02825758 BL 0x1C5C684
	0x0282575C LDR X8, [X26]
	0x02825760 LDR X9, [X0 + 0xC0]
	0x02825764 LDR W10, [X8 + 0xE0]
	0x02825768 LDR X24, [X9 + 0x18]
	0x0282576C CBNZ W10, 0x2825778
	0x02825770 MOV X0, X8
	0x02825774 BL 0x1C16DFC
	0x02825778 MOV X0, X24
	0x0282577C MOV X1, X31
	0x02825780 BL 0x338C698
	0x02825784 LDR X8, [X27]
	0x02825788 MOV X24, X0
	0x0282578C MOV X1, X31
	0x02825790 MOV X0, X8
	0x02825794 BL 0x338C698
	0x02825798 MOV X1, X0
	0x0282579C MOV X0, X24
	0x028257A0 MOV X2, X31
	0x028257A4 BL 0x3395194
	0x028257A8 TBNZ X0, 0x0, 0x2825814
	0x028257AC LDR X0, [X19 + 0x20]
	0x028257B0 LDRB W8, [X0 + 0x135]
	0x028257B4 TBNZ X8, 0x0, 0x28257BC
	0x028257B8 BL 0x1C5C684
	0x028257BC LDR X8, [X26]
	0x028257C0 LDR X9, [X0 + 0xC0]
	0x028257C4 LDR W10, [X8 + 0xE0]
	0x028257C8 LDR X24, [X9 + 0x18]
	0x028257CC CBNZ W10, 0x28257D8
	0x028257D0 MOV X0, X8
	0x028257D4 BL 0x1C16DFC
	0x028257D8 MOV X0, X24
	0x028257DC MOV X1, X31
	0x028257E0 BL 0x338C698
	0x028257E4 ADRP X8, 0x18F5000
	0x028257E8 LDR X8, [X8 + 0xD90]
	0x028257EC MOV X24, X0
	0x028257F0 MOV X1, X31
	0x028257F4 LDR X8, [X8]
	0x028257F8 MOV X0, X8
	0x028257FC BL 0x338C698
	0x02825800 MOV X1, X0
	0x02825804 MOV X0, X24
	0x02825808 MOV X2, X31
	0x0282580C BL 0x3395194
	0x02825810 TBZ X0, 0x0, 0x2825A1C
	0x02825814 LDURB W8, [X29 - 0x38]
	0x02825818 LDURB W9, [X29 - 0x48]
	0x0282581C LDURB W10, [X29 - 0x37]
	0x02825820 LDURB W11, [X29 - 0x47]
	0x02825824 LDURB W12, [X29 - 0x36]
	0x02825828 LDURB W13, [X29 - 0x46]
	0x0282582C LDURB W14, [X29 - 0x35]
	0x02825830 LDURB W15, [X29 - 0x45]
	0x02825834 LDURB W16, [X29 - 0x34]
	0x02825838 LDURB W17, [X29 - 0x44]
	0x0282583C CMP W8, W9
	0x02825840 LDURB W8, [X29 - 0x33]
	0x02825844 CSINV W9, W31, W31, NE
	0x02825848 CMP W10, W11
	0x0282584C LDURB W10, [X29 - 0x43]
	0x02825850 CSINV W11, W31, W31, NE
	0x02825854 CMP W12, W13
	0x02825858 CSINV W13, W31, W31, NE
	0x0282585C CMP W14, W15
	0x02825860 LDURB W12, [X29 - 0x32]
	0x02825864 LDURB W14, [X29 - 0x42]
	0x02825868 CSINV W15, W31, W31, NE
	0x0282586C CMP W16, W17
	0x02825870 LDURB W16, [X29 - 0x31]
	0x02825874 CSINV W17, W31, W31, NE
	0x02825878 CMP W8, W10
	0x0282587C LDURB W8, [X29 - 0x41]
	0x02825880 LDUR V0, [X29 - 0x30]
	0x02825884 LDUR V1, [X29 - 0x40]
	0x02825888 CSINV W10, W31, W31, NE
	0x0282588C CMP W12, W14
	0x02825890 CSINV W12, W31, W31, NE
	0x02825894 CMP W16, W8
	0x00000000 INVALID
	0x0282589C CSINV W8, W31, W31, NE
	0x028258A0 STURB W9, [X29 - 0x50]
	0x028258A4 STURB W11, [X29 - 0x54]
	0x028258A8 STURB W13, [X29 - 0x58]
	0x028258AC STURB W15, [X29 - 0x57]
	0x028258B0 STURB W17, [X29 - 0x5C]
	0x028258B4 STURB W10, [X29 - 0x5B]
	0x028258B8 STURB W12, [X29 - 0x5A]
	0x028258BC STURB W8, [X29 - 0x59]
	0x028258C0 STUR D0, [X29 - 0x68]
	0x028258C4 LDR X0, [X19 + 0x20]
	0x028258C8 LDRB W8, [X0 + 0x135]
	0x028258CC TBNZ X8, 0x0, 0x28258D4
	0x028258D0 BL 0x1C5C684
	0x028258D4 LDURB W8, [X29 - 0x50]
	0x028258D8 LDURB W9, [X29 - 0x54]
	0x028258DC LDURH W10, [X29 - 0x58]
	0x028258E0 LDUR W11, [X29 - 0x5C]
	0x028258E4 LDUR X12, [X29 - 0x68]
	0x028258E8 STURB W8, [X29 - 0x28]
	0x028258EC STURB W9, [X29 - 0x27]
	0x028258F0 STURH W10, [X29 - 0x26]
	0x028258F4 STUR W11, [X29 - 0x24]
	0x028258F8 STUR X12, [X29 - 0x20]
	0x028258FC B 0x2827900
	0x02825900 LDR X0, [X26]
	0x02825904 LDR X20, [X8 + 0x18]
	0x02825908 LDR W9, [X0 + 0xE0]
	0x0282590C CBNZ W9, 0x2825914
	0x02825910 BL 0x1C16DFC
	0x02825914 MOV X0, X20
	0x02825918 MOV X1, X31
	0x0282591C BL 0x338C698
	0x02825920 ADRP X8, 0x18F5000
	0x02825924 LDR X8, [X8 + 0xD90]
	0x02825928 MOV X20, X0
	0x0282592C MOV X1, X31
	0x02825930 LDR X8, [X8]
	0x02825934 MOV X0, X8
	0x02825938 BL 0x338C698
	0x0282593C MOV X1, X0
	0x02825940 MOV X0, X20
	0x02825944 MOV X2, X31
	0x02825948 BL 0x3395194
	0x0282594C LDR X8, [X23]
	0x02825950 MOV W20, W0
	0x02825954 LDRB W9, [X8 + 0x135]
	0x02825958 TBNZ X9, 0x0, 0x2825968
	0x0282595C MOV X0, X8
	0x02825960 BL 0x1C5C684
	0x02825964 MOV X8, X0
	0x02825968 LDR X8, [X8 + 0xC0]
	0x0282596C TBZ X20, 0x0, 0x2825B14
	0x02825970 LDR X0, [X8 + 0x8]
	0x02825974 LDRB W8, [X0 + 0x135]
	0x02825978 TBNZ X8, 0x0, 0x2825980
	0x0282597C BL 0x1C5C684
	0x02825980 LDR W8, [X0 + 0xE0]
	0x02825984 CBNZ W8, 0x282598C
	0x02825988 BL 0x1C16DFC
	0x0282598C LDR X0, [X23]
	0x02825990 LDRB W8, [X0 + 0x135]
	0x02825994 TBNZ X8, 0x0, 0x282599C
	0x02825998 BL 0x1C5C684
	0x0282599C LDR X8, [X0 + 0xC0]
	0x028259A0 LDR X19, [X8 + 0x28]
	0x028259A4 LDR X0, [X19 + 0x20]
	0x028259A8 LDRB W8, [X0 + 0x135]
	0x028259AC TBNZ X8, 0x0, 0x28259B4
	0x028259B0 BL 0x1C5C684
	0x028259B4 LDR X8, [X0 + 0xC0]
	0x028259B8 LDR X0, [X8 + 0x8]
	0x028259BC LDRB W8, [X0 + 0x135]
	0x028259C0 TBNZ X8, 0x0, 0x28259C8
	0x028259C4 BL 0x1C5C684
	0x028259C8 LDR W8, [X0 + 0xE0]
	0x028259CC CBNZ W8, 0x28259D4
	0x028259D0 BL 0x1C16DFC
	0x028259D4 LDR X0, [X19 + 0x20]
	0x028259D8 LDRB W8, [X0 + 0x135]
	0x028259DC TBNZ X8, 0x0, 0x28259E4
	0x028259E0 BL 0x1C5C684
	0x028259E4 LDR X8, [X0 + 0xC0]
	0x028259E8 LDR X0, [X8 + 0x8]
	0x028259EC LDRB W8, [X0 + 0x135]
	0x028259F0 TBNZ X8, 0x0, 0x28259F8
	0x028259F4 BL 0x1C5C684
	0x028259F8 LDR X8, [X0 + 0xB8]
	0x028259FC LDRSW X2, [X8]
	0x02825A00 CBZ W2, 0x2826000
	0x02825A04 ADD X9, X2, 0xF
	0x02825A08 ADD X8, X31, 0x0
	0x02825A0C AND X9, X9, 0xFFFFFFFF
	0x02825A10 SUB X19, X8, X9
	0x02825A14 ADD X31, X19, 0x0
	0x02825A18 B 0x2826004
	0x02825A1C LDR X0, [X19 + 0x20]
	0x02825A20 LDRB W8, [X0 + 0x135]
	0x02825A24 TBNZ X8, 0x0, 0x2825A2C
	0x02825A28 BL 0x1C5C684
	0x02825A2C LDR X8, [X26]
	0x02825A30 LDR X9, [X0 + 0xC0]
	0x02825A34 LDR W10, [X8 + 0xE0]
	0x02825A38 LDR X24, [X9 + 0x18]
	0x02825A3C CBNZ W10, 0x2825A48
	0x02825A40 MOV X0, X8
	0x02825A44 BL 0x1C16DFC
	0x02825A48 MOV X0, X24
	0x02825A4C MOV X1, X31
	0x02825A50 UBFM X28, X22, 0x20, 0x3F
	0x02825A54 UBFM X27, X20, 0x20, 0x3F
	0x02825A58 BL 0x338C698
	0x02825A5C ADRP X8, 0x18F5000
	0x02825A60 LDR X8, [X8 + 0xD98]
	0x02825A64 MOV X24, X0
	0x02825A68 MOV X1, X31
	0x02825A6C LDR X8, [X8]
	0x02825A70 MOV X0, X8
	0x02825A74 BL 0x338C698
	0x02825A78 MOV X1, X0
	0x02825A7C MOV X0, X24
	0x02825A80 MOV X2, X31
	0x02825A84 BL 0x3395194
	0x02825A88 TBZ X0, 0x0, 0x2825DB8
	0x02825A8C AND W13, W23, 0xFFFF
	0x02825A90 UBFM X11, X23, 0x10, 0x1F
	0x02825A94 CMP W13, W22, UXTH
	0x02825A98 UBFM X12, X23, 0x20, 0x2F
	0x02825A9C AND W14, W21, 0xFFFF
	0x02825AA0 CSINV W21, W31, W31, NE
	0x02825AA4 CMP W11, W22, LSR
	0x02825AA8 LDURH W11, [X29 - 0x2E]
	0x02825AAC UBFM X9, X22, 0x30, 0x3F
	0x02825AB0 UBFM X10, X23, 0x30, 0x3F
	0x02825AB4 CSINV W13, W31, W31, NE
	0x02825AB8 CMP W12, W28, UXTH
	0x02825ABC LDURH W12, [X29 - 0x2C]
	0x02825AC0 LDURH W15, [X29 - 0x2A]
	0x02825AC4 STURH W13, [X29 - 0x58]
	0x02825AC8 CSINV W13, W31, W31, NE
	0x02825ACC CMP W10, W9
	0x02825AD0 CSINV W9, W31, W31, NE
	0x02825AD4 CMP W14, W20, UXTH
	0x02825AD8 STURH W9, [X29 - 0x5A]
	0x02825ADC CSINV W9, W31, W31, NE
	0x02825AE0 CMP W11, W20, LSR
	0x02825AE4 UBFM X8, X20, 0x30, 0x3F
	0x02825AE8 STURH W9, [X29 - 0x68]
	0x02825AEC CSINV W9, W31, W31, NE
	0x02825AF0 CMP W12, W27, UXTH
	0x02825AF4 STURH W9, [X29 - 0x66]
	0x02825AF8 CSINV W9, W31, W31, NE
	0x02825AFC CMP W15, W8
	0x02825B00 STURB W21, [X29 - 0x50]
	0x02825B04 STURB W21, [X29 - 0x54]
	0x02825B08 STURH W13, [X29 - 0x5C]
	0x02825B0C STURH W9, [X29 - 0x64]
	0x02825B10 B 0x2825EA4
	0x02825B14 LDR X0, [X26]
	0x02825B18 LDR X20, [X8 + 0x18]
	0x02825B1C LDR W9, [X0 + 0xE0]
	0x02825B20 CBNZ W9, 0x2825B28
	0x02825B24 BL 0x1C16DFC
	0x02825B28 MOV X0, X20
	0x02825B2C MOV X1, X31
	0x02825B30 BL 0x338C698
	0x02825B34 ADRP X8, 0x18F5000
	0x02825B38 LDR X8, [X8 + 0xD98]
	0x02825B3C MOV X20, X0
	0x02825B40 MOV X1, X31
	0x02825B44 LDR X8, [X8]
	0x02825B48 MOV X0, X8
	0x02825B4C BL 0x338C698
	0x02825B50 MOV X1, X0
	0x02825B54 MOV X0, X20
	0x02825B58 MOV X2, X31
	0x02825B5C BL 0x3395194
	0x02825B60 LDR X8, [X23]
	0x02825B64 MOV W20, W0
	0x02825B68 LDRB W9, [X8 + 0x135]
	0x02825B6C TBNZ X9, 0x0, 0x2825B7C
	0x02825B70 MOV X0, X8
	0x02825B74 BL 0x1C5C684
	0x02825B78 MOV X8, X0
	0x02825B7C LDR X8, [X8 + 0xC0]
	0x02825B80 TBZ X20, 0x0, 0x2825EE0
	0x02825B84 LDR X0, [X8 + 0x8]
	0x02825B88 LDRB W8, [X0 + 0x135]
	0x02825B8C TBNZ X8, 0x0, 0x2825B94
	0x02825B90 BL 0x1C5C684
	0x02825B94 LDR W8, [X0 + 0xE0]
	0x02825B98 CBNZ W8, 0x2825BA0
	0x02825B9C BL 0x1C16DFC
	0x02825BA0 LDR X0, [X23]
	0x02825BA4 LDRB W8, [X0 + 0x135]
	0x02825BA8 TBNZ X8, 0x0, 0x2825BB0
	0x02825BAC BL 0x1C5C684
	0x02825BB0 LDR X8, [X0 + 0xC0]
	0x02825BB4 LDR X19, [X8 + 0x28]
	0x02825BB8 LDR X0, [X19 + 0x20]
	0x02825BBC LDRB W8, [X0 + 0x135]
	0x02825BC0 TBNZ X8, 0x0, 0x2825BC8
	0x02825BC4 BL 0x1C5C684
	0x02825BC8 LDR X8, [X0 + 0xC0]
	0x02825BCC LDR X0, [X8 + 0x8]
	0x02825BD0 LDRB W8, [X0 + 0x135]
	0x02825BD4 TBNZ X8, 0x0, 0x2825BDC
	0x02825BD8 BL 0x1C5C684
	0x02825BDC LDR W8, [X0 + 0xE0]
	0x02825BE0 CBNZ W8, 0x2825BE8
	0x02825BE4 BL 0x1C16DFC
	0x02825BE8 LDR X0, [X19 + 0x20]
	0x02825BEC LDRB W8, [X0 + 0x135]
	0x02825BF0 TBNZ X8, 0x0, 0x2825BF8
	0x02825BF4 BL 0x1C5C684
	0x02825BF8 LDR X8, [X0 + 0xC0]
	0x02825BFC LDR X0, [X8 + 0x8]
	0x02825C00 LDRB W8, [X0 + 0x135]
	0x02825C04 TBNZ X8, 0x0, 0x2825C0C
	0x02825C08 BL 0x1C5C684
	0x02825C0C LDR X8, [X0 + 0xB8]
	0x02825C10 LDRSW X8, [X8]
	0x02825C14 UBFM X2, X8, 0x3F, 0x3E
	0x02825C18 CBZ W8, 0x28263E8
	0x02825C1C ADD X9, X2, 0xF
	0x02825C20 ADD X8, X31, 0x0
	0x02825C24 AND X9, X9, 0xFFFFFFFF
	0x02825C28 SUB X19, X8, X9
	0x02825C2C ADD X31, X19, 0x0
	0x02825C30 B 0x28263EC
	0x02825C34 MOV X19, X31
	0x02825C38 MOV X0, X19
	0x02825C3C MOV W1, W31
	0x02825C40 BL 0x3EB1B10
	0x02825C44 MOV X20, X31
	0x02825C48 LDR X0, [X23]
	0x02825C4C LDRB W8, [X0 + 0x135]
	0x02825C50 TBNZ X8, 0x0, 0x2825C58
	0x02825C54 BL 0x1C5C684
	0x02825C58 LDR X8, [X0 + 0xC0]
	0x02825C5C LDR X0, [X8 + 0x8]
	0x02825C60 LDRB W8, [X0 + 0x135]
	0x02825C64 TBNZ X8, 0x0, 0x2825C6C
	0x02825C68 BL 0x1C5C684
	0x02825C6C LDR W8, [X0 + 0xE0]
	0x02825C70 CBNZ W8, 0x2825C78
	0x02825C74 BL 0x1C16DFC
	0x02825C78 LDR X0, [X23]
	0x02825C7C LDRB W8, [X0 + 0x135]
	0x02825C80 TBNZ X8, 0x0, 0x2825C88
	0x02825C84 BL 0x1C5C684
	0x02825C88 LDR X8, [X0 + 0xC0]
	0x02825C8C LDR X21, [X8 + 0x28]
	0x02825C90 LDR X0, [X21 + 0x20]
	0x02825C94 LDRB W8, [X0 + 0x135]
	0x02825C98 TBNZ X8, 0x0, 0x2825CA0
	0x02825C9C BL 0x1C5C684
	0x02825CA0 LDR X8, [X0 + 0xC0]
	0x02825CA4 LDR X0, [X8 + 0x8]
	0x02825CA8 LDRB W8, [X0 + 0x135]
	0x02825CAC TBNZ X8, 0x0, 0x2825CB4
	0x02825CB0 BL 0x1C5C684
	0x02825CB4 LDR W8, [X0 + 0xE0]
	0x02825CB8 CBNZ W8, 0x2825CC0
	0x02825CBC BL 0x1C16DFC
	0x02825CC0 LDR X0, [X21 + 0x20]
	0x02825CC4 LDRB W8, [X0 + 0x135]
	0x02825CC8 TBNZ X8, 0x0, 0x2825CD0
	0x02825CCC BL 0x1C5C684
	0x02825CD0 LDR X8, [X0 + 0xC0]
	0x02825CD4 LDR X0, [X8 + 0x8]
	0x02825CD8 LDRB W8, [X0 + 0x135]
	0x02825CDC TBNZ X8, 0x0, 0x2825CE4
	0x02825CE0 BL 0x1C5C684
	0x02825CE4 LDR X8, [X0 + 0xB8]
	0x02825CE8 LDRSW X8, [X8]
	0x02825CEC CMP X20, X8
	0x02825CF0 B.GE 0x28278D8
	0x02825CF4 LDR X0, [X23]
	0x02825CF8 LDRB W8, [X0 + 0x135]
	0x02825CFC TBNZ X8, 0x0, 0x2825D04
	0x02825D00 BL 0x1C5C684
	0x02825D04 LDR X8, [X0 + 0xC0]
	0x02825D08 LDR X0, [X8 + 0x8]
	0x02825D0C LDRB W8, [X0 + 0x135]
	0x02825D10 TBNZ X8, 0x0, 0x2825D18
	0x02825D14 BL 0x1C5C684
	0x02825D18 LDR W8, [X0 + 0xE0]
	0x02825D1C CBNZ W8, 0x2825D24
	0x02825D20 BL 0x1C16DFC
	0x02825D24 LDR X0, [X23]
	0x02825D28 LDRB W8, [X0 + 0x135]
	0x02825D2C TBNZ X8, 0x0, 0x2825D34
	0x02825D30 BL 0x1C5C684
	0x02825D34 LDR X8, [X0 + 0xC0]
	0x02825D38 SUB X0, X29, 0x38
	0x02825D3C MOV W1, W20
	0x02825D40 LDR X2, [X8 + 0x40]
	0x02825D44 BL 0x2821834
	0x02825D48 LDR X8, [X23]
	0x02825D4C MOV W21, W0
	0x02825D50 LDRB W9, [X8 + 0x135]
	0x02825D54 TBNZ X9, 0x0, 0x2825D64
	0x02825D58 MOV X0, X8
	0x02825D5C BL 0x1C5C684
	0x02825D60 MOV X8, X0
	0x02825D64 LDR X8, [X8 + 0xC0]
	0x02825D68 SUB X0, X29, 0x48
	0x02825D6C MOV W1, W20
	0x02825D70 LDR X2, [X8 + 0x40]
	0x02825D74 BL 0x2821834
	0x02825D78 LDR X8, [X23]
	0x02825D7C MOV W22, W0
	0x02825D80 LDRB W9, [X8 + 0x135]
	0x02825D84 TBNZ X9, 0x0, 0x2825D94
	0x02825D88 MOV X0, X8
	0x02825D8C BL 0x1C5C684
	0x02825D90 MOV X8, X0
	0x02825D94 LDR X8, [X8 + 0xC0]
	0x02825D98 MOV W0, W21
	0x02825D9C MOV W1, W22
	0x02825DA0 LDR X2, [X8 + 0x48]
	0x02825DA4 BL 0x22BC5BC
	0x02825DA8 SBFM W8, W0, 0x0, 0x0
	0x02825DAC STRB W8, [X19, X20, LSL]
	0x02825DB0 ADD X20, X20, 0x1
	0x02825DB4 B 0x2825C48
	0x02825DB8 LDR X0, [X19 + 0x20]
	0x02825DBC LDRB W8, [X0 + 0x135]
	0x02825DC0 TBNZ X8, 0x0, 0x2825DC8
	0x02825DC4 BL 0x1C5C684
	0x02825DC8 LDR X8, [X26]
	0x02825DCC LDR X9, [X0 + 0xC0]
	0x02825DD0 LDR W10, [X8 + 0xE0]
	0x02825DD4 LDR X24, [X9 + 0x18]
	0x02825DD8 CBNZ W10, 0x2825DE4
	0x02825DDC MOV X0, X8
	0x02825DE0 BL 0x1C16DFC
	0x02825DE4 MOV X0, X24
	0x02825DE8 MOV X1, X31
	0x02825DEC BL 0x338C698
	0x02825DF0 ADRP X8, 0x18F5000
	0x02825DF4 LDR X8, [X8 + 0xD78]
	0x02825DF8 MOV X24, X0
	0x02825DFC MOV X1, X31
	0x02825E00 LDR X8, [X8]
	0x02825E04 MOV X0, X8
	0x02825E08 BL 0x338C698
	0x02825E0C MOV X1, X0
	0x02825E10 MOV X0, X24
	0x02825E14 MOV X2, X31
	0x02825E18 BL 0x3395194
	0x02825E1C TBZ X0, 0x0, 0x2826184
	0x02825E20 AND W16, W23, 0xFFFF
	0x02825E24 UBFM X13, X23, 0x10, 0x1F
	0x02825E28 CMP W16, W22, UXTH
	0x02825E2C UBFM X9, X21, 0x30, 0x3F
	0x02825E30 UBFM X10, X21, 0x10, 0x1F
	0x02825E34 UBFM X14, X21, 0x20, 0x2F
	0x02825E38 UBFM X15, X23, 0x20, 0x2F
	0x02825E3C AND W17, W21, 0xFFFF

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X21, 0x1BB8000
	011 Move W8, [X21+2679]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {86}
	018 Move X0, 0x18F8000
	019 Move X0, [X0+3432]
	020 Call 0x1C17CF4
	021 Move X0, 0x18D2000
	022 Move X0, [X0+2520]
	023 Call 0x1C17CF4
	024 Move X0, 0x18F9000
	025 Move X0, [X0+2680]
	026 Call 0x1C17CF4
	027 Move X0, 0x18D4000
	028 Move X0, [X0+2424]
	029 Call 0x1C17CF4
	030 Move X0, 0x18FB000
	031 Move X0, [X0+3816]
	032 Call 0x1C17CF4
	033 Move X0, 0x18F8000
	034 Move X0, [X0+3448]
	035 Call 0x1C17CF4
	036 Move X0, 0x18D5000
	037 Move X0, [X0+1576]
	038 Call 0x1C17CF4
	039 Move X0, 0x18F8000
	040 Move X0, [X0+3456]
	041 Call 0x1C17CF4
	042 Move X0, 0x18D1000
	043 Move X0, [X0+1880]
	044 Call 0x1C17CF4
	045 Move X0, 0x18F8000
	046 Move X0, [X0+3464]
	047 Call 0x1C17CF4
	048 Move X0, 0x18D3000
	049 Move X0, [X0+2656]
	050 Call 0x1C17CF4
	051 Move X0, 0x18F8000
	052 Move X0, [X0+3472]
	053 Call 0x1C17CF4
	054 Move X0, 0x18FA000
	055 Move X0, [X0+1712]
	056 Call 0x1C17CF4
	057 Move X0, 0x18F9000
	058 Move X0, [X0+2688]
	059 Call 0x1C17CF4
	060 Move X0, 0x18D1000
	061 Move X0, [X0+2704]
	062 Call 0x1C17CF4
	063 Move X0, 0x18D1000
	064 Move X0, [X0+1728]
	065 Call 0x1C17CF4
	066 Move X0, 0x18F8000
	067 Move X0, [X0+3480]
	068 Call 0x1C17CF4
	069 Move X0, 0x18D6000
	070 Move X0, [X0+1624]
	071 Call 0x1C17CF4
	072 Move X0, 0x18F8000
	073 Move X0, [X0+3488]
	074 Call 0x1C17CF4
	075 Move X0, 0x18D9000
	076 Move X0, [X0+1824]
	077 Call 0x1C17CF4
	078 Move X0, 0x18F8000
	079 Move X0, [X0+3496]
	080 Call 0x1C17CF4
	081 Move X0, 0x18D2000
	082 Move X0, [X0+1880]
	083 Call 0x1C17CF4
	084 Move W8, 1
	085 Move [X21+2679], W8
	086 Move X24, 0x18D1000
	087 Move X24, [X24+1728]
	088 Move X0, X31
	089 Move [X31+44], W31
	090 Move [X31+40], W31
	091 NotImplemented "Instruction STRH not yet implemented."
	092 NotImplemented "Instruction STRH not yet implemented."
	093 Move [X31+16], X31
	094 Move [X31+24], X31
	095 Move [X31+8], X31
	096 Move [X31+4], W31
	097 Call Vector.get_IsHardwareAccelerated
	098 Move X23, X20
	099 Add X23, X23, 32
	100 Move X8, [X23]
	101 Move W21, W0
	102 Move W9, [X8+309]
	103 Move TEMP, X9
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfEqual {110}
	107 Move X0, X8
	108 Call 0x1C5D684
	109 Move X8, X0
	110 Move X0, [X24]
	111 Move X8, [X8+192]
	112 Move X25, 0x18F8000
	113 Move W9, [X0+224]
	114 Move X22, [X8+24]
	115 Move X25, [X25+3432]
	116 Compare W9, 0
	117 JumpIfNotEqual {119}
	118 Call 0x1C17DFC
	119 Move X0, X22
	120 Move X1, X31
	121 Call Type.GetTypeFromHandle, X0
	122 Move X8, [X25]
	123 Move X22, X0
	124 Move X1, X31
	125 Move X0, X8
	126 Call Type.GetTypeFromHandle, X0
	127 Move X1, X0
	128 Move X0, X22
	129 Move X2, X31
	130 Call Type.op_Equality, X0, X1
	131 Move TEMP, X21
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {279}
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {415}
	139 Move X24, 0x18D2000
	140 Move X25, 0x18FB000
	141 Move X24, [X24+2520]
	142 Move X25, [X25+3816]
	143 Move W21, W31
	144 Move W20, W31
	145 Move X0, [X23]
	146 Move W8, [X0+309]
	147 Move TEMP, X8
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfEqual {152}
	151 Call 0x1C5D684
	152 Move X8, [X0+192]
	153 Move X0, [X8+8]
	154 Move W8, [X0+309]
	155 Move TEMP, X8
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfEqual {160}
	159 Call 0x1C5D684
	160 Move W8, [X0+224]
	161 Compare W8, 0
	162 JumpIfNotEqual {164}
	163 Call 0x1C17DFC
	164 Move X0, [X23]
	165 Move W8, [X0+309]
	166 Move TEMP, X8
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfEqual {171}
	170 Call 0x1C5D684
	171 Move X8, [X0+192]
	172 Move X22, [X8+40]
	173 Move X0, [X22+32]
	174 Move W8, [X0+309]
	175 Move TEMP, X8
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfEqual {180}
	179 Call 0x1C5D684
	180 Move X8, [X0+192]
	181 Move X0, [X8+8]
	182 Move W8, [X0+309]
	183 Move TEMP, X8
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfEqual {188}
	187 Call 0x1C5D684
	188 Move W8, [X0+224]
	189 Compare W8, 0
	190 JumpIfNotEqual {192}
	191 Call 0x1C17DFC
	192 Move X0, [X22+32]
	193 Move W8, [X0+309]
	194 Move TEMP, X8
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfEqual {199}
	198 Call 0x1C5D684
	199 Move X8, [X0+192]
	200 Move X0, [X8+8]
	201 Move W8, [X0+309]
	202 Move TEMP, X8
	203 And TEMP, TEMP, 1
	204 Compare TEMP, 1
	205 JumpIfEqual {207}
	206 Call 0x1C5D684
	207 Move X8, [X0+184]
	208 Move W8, [X8]
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X0, [X23]
	211 Move W8, [X0+309]
	212 Move TEMP, X8
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfEqual {217}
	216 Call 0x1C5D684
	217 Move X8, [X0+192]
	218 Move X0, [X8+8]
	219 Move W8, [X0+309]
	220 Move TEMP, X8
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfEqual {225}
	224 Call 0x1C5D684
	225 Move W8, [X0+224]
	226 Compare W8, 0
	227 JumpIfNotEqual {229}
	228 Call 0x1C17DFC
	229 Move X0, [X23]
	230 Move W8, [X0+309]
	231 Move TEMP, X8
	232 And TEMP, TEMP, 1
	233 Compare TEMP, 1
	234 JumpIfEqual {236}
	235 Call 0x1C5D684
	236 Move X8, [X0+192]
	237 Move X0, X19
	238 Move W1, W21
	239 Move X2, [X8+64]
	240 Call 0x2822834, X0, X1
	241 NotImplemented "Instruction STRH not yet implemented."
	242 Move X0, [X23]
	243 Move W8, [X0+309]
	244 Move TEMP, X8
	245 And TEMP, TEMP, 1
	246 Compare TEMP, 1
	247 JumpIfEqual {249}
	248 Call 0x1C5D684
	249 Move X8, [X0+192]
	250 Add X1, X31, 0
	251 Move X0, [X8+32]
	252 Call 0x1C17E04
	253 Compare X0, 0
	254 JumpIfEqual {2732}
	255 Move X8, [X0]
	256 Move X1, [X24]
	257 Move X8, [X8+64]
	258 Move X9, [X1+64]
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Call 0x1C17E08
	261 Move W8, [X0]
	262 Add X0, X31, 44
	263 Move X1, X31
	264 Move [X31+44], W8
	265 Call Byte.GetHashCode, X0
	266 Move X8, [X25]
	267 Move W22, W0
	268 Move W9, [X8+224]
	269 Compare W9, 0
	270 JumpIfNotEqual {273}
	271 Move X0, X8
	272 Call 0x1C17DFC
	273 Move W0, W20
	274 Move W1, W22
	275 Move X2, X31
	276 Call HashHelpers.Combine, X0, X1
	277 Move W20, W0
	278 Add W21, W21, 1
	279 Move TEMP, X0
	280 And TEMP, TEMP, 1
	281 Compare TEMP, 1
	282 JumpIfNotEqual {588}
	283 Move X0, X19
	284 Move X1, X31
	285 Call Byte.GetHashCode, X0
	286 Move X8, 0x18FB000
	287 Move X8, [X8+3816]
	288 Move W20, W0
	289 Move X8, [X8]
	290 Move W9, [X8+224]
	291 Compare W9, 0
	292 JumpIfNotEqual {295}
	293 Move X0, X8
	294 Call 0x1C17DFC
	295 Move W0, W31
	296 Move W1, W20
	297 Move X2, X31
	298 Call HashHelpers.Combine, X0, X1
	299 Move W20, W0
	300 Add X0, X19, 1
	301 Move X1, X31
	302 Call Byte.GetHashCode, X0
	303 Move W1, W0
	304 Move W0, W20
	305 Move X2, X31
	306 Call HashHelpers.Combine, X0, X1
	307 Move W20, W0
	308 Add X0, X19, 2
	309 Move X1, X31
	310 Call Byte.GetHashCode, X0
	311 Move W1, W0
	312 Move W0, W20
	313 Move X2, X31
	314 Call HashHelpers.Combine, X0, X1
	315 Move W20, W0
	316 Add X0, X19, 3
	317 Move X1, X31
	318 Call Byte.GetHashCode, X0
	319 Move W1, W0
	320 Move W0, W20
	321 Move X2, X31
	322 Call HashHelpers.Combine, X0, X1
	323 Move W20, W0
	324 Add X0, X19, 4
	325 Move X1, X31
	326 Call Byte.GetHashCode, X0
	327 Move W1, W0
	328 Move W0, W20
	329 Move X2, X31
	330 Call HashHelpers.Combine, X0, X1
	331 Move W20, W0
	332 Add X0, X19, 5
	333 Move X1, X31
	334 Call Byte.GetHashCode, X0
	335 Move W1, W0
	336 Move W0, W20
	337 Move X2, X31
	338 Call HashHelpers.Combine, X0, X1
	339 Move W20, W0
	340 Add X0, X19, 6
	341 Move X1, X31
	342 Call Byte.GetHashCode, X0
	343 Move W1, W0
	344 Move W0, W20
	345 Move X2, X31
	346 Call HashHelpers.Combine, X0, X1
	347 Move W20, W0
	348 Add X0, X19, 7
	349 Move X1, X31
	350 Call Byte.GetHashCode, X0
	351 Move W1, W0
	352 Move W0, W20
	353 Move X2, X31
	354 Call HashHelpers.Combine, X0, X1
	355 Move W20, W0
	356 Add X0, X19, 8
	357 Move X1, X31
	358 Call Byte.GetHashCode, X0
	359 Move W1, W0
	360 Move W0, W20
	361 Move X2, X31
	362 Call HashHelpers.Combine, X0, X1
	363 Move W20, W0
	364 Add X0, X19, 9
	365 Move X1, X31
	366 Call Byte.GetHashCode, X0
	367 Move W1, W0
	368 Move W0, W20
	369 Move X2, X31
	370 Call HashHelpers.Combine, X0, X1
	371 Move W20, W0
	372 Add X0, X19, 10
	373 Move X1, X31
	374 Call Byte.GetHashCode, X0
	375 Move W1, W0
	376 Move W0, W20
	377 Move X2, X31
	378 Call HashHelpers.Combine, X0, X1
	379 Move W20, W0
	380 Add X0, X19, 11
	381 Move X1, X31
	382 Call Byte.GetHashCode, X0
	383 Move W1, W0
	384 Move W0, W20
	385 Move X2, X31
	386 Call HashHelpers.Combine, X0, X1
	387 Move W20, W0
	388 Add X0, X19, 12
	389 Move X1, X31
	390 Call Byte.GetHashCode, X0
	391 Move W1, W0
	392 Move W0, W20
	393 Move X2, X31
	394 Call HashHelpers.Combine, X0, X1
	395 Move W20, W0
	396 Add X0, X19, 13
	397 Move X1, X31
	398 Call Byte.GetHashCode, X0
	399 Move W1, W0
	400 Move W0, W20
	401 Move X2, X31
	402 Call HashHelpers.Combine, X0, X1
	403 Move W20, W0
	404 Add X0, X19, 14
	405 Move X1, X31
	406 Call Byte.GetHashCode, X0
	407 Move W1, W0
	408 Move W0, W20
	409 Move X2, X31
	410 Call HashHelpers.Combine, X0, X1
	411 Move W20, W0
	412 Add X0, X19, 15
	413 Move X1, X31
	414 Call Byte.GetHashCode, X0
	415 Move X0, [X23]
	416 Move W8, [X0+309]
	417 Move TEMP, X8
	418 And TEMP, TEMP, 1
	419 Compare TEMP, 1
	420 JumpIfEqual {422}
	421 Call 0x1C5D684
	422 Move X8, [X24]
	423 Move X9, [X0+192]
	424 Move W10, [X8+224]
	425 Move X21, [X9+24]
	426 Compare W10, 0
	427 JumpIfNotEqual {430}
	428 Move X0, X8
	429 Call 0x1C17DFC
	430 Move X0, X21
	431 Move X1, X31
	432 Call Type.GetTypeFromHandle, X0
	433 Move X8, 0x18F7000
	434 Move X8, [X8+3472]
	435 Move X21, X0
	436 Move X1, X31
	437 Move X8, [X8]
	438 Move X0, X8
	439 Call Type.GetTypeFromHandle, X0
	440 Move X1, X0
	441 Move X0, X21
	442 Move X2, X31
	443 Call Type.op_Equality, X0, X1
	444 Move TEMP, X0
	445 And TEMP, TEMP, 1
	446 Compare TEMP, 1
	447 JumpIfNotEqual {753}
	448 Move X24, 0x18F9000
	449 Move X25, 0x18FA000
	450 Move X24, [X24+1712]
	451 Move X25, [X25+3816]
	452 Move W21, W31
	453 Move W20, W31
	454 Move X0, [X23]
	455 Move W8, [X0+309]
	456 Move TEMP, X8
	457 And TEMP, TEMP, 1
	458 Compare TEMP, 1
	459 JumpIfEqual {461}
	460 Call 0x1C5D684
	461 Move X8, [X0+192]
	462 Move X0, [X8+8]
	463 Move W8, [X0+309]
	464 Move TEMP, X8
	465 And TEMP, TEMP, 1
	466 Compare TEMP, 1
	467 JumpIfEqual {469}
	468 Call 0x1C5D684
	469 Move W8, [X0+224]
	470 Compare W8, 0
	471 JumpIfNotEqual {473}
	472 Call 0x1C17DFC
	473 Move X0, [X23]
	474 Move W8, [X0+309]
	475 Move TEMP, X8
	476 And TEMP, TEMP, 1
	477 Compare TEMP, 1
	478 JumpIfEqual {480}
	479 Call 0x1C5D684
	480 Move X8, [X0+192]
	481 Move X22, [X8+40]
	482 Move X0, [X22+32]
	483 Move W8, [X0+309]
	484 Move TEMP, X8
	485 And TEMP, TEMP, 1
	486 Compare TEMP, 1
	487 JumpIfEqual {489}
	488 Call 0x1C5D684
	489 Move X8, [X0+192]
	490 Move X0, [X8+8]
	491 Move W8, [X0+309]
	492 Move TEMP, X8
	493 And TEMP, TEMP, 1
	494 Compare TEMP, 1
	495 JumpIfEqual {497}
	496 Call 0x1C5D684
	497 Move W8, [X0+224]
	498 Compare W8, 0
	499 JumpIfNotEqual {501}
	500 Call 0x1C17DFC
	501 Move X0, [X22+32]
	502 Move W8, [X0+309]
	503 Move TEMP, X8
	504 And TEMP, TEMP, 1
	505 Compare TEMP, 1
	506 JumpIfEqual {508}
	507 Call 0x1C5D684
	508 Move X8, [X0+192]
	509 Move X0, [X8+8]
	510 Move W8, [X0+309]
	511 Move TEMP, X8
	512 And TEMP, TEMP, 1
	513 Compare TEMP, 1
	514 JumpIfEqual {516}
	515 Call 0x1C5D684
	516 Move X8, [X0+184]
	517 Move W8, [X8]
	518 NotImplemented "Instruction CMP not yet implemented."
	519 Move X0, [X23]
	520 Move W8, [X0+309]
	521 Move TEMP, X8
	522 And TEMP, TEMP, 1
	523 Compare TEMP, 1
	524 JumpIfEqual {526}
	525 Call 0x1C5D684
	526 Move X8, [X0+192]
	527 Move X0, [X8+8]
	528 Move W8, [X0+309]
	529 Move TEMP, X8
	530 And TEMP, TEMP, 1
	531 Compare TEMP, 1
	532 JumpIfEqual {534}
	533 Call 0x1C5D684
	534 Move W8, [X0+224]
	535 Compare W8, 0
	536 JumpIfNotEqual {538}
	537 Call 0x1C17DFC
	538 Move X0, [X23]
	539 Move W8, [X0+309]
	540 Move TEMP, X8
	541 And TEMP, TEMP, 1
	542 Compare TEMP, 1
	543 JumpIfEqual {545}
	544 Call 0x1C5D684
	545 Move X8, [X0+192]
	546 Move X0, X19
	547 Move W1, W21
	548 Move X2, [X8+64]
	549 Call 0x2822834, X0, X1
	550 NotImplemented "Instruction STRH not yet implemented."
	551 Move X0, [X23]
	552 Move W8, [X0+309]
	553 Move TEMP, X8
	554 And TEMP, TEMP, 1
	555 Compare TEMP, 1
	556 JumpIfEqual {558}
	557 Call 0x1C5D684
	558 Move X8, [X0+192]
	559 Add X1, X31, 0
	560 Move X0, [X8+32]
	561 Call 0x1C17E04
	562 Compare X0, 0
	563 JumpIfEqual {2732}
	564 Move X8, [X0]
	565 Move X1, [X24]
	566 Move X8, [X8+64]
	567 Move X9, [X1+64]
	568 NotImplemented "Instruction CMP not yet implemented."
	569 Call 0x1C17E08
	570 Move W8, [X0]
	571 Add X0, X31, 40
	572 Move X1, X31
	573 Move [X31+40], W8
	574 Call SByte.GetHashCode, X0
	575 Move X8, [X25]
	576 Move W22, W0
	577 Move W9, [X8+224]
	578 Compare W9, 0
	579 JumpIfNotEqual {582}
	580 Move X0, X8
	581 Call 0x1C17DFC
	582 Move W0, W20
	583 Move W1, W22
	584 Move X2, X31
	585 Call HashHelpers.Combine, X0, X1
	586 Move W20, W0
	587 Add W21, W21, 1
	588 Move X0, [X23]
	589 Move W8, [X0+309]
	590 Move TEMP, X8
	591 And TEMP, TEMP, 1
	592 Compare TEMP, 1
	593 JumpIfEqual {595}
	594 Call 0x1C5D684
	595 Move X8, [X24]
	596 Move X9, [X0+192]
	597 Move W10, [X8+224]
	598 Move X21, [X9+24]
	599 Compare W10, 0
	600 JumpIfNotEqual {603}
	601 Move X0, X8
	602 Call 0x1C17DFC
	603 Move X0, X21
	604 Move X1, X31
	605 Call Type.GetTypeFromHandle, X0
	606 Move X8, 0x18F7000
	607 Move X8, [X8+3472]
	608 Move X21, X0
	609 Move X1, X31
	610 Move X8, [X8]
	611 Move X0, X8
	612 Call Type.GetTypeFromHandle, X0
	613 Move X1, X0
	614 Move X0, X21
	615 Move X2, X31
	616 Call Type.op_Equality, X0, X1
	617 Move TEMP, X0
	618 And TEMP, TEMP, 1
	619 Compare TEMP, 1
	620 JumpIfNotEqual {926}
	621 Move X0, X19
	622 Move X1, X31
	623 Call SByte.GetHashCode, X0
	624 Move X8, 0x18FA000
	625 Move X8, [X8+3816]
	626 Move W20, W0
	627 Move X8, [X8]
	628 Move W9, [X8+224]
	629 Compare W9, 0
	630 JumpIfNotEqual {633}
	631 Move X0, X8
	632 Call 0x1C17DFC
	633 Move W0, W31
	634 Move W1, W20
	635 Move X2, X31
	636 Call HashHelpers.Combine, X0, X1
	637 Move W20, W0
	638 Add X0, X19, 1
	639 Move X1, X31
	640 Call SByte.GetHashCode, X0
	641 Move W1, W0
	642 Move W0, W20
	643 Move X2, X31
	644 Call HashHelpers.Combine, X0, X1
	645 Move W20, W0
	646 Add X0, X19, 2
	647 Move X1, X31
	648 Call SByte.GetHashCode, X0
	649 Move W1, W0
	650 Move W0, W20
	651 Move X2, X31
	652 Call HashHelpers.Combine, X0, X1
	653 Move W20, W0
	654 Add X0, X19, 3
	655 Move X1, X31
	656 Call SByte.GetHashCode, X0
	657 Move W1, W0
	658 Move W0, W20
	659 Move X2, X31
	660 Call HashHelpers.Combine, X0, X1
	661 Move W20, W0
	662 Add X0, X19, 4
	663 Move X1, X31
	664 Call SByte.GetHashCode, X0
	665 Move W1, W0
	666 Move W0, W20
	667 Move X2, X31
	668 Call HashHelpers.Combine, X0, X1
	669 Move W20, W0
	670 Add X0, X19, 5
	671 Move X1, X31
	672 Call SByte.GetHashCode, X0
	673 Move W1, W0
	674 Move W0, W20
	675 Move X2, X31
	676 Call HashHelpers.Combine, X0, X1
	677 Move W20, W0
	678 Add X0, X19, 6
	679 Move X1, X31
	680 Call SByte.GetHashCode, X0
	681 Move W1, W0
	682 Move W0, W20
	683 Move X2, X31
	684 Call HashHelpers.Combine, X0, X1
	685 Move W20, W0
	686 Add X0, X19, 7
	687 Move X1, X31
	688 Call SByte.GetHashCode, X0
	689 Move W1, W0
	690 Move W0, W20
	691 Move X2, X31
	692 Call HashHelpers.Combine, X0, X1
	693 Move W20, W0
	694 Add X0, X19, 8
	695 Move X1, X31
	696 Call SByte.GetHashCode, X0
	697 Move W1, W0
	698 Move W0, W20
	699 Move X2, X31
	700 Call HashHelpers.Combine, X0, X1
	701 Move W20, W0
	702 Add X0, X19, 9
	703 Move X1, X31
	704 Call SByte.GetHashCode, X0
	705 Move W1, W0
	706 Move W0, W20
	707 Move X2, X31
	708 Call HashHelpers.Combine, X0, X1
	709 Move W20, W0
	710 Add X0, X19, 10
	711 Move X1, X31
	712 Call SByte.GetHashCode, X0
	713 Move W1, W0
	714 Move W0, W20
	715 Move X2, X31
	716 Call HashHelpers.Combine, X0, X1
	717 Move W20, W0
	718 Add X0, X19, 11
	719 Move X1, X31
	720 Call SByte.GetHashCode, X0
	721 Move W1, W0
	722 Move W0, W20
	723 Move X2, X31
	724 Call HashHelpers.Combine, X0, X1
	725 Move W20, W0
	726 Add X0, X19, 12
	727 Move X1, X31
	728 Call SByte.GetHashCode, X0
	729 Move W1, W0
	730 Move W0, W20
	731 Move X2, X31
	732 Call HashHelpers.Combine, X0, X1
	733 Move W20, W0
	734 Add X0, X19, 13
	735 Move X1, X31
	736 Call SByte.GetHashCode, X0
	737 Move W1, W0
	738 Move W0, W20
	739 Move X2, X31
	740 Call HashHelpers.Combine, X0, X1
	741 Move W20, W0
	742 Add X0, X19, 14
	743 Move X1, X31
	744 Call SByte.GetHashCode, X0
	745 Move W1, W0
	746 Move W0, W20
	747 Move X2, X31
	748 Call HashHelpers.Combine, X0, X1
	749 Move W20, W0
	750 Add X0, X19, 15
	751 Move X1, X31
	752 Call SByte.GetHashCode, X0
	753 Move X0, [X23]
	754 Move W8, [X0+309]
	755 Move TEMP, X8
	756 And TEMP, TEMP, 1
	757 Compare TEMP, 1
	758 JumpIfEqual {760}
	759 Call 0x1C5D684
	760 Move X8, [X24]
	761 Move X9, [X0+192]
	762 Move W10, [X8+224]
	763 Move X21, [X9+24]
	764 Compare W10, 0
	765 JumpIfNotEqual {768}
	766 Move X0, X8
	767 Call 0x1C17DFC
	768 Move X0, X21
	769 Move X1, X31
	770 Call Type.GetTypeFromHandle, X0
	771 Move X8, 0x18F7000
	772 Move X8, [X8+3480]
	773 Move X21, X0
	774 Move X1, X31
	775 Move X8, [X8]
	776 Move X0, X8
	777 Call Type.GetTypeFromHandle, X0
	778 Move X1, X0
	779 Move X0, X21
	780 Move X2, X31
	781 Call Type.op_Equality, X0, X1
	782 Move TEMP, X0
	783 And TEMP, TEMP, 1
	784 Compare TEMP, 1
	785 JumpIfNotEqual {1027}
	786 Move X24, 0x18D5000
	787 Move X25, 0x18FA000
	788 Move X24, [X24+1624]
	789 Move X25, [X25+3816]
	790 Move W21, W31
	791 Move W20, W31
	792 Move X0, [X23]
	793 Move W8, [X0+309]
	794 Move TEMP, X8
	795 And TEMP, TEMP, 1
	796 Compare TEMP, 1
	797 JumpIfEqual {799}
	798 Call 0x1C5D684
	799 Move X8, [X0+192]
	800 Move X0, [X8+8]
	801 Move W8, [X0+309]
	802 Move TEMP, X8
	803 And TEMP, TEMP, 1
	804 Compare TEMP, 1
	805 JumpIfEqual {807}
	806 Call 0x1C5D684
	807 Move W8, [X0+224]
	808 Compare W8, 0
	809 JumpIfNotEqual {811}
	810 Call 0x1C17DFC
	811 Move X0, [X23]
	812 Move W8, [X0+309]
	813 Move TEMP, X8
	814 And TEMP, TEMP, 1
	815 Compare TEMP, 1
	816 JumpIfEqual {818}
	817 Call 0x1C5D684
	818 Move X8, [X0+192]
	819 Move X22, [X8+40]
	820 Move X0, [X22+32]
	821 Move W8, [X0+309]
	822 Move TEMP, X8
	823 And TEMP, TEMP, 1
	824 Compare TEMP, 1
	825 JumpIfEqual {827}
	826 Call 0x1C5D684
	827 Move X8, [X0+192]
	828 Move X0, [X8+8]
	829 Move W8, [X0+309]
	830 Move TEMP, X8
	831 And TEMP, TEMP, 1
	832 Compare TEMP, 1
	833 JumpIfEqual {835}
	834 Call 0x1C5D684
	835 Move W8, [X0+224]
	836 Compare W8, 0
	837 JumpIfNotEqual {839}
	838 Call 0x1C17DFC
	839 Move X0, [X22+32]
	840 Move W8, [X0+309]
	841 Move TEMP, X8
	842 And TEMP, TEMP, 1
	843 Compare TEMP, 1
	844 JumpIfEqual {846}
	845 Call 0x1C5D684
	846 Move X8, [X0+192]
	847 Move X0, [X8+8]
	848 Move W8, [X0+309]
	849 Move TEMP, X8
	850 And TEMP, TEMP, 1
	851 Compare TEMP, 1
	852 JumpIfEqual {854}
	853 Call 0x1C5D684
	854 Move X8, [X0+184]
	855 Move W8, [X8]
	856 NotImplemented "Instruction CMP not yet implemented."
	857 Move X0, [X23]
	858 Move W8, [X0+309]
	859 Move TEMP, X8
	860 And TEMP, TEMP, 1
	861 Compare TEMP, 1
	862 JumpIfEqual {864}
	863 Call 0x1C5D684
	864 Move X8, [X0+192]
	865 Move X0, [X8+8]
	866 Move W8, [X0+309]
	867 Move TEMP, X8
	868 And TEMP, TEMP, 1
	869 Compare TEMP, 1
	870 JumpIfEqual {872}
	871 Call 0x1C5D684
	872 Move W8, [X0+224]
	873 Compare W8, 0
	874 JumpIfNotEqual {876}
	875 Call 0x1C17DFC
	876 Move X0, [X23]
	877 Move W8, [X0+309]
	878 Move TEMP, X8
	879 And TEMP, TEMP, 1
	880 Compare TEMP, 1
	881 JumpIfEqual {883}
	882 Call 0x1C5D684
	883 Move X8, [X0+192]
	884 Move X0, X19
	885 Move W1, W21
	886 Move X2, [X8+64]
	887 Call 0x2822834, X0, X1
	888 NotImplemented "Instruction STRH not yet implemented."
	889 Move X0, [X23]
	890 Move W8, [X0+309]
	891 Move TEMP, X8
	892 And TEMP, TEMP, 1
	893 Compare TEMP, 1
	894 JumpIfEqual {896}
	895 Call 0x1C5D684
	896 Move X8, [X0+192]
	897 Add X1, X31, 0
	898 Move X0, [X8+32]
	899 Call 0x1C17E04
	900 Compare X0, 0
	901 JumpIfEqual {2732}
	902 Move X8, [X0]
	903 Move X1, [X24]
	904 Move X8, [X8+64]
	905 Move X9, [X1+64]
	906 NotImplemented "Instruction CMP not yet implemented."
	907 Call 0x1C17E08
	908 NotImplemented "Instruction LDRH not yet implemented."
	909 Add X0, X31, 36
	910 Move X1, X31
	911 NotImplemented "Instruction STRH not yet implemented."
	912 Call UInt16.GetHashCode, X0
	913 Move X8, [X25]
	914 Move W22, W0
	915 Move W9, [X8+224]
	916 Compare W9, 0
	917 JumpIfNotEqual {920}
	918 Move X0, X8
	919 Call 0x1C17DFC
	920 Move W0, W20
	921 Move W1, W22
	922 Move X2, X31
	923 Call HashHelpers.Combine, X0, X1
	924 Move W20, W0
	925 Add W21, W21, 1
	926 Move X0, [X23]
	927 Move W8, [X0+309]
	928 Move TEMP, X8
	929 And TEMP, TEMP, 1
	930 Compare TEMP, 1
	931 JumpIfEqual {933}
	932 Call 0x1C5D684
	933 Move X8, [X24]
	934 Move X9, [X0+192]
	935 Move W10, [X8+224]
	936 Move X21, [X9+24]
	937 Compare W10, 0
	938 JumpIfNotEqual {941}
	939 Move X0, X8
	940 Call 0x1C17DFC
	941 Move X0, X21
	942 Move X1, X31
	943 Call Type.GetTypeFromHandle, X0
	944 Move X8, 0x18F7000
	945 Move X8, [X8+3480]
	946 Move X21, X0
	947 Move X1, X31
	948 Move X8, [X8]
	949 Move X0, X8
	950 Call Type.GetTypeFromHandle, X0
	951 Move X1, X0
	952 Move X0, X21
	953 Move X2, X31
	954 Call Type.op_Equality, X0, X1
	955 Move TEMP, X0
	956 And TEMP, TEMP, 1
	957 Compare TEMP, 1
	958 JumpIfNotEqual {1200}
	959 Move X0, X19
	960 Move X1, X31
	961 Call UInt16.GetHashCode, X0
	962 Move X8, 0x18FA000
	963 Move X8, [X8+3816]
	964 Move W20, W0
	965 Move X8, [X8]
	966 Move W9, [X8+224]
	967 Compare W9, 0
	968 JumpIfNotEqual {971}
	969 Move X0, X8
	970 Call 0x1C17DFC
	971 Move W0, W31
	972 Move W1, W20
	973 Move X2, X31
	974 Call HashHelpers.Combine, X0, X1
	975 Move W20, W0
	976 Add X0, X19, 2
	977 Move X1, X31
	978 Call UInt16.GetHashCode, X0
	979 Move W1, W0
	980 Move W0, W20
	981 Move X2, X31
	982 Call HashHelpers.Combine, X0, X1
	983 Move W20, W0
	984 Add X0, X19, 4
	985 Move X1, X31
	986 Call UInt16.GetHashCode, X0
	987 Move W1, W0
	988 Move W0, W20
	989 Move X2, X31
	990 Call HashHelpers.Combine, X0, X1
	991 Move W20, W0
	992 Add X0, X19, 6
	993 Move X1, X31
	994 Call UInt16.GetHashCode, X0
	995 Move W1, W0
	996 Move W0, W20
	997 Move X2, X31
	998 Call HashHelpers.Combine, X0, X1
	999 Move W20, W0
	1000 Add X0, X19, 8
	1001 Move X1, X31
	1002 Call UInt16.GetHashCode, X0
	1003 Move W1, W0
	1004 Move W0, W20
	1005 Move X2, X31
	1006 Call HashHelpers.Combine, X0, X1
	1007 Move W20, W0
	1008 Add X0, X19, 10
	1009 Move X1, X31
	1010 Call UInt16.GetHashCode, X0
	1011 Move W1, W0
	1012 Move W0, W20
	1013 Move X2, X31
	1014 Call HashHelpers.Combine, X0, X1
	1015 Move W20, W0
	1016 Add X0, X19, 12
	1017 Move X1, X31
	1018 Call UInt16.GetHashCode, X0
	1019 Move W1, W0
	1020 Move W0, W20
	1021 Move X2, X31
	1022 Call HashHelpers.Combine, X0, X1
	1023 Move W20, W0
	1024 Add X0, X19, 14
	1025 Move X1, X31
	1026 Call UInt16.GetHashCode, X0
	1027 Move X0, [X23]
	1028 Move W8, [X0+309]
	1029 Move TEMP, X8
	1030 And TEMP, TEMP, 1
	1031 Compare TEMP, 1
	1032 JumpIfEqual {1034}
	1033 Call 0x1C5D684
	1034 Move X8, [X24]
	1035 Move X9, [X0+192]
	1036 Move W10, [X8+224]
	1037 Move X21, [X9+24]
	1038 Compare W10, 0
	1039 JumpIfNotEqual {1042}
	1040 Move X0, X8
	1041 Call 0x1C17DFC
	1042 Move X0, X21
	1043 Move X1, X31
	1044 Call Type.GetTypeFromHandle, X0
	1045 Move X8, 0x18F7000
	1046 Move X8, [X8+3448]
	1047 Move X21, X0
	1048 Move X1, X31
	1049 Move X8, [X8]
	1050 Move X0, X8
	1051 Call Type.GetTypeFromHandle, X0
	1052 Move X1, X0
	1053 Move X0, X21
	1054 Move X2, X31
	1055 Call Type.op_Equality, X0, X1
	1056 Move TEMP, X0
	1057 And TEMP, TEMP, 1
	1058 Compare TEMP, 1
	1059 JumpIfNotEqual {1301}
	1060 Move X24, 0x18D4000
	1061 Move X25, 0x18FA000
	1062 Move X24, [X24+1576]
	1063 Move X25, [X25+3816]
	1064 Move W21, W31
	1065 Move W20, W31
	1066 Move X0, [X23]
	1067 Move W8, [X0+309]
	1068 Move TEMP, X8
	1069 And TEMP, TEMP, 1
	1070 Compare TEMP, 1
	1071 JumpIfEqual {1073}
	1072 Call 0x1C5D684
	1073 Move X8, [X0+192]
	1074 Move X0, [X8+8]
	1075 Move W8, [X0+309]
	1076 Move TEMP, X8
	1077 And TEMP, TEMP, 1
	1078 Compare TEMP, 1
	1079 JumpIfEqual {1081}
	1080 Call 0x1C5D684
	1081 Move W8, [X0+224]
	1082 Compare W8, 0
	1083 JumpIfNotEqual {1085}
	1084 Call 0x1C17DFC
	1085 Move X0, [X23]
	1086 Move W8, [X0+309]
	1087 Move TEMP, X8
	1088 And TEMP, TEMP, 1
	1089 Compare TEMP, 1
	1090 JumpIfEqual {1092}
	1091 Call 0x1C5D684
	1092 Move X8, [X0+192]
	1093 Move X22, [X8+40]
	1094 Move X0, [X22+32]
	1095 Move W8, [X0+309]
	1096 Move TEMP, X8
	1097 And TEMP, TEMP, 1
	1098 Compare TEMP, 1
	1099 JumpIfEqual {1101}
	1100 Call 0x1C5D684
	1101 Move X8, [X0+192]
	1102 Move X0, [X8+8]
	1103 Move W8, [X0+309]
	1104 Move TEMP, X8
	1105 And TEMP, TEMP, 1
	1106 Compare TEMP, 1
	1107 JumpIfEqual {1109}
	1108 Call 0x1C5D684
	1109 Move W8, [X0+224]
	1110 Compare W8, 0
	1111 JumpIfNotEqual {1113}
	1112 Call 0x1C17DFC
	1113 Move X0, [X22+32]
	1114 Move W8, [X0+309]
	1115 Move TEMP, X8
	1116 And TEMP, TEMP, 1
	1117 Compare TEMP, 1
	1118 JumpIfEqual {1120}
	1119 Call 0x1C5D684
	1120 Move X8, [X0+192]
	1121 Move X0, [X8+8]
	1122 Move W8, [X0+309]
	1123 Move TEMP, X8
	1124 And TEMP, TEMP, 1
	1125 Compare TEMP, 1
	1126 JumpIfEqual {1128}
	1127 Call 0x1C5D684
	1128 Move X8, [X0+184]
	1129 Move W8, [X8]
	1130 NotImplemented "Instruction CMP not yet implemented."
	1131 Move X0, [X23]
	1132 Move W8, [X0+309]
	1133 Move TEMP, X8
	1134 And TEMP, TEMP, 1
	1135 Compare TEMP, 1
	1136 JumpIfEqual {1138}
	1137 Call 0x1C5D684
	1138 Move X8, [X0+192]
	1139 Move X0, [X8+8]
	1140 Move W8, [X0+309]
	1141 Move TEMP, X8
	1142 And TEMP, TEMP, 1
	1143 Compare TEMP, 1
	1144 JumpIfEqual {1146}
	1145 Call 0x1C5D684
	1146 Move W8, [X0+224]
	1147 Compare W8, 0
	1148 JumpIfNotEqual {1150}
	1149 Call 0x1C17DFC
	1150 Move X0, [X23]
	1151 Move W8, [X0+309]
	1152 Move TEMP, X8
	1153 And TEMP, TEMP, 1
	1154 Compare TEMP, 1
	1155 JumpIfEqual {1157}
	1156 Call 0x1C5D684
	1157 Move X8, [X0+192]
	1158 Move X0, X19
	1159 Move W1, W21
	1160 Move X2, [X8+64]
	1161 Call 0x2822834, X0, X1
	1162 NotImplemented "Instruction STRH not yet implemented."
	1163 Move X0, [X23]
	1164 Move W8, [X0+309]
	1165 Move TEMP, X8
	1166 And TEMP, TEMP, 1
	1167 Compare TEMP, 1
	1168 JumpIfEqual {1170}
	1169 Call 0x1C5D684
	1170 Move X8, [X0+192]
	1171 Add X1, X31, 0
	1172 Move X0, [X8+32]
	1173 Call 0x1C17E04
	1174 Compare X0, 0
	1175 JumpIfEqual {2732}
	1176 Move X8, [X0]
	1177 Move X1, [X24]
	1178 Move X8, [X8+64]
	1179 Move X9, [X1+64]
	1180 NotImplemented "Instruction CMP not yet implemented."
	1181 Call 0x1C17E08
	1182 NotImplemented "Instruction LDRH not yet implemented."
	1183 Add X0, X31, 32
	1184 Move X1, X31
	1185 NotImplemented "Instruction STRH not yet implemented."
	1186 Call Int16.GetHashCode, X0
	1187 Move X8, [X25]
	1188 Move W22, W0
	1189 Move W9, [X8+224]
	1190 Compare W9, 0
	1191 JumpIfNotEqual {1194}
	1192 Move X0, X8
	1193 Call 0x1C17DFC
	1194 Move W0, W20
	1195 Move W1, W22
	1196 Move X2, X31
	1197 Call HashHelpers.Combine, X0, X1
	1198 Move W20, W0
	1199 Add W21, W21, 1
	1200 Move X0, [X23]
	1201 Move W8, [X0+309]
	1202 Move TEMP, X8
	1203 And TEMP, TEMP, 1
	1204 Compare TEMP, 1
	1205 JumpIfEqual {1207}
	1206 Call 0x1C5D684
	1207 Move X8, [X24]
	1208 Move X9, [X0+192]
	1209 Move W10, [X8+224]
	1210 Move X21, [X9+24]
	1211 Compare W10, 0
	1212 JumpIfNotEqual {1215}
	1213 Move X0, X8
	1214 Call 0x1C17DFC
	1215 Move X0, X21
	1216 Move X1, X31
	1217 Call Type.GetTypeFromHandle, X0
	1218 Move X8, 0x18F7000
	1219 Move X8, [X8+3448]
	1220 Move X21, X0
	1221 Move X1, X31
	1222 Move X8, [X8]
	1223 Move X0, X8
	1224 Call Type.GetTypeFromHandle, X0
	1225 Move X1, X0
	1226 Move X0, X21
	1227 Move X2, X31
	1228 Call Type.op_Equality, X0, X1
	1229 Move TEMP, X0
	1230 And TEMP, TEMP, 1
	1231 Compare TEMP, 1
	1232 JumpIfNotEqual {1474}
	1233 Move X0, X19
	1234 Move X1, X31
	1235 Call Int16.GetHashCode, X0
	1236 Move X8, 0x18FA000
	1237 Move X8, [X8+3816]
	1238 Move W20, W0
	1239 Move X8, [X8]
	1240 Move W9, [X8+224]
	1241 Compare W9, 0
	1242 JumpIfNotEqual {1245}
	1243 Move X0, X8
	1244 Call 0x1C17DFC
	1245 Move W0, W31
	1246 Move W1, W20
	1247 Move X2, X31
	1248 Call HashHelpers.Combine, X0, X1
	1249 Move W20, W0
	1250 Add X0, X19, 2
	1251 Move X1, X31
	1252 Call Int16.GetHashCode, X0
	1253 Move W1, W0
	1254 Move W0, W20
	1255 Move X2, X31
	1256 Call HashHelpers.Combine, X0, X1
	1257 Move W20, W0
	1258 Add X0, X19, 4
	1259 Move X1, X31
	1260 Call Int16.GetHashCode, X0
	1261 Move W1, W0
	1262 Move W0, W20
	1263 Move X2, X31
	1264 Call HashHelpers.Combine, X0, X1
	1265 Move W20, W0
	1266 Add X0, X19, 6
	1267 Move X1, X31
	1268 Call Int16.GetHashCode, X0
	1269 Move W1, W0
	1270 Move W0, W20
	1271 Move X2, X31
	1272 Call HashHelpers.Combine, X0, X1
	1273 Move W20, W0
	1274 Add X0, X19, 8
	1275 Move X1, X31
	1276 Call Int16.GetHashCode, X0
	1277 Move W1, W0
	1278 Move W0, W20
	1279 Move X2, X31
	1280 Call HashHelpers.Combine, X0, X1
	1281 Move W20, W0
	1282 Add X0, X19, 10
	1283 Move X1, X31
	1284 Call Int16.GetHashCode, X0
	1285 Move W1, W0
	1286 Move W0, W20
	1287 Move X2, X31
	1288 Call HashHelpers.Combine, X0, X1
	1289 Move W20, W0
	1290 Add X0, X19, 12
	1291 Move X1, X31
	1292 Call Int16.GetHashCode, X0
	1293 Move W1, W0
	1294 Move W0, W20
	1295 Move X2, X31
	1296 Call HashHelpers.Combine, X0, X1
	1297 Move W20, W0
	1298 Add X0, X19, 14
	1299 Move X1, X31
	1300 Call Int16.GetHashCode, X0
	1301 Move X0, [X23]
	1302 Move W8, [X0+309]
	1303 Move TEMP, X8
	1304 And TEMP, TEMP, 1
	1305 Compare TEMP, 1
	1306 JumpIfEqual {1308}
	1307 Call 0x1C5D684
	1308 Move X8, [X24]
	1309 Move X9, [X0+192]
	1310 Move W10, [X8+224]
	1311 Move X21, [X9+24]
	1312 Compare W10, 0
	1313 JumpIfNotEqual {1316}
	1314 Move X0, X8
	1315 Call 0x1C17DFC
	1316 Move X0, X21
	1317 Move X1, X31
	1318 Call Type.GetTypeFromHandle, X0
	1319 Move X8, 0x18F7000
	1320 Move X8, [X8+3488]
	1321 Move X21, X0
	1322 Move X1, X31
	1323 Move X8, [X8]
	1324 Move X0, X8
	1325 Call Type.GetTypeFromHandle, X0
	1326 Move X1, X0
	1327 Move X0, X21
	1328 Move X2, X31
	1329 Call Type.op_Equality, X0, X1
	1330 Move TEMP, X0
	1331 And TEMP, TEMP, 1
	1332 Compare TEMP, 1
	1333 JumpIfNotEqual {1543}
	1334 Move X24, 0x18D8000
	1335 Move X25, 0x18FA000
	1336 Move X24, [X24+1824]
	1337 Move X25, [X25+3816]
	1338 Move W21, W31
	1339 Move W20, W31
	1340 Move X0, [X23]
	1341 Move W8, [X0+309]
	1342 Move TEMP, X8
	1343 And TEMP, TEMP, 1
	1344 Compare TEMP, 1
	1345 JumpIfEqual {1347}
	1346 Call 0x1C5D684
	1347 Move X8, [X0+192]
	1348 Move X0, [X8+8]
	1349 Move W8, [X0+309]
	1350 Move TEMP, X8
	1351 And TEMP, TEMP, 1
	1352 Compare TEMP, 1
	1353 JumpIfEqual {1355}
	1354 Call 0x1C5D684
	1355 Move W8, [X0+224]
	1356 Compare W8, 0
	1357 JumpIfNotEqual {1359}
	1358 Call 0x1C17DFC
	1359 Move X0, [X23]
	1360 Move W8, [X0+309]
	1361 Move TEMP, X8
	1362 And TEMP, TEMP, 1
	1363 Compare TEMP, 1
	1364 JumpIfEqual {1366}
	1365 Call 0x1C5D684
	1366 Move X8, [X0+192]
	1367 Move X22, [X8+40]
	1368 Move X0, [X22+32]
	1369 Move W8, [X0+309]
	1370 Move TEMP, X8
	1371 And TEMP, TEMP, 1
	1372 Compare TEMP, 1
	1373 JumpIfEqual {1375}
	1374 Call 0x1C5D684
	1375 Move X8, [X0+192]
	1376 Move X0, [X8+8]
	1377 Move W8, [X0+309]
	1378 Move TEMP, X8
	1379 And TEMP, TEMP, 1
	1380 Compare TEMP, 1
	1381 JumpIfEqual {1383}
	1382 Call 0x1C5D684
	1383 Move W8, [X0+224]
	1384 Compare W8, 0
	1385 JumpIfNotEqual {1387}
	1386 Call 0x1C17DFC
	1387 Move X0, [X22+32]
	1388 Move W8, [X0+309]
	1389 Move TEMP, X8
	1390 And TEMP, TEMP, 1
	1391 Compare TEMP, 1
	1392 JumpIfEqual {1394}
	1393 Call 0x1C5D684
	1394 Move X8, [X0+192]
	1395 Move X0, [X8+8]
	1396 Move W8, [X0+309]
	1397 Move TEMP, X8
	1398 And TEMP, TEMP, 1
	1399 Compare TEMP, 1
	1400 JumpIfEqual {1402}
	1401 Call 0x1C5D684
	1402 Move X8, [X0+184]
	1403 Move W8, [X8]
	1404 NotImplemented "Instruction CMP not yet implemented."
	1405 Move X0, [X23]
	1406 Move W8, [X0+309]
	1407 Move TEMP, X8
	1408 And TEMP, TEMP, 1
	1409 Compare TEMP, 1
	1410 JumpIfEqual {1412}
	1411 Call 0x1C5D684
	1412 Move X8, [X0+192]
	1413 Move X0, [X8+8]
	1414 Move W8, [X0+309]
	1415 Move TEMP, X8
	1416 And TEMP, TEMP, 1
	1417 Compare TEMP, 1
	1418 JumpIfEqual {1420}
	1419 Call 0x1C5D684
	1420 Move W8, [X0+224]
	1421 Compare W8, 0
	1422 JumpIfNotEqual {1424}
	1423 Call 0x1C17DFC
	1424 Move X0, [X23]
	1425 Move W8, [X0+309]
	1426 Move TEMP, X8
	1427 And TEMP, TEMP, 1
	1428 Compare TEMP, 1
	1429 JumpIfEqual {1431}
	1430 Call 0x1C5D684
	1431 Move X8, [X0+192]
	1432 Move X0, X19
	1433 Move W1, W21
	1434 Move X2, [X8+64]
	1435 Call 0x2822834, X0, X1
	1436 NotImplemented "Instruction STRH not yet implemented."
	1437 Move X0, [X23]
	1438 Move W8, [X0+309]
	1439 Move TEMP, X8
	1440 And TEMP, TEMP, 1
	1441 Compare TEMP, 1
	1442 JumpIfEqual {1444}
	1443 Call 0x1C5D684
	1444 Move X8, [X0+192]
	1445 Add X1, X31, 0
	1446 Move X0, [X8+32]
	1447 Call 0x1C17E04
	1448 Compare X0, 0
	1449 JumpIfEqual {2732}
	1450 Move X8, [X0]
	1451 Move X1, [X24]
	1452 Move X8, [X8+64]
	1453 Move X9, [X1+64]
	1454 NotImplemented "Instruction CMP not yet implemented."
	1455 Call 0x1C17E08
	1456 Move W8, [X0]
	1457 Add X0, X31, 28
	1458 Move X1, X31
	1459 Move [X31+28], W8
	1460 Call UInt32.GetHashCode, X0
	1461 Move X8, [X25]
	1462 Move W22, W0
	1463 Move W9, [X8+224]
	1464 Compare W9, 0
	1465 JumpIfNotEqual {1468}
	1466 Move X0, X8
	1467 Call 0x1C17DFC
	1468 Move W0, W20
	1469 Move W1, W22
	1470 Move X2, X31
	1471 Call HashHelpers.Combine, X0, X1
	1472 Move W20, W0
	1473 Add W21, W21, 1
	1474 Move X0, [X23]
	1475 Move W8, [X0+309]
	1476 Move TEMP, X8
	1477 And TEMP, TEMP, 1
	1478 Compare TEMP, 1
	1479 JumpIfEqual {1481}
	1480 Call 0x1C5D684
	1481 Move X8, [X24]
	1482 Move X9, [X0+192]
	1483 Move W10, [X8+224]
	1484 Move X21, [X9+24]
	1485 Compare W10, 0
	1486 JumpIfNotEqual {1489}
	1487 Move X0, X8
	1488 Call 0x1C17DFC
	1489 Move X0, X21
	1490 Move X1, X31
	1491 Call Type.GetTypeFromHandle, X0
	1492 Move X8, 0x18F7000
	1493 Move X8, [X8+3488]
	1494 Move X21, X0
	1495 Move X1, X31
	1496 Move X8, [X8]
	1497 Move X0, X8
	1498 Call Type.GetTypeFromHandle, X0
	1499 Move X1, X0
	1500 Move X0, X21
	1501 Move X2, X31
	1502 Call Type.op_Equality, X0, X1
	1503 Move TEMP, X0
	1504 And TEMP, TEMP, 1
	1505 Compare TEMP, 1
	1506 JumpIfNotEqual {1716}
	1507 Move X0, X19
	1508 Move X1, X31
	1509 Call UInt32.GetHashCode, X0
	1510 Move X8, 0x18FA000
	1511 Move X8, [X8+3816]
	1512 Move W20, W0
	1513 Move X8, [X8]
	1514 Move W9, [X8+224]
	1515 Compare W9, 0
	1516 JumpIfNotEqual {1519}
	1517 Move X0, X8
	1518 Call 0x1C17DFC
	1519 Move W0, W31
	1520 Move W1, W20
	1521 Move X2, X31
	1522 Call HashHelpers.Combine, X0, X1
	1523 Move W20, W0
	1524 Add X0, X19, 4
	1525 Move X1, X31
	1526 Call UInt32.GetHashCode, X0
	1527 Move W1, W0
	1528 Move W0, W20
	1529 Move X2, X31
	1530 Call HashHelpers.Combine, X0, X1
	1531 Move W20, W0
	1532 Add X0, X19, 8
	1533 Move X1, X31
	1534 Call UInt32.GetHashCode, X0
	1535 Move W1, W0
	1536 Move W0, W20
	1537 Move X2, X31
	1538 Call HashHelpers.Combine, X0, X1
	1539 Move W20, W0
	1540 Add X0, X19, 12
	1541 Move X1, X31
	1542 Call UInt32.GetHashCode, X0
	1543 Move X0, [X23]
	1544 Move W8, [X0+309]
	1545 Move TEMP, X8
	1546 And TEMP, TEMP, 1
	1547 Compare TEMP, 1
	1548 JumpIfEqual {1550}
	1549 Call 0x1C5D684
	1550 Move X8, [X24]
	1551 Move X9, [X0+192]
	1552 Move W10, [X8+224]
	1553 Move X21, [X9+24]
	1554 Compare W10, 0
	1555 JumpIfNotEqual {1558}
	1556 Move X0, X8
	1557 Call 0x1C17DFC
	1558 Move X0, X21
	1559 Move X1, X31
	1560 Call Type.GetTypeFromHandle, X0
	1561 Move X8, 0x18F7000
	1562 Move X8, [X8+3456]
	1563 Move X21, X0
	1564 Move X1, X31
	1565 Move X8, [X8]
	1566 Move X0, X8
	1567 Call Type.GetTypeFromHandle, X0
	1568 Move X1, X0
	1569 Move X0, X21
	1570 Move X2, X31
	1571 Call Type.op_Equality, X0, X1
	1572 Move TEMP, X0
	1573 And TEMP, TEMP, 1
	1574 Compare TEMP, 1
	1575 JumpIfNotEqual {1785}
	1576 Move X24, 0x18D0000
	1577 Move X25, 0x18FA000
	1578 Move X24, [X24+1880]
	1579 Move X25, [X25+3816]
	1580 Move W21, W31
	1581 Move W20, W31
	1582 Move X0, [X23]
	1583 Move W8, [X0+309]
	1584 Move TEMP, X8
	1585 And TEMP, TEMP, 1
	1586 Compare TEMP, 1
	1587 JumpIfEqual {1589}
	1588 Call 0x1C5D684
	1589 Move X8, [X0+192]
	1590 Move X0, [X8+8]
	1591 Move W8, [X0+309]
	1592 Move TEMP, X8
	1593 And TEMP, TEMP, 1
	1594 Compare TEMP, 1
	1595 JumpIfEqual {1597}
	1596 Call 0x1C5D684
	1597 Move W8, [X0+224]
	1598 Compare W8, 0
	1599 JumpIfNotEqual {1601}
	1600 Call 0x1C17DFC
	1601 Move X0, [X23]
	1602 Move W8, [X0+309]
	1603 Move TEMP, X8
	1604 And TEMP, TEMP, 1
	1605 Compare TEMP, 1
	1606 JumpIfEqual {1608}
	1607 Call 0x1C5D684
	1608 Move X8, [X0+192]
	1609 Move X22, [X8+40]
	1610 Move X0, [X22+32]
	1611 Move W8, [X0+309]
	1612 Move TEMP, X8
	1613 And TEMP, TEMP, 1
	1614 Compare TEMP, 1
	1615 JumpIfEqual {1617}
	1616 Call 0x1C5D684
	1617 Move X8, [X0+192]
	1618 Move X0, [X8+8]
	1619 Move W8, [X0+309]
	1620 Move TEMP, X8
	1621 And TEMP, TEMP, 1
	1622 Compare TEMP, 1
	1623 JumpIfEqual {1625}
	1624 Call 0x1C5D684
	1625 Move W8, [X0+224]
	1626 Compare W8, 0
	1627 JumpIfNotEqual {1629}
	1628 Call 0x1C17DFC
	1629 Move X0, [X22+32]
	1630 Move W8, [X0+309]
	1631 Move TEMP, X8
	1632 And TEMP, TEMP, 1
	1633 Compare TEMP, 1
	1634 JumpIfEqual {1636}
	1635 Call 0x1C5D684
	1636 Move X8, [X0+192]
	1637 Move X0, [X8+8]
	1638 Move W8, [X0+309]
	1639 Move TEMP, X8
	1640 And TEMP, TEMP, 1
	1641 Compare TEMP, 1
	1642 JumpIfEqual {1644}
	1643 Call 0x1C5D684
	1644 Move X8, [X0+184]
	1645 Move W8, [X8]
	1646 NotImplemented "Instruction CMP not yet implemented."
	1647 Move X0, [X23]
	1648 Move W8, [X0+309]
	1649 Move TEMP, X8
	1650 And TEMP, TEMP, 1
	1651 Compare TEMP, 1
	1652 JumpIfEqual {1654}
	1653 Call 0x1C5D684
	1654 Move X8, [X0+192]
	1655 Move X0, [X8+8]
	1656 Move W8, [X0+309]
	1657 Move TEMP, X8
	1658 And TEMP, TEMP, 1
	1659 Compare TEMP, 1
	1660 JumpIfEqual {1662}
	1661 Call 0x1C5D684
	1662 Move W8, [X0+224]
	1663 Compare W8, 0
	1664 JumpIfNotEqual {1666}
	1665 Call 0x1C17DFC
	1666 Move X0, [X23]
	1667 Move W8, [X0+309]
	1668 Move TEMP, X8
	1669 And TEMP, TEMP, 1
	1670 Compare TEMP, 1
	1671 JumpIfEqual {1673}
	1672 Call 0x1C5D684
	1673 Move X8, [X0+192]
	1674 Move X0, X19
	1675 Move W1, W21
	1676 Move X2, [X8+64]
	1677 Call 0x2822834, X0, X1
	1678 NotImplemented "Instruction STRH not yet implemented."
	1679 Move X0, [X23]
	1680 Move W8, [X0+309]
	1681 Move TEMP, X8
	1682 And TEMP, TEMP, 1
	1683 Compare TEMP, 1
	1684 JumpIfEqual {1686}
	1685 Call 0x1C5D684
	1686 Move X8, [X0+192]
	1687 Add X1, X31, 0
	1688 Move X0, [X8+32]
	1689 Call 0x1C17E04
	1690 Compare X0, 0
	1691 JumpIfEqual {2732}
	1692 Move X8, [X0]
	1693 Move X1, [X24]
	1694 Move X8, [X8+64]
	1695 Move X9, [X1+64]
	1696 NotImplemented "Instruction CMP not yet implemented."
	1697 Call 0x1C17E08
	1698 Move W8, [X0]
	1699 Add X0, X31, 24
	1700 Move X1, X31
	1701 Move [X31+24], W8
	1702 Call Int32.GetHashCode, X0
	1703 Move X8, [X25]
	1704 Move W22, W0
	1705 Move W9, [X8+224]
	1706 Compare W9, 0
	1707 JumpIfNotEqual {1710}
	1708 Move X0, X8
	1709 Call 0x1C17DFC
	1710 Move W0, W20
	1711 Move W1, W22
	1712 Move X2, X31
	1713 Call HashHelpers.Combine, X0, X1
	1714 Move W20, W0
	1715 Add W21, W21, 1
	1716 Move X0, [X23]
	1717 Move W8, [X0+309]
	1718 Move TEMP, X8
	1719 And TEMP, TEMP, 1
	1720 Compare TEMP, 1
	1721 JumpIfEqual {1723}
	1722 Call 0x1C5D684
	1723 Move X8, [X24]
	1724 Move X9, [X0+192]
	1725 Move W10, [X8+224]
	1726 Move X21, [X9+24]
	1727 Compare W10, 0
	1728 JumpIfNotEqual {1731}
	1729 Move X0, X8
	1730 Call 0x1C17DFC
	1731 Move X0, X21
	1732 Move X1, X31
	1733 Call Type.GetTypeFromHandle, X0
	1734 Move X8, 0x18F6000
	1735 Move X8, [X8+3456]
	1736 Move X21, X0
	1737 Move X1, X31
	1738 Move X8, [X8]
	1739 Move X0, X8
	1740 Call Type.GetTypeFromHandle, X0
	1741 Move X1, X0
	1742 Move X0, X21
	1743 Move X2, X31
	1744 Call Type.op_Equality, X0, X1
	1745 Move TEMP, X0
	1746 And TEMP, TEMP, 1
	1747 Compare TEMP, 1
	1748 JumpIfNotEqual {1958}
	1749 Move X0, X19
	1750 Move X1, X31
	1751 Call Int32.GetHashCode, X0
	1752 Move X8, 0x18F9000
	1753 Move X8, [X8+3816]
	1754 Move W20, W0
	1755 Move X8, [X8]
	1756 Move W9, [X8+224]
	1757 Compare W9, 0
	1758 JumpIfNotEqual {1761}
	1759 Move X0, X8
	1760 Call 0x1C17DFC
	1761 Move W0, W31
	1762 Move W1, W20
	1763 Move X2, X31
	1764 Call HashHelpers.Combine, X0, X1
	1765 Move W20, W0
	1766 Add X0, X19, 4
	1767 Move X1, X31
	1768 Call Int32.GetHashCode, X0
	1769 Move W1, W0
	1770 Move W0, W20
	1771 Move X2, X31
	1772 Call HashHelpers.Combine, X0, X1
	1773 Move W20, W0
	1774 Add X0, X19, 8
	1775 Move X1, X31
	1776 Call Int32.GetHashCode, X0
	1777 Move W1, W0
	1778 Move W0, W20
	1779 Move X2, X31
	1780 Call HashHelpers.Combine, X0, X1
	1781 Move W20, W0
	1782 Add X0, X19, 12
	1783 Move X1, X31
	1784 Call Int32.GetHashCode, X0
	1785 Move X0, [X23]
	1786 Move W8, [X0+309]
	1787 Move TEMP, X8
	1788 And TEMP, TEMP, 1
	1789 Compare TEMP, 1
	1790 JumpIfEqual {1792}
	1791 Call 0x1C5D684
	1792 Move X8, [X24]
	1793 Move X9, [X0+192]
	1794 Move W10, [X8+224]
	1795 Move X21, [X9+24]
	1796 Compare W10, 0
	1797 JumpIfNotEqual {1800}
	1798 Move X0, X8
	1799 Call 0x1C17DFC
	1800 Move X0, X21
	1801 Move X1, X31
	1802 Call Type.GetTypeFromHandle, X0
	1803 Move X8, 0x18F6000
	1804 Move X8, [X8+3496]
	1805 Move X21, X0
	1806 Move X1, X31
	1807 Move X8, [X8]
	1808 Move X0, X8
	1809 Call Type.GetTypeFromHandle, X0
	1810 Move X1, X0
	1811 Move X0, X21
	1812 Move X2, X31
	1813 Call Type.op_Equality, X0, X1
	1814 Move TEMP, X0
	1815 And TEMP, TEMP, 1
	1816 Compare TEMP, 1
	1817 JumpIfNotEqual {2011}
	1818 Move X24, 0x18D0000
	1819 Move X25, 0x18F9000
	1820 Move X24, [X24+1880]
	1821 Move X25, [X25+3816]
	1822 Move W21, W31
	1823 Move W20, W31
	1824 Move X0, [X23]
	1825 Move W8, [X0+309]
	1826 Move TEMP, X8
	1827 And TEMP, TEMP, 1
	1828 Compare TEMP, 1
	1829 JumpIfEqual {1831}
	1830 Call 0x1C5D684
	1831 Move X8, [X0+192]
	1832 Move X0, [X8+8]
	1833 Move W8, [X0+309]
	1834 Move TEMP, X8
	1835 And TEMP, TEMP, 1
	1836 Compare TEMP, 1
	1837 JumpIfEqual {1839}
	1838 Call 0x1C5D684
	1839 Move W8, [X0+224]
	1840 Compare W8, 0
	1841 JumpIfNotEqual {1843}
	1842 Call 0x1C17DFC
	1843 Move X0, [X23]
	1844 Move W8, [X0+309]
	1845 Move TEMP, X8
	1846 And TEMP, TEMP, 1
	1847 Compare TEMP, 1
	1848 JumpIfEqual {1850}
	1849 Call 0x1C5D684
	1850 Move X8, [X0+192]
	1851 Move X22, [X8+40]
	1852 Move X0, [X22+32]
	1853 Move W8, [X0+309]
	1854 Move TEMP, X8
	1855 And TEMP, TEMP, 1
	1856 Compare TEMP, 1
	1857 JumpIfEqual {1859}
	1858 Call 0x1C5D684
	1859 Move X8, [X0+192]
	1860 Move X0, [X8+8]
	1861 Move W8, [X0+309]
	1862 Move TEMP, X8
	1863 And TEMP, TEMP, 1
	1864 Compare TEMP, 1
	1865 JumpIfEqual {1867}
	1866 Call 0x1C5D684
	1867 Move W8, [X0+224]
	1868 Compare W8, 0
	1869 JumpIfNotEqual {1871}
	1870 Call 0x1C17DFC
	1871 Move X0, [X22+32]
	1872 Move W8, [X0+309]
	1873 Move TEMP, X8
	1874 And TEMP, TEMP, 1
	1875 Compare TEMP, 1
	1876 JumpIfEqual {1878}
	1877 Call 0x1C5D684
	1878 Move X8, [X0+192]
	1879 Move X0, [X8+8]
	1880 Move W8, [X0+309]
	1881 Move TEMP, X8
	1882 And TEMP, TEMP, 1
	1883 Compare TEMP, 1
	1884 JumpIfEqual {1886}
	1885 Call 0x1C5D684
	1886 Move X8, [X0+184]
	1887 Move W8, [X8]
	1888 NotImplemented "Instruction CMP not yet implemented."
	1889 Move X0, [X23]
	1890 Move W8, [X0+309]
	1891 Move TEMP, X8
	1892 And TEMP, TEMP, 1
	1893 Compare TEMP, 1
	1894 JumpIfEqual {1896}
	1895 Call 0x1C5D684
	1896 Move X8, [X0+192]
	1897 Move X0, [X8+8]
	1898 Move W8, [X0+309]
	1899 Move TEMP, X8
	1900 And TEMP, TEMP, 1
	1901 Compare TEMP, 1
	1902 JumpIfEqual {1904}
	1903 Call 0x1C5D684
	1904 Move W8, [X0+224]
	1905 Compare W8, 0
	1906 JumpIfNotEqual {1908}
	1907 Call 0x1C17DFC
	1908 Move X0, [X23]
	1909 Move W8, [X0+309]
	1910 Move TEMP, X8
	1911 And TEMP, TEMP, 1
	1912 Compare TEMP, 1
	1913 JumpIfEqual {1915}
	1914 Call 0x1C5D684
	1915 Move X8, [X0+192]
	1916 Move X0, X19
	1917 Move W1, W21
	1918 Move X2, [X8+64]
	1919 Call 0x2822834, X0, X1
	1920 NotImplemented "Instruction STRH not yet implemented."
	1921 Move X0, [X23]
	1922 Move W8, [X0+309]
	1923 Move TEMP, X8
	1924 And TEMP, TEMP, 1
	1925 Compare TEMP, 1
	1926 JumpIfEqual {1928}
	1927 Call 0x1C5D684
	1928 Move X8, [X0+192]
	1929 Add X1, X31, 0
	1930 Move X0, [X8+32]
	1931 Call 0x1C17E04
	1932 Compare X0, 0
	1933 JumpIfEqual {2732}
	1934 Move X8, [X0]
	1935 Move X1, [X24]
	1936 Move X8, [X8+64]
	1937 Move X9, [X1+64]
	1938 NotImplemented "Instruction CMP not yet implemented."
	1939 Call 0x1C17E08
	1940 Move X8, [X0]
	1941 Add X0, X31, 16
	1942 Move X1, X31
	1943 Move [X31+16], X8
	1944 Call UInt64.GetHashCode, X0
	1945 Move X8, [X25]
	1946 Move W22, W0
	1947 Move W9, [X8+224]
	1948 Compare W9, 0
	1949 JumpIfNotEqual {1952}
	1950 Move X0, X8
	1951 Call 0x1C17DFC
	1952 Move W0, W20
	1953 Move W1, W22
	1954 Move X2, X31
	1955 Call HashHelpers.Combine, X0, X1
	1956 Move W20, W0
	1957 Add W21, W21, 1
	1958 Move X0, [X23]
	1959 Move W8, [X0+309]
	1960 Move TEMP, X8
	1961 And TEMP, TEMP, 1
	1962 Compare TEMP, 1
	1963 JumpIfEqual {1965}
	1964 Call 0x1C5D684
	1965 Move X8, [X24]
	1966 Move X9, [X0+192]
	1967 Move W10, [X8+224]
	1968 Move X21, [X9+24]
	1969 Compare W10, 0
	1970 JumpIfNotEqual {1973}
	1971 Move X0, X8
	1972 Call 0x1C17DFC
	1973 Move X0, X21
	1974 Move X1, X31
	1975 Call Type.GetTypeFromHandle, X0
	1976 Move X8, 0x18F6000
	1977 Move X8, [X8+3496]
	1978 Move X21, X0
	1979 Move X1, X31
	1980 Move X8, [X8]
	1981 Move X0, X8
	1982 Call Type.GetTypeFromHandle, X0
	1983 Move X1, X0
	1984 Move X0, X21
	1985 Move X2, X31
	1986 Call Type.op_Equality, X0, X1
	1987 Move TEMP, X0
	1988 And TEMP, TEMP, 1
	1989 Compare TEMP, 1
	1990 JumpIfNotEqual {2184}
	1991 Move X0, X19
	1992 Move X1, X31
	1993 Call UInt64.GetHashCode, X0
	1994 Move X8, 0x18F9000
	1995 Move X8, [X8+3816]
	1996 Move W20, W0
	1997 Move X8, [X8]
	1998 Move W9, [X8+224]
	1999 Compare W9, 0
	2000 JumpIfNotEqual {2003}
	2001 Move X0, X8
	2002 Call 0x1C17DFC
	2003 Move W0, W31
	2004 Move W1, W20
	2005 Move X2, X31
	2006 Call HashHelpers.Combine, X0, X1
	2007 Move W20, W0
	2008 Add X0, X19, 8
	2009 Move X1, X31
	2010 Call UInt64.GetHashCode, X0
	2011 Move X0, [X23]
	2012 Move W8, [X0+309]
	2013 Move TEMP, X8
	2014 And TEMP, TEMP, 1
	2015 Compare TEMP, 1
	2016 JumpIfEqual {2018}
	2017 Call 0x1C5D684
	2018 Move X8, [X24]
	2019 Move X9, [X0+192]
	2020 Move W10, [X8+224]
	2021 Move X21, [X9+24]
	2022 Compare W10, 0
	2023 JumpIfNotEqual {2026}
	2024 Move X0, X8
	2025 Call 0x1C17DFC
	2026 Move X0, X21
	2027 Move X1, X31
	2028 Call Type.GetTypeFromHandle, X0
	2029 Move X8, 0x18F6000
	2030 Move X8, [X8+3464]
	2031 Move X21, X0
	2032 Move X1, X31
	2033 Move X8, [X8]
	2034 Move X0, X8
	2035 Call Type.GetTypeFromHandle, X0
	2036 Move X1, X0
	2037 Move X0, X21
	2038 Move X2, X31
	2039 Call Type.op_Equality, X0, X1
	2040 Move TEMP, X0
	2041 And TEMP, TEMP, 1
	2042 Compare TEMP, 1
	2043 JumpIfNotEqual {2237}
	2044 Move X24, 0x18D1000
	2045 Move X25, 0x18F9000
	2046 Move X24, [X24+2656]
	2047 Move X25, [X25+3816]
	2048 Move W21, W31
	2049 Move W20, W31
	2050 Move X0, [X23]
	2051 Move W8, [X0+309]
	2052 Move TEMP, X8
	2053 And TEMP, TEMP, 1
	2054 Compare TEMP, 1
	2055 JumpIfEqual {2057}
	2056 Call 0x1C5D684
	2057 Move X8, [X0+192]
	2058 Move X0, [X8+8]
	2059 Move W8, [X0+309]
	2060 Move TEMP, X8
	2061 And TEMP, TEMP, 1
	2062 Compare TEMP, 1
	2063 JumpIfEqual {2065}
	2064 Call 0x1C5D684
	2065 Move W8, [X0+224]
	2066 Compare W8, 0
	2067 JumpIfNotEqual {2069}
	2068 Call 0x1C17DFC
	2069 Move X0, [X23]
	2070 Move W8, [X0+309]
	2071 Move TEMP, X8
	2072 And TEMP, TEMP, 1
	2073 Compare TEMP, 1
	2074 JumpIfEqual {2076}
	2075 Call 0x1C5D684
	2076 Move X8, [X0+192]
	2077 Move X22, [X8+40]
	2078 Move X0, [X22+32]
	2079 Move W8, [X0+309]
	2080 Move TEMP, X8
	2081 And TEMP, TEMP, 1
	2082 Compare TEMP, 1
	2083 JumpIfEqual {2085}
	2084 Call 0x1C5D684
	2085 Move X8, [X0+192]
	2086 Move X0, [X8+8]
	2087 Move W8, [X0+309]
	2088 Move TEMP, X8
	2089 And TEMP, TEMP, 1
	2090 Compare TEMP, 1
	2091 JumpIfEqual {2093}
	2092 Call 0x1C5D684
	2093 Move W8, [X0+224]
	2094 Compare W8, 0
	2095 JumpIfNotEqual {2097}
	2096 Call 0x1C17DFC
	2097 Move X0, [X22+32]
	2098 Move W8, [X0+309]
	2099 Move TEMP, X8
	2100 And TEMP, TEMP, 1
	2101 Compare TEMP, 1
	2102 JumpIfEqual {2104}
	2103 Call 0x1C5D684
	2104 Move X8, [X0+192]
	2105 Move X0, [X8+8]
	2106 Move W8, [X0+309]
	2107 Move TEMP, X8
	2108 And TEMP, TEMP, 1
	2109 Compare TEMP, 1
	2110 JumpIfEqual {2112}
	2111 Call 0x1C5D684
	2112 Move X8, [X0+184]
	2113 Move W8, [X8]
	2114 NotImplemented "Instruction CMP not yet implemented."
	2115 Move X0, [X23]
	2116 Move W8, [X0+309]
	2117 Move TEMP, X8
	2118 And TEMP, TEMP, 1
	2119 Compare TEMP, 1
	2120 JumpIfEqual {2122}
	2121 Call 0x1C5D684
	2122 Move X8, [X0+192]
	2123 Move X0, [X8+8]
	2124 Move W8, [X0+309]
	2125 Move TEMP, X8
	2126 And TEMP, TEMP, 1
	2127 Compare TEMP, 1
	2128 JumpIfEqual {2130}
	2129 Call 0x1C5D684
	2130 Move W8, [X0+224]
	2131 Compare W8, 0
	2132 JumpIfNotEqual {2134}
	2133 Call 0x1C17DFC
	2134 Move X0, [X23]
	2135 Move W8, [X0+309]
	2136 Move TEMP, X8
	2137 And TEMP, TEMP, 1
	2138 Compare TEMP, 1
	2139 JumpIfEqual {2141}
	2140 Call 0x1C5D684
	2141 Move X8, [X0+192]
	2142 Move X0, X19
	2143 Move W1, W21
	2144 Move X2, [X8+64]
	2145 Call 0x2822834, X0, X1
	2146 NotImplemented "Instruction STRH not yet implemented."
	2147 Move X0, [X23]
	2148 Move W8, [X0+309]
	2149 Move TEMP, X8
	2150 And TEMP, TEMP, 1
	2151 Compare TEMP, 1
	2152 JumpIfEqual {2154}
	2153 Call 0x1C5D684
	2154 Move X8, [X0+192]
	2155 Add X1, X31, 0
	2156 Move X0, [X8+32]
	2157 Call 0x1C17E04
	2158 Compare X0, 0
	2159 JumpIfEqual {2732}
	2160 Move X8, [X0]
	2161 Move X1, [X24]
	2162 Move X8, [X8+64]
	2163 Move X9, [X1+64]
	2164 NotImplemented "Instruction CMP not yet implemented."
	2165 Call 0x1C17E08
	2166 Move X8, [X0]
	2167 Add X0, X31, 8
	2168 Move X1, X31
	2169 Move [X31+8], X8
	2170 Call Int64.GetHashCode, X0
	2171 Move X8, [X25]
	2172 Move W22, W0
	2173 Move W9, [X8+224]
	2174 Compare W9, 0
	2175 JumpIfNotEqual {2178}
	2176 Move X0, X8
	2177 Call 0x1C17DFC
	2178 Move W0, W20
	2179 Move W1, W22
	2180 Move X2, X31
	2181 Call HashHelpers.Combine, X0, X1
	2182 Move W20, W0
	2183 Add W21, W21, 1
	2184 Move X0, [X23]
	2185 Move W8, [X0+309]
	2186 Move TEMP, X8
	2187 And TEMP, TEMP, 1
	2188 Compare TEMP, 1
	2189 JumpIfEqual {2191}
	2190 Call 0x1C5D684
	2191 Move X8, [X24]
	2192 Move X9, [X0+192]
	2193 Move W10, [X8+224]
	2194 Move X21, [X9+24]
	2195 Compare W10, 0
	2196 JumpIfNotEqual {2199}
	2197 Move X0, X8
	2198 Call 0x1C17DFC
	2199 Move X0, X21
	2200 Move X1, X31
	2201 Call Type.GetTypeFromHandle, X0
	2202 Move X8, 0x18F6000
	2203 Move X8, [X8+3464]
	2204 Move X21, X0
	2205 Move X1, X31
	2206 Move X8, [X8]
	2207 Move X0, X8
	2208 Call Type.GetTypeFromHandle, X0
	2209 Move X1, X0
	2210 Move X0, X21
	2211 Move X2, X31
	2212 Call Type.op_Equality, X0, X1
	2213 Move TEMP, X0
	2214 And TEMP, TEMP, 1
	2215 Compare TEMP, 1
	2216 JumpIfNotEqual {2410}
	2217 Move X0, X19
	2218 Move X1, X31
	2219 Call Int64.GetHashCode, X0
	2220 Move X8, 0x18F9000
	2221 Move X8, [X8+3816]
	2222 Move W20, W0
	2223 Move X8, [X8]
	2224 Move W9, [X8+224]
	2225 Compare W9, 0
	2226 JumpIfNotEqual {2229}
	2227 Move X0, X8
	2228 Call 0x1C17DFC
	2229 Move W0, W31
	2230 Move W1, W20
	2231 Move X2, X31
	2232 Call HashHelpers.Combine, X0, X1
	2233 Move W20, W0
	2234 Add X0, X19, 8
	2235 Move X1, X31
	2236 Call Int64.GetHashCode, X0
	2237 Move X0, [X23]
	2238 Move W8, [X0+309]
	2239 Move TEMP, X8
	2240 And TEMP, TEMP, 1
	2241 Compare TEMP, 1
	2242 JumpIfEqual {2244}
	2243 Call 0x1C5D684
	2244 Move X8, [X24]
	2245 Move X9, [X0+192]
	2246 Move W10, [X8+224]
	2247 Move X21, [X9+24]
	2248 Compare W10, 0
	2249 JumpIfNotEqual {2252}
	2250 Move X0, X8
	2251 Call 0x1C17DFC
	2252 Move X0, X21
	2253 Move X1, X31
	2254 Call Type.GetTypeFromHandle, X0
	2255 Move X8, 0x18F7000
	2256 Move X8, [X8+2688]
	2257 Move X21, X0
	2258 Move X1, X31
	2259 Move X8, [X8]
	2260 Move X0, X8
	2261 Call Type.GetTypeFromHandle, X0
	2262 Move X1, X0
	2263 Move X0, X21
	2264 Move X2, X31
	2265 Call Type.op_Equality, X0, X1
	2266 Move TEMP, X0
	2267 And TEMP, TEMP, 1
	2268 Compare TEMP, 1
	2269 JumpIfNotEqual {2495}
	2270 Move X24, 0x18CF000
	2271 Move X25, 0x18F9000
	2272 Move X24, [X24+2704]
	2273 Move X25, [X25+3816]
	2274 Move W21, W31
	2275 Move W20, W31
	2276 Move X0, [X23]
	2277 Move W8, [X0+309]
	2278 Move TEMP, X8
	2279 And TEMP, TEMP, 1
	2280 Compare TEMP, 1
	2281 JumpIfEqual {2283}
	2282 Call 0x1C5D684
	2283 Move X8, [X0+192]
	2284 Move X0, [X8+8]
	2285 Move W8, [X0+309]
	2286 Move TEMP, X8
	2287 And TEMP, TEMP, 1
	2288 Compare TEMP, 1
	2289 JumpIfEqual {2291}
	2290 Call 0x1C5D684
	2291 Move W8, [X0+224]
	2292 Compare W8, 0
	2293 JumpIfNotEqual {2295}
	2294 Call 0x1C17DFC
	2295 Move X0, [X23]
	2296 Move W8, [X0+309]
	2297 Move TEMP, X8
	2298 And TEMP, TEMP, 1
	2299 Compare TEMP, 1
	2300 JumpIfEqual {2302}
	2301 Call 0x1C5D684
	2302 Move X8, [X0+192]
	2303 Move X22, [X8+40]
	2304 Move X0, [X22+32]
	2305 Move W8, [X0+309]
	2306 Move TEMP, X8
	2307 And TEMP, TEMP, 1
	2308 Compare TEMP, 1
	2309 JumpIfEqual {2311}
	2310 Call 0x1C5D684
	2311 Move X8, [X0+192]
	2312 Move X0, [X8+8]
	2313 Move W8, [X0+309]
	2314 Move TEMP, X8
	2315 And TEMP, TEMP, 1
	2316 Compare TEMP, 1
	2317 JumpIfEqual {2319}
	2318 Call 0x1C5D684
	2319 Move W8, [X0+224]
	2320 Compare W8, 0
	2321 JumpIfNotEqual {2323}
	2322 Call 0x1C17DFC
	2323 Move X0, [X22+32]
	2324 Move W8, [X0+309]
	2325 Move TEMP, X8
	2326 And TEMP, TEMP, 1
	2327 Compare TEMP, 1
	2328 JumpIfEqual {2330}
	2329 Call 0x1C5D684
	2330 Move X8, [X0+192]
	2331 Move X0, [X8+8]
	2332 Move W8, [X0+309]
	2333 Move TEMP, X8
	2334 And TEMP, TEMP, 1
	2335 Compare TEMP, 1
	2336 JumpIfEqual {2338}
	2337 Call 0x1C5D684
	2338 Move X8, [X0+184]
	2339 Move W8, [X8]
	2340 NotImplemented "Instruction CMP not yet implemented."
	2341 Move X0, [X23]
	2342 Move W8, [X0+309]
	2343 Move TEMP, X8
	2344 And TEMP, TEMP, 1
	2345 Compare TEMP, 1
	2346 JumpIfEqual {2348}
	2347 Call 0x1C5D684
	2348 Move X8, [X0+192]
	2349 Move X0, [X8+8]
	2350 Move W8, [X0+309]
	2351 Move TEMP, X8
	2352 And TEMP, TEMP, 1
	2353 Compare TEMP, 1
	2354 JumpIfEqual {2356}
	2355 Call 0x1C5D684
	2356 Move W8, [X0+224]
	2357 Compare W8, 0
	2358 JumpIfNotEqual {2360}
	2359 Call 0x1C17DFC
	2360 Move X0, [X23]
	2361 Move W8, [X0+309]
	2362 Move TEMP, X8
	2363 And TEMP, TEMP, 1
	2364 Compare TEMP, 1
	2365 JumpIfEqual {2367}
	2366 Call 0x1C5D684
	2367 Move X8, [X0+192]
	2368 Move X0, X19
	2369 Move W1, W21
	2370 Move X2, [X8+64]
	2371 Call 0x2822834, X0, X1
	2372 NotImplemented "Instruction STRH not yet implemented."
	2373 Move X0, [X23]
	2374 Move W8, [X0+309]
	2375 Move TEMP, X8
	2376 And TEMP, TEMP, 1
	2377 Compare TEMP, 1
	2378 JumpIfEqual {2380}
	2379 Call 0x1C5D684
	2380 Move X8, [X0+192]
	2381 Add X1, X31, 0
	2382 Move X0, [X8+32]
	2383 Call 0x1C17E04
	2384 Compare X0, 0
	2385 JumpIfEqual {2732}
	2386 Move X8, [X0]
	2387 Move X1, [X24]
	2388 Move X8, [X8+64]
	2389 Move X9, [X1+64]
	2390 NotImplemented "Instruction CMP not yet implemented."
	2391 Call 0x1C17E08
	2392 Move V0, [X0]
	2393 Add X0, X31, 4
	2394 Move X1, X31
	2395 Move [X31+4], S0
	2396 Call Single.GetHashCode, X0
	2397 Move X8, [X25]
	2398 Move W22, W0
	2399 Move W9, [X8+224]
	2400 Compare W9, 0
	2401 JumpIfNotEqual {2404}
	2402 Move X0, X8
	2403 Call 0x1C17DFC
	2404 Move W0, W20
	2405 Move W1, W22
	2406 Move X2, X31
	2407 Call HashHelpers.Combine, X0, X1
	2408 Move W20, W0
	2409 Add W21, W21, 1
	2410 Move X0, [X23]
	2411 Move W8, [X0+309]
	2412 Move TEMP, X8
	2413 And TEMP, TEMP, 1
	2414 Compare TEMP, 1
	2415 JumpIfEqual {2417}
	2416 Call 0x1C5D684
	2417 Move X8, [X24]
	2418 Move X9, [X0+192]
	2419 Move W10, [X8+224]
	2420 Move X21, [X9+24]
	2421 Compare W10, 0
	2422 JumpIfNotEqual {2425}
	2423 Move X0, X8
	2424 Call 0x1C17DFC
	2425 Move X0, X21
	2426 Move X1, X31
	2427 Call Type.GetTypeFromHandle, X0
	2428 Move X8, 0x18F7000
	2429 Move X8, [X8+2688]
	2430 Move X21, X0
	2431 Move X1, X31
	2432 Move X8, [X8]
	2433 Move X0, X8
	2434 Call Type.GetTypeFromHandle, X0
	2435 Move X1, X0
	2436 Move X0, X21
	2437 Move X2, X31
	2438 Call Type.op_Equality, X0, X1
	2439 Move TEMP, X0
	2440 And TEMP, TEMP, 1
	2441 Compare TEMP, 1
	2442 JumpIfNotEqual {2670}
	2443 Move X0, X19
	2444 Move X1, X31
	2445 Call Single.GetHashCode, X0
	2446 Move X8, 0x18F9000
	2447 Move X8, [X8+3816]
	2448 Move W20, W0
	2449 Move X8, [X8]
	2450 Move W9, [X8+224]
	2451 Compare W9, 0
	2452 JumpIfNotEqual {2455}
	2453 Move X0, X8
	2454 Call 0x1C17DFC
	2455 Move W0, W31
	2456 Move W1, W20
	2457 Move X2, X31
	2458 Call HashHelpers.Combine, X0, X1
	2459 Move W20, W0
	2460 Add X0, X19, 4
	2461 Move X1, X31
	2462 Call Single.GetHashCode, X0
	2463 Move W1, W0
	2464 Move W0, W20
	2465 Move X2, X31
	2466 Call HashHelpers.Combine, X0, X1
	2467 Move W20, W0
	2468 Add X0, X19, 8
	2469 Move X1, X31
	2470 Call Single.GetHashCode, X0
	2471 Move W1, W0
	2472 Move W0, W20
	2473 Move X2, X31
	2474 Call HashHelpers.Combine, X0, X1
	2475 Move W20, W0
	2476 Add X0, X19, 12
	2477 Move X1, X31
	2478 Call Single.GetHashCode, X0
	2479 Move W1, W0
	2480 Move W0, W20
	2481 Move X2, X31
	2482 Call HashHelpers.Combine, X0, X1
	2483 Move W20, W0
	2484 Move W0, W20
	2485 Move X20, [X31+96]
	2486 Move X19, [X31+104]
	2487 Move X22, [X31+80]
	2488 Move X21, [X31+88]
	2489 Move X24, [X31+64]
	2490 Move X23, [X31+72]
	2491 Move X30, [X31+48]
	2492 Move X25, [X31+56]
	2493 Add X31, X31, 112
	2494 Return X0
	2495 Move X0, [X23]
	2496 Move W8, [X0+309]
	2497 Move TEMP, X8
	2498 And TEMP, TEMP, 1
	2499 Compare TEMP, 1
	2500 JumpIfEqual {2502}
	2501 Call 0x1C5D684
	2502 Move X8, [X24]
	2503 Move X9, [X0+192]
	2504 Move W10, [X8+224]
	2505 Move X21, [X9+24]
	2506 Compare W10, 0
	2507 JumpIfNotEqual {2510}
	2508 Move X0, X8
	2509 Call 0x1C17DFC
	2510 Move X0, X21
	2511 Move X1, X31
	2512 Call Type.GetTypeFromHandle, X0
	2513 Move X8, 0x18F7000
	2514 Move X8, [X8+2680]
	2515 Move X21, X0
	2516 Move X1, X31
	2517 Move X8, [X8]
	2518 Move X0, X8
	2519 Call Type.GetTypeFromHandle, X0
	2520 Move X1, X0
	2521 Move X0, X21
	2522 Move X2, X31
	2523 Call Type.op_Equality, X0, X1
	2524 Move TEMP, X0
	2525 And TEMP, TEMP, 1
	2526 Compare TEMP, 1
	2527 JumpIfNotEqual {2734}
	2528 Move X22, 0x18D2000
	2529 Move X24, 0x18F9000
	2530 Move X22, [X22+2424]
	2531 Move X24, [X24+3816]
	2532 Move W21, W31
	2533 Move W20, W31
	2534 Move X0, [X23]
	2535 Move W8, [X0+309]
	2536 Move TEMP, X8
	2537 And TEMP, TEMP, 1
	2538 Compare TEMP, 1
	2539 JumpIfEqual {2541}
	2540 Call 0x1C5D684
	2541 Move X8, [X0+192]
	2542 Move X0, [X8+8]
	2543 Move W8, [X0+309]
	2544 Move TEMP, X8
	2545 And TEMP, TEMP, 1
	2546 Compare TEMP, 1
	2547 JumpIfEqual {2549}
	2548 Call 0x1C5D684
	2549 Move W8, [X0+224]
	2550 Compare W8, 0
	2551 JumpIfNotEqual {2553}
	2552 Call 0x1C17DFC
	2553 Move X0, [X23]
	2554 Move W8, [X0+309]
	2555 Move TEMP, X8
	2556 And TEMP, TEMP, 1
	2557 Compare TEMP, 1
	2558 JumpIfEqual {2560}
	2559 Call 0x1C5D684
	2560 Move X8, [X0+192]
	2561 Move X25, [X8+40]
	2562 Move X0, [X25+32]
	2563 Move W8, [X0+309]
	2564 Move TEMP, X8
	2565 And TEMP, TEMP, 1
	2566 Compare TEMP, 1
	2567 JumpIfEqual {2569}
	2568 Call 0x1C5D684
	2569 Move X8, [X0+192]
	2570 Move X0, [X8+8]
	2571 Move W8, [X0+309]
	2572 Move TEMP, X8
	2573 And TEMP, TEMP, 1
	2574 Compare TEMP, 1
	2575 JumpIfEqual {2577}
	2576 Call 0x1C5D684
	2577 Move W8, [X0+224]
	2578 Compare W8, 0
	2579 JumpIfNotEqual {2581}
	2580 Call 0x1C17DFC
	2581 Move X0, [X25+32]
	2582 Move W8, [X0+309]
	2583 Move TEMP, X8
	2584 And TEMP, TEMP, 1
	2585 Compare TEMP, 1
	2586 JumpIfEqual {2588}
	2587 Call 0x1C5D684
	2588 Move X8, [X0+192]
	2589 Move X0, [X8+8]
	2590 Move W8, [X0+309]
	2591 Move TEMP, X8
	2592 And TEMP, TEMP, 1
	2593 Compare TEMP, 1
	2594 JumpIfEqual {2596}
	2595 Call 0x1C5D684
	2596 Move X8, [X0+184]
	2597 Move W8, [X8]
	2598 NotImplemented "Instruction CMP not yet implemented."
	2599 Move X0, [X23]
	2600 Move W8, [X0+309]
	2601 Move TEMP, X8
	2602 And TEMP, TEMP, 1
	2603 Compare TEMP, 1
	2604 JumpIfEqual {2606}
	2605 Call 0x1C5D684
	2606 Move X8, [X0+192]
	2607 Move X0, [X8+8]
	2608 Move W8, [X0+309]
	2609 Move TEMP, X8
	2610 And TEMP, TEMP, 1
	2611 Compare TEMP, 1
	2612 JumpIfEqual {2614}
	2613 Call 0x1C5D684
	2614 Move W8, [X0+224]
	2615 Compare W8, 0
	2616 JumpIfNotEqual {2618}
	2617 Call 0x1C17DFC
	2618 Move X0, [X23]
	2619 Move W8, [X0+309]
	2620 Move TEMP, X8
	2621 And TEMP, TEMP, 1
	2622 Compare TEMP, 1
	2623 JumpIfEqual {2625}
	2624 Call 0x1C5D684
	2625 Move X8, [X0+192]
	2626 Move X0, X19
	2627 Move W1, W21
	2628 Move X2, [X8+64]
	2629 Call 0x2822834, X0, X1
	2630 NotImplemented "Instruction STRH not yet implemented."
	2631 Move X0, [X23]
	2632 Move W8, [X0+309]
	2633 Move TEMP, X8
	2634 And TEMP, TEMP, 1
	2635 Compare TEMP, 1
	2636 JumpIfEqual {2638}
	2637 Call 0x1C5D684
	2638 Move X8, [X0+192]
	2639 Add X1, X31, 0
	2640 Move X0, [X8+32]
	2641 Call 0x1C17E04
	2642 Compare X0, 0
	2643 JumpIfEqual {2732}
	2644 Move X8, [X0]
	2645 Move X1, [X22]
	2646 Move X8, [X8+64]
	2647 Move X9, [X1+64]
	2648 NotImplemented "Instruction CMP not yet implemented."
	2649 Call 0x1C17E08
	2650 Move X8, X0
	2651 Move X0, [X24]
	2652 Move X8, [X8]
	2653 Move W9, [X0+224]
	2654 Subtract X10, X31, X8
	2655 And X11, X8, 0x7FFFFFFFFFFFFFFF
	2656 And X31, X10, 0x7FFFFFFFFFFFFFFF
	2657 NotImplemented "Instruction CSEL not yet implemented."
	2658 Compare W9, 0
	2659 JumpIfNotEqual {2661}
	2660 Call 0x1C17DFC
	2661 Move X8, X25
	2662 ShiftRight X8, 32
	2663 And X8, X8, 0x7FFFFFFF
	2664 Xor W1, W8, W25
	2665 Move W0, W20
	2666 Move X2, X31
	2667 Call HashHelpers.Combine, X0, X1
	2668 Move W20, W0
	2669 Add W21, W21, 1
	2670 Move X0, [X23]
	2671 Move W8, [X0+309]
	2672 Move TEMP, X8
	2673 And TEMP, TEMP, 1
	2674 Compare TEMP, 1
	2675 JumpIfEqual {2677}
	2676 Call 0x1C5D684
	2677 Move X8, [X24]
	2678 Move X9, [X0+192]
	2679 Move W10, [X8+224]
	2680 Move X21, [X9+24]
	2681 Compare W10, 0
	2682 JumpIfNotEqual {2685}
	2683 Move X0, X8
	2684 Call 0x1C17DFC
	2685 Move X0, X21
	2686 Move X1, X31
	2687 Call Type.GetTypeFromHandle, X0
	2688 Move X8, 0x18F7000
	2689 Move X8, [X8+2680]
	2690 Move X21, X0
	2691 Move X1, X31
	2692 Move X8, [X8]
	2693 Move X0, X8
	2694 Call Type.GetTypeFromHandle, X0
	2695 Move X1, X0
	2696 Move X0, X21
	2697 Move X2, X31
	2698 Call Type.op_Equality, X0, X1
	2699 Move TEMP, X0
	2700 And TEMP, TEMP, 1
	2701 Compare TEMP, 1
	2702 JumpIfNotEqual {2734}
	2703 Move X9, 0x18F9000
	2704 Move X8, [X19]
	2705 Move X9, [X9+3816]
	2706 And X10, X8, 0x7FFFFFFFFFFFFFFF
	2707 Move X0, [X9]
	2708 Subtract X9, X31, X8
	2709 And X31, X9, 0x7FFFFFFFFFFFFFFF
	2710 NotImplemented "Instruction CSEL not yet implemented."
	2711 Move W11, [X0+224]
	2712 Move X9, X8
	2713 ShiftRight X9, 32
	2714 And X9, X9, 0x7FFFFFFF
	2715 Xor W20, W9, W8
	2716 Compare W11, 0
	2717 JumpIfNotEqual {2719}
	2718 Call 0x1C17DFC
	2719 Move W0, W31
	2720 Move W1, W20
	2721 Move X2, X31
	2722 Call HashHelpers.Combine, X0, X1
	2723 Move X8, [X19+8]
	2724 Subtract X9, X31, X8
	2725 And X10, X8, 0x7FFFFFFFFFFFFFFF
	2726 And X31, X9, 0x7FFFFFFFFFFFFFFF
	2727 NotImplemented "Instruction CSEL not yet implemented."
	2728 Move X9, X8
	2729 ShiftRight X9, 32
	2730 And X9, X9, 0x7FFFFFFF
	2731 Xor W1, W9, W8
	2732 Call 0x1C17F20
	2733 Call 0x1C181E0
	2734 Move X0, 0x18CF000
	2735 Move X0, [X0+2880]
	2736 Call 0x1C17D08
	2737 Call 0x1C17F10
	2738 Move X19, X0
	2739 Move X0, 0x18F8000
	2740 Move X0, [X0+2704]
	2741 Call 0x1C17D08
	2742 Move X1, X0
	2743 Move X0, X19
	2744 Move X2, X31
	2745 Call NotSupportedException..ctor, X0, X1
	2746 Move X0, X19
	2747 Move X1, X20
	2748 Call 0x1C17DEC

Method: System.String ToString()

Disassembly:
	0x02825E40 CSINV W21, W31, W31, NE
	0x02825E44 CMP W13, W22, LSR
	0x02825E48 UBFM X11, X22, 0x30, 0x3F
	0x02825E4C UBFM X12, X23, 0x30, 0x3F
	0x02825E50 CSINV W13, W31, W31, NE
	0x02825E54 CMP W15, W28, UXTH
	0x02825E58 STURH W13, [X29 - 0x58]
	0x02825E5C CSINV W13, W31, W31, NE
	0x02825E60 CMP W12, W11
	0x02825E64 CSINV W11, W31, W31, NE
	0x02825E68 CMP W17, W20, UXTH
	0x02825E6C STURH W11, [X29 - 0x5A]
	0x02825E70 CSINV W11, W31, W31, NE
	0x02825E74 CMP W10, W20, LSR
	0x02825E78 CSINV W10, W31, W31, NE
	0x02825E7C CMP W14, W27, UXTH
	0x02825E80 UBFM X8, X20, 0x30, 0x3F
	0x02825E84 STURH W10, [X29 - 0x66]
	0x02825E88 CSINV W10, W31, W31, NE
	0x02825E8C STURB W21, [X29 - 0x50]
	0x02825E90 STURB W21, [X29 - 0x54]
	0x02825E94 STURH W13, [X29 - 0x5C]
	0x02825E98 STURH W11, [X29 - 0x68]
	0x02825E9C CMP W9, W8
	0x02825EA0 STURH W10, [X29 - 0x64]
	0x02825EA4 CSINV W8, W31, W31, NE
	0x02825EA8 STURH W8, [X29 - 0x62]
	0x02825EAC LDR X0, [X19 + 0x20]
	0x02825EB0 LDRB W8, [X0 + 0x135]
	0x02825EB4 TBNZ X8, 0x0, 0x2825EBC
	0x02825EB8 BL 0x1C5C684
	0x02825EBC LDURH W8, [X29 - 0x58]
	0x02825EC0 LDUR W9, [X29 - 0x5C]
	0x02825EC4 LDUR X10, [X29 - 0x68]
	0x02825EC8 STURB W21, [X29 - 0x28]
	0x02825ECC STURB W21, [X29 - 0x27]
	0x02825ED0 STURH W8, [X29 - 0x26]
	0x02825ED4 STUR W9, [X29 - 0x24]
	0x02825ED8 STUR X10, [X29 - 0x20]
	0x02825EDC B 0x2827900
	0x02825EE0 LDR X0, [X26]
	0x02825EE4 LDR X20, [X8 + 0x18]
	0x02825EE8 LDR W9, [X0 + 0xE0]
	0x02825EEC CBNZ W9, 0x2825EF4
	0x02825EF0 BL 0x1C16DFC
	0x02825EF4 MOV X0, X20
	0x02825EF8 MOV X1, X31
	0x02825EFC BL 0x338C698
	0x02825F00 ADRP X8, 0x18F5000
	0x02825F04 LDR X8, [X8 + 0xD78]
	0x02825F08 MOV X20, X0
	0x02825F0C MOV X1, X31
	0x02825F10 LDR X8, [X8]
	0x02825F14 MOV X0, X8
	0x02825F18 BL 0x338C698

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1BB6000
	007 Move X22, 0x18D1000
	008 Move W8, [X21+2680]
	009 Move X22, [X22+3144]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x18D1000
	017 Move X0, [X0+3144]
	018 Call 0x1C17CF4
	019 Move X0, 0x18F9000
	020 Move X0, [X0+3824]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2680], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X31
	030 Call CultureInfo.get_CurrentCulture
	031 Move X8, [X20+32]
	032 Move X21, X0
	033 Move W9, [X8+309]
	034 Move TEMP, X9
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {41}
	038 Move X0, X8
	039 Call 0x1C5D684
	040 Move X8, X0
	041 Move X8, [X8+192]
	042 Move X0, [X8+8]
	043 Move W8, [X0+309]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {49}
	048 Call 0x1C5D684
	049 Move X22, 0x18F9000
	050 Move W8, [X0+224]
	051 Move X22, [X22+3824]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, [X20+32]
	056 Move X20, [X22]
	057 Move W8, [X0+309]
	058 Move TEMP, X8
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {63}
	062 Call 0x1C5D684
	063 Move X8, [X0+192]
	064 Move X0, X19
	065 Move X1, X20
	066 Move X2, X21
	067 Move X3, [X8+80]
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X30, [X31+48]

Method: System.String ToString(System.String format, System.IFormatProvider formatProvider)

Disassembly:
	0x02825F1C MOV X1, X0
	0x02825F20 MOV X0, X20
	0x02825F24 MOV X2, X31
	0x02825F28 BL 0x3395194
	0x02825F2C LDR X8, [X23]
	0x02825F30 MOV W20, W0
	0x02825F34 LDRB W9, [X8 + 0x135]
	0x02825F38 TBNZ X9, 0x0, 0x2825F48
	0x02825F3C MOV X0, X8
	0x02825F40 BL 0x1C5C684
	0x02825F44 MOV X8, X0
	0x02825F48 LDR X8, [X8 + 0xC0]
	0x02825F4C TBZ X20, 0x0, 0x28262C8
	0x02825F50 LDR X0, [X8 + 0x8]
	0x02825F54 LDRB W8, [X0 + 0x135]
	0x02825F58 TBNZ X8, 0x0, 0x2825F60
	0x02825F5C BL 0x1C5C684
	0x02825F60 LDR W8, [X0 + 0xE0]
	0x02825F64 CBNZ W8, 0x2825F6C
	0x02825F68 BL 0x1C16DFC
	0x02825F6C LDR X0, [X23]
	0x02825F70 LDRB W8, [X0 + 0x135]
	0x02825F74 TBNZ X8, 0x0, 0x2825F7C
	0x02825F78 BL 0x1C5C684
	0x02825F7C LDR X8, [X0 + 0xC0]
	0x02825F80 LDR X19, [X8 + 0x28]
	0x02825F84 LDR X0, [X19 + 0x20]
	0x02825F88 LDRB W8, [X0 + 0x135]
	0x02825F8C TBNZ X8, 0x0, 0x2825F94
	0x02825F90 BL 0x1C5C684
	0x02825F94 LDR X8, [X0 + 0xC0]
	0x02825F98 LDR X0, [X8 + 0x8]
	0x02825F9C LDRB W8, [X0 + 0x135]
	0x02825FA0 TBNZ X8, 0x0, 0x2825FA8
	0x02825FA4 BL 0x1C5C684
	0x02825FA8 LDR W8, [X0 + 0xE0]
	0x02825FAC CBNZ W8, 0x2825FB4
	0x02825FB0 BL 0x1C16DFC
	0x02825FB4 LDR X0, [X19 + 0x20]
	0x02825FB8 LDRB W8, [X0 + 0x135]
	0x02825FBC TBNZ X8, 0x0, 0x2825FC4
	0x02825FC0 BL 0x1C5C684
	0x02825FC4 LDR X8, [X0 + 0xC0]
	0x02825FC8 LDR X0, [X8 + 0x8]
	0x02825FCC LDRB W8, [X0 + 0x135]
	0x02825FD0 TBNZ X8, 0x0, 0x2825FD8
	0x02825FD4 BL 0x1C5C684
	0x02825FD8 LDR X8, [X0 + 0xB8]
	0x02825FDC LDRSW X8, [X8]
	0x02825FE0 UBFM X2, X8, 0x3F, 0x3E
	0x02825FE4 CBZ W8, 0x2826690
	0x02825FE8 ADD X9, X2, 0xF
	0x02825FEC ADD X8, X31, 0x0
	0x02825FF0 AND X9, X9, 0xFFFFFFFF
	0x02825FF4 SUB X19, X8, X9
	0x02825FF8 ADD X31, X19, 0x0
	0x02825FFC B 0x2826694
	0x02826000 MOV X19, X31
	0x02826004 MOV X0, X19
	0x02826008 MOV W1, W31
	0x0282600C BL 0x3EB1B10
	0x02826010 MOV X20, X31
	0x02826014 LDR X0, [X23]
	0x02826018 LDRB W8, [X0 + 0x135]
	0x0282601C TBNZ X8, 0x0, 0x2826024
	0x02826020 BL 0x1C5C684
	0x02826024 LDR X8, [X0 + 0xC0]
	0x02826028 LDR X0, [X8 + 0x8]
	0x0282602C LDRB W8, [X0 + 0x135]
	0x02826030 TBNZ X8, 0x0, 0x2826038
	0x02826034 BL 0x1C5C684
	0x02826038 LDR W8, [X0 + 0xE0]
	0x0282603C CBNZ W8, 0x2826044
	0x02826040 BL 0x1C16DFC
	0x02826044 LDR X0, [X23]
	0x02826048 LDRB W8, [X0 + 0x135]
	0x0282604C TBNZ X8, 0x0, 0x2826054
	0x02826050 BL 0x1C5C684
	0x02826054 LDR X8, [X0 + 0xC0]
	0x02826058 LDR X21, [X8 + 0x28]
	0x0282605C LDR X0, [X21 + 0x20]
	0x02826060 LDRB W8, [X0 + 0x135]
	0x02826064 TBNZ X8, 0x0, 0x282606C
	0x02826068 BL 0x1C5C684
	0x0282606C LDR X8, [X0 + 0xC0]
	0x02826070 LDR X0, [X8 + 0x8]
	0x02826074 LDRB W8, [X0 + 0x135]
	0x02826078 TBNZ X8, 0x0, 0x2826080
	0x0282607C BL 0x1C5C684
	0x02826080 LDR W8, [X0 + 0xE0]
	0x02826084 CBNZ W8, 0x282608C
	0x02826088 BL 0x1C16DFC
	0x0282608C LDR X0, [X21 + 0x20]
	0x02826090 LDRB W8, [X0 + 0x135]
	0x02826094 TBNZ X8, 0x0, 0x282609C
	0x02826098 BL 0x1C5C684
	0x0282609C LDR X8, [X0 + 0xC0]
	0x028260A0 LDR X0, [X8 + 0x8]
	0x028260A4 LDRB W8, [X0 + 0x135]
	0x028260A8 TBNZ X8, 0x0, 0x28260B0
	0x028260AC BL 0x1C5C684
	0x028260B0 LDR X8, [X0 + 0xB8]
	0x028260B4 LDRSW X8, [X8]
	0x028260B8 CMP X20, X8
	0x028260BC B.GE 0x28278D8
	0x028260C0 LDR X0, [X23]
	0x028260C4 LDRB W8, [X0 + 0x135]
	0x028260C8 TBNZ X8, 0x0, 0x28260D0
	0x028260CC BL 0x1C5C684
	0x028260D0 LDR X8, [X0 + 0xC0]
	0x028260D4 LDR X0, [X8 + 0x8]
	0x028260D8 LDRB W8, [X0 + 0x135]
	0x028260DC TBNZ X8, 0x0, 0x28260E4
	0x028260E0 BL 0x1C5C684
	0x028260E4 LDR W8, [X0 + 0xE0]
	0x028260E8 CBNZ W8, 0x28260F0
	0x028260EC BL 0x1C16DFC
	0x028260F0 LDR X0, [X23]
	0x028260F4 LDRB W8, [X0 + 0x135]
	0x028260F8 TBNZ X8, 0x0, 0x2826100
	0x028260FC BL 0x1C5C684
	0x02826100 LDR X8, [X0 + 0xC0]
	0x02826104 SUB X0, X29, 0x38
	0x02826108 MOV W1, W20
	0x0282610C LDR X2, [X8 + 0x40]
	0x02826110 BL 0x2821834
	0x02826114 LDR X8, [X23]
	0x02826118 MOV W21, W0
	0x0282611C LDRB W9, [X8 + 0x135]
	0x02826120 TBNZ X9, 0x0, 0x2826130
	0x02826124 MOV X0, X8
	0x02826128 BL 0x1C5C684
	0x0282612C MOV X8, X0
	0x02826130 LDR X8, [X8 + 0xC0]
	0x02826134 SUB X0, X29, 0x48
	0x02826138 MOV W1, W20
	0x0282613C LDR X2, [X8 + 0x40]
	0x02826140 BL 0x2821834
	0x02826144 LDR X8, [X23]
	0x02826148 MOV W22, W0
	0x0282614C LDRB W9, [X8 + 0x135]
	0x02826150 TBNZ X9, 0x0, 0x2826160
	0x02826154 MOV X0, X8
	0x02826158 BL 0x1C5C684
	0x0282615C MOV X8, X0
	0x02826160 LDR X8, [X8 + 0xC0]
	0x02826164 MOV W0, W21
	0x02826168 MOV W1, W22
	0x0282616C LDR X2, [X8 + 0x48]
	0x02826170 BL 0x22BC5BC
	0x02826174 SBFM W8, W0, 0x0, 0x0
	0x02826178 STRB W8, [X19, X20, LSL]
	0x0282617C ADD X20, X20, 0x1
	0x02826180 B 0x2826014
	0x02826184 LDR X0, [X19 + 0x20]
	0x02826188 LDRB W8, [X0 + 0x135]
	0x0282618C TBNZ X8, 0x0, 0x2826194
	0x02826190 BL 0x1C5C684
	0x02826194 LDR X8, [X26]
	0x02826198 LDR X9, [X0 + 0xC0]
	0x0282619C UBFM X11, X23, 0x20, 0x3F
	0x028261A0 LDR W10, [X8 + 0xE0]
	0x028261A4 LDR X24, [X9 + 0x18]
	0x028261A8 UBFM X9, X21, 0x20, 0x3F
	0x028261AC STP X11, X9, [X29 - 0x78]
	0x028261B0 CBNZ W10, 0x28261BC
	0x028261B4 MOV X0, X8
	0x028261B8 BL 0x1C16DFC
	0x028261BC MOV X0, X24
	0x028261C0 MOV X1, X31
	0x028261C4 BL 0x338C698
	0x028261C8 ADRP X8, 0x18F4000
	0x028261CC LDR X8, [X8 + 0xDA0]
	0x028261D0 MOV X24, X0
	0x028261D4 MOV X1, X31
	0x028261D8 LDR X8, [X8]
	0x028261DC MOV X0, X8
	0x028261E0 BL 0x338C698
	0x028261E4 MOV X1, X0
	0x028261E8 MOV X0, X24
	0x028261EC MOV X2, X31
	0x028261F0 BL 0x3395194
	0x028261F4 TBNZ X0, 0x0, 0x2826260
	0x028261F8 LDR X0, [X19 + 0x20]
	0x028261FC LDRB W8, [X0 + 0x135]
	0x02826200 TBNZ X8, 0x0, 0x2826208
	0x02826204 BL 0x1C5C684
	0x02826208 LDR X8, [X26]
	0x0282620C LDR X9, [X0 + 0xC0]
	0x02826210 LDR W10, [X8 + 0xE0]
	0x02826214 LDR X24, [X9 + 0x18]
	0x02826218 CBNZ W10, 0x2826224
	0x0282621C MOV X0, X8
	0x02826220 BL 0x1C16DFC
	0x02826224 MOV X0, X24
	0x02826228 MOV X1, X31
	0x0282622C BL 0x338C698
	0x02826230 ADRP X8, 0x18F4000
	0x02826234 LDR X8, [X8 + 0xD80]
	0x02826238 MOV X24, X0
	0x0282623C MOV X1, X31
	0x02826240 LDR X8, [X8]
	0x02826244 MOV X0, X8
	0x02826248 BL 0x338C698
	0x0282624C MOV X1, X0
	0x02826250 MOV X0, X24
	0x02826254 MOV X2, X31
	0x02826258 BL 0x3395194
	0x0282625C TBZ X0, 0x0, 0x2826818
	0x02826260 LDP X8, X9, [X29 - 0x78]
	0x02826264 CMP W23, W22
	0x02826268 CSINV W22, W31, W31, NE
	0x0282626C STURB W22, [X29 - 0x50]
	0x02826270 CMP W8, W28
	0x02826274 CSINV W8, W31, W31, NE
	0x02826278 CMP W21, W20
	0x0282627C STUR W8, [X29 - 0x5C]
	0x02826280 CSINV W8, W31, W31, NE
	0x02826284 CMP W9, W27
	0x02826288 CSINV W9, W31, W31, NE
	0x0282628C STURB W22, [X29 - 0x54]
	0x02826290 STURH W22, [X29 - 0x58]
	0x02826294 STP W8, W9, [X29 - 0x68]
	0x02826298 LDR X0, [X19 + 0x20]
	0x0282629C LDRB W8, [X0 + 0x135]
	0x028262A0 TBNZ X8, 0x0, 0x28262A8
	0x028262A4 BL 0x1C5C684
	0x028262A8 LDUR W8, [X29 - 0x5C]
	0x028262AC LDUR X9, [X29 - 0x68]
	0x028262B0 STURB W22, [X29 - 0x28]
	0x028262B4 STURB W22, [X29 - 0x27]
	0x028262B8 STURH W22, [X29 - 0x26]
	0x028262BC STUR W8, [X29 - 0x24]
	0x028262C0 STUR X9, [X29 - 0x20]
	0x028262C4 B 0x2827900
	0x028262C8 LDR X0, [X26]
	0x028262CC LDR X20, [X8 + 0x18]
	0x028262D0 LDR W9, [X0 + 0xE0]
	0x028262D4 CBNZ W9, 0x28262DC
	0x028262D8 BL 0x1C16DFC
	0x028262DC MOV X0, X20
	0x028262E0 MOV X1, X31
	0x028262E4 BL 0x338C698
	0x028262E8 ADRP X8, 0x18F4000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x1BB6000
	013 Move X24, 0x18CF000
	014 Move W8, [X21+2681]
	015 Move X24, [X24+2288]
	016 Move X22, X3
	017 Move X19, X2
	018 Move X20, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x18F9000
	025 Move X0, [X0+3832]
	026 Call 0x1C17CF4
	027 Move X0, 0x18CF000
	028 Move X0, [X0+2288]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2681], W8
	032 Move X0, [X24]
	033 Call 0x1C17F10
	034 Move X1, X31
	035 Move X21, X0
	036 Call StringBuilder..ctor, X0
	037 Move X0, X19
	038 Move X1, X31
	039 Call NumberFormatInfo.GetInstance, X0
	040 Compare X0, 0
	041 JumpIfEqual {311}
	042 Compare X21, 0
	043 JumpIfEqual {311}
	044 Move X27, 0x18F9000
	045 Move X24, [X0+64]
	046 Move X27, [X27+3832]
	047 Move W1, 60
	048 Move X0, X21
	049 Move X2, X31
	050 Call StringBuilder.Append, X0, X1
	051 Move W25, W31
	052 Move X0, [X22+32]
	053 Move W8, [X0+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {59}
	058 Call 0x1C5D684
	059 Move X8, [X0+192]
	060 Move X0, [X8+8]
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X0, [X22+32]
	072 Move W8, [X0+309]
	073 Move TEMP, X8
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {78}
	077 Call 0x1C5D684
	078 Move X8, [X0+192]
	079 Move X26, [X8+40]
	080 Move X0, [X26+32]
	081 Move W8, [X0+309]
	082 Move TEMP, X8
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {87}
	086 Call 0x1C5D684
	087 Move X8, [X0+192]
	088 Move X0, [X8+8]
	089 Move W8, [X0+309]
	090 Move TEMP, X8
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {95}
	094 Call 0x1C5D684
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X0, [X26+32]
	100 Move W8, [X0+309]
	101 Move TEMP, X8
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {106}
	105 Call 0x1C5D684
	106 Move X8, [X0+192]
	107 Move X0, [X8+8]
	108 Move W8, [X0+309]
	109 Move TEMP, X8
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {114}
	113 Call 0x1C5D684
	114 Move X8, [X22+32]
	115 Move X9, [X0+184]
	116 Move W10, [X8+309]
	117 Move W26, [X9]
	118 Move TEMP, X10
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfEqual {125}
	122 Move X0, X8
	123 Call 0x1C5D684
	124 Move X8, X0
	125 Move X8, [X8+192]
	126 Move X0, [X8+8]
	127 Move W8, [X0+309]
	128 Move TEMP, X8
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfEqual {133}
	132 Call 0x1C5D684
	133 Move W8, [X0+224]
	134 Compare W8, 0
	135 JumpIfNotEqual {137}
	136 Call 0x1C17DFC
	137 Move X0, [X22+32]
	138 Subtract W26, W26, 1
	139 Move W8, [X0+309]
	140 Move TEMP, X8
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfEqual {145}
	144 Call 0x1C5D684
	145 Move X8, [X0+192]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move X2, [X8+64]
	148 Move X0, X23
	149 Move W1, W25
	150 Call 0x2822834, X0, X1
	151 NotImplemented "Instruction STRH not yet implemented."
	152 Move X0, [X22+32]
	153 Move W8, [X0+309]
	154 Move TEMP, X8
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfEqual {159}
	158 Call 0x1C5D684
	159 Move X8, [X0+192]
	160 Add X1, X31, 12
	161 Move X0, [X8+32]
	162 Call 0x1C17E04
	163 Move X8, [X0]
	164 Move X1, [X27]
	165 Move X26, X0
	166 NotImplemented "Instruction LDRH not yet implemented."
	167 Compare X9, 0
	168 JumpIfEqual {175}
	169 Move X10, [X8+176]
	170 Add X10, X10, 8
	171 NotImplemented "Instruction LDUR not yet implemented."
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Subtract X9, X9, 1
	174 Add X10, X10, 16
	175 Move X0, X26
	176 Move W2, W31
	177 Call 0x1C5D788
	178 NotImplemented "Instruction LDRSW not yet implemented."
	179 Add X8, X8, X9
	180 Add X0, X8, 312
	181 Move X8, [X0]
	182 Move X3, [X0+8]
	183 Move X0, X26
	184 Move X1, X20
	185 Move X2, X19
	186 NotImplemented "Instruction BLR not yet implemented."
	187 Move X1, X0
	188 Move X0, X21
	189 Move X2, X31
	190 Call StringBuilder.Append, X0, X1
	191 Move X0, X21
	192 Move X1, X24
	193 Move X2, X31
	194 Call StringBuilder.Append, X0, X1
	195 Move W1, 32
	196 Move X0, X21
	197 Move X2, X31
	198 Call StringBuilder.Append, X0, X1
	199 Add W25, W25, 1
	200 Move X24, [X8+40]
	201 Move X0, [X24+32]
	202 Move W8, [X0+309]
	203 Move TEMP, X8
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfEqual {208}
	207 Call 0x1C5D684
	208 Move X8, [X0+192]
	209 Move X0, [X8+8]
	210 Move W8, [X0+309]
	211 Move TEMP, X8
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfEqual {216}
	215 Call 0x1C5D684
	216 Move W8, [X0+224]
	217 Compare W8, 0
	218 JumpIfNotEqual {220}
	219 Call 0x1C17DFC
	220 Move X0, [X24+32]
	221 Move W8, [X0+309]
	222 Move TEMP, X8
	223 And TEMP, TEMP, 1
	224 Compare TEMP, 1
	225 JumpIfEqual {227}
	226 Call 0x1C5D684
	227 Move X8, [X0+192]
	228 Move X0, [X8+8]
	229 Move W8, [X0+309]
	230 Move TEMP, X8
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfEqual {235}
	234 Call 0x1C5D684
	235 Move X8, [X0+184]
	236 Move X0, [X22+32]
	237 Move W8, [X8]
	238 Move W9, [X0+309]
	239 Subtract W24, W8, 1
	240 Move TEMP, X9
	241 And TEMP, TEMP, 1
	242 Compare TEMP, 1
	243 JumpIfEqual {245}
	244 Call 0x1C5D684
	245 Move X8, [X0+192]
	246 Move X0, X23
	247 Move W1, W24
	248 Move X2, [X8+64]
	249 Call 0x2822834, X0, X1
	250 NotImplemented "Instruction STRH not yet implemented."
	251 Move X0, [X22+32]
	252 Move W8, [X0+309]
	253 Move TEMP, X8
	254 And TEMP, TEMP, 1
	255 Compare TEMP, 1
	256 JumpIfEqual {258}
	257 Call 0x1C5D684
	258 Move X8, [X0+192]
	259 Add X1, X31, 8
	260 Move X0, [X8+32]
	261 Call 0x1C17E04
	262 Move X8, [X0]
	263 Move X1, [X27]
	264 Move X22, X0
	265 NotImplemented "Instruction LDRH not yet implemented."
	266 Compare X9, 0
	267 JumpIfEqual {274}
	268 Move X10, [X8+176]
	269 Add X10, X10, 8
	270 NotImplemented "Instruction LDUR not yet implemented."
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Subtract X9, X9, 1
	273 Add X10, X10, 16
	274 Move X0, X22
	275 Move W2, W31
	276 Call 0x1C5D788
	277 NotImplemented "Instruction LDRSW not yet implemented."
	278 Add X8, X8, X9
	279 Add X0, X8, 312
	280 Move X8, [X0]
	281 Move X3, [X0+8]
	282 Move X0, X22
	283 Move X1, X20
	284 Move X2, X19
	285 NotImplemented "Instruction BLR not yet implemented."
	286 Move X1, X0
	287 Move X0, X21
	288 Move X2, X31
	289 Call StringBuilder.Append, X0, X1
	290 Move W1, 62
	291 Move X0, X21
	292 Move X2, X31
	293 Call StringBuilder.Append, X0, X1
	294 Move X8, [X21]
	295 Move X0, X21
	296 Move X9, [X8+360]
	297 Move X1, [X8+368]
	298 NotImplemented "Instruction BLR not yet implemented."
	299 Move X20, [X31+80]
	300 Move X19, [X31+88]
	301 Move X22, [X31+64]
	302 Move X21, [X31+72]
	303 Move X24, [X31+48]
	304 Move X23, [X31+56]
	305 Move X26, [X31+32]
	306 Move X25, [X31+40]
	307 Move X30, [X31+16]
	308 Move X27, [X31+24]
	309 Add X31, X31, 96
	310 Return X0
	311 Call 0x1C17F20

Method: System.Boolean op_Equality(System.Numerics.Vector`1<T> left, System.Numerics.Vector`1<T> right)

Disassembly:
	0x028262EC LDR X8, [X8 + 0xDA0]
	0x028262F0 MOV X20, X0
	0x028262F4 MOV X1, X31
	0x028262F8 LDR X8, [X8]
	0x028262FC MOV X0, X8
	0x02826300 BL 0x338C698
	0x02826304 MOV X1, X0
	0x02826308 MOV X0, X20
	0x0282630C MOV X2, X31
	0x02826310 BL 0x3395194
	0x02826314 LDR X8, [X23]
	0x02826318 MOV W20, W0
	0x0282631C LDRB W9, [X8 + 0x135]
	0x02826320 TBNZ X9, 0x0, 0x2826330
	0x02826324 MOV X0, X8
	0x02826328 BL 0x1C5C684
	0x0282632C MOV X8, X0
	0x02826330 LDR X8, [X8 + 0xC0]
	0x02826334 TBZ X20, 0x0, 0x2826570
	0x02826338 LDR X0, [X8 + 0x8]
	0x0282633C LDRB W8, [X0 + 0x135]
	0x02826340 TBNZ X8, 0x0, 0x2826348
	0x02826344 BL 0x1C5C684
	0x02826348 LDR W8, [X0 + 0xE0]
	0x0282634C CBNZ W8, 0x2826354
	0x02826350 BL 0x1C16DFC
	0x02826354 LDR X0, [X23]
	0x02826358 LDRB W8, [X0 + 0x135]
	0x0282635C TBNZ X8, 0x0, 0x2826364
	0x02826360 BL 0x1C5C684
	0x02826364 LDR X8, [X0 + 0xC0]
	0x02826368 LDR X19, [X8 + 0x28]
	0x0282636C LDR X0, [X19 + 0x20]
	0x02826370 LDRB W8, [X0 + 0x135]
	0x02826374 TBNZ X8, 0x0, 0x282637C
	0x02826378 BL 0x1C5C684
	0x0282637C LDR X8, [X0 + 0xC0]
	0x02826380 LDR X0, [X8 + 0x8]
	0x02826384 LDRB W8, [X0 + 0x135]
	0x02826388 TBNZ X8, 0x0, 0x2826390
	0x0282638C BL 0x1C5C684
	0x02826390 LDR W8, [X0 + 0xE0]
	0x02826394 CBNZ W8, 0x282639C
	0x02826398 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 NotImplemented "Instruction MRS not yet implemented."
	008 Move X8, [X22+40]
	009 Move X21, X4
	010 Move X19, X3
	011 Move X20, X2
	012 Move [X31+24], X8
	013 Move [X31+8], X0
	014 Move [X31+16], X1
	015 Move X0, [X4+32]
	016 Move W8, [X0+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {22}
	021 Call 0x1C5D684
	022 Move X8, [X0+192]
	023 Move X0, [X8+8]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, [X21+32]
	035 Move W8, [X0+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {41}
	040 Call 0x1C5D684
	041 Move X8, [X0+192]
	042 Add X0, X31, 8
	043 Move X1, X20
	044 Move X2, X19
	045 Move X3, [X8+56]
	046 Call 0x2823174, X0, X1
	047 Move X8, [X22+40]
	048 Move X9, [X31+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X20, [X31+64]
	051 Move X19, [X31+72]
	052 Move X22, [X31+48]
	053 Move X21, [X31+56]
	054 Move X30, [X31+32]
	055 And W0, W0, 1
	056 Add X31, X31, 80
	057 Return X0
	058 Call 0x3EB2B20

Method: System.Boolean op_Inequality(System.Numerics.Vector`1<T> left, System.Numerics.Vector`1<T> right)

Disassembly:
	0x0282639C LDR X0, [X19 + 0x20]
	0x028263A0 LDRB W8, [X0 + 0x135]
	0x028263A4 TBNZ X8, 0x0, 0x28263AC
	0x028263A8 BL 0x1C5C684
	0x028263AC LDR X8, [X0 + 0xC0]
	0x028263B0 LDR X0, [X8 + 0x8]
	0x028263B4 LDRB W8, [X0 + 0x135]
	0x028263B8 TBNZ X8, 0x0, 0x28263C0
	0x028263BC BL 0x1C5C684
	0x028263C0 LDR X8, [X0 + 0xB8]
	0x028263C4 LDRSW X8, [X8]
	0x028263C8 UBFM X2, X8, 0x3E, 0x3D
	0x028263CC CBZ W8, 0x2826A58
	0x028263D0 ADD X9, X2, 0xF
	0x028263D4 ADD X8, X31, 0x0
	0x028263D8 AND X9, X9, 0xFFFFFFFF
	0x028263DC SUB X19, X8, X9
	0x028263E0 ADD X31, X19, 0x0
	0x028263E4 B 0x2826A5C
	0x028263E8 MOV X19, X31
	0x028263EC MOV X0, X19
	0x028263F0 MOV W1, W31
	0x028263F4 BL 0x3EB1B10
	0x028263F8 MOV X20, X31
	0x028263FC MOV X24, X19
	0x02826400 LDR X0, [X23]
	0x02826404 LDRB W8, [X0 + 0x135]
	0x02826408 TBNZ X8, 0x0, 0x2826410
	0x0282640C BL 0x1C5C684
	0x02826410 LDR X8, [X0 + 0xC0]
	0x02826414 LDR X0, [X8 + 0x8]
	0x02826418 LDRB W8, [X0 + 0x135]
	0x0282641C TBNZ X8, 0x0, 0x2826424
	0x02826420 BL 0x1C5C684
	0x02826424 LDR W8, [X0 + 0xE0]
	0x02826428 CBNZ W8, 0x2826430
	0x0282642C BL 0x1C16DFC
	0x02826430 LDR X0, [X23]
	0x02826434 LDRB W8, [X0 + 0x135]
	0x02826438 TBNZ X8, 0x0, 0x2826440
	0x0282643C BL 0x1C5C684
	0x02826440 LDR X8, [X0 + 0xC0]
	0x02826444 LDR X21, [X8 + 0x28]
	0x02826448 LDR X0, [X21 + 0x20]
	0x0282644C LDRB W8, [X0 + 0x135]
	0x02826450 TBNZ X8, 0x0, 0x2826458
	0x02826454 BL 0x1C5C684
	0x02826458 LDR X8, [X0 + 0xC0]
	0x0282645C LDR X0, [X8 + 0x8]
	0x02826460 LDRB W8, [X0 + 0x135]
	0x02826464 TBNZ X8, 0x0, 0x282646C
	0x02826468 BL 0x1C5C684
	0x0282646C LDR W8, [X0 + 0xE0]
	0x02826470 CBNZ W8, 0x2826478
	0x02826474 BL 0x1C16DFC
	0x02826478 LDR X0, [X21 + 0x20]
	0x0282647C LDRB W8, [X0 + 0x135]
	0x02826480 TBNZ X8, 0x0, 0x2826488
	0x02826484 BL 0x1C5C684
	0x02826488 LDR X8, [X0 + 0xC0]
	0x0282648C LDR X0, [X8 + 0x8]
	0x02826490 LDRB W8, [X0 + 0x135]
	0x02826494 TBNZ X8, 0x0, 0x282649C
	0x02826498 BL 0x1C5C684
	0x0282649C LDR X8, [X0 + 0xB8]
	0x028264A0 LDRSW X8, [X8]
	0x028264A4 CMP X20, X8
	0x028264A8 B.GE 0x28278D8
	0x028264AC LDR X0, [X23]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X24+40]
	011 Move X23, X4
	012 Move X19, X3
	013 Move X20, X2
	014 Move [X31+24], X8
	015 Move X8, [X4+32]
	016 Move X21, X1
	017 Move X22, X0
	018 Move W9, [X8+309]
	019 Move TEMP, X9
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {26}
	023 Move X0, X8
	024 Call 0x1C5D684
	025 Move X8, X0
	026 Move X8, [X8+192]
	027 Move X0, [X8+8]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, [X23+32]
	039 Move W8, [X0+309]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {45}
	044 Call 0x1C5D684
	045 Move X8, [X0+192]
	046 Move X23, [X8+88]
	047 Move [X31+8], X22
	048 Move [X31+16], X21
	049 Move X0, [X23+32]
	050 Move W8, [X0+309]
	051 Move TEMP, X8
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {56}
	055 Call 0x1C5D684
	056 Move X8, [X0+192]
	057 Move X0, [X8+8]
	058 Move W8, [X0+309]
	059 Move TEMP, X8
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {64}
	063 Call 0x1C5D684
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, [X23+32]
	069 Move W8, [X0+309]
	070 Move TEMP, X8
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {75}
	074 Call 0x1C5D684
	075 Move X8, [X0+192]
	076 Add X0, X31, 8
	077 Move X1, X20
	078 Move X2, X19
	079 Move X3, [X8+56]
	080 Call 0x2823174, X0, X1
	081 Move X8, [X24+40]
	082 Move X9, [X31+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X20, [X31+80]
	085 Move X19, [X31+88]
	086 Move X22, [X31+64]
	087 Move X21, [X31+72]
	088 Move X24, [X31+48]
	089 Move X23, [X31+56]
	090 Move X30, [X31+32]
	091 Xor W8, W0, 1
	092 And W0, W8, 1
	093 Add X31, X31, 96
	094 Return X0
	095 Call 0x3EB2B20

Method: System.Numerics.Vector`1<System.UInt64> op_Explicit(System.Numerics.Vector`1<T> value)

Disassembly:
	0x028264B0 LDRB W8, [X0 + 0x135]
	0x028264B4 TBNZ X8, 0x0, 0x28264BC
	0x028264B8 BL 0x1C5C684
	0x028264BC LDR X8, [X0 + 0xC0]
	0x028264C0 LDR X0, [X8 + 0x8]
	0x028264C4 LDRB W8, [X0 + 0x135]
	0x028264C8 TBNZ X8, 0x0, 0x28264D0
	0x028264CC BL 0x1C5C684
	0x028264D0 LDR W8, [X0 + 0xE0]
	0x028264D4 CBNZ W8, 0x28264DC
	0x028264D8 BL 0x1C16DFC
	0x028264DC LDR X0, [X23]
	0x028264E0 LDRB W8, [X0 + 0x135]
	0x028264E4 TBNZ X8, 0x0, 0x28264EC
	0x028264E8 BL 0x1C5C684
	0x028264EC LDR X8, [X0 + 0xC0]
	0x028264F0 SUB X0, X29, 0x38

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1BB5000
	006 Move W8, [X21+2682]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x18F8000
	014 Move X0, [X0+3840]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2682], W8
	018 Move X0, X20
	019 Move X1, X19
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Move X21, [X31+40]
	024 Return X0

Method: System.Numerics.Vector`1<T> Equals(System.Numerics.Vector`1<T> left, System.Numerics.Vector`1<T> right)

Disassembly:
	0x028264F4 MOV W1, W20
	0x028264F8 LDR X2, [X8 + 0x40]
	0x028264FC BL 0x2821834
	0x02826500 LDR X8, [X23]
	0x02826504 MOV W21, W0
	0x02826508 LDRB W9, [X8 + 0x135]
	0x0282650C TBNZ X9, 0x0, 0x282651C
	0x02826510 MOV X0, X8
	0x02826514 BL 0x1C5C684
	0x02826518 MOV X8, X0
	0x0282651C LDR X8, [X8 + 0xC0]
	0x02826520 SUB X0, X29, 0x48
	0x02826524 MOV W1, W20
	0x02826528 LDR X2, [X8 + 0x40]
	0x0282652C BL 0x2821834
	0x02826530 LDR X8, [X23]
	0x02826534 MOV W22, W0
	0x02826538 LDRB W9, [X8 + 0x135]
	0x0282653C TBNZ X9, 0x0, 0x282654C
	0x02826540 MOV X0, X8
	0x02826544 BL 0x1C5C684
	0x02826548 MOV X8, X0
	0x0282654C LDR X8, [X8 + 0xC0]
	0x02826550 MOV W0, W21
	0x02826554 MOV W1, W22
	0x02826558 LDR X2, [X8 + 0x48]
	0x0282655C BL 0x22BC5BC
	0x02826560 SBFM W8, W0, 0x0, 0x0
	0x02826564 STRH W8, [X24], #0x2
	0x02826568 ADD X20, X20, 0x1
	0x0282656C B 0x2826400
	0x02826570 LDR X0, [X26]
	0x02826574 LDR X20, [X8 + 0x18]
	0x02826578 LDR W9, [X0 + 0xE0]
	0x0282657C CBNZ W9, 0x2826584
	0x02826580 BL 0x1C16DFC
	0x02826584 MOV X0, X20
	0x02826588 MOV X1, X31
	0x0282658C BL 0x338C698
	0x02826590 ADRP X8, 0x18F4000
	0x02826594 LDR X8, [X8 + 0xD80]
	0x02826598 MOV X20, X0
	0x0282659C MOV X1, X31
	0x028265A0 LDR X8, [X8]
	0x028265A4 MOV X0, X8
	0x028265A8 BL 0x338C698
	0x028265AC MOV X1, X0
	0x028265B0 MOV X0, X20
	0x028265B4 MOV X2, X31
	0x028265B8 BL 0x3395194
	0x028265BC LDR X8, [X23]
	0x028265C0 MOV W20, W0
	0x028265C4 LDRB W9, [X8 + 0x135]
	0x028265C8 TBNZ X9, 0x0, 0x28265D8
	0x028265CC MOV X0, X8
	0x028265D0 BL 0x1C5C684
	0x028265D4 MOV X8, X0
	0x028265D8 LDR X8, [X8 + 0xC0]
	0x028265DC TBZ X20, 0x0, 0x2826938
	0x028265E0 LDR X0, [X8 + 0x8]
	0x028265E4 LDRB W8, [X0 + 0x135]
	0x028265E8 TBNZ X8, 0x0, 0x28265F0
	0x028265EC BL 0x1C5C684
	0x028265F0 LDR W8, [X0 + 0xE0]
	0x028265F4 CBNZ W8, 0x28265FC
	0x028265F8 BL 0x1C16DFC
	0x028265FC LDR X0, [X23]
	0x02826600 LDRB W8, [X0 + 0x135]
	0x02826604 TBNZ X8, 0x0, 0x282660C
	0x02826608 BL 0x1C5C684
	0x0282660C LDR X8, [X0 + 0xC0]
	0x02826610 LDR X19, [X8 + 0x28]
	0x02826614 LDR X0, [X19 + 0x20]
	0x02826618 LDRB W8, [X0 + 0x135]
	0x0282661C TBNZ X8, 0x0, 0x2826624
	0x02826620 BL 0x1C5C684
	0x02826624 LDR X8, [X0 + 0xC0]
	0x02826628 LDR X0, [X8 + 0x8]
	0x0282662C LDRB W8, [X0 + 0x135]
	0x02826630 TBNZ X8, 0x0, 0x2826638
	0x02826634 BL 0x1C5C684
	0x02826638 LDR W8, [X0 + 0xE0]
	0x0282663C CBNZ W8, 0x2826644
	0x02826640 BL 0x1C16DFC
	0x02826644 LDR X0, [X19 + 0x20]
	0x02826648 LDRB W8, [X0 + 0x135]
	0x0282664C TBNZ X8, 0x0, 0x2826654
	0x02826650 BL 0x1C5C684
	0x02826654 LDR X8, [X0 + 0xC0]
	0x02826658 LDR X0, [X8 + 0x8]
	0x0282665C LDRB W8, [X0 + 0x135]
	0x02826660 TBNZ X8, 0x0, 0x2826668
	0x02826664 BL 0x1C5C684
	0x02826668 LDR X8, [X0 + 0xB8]
	0x0282666C LDRSW X8, [X8]
	0x02826670 UBFM X2, X8, 0x3E, 0x3D
	0x02826674 CBZ W8, 0x2826D00
	0x02826678 ADD X9, X2, 0xF
	0x0282667C ADD X8, X31, 0x0
	0x02826680 AND X9, X9, 0xFFFFFFFF
	0x02826684 SUB X19, X8, X9
	0x02826688 ADD X31, X19, 0x0
	0x0282668C B 0x2826D04
	0x02826690 MOV X19, X31
	0x02826694 MOV X0, X19
	0x02826698 MOV W1, W31
	0x0282669C BL 0x3EB1B10
	0x028266A0 MOV X20, X31
	0x028266A4 MOV X24, X19
	0x028266A8 LDR X0, [X23]
	0x028266AC LDRB W8, [X0 + 0x135]
	0x028266B0 TBNZ X8, 0x0, 0x28266B8
	0x028266B4 BL 0x1C5C684
	0x028266B8 LDR X8, [X0 + 0xC0]
	0x028266BC LDR X0, [X8 + 0x8]
	0x028266C0 LDRB W8, [X0 + 0x135]
	0x028266C4 TBNZ X8, 0x0, 0x28266CC
	0x028266C8 BL 0x1C5C684
	0x028266CC LDR W8, [X0 + 0xE0]
	0x028266D0 CBNZ W8, 0x28266D8
	0x028266D4 BL 0x1C16DFC
	0x028266D8 LDR X0, [X23]
	0x028266DC LDRB W8, [X0 + 0x135]
	0x028266E0 TBNZ X8, 0x0, 0x28266E8
	0x028266E4 BL 0x1C5C684
	0x028266E8 LDR X8, [X0 + 0xC0]
	0x028266EC LDR X21, [X8 + 0x28]
	0x028266F0 LDR X0, [X21 + 0x20]
	0x028266F4 LDRB W8, [X0 + 0x135]
	0x028266F8 TBNZ X8, 0x0, 0x2826700
	0x028266FC BL 0x1C5C684
	0x02826700 LDR X8, [X0 + 0xC0]
	0x02826704 LDR X0, [X8 + 0x8]
	0x02826708 LDRB W8, [X0 + 0x135]
	0x0282670C TBNZ X8, 0x0, 0x2826714
	0x02826710 BL 0x1C5C684
	0x02826714 LDR W8, [X0 + 0xE0]
	0x02826718 CBNZ W8, 0x2826720
	0x0282671C BL 0x1C16DFC
	0x02826720 LDR X0, [X21 + 0x20]
	0x02826724 LDRB W8, [X0 + 0x135]
	0x02826728 TBNZ X8, 0x0, 0x2826730
	0x0282672C BL 0x1C5C684
	0x02826730 LDR X8, [X0 + 0xC0]
	0x02826734 LDR X0, [X8 + 0x8]
	0x02826738 LDRB W8, [X0 + 0x135]
	0x0282673C TBNZ X8, 0x0, 0x2826744
	0x02826740 BL 0x1C5C684
	0x02826744 LDR X8, [X0 + 0xB8]
	0x02826748 LDRSW X8, [X8]
	0x0282674C CMP X20, X8
	0x02826750 B.GE 0x28278D8
	0x02826754 LDR X0, [X23]
	0x02826758 LDRB W8, [X0 + 0x135]
	0x0282675C TBNZ X8, 0x0, 0x2826764
	0x02826760 BL 0x1C5C684
	0x02826764 LDR X8, [X0 + 0xC0]
	0x02826768 LDR X0, [X8 + 0x8]
	0x0282676C LDRB W8, [X0 + 0x135]
	0x02826770 TBNZ X8, 0x0, 0x2826778
	0x02826774 BL 0x1C5C684
	0x02826778 LDR W8, [X0 + 0xE0]
	0x0282677C CBNZ W8, 0x2826784
	0x02826780 BL 0x1C16DFC
	0x02826784 LDR X0, [X23]
	0x02826788 LDRB W8, [X0 + 0x135]
	0x0282678C TBNZ X8, 0x0, 0x2826794
	0x02826790 BL 0x1C5C684
	0x02826794 LDR X8, [X0 + 0xC0]
	0x02826798 SUB X0, X29, 0x38
	0x0282679C MOV W1, W20
	0x028267A0 LDR X2, [X8 + 0x40]
	0x028267A4 BL 0x2821834
	0x028267A8 LDR X8, [X23]
	0x028267AC MOV W21, W0
	0x028267B0 LDRB W9, [X8 + 0x135]
	0x028267B4 TBNZ X9, 0x0, 0x28267C4
	0x028267B8 MOV X0, X8
	0x028267BC BL 0x1C5C684
	0x028267C0 MOV X8, X0
	0x028267C4 LDR X8, [X8 + 0xC0]
	0x028267C8 SUB X0, X29, 0x48
	0x028267CC MOV W1, W20
	0x028267D0 LDR X2, [X8 + 0x40]
	0x028267D4 BL 0x2821834
	0x028267D8 LDR X8, [X23]
	0x028267DC MOV W22, W0
	0x028267E0 LDRB W9, [X8 + 0x135]
	0x028267E4 TBNZ X9, 0x0, 0x28267F4
	0x028267E8 MOV X0, X8
	0x028267EC BL 0x1C5C684
	0x028267F0 MOV X8, X0
	0x028267F4 LDR X8, [X8 + 0xC0]
	0x028267F8 MOV W0, W21
	0x028267FC MOV W1, W22
	0x02826800 LDR X2, [X8 + 0x48]
	0x02826804 BL 0x22BC5BC
	0x02826808 SBFM W8, W0, 0x0, 0x0
	0x0282680C STRH W8, [X24], #0x2
	0x02826810 ADD X20, X20, 0x1
	0x02826814 B 0x28266A8
	0x02826818 LDR X0, [X19 + 0x20]
	0x0282681C LDRB W8, [X0 + 0x135]
	0x02826820 TBNZ X8, 0x0, 0x2826828
	0x02826824 BL 0x1C5C684
	0x02826828 LDR X8, [X26]
	0x0282682C LDR X9, [X0 + 0xC0]
	0x02826830 LDR W10, [X8 + 0xE0]
	0x02826834 LDR X24, [X9 + 0x18]
	0x02826838 CBNZ W10, 0x2826844
	0x0282683C MOV X0, X8
	0x02826840 BL 0x1C16DFC
	0x02826844 MOV X0, X24
	0x02826848 MOV X1, X31
	0x0282684C BL 0x338C698
	0x02826850 ADRP X8, 0x18F4000
	0x02826854 LDR X8, [X8 + 0xDA8]
	0x02826858 MOV X24, X0
	0x0282685C MOV X1, X31
	0x02826860 LDR X8, [X8]
	0x02826864 MOV X0, X8
	0x02826868 BL 0x338C698
	0x0282686C MOV X1, X0
	0x02826870 MOV X0, X24
	0x02826874 MOV X2, X31
	0x02826878 BL 0x3395194
	0x0282687C TBNZ X0, 0x0, 0x28268E8
	0x02826880 LDR X0, [X19 + 0x20]
	0x02826884 LDRB W8, [X0 + 0x135]
	0x02826888 TBNZ X8, 0x0, 0x2826890
	0x0282688C BL 0x1C5C684
	0x02826890 LDR X8, [X26]
	0x02826894 LDR X9, [X0 + 0xC0]
	0x02826898 LDR W10, [X8 + 0xE0]
	0x0282689C LDR X24, [X9 + 0x18]
	0x028268A0 CBNZ W10, 0x28268AC
	0x028268A4 MOV X0, X8
	0x028268A8 BL 0x1C16DFC
	0x028268AC MOV X0, X24
	0x028268B0 MOV X1, X31
	0x028268B4 BL 0x338C698
	0x028268B8 ADRP X8, 0x18F4000
	0x028268BC LDR X8, [X8 + 0xD88]
	0x028268C0 MOV X24, X0
	0x028268C4 MOV X1, X31
	0x028268C8 LDR X8, [X8]
	0x028268CC MOV X0, X8
	0x028268D0 BL 0x338C698
	0x028268D4 MOV X1, X0
	0x028268D8 MOV X0, X24
	0x028268DC MOV X2, X31
	0x028268E0 BL 0x3395194
	0x028268E4 TBZ X0, 0x0, 0x2826E88
	0x028268E8 CMP X23, X22
	0x028268EC CSINV W22, W31, W31, NE
	0x028268F0 CMP X21, X20
	0x028268F4 CSINV X8, X31, X31, NE
	0x028268F8 STURB W22, [X29 - 0x50]
	0x028268FC STURB W22, [X29 - 0x54]
	0x02826900 STURH W22, [X29 - 0x58]
	0x02826904 STUR W22, [X29 - 0x5C]
	0x02826908 STUR X8, [X29 - 0x68]
	0x0282690C LDR X0, [X19 + 0x20]
	0x02826910 LDRB W8, [X0 + 0x135]
	0x02826914 TBNZ X8, 0x0, 0x282691C
	0x02826918 BL 0x1C5C684
	0x0282691C LDUR X8, [X29 - 0x68]
	0x02826920 STURB W22, [X29 - 0x28]
	0x02826924 STURB W22, [X29 - 0x27]
	0x02826928 STURH W22, [X29 - 0x26]
	0x0282692C STUR W22, [X29 - 0x24]
	0x02826930 STUR X8, [X29 - 0x20]
	0x02826934 B 0x2827900
	0x02826938 LDR X0, [X26]
	0x0282693C LDR X20, [X8 + 0x18]
	0x02826940 LDR W9, [X0 + 0xE0]
	0x02826944 CBNZ W9, 0x282694C
	0x02826948 BL 0x1C16DFC
	0x0282694C MOV X0, X20
	0x02826950 MOV X1, X31
	0x02826954 BL 0x338C698
	0x02826958 ADRP X8, 0x18F4000
	0x0282695C LDR X8, [X8 + 0xDA8]
	0x02826960 MOV X20, X0
	0x02826964 MOV X1, X31
	0x02826968 LDR X8, [X8]
	0x0282696C MOV X0, X8
	0x02826970 BL 0x338C698
	0x02826974 MOV X1, X0
	0x02826978 MOV X0, X20
	0x0282697C MOV X2, X31
	0x02826980 BL 0x3395194
	0x02826984 LDR X8, [X23]
	0x02826988 MOV W20, W0
	0x0282698C LDRB W9, [X8 + 0x135]
	0x02826990 TBNZ X9, 0x0, 0x28269A0
	0x02826994 MOV X0, X8
	0x02826998 BL 0x1C5C684
	0x0282699C MOV X8, X0
	0x028269A0 LDR X8, [X8 + 0xC0]
	0x028269A4 TBZ X20, 0x0, 0x2826BE0
	0x028269A8 LDR X0, [X8 + 0x8]
	0x028269AC LDRB W8, [X0 + 0x135]
	0x028269B0 TBNZ X8, 0x0, 0x28269B8
	0x028269B4 BL 0x1C5C684
	0x028269B8 LDR W8, [X0 + 0xE0]
	0x028269BC CBNZ W8, 0x28269C4
	0x028269C0 BL 0x1C16DFC
	0x028269C4 LDR X0, [X23]
	0x028269C8 LDRB W8, [X0 + 0x135]
	0x028269CC TBNZ X8, 0x0, 0x28269D4
	0x028269D0 BL 0x1C5C684
	0x028269D4 LDR X8, [X0 + 0xC0]
	0x028269D8 LDR X19, [X8 + 0x28]
	0x028269DC LDR X0, [X19 + 0x20]
	0x028269E0 LDRB W8, [X0 + 0x135]
	0x028269E4 TBNZ X8, 0x0, 0x28269EC
	0x028269E8 BL 0x1C5C684
	0x028269EC LDR X8, [X0 + 0xC0]
	0x028269F0 LDR X0, [X8 + 0x8]
	0x028269F4 LDRB W8, [X0 + 0x135]
	0x028269F8 TBNZ X8, 0x0, 0x2826A00
	0x028269FC BL 0x1C5C684
	0x02826A00 LDR W8, [X0 + 0xE0]
	0x02826A04 CBNZ W8, 0x2826A0C
	0x02826A08 BL 0x1C16DFC
	0x02826A0C LDR X0, [X19 + 0x20]
	0x02826A10 LDRB W8, [X0 + 0x135]
	0x02826A14 TBNZ X8, 0x0, 0x2826A1C
	0x02826A18 BL 0x1C5C684
	0x02826A1C LDR X8, [X0 + 0xC0]
	0x02826A20 LDR X0, [X8 + 0x8]
	0x02826A24 LDRB W8, [X0 + 0x135]
	0x02826A28 TBNZ X8, 0x0, 0x2826A30
	0x02826A2C BL 0x1C5C684
	0x02826A30 LDR X8, [X0 + 0xB8]
	0x02826A34 LDRSW X8, [X8]
	0x02826A38 UBFM X2, X8, 0x3D, 0x3C
	0x02826A3C CBZ W8, 0x28270AC
	0x02826A40 ADD X9, X2, 0xF
	0x02826A44 ADD X8, X31, 0x0
	0x02826A48 AND X9, X9, 0xFFFFFFFF
	0x02826A4C SUB X19, X8, X9
	0x02826A50 ADD X31, X19, 0x0
	0x02826A54 B 0x28270B0
	0x02826A58 MOV X19, X31
	0x02826A5C MOV X0, X19
	0x02826A60 MOV W1, W31
	0x02826A64 BL 0x3EB1B10
	0x02826A68 MOV X20, X31
	0x02826A6C MOV X24, X19
	0x02826A70 LDR X0, [X23]
	0x02826A74 LDRB W8, [X0 + 0x135]
	0x02826A78 TBNZ X8, 0x0, 0x2826A80
	0x02826A7C BL 0x1C5C684
	0x02826A80 LDR X8, [X0 + 0xC0]
	0x02826A84 LDR X0, [X8 + 0x8]
	0x02826A88 LDRB W8, [X0 + 0x135]
	0x02826A8C TBNZ X8, 0x0, 0x2826A94
	0x02826A90 BL 0x1C5C684
	0x02826A94 LDR W8, [X0 + 0xE0]
	0x02826A98 CBNZ W8, 0x2826AA0
	0x02826A9C BL 0x1C16DFC
	0x02826AA0 LDR X0, [X23]
	0x02826AA4 LDRB W8, [X0 + 0x135]
	0x02826AA8 TBNZ X8, 0x0, 0x2826AB0
	0x02826AAC BL 0x1C5C684
	0x02826AB0 LDR X8, [X0 + 0xC0]
	0x02826AB4 LDR X21, [X8 + 0x28]
	0x02826AB8 LDR X0, [X21 + 0x20]
	0x02826ABC LDRB W8, [X0 + 0x135]
	0x02826AC0 TBNZ X8, 0x0, 0x2826AC8
	0x02826AC4 BL 0x1C5C684
	0x02826AC8 LDR X8, [X0 + 0xC0]
	0x02826ACC LDR X0, [X8 + 0x8]
	0x02826AD0 LDRB W8, [X0 + 0x135]
	0x02826AD4 TBNZ X8, 0x0, 0x2826ADC
	0x02826AD8 BL 0x1C5C684
	0x02826ADC LDR W8, [X0 + 0xE0]
	0x02826AE0 CBNZ W8, 0x2826AE8
	0x02826AE4 BL 0x1C16DFC
	0x02826AE8 LDR X0, [X21 + 0x20]
	0x02826AEC LDRB W8, [X0 + 0x135]
	0x02826AF0 TBNZ X8, 0x0, 0x2826AF8
	0x02826AF4 BL 0x1C5C684
	0x02826AF8 LDR X8, [X0 + 0xC0]
	0x02826AFC LDR X0, [X8 + 0x8]
	0x02826B00 LDRB W8, [X0 + 0x135]
	0x02826B04 TBNZ X8, 0x0, 0x2826B0C
	0x02826B08 BL 0x1C5C684
	0x02826B0C LDR X8, [X0 + 0xB8]
	0x02826B10 LDRSW X8, [X8]
	0x02826B14 CMP X20, X8
	0x02826B18 B.GE 0x28278D8
	0x02826B1C LDR X0, [X23]
	0x02826B20 LDRB W8, [X0 + 0x135]
	0x02826B24 TBNZ X8, 0x0, 0x2826B2C
	0x02826B28 BL 0x1C5C684
	0x02826B2C LDR X8, [X0 + 0xC0]
	0x02826B30 LDR X0, [X8 + 0x8]
	0x02826B34 LDRB W8, [X0 + 0x135]
	0x02826B38 TBNZ X8, 0x0, 0x2826B40
	0x02826B3C BL 0x1C5C684
	0x02826B40 LDR W8, [X0 + 0xE0]
	0x02826B44 CBNZ W8, 0x2826B4C
	0x02826B48 BL 0x1C16DFC
	0x02826B4C LDR X0, [X23]
	0x02826B50 LDRB W8, [X0 + 0x135]
	0x02826B54 TBNZ X8, 0x0, 0x2826B5C
	0x02826B58 BL 0x1C5C684
	0x02826B5C LDR X8, [X0 + 0xC0]
	0x02826B60 SUB X0, X29, 0x38
	0x02826B64 MOV W1, W20
	0x02826B68 LDR X2, [X8 + 0x40]
	0x02826B6C BL 0x2821834
	0x02826B70 LDR X8, [X23]
	0x02826B74 MOV W21, W0
	0x02826B78 LDRB W9, [X8 + 0x135]
	0x02826B7C TBNZ X9, 0x0, 0x2826B8C
	0x02826B80 MOV X0, X8
	0x02826B84 BL 0x1C5C684
	0x02826B88 MOV X8, X0
	0x02826B8C LDR X8, [X8 + 0xC0]
	0x02826B90 SUB X0, X29, 0x48
	0x02826B94 MOV W1, W20
	0x02826B98 LDR X2, [X8 + 0x40]
	0x02826B9C BL 0x2821834
	0x02826BA0 LDR X8, [X23]
	0x02826BA4 MOV W22, W0
	0x02826BA8 LDRB W9, [X8 + 0x135]
	0x02826BAC TBNZ X9, 0x0, 0x2826BBC
	0x02826BB0 MOV X0, X8
	0x02826BB4 BL 0x1C5C684
	0x02826BB8 MOV X8, X0
	0x02826BBC LDR X8, [X8 + 0xC0]
	0x02826BC0 MOV W0, W21
	0x02826BC4 MOV W1, W22
	0x02826BC8 LDR X2, [X8 + 0x48]
	0x02826BCC BL 0x22BC5BC
	0x02826BD0 SBFM W8, W0, 0x0, 0x0
	0x02826BD4 STR W8, [X24], #0x4
	0x02826BD8 ADD X20, X20, 0x1
	0x02826BDC B 0x2826A70
	0x02826BE0 LDR X0, [X26]
	0x02826BE4 LDR X20, [X8 + 0x18]
	0x02826BE8 LDR W9, [X0 + 0xE0]
	0x02826BEC CBNZ W9, 0x2826BF4
	0x02826BF0 BL 0x1C16DFC
	0x02826BF4 MOV X0, X20
	0x02826BF8 MOV X1, X31
	0x02826BFC BL 0x338C698
	0x02826C00 ADRP X8, 0x18F4000
	0x02826C04 LDR X8, [X8 + 0xD88]
	0x02826C08 MOV X20, X0
	0x02826C0C MOV X1, X31
	0x02826C10 LDR X8, [X8]
	0x02826C14 MOV X0, X8
	0x02826C18 BL 0x338C698
	0x02826C1C MOV X1, X0
	0x02826C20 MOV X0, X20
	0x02826C24 MOV X2, X31
	0x02826C28 BL 0x3395194
	0x02826C2C LDR X8, [X23]
	0x02826C30 MOV W20, W0
	0x02826C34 LDRB W9, [X8 + 0x135]
	0x02826C38 TBNZ X9, 0x0, 0x2826C48
	0x02826C3C MOV X0, X8
	0x02826C40 BL 0x1C5C684
	0x02826C44 MOV X8, X0
	0x02826C48 LDR X8, [X8 + 0xC0]
	0x02826C4C TBZ X20, 0x0, 0x2826F8C
	0x02826C50 LDR X0, [X8 + 0x8]
	0x02826C54 LDRB W8, [X0 + 0x135]
	0x02826C58 TBNZ X8, 0x0, 0x2826C60
	0x02826C5C BL 0x1C5C684
	0x02826C60 LDR W8, [X0 + 0xE0]
	0x02826C64 CBNZ W8, 0x2826C6C
	0x02826C68 BL 0x1C16DFC
	0x02826C6C LDR X0, [X23]
	0x02826C70 LDRB W8, [X0 + 0x135]
	0x02826C74 TBNZ X8, 0x0, 0x2826C7C
	0x02826C78 BL 0x1C5C684
	0x02826C7C LDR X8, [X0 + 0xC0]
	0x02826C80 LDR X19, [X8 + 0x28]
	0x02826C84 LDR X0, [X19 + 0x20]
	0x02826C88 LDRB W8, [X0 + 0x135]
	0x02826C8C TBNZ X8, 0x0, 0x2826C94
	0x02826C90 BL 0x1C5C684
	0x02826C94 LDR X8, [X0 + 0xC0]
	0x02826C98 LDR X0, [X8 + 0x8]
	0x02826C9C LDRB W8, [X0 + 0x135]
	0x02826CA0 TBNZ X8, 0x0, 0x2826CA8
	0x02826CA4 BL 0x1C5C684
	0x02826CA8 LDR W8, [X0 + 0xE0]
	0x02826CAC CBNZ W8, 0x2826CB4
	0x02826CB0 BL 0x1C16DFC
	0x02826CB4 LDR X0, [X19 + 0x20]
	0x02826CB8 LDRB W8, [X0 + 0x135]
	0x02826CBC TBNZ X8, 0x0, 0x2826CC4
	0x02826CC0 BL 0x1C5C684
	0x02826CC4 LDR X8, [X0 + 0xC0]
	0x02826CC8 LDR X0, [X8 + 0x8]
	0x02826CCC LDRB W8, [X0 + 0x135]
	0x02826CD0 TBNZ X8, 0x0, 0x2826CD8
	0x02826CD4 BL 0x1C5C684
	0x02826CD8 LDR X8, [X0 + 0xB8]
	0x02826CDC LDRSW X8, [X8]
	0x02826CE0 UBFM X2, X8, 0x3D, 0x3C
	0x02826CE4 CBZ W8, 0x2827424
	0x02826CE8 ADD X9, X2, 0xF
	0x02826CEC ADD X8, X31, 0x0
	0x02826CF0 AND X9, X9, 0xFFFFFFFF
	0x02826CF4 SUB X19, X8, X9
	0x02826CF8 ADD X31, X19, 0x0
	0x02826CFC B 0x2827428
	0x02826D00 MOV X19, X31
	0x02826D04 MOV X0, X19
	0x02826D08 MOV W1, W31
	0x02826D0C BL 0x3EB1B10
	0x02826D10 MOV X20, X31
	0x02826D14 MOV X24, X19
	0x02826D18 LDR X0, [X23]
	0x02826D1C LDRB W8, [X0 + 0x135]
	0x02826D20 TBNZ X8, 0x0, 0x2826D28
	0x02826D24 BL 0x1C5C684
	0x02826D28 LDR X8, [X0 + 0xC0]
	0x02826D2C LDR X0, [X8 + 0x8]
	0x02826D30 LDRB W8, [X0 + 0x135]
	0x02826D34 TBNZ X8, 0x0, 0x2826D3C
	0x02826D38 BL 0x1C5C684
	0x02826D3C LDR W8, [X0 + 0xE0]
	0x02826D40 CBNZ W8, 0x2826D48
	0x02826D44 BL 0x1C16DFC
	0x02826D48 LDR X0, [X23]
	0x02826D4C LDRB W8, [X0 + 0x135]
	0x02826D50 TBNZ X8, 0x0, 0x2826D58
	0x02826D54 BL 0x1C5C684
	0x02826D58 LDR X8, [X0 + 0xC0]
	0x02826D5C LDR X21, [X8 + 0x28]
	0x02826D60 LDR X0, [X21 + 0x20]
	0x02826D64 LDRB W8, [X0 + 0x135]
	0x02826D68 TBNZ X8, 0x0, 0x2826D70
	0x02826D6C BL 0x1C5C684
	0x02826D70 LDR X8, [X0 + 0xC0]
	0x02826D74 LDR X0, [X8 + 0x8]
	0x02826D78 LDRB W8, [X0 + 0x135]
	0x02826D7C TBNZ X8, 0x0, 0x2826D84
	0x02826D80 BL 0x1C5C684
	0x02826D84 LDR W8, [X0 + 0xE0]
	0x02826D88 CBNZ W8, 0x2826D90
	0x02826D8C BL 0x1C16DFC
	0x02826D90 LDR X0, [X21 + 0x20]
	0x02826D94 LDRB W8, [X0 + 0x135]
	0x02826D98 TBNZ X8, 0x0, 0x2826DA0
	0x02826D9C BL 0x1C5C684
	0x02826DA0 LDR X8, [X0 + 0xC0]
	0x02826DA4 LDR X0, [X8 + 0x8]
	0x02826DA8 LDRB W8, [X0 + 0x135]
	0x02826DAC TBNZ X8, 0x0, 0x2826DB4
	0x02826DB0 BL 0x1C5C684
	0x02826DB4 LDR X8, [X0 + 0xB8]
	0x02826DB8 LDRSW X8, [X8]
	0x02826DBC CMP X20, X8
	0x02826DC0 B.GE 0x28278D8
	0x02826DC4 LDR X0, [X23]
	0x02826DC8 LDRB W8, [X0 + 0x135]
	0x02826DCC TBNZ X8, 0x0, 0x2826DD4
	0x02826DD0 BL 0x1C5C684
	0x02826DD4 LDR X8, [X0 + 0xC0]
	0x02826DD8 LDR X0, [X8 + 0x8]
	0x02826DDC LDRB W8, [X0 + 0x135]
	0x02826DE0 TBNZ X8, 0x0, 0x2826DE8
	0x02826DE4 BL 0x1C5C684
	0x02826DE8 LDR W8, [X0 + 0xE0]
	0x02826DEC CBNZ W8, 0x2826DF4
	0x02826DF0 BL 0x1C16DFC
	0x02826DF4 LDR X0, [X23]
	0x02826DF8 LDRB W8, [X0 + 0x135]
	0x02826DFC TBNZ X8, 0x0, 0x2826E04
	0x02826E00 BL 0x1C5C684
	0x02826E04 LDR X8, [X0 + 0xC0]
	0x02826E08 SUB X0, X29, 0x38
	0x02826E0C MOV W1, W20
	0x02826E10 LDR X2, [X8 + 0x40]
	0x02826E14 BL 0x2821834
	0x02826E18 LDR X8, [X23]
	0x02826E1C MOV W21, W0
	0x02826E20 LDRB W9, [X8 + 0x135]
	0x02826E24 TBNZ X9, 0x0, 0x2826E34
	0x02826E28 MOV X0, X8
	0x02826E2C BL 0x1C5C684
	0x02826E30 MOV X8, X0
	0x02826E34 LDR X8, [X8 + 0xC0]
	0x02826E38 SUB X0, X29, 0x48
	0x02826E3C MOV W1, W20
	0x02826E40 LDR X2, [X8 + 0x40]
	0x02826E44 BL 0x2821834
	0x02826E48 LDR X8, [X23]
	0x02826E4C MOV W22, W0
	0x02826E50 LDRB W9, [X8 + 0x135]
	0x02826E54 TBNZ X9, 0x0, 0x2826E64
	0x02826E58 MOV X0, X8
	0x02826E5C BL 0x1C5C684
	0x02826E60 MOV X8, X0
	0x02826E64 LDR X8, [X8 + 0xC0]
	0x02826E68 MOV W0, W21
	0x02826E6C MOV W1, W22
	0x02826E70 LDR X2, [X8 + 0x48]
	0x02826E74 BL 0x22BC5BC
	0x02826E78 SBFM W8, W0, 0x0, 0x0
	0x02826E7C STR W8, [X24], #0x4
	0x02826E80 ADD X20, X20, 0x1
	0x02826E84 B 0x2826D18
	0x02826E88 LDR X0, [X19 + 0x20]
	0x02826E8C LDRB W8, [X0 + 0x135]
	0x02826E90 TBNZ X8, 0x0, 0x2826E98
	0x02826E94 BL 0x1C5C684
	0x02826E98 LDR X8, [X26]
	0x02826E9C LDR X9, [X0 + 0xC0]
	0x02826EA0 LDR W10, [X8 + 0xE0]
	0x02826EA4 LDR X24, [X9 + 0x18]
	0x02826EA8 CBNZ W10, 0x2826EB4
	0x02826EAC MOV X0, X8
	0x02826EB0 BL 0x1C16DFC
	0x02826EB4 MOV X0, X24
	0x02826EB8 MOV X1, X31
	0x02826EBC BL 0x338C698
	0x02826EC0 ADRP X8, 0x18F5000
	0x02826EC4 LDR X8, [X8 + 0xA80]
	0x02826EC8 MOV X24, X0
	0x02826ECC MOV X1, X31
	0x02826ED0 LDR X8, [X8]
	0x02826ED4 MOV X0, X8
	0x02826ED8 BL 0x338C698
	0x02826EDC MOV X1, X0
	0x02826EE0 MOV X0, X24
	0x02826EE4 MOV X2, X31
	0x02826EE8 BL 0x3395194
	0x02826EEC TBZ X0, 0x0, 0x2827234
	0x02826EF0 LDUR X8, [X29 - 0x78]
	0x02826EF4 FMOV S0, W23
	0x02826EF8 FMOV S1, W22
	0x02826EFC FMOV S3, W28
	0x02826F00 FMOV S2, W8
	0x02826F04 LDUR X8, [X29 - 0x70]
	0x02826F08 FCMP S0, S1
	0x02826F0C FMOV S0, W31
	0x02826F10 FMOV S4, W21
	0x02826F14 FMOV S6, W8
	0x02826F18 MOVN W8, 0x0
	0x02826F1C FMOV S1, W8
	0x02826F20 FMOV S5, W20
	0x02826F24 FCSEL S16, S1, S0, EQ
	0x02826F28 FCMP S2, S3
	0x02826F2C FMOV S7, W27
	0x02826F30 FCSEL S2, S1, S0, EQ
	0x02826F34 FCMP S4, S5
	0x02826F38 FMOV W22, S16
	0x02826F3C STUR S2, [X29 - 0x5C]
	0x02826F40 FCSEL S2, S1, S0, EQ
	0x02826F44 FCMP S6, S7
	0x02826F48 UBFM W20, W22, 0x8, 0x1F
	0x02826F4C UBFM W21, W22, 0x10, 0x1F
	0x02826F50 FCSEL S0, S1, S0, EQ
	0x02826F54 STURB W22, [X29 - 0x50]
	0x02826F58 STURB W20, [X29 - 0x54]
	0x02826F5C STURH W21, [X29 - 0x58]
	0x02826F60 STP S2, S0, [X29 - 0x68]
	0x02826F64 LDR X0, [X19 + 0x20]
	0x02826F68 LDRB W8, [X0 + 0x135]
	0x02826F6C TBNZ X8, 0x0, 0x2826F74
	0x02826F70 BL 0x1C5C684
	0x02826F74 LDUR W8, [X29 - 0x5C]
	0x02826F78 LDUR X9, [X29 - 0x68]
	0x02826F7C STURB W22, [X29 - 0x28]
	0x02826F80 STURB W20, [X29 - 0x27]
	0x02826F84 STURH W21, [X29 - 0x26]
	0x02826F88 B 0x28262BC
	0x02826F8C LDR X0, [X26]
	0x02826F90 LDR X20, [X8 + 0x18]
	0x02826F94 LDR W9, [X0 + 0xE0]
	0x02826F98 CBNZ W9, 0x2826FA0
	0x02826F9C BL 0x1C16DFC
	0x02826FA0 MOV X0, X20
	0x02826FA4 MOV X1, X31
	0x02826FA8 BL 0x338C698
	0x02826FAC ADRP X8, 0x18F5000
	0x02826FB0 LDR X8, [X8 + 0xA80]
	0x02826FB4 MOV X20, X0
	0x02826FB8 MOV X1, X31
	0x02826FBC LDR X8, [X8]
	0x02826FC0 MOV X0, X8
	0x02826FC4 BL 0x338C698
	0x02826FC8 MOV X1, X0
	0x02826FCC MOV X0, X20
	0x02826FD0 MOV X2, X31
	0x02826FD4 BL 0x3395194
	0x02826FD8 LDR X8, [X23]
	0x02826FDC MOV W20, W0
	0x02826FE0 LDRB W9, [X8 + 0x135]
	0x02826FE4 TBNZ X9, 0x0, 0x2826FF4
	0x02826FE8 MOV X0, X8
	0x02826FEC BL 0x1C5C684
	0x02826FF0 MOV X8, X0
	0x02826FF4 LDR X8, [X8 + 0xC0]
	0x02826FF8 TBZ X20, 0x0, 0x2827310
	0x02826FFC LDR X0, [X8 + 0x8]
	0x02827000 LDRB W8, [X0 + 0x135]
	0x02827004 TBNZ X8, 0x0, 0x282700C
	0x02827008 BL 0x1C5C684
	0x0282700C LDR W8, [X0 + 0xE0]
	0x02827010 CBNZ W8, 0x2827018
	0x02827014 BL 0x1C16DFC
	0x02827018 LDR X0, [X23]
	0x0282701C LDRB W8, [X0 + 0x135]
	0x02827020 TBNZ X8, 0x0, 0x2827028
	0x02827024 BL 0x1C5C684
	0x02827028 LDR X8, [X0 + 0xC0]
	0x0282702C LDR X19, [X8 + 0x28]
	0x02827030 LDR X0, [X19 + 0x20]
	0x02827034 LDRB W8, [X0 + 0x135]
	0x02827038 TBNZ X8, 0x0, 0x2827040
	0x0282703C BL 0x1C5C684
	0x02827040 LDR X8, [X0 + 0xC0]
	0x02827044 LDR X0, [X8 + 0x8]
	0x02827048 LDRB W8, [X0 + 0x135]
	0x0282704C TBNZ X8, 0x0, 0x2827054
	0x02827050 BL 0x1C5C684
	0x02827054 LDR W8, [X0 + 0xE0]
	0x02827058 CBNZ W8, 0x2827060
	0x0282705C BL 0x1C16DFC
	0x02827060 LDR X0, [X19 + 0x20]
	0x02827064 LDRB W8, [X0 + 0x135]
	0x02827068 TBNZ X8, 0x0, 0x2827070
	0x0282706C BL 0x1C5C684
	0x02827070 LDR X8, [X0 + 0xC0]
	0x02827074 LDR X0, [X8 + 0x8]
	0x02827078 LDRB W8, [X0 + 0x135]
	0x0282707C TBNZ X8, 0x0, 0x2827084
	0x02827080 BL 0x1C5C684
	0x02827084 LDR X8, [X0 + 0xB8]
	0x02827088 LDRSW X8, [X8]
	0x0282708C UBFM X2, X8, 0x3E, 0x3D
	0x02827090 CBZ W8, 0x28275AC
	0x02827094 ADD X9, X2, 0xF
	0x02827098 ADD X8, X31, 0x0
	0x0282709C AND X9, X9, 0xFFFFFFFF
	0x028270A0 SUB X19, X8, X9
	0x028270A4 ADD X31, X19, 0x0
	0x028270A8 B 0x28275B0
	0x028270AC MOV X19, X31
	0x028270B0 MOV X0, X19
	0x028270B4 MOV W1, W31
	0x028270B8 BL 0x3EB1B10
	0x028270BC MOV X20, X31
	0x028270C0 MOV X24, X19
	0x028270C4 LDR X0, [X23]
	0x028270C8 LDRB W8, [X0 + 0x135]
	0x028270CC TBNZ X8, 0x0, 0x28270D4
	0x028270D0 BL 0x1C5C684
	0x028270D4 LDR X8, [X0 + 0xC0]
	0x028270D8 LDR X0, [X8 + 0x8]
	0x028270DC LDRB W8, [X0 + 0x135]
	0x028270E0 TBNZ X8, 0x0, 0x28270E8
	0x028270E4 BL 0x1C5C684
	0x028270E8 LDR W8, [X0 + 0xE0]
	0x028270EC CBNZ W8, 0x28270F4
	0x028270F0 BL 0x1C16DFC
	0x028270F4 LDR X0, [X23]
	0x028270F8 LDRB W8, [X0 + 0x135]
	0x028270FC TBNZ X8, 0x0, 0x2827104
	0x02827100 BL 0x1C5C684
	0x02827104 LDR X8, [X0 + 0xC0]
	0x02827108 LDR X21, [X8 + 0x28]
	0x0282710C LDR X0, [X21 + 0x20]
	0x02827110 LDRB W8, [X0 + 0x135]
	0x02827114 TBNZ X8, 0x0, 0x282711C
	0x02827118 BL 0x1C5C684
	0x0282711C LDR X8, [X0 + 0xC0]
	0x02827120 LDR X0, [X8 + 0x8]
	0x02827124 LDRB W8, [X0 + 0x135]
	0x02827128 TBNZ X8, 0x0, 0x2827130
	0x0282712C BL 0x1C5C684
	0x02827130 LDR W8, [X0 + 0xE0]
	0x02827134 CBNZ W8, 0x282713C
	0x02827138 BL 0x1C16DFC
	0x0282713C LDR X0, [X21 + 0x20]
	0x02827140 LDRB W8, [X0 + 0x135]
	0x02827144 TBNZ X8, 0x0, 0x282714C
	0x02827148 BL 0x1C5C684
	0x0282714C LDR X8, [X0 + 0xC0]
	0x02827150 LDR X0, [X8 + 0x8]
	0x02827154 LDRB W8, [X0 + 0x135]
	0x02827158 TBNZ X8, 0x0, 0x2827160
	0x0282715C BL 0x1C5C684
	0x02827160 LDR X8, [X0 + 0xB8]
	0x02827164 LDRSW X8, [X8]
	0x02827168 CMP X20, X8
	0x0282716C B.GE 0x28278D8
	0x02827170 LDR X0, [X23]
	0x02827174 LDRB W8, [X0 + 0x135]
	0x02827178 TBNZ X8, 0x0, 0x2827180
	0x0282717C BL 0x1C5C684
	0x02827180 LDR X8, [X0 + 0xC0]
	0x02827184 LDR X0, [X8 + 0x8]
	0x02827188 LDRB W8, [X0 + 0x135]
	0x0282718C TBNZ X8, 0x0, 0x2827194
	0x02827190 BL 0x1C5C684
	0x02827194 LDR W8, [X0 + 0xE0]
	0x02827198 CBNZ W8, 0x28271A0
	0x0282719C BL 0x1C16DFC
	0x028271A0 LDR X0, [X23]
	0x028271A4 LDRB W8, [X0 + 0x135]
	0x028271A8 TBNZ X8, 0x0, 0x28271B0
	0x028271AC BL 0x1C5C684
	0x028271B0 LDR X8, [X0 + 0xC0]
	0x028271B4 SUB X0, X29, 0x38
	0x028271B8 MOV W1, W20
	0x028271BC LDR X2, [X8 + 0x40]
	0x028271C0 BL 0x2821834
	0x028271C4 LDR X8, [X23]
	0x028271C8 MOV W21, W0
	0x028271CC LDRB W9, [X8 + 0x135]
	0x028271D0 TBNZ X9, 0x0, 0x28271E0
	0x028271D4 MOV X0, X8
	0x028271D8 BL 0x1C5C684
	0x028271DC MOV X8, X0
	0x028271E0 LDR X8, [X8 + 0xC0]
	0x028271E4 SUB X0, X29, 0x48
	0x028271E8 MOV W1, W20
	0x028271EC LDR X2, [X8 + 0x40]
	0x028271F0 BL 0x2821834
	0x028271F4 LDR X8, [X23]
	0x028271F8 MOV W22, W0
	0x028271FC LDRB W9, [X8 + 0x135]
	0x02827200 TBNZ X9, 0x0, 0x2827210
	0x02827204 MOV X0, X8
	0x02827208 BL 0x1C5C684
	0x0282720C MOV X8, X0
	0x02827210 LDR X8, [X8 + 0xC0]
	0x02827214 MOV W0, W21
	0x02827218 MOV W1, W22
	0x0282721C LDR X2, [X8 + 0x48]
	0x02827220 BL 0x22BC5BC
	0x02827224 SBFM X8, X0, 0x0, 0x0
	0x02827228 STR X8, [X24], #0x8
	0x0282722C ADD X20, X20, 0x1
	0x02827230 B 0x28270C4
	0x02827234 LDR X0, [X19 + 0x20]
	0x02827238 LDRB W8, [X0 + 0x135]
	0x0282723C TBNZ X8, 0x0, 0x2827244
	0x02827240 BL 0x1C5C684
	0x02827244 LDR X8, [X26]
	0x02827248 LDR X9, [X0 + 0xC0]
	0x0282724C LDR W10, [X8 + 0xE0]
	0x02827250 LDR X24, [X9 + 0x18]
	0x02827254 CBNZ W10, 0x2827260
	0x02827258 MOV X0, X8
	0x0282725C BL 0x1C16DFC
	0x02827260 MOV X0, X24
	0x02827264 MOV X1, X31
	0x02827268 BL 0x338C698
	0x0282726C ADRP X8, 0x18F4000
	0x02827270 LDR X8, [X8 + 0xA78]
	0x02827274 MOV X24, X0
	0x02827278 MOV X1, X31
	0x0282727C LDR X8, [X8]
	0x02827280 MOV X0, X8
	0x02827284 BL 0x338C698
	0x02827288 MOV X1, X0
	0x0282728C MOV X0, X24
	0x02827290 MOV X2, X31
	0x02827294 BL 0x3395194
	0x02827298 TBZ X0, 0x0, 0x2827938
	0x0282729C FMOV D0, X23
	0x028272A0 FMOV D1, X22
	0x028272A4 FCMP D0, D1
	0x028272A8 FMOV D0, X31
	0x028272AC MOVI D1, 0xFFFFFFFFFFFFFFFF
	0x028272B0 FMOV D2, X21
	0x028272B4 FMOV D3, X20
	0x028272B8 FCSEL D4, D1, D0, EQ
	0x028272BC FCMP D2, D3
	0x028272C0 FMOV X23, D4
	0x028272C4 UBFM X20, X23, 0x8, 0x3F
	0x028272C8 UBFM X21, X23, 0x10, 0x3F
	0x028272CC UBFM X22, X23, 0x20, 0x3F
	0x028272D0 FCSEL D0, D1, D0, EQ
	0x028272D4 STURB W23, [X29 - 0x50]
	0x028272D8 STURB W20, [X29 - 0x54]
	0x028272DC STURH W21, [X29 - 0x58]
	0x028272E0 STUR W22, [X29 - 0x5C]
	0x028272E4 STUR D0, [X29 - 0x68]
	0x028272E8 LDR X0, [X19 + 0x20]
	0x028272EC LDRB W8, [X0 + 0x135]
	0x028272F0 TBNZ X8, 0x0, 0x28272F8
	0x028272F4 BL 0x1C5C684
	0x028272F8 LDUR X8, [X29 - 0x68]
	0x028272FC STURB W23, [X29 - 0x28]
	0x02827300 STURB W20, [X29 - 0x27]
	0x02827304 STURH W21, [X29 - 0x26]
	0x02827308 STUR W22, [X29 - 0x24]
	0x0282730C B 0x2826930
	0x02827310 LDR X0, [X26]
	0x02827314 LDR X20, [X8 + 0x18]
	0x02827318 LDR W9, [X0 + 0xE0]
	0x0282731C CBNZ W9, 0x2827324
	0x02827320 BL 0x1C16DFC
	0x02827324 MOV X0, X20
	0x02827328 MOV X1, X31
	0x0282732C BL 0x338C698
	0x02827330 ADRP X8, 0x18F4000
	0x02827334 LDR X8, [X8 + 0xA78]
	0x02827338 MOV X20, X0
	0x0282733C MOV X1, X31
	0x02827340 LDR X8, [X8]
	0x02827344 MOV X0, X8
	0x02827348 BL 0x338C698
	0x0282734C MOV X1, X0
	0x02827350 MOV X0, X20
	0x02827354 MOV X2, X31
	0x02827358 BL 0x3395194
	0x0282735C TBZ X0, 0x0, 0x2827938
	0x02827360 LDR X0, [X23]
	0x02827364 LDRB W8, [X0 + 0x135]
	0x02827368 TBNZ X8, 0x0, 0x2827370
	0x0282736C BL 0x1C5C684
	0x02827370 LDR X8, [X0 + 0xC0]
	0x02827374 LDR X0, [X8 + 0x8]
	0x02827378 LDRB W8, [X0 + 0x135]
	0x0282737C TBNZ X8, 0x0, 0x2827384
	0x02827380 BL 0x1C5C684
	0x02827384 LDR W8, [X0 + 0xE0]
	0x02827388 CBNZ W8, 0x2827390
	0x0282738C BL 0x1C16DFC
	0x02827390 LDR X0, [X23]
	0x02827394 LDRB W8, [X0 + 0x135]
	0x02827398 TBNZ X8, 0x0, 0x28273A0
	0x0282739C BL 0x1C5C684
	0x028273A0 LDR X8, [X0 + 0xC0]
	0x028273A4 LDR X19, [X8 + 0x28]
	0x028273A8 LDR X0, [X19 + 0x20]
	0x028273AC LDRB W8, [X0 + 0x135]
	0x028273B0 TBNZ X8, 0x0, 0x28273B8
	0x028273B4 BL 0x1C5C684
	0x028273B8 LDR X8, [X0 + 0xC0]
	0x028273BC LDR X0, [X8 + 0x8]
	0x028273C0 LDRB W8, [X0 + 0x135]
	0x028273C4 TBNZ X8, 0x0, 0x28273CC
	0x028273C8 BL 0x1C5C684
	0x028273CC LDR W8, [X0 + 0xE0]
	0x028273D0 CBNZ W8, 0x28273D8
	0x028273D4 BL 0x1C16DFC
	0x028273D8 LDR X0, [X19 + 0x20]
	0x028273DC LDRB W8, [X0 + 0x135]
	0x028273E0 TBNZ X8, 0x0, 0x28273E8
	0x028273E4 BL 0x1C5C684
	0x028273E8 LDR X8, [X0 + 0xC0]
	0x028273EC LDR X0, [X8 + 0x8]
	0x028273F0 LDRB W8, [X0 + 0x135]
	0x028273F4 TBNZ X8, 0x0, 0x28273FC
	0x028273F8 BL 0x1C5C684
	0x028273FC LDR X8, [X0 + 0xB8]
	0x02827400 LDRSW X8, [X8]
	0x02827404 UBFM X2, X8, 0x3D, 0x3C
	0x02827408 CBZ W8, 0x2827744
	0x0282740C ADD X9, X2, 0xF
	0x02827410 ADD X8, X31, 0x0
	0x02827414 AND X9, X9, 0xFFFFFFFF
	0x02827418 SUB X19, X8, X9
	0x0282741C ADD X31, X19, 0x0
	0x02827420 B 0x2827748
	0x02827424 MOV X19, X31
	0x02827428 MOV X0, X19
	0x0282742C MOV W1, W31
	0x02827430 BL 0x3EB1B10
	0x02827434 MOV X20, X31
	0x02827438 MOV X24, X19
	0x0282743C LDR X0, [X23]
	0x02827440 LDRB W8, [X0 + 0x135]
	0x02827444 TBNZ X8, 0x0, 0x282744C
	0x02827448 BL 0x1C5C684
	0x0282744C LDR X8, [X0 + 0xC0]
	0x02827450 LDR X0, [X8 + 0x8]
	0x02827454 LDRB W8, [X0 + 0x135]
	0x02827458 TBNZ X8, 0x0, 0x2827460
	0x0282745C BL 0x1C5C684
	0x02827460 LDR W8, [X0 + 0xE0]
	0x02827464 CBNZ W8, 0x282746C
	0x02827468 BL 0x1C16DFC
	0x0282746C LDR X0, [X23]
	0x02827470 LDRB W8, [X0 + 0x135]
	0x02827474 TBNZ X8, 0x0, 0x282747C
	0x02827478 BL 0x1C5C684
	0x0282747C LDR X8, [X0 + 0xC0]
	0x02827480 LDR X21, [X8 + 0x28]
	0x02827484 LDR X0, [X21 + 0x20]
	0x02827488 LDRB W8, [X0 + 0x135]
	0x0282748C TBNZ X8, 0x0, 0x2827494
	0x02827490 BL 0x1C5C684
	0x02827494 LDR X8, [X0 + 0xC0]
	0x02827498 LDR X0, [X8 + 0x8]
	0x0282749C LDRB W8, [X0 + 0x135]
	0x028274A0 TBNZ X8, 0x0, 0x28274A8
	0x028274A4 BL 0x1C5C684
	0x028274A8 LDR W8, [X0 + 0xE0]
	0x028274AC CBNZ W8, 0x28274B4
	0x028274B0 BL 0x1C16DFC
	0x028274B4 LDR X0, [X21 + 0x20]
	0x028274B8 LDRB W8, [X0 + 0x135]
	0x028274BC TBNZ X8, 0x0, 0x28274C4
	0x028274C0 BL 0x1C5C684
	0x028274C4 LDR X8, [X0 + 0xC0]
	0x028274C8 LDR X0, [X8 + 0x8]
	0x028274CC LDRB W8, [X0 + 0x135]
	0x028274D0 TBNZ X8, 0x0, 0x28274D8
	0x028274D4 BL 0x1C5C684
	0x028274D8 LDR X8, [X0 + 0xB8]
	0x028274DC LDRSW X8, [X8]
	0x028274E0 CMP X20, X8
	0x028274E4 B.GE 0x28278D8
	0x028274E8 LDR X0, [X23]
	0x028274EC LDRB W8, [X0 + 0x135]
	0x028274F0 TBNZ X8, 0x0, 0x28274F8
	0x028274F4 BL 0x1C5C684
	0x028274F8 LDR X8, [X0 + 0xC0]
	0x028274FC LDR X0, [X8 + 0x8]
	0x02827500 LDRB W8, [X0 + 0x135]
	0x02827504 TBNZ X8, 0x0, 0x282750C
	0x02827508 BL 0x1C5C684
	0x0282750C LDR W8, [X0 + 0xE0]
	0x02827510 CBNZ W8, 0x2827518
	0x02827514 BL 0x1C16DFC
	0x02827518 LDR X0, [X23]
	0x0282751C LDRB W8, [X0 + 0x135]
	0x02827520 TBNZ X8, 0x0, 0x2827528
	0x02827524 BL 0x1C5C684
	0x02827528 LDR X8, [X0 + 0xC0]
	0x0282752C SUB X0, X29, 0x38
	0x02827530 MOV W1, W20
	0x02827534 LDR X2, [X8 + 0x40]
	0x02827538 BL 0x2821834
	0x0282753C LDR X8, [X23]
	0x02827540 MOV W21, W0
	0x02827544 LDRB W9, [X8 + 0x135]
	0x02827548 TBNZ X9, 0x0, 0x2827558
	0x0282754C MOV X0, X8
	0x02827550 BL 0x1C5C684
	0x02827554 MOV X8, X0
	0x02827558 LDR X8, [X8 + 0xC0]
	0x0282755C SUB X0, X29, 0x48
	0x02827560 MOV W1, W20
	0x02827564 LDR X2, [X8 + 0x40]
	0x02827568 BL 0x2821834
	0x0282756C LDR X8, [X23]
	0x02827570 MOV W22, W0
	0x02827574 LDRB W9, [X8 + 0x135]
	0x02827578 TBNZ X9, 0x0, 0x2827588
	0x0282757C MOV X0, X8
	0x02827580 BL 0x1C5C684
	0x02827584 MOV X8, X0
	0x02827588 LDR X8, [X8 + 0xC0]
	0x0282758C MOV W0, W21
	0x02827590 MOV W1, W22
	0x02827594 LDR X2, [X8 + 0x48]
	0x02827598 BL 0x22BC5BC
	0x0282759C SBFM X8, X0, 0x0, 0x0
	0x028275A0 STR X8, [X24], #0x8
	0x028275A4 ADD X20, X20, 0x1
	0x028275A8 B 0x282743C
	0x028275AC MOV X19, X31
	0x028275B0 MOV X0, X19
	0x028275B4 MOV W1, W31
	0x028275B8 BL 0x3EB1B10
	0x028275BC MOV X20, X31
	0x028275C0 MOVN W24, 0x0
	0x028275C4 FMOV S8, W31
	0x028275C8 MOV X26, X19
	0x028275CC LDR X0, [X23]
	0x028275D0 LDRB W8, [X0 + 0x135]
	0x028275D4 TBNZ X8, 0x0, 0x28275DC
	0x028275D8 BL 0x1C5C684
	0x028275DC LDR X8, [X0 + 0xC0]
	0x028275E0 LDR X0, [X8 + 0x8]
	0x028275E4 LDRB W8, [X0 + 0x135]
	0x028275E8 TBNZ X8, 0x0, 0x28275F0
	0x028275EC BL 0x1C5C684
	0x028275F0 LDR W8, [X0 + 0xE0]
	0x028275F4 CBNZ W8, 0x28275FC
	0x028275F8 BL 0x1C16DFC
	0x028275FC LDR X0, [X23]
	0x02827600 LDRB W8, [X0 + 0x135]
	0x02827604 TBNZ X8, 0x0, 0x282760C
	0x02827608 BL 0x1C5C684
	0x0282760C LDR X8, [X0 + 0xC0]
	0x02827610 LDR X21, [X8 + 0x28]
	0x02827614 LDR X0, [X21 + 0x20]
	0x02827618 LDRB W8, [X0 + 0x135]
	0x0282761C TBNZ X8, 0x0, 0x2827624
	0x02827620 BL 0x1C5C684
	0x02827624 LDR X8, [X0 + 0xC0]
	0x02827628 LDR X0, [X8 + 0x8]
	0x0282762C LDRB W8, [X0 + 0x135]
	0x02827630 TBNZ X8, 0x0, 0x2827638
	0x02827634 BL 0x1C5C684
	0x02827638 LDR W8, [X0 + 0xE0]
	0x0282763C CBNZ W8, 0x2827644
	0x02827640 BL 0x1C16DFC
	0x02827644 LDR X0, [X21 + 0x20]
	0x02827648 LDRB W8, [X0 + 0x135]
	0x0282764C TBNZ X8, 0x0, 0x2827654
	0x02827650 BL 0x1C5C684
	0x02827654 LDR X8, [X0 + 0xC0]
	0x02827658 LDR X0, [X8 + 0x8]
	0x0282765C LDRB W8, [X0 + 0x135]
	0x02827660 TBNZ X8, 0x0, 0x2827668
	0x02827664 BL 0x1C5C684
	0x02827668 LDR X8, [X0 + 0xB8]
	0x0282766C LDRSW X8, [X8]
	0x02827670 CMP X20, X8
	0x02827674 B.GE 0x28278D8
	0x02827678 LDR X0, [X23]
	0x0282767C LDRB W8, [X0 + 0x135]
	0x02827680 TBNZ X8, 0x0, 0x2827688
	0x02827684 BL 0x1C5C684
	0x02827688 LDR X8, [X0 + 0xC0]
	0x0282768C LDR X0, [X8 + 0x8]
	0x02827690 LDRB W8, [X0 + 0x135]
	0x02827694 TBNZ X8, 0x0, 0x282769C
	0x02827698 BL 0x1C5C684
	0x0282769C LDR W8, [X0 + 0xE0]
	0x028276A0 CBNZ W8, 0x28276A8
	0x028276A4 BL 0x1C16DFC
	0x028276A8 LDR X0, [X23]
	0x028276AC LDRB W8, [X0 + 0x135]
	0x028276B0 TBNZ X8, 0x0, 0x28276B8
	0x028276B4 BL 0x1C5C684
	0x028276B8 LDR X8, [X0 + 0xC0]
	0x028276BC SUB X0, X29, 0x38
	0x028276C0 MOV W1, W20
	0x028276C4 LDR X2, [X8 + 0x40]
	0x028276C8 BL 0x2821834
	0x028276CC LDR X8, [X23]
	0x028276D0 MOV W21, W0
	0x028276D4 LDRB W9, [X8 + 0x135]
	0x028276D8 TBNZ X9, 0x0, 0x28276E8
	0x028276DC MOV X0, X8
	0x028276E0 BL 0x1C5C684
	0x028276E4 MOV X8, X0
	0x028276E8 LDR X8, [X8 + 0xC0]
	0x028276EC SUB X0, X29, 0x48
	0x028276F0 MOV W1, W20
	0x028276F4 LDR X2, [X8 + 0x40]
	0x028276F8 BL 0x2821834
	0x028276FC LDR X8, [X23]
	0x02827700 MOV W22, W0
	0x02827704 LDRB W9, [X8 + 0x135]
	0x02827708 TBNZ X9, 0x0, 0x2827718
	0x0282770C MOV X0, X8
	0x02827710 BL 0x1C5C684
	0x02827714 MOV X8, X0
	0x02827718 LDR X8, [X8 + 0xC0]
	0x0282771C MOV W0, W21
	0x02827720 MOV W1, W22
	0x02827724 LDR X2, [X8 + 0x48]
	0x02827728 BL 0x22BC5BC
	0x0282772C ANDS W31, W0, 0x1
	0x02827730 FMOV S0, W24
	0x02827734 FCSEL S0, S0, S8, NE
	0x02827738 STR S0, [X26], #0x4
	0x0282773C ADD X20, X20, 0x1
	0x02827740 B 0x28275CC
	0x02827744 MOV X19, X31
	0x02827748 MOV X0, X19
	0x0282774C MOV W1, W31
	0x02827750 BL 0x3EB1B10
	0x02827754 MOV X20, X31
	0x02827758 FMOV D8, X31
	0x0282775C MOVI D9, 0xFFFFFFFFFFFFFFFF
	0x02827760 MOV X24, X19
	0x02827764 LDR X0, [X23]
	0x02827768 LDRB W8, [X0 + 0x135]
	0x0282776C TBNZ X8, 0x0, 0x2827774
	0x02827770 BL 0x1C5C684
	0x02827774 LDR X8, [X0 + 0xC0]
	0x02827778 LDR X0, [X8 + 0x8]
	0x0282777C LDRB W8, [X0 + 0x135]
	0x02827780 TBNZ X8, 0x0, 0x2827788
	0x02827784 BL 0x1C5C684
	0x02827788 LDR W8, [X0 + 0xE0]
	0x0282778C CBNZ W8, 0x2827794
	0x02827790 BL 0x1C16DFC
	0x02827794 LDR X0, [X23]
	0x02827798 LDRB W8, [X0 + 0x135]
	0x0282779C TBNZ X8, 0x0, 0x28277A4
	0x028277A0 BL 0x1C5C684
	0x028277A4 LDR X8, [X0 + 0xC0]
	0x028277A8 LDR X21, [X8 + 0x28]
	0x028277AC LDR X0, [X21 + 0x20]
	0x028277B0 LDRB W8, [X0 + 0x135]
	0x028277B4 TBNZ X8, 0x0, 0x28277BC
	0x028277B8 BL 0x1C5C684
	0x028277BC LDR X8, [X0 + 0xC0]
	0x028277C0 LDR X0, [X8 + 0x8]
	0x028277C4 LDRB W8, [X0 + 0x135]
	0x028277C8 TBNZ X8, 0x0, 0x28277D0
	0x028277CC BL 0x1C5C684
	0x028277D0 LDR W8, [X0 + 0xE0]
	0x028277D4 CBNZ W8, 0x28277DC
	0x028277D8 BL 0x1C16DFC
	0x028277DC LDR X0, [X21 + 0x20]
	0x028277E0 LDRB W8, [X0 + 0x135]
	0x028277E4 TBNZ X8, 0x0, 0x28277EC
	0x028277E8 BL 0x1C5C684
	0x028277EC LDR X8, [X0 + 0xC0]
	0x028277F0 LDR X0, [X8 + 0x8]
	0x028277F4 LDRB W8, [X0 + 0x135]
	0x028277F8 TBNZ X8, 0x0, 0x2827800
	0x028277FC BL 0x1C5C684
	0x02827800 LDR X8, [X0 + 0xB8]
	0x02827804 LDRSW X8, [X8]
	0x02827808 CMP X20, X8
	0x0282780C B.GE 0x28278D8
	0x02827810 LDR X0, [X23]
	0x02827814 LDRB W8, [X0 + 0x135]
	0x02827818 TBNZ X8, 0x0, 0x2827820
	0x0282781C BL 0x1C5C684
	0x02827820 LDR X8, [X0 + 0xC0]
	0x02827824 LDR X0, [X8 + 0x8]
	0x02827828 LDRB W8, [X0 + 0x135]
	0x0282782C TBNZ X8, 0x0, 0x2827834
	0x02827830 BL 0x1C5C684
	0x02827834 LDR W8, [X0 + 0xE0]
	0x02827838 CBNZ W8, 0x2827840
	0x0282783C BL 0x1C16DFC
	0x02827840 LDR X0, [X23]
	0x02827844 LDRB W8, [X0 + 0x135]
	0x02827848 TBNZ X8, 0x0, 0x2827850
	0x0282784C BL 0x1C5C684
	0x02827850 LDR X8, [X0 + 0xC0]
	0x02827854 SUB X0, X29, 0x38
	0x02827858 MOV W1, W20
	0x0282785C LDR X2, [X8 + 0x40]
	0x02827860 BL 0x2821834
	0x02827864 LDR X8, [X23]
	0x02827868 MOV W21, W0
	0x0282786C LDRB W9, [X8 + 0x135]
	0x02827870 TBNZ X9, 0x0, 0x2827880
	0x02827874 MOV X0, X8
	0x02827878 BL 0x1C5C684
	0x0282787C MOV X8, X0
	0x02827880 LDR X8, [X8 + 0xC0]
	0x02827884 SUB X0, X29, 0x48
	0x02827888 MOV W1, W20
	0x0282788C LDR X2, [X8 + 0x40]
	0x02827890 BL 0x2821834
	0x02827894 LDR X8, [X23]
	0x02827898 MOV W22, W0
	0x0282789C LDRB W9, [X8 + 0x135]
	0x028278A0 TBNZ X9, 0x0, 0x28278B0
	0x028278A4 MOV X0, X8
	0x028278A8 BL 0x1C5C684
	0x028278AC MOV X8, X0
	0x028278B0 LDR X8, [X8 + 0xC0]
	0x028278B4 MOV W0, W21
	0x028278B8 MOV W1, W22
	0x028278BC LDR X2, [X8 + 0x48]
	0x028278C0 BL 0x22BC5BC
	0x028278C4 ANDS W31, W0, 0x1
	0x028278C8 FCSEL D0, D9, D8, NE
	0x028278CC STR D0, [X24], #0x8
	0x028278D0 ADD X20, X20, 0x1
	0x028278D4 B 0x2827764
	0x028278D8 STP X31, X31, [X29 - 0x28]
	0x028278DC LDR X0, [X23]
	0x028278E0 LDRB W8, [X0 + 0x135]
	0x028278E4 TBNZ X8, 0x0, 0x28278EC
	0x028278E8 BL 0x1C5C684
	0x028278EC LDR X8, [X0 + 0xC0]
	0x028278F0 SUB X0, X29, 0x28
	0x028278F4 MOV X1, X19
	0x028278F8 LDR X2, [X8 + 0x60]
	0x028278FC BL 0x2820AD4
	0x02827900 LDP X0, X1, [X29 - 0x28]
	0x02827904 LDR X8, [X25 + 0x28]
	0x02827908 LDUR X9, [X29 - 0x18]
	0x0282790C CMP X8, X9
	0x02827910 B.NE 0x2827974
	0x02827914 SUB X31, X29, 0x10
	0x02827918 LDP X20, X19, [X31 + 0x60]
	0x0282791C LDP X22, X21, [X31 + 0x50]
	0x02827920 LDP X24, X23, [X31 + 0x40]
	0x02827924 LDP X26, X25, [X31 + 0x30]
	0x02827928 LDP X28, X27, [X31 + 0x20]
	0x0282792C LDP X29, X30, [X31 + 0x10]
	0x02827930 LDP D9, D8, [X31], #0x70
	0x02827934 RET
	0x02827938 ADRP X0, 0x18CC000
	0x0282793C LDR X0, [X0 + 0xB40]
	0x02827940 BL 0x1C16D08
	0x02827944 BL 0x1C16F10
	0x02827948 MOV X20, X0
	0x0282794C ADRP X0, 0x18F5000
	0x02827950 LDR X0, [X0 + 0xA90]
	0x02827954 BL 0x1C16D08
	0x02827958 MOV X1, X0
	0x0282795C MOV X0, X20
	0x02827960 MOV X2, X31
	0x02827964 BL 0x3379A44
	0x02827968 MOV X0, X20
	0x0282796C MOV X1, X19
	0x02827970 BL 0x1C16DEC
	0x02827974 BL 0x3EB1B20
	0x02827978 STR D8, [X31 - 0x50]!
	0x0282797C STP X30, X25, [X31 + 0x10]
	0x02827980 STP X24, X23, [X31 + 0x20]
	0x02827984 STP X22, X21, [X31 + 0x30]
	0x02827988 STP X20, X19, [X31 + 0x40]
	0x0282798C ADRP X22, 0x1BB3000
	0x02827990 LDRB W8, [X22 + 0xA7C]
	0x02827994 MOV X20, X2
	0x02827998 MOV W19, W1
	0x0282799C MOV W21, W0
	0x028279A0 TBNZ X8, 0x0, 0x2827AA8
	0x028279A4 ADRP X0, 0x18F3000
	0x028279A8 LDR X0, [X0 + 0xD68]
	0x028279AC BL 0x1C16CF4
	0x028279B0 ADRP X0, 0x18CD000
	0x028279B4 LDR X0, [X0 + 0x9D8]
	0x028279B8 BL 0x1C16CF4
	0x028279BC ADRP X0, 0x18F4000
	0x028279C0 LDR X0, [X0 + 0xA78]
	0x028279C4 BL 0x1C16CF4
	0x028279C8 ADRP X0, 0x18CF000
	0x028279CC LDR X0, [X0 + 0x978]
	0x028279D0 BL 0x1C16CF4
	0x028279D4 ADRP X0, 0x18F3000
	0x028279D8 LDR X0, [X0 + 0xD78]
	0x028279DC BL 0x1C16CF4
	0x028279E0 ADRP X0, 0x18D0000
	0x028279E4 LDR X0, [X0 + 0x628]
	0x028279E8 BL 0x1C16CF4
	0x028279EC ADRP X0, 0x18F3000
	0x028279F0 LDR X0, [X0 + 0xD80]
	0x028279F4 BL 0x1C16CF4
	0x028279F8 ADRP X0, 0x18CC000
	0x028279FC LDR X0, [X0 + 0x758]
	0x02827A00 BL 0x1C16CF4
	0x02827A04 ADRP X0, 0x18F3000
	0x02827A08 LDR X0, [X0 + 0xD88]
	0x02827A0C BL 0x1C16CF4
	0x02827A10 ADRP X0, 0x18CE000
	0x02827A14 LDR X0, [X0 + 0xA60]
	0x02827A18 BL 0x1C16CF4
	0x02827A1C ADRP X0, 0x18F3000
	0x02827A20 LDR X0, [X0 + 0xD90]
	0x02827A24 BL 0x1C16CF4
	0x02827A28 ADRP X0, 0x18F5000
	0x02827A2C LDR X0, [X0 + 0x6B0]
	0x02827A30 BL 0x1C16CF4
	0x02827A34 ADRP X0, 0x18F4000
	0x02827A38 LDR X0, [X0 + 0xA80]
	0x02827A3C BL 0x1C16CF4
	0x02827A40 ADRP X0, 0x18CC000
	0x02827A44 LDR X0, [X0 + 0xA90]
	0x02827A48 BL 0x1C16CF4
	0x02827A4C ADRP X0, 0x18CC000
	0x02827A50 LDR X0, [X0 + 0x6C0]
	0x02827A54 BL 0x1C16CF4
	0x02827A58 ADRP X0, 0x18F3000
	0x02827A5C LDR X0, [X0 + 0xD98]
	0x02827A60 BL 0x1C16CF4
	0x02827A64 ADRP X0, 0x18D1000
	0x02827A68 LDR X0, [X0 + 0x658]
	0x02827A6C BL 0x1C16CF4
	0x02827A70 ADRP X0, 0x18F3000
	0x02827A74 LDR X0, [X0 + 0xDA0]
	0x02827A78 BL 0x1C16CF4
	0x02827A7C ADRP X0, 0x18D4000
	0x02827A80 LDR X0, [X0 + 0x720]
	0x02827A84 BL 0x1C16CF4
	0x02827A88 ADRP X0, 0x18F3000
	0x02827A8C LDR X0, [X0 + 0xDA8]
	0x02827A90 BL 0x1C16CF4
	0x02827A94 ADRP X0, 0x18CD000
	0x02827A98 LDR X0, [X0 + 0x758]
	0x02827A9C BL 0x1C16CF4
	0x02827AA0 MOVZ W8, 0x1
	0x02827AA4 STRB W8, [X22 + 0xA7C]
	0x02827AA8 MOV X23, X20
	0x02827AAC LDR X0, [X23 + 0x20]!
	0x02827AB0 ADRP X24, 0x18CC000
	0x02827AB4 LDRB W8, [X0 + 0x135]
	0x02827AB8 LDR X24, [X24 + 0x6C0]
	0x02827ABC TBNZ X8, 0x0, 0x2827AC4
	0x02827AC0 BL 0x1C5C684
	0x02827AC4 LDR X8, [X24]
	0x02827AC8 LDR X9, [X0 + 0xC0]
	0x02827ACC ADRP X25, 0x18F3000
	0x02827AD0 LDR W10, [X8 + 0xE0]
	0x02827AD4 LDR X22, [X9 + 0x18]
	0x02827AD8 LDR X25, [X25 + 0xD68]
	0x02827ADC CBNZ W10, 0x2827AE8
	0x02827AE0 MOV X0, X8
	0x02827AE4 BL 0x1C16DFC
	0x02827AE8 MOV X0, X22
	0x02827AEC MOV X1, X31
	0x02827AF0 BL 0x338C698
	0x02827AF4 LDR X8, [X25]
	0x02827AF8 MOV X22, X0
	0x02827AFC MOV X1, X31
	0x02827B00 MOV X0, X8
	0x02827B04 BL 0x338C698
	0x02827B08 MOV X1, X0
	0x02827B0C MOV X0, X22
	0x02827B10 MOV X2, X31
	0x02827B14 BL 0x3395194
	0x02827B18 TBZ X0, 0x0, 0x2827B80
	0x02827B1C STRH W21, [X31 + 0xC]
	0x02827B20 LDR X0, [X23]
	0x02827B24 LDRB W8, [X0 + 0x135]
	0x02827B28 TBNZ X8, 0x0, 0x2827B30
	0x02827B2C BL 0x1C5C684
	0x02827B30 LDR X8, [X0 + 0xC0]
	0x02827B34 ADD X1, X31, 0xC
	0x02827B38 LDR X0, [X8 + 0x20]
	0x02827B3C BL 0x1C16E04
	0x02827B40 STRH W19, [X31 + 0x8]
	0x02827B44 LDR X8, [X23]
	0x02827B48 MOV X19, X0
	0x02827B4C LDRB W9, [X8 + 0x135]
	0x02827B50 TBNZ X9, 0x0, 0x2827B60
	0x02827B54 MOV X0, X8
	0x02827B58 BL 0x1C5C684
	0x02827B5C MOV X8, X0
	0x02827B60 LDR X8, [X8 + 0xC0]
	0x02827B64 ADD X1, X31, 0x8
	0x02827B68 LDR X0, [X8 + 0x20]
	0x02827B6C BL 0x1C16E04
	0x02827B70 CBZ X19, 0x28284B4
	0x02827B74 ADRP X21, 0x18CD000
	0x02827B78 LDR X21, [X21 + 0x9D8]
	0x02827B7C B 0x2827C48
	0x02827B80 LDR X0, [X23]
	0x02827B84 LDRB W8, [X0 + 0x135]
	0x02827B88 TBNZ X8, 0x0, 0x2827B90
	0x02827B8C BL 0x1C5C684
	0x02827B90 LDR X8, [X24]
	0x02827B94 LDR X9, [X0 + 0xC0]
	0x02827B98 LDR W10, [X8 + 0xE0]
	0x02827B9C LDR X22, [X9 + 0x18]
	0x02827BA0 CBNZ W10, 0x2827BAC
	0x02827BA4 MOV X0, X8
	0x02827BA8 BL 0x1C16DFC
	0x02827BAC MOV X0, X22
	0x02827BB0 MOV X1, X31
	0x02827BB4 BL 0x338C698
	0x02827BB8 ADRP X8, 0x18F3000
	0x02827BBC LDR X8, [X8 + 0xD90]
	0x02827BC0 MOV X22, X0
	0x02827BC4 MOV X1, X31
	0x02827BC8 LDR X8, [X8]
	0x02827BCC MOV X0, X8
	0x02827BD0 BL 0x338C698
	0x02827BD4 MOV X1, X0
	0x02827BD8 MOV X0, X22
	0x02827BDC MOV X2, X31
	0x02827BE0 BL 0x3395194
	0x02827BE4 TBZ X0, 0x0, 0x2827CB8
	0x02827BE8 STRH W21, [X31 + 0xC]
	0x02827BEC LDR X0, [X23]
	0x02827BF0 LDRB W8, [X0 + 0x135]
	0x02827BF4 TBNZ X8, 0x0, 0x2827BFC
	0x02827BF8 BL 0x1C5C684
	0x02827BFC LDR X8, [X0 + 0xC0]
	0x02827C00 ADD X1, X31, 0xC
	0x02827C04 LDR X0, [X8 + 0x20]
	0x02827C08 BL 0x1C16E04
	0x02827C0C STRH W19, [X31 + 0x8]
	0x02827C10 LDR X8, [X23]
	0x02827C14 MOV X19, X0
	0x02827C18 LDRB W9, [X8 + 0x135]
	0x02827C1C TBNZ X9, 0x0, 0x2827C2C
	0x02827C20 MOV X0, X8
	0x02827C24 BL 0x1C5C684
	0x02827C28 MOV X8, X0
	0x02827C2C LDR X8, [X8 + 0xC0]
	0x02827C30 ADD X1, X31, 0x8
	0x02827C34 LDR X0, [X8 + 0x20]
	0x02827C38 BL 0x1C16E04
	0x02827C3C CBZ X19, 0x28284B4
	0x02827C40 ADRP X21, 0x18F5000
	0x02827C44 LDR X21, [X21 + 0x6B0]
	0x02827C48 LDR X8, [X19]
	0x02827C4C LDR X1, [X21]
	0x02827C50 LDR X8, [X8 + 0x40]
	0x02827C54 LDR X9, [X1 + 0x40]
	0x02827C58 CMP X8, X9
	0x02827C5C B.NE 0x28284B8
	0x02827C60 MOV X20, X0
	0x02827C64 MOV X0, X19
	0x02827C68 BL 0x1C16E08
	0x02827C6C CBZ X20, 0x28284B4
	0x02827C70 LDR X8, [X20]
	0x02827C74 LDR X1, [X21]
	0x02827C78 LDR X8, [X8 + 0x40]
	0x02827C7C LDR X9, [X1 + 0x40]
	0x02827C80 CMP X8, X9
	0x02827C84 B.NE 0x28284C0
	0x02827C88 LDRB W19, [X0]
	0x02827C8C MOV X0, X20
	0x02827C90 BL 0x1C16E08
	0x02827C94 LDRB W8, [X0]
	0x02827C98 CMP W19, W8
	0x02827C9C LDP X20, X19, [X31 + 0x40]
	0x02827CA0 LDP X22, X21, [X31 + 0x30]
	0x02827CA4 LDP X24, X23, [X31 + 0x20]
	0x02827CA8 LDP X30, X25, [X31 + 0x10]
	0x02827CAC CSET W0, EQ
	0x02827CB0 LDR V8, [X31], #0x50
	0x02827CB4 RET
	0x02827CB8 LDR X0, [X23]
	0x02827CBC LDRB W8, [X0 + 0x135]
	0x02827CC0 TBNZ X8, 0x0, 0x2827CC8
	0x02827CC4 BL 0x1C5C684
	0x02827CC8 LDR X8, [X24]
	0x02827CCC LDR X9, [X0 + 0xC0]
	0x02827CD0 LDR W10, [X8 + 0xE0]
	0x02827CD4 LDR X22, [X9 + 0x18]
	0x02827CD8 CBNZ W10, 0x2827CE4
	0x02827CDC MOV X0, X8
	0x02827CE0 BL 0x1C16DFC
	0x02827CE4 MOV X0, X22
	0x02827CE8 MOV X1, X31
	0x02827CEC BL 0x338C698
	0x02827CF0 ADRP X8, 0x18F3000
	0x02827CF4 LDR X8, [X8 + 0xD98]
	0x02827CF8 MOV X22, X0
	0x02827CFC MOV X1, X31
	0x02827D00 LDR X8, [X8]
	0x02827D04 MOV X0, X8
	0x02827D08 BL 0x338C698
	0x02827D0C MOV X1, X0
	0x02827D10 MOV X0, X22
	0x02827D14 MOV X2, X31
	0x02827D18 BL 0x3395194
	0x02827D1C TBZ X0, 0x0, 0x2827D84
	0x02827D20 STRH W21, [X31 + 0xC]
	0x02827D24 LDR X0, [X23]
	0x02827D28 LDRB W8, [X0 + 0x135]
	0x02827D2C TBNZ X8, 0x0, 0x2827D34
	0x02827D30 BL 0x1C5C684
	0x02827D34 LDR X8, [X0 + 0xC0]
	0x02827D38 ADD X1, X31, 0xC
	0x02827D3C LDR X0, [X8 + 0x20]
	0x02827D40 BL 0x1C16E04
	0x02827D44 STRH W19, [X31 + 0x8]
	0x02827D48 LDR X8, [X23]
	0x02827D4C MOV X19, X0
	0x02827D50 LDRB W9, [X8 + 0x135]
	0x02827D54 TBNZ X9, 0x0, 0x2827D64
	0x02827D58 MOV X0, X8
	0x02827D5C BL 0x1C5C684
	0x02827D60 MOV X8, X0
	0x02827D64 LDR X8, [X8 + 0xC0]
	0x02827D68 ADD X1, X31, 0x8
	0x02827D6C LDR X0, [X8 + 0x20]
	0x02827D70 BL 0x1C16E04
	0x02827D74 CBZ X19, 0x28284B4
	0x02827D78 ADRP X21, 0x18D1000
	0x02827D7C LDR X21, [X21 + 0x658]
	0x02827D80 B 0x2827E4C
	0x02827D84 LDR X0, [X23]
	0x02827D88 LDRB W8, [X0 + 0x135]
	0x02827D8C TBNZ X8, 0x0, 0x2827D94
	0x02827D90 BL 0x1C5C684
	0x02827D94 LDR X8, [X24]
	0x02827D98 LDR X9, [X0 + 0xC0]
	0x02827D9C LDR W10, [X8 + 0xE0]
	0x02827DA0 LDR X22, [X9 + 0x18]
	0x02827DA4 CBNZ W10, 0x2827DB0
	0x02827DA8 MOV X0, X8
	0x02827DAC BL 0x1C16DFC
	0x02827DB0 MOV X0, X22
	0x02827DB4 MOV X1, X31
	0x02827DB8 BL 0x338C698
	0x02827DBC ADRP X8, 0x18F3000
	0x02827DC0 LDR X8, [X8 + 0xD78]
	0x02827DC4 MOV X22, X0
	0x02827DC8 MOV X1, X31
	0x02827DCC LDR X8, [X8]
	0x02827DD0 MOV X0, X8
	0x02827DD4 BL 0x338C698
	0x02827DD8 MOV X1, X0
	0x02827DDC MOV X0, X22
	0x02827DE0 MOV X2, X31
	0x02827DE4 BL 0x3395194
	0x02827DE8 TBZ X0, 0x0, 0x2827EA0
	0x02827DEC STRH W21, [X31 + 0xC]
	0x02827DF0 LDR X0, [X23]
	0x02827DF4 LDRB W8, [X0 + 0x135]
	0x02827DF8 TBNZ X8, 0x0, 0x2827E00
	0x02827DFC BL 0x1C5C684
	0x02827E00 LDR X8, [X0 + 0xC0]
	0x02827E04 ADD X1, X31, 0xC
	0x02827E08 LDR X0, [X8 + 0x20]
	0x02827E0C BL 0x1C16E04
	0x02827E10 STRH W19, [X31 + 0x8]
	0x02827E14 LDR X8, [X23]
	0x02827E18 MOV X19, X0
	0x02827E1C LDRB W9, [X8 + 0x135]
	0x02827E20 TBNZ X9, 0x0, 0x2827E30
	0x02827E24 MOV X0, X8
	0x02827E28 BL 0x1C5C684
	0x02827E2C MOV X8, X0
	0x02827E30 LDR X8, [X8 + 0xC0]
	0x02827E34 ADD X1, X31, 0x8
	0x02827E38 LDR X0, [X8 + 0x20]
	0x02827E3C BL 0x1C16E04
	0x02827E40 CBZ X19, 0x28284B4
	0x02827E44 ADRP X21, 0x18D0000
	0x02827E48 LDR X21, [X21 + 0x628]
	0x02827E4C LDR X8, [X19]
	0x02827E50 LDR X1, [X21]
	0x02827E54 LDR X8, [X8 + 0x40]
	0x02827E58 LDR X9, [X1 + 0x40]
	0x02827E5C CMP X8, X9
	0x02827E60 B.NE 0x28284B8
	0x02827E64 MOV X20, X0
	0x02827E68 MOV X0, X19
	0x02827E6C BL 0x1C16E08
	0x02827E70 CBZ X20, 0x28284B4
	0x02827E74 LDR X8, [X20]
	0x02827E78 LDR X1, [X21]
	0x02827E7C LDR X8, [X8 + 0x40]
	0x02827E80 LDR X9, [X1 + 0x40]
	0x02827E84 CMP X8, X9
	0x02827E88 B.NE 0x28284C0
	0x02827E8C LDRH W19, [X0]
	0x02827E90 MOV X0, X20
	0x02827E94 BL 0x1C16E08
	0x02827E98 LDRH W8, [X0]
	0x02827E9C B 0x2827C98
	0x02827EA0 LDR X0, [X23]
	0x02827EA4 LDRB W8, [X0 + 0x135]
	0x02827EA8 TBNZ X8, 0x0, 0x2827EB0
	0x02827EAC BL 0x1C5C684
	0x02827EB0 LDR X8, [X24]
	0x02827EB4 LDR X9, [X0 + 0xC0]
	0x02827EB8 LDR W10, [X8 + 0xE0]
	0x02827EBC LDR X22, [X9 + 0x18]
	0x02827EC0 CBNZ W10, 0x2827ECC
	0x02827EC4 MOV X0, X8
	0x02827EC8 BL 0x1C16DFC
	0x02827ECC MOV X0, X22
	0x02827ED0 MOV X1, X31
	0x02827ED4 BL 0x338C698
	0x02827ED8 ADRP X8, 0x18F3000
	0x02827EDC LDR X8, [X8 + 0xDA0]
	0x02827EE0 MOV X22, X0
	0x02827EE4 MOV X1, X31
	0x02827EE8 LDR X8, [X8]
	0x02827EEC MOV X0, X8
	0x02827EF0 BL 0x338C698
	0x02827EF4 MOV X1, X0
	0x02827EF8 MOV X0, X22
	0x02827EFC MOV X2, X31
	0x02827F00 BL 0x3395194
	0x02827F04 TBZ X0, 0x0, 0x2827F6C
	0x02827F08 STRH W21, [X31 + 0xC]
	0x02827F0C LDR X0, [X23]
	0x02827F10 LDRB W8, [X0 + 0x135]
	0x02827F14 TBNZ X8, 0x0, 0x2827F1C
	0x02827F18 BL 0x1C5C684
	0x02827F1C LDR X8, [X0 + 0xC0]
	0x02827F20 ADD X1, X31, 0xC
	0x02827F24 LDR X0, [X8 + 0x20]
	0x02827F28 BL 0x1C16E04
	0x02827F2C STRH W19, [X31 + 0x8]
	0x02827F30 LDR X8, [X23]
	0x02827F34 MOV X19, X0
	0x02827F38 LDRB W9, [X8 + 0x135]
	0x02827F3C TBNZ X9, 0x0, 0x2827F4C
	0x02827F40 MOV X0, X8
	0x02827F44 BL 0x1C5C684
	0x02827F48 MOV X8, X0
	0x02827F4C LDR X8, [X8 + 0xC0]
	0x02827F50 ADD X1, X31, 0x8
	0x02827F54 LDR X0, [X8 + 0x20]
	0x02827F58 BL 0x1C16E04
	0x02827F5C CBZ X19, 0x28284B4
	0x02827F60 ADRP X21, 0x18D4000
	0x02827F64 LDR X21, [X21 + 0x720]
	0x02827F68 B 0x2828034
	0x02827F6C LDR X0, [X23]
	0x02827F70 LDRB W8, [X0 + 0x135]
	0x02827F74 TBNZ X8, 0x0, 0x2827F7C
	0x02827F78 BL 0x1C5C684
	0x02827F7C LDR X8, [X24]
	0x02827F80 LDR X9, [X0 + 0xC0]
	0x02827F84 LDR W10, [X8 + 0xE0]
	0x02827F88 LDR X22, [X9 + 0x18]
	0x02827F8C CBNZ W10, 0x2827F98
	0x02827F90 MOV X0, X8
	0x02827F94 BL 0x1C16DFC
	0x02827F98 MOV X0, X22
	0x02827F9C MOV X1, X31
	0x02827FA0 BL 0x338C698
	0x02827FA4 ADRP X8, 0x18F3000
	0x02827FA8 LDR X8, [X8 + 0xD80]
	0x02827FAC MOV X22, X0
	0x02827FB0 MOV X1, X31
	0x02827FB4 LDR X8, [X8]
	0x02827FB8 MOV X0, X8
	0x02827FBC BL 0x338C698
	0x02827FC0 MOV X1, X0
	0x02827FC4 MOV X0, X22
	0x02827FC8 MOV X2, X31
	0x02827FCC BL 0x3395194
	0x02827FD0 TBZ X0, 0x0, 0x2828088
	0x02827FD4 STRH W21, [X31 + 0xC]
	0x02827FD8 LDR X0, [X23]
	0x02827FDC LDRB W8, [X0 + 0x135]
	0x02827FE0 TBNZ X8, 0x0, 0x2827FE8
	0x02827FE4 BL 0x1C5C684
	0x02827FE8 LDR X8, [X0 + 0xC0]
	0x02827FEC ADD X1, X31, 0xC
	0x02827FF0 LDR X0, [X8 + 0x20]
	0x02827FF4 BL 0x1C16E04
	0x02827FF8 STRH W19, [X31 + 0x8]
	0x02827FFC LDR X8, [X23]
	0x02828000 MOV X19, X0
	0x02828004 LDRB W9, [X8 + 0x135]
	0x02828008 TBNZ X9, 0x0, 0x2828018
	0x0282800C MOV X0, X8
	0x02828010 BL 0x1C5C684
	0x02828014 MOV X8, X0
	0x02828018 LDR X8, [X8 + 0xC0]
	0x0282801C ADD X1, X31, 0x8
	0x02828020 LDR X0, [X8 + 0x20]
	0x02828024 BL 0x1C16E04
	0x02828028 CBZ X19, 0x28284B4
	0x0282802C ADRP X21, 0x18CB000
	0x02828030 LDR X21, [X21 + 0x758]
	0x02828034 LDR X8, [X19]
	0x02828038 LDR X1, [X21]
	0x0282803C LDR X8, [X8 + 0x40]
	0x02828040 LDR X9, [X1 + 0x40]
	0x02828044 CMP X8, X9
	0x02828048 B.NE 0x28284B8
	0x0282804C MOV X20, X0
	0x02828050 MOV X0, X19
	0x02828054 BL 0x1C16E08
	0x02828058 CBZ X20, 0x28284B4
	0x0282805C LDR X8, [X20]
	0x02828060 LDR X1, [X21]
	0x02828064 LDR X8, [X8 + 0x40]
	0x02828068 LDR X9, [X1 + 0x40]
	0x0282806C CMP X8, X9
	0x02828070 B.NE 0x28284C0
	0x02828074 LDR W19, [X0]
	0x02828078 MOV X0, X20
	0x0282807C BL 0x1C16E08
	0x02828080 LDR W8, [X0]
	0x02828084 B 0x2827C98
	0x02828088 LDR X0, [X23]
	0x0282808C LDRB W8, [X0 + 0x135]
	0x02828090 TBNZ X8, 0x0, 0x2828098
	0x02828094 BL 0x1C5C684
	0x02828098 LDR X8, [X24]
	0x0282809C LDR X9, [X0 + 0xC0]
	0x028280A0 LDR W10, [X8 + 0xE0]
	0x028280A4 LDR X22, [X9 + 0x18]
	0x028280A8 CBNZ W10, 0x28280B4
	0x028280AC MOV X0, X8
	0x028280B0 BL 0x1C16DFC
	0x028280B4 MOV X0, X22
	0x028280B8 MOV X1, X31
	0x028280BC BL 0x338C698
	0x028280C0 ADRP X8, 0x18F2000
	0x028280C4 LDR X8, [X8 + 0xDA8]
	0x028280C8 MOV X22, X0
	0x028280CC MOV X1, X31
	0x028280D0 LDR X8, [X8]
	0x028280D4 MOV X0, X8
	0x028280D8 BL 0x338C698
	0x028280DC MOV X1, X0
	0x028280E0 MOV X0, X22
	0x028280E4 MOV X2, X31
	0x028280E8 BL 0x3395194
	0x028280EC TBZ X0, 0x0, 0x2828154
	0x028280F0 STRH W21, [X31 + 0xC]
	0x028280F4 LDR X0, [X23]
	0x028280F8 LDRB W8, [X0 + 0x135]
	0x028280FC TBNZ X8, 0x0, 0x2828104
	0x02828100 BL 0x1C5C684
	0x02828104 LDR X8, [X0 + 0xC0]
	0x02828108 ADD X1, X31, 0xC
	0x0282810C LDR X0, [X8 + 0x20]
	0x02828110 BL 0x1C16E04
	0x02828114 STRH W19, [X31 + 0x8]
	0x02828118 LDR X8, [X23]
	0x0282811C MOV X19, X0
	0x02828120 LDRB W9, [X8 + 0x135]
	0x02828124 TBNZ X9, 0x0, 0x2828134
	0x02828128 MOV X0, X8
	0x0282812C BL 0x1C5C684
	0x02828130 MOV X8, X0
	0x02828134 LDR X8, [X8 + 0xC0]
	0x02828138 ADD X1, X31, 0x8
	0x0282813C LDR X0, [X8 + 0x20]
	0x02828140 BL 0x1C16E04
	0x02828144 CBZ X19, 0x28284B4
	0x02828148 ADRP X21, 0x18CC000
	0x0282814C LDR X21, [X21 + 0x758]
	0x02828150 B 0x282821C
	0x02828154 LDR X0, [X23]
	0x02828158 LDRB W8, [X0 + 0x135]
	0x0282815C TBNZ X8, 0x0, 0x2828164
	0x02828160 BL 0x1C5C684
	0x02828164 LDR X8, [X24]
	0x02828168 LDR X9, [X0 + 0xC0]
	0x0282816C LDR W10, [X8 + 0xE0]
	0x02828170 LDR X22, [X9 + 0x18]
	0x02828174 CBNZ W10, 0x2828180
	0x02828178 MOV X0, X8
	0x0282817C BL 0x1C16DFC
	0x02828180 MOV X0, X22
	0x02828184 MOV X1, X31
	0x02828188 BL 0x338C698
	0x0282818C ADRP X8, 0x18F2000
	0x02828190 LDR X8, [X8 + 0xD88]
	0x02828194 MOV X22, X0
	0x02828198 MOV X1, X31
	0x0282819C LDR X8, [X8]
	0x028281A0 MOV X0, X8
	0x028281A4 BL 0x338C698
	0x028281A8 MOV X1, X0
	0x028281AC MOV X0, X22
	0x028281B0 MOV X2, X31
	0x028281B4 BL 0x3395194
	0x028281B8 TBZ X0, 0x0, 0x2828274
	0x028281BC STRH W21, [X31 + 0xC]
	0x028281C0 LDR X0, [X23]
	0x028281C4 LDRB W8, [X0 + 0x135]
	0x028281C8 TBNZ X8, 0x0, 0x28281D0
	0x028281CC BL 0x1C5C684
	0x028281D0 LDR X8, [X0 + 0xC0]
	0x028281D4 ADD X1, X31, 0xC
	0x028281D8 LDR X0, [X8 + 0x20]
	0x028281DC BL 0x1C16E04
	0x028281E0 STRH W19, [X31 + 0x8]
	0x028281E4 LDR X8, [X23]
	0x028281E8 MOV X19, X0
	0x028281EC LDRB W9, [X8 + 0x135]
	0x028281F0 TBNZ X9, 0x0, 0x2828200
	0x028281F4 MOV X0, X8
	0x028281F8 BL 0x1C5C684
	0x028281FC MOV X8, X0
	0x02828200 LDR X8, [X8 + 0xC0]
	0x02828204 ADD X1, X31, 0x8
	0x02828208 LDR X0, [X8 + 0x20]
	0x0282820C BL 0x1C16E04
	0x02828210 CBZ X19, 0x28284B4
	0x02828214 ADRP X21, 0x18CD000
	0x02828218 LDR X21, [X21 + 0xA60]
	0x0282821C LDR X8, [X19]
	0x02828220 LDR X1, [X21]
	0x02828224 LDR X8, [X8 + 0x40]
	0x02828228 LDR X9, [X1 + 0x40]
	0x0282822C CMP X8, X9
	0x02828230 B.NE 0x28284B8
	0x02828234 MOV X20, X0
	0x02828238 MOV X0, X19
	0x0282823C BL 0x1C16E08
	0x02828240 CBZ X20, 0x28284B4
	0x02828244 LDR X8, [X20]
	0x02828248 LDR X1, [X21]
	0x0282824C LDR X8, [X8 + 0x40]
	0x02828250 LDR X9, [X1 + 0x40]
	0x02828254 CMP X8, X9
	0x02828258 B.NE 0x28284C0
	0x0282825C LDR X19, [X0]
	0x02828260 MOV X0, X20
	0x02828264 BL 0x1C16E08
	0x02828268 LDR X8, [X0]
	0x0282826C CMP X19, X8
	0x02828270 B 0x2827C9C
	0x02828274 LDR X0, [X23]
	0x02828278 LDRB W8, [X0 + 0x135]
	0x0282827C TBNZ X8, 0x0, 0x2828284
	0x02828280 BL 0x1C5C684
	0x02828284 LDR X8, [X24]
	0x02828288 LDR X9, [X0 + 0xC0]
	0x0282828C LDR W10, [X8 + 0xE0]
	0x02828290 LDR X22, [X9 + 0x18]
	0x02828294 CBNZ W10, 0x28282A0
	0x02828298 MOV X0, X8
	0x0282829C BL 0x1C16DFC
	0x028282A0 MOV X0, X22
	0x028282A4 MOV X1, X31
	0x028282A8 BL 0x338C698
	0x028282AC ADRP X8, 0x18F3000
	0x028282B0 LDR X8, [X8 + 0xA80]
	0x028282B4 MOV X22, X0
	0x028282B8 MOV X1, X31
	0x028282BC LDR X8, [X8]
	0x028282C0 MOV X0, X8
	0x028282C4 BL 0x338C698
	0x028282C8 MOV X1, X0
	0x028282CC MOV X0, X22
	0x028282D0 MOV X2, X31
	0x028282D4 BL 0x3395194
	0x028282D8 TBZ X0, 0x0, 0x2828394
	0x028282DC STRH W21, [X31 + 0xC]
	0x028282E0 LDR X0, [X23]
	0x028282E4 LDRB W8, [X0 + 0x135]
	0x028282E8 TBNZ X8, 0x0, 0x28282F0
	0x028282EC BL 0x1C5C684
	0x028282F0 LDR X8, [X0 + 0xC0]
	0x028282F4 ADD X1, X31, 0xC
	0x028282F8 LDR X0, [X8 + 0x20]
	0x028282FC BL 0x1C16E04
	0x02828300 STRH W19, [X31 + 0x8]
	0x02828304 LDR X8, [X23]
	0x02828308 MOV X19, X0
	0x0282830C LDRB W9, [X8 + 0x135]
	0x02828310 TBNZ X9, 0x0, 0x2828320
	0x02828314 MOV X0, X8
	0x02828318 BL 0x1C5C684
	0x0282831C MOV X8, X0
	0x02828320 LDR X8, [X8 + 0xC0]
	0x02828324 ADD X1, X31, 0x8
	0x02828328 LDR X0, [X8 + 0x20]
	0x0282832C BL 0x1C16E04
	0x02828330 CBZ X19, 0x28284B4
	0x02828334 ADRP X21, 0x18CB000
	0x02828338 LDR X21, [X21 + 0xA90]
	0x0282833C LDR X8, [X19]
	0x02828340 LDR X1, [X21]
	0x02828344 LDR X8, [X8 + 0x40]
	0x02828348 LDR X9, [X1 + 0x40]
	0x0282834C CMP X8, X9
	0x02828350 B.NE 0x28284B8
	0x02828354 MOV X20, X0
	0x02828358 MOV X0, X19
	0x0282835C BL 0x1C16E08
	0x02828360 CBZ X20, 0x28284B4
	0x02828364 LDR X8, [X20]
	0x02828368 LDR X1, [X21]
	0x0282836C LDR X8, [X8 + 0x40]
	0x02828370 LDR X9, [X1 + 0x40]
	0x02828374 CMP X8, X9
	0x02828378 B.NE 0x28284C0
	0x0282837C LDR V8, [X0]
	0x02828380 MOV X0, X20
	0x02828384 BL 0x1C16E08
	0x02828388 LDR V0, [X0]
	0x0282838C FCMP S8, S0
	0x02828390 B 0x2827C9C
	0x02828394 LDR X0, [X23]
	0x02828398 LDRB W8, [X0 + 0x135]
	0x0282839C TBNZ X8, 0x0, 0x28283A4
	0x028283A0 BL 0x1C5C684
	0x028283A4 LDR X8, [X24]
	0x028283A8 LDR X9, [X0 + 0xC0]
	0x028283AC LDR W10, [X8 + 0xE0]
	0x028283B0 LDR X22, [X9 + 0x18]
	0x028283B4 CBNZ W10, 0x28283C0
	0x028283B8 MOV X0, X8
	0x028283BC BL 0x1C16DFC
	0x028283C0 MOV X0, X22
	0x028283C4 MOV X1, X31
	0x028283C8 BL 0x338C698
	0x028283CC ADRP X8, 0x18F3000
	0x028283D0 LDR X8, [X8 + 0xA78]
	0x028283D4 MOV X22, X0
	0x028283D8 MOV X1, X31
	0x028283DC LDR X8, [X8]
	0x028283E0 MOV X0, X8
	0x028283E4 BL 0x338C698
	0x028283E8 MOV X1, X0
	0x028283EC MOV X0, X22
	0x028283F0 MOV X2, X31
	0x028283F4 BL 0x3395194
	0x028283F8 TBZ X0, 0x0, 0x28284C8
	0x028283FC STRH W21, [X31 + 0xC]
	0x02828400 LDR X0, [X23]
	0x02828404 LDRB W8, [X0 + 0x135]
	0x02828408 TBNZ X8, 0x0, 0x2828410
	0x0282840C BL 0x1C5C684
	0x02828410 LDR X8, [X0 + 0xC0]
	0x02828414 ADD X1, X31, 0xC
	0x02828418 LDR X0, [X8 + 0x20]
	0x0282841C BL 0x1C16E04
	0x02828420 STRH W19, [X31 + 0x8]
	0x02828424 LDR X8, [X23]
	0x02828428 MOV X19, X0
	0x0282842C LDRB W9, [X8 + 0x135]
	0x02828430 TBNZ X9, 0x0, 0x2828440
	0x02828434 MOV X0, X8
	0x02828438 BL 0x1C5C684
	0x0282843C MOV X8, X0
	0x02828440 LDR X8, [X8 + 0xC0]
	0x02828444 ADD X1, X31, 0x8
	0x02828448 LDR X0, [X8 + 0x20]
	0x0282844C BL 0x1C16E04
	0x02828450 CBZ X19, 0x28284B4
	0x02828454 ADRP X21, 0x18CE000
	0x02828458 LDR X21, [X21 + 0x978]
	0x0282845C LDR X8, [X19]
	0x02828460 LDR X1, [X21]
	0x02828464 LDR X8, [X8 + 0x40]
	0x02828468 LDR X9, [X1 + 0x40]
	0x0282846C CMP X8, X9
	0x02828470 B.NE 0x28284B8
	0x02828474 MOV X20, X0
	0x02828478 MOV X0, X19
	0x0282847C BL 0x1C16E08
	0x02828480 CBZ X20, 0x28284B4
	0x02828484 LDR X8, [X20]
	0x02828488 LDR X1, [X21]
	0x0282848C LDR X8, [X8 + 0x40]
	0x02828490 LDR X9, [X1 + 0x40]
	0x02828494 CMP X8, X9
	0x02828498 B.NE 0x28284C0
	0x0282849C LDR V8, [X0]
	0x028284A0 MOV X0, X20
	0x028284A4 BL 0x1C16E08
	0x028284A8 LDR V0, [X0]
	0x028284AC FCMP D8, D0
	0x028284B0 B 0x2827C9C
	0x028284B4 BL 0x1C16F20
	0x028284B8 MOV X0, X19
	0x028284BC BL 0x1C171E0
	0x028284C0 MOV X0, X20
	0x028284C4 BL 0x1C171E0
	0x028284C8 ADRP X0, 0x18CB000
	0x028284CC LDR X0, [X0 + 0xB40]
	0x028284D0 BL 0x1C16D08
	0x028284D4 BL 0x1C16F10
	0x028284D8 MOV X19, X0
	0x028284DC ADRP X0, 0x18F4000
	0x028284E0 LDR X0, [X0 + 0xA90]
	0x028284E4 BL 0x1C16D08
	0x028284E8 MOV X1, X0
	0x028284EC MOV X0, X19
	0x028284F0 MOV X2, X31
	0x028284F4 BL 0x3379A44
	0x028284F8 MOV X0, X19
	0x028284FC MOV X1, X20
	0x02828500 BL 0x1C16DEC
	0x02828504 STR X30, [X31 - 0x30]!
	0x02828508 STP X22, X21, [X31 + 0x10]
	0x0282850C STP X20, X19, [X31 + 0x20]
	0x02828510 ADRP X20, 0x1BB2000
	0x02828514 LDRB W8, [X20 + 0xA7D]
	0x02828518 MOV X19, X0
	0x0282851C TBNZ X8, 0x0, 0x2828624
	0x02828520 ADRP X0, 0x18F2000
	0x02828524 LDR X0, [X0 + 0xD68]
	0x02828528 BL 0x1C16CF4
	0x0282852C ADRP X0, 0x18CC000
	0x02828530 LDR X0, [X0 + 0x9D8]
	0x02828534 BL 0x1C16CF4
	0x02828538 ADRP X0, 0x18F3000
	0x0282853C LDR X0, [X0 + 0xA78]
	0x02828540 BL 0x1C16CF4
	0x02828544 ADRP X0, 0x18CE000
	0x02828548 LDR X0, [X0 + 0x978]
	0x0282854C BL 0x1C16CF4
	0x02828550 ADRP X0, 0x18F2000
	0x02828554 LDR X0, [X0 + 0xD78]
	0x02828558 BL 0x1C16CF4
	0x0282855C ADRP X0, 0x18CF000
	0x02828560 LDR X0, [X0 + 0x628]
	0x02828564 BL 0x1C16CF4
	0x02828568 ADRP X0, 0x18F2000
	0x0282856C LDR X0, [X0 + 0xD80]
	0x02828570 BL 0x1C16CF4
	0x02828574 ADRP X0, 0x18CB000
	0x02828578 LDR X0, [X0 + 0x758]
	0x0282857C BL 0x1C16CF4
	0x02828580 ADRP X0, 0x18F2000
	0x02828584 LDR X0, [X0 + 0xD88]
	0x02828588 BL 0x1C16CF4
	0x0282858C ADRP X0, 0x18CD000
	0x02828590 LDR X0, [X0 + 0xA60]
	0x02828594 BL 0x1C16CF4
	0x02828598 ADRP X0, 0x18F2000
	0x0282859C LDR X0, [X0 + 0xD90]
	0x028285A0 BL 0x1C16CF4
	0x028285A4 ADRP X0, 0x18F4000
	0x028285A8 LDR X0, [X0 + 0x6B0]
	0x028285AC BL 0x1C16CF4
	0x028285B0 ADRP X0, 0x18F3000
	0x028285B4 LDR X0, [X0 + 0xA80]
	0x028285B8 BL 0x1C16CF4
	0x028285BC ADRP X0, 0x18CB000
	0x028285C0 LDR X0, [X0 + 0xA90]
	0x028285C4 BL 0x1C16CF4
	0x028285C8 ADRP X0, 0x18CB000
	0x028285CC LDR X0, [X0 + 0x6C0]
	0x028285D0 BL 0x1C16CF4
	0x028285D4 ADRP X0, 0x18F2000
	0x028285D8 LDR X0, [X0 + 0xD98]
	0x028285DC BL 0x1C16CF4
	0x028285E0 ADRP X0, 0x18D0000
	0x028285E4 LDR X0, [X0 + 0x658]
	0x028285E8 BL 0x1C16CF4
	0x028285EC ADRP X0, 0x18F2000
	0x028285F0 LDR X0, [X0 + 0xDA0]
	0x028285F4 BL 0x1C16CF4
	0x028285F8 ADRP X0, 0x18D3000
	0x028285FC LDR X0, [X0 + 0x720]
	0x02828600 BL 0x1C16CF4
	0x02828604 ADRP X0, 0x18F2000
	0x02828608 LDR X0, [X0 + 0xDA8]
	0x0282860C BL 0x1C16CF4
	0x02828610 ADRP X0, 0x18CC000
	0x02828614 LDR X0, [X0 + 0x758]
	0x02828618 BL 0x1C16CF4
	0x0282861C MOVZ W8, 0x1
	0x02828620 STRB W8, [X20 + 0xA7D]
	0x02828624 LDR X0, [X19 + 0x20]
	0x02828628 ADRP X21, 0x18CB000
	0x0282862C LDRB W8, [X0 + 0x135]
	0x02828630 LDR X21, [X21 + 0x6C0]
	0x02828634 TBNZ X8, 0x0, 0x282863C
	0x02828638 BL 0x1C5C684
	0x0282863C LDR X8, [X21]
	0x02828640 LDR X9, [X0 + 0xC0]
	0x02828644 ADRP X22, 0x18F2000
	0x02828648 LDR W10, [X8 + 0xE0]
	0x0282864C LDR X20, [X9 + 0x18]
	0x02828650 LDR X22, [X22 + 0xD68]
	0x02828654 CBNZ W10, 0x2828660
	0x02828658 MOV X0, X8
	0x0282865C BL 0x1C16DFC
	0x02828660 MOV X0, X20
	0x02828664 MOV X1, X31
	0x02828668 BL 0x338C698
	0x0282866C LDR X8, [X22]
	0x02828670 MOV X20, X0
	0x02828674 MOV X1, X31
	0x02828678 MOV X0, X8
	0x0282867C BL 0x338C698
	0x02828680 MOV X1, X0
	0x02828684 MOV X0, X20
	0x02828688 MOV X2, X31
	0x0282868C BL 0x3395194
	0x02828690 TBZ X0, 0x0, 0x28286A0
	0x02828694 ADRP X8, 0x18CC000
	0x02828698 LDR X8, [X8 + 0x9D8]
	0x0282869C B 0x2828710
	0x028286A0 LDR X0, [X19 + 0x20]
	0x028286A4 LDRB W8, [X0 + 0x135]
	0x028286A8 TBNZ X8, 0x0, 0x28286B0
	0x028286AC BL 0x1C5C684
	0x028286B0 LDR X8, [X21]
	0x028286B4 LDR X9, [X0 + 0xC0]
	0x028286B8 LDR W10, [X8 + 0xE0]
	0x028286BC LDR X20, [X9 + 0x18]
	0x028286C0 CBNZ W10, 0x28286CC
	0x028286C4 MOV X0, X8
	0x028286C8 BL 0x1C16DFC
	0x028286CC MOV X0, X20
	0x028286D0 MOV X1, X31
	0x028286D4 BL 0x338C698
	0x028286D8 ADRP X8, 0x18F2000
	0x028286DC LDR X8, [X8 + 0xD90]
	0x028286E0 MOV X20, X0
	0x028286E4 MOV X1, X31
	0x028286E8 LDR X8, [X8]
	0x028286EC MOV X0, X8
	0x028286F0 BL 0x338C698
	0x028286F4 MOV X1, X0
	0x028286F8 MOV X0, X20
	0x028286FC MOV X2, X31
	0x02828700 BL 0x3395194
	0x02828704 TBZ X0, 0x0, 0x2828790
	0x02828708 ADRP X8, 0x18F4000
	0x0282870C LDR X8, [X8 + 0x6B0]
	0x02828710 LDR X0, [X8]
	0x02828714 MOVZ W8, 0x1
	0x02828718 STRB W8, [X31 + 0x8]
	0x0282871C ADD X1, X31, 0x8
	0x02828720 BL 0x1C16E04
	0x02828724 LDR X8, [X19 + 0x20]
	0x02828728 MOV X19, X0
	0x0282872C LDRB W9, [X8 + 0x135]
	0x02828730 TBNZ X9, 0x0, 0x2828740
	0x02828734 MOV X0, X8
	0x02828738 BL 0x1C5C684
	0x0282873C MOV X8, X0
	0x02828740 LDR X8, [X8 + 0xC0]
	0x02828744 LDR X1, [X8 + 0x20]
	0x02828748 LDRB W8, [X1 + 0x135]
	0x0282874C TBNZ X8, 0x0, 0x282875C
	0x02828750 MOV X0, X1
	0x02828754 BL 0x1C5C684
	0x02828758 MOV X1, X0
	0x0282875C CBZ X19, 0x2828B64
	0x02828760 LDR X8, [X19]
	0x02828764 LDR X9, [X1 + 0x40]
	0x02828768 MOV X0, X19
	0x0282876C LDR X8, [X8 + 0x40]
	0x02828770 CMP X8, X9
	0x02828774 B.NE 0x2828B68
	0x02828778 BL 0x1C16E08
	0x0282877C LDRH W0, [X0]
	0x02828780 LDP X20, X19, [X31 + 0x20]
	0x02828784 LDP X22, X21, [X31 + 0x10]
	0x02828788 LDR X30, [X31], #0x30
	0x0282878C RET
	0x02828790 LDR X0, [X19 + 0x20]
	0x02828794 LDRB W8, [X0 + 0x135]
	0x02828798 TBNZ X8, 0x0, 0x28287A0
	0x0282879C BL 0x1C5C684
	0x028287A0 LDR X8, [X21]
	0x028287A4 LDR X9, [X0 + 0xC0]
	0x028287A8 LDR W10, [X8 + 0xE0]
	0x028287AC LDR X20, [X9 + 0x18]
	0x028287B0 CBNZ W10, 0x28287BC
	0x028287B4 MOV X0, X8
	0x028287B8 BL 0x1C16DFC
	0x028287BC MOV X0, X20
	0x028287C0 MOV X1, X31
	0x028287C4 BL 0x338C698
	0x028287C8 ADRP X8, 0x18F2000
	0x028287CC LDR X8, [X8 + 0xD98]
	0x028287D0 MOV X20, X0
	0x028287D4 MOV X1, X31
	0x028287D8 LDR X8, [X8]
	0x028287DC MOV X0, X8
	0x028287E0 BL 0x338C698
	0x028287E4 MOV X1, X0
	0x028287E8 MOV X0, X20
	0x028287EC MOV X2, X31
	0x028287F0 BL 0x3395194
	0x028287F4 TBZ X0, 0x0, 0x2828804
	0x028287F8 ADRP X8, 0x18D0000
	0x028287FC LDR X8, [X8 + 0x658]
	0x02828800 B 0x2828874
	0x02828804 LDR X0, [X19 + 0x20]
	0x02828808 LDRB W8, [X0 + 0x135]
	0x0282880C TBNZ X8, 0x0, 0x2828814
	0x02828810 BL 0x1C5C684
	0x02828814 LDR X8, [X21]
	0x02828818 LDR X9, [X0 + 0xC0]
	0x0282881C LDR W10, [X8 + 0xE0]
	0x02828820 LDR X20, [X9 + 0x18]
	0x02828824 CBNZ W10, 0x2828830
	0x02828828 MOV X0, X8
	0x0282882C BL 0x1C16DFC
	0x02828830 MOV X0, X20
	0x02828834 MOV X1, X31
	0x02828838 BL 0x338C698
	0x0282883C ADRP X8, 0x18F2000
	0x02828840 LDR X8, [X8 + 0xD78]
	0x02828844 MOV X20, X0
	0x02828848 MOV X1, X31
	0x0282884C LDR X8, [X8]
	0x02828850 MOV X0, X8
	0x02828854 BL 0x338C698
	0x02828858 MOV X1, X0
	0x0282885C MOV X0, X20
	0x02828860 MOV X2, X31
	0x02828864 BL 0x3395194
	0x02828868 TBZ X0, 0x0, 0x2828884
	0x0282886C ADRP X8, 0x18CF000
	0x02828870 LDR X8, [X8 + 0x628]
	0x02828874 LDR X0, [X8]
	0x02828878 MOVZ W8, 0x1
	0x0282887C STRH W8, [X31 + 0x8]
	0x02828880 B 0x282871C
	0x02828884 LDR X0, [X19 + 0x20]
	0x02828888 LDRB W8, [X0 + 0x135]
	0x0282888C TBNZ X8, 0x0, 0x2828894
	0x02828890 BL 0x1C5C684
	0x02828894 LDR X8, [X21]
	0x02828898 LDR X9, [X0 + 0xC0]
	0x0282889C LDR W10, [X8 + 0xE0]
	0x028288A0 LDR X20, [X9 + 0x18]
	0x028288A4 CBNZ W10, 0x28288B0
	0x028288A8 MOV X0, X8
	0x028288AC BL 0x1C16DFC
	0x028288B0 MOV X0, X20
	0x028288B4 MOV X1, X31
	0x028288B8 BL 0x338C698
	0x028288BC ADRP X8, 0x18F2000
	0x028288C0 LDR X8, [X8 + 0xDA0]
	0x028288C4 MOV X20, X0
	0x028288C8 MOV X1, X31
	0x028288CC LDR X8, [X8]
	0x028288D0 MOV X0, X8
	0x028288D4 BL 0x338C698
	0x028288D8 MOV X1, X0
	0x028288DC MOV X0, X20
	0x028288E0 MOV X2, X31
	0x028288E4 BL 0x3395194
	0x028288E8 TBZ X0, 0x0, 0x28288F8
	0x028288EC ADRP X8, 0x18D3000
	0x028288F0 LDR X8, [X8 + 0x720]
	0x028288F4 B 0x2828968
	0x028288F8 LDR X0, [X19 + 0x20]
	0x028288FC LDRB W8, [X0 + 0x135]
	0x02828900 TBNZ X8, 0x0, 0x2828908
	0x02828904 BL 0x1C5C684
	0x02828908 LDR X8, [X21]
	0x0282890C LDR X9, [X0 + 0xC0]
	0x02828910 LDR W10, [X8 + 0xE0]
	0x02828914 LDR X20, [X9 + 0x18]
	0x02828918 CBNZ W10, 0x2828924
	0x0282891C MOV X0, X8
	0x02828920 BL 0x1C16DFC
	0x02828924 MOV X0, X20
	0x02828928 MOV X1, X31
	0x0282892C BL 0x338C698
	0x02828930 ADRP X8, 0x18F2000
	0x02828934 LDR X8, [X8 + 0xD80]
	0x02828938 MOV X20, X0
	0x0282893C MOV X1, X31
	0x02828940 LDR X8, [X8]
	0x02828944 MOV X0, X8
	0x02828948 BL 0x338C698
	0x0282894C MOV X1, X0
	0x02828950 MOV X0, X20
	0x02828954 MOV X2, X31
	0x02828958 BL 0x3395194
	0x0282895C TBZ X0, 0x0, 0x2828978
	0x02828960 ADRP X8, 0x18CB000
	0x02828964 LDR X8, [X8 + 0x758]
	0x02828968 LDR X0, [X8]
	0x0282896C MOVZ W8, 0x1
	0x02828970 STR W8, [X31 + 0x8]
	0x02828974 B 0x282871C

ISIL:
	001 Move [X31-112], D9
	002 Move [X31-104], D8
	003 Move [X31+16], X29
	004 Move [X31+24], X30
	005 Move [X31+32], X28
	006 Move [X31+40], X27
	007 Move [X31+48], X26
	008 Move [X31+56], X25
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Add X29, X31, 16
	016 Subtract X31, X31, 112
	017 NotImplemented "Instruction MRS not yet implemented."
	018 Move X8, [X25+40]
	019 Move X24, 0x1BB5000
	020 Move X19, X4
	021 Move X20, X3
	022 Move [X29-24], X8
	023 Move W8, [X24+2683]
	024 Move X22, X2
	025 Move X21, X1
	026 Move X23, X0
	027 Move [X29-56], X0
	028 Move [X29-48], X1
	029 Move [X29-72], X2
	030 Move [X29-64], X3
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {70}
	035 Move X0, 0x18F5000
	036 Move X0, [X0+3432]
	037 Call 0x1C17CF4
	038 Move X0, 0x18F6000
	039 Move X0, [X0+2680]
	040 Call 0x1C17CF4
	041 Move X0, 0x18F5000
	042 Move X0, [X0+3448]
	043 Call 0x1C17CF4
	044 Move X0, 0x18F5000
	045 Move X0, [X0+3456]
	046 Call 0x1C17CF4
	047 Move X0, 0x18F5000
	048 Move X0, [X0+3464]
	049 Call 0x1C17CF4
	050 Move X0, 0x18F5000
	051 Move X0, [X0+3472]
	052 Call 0x1C17CF4
	053 Move X0, 0x18F6000
	054 Move X0, [X0+2688]
	055 Call 0x1C17CF4
	056 Move X0, 0x18CE000
	057 Move X0, [X0+1728]
	058 Call 0x1C17CF4
	059 Move X0, 0x18F5000
	060 Move X0, [X0+3480]
	061 Call 0x1C17CF4
	062 Move X0, 0x18F5000
	063 Move X0, [X0+3488]
	064 Call 0x1C17CF4
	065 Move X0, 0x18F5000
	066 Move X0, [X0+3496]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X24+2683], W8
	070 Move X26, 0x18CE000
	071 Move X27, 0x18F5000
	072 Move X26, [X26+1728]
	073 Move X27, [X27+3432]
	074 Move X0, X31
	075 NotImplemented "Instruction STURB not yet implemented."
	076 NotImplemented "Instruction STURB not yet implemented."
	077 NotImplemented "Instruction STURH not yet implemented."
	078 Move [X29-92], W31
	079 Move [X29-104], X31
	080 Call Vector.get_IsHardwareAccelerated
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {192}
	085 Move X23, X19
	086 Add X23, X23, 32
	087 Move X0, [X23]
	088 Move W8, [X0+309]
	089 Move TEMP, X8
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {94}
	093 Call 0x1C5D684
	094 Move X8, [X26]
	095 Move X9, [X0+192]
	096 Move W10, [X8+224]
	097 Move X20, [X9+24]
	098 Compare W10, 0
	099 JumpIfNotEqual {102}
	100 Move X0, X8
	101 Call 0x1C17DFC
	102 Move X0, X20
	103 Move X1, X31
	104 Call Type.GetTypeFromHandle, X0
	105 Move X8, [X27]
	106 Move X20, X0
	107 Move X1, X31
	108 Move X0, X8
	109 Call Type.GetTypeFromHandle, X0
	110 Move X1, X0
	111 Move X0, X20
	112 Move X2, X31
	113 Call Type.op_Equality, X0, X1
	114 Move X8, [X23]
	115 Move W20, W0
	116 Move W9, [X8+309]
	117 Move TEMP, X9
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfEqual {124}
	121 Move X0, X8
	122 Call 0x1C5D684
	123 Move X8, X0
	124 Move X8, [X8+192]
	125 Move TEMP, X20
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {322}
	129 Move X0, [X8+8]
	130 Move W8, [X0+309]
	131 Move TEMP, X8
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfEqual {136}
	135 Call 0x1C5D684
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1C17DFC
	140 Move X0, [X23]
	141 Move W8, [X0+309]
	142 Move TEMP, X8
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfEqual {147}
	146 Call 0x1C5D684
	147 Move X8, [X0+192]
	148 Move X19, [X8+40]
	149 Move X0, [X19+32]
	150 Move W8, [X0+309]
	151 Move TEMP, X8
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfEqual {156}
	155 Call 0x1C5D684
	156 Move X8, [X0+192]
	157 Move X0, [X8+8]
	158 Move W8, [X0+309]
	159 Move TEMP, X8
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfEqual {164}
	163 Call 0x1C5D684
	164 Move W8, [X0+224]
	165 Compare W8, 0
	166 JumpIfNotEqual {168}
	167 Call 0x1C17DFC
	168 Move X0, [X19+32]
	169 Move W8, [X0+309]
	170 Move TEMP, X8
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfEqual {175}
	174 Call 0x1C5D684
	175 Move X8, [X0+192]
	176 Move X0, [X8+8]
	177 Move W8, [X0+309]
	178 Move TEMP, X8
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfEqual {183}
	182 Call 0x1C5D684
	183 Move X8, [X0+184]
	184 NotImplemented "Instruction LDRSW not yet implemented."
	185 Compare W2, 0
	186 JumpIfEqual {603}
	187 Add X9, X2, 15
	188 Add X8, X31, 0
	189 And X9, X9, 0xFFFFFFFF
	190 Subtract X19, X8, X9
	191 Add X31, X19, 0
	192 NotImplemented "Instruction STURB not yet implemented."
	193 NotImplemented "Instruction STURB not yet implemented."
	194 NotImplemented "Instruction STURH not yet implemented."
	195 Move [X29-92], W31
	196 Move [X29-104], X31
	197 Move X0, [X19+32]
	198 Move W8, [X0+309]
	199 Move TEMP, X8
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfEqual {204}
	203 Call 0x1C5D684
	204 Move X8, [X26]
	205 Move X9, [X0+192]
	206 Move W10, [X8+224]
	207 Move X24, [X9+24]
	208 Compare W10, 0
	209 JumpIfNotEqual {212}
	210 Move X0, X8
	211 Call 0x1C17DFC
	212 Move X0, X24
	213 Move X1, X31
	214 Call Type.GetTypeFromHandle, X0
	215 Move X8, [X27]
	216 Move X24, X0
	217 Move X1, X31
	218 Move X0, X8
	219 Call Type.GetTypeFromHandle, X0
	220 Move X1, X0
	221 Move X0, X24
	222 Move X2, X31
	223 Call Type.op_Equality, X0, X1
	224 Move TEMP, X0
	225 And TEMP, TEMP, 1
	226 Compare TEMP, 1
	227 JumpIfEqual {261}
	228 Move X0, [X19+32]
	229 Move W8, [X0+309]
	230 Move TEMP, X8
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfEqual {235}
	234 Call 0x1C5D684
	235 Move X8, [X26]
	236 Move X9, [X0+192]
	237 Move W10, [X8+224]
	238 Move X24, [X9+24]
	239 Compare W10, 0
	240 JumpIfNotEqual {243}
	241 Move X0, X8
	242 Call 0x1C17DFC
	243 Move X0, X24
	244 Move X1, X31
	245 Call Type.GetTypeFromHandle, X0
	246 Move X8, 0x18F5000
	247 Move X8, [X8+3472]
	248 Move X24, X0
	249 Move X1, X31
	250 Move X8, [X8]
	251 Move X0, X8
	252 Call Type.GetTypeFromHandle, X0
	253 Move X1, X0
	254 Move X0, X24
	255 Move X2, X31
	256 Call Type.op_Equality, X0, X1
	257 Move TEMP, X0
	258 And TEMP, TEMP, 1
	259 Compare TEMP, 1
	260 JumpIfNotEqual {420}
	261 NotImplemented "Instruction LDURB not yet implemented."
	262 NotImplemented "Instruction LDURB not yet implemented."
	263 NotImplemented "Instruction LDURB not yet implemented."
	264 NotImplemented "Instruction LDURB not yet implemented."
	265 NotImplemented "Instruction LDURB not yet implemented."
	266 NotImplemented "Instruction LDURB not yet implemented."
	267 NotImplemented "Instruction LDURB not yet implemented."
	268 NotImplemented "Instruction LDURB not yet implemented."
	269 NotImplemented "Instruction LDURB not yet implemented."
	270 NotImplemented "Instruction LDURB not yet implemented."
	271 NotImplemented "Instruction CMP not yet implemented."
	272 NotImplemented "Instruction LDURB not yet implemented."
	273 NotImplemented "Instruction CSINV not yet implemented."
	274 NotImplemented "Instruction CMP not yet implemented."
	275 NotImplemented "Instruction LDURB not yet implemented."
	276 NotImplemented "Instruction CSINV not yet implemented."
	277 NotImplemented "Instruction CMP not yet implemented."
	278 NotImplemented "Instruction CSINV not yet implemented."
	279 NotImplemented "Instruction CMP not yet implemented."
	280 NotImplemented "Instruction LDURB not yet implemented."
	281 NotImplemented "Instruction LDURB not yet implemented."
	282 NotImplemented "Instruction CSINV not yet implemented."
	283 NotImplemented "Instruction CMP not yet implemented."
	284 NotImplemented "Instruction LDURB not yet implemented."
	285 NotImplemented "Instruction CSINV not yet implemented."
	286 NotImplemented "Instruction CMP not yet implemented."
	287 NotImplemented "Instruction LDURB not yet implemented."
	288 NotImplemented "Instruction LDUR not yet implemented."
	289 NotImplemented "Instruction LDUR not yet implemented."
	290 NotImplemented "Instruction CSINV not yet implemented."
	291 NotImplemented "Instruction CMP not yet implemented."
	292 NotImplemented "Instruction CSINV not yet implemented."
	293 NotImplemented "Instruction CMP not yet implemented."
	294 NotImplemented "Instruction INVALID not yet implemented."
	295 NotImplemented "Instruction CSINV not yet implemented."
	296 NotImplemented "Instruction STURB not yet implemented."
	297 NotImplemented "Instruction STURB not yet implemented."
	298 NotImplemented "Instruction STURB not yet implemented."
	299 NotImplemented "Instruction STURB not yet implemented."
	300 NotImplemented "Instruction STURB not yet implemented."
	301 NotImplemented "Instruction STURB not yet implemented."
	302 NotImplemented "Instruction STURB not yet implemented."
	303 NotImplemented "Instruction STURB not yet implemented."
	304 Move [X29-104], D0
	305 Move X0, [X19+32]
	306 Move W8, [X0+309]
	307 Move TEMP, X8
	308 And TEMP, TEMP, 1
	309 Compare TEMP, 1
	310 JumpIfEqual {312}
	311 Call 0x1C5D684
	312 NotImplemented "Instruction LDURB not yet implemented."
	313 NotImplemented "Instruction LDURB not yet implemented."
	314 NotImplemented "Instruction LDURH not yet implemented."
	315 NotImplemented "Instruction LDUR not yet implemented."
	316 NotImplemented "Instruction LDUR not yet implemented."
	317 NotImplemented "Instruction STURB not yet implemented."
	318 NotImplemented "Instruction STURB not yet implemented."
	319 NotImplemented "Instruction STURH not yet implemented."
	320 Move [X29-36], W11
	321 Move [X29-32], X12
	322 Move X0, [X26]
	323 Move X20, [X8+24]
	324 Move W9, [X0+224]
	325 Compare W9, 0
	326 JumpIfNotEqual {328}
	327 Call 0x1C17DFC
	328 Move X0, X20
	329 Move X1, X31
	330 Call Type.GetTypeFromHandle, X0
	331 Move X8, 0x18F5000
	332 Move X8, [X8+3472]
	333 Move X20, X0
	334 Move X1, X31
	335 Move X8, [X8]
	336 Move X0, X8
	337 Call Type.GetTypeFromHandle, X0
	338 Move X1, X0
	339 Move X0, X20
	340 Move X2, X31
	341 Call Type.op_Equality, X0, X1
	342 Move X8, [X23]
	343 Move W20, W0
	344 Move W9, [X8+309]
	345 Move TEMP, X9
	346 And TEMP, TEMP, 1
	347 Compare TEMP, 1
	348 JumpIfEqual {352}
	349 Move X0, X8
	350 Call 0x1C5D684
	351 Move X8, X0
	352 Move X8, [X8+192]
	353 Move TEMP, X20
	354 And TEMP, TEMP, 1
	355 Compare TEMP, 1
	356 JumpIfNotEqual {502}
	357 Move X0, [X8+8]
	358 Move W8, [X0+309]
	359 Move TEMP, X8
	360 And TEMP, TEMP, 1
	361 Compare TEMP, 1
	362 JumpIfEqual {364}
	363 Call 0x1C5D684
	364 Move W8, [X0+224]
	365 Compare W8, 0
	366 JumpIfNotEqual {368}
	367 Call 0x1C17DFC
	368 Move X0, [X23]
	369 Move W8, [X0+309]
	370 Move TEMP, X8
	371 And TEMP, TEMP, 1
	372 Compare TEMP, 1
	373 JumpIfEqual {375}
	374 Call 0x1C5D684
	375 Move X8, [X0+192]
	376 Move X19, [X8+40]
	377 Move X0, [X19+32]
	378 Move W8, [X0+309]
	379 Move TEMP, X8
	380 And TEMP, TEMP, 1
	381 Compare TEMP, 1
	382 JumpIfEqual {384}
	383 Call 0x1C5D684
	384 Move X8, [X0+192]
	385 Move X0, [X8+8]
	386 Move W8, [X0+309]
	387 Move TEMP, X8
	388 And TEMP, TEMP, 1
	389 Compare TEMP, 1
	390 JumpIfEqual {392}
	391 Call 0x1C5D684
	392 Move W8, [X0+224]
	393 Compare W8, 0
	394 JumpIfNotEqual {396}
	395 Call 0x1C17DFC
	396 Move X0, [X19+32]
	397 Move W8, [X0+309]
	398 Move TEMP, X8
	399 And TEMP, TEMP, 1
	400 Compare TEMP, 1
	401 JumpIfEqual {403}
	402 Call 0x1C5D684
	403 Move X8, [X0+192]
	404 Move X0, [X8+8]
	405 Move W8, [X0+309]
	406 Move TEMP, X8
	407 And TEMP, TEMP, 1
	408 Compare TEMP, 1
	409 JumpIfEqual {411}
	410 Call 0x1C5D684
	411 Move X8, [X0+184]
	412 NotImplemented "Instruction LDRSW not yet implemented."
	413 Compare W2, 0
	414 JumpIfEqual {937}
	415 Add X9, X2, 15
	416 Add X8, X31, 0
	417 And X9, X9, 0xFFFFFFFF
	418 Subtract X19, X8, X9
	419 Add X31, X19, 0
	420 Move X0, [X19+32]
	421 Move W8, [X0+309]
	422 Move TEMP, X8
	423 And TEMP, TEMP, 1
	424 Compare TEMP, 1
	425 JumpIfEqual {427}
	426 Call 0x1C5D684
	427 Move X8, [X26]
	428 Move X9, [X0+192]
	429 Move W10, [X8+224]
	430 Move X24, [X9+24]
	431 Compare W10, 0
	432 JumpIfNotEqual {435}
	433 Move X0, X8
	434 Call 0x1C17DFC
	435 Move X0, X24
	436 Move X1, X31
	437 Move X28, X22
	438 ShiftRight X28, 32
	439 And X28, X28, 0x7FFFFFFF
	440 Move X27, X20
	441 ShiftRight X27, 32
	442 And X27, X27, 0x7FFFFFFF
	443 Call Type.GetTypeFromHandle, X0
	444 Move X8, 0x18F5000
	445 Move X8, [X8+3480]
	446 Move X24, X0
	447 Move X1, X31
	448 Move X8, [X8]
	449 Move X0, X8
	450 Call Type.GetTypeFromHandle, X0
	451 Move X1, X0
	452 Move X0, X24
	453 Move X2, X31
	454 Call Type.op_Equality, X0, X1
	455 Move TEMP, X0
	456 And TEMP, TEMP, 1
	457 Compare TEMP, 1
	458 JumpIfNotEqual {737}
	459 And W13, W23, 0xFFFF
	460 Move X11, X23
	461 ShiftRight X11, 16
	462 And X11, X11, 0x7FFFFFFF
	463 NotImplemented "Instruction CMP not yet implemented."
	464 Move X12, X23
	465 ShiftRight X12, 32
	466 And X12, X12, 0x7FFF
	467 And W14, W21, 0xFFFF
	468 NotImplemented "Instruction CSINV not yet implemented."
	469 NotImplemented "Instruction CMP not yet implemented."
	470 NotImplemented "Instruction LDURH not yet implemented."
	471 Move X9, X22
	472 ShiftRight X9, 48
	473 And X9, X9, 0x7FFFFFFF
	474 Move X10, X23
	475 ShiftRight X10, 48
	476 And X10, X10, 0x7FFFFFFF
	477 NotImplemented "Instruction CSINV not yet implemented."
	478 NotImplemented "Instruction CMP not yet implemented."
	479 NotImplemented "Instruction LDURH not yet implemented."
	480 NotImplemented "Instruction LDURH not yet implemented."
	481 NotImplemented "Instruction STURH not yet implemented."
	482 NotImplemented "Instruction CSINV not yet implemented."
	483 NotImplemented "Instruction CMP not yet implemented."
	484 NotImplemented "Instruction CSINV not yet implemented."
	485 NotImplemented "Instruction CMP not yet implemented."
	486 NotImplemented "Instruction STURH not yet implemented."
	487 NotImplemented "Instruction CSINV not yet implemented."
	488 NotImplemented "Instruction CMP not yet implemented."
	489 Move X8, X20
	490 ShiftRight X8, 48
	491 And X8, X8, 0x7FFFFFFF
	492 NotImplemented "Instruction STURH not yet implemented."
	493 NotImplemented "Instruction CSINV not yet implemented."
	494 NotImplemented "Instruction CMP not yet implemented."
	495 NotImplemented "Instruction STURH not yet implemented."
	496 NotImplemented "Instruction CSINV not yet implemented."
	497 NotImplemented "Instruction CMP not yet implemented."
	498 NotImplemented "Instruction STURB not yet implemented."
	499 NotImplemented "Instruction STURB not yet implemented."
	500 NotImplemented "Instruction STURH not yet implemented."
	501 NotImplemented "Instruction STURH not yet implemented."
	502 Move X0, [X26]
	503 Move X20, [X8+24]
	504 Move W9, [X0+224]
	505 Compare W9, 0
	506 JumpIfNotEqual {508}
	507 Call 0x1C17DFC
	508 Move X0, X20
	509 Move X1, X31
	510 Call Type.GetTypeFromHandle, X0
	511 Move X8, 0x18F5000
	512 Move X8, [X8+3480]
	513 Move X20, X0
	514 Move X1, X31
	515 Move X8, [X8]
	516 Move X0, X8
	517 Call Type.GetTypeFromHandle, X0
	518 Move X1, X0
	519 Move X0, X20
	520 Move X2, X31
	521 Call Type.op_Equality, X0, X1
	522 Move X8, [X23]
	523 Move W20, W0
	524 Move W9, [X8+309]
	525 Move TEMP, X9
	526 And TEMP, TEMP, 1
	527 Compare TEMP, 1
	528 JumpIfEqual {532}
	529 Move X0, X8
	530 Call 0x1C5D684
	531 Move X8, X0
	532 Move X8, [X8+192]
	533 Move TEMP, X20
	534 And TEMP, TEMP, 1
	535 Compare TEMP, 1
	536 JumpIfNotEqual {836}
	537 Move X0, [X8+8]
	538 Move W8, [X0+309]
	539 Move TEMP, X8
	540 And TEMP, TEMP, 1
	541 Compare TEMP, 1
	542 JumpIfEqual {544}
	543 Call 0x1C5D684
	544 Move W8, [X0+224]
	545 Compare W8, 0
	546 JumpIfNotEqual {548}
	547 Call 0x1C17DFC
	548 Move X0, [X23]
	549 Move W8, [X0+309]
	550 Move TEMP, X8
	551 And TEMP, TEMP, 1
	552 Compare TEMP, 1
	553 JumpIfEqual {555}
	554 Call 0x1C5D684
	555 Move X8, [X0+192]
	556 Move X19, [X8+40]
	557 Move X0, [X19+32]
	558 Move W8, [X0+309]
	559 Move TEMP, X8
	560 And TEMP, TEMP, 1
	561 Compare TEMP, 1
	562 JumpIfEqual {564}
	563 Call 0x1C5D684
	564 Move X8, [X0+192]
	565 Move X0, [X8+8]
	566 Move W8, [X0+309]
	567 Move TEMP, X8
	568 And TEMP, TEMP, 1
	569 Compare TEMP, 1
	570 JumpIfEqual {572}
	571 Call 0x1C5D684
	572 Move W8, [X0+224]
	573 Compare W8, 0
	574 JumpIfNotEqual {576}
	575 Call 0x1C17DFC
	576 Move X0, [X19+32]
	577 Move W8, [X0+309]
	578 Move TEMP, X8
	579 And TEMP, TEMP, 1
	580 Compare TEMP, 1
	581 JumpIfEqual {583}
	582 Call 0x1C5D684
	583 Move X8, [X0+192]
	584 Move X0, [X8+8]
	585 Move W8, [X0+309]
	586 Move TEMP, X8
	587 And TEMP, TEMP, 1
	588 Compare TEMP, 1
	589 JumpIfEqual {591}
	590 Call 0x1C5D684
	591 Move X8, [X0+184]
	592 NotImplemented "Instruction LDRSW not yet implemented."
	593 Move X2, X8
	594 ShiftRight X2, 63
	595 And X2, X2, 0x3FFFFFFF
	596 Compare W8, 0
	597 JumpIfEqual {1276}
	598 Add X9, X2, 15
	599 Add X8, X31, 0
	600 And X9, X9, 0xFFFFFFFF
	601 Subtract X19, X8, X9
	602 Add X31, X19, 0
	603 Move X19, X31
	604 Move X0, X19
	605 Move W1, W31
	606 Call 0x3EB2B10
	607 Move X20, X31
	608 Move X0, [X23]
	609 Move W8, [X0+309]
	610 Move TEMP, X8
	611 And TEMP, TEMP, 1
	612 Compare TEMP, 1
	613 JumpIfEqual {615}
	614 Call 0x1C5D684
	615 Move X8, [X0+192]
	616 Move X0, [X8+8]
	617 Move W8, [X0+309]
	618 Move TEMP, X8
	619 And TEMP, TEMP, 1
	620 Compare TEMP, 1
	621 JumpIfEqual {623}
	622 Call 0x1C5D684
	623 Move W8, [X0+224]
	624 Compare W8, 0
	625 JumpIfNotEqual {627}
	626 Call 0x1C17DFC
	627 Move X0, [X23]
	628 Move W8, [X0+309]
	629 Move TEMP, X8
	630 And TEMP, TEMP, 1
	631 Compare TEMP, 1
	632 JumpIfEqual {634}
	633 Call 0x1C5D684
	634 Move X8, [X0+192]
	635 Move X21, [X8+40]
	636 Move X0, [X21+32]
	637 Move W8, [X0+309]
	638 Move TEMP, X8
	639 And TEMP, TEMP, 1
	640 Compare TEMP, 1
	641 JumpIfEqual {643}
	642 Call 0x1C5D684
	643 Move X8, [X0+192]
	644 Move X0, [X8+8]
	645 Move W8, [X0+309]
	646 Move TEMP, X8
	647 And TEMP, TEMP, 1
	648 Compare TEMP, 1
	649 JumpIfEqual {651}
	650 Call 0x1C5D684
	651 Move W8, [X0+224]
	652 Compare W8, 0
	653 JumpIfNotEqual {655}
	654 Call 0x1C17DFC
	655 Move X0, [X21+32]
	656 Move W8, [X0+309]
	657 Move TEMP, X8
	658 And TEMP, TEMP, 1
	659 Compare TEMP, 1
	660 JumpIfEqual {662}
	661 Call 0x1C5D684
	662 Move X8, [X0+192]
	663 Move X0, [X8+8]
	664 Move W8, [X0+309]
	665 Move TEMP, X8
	666 And TEMP, TEMP, 1
	667 Compare TEMP, 1
	668 JumpIfEqual {670}
	669 Call 0x1C5D684
	670 Move X8, [X0+184]
	671 NotImplemented "Instruction LDRSW not yet implemented."
	672 NotImplemented "Instruction CMP not yet implemented."
	673 Move X0, [X23]
	674 Move W8, [X0+309]
	675 Move TEMP, X8
	676 And TEMP, TEMP, 1
	677 Compare TEMP, 1
	678 JumpIfEqual {680}
	679 Call 0x1C5D684
	680 Move X8, [X0+192]
	681 Move X0, [X8+8]
	682 Move W8, [X0+309]
	683 Move TEMP, X8
	684 And TEMP, TEMP, 1
	685 Compare TEMP, 1
	686 JumpIfEqual {688}
	687 Call 0x1C5D684
	688 Move W8, [X0+224]
	689 Compare W8, 0
	690 JumpIfNotEqual {692}
	691 Call 0x1C17DFC
	692 Move X0, [X23]
	693 Move W8, [X0+309]
	694 Move TEMP, X8
	695 And TEMP, TEMP, 1
	696 Compare TEMP, 1
	697 JumpIfEqual {699}
	698 Call 0x1C5D684
	699 Move X8, [X0+192]
	700 Subtract X0, X29, 56
	701 Move W1, W20
	702 Move X2, [X8+64]
	703 Call 0x2822834, X0, X1
	704 Move X8, [X23]
	705 Move W21, W0
	706 Move W9, [X8+309]
	707 Move TEMP, X9
	708 And TEMP, TEMP, 1
	709 Compare TEMP, 1
	710 JumpIfEqual {714}
	711 Move X0, X8
	712 Call 0x1C5D684
	713 Move X8, X0
	714 Move X8, [X8+192]
	715 Subtract X0, X29, 72
	716 Move W1, W20
	717 Move X2, [X8+64]
	718 Call 0x2822834, X0, X1
	719 Move X8, [X23]
	720 Move W22, W0
	721 Move W9, [X8+309]
	722 Move TEMP, X9
	723 And TEMP, TEMP, 1
	724 Compare TEMP, 1
	725 JumpIfEqual {729}
	726 Move X0, X8
	727 Call 0x1C5D684
	728 Move X8, X0
	729 Move X8, [X8+192]
	730 Move W0, W21
	731 Move W1, W22
	732 Move X2, [X8+72]
	733 Call 0x22BD5BC
	734 NotImplemented "Instruction SBFM not yet implemented."
	735 Move [X19], W8
	736 Add X20, X20, 1
	737 Move X0, [X19+32]
	738 Move W8, [X0+309]
	739 Move TEMP, X8
	740 And TEMP, TEMP, 1
	741 Compare TEMP, 1
	742 JumpIfEqual {744}
	743 Call 0x1C5D684
	744 Move X8, [X26]
	745 Move X9, [X0+192]
	746 Move W10, [X8+224]
	747 Move X24, [X9+24]
	748 Compare W10, 0
	749 JumpIfNotEqual {752}
	750 Move X0, X8
	751 Call 0x1C17DFC
	752 Move X0, X24
	753 Move X1, X31
	754 Call Type.GetTypeFromHandle, X0
	755 Move X8, 0x18F5000
	756 Move X8, [X8+3448]
	757 Move X24, X0
	758 Move X1, X31
	759 Move X8, [X8]
	760 Move X0, X8
	761 Call Type.GetTypeFromHandle, X0
	762 Move X1, X0
	763 Move X0, X24
	764 Move X2, X31
	765 Call Type.op_Equality, X0, X1
	766 Move TEMP, X0
	767 And TEMP, TEMP, 1
	768 Compare TEMP, 1
	769 JumpIfNotEqual {1071}
	770 And W16, W23, 0xFFFF
	771 Move X13, X23
	772 ShiftRight X13, 16
	773 And X13, X13, 0x7FFFFFFF
	774 NotImplemented "Instruction CMP not yet implemented."
	775 Move X9, X21
	776 ShiftRight X9, 48
	777 And X9, X9, 0x7FFFFFFF
	778 Move X10, X21
	779 ShiftRight X10, 16
	780 And X10, X10, 0x7FFFFFFF
	781 Move X14, X21
	782 ShiftRight X14, 32
	783 And X14, X14, 0x7FFF
	784 Move X15, X23
	785 ShiftRight X15, 32
	786 And X15, X15, 0x7FFF
	787 And W17, W21, 0xFFFF
	788 NotImplemented "Instruction CSINV not yet implemented."
	789 NotImplemented "Instruction CMP not yet implemented."
	790 Move X11, X22
	791 ShiftRight X11, 48
	792 And X11, X11, 0x7FFFFFFF
	793 Move X12, X23
	794 ShiftRight X12, 48
	795 And X12, X12, 0x7FFFFFFF
	796 NotImplemented "Instruction CSINV not yet implemented."
	797 NotImplemented "Instruction CMP not yet implemented."
	798 NotImplemented "Instruction STURH not yet implemented."
	799 NotImplemented "Instruction CSINV not yet implemented."
	800 NotImplemented "Instruction CMP not yet implemented."
	801 NotImplemented "Instruction CSINV not yet implemented."
	802 NotImplemented "Instruction CMP not yet implemented."
	803 NotImplemented "Instruction STURH not yet implemented."
	804 NotImplemented "Instruction CSINV not yet implemented."
	805 NotImplemented "Instruction CMP not yet implemented."
	806 NotImplemented "Instruction CSINV not yet implemented."
	807 NotImplemented "Instruction CMP not yet implemented."
	808 Move X8, X20
	809 ShiftRight X8, 48
	810 And X8, X8, 0x7FFFFFFF
	811 NotImplemented "Instruction STURH not yet implemented."
	812 NotImplemented "Instruction CSINV not yet implemented."
	813 NotImplemented "Instruction STURB not yet implemented."
	814 NotImplemented "Instruction STURB not yet implemented."
	815 NotImplemented "Instruction STURH not yet implemented."
	816 NotImplemented "Instruction STURH not yet implemented."
	817 NotImplemented "Instruction CMP not yet implemented."
	818 NotImplemented "Instruction STURH not yet implemented."
	819 NotImplemented "Instruction CSINV not yet implemented."
	820 NotImplemented "Instruction STURH not yet implemented."
	821 Move X0, [X19+32]
	822 Move W8, [X0+309]
	823 Move TEMP, X8
	824 And TEMP, TEMP, 1
	825 Compare TEMP, 1
	826 JumpIfEqual {828}
	827 Call 0x1C5D684
	828 NotImplemented "Instruction LDURH not yet implemented."
	829 NotImplemented "Instruction LDUR not yet implemented."
	830 NotImplemented "Instruction LDUR not yet implemented."
	831 NotImplemented "Instruction STURB not yet implemented."
	832 NotImplemented "Instruction STURB not yet implemented."
	833 NotImplemented "Instruction STURH not yet implemented."
	834 Move [X29-36], W9
	835 Move [X29-32], X10
	836 Move X0, [X26]
	837 Move X20, [X8+24]
	838 Move W9, [X0+224]
	839 Compare W9, 0
	840 JumpIfNotEqual {842}
	841 Call 0x1C17DFC
	842 Move X0, X20
	843 Move X1, X31
	844 Call Type.GetTypeFromHandle, X0
	845 Move X8, 0x18F5000
	846 Move X8, [X8+3448]
	847 Move X20, X0
	848 Move X1, X31
	849 Move X8, [X8]
	850 Move X0, X8
	851 Call Type.GetTypeFromHandle, X0
	852 Move X1, X0
	853 Move X0, X20
	854 Move X2, X31
	855 Call Type.op_Equality, X0, X1
	856 Move X8, [X23]
	857 Move W20, W0
	858 Move W9, [X8+309]
	859 Move TEMP, X9
	860 And TEMP, TEMP, 1
	861 Compare TEMP, 1
	862 JumpIfEqual {866}
	863 Move X0, X8
	864 Call 0x1C5D684
	865 Move X8, X0
	866 Move X8, [X8+192]
	867 Move TEMP, X20
	868 And TEMP, TEMP, 1
	869 Compare TEMP, 1
	870 JumpIfNotEqual {1175}
	871 Move X0, [X8+8]
	872 Move W8, [X0+309]
	873 Move TEMP, X8
	874 And TEMP, TEMP, 1
	875 Compare TEMP, 1
	876 JumpIfEqual {878}
	877 Call 0x1C5D684
	878 Move W8, [X0+224]
	879 Compare W8, 0
	880 JumpIfNotEqual {882}
	881 Call 0x1C17DFC
	882 Move X0, [X23]
	883 Move W8, [X0+309]
	884 Move TEMP, X8
	885 And TEMP, TEMP, 1
	886 Compare TEMP, 1
	887 JumpIfEqual {889}
	888 Call 0x1C5D684
	889 Move X8, [X0+192]
	890 Move X19, [X8+40]
	891 Move X0, [X19+32]
	892 Move W8, [X0+309]
	893 Move TEMP, X8
	894 And TEMP, TEMP, 1
	895 Compare TEMP, 1
	896 JumpIfEqual {898}
	897 Call 0x1C5D684
	898 Move X8, [X0+192]
	899 Move X0, [X8+8]
	900 Move W8, [X0+309]
	901 Move TEMP, X8
	902 And TEMP, TEMP, 1
	903 Compare TEMP, 1
	904 JumpIfEqual {906}
	905 Call 0x1C5D684
	906 Move W8, [X0+224]
	907 Compare W8, 0
	908 JumpIfNotEqual {910}
	909 Call 0x1C17DFC
	910 Move X0, [X19+32]
	911 Move W8, [X0+309]
	912 Move TEMP, X8
	913 And TEMP, TEMP, 1
	914 Compare TEMP, 1
	915 JumpIfEqual {917}
	916 Call 0x1C5D684
	917 Move X8, [X0+192]
	918 Move X0, [X8+8]
	919 Move W8, [X0+309]
	920 Move TEMP, X8
	921 And TEMP, TEMP, 1
	922 Compare TEMP, 1
	923 JumpIfEqual {925}
	924 Call 0x1C5D684
	925 Move X8, [X0+184]
	926 NotImplemented "Instruction LDRSW not yet implemented."
	927 Move X2, X8
	928 ShiftRight X2, 63
	929 And X2, X2, 0x3FFFFFFF
	930 Compare W8, 0
	931 JumpIfEqual {1512}
	932 Add X9, X2, 15
	933 Add X8, X31, 0
	934 And X9, X9, 0xFFFFFFFF
	935 Subtract X19, X8, X9
	936 Add X31, X19, 0
	937 Move X19, X31
	938 Move X0, X19
	939 Move W1, W31
	940 Call 0x3EB2B10
	941 Move X20, X31
	942 Move X0, [X23]
	943 Move W8, [X0+309]
	944 Move TEMP, X8
	945 And TEMP, TEMP, 1
	946 Compare TEMP, 1
	947 JumpIfEqual {949}
	948 Call 0x1C5D684
	949 Move X8, [X0+192]
	950 Move X0, [X8+8]
	951 Move W8, [X0+309]
	952 Move TEMP, X8
	953 And TEMP, TEMP, 1
	954 Compare TEMP, 1
	955 JumpIfEqual {957}
	956 Call 0x1C5D684
	957 Move W8, [X0+224]
	958 Compare W8, 0
	959 JumpIfNotEqual {961}
	960 Call 0x1C17DFC
	961 Move X0, [X23]
	962 Move W8, [X0+309]
	963 Move TEMP, X8
	964 And TEMP, TEMP, 1
	965 Compare TEMP, 1
	966 JumpIfEqual {968}
	967 Call 0x1C5D684
	968 Move X8, [X0+192]
	969 Move X21, [X8+40]
	970 Move X0, [X21+32]
	971 Move W8, [X0+309]
	972 Move TEMP, X8
	973 And TEMP, TEMP, 1
	974 Compare TEMP, 1
	975 JumpIfEqual {977}
	976 Call 0x1C5D684
	977 Move X8, [X0+192]
	978 Move X0, [X8+8]
	979 Move W8, [X0+309]
	980 Move TEMP, X8
	981 And TEMP, TEMP, 1
	982 Compare TEMP, 1
	983 JumpIfEqual {985}
	984 Call 0x1C5D684
	985 Move W8, [X0+224]
	986 Compare W8, 0
	987 JumpIfNotEqual {989}
	988 Call 0x1C17DFC
	989 Move X0, [X21+32]
	990 Move W8, [X0+309]
	991 Move TEMP, X8
	992 And TEMP, TEMP, 1
	993 Compare TEMP, 1
	994 JumpIfEqual {996}
	995 Call 0x1C5D684
	996 Move X8, [X0+192]
	997 Move X0, [X8+8]
	998 Move W8, [X0+309]
	999 Move TEMP, X8
	1000 And TEMP, TEMP, 1
	1001 Compare TEMP, 1
	1002 JumpIfEqual {1004}
	1003 Call 0x1C5D684
	1004 Move X8, [X0+184]
	1005 NotImplemented "Instruction LDRSW not yet implemented."
	1006 NotImplemented "Instruction CMP not yet implemented."
	1007 Move X0, [X23]
	1008 Move W8, [X0+309]
	1009 Move TEMP, X8
	1010 And TEMP, TEMP, 1
	1011 Compare TEMP, 1
	1012 JumpIfEqual {1014}
	1013 Call 0x1C5D684
	1014 Move X8, [X0+192]
	1015 Move X0, [X8+8]
	1016 Move W8, [X0+309]
	1017 Move TEMP, X8
	1018 And TEMP, TEMP, 1
	1019 Compare TEMP, 1
	1020 JumpIfEqual {1022}
	1021 Call 0x1C5D684
	1022 Move W8, [X0+224]
	1023 Compare W8, 0
	1024 JumpIfNotEqual {1026}
	1025 Call 0x1C17DFC
	1026 Move X0, [X23]
	1027 Move W8, [X0+309]
	1028 Move TEMP, X8
	1029 And TEMP, TEMP, 1
	1030 Compare TEMP, 1
	1031 JumpIfEqual {1033}
	1032 Call 0x1C5D684
	1033 Move X8, [X0+192]
	1034 Subtract X0, X29, 56
	1035 Move W1, W20
	1036 Move X2, [X8+64]
	1037 Call 0x2822834, X0, X1
	1038 Move X8, [X23]
	1039 Move W21, W0
	1040 Move W9, [X8+309]
	1041 Move TEMP, X9
	1042 And TEMP, TEMP, 1
	1043 Compare TEMP, 1
	1044 JumpIfEqual {1048}
	1045 Move X0, X8
	1046 Call 0x1C5D684
	1047 Move X8, X0
	1048 Move X8, [X8+192]
	1049 Subtract X0, X29, 72
	1050 Move W1, W20
	1051 Move X2, [X8+64]
	1052 Call 0x2822834, X0, X1
	1053 Move X8, [X23]
	1054 Move W22, W0
	1055 Move W9, [X8+309]
	1056 Move TEMP, X9
	1057 And TEMP, TEMP, 1
	1058 Compare TEMP, 1
	1059 JumpIfEqual {1063}
	1060 Move X0, X8
	1061 Call 0x1C5D684
	1062 Move X8, X0
	1063 Move X8, [X8+192]
	1064 Move W0, W21
	1065 Move W1, W22
	1066 Move X2, [X8+72]
	1067 Call 0x22BD5BC
	1068 NotImplemented "Instruction SBFM not yet implemented."
	1069 Move [X19], W8
	1070 Add X20, X20, 1
	1071 Move X0, [X19+32]
	1072 Move W8, [X0+309]
	1073 Move TEMP, X8
	1074 And TEMP, TEMP, 1
	1075 Compare TEMP, 1
	1076 JumpIfEqual {1078}
	1077 Call 0x1C5D684
	1078 Move X8, [X26]
	1079 Move X9, [X0+192]
	1080 Move X11, X23
	1081 ShiftRight X11, 32
	1082 And X11, X11, 0x7FFFFFFF
	1083 Move W10, [X8+224]
	1084 Move X24, [X9+24]
	1085 Move X9, X21
	1086 ShiftRight X9, 32
	1087 And X9, X9, 0x7FFFFFFF
	1088 Move [X29-120], X11
	1089 Move [X29-112], X9
	1090 Compare W10, 0
	1091 JumpIfNotEqual {1094}
	1092 Move X0, X8
	1093 Call 0x1C17DFC
	1094 Move X0, X24
	1095 Move X1, X31
	1096 Call Type.GetTypeFromHandle, X0
	1097 Move X8, 0x18F4000
	1098 Move X8, [X8+3488]
	1099 Move X24, X0
	1100 Move X1, X31
	1101 Move X8, [X8]
	1102 Move X0, X8
	1103 Call Type.GetTypeFromHandle, X0
	1104 Move X1, X0
	1105 Move X0, X24
	1106 Move X2, X31
	1107 Call Type.op_Equality, X0, X1
	1108 Move TEMP, X0
	1109 And TEMP, TEMP, 1
	1110 Compare TEMP, 1
	1111 JumpIfEqual {1145}
	1112 Move X0, [X19+32]
	1113 Move W8, [X0+309]
	1114 Move TEMP, X8
	1115 And TEMP, TEMP, 1
	1116 Compare TEMP, 1
	1117 JumpIfEqual {1119}
	1118 Call 0x1C5D684
	1119 Move X8, [X26]
	1120 Move X9, [X0+192]
	1121 Move W10, [X8+224]
	1122 Move X24, [X9+24]
	1123 Compare W10, 0
	1124 JumpIfNotEqual {1127}
	1125 Move X0, X8
	1126 Call 0x1C17DFC
	1127 Move X0, X24
	1128 Move X1, X31
	1129 Call Type.GetTypeFromHandle, X0
	1130 Move X8, 0x18F4000
	1131 Move X8, [X8+3456]
	1132 Move X24, X0
	1133 Move X1, X31
	1134 Move X8, [X8]
	1135 Move X0, X8
	1136 Call Type.GetTypeFromHandle, X0
	1137 Move X1, X0
	1138 Move X0, X24
	1139 Move X2, X31
	1140 Call Type.op_Equality, X0, X1
	1141 Move TEMP, X0
	1142 And TEMP, TEMP, 1
	1143 Compare TEMP, 1
	1144 JumpIfNotEqual {1647}
	1145 Move X8, [X29-120]
	1146 Move X9, [X29-112]
	1147 NotImplemented "Instruction CMP not yet implemented."
	1148 NotImplemented "Instruction CSINV not yet implemented."
	1149 NotImplemented "Instruction STURB not yet implemented."
	1150 NotImplemented "Instruction CMP not yet implemented."
	1151 NotImplemented "Instruction CSINV not yet implemented."
	1152 NotImplemented "Instruction CMP not yet implemented."
	1153 Move [X29-92], W8
	1154 NotImplemented "Instruction CSINV not yet implemented."
	1155 NotImplemented "Instruction CMP not yet implemented."
	1156 NotImplemented "Instruction CSINV not yet implemented."
	1157 NotImplemented "Instruction STURB not yet implemented."
	1158 NotImplemented "Instruction STURH not yet implemented."
	1159 Move [X29-104], W8
	1160 Move [X29-100], W9
	1161 Move X0, [X19+32]
	1162 Move W8, [X0+309]
	1163 Move TEMP, X8
	1164 And TEMP, TEMP, 1
	1165 Compare TEMP, 1
	1166 JumpIfEqual {1168}
	1167 Call 0x1C5D684
	1168 NotImplemented "Instruction LDUR not yet implemented."
	1169 NotImplemented "Instruction LDUR not yet implemented."
	1170 NotImplemented "Instruction STURB not yet implemented."
	1171 NotImplemented "Instruction STURB not yet implemented."
	1172 NotImplemented "Instruction STURH not yet implemented."
	1173 Move [X29-36], W8
	1174 Move [X29-32], X9
	1175 Move X0, [X26]
	1176 Move X20, [X8+24]
	1177 Move W9, [X0+224]
	1178 Compare W9, 0
	1179 JumpIfNotEqual {1181}
	1180 Call 0x1C17DFC
	1181 Move X0, X20
	1182 Move X1, X31
	1183 Call Type.GetTypeFromHandle, X0
	1184 Move X8, 0x18F4000
	1185 Move X8, [X8+3488]
	1186 Move X20, X0
	1187 Move X1, X31
	1188 Move X8, [X8]
	1189 Move X0, X8
	1190 Call Type.GetTypeFromHandle, X0
	1191 Move X1, X0
	1192 Move X0, X20
	1193 Move X2, X31
	1194 Call Type.op_Equality, X0, X1
	1195 Move X8, [X23]
	1196 Move W20, W0
	1197 Move W9, [X8+309]
	1198 Move TEMP, X9
	1199 And TEMP, TEMP, 1
	1200 Compare TEMP, 1
	1201 JumpIfEqual {1205}
	1202 Move X0, X8
	1203 Call 0x1C5D684
	1204 Move X8, X0
	1205 Move X8, [X8+192]
	1206 Move TEMP, X20
	1207 And TEMP, TEMP, 1
	1208 Compare TEMP, 1
	1209 JumpIfNotEqual {1411}
	1210 Move X0, [X8+8]
	1211 Move W8, [X0+309]
	1212 Move TEMP, X8
	1213 And TEMP, TEMP, 1
	1214 Compare TEMP, 1
	1215 JumpIfEqual {1217}
	1216 Call 0x1C5D684
	1217 Move W8, [X0+224]
	1218 Compare W8, 0
	1219 JumpIfNotEqual {1221}
	1220 Call 0x1C17DFC
	1221 Move X0, [X23]
	1222 Move W8, [X0+309]
	1223 Move TEMP, X8
	1224 And TEMP, TEMP, 1
	1225 Compare TEMP, 1
	1226 JumpIfEqual {1228}
	1227 Call 0x1C5D684
	1228 Move X8, [X0+192]
	1229 Move X19, [X8+40]
	1230 Move X0, [X19+32]
	1231 Move W8, [X0+309]
	1232 Move TEMP, X8
	1233 And TEMP, TEMP, 1
	1234 Compare TEMP, 1
	1235 JumpIfEqual {1237}
	1236 Call 0x1C5D684
	1237 Move X8, [X0+192]
	1238 Move X0, [X8+8]
	1239 Move W8, [X0+309]
	1240 Move TEMP, X8
	1241 And TEMP, TEMP, 1
	1242 Compare TEMP, 1
	1243 JumpIfEqual {1245}
	1244 Call 0x1C5D684
	1245 Move W8, [X0+224]
	1246 Compare W8, 0
	1247 JumpIfNotEqual {1249}
	1248 Call 0x1C17DFC
	1249 Move X0, [X19+32]
	1250 Move W8, [X0+309]
	1251 Move TEMP, X8
	1252 And TEMP, TEMP, 1
	1253 Compare TEMP, 1
	1254 JumpIfEqual {1256}
	1255 Call 0x1C5D684
	1256 Move X8, [X0+192]
	1257 Move X0, [X8+8]
	1258 Move W8, [X0+309]
	1259 Move TEMP, X8
	1260 And TEMP, TEMP, 1
	1261 Compare TEMP, 1
	1262 JumpIfEqual {1264}
	1263 Call 0x1C5D684
	1264 Move X8, [X0+184]
	1265 NotImplemented "Instruction LDRSW not yet implemented."
	1266 Move X2, X8
	1267 ShiftRight X2, 62
	1268 And X2, X2, 0x1FFFFFFF
	1269 Compare W8, 0
	1270 JumpIfEqual {1836}
	1271 Add X9, X2, 15
	1272 Add X8, X31, 0
	1273 And X9, X9, 0xFFFFFFFF
	1274 Subtract X19, X8, X9
	1275 Add X31, X19, 0
	1276 Move X19, X31
	1277 Move X0, X19
	1278 Move W1, W31
	1279 Call 0x3EB2B10
	1280 Move X20, X31
	1281 Move X24, X19
	1282 Move X0, [X23]
	1283 Move W8, [X0+309]
	1284 Move TEMP, X8
	1285 And TEMP, TEMP, 1
	1286 Compare TEMP, 1
	1287 JumpIfEqual {1289}
	1288 Call 0x1C5D684
	1289 Move X8, [X0+192]
	1290 Move X0, [X8+8]
	1291 Move W8, [X0+309]
	1292 Move TEMP, X8
	1293 And TEMP, TEMP, 1
	1294 Compare TEMP, 1
	1295 JumpIfEqual {1297}
	1296 Call 0x1C5D684
	1297 Move W8, [X0+224]
	1298 Compare W8, 0
	1299 JumpIfNotEqual {1301}
	1300 Call 0x1C17DFC
	1301 Move X0, [X23]
	1302 Move W8, [X0+309]
	1303 Move TEMP, X8
	1304 And TEMP, TEMP, 1
	1305 Compare TEMP, 1
	1306 JumpIfEqual {1308}
	1307 Call 0x1C5D684
	1308 Move X8, [X0+192]
	1309 Move X21, [X8+40]
	1310 Move X0, [X21+32]
	1311 Move W8, [X0+309]
	1312 Move TEMP, X8
	1313 And TEMP, TEMP, 1
	1314 Compare TEMP, 1
	1315 JumpIfEqual {1317}
	1316 Call 0x1C5D684
	1317 Move X8, [X0+192]
	1318 Move X0, [X8+8]
	1319 Move W8, [X0+309]
	1320 Move TEMP, X8
	1321 And TEMP, TEMP, 1
	1322 Compare TEMP, 1
	1323 JumpIfEqual {1325}
	1324 Call 0x1C5D684
	1325 Move W8, [X0+224]
	1326 Compare W8, 0
	1327 JumpIfNotEqual {1329}
	1328 Call 0x1C17DFC
	1329 Move X0, [X21+32]
	1330 Move W8, [X0+309]
	1331 Move TEMP, X8
	1332 And TEMP, TEMP, 1
	1333 Compare TEMP, 1
	1334 JumpIfEqual {1336}
	1335 Call 0x1C5D684
	1336 Move X8, [X0+192]
	1337 Move X0, [X8+8]
	1338 Move W8, [X0+309]
	1339 Move TEMP, X8
	1340 And TEMP, TEMP, 1
	1341 Compare TEMP, 1
	1342 JumpIfEqual {1344}
	1343 Call 0x1C5D684
	1344 Move X8, [X0+184]
	1345 NotImplemented "Instruction LDRSW not yet implemented."
	1346 NotImplemented "Instruction CMP not yet implemented."
	1347 Move X0, [X23]
	1348 Move W8, [X0+309]
	1349 Move TEMP, X8
	1350 And TEMP, TEMP, 1
	1351 Compare TEMP, 1
	1352 JumpIfEqual {1354}
	1353 Call 0x1C5D684
	1354 Move X8, [X0+192]
	1355 Move X0, [X8+8]
	1356 Move W8, [X0+309]
	1357 Move TEMP, X8
	1358 And TEMP, TEMP, 1
	1359 Compare TEMP, 1
	1360 JumpIfEqual {1362}
	1361 Call 0x1C5D684
	1362 Move W8, [X0+224]
	1363 Compare W8, 0
	1364 JumpIfNotEqual {1366}
	1365 Call 0x1C17DFC
	1366 Move X0, [X23]
	1367 Move W8, [X0+309]
	1368 Move TEMP, X8
	1369 And TEMP, TEMP, 1
	1370 Compare TEMP, 1
	1371 JumpIfEqual {1373}
	1372 Call 0x1C5D684
	1373 Move X8, [X0+192]
	1374 Subtract X0, X29, 56
	1375 Move W1, W20
	1376 Move X2, [X8+64]
	1377 Call 0x2822834, X0, X1
	1378 Move X8, [X23]
	1379 Move W21, W0
	1380 Move W9, [X8+309]
	1381 Move TEMP, X9
	1382 And TEMP, TEMP, 1
	1383 Compare TEMP, 1
	1384 JumpIfEqual {1388}
	1385 Move X0, X8
	1386 Call 0x1C5D684
	1387 Move X8, X0
	1388 Move X8, [X8+192]
	1389 Subtract X0, X29, 72
	1390 Move W1, W20
	1391 Move X2, [X8+64]
	1392 Call 0x2822834, X0, X1
	1393 Move X8, [X23]
	1394 Move W22, W0
	1395 Move W9, [X8+309]
	1396 Move TEMP, X9
	1397 And TEMP, TEMP, 1
	1398 Compare TEMP, 1
	1399 JumpIfEqual {1403}
	1400 Move X0, X8
	1401 Call 0x1C5D684
	1402 Move X8, X0
	1403 Move X8, [X8+192]
	1404 Move W0, W21
	1405 Move W1, W22
	1406 Move X2, [X8+72]
	1407 Call 0x22BD5BC
	1408 NotImplemented "Instruction SBFM not yet implemented."
	1409 NotImplemented "Instruction STRH not yet implemented."
	1410 Add X20, X20, 1
	1411 Move X0, [X26]
	1412 Move X20, [X8+24]
	1413 Move W9, [X0+224]
	1414 Compare W9, 0
	1415 JumpIfNotEqual {1417}
	1416 Call 0x1C17DFC
	1417 Move X0, X20
	1418 Move X1, X31
	1419 Call Type.GetTypeFromHandle, X0
	1420 Move X8, 0x18F4000
	1421 Move X8, [X8+3456]
	1422 Move X20, X0
	1423 Move X1, X31
	1424 Move X8, [X8]
	1425 Move X0, X8
	1426 Call Type.GetTypeFromHandle, X0
	1427 Move X1, X0
	1428 Move X0, X20
	1429 Move X2, X31
	1430 Call Type.op_Equality, X0, X1
	1431 Move X8, [X23]
	1432 Move W20, W0
	1433 Move W9, [X8+309]
	1434 Move TEMP, X9
	1435 And TEMP, TEMP, 1
	1436 Compare TEMP, 1
	1437 JumpIfEqual {1441}
	1438 Move X0, X8
	1439 Call 0x1C5D684
	1440 Move X8, X0
	1441 Move X8, [X8+192]
	1442 Move TEMP, X20
	1443 And TEMP, TEMP, 1
	1444 Compare TEMP, 1
	1445 JumpIfNotEqual {1735}
	1446 Move X0, [X8+8]
	1447 Move W8, [X0+309]
	1448 Move TEMP, X8
	1449 And TEMP, TEMP, 1
	1450 Compare TEMP, 1
	1451 JumpIfEqual {1453}
	1452 Call 0x1C5D684
	1453 Move W8, [X0+224]
	1454 Compare W8, 0
	1455 JumpIfNotEqual {1457}
	1456 Call 0x1C17DFC
	1457 Move X0, [X23]
	1458 Move W8, [X0+309]
	1459 Move TEMP, X8
	1460 And TEMP, TEMP, 1
	1461 Compare TEMP, 1
	1462 JumpIfEqual {1464}
	1463 Call 0x1C5D684
	1464 Move X8, [X0+192]
	1465 Move X19, [X8+40]
	1466 Move X0, [X19+32]
	1467 Move W8, [X0+309]
	1468 Move TEMP, X8
	1469 And TEMP, TEMP, 1
	1470 Compare TEMP, 1
	1471 JumpIfEqual {1473}
	1472 Call 0x1C5D684
	1473 Move X8, [X0+192]
	1474 Move X0, [X8+8]
	1475 Move W8, [X0+309]
	1476 Move TEMP, X8
	1477 And TEMP, TEMP, 1
	1478 Compare TEMP, 1
	1479 JumpIfEqual {1481}
	1480 Call 0x1C5D684
	1481 Move W8, [X0+224]
	1482 Compare W8, 0
	1483 JumpIfNotEqual {1485}
	1484 Call 0x1C17DFC
	1485 Move X0, [X19+32]
	1486 Move W8, [X0+309]
	1487 Move TEMP, X8
	1488 And TEMP, TEMP, 1
	1489 Compare TEMP, 1
	1490 JumpIfEqual {1492}
	1491 Call 0x1C5D684
	1492 Move X8, [X0+192]
	1493 Move X0, [X8+8]
	1494 Move W8, [X0+309]
	1495 Move TEMP, X8
	1496 And TEMP, TEMP, 1
	1497 Compare TEMP, 1
	1498 JumpIfEqual {1500}
	1499 Call 0x1C5D684
	1500 Move X8, [X0+184]
	1501 NotImplemented "Instruction LDRSW not yet implemented."
	1502 Move X2, X8
	1503 ShiftRight X2, 62
	1504 And X2, X2, 0x1FFFFFFF
	1505 Compare W8, 0
	1506 JumpIfEqual {2072}
	1507 Add X9, X2, 15
	1508 Add X8, X31, 0
	1509 And X9, X9, 0xFFFFFFFF
	1510 Subtract X19, X8, X9
	1511 Add X31, X19, 0
	1512 Move X19, X31
	1513 Move X0, X19
	1514 Move W1, W31
	1515 Call 0x3EB2B10
	1516 Move X20, X31
	1517 Move X24, X19
	1518 Move X0, [X23]
	1519 Move W8, [X0+309]
	1520 Move TEMP, X8
	1521 And TEMP, TEMP, 1
	1522 Compare TEMP, 1
	1523 JumpIfEqual {1525}
	1524 Call 0x1C5D684
	1525 Move X8, [X0+192]
	1526 Move X0, [X8+8]
	1527 Move W8, [X0+309]
	1528 Move TEMP, X8
	1529 And TEMP, TEMP, 1
	1530 Compare TEMP, 1
	1531 JumpIfEqual {1533}
	1532 Call 0x1C5D684
	1533 Move W8, [X0+224]
	1534 Compare W8, 0
	1535 JumpIfNotEqual {1537}
	1536 Call 0x1C17DFC
	1537 Move X0, [X23]
	1538 Move W8, [X0+309]
	1539 Move TEMP, X8
	1540 And TEMP, TEMP, 1
	1541 Compare TEMP, 1
	1542 JumpIfEqual {1544}
	1543 Call 0x1C5D684
	1544 Move X8, [X0+192]
	1545 Move X21, [X8+40]
	1546 Move X0, [X21+32]
	1547 Move W8, [X0+309]
	1548 Move TEMP, X8
	1549 And TEMP, TEMP, 1
	1550 Compare TEMP, 1
	1551 JumpIfEqual {1553}
	1552 Call 0x1C5D684
	1553 Move X8, [X0+192]
	1554 Move X0, [X8+8]
	1555 Move W8, [X0+309]
	1556 Move TEMP, X8
	1557 And TEMP, TEMP, 1
	1558 Compare TEMP, 1
	1559 JumpIfEqual {1561}
	1560 Call 0x1C5D684
	1561 Move W8, [X0+224]
	1562 Compare W8, 0
	1563 JumpIfNotEqual {1565}
	1564 Call 0x1C17DFC
	1565 Move X0, [X21+32]
	1566 Move W8, [X0+309]
	1567 Move TEMP, X8
	1568 And TEMP, TEMP, 1
	1569 Compare TEMP, 1
	1570 JumpIfEqual {1572}
	1571 Call 0x1C5D684
	1572 Move X8, [X0+192]
	1573 Move X0, [X8+8]
	1574 Move W8, [X0+309]
	1575 Move TEMP, X8
	1576 And TEMP, TEMP, 1
	1577 Compare TEMP, 1
	1578 JumpIfEqual {1580}
	1579 Call 0x1C5D684
	1580 Move X8, [X0+184]
	1581 NotImplemented "Instruction LDRSW not yet implemented."
	1582 NotImplemented "Instruction CMP not yet implemented."
	1583 Move X0, [X23]
	1584 Move W8, [X0+309]
	1585 Move TEMP, X8
	1586 And TEMP, TEMP, 1
	1587 Compare TEMP, 1
	1588 JumpIfEqual {1590}
	1589 Call 0x1C5D684
	1590 Move X8, [X0+192]
	1591 Move X0, [X8+8]
	1592 Move W8, [X0+309]
	1593 Move TEMP, X8
	1594 And TEMP, TEMP, 1
	1595 Compare TEMP, 1
	1596 JumpIfEqual {1598}
	1597 Call 0x1C5D684
	1598 Move W8, [X0+224]
	1599 Compare W8, 0
	1600 JumpIfNotEqual {1602}
	1601 Call 0x1C17DFC
	1602 Move X0, [X23]
	1603 Move W8, [X0+309]
	1604 Move TEMP, X8
	1605 And TEMP, TEMP, 1
	1606 Compare TEMP, 1
	1607 JumpIfEqual {1609}
	1608 Call 0x1C5D684
	1609 Move X8, [X0+192]
	1610 Subtract X0, X29, 56
	1611 Move W1, W20
	1612 Move X2, [X8+64]
	1613 Call 0x2822834, X0, X1
	1614 Move X8, [X23]
	1615 Move W21, W0
	1616 Move W9, [X8+309]
	1617 Move TEMP, X9
	1618 And TEMP, TEMP, 1
	1619 Compare TEMP, 1
	1620 JumpIfEqual {1624}
	1621 Move X0, X8
	1622 Call 0x1C5D684
	1623 Move X8, X0
	1624 Move X8, [X8+192]
	1625 Subtract X0, X29, 72
	1626 Move W1, W20
	1627 Move X2, [X8+64]
	1628 Call 0x2822834, X0, X1
	1629 Move X8, [X23]
	1630 Move W22, W0
	1631 Move W9, [X8+309]
	1632 Move TEMP, X9
	1633 And TEMP, TEMP, 1
	1634 Compare TEMP, 1
	1635 JumpIfEqual {1639}
	1636 Move X0, X8
	1637 Call 0x1C5D684
	1638 Move X8, X0
	1639 Move X8, [X8+192]
	1640 Move W0, W21
	1641 Move W1, W22
	1642 Move X2, [X8+72]
	1643 Call 0x22BD5BC
	1644 NotImplemented "Instruction SBFM not yet implemented."
	1645 NotImplemented "Instruction STRH not yet implemented."
	1646 Add X20, X20, 1
	1647 Move X0, [X19+32]
	1648 Move W8, [X0+309]
	1649 Move TEMP, X8
	1650 And TEMP, TEMP, 1
	1651 Compare TEMP, 1
	1652 JumpIfEqual {1654}
	1653 Call 0x1C5D684
	1654 Move X8, [X26]
	1655 Move X9, [X0+192]
	1656 Move W10, [X8+224]
	1657 Move X24, [X9+24]
	1658 Compare W10, 0
	1659 JumpIfNotEqual {1662}
	1660 Move X0, X8
	1661 Call 0x1C17DFC
	1662 Move X0, X24
	1663 Move X1, X31
	1664 Call Type.GetTypeFromHandle, X0
	1665 Move X8, 0x18F4000
	1666 Move X8, [X8+3496]
	1667 Move X24, X0
	1668 Move X1, X31
	1669 Move X8, [X8]
	1670 Move X0, X8
	1671 Call Type.GetTypeFromHandle, X0
	1672 Move X1, X0
	1673 Move X0, X24
	1674 Move X2, X31
	1675 Call Type.op_Equality, X0, X1
	1676 Move TEMP, X0
	1677 And TEMP, TEMP, 1
	1678 Compare TEMP, 1
	1679 JumpIfEqual {1713}
	1680 Move X0, [X19+32]
	1681 Move W8, [X0+309]
	1682 Move TEMP, X8
	1683 And TEMP, TEMP, 1
	1684 Compare TEMP, 1
	1685 JumpIfEqual {1687}
	1686 Call 0x1C5D684
	1687 Move X8, [X26]
	1688 Move X9, [X0+192]
	1689 Move W10, [X8+224]
	1690 Move X24, [X9+24]
	1691 Compare W10, 0
	1692 JumpIfNotEqual {1695}
	1693 Move X0, X8
	1694 Call 0x1C17DFC
	1695 Move X0, X24
	1696 Move X1, X31
	1697 Call Type.GetTypeFromHandle, X0
	1698 Move X8, 0x18F4000
	1699 Move X8, [X8+3464]
	1700 Move X24, X0
	1701 Move X1, X31
	1702 Move X8, [X8]
	1703 Move X0, X8
	1704 Call Type.GetTypeFromHandle, X0
	1705 Move X1, X0
	1706 Move X0, X24
	1707 Move X2, X31
	1708 Call Type.op_Equality, X0, X1
	1709 Move TEMP, X0
	1710 And TEMP, TEMP, 1
	1711 Compare TEMP, 1
	1712 JumpIfNotEqual {2207}
	1713 NotImplemented "Instruction CMP not yet implemented."
	1714 NotImplemented "Instruction CSINV not yet implemented."
	1715 NotImplemented "Instruction CMP not yet implemented."
	1716 NotImplemented "Instruction CSINV not yet implemented."
	1717 NotImplemented "Instruction STURB not yet implemented."
	1718 NotImplemented "Instruction STURB not yet implemented."
	1719 NotImplemented "Instruction STURH not yet implemented."
	1720 Move [X29-92], W22
	1721 Move [X29-104], X8
	1722 Move X0, [X19+32]
	1723 Move W8, [X0+309]
	1724 Move TEMP, X8
	1725 And TEMP, TEMP, 1
	1726 Compare TEMP, 1
	1727 JumpIfEqual {1729}
	1728 Call 0x1C5D684
	1729 NotImplemented "Instruction LDUR not yet implemented."
	1730 NotImplemented "Instruction STURB not yet implemented."
	1731 NotImplemented "Instruction STURB not yet implemented."
	1732 NotImplemented "Instruction STURH not yet implemented."
	1733 Move [X29-36], W22
	1734 Move [X29-32], X8
	1735 Move X0, [X26]
	1736 Move X20, [X8+24]
	1737 Move W9, [X0+224]
	1738 Compare W9, 0
	1739 JumpIfNotEqual {1741}
	1740 Call 0x1C17DFC
	1741 Move X0, X20
	1742 Move X1, X31
	1743 Call Type.GetTypeFromHandle, X0
	1744 Move X8, 0x18F4000
	1745 Move X8, [X8+3496]
	1746 Move X20, X0
	1747 Move X1, X31
	1748 Move X8, [X8]
	1749 Move X0, X8
	1750 Call Type.GetTypeFromHandle, X0
	1751 Move X1, X0
	1752 Move X0, X20
	1753 Move X2, X31
	1754 Call Type.op_Equality, X0, X1
	1755 Move X8, [X23]
	1756 Move W20, W0
	1757 Move W9, [X8+309]
	1758 Move TEMP, X9
	1759 And TEMP, TEMP, 1
	1760 Compare TEMP, 1
	1761 JumpIfEqual {1765}
	1762 Move X0, X8
	1763 Call 0x1C5D684
	1764 Move X8, X0
	1765 Move X8, [X8+192]
	1766 Move TEMP, X20
	1767 And TEMP, TEMP, 1
	1768 Compare TEMP, 1
	1769 JumpIfNotEqual {1971}
	1770 Move X0, [X8+8]
	1771 Move W8, [X0+309]
	1772 Move TEMP, X8
	1773 And TEMP, TEMP, 1
	1774 Compare TEMP, 1
	1775 JumpIfEqual {1777}
	1776 Call 0x1C5D684
	1777 Move W8, [X0+224]
	1778 Compare W8, 0
	1779 JumpIfNotEqual {1781}
	1780 Call 0x1C17DFC
	1781 Move X0, [X23]
	1782 Move W8, [X0+309]
	1783 Move TEMP, X8
	1784 And TEMP, TEMP, 1
	1785 Compare TEMP, 1
	1786 JumpIfEqual {1788}
	1787 Call 0x1C5D684
	1788 Move X8, [X0+192]
	1789 Move X19, [X8+40]
	1790 Move X0, [X19+32]
	1791 Move W8, [X0+309]
	1792 Move TEMP, X8
	1793 And TEMP, TEMP, 1
	1794 Compare TEMP, 1
	1795 JumpIfEqual {1797}
	1796 Call 0x1C5D684
	1797 Move X8, [X0+192]
	1798 Move X0, [X8+8]
	1799 Move W8, [X0+309]
	1800 Move TEMP, X8
	1801 And TEMP, TEMP, 1
	1802 Compare TEMP, 1
	1803 JumpIfEqual {1805}
	1804 Call 0x1C5D684
	1805 Move W8, [X0+224]
	1806 Compare W8, 0
	1807 JumpIfNotEqual {1809}
	1808 Call 0x1C17DFC
	1809 Move X0, [X19+32]
	1810 Move W8, [X0+309]
	1811 Move TEMP, X8
	1812 And TEMP, TEMP, 1
	1813 Compare TEMP, 1
	1814 JumpIfEqual {1816}
	1815 Call 0x1C5D684
	1816 Move X8, [X0+192]
	1817 Move X0, [X8+8]
	1818 Move W8, [X0+309]
	1819 Move TEMP, X8
	1820 And TEMP, TEMP, 1
	1821 Compare TEMP, 1
	1822 JumpIfEqual {1824}
	1823 Call 0x1C5D684
	1824 Move X8, [X0+184]
	1825 NotImplemented "Instruction LDRSW not yet implemented."
	1826 Move X2, X8
	1827 ShiftRight X2, 61
	1828 And X2, X2, 0xFFFFFFF
	1829 Compare W8, 0
	1830 JumpIfEqual {2389}
	1831 Add X9, X2, 15
	1832 Add X8, X31, 0
	1833 And X9, X9, 0xFFFFFFFF
	1834 Subtract X19, X8, X9
	1835 Add X31, X19, 0
	1836 Move X19, X31
	1837 Move X0, X19
	1838 Move W1, W31
	1839 Call 0x3EB2B10
	1840 Move X20, X31
	1841 Move X24, X19
	1842 Move X0, [X23]
	1843 Move W8, [X0+309]
	1844 Move TEMP, X8
	1845 And TEMP, TEMP, 1
	1846 Compare TEMP, 1
	1847 JumpIfEqual {1849}
	1848 Call 0x1C5D684
	1849 Move X8, [X0+192]
	1850 Move X0, [X8+8]
	1851 Move W8, [X0+309]
	1852 Move TEMP, X8
	1853 And TEMP, TEMP, 1
	1854 Compare TEMP, 1
	1855 JumpIfEqual {1857}
	1856 Call 0x1C5D684
	1857 Move W8, [X0+224]
	1858 Compare W8, 0
	1859 JumpIfNotEqual {1861}
	1860 Call 0x1C17DFC
	1861 Move X0, [X23]
	1862 Move W8, [X0+309]
	1863 Move TEMP, X8
	1864 And TEMP, TEMP, 1
	1865 Compare TEMP, 1
	1866 JumpIfEqual {1868}
	1867 Call 0x1C5D684
	1868 Move X8, [X0+192]
	1869 Move X21, [X8+40]
	1870 Move X0, [X21+32]
	1871 Move W8, [X0+309]
	1872 Move TEMP, X8
	1873 And TEMP, TEMP, 1
	1874 Compare TEMP, 1
	1875 JumpIfEqual {1877}
	1876 Call 0x1C5D684
	1877 Move X8, [X0+192]
	1878 Move X0, [X8+8]
	1879 Move W8, [X0+309]
	1880 Move TEMP, X8
	1881 And TEMP, TEMP, 1
	1882 Compare TEMP, 1
	1883 JumpIfEqual {1885}
	1884 Call 0x1C5D684
	1885 Move W8, [X0+224]
	1886 Compare W8, 0
	1887 JumpIfNotEqual {1889}
	1888 Call 0x1C17DFC
	1889 Move X0, [X21+32]
	1890 Move W8, [X0+309]
	1891 Move TEMP, X8
	1892 And TEMP, TEMP, 1
	1893 Compare TEMP, 1
	1894 JumpIfEqual {1896}
	1895 Call 0x1C5D684
	1896 Move X8, [X0+192]
	1897 Move X0, [X8+8]
	1898 Move W8, [X0+309]
	1899 Move TEMP, X8
	1900 And TEMP, TEMP, 1
	1901 Compare TEMP, 1
	1902 JumpIfEqual {1904}
	1903 Call 0x1C5D684
	1904 Move X8, [X0+184]
	1905 NotImplemented "Instruction LDRSW not yet implemented."
	1906 NotImplemented "Instruction CMP not yet implemented."
	1907 Move X0, [X23]
	1908 Move W8, [X0+309]
	1909 Move TEMP, X8
	1910 And TEMP, TEMP, 1
	1911 Compare TEMP, 1
	1912 JumpIfEqual {1914}
	1913 Call 0x1C5D684
	1914 Move X8, [X0+192]
	1915 Move X0, [X8+8]
	1916 Move W8, [X0+309]
	1917 Move TEMP, X8
	1918 And TEMP, TEMP, 1
	1919 Compare TEMP, 1
	1920 JumpIfEqual {1922}
	1921 Call 0x1C5D684
	1922 Move W8, [X0+224]
	1923 Compare W8, 0
	1924 JumpIfNotEqual {1926}
	1925 Call 0x1C17DFC
	1926 Move X0, [X23]
	1927 Move W8, [X0+309]
	1928 Move TEMP, X8
	1929 And TEMP, TEMP, 1
	1930 Compare TEMP, 1
	1931 JumpIfEqual {1933}
	1932 Call 0x1C5D684
	1933 Move X8, [X0+192]
	1934 Subtract X0, X29, 56
	1935 Move W1, W20
	1936 Move X2, [X8+64]
	1937 Call 0x2822834, X0, X1
	1938 Move X8, [X23]
	1939 Move W21, W0
	1940 Move W9, [X8+309]
	1941 Move TEMP, X9
	1942 And TEMP, TEMP, 1
	1943 Compare TEMP, 1
	1944 JumpIfEqual {1948}
	1945 Move X0, X8
	1946 Call 0x1C5D684
	1947 Move X8, X0
	1948 Move X8, [X8+192]
	1949 Subtract X0, X29, 72
	1950 Move W1, W20
	1951 Move X2, [X8+64]
	1952 Call 0x2822834, X0, X1
	1953 Move X8, [X23]
	1954 Move W22, W0
	1955 Move W9, [X8+309]
	1956 Move TEMP, X9
	1957 And TEMP, TEMP, 1
	1958 Compare TEMP, 1
	1959 JumpIfEqual {1963}
	1960 Move X0, X8
	1961 Call 0x1C5D684
	1962 Move X8, X0
	1963 Move X8, [X8+192]
	1964 Move W0, W21
	1965 Move W1, W22
	1966 Move X2, [X8+72]
	1967 Call 0x22BD5BC
	1968 NotImplemented "Instruction SBFM not yet implemented."
	1969 Move [X24+4], W8
	1970 Add X20, X20, 1
	1971 Move X0, [X26]
	1972 Move X20, [X8+24]
	1973 Move W9, [X0+224]
	1974 Compare W9, 0
	1975 JumpIfNotEqual {1977}
	1976 Call 0x1C17DFC
	1977 Move X0, X20
	1978 Move X1, X31
	1979 Call Type.GetTypeFromHandle, X0
	1980 Move X8, 0x18F4000
	1981 Move X8, [X8+3464]
	1982 Move X20, X0
	1983 Move X1, X31
	1984 Move X8, [X8]
	1985 Move X0, X8
	1986 Call Type.GetTypeFromHandle, X0
	1987 Move X1, X0
	1988 Move X0, X20
	1989 Move X2, X31
	1990 Call Type.op_Equality, X0, X1
	1991 Move X8, [X23]
	1992 Move W20, W0
	1993 Move W9, [X8+309]
	1994 Move TEMP, X9
	1995 And TEMP, TEMP, 1
	1996 Compare TEMP, 1
	1997 JumpIfEqual {2001}
	1998 Move X0, X8
	1999 Call 0x1C5D684
	2000 Move X8, X0
	2001 Move X8, [X8+192]
	2002 Move TEMP, X20
	2003 And TEMP, TEMP, 1
	2004 Compare TEMP, 1
	2005 JumpIfNotEqual {2288}
	2006 Move X0, [X8+8]
	2007 Move W8, [X0+309]
	2008 Move TEMP, X8
	2009 And TEMP, TEMP, 1
	2010 Compare TEMP, 1
	2011 JumpIfEqual {2013}
	2012 Call 0x1C5D684
	2013 Move W8, [X0+224]
	2014 Compare W8, 0
	2015 JumpIfNotEqual {2017}
	2016 Call 0x1C17DFC
	2017 Move X0, [X23]
	2018 Move W8, [X0+309]
	2019 Move TEMP, X8
	2020 And TEMP, TEMP, 1
	2021 Compare TEMP, 1
	2022 JumpIfEqual {2024}
	2023 Call 0x1C5D684
	2024 Move X8, [X0+192]
	2025 Move X19, [X8+40]
	2026 Move X0, [X19+32]
	2027 Move W8, [X0+309]
	2028 Move TEMP, X8
	2029 And TEMP, TEMP, 1
	2030 Compare TEMP, 1
	2031 JumpIfEqual {2033}
	2032 Call 0x1C5D684
	2033 Move X8, [X0+192]
	2034 Move X0, [X8+8]
	2035 Move W8, [X0+309]
	2036 Move TEMP, X8
	2037 And TEMP, TEMP, 1
	2038 Compare TEMP, 1
	2039 JumpIfEqual {2041}
	2040 Call 0x1C5D684
	2041 Move W8, [X0+224]
	2042 Compare W8, 0
	2043 JumpIfNotEqual {2045}
	2044 Call 0x1C17DFC
	2045 Move X0, [X19+32]
	2046 Move W8, [X0+309]
	2047 Move TEMP, X8
	2048 And TEMP, TEMP, 1
	2049 Compare TEMP, 1
	2050 JumpIfEqual {2052}
	2051 Call 0x1C5D684
	2052 Move X8, [X0+192]
	2053 Move X0, [X8+8]
	2054 Move W8, [X0+309]
	2055 Move TEMP, X8
	2056 And TEMP, TEMP, 1
	2057 Compare TEMP, 1
	2058 JumpIfEqual {2060}
	2059 Call 0x1C5D684
	2060 Move X8, [X0+184]
	2061 NotImplemented "Instruction LDRSW not yet implemented."
	2062 Move X2, X8
	2063 ShiftRight X2, 61
	2064 And X2, X2, 0xFFFFFFF
	2065 Compare W8, 0
	2066 JumpIfEqual {2692}
	2067 Add X9, X2, 15
	2068 Add X8, X31, 0
	2069 And X9, X9, 0xFFFFFFFF
	2070 Subtract X19, X8, X9
	2071 Add X31, X19, 0
	2072 Move X19, X31
	2073 Move X0, X19
	2074 Move W1, W31
	2075 Call 0x3EB2B10
	2076 Move X20, X31
	2077 Move X24, X19
	2078 Move X0, [X23]
	2079 Move W8, [X0+309]
	2080 Move TEMP, X8
	2081 And TEMP, TEMP, 1
	2082 Compare TEMP, 1
	2083 JumpIfEqual {2085}
	2084 Call 0x1C5D684
	2085 Move X8, [X0+192]
	2086 Move X0, [X8+8]
	2087 Move W8, [X0+309]
	2088 Move TEMP, X8
	2089 And TEMP, TEMP, 1
	2090 Compare TEMP, 1
	2091 JumpIfEqual {2093}
	2092 Call 0x1C5D684
	2093 Move W8, [X0+224]
	2094 Compare W8, 0
	2095 JumpIfNotEqual {2097}
	2096 Call 0x1C17DFC
	2097 Move X0, [X23]
	2098 Move W8, [X0+309]
	2099 Move TEMP, X8
	2100 And TEMP, TEMP, 1
	2101 Compare TEMP, 1
	2102 JumpIfEqual {2104}
	2103 Call 0x1C5D684
	2104 Move X8, [X0+192]
	2105 Move X21, [X8+40]
	2106 Move X0, [X21+32]
	2107 Move W8, [X0+309]
	2108 Move TEMP, X8
	2109 And TEMP, TEMP, 1
	2110 Compare TEMP, 1
	2111 JumpIfEqual {2113}
	2112 Call 0x1C5D684
	2113 Move X8, [X0+192]
	2114 Move X0, [X8+8]
	2115 Move W8, [X0+309]
	2116 Move TEMP, X8
	2117 And TEMP, TEMP, 1
	2118 Compare TEMP, 1
	2119 JumpIfEqual {2121}
	2120 Call 0x1C5D684
	2121 Move W8, [X0+224]
	2122 Compare W8, 0
	2123 JumpIfNotEqual {2125}
	2124 Call 0x1C17DFC
	2125 Move X0, [X21+32]
	2126 Move W8, [X0+309]
	2127 Move TEMP, X8
	2128 And TEMP, TEMP, 1
	2129 Compare TEMP, 1
	2130 JumpIfEqual {2132}
	2131 Call 0x1C5D684
	2132 Move X8, [X0+192]
	2133 Move X0, [X8+8]
	2134 Move W8, [X0+309]
	2135 Move TEMP, X8
	2136 And TEMP, TEMP, 1
	2137 Compare TEMP, 1
	2138 JumpIfEqual {2140}
	2139 Call 0x1C5D684
	2140 Move X8, [X0+184]
	2141 NotImplemented "Instruction LDRSW not yet implemented."
	2142 NotImplemented "Instruction CMP not yet implemented."
	2143 Move X0, [X23]
	2144 Move W8, [X0+309]
	2145 Move TEMP, X8
	2146 And TEMP, TEMP, 1
	2147 Compare TEMP, 1
	2148 JumpIfEqual {2150}
	2149 Call 0x1C5D684
	2150 Move X8, [X0+192]
	2151 Move X0, [X8+8]
	2152 Move W8, [X0+309]
	2153 Move TEMP, X8
	2154 And TEMP, TEMP, 1
	2155 Compare TEMP, 1
	2156 JumpIfEqual {2158}
	2157 Call 0x1C5D684
	2158 Move W8, [X0+224]
	2159 Compare W8, 0
	2160 JumpIfNotEqual {2162}
	2161 Call 0x1C17DFC
	2162 Move X0, [X23]
	2163 Move W8, [X0+309]
	2164 Move TEMP, X8
	2165 And TEMP, TEMP, 1
	2166 Compare TEMP, 1
	2167 JumpIfEqual {2169}
	2168 Call 0x1C5D684
	2169 Move X8, [X0+192]
	2170 Subtract X0, X29, 56
	2171 Move W1, W20
	2172 Move X2, [X8+64]
	2173 Call 0x2822834, X0, X1
	2174 Move X8, [X23]
	2175 Move W21, W0
	2176 Move W9, [X8+309]
	2177 Move TEMP, X9
	2178 And TEMP, TEMP, 1
	2179 Compare TEMP, 1
	2180 JumpIfEqual {2184}
	2181 Move X0, X8
	2182 Call 0x1C5D684
	2183 Move X8, X0
	2184 Move X8, [X8+192]
	2185 Subtract X0, X29, 72
	2186 Move W1, W20
	2187 Move X2, [X8+64]
	2188 Call 0x2822834, X0, X1
	2189 Move X8, [X23]
	2190 Move W22, W0
	2191 Move W9, [X8+309]
	2192 Move TEMP, X9
	2193 And TEMP, TEMP, 1
	2194 Compare TEMP, 1
	2195 JumpIfEqual {2199}
	2196 Move X0, X8
	2197 Call 0x1C5D684
	2198 Move X8, X0
	2199 Move X8, [X8+192]
	2200 Move W0, W21
	2201 Move W1, W22
	2202 Move X2, [X8+72]
	2203 Call 0x22BD5BC
	2204 NotImplemented "Instruction SBFM not yet implemented."
	2205 Move [X24+4], W8
	2206 Add X20, X20, 1
	2207 Move X0, [X19+32]
	2208 Move W8, [X0+309]
	2209 Move TEMP, X8
	2210 And TEMP, TEMP, 1
	2211 Compare TEMP, 1
	2212 JumpIfEqual {2214}
	2213 Call 0x1C5D684
	2214 Move X8, [X26]
	2215 Move X9, [X0+192]
	2216 Move W10, [X8+224]
	2217 Move X24, [X9+24]
	2218 Compare W10, 0
	2219 JumpIfNotEqual {2222}
	2220 Move X0, X8
	2221 Call 0x1C17DFC
	2222 Move X0, X24
	2223 Move X1, X31
	2224 Call Type.GetTypeFromHandle, X0
	2225 Move X8, 0x18F5000
	2226 Move X8, [X8+2688]
	2227 Move X24, X0
	2228 Move X1, X31
	2229 Move X8, [X8]
	2230 Move X0, X8
	2231 Call Type.GetTypeFromHandle, X0
	2232 Move X1, X0
	2233 Move X0, X24
	2234 Move X2, X31
	2235 Call Type.op_Equality, X0, X1
	2236 Move TEMP, X0
	2237 And TEMP, TEMP, 1
	2238 Compare TEMP, 1
	2239 JumpIfNotEqual {2524}
	2240 NotImplemented "Instruction LDUR not yet implemented."
	2241 Move S0, W23
	2242 Move S1, W22
	2243 Move S3, W28
	2244 Move S2, W8
	2245 NotImplemented "Instruction LDUR not yet implemented."
	2246 NotImplemented "Instruction FCMP not yet implemented."
	2247 Move S0, W31
	2248 Move S4, W21
	2249 Move S6, W8
	2250 Move TEMP, 0
	2251 Not TEMP
	2252 Move W8, TEMP
	2253 Move S1, W8
	2254 Move S5, W20
	2255 NotImplemented "Instruction FCSEL not yet implemented."
	2256 NotImplemented "Instruction FCMP not yet implemented."
	2257 Move S7, W27
	2258 NotImplemented "Instruction FCSEL not yet implemented."
	2259 NotImplemented "Instruction FCMP not yet implemented."
	2260 Move W22, S16
	2261 Move [X29-92], S2
	2262 NotImplemented "Instruction FCSEL not yet implemented."
	2263 NotImplemented "Instruction FCMP not yet implemented."
	2264 Move W20, W22
	2265 ShiftRight W20, 8
	2266 And W20, W20, 0x7FFFFFFF
	2267 Move W21, W22
	2268 ShiftRight W21, 16
	2269 And W21, W21, 0x7FFFFFFF
	2270 NotImplemented "Instruction FCSEL not yet implemented."
	2271 NotImplemented "Instruction STURB not yet implemented."
	2272 NotImplemented "Instruction STURB not yet implemented."
	2273 NotImplemented "Instruction STURH not yet implemented."
	2274 Move [X29-104], S2
	2275 Move [X29-96], S0
	2276 Move X0, [X19+32]
	2277 Move W8, [X0+309]
	2278 Move TEMP, X8
	2279 And TEMP, TEMP, 1
	2280 Compare TEMP, 1
	2281 JumpIfEqual {2283}
	2282 Call 0x1C5D684
	2283 NotImplemented "Instruction LDUR not yet implemented."
	2284 NotImplemented "Instruction LDUR not yet implemented."
	2285 NotImplemented "Instruction STURB not yet implemented."
	2286 NotImplemented "Instruction STURB not yet implemented."
	2287 NotImplemented "Instruction STURH not yet implemented."
	2288 Move X0, [X26]
	2289 Move X20, [X8+24]
	2290 Move W9, [X0+224]
	2291 Compare W9, 0
	2292 JumpIfNotEqual {2294}
	2293 Call 0x1C17DFC
	2294 Move X0, X20
	2295 Move X1, X31
	2296 Call Type.GetTypeFromHandle, X0
	2297 Move X8, 0x18F5000
	2298 Move X8, [X8+2688]
	2299 Move X20, X0
	2300 Move X1, X31
	2301 Move X8, [X8]
	2302 Move X0, X8
	2303 Call Type.GetTypeFromHandle, X0
	2304 Move X1, X0
	2305 Move X0, X20
	2306 Move X2, X31
	2307 Call Type.op_Equality, X0, X1
	2308 Move X8, [X23]
	2309 Move W20, W0
	2310 Move W9, [X8+309]
	2311 Move TEMP, X9
	2312 And TEMP, TEMP, 1
	2313 Compare TEMP, 1
	2314 JumpIfEqual {2318}
	2315 Move X0, X8
	2316 Call 0x1C5D684
	2317 Move X8, X0
	2318 Move X8, [X8+192]
	2319 Move TEMP, X20
	2320 And TEMP, TEMP, 1
	2321 Compare TEMP, 1
	2322 JumpIfNotEqual {2594}
	2323 Move X0, [X8+8]
	2324 Move W8, [X0+309]
	2325 Move TEMP, X8
	2326 And TEMP, TEMP, 1
	2327 Compare TEMP, 1
	2328 JumpIfEqual {2330}
	2329 Call 0x1C5D684
	2330 Move W8, [X0+224]
	2331 Compare W8, 0
	2332 JumpIfNotEqual {2334}
	2333 Call 0x1C17DFC
	2334 Move X0, [X23]
	2335 Move W8, [X0+309]
	2336 Move TEMP, X8
	2337 And TEMP, TEMP, 1
	2338 Compare TEMP, 1
	2339 JumpIfEqual {2341}
	2340 Call 0x1C5D684
	2341 Move X8, [X0+192]
	2342 Move X19, [X8+40]
	2343 Move X0, [X19+32]
	2344 Move W8, [X0+309]
	2345 Move TEMP, X8
	2346 And TEMP, TEMP, 1
	2347 Compare TEMP, 1
	2348 JumpIfEqual {2350}
	2349 Call 0x1C5D684
	2350 Move X8, [X0+192]
	2351 Move X0, [X8+8]
	2352 Move W8, [X0+309]
	2353 Move TEMP, X8
	2354 And TEMP, TEMP, 1
	2355 Compare TEMP, 1
	2356 JumpIfEqual {2358}
	2357 Call 0x1C5D684
	2358 Move W8, [X0+224]
	2359 Compare W8, 0
	2360 JumpIfNotEqual {2362}
	2361 Call 0x1C17DFC
	2362 Move X0, [X19+32]
	2363 Move W8, [X0+309]
	2364 Move TEMP, X8
	2365 And TEMP, TEMP, 1
	2366 Compare TEMP, 1
	2367 JumpIfEqual {2369}
	2368 Call 0x1C5D684
	2369 Move X8, [X0+192]
	2370 Move X0, [X8+8]
	2371 Move W8, [X0+309]
	2372 Move TEMP, X8
	2373 And TEMP, TEMP, 1
	2374 Compare TEMP, 1
	2375 JumpIfEqual {2377}
	2376 Call 0x1C5D684
	2377 Move X8, [X0+184]
	2378 NotImplemented "Instruction LDRSW not yet implemented."
	2379 Move X2, X8
	2380 ShiftRight X2, 62
	2381 And X2, X2, 0x1FFFFFFF
	2382 Compare W8, 0
	2383 JumpIfEqual {2827}
	2384 Add X9, X2, 15
	2385 Add X8, X31, 0
	2386 And X9, X9, 0xFFFFFFFF
	2387 Subtract X19, X8, X9
	2388 Add X31, X19, 0
	2389 Move X19, X31
	2390 Move X0, X19
	2391 Move W1, W31
	2392 Call 0x3EB2B10
	2393 Move X20, X31
	2394 Move X24, X19
	2395 Move X0, [X23]
	2396 Move W8, [X0+309]
	2397 Move TEMP, X8
	2398 And TEMP, TEMP, 1
	2399 Compare TEMP, 1
	2400 JumpIfEqual {2402}
	2401 Call 0x1C5D684
	2402 Move X8, [X0+192]
	2403 Move X0, [X8+8]
	2404 Move W8, [X0+309]
	2405 Move TEMP, X8
	2406 And TEMP, TEMP, 1
	2407 Compare TEMP, 1
	2408 JumpIfEqual {2410}
	2409 Call 0x1C5D684
	2410 Move W8, [X0+224]
	2411 Compare W8, 0
	2412 JumpIfNotEqual {2414}
	2413 Call 0x1C17DFC
	2414 Move X0, [X23]
	2415 Move W8, [X0+309]
	2416 Move TEMP, X8
	2417 And TEMP, TEMP, 1
	2418 Compare TEMP, 1
	2419 JumpIfEqual {2421}
	2420 Call 0x1C5D684
	2421 Move X8, [X0+192]
	2422 Move X21, [X8+40]
	2423 Move X0, [X21+32]
	2424 Move W8, [X0+309]
	2425 Move TEMP, X8
	2426 And TEMP, TEMP, 1
	2427 Compare TEMP, 1
	2428 JumpIfEqual {2430}
	2429 Call 0x1C5D684
	2430 Move X8, [X0+192]
	2431 Move X0, [X8+8]
	2432 Move W8, [X0+309]
	2433 Move TEMP, X8
	2434 And TEMP, TEMP, 1
	2435 Compare TEMP, 1
	2436 JumpIfEqual {2438}
	2437 Call 0x1C5D684
	2438 Move W8, [X0+224]
	2439 Compare W8, 0
	2440 JumpIfNotEqual {2442}
	2441 Call 0x1C17DFC
	2442 Move X0, [X21+32]
	2443 Move W8, [X0+309]
	2444 Move TEMP, X8
	2445 And TEMP, TEMP, 1
	2446 Compare TEMP, 1
	2447 JumpIfEqual {2449}
	2448 Call 0x1C5D684
	2449 Move X8, [X0+192]
	2450 Move X0, [X8+8]
	2451 Move W8, [X0+309]
	2452 Move TEMP, X8
	2453 And TEMP, TEMP, 1
	2454 Compare TEMP, 1
	2455 JumpIfEqual {2457}
	2456 Call 0x1C5D684
	2457 Move X8, [X0+184]
	2458 NotImplemented "Instruction LDRSW not yet implemented."
	2459 NotImplemented "Instruction CMP not yet implemented."
	2460 Move X0, [X23]
	2461 Move W8, [X0+309]
	2462 Move TEMP, X8
	2463 And TEMP, TEMP, 1
	2464 Compare TEMP, 1
	2465 JumpIfEqual {2467}
	2466 Call 0x1C5D684
	2467 Move X8, [X0+192]
	2468 Move X0, [X8+8]
	2469 Move W8, [X0+309]
	2470 Move TEMP, X8
	2471 And TEMP, TEMP, 1
	2472 Compare TEMP, 1
	2473 JumpIfEqual {2475}
	2474 Call 0x1C5D684
	2475 Move W8, [X0+224]
	2476 Compare W8, 0
	2477 JumpIfNotEqual {2479}
	2478 Call 0x1C17DFC
	2479 Move X0, [X23]
	2480 Move W8, [X0+309]
	2481 Move TEMP, X8
	2482 And TEMP, TEMP, 1
	2483 Compare TEMP, 1
	2484 JumpIfEqual {2486}
	2485 Call 0x1C5D684
	2486 Move X8, [X0+192]
	2487 Subtract X0, X29, 56
	2488 Move W1, W20
	2489 Move X2, [X8+64]
	2490 Call 0x2822834, X0, X1
	2491 Move X8, [X23]
	2492 Move W21, W0
	2493 Move W9, [X8+309]
	2494 Move TEMP, X9
	2495 And TEMP, TEMP, 1
	2496 Compare TEMP, 1
	2497 JumpIfEqual {2501}
	2498 Move X0, X8
	2499 Call 0x1C5D684
	2500 Move X8, X0
	2501 Move X8, [X8+192]
	2502 Subtract X0, X29, 72
	2503 Move W1, W20
	2504 Move X2, [X8+64]
	2505 Call 0x2822834, X0, X1
	2506 Move X8, [X23]
	2507 Move W22, W0
	2508 Move W9, [X8+309]
	2509 Move TEMP, X9
	2510 And TEMP, TEMP, 1
	2511 Compare TEMP, 1
	2512 JumpIfEqual {2516}
	2513 Move X0, X8
	2514 Call 0x1C5D684
	2515 Move X8, X0
	2516 Move X8, [X8+192]
	2517 Move W0, W21
	2518 Move W1, W22
	2519 Move X2, [X8+72]
	2520 Call 0x22BD5BC
	2521 NotImplemented "Instruction SBFM not yet implemented."
	2522 Move [X24+8], X8
	2523 Add X20, X20, 1
	2524 Move X0, [X19+32]
	2525 Move W8, [X0+309]
	2526 Move TEMP, X8
	2527 And TEMP, TEMP, 1
	2528 Compare TEMP, 1
	2529 JumpIfEqual {2531}
	2530 Call 0x1C5D684
	2531 Move X8, [X26]
	2532 Move X9, [X0+192]
	2533 Move W10, [X8+224]
	2534 Move X24, [X9+24]
	2535 Compare W10, 0
	2536 JumpIfNotEqual {2539}
	2537 Move X0, X8
	2538 Call 0x1C17DFC
	2539 Move X0, X24
	2540 Move X1, X31
	2541 Call Type.GetTypeFromHandle, X0
	2542 Move X8, 0x18F4000
	2543 Move X8, [X8+2680]
	2544 Move X24, X0
	2545 Move X1, X31
	2546 Move X8, [X8]
	2547 Move X0, X8
	2548 Call Type.GetTypeFromHandle, X0
	2549 Move X1, X0
	2550 Move X0, X24
	2551 Move X2, X31
	2552 Call Type.op_Equality, X0, X1
	2553 Move TEMP, X0
	2554 And TEMP, TEMP, 1
	2555 Compare TEMP, 1
	2556 JumpIfNotEqual {3141}
	2557 Move D0, X23
	2558 Move D1, X22
	2559 NotImplemented "Instruction FCMP not yet implemented."
	2560 Move D0, X31
	2561 NotImplemented "Instruction MOVI not yet implemented."
	2562 Move D2, X21
	2563 Move D3, X20
	2564 NotImplemented "Instruction FCSEL not yet implemented."
	2565 NotImplemented "Instruction FCMP not yet implemented."
	2566 Move X23, D4
	2567 Move X20, X23
	2568 ShiftRight X20, 8
	2569 And X20, X20, 0x7FFFFFFF
	2570 Move X21, X23
	2571 ShiftRight X21, 16
	2572 And X21, X21, 0x7FFFFFFF
	2573 Move X22, X23
	2574 ShiftRight X22, 32
	2575 And X22, X22, 0x7FFFFFFF
	2576 NotImplemented "Instruction FCSEL not yet implemented."
	2577 NotImplemented "Instruction STURB not yet implemented."
	2578 NotImplemented "Instruction STURB not yet implemented."
	2579 NotImplemented "Instruction STURH not yet implemented."
	2580 Move [X29-92], W22
	2581 Move [X29-104], D0
	2582 Move X0, [X19+32]
	2583 Move W8, [X0+309]
	2584 Move TEMP, X8
	2585 And TEMP, TEMP, 1
	2586 Compare TEMP, 1
	2587 JumpIfEqual {2589}
	2588 Call 0x1C5D684
	2589 NotImplemented "Instruction LDUR not yet implemented."
	2590 NotImplemented "Instruction STURB not yet implemented."
	2591 NotImplemented "Instruction STURB not yet implemented."
	2592 NotImplemented "Instruction STURH not yet implemented."
	2593 Move [X29-36], W22
	2594 Move X0, [X26]
	2595 Move X20, [X8+24]
	2596 Move W9, [X0+224]
	2597 Compare W9, 0
	2598 JumpIfNotEqual {2600}
	2599 Call 0x1C17DFC
	2600 Move X0, X20
	2601 Move X1, X31
	2602 Call Type.GetTypeFromHandle, X0
	2603 Move X8, 0x18F4000
	2604 Move X8, [X8+2680]
	2605 Move X20, X0
	2606 Move X1, X31
	2607 Move X8, [X8]
	2608 Move X0, X8
	2609 Call Type.GetTypeFromHandle, X0
	2610 Move X1, X0
	2611 Move X0, X20
	2612 Move X2, X31
	2613 Call Type.op_Equality, X0, X1
	2614 Move TEMP, X0
	2615 And TEMP, TEMP, 1
	2616 Compare TEMP, 1
	2617 JumpIfNotEqual {3141}
	2618 Move X0, [X23]
	2619 Move W8, [X0+309]
	2620 Move TEMP, X8
	2621 And TEMP, TEMP, 1
	2622 Compare TEMP, 1
	2623 JumpIfEqual {2625}
	2624 Call 0x1C5D684
	2625 Move X8, [X0+192]
	2626 Move X0, [X8+8]
	2627 Move W8, [X0+309]
	2628 Move TEMP, X8
	2629 And TEMP, TEMP, 1
	2630 Compare TEMP, 1
	2631 JumpIfEqual {2633}
	2632 Call 0x1C5D684
	2633 Move W8, [X0+224]
	2634 Compare W8, 0
	2635 JumpIfNotEqual {2637}
	2636 Call 0x1C17DFC
	2637 Move X0, [X23]
	2638 Move W8, [X0+309]
	2639 Move TEMP, X8
	2640 And TEMP, TEMP, 1
	2641 Compare TEMP, 1
	2642 JumpIfEqual {2644}
	2643 Call 0x1C5D684
	2644 Move X8, [X0+192]
	2645 Move X19, [X8+40]
	2646 Move X0, [X19+32]
	2647 Move W8, [X0+309]
	2648 Move TEMP, X8
	2649 And TEMP, TEMP, 1
	2650 Compare TEMP, 1
	2651 JumpIfEqual {2653}
	2652 Call 0x1C5D684
	2653 Move X8, [X0+192]
	2654 Move X0, [X8+8]
	2655 Move W8, [X0+309]
	2656 Move TEMP, X8
	2657 And TEMP, TEMP, 1
	2658 Compare TEMP, 1
	2659 JumpIfEqual {2661}
	2660 Call 0x1C5D684
	2661 Move W8, [X0+224]
	2662 Compare W8, 0
	2663 JumpIfNotEqual {2665}
	2664 Call 0x1C17DFC
	2665 Move X0, [X19+32]
	2666 Move W8, [X0+309]
	2667 Move TEMP, X8
	2668 And TEMP, TEMP, 1
	2669 Compare TEMP, 1
	2670 JumpIfEqual {2672}
	2671 Call 0x1C5D684
	2672 Move X8, [X0+192]
	2673 Move X0, [X8+8]
	2674 Move W8, [X0+309]
	2675 Move TEMP, X8
	2676 And TEMP, TEMP, 1
	2677 Compare TEMP, 1
	2678 JumpIfEqual {2680}
	2679 Call 0x1C5D684
	2680 Move X8, [X0+184]
	2681 NotImplemented "Instruction LDRSW not yet implemented."
	2682 Move X2, X8
	2683 ShiftRight X2, 61
	2684 And X2, X2, 0xFFFFFFF
	2685 Compare W8, 0
	2686 JumpIfEqual {2968}
	2687 Add X9, X2, 15
	2688 Add X8, X31, 0
	2689 And X9, X9, 0xFFFFFFFF
	2690 Subtract X19, X8, X9
	2691 Add X31, X19, 0
	2692 Move X19, X31
	2693 Move X0, X19
	2694 Move W1, W31
	2695 Call 0x3EB2B10
	2696 Move X20, X31
	2697 Move X24, X19
	2698 Move X0, [X23]
	2699 Move W8, [X0+309]
	2700 Move TEMP, X8
	2701 And TEMP, TEMP, 1
	2702 Compare TEMP, 1
	2703 JumpIfEqual {2705}
	2704 Call 0x1C5D684
	2705 Move X8, [X0+192]
	2706 Move X0, [X8+8]
	2707 Move W8, [X0+309]
	2708 Move TEMP, X8
	2709 And TEMP, TEMP, 1
	2710 Compare TEMP, 1
	2711 JumpIfEqual {2713}
	2712 Call 0x1C5D684
	2713 Move W8, [X0+224]
	2714 Compare W8, 0
	2715 JumpIfNotEqual {2717}
	2716 Call 0x1C17DFC
	2717 Move X0, [X23]
	2718 Move W8, [X0+309]
	2719 Move TEMP, X8
	2720 And TEMP, TEMP, 1
	2721 Compare TEMP, 1
	2722 JumpIfEqual {2724}
	2723 Call 0x1C5D684
	2724 Move X8, [X0+192]
	2725 Move X21, [X8+40]
	2726 Move X0, [X21+32]
	2727 Move W8, [X0+309]
	2728 Move TEMP, X8
	2729 And TEMP, TEMP, 1
	2730 Compare TEMP, 1
	2731 JumpIfEqual {2733}
	2732 Call 0x1C5D684
	2733 Move X8, [X0+192]
	2734 Move X0, [X8+8]
	2735 Move W8, [X0+309]
	2736 Move TEMP, X8
	2737 And TEMP, TEMP, 1
	2738 Compare TEMP, 1
	2739 JumpIfEqual {2741}
	2740 Call 0x1C5D684
	2741 Move W8, [X0+224]
	2742 Compare W8, 0
	2743 JumpIfNotEqual {2745}
	2744 Call 0x1C17DFC
	2745 Move X0, [X21+32]
	2746 Move W8, [X0+309]
	2747 Move TEMP, X8
	2748 And TEMP, TEMP, 1
	2749 Compare TEMP, 1
	2750 JumpIfEqual {2752}
	2751 Call 0x1C5D684
	2752 Move X8, [X0+192]
	2753 Move X0, [X8+8]
	2754 Move W8, [X0+309]
	2755 Move TEMP, X8
	2756 And TEMP, TEMP, 1
	2757 Compare TEMP, 1
	2758 JumpIfEqual {2760}
	2759 Call 0x1C5D684
	2760 Move X8, [X0+184]
	2761 NotImplemented "Instruction LDRSW not yet implemented."
	2762 NotImplemented "Instruction CMP not yet implemented."
	2763 Move X0, [X23]
	2764 Move W8, [X0+309]
	2765 Move TEMP, X8
	2766 And TEMP, TEMP, 1
	2767 Compare TEMP, 1
	2768 JumpIfEqual {2770}
	2769 Call 0x1C5D684
	2770 Move X8, [X0+192]
	2771 Move X0, [X8+8]
	2772 Move W8, [X0+309]
	2773 Move TEMP, X8
	2774 And TEMP, TEMP, 1
	2775 Compare TEMP, 1
	2776 JumpIfEqual {2778}
	2777 Call 0x1C5D684
	2778 Move W8, [X0+224]
	2779 Compare W8, 0
	2780 JumpIfNotEqual {2782}
	2781 Call 0x1C17DFC
	2782 Move X0, [X23]
	2783 Move W8, [X0+309]
	2784 Move TEMP, X8
	2785 And TEMP, TEMP, 1
	2786 Compare TEMP, 1
	2787 JumpIfEqual {2789}
	2788 Call 0x1C5D684
	2789 Move X8, [X0+192]
	2790 Subtract X0, X29, 56
	2791 Move W1, W20
	2792 Move X2, [X8+64]
	2793 Call 0x2822834, X0, X1
	2794 Move X8, [X23]
	2795 Move W21, W0
	2796 Move W9, [X8+309]
	2797 Move TEMP, X9
	2798 And TEMP, TEMP, 1
	2799 Compare TEMP, 1
	2800 JumpIfEqual {2804}
	2801 Move X0, X8
	2802 Call 0x1C5D684
	2803 Move X8, X0
	2804 Move X8, [X8+192]
	2805 Subtract X0, X29, 72
	2806 Move W1, W20
	2807 Move X2, [X8+64]
	2808 Call 0x2822834, X0, X1
	2809 Move X8, [X23]
	2810 Move W22, W0
	2811 Move W9, [X8+309]
	2812 Move TEMP, X9
	2813 And TEMP, TEMP, 1
	2814 Compare TEMP, 1
	2815 JumpIfEqual {2819}
	2816 Move X0, X8
	2817 Call 0x1C5D684
	2818 Move X8, X0
	2819 Move X8, [X8+192]
	2820 Move W0, W21
	2821 Move W1, W22
	2822 Move X2, [X8+72]
	2823 Call 0x22BD5BC
	2824 NotImplemented "Instruction SBFM not yet implemented."
	2825 Move [X24+8], X8
	2826 Add X20, X20, 1
	2827 Move X19, X31
	2828 Move X0, X19
	2829 Move W1, W31
	2830 Call 0x3EB2B10
	2831 Move X20, X31
	2832 Move TEMP, 0
	2833 Not TEMP
	2834 Move W24, TEMP
	2835 Move S8, W31
	2836 Move X26, X19
	2837 Move X0, [X23]
	2838 Move W8, [X0+309]
	2839 Move TEMP, X8
	2840 And TEMP, TEMP, 1
	2841 Compare TEMP, 1
	2842 JumpIfEqual {2844}
	2843 Call 0x1C5D684
	2844 Move X8, [X0+192]
	2845 Move X0, [X8+8]
	2846 Move W8, [X0+309]
	2847 Move TEMP, X8
	2848 And TEMP, TEMP, 1
	2849 Compare TEMP, 1
	2850 JumpIfEqual {2852}
	2851 Call 0x1C5D684
	2852 Move W8, [X0+224]
	2853 Compare W8, 0
	2854 JumpIfNotEqual {2856}
	2855 Call 0x1C17DFC
	2856 Move X0, [X23]
	2857 Move W8, [X0+309]
	2858 Move TEMP, X8
	2859 And TEMP, TEMP, 1
	2860 Compare TEMP, 1
	2861 JumpIfEqual {2863}
	2862 Call 0x1C5D684
	2863 Move X8, [X0+192]
	2864 Move X21, [X8+40]
	2865 Move X0, [X21+32]
	2866 Move W8, [X0+309]
	2867 Move TEMP, X8
	2868 And TEMP, TEMP, 1
	2869 Compare TEMP, 1
	2870 JumpIfEqual {2872}
	2871 Call 0x1C5D684
	2872 Move X8, [X0+192]
	2873 Move X0, [X8+8]
	2874 Move W8, [X0+309]
	2875 Move TEMP, X8
	2876 And TEMP, TEMP, 1
	2877 Compare TEMP, 1
	2878 JumpIfEqual {2880}
	2879 Call 0x1C5D684
	2880 Move W8, [X0+224]
	2881 Compare W8, 0
	2882 JumpIfNotEqual {2884}
	2883 Call 0x1C17DFC
	2884 Move X0, [X21+32]
	2885 Move W8, [X0+309]
	2886 Move TEMP, X8
	2887 And TEMP, TEMP, 1
	2888 Compare TEMP, 1
	2889 JumpIfEqual {2891}
	2890 Call 0x1C5D684
	2891 Move X8, [X0+192]
	2892 Move X0, [X8+8]
	2893 Move W8, [X0+309]
	2894 Move TEMP, X8
	2895 And TEMP, TEMP, 1
	2896 Compare TEMP, 1
	2897 JumpIfEqual {2899}
	2898 Call 0x1C5D684
	2899 Move X8, [X0+184]
	2900 NotImplemented "Instruction LDRSW not yet implemented."
	2901 NotImplemented "Instruction CMP not yet implemented."
	2902 Move X0, [X23]
	2903 Move W8, [X0+309]
	2904 Move TEMP, X8
	2905 And TEMP, TEMP, 1
	2906 Compare TEMP, 1
	2907 JumpIfEqual {2909}
	2908 Call 0x1C5D684
	2909 Move X8, [X0+192]
	2910 Move X0, [X8+8]
	2911 Move W8, [X0+309]
	2912 Move TEMP, X8
	2913 And TEMP, TEMP, 1
	2914 Compare TEMP, 1
	2915 JumpIfEqual {2917}
	2916 Call 0x1C5D684
	2917 Move W8, [X0+224]
	2918 Compare W8, 0
	2919 JumpIfNotEqual {2921}
	2920 Call 0x1C17DFC
	2921 Move X0, [X23]
	2922 Move W8, [X0+309]
	2923 Move TEMP, X8
	2924 And TEMP, TEMP, 1
	2925 Compare TEMP, 1
	2926 JumpIfEqual {2928}
	2927 Call 0x1C5D684
	2928 Move X8, [X0+192]
	2929 Subtract X0, X29, 56
	2930 Move W1, W20
	2931 Move X2, [X8+64]
	2932 Call 0x2822834, X0, X1
	2933 Move X8, [X23]
	2934 Move W21, W0
	2935 Move W9, [X8+309]
	2936 Move TEMP, X9
	2937 And TEMP, TEMP, 1
	2938 Compare TEMP, 1
	2939 JumpIfEqual {2943}
	2940 Move X0, X8
	2941 Call 0x1C5D684
	2942 Move X8, X0
	2943 Move X8, [X8+192]
	2944 Subtract X0, X29, 72
	2945 Move W1, W20
	2946 Move X2, [X8+64]
	2947 Call 0x2822834, X0, X1
	2948 Move X8, [X23]
	2949 Move W22, W0
	2950 Move W9, [X8+309]
	2951 Move TEMP, X9
	2952 And TEMP, TEMP, 1
	2953 Compare TEMP, 1
	2954 JumpIfEqual {2958}
	2955 Move X0, X8
	2956 Call 0x1C5D684
	2957 Move X8, X0
	2958 Move X8, [X8+192]
	2959 Move W0, W21
	2960 Move W1, W22
	2961 Move X2, [X8+72]
	2962 Call 0x22BD5BC
	2963 And W31, W0, 1
	2964 Move S0, W24
	2965 NotImplemented "Instruction FCSEL not yet implemented."
	2966 Move [X26+4], S0
	2967 Add X20, X20, 1
	2968 Move X19, X31
	2969 Move X0, X19
	2970 Move W1, W31
	2971 Call 0x3EB2B10
	2972 Move X20, X31
	2973 Move D8, X31
	2974 NotImplemented "Instruction MOVI not yet implemented."
	2975 Move X24, X19
	2976 Move X0, [X23]
	2977 Move W8, [X0+309]
	2978 Move TEMP, X8
	2979 And TEMP, TEMP, 1
	2980 Compare TEMP, 1
	2981 JumpIfEqual {2983}
	2982 Call 0x1C5D684
	2983 Move X8, [X0+192]
	2984 Move X0, [X8+8]
	2985 Move W8, [X0+309]
	2986 Move TEMP, X8
	2987 And TEMP, TEMP, 1
	2988 Compare TEMP, 1
	2989 JumpIfEqual {2991}
	2990 Call 0x1C5D684
	2991 Move W8, [X0+224]
	2992 Compare W8, 0
	2993 JumpIfNotEqual {2995}
	2994 Call 0x1C17DFC
	2995 Move X0, [X23]
	2996 Move W8, [X0+309]
	2997 Move TEMP, X8
	2998 And TEMP, TEMP, 1
	2999 Compare TEMP, 1
	3000 JumpIfEqual {3002}
	3001 Call 0x1C5D684
	3002 Move X8, [X0+192]
	3003 Move X21, [X8+40]
	3004 Move X0, [X21+32]
	3005 Move W8, [X0+309]
	3006 Move TEMP, X8
	3007 And TEMP, TEMP, 1
	3008 Compare TEMP, 1
	3009 JumpIfEqual {3011}
	3010 Call 0x1C5D684
	3011 Move X8, [X0+192]
	3012 Move X0, [X8+8]
	3013 Move W8, [X0+309]
	3014 Move TEMP, X8
	3015 And TEMP, TEMP, 1
	3016 Compare TEMP, 1
	3017 JumpIfEqual {3019}
	3018 Call 0x1C5D684
	3019 Move W8, [X0+224]
	3020 Compare W8, 0
	3021 JumpIfNotEqual {3023}
	3022 Call 0x1C17DFC
	3023 Move X0, [X21+32]
	3024 Move W8, [X0+309]
	3025 Move TEMP, X8
	3026 And TEMP, TEMP, 1
	3027 Compare TEMP, 1
	3028 JumpIfEqual {3030}
	3029 Call 0x1C5D684
	3030 Move X8, [X0+192]
	3031 Move X0, [X8+8]
	3032 Move W8, [X0+309]
	3033 Move TEMP, X8
	3034 And TEMP, TEMP, 1
	3035 Compare TEMP, 1
	3036 JumpIfEqual {3038}
	3037 Call 0x1C5D684
	3038 Move X8, [X0+184]
	3039 NotImplemented "Instruction LDRSW not yet implemented."
	3040 NotImplemented "Instruction CMP not yet implemented."
	3041 Move X0, [X23]
	3042 Move W8, [X0+309]
	3043 Move TEMP, X8
	3044 And TEMP, TEMP, 1
	3045 Compare TEMP, 1
	3046 JumpIfEqual {3048}
	3047 Call 0x1C5D684
	3048 Move X8, [X0+192]
	3049 Move X0, [X8+8]
	3050 Move W8, [X0+309]
	3051 Move TEMP, X8
	3052 And TEMP, TEMP, 1
	3053 Compare TEMP, 1
	3054 JumpIfEqual {3056}
	3055 Call 0x1C5D684
	3056 Move W8, [X0+224]
	3057 Compare W8, 0
	3058 JumpIfNotEqual {3060}
	3059 Call 0x1C17DFC
	3060 Move X0, [X23]
	3061 Move W8, [X0+309]
	3062 Move TEMP, X8
	3063 And TEMP, TEMP, 1
	3064 Compare TEMP, 1
	3065 JumpIfEqual {3067}
	3066 Call 0x1C5D684
	3067 Move X8, [X0+192]
	3068 Subtract X0, X29, 56
	3069 Move W1, W20
	3070 Move X2, [X8+64]
	3071 Call 0x2822834, X0, X1
	3072 Move X8, [X23]
	3073 Move W21, W0
	3074 Move W9, [X8+309]
	3075 Move TEMP, X9
	3076 And TEMP, TEMP, 1
	3077 Compare TEMP, 1
	3078 JumpIfEqual {3082}
	3079 Move X0, X8
	3080 Call 0x1C5D684
	3081 Move X8, X0
	3082 Move X8, [X8+192]
	3083 Subtract X0, X29, 72
	3084 Move W1, W20
	3085 Move X2, [X8+64]
	3086 Call 0x2822834, X0, X1
	3087 Move X8, [X23]
	3088 Move W22, W0
	3089 Move W9, [X8+309]
	3090 Move TEMP, X9
	3091 And TEMP, TEMP, 1
	3092 Compare TEMP, 1
	3093 JumpIfEqual {3097}
	3094 Move X0, X8
	3095 Call 0x1C5D684
	3096 Move X8, X0
	3097 Move X8, [X8+192]
	3098 Move W0, W21
	3099 Move W1, W22
	3100 Move X2, [X8+72]
	3101 Call 0x22BD5BC
	3102 And W31, W0, 1
	3103 NotImplemented "Instruction FCSEL not yet implemented."
	3104 Move [X24+8], D0
	3105 Add X20, X20, 1
	3106 Move [X29-40], X31
	3107 Move [X29-32], X31
	3108 Move X0, [X23]
	3109 Move W8, [X0+309]
	3110 Move TEMP, X8
	3111 And TEMP, TEMP, 1
	3112 Compare TEMP, 1
	3113 JumpIfEqual {3115}
	3114 Call 0x1C5D684
	3115 Move X8, [X0+192]
	3116 Subtract X0, X29, 40
	3117 Move X1, X19
	3118 Move X2, [X8+96]
	3119 Call 0x2821AD4, X0, X1
	3120 Move X0, [X29-40]
	3121 Move X1, [X29-32]
	3122 Move X8, [X25+40]
	3123 NotImplemented "Instruction LDUR not yet implemented."
	3124 NotImplemented "Instruction CMP not yet implemented."
	3125 Subtract X31, X29, 16
	3126 Move X20, [X31+96]
	3127 Move X19, [X31+104]
	3128 Move X22, [X31+80]
	3129 Move X21, [X31+88]
	3130 Move X24, [X31+64]
	3131 Move X23, [X31+72]
	3132 Move X26, [X31+48]
	3133 Move X25, [X31+56]
	3134 Move X28, [X31+32]
	3135 Move X27, [X31+40]
	3136 Move X29, [X31+16]
	3137 Move X30, [X31+24]
	3138 Move D9, [X31+112]
	3139 Move D8, [X31+120]
	3140 Return X0
	3141 Move X0, 0x18CC000
	3142 Move X0, [X0+2880]
	3143 Call 0x1C17D08
	3144 Call 0x1C17F10
	3145 Move X20, X0
	3146 Move X0, 0x18F5000
	3147 Move X0, [X0+2704]
	3148 Call 0x1C17D08
	3149 Move X1, X0
	3150 Move X0, X20
	3151 Move X2, X31
	3152 Call NotSupportedException..ctor, X0, X1
	3153 Move X0, X20
	3154 Move X1, X19
	3155 Call 0x1C17DEC
	3156 Call 0x3EB2B20

Method: System.Boolean ScalarEquals(T left, T right)

Disassembly:
	0x02828978 LDR X0, [X19 + 0x20]
	0x0282897C LDRB W8, [X0 + 0x135]
	0x02828980 TBNZ X8, 0x0, 0x2828988
	0x02828984 BL 0x1C5C684
	0x02828988 LDR X8, [X21]
	0x0282898C LDR X9, [X0 + 0xC0]
	0x02828990 LDR W10, [X8 + 0xE0]
	0x02828994 LDR X20, [X9 + 0x18]
	0x02828998 CBNZ W10, 0x28289A4
	0x0282899C MOV X0, X8
	0x028289A0 BL 0x1C16DFC
	0x028289A4 MOV X0, X20
	0x028289A8 MOV X1, X31
	0x028289AC BL 0x338C698
	0x028289B0 ADRP X8, 0x18F2000
	0x028289B4 LDR X8, [X8 + 0xDA8]
	0x028289B8 MOV X20, X0
	0x028289BC MOV X1, X31
	0x028289C0 LDR X8, [X8]
	0x028289C4 MOV X0, X8
	0x028289C8 BL 0x338C698
	0x028289CC MOV X1, X0
	0x028289D0 MOV X0, X20
	0x028289D4 MOV X2, X31
	0x028289D8 BL 0x3395194
	0x028289DC TBZ X0, 0x0, 0x28289EC
	0x028289E0 ADRP X8, 0x18CC000
	0x028289E4 LDR X8, [X8 + 0x758]
	0x028289E8 B 0x2828A5C
	0x028289EC LDR X0, [X19 + 0x20]
	0x028289F0 LDRB W8, [X0 + 0x135]
	0x028289F4 TBNZ X8, 0x0, 0x28289FC
	0x028289F8 BL 0x1C5C684
	0x028289FC LDR X8, [X21]
	0x02828A00 LDR X9, [X0 + 0xC0]
	0x02828A04 LDR W10, [X8 + 0xE0]
	0x02828A08 LDR X20, [X9 + 0x18]
	0x02828A0C CBNZ W10, 0x2828A18
	0x02828A10 MOV X0, X8
	0x02828A14 BL 0x1C16DFC
	0x02828A18 MOV X0, X20
	0x02828A1C MOV X1, X31
	0x02828A20 BL 0x338C698
	0x02828A24 ADRP X8, 0x18F2000
	0x02828A28 LDR X8, [X8 + 0xD88]
	0x02828A2C MOV X20, X0
	0x02828A30 MOV X1, X31
	0x02828A34 LDR X8, [X8]
	0x02828A38 MOV X0, X8
	0x02828A3C BL 0x338C698
	0x02828A40 MOV X1, X0
	0x02828A44 MOV X0, X20
	0x02828A48 MOV X2, X31
	0x02828A4C BL 0x3395194
	0x02828A50 TBZ X0, 0x0, 0x2828A6C
	0x02828A54 ADRP X8, 0x18CD000
	0x02828A58 LDR X8, [X8 + 0xA60]
	0x02828A5C LDR X0, [X8]
	0x02828A60 MOVZ W8, 0x1
	0x02828A64 STR X8, [X31 + 0x8]
	0x02828A68 B 0x282871C
	0x02828A6C LDR X0, [X19 + 0x20]
	0x02828A70 LDRB W8, [X0 + 0x135]
	0x02828A74 TBNZ X8, 0x0, 0x2828A7C
	0x02828A78 BL 0x1C5C684
	0x02828A7C LDR X8, [X21]
	0x02828A80 LDR X9, [X0 + 0xC0]
	0x02828A84 LDR W10, [X8 + 0xE0]
	0x02828A88 LDR X20, [X9 + 0x18]
	0x02828A8C CBNZ W10, 0x2828A98
	0x02828A90 MOV X0, X8
	0x02828A94 BL 0x1C16DFC
	0x02828A98 MOV X0, X20
	0x02828A9C MOV X1, X31
	0x02828AA0 BL 0x338C698
	0x02828AA4 ADRP X8, 0x18F3000
	0x02828AA8 LDR X8, [X8 + 0xA80]
	0x02828AAC MOV X20, X0
	0x02828AB0 MOV X1, X31
	0x02828AB4 LDR X8, [X8]
	0x02828AB8 MOV X0, X8
	0x02828ABC BL 0x338C698
	0x02828AC0 MOV X1, X0
	0x02828AC4 MOV X0, X20
	0x02828AC8 MOV X2, X31
	0x02828ACC BL 0x3395194
	0x02828AD0 TBZ X0, 0x0, 0x2828AE8
	0x02828AD4 ADRP X8, 0x18CB000
	0x02828AD8 LDR X8, [X8 + 0xA90]
	0x02828ADC LDR X0, [X8]
	0x02828AE0 MOVZ W8, 0x3F800000
	0x02828AE4 B 0x2828970
	0x02828AE8 LDR X0, [X19 + 0x20]
	0x02828AEC LDRB W8, [X0 + 0x135]
	0x02828AF0 TBNZ X8, 0x0, 0x2828AF8
	0x02828AF4 BL 0x1C5C684
	0x02828AF8 LDR X8, [X21]
	0x02828AFC LDR X9, [X0 + 0xC0]
	0x02828B00 LDR W10, [X8 + 0xE0]
	0x02828B04 LDR X20, [X9 + 0x18]
	0x02828B08 CBNZ W10, 0x2828B14
	0x02828B0C MOV X0, X8
	0x02828B10 BL 0x1C16DFC
	0x02828B14 MOV X0, X20
	0x02828B18 MOV X1, X31
	0x02828B1C BL 0x338C698
	0x02828B20 ADRP X8, 0x18F3000
	0x02828B24 LDR X8, [X8 + 0xA78]
	0x02828B28 MOV X20, X0
	0x02828B2C MOV X1, X31
	0x02828B30 LDR X8, [X8]
	0x02828B34 MOV X0, X8
	0x02828B38 BL 0x338C698
	0x02828B3C MOV X1, X0
	0x02828B40 MOV X0, X20
	0x02828B44 MOV X2, X31
	0x02828B48 BL 0x3395194
	0x02828B4C TBZ X0, 0x0, 0x2828B6C
	0x02828B50 ADRP X8, 0x18CE000
	0x02828B54 LDR X8, [X8 + 0x978]
	0x02828B58 LDR X0, [X8]
	0x02828B5C MOVZ X8, 0x3FF00000
	0x02828B60 B 0x2828A64
	0x02828B64 BL 0x1C16F20
	0x02828B68 BL 0x1C171E0
	0x02828B6C ADRP X0, 0x18CB000
	0x02828B70 LDR X0, [X0 + 0xB40]
	0x02828B74 BL 0x1C16D08
	0x02828B78 BL 0x1C16F10
	0x02828B7C MOV X20, X0
	0x02828B80 ADRP X0, 0x18F4000
	0x02828B84 LDR X0, [X0 + 0xA90]
	0x02828B88 BL 0x1C16D08
	0x02828B8C MOV X1, X0
	0x02828B90 MOV X0, X20
	0x02828B94 MOV X2, X31
	0x02828B98 BL 0x3379A44
	0x02828B9C MOV X0, X20
	0x02828BA0 MOV X1, X19
	0x02828BA4 BL 0x1C16DEC
	0x02828BA8 STR X30, [X31 - 0x30]!
	0x02828BAC STP X22, X21, [X31 + 0x10]
	0x02828BB0 STP X20, X19, [X31 + 0x20]
	0x02828BB4 ADRP X20, 0x1BB2000
	0x02828BB8 LDRB W8, [X20 + 0xA7E]
	0x02828BBC MOV X19, X0
	0x02828BC0 TBNZ X8, 0x0, 0x2828CC8
	0x02828BC4 ADRP X0, 0x18F2000
	0x02828BC8 LDR X0, [X0 + 0xD68]
	0x02828BCC BL 0x1C16CF4
	0x02828BD0 ADRP X0, 0x18CC000
	0x02828BD4 LDR X0, [X0 + 0x9D8]
	0x02828BD8 BL 0x1C16CF4
	0x02828BDC ADRP X0, 0x18F3000
	0x02828BE0 LDR X0, [X0 + 0xA78]
	0x02828BE4 BL 0x1C16CF4
	0x02828BE8 ADRP X0, 0x18CE000
	0x02828BEC LDR X0, [X0 + 0x978]
	0x02828BF0 BL 0x1C16CF4
	0x02828BF4 ADRP X0, 0x18F2000
	0x02828BF8 LDR X0, [X0 + 0xD78]
	0x02828BFC BL 0x1C16CF4
	0x02828C00 ADRP X0, 0x18CF000
	0x02828C04 LDR X0, [X0 + 0x628]
	0x02828C08 BL 0x1C16CF4
	0x02828C0C ADRP X0, 0x18F2000
	0x02828C10 LDR X0, [X0 + 0xD80]
	0x02828C14 BL 0x1C16CF4
	0x02828C18 ADRP X0, 0x18CB000
	0x02828C1C LDR X0, [X0 + 0x758]
	0x02828C20 BL 0x1C16CF4
	0x02828C24 ADRP X0, 0x18F2000
	0x02828C28 LDR X0, [X0 + 0xD88]
	0x02828C2C BL 0x1C16CF4
	0x02828C30 ADRP X0, 0x18CD000
	0x02828C34 LDR X0, [X0 + 0xA60]
	0x02828C38 BL 0x1C16CF4
	0x02828C3C ADRP X0, 0x18F2000
	0x02828C40 LDR X0, [X0 + 0xD90]
	0x02828C44 BL 0x1C16CF4
	0x02828C48 ADRP X0, 0x18F4000
	0x02828C4C LDR X0, [X0 + 0x6B0]
	0x02828C50 BL 0x1C16CF4
	0x02828C54 ADRP X0, 0x18F3000
	0x02828C58 LDR X0, [X0 + 0xA80]
	0x02828C5C BL 0x1C16CF4
	0x02828C60 ADRP X0, 0x18CB000
	0x02828C64 LDR X0, [X0 + 0xA90]
	0x02828C68 BL 0x1C16CF4
	0x02828C6C ADRP X0, 0x18CB000
	0x02828C70 LDR X0, [X0 + 0x6C0]
	0x02828C74 BL 0x1C16CF4
	0x02828C78 ADRP X0, 0x18F2000
	0x02828C7C LDR X0, [X0 + 0xD98]
	0x02828C80 BL 0x1C16CF4
	0x02828C84 ADRP X0, 0x18D0000
	0x02828C88 LDR X0, [X0 + 0x658]
	0x02828C8C BL 0x1C16CF4
	0x02828C90 ADRP X0, 0x18F2000
	0x02828C94 LDR X0, [X0 + 0xDA0]
	0x02828C98 BL 0x1C16CF4
	0x02828C9C ADRP X0, 0x18D3000
	0x02828CA0 LDR X0, [X0 + 0x720]
	0x02828CA4 BL 0x1C16CF4
	0x02828CA8 ADRP X0, 0x18F2000
	0x02828CAC LDR X0, [X0 + 0xDA8]
	0x02828CB0 BL 0x1C16CF4
	0x02828CB4 ADRP X0, 0x18CC000
	0x02828CB8 LDR X0, [X0 + 0x758]
	0x02828CBC BL 0x1C16CF4
	0x02828CC0 MOVZ W8, 0x1
	0x02828CC4 STRB W8, [X20 + 0xA7E]
	0x02828CC8 LDR X0, [X19 + 0x20]
	0x02828CCC ADRP X21, 0x18CB000
	0x02828CD0 LDRB W8, [X0 + 0x135]
	0x02828CD4 LDR X21, [X21 + 0x6C0]
	0x02828CD8 TBNZ X8, 0x0, 0x2828CE0
	0x02828CDC BL 0x1C5C684
	0x02828CE0 LDR X8, [X21]
	0x02828CE4 LDR X9, [X0 + 0xC0]
	0x02828CE8 ADRP X22, 0x18F2000
	0x02828CEC LDR W10, [X8 + 0xE0]
	0x02828CF0 LDR X20, [X9 + 0x18]
	0x02828CF4 LDR X22, [X22 + 0xD68]
	0x02828CF8 CBNZ W10, 0x2828D04
	0x02828CFC MOV X0, X8
	0x02828D00 BL 0x1C16DFC
	0x02828D04 MOV X0, X20
	0x02828D08 MOV X1, X31
	0x02828D0C BL 0x338C698
	0x02828D10 LDR X8, [X22]
	0x02828D14 MOV X20, X0
	0x02828D18 MOV X1, X31
	0x02828D1C MOV X0, X8
	0x02828D20 BL 0x338C698
	0x02828D24 MOV X1, X0
	0x02828D28 MOV X0, X20
	0x02828D2C MOV X2, X31
	0x02828D30 BL 0x3395194
	0x02828D34 TBZ X0, 0x0, 0x2828D44
	0x02828D38 ADRP X8, 0x18CC000
	0x02828D3C LDR X8, [X8 + 0x9D8]
	0x02828D40 B 0x2828DB4
	0x02828D44 LDR X0, [X19 + 0x20]
	0x02828D48 LDRB W8, [X0 + 0x135]
	0x02828D4C TBNZ X8, 0x0, 0x2828D54
	0x02828D50 BL 0x1C5C684
	0x02828D54 LDR X8, [X21]
	0x02828D58 LDR X9, [X0 + 0xC0]
	0x02828D5C LDR W10, [X8 + 0xE0]
	0x02828D60 LDR X20, [X9 + 0x18]
	0x02828D64 CBNZ W10, 0x2828D70
	0x02828D68 MOV X0, X8
	0x02828D6C BL 0x1C16DFC
	0x02828D70 MOV X0, X20
	0x02828D74 MOV X1, X31
	0x02828D78 BL 0x338C698
	0x02828D7C ADRP X8, 0x18F2000
	0x02828D80 LDR X8, [X8 + 0xD90]
	0x02828D84 MOV X20, X0
	0x02828D88 MOV X1, X31
	0x02828D8C LDR X8, [X8]
	0x02828D90 MOV X0, X8
	0x02828D94 BL 0x338C698
	0x02828D98 MOV X1, X0
	0x02828D9C MOV X0, X20
	0x02828DA0 MOV X2, X31
	0x02828DA4 BL 0x3395194
	0x02828DA8 TBZ X0, 0x0, 0x2828E34
	0x02828DAC ADRP X8, 0x18F4000
	0x02828DB0 LDR X8, [X8 + 0x6B0]
	0x02828DB4 LDR X0, [X8]
	0x02828DB8 MOVZ W8, 0xFF
	0x02828DBC STRB W8, [X31 + 0x8]
	0x02828DC0 ADD X1, X31, 0x8
	0x02828DC4 BL 0x1C16E04
	0x02828DC8 LDR X8, [X19 + 0x20]
	0x02828DCC MOV X19, X0
	0x02828DD0 LDRB W9, [X8 + 0x135]
	0x02828DD4 TBNZ X9, 0x0, 0x2828DE4
	0x02828DD8 MOV X0, X8
	0x02828DDC BL 0x1C5C684
	0x02828DE0 MOV X8, X0
	0x02828DE4 LDR X8, [X8 + 0xC0]
	0x02828DE8 LDR X1, [X8 + 0x20]
	0x02828DEC LDRB W8, [X1 + 0x135]
	0x02828DF0 TBNZ X8, 0x0, 0x2828E00
	0x02828DF4 MOV X0, X1
	0x02828DF8 BL 0x1C5C684
	0x02828DFC MOV X1, X0
	0x02828E00 CBZ X19, 0x28291F8
	0x02828E04 LDR X8, [X19]
	0x02828E08 LDR X9, [X1 + 0x40]
	0x02828E0C MOV X0, X19
	0x02828E10 LDR X8, [X8 + 0x40]
	0x02828E14 CMP X8, X9
	0x02828E18 B.NE 0x28291FC
	0x02828E1C BL 0x1C16E08
	0x02828E20 LDRH W0, [X0]
	0x02828E24 LDP X20, X19, [X31 + 0x20]
	0x02828E28 LDP X22, X21, [X31 + 0x10]
	0x02828E2C LDR X30, [X31], #0x30
	0x02828E30 RET
	0x02828E34 LDR X0, [X19 + 0x20]
	0x02828E38 LDRB W8, [X0 + 0x135]
	0x02828E3C TBNZ X8, 0x0, 0x2828E44
	0x02828E40 BL 0x1C5C684
	0x02828E44 LDR X8, [X21]
	0x02828E48 LDR X9, [X0 + 0xC0]
	0x02828E4C LDR W10, [X8 + 0xE0]
	0x02828E50 LDR X20, [X9 + 0x18]
	0x02828E54 CBNZ W10, 0x2828E60
	0x02828E58 MOV X0, X8
	0x02828E5C BL 0x1C16DFC
	0x02828E60 MOV X0, X20
	0x02828E64 MOV X1, X31
	0x02828E68 BL 0x338C698
	0x02828E6C ADRP X8, 0x18F2000
	0x02828E70 LDR X8, [X8 + 0xD98]
	0x02828E74 MOV X20, X0
	0x02828E78 MOV X1, X31
	0x02828E7C LDR X8, [X8]
	0x02828E80 MOV X0, X8
	0x02828E84 BL 0x338C698
	0x02828E88 MOV X1, X0
	0x02828E8C MOV X0, X20
	0x02828E90 MOV X2, X31
	0x02828E94 BL 0x3395194
	0x02828E98 TBZ X0, 0x0, 0x2828EA8
	0x02828E9C ADRP X8, 0x18D0000
	0x02828EA0 LDR X8, [X8 + 0x658]
	0x02828EA4 B 0x2828F18
	0x02828EA8 LDR X0, [X19 + 0x20]
	0x02828EAC LDRB W8, [X0 + 0x135]
	0x02828EB0 TBNZ X8, 0x0, 0x2828EB8
	0x02828EB4 BL 0x1C5C684
	0x02828EB8 LDR X8, [X21]
	0x02828EBC LDR X9, [X0 + 0xC0]
	0x02828EC0 LDR W10, [X8 + 0xE0]
	0x02828EC4 LDR X20, [X9 + 0x18]
	0x02828EC8 CBNZ W10, 0x2828ED4
	0x02828ECC MOV X0, X8
	0x02828ED0 BL 0x1C16DFC
	0x02828ED4 MOV X0, X20
	0x02828ED8 MOV X1, X31
	0x02828EDC BL 0x338C698
	0x02828EE0 ADRP X8, 0x18F2000
	0x02828EE4 LDR X8, [X8 + 0xD78]
	0x02828EE8 MOV X20, X0
	0x02828EEC MOV X1, X31
	0x02828EF0 LDR X8, [X8]
	0x02828EF4 MOV X0, X8
	0x02828EF8 BL 0x338C698
	0x02828EFC MOV X1, X0
	0x02828F00 MOV X0, X20
	0x02828F04 MOV X2, X31
	0x02828F08 BL 0x3395194
	0x02828F0C TBZ X0, 0x0, 0x2828F28
	0x02828F10 ADRP X8, 0x18CF000
	0x02828F14 LDR X8, [X8 + 0x628]
	0x02828F18 LDR X0, [X8]
	0x02828F1C MOVZ W8, 0xFFFF
	0x02828F20 STRH W8, [X31 + 0x8]
	0x02828F24 B 0x2828DC0
	0x02828F28 LDR X0, [X19 + 0x20]
	0x02828F2C LDRB W8, [X0 + 0x135]
	0x02828F30 TBNZ X8, 0x0, 0x2828F38
	0x02828F34 BL 0x1C5C684
	0x02828F38 LDR X8, [X21]
	0x02828F3C LDR X9, [X0 + 0xC0]
	0x02828F40 LDR W10, [X8 + 0xE0]
	0x02828F44 LDR X20, [X9 + 0x18]
	0x02828F48 CBNZ W10, 0x2828F54
	0x02828F4C MOV X0, X8
	0x02828F50 BL 0x1C16DFC
	0x02828F54 MOV X0, X20
	0x02828F58 MOV X1, X31
	0x02828F5C BL 0x338C698
	0x02828F60 ADRP X8, 0x18F2000
	0x02828F64 LDR X8, [X8 + 0xDA0]
	0x02828F68 MOV X20, X0
	0x02828F6C MOV X1, X31
	0x02828F70 LDR X8, [X8]
	0x02828F74 MOV X0, X8
	0x02828F78 BL 0x338C698
	0x02828F7C MOV X1, X0
	0x02828F80 MOV X0, X20
	0x02828F84 MOV X2, X31
	0x02828F88 BL 0x3395194
	0x02828F8C TBZ X0, 0x0, 0x2828F9C
	0x02828F90 ADRP X8, 0x18D3000
	0x02828F94 LDR X8, [X8 + 0x720]
	0x02828F98 B 0x282900C
	0x02828F9C LDR X0, [X19 + 0x20]
	0x02828FA0 LDRB W8, [X0 + 0x135]
	0x02828FA4 TBNZ X8, 0x0, 0x2828FAC
	0x02828FA8 BL 0x1C5C684
	0x02828FAC LDR X8, [X21]
	0x02828FB0 LDR X9, [X0 + 0xC0]
	0x02828FB4 LDR W10, [X8 + 0xE0]
	0x02828FB8 LDR X20, [X9 + 0x18]
	0x02828FBC CBNZ W10, 0x2828FC8
	0x02828FC0 MOV X0, X8
	0x02828FC4 BL 0x1C16DFC
	0x02828FC8 MOV X0, X20
	0x02828FCC MOV X1, X31
	0x02828FD0 BL 0x338C698
	0x02828FD4 ADRP X8, 0x18F2000
	0x02828FD8 LDR X8, [X8 + 0xD80]
	0x02828FDC MOV X20, X0
	0x02828FE0 MOV X1, X31
	0x02828FE4 LDR X8, [X8]
	0x02828FE8 MOV X0, X8
	0x02828FEC BL 0x338C698
	0x02828FF0 MOV X1, X0
	0x02828FF4 MOV X0, X20
	0x02828FF8 MOV X2, X31
	0x02828FFC BL 0x3395194
	0x02829000 TBZ X0, 0x0, 0x282901C
	0x02829004 ADRP X8, 0x18CA000
	0x02829008 LDR X8, [X8 + 0x758]
	0x0282900C LDR X0, [X8]
	0x02829010 MOVN W8, 0x0
	0x02829014 STR W8, [X31 + 0x8]
	0x02829018 B 0x2828DC0
	0x0282901C LDR X0, [X19 + 0x20]
	0x02829020 LDRB W8, [X0 + 0x135]
	0x02829024 TBNZ X8, 0x0, 0x282902C
	0x02829028 BL 0x1C5C684
	0x0282902C LDR X8, [X21]
	0x02829030 LDR X9, [X0 + 0xC0]
	0x02829034 LDR W10, [X8 + 0xE0]
	0x02829038 LDR X20, [X9 + 0x18]
	0x0282903C CBNZ W10, 0x2829048
	0x02829040 MOV X0, X8
	0x02829044 BL 0x1C16DFC
	0x02829048 MOV X0, X20
	0x0282904C MOV X1, X31
	0x02829050 BL 0x338C698
	0x02829054 ADRP X8, 0x18F1000
	0x02829058 LDR X8, [X8 + 0xDA8]
	0x0282905C MOV X20, X0
	0x02829060 MOV X1, X31
	0x02829064 LDR X8, [X8]
	0x02829068 MOV X0, X8
	0x0282906C BL 0x338C698
	0x02829070 MOV X1, X0
	0x02829074 MOV X0, X20
	0x02829078 MOV X2, X31
	0x0282907C BL 0x3395194
	0x02829080 TBZ X0, 0x0, 0x2829090
	0x02829084 ADRP X8, 0x18CB000
	0x02829088 LDR X8, [X8 + 0x758]
	0x0282908C B 0x28291E8
	0x02829090 LDR X0, [X19 + 0x20]
	0x02829094 LDRB W8, [X0 + 0x135]
	0x02829098 TBNZ X8, 0x0, 0x28290A0
	0x0282909C BL 0x1C5C684
	0x028290A0 LDR X8, [X21]
	0x028290A4 LDR X9, [X0 + 0xC0]
	0x028290A8 LDR W10, [X8 + 0xE0]
	0x028290AC LDR X20, [X9 + 0x18]
	0x028290B0 CBNZ W10, 0x28290BC
	0x028290B4 MOV X0, X8
	0x028290B8 BL 0x1C16DFC
	0x028290BC MOV X0, X20
	0x028290C0 MOV X1, X31
	0x028290C4 BL 0x338C698
	0x028290C8 ADRP X8, 0x18F1000
	0x028290CC LDR X8, [X8 + 0xD88]
	0x028290D0 MOV X20, X0
	0x028290D4 MOV X1, X31
	0x028290D8 LDR X8, [X8]
	0x028290DC MOV X0, X8
	0x028290E0 BL 0x338C698
	0x028290E4 MOV X1, X0
	0x028290E8 MOV X0, X20
	0x028290EC MOV X2, X31
	0x028290F0 BL 0x3395194
	0x028290F4 TBZ X0, 0x0, 0x2829104
	0x028290F8 ADRP X8, 0x18CC000
	0x028290FC LDR X8, [X8 + 0xA60]
	0x02829100 B 0x28291E8
	0x02829104 LDR X0, [X19 + 0x20]
	0x02829108 LDRB W8, [X0 + 0x135]
	0x0282910C TBNZ X8, 0x0, 0x2829114
	0x02829110 BL 0x1C5C684
	0x02829114 LDR X8, [X21]
	0x02829118 LDR X9, [X0 + 0xC0]
	0x0282911C LDR W10, [X8 + 0xE0]
	0x02829120 LDR X20, [X9 + 0x18]
	0x02829124 CBNZ W10, 0x2829130
	0x02829128 MOV X0, X8
	0x0282912C BL 0x1C16DFC
	0x02829130 MOV X0, X20
	0x02829134 MOV X1, X31
	0x02829138 BL 0x338C698
	0x0282913C ADRP X8, 0x18F2000
	0x02829140 LDR X8, [X8 + 0xA80]
	0x02829144 MOV X20, X0
	0x02829148 MOV X1, X31
	0x0282914C LDR X8, [X8]
	0x02829150 MOV X0, X8
	0x02829154 BL 0x338C698
	0x02829158 MOV X1, X0
	0x0282915C MOV X0, X20
	0x02829160 MOV X2, X31
	0x02829164 BL 0x3395194
	0x02829168 TBZ X0, 0x0, 0x2829178
	0x0282916C ADRP X8, 0x18CA000
	0x02829170 LDR X8, [X8 + 0xA90]
	0x02829174 B 0x282900C
	0x02829178 LDR X0, [X19 + 0x20]
	0x0282917C LDRB W8, [X0 + 0x135]
	0x02829180 TBNZ X8, 0x0, 0x2829188
	0x02829184 BL 0x1C5C684
	0x02829188 LDR X8, [X21]
	0x0282918C LDR X9, [X0 + 0xC0]
	0x02829190 LDR W10, [X8 + 0xE0]
	0x02829194 LDR X20, [X9 + 0x18]
	0x02829198 CBNZ W10, 0x28291A4
	0x0282919C MOV X0, X8
	0x028291A0 BL 0x1C16DFC
	0x028291A4 MOV X0, X20
	0x028291A8 MOV X1, X31
	0x028291AC BL 0x338C698
	0x028291B0 ADRP X8, 0x18F2000
	0x028291B4 LDR X8, [X8 + 0xA78]
	0x028291B8 MOV X20, X0
	0x028291BC MOV X1, X31
	0x028291C0 LDR X8, [X8]
	0x028291C4 MOV X0, X8
	0x028291C8 BL 0x338C698
	0x028291CC MOV X1, X0
	0x028291D0 MOV X0, X20
	0x028291D4 MOV X2, X31
	0x028291D8 BL 0x3395194
	0x028291DC TBZ X0, 0x0, 0x2829200
	0x028291E0 ADRP X8, 0x18CD000
	0x028291E4 LDR X8, [X8 + 0x978]
	0x028291E8 LDR X0, [X8]
	0x028291EC MOVN X8, 0x0
	0x028291F0 STR X8, [X31 + 0x8]
	0x028291F4 B 0x2828DC0
	0x028291F8 BL 0x1C16F20
	0x028291FC BL 0x1C171E0
	0x02829200 ADRP X0, 0x18CA000
	0x02829204 LDR X0, [X0 + 0xB40]
	0x02829208 BL 0x1C16D08
	0x0282920C BL 0x1C16F10
	0x02829210 MOV X20, X0
	0x02829214 ADRP X0, 0x18F3000
	0x02829218 LDR X0, [X0 + 0xA90]
	0x0282921C BL 0x1C16D08
	0x02829220 MOV X1, X0
	0x02829224 MOV X0, X20
	0x02829228 MOV X2, X31
	0x0282922C BL 0x3379A44
	0x02829230 MOV X0, X20
	0x02829234 MOV X1, X19
	0x02829238 BL 0x1C16DEC
	0x0282923C SUB X31, X31, 0x50
	0x02829240 STP X30, X21, [X31 + 0x30]
	0x02829244 STP X20, X19, [X31 + 0x40]
	0x02829248 MRS X21, 0xC000
	0x0282924C LDR X8, [X21 + 0x28]
	0x02829250 MOV X19, X0
	0x02829254 STR X8, [X31 + 0x28]
	0x02829258 LDR X0, [X0 + 0x20]
	0x0282925C LDRB W8, [X0 + 0x135]
	0x02829260 TBNZ X8, 0x0, 0x2829268
	0x02829264 BL 0x1C5C684
	0x02829268 LDR X8, [X0 + 0xC0]
	0x0282926C LDR X0, [X8 + 0x70]
	0x02829270 BL 0x281E5C8
	0x02829274 LDR X8, [X19 + 0x20]
	0x02829278 MOV W20, W0
	0x0282927C LDRB W9, [X8 + 0x135]
	0x02829280 TBNZ X9, 0x0, 0x2829290
	0x02829284 MOV X0, X8
	0x02829288 BL 0x1C5C684
	0x0282928C MOV X8, X0
	0x02829290 LDR X8, [X8 + 0xC0]
	0x02829294 LDR X0, [X8 + 0x8]
	0x02829298 LDRB W8, [X0 + 0x135]
	0x0282929C TBNZ X8, 0x0, 0x28292A4
	0x028292A0 BL 0x1C5C684
	0x028292A4 LDR X8, [X0 + 0xB8]
	0x028292A8 STR W20, [X8]
	0x028292AC LDR X0, [X19 + 0x20]
	0x028292B0 LDRB W8, [X0 + 0x135]
	0x028292B4 TBNZ X8, 0x0, 0x28292BC
	0x028292B8 BL 0x1C5C684
	0x028292BC LDR X8, [X0 + 0xC0]
	0x028292C0 LDR X0, [X8 + 0x8]
	0x028292C4 LDRB W8, [X0 + 0x135]
	0x028292C8 TBNZ X8, 0x0, 0x28292D0
	0x028292CC BL 0x1C5C684
	0x028292D0 LDR X8, [X0 + 0xB8]
	0x028292D4 STP X31, X31, [X8 + 0x8]
	0x028292D8 LDR X0, [X19 + 0x20]
	0x028292DC LDRB W8, [X0 + 0x135]
	0x028292E0 TBNZ X8, 0x0, 0x28292E8
	0x028292E4 BL 0x1C5C684
	0x028292E8 LDR X8, [X0 + 0xC0]
	0x028292EC LDR X0, [X8 + 0x78]
	0x028292F0 BL 0x2834424
	0x028292F4 STP X31, X31, [X31 + 0x18]
	0x028292F8 LDR X8, [X19 + 0x20]
	0x028292FC MOV W20, W0
	0x02829300 LDRB W9, [X8 + 0x135]
	0x02829304 TBNZ X9, 0x0, 0x2829314
	0x02829308 MOV X0, X8
	0x0282930C BL 0x1C5C684
	0x02829310 MOV X8, X0
	0x02829314 LDR X8, [X8 + 0xC0]
	0x02829318 ADD X0, X31, 0x18
	0x0282931C MOV W1, W20
	0x02829320 LDR X2, [X8 + 0x80]
	0x02829324 BL 0x281EB6C
	0x02829328 LDR X0, [X19 + 0x20]
	0x0282932C LDRB W8, [X0 + 0x135]
	0x02829330 TBNZ X8, 0x0, 0x2829338
	0x02829334 BL 0x1C5C684
	0x02829338 LDR X8, [X0 + 0xC0]
	0x0282933C LDR X0, [X8 + 0x8]
	0x02829340 LDRB W8, [X0 + 0x135]
	0x02829344 TBNZ X8, 0x0, 0x282934C
	0x02829348 BL 0x1C5C684
	0x0282934C LDR X8, [X0 + 0xB8]
	0x02829350 LDUR V0, [X31 + 0x18]
	0x02829354 STUR V0, [X8 + 0x18]
	0x02829358 LDR X0, [X19 + 0x20]
	0x0282935C LDRB W8, [X0 + 0x135]
	0x02829360 TBNZ X8, 0x0, 0x2829368
	0x02829364 BL 0x1C5C684
	0x02829368 LDR X8, [X0 + 0xC0]
	0x0282936C LDR X0, [X8 + 0x88]
	0x02829370 BL 0x2834AC8
	0x02829374 STP X31, X31, [X31 + 0x8]
	0x02829378 LDR X8, [X19 + 0x20]
	0x0282937C MOV W20, W0
	0x02829380 LDRB W9, [X8 + 0x135]
	0x02829384 TBNZ X9, 0x0, 0x2829394
	0x02829388 MOV X0, X8
	0x0282938C BL 0x1C5C684
	0x02829390 MOV X8, X0
	0x02829394 LDR X8, [X8 + 0xC0]
	0x02829398 ADD X0, X31, 0x8
	0x0282939C MOV W1, W20
	0x028293A0 LDR X2, [X8 + 0x80]
	0x028293A4 BL 0x281EB6C
	0x028293A8 LDR X0, [X19 + 0x20]
	0x028293AC LDRB W8, [X0 + 0x135]
	0x028293B0 TBNZ X8, 0x0, 0x28293B8
	0x028293B4 BL 0x1C5C684
	0x028293B8 LDR X8, [X0 + 0xC0]
	0x028293BC LDR X0, [X8 + 0x8]
	0x028293C0 LDRB W8, [X0 + 0x135]
	0x028293C4 TBNZ X8, 0x0, 0x28293CC
	0x028293C8 BL 0x1C5C684
	0x028293CC LDR X8, [X0 + 0xB8]
	0x028293D0 LDUR V0, [X31 + 0x8]
	0x028293D4 STUR V0, [X8 + 0x28]
	0x028293D8 LDR X8, [X21 + 0x28]
	0x028293DC LDR X9, [X31 + 0x28]
	0x028293E0 CMP X8, X9
	0x028293E4 B.NE 0x28293F8
	0x028293E8 LDP X20, X19, [X31 + 0x40]
	0x028293EC LDP X30, X21, [X31 + 0x30]
	0x028293F0 ADD X31, X31, 0x50
	0x028293F4 RET
	0x028293F8 BL 0x3EB1B20
	0x028293FC STP X30, X19, [X31 - 0x10]!
	0x02829400 MOV X19, X0
	0x02829404 LDR X0, [X0 + 0x20]
	0x02829408 LDRB W8, [X0 + 0x135]
	0x0282940C TBNZ X8, 0x0, 0x2829414
	0x02829410 BL 0x1C5C684
	0x02829414 LDR X8, [X0 + 0xC0]
	0x02829418 LDR X0, [X8 + 0x8]
	0x0282941C LDRB W8, [X0 + 0x135]
	0x02829420 TBNZ X8, 0x0, 0x2829428
	0x02829424 BL 0x1C5C684
	0x02829428 LDR W8, [X0 + 0xE0]
	0x0282942C CBNZ W8, 0x2829434
	0x02829430 BL 0x1C16DFC
	0x02829434 LDR X0, [X19 + 0x20]
	0x02829438 LDRB W8, [X0 + 0x135]
	0x0282943C TBNZ X8, 0x0, 0x2829444
	0x02829440 BL 0x1C5C684
	0x02829444 LDR X8, [X0 + 0xC0]
	0x02829448 LDR X0, [X8 + 0x8]
	0x0282944C LDRB W8, [X0 + 0x135]
	0x02829450 TBNZ X8, 0x0, 0x2829458
	0x02829454 BL 0x1C5C684
	0x02829458 LDR X8, [X0 + 0xB8]
	0x0282945C LDR W0, [X8]
	0x02829460 LDP X30, X19, [X31], #0x10
	0x02829464 RET
	0x02829468 STP X30, X19, [X31 - 0x10]!
	0x0282946C MOV X19, X0
	0x02829470 LDR X0, [X0 + 0x20]
	0x02829474 LDRB W8, [X0 + 0x135]
	0x02829478 TBNZ X8, 0x0, 0x2829480
	0x0282947C BL 0x1C5C684
	0x02829480 LDR X8, [X0 + 0xC0]
	0x02829484 LDR X0, [X8 + 0x8]
	0x02829488 LDRB W8, [X0 + 0x135]
	0x0282948C TBNZ X8, 0x0, 0x2829494
	0x02829490 BL 0x1C5C684
	0x02829494 LDR W8, [X0 + 0xE0]
	0x02829498 CBNZ W8, 0x28294A0
	0x0282949C BL 0x1C16DFC
	0x028294A0 LDR X0, [X19 + 0x20]
	0x028294A4 LDRB W8, [X0 + 0x135]
	0x028294A8 TBNZ X8, 0x0, 0x28294B0
	0x028294AC BL 0x1C5C684
	0x028294B0 LDR X8, [X0 + 0xC0]
	0x028294B4 LDR X0, [X8 + 0x8]
	0x028294B8 LDRB W8, [X0 + 0x135]
	0x028294BC TBNZ X8, 0x0, 0x28294C4
	0x028294C0 BL 0x1C5C684
	0x028294C4 LDR X8, [X0 + 0xB8]
	0x028294C8 LDP X0, X1, [X8 + 0x8]
	0x028294CC LDP X30, X19, [X31], #0x10
	0x028294D0 RET
	0x028294D4 STR X30, [X31 - 0x40]!
	0x028294D8 STP X24, X23, [X31 + 0x10]
	0x028294DC STP X22, X21, [X31 + 0x20]
	0x028294E0 STP X20, X19, [X31 + 0x30]
	0x028294E4 ADRP X20, 0x1BB1000
	0x028294E8 LDRB W8, [X20 + 0xA7F]
	0x028294EC MOV X19, X0
	0x028294F0 TBNZ X8, 0x0, 0x2829580
	0x028294F4 ADRP X0, 0x18F1000
	0x028294F8 LDR X0, [X0 + 0xD68]
	0x028294FC BL 0x1C16CF4
	0x02829500 ADRP X0, 0x18F2000

ISIL:
	001 Move [X31-80], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x1BB3000
	011 Move W8, [X22+2684]
	012 Move X20, X2
	013 Move W19, W1
	014 Move W21, W0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {84}
	019 Move X0, 0x18F3000
	020 Move X0, [X0+3432]
	021 Call 0x1C17CF4
	022 Move X0, 0x18CD000
	023 Move X0, [X0+2520]
	024 Call 0x1C17CF4
	025 Move X0, 0x18F4000
	026 Move X0, [X0+2680]
	027 Call 0x1C17CF4
	028 Move X0, 0x18CF000
	029 Move X0, [X0+2424]
	030 Call 0x1C17CF4
	031 Move X0, 0x18F3000
	032 Move X0, [X0+3448]
	033 Call 0x1C17CF4
	034 Move X0, 0x18D0000
	035 Move X0, [X0+1576]
	036 Call 0x1C17CF4
	037 Move X0, 0x18F3000
	038 Move X0, [X0+3456]
	039 Call 0x1C17CF4
	040 Move X0, 0x18CC000
	041 Move X0, [X0+1880]
	042 Call 0x1C17CF4
	043 Move X0, 0x18F3000
	044 Move X0, [X0+3464]
	045 Call 0x1C17CF4
	046 Move X0, 0x18CE000
	047 Move X0, [X0+2656]
	048 Call 0x1C17CF4
	049 Move X0, 0x18F3000
	050 Move X0, [X0+3472]
	051 Call 0x1C17CF4
	052 Move X0, 0x18F5000
	053 Move X0, [X0+1712]
	054 Call 0x1C17CF4
	055 Move X0, 0x18F4000
	056 Move X0, [X0+2688]
	057 Call 0x1C17CF4
	058 Move X0, 0x18CC000
	059 Move X0, [X0+2704]
	060 Call 0x1C17CF4
	061 Move X0, 0x18CC000
	062 Move X0, [X0+1728]
	063 Call 0x1C17CF4
	064 Move X0, 0x18F3000
	065 Move X0, [X0+3480]
	066 Call 0x1C17CF4
	067 Move X0, 0x18D1000
	068 Move X0, [X0+1624]
	069 Call 0x1C17CF4
	070 Move X0, 0x18F3000
	071 Move X0, [X0+3488]
	072 Call 0x1C17CF4
	073 Move X0, 0x18D4000
	074 Move X0, [X0+1824]
	075 Call 0x1C17CF4
	076 Move X0, 0x18F3000
	077 Move X0, [X0+3496]
	078 Call 0x1C17CF4
	079 Move X0, 0x18CD000
	080 Move X0, [X0+1880]
	081 Call 0x1C17CF4
	082 Move W8, 1
	083 Move [X22+2684], W8
	084 Move X23, X20
	085 Add X23, X23, 32
	086 Move X0, [X23]
	087 Move X24, 0x18CC000
	088 Move W8, [X0+309]
	089 Move X24, [X24+1728]
	090 Move TEMP, X8
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {95}
	094 Call 0x1C5D684
	095 Move X8, [X24]
	096 Move X9, [X0+192]
	097 Move X25, 0x18F3000
	098 Move W10, [X8+224]
	099 Move X22, [X9+24]
	100 Move X25, [X25+3432]
	101 Compare W10, 0
	102 JumpIfNotEqual {105}
	103 Move X0, X8
	104 Call 0x1C17DFC
	105 Move X0, X22
	106 Move X1, X31
	107 Call Type.GetTypeFromHandle, X0
	108 Move X8, [X25]
	109 Move X22, X0
	110 Move X1, X31
	111 Move X0, X8
	112 Call Type.GetTypeFromHandle, X0
	113 Move X1, X0
	114 Move X0, X22
	115 Move X2, X31
	116 Call Type.op_Equality, X0, X1
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfNotEqual {152}
	121 NotImplemented "Instruction STRH not yet implemented."
	122 Move X0, [X23]
	123 Move W8, [X0+309]
	124 Move TEMP, X8
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {129}
	128 Call 0x1C5D684
	129 Move X8, [X0+192]
	130 Add X1, X31, 12
	131 Move X0, [X8+32]
	132 Call 0x1C17E04
	133 NotImplemented "Instruction STRH not yet implemented."
	134 Move X8, [X23]
	135 Move X19, X0
	136 Move W9, [X8+309]
	137 Move TEMP, X9
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfEqual {144}
	141 Move X0, X8
	142 Call 0x1C5D684
	143 Move X8, X0
	144 Move X8, [X8+192]
	145 Add X1, X31, 8
	146 Move X0, [X8+32]
	147 Call 0x1C17E04
	148 Compare X19, 0
	149 JumpIfEqual {857}
	150 Move X21, 0x18CD000
	151 Move X21, [X21+2520]
	152 Move X0, [X23]
	153 Move W8, [X0+309]
	154 Move TEMP, X8
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfEqual {159}
	158 Call 0x1C5D684
	159 Move X8, [X24]
	160 Move X9, [X0+192]
	161 Move W10, [X8+224]
	162 Move X22, [X9+24]
	163 Compare W10, 0
	164 JumpIfNotEqual {167}
	165 Move X0, X8
	166 Call 0x1C17DFC
	167 Move X0, X22
	168 Move X1, X31
	169 Call Type.GetTypeFromHandle, X0
	170 Move X8, 0x18F3000
	171 Move X8, [X8+3472]
	172 Move X22, X0
	173 Move X1, X31
	174 Move X8, [X8]
	175 Move X0, X8
	176 Call Type.GetTypeFromHandle, X0
	177 Move X1, X0
	178 Move X0, X22
	179 Move X2, X31
	180 Call Type.op_Equality, X0, X1
	181 Move TEMP, X0
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfNotEqual {247}
	185 NotImplemented "Instruction STRH not yet implemented."
	186 Move X0, [X23]
	187 Move W8, [X0+309]
	188 Move TEMP, X8
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfEqual {193}
	192 Call 0x1C5D684
	193 Move X8, [X0+192]
	194 Add X1, X31, 12
	195 Move X0, [X8+32]
	196 Call 0x1C17E04
	197 NotImplemented "Instruction STRH not yet implemented."
	198 Move X8, [X23]
	199 Move X19, X0
	200 Move W9, [X8+309]
	201 Move TEMP, X9
	202 And TEMP, TEMP, 1
	203 Compare TEMP, 1
	204 JumpIfEqual {208}
	205 Move X0, X8
	206 Call 0x1C5D684
	207 Move X8, X0
	208 Move X8, [X8+192]
	209 Add X1, X31, 8
	210 Move X0, [X8+32]
	211 Call 0x1C17E04
	212 Compare X19, 0
	213 JumpIfEqual {857}
	214 Move X21, 0x18F5000
	215 Move X21, [X21+1712]
	216 Move X8, [X19]
	217 Move X1, [X21]
	218 Move X8, [X8+64]
	219 Move X9, [X1+64]
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move X20, X0
	222 Move X0, X19
	223 Call 0x1C17E08
	224 Compare X20, 0
	225 JumpIfEqual {857}
	226 Move X8, [X20]
	227 Move X1, [X21]
	228 Move X8, [X8+64]
	229 Move X9, [X1+64]
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Move W19, [X0]
	232 Move X0, X20
	233 Call 0x1C17E08
	234 Move W8, [X0]
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Move X20, [X31+64]
	237 Move X19, [X31+72]
	238 Move X22, [X31+48]
	239 Move X21, [X31+56]
	240 Move X24, [X31+32]
	241 Move X23, [X31+40]
	242 Move X30, [X31+16]
	243 Move X25, [X31+24]
	244 NotImplemented "Instruction CSET not yet implemented."
	245 Move V8, [X31+80]
	246 Return X0
	247 Move X0, [X23]
	248 Move W8, [X0+309]
	249 Move TEMP, X8
	250 And TEMP, TEMP, 1
	251 Compare TEMP, 1
	252 JumpIfEqual {254}
	253 Call 0x1C5D684
	254 Move X8, [X24]
	255 Move X9, [X0+192]
	256 Move W10, [X8+224]
	257 Move X22, [X9+24]
	258 Compare W10, 0
	259 JumpIfNotEqual {262}
	260 Move X0, X8
	261 Call 0x1C17DFC
	262 Move X0, X22
	263 Move X1, X31
	264 Call Type.GetTypeFromHandle, X0
	265 Move X8, 0x18F3000
	266 Move X8, [X8+3480]
	267 Move X22, X0
	268 Move X1, X31
	269 Move X8, [X8]
	270 Move X0, X8
	271 Call Type.GetTypeFromHandle, X0
	272 Move X1, X0
	273 Move X0, X22
	274 Move X2, X31
	275 Call Type.op_Equality, X0, X1
	276 Move TEMP, X0
	277 And TEMP, TEMP, 1
	278 Compare TEMP, 1
	279 JumpIfNotEqual {311}
	280 NotImplemented "Instruction STRH not yet implemented."
	281 Move X0, [X23]
	282 Move W8, [X0+309]
	283 Move TEMP, X8
	284 And TEMP, TEMP, 1
	285 Compare TEMP, 1
	286 JumpIfEqual {288}
	287 Call 0x1C5D684
	288 Move X8, [X0+192]
	289 Add X1, X31, 12
	290 Move X0, [X8+32]
	291 Call 0x1C17E04
	292 NotImplemented "Instruction STRH not yet implemented."
	293 Move X8, [X23]
	294 Move X19, X0
	295 Move W9, [X8+309]
	296 Move TEMP, X9
	297 And TEMP, TEMP, 1
	298 Compare TEMP, 1
	299 JumpIfEqual {303}
	300 Move X0, X8
	301 Call 0x1C5D684
	302 Move X8, X0
	303 Move X8, [X8+192]
	304 Add X1, X31, 8
	305 Move X0, [X8+32]
	306 Call 0x1C17E04
	307 Compare X19, 0
	308 JumpIfEqual {857}
	309 Move X21, 0x18D1000
	310 Move X21, [X21+1624]
	311 Move X0, [X23]
	312 Move W8, [X0+309]
	313 Move TEMP, X8
	314 And TEMP, TEMP, 1
	315 Compare TEMP, 1
	316 JumpIfEqual {318}
	317 Call 0x1C5D684
	318 Move X8, [X24]
	319 Move X9, [X0+192]
	320 Move W10, [X8+224]
	321 Move X22, [X9+24]
	322 Compare W10, 0
	323 JumpIfNotEqual {326}
	324 Move X0, X8
	325 Call 0x1C17DFC
	326 Move X0, X22
	327 Move X1, X31
	328 Call Type.GetTypeFromHandle, X0
	329 Move X8, 0x18F3000
	330 Move X8, [X8+3448]
	331 Move X22, X0
	332 Move X1, X31
	333 Move X8, [X8]
	334 Move X0, X8
	335 Call Type.GetTypeFromHandle, X0
	336 Move X1, X0
	337 Move X0, X22
	338 Move X2, X31
	339 Call Type.op_Equality, X0, X1
	340 Move TEMP, X0
	341 And TEMP, TEMP, 1
	342 Compare TEMP, 1
	343 JumpIfNotEqual {394}
	344 NotImplemented "Instruction STRH not yet implemented."
	345 Move X0, [X23]
	346 Move W8, [X0+309]
	347 Move TEMP, X8
	348 And TEMP, TEMP, 1
	349 Compare TEMP, 1
	350 JumpIfEqual {352}
	351 Call 0x1C5D684
	352 Move X8, [X0+192]
	353 Add X1, X31, 12
	354 Move X0, [X8+32]
	355 Call 0x1C17E04
	356 NotImplemented "Instruction STRH not yet implemented."
	357 Move X8, [X23]
	358 Move X19, X0
	359 Move W9, [X8+309]
	360 Move TEMP, X9
	361 And TEMP, TEMP, 1
	362 Compare TEMP, 1
	363 JumpIfEqual {367}
	364 Move X0, X8
	365 Call 0x1C5D684
	366 Move X8, X0
	367 Move X8, [X8+192]
	368 Add X1, X31, 8
	369 Move X0, [X8+32]
	370 Call 0x1C17E04
	371 Compare X19, 0
	372 JumpIfEqual {857}
	373 Move X21, 0x18D0000
	374 Move X21, [X21+1576]
	375 Move X8, [X19]
	376 Move X1, [X21]
	377 Move X8, [X8+64]
	378 Move X9, [X1+64]
	379 NotImplemented "Instruction CMP not yet implemented."
	380 Move X20, X0
	381 Move X0, X19
	382 Call 0x1C17E08
	383 Compare X20, 0
	384 JumpIfEqual {857}
	385 Move X8, [X20]
	386 Move X1, [X21]
	387 Move X8, [X8+64]
	388 Move X9, [X1+64]
	389 NotImplemented "Instruction CMP not yet implemented."
	390 NotImplemented "Instruction LDRH not yet implemented."
	391 Move X0, X20
	392 Call 0x1C17E08
	393 NotImplemented "Instruction LDRH not yet implemented."
	394 Move X0, [X23]
	395 Move W8, [X0+309]
	396 Move TEMP, X8
	397 And TEMP, TEMP, 1
	398 Compare TEMP, 1
	399 JumpIfEqual {401}
	400 Call 0x1C5D684
	401 Move X8, [X24]
	402 Move X9, [X0+192]
	403 Move W10, [X8+224]
	404 Move X22, [X9+24]
	405 Compare W10, 0
	406 JumpIfNotEqual {409}
	407 Move X0, X8
	408 Call 0x1C17DFC
	409 Move X0, X22
	410 Move X1, X31
	411 Call Type.GetTypeFromHandle, X0
	412 Move X8, 0x18F3000
	413 Move X8, [X8+3488]
	414 Move X22, X0
	415 Move X1, X31
	416 Move X8, [X8]
	417 Move X0, X8
	418 Call Type.GetTypeFromHandle, X0
	419 Move X1, X0
	420 Move X0, X22
	421 Move X2, X31
	422 Call Type.op_Equality, X0, X1
	423 Move TEMP, X0
	424 And TEMP, TEMP, 1
	425 Compare TEMP, 1
	426 JumpIfNotEqual {458}
	427 NotImplemented "Instruction STRH not yet implemented."
	428 Move X0, [X23]
	429 Move W8, [X0+309]
	430 Move TEMP, X8
	431 And TEMP, TEMP, 1
	432 Compare TEMP, 1
	433 JumpIfEqual {435}
	434 Call 0x1C5D684
	435 Move X8, [X0+192]
	436 Add X1, X31, 12
	437 Move X0, [X8+32]
	438 Call 0x1C17E04
	439 NotImplemented "Instruction STRH not yet implemented."
	440 Move X8, [X23]
	441 Move X19, X0
	442 Move W9, [X8+309]
	443 Move TEMP, X9
	444 And TEMP, TEMP, 1
	445 Compare TEMP, 1
	446 JumpIfEqual {450}
	447 Move X0, X8
	448 Call 0x1C5D684
	449 Move X8, X0
	450 Move X8, [X8+192]
	451 Add X1, X31, 8
	452 Move X0, [X8+32]
	453 Call 0x1C17E04
	454 Compare X19, 0
	455 JumpIfEqual {857}
	456 Move X21, 0x18D4000
	457 Move X21, [X21+1824]
	458 Move X0, [X23]
	459 Move W8, [X0+309]
	460 Move TEMP, X8
	461 And TEMP, TEMP, 1
	462 Compare TEMP, 1
	463 JumpIfEqual {465}
	464 Call 0x1C5D684
	465 Move X8, [X24]
	466 Move X9, [X0+192]
	467 Move W10, [X8+224]
	468 Move X22, [X9+24]
	469 Compare W10, 0
	470 JumpIfNotEqual {473}
	471 Move X0, X8
	472 Call 0x1C17DFC
	473 Move X0, X22
	474 Move X1, X31
	475 Call Type.GetTypeFromHandle, X0
	476 Move X8, 0x18F3000
	477 Move X8, [X8+3456]
	478 Move X22, X0
	479 Move X1, X31
	480 Move X8, [X8]
	481 Move X0, X8
	482 Call Type.GetTypeFromHandle, X0
	483 Move X1, X0
	484 Move X0, X22
	485 Move X2, X31
	486 Call Type.op_Equality, X0, X1
	487 Move TEMP, X0
	488 And TEMP, TEMP, 1
	489 Compare TEMP, 1
	490 JumpIfNotEqual {541}
	491 NotImplemented "Instruction STRH not yet implemented."
	492 Move X0, [X23]
	493 Move W8, [X0+309]
	494 Move TEMP, X8
	495 And TEMP, TEMP, 1
	496 Compare TEMP, 1
	497 JumpIfEqual {499}
	498 Call 0x1C5D684
	499 Move X8, [X0+192]
	500 Add X1, X31, 12
	501 Move X0, [X8+32]
	502 Call 0x1C17E04
	503 NotImplemented "Instruction STRH not yet implemented."
	504 Move X8, [X23]
	505 Move X19, X0
	506 Move W9, [X8+309]
	507 Move TEMP, X9
	508 And TEMP, TEMP, 1
	509 Compare TEMP, 1
	510 JumpIfEqual {514}
	511 Move X0, X8
	512 Call 0x1C5D684
	513 Move X8, X0
	514 Move X8, [X8+192]
	515 Add X1, X31, 8
	516 Move X0, [X8+32]
	517 Call 0x1C17E04
	518 Compare X19, 0
	519 JumpIfEqual {857}
	520 Move X21, 0x18CB000
	521 Move X21, [X21+1880]
	522 Move X8, [X19]
	523 Move X1, [X21]
	524 Move X8, [X8+64]
	525 Move X9, [X1+64]
	526 NotImplemented "Instruction CMP not yet implemented."
	527 Move X20, X0
	528 Move X0, X19
	529 Call 0x1C17E08
	530 Compare X20, 0
	531 JumpIfEqual {857}
	532 Move X8, [X20]
	533 Move X1, [X21]
	534 Move X8, [X8+64]
	535 Move X9, [X1+64]
	536 NotImplemented "Instruction CMP not yet implemented."
	537 Move W19, [X0]
	538 Move X0, X20
	539 Call 0x1C17E08
	540 Move W8, [X0]
	541 Move X0, [X23]
	542 Move W8, [X0+309]
	543 Move TEMP, X8
	544 And TEMP, TEMP, 1
	545 Compare TEMP, 1
	546 JumpIfEqual {548}
	547 Call 0x1C5D684
	548 Move X8, [X24]
	549 Move X9, [X0+192]
	550 Move W10, [X8+224]
	551 Move X22, [X9+24]
	552 Compare W10, 0
	553 JumpIfNotEqual {556}
	554 Move X0, X8
	555 Call 0x1C17DFC
	556 Move X0, X22
	557 Move X1, X31
	558 Call Type.GetTypeFromHandle, X0
	559 Move X8, 0x18F2000
	560 Move X8, [X8+3496]
	561 Move X22, X0
	562 Move X1, X31
	563 Move X8, [X8]
	564 Move X0, X8
	565 Call Type.GetTypeFromHandle, X0
	566 Move X1, X0
	567 Move X0, X22
	568 Move X2, X31
	569 Call Type.op_Equality, X0, X1
	570 Move TEMP, X0
	571 And TEMP, TEMP, 1
	572 Compare TEMP, 1
	573 JumpIfNotEqual {605}
	574 NotImplemented "Instruction STRH not yet implemented."
	575 Move X0, [X23]
	576 Move W8, [X0+309]
	577 Move TEMP, X8
	578 And TEMP, TEMP, 1
	579 Compare TEMP, 1
	580 JumpIfEqual {582}
	581 Call 0x1C5D684
	582 Move X8, [X0+192]
	583 Add X1, X31, 12
	584 Move X0, [X8+32]
	585 Call 0x1C17E04
	586 NotImplemented "Instruction STRH not yet implemented."
	587 Move X8, [X23]
	588 Move X19, X0
	589 Move W9, [X8+309]
	590 Move TEMP, X9
	591 And TEMP, TEMP, 1
	592 Compare TEMP, 1
	593 JumpIfEqual {597}
	594 Move X0, X8
	595 Call 0x1C5D684
	596 Move X8, X0
	597 Move X8, [X8+192]
	598 Add X1, X31, 8
	599 Move X0, [X8+32]
	600 Call 0x1C17E04
	601 Compare X19, 0
	602 JumpIfEqual {857}
	603 Move X21, 0x18CC000
	604 Move X21, [X21+1880]
	605 Move X0, [X23]
	606 Move W8, [X0+309]
	607 Move TEMP, X8
	608 And TEMP, TEMP, 1
	609 Compare TEMP, 1
	610 JumpIfEqual {612}
	611 Call 0x1C5D684
	612 Move X8, [X24]
	613 Move X9, [X0+192]
	614 Move W10, [X8+224]
	615 Move X22, [X9+24]
	616 Compare W10, 0
	617 JumpIfNotEqual {620}
	618 Move X0, X8
	619 Call 0x1C17DFC
	620 Move X0, X22
	621 Move X1, X31
	622 Call Type.GetTypeFromHandle, X0
	623 Move X8, 0x18F2000
	624 Move X8, [X8+3464]
	625 Move X22, X0
	626 Move X1, X31
	627 Move X8, [X8]
	628 Move X0, X8
	629 Call Type.GetTypeFromHandle, X0
	630 Move X1, X0
	631 Move X0, X22
	632 Move X2, X31
	633 Call Type.op_Equality, X0, X1
	634 Move TEMP, X0
	635 And TEMP, TEMP, 1
	636 Compare TEMP, 1
	637 JumpIfNotEqual {689}
	638 NotImplemented "Instruction STRH not yet implemented."
	639 Move X0, [X23]
	640 Move W8, [X0+309]
	641 Move TEMP, X8
	642 And TEMP, TEMP, 1
	643 Compare TEMP, 1
	644 JumpIfEqual {646}
	645 Call 0x1C5D684
	646 Move X8, [X0+192]
	647 Add X1, X31, 12
	648 Move X0, [X8+32]
	649 Call 0x1C17E04
	650 NotImplemented "Instruction STRH not yet implemented."
	651 Move X8, [X23]
	652 Move X19, X0
	653 Move W9, [X8+309]
	654 Move TEMP, X9
	655 And TEMP, TEMP, 1
	656 Compare TEMP, 1
	657 JumpIfEqual {661}
	658 Move X0, X8
	659 Call 0x1C5D684
	660 Move X8, X0
	661 Move X8, [X8+192]
	662 Add X1, X31, 8
	663 Move X0, [X8+32]
	664 Call 0x1C17E04
	665 Compare X19, 0
	666 JumpIfEqual {857}
	667 Move X21, 0x18CD000
	668 Move X21, [X21+2656]
	669 Move X8, [X19]
	670 Move X1, [X21]
	671 Move X8, [X8+64]
	672 Move X9, [X1+64]
	673 NotImplemented "Instruction CMP not yet implemented."
	674 Move X20, X0
	675 Move X0, X19
	676 Call 0x1C17E08
	677 Compare X20, 0
	678 JumpIfEqual {857}
	679 Move X8, [X20]
	680 Move X1, [X21]
	681 Move X8, [X8+64]
	682 Move X9, [X1+64]
	683 NotImplemented "Instruction CMP not yet implemented."
	684 Move X19, [X0]
	685 Move X0, X20
	686 Call 0x1C17E08
	687 Move X8, [X0]
	688 NotImplemented "Instruction CMP not yet implemented."
	689 Move X0, [X23]
	690 Move W8, [X0+309]
	691 Move TEMP, X8
	692 And TEMP, TEMP, 1
	693 Compare TEMP, 1
	694 JumpIfEqual {696}
	695 Call 0x1C5D684
	696 Move X8, [X24]
	697 Move X9, [X0+192]
	698 Move W10, [X8+224]
	699 Move X22, [X9+24]
	700 Compare W10, 0
	701 JumpIfNotEqual {704}
	702 Move X0, X8
	703 Call 0x1C17DFC
	704 Move X0, X22
	705 Move X1, X31
	706 Call Type.GetTypeFromHandle, X0
	707 Move X8, 0x18F3000
	708 Move X8, [X8+2688]
	709 Move X22, X0
	710 Move X1, X31
	711 Move X8, [X8]
	712 Move X0, X8
	713 Call Type.GetTypeFromHandle, X0
	714 Move X1, X0
	715 Move X0, X22
	716 Move X2, X31
	717 Call Type.op_Equality, X0, X1
	718 Move TEMP, X0
	719 And TEMP, TEMP, 1
	720 Compare TEMP, 1
	721 JumpIfNotEqual {773}
	722 NotImplemented "Instruction STRH not yet implemented."
	723 Move X0, [X23]
	724 Move W8, [X0+309]
	725 Move TEMP, X8
	726 And TEMP, TEMP, 1
	727 Compare TEMP, 1
	728 JumpIfEqual {730}
	729 Call 0x1C5D684
	730 Move X8, [X0+192]
	731 Add X1, X31, 12
	732 Move X0, [X8+32]
	733 Call 0x1C17E04
	734 NotImplemented "Instruction STRH not yet implemented."
	735 Move X8, [X23]
	736 Move X19, X0
	737 Move W9, [X8+309]
	738 Move TEMP, X9
	739 And TEMP, TEMP, 1
	740 Compare TEMP, 1
	741 JumpIfEqual {745}
	742 Move X0, X8
	743 Call 0x1C5D684
	744 Move X8, X0
	745 Move X8, [X8+192]
	746 Add X1, X31, 8
	747 Move X0, [X8+32]
	748 Call 0x1C17E04
	749 Compare X19, 0
	750 JumpIfEqual {857}
	751 Move X21, 0x18CB000
	752 Move X21, [X21+2704]
	753 Move X8, [X19]
	754 Move X1, [X21]
	755 Move X8, [X8+64]
	756 Move X9, [X1+64]
	757 NotImplemented "Instruction CMP not yet implemented."
	758 Move X20, X0
	759 Move X0, X19
	760 Call 0x1C17E08
	761 Compare X20, 0
	762 JumpIfEqual {857}
	763 Move X8, [X20]
	764 Move X1, [X21]
	765 Move X8, [X8+64]
	766 Move X9, [X1+64]
	767 NotImplemented "Instruction CMP not yet implemented."
	768 Move V8, [X0]
	769 Move X0, X20
	770 Call 0x1C17E08
	771 Move V0, [X0]
	772 NotImplemented "Instruction FCMP not yet implemented."
	773 Move X0, [X23]
	774 Move W8, [X0+309]
	775 Move TEMP, X8
	776 And TEMP, TEMP, 1
	777 Compare TEMP, 1
	778 JumpIfEqual {780}
	779 Call 0x1C5D684
	780 Move X8, [X24]
	781 Move X9, [X0+192]
	782 Move W10, [X8+224]
	783 Move X22, [X9+24]
	784 Compare W10, 0
	785 JumpIfNotEqual {788}
	786 Move X0, X8
	787 Call 0x1C17DFC
	788 Move X0, X22
	789 Move X1, X31
	790 Call Type.GetTypeFromHandle, X0
	791 Move X8, 0x18F3000
	792 Move X8, [X8+2680]
	793 Move X22, X0
	794 Move X1, X31
	795 Move X8, [X8]
	796 Move X0, X8
	797 Call Type.GetTypeFromHandle, X0
	798 Move X1, X0
	799 Move X0, X22
	800 Move X2, X31
	801 Call Type.op_Equality, X0, X1
	802 Move TEMP, X0
	803 And TEMP, TEMP, 1
	804 Compare TEMP, 1
	805 JumpIfNotEqual {862}
	806 NotImplemented "Instruction STRH not yet implemented."
	807 Move X0, [X23]
	808 Move W8, [X0+309]
	809 Move TEMP, X8
	810 And TEMP, TEMP, 1
	811 Compare TEMP, 1
	812 JumpIfEqual {814}
	813 Call 0x1C5D684
	814 Move X8, [X0+192]
	815 Add X1, X31, 12
	816 Move X0, [X8+32]
	817 Call 0x1C17E04
	818 NotImplemented "Instruction STRH not yet implemented."
	819 Move X8, [X23]
	820 Move X19, X0
	821 Move W9, [X8+309]
	822 Move TEMP, X9
	823 And TEMP, TEMP, 1
	824 Compare TEMP, 1
	825 JumpIfEqual {829}
	826 Move X0, X8
	827 Call 0x1C5D684
	828 Move X8, X0
	829 Move X8, [X8+192]
	830 Add X1, X31, 8
	831 Move X0, [X8+32]
	832 Call 0x1C17E04
	833 Compare X19, 0
	834 JumpIfEqual {857}
	835 Move X21, 0x18CE000
	836 Move X21, [X21+2424]
	837 Move X8, [X19]
	838 Move X1, [X21]
	839 Move X8, [X8+64]
	840 Move X9, [X1+64]
	841 NotImplemented "Instruction CMP not yet implemented."
	842 Move X20, X0
	843 Move X0, X19
	844 Call 0x1C17E08
	845 Compare X20, 0
	846 JumpIfEqual {857}
	847 Move X8, [X20]
	848 Move X1, [X21]
	849 Move X8, [X8+64]
	850 Move X9, [X1+64]
	851 NotImplemented "Instruction CMP not yet implemented."
	852 Move V8, [X0]
	853 Move X0, X20
	854 Call 0x1C17E08
	855 Move V0, [X0]
	856 NotImplemented "Instruction FCMP not yet implemented."
	857 Call 0x1C17F20
	858 Move X0, X19
	859 Call 0x1C181E0
	860 Move X0, X20
	861 Call 0x1C181E0
	862 Move X0, 0x18CB000
	863 Move X0, [X0+2880]
	864 Call 0x1C17D08
	865 Call 0x1C17F10
	866 Move X19, X0
	867 Move X0, 0x18F4000
	868 Move X0, [X0+2704]
	869 Call 0x1C17D08
	870 Move X1, X0
	871 Move X0, X19
	872 Move X2, X31
	873 Call NotSupportedException..ctor, X0, X1
	874 Move X0, X19
	875 Move X1, X20
	876 Call 0x1C17DEC

Method: T GetOneValue()

Disassembly:
	0x02829504 LDR X0, [X0 + 0xA78]
	0x02829508 BL 0x1C16CF4
	0x0282950C ADRP X0, 0x18F1000
	0x02829510 LDR X0, [X0 + 0xD78]
	0x02829514 BL 0x1C16CF4
	0x02829518 ADRP X0, 0x18F1000
	0x0282951C LDR X0, [X0 + 0xD80]
	0x02829520 BL 0x1C16CF4
	0x02829524 ADRP X0, 0x18F1000
	0x02829528 LDR X0, [X0 + 0xD88]
	0x0282952C BL 0x1C16CF4
	0x02829530 ADRP X0, 0x18F1000
	0x02829534 LDR X0, [X0 + 0xD90]
	0x02829538 BL 0x1C16CF4
	0x0282953C ADRP X0, 0x18F2000
	0x02829540 LDR X0, [X0 + 0xA80]
	0x02829544 BL 0x1C16CF4
	0x02829548 ADRP X0, 0x18CA000
	0x0282954C LDR X0, [X0 + 0x6C0]
	0x02829550 BL 0x1C16CF4
	0x02829554 ADRP X0, 0x18F1000
	0x02829558 LDR X0, [X0 + 0xD98]
	0x0282955C BL 0x1C16CF4
	0x02829560 ADRP X0, 0x18F1000
	0x02829564 LDR X0, [X0 + 0xDA0]
	0x02829568 BL 0x1C16CF4
	0x0282956C ADRP X0, 0x18F1000
	0x02829570 LDR X0, [X0 + 0xDA8]
	0x02829574 BL 0x1C16CF4
	0x02829578 MOVZ W8, 0x1
	0x0282957C STRB W8, [X20 + 0xA7F]
	0x02829580 LDR X0, [X19 + 0x20]
	0x02829584 ADRP X21, 0x18CA000
	0x02829588 LDRB W8, [X0 + 0x135]
	0x0282958C LDR X21, [X21 + 0x6C0]
	0x02829590 TBNZ X8, 0x0, 0x2829598
	0x02829594 BL 0x1C5C684
	0x02829598 LDR X8, [X21]
	0x0282959C LDR X9, [X0 + 0xC0]
	0x028295A0 ADRP X22, 0x18F1000
	0x028295A4 LDR W10, [X8 + 0xE0]
	0x028295A8 LDR X20, [X9 + 0x18]
	0x028295AC LDR X22, [X22 + 0xD68]
	0x028295B0 CBNZ W10, 0x28295BC
	0x028295B4 MOV X0, X8
	0x028295B8 BL 0x1C16DFC
	0x028295BC MOV X0, X20
	0x028295C0 MOV X1, X31
	0x028295C4 BL 0x338C698
	0x028295C8 LDR X8, [X22]
	0x028295CC MOV X20, X0
	0x028295D0 MOV X1, X31
	0x028295D4 MOV X0, X8
	0x028295D8 BL 0x338C698
	0x028295DC MOV X1, X0
	0x028295E0 MOV X0, X20
	0x028295E4 MOV X2, X31
	0x028295E8 BL 0x3395194
	0x028295EC ANDS W8, W0, 0x1
	0x028295F0 MOVZ W22, 0x10
	0x028295F4 CSEL W23, W31, W22, NE
	0x028295F8 CBZ W8, 0x2829604
	0x028295FC MOVZ W8, 0x1
	0x02829600 B 0x28298DC
	0x02829604 LDR X0, [X19 + 0x20]
	0x02829608 LDRB W8, [X0 + 0x135]
	0x0282960C TBNZ X8, 0x0, 0x2829614
	0x02829610 BL 0x1C5C684
	0x02829614 LDR X8, [X21]
	0x02829618 LDR X9, [X0 + 0xC0]
	0x0282961C ADRP X22, 0x18F1000
	0x02829620 LDR W10, [X8 + 0xE0]
	0x02829624 LDR X20, [X9 + 0x18]
	0x02829628 LDR X22, [X22 + 0xD90]
	0x0282962C CBNZ W10, 0x2829638
	0x02829630 MOV X0, X8
	0x02829634 BL 0x1C16DFC
	0x02829638 MOV X0, X20
	0x0282963C MOV X1, X31
	0x02829640 BL 0x338C698
	0x02829644 LDR X8, [X22]
	0x02829648 MOV X20, X0
	0x0282964C MOV X1, X31
	0x02829650 MOV X0, X8
	0x02829654 BL 0x338C698
	0x02829658 MOV X1, X0
	0x0282965C MOV X0, X20
	0x02829660 MOV X2, X31
	0x02829664 BL 0x3395194
	0x02829668 ANDS W8, W0, 0x1
	0x0282966C CSEL W22, W31, W23, NE
	0x02829670 CBZ W8, 0x2829680
	0x02829674 MOVZ W8, 0x1
	0x02829678 MOVZ W22, 0x10
	0x0282967C B 0x28298DC
	0x02829680 LDR X0, [X19 + 0x20]
	0x02829684 LDRB W8, [X0 + 0x135]
	0x02829688 TBNZ X8, 0x0, 0x2829690
	0x0282968C BL 0x1C5C684
	0x02829690 LDR X8, [X21]
	0x02829694 LDR X9, [X0 + 0xC0]
	0x02829698 LDR W10, [X8 + 0xE0]
	0x0282969C LDR X20, [X9 + 0x18]
	0x028296A0 CBNZ W10, 0x28296AC
	0x028296A4 MOV X0, X8
	0x028296A8 BL 0x1C16DFC
	0x028296AC MOV X0, X20
	0x028296B0 MOV X1, X31
	0x028296B4 BL 0x338C698
	0x028296B8 ADRP X8, 0x18F1000
	0x028296BC LDR X8, [X8 + 0xD98]
	0x028296C0 MOV X20, X0
	0x028296C4 MOV X1, X31
	0x028296C8 LDR X8, [X8]
	0x028296CC MOV X0, X8
	0x028296D0 BL 0x338C698
	0x028296D4 MOV X1, X0
	0x028296D8 MOV X0, X20
	0x028296DC MOV X2, X31
	0x028296E0 BL 0x3395194
	0x028296E4 ANDS W8, W0, 0x1
	0x028296E8 CSEL W24, W31, W22, NE
	0x028296EC CBZ W8, 0x28296FC
	0x028296F0 MOVZ W8, 0x2
	0x028296F4 MOV W22, W23
	0x028296F8 B 0x28298DC
	0x028296FC LDR X0, [X19 + 0x20]
	0x02829700 LDRB W8, [X0 + 0x135]
	0x02829704 TBNZ X8, 0x0, 0x282970C
	0x02829708 BL 0x1C5C684
	0x0282970C LDR X8, [X21]
	0x02829710 LDR X9, [X0 + 0xC0]
	0x02829714 LDR W10, [X8 + 0xE0]
	0x02829718 LDR X20, [X9 + 0x18]
	0x0282971C CBNZ W10, 0x2829728
	0x02829720 MOV X0, X8
	0x02829724 BL 0x1C16DFC
	0x02829728 MOV X0, X20
	0x0282972C MOV X1, X31
	0x02829730 BL 0x338C698
	0x02829734 ADRP X8, 0x18F1000
	0x02829738 LDR X8, [X8 + 0xD78]
	0x0282973C MOV X20, X0
	0x02829740 MOV X1, X31
	0x02829744 LDR X8, [X8]
	0x02829748 MOV X0, X8
	0x0282974C BL 0x338C698
	0x02829750 MOV X1, X0
	0x02829754 MOV X0, X20
	0x02829758 MOV X2, X31
	0x0282975C BL 0x3395194
	0x02829760 ANDS W8, W0, 0x1
	0x02829764 CSEL W23, W31, W24, NE
	0x02829768 CBZ W8, 0x2829774
	0x0282976C MOVZ W8, 0x2
	0x02829770 B 0x28298DC
	0x02829774 LDR X0, [X19 + 0x20]
	0x02829778 LDRB W8, [X0 + 0x135]
	0x0282977C TBNZ X8, 0x0, 0x2829784
	0x02829780 BL 0x1C5C684
	0x02829784 LDR X8, [X21]
	0x02829788 LDR X9, [X0 + 0xC0]
	0x0282978C LDR W10, [X8 + 0xE0]
	0x02829790 LDR X20, [X9 + 0x18]
	0x02829794 CBNZ W10, 0x28297A0
	0x02829798 MOV X0, X8
	0x0282979C BL 0x1C16DFC
	0x028297A0 MOV X0, X20
	0x028297A4 MOV X1, X31
	0x028297A8 BL 0x338C698
	0x028297AC ADRP X8, 0x18F1000
	0x028297B0 LDR X8, [X8 + 0xDA0]
	0x028297B4 MOV X20, X0
	0x028297B8 MOV X1, X31
	0x028297BC LDR X8, [X8]
	0x028297C0 MOV X0, X8
	0x028297C4 BL 0x338C698
	0x028297C8 MOV X1, X0
	0x028297CC MOV X0, X20
	0x028297D0 MOV X2, X31
	0x028297D4 BL 0x3395194
	0x028297D8 ANDS W8, W0, 0x1
	0x028297DC CSEL W22, W31, W23, NE
	0x028297E0 CBZ W8, 0x28297F0
	0x028297E4 MOVZ W8, 0x4
	0x028297E8 MOV W22, W24
	0x028297EC B 0x28298DC
	0x028297F0 LDR X0, [X19 + 0x20]
	0x028297F4 LDRB W8, [X0 + 0x135]
	0x028297F8 TBNZ X8, 0x0, 0x2829800
	0x028297FC BL 0x1C5C684
	0x02829800 LDR X8, [X21]
	0x02829804 LDR X9, [X0 + 0xC0]
	0x02829808 LDR W10, [X8 + 0xE0]
	0x0282980C LDR X20, [X9 + 0x18]
	0x02829810 CBNZ W10, 0x282981C
	0x02829814 MOV X0, X8
	0x02829818 BL 0x1C16DFC
	0x0282981C MOV X0, X20
	0x02829820 MOV X1, X31
	0x02829824 BL 0x338C698
	0x02829828 ADRP X8, 0x18F1000
	0x0282982C LDR X8, [X8 + 0xD80]
	0x02829830 MOV X20, X0
	0x02829834 MOV X1, X31
	0x02829838 LDR X8, [X8]
	0x0282983C MOV X0, X8
	0x02829840 BL 0x338C698
	0x02829844 MOV X1, X0
	0x02829848 MOV X0, X20
	0x0282984C MOV X2, X31
	0x02829850 BL 0x3395194
	0x02829854 ANDS W8, W0, 0x1
	0x02829858 CSEL W24, W31, W22, NE
	0x0282985C CBZ W8, 0x2829868
	0x02829860 MOVZ W8, 0x4
	0x02829864 B 0x28296F4
	0x02829868 LDR X0, [X19 + 0x20]
	0x0282986C LDRB W8, [X0 + 0x135]
	0x02829870 TBNZ X8, 0x0, 0x2829878
	0x02829874 BL 0x1C5C684
	0x02829878 LDR X8, [X21]
	0x0282987C LDR X9, [X0 + 0xC0]
	0x02829880 LDR W10, [X8 + 0xE0]
	0x02829884 LDR X20, [X9 + 0x18]
	0x02829888 CBNZ W10, 0x2829894
	0x0282988C MOV X0, X8
	0x02829890 BL 0x1C16DFC
	0x02829894 MOV X0, X20
	0x02829898 MOV X1, X31
	0x0282989C BL 0x338C698
	0x028298A0 ADRP X8, 0x18F1000
	0x028298A4 LDR X8, [X8 + 0xDA8]
	0x028298A8 MOV X20, X0
	0x028298AC MOV X1, X31
	0x028298B0 LDR X8, [X8]
	0x028298B4 MOV X0, X8
	0x028298B8 BL 0x338C698
	0x028298BC MOV X1, X0
	0x028298C0 MOV X0, X20
	0x028298C4 MOV X2, X31
	0x028298C8 BL 0x3395194
	0x028298CC ANDS W8, W0, 0x1
	0x028298D0 CSEL W23, W31, W24, NE
	0x028298D4 CBZ W8, 0x28298F4
	0x028298D8 MOVZ W8, 0x8
	0x028298DC UDIV W0, W22, W8
	0x028298E0 LDP X20, X19, [X31 + 0x30]
	0x028298E4 LDP X22, X21, [X31 + 0x20]
	0x028298E8 LDP X24, X23, [X31 + 0x10]
	0x028298EC LDR X30, [X31], #0x40
	0x028298F0 RET
	0x028298F4 LDR X0, [X19 + 0x20]
	0x028298F8 LDRB W8, [X0 + 0x135]
	0x028298FC TBNZ X8, 0x0, 0x2829904
	0x02829900 BL 0x1C5C684
	0x02829904 LDR X8, [X21]
	0x02829908 LDR X9, [X0 + 0xC0]
	0x0282990C LDR W10, [X8 + 0xE0]
	0x02829910 LDR X20, [X9 + 0x18]
	0x02829914 CBNZ W10, 0x2829920
	0x02829918 MOV X0, X8
	0x0282991C BL 0x1C16DFC
	0x02829920 MOV X0, X20
	0x02829924 MOV X1, X31
	0x02829928 BL 0x338C698
	0x0282992C ADRP X8, 0x18F1000
	0x02829930 LDR X8, [X8 + 0xD88]
	0x02829934 MOV X20, X0
	0x02829938 MOV X1, X31
	0x0282993C LDR X8, [X8]
	0x02829940 MOV X0, X8
	0x02829944 BL 0x338C698
	0x02829948 MOV X1, X0
	0x0282994C MOV X0, X20
	0x02829950 MOV X2, X31
	0x02829954 BL 0x3395194
	0x02829958 ANDS W8, W0, 0x1
	0x0282995C CSEL W22, W31, W23, NE
	0x02829960 CBZ W8, 0x282996C
	0x02829964 MOVZ W8, 0x8
	0x02829968 B 0x28297E8
	0x0282996C LDR X0, [X19 + 0x20]
	0x02829970 LDRB W8, [X0 + 0x135]
	0x02829974 TBNZ X8, 0x0, 0x282997C
	0x02829978 BL 0x1C5C684
	0x0282997C LDR X8, [X21]
	0x02829980 LDR X9, [X0 + 0xC0]
	0x02829984 LDR W10, [X8 + 0xE0]
	0x02829988 LDR X20, [X9 + 0x18]
	0x0282998C CBNZ W10, 0x2829998
	0x02829990 MOV X0, X8
	0x02829994 BL 0x1C16DFC
	0x02829998 MOV X0, X20
	0x0282999C MOV X1, X31
	0x028299A0 BL 0x338C698
	0x028299A4 ADRP X8, 0x18F2000
	0x028299A8 LDR X8, [X8 + 0xA80]
	0x028299AC MOV X20, X0
	0x028299B0 MOV X1, X31
	0x028299B4 LDR X8, [X8]
	0x028299B8 MOV X0, X8
	0x028299BC BL 0x338C698
	0x028299C0 MOV X1, X0
	0x028299C4 MOV X0, X20
	0x028299C8 MOV X2, X31
	0x028299CC BL 0x3395194
	0x028299D0 TBNZ X0, 0x0, 0x2829860
	0x028299D4 LDR X0, [X19 + 0x20]
	0x028299D8 LDRB W8, [X0 + 0x135]
	0x028299DC TBNZ X8, 0x0, 0x28299E4
	0x028299E0 BL 0x1C5C684
	0x028299E4 LDR X8, [X21]
	0x028299E8 LDR X9, [X0 + 0xC0]
	0x028299EC LDR W10, [X8 + 0xE0]
	0x028299F0 LDR X20, [X9 + 0x18]
	0x028299F4 CBNZ W10, 0x2829A00
	0x028299F8 MOV X0, X8
	0x028299FC BL 0x1C16DFC
	0x02829A00 MOV X0, X20
	0x02829A04 MOV X1, X31
	0x02829A08 BL 0x338C698
	0x02829A0C ADRP X8, 0x18F2000
	0x02829A10 LDR X8, [X8 + 0xA78]
	0x02829A14 MOV X20, X0
	0x02829A18 MOV X1, X31
	0x02829A1C LDR X8, [X8]
	0x02829A20 MOV X0, X8
	0x02829A24 BL 0x338C698
	0x02829A28 MOV X1, X0
	0x02829A2C MOV X0, X20
	0x02829A30 MOV X2, X31
	0x02829A34 BL 0x3395194
	0x02829A38 TBNZ X0, 0x0, 0x28298D8
	0x02829A3C ADRP X0, 0x18CA000
	0x02829A40 LDR X0, [X0 + 0xB40]
	0x02829A44 BL 0x1C16D08
	0x02829A48 BL 0x1C16F10
	0x02829A4C MOV X20, X0
	0x02829A50 ADRP X0, 0x18F3000
	0x02829A54 LDR X0, [X0 + 0xA90]
	0x02829A58 BL 0x1C16D08
	0x02829A5C MOV X1, X0
	0x02829A60 MOV X0, X20
	0x02829A64 MOV X2, X31
	0x02829A68 BL 0x3379A44
	0x02829A6C MOV X0, X20
	0x02829A70 MOV X1, X19
	0x02829A74 BL 0x1C16DEC
	0x02829A78 SUB X31, X31, 0xC0
	0x02829A7C STP X30, X25, [X31 + 0x80]
	0x02829A80 STP X24, X23, [X31 + 0x90]
	0x02829A84 STP X22, X21, [X31 + 0xA0]
	0x02829A88 STP X20, X19, [X31 + 0xB0]
	0x02829A8C ADRP X22, 0x1BB1000
	0x02829A90 LDRB W8, [X22 + 0xA80]
	0x02829A94 MOV X20, X2
	0x02829A98 MOV X21, X1
	0x02829A9C MOV X19, X0
	0x02829AA0 TBNZ X8, 0x0, 0x2829BA8
	0x02829AA4 ADRP X0, 0x18F1000
	0x02829AA8 LDR X0, [X0 + 0xD68]
	0x02829AAC BL 0x1C16CF4
	0x02829AB0 ADRP X0, 0x18CB000
	0x02829AB4 LDR X0, [X0 + 0x9D8]
	0x02829AB8 BL 0x1C16CF4
	0x02829ABC ADRP X0, 0x18F2000
	0x02829AC0 LDR X0, [X0 + 0xA78]
	0x02829AC4 BL 0x1C16CF4
	0x02829AC8 ADRP X0, 0x18CD000
	0x02829ACC LDR X0, [X0 + 0x978]
	0x02829AD0 BL 0x1C16CF4
	0x02829AD4 ADRP X0, 0x18F1000
	0x02829AD8 LDR X0, [X0 + 0xD78]
	0x02829ADC BL 0x1C16CF4
	0x02829AE0 ADRP X0, 0x18CE000
	0x02829AE4 LDR X0, [X0 + 0x628]
	0x02829AE8 BL 0x1C16CF4
	0x02829AEC ADRP X0, 0x18F1000
	0x02829AF0 LDR X0, [X0 + 0xD80]
	0x02829AF4 BL 0x1C16CF4
	0x02829AF8 ADRP X0, 0x18CA000
	0x02829AFC LDR X0, [X0 + 0x758]
	0x02829B00 BL 0x1C16CF4
	0x02829B04 ADRP X0, 0x18F1000
	0x02829B08 LDR X0, [X0 + 0xD88]
	0x02829B0C BL 0x1C16CF4
	0x02829B10 ADRP X0, 0x18CC000
	0x02829B14 LDR X0, [X0 + 0xA60]
	0x02829B18 BL 0x1C16CF4
	0x02829B1C ADRP X0, 0x18F1000
	0x02829B20 LDR X0, [X0 + 0xD90]
	0x02829B24 BL 0x1C16CF4
	0x02829B28 ADRP X0, 0x18F3000
	0x02829B2C LDR X0, [X0 + 0x6B0]
	0x02829B30 BL 0x1C16CF4
	0x02829B34 ADRP X0, 0x18F2000
	0x02829B38 LDR X0, [X0 + 0xA80]
	0x02829B3C BL 0x1C16CF4
	0x02829B40 ADRP X0, 0x18CA000
	0x02829B44 LDR X0, [X0 + 0xA90]
	0x02829B48 BL 0x1C16CF4
	0x02829B4C ADRP X0, 0x18CA000
	0x02829B50 LDR X0, [X0 + 0x6C0]
	0x02829B54 BL 0x1C16CF4
	0x02829B58 ADRP X0, 0x18F1000
	0x02829B5C LDR X0, [X0 + 0xD98]
	0x02829B60 BL 0x1C16CF4
	0x02829B64 ADRP X0, 0x18CF000
	0x02829B68 LDR X0, [X0 + 0x658]
	0x02829B6C BL 0x1C16CF4
	0x02829B70 ADRP X0, 0x18F1000
	0x02829B74 LDR X0, [X0 + 0xDA0]
	0x02829B78 BL 0x1C16CF4
	0x02829B7C ADRP X0, 0x18D2000
	0x02829B80 LDR X0, [X0 + 0x720]
	0x02829B84 BL 0x1C16CF4
	0x02829B88 ADRP X0, 0x18F1000
	0x02829B8C LDR X0, [X0 + 0xDA8]
	0x02829B90 BL 0x1C16CF4
	0x02829B94 ADRP X0, 0x18CB000
	0x02829B98 LDR X0, [X0 + 0x758]
	0x02829B9C BL 0x1C16CF4
	0x02829BA0 MOVZ W8, 0x1
	0x02829BA4 STRB W8, [X22 + 0xA80]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1BB2000
	007 Move W8, [X20+2685]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {78}
	013 Move X0, 0x18F2000
	014 Move X0, [X0+3432]
	015 Call 0x1C17CF4
	016 Move X0, 0x18CC000
	017 Move X0, [X0+2520]
	018 Call 0x1C17CF4
	019 Move X0, 0x18F3000
	020 Move X0, [X0+2680]
	021 Call 0x1C17CF4
	022 Move X0, 0x18CE000
	023 Move X0, [X0+2424]
	024 Call 0x1C17CF4
	025 Move X0, 0x18F2000
	026 Move X0, [X0+3448]
	027 Call 0x1C17CF4
	028 Move X0, 0x18CF000
	029 Move X0, [X0+1576]
	030 Call 0x1C17CF4
	031 Move X0, 0x18F2000
	032 Move X0, [X0+3456]
	033 Call 0x1C17CF4
	034 Move X0, 0x18CB000
	035 Move X0, [X0+1880]
	036 Call 0x1C17CF4
	037 Move X0, 0x18F2000
	038 Move X0, [X0+3464]
	039 Call 0x1C17CF4
	040 Move X0, 0x18CD000
	041 Move X0, [X0+2656]
	042 Call 0x1C17CF4
	043 Move X0, 0x18F2000
	044 Move X0, [X0+3472]
	045 Call 0x1C17CF4
	046 Move X0, 0x18F4000
	047 Move X0, [X0+1712]
	048 Call 0x1C17CF4
	049 Move X0, 0x18F3000
	050 Move X0, [X0+2688]
	051 Call 0x1C17CF4
	052 Move X0, 0x18CB000
	053 Move X0, [X0+2704]
	054 Call 0x1C17CF4
	055 Move X0, 0x18CB000
	056 Move X0, [X0+1728]
	057 Call 0x1C17CF4
	058 Move X0, 0x18F2000
	059 Move X0, [X0+3480]
	060 Call 0x1C17CF4
	061 Move X0, 0x18D0000
	062 Move X0, [X0+1624]
	063 Call 0x1C17CF4
	064 Move X0, 0x18F2000
	065 Move X0, [X0+3488]
	066 Call 0x1C17CF4
	067 Move X0, 0x18D3000
	068 Move X0, [X0+1824]
	069 Call 0x1C17CF4
	070 Move X0, 0x18F2000
	071 Move X0, [X0+3496]
	072 Call 0x1C17CF4
	073 Move X0, 0x18CC000
	074 Move X0, [X0+1880]
	075 Call 0x1C17CF4
	076 Move W8, 1
	077 Move [X20+2685], W8
	078 Move X0, [X19+32]
	079 Move X21, 0x18CB000
	080 Move W8, [X0+309]
	081 Move X21, [X21+1728]
	082 Move TEMP, X8
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {87}
	086 Call 0x1C5D684
	087 Move X8, [X21]
	088 Move X9, [X0+192]
	089 Move X22, 0x18F2000
	090 Move W10, [X8+224]
	091 Move X20, [X9+24]
	092 Move X22, [X22+3432]
	093 Compare W10, 0
	094 JumpIfNotEqual {97}
	095 Move X0, X8
	096 Call 0x1C17DFC
	097 Move X0, X20
	098 Move X1, X31
	099 Call Type.GetTypeFromHandle, X0
	100 Move X8, [X22]
	101 Move X20, X0
	102 Move X1, X31
	103 Move X0, X8
	104 Call Type.GetTypeFromHandle, X0
	105 Move X1, X0
	106 Move X0, X20
	107 Move X2, X31
	108 Call Type.op_Equality, X0, X1
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {115}
	113 Move X8, 0x18CC000
	114 Move X8, [X8+2520]
	115 Move X0, [X19+32]
	116 Move W8, [X0+309]
	117 Move TEMP, X8
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfEqual {122}
	121 Call 0x1C5D684
	122 Move X8, [X21]
	123 Move X9, [X0+192]
	124 Move W10, [X8+224]
	125 Move X20, [X9+24]
	126 Compare W10, 0
	127 JumpIfNotEqual {130}
	128 Move X0, X8
	129 Call 0x1C17DFC
	130 Move X0, X20
	131 Move X1, X31
	132 Call Type.GetTypeFromHandle, X0
	133 Move X8, 0x18F2000
	134 Move X8, [X8+3472]
	135 Move X20, X0
	136 Move X1, X31
	137 Move X8, [X8]
	138 Move X0, X8
	139 Call Type.GetTypeFromHandle, X0
	140 Move X1, X0
	141 Move X0, X20
	142 Move X2, X31
	143 Call Type.op_Equality, X0, X1
	144 Move TEMP, X0
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfNotEqual {190}
	148 Move X8, 0x18F4000
	149 Move X8, [X8+1712]
	150 Move X0, [X8]
	151 Move W8, 1
	152 Move [X31+8], W8
	153 Add X1, X31, 8
	154 Call 0x1C17E04
	155 Move X8, [X19+32]
	156 Move X19, X0
	157 Move W9, [X8+309]
	158 Move TEMP, X9
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfEqual {165}
	162 Move X0, X8
	163 Call 0x1C5D684
	164 Move X8, X0
	165 Move X8, [X8+192]
	166 Move X1, [X8+32]
	167 Move W8, [X1+309]
	168 Move TEMP, X8
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfEqual {175}
	172 Move X0, X1
	173 Call 0x1C5D684
	174 Move X1, X0
	175 Compare X19, 0
	176 JumpIfEqual {483}
	177 Move X8, [X19]
	178 Move X9, [X1+64]
	179 Move X0, X19
	180 Move X8, [X8+64]
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Call 0x1C17E08
	183 NotImplemented "Instruction LDRH not yet implemented."
	184 Move X20, [X31+32]
	185 Move X19, [X31+40]
	186 Move X22, [X31+16]
	187 Move X21, [X31+24]
	188 Move X30, [X31+48]
	189 Return X0
	190 Move X0, [X19+32]
	191 Move W8, [X0+309]
	192 Move TEMP, X8
	193 And TEMP, TEMP, 1
	194 Compare TEMP, 1
	195 JumpIfEqual {197}
	196 Call 0x1C5D684
	197 Move X8, [X21]
	198 Move X9, [X0+192]
	199 Move W10, [X8+224]
	200 Move X20, [X9+24]
	201 Compare W10, 0
	202 JumpIfNotEqual {205}
	203 Move X0, X8
	204 Call 0x1C17DFC
	205 Move X0, X20
	206 Move X1, X31
	207 Call Type.GetTypeFromHandle, X0
	208 Move X8, 0x18F2000
	209 Move X8, [X8+3480]
	210 Move X20, X0
	211 Move X1, X31
	212 Move X8, [X8]
	213 Move X0, X8
	214 Call Type.GetTypeFromHandle, X0
	215 Move X1, X0
	216 Move X0, X20
	217 Move X2, X31
	218 Call Type.op_Equality, X0, X1
	219 Move TEMP, X0
	220 And TEMP, TEMP, 1
	221 Compare TEMP, 1
	222 JumpIfNotEqual {225}
	223 Move X8, 0x18D0000
	224 Move X8, [X8+1624]
	225 Move X0, [X19+32]
	226 Move W8, [X0+309]
	227 Move TEMP, X8
	228 And TEMP, TEMP, 1
	229 Compare TEMP, 1
	230 JumpIfEqual {232}
	231 Call 0x1C5D684
	232 Move X8, [X21]
	233 Move X9, [X0+192]
	234 Move W10, [X8+224]
	235 Move X20, [X9+24]
	236 Compare W10, 0
	237 JumpIfNotEqual {240}
	238 Move X0, X8
	239 Call 0x1C17DFC
	240 Move X0, X20
	241 Move X1, X31
	242 Call Type.GetTypeFromHandle, X0
	243 Move X8, 0x18F2000
	244 Move X8, [X8+3448]
	245 Move X20, X0
	246 Move X1, X31
	247 Move X8, [X8]
	248 Move X0, X8
	249 Call Type.GetTypeFromHandle, X0
	250 Move X1, X0
	251 Move X0, X20
	252 Move X2, X31
	253 Call Type.op_Equality, X0, X1
	254 Move TEMP, X0
	255 And TEMP, TEMP, 1
	256 Compare TEMP, 1
	257 JumpIfNotEqual {263}
	258 Move X8, 0x18CF000
	259 Move X8, [X8+1576]
	260 Move X0, [X8]
	261 Move W8, 1
	262 NotImplemented "Instruction STRH not yet implemented."
	263 Move X0, [X19+32]
	264 Move W8, [X0+309]
	265 Move TEMP, X8
	266 And TEMP, TEMP, 1
	267 Compare TEMP, 1
	268 JumpIfEqual {270}
	269 Call 0x1C5D684
	270 Move X8, [X21]
	271 Move X9, [X0+192]
	272 Move W10, [X8+224]
	273 Move X20, [X9+24]
	274 Compare W10, 0
	275 JumpIfNotEqual {278}
	276 Move X0, X8
	277 Call 0x1C17DFC
	278 Move X0, X20
	279 Move X1, X31
	280 Call Type.GetTypeFromHandle, X0
	281 Move X8, 0x18F2000
	282 Move X8, [X8+3488]
	283 Move X20, X0
	284 Move X1, X31
	285 Move X8, [X8]
	286 Move X0, X8
	287 Call Type.GetTypeFromHandle, X0
	288 Move X1, X0
	289 Move X0, X20
	290 Move X2, X31
	291 Call Type.op_Equality, X0, X1
	292 Move TEMP, X0
	293 And TEMP, TEMP, 1
	294 Compare TEMP, 1
	295 JumpIfNotEqual {298}
	296 Move X8, 0x18D3000
	297 Move X8, [X8+1824]
	298 Move X0, [X19+32]
	299 Move W8, [X0+309]
	300 Move TEMP, X8
	301 And TEMP, TEMP, 1
	302 Compare TEMP, 1
	303 JumpIfEqual {305}
	304 Call 0x1C5D684
	305 Move X8, [X21]
	306 Move X9, [X0+192]
	307 Move W10, [X8+224]
	308 Move X20, [X9+24]
	309 Compare W10, 0
	310 JumpIfNotEqual {313}
	311 Move X0, X8
	312 Call 0x1C17DFC
	313 Move X0, X20
	314 Move X1, X31
	315 Call Type.GetTypeFromHandle, X0
	316 Move X8, 0x18F2000
	317 Move X8, [X8+3456]
	318 Move X20, X0
	319 Move X1, X31
	320 Move X8, [X8]
	321 Move X0, X8
	322 Call Type.GetTypeFromHandle, X0
	323 Move X1, X0
	324 Move X0, X20
	325 Move X2, X31
	326 Call Type.op_Equality, X0, X1
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {336}
	331 Move X8, 0x18CB000
	332 Move X8, [X8+1880]
	333 Move X0, [X8]
	334 Move W8, 1
	335 Move [X31+8], W8
	336 Move X0, [X19+32]
	337 Move W8, [X0+309]
	338 Move TEMP, X8
	339 And TEMP, TEMP, 1
	340 Compare TEMP, 1
	341 JumpIfEqual {343}
	342 Call 0x1C5D684
	343 Move X8, [X21]
	344 Move X9, [X0+192]
	345 Move W10, [X8+224]
	346 Move X20, [X9+24]
	347 Compare W10, 0
	348 JumpIfNotEqual {351}
	349 Move X0, X8
	350 Call 0x1C17DFC
	351 Move X0, X20
	352 Move X1, X31
	353 Call Type.GetTypeFromHandle, X0
	354 Move X8, 0x18F2000
	355 Move X8, [X8+3496]
	356 Move X20, X0
	357 Move X1, X31
	358 Move X8, [X8]
	359 Move X0, X8
	360 Call Type.GetTypeFromHandle, X0
	361 Move X1, X0
	362 Move X0, X20
	363 Move X2, X31
	364 Call Type.op_Equality, X0, X1
	365 Move TEMP, X0
	366 And TEMP, TEMP, 1
	367 Compare TEMP, 1
	368 JumpIfNotEqual {371}
	369 Move X8, 0x18CC000
	370 Move X8, [X8+1880]
	371 Move X0, [X19+32]
	372 Move W8, [X0+309]
	373 Move TEMP, X8
	374 And TEMP, TEMP, 1
	375 Compare TEMP, 1
	376 JumpIfEqual {378}
	377 Call 0x1C5D684
	378 Move X8, [X21]
	379 Move X9, [X0+192]
	380 Move W10, [X8+224]
	381 Move X20, [X9+24]
	382 Compare W10, 0
	383 JumpIfNotEqual {386}
	384 Move X0, X8
	385 Call 0x1C17DFC
	386 Move X0, X20
	387 Move X1, X31
	388 Call Type.GetTypeFromHandle, X0
	389 Move X8, 0x18F2000
	390 Move X8, [X8+3464]
	391 Move X20, X0
	392 Move X1, X31
	393 Move X8, [X8]
	394 Move X0, X8
	395 Call Type.GetTypeFromHandle, X0
	396 Move X1, X0
	397 Move X0, X20
	398 Move X2, X31
	399 Call Type.op_Equality, X0, X1
	400 Move TEMP, X0
	401 And TEMP, TEMP, 1
	402 Compare TEMP, 1
	403 JumpIfNotEqual {409}
	404 Move X8, 0x18CD000
	405 Move X8, [X8+2656]
	406 Move X0, [X8]
	407 Move W8, 1
	408 Move [X31+8], X8
	409 Move X0, [X19+32]
	410 Move W8, [X0+309]
	411 Move TEMP, X8
	412 And TEMP, TEMP, 1
	413 Compare TEMP, 1
	414 JumpIfEqual {416}
	415 Call 0x1C5D684
	416 Move X8, [X21]
	417 Move X9, [X0+192]
	418 Move W10, [X8+224]
	419 Move X20, [X9+24]
	420 Compare W10, 0
	421 JumpIfNotEqual {424}
	422 Move X0, X8
	423 Call 0x1C17DFC
	424 Move X0, X20
	425 Move X1, X31
	426 Call Type.GetTypeFromHandle, X0
	427 Move X8, 0x18F3000
	428 Move X8, [X8+2688]
	429 Move X20, X0
	430 Move X1, X31
	431 Move X8, [X8]
	432 Move X0, X8
	433 Call Type.GetTypeFromHandle, X0
	434 Move X1, X0
	435 Move X0, X20
	436 Move X2, X31
	437 Call Type.op_Equality, X0, X1
	438 Move TEMP, X0
	439 And TEMP, TEMP, 1
	440 Compare TEMP, 1
	441 JumpIfNotEqual {446}
	442 Move X8, 0x18CB000
	443 Move X8, [X8+2704]
	444 Move X0, [X8]
	445 Move W8, 0x3F800000
	446 Move X0, [X19+32]
	447 Move W8, [X0+309]
	448 Move TEMP, X8
	449 And TEMP, TEMP, 1
	450 Compare TEMP, 1
	451 JumpIfEqual {453}
	452 Call 0x1C5D684
	453 Move X8, [X21]
	454 Move X9, [X0+192]
	455 Move W10, [X8+224]
	456 Move X20, [X9+24]
	457 Compare W10, 0
	458 JumpIfNotEqual {461}
	459 Move X0, X8
	460 Call 0x1C17DFC
	461 Move X0, X20
	462 Move X1, X31
	463 Call Type.GetTypeFromHandle, X0
	464 Move X8, 0x18F3000
	465 Move X8, [X8+2680]
	466 Move X20, X0
	467 Move X1, X31
	468 Move X8, [X8]
	469 Move X0, X8
	470 Call Type.GetTypeFromHandle, X0
	471 Move X1, X0
	472 Move X0, X20
	473 Move X2, X31
	474 Call Type.op_Equality, X0, X1
	475 Move TEMP, X0
	476 And TEMP, TEMP, 1
	477 Compare TEMP, 1
	478 JumpIfNotEqual {485}
	479 Move X8, 0x18CE000
	480 Move X8, [X8+2424]
	481 Move X0, [X8]
	482 Move X8, 0x3FF00000
	483 Call 0x1C17F20
	484 Call 0x1C181E0
	485 Move X0, 0x18CB000
	486 Move X0, [X0+2880]
	487 Call 0x1C17D08
	488 Call 0x1C17F10
	489 Move X20, X0
	490 Move X0, 0x18F4000
	491 Move X0, [X0+2704]
	492 Call 0x1C17D08
	493 Move X1, X0
	494 Move X0, X20
	495 Move X2, X31
	496 Call NotSupportedException..ctor, X0, X1
	497 Move X0, X20
	498 Move X1, X19
	499 Call 0x1C17DEC

Method: T GetAllBitsSetValue()

Disassembly:
	0x02829BA8 ADRP X24, 0x18CA000
	0x02829BAC LDR X24, [X24 + 0x6C0]
	0x02829BB0 MOV X0, X31
	0x02829BB4 STP X31, X31, [X19]
	0x02829BB8 BL 0x32E15B8
	0x02829BBC LDR X8, [X20 + 0x20]!
	0x02829BC0 MOV W22, W0
	0x02829BC4 LDRB W9, [X8 + 0x135]
	0x02829BC8 TBNZ X9, 0x0, 0x2829BD8
	0x02829BCC MOV X0, X8
	0x02829BD0 BL 0x1C5C684
	0x02829BD4 MOV X8, X0
	0x02829BD8 LDR X0, [X24]
	0x02829BDC LDR X8, [X8 + 0xC0]
	0x02829BE0 ADRP X25, 0x18F1000
	0x02829BE4 LDR W9, [X0 + 0xE0]
	0x02829BE8 LDR X23, [X8 + 0x18]
	0x02829BEC LDR X25, [X25 + 0xD68]
	0x02829BF0 CBNZ W9, 0x2829BF8
	0x02829BF4 BL 0x1C16DFC
	0x02829BF8 MOV X0, X23
	0x02829BFC MOV X1, X31
	0x02829C00 BL 0x338C698
	0x02829C04 LDR X8, [X25]
	0x02829C08 MOV X23, X0
	0x02829C0C MOV X1, X31
	0x02829C10 MOV X0, X8
	0x02829C14 BL 0x338C698
	0x02829C18 MOV X1, X0
	0x02829C1C MOV X0, X23
	0x02829C20 MOV X2, X31
	0x02829C24 BL 0x3395194
	0x02829C28 TBZ X22, 0x0, 0x2829D3C
	0x02829C2C TBZ X0, 0x0, 0x2829D74
	0x02829C30 ADRP X23, 0x18CB000
	0x02829C34 LDR X23, [X23 + 0x9D8]
	0x02829C38 MOV X22, X31
	0x02829C3C LDR X0, [X20]
	0x02829C40 LDRB W8, [X0 + 0x135]
	0x02829C44 TBNZ X8, 0x0, 0x2829C4C
	0x02829C48 BL 0x1C5C684
	0x02829C4C LDR X8, [X0 + 0xC0]
	0x02829C50 LDR X0, [X8 + 0x8]
	0x02829C54 LDRB W8, [X0 + 0x135]
	0x02829C58 TBNZ X8, 0x0, 0x2829C60
	0x02829C5C BL 0x1C5C684
	0x02829C60 LDR W8, [X0 + 0xE0]
	0x02829C64 CBNZ W8, 0x2829C6C
	0x02829C68 BL 0x1C16DFC
	0x02829C6C LDR X0, [X20]
	0x02829C70 LDRB W8, [X0 + 0x135]
	0x02829C74 TBNZ X8, 0x0, 0x2829C7C
	0x02829C78 BL 0x1C5C684
	0x02829C7C LDR X8, [X0 + 0xC0]
	0x02829C80 LDR X24, [X8 + 0x28]
	0x02829C84 LDR X0, [X24 + 0x20]
	0x02829C88 LDRB W8, [X0 + 0x135]
	0x02829C8C TBNZ X8, 0x0, 0x2829C94
	0x02829C90 BL 0x1C5C684
	0x02829C94 LDR X8, [X0 + 0xC0]
	0x02829C98 LDR X0, [X8 + 0x8]
	0x02829C9C LDRB W8, [X0 + 0x135]
	0x02829CA0 TBNZ X8, 0x0, 0x2829CA8
	0x02829CA4 BL 0x1C5C684
	0x02829CA8 LDR W8, [X0 + 0xE0]
	0x02829CAC CBNZ W8, 0x2829CB4
	0x02829CB0 BL 0x1C16DFC
	0x02829CB4 LDR X0, [X24 + 0x20]
	0x02829CB8 LDRB W8, [X0 + 0x135]
	0x02829CBC TBNZ X8, 0x0, 0x2829CC4
	0x02829CC0 BL 0x1C5C684
	0x02829CC4 LDR X8, [X0 + 0xC0]
	0x02829CC8 LDR X0, [X8 + 0x8]
	0x02829CCC LDRB W8, [X0 + 0x135]
	0x02829CD0 TBNZ X8, 0x0, 0x2829CD8
	0x02829CD4 BL 0x1C5C684
	0x02829CD8 LDR X8, [X0 + 0xB8]
	0x02829CDC LDRSW X8, [X8]
	0x02829CE0 CMP X22, X8
	0x02829CE4 B.GE 0x282B428
	0x02829CE8 STR X21, [X31 + 0x78]
	0x02829CEC LDR X0, [X20]
	0x02829CF0 LDRB W8, [X0 + 0x135]
	0x02829CF4 TBNZ X8, 0x0, 0x2829CFC
	0x02829CF8 BL 0x1C5C684
	0x02829CFC LDR X8, [X0 + 0xC0]
	0x02829D00 ADD X1, X31, 0x78
	0x02829D04 LDR X0, [X8 + 0x20]
	0x02829D08 BL 0x1C16E04
	0x02829D0C CBZ X0, 0x282B9D8
	0x02829D10 LDR X8, [X0]
	0x02829D14 LDR X1, [X23]
	0x02829D18 LDR X8, [X8 + 0x40]
	0x02829D1C LDR X9, [X1 + 0x40]
	0x02829D20 CMP X8, X9
	0x02829D24 B.NE 0x282B9DC
	0x02829D28 BL 0x1C16E08
	0x02829D2C LDRB W8, [X0]
	0x02829D30 STRB W8, [X19, X22, LSL]
	0x02829D34 ADD X22, X22, 0x1
	0x02829D38 B 0x2829C3C
	0x02829D3C TBZ X0, 0x0, 0x2829EE8
	0x02829D40 STR X21, [X31 + 0x78]
	0x02829D44 LDR X0, [X20]
	0x02829D48 LDRB W8, [X0 + 0x135]
	0x02829D4C TBNZ X8, 0x0, 0x2829D54
	0x02829D50 BL 0x1C5C684
	0x02829D54 LDR X8, [X0 + 0xC0]
	0x02829D58 ADD X1, X31, 0x78
	0x02829D5C LDR X0, [X8 + 0x20]
	0x02829D60 BL 0x1C16E04
	0x02829D64 CBZ X0, 0x282B9D8
	0x02829D68 ADRP X22, 0x18CB000
	0x02829D6C LDR X22, [X22 + 0x9D8]
	0x02829D70 B 0x2829F80
	0x02829D74 LDR X0, [X20]
	0x02829D78 LDRB W8, [X0 + 0x135]
	0x02829D7C TBNZ X8, 0x0, 0x2829D84
	0x02829D80 BL 0x1C5C684
	0x02829D84 LDR X8, [X24]
	0x02829D88 LDR X9, [X0 + 0xC0]
	0x02829D8C LDR W10, [X8 + 0xE0]
	0x02829D90 LDR X22, [X9 + 0x18]
	0x02829D94 CBNZ W10, 0x2829DA0
	0x02829D98 MOV X0, X8
	0x02829D9C BL 0x1C16DFC
	0x02829DA0 MOV X0, X22
	0x02829DA4 MOV X1, X31
	0x02829DA8 BL 0x338C698
	0x02829DAC ADRP X8, 0x18F1000
	0x02829DB0 LDR X8, [X8 + 0xD90]
	0x02829DB4 MOV X22, X0
	0x02829DB8 MOV X1, X31
	0x02829DBC LDR X8, [X8]
	0x02829DC0 MOV X0, X8
	0x02829DC4 BL 0x338C698
	0x02829DC8 MOV X1, X0
	0x02829DCC MOV X0, X22
	0x02829DD0 MOV X2, X31
	0x02829DD4 BL 0x3395194
	0x02829DD8 TBZ X0, 0x0, 0x282A41C
	0x02829DDC ADRP X23, 0x18F3000
	0x02829DE0 LDR X23, [X23 + 0x6B0]
	0x02829DE4 MOV X22, X31
	0x02829DE8 LDR X0, [X20]
	0x02829DEC LDRB W8, [X0 + 0x135]
	0x02829DF0 TBNZ X8, 0x0, 0x2829DF8
	0x02829DF4 BL 0x1C5C684
	0x02829DF8 LDR X8, [X0 + 0xC0]
	0x02829DFC LDR X0, [X8 + 0x8]
	0x02829E00 LDRB W8, [X0 + 0x135]
	0x02829E04 TBNZ X8, 0x0, 0x2829E0C
	0x02829E08 BL 0x1C5C684
	0x02829E0C LDR W8, [X0 + 0xE0]
	0x02829E10 CBNZ W8, 0x2829E18
	0x02829E14 BL 0x1C16DFC
	0x02829E18 LDR X0, [X20]
	0x02829E1C LDRB W8, [X0 + 0x135]
	0x02829E20 TBNZ X8, 0x0, 0x2829E28
	0x02829E24 BL 0x1C5C684
	0x02829E28 LDR X8, [X0 + 0xC0]
	0x02829E2C LDR X24, [X8 + 0x28]
	0x02829E30 LDR X0, [X24 + 0x20]
	0x02829E34 LDRB W8, [X0 + 0x135]
	0x02829E38 TBNZ X8, 0x0, 0x2829E40
	0x02829E3C BL 0x1C5C684
	0x02829E40 LDR X8, [X0 + 0xC0]
	0x02829E44 LDR X0, [X8 + 0x8]
	0x02829E48 LDRB W8, [X0 + 0x135]
	0x02829E4C TBNZ X8, 0x0, 0x2829E54
	0x02829E50 BL 0x1C5C684
	0x02829E54 LDR W8, [X0 + 0xE0]
	0x02829E58 CBNZ W8, 0x2829E60
	0x02829E5C BL 0x1C16DFC
	0x02829E60 LDR X0, [X24 + 0x20]
	0x02829E64 LDRB W8, [X0 + 0x135]
	0x02829E68 TBNZ X8, 0x0, 0x2829E70
	0x02829E6C BL 0x1C5C684
	0x02829E70 LDR X8, [X0 + 0xC0]
	0x02829E74 LDR X0, [X8 + 0x8]
	0x02829E78 LDRB W8, [X0 + 0x135]
	0x02829E7C TBNZ X8, 0x0, 0x2829E84
	0x02829E80 BL 0x1C5C684
	0x02829E84 LDR X8, [X0 + 0xB8]
	0x02829E88 LDRSW X8, [X8]
	0x02829E8C CMP X22, X8
	0x02829E90 B.GE 0x282B428
	0x02829E94 STR X21, [X31 + 0x78]
	0x02829E98 LDR X0, [X20]
	0x02829E9C LDRB W8, [X0 + 0x135]
	0x02829EA0 TBNZ X8, 0x0, 0x2829EA8
	0x02829EA4 BL 0x1C5C684
	0x02829EA8 LDR X8, [X0 + 0xC0]
	0x02829EAC ADD X1, X31, 0x78
	0x02829EB0 LDR X0, [X8 + 0x20]
	0x02829EB4 BL 0x1C16E04
	0x02829EB8 CBZ X0, 0x282B9D8
	0x02829EBC LDR X8, [X0]
	0x02829EC0 LDR X1, [X23]
	0x02829EC4 LDR X8, [X8 + 0x40]
	0x02829EC8 LDR X9, [X1 + 0x40]
	0x02829ECC CMP X8, X9
	0x02829ED0 B.NE 0x282B9DC
	0x02829ED4 BL 0x1C16E08
	0x02829ED8 LDRB W8, [X0]
	0x02829EDC STRB W8, [X19, X22, LSL]
	0x02829EE0 ADD X22, X22, 0x1
	0x02829EE4 B 0x2829DE8
	0x02829EE8 LDR X0, [X20]
	0x02829EEC LDRB W8, [X0 + 0x135]
	0x02829EF0 TBNZ X8, 0x0, 0x2829EF8
	0x02829EF4 BL 0x1C5C684
	0x02829EF8 LDR X8, [X24]
	0x02829EFC LDR X9, [X0 + 0xC0]
	0x02829F00 LDR W10, [X8 + 0xE0]
	0x02829F04 LDR X22, [X9 + 0x18]
	0x02829F08 CBNZ W10, 0x2829F14
	0x02829F0C MOV X0, X8
	0x02829F10 BL 0x1C16DFC
	0x02829F14 MOV X0, X22
	0x02829F18 MOV X1, X31
	0x02829F1C BL 0x338C698
	0x02829F20 ADRP X8, 0x18F1000
	0x02829F24 LDR X8, [X8 + 0xD90]
	0x02829F28 MOV X22, X0
	0x02829F2C MOV X1, X31
	0x02829F30 LDR X8, [X8]
	0x02829F34 MOV X0, X8
	0x02829F38 BL 0x338C698
	0x02829F3C MOV X1, X0
	0x02829F40 MOV X0, X22
	0x02829F44 MOV X2, X31
	0x02829F48 BL 0x3395194
	0x02829F4C TBZ X0, 0x0, 0x282A590
	0x02829F50 STR X21, [X31 + 0x78]
	0x02829F54 LDR X0, [X20]
	0x02829F58 LDRB W8, [X0 + 0x135]
	0x02829F5C TBNZ X8, 0x0, 0x2829F64
	0x02829F60 BL 0x1C5C684
	0x02829F64 LDR X8, [X0 + 0xC0]
	0x02829F68 ADD X1, X31, 0x78
	0x02829F6C LDR X0, [X8 + 0x20]
	0x02829F70 BL 0x1C16E04
	0x02829F74 CBZ X0, 0x282B9D8
	0x02829F78 ADRP X22, 0x18F3000
	0x02829F7C LDR X22, [X22 + 0x6B0]
	0x02829F80 LDR X8, [X0]
	0x02829F84 LDR X1, [X22]
	0x02829F88 LDR X8, [X8 + 0x40]
	0x02829F8C LDR X9, [X1 + 0x40]
	0x02829F90 CMP X8, X9
	0x02829F94 B.NE 0x282B9DC
	0x02829F98 BL 0x1C16E08
	0x02829F9C LDRB W8, [X0]
	0x02829FA0 STRB W8, [X19]
	0x02829FA4 STR X21, [X31 + 0x70]
	0x02829FA8 LDR X0, [X20]
	0x02829FAC LDRB W8, [X0 + 0x135]
	0x02829FB0 TBNZ X8, 0x0, 0x2829FB8
	0x02829FB4 BL 0x1C5C684
	0x02829FB8 LDR X8, [X0 + 0xC0]
	0x02829FBC ADD X1, X31, 0x70
	0x02829FC0 LDR X0, [X8 + 0x20]
	0x02829FC4 BL 0x1C16E04
	0x02829FC8 CBZ X0, 0x282B9D8
	0x02829FCC LDR X8, [X0]
	0x02829FD0 LDR X1, [X22]
	0x02829FD4 LDR X8, [X8 + 0x40]
	0x02829FD8 LDR X9, [X1 + 0x40]
	0x02829FDC CMP X8, X9
	0x02829FE0 B.NE 0x282B9DC
	0x02829FE4 BL 0x1C16E08
	0x02829FE8 LDRB W8, [X0]
	0x02829FEC STRB W8, [X19 + 0x1]
	0x02829FF0 STR X21, [X31 + 0x68]
	0x02829FF4 LDR X0, [X20]
	0x02829FF8 LDRB W8, [X0 + 0x135]
	0x02829FFC TBNZ X8, 0x0, 0x282A004
	0x0282A000 BL 0x1C5C684
	0x0282A004 LDR X8, [X0 + 0xC0]
	0x0282A008 ADD X1, X31, 0x68
	0x0282A00C LDR X0, [X8 + 0x20]
	0x0282A010 BL 0x1C16E04
	0x0282A014 CBZ X0, 0x282B9D8
	0x0282A018 LDR X8, [X0]
	0x0282A01C LDR X1, [X22]
	0x0282A020 LDR X8, [X8 + 0x40]
	0x0282A024 LDR X9, [X1 + 0x40]
	0x0282A028 CMP X8, X9
	0x0282A02C B.NE 0x282B9DC
	0x0282A030 BL 0x1C16E08
	0x0282A034 LDRB W8, [X0]
	0x0282A038 STRB W8, [X19 + 0x2]
	0x0282A03C STR X21, [X31 + 0x60]
	0x0282A040 LDR X0, [X20]
	0x0282A044 LDRB W8, [X0 + 0x135]
	0x0282A048 TBNZ X8, 0x0, 0x282A050
	0x0282A04C BL 0x1C5C684
	0x0282A050 LDR X8, [X0 + 0xC0]
	0x0282A054 ADD X1, X31, 0x60
	0x0282A058 LDR X0, [X8 + 0x20]
	0x0282A05C BL 0x1C16E04
	0x0282A060 CBZ X0, 0x282B9D8
	0x0282A064 LDR X8, [X0]
	0x0282A068 LDR X1, [X22]
	0x0282A06C LDR X8, [X8 + 0x40]
	0x0282A070 LDR X9, [X1 + 0x40]
	0x0282A074 CMP X8, X9
	0x0282A078 B.NE 0x282B9DC
	0x0282A07C BL 0x1C16E08
	0x0282A080 LDRB W8, [X0]
	0x0282A084 STRB W8, [X19 + 0x3]
	0x0282A088 STR X21, [X31 + 0x58]
	0x0282A08C LDR X0, [X20]
	0x0282A090 LDRB W8, [X0 + 0x135]
	0x0282A094 TBNZ X8, 0x0, 0x282A09C
	0x0282A098 BL 0x1C5C684
	0x0282A09C LDR X8, [X0 + 0xC0]
	0x0282A0A0 ADD X1, X31, 0x58
	0x0282A0A4 LDR X0, [X8 + 0x20]
	0x0282A0A8 BL 0x1C16E04
	0x0282A0AC CBZ X0, 0x282B9D8
	0x0282A0B0 LDR X8, [X0]
	0x0282A0B4 LDR X1, [X22]
	0x0282A0B8 LDR X8, [X8 + 0x40]
	0x0282A0BC LDR X9, [X1 + 0x40]
	0x0282A0C0 CMP X8, X9
	0x0282A0C4 B.NE 0x282B9DC
	0x0282A0C8 BL 0x1C16E08
	0x0282A0CC LDRB W8, [X0]
	0x0282A0D0 STRB W8, [X19 + 0x4]
	0x0282A0D4 STR X21, [X31 + 0x50]
	0x0282A0D8 LDR X0, [X20]
	0x0282A0DC LDRB W8, [X0 + 0x135]
	0x0282A0E0 TBNZ X8, 0x0, 0x282A0E8
	0x0282A0E4 BL 0x1C5C684
	0x0282A0E8 LDR X8, [X0 + 0xC0]
	0x0282A0EC ADD X1, X31, 0x50
	0x0282A0F0 LDR X0, [X8 + 0x20]
	0x0282A0F4 BL 0x1C16E04
	0x0282A0F8 CBZ X0, 0x282B9D8
	0x0282A0FC LDR X8, [X0]
	0x0282A100 LDR X1, [X22]
	0x0282A104 LDR X8, [X8 + 0x40]
	0x0282A108 LDR X9, [X1 + 0x40]
	0x0282A10C CMP X8, X9
	0x0282A110 B.NE 0x282B9DC
	0x0282A114 BL 0x1C16E08
	0x0282A118 LDRB W8, [X0]
	0x0282A11C STRB W8, [X19 + 0x5]
	0x0282A120 STR X21, [X31 + 0x48]
	0x0282A124 LDR X0, [X20]
	0x0282A128 LDRB W8, [X0 + 0x135]
	0x0282A12C TBNZ X8, 0x0, 0x282A134
	0x0282A130 BL 0x1C5C684
	0x0282A134 LDR X8, [X0 + 0xC0]
	0x0282A138 ADD X1, X31, 0x48
	0x0282A13C LDR X0, [X8 + 0x20]
	0x0282A140 BL 0x1C16E04
	0x0282A144 CBZ X0, 0x282B9D8
	0x0282A148 LDR X8, [X0]
	0x0282A14C LDR X1, [X22]
	0x0282A150 LDR X8, [X8 + 0x40]
	0x0282A154 LDR X9, [X1 + 0x40]
	0x0282A158 CMP X8, X9
	0x0282A15C B.NE 0x282B9DC
	0x0282A160 BL 0x1C16E08
	0x0282A164 LDRB W8, [X0]
	0x0282A168 STRB W8, [X19 + 0x6]
	0x0282A16C STR X21, [X31 + 0x40]
	0x0282A170 LDR X0, [X20]
	0x0282A174 LDRB W8, [X0 + 0x135]
	0x0282A178 TBNZ X8, 0x0, 0x282A180
	0x0282A17C BL 0x1C5C684
	0x0282A180 LDR X8, [X0 + 0xC0]
	0x0282A184 ADD X1, X31, 0x40
	0x0282A188 LDR X0, [X8 + 0x20]
	0x0282A18C BL 0x1C16E04
	0x0282A190 CBZ X0, 0x282B9D8
	0x0282A194 LDR X8, [X0]
	0x0282A198 LDR X1, [X22]
	0x0282A19C LDR X8, [X8 + 0x40]
	0x0282A1A0 LDR X9, [X1 + 0x40]
	0x0282A1A4 CMP X8, X9
	0x0282A1A8 B.NE 0x282B9DC
	0x0282A1AC BL 0x1C16E08
	0x0282A1B0 LDRB W8, [X0]
	0x0282A1B4 STRB W8, [X19 + 0x7]
	0x0282A1B8 STR X21, [X31 + 0x38]
	0x0282A1BC LDR X0, [X20]
	0x0282A1C0 LDRB W8, [X0 + 0x135]
	0x0282A1C4 TBNZ X8, 0x0, 0x282A1CC
	0x0282A1C8 BL 0x1C5C684
	0x0282A1CC LDR X8, [X0 + 0xC0]
	0x0282A1D0 ADD X1, X31, 0x38
	0x0282A1D4 LDR X0, [X8 + 0x20]
	0x0282A1D8 BL 0x1C16E04
	0x0282A1DC CBZ X0, 0x282B9D8
	0x0282A1E0 LDR X8, [X0]
	0x0282A1E4 LDR X1, [X22]
	0x0282A1E8 LDR X8, [X8 + 0x40]
	0x0282A1EC LDR X9, [X1 + 0x40]
	0x0282A1F0 CMP X8, X9
	0x0282A1F4 B.NE 0x282B9DC
	0x0282A1F8 BL 0x1C16E08
	0x0282A1FC LDRB W8, [X0]
	0x0282A200 STRB W8, [X19 + 0x8]
	0x0282A204 STR X21, [X31 + 0x30]
	0x0282A208 LDR X0, [X20]
	0x0282A20C LDRB W8, [X0 + 0x135]
	0x0282A210 TBNZ X8, 0x0, 0x282A218
	0x0282A214 BL 0x1C5C684
	0x0282A218 LDR X8, [X0 + 0xC0]
	0x0282A21C ADD X1, X31, 0x30
	0x0282A220 LDR X0, [X8 + 0x20]
	0x0282A224 BL 0x1C16E04
	0x0282A228 CBZ X0, 0x282B9D8
	0x0282A22C LDR X8, [X0]
	0x0282A230 LDR X1, [X22]
	0x0282A234 LDR X8, [X8 + 0x40]
	0x0282A238 LDR X9, [X1 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1BB2000
	007 Move W8, [X20+2686]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {78}
	013 Move X0, 0x18F2000
	014 Move X0, [X0+3432]
	015 Call 0x1C17CF4
	016 Move X0, 0x18CC000
	017 Move X0, [X0+2520]
	018 Call 0x1C17CF4
	019 Move X0, 0x18F3000
	020 Move X0, [X0+2680]
	021 Call 0x1C17CF4
	022 Move X0, 0x18CE000
	023 Move X0, [X0+2424]
	024 Call 0x1C17CF4
	025 Move X0, 0x18F2000
	026 Move X0, [X0+3448]
	027 Call 0x1C17CF4
	028 Move X0, 0x18CF000
	029 Move X0, [X0+1576]
	030 Call 0x1C17CF4
	031 Move X0, 0x18F2000
	032 Move X0, [X0+3456]
	033 Call 0x1C17CF4
	034 Move X0, 0x18CB000
	035 Move X0, [X0+1880]
	036 Call 0x1C17CF4
	037 Move X0, 0x18F2000
	038 Move X0, [X0+3464]
	039 Call 0x1C17CF4
	040 Move X0, 0x18CD000
	041 Move X0, [X0+2656]
	042 Call 0x1C17CF4
	043 Move X0, 0x18F2000
	044 Move X0, [X0+3472]
	045 Call 0x1C17CF4
	046 Move X0, 0x18F4000
	047 Move X0, [X0+1712]
	048 Call 0x1C17CF4
	049 Move X0, 0x18F3000
	050 Move X0, [X0+2688]
	051 Call 0x1C17CF4
	052 Move X0, 0x18CB000
	053 Move X0, [X0+2704]
	054 Call 0x1C17CF4
	055 Move X0, 0x18CB000
	056 Move X0, [X0+1728]
	057 Call 0x1C17CF4
	058 Move X0, 0x18F2000
	059 Move X0, [X0+3480]
	060 Call 0x1C17CF4
	061 Move X0, 0x18D0000
	062 Move X0, [X0+1624]
	063 Call 0x1C17CF4
	064 Move X0, 0x18F2000
	065 Move X0, [X0+3488]
	066 Call 0x1C17CF4
	067 Move X0, 0x18D3000
	068 Move X0, [X0+1824]
	069 Call 0x1C17CF4
	070 Move X0, 0x18F2000
	071 Move X0, [X0+3496]
	072 Call 0x1C17CF4
	073 Move X0, 0x18CC000
	074 Move X0, [X0+1880]
	075 Call 0x1C17CF4
	076 Move W8, 1
	077 Move [X20+2686], W8
	078 Move X0, [X19+32]
	079 Move X21, 0x18CB000
	080 Move W8, [X0+309]
	081 Move X21, [X21+1728]
	082 Move TEMP, X8
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {87}
	086 Call 0x1C5D684
	087 Move X8, [X21]
	088 Move X9, [X0+192]
	089 Move X22, 0x18F2000
	090 Move W10, [X8+224]
	091 Move X20, [X9+24]
	092 Move X22, [X22+3432]
	093 Compare W10, 0
	094 JumpIfNotEqual {97}
	095 Move X0, X8
	096 Call 0x1C17DFC
	097 Move X0, X20
	098 Move X1, X31
	099 Call Type.GetTypeFromHandle, X0
	100 Move X8, [X22]
	101 Move X20, X0
	102 Move X1, X31
	103 Move X0, X8
	104 Call Type.GetTypeFromHandle, X0
	105 Move X1, X0
	106 Move X0, X20
	107 Move X2, X31
	108 Call Type.op_Equality, X0, X1
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {115}
	113 Move X8, 0x18CC000
	114 Move X8, [X8+2520]
	115 Move X0, [X19+32]
	116 Move W8, [X0+309]
	117 Move TEMP, X8
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfEqual {122}
	121 Call 0x1C5D684
	122 Move X8, [X21]
	123 Move X9, [X0+192]
	124 Move W10, [X8+224]
	125 Move X20, [X9+24]
	126 Compare W10, 0
	127 JumpIfNotEqual {130}
	128 Move X0, X8
	129 Call 0x1C17DFC
	130 Move X0, X20
	131 Move X1, X31
	132 Call Type.GetTypeFromHandle, X0
	133 Move X8, 0x18F2000
	134 Move X8, [X8+3472]
	135 Move X20, X0
	136 Move X1, X31
	137 Move X8, [X8]
	138 Move X0, X8
	139 Call Type.GetTypeFromHandle, X0
	140 Move X1, X0
	141 Move X0, X20
	142 Move X2, X31
	143 Call Type.op_Equality, X0, X1
	144 Move TEMP, X0
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfNotEqual {190}
	148 Move X8, 0x18F4000
	149 Move X8, [X8+1712]
	150 Move X0, [X8]
	151 Move W8, 255
	152 Move [X31+8], W8
	153 Add X1, X31, 8
	154 Call 0x1C17E04
	155 Move X8, [X19+32]
	156 Move X19, X0
	157 Move W9, [X8+309]
	158 Move TEMP, X9
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfEqual {165}
	162 Move X0, X8
	163 Call 0x1C5D684
	164 Move X8, X0
	165 Move X8, [X8+192]
	166 Move X1, [X8+32]
	167 Move W8, [X1+309]
	168 Move TEMP, X8
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfEqual {175}
	172 Move X0, X1
	173 Call 0x1C5D684
	174 Move X1, X0
	175 Compare X19, 0
	176 JumpIfEqual {483}
	177 Move X8, [X19]
	178 Move X9, [X1+64]
	179 Move X0, X19
	180 Move X8, [X8+64]
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Call 0x1C17E08
	183 NotImplemented "Instruction LDRH not yet implemented."
	184 Move X20, [X31+32]
	185 Move X19, [X31+40]
	186 Move X22, [X31+16]
	187 Move X21, [X31+24]
	188 Move X30, [X31+48]
	189 Return X0
	190 Move X0, [X19+32]
	191 Move W8, [X0+309]
	192 Move TEMP, X8
	193 And TEMP, TEMP, 1
	194 Compare TEMP, 1
	195 JumpIfEqual {197}
	196 Call 0x1C5D684
	197 Move X8, [X21]
	198 Move X9, [X0+192]
	199 Move W10, [X8+224]
	200 Move X20, [X9+24]
	201 Compare W10, 0
	202 JumpIfNotEqual {205}
	203 Move X0, X8
	204 Call 0x1C17DFC
	205 Move X0, X20
	206 Move X1, X31
	207 Call Type.GetTypeFromHandle, X0
	208 Move X8, 0x18F2000
	209 Move X8, [X8+3480]
	210 Move X20, X0
	211 Move X1, X31
	212 Move X8, [X8]
	213 Move X0, X8
	214 Call Type.GetTypeFromHandle, X0
	215 Move X1, X0
	216 Move X0, X20
	217 Move X2, X31
	218 Call Type.op_Equality, X0, X1
	219 Move TEMP, X0
	220 And TEMP, TEMP, 1
	221 Compare TEMP, 1
	222 JumpIfNotEqual {225}
	223 Move X8, 0x18D0000
	224 Move X8, [X8+1624]
	225 Move X0, [X19+32]
	226 Move W8, [X0+309]
	227 Move TEMP, X8
	228 And TEMP, TEMP, 1
	229 Compare TEMP, 1
	230 JumpIfEqual {232}
	231 Call 0x1C5D684
	232 Move X8, [X21]
	233 Move X9, [X0+192]
	234 Move W10, [X8+224]
	235 Move X20, [X9+24]
	236 Compare W10, 0
	237 JumpIfNotEqual {240}
	238 Move X0, X8
	239 Call 0x1C17DFC
	240 Move X0, X20
	241 Move X1, X31
	242 Call Type.GetTypeFromHandle, X0
	243 Move X8, 0x18F2000
	244 Move X8, [X8+3448]
	245 Move X20, X0
	246 Move X1, X31
	247 Move X8, [X8]
	248 Move X0, X8
	249 Call Type.GetTypeFromHandle, X0
	250 Move X1, X0
	251 Move X0, X20
	252 Move X2, X31
	253 Call Type.op_Equality, X0, X1
	254 Move TEMP, X0
	255 And TEMP, TEMP, 1
	256 Compare TEMP, 1
	257 JumpIfNotEqual {263}
	258 Move X8, 0x18CF000
	259 Move X8, [X8+1576]
	260 Move X0, [X8]
	261 Move W8, 0xFFFF
	262 NotImplemented "Instruction STRH not yet implemented."
	263 Move X0, [X19+32]
	264 Move W8, [X0+309]
	265 Move TEMP, X8
	266 And TEMP, TEMP, 1
	267 Compare TEMP, 1
	268 JumpIfEqual {270}
	269 Call 0x1C5D684
	270 Move X8, [X21]
	271 Move X9, [X0+192]
	272 Move W10, [X8+224]
	273 Move X20, [X9+24]
	274 Compare W10, 0
	275 JumpIfNotEqual {278}
	276 Move X0, X8
	277 Call 0x1C17DFC
	278 Move X0, X20
	279 Move X1, X31
	280 Call Type.GetTypeFromHandle, X0
	281 Move X8, 0x18F2000
	282 Move X8, [X8+3488]
	283 Move X20, X0
	284 Move X1, X31
	285 Move X8, [X8]
	286 Move X0, X8
	287 Call Type.GetTypeFromHandle, X0
	288 Move X1, X0
	289 Move X0, X20
	290 Move X2, X31
	291 Call Type.op_Equality, X0, X1
	292 Move TEMP, X0
	293 And TEMP, TEMP, 1
	294 Compare TEMP, 1
	295 JumpIfNotEqual {298}
	296 Move X8, 0x18D3000
	297 Move X8, [X8+1824]
	298 Move X0, [X19+32]
	299 Move W8, [X0+309]
	300 Move TEMP, X8
	301 And TEMP, TEMP, 1
	302 Compare TEMP, 1
	303 JumpIfEqual {305}
	304 Call 0x1C5D684
	305 Move X8, [X21]
	306 Move X9, [X0+192]
	307 Move W10, [X8+224]
	308 Move X20, [X9+24]
	309 Compare W10, 0
	310 JumpIfNotEqual {313}
	311 Move X0, X8
	312 Call 0x1C17DFC
	313 Move X0, X20
	314 Move X1, X31
	315 Call Type.GetTypeFromHandle, X0
	316 Move X8, 0x18F2000
	317 Move X8, [X8+3456]
	318 Move X20, X0
	319 Move X1, X31
	320 Move X8, [X8]
	321 Move X0, X8
	322 Call Type.GetTypeFromHandle, X0
	323 Move X1, X0
	324 Move X0, X20
	325 Move X2, X31
	326 Call Type.op_Equality, X0, X1
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {338}
	331 Move X8, 0x18CA000
	332 Move X8, [X8+1880]
	333 Move X0, [X8]
	334 Move TEMP, 0
	335 Not TEMP
	336 Move W8, TEMP
	337 Move [X31+8], W8
	338 Move X0, [X19+32]
	339 Move W8, [X0+309]
	340 Move TEMP, X8
	341 And TEMP, TEMP, 1
	342 Compare TEMP, 1
	343 JumpIfEqual {345}
	344 Call 0x1C5D684
	345 Move X8, [X21]
	346 Move X9, [X0+192]
	347 Move W10, [X8+224]
	348 Move X20, [X9+24]
	349 Compare W10, 0
	350 JumpIfNotEqual {353}
	351 Move X0, X8
	352 Call 0x1C17DFC
	353 Move X0, X20
	354 Move X1, X31
	355 Call Type.GetTypeFromHandle, X0
	356 Move X8, 0x18F1000
	357 Move X8, [X8+3496]
	358 Move X20, X0
	359 Move X1, X31
	360 Move X8, [X8]
	361 Move X0, X8
	362 Call Type.GetTypeFromHandle, X0
	363 Move X1, X0
	364 Move X0, X20
	365 Move X2, X31
	366 Call Type.op_Equality, X0, X1
	367 Move TEMP, X0
	368 And TEMP, TEMP, 1
	369 Compare TEMP, 1
	370 JumpIfNotEqual {373}
	371 Move X8, 0x18CB000
	372 Move X8, [X8+1880]
	373 Move X0, [X19+32]
	374 Move W8, [X0+309]
	375 Move TEMP, X8
	376 And TEMP, TEMP, 1
	377 Compare TEMP, 1
	378 JumpIfEqual {380}
	379 Call 0x1C5D684
	380 Move X8, [X21]
	381 Move X9, [X0+192]
	382 Move W10, [X8+224]
	383 Move X20, [X9+24]
	384 Compare W10, 0
	385 JumpIfNotEqual {388}
	386 Move X0, X8
	387 Call 0x1C17DFC
	388 Move X0, X20
	389 Move X1, X31
	390 Call Type.GetTypeFromHandle, X0
	391 Move X8, 0x18F1000
	392 Move X8, [X8+3464]
	393 Move X20, X0
	394 Move X1, X31
	395 Move X8, [X8]
	396 Move X0, X8
	397 Call Type.GetTypeFromHandle, X0
	398 Move X1, X0
	399 Move X0, X20
	400 Move X2, X31
	401 Call Type.op_Equality, X0, X1
	402 Move TEMP, X0
	403 And TEMP, TEMP, 1
	404 Compare TEMP, 1
	405 JumpIfNotEqual {408}
	406 Move X8, 0x18CC000
	407 Move X8, [X8+2656]
	408 Move X0, [X19+32]
	409 Move W8, [X0+309]
	410 Move TEMP, X8
	411 And TEMP, TEMP, 1
	412 Compare TEMP, 1
	413 JumpIfEqual {415}
	414 Call 0x1C5D684
	415 Move X8, [X21]
	416 Move X9, [X0+192]
	417 Move W10, [X8+224]
	418 Move X20, [X9+24]
	419 Compare W10, 0
	420 JumpIfNotEqual {423}
	421 Move X0, X8
	422 Call 0x1C17DFC
	423 Move X0, X20
	424 Move X1, X31
	425 Call Type.GetTypeFromHandle, X0
	426 Move X8, 0x18F2000
	427 Move X8, [X8+2688]
	428 Move X20, X0
	429 Move X1, X31
	430 Move X8, [X8]
	431 Move X0, X8
	432 Call Type.GetTypeFromHandle, X0
	433 Move X1, X0
	434 Move X0, X20
	435 Move X2, X31
	436 Call Type.op_Equality, X0, X1
	437 Move TEMP, X0
	438 And TEMP, TEMP, 1
	439 Compare TEMP, 1
	440 JumpIfNotEqual {443}
	441 Move X8, 0x18CA000
	442 Move X8, [X8+2704]
	443 Move X0, [X19+32]
	444 Move W8, [X0+309]
	445 Move TEMP, X8
	446 And TEMP, TEMP, 1
	447 Compare TEMP, 1
	448 JumpIfEqual {450}
	449 Call 0x1C5D684
	450 Move X8, [X21]
	451 Move X9, [X0+192]
	452 Move W10, [X8+224]
	453 Move X20, [X9+24]
	454 Compare W10, 0
	455 JumpIfNotEqual {458}
	456 Move X0, X8
	457 Call 0x1C17DFC
	458 Move X0, X20
	459 Move X1, X31
	460 Call Type.GetTypeFromHandle, X0
	461 Move X8, 0x18F2000
	462 Move X8, [X8+2680]
	463 Move X20, X0
	464 Move X1, X31
	465 Move X8, [X8]
	466 Move X0, X8
	467 Call Type.GetTypeFromHandle, X0
	468 Move X1, X0
	469 Move X0, X20
	470 Move X2, X31
	471 Call Type.op_Equality, X0, X1
	472 Move TEMP, X0
	473 And TEMP, TEMP, 1
	474 Compare TEMP, 1
	475 JumpIfNotEqual {485}
	476 Move X8, 0x18CD000
	477 Move X8, [X8+2424]
	478 Move X0, [X8]
	479 Move TEMP, 0
	480 Not TEMP
	481 Move X8, TEMP
	482 Move [X31+8], X8
	483 Call 0x1C17F20
	484 Call 0x1C181E0
	485 Move X0, 0x18CA000
	486 Move X0, [X0+2880]
	487 Call 0x1C17D08
	488 Call 0x1C17F10
	489 Move X20, X0
	490 Move X0, 0x18F3000
	491 Move X0, [X0+2704]
	492 Call 0x1C17D08
	493 Move X1, X0
	494 Move X0, X20
	495 Move X2, X31
	496 Call NotSupportedException..ctor, X0, X1
	497 Move X0, X20
	498 Move X1, X19
	499 Call 0x1C17DEC

Method: System.Void .cctor()

Disassembly:
	0x0282A23C CMP X8, X9
	0x0282A240 B.NE 0x282B9DC
	0x0282A244 BL 0x1C16E08
	0x0282A248 LDRB W8, [X0]
	0x0282A24C STRB W8, [X19 + 0x9]
	0x0282A250 STR X21, [X31 + 0x28]
	0x0282A254 LDR X0, [X20]
	0x0282A258 LDRB W8, [X0 + 0x135]
	0x0282A25C TBNZ X8, 0x0, 0x282A264
	0x0282A260 BL 0x1C5C684
	0x0282A264 LDR X8, [X0 + 0xC0]
	0x0282A268 ADD X1, X31, 0x28
	0x0282A26C LDR X0, [X8 + 0x20]
	0x0282A270 BL 0x1C16E04
	0x0282A274 CBZ X0, 0x282B9D8
	0x0282A278 LDR X8, [X0]
	0x0282A27C LDR X1, [X22]
	0x0282A280 LDR X8, [X8 + 0x40]
	0x0282A284 LDR X9, [X1 + 0x40]
	0x0282A288 CMP X8, X9
	0x0282A28C B.NE 0x282B9DC
	0x0282A290 BL 0x1C16E08
	0x0282A294 LDRB W8, [X0]
	0x0282A298 STRB W8, [X19 + 0xA]
	0x0282A29C STR X21, [X31 + 0x20]
	0x0282A2A0 LDR X0, [X20]
	0x0282A2A4 LDRB W8, [X0 + 0x135]
	0x0282A2A8 TBNZ X8, 0x0, 0x282A2B0
	0x0282A2AC BL 0x1C5C684
	0x0282A2B0 LDR X8, [X0 + 0xC0]
	0x0282A2B4 ADD X1, X31, 0x20
	0x0282A2B8 LDR X0, [X8 + 0x20]
	0x0282A2BC BL 0x1C16E04
	0x0282A2C0 CBZ X0, 0x282B9D8
	0x0282A2C4 LDR X8, [X0]
	0x0282A2C8 LDR X1, [X22]
	0x0282A2CC LDR X8, [X8 + 0x40]
	0x0282A2D0 LDR X9, [X1 + 0x40]
	0x0282A2D4 CMP X8, X9
	0x0282A2D8 B.NE 0x282B9DC
	0x0282A2DC BL 0x1C16E08
	0x0282A2E0 LDRB W8, [X0]
	0x0282A2E4 STRB W8, [X19 + 0xB]
	0x0282A2E8 STR X21, [X31 + 0x18]
	0x0282A2EC LDR X0, [X20]
	0x0282A2F0 LDRB W8, [X0 + 0x135]
	0x0282A2F4 TBNZ X8, 0x0, 0x282A2FC
	0x0282A2F8 BL 0x1C5C684
	0x0282A2FC LDR X8, [X0 + 0xC0]
	0x0282A300 ADD X1, X31, 0x18
	0x0282A304 LDR X0, [X8 + 0x20]
	0x0282A308 BL 0x1C16E04
	0x0282A30C CBZ X0, 0x282B9D8
	0x0282A310 LDR X8, [X0]
	0x0282A314 LDR X1, [X22]
	0x0282A318 LDR X8, [X8 + 0x40]
	0x0282A31C LDR X9, [X1 + 0x40]
	0x0282A320 CMP X8, X9
	0x0282A324 B.NE 0x282B9DC
	0x0282A328 BL 0x1C16E08
	0x0282A32C LDRB W8, [X0]
	0x0282A330 STRB W8, [X19 + 0xC]
	0x0282A334 STR X21, [X31 + 0x10]
	0x0282A338 LDR X0, [X20]
	0x0282A33C LDRB W8, [X0 + 0x135]
	0x0282A340 TBNZ X8, 0x0, 0x282A348
	0x0282A344 BL 0x1C5C684
	0x0282A348 LDR X8, [X0 + 0xC0]
	0x0282A34C ADD X1, X31, 0x10
	0x0282A350 LDR X0, [X8 + 0x20]
	0x0282A354 BL 0x1C16E04
	0x0282A358 CBZ X0, 0x282B9D8
	0x0282A35C LDR X8, [X0]
	0x0282A360 LDR X1, [X22]
	0x0282A364 LDR X8, [X8 + 0x40]
	0x0282A368 LDR X9, [X1 + 0x40]
	0x0282A36C CMP X8, X9
	0x0282A370 B.NE 0x282B9DC
	0x0282A374 BL 0x1C16E08
	0x0282A378 LDRB W8, [X0]
	0x0282A37C STRB W8, [X19 + 0xD]
	0x0282A380 STR X21, [X31 + 0x8]
	0x0282A384 LDR X0, [X20]
	0x0282A388 LDRB W8, [X0 + 0x135]
	0x0282A38C TBNZ X8, 0x0, 0x282A394
	0x0282A390 BL 0x1C5C684
	0x0282A394 LDR X8, [X0 + 0xC0]
	0x0282A398 ADD X1, X31, 0x8
	0x0282A39C LDR X0, [X8 + 0x20]
	0x0282A3A0 BL 0x1C16E04
	0x0282A3A4 CBZ X0, 0x282B9D8
	0x0282A3A8 LDR X8, [X0]
	0x0282A3AC LDR X1, [X22]
	0x0282A3B0 LDR X8, [X8 + 0x40]
	0x0282A3B4 LDR X9, [X1 + 0x40]
	0x0282A3B8 CMP X8, X9
	0x0282A3BC B.NE 0x282B9DC
	0x0282A3C0 BL 0x1C16E08
	0x0282A3C4 LDRB W8, [X0]
	0x0282A3C8 STRB W8, [X19 + 0xE]
	0x0282A3CC STR X21, [X31]
	0x0282A3D0 LDR X0, [X20]
	0x0282A3D4 LDRB W8, [X0 + 0x135]
	0x0282A3D8 TBNZ X8, 0x0, 0x282A3E0
	0x0282A3DC BL 0x1C5C684
	0x0282A3E0 LDR X8, [X0 + 0xC0]
	0x0282A3E4 ADD X1, X31, 0x0
	0x0282A3E8 LDR X0, [X8 + 0x20]
	0x0282A3EC BL 0x1C16E04
	0x0282A3F0 CBZ X0, 0x282B9D8
	0x0282A3F4 LDR X8, [X0]
	0x0282A3F8 LDR X1, [X22]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 NotImplemented "Instruction MRS not yet implemented."
	007 Move X8, [X21+40]
	008 Move X19, X0
	009 Move [X31+40], X8
	010 Move X0, [X0+32]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Move X8, [X0+192]
	018 Move X0, [X8+112]
	019 Call 0x281F5C8
	020 Move X8, [X19+32]
	021 Move W20, W0
	022 Move W9, [X8+309]
	023 Move TEMP, X9
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {30}
	027 Move X0, X8
	028 Call 0x1C5D684
	029 Move X8, X0
	030 Move X8, [X8+192]
	031 Move X0, [X8+8]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X0+184]
	039 Move [X8], W20
	040 Move X0, [X19+32]
	041 Move W8, [X0+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {47}
	046 Call 0x1C5D684
	047 Move X8, [X0+192]
	048 Move X0, [X8+8]
	049 Move W8, [X0+309]
	050 Move TEMP, X8
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {55}
	054 Call 0x1C5D684
	055 Move X8, [X0+184]
	056 Move [X8+8], X31
	057 Move [X8+16], X31
	058 Move X0, [X19+32]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Move X8, [X0+192]
	066 Move X0, [X8+120]
	067 Call 0x2835424
	068 Move [X31+24], X31
	069 Move [X31+32], X31
	070 Move X8, [X19+32]
	071 Move W20, W0
	072 Move W9, [X8+309]
	073 Move TEMP, X9
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {80}
	077 Move X0, X8
	078 Call 0x1C5D684
	079 Move X8, X0
	080 Move X8, [X8+192]
	081 Add X0, X31, 24
	082 Move W1, W20
	083 Move X2, [X8+128]
	084 Call 0x281FB6C, X0, X1
	085 Move X0, [X19+32]
	086 Move W8, [X0+309]
	087 Move TEMP, X8
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {92}
	091 Call 0x1C5D684
	092 Move X8, [X0+192]
	093 Move X0, [X8+8]
	094 Move W8, [X0+309]
	095 Move TEMP, X8
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {100}
	099 Call 0x1C5D684
	100 Move X8, [X0+184]
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 Move [X8+24], V0
	103 Move X0, [X19+32]
	104 Move W8, [X0+309]
	105 Move TEMP, X8
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfEqual {110}
	109 Call 0x1C5D684
	110 Move X8, [X0+192]
	111 Move X0, [X8+136]
	112 Call 0x2835AC8
	113 Move [X31+8], X31
	114 Move [X31+16], X31
	115 Move X8, [X19+32]
	116 Move W20, W0
	117 Move W9, [X8+309]
	118 Move TEMP, X9
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfEqual {125}
	122 Move X0, X8
	123 Call 0x1C5D684
	124 Move X8, X0
	125 Move X8, [X8+192]
	126 Add X0, X31, 8
	127 Move W1, W20
	128 Move X2, [X8+128]
	129 Call 0x281FB6C, X0, X1
	130 Move X0, [X19+32]
	131 Move W8, [X0+309]
	132 Move TEMP, X8
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfEqual {137}
	136 Call 0x1C5D684
	137 Move X8, [X0+192]
	138 Move X0, [X8+8]
	139 Move W8, [X0+309]
	140 Move TEMP, X8
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfEqual {145}
	144 Call 0x1C5D684
	145 Move X8, [X0+184]
	146 NotImplemented "Instruction LDUR not yet implemented."
	147 Move [X8+40], V0
	148 Move X8, [X21+40]
	149 Move X9, [X31+40]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X20, [X31+64]
	152 Move X19, [X31+72]
	153 Move X30, [X31+48]
	154 Move X21, [X31+56]
	155 Add X31, X31, 80
	156 Return 
	157 Call 0x3EB2B20

