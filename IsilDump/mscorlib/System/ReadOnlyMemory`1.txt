Type: System.ReadOnlyMemory`1

Method: System.Void .ctor(T[] array, System.Int32 start, System.Int32 length)

Disassembly:
	0x025BDD84 LDR X8, [X8 + 0xC8]
	0x025BDD88 ADD X8, X8, X9, 0x3, LSL
	0x025BDD8C LDUR X8, [X8 - 0x8]
	0x025BDD90 CMP X8, X1
	0x025BDD94 B.NE 0x25BE014
	0x025BDD98 LDR X0, [X19 + 0x20]
	0x025BDD9C LDRB W8, [X0 + 0x135]
	0x025BDDA0 TBNZ X8, 0x0, 0x25BDDA8
	0x025BDDA4 BL 0x1C5C684
	0x025BDDA8 LDR X8, [X0 + 0xC0]
	0x025BDDAC LDR X1, [X8 + 0x68]
	0x025BDDB0 LDRB W8, [X1 + 0x135]
	0x025BDDB4 TBNZ X8, 0x0, 0x25BDDC4
	0x025BDDB8 MOV X0, X1
	0x025BDDBC BL 0x1C5C684
	0x025BDDC0 MOV X1, X0
	0x025BDDC4 LDR X8, [X21]
	0x025BDDC8 LDRB W9, [X1 + 0x130]
	0x025BDDCC LDRB W10, [X8 + 0x130]
	0x025BDDD0 CMP W10, W9
	0x025BDDD4 B.CC 0x25BE014
	0x025BDDD8 LDR X10, [X8 + 0xC8]
	0x025BDDDC ADD X9, X10, X9, 0x3, LSL
	0x025BDDE0 LDUR X9, [X9 - 0x8]
	0x025BDDE4 CMP X9, X1
	0x025BDDE8 B.NE 0x25BE014
	0x025BDDEC LDP X9, X1, [X8 + 0x178]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W20, W3
	007 Move W21, W2
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfEqual {20}
	011 Move W8, [X1+24]
	012 Move X22, X1
	013 Subtract W8, W8, W21
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X0, X31
	016 Call ThrowHelper.ThrowArgumentOutOfRangeException
	017 Move [X19], X22
	018 Move [X19+8], W21
	019 Move [X19+12], W20
	020 Or W8, W20, W21
	021 Compare W8, 0
	022 JumpIfEqual {25}
	023 Move X0, X31
	024 Call ThrowHelper.ThrowArgumentOutOfRangeException
	025 Move [X19], X31
	026 Move [X19+8], X31
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move X30, [X31+48]
	032 Return 

Method: System.ReadOnlyMemory`1<T> op_Implicit(System.ArraySegment`1<T> segment)

Disassembly:
	0x025BDDF0 MOV X0, X21
	0x025BDDF4 BLR X9
	0x025BDDF8 STP X0, X1, [X31 + 0x10]
	0x025BDDFC LDR X8, [X19 + 0x20]
	0x025BDE00 LDP W21, W20, [X20 + 0x8]
	0x025BDE04 ADD X9, X8, 0x135
	0x025BDE08 LDRH W9, [X9]
	0x025BDE0C TBNZ X9, 0x0, 0x25BDEE0
	0x025BDE10 MOV X0, X8
	0x025BDE14 BL 0x1C5C684
	0x025BDE18 LDR X8, [X19 + 0x20]
	0x025BDE1C ADD X9, X8, 0x135
	0x025BDE20 LDRH W9, [X9]
	0x025BDE24 B 0x25BDEE4
	0x025BDE28 CBZ X22, 0x25BDED4
	0x025BDE2C LDR X0, [X19 + 0x20]
	0x025BDE30 LDP W21, W24, [X20 + 0x8]
	0x025BDE34 LDRB W8, [X0 + 0x135]
	0x025BDE38 TBNZ X8, 0x0, 0x25BDE40
	0x025BDE3C BL 0x1C5C684
	0x025BDE40 LDR X8, [X0 + 0xC0]
	0x025BDE44 LDR X23, [X8]
	0x025BDE48 LDRB W8, [X23 + 0x135]
	0x025BDE4C TBNZ X8, 0x0, 0x25BDE5C
	0x025BDE50 MOV X0, X23
	0x025BDE54 BL 0x1C5C684
	0x025BDE58 MOV X23, X0
	0x025BDE5C MOV X0, X22
	0x025BDE60 MOV X1, X23
	0x025BDE64 BL 0x1C16E00
	0x025BDE68 CBZ X0, 0x25BE020
	0x025BDE6C MOV X20, X0
	0x025BDE70 LDR X0, [X19 + 0x20]
	0x025BDE74 LDRB W8, [X0 + 0x135]
	0x025BDE78 TBNZ X8, 0x0, 0x25BDE80
	0x025BDE7C BL 0x1C5C684
	0x025BDE80 LDR X8, [X0 + 0xC0]
	0x025BDE84 LDR W9, [X20 + 0x18]
	0x025BDE88 AND X19, X24, 0x7FFFFFFF
	0x025BDE8C LDR X22, [X8 + 0xB8]
	0x025BDE90 SUBS W8, W9, W21
	0x025BDE94 B.CC 0x25BDEA0
	0x025BDE98 CMP W8, W19
	0x025BDE9C B.CS 0x25BDEA8
	0x025BDEA0 MOV X0, X31
	0x025BDEA4 BL 0x339D6EC
	0x025BDEA8 LDR X8, [X22 + 0x20]
	0x025BDEAC ADD X20, X20, 0x20
	0x025BDEB0 ADD X9, X8, 0x135
	0x025BDEB4 LDRH W9, [X9]
	0x025BDEB8 TBNZ X9, 0x0, 0x25BDF88
	0x025BDEBC MOV X0, X8
	0x025BDEC0 BL 0x1C5C684
	0x025BDEC4 LDR X8, [X22 + 0x20]
	0x025BDEC8 ADD X9, X8, 0x135
	0x025BDECC LDRH W9, [X9]
	0x025BDED0 B 0x25BDF8C
	0x025BDED4 MOV X19, X31
	0x025BDED8 MOV X0, X31
	0x025BDEDC B 0x25BDFBC
	0x025BDEE0 MOV X0, X8
	0x025BDEE4 LDR X10, [X0 + 0xC0]
	0x025BDEE8 AND W21, W21, 0x7FFFFFFF

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X21, X2
	007 Move X20, X1
	008 Move X19, X0
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X8, [X8+192]
	018 Move X0, [X8+32]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, [X21+32]
	030 Add X8, X0, 309
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {59}
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {67}
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {75}
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {49}
	048 Call 0x1C5D684
	049 Move X8, X20
	050 ShiftRight X8, 32
	051 And X8, X8, 0x7FFFFFFF
	052 Compare X19, 0
	053 JumpIfEqual {83}
	054 Move W9, [X19+24]
	055 Subtract W9, W9, W20
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, X31
	058 Call ThrowHelper.ThrowArgumentOutOfRangeException
	059 Call 0x1C5D684
	060 Move X0, [X21+32]
	061 Add X8, X0, 309
	062 NotImplemented "Instruction LDRH not yet implemented."
	063 Move TEMP, X8
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {40}
	067 Call 0x1C5D684
	068 Move X0, [X21+32]
	069 Add X8, X0, 309
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Move TEMP, X8
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {44}
	075 Call 0x1C5D684
	076 Move X0, [X21+32]
	077 Add X8, X0, 309
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 Move TEMP, X8
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {48}
	083 Or W8, W8, W20
	084 Compare W8, 0
	085 JumpIfEqual {88}
	086 Move X0, X31
	087 Call ThrowHelper.ThrowArgumentOutOfRangeException
	088 Move X20, X31
	089 Move X0, X19
	090 Move X1, X20
	091 Move X20, [X31+16]
	092 Move X19, [X31+24]
	093 Move X30, [X31+32]
	094 Move X21, [X31+40]
	095 Return X0

Method: System.Int32 get_Length()

Disassembly:
	0x025BDEEC LDR X10, [X10 + 0x80]
	0x025BDEF0 LDR X22, [X10]
	0x025BDEF4 TBNZ X9, 0x0, 0x25BDF04

ISIL:
	001 Move W8, [X0+12]
	002 And W0, W8, 0x7FFFFFFF
	003 Return X0

Method: System.String ToString()

Disassembly:
	0x025BDEF8 MOV X0, X8
	0x025BDEFC BL 0x1C5C684
	0x025BDF00 MOV X8, X0
	0x025BDF04 LDR X8, [X8 + 0xC0]
	0x025BDF08 ADD X0, X31, 0x10
	0x025BDF0C MOV W1, W21
	0x025BDF10 MOV W2, W20
	0x025BDF14 LDR X3, [X8 + 0x80]
	0x025BDF18 BLR X22
	0x025BDF1C LDR X8, [X19 + 0x20]
	0x025BDF20 MOV X20, X0
	0x025BDF24 MOV X21, X1
	0x025BDF28 ADD X9, X8, 0x135
	0x025BDF2C LDRH W9, [X9]
	0x025BDF30 TBNZ X9, 0x0, 0x25BDF4C
	0x025BDF34 MOV X0, X8
	0x025BDF38 BL 0x1C5C684
	0x025BDF3C LDR X8, [X19 + 0x20]
	0x025BDF40 ADD X9, X8, 0x135
	0x025BDF44 LDRH W9, [X9]
	0x025BDF48 B 0x25BDF50
	0x025BDF4C MOV X0, X8
	0x025BDF50 LDR X10, [X0 + 0xC0]
	0x025BDF54 LDR X10, [X10 + 0x90]
	0x025BDF58 LDR X19, [X10]
	0x025BDF5C TBNZ X9, 0x0, 0x25BDF6C
	0x025BDF60 MOV X0, X8
	0x025BDF64 BL 0x1C5C684
	0x025BDF68 MOV X8, X0
	0x025BDF6C LDR X8, [X8 + 0xC0]
	0x025BDF70 MOV X0, X20
	0x025BDF74 MOV X1, X21
	0x025BDF78 LDR X2, [X8 + 0x90]
	0x025BDF7C BLR X19
	0x025BDF80 MOV X19, X1
	0x025BDF84 B 0x25BDFBC
	0x025BDF88 MOV X0, X8
	0x025BDF8C LDR X10, [X0 + 0xC0]
	0x025BDF90 LDR X10, [X10 + 0x28]
	0x025BDF94 LDR X22, [X10]
	0x025BDF98 TBNZ X9, 0x0, 0x25BDFA8
	0x025BDF9C MOV X0, X8
	0x025BDFA0 BL 0x1C5C684
	0x025BDFA4 MOV X8, X0
	0x025BDFA8 LDR X8, [X8 + 0xC0]
	0x025BDFAC MOV X0, X20
	0x025BDFB0 MOV W1, W21
	0x025BDFB4 LDR X2, [X8 + 0x28]
	0x025BDFB8 BLR X22
	0x025BDFBC MOV X1, X19
	0x025BDFC0 LDP X20, X19, [X31 + 0x50]
	0x025BDFC4 LDP X22, X21, [X31 + 0x40]
	0x025BDFC8 LDP X24, X23, [X31 + 0x30]
	0x025BDFCC LDR X30, [X31 + 0x20]
	0x025BDFD0 ADD X31, X31, 0x60
	0x025BDFD4 RET
	0x025BDFD8 MOV X0, X8
	0x025BDFDC LDR X10, [X0 + 0xC0]
	0x025BDFE0 LDR X10, [X10 + 0xA8]
	0x025BDFE4 LDR X19, [X10]
	0x025BDFE8 TBNZ X9, 0x0, 0x25BDFF8
	0x025BDFEC MOV X0, X8
	0x025BDFF0 BL 0x1C5C684
	0x025BDFF4 MOV X8, X0
	0x025BDFF8 LDR X8, [X8 + 0xC0]
	0x025BDFFC ADD X0, X31, 0x0
	0x025BE000 MOV W1, W21
	0x025BE004 MOV W2, W20
	0x025BE008 LDR X3, [X8 + 0xA8]
	0x025BE00C BLR X19
	0x025BE010 B 0x25BDF80
	0x025BE014 MOV X0, X21
	0x025BE018 BL 0x1C171E0
	0x025BE01C BL 0x1C16F20
	0x025BE020 MOV X0, X22
	0x025BE024 MOV X1, X23
	0x025BE028 BL 0x1C171E0
	0x025BE02C SUB X31, X31, 0x40
	0x025BE030 STP X30, X23, [X31 + 0x10]
	0x025BE034 STP X22, X21, [X31 + 0x20]
	0x025BE038 STP X20, X19, [X31 + 0x30]
	0x025BE03C LDR X8, [X2 + 0x20]
	0x025BE040 MOV X20, X2
	0x025BE044 MOV X21, X1
	0x025BE048 MOV X19, X0
	0x025BE04C LDRB W9, [X8 + 0x135]
	0x025BE050 TBNZ X9, 0x0, 0x25BE060
	0x025BE054 MOV X0, X8
	0x025BE058 BL 0x1C5C684
	0x025BE05C MOV X8, X0
	0x025BE060 LDR X8, [X8 + 0xC0]
	0x025BE064 LDR X0, [X8 + 0x8]
	0x025BE068 LDRB W8, [X0 + 0x135]
	0x025BE06C TBNZ X8, 0x0, 0x25BE074
	0x025BE070 BL 0x1C5C684
	0x025BE074 CBZ X21, 0x25BE088
	0x025BE078 LDR X8, [X21]
	0x025BE07C CMP X8, X0
	0x025BE080 CSEL X22, X21, X31, EQ
	0x025BE084 B 0x25BE08C
	0x025BE088 MOV X22, X31
	0x025BE08C LDR X0, [X20 + 0x20]
	0x025BE090 LDRB W8, [X0 + 0x135]
	0x025BE094 TBNZ X8, 0x0, 0x25BE09C
	0x025BE098 BL 0x1C5C684
	0x025BE09C LDR X8, [X0 + 0xC0]
	0x025BE0A0 CBZ X22, 0x25BE108
	0x025BE0A4 LDR X1, [X8 + 0x8]
	0x025BE0A8 LDRB W8, [X1 + 0x135]
	0x025BE0AC TBNZ X8, 0x0, 0x25BE0BC
	0x025BE0B0 MOV X0, X1
	0x025BE0B4 BL 0x1C5C684
	0x025BE0B8 MOV X1, X0
	0x025BE0BC CBZ X21, 0x25BE2AC
	0x025BE0C0 LDR X8, [X21]
	0x025BE0C4 LDR X9, [X1 + 0x40]
	0x025BE0C8 LDR X8, [X8 + 0x40]
	0x025BE0CC CMP X8, X9
	0x025BE0D0 B.NE 0x25BE2A4
	0x025BE0D4 MOV X0, X21
	0x025BE0D8 BL 0x1C16E08
	0x025BE0DC LDR X8, [X20 + 0x20]
	0x025BE0E0 LDP X22, X21, [X0]
	0x025BE0E4 ADD X9, X8, 0x135
	0x025BE0E8 LDRH W9, [X9]
	0x025BE0EC TBNZ X9, 0x0, 0x25BE140

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1E1D000
	009 Move W8, [X21+3870]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x1B5E000
	017 Move X0, [X0+3440]
	018 Call 0x1C17CF4
	019 Move X0, 0x1B37000
	020 Move X0, [X0+1880]
	021 Call 0x1C17CF4
	022 Move X0, 0x1B39000
	023 Move X0, [X0+632]
	024 Call 0x1C17CF4
	025 Move X0, 0x1B37000
	026 Move X0, [X0+1728]
	027 Call 0x1C17CF4
	028 Move X0, 0x1B61000
	029 Move X0, [X0+128]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+3870], W8
	033 Move X0, [X20+32]
	034 Move X22, 0x1B37000
	035 Move W8, [X0+309]
	036 Move X22, [X22+1728]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X22]
	043 Move X9, [X0+192]
	044 Move X23, 0x1B5E000
	045 Move W10, [X8+224]
	046 Move X21, [X9+64]
	047 Move X23, [X23+3440]
	048 Compare W10, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Move X0, X21
	053 Move X1, X31
	054 Call Type.GetTypeFromHandle, X0
	055 Move X8, [X23]
	056 Move X21, X0
	057 Move X1, X31
	058 Move X0, X8
	059 Call Type.GetTypeFromHandle, X0
	060 Move X1, X0
	061 Move X0, X21
	062 Move X2, X31
	063 Call Type.op_Equality, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {100}
	068 Move X0, [X19]
	069 Compare X0, 0
	070 JumpIfEqual {76}
	071 Move X8, 0x1B39000
	072 Move X8, [X8+632]
	073 Move X9, [X0]
	074 Move X8, [X8]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X0, [X20+32]
	077 Move W8, [X0+309]
	078 Move TEMP, X8
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {83}
	082 Call 0x1C5D684
	083 Move X8, [X0+192]
	084 Move X0, X19
	085 Move X1, [X8+72]
	086 Call 0x25D8918
	087 Move [X31], X0
	088 Move [X31+8], X1
	089 Move X0, [X20+32]
	090 Move W8, [X0+309]
	091 Move TEMP, X8
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfEqual {96}
	095 Call 0x1C5D684
	096 Move X8, [X0+192]
	097 Add X0, X31, 0
	098 Move X1, [X8+96]
	099 Call 0x25BF6E0, X0
	100 Move X0, [X20+32]
	101 Move W8, [X0+309]
	102 Move TEMP, X8
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {107}
	106 Call 0x1C5D684
	107 Move X8, [X22]
	108 Move X9, [X0+192]
	109 Move W10, [X8+224]
	110 Move X20, [X9+64]
	111 Compare W10, 0
	112 JumpIfNotEqual {115}
	113 Move X0, X8
	114 Call 0x1C17DFC
	115 Move X0, X20
	116 Move X1, X31
	117 Call Type.GetTypeFromHandle, X0
	118 Compare X0, 0
	119 JumpIfEqual {154}
	120 Move X8, [X0]
	121 Move X9, [X8+424]
	122 Move X1, [X8+432]
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move X9, 0x1B36000
	125 Move W8, [X19+12]
	126 Move X9, [X9+1880]
	127 Move X20, X0
	128 Add X1, X31, 0
	129 And W8, W8, 0x7FFFFFFF
	130 Move X0, [X9]
	131 Move [X31], W8
	132 Call 0x1C17E04
	133 Move X8, 0x1B60000
	134 Move X8, [X8+128]
	135 Move X2, X0
	136 Move X1, X20
	137 Move X3, X31
	138 Move X8, [X8]
	139 Move X0, X8
	140 Call String.Format, X0, X1, X2
	141 Move X20, [X31+48]
	142 Move X19, [X31+56]
	143 Move X22, [X31+32]
	144 Move X21, [X31+40]
	145 Move X30, [X31+16]
	146 Move X23, [X31+24]
	147 Add X31, X31, 64
	148 Return X0
	149 Move W1, [X19+8]
	150 Move W8, [X19+12]
	151 Move X3, X31
	152 And W2, W8, 0x7FFFFFFF
	153 Call String.Substring, X0, X1, X2
	154 Call 0x1C17F20

Method: System.ReadOnlySpan`1<T> get_Span()

Disassembly:
	0x025BE0F0 MOV X0, X8
	0x025BE0F4 BL 0x1C5C684
	0x025BE0F8 LDR X8, [X20 + 0x20]
	0x025BE0FC ADD X9, X8, 0x135
	0x025BE100 LDRH W9, [X9]
	0x025BE104 B 0x25BE144
	0x025BE108 LDR X0, [X8 + 0xC8]
	0x025BE10C LDRB W8, [X0 + 0x135]
	0x025BE110 TBNZ X8, 0x0, 0x25BE118
	0x025BE114 BL 0x1C5C684
	0x025BE118 CBZ X21, 0x25BE128
	0x025BE11C LDR X8, [X21]
	0x025BE120 CMP X8, X0
	0x025BE124 B.EQ 0x25BE190
	0x025BE128 LDP X20, X19, [X31 + 0x30]
	0x025BE12C LDP X22, X21, [X31 + 0x20]
	0x025BE130 LDP X30, X23, [X31 + 0x10]
	0x025BE134 MOV W0, W31
	0x025BE138 ADD X31, X31, 0x40
	0x025BE13C RET
	0x025BE140 MOV X0, X8
	0x025BE144 LDR X10, [X0 + 0xC0]
	0x025BE148 LDR X10, [X10 + 0xC0]
	0x025BE14C LDR X4, [X10]
	0x025BE150 TBNZ X9, 0x0, 0x25BE168
	0x025BE154 MOV X0, X8
	0x025BE158 STR X4, [X31 + 0x8]
	0x025BE15C BL 0x1C5C684
	0x025BE160 LDR X4, [X31 + 0x8]
	0x025BE164 MOV X8, X0
	0x025BE168 LDR X8, [X8 + 0xC0]
	0x025BE16C MOV X0, X19
	0x025BE170 MOV X1, X22
	0x025BE174 MOV X2, X21
	0x025BE178 LDR X3, [X8 + 0xC0]
	0x025BE17C LDP X20, X19, [X31 + 0x30]
	0x025BE180 LDP X22, X21, [X31 + 0x20]
	0x025BE184 LDP X30, X23, [X31 + 0x10]
	0x025BE188 ADD X31, X31, 0x40
	0x025BE18C BR X4
	0x025BE190 LDR X0, [X20 + 0x20]
	0x025BE194 LDRB W8, [X0 + 0x135]
	0x025BE198 TBNZ X8, 0x0, 0x25BE1A0
	0x025BE19C BL 0x1C5C684
	0x025BE1A0 LDR X8, [X0 + 0xC0]
	0x025BE1A4 LDR X1, [X8 + 0xC8]
	0x025BE1A8 LDRB W8, [X1 + 0x135]
	0x025BE1AC TBNZ X8, 0x0, 0x25BE1BC
	0x025BE1B0 MOV X0, X1
	0x025BE1B4 BL 0x1C5C684
	0x025BE1B8 MOV X1, X0
	0x025BE1BC LDR X8, [X21]
	0x025BE1C0 LDR X9, [X1 + 0x40]
	0x025BE1C4 LDR X8, [X8 + 0x40]
	0x025BE1C8 CMP X8, X9
	0x025BE1CC B.NE 0x25BE2A4
	0x025BE1D0 MOV X0, X21
	0x025BE1D4 BL 0x1C16E08
	0x025BE1D8 LDR X8, [X20 + 0x20]
	0x025BE1DC LDP X22, X21, [X0]
	0x025BE1E0 ADD X9, X8, 0x135
	0x025BE1E4 LDRH W9, [X9]
	0x025BE1E8 TBNZ X9, 0x0, 0x25BE204
	0x025BE1EC MOV X0, X8
	0x025BE1F0 BL 0x1C5C684
	0x025BE1F4 LDR X8, [X20 + 0x20]
	0x025BE1F8 ADD X9, X8, 0x135
	0x025BE1FC LDRH W9, [X9]
	0x025BE200 B 0x25BE208
	0x025BE204 MOV X0, X8
	0x025BE208 LDR X10, [X0 + 0xC0]
	0x025BE20C LDR X10, [X10 + 0xD0]
	0x025BE210 LDR X23, [X10]
	0x025BE214 TBNZ X9, 0x0, 0x25BE224
	0x025BE218 MOV X0, X8
	0x025BE21C BL 0x1C5C684
	0x025BE220 MOV X8, X0
	0x025BE224 LDR X8, [X8 + 0xC0]
	0x025BE228 MOV X0, X22
	0x025BE22C MOV X1, X21
	0x025BE230 LDR X2, [X8 + 0xD0]
	0x025BE234 BLR X23
	0x025BE238 LDR X8, [X20 + 0x20]
	0x025BE23C MOV X21, X0
	0x025BE240 MOV X22, X1
	0x025BE244 ADD X9, X8, 0x135
	0x025BE248 LDRH W9, [X9]
	0x025BE24C TBNZ X9, 0x0, 0x25BE268
	0x025BE250 MOV X0, X8
	0x025BE254 BL 0x1C5C684
	0x025BE258 LDR X8, [X20 + 0x20]
	0x025BE25C ADD X9, X8, 0x135
	0x025BE260 LDRH W9, [X9]
	0x025BE264 B 0x25BE26C
	0x025BE268 MOV X0, X8
	0x025BE26C LDR X10, [X0 + 0xC0]
	0x025BE270 LDR X10, [X10 + 0xC0]
	0x025BE274 LDR X4, [X10]
	0x025BE278 TBNZ X9, 0x0, 0x25BE290
	0x025BE27C MOV X0, X8
	0x025BE280 STR X4, [X31 + 0x8]
	0x025BE284 BL 0x1C5C684
	0x025BE288 LDR X4, [X31 + 0x8]
	0x025BE28C MOV X8, X0
	0x025BE290 LDR X8, [X8 + 0xC0]
	0x025BE294 MOV X0, X19
	0x025BE298 MOV X1, X21
	0x025BE29C MOV X2, X22
	0x025BE2A0 B 0x25BE178
	0x025BE2A4 MOV X0, X21
	0x025BE2A8 BL 0x1C171E0
	0x025BE2AC BL 0x1C16F20
	0x025BE2B0 LDR X8, [X0]
	0x025BE2B4 CMP X8, X1
	0x025BE2B8 B.NE 0x25BE2DC
	0x025BE2BC LDR W8, [X0 + 0x8]
	0x025BE2C0 CMP W8, W2
	0x025BE2C4 B.NE 0x25BE2DC
	0x025BE2C8 LDR W8, [X0 + 0xC]
	0x025BE2CC UBFM X9, X2, 0x20, 0x3F
	0x025BE2D0 CMP W8, W9
	0x025BE2D4 CSET W0, EQ
	0x025BE2D8 RET
	0x025BE2DC MOV W0, W31
	0x025BE2E0 RET
	0x025BE2E4 STR X30, [X31 - 0x30]!
	0x025BE2E8 STP X22, X21, [X31 + 0x10]
	0x025BE2EC STP X20, X19, [X31 + 0x20]
	0x025BE2F0 MOV X21, X0
	0x025BE2F4 LDR X0, [X0]
	0x025BE2F8 CBZ X0, 0x25BE358
	0x025BE2FC LDR X8, [X0]
	0x025BE300 MOV X22, X1
	0x025BE304 LDP X9, X1, [X8 + 0x158]
	0x025BE308 BLR X9
	0x025BE30C MOV W19, W0
	0x025BE310 ADD X0, X21, 0x8
	0x025BE314 MOV X1, X31
	0x025BE318 BL 0x337B6D8
	0x025BE31C MOV W20, W0
	0x025BE320 ADD X0, X21, 0xC
	0x025BE324 MOV X1, X31
	0x025BE328 BL 0x337B6D8
	0x025BE32C LDR X8, [X22 + 0x20]
	0x025BE330 MOV W21, W0
	0x025BE334 ADD X9, X8, 0x135
	0x025BE338 LDRH W9, [X9]
	0x025BE33C TBNZ X9, 0x0, 0x25BE368
	0x025BE340 MOV X0, X8
	0x025BE344 BL 0x1C5C684
	0x025BE348 LDR X8, [X22 + 0x20]
	0x025BE34C ADD X9, X8, 0x135
	0x025BE350 LDRH W9, [X9]
	0x025BE354 B 0x25BE36C
	0x025BE358 LDP X20, X19, [X31 + 0x20]
	0x025BE35C LDP X22, X21, [X31 + 0x10]
	0x025BE360 LDR X30, [X31], #0x30
	0x025BE364 RET
	0x025BE368 MOV X0, X8
	0x025BE36C LDR X10, [X0 + 0xC0]
	0x025BE370 LDR X10, [X10 + 0xE0]
	0x025BE374 LDR X4, [X10]
	0x025BE378 TBNZ X9, 0x0, 0x25BE390
	0x025BE37C MOV X0, X8
	0x025BE380 STR X4, [X31 + 0x8]
	0x025BE384 BL 0x1C5C684
	0x025BE388 LDR X4, [X31 + 0x8]
	0x025BE38C MOV X8, X0
	0x025BE390 LDR X8, [X8 + 0xC0]
	0x025BE394 MOV W0, W19
	0x025BE398 MOV W1, W20
	0x025BE39C MOV W2, W21
	0x025BE3A0 LDR X3, [X8 + 0xE0]
	0x025BE3A4 LDP X20, X19, [X31 + 0x20]
	0x025BE3A8 LDP X22, X21, [X31 + 0x10]
	0x025BE3AC LDR X30, [X31], #0x30
	0x025BE3B0 BR X4
	0x025BE3B4 ADD W8, W0, W0, 0x5, LSL
	0x025BE3B8 EOR W0, W8, W1, 0x0
	0x025BE3BC RET
	0x025BE3C0 SUB X31, X31, 0x40
	0x025BE3C4 STP X30, X23, [X31 + 0x10]
	0x025BE3C8 STP X22, X21, [X31 + 0x20]
	0x025BE3CC STP X20, X19, [X31 + 0x30]
	0x025BE3D0 LDR X8, [X3 + 0x20]
	0x025BE3D4 MOV X20, X3
	0x025BE3D8 MOV W19, W2
	0x025BE3DC MOV W21, W1
	0x025BE3E0 ADD X9, X8, 0x135
	0x025BE3E4 LDRH W9, [X9]
	0x025BE3E8 MOV W22, W0
	0x025BE3EC TBNZ X9, 0x0, 0x25BE408
	0x025BE3F0 MOV X0, X8
	0x025BE3F4 BL 0x1C5C684
	0x025BE3F8 LDR X8, [X20 + 0x20]
	0x025BE3FC ADD X9, X8, 0x135
	0x025BE400 LDRH W9, [X9]
	0x025BE404 B 0x25BE40C
	0x025BE408 MOV X0, X8
	0x025BE40C LDR X10, [X0 + 0xC0]
	0x025BE410 LDR X10, [X10 + 0xE8]
	0x025BE414 LDR X23, [X10]
	0x025BE418 TBNZ X9, 0x0, 0x25BE428
	0x025BE41C MOV X0, X8
	0x025BE420 BL 0x1C5C684
	0x025BE424 MOV X8, X0
	0x025BE428 LDR X8, [X8 + 0xC0]
	0x025BE42C MOV W0, W22
	0x025BE430 MOV W1, W21
	0x025BE434 LDR X2, [X8 + 0xE8]
	0x025BE438 BLR X23
	0x025BE43C LDR X8, [X20 + 0x20]
	0x025BE440 MOV W21, W0
	0x025BE444 ADD X9, X8, 0x135
	0x025BE448 LDRH W9, [X9]
	0x025BE44C TBNZ X9, 0x0, 0x25BE468
	0x025BE450 MOV X0, X8
	0x025BE454 BL 0x1C5C684
	0x025BE458 LDR X8, [X20 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1E1C000
	009 Move W8, [X21+3871]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x1B5D000
	017 Move X0, [X0+3440]
	018 Call 0x1C17CF4
	019 Move X0, 0x1B38000
	020 Move X0, [X0+632]
	021 Call 0x1C17CF4
	022 Move X0, 0x1B36000
	023 Move X0, [X0+1728]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3871], W8
	027 Move W8, [X20+8]
	028 Move TEMP, X8
	029 And TEMP, TEMP, -2147483648
	030 Compare TEMP, -2147483648
	031 JumpIfEqual {116}
	032 Move X0, [X19+32]
	033 Move X21, 0x1B36000
	034 Move W8, [X0+309]
	035 Move X21, [X21+1728]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {41}
	040 Call 0x1C5D684
	041 Move X8, [X21]
	042 Move X9, [X0+192]
	043 Move X22, 0x1B5D000
	044 Move W10, [X8+224]
	045 Move X21, [X9+64]
	046 Move X22, [X22+3440]
	047 Compare W10, 0
	048 JumpIfNotEqual {51}
	049 Move X0, X8
	050 Call 0x1C17DFC
	051 Move X0, X21
	052 Move X1, X31
	053 Call Type.GetTypeFromHandle, X0
	054 Move X8, [X22]
	055 Move X21, X0
	056 Move X1, X31
	057 Move X0, X8
	058 Call Type.GetTypeFromHandle, X0
	059 Move X1, X0
	060 Move X0, X21
	061 Move X2, X31
	062 Call Type.op_Equality, X0, X1
	063 Move X21, [X20]
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {212}
	068 Compare X21, 0
	069 JumpIfEqual {255}
	070 Move X8, 0x1B38000
	071 Move X8, [X8+632]
	072 Move X9, [X21]
	073 Move X8, [X8]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X0, X21
	076 Move X1, X31
	077 Call String.GetRawStringData, X0
	078 Move X8, [X19+32]
	079 Move W23, [X21+16]
	080 Move X21, X0
	081 Add X9, X8, 309
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Move TEMP, X9
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {92}
	087 Move X0, X8
	088 Call 0x1C5D684
	089 Move X8, [X19+32]
	090 Add X9, X8, 309
	091 NotImplemented "Instruction LDRH not yet implemented."
	092 Move W22, [X20+8]
	093 Move W19, [X20+12]
	094 Move X22, W22
	095 Move TEMP, X9
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {102}
	099 Move X0, X8
	100 Call 0x1C5D684
	101 Move X8, X0
	102 Move X8, [X8+192]
	103 Move X20, [X8+168]
	104 Subtract W8, W23, W22
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X0, X31
	107 Call ThrowHelper.ThrowArgumentOutOfRangeException
	108 Move X0, [X20+32]
	109 Move W8, [X0+309]
	110 Move TEMP, X8
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfEqual {115}
	114 Call 0x1C5D684
	115 Add X0, X21, X22
	116 Move X0, [X19+32]
	117 Move X21, [X20]
	118 Move W8, [X0+309]
	119 Move TEMP, X8
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfEqual {124}
	123 Call 0x1C5D684
	124 Move X8, [X0+192]
	125 Move X1, [X8+104]
	126 Move W8, [X1+309]
	127 Move TEMP, X8
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfEqual {134}
	131 Move X0, X1
	132 Call 0x1C5D684
	133 Move X1, X0
	134 Compare X21, 0
	135 JumpIfEqual {268}
	136 Move X8, [X21]
	137 Move W9, [X1+304]
	138 Move W10, [X8+304]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X8, [X8+200]
	141 Add X8, X8, X9
	142 NotImplemented "Instruction LDUR not yet implemented."
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X0, [X19+32]
	145 Move W8, [X0+309]
	146 Move TEMP, X8
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfEqual {151}
	150 Call 0x1C5D684
	151 Move X8, [X0+192]
	152 Move X1, [X8+104]
	153 Move W8, [X1+309]
	154 Move TEMP, X8
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfEqual {161}
	158 Move X0, X1
	159 Call 0x1C5D684
	160 Move X1, X0
	161 Move X8, [X21]
	162 Move W9, [X1+304]
	163 Move W10, [X8+304]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X10, [X8+200]
	166 Add X9, X10, X9
	167 NotImplemented "Instruction LDUR not yet implemented."
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X9, [X8+376]
	170 Move X1, [X8+384]
	171 Move X0, X21
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move X21, X0
	174 Move X0, [X19+32]
	175 Move W9, [X20+8]
	176 Move W20, [X20+12]
	177 Move X22, X1
	178 Move W8, [X0+309]
	179 And X23, X9, 0x7FFFFFFF
	180 Move TEMP, X8
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfEqual {185}
	184 Call 0x1C5D684
	185 Move X8, [X0+192]
	186 Move X24, [X8+128]
	187 Subtract W8, W22, W23
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X0, X31
	190 Call ThrowHelper.ThrowArgumentOutOfRangeException
	191 Move X0, [X24+32]
	192 Move W8, [X0+309]
	193 Move TEMP, X8
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfEqual {198}
	197 Call 0x1C5D684
	198 Move X0, [X19+32]
	199 Add X19, X21, X23
	200 Move W8, [X0+309]
	201 Move TEMP, X8
	202 And TEMP, TEMP, 1
	203 Compare TEMP, 1
	204 JumpIfEqual {206}
	205 Call 0x1C5D684
	206 Move X8, [X0+192]
	207 Move X0, X19
	208 Move X1, X20
	209 Move X2, [X8+144]
	210 Call 0x25FC09C, X0
	211 Move X19, X1
	212 Compare X21, 0
	213 JumpIfEqual {255}
	214 Move X0, [X19+32]
	215 Move W23, [X20+8]
	216 Move W24, [X20+12]
	217 Move X23, W23
	218 Move W8, [X0+309]
	219 Move TEMP, X8
	220 And TEMP, TEMP, 1
	221 Compare TEMP, 1
	222 JumpIfEqual {224}
	223 Call 0x1C5D684
	224 Move X8, [X0+192]
	225 Move X22, [X8]
	226 Move W8, [X22+309]
	227 Move TEMP, X8
	228 And TEMP, TEMP, 1
	229 Compare TEMP, 1
	230 JumpIfEqual {234}
	231 Move X0, X22
	232 Call 0x1C5D684
	233 Move X22, X0
	234 Move X0, X21
	235 Move X1, X22
	236 Call 0x1C17E00
	237 Compare X0, 0
	238 JumpIfEqual {269}
	239 Move X20, X0
	240 Move X0, [X19+32]
	241 Move W8, [X0+309]
	242 Move TEMP, X8
	243 And TEMP, TEMP, 1
	244 Compare TEMP, 1
	245 JumpIfEqual {247}
	246 Call 0x1C5D684
	247 Move W8, [X20+24]
	248 And X19, X24, 0x7FFFFFFF
	249 Subtract W8, W8, W23
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Move X0, X31
	252 Call ThrowHelper.ThrowArgumentOutOfRangeException
	253 Add X8, X20, X23
	254 Add X0, X8, 32
	255 Move X19, X31
	256 Move X0, X31
	257 Move X1, X19
	258 Move X20, [X31+48]
	259 Move X19, [X31+56]
	260 Move X22, [X31+32]
	261 Move X21, [X31+40]
	262 Move X24, [X31+16]
	263 Move X23, [X31+24]
	264 Move X30, [X31+64]
	265 Return X0
	266 Move X0, X21
	267 Call 0x1C181E0
	268 Call 0x1C17F20
	269 Move X0, X21
	270 Move X1, X22
	271 Call 0x1C181E0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x025BE45C ADD X9, X8, 0x135
	0x025BE460 LDRH W9, [X9]
	0x025BE464 B 0x25BE46C
	0x025BE468 MOV X0, X8
	0x025BE46C LDR X10, [X0 + 0xC0]
	0x025BE470 LDR X10, [X10 + 0xE8]
	0x025BE474 LDR X3, [X10]
	0x025BE478 TBNZ X9, 0x0, 0x25BE490
	0x025BE47C MOV X0, X8
	0x025BE480 STR X3, [X31 + 0x8]
	0x025BE484 BL 0x1C5C684
	0x025BE488 LDR X3, [X31 + 0x8]
	0x025BE48C MOV X8, X0
	0x025BE490 LDR X8, [X8 + 0xC0]
	0x025BE494 MOV W0, W21
	0x025BE498 MOV W1, W19
	0x025BE49C LDP X20, X19, [X31 + 0x30]
	0x025BE4A0 LDR X2, [X8 + 0xE8]
	0x025BE4A4 LDP X22, X21, [X31 + 0x20]
	0x025BE4A8 LDP X30, X23, [X31 + 0x10]
	0x025BE4AC ADD X31, X31, 0x40
	0x025BE4B0 BR X3
	0x025BE4B4 LDR W8, [X0 + 0x8]
	0x025BE4B8 STR W8, [X1]
	0x025BE4BC LDR W8, [X0 + 0xC]
	0x025BE4C0 STR W8, [X2]
	0x025BE4C4 LDR X0, [X0]
	0x025BE4C8 RET
	0x025BE4CC CBZ X1, 0x25BE4E4
	0x025BE4D0 ADD X8, X1, 0x20
	0x025BE4D4 STR X8, [X0]
	0x025BE4D8 LDR X8, [X1 + 0x18]
	0x025BE4DC STR W8, [X0 + 0x8]
	0x025BE4E0 RET
	0x025BE4E4 STP X31, X31, [X0]
	0x025BE4E8 RET
	0x025BE4EC STR X30, [X31 - 0x30]!
	0x025BE4F0 STP X22, X21, [X31 + 0x10]
	0x025BE4F4 STP X20, X19, [X31 + 0x20]
	0x025BE4F8 MOV W20, W3
	0x025BE4FC MOV W21, W2
	0x025BE500 MOV X19, X0
	0x025BE504 CBZ X1, 0x25BE53C
	0x025BE508 LDR W8, [X1 + 0x18]
	0x025BE50C MOV X22, X1
	0x025BE510 SUBS W8, W8, W21
	0x025BE514 B.CC 0x25BE520
	0x025BE518 CMP W8, W20
	0x025BE51C B.CS 0x25BE528
	0x025BE520 MOV X0, X31
	0x025BE524 BL 0x339D6EC
	0x025BE528 ADD X8, X22, W21, SXTW
	0x025BE52C ADD X8, X8, 0x20
	0x025BE530 STR X8, [X19]
	0x025BE534 STR W20, [X19 + 0x8]
	0x025BE538 B 0x25BE550
	0x025BE53C ORR W8, W20, W21, 0x0
	0x025BE540 CBZ W8, 0x25BE54C
	0x025BE544 MOV X0, X31
	0x025BE548 BL 0x339D6EC
	0x025BE54C STP X31, X31, [X19]
	0x025BE550 LDP X20, X19, [X31 + 0x20]
	0x025BE554 LDP X22, X21, [X31 + 0x10]
	0x025BE558 LDR X30, [X31], #0x30
	0x025BE55C RET
	0x025BE560 STP X30, X21, [X31 - 0x20]!
	0x025BE564 STP X20, X19, [X31 + 0x10]
	0x025BE568 MOV W19, W2
	0x025BE56C MOV X21, X1
	0x025BE570 MOV X20, X0
	0x025BE574 TBZ X2, 0x1F, 0x25BE580
	0x025BE578 MOV X0, X31
	0x025BE57C BL 0x339D6EC
	0x025BE580 STR X21, [X20]
	0x025BE584 STR W19, [X20 + 0x8]
	0x025BE588 LDP X20, X19, [X31 + 0x10]
	0x025BE58C LDP X30, X21, [X31], #0x20
	0x025BE590 RET
	0x025BE594 STR X1, [X0]
	0x025BE598 STR W2, [X0 + 0x8]
	0x025BE59C RET
	0x025BE5A0 STR X30, [X31 - 0x20]!
	0x025BE5A4 STP X20, X19, [X31 + 0x10]
	0x025BE5A8 LDR W8, [X0 + 0x8]
	0x025BE5AC MOV X19, X0
	0x025BE5B0 MOV W20, W1
	0x025BE5B4 CMP W8, W1
	0x025BE5B8 B.HI 0x25BE5C4
	0x025BE5BC MOV X0, X31
	0x025BE5C0 BL 0x339D674
	0x025BE5C4 LDR X8, [X19]
	0x025BE5C8 ADD X0, X8, W20, SXTW
	0x025BE5CC LDP X20, X19, [X31 + 0x10]
	0x025BE5D0 LDR X30, [X31], #0x20
	0x025BE5D4 RET
	0x025BE5D8 STP X30, X23, [X31 - 0x30]!
	0x025BE5DC STP X22, X21, [X31 + 0x10]
	0x025BE5E0 STP X20, X19, [X31 + 0x20]
	0x025BE5E4 MOV X21, X0
	0x025BE5E8 LDR X0, [X3 + 0x20]
	0x025BE5EC LDR W23, [X21 + 0x8]
	0x025BE5F0 MOV X20, X3
	0x025BE5F4 MOV X22, X2
	0x025BE5F8 LDRB W8, [X0 + 0x135]
	0x025BE5FC MOV X19, X1
	0x025BE600 TBNZ X8, 0x0, 0x25BE608
	0x025BE604 BL 0x1C5C684
	0x025BE608 CMP W23, W22
	0x025BE60C B.LS 0x25BE624
	0x025BE610 LDP X20, X19, [X31 + 0x20]
	0x025BE614 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X20, X2
	008 Move X21, X1
	009 Move X19, X0
	010 Move W9, [X8+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {18}
	015 Move X0, X8
	016 Call 0x1C5D684
	017 Move X8, X0
	018 Move X8, [X8+192]
	019 Move X0, [X8+8]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Compare X21, 0
	027 JumpIfEqual {31}
	028 Move X8, [X21]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CSEL not yet implemented."
	031 Move X22, X31
	032 Move X0, [X20+32]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Move X8, [X0+192]
	040 Compare X22, 0
	041 JumpIfEqual {79}
	042 Move X1, [X8+8]
	043 Move W8, [X1+309]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {51}
	048 Move X0, X1
	049 Call 0x1C5D684
	050 Move X1, X0
	051 Compare X21, 0
	052 JumpIfEqual {145}
	053 Move X8, [X21]
	054 Move X9, [X1+64]
	055 Move X8, [X8+64]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, X21
	058 Call 0x1C17E08
	059 Move X8, X0
	060 Move X0, [X20+32]
	061 Move X21, [X8]
	062 Move X20, [X8+8]
	063 Move W9, [X0+309]
	064 Move TEMP, X9
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {69}
	068 Call 0x1C5D684
	069 Move X8, [X19]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W8, [X19+8]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move W8, [X19+12]
	074 Move X9, X20
	075 ShiftRight X9, 32
	076 And X9, X9, 0x7FFFFFFF
	077 NotImplemented "Instruction CMP not yet implemented."
	078 NotImplemented "Instruction CSET not yet implemented."
	079 Move X0, [X8+200]
	080 Move W8, [X0+309]
	081 Move TEMP, X8
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfEqual {86}
	085 Call 0x1C5D684
	086 Compare X21, 0
	087 JumpIfEqual {90}
	088 Move X8, [X21]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move W0, W31
	091 Move X20, [X31+32]
	092 Move X19, [X31+40]
	093 Move X22, [X31+16]
	094 Move X21, [X31+24]
	095 Move X30, [X31+48]
	096 Return X0
	097 Move X0, [X20+32]
	098 Move W8, [X0+309]
	099 Move TEMP, X8
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {104}
	103 Call 0x1C5D684
	104 Move X8, [X0+192]
	105 Move X1, [X8+200]
	106 Move W8, [X1+309]
	107 Move TEMP, X8
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfEqual {114}
	111 Move X0, X1
	112 Call 0x1C5D684
	113 Move X1, X0
	114 Move X8, [X21]
	115 Move X9, [X1+64]
	116 Move X8, [X8+64]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X0, X21
	119 Call 0x1C17E08
	120 Move X8, X0
	121 Move X0, [X20+32]
	122 Move X22, [X8]
	123 Move X21, [X8+8]
	124 Move W9, [X0+309]
	125 Move TEMP, X9
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfEqual {130}
	129 Call 0x1C5D684
	130 Move X8, [X0+192]
	131 Move X0, X22
	132 Move X1, X21
	133 Move X2, [X8+208]
	134 Call 0x319ECE0, X0
	135 Move X21, X0
	136 Move X0, [X20+32]
	137 Move X20, X1
	138 Move W8, [X0+309]
	139 Move TEMP, X8
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfNotEqual {68}
	143 Move X0, X21
	144 Call 0x1C181E0
	145 Call 0x1C17F20

Method: System.Boolean Equals(System.ReadOnlyMemory`1<T> other)

Disassembly:
	0x025BE618 MOV X0, X31
	0x025BE61C LDP X30, X23, [X31], #0x30
	0x025BE620 B 0x339D5E4
	0x025BE624 LDR X0, [X20 + 0x20]
	0x025BE628 LDR X20, [X21]
	0x025BE62C LDRSW X21, [X21 + 0x8]
	0x025BE630 LDRB W8, [X0 + 0x135]
	0x025BE634 TBNZ X8, 0x0, 0x25BE63C
	0x025BE638 BL 0x1C5C684
	0x025BE63C LDR X8, [X0 + 0xC0]
	0x025BE640 MOV X0, X19
	0x025BE644 MOV X1, X20
	0x025BE648 MOV X2, X21

ISIL:
	001 Move X8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, [X0+8]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move W8, [X0+12]
	006 Move X9, X2
	007 ShiftRight X9, 32
	008 And X9, X9, 0x7FFFFFFF
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 Return X0
	012 Move W0, W31
	013 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x025BE64C LDR X3, [X8 + 0x68]
	0x025BE650 LDP X20, X19, [X31 + 0x20]
	0x025BE654 LDP X22, X21, [X31 + 0x10]
	0x025BE658 LDP X30, X23, [X31], #0x30
	0x025BE65C B 0x21A0720
	0x025BE660 STP X30, X23, [X31 - 0x30]!
	0x025BE664 STP X22, X21, [X31 + 0x10]
	0x025BE668 STP X20, X19, [X31 + 0x20]
	0x025BE66C MOV X22, X0
	0x025BE670 LDR X0, [X3 + 0x20]
	0x025BE674 LDR W23, [X22 + 0x8]
	0x025BE678 MOV X21, X3
	0x025BE67C MOV X19, X2
	0x025BE680 LDRB W8, [X0 + 0x135]
	0x025BE684 MOV X20, X1
	0x025BE688 TBNZ X8, 0x0, 0x25BE690
	0x025BE68C BL 0x1C5C684
	0x025BE690 CMP W23, W19
	0x025BE694 B.HI 0x25BE6C8
	0x025BE698 LDR X0, [X21 + 0x20]
	0x025BE69C LDR X21, [X22]
	0x025BE6A0 LDRSW X22, [X22 + 0x8]
	0x025BE6A4 LDRB W8, [X0 + 0x135]
	0x025BE6A8 TBNZ X8, 0x0, 0x25BE6B0
	0x025BE6AC BL 0x1C5C684
	0x025BE6B0 LDR X8, [X0 + 0xC0]
	0x025BE6B4 MOV X0, X20
	0x025BE6B8 MOV X1, X21
	0x025BE6BC MOV X2, X22
	0x025BE6C0 LDR X3, [X8 + 0x68]
	0x025BE6C4 BL 0x21A0720
	0x025BE6C8 CMP W23, W19
	0x025BE6CC LDP X20, X19, [X31 + 0x20]
	0x025BE6D0 LDP X22, X21, [X31 + 0x10]
	0x025BE6D4 CSET W0, LS
	0x025BE6D8 LDP X30, X23, [X31], #0x30
	0x025BE6DC RET
	0x025BE6E0 SUB X31, X31, 0x40

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, X0
	007 Move X0, [X0]
	008 Compare X0, 0
	009 JumpIfEqual {45}
	010 Move X8, [X0]
	011 Move X20, X1
	012 Move X9, [X8+344]
	013 Move X1, [X8+352]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move W19, W0
	016 Add X0, X22, 8
	017 Move X1, X31
	018 Call Int32.GetHashCode, X0
	019 Move W21, W0
	020 Add X0, X22, 12
	021 Move X1, X31
	022 Call Int32.GetHashCode, X0
	023 Move X8, [X20+32]
	024 Move W20, W0
	025 Move W9, [X8+309]
	026 Move TEMP, X9
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {33}
	030 Move X0, X8
	031 Call 0x1C5D684
	032 Move X8, X0
	033 Move X8, [X8+192]
	034 Move W0, W19
	035 Move W1, W21
	036 Move W2, W20
	037 Move X3, [X8+224]
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Call 0x25BE6F0, X0, X1, X2
	044 Return X0
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Return X0

Method: System.Int32 CombineHashCodes(System.Int32 left, System.Int32 right)

Disassembly:
	0x025BE6E4 STP X30, X23, [X31 + 0x10]
	0x025BE6E8 STP X22, X21, [X31 + 0x20]
	0x025BE6EC STP X20, X19, [X31 + 0x30]

ISIL:
	001 Add W8, W0, W0
	002 Xor W0, W8, W1
	003 Return X0

Method: System.Int32 CombineHashCodes(System.Int32 h1, System.Int32 h2, System.Int32 h3)

Disassembly:
	0x025BE6F0 ADRP X21, 0x1E1B000
	0x025BE6F4 LDRB W8, [X21 + 0xF22]
	0x025BE6F8 MOV X20, X1
	0x025BE6FC MOV X19, X0
	0x025BE700 TBNZ X8, 0x0, 0x25BE73C
	0x025BE704 ADRP X0, 0x1B5C000
	0x025BE708 LDR X0, [X0 + 0xD70]
	0x025BE70C BL 0x1C16CF4
	0x025BE710 ADRP X0, 0x1B35000
	0x025BE714 LDR X0, [X0 + 0x758]
	0x025BE718 BL 0x1C16CF4
	0x025BE71C ADRP X0, 0x1B35000
	0x025BE720 LDR X0, [X0 + 0x6C0]
	0x025BE724 BL 0x1C16CF4
	0x025BE728 ADRP X0, 0x1B5F000
	0x025BE72C LDR X0, [X0 + 0x88]
	0x025BE730 BL 0x1C16CF4
	0x025BE734 MOVZ W8, 0x1
	0x025BE738 STRB W8, [X21 + 0xF22]
	0x025BE73C LDR X0, [X20 + 0x20]
	0x025BE740 ADRP X22, 0x1B35000
	0x025BE744 LDRB W8, [X0 + 0x135]
	0x025BE748 LDR X22, [X22 + 0x6C0]
	0x025BE74C TBNZ X8, 0x0, 0x25BE754
	0x025BE750 BL 0x1C5C684
	0x025BE754 LDR X8, [X22]
	0x025BE758 LDR X9, [X0 + 0xC0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+32]
	007 Move W19, W2
	008 Move W20, W1
	009 Move W21, W0
	010 Add X9, X8, 309
	011 NotImplemented "Instruction LDRH not yet implemented."
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {22}
	016 Move X0, X8
	017 Move X22, X3
	018 Call 0x1C5D684
	019 Move X8, [X22+32]
	020 Add X9, X8, 309
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Move TEMP, X9
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {28}
	026 Move X0, X8
	027 Call 0x1C5D684
	028 Add W8, W21, W21
	029 Xor W8, W8, W20
	030 Add W8, W8, W8
	031 Xor W0, W8, W19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Return X0

Method: System.Object GetObjectStartLength(out System.Int32 start, out System.Int32 length)

Disassembly:
	0x025BE75C ADRP X23, 0x1B5C000
	0x025BE760 LDR W10, [X8 + 0xE0]
	0x025BE764 LDR X21, [X9 + 0x38]
	0x025BE768 LDR X23, [X23 + 0xD70]
	0x025BE76C CBNZ W10, 0x25BE778
	0x025BE770 MOV X0, X8

ISIL:
	001 Move W8, [X0+8]
	002 Move [X1], W8
	003 Move W8, [X0+12]
	004 Move [X2], W8
	005 Move X0, [X0]
	006 Return X0

