Type: System.Marvin

Method: System.Int32 ComputeHash32(System.ReadOnlySpan`1<System.Byte> data, System.UInt64 seed)

Disassembly:
	0x0337F4D0 LDR X0, [X21]
	0x0337F4D4 BL 0x1C16D6C
	0x0337F4D8 LDR X1, [X19]
	0x0337F4DC MOV X2, X31
	0x0337F4E0 MOV X19, X0
	0x0337F4E4 BL 0x32C5BD8
	0x0337F4E8 LDR X8, [X20]
	0x0337F4EC LDP X22, X21, [X31 + 0x10]
	0x0337F4F0 LDR X8, [X8 + 0xB8]
	0x0337F4F4 STR X19, [X8 + 0x8]
	0x0337F4F8 LDP X20, X19, [X31 + 0x20]
	0x0337F4FC LDR X30, [X31], #0x30
	0x0337F500 RET
	0x0337F504 STR D8, [X31 - 0x20]!
	0x0337F508 STR X30, [X31 + 0x8]
	0x0337F50C STP X20, X19, [X31 + 0x10]
	0x0337F510 ADRP X19, 0x105D000
	0x0337F514 ADRP X20, 0xD74000
	0x0337F518 LDRB W8, [X19 + 0xF9F]
	0x0337F51C LDR X20, [X20 + 0x5A8]
	0x0337F520 MOV V8.16B, V0.16B
	0x0337F524 TBNZ X8, 0x0, 0x337F53C
	0x0337F528 ADRP X0, 0xD74000
	0x0337F52C LDR X0, [X0 + 0x5A8]
	0x0337F530 BL 0x1C16CF4
	0x0337F534 MOVZ W8, 0x1
	0x0337F538 STRB W8, [X19 + 0xF9F]
	0x0337F53C LDR X0, [X20]
	0x0337F540 LDR W8, [X0 + 0xE0]
	0x0337F544 CBNZ W8, 0x337F54C
	0x0337F548 BL 0x1C16DFC
	0x0337F54C LDP X20, X19, [X31 + 0x10]
	0x0337F550 LDR X30, [X31 + 0x8]
	0x0337F554 FABS S0, S8
	0x0337F558 LDR V8, [X31], #0x20
	0x0337F55C RET
	0x0337F560 STR X30, [X31 - 0x30]!
	0x0337F564 STP X22, X21, [X31 + 0x10]
	0x0337F568 STP X20, X19, [X31 + 0x20]
	0x0337F56C ADRP X21, 0x105D000
	0x0337F570 ADRP X22, 0xD74000
	0x0337F574 ADRP X19, 0xDAB000
	0x0337F578 ADRP X20, 0xDAB000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x105E000
	009 Move X24, 0xDA8000
	010 Move X22, 0xDA9000
	011 Move W8, [X23+3984]
	012 Move X24, [X24+3536]
	013 Move X22, [X22+2520]
	014 Move X19, X2
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xDA9000
	022 Move X0, [X0+2520]
	023 Call 0x1C17CF4
	024 Move X0, 0xDA8000
	025 Move X0, [X0+3536]
	026 Call 0x1C17CF4
	027 Move X0, 0xDA4000
	028 Move X0, [X0+2752]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X23+3984], W8
	032 Move X2, [X24]
	033 Move X0, X21
	034 Move X1, X20
	035 Call 0x2219CF0, X0
	036 Move X8, [X22]
	037 Move X21, X0
	038 Move W9, [X8+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 Move X0, X21
	044 Move W1, W20
	045 Move X2, X19
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X22, [X31+32]
	049 Move X21, [X31+40]
	050 Move X24, [X31+16]
	051 Move X23, [X31+24]
	052 Move X30, [X31+64]

Method: System.Int32 ComputeHash32(ref System.Byte data, System.Int32 count, System.UInt64 seed)

Disassembly:
	0x0337F57C LDRB W8, [X21 + 0xFA0]
	0x0337F580 LDR X22, [X22 + 0x638]
	0x0337F584 LDR X19, [X19 + 0xF50]
	0x0337F588 LDR X20, [X20 + 0xF58]
	0x0337F58C TBNZ X8, 0x0, 0x337F5BC
	0x0337F590 ADRP X0, 0xDAB000
	0x0337F594 LDR X0, [X0 + 0xF58]
	0x0337F598 BL 0x1C16CF4
	0x0337F59C ADRP X0, 0xD74000
	0x0337F5A0 LDR X0, [X0 + 0x638]
	0x0337F5A4 BL 0x1C16CF4
	0x0337F5A8 ADRP X0, 0xDAB000
	0x0337F5AC LDR X0, [X0 + 0xF50]
	0x0337F5B0 BL 0x1C16CF4
	0x0337F5B4 MOVZ W8, 0x1
	0x0337F5B8 STRB W8, [X21 + 0xFA0]
	0x0337F5BC LDR X0, [X22]
	0x0337F5C0 MOVZ W1, 0x7
	0x0337F5C4 BL 0x1C16D6C
	0x0337F5C8 LDR X1, [X19]
	0x0337F5CC MOV X2, X31
	0x0337F5D0 MOV X19, X0
	0x0337F5D4 BL 0x32C5BD8
	0x0337F5D8 LDR X8, [X20]
	0x0337F5DC LDP X22, X21, [X31 + 0x10]
	0x0337F5E0 MOVZ W9, 0xBC20
	0x0337F5E4 MOVK W9, 0x4CBE0000
	0x0337F5E8 LDR X8, [X8 + 0xB8]
	0x0337F5EC STR X19, [X8]
	0x0337F5F0 LDR X8, [X20]
	0x0337F5F4 LDP X20, X19, [X31 + 0x20]
	0x0337F5F8 LDR X8, [X8 + 0xB8]
	0x0337F5FC STR W9, [X8 + 0x8]
	0x0337F600 LDR X30, [X31], #0x30
	0x0337F604 RET
	0x0337F608 STP X30, X21, [X31 - 0x20]!
	0x0337F60C STP X20, X19, [X31 + 0x10]
	0x0337F610 ADRP X20, 0x105D000
	0x0337F614 ADRP X21, 0xDAB000
	0x0337F618 LDRB W8, [X20 + 0xFA1]
	0x0337F61C LDR X21, [X21 + 0xF60]
	0x0337F620 MOV X19, X0
	0x0337F624 TBNZ X8, 0x0, 0x337F63C
	0x0337F628 ADRP X0, 0xDAB000
	0x0337F62C LDR X0, [X0 + 0xF60]
	0x0337F630 BL 0x1C16CF4
	0x0337F634 MOVZ W8, 0x1
	0x0337F638 STRB W8, [X20 + 0xFA1]
	0x0337F63C LDR X1, [X21]
	0x0337F640 MOV X0, X19
	0x0337F644 MOV X2, X31
	0x0337F648 BL 0x338C8D8
	0x0337F64C MOVZ W8, 0x151A
	0x0337F650 MOVK W8, 0x80130000
	0x0337F654 STR W8, [X19 + 0x60]
	0x0337F658 LDP X20, X19, [X31 + 0x10]
	0x0337F65C LDP X30, X21, [X31], #0x20
	0x0337F660 RET
	0x0337F664 STP X30, X19, [X31 - 0x10]!
	0x0337F668 MOV X2, X31
	0x0337F66C MOV X19, X0
	0x0337F670 BL 0x338C8D8
	0x0337F674 MOVZ W8, 0x151A
	0x0337F678 MOVK W8, 0x80130000
	0x0337F67C STR W8, [X19 + 0x60]
	0x0337F680 LDP X30, X19, [X31], #0x10
	0x0337F684 RET
	0x0337F688 MOV X4, X31
	0x0337F68C B 0x338CA74
	0x0337F690 STP X30, X23, [X31 - 0x30]!
	0x0337F694 STP X22, X21, [X31 + 0x10]
	0x0337F698 STP X20, X19, [X31 + 0x20]
	0x0337F69C ADRP X23, 0x105D000
	0x0337F6A0 LDRB W8, [X23 + 0xFA2]
	0x0337F6A4 MOV X19, X3
	0x0337F6A8 MOV X20, X2
	0x0337F6AC MOV X21, X1
	0x0337F6B0 MOV X22, X0
	0x0337F6B4 TBNZ X8, 0x0, 0x337F6D8
	0x0337F6B8 ADRP X0, 0xD9B000
	0x0337F6BC LDR X0, [X0 + 0x2D0]
	0x0337F6C0 BL 0x1C16CF4
	0x0337F6C4 ADRP X0, 0xDA3000
	0x0337F6C8 LDR X0, [X0 + 0x28]
	0x0337F6CC BL 0x1C16CF4
	0x0337F6D0 MOVZ W8, 0x1
	0x0337F6D4 STRB W8, [X23 + 0xFA2]
	0x0337F6D8 CMP W21, W19
	0x0337F6DC B.NE 0x337F710
	0x0337F6E0 CBZ W21, 0x337F718
	0x0337F6E4 ADRP X8, 0xD9B000
	0x0337F6E8 LDR X8, [X8 + 0x2D0]
	0x0337F6EC MOV X0, X22
	0x0337F6F0 MOV X1, X21
	0x0337F6F4 MOV X2, X20
	0x0337F6F8 LDR X4, [X8]
	0x0337F6FC MOV X3, X19
	0x0337F700 LDP X20, X19, [X31 + 0x20]
	0x0337F704 LDP X22, X21, [X31 + 0x10]
	0x0337F708 LDP X30, X23, [X31], #0x30
	0x0337F70C B 0x1F96ECC
	0x0337F710 MOV W0, W31
	0x0337F714 B 0x337F71C
	0x0337F718 MOVZ W0, 0x1
	0x0337F71C LDP X20, X19, [X31 + 0x20]
	0x0337F720 LDP X22, X21, [X31 + 0x10]
	0x0337F724 LDP X30, X23, [X31], #0x30
	0x0337F728 RET
	0x0337F72C STP X30, X23, [X31 - 0x30]!
	0x0337F730 STP X22, X21, [X31 + 0x10]
	0x0337F734 STP X20, X19, [X31 + 0x20]
	0x0337F738 ADRP X23, 0x105D000
	0x0337F73C LDRB W8, [X23 + 0xFA3]
	0x0337F740 MOV X19, X3
	0x0337F744 MOV X20, X2
	0x0337F748 MOV X21, X1
	0x0337F74C MOV X22, X0
	0x0337F750 TBNZ X8, 0x0, 0x337F774
	0x0337F754 ADRP X0, 0xDA2000
	0x0337F758 LDR X0, [X0 + 0xFD0]
	0x0337F75C BL 0x1C16CF4
	0x0337F760 ADRP X0, 0xDA3000
	0x0337F764 LDR X0, [X0 + 0x28]
	0x0337F768 BL 0x1C16CF4
	0x0337F76C MOVZ W8, 0x1
	0x0337F770 STRB W8, [X23 + 0xFA3]
	0x0337F774 CMP W21, W19
	0x0337F778 B.NE 0x337F7BC
	0x0337F77C CBZ W21, 0x337F7C4
	0x0337F780 ADRP X8, 0xDA2000
	0x0337F784 LDR X8, [X8 + 0xFD0]
	0x0337F788 LDR X0, [X8]
	0x0337F78C LDR W8, [X0 + 0xE0]
	0x0337F790 CBNZ W8, 0x337F798
	0x0337F794 BL 0x1C16DFC
	0x0337F798 MOV X0, X22
	0x0337F79C MOV X1, X21
	0x0337F7A0 MOV X2, X20
	0x0337F7A4 MOV X3, X19
	0x0337F7A8 MOV X4, X31
	0x0337F7AC BL 0x33043D4
	0x0337F7B0 CMP W0, 0x0
	0x0337F7B4 CSET W0, EQ
	0x0337F7B8 B 0x337F7C8
	0x0337F7BC MOV W0, W31
	0x0337F7C0 B 0x337F7C8
	0x0337F7C4 MOVZ W0, 0x1
	0x0337F7C8 LDP X20, X19, [X31 + 0x20]
	0x0337F7CC LDP X22, X21, [X31 + 0x10]
	0x0337F7D0 LDP X30, X23, [X31], #0x30
	0x0337F7D4 RET
	0x0337F7D8 STR X30, [X31 - 0x30]!
	0x0337F7DC STP X22, X21, [X31 + 0x10]
	0x0337F7E0 STP X20, X19, [X31 + 0x20]
	0x0337F7E4 ADRP X22, 0x105D000
	0x0337F7E8 LDRB W8, [X22 + 0xFA4]
	0x0337F7EC MOV W20, W2
	0x0337F7F0 MOV X19, X1
	0x0337F7F4 MOV X21, X0
	0x0337F7F8 TBNZ X8, 0x0, 0x337F810
	0x0337F7FC ADRP X0, 0xDA3000
	0x0337F800 LDR X0, [X0 + 0x28]
	0x0337F804 BL 0x1C16CF4
	0x0337F808 MOVZ W8, 0x1
	0x0337F80C STRB W8, [X22 + 0xFA4]
	0x0337F810 CMP W19, 0x1
	0x0337F814 B.LT 0x337F82C
	0x0337F818 LDRH W8, [X21]
	0x0337F81C CMP W8, W20, UXTH
	0x0337F820 B.NE 0x337F834
	0x0337F824 MOVZ W0, 0x1
	0x0337F828 B 0x337F85C
	0x0337F82C MOV W0, W31
	0x0337F830 B 0x337F85C
	0x0337F834 MOVZ W9, 0x1
	0x0337F838 MOV W8, W9
	0x0337F83C CMP W19, W9
	0x0337F840 B.EQ 0x337F854
	0x0337F844 LDRH W9, [X21, W8, SXTW]
	0x0337F848 CMP W9, W20, UXTH
	0x0337F84C ADD W9, W8, 0x1
	0x0337F850 B.NE 0x337F838
	0x0337F854 CMP W8, W19
	0x0337F858 CSET W0, LT
	0x0337F85C LDP X20, X19, [X31 + 0x20]
	0x0337F860 LDP X22, X21, [X31 + 0x10]
	0x0337F864 LDR X30, [X31], #0x30
	0x0337F868 RET
	0x0337F86C STR X30, [X31 - 0x40]!
	0x0337F870 STP X24, X23, [X31 + 0x10]
	0x0337F874 STP X22, X21, [X31 + 0x20]
	0x0337F878 STP X20, X19, [X31 + 0x30]
	0x0337F87C ADRP X23, 0x105D000
	0x0337F880 LDRB W8, [X23 + 0xFA5]
	0x0337F884 MOV X20, X3
	0x0337F888 MOV X21, X2
	0x0337F88C MOV X19, X1
	0x0337F890 MOV X22, X0
	0x0337F894 TBNZ X8, 0x0, 0x337F8D0
	0x0337F898 ADRP X0, 0xD76000
	0x0337F89C LDR X0, [X0 + 0xC48]
	0x0337F8A0 BL 0x1C16CF4
	0x0337F8A4 ADRP X0, 0xDA8000
	0x0337F8A8 LDR X0, [X0 + 0x930]
	0x0337F8AC BL 0x1C16CF4
	0x0337F8B0 ADRP X0, 0xDA3000
	0x0337F8B4 LDR X0, [X0 + 0x28]
	0x0337F8B8 BL 0x1C16CF4
	0x0337F8BC ADRP X0, 0xDA3000
	0x0337F8C0 LDR X0, [X0 + 0x588]
	0x0337F8C4 BL 0x1C16CF4
	0x0337F8C8 MOVZ W8, 0x1
	0x0337F8CC STRB W8, [X23 + 0xFA5]
	0x0337F8D0 CMP W20, W19
	0x0337F8D4 B.GE 0x337F8E0
	0x0337F8D8 MOVN W19, 0x0
	0x0337F8DC B 0x337F9A8
	0x0337F8E0 ADRP X23, 0xDA8000
	0x0337F8E4 LDR X23, [X23 + 0x930]
	0x0337F8E8 LDR X0, [X23]
	0x0337F8EC LDR W8, [X0 + 0xE0]
	0x0337F8F0 CBNZ W8, 0x337F8F8
	0x0337F8F4 BL 0x1C16DFC
	0x0337F8F8 ADRP X24, 0x105D000
	0x0337F8FC LDRB W8, [X24 + 0xAFE]
	0x0337F900 CBNZ W8, 0x337F918
	0x0337F904 ADRP X0, 0xDA8000
	0x0337F908 LDR X0, [X0 + 0x930]
	0x0337F90C BL 0x1C16CF4
	0x0337F910 MOVZ W8, 0x1
	0x0337F914 STRB W8, [X24 + 0xAFE]
	0x0337F918 LDR X0, [X23]
	0x0337F91C ADRP X24, 0xD76000
	0x0337F920 LDR W8, [X0 + 0xE0]
	0x0337F924 LDR X24, [X24 + 0xC48]
	0x0337F928 CBNZ W8, 0x337F934
	0x0337F92C BL 0x1C16DFC
	0x0337F930 LDR X0, [X23]
	0x0337F934 LDR X8, [X24]
	0x0337F938 LDR X9, [X0 + 0xB8]
	0x0337F93C LDR W10, [X8 + 0xE0]
	0x0337F940 LDRB W23, [X9]
	0x0337F944 CBNZ W10, 0x337F950
	0x0337F948 MOV X0, X8
	0x0337F94C BL 0x1C16DFC
	0x0337F950 MOV X0, X31
	0x0337F954 BL 0x3338524
	0x0337F958 CBZ X0, 0x337F9C0
	0x0337F95C LDR X8, [X0]
	0x0337F960 LDP X9, X1, [X8 + 0x1D8]
	0x0337F964 BLR X9
	0x0337F968 CBZ X0, 0x337F9C0

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X19, 0x105E000
	014 Move W8, [X19+3985]
	015 Move X21, X2
	016 Move W22, W1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xDA9000
	023 Move X0, [X0+2520]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+3985], W8
	027 Move X19, 0xDA9000
	028 Move X19, [X19+2520]
	029 Move X25, W22
	030 Move X23, X21
	031 ShiftRight X23, 32
	032 And X23, X23, 0x7FFFFFFF
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X22, 0x105F000
	035 Move X24, X31
	036 Add X24, X20, 4
	037 Move W27, 1
	038 Move X26, X25
	039 Move X0, [X19]
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move W8, [X22]
	046 Compare W8, 0
	047 JumpIfNotEqual {51}
	048 Move X0, X19
	049 Call 0x1C17CF4
	050 Move [X22], W27
	051 Move X0, [X19]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfEqual {56}
	055 Move W8, 1
	056 Call 0x1C17DFC
	057 Move W8, [X22]
	058 Move W29, [X24]
	059 Compare W8, 0
	060 JumpIfNotEqual {64}
	061 Move X0, X19
	062 Call 0x1C17CF4
	063 Move [X22], W27
	064 Move X0, [X19]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Add W8, W28, W21
	070 Xor W9, W8, W23
	071 NotImplemented "Instruction EXTR not yet implemented."
	072 Add W8, W9, W8
	073 Xor W9, W8, W9
	074 NotImplemented "Instruction EXTR not yet implemented."
	075 Add W8, W9, W8
	076 NotImplemented "Instruction EXTR not yet implemented."
	077 Add W8, W8, W29
	078 Xor W9, W8, W9
	079 NotImplemented "Instruction EXTR not yet implemented."
	080 Add W8, W9, W8
	081 Subtract X26, X26, 8
	082 Xor W9, W8, W9
	083 NotImplemented "Instruction EXTR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Add W21, W9, W8
	086 NotImplemented "Instruction EXTR not yet implemented."
	087 Add X24, X24, 8
	088 And X24, X25, 0xFFFFFFFF
	089 Move X25, X26
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X9, -41844736
	092 And X8, X25, 0
	093 Add X9, X9, 2029
	094 NotImplemented "Instruction ADR not yet implemented."
	095 Move W11, [X9]
	096 Add X10, X10, X11
	097 CallNoReturn X10
	098 Move X0, [X19]
	099 Move W20, [X20]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move W8, [X22]
	105 Add W20, W20, W21
	106 Compare W8, 0
	107 JumpIfNotEqual {113}
	108 Move X0, 0xDA9000
	109 Move X0, [X0+2520]
	110 Call 0x1C17CF4
	111 Move W8, 1
	112 Move [X22], W8
	113 Move X0, [X19]
	114 Xor W21, W20, W23
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {119}
	118 Call 0x1C17DFC
	119 NotImplemented "Instruction EXTR not yet implemented."
	120 Add W8, W21, W8
	121 Xor W9, W8, W21
	122 NotImplemented "Instruction EXTR not yet implemented."
	123 Add W21, W9, W8
	124 NotImplemented "Instruction EXTR not yet implemented."
	125 Add W21, W21, 128
	126 Move X0, [X19]
	127 Move W25, [X20]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Move W8, [X22]
	133 Add W21, W25, W21
	134 Compare W8, 0
	135 JumpIfNotEqual {141}
	136 Move X0, 0xDA9000
	137 Move X0, [X0+2520]
	138 Call 0x1C17CF4
	139 Move W8, 1
	140 Move [X22], W8
	141 Move X0, [X19]
	142 Or X24, X24, 7
	143 Xor W23, W21, W23
	144 Move W8, [X0+224]
	145 Compare W8, 0
	146 JumpIfNotEqual {148}
	147 Call 0x1C17DFC
	148 NotImplemented "Instruction EXTR not yet implemented."
	149 Add W8, W23, W8
	150 Xor W9, W8, W23
	151 NotImplemented "Instruction EXTR not yet implemented."
	152 Add W21, W9, W8
	153 NotImplemented "Instruction EXTR not yet implemented."
	154 Move W8, [X20]
	155 Add W8, W21, W8
	156 Add W21, W8, 0x8000
	157 Move X0, [X19]
	158 Move W25, [X20]
	159 Move W8, [X0+224]
	160 Compare W8, 0
	161 JumpIfNotEqual {163}
	162 Call 0x1C17DFC
	163 Move W8, [X22]
	164 Add W21, W25, W21
	165 Compare W8, 0
	166 JumpIfNotEqual {172}
	167 Move X0, 0xDA9000
	168 Move X0, [X0+2520]
	169 Call 0x1C17CF4
	170 Move W8, 1
	171 Move [X22], W8
	172 Move X0, [X19]
	173 Or X24, X24, 7
	174 Xor W23, W21, W23
	175 Move W8, [X0+224]
	176 Compare W8, 0
	177 JumpIfNotEqual {179}
	178 Call 0x1C17DFC
	179 NotImplemented "Instruction EXTR not yet implemented."
	180 Add W8, W23, W8
	181 Xor W9, W8, W23
	182 NotImplemented "Instruction EXTR not yet implemented."
	183 Add W21, W9, W8
	184 NotImplemented "Instruction EXTR not yet implemented."
	185 NotImplemented "Instruction LDRH not yet implemented."
	186 Add W8, W21, W8
	187 Add W21, W8, 0x800000
	188 Move X0, [X19]
	189 Move W25, [X20]
	190 Move W8, [X0+224]
	191 Compare W8, 0
	192 JumpIfNotEqual {194}
	193 Call 0x1C17DFC
	194 Move W8, [X22]
	195 Add W21, W25, W21
	196 Compare W8, 0
	197 JumpIfNotEqual {203}
	198 Move X0, 0xDA9000
	199 Move X0, [X0+2520]
	200 Call 0x1C17CF4
	201 Move W8, 1
	202 Move [X22], W8
	203 Move X0, [X19]
	204 Or X24, X24, 7
	205 Xor W23, W21, W23
	206 Move W8, [X0+224]
	207 Compare W8, 0
	208 JumpIfNotEqual {210}
	209 Call 0x1C17DFC
	210 NotImplemented "Instruction EXTR not yet implemented."
	211 Add W8, W23, W8
	212 Xor W9, W8, W23
	213 NotImplemented "Instruction EXTR not yet implemented."
	214 Add W21, W9, W8
	215 NotImplemented "Instruction EXTR not yet implemented."
	216 Add X8, X20, X24
	217 Move W9, [X8+2]
	218 NotImplemented "Instruction LDRH not yet implemented."
	219 NotImplemented "Instruction BFM not yet implemented."
	220 Xor W9, W21, 0x80000000
	221 Add W21, W9, W8
	222 Move X0, [X19]
	223 Move W8, [X0+224]
	224 Compare W8, 0
	225 JumpIfNotEqual {227}
	226 Call 0x1C17DFC
	227 Move W8, [X22]
	228 Compare W8, 0
	229 JumpIfNotEqual {235}
	230 Move X0, 0xDA9000
	231 Move X0, [X0+2520]
	232 Call 0x1C17CF4
	233 Move W8, 1
	234 Move [X22], W8
	235 Move X0, [X19]
	236 Xor W20, W23, W21
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfEqual {241}
	240 Move W8, W31
	241 Call 0x1C17DFC
	242 Move W8, [X22]
	243 NotImplemented "Instruction CMP not yet implemented."
	244 NotImplemented "Instruction CSET not yet implemented."
	245 NotImplemented "Instruction EXTR not yet implemented."
	246 Add W9, W20, W9
	247 Xor W10, W9, W20
	248 NotImplemented "Instruction EXTR not yet implemented."
	249 Add W20, W10, W9
	250 NotImplemented "Instruction EXTR not yet implemented."
	251 Compare W8, 0
	252 JumpIfEqual {258}
	253 Move X0, 0xDA9000
	254 Move X0, [X0+2520]
	255 Call 0x1C17CF4
	256 Move W8, 1
	257 Move [X22], W8
	258 Move X0, [X19]
	259 Xor W19, W21, W20
	260 Move W8, [X0+224]
	261 Compare W8, 0
	262 JumpIfNotEqual {264}
	263 Call 0x1C17DFC
	264 NotImplemented "Instruction EXTR not yet implemented."
	265 Add W8, W19, W8
	266 Xor W9, W8, W19
	267 Move X20, [X31+80]
	268 Move X19, [X31+88]
	269 Move X22, [X31+64]
	270 Move X21, [X31+72]
	271 Move X24, [X31+48]
	272 Move X23, [X31+56]
	273 Move X26, [X31+32]
	274 Move X25, [X31+40]
	275 Move X28, [X31+16]
	276 Move X27, [X31+24]
	277 NotImplemented "Instruction EXTR not yet implemented."
	278 Add W8, W9, W8
	279 Xor W0, W8, W9
	280 Move X29, [X31+96]
	281 Move X30, [X31+104]
	282 Return X0

Method: System.Void Block(ref System.UInt32 rp0, ref System.UInt32 rp1)

Disassembly:
	0x0337F96C CBZ W23, 0x337F98C
	0x0337F970 MOV X1, X22
	0x0337F974 MOV X2, X19
	0x0337F978 MOV X3, X21
	0x0337F97C MOV X4, X20
	0x0337F980 MOV X5, X31
	0x0337F984 BL 0x333DB14
	0x0337F988 B 0x337F9A8
	0x0337F98C MOVZ W5, 0x1
	0x0337F990 MOV X1, X22
	0x0337F994 MOV X2, X19
	0x0337F998 MOV X3, X21
	0x0337F99C MOV X4, X20
	0x0337F9A0 MOV X6, X31
	0x0337F9A4 BL 0x333DB9C
	0x0337F9A8 MOV W0, W19
	0x0337F9AC LDP X20, X19, [X31 + 0x30]
	0x0337F9B0 LDP X22, X21, [X31 + 0x20]
	0x0337F9B4 LDP X24, X23, [X31 + 0x10]
	0x0337F9B8 LDR X30, [X31], #0x40
	0x0337F9BC RET
	0x0337F9C0 BL 0x1C16F20
	0x0337F9C4 STR X30, [X31 - 0x40]!
	0x0337F9C8 STP X24, X23, [X31 + 0x10]
	0x0337F9CC STP X22, X21, [X31 + 0x20]
	0x0337F9D0 STP X20, X19, [X31 + 0x30]
	0x0337F9D4 ADRP X24, 0x105D000
	0x0337F9D8 LDRB W8, [X24 + 0xFA6]
	0x0337F9DC MOV W23, W4
	0x0337F9E0 MOV X19, X3
	0x0337F9E4 MOV X20, X2
	0x0337F9E8 MOV X21, X1
	0x0337F9EC MOV X22, X0
	0x0337F9F0 TBNZ X8, 0x0, 0x337FA2C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x105E000
	007 Move X21, 0xDA9000
	008 Move W8, [X22+3986]
	009 Move X21, [X21+2520]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDA9000
	017 Move X0, [X0+2520]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3986], W8
	021 Move X0, [X21]
	022 Move W22, [X20]
	023 Move W8, [X19]
	024 Move W9, [X0+224]
	025 Xor W21, W8, W22
	026 Compare W9, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 NotImplemented "Instruction EXTR not yet implemented."
	030 Add W8, W21, W8
	031 Xor W9, W8, W21
	032 NotImplemented "Instruction EXTR not yet implemented."
	033 Add W8, W9, W8
	034 NotImplemented "Instruction EXTR not yet implemented."
	035 Move [X20], W8
	036 Move [X19], W9
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Return 

Method: System.UInt32 _rotl(System.UInt32 value, System.Int32 shift)

Disassembly:
	0x0337F9F4 ADRP X0, 0xDA2000
	0x0337F9F8 LDR X0, [X0 + 0xFD0]
	0x0337F9FC BL 0x1C16CF4

ISIL:
	001 Subtract W8, W31, W1
	002 NotImplemented "Instruction RORV not yet implemented."
	003 Return X0

Method: System.UInt64 get_DefaultSeed()

Disassembly:
	0x0337FA00 ADRP X0, 0xD76000
	0x0337FA04 LDR X0, [X0 + 0xC48]
	0x0337FA08 BL 0x1C16CF4
	0x0337FA0C ADRP X0, 0xDAB000
	0x0337FA10 LDR X0, [X0 + 0xF68]
	0x0337FA14 BL 0x1C16CF4
	0x0337FA18 ADRP X0, 0xDA3000
	0x0337FA1C LDR X0, [X0 + 0x28]
	0x0337FA20 BL 0x1C16CF4
	0x0337FA24 MOVZ W8, 0x1
	0x0337FA28 STRB W8, [X24 + 0xFA6]
	0x0337FA2C CBZ W19, 0x337FA8C
	0x0337FA30 CMP W23, 0x5
	0x0337FA34 B.HI 0x337FBDC
	0x0337FA38 ADRP X9, 0xFFFFFFFFFD817000
	0x0337FA3C MOV W8, W23
	0x0337FA40 ADD X9, X9, 0x7F5
	0x0337FA44 ADR X10, 0x10
	0x0337FA48 LDRB W11, [X9, X8, LSL]
	0x0337FA4C ADD X10, X10, X11, 0x2, LSL
	0x0337FA50 BR X10
	0x0337FA54 ADRP X8, 0xD76000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x105E000
	005 Move X19, 0xDA9000
	006 Move W8, [X20+3987]
	007 Move X19, [X19+2520]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDA9000
	013 Move X0, [X0+2520]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3987], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.UInt64 GenerateSeed()

Disassembly:
	0x0337FA58 LDR X8, [X8 + 0xC48]
	0x0337FA5C LDR X0, [X8]
	0x0337FA60 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move W0, 0x7310
	002 NotImplemented "Instruction MOVK not yet implemented."
	003 Return X0

Method: System.Void .cctor()

Disassembly:
	0x0337FA64 CBNZ W8, 0x337FA6C
	0x0337FA68 BL 0x1C16DFC
	0x0337FA6C MOV X0, X31
	0x0337FA70 BL 0x33387A0
	0x0337FA74 CBZ X0, 0x337FBD8
	0x0337FA78 LDR X8, [X0]
	0x0337FA7C LDP X9, X1, [X8 + 0x1F8]
	0x0337FA80 BLR X9
	0x0337FA84 MOV X4, X0
	0x0337FA88 B 0x337FB0C
	0x0337FA8C MOV W0, W23
	0x0337FA90 MOV X1, X31
	0x0337FA94 BL 0x3225BBC
	0x0337FA98 LDP X20, X19, [X31 + 0x30]
	0x0337FA9C LDP X22, X21, [X31 + 0x20]
	0x0337FAA0 LDP X24, X23, [X31 + 0x10]
	0x0337FAA4 MOVZ W0, 0x1
	0x0337FAA8 LDR X30, [X31], #0x40
	0x0337FAAC RET
	0x0337FAB0 ADRP X8, 0xD76000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x105E000
	005 Move X20, 0xDA9000
	006 Move W8, [X19+3988]
	007 Move X20, [X20+2520]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDA9000
	013 Move X0, [X0+2520]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3988], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move W9, 0x7310
	021 NotImplemented "Instruction MOVK not yet implemented."
	022 Move X8, [X8+184]
	023 Move [X8], X9
	024 Move X30, [X31+32]
	025 Return 

