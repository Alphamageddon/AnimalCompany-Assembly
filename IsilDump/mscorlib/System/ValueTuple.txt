Type: System.ValueTuple

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x0339C890 CBZ X0, 0x339C914
	0x0339C894 LDR W1, [X19 + 0x10]
	0x0339C898 MOV X2, X31
	0x0339C89C MOV X20, X0
	0x0339C8A0 BL 0x3233E30
	0x0339C8A4 MOVZ W1, 0x2E
	0x0339C8A8 MOV X0, X20
	0x0339C8AC MOV X2, X31
	0x0339C8B0 BL 0x3233D30
	0x0339C8B4 LDR W1, [X19 + 0x14]
	0x0339C8B8 MOV X0, X20
	0x0339C8BC MOV X2, X31
	0x0339C8C0 BL 0x3233E30
	0x0339C8C4 MOVZ W1, 0x2E
	0x0339C8C8 MOV X0, X20
	0x0339C8CC MOV X2, X31
	0x0339C8D0 BL 0x3233D30
	0x0339C8D4 LDR W1, [X19 + 0x18]
	0x0339C8D8 MOV X0, X20
	0x0339C8DC MOV X2, X31
	0x0339C8E0 BL 0x3233E30
	0x0339C8E4 MOVZ W1, 0x2E
	0x0339C8E8 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1042000
	005 Move W8, [X20+244]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD90000
	012 Move X0, [X0+1488]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+244], W8
	016 Compare X19, 0
	017 JumpIfEqual {24}
	018 Move X8, 0xD90000
	019 Move X8, [X8+1488]
	020 Move X9, [X19]
	021 Move X8, [X8]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CSET not yet implemented."
	024 Move W0, W31
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Boolean Equals(System.ValueTuple other)

Disassembly:
	0x0339C8EC MOV X2, X31
	0x0339C8F0 BL 0x3233D30

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean System.Collections.IStructuralEquatable.Equals(System.Object other, System.Collections.IEqualityComparer comparer)

Disassembly:
	0x0339C8F4 LDR W1, [X19 + 0x1C]
	0x0339C8F8 MOV X0, X20
	0x0339C8FC MOV X2, X31
	0x0339C900 BL 0x3233E30
	0x0339C904 MOV X0, X20
	0x0339C908 LDP X20, X19, [X31 + 0x10]
	0x0339C90C LDR X30, [X31], #0x20
	0x0339C910 RET
	0x0339C914 BL 0x1C16F20
	0x0339C918 ADRP X0, 0xD8F000
	0x0339C91C LDR X0, [X0 + 0x640]
	0x0339C920 BL 0x1C16D08
	0x0339C924 MOV X19, X0
	0x0339C928 ADRP X0, 0xD59000
	0x0339C92C LDR X0, [X0 + 0x4B0]
	0x0339C930 BL 0x1C16D08
	0x0339C934 MOV X20, X0
	0x0339C938 ADRP X0, 0xD68000
	0x0339C93C LDR X0, [X0 + 0x338]
	0x0339C940 B 0x339C998
	0x0339C944 ADRP X0, 0xD8F000
	0x0339C948 LDR X0, [X0 + 0x640]
	0x0339C94C BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1042000
	005 Move W8, [X20+245]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD90000
	012 Move X0, [X0+1488]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+245], W8
	016 Compare X19, 0
	017 JumpIfEqual {24}
	018 Move X8, 0xD90000
	019 Move X8, [X8+1488]
	020 Move X9, [X19]
	021 Move X8, [X8]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CSET not yet implemented."
	024 Move W0, W31
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Int32 System.IComparable.CompareTo(System.Object other)

Disassembly:
	0x0339C950 MOV X19, X0
	0x0339C954 ADRP X0, 0xD59000
	0x0339C958 LDR X0, [X0 + 0x4B0]
	0x0339C95C BL 0x1C16D08
	0x0339C960 MOV X20, X0
	0x0339C964 ADRP X0, 0xD68000
	0x0339C968 LDR X0, [X0 + 0x118]
	0x0339C96C B 0x339C998
	0x0339C970 ADRP X0, 0xD8F000
	0x0339C974 LDR X0, [X0 + 0x640]
	0x0339C978 BL 0x1C16D08
	0x0339C97C MOV X19, X0
	0x0339C980 ADRP X0, 0xD59000
	0x0339C984 LDR X0, [X0 + 0x4B0]
	0x0339C988 BL 0x1C16D08
	0x0339C98C MOV X20, X0
	0x0339C990 ADRP X0, 0xD70000
	0x0339C994 LDR X0, [X0 + 0x428]
	0x0339C998 BL 0x1C16D08
	0x0339C99C MOV X2, X0
	0x0339C9A0 MOV X0, X19
	0x0339C9A4 MOV X1, X20
	0x0339C9A8 MOV X3, X31
	0x0339C9AC BL 0x320A264
	0x0339C9B0 MOV X19, X0
	0x0339C9B4 ADRP X0, 0xD5F000
	0x0339C9B8 LDR X0, [X0 + 0x578]
	0x0339C9BC BL 0x1C16D08
	0x0339C9C0 BL 0x1C16F10
	0x0339C9C4 MOV X20, X0
	0x0339C9C8 ADRP X0, 0xD8F000
	0x0339C9CC LDR X0, [X0 + 0x648]
	0x0339C9D0 BL 0x1C16D08
	0x0339C9D4 MOV X2, X0
	0x0339C9D8 MOV X0, X20
	0x0339C9DC MOV X1, X19
	0x0339C9E0 MOV X3, X31
	0x0339C9E4 BL 0x330E16C
	0x0339C9E8 ADRP X0, 0xD8F000
	0x0339C9EC LDR X0, [X0 + 0x650]
	0x0339C9F0 BL 0x1C16D08
	0x0339C9F4 MOV X1, X0
	0x0339C9F8 MOV X0, X20
	0x0339C9FC BL 0x1C16DEC
	0x0339CA00 LDR W8, [X0 + 0x18]
	0x0339CA04 MOV X4, X3
	0x0339CA08 ADDS W31, W8, 0x1
	0x0339CA0C B.EQ 0x339CA24
	0x0339CA10 LDR W8, [X0 + 0x1C]
	0x0339CA14 ADDS W31, W8, 0x1
	0x0339CA18 MOVZ W8, 0x3
	0x0339CA1C CINC W3, W8, NE
	0x0339CA20 B 0x339CA2C
	0x0339CA24 MOVZ W3, 0x2
	0x0339CA28 B 0x339CA2C
	0x0339CA2C STR X30, [X31 - 0x40]!
	0x0339CA30 STP X24, X23, [X31 + 0x10]
	0x0339CA34 STP X22, X21, [X31 + 0x20]
	0x0339CA38 STP X20, X19, [X31 + 0x30]
	0x0339CA3C ADRP X24, 0x1041000
	0x0339CA40 LDRB W8, [X24 + 0x105]
	0x0339CA44 MOV X19, X4
	0x0339CA48 MOV W22, W3
	0x0339CA4C MOV X20, X2
	0x0339CA50 MOV X21, X1
	0x0339CA54 MOV X23, X0
	0x0339CA58 TBNZ X8, 0x0, 0x339CA70
	0x0339CA5C ADRP X0, 0xD86000
	0x0339CA60 LDR X0, [X0 + 0x588]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1042000
	007 Move W8, [X21+246]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD90000
	015 Move X0, [X0+1488]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+246], W8
	019 Compare X20, 0
	020 JumpIfEqual {27}
	021 Move X8, 0xD90000
	022 Move X8, [X8+1488]
	023 Move X9, [X20]
	024 Move X8, [X8]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W0, W31
	027 Move W0, 1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X30, [X31+16]
	031 Move X21, [X31+24]
	032 Add X31, X31, 48
	033 Return X0
	034 Move W8, [X19]
	035 Move X0, 0xD90000
	036 Move [X31+8], W8
	037 Move X0, [X0+1488]
	038 Call 0x1C17D08
	039 Add X1, X31, 8
	040 Call 0x1C17E04
	041 Move X1, X31
	042 Call "il2cpp_vm_object_is_inst", X0
	043 Move X19, X0
	044 Call 0x19913C0
	045 Move X8, [X19]
	046 Move X0, X19
	047 Move X9, [X8+360]
	048 Move X1, [X8+368]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X19, X0
	051 Move X0, 0xD82000
	052 Move X0, [X0+2336]
	053 Call 0x1C17D08
	054 Move X1, X19
	055 Move X2, X31
	056 Call SR.Format, X0, X1
	057 Move X19, X0
	058 Move X0, 0xD60000
	059 Move X0, [X0+1400]
	060 Call 0x1C17D08
	061 Call 0x1C17F10
	062 Move X20, X0
	063 Move X0, 0xD82000
	064 Move X0, [X0+2344]
	065 Call 0x1C17D08
	066 Move X2, X0
	067 Move X0, X20
	068 Move X1, X19
	069 Move X3, X31
	070 Call ArgumentException..ctor, X0, X1, X2
	071 Move X0, 0xD90000
	072 Move X0, [X0+1496]
	073 Call 0x1C17D08
	074 Move X1, X0
	075 Move X0, X20
	076 Call 0x1C17DEC

Method: System.Int32 CompareTo(System.ValueTuple other)

Disassembly:
	0x0339CA64 BL 0x1C16CF4
	0x0339CA68 MOVZ W8, 0x1

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Int32 System.Collections.IStructuralComparable.CompareTo(System.Object other, System.Collections.IComparer comparer)

Disassembly:
	0x0339CA6C STRB W8, [X24 + 0x105]
	0x0339CA70 CMP W22, 0x1
	0x0339CA74 B.EQ 0x339CA84
	0x0339CA78 CBNZ W22, 0x339CAB8
	0x0339CA7C STR W31, [X19]
	0x0339CA80 B 0x339CB38
	0x0339CA84 ADD X0, X23, 0x10
	0x0339CA88 MOV X1, X21
	0x0339CA8C MOV X2, X20
	0x0339CA90 MOV X3, X19
	0x0339CA94 LDP X20, X19, [X31 + 0x30]
	0x0339CA98 LDP X22, X21, [X31 + 0x20]
	0x0339CA9C LDP X24, X23, [X31 + 0x10]
	0x0339CAA0 MOV X4, X31
	0x0339CAA4 MOV X5, X31
	0x0339CAA8 MOV X6, X31
	0x0339CAAC MOV X7, X31
	0x0339CAB0 LDR X30, [X31], #0x40
	0x0339CAB4 B 0x337B970
	0x0339CAB8 MOV X0, X23
	0x0339CABC MOV W1, W22
	0x0339CAC0 BL 0x339C7B8
	0x0339CAC4 CBZ X0, 0x339CB50
	0x0339CAC8 MOV X1, X31
	0x0339CACC MOV X22, X0
	0x0339CAD0 BL 0x323260C
	0x0339CAD4 CMP W0, W20
	0x0339CAD8 B.LE 0x339CAF4
	0x0339CADC MOV X0, X22
	0x0339CAE0 MOV X1, X31
	0x0339CAE4 BL 0x3235B68
	0x0339CAE8 MOV W0, W31
	0x0339CAEC STR W31, [X19]
	0x0339CAF0 B 0x339CB3C
	0x0339CAF4 MOV X0, X22
	0x0339CAF8 MOV X1, X31
	0x0339CAFC BL 0x323260C
	0x0339CB00 MOV W4, W0
	0x0339CB04 MOV X0, X22
	0x0339CB08 MOV W1, W31
	0x0339CB0C MOV X2, X21
	0x0339CB10 MOV X3, X20
	0x0339CB14 MOV X5, X31
	0x0339CB18 BL 0x32328F4
	0x0339CB1C MOV X0, X22
	0x0339CB20 MOV X1, X31
	0x0339CB24 BL 0x3235B68
	0x0339CB28 MOV X0, X22
	0x0339CB2C MOV X1, X31
	0x0339CB30 BL 0x323260C
	0x0339CB34 STR W0, [X19]
	0x0339CB38 MOVZ W0, 0x1
	0x0339CB3C LDP X20, X19, [X31 + 0x30]
	0x0339CB40 LDP X22, X21, [X31 + 0x20]
	0x0339CB44 LDP X24, X23, [X31 + 0x10]
	0x0339CB48 LDR X30, [X31], #0x40
	0x0339CB4C RET
	0x0339CB50 BL 0x1C16F20
	0x0339CB54 LDR W8, [X0 + 0x18]
	0x0339CB58 MOV X4, X3
	0x0339CB5C ADDS W31, W8, 0x1
	0x0339CB60 B.EQ 0x339CB78
	0x0339CB64 LDR W8, [X0 + 0x1C]
	0x0339CB68 ADDS W31, W8, 0x1
	0x0339CB6C MOVZ W8, 0x3
	0x0339CB70 CINC W3, W8, NE
	0x0339CB74 B 0x339CA2C
	0x0339CB78 MOVZ W3, 0x2
	0x0339CB7C B 0x339CA2C

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1042000
	007 Move W8, [X21+247]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD90000
	015 Move X0, [X0+1488]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+247], W8
	019 Compare X20, 0
	020 JumpIfEqual {27}
	021 Move X8, 0xD90000
	022 Move X8, [X8+1488]
	023 Move X9, [X20]
	024 Move X8, [X8]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W0, W31
	027 Move W0, 1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X30, [X31+16]
	031 Move X21, [X31+24]
	032 Add X31, X31, 48
	033 Return X0
	034 Move W8, [X19]
	035 Move X0, 0xD90000
	036 Move [X31+8], W8
	037 Move X0, [X0+1488]
	038 Call 0x1C17D08
	039 Add X1, X31, 8
	040 Call 0x1C17E04
	041 Move X1, X31
	042 Call "il2cpp_vm_object_is_inst", X0
	043 Move X19, X0
	044 Call 0x19913C0
	045 Move X8, [X19]
	046 Move X0, X19
	047 Move X9, [X8+360]
	048 Move X1, [X8+368]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X19, X0
	051 Move X0, 0xD82000
	052 Move X0, [X0+2336]
	053 Call 0x1C17D08
	054 Move X1, X19
	055 Move X2, X31
	056 Call SR.Format, X0, X1
	057 Move X19, X0
	058 Move X0, 0xD60000
	059 Move X0, [X0+1400]
	060 Call 0x1C17D08
	061 Call 0x1C17F10
	062 Move X20, X0
	063 Move X0, 0xD82000
	064 Move X0, [X0+2344]
	065 Call 0x1C17D08
	066 Move X2, X0
	067 Move X0, X20
	068 Move X1, X19
	069 Move X3, X31
	070 Call ArgumentException..ctor, X0, X1, X2
	071 Move X0, 0xD90000
	072 Move X0, [X0+1504]
	073 Call 0x1C17D08
	074 Move X1, X0
	075 Move X0, X20
	076 Call 0x1C17DEC

Method: System.Int32 GetHashCode()

Disassembly:
	0x0339CB80 SUB X31, X31, 0x70
	0x0339CB84 STP X29, X30, [X31 + 0x10]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Int32 System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer comparer)

Disassembly:
	0x0339CB88 STP X28, X27, [X31 + 0x20]
	0x0339CB8C STP X26, X25, [X31 + 0x30]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Int32 System.IValueTupleInternal.GetHashCode(System.Collections.IEqualityComparer comparer)

Disassembly:
	0x0339CB90 STP X24, X23, [X31 + 0x40]
	0x0339CB94 STP X22, X21, [X31 + 0x50]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.String ToString()

Disassembly:
	0x0339CB98 STP X20, X19, [X31 + 0x60]
	0x0339CB9C ADRP X22, 0x1041000
	0x0339CBA0 ADRP X28, 0xD8E000
	0x0339CBA4 LDRB W8, [X22 + 0x106]
	0x0339CBA8 LDR X28, [X28 + 0xD78]
	0x0339CBAC MOV W19, W2
	0x0339CBB0 MOV X20, X1
	0x0339CBB4 MOV X21, X0
	0x0339CBB8 TBNZ X8, 0x0, 0x339CC18
	0x0339CBBC ADRP X0, 0xD8E000
	0x0339CBC0 LDR X0, [X0 + 0xD78]
	0x0339CBC4 BL 0x1C16CF4
	0x0339CBC8 ADRP X0, 0xD8B000
	0x0339CBCC LDR X0, [X0 + 0x7E8]
	0x0339CBD0 BL 0x1C16CF4
	0x0339CBD4 ADRP X0, 0xD8A000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1042000
	005 Move X20, 0xD81000
	006 Move W8, [X19+248]
	007 Move X20, [X20+2600]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD81000
	013 Move X0, [X0+2600]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+248], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return X0

Method: System.String System.IValueTupleInternal.ToStringEnd()

Disassembly:
	0x0339CBD8 LDR X0, [X0 + 0xD90]
	0x0339CBDC BL 0x1C16CF4
	0x0339CBE0 ADRP X0, 0xD5F000
	0x0339CBE4 LDR X0, [X0 + 0x7C0]
	0x0339CBE8 BL 0x1C16CF4
	0x0339CBEC ADRP X0, 0xD8B000
	0x0339CBF0 LDR X0, [X0 + 0x348]
	0x0339CBF4 BL 0x1C16CF4
	0x0339CBF8 ADRP X0, 0xD8F000
	0x0339CBFC LDR X0, [X0 + 0x5F8]
	0x0339CC00 BL 0x1C16CF4
	0x0339CC04 ADRP X0, 0xD8F000
	0x0339CC08 LDR X0, [X0 + 0x600]
	0x0339CC0C BL 0x1C16CF4
	0x0339CC10 MOVZ W8, 0x1
	0x0339CC14 STRB W8, [X22 + 0x106]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1042000
	005 Move X20, 0xD59000
	006 Move W8, [X19+249]
	007 Move X20, [X20+1544]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD59000
	013 Move X0, [X0+1544]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+249], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return X0

Method: System.Int32 System.Runtime.CompilerServices.ITuple.get_Length()

Disassembly:
	0x0339CC18 LDR X3, [X28]
	0x0339CC1C MOVZ W2, 0x2E

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Int32 CombineHashCodes(System.Int32 h1, System.Int32 h2)

Disassembly:
	0x0339CC20 MOV X0, X21
	0x0339CC24 MOV X1, X20
	0x0339CC28 STP X31, X31, [X31]
	0x0339CC2C BL 0x338BFD4
	0x0339CC30 TBNZ X0, 0x1F, 0x339CD04
	0x0339CC34 MOV W23, W0
	0x0339CC38 CMP W0, W20
	0x0339CC3C B.CS 0x339CFC8
	0x0339CC40 ADRP X25, 0xD8B000
	0x0339CC44 LDR X25, [X25 + 0x7E8]
	0x0339CC48 ADD W26, W23, 0x1
	0x0339CC4C LDR X8, [X25]
	0x0339CC50 LDR X0, [X8 + 0x20]
	0x0339CC54 LDRB W8, [X0 + 0x135]
	0x0339CC58 TBNZ X8, 0x0, 0x339CC60
	0x0339CC5C BL 0x1C5C684
	0x0339CC60 LDR X3, [X28]
	0x0339CC64 SUB W24, W20, W26
	0x0339CC68 ADD X22, X21, W26, 0x1, SXTW
	0x0339CC6C MOVZ W2, 0x2E
	0x0339CC70 MOV X0, X22
	0x0339CC74 MOV X1, X24
	0x0339CC78 BL 0x338BFD4
	0x0339CC7C ADDS W31, W0, 0x1
	0x0339CC80 B.EQ 0x339CD64
	0x0339CC84 ADD W27, W0, W26
	0x0339CC88 ADD W26, W27, 0x1
	0x0339CC8C CMP W26, W20
	0x0339CC90 B.HI 0x339CFC8
	0x0339CC94 LDR X8, [X25]
	0x0339CC98 LDR X0, [X8 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1042000
	007 Move X21, 0xD82000
	008 Move W8, [X22+250]
	009 Move X21, [X21+3816]
	010 Move W19, W1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD82000
	017 Move X0, [X0+3816]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+250], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X21]
	027 Move X8, [X0+184]
	028 Move W1, W20
	029 Move X2, X31
	030 Move W0, [X8]
	031 Call HashHelpers.Combine, X0, X1
	032 Move W1, W19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X2, X31
	038 Move X30, [X31+48]
	039 Call HashHelpers.Combine, X0, X1
	040 Return X0

Method: System.Int32 CombineHashCodes(System.Int32 h1, System.Int32 h2, System.Int32 h3)

Disassembly:
	0x0339CC9C LDRB W8, [X0 + 0x135]
	0x0339CCA0 TBNZ X8, 0x0, 0x339CCA8
	0x0339CCA4 BL 0x1C5C684
	0x0339CCA8 LDR X3, [X28]
	0x0339CCAC SUB W1, W20, W26
	0x0339CCB0 ADD X0, X21, W26, 0x1, SXTW
	0x0339CCB4 MOVZ W2, 0x2E
	0x0339CCB8 BL 0x338BFD4
	0x0339CCBC ADDS W31, W0, 0x1
	0x0339CCC0 B.EQ 0x339CD68
	0x0339CCC4 ADD W26, W0, W26
	0x0339CCC8 ADD W29, W26, 0x1
	0x0339CCCC CMP W29, W20
	0x0339CCD0 B.HI 0x339CFC8
	0x0339CCD4 LDR X8, [X25]
	0x0339CCD8 LDR X0, [X8 + 0x20]
	0x0339CCDC LDRB W8, [X0 + 0x135]
	0x0339CCE0 TBNZ X8, 0x0, 0x339CCE8
	0x0339CCE4 BL 0x1C5C684
	0x0339CCE8 LDR X3, [X28]
	0x0339CCEC SUB W1, W20, W29
	0x0339CCF0 ADD X0, X21, W29, 0x1, SXTW
	0x0339CCF4 MOVZ W2, 0x2E
	0x0339CCF8 BL 0x338BFD4
	0x0339CCFC ADDS W31, W0, 0x1
	0x0339CD00 B.EQ 0x339CD6C
	0x0339CD04 TBZ X19, 0x0, 0x339CFA0
	0x0339CD08 ADRP X0, 0xD5F000
	0x0339CD0C LDR X0, [X0 + 0x578]
	0x0339CD10 BL 0x1C16D08
	0x0339CD14 BL 0x1C16F10
	0x0339CD18 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1042000
	008 Move X22, 0xD82000
	009 Move W8, [X23+251]
	010 Move X22, [X22+3816]
	011 Move W19, W2
	012 Move W20, W1
	013 Move W21, W0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xD82000
	019 Move X0, [X0+3816]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+251], W8
	023 Move W0, W21
	024 Move W1, W20
	025 Call ValueTuple.CombineHashCodes, X0, X1
	026 Move X8, [X22]
	027 Move W20, W0
	028 Move W9, [X8+224]
	029 Compare W9, 0
	030 JumpIfNotEqual {33}
	031 Move X0, X8
	032 Call 0x1C17DFC
	033 Move W0, W20
	034 Move W1, W19
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X2, X31
	040 Move X30, [X31+48]
	041 Move X23, [X31+56]
	042 Call HashHelpers.Combine, X0, X1
	043 Return X0

Method: System.Int32 CombineHashCodes(System.Int32 h1, System.Int32 h2, System.Int32 h3, System.Int32 h4)

Disassembly:
	0x0339CD1C ADRP X0, 0xD8F000
	0x0339CD20 LDR X0, [X0 + 0x658]
	0x0339CD24 BL 0x1C16D08
	0x0339CD28 MOV X20, X0
	0x0339CD2C ADRP X0, 0xD8B000
	0x0339CD30 LDR X0, [X0 + 0x348]
	0x0339CD34 BL 0x1C16D08
	0x0339CD38 MOV X2, X0
	0x0339CD3C MOV X0, X19
	0x0339CD40 MOV X1, X20
	0x0339CD44 MOV X3, X31
	0x0339CD48 BL 0x330E16C
	0x0339CD4C ADRP X0, 0xD8F000
	0x0339CD50 LDR X0, [X0 + 0x660]
	0x0339CD54 BL 0x1C16D08
	0x0339CD58 MOV X1, X0
	0x0339CD5C MOV X0, X19
	0x0339CD60 BL 0x1C16DEC
	0x0339CD64 MOVN W27, 0x0
	0x0339CD68 MOVN W26, 0x0
	0x0339CD6C CMP W23, W20
	0x0339CD70 B.HI 0x339CFC8
	0x0339CD74 ADRP X28, 0xD8A000
	0x0339CD78 LDR X28, [X28 + 0xD90]
	0x0339CD7C LDR X8, [X28]
	0x0339CD80 LDR X0, [X8 + 0x20]
	0x0339CD84 LDRB W8, [X0 + 0x135]
	0x0339CD88 TBNZ X8, 0x0, 0x339CD90
	0x0339CD8C BL 0x1C5C684
	0x0339CD90 ADRP X29, 0xD8B000
	0x0339CD94 LDR X29, [X29 + 0x348]
	0x0339CD98 MOV W1, W23
	0x0339CD9C AND W3, W19, 0x1
	0x0339CDA0 ADD X4, X31, 0x0
	0x0339CDA4 LDR X2, [X29]
	0x0339CDA8 MOV X0, X21

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1042000
	009 Move X23, 0xD82000
	010 Move W8, [X24+252]
	011 Move X23, [X23+3816]
	012 Move W19, W3
	013 Move W20, W2
	014 Move W21, W1
	015 Move W22, W0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xD82000
	021 Move X0, [X0+3816]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+252], W8
	025 Move W0, W22
	026 Move W1, W21
	027 Move W2, W20
	028 Call ValueTuple.CombineHashCodes, X0, X1, X2
	029 Move X8, [X23]
	030 Move W20, W0
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {36}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move W0, W20
	037 Move W1, W19
	038 Move X20, [X31+48]
	039 Move X19, [X31+56]
	040 Move X22, [X31+32]
	041 Move X21, [X31+40]
	042 Move X24, [X31+16]
	043 Move X23, [X31+24]
	044 Move X2, X31
	045 Move X30, [X31+64]
	046 Call HashHelpers.Combine, X0, X1
	047 Return X0

Method: System.Int32 CombineHashCodes(System.Int32 h1, System.Int32 h2, System.Int32 h3, System.Int32 h4, System.Int32 h5)

Disassembly:
	0x0339CDAC BL 0x339CFCC
	0x0339CDB0 TBZ X0, 0x0, 0x339CFA0
	0x0339CDB4 ADDS W31, W27, 0x1
	0x0339CDB8 B.EQ 0x339CED4
	0x0339CDBC ORN W8, W31, W23, 0x0
	0x0339CDC0 ADD W23, W27, W8
	0x0339CDC4 CMP W24, W23
	0x0339CDC8 B.CC 0x339CFC8
	0x0339CDCC LDR X8, [X28]
	0x0339CDD0 LDR X0, [X8 + 0x20]
	0x0339CDD4 LDRB W8, [X0 + 0x135]
	0x0339CDD8 TBNZ X8, 0x0, 0x339CDE0
	0x0339CDDC BL 0x1C5C684
	0x0339CDE0 LDR X2, [X29]
	0x0339CDE4 MOV W1, W23
	0x0339CDE8 AND W3, W19, 0x1
	0x0339CDEC ADD X4, X31, 0xC
	0x0339CDF0 MOV X0, X22
	0x0339CDF4 BL 0x339CFCC
	0x0339CDF8 TBZ X0, 0x0, 0x339CFA0
	0x0339CDFC ADDS W31, W26, 0x1
	0x0339CE00 ADD W22, W27, 0x1
	0x0339CE04 B.EQ 0x339CF30
	0x0339CE08 CMP W27, W20
	0x0339CE0C B.CS 0x339CFC8
	0x0339CE10 ORN W8, W31, W27, 0x0
	0x0339CE14 ADD W23, W26, W8
	0x0339CE18 SUB W8, W20, W22
	0x0339CE1C CMP W8, W23
	0x0339CE20 B.CC 0x339CFC8
	0x0339CE24 LDR X8, [X28]
	0x0339CE28 LDR X0, [X8 + 0x20]
	0x0339CE2C LDRB W8, [X0 + 0x135]
	0x0339CE30 TBNZ X8, 0x0, 0x339CE38
	0x0339CE34 BL 0x1C5C684
	0x0339CE38 ADRP X8, 0xD8F000
	0x0339CE3C LDR X8, [X8 + 0x5F8]
	0x0339CE40 ADD X0, X21, W22, 0x1, SXTW

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x1042000
	010 Move X24, 0xD82000
	011 Move W8, [X25+253]
	012 Move X24, [X24+3816]
	013 Move W19, W4
	014 Move W20, W3
	015 Move W21, W2
	016 Move W22, W1
	017 Move W23, W0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xD82000
	023 Move X0, [X0+3816]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+253], W8
	027 Move W0, W23
	028 Move W1, W22
	029 Move W2, W21
	030 Move W3, W20
	031 Call ValueTuple.CombineHashCodes, X0, X1, X2, X3
	032 Move X8, [X24]
	033 Move W20, W0
	034 Move W9, [X8+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Move W0, W20
	040 Move W1, W19
	041 Move X20, [X31+48]
	042 Move X19, [X31+56]
	043 Move X22, [X31+32]
	044 Move X21, [X31+40]
	045 Move X24, [X31+16]
	046 Move X23, [X31+24]
	047 Move X2, X31
	048 Move X30, [X31+64]
	049 Move X25, [X31+72]
	050 Call HashHelpers.Combine, X0, X1
	051 Return X0

Method: System.Int32 CombineHashCodes(System.Int32 h1, System.Int32 h2, System.Int32 h3, System.Int32 h4, System.Int32 h5, System.Int32 h6)

Disassembly:
	0x0339CE44 MOV W1, W23
	0x0339CE48 AND W3, W19, 0x1
	0x0339CE4C LDR X2, [X8]
	0x0339CE50 ADD X4, X31, 0x8
	0x0339CE54 BL 0x339CFCC
	0x0339CE58 TBZ X0, 0x0, 0x339CFA0
	0x0339CE5C CMP W26, W20
	0x0339CE60 B.CS 0x339CFC8
	0x0339CE64 LDR X8, [X25]
	0x0339CE68 ADD W22, W26, 0x1
	0x0339CE6C LDR X0, [X8 + 0x20]
	0x0339CE70 LDRB W8, [X0 + 0x135]
	0x0339CE74 TBNZ X8, 0x0, 0x339CE7C
	0x0339CE78 BL 0x1C5C684
	0x0339CE7C ADRP X8, 0xD8F000
	0x0339CE80 LDR X8, [X8 + 0x600]
	0x0339CE84 SUB W1, W20, W22
	0x0339CE88 ADD X0, X21, W22, 0x1, SXTW
	0x0339CE8C AND W3, W19, 0x1
	0x0339CE90 LDR X2, [X8]
	0x0339CE94 ADD X4, X31, 0x4
	0x0339CE98 BL 0x339CFCC
	0x0339CE9C TBZ X0, 0x0, 0x339CFA0
	0x0339CEA0 ADRP X8, 0xD5F000
	0x0339CEA4 LDP W20, W23, [X31]
	0x0339CEA8 LDP W22, W21, [X31 + 0x8]
	0x0339CEAC LDR X8, [X8 + 0x7C0]
	0x0339CEB0 LDR X0, [X8]
	0x0339CEB4 BL 0x1C16F10
	0x0339CEB8 MOV W1, W20
	0x0339CEBC MOV W2, W21
	0x0339CEC0 MOV W3, W22
	0x0339CEC4 MOV W4, W23
	0x0339CEC8 MOV X19, X0
	0x0339CECC BL 0x339C05C
	0x0339CED0 B 0x339CFA4
	0x0339CED4 LDR X8, [X25]
	0x0339CED8 LDR X0, [X8 + 0x20]
	0x0339CEDC LDRB W8, [X0 + 0x135]
	0x0339CEE0 TBNZ X8, 0x0, 0x339CEE8
	0x0339CEE4 BL 0x1C5C684
	0x0339CEE8 LDR X2, [X29]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x1042000
	011 Move X25, 0xD82000
	012 Move W8, [X26+254]
	013 Move X25, [X25+3816]
	014 Move W19, W5
	015 Move W20, W4
	016 Move W21, W3
	017 Move W22, W2
	018 Move W23, W1
	019 Move W24, W0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0xD82000
	025 Move X0, [X0+3816]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X26+254], W8
	029 Move W0, W24
	030 Move W1, W23
	031 Move W2, W22
	032 Move W3, W21
	033 Move W4, W20
	034 Call ValueTuple.CombineHashCodes, X0, X1, X2, X3, X4
	035 Move X8, [X25]
	036 Move W20, W0
	037 Move W9, [X8+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 Move W0, W20
	043 Move W1, W19
	044 Move X20, [X31+64]
	045 Move X19, [X31+72]
	046 Move X22, [X31+48]
	047 Move X21, [X31+56]
	048 Move X24, [X31+32]
	049 Move X23, [X31+40]
	050 Move X26, [X31+16]
	051 Move X25, [X31+24]
	052 Move X2, X31
	053 Move X30, [X31+80]
	054 Call HashHelpers.Combine, X0, X1
	055 Return X0

Method: System.Int32 CombineHashCodes(System.Int32 h1, System.Int32 h2, System.Int32 h3, System.Int32 h4, System.Int32 h5, System.Int32 h6, System.Int32 h7)

Disassembly:
	0x0339CEEC AND W3, W19, 0x1
	0x0339CEF0 ADD X4, X31, 0xC
	0x0339CEF4 MOV X0, X22
	0x0339CEF8 MOV X1, X24
	0x0339CEFC BL 0x339CFCC
	0x0339CF00 TBZ X0, 0x0, 0x339CFA0
	0x0339CF04 ADRP X8, 0xD5F000
	0x0339CF08 LDR W20, [X31]
	0x0339CF0C LDR W21, [X31 + 0xC]
	0x0339CF10 LDR X8, [X8 + 0x7C0]
	0x0339CF14 LDR X0, [X8]
	0x0339CF18 BL 0x1C16F10
	0x0339CF1C MOV W1, W20
	0x0339CF20 MOV W2, W21
	0x0339CF24 MOV X19, X0
	0x0339CF28 BL 0x339C25C
	0x0339CF2C B 0x339CFA4
	0x0339CF30 CMP W27, W20
	0x0339CF34 B.CS 0x339CFC8
	0x0339CF38 LDR X8, [X25]
	0x0339CF3C LDR X0, [X8 + 0x20]
	0x0339CF40 LDRB W8, [X0 + 0x135]
	0x0339CF44 TBNZ X8, 0x0, 0x339CF4C
	0x0339CF48 BL 0x1C5C684
	0x0339CF4C ADRP X8, 0xD8F000
	0x0339CF50 LDR X8, [X8 + 0x5F8]
	0x0339CF54 SUB W1, W20, W22
	0x0339CF58 ADD X0, X21, W22, 0x1, SXTW
	0x0339CF5C AND W3, W19, 0x1
	0x0339CF60 LDR X2, [X8]
	0x0339CF64 ADD X4, X31, 0x8
	0x0339CF68 BL 0x339CFCC
	0x0339CF6C TBZ X0, 0x0, 0x339CFA0
	0x0339CF70 ADRP X8, 0xD5F000
	0x0339CF74 LDR W20, [X31]
	0x0339CF78 LDP W22, W21, [X31 + 0x8]
	0x0339CF7C LDR X8, [X8 + 0x7C0]
	0x0339CF80 LDR X0, [X8]
	0x0339CF84 BL 0x1C16F10
	0x0339CF88 MOV W1, W20
	0x0339CF8C MOV W2, W21
	0x0339CF90 MOV W3, W22
	0x0339CF94 MOV X19, X0
	0x0339CF98 BL 0x339C170

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x1042000
	012 Move X26, 0xD82000
	013 Move W8, [X27+255]
	014 Move X26, [X26+3816]
	015 Move W19, W6
	016 Move W20, W5
	017 Move W21, W4
	018 Move W22, W3
	019 Move W23, W2
	020 Move W24, W1
	021 Move W25, W0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0xD82000
	027 Move X0, [X0+3816]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X27+255], W8
	031 Move W0, W25
	032 Move W1, W24
	033 Move W2, W23
	034 Move W3, W22
	035 Move W4, W21
	036 Move W5, W20
	037 Call ValueTuple.CombineHashCodes, X0, X1, X2, X3, X4, X5
	038 Move X8, [X26]
	039 Move W20, W0
	040 Move W9, [X8+224]
	041 Compare W9, 0
	042 JumpIfNotEqual {45}
	043 Move X0, X8
	044 Call 0x1C17DFC
	045 Move W0, W20
	046 Move W1, W19
	047 Move X20, [X31+64]
	048 Move X19, [X31+72]
	049 Move X22, [X31+48]
	050 Move X21, [X31+56]
	051 Move X24, [X31+32]
	052 Move X23, [X31+40]
	053 Move X26, [X31+16]
	054 Move X25, [X31+24]
	055 Move X2, X31
	056 Move X30, [X31+80]
	057 Move X27, [X31+88]
	058 Call HashHelpers.Combine, X0, X1
	059 Return X0

Method: System.Int32 CombineHashCodes(System.Int32 h1, System.Int32 h2, System.Int32 h3, System.Int32 h4, System.Int32 h5, System.Int32 h6, System.Int32 h7, System.Int32 h8)

Disassembly:
	0x0339CF9C B 0x339CFA4
	0x0339CFA0 MOV X19, X31
	0x0339CFA4 MOV X0, X19
	0x0339CFA8 LDP X20, X19, [X31 + 0x60]
	0x0339CFAC LDP X22, X21, [X31 + 0x50]
	0x0339CFB0 LDP X24, X23, [X31 + 0x40]
	0x0339CFB4 LDP X26, X25, [X31 + 0x30]
	0x0339CFB8 LDP X28, X27, [X31 + 0x20]
	0x0339CFBC LDP X29, X30, [X31 + 0x10]
	0x0339CFC0 ADD X31, X31, 0x70
	0x0339CFC4 RET
	0x0339CFC8 BL 0x339D6EC
	0x0339CFCC STP X30, X25, [X31 - 0x40]!
	0x0339CFD0 STP X24, X23, [X31 + 0x10]
	0x0339CFD4 STP X22, X21, [X31 + 0x20]
	0x0339CFD8 STP X20, X19, [X31 + 0x30]
	0x0339CFDC ADRP X25, 0x1041000
	0x0339CFE0 ADRP X24, 0xD59000
	0x0339CFE4 LDRB W8, [X25 + 0x107]
	0x0339CFE8 LDR X24, [X24 + 0xC48]
	0x0339CFEC MOV X20, X4
	0x0339CFF0 MOV W23, W3
	0x0339CFF4 MOV X19, X2
	0x0339CFF8 MOV X21, X1
	0x0339CFFC MOV X22, X0
	0x0339D000 TBNZ X8, 0x0, 0x339D018
	0x0339D004 ADRP X0, 0xD58000
	0x0339D008 LDR X0, [X0 + 0xC48]
	0x0339D00C BL 0x1C16CF4
	0x0339D010 MOVZ W8, 0x1
	0x0339D014 STRB W8, [X25 + 0x107]
	0x0339D018 LDR X0, [X24]
	0x0339D01C LDR W8, [X0 + 0xE0]
	0x0339D020 CBNZ W8, 0x339D028
	0x0339D024 BL 0x1C16DFC
	0x0339D028 MOV X0, X31
	0x0339D02C BL 0x3338524
	0x0339D030 MOV X3, X0
	0x0339D034 MOVZ W2, 0x7
	0x0339D038 MOV X0, X22
	0x0339D03C MOV X1, X21
	0x0339D040 TBZ X23, 0x0, 0x339D05C
	0x0339D044 MOV X4, X31
	0x0339D048 BL 0x337BD58
	0x0339D04C STR W0, [X20]
	0x0339D050 TBNZ X0, 0x1F, 0x339D094
	0x0339D054 MOVZ W0, 0x1
	0x0339D058 B 0x339D080

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X28, 0x1042000
	013 Move X27, 0xD82000
	014 Move W8, [X28+256]
	015 Move X27, [X27+3816]
	016 Move W19, W7
	017 Move W20, W6
	018 Move W21, W5
	019 Move W22, W4
	020 Move W23, W3
	021 Move W24, W2
	022 Move W25, W1
	023 Move W26, W0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0xD82000
	029 Move X0, [X0+3816]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X28+256], W8
	033 Move W0, W26
	034 Move W1, W25
	035 Move W2, W24
	036 Move W3, W23
	037 Move W4, W22
	038 Move W5, W21
	039 Move W6, W20
	040 Call ValueTuple.CombineHashCodes, X0, X1, X2, X3, X4, X5, X6
	041 Move X8, [X27]
	042 Move W20, W0
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move W0, W20
	049 Move W1, W19
	050 Move X20, [X31+80]
	051 Move X19, [X31+88]
	052 Move X22, [X31+64]
	053 Move X21, [X31+72]
	054 Move X24, [X31+48]
	055 Move X23, [X31+56]
	056 Move X26, [X31+32]
	057 Move X25, [X31+40]
	058 Move X28, [X31+16]
	059 Move X27, [X31+24]
	060 Move X2, X31
	061 Move X30, [X31+96]
	062 Call HashHelpers.Combine, X0, X1
	063 Return X0

