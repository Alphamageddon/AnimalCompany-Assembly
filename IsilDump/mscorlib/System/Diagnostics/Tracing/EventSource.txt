Type: System.Diagnostics.Tracing.EventSource

Method: System.Void .ctor()

Disassembly:
	0x033507E0 LDR X20, [X20 + 0x20]
	0x033507E4 CBNZ X20, 0x33507C4
	0x033507E8 MOV X0, X31
	0x033507EC B 0x33507F4
	0x033507F0 LDR X0, [X20 + 0x18]
	0x033507F4 LDP X20, X19, [X31 + 0x10]
	0x033507F8 LDR X30, [X31], #0x20
	0x033507FC RET
	0x03350800 BL 0x1C16F20
	0x03350804 ADRP X0, 0xDA8000
	0x03350808 LDR X0, [X0 + 0x528]
	0x0335080C BL 0x1C16D08
	0x03350810 BL 0x1C16F10
	0x03350814 MOV X19, X0
	0x03350818 ADRP X0, 0xDCD000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Object..ctor, X0
	006 Move X0, X19
	007 Move X1, X31
	008 Call "il2cpp_vm_object_is_inst", X0
	009 Compare X0, 0
	010 JumpIfEqual {19}
	011 Move X8, [X0]
	012 Move X9, [X8+424]
	013 Move X1, [X8+432]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move [X19+16], X0
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Return 
	019 Call 0x1C17F20

Method: System.Void .ctor(System.String eventSourceName)

Disassembly:
	0x0335081C LDR X0, [X0 + 0x70]
	0x03350820 BL 0x1C16D08
	0x03350824 MOV X20, X0
	0x03350828 ADRP X0, 0xDDA000
	0x0335082C LDR X0, [X0 + 0x288]
	0x03350830 BL 0x1C16D08
	0x03350834 MOV X2, X0
	0x03350838 MOV X0, X19
	0x0335083C MOV X1, X20
	0x03350840 MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void .ctor(System.Guid eventSourceGuid, System.String eventSourceName)

Disassembly:
	0x03350844 BL 0x3315F7C
	0x03350848 ADRP X0, 0xDDA000
	0x0335084C LDR X0, [X0 + 0x290]
	0x03350850 BL 0x1C16D08
	0x03350854 MOV X1, X0
	0x03350858 MOV X0, X19
	0x0335085C BL 0x1C16DEC
	0x03350860 STR X30, [X31 - 0x40]!
	0x03350864 STP X24, X23, [X31 + 0x10]
	0x03350868 STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X3
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void Finalize()

Disassembly:
	0x0335086C STP X20, X19, [X31 + 0x30]
	0x03350870 ADRP X22, 0x108C000
	0x03350874 LDRB W8, [X22 + 0xDBF]
	0x03350878 MOV X20, X2
	0x0335087C MOV X21, X1
	0x03350880 MOV X19, X0
	0x03350884 TBNZ X8, 0x0, 0x335089C
	0x03350888 ADRP X0, 0xDDA000
	0x0335088C LDR X0, [X0 + 0x298]
	0x03350890 BL 0x1C16CF4
	0x03350894 MOVZ W8, 0x1
	0x03350898 STRB W8, [X22 + 0xDBF]
	0x0335089C CBZ X21, 0x3350948
	0x033508A0 MOV X23, X19
	0x033508A4 LDR X8, [X23 + 0x10]!
	0x033508A8 LDR W9, [X23 + 0x8]
	0x033508AC ADD W9, W9, 0x1
	0x033508B0 STR W9, [X23 + 0x8]
	0x033508B4 CBZ X8, 0x33508E4
	0x033508B8 LDR X0, [X8 + 0x10]
	0x033508BC CBZ X0, 0x3350944
	0x033508C0 MOV X24, X8
	0x033508C4 LDR X8, [X0]
	0x033508C8 MOV X1, X21
	0x033508CC LDP X9, X2, [X8 + 0x138]
	0x033508D0 BLR X9
	0x033508D4 TBNZ X0, 0x0, 0x335092C
	0x033508D8 LDR X8, [X24 + 0x20]
	0x033508DC CBNZ X8, 0x33508B8
	0x033508E0 B 0x33508E8
	0x033508E4 MOV X24, X31
	0x033508E8 ADRP X8, 0xDDA000
	0x033508EC LDR X8, [X8 + 0x298]
	0x033508F0 LDR X0, [X8]
	0x033508F4 BL 0x1C16F10
	0x033508F8 MOV X1, X31
	0x033508FC MOV X22, X0
	0x03350900 BL 0x33BDD8C
	0x03350904 CBZ X22, 0x3350944
	0x03350908 ADD X8, X24, 0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0]
	006 Move X19, X0
	007 Move X9, [X8+392]
	008 Move X2, [X8+400]
	009 Move W1, W31
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move X0, X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X1, X31
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Call Object.Finalize, X0
	018 Return 
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X21, X0
	021 Move X0, X21
	022 Call 0x3EB2AD0
	023 Move X20, [X0]
	024 Call 0x3EB2AE0
	025 Move X0, X19
	026 Move X1, X31
	027 Call Object.Finalize, X0
	028 Compare X20, 0
	029 JumpIfNotEqual {36}
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 
	035 Move X20, X31
	036 Move X0, X20
	037 Call 0x1C17F18
	038 Move X21, X0
	039 Move X0, X19
	040 Move X1, X31
	041 Call Object.Finalize, X0
	042 Compare X20, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X21
	045 Call 0x1D2D690
	046 Move X0, X20
	047 Call 0x1C17F18
	048 Call 0x1991590

Method: System.Void set_Name(System.String value)

Disassembly:
	0x0335090C CMP X24, 0x0
	0x03350910 CSEL X8, X23, X8, EQ

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Boolean IsEnabled()

Disassembly:
	0x03350914 STP X21, X20, [X22 + 0x10]
	0x03350918 STR X22, [X8]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean IsEnabled(System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords keywords)

Disassembly:
	0x0335091C LDR W8, [X19 + 0x1C]
	0x03350920 ADD W8, W8, 0x1

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void Dispose()

Disassembly:
	0x03350924 STR W8, [X19 + 0x1C]
	0x03350928 B 0x3350930
	0x0335092C STR X20, [X24 + 0x18]
	0x03350930 LDP X20, X19, [X31 + 0x30]
	0x03350934 LDP X22, X21, [X31 + 0x20]
	0x03350938 LDP X24, X23, [X31 + 0x10]
	0x0335093C LDR X30, [X31], #0x40
	0x03350940 RET
	0x03350944 BL 0x1C16F20
	0x03350948 ADRP X0, 0xDA8000
	0x0335094C LDR X0, [X0 + 0x528]
	0x03350950 BL 0x1C16D08
	0x03350954 BL 0x1C16F10
	0x03350958 MOV X19, X0
	0x0335095C ADRP X0, 0xDCD000
	0x03350960 LDR X0, [X0 + 0x70]
	0x03350964 BL 0x1C16D08
	0x03350968 MOV X20, X0
	0x0335096C ADRP X0, 0xDDA000
	0x03350970 LDR X0, [X0 + 0x288]
	0x03350974 BL 0x1C16D08
	0x03350978 MOV X2, X0
	0x0335097C MOV X0, X19
	0x03350980 MOV X1, X20
	0x03350984 MOV X3, X31
	0x03350988 BL 0x3315F7C
	0x0335098C ADRP X0, 0xDDA000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x108D000
	006 Move X20, 0xDAB000
	007 Move W8, [X21+3504]
	008 Move X20, [X20+3088]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDAB000
	015 Move X0, [X0+3088]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3504], W8
	019 Move X8, [X19]
	020 Move W1, 1
	021 Move X0, X19
	022 Move X9, [X8+392]
	023 Move X2, [X8+400]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X1, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call GC.SuppressFinalize, X0
	037 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03350990 LDR X0, [X0 + 0x2A0]

ISIL:
	001 Return 

Method: System.Void WriteEvent(System.Int32 eventId, System.Int32 arg1)

Disassembly:
	0x03350994 BL 0x1C16D08
	0x03350998 MOV X1, X0
	0x0335099C MOV X0, X19
	0x033509A0 BL 0x1C16DEC
	0x033509A4 MOV X1, X31
	0x033509A8 B 0x33BDD8C
	0x033509AC LDR W0, [X0 + 0x1C]
	0x033509B0 RET
	0x033509B4 STP X30, X21, [X31 - 0x20]!
	0x033509B8 STP X20, X19, [X31 + 0x10]
	0x033509BC ADRP X20, 0x108C000
	0x033509C0 ADRP X21, 0xDDA000
	0x033509C4 LDRB W8, [X20 + 0xDC0]
	0x033509C8 LDR X21, [X21 + 0x2A8]
	0x033509CC MOV X19, X0
	0x033509D0 TBNZ X8, 0x0, 0x33509E8
	0x033509D4 ADRP X0, 0xDDA000
	0x033509D8 LDR X0, [X0 + 0x2A8]
	0x033509DC BL 0x1C16CF4
	0x033509E0 MOVZ W8, 0x1
	0x033509E4 STRB W8, [X20 + 0xDC0]
	0x033509E8 LDR X0, [X21]
	0x033509EC BL 0x1C16F10
	0x033509F0 MOV X1, X31
	0x033509F4 MOV X20, X0
	0x033509F8 BL 0x33BDD8C
	0x033509FC MOVZ W8, 0x1
	0x03350A00 STR X19, [X20 + 0x10]
	0x03350A04 STRB W8, [X20 + 0x18]
	0x03350A08 MOV X0, X20
	0x03350A0C LDP X20, X19, [X31 + 0x10]
	0x03350A10 LDP X30, X21, [X31], #0x20
	0x03350A14 RET
	0x03350A18 STP X30, X21, [X31 - 0x20]!
	0x03350A1C STP X20, X19, [X31 + 0x10]
	0x03350A20 MOV X19, X1
	0x03350A24 MOV X1, X31
	0x03350A28 MOV X20, X0
	0x03350A2C AND W21, W2, 0x1
	0x03350A30 BL 0x33BDD8C
	0x03350A34 STR X19, [X20 + 0x10]
	0x03350A38 STRB W21, [X20 + 0x18]
	0x03350A3C LDP X20, X19, [X31 + 0x10]
	0x03350A40 LDP X30, X21, [X31], #0x20
	0x03350A44 RET
	0x03350A48 MOV W0, W31
	0x03350A4C RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x108D000
	007 Move X22, 0xDA4000
	008 Move X21, 0xDA4000
	009 Move W8, [X19+3505]
	010 Move X22, [X22+2512]
	011 Move X21, [X21+1880]
	012 Move W20, W2
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xDA4000
	018 Move X0, [X0+1880]
	019 Call 0x1C17CF4
	020 Move X0, 0xDA4000
	021 Move X0, [X0+2512]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X19+3505], W8
	025 Move X0, [X22]
	026 Move W1, 1
	027 Call 0x1C17D6C
	028 Move X19, X0
	029 Move X0, [X21]
	030 Add X1, X31, 12
	031 Move [X31+12], W20
	032 Call 0x1C17E04
	033 Compare X19, 0
	034 JumpIfEqual {54}
	035 Move X20, X0
	036 Compare X0, 0
	037 JumpIfEqual {44}
	038 Move X8, [X19]
	039 Move X0, X20
	040 Move X1, [X8+64]
	041 Call 0x1C17E00
	042 Compare X0, 0
	043 JumpIfEqual {56}
	044 Move W8, [X19+24]
	045 Compare W8, 0
	046 JumpIfEqual {55}
	047 Move [X19+32], X20
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Return 
	054 Call 0x1C17F20
	055 Call 0x1C17F28
	056 Call 0x1C17F44
	057 Move X1, X31
	058 Call 0x1C17DEC

Method: System.Void WriteEvent(System.Int32 eventId, System.Int32 arg1, System.Int32 arg2)

Disassembly:
	0x03350A54 STP X20, X19, [X31 + 0x10]
	0x03350A58 ADRP X20, 0x108C000
	0x03350A5C LDRB W8, [X20 + 0xDC1]
	0x03350A60 MOV X19, X0
	0x03350A64 TBNZ X8, 0x0, 0x3350A7C
	0x03350A68 ADRP X0, 0xDA9000
	0x03350A6C LDR X0, [X0 + 0xCC0]
	0x03350A70 BL 0x1C16CF4
	0x03350A74 MOVZ W8, 0x1
	0x03350A78 STRB W8, [X20 + 0xDC1]
	0x03350A7C LDR X0, [X19 + 0x20]!
	0x03350A80 CBNZ X0, 0x3350AB4
	0x03350A84 ADRP X8, 0xDA9000
	0x03350A88 LDR X8, [X8 + 0xCC0]
	0x03350A8C LDR X0, [X8]
	0x03350A90 BL 0x1C16F10
	0x03350A94 MOV X1, X31
	0x03350A98 MOV X20, X0
	0x03350A9C BL 0x33BDD8C
	0x03350AA0 MOV X0, X19
	0x03350AA4 MOV X1, X20
	0x03350AA8 MOV X2, X31
	0x03350AAC BL 0x1C24138
	0x03350AB0 LDR X0, [X19]
	0x03350AB4 LDP X20, X19, [X31 + 0x10]
	0x03350AB8 LDR X30, [X31], #0x20
	0x03350ABC RET
	0x03350AC0 STP X30, X21, [X31 - 0x20]!
	0x03350AC4 STP X20, X19, [X31 + 0x10]
	0x03350AC8 ADRP X20, 0x108C000
	0x03350ACC ADRP X21, 0xDDA000
	0x03350AD0 LDRB W8, [X20 + 0xDC2]
	0x03350AD4 LDR X21, [X21 + 0x2A8]
	0x03350AD8 MOV X19, X0
	0x03350ADC TBNZ X8, 0x0, 0x3350AF4
	0x03350AE0 ADRP X0, 0xDDA000
	0x03350AE4 LDR X0, [X0 + 0x2A8]
	0x03350AE8 BL 0x1C16CF4
	0x03350AEC MOVZ W8, 0x1
	0x03350AF0 STRB W8, [X20 + 0xDC2]
	0x03350AF4 LDR X0, [X21]
	0x03350AF8 BL 0x1C16F10
	0x03350AFC MOV X1, X31
	0x03350B00 MOV X20, X0
	0x03350B04 BL 0x33BDD8C
	0x03350B08 STR X19, [X20 + 0x10]
	0x03350B0C STRB W31, [X20 + 0x18]
	0x03350B10 MOV X0, X20
	0x03350B14 LDP X20, X19, [X31 + 0x10]
	0x03350B18 LDP X30, X21, [X31], #0x20
	0x03350B1C RET
	0x03350B20 STR X30, [X31 - 0x40]!
	0x03350B24 STP X24, X23, [X31 + 0x10]
	0x03350B28 STP X22, X21, [X31 + 0x20]
	0x03350B2C STP X20, X19, [X31 + 0x30]
	0x03350B30 ADRP X22, 0x108C000
	0x03350B34 LDRB W8, [X22 + 0xDC3]
	0x03350B38 MOV X21, X2
	0x03350B3C MOV X19, X1
	0x03350B40 MOV X20, X0
	0x03350B44 TBNZ X8, 0x0, 0x3350B5C
	0x03350B48 ADRP X0, 0xDDA000
	0x03350B4C LDR X0, [X0 + 0x298]
	0x03350B50 BL 0x1C16CF4
	0x03350B54 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x108D000
	009 Move X23, 0xDA4000
	010 Move X22, 0xDA4000
	011 Move W8, [X20+3506]
	012 Move X23, [X23+2512]
	013 Move X22, [X22+1880]
	014 Move W19, W3
	015 Move W21, W2
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0xDA4000
	021 Move X0, [X0+1880]
	022 Call 0x1C17CF4
	023 Move X0, 0xDA4000
	024 Move X0, [X0+2512]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+3506], W8
	028 Move X0, [X23]
	029 Move W1, 2
	030 Call 0x1C17D6C
	031 Move X20, X0
	032 Move X0, [X22]
	033 Add X1, X31, 12
	034 Move [X31+12], W21
	035 Call 0x1C17E04
	036 Compare X20, 0
	037 JumpIfEqual {79}
	038 Move X21, X0
	039 Compare X0, 0
	040 JumpIfEqual {47}
	041 Move X8, [X20]
	042 Move X0, X21
	043 Move X1, [X8+64]
	044 Call 0x1C17E00
	045 Compare X0, 0
	046 JumpIfEqual {76}
	047 Move W8, [X20+24]
	048 Compare W8, 0
	049 JumpIfEqual {75}
	050 Move [X20+32], X21
	051 Move X0, [X22]
	052 Add X1, X31, 8
	053 Move [X31+8], W19
	054 Call 0x1C17E04
	055 Move X19, X0
	056 Compare X0, 0
	057 JumpIfEqual {64}
	058 Move X8, [X20]
	059 Move X0, X19
	060 Move X1, [X8+64]
	061 Call 0x1C17E00
	062 Compare X0, 0
	063 JumpIfEqual {76}
	064 Move W8, [X20+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move [X20+40], X19
	067 Move X20, [X31+48]
	068 Move X19, [X31+56]
	069 Move X22, [X31+32]
	070 Move X21, [X31+40]
	071 Move X30, [X31+16]
	072 Move X23, [X31+24]
	073 Add X31, X31, 64
	074 Return 
	075 Call 0x1C17F28
	076 Call 0x1C17F44
	077 Move X1, X31
	078 Call 0x1C17DEC
	079 Call 0x1C17F20

Method: System.Void WriteEvent(System.Int32 eventId, System.Int32 arg1, System.Int32 arg2, System.Int32 arg3)

Disassembly:
	0x03350B58 STRB W8, [X22 + 0xDC3]
	0x03350B5C CBZ X19, 0x3350C5C
	0x03350B60 MOV X23, X20
	0x03350B64 LDR X8, [X23 + 0x10]!
	0x03350B68 LDR W9, [X23 + 0x8]
	0x03350B6C ADD W9, W9, 0x1
	0x03350B70 STR W9, [X23 + 0x8]
	0x03350B74 CBZ X8, 0x3350BA4
	0x03350B78 LDR X0, [X8 + 0x10]
	0x03350B7C CBZ X0, 0x3350BFC
	0x03350B80 MOV X24, X8
	0x03350B84 LDR X8, [X0]
	0x03350B88 MOV X1, X19
	0x03350B8C LDP X9, X2, [X8 + 0x138]
	0x03350B90 BLR X9
	0x03350B94 TBNZ X0, 0x0, 0x3350C00
	0x03350B98 LDR X8, [X24 + 0x20]
	0x03350B9C CBNZ X8, 0x3350B78
	0x03350BA0 B 0x3350BA8
	0x03350BA4 MOV X24, X31
	0x03350BA8 ADRP X8, 0xDDA000
	0x03350BAC LDR X8, [X8 + 0x298]
	0x03350BB0 LDR X0, [X8]
	0x03350BB4 BL 0x1C16F10
	0x03350BB8 MOV X1, X31
	0x03350BBC MOV X22, X0
	0x03350BC0 BL 0x33BDD8C
	0x03350BC4 CBZ X22, 0x3350BFC
	0x03350BC8 ADD X8, X24, 0x20
	0x03350BCC CMP X24, 0x0
	0x03350BD0 CSEL X8, X23, X8, EQ
	0x03350BD4 STP X19, X21, [X22 + 0x10]
	0x03350BD8 STR X22, [X8]
	0x03350BDC LDR W8, [X20 + 0x1C]
	0x03350BE0 LDP X22, X21, [X31 + 0x20]
	0x03350BE4 LDP X24, X23, [X31 + 0x10]
	0x03350BE8 ADD W8, W8, 0x1
	0x03350BEC STR W8, [X20 + 0x1C]
	0x03350BF0 LDP X20, X19, [X31 + 0x30]
	0x03350BF4 LDR X30, [X31], #0x40
	0x03350BF8 RET
	0x03350BFC BL 0x1C16F20
	0x03350C00 ADRP X0, 0xDDA000
	0x03350C04 LDR X20, [X24 + 0x10]
	0x03350C08 LDR X0, [X0 + 0x2B0]
	0x03350C0C BL 0x1C16D08
	0x03350C10 MOV X1, X20
	0x03350C14 MOV X2, X19
	0x03350C18 MOV X3, X31
	0x03350C1C BL 0x320A264
	0x03350C20 MOV X19, X0
	0x03350C24 ADRP X0, 0xDAB000
	0x03350C28 LDR X0, [X0 + 0x578]
	0x03350C2C BL 0x1C16D08
	0x03350C30 BL 0x1C16F10
	0x03350C34 MOV X1, X19
	0x03350C38 MOV X2, X31
	0x03350C3C MOV X20, X0
	0x03350C40 BL 0x3314A68
	0x03350C44 ADRP X0, 0xDDA000
	0x03350C48 LDR X0, [X0 + 0x2B8]
	0x03350C4C BL 0x1C16D08
	0x03350C50 MOV X1, X0
	0x03350C54 MOV X0, X20
	0x03350C58 BL 0x1C16DEC
	0x03350C5C ADRP X0, 0xDA8000
	0x03350C60 LDR X0, [X0 + 0x528]
	0x03350C64 BL 0x1C16D08
	0x03350C68 BL 0x1C16F10
	0x03350C6C MOV X19, X0
	0x03350C70 ADRP X0, 0xDCD000
	0x03350C74 LDR X0, [X0 + 0x70]
	0x03350C78 BL 0x1C16D08
	0x03350C7C MOV X20, X0
	0x03350C80 ADRP X0, 0xDDA000
	0x03350C84 LDR X0, [X0 + 0x288]
	0x03350C88 BL 0x1C16D08
	0x03350C8C MOV X2, X0
	0x03350C90 MOV X0, X19
	0x03350C94 MOV X1, X20
	0x03350C98 MOV X3, X31
	0x03350C9C BL 0x3315F7C
	0x03350CA0 ADRP X0, 0xDDA000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X20, 0x108D000
	010 Move X24, 0xDA4000
	011 Move X23, 0xDA4000
	012 Move W8, [X20+3507]
	013 Move X24, [X24+2512]
	014 Move X23, [X23+1880]
	015 Move W19, W4
	016 Move W21, W3
	017 Move W22, W2
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xDA4000
	023 Move X0, [X0+1880]
	024 Call 0x1C17CF4
	025 Move X0, 0xDA4000
	026 Move X0, [X0+2512]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3507], W8
	030 Move X0, [X24]
	031 Move W1, 3
	032 Call 0x1C17D6C
	033 Move X20, X0
	034 Move X0, [X23]
	035 Add X1, X31, 28
	036 Move [X31+28], W22
	037 Call 0x1C17E04
	038 Compare X20, 0
	039 JumpIfEqual {98}
	040 Move X22, X0
	041 Compare X0, 0
	042 JumpIfEqual {49}
	043 Move X8, [X20]
	044 Move X0, X22
	045 Move X1, [X8+64]
	046 Call 0x1C17E00
	047 Compare X0, 0
	048 JumpIfEqual {95}
	049 Move W8, [X20+24]
	050 Compare W8, 0
	051 JumpIfEqual {94}
	052 Move [X20+32], X22
	053 Move X0, [X23]
	054 Add X1, X31, 24
	055 Move [X31+24], W21
	056 Call 0x1C17E04
	057 Move X21, X0
	058 Compare X0, 0
	059 JumpIfEqual {66}
	060 Move X8, [X20]
	061 Move X0, X21
	062 Move X1, [X8+64]
	063 Call 0x1C17E00
	064 Compare X0, 0
	065 JumpIfEqual {95}
	066 Move W8, [X20+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move [X20+40], X21
	069 Move X0, [X23]
	070 Add X1, X31, 12
	071 Move [X31+12], W19
	072 Call 0x1C17E04
	073 Move X19, X0
	074 Compare X0, 0
	075 JumpIfEqual {82}
	076 Move X8, [X20]
	077 Move X0, X19
	078 Move X1, [X8+64]
	079 Call 0x1C17E00
	080 Compare X0, 0
	081 JumpIfEqual {95}
	082 Move W8, [X20+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move [X20+48], X19
	085 Move X20, [X31+64]
	086 Move X19, [X31+72]
	087 Move X22, [X31+48]
	088 Move X21, [X31+56]
	089 Move X24, [X31+32]
	090 Move X23, [X31+40]
	091 Move X30, [X31+16]
	092 Add X31, X31, 80
	093 Return 
	094 Call 0x1C17F28
	095 Call 0x1C17F44
	096 Move X1, X31
	097 Call 0x1C17DEC
	098 Call 0x1C17F20

Method: System.Void WriteEvent(System.Int32 eventId, System.Object[] args)

Disassembly:
	0x03350A50 STR X30, [X31 - 0x20]!

ISIL:
	001 Return 

Method: System.Void WriteEvent(System.Int32 eventId, System.String arg1, System.String arg2, System.String arg3)

Disassembly:
	0x03350CA4 LDR X0, [X0 + 0x2B8]
	0x03350CA8 BL 0x1C16D08
	0x03350CAC MOV X1, X0
	0x03350CB0 MOV X0, X19
	0x03350CB4 BL 0x1C16DEC
	0x03350CB8 STR X30, [X31 - 0x20]!
	0x03350CBC STP X20, X19, [X31 + 0x10]
	0x03350CC0 CBZ X1, 0x3350D10
	0x03350CC4 LDR X20, [X0 + 0x10]
	0x03350CC8 CBZ X20, 0x3350CF8
	0x03350CCC MOV X19, X1
	0x03350CD0 LDR X0, [X20 + 0x10]
	0x03350CD4 CBZ X0, 0x3350D0C
	0x03350CD8 LDR X8, [X0]
	0x03350CDC MOV X1, X19
	0x03350CE0 LDP X9, X2, [X8 + 0x138]
	0x03350CE4 BLR X9
	0x03350CE8 TBNZ X0, 0x0, 0x3350CFC
	0x03350CEC LDR X20, [X20 + 0x20]
	0x03350CF0 CBNZ X20, 0x3350CD0
	0x03350CF4 B 0x3350CFC
	0x03350CF8 MOV W0, W31
	0x03350CFC LDP X20, X19, [X31 + 0x10]
	0x03350D00 AND W0, W0, 0x1
	0x03350D04 LDR X30, [X31], #0x20
	0x03350D08 RET
	0x03350D0C BL 0x1C16F20
	0x03350D10 ADRP X0, 0xDA8000
	0x03350D14 LDR X0, [X0 + 0x528]
	0x03350D18 BL 0x1C16D08
	0x03350D1C BL 0x1C16F10
	0x03350D20 MOV X19, X0
	0x03350D24 ADRP X0, 0xDCD000
	0x03350D28 LDR X0, [X0 + 0x70]
	0x03350D2C BL 0x1C16D08
	0x03350D30 MOV X20, X0
	0x03350D34 ADRP X0, 0xDDA000
	0x03350D38 LDR X0, [X0 + 0x288]
	0x03350D3C BL 0x1C16D08
	0x03350D40 MOV X2, X0
	0x03350D44 MOV X0, X19
	0x03350D48 MOV X1, X20
	0x03350D4C MOV X3, X31
	0x03350D50 BL 0x3315F7C
	0x03350D54 ADRP X0, 0xDDA000
	0x03350D58 LDR X0, [X0 + 0x2C0]
	0x03350D5C BL 0x1C16D08
	0x03350D60 MOV X1, X0
	0x03350D64 MOV X0, X19
	0x03350D68 BL 0x1C16DEC
	0x03350D6C SUB X31, X31, 0x40
	0x03350D70 STR X30, [X31 + 0x10]
	0x03350D74 STP X22, X21, [X31 + 0x20]
	0x03350D78 STP X20, X19, [X31 + 0x30]
	0x03350D7C ADRP X22, 0x108C000
	0x03350D80 LDRB W8, [X22 + 0xDC4]
	0x03350D84 MOV W19, W2
	0x03350D88 MOV X20, X1
	0x03350D8C MOV X21, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x108D000
	008 Move X23, 0xDA4000
	009 Move W8, [X20+3508]
	010 Move X23, [X23+2512]
	011 Move X19, X4
	012 Move X21, X3
	013 Move X22, X2
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xDA4000
	019 Move X0, [X0+2512]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3508], W8
	023 Move X0, [X23]
	024 Move W1, 3
	025 Call 0x1C17D6C
	026 Compare X0, 0
	027 JumpIfEqual {74}
	028 Move X20, X0
	029 Compare X22, 0
	030 JumpIfEqual {37}
	031 Move X8, [X20]
	032 Move X0, X22
	033 Move X1, [X8+64]
	034 Call 0x1C17E00
	035 Compare X0, 0
	036 JumpIfEqual {71}
	037 Move W8, [X20+24]
	038 Compare W8, 0
	039 JumpIfEqual {70}
	040 Move [X20+32], X22
	041 Compare X21, 0
	042 JumpIfEqual {50}
	043 Move X8, [X20]
	044 Move X0, X21
	045 Move X1, [X8+64]
	046 Call 0x1C17E00
	047 Compare X0, 0
	048 JumpIfEqual {71}
	049 Move W8, [X20+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move [X20+40], X21
	052 Compare X19, 0
	053 JumpIfEqual {61}
	054 Move X8, [X20]
	055 Move X0, X19
	056 Move X1, [X8+64]
	057 Call 0x1C17E00
	058 Compare X0, 0
	059 JumpIfEqual {71}
	060 Move W8, [X20+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move [X20+48], X19
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Move X23, [X31+56]
	069 Return 
	070 Call 0x1C17F28
	071 Call 0x1C17F44
	072 Move X1, X31
	073 Call 0x1C17DEC
	074 Call 0x1C17F20

Method: System.Void WriteEventCore(System.Int32 eventId, System.Int32 eventDataCount, System.Diagnostics.Tracing.EventSource/EventData* data)

Disassembly:
	0x03350D90 TBNZ X8, 0x0, 0x3350DA8

ISIL:
	001 Return 

