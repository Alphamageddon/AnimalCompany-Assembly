Type: System.Diagnostics.StackTrace

Method: System.Void .ctor()

Disassembly:
	0x0334F228 LDR X0, [X0 + 0x210]
	0x0334F22C BL 0x1C16CF4
	0x0334F230 ADRP X0, 0xDA4000
	0x0334F234 LDR X0, [X0 + 0xE18]
	0x0334F238 BL 0x1C16CF4
	0x0334F23C ADRP X0, 0xDA4000
	0x0334F240 LDR X0, [X0 + 0x6C0]
	0x0334F244 BL 0x1C16CF4
	0x0334F248 MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Object..ctor, X0
	006 Move X0, X19
	007 Move W1, W31
	008 Move W2, W31
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]

Method: System.Void .ctor(System.Boolean fNeedFileInfo)

Disassembly:
	0x0334F454 BL 0x3395194
	0x0334F458 TBZ X0, 0x0, 0x334F374
	0x0334F45C LDR X8, [X31 + 0x8]
	0x0334F460 STR X23, [X8]
	0x0334F464 CBZ X23, 0x334F52C
	0x0334F468 LDR X8, [X23]
	0x0334F46C LDP X9, X1, [X8 + 0x1B8]
	0x0334F470 MOV X0, X23
	0x0334F474 BLR X9
	0x0334F478 MOV X23, X31
	0x0334F47C STR X0, [X19]
	0x0334F480 MOVZ W24, 0x9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 And W2, W19, 1
	009 Move X0, X20
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move W1, W31
	013 Move X30, [X31+32]
	014 Call StackTrace.init_frames, X0, X1, X2
	015 Return 

Method: System.Void .ctor(System.Int32 skipFrames, System.Boolean fNeedFileInfo)

Disassembly:
	0x0334F484 CBNZ X22, 0x334F498
	0x0334F488 B 0x334F4F8
	0x0334F48C MOV X23, X31
	0x0334F490 MOVZ W24, 0x6
	0x0334F494 CBZ X22, 0x334F4F8
	0x0334F498 LDR X8, [X22]
	0x0334F49C ADRP X10, 0xDA4000
	0x0334F4A0 LDRH W9, [X8 + 0x12E]
	0x0334F4A4 LDR X10, [X10 + 0xE00]
	0x0334F4A8 LDR X1, [X10]
	0x0334F4AC CBZ X9, 0x334F4D0
	0x0334F4B0 LDR X10, [X8 + 0xB0]
	0x0334F4B4 ADD X10, X10, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W1
	006 Move X1, X31
	007 Move W19, W2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 And W2, W19, 1
	011 Move W1, W20
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X0, X21
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Call StackTrace.init_frames, X0, X1, X2
	018 Return 

Method: System.Void init_frames(System.Int32 skipFrames, System.Boolean fNeedFileInfo)

Disassembly:
	0x0334F24C STRB W8, [X20 + 0xDAE]
	0x0334F250 LDR X0, [X19]
	0x0334F254 CBZ X0, 0x334F59C
	0x0334F258 LDR X8, [X0]
	0x0334F25C ADRP X26, 0xDA4000
	0x0334F260 LDP X9, X1, [X8 + 0x1B8]
	0x0334F264 LDR X26, [X26 + 0x6C0]
	0x0334F268 BLR X9
	0x0334F26C LDR X8, [X26]
	0x0334F270 MOV X21, X0
	0x0334F274 LDR W9, [X8 + 0xE0]
	0x0334F278 CBNZ W9, 0x334F284
	0x0334F27C MOV X0, X8
	0x0334F280 BL 0x1C16DFC
	0x0334F284 MOV X0, X21
	0x0334F288 MOV X1, X31
	0x0334F28C MOV X2, X31
	0x0334F290 BL 0x3395194
	0x0334F294 TBNZ X0, 0x0, 0x334F570
	0x0334F298 CBZ X21, 0x334F59C
	0x0334F29C LDR X8, [X21]
	0x0334F2A0 MOVZ W1, 0x3E
	0x0334F2A4 MOV X0, X21
	0x0334F2A8 LDR X9, [X8 + 0x758]
	0x0334F2AC LDR X2, [X8 + 0x760]
	0x0334F2B0 BLR X9
	0x0334F2B4 CBZ X0, 0x334F570
	0x0334F2B8 LDR X8, [X0 + 0x18]
	0x0334F2BC MOV X21, X0
	0x0334F2C0 CMP W8, 0x1
	0x0334F2C4 B.LT 0x334F570
	0x0334F2C8 ADRP X29, 0xDDB000
	0x0334F2CC ADRP X27, 0xDA4000
	0x0334F2D0 ADRP X20, 0xDDB000
	0x0334F2D4 LDR X29, [X29 + 0x200]
	0x0334F2D8 LDR X27, [X27 + 0xE18]
	0x0334F2DC LDR X20, [X20 + 0x210]
	0x0334F2E0 MOV X28, X31
	0x0334F2E4 AND X8, X8, 0x0
	0x0334F2E8 CMP X28, W8, UXTW
	0x0334F2EC B.CS 0x334F590
	0x0334F2F0 ADD X8, X21, X28, 0x3, LSL
	0x0334F2F4 LDR X23, [X8 + 0x20]
	0x0334F2F8 LDR X1, [X29]
	0x0334F2FC MOV X0, X23
	0x0334F300 BL 0x21A8B6C
	0x0334F304 CBZ X0, 0x334F508
	0x0334F308 LDR X8, [X0]
	0x0334F30C ADRP X10, 0xDDB000
	0x0334F310 MOV X22, X0
	0x0334F314 LDRH W9, [X8 + 0x12E]
	0x0334F318 LDR X10, [X10 + 0x208]
	0x0334F31C LDR X1, [X10]
	0x0334F320 CBZ X9, 0x334F344
	0x0334F324 LDR X10, [X8 + 0xB0]
	0x0334F328 ADD X10, X10, 0x8
	0x0334F32C LDUR X11, [X10 - 0x8]
	0x0334F330 CMP X11, X1
	0x0334F334 B.EQ 0x334F354
	0x0334F338 SUBS X9, X9, 0x1
	0x0334F33C ADD X10, X10, 0x10
	0x0334F340 B.NE 0x334F32C
	0x0334F344 MOV X0, X22
	0x0334F348 MOV W2, W31
	0x0334F34C BL 0x1C5C788
	0x0334F350 B 0x334F360
	0x0334F354 LDRSW X9, [X10]
	0x0334F358 ADD X8, X8, X9, 0x4, LSL
	0x0334F35C ADD X0, X8, 0x138
	0x0334F360 LDP X8, X1, [X0]
	0x0334F364 MOV X0, X22
	0x0334F368 BLR X8
	0x0334F36C MOV X22, X0
	0x0334F370 CBZ X0, 0x334F524
	0x0334F374 LDR X8, [X22]
	0x0334F378 LDR X1, [X27]
	0x0334F37C LDRH W9, [X8 + 0x12E]
	0x0334F380 CBZ X9, 0x334F3A4
	0x0334F384 LDR X10, [X8 + 0xB0]
	0x0334F388 ADD X10, X10, 0x8
	0x0334F38C LDUR X11, [X10 - 0x8]
	0x0334F390 CMP X11, X1
	0x0334F394 B.EQ 0x334F3B4
	0x0334F398 SUBS X9, X9, 0x1
	0x0334F39C ADD X10, X10, 0x10
	0x0334F3A0 B.NE 0x334F38C
	0x0334F3A4 MOV X0, X22
	0x0334F3A8 MOV W2, W31
	0x0334F3AC BL 0x1C5C788
	0x0334F3B0 B 0x334F3C0
	0x0334F3B4 LDRSW X9, [X10]
	0x0334F3B8 ADD X8, X8, X9, 0x4, LSL
	0x0334F3BC ADD X0, X8, 0x138
	0x0334F3C0 LDP X8, X1, [X0]
	0x0334F3C4 MOV X0, X22
	0x0334F3C8 BLR X8
	0x0334F3CC TBZ X0, 0x0, 0x334F48C
	0x0334F3D0 LDR X8, [X22]
	0x0334F3D4 LDR X1, [X20]
	0x0334F3D8 LDRH W9, [X8 + 0x12E]
	0x0334F3DC CBZ X9, 0x334F400
	0x0334F3E0 LDR X10, [X8 + 0xB0]
	0x0334F3E4 ADD X10, X10, 0x8
	0x0334F3E8 LDUR X11, [X10 - 0x8]
	0x0334F3EC CMP X11, X1
	0x0334F3F0 B.EQ 0x334F410
	0x0334F3F4 SUBS X9, X9, 0x1
	0x0334F3F8 ADD X10, X10, 0x10
	0x0334F3FC B.NE 0x334F3E8
	0x0334F400 MOV X0, X22
	0x0334F404 MOV W2, W31
	0x0334F408 BL 0x1C5C788
	0x0334F40C B 0x334F41C
	0x0334F410 LDRSW X9, [X10]
	0x0334F414 ADD X8, X8, X9, 0x4, LSL
	0x0334F418 ADD X0, X8, 0x138
	0x0334F41C LDP X8, X1, [X0]
	0x0334F420 MOV X0, X22
	0x0334F424 BLR X8
	0x0334F428 CBZ X0, 0x334F51C
	0x0334F42C LDR X8, [X26]
	0x0334F430 LDR X24, [X0 + 0x10]
	0x0334F434 LDR X25, [X19]
	0x0334F438 LDR W9, [X8 + 0xE0]
	0x0334F43C CBNZ W9, 0x334F448
	0x0334F440 MOV X0, X8
	0x0334F444 BL 0x1C16DFC
	0x0334F448 MOV X0, X24
	0x0334F44C MOV X1, X25
	0x0334F450 MOV X2, X31

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x108E000
	011 Move W8, [X21+3498]
	012 Move W20, W2
	013 Move W23, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0xDDC000
	020 Move X0, [X0+360]
	021 Call 0x1C17CF4
	022 Move X0, 0xDDC000
	023 Move X0, [X0+368]
	024 Call 0x1C17CF4
	025 Move X0, 0xDDC000
	026 Move X0, [X0+376]
	027 Call 0x1C17CF4
	028 Move X0, 0xDDC000
	029 Move X0, [X0+384]
	030 Call 0x1C17CF4
	031 Move X0, 0xDDC000
	032 Move X0, [X0+392]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+3498], W8
	036 Move TEMP, X23
	037 And TEMP, TEMP, -2147483648
	038 Compare TEMP, -2147483648
	039 JumpIfEqual {128}
	040 Move X8, 0xDDC000
	041 Move X8, [X8+384]
	042 Move X21, 0xDDC000
	043 Move X26, 0xDDC000
	044 And W25, W20, 1
	045 Move X0, [X8]
	046 Move X21, [X21+376]
	047 Move X26, [X26+392]
	048 Call 0x1C17F10
	049 Move X1, [X21]
	050 Move X21, X0
	051 Call List`1<Object>..ctor, X0
	052 Move X0, [X26]
	053 Add W24, W23, 2
	054 Call 0x1C17F10
	055 And W2, W20, 1
	056 Move W1, W24
	057 Move X22, X0
	058 Call StackFrame..ctor, X0, X1, X2
	059 Compare X22, 0
	060 JumpIfEqual {108}
	061 Move X24, 0xDDC000
	062 Move X24, [X24+360]
	063 Add W23, W23, 3
	064 Move X8, [X22]
	065 Move X0, X22
	066 Move X9, [X8+424]
	067 Move X1, [X8+432]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X1, X31
	070 Move X2, X31
	071 Call MethodBase.op_Inequality, X0, X1
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {108}
	076 Compare X21, 0
	077 JumpIfEqual {127}
	078 Move W10, [X21+28]
	079 Move X8, [X21+16]
	080 Move X9, [X24]
	081 Add W10, W10, 1
	082 Move [X21+28], W10
	083 Compare X8, 0
	084 JumpIfEqual {127}
	085 NotImplemented "Instruction LDRSW not yet implemented."
	086 Move W11, [X8+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Add W9, W10, 1
	089 Add X8, X8, X10
	090 Move [X21+24], W9
	091 Move [X8+32], X22
	092 Move X8, [X9+32]
	093 Move X0, X21
	094 Move X1, X22
	095 Move X8, [X8+192]
	096 Move X2, [X8+112]
	097 Call List`1<Object>.AddWithResize, X0, X1
	098 Move X0, [X26]
	099 Call 0x1C17F10
	100 And W2, W20, 1
	101 Move W1, W23
	102 Move X22, X0
	103 Call StackFrame..ctor, X0, X1, X2
	104 Add W23, W23, 1
	105 Compare X22, 0
	106 JumpIfNotEqual {64}
	107 Move [X19+32], W25
	108 Move [X19+32], W25
	109 Compare X21, 0
	110 JumpIfEqual {127}
	111 Move X8, 0xDDC000
	112 Move X8, [X8+368]
	113 Move X0, X21
	114 Move X1, [X8]
	115 Call List`1<Object>.ToArray, X0
	116 Move [X19+16], X0
	117 Move X20, [X31+64]
	118 Move X19, [X31+72]
	119 Move X22, [X31+48]
	120 Move X21, [X31+56]
	121 Move X24, [X31+32]
	122 Move X23, [X31+40]
	123 Move X26, [X31+16]
	124 Move X25, [X31+24]
	125 Move X30, [X31+80]
	126 Return 
	127 Call 0x1C17F20
	128 Move X0, 0xDAD000
	129 Move X0, [X0+1888]
	130 Call 0x1C17D08
	131 Call 0x1C17F10
	132 Move X19, X0
	133 Move X0, 0xDD3000
	134 Move X0, [X0+3656]
	135 Call 0x1C17D08
	136 Move X20, X0
	137 Move X0, 0xDDC000
	138 Move X0, [X0+400]
	139 Call 0x1C17D08
	140 Move X2, X0
	141 Move X0, X19
	142 Move X1, X20
	143 Move X3, X31
	144 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	145 Move X0, 0xDDC000
	146 Move X0, [X0+408]
	147 Call 0x1C17D08
	148 Move X1, X0
	149 Move X0, X19
	150 Call 0x1C17DEC

Method: System.Diagnostics.StackFrame[] get_trace(System.Exception e, System.Int32 skipFrames, System.Boolean fNeedFileInfo)

Disassembly:
	0x0334F4B8 LDUR X11, [X10 - 0x8]
	0x0334F4BC CMP X11, X1

ISIL:
	001 And W2, W2, 1
	002 Call 0x1C722A4
	003 Return X0

Method: System.Void .ctor(System.Exception e, System.Boolean fNeedFileInfo)

Disassembly:
	0x0334F4C0 B.EQ 0x334F4E0
	0x0334F4C4 SUBS X9, X9, 0x1
	0x0334F4C8 ADD X10, X10, 0x10

ISIL:
	001 And W3, W2, 1
	002 Move W2, W31

Method: System.Void .ctor(System.Exception e, System.Int32 skipFrames, System.Boolean fNeedFileInfo)

Disassembly:
	0x0334F4CC B.NE 0x334F4B8
	0x0334F4D0 MOV X0, X22
	0x0334F4D4 MOV W2, W31
	0x0334F4D8 BL 0x1C5C788
	0x0334F4DC B 0x334F4EC
	0x0334F4E0 LDRSW X9, [X10]
	0x0334F4E4 ADD X8, X8, X9, 0x4, LSL
	0x0334F4E8 ADD X0, X8, 0x138
	0x0334F4EC LDP X8, X1, [X0]
	0x0334F4F0 MOV X0, X22
	0x0334F4F4 BLR X8
	0x0334F4F8 CBNZ X23, 0x334F594
	0x0334F4FC CMP W24, 0x6
	0x0334F500 B.EQ 0x334F508
	0x0334F504 CBNZ W24, 0x334F570
	0x0334F508 LDR W8, [X21 + 0x18]
	0x0334F50C ADD X28, X28, 0x1
	0x0334F510 CMP X28, W8, SXTW
	0x0334F514 B.LT 0x334F2E8
	0x0334F518 B 0x334F570
	0x0334F51C BL 0x1C16F20
	0x0334F520 B 0x334F5AC
	0x0334F524 BL 0x1C16F20
	0x0334F528 B 0x334F5AC
	0x0334F52C BL 0x1C16F20
	0x0334F530 B 0x334F5AC
	0x0334F534 B 0x334F550
	0x0334F538 B 0x334F550
	0x0334F53C B 0x334F550
	0x0334F540 B 0x334F550
	0x0334F544 B 0x334F550
	0x0334F548 B 0x334F550
	0x0334F54C B 0x334F550
	0x0334F550 CMP W1, 0x1
	0x0334F554 B.NE 0x334F5A0
	0x0334F558 BL 0x3EB1AD0
	0x0334F55C LDR X23, [X0]
	0x0334F560 BL 0x3EB1AE0
	0x0334F564 MOV W24, W31
	0x0334F568 CBNZ X22, 0x334F498
	0x0334F56C B 0x334F4F8
	0x0334F570 LDP X20, X19, [X31 + 0x60]
	0x0334F574 LDP X22, X21, [X31 + 0x50]
	0x0334F578 LDP X24, X23, [X31 + 0x40]
	0x0334F57C LDP X26, X25, [X31 + 0x30]
	0x0334F580 LDP X28, X27, [X31 + 0x20]
	0x0334F584 LDP X29, X30, [X31 + 0x10]
	0x0334F588 ADD X31, X31, 0x70
	0x0334F58C RET
	0x0334F590 BL 0x1C16F28
	0x0334F594 MOV X0, X23
	0x0334F598 BL 0x1C16F18
	0x0334F59C BL 0x1C16F20
	0x0334F5A0 MOV X19, X0
	0x0334F5A4 MOV X23, X31
	0x0334F5A8 B 0x334F5B0
	0x0334F5AC MOV X19, X0
	0x0334F5B0 CBZ X22, 0x334F614

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X1
	007 Move X1, X31
	008 Move W22, W3
	009 Move W21, W2
	010 Move X19, X0
	011 Call Object..ctor, X0
	012 Compare X20, 0
	013 JumpIfEqual {31}
	014 Move TEMP, X21
	015 And TEMP, TEMP, -2147483648
	016 Compare TEMP, -2147483648
	017 JumpIfEqual {43}
	018 And W2, W22, 1
	019 Move X0, X20
	020 Move W1, W21
	021 Call 0x1C722A4
	022 Move [X19+16], X0
	023 Move X8, [X20+120]
	024 Move X22, [X31+16]
	025 Move X21, [X31+24]
	026 Move [X19+24], X8
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X30, [X31+48]
	030 Return 
	031 Move X0, 0xDAA000
	032 Move X0, [X0+1320]
	033 Call 0x1C17D08
	034 Call 0x1C17F10
	035 Move X19, X0
	036 Move X0, 0xDDC000
	037 Move X0, [X0+416]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X19
	041 Move X2, X31
	042 Call ArgumentNullException..ctor, X0, X1
	043 Move X0, 0xDAD000
	044 Move X0, [X0+1888]
	045 Call 0x1C17D08
	046 Call 0x1C17F10
	047 Move X19, X0
	048 Move X0, 0xDD3000
	049 Move X0, [X0+3656]
	050 Call 0x1C17D08
	051 Move X20, X0
	052 Move X0, 0xDDC000
	053 Move X0, [X0+400]
	054 Call 0x1C17D08
	055 Move X2, X0
	056 Move X0, X19
	057 Move X1, X20
	058 Move X3, X31
	059 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	060 Move X0, 0xDDC000
	061 Move X0, [X0+424]
	062 Call 0x1C17D08
	063 Move X1, X0
	064 Move X0, X19
	065 Call 0x1C17DEC

Method: System.Int32 get_FrameCount()

Disassembly:
	0x0334F5B4 LDR X8, [X22]
	0x0334F5B8 ADRP X10, 0xDA4000
	0x0334F5BC LDRH W9, [X8 + 0x12E]
	0x0334F5C0 LDR X10, [X10 + 0xE00]
	0x0334F5C4 LDR X1, [X10]
	0x0334F5C8 CBZ X9, 0x334F5EC

ISIL:
	001 Move X8, [X0+16]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move W0, [X8+24]
	005 Return X0
	006 Move W0, W31
	007 Return X0

Method: System.Diagnostics.StackFrame GetFrame(System.Int32 index)

Disassembly:
	0x0334F5CC LDR X10, [X8 + 0xB0]
	0x0334F5D0 ADD X10, X10, 0x8
	0x0334F5D4 LDUR X11, [X10 - 0x8]
	0x0334F5D8 CMP X11, X1
	0x0334F5DC B.EQ 0x334F5FC
	0x0334F5E0 SUBS X9, X9, 0x1
	0x0334F5E4 ADD X10, X10, 0x10
	0x0334F5E8 B.NE 0x334F5D4
	0x0334F5EC MOV X0, X22
	0x0334F5F0 MOV W2, W31
	0x0334F5F4 BL 0x1C5C788
	0x0334F5F8 B 0x334F608
	0x0334F5FC LDRSW X9, [X10]
	0x0334F600 ADD X8, X8, X9, 0x4, LSL
	0x0334F604 ADD X0, X8, 0x138
	0x0334F608 LDP X8, X1, [X0]
	0x0334F60C MOV X0, X22
	0x0334F610 BLR X8
	0x0334F614 CBNZ X23, 0x334F620
	0x0334F618 MOV X0, X19
	0x0334F61C BL 0x1D2C690
	0x0334F620 MOV X0, X23
	0x0334F624 BL 0x1C16F18
	0x0334F628 BL 0x1990590

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move TEMP, X1
	005 And TEMP, TEMP, -2147483648
	006 Compare TEMP, -2147483648
	007 JumpIfEqual {22}
	008 Move X8, [X0]
	009 Move W19, W1
	010 Move X20, X0
	011 Move X9, [X8+376]
	012 Move X1, [X8+384]
	013 NotImplemented "Instruction BLR not yet implemented."
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X8, [X20+16]
	016 Compare X8, 0
	017 JumpIfEqual {27}
	018 Move W9, [X8+24]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Add X8, X8, W19
	021 Move X0, [X8+32]
	022 Move X0, X31
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Return X0
	027 Call 0x1C17F20
	028 Call 0x1C17F28

Method: System.String GetAotId()

Disassembly:
	0x0334F62C SUB X31, X31, 0x50
	0x0334F630 STP X30, X25, [X31 + 0x10]
	0x0334F634 STP X24, X23, [X31 + 0x20]
	0x0334F638 STP X22, X21, [X31 + 0x30]
	0x0334F63C STP X20, X19, [X31 + 0x40]
	0x0334F640 ADRP X21, 0x108D000
	0x0334F644 ADRP X20, 0xDA4000
	0x0334F648 LDRB W8, [X21 + 0xDAF]
	0x0334F64C LDR X20, [X20 + 0x8F0]
	0x0334F650 MOV X19, X0
	0x0334F654 TBNZ X8, 0x0, 0x334F678
	0x0334F658 ADRP X0, 0xDA4000
	0x0334F65C LDR X0, [X0 + 0x8F0]
	0x0334F660 BL 0x1C16CF4
	0x0334F664 ADRP X0, 0xDDB000
	0x0334F668 LDR X0, [X0 + 0x218]
	0x0334F66C BL 0x1C16CF4
	0x0334F670 MOVZ W8, 0x1
	0x0334F674 STRB W8, [X21 + 0xDAF]
	0x0334F678 LDR X0, [X20]
	0x0334F67C STRB W31, [X31 + 0xC]
	0x0334F680 STRB W31, [X31 + 0x8]
	0x0334F684 BL 0x1C16F10
	0x0334F688 MOV X1, X31
	0x0334F68C MOV X20, X0
	0x0334F690 BL 0x3231AC4
	0x0334F694 LDR X22, [X19 + 0x18]
	0x0334F698 CBZ X22, 0x334F744
	0x0334F69C LDR W8, [X22 + 0x18]
	0x0334F6A0 CMP W8, 0x1
	0x0334F6A4 B.LT 0x334F744
	0x0334F6A8 ADRP X25, 0xDDB000
	0x0334F6AC LDR X25, [X25 + 0x218]
	0x0334F6B0 MOV X23, X31
	0x0334F6B4 MOV W21, W31
	0x0334F6B8 ADD X24, X22, 0x20
	0x0334F6BC CMP W23, W8
	0x0334F6C0 B.CS 0x334F788
	0x0334F6C4 LDR X0, [X24, X23, LSL #3]
	0x0334F6C8 CBZ X0, 0x334F784
	0x0334F6CC AND W2, W21, 0x1
	0x0334F6D0 ADD X3, X31, 0xC
	0x0334F6D4 MOV X1, X20
	0x0334F6D8 BL 0x334E6F4
	0x0334F6DC MOV W21, W0
	0x0334F6E0 TBZ X0, 0x0, 0x334F730
	0x0334F6E4 LDRB W8, [X31 + 0xC]
	0x0334F6E8 CBNZ W8, 0x334F730
	0x0334F6EC MOV X0, X31
	0x0334F6F0 BL 0x33C1548

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X20, 0x108E000
	006 Move X19, 0xDD7000
	007 Move W8, [X20+3499]
	008 Move X19, [X19+2056]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xDD7000
	014 Move X0, [X0+2056]
	015 Call 0x1C17CF4
	016 Move X0, 0xDB0000
	017 Move X0, [X0+856]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3499], W8
	021 Move X8, [X19]
	022 Move [X31+16], X31
	023 Move [X31+24], X31
	024 Move X8, [X8+184]
	025 Move W9, [X8]
	026 Compare W9, 0
	027 JumpIfNotEqual {53}
	028 Move X0, X31
	029 Call RuntimeAssembly.GetAotId
	030 Compare X0, 0
	031 JumpIfEqual {49}
	032 Move X1, X0
	033 Add X0, X31, 0
	034 Move X2, X31
	035 Move [X31], X31
	036 Move [X31+8], X31
	037 Call Guid..ctor, X0, X1
	038 Move X8, 0xDB0000
	039 Move V0, [X31]
	040 Move X8, [X8+856]
	041 Add X0, X31, 16
	042 Move X2, X31
	043 Move [X31+1], V0
	044 Move X1, [X8]
	045 Call Guid.ToString, X0, X1
	046 Move X8, [X19]
	047 Move X8, [X8+184]
	048 Move [X8+8], X0
	049 Move X8, [X19]
	050 Move X8, [X8+184]
	051 Move W9, 1
	052 Move [X8], W9
	053 Move X0, [X8+8]
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X30, [X31+32]
	057 Add X31, X31, 64
	058 Return X0

Method: System.Boolean AddFrames(System.Text.StringBuilder sb, System.Boolean separator, out System.Boolean isAsync)

Disassembly:
	0x0334F6F4 CBZ X20, 0x334F784
	0x0334F6F8 MOV X1, X0
	0x0334F6FC MOV X0, X20
	0x0334F700 MOV X2, X31
	0x0334F704 BL 0x32333E0
	0x0334F708 LDR X1, [X25]
	0x0334F70C MOV X0, X20
	0x0334F710 MOV X2, X31
	0x0334F714 BL 0x32333E0
	0x0334F718 MOV X0, X31
	0x0334F71C BL 0x33C1548
	0x0334F720 MOV X1, X0
	0x0334F724 MOV X0, X20
	0x0334F728 MOV X2, X31
	0x0334F72C BL 0x32333E0
	0x0334F730 LDR W8, [X22 + 0x18]
	0x0334F734 ADD X23, X23, 0x1
	0x0334F738 CMP W23, W8
	0x0334F73C B.LT 0x334F6BC
	0x0334F740 B 0x334F748
	0x0334F744 MOV W21, W31
	0x0334F748 AND W2, W21, 0x1
	0x0334F74C ADD X3, X31, 0x8
	0x0334F750 MOV X0, X19
	0x0334F754 MOV X1, X20
	0x0334F758 BL 0x334E6F4
	0x0334F75C CBZ X20, 0x334F784
	0x0334F760 LDR X8, [X20]
	0x0334F764 MOV X0, X20
	0x0334F768 LDP X20, X19, [X31 + 0x40]
	0x0334F76C LDP X22, X21, [X31 + 0x30]
	0x0334F770 LDP X2, X1, [X8 + 0x168]
	0x0334F774 LDP X24, X23, [X31 + 0x20]
	0x0334F778 LDP X30, X25, [X31 + 0x10]
	0x0334F77C ADD X31, X31, 0x50
	0x0334F780 BR X2
	0x0334F784 BL 0x1C16F20
	0x0334F788 BL 0x1C16F28
	0x0334F78C LDR X8, [X0]
	0x0334F790 LDP X2, X1, [X8 + 0x168]
	0x0334F794 BR X2
	0x0334F798 STR X30, [X31 - 0x20]!
	0x0334F79C STP X20, X19, [X31 + 0x10]
	0x0334F7A0 MOV W19, W1
	0x0334F7A4 MOV X1, X31
	0x0334F7A8 MOV X20, X0
	0x0334F7AC BL 0x33A51F0
	0x0334F7B0 STR W19, [X20 + 0x10]
	0x0334F7B4 LDP X20, X19, [X31 + 0x10]
	0x0334F7B8 LDR X30, [X31], #0x20
	0x0334F7BC RET
	0x0334F7C0 STR W1, [X0 + 0x10]
	0x0334F7C4 RET
	0x0334F7C8 STR W1, [X0 + 0x14]
	0x0334F7CC RET
	0x0334F7D0 STR X1, [X0 + 0x18]
	0x0334F7D4 RET
	0x0334F7D8 STR X1, [X0 + 0x20]
	0x0334F7DC RET
	0x0334F7E0 STP X30, X19, [X31 - 0x10]!
	0x0334F7E4 MOV X1, X31
	0x0334F7E8 MOV X19, X0
	0x0334F7EC BL 0x33BDD8C
	0x0334F7F0 MOV X0, X19
	0x0334F7F4 MOV X1, X31
	0x0334F7F8 BL 0x33BE520
	0x0334F7FC CBZ X0, 0x334F818
	0x0334F800 LDR X8, [X0]
	0x0334F804 LDP X9, X1, [X8 + 0x1A8]
	0x0334F808 BLR X9
	0x0334F80C STR X0, [X19 + 0x10]
	0x0334F810 LDP X30, X19, [X31], #0x10
	0x0334F814 RET
	0x0334F818 BL 0x1C16F20
	0x0334F81C STR X30, [X31 - 0x20]!
	0x0334F820 STP X20, X19, [X31 + 0x10]
	0x0334F824 MOV X19, X1
	0x0334F828 MOV X1, X31
	0x0334F82C MOV X20, X0
	0x0334F830 BL 0x33BDD8C
	0x0334F834 STR X19, [X20 + 0x10]
	0x0334F838 LDP X20, X19, [X31 + 0x10]
	0x0334F83C LDR X30, [X31], #0x20
	0x0334F840 RET
	0x0334F844 STR X30, [X31 - 0x20]!
	0x0334F848 STP X20, X19, [X31 + 0x10]
	0x0334F84C MOV X1, X31
	0x0334F850 MOV X19, X3
	0x0334F854 MOV X20, X0
	0x0334F858 BL 0x33BDD8C
	0x0334F85C STR X19, [X20 + 0x10]
	0x0334F860 LDP X20, X19, [X31 + 0x10]
	0x0334F864 LDR X30, [X31], #0x20
	0x0334F868 RET
	0x0334F86C STP X30, X21, [X31 - 0x20]!
	0x0334F870 STP X20, X19, [X31 + 0x10]
	0x0334F874 LDR X8, [X0]
	0x0334F878 MOV X19, X0
	0x0334F87C LDP X9, X2, [X8 + 0x188]
	0x0334F880 MOV W1, W31
	0x0334F884 BLR X9
	0x0334F888 MOV X0, X19
	0x0334F88C LDP X20, X19, [X31 + 0x10]
	0x0334F890 MOV X1, X31
	0x0334F894 LDP X30, X21, [X31], #0x20
	0x0334F898 B 0x33CB4DC
	0x0334F89C CMP W1, 0x1
	0x0334F8A0 MOV X21, X0
	0x0334F8A4 B.NE 0x334F8D4
	0x0334F8A8 MOV X0, X21
	0x0334F8AC BL 0x3EB1AD0
	0x0334F8B0 LDR X20, [X0]
	0x0334F8B4 BL 0x3EB1AE0
	0x0334F8B8 MOV X0, X19
	0x0334F8BC MOV X1, X31
	0x0334F8C0 BL 0x33CB4DC
	0x0334F8C4 CBNZ X20, 0x334F8DC
	0x0334F8C8 LDP X20, X19, [X31 + 0x10]
	0x0334F8CC LDP X30, X21, [X31], #0x20
	0x0334F8D0 RET
	0x0334F8D4 MOV X20, X31
	0x0334F8D8 B 0x334F8E8
	0x0334F8DC MOV X0, X20
	0x0334F8E0 BL 0x1C16F18
	0x0334F8E4 MOV X21, X0
	0x0334F8E8 MOV X0, X19
	0x0334F8EC MOV X1, X31
	0x0334F8F0 BL 0x33CB4DC
	0x0334F8F4 CBNZ X20, 0x334F900
	0x0334F8F8 MOV X0, X21
	0x0334F8FC BL 0x1D2C690
	0x0334F900 MOV X0, X20
	0x0334F904 BL 0x1C16F18
	0x0334F908 BL 0x1990590
	0x0334F90C STR X1, [X0 + 0x10]
	0x0334F910 RET
	0x0334F914 MOV W0, W31
	0x0334F918 RET
	0x0334F91C MOV W0, W31
	0x0334F920 RET
	0x0334F924 STP X30, X21, [X31 - 0x20]!
	0x0334F928 STP X20, X19, [X31 + 0x10]
	0x0334F92C ADRP X21, 0x108D000
	0x0334F930 ADRP X20, 0xDAB000
	0x0334F934 LDRB W8, [X21 + 0xDB0]
	0x0334F938 LDR X20, [X20 + 0xC10]
	0x0334F93C MOV X19, X0
	0x0334F940 TBNZ X8, 0x0, 0x334F958
	0x0334F944 ADRP X0, 0xDAB000
	0x0334F948 LDR X0, [X0 + 0xC10]
	0x0334F94C BL 0x1C16CF4
	0x0334F950 MOVZ W8, 0x1
	0x0334F954 STRB W8, [X21 + 0xDB0]
	0x0334F958 LDR X8, [X19]
	0x0334F95C MOVZ W1, 0x1
	0x0334F960 MOV X0, X19
	0x0334F964 LDP X9, X2, [X8 + 0x188]
	0x0334F968 BLR X9
	0x0334F96C LDR X0, [X20]
	0x0334F970 LDR W8, [X0 + 0xE0]
	0x0334F974 CBNZ W8, 0x334F97C
	0x0334F978 BL 0x1C16DFC
	0x0334F97C MOV X0, X19
	0x0334F980 LDP X20, X19, [X31 + 0x10]
	0x0334F984 MOV X1, X31
	0x0334F988 LDP X30, X21, [X31], #0x20
	0x0334F98C B 0x33B3E9C
	0x0334F990 RET
	0x0334F994 STR X30, [X31 - 0x30]!
	0x0334F998 STP X22, X21, [X31 + 0x10]
	0x0334F99C STP X20, X19, [X31 + 0x20]
	0x0334F9A0 ADRP X19, 0x108D000
	0x0334F9A4 ADRP X22, 0xDA4000
	0x0334F9A8 ADRP X21, 0xDA4000
	0x0334F9AC LDRB W8, [X19 + 0xDB1]
	0x0334F9B0 LDR X22, [X22 + 0x9D0]
	0x0334F9B4 LDR X21, [X21 + 0x758]
	0x0334F9B8 MOV W20, W2
	0x0334F9BC TBNZ X8, 0x0, 0x334F9E0
	0x0334F9C0 ADRP X0, 0xDA4000
	0x0334F9C4 LDR X0, [X0 + 0x758]
	0x0334F9C8 BL 0x1C16CF4
	0x0334F9CC ADRP X0, 0xDA4000
	0x0334F9D0 LDR X0, [X0 + 0x9D0]
	0x0334F9D4 BL 0x1C16CF4
	0x0334F9D8 MOVZ W8, 0x1
	0x0334F9DC STRB W8, [X19 + 0xDB1]
	0x0334F9E0 LDR X0, [X22]
	0x0334F9E4 MOVZ W1, 0x1
	0x0334F9E8 BL 0x1C16D6C
	0x0334F9EC MOV X19, X0
	0x0334F9F0 LDR X0, [X21]
	0x0334F9F4 ADD X1, X31, 0xC
	0x0334F9F8 STR W20, [X31 + 0xC]
	0x0334F9FC BL 0x1C16E04
	0x0334FA00 CBZ X19, 0x334FA3C
	0x0334FA04 MOV X20, X0
	0x0334FA08 CBZ X0, 0x334FA20
	0x0334FA0C LDR X8, [X19]
	0x0334FA10 MOV X0, X20
	0x0334FA14 LDR X1, [X8 + 0x40]
	0x0334FA18 BL 0x1C16E00
	0x0334FA1C CBZ X0, 0x334FA44
	0x0334FA20 LDR W8, [X19 + 0x18]
	0x0334FA24 CBZ W8, 0x334FA40
	0x0334FA28 STR X20, [X19 + 0x20]
	0x0334FA2C LDP X20, X19, [X31 + 0x20]
	0x0334FA30 LDP X22, X21, [X31 + 0x10]
	0x0334FA34 LDR X30, [X31], #0x30
	0x0334FA38 RET
	0x0334FA3C BL 0x1C16F20
	0x0334FA40 BL 0x1C16F28
	0x0334FA44 BL 0x1C16F44
	0x0334FA48 MOV X1, X31
	0x0334FA4C BL 0x1C16DEC
	0x0334FA50 RET
	0x0334FA54 SUB X31, X31, 0x40
	0x0334FA58 STP X30, X23, [X31 + 0x10]
	0x0334FA5C STP X22, X21, [X31 + 0x20]
	0x0334FA60 STP X20, X19, [X31 + 0x30]
	0x0334FA64 ADRP X20, 0x108D000
	0x0334FA68 ADRP X23, 0xDA4000
	0x0334FA6C ADRP X22, 0xDA4000
	0x0334FA70 LDRB W8, [X20 + 0xDB2]
	0x0334FA74 LDR X23, [X23 + 0x9D0]
	0x0334FA78 LDR X22, [X22 + 0x758]
	0x0334FA7C MOV W19, W3
	0x0334FA80 MOV W21, W2
	0x0334FA84 TBNZ X8, 0x0, 0x334FAA8
	0x0334FA88 ADRP X0, 0xDA4000
	0x0334FA8C LDR X0, [X0 + 0x758]
	0x0334FA90 BL 0x1C16CF4
	0x0334FA94 ADRP X0, 0xDA4000
	0x0334FA98 LDR X0, [X0 + 0x9D0]
	0x0334FA9C BL 0x1C16CF4
	0x0334FAA0 MOVZ W8, 0x1
	0x0334FAA4 STRB W8, [X20 + 0xDB2]
	0x0334FAA8 LDR X0, [X23]
	0x0334FAAC MOVZ W1, 0x2
	0x0334FAB0 BL 0x1C16D6C
	0x0334FAB4 MOV X20, X0
	0x0334FAB8 LDR X0, [X22]
	0x0334FABC ADD X1, X31, 0xC
	0x0334FAC0 STR W21, [X31 + 0xC]
	0x0334FAC4 BL 0x1C16E04
	0x0334FAC8 CBZ X20, 0x334FB54
	0x0334FACC MOV X21, X0
	0x0334FAD0 CBZ X0, 0x334FAE8
	0x0334FAD4 LDR X8, [X20]
	0x0334FAD8 MOV X0, X21
	0x0334FADC LDR X1, [X8 + 0x40]
	0x0334FAE0 BL 0x1C16E00
	0x0334FAE4 CBZ X0, 0x334FB48
	0x0334FAE8 LDR W8, [X20 + 0x18]
	0x0334FAEC CBZ W8, 0x334FB44
	0x0334FAF0 STR X21, [X20 + 0x20]
	0x0334FAF4 LDR X0, [X22]
	0x0334FAF8 ADD X1, X31, 0x8
	0x0334FAFC STR W19, [X31 + 0x8]
	0x0334FB00 BL 0x1C16E04
	0x0334FB04 MOV X19, X0
	0x0334FB08 CBZ X0, 0x334FB20
	0x0334FB0C LDR X8, [X20]
	0x0334FB10 MOV X0, X19
	0x0334FB14 LDR X1, [X8 + 0x40]
	0x0334FB18 BL 0x1C16E00
	0x0334FB1C CBZ X0, 0x334FB48
	0x0334FB20 LDR W8, [X20 + 0x18]
	0x0334FB24 CMP W8, 0x1
	0x0334FB28 B.LS 0x334FB44
	0x0334FB2C STR X19, [X20 + 0x28]
	0x0334FB30 LDP X20, X19, [X31 + 0x30]
	0x0334FB34 LDP X22, X21, [X31 + 0x20]
	0x0334FB38 LDP X30, X23, [X31 + 0x10]
	0x0334FB3C ADD X31, X31, 0x40
	0x0334FB40 RET
	0x0334FB44 BL 0x1C16F28
	0x0334FB48 BL 0x1C16F44
	0x0334FB4C MOV X1, X31
	0x0334FB50 BL 0x1C16DEC
	0x0334FB54 BL 0x1C16F20
	0x0334FB58 SUB X31, X31, 0x50
	0x0334FB5C STR X30, [X31 + 0x10]
	0x0334FB60 STP X24, X23, [X31 + 0x20]
	0x0334FB64 STP X22, X21, [X31 + 0x30]
	0x0334FB68 STP X20, X19, [X31 + 0x40]
	0x0334FB6C ADRP X20, 0x108D000
	0x0334FB70 ADRP X24, 0xDA4000
	0x0334FB74 ADRP X23, 0xDA4000
	0x0334FB78 LDRB W8, [X20 + 0xDB3]
	0x0334FB7C LDR X24, [X24 + 0x9D0]
	0x0334FB80 LDR X23, [X23 + 0x758]
	0x0334FB84 MOV W19, W4
	0x0334FB88 MOV W21, W3
	0x0334FB8C MOV W22, W2
	0x0334FB90 TBNZ X8, 0x0, 0x334FBB4
	0x0334FB94 ADRP X0, 0xDA4000
	0x0334FB98 LDR X0, [X0 + 0x758]
	0x0334FB9C BL 0x1C16CF4
	0x0334FBA0 ADRP X0, 0xDA4000

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X23, 0x108E000
	015 Move W8, [X23+3500]
	016 Move X19, X3
	017 Move W20, W2
	018 Move X21, X1
	019 Move X22, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {62}
	024 Move X0, 0xDA5000
	025 Move X0, [X0+1880]
	026 Call 0x1C17CF4
	027 Move X0, 0xDA7000
	028 Move X0, [X0+2656]
	029 Call 0x1C17CF4
	030 Move X0, 0xDAD000
	031 Move X0, [X0+1824]
	032 Call 0x1C17CF4
	033 Move X0, 0xDDC000
	034 Move X0, [X0+432]
	035 Call 0x1C17CF4
	036 Move X0, 0xDDC000
	037 Move X0, [X0+440]
	038 Call 0x1C17CF4
	039 Move X0, 0xDDC000
	040 Move X0, [X0+448]
	041 Call 0x1C17CF4
	042 Move X0, 0xDDC000
	043 Move X0, [X0+456]
	044 Call 0x1C17CF4
	045 Move X0, 0xDDC000
	046 Move X0, [X0+464]
	047 Call 0x1C17CF4
	048 Move X0, 0xDDC000
	049 Move X0, [X0+472]
	050 Call 0x1C17CF4
	051 Move X0, 0xDDC000
	052 Move X0, [X0+480]
	053 Call 0x1C17CF4
	054 Move X0, 0xDDC000
	055 Move X0, [X0+488]
	056 Call 0x1C17CF4
	057 Move X0, 0xDB0000
	058 Move X0, [X0+856]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X23+3500], W8
	062 Move [X31+44], W31
	063 Move [X31+24], X31
	064 Move [X31+32], X31
	065 Move [X19], W31
	066 Move X8, [X22]
	067 Move X0, X22
	068 Move X9, [X8+376]
	069 Move X1, [X8+384]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X27, 0xDDC000
	073 Move X28, 0xDA7000
	074 Move X29, 0xDA5000
	075 Move X26, 0xDDC000
	076 Move X27, [X27+480]
	077 Move X28, [X28+2656]
	078 Move X29, [X29+1880]
	079 Move X26, [X26+448]
	080 Move W25, W31
	081 Move W23, W31
	082 Move [X31+8], W20
	083 Move X8, [X22]
	084 Move X0, X22
	085 Move W1, W23
	086 Move X9, [X8+392]
	087 Move X2, [X8+400]
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Compare X0, 0
	090 JumpIfEqual {338}
	091 Move X8, [X0]
	092 Move X24, X0
	093 Move X9, [X8+424]
	094 Move X1, [X8+432]
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move X1, X31
	097 Move X2, X31
	098 Call MethodBase.op_Equality, X0, X1
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {116}
	103 Or W8, W25, W20
	104 Move TEMP, X8
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {151}
	108 Move X0, X31
	109 Call Environment.get_NewLine
	110 Compare X21, 0
	111 JumpIfEqual {338}
	112 Move X1, X0
	113 Move X0, X21
	114 Move X2, X31
	115 Call StringBuilder.Append, X0, X1
	116 Move X8, [X24]
	117 Move X0, X24
	118 Move X9, [X8+424]
	119 Move X1, [X8+432]
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Or W8, W25, W20
	122 And W3, W8, 1
	123 Add X4, X31, 44
	124 Move X1, X21
	125 Move X2, X0
	126 Move X5, X19
	127 Call StackTrace.GetFullNameForStackTrace, X0, X1, X2, X3, X4, X5
	128 Move W8, [X31+44]
	129 Compare W8, 0
	130 JumpIfNotEqual {315}
	131 Move X8, [X24]
	132 Move X0, X24
	133 Move X9, [X8+408]
	134 Move X1, [X8+416]
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Add W31, W0, 1
	137 Move X8, [X24]
	138 Move X0, X24
	139 Move X9, [X8+408]
	140 Move X1, [X8+416]
	141 NotImplemented "Instruction BLR not yet implemented."
	142 Move X8, [X29]
	143 Move [X31+16], W0
	144 Add X1, X31, 16
	145 Move X0, X8
	146 Call 0x1C17E04
	147 Compare X21, 0
	148 JumpIfEqual {338}
	149 Move X8, 0xDDC000
	150 Move X8, [X8+456]
	151 Compare X21, 0
	152 JumpIfEqual {338}
	153 Move X1, [X27]
	154 Move X0, X21
	155 Move X2, X31
	156 Call StringBuilder.Append, X0, X1
	157 Move X1, [X24+64]
	158 Compare X1, 0
	159 JumpIfEqual {163}
	160 Move X0, X21
	161 Move X2, X31
	162 Call StringBuilder.Append, X0, X1
	163 Move X8, [X24+24]
	164 Move X0, [X28]
	165 Add X1, X31, 16
	166 Move [X31+16], X8
	167 Call 0x1C17E04
	168 Move X8, [X24]
	169 Move X25, X0
	170 Move X0, X24
	171 Move X9, [X8+440]
	172 Move X1, [X8+448]
	173 NotImplemented "Instruction BLR not yet implemented."
	174 Move X8, [X29]
	175 Move [X31+12], W0
	176 Add X1, X31, 12
	177 Move X0, X8
	178 Call 0x1C17E04
	179 Move X1, [X26]
	180 Move X8, [X24+24]
	181 Move X0, [X28]
	182 Add X1, X31, 16
	183 Move [X31+16], X8
	184 Call 0x1C17E04
	185 Move X8, [X24]
	186 Move X25, X0
	187 Move X0, X24
	188 Move X9, [X8+440]
	189 Move X1, [X8+448]
	190 NotImplemented "Instruction BLR not yet implemented."
	191 Move X8, [X29]
	192 Move [X31+12], W0
	193 Add X1, X31, 12
	194 Move X0, X8
	195 Call 0x1C17E04
	196 Compare X21, 0
	197 JumpIfEqual {338}
	198 Move X8, 0xDDC000
	199 Move X8, [X8+488]
	200 Move X3, X0
	201 Move X0, X21
	202 Move X2, X25
	203 Move X1, [X8]
	204 Move X4, X31
	205 Call StringBuilder.AppendFormat, X0, X1, X2, X3
	206 Move W8, [X24+32]
	207 Move TEMP, 0xFF000000
	208 Not TEMP
	209 Move W9, TEMP
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move X9, 0xDAD000
	212 Move X9, [X9+1824]
	213 Add X1, X31, 16
	214 Move [X31+16], W8
	215 Move X0, [X9]
	216 Call 0x1C17E04
	217 Move X8, 0xDDC000
	218 Move X8, [X8+440]
	219 Move X2, X0
	220 Move X1, [X8]
	221 Move X0, X21
	222 Move X3, X31
	223 Call StringBuilder.AppendFormat, X0, X1, X2
	224 Move X0, X24
	225 Call StackFrame.GetSecureFileName, X0
	226 Compare X0, 0
	227 JumpIfEqual {338}
	228 Move W1, W31
	229 Move X2, X31
	230 Move X25, X0
	231 Call String.get_Chars, X0, X1
	232 And W8, W0, 0xFFFF
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move X8, [X24]
	235 Move X0, X24
	236 Move X20, X19
	237 Move X19, X29
	238 Move X9, [X8+424]
	239 Move X1, [X8+432]
	240 Move X29, X27
	241 Move X27, X28
	242 NotImplemented "Instruction BLR not yet implemented."
	243 Compare X0, 0
	244 JumpIfEqual {338}
	245 Move X8, [X0]
	246 Move X28, X26
	247 Move X9, [X8+472]
	248 Move X1, [X8+480]
	249 NotImplemented "Instruction BLR not yet implemented."
	250 Compare X0, 0
	251 JumpIfEqual {338}
	252 Move X8, [X0]
	253 Move X9, [X8+440]
	254 Move X1, [X8+448]
	255 NotImplemented "Instruction BLR not yet implemented."
	256 Move X8, 0xDB0000
	257 Move X8, [X8+856]
	258 Move [X31+24], X0
	259 Move [X31+32], X1
	260 Add X0, X31, 24
	261 Move X2, X31
	262 Move X8, [X8]
	263 Move X1, X8
	264 Call Guid.ToString, X0, X1
	265 Move X25, X0
	266 Call StackTrace.GetAotId
	267 Move X8, [X24]
	268 Move X26, X0
	269 Move X0, X24
	270 Move X9, [X8+408]
	271 Move X1, [X8+416]
	272 NotImplemented "Instruction BLR not yet implemented."
	273 Compare X26, 0
	274 JumpIfEqual {283}
	275 Add W31, W0, 1
	276 Move X8, 0xDDC000
	277 Move X8, [X8+464]
	278 Move X1, X25
	279 Move X2, X26
	280 Move X3, X31
	281 Move X0, [X8]
	282 Call String.Format, X0, X1, X2
	283 Move X8, 0xDDC000
	284 Move X8, [X8+432]
	285 Move X1, X25
	286 Move X2, X31
	287 Move X0, [X8]
	288 Call String.Format, X0, X1
	289 Move X26, X28
	290 Move X28, X27
	291 Move X27, X29
	292 Move X29, X19
	293 Move X19, X20
	294 Move W20, [X31+8]
	295 Move X25, X0
	296 Move X8, [X24]
	297 Move X0, X24
	298 Move X9, [X8+376]
	299 Move X1, [X8+384]
	300 NotImplemented "Instruction BLR not yet implemented."
	301 Move X8, [X29]
	302 Move [X31+16], W0
	303 Add X1, X31, 16
	304 Move X0, X8
	305 Call 0x1C17E04
	306 Move X8, 0xDDC000
	307 Move X8, [X8+472]
	308 Move X1, [X8]
	309 Move X3, X0
	310 Move X0, X21
	311 Move X2, X25
	312 Move X4, X31
	313 Call StringBuilder.AppendFormat, X0, X1, X2, X3
	314 Move W25, 1
	315 Move X8, [X22]
	316 Move X0, X22
	317 Add W23, W23, 1
	318 Move X9, [X8+376]
	319 Move X1, [X8+384]
	320 NotImplemented "Instruction BLR not yet implemented."
	321 NotImplemented "Instruction CMP not yet implemented."
	322 Move W25, W31
	323 And W0, W25, 1
	324 Move X20, [X31+128]
	325 Move X19, [X31+136]
	326 Move X22, [X31+112]
	327 Move X21, [X31+120]
	328 Move X24, [X31+96]
	329 Move X23, [X31+104]
	330 Move X26, [X31+80]
	331 Move X25, [X31+88]
	332 Move X28, [X31+64]
	333 Move X27, [X31+72]
	334 Move X29, [X31+48]
	335 Move X30, [X31+56]
	336 Add X31, X31, 144
	337 Return X0
	338 Call 0x1C17F20

Method: System.Void GetFullNameForStackTrace(System.Text.StringBuilder sb, System.Reflection.MethodBase mi, System.Boolean needsNewLine, out System.Boolean skipped, out System.Boolean isAsync)

Disassembly:
	0x0334FBA4 LDR X0, [X0 + 0x9D0]
	0x0334FBA8 BL 0x1C16CF4
	0x0334FBAC MOVZ W8, 0x1
	0x0334FBB0 STRB W8, [X20 + 0xDB3]
	0x0334FBB4 LDR X0, [X24]
	0x0334FBB8 MOVZ W1, 0x3
	0x0334FBBC BL 0x1C16D6C
	0x0334FBC0 MOV X20, X0
	0x0334FBC4 LDR X0, [X23]
	0x0334FBC8 ADD X1, X31, 0x1C
	0x0334FBCC STR W22, [X31 + 0x1C]
	0x0334FBD0 BL 0x1C16E04
	0x0334FBD4 CBZ X20, 0x334FCA0
	0x0334FBD8 MOV X22, X0
	0x0334FBDC CBZ X0, 0x334FBF4
	0x0334FBE0 LDR X8, [X20]
	0x0334FBE4 MOV X0, X22
	0x0334FBE8 LDR X1, [X8 + 0x40]
	0x0334FBEC BL 0x1C16E00
	0x0334FBF0 CBZ X0, 0x334FC94
	0x0334FBF4 LDR W8, [X20 + 0x18]
	0x0334FBF8 CBZ W8, 0x334FC90
	0x0334FBFC STR X22, [X20 + 0x20]
	0x0334FC00 LDR X0, [X23]
	0x0334FC04 ADD X1, X31, 0x18
	0x0334FC08 STR W21, [X31 + 0x18]
	0x0334FC0C BL 0x1C16E04
	0x0334FC10 MOV X21, X0
	0x0334FC14 CBZ X0, 0x334FC2C
	0x0334FC18 LDR X8, [X20]
	0x0334FC1C MOV X0, X21
	0x0334FC20 LDR X1, [X8 + 0x40]
	0x0334FC24 BL 0x1C16E00
	0x0334FC28 CBZ X0, 0x334FC94
	0x0334FC2C LDR W8, [X20 + 0x18]
	0x0334FC30 CMP W8, 0x1
	0x0334FC34 B.LS 0x334FC90
	0x0334FC38 STR X21, [X20 + 0x28]
	0x0334FC3C LDR X0, [X23]
	0x0334FC40 ADD X1, X31, 0xC
	0x0334FC44 STR W19, [X31 + 0xC]
	0x0334FC48 BL 0x1C16E04
	0x0334FC4C MOV X19, X0
	0x0334FC50 CBZ X0, 0x334FC68
	0x0334FC54 LDR X8, [X20]
	0x0334FC58 MOV X0, X19
	0x0334FC5C LDR X1, [X8 + 0x40]
	0x0334FC60 BL 0x1C16E00
	0x0334FC64 CBZ X0, 0x334FC94
	0x0334FC68 LDR W8, [X20 + 0x18]
	0x0334FC6C CMP W8, 0x2
	0x0334FC70 B.LS 0x334FC90
	0x0334FC74 STR X19, [X20 + 0x30]
	0x0334FC78 LDP X20, X19, [X31 + 0x40]
	0x0334FC7C LDP X22, X21, [X31 + 0x30]
	0x0334FC80 LDP X24, X23, [X31 + 0x20]
	0x0334FC84 LDR X30, [X31 + 0x10]
	0x0334FC88 ADD X31, X31, 0x50
	0x0334FC8C RET
	0x0334FC90 BL 0x1C16F28
	0x0334FC94 BL 0x1C16F44
	0x0334FC98 MOV X1, X31
	0x0334FC9C BL 0x1C16DEC
	0x0334FCA0 BL 0x1C16F20
	0x0334FCA4 STP X30, X23, [X31 - 0x30]!
	0x0334FCA8 STP X22, X21, [X31 + 0x10]
	0x0334FCAC STP X20, X19, [X31 + 0x20]
	0x0334FCB0 ADRP X20, 0x108D000
	0x0334FCB4 ADRP X23, 0xDA4000
	0x0334FCB8 LDRB W8, [X20 + 0xDB4]
	0x0334FCBC LDR X23, [X23 + 0x9D0]
	0x0334FCC0 MOV X19, X4
	0x0334FCC4 MOV X21, X3
	0x0334FCC8 MOV X22, X2
	0x0334FCCC TBNZ X8, 0x0, 0x334FCE4
	0x0334FCD0 ADRP X0, 0xDA4000
	0x0334FCD4 LDR X0, [X0 + 0x9D0]
	0x0334FCD8 BL 0x1C16CF4
	0x0334FCDC MOVZ W8, 0x1
	0x0334FCE0 STRB W8, [X20 + 0xDB4]
	0x0334FCE4 LDR X0, [X23]
	0x0334FCE8 MOVZ W1, 0x3
	0x0334FCEC BL 0x1C16D6C
	0x0334FCF0 CBZ X0, 0x334FD8C
	0x0334FCF4 MOV X20, X0
	0x0334FCF8 CBZ X22, 0x334FD10
	0x0334FCFC LDR X8, [X20]
	0x0334FD00 MOV X0, X22
	0x0334FD04 LDR X1, [X8 + 0x40]
	0x0334FD08 BL 0x1C16E00
	0x0334FD0C CBZ X0, 0x334FD80
	0x0334FD10 LDR W8, [X20 + 0x18]
	0x0334FD14 CBZ W8, 0x334FD7C
	0x0334FD18 STR X22, [X20 + 0x20]
	0x0334FD1C CBZ X21, 0x334FD38
	0x0334FD20 LDR X8, [X20]
	0x0334FD24 MOV X0, X21
	0x0334FD28 LDR X1, [X8 + 0x40]
	0x0334FD2C BL 0x1C16E00
	0x0334FD30 CBZ X0, 0x334FD80
	0x0334FD34 LDR W8, [X20 + 0x18]
	0x0334FD38 CMP W8, 0x1
	0x0334FD3C B.LS 0x334FD7C
	0x0334FD40 STR X21, [X20 + 0x28]
	0x0334FD44 CBZ X19, 0x334FD60
	0x0334FD48 LDR X8, [X20]
	0x0334FD4C MOV X0, X19
	0x0334FD50 LDR X1, [X8 + 0x40]
	0x0334FD54 BL 0x1C16E00
	0x0334FD58 CBZ X0, 0x334FD80
	0x0334FD5C LDR W8, [X20 + 0x18]
	0x0334FD60 CMP W8, 0x2
	0x0334FD64 B.LS 0x334FD7C
	0x0334FD68 STR X19, [X20 + 0x30]
	0x0334FD6C LDP X20, X19, [X31 + 0x20]
	0x0334FD70 LDP X22, X21, [X31 + 0x10]
	0x0334FD74 LDP X30, X23, [X31], #0x30
	0x0334FD78 RET
	0x0334FD7C BL 0x1C16F28
	0x0334FD80 BL 0x1C16F44
	0x0334FD84 MOV X1, X31
	0x0334FD88 BL 0x1C16DEC
	0x0334FD8C BL 0x1C16F20
	0x0334FD90 RET
	0x0334FD94 STR X1, [X0]
	0x0334FD98 RET
	0x0334FD9C STR W1, [X0 + 0x8]
	0x0334FDA0 RET
	0x0334FDA4 STR W1, [X0 + 0xC]
	0x0334FDA8 RET
	0x0334FDAC STR X1, [X0 + 0x10]
	0x0334FDB0 RET
	0x0334FDB4 STR X1, [X0 + 0x18]
	0x0334FDB8 RET
	0x0334FDBC MOV X1, X31
	0x0334FDC0 B 0x33A51F0
	0x0334FDC4 MOV X1, X31
	0x0334FDC8 B 0x33A51F0
	0x0334FDCC MOV X1, X31
	0x0334FDD0 B 0x33A51F0
	0x0334FDD4 STR X30, [X31 - 0x20]!
	0x0334FDD8 STP X20, X19, [X31 + 0x10]
	0x0334FDDC AND W20, W1, 0x1
	0x0334FDE0 MOV X1, X31
	0x0334FDE4 MOV X19, X0
	0x0334FDE8 BL 0x33A51F0
	0x0334FDEC STRB W20, [X19 + 0x10]
	0x0334FDF0 LDP X20, X19, [X31 + 0x10]
	0x0334FDF4 LDR X30, [X31], #0x20
	0x0334FDF8 RET
	0x0334FDFC STR X30, [X31 - 0x20]!
	0x0334FE00 STP X20, X19, [X31 + 0x10]
	0x0334FE04 MOV X20, X1
	0x0334FE08 MOV X1, X31
	0x0334FE0C MOV X19, X0
	0x0334FE10 BL 0x33BDD8C
	0x0334FE14 CBZ X20, 0x334FE38
	0x0334FE18 LDR X8, [X20]
	0x0334FE1C MOV X0, X20
	0x0334FE20 LDP X9, X1, [X8 + 0x1F8]
	0x0334FE24 BLR X9
	0x0334FE28 STR X0, [X19 + 0x10]
	0x0334FE2C LDP X20, X19, [X31 + 0x10]
	0x0334FE30 LDR X30, [X31], #0x20
	0x0334FE34 RET
	0x0334FE38 ADRP X0, 0xDA9000
	0x0334FE3C LDR X0, [X0 + 0x528]
	0x0334FE40 BL 0x1C16D08
	0x0334FE44 BL 0x1C16F10
	0x0334FE48 MOV X19, X0
	0x0334FE4C ADRP X0, 0xDD2000
	0x0334FE50 LDR X0, [X0 + 0xFF0]
	0x0334FE54 BL 0x1C16D08
	0x0334FE58 MOV X1, X0
	0x0334FE5C MOV X0, X19
	0x0334FE60 MOV X2, X31
	0x0334FE64 BL 0x330E100
	0x0334FE68 ADRP X0, 0xDDB000
	0x0334FE6C LDR X0, [X0 + 0x220]
	0x0334FE70 BL 0x1C16D08
	0x0334FE74 MOV X1, X0
	0x0334FE78 MOV X0, X19
	0x0334FE7C BL 0x1C16DEC
	0x0334FE80 STR X30, [X31 - 0x30]!
	0x0334FE84 STP X22, X21, [X31 + 0x10]
	0x0334FE88 STP X20, X19, [X31 + 0x20]
	0x0334FE8C ADRP X21, 0x108D000
	0x0334FE90 LDRB W8, [X21 + 0xDB5]
	0x0334FE94 MOV X20, X1
	0x0334FE98 MOV X19, X0
	0x0334FE9C TBNZ X8, 0x0, 0x334FED8
	0x0334FEA0 ADRP X0, 0xDDB000
	0x0334FEA4 LDR X0, [X0 + 0x228]
	0x0334FEA8 BL 0x1C16CF4
	0x0334FEAC ADRP X0, 0xDD2000
	0x0334FEB0 LDR X0, [X0 + 0xFD0]
	0x0334FEB4 BL 0x1C16CF4
	0x0334FEB8 ADRP X0, 0xDA4000
	0x0334FEBC LDR X0, [X0 + 0x6C0]
	0x0334FEC0 BL 0x1C16CF4
	0x0334FEC4 ADRP X0, 0xDDB000
	0x0334FEC8 LDR X0, [X0 + 0x230]
	0x0334FECC BL 0x1C16CF4
	0x0334FED0 MOVZ W8, 0x1
	0x0334FED4 STRB W8, [X21 + 0xDB5]
	0x0334FED8 MOV X0, X19
	0x0334FEDC MOV X1, X31
	0x0334FEE0 BL 0x33BDD8C
	0x0334FEE4 CBZ X20, 0x334FFA8
	0x0334FEE8 ADRP X8, 0xDA4000
	0x0334FEEC LDR X8, [X8 + 0x6C0]
	0x0334FEF0 ADRP X22, 0xDDB000
	0x0334FEF4 LDR X0, [X8]
	0x0334FEF8 ADRP X8, 0xDDB000
	0x0334FEFC LDR X8, [X8 + 0x228]
	0x0334FF00 LDR W9, [X0 + 0xE0]
	0x0334FF04 LDR X21, [X8]
	0x0334FF08 LDR X22, [X22 + 0x230]
	0x0334FF0C CBNZ W9, 0x334FF14
	0x0334FF10 BL 0x1C16DFC
	0x0334FF14 MOV X0, X21
	0x0334FF18 MOV X1, X31
	0x0334FF1C BL 0x338C698
	0x0334FF20 LDR X1, [X22]
	0x0334FF24 MOV X2, X0
	0x0334FF28 MOV X0, X20
	0x0334FF2C MOV X3, X31
	0x0334FF30 BL 0x32A9678
	0x0334FF34 CBZ X0, 0x334FF94
	0x0334FF38 ADRP X8, 0xDD2000
	0x0334FF3C LDR X8, [X8 + 0xFD0]
	0x0334FF40 LDR X9, [X0]
	0x0334FF44 LDR X1, [X8]
	0x0334FF48 LDRB W10, [X9 + 0x130]
	0x0334FF4C LDRB W8, [X1 + 0x130]
	0x0334FF50 CMP W10, W8
	0x0334FF54 B.CC 0x334FF90
	0x0334FF58 LDR X10, [X9 + 0xC8]
	0x0334FF5C SUB X9, X8, 0x1
	0x0334FF60 LDR X10, [X10, X9, LSL #3]
	0x0334FF64 CMP X10, X1
	0x0334FF68 B.NE 0x334FF90
	0x0334FF6C STR X0, [X19 + 0x10]
	0x0334FF70 LDR X10, [X0]
	0x0334FF74 LDRB W11, [X10 + 0x130]
	0x0334FF78 CMP W11, W8
	0x0334FF7C B.CC 0x334FF90
	0x0334FF80 LDR X8, [X10 + 0xC8]
	0x0334FF84 LDR X8, [X8, X9, LSL #3]
	0x0334FF88 CMP X8, X1
	0x0334FF8C B.EQ 0x334FF98
	0x0334FF90 BL 0x1C171E0
	0x0334FF94 STR X31, [X19 + 0x10]
	0x0334FF98 LDP X20, X19, [X31 + 0x20]
	0x0334FF9C LDP X22, X21, [X31 + 0x10]
	0x0334FFA0 LDR X30, [X31], #0x30
	0x0334FFA4 RET
	0x0334FFA8 ADRP X0, 0xDA9000
	0x0334FFAC LDR X0, [X0 + 0x528]
	0x0334FFB0 BL 0x1C16D08
	0x0334FFB4 BL 0x1C16F10
	0x0334FFB8 MOV X19, X0
	0x0334FFBC ADRP X0, 0xDCE000
	0x0334FFC0 LDR X0, [X0 + 0x2D8]
	0x0334FFC4 BL 0x1C16D08
	0x0334FFC8 MOV X1, X0
	0x0334FFCC MOV X0, X19
	0x0334FFD0 MOV X2, X31
	0x0334FFD4 BL 0x330E100
	0x0334FFD8 ADRP X0, 0xDDB000
	0x0334FFDC LDR X0, [X0 + 0x238]
	0x0334FFE0 BL 0x1C16D08
	0x0334FFE4 MOV X1, X0
	0x0334FFE8 MOV X0, X19
	0x0334FFEC BL 0x1C16DEC
	0x0334FFF0 STP X30, X21, [X31 - 0x20]!
	0x0334FFF4 STP X20, X19, [X31 + 0x10]
	0x0334FFF8 ADRP X21, 0x108D000
	0x0334FFFC LDRB W8, [X21 + 0xDB6]
	0x03350000 MOV X19, X1
	0x03350004 MOV X20, X0
	0x03350008 TBNZ X8, 0x0, 0x3350020
	0x0335000C ADRP X0, 0xDDA000
	0x03350010 LDR X0, [X0 + 0x230]
	0x03350014 BL 0x1C16CF4
	0x03350018 MOVZ W8, 0x1
	0x0335001C STRB W8, [X21 + 0xDB6]
	0x03350020 CBZ X19, 0x3350048
	0x03350024 ADRP X8, 0xDDA000
	0x03350028 LDR X8, [X8 + 0x230]
	0x0335002C LDR X2, [X20 + 0x10]
	0x03350030 MOV X0, X19
	0x03350034 LDP X20, X19, [X31 + 0x10]
	0x03350038 LDR X1, [X8]
	0x0335003C MOV X3, X31
	0x03350040 LDP X30, X21, [X31], #0x20
	0x03350044 B 0x32A8BF0
	0x03350048 ADRP X0, 0xDA8000
	0x0335004C LDR X0, [X0 + 0x528]
	0x03350050 BL 0x1C16D08
	0x03350054 BL 0x1C16F10
	0x03350058 MOV X19, X0
	0x0335005C ADRP X0, 0xDCD000
	0x03350060 LDR X0, [X0 + 0x2D8]
	0x03350064 BL 0x1C16D08
	0x03350068 MOV X1, X0
	0x0335006C MOV X0, X19
	0x03350070 MOV X2, X31
	0x03350074 BL 0x330E100
	0x03350078 ADRP X0, 0xDDA000
	0x0335007C LDR X0, [X0 + 0x240]
	0x03350080 BL 0x1C16D08
	0x03350084 MOV X1, X0
	0x03350088 MOV X0, X19
	0x0335008C BL 0x1C16DEC
	0x03350090 STR X30, [X31 - 0x30]!
	0x03350094 STP X22, X21, [X31 + 0x10]
	0x03350098 STP X20, X19, [X31 + 0x20]
	0x0335009C ADRP X22, 0x108C000
	0x033500A0 LDRB W8, [X22 + 0xDB7]
	0x033500A4 MOV X20, X2
	0x033500A8 MOV X19, X1
	0x033500AC MOV X21, X0
	0x033500B0 TBNZ X8, 0x0, 0x33500D4
	0x033500B4 ADRP X0, 0xDDA000
	0x033500B8 LDR X0, [X0 + 0x248]
	0x033500BC BL 0x1C16CF4
	0x033500C0 ADRP X0, 0xDA5000
	0x033500C4 LDR X0, [X0 + 0x278]
	0x033500C8 BL 0x1C16CF4
	0x033500CC MOVZ W8, 0x1
	0x033500D0 STRB W8, [X22 + 0xDB7]
	0x033500D4 CMP X19, X20
	0x033500D8 B.EQ 0x3350130
	0x033500DC CBZ X19, 0x3350138
	0x033500E0 CBZ X20, 0x3350140
	0x033500E4 ADRP X8, 0xDA5000
	0x033500E8 LDR X8, [X8 + 0x278]
	0x033500EC LDR X9, [X19]
	0x033500F0 LDR X10, [X20]
	0x033500F4 LDR X8, [X8]
	0x033500F8 CMP X9, X8
	0x033500FC CSEL X1, X19, X31, EQ
	0x03350100 CMP X10, X8
	0x03350104 CSEL X2, X20, X31, EQ
	0x03350108 CBZ X1, 0x3350148
	0x0335010C CBZ X2, 0x3350148
	0x03350110 LDR X0, [X21 + 0x10]
	0x03350114 CBZ X0, 0x3350250
	0x03350118 LDR X8, [X0]
	0x0335011C LDP X20, X19, [X31 + 0x20]
	0x03350120 LDP X22, X21, [X31 + 0x10]
	0x03350124 LDP X4, X3, [X8 + 0x198]
	0x03350128 LDR X30, [X31], #0x30
	0x0335012C BR X4
	0x03350130 MOV W0, W31
	0x03350134 B 0x3350240
	0x03350138 MOVN W0, 0x0
	0x0335013C B 0x3350240
	0x03350140 MOVZ W0, 0x1
	0x03350144 B 0x3350240
	0x03350148 ADRP X22, 0xDDA000
	0x0335014C LDR X22, [X22 + 0x248]
	0x03350150 MOV X0, X19
	0x03350154 LDR X1, [X22]
	0x03350158 BL 0x1C16E00
	0x0335015C CBZ X0, 0x33501A4
	0x03350160 LDR X8, [X0]
	0x03350164 LDR X1, [X22]
	0x03350168 MOV X21, X0
	0x0335016C LDRH W9, [X8 + 0x12E]
	0x03350170 CBZ X9, 0x3350194
	0x03350174 LDR X10, [X8 + 0xB0]
	0x03350178 ADD X10, X10, 0x8
	0x0335017C LDUR X11, [X10 - 0x8]
	0x03350180 CMP X11, X1
	0x03350184 B.EQ 0x33501F8
	0x03350188 SUBS X9, X9, 0x1
	0x0335018C ADD X10, X10, 0x10
	0x03350190 B.NE 0x335017C
	0x03350194 MOV X0, X21
	0x03350198 MOV W2, W31
	0x0335019C BL 0x1C5C788
	0x033501A0 B 0x3350204
	0x033501A4 LDR X1, [X22]
	0x033501A8 MOV X0, X20
	0x033501AC BL 0x1C16E00
	0x033501B0 CBZ X0, 0x3350254
	0x033501B4 LDR X8, [X0]
	0x033501B8 LDR X1, [X22]
	0x033501BC MOV X20, X0
	0x033501C0 LDRH W9, [X8 + 0x12E]
	0x033501C4 CBZ X9, 0x33501E8
	0x033501C8 LDR X10, [X8 + 0xB0]
	0x033501CC ADD X10, X10, 0x8

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+24], X2
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X24, 0x108E000
	015 Move W8, [X24+3501]
	016 Move X21, X5
	017 Move X22, X4
	018 Move W20, W3
	019 Move X23, X2
	020 Move X19, X1
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {66}
	025 Move X0, 0xDDC000
	026 Move X0, [X0+496]
	027 Call 0x1C17CF4
	028 Move X0, 0xDD6000
	029 Move X0, [X0+632]
	030 Call 0x1C17CF4
	031 Move X0, 0xDDC000
	032 Move X0, [X0+504]
	033 Call 0x1C17CF4
	034 Move X0, 0xDA5000
	035 Move X0, [X0+1728]
	036 Call 0x1C17CF4
	037 Move X0, 0xDA5000
	038 Move X0, [X0+3544]
	039 Call 0x1C17CF4
	040 Move X0, 0xDDC000
	041 Move X0, [X0+480]
	042 Call 0x1C17CF4
	043 Move X0, 0xDA5000
	044 Move X0, [X0+2104]
	045 Call 0x1C17CF4
	046 Move X0, 0xDA6000
	047 Move X0, [X0+1544]
	048 Call 0x1C17CF4
	049 Move X0, 0xDA7000
	050 Move X0, [X0+928]
	051 Call 0x1C17CF4
	052 Move X0, 0xDA5000
	053 Move X0, [X0+3784]
	054 Call 0x1C17CF4
	055 Move X0, 0xDA6000
	056 Move X0, [X0+1552]
	057 Call 0x1C17CF4
	058 Move X0, 0xDA5000
	059 Move X0, [X0+2120]
	060 Call 0x1C17CF4
	061 Move X0, 0xDAE000
	062 Move X0, [X0+1936]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X24+3501], W8
	066 Compare X23, 0
	067 JumpIfEqual {447}
	068 Move X8, [X23]
	069 Move X0, X23
	070 Move X9, [X8+440]
	071 Move X1, [X8+448]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move [X31+8], X0
	074 Compare X0, 0
	075 JumpIfEqual {447}
	076 Move X8, [X0]
	077 Move X24, X0
	078 Move X9, [X8+968]
	079 Move X1, [X8+976]
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {136}
	085 Move X8, [X24]
	086 Move X0, X24
	087 Move X9, [X8+984]
	088 Move X1, [X8+992]
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {136}
	094 Move X8, [X24]
	095 Move X0, X24
	096 Move X9, [X8+1096]
	097 Move X1, [X8+1104]
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move [X31+8], X0
	100 Compare X0, 0
	101 JumpIfEqual {447}
	102 Move X8, [X0]
	103 Move W1, 62
	104 Move X24, X0
	105 Move X9, [X8+1880]
	106 Move X2, [X8+1888]
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Compare X0, 0
	109 JumpIfEqual {447}
	110 Move W8, [X0+24]
	111 Move X25, X0
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move W28, W31
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Add X8, X25, W28
	116 Move X26, [X8+32]
	117 Compare X26, 0
	118 JumpIfEqual {447}
	119 Move X8, [X26]
	120 Move X0, X26
	121 Move X9, [X8+568]
	122 Move X1, [X8+576]
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move X8, [X23]
	125 Move W27, W0
	126 Move X0, X23
	127 Move X9, [X8+568]
	128 Move X1, [X8+576]
	129 NotImplemented "Instruction BLR not yet implemented."
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move W8, [X25+24]
	132 Add W28, W28, 1
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move [X31+24], X26
	135 Move X23, X26
	136 Move X26, 0xDA5000
	137 Move X26, [X26+1728]
	138 Move X8, 0xDDC000
	139 Move X0, [X26]
	140 Move X8, [X8+496]
	141 Move W9, [X0+224]
	142 Move X25, [X8]
	143 Compare W9, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Move X0, X25
	147 Move X1, X31
	148 Call Type.GetTypeFromHandle, X0
	149 Compare X0, 0
	150 JumpIfEqual {447}
	151 Move X8, [X0]
	152 Move X25, 0xDDC000
	153 Move X1, X24
	154 Move X9, [X8+680]
	155 Move X2, [X8+688]
	156 Move X25, [X25+504]
	157 NotImplemented "Instruction BLR not yet implemented."
	158 And W8, W0, 1
	159 Move [X21], W8
	160 Move X0, [X25]
	161 Move X1, X31
	162 Call Type.GetTypeFromHandle, X0
	163 Move X1, X0
	164 Move X0, X23
	165 Move X2, X31
	166 Call CustomAttributeExtensions.IsDefined, X0, X1
	167 Move TEMP, X0
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfNotEqual {173}
	171 Move W8, 1
	172 Move [X22], W8
	173 Move X0, [X26]
	174 Move X23, [X25]
	175 Move W8, [X0+224]
	176 Compare W8, 0
	177 JumpIfNotEqual {179}
	178 Call 0x1C17DFC
	179 Move X0, X23
	180 Move X1, X31
	181 Call Type.GetTypeFromHandle, X0
	182 Move X1, X0
	183 Move X0, X24
	184 Move X2, X31
	185 Call CustomAttributeExtensions.IsDefined, X0, X1
	186 And W8, W0, 1
	187 Move [X22], W8
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfEqual {434}
	192 Move W8, [X21]
	193 Compare W8, 0
	194 JumpIfEqual {198}
	195 Add X0, X31, 24
	196 Add X1, X31, 8
	197 Call StackTrace.ConvertAsyncStateMachineMethod, X0, X1
	198 Move TEMP, X20
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfNotEqual {210}
	202 Move X0, X31
	203 Call Environment.get_NewLine
	204 Compare X19, 0
	205 JumpIfEqual {447}
	206 Move X1, X0
	207 Move X0, X19
	208 Move X2, X31
	209 Call StringBuilder.Append, X0, X1
	210 Compare X19, 0
	211 JumpIfEqual {447}
	212 Move X8, 0xDDC000
	213 Move X8, [X8+480]
	214 Move X0, X19
	215 Move X2, X31
	216 Move X1, [X8]
	217 Call StringBuilder.Append, X0, X1
	218 Move X0, [X31+8]
	219 Compare X0, 0
	220 JumpIfEqual {447}
	221 Move X8, [X0]
	222 Move X9, [X8+360]
	223 Move X1, [X8+368]
	224 NotImplemented "Instruction BLR not yet implemented."
	225 Move X1, X0
	226 Move X0, X19
	227 Move X2, X31
	228 Call StringBuilder.Append, X0, X1
	229 Move X8, 0xDAE000
	230 Move X8, [X8+1936]
	231 Move X0, X19
	232 Move X2, X31
	233 Move X1, [X8]
	234 Call StringBuilder.Append, X0, X1
	235 Move X20, [X31+24]
	236 Compare X20, 0
	237 JumpIfEqual {447}
	238 Move X8, [X20]
	239 Move X0, X20
	240 Move X9, [X8+424]
	241 Move X1, [X8+432]
	242 NotImplemented "Instruction BLR not yet implemented."
	243 Move X1, X0
	244 Move X0, X19
	245 Move X2, X31
	246 Call StringBuilder.Append, X0, X1
	247 Move X8, [X20]
	248 Move X0, X20
	249 Move X9, [X8+728]
	250 Move X1, [X8+736]
	251 NotImplemented "Instruction BLR not yet implemented."
	252 Move TEMP, X0
	253 And TEMP, TEMP, 1
	254 Compare TEMP, 1
	255 JumpIfNotEqual {322}
	256 Move X9, 0xDD6000
	257 Move X9, [X9+632]
	258 Move X8, [X20]
	259 Move X1, [X9]
	260 Move W10, [X8+304]
	261 Move W9, [X1+304]
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Move X10, [X8+200]
	264 Add X9, X10, X9
	265 NotImplemented "Instruction LDUR not yet implemented."
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Move X9, [X8+968]
	268 Move X1, [X8+976]
	269 Move X0, X20
	270 NotImplemented "Instruction BLR not yet implemented."
	271 Move [X31+24], X0
	272 Compare X0, 0
	273 JumpIfEqual {447}
	274 Move X8, [X0]
	275 Move X20, X0
	276 Move X9, [X8+760]
	277 Move X1, [X8+768]
	278 NotImplemented "Instruction BLR not yet implemented."
	279 Move X8, 0xDA5000
	280 Move X8, [X8+3784]
	281 Move X21, X0
	282 Move X0, X19
	283 Move X2, X31
	284 Move X1, [X8]
	285 Call StringBuilder.Append, X0, X1
	286 Compare X21, 0
	287 JumpIfEqual {447}
	288 Move W8, [X21+24]
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Move X23, 0xDA7000
	291 Move X23, [X23+928]
	292 Move W22, W31
	293 Compare W22, 0
	294 JumpIfEqual {300}
	295 Move X1, [X23]
	296 Move X0, X19
	297 Move X2, X31
	298 Call StringBuilder.Append, X0, X1
	299 Move W8, [X21+24]
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Add X8, X21, W22
	302 Move X0, [X8+32]
	303 Compare X0, 0
	304 JumpIfEqual {447}
	305 Move X8, [X0]
	306 Move X9, [X8+424]
	307 Move X1, [X8+432]
	308 NotImplemented "Instruction BLR not yet implemented."
	309 Move X1, X0
	310 Move X0, X19
	311 Move X2, X31
	312 Call StringBuilder.Append, X0, X1
	313 Move W8, [X21+24]
	314 Add W22, W22, 1
	315 NotImplemented "Instruction CMP not yet implemented."
	316 Move X8, 0xDA4000
	317 Move X8, [X8+2120]
	318 Move X0, X19
	319 Move X2, X31
	320 Move X1, [X8]
	321 Call StringBuilder.Append, X0, X1
	322 Move X8, [X20]
	323 Move X0, X20
	324 Move X9, [X8+584]
	325 Move X1, [X8+592]
	326 NotImplemented "Instruction BLR not yet implemented."
	327 Move X8, 0xDA5000
	328 Move X8, [X8+1552]
	329 Move X20, X0
	330 Move X0, X19
	331 Move X2, X31
	332 Move X1, [X8]
	333 Call StringBuilder.Append, X0, X1
	334 Compare X20, 0
	335 JumpIfEqual {447}
	336 Move W8, [X20+24]
	337 NotImplemented "Instruction CMP not yet implemented."
	338 Move X23, 0xDA4000
	339 Move X24, 0xDA4000
	340 Move X23, [X23+3544]
	341 Move X24, [X24+2104]
	342 Move W22, W31
	343 Compare W22, 0
	344 JumpIfEqual {350}
	345 Move X1, [X24]
	346 Move X0, X19
	347 Move X2, X31
	348 Call StringBuilder.Append, X0, X1
	349 Move W8, [X20+24]
	350 NotImplemented "Instruction CMP not yet implemented."
	351 Add X25, X20, W22
	352 Add X25, X25, 32
	353 Move X0, [X25]
	354 Compare X0, 0
	355 JumpIfEqual {447}
	356 Move X8, [X0]
	357 Move X9, [X8+472]
	358 Move X1, [X8+480]
	359 NotImplemented "Instruction BLR not yet implemented."
	360 Compare X0, 0
	361 JumpIfEqual {447}
	362 Move X8, [X0]
	363 Move X21, X0
	364 Move X9, [X8+968]
	365 Move X1, [X8+976]
	366 NotImplemented "Instruction BLR not yet implemented."
	367 Move TEMP, X0
	368 And TEMP, TEMP, 1
	369 Compare TEMP, 1
	370 JumpIfNotEqual {388}
	371 Move X8, [X21]
	372 Move X0, X21
	373 Move X9, [X8+984]
	374 Move X1, [X8+992]
	375 NotImplemented "Instruction BLR not yet implemented."
	376 Move TEMP, X0
	377 And TEMP, TEMP, 1
	378 Compare TEMP, 1
	379 JumpIfEqual {388}
	380 Move X8, [X21]
	381 Move X0, X21
	382 Move X9, [X8+1096]
	383 Move X1, [X8+1104]
	384 NotImplemented "Instruction BLR not yet implemented."
	385 Move X21, X0
	386 Compare X0, 0
	387 JumpIfEqual {447}
	388 Move X8, [X21]
	389 Move X0, X21
	390 Move X9, [X8+360]
	391 Move X1, [X8+368]
	392 NotImplemented "Instruction BLR not yet implemented."
	393 Move X1, X0
	394 Move X0, X19
	395 Move X2, X31
	396 Call StringBuilder.Append, X0, X1
	397 Move W8, [X20+24]
	398 NotImplemented "Instruction CMP not yet implemented."
	399 Move X0, [X25]
	400 Compare X0, 0
	401 JumpIfEqual {447}
	402 Move X8, [X0]
	403 Move X9, [X8+456]
	404 Move X1, [X8+464]
	405 NotImplemented "Instruction BLR not yet implemented."
	406 Compare X0, 0
	407 JumpIfEqual {425}
	408 Move X1, [X23]
	409 Move X0, X19
	410 Move X2, X31
	411 Call StringBuilder.Append, X0, X1
	412 Move W8, [X20+24]
	413 NotImplemented "Instruction CMP not yet implemented."
	414 Move X0, [X25]
	415 Compare X0, 0
	416 JumpIfEqual {447}
	417 Move X8, [X0]
	418 Move X9, [X8+456]
	419 Move X1, [X8+464]
	420 NotImplemented "Instruction BLR not yet implemented."
	421 Move X1, X0
	422 Move X0, X19
	423 Move X2, X31
	424 Call StringBuilder.Append, X0, X1
	425 Move W8, [X20+24]
	426 Add W22, W22, 1
	427 NotImplemented "Instruction CMP not yet implemented."
	428 Move X8, 0xDA5000
	429 Move X8, [X8+1544]
	430 Move X0, X19
	431 Move X2, X31
	432 Move X1, [X8]
	433 Call StringBuilder.Append, X0, X1
	434 Move X20, [X31+96]
	435 Move X19, [X31+104]
	436 Move X22, [X31+80]
	437 Move X21, [X31+88]
	438 Move X24, [X31+64]
	439 Move X23, [X31+72]
	440 Move X26, [X31+48]
	441 Move X25, [X31+56]
	442 Move X28, [X31+32]
	443 Move X27, [X31+40]
	444 Move X30, [X31+16]
	445 Add X31, X31, 112
	446 Return 
	447 Call 0x1C17F20
	448 Call 0x1C17F28
	449 Move X0, X20
	450 Call 0x1C181E0

Method: System.Void ConvertAsyncStateMachineMethod(ref System.Reflection.MethodBase method, ref System.Type declaringType)

Disassembly:
	0x033501D0 LDUR X11, [X10 - 0x8]
	0x033501D4 CMP X11, X1
	0x033501D8 B.EQ 0x3350220
	0x033501DC SUBS X9, X9, 0x1
	0x033501E0 ADD X10, X10, 0x10
	0x033501E4 B.NE 0x33501D0
	0x033501E8 MOV X0, X20
	0x033501EC MOV W2, W31
	0x033501F0 BL 0x1C5C788
	0x033501F4 B 0x335022C
	0x033501F8 LDRSW X9, [X10]
	0x033501FC ADD X8, X8, X9, 0x4, LSL
	0x03350200 ADD X0, X8, 0x138
	0x03350204 LDP X3, X2, [X0]
	0x03350208 MOV X0, X21
	0x0335020C MOV X1, X20
	0x03350210 LDP X20, X19, [X31 + 0x20]
	0x03350214 LDP X22, X21, [X31 + 0x10]
	0x03350218 LDR X30, [X31], #0x30
	0x0335021C BR X3
	0x03350220 LDRSW X9, [X10]
	0x03350224 ADD X8, X8, X9, 0x4, LSL
	0x03350228 ADD X0, X8, 0x138
	0x0335022C LDP X8, X2, [X0]
	0x03350230 MOV X0, X20
	0x03350234 MOV X1, X19
	0x03350238 BLR X8
	0x0335023C SUB W0, W31, W0
	0x03350240 LDP X20, X19, [X31 + 0x20]
	0x03350244 LDP X22, X21, [X31 + 0x10]
	0x03350248 LDR X30, [X31], #0x30
	0x0335024C RET
	0x03350250 BL 0x1C16F20
	0x03350254 ADRP X0, 0xDAB000
	0x03350258 LDR X0, [X0 + 0x578]
	0x0335025C BL 0x1C16D08
	0x03350260 BL 0x1C16F10
	0x03350264 MOV X19, X0
	0x03350268 ADRP X0, 0xDDA000
	0x0335026C LDR X0, [X0 + 0x250]
	0x03350270 BL 0x1C16D08
	0x03350274 MOV X1, X0
	0x03350278 MOV X0, X19
	0x0335027C MOV X2, X31
	0x03350280 BL 0x3314A68
	0x03350284 ADRP X0, 0xDDA000
	0x03350288 LDR X0, [X0 + 0x258]
	0x0335028C BL 0x1C16D08
	0x03350290 MOV X1, X0
	0x03350294 MOV X0, X19
	0x03350298 BL 0x1C16DEC
	0x0335029C STP X30, X21, [X31 - 0x20]!
	0x033502A0 STP X20, X19, [X31 + 0x10]
	0x033502A4 ADRP X20, 0x108C000
	0x033502A8 ADRP X19, 0xDA5000
	0x033502AC LDRB W8, [X20 + 0xDB8]
	0x033502B0 LDR X19, [X19 + 0xC48]
	0x033502B4 TBNZ X8, 0x0, 0x33502D8
	0x033502B8 ADRP X0, 0xDCC000
	0x033502BC LDR X0, [X0 + 0xD30]
	0x033502C0 BL 0x1C16CF4
	0x033502C4 ADRP X0, 0xDA5000
	0x033502C8 LDR X0, [X0 + 0xC48]
	0x033502CC BL 0x1C16CF4
	0x033502D0 MOVZ W8, 0x1
	0x033502D4 STRB W8, [X20 + 0xDB8]
	0x033502D8 LDR X0, [X19]
	0x033502DC ADRP X21, 0xDCC000
	0x033502E0 LDR W8, [X0 + 0xE0]
	0x033502E4 LDR X21, [X21 + 0xD30]
	0x033502E8 CBNZ W8, 0x33502F0
	0x033502EC BL 0x1C16DFC
	0x033502F0 MOV X0, X31
	0x033502F4 BL 0x33387A0
	0x033502F8 LDR X8, [X21]
	0x033502FC MOV X19, X0
	0x03350300 MOV X0, X8
	0x03350304 BL 0x1C16F10
	0x03350308 MOV X1, X19
	0x0335030C MOV X20, X0
	0x03350310 BL 0x334FDFC
	0x03350314 LDR X8, [X21]
	0x03350318 MOV X0, X31
	0x0335031C LDR X8, [X8 + 0xB8]
	0x03350320 STR X20, [X8]
	0x03350324 BL 0x3338524
	0x03350328 LDR X8, [X21]
	0x0335032C MOV X19, X0
	0x03350330 MOV X0, X8
	0x03350334 BL 0x1C16F10
	0x03350338 MOV X1, X19
	0x0335033C MOV X20, X0
	0x03350340 BL 0x334FDFC
	0x03350344 LDR X8, [X21]
	0x03350348 LDR X8, [X8 + 0xB8]
	0x0335034C STR X20, [X8 + 0x8]
	0x03350350 LDP X20, X19, [X31 + 0x10]
	0x03350354 LDP X30, X21, [X31], #0x20
	0x03350358 RET
	0x0335035C STP X1, X2, [X0]
	0x03350360 RET
	0x03350364 LDR X0, [X0]
	0x03350368 RET
	0x0335036C LDR X0, [X0 + 0x8]
	0x03350370 RET
	0x03350374 STR X30, [X31 - 0x20]!
	0x03350378 STP X20, X19, [X31 + 0x10]
	0x0335037C ADRP X20, 0x108C000
	0x03350380 LDRB W8, [X20 + 0xDBA]
	0x03350384 MOV W19, W0
	0x03350388 TBZ X8, 0x0, 0x335039C
	0x0335038C TBNZ X19, 0x0, 0x33503B4
	0x03350390 CMP W19, 0x2
	0x03350394 CSET W0, EQ
	0x03350398 B 0x3350420
	0x0335039C ADRP X0, 0xDA3000
	0x033503A0 LDR X0, [X0 + 0x5A8]
	0x033503A4 BL 0x1C16CF4
	0x033503A8 MOVZ W8, 0x1
	0x033503AC STRB W8, [X20 + 0xDBA]
	0x033503B0 TBZ X19, 0x0, 0x3350390
	0x033503B4 ADRP X8, 0xDA3000
	0x033503B8 LDR X8, [X8 + 0x5A8]
	0x033503BC LDR X0, [X8]
	0x033503C0 LDR W8, [X0 + 0xE0]
	0x033503C4 CBNZ W8, 0x33503CC
	0x033503C8 BL 0x1C16DFC
	0x033503CC SCVTF D0, W19
	0x033503D0 MOVZ X8, 0x7FF00000
	0x033503D4 FSQRT D0, D0
	0x033503D8 FMOV D1, X8
	0x033503DC FCVTZS W8, D0
	0x033503E0 FCMP D0, D1
	0x033503E4 MOVZ W9, 0x80000000
	0x033503E8 CSEL W8, W9, W8, EQ
	0x033503EC CMP W8, 0x3
	0x033503F0 B.GE 0x33503FC
	0x033503F4 MOVZ W0, 0x1
	0x033503F8 B 0x3350420
	0x033503FC MOVZ W9, 0x3
	0x03350400 SDIV W10, W19, W9
	0x03350404 MSUB W10, W10, W9, W19
	0x03350408 CBZ W10, 0x3350418
	0x0335040C ADD W9, W9, 0x2
	0x03350410 CMP W9, W8
	0x03350414 B.LE 0x3350400
	0x03350418 CMP W10, 0x0
	0x0335041C CSET W0, NE
	0x03350420 LDP X20, X19, [X31 + 0x10]
	0x03350424 LDR X30, [X31], #0x20
	0x03350428 RET
	0x0335042C STP X30, X25, [X31 - 0x40]!
	0x03350430 STP X24, X23, [X31 + 0x10]
	0x03350434 STP X22, X21, [X31 + 0x20]
	0x03350438 STP X20, X19, [X31 + 0x30]
	0x0335043C ADRP X20, 0x108C000
	0x03350440 LDRB W8, [X20 + 0xDBB]
	0x03350444 MOV W19, W0
	0x03350448 TBNZ X8, 0x0, 0x3350460
	0x0335044C ADRP X0, 0xDCE000
	0x03350450 LDR X0, [X0 + 0x548]
	0x03350454 BL 0x1C16CF4
	0x03350458 MOVZ W8, 0x1
	0x0335045C STRB W8, [X20 + 0xDBB]
	0x03350460 TBNZ X19, 0x1F, 0x335056C
	0x03350464 ADRP X21, 0xDCE000
	0x03350468 LDR X21, [X21 + 0x548]
	0x0335046C MOV W20, W31
	0x03350470 LDR X0, [X21]
	0x03350474 LDR W8, [X0 + 0xE0]
	0x03350478 CBNZ W8, 0x3350484
	0x0335047C BL 0x1C16DFC
	0x03350480 LDR X0, [X21]
	0x03350484 LDR X8, [X0 + 0xB8]
	0x03350488 LDR X8, [X8]
	0x0335048C CBZ X8, 0x3350564
	0x03350490 LDR W8, [X8 + 0x18]
	0x03350494 CMP W20, W8
	0x03350498 B.GE 0x33504E0
	0x0335049C LDR W8, [X0 + 0xE0]
	0x033504A0 CBNZ W8, 0x33504AC
	0x033504A4 BL 0x1C16DFC
	0x033504A8 LDR X0, [X21]
	0x033504AC LDR X8, [X0 + 0xB8]
	0x033504B0 LDR X8, [X8]
	0x033504B4 CBZ X8, 0x3350564
	0x033504B8 LDR W9, [X8 + 0x18]
	0x033504BC CMP W20, W9
	0x033504C0 B.CS 0x3350568
	0x033504C4 ADD X8, X8, W20, 0x2, SXTW
	0x033504C8 LDR W8, [X8 + 0x20]
	0x033504CC ADD W20, W20, 0x1
	0x033504D0 CMP W8, W19
	0x033504D4 B.LT 0x3350474
	0x033504D8 MOV W19, W8
	0x033504DC B 0x335054C
	0x033504E0 ORR W20, W19, 0x1
	0x033504E4 MOVN W8, 0x80000000
	0x033504E8 CMP W20, W8
	0x033504EC B.EQ 0x335054C
	0x033504F0 MOVZ W22, 0xB16D
	0x033504F4 MOVZ W23, 0xBE19
	0x033504F8 MOVZ W24, 0xDF0C
	0x033504FC MOVZ W25, 0xFFFD
	0x03350500 MOVK W22, 0x7C320000
	0x03350504 MOVK W23, 0x85110000
	0x03350508 MOVK W24, 0x2880000
	0x0335050C MOVK W25, 0x7FFF0000
	0x03350510 LDR W8, [X0 + 0xE0]
	0x03350514 CBNZ W8, 0x335051C
	0x03350518 BL 0x1C16DFC
	0x0335051C MOV W0, W20
	0x03350520 BL 0x3350374
	0x03350524 TBZ X0, 0x0, 0x3350534
	0x03350528 MADD W8, W20, W22, W23
	0x0335052C CMP W8, W24
	0x03350530 B.HI 0x3350548
	0x03350534 CMP W20, W25
	0x03350538 B.EQ 0x335054C
	0x0335053C LDR X0, [X21]
	0x03350540 ADD W20, W20, 0x2
	0x03350544 B 0x3350510
	0x03350548 MOV W19, W20
	0x0335054C MOV W0, W19
	0x03350550 LDP X20, X19, [X31 + 0x30]
	0x03350554 LDP X22, X21, [X31 + 0x20]
	0x03350558 LDP X24, X23, [X31 + 0x10]
	0x0335055C LDP X30, X25, [X31], #0x40
	0x03350560 RET
	0x03350564 BL 0x1C16F20
	0x03350568 BL 0x1C16F28
	0x0335056C ADRP X0, 0xDAB000
	0x03350570 LDR X0, [X0 + 0x578]
	0x03350574 BL 0x1C16D08
	0x03350578 BL 0x1C16F10
	0x0335057C MOV X19, X0
	0x03350580 ADRP X0, 0xDDA000
	0x03350584 LDR X0, [X0 + 0x260]
	0x03350588 BL 0x1C16D08
	0x0335058C MOV X1, X0
	0x03350590 MOV X0, X19
	0x03350594 MOV X2, X31
	0x03350598 BL 0x3314A68
	0x0335059C ADRP X0, 0xDDA000
	0x033505A0 LDR X0, [X0 + 0x268]
	0x033505A4 BL 0x1C16D08
	0x033505A8 MOV X1, X0
	0x033505AC MOV X0, X19
	0x033505B0 BL 0x1C16DEC
	0x033505B4 STR X30, [X31 - 0x20]!
	0x033505B8 STP X20, X19, [X31 + 0x10]
	0x033505BC ADRP X20, 0x108C000
	0x033505C0 LDRB W8, [X20 + 0xDBC]
	0x033505C4 MOV W19, W0
	0x033505C8 TBNZ X8, 0x0, 0x33505E0
	0x033505CC ADRP X0, 0xDCE000
	0x033505D0 LDR X0, [X0 + 0x548]
	0x033505D4 BL 0x1C16CF4
	0x033505D8 MOVZ W8, 0x1
	0x033505DC STRB W8, [X20 + 0xDBC]
	0x033505E0 MOVZ W8, 0xFFFC
	0x033505E4 MOVK W8, 0x7FEF0000
	0x033505E8 CMP W19, W8
	0x033505EC UBFM W19, W19, 0x1F, 0x1E
	0x033505F0 B.GT 0x3350610
	0x033505F4 ORR W9, W8, 0x2
	0x033505F8 CMP W19, W9
	0x033505FC B.CC 0x3350610
	0x03350600 LDP X20, X19, [X31 + 0x10]
	0x03350604 ORR W0, W8, 0x1
	0x03350608 LDR X30, [X31], #0x20
	0x0335060C RET
	0x03350610 ADRP X8, 0xDCE000
	0x03350614 LDR X8, [X8 + 0x548]
	0x03350618 LDR X0, [X8]
	0x0335061C LDR W8, [X0 + 0xE0]
	0x03350620 CBNZ W8, 0x3350628
	0x03350624 BL 0x1C16DFC
	0x03350628 MOV W0, W19

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x108D000
	015 Move W8, [X20+3502]
	016 Move X19, X1
	017 Move [X31+8], X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {42}
	022 Move X0, 0xDDB000
	023 Move X0, [X0+512]
	024 Call 0x1C17CF4
	025 Move X0, 0xDA4000
	026 Move X0, [X0+3584]
	027 Call 0x1C17CF4
	028 Move X0, 0xDDB000
	029 Move X0, [X0+520]
	030 Call 0x1C17CF4
	031 Move X0, 0xDDB000
	032 Move X0, [X0+528]
	033 Call 0x1C17CF4
	034 Move X0, 0xDA4000
	035 Move X0, [X0+3608]
	036 Call 0x1C17CF4
	037 Move X0, 0xDA4000
	038 Move X0, [X0+1728]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X20+3502], W8
	042 Move X0, [X19]
	043 Compare X0, 0
	044 JumpIfEqual {262}
	045 Move X8, [X0]
	046 Move X26, 0xDA4000
	047 Move X9, [X8+440]
	048 Move X1, [X8+448]
	049 Move X26, [X26+1728]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X8, [X26]
	052 Move X21, X0
	053 Move W9, [X8+224]
	054 Compare W9, 0
	055 JumpIfNotEqual {58}
	056 Move X0, X8
	057 Call 0x1C17DFC
	058 Move X0, X21
	059 Move X1, X31
	060 Move X2, X31
	061 Call Type.op_Equality, X0, X1
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {245}
	066 Compare X21, 0
	067 JumpIfEqual {262}
	068 Move X8, [X21]
	069 Move W1, 62
	070 Move X0, X21
	071 Move X9, [X8+1880]
	072 Move X2, [X8+1888]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Compare X0, 0
	075 JumpIfEqual {245}
	076 Move X8, [X0+24]
	077 Move X21, X0
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X29, 0xDDB000
	080 Move X27, 0xDA4000
	081 Move X20, 0xDDB000
	082 Move X29, [X29+512]
	083 Move X27, [X27+3608]
	084 Move X20, [X20+528]
	085 Move X28, X31
	086 And X8, X8, 0
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Add X8, X21, X28
	089 Move X23, [X8+32]
	090 Move X1, [X29]
	091 Move X0, X23
	092 Call 0x21A9B6C, X0
	093 Compare X0, 0
	094 JumpIfEqual {232}
	095 Move X8, [X0]
	096 Move X10, 0xDDB000
	097 Move X22, X0
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 Move X10, [X10+520]
	100 Move X1, [X10]
	101 Compare X9, 0
	102 JumpIfEqual {109}
	103 Move X10, [X8+176]
	104 Add X10, X10, 8
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Subtract X9, X9, 1
	108 Add X10, X10, 16
	109 Move X0, X22
	110 Move W2, W31
	111 Call 0x1C5D788
	112 NotImplemented "Instruction LDRSW not yet implemented."
	113 Add X8, X8, X9
	114 Add X0, X8, 312
	115 Move X8, [X0]
	116 Move X1, [X0+8]
	117 Move X0, X22
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move X22, X0
	120 Compare X0, 0
	121 JumpIfEqual {236}
	122 Move X8, [X22]
	123 Move X1, [X27]
	124 NotImplemented "Instruction LDRH not yet implemented."
	125 Compare X9, 0
	126 JumpIfEqual {133}
	127 Move X10, [X8+176]
	128 Add X10, X10, 8
	129 NotImplemented "Instruction LDUR not yet implemented."
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Subtract X9, X9, 1
	132 Add X10, X10, 16
	133 Move X0, X22
	134 Move W2, W31
	135 Call 0x1C5D788
	136 NotImplemented "Instruction LDRSW not yet implemented."
	137 Add X8, X8, X9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X1, [X0+8]
	141 Move X0, X22
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {200}
	147 Move X8, [X22]
	148 Move X1, [X20]
	149 NotImplemented "Instruction LDRH not yet implemented."
	150 Compare X9, 0
	151 JumpIfEqual {158}
	152 Move X10, [X8+176]
	153 Add X10, X10, 8
	154 NotImplemented "Instruction LDUR not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Subtract X9, X9, 1
	157 Add X10, X10, 16
	158 Move X0, X22
	159 Move W2, W31
	160 Call 0x1C5D788
	161 NotImplemented "Instruction LDRSW not yet implemented."
	162 Add X8, X8, X9
	163 Add X0, X8, 312
	164 Move X8, [X0]
	165 Move X1, [X0+8]
	166 Move X0, X22
	167 NotImplemented "Instruction BLR not yet implemented."
	168 Compare X0, 0
	169 JumpIfEqual {235}
	170 Move X8, [X26]
	171 Move X24, [X0+16]
	172 Move X25, [X19]
	173 Move W9, [X8+224]
	174 Compare W9, 0
	175 JumpIfNotEqual {178}
	176 Move X0, X8
	177 Call 0x1C17DFC
	178 Move X0, X24
	179 Move X1, X25
	180 Move X2, X31
	181 Call Type.op_Equality, X0, X1
	182 Move TEMP, X0
	183 And TEMP, TEMP, 1
	184 Compare TEMP, 1
	185 JumpIfNotEqual {122}
	186 Move X8, [X31+8]
	187 Move [X8], X23
	188 Compare X23, 0
	189 JumpIfEqual {237}
	190 Move X8, [X23]
	191 Move X9, [X8+440]
	192 Move X1, [X8+448]
	193 Move X0, X23
	194 NotImplemented "Instruction BLR not yet implemented."
	195 Move X23, X31
	196 Move [X19], X0
	197 Move W24, 9
	198 Compare X22, 0
	199 JumpIfNotEqual {204}
	200 Move X23, X31
	201 Move W24, 6
	202 Compare X22, 0
	203 JumpIfEqual {227}
	204 Move X8, [X22]
	205 Move X10, 0xDA4000
	206 NotImplemented "Instruction LDRH not yet implemented."
	207 Move X10, [X10+3584]
	208 Move X1, [X10]
	209 Compare X9, 0
	210 JumpIfEqual {217}
	211 Move X10, [X8+176]
	212 Add X10, X10, 8
	213 NotImplemented "Instruction LDUR not yet implemented."
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Subtract X9, X9, 1
	216 Add X10, X10, 16
	217 Move X0, X22
	218 Move W2, W31
	219 Call 0x1C5D788
	220 NotImplemented "Instruction LDRSW not yet implemented."
	221 Add X8, X8, X9
	222 Add X0, X8, 312
	223 Move X8, [X0]
	224 Move X1, [X0+8]
	225 Move X0, X22
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X23, 0
	228 JumpIfNotEqual {260}
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Compare W24, 0
	231 JumpIfNotEqual {245}
	232 Move W8, [X21+24]
	233 Add X28, X28, 1
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Call 0x1C17F20
	236 Call 0x1C17F20
	237 Call 0x1C17F20
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Call 0x3EB2AD0
	240 Move X23, [X0]
	241 Call 0x3EB2AE0
	242 Move W24, W31
	243 Compare X22, 0
	244 JumpIfNotEqual {204}
	245 Move X20, [X31+96]
	246 Move X19, [X31+104]
	247 Move X22, [X31+80]
	248 Move X21, [X31+88]
	249 Move X24, [X31+64]
	250 Move X23, [X31+72]
	251 Move X26, [X31+48]
	252 Move X25, [X31+56]
	253 Move X28, [X31+32]
	254 Move X27, [X31+40]
	255 Move X29, [X31+16]
	256 Move X30, [X31+24]
	257 Add X31, X31, 112
	258 Return 
	259 Call 0x1C17F28
	260 Move X0, X23
	261 Call 0x1C17F18
	262 Call 0x1C17F20
	263 Move X19, X0
	264 Move X23, X31
	265 Move X19, X0
	266 Compare X22, 0
	267 JumpIfEqual {291}
	268 Move X8, [X22]
	269 Move X10, 0xDA4000
	270 NotImplemented "Instruction LDRH not yet implemented."
	271 Move X10, [X10+3584]
	272 Move X1, [X10]
	273 Compare X9, 0
	274 JumpIfEqual {281}
	275 Move X10, [X8+176]
	276 Add X10, X10, 8
	277 NotImplemented "Instruction LDUR not yet implemented."
	278 NotImplemented "Instruction CMP not yet implemented."
	279 Subtract X9, X9, 1
	280 Add X10, X10, 16
	281 Move X0, X22
	282 Move W2, W31
	283 Call 0x1C5D788
	284 NotImplemented "Instruction LDRSW not yet implemented."
	285 Add X8, X8, X9
	286 Add X0, X8, 312
	287 Move X8, [X0]
	288 Move X1, [X0+8]
	289 Move X0, X22
	290 NotImplemented "Instruction BLR not yet implemented."
	291 Compare X23, 0
	292 JumpIfNotEqual {295}
	293 Move X0, X19
	294 Call 0x1D2D690
	295 Move X0, X23
	296 Call 0x1C17F18
	297 Call 0x1991590

Method: System.String ToString()

Disassembly:
	0x0335062C LDP X20, X19, [X31 + 0x10]
	0x03350630 LDR X30, [X31], #0x20
	0x03350634 B 0x335042C
	0x03350638 STR X30, [X31 - 0x20]!
	0x0335063C STP X20, X19, [X31 + 0x10]
	0x03350640 ADRP X19, 0x108C000
	0x03350644 ADRP X20, 0xDCE000
	0x03350648 LDRB W8, [X19 + 0xDBD]
	0x0335064C LDR X20, [X20 + 0x548]
	0x03350650 TBNZ X8, 0x0, 0x3350680
	0x03350654 ADRP X0, 0xDDA000
	0x03350658 LDR X0, [X0 + 0x270]
	0x0335065C BL 0x1C16CF4
	0x03350660 ADRP X0, 0xDDA000
	0x03350664 LDR X0, [X0 + 0x278]
	0x03350668 BL 0x1C16CF4
	0x0335066C ADRP X0, 0xDCE000
	0x03350670 LDR X0, [X0 + 0x548]
	0x03350674 BL 0x1C16CF4
	0x03350678 MOVZ W8, 0x1
	0x0335067C STRB W8, [X19 + 0xDBD]
	0x03350680 LDR X0, [X20]
	0x03350684 LDR W8, [X0 + 0xE0]
	0x03350688 CBNZ W8, 0x3350694
	0x0335068C BL 0x1C16DFC
	0x03350690 LDR X0, [X20]
	0x03350694 LDR X8, [X0 + 0xB8]
	0x03350698 LDR X8, [X8 + 0x8]
	0x0335069C CBNZ X8, 0x33506EC
	0x033506A0 LDR W8, [X0 + 0xE0]
	0x033506A4 CBNZ W8, 0x33506AC
	0x033506A8 BL 0x1C16DFC
	0x033506AC ADRP X8, 0xDDA000
	0x033506B0 LDR X8, [X8 + 0x278]
	0x033506B4 LDR X0, [X8]
	0x033506B8 BL 0x1C16F10
	0x033506BC ADRP X8, 0xDDA000
	0x033506C0 LDR X8, [X8 + 0x270]
	0x033506C4 MOV X19, X0
	0x033506C8 LDR X1, [X8]
	0x033506CC BL 0x29964AC
	0x033506D0 LDR X8, [X20]
	0x033506D4 MOV X1, X19
	0x033506D8 MOV X2, X31
	0x033506DC LDR X8, [X8 + 0xB8]
	0x033506E0 ADD X0, X8, 0x8
	0x033506E4 BL 0x1C24138
	0x033506E8 LDR X0, [X20]
	0x033506EC LDR W8, [X0 + 0xE0]
	0x033506F0 CBNZ W8, 0x33506FC
	0x033506F4 BL 0x1C16DFC
	0x033506F8 LDR X0, [X20]
	0x033506FC LDR X8, [X0 + 0xB8]
	0x03350700 LDP X20, X19, [X31 + 0x10]
	0x03350704 LDR X0, [X8 + 0x8]
	0x03350708 LDR X30, [X31], #0x20
	0x0335070C RET
	0x03350710 STR X30, [X31 - 0x30]!
	0x03350714 STP X22, X21, [X31 + 0x10]
	0x03350718 STP X20, X19, [X31 + 0x20]
	0x0335071C ADRP X21, 0x108C000
	0x03350720 ADRP X22, 0xDA4000
	0x03350724 ADRP X19, 0xDDA000
	0x03350728 ADRP X20, 0xDCE000
	0x0335072C LDRB W8, [X21 + 0xDBE]
	0x03350730 LDR X22, [X22 + 0xE58]
	0x03350734 LDR X19, [X19 + 0x280]
	0x03350738 LDR X20, [X20 + 0x548]
	0x0335073C TBNZ X8, 0x0, 0x335076C
	0x03350740 ADRP X0, 0xDCE000
	0x03350744 LDR X0, [X0 + 0x548]
	0x03350748 BL 0x1C16CF4
	0x0335074C ADRP X0, 0xDA4000
	0x03350750 LDR X0, [X0 + 0xE58]
	0x03350754 BL 0x1C16CF4
	0x03350758 ADRP X0, 0xDDA000
	0x0335075C LDR X0, [X0 + 0x280]
	0x03350760 BL 0x1C16CF4
	0x03350764 MOVZ W8, 0x1
	0x03350768 STRB W8, [X21 + 0xDBE]
	0x0335076C LDR X0, [X22]
	0x03350770 MOVZ W1, 0x48
	0x03350774 BL 0x1C16D6C
	0x03350778 LDR X1, [X19]
	0x0335077C MOV X2, X31
	0x03350780 MOV X19, X0
	0x03350784 BL 0x32C5BD8
	0x03350788 LDR X8, [X20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x108D000
	011 Move X20, 0xDA4000
	012 Move W8, [X21+3503]
	013 Move X20, [X20+2288]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xDA4000
	020 Move X0, [X0+2288]
	021 Call 0x1C17CF4
	022 Move X0, 0xDDB000
	023 Move X0, [X0+536]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3503], W8
	027 Move X0, [X20]
	028 Move [X31+12], W31
	029 Move [X31+8], W31
	030 Call 0x1C17F10
	031 Move X1, X31
	032 Move X20, X0
	033 Call StringBuilder..ctor, X0
	034 Move X22, [X19+24]
	035 Compare X22, 0
	036 JumpIfEqual {81}
	037 Move W8, [X22+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X25, 0xDDB000
	040 Move X25, [X25+536]
	041 Move X23, X31
	042 Move W21, W31
	043 Add X24, X22, 32
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X0, [X24]
	046 Compare X0, 0
	047 JumpIfEqual {103}
	048 And W2, W21, 1
	049 Add X3, X31, 12
	050 Move X1, X20
	051 Call StackTrace.AddFrames, X0, X1, X2, X3
	052 Move W21, W0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {78}
	057 Move W8, [X31+12]
	058 Compare W8, 0
	059 JumpIfNotEqual {78}
	060 Move X0, X31
	061 Call Environment.get_NewLine
	062 Compare X20, 0
	063 JumpIfEqual {103}
	064 Move X1, X0
	065 Move X0, X20
	066 Move X2, X31
	067 Call StringBuilder.Append, X0, X1
	068 Move X1, [X25]
	069 Move X0, X20
	070 Move X2, X31
	071 Call StringBuilder.Append, X0, X1
	072 Move X0, X31
	073 Call Environment.get_NewLine
	074 Move X1, X0
	075 Move X0, X20
	076 Move X2, X31
	077 Call StringBuilder.Append, X0, X1
	078 Move W8, [X22+24]
	079 Add X23, X23, 1
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move W21, W31
	082 And W2, W21, 1
	083 Add X3, X31, 8
	084 Move X0, X19
	085 Move X1, X20
	086 Call StackTrace.AddFrames, X0, X1, X2, X3
	087 Compare X20, 0
	088 JumpIfEqual {103}
	089 Move X8, [X20]
	090 Move X0, X20
	091 Move X20, [X31+64]
	092 Move X19, [X31+72]
	093 Move X22, [X31+48]
	094 Move X21, [X31+56]
	095 Move X2, [X8+360]
	096 Move X1, [X8+368]
	097 Move X24, [X31+32]
	098 Move X23, [X31+40]
	099 Move X30, [X31+16]
	100 Move X25, [X31+24]
	101 Add X31, X31, 80
	102 CallNoReturn X2
	103 Call 0x1C17F20
	104 Call 0x1C17F28

Method: System.String ToString(System.Diagnostics.StackTrace/TraceFormat traceFormat)

Disassembly:
	0x0335078C LDP X22, X21, [X31 + 0x10]
	0x03350790 LDR X8, [X8 + 0xB8]
	0x03350794 STR X19, [X8]

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+360]
	003 Move X1, [X8+368]
	004 CallNoReturn X2

