Type: System.Diagnostics.Debugger

Method: System.Boolean IsLogging()

Disassembly:
	0x0334ED44 LDR X8, [X23]

ISIL:
	001 Call 0x1C25408
	002 Return X0

Method: System.Void Log_icall(System.Int32 level, ref System.String category, ref System.String message)

Disassembly:
	0x0334ED48 MOV W27, W0

ISIL:
	001 Call 0x1C17D14
	002 Return 

Method: System.Void Log(System.Int32 level, System.String category, System.String message)

Disassembly:
	0x0334ED4C MOV X0, X23
	0x0334ED50 LDR X9, [X8 + 0x238]
	0x0334ED54 LDR X1, [X8 + 0x240]
	0x0334ED58 BLR X9
	0x0334ED5C CMP W27, W0
	0x0334ED60 B.EQ 0x334ED78
	0x0334ED64 LDR W8, [X25 + 0x18]
	0x0334ED68 ADD W28, W28, 0x1
	0x0334ED6C CMP W28, W8
	0x0334ED70 B.LT 0x334ED1C
	0x0334ED74 B 0x334ED80
	0x0334ED78 STR X26, [X31 + 0x18]
	0x0334ED7C MOV X23, X26
	0x0334ED80 ADRP X26, 0xDA5000
	0x0334ED84 LDR X26, [X26 + 0x6C0]
	0x0334ED88 ADRP X8, 0xDDC000
	0x0334ED8C LDR X0, [X26]
	0x0334ED90 LDR X8, [X8 + 0x1F0]
	0x0334ED94 LDR W9, [X0 + 0xE0]
	0x0334ED98 LDR X25, [X8]
	0x0334ED9C CBNZ W9, 0x334EDA4
	0x0334EDA0 BL 0x1C16DFC
	0x0334EDA4 MOV X0, X25
	0x0334EDA8 MOV X1, X31
	0x0334EDAC BL 0x338C698
	0x0334EDB0 CBZ X0, 0x334F1C0
	0x0334EDB4 LDR X8, [X0]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x108F000
	007 Move [X31], X2
	008 Move [X31+8], X1
	009 Move X21, 0xDD8000
	010 Move W8, [X20+3494]
	011 Move X21, [X21+2320]
	012 Move W19, W0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xDD8000
	018 Move X0, [X0+2320]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3494], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Add X1, X31, 8
	028 Add X2, X31, 0
	029 Move W0, W19
	030 Call 0x1C17D14
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X30, [X31+16]
	034 Move X21, [X31+24]
	035 Add X31, X31, 48
	036 Return 

Method: System.Void NotifyOfCrossThreadDependency()

Disassembly:
	0x0334EDB8 ADRP X25, 0xDDC000

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x0334EDBC MOV X1, X24
	0x0334EDC0 LDR X9, [X8 + 0x2A8]
	0x0334EDC4 LDR X2, [X8 + 0x2B0]
	0x0334EDC8 LDR X25, [X25 + 0x1F8]
	0x0334EDCC BLR X9
	0x0334EDD0 AND W8, W0, 0x1
	0x0334EDD4 STRB W8, [X21]
	0x0334EDD8 LDR X0, [X25]
	0x0334EDDC MOV X1, X31
	0x0334EDE0 BL 0x338C698
	0x0334EDE4 MOV X1, X0
	0x0334EDE8 MOV X0, X23
	0x0334EDEC MOV X2, X31
	0x0334EDF0 BL 0x32D45D8
	0x0334EDF4 TBZ X0, 0x0, 0x334EE04
	0x0334EDF8 MOVZ W8, 0x1
	0x0334EDFC STRB W8, [X22]
	0x0334EE00 B 0x334F1A0
	0x0334EE04 LDR X0, [X26]
	0x0334EE08 LDR X23, [X25]
	0x0334EE0C LDR W8, [X0 + 0xE0]
	0x0334EE10 CBNZ W8, 0x334EE18
	0x0334EE14 BL 0x1C16DFC
	0x0334EE18 MOV X0, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x108F000
	006 Move X19, 0xDA6000
	007 Move X21, 0xDD8000
	008 Move W8, [X20+3495]
	009 Move X19, [X19+2440]
	010 Move X21, [X21+2320]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xDD8000
	016 Move X0, [X0+2320]
	017 Call 0x1C17CF4
	018 Move X0, 0xDA6000
	019 Move X0, [X0+2440]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3495], W8
	023 Move X8, [X21]
	024 Move X9, [X19]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X8, [X8+184]
	028 Move [X8], X9
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

