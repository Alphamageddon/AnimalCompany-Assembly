Type: System.ValueTuple`2

Method: System.Void .ctor(T1 item1, T2 item2)

Disassembly:
	0x0279781C BLR X9
	0x02797820 TBZ X0, 0x0, 0x2797864
	0x02797824 LDR X0, [X21 + 0x20]

ISIL:
	001 Move [X0], X1
	002 Move [X0+8], X2
	003 Move [X0+16], W3
	004 Return 

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x02797828 LDRB W8, [X0 + 0x135]
	0x0279782C TBNZ X8, 0x0, 0x2797834
	0x02797830 BL 0x1C5C684
	0x02797834 LDR X8, [X0 + 0xC0]
	0x02797838 LDR X0, [X8 + 0x48]
	0x0279783C BL 0x211A010
	0x02797840 CBZ X0, 0x2797878
	0x02797844 LDR X8, [X0]
	0x02797848 LDR W1, [X20 + 0x8]
	0x0279784C MOV W2, W19
	0x02797850 LDP X20, X19, [X31 + 0x20]
	0x02797854 LDP X4, X3, [X8 + 0x1B8]
	0x02797858 LDP X22, X21, [X31 + 0x10]
	0x0279785C LDR X30, [X31], #0x30
	0x02797860 BR X4
	0x02797864 LDP X20, X19, [X31 + 0x20]
	0x02797868 LDP X22, X21, [X31 + 0x10]
	0x0279786C MOV W0, W31
	0x02797870 LDR X30, [X31], #0x30
	0x02797874 RET
	0x02797878 BL 0x1C16F20
	0x0279787C SUB X31, X31, 0x50
	0x02797880 STP X30, X25, [X31 + 0x10]
	0x02797884 STP X24, X23, [X31 + 0x20]
	0x02797888 STP X22, X21, [X31 + 0x30]
	0x0279788C STP X20, X19, [X31 + 0x40]
	0x02797890 ADRP X23, 0x1C43000
	0x02797894 LDRB W8, [X23 + 0x873]
	0x02797898 MOV X20, X3
	0x0279789C MOV X19, X2
	0x027978A0 MOV X22, X1
	0x027978A4 MOV X21, X0
	0x027978A8 TBNZ X8, 0x0, 0x27978C0
	0x027978AC ADRP X0, 0x1986000
	0x027978B0 LDR X0, [X0 + 0x900]
	0x027978B4 BL 0x1C16CF4
	0x027978B8 MOVZ W8, 0x1
	0x027978BC STRB W8, [X23 + 0x873]
	0x027978C0 CBZ X22, 0x2797AAC
	0x027978C4 LDR X0, [X20 + 0x20]
	0x027978C8 LDRB W8, [X0 + 0x135]
	0x027978CC TBNZ X8, 0x0, 0x27978D4
	0x027978D0 BL 0x1C5C684
	0x027978D4 LDR X8, [X0 + 0xC0]
	0x027978D8 LDR X0, [X8 + 0x8]
	0x027978DC LDRB W8, [X0 + 0x135]
	0x027978E0 TBNZ X8, 0x0, 0x27978E8
	0x027978E4 BL 0x1C5C684
	0x027978E8 LDR X8, [X22]
	0x027978EC CMP X8, X0
	0x027978F0 B.NE 0x2797AAC
	0x027978F4 LDR X0, [X20 + 0x20]
	0x027978F8 LDRB W8, [X0 + 0x135]
	0x027978FC TBNZ X8, 0x0, 0x2797904
	0x02797900 BL 0x1C5C684
	0x02797904 LDR X8, [X0 + 0xC0]
	0x02797908 LDR X1, [X8 + 0x8]
	0x0279790C LDRB W8, [X1 + 0x135]
	0x02797910 TBNZ X8, 0x0, 0x2797920
	0x02797914 MOV X0, X1
	0x02797918 BL 0x1C5C684
	0x0279791C MOV X1, X0
	0x02797920 LDR X8, [X22]
	0x02797924 LDR X9, [X1 + 0x40]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X8, [X2+32]
	007 Move X20, X2
	008 Move X21, X1
	009 Move X19, X0
	010 Move W9, [X8+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {18}
	015 Move X0, X8
	016 Call 0x1C5D684
	017 Move X8, X0
	018 Move X8, [X8+192]
	019 Move X0, [X8+8]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Compare X21, 0
	027 JumpIfEqual {30}
	028 Move X8, [X21]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W0, W31
	031 Move X0, [X20+32]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X0+192]
	039 Move X1, [X8+8]
	040 Move W8, [X1+309]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {48}
	045 Move X0, X1
	046 Call 0x1C5D684
	047 Move X1, X0
	048 Move X8, [X21]
	049 Move X9, [X1+64]
	050 Move X0, X21
	051 Move X8, [X8+64]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Call 0x1C17E08
	054 Move X8, [X0+16]
	055 Move V0, [X0]
	056 Move [X31+16], X8
	057 Move [X31], V0
	058 Move X0, [X20+32]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Move X8, [X0+192]
	066 Move V0, [X31]
	067 Move X9, [X31+16]
	068 Add X1, X31, 32
	069 Move X2, [X8+24]
	070 Move X0, X19
	071 Move [X31+2], V0
	072 Move [X31+48], X9
	073 Call 0x2797928, X0, X1
	074 Move X20, [X31+80]
	075 Move X19, [X31+88]
	076 Move X30, [X31+64]
	077 Move X21, [X31+72]
	078 And W0, W0, 1
	079 Add X31, X31, 96
	080 Return X0
	081 Call 0x1C181E0

Method: System.Boolean Equals(System.ValueTuple`2<T1, T2> other)

Disassembly:
	0x02797928 MOV X0, X22
	0x0279792C LDR X8, [X8 + 0x40]
	0x02797930 CMP X8, X9
	0x02797934 B.NE 0x2797AF0
	0x02797938 BL 0x1C16E08
	0x0279793C LDR X8, [X21]
	0x02797940 LDR X22, [X0]
	0x02797944 LDR W24, [X0 + 0x8]
	0x02797948 STR X8, [X31 + 0x8]
	0x0279794C LDR X0, [X20 + 0x20]
	0x02797950 LDRB W8, [X0 + 0x135]
	0x02797954 TBNZ X8, 0x0, 0x279795C
	0x02797958 BL 0x1C5C684
	0x0279795C LDR X8, [X0 + 0xC0]
	0x02797960 ADD X1, X31, 0x8
	0x02797964 LDR X0, [X8]
	0x02797968 BL 0x1C16E04
	0x0279796C STR X22, [X31]
	0x02797970 LDR X8, [X20 + 0x20]
	0x02797974 MOV X22, X0
	0x02797978 LDRB W9, [X8 + 0x135]
	0x0279797C TBNZ X9, 0x0, 0x279798C
	0x02797980 MOV X0, X8
	0x02797984 BL 0x1C5C684
	0x02797988 MOV X8, X0
	0x0279798C LDR X8, [X8 + 0xC0]
	0x02797990 ADD X1, X31, 0x0
	0x02797994 LDR X0, [X8]
	0x02797998 BL 0x1C16E04
	0x0279799C CBZ X19, 0x2797AF4
	0x027979A0 ADRP X25, 0x1986000
	0x027979A4 LDR X8, [X19]
	0x027979A8 LDR X25, [X25 + 0x900]
	0x027979AC MOV X23, X0
	0x027979B0 LDRH W9, [X8 + 0x12E]
	0x027979B4 LDR X1, [X25]
	0x027979B8 CBZ X9, 0x27979DC
	0x027979BC LDR X10, [X8 + 0xB0]
	0x027979C0 ADD X10, X10, 0x8
	0x027979C4 LDUR X11, [X10 - 0x8]
	0x027979C8 CMP X11, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X21, X2
	007 Move X19, X1
	008 Move X20, X0
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X8, [X8+192]
	018 Move X0, [X8+40]
	019 Call 0x27A4B94
	020 Compare X0, 0
	021 JumpIfEqual {62}
	022 Move X8, [X0]
	023 Move X3, [X19]
	024 Move X4, [X19+8]
	025 Move X1, [X20]
	026 Move X2, [X20+8]
	027 Move X9, [X8+440]
	028 Move X5, [X8+448]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {56}
	034 Move X0, [X21+32]
	035 Move W8, [X0+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {41}
	040 Call 0x1C5D684
	041 Move X8, [X0+192]
	042 Move X0, [X8+72]
	043 Call 0x211B010
	044 Compare X0, 0
	045 JumpIfEqual {62}
	046 Move X8, [X0]
	047 Move W2, [X19+16]
	048 Move W1, [X20+16]
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X4, [X8+440]
	052 Move X3, [X8+448]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 CallNoReturn X4
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move W0, W31
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Return X0
	062 Call 0x1C17F20

Method: System.Boolean System.Collections.IStructuralEquatable.Equals(System.Object other, System.Collections.IEqualityComparer comparer)

Disassembly:
	0x027979CC B.EQ 0x27979EC
	0x027979D0 SUBS X9, X9, 0x1
	0x027979D4 ADD X10, X10, 0x10
	0x027979D8 B.NE 0x27979C4
	0x027979DC MOV X0, X19
	0x027979E0 MOV W2, W31
	0x027979E4 BL 0x1C5C788
	0x027979E8 B 0x27979F8
	0x027979EC LDRSW X9, [X10]
	0x027979F0 ADD X8, X8, X9, 0x4, LSL
	0x027979F4 ADD X0, X8, 0x138
	0x027979F8 LDP X8, X3, [X0]
	0x027979FC MOV X0, X19
	0x02797A00 MOV X1, X22
	0x02797A04 MOV X2, X23
	0x02797A08 BLR X8
	0x02797A0C TBZ X0, 0x0, 0x2797AAC
	0x02797A10 LDR W8, [X21 + 0x8]
	0x02797A14 STR W8, [X31 + 0x8]
	0x02797A18 LDR X0, [X20 + 0x20]
	0x02797A1C LDRB W8, [X0 + 0x135]
	0x02797A20 TBNZ X8, 0x0, 0x2797A28
	0x02797A24 BL 0x1C5C684
	0x02797A28 LDR X8, [X0 + 0xC0]
	0x02797A2C ADD X1, X31, 0x8
	0x02797A30 LDR X0, [X8 + 0x10]
	0x02797A34 BL 0x1C16E04
	0x02797A38 STR W24, [X31]
	0x02797A3C LDR X8, [X20 + 0x20]
	0x02797A40 MOV X20, X0
	0x02797A44 LDRB W9, [X8 + 0x135]
	0x02797A48 TBNZ X9, 0x0, 0x2797A58
	0x02797A4C MOV X0, X8
	0x02797A50 BL 0x1C5C684
	0x02797A54 MOV X8, X0
	0x02797A58 LDR X8, [X8 + 0xC0]
	0x02797A5C ADD X1, X31, 0x0
	0x02797A60 LDR X0, [X8 + 0x10]
	0x02797A64 BL 0x1C16E04
	0x02797A68 LDR X8, [X19]
	0x02797A6C LDR X1, [X25]
	0x02797A70 MOV X21, X0
	0x02797A74 LDRH W9, [X8 + 0x12E]
	0x02797A78 CBZ X9, 0x2797A9C
	0x02797A7C LDR X10, [X8 + 0xB0]
	0x02797A80 ADD X10, X10, 0x8
	0x02797A84 LDUR X11, [X10 - 0x8]
	0x02797A88 CMP X11, X1
	0x02797A8C B.EQ 0x2797ACC
	0x02797A90 SUBS X9, X9, 0x1
	0x02797A94 ADD X10, X10, 0x10
	0x02797A98 B.NE 0x2797A84
	0x02797A9C MOV X0, X19
	0x02797AA0 MOV W2, W31
	0x02797AA4 BL 0x1C5C788
	0x02797AA8 B 0x2797AD8
	0x02797AAC MOV W0, W31
	0x02797AB0 LDP X20, X19, [X31 + 0x40]
	0x02797AB4 LDP X22, X21, [X31 + 0x30]
	0x02797AB8 LDP X24, X23, [X31 + 0x20]
	0x02797ABC LDP X30, X25, [X31 + 0x10]
	0x02797AC0 AND W0, W0, 0x1
	0x02797AC4 ADD X31, X31, 0x50
	0x02797AC8 RET
	0x02797ACC LDRSW X9, [X10]
	0x02797AD0 ADD X8, X8, X9, 0x4, LSL
	0x02797AD4 ADD X0, X8, 0x138
	0x02797AD8 LDP X8, X3, [X0]
	0x02797ADC MOV X0, X19
	0x02797AE0 MOV X1, X20
	0x02797AE4 MOV X2, X21
	0x02797AE8 BLR X8
	0x02797AEC B 0x2797AB0
	0x02797AF0 BL 0x1C171E0
	0x02797AF4 BL 0x1C16F20
	0x02797AF8 SUB X31, X31, 0x30
	0x02797AFC STP X30, X21, [X31 + 0x10]
	0x02797B00 STP X20, X19, [X31 + 0x20]
	0x02797B04 CBZ X1, 0x2797BCC
	0x02797B08 MOV X20, X0
	0x02797B0C LDR X0, [X2 + 0x20]
	0x02797B10 MOV X19, X2
	0x02797B14 MOV X21, X1
	0x02797B18 LDRB W8, [X0 + 0x135]
	0x02797B1C TBNZ X8, 0x0, 0x2797B24
	0x02797B20 BL 0x1C5C684
	0x02797B24 LDR X8, [X0 + 0xC0]
	0x02797B28 LDR X0, [X8 + 0x8]
	0x02797B2C LDRB W8, [X0 + 0x135]
	0x02797B30 TBNZ X8, 0x0, 0x2797B38
	0x02797B34 BL 0x1C5C684
	0x02797B38 LDR X8, [X21]
	0x02797B3C CMP X8, X0
	0x02797B40 B.NE 0x2797BE0
	0x02797B44 LDR X0, [X19 + 0x20]
	0x02797B48 LDRB W8, [X0 + 0x135]
	0x02797B4C TBNZ X8, 0x0, 0x2797B54
	0x02797B50 BL 0x1C5C684
	0x02797B54 LDR X8, [X0 + 0xC0]
	0x02797B58 LDR X1, [X8 + 0x8]
	0x02797B5C LDRB W8, [X1 + 0x135]
	0x02797B60 TBNZ X8, 0x0, 0x2797B70
	0x02797B64 MOV X0, X1
	0x02797B68 BL 0x1C5C684
	0x02797B6C MOV X1, X0
	0x02797B70 LDR X8, [X21]
	0x02797B74 LDR X9, [X1 + 0x40]
	0x02797B78 MOV X0, X21
	0x02797B7C LDR X8, [X8 + 0x40]
	0x02797B80 CMP X8, X9
	0x02797B84 B.NE 0x2797C88
	0x02797B88 BL 0x1C16E08
	0x02797B8C MOV X8, X0
	0x02797B90 LDR X0, [X19 + 0x20]
	0x02797B94 LDR X19, [X8]
	0x02797B98 LDR W21, [X8 + 0x8]
	0x02797B9C LDRB W9, [X0 + 0x135]
	0x02797BA0 TBNZ X9, 0x0, 0x2797BA8
	0x02797BA4 BL 0x1C5C684
	0x02797BA8 LDR X8, [X0 + 0xC0]
	0x02797BAC MOV X0, X20
	0x02797BB0 MOV X1, X19
	0x02797BB4 MOV X2, X21
	0x02797BB8 LDR X3, [X8 + 0x68]
	0x02797BBC LDP X20, X19, [X31 + 0x20]
	0x02797BC0 LDP X30, X21, [X31 + 0x10]
	0x02797BC4 ADD X31, X31, 0x30
	0x02797BC8 B 0x2797C8C
	0x02797BCC LDP X20, X19, [X31 + 0x20]
	0x02797BD0 LDP X30, X21, [X31 + 0x10]
	0x02797BD4 MOVZ W0, 0x1
	0x02797BD8 ADD X31, X31, 0x30
	0x02797BDC RET
	0x02797BE0 LDR W8, [X20 + 0x8]
	0x02797BE4 LDR X9, [X20]
	0x02797BE8 STR W8, [X31 + 0x8]
	0x02797BEC STR X9, [X31]
	0x02797BF0 LDR X0, [X19 + 0x20]
	0x02797BF4 BL 0x199B99C
	0x02797BF8 LDR X8, [X0 + 0xC0]
	0x02797BFC ADD X1, X31, 0x0
	0x02797C00 LDR X0, [X8 + 0x8]
	0x02797C04 BL 0x1C16E04
	0x02797C08 MOV X1, X31
	0x02797C0C BL 0x33BE520
	0x02797C10 MOV X20, X0
	0x02797C14 BL 0x19903C0
	0x02797C18 LDR X8, [X20]
	0x02797C1C MOV X0, X20
	0x02797C20 LDP X9, X1, [X8 + 0x168]
	0x02797C24 BLR X9
	0x02797C28 MOV X20, X0
	0x02797C2C ADRP X0, 0x1986000
	0x02797C30 LDR X0, [X0 + 0x920]
	0x02797C34 BL 0x1C16D08
	0x02797C38 MOV X1, X20
	0x02797C3C MOV X2, X31
	0x02797C40 BL 0x32094D4
	0x02797C44 MOV X20, X0
	0x02797C48 ADRP X0, 0x1964000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X23, 0x1C44000
	011 Move W8, [X23+2158]
	012 Move X20, X3
	013 Move X19, X2
	014 Move X22, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x1987000
	021 Move X0, [X0+2304]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+2158], W8
	025 Compare X22, 0
	026 JumpIfEqual {174}
	027 Move X0, [X20+32]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Move X8, [X0+192]
	035 Move X0, [X8+8]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X22]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, [X20+32]
	045 Move W8, [X0+309]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {51}
	050 Call 0x1C5D684
	051 Move X8, [X0+192]
	052 Move X1, [X8+8]
	053 Move W8, [X1+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {61}
	058 Move X0, X1
	059 Call 0x1C5D684
	060 Move X1, X0
	061 Move X8, [X22]
	062 Move X9, [X1+64]
	063 Move X0, X22
	064 Move X8, [X8+64]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Call 0x1C17E08
	067 Move V1, [X0]
	068 Move V0, [X21]
	069 Move W24, [X0+16]
	070 Move [X31+16], V0
	071 Move [X31+24], V1
	072 Move X0, [X20+32]
	073 Move W8, [X0+309]
	074 Move TEMP, X8
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {79}
	078 Call 0x1C5D684
	079 Move X8, [X0+192]
	080 Add X1, X31, 16
	081 Move X0, [X8]
	082 Call 0x1C17E04
	083 Move V0, [X31+2]
	084 Move X22, X0
	085 Move [X31], V0
	086 Move X8, [X20+32]
	087 Move W9, [X8+309]
	088 Move TEMP, X9
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {95}
	092 Move X0, X8
	093 Call 0x1C5D684
	094 Move X8, X0
	095 Move X8, [X8+192]
	096 Add X1, X31, 0
	097 Move X0, [X8]
	098 Call 0x1C17E04
	099 Compare X19, 0
	100 JumpIfEqual {196}
	101 Move X25, 0x1987000
	102 Move X8, [X19]
	103 Move X25, [X25+2304]
	104 Move X23, X0
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Move X1, [X25]
	107 Compare X9, 0
	108 JumpIfEqual {115}
	109 Move X10, [X8+176]
	110 Add X10, X10, 8
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Subtract X9, X9, 1
	114 Add X10, X10, 16
	115 Move X0, X19
	116 Move W2, W31
	117 Call 0x1C5D788
	118 NotImplemented "Instruction LDRSW not yet implemented."
	119 Add X8, X8, X9
	120 Add X0, X8, 312
	121 Move X8, [X0]
	122 Move X3, [X0+8]
	123 Move X0, X19
	124 Move X1, X22
	125 Move X2, X23
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfNotEqual {174}
	131 Move W8, [X21+16]
	132 Move [X31+16], W8
	133 Move X0, [X20+32]
	134 Move W8, [X0+309]
	135 Move TEMP, X8
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfEqual {140}
	139 Call 0x1C5D684
	140 Move X8, [X0+192]
	141 Add X1, X31, 16
	142 Move X0, [X8+16]
	143 Call 0x1C17E04
	144 Move [X31], W24
	145 Move X8, [X20+32]
	146 Move X20, X0
	147 Move W9, [X8+309]
	148 Move TEMP, X9
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfEqual {155}
	152 Move X0, X8
	153 Call 0x1C5D684
	154 Move X8, X0
	155 Move X8, [X8+192]
	156 Add X1, X31, 0
	157 Move X0, [X8+16]
	158 Call 0x1C17E04
	159 Move X8, [X19]
	160 Move X1, [X25]
	161 Move X21, X0
	162 NotImplemented "Instruction LDRH not yet implemented."
	163 Compare X9, 0
	164 JumpIfEqual {171}
	165 Move X10, [X8+176]
	166 Add X10, X10, 8
	167 NotImplemented "Instruction LDUR not yet implemented."
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Subtract X9, X9, 1
	170 Add X10, X10, 16
	171 Move X0, X19
	172 Move W2, W31
	173 Call 0x1C5D788
	174 Move W0, W31
	175 Move X20, [X31+96]
	176 Move X19, [X31+104]
	177 Move X22, [X31+80]
	178 Move X21, [X31+88]
	179 Move X24, [X31+64]
	180 Move X23, [X31+72]
	181 Move X30, [X31+48]
	182 Move X25, [X31+56]
	183 And W0, W0, 1
	184 Add X31, X31, 112
	185 Return X0
	186 NotImplemented "Instruction LDRSW not yet implemented."
	187 Add X8, X8, X9
	188 Add X0, X8, 312
	189 Move X8, [X0]
	190 Move X3, [X0+8]
	191 Move X0, X19
	192 Move X1, X20
	193 Move X2, X21
	194 NotImplemented "Instruction BLR not yet implemented."
	195 Call 0x1C181E0
	196 Call 0x1C17F20

Method: System.Int32 System.IComparable.CompareTo(System.Object other)

Disassembly:
	0x02797C4C LDR X0, [X0 + 0x578]
	0x02797C50 BL 0x1C16D08
	0x02797C54 BL 0x1C16F10
	0x02797C58 MOV X21, X0
	0x02797C5C ADRP X0, 0x1986000
	0x02797C60 LDR X0, [X0 + 0x928]
	0x02797C64 BL 0x1C16D08
	0x02797C68 MOV X2, X0
	0x02797C6C MOV X0, X21
	0x02797C70 MOV X1, X20
	0x02797C74 MOV X3, X31
	0x02797C78 BL 0x330E16C
	0x02797C7C MOV X0, X21
	0x02797C80 MOV X1, X19
	0x02797C84 BL 0x1C16DEC
	0x02797C88 BL 0x1C171E0
	0x02797C8C STR X30, [X31 - 0x30]!
	0x02797C90 STP X22, X21, [X31 + 0x10]
	0x02797C94 STP X20, X19, [X31 + 0x20]
	0x02797C98 LDR X8, [X3 + 0x20]
	0x02797C9C MOV X21, X3
	0x02797CA0 MOV X19, X2
	0x02797CA4 MOV X22, X1
	0x02797CA8 LDRB W9, [X8 + 0x135]
	0x02797CAC MOV X20, X0
	0x02797CB0 TBNZ X9, 0x0, 0x2797CC0
	0x02797CB4 MOV X0, X8
	0x02797CB8 BL 0x1C5C684
	0x02797CBC MOV X8, X0
	0x02797CC0 LDR X8, [X8 + 0xC0]
	0x02797CC4 LDR X0, [X8 + 0x70]
	0x02797CC8 BL 0x29014C4
	0x02797CCC CBZ X0, 0x2797D38
	0x02797CD0 LDR X8, [X0]
	0x02797CD4 LDR X1, [X20]
	0x02797CD8 MOV X2, X22
	0x02797CDC LDP X9, X3, [X8 + 0x198]
	0x02797CE0 BLR X9
	0x02797CE4 CBZ W0, 0x2797CF8
	0x02797CE8 LDP X20, X19, [X31 + 0x20]
	0x02797CEC LDP X22, X21, [X31 + 0x10]
	0x02797CF0 LDR X30, [X31], #0x30
	0x02797CF4 RET
	0x02797CF8 LDR X0, [X21 + 0x20]
	0x02797CFC LDRB W8, [X0 + 0x135]
	0x02797D00 TBNZ X8, 0x0, 0x2797D08
	0x02797D04 BL 0x1C5C684
	0x02797D08 LDR X8, [X0 + 0xC0]
	0x02797D0C LDR X0, [X8 + 0x90]
	0x02797D10 BL 0x291DF4C
	0x02797D14 CBZ X0, 0x2797D38
	0x02797D18 LDR X8, [X0]
	0x02797D1C LDR W1, [X20 + 0x8]
	0x02797D20 MOV W2, W19
	0x02797D24 LDP X20, X19, [X31 + 0x20]
	0x02797D28 LDP X4, X3, [X8 + 0x198]
	0x02797D2C LDP X22, X21, [X31 + 0x10]
	0x02797D30 LDR X30, [X31], #0x30
	0x02797D34 BR X4
	0x02797D38 BL 0x1C16F20
	0x02797D3C SUB X31, X31, 0x60
	0x02797D40 STP X30, X25, [X31 + 0x20]
	0x02797D44 STP X24, X23, [X31 + 0x30]
	0x02797D48 STP X22, X21, [X31 + 0x40]
	0x02797D4C STP X20, X19, [X31 + 0x50]
	0x02797D50 ADRP X23, 0x1C43000
	0x02797D54 LDRB W8, [X23 + 0x874]
	0x02797D58 MOV X20, X3
	0x02797D5C MOV X19, X2
	0x02797D60 MOV X22, X1
	0x02797D64 MOV X21, X0
	0x02797D68 TBNZ X8, 0x0, 0x2797D80
	0x02797D6C ADRP X0, 0x1986000
	0x02797D70 LDR X0, [X0 + 0x918]
	0x02797D74 BL 0x1C16CF4
	0x02797D78 MOVZ W8, 0x1
	0x02797D7C STRB W8, [X23 + 0x874]
	0x02797D80 CBZ X22, 0x2797EAC
	0x02797D84 LDR X0, [X20 + 0x20]
	0x02797D88 LDRB W8, [X0 + 0x135]
	0x02797D8C TBNZ X8, 0x0, 0x2797D94
	0x02797D90 BL 0x1C5C684
	0x02797D94 LDR X8, [X0 + 0xC0]
	0x02797D98 LDR X0, [X8 + 0x8]
	0x02797D9C LDRB W8, [X0 + 0x135]
	0x02797DA0 TBNZ X8, 0x0, 0x2797DA8
	0x02797DA4 BL 0x1C5C684
	0x02797DA8 LDR X8, [X22]
	0x02797DAC CMP X8, X0
	0x02797DB0 B.NE 0x2797FAC
	0x02797DB4 LDR X0, [X20 + 0x20]
	0x02797DB8 LDRB W8, [X0 + 0x135]
	0x02797DBC TBNZ X8, 0x0, 0x2797DC4
	0x02797DC0 BL 0x1C5C684
	0x02797DC4 LDR X8, [X0 + 0xC0]
	0x02797DC8 LDR X1, [X8 + 0x8]
	0x02797DCC LDRB W8, [X1 + 0x135]
	0x02797DD0 TBNZ X8, 0x0, 0x2797DE0
	0x02797DD4 MOV X0, X1
	0x02797DD8 BL 0x1C5C684
	0x02797DDC MOV X1, X0
	0x02797DE0 LDR X8, [X22]
	0x02797DE4 LDR X9, [X1 + 0x40]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Compare X1, 0
	007 JumpIfEqual {71}
	008 Move X20, X0
	009 Move X0, [X2+32]
	010 Move X19, X2
	011 Move X21, X1
	012 Move W8, [X0+309]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {18}
	017 Call 0x1C5D684
	018 Move X8, [X0+192]
	019 Move X0, [X8+8]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Move X8, [X21]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X0, [X19+32]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Move X1, [X8+8]
	037 Move W8, [X1+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {45}
	042 Move X0, X1
	043 Call 0x1C5D684
	044 Move X1, X0
	045 Move X8, [X21]
	046 Move X9, [X1+64]
	047 Move X0, X21
	048 Move X8, [X8+64]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Call 0x1C17E08
	051 Move X8, [X0+16]
	052 Move V0, [X0]
	053 Move [X31+16], X8
	054 Move [X31], V0
	055 Move X0, [X19+32]
	056 Move W8, [X0+309]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {62}
	061 Call 0x1C5D684
	062 Move X8, [X0+192]
	063 Move V0, [X31]
	064 Move X9, [X31+16]
	065 Add X1, X31, 32
	066 Move X2, [X8+104]
	067 Move X0, X20
	068 Move [X31+2], V0
	069 Move [X31+48], X9
	070 Call 0x2797DE8, X0, X1
	071 Move W0, 1
	072 Move X20, [X31+80]
	073 Move X19, [X31+88]
	074 Move X30, [X31+64]
	075 Move X21, [X31+72]
	076 Add X31, X31, 96
	077 Return X0
	078 Move X8, [X20+16]
	079 Move V0, [X20]
	080 Move [X31+48], X8
	081 Move [X31+2], V0
	082 Move X0, [X19+32]
	083 Call 0x199C99C
	084 Move X8, [X0+192]
	085 Add X1, X31, 32
	086 Move X0, [X8+8]
	087 Call 0x1C17E04
	088 Move X1, X31
	089 Call "il2cpp_vm_object_is_inst", X0
	090 Move X20, X0
	091 Call 0x19913C0
	092 Move X8, [X20]
	093 Move X0, X20
	094 Move X9, [X8+360]
	095 Move X1, [X8+368]
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X20, X0
	098 Move X0, 0x1987000
	099 Move X0, [X0+2336]
	100 Call 0x1C17D08
	101 Move X1, X20
	102 Move X2, X31
	103 Call SR.Format, X0, X1
	104 Move X20, X0
	105 Move X0, 0x1965000
	106 Move X0, [X0+1400]
	107 Call 0x1C17D08
	108 Call 0x1C17F10
	109 Move X21, X0
	110 Move X0, 0x1987000
	111 Move X0, [X0+2344]
	112 Call 0x1C17D08
	113 Move X2, X0
	114 Move X0, X21
	115 Move X1, X20
	116 Move X3, X31
	117 Call ArgumentException..ctor, X0, X1, X2
	118 Move X0, X21
	119 Move X1, X19
	120 Call 0x1C17DEC
	121 Call 0x1C181E0

Method: System.Int32 CompareTo(System.ValueTuple`2<T1, T2> other)

Disassembly:
	0x02797DE8 MOV X0, X22
	0x02797DEC LDR X8, [X8 + 0x40]
	0x02797DF0 CMP X8, X9
	0x02797DF4 B.NE 0x2798054
	0x02797DF8 BL 0x1C16E08
	0x02797DFC LDR X8, [X21]
	0x02797E00 LDR X22, [X0]
	0x02797E04 LDR W24, [X0 + 0x8]
	0x02797E08 STR X8, [X31 + 0x10]
	0x02797E0C LDR X0, [X20 + 0x20]
	0x02797E10 LDRB W8, [X0 + 0x135]
	0x02797E14 TBNZ X8, 0x0, 0x2797E1C
	0x02797E18 BL 0x1C5C684
	0x02797E1C LDR X8, [X0 + 0xC0]
	0x02797E20 ADD X1, X31, 0x10
	0x02797E24 LDR X0, [X8]
	0x02797E28 BL 0x1C16E04
	0x02797E2C STR X22, [X31 + 0x8]
	0x02797E30 LDR X8, [X20 + 0x20]
	0x02797E34 MOV X22, X0
	0x02797E38 LDRB W9, [X8 + 0x135]
	0x02797E3C TBNZ X9, 0x0, 0x2797E4C
	0x02797E40 MOV X0, X8
	0x02797E44 BL 0x1C5C684
	0x02797E48 MOV X8, X0
	0x02797E4C LDR X8, [X8 + 0xC0]
	0x02797E50 ADD X1, X31, 0x8
	0x02797E54 LDR X0, [X8]
	0x02797E58 BL 0x1C16E04
	0x02797E5C CBZ X19, 0x2798058
	0x02797E60 ADRP X25, 0x1986000
	0x02797E64 LDR X8, [X19]
	0x02797E68 LDR X25, [X25 + 0x918]
	0x02797E6C MOV X23, X0
	0x02797E70 LDRH W9, [X8 + 0x12E]
	0x02797E74 LDR X1, [X25]
	0x02797E78 CBZ X9, 0x2797E9C
	0x02797E7C LDR X10, [X8 + 0xB0]
	0x02797E80 ADD X10, X10, 0x8
	0x02797E84 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X21, X2
	007 Move X19, X1
	008 Move X20, X0
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X8, [X8+192]
	018 Move X0, [X8+112]
	019 Call Comparer`1<Entry<ByteEnum, Object>>.get_Default
	020 Compare X0, 0
	021 JumpIfEqual {59}
	022 Move X8, [X0]
	023 Move X3, [X19]
	024 Move X4, [X19+8]
	025 Move X1, [X20]
	026 Move X2, [X20+8]
	027 Move X9, [X8+408]
	028 Move X5, [X8+416]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Compare W0, 0
	031 JumpIfEqual {37}
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0
	037 Move X0, [X21+32]
	038 Move W8, [X0+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Call 0x1C5D684
	044 Move X8, [X0+192]
	045 Move X0, [X8+144]
	046 Call Comparer`1<Int32>.get_Default
	047 Compare X0, 0
	048 JumpIfEqual {59}
	049 Move X8, [X0]
	050 Move W2, [X19+16]
	051 Move W1, [X20+16]
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X4, [X8+408]
	055 Move X3, [X8+416]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 CallNoReturn X4
	059 Call 0x1C17F20

Method: System.Int32 System.Collections.IStructuralComparable.CompareTo(System.Object other, System.Collections.IComparer comparer)

Disassembly:
	0x02797E88 CMP X11, X1
	0x02797E8C B.EQ 0x2797EB4
	0x02797E90 SUBS X9, X9, 0x1
	0x02797E94 ADD X10, X10, 0x10
	0x02797E98 B.NE 0x2797E84
	0x02797E9C MOV X0, X19
	0x02797EA0 MOV W2, W31
	0x02797EA4 BL 0x1C5C788
	0x02797EA8 B 0x2797EC0
	0x02797EAC MOVZ W0, 0x1
	0x02797EB0 B 0x2797F94
	0x02797EB4 LDRSW X9, [X10]
	0x02797EB8 ADD X8, X8, X9, 0x4, LSL
	0x02797EBC ADD X0, X8, 0x138
	0x02797EC0 LDP X8, X3, [X0]
	0x02797EC4 MOV X0, X19
	0x02797EC8 MOV X1, X22
	0x02797ECC MOV X2, X23
	0x02797ED0 BLR X8
	0x02797ED4 CBNZ W0, 0x2797F94
	0x02797ED8 LDR W8, [X21 + 0x8]
	0x02797EDC STR W8, [X31 + 0x10]
	0x02797EE0 LDR X0, [X20 + 0x20]
	0x02797EE4 LDRB W8, [X0 + 0x135]
	0x02797EE8 TBNZ X8, 0x0, 0x2797EF0
	0x02797EEC BL 0x1C5C684
	0x02797EF0 LDR X8, [X0 + 0xC0]
	0x02797EF4 ADD X1, X31, 0x10
	0x02797EF8 LDR X0, [X8 + 0x10]
	0x02797EFC BL 0x1C16E04
	0x02797F00 STR W24, [X31 + 0x8]
	0x02797F04 LDR X8, [X20 + 0x20]
	0x02797F08 MOV X20, X0
	0x02797F0C LDRB W9, [X8 + 0x135]
	0x02797F10 TBNZ X9, 0x0, 0x2797F20
	0x02797F14 MOV X0, X8
	0x02797F18 BL 0x1C5C684
	0x02797F1C MOV X8, X0
	0x02797F20 LDR X8, [X8 + 0xC0]
	0x02797F24 ADD X1, X31, 0x8
	0x02797F28 LDR X0, [X8 + 0x10]
	0x02797F2C BL 0x1C16E04
	0x02797F30 LDR X8, [X19]
	0x02797F34 LDR X1, [X25]
	0x02797F38 MOV X21, X0
	0x02797F3C LDRH W9, [X8 + 0x12E]
	0x02797F40 CBZ X9, 0x2797F64
	0x02797F44 LDR X10, [X8 + 0xB0]
	0x02797F48 ADD X10, X10, 0x8
	0x02797F4C LDUR X11, [X10 - 0x8]
	0x02797F50 CMP X11, X1
	0x02797F54 B.EQ 0x2797F74
	0x02797F58 SUBS X9, X9, 0x1
	0x02797F5C ADD X10, X10, 0x10
	0x02797F60 B.NE 0x2797F4C
	0x02797F64 MOV X0, X19
	0x02797F68 MOV W2, W31
	0x02797F6C BL 0x1C5C788
	0x02797F70 B 0x2797F80
	0x02797F74 LDRSW X9, [X10]
	0x02797F78 ADD X8, X8, X9, 0x4, LSL
	0x02797F7C ADD X0, X8, 0x138
	0x02797F80 LDP X8, X3, [X0]
	0x02797F84 MOV X0, X19
	0x02797F88 MOV X1, X20
	0x02797F8C MOV X2, X21
	0x02797F90 BLR X8
	0x02797F94 LDP X20, X19, [X31 + 0x50]
	0x02797F98 LDP X22, X21, [X31 + 0x40]
	0x02797F9C LDP X24, X23, [X31 + 0x30]
	0x02797FA0 LDP X30, X25, [X31 + 0x20]
	0x02797FA4 ADD X31, X31, 0x60
	0x02797FA8 RET
	0x02797FAC LDR W8, [X21 + 0x8]
	0x02797FB0 LDR X9, [X21]
	0x02797FB4 STR W8, [X31 + 0x18]
	0x02797FB8 STR X9, [X31 + 0x10]
	0x02797FBC LDR X0, [X20 + 0x20]
	0x02797FC0 BL 0x199B99C
	0x02797FC4 LDR X8, [X0 + 0xC0]
	0x02797FC8 ADD X1, X31, 0x10
	0x02797FCC LDR X0, [X8 + 0x8]
	0x02797FD0 BL 0x1C16E04
	0x02797FD4 MOV X1, X31
	0x02797FD8 BL 0x33BE520
	0x02797FDC MOV X19, X0
	0x02797FE0 BL 0x19903C0
	0x02797FE4 LDR X8, [X19]
	0x02797FE8 MOV X0, X19
	0x02797FEC LDP X9, X1, [X8 + 0x168]
	0x02797FF0 BLR X9
	0x02797FF4 MOV X19, X0
	0x02797FF8 ADRP X0, 0x1986000
	0x02797FFC LDR X0, [X0 + 0x920]
	0x02798000 BL 0x1C16D08
	0x02798004 MOV X1, X19
	0x02798008 MOV X2, X31
	0x0279800C BL 0x32094D4
	0x02798010 MOV X19, X0
	0x02798014 ADRP X0, 0x1963000
	0x02798018 LDR X0, [X0 + 0x578]
	0x0279801C BL 0x1C16D08
	0x02798020 BL 0x1C16F10
	0x02798024 MOV X21, X0
	0x02798028 ADRP X0, 0x1985000
	0x0279802C LDR X0, [X0 + 0x928]
	0x02798030 BL 0x1C16D08
	0x02798034 MOV X2, X0
	0x02798038 MOV X0, X21
	0x0279803C MOV X1, X19
	0x02798040 MOV X3, X31
	0x02798044 BL 0x330E16C
	0x02798048 MOV X0, X21
	0x0279804C MOV X1, X20
	0x02798050 BL 0x1C16DEC
	0x02798054 BL 0x1C171E0
	0x02798058 BL 0x1C16F20
	0x0279805C SUB X31, X31, 0x40
	0x02798060 STR X30, [X31 + 0x20]
	0x02798064 STP X20, X19, [X31 + 0x30]
	0x02798068 LDR X8, [X1 + 0x20]
	0x0279806C MOV X20, X1
	0x02798070 MOV X19, X0
	0x02798074 LDRB W9, [X8 + 0x135]
	0x02798078 TBNZ X9, 0x0, 0x2798088
	0x0279807C MOV X0, X8
	0x02798080 BL 0x1C5C684
	0x02798084 MOV X8, X0
	0x02798088 LDR X8, [X8 + 0xC0]
	0x0279808C LDR X0, [X8]
	0x02798090 LDRB W8, [X0 + 0x135]
	0x02798094 TBNZ X8, 0x0, 0x279809C
	0x02798098 BL 0x1C5C684
	0x0279809C MOVN X8, 0x0
	0x027980A0 STP X0, X8, [X31 + 0x8]
	0x027980A4 LDR X8, [X19]
	0x027980A8 ADD X0, X31, 0x8
	0x027980AC MOV X1, X31
	0x027980B0 STR X8, [X31 + 0x18]
	0x027980B4 BL 0x33D55D8
	0x027980B8 LDR X8, [X20 + 0x20]
	0x027980BC MOV W20, W0
	0x027980C0 LDRB W9, [X8 + 0x135]
	0x027980C4 TBNZ X9, 0x0, 0x27980D4
	0x027980C8 MOV X0, X8
	0x027980CC BL 0x1C5C684
	0x027980D0 MOV X8, X0
	0x027980D4 LDR X8, [X8 + 0xC0]
	0x027980D8 ADD X0, X19, 0x8
	0x027980DC LDR X1, [X8 + 0xB8]
	0x027980E0 BL 0x337B6D8
	0x027980E4 MOV W1, W0
	0x027980E8 MOV W0, W20
	0x027980EC MOV X2, X31
	0x027980F0 BL 0x339BC20
	0x027980F4 LDP X20, X19, [X31 + 0x30]
	0x027980F8 LDR X30, [X31 + 0x20]
	0x027980FC ADD X31, X31, 0x40
	0x02798100 RET
	0x02798104 STR X30, [X31 - 0x20]!
	0x02798108 STP X20, X19, [X31 + 0x10]
	0x0279810C LDR X8, [X2 + 0x20]
	0x02798110 MOV X19, X1
	0x02798114 MOV X20, X0
	0x02798118 LDRB W9, [X8 + 0x135]
	0x0279811C TBNZ X9, 0x0, 0x279812C
	0x02798120 MOV X0, X8
	0x02798124 BL 0x1C5C684
	0x02798128 MOV X8, X0
	0x0279812C LDR X8, [X8 + 0xC0]
	0x02798130 MOV X0, X20
	0x02798134 MOV X1, X19
	0x02798138 LDP X20, X19, [X31 + 0x10]
	0x0279813C LDR X2, [X8 + 0xC0]
	0x02798140 LDR X30, [X31], #0x20
	0x02798144 B 0x2798148
	0x02798148 SUB X31, X31, 0x40
	0x0279814C STP X30, X23, [X31 + 0x10]
	0x02798150 STP X22, X21, [X31 + 0x20]
	0x02798154 STP X20, X19, [X31 + 0x30]
	0x02798158 ADRP X22, 0x1C42000
	0x0279815C LDRB W8, [X22 + 0x875]
	0x02798160 MOV X20, X2
	0x02798164 MOV X19, X1
	0x02798168 MOV X21, X0
	0x0279816C TBNZ X8, 0x0, 0x2798184
	0x02798170 ADRP X0, 0x1985000
	0x02798174 LDR X0, [X0 + 0x900]
	0x02798178 BL 0x1C16CF4
	0x0279817C MOVZ W8, 0x1
	0x02798180 STRB W8, [X22 + 0x875]
	0x02798184 LDR X8, [X21]
	0x02798188 STR X8, [X31 + 0x8]
	0x0279818C LDR X0, [X20 + 0x20]
	0x02798190 LDRB W8, [X0 + 0x135]
	0x02798194 TBNZ X8, 0x0, 0x279819C
	0x02798198 BL 0x1C5C684
	0x0279819C LDR X8, [X0 + 0xC0]
	0x027981A0 ADD X1, X31, 0x8
	0x027981A4 LDR X0, [X8]
	0x027981A8 BL 0x1C16E04

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X23, 0x1C44000
	011 Move W8, [X23+2159]
	012 Move X20, X3
	013 Move X19, X2
	014 Move X22, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x1987000
	021 Move X0, [X0+2328]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+2159], W8
	025 Compare X22, 0
	026 JumpIfEqual {118}
	027 Move X0, [X20+32]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Move X8, [X0+192]
	035 Move X0, [X8+8]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X22]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, [X20+32]
	045 Move W8, [X0+309]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {51}
	050 Call 0x1C5D684
	051 Move X8, [X0+192]
	052 Move X1, [X8+8]
	053 Move W8, [X1+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {61}
	058 Move X0, X1
	059 Call 0x1C5D684
	060 Move X1, X0
	061 Move X8, [X22]
	062 Move X9, [X1+64]
	063 Move X0, X22
	064 Move X8, [X8+64]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Call 0x1C17E08
	067 Move V1, [X0]
	068 Move V0, [X21]
	069 Move W24, [X0+16]
	070 Move [X31+16], V0
	071 Move [X31+24], V1
	072 Move X0, [X20+32]
	073 Move W8, [X0+309]
	074 Move TEMP, X8
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {79}
	078 Call 0x1C5D684
	079 Move X8, [X0+192]
	080 Add X1, X31, 16
	081 Move X0, [X8]
	082 Call 0x1C17E04
	083 Move V0, [X31+2]
	084 Move X22, X0
	085 Move [X31], V0
	086 Move X8, [X20+32]
	087 Move W9, [X8+309]
	088 Move TEMP, X9
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {95}
	092 Move X0, X8
	093 Call 0x1C5D684
	094 Move X8, X0
	095 Move X8, [X8+192]
	096 Add X1, X31, 0
	097 Move X0, [X8]
	098 Call 0x1C17E04
	099 Compare X19, 0
	100 JumpIfEqual {236}
	101 Move X25, 0x1987000
	102 Move X8, [X19]
	103 Move X25, [X25+2328]
	104 Move X23, X0
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Move X1, [X25]
	107 Compare X9, 0
	108 JumpIfEqual {115}
	109 Move X10, [X8+176]
	110 Add X10, X10, 8
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Subtract X9, X9, 1
	114 Add X10, X10, 16
	115 Move X0, X19
	116 Move W2, W31
	117 Call 0x1C5D788
	118 Move W0, 1
	119 NotImplemented "Instruction LDRSW not yet implemented."
	120 Add X8, X8, X9
	121 Add X0, X8, 312
	122 Move X8, [X0]
	123 Move X3, [X0+8]
	124 Move X0, X19
	125 Move X1, X22
	126 Move X2, X23
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Compare W0, 0
	129 JumpIfNotEqual {182}
	130 Move W8, [X21+16]
	131 Move [X31+16], W8
	132 Move X0, [X20+32]
	133 Move W8, [X0+309]
	134 Move TEMP, X8
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {139}
	138 Call 0x1C5D684
	139 Move X8, [X0+192]
	140 Add X1, X31, 16
	141 Move X0, [X8+16]
	142 Call 0x1C17E04
	143 Move [X31], W24
	144 Move X8, [X20+32]
	145 Move X20, X0
	146 Move W9, [X8+309]
	147 Move TEMP, X9
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfEqual {154}
	151 Move X0, X8
	152 Call 0x1C5D684
	153 Move X8, X0
	154 Move X8, [X8+192]
	155 Add X1, X31, 0
	156 Move X0, [X8+16]
	157 Call 0x1C17E04
	158 Move X8, [X19]
	159 Move X1, [X25]
	160 Move X21, X0
	161 NotImplemented "Instruction LDRH not yet implemented."
	162 Compare X9, 0
	163 JumpIfEqual {170}
	164 Move X10, [X8+176]
	165 Add X10, X10, 8
	166 NotImplemented "Instruction LDUR not yet implemented."
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Subtract X9, X9, 1
	169 Add X10, X10, 16
	170 Move X0, X19
	171 Move W2, W31
	172 Call 0x1C5D788
	173 NotImplemented "Instruction LDRSW not yet implemented."
	174 Add X8, X8, X9
	175 Add X0, X8, 312
	176 Move X8, [X0]
	177 Move X3, [X0+8]
	178 Move X0, X19
	179 Move X1, X20
	180 Move X2, X21
	181 NotImplemented "Instruction BLR not yet implemented."
	182 Move X20, [X31+112]
	183 Move X19, [X31+120]
	184 Move X22, [X31+96]
	185 Move X21, [X31+104]
	186 Move X24, [X31+80]
	187 Move X23, [X31+88]
	188 Move X30, [X31+64]
	189 Move X25, [X31+72]
	190 Add X31, X31, 128
	191 Return X0
	192 Move X8, [X21+16]
	193 Move V0, [X21]
	194 Move [X31+48], X8
	195 Move [X31+2], V0
	196 Move X0, [X20+32]
	197 Call 0x199C99C
	198 Move X8, [X0+192]
	199 Add X1, X31, 32
	200 Move X0, [X8+8]
	201 Call 0x1C17E04
	202 Move X1, X31
	203 Call "il2cpp_vm_object_is_inst", X0
	204 Move X19, X0
	205 Call 0x19913C0
	206 Move X8, [X19]
	207 Move X0, X19
	208 Move X9, [X8+360]
	209 Move X1, [X8+368]
	210 NotImplemented "Instruction BLR not yet implemented."
	211 Move X19, X0
	212 Move X0, 0x1986000
	213 Move X0, [X0+2336]
	214 Call 0x1C17D08
	215 Move X1, X19
	216 Move X2, X31
	217 Call SR.Format, X0, X1
	218 Move X19, X0
	219 Move X0, 0x1964000
	220 Move X0, [X0+1400]
	221 Call 0x1C17D08
	222 Call 0x1C17F10
	223 Move X21, X0
	224 Move X0, 0x1986000
	225 Move X0, [X0+2344]
	226 Call 0x1C17D08
	227 Move X2, X0
	228 Move X0, X21
	229 Move X1, X19
	230 Move X3, X31
	231 Call ArgumentException..ctor, X0, X1, X2
	232 Move X0, X21
	233 Move X1, X20
	234 Call 0x1C17DEC
	235 Call 0x1C181E0
	236 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x027981AC CBZ X19, 0x27982D8
	0x027981B0 ADRP X23, 0x1985000
	0x027981B4 LDR X8, [X19]
	0x027981B8 LDR X23, [X23 + 0x900]
	0x027981BC MOV X22, X0
	0x027981C0 LDRH W9, [X8 + 0x12E]
	0x027981C4 LDR X1, [X23]
	0x027981C8 CBZ X9, 0x27981EC
	0x027981CC LDR X10, [X8 + 0xB0]
	0x027981D0 ADD X10, X10, 0x8
	0x027981D4 LDUR X11, [X10 - 0x8]
	0x027981D8 CMP X11, X1
	0x027981DC B.EQ 0x27981FC
	0x027981E0 SUBS X9, X9, 0x1
	0x027981E4 ADD X10, X10, 0x10
	0x027981E8 B.NE 0x27981D4
	0x027981EC MOVZ W2, 0x1
	0x027981F0 MOV X0, X19
	0x027981F4 BL 0x1C5C788
	0x027981F8 B 0x279820C
	0x027981FC LDR W9, [X10]
	0x02798200 ADD W9, W9, 0x1
	0x02798204 ADD X8, X8, W9, 0x4, SXTW
	0x02798208 ADD X0, X8, 0x138
	0x0279820C LDP X8, X2, [X0]
	0x02798210 MOV X0, X19
	0x02798214 MOV X1, X22
	0x02798218 BLR X8
	0x0279821C LDR W8, [X21 + 0x8]
	0x02798220 STR W8, [X31 + 0x4]
	0x02798224 LDR X8, [X20 + 0x20]
	0x02798228 MOV W20, W0
	0x0279822C LDRB W9, [X8 + 0x135]
	0x02798230 TBNZ X9, 0x0, 0x2798240
	0x02798234 MOV X0, X8
	0x02798238 BL 0x1C5C684
	0x0279823C MOV X8, X0
	0x02798240 LDR X8, [X8 + 0xC0]
	0x02798244 ADD X1, X31, 0x4
	0x02798248 LDR X0, [X8 + 0x10]
	0x0279824C BL 0x1C16E04
	0x02798250 LDR X8, [X19]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X8, [X1+32]
	006 Move X20, X1
	007 Move X19, X0
	008 Move W9, [X8+309]
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {16}
	013 Move X0, X8
	014 Call 0x1C5D684
	015 Move X8, X0
	016 Move X8, [X8+192]
	017 Move X0, [X8]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Move TEMP, 0
	025 Not TEMP
	026 Move X8, TEMP
	027 Move [X31], X0
	028 Move [X31+8], X8
	029 Move V0, [X19]
	030 Add X0, X31, 0
	031 Move X1, X31
	032 Move [X31+1], V0
	033 Call ValueType.GetHashCode, X0
	034 Move X8, [X20+32]
	035 Move W20, W0
	036 Move W9, [X8+309]
	037 Move TEMP, X9
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {44}
	041 Move X0, X8
	042 Call 0x1C5D684
	043 Move X8, X0
	044 Move X8, [X8+192]
	045 Add X0, X19, 16
	046 Move X1, [X8+184]
	047 Call Int32.GetHashCode, X0
	048 Move W1, W0
	049 Move W0, W20
	050 Move X2, X31
	051 Call ValueTuple.CombineHashCodes, X0, X1
	052 Move X20, [X31+48]
	053 Move X19, [X31+56]
	054 Move X30, [X31+32]
	055 Add X31, X31, 64
	056 Return X0

Method: System.Int32 System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer comparer)

Disassembly:
	0x02798254 LDR X1, [X23]
	0x02798258 MOV X21, X0
	0x0279825C LDRH W9, [X8 + 0x12E]
	0x02798260 CBZ X9, 0x2798284
	0x02798264 LDR X10, [X8 + 0xB0]
	0x02798268 ADD X10, X10, 0x8
	0x0279826C LDUR X11, [X10 - 0x8]
	0x02798270 CMP X11, X1
	0x02798274 B.EQ 0x2798294
	0x02798278 SUBS X9, X9, 0x1
	0x0279827C ADD X10, X10, 0x10
	0x02798280 B.NE 0x279826C
	0x02798284 MOVZ W2, 0x1
	0x02798288 MOV X0, X19
	0x0279828C BL 0x1C5C788
	0x02798290 B 0x27982A4
	0x02798294 LDR W9, [X10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {15}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X8, X0
	015 Move X8, [X8+192]
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X2, [X8+192]
	021 Move X30, [X31+32]

Method: System.Int32 GetHashCodeCore(System.Collections.IEqualityComparer comparer)

Disassembly:
	0x02798298 ADD W9, W9, 0x1
	0x0279829C ADD X8, X8, W9, 0x4, SXTW
	0x027982A0 ADD X0, X8, 0x138
	0x027982A4 LDP X8, X2, [X0]
	0x027982A8 MOV X0, X19
	0x027982AC MOV X1, X21
	0x027982B0 BLR X8
	0x027982B4 MOV W1, W0
	0x027982B8 MOV W0, W20
	0x027982BC MOV X2, X31
	0x027982C0 BL 0x339BC20
	0x027982C4 LDP X20, X19, [X31 + 0x30]
	0x027982C8 LDP X22, X21, [X31 + 0x20]
	0x027982CC LDP X30, X23, [X31 + 0x10]
	0x027982D0 ADD X31, X31, 0x40
	0x027982D4 RET
	0x027982D8 BL 0x1C16F20
	0x027982DC STR X30, [X31 - 0x20]!
	0x027982E0 STP X20, X19, [X31 + 0x10]
	0x027982E4 LDR X8, [X2 + 0x20]
	0x027982E8 MOV X19, X1
	0x027982EC MOV X20, X0
	0x027982F0 LDRB W9, [X8 + 0x135]
	0x027982F4 TBNZ X9, 0x0, 0x2798304
	0x027982F8 MOV X0, X8
	0x027982FC BL 0x1C5C684
	0x02798300 MOV X8, X0
	0x02798304 LDR X8, [X8 + 0xC0]
	0x02798308 MOV X0, X20
	0x0279830C MOV X1, X19
	0x02798310 LDP X20, X19, [X31 + 0x10]
	0x02798314 LDR X2, [X8 + 0xC0]
	0x02798318 LDR X30, [X31], #0x20
	0x0279831C B 0x2798148
	0x02798320 SUB X31, X31, 0x50
	0x02798324 STR X30, [X31 + 0x20]
	0x02798328 STP X22, X21, [X31 + 0x30]
	0x0279832C STP X20, X19, [X31 + 0x40]
	0x02798330 ADRP X19, 0x1C42000
	0x02798334 ADRP X22, 0x195B000
	0x02798338 LDRB W8, [X19 + 0x876]
	0x0279833C LDR X22, [X22 + 0xAC8]
	0x02798340 MOV X21, X1
	0x02798344 MOV X20, X0
	0x02798348 TBNZ X8, 0x0, 0x2798384
	0x0279834C ADRP X0, 0x195B000
	0x02798350 LDR X0, [X0 + 0xAC8]
	0x02798354 BL 0x1C16CF4
	0x02798358 ADRP X0, 0x195B000
	0x0279835C LDR X0, [X0 + 0x838]
	0x02798360 BL 0x1C16CF4
	0x02798364 ADRP X0, 0x1966000
	0x02798368 LDR X0, [X0 + 0x310]
	0x0279836C BL 0x1C16CF4
	0x02798370 ADRP X0, 0x195C000
	0x02798374 LDR X0, [X0 + 0x608]
	0x02798378 BL 0x1C16CF4
	0x0279837C MOVZ W8, 0x1
	0x02798380 STRB W8, [X19 + 0x876]
	0x02798384 LDR X0, [X22]
	0x02798388 MOVZ W1, 0x5
	0x0279838C BL 0x1C16D6C
	0x02798390 CBZ X0, 0x2798488
	0x02798394 LDR W8, [X0 + 0x18]
	0x02798398 MOV X19, X0
	0x0279839C CBZ W8, 0x2798484
	0x027983A0 ADRP X8, 0x1966000
	0x027983A4 LDR X8, [X8 + 0x310]
	0x027983A8 LDR X8, [X8]
	0x027983AC STR X8, [X19 + 0x20]
	0x027983B0 LDR X0, [X21 + 0x20]
	0x027983B4 LDRB W8, [X0 + 0x135]
	0x027983B8 TBNZ X8, 0x0, 0x27983C0
	0x027983BC BL 0x1C5C684
	0x027983C0 LDR X8, [X0 + 0xC0]
	0x027983C4 LDR X0, [X8]
	0x027983C8 LDRB W8, [X0 + 0x135]
	0x027983CC TBNZ X8, 0x0, 0x27983D4
	0x027983D0 BL 0x1C5C684
	0x027983D4 MOVN X8, 0x0
	0x027983D8 STP X0, X8, [X31 + 0x8]
	0x027983DC LDR X8, [X20]
	0x027983E0 ADD X0, X31, 0x8
	0x027983E4 MOV X1, X31
	0x027983E8 STR X8, [X31 + 0x18]
	0x027983EC BL 0x33D5650
	0x027983F0 LDR W8, [X19 + 0x18]
	0x027983F4 CMP W8, 0x1
	0x027983F8 B.LS 0x2798484
	0x027983FC CMP W8, 0x2
	0x02798400 STR X0, [X19 + 0x28]
	0x02798404 B.EQ 0x2798484
	0x02798408 ADRP X8, 0x195B000
	0x0279840C LDR X8, [X8 + 0x838]
	0x02798410 ADD X20, X20, 0x8
	0x02798414 LDR X8, [X8]
	0x02798418 STR X8, [X19 + 0x30]
	0x0279841C LDR X0, [X21 + 0x20]
	0x02798420 LDRB W8, [X0 + 0x135]
	0x02798424 TBNZ X8, 0x0, 0x279842C
	0x02798428 BL 0x1C5C684

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X22, 0x1C43000
	009 Move W8, [X22+2160]
	010 Move X20, X2
	011 Move X19, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x1986000
	018 Move X0, [X0+2304]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+2160], W8
	022 Move V0, [X21]
	023 Move [X31+1], V0
	024 Move X0, [X20+32]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move X8, [X0+192]
	032 Add X1, X31, 16
	033 Move X0, [X8]
	034 Call 0x1C17E04
	035 Compare X19, 0
	036 JumpIfEqual {115}
	037 Move X23, 0x1986000
	038 Move X8, [X19]
	039 Move X23, [X23+2304]
	040 Move X22, X0
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X23]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 1
	052 Move X0, X19
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 1
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X8, [X0]
	059 Move X2, [X0+8]
	060 Move X0, X19
	061 Move X1, X22
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move W8, [X21+16]
	064 Move [X31+12], W8
	065 Move X8, [X20+32]
	066 Move W20, W0
	067 Move W9, [X8+309]
	068 Move TEMP, X9
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {75}
	072 Move X0, X8
	073 Call 0x1C5D684
	074 Move X8, X0
	075 Move X8, [X8+192]
	076 Add X1, X31, 12
	077 Move X0, [X8+16]
	078 Call 0x1C17E04
	079 Move X8, [X19]
	080 Move X1, [X23]
	081 Move X21, X0
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Compare X9, 0
	084 JumpIfEqual {91}
	085 Move X10, [X8+176]
	086 Add X10, X10, 8
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Subtract X9, X9, 1
	090 Add X10, X10, 16
	091 Move W2, 1
	092 Move X0, X19
	093 Call 0x1C5D788
	094 Move W9, [X10]
	095 Add W9, W9, 1
	096 Add X8, X8, W9
	097 Add X0, X8, 312
	098 Move X8, [X0]
	099 Move X2, [X0+8]
	100 Move X0, X19
	101 Move X1, X21
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move W1, W0
	104 Move W0, W20
	105 Move X2, X31
	106 Call ValueTuple.CombineHashCodes, X0, X1
	107 Move X20, [X31+64]
	108 Move X19, [X31+72]
	109 Move X22, [X31+48]
	110 Move X21, [X31+56]
	111 Move X30, [X31+32]
	112 Move X23, [X31+40]
	113 Add X31, X31, 80
	114 Return X0
	115 Call 0x1C17F20

Method: System.Int32 System.IValueTupleInternal.GetHashCode(System.Collections.IEqualityComparer comparer)

Disassembly:
	0x0279842C LDR X8, [X0 + 0xC0]
	0x02798430 MOV X0, X20
	0x02798434 LDR X1, [X8 + 0xD0]
	0x02798438 BL 0x337B6E0
	0x0279843C LDR W8, [X19 + 0x18]
	0x02798440 CMP W8, 0x3
	0x02798444 B.LS 0x2798484
	0x02798448 CMP W8, 0x4
	0x0279844C STR X0, [X19 + 0x38]
	0x02798450 B.EQ 0x2798484
	0x02798454 ADRP X8, 0x195C000
	0x02798458 LDR X8, [X8 + 0x608]
	0x0279845C MOV X0, X19
	0x02798460 MOV X1, X31
	0x02798464 LDR X8, [X8]
	0x02798468 STR X8, [X19 + 0x40]
	0x0279846C BL 0x32278CC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {15}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X8, X0
	015 Move X8, [X8+192]
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X2, [X8+192]
	021 Move X30, [X31+32]
	022 Call 0x2798298, X0, X1
	023 Return X0

Method: System.String ToString()

Disassembly:
	0x02798470 LDP X20, X19, [X31 + 0x40]
	0x02798474 LDP X22, X21, [X31 + 0x30]
	0x02798478 LDR X30, [X31 + 0x20]
	0x0279847C ADD X31, X31, 0x50
	0x02798480 RET
	0x02798484 BL 0x1C16F28
	0x02798488 BL 0x1C16F20
	0x0279848C SUB X31, X31, 0x50
	0x02798490 STR X30, [X31 + 0x20]
	0x02798494 STP X22, X21, [X31 + 0x30]
	0x02798498 STP X20, X19, [X31 + 0x40]
	0x0279849C ADRP X21, 0x1C42000
	0x027984A0 LDRB W8, [X21 + 0x877]
	0x027984A4 MOV X20, X1
	0x027984A8 MOV X19, X0
	0x027984AC TBNZ X8, 0x0, 0x27984D0
	0x027984B0 ADRP X0, 0x195B000
	0x027984B4 LDR X0, [X0 + 0x838]
	0x027984B8 BL 0x1C16CF4
	0x027984BC ADRP X0, 0x195C000
	0x027984C0 LDR X0, [X0 + 0x608]
	0x027984C4 BL 0x1C16CF4
	0x027984C8 MOVZ W8, 0x1
	0x027984CC STRB W8, [X21 + 0x877]
	0x027984D0 LDR X0, [X20 + 0x20]
	0x027984D4 LDRB W8, [X0 + 0x135]
	0x027984D8 TBNZ X8, 0x0, 0x27984E0
	0x027984DC BL 0x1C5C684
	0x027984E0 LDR X8, [X0 + 0xC0]
	0x027984E4 ADRP X21, 0x195B000
	0x027984E8 LDR X0, [X8]
	0x027984EC LDRB W8, [X0 + 0x135]
	0x027984F0 LDR X21, [X21 + 0x838]
	0x027984F4 TBNZ X8, 0x0, 0x27984FC
	0x027984F8 BL 0x1C5C684
	0x027984FC MOVN X8, 0x0
	0x02798500 STP X0, X8, [X31 + 0x8]
	0x02798504 LDR X8, [X19]
	0x02798508 ADRP X22, 0x195C000
	0x0279850C LDR X22, [X22 + 0x608]
	0x02798510 ADD X0, X31, 0x8
	0x02798514 MOV X1, X31
	0x02798518 STR X8, [X31 + 0x18]
	0x0279851C BL 0x33D5650
	0x02798520 LDR X8, [X20 + 0x20]
	0x02798524 LDR X20, [X21]
	0x02798528 MOV X21, X0
	0x0279852C LDRB W9, [X8 + 0x135]
	0x02798530 TBNZ X9, 0x0, 0x2798540
	0x02798534 MOV X0, X8
	0x02798538 BL 0x1C5C684
	0x0279853C MOV X8, X0
	0x02798540 LDR X8, [X8 + 0xC0]
	0x02798544 ADD X0, X19, 0x8
	0x02798548 LDR X1, [X8 + 0xD0]
	0x0279854C BL 0x337B6E0
	0x02798550 LDR X3, [X22]
	0x02798554 MOV X2, X0
	0x02798558 MOV X0, X21
	0x0279855C MOV X1, X20
	0x02798560 MOV X4, X31
	0x02798564 BL 0x32277C4
	0x02798568 LDP X20, X19, [X31 + 0x40]
	0x0279856C LDP X22, X21, [X31 + 0x30]
	0x02798570 LDR X30, [X31 + 0x20]
	0x02798574 ADD X31, X31, 0x50
	0x02798578 RET
	0x0279857C MOVZ W0, 0x2
	0x02798580 RET
	0x02798584 STP W1, W2, [X0]
	0x02798588 RET
	0x0279858C STP X30, X21, [X31 - 0x20]!
	0x02798590 STP X20, X19, [X31 + 0x10]
	0x02798594 LDR X8, [X2 + 0x20]
	0x02798598 MOV X20, X2
	0x0279859C MOV X21, X1
	0x027985A0 MOV X19, X0
	0x027985A4 LDRB W9, [X8 + 0x135]
	0x027985A8 TBNZ X9, 0x0, 0x27985B8
	0x027985AC MOV X0, X8
	0x027985B0 BL 0x1C5C684
	0x027985B4 MOV X8, X0
	0x027985B8 LDR X8, [X8 + 0xC0]
	0x027985BC LDR X0, [X8 + 0x8]
	0x027985C0 LDRB W8, [X0 + 0x135]
	0x027985C4 TBNZ X8, 0x0, 0x27985CC
	0x027985C8 BL 0x1C5C684
	0x027985CC CBZ X21, 0x27985DC
	0x027985D0 LDR X8, [X21]
	0x027985D4 CMP X8, X0
	0x027985D8 B.EQ 0x27985EC

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X19, 0x1C43000
	008 Move X22, 0x195C000
	009 Move W8, [X19+2161]
	010 Move X22, [X22+2760]
	011 Move X21, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x195C000
	018 Move X0, [X0+2760]
	019 Call 0x1C17CF4
	020 Move X0, 0x195C000
	021 Move X0, [X0+2104]
	022 Call 0x1C17CF4
	023 Move X0, 0x1967000
	024 Move X0, [X0+784]
	025 Call 0x1C17CF4
	026 Move X0, 0x195D000
	027 Move X0, [X0+1544]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X19+2161], W8
	031 Move X0, [X22]
	032 Move W1, 5
	033 Call 0x1C17D6C
	034 Compare X0, 0
	035 JumpIfEqual {108}
	036 Move W8, [X0+24]
	037 Move X19, X0
	038 Compare W8, 0
	039 JumpIfEqual {107}
	040 Move X8, 0x1967000
	041 Move X8, [X8+784]
	042 Move X8, [X8]
	043 Move [X19+32], X8
	044 Move X0, [X21+32]
	045 Move W8, [X0+309]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {51}
	050 Call 0x1C5D684
	051 Move X8, [X0+192]
	052 Move X0, [X8]
	053 Move W8, [X0+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {59}
	058 Call 0x1C5D684
	059 Move TEMP, 0
	060 Not TEMP
	061 Move X8, TEMP
	062 Move [X31], X0
	063 Move [X31+8], X8
	064 Move V0, [X20]
	065 Add X0, X31, 0
	066 Move X1, X31
	067 Move [X31+1], V0
	068 Call ValueType.ToString, X0
	069 Move W8, [X19+24]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move [X19+40], X0
	073 Move X8, 0x195C000
	074 Move X8, [X8+2104]
	075 Add X20, X20, 16
	076 Move X8, [X8]
	077 Move [X19+48], X8
	078 Move X0, [X21+32]
	079 Move W8, [X0+309]
	080 Move TEMP, X8
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {85}
	084 Call 0x1C5D684
	085 Move X8, [X0+192]
	086 Move X0, X20
	087 Move X1, [X8+208]
	088 Call Int32.ToString, X0
	089 Move W8, [X19+24]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move [X19+56], X0
	093 Move X8, 0x195D000
	094 Move X8, [X8+1544]
	095 Move X0, X19
	096 Move X1, X31
	097 Move X8, [X8]
	098 Move [X19+64], X8
	099 Call String.Concat, X0
	100 Move X20, [X31+64]
	101 Move X19, [X31+72]
	102 Move X22, [X31+48]
	103 Move X21, [X31+56]
	104 Move X30, [X31+32]
	105 Add X31, X31, 80
	106 Return X0
	107 Call 0x1C17F28
	108 Call 0x1C17F20

Method: System.String System.IValueTupleInternal.ToStringEnd()

Disassembly:
	0x027985DC LDP X20, X19, [X31 + 0x10]
	0x027985E0 MOV W0, W31
	0x027985E4 LDP X30, X21, [X31], #0x20
	0x027985E8 RET
	0x027985EC LDR X0, [X20 + 0x20]
	0x027985F0 LDRB W8, [X0 + 0x135]
	0x027985F4 TBNZ X8, 0x0, 0x27985FC
	0x027985F8 BL 0x1C5C684
	0x027985FC LDR X8, [X0 + 0xC0]
	0x02798600 LDR X1, [X8 + 0x8]
	0x02798604 LDRB W8, [X1 + 0x135]
	0x02798608 TBNZ X8, 0x0, 0x2798618
	0x0279860C MOV X0, X1
	0x02798610 BL 0x1C5C684
	0x02798614 MOV X1, X0
	0x02798618 LDR X8, [X21]
	0x0279861C LDR X9, [X1 + 0x40]
	0x02798620 MOV X0, X21
	0x02798624 LDR X8, [X8 + 0x40]
	0x02798628 CMP X8, X9
	0x0279862C B.NE 0x2798668
	0x02798630 BL 0x1C16E08
	0x02798634 MOV X8, X0
	0x02798638 LDR X0, [X20 + 0x20]
	0x0279863C LDR X20, [X8]
	0x02798640 LDRB W9, [X0 + 0x135]
	0x02798644 TBNZ X9, 0x0, 0x279864C
	0x02798648 BL 0x1C5C684
	0x0279864C LDR X8, [X0 + 0xC0]
	0x02798650 MOV X0, X19
	0x02798654 MOV X1, X20
	0x02798658 LDP X20, X19, [X31 + 0x10]
	0x0279865C LDR X2, [X8 + 0x18]
	0x02798660 LDP X30, X21, [X31], #0x20
	0x02798664 B 0x279866C
	0x02798668 BL 0x1C171E0
	0x0279866C STP X30, X21, [X31 - 0x20]!
	0x02798670 STP X20, X19, [X31 + 0x10]
	0x02798674 LDR X8, [X2 + 0x20]
	0x02798678 MOV X21, X2
	0x0279867C MOV X19, X1
	0x02798680 MOV X20, X0
	0x02798684 LDRB W9, [X8 + 0x135]
	0x02798688 TBNZ X9, 0x0, 0x2798698
	0x0279868C MOV X0, X8
	0x02798690 BL 0x1C5C684
	0x02798694 MOV X8, X0
	0x02798698 LDR X8, [X8 + 0xC0]
	0x0279869C LDR X0, [X8 + 0x28]
	0x027986A0 BL 0x27A3D1C
	0x027986A4 CBZ X0, 0x279870C
	0x027986A8 LDR X8, [X0]
	0x027986AC LDR W1, [X20]
	0x027986B0 AND X2, X19, 0x0
	0x027986B4 LDP X9, X3, [X8 + 0x1B8]
	0x027986B8 BLR X9
	0x027986BC TBZ X0, 0x0, 0x27986FC
	0x027986C0 LDR X0, [X21 + 0x20]
	0x027986C4 LDRB W8, [X0 + 0x135]
	0x027986C8 TBNZ X8, 0x0, 0x27986D0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X21, 0x1C43000
	008 Move W8, [X21+2162]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x195C000
	016 Move X0, [X0+2104]
	017 Call 0x1C17CF4
	018 Move X0, 0x195D000
	019 Move X0, [X0+1544]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2162], W8
	023 Move X0, [X20+32]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move X8, [X0+192]
	031 Move X21, 0x195C000
	032 Move X0, [X8]
	033 Move W8, [X0+309]
	034 Move X21, [X21+2104]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move TEMP, 0
	041 Not TEMP
	042 Move X8, TEMP
	043 Move [X31], X0
	044 Move [X31+8], X8
	045 Move V0, [X19]
	046 Move X22, 0x195D000
	047 Move X22, [X22+1544]
	048 Add X0, X31, 0
	049 Move X1, X31
	050 Move [X31+1], V0
	051 Call ValueType.ToString, X0
	052 Move X8, [X20+32]
	053 Move X20, [X21]
	054 Move X21, X0
	055 Move W9, [X8+309]
	056 Move TEMP, X9
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {63}
	060 Move X0, X8
	061 Call 0x1C5D684
	062 Move X8, X0
	063 Move X8, [X8+192]
	064 Add X0, X19, 16
	065 Move X1, [X8+208]
	066 Call Int32.ToString, X0
	067 Move X3, [X22]
	068 Move X2, X0
	069 Move X0, X21
	070 Move X1, X20
	071 Move X4, X31
	072 Call String.Concat, X0, X1, X2, X3
	073 Move X20, [X31+64]
	074 Move X19, [X31+72]
	075 Move X22, [X31+48]
	076 Move X21, [X31+56]
	077 Move X30, [X31+32]
	078 Add X31, X31, 80
	079 Return X0

Method: System.Int32 System.Runtime.CompilerServices.ITuple.get_Length()

Disassembly:
	0x027986CC BL 0x1C5C684
	0x027986D0 LDR X8, [X0 + 0xC0]

ISIL:
	001 Move W0, 2
	002 Return X0

