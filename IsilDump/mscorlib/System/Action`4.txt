Type: System.Action`4

Method: System.Void .ctor(System.Object object, System.IntPtr method)

Disassembly:
	0x02A799A0 MOV X0, X2
	0x02A799A4 MOV X21, X1
	0x02A799A8 BL 0x1C16D84
	0x02A799AC TBZ X0, 0x0, 0x2A799C4
	0x02A799B0 CMP W22, 0x6
	0x02A799B4 B.NE 0x2A79A00
	0x02A799B8 ADRP X8, 0xFFFFFFFFFEF67000
	0x02A799BC ADD X8, X8, 0xCA4
	0x02A799C0 B 0x2A79A44
	0x02A799C4 CMP W22, 0x5
	0x02A799C8 B.NE 0x2A799FC
	0x02A799CC LDRB W8, [X19 + 0x70]
	0x02A799D0 CBZ W8, 0x2A79A14
	0x02A799D4 MOV X0, X20
	0x02A799D8 BL 0x1C16D7C
	0x02A799DC MOV W21, W0
	0x02A799E0 MOV X0, X20
	0x02A799E4 BL 0x1C17238
	0x02A799E8 TBZ X21, 0x0, 0x2A79A20
	0x02A799EC TBZ X0, 0x0, 0x2A79A30
	0x02A799F0 ADRP X8, 0xFFFFFFFFFEF67000
	0x02A799F4 ADD X8, X8, 0xE40
	0x02A799F8 B 0x2A79A44
	0x02A799FC CBZ X21, 0x2A79A64
	0x02A79A00 LDR X8, [X19 + 0x10]
	0x02A79A04 LDR X9, [X19 + 0x20]
	0x02A79A08 STR X8, [X19 + 0x18]
	0x02A79A0C STR X9, [X19 + 0x40]
	0x02A79A10 B 0x2A79A48
	0x02A79A14 ADRP X8, 0xFFFFFFFFFEF67000
	0x02A79A18 ADD X8, X8, 0xC70
	0x02A79A1C B 0x2A79A44
	0x02A79A20 TBZ X0, 0x0, 0x2A79A3C
	0x02A79A24 ADRP X8, 0xFFFFFFFFFEF67000
	0x02A79A28 ADD X8, X8, 0xD08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {23}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -17403904
	021 Add X8, X8, 1916
	022 Move [X19+24], X8
	023 Compare X20, 0
	024 JumpIfEqual {37}
	025 Move X8, [X19+16]
	026 Move X9, [X19+32]
	027 Move [X19+24], X8
	028 Move [X19+64], X9
	029 Move X8, -17403904
	030 Add X8, X8, 1804
	031 Move [X19+56], X8
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 
	037 Move X1, -32886784
	038 Add X1, X1, 3811
	039 Move X0, X31
	040 Call 0x1C17F3C
	041 Move X1, X31
	042 Call 0x1C17DEC

Method: System.Void Invoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4)

Disassembly:
	0x02A79A2C B 0x2A79A44
	0x02A79A30 ADRP X8, 0xFFFFFFFFFEF67000
	0x02A79A34 ADD X8, X8, 0xDC4
	0x02A79A38 B 0x2A79A44
	0x02A79A3C ADRP X8, 0xFFFFFFFFFEF67000
	0x02A79A40 ADD X8, X8, 0xCC8

ISIL:
	001 Move X8, [X0+64]
	002 Move X6, [X0+24]
	003 Move X5, [X0+40]
	004 And W4, W4, 1
	005 Move X0, X8
	006 CallNoReturn X6

Method: System.IAsyncResult BeginInvoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, System.AsyncCallback callback, System.Object object)

Disassembly:
	0x02A79A44 STR X8, [X19 + 0x18]
	0x02A79A48 ADRP X8, 0xFFFFFFFFFEF67000
	0x02A79A4C ADD X8, X8, 0xBE8
	0x02A79A50 STR X8, [X19 + 0x38]
	0x02A79A54 LDP X20, X19, [X31 + 0x20]
	0x02A79A58 LDP X22, X21, [X31 + 0x10]
	0x02A79A5C LDR X30, [X31], #0x30
	0x02A79A60 RET
	0x02A79A64 ADRP X1, 0xFFFFFFFFFE0A2000
	0x02A79A68 ADD X1, X1, 0xEE3
	0x02A79A6C MOV X0, X31
	0x02A79A70 BL 0x1C16F3C
	0x02A79A74 MOV X1, X31
	0x02A79A78 BL 0x1C16DEC
	0x02A79A7C LDR X8, [X0 + 0x40]
	0x02A79A80 LDR X9, [X0 + 0x18]
	0x02A79A84 LDR X7, [X0 + 0x28]
	0x02A79A88 MOV X0, X8
	0x02A79A8C BR X9
	0x02A79A90 STR X30, [X31 - 0x30]!
	0x02A79A94 STP X22, X21, [X31 + 0x10]
	0x02A79A98 STP X20, X19, [X31 + 0x20]
	0x02A79A9C LDR X8, [X2 + 0x8]
	0x02A79AA0 STP X1, X2, [X0 + 0x20]
	0x02A79AA4 MOV X19, X0
	0x02A79AA8 MOV X20, X2
	0x02A79AAC STR X8, [X0 + 0x10]
	0x02A79AB0 LDRB W22, [X2 + 0x52]
	0x02A79AB4 STR X0, [X0 + 0x40]
	0x02A79AB8 MOV X0, X2
	0x02A79ABC MOV X21, X1
	0x02A79AC0 BL 0x1C16D84
	0x02A79AC4 TBZ X0, 0x0, 0x2A79AE4
	0x02A79AC8 ADRP X8, 0xFFFFFFFFFEF67000
	0x02A79ACC ADRP X9, 0xFFFFFFFFFEF67000
	0x02A79AD0 ADD X8, X8, 0xFC8
	0x02A79AD4 ADD X9, X9, 0xF8C
	0x02A79AD8 CMP W22, 0x6
	0x02A79ADC CSEL X8, X9, X8, EQ
	0x02A79AE0 B 0x2A79B5C
	0x02A79AE4 CMP W22, 0x5
	0x02A79AE8 B.NE 0x2A79B1C
	0x02A79AEC LDRB W8, [X19 + 0x70]
	0x02A79AF0 CBZ W8, 0x2A79B2C
	0x02A79AF4 MOV X0, X20
	0x02A79AF8 BL 0x1C16D7C
	0x02A79AFC MOV W21, W0
	0x02A79B00 MOV X0, X20
	0x02A79B04 BL 0x1C17238
	0x02A79B08 TBZ X21, 0x0, 0x2A79B38
	0x02A79B0C TBZ X0, 0x0, 0x2A79B48
	0x02A79B10 ADRP X8, 0xFFFFFFFFFEF68000
	0x02A79B14 ADD X8, X8, 0x23C
	0x02A79B18 B 0x2A79B5C
	0x02A79B1C CBZ X21, 0x2A79B7C
	0x02A79B20 ADRP X8, 0xFFFFFFFFFEF68000
	0x02A79B24 ADD X8, X8, 0xC
	0x02A79B28 B 0x2A79B5C
	0x02A79B2C ADRP X8, 0xFFFFFFFFFEF68000
	0x02A79B30 ADD X8, X8, 0x50
	0x02A79B34 B 0x2A79B5C
	0x02A79B38 TBZ X0, 0x0, 0x2A79B54
	0x02A79B3C ADRP X8, 0xFFFFFFFFFEF68000
	0x02A79B40 ADD X8, X8, 0xE8
	0x02A79B44 B 0x2A79B5C

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 And W8, W4, 1
	011 Move [X31+48], X2
	012 Move [X31+56], X1
	013 Move [X31+44], W3
	014 Move X25, 0x1963000
	015 Move [X31+40], W8
	016 Move X24, 0x16A4000
	017 Move X23, 0x167B000
	018 Move X22, 0x167B000
	019 Move W9, [X25+638]
	020 Move X24, [X24+3872]
	021 Move X23, [X23+1880]
	022 Move X22, [X22+2904]
	023 Move X19, X6
	024 Move X20, X5
	025 Move X21, X0
	026 Move TEMP, X9
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {41}
	030 Move X0, 0x167B000
	031 Move X0, [X0+2904]
	032 Call 0x1C17CF4
	033 Move X0, 0x167B000
	034 Move X0, [X0+1880]
	035 Call 0x1C17CF4
	036 Move X0, 0x16A4000
	037 Move X0, [X0+3872]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X25+638], W8
	041 Move X0, [X24]
	042 NotImplemented "Instruction MOVI not yet implemented."
	043 Add X1, X31, 56
	044 Move [X31+32], X31
	045 Move [X31], V0
	046 Move [X31+8], V0
	047 Call 0x1C17E04
	048 Move X8, [X24]
	049 Move [X31], X0
	050 Add X1, X31, 48
	051 Move X0, X8
	052 Call 0x1C17E04
	053 Move X8, [X23]
	054 Move [X31+8], X0
	055 Add X1, X31, 44
	056 Move X0, X8
	057 Call 0x1C17E04
	058 Move X8, [X22]
	059 Move [X31+16], X0
	060 Add X1, X31, 40
	061 Move X0, X8
	062 Call 0x1C17E04
	063 Move [X31+24], X0
	064 Add X1, X31, 0
	065 Move X0, X21
	066 Move X2, X20
	067 Move X3, X19
	068 Call 0x1C17CB0
	069 Move X20, [X31+112]
	070 Move X19, [X31+120]
	071 Move X22, [X31+96]
	072 Move X21, [X31+104]
	073 Move X24, [X31+80]
	074 Move X23, [X31+88]
	075 Move X30, [X31+64]
	076 Move X25, [X31+72]
	077 Add X31, X31, 128
	078 Return X0

Method: System.Void EndInvoke(System.IAsyncResult result)

Disassembly:
	0x02A79B48 ADRP X8, 0xFFFFFFFFFEF68000
	0x02A79B4C ADD X8, X8, 0x1B4
	0x02A79B50 B 0x2A79B5C

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call 0x1C17CB4
	004 Return 

