Type: System.MulticastDelegate

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x033CBA38 B.NE 0x33CBA60

ISIL:
	001 Call DelegateSerializationHolder.GetDelegateData, X0, X1, X2
	002 Return 

Method: System.Object DynamicInvokeImpl(System.Object[] args)

Disassembly:
	0x033CBA3C LDR X9, [X8 + 0x338]
	0x033CBA40 LDR X1, [X8 + 0x340]
	0x033CBA44 BLR X9
	0x033CBA48 STR X0, [X19]
	0x033CBA4C CBZ X0, 0x33CBA9C
	0x033CBA50 LDP X20, X19, [X31 + 0x20]
	0x033CBA54 LDP X22, X21, [X31 + 0x10]
	0x033CBA58 LDR X30, [X31], #0x30
	0x033CBA5C RET
	0x033CBA60 BL 0x1C171E0
	0x033CBA64 ADRP X0, 0xD2D000
	0x033CBA68 LDR X0, [X0 + 0x528]
	0x033CBA6C BL 0x1C16D08
	0x033CBA70 BL 0x1C16F10
	0x033CBA74 MOV X19, X0
	0x033CBA78 ADRP X0, 0xD52000
	0x033CBA7C LDR X0, [X0 + 0x2D8]
	0x033CBA80 BL 0x1C16D08
	0x033CBA84 MOV X1, X0
	0x033CBA88 MOV X0, X19
	0x033CBA8C MOV X2, X31
	0x033CBA90 BL 0x330E100
	0x033CBA94 B 0x33CBACC
	0x033CBA98 BL 0x1C16F20
	0x033CBA9C ADRP X0, 0xD52000
	0x033CBAA0 LDR X0, [X0 + 0x2E0]
	0x033CBAA4 BL 0x1C16D08
	0x033CBAA8 BL 0x1C16F10
	0x033CBAAC MOV X19, X0
	0x033CBAB0 ADRP X0, 0xD61000
	0x033CBAB4 LDR X0, [X0 + 0xA18]
	0x033CBAB8 BL 0x1C16D08
	0x033CBABC MOV X1, X0
	0x033CBAC0 MOV X0, X19
	0x033CBAC4 MOV X2, X31
	0x033CBAC8 BL 0x329F100
	0x033CBACC ADRP X0, 0xD61000
	0x033CBAD0 LDR X0, [X0 + 0xA50]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0+120]
	007 Move X19, X0
	008 Move X20, X1
	009 Compare X8, 0
	010 JumpIfEqual {38}
	011 Move W9, [X8+24]
	012 Move X21, X31
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction CSINC not yet implemented."
	015 Move W9, [X8+24]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Add X8, X8, X21
	018 Move X0, [X8+32]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, [X0]
	022 Move X1, X20
	023 Move X9, [X8+408]
	024 Move X2, [X8+416]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Add X21, X21, 1
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X8, [X19+120]
	029 Compare X8, 0
	030 JumpIfNotEqual {15}
	031 Call 0x1C17F20
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Return X0
	038 Move X0, X19
	039 Move X1, X20
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Call Delegate.DynamicInvokeImpl, X0, X1
	046 Return X0
	047 Call 0x1C17F28

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x033CBAD4 BL 0x1C16D08
	0x033CBAD8 MOV X1, X0
	0x033CBADC MOV X0, X19
	0x033CBAE0 BL 0x1C16DEC
	0x033CBAE4 LDR X0, [X0]
	0x033CBAE8 RET
	0x033CBAEC STR X30, [X31 - 0x30]!
	0x033CBAF0 STP X22, X21, [X31 + 0x10]
	0x033CBAF4 STP X20, X19, [X31 + 0x20]
	0x033CBAF8 ADRP X21, 0x1012000
	0x033CBAFC LDRB W8, [X21 + 0x298]
	0x033CBB00 MOV X19, X1
	0x033CBB04 MOV X20, X0
	0x033CBB08 TBNZ X8, 0x0, 0x33CBB44
	0x033CBB0C ADRP X0, 0xD61000
	0x033CBB10 LDR X0, [X0 + 0xA40]
	0x033CBB14 BL 0x1C16CF4
	0x033CBB18 ADRP X0, 0xD59000
	0x033CBB1C LDR X0, [X0 + 0x9A0]
	0x033CBB20 BL 0x1C16CF4
	0x033CBB24 ADRP X0, 0xD28000
	0x033CBB28 LDR X0, [X0 + 0x6C0]
	0x033CBB2C BL 0x1C16CF4
	0x033CBB30 ADRP X0, 0xD61000
	0x033CBB34 LDR X0, [X0 + 0xA48]
	0x033CBB38 BL 0x1C16CF4
	0x033CBB3C MOVZ W8, 0x1
	0x033CBB40 STRB W8, [X21 + 0x298]
	0x033CBB44 CBZ X19, 0x33CBC00
	0x033CBB48 LDR X0, [X20]
	0x033CBB4C CBZ X0, 0x33CBC34
	0x033CBB50 ADRP X20, 0xD61000
	0x033CBB54 ADRP X21, 0xD28000
	0x033CBB58 ADRP X22, 0xD61000
	0x033CBB5C LDR X20, [X20 + 0xA40]
	0x033CBB60 LDR X21, [X21 + 0x6C0]
	0x033CBB64 LDR X22, [X22 + 0xA48]
	0x033CBB68 MOV X1, X31
	0x033CBB6C BL 0x32CE9D0
	0x033CBB70 LDR X8, [X21]
	0x033CBB74 LDR X21, [X20]
	0x033CBB78 MOV X20, X0
	0x033CBB7C LDR W9, [X8 + 0xE0]
	0x033CBB80 CBNZ W9, 0x33CBB8C
	0x033CBB84 MOV X0, X8
	0x033CBB88 BL 0x1C16DFC
	0x033CBB8C MOV X0, X21
	0x033CBB90 MOV X1, X31
	0x033CBB94 BL 0x338C698
	0x033CBB98 LDR X1, [X22]
	0x033CBB9C MOV X3, X0
	0x033CBBA0 CBZ X20, 0x33CBBD8
	0x033CBBA4 ADRP X8, 0xD59000
	0x033CBBA8 LDR X8, [X8 + 0x9A0]
	0x033CBBAC LDR X9, [X20]
	0x033CBBB0 LDR X8, [X8]
	0x033CBBB4 LDRB W11, [X9 + 0x130]
	0x033CBBB8 LDRB W10, [X8 + 0x130]
	0x033CBBBC CMP W11, W10
	0x033CBBC0 B.CC 0x33CBBF4
	0x033CBBC4 LDR X9, [X9 + 0xC8]
	0x033CBBC8 ADD X9, X9, X10, 0x3, LSL
	0x033CBBCC LDUR X9, [X9 - 0x8]
	0x033CBBD0 CMP X9, X8
	0x033CBBD4 B.NE 0x33CBBF4
	0x033CBBD8 MOV X0, X19
	0x033CBBDC MOV X2, X20
	0x033CBBE0 LDP X20, X19, [X31 + 0x20]
	0x033CBBE4 LDP X22, X21, [X31 + 0x10]
	0x033CBBE8 MOV X4, X31
	0x033CBBEC LDR X30, [X31], #0x30
	0x033CBBF0 B 0x32A89BC
	0x033CBBF4 MOV X0, X20
	0x033CBBF8 MOV X1, X8
	0x033CBBFC BL 0x1C171E0
	0x033CBC00 ADRP X0, 0xD2D000
	0x033CBC04 LDR X0, [X0 + 0x528]
	0x033CBC08 BL 0x1C16D08
	0x033CBC0C BL 0x1C16F10
	0x033CBC10 MOV X19, X0
	0x033CBC14 ADRP X0, 0xD52000
	0x033CBC18 LDR X0, [X0 + 0x2D8]
	0x033CBC1C BL 0x1C16D08
	0x033CBC20 MOV X1, X0
	0x033CBC24 MOV X0, X19
	0x033CBC28 MOV X2, X31
	0x033CBC2C BL 0x330E100

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1013000
	007 Move W8, [X21+654]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD62000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+654], W8
	019 Move X0, X20
	020 Move X1, X19
	021 Call Delegate.Equals, X0, X1
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {40}
	026 Compare X19, 0
	027 JumpIfEqual {40}
	028 Move X8, 0xD62000
	029 Move X8, [X8+2544]
	030 Move X9, [X19]
	031 Move X8, [X8]
	032 Move W11, [X9+304]
	033 Move W10, [X8+304]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X9, [X9+200]
	036 Add X9, X9, X10
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 Move W8, W31
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 And W0, W8, 1
	046 Move X30, [X31+48]
	047 Return X0
	048 Move X8, [X20+120]
	049 Compare X8, 0
	050 JumpIfEqual {92}
	051 Compare X9, 0
	052 JumpIfEqual {100}
	053 Move X10, [X19+120]
	054 Compare X10, 0
	055 JumpIfEqual {40}
	056 Move X9, [X8+24]
	057 Move W10, [X10+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CSET not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W10, W31
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X9, [X19+120]
	065 Compare X9, 0
	066 JumpIfEqual {100}
	067 Move W11, [X9+24]
	068 Move X22, W10
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Add X8, X8, X22
	071 Move X0, [X8+32]
	072 Compare X0, 0
	073 JumpIfEqual {100}
	074 Move X8, [X0]
	075 Add X9, X9, X22
	076 Move X1, [X9+32]
	077 Move X9, [X8+312]
	078 Move X2, [X8+320]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {91}
	084 Move X8, [X20+120]
	085 Compare X8, 0
	086 JumpIfEqual {100}
	087 Move W9, [X8+24]
	088 Add W10, W22, 1
	089 NotImplemented "Instruction CMP not yet implemented."
	090 NotImplemented "Instruction CSET not yet implemented."
	091 Xor W8, W21, 1
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X8, [X9+120]
	095 Compare X8, 0
	096 JumpIfEqual {101}
	097 Move X8, [X19+120]
	098 Compare X8, 0
	099 JumpIfNotEqual {40}
	100 Call 0x1C17F20
	101 Move W8, 1
	102 Call 0x1C17F28

Method: System.Int32 GetHashCode()

Disassembly:
	0x033CBC30 B 0x33CBC64

ISIL:
	001 Call Delegate.GetHashCode, X0
	002 Return X0

Method: System.Reflection.MethodInfo GetMethodImpl()

Disassembly:
	0x033CBC34 ADRP X0, 0xD52000
	0x033CBC38 LDR X0, [X0 + 0x2E0]
	0x033CBC3C BL 0x1C16D08
	0x033CBC40 BL 0x1C16F10
	0x033CBC44 MOV X19, X0
	0x033CBC48 ADRP X0, 0xD61000
	0x033CBC4C LDR X0, [X0 + 0xA28]
	0x033CBC50 BL 0x1C16D08
	0x033CBC54 MOV X1, X0
	0x033CBC58 MOV X0, X19
	0x033CBC5C MOV X2, X31
	0x033CBC60 BL 0x329F100
	0x033CBC64 ADRP X0, 0xD61000
	0x033CBC68 LDR X0, [X0 + 0xA58]
	0x033CBC6C BL 0x1C16D08
	0x033CBC70 MOV X1, X0
	0x033CBC74 MOV X0, X19
	0x033CBC78 BL 0x1C16DEC

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+120]
	003 Compare X8, 0
	004 JumpIfEqual {19}
	005 Move X9, [X8+24]
	006 Compare W9, 0
	007 JumpIfEqual {22}
	008 Move X10, INVALID
	009 Add X9, X10, X9
	010 Add X8, X8, X9
	011 Move X0, [X8+32]
	012 Compare X0, 0
	013 JumpIfEqual {23}
	014 Move X8, [X0]
	015 Move X2, [X8+440]
	016 Move X1, [X8+448]
	017 Move X30, [X31+16]
	018 CallNoReturn X2
	019 Move X30, [X31+16]
	020 Call Delegate.GetMethodImpl, X0
	021 Return X0
	022 Call 0x1C17F28
	023 Call 0x1C17F20

Method: System.Delegate[] GetInvocationList()

Disassembly:
	0x033CBC7C SUB X31, X31, 0x40
	0x033CBC80 STP X30, X23, [X31 + 0x10]
	0x033CBC84 STP X22, X21, [X31 + 0x20]
	0x033CBC88 STP X20, X19, [X31 + 0x30]
	0x033CBC8C ADRP X21, 0x1012000
	0x033CBC90 LDRB W8, [X21 + 0x299]
	0x033CBC94 MOV X19, X1
	0x033CBC98 MOV X20, X0
	0x033CBC9C TBNZ X8, 0x0, 0x33CBCC0
	0x033CBCA0 ADRP X0, 0xD61000
	0x033CBCA4 LDR X0, [X0 + 0xA60]
	0x033CBCA8 BL 0x1C16CF4
	0x033CBCAC ADRP X0, 0xD28000
	0x033CBCB0 LDR X0, [X0 + 0x6C0]
	0x033CBCB4 BL 0x1C16CF4
	0x033CBCB8 MOVZ W8, 0x1
	0x033CBCBC STRB W8, [X21 + 0x299]
	0x033CBCC0 CBZ X19, 0x33CBD24
	0x033CBCC4 ADRP X23, 0xD61000
	0x033CBCC8 LDR X23, [X23 + 0xA60]
	0x033CBCCC LDR X8, [X20]
	0x033CBCD0 ADRP X22, 0xD28000
	0x033CBCD4 ADD X1, X31, 0x8
	0x033CBCD8 LDR X0, [X23]
	0x033CBCDC LDR X22, [X22 + 0x6C0]
	0x033CBCE0 STR X8, [X31 + 0x8]
	0x033CBCE4 BL 0x1C16E04
	0x033CBCE8 BL 0x1C25764
	0x033CBCEC MOV X21, X0
	0x033CBCF0 MOV X0, X19
	0x033CBCF4 BL 0x1C25764
	0x033CBCF8 LDR X8, [X22]
	0x033CBCFC MOV X22, X0
	0x033CBD00 LDR W9, [X8 + 0xE0]
	0x033CBD04 CBNZ W9, 0x33CBD10
	0x033CBD08 MOV X0, X8
	0x033CBD0C BL 0x1C16DFC
	0x033CBD10 MOV X0, X21
	0x033CBD14 MOV X1, X22
	0x033CBD18 MOV X2, X31
	0x033CBD1C BL 0x3395F0C
	0x033CBD20 TBZ X0, 0x0, 0x33CBD2C
	0x033CBD24 MOV W0, W31
	0x033CBD28 B 0x33CBD5C
	0x033CBD2C LDR X8, [X19]
	0x033CBD30 LDR X1, [X23]
	0x033CBD34 LDR X8, [X8 + 0x40]
	0x033CBD38 LDR X9, [X1 + 0x40]
	0x033CBD3C CMP X8, X9
	0x033CBD40 B.NE 0x33CBD70
	0x033CBD44 LDR X20, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1013000
	006 Move W8, [X20+655]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD62000
	013 Move X0, [X0+2136]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+655], W8
	017 Move X20, 0xD62000
	018 Move X0, [X19+120]
	019 Move X20, [X20+2136]
	020 Compare X0, 0
	021 JumpIfEqual {36}
	022 Move X1, X31
	023 Call Array.Clone, X0
	024 Compare X0, 0
	025 JumpIfEqual {52}
	026 Move X21, [X20]
	027 Move X19, X0
	028 Move X1, X21
	029 Call 0x1C17E00
	030 Move X20, X0
	031 Compare X0, 0
	032 JumpIfNotEqual {53}
	033 Move X0, X19
	034 Move X1, X21
	035 Call 0x1C181E0
	036 Move X0, [X20]
	037 Move W1, 1
	038 Call 0x1C17D6C
	039 Compare X0, 0
	040 JumpIfEqual {59}
	041 Move X8, [X0]
	042 Move X20, X0
	043 Move X0, X19
	044 Move X1, [X8+64]
	045 Call 0x1C17E00
	046 Compare X0, 0
	047 JumpIfEqual {60}
	048 Move W8, [X20+24]
	049 Compare W8, 0
	050 JumpIfEqual {63}
	051 Move [X20+32], X19
	052 Move X20, X31
	053 Move X0, X20
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Return X0
	059 Call 0x1C17F20
	060 Call 0x1C17F44
	061 Move X1, X31
	062 Call 0x1C17DEC
	063 Call 0x1C17F28

Method: System.Delegate CombineImpl(System.Delegate follow)

Disassembly:
	0x033CBD48 MOV X0, X19
	0x033CBD4C BL 0x1C16E08
	0x033CBD50 LDR X8, [X0]
	0x033CBD54 CMP X20, X8
	0x033CBD58 CSET W0, EQ
	0x033CBD5C LDP X20, X19, [X31 + 0x30]
	0x033CBD60 LDP X22, X21, [X31 + 0x20]
	0x033CBD64 LDP X30, X23, [X31 + 0x10]
	0x033CBD68 ADD X31, X31, 0x40
	0x033CBD6C RET
	0x033CBD70 MOV X0, X19
	0x033CBD74 BL 0x1C171E0
	0x033CBD78 LDR W0, [X0]
	0x033CBD7C RET
	0x033CBD80 STR X30, [X31 - 0x30]!
	0x033CBD84 STP X22, X21, [X31 + 0x10]
	0x033CBD88 STP X20, X19, [X31 + 0x20]
	0x033CBD8C ADRP X19, 0x1012000
	0x033CBD90 ADRP X21, 0xD28000
	0x033CBD94 LDRB W8, [X19 + 0x29A]
	0x033CBD98 LDR X21, [X21 + 0x8F0]
	0x033CBD9C MOV X20, X0
	0x033CBDA0 TBNZ X8, 0x0, 0x33CBDDC
	0x033CBDA4 ADRP X0, 0xD28000
	0x033CBDA8 LDR X0, [X0 + 0x8F0]
	0x033CBDAC BL 0x1C16CF4
	0x033CBDB0 ADRP X0, 0xD2A000
	0x033CBDB4 LDR X0, [X0 + 0x3A0]
	0x033CBDB8 BL 0x1C16CF4
	0x033CBDBC ADRP X0, 0xD28000
	0x033CBDC0 LDR X0, [X0 + 0xEC8]
	0x033CBDC4 BL 0x1C16CF4
	0x033CBDC8 ADRP X0, 0xD28000
	0x033CBDCC LDR X0, [X0 + 0x848]
	0x033CBDD0 BL 0x1C16CF4
	0x033CBDD4 MOVZ W8, 0x1
	0x033CBDD8 STRB W8, [X19 + 0x29A]
	0x033CBDDC LDR X0, [X21]
	0x033CBDE0 BL 0x1C16F10
	0x033CBDE4 MOV X1, X31
	0x033CBDE8 MOV X19, X0
	0x033CBDEC BL 0x3231AC4
	0x033CBDF0 CBZ X20, 0x33CBED0
	0x033CBDF4 LDR X8, [X20]
	0x033CBDF8 MOV X0, X20
	0x033CBDFC LDR X9, [X8 + 0x2F8]
	0x033CBE00 LDR X1, [X8 + 0x300]
	0x033CBE04 BLR X9
	0x033CBE08 CBZ X19, 0x33CBED0
	0x033CBE0C ADRP X8, 0xD28000
	0x033CBE10 LDR X8, [X8 + 0xEC8]
	0x033CBE14 MOV X20, X0
	0x033CBE18 MOV X0, X19
	0x033CBE1C MOV X2, X31
	0x033CBE20 LDR X1, [X8]
	0x033CBE24 BL 0x32333E0
	0x033CBE28 CBZ X20, 0x33CBED0
	0x033CBE2C LDR W8, [X20 + 0x18]
	0x033CBE30 CMP W8, 0x1
	0x033CBE34 B.LT 0x33CBE9C
	0x033CBE38 ADRP X22, 0xD2A000
	0x033CBE3C LDR X22, [X22 + 0x3A0]
	0x033CBE40 MOV W21, W31
	0x033CBE44 CBZ W21, 0x33CBE5C
	0x033CBE48 LDR X1, [X22]
	0x033CBE4C MOV X0, X19
	0x033CBE50 MOV X2, X31
	0x033CBE54 BL 0x32333E0
	0x033CBE58 LDR W8, [X20 + 0x18]
	0x033CBE5C CMP W21, W8
	0x033CBE60 B.CS 0x33CBED4
	0x033CBE64 ADD X8, X20, W21, 0x3, SXTW
	0x033CBE68 LDR X0, [X8 + 0x20]
	0x033CBE6C CBZ X0, 0x33CBED0
	0x033CBE70 LDR X8, [X0]
	0x033CBE74 LDP X9, X1, [X8 + 0x1A8]
	0x033CBE78 BLR X9
	0x033CBE7C MOV X1, X0
	0x033CBE80 MOV X0, X19
	0x033CBE84 MOV X2, X31
	0x033CBE88 BL 0x32333E0
	0x033CBE8C LDR W8, [X20 + 0x18]
	0x033CBE90 ADD W21, W21, 0x1
	0x033CBE94 CMP W21, W8
	0x033CBE98 B.LT 0x33CBE44
	0x033CBE9C ADRP X8, 0xD28000
	0x033CBEA0 LDR X8, [X8 + 0x848]
	0x033CBEA4 MOV X0, X19
	0x033CBEA8 MOV X2, X31
	0x033CBEAC LDR X1, [X8]
	0x033CBEB0 BL 0x32333E0
	0x033CBEB4 LDR X8, [X19]
	0x033CBEB8 MOV X0, X19
	0x033CBEBC LDP X20, X19, [X31 + 0x20]
	0x033CBEC0 LDP X22, X21, [X31 + 0x10]
	0x033CBEC4 LDP X2, X1, [X8 + 0x168]
	0x033CBEC8 LDR X30, [X31], #0x30
	0x033CBECC BR X2
	0x033CBED0 BL 0x1C16F20
	0x033CBED4 BL 0x1C16F28
	0x033CBED8 LDR X8, [X0]
	0x033CBEDC CMP X8, 0x0
	0x033CBEE0 CSET W0, EQ
	0x033CBEE4 RET
	0x033CBEE8 STR X1, [X0]
	0x033CBEEC RET
	0x033CBEF0 STR X30, [X31 - 0x10]!
	0x033CBEF4 CBZ X1, 0x33CBF08
	0x033CBEF8 LDR X8, [X1 + 0x10]
	0x033CBEFC STR X8, [X0]
	0x033CBF00 LDR X30, [X31], #0x10
	0x033CBF04 RET
	0x033CBF08 BL 0x1C16F20
	0x033CBF0C STR X30, [X31 - 0x30]!
	0x033CBF10 STP X22, X21, [X31 + 0x10]
	0x033CBF14 STP X20, X19, [X31 + 0x20]
	0x033CBF18 ADRP X21, 0x1012000
	0x033CBF1C LDRB W8, [X21 + 0x29B]
	0x033CBF20 MOV X20, X1
	0x033CBF24 MOV X19, X0
	0x033CBF28 TBNZ X8, 0x0, 0x33CBF64
	0x033CBF2C ADRP X0, 0xD59000
	0x033CBF30 LDR X0, [X0 + 0xE98]
	0x033CBF34 BL 0x1C16CF4
	0x033CBF38 ADRP X0, 0xD51000
	0x033CBF3C LDR X0, [X0 + 0x4E8]
	0x033CBF40 BL 0x1C16CF4
	0x033CBF44 ADRP X0, 0xD28000
	0x033CBF48 LDR X0, [X0 + 0x6C0]
	0x033CBF4C BL 0x1C16CF4
	0x033CBF50 ADRP X0, 0xD61000
	0x033CBF54 LDR X0, [X0 + 0xA68]
	0x033CBF58 BL 0x1C16CF4
	0x033CBF5C MOVZ W8, 0x1
	0x033CBF60 STRB W8, [X21 + 0x29B]
	0x033CBF64 CBZ X20, 0x33CC014
	0x033CBF68 ADRP X8, 0xD28000
	0x033CBF6C LDR X8, [X8 + 0x6C0]
	0x033CBF70 ADRP X22, 0xD61000
	0x033CBF74 LDR X0, [X8]
	0x033CBF78 ADRP X8, 0xD59000
	0x033CBF7C LDR X8, [X8 + 0xE98]
	0x033CBF80 LDR W9, [X0 + 0xE0]
	0x033CBF84 LDR X21, [X8]
	0x033CBF88 LDR X22, [X22 + 0xA68]
	0x033CBF8C CBNZ W9, 0x33CBF94
	0x033CBF90 BL 0x1C16DFC
	0x033CBF94 MOV X0, X21
	0x033CBF98 MOV X1, X31
	0x033CBF9C BL 0x338C698
	0x033CBFA0 LDR X1, [X22]
	0x033CBFA4 MOV X2, X0
	0x033CBFA8 MOV X0, X20
	0x033CBFAC MOV X3, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x1013000
	007 Move W8, [X19+656]
	008 Move X20, X1
	009 Move X21, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xD62000
	015 Move X0, [X0+2136]
	016 Call 0x1C17CF4
	017 Move X0, 0xD62000
	018 Move X0, [X0+2544]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+656], W8
	022 Compare X20, 0
	023 JumpIfEqual {73}
	024 Move X9, 0xD62000
	025 Move X9, [X9+2544]
	026 Move X8, [X20]
	027 Move X1, [X9]
	028 Move W10, [X8+304]
	029 Move W9, [X1+304]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, [X8+200]
	032 Add X8, X8, X9
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X19, 0xD62000
	036 Move X19, [X19+2136]
	037 Move X0, X21
	038 Call 0x1C887F8
	039 Move X10, [X21+120]
	040 Move X9, [X20+120]
	041 Move X8, [X19]
	042 Move X19, X0
	043 Compare X10, 0
	044 JumpIfEqual {74}
	045 Move W10, [X10+24]
	046 Compare X9, 0
	047 JumpIfEqual {105}
	048 Move W9, [X9+24]
	049 Move X0, X8
	050 Add W1, W9, W10
	051 Call 0x1C17D6C
	052 Compare X19, 0
	053 JumpIfEqual {171}
	054 Move [X19+120], X0
	055 Move X2, X0
	056 Move X0, [X21+120]
	057 Compare X0, 0
	058 JumpIfEqual {171}
	059 Move W4, [X0+24]
	060 Move W1, W31
	061 Move W3, W31
	062 Move X5, X31
	063 Call Array.Copy, X0, X1, X2, X3, X4
	064 Move X8, [X21+120]
	065 Compare X8, 0
	066 JumpIfEqual {171}
	067 Move X0, [X20+120]
	068 Compare X0, 0
	069 JumpIfEqual {171}
	070 Move X2, [X19+120]
	071 Move W3, [X8+24]
	072 Move W4, [X0+24]
	073 Move X19, X21
	074 Compare X9, 0
	075 JumpIfEqual {136}
	076 Move W9, [X9+24]
	077 Move X0, X8
	078 Add W1, W9, 1
	079 Call 0x1C17D6C
	080 Compare X19, 0
	081 JumpIfEqual {171}
	082 Move X22, X0
	083 Move [X19+120], X0
	084 Compare X0, 0
	085 JumpIfEqual {171}
	086 Move X8, [X22]
	087 Move X0, X21
	088 Move X1, [X8+64]
	089 Call 0x1C17E00
	090 Compare X0, 0
	091 JumpIfEqual {174}
	092 Move W8, [X22+24]
	093 Compare W8, 0
	094 JumpIfEqual {177}
	095 Move [X22+32], X21
	096 Move X0, [X20+120]
	097 Compare X0, 0
	098 JumpIfEqual {171}
	099 Move X2, [X19+120]
	100 Move W4, [X0+24]
	101 Move W3, 1
	102 Move W1, W31
	103 Move X5, X31
	104 Call Array.Copy, X0, X1, X2, X3, X4
	105 Add W1, W10, 1
	106 Move X0, X8
	107 Call 0x1C17D6C
	108 Compare X19, 0
	109 JumpIfEqual {171}
	110 Move [X19+120], X0
	111 Move X2, X0
	112 Move X0, [X21+120]
	113 Compare X0, 0
	114 JumpIfEqual {171}
	115 Move W4, [X0+24]
	116 Move W1, W31
	117 Move W3, W31
	118 Move X5, X31
	119 Call Array.Copy, X0, X1, X2, X3, X4
	120 Move X21, [X19+120]
	121 Compare X21, 0
	122 JumpIfEqual {171}
	123 Move X8, [X21]
	124 Move X0, X20
	125 Move X1, [X8+64]
	126 Call 0x1C17E00
	127 Compare X0, 0
	128 JumpIfEqual {174}
	129 Move X8, [X21+24]
	130 Compare W8, 0
	131 JumpIfEqual {177}
	132 Move X9, INVALID
	133 Add X8, X9, X8
	134 Add X8, X21, X8
	135 Move [X8+32], X20
	136 Move W1, 2
	137 Move X0, X8
	138 Call 0x1C17D6C
	139 Compare X0, 0
	140 JumpIfEqual {171}
	141 Move X8, [X0]
	142 Move X22, X0
	143 Move X0, X21
	144 Move X1, [X8+64]
	145 Call 0x1C17E00
	146 Compare X0, 0
	147 JumpIfEqual {174}
	148 Move W8, [X22+24]
	149 Compare W8, 0
	150 JumpIfEqual {177}
	151 Move X8, [X22]
	152 Move [X22+32], X21
	153 Move X0, X20
	154 Move X1, [X8+64]
	155 Call 0x1C17E00
	156 Compare X0, 0
	157 JumpIfEqual {174}
	158 Move W8, [X22+24]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move [X22+40], X20
	161 Compare X19, 0
	162 JumpIfEqual {171}
	163 Move [X19+120], X22
	164 Move X0, X19
	165 Move X20, [X31+32]
	166 Move X19, [X31+40]
	167 Move X22, [X31+16]
	168 Move X21, [X31+24]
	169 Move X30, [X31+48]
	170 Return X0
	171 Call 0x1C17F20
	172 Move X0, X20
	173 Call 0x1C181E0
	174 Call 0x1C17F44
	175 Move X1, X31
	176 Call 0x1C17DEC
	177 Call 0x1C17F28

Method: System.Int32 LastIndexOf(System.Delegate[] haystack, System.Delegate[] needle)

Disassembly:
	0x033CBFB0 BL 0x32A9678
	0x033CBFB4 CBZ X0, 0x33CC048
	0x033CBFB8 ADRP X9, 0xD51000
	0x033CBFBC LDR X9, [X9 + 0x4E8]
	0x033CBFC0 LDR X8, [X0]
	0x033CBFC4 LDR X1, [X9]
	0x033CBFC8 LDRB W10, [X8 + 0x130]
	0x033CBFCC LDRB W9, [X1 + 0x130]
	0x033CBFD0 CMP W10, W9
	0x033CBFD4 B.CC 0x33CC010
	0x033CBFD8 LDR X10, [X8 + 0xC8]
	0x033CBFDC ADD X9, X10, X9, 0x3, LSL
	0x033CBFE0 LDUR X9, [X9 - 0x8]
	0x033CBFE4 CMP X9, X1
	0x033CBFE8 B.NE 0x33CC010
	0x033CBFEC LDR X9, [X8 + 0x7F8]
	0x033CBFF0 LDR X1, [X8 + 0x800]
	0x033CBFF4 BLR X9
	0x033CBFF8 STR X0, [X19]
	0x033CBFFC CBZ X0, 0x33CC04C
	0x033CC000 LDP X20, X19, [X31 + 0x20]
	0x033CC004 LDP X22, X21, [X31 + 0x10]
	0x033CC008 LDR X30, [X31], #0x30
	0x033CC00C RET
	0x033CC010 BL 0x1C171E0
	0x033CC014 ADRP X0, 0xD2C000
	0x033CC018 LDR X0, [X0 + 0x528]
	0x033CC01C BL 0x1C16D08
	0x033CC020 BL 0x1C16F10
	0x033CC024 MOV X19, X0
	0x033CC028 ADRP X0, 0xD51000
	0x033CC02C LDR X0, [X0 + 0x2D8]
	0x033CC030 BL 0x1C16D08
	0x033CC034 MOV X1, X0
	0x033CC038 MOV X0, X19
	0x033CC03C MOV X2, X31
	0x033CC040 BL 0x330E100
	0x033CC044 B 0x33CC07C
	0x033CC048 BL 0x1C16F20
	0x033CC04C ADRP X0, 0xD51000
	0x033CC050 LDR X0, [X0 + 0x2E0]
	0x033CC054 BL 0x1C16D08
	0x033CC058 BL 0x1C16F10
	0x033CC05C MOV X19, X0
	0x033CC060 ADRP X0, 0xD60000
	0x033CC064 LDR X0, [X0 + 0xA18]
	0x033CC068 BL 0x1C16D08
	0x033CC06C MOV X1, X0
	0x033CC070 MOV X0, X19
	0x033CC074 MOV X2, X31
	0x033CC078 BL 0x329F100
	0x033CC07C ADRP X0, 0xD60000
	0x033CC080 LDR X0, [X0 + 0xA70]
	0x033CC084 BL 0x1C16D08
	0x033CC088 MOV X1, X0
	0x033CC08C MOV X0, X19
	0x033CC090 BL 0x1C16DEC
	0x033CC094 LDR X0, [X0]
	0x033CC098 RET
	0x033CC09C SUB X31, X31, 0x40
	0x033CC0A0 STP X30, X23, [X31 + 0x10]
	0x033CC0A4 STP X22, X21, [X31 + 0x20]
	0x033CC0A8 STP X20, X19, [X31 + 0x30]
	0x033CC0AC ADRP X21, 0x1011000
	0x033CC0B0 LDRB W8, [X21 + 0x29C]
	0x033CC0B4 MOV X19, X1
	0x033CC0B8 MOV X20, X0
	0x033CC0BC TBNZ X8, 0x0, 0x33CC0F8
	0x033CC0C0 ADRP X0, 0xD60000
	0x033CC0C4 LDR X0, [X0 + 0xA78]
	0x033CC0C8 BL 0x1C16CF4
	0x033CC0CC ADRP X0, 0xD58000
	0x033CC0D0 LDR X0, [X0 + 0xE98]
	0x033CC0D4 BL 0x1C16CF4
	0x033CC0D8 ADRP X0, 0xD27000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X1, 0
	008 JumpIfEqual {83}
	009 Move X19, X2
	010 Compare X2, 0
	011 JumpIfEqual {83}
	012 Move W8, [X1+24]
	013 Move X9, [X19+24]
	014 Move X20, X1
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move TEMP, 0
	017 Not TEMP
	018 Move W0, TEMP
	019 Move X20, [X31+32]
	020 Move X19, [X31+40]
	021 Move X22, [X31+16]
	022 Move X21, [X31+24]
	023 Move X30, [X31+48]
	024 Move X23, [X31+56]
	025 Return X0
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X21, X31
	028 Add X22, X19, 32
	029 Add X23, X20, 32
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W8, [X19+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, [X23]
	034 Compare X0, 0
	035 JumpIfEqual {83}
	036 Move X8, [X0]
	037 Move X1, [X22]
	038 Move X9, [X8+312]
	039 Move X2, [X8+320]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {16}
	045 Move W8, [X20+24]
	046 Add X21, X21, 1
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W0, W31
	049 Subtract W21, W8, W9
	050 Compare W9, 0
	051 JumpIfEqual {81}
	052 Move W22, W31
	053 Move W8, [X20+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Add X8, X19, W22
	056 Move X0, [X8+32]
	057 Compare X0, 0
	058 JumpIfEqual {83}
	059 Move X8, [X0]
	060 Add X9, X20, W21
	061 Move X1, [X9+32]
	062 Move X9, [X8+312]
	063 Move X2, [X8+320]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {75}
	069 Move W8, [X19+24]
	070 Subtract W9, W8, 1
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Add W22, W22, 1
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Add W21, W21, 1
	075 NotImplemented "Instruction ORN not yet implemented."
	076 Add W21, W21, W8
	077 Move W8, [X19+24]
	078 Move W22, W31
	079 Compare W8, 0
	080 JumpIfNotEqual {53}
	081 Call 0x1C17F28
	082 Subtract W0, W21, W22
	083 Call 0x1C17F20

Method: System.Delegate RemoveImpl(System.Delegate value)

Disassembly:
	0x033CC0DC LDR X0, [X0 + 0x6C0]
	0x033CC0E0 BL 0x1C16CF4
	0x033CC0E4 ADRP X0, 0xD60000
	0x033CC0E8 LDR X0, [X0 + 0xA68]
	0x033CC0EC BL 0x1C16CF4
	0x033CC0F0 MOVZ W8, 0x1
	0x033CC0F4 STRB W8, [X21 + 0x29C]
	0x033CC0F8 CBZ X19, 0x33CC1AC
	0x033CC0FC LDR X8, [X20]
	0x033CC100 CBZ X8, 0x33CC1E0
	0x033CC104 ADRP X23, 0xD60000
	0x033CC108 LDR X23, [X23 + 0xA78]
	0x033CC10C ADRP X20, 0xD27000
	0x033CC110 LDR X20, [X20 + 0x6C0]
	0x033CC114 ADRP X22, 0xD58000
	0x033CC118 LDR X0, [X23]
	0x033CC11C ADRP X21, 0xD60000
	0x033CC120 LDR X22, [X22 + 0xE98]
	0x033CC124 LDR X21, [X21 + 0xA68]
	0x033CC128 ADD X1, X31, 0x8
	0x033CC12C STR X8, [X31 + 0x8]
	0x033CC130 BL 0x1C16E04
	0x033CC134 LDR X8, [X20]
	0x033CC138 MOV X20, X0
	0x033CC13C LDR W9, [X8 + 0xE0]
	0x033CC140 CBNZ W9, 0x33CC14C
	0x033CC144 MOV X0, X8
	0x033CC148 BL 0x1C16DFC
	0x033CC14C MOV X0, X20
	0x033CC150 MOV X1, X31
	0x033CC154 BL 0x3397A84
	0x033CC158 LDR X8, [X23]
	0x033CC15C STR X0, [X31]
	0x033CC160 ADD X1, X31, 0x0
	0x033CC164 MOV X0, X8
	0x033CC168 BL 0x1C16E04
	0x033CC16C LDR X8, [X22]
	0x033CC170 MOV X20, X0
	0x033CC174 MOV X1, X31
	0x033CC178 MOV X0, X8
	0x033CC17C BL 0x338C698
	0x033CC180 LDR X1, [X21]
	0x033CC184 MOV X3, X0
	0x033CC188 MOV X0, X19
	0x033CC18C MOV X2, X20
	0x033CC190 MOV X4, X31
	0x033CC194 BL 0x32A89BC
	0x033CC198 LDP X20, X19, [X31 + 0x30]
	0x033CC19C LDP X22, X21, [X31 + 0x20]
	0x033CC1A0 LDP X30, X23, [X31 + 0x10]
	0x033CC1A4 ADD X31, X31, 0x40
	0x033CC1A8 RET
	0x033CC1AC ADRP X0, 0xD2C000
	0x033CC1B0 LDR X0, [X0 + 0x528]
	0x033CC1B4 BL 0x1C16D08
	0x033CC1B8 BL 0x1C16F10
	0x033CC1BC MOV X19, X0
	0x033CC1C0 ADRP X0, 0xD51000
	0x033CC1C4 LDR X0, [X0 + 0x2D8]
	0x033CC1C8 BL 0x1C16D08
	0x033CC1CC MOV X1, X0
	0x033CC1D0 MOV X0, X19
	0x033CC1D4 MOV X2, X31
	0x033CC1D8 BL 0x330E100
	0x033CC1DC B 0x33CC210
	0x033CC1E0 ADRP X0, 0xD51000
	0x033CC1E4 LDR X0, [X0 + 0x2E0]
	0x033CC1E8 BL 0x1C16D08
	0x033CC1EC BL 0x1C16F10
	0x033CC1F0 MOV X19, X0
	0x033CC1F4 ADRP X0, 0xD60000
	0x033CC1F8 LDR X0, [X0 + 0xA28]
	0x033CC1FC BL 0x1C16D08
	0x033CC200 MOV X1, X0
	0x033CC204 MOV X0, X19
	0x033CC208 MOV X2, X31
	0x033CC20C BL 0x329F100
	0x033CC210 ADRP X0, 0xD60000
	0x033CC214 LDR X0, [X0 + 0xA80]
	0x033CC218 BL 0x1C16D08
	0x033CC21C MOV X1, X0
	0x033CC220 MOV X0, X19
	0x033CC224 BL 0x1C16DEC
	0x033CC228 SUB X31, X31, 0x40
	0x033CC22C STP X30, X23, [X31 + 0x10]
	0x033CC230 STP X22, X21, [X31 + 0x20]
	0x033CC234 STP X20, X19, [X31 + 0x30]
	0x033CC238 ADRP X21, 0x1011000
	0x033CC23C LDRB W8, [X21 + 0x29D]
	0x033CC240 MOV X19, X1
	0x033CC244 MOV X20, X0
	0x033CC248 TBNZ X8, 0x0, 0x33CC26C
	0x033CC24C ADRP X0, 0xD60000
	0x033CC250 LDR X0, [X0 + 0xA78]
	0x033CC254 BL 0x1C16CF4
	0x033CC258 ADRP X0, 0xD27000
	0x033CC25C LDR X0, [X0 + 0x6C0]
	0x033CC260 BL 0x1C16CF4
	0x033CC264 MOVZ W8, 0x1
	0x033CC268 STRB W8, [X21 + 0x29D]
	0x033CC26C CBZ X19, 0x33CC2D0
	0x033CC270 ADRP X23, 0xD60000
	0x033CC274 LDR X23, [X23 + 0xA78]
	0x033CC278 LDR X8, [X20]
	0x033CC27C ADRP X22, 0xD27000
	0x033CC280 ADD X1, X31, 0x8
	0x033CC284 LDR X0, [X23]
	0x033CC288 LDR X22, [X22 + 0x6C0]
	0x033CC28C STR X8, [X31 + 0x8]
	0x033CC290 BL 0x1C16E04
	0x033CC294 BL 0x1C25764
	0x033CC298 MOV X21, X0
	0x033CC29C MOV X0, X19
	0x033CC2A0 BL 0x1C25764
	0x033CC2A4 LDR X8, [X22]
	0x033CC2A8 MOV X22, X0
	0x033CC2AC LDR W9, [X8 + 0xE0]
	0x033CC2B0 CBNZ W9, 0x33CC2BC
	0x033CC2B4 MOV X0, X8
	0x033CC2B8 BL 0x1C16DFC
	0x033CC2BC MOV X0, X21
	0x033CC2C0 MOV X1, X22
	0x033CC2C4 MOV X2, X31
	0x033CC2C8 BL 0x3395F0C
	0x033CC2CC TBZ X0, 0x0, 0x33CC2D8
	0x033CC2D0 MOV W0, W31
	0x033CC2D4 B 0x33CC308
	0x033CC2D8 LDR X8, [X19]
	0x033CC2DC LDR X1, [X23]
	0x033CC2E0 LDR X8, [X8 + 0x40]
	0x033CC2E4 LDR X9, [X1 + 0x40]
	0x033CC2E8 CMP X8, X9
	0x033CC2EC B.NE 0x33CC31C
	0x033CC2F0 LDR X20, [X20]
	0x033CC2F4 MOV X0, X19
	0x033CC2F8 BL 0x1C16E08
	0x033CC2FC LDR X8, [X0]
	0x033CC300 CMP X20, X8
	0x033CC304 CSET W0, EQ
	0x033CC308 LDP X20, X19, [X31 + 0x30]
	0x033CC30C LDP X22, X21, [X31 + 0x20]
	0x033CC310 LDP X30, X23, [X31 + 0x10]
	0x033CC314 ADD X31, X31, 0x40
	0x033CC318 RET
	0x033CC31C MOV X0, X19
	0x033CC320 BL 0x1C171E0
	0x033CC324 LDR W0, [X0]
	0x033CC328 RET
	0x033CC32C B 0x1C3D7C8
	0x033CC330 B 0x1C3D728
	0x033CC334 B 0x1C3D728
	0x033CC338 B 0x1C3D99C
	0x033CC33C B 0x1C3D99C
	0x033CC340 STR X30, [X31 - 0x10]!
	0x033CC344 BL 0x1C3D770
	0x033CC348 SUB W8, W0, 0x2
	0x033CC34C AND W8, W8, 0xFF
	0x033CC350 CMP W8, 0xC
	0x033CC354 B.CC 0x33CC36C
	0x033CC358 AND W8, W0, 0xFE
	0x033CC35C CMP W8, 0x18
	0x033CC360 CSET W0, EQ
	0x033CC364 LDR X30, [X31], #0x10
	0x033CC368 RET
	0x033CC36C MOVZ W0, 0x1
	0x033CC370 LDR X30, [X31], #0x10
	0x033CC374 RET
	0x033CC378 B 0x1C3D770
	0x033CC37C STR X30, [X31 - 0x10]!
	0x033CC380 BL 0x1C3D770
	0x033CC384 AND W8, W0, 0xFF
	0x033CC388 CMP W8, 0x10
	0x033CC38C CSET W0, EQ
	0x033CC390 LDR X30, [X31], #0x10
	0x033CC394 RET
	0x033CC398 STR X30, [X31 - 0x10]!
	0x033CC39C BL 0x1C3D770
	0x033CC3A0 AND W8, W0, 0xFF
	0x033CC3A4 CMP W8, 0xF
	0x033CC3A8 CSET W0, EQ
	0x033CC3AC LDR X30, [X31], #0x10
	0x033CC3B0 RET
	0x033CC3B4 STR X30, [X31 - 0x10]!
	0x033CC3B8 BL 0x1C3D770

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1012000
	007 Move W8, [X21+657]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xD61000
	015 Move X0, [X0+2552]
	016 Call 0x1C17CF4
	017 Move X0, 0xD61000
	018 Move X0, [X0+2136]
	019 Call 0x1C17CF4
	020 Move X0, 0xD61000
	021 Move X0, [X0+2544]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+657], W8
	025 Compare X20, 0
	026 JumpIfEqual {176}
	027 Move X9, 0xD61000
	028 Move X9, [X9+2544]
	029 Move X8, [X20]
	030 Move X1, [X9]
	031 Move W10, [X8+304]
	032 Move W9, [X1+304]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X8, [X8+200]
	035 Add X8, X8, X9
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, [X19+120]
	039 Move X21, [X20+120]
	040 Compare X0, 0
	041 JumpIfEqual {54}
	042 Compare X21, 0
	043 JumpIfEqual {75}
	044 Move X8, [X0]
	045 Move X1, X21
	046 Move X9, [X8+312]
	047 Move X2, [X8+320]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {92}
	053 Move X19, X31
	054 Compare X21, 0
	055 JumpIfEqual {136}
	056 Move X8, [X21+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X20, X31
	059 And X8, X8, 0
	060 Add X22, X21, 32
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X8, [X19]
	063 Move X1, [X22]
	064 Move X0, X19
	065 Move X9, [X8+312]
	066 Move X2, [X8+320]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {53}
	072 Move W8, [X21+24]
	073 Add X20, X20, 1
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X8, 0xD61000
	076 Move X8, [X8+2552]
	077 Move X1, X20
	078 Move X2, [X8]
	079 Call 0x20F8838, X0, X1
	080 Add W31, W0, 1
	081 Move X8, [X19+120]
	082 Compare X8, 0
	083 JumpIfEqual {186}
	084 Move W9, [X8+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move W20, W0
	087 NotImplemented "Instruction CMP not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction CSET not yet implemented."
	090 Add X8, X8, W9
	091 Move X19, [X8+32]
	092 Move X1, [X19+120]
	093 Move X2, [X20+120]
	094 Call MulticastDelegate.LastIndexOf, X0, X1, X2
	095 Add W31, W0, 1
	096 Move W21, W0
	097 Move X0, X19
	098 Call 0x1C887F8
	099 Move X8, [X19+120]
	100 Compare X8, 0
	101 JumpIfEqual {186}
	102 Move X9, [X20+120]
	103 Compare X9, 0
	104 JumpIfEqual {186}
	105 Move X10, 0xD61000
	106 Move X10, [X10+2136]
	107 Move W8, [X8+24]
	108 Move W9, [X9+24]
	109 Move X22, X0
	110 Move X0, [X10]
	111 Subtract W1, W8, W9
	112 Call 0x1C17D6C
	113 Compare X22, 0
	114 JumpIfEqual {186}
	115 Move [X22+120], X0
	116 Move X1, X0
	117 Move X0, [X19+120]
	118 Move W2, W21
	119 Move X3, X31
	120 Call Array.Copy, X0, X1, X2
	121 Move X8, [X20+120]
	122 Compare X8, 0
	123 JumpIfEqual {186}
	124 Move X0, [X19+120]
	125 Compare X0, 0
	126 JumpIfEqual {186}
	127 Move W8, [X8+24]
	128 Move W9, [X0+24]
	129 Move X2, [X22+120]
	130 Move W3, W21
	131 Add W1, W21, W8
	132 Subtract W4, W9, W1
	133 Move X5, X31
	134 Call Array.Copy, X0, X1, X2, X3, X4
	135 Move X19, X22
	136 Move X8, [X19]
	137 Move X0, X19
	138 Move X1, X20
	139 Move X9, [X8+312]
	140 Move X2, [X8+320]
	141 NotImplemented "Instruction BLR not yet implemented."
	142 And W31, W0, 1
	143 NotImplemented "Instruction CSEL not yet implemented."
	144 Move X0, X19
	145 Call 0x1C887F8
	146 Move X8, [X19+120]
	147 Compare X8, 0
	148 JumpIfEqual {186}
	149 Move X9, 0xD61000
	150 Move X9, [X9+2136]
	151 Move W8, [X8+24]
	152 Move X21, X0
	153 Move X0, [X9]
	154 Subtract W1, W8, 1
	155 Call 0x1C17D6C
	156 Compare X21, 0
	157 JumpIfEqual {186}
	158 Move [X21+120], X0
	159 Move X1, X0
	160 Move X0, [X19+120]
	161 Move W2, W20
	162 Move X3, X31
	163 Call Array.Copy, X0, X1, X2
	164 Move X0, [X19+120]
	165 Compare X0, 0
	166 JumpIfEqual {186}
	167 Move W8, [X0+24]
	168 Move X2, [X21+120]
	169 NotImplemented "Instruction ORN not yet implemented."
	170 Add W1, W20, 1
	171 Add W4, W8, W9
	172 Move W3, W20
	173 Move X5, X31
	174 Call Array.Copy, X0, X1, X2, X3, X4
	175 Move X19, X21
	176 Move X0, X19
	177 Move X20, [X31+32]
	178 Move X19, [X31+40]
	179 Move X22, [X31+16]
	180 Move X21, [X31+24]
	181 Move X30, [X31+48]
	182 Return X0
	183 Call 0x1C17F28
	184 Move X0, X20
	185 Call 0x1C181E0
	186 Call 0x1C17F20
	187 Move X0, 0xD28000
	188 Move X0, [X0+1456]
	189 Call 0x1C17D08
	190 Call 0x1C17F10
	191 Move X1, X31
	192 Move X19, X0
	193 Call InvalidOperationException..ctor, X0
	194 Move X0, 0xD61000
	195 Move X0, [X0+2560]
	196 Call 0x1C17D08
	197 Move X1, X0
	198 Move X0, X19
	199 Call 0x1C17DEC

