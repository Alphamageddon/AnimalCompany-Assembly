Type: System.TermInfoDriver

Method: System.String TryTermInfoDir(System.String dir, System.String term)

Disassembly:
	0x033CD8D4 LDR X8, [X0]
	0x033CD8D8 LDP X9, X1, [X8 + 0x1C8]
	0x033CD8DC BLR X9
	0x033CD8E0 CMP W0, 0x5B
	0x033CD8E4 B.NE 0x33CD918
	0x033CD8E8 LDR X0, [X19 + 0x60]
	0x033CD8EC CBZ X0, 0x33CDA28
	0x033CD8F0 LDR X8, [X0]
	0x033CD8F4 LDP X9, X1, [X8 + 0x1C8]
	0x033CD8F8 BLR X9
	0x033CD8FC CMP W0, 0x3B
	0x033CD900 B.NE 0x33CD940
	0x033CD904 MOV W21, W31
	0x033CD908 B 0x33CD998
	0x033CD90C MOVZ W8, 0x1
	0x033CD910 STRB W8, [X19 + 0xEC]
	0x033CD914 B 0x33CDA18
	0x033CD918 MOV W20, W0
	0x033CD91C MOVZ W1, 0x1B
	0x033CD920 MOV X0, X19
	0x033CD924 BL 0x33CE2F0
	0x033CD928 MOV X0, X19
	0x033CD92C MOV W1, W20
	0x033CD930 LDP X20, X19, [X31 + 0x20]
	0x033CD934 LDP X22, X21, [X31 + 0x10]
	0x033CD938 LDR X30, [X31], #0x30
	0x033CD93C B 0x33CE2F0
	0x033CD940 MOV W20, W0
	0x033CD944 LDR X0, [X19 + 0x60]
	0x033CD948 CBZ X0, 0x33CDA28
	0x033CD94C LDR X8, [X0]
	0x033CD950 LDP X9, X1, [X8 + 0x1C8]
	0x033CD954 BLR X9
	0x033CD958 SUB W8, W0, 0x30
	0x033CD95C CMP W8, 0x9
	0x033CD960 B.HI 0x33CD994
	0x033CD964 MOVZ W21, 0xA
	0x033CD968 LDR X8, [X19 + 0x60]
	0x033CD96C CBZ X8, 0x33CDA28
	0x033CD970 LDR X9, [X8]
	0x033CD974 LDP X10, X1, [X9 + 0x1C8]
	0x033CD978 MADD W9, W20, W21, W0
	0x033CD97C MOV X0, X8
	0x033CD980 SUB W20, W9, 0x1E0
	0x033CD984 BLR X10
	0x033CD988 SUB W8, W0, 0x30
	0x033CD98C CMP W8, 0xA
	0x033CD990 B.CC 0x33CD968
	0x033CD994 SUB W21, W20, 0x31
	0x033CD998 LDR X0, [X19 + 0x60]
	0x033CD99C CBZ X0, 0x33CDA28
	0x033CD9A0 LDR X8, [X0]
	0x033CD9A4 LDP X9, X1, [X8 + 0x1C8]
	0x033CD9A8 BLR X9
	0x033CD9AC CMP W0, 0x52
	0x033CD9B0 B.NE 0x33CD9BC
	0x033CD9B4 MOV W8, W31
	0x033CD9B8 B 0x33CDA14
	0x033CD9BC MOV W20, W0
	0x033CD9C0 LDR X0, [X19 + 0x60]
	0x033CD9C4 CBZ X0, 0x33CDA28
	0x033CD9C8 LDR X8, [X0]
	0x033CD9CC LDP X9, X1, [X8 + 0x1C8]
	0x033CD9D0 BLR X9
	0x033CD9D4 SUB W8, W0, 0x30
	0x033CD9D8 CMP W8, 0x9
	0x033CD9DC B.HI 0x33CDA10
	0x033CD9E0 MOVZ W22, 0xA
	0x033CD9E4 LDR X8, [X19 + 0x60]
	0x033CD9E8 CBZ X8, 0x33CDA28
	0x033CD9EC LDR X9, [X8]
	0x033CD9F0 LDP X10, X1, [X9 + 0x1C8]
	0x033CD9F4 MADD W9, W20, W22, W0
	0x033CD9F8 MOV X0, X8
	0x033CD9FC SUB W20, W9, 0x1E0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1011000
	007 Move W8, [X21+672]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xD27000
	015 Move X0, [X0+1880]
	016 Call 0x1C17CF4
	017 Move X0, 0xD4E000
	018 Move X0, [X0+464]
	019 Call 0x1C17CF4
	020 Move X0, 0xD60000
	021 Move X0, [X0+2728]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+672], W8
	025 Compare X19, 0
	026 JumpIfEqual {86}
	027 Move X21, 0xD27000
	028 Move X22, 0xD60000
	029 Move X21, [X21+1880]
	030 Move X22, [X22+2728]
	031 Move X0, X19
	032 Move W1, W31
	033 Move X2, X31
	034 Call String.get_Chars, X0, X1
	035 Move X8, [X21]
	036 And W9, W0, 0xFFFF
	037 Add X1, X31, 12
	038 Move [X31+12], W9
	039 Move X0, X8
	040 Call 0x1C17E04
	041 Move X8, [X22]
	042 Move X2, X0
	043 Move X1, X20
	044 Move X3, X19
	045 Move X0, X8
	046 Move X4, X31
	047 Call String.Format, X0, X1, X2, X3
	048 Move X1, X31
	049 Move X21, X0
	050 Call File.Exists, X0
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {56}
	055 Move X0, X21
	056 Move W2, 1
	057 Move X0, X19
	058 Move W1, W31
	059 Move X3, X31
	060 Call String.Substring, X0, X1, X2
	061 Move X8, 0xD4E000
	062 Move X8, [X8+464]
	063 Move X21, X0
	064 Move X8, [X8]
	065 Move W9, [X8+224]
	066 Compare W9, 0
	067 JumpIfNotEqual {70}
	068 Move X0, X8
	069 Call 0x1C17DFC
	070 Move X0, X20
	071 Move X1, X21
	072 Move X2, X19
	073 Move X3, X31
	074 Call Path.Combine, X0, X1, X2
	075 Move X1, X31
	076 Move X19, X0
	077 Call File.Exists, X0
	078 And W31, W0, 1
	079 NotImplemented "Instruction CSEL not yet implemented."
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X22, [X31+16]
	083 Move X21, [X31+24]
	084 Move X30, [X31+48]
	085 Return X0
	086 Call 0x1C17F20

Method: System.String SearchTerminfo(System.String term)

Disassembly:
	0x033CDA00 BLR X10
	0x033CDA04 SUB W8, W0, 0x30
	0x033CDA08 CMP W8, 0xA
	0x033CDA0C B.CC 0x33CD9E4
	0x033CDA10 SUB W8, W20, 0x31
	0x033CDA14 STP W8, W21, [X19 + 0x18]
	0x033CDA18 LDP X20, X19, [X31 + 0x20]
	0x033CDA1C LDP X22, X21, [X31 + 0x10]
	0x033CDA20 LDR X30, [X31], #0x30
	0x033CDA24 RET
	0x033CDA28 BL 0x1C16F20
	0x033CDA2C STR X30, [X31 - 0x20]!
	0x033CDA30 STP X20, X19, [X31 + 0x10]
	0x033CDA34 LDR W8, [X0 + 0x18]
	0x033CDA38 MOV X19, X0
	0x033CDA3C ADD W20, W8, 0x1
	0x033CDA40 STR W20, [X0 + 0x18]
	0x033CDA44 BL 0x33CDA98
	0x033CDA48 CMP W20, W0
	0x033CDA4C B.LT 0x33CDA8C
	0x033CDA50 LDR W8, [X19 + 0x1C]
	0x033CDA54 MOV X0, X19
	0x033CDA58 ADD W20, W8, 0x1
	0x033CDA5C STP W31, W20, [X19 + 0x18]
	0x033CDA60 BL 0x33CDAC4
	0x033CDA64 CMP W20, W0
	0x033CDA68 B.LT 0x33CDA8C
	0x033CDA6C LDR W8, [X19 + 0x104]
	0x033CDA70 ADDS W31, W8, 0x1
	0x033CDA74 B.EQ 0x33CDA80
	0x033CDA78 SUB W8, W8, 0x1
	0x033CDA7C STR W8, [X19 + 0x104]
	0x033CDA80 LDR W8, [X19 + 0x1C]
	0x033CDA84 SUB W8, W8, 0x1
	0x033CDA88 STR W8, [X19 + 0x1C]
	0x033CDA8C LDP X20, X19, [X31 + 0x10]
	0x033CDA90 LDR X30, [X31], #0x20
	0x033CDA94 RET
	0x033CDA98 STP X30, X19, [X31 - 0x10]!
	0x033CDA9C LDRB W8, [X0 + 0xA0]
	0x033CDAA0 MOV X19, X0
	0x033CDAA4 CBNZ W8, 0x33CDAB0
	0x033CDAA8 MOV X0, X19
	0x033CDAAC BL 0x33CCEF0
	0x033CDAB0 MOV X0, X19
	0x033CDAB4 BL 0x33CE3DC
	0x033CDAB8 LDR W0, [X19 + 0x70]
	0x033CDABC LDP X30, X19, [X31], #0x10
	0x033CDAC0 RET
	0x033CDAC4 STP X30, X19, [X31 - 0x10]!
	0x033CDAC8 LDRB W8, [X0 + 0xA0]
	0x033CDACC MOV X19, X0
	0x033CDAD0 CBNZ W8, 0x33CDADC
	0x033CDAD4 MOV X0, X19
	0x033CDAD8 BL 0x33CCEF0
	0x033CDADC MOV X0, X19
	0x033CDAE0 BL 0x33CE3DC
	0x033CDAE4 LDR W0, [X19 + 0x74]
	0x033CDAE8 LDP X30, X19, [X31], #0x10
	0x033CDAEC RET
	0x033CDAF0 STP X30, X21, [X31 - 0x20]!
	0x033CDAF4 STP X20, X19, [X31 + 0x10]
	0x033CDAF8 ADRP X21, 0x1010000
	0x033CDAFC LDRB W8, [X21 + 0x2A4]
	0x033CDB00 MOV X19, X0
	0x033CDB04 UBFM X20, X1, 0x20, 0x3F
	0x033CDB08 TBNZ X8, 0x0, 0x33CDB2C
	0x033CDB0C ADRP X0, 0xD26000
	0x033CDB10 LDR X0, [X0 + 0xDD8]
	0x033CDB14 BL 0x1C16CF4
	0x033CDB18 ADRP X0, 0xD52000
	0x033CDB1C LDR X0, [X0 + 0xB8]
	0x033CDB20 BL 0x1C16CF4
	0x033CDB24 MOVZ W8, 0x1
	0x033CDB28 STRB W8, [X21 + 0x2A4]
	0x033CDB2C CMP W20, 0xC
	0x033CDB30 B.EQ 0x33CDBA0
	0x033CDB34 CMP W20, 0x9
	0x033CDB38 B.EQ 0x33CDBBC
	0x033CDB3C CMP W20, 0x8
	0x033CDB40 B.NE 0x33CDBB0
	0x033CDB44 LDR W8, [X19 + 0x18]
	0x033CDB48 SUBS W1, W8, 0x1
	0x033CDB4C B.LT 0x33CDBB0
	0x033CDB50 LDR W9, [X19 + 0x100]
	0x033CDB54 LDR W2, [X19 + 0x1C]
	0x033CDB58 CMP W8, W9
	0x033CDB5C B.GT 0x33CDB6C
	0x033CDB60 LDR W8, [X19 + 0x104]
	0x033CDB64 CMP W2, W8
	0x033CDB68 B.EQ 0x33CDBB0
	0x033CDB6C MOV X0, X19
	0x033CDB70 STR W1, [X19 + 0x18]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x1011000
	009 Move W8, [X20+673]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xD29000
	016 Move X0, [X0+632]
	017 Call 0x1C17CF4
	018 Move X0, 0xD5B000
	019 Move X0, [X0+1984]
	020 Call 0x1C17CF4
	021 Move X0, 0xD60000
	022 Move X0, [X0+2736]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+673], W8
	026 Compare X19, 0
	027 JumpIfEqual {106}
	028 Move X8, 0xD29000
	029 Move X8, [X8+632]
	030 Move X0, X19
	031 Move X2, X31
	032 Move X8, [X8]
	033 Move X8, [X8+184]
	034 Move X1, [X8]
	035 Call String.op_Equality, X0, X1
	036 Move W8, W0
	037 Move X0, X31
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {107}
	042 Move X8, 0xD60000
	043 Move X8, [X8+2736]
	044 Move X0, [X8]
	045 Call Environment.internalGetEnvironmentVariable, X0
	046 Compare X0, 0
	047 JumpIfEqual {67}
	048 Move X1, X31
	049 Move X20, X0
	050 Call Directory.Exists, X0
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {67}
	055 Move X8, 0xD5B000
	056 Move X8, [X8+1984]
	057 Move X0, [X8]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X19
	064 Call TermInfoDriver.TryTermInfoDir, X0, X1
	065 Compare X0, 0
	066 JumpIfNotEqual {107}
	067 Move X21, 0xD5B000
	068 Move X21, [X21+1984]
	069 Move X0, [X21]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {75}
	073 Call 0x1C17DFC
	074 Move X0, [X21]
	075 Move X8, [X0+184]
	076 Move X22, [X8+16]
	077 Compare X22, 0
	078 JumpIfEqual {116}
	079 Move X8, [X22+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X23, X31
	082 And X8, X8, 0
	083 Add X24, X22, 32
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X20, [X24]
	086 Move X1, X31
	087 Move X0, X20
	088 Call Directory.Exists, X0
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {103}
	093 Move X0, [X21]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move X0, X20
	099 Move X1, X19
	100 Call TermInfoDriver.TryTermInfoDir, X0, X1
	101 Compare X0, 0
	102 JumpIfNotEqual {107}
	103 Move W8, [X22+24]
	104 Add X23, X23, 1
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X0, X31
	107 Move X20, [X31+48]
	108 Move X19, [X31+56]
	109 Move X22, [X31+32]
	110 Move X21, [X31+40]
	111 Move X24, [X31+16]
	112 Move X23, [X31+24]
	113 Move X30, [X31+64]
	114 Return X0
	115 Call 0x1C17F28
	116 Call 0x1C17F20

Method: System.Void WriteConsole(System.String str)

Disassembly:
	0x033CDB74 BL 0x33CDC04
	0x033CDB78 ADRP X8, 0xD26000
	0x033CDB7C LDR X8, [X8 + 0xDD8]
	0x033CDB80 MOV X0, X19
	0x033CDB84 LDR X1, [X8]
	0x033CDB88 BL 0x33CCB74
	0x033CDB8C LDP W1, W2, [X19 + 0x18]
	0x033CDB90 MOV X0, X19
	0x033CDB94 LDP X20, X19, [X31 + 0x10]
	0x033CDB98 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {11}
	004 Move X0, [X0+104]
	005 Compare X0, 0
	006 JumpIfEqual {13}
	007 Move X2, X31
	008 Move X30, [X31+16]
	009 Call CStreamWriter.InternalWriteString, X0, X1
	010 Return 
	011 Move X30, [X31+16]
	012 Return 
	013 Call 0x1C17F20

Method: System.Void .ctor(System.String term)

Disassembly:
	0x033C4F10 ADRP X0, 0xD34000
	0x033C4F14 LDR X0, [X0 + 0x528]
	0x033C4F18 BL 0x1C16D08
	0x033C4F1C BL 0x1C16F10
	0x033C4F20 MOV X19, X0
	0x033C4F24 ADRP X0, 0xD30000
	0x033C4F28 LDR X0, [X0 + 0x6E8]
	0x033C4F2C BL 0x1C16D08
	0x033C4F30 MOV X1, X0
	0x033C4F34 MOV X0, X19
	0x033C4F38 MOV X2, X31
	0x033C4F3C BL 0x330E100
	0x033C4F40 B 0x33C4F74
	0x033C4F44 ADRP X0, 0xD37000
	0x033C4F48 LDR X0, [X0 + 0x578]
	0x033C4F4C BL 0x1C16D08
	0x033C4F50 BL 0x1C16F10
	0x033C4F54 MOV X19, X0
	0x033C4F58 ADRP X0, 0xD68000
	0x033C4F5C LDR X0, [X0 + 0x7F0]
	0x033C4F60 BL 0x1C16D08
	0x033C4F64 MOV X1, X0
	0x033C4F68 MOV X0, X19
	0x033C4F6C MOV X2, X31
	0x033C4F70 BL 0x3314A68
	0x033C4F74 ADRP X0, 0xD68000
	0x033C4F78 LDR X0, [X0 + 0x7F8]
	0x033C4F7C BL 0x1C16D08
	0x033C4F80 MOV X1, X0
	0x033C4F84 MOV X0, X19
	0x033C4F88 BL 0x1C16DEC
	0x033C4F8C ADRP X0, 0xD37000
	0x033C4F90 LDR X0, [X0 + 0x578]
	0x033C4F94 BL 0x1C16D08
	0x033C4F98 BL 0x1C16F10
	0x033C4F9C MOV X19, X0
	0x033C4FA0 ADRP X0, 0xD68000
	0x033C4FA4 LDR X0, [X0 + 0x800]
	0x033C4FA8 B 0x33C4F60
	0x033C4FAC MOVZ W3, 0x1
	0x033C4FB0 MOVZ W4, 0x1
	0x033C4FB4 B 0x33C4794
	0x033C4FB8 MOV X8, X1
	0x033C4FBC AND W3, W2, 0x1
	0x033C4FC0 MOV X1, X31
	0x033C4FC4 MOV X2, X8
	0x033C4FC8 MOV W4, W31
	0x033C4FCC B 0x33C4794
	0x033C4FD0 MOV X2, X1
	0x033C4FD4 MOVZ W3, 0x1
	0x033C4FD8 MOV X1, X31
	0x033C4FDC MOV W4, W31
	0x033C4FE0 B 0x33C4794
	0x033C4FE4 MOVZ W4, 0x1
	0x033C4FE8 MOV W3, W31
	0x033C4FEC B 0x33C5584
	0x033C4FF0 AND W3, W3, 0x1
	0x033C4FF4 MOVZ W4, 0x1
	0x033C4FF8 B 0x33C5584
	0x033C4FFC SUB X31, X31, 0x70
	0x033C5000 STP X29, X30, [X31 + 0x10]
	0x033C5004 STP X28, X27, [X31 + 0x20]
	0x033C5008 STP X26, X25, [X31 + 0x30]
	0x033C500C STP X24, X23, [X31 + 0x40]
	0x033C5010 STP X22, X21, [X31 + 0x50]
	0x033C5014 STP X20, X19, [X31 + 0x60]
	0x033C5018 ADRP X20, 0x1018000
	0x033C501C ADRP X28, 0xD2E000
	0x033C5020 LDRB W8, [X20 + 0x268]
	0x033C5024 LDR X28, [X28 + 0x6C0]
	0x033C5028 MOV W24, W5
	0x033C502C MOV W25, W4
	0x033C5030 MOV W27, W3
	0x033C5034 MOV X19, X2
	0x033C5038 MOV X21, X1
	0x033C503C MOV X22, X0
	0x033C5040 TBNZ X8, 0x0, 0x33C5088
	0x033C5044 ADRP X0, 0xD67000
	0x033C5048 LDR X0, [X0 + 0x808]
	0x033C504C BL 0x1C16CF4
	0x033C5050 ADRP X0, 0xD60000
	0x033C5054 LDR X0, [X0 + 0x708]
	0x033C5058 BL 0x1C16CF4
	0x033C505C ADRP X0, 0xD36000
	0x033C5060 LDR X0, [X0 + 0xC60]
	0x033C5064 BL 0x1C16CF4
	0x033C5068 ADRP X0, 0xD2E000
	0x033C506C LDR X0, [X0 + 0x6C0]
	0x033C5070 BL 0x1C16CF4
	0x033C5074 ADRP X0, 0xD67000
	0x033C5078 LDR X0, [X0 + 0x7D8]
	0x033C507C BL 0x1C16CF4
	0x033C5080 MOVZ W8, 0x1
	0x033C5084 STRB W8, [X20 + 0x268]
	0x033C5088 LDR X0, [X28]
	0x033C508C LDR W8, [X0 + 0xE0]
	0x033C5090 CBNZ W8, 0x33C5098
	0x033C5094 BL 0x1C16DFC
	0x033C5098 MOV X0, X22
	0x033C509C MOV X1, X31
	0x033C50A0 MOV X2, X31
	0x033C50A4 BL 0x3395194
	0x033C50A8 TBNZ X0, 0x0, 0x33C5348
	0x033C50AC CBZ X19, 0x33C5368
	0x033C50B0 ADRP X8, 0xD60000
	0x033C50B4 LDR X0, [X28]
	0x033C50B8 LDR X8, [X8 + 0x708]
	0x033C50BC LDR W9, [X0 + 0xE0]
	0x033C50C0 LDR X23, [X8]
	0x033C50C4 CBNZ W9, 0x33C50CC
	0x033C50C8 BL 0x1C16DFC
	0x033C50CC MOV X0, X23
	0x033C50D0 MOV X1, X31
	0x033C50D4 BL 0x338C698
	0x033C50D8 CBZ X22, 0x33C5334
	0x033C50DC LDR X8, [X22]
	0x033C50E0 MOV X1, X0
	0x033C50E4 MOV X0, X22
	0x033C50E8 LDR X9, [X8 + 0x298]
	0x033C50EC LDR X2, [X8 + 0x2A0]
	0x033C50F0 BLR X9
	0x033C50F4 TBZ X0, 0x0, 0x33C539C
	0x033C50F8 ADRP X8, 0xD67000
	0x033C50FC LDR X8, [X8 + 0x7D8]
	0x033C5100 MOV X0, X22
	0x033C5104 MOV X2, X31
	0x033C5108 LDR X1, [X8]
	0x033C510C BL 0x33975F8
	0x033C5110 CBZ X0, 0x33C5334
	0x033C5114 LDR X8, [X0]
	0x033C5118 MOV X22, X0
	0x033C511C STP W24, W25, [X31 + 0x8]
	0x033C5120 LDR X9, [X8 + 0x358]
	0x033C5124 LDR X1, [X8 + 0x360]
	0x033C5128 BLR X9
	0x033C512C CBZ X0, 0x33C5334
	0x033C5130 ADRP X8, 0xD36000
	0x033C5134 LDR X8, [X8 + 0xC60]
	0x033C5138 MOV X26, X0
	0x033C513C LDR W1, [X26 + 0x18]
	0x033C5140 MOV W25, W27
	0x033C5144 LDR X0, [X8]
	0x033C5148 BL 0x1C16D6C
	0x033C514C LDR W8, [X26 + 0x18]
	0x033C5150 MOV X23, X0
	0x033C5154 CMP W8, 0x1
	0x033C5158 B.LT 0x33C51C4
	0x033C515C MOV X29, X31
	0x033C5160 ADD X20, X23, 0x20
	0x033C5164 ADD X24, X26, 0x20
	0x033C5168 CMP W29, W8
	0x033C516C B.CS 0x33C5338
	0x033C5170 LDR X0, [X24, X29, LSL #3]
	0x033C5174 CBZ X0, 0x33C5334
	0x033C5178 LDR X8, [X0]
	0x033C517C LDP X9, X1, [X8 + 0x1D8]
	0x033C5180 BLR X9
	0x033C5184 CBZ X23, 0x33C5334
	0x033C5188 MOV X27, X0
	0x033C518C CBZ X0, 0x33C51A4
	0x033C5190 LDR X8, [X23]
	0x033C5194 MOV X0, X27
	0x033C5198 LDR X1, [X8 + 0x40]
	0x033C519C BL 0x1C16E00
	0x033C51A0 CBZ X0, 0x33C533C
	0x033C51A4 LDR W8, [X23 + 0x18]
	0x033C51A8 CMP W29, W8
	0x033C51AC B.CS 0x33C5338
	0x033C51B0 STR X27, [X20, X29, LSL #3]
	0x033C51B4 LDR W8, [X26 + 0x18]
	0x033C51B8 ADD X29, X29, 0x1
	0x033C51BC CMP W29, W8
	0x033C51C0 B.LT 0x33C5168
	0x033C51C4 ADRP X27, 0xD67000
	0x033C51C8 LDR X27, [X27 + 0x808]
	0x033C51CC LDR W10, [X31 + 0xC]
	0x033C51D0 MOVZ W8, 0x32
	0x033C51D4 MOVK W8, 0x10000
	0x033C51D8 ORR W9, W8, 0x1
	0x033C51DC ANDS W31, W10, 0x1
	0x033C51E0 CSEL W8, W9, W8, NE
	0x033C51E4 ORR W24, W8, W25, 0x0
	0x033C51E8 LDR X0, [X28]
	0x033C51EC LDR W8, [X0 + 0xE0]
	0x033C51F0 CBNZ W8, 0x33C51F8
	0x033C51F4 BL 0x1C16DFC
	0x033C51F8 MOV X0, X21
	0x033C51FC MOV X1, X31
	0x033C5200 MOV X2, X31
	0x033C5204 BL 0x3395F0C
	0x033C5208 TBZ X0, 0x0, 0x33C52EC
	0x033C520C LDR X25, [X27]
	0x033C5210 LDR X8, [X25 + 0x38]
	0x033C5214 CBNZ X8, 0x33C5224
	0x033C5218 MOV X0, X25
	0x033C521C BL 0x1C5C6E0
	0x033C5220 LDR X8, [X25 + 0x38]
	0x033C5224 LDR X0, [X8 + 0x10]
	0x033C5228 LDRB W8, [X0 + 0x135]
	0x033C522C TBNZ X8, 0x0, 0x33C5234
	0x033C5230 BL 0x1C5C684
	0x033C5234 LDR W8, [X0 + 0xE0]
	0x033C5238 CBNZ W8, 0x33C5240
	0x033C523C BL 0x1C16DFC
	0x033C5240 LDR X8, [X25 + 0x38]
	0x033C5244 LDR X0, [X8 + 0x10]
	0x033C5248 LDRB W8, [X0 + 0x135]
	0x033C524C TBNZ X8, 0x0, 0x33C5254

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x101A000
	009 Move X24, 0xD32000
	010 Move X22, 0xD36000
	011 Move X21, 0xD64000
	012 Move W8, [X23+674]
	013 Move X24, [X24+632]
	014 Move X22, [X22+3264]
	015 Move X21, [X21+1984]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {48}
	022 Move X0, 0xD69000
	023 Move X0, [X0+1840]
	024 Call 0x1C17CF4
	025 Move X0, 0xD38000
	026 Move X0, [X0+2392]
	027 Call 0x1C17CF4
	028 Move X0, 0xD36000
	029 Move X0, [X0+3264]
	030 Call 0x1C17CF4
	031 Move X0, 0xD32000
	032 Move X0, [X0+632]
	033 Call 0x1C17CF4
	034 Move X0, 0xD64000
	035 Move X0, [X0+1984]
	036 Call 0x1C17CF4
	037 Move X0, 0xD69000
	038 Move X0, [X0+1976]
	039 Call 0x1C17CF4
	040 Move X0, 0xD69000
	041 Move X0, [X0+1984]
	042 Call 0x1C17CF4
	043 Move X0, 0xD69000
	044 Move X0, [X0+1992]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X23+674], W8
	048 Move X8, [X24]
	049 Move W9, 1
	050 Move X8, [X8+184]
	051 Move X8, [X8]
	052 Move [X19+48], W9
	053 Move [X19+32], X8
	054 Move [X19+40], X8
	055 Move X0, [X22]
	056 Call 0x1C17F10
	057 Move W8, 15
	058 NotImplemented "Instruction MOVI not yet implemented."
	059 Move [X19+168], X0
	060 Move [X19+208], W8
	061 Move [X19+256], D0
	062 Move [X19+88], X20
	063 Move X0, [X21]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X23, 0xD69000
	069 Move X23, [X23+1976]
	070 Move X0, X20
	071 Call TermInfoDriver.SearchTerminfo, X0
	072 Compare X0, 0
	073 JumpIfEqual {80}
	074 Move X21, X0
	075 Move X0, [X23]
	076 Call 0x1C17F10
	077 Move X2, X21
	078 Move X20, X0
	079 Call TermInfoReader..ctor, X0, X1, X2
	080 Move X8, 0xD68000
	081 Move X8, [X8+1984]
	082 Move X0, X20
	083 Move X2, X31
	084 Move X1, [X8]
	085 Call String.op_Equality, X0, X1
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {91}
	090 Call KnownTerminals.get_xterm
	091 Move X8, 0xD68000
	092 Move X8, [X8+1992]
	093 Move X0, X20
	094 Move X2, X31
	095 Move X1, [X8]
	096 Call String.op_Equality, X0, X1
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {229}
	101 Call KnownTerminals.get_linux
	102 Move X8, [X23]
	103 Move X21, X0
	104 Move X0, X8
	105 Call 0x1C17F10
	106 Move X2, X21
	107 Move X20, X0
	108 Call TermInfoReader..ctor, X0, X1, X2
	109 Move [X19+16], X20
	110 Move X22, 0xD37000
	111 Move X22, [X22+2392]
	112 Compare X20, 0
	113 JumpIfNotEqual {123}
	114 Call KnownTerminals.get_ansi
	115 Move X8, [X23]
	116 Move X20, X0
	117 Move X0, X8
	118 Call 0x1C17F10
	119 Move X2, X20
	120 Move X21, X0
	121 Call TermInfoReader..ctor, X0, X1, X2
	122 Move [X19+16], X21
	123 Move X0, [X22]
	124 Move W8, [X0+224]
	125 Compare W8, 0
	126 JumpIfNotEqual {129}
	127 Call 0x1C17DFC
	128 Move X0, [X22]
	129 Move X8, [X0+184]
	130 Move X21, 0xD68000
	131 Move X8, [X8]
	132 Move X21, [X21+1840]
	133 Compare X8, 0
	134 JumpIfEqual {140}
	135 Move X9, [X8]
	136 Move X8, [X21]
	137 Move W11, [X9+304]
	138 Move W10, [X8+304]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move W20, 1
	141 Move X9, [X9+200]
	142 Add X9, X9, X10
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 NotImplemented "Instruction CSET not yet implemented."
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfEqual {195}
	149 Compare W20, 0
	150 JumpIfEqual {198}
	151 Move W0, W31
	152 Call Console.OpenStandardOutput, X0
	153 Move X23, 0x1019000
	154 Move W8, [X23+729]
	155 Move X20, X0
	156 Compare W8, 0
	157 JumpIfNotEqual {163}
	158 Move X0, 0xD37000
	159 Move X0, [X0+2392]
	160 Call 0x1C17CF4
	161 Move W8, 1
	162 Move [X23+729], W8
	163 Move X0, [X22]
	164 Move W8, [X0+224]
	165 Compare W8, 0
	166 JumpIfNotEqual {169}
	167 Call 0x1C17DFC
	168 Move X0, [X22]
	169 Move X8, [X0+184]
	170 Move X0, [X21]
	171 Move X22, [X8+40]
	172 Call 0x1C17F10
	173 Move X1, X20
	174 Move X2, X22
	175 Move W3, W31
	176 Move X4, X31
	177 Move X21, X0
	178 Call CStreamWriter..ctor, X0, X1, X2, X3
	179 Move [X19+104], X21
	180 Compare X21, 0
	181 JumpIfEqual {230}
	182 Move X8, [X21]
	183 Move X0, X21
	184 Move X20, [X31+48]
	185 Move X19, [X31+56]
	186 Move X22, [X31+32]
	187 Move X21, [X31+40]
	188 Move X3, [X8+648]
	189 Move X2, [X8+656]
	190 Move X24, [X31+16]
	191 Move X23, [X31+24]
	192 Move W1, 1
	193 Move X30, [X31+64]
	194 CallNoReturn X3
	195 Call 0x1C17DFC
	196 Compare W20, 0
	197 JumpIfNotEqual {151}
	198 Move X8, [X22]
	199 Move X8, [X8+184]
	200 Move X0, [X8]
	201 Compare X0, 0
	202 JumpIfEqual {220}
	203 Move X9, [X0]
	204 Move X1, [X21]
	205 Move W10, [X9+304]
	206 Move W8, [X1+304]
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Move X10, [X9+200]
	209 Subtract X9, X8, 1
	210 Move X10, [X10]
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move [X19+104], X0
	213 Move X10, [X0]
	214 Move W11, [X10+304]
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move X8, [X10+200]
	217 Move X8, [X8]
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Call 0x1C181E0
	220 Move [X19+104], X31
	221 Move X20, [X31+48]
	222 Move X19, [X31+56]
	223 Move X22, [X31+32]
	224 Move X21, [X31+40]
	225 Move X24, [X31+16]
	226 Move X23, [X31+24]
	227 Move X30, [X31+64]
	228 Return 
	229 Move X20, [X19+16]
	230 Call 0x1C17F20

Method: System.Boolean get_Initialized()

Disassembly:
	0x033CDEE8 MOV W3, W31
	0x033CDEEC ADD W8, W1, 0x40

ISIL:
	001 Move W0, [X0+160]
	002 Return X0

Method: System.Void Init()

Disassembly:
	0x033CDEF0 MOVZ W5, 0x1
	0x033CDEF4 B 0x33CDE34
	0x033CDEF8 MOV W5, W31
	0x033CDEFC MOV W3, W31
	0x033CDF00 MOVZ W8, 0x6B
	0x033CDF04 B 0x33CDE34
	0x033CDF08 MOV W5, W31
	0x033CDF0C MOV W3, W31
	0x033CDF10 MOVZ W8, 0x6D
	0x033CDF14 B 0x33CDE34
	0x033CDF18 MOV W5, W31
	0x033CDF1C MOV W3, W31
	0x033CDF20 MOVZ W8, 0x6F
	0x033CDF24 B 0x33CDE34
	0x033CDF28 MOV W5, W31
	0x033CDF2C MOV W3, W31
	0x033CDF30 MOVZ W8, 0xD
	0x033CDF34 B 0x33CDE34
	0x033CDF38 MOV W5, W31
	0x033CDF3C MOV W3, W31
	0x033CDF40 SUB W8, W1, 0x20
	0x033CDF44 B 0x33CDE34
	0x033CDF48 MOV W5, W31
	0x033CDF4C MOVZ W3, 0x1
	0x033CDF50 B 0x33CDE30
	0x033CDF54 STR X30, [X31 - 0x20]!
	0x033CDF58 STP X20, X19, [X31 + 0x10]
	0x033CDF5C LDRB W8, [X0 + 0xA0]
	0x033CDF60 CBZ W8, 0x33CDFC8
	0x033CDF64 UBFM X8, X1, 0x20, 0x3F
	0x033CDF68 SUB W9, W8, 0x8
	0x033CDF6C MOV X19, X0
	0x033CDF70 CMP W9, 0x2
	0x033CDF74 MOVZ W0, 0x1
	0x033CDF78 B.CC 0x33CDFCC
	0x033CDF7C CMP W8, 0xC
	0x033CDF80 B.EQ 0x33CDFCC
	0x033CDF84 CMP W8, 0xD
	0x033CDF88 B.NE 0x33CDFC0
	0x033CDF8C LDR W8, [X19 + 0x1C]
	0x033CDF90 MOV X0, X19
	0x033CDF94 ADD W20, W8, 0x1
	0x033CDF98 STP W31, W20, [X19 + 0x18]
	0x033CDF9C BL 0x33CDAC4
	0x033CDFA0 CMP W20, W0
	0x033CDFA4 MOV W0, W31
	0x033CDFA8 B.LT 0x33CDFCC
	0x033CDFAC LDR W8, [X19 + 0x1C]
	0x033CDFB0 MOV W0, W31
	0x033CDFB4 SUB W8, W8, 0x1
	0x033CDFB8 STR W8, [X19 + 0x1C]
	0x033CDFBC B 0x33CDFCC
	0x033CDFC0 MOV X0, X19
	0x033CDFC4 BL 0x33CDA2C
	0x033CDFC8 MOV W0, W31
	0x033CDFCC LDP X20, X19, [X31 + 0x10]
	0x033CDFD0 LDR X30, [X31], #0x20
	0x033CDFD4 RET
	0x033CDFD8 STP X30, X19, [X31 - 0x10]!
	0x033CDFDC AND W1, W1, 0xFFFF
	0x033CDFE0 MOV W2, W31
	0x033CDFE4 MOV X19, X0
	0x033CDFE8 BL 0x33CDDD0
	0x033CDFEC AND X2, X1, 0x0
	0x033CDFF0 MOV X1, X0
	0x033CDFF4 MOV X0, X19
	0x033CDFF8 LDP X30, X19, [X31], #0x10
	0x033CDFFC B 0x33CDF54
	0x033CE000 STR X30, [X31 - 0x30]!
	0x033CE004 STP X22, X21, [X31 + 0x10]
	0x033CE008 STP X20, X19, [X31 + 0x20]
	0x033CE00C ADRP X22, 0x100F000
	0x033CE010 LDRB W8, [X22 + 0x2A5]
	0x033CE014 MOV W21, W2
	0x033CE018 MOV X20, X1
	0x033CE01C MOV X19, X0
	0x033CE020 TBNZ X8, 0x0, 0x33CE044
	0x033CE024 ADRP X0, 0xD5E000
	0x033CE028 LDR X0, [X0 + 0xB30]
	0x033CE02C BL 0x1C16CF4
	0x033CE030 ADRP X0, 0xD59000
	0x033CE034 LDR X0, [X0 + 0x7C0]
	0x033CE038 BL 0x1C16CF4
	0x033CE03C MOVZ W8, 0x1
	0x033CE040 STRB W8, [X22 + 0x2A5]
	0x033CE044 MOV X0, X20
	0x033CE048 MOV X1, X31
	0x033CE04C BL 0x32277A8
	0x033CE050 TBZ X0, 0x0, 0x33CE064
	0x033CE054 LDP X20, X19, [X31 + 0x20]
	0x033CE058 LDP X22, X21, [X31 + 0x10]
	0x033CE05C LDR X30, [X31], #0x30
	0x033CE060 RET
	0x033CE064 CMP W21, 0x10
	0x033CE068 B.CS 0x33CE104
	0x033CE06C ADRP X22, 0xD59000
	0x033CE070 LDR X22, [X22 + 0x7C0]
	0x033CE074 LDR X0, [X22]
	0x033CE078 LDR W8, [X0 + 0xE0]
	0x033CE07C CBNZ W8, 0x33CE088
	0x033CE080 BL 0x1C16DFC
	0x033CE084 LDR X0, [X22]
	0x033CE088 LDR X8, [X0 + 0xB8]
	0x033CE08C LDR X8, [X8 + 0x18]
	0x033CE090 CBZ X8, 0x33CE0FC
	0x033CE094 LDR W9, [X8 + 0x18]
	0x033CE098 CMP W9, W21
	0x033CE09C B.LS 0x33CE100
	0x033CE0A0 ADRP X9, 0xD5E000
	0x033CE0A4 ADD X8, X8, W21, 0x2, UXTW
	0x033CE0A8 LDR W21, [X19 + 0xE8]
	0x033CE0AC LDR X9, [X9 + 0xB30]
	0x033CE0B0 LDR W22, [X8 + 0x20]
	0x033CE0B4 MOVZ W1, 0x1
	0x033CE0B8 LDR X0, [X9]
	0x033CE0BC BL 0x1C16D6C
	0x033CE0C0 CBZ X0, 0x33CE0FC
	0x033CE0C4 LDR W8, [X0 + 0x18]
	0x033CE0C8 MOV X1, X0
	0x033CE0CC CBZ W8, 0x33CE100
	0x033CE0D0 SDIV W8, W22, W21
	0x033CE0D4 MSUB W8, W8, W21, W22
	0x033CE0D8 MOV X0, X20
	0x033CE0DC STP X8, X31, [X1 + 0x20]
	0x033CE0E0 BL 0x33CE158
	0x033CE0E4 MOV X1, X0
	0x033CE0E8 MOV X0, X19
	0x033CE0EC LDP X20, X19, [X31 + 0x20]
	0x033CE0F0 LDP X22, X21, [X31 + 0x10]
	0x033CE0F4 LDR X30, [X31], #0x30
	0x033CE0F8 B 0x33CCB74
	0x033CE0FC BL 0x1C16F20
	0x033CE100 BL 0x1C16F28
	0x033CE104 ADRP X0, 0xD2D000
	0x033CE108 LDR X0, [X0 + 0x578]
	0x033CE10C BL 0x1C16D08
	0x033CE110 BL 0x1C16F10
	0x033CE114 MOV X19, X0
	0x033CE118 ADRP X0, 0xD5E000
	0x033CE11C LDR X0, [X0 + 0xB68]
	0x033CE120 BL 0x1C16D08
	0x033CE124 MOV X1, X0
	0x033CE128 MOV X0, X19
	0x033CE12C MOV X2, X31
	0x033CE130 BL 0x3314A68
	0x033CE134 ADRP X0, 0xD5E000
	0x033CE138 LDR X0, [X0 + 0xB70]
	0x033CE13C BL 0x1C16D08
	0x033CE140 MOV X1, X0
	0x033CE144 MOV X0, X19
	0x033CE148 BL 0x1C16DEC
	0x033CE14C MOV W0, W0
	0x033CE150 MOV X1, X31
	0x033CE154 RET
	0x033CE158 SUB X31, X31, 0x40
	0x033CE15C STR X30, [X31 + 0x10]
	0x033CE160 STP X22, X21, [X31 + 0x20]
	0x033CE164 STP X20, X19, [X31 + 0x30]
	0x033CE168 ADRP X21, 0x100F000
	0x033CE16C LDRB W8, [X21 + 0x2B2]
	0x033CE170 MOV X19, X1
	0x033CE174 MOV X20, X0
	0x033CE178 TBNZ X8, 0x0, 0x33CE19C
	0x033CE17C ADRP X0, 0xD5E000
	0x033CE180 LDR X0, [X0 + 0xB78]
	0x033CE184 BL 0x1C16CF4
	0x033CE188 ADRP X0, 0xD5E000
	0x033CE18C LDR X0, [X0 + 0xB80]
	0x033CE190 BL 0x1C16CF4
	0x033CE194 MOVZ W8, 0x1
	0x033CE198 STRB W8, [X21 + 0x2B2]
	0x033CE19C STR X31, [X31 + 0x18]
	0x033CE1A0 STR X31, [X31 + 0x8]
	0x033CE1A4 CBZ X20, 0x33CE248
	0x033CE1A8 CBZ X19, 0x33CE268
	0x033CE1AC ADRP X22, 0xD5E000
	0x033CE1B0 LDR X22, [X22 + 0xB80]
	0x033CE1B4 LDR X0, [X22]
	0x033CE1B8 BL 0x1C16D0C
	0x033CE1BC LDR X21, [X0]
	0x033CE1C0 CBZ X21, 0x33CE1E0
	0x033CE1C4 LDR X0, [X21 + 0x10]
	0x033CE1C8 LDR W2, [X21 + 0x18]
	0x033CE1CC MOV W1, W31
	0x033CE1D0 MOV X3, X31
	0x033CE1D4 BL 0x339FA34
	0x033CE1D8 STR W31, [X21 + 0x18]
	0x033CE1DC B 0x33CE20C
	0x033CE1E0 ADRP X8, 0xD5E000
	0x033CE1E4 LDR X8, [X8 + 0xB78]
	0x033CE1E8 LDR X0, [X8]
	0x033CE1EC BL 0x1C16F10
	0x033CE1F0 MOV X21, X0
	0x033CE1F4 BL 0x33D1994
	0x033CE1F8 LDR X0, [X22]
	0x033CE1FC BL 0x1C16D0C
	0x033CE200 STR X21, [X0]
	0x033CE204 LDR X0, [X22]
	0x033CE208 BL 0x1C16D0C
	0x033CE20C ADD X1, X31, 0x4
	0x033CE210 ADD X4, X31, 0x18
	0x033CE214 ADD X5, X31, 0x8
	0x033CE218 MOV X0, X20
	0x033CE21C MOV X2, X19
	0x033CE220 MOV X3, X21
	0x033CE224 STR X31, [X31 + 0x18]
	0x033CE228 STR X31, [X31 + 0x8]
	0x033CE22C STR W31, [X31 + 0x4]
	0x033CE230 BL 0x33D1A0C
	0x033CE234 LDP X20, X19, [X31 + 0x30]
	0x033CE238 LDP X22, X21, [X31 + 0x20]
	0x033CE23C LDR X30, [X31 + 0x10]
	0x033CE240 ADD X31, X31, 0x40
	0x033CE244 RET
	0x033CE248 ADRP X0, 0xD2A000
	0x033CE24C LDR X0, [X0 + 0x528]
	0x033CE250 BL 0x1C16D08
	0x033CE254 BL 0x1C16F10
	0x033CE258 MOV X19, X0
	0x033CE25C ADRP X0, 0xD54000
	0x033CE260 LDR X0, [X0 + 0xA0]
	0x033CE264 B 0x33CE284
	0x033CE268 ADRP X0, 0xD2A000
	0x033CE26C LDR X0, [X0 + 0x528]
	0x033CE270 BL 0x1C16D08
	0x033CE274 BL 0x1C16F10
	0x033CE278 MOV X19, X0
	0x033CE27C ADRP X0, 0xD54000
	0x033CE280 LDR X0, [X0 + 0x88]
	0x033CE284 BL 0x1C16D08
	0x033CE288 MOV X1, X0
	0x033CE28C MOV X0, X19
	0x033CE290 MOV X2, X31
	0x033CE294 BL 0x330E100
	0x033CE298 ADRP X0, 0xD5E000
	0x033CE29C LDR X0, [X0 + 0xB88]
	0x033CE2A0 BL 0x1C16D08
	0x033CE2A4 MOV X1, X0
	0x033CE2A8 MOV X0, X19
	0x033CE2AC BL 0x1C16DEC
	0x033CE2B0 STR X30, [X31 - 0x20]!
	0x033CE2B4 STP X20, X19, [X31 + 0x10]
	0x033CE2B8 LDRB W8, [X0 + 0xA0]
	0x033CE2BC MOV X19, X0
	0x033CE2C0 MOV W20, W1
	0x033CE2C4 CBNZ W8, 0x33CE2D0
	0x033CE2C8 MOV X0, X19
	0x033CE2CC BL 0x33CCEF0
	0x033CE2D0 LDR X1, [X19 + 0xD8]
	0x033CE2D4 MOV X0, X19
	0x033CE2D8 MOV W2, W20
	0x033CE2DC BL 0x33CE000
	0x033CE2E0 STR W20, [X19 + 0xD0]
	0x033CE2E4 LDP X20, X19, [X31 + 0x10]
	0x033CE2E8 LDR X30, [X31], #0x20
	0x033CE2EC RET
	0x033CE2F0 STP X30, X21, [X31 - 0x20]!
	0x033CE2F4 STP X20, X19, [X31 + 0x10]
	0x033CE2F8 ADRP X21, 0x100F000
	0x033CE2FC LDRB W8, [X21 + 0x2A8]
	0x033CE300 MOV W19, W1
	0x033CE304 MOV X20, X0
	0x033CE308 TBNZ X8, 0x0, 0x33CE320
	0x033CE30C ADRP X0, 0xD2E000
	0x033CE310 LDR X0, [X0 + 0x8D8]
	0x033CE314 BL 0x1C16CF4
	0x033CE318 MOVZ W8, 0x1
	0x033CE31C STRB W8, [X21 + 0x2A8]
	0x033CE320 LDR X21, [X20 + 0x80]
	0x033CE324 CBZ X21, 0x33CE348
	0x033CE328 LDR W9, [X20 + 0x8C]
	0x033CE32C LDR W8, [X21 + 0x18]
	0x033CE330 CMP W9, W8
	0x033CE334 B.GE 0x33CE364
	0x033CE338 LDR W8, [X20 + 0x8C]
	0x033CE33C ADD W9, W8, 0x1
	0x033CE340 STR W9, [X20 + 0x8C]
	0x033CE344 B 0x33CE3B4
	0x033CE348 ADRP X8, 0xD2E000
	0x033CE34C LDR X8, [X8 + 0x8D8]
	0x033CE350 MOVZ W1, 0x400
	0x033CE354 LDR X0, [X8]
	0x033CE358 BL 0x1C16D6C
	0x033CE35C MOV X21, X0
	0x033CE360 B 0x33CE3A0
	0x033CE364 ADRP X9, 0xD2E000
	0x033CE368 LDR X9, [X9 + 0x8D8]
	0x033CE36C UBFM W1, W8, 0x1F, 0x1E
	0x033CE370 LDR X0, [X9]
	0x033CE374 BL 0x1C16D6C
	0x033CE378 LDR X8, [X20 + 0x80]
	0x033CE37C CBZ X8, 0x33CE3D4
	0x033CE380 LDR W4, [X8 + 0x18]
	0x033CE384 MOV X21, X0
	0x033CE388 MOV X0, X8
	0x033CE38C MOV W1, W31
	0x033CE390 MOV X2, X21
	0x033CE394 MOV W3, W31
	0x033CE398 MOV X5, X31
	0x033CE39C BL 0x33A8A9C
	0x033CE3A0 LDR W8, [X20 + 0x8C]
	0x033CE3A4 STR X21, [X20 + 0x80]
	0x033CE3A8 ADD W9, W8, 0x1
	0x033CE3AC STR W9, [X20 + 0x8C]
	0x033CE3B0 CBZ X21, 0x33CE3D4
	0x033CE3B4 LDR W9, [X21 + 0x18]
	0x033CE3B8 CMP W8, W9
	0x033CE3BC B.CS 0x33CE3D8
	0x033CE3C0 ADD X8, X21, W8, 0x1, SXTW
	0x033CE3C4 STRH W19, [X8 + 0x20]
	0x033CE3C8 LDP X20, X19, [X31 + 0x10]
	0x033CE3CC LDP X30, X21, [X31], #0x20
	0x033CE3D0 RET
	0x033CE3D4 BL 0x1C16F20
	0x033CE3D8 BL 0x1C16F28
	0x033CE3DC STP X30, X21, [X31 - 0x20]!
	0x033CE3E0 STP X20, X19, [X31 + 0x10]
	0x033CE3E4 ADRP X21, 0x100F000
	0x033CE3E8 ADRP X20, 0xD59000
	0x033CE3EC LDRB W8, [X21 + 0x2A7]
	0x033CE3F0 LDR X20, [X20 + 0x7C0]
	0x033CE3F4 MOV X19, X0
	0x033CE3F8 TBNZ X8, 0x0, 0x33CE410
	0x033CE3FC ADRP X0, 0xD59000
	0x033CE400 LDR X0, [X0 + 0x7C0]
	0x033CE404 BL 0x1C16CF4
	0x033CE408 MOVZ W8, 0x1
	0x033CE40C STRB W8, [X21 + 0x2A7]
	0x033CE410 LDR X0, [X20]
	0x033CE414 LDR W8, [X0 + 0xE0]
	0x033CE418 CBNZ W8, 0x33CE424
	0x033CE41C BL 0x1C16DFC
	0x033CE420 LDR X0, [X20]
	0x033CE424 LDR X8, [X0 + 0xB8]
	0x033CE428 LDR X9, [X8]
	0x033CE42C CBZ X9, 0x33CE4E4
	0x033CE430 LDR W9, [X0 + 0xE0]
	0x033CE434 CBNZ W9, 0x33CE444
	0x033CE438 BL 0x1C16DFC
	0x033CE43C LDR X0, [X20]
	0x033CE440 LDR X8, [X0 + 0xB8]
	0x033CE444 LDR X9, [X8]
	0x033CE448 LDR W8, [X8 + 0x8]
	0x033CE44C LDR W9, [X9]
	0x033CE450 CMP W8, W9
	0x033CE454 B.EQ 0x33CE4E4
	0x033CE458 LDR W8, [X0 + 0xE0]
	0x033CE45C CBNZ W8, 0x33CE468
	0x033CE460 BL 0x1C16DFC
	0x033CE464 LDR X0, [X20]
	0x033CE468 LDR X8, [X0 + 0xB8]
	0x033CE46C LDR X9, [X8]
	0x033CE470 LDR W9, [X9]
	0x033CE474 ADDS W31, W9, 0x1
	0x033CE478 B.EQ 0x33CE4AC
	0x033CE47C LDR W9, [X0 + 0xE0]
	0x033CE480 CBNZ W9, 0x33CE490
	0x033CE484 BL 0x1C16DFC
	0x033CE488 LDR X8, [X20]
	0x033CE48C LDR X8, [X8 + 0xB8]
	0x033CE490 LDR X9, [X8]
	0x033CE494 LDR W9, [X9]
	0x033CE498 STR W9, [X8 + 0x8]
	0x033CE49C SBFM W8, W9, 0x10, 0x1F
	0x033CE4A0 AND W0, W9, 0xFFFF
	0x033CE4A4 STR W8, [X19 + 0x70]
	0x033CE4A8 B 0x33CE4D8
	0x033CE4AC LDR X0, [X19 + 0x10]
	0x033CE4B0 CBZ X0, 0x33CE4F8
	0x033CE4B4 MOV W1, W31
	0x033CE4B8 BL 0x33CD73C
	0x033CE4BC CBZ W0, 0x33CE4C4
	0x033CE4C0 STR W0, [X19 + 0x70]
	0x033CE4C4 LDR X0, [X19 + 0x10]
	0x033CE4C8 CBZ X0, 0x33CE4F8
	0x033CE4CC MOVZ W1, 0x2
	0x033CE4D0 BL 0x33CD73C
	0x033CE4D4 CBZ W0, 0x33CE4F0
	0x033CE4D8 STR W0, [X19 + 0x74]
	0x033CE4DC LDR W8, [X19 + 0x70]
	0x033CE4E0 STP W0, W8, [X19 + 0x78]
	0x033CE4E4 LDP X20, X19, [X31 + 0x10]
	0x033CE4E8 LDP X30, X21, [X31], #0x20
	0x033CE4EC RET
	0x033CE4F0 LDR W0, [X19 + 0x74]
	0x033CE4F4 B 0x33CE4DC
	0x033CE4F8 BL 0x1C16F20
	0x033CE4FC LDP W8, W9, [X0 + 0x88]
	0x033CE500 CMP W8, W9
	0x033CE504 B.LT 0x33CE50C
	0x033CE508 STR X31, [X0 + 0x88]
	0x033CE50C RET
	0x033CE510 SUB X31, X31, 0x50
	0x033CE514 STP X30, X23, [X31 + 0x20]
	0x033CE518 STP X22, X21, [X31 + 0x30]
	0x033CE51C STP X20, X19, [X31 + 0x40]
	0x033CE520 ADRP X20, 0x100F000
	0x033CE524 LDRB W8, [X20 + 0x2A9]
	0x033CE528 MOV W21, W1
	0x033CE52C MOV X19, X0
	0x033CE530 TBNZ X8, 0x0, 0x33CE554
	0x033CE534 ADRP X0, 0xD5D000
	0x033CE538 LDR X0, [X0 + 0x698]
	0x033CE53C BL 0x1C16CF4
	0x033CE540 ADRP X0, 0xD5E000
	0x033CE544 LDR X0, [X0 + 0xB90]
	0x033CE548 BL 0x1C16CF4
	0x033CE54C MOVZ W8, 0x1
	0x033CE550 STRB W8, [X20 + 0x2A9]
	0x033CE554 STR W31, [X31 + 0x1C]
	0x033CE558 LDP W8, W9, [X19 + 0x88]
	0x033CE55C CMP W8, W9
	0x033CE560 B.GE 0x33CE794
	0x033CE564 LDR X10, [X19 + 0x80]
	0x033CE568 CBZ X10, 0x33CE7C0
	0x033CE56C LDR W11, [X10 + 0x18]
	0x033CE570 CMP W8, W11
	0x033CE574 B.CS 0x33CE7C4
	0x033CE578 SXTW X11, W8
	0x033CE57C ADD X10, X10, X11, 0x1, LSL
	0x033CE580 LDRH W20, [X10 + 0x20]
	0x033CE584 TBZ X21, 0x0, 0x33CE6A4
	0x033CE588 LDR X0, [X19 + 0xF8]
	0x033CE58C CBZ X0, 0x33CE7C0
	0x033CE590 MOV W1, W20
	0x033CE594 BL 0x33CE7CC
	0x033CE598 TBZ X0, 0x0, 0x33CE6A0
	0x033CE59C LDR X0, [X19 + 0xF8]
	0x033CE5A0 CBZ X0, 0x33CE7C0
	0x033CE5A4 LDP W2, W8, [X19 + 0x88]
	0x033CE5A8 LDR X1, [X19 + 0x80]
	0x033CE5AC ADD X4, X31, 0x1C
	0x033CE5B0 SUB W3, W8, W2
	0x033CE5B4 BL 0x33CE854
	0x033CE5B8 ADDS W31, W0, 0x1
	0x033CE5BC B.EQ 0x33CE6E8
	0x033CE5C0 ADRP X23, 0xD5E000
	0x033CE5C4 LDR X22, [X19 + 0xF0]
	0x033CE5C8 LDR X23, [X23 + 0xB90]
	0x033CE5CC MOV W21, W0
	0x033CE5D0 ADD X1, X31, 0x10
	0x033CE5D4 STR W21, [X31 + 0x10]
	0x033CE5D8 LDR X0, [X23]
	0x033CE5DC BL 0x1C16E04
	0x033CE5E0 CBZ X22, 0x33CE7C0
	0x033CE5E4 LDR X8, [X22]
	0x033CE5E8 MOV X1, X0
	0x033CE5EC MOV X0, X22
	0x033CE5F0 LDR X9, [X8 + 0x2D8]
	0x033CE5F4 LDR X2, [X8 + 0x2E0]
	0x033CE5F8 BLR X9
	0x033CE5FC CBZ X0, 0x33CE7AC
	0x033CE600 LDR X0, [X23]
	0x033CE604 LDR X20, [X19 + 0xF0]
	0x033CE608 ADD X1, X31, 0x0
	0x033CE60C STR W21, [X31]
	0x033CE610 BL 0x1C16E04
	0x033CE614 CBZ X20, 0x33CE7C0
	0x033CE618 LDR X8, [X20]
	0x033CE61C MOV X1, X0
	0x033CE620 MOV X0, X20
	0x033CE624 LDR X9, [X8 + 0x2D8]
	0x033CE628 LDR X2, [X8 + 0x2E0]
	0x033CE62C BLR X9
	0x033CE630 CBZ X0, 0x33CE7C0
	0x033CE634 ADRP X20, 0xD5D000
	0x033CE638 LDR X20, [X20 + 0x698]
	0x033CE63C LDR X8, [X0]
	0x033CE640 LDR X1, [X20]
	0x033CE644 LDR X8, [X8 + 0x40]
	0x033CE648 LDR X9, [X1 + 0x40]
	0x033CE64C CMP X8, X9
	0x033CE650 B.NE 0x33CE7C8
	0x033CE654 BL 0x1C16E08
	0x033CE658 LDR X8, [X0]
	0x033CE65C LDR W9, [X0 + 0x8]
	0x033CE660 STR X8, [X31 + 0x10]
	0x033CE664 STR W9, [X31 + 0x18]
	0x033CE668 LDR W8, [X31 + 0x1C]
	0x033CE66C LDP W9, W10, [X19 + 0x88]
	0x033CE670 ADD W8, W8, W9
	0x033CE674 CMP W8, W10
	0x033CE678 STR W8, [X19 + 0x88]
	0x033CE67C B.LT 0x33CE684
	0x033CE680 STR X31, [X19 + 0x88]
	0x033CE684 LDR X8, [X31 + 0x10]
	0x033CE688 LDR W9, [X31 + 0x18]
	0x033CE68C LDR X0, [X20]
	0x033CE690 STR X8, [X31]
	0x033CE694 STR W9, [X31 + 0x8]
	0x033CE698 ADD X1, X31, 0x0
	0x033CE69C B 0x33CE6E0
	0x033CE6A0 LDP W8, W9, [X19 + 0x88]
	0x033CE6A4 ADD W8, W8, 0x1
	0x033CE6A8 CMP W8, W9

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x1011000
	009 Move W8, [X19+675]
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {65}
	015 Move X0, 0xD27000
	016 Move X0, [X0+1560]
	017 Call 0x1C17CF4
	018 Move X0, 0xD5B000
	019 Move X0, [X0+1976]
	020 Call 0x1C17CF4
	021 Move X0, 0xD2F000
	022 Move X0, [X0+2392]
	023 Call 0x1C17CF4
	024 Move X0, 0xD27000
	025 Move X0, [X0+1448]
	026 Call 0x1C17CF4
	027 Move X0, 0xD56000
	028 Move X0, [X0+3272]
	029 Call 0x1C17CF4
	030 Move X0, 0xD5B000
	031 Move X0, [X0+1984]
	032 Call 0x1C17CF4
	033 Move X0, 0xD60000
	034 Move X0, [X0+2776]
	035 Call 0x1C17CF4
	036 Move X0, 0xD60000
	037 Move X0, [X0+2784]
	038 Call 0x1C17CF4
	039 Move X0, 0xD60000
	040 Move X0, [X0+2792]
	041 Call 0x1C17CF4
	042 Move X0, 0xD60000
	043 Move X0, [X0+2800]
	044 Call 0x1C17CF4
	045 Move X0, 0xD60000
	046 Move X0, [X0+2808]
	047 Call 0x1C17CF4
	048 Move X0, 0xD60000
	049 Move X0, [X0+2816]
	050 Call 0x1C17CF4
	051 Move X0, 0xD60000
	052 Move X0, [X0+1984]
	053 Call 0x1C17CF4
	054 Move X0, 0xD60000
	055 Move X0, [X0+1992]
	056 Call 0x1C17CF4
	057 Move X0, 0xD60000
	058 Move X0, [X0+2824]
	059 Call 0x1C17CF4
	060 Move X0, 0xD60000
	061 Move X0, [X0+2832]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X19+675], W8
	065 Move W8, [X20+160]
	066 Compare W8, 0
	067 JumpIfNotEqual {395}
	068 Move X19, [X20+168]
	069 Move [X31+12], W31
	070 Add X1, X31, 12
	071 Move X0, X19
	072 Move X2, X31
	073 Call Monitor.Enter, X0, X1
	074 Move W8, [X20+160]
	075 Compare W8, 0
	076 JumpIfEqual {78}
	077 Move X21, X31
	078 Move X23, 0xD5A000
	079 Move X23, [X23+1976]
	080 Move X0, [X23]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Call ConsoleDriver.get_IsConsole
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {429}
	090 Move X0, [X23]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move W0, W31
	096 Call 0x1C887AC
	097 Move X0, [X20+16]
	098 Compare X0, 0
	099 JumpIfEqual {447}
	100 Move W1, 89
	101 Call TermInfoReader.Get, X0, X1
	102 Move X8, X0
	103 Move X0, [X20+16]
	104 Move [X20+144], X8
	105 Compare X0, 0
	106 JumpIfEqual {448}
	107 Move W1, 88
	108 Call TermInfoReader.Get, X0, X1
	109 Move X1, [X20+144]
	110 Move [X20+152], X0
	111 Compare X1, 0
	112 JumpIfEqual {122}
	113 Move X0, X20
	114 Call TermInfoDriver.WriteConsole, X0, X1
	115 Move X1, [X20+152]
	116 Compare X1, 0
	117 JumpIfEqual {122}
	118 Move X0, X31
	119 Move X2, X31
	120 Call String.Concat, X0, X1
	121 Move X21, X0
	122 Move X21, X31
	123 Move X0, [X20+16]
	124 Compare X0, 0
	125 JumpIfEqual {449}
	126 Move W1, 297
	127 Call TermInfoReader.Get, X0, X1
	128 Move X8, X0
	129 Move X0, [X20+16]
	130 Move [X20+184], X8
	131 Compare X0, 0
	132 JumpIfEqual {450}
	133 Move W1, 298
	134 Call TermInfoReader.Get, X0, X1
	135 Move X8, X0
	136 Move X0, [X20+16]
	137 Move [X20+192], X8
	138 Compare X0, 0
	139 JumpIfEqual {451}
	140 Move W1, 359
	141 Call TermInfoReader.Get, X0, X1
	142 Move X8, X0
	143 Move X0, [X20+16]
	144 Move [X20+216], X8
	145 Compare X0, 0
	146 JumpIfEqual {452}
	147 Move W1, 360
	148 Call TermInfoReader.Get, X0, X1
	149 Move X8, X0
	150 Move X0, [X20+16]
	151 Move [X20+224], X8
	152 Compare X0, 0
	153 JumpIfEqual {453}
	154 Move W1, 13
	155 Call TermInfoReader.Get, X0, X1
	156 Move [X20+232], W0
	157 Move X8, 0xD26000
	158 Move X8, [X8+1448]
	159 Move W22, W0
	160 Move X0, [X8]
	161 Move W8, [X0+224]
	162 Compare W8, 0
	163 JumpIfNotEqual {165}
	164 Call 0x1C17DFC
	165 Move W1, 16
	166 Move W0, W22
	167 Move X2, X31
	168 Call Math.Min, X0, X1
	169 Move W1, 1
	170 Move X2, X31
	171 Call Math.Max, X0, X1
	172 Move X8, [X20+192]
	173 Move W9, 192
	174 Move [X20+232], W0
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move W8, 184
	177 NotImplemented "Instruction CSEL not yet implemented."
	178 Move X1, [X20]
	179 Compare X1, 0
	180 JumpIfEqual {185}
	181 Move X0, X21
	182 Move X2, X31
	183 Call String.Concat, X0, X1
	184 Move X21, X0
	185 Move X24, 0xD5A000
	186 Move X24, [X24+1984]
	187 Move X22, [X20+144]
	188 Move X0, [X24]
	189 Move W8, [X0+224]
	190 Compare W8, 0
	191 JumpIfNotEqual {193}
	192 Call 0x1C17DFC
	193 Move X0, [X23]
	194 Move W8, [X0+224]
	195 Compare W8, 0
	196 JumpIfNotEqual {198}
	197 Call 0x1C17DFC
	198 Move X8, [X24]
	199 Add X23, X20, 264
	200 Move X3, [X8+184]
	201 Move X0, X22
	202 Move X1, X21
	203 Move X2, X23
	204 Call 0x1C8866C
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfEqual {223}
	209 Move X8, 0xD26000
	210 Move X8, [X8+1560]
	211 Move X0, [X8]
	212 Move W1, 17
	213 Call 0x1C17D6C
	214 Move [X23], X0
	215 Move X0, [X24]
	216 Move W8, [X0+224]
	217 Compare W8, 0
	218 JumpIfNotEqual {221}
	219 Call 0x1C17DFC
	220 Move X0, [X24]
	221 Move X8, [X0+184]
	222 Move [X8], X31
	223 Move X22, 0xD2E000
	224 Move X22, [X22+2392]
	225 Move X0, [X22]
	226 Move W8, [X0+224]
	227 Compare W8, 0
	228 JumpIfNotEqual {230}
	229 Call 0x1C17DFC
	230 Move W0, W31
	231 Call Console.OpenStandardInput, X0
	232 Move X23, 0x1010000
	233 Move W8, [X23+730]
	234 Move X21, X0
	235 Compare W8, 0
	236 JumpIfNotEqual {242}
	237 Move X0, 0xD2E000
	238 Move X0, [X0+2392]
	239 Call 0x1C17CF4
	240 Move W8, 1
	241 Move [X23+730], W8
	242 Move X0, [X22]
	243 Move W8, [X0+224]
	244 Compare W8, 0
	245 JumpIfNotEqual {248}
	246 Call 0x1C17DFC
	247 Move X0, [X22]
	248 Move X9, 0xD55000
	249 Move X8, [X0+184]
	250 Move X9, [X9+3272]
	251 Move X23, [X8+32]
	252 Move X0, [X9]
	253 Call 0x1C17F10
	254 Move X22, X0
	255 Move X1, X21
	256 Move X2, X23
	257 Move X3, X31
	258 Call StreamReader..ctor, X0, X1, X2
	259 Move X0, [X20+16]
	260 Move [X20+96], X22
	261 Compare X0, 0
	262 JumpIfEqual {454}
	263 Move W1, 5
	264 Call TermInfoReader.Get, X0, X1
	265 Move X8, X0
	266 Move X0, [X20+16]
	267 Move [X20+72], X8
	268 Compare X0, 0
	269 JumpIfEqual {455}
	270 Move W1, 1
	271 Call TermInfoReader.Get, X0, X1
	272 Move X8, [X20+72]
	273 Move [X20+80], X0
	274 Compare X8, 0
	275 JumpIfNotEqual {293}
	276 Move X0, [X20+16]
	277 Compare X0, 0
	278 JumpIfEqual {459}
	279 Move W1, 12
	280 Call TermInfoReader.Get, X0, X1
	281 Move X21, X0
	282 Move X0, [X20+16]
	283 Move [X20+72], X21
	284 Compare X0, 0
	285 JumpIfEqual {460}
	286 Move W1, 7
	287 Call TermInfoReader.Get, X0, X1
	288 Move X1, X0
	289 Move X0, X21
	290 Move X2, X31
	291 Call String.Concat, X0, X1
	292 Move [X20+72], X0
	293 Move X0, [X20+16]
	294 Compare X0, 0
	295 JumpIfEqual {456}
	296 Move W1, 16
	297 Call TermInfoReader.Get, X0, X1
	298 Move [X20+56], X0
	299 Compare X0, 0
	300 JumpIfNotEqual {307}
	301 Move X0, [X20+16]
	302 Compare X0, 0
	303 JumpIfEqual {461}
	304 Move W1, 20
	305 Call TermInfoReader.Get, X0, X1
	306 Move [X20+56], X0
	307 Move X0, [X20+16]
	308 Compare X0, 0
	309 JumpIfEqual {457}
	310 Move W1, 13
	311 Call TermInfoReader.Get, X0, X1
	312 Move [X20+64], X0
	313 Move X8, 0xD5F000
	314 Move X0, [X20+88]
	315 Move X8, [X8+2832]
	316 Move X1, [X8]
	317 Move X2, X31
	318 Call String.op_Equality, X0, X1
	319 Move TEMP, X0
	320 And TEMP, TEMP, 1
	321 Compare TEMP, 1
	322 JumpIfEqual {365}
	323 Move X8, 0xD5F000
	324 Move X0, [X20+88]
	325 Move X8, [X8+1992]
	326 Move X1, [X8]
	327 Move X2, X31
	328 Call String.op_Equality, X0, X1
	329 Move TEMP, X0
	330 And TEMP, TEMP, 1
	331 Compare TEMP, 1
	332 JumpIfEqual {365}
	333 Move X0, [X20+88]
	334 Compare X0, 0
	335 JumpIfEqual {346}
	336 Move X8, 0xD5F000
	337 Move X8, [X8+1984]
	338 Move X1, [X8]
	339 Move X2, X31
	340 Call String.StartsWith, X0, X1
	341 Move TEMP, X0
	342 And TEMP, TEMP, 1
	343 Compare TEMP, 1
	344 JumpIfEqual {365}
	345 Move X0, [X20+88]
	346 Move X8, 0xD5F000
	347 Move X8, [X8+2824]
	348 Move X1, [X8]
	349 Move X2, X31
	350 Call String.op_Equality, X0, X1
	351 Move TEMP, X0
	352 And TEMP, TEMP, 1
	353 Compare TEMP, 1
	354 JumpIfEqual {365}
	355 Move X8, 0xD5F000
	356 Move X0, [X20+88]
	357 Move X8, [X8+2800]
	358 Move X1, [X8]
	359 Move X2, X31
	360 Call String.op_Equality, X0, X1
	361 Move TEMP, X0
	362 And TEMP, TEMP, 1
	363 Compare TEMP, 1
	364 JumpIfNotEqual {403}
	365 Move X8, 0xD5F000
	366 Move X8, [X8+2776]
	367 Move X8, [X8]
	368 Move [X20+40], X8
	369 Move X0, [X20+16]
	370 Compare X0, 0
	371 JumpIfEqual {458}
	372 Move W1, 10
	373 Call TermInfoReader.Get, X0, X1
	374 Move [X20+200], X0
	375 Move X0, X20
	376 Call TermInfoDriver.GetCursorPosition, X0
	377 Move W8, [X20+236]
	378 Compare W8, 0
	379 JumpIfEqual {384}
	380 Move X1, [X20+72]
	381 Move X0, X20
	382 Call TermInfoDriver.WriteConsole, X0, X1
	383 Move [X20+24], X31
	384 Move W8, 1
	385 Move X21, X31
	386 Move [X20+160], W8
	387 Move W8, [X31+12]
	388 Compare W8, 0
	389 JumpIfEqual {393}
	390 Move X0, X19
	391 Move X1, X31
	392 Call Monitor.Exit, X0
	393 Compare X21, 0
	394 JumpIfNotEqual {427}
	395 Move X20, [X31+48]
	396 Move X19, [X31+56]
	397 Move X22, [X31+32]
	398 Move X21, [X31+40]
	399 Move X24, [X31+16]
	400 Move X23, [X31+24]
	401 Move X30, [X31+64]
	402 Return 
	403 Move X8, 0xD5F000
	404 Move X0, [X20+88]
	405 Move X8, [X8+2816]
	406 Move X1, [X8]
	407 Move X2, X31
	408 Call String.op_Equality, X0, X1
	409 Move TEMP, X0
	410 And TEMP, TEMP, 1
	411 Compare TEMP, 1
	412 JumpIfNotEqual {415}
	413 Move X8, 0xD5F000
	414 Move X8, [X8+2808]
	415 Move X8, 0xD5F000
	416 Move X0, [X20+88]
	417 Move X8, [X8+2784]
	418 Move X1, [X8]
	419 Move X2, X31
	420 Call String.op_Equality, X0, X1
	421 Move TEMP, X0
	422 And TEMP, TEMP, 1
	423 Compare TEMP, 1
	424 JumpIfNotEqual {369}
	425 Move X8, 0xD5F000
	426 Move X8, [X8+2792]
	427 Move X0, X21
	428 Call 0x1C17F18
	429 Move X0, 0xD54000
	430 Move X0, [X0+1960]
	431 Call 0x1C17D08
	432 Call 0x1C17F10
	433 Move X21, X0
	434 Move X0, 0xD5F000
	435 Move X0, [X0+2840]
	436 Call 0x1C17D08
	437 Move X1, X0
	438 Move X0, X21
	439 Move X2, X31
	440 Call IOException..ctor, X0, X1
	441 Move X0, 0xD5F000
	442 Move X0, [X0+2848]
	443 Call 0x1C17D08
	444 Move X1, X0
	445 Move X0, X21
	446 Call 0x1C17DEC
	447 Call 0x1C17F20
	448 Call 0x1C17F20
	449 Call 0x1C17F20
	450 Call 0x1C17F20
	451 Call 0x1C17F20
	452 Call 0x1C17F20
	453 Call 0x1C17F20
	454 Call 0x1C17F20
	455 Call 0x1C17F20
	456 Call 0x1C17F20
	457 Call 0x1C17F20
	458 Call 0x1C17F20
	459 Call 0x1C17F20
	460 Call 0x1C17F20
	461 Call 0x1C17F20
	462 Move X21, X0
	463 NotImplemented "Instruction CMP not yet implemented."
	464 Move W23, 1
	465 Move X0, X21
	466 Call 0x3EB2AD0
	467 Move X22, [X0]
	468 Call 0x3EB2AE0
	469 Move W8, 1
	470 Move [X20+160], W8
	471 Compare X22, 0
	472 JumpIfEqual {77}
	473 Move X0, X22
	474 Call 0x1C17F18
	475 Move [X20+160], W23
	476 NotImplemented "Instruction CMP not yet implemented."
	477 Move X0, X21
	478 Call 0x3EB2AD0
	479 Move X20, [X0]
	480 Call 0x3EB2AE0
	481 Move X21, X20
	482 Move X20, X31
	483 Move W8, 1
	484 Move [X20+160], W8
	485 Compare X22, 0
	486 JumpIfNotEqual {488}
	487 Move X21, X0
	488 Move X0, X22
	489 Call 0x1C17F18
	490 Move X21, X0
	491 Move W8, [X31+12]
	492 Compare W8, 0
	493 JumpIfEqual {497}
	494 Move X0, X19
	495 Move X1, X31
	496 Call Monitor.Exit, X0
	497 Compare X20, 0
	498 JumpIfNotEqual {501}
	499 Move X0, X21
	500 Call 0x1D2D690
	501 Move X0, X20
	502 Call 0x1C17F18
	503 Call 0x1991590
	504 Move X21, X0
	505 Move W23, 1

Method: System.Void IncrementX()

Disassembly:
	0x033CEA2C CBZ X0, 0x33CEBC8
	0x033CEA30 LDR X26, [X27]
	0x033CEA34 MOV X0, X25
	0x033CEA38 MOV X1, X26
	0x033CEA3C BL 0x1C16E00
	0x033CEA40 MOV X8, X0
	0x033CEA44 CBZ X0, 0x33CEBCC
	0x033CEA48 CMP W21, 0x1
	0x033CEA4C B.LT 0x33CE970
	0x033CEA50 LDR X9, [X8 + 0x18]
	0x033CEA54 SUBS W10, W9, 0x1
	0x033CEA58 B.LT 0x33CE970
	0x033CEA5C MOV W11, W31
	0x033CEA60 CMP W11, W9
	0x033CEA64 B.CS 0x33CEBBC
	0x033CEA68 CBZ X23, 0x33CEBC0
	0x033CEA6C LDR W13, [X23 + 0x18]
	0x033CEA70 ADD W12, W22, W11
	0x033CEA74 CMP W12, W13
	0x033CEA78 B.CS 0x33CEBC4
	0x033CEA7C ADD X13, X8, W11, SXTW
	0x033CEA80 ADD X12, X23, W12, 0x1, SXTW
	0x033CEA84 LDRB W13, [X13 + 0x20]
	0x033CEA88 LDRH W12, [X12 + 0x20]
	0x033CEA8C CMP W12, W13
	0x033CEA90 B.NE 0x33CE970
	0x033CEA94 CMP W10, W11

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+24]
	005 Move X19, X0
	006 Add W20, W8, 1
	007 Move [X0+24], W20
	008 Call TermInfoDriver.get_WindowWidth, X0
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W8, [X19+28]
	011 Move X0, X19
	012 Add W20, W8, 1
	013 Move [X19+24], W31
	014 Move [X19+28], W20
	015 Call TermInfoDriver.get_WindowHeight, X0
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W8, [X19+260]
	018 Add W31, W8, 1
	019 Subtract W8, W8, 1
	020 Move [X19+260], W8
	021 Move W8, [X19+28]
	022 Subtract W8, W8, 1
	023 Move [X19+28], W8
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return 

Method: System.Void WriteSpecialKey(System.ConsoleKeyInfo key)

Disassembly:
	0x033CEAF0 BL 0x1C16E08
	0x033CEAF4 LDR W22, [X0]
	0x033CEAF8 MOV X21, X31
	0x033CEAFC MOVZ W23, 0x7
	0x033CEB00 ADRP X24, 0xD25000
	0x033CEB04 LDR X24, [X24 + 0xE00]
	0x033CEB08 MOV X0, X20
	0x033CEB0C LDR X1, [X24]
	0x033CEB10 BL 0x1C16E00
	0x033CEB14 CBZ X0, 0x33CEB74
	0x033CEB18 LDR X8, [X0]
	0x033CEB1C LDR X1, [X24]
	0x033CEB20 MOV X20, X0
	0x033CEB24 LDRH W9, [X8 + 0x12E]
	0x033CEB28 CBZ X9, 0x33CEB4C
	0x033CEB2C LDR X10, [X8 + 0xB0]
	0x033CEB30 ADD X10, X10, 0x8
	0x033CEB34 LDUR X11, [X10 - 0x8]
	0x033CEB38 CMP X11, X1
	0x033CEB3C B.EQ 0x33CEB5C
	0x033CEB40 SUBS X9, X9, 0x1
	0x033CEB44 ADD X10, X10, 0x10
	0x033CEB48 B.NE 0x33CEB34
	0x033CEB4C MOV X0, X20
	0x033CEB50 MOV W2, W31
	0x033CEB54 BL 0x1C5C788
	0x033CEB58 B 0x33CEB68
	0x033CEB5C LDRSW X9, [X10]
	0x033CEB60 ADD X8, X8, X9, 0x4, LSL
	0x033CEB64 ADD X0, X8, 0x138
	0x033CEB68 LDP X8, X1, [X0]
	0x033CEB6C MOV X0, X20
	0x033CEB70 BLR X8
	0x033CEB74 CBNZ X21, 0x33CEBE0
	0x033CEB78 ORR W8, W23, 0x8
	0x033CEB7C CMP W8, 0x8
	0x033CEB80 B.NE 0x33CEB8C
	0x033CEB84 MOVN W22, 0x0
	0x033CEB88 STR W31, [X19]
	0x033CEB8C MOV W0, W22
	0x033CEB90 LDP X20, X19, [X31 + 0x50]
	0x033CEB94 LDP X22, X21, [X31 + 0x40]
	0x033CEB98 LDP X24, X23, [X31 + 0x30]
	0x033CEB9C LDP X26, X25, [X31 + 0x20]
	0x033CEBA0 LDP X28, X27, [X31 + 0x10]
	0x033CEBA4 LDP X29, X30, [X31], #0x60
	0x033CEBA8 RET
	0x033CEBAC MOV X21, X31
	0x033CEBB0 MOV W22, W31
	0x033CEBB4 MOVZ W23, 0x8
	0x033CEBB8 B 0x33CEB00
	0x033CEBBC BL 0x1C16F28
	0x033CEBC0 BL 0x1C16F20
	0x033CEBC4 BL 0x1C16F28
	0x033CEBC8 BL 0x1C16F20
	0x033CEBCC MOV X0, X25
	0x033CEBD0 MOV X1, X26
	0x033CEBD4 BL 0x1C171E0
	0x033CEBD8 BL 0x1C16F20
	0x033CEBDC BL 0x1C16F20
	0x033CEBE0 MOV X0, X21
	0x033CEBE4 BL 0x1C16F18
	0x033CEBE8 BL 0x1C16F20
	0x033CEBEC BL 0x1C16F20
	0x033CEBF0 BL 0x1C171E0
	0x033CEBF4 B 0x33CEC18
	0x033CEBF8 B 0x33CEC18
	0x033CEBFC B 0x33CEC18
	0x033CEC00 B 0x33CEC18

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1010000
	006 Move W8, [X21+676]
	007 Move X19, X0
	008 Move X20, X1
	009 ShiftRight X20, 32
	010 And X20, X20, 0x7FFFFFFF
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xD26000
	016 Move X0, [X0+3544]
	017 Call 0x1C17CF4
	018 Move X0, 0xD52000
	019 Move X0, [X0+184]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+676], W8
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W8, [X19+24]
	027 Subtract W1, W8, 1
	028 Move W9, [X19+256]
	029 Move W2, [X19+28]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W8, [X19+260]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X19
	034 Move [X19+24], W1
	035 Call TermInfoDriver.SetCursorPosition, X0, X1, X2
	036 Move X8, 0xD26000
	037 Move X8, [X8+3544]
	038 Move X0, X19
	039 Move X1, [X8]
	040 Call TermInfoDriver.WriteConsole, X0, X1
	041 Move W1, [X19+24]
	042 Move W2, [X19+28]
	043 Move X0, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Move X1, [X19+72]
	049 Move X0, X19
	050 Call TermInfoDriver.WriteConsole, X0, X1
	051 Move [X19+24], X31
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return 
	057 Move W8, [X19+24]
	058 Add W9, W8, 7
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CSEL not yet implemented."
	061 And W9, W9, 0xFFFFFFF8
	062 Subtract W8, W8, W9
	063 Subtract W20, W8, 8
	064 Move X0, X19
	065 Call TermInfoDriver.IncrementX, X0
	066 Add W20, W20, 1
	067 Move X8, 0xD52000
	068 Move X8, [X8+184]
	069 Move X0, X19
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X1, [X8]
	073 Move X30, [X31+32]
	074 Move X21, [X31+40]
	075 Call TermInfoDriver.WriteConsole, X0, X1
	076 Return 

Method: System.Void WriteSpecialKey(System.Char c)

Disassembly:
	0x033CEDA8 BL 0x1C16DFC
	0x033CEDAC MOV W0, W31
	0x033CEDB0 BL 0x1C87668
	0x033CEDB4 CMP W0, 0x0
	0x033CEDB8 B.GT 0x33CED7C
	0x033CEDBC B 0x33CEE3C
	0x033CEDC0 LDR X0, [X20 + 0x60]
	0x033CEDC4 CBZ X0, 0x33CEE98
	0x033CEDC8 MOV X1, X31
	0x033CEDCC BL 0x32E7D04

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 And W1, W1, 0xFFFF
	004 Move W2, W31
	005 Move X19, X0
	006 Call TermInfoDriver.CreateKeyInfoFromInt, X0, X1, X2
	007 And X2, X1, 0
	008 Move X1, X0
	009 Move X0, X19
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Call TermInfoDriver.WriteSpecialKey, X0, X1
	013 Return 

Method: System.Boolean IsSpecialKey(System.ConsoleKeyInfo key)

Disassembly:
	0x033CEF54 CMP W8, 0x1
	0x033CEF58 B.LT 0x33CEF8C
	0x033CEF5C MOV X21, X31
	0x033CEF60 AND X8, X8, 0x0
	0x033CEF64 ADD X22, X20, 0x20
	0x033CEF68 CMP X21, W8, UXTW
	0x033CEF6C B.CS 0x33CF000
	0x033CEF70 LDR W1, [X22, X21, LSL #2]
	0x033CEF74 MOV X0, X19
	0x033CEF78 BL 0x33D1640
	0x033CEF7C LDR W8, [X20 + 0x18]
	0x033CEF80 ADD X21, X21, 0x1
	0x033CEF84 CMP X21, W8, SXTW
	0x033CEF88 B.LT 0x33CEF68
	0x033CEF8C ADRP X8, 0xD25000
	0x033CEF90 LDR X20, [X19 + 0xF8]
	0x033CEF94 LDR X8, [X8 + 0x618]
	0x033CEF98 MOVZ W1, 0x1
	0x033CEF9C LDR X0, [X8]
	0x033CEFA0 BL 0x1C16D6C
	0x033CEFA4 LDR X8, [X19 + 0x108]
	0x033CEFA8 CBZ X8, 0x33CF004
	0x033CEFAC LDR W9, [X8 + 0x18]
	0x033CEFB0 CMP W9, 0x2
	0x033CEFB4 B.LS 0x33CF000
	0x033CEFB8 MOV X2, X0
	0x033CEFBC CBZ X0, 0x33CF004
	0x033CEFC0 LDR W9, [X2 + 0x18]
	0x033CEFC4 CBZ W9, 0x33CF000
	0x033CEFC8 LDRB W8, [X8 + 0x22]
	0x033CEFCC STRB W8, [X2 + 0x20]
	0x033CEFD0 CBZ X20, 0x33CF004
	0x033CEFD4 MOVZ W1, 0x37

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+160]
	005 Compare W8, 0
	006 JumpIfEqual {30}
	007 Move X8, X1
	008 ShiftRight X8, 32
	009 And X8, X8, 0x7FFFFFFF
	010 Subtract W9, W8, 8
	011 Move X19, X0
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move W0, 1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move W8, [X19+28]
	017 Move X0, X19
	018 Add W20, W8, 1
	019 Move [X19+24], W31
	020 Move [X19+28], W20
	021 Call TermInfoDriver.get_WindowHeight, X0
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move W0, W31
	024 Move W8, [X19+28]
	025 Move W0, W31
	026 Subtract W8, W8, 1
	027 Move [X19+28], W8
	028 Move X0, X19
	029 Call TermInfoDriver.IncrementX, X0
	030 Move W0, W31
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0

Method: System.Boolean IsSpecialKey(System.Char c)

Disassembly:
	0x033CEFD8 MOV X0, X20
	0x033CEFDC BL 0x33D168C
	0x033CEFE0 LDR X8, [X19 + 0xF8]
	0x033CEFE4 CBZ X8, 0x33CF004
	0x033CEFE8 MOVZ W8, 0x1
	0x033CEFEC STRB W8, [X19 + 0xB0]
	0x033CEFF0 LDP X20, X19, [X31 + 0x20]
	0x033CEFF4 LDP X22, X21, [X31 + 0x10]
	0x033CEFF8 LDR X30, [X31], #0x30
	0x033CEFFC RET

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 And W1, W1, 0xFFFF
	004 Move W2, W31
	005 Move X19, X0
	006 Call TermInfoDriver.CreateKeyInfoFromInt, X0, X1, X2
	007 And X2, X1, 0
	008 Move X1, X0
	009 Move X0, X19
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Call TermInfoDriver.IsSpecialKey, X0, X1
	013 Return X0

Method: System.Void ChangeColor(System.String format, System.ConsoleColor color)

Disassembly:
	0x033CF000 BL 0x1C16F28
	0x033CF004 BL 0x1C16F20
	0x033CF008 STR X30, [X31 - 0x10]!
	0x033CF00C LDP W8, W9, [X0 + 0x88]
	0x033CF010 CMP W8, W9
	0x033CF014 B.GE 0x33CF024
	0x033CF018 MOVZ W0, 0x1
	0x033CF01C LDR X30, [X31], #0x10
	0x033CF020 RET
	0x033CF024 LDR X0, [X0 + 0x60]
	0x033CF028 CBZ X0, 0x33CF038
	0x033CF02C MOV X1, X31
	0x033CF030 LDR X30, [X31], #0x10
	0x033CF034 B 0x32E7D04
	0x033CF038 BL 0x1C16F20
	0x033CF03C STP X30, X21, [X31 - 0x20]!
	0x033CF040 STP X20, X19, [X31 + 0x10]
	0x033CF044 ADRP X21, 0x100E000
	0x033CF048 LDRB W8, [X21 + 0x2AB]
	0x033CF04C MOV W20, W1
	0x033CF050 MOV X19, X0
	0x033CF054 TBNZ X8, 0x0, 0x33CF06C
	0x033CF058 ADRP X0, 0xD2D000
	0x033CF05C LDR X0, [X0 + 0x8D8]
	0x033CF060 BL 0x1C16CF4
	0x033CF064 MOVZ W8, 0x1
	0x033CF068 STRB W8, [X21 + 0x2AB]
	0x033CF06C LDR X0, [X19 + 0x110]
	0x033CF070 CBZ X0, 0x33CF084
	0x033CF074 LDR W8, [X19 + 0x118]
	0x033CF078 ADD W9, W8, 0x1
	0x033CF07C STR W9, [X19 + 0x118]
	0x033CF080 B 0x33CF0AC
	0x033CF084 ADRP X8, 0xD2D000
	0x033CF088 LDR X8, [X8 + 0x8D8]
	0x033CF08C MOVZ W1, 0x400
	0x033CF090 LDR X0, [X8]
	0x033CF094 BL 0x1C16D6C
	0x033CF098 LDR W8, [X19 + 0x118]
	0x033CF09C STR X0, [X19 + 0x110]
	0x033CF0A0 ADD W9, W8, 0x1
	0x033CF0A4 STR W9, [X19 + 0x118]
	0x033CF0A8 CBZ X0, 0x33CF0FC
	0x033CF0AC LDR W10, [X0 + 0x18]
	0x033CF0B0 CMP W8, W10
	0x033CF0B4 B.CS 0x33CF100
	0x033CF0B8 ADD X8, X0, W8, 0x1, SXTW
	0x033CF0BC CMP W9, W10
	0x033CF0C0 STRH W20, [X8 + 0x20]
	0x033CF0C4 B.EQ 0x33CF0D4
	0x033CF0C8 MOV X0, X19
	0x033CF0CC BL 0x33CF008
	0x033CF0D0 TBNZ X0, 0x0, 0x33CF0F0
	0x033CF0D4 LDR X0, [X19 + 0x68]
	0x033CF0D8 CBZ X0, 0x33CF0FC
	0x033CF0DC LDR W2, [X19 + 0x118]
	0x033CF0E0 LDR X1, [X19 + 0x110]
	0x033CF0E4 MOV X3, X31
	0x033CF0E8 BL 0x3300E94
	0x033CF0EC STR W31, [X19 + 0x118]
	0x033CF0F0 LDP X20, X19, [X31 + 0x10]
	0x033CF0F4 LDP X30, X21, [X31], #0x20
	0x033CF0F8 RET
	0x033CF0FC BL 0x1C16F20
	0x033CF100 BL 0x1C16F28
	0x033CF104 STP X30, X21, [X31 - 0x20]!
	0x033CF108 STP X20, X19, [X31 + 0x10]
	0x033CF10C AND X21, X2, 0x0
	0x033CF110 MOV X2, X21
	0x033CF114 MOV X19, X1
	0x033CF118 MOV X20, X0
	0x033CF11C BL 0x33CDF54
	0x033CF120 TBZ X0, 0x0, 0x33CF144
	0x033CF124 MOV X0, X20
	0x033CF128 BL 0x33CF158
	0x033CF12C MOV X0, X20
	0x033CF130 MOV X1, X19
	0x033CF134 LDP X20, X19, [X31 + 0x10]
	0x033CF138 MOV X2, X21
	0x033CF13C LDP X30, X21, [X31], #0x20
	0x033CF140 B 0x33CDAF0
	0x033CF144 MOV X0, X20
	0x033CF148 MOV W1, W19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x100F000
	007 Move W8, [X22+677]
	008 Move W21, W2
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xD5E000
	016 Move X0, [X0+2864]
	017 Call 0x1C17CF4
	018 Move X0, 0xD59000
	019 Move X0, [X0+1984]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+677], W8
	023 Move X0, X20
	024 Move X1, X31
	025 Call String.IsNullOrEmpty, X0
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {36}
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Return 
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X22, 0xD59000
	038 Move X22, [X22+1984]
	039 Move X0, [X22]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X22]
	045 Move X8, [X0+184]
	046 Move X8, [X8+24]
	047 Compare X8, 0
	048 JumpIfEqual {80}
	049 Move W9, [X8+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X9, 0xD5E000
	052 Add X8, X8, W21
	053 Move W21, [X19+232]
	054 Move X9, [X9+2864]
	055 Move W22, [X8+32]
	056 Move W1, 1
	057 Move X0, [X9]
	058 Call 0x1C17D6C
	059 Compare X0, 0
	060 JumpIfEqual {80}
	061 Move W8, [X0+24]
	062 Move X1, X0
	063 Compare W8, 0
	064 JumpIfEqual {81}
	065 NotImplemented "Instruction SDIV not yet implemented."
	066 NotImplemented "Instruction MSUB not yet implemented."
	067 Move X0, X20
	068 Move [X1+32], X8
	069 Move [X1+40], X31
	070 Call ParameterizedStrings.Evaluate, X0, X1
	071 Move X1, X0
	072 Move X0, X19
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+48]
	078 Call TermInfoDriver.WriteConsole, X0, X1
	079 Return 
	080 Call 0x1C17F20
	081 Call 0x1C17F28
	082 Move X0, 0xD2D000
	083 Move X0, [X0+1400]
	084 Call 0x1C17D08
	085 Call 0x1C17F10
	086 Move X19, X0
	087 Move X0, 0xD5E000
	088 Move X0, [X0+2920]
	089 Call 0x1C17D08
	090 Move X1, X0
	091 Move X0, X19
	092 Move X2, X31
	093 Call ArgumentException..ctor, X0, X1
	094 Move X0, 0xD5E000
	095 Move X0, [X0+2928]
	096 Call 0x1C17D08
	097 Move X1, X0
	098 Move X0, X19
	099 Call 0x1C17DEC

Method: System.Void set_ForegroundColor(System.ConsoleColor value)

Disassembly:
	0x033CF2B0 B 0x33CF2B8
	0x033CF2B4 CBZ X20, 0x33CF42C
	0x033CF2B8 MOV X0, X20
	0x033CF2BC MOV W1, W25
	0x033CF2C0 MOV X2, X31
	0x033CF2C4 BL 0x3233D30
	0x033CF2C8 B 0x33CF280
	0x033CF2CC LDR V0, [X19 + 0x18]
	0x033CF2D0 MOV W29, W31
	0x033CF2D4 MOV W28, W27
	0x033CF2D8 STP W23, W27, [X31 + 0x4]
	0x033CF2DC STR D0, [X19 + 0x100]
	0x033CF2E0 ADD X1, X31, 0xC
	0x033CF2E4 MOV X0, X19
	0x033CF2E8 BL 0x33CECE0
	0x033CF2EC LDRB W8, [X31 + 0xC]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+160]
	005 Move X19, X0
	006 Move W20, W1
	007 Compare W8, 0
	008 JumpIfNotEqual {11}
	009 Move X0, X19
	010 Call TermInfoDriver.Init, X0
	011 Move X1, [X19+216]
	012 Move X0, X19
	013 Move W2, W20
	014 Call TermInfoDriver.ChangeColor, X0, X1, X2
	015 Move [X19+208], W20
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Return 

Method: System.Void GetCursorPosition()

Disassembly:
	0x033CE79C LDP X22, X21, [X31 + 0x30]
	0x033CE7A0 LDP X30, X23, [X31 + 0x20]
	0x033CE7A4 ADD X31, X31, 0x50
	0x033CE7A8 RET
	0x033CE7AC LDP W8, W9, [X19 + 0x88]
	0x033CE7B0 ADD W8, W8, 0x1
	0x033CE7B4 B 0x33CE6A8
	0x033CE7B8 MOVZ W2, 0x1
	0x033CE7BC B 0x33CE6C0
	0x033CE7C0 BL 0x1C16F20
	0x033CE7C4 BL 0x1C16F28
	0x033CE7C8 BL 0x1C171E0
	0x033CE7CC STR X30, [X31 - 0x30]!
	0x033CE7D0 STP X22, X21, [X31 + 0x10]
	0x033CE7D4 STP X20, X19, [X31 + 0x20]
	0x033CE7D8 ADRP X22, 0x100F000
	0x033CE7DC ADRP X21, 0xD25000
	0x033CE7E0 LDRB W8, [X22 + 0x2CF]
	0x033CE7E4 LDR X21, [X21 + 0x758]
	0x033CE7E8 MOV W20, W1
	0x033CE7EC MOV X19, X0
	0x033CE7F0 TBNZ X8, 0x0, 0x33CE808
	0x033CE7F4 ADRP X0, 0xD25000
	0x033CE7F8 LDR X0, [X0 + 0x758]
	0x033CE7FC BL 0x1C16CF4
	0x033CE800 MOVZ W8, 0x1
	0x033CE804 STRB W8, [X22 + 0x2CF]
	0x033CE808 LDR X0, [X21]
	0x033CE80C LDR X19, [X19 + 0x18]
	0x033CE810 ADD X1, X31, 0xC
	0x033CE814 STR W20, [X31 + 0xC]
	0x033CE818 BL 0x1C16E04
	0x033CE81C CBZ X19, 0x33CE850
	0x033CE820 LDR X8, [X19]
	0x033CE824 MOV X1, X0
	0x033CE828 MOV X0, X19
	0x033CE82C LDR X9, [X8 + 0x2D8]
	0x033CE830 LDR X2, [X8 + 0x2E0]
	0x033CE834 BLR X9
	0x033CE838 LDP X20, X19, [X31 + 0x20]
	0x033CE83C LDP X22, X21, [X31 + 0x10]
	0x033CE840 CMP X0, 0x0
	0x033CE844 CSET W0, NE
	0x033CE848 LDR X30, [X31], #0x30
	0x033CE84C RET
	0x033CE850 BL 0x1C16F20
	0x033CE854 STP X29, X30, [X31 - 0x60]!
	0x033CE858 STP X28, X27, [X31 + 0x10]
	0x033CE85C STP X26, X25, [X31 + 0x20]
	0x033CE860 STP X24, X23, [X31 + 0x30]
	0x033CE864 STP X22, X21, [X31 + 0x40]
	0x033CE868 STP X20, X19, [X31 + 0x50]
	0x033CE86C ADRP X20, 0x100F000
	0x033CE870 LDRB W8, [X20 + 0x2D0]
	0x033CE874 MOV X19, X4
	0x033CE878 MOV W21, W3
	0x033CE87C MOV W22, W2
	0x033CE880 MOV X23, X1
	0x033CE884 MOV X24, X0
	0x033CE888 TBNZ X8, 0x0, 0x33CE8D0
	0x033CE88C ADRP X0, 0xD25000
	0x033CE890 LDR X0, [X0 + 0x618]
	0x033CE894 BL 0x1C16CF4
	0x033CE898 ADRP X0, 0xD25000
	0x033CE89C LDR X0, [X0 + 0xE00]
	0x033CE8A0 BL 0x1C16CF4
	0x033CE8A4 ADRP X0, 0xD2D000
	0x033CE8A8 LDR X0, [X0 + 0xDB8]
	0x033CE8AC BL 0x1C16CF4
	0x033CE8B0 ADRP X0, 0xD25000
	0x033CE8B4 LDR X0, [X0 + 0xE18]
	0x033CE8B8 BL 0x1C16CF4
	0x033CE8BC ADRP X0, 0xD5E000
	0x033CE8C0 LDR X0, [X0 + 0xB90]
	0x033CE8C4 BL 0x1C16CF4
	0x033CE8C8 MOVZ W8, 0x1
	0x033CE8CC STRB W8, [X20 + 0x2D0]
	0x033CE8D0 LDR X0, [X24 + 0x10]
	0x033CE8D4 CBZ X0, 0x33CEBD8
	0x033CE8D8 LDR X8, [X0]
	0x033CE8DC LDR X9, [X8 + 0x338]
	0x033CE8E0 LDR X1, [X8 + 0x340]
	0x033CE8E4 BLR X9
	0x033CE8E8 CBZ X0, 0x33CEBD8
	0x033CE8EC ADRP X10, 0xD2D000
	0x033CE8F0 LDR X8, [X0]
	0x033CE8F4 LDR X10, [X10 + 0xDB8]
	0x033CE8F8 MOV X20, X0
	0x033CE8FC LDRH W9, [X8 + 0x12E]
	0x033CE900 LDR X1, [X10]
	0x033CE904 CBZ X9, 0x33CE928
	0x033CE908 LDR X10, [X8 + 0xB0]
	0x033CE90C ADD X10, X10, 0x8
	0x033CE910 LDUR X11, [X10 - 0x8]
	0x033CE914 CMP X11, X1
	0x033CE918 B.EQ 0x33CE938
	0x033CE91C SUBS X9, X9, 0x1
	0x033CE920 ADD X10, X10, 0x10
	0x033CE924 B.NE 0x33CE910
	0x033CE928 MOV X0, X20
	0x033CE92C MOV W2, W31
	0x033CE930 BL 0x1C5C788
	0x033CE934 B 0x33CE944
	0x033CE938 LDRSW X9, [X10]
	0x033CE93C ADD X8, X8, X9, 0x4, LSL
	0x033CE940 ADD X0, X8, 0x138
	0x033CE944 LDP X8, X1, [X0]
	0x033CE948 MOV X0, X20
	0x033CE94C BLR X8
	0x033CE950 MOV X20, X0
	0x033CE954 CBZ X0, 0x33CEBDC
	0x033CE958 ADRP X28, 0xD5E000
	0x033CE95C ADRP X29, 0xD25000
	0x033CE960 ADRP X27, 0xD25000
	0x033CE964 LDR X28, [X28 + 0xB90]
	0x033CE968 LDR X29, [X29 + 0xE18]
	0x033CE96C LDR X27, [X27 + 0x618]
	0x033CE970 LDR X8, [X20]
	0x033CE974 LDR X1, [X29]
	0x033CE978 LDRH W9, [X8 + 0x12E]
	0x033CE97C CBZ X9, 0x33CE9A0
	0x033CE980 LDR X10, [X8 + 0xB0]
	0x033CE984 ADD X10, X10, 0x8
	0x033CE988 LDUR X11, [X10 - 0x8]
	0x033CE98C CMP X11, X1
	0x033CE990 B.EQ 0x33CE9B0
	0x033CE994 SUBS X9, X9, 0x1
	0x033CE998 ADD X10, X10, 0x10
	0x033CE99C B.NE 0x33CE988
	0x033CE9A0 MOV X0, X20
	0x033CE9A4 MOV W2, W31
	0x033CE9A8 BL 0x1C5C788
	0x033CE9AC B 0x33CE9BC
	0x033CE9B0 LDRSW X9, [X10]
	0x033CE9B4 ADD X8, X8, X9, 0x4, LSL
	0x033CE9B8 ADD X0, X8, 0x138
	0x033CE9BC LDP X8, X1, [X0]
	0x033CE9C0 MOV X0, X20
	0x033CE9C4 BLR X8
	0x033CE9C8 TBZ X0, 0x0, 0x33CEBAC
	0x033CE9CC LDR X8, [X20]
	0x033CE9D0 LDR X1, [X29]
	0x033CE9D4 LDRH W9, [X8 + 0x12E]
	0x033CE9D8 CBZ X9, 0x33CE9FC
	0x033CE9DC LDR X10, [X8 + 0xB0]
	0x033CE9E0 ADD X10, X10, 0x8
	0x033CE9E4 LDUR X11, [X10 - 0x8]
	0x033CE9E8 CMP X11, X1
	0x033CE9EC B.EQ 0x33CEA0C
	0x033CE9F0 SUBS X9, X9, 0x1
	0x033CE9F4 ADD X10, X10, 0x10
	0x033CE9F8 B.NE 0x33CE9E4
	0x033CE9FC MOVZ W2, 0x1
	0x033CEA00 MOV X0, X20
	0x033CEA04 BL 0x1C5C788
	0x033CEA08 B 0x33CEA1C
	0x033CEA0C LDR W9, [X10]
	0x033CEA10 ADD W9, W9, 0x1
	0x033CEA14 ADD X8, X8, W9, 0x4, SXTW
	0x033CEA18 ADD X0, X8, 0x138
	0x033CEA1C LDP X8, X1, [X0]
	0x033CEA20 MOV X0, X20
	0x033CEA24 BLR X8
	0x033CEA28 MOV X25, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1010000
	007 Move X20, 0xD5A000
	008 Move W8, [X21+678]
	009 Move X20, [X20+1976]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xD5A000
	016 Move X0, [X0+1976]
	017 Call 0x1C17CF4
	018 Move X0, 0xD5F000
	019 Move X0, [X0+2856]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+678], W8
	023 Move X0, [X20]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move W0, W31
	029 Call 0x1C88668
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Add W21, W0, 1
	032 Move X0, [X19+96]
	033 Compare X0, 0
	034 JumpIfEqual {182}
	035 Move X8, [X0]
	036 Move X9, [X8+456]
	037 Move X1, [X8+464]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move W1, W0
	040 Move X0, X19
	041 Call TermInfoDriver.AddToBuffer, X0, X1
	042 Subtract W21, W21, 1
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X8, 0xD5F000
	045 Move X8, [X8+2856]
	046 Move X0, X19
	047 Move X1, [X8]
	048 Call TermInfoDriver.WriteConsole, X0, X1
	049 Move X0, [X20]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move W0, 1000
	055 Call 0x1C88668
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, [X19+96]
	058 Compare X0, 0
	059 JumpIfEqual {182}
	060 Move X8, [X0]
	061 Move X9, [X8+456]
	062 Move X1, [X8+464]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move W1, W0
	066 Move X0, X19
	067 Call TermInfoDriver.AddToBuffer, X0, X1
	068 Move X0, [X20]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move W0, 100
	074 Call 0x1C88668
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X0, [X19+96]
	077 Compare X0, 0
	078 JumpIfEqual {182}
	079 Move X8, [X0]
	080 Move X9, [X8+456]
	081 Move X1, [X8+464]
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move W1, W0
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X0, [X19+96]
	086 Compare X0, 0
	087 JumpIfEqual {182}
	088 Move X8, [X0]
	089 Move X9, [X8+456]
	090 Move X1, [X8+464]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X0, [X19+96]
	094 Compare X0, 0
	095 JumpIfEqual {182}
	096 Move X8, [X0]
	097 Move X9, [X8+456]
	098 Move X1, [X8+464]
	099 NotImplemented "Instruction BLR not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move W21, W31
	102 Move W8, 1
	103 Move [X19+236], W8
	104 Move W20, W0
	105 Move W1, 27
	106 Move X0, X19
	107 Call TermInfoDriver.AddToBuffer, X0, X1
	108 Move X0, X19
	109 Move W1, W20
	110 Move X20, [X31+32]
	111 Move X19, [X31+40]
	112 Move X22, [X31+16]
	113 Move X21, [X31+24]
	114 Move X30, [X31+48]
	115 Call TermInfoDriver.AddToBuffer, X0, X1
	116 Return 
	117 Move W20, W0
	118 Move X0, [X19+96]
	119 Compare X0, 0
	120 JumpIfEqual {182}
	121 Move X8, [X0]
	122 Move X9, [X8+456]
	123 Move X1, [X8+464]
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Subtract W8, W0, 48
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move W21, 10
	128 Move X8, [X19+96]
	129 Compare X8, 0
	130 JumpIfEqual {182}
	131 Move X9, [X8]
	132 Move X10, [X9+456]
	133 Move X1, [X9+464]
	134 NotImplemented "Instruction MADD not yet implemented."
	135 Move X0, X8
	136 Subtract W20, W9, 480
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Subtract W8, W0, 48
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Subtract W21, W20, 49
	141 Move X0, [X19+96]
	142 Compare X0, 0
	143 JumpIfEqual {182}
	144 Move X8, [X0]
	145 Move X9, [X8+456]
	146 Move X1, [X8+464]
	147 NotImplemented "Instruction BLR not yet implemented."
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move W8, W31
	150 Move W20, W0
	151 Move X0, [X19+96]
	152 Compare X0, 0
	153 JumpIfEqual {182}
	154 Move X8, [X0]
	155 Move X9, [X8+456]
	156 Move X1, [X8+464]
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Subtract W8, W0, 48
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move W22, 10
	161 Move X8, [X19+96]
	162 Compare X8, 0
	163 JumpIfEqual {182}
	164 Move X9, [X8]
	165 Move X10, [X9+456]
	166 Move X1, [X9+464]
	167 NotImplemented "Instruction MADD not yet implemented."
	168 Move X0, X8
	169 Subtract W20, W9, 480
	170 NotImplemented "Instruction BLR not yet implemented."
	171 Subtract W8, W0, 48
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Subtract W8, W20, 49
	174 Move [X19+24], W8
	175 Move [X19+28], W21
	176 Move X20, [X31+32]
	177 Move X19, [X31+40]
	178 Move X22, [X31+16]
	179 Move X21, [X31+24]
	180 Move X30, [X31+48]
	181 Return 
	182 Call 0x1C17F20

Method: System.Void CheckWindowDimensions()

Disassembly:
	0x033CF3DC BL 0x323260C
	0x033CF3E0 CMP X23, W0, SXTW
	0x033CF3E4 B.GE 0x33CF428
	0x033CF3E8 MOV X0, X20
	0x033CF3EC MOV W1, W23
	0x033CF3F0 MOV X2, X31
	0x033CF3F4 BL 0x3232E88
	0x033CF3F8 CBZ X21, 0x33CF42C
	0x033CF3FC LDR W8, [X21 + 0x18]
	0x033CF400 ADD X9, X22, X23
	0x033CF404 CMP X9, X8
	0x033CF408 B.CS 0x33CF4A8
	0x033CF40C ADD X23, X23, 0x1
	0x033CF410 ADD X8, X21, X24, 0x1F, ASR
	0x033CF414 CMP X28, X23
	0x033CF418 ADD X24, X24, X25
	0x033CF41C STRH W0, [X8 + 0x20]
	0x033CF420 B.NE 0x33CF3D4
	0x033CF424 MOV W23, W28
	0x033CF428 CBNZ X20, 0x33CF434
	0x033CF42C BL 0x1C16F20
	0x033CF430 MOV W23, W31
	0x033CF434 MOV X0, X20
	0x033CF438 MOV X1, X31
	0x033CF43C BL 0x323260C
	0x033CF440 CMP W23, W0
	0x033CF444 B.GE 0x33CF480
	0x033CF448 MOV W21, W23
	0x033CF44C MOV X0, X20
	0x033CF450 MOV W1, W21
	0x033CF454 MOV X2, X31
	0x033CF458 BL 0x3232E88
	0x033CF45C AND W1, W0, 0xFFFF
	0x033CF460 MOV X0, X19
	0x033CF464 BL 0x33CE2F0
	0x033CF468 MOV X0, X20
	0x033CF46C MOV X1, X31
	0x033CF470 ADD W21, W21, 0x1
	0x033CF474 BL 0x323260C
	0x033CF478 CMP W21, W0
	0x033CF47C B.LT 0x33CF44C
	0x033CF480 MOV W0, W23
	0x033CF484 LDP X20, X19, [X31 + 0x60]
	0x033CF488 LDP X22, X21, [X31 + 0x50]
	0x033CF48C LDP X24, X23, [X31 + 0x40]
	0x033CF490 LDP X26, X25, [X31 + 0x30]
	0x033CF494 LDP X28, X27, [X31 + 0x20]
	0x033CF498 LDP X29, X30, [X31 + 0x10]
	0x033CF49C ADD X31, X31, 0x70
	0x033CF4A0 RET
	0x033CF4A4 BL 0x1C171E0
	0x033CF4A8 BL 0x1C16F28
	0x033CF4AC SUB X31, X31, 0x30
	0x033CF4B0 STP X30, X21, [X31 + 0x10]
	0x033CF4B4 STP X20, X19, [X31 + 0x20]
	0x033CF4B8 MOV W21, W1
	0x033CF4BC ADD X1, X31, 0xC
	0x033CF4C0 MOV X19, X0
	0x033CF4C4 STRB W31, [X31 + 0xC]
	0x033CF4C8 BL 0x33CECE0
	0x033CF4CC LDRB W8, [X31 + 0xC]
	0x033CF4D0 MOV X20, X0
	0x033CF4D4 BIC W8, W8, W21, 0x0
	0x033CF4D8 AND X21, X1, 0x0
	0x033CF4DC TBZ X8, 0x0, 0x33CF4F8
	0x033CF4E0 MOV X0, X19
	0x033CF4E4 MOV X1, X20
	0x033CF4E8 MOV X2, X21
	0x033CF4EC BL 0x33CF104
	0x033CF4F0 MOV X0, X19
	0x033CF4F4 BL 0x33CF158
	0x033CF4F8 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x100F000
	006 Move X20, 0xD59000
	007 Move W8, [X21+679]
	008 Move X20, [X20+1984]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD59000
	015 Move X0, [X0+1984]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+679], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X9, [X8]
	027 Compare X9, 0
	028 JumpIfEqual {79}
	029 Move W9, [X0+224]
	030 Compare W9, 0
	031 JumpIfNotEqual {35}
	032 Call 0x1C17DFC
	033 Move X0, [X20]
	034 Move X8, [X0+184]
	035 Move X9, [X8]
	036 Move W8, [X8+8]
	037 Move W9, [X9]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X20]
	044 Move X8, [X0+184]
	045 Move X9, [X8]
	046 Move W9, [X9]
	047 Add W31, W9, 1
	048 Move W9, [X0+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {54}
	051 Call 0x1C17DFC
	052 Move X8, [X20]
	053 Move X8, [X8+184]
	054 Move X9, [X8]
	055 Move W9, [X9]
	056 Move [X8+8], W9
	057 NotImplemented "Instruction SBFM not yet implemented."
	058 And W0, W9, 0xFFFF
	059 Move [X19+112], W8
	060 Move X0, [X19+16]
	061 Compare X0, 0
	062 JumpIfEqual {85}
	063 Move W1, W31
	064 Call TermInfoReader.Get, X0, X1
	065 Compare W0, 0
	066 JumpIfEqual {68}
	067 Move [X19+112], W0
	068 Move X0, [X19+16]
	069 Compare X0, 0
	070 JumpIfEqual {85}
	071 Move W1, 2
	072 Call TermInfoReader.Get, X0, X1
	073 Compare W0, 0
	074 JumpIfEqual {84}
	075 Move [X19+116], W0
	076 Move W8, [X19+112]
	077 Move [X19+120], W0
	078 Move [X19+124], W8
	079 Move X20, [X31+16]
	080 Move X19, [X31+24]
	081 Move X30, [X31+32]
	082 Move X21, [X31+40]
	083 Return 
	084 Move W0, [X19+116]
	085 Call 0x1C17F20

Method: System.Int32 get_WindowHeight()

Disassembly:
	0x033CEAC4 LDR X10, [X9 + 0x2D8]
	0x033CEAC8 LDR X2, [X9 + 0x2E0]
	0x033CEACC MOV X1, X8
	0x033CEAD0 BLR X10
	0x033CEAD4 CBZ X0, 0x33CEBEC
	0x033CEAD8 LDR X8, [X0]
	0x033CEADC LDR X1, [X28]
	0x033CEAE0 LDR X8, [X8 + 0x40]
	0x033CEAE4 LDR X9, [X1 + 0x40]
	0x033CEAE8 CMP X8, X9
	0x033CEAEC B.NE 0x33CEBF0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+160]
	004 Move X19, X0
	005 Compare W8, 0
	006 JumpIfNotEqual {9}
	007 Move X0, X19
	008 Call TermInfoDriver.Init, X0
	009 Move X0, X19
	010 Call TermInfoDriver.CheckWindowDimensions, X0
	011 Move W0, [X19+116]
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return X0

Method: System.Int32 get_WindowWidth()

Disassembly:
	0x033CEA98 B.EQ 0x33CEAB4
	0x033CEA9C ADD W11, W11, 0x1
	0x033CEAA0 CMP W11, W21
	0x033CEAA4 B.GE 0x33CE970
	0x033CEAA8 CMP W11, W9
	0x033CEAAC B.LT 0x33CEA60
	0x033CEAB0 B 0x33CE970
	0x033CEAB4 STR W9, [X19]
	0x033CEAB8 LDR X0, [X24 + 0x10]
	0x033CEABC CBZ X0, 0x33CEBE8
	0x033CEAC0 LDR X9, [X0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+160]
	004 Move X19, X0
	005 Compare W8, 0
	006 JumpIfNotEqual {9}
	007 Move X0, X19
	008 Call TermInfoDriver.Init, X0
	009 Move X0, X19
	010 Call TermInfoDriver.CheckWindowDimensions, X0
	011 Move W0, [X19+112]
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return X0

Method: System.Void AddToBuffer(System.Int32 b)

Disassembly:
	0x033CF2F0 AND W9, W29, 0x1
	0x033CF2F4 UBFM X22, X0, 0x20, 0x3F
	0x033CF2F8 MOV X26, X0
	0x033CF2FC ORR W23, W8, W9, 0x0
	0x033CF300 CMP W23, 0x0
	0x033CF304 CSET W29, NE
	0x033CF308 CMP W22, 0x8
	0x033CF30C MOV X27, X1
	0x033CF310 B.EQ 0x33CF334
	0x033CF314 CMP W22, 0xD
	0x033CF318 B.NE 0x33CF370
	0x033CF31C CBZ X20, 0x33CF42C
	0x033CF320 MOV X0, X20
	0x033CF324 MOV X1, X31
	0x033CF328 BL 0x323260C
	0x033CF32C MOV W24, W0
	0x033CF330 B 0x33CF374
	0x033CF334 CBZ X20, 0x33CF42C
	0x033CF338 MOV X0, X20
	0x033CF33C MOV X1, X31
	0x033CF340 BL 0x323260C
	0x033CF344 CMP W0, W24
	0x033CF348 B.LE 0x33CF39C
	0x033CF34C MOV X0, X20
	0x033CF350 MOV X1, X31
	0x033CF354 BL 0x323260C
	0x033CF358 SUB W1, W0, 0x1
	0x033CF35C MOV X0, X20
	0x033CF360 MOV X2, X31
	0x033CF364 BL 0x3232ADC
	0x033CF368 CBNZ W23, 0x33CF388
	0x033CF36C B 0x33CF39C
	0x033CF370 CBZ X20, 0x33CF42C
	0x033CF374 MOV X0, X20
	0x033CF378 MOV W1, W26
	0x033CF37C MOV X2, X31
	0x033CF380 BL 0x3233D30
	0x033CF384 CBZ W23, 0x33CF39C
	0x033CF388 BFM X25, X27, 0x0, 0x1F
	0x033CF38C MOV X0, X19
	0x033CF390 MOV X1, X26
	0x033CF394 MOV X2, X25
	0x033CF398 BL 0x33CF104
	0x033CF39C CMP W22, 0xD
	0x033CF3A0 B.NE 0x33CF2E0
	0x033CF3A4 MOV X0, X19
	0x033CF3A8 BL 0x33CF158
	0x033CF3AC LDR W8, [X31 + 0x8]
	0x033CF3B0 MOVI V0.2D, 0xFFFFFFFFFFFFFFFF
	0x033CF3B4 STR D0, [X19 + 0x100]
	0x033CF3B8 CMP W8, 0x1
	0x033CF3BC B.LT 0x33CF430
	0x033CF3C0 LDR W8, [X31 + 0x4]
	0x033CF3C4 MOV X23, X31
	0x033CF3C8 MOVZ X25, 0x1
	0x033CF3CC MOV W22, W8
	0x033CF3D0 UBFM X24, X22, 0x20, 0x1F
	0x033CF3D4 MOV X0, X20
	0x033CF3D8 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x100F000
	006 Move W8, [X21+680]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD2E000
	014 Move X0, [X0+2264]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+680], W8
	018 Move X21, [X20+128]
	019 Compare X21, 0
	020 JumpIfEqual {27}
	021 Move W9, [X20+140]
	022 Move W8, [X21+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W8, [X20+140]
	025 Add W9, W8, 1
	026 Move [X20+140], W9
	027 Move X8, 0xD2E000
	028 Move X8, [X8+2264]
	029 Move W1, 1024
	030 Move X0, [X8]
	031 Call 0x1C17D6C
	032 Move X21, X0
	033 Move X9, 0xD2E000
	034 Move X9, [X9+2264]
	035 Move W1, W8
	036 ShiftRight W1, 31
	037 And W1, W1, 0x3FFFFFFF
	038 Move X0, [X9]
	039 Call 0x1C17D6C
	040 Move X8, [X20+128]
	041 Compare X8, 0
	042 JumpIfEqual {66}
	043 Move W4, [X8+24]
	044 Move X21, X0
	045 Move X0, X8
	046 Move W1, W31
	047 Move X2, X21
	048 Move W3, W31
	049 Move X5, X31
	050 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	051 Move W8, [X20+140]
	052 Move [X20+128], X21
	053 Add W9, W8, 1
	054 Move [X20+140], W9
	055 Compare X21, 0
	056 JumpIfEqual {66}
	057 Move W9, [X21+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add X8, X21, W8
	060 NotImplemented "Instruction STRH not yet implemented."
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X30, [X31+32]
	064 Move X21, [X31+40]
	065 Return 
	066 Call 0x1C17F20
	067 Call 0x1C17F28

Method: System.Void AdjustBuffer()

Disassembly:
	0x033CF4FC MOV X1, X21
	0x033CF500 LDP X20, X19, [X31 + 0x20]
	0x033CF504 LDP X30, X21, [X31 + 0x10]
	0x033CF508 ADD X31, X31, 0x30
	0x033CF50C RET

ISIL:
	001 Move W8, [X0+136]
	002 Move W9, [X0+140]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move [X0+136], X31
	005 Return 

Method: System.ConsoleKeyInfo CreateKeyInfoFromInt(System.Int32 n, System.Boolean alt)

Disassembly:
	0x033CEDD0 TBZ X0, 0x0, 0x33CEE0C
	0x033CEDD4 LDR X0, [X20 + 0x60]
	0x033CEDD8 CBZ X0, 0x33CEE98
	0x033CEDDC LDR X8, [X0]
	0x033CEDE0 LDP X9, X1, [X8 + 0x1C8]
	0x033CEDE4 BLR X9
	0x033CEDE8 MOV W1, W0
	0x033CEDEC MOV X0, X20
	0x033CEDF0 BL 0x33CE2F0
	0x033CEDF4 LDR X0, [X20 + 0x60]
	0x033CEDF8 CBZ X0, 0x33CEE98
	0x033CEDFC MOV X1, X31
	0x033CEE00 BL 0x32E7D04
	0x033CEE04 TBNZ X0, 0x0, 0x33CEDD4
	0x033CEE08 B 0x33CEE3C
	0x033CEE0C MOV X0, X20
	0x033CEE10 MOV W1, W31
	0x033CEE14 BL 0x33CE510
	0x033CEE18 CBNZ X0, 0x33CEE90
	0x033CEE1C LDR X0, [X20 + 0x60]
	0x033CEE20 CBZ X0, 0x33CEE98
	0x033CEE24 LDR X8, [X0]
	0x033CEE28 LDP X9, X1, [X8 + 0x1C8]
	0x033CEE2C BLR X9
	0x033CEE30 MOV W1, W0
	0x033CEE34 MOV X0, X20
	0x033CEE38 BL 0x33CE2F0
	0x033CEE3C MOVZ W1, 0x1
	0x033CEE40 MOV X0, X20
	0x033CEE44 BL 0x33CE510
	0x033CEE48 CBZ X0, 0x33CED5C
	0x033CEE4C ADRP X8, 0xD5D000
	0x033CEE50 LDR X8, [X8 + 0x698]
	0x033CEE54 STRB W22, [X19]
	0x033CEE58 LDR X9, [X0]
	0x033CEE5C LDR X1, [X8]
	0x033CEE60 LDR X8, [X9 + 0x40]
	0x033CEE64 LDR X9, [X1 + 0x40]
	0x033CEE68 CMP X8, X9
	0x033CEE6C B.NE 0x33CEE9C
	0x033CEE70 BL 0x1C16E08
	0x033CEE74 LDR X8, [X0]
	0x033CEE78 LDR W1, [X0 + 0x8]
	0x033CEE7C LDP X20, X19, [X31 + 0x20]
	0x033CEE80 LDP X22, X21, [X31 + 0x10]
	0x033CEE84 MOV X0, X8
	0x033CEE88 LDR X30, [X31], #0x30
	0x033CEE8C RET
	0x033CEE90 MOVZ W22, 0x1
	0x033CEE94 B 0x33CEE4C
	0x033CEE98 BL 0x1C16F20
	0x033CEE9C BL 0x1C171E0
	0x033CEEA0 STR X30, [X31 - 0x30]!
	0x033CEEA4 STP X22, X21, [X31 + 0x10]
	0x033CEEA8 STP X20, X19, [X31 + 0x20]
	0x033CEEAC ADRP X20, 0x100F000
	0x033CEEB0 LDRB W8, [X20 + 0x2B0]
	0x033CEEB4 MOV X19, X0
	0x033CEEB8 TBNZ X8, 0x0, 0x33CEEF4
	0x033CEEBC ADRP X0, 0xD5E000
	0x033CEEC0 LDR X0, [X0 + 0xB98]
	0x033CEEC4 BL 0x1C16CF4
	0x033CEEC8 ADRP X0, 0xD25000
	0x033CEECC LDR X0, [X0 + 0x618]
	0x033CEED0 BL 0x1C16CF4
	0x033CEED4 ADRP X0, 0xD5E000
	0x033CEED8 LDR X0, [X0 + 0xBA0]
	0x033CEEDC BL 0x1C16CF4
	0x033CEEE0 ADRP X0, 0xD5E000
	0x033CEEE4 LDR X0, [X0 + 0xBA8]
	0x033CEEE8 BL 0x1C16CF4
	0x033CEEEC MOVZ W8, 0x1
	0x033CEEF0 STRB W8, [X20 + 0x2B0]
	0x033CEEF4 LDRB W8, [X19 + 0xB0]
	0x033CEEF8 CBNZ W8, 0x33CEFF0
	0x033CEEFC MOV X0, X19
	0x033CEF00 BL 0x33CF738
	0x033CEF04 ADRP X8, 0xD5E000
	0x033CEF08 LDR X8, [X8 + 0xB98]
	0x033CEF0C LDR X0, [X8]
	0x033CEF10 BL 0x1C16F10
	0x033CEF14 MOV X20, X0
	0x033CEF18 BL 0x33D15D0
	0x033CEF1C STR X20, [X19 + 0xF8]
	0x033CEF20 ADRP X8, 0xD5E000
	0x033CEF24 LDR X8, [X8 + 0xBA0]
	0x033CEF28 MOVZ W1, 0x3C
	0x033CEF2C LDR X0, [X8]
	0x033CEF30 BL 0x1C16D6C
	0x033CEF34 ADRP X8, 0xD5E000
	0x033CEF38 LDR X8, [X8 + 0xBA8]
	0x033CEF3C MOV X2, X31
	0x033CEF40 MOV X20, X0
	0x033CEF44 LDR X1, [X8]
	0x033CEF48 BL 0x32C5BD8
	0x033CEF4C CBZ X20, 0x33CF004
	0x033CEF50 LDR X8, [X20 + 0x18]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Subtract W8, W1, 42
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X9, -42168320
	005 Add X9, X9, 2372
	006 NotImplemented "Instruction ADR not yet implemented."
	007 Move W11, [X9]
	008 Add X10, X10, X11
	009 CallNoReturn X10
	010 Move W5, W31
	011 Move W3, W31
	012 Move W8, 106
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move W8, 1
	015 NotImplemented "Instruction LSLV not yet implemented."
	016 Move W9, 0x3300
	017 And W31, W8, W9
	018 Move W5, W31
	019 Move W3, W31
	020 Move W8, W1
	021 Subtract X31, X31, 32
	022 Move [X31+16], X30
	023 And W4, W2, 1
	024 Add X0, X31, 0
	025 Move W2, W8
	026 Move X6, X31
	027 Move [X31+8], W31
	028 Move [X31], X31
	029 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	030 Move X0, [X31]
	031 Move W1, [X31+8]
	032 Move X30, [X31+16]
	033 Add X31, X31, 32
	034 Return X0
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W5, W31
	038 Move W3, W31
	039 Move W8, 32
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W5, W31
	043 Move W3, W31
	044 Move W8, 19
	045 Subtract W8, W1, 1
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract W8, W1, 97
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract W8, W1, 65
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract W8, W1, 48
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W5, W31
	054 Move W3, W31
	055 NotImplemented "Instruction CSEL not yet implemented."
	056 Move W3, W31
	057 Add W8, W1, 64
	058 Move W5, 1
	059 Move W5, W31
	060 Move W3, W31
	061 Move W8, 107
	062 Move W5, W31
	063 Move W3, W31
	064 Move W8, 109
	065 Move W5, W31
	066 Move W3, W31
	067 Move W8, 111
	068 Move W5, W31
	069 Move W3, W31
	070 Move W8, 13
	071 Move W5, W31
	072 Move W3, W31
	073 Subtract W8, W1, 32
	074 Move W5, W31
	075 Move W3, 1

Method: System.Object GetKeyFromBuffer(System.Boolean cooked)

Disassembly:
	0x033CF510 MOVZ W1, 0x1
	0x033CF514 B 0x33CF518
	0x033CF518 STR X30, [X31 - 0x60]!
	0x033CF51C STP X28, X27, [X31 + 0x10]
	0x033CF520 STP X26, X25, [X31 + 0x20]
	0x033CF524 STP X24, X23, [X31 + 0x30]
	0x033CF528 STP X22, X21, [X31 + 0x40]
	0x033CF52C STP X20, X19, [X31 + 0x50]
	0x033CF530 ADRP X21, 0x100E000
	0x033CF534 LDRB W8, [X21 + 0x2AD]
	0x033CF538 MOV W20, W1
	0x033CF53C MOV X19, X0
	0x033CF540 TBNZ X8, 0x0, 0x33CF558
	0x033CF544 ADRP X0, 0xD24000
	0x033CF548 LDR X0, [X0 + 0x8F0]
	0x033CF54C BL 0x1C16CF4
	0x033CF550 MOVZ W8, 0x1
	0x033CF554 STRB W8, [X21 + 0x2AD]
	0x033CF558 STRB W31, [X31 + 0xC]
	0x033CF55C ADRP X21, 0xD24000
	0x033CF560 LDRB W8, [X19 + 0xA0]
	0x033CF564 LDR X21, [X21 + 0x8F0]
	0x033CF568 CBNZ W8, 0x33CF574
	0x033CF56C MOV X0, X19
	0x033CF570 BL 0x33CCEF0
	0x033CF574 MOV X0, X19
	0x033CF578 BL 0x33CD79C
	0x033CF57C LDR X0, [X21]
	0x033CF580 BL 0x1C16F10
	0x033CF584 MOV X1, X31
	0x033CF588 MOV X21, X0
	0x033CF58C BL 0x3231AC4
	0x033CF590 LDR V0, [X19 + 0x18]
	0x033CF594 LDR X8, [X19 + 0x108]
	0x033CF598 STR D0, [X19 + 0x100]
	0x033CF59C CBZ X8, 0x33CF6EC
	0x033CF5A0 LDR W9, [X8 + 0x18]
	0x033CF5A4 CMP W9, 0x4
	0x033CF5A8 B.LS 0x33CF6F0
	0x033CF5AC LDRB W25, [X8 + 0x24]
	0x033CF5B0 MOV W26, W31
	0x033CF5B4 ADD X1, X31, 0xC
	0x033CF5B8 MOV X0, X19
	0x033CF5BC BL 0x33CECE0
	0x033CF5C0 LDRB W8, [X31 + 0xC]
	0x033CF5C4 AND W9, W26, 0x1
	0x033CF5C8 MOV X23, X0
	0x033CF5CC MOV X24, X1
	0x033CF5D0 ORR W27, W8, W9, 0x0
	0x033CF5D4 CMP W27, 0x0
	0x033CF5D8 CSET W26, NE
	0x033CF5DC CMP W25, W23, UXTH
	0x033CF5E0 UBFM X28, X0, 0x20, 0x3F
	0x033CF5E4 B.NE 0x33CF614
	0x033CF5E8 ANDS W31, W23, 0xFFFF
	0x033CF5EC B.EQ 0x33CF614
	0x033CF5F0 CBZ X21, 0x33CF6EC
	0x033CF5F4 MOV X0, X21
	0x033CF5F8 MOV X1, X31
	0x033CF5FC BL 0x323260C
	0x033CF600 CBZ W0, 0x33CF6CC
	0x033CF604 CMP W28, 0xD
	0x033CF608 B.NE 0x33CF630
	0x033CF60C TBNZ X20, 0x0, 0x33CF620
	0x033CF610 B 0x33CF630
	0x033CF614 CMP W28, 0xD
	0x033CF618 B.NE 0x33CF62C
	0x033CF61C TBZ X20, 0x0, 0x33CF62C
	0x033CF620 MOVZ W28, 0x1
	0x033CF624 CBNZ W27, 0x33CF680
	0x033CF628 B 0x33CF694
	0x033CF62C CBZ X21, 0x33CF6EC
	0x033CF630 MOV X0, X21
	0x033CF634 CMP W28, 0x8
	0x033CF638 B.NE 0x33CF66C
	0x033CF63C MOV X1, X31
	0x033CF640 BL 0x323260C
	0x033CF644 CMP W0, 0x1
	0x033CF648 B.LT 0x33CF69C
	0x033CF64C MOV X0, X21
	0x033CF650 MOV X1, X31
	0x033CF654 BL 0x323260C
	0x033CF658 SUB W1, W0, 0x1
	0x033CF65C MOV X0, X21
	0x033CF660 MOV X2, X31
	0x033CF664 BL 0x3232ADC
	0x033CF668 B 0x33CF678
	0x033CF66C MOV W1, W23
	0x033CF670 MOV X2, X31
	0x033CF674 BL 0x3233D30
	0x033CF678 MOV W28, W31
	0x033CF67C CBZ W27, 0x33CF694
	0x033CF680 BFM X22, X24, 0x0, 0x1F
	0x033CF684 MOV X0, X19
	0x033CF688 MOV X1, X23
	0x033CF68C MOV X2, X22
	0x033CF690 BL 0x33CF104
	0x033CF694 CBZ W28, 0x33CF5B4
	0x033CF698 B 0x33CF6A4
	0x033CF69C MOV W28, W31
	0x033CF6A0 CBZ W28, 0x33CF5B4
	0x033CF6A4 MOV X0, X19
	0x033CF6A8 BL 0x33CF158
	0x033CF6AC MOVI V0.2D, 0xFFFFFFFFFFFFFFFF
	0x033CF6B0 STR D0, [X19 + 0x100]
	0x033CF6B4 CBZ X21, 0x33CF6EC
	0x033CF6B8 LDR X8, [X21]
	0x033CF6BC MOV X0, X21
	0x033CF6C0 LDP X9, X1, [X8 + 0x168]
	0x033CF6C4 BLR X9
	0x033CF6C8 B 0x33CF6D0
	0x033CF6CC MOV X0, X31
	0x033CF6D0 LDP X20, X19, [X31 + 0x50]
	0x033CF6D4 LDP X22, X21, [X31 + 0x40]
	0x033CF6D8 LDP X24, X23, [X31 + 0x30]
	0x033CF6DC LDP X26, X25, [X31 + 0x20]
	0x033CF6E0 LDP X28, X27, [X31 + 0x10]
	0x033CF6E4 LDR X30, [X31], #0x60
	0x033CF6E8 RET
	0x033CF6EC BL 0x1C16F20
	0x033CF6F0 BL 0x1C16F28
	0x033CF6F4 MOV W1, W31
	0x033CF6F8 B 0x33CF518
	0x033CF6FC STP X30, X19, [X31 - 0x10]!
	0x033CF700 LDRB W8, [X0 + 0xA0]
	0x033CF704 MOV X19, X0
	0x033CF708 CBNZ W8, 0x33CF714
	0x033CF70C MOV X0, X19
	0x033CF710 BL 0x33CCEF0
	0x033CF714 LDR X8, [X19 + 0xB8]
	0x033CF718 MOVZ W9, 0xB8
	0x033CF71C MOV X0, X19
	0x033CF720 CMP X8, 0x0
	0x033CF724 MOVZ W8, 0xC0
	0x033CF728 CSEL X8, X8, X9, EQ
	0x033CF72C LDR X1, [X19, X8, LSL]
	0x033CF730 LDP X30, X19, [X31], #0x10
	0x033CF734 B 0x33CCB74
	0x033CF738 STR X29, [X31 - 0x40]!
	0x033CF73C STP X30, X23, [X31 + 0x10]
	0x033CF740 STP X22, X21, [X31 + 0x20]
	0x033CF744 STP X20, X19, [X31 + 0x30]
	0x033CF748 SUB X31, X31, 0x780
	0x033CF74C ADRP X20, 0x100E000
	0x033CF750 ADRP X21, 0xD54000
	0x033CF754 ADRP X23, 0xD5D000
	0x033CF758 ADRP X22, 0xD5C000
	0x033CF75C LDRB W8, [X20 + 0x2AF]
	0x033CF760 LDR X21, [X21 + 0xDB8]
	0x033CF764 LDR X23, [X23 + 0xB90]
	0x033CF768 LDR X22, [X22 + 0x698]
	0x033CF76C MOV X19, X0
	0x033CF770 TBNZ X8, 0x0, 0x33CF7A0
	0x033CF774 ADRP X0, 0xD5C000
	0x033CF778 LDR X0, [X0 + 0x698]
	0x033CF77C BL 0x1C16CF4
	0x033CF780 ADRP X0, 0xD54000
	0x033CF784 LDR X0, [X0 + 0xDB8]
	0x033CF788 BL 0x1C16CF4
	0x033CF78C ADRP X0, 0xD5D000
	0x033CF790 LDR X0, [X0 + 0xB90]
	0x033CF794 BL 0x1C16CF4
	0x033CF798 MOVZ W8, 0x1
	0x033CF79C STRB W8, [X20 + 0x2AF]
	0x033CF7A0 LDR X0, [X21]
	0x033CF7A4 BL 0x1C16F10
	0x033CF7A8 MOV X1, X31
	0x033CF7AC MOV X20, X0
	0x033CF7B0 BL 0x335A0A0
	0x033CF7B4 STR X20, [X19 + 0xF0]!
	0x033CF7B8 LDR X0, [X23]
	0x033CF7BC MOVZ W8, 0x37
	0x033CF7C0 ADD X1, X31, 0x78C
	0x033CF7C4 STR W8, [X31 + 0x78C]
	0x033CF7C8 BL 0x1C16E04

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X20, 0x100F000
	009 Move W8, [X20+681]
	010 Move W21, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xD5D000
	017 Move X0, [X0+1688]
	018 Call 0x1C17CF4
	019 Move X0, 0xD5E000
	020 Move X0, [X0+2960]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+681], W8
	024 Move [X31+28], W31
	025 Move W8, [X19+136]
	026 Move W9, [X19+140]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X10, [X19+128]
	029 Compare X10, 0
	030 JumpIfEqual {184}
	031 Move W11, [X10+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X11, W8
	034 Add X10, X10, X11
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move TEMP, X21
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {119}
	040 Move X0, [X19+248]
	041 Compare X0, 0
	042 JumpIfEqual {184}
	043 Move W1, W20
	044 Call ByteMatcher.StartsWith, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {117}
	049 Move X0, [X19+248]
	050 Compare X0, 0
	051 JumpIfEqual {184}
	052 Move W2, [X19+136]
	053 Move W8, [X19+140]
	054 Move X1, [X19+128]
	055 Add X4, X31, 28
	056 Subtract W3, W8, W2
	057 Call ByteMatcher.Match, X0, X1, X2, X3, X4
	058 Add W31, W0, 1
	059 Move X23, 0xD5E000
	060 Move X22, [X19+240]
	061 Move X23, [X23+2960]
	062 Move W21, W0
	063 Add X1, X31, 16
	064 Move [X31+16], W21
	065 Move X0, [X23]
	066 Call 0x1C17E04
	067 Compare X22, 0
	068 JumpIfEqual {184}
	069 Move X8, [X22]
	070 Move X1, X0
	071 Move X0, X22
	072 Move X9, [X8+728]
	073 Move X2, [X8+736]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Compare X0, 0
	076 JumpIfEqual {180}
	077 Move X0, [X23]
	078 Move X20, [X19+240]
	079 Add X1, X31, 0
	080 Move [X31], W21
	081 Call 0x1C17E04
	082 Compare X20, 0
	083 JumpIfEqual {184}
	084 Move X8, [X20]
	085 Move X1, X0
	086 Move X0, X20
	087 Move X9, [X8+728]
	088 Move X2, [X8+736]
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Compare X0, 0
	091 JumpIfEqual {184}
	092 Move X20, 0xD5D000
	093 Move X20, [X20+1688]
	094 Move X8, [X0]
	095 Move X1, [X20]
	096 Move X8, [X8+64]
	097 Move X9, [X1+64]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Call 0x1C17E08
	100 Move X8, [X0]
	101 Move W9, [X0+8]
	102 Move [X31+16], X8
	103 Move [X31+24], W9
	104 Move W8, [X31+28]
	105 Move W9, [X19+136]
	106 Move W10, [X19+140]
	107 Add W8, W8, W9
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move [X19+136], W8
	110 Move [X19+136], X31
	111 Move X8, [X31+16]
	112 Move W9, [X31+24]
	113 Move X0, [X20]
	114 Move [X31], X8
	115 Move [X31+8], W9
	116 Add X1, X31, 0
	117 Move W8, [X19+136]
	118 Move W9, [X19+140]
	119 Add W8, W8, 1
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move [X19+136], W8
	122 Move [X19+136], X31
	123 Move W1, W20
	124 Move W2, W31
	125 Call TermInfoDriver.CreateKeyInfoFromInt, X0, X1, X2
	126 Move X8, 0xD5D000
	127 Move X8, [X8+1688]
	128 Move [X31+16], X0
	129 Move [X31+24], W1
	130 Add X1, X31, 16
	131 Move X8, [X8]
	132 Move X0, X8
	133 Call 0x1C17E04
	134 Move X8, [X19+128]
	135 Compare X8, 0
	136 JumpIfEqual {184}
	137 NotImplemented "Instruction LDRSW not yet implemented."
	138 Move W9, [X8+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Add X11, X8, X10
	141 NotImplemented "Instruction LDRH not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move W11, [X19+140]
	144 Subtract W12, W11, W10
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Add W10, W10, 2
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move [X19+136], W10
	149 Move W10, W31
	150 Move [X19+136], X31
	151 Add W10, W10, 1
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Add X8, X8, W10
	154 NotImplemented "Instruction LDRH not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Add X0, X31, 16
	157 Move W1, 8
	158 Move W2, 8
	159 Move W4, 1
	160 Move W3, W31
	161 Move W5, W31
	162 Move X6, X31
	163 Move [X31+24], W31
	164 Move [X31+16], X31
	165 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	166 Move X10, 0xD5D000
	167 Move X8, [X31+16]
	168 Move W9, [X31+24]
	169 Move X10, [X10+1688]
	170 Move X0, [X10]
	171 Move X0, X31
	172 Move X20, [X31+64]
	173 Move X19, [X31+72]
	174 Move X22, [X31+48]
	175 Move X21, [X31+56]
	176 Move X30, [X31+32]
	177 Move X23, [X31+40]
	178 Add X31, X31, 80
	179 Return X0
	180 Move W8, [X19+136]
	181 Move W9, [X19+140]
	182 Add W8, W8, 1
	183 Move W2, 1
	184 Call 0x1C17F20
	185 Call 0x1C17F28
	186 Call 0x1C181E0

Method: System.ConsoleKeyInfo ReadKeyInternal(out System.Boolean fresh)

Disassembly:
	0x033CFCE0 MOV W4, W31
	0x033CFCE4 MOV W5, W31
	0x033CFCE8 MOV X6, X31
	0x033CFCEC STR W31, [X31 + 0x638]
	0x033CFCF0 STR X31, [X31 + 0x630]
	0x033CFCF4 BL 0x339D33C
	0x033CFCF8 LDR X8, [X31 + 0x630]
	0x033CFCFC LDR W9, [X31 + 0x638]
	0x033CFD00 LDR X0, [X22]
	0x033CFD04 ADD X1, X31, 0x620
	0x033CFD08 STR X8, [X31 + 0x620]
	0x033CFD0C STR W9, [X31 + 0x628]
	0x033CFD10 BL 0x1C16E04
	0x033CFD14 CBZ X20, 0x33D15CC
	0x033CFD18 LDR X8, [X20]
	0x033CFD1C MOV X2, X0
	0x033CFD20 MOV X0, X20
	0x033CFD24 MOV X1, X21
	0x033CFD28 LDR X9, [X8 + 0x2E8]
	0x033CFD2C LDR X3, [X8 + 0x2F0]
	0x033CFD30 BLR X9
	0x033CFD34 LDR X0, [X23]
	0x033CFD38 LDR X20, [X19]
	0x033CFD3C MOVZ W8, 0x4A
	0x033CFD40 ADD X1, X31, 0x61C
	0x033CFD44 STR W8, [X31 + 0x61C]
	0x033CFD48 BL 0x1C16E04
	0x033CFD4C MOV X21, X0
	0x033CFD50 ADD X0, X31, 0x610
	0x033CFD54 MOVZ W2, 0x77
	0x033CFD58 MOV W1, W31
	0x033CFD5C MOV W3, W31
	0x033CFD60 MOV W4, W31
	0x033CFD64 MOV W5, W31
	0x033CFD68 MOV X6, X31
	0x033CFD6C STR W31, [X31 + 0x618]
	0x033CFD70 STR X31, [X31 + 0x610]
	0x033CFD74 BL 0x339D33C
	0x033CFD78 LDR X8, [X31 + 0x610]
	0x033CFD7C LDR W9, [X31 + 0x618]
	0x033CFD80 LDR X0, [X22]
	0x033CFD84 ADD X1, X31, 0x600
	0x033CFD88 STR X8, [X31 + 0x600]
	0x033CFD8C STR W9, [X31 + 0x608]
	0x033CFD90 BL 0x1C16E04
	0x033CFD94 CBZ X20, 0x33D15CC
	0x033CFD98 LDR X8, [X20]
	0x033CFD9C MOV X2, X0
	0x033CFDA0 MOV X0, X20
	0x033CFDA4 MOV X1, X21
	0x033CFDA8 LDR X9, [X8 + 0x2E8]
	0x033CFDAC LDR X3, [X8 + 0x2F0]
	0x033CFDB0 BLR X9
	0x033CFDB4 LDR X0, [X23]
	0x033CFDB8 LDR X20, [X19]
	0x033CFDBC MOVZ W8, 0x4B
	0x033CFDC0 ADD X1, X31, 0x5FC
	0x033CFDC4 STR W8, [X31 + 0x5FC]
	0x033CFDC8 BL 0x1C16E04
	0x033CFDCC MOV X21, X0
	0x033CFDD0 ADD X0, X31, 0x5F0
	0x033CFDD4 MOVZ W2, 0x78
	0x033CFDD8 MOV W1, W31
	0x033CFDDC MOV W3, W31
	0x033CFDE0 MOV W4, W31
	0x033CFDE4 MOV W5, W31
	0x033CFDE8 MOV X6, X31
	0x033CFDEC STR W31, [X31 + 0x5F8]
	0x033CFDF0 STR X31, [X31 + 0x5F0]
	0x033CFDF4 BL 0x339D33C
	0x033CFDF8 LDR X8, [X31 + 0x5F0]
	0x033CFDFC LDR W9, [X31 + 0x5F8]
	0x033CFE00 LDR X0, [X22]
	0x033CFE04 ADD X1, X31, 0x5E0
	0x033CFE08 STR X8, [X31 + 0x5E0]
	0x033CFE0C STR W9, [X31 + 0x5E8]
	0x033CFE10 BL 0x1C16E04
	0x033CFE14 CBZ X20, 0x33D15CC
	0x033CFE18 LDR X8, [X20]
	0x033CFE1C MOV X2, X0
	0x033CFE20 MOV X0, X20
	0x033CFE24 MOV X1, X21
	0x033CFE28 LDR X9, [X8 + 0x2E8]
	0x033CFE2C LDR X3, [X8 + 0x2F0]
	0x033CFE30 BLR X9
	0x033CFE34 LDR X0, [X23]
	0x033CFE38 LDR X20, [X19]
	0x033CFE3C MOVZ W8, 0x4C
	0x033CFE40 ADD X1, X31, 0x5DC
	0x033CFE44 STR W8, [X31 + 0x5DC]
	0x033CFE48 BL 0x1C16E04
	0x033CFE4C MOV X21, X0
	0x033CFE50 ADD X0, X31, 0x5D0
	0x033CFE54 MOVZ W2, 0x24
	0x033CFE58 MOV W1, W31
	0x033CFE5C MOV W3, W31
	0x033CFE60 MOV W4, W31
	0x033CFE64 MOV W5, W31
	0x033CFE68 MOV X6, X31
	0x033CFE6C STR W31, [X31 + 0x5D8]
	0x033CFE70 STR X31, [X31 + 0x5D0]
	0x033CFE74 BL 0x339D33C
	0x033CFE78 LDR X8, [X31 + 0x5D0]
	0x033CFE7C LDR W9, [X31 + 0x5D8]
	0x033CFE80 LDR X0, [X22]
	0x033CFE84 ADD X1, X31, 0x5C0
	0x033CFE88 STR X8, [X31 + 0x5C0]
	0x033CFE8C STR W9, [X31 + 0x5C8]
	0x033CFE90 BL 0x1C16E04
	0x033CFE94 CBZ X20, 0x33D15CC
	0x033CFE98 LDR X8, [X20]
	0x033CFE9C MOV X2, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x100F000
	007 Move W8, [X21+682]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xD59000
	015 Move X0, [X0+1976]
	016 Call 0x1C17CF4
	017 Move X0, 0xD5D000
	018 Move X0, [X0+1688]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+682], W8
	022 Move W8, [X20+160]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Move X0, X20
	026 Call TermInfoDriver.Init, X0
	027 Move X0, X20
	028 Call TermInfoDriver.InitKeys, X0
	029 Move W1, 1
	030 Move X0, X20
	031 Call TermInfoDriver.GetKeyFromBuffer, X0, X1
	032 Compare X0, 0
	033 JumpIfEqual {35}
	034 Move W22, W31
	035 Move X21, 0xD59000
	036 Move X21, [X21+1976]
	037 Move W22, 1
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move W0, 150
	044 Call 0x1C88668
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X0, [X20+96]
	047 Compare X0, 0
	048 JumpIfEqual {131}
	049 Move X8, [X0]
	050 Move X9, [X8+456]
	051 Move X1, [X8+464]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move W1, W0
	054 Move X0, X20
	055 Call TermInfoDriver.AddToBuffer, X0, X1
	056 Move X0, [X21]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move W0, W31
	062 Call 0x1C88668
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X0, [X20+96]
	065 Compare X0, 0
	066 JumpIfEqual {131}
	067 Move X1, X31
	068 Call StreamReader.DataAvailable, X0
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {92}
	073 Move X0, [X20+96]
	074 Compare X0, 0
	075 JumpIfEqual {131}
	076 Move X8, [X0]
	077 Move X9, [X8+456]
	078 Move X1, [X8+464]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move W1, W0
	081 Move X0, X20
	082 Call TermInfoDriver.AddToBuffer, X0, X1
	083 Move X0, [X20+96]
	084 Compare X0, 0
	085 JumpIfEqual {131}
	086 Move X1, X31
	087 Call StreamReader.DataAvailable, X0
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {73}
	092 Move X0, X20
	093 Move W1, W31
	094 Call TermInfoDriver.GetKeyFromBuffer, X0, X1
	095 Compare X0, 0
	096 JumpIfNotEqual {130}
	097 Move X0, [X20+96]
	098 Compare X0, 0
	099 JumpIfEqual {131}
	100 Move X8, [X0]
	101 Move X9, [X8+456]
	102 Move X1, [X8+464]
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move W1, W0
	105 Move X0, X20
	106 Call TermInfoDriver.AddToBuffer, X0, X1
	107 Move W1, 1
	108 Move X0, X20
	109 Call TermInfoDriver.GetKeyFromBuffer, X0, X1
	110 Compare X0, 0
	111 JumpIfEqual {38}
	112 Move X8, 0xD5D000
	113 Move X8, [X8+1688]
	114 Move [X19], W22
	115 Move X9, [X0]
	116 Move X1, [X8]
	117 Move X8, [X9+64]
	118 Move X9, [X1+64]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Call 0x1C17E08
	121 Move X8, [X0]
	122 Move W1, [X0+8]
	123 Move X20, [X31+32]
	124 Move X19, [X31+40]
	125 Move X22, [X31+16]
	126 Move X21, [X31+24]
	127 Move X0, X8
	128 Move X30, [X31+48]
	129 Return X0
	130 Move W22, 1
	131 Call 0x1C17F20
	132 Call 0x1C181E0

Method: System.Boolean InputPending()

Disassembly:
	0x033D0008 STR X8, [X31 + 0x560]
	0x033D000C STR W9, [X31 + 0x568]
	0x033D0010 BL 0x1C16E04
	0x033D0014 CBZ X20, 0x33D15CC
	0x033D0018 LDR X8, [X20]
	0x033D001C MOV X2, X0
	0x033D0020 MOV X0, X20
	0x033D0024 MOV X1, X21
	0x033D0028 LDR X9, [X8 + 0x2E8]
	0x033D002C LDR X3, [X8 + 0x2F0]
	0x033D0030 BLR X9
	0x033D0034 LDR X0, [X23]
	0x033D0038 LDR X20, [X19]

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+136]
	003 Move W9, [X0+140]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move W0, 1
	006 Move X30, [X31+16]
	007 Return X0
	008 Move X0, [X0+96]
	009 Compare X0, 0
	010 JumpIfEqual {15}
	011 Move X1, X31
	012 Move X30, [X31+16]
	013 Call StreamReader.DataAvailable, X0
	014 Return X0
	015 Call 0x1C17F20

Method: System.Void QueueEcho(System.Char c)

Disassembly:
	0x033D003C MOVZ W8, 0x52
	0x033D0040 ADD X1, X31, 0x55C
	0x033D0044 STR W8, [X31 + 0x55C]
	0x033D0048 BL 0x1C16E04
	0x033D004C MOV X21, X0
	0x033D0050 ADD X0, X31, 0x550
	0x033D0054 MOVZ W2, 0x21
	0x033D0058 MOV W1, W31
	0x033D005C MOV W3, W31
	0x033D0060 MOV W4, W31
	0x033D0064 MOV W5, W31
	0x033D0068 MOV X6, X31
	0x033D006C STR W31, [X31 + 0x558]
	0x033D0070 STR X31, [X31 + 0x550]
	0x033D0074 BL 0x339D33C
	0x033D0078 LDR X8, [X31 + 0x550]
	0x033D007C LDR W9, [X31 + 0x558]
	0x033D0080 LDR X0, [X22]
	0x033D0084 ADD X1, X31, 0x540
	0x033D0088 STR X8, [X31 + 0x540]
	0x033D008C STR W9, [X31 + 0x548]
	0x033D0090 BL 0x1C16E04
	0x033D0094 CBZ X20, 0x33D15CC
	0x033D0098 LDR X8, [X20]
	0x033D009C MOV X2, X0
	0x033D00A0 MOV X0, X20
	0x033D00A4 MOV X1, X21
	0x033D00A8 LDR X9, [X8 + 0x2E8]
	0x033D00AC LDR X3, [X8 + 0x2F0]
	0x033D00B0 BLR X9
	0x033D00B4 LDR X0, [X23]
	0x033D00B8 LDR X20, [X19]
	0x033D00BC MOVZ W8, 0x53
	0x033D00C0 ADD X1, X31, 0x53C
	0x033D00C4 STR W8, [X31 + 0x53C]
	0x033D00C8 BL 0x1C16E04
	0x033D00CC MOV X21, X0
	0x033D00D0 ADD X0, X31, 0x530
	0x033D00D4 MOVZ W2, 0x27
	0x033D00D8 MOV W1, W31
	0x033D00DC MOV W3, W31
	0x033D00E0 MOV W4, W31
	0x033D00E4 MOV W5, W31
	0x033D00E8 MOV X6, X31
	0x033D00EC STR W31, [X31 + 0x538]
	0x033D00F0 STR X31, [X31 + 0x530]
	0x033D00F4 BL 0x339D33C
	0x033D00F8 LDR X8, [X31 + 0x530]
	0x033D00FC LDR W9, [X31 + 0x538]
	0x033D0100 LDR X0, [X22]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x100E000
	006 Move W8, [X21+683]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD2D000
	014 Move X0, [X0+2264]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+683], W8
	018 Move X0, [X19+272]
	019 Compare X0, 0
	020 JumpIfEqual {24}
	021 Move W8, [X19+280]
	022 Add W9, W8, 1
	023 Move [X19+280], W9
	024 Move X8, 0xD2D000
	025 Move X8, [X8+2264]
	026 Move W1, 1024
	027 Move X0, [X8]
	028 Call 0x1C17D6C
	029 Move W8, [X19+280]
	030 Move [X19+272], X0
	031 Add W9, W8, 1
	032 Move [X19+280], W9
	033 Compare X0, 0
	034 JumpIfEqual {59}
	035 Move W10, [X0+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Add X8, X0, W8
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction STRH not yet implemented."
	040 Move X0, X19
	041 Call TermInfoDriver.InputPending, X0
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {54}
	046 Move X0, [X19+104]
	047 Compare X0, 0
	048 JumpIfEqual {59}
	049 Move W2, [X19+280]
	050 Move X1, [X19+272]
	051 Move X3, X31
	052 Call CStreamWriter.InternalWriteChars, X0, X1, X2
	053 Move [X19+280], W31
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Return 
	059 Call 0x1C17F20
	060 Call 0x1C17F28

Method: System.Void Echo(System.ConsoleKeyInfo key)

Disassembly:
	0x033D0104 ADD X1, X31, 0x520
	0x033D0108 STR X8, [X31 + 0x520]
	0x033D010C STR W9, [X31 + 0x528]
	0x033D0110 BL 0x1C16E04
	0x033D0114 CBZ X20, 0x33D15CC
	0x033D0118 LDR X8, [X20]
	0x033D011C MOV X2, X0
	0x033D0120 MOV X0, X20
	0x033D0124 MOV X1, X21
	0x033D0128 LDR X9, [X8 + 0x2E8]
	0x033D012C LDR X3, [X8 + 0x2F0]
	0x033D0130 BLR X9
	0x033D0134 LDR X0, [X23]
	0x033D0138 LDR X20, [X19]
	0x033D013C MOVZ W8, 0x54
	0x033D0140 ADD X1, X31, 0x51C
	0x033D0144 STR W8, [X31 + 0x51C]
	0x033D0148 BL 0x1C16E04
	0x033D014C MOV X21, X0
	0x033D0150 ADD X0, X31, 0x510
	0x033D0154 MOVZ W2, 0x22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 And X21, X2, 0
	006 Move X2, X21
	007 Move X19, X1
	008 Move X20, X0
	009 Call TermInfoDriver.IsSpecialKey, X0, X1
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {25}
	014 Move X0, X20
	015 Call TermInfoDriver.EchoFlush, X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X2, X21
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Call TermInfoDriver.WriteSpecialKey, X0, X1
	024 Return 
	025 Move X0, X20
	026 Move W1, W19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call TermInfoDriver.QueueEcho, X0, X1
	032 Return 

Method: System.Void EchoFlush()

Disassembly:
	0x033D0158 MOV W1, W31
	0x033D015C MOV W3, W31
	0x033D0160 MOV W4, W31
	0x033D0164 MOV W5, W31
	0x033D0168 MOV X6, X31
	0x033D016C STR W31, [X31 + 0x518]
	0x033D0170 STR X31, [X31 + 0x510]
	0x033D0174 BL 0x339D33C
	0x033D0178 LDR X8, [X31 + 0x510]
	0x033D017C LDR W9, [X31 + 0x518]
	0x033D0180 LDR X0, [X22]
	0x033D0184 ADD X1, X31, 0x500
	0x033D0188 STR X8, [X31 + 0x500]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W2, [X0+280]
	004 Compare W2, 0
	005 JumpIfEqual {14}
	006 Move X19, X0
	007 Move X0, [X0+104]
	008 Compare X0, 0
	009 JumpIfEqual {17}
	010 Move X1, [X19+272]
	011 Move X3, X31
	012 Call CStreamWriter.InternalWriteChars, X0, X1, X2
	013 Move [X19+280], W31
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return 
	017 Call 0x1C17F20

Method: System.Int32 Read(out System.Char[] dest, System.Int32 index, System.Int32 count)

Disassembly:
	0x033D018C STR W9, [X31 + 0x508]
	0x033D0190 BL 0x1C16E04
	0x033D0194 CBZ X20, 0x33D15CC
	0x033D0198 LDR X8, [X20]
	0x033D019C MOV X2, X0
	0x033D01A0 MOV X0, X20
	0x033D01A4 MOV X1, X21
	0x033D01A8 LDR X9, [X8 + 0x2E8]
	0x033D01AC LDR X3, [X8 + 0x2F0]
	0x033D01B0 BLR X9
	0x033D01B4 LDR X0, [X23]
	0x033D01B8 LDR X20, [X19]
	0x033D01BC MOVZ W8, 0x55
	0x033D01C0 ADD X1, X31, 0x4FC
	0x033D01C4 STR W8, [X31 + 0x4FC]
	0x033D01C8 BL 0x1C16E04
	0x033D01CC MOV X21, X0
	0x033D01D0 ADD X0, X31, 0x4F0
	0x033D01D4 MOVZ W2, 0x21
	0x033D01D8 MOV W1, W31
	0x033D01DC MOV W3, W31
	0x033D01E0 MOV W4, W31
	0x033D01E4 MOV W5, W31
	0x033D01E8 MOV X6, X31
	0x033D01EC STR W31, [X31 + 0x4F8]
	0x033D01F0 STR X31, [X31 + 0x4F0]
	0x033D01F4 BL 0x339D33C
	0x033D01F8 LDR X8, [X31 + 0x4F0]
	0x033D01FC LDR W9, [X31 + 0x4F8]
	0x033D0200 LDR X0, [X22]
	0x033D0204 ADD X1, X31, 0x4E0
	0x033D0208 STR X8, [X31 + 0x4E0]
	0x033D020C STR W9, [X31 + 0x4E8]
	0x033D0210 BL 0x1C16E04
	0x033D0214 CBZ X20, 0x33D15CC
	0x033D0218 LDR X8, [X20]
	0x033D021C MOV X2, X0
	0x033D0220 MOV X0, X20
	0x033D0224 MOV X1, X21
	0x033D0228 LDR X9, [X8 + 0x2E8]
	0x033D022C LDR X3, [X8 + 0x2F0]
	0x033D0230 BLR X9
	0x033D0234 LDR X0, [X23]
	0x033D0238 LDR X20, [X19]
	0x033D023C MOVZ W8, 0x57
	0x033D0240 ADD X1, X31, 0x4DC
	0x033D0244 STR W8, [X31 + 0x4DC]
	0x033D0248 BL 0x1C16E04
	0x033D024C MOV X21, X0
	0x033D0250 ADD X0, X31, 0x4D0
	0x033D0254 MOVZ W2, 0x26
	0x033D0258 MOV W1, W31
	0x033D025C MOV W3, W31
	0x033D0260 MOV W4, W31
	0x033D0264 MOV W5, W31
	0x033D0268 MOV X6, X31
	0x033D026C STR W31, [X31 + 0x4D8]
	0x033D0270 STR X31, [X31 + 0x4D0]
	0x033D0274 BL 0x339D33C
	0x033D0278 LDR X8, [X31 + 0x4D0]
	0x033D027C LDR W9, [X31 + 0x4D8]
	0x033D0280 LDR X0, [X22]
	0x033D0284 ADD X1, X31, 0x4C0
	0x033D0288 STR X8, [X31 + 0x4C0]
	0x033D028C STR W9, [X31 + 0x4C8]
	0x033D0290 BL 0x1C16E04
	0x033D0294 CBZ X20, 0x33D15CC
	0x033D0298 LDR X8, [X20]
	0x033D029C MOV X2, X0
	0x033D02A0 MOV X0, X20
	0x033D02A4 MOV X1, X21
	0x033D02A8 LDR X9, [X8 + 0x2E8]
	0x033D02AC LDR X3, [X8 + 0x2F0]
	0x033D02B0 BLR X9
	0x033D02B4 LDR X0, [X23]
	0x033D02B8 LDR X20, [X19]
	0x033D02BC MOVZ W8, 0x8B
	0x033D02C0 ADD X1, X31, 0x4BC
	0x033D02C4 STR W8, [X31 + 0x4BC]
	0x033D02C8 BL 0x1C16E04
	0x033D02CC MOV X21, X0
	0x033D02D0 ADD X0, X31, 0x4B0
	0x033D02D4 MOVZ W2, 0x67
	0x033D02D8 MOV W1, W31
	0x033D02DC MOV W3, W31
	0x033D02E0 MOV W4, W31
	0x033D02E4 MOV W5, W31
	0x033D02E8 MOV X6, X31
	0x033D02EC STR W31, [X31 + 0x4B8]
	0x033D02F0 STR X31, [X31 + 0x4B0]
	0x033D02F4 BL 0x339D33C
	0x033D02F8 LDR X8, [X31 + 0x4B0]
	0x033D02FC LDR W9, [X31 + 0x4B8]
	0x033D0300 LDR X0, [X22]
	0x033D0304 ADD X1, X31, 0x4A0
	0x033D0308 STR X8, [X31 + 0x4A0]
	0x033D030C STR W9, [X31 + 0x4A8]
	0x033D0310 BL 0x1C16E04
	0x033D0314 CBZ X20, 0x33D15CC
	0x033D0318 LDR X8, [X20]
	0x033D031C MOV X2, X0
	0x033D0320 MOV X0, X20
	0x033D0324 MOV X1, X21
	0x033D0328 LDR X9, [X8 + 0x2E8]
	0x033D032C LDR X3, [X8 + 0x2F0]
	0x033D0330 BLR X9
	0x033D0334 LDR X0, [X23]
	0x033D0338 LDR X20, [X19]
	0x033D033C MOVZ W8, 0x8C
	0x033D0340 ADD X1, X31, 0x49C
	0x033D0344 STR W8, [X31 + 0x49C]
	0x033D0348 BL 0x1C16E04
	0x033D034C MOV X21, X0
	0x033D0350 ADD X0, X31, 0x490
	0x033D0354 MOVZ W2, 0x69
	0x033D0358 MOV W1, W31
	0x033D035C MOV W3, W31
	0x033D0360 MOV W4, W31
	0x033D0364 MOV W5, W31
	0x033D0368 MOV X6, X31
	0x033D036C STR W31, [X31 + 0x498]
	0x033D0370 STR X31, [X31 + 0x490]
	0x033D0374 BL 0x339D33C
	0x033D0378 LDR X8, [X31 + 0x490]
	0x033D037C LDR W9, [X31 + 0x498]
	0x033D0380 LDR X0, [X22]
	0x033D0384 ADD X1, X31, 0x480
	0x033D0388 STR X8, [X31 + 0x480]
	0x033D038C STR W9, [X31 + 0x488]
	0x033D0390 BL 0x1C16E04
	0x033D0394 CBZ X20, 0x33D15CC
	0x033D0398 LDR X8, [X20]
	0x033D039C MOV X2, X0
	0x033D03A0 MOV X0, X20
	0x033D03A4 MOV X1, X21
	0x033D03A8 LDR X9, [X8 + 0x2E8]
	0x033D03AC LDR X3, [X8 + 0x2F0]
	0x033D03B0 BLR X9
	0x033D03B4 LDR X0, [X23]
	0x033D03B8 LDR X20, [X19]
	0x033D03BC MOVZ W8, 0x8D
	0x033D03C0 ADD X1, X31, 0x47C
	0x033D03C4 STR W8, [X31 + 0x47C]
	0x033D03C8 BL 0x1C16E04
	0x033D03CC MOV X21, X0
	0x033D03D0 ADD X0, X31, 0x470
	0x033D03D4 MOVZ W2, 0x65
	0x033D03D8 MOV W1, W31
	0x033D03DC MOV W3, W31
	0x033D03E0 MOV W4, W31
	0x033D03E4 MOV W5, W31
	0x033D03E8 MOV X6, X31
	0x033D03EC STR W31, [X31 + 0x478]
	0x033D03F0 STR X31, [X31 + 0x470]
	0x033D03F4 BL 0x339D33C
	0x033D03F8 LDR X8, [X31 + 0x470]
	0x033D03FC LDR W9, [X31 + 0x478]
	0x033D0400 LDR X0, [X22]
	0x033D0404 ADD X1, X31, 0x460
	0x033D0408 STR X8, [X31 + 0x460]
	0x033D040C STR W9, [X31 + 0x468]
	0x033D0410 BL 0x1C16E04
	0x033D0414 CBZ X20, 0x33D15CC
	0x033D0418 LDR X8, [X20]
	0x033D041C MOV X2, X0
	0x033D0420 MOV X0, X20
	0x033D0424 MOV X1, X21
	0x033D0428 LDR X9, [X8 + 0x2E8]
	0x033D042C LDR X3, [X8 + 0x2F0]
	0x033D0430 BLR X9
	0x033D0434 LDR X0, [X23]
	0x033D0438 LDR X20, [X19]
	0x033D043C MOVZ W8, 0x8E
	0x033D0440 ADD X1, X31, 0x45C
	0x033D0444 STR W8, [X31 + 0x45C]
	0x033D0448 BL 0x1C16E04
	0x033D044C MOV X21, X0
	0x033D0450 ADD X0, X31, 0x450
	0x033D0454 MOVZ W2, 0x61
	0x033D0458 MOV W1, W31
	0x033D045C MOV W3, W31
	0x033D0460 MOV W4, W31
	0x033D0464 MOV W5, W31
	0x033D0468 MOV X6, X31
	0x033D046C STR W31, [X31 + 0x458]
	0x033D0470 STR X31, [X31 + 0x450]
	0x033D0474 BL 0x339D33C
	0x033D0478 LDR X8, [X31 + 0x450]
	0x033D047C LDR W9, [X31 + 0x458]
	0x033D0480 LDR X0, [X22]
	0x033D0484 ADD X1, X31, 0x440
	0x033D0488 STR X8, [X31 + 0x440]
	0x033D048C STR W9, [X31 + 0x448]
	0x033D0490 BL 0x1C16E04
	0x033D0494 CBZ X20, 0x33D15CC
	0x033D0498 LDR X8, [X20]
	0x033D049C MOV X2, X0
	0x033D04A0 MOV X0, X20
	0x033D04A4 MOV X1, X21
	0x033D04A8 LDR X9, [X8 + 0x2E8]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0x100E000
	015 Move X20, 0xD24000
	016 Move W8, [X22+684]
	017 Move X20, [X20+2288]
	018 Move W27, W3
	019 Move W23, W2
	020 Move X21, X1
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0xD5C000
	027 Move X0, [X0+1688]
	028 Call 0x1C17CF4
	029 Move X0, 0xD24000
	030 Move X0, [X0+2288]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+684], W8
	034 Move X0, [X20]
	035 Move [X31+12], W31
	036 Call 0x1C17F10
	037 Move X1, X31
	038 Move X20, X0
	039 Call StringBuilder..ctor, X0
	040 Move W1, 1
	041 Move X0, X19
	042 Call TermInfoDriver.GetKeyFromBuffer, X0, X1
	043 Move W24, W31
	044 Compare X0, 0
	045 JumpIfEqual {90}
	046 Move X26, 0xD5C000
	047 Move X26, [X26+1688]
	048 Move X8, [X0]
	049 Move X1, [X26]
	050 Move X8, [X8+64]
	051 Move X9, [X1+64]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Call 0x1C17E08
	054 Move X25, [X0]
	055 Move X8, X25
	056 ShiftRight X8, 32
	057 And X8, X8, 0x7FFFFFFF
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Compare X20, 0
	060 JumpIfEqual {180}
	061 Move X0, X20
	062 Move X1, X31
	063 Call StringBuilder.get_Length, X0
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X0, X20
	066 Move X1, X31
	067 Call StringBuilder.get_Length, X0
	068 Subtract W1, W0, 1
	069 Move X0, X20
	070 Move X2, X31
	071 Call StringBuilder.set_Length, X0, X1
	072 Move W1, 1
	073 Move X0, X19
	074 Call TermInfoDriver.GetKeyFromBuffer, X0, X1
	075 Compare X0, 0
	076 JumpIfNotEqual {48}
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Compare X20, 0
	079 JumpIfEqual {180}
	080 Move X0, X20
	081 Move X1, X31
	082 Call StringBuilder.get_Length, X0
	083 Move W24, W0
	084 Compare X20, 0
	085 JumpIfEqual {180}
	086 Move X0, X20
	087 Move W1, W25
	088 Move X2, X31
	089 Call StringBuilder.Append, X0, X1
	090 Move V0, [X19+24]
	091 Move W29, W31
	092 Move W28, W27
	093 Move [X31+4], W23
	094 Move [X31+8], W27
	095 Move [X19+256], D0
	096 Add X1, X31, 12
	097 Move X0, X19
	098 Call TermInfoDriver.ReadKeyInternal, X0, X1
	099 Move W8, [X31+12]
	100 And W9, W29, 1
	101 Move X22, X0
	102 ShiftRight X22, 32
	103 And X22, X22, 0x7FFFFFFF
	104 Move X26, X0
	105 Or W23, W8, W9
	106 NotImplemented "Instruction CMP not yet implemented."
	107 NotImplemented "Instruction CSET not yet implemented."
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X27, X1
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Compare X20, 0
	112 JumpIfEqual {180}
	113 Move X0, X20
	114 Move X1, X31
	115 Call StringBuilder.get_Length, X0
	116 Move W24, W0
	117 Compare X20, 0
	118 JumpIfEqual {180}
	119 Move X0, X20
	120 Move X1, X31
	121 Call StringBuilder.get_Length, X0
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X0, X20
	124 Move X1, X31
	125 Call StringBuilder.get_Length, X0
	126 Subtract W1, W0, 1
	127 Move X0, X20
	128 Move X2, X31
	129 Call StringBuilder.set_Length, X0, X1
	130 Compare W23, 0
	131 JumpIfNotEqual {140}
	132 Compare X20, 0
	133 JumpIfEqual {180}
	134 Move X0, X20
	135 Move W1, W26
	136 Move X2, X31
	137 Call StringBuilder.Append, X0, X1
	138 Compare W23, 0
	139 JumpIfEqual {145}
	140 NotImplemented "Instruction BFM not yet implemented."
	141 Move X0, X19
	142 Move X1, X26
	143 Move X2, X25
	144 Call TermInfoDriver.Echo, X0, X1
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X0, X19
	147 Call TermInfoDriver.EchoFlush, X0
	148 Move W8, [X31+8]
	149 NotImplemented "Instruction MOVI not yet implemented."
	150 Move [X19+256], D0
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move W8, [X31+4]
	153 Move X23, X31
	154 Move X25, 1
	155 Move W22, W8
	156 Move X24, X22
	157 ShiftRight X24, 32
	158 And X24, X24, 0x7FFFFFFF
	159 Move X0, X20
	160 Move X1, X31
	161 Call StringBuilder.get_Length, X0
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X0, X20
	164 Move W1, W23
	165 Move X2, X31
	166 Call StringBuilder.get_Chars, X0, X1
	167 Compare X21, 0
	168 JumpIfEqual {180}
	169 Move W8, [X21+24]
	170 Add X9, X22, X23
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Add X23, X23, 1
	173 Add X8, X21, X24
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Add X24, X24, X25
	176 NotImplemented "Instruction STRH not yet implemented."
	177 Move W23, W28
	178 Compare X20, 0
	179 JumpIfNotEqual {182}
	180 Call 0x1C17F20
	181 Move W23, W31
	182 Move X0, X20
	183 Move X1, X31
	184 Call StringBuilder.get_Length, X0
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move W21, W23
	187 Move X0, X20
	188 Move W1, W21
	189 Move X2, X31
	190 Call StringBuilder.get_Chars, X0, X1
	191 And W1, W0, 0xFFFF
	192 Move X0, X19
	193 Call TermInfoDriver.AddToBuffer, X0, X1
	194 Move X0, X20
	195 Move X1, X31
	196 Add W21, W21, 1
	197 Call StringBuilder.get_Length, X0
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move W0, W23
	200 Move X20, [X31+96]
	201 Move X19, [X31+104]
	202 Move X22, [X31+80]
	203 Move X21, [X31+88]
	204 Move X24, [X31+64]
	205 Move X23, [X31+72]
	206 Move X26, [X31+48]
	207 Move X25, [X31+56]
	208 Move X28, [X31+32]
	209 Move X27, [X31+40]
	210 Move X29, [X31+16]
	211 Move X30, [X31+24]
	212 Add X31, X31, 112
	213 Return X0
	214 Call 0x1C181E0
	215 Call 0x1C17F28

Method: System.ConsoleKeyInfo ReadKey(System.Boolean intercept)

Disassembly:
	0x033D04AC LDR X3, [X8 + 0x2F0]
	0x033D04B0 BLR X9
	0x033D04B4 LDR X0, [X23]
	0x033D04B8 LDR X20, [X19]
	0x033D04BC MOVZ W8, 0x8F
	0x033D04C0 ADD X1, X31, 0x43C
	0x033D04C4 STR W8, [X31 + 0x43C]
	0x033D04C8 BL 0x1C16E04
	0x033D04CC MOV X21, X0
	0x033D04D0 ADD X0, X31, 0x430
	0x033D04D4 MOVZ W2, 0x63
	0x033D04D8 MOV W1, W31
	0x033D04DC MOV W3, W31
	0x033D04E0 MOV W4, W31
	0x033D04E4 MOV W5, W31
	0x033D04E8 MOV X6, X31
	0x033D04EC STR W31, [X31 + 0x438]
	0x033D04F0 STR X31, [X31 + 0x430]
	0x033D04F4 BL 0x339D33C
	0x033D04F8 LDR X8, [X31 + 0x430]
	0x033D04FC LDR W9, [X31 + 0x438]
	0x033D0500 LDR X0, [X22]
	0x033D0504 ADD X1, X31, 0x420
	0x033D0508 STR X8, [X31 + 0x420]
	0x033D050C STR W9, [X31 + 0x428]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W21, W1
	007 Add X1, X31, 12
	008 Move X19, X0
	009 Move [X31+12], W31
	010 Call TermInfoDriver.ReadKeyInternal, X0, X1
	011 Move W8, [X31+12]
	012 Move X20, X0
	013 NotImplemented "Instruction BIC not yet implemented."
	014 And X21, X1, 0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {25}
	019 Move X0, X19
	020 Move X1, X20
	021 Move X2, X21
	022 Call TermInfoDriver.Echo, X0, X1
	023 Move X0, X19
	024 Call TermInfoDriver.EchoFlush, X0
	025 Move X0, X20
	026 Move X1, X21
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X30, [X31+16]
	030 Move X21, [X31+24]
	031 Add X31, X31, 48
	032 Return X0

Method: System.String ReadLine()

Disassembly:
	0x033D0510 BL 0x1C16E04
	0x033D0514 CBZ X20, 0x33D15CC

ISIL:
	001 Move W1, 1

Method: System.String ReadToEnd()

Disassembly:
	0x033D06F4 BL 0x339D33C
	0x033D06F8 LDR X8, [X31 + 0x3B0]

ISIL:
	001 Move W1, W31
	002 Call TermInfoDriver.ReadUntilConditionInternal, X0, X1
	003 Return X0

Method: System.String ReadUntilConditionInternal(System.Boolean haltOnNewLine)

Disassembly:
	0x033D0518 LDR X8, [X20]
	0x033D051C MOV X2, X0
	0x033D0520 MOV X0, X20
	0x033D0524 MOV X1, X21
	0x033D0528 LDR X9, [X8 + 0x2E8]
	0x033D052C LDR X3, [X8 + 0x2F0]
	0x033D0530 BLR X9
	0x033D0534 LDR X0, [X23]
	0x033D0538 LDR X20, [X19]
	0x033D053C MOVZ W8, 0x94
	0x033D0540 ADD X1, X31, 0x41C
	0x033D0544 STR W8, [X31 + 0x41C]
	0x033D0548 BL 0x1C16E04
	0x033D054C MOV X21, X0
	0x033D0550 ADD X0, X31, 0x410
	0x033D0554 MOVZ W2, 0x9
	0x033D0558 MOVZ W3, 0x1
	0x033D055C MOV W1, W31
	0x033D0560 MOV W4, W31
	0x033D0564 MOV W5, W31
	0x033D0568 MOV X6, X31
	0x033D056C STR W31, [X31 + 0x418]
	0x033D0570 STR X31, [X31 + 0x410]
	0x033D0574 BL 0x339D33C
	0x033D0578 LDR X8, [X31 + 0x410]
	0x033D057C LDR W9, [X31 + 0x418]
	0x033D0580 LDR X0, [X22]
	0x033D0584 ADD X1, X31, 0x400
	0x033D0588 STR X8, [X31 + 0x400]
	0x033D058C STR W9, [X31 + 0x408]
	0x033D0590 BL 0x1C16E04
	0x033D0594 CBZ X20, 0x33D15CC
	0x033D0598 LDR X8, [X20]
	0x033D059C MOV X2, X0
	0x033D05A0 MOV X0, X20
	0x033D05A4 MOV X1, X21
	0x033D05A8 LDR X9, [X8 + 0x2E8]
	0x033D05AC LDR X3, [X8 + 0x2F0]
	0x033D05B0 BLR X9
	0x033D05B4 LDR X0, [X23]
	0x033D05B8 LDR X20, [X19]
	0x033D05BC MOVZ W8, 0x9E
	0x033D05C0 ADD X1, X31, 0x3FC
	0x033D05C4 STR W8, [X31 + 0x3FC]
	0x033D05C8 BL 0x1C16E04
	0x033D05CC MOV X21, X0
	0x033D05D0 ADD X0, X31, 0x3F0
	0x033D05D4 MOVZ W2, 0x24
	0x033D05D8 MOV W1, W31
	0x033D05DC MOV W3, W31
	0x033D05E0 MOV W4, W31
	0x033D05E4 MOV W5, W31
	0x033D05E8 MOV X6, X31
	0x033D05EC STR W31, [X31 + 0x3F8]
	0x033D05F0 STR X31, [X31 + 0x3F0]
	0x033D05F4 BL 0x339D33C
	0x033D05F8 LDR X8, [X31 + 0x3F0]
	0x033D05FC LDR W9, [X31 + 0x3F8]
	0x033D0600 LDR X0, [X22]
	0x033D0604 ADD X1, X31, 0x3E0
	0x033D0608 STR X8, [X31 + 0x3E0]
	0x033D060C STR W9, [X31 + 0x3E8]
	0x033D0610 BL 0x1C16E04
	0x033D0614 CBZ X20, 0x33D15CC
	0x033D0618 LDR X8, [X20]
	0x033D061C MOV X2, X0
	0x033D0620 MOV X0, X20
	0x033D0624 MOV X1, X21
	0x033D0628 LDR X9, [X8 + 0x2E8]
	0x033D062C LDR X3, [X8 + 0x2F0]
	0x033D0630 BLR X9
	0x033D0634 LDR X0, [X23]
	0x033D0638 LDR X20, [X19]
	0x033D063C MOVZ W8, 0xA2
	0x033D0640 ADD X1, X31, 0x3DC
	0x033D0644 STR W8, [X31 + 0x3DC]
	0x033D0648 BL 0x1C16E04
	0x033D064C MOV X21, X0
	0x033D0650 ADD X0, X31, 0x3D0
	0x033D0654 MOVZ W1, 0x43
	0x033D0658 MOVZ W2, 0x43
	0x033D065C MOVZ W4, 0x1
	0x033D0660 MOV W3, W31
	0x033D0664 MOV W5, W31
	0x033D0668 MOV X6, X31
	0x033D066C STR W31, [X31 + 0x3D8]
	0x033D0670 STR X31, [X31 + 0x3D0]
	0x033D0674 BL 0x339D33C
	0x033D0678 LDR X8, [X31 + 0x3D0]
	0x033D067C LDR W9, [X31 + 0x3D8]
	0x033D0680 LDR X0, [X22]
	0x033D0684 ADD X1, X31, 0x3C0
	0x033D0688 STR X8, [X31 + 0x3C0]
	0x033D068C STR W9, [X31 + 0x3C8]
	0x033D0690 BL 0x1C16E04
	0x033D0694 CBZ X20, 0x33D15CC
	0x033D0698 LDR X8, [X20]
	0x033D069C MOV X2, X0
	0x033D06A0 MOV X0, X20
	0x033D06A4 MOV X1, X21
	0x033D06A8 LDR X9, [X8 + 0x2E8]
	0x033D06AC LDR X3, [X8 + 0x2F0]
	0x033D06B0 BLR X9
	0x033D06B4 LDR X0, [X23]
	0x033D06B8 LDR X20, [X19]
	0x033D06BC MOVZ W8, 0xA4
	0x033D06C0 ADD X1, X31, 0x3BC
	0x033D06C4 STR W8, [X31 + 0x3BC]
	0x033D06C8 BL 0x1C16E04
	0x033D06CC MOV X21, X0
	0x033D06D0 ADD X0, X31, 0x3B0
	0x033D06D4 MOVZ W2, 0x23
	0x033D06D8 MOV W1, W31
	0x033D06DC MOV W3, W31
	0x033D06E0 MOV W4, W31
	0x033D06E4 MOV W5, W31
	0x033D06E8 MOV X6, X31
	0x033D06EC STR W31, [X31 + 0x3B8]
	0x033D06F0 STR X31, [X31 + 0x3B0]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x100E000
	013 Move W8, [X21+685]
	014 Move W20, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xD24000
	021 Move X0, [X0+2288]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+685], W8
	025 Move [X31+12], W31
	026 Move X21, 0xD24000
	027 Move W8, [X19+160]
	028 Move X21, [X21+2288]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Move X0, X19
	032 Call TermInfoDriver.Init, X0
	033 Move X0, X19
	034 Call TermInfoDriver.GetCursorPosition, X0
	035 Move X0, [X21]
	036 Call 0x1C17F10
	037 Move X1, X31
	038 Move X21, X0
	039 Call StringBuilder..ctor, X0
	040 Move V0, [X19+24]
	041 Move X8, [X19+264]
	042 Move [X19+256], D0
	043 Compare X8, 0
	044 JumpIfEqual {138}
	045 Move W9, [X8+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W25, [X8+36]
	048 Move W26, W31
	049 Add X1, X31, 12
	050 Move X0, X19
	051 Call TermInfoDriver.ReadKeyInternal, X0, X1
	052 Move W8, [X31+12]
	053 And W9, W26, 1
	054 Move X23, X0
	055 Move X24, X1
	056 Or W27, W8, W9
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction CSET not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X28, X0
	061 ShiftRight X28, 32
	062 And X28, X28, 0x7FFFFFFF
	063 And W31, W23, 0xFFFF
	064 Compare X21, 0
	065 JumpIfEqual {138}
	066 Move X0, X21
	067 Move X1, X31
	068 Call StringBuilder.get_Length, X0
	069 Compare W0, 0
	070 JumpIfEqual {125}
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move TEMP, X20
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {81}
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move TEMP, X20
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {84}
	081 Move W28, 1
	082 Compare W27, 0
	083 JumpIfNotEqual {104}
	084 Compare X21, 0
	085 JumpIfEqual {138}
	086 Move X0, X21
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X1, X31
	089 Call StringBuilder.get_Length, X0
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X0, X21
	092 Move X1, X31
	093 Call StringBuilder.get_Length, X0
	094 Subtract W1, W0, 1
	095 Move X0, X21
	096 Move X2, X31
	097 Call StringBuilder.set_Length, X0, X1
	098 Move W1, W23
	099 Move X2, X31
	100 Call StringBuilder.Append, X0, X1
	101 Move W28, W31
	102 Compare W27, 0
	103 JumpIfEqual {109}
	104 NotImplemented "Instruction BFM not yet implemented."
	105 Move X0, X19
	106 Move X1, X23
	107 Move X2, X22
	108 Call TermInfoDriver.Echo, X0, X1
	109 Compare W28, 0
	110 JumpIfEqual {49}
	111 Move W28, W31
	112 Compare W28, 0
	113 JumpIfEqual {49}
	114 Move X0, X19
	115 Call TermInfoDriver.EchoFlush, X0
	116 NotImplemented "Instruction MOVI not yet implemented."
	117 Move [X19+256], D0
	118 Compare X21, 0
	119 JumpIfEqual {138}
	120 Move X8, [X21]
	121 Move X0, X21
	122 Move X9, [X8+360]
	123 Move X1, [X8+368]
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move X0, X31
	126 Move X20, [X31+80]
	127 Move X19, [X31+88]
	128 Move X22, [X31+64]
	129 Move X21, [X31+72]
	130 Move X24, [X31+48]
	131 Move X23, [X31+56]
	132 Move X26, [X31+32]
	133 Move X25, [X31+40]
	134 Move X28, [X31+16]
	135 Move X27, [X31+24]
	136 Move X30, [X31+96]
	137 Return X0
	138 Call 0x1C17F20
	139 Call 0x1C17F28

Method: System.Void ResetColor()

Disassembly:
	0x033D06FC LDR W9, [X31 + 0x3B8]
	0x033D0700 LDR X0, [X22]
	0x033D0704 ADD X1, X31, 0x3A0
	0x033D0708 STR X8, [X31 + 0x3A0]
	0x033D070C STR W9, [X31 + 0x3A8]
	0x033D0710 BL 0x1C16E04
	0x033D0714 CBZ X20, 0x33D15CC
	0x033D0718 LDR X8, [X20]
	0x033D071C MOV X2, X0
	0x033D0720 MOV X0, X20
	0x033D0724 MOV X1, X21
	0x033D0728 LDR X9, [X8 + 0x2E8]
	0x033D072C LDR X3, [X8 + 0x2F0]
	0x033D0730 BLR X9
	0x033D0734 LDR X0, [X23]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+160]
	004 Move X19, X0
	005 Compare W8, 0
	006 JumpIfNotEqual {9}
	007 Move X0, X19
	008 Call TermInfoDriver.Init, X0
	009 Move X8, [X19+184]
	010 Move W9, 184
	011 Move X0, X19
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move W8, 192
	014 NotImplemented "Instruction CSEL not yet implemented."
	015 Move X1, [X19]
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Call TermInfoDriver.WriteConsole, X0, X1
	019 Return 

Method: System.Void SetCursorPosition(System.Int32 left, System.Int32 top)

Disassembly:
	0x033CEC04 B 0x33CEC18
	0x033CEC08 B 0x33CEC18
	0x033CEC0C B 0x33CEC18
	0x033CEC10 B 0x33CEC18
	0x033CEC14 B 0x33CEC18
	0x033CEC18 MOV X22, X0
	0x033CEC1C CMP W1, 0x1
	0x033CEC20 B.NE 0x33CEC40
	0x033CEC24 MOV X0, X22
	0x033CEC28 BL 0x3EB1AD0
	0x033CEC2C LDR X21, [X0]
	0x033CEC30 BL 0x3EB1AE0
	0x033CEC34 MOV W23, W31
	0x033CEC38 MOV W22, W31
	0x033CEC3C B 0x33CEB00
	0x033CEC40 MOV X21, X31
	0x033CEC44 B 0x33CEC4C
	0x033CEC48 MOV X22, X0
	0x033CEC4C ADRP X8, 0xD25000
	0x033CEC50 LDR X8, [X8 + 0xE00]
	0x033CEC54 LDR X1, [X8]
	0x033CEC58 MOV X0, X20
	0x033CEC5C BL 0x1C16E00
	0x033CEC60 MOV X19, X0
	0x033CEC64 CBZ X0, 0x33CECC8
	0x033CEC68 LDR X8, [X19]
	0x033CEC6C ADRP X10, 0xD25000
	0x033CEC70 LDRH W9, [X8 + 0x12E]
	0x033CEC74 LDR X10, [X10 + 0xE00]
	0x033CEC78 LDR X1, [X10]
	0x033CEC7C CBZ X9, 0x33CECA0
	0x033CEC80 LDR X10, [X8 + 0xB0]
	0x033CEC84 ADD X10, X10, 0x8
	0x033CEC88 LDUR X11, [X10 - 0x8]
	0x033CEC8C CMP X11, X1
	0x033CEC90 B.EQ 0x33CECB0
	0x033CEC94 SUBS X9, X9, 0x1
	0x033CEC98 ADD X10, X10, 0x10
	0x033CEC9C B.NE 0x33CEC88
	0x033CECA0 MOV X0, X19
	0x033CECA4 MOV W2, W31
	0x033CECA8 BL 0x1C5C788
	0x033CECAC B 0x33CECBC
	0x033CECB0 LDRSW X9, [X10]
	0x033CECB4 ADD X8, X8, X9, 0x4, LSL
	0x033CECB8 ADD X0, X8, 0x138
	0x033CECBC LDP X8, X1, [X0]
	0x033CECC0 MOV X0, X19
	0x033CECC4 BLR X8
	0x033CECC8 CBNZ X21, 0x33CECD4
	0x033CECCC MOV X0, X22
	0x033CECD0 BL 0x1D2C690
	0x033CECD4 MOV X0, X21
	0x033CECD8 BL 0x1C16F18
	0x033CECDC BL 0x1990590
	0x033CECE0 STR X30, [X31 - 0x30]!
	0x033CECE4 STP X22, X21, [X31 + 0x10]
	0x033CECE8 STP X20, X19, [X31 + 0x20]
	0x033CECEC ADRP X21, 0x100F000
	0x033CECF0 LDRB W8, [X21 + 0x2AA]
	0x033CECF4 MOV X19, X1
	0x033CECF8 MOV X20, X0
	0x033CECFC TBNZ X8, 0x0, 0x33CED20
	0x033CED00 ADRP X0, 0xD59000
	0x033CED04 LDR X0, [X0 + 0x7B8]
	0x033CED08 BL 0x1C16CF4
	0x033CED0C ADRP X0, 0xD5D000
	0x033CED10 LDR X0, [X0 + 0x698]
	0x033CED14 BL 0x1C16CF4
	0x033CED18 MOVZ W8, 0x1
	0x033CED1C STRB W8, [X21 + 0x2AA]
	0x033CED20 LDRB W8, [X20 + 0xA0]
	0x033CED24 CBNZ W8, 0x33CED30
	0x033CED28 MOV X0, X20
	0x033CED2C BL 0x33CCEF0
	0x033CED30 MOV X0, X20
	0x033CED34 BL 0x33CEEA0
	0x033CED38 MOVZ W1, 0x1
	0x033CED3C MOV X0, X20
	0x033CED40 BL 0x33CE510
	0x033CED44 CBZ X0, 0x33CED50
	0x033CED48 MOV W22, W31
	0x033CED4C B 0x33CEE4C
	0x033CED50 ADRP X21, 0xD59000
	0x033CED54 LDR X21, [X21 + 0x7B8]
	0x033CED58 MOVZ W22, 0x1
	0x033CED5C LDR X0, [X21]
	0x033CED60 LDR W8, [X0 + 0xE0]
	0x033CED64 CBNZ W8, 0x33CED6C
	0x033CED68 BL 0x1C16DFC
	0x033CED6C MOVZ W0, 0x96
	0x033CED70 BL 0x1C87668
	0x033CED74 CMP W0, 0x1
	0x033CED78 B.LT 0x33CEDC0
	0x033CED7C LDR X0, [X20 + 0x60]
	0x033CED80 CBZ X0, 0x33CEE98
	0x033CED84 LDR X8, [X0]
	0x033CED88 LDP X9, X1, [X8 + 0x1C8]
	0x033CED8C BLR X9
	0x033CED90 MOV W1, W0
	0x033CED94 MOV X0, X20
	0x033CED98 BL 0x33CE2F0
	0x033CED9C LDR X0, [X21]
	0x033CEDA0 LDR W8, [X0 + 0xE0]
	0x033CEDA4 CBNZ W8, 0x33CEDAC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1010000
	007 Move W8, [X22+686]
	008 Move W19, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD5F000
	016 Move X0, [X0+2864]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+686], W8
	020 Move W8, [X21+160]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Move X0, X21
	024 Call TermInfoDriver.Init, X0
	025 Move X0, X21
	026 Call TermInfoDriver.CheckWindowDimensions, X0
	027 Move TEMP, X20
	028 And TEMP, TEMP, -2147483648
	029 Compare TEMP, -2147483648
	030 JumpIfEqual {73}
	031 Move W8, [X21+124]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move TEMP, X19
	034 And TEMP, TEMP, -2147483648
	035 Compare TEMP, -2147483648
	036 JumpIfEqual {84}
	037 Move W8, [X21+120]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X22, [X21+200]
	040 Compare X22, 0
	041 JumpIfEqual {102}
	042 Move X8, 0xD5F000
	043 Move X8, [X8+2864]
	044 Move W1, 2
	045 Move X0, [X8]
	046 Call 0x1C17D6C
	047 Compare X0, 0
	048 JumpIfEqual {120}
	049 Move W8, [X0+24]
	050 Move X1, X0
	051 Compare W8, 0
	052 JumpIfEqual {101}
	053 Move W9, W19
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move [X1+32], X9
	056 Move [X1+40], X31
	057 Move W8, W20
	058 Move X0, X22
	059 Move [X1+48], X8
	060 Move [X1+56], X31
	061 Call ParameterizedStrings.Evaluate, X0, X1
	062 Move X1, X0
	063 Move X0, X21
	064 Call TermInfoDriver.WriteConsole, X0, X1
	065 Move [X21+24], W20
	066 Move [X21+28], W19
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Return 
	073 Move X0, 0xD2E000
	074 Move X0, [X0+1888]
	075 Call 0x1C17D08
	076 Call 0x1C17F10
	077 Move X19, X0
	078 Move X0, 0xD5F000
	079 Move X0, [X0+2872]
	080 Call 0x1C17D08
	081 Move X20, X0
	082 Move X0, 0xD5F000
	083 Move X0, [X0+2880]
	084 Move X0, 0xD2E000
	085 Move X0, [X0+1888]
	086 Call 0x1C17D08
	087 Call 0x1C17F10
	088 Move X19, X0
	089 Move X0, 0xD5F000
	090 Move X0, [X0+2888]
	091 Call 0x1C17D08
	092 Move X20, X0
	093 Move X0, 0xD5F000
	094 Move X0, [X0+2896]
	095 Call 0x1C17D08
	096 Move X2, X0
	097 Move X0, X19
	098 Move X1, X20
	099 Move X3, X31
	100 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	101 Call 0x1C17F28
	102 Move X0, 0xD26000
	103 Move X0, [X0+2880]
	104 Call 0x1C17D08
	105 Call 0x1C17F10
	106 Move X19, X0
	107 Move X0, 0xD5F000
	108 Move X0, [X0+2904]
	109 Call 0x1C17D08
	110 Move X1, X0
	111 Move X0, X19
	112 Move X2, X31
	113 Call NotSupportedException..ctor, X0, X1
	114 Move X0, 0xD5F000
	115 Move X0, [X0+2912]
	116 Call 0x1C17D08
	117 Move X1, X0
	118 Move X0, X19
	119 Call 0x1C17DEC
	120 Call 0x1C17F20

Method: System.Void CreateKeyMap()

Disassembly:
	0x033D0738 LDR X20, [X19]
	0x033D073C MOVZ W8, 0xA5
	0x033D0740 ADD X1, X31, 0x39C
	0x033D0744 STR W8, [X31 + 0x39C]
	0x033D0748 BL 0x1C16E04
	0x033D074C MOV X21, X0
	0x033D0750 ADD X0, X31, 0x390
	0x033D0754 MOVZ W1, 0xA
	0x033D0758 MOVZ W2, 0xD
	0x033D075C MOV W3, W31
	0x033D0760 MOV W4, W31
	0x033D0764 MOV W5, W31
	0x033D0768 MOV X6, X31
	0x033D076C STR W31, [X31 + 0x398]
	0x033D0770 STR X31, [X31 + 0x390]
	0x033D0774 BL 0x339D33C
	0x033D0778 LDR X8, [X31 + 0x390]
	0x033D077C LDR W9, [X31 + 0x398]
	0x033D0780 LDR X0, [X22]
	0x033D0784 ADD X1, X31, 0x380
	0x033D0788 STR X8, [X31 + 0x380]
	0x033D078C STR W9, [X31 + 0x388]
	0x033D0790 BL 0x1C16E04
	0x033D0794 CBZ X20, 0x33D15CC
	0x033D0798 LDR X8, [X20]
	0x033D079C MOV X2, X0
	0x033D07A0 MOV X0, X20
	0x033D07A4 MOV X1, X21
	0x033D07A8 LDR X9, [X8 + 0x2E8]
	0x033D07AC LDR X3, [X8 + 0x2F0]
	0x033D07B0 BLR X9
	0x033D07B4 LDR X0, [X23]
	0x033D07B8 LDR X20, [X19]
	0x033D07BC MOVZ W8, 0xA8
	0x033D07C0 ADD X1, X31, 0x37C
	0x033D07C4 STR W8, [X31 + 0x37C]
	0x033D07C8 BL 0x1C16E04
	0x033D07CC MOV X21, X0
	0x033D07D0 ADD X0, X31, 0x370
	0x033D07D4 MOVZ W2, 0x2F
	0x033D07D8 MOV W1, W31
	0x033D07DC MOV W3, W31
	0x033D07E0 MOV W4, W31
	0x033D07E4 MOV W5, W31
	0x033D07E8 MOV X6, X31
	0x033D07EC STR W31, [X31 + 0x378]
	0x033D07F0 STR X31, [X31 + 0x370]
	0x033D07F4 BL 0x339D33C
	0x033D07F8 LDR X8, [X31 + 0x370]
	0x033D07FC LDR W9, [X31 + 0x378]
	0x033D0800 LDR X0, [X22]
	0x033D0804 ADD X1, X31, 0x360
	0x033D0808 STR X8, [X31 + 0x360]
	0x033D080C STR W9, [X31 + 0x368]
	0x033D0810 BL 0x1C16E04
	0x033D0814 CBZ X20, 0x33D15CC
	0x033D0818 LDR X8, [X20]
	0x033D081C MOV X2, X0
	0x033D0820 MOV X0, X20
	0x033D0824 MOV X1, X21
	0x033D0828 LDR X9, [X8 + 0x2E8]
	0x033D082C LDR X3, [X8 + 0x2F0]
	0x033D0830 BLR X9
	0x033D0834 LDR X0, [X23]
	0x033D0838 LDR X20, [X19]
	0x033D083C MOVZ W8, 0xB0
	0x033D0840 ADD X1, X31, 0x35C
	0x033D0844 STR W8, [X31 + 0x35C]
	0x033D0848 BL 0x1C16E04
	0x033D084C MOV X21, X0
	0x033D0850 ADD X0, X31, 0x350
	0x033D0854 MOVZ W2, 0x2A
	0x033D0858 MOV W1, W31
	0x033D085C MOV W3, W31
	0x033D0860 MOV W4, W31
	0x033D0864 MOV W5, W31
	0x033D0868 MOV X6, X31
	0x033D086C STR W31, [X31 + 0x358]
	0x033D0870 STR X31, [X31 + 0x350]
	0x033D0874 BL 0x339D33C
	0x033D0878 LDR X8, [X31 + 0x350]
	0x033D087C LDR W9, [X31 + 0x358]
	0x033D0880 LDR X0, [X22]
	0x033D0884 ADD X1, X31, 0x340
	0x033D0888 STR X8, [X31 + 0x340]
	0x033D088C STR W9, [X31 + 0x348]
	0x033D0890 BL 0x1C16E04
	0x033D0894 CBZ X20, 0x33D15CC
	0x033D0898 LDR X8, [X20]
	0x033D089C MOV X2, X0
	0x033D08A0 MOV X0, X20
	0x033D08A4 MOV X1, X21
	0x033D08A8 LDR X9, [X8 + 0x2E8]
	0x033D08AC LDR X3, [X8 + 0x2F0]
	0x033D08B0 BLR X9
	0x033D08B4 LDR X0, [X23]
	0x033D08B8 LDR X20, [X19]
	0x033D08BC MOVZ W8, 0xB9
	0x033D08C0 ADD X1, X31, 0x33C
	0x033D08C4 STR W8, [X31 + 0x33C]
	0x033D08C8 BL 0x1C16E04
	0x033D08CC MOV X21, X0
	0x033D08D0 ADD X0, X31, 0x330
	0x033D08D4 MOVZ W1, 0x5A
	0x033D08D8 MOVZ W2, 0x5A
	0x033D08DC MOVZ W4, 0x1
	0x033D08E0 MOV W3, W31
	0x033D08E4 MOV W5, W31
	0x033D08E8 MOV X6, X31
	0x033D08EC STR W31, [X31 + 0x338]
	0x033D08F0 STR X31, [X31 + 0x330]
	0x033D08F4 BL 0x339D33C
	0x033D08F8 LDR X8, [X31 + 0x330]
	0x033D08FC LDR W9, [X31 + 0x338]
	0x033D0900 LDR X0, [X22]
	0x033D0904 ADD X1, X31, 0x320
	0x033D0908 STR X8, [X31 + 0x320]
	0x033D090C STR W9, [X31 + 0x328]
	0x033D0910 BL 0x1C16E04
	0x033D0914 CBZ X20, 0x33D15CC
	0x033D0918 LDR X8, [X20]
	0x033D091C MOV X2, X0
	0x033D0920 MOV X0, X20
	0x033D0924 MOV X1, X21
	0x033D0928 LDR X9, [X8 + 0x2E8]
	0x033D092C LDR X3, [X8 + 0x2F0]
	0x033D0930 BLR X9
	0x033D0934 LDR X0, [X23]
	0x033D0938 LDR X20, [X19]
	0x033D093C MOVZ W8, 0xBA
	0x033D0940 ADD X1, X31, 0x31C
	0x033D0944 STR W8, [X31 + 0x31C]
	0x033D0948 BL 0x1C16E04
	0x033D094C MOV X21, X0
	0x033D0950 ADD X0, X31, 0x310
	0x033D0954 MOVZ W2, 0x24
	0x033D0958 MOVZ W3, 0x1
	0x033D095C MOV W1, W31
	0x033D0960 MOV W4, W31
	0x033D0964 MOV W5, W31
	0x033D0968 MOV X6, X31
	0x033D096C STR W31, [X31 + 0x318]
	0x033D0970 STR X31, [X31 + 0x310]
	0x033D0974 BL 0x339D33C
	0x033D0978 LDR X8, [X31 + 0x310]
	0x033D097C LDR W9, [X31 + 0x318]
	0x033D0980 LDR X0, [X22]
	0x033D0984 ADD X1, X31, 0x300
	0x033D0988 STR X8, [X31 + 0x300]
	0x033D098C STR W9, [X31 + 0x308]
	0x033D0990 BL 0x1C16E04
	0x033D0994 CBZ X20, 0x33D15CC
	0x033D0998 LDR X8, [X20]
	0x033D099C MOV X2, X0
	0x033D09A0 MOV X0, X20
	0x033D09A4 MOV X1, X21
	0x033D09A8 LDR X9, [X8 + 0x2E8]
	0x033D09AC LDR X3, [X8 + 0x2F0]
	0x033D09B0 BLR X9
	0x033D09B4 LDR X0, [X23]
	0x033D09B8 LDR X20, [X19]
	0x033D09BC MOVZ W8, 0xBD
	0x033D09C0 ADD X1, X31, 0x2FC
	0x033D09C4 STR W8, [X31 + 0x2FC]
	0x033D09C8 BL 0x1C16E04
	0x033D09CC MOV X21, X0
	0x033D09D0 ADD X0, X31, 0x2F0
	0x033D09D4 MOVZ W1, 0x43
	0x033D09D8 MOVZ W2, 0x43
	0x033D09DC MOVZ W3, 0x1
	0x033D09E0 MOVZ W4, 0x1
	0x033D09E4 MOV W5, W31
	0x033D09E8 MOV X6, X31
	0x033D09EC STR W31, [X31 + 0x2F8]
	0x033D09F0 STR X31, [X31 + 0x2F0]
	0x033D09F4 BL 0x339D33C
	0x033D09F8 LDR X8, [X31 + 0x2F0]
	0x033D09FC LDR W9, [X31 + 0x2F8]
	0x033D0A00 LDR X0, [X22]
	0x033D0A04 ADD X1, X31, 0x2E0
	0x033D0A08 STR X8, [X31 + 0x2E0]
	0x033D0A0C STR W9, [X31 + 0x2E8]
	0x033D0A10 BL 0x1C16E04
	0x033D0A14 CBZ X20, 0x33D15CC
	0x033D0A18 LDR X8, [X20]
	0x033D0A1C MOV X2, X0
	0x033D0A20 MOV X0, X20
	0x033D0A24 MOV X1, X21
	0x033D0A28 LDR X9, [X8 + 0x2E8]
	0x033D0A2C LDR X3, [X8 + 0x2F0]
	0x033D0A30 BLR X9
	0x033D0A34 LDR X0, [X23]
	0x033D0A38 LDR X20, [X19]
	0x033D0A3C MOVZ W8, 0xBF
	0x033D0A40 ADD X1, X31, 0x2DC
	0x033D0A44 STR W8, [X31 + 0x2DC]
	0x033D0A48 BL 0x1C16E04
	0x033D0A4C MOV X21, X0
	0x033D0A50 ADD X0, X31, 0x2D0
	0x033D0A54 MOVZ W1, 0x9
	0x033D0A58 MOVZ W2, 0x2E
	0x033D0A5C MOVZ W3, 0x1
	0x033D0A60 MOV W4, W31
	0x033D0A64 MOV W5, W31
	0x033D0A68 MOV X6, X31
	0x033D0A6C STR W31, [X31 + 0x2D8]
	0x033D0A70 STR X31, [X31 + 0x2D0]
	0x033D0A74 BL 0x339D33C
	0x033D0A78 LDR X8, [X31 + 0x2D0]
	0x033D0A7C LDR W9, [X31 + 0x2D8]
	0x033D0A80 LDR X0, [X22]
	0x033D0A84 ADD X1, X31, 0x2C0
	0x033D0A88 STR X8, [X31 + 0x2C0]
	0x033D0A8C STR W9, [X31 + 0x2C8]
	0x033D0A90 BL 0x1C16E04
	0x033D0A94 CBZ X20, 0x33D15CC
	0x033D0A98 LDR X8, [X20]
	0x033D0A9C MOV X2, X0
	0x033D0AA0 MOV X0, X20
	0x033D0AA4 MOV X1, X21
	0x033D0AA8 LDR X9, [X8 + 0x2E8]
	0x033D0AAC LDR X3, [X8 + 0x2F0]
	0x033D0AB0 BLR X9
	0x033D0AB4 LDR X0, [X23]
	0x033D0AB8 LDR X20, [X19]
	0x033D0ABC MOVZ W8, 0xC6
	0x033D0AC0 ADD X1, X31, 0x2BC
	0x033D0AC4 STR W8, [X31 + 0x2BC]
	0x033D0AC8 BL 0x1C16E04
	0x033D0ACC MOV X21, X0
	0x033D0AD0 ADD X0, X31, 0x2B0
	0x033D0AD4 MOVZ W2, 0x2F
	0x033D0AD8 MOVZ W3, 0x1
	0x033D0ADC MOV W1, W31
	0x033D0AE0 MOV W4, W31
	0x033D0AE4 MOV W5, W31
	0x033D0AE8 MOV X6, X31
	0x033D0AEC STR W31, [X31 + 0x2B8]
	0x033D0AF0 STR X31, [X31 + 0x2B0]
	0x033D0AF4 BL 0x339D33C
	0x033D0AF8 LDR X8, [X31 + 0x2B0]
	0x033D0AFC LDR W9, [X31 + 0x2B8]
	0x033D0B00 LDR X0, [X22]
	0x033D0B04 ADD X1, X31, 0x2A0
	0x033D0B08 STR X8, [X31 + 0x2A0]
	0x033D0B0C STR W9, [X31 + 0x2A8]
	0x033D0B10 BL 0x1C16E04
	0x033D0B14 CBZ X20, 0x33D15CC
	0x033D0B18 LDR X8, [X20]
	0x033D0B1C MOV X2, X0
	0x033D0B20 MOV X0, X20
	0x033D0B24 MOV X1, X21
	0x033D0B28 LDR X9, [X8 + 0x2E8]
	0x033D0B2C LDR X3, [X8 + 0x2F0]
	0x033D0B30 BLR X9
	0x033D0B34 LDR X0, [X23]
	0x033D0B38 LDR X20, [X19]
	0x033D0B3C MOVZ W8, 0xC7
	0x033D0B40 ADD X1, X31, 0x29C
	0x033D0B44 STR W8, [X31 + 0x29C]
	0x033D0B48 BL 0x1C16E04
	0x033D0B4C MOV X21, X0
	0x033D0B50 ADD X0, X31, 0x290
	0x033D0B54 MOVZ W2, 0x24
	0x033D0B58 MOVZ W3, 0x1
	0x033D0B5C MOV W1, W31
	0x033D0B60 MOV W4, W31
	0x033D0B64 MOV W5, W31
	0x033D0B68 MOV X6, X31
	0x033D0B6C STR W31, [X31 + 0x298]
	0x033D0B70 STR X31, [X31 + 0x290]
	0x033D0B74 BL 0x339D33C
	0x033D0B78 LDR X8, [X31 + 0x290]
	0x033D0B7C LDR W9, [X31 + 0x298]
	0x033D0B80 LDR X0, [X22]
	0x033D0B84 ADD X1, X31, 0x280
	0x033D0B88 STR X8, [X31 + 0x280]
	0x033D0B8C STR W9, [X31 + 0x288]
	0x033D0B90 BL 0x1C16E04
	0x033D0B94 CBZ X20, 0x33D15CC
	0x033D0B98 LDR X8, [X20]
	0x033D0B9C MOV X2, X0
	0x033D0BA0 MOV X0, X20
	0x033D0BA4 MOV X1, X21
	0x033D0BA8 LDR X9, [X8 + 0x2E8]
	0x033D0BAC LDR X3, [X8 + 0x2F0]
	0x033D0BB0 BLR X9
	0x033D0BB4 LDR X0, [X23]
	0x033D0BB8 LDR X20, [X19]
	0x033D0BBC MOVZ W8, 0xC9
	0x033D0BC0 ADD X1, X31, 0x27C
	0x033D0BC4 STR W8, [X31 + 0x27C]
	0x033D0BC8 BL 0x1C16E04
	0x033D0BCC MOV X21, X0
	0x033D0BD0 ADD X0, X31, 0x270
	0x033D0BD4 MOVZ W2, 0x25
	0x033D0BD8 MOVZ W3, 0x1
	0x033D0BDC MOV W1, W31
	0x033D0BE0 MOV W4, W31
	0x033D0BE4 MOV W5, W31
	0x033D0BE8 MOV X6, X31
	0x033D0BEC STR W31, [X31 + 0x278]
	0x033D0BF0 STR X31, [X31 + 0x270]
	0x033D0BF4 BL 0x339D33C
	0x033D0BF8 LDR X8, [X31 + 0x270]
	0x033D0BFC LDR W9, [X31 + 0x278]
	0x033D0C00 LDR X0, [X22]
	0x033D0C04 ADD X1, X31, 0x260
	0x033D0C08 STR X8, [X31 + 0x260]
	0x033D0C0C STR W9, [X31 + 0x268]
	0x033D0C10 BL 0x1C16E04
	0x033D0C14 CBZ X20, 0x33D15CC
	0x033D0C18 LDR X8, [X20]
	0x033D0C1C MOV X2, X0
	0x033D0C20 MOV X0, X20
	0x033D0C24 MOV X1, X21
	0x033D0C28 LDR X9, [X8 + 0x2E8]
	0x033D0C2C LDR X3, [X8 + 0x2F0]
	0x033D0C30 BLR X9
	0x033D0C34 LDR X0, [X23]
	0x033D0C38 LDR X20, [X19]
	0x033D0C3C MOVZ W8, 0xCF
	0x033D0C40 ADD X1, X31, 0x25C
	0x033D0C44 STR W8, [X31 + 0x25C]
	0x033D0C48 BL 0x1C16E04
	0x033D0C4C MOV X21, X0
	0x033D0C50 ADD X0, X31, 0x250
	0x033D0C54 MOVZ W2, 0x2A
	0x033D0C58 MOVZ W3, 0x1
	0x033D0C5C MOV W1, W31
	0x033D0C60 MOV W4, W31
	0x033D0C64 MOV W5, W31
	0x033D0C68 MOV X6, X31
	0x033D0C6C STR W31, [X31 + 0x258]
	0x033D0C70 STR X31, [X31 + 0x250]
	0x033D0C74 BL 0x339D33C
	0x033D0C78 LDR X8, [X31 + 0x250]
	0x033D0C7C LDR W9, [X31 + 0x258]
	0x033D0C80 LDR X0, [X22]
	0x033D0C84 ADD X1, X31, 0x240
	0x033D0C88 STR X8, [X31 + 0x240]
	0x033D0C8C STR W9, [X31 + 0x248]
	0x033D0C90 BL 0x1C16E04
	0x033D0C94 CBZ X20, 0x33D15CC
	0x033D0C98 LDR X8, [X20]
	0x033D0C9C MOV X2, X0
	0x033D0CA0 MOV X0, X20
	0x033D0CA4 MOV X1, X21
	0x033D0CA8 LDR X9, [X8 + 0x2E8]
	0x033D0CAC LDR X3, [X8 + 0x2F0]
	0x033D0CB0 BLR X9
	0x033D0CB4 LDR X0, [X23]
	0x033D0CB8 LDR X20, [X19]
	0x033D0CBC MOVZ W8, 0xD2
	0x033D0CC0 ADD X1, X31, 0x23C
	0x033D0CC4 STR W8, [X31 + 0x23C]
	0x033D0CC8 BL 0x1C16E04
	0x033D0CCC MOV X21, X0
	0x033D0CD0 ADD X0, X31, 0x230
	0x033D0CD4 MOVZ W2, 0x27
	0x033D0CD8 MOVZ W3, 0x1
	0x033D0CDC MOV W1, W31
	0x033D0CE0 MOV W4, W31
	0x033D0CE4 MOV W5, W31
	0x033D0CE8 MOV X6, X31
	0x033D0CEC STR W31, [X31 + 0x238]
	0x033D0CF0 STR X31, [X31 + 0x230]
	0x033D0CF4 BL 0x339D33C
	0x033D0CF8 LDR X8, [X31 + 0x230]
	0x033D0CFC LDR W9, [X31 + 0x238]
	0x033D0D00 LDR X0, [X22]
	0x033D0D04 ADD X1, X31, 0x220
	0x033D0D08 STR X8, [X31 + 0x220]
	0x033D0D0C STR W9, [X31 + 0x228]
	0x033D0D10 BL 0x1C16E04
	0x033D0D14 CBZ X20, 0x33D15CC
	0x033D0D18 LDR X8, [X20]
	0x033D0D1C MOV X2, X0
	0x033D0D20 MOV X0, X20
	0x033D0D24 MOV X1, X21
	0x033D0D28 LDR X9, [X8 + 0x2E8]
	0x033D0D2C LDR X3, [X8 + 0x2F0]
	0x033D0D30 BLR X9
	0x033D0D34 LDR X0, [X23]
	0x033D0D38 LDR X20, [X19]
	0x033D0D3C MOVZ W8, 0xD6
	0x033D0D40 ADD X1, X31, 0x21C
	0x033D0D44 STR W8, [X31 + 0x21C]
	0x033D0D48 BL 0x1C16E04
	0x033D0D4C MOV X21, X0
	0x033D0D50 ADD X0, X31, 0x210
	0x033D0D54 MOVZ W1, 0x5A
	0x033D0D58 MOVZ W2, 0x5A
	0x033D0D5C MOVZ W3, 0x1
	0x033D0D60 MOV W4, W31
	0x033D0D64 MOV W5, W31
	0x033D0D68 MOV X6, X31
	0x033D0D6C STR W31, [X31 + 0x218]
	0x033D0D70 STR X31, [X31 + 0x210]
	0x033D0D74 BL 0x339D33C
	0x033D0D78 LDR X8, [X31 + 0x210]
	0x033D0D7C LDR W9, [X31 + 0x218]
	0x033D0D80 LDR X0, [X22]
	0x033D0D84 ADD X1, X31, 0x200
	0x033D0D88 STR X8, [X31 + 0x200]
	0x033D0D8C STR W9, [X31 + 0x208]
	0x033D0D90 BL 0x1C16E04
	0x033D0D94 CBZ X20, 0x33D15CC
	0x033D0D98 LDR X8, [X20]
	0x033D0D9C MOV X2, X0
	0x033D0DA0 MOV X0, X20
	0x033D0DA4 MOV X1, X21
	0x033D0DA8 LDR X9, [X8 + 0x2E8]
	0x033D0DAC LDR X3, [X8 + 0x2F0]
	0x033D0DB0 BLR X9
	0x033D0DB4 LDR X0, [X23]
	0x033D0DB8 LDR X20, [X19]
	0x033D0DBC MOVZ W8, 0xD8
	0x033D0DC0 ADD X1, X31, 0x1FC
	0x033D0DC4 STR W8, [X31 + 0x1FC]
	0x033D0DC8 BL 0x1C16E04
	0x033D0DCC MOV X21, X0
	0x033D0DD0 ADD X0, X31, 0x1F0
	0x033D0DD4 MOVZ W2, 0x7A
	0x033D0DD8 MOV W1, W31
	0x033D0DDC MOV W3, W31
	0x033D0DE0 MOV W4, W31
	0x033D0DE4 MOV W5, W31
	0x033D0DE8 MOV X6, X31
	0x033D0DEC STR W31, [X31 + 0x1F8]
	0x033D0DF0 STR X31, [X31 + 0x1F0]
	0x033D0DF4 BL 0x339D33C
	0x033D0DF8 LDR X8, [X31 + 0x1F0]
	0x033D0DFC LDR W9, [X31 + 0x1F8]
	0x033D0E00 LDR X0, [X22]
	0x033D0E04 ADD X1, X31, 0x1E0
	0x033D0E08 STR X8, [X31 + 0x1E0]
	0x033D0E0C STR W9, [X31 + 0x1E8]
	0x033D0E10 BL 0x1C16E04
	0x033D0E14 CBZ X20, 0x33D15CC
	0x033D0E18 LDR X8, [X20]
	0x033D0E1C MOV X2, X0
	0x033D0E20 MOV X0, X20
	0x033D0E24 MOV X1, X21
	0x033D0E28 LDR X9, [X8 + 0x2E8]
	0x033D0E2C LDR X3, [X8 + 0x2F0]
	0x033D0E30 BLR X9
	0x033D0E34 LDR X0, [X23]
	0x033D0E38 LDR X20, [X19]
	0x033D0E3C MOVZ W8, 0xD9
	0x033D0E40 ADD X1, X31, 0x1DC
	0x033D0E44 STR W8, [X31 + 0x1DC]
	0x033D0E48 BL 0x1C16E04
	0x033D0E4C MOV X21, X0
	0x033D0E50 ADD X0, X31, 0x1D0
	0x033D0E54 MOVZ W2, 0x7B
	0x033D0E58 MOV W1, W31
	0x033D0E5C MOV W3, W31
	0x033D0E60 MOV W4, W31
	0x033D0E64 MOV W5, W31
	0x033D0E68 MOV X6, X31
	0x033D0E6C STR W31, [X31 + 0x1D8]
	0x033D0E70 STR X31, [X31 + 0x1D0]
	0x033D0E74 BL 0x339D33C
	0x033D0E78 LDR X8, [X31 + 0x1D0]
	0x033D0E7C LDR W9, [X31 + 0x1D8]
	0x033D0E80 LDR X0, [X22]
	0x033D0E84 ADD X1, X31, 0x1C0
	0x033D0E88 STR X8, [X31 + 0x1C0]
	0x033D0E8C STR W9, [X31 + 0x1C8]
	0x033D0E90 BL 0x1C16E04
	0x033D0E94 CBZ X20, 0x33D15CC
	0x033D0E98 LDR X8, [X20]
	0x033D0E9C MOV X2, X0
	0x033D0EA0 MOV X0, X20
	0x033D0EA4 MOV X1, X21
	0x033D0EA8 LDR X9, [X8 + 0x2E8]
	0x033D0EAC LDR X3, [X8 + 0x2F0]
	0x033D0EB0 BLR X9
	0x033D0EB4 LDR X0, [X23]
	0x033D0EB8 LDR X20, [X19]
	0x033D0EBC MOVZ W8, 0xDA
	0x033D0EC0 ADD X1, X31, 0x1BC
	0x033D0EC4 STR W8, [X31 + 0x1BC]
	0x033D0EC8 BL 0x1C16E04
	0x033D0ECC MOV X21, X0
	0x033D0ED0 ADD X0, X31, 0x1B0
	0x033D0ED4 MOVZ W2, 0x7C
	0x033D0ED8 MOV W1, W31
	0x033D0EDC MOV W3, W31
	0x033D0EE0 MOV W4, W31
	0x033D0EE4 MOV W5, W31
	0x033D0EE8 MOV X6, X31
	0x033D0EEC STR W31, [X31 + 0x1B8]
	0x033D0EF0 STR X31, [X31 + 0x1B0]
	0x033D0EF4 BL 0x339D33C
	0x033D0EF8 LDR X8, [X31 + 0x1B0]
	0x033D0EFC LDR W9, [X31 + 0x1B8]
	0x033D0F00 LDR X0, [X22]
	0x033D0F04 ADD X1, X31, 0x1A0
	0x033D0F08 STR X8, [X31 + 0x1A0]
	0x033D0F0C STR W9, [X31 + 0x1A8]
	0x033D0F10 BL 0x1C16E04
	0x033D0F14 CBZ X20, 0x33D15CC
	0x033D0F18 LDR X8, [X20]
	0x033D0F1C MOV X2, X0
	0x033D0F20 MOV X0, X20
	0x033D0F24 MOV X1, X21
	0x033D0F28 LDR X9, [X8 + 0x2E8]
	0x033D0F2C LDR X3, [X8 + 0x2F0]
	0x033D0F30 BLR X9
	0x033D0F34 LDR X0, [X23]
	0x033D0F38 LDR X20, [X19]
	0x033D0F3C MOVZ W8, 0xDB
	0x033D0F40 ADD X1, X31, 0x19C
	0x033D0F44 STR W8, [X31 + 0x19C]
	0x033D0F48 BL 0x1C16E04
	0x033D0F4C MOV X21, X0
	0x033D0F50 ADD X0, X31, 0x190
	0x033D0F54 MOVZ W2, 0x7D
	0x033D0F58 MOV W1, W31
	0x033D0F5C MOV W3, W31
	0x033D0F60 MOV W4, W31
	0x033D0F64 MOV W5, W31
	0x033D0F68 MOV X6, X31
	0x033D0F6C STR W31, [X31 + 0x198]
	0x033D0F70 STR X31, [X31 + 0x190]
	0x033D0F74 BL 0x339D33C
	0x033D0F78 LDR X8, [X31 + 0x190]
	0x033D0F7C LDR W9, [X31 + 0x198]
	0x033D0F80 LDR X0, [X22]
	0x033D0F84 ADD X1, X31, 0x180
	0x033D0F88 STR X8, [X31 + 0x180]
	0x033D0F8C STR W9, [X31 + 0x188]
	0x033D0F90 BL 0x1C16E04
	0x033D0F94 CBZ X20, 0x33D15CC
	0x033D0F98 LDR X8, [X20]
	0x033D0F9C MOV X2, X0
	0x033D0FA0 MOV X0, X20
	0x033D0FA4 MOV X1, X21
	0x033D0FA8 LDR X9, [X8 + 0x2E8]
	0x033D0FAC LDR X3, [X8 + 0x2F0]
	0x033D0FB0 BLR X9
	0x033D0FB4 LDR X0, [X23]
	0x033D0FB8 LDR X20, [X19]
	0x033D0FBC MOVZ W8, 0xDC
	0x033D0FC0 ADD X1, X31, 0x17C
	0x033D0FC4 STR W8, [X31 + 0x17C]
	0x033D0FC8 BL 0x1C16E04
	0x033D0FCC MOV X21, X0
	0x033D0FD0 ADD X0, X31, 0x170
	0x033D0FD4 MOVZ W2, 0x7E
	0x033D0FD8 MOV W1, W31
	0x033D0FDC MOV W3, W31
	0x033D0FE0 MOV W4, W31
	0x033D0FE4 MOV W5, W31
	0x033D0FE8 MOV X6, X31
	0x033D0FEC STR W31, [X31 + 0x178]
	0x033D0FF0 STR X31, [X31 + 0x170]
	0x033D0FF4 BL 0x339D33C
	0x033D0FF8 LDR X8, [X31 + 0x170]
	0x033D0FFC LDR W9, [X31 + 0x178]
	0x033D1000 LDR X0, [X22]
	0x033D1004 ADD X1, X31, 0x160
	0x033D1008 STR X8, [X31 + 0x160]
	0x033D100C STR W9, [X31 + 0x168]
	0x033D1010 BL 0x1C16E04
	0x033D1014 CBZ X20, 0x33D15CC
	0x033D1018 LDR X8, [X20]
	0x033D101C MOV X2, X0
	0x033D1020 MOV X0, X20
	0x033D1024 MOV X1, X21
	0x033D1028 LDR X9, [X8 + 0x2E8]
	0x033D102C LDR X3, [X8 + 0x2F0]
	0x033D1030 BLR X9
	0x033D1034 LDR X0, [X23]
	0x033D1038 LDR X20, [X19]
	0x033D103C MOVZ W8, 0xDD
	0x033D1040 ADD X1, X31, 0x15C
	0x033D1044 STR W8, [X31 + 0x15C]
	0x033D1048 BL 0x1C16E04
	0x033D104C MOV X21, X0
	0x033D1050 ADD X0, X31, 0x150
	0x033D1054 MOVZ W2, 0x7F
	0x033D1058 MOV W1, W31
	0x033D105C MOV W3, W31
	0x033D1060 MOV W4, W31
	0x033D1064 MOV W5, W31
	0x033D1068 MOV X6, X31
	0x033D106C STR W31, [X31 + 0x158]
	0x033D1070 STR X31, [X31 + 0x150]
	0x033D1074 BL 0x339D33C
	0x033D1078 LDR X8, [X31 + 0x150]
	0x033D107C LDR W9, [X31 + 0x158]
	0x033D1080 LDR X0, [X22]
	0x033D1084 ADD X1, X31, 0x140
	0x033D1088 STR X8, [X31 + 0x140]
	0x033D108C STR W9, [X31 + 0x148]
	0x033D1090 BL 0x1C16E04
	0x033D1094 CBZ X20, 0x33D15CC
	0x033D1098 LDR X8, [X20]
	0x033D109C MOV X2, X0
	0x033D10A0 MOV X0, X20
	0x033D10A4 MOV X1, X21
	0x033D10A8 LDR X9, [X8 + 0x2E8]
	0x033D10AC LDR X3, [X8 + 0x2F0]
	0x033D10B0 BLR X9
	0x033D10B4 LDR X0, [X23]
	0x033D10B8 LDR X20, [X19]
	0x033D10BC MOVZ W8, 0xDE
	0x033D10C0 ADD X1, X31, 0x13C
	0x033D10C4 STR W8, [X31 + 0x13C]
	0x033D10C8 BL 0x1C16E04
	0x033D10CC MOV X21, X0
	0x033D10D0 ADD X0, X31, 0x130
	0x033D10D4 MOVZ W2, 0x80
	0x033D10D8 MOV W1, W31
	0x033D10DC MOV W3, W31
	0x033D10E0 MOV W4, W31
	0x033D10E4 MOV W5, W31
	0x033D10E8 MOV X6, X31
	0x033D10EC STR W31, [X31 + 0x138]
	0x033D10F0 STR X31, [X31 + 0x130]
	0x033D10F4 BL 0x339D33C
	0x033D10F8 LDR X8, [X31 + 0x130]
	0x033D10FC LDR W9, [X31 + 0x138]
	0x033D1100 LDR X0, [X22]
	0x033D1104 ADD X1, X31, 0x120
	0x033D1108 STR X8, [X31 + 0x120]
	0x033D110C STR W9, [X31 + 0x128]
	0x033D1110 BL 0x1C16E04
	0x033D1114 CBZ X20, 0x33D15CC
	0x033D1118 LDR X8, [X20]
	0x033D111C MOV X2, X0
	0x033D1120 MOV X0, X20
	0x033D1124 MOV X1, X21
	0x033D1128 LDR X9, [X8 + 0x2E8]
	0x033D112C LDR X3, [X8 + 0x2F0]
	0x033D1130 BLR X9
	0x033D1134 LDR X0, [X23]
	0x033D1138 LDR X20, [X19]
	0x033D113C MOVZ W8, 0xDF
	0x033D1140 ADD X1, X31, 0x11C
	0x033D1144 STR W8, [X31 + 0x11C]
	0x033D1148 BL 0x1C16E04
	0x033D114C MOV X21, X0
	0x033D1150 ADD X0, X31, 0x110
	0x033D1154 MOVZ W2, 0x81
	0x033D1158 MOV W1, W31
	0x033D115C MOV W3, W31
	0x033D1160 MOV W4, W31
	0x033D1164 MOV W5, W31
	0x033D1168 MOV X6, X31
	0x033D116C STR W31, [X31 + 0x118]
	0x033D1170 STR X31, [X31 + 0x110]
	0x033D1174 BL 0x339D33C
	0x033D1178 LDR X8, [X31 + 0x110]
	0x033D117C LDR W9, [X31 + 0x118]
	0x033D1180 LDR X0, [X22]
	0x033D1184 ADD X1, X31, 0x100
	0x033D1188 STR X8, [X31 + 0x100]
	0x033D118C STR W9, [X31 + 0x108]
	0x033D1190 BL 0x1C16E04
	0x033D1194 CBZ X20, 0x33D15CC
	0x033D1198 LDR X8, [X20]
	0x033D119C MOV X2, X0
	0x033D11A0 MOV X0, X20
	0x033D11A4 MOV X1, X21
	0x033D11A8 LDR X9, [X8 + 0x2E8]
	0x033D11AC LDR X3, [X8 + 0x2F0]
	0x033D11B0 BLR X9
	0x033D11B4 LDR X0, [X23]
	0x033D11B8 LDR X20, [X19]
	0x033D11BC MOVZ W8, 0xE0
	0x033D11C0 ADD X1, X31, 0xFC
	0x033D11C4 STR W8, [X31 + 0xFC]
	0x033D11C8 BL 0x1C16E04
	0x033D11CC MOV X21, X0
	0x033D11D0 ADD X0, X31, 0xF0
	0x033D11D4 MOVZ W2, 0x82
	0x033D11D8 MOV W1, W31
	0x033D11DC MOV W3, W31
	0x033D11E0 MOV W4, W31
	0x033D11E4 MOV W5, W31
	0x033D11E8 MOV X6, X31
	0x033D11EC STR W31, [X31 + 0xF8]
	0x033D11F0 STR X31, [X31 + 0xF0]
	0x033D11F4 BL 0x339D33C
	0x033D11F8 LDR X8, [X31 + 0xF0]
	0x033D11FC LDR W9, [X31 + 0xF8]
	0x033D1200 LDR X0, [X22]
	0x033D1204 ADD X1, X31, 0xE0
	0x033D1208 STR X8, [X31 + 0xE0]
	0x033D120C STR W9, [X31 + 0xE8]
	0x033D1210 BL 0x1C16E04
	0x033D1214 CBZ X20, 0x33D15CC
	0x033D1218 LDR X8, [X20]
	0x033D121C MOV X2, X0
	0x033D1220 MOV X0, X20
	0x033D1224 MOV X1, X21
	0x033D1228 LDR X9, [X8 + 0x2E8]
	0x033D122C LDR X3, [X8 + 0x2F0]
	0x033D1230 BLR X9
	0x033D1234 LDR X0, [X23]
	0x033D1238 LDR X20, [X19]
	0x033D123C MOVZ W8, 0xE1
	0x033D1240 ADD X1, X31, 0xDC
	0x033D1244 STR W8, [X31 + 0xDC]
	0x033D1248 BL 0x1C16E04
	0x033D124C MOV X21, X0
	0x033D1250 ADD X0, X31, 0xD0
	0x033D1254 MOVZ W2, 0x83
	0x033D1258 MOV W1, W31
	0x033D125C MOV W3, W31
	0x033D1260 MOV W4, W31
	0x033D1264 MOV W5, W31
	0x033D1268 MOV X6, X31
	0x033D126C STR W31, [X31 + 0xD8]
	0x033D1270 STR X31, [X31 + 0xD0]
	0x033D1274 BL 0x339D33C
	0x033D1278 LDR X8, [X31 + 0xD0]
	0x033D127C LDR W9, [X31 + 0xD8]
	0x033D1280 LDR X0, [X22]
	0x033D1284 ADD X1, X31, 0xC0
	0x033D1288 STR X8, [X31 + 0xC0]
	0x033D128C STR W9, [X31 + 0xC8]
	0x033D1290 BL 0x1C16E04
	0x033D1294 CBZ X20, 0x33D15CC
	0x033D1298 LDR X8, [X20]
	0x033D129C MOV X2, X0
	0x033D12A0 MOV X0, X20
	0x033D12A4 MOV X1, X21
	0x033D12A8 LDR X9, [X8 + 0x2E8]
	0x033D12AC LDR X3, [X8 + 0x2F0]
	0x033D12B0 BLR X9
	0x033D12B4 LDR X0, [X23]
	0x033D12B8 LDR X20, [X19]
	0x033D12BC MOVZ W8, 0xE2
	0x033D12C0 ADD X1, X31, 0xBC
	0x033D12C4 STR W8, [X31 + 0xBC]
	0x033D12C8 BL 0x1C16E04
	0x033D12CC MOV X21, X0
	0x033D12D0 ADD X0, X31, 0xB0
	0x033D12D4 MOVZ W2, 0x84
	0x033D12D8 MOV W1, W31
	0x033D12DC MOV W3, W31
	0x033D12E0 MOV W4, W31
	0x033D12E4 MOV W5, W31
	0x033D12E8 MOV X6, X31
	0x033D12EC STR W31, [X31 + 0xB8]
	0x033D12F0 STR X31, [X31 + 0xB0]
	0x033D12F4 BL 0x339D33C
	0x033D12F8 LDR X8, [X31 + 0xB0]
	0x033D12FC LDR W9, [X31 + 0xB8]
	0x033D1300 LDR X0, [X22]
	0x033D1304 ADD X1, X31, 0xA0
	0x033D1308 STR X8, [X31 + 0xA0]
	0x033D130C STR W9, [X31 + 0xA8]
	0x033D1310 BL 0x1C16E04
	0x033D1314 CBZ X20, 0x33D15CC
	0x033D1318 LDR X8, [X20]
	0x033D131C MOV X2, X0
	0x033D1320 MOV X0, X20
	0x033D1324 MOV X1, X21
	0x033D1328 LDR X9, [X8 + 0x2E8]
	0x033D132C LDR X3, [X8 + 0x2F0]
	0x033D1330 BLR X9
	0x033D1334 LDR X0, [X23]
	0x033D1338 LDR X20, [X19]
	0x033D133C MOVZ W8, 0xE3
	0x033D1340 ADD X1, X31, 0x9C
	0x033D1344 STR W8, [X31 + 0x9C]
	0x033D1348 BL 0x1C16E04
	0x033D134C MOV X21, X0
	0x033D1350 ADD X0, X31, 0x90
	0x033D1354 MOVZ W2, 0x85
	0x033D1358 MOV W1, W31
	0x033D135C MOV W3, W31
	0x033D1360 MOV W4, W31
	0x033D1364 MOV W5, W31
	0x033D1368 MOV X6, X31
	0x033D136C STR W31, [X31 + 0x98]
	0x033D1370 STR X31, [X31 + 0x90]
	0x033D1374 BL 0x339D33C
	0x033D1378 LDR X8, [X31 + 0x90]
	0x033D137C LDR W9, [X31 + 0x98]
	0x033D1380 LDR X0, [X22]
	0x033D1384 ADD X1, X31, 0x80
	0x033D1388 STR X8, [X31 + 0x80]
	0x033D138C STR W9, [X31 + 0x88]
	0x033D1390 BL 0x1C16E04
	0x033D1394 CBZ X20, 0x33D15CC
	0x033D1398 LDR X8, [X20]
	0x033D139C MOV X2, X0
	0x033D13A0 MOV X0, X20
	0x033D13A4 MOV X1, X21
	0x033D13A8 LDR X9, [X8 + 0x2E8]
	0x033D13AC LDR X3, [X8 + 0x2F0]
	0x033D13B0 BLR X9
	0x033D13B4 LDR X0, [X23]
	0x033D13B8 LDR X20, [X19]
	0x033D13BC MOVZ W8, 0xE4
	0x033D13C0 ADD X1, X31, 0x7C
	0x033D13C4 STR W8, [X31 + 0x7C]
	0x033D13C8 BL 0x1C16E04
	0x033D13CC MOV X21, X0
	0x033D13D0 ADD X0, X31, 0x70
	0x033D13D4 MOVZ W2, 0x86
	0x033D13D8 MOV W1, W31
	0x033D13DC MOV W3, W31
	0x033D13E0 MOV W4, W31
	0x033D13E4 MOV W5, W31
	0x033D13E8 MOV X6, X31
	0x033D13EC STR W31, [X31 + 0x78]
	0x033D13F0 STR X31, [X31 + 0x70]
	0x033D13F4 BL 0x339D33C
	0x033D13F8 LDR X8, [X31 + 0x70]
	0x033D13FC LDR W9, [X31 + 0x78]
	0x033D1400 LDR X0, [X22]
	0x033D1404 ADD X1, X31, 0x60
	0x033D1408 STR X8, [X31 + 0x60]
	0x033D140C STR W9, [X31 + 0x68]
	0x033D1410 BL 0x1C16E04
	0x033D1414 CBZ X20, 0x33D15CC
	0x033D1418 LDR X8, [X20]
	0x033D141C MOV X2, X0
	0x033D1420 MOV X0, X20
	0x033D1424 MOV X1, X21
	0x033D1428 LDR X9, [X8 + 0x2E8]
	0x033D142C LDR X3, [X8 + 0x2F0]
	0x033D1430 BLR X9
	0x033D1434 LDR X0, [X23]
	0x033D1438 LDR X20, [X19]
	0x033D143C MOVZ W8, 0xE5
	0x033D1440 ADD X1, X31, 0x5C
	0x033D1444 STR W8, [X31 + 0x5C]
	0x033D1448 BL 0x1C16E04
	0x033D144C MOV X21, X0
	0x033D1450 ADD X0, X31, 0x50
	0x033D1454 MOVZ W2, 0x87
	0x033D1458 MOV W1, W31
	0x033D145C MOV W3, W31
	0x033D1460 MOV W4, W31
	0x033D1464 MOV W5, W31
	0x033D1468 MOV X6, X31
	0x033D146C STR W31, [X31 + 0x58]
	0x033D1470 STR X31, [X31 + 0x50]
	0x033D1474 BL 0x339D33C
	0x033D1478 LDR X8, [X31 + 0x50]
	0x033D147C LDR W9, [X31 + 0x58]
	0x033D1480 LDR X0, [X22]
	0x033D1484 ADD X1, X31, 0x40
	0x033D1488 STR X8, [X31 + 0x40]
	0x033D148C STR W9, [X31 + 0x48]
	0x033D1490 BL 0x1C16E04
	0x033D1494 CBZ X20, 0x33D15CC
	0x033D1498 LDR X8, [X20]
	0x033D149C MOV X2, X0
	0x033D14A0 MOV X0, X20
	0x033D14A4 MOV X1, X21
	0x033D14A8 LDR X9, [X8 + 0x2E8]
	0x033D14AC LDR X3, [X8 + 0x2F0]
	0x033D14B0 BLR X9
	0x033D14B4 LDR X0, [X23]
	0x033D14B8 LDR X20, [X19]
	0x033D14BC MOVZ W8, 0x3B
	0x033D14C0 ADD X1, X31, 0x3C
	0x033D14C4 STR W8, [X31 + 0x3C]
	0x033D14C8 BL 0x1C16E04
	0x033D14CC MOV X21, X0
	0x033D14D0 ADD X0, X31, 0x30
	0x033D14D4 MOVZ W2, 0x2E
	0x033D14D8 MOV W1, W31
	0x033D14DC MOV W3, W31
	0x033D14E0 MOV W4, W31
	0x033D14E4 MOV W5, W31
	0x033D14E8 MOV X6, X31
	0x033D14EC STR W31, [X31 + 0x38]
	0x033D14F0 STR X31, [X31 + 0x30]
	0x033D14F4 BL 0x339D33C
	0x033D14F8 LDR X8, [X31 + 0x30]
	0x033D14FC LDR W9, [X31 + 0x38]
	0x033D1500 LDR X0, [X22]
	0x033D1504 ADD X1, X31, 0x20
	0x033D1508 STR X8, [X31 + 0x20]
	0x033D150C STR W9, [X31 + 0x28]
	0x033D1510 BL 0x1C16E04
	0x033D1514 CBZ X20, 0x33D15CC
	0x033D1518 LDR X8, [X20]
	0x033D151C MOV X2, X0
	0x033D1520 MOV X0, X20
	0x033D1524 MOV X1, X21
	0x033D1528 LDR X9, [X8 + 0x2E8]
	0x033D152C LDR X3, [X8 + 0x2F0]
	0x033D1530 BLR X9
	0x033D1534 LDR X0, [X23]
	0x033D1538 LDR X19, [X19]
	0x033D153C MOVZ W8, 0x4D
	0x033D1540 ADD X1, X31, 0x1C
	0x033D1544 STR W8, [X31 + 0x1C]
	0x033D1548 BL 0x1C16E04
	0x033D154C MOV X20, X0
	0x033D1550 ADD X0, X31, 0x10
	0x033D1554 MOVZ W2, 0x2D
	0x033D1558 MOV W1, W31
	0x033D155C MOV W3, W31
	0x033D1560 MOV W4, W31
	0x033D1564 MOV W5, W31
	0x033D1568 MOV X6, X31
	0x033D156C STR W31, [X31 + 0x18]
	0x033D1570 STR X31, [X31 + 0x10]
	0x033D1574 BL 0x339D33C
	0x033D1578 LDR X8, [X31 + 0x10]
	0x033D157C LDR W9, [X31 + 0x18]
	0x033D1580 LDR X0, [X22]
	0x033D1584 ADD X1, X31, 0x0
	0x033D1588 STR X8, [X31]
	0x033D158C STR W9, [X31 + 0x8]
	0x033D1590 BL 0x1C16E04
	0x033D1594 CBZ X19, 0x33D15CC
	0x033D1598 LDR X8, [X19]
	0x033D159C MOV X2, X0
	0x033D15A0 MOV X0, X19
	0x033D15A4 MOV X1, X20
	0x033D15A8 LDR X9, [X8 + 0x2E8]
	0x033D15AC LDR X3, [X8 + 0x2F0]
	0x033D15B0 BLR X9
	0x033D15B4 ADD X31, X31, 0x780
	0x033D15B8 LDP X20, X19, [X31 + 0x30]
	0x033D15BC LDP X22, X21, [X31 + 0x20]
	0x033D15C0 LDP X30, X23, [X31 + 0x10]
	0x033D15C4 LDR X29, [X31], #0x40
	0x033D15C8 RET
	0x033D15CC BL 0x1C16F20
	0x033D15D0 STP X30, X21, [X31 - 0x20]!
	0x033D15D4 STP X20, X19, [X31 + 0x10]
	0x033D15D8 ADRP X20, 0x100C000
	0x033D15DC ADRP X21, 0xD52000
	0x033D15E0 LDRB W8, [X20 + 0x2D1]
	0x033D15E4 LDR X21, [X21 + 0xDB8]
	0x033D15E8 MOV X19, X0
	0x033D15EC TBNZ X8, 0x0, 0x33D1604
	0x033D15F0 ADRP X0, 0xD52000
	0x033D15F4 LDR X0, [X0 + 0xDB8]
	0x033D15F8 BL 0x1C16CF4
	0x033D15FC MOVZ W8, 0x1
	0x033D1600 STRB W8, [X20 + 0x2D1]
	0x033D1604 LDR X0, [X21]
	0x033D1608 BL 0x1C16F10
	0x033D160C MOV X1, X31
	0x033D1610 MOV X20, X0
	0x033D1614 BL 0x335A0A0
	0x033D1618 STR X20, [X19 + 0x10]
	0x033D161C LDR X0, [X21]
	0x033D1620 BL 0x1C16F10
	0x033D1624 MOV X1, X31
	0x033D1628 MOV X20, X0
	0x033D162C BL 0x335A0A0
	0x033D1630 STR X20, [X19 + 0x18]
	0x033D1634 LDP X20, X19, [X31 + 0x10]
	0x033D1638 LDP X30, X21, [X31], #0x20
	0x033D163C RET
	0x033D1640 STR X30, [X31 - 0x20]!
	0x033D1644 STP X20, X19, [X31 + 0x10]
	0x033D1648 MOV X20, X0
	0x033D164C LDR X0, [X0 + 0x10]
	0x033D1650 CBZ X0, 0x33D1688
	0x033D1654 MOV W19, W1
	0x033D1658 BL 0x33D17B0
	0x033D165C CBZ X0, 0x33D167C
	0x033D1660 MOV X2, X0
	0x033D1664 LDR X0, [X20 + 0xF8]
	0x033D1668 CBZ X0, 0x33D1688
	0x033D166C MOV W1, W19
	0x033D1670 LDP X20, X19, [X31 + 0x10]
	0x033D1674 LDR X30, [X31], #0x20
	0x033D1678 B 0x33D168C
	0x033D167C LDP X20, X19, [X31 + 0x10]
	0x033D1680 LDR X30, [X31], #0x20
	0x033D1684 RET
	0x033D1688 BL 0x1C16F20
	0x033D168C SUB X31, X31, 0x40
	0x033D1690 STR X30, [X31 + 0x10]
	0x033D1694 STP X22, X21, [X31 + 0x20]
	0x033D1698 STP X20, X19, [X31 + 0x30]
	0x033D169C ADRP X22, 0x100C000
	0x033D16A0 LDRB W8, [X22 + 0x2CE]
	0x033D16A4 MOV X19, X2
	0x033D16A8 MOV W21, W1
	0x033D16AC MOV X20, X0
	0x033D16B0 TBNZ X8, 0x0, 0x33D16E0
	0x033D16B4 ADRP X0, 0xD22000
	0x033D16B8 LDR X0, [X0 + 0xB58]
	0x033D16BC BL 0x1C16CF4
	0x033D16C0 ADRP X0, 0xD22000
	0x033D16C4 LDR X0, [X0 + 0x758]
	0x033D16C8 BL 0x1C16CF4
	0x033D16CC ADRP X0, 0xD5B000
	0x033D16D0 LDR X0, [X0 + 0xB90]
	0x033D16D4 BL 0x1C16CF4
	0x033D16D8 MOVZ W8, 0x1
	0x033D16DC STRB W8, [X22 + 0x2CE]
	0x033D16E0 CBZ X19, 0x33D17A4
	0x033D16E4 LDR X8, [X19 + 0x18]
	0x033D16E8 CBZ X8, 0x33D1790
	0x033D16EC ADRP X8, 0xD5B000
	0x033D16F0 LDR X8, [X8 + 0xB90]
	0x033D16F4 LDR X22, [X20 + 0x10]
	0x033D16F8 ADD X1, X31, 0x1C
	0x033D16FC STR W21, [X31 + 0x1C]
	0x033D1700 LDR X0, [X8]
	0x033D1704 BL 0x1C16E04
	0x033D1708 CBZ X22, 0x33D17A4
	0x033D170C LDR X8, [X22]
	0x033D1710 MOV X2, X0
	0x033D1714 MOV X0, X22
	0x033D1718 MOV X1, X19
	0x033D171C LDR X9, [X8 + 0x2E8]
	0x033D1720 LDR X3, [X8 + 0x2F0]
	0x033D1724 BLR X9
	0x033D1728 LDR W8, [X19 + 0x18]
	0x033D172C CBZ W8, 0x33D17A8
	0x033D1730 ADRP X8, 0xD22000
	0x033D1734 LDR X8, [X8 + 0x758]
	0x033D1738 LDRB W9, [X19 + 0x20]
	0x033D173C ADRP X21, 0xD22000
	0x033D1740 LDR X20, [X20 + 0x18]
	0x033D1744 LDR X0, [X8]
	0x033D1748 LDR X21, [X21 + 0xB58]
	0x033D174C ADD X1, X31, 0x18
	0x033D1750 STR W9, [X31 + 0x18]
	0x033D1754 BL 0x1C16E04
	0x033D1758 MOV X19, X0
	0x033D175C LDR X0, [X21]
	0x033D1760 MOVZ W8, 0x1
	0x033D1764 ADD X1, X31, 0xC
	0x033D1768 STRB W8, [X31 + 0xC]
	0x033D176C BL 0x1C16E04
	0x033D1770 CBZ X20, 0x33D17A4
	0x033D1774 LDR X8, [X20]
	0x033D1778 MOV X2, X0
	0x033D177C MOV X0, X20
	0x033D1780 MOV X1, X19
	0x033D1784 LDR X9, [X8 + 0x2E8]
	0x033D1788 LDR X3, [X8 + 0x2F0]
	0x033D178C BLR X9
	0x033D1790 LDP X20, X19, [X31 + 0x30]
	0x033D1794 LDP X22, X21, [X31 + 0x20]
	0x033D1798 LDR X30, [X31 + 0x10]
	0x033D179C ADD X31, X31, 0x40
	0x033D17A0 RET
	0x033D17A4 BL 0x1C16F20
	0x033D17A8 BL 0x1C16F28
	0x033D17AC RET
	0x033D17B0 STR X30, [X31 - 0x20]!
	0x033D17B4 STP X20, X19, [X31 + 0x10]
	0x033D17B8 CMP W1, 0x189
	0x033D17BC B.HI 0x33D1830
	0x033D17C0 LDR W8, [X0 + 0x18]
	0x033D17C4 MOV X19, X0
	0x033D17C8 CMP W8, W1
	0x033D17CC B.LT 0x33D1830
	0x033D17D0 LDP W9, W12, [X19 + 0x28]
	0x033D17D4 LDP W10, W11, [X19 + 0x10]
	0x033D17D8 LDR X8, [X19 + 0x20]
	0x033D17DC ADD W9, W10, W9
	0x033D17E0 CMP W9, 0x0
	0x033D17E4 CINC W10, W9, LT
	0x033D17E8 AND W10, W10, 0xFFFFFFFE
	0x033D17EC SUB W10, W9, W10
	0x033D17F0 CMP W10, 0x1
	0x033D17F4 MADD W9, W12, W11, W9
	0x033D17F8 CINC W20, W9, EQ
	0x033D17FC ADD W2, W20, W1, 0x1, LSL
	0x033D1800 MOV X1, X8
	0x033D1804 BL 0x33D2BFC
	0x033D1808 ORN W8, W31, W0, 0x0
	0x033D180C ANDS W31, W8, 0xFFFF
	0x033D1810 B.EQ 0x33D1830
	0x033D1814 LDR W8, [X19 + 0x18]
	0x033D1818 LDR X1, [X19 + 0x20]
	0x033D181C ADD W9, W20, W0, SXTH
	0x033D1820 LDP X20, X19, [X31 + 0x10]
	0x033D1824 ADD W2, W9, W8, 0x1, LSL
	0x033D1828 LDR X30, [X31], #0x20
	0x033D182C B 0x33D2CC8
	0x033D1830 LDP X20, X19, [X31 + 0x10]
	0x033D1834 MOV X0, X31
	0x033D1838 LDR X30, [X31], #0x20
	0x033D183C RET
	0x033D1840 STR X30, [X31 - 0x20]!
	0x033D1844 STP X20, X19, [X31 + 0x10]
	0x033D1848 ADRP X19, 0x100C000
	0x033D184C ADRP X20, 0xD22000
	0x033D1850 LDRB W8, [X19 + 0x2B1]
	0x033D1854 LDR X20, [X20 + 0xAC8]
	0x033D1858 TBNZ X8, 0x0, 0x33D18C4
	0x033D185C ADRP X0, 0xD23000
	0x033D1860 LDR X0, [X0 + 0xE58]
	0x033D1864 BL 0x1C16CF4
	0x033D1868 ADRP X0, 0xD22000
	0x033D186C LDR X0, [X0 + 0xAC8]
	0x033D1870 BL 0x1C16CF4
	0x033D1874 ADRP X0, 0xD56000
	0x033D1878 LDR X0, [X0 + 0x7C0]
	0x033D187C BL 0x1C16CF4
	0x033D1880 ADRP X0, 0xD5B000
	0x033D1884 LDR X0, [X0 + 0xBB0]
	0x033D1888 BL 0x1C16CF4
	0x033D188C ADRP X0, 0xD5B000
	0x033D1890 LDR X0, [X0 + 0xBB8]
	0x033D1894 BL 0x1C16CF4
	0x033D1898 ADRP X0, 0xD5B000
	0x033D189C LDR X0, [X0 + 0xBC0]
	0x033D18A0 BL 0x1C16CF4
	0x033D18A4 ADRP X0, 0xD5B000
	0x033D18A8 LDR X0, [X0 + 0xBC8]
	0x033D18AC BL 0x1C16CF4
	0x033D18B0 ADRP X0, 0xD5B000
	0x033D18B4 LDR X0, [X0 + 0xBD0]
	0x033D18B8 BL 0x1C16CF4
	0x033D18BC MOVZ W8, 0x1
	0x033D18C0 STRB W8, [X19 + 0x2B1]
	0x033D18C4 LDR X0, [X20]
	0x033D18C8 MOVZ W1, 0x4
	0x033D18CC BL 0x1C16D6C
	0x033D18D0 CBZ X0, 0x33D1990
	0x033D18D4 LDR W8, [X0 + 0x18]
	0x033D18D8 CBZ W8, 0x33D198C
	0x033D18DC ADRP X9, 0xD5B000
	0x033D18E0 LDR X9, [X9 + 0xBB8]
	0x033D18E4 CMP W8, 0x1
	0x033D18E8 LDR X9, [X9]
	0x033D18EC STR X9, [X0 + 0x20]
	0x033D18F0 B.EQ 0x33D198C
	0x033D18F4 ADRP X9, 0xD5B000
	0x033D18F8 LDR X9, [X9 + 0xBC0]
	0x033D18FC CMP W8, 0x2
	0x033D1900 LDR X9, [X9]
	0x033D1904 STR X9, [X0 + 0x28]
	0x033D1908 B.LS 0x33D198C
	0x033D190C ADRP X9, 0xD5B000
	0x033D1910 LDR X9, [X9 + 0xBC8]
	0x033D1914 CMP W8, 0x3
	0x033D1918 LDR X9, [X9]
	0x033D191C STR X9, [X0 + 0x30]
	0x033D1920 B.EQ 0x33D198C
	0x033D1924 ADRP X8, 0xD5B000
	0x033D1928 LDR X8, [X8 + 0xBD0]
	0x033D192C ADRP X20, 0xD56000
	0x033D1930 ADRP X9, 0xD23000
	0x033D1934 ADRP X19, 0xD5B000
	0x033D1938 LDR X8, [X8]
	0x033D193C LDR X20, [X20 + 0x7C0]
	0x033D1940 MOVZ W1, 0x10
	0x033D1944 STR X8, [X0 + 0x38]
	0x033D1948 LDR X8, [X20]
	0x033D194C LDR X8, [X8 + 0xB8]
	0x033D1950 LDR X9, [X9 + 0xE58]
	0x033D1954 STR X0, [X8 + 0x10]
	0x033D1958 LDR X0, [X9]
	0x033D195C LDR X19, [X19 + 0xBB0]
	0x033D1960 BL 0x1C16D6C
	0x033D1964 LDR X1, [X19]
	0x033D1968 MOV X2, X31
	0x033D196C MOV X19, X0
	0x033D1970 BL 0x32C5BD8
	0x033D1974 LDR X8, [X20]
	0x033D1978 LDR X8, [X8 + 0xB8]
	0x033D197C STR X19, [X8 + 0x18]
	0x033D1980 LDP X20, X19, [X31 + 0x10]
	0x033D1984 LDR X30, [X31], #0x20
	0x033D1988 RET
	0x033D198C BL 0x1C16F28
	0x033D1990 BL 0x1C16F20
	0x033D1994 STP X30, X21, [X31 - 0x20]!
	0x033D1998 STP X20, X19, [X31 + 0x10]
	0x033D199C ADRP X20, 0x100C000
	0x033D19A0 ADRP X21, 0xD5B000
	0x033D19A4 LDRB W8, [X20 + 0x2CC]
	0x033D19A8 LDR X21, [X21 + 0xB30]
	0x033D19AC MOV X19, X0
	0x033D19B0 TBNZ X8, 0x0, 0x33D19C8
	0x033D19B4 ADRP X0, 0xD5B000
	0x033D19B8 LDR X0, [X0 + 0xB30]
	0x033D19BC BL 0x1C16CF4
	0x033D19C0 MOVZ W8, 0x1
	0x033D19C4 STRB W8, [X20 + 0x2CC]
	0x033D19C8 LDR X0, [X21]
	0x033D19CC MOVZ W1, 0x4
	0x033D19D0 BL 0x1C16D6C
	0x033D19D4 STR X0, [X19 + 0x10]
	0x033D19D8 LDP X20, X19, [X31 + 0x10]
	0x033D19DC LDP X30, X21, [X31], #0x20
	0x033D19E0 RET
	0x033D19E4 STP X30, X19, [X31 - 0x10]!
	0x033D19E8 MOV X19, X0
	0x033D19EC LDR X0, [X0 + 0x10]
	0x033D19F0 LDR W2, [X19 + 0x18]
	0x033D19F4 MOV W1, W31
	0x033D19F8 MOV X3, X31
	0x033D19FC BL 0x339FA34
	0x033D1A00 STR W31, [X19 + 0x18]
	0x033D1A04 LDP X30, X19, [X31], #0x10
	0x033D1A08 RET
	0x033D1A0C SUB X31, X31, 0x90
	0x033D1A10 STP X29, X30, [X31 + 0x30]
	0x033D1A14 STP X28, X27, [X31 + 0x40]
	0x033D1A18 STP X26, X25, [X31 + 0x50]
	0x033D1A1C STP X24, X23, [X31 + 0x60]
	0x033D1A20 STP X22, X21, [X31 + 0x70]
	0x033D1A24 STP X20, X19, [X31 + 0x80]
	0x033D1A28 ADRP X19, 0x100C000
	0x033D1A2C LDRB W8, [X19 + 0x2B3]
	0x033D1A30 MOV X20, X3
	0x033D1A34 MOV X24, X2
	0x033D1A38 MOV X23, X1
	0x033D1A3C MOV X25, X0
	0x033D1A40 STP X4, X5, [X31 + 0x8]
	0x033D1A44 TBNZ X8, 0x0, 0x33D1A5C
	0x033D1A48 ADRP X0, 0xD22000
	0x033D1A4C LDR X0, [X0 + 0x8F0]
	0x033D1A50 BL 0x1C16CF4
	0x033D1A54 MOVZ W8, 0x1
	0x033D1A58 STRB W8, [X19 + 0x2B3]
	0x033D1A5C STP X31, X31, [X31 + 0x20]
	0x033D1A60 STR X31, [X31 + 0x18]
	0x033D1A64 CBZ X25, 0x33D221C
	0x033D1A68 ADRP X8, 0xD22000
	0x033D1A6C LDR X8, [X8 + 0x8F0]
	0x033D1A70 LDR W26, [X25 + 0x10]
	0x033D1A74 LDR X0, [X8]
	0x033D1A78 BL 0x1C16F10
	0x033D1A7C MOV W1, W26
	0x033D1A80 MOV X2, X31
	0x033D1A84 MOV X19, X0
	0x033D1A88 BL 0x3231B28
	0x033D1A8C LDR W1, [X23]
	0x033D1A90 LDR W8, [X25 + 0x10]
	0x033D1A94 CMP W1, W8
	0x033D1A98 B.GE 0x33D21B0
	0x033D1A9C ADRP X22, 0xFFFFFFFFFD7C5000
	0x033D1AA0 MOV W29, W31
	0x033D1AA4 MOVZ W26, 0x1
	0x033D1AA8 ADD X22, X22, 0x94A
	0x033D1AAC MOVZ W21, 0xA
	0x033D1AB0 MOV X0, X25
	0x033D1AB4 MOV X2, X31
	0x033D1AB8 BL 0x3222A1C
	0x033D1ABC LDR W1, [X23]
	0x033D1AC0 AND W8, W0, 0xFFFF
	0x033D1AC4 CMP W8, 0x25
	0x033D1AC8 B.NE 0x33D1B20
	0x033D1ACC ADD W1, W1, 0x1
	0x033D1AD0 MOV X0, X25
	0x033D1AD4 MOV X2, X31
	0x033D1AD8 STR W1, [X23]
	0x033D1ADC BL 0x3222A1C
	0x033D1AE0 AND W8, W0, 0xFFFF
	0x033D1AE4 CMP W8, 0x58
	0x033D1AE8 B.HI 0x33D1B44
	0x033D1AEC SUB W8, W8, 0x21
	0x033D1AF0 CMP W8, 0x37
	0x033D1AF4 B.HI 0x33D2220
	0x033D1AF8 ADRP X11, 0xFFFFFFFFFD7C5000
	0x033D1AFC ADD X11, X11, 0x98C
	0x033D1B00 ADR X9, 0x14
	0x033D1B04 LDRH W10, [X11, X8, LSL #1]
	0x033D1B08 ADD X9, X9, X10, 0x2, LSL
	0x033D1B0C MOVZ W8, 0x1
	0x033D1B10 BR X9
	0x033D1B14 CBZ X19, 0x33D221C
	0x033D1B18 MOVZ W1, 0x25
	0x033D1B1C B 0x33D1B34
	0x033D1B20 MOV X0, X25
	0x033D1B24 MOV X2, X31
	0x033D1B28 BL 0x3222A1C
	0x033D1B2C CBZ X19, 0x33D221C
	0x033D1B30 MOV W1, W0
	0x033D1B34 MOV X0, X19
	0x033D1B38 MOV X2, X31
	0x033D1B3C BL 0x3233D30
	0x033D1B40 B 0x33D2190
	0x033D1B44 SUB W8, W8, 0x5E
	0x033D1B48 CMP W8, 0x20
	0x033D1B4C B.HI 0x33D2220
	0x033D1B50 ADR X9, 0x10
	0x033D1B54 LDRH W10, [X22, X8, LSL #1]
	0x033D1B58 ADD X9, X9, X10, 0x2, LSL
	0x033D1B5C BR X9
	0x033D1B60 CBZ X20, 0x33D221C
	0x033D1B64 MOV X0, X20
	0x033D1B68 BL 0x33D226C
	0x033D1B6C MOV X27, X0
	0x033D1B70 MOV X0, X20
	0x033D1B74 BL 0x33D226C
	0x033D1B78 STP X0, X1, [X31 + 0x18]
	0x033D1B7C LDR W1, [X23]
	0x033D1B80 MOV X28, X0
	0x033D1B84 MOV X0, X25
	0x033D1B88 MOV X2, X31
	0x033D1B8C BL 0x3222A1C
	0x033D1B90 AND W9, W0, 0xFFFF
	0x033D1B94 CMP W9, 0x41
	0x033D1B98 B.HI 0x33D1CD0
	0x033D1B9C SUB W10, W9, 0x26
	0x033D1BA0 CMP W10, 0x9
	0x033D1BA4 MOV W8, W31
	0x033D1BA8 B.HI 0x33D1D0C
	0x033D1BAC ADRP X12, 0xFFFFFFFFFD7C5000
	0x033D1BB0 ADD X12, X12, 0x9FC
	0x033D1BB4 ADR X9, 0x10
	0x033D1BB8 LDRH W11, [X12, X10, LSL #1]
	0x033D1BBC ADD X9, X9, X11, 0x2, LSL
	0x033D1BC0 BR X9
	0x033D1BC4 AND W8, W28, W27, 0x0
	0x033D1BC8 B 0x33D2180
	0x033D1BCC LDR W27, [X23]
	0x033D1BD0 LDR W8, [X25 + 0x10]
	0x033D1BD4 CMP W27, W8
	0x033D1BD8 B.GE 0x33D1C28
	0x033D1BDC MOV X0, X25
	0x033D1BE0 MOV W1, W27
	0x033D1BE4 MOV X2, X31
	0x033D1BE8 BL 0x3222A1C
	0x033D1BEC AND W8, W0, 0xFFFF
	0x033D1BF0 SUB W8, W8, 0x58
	0x033D1BF4 CMP W8, 0x20
	0x033D1BF8 B.HI 0x33D1C14
	0x033D1BFC MOVZ X9, 0x1001
	0x033D1C00 MOVK X9, 0x8800000
	0x033D1C04 LSLV X8, X26, X8
	0x033D1C08 MOVK X9, 0x1
	0x033D1C0C ANDS X31, X8, X9, 0x0
	0x033D1C10 B.NE 0x33D1C24
	0x033D1C14 LDR W8, [X25 + 0x10]
	0x033D1C18 ADD W27, W27, 0x1
	0x033D1C1C CMP W27, W8
	0x033D1C20 B.LT 0x33D1BDC
	0x033D1C24 LDR W8, [X25 + 0x10]
	0x033D1C28 CMP W27, W8
	0x033D1C2C B.GE 0x33D2220
	0x033D1C30 LDR W8, [X23]
	0x033D1C34 MOV X0, X25
	0x033D1C38 MOV X3, X31
	0x033D1C3C SUB W1, W8, 0x1
	0x033D1C40 SUB W8, W27, W8
	0x033D1C44 ADD W2, W8, 0x2
	0x033D1C48 BL 0x3228DE4
	0x033D1C4C CBZ X0, 0x33D221C
	0x033D1C50 LDR W8, [X0 + 0x10]
	0x033D1C54 MOV X27, X0
	0x033D1C58 CMP W8, 0x2
	0x033D1C5C B.LT 0x33D1C94
	0x033D1C60 MOVZ W1, 0x1
	0x033D1C64 MOV X0, X27
	0x033D1C68 MOV X2, X31
	0x033D1C6C BL 0x3222A1C
	0x033D1C70 AND W8, W0, 0xFFFF
	0x033D1C74 CMP W8, 0x3A
	0x033D1C78 B.NE 0x33D1C94
	0x033D1C7C MOVZ W1, 0x1
	0x033D1C80 MOVZ W2, 0x1
	0x033D1C84 MOV X0, X27
	0x033D1C88 MOV X3, X31
	0x033D1C8C BL 0x3228B90
	0x033D1C90 MOV X27, X0
	0x033D1C94 CBZ X20, 0x33D221C
	0x033D1C98 MOV X0, X20
	0x033D1C9C BL 0x33D226C
	0x033D1CA0 STP X0, X1, [X31 + 0x18]
	0x033D1CA4 ADD X0, X31, 0x18
	0x033D1CA8 BL 0x33D2350
	0x033D1CAC MOV X1, X0
	0x033D1CB0 MOV X0, X27
	0x033D1CB4 BL 0x33D23AC
	0x033D1CB8 CBZ X19, 0x33D221C
	0x033D1CBC MOV X1, X0
	0x033D1CC0 MOV X0, X19
	0x033D1CC4 MOV X2, X31
	0x033D1CC8 BL 0x32333E0
	0x033D1CCC B 0x33D2190
	0x033D1CD0 AND W8, W0, 0xFFFF
	0x033D1CD4 CMP W9, 0x5E
	0x033D1CD8 B.HI 0x33D1CF4
	0x033D1CDC CMP W8, 0x4F
	0x033D1CE0 B.EQ 0x33D1FC8
	0x033D1CE4 CMP W8, 0x5E
	0x033D1CE8 B.NE 0x33D1D80
	0x033D1CEC EOR W8, W28, W27, 0x0
	0x033D1CF0 B 0x33D2180
	0x033D1CF4 CMP W8, 0x6D
	0x033D1CF8 B.EQ 0x33D1FD8
	0x033D1CFC CMP W8, 0x7C
	0x033D1D00 B.NE 0x33D1D80
	0x033D1D04 ORR W8, W28, W27, 0x0
	0x033D1D08 B 0x33D2180
	0x033D1D0C SUB W9, W9, 0x3C
	0x033D1D10 CMP W9, 0x5
	0x033D1D14 B.HI 0x33D2180
	0x033D1D18 ADRP X12, 0xFFFFFFFFFD7C5000
	0x033D1D1C ADD X12, X12, 0xA10
	0x033D1D20 ADR X10, 0x10
	0x033D1D24 LDRH W11, [X12, X9, LSL #1]
	0x033D1D28 ADD X10, X10, X11, 0x2, LSL
	0x033D1D2C BR X10
	0x033D1D30 CMP W28, W27
	0x033D1D34 CSET W8, LT
	0x033D1D38 B 0x33D2180
	0x033D1D3C CBZ X20, 0x33D221C
	0x033D1D40 MOV X0, X20
	0x033D1D44 BL 0x33D226C
	0x033D1D48 STP X0, X1, [X31 + 0x18]
	0x033D1D4C LDR W1, [X23]
	0x033D1D50 MOV X27, X0
	0x033D1D54 MOV X0, X25
	0x033D1D58 MOV X2, X31
	0x033D1D5C BL 0x3222A1C
	0x033D1D60 AND W8, W0, 0xFFFF
	0x033D1D64 CMP W27, 0x0
	0x033D1D68 ORN W9, W31, W27, 0x0
	0x033D1D6C CSET W10, EQ
	0x033D1D70 CMP W8, 0x21
	0x033D1D74 CSEL X8, X10, X9, EQ
	0x033D1D78 AND X1, X8, 0x0
	0x033D1D7C B 0x33D2184
	0x033D1D80 MOV W8, W31
	0x033D1D84 B 0x33D2180
	0x033D1D88 CBZ X20, 0x33D221C
	0x033D1D8C MOV X0, X20
	0x033D1D90 BL 0x33D226C
	0x033D1D94 STP X0, X1, [X31 + 0x18]
	0x033D1D98 CBZ X19, 0x33D221C
	0x033D1D9C MOV X8, X0
	0x033D1DA0 MOV X0, X19
	0x033D1DA4 MOV W1, W8
	0x033D1DA8 B 0x33D1B38
	0x033D1DAC CBZ X20, 0x33D221C
	0x033D1DB0 MOV X0, X20
	0x033D1DB4 BL 0x33D226C
	0x033D1DB8 STP X0, X1, [X31 + 0x18]
	0x033D1DBC CBZ X19, 0x33D221C
	0x033D1DC0 MOV X8, X0
	0x033D1DC4 MOV X0, X19
	0x033D1DC8 MOV W1, W8
	0x033D1DCC MOV X2, X31
	0x033D1DD0 BL 0x3233E30
	0x033D1DD4 B 0x33D2190
	0x033D1DD8 LDR W8, [X23]
	0x033D1DDC MOV X0, X25
	0x033D1DE0 MOV X2, X31
	0x033D1DE4 ADD W1, W8, 0x1
	0x033D1DE8 STR W1, [X23]
	0x033D1DEC BL 0x3222A1C
	0x033D1DF0 LDP X1, X2, [X31 + 0x8]
	0x033D1DF4 ADD X3, X31, 0x28
	0x033D1DF8 BL 0x33D26A4
	0x033D1DFC CBZ X0, 0x33D221C
	0x033D1E00 LDRSW X8, [X31 + 0x28]
	0x033D1E04 LDR W9, [X0 + 0x18]
	0x033D1E08 CMP W8, W9
	0x033D1E0C B.CS 0x33D2268
	0x033D1E10 CBZ X20, 0x33D221C
	0x033D1E14 ADD X8, X0, X8, 0x4, LSL
	0x033D1E18 B 0x33D1EB0
	0x033D1E1C CBZ X24, 0x33D221C
	0x033D1E20 LDR W8, [X24 + 0x18]
	0x033D1E24 CBZ W8, 0x33D2268
	0x033D1E28 LDR W9, [X24 + 0x20]
	0x033D1E2C CMP W8, 0x1
	0x033D1E30 ADD W8, W9, 0x1
	0x033D1E34 STP X8, X31, [X24 + 0x20]
	0x033D1E38 B.EQ 0x33D2268
	0x033D1E3C LDR W8, [X24 + 0x30]
	0x033D1E40 ADD W8, W8, 0x1
	0x033D1E44 STP X8, X31, [X24 + 0x30]
	0x033D1E48 B 0x33D2190
	0x033D1E4C CBZ X20, 0x33D221C
	0x033D1E50 MOV X0, X20
	0x033D1E54 BL 0x33D226C
	0x033D1E58 ADRP X8, 0x100C000
	0x033D1E5C LDRB W8, [X8 + 0x2CA]
	0x033D1E60 MOV X27, X1
	0x033D1E64 STP X0, X1, [X31 + 0x18]
	0x033D1E68 TBZ X8, 0x0, 0x33D20C0
	0x033D1E6C CBZ X27, 0x33D20D8
	0x033D1E70 CBNZ X27, 0x33D20F0
	0x033D1E74 B 0x33D221C
	0x033D1E78 LDR W8, [X23]
	0x033D1E7C MOV X0, X25
	0x033D1E80 MOV X2, X31
	0x033D1E84 ADD W1, W8, 0x1
	0x033D1E88 STR W1, [X23]
	0x033D1E8C BL 0x3222A1C
	0x033D1E90 CBZ X24, 0x33D221C
	0x033D1E94 LDR W9, [X24 + 0x18]
	0x033D1E98 AND X8, X0, 0xFFFF
	0x033D1E9C SUB X8, X8, 0x31
	0x033D1EA0 CMP W8, W9
	0x033D1EA4 B.CS 0x33D2268
	0x033D1EA8 CBZ X20, 0x33D221C
	0x033D1EAC ADD X8, X24, X8, 0x4, LSL
	0x033D1EB0 LDP X1, X2, [X8 + 0x20]
	0x033D1EB4 MOV X0, X20
	0x033D1EB8 B 0x33D218C
	0x033D1EBC CBZ X20, 0x33D221C
	0x033D1EC0 MOV X0, X20
	0x033D1EC4 BL 0x33D226C
	0x033D1EC8 ADRP X8, 0x100C000
	0x033D1ECC LDRB W8, [X8 + 0x2CA]
	0x033D1ED0 MOV X27, X1
	0x033D1ED4 STP X0, X1, [X31 + 0x18]
	0x033D1ED8 TBZ X8, 0x0, 0x33D20F8
	0x033D1EDC CBZ X27, 0x33D2110
	0x033D1EE0 CBNZ X19, 0x33D2128
	0x033D1EE4 B 0x33D221C
	0x033D1EE8 CBZ X20, 0x33D221C
	0x033D1EEC MOV X0, X20
	0x033D1EF0 BL 0x33D226C
	0x033D1EF4 LDR W8, [X23]
	0x033D1EF8 LDP X4, X5, [X31 + 0x8]
	0x033D1EFC MOV X27, X0
	0x033D1F00 MOV X0, X25
	0x033D1F04 ADD W8, W8, 0x1
	0x033D1F08 MOV X1, X23
	0x033D1F0C MOV X2, X24
	0x033D1F10 MOV X3, X20
	0x033D1F14 STR W8, [X23]
	0x033D1F18 BL 0x33D1A0C
	0x033D1F1C CBZ W27, 0x33D1F34
	0x033D1F20 CBZ X19, 0x33D221C
	0x033D1F24 MOV X1, X0
	0x033D1F28 MOV X0, X19
	0x033D1F2C MOV X2, X31
	0x033D1F30 BL 0x32333E0
	0x033D1F34 MOV X0, X20
	0x033D1F38 BL 0x33D226C
	0x033D1F3C STP X0, X1, [X31 + 0x18]
	0x033D1F40 CBNZ W0, 0x33D1F90
	0x033D1F44 LDR W8, [X23]
	0x033D1F48 LDP X4, X5, [X31 + 0x8]
	0x033D1F4C MOV X0, X25
	0x033D1F50 MOV X1, X23
	0x033D1F54 ADD W8, W8, 0x1
	0x033D1F58 MOV X2, X24
	0x033D1F5C MOV X3, X20
	0x033D1F60 STR W8, [X23]
	0x033D1F64 BL 0x33D1A0C
	0x033D1F68 CBNZ W27, 0x33D1F80
	0x033D1F6C CBZ X19, 0x33D221C
	0x033D1F70 MOV X1, X0
	0x033D1F74 MOV X0, X19
	0x033D1F78 MOV X2, X31
	0x033D1F7C BL 0x32333E0
	0x033D1F80 MOV X0, X20
	0x033D1F84 BL 0x33D226C
	0x033D1F88 STP X0, X1, [X31 + 0x18]
	0x033D1F8C CBZ W0, 0x33D2220
	0x033D1F90 TBZ X29, 0x0, 0x33D21B4
	0x033D1F94 MOV W8, W31
	0x033D1F98 B 0x33D2194
	0x033D1F9C LDR W8, [X23]
	0x033D1FA0 MOV X0, X25
	0x033D1FA4 MOV X2, X31
	0x033D1FA8 ADD W1, W8, 0x1
	0x033D1FAC STR W1, [X23]
	0x033D1FB0 BL 0x3222A1C
	0x033D1FB4 AND W8, W0, 0xFFFF
	0x033D1FB8 CMP W8, 0x7D
	0x033D1FBC B.NE 0x33D2070
	0x033D1FC0 MOV W27, W31
	0x033D1FC4 B 0x33D20B4
	0x033D1FC8 ORR W8, W28, W27, 0x0
	0x033D1FCC CMP W8, 0x0
	0x033D1FD0 CSET W8, NE
	0x033D1FD4 B 0x33D2180
	0x033D1FD8 SDIV W8, W28, W27
	0x033D1FDC MSUB W8, W8, W27, W28
	0x033D1FE0 B 0x33D2180
	0x033D1FE4 LDR W8, [X23]
	0x033D1FE8 MOV X0, X25
	0x033D1FEC MOV X2, X31
	0x033D1FF0 ADD W1, W8, 0x1
	0x033D1FF4 BL 0x3222A1C
	0x033D1FF8 CBZ X20, 0x33D221C
	0x033D1FFC AND X1, X0, 0xFFFF
	0x033D2000 MOV X0, X20
	0x033D2004 MOV X2, X31
	0x033D2008 BL 0x33D25CC
	0x033D200C LDR W8, [X23]
	0x033D2010 ADD W8, W8, 0x2
	0x033D2014 STR W8, [X23]
	0x033D2018 B 0x33D2190
	0x033D201C LDR W8, [X23]
	0x033D2020 MOV X0, X25
	0x033D2024 MOV X2, X31
	0x033D2028 ADD W1, W8, 0x1
	0x033D202C STR W1, [X23]
	0x033D2030 BL 0x3222A1C
	0x033D2034 LDP X1, X2, [X31 + 0x8]
	0x033D2038 ADD X3, X31, 0x2C
	0x033D203C BL 0x33D26A4
	0x033D2040 CBZ X20, 0x33D221C
	0x033D2044 LDRSW X28, [X31 + 0x2C]
	0x033D2048 MOV X27, X0
	0x033D204C MOV X0, X20
	0x033D2050 BL 0x33D226C
	0x033D2054 CBZ X27, 0x33D221C
	0x033D2058 LDR W8, [X27 + 0x18]
	0x033D205C CMP W28, W8
	0x033D2060 B.CS 0x33D2268
	0x033D2064 ADD X8, X27, X28, 0x4, LSL
	0x033D2068 STP X0, X1, [X8 + 0x20]
	0x033D206C B 0x33D2190
	0x033D2070 MOV W27, W31
	0x033D2074 LDR W1, [X23]
	0x033D2078 MOV X0, X25
	0x033D207C MOV X2, X31
	0x033D2080 BL 0x3222A1C
	0x033D2084 LDR W8, [X23]
	0x033D2088 MUL W9, W27, W21
	0x033D208C ADD W9, W9, W0, UXTH
	0x033D2090 MOV X0, X25
	0x033D2094 ADD W1, W8, 0x1
	0x033D2098 MOV X2, X31
	0x033D209C SUB W27, W9, 0x30
	0x033D20A0 STR W1, [X23]
	0x033D20A4 BL 0x3222A1C
	0x033D20A8 AND W8, W0, 0xFFFF
	0x033D20AC CMP W8, 0x7D
	0x033D20B0 B.NE 0x33D2074
	0x033D20B4 CBZ X20, 0x33D221C
	0x033D20B8 MOV W1, W27
	0x033D20BC B 0x33D2184
	0x033D20C0 ADRP X0, 0xD23000
	0x033D20C4 LDR X0, [X0 + 0x278]
	0x033D20C8 BL 0x1C16CF4
	0x033D20CC ADRP X8, 0x100B000
	0x033D20D0 STRB W26, [X8 + 0x2CA]
	0x033D20D4 CBNZ X27, 0x33D1E70
	0x033D20D8 ADRP X8, 0xD23000
	0x033D20DC LDR X8, [X8 + 0x278]
	0x033D20E0 LDR X8, [X8]
	0x033D20E4 LDR X8, [X8 + 0xB8]
	0x033D20E8 LDR X27, [X8]
	0x033D20EC CBZ X27, 0x33D221C
	0x033D20F0 LDR W1, [X27 + 0x10]
	0x033D20F4 B 0x33D2184
	0x033D20F8 ADRP X0, 0xD23000
	0x033D20FC LDR X0, [X0 + 0x278]
	0x033D2100 BL 0x1C16CF4
	0x033D2104 ADRP X8, 0x100B000
	0x033D2108 STRB W26, [X8 + 0x2CA]
	0x033D210C CBNZ X27, 0x33D1EE0
	0x033D2110 ADRP X8, 0xD23000
	0x033D2114 LDR X8, [X8 + 0x278]
	0x033D2118 LDR X8, [X8]
	0x033D211C LDR X8, [X8 + 0xB8]
	0x033D2120 LDR X27, [X8]
	0x033D2124 CBZ X19, 0x33D221C
	0x033D2128 MOV X0, X19
	0x033D212C MOV X1, X27
	0x033D2130 B 0x33D1CC4
	0x033D2134 MUL W8, W28, W27
	0x033D2138 B 0x33D2180
	0x033D213C ADD W8, W28, W27
	0x033D2140 B 0x33D2180
	0x033D2144 SUB W8, W28, W27
	0x033D2148 B 0x33D2180
	0x033D214C SDIV W8, W28, W27
	0x033D2150 B 0x33D2180
	0x033D2154 CMP W28, W27
	0x033D2158 CSET W8, EQ
	0x033D215C B 0x33D2180
	0x033D2160 CMP W28, W27
	0x033D2164 CSET W8, GT
	0x033D2168 B 0x33D2180
	0x033D216C CMP W28, 0x0
	0x033D2170 CSET W8, NE
	0x033D2174 CMP W27, 0x0
	0x033D2178 CSET W9, NE
	0x033D217C AND W8, W9, W8, 0x0
	0x033D2180 MOV W1, W8
	0x033D2184 MOV X0, X20
	0x033D2188 MOV X2, X31
	0x033D218C BL 0x33D25CC
	0x033D2190 MOV W8, W29
	0x033D2194 LDR W9, [X23]
	0x033D2198 MOV W29, W8
	0x033D219C ADD W1, W9, 0x1
	0x033D21A0 STR W1, [X23]
	0x033D21A4 LDR W9, [X25 + 0x10]
	0x033D21A8 CMP W1, W9
	0x033D21AC B.LT 0x33D1AB0
	0x033D21B0 CBZ X20, 0x33D221C
	0x033D21B4 MOVZ W1, 0x1
	0x033D21B8 MOV X0, X20
	0x033D21BC MOV X2, X31
	0x033D21C0 BL 0x33D25CC
	0x033D21C4 CBZ X19, 0x33D221C
	0x033D21C8 LDR X8, [X19]
	0x033D21CC MOV X0, X19
	0x033D21D0 LDP X9, X1, [X8 + 0x168]
	0x033D21D4 BLR X9
	0x033D21D8 LDP X20, X19, [X31 + 0x80]
	0x033D21DC LDP X22, X21, [X31 + 0x70]
	0x033D21E0 LDP X24, X23, [X31 + 0x60]
	0x033D21E4 LDP X26, X25, [X31 + 0x50]
	0x033D21E8 LDP X28, X27, [X31 + 0x40]
	0x033D21EC LDP X29, X30, [X31 + 0x30]
	0x033D21F0 ADD X31, X31, 0x90
	0x033D21F4 RET
	0x033D21F8 LDR W1, [X23]
	0x033D21FC MOV X0, X25
	0x033D2200 MOV X2, X31
	0x033D2204 BL 0x3222A1C
	0x033D2208 CBZ X20, 0x33D221C
	0x033D220C AND W8, W0, 0xFFFF
	0x033D2210 CMP W8, 0x3B
	0x033D2214 CSET W1, EQ
	0x033D2218 B 0x33D21B8
	0x033D221C BL 0x1C16F20
	0x033D2220 ADRP X0, 0xD21000
	0x033D2224 LDR X0, [X0 + 0x5B0]
	0x033D2228 BL 0x1C16D08
	0x033D222C BL 0x1C16F10
	0x033D2230 MOV X19, X0
	0x033D2234 ADRP X0, 0xD5A000
	0x033D2238 LDR X0, [X0 + 0xBD8]
	0x033D223C BL 0x1C16D08
	0x033D2240 MOV X1, X0
	0x033D2244 MOV X0, X19
	0x033D2248 MOV X2, X31
	0x033D224C BL 0x337DF1C
	0x033D2250 ADRP X0, 0xD5A000
	0x033D2254 LDR X0, [X0 + 0xBE0]
	0x033D2258 BL 0x1C16D08
	0x033D225C MOV X1, X0
	0x033D2260 MOV X0, X19
	0x033D2264 BL 0x1C16DEC
	0x033D2268 BL 0x1C16F28
	0x033D226C STP X30, X19, [X31 - 0x10]!
	0x033D2270 LDR W9, [X0 + 0x18]
	0x033D2274 CBZ W9, 0x33D22AC
	0x033D2278 LDR X8, [X0 + 0x10]
	0x033D227C SUB W9, W9, 0x1
	0x033D2280 STR W9, [X0 + 0x18]
	0x033D2284 CBZ X8, 0x33D22F4
	0x033D2288 LDR W10, [X8 + 0x18]
	0x033D228C CMP W9, W10
	0x033D2290 B.CS 0x33D22F8
	0x033D2294 SXTW X9, W9
	0x033D2298 ADD X8, X8, X9, 0x4, LSL
	0x033D229C LDP X0, X1, [X8 + 0x20]
	0x033D22A0 STP X31, X31, [X8 + 0x20]
	0x033D22A4 LDP X30, X19, [X31], #0x10
	0x033D22A8 RET
	0x033D22AC ADRP X0, 0xD21000
	0x033D22B0 LDR X0, [X0 + 0x5B0]
	0x033D22B4 BL 0x1C16D08
	0x033D22B8 BL 0x1C16F10
	0x033D22BC MOV X19, X0
	0x033D22C0 ADRP X0, 0xD5A000
	0x033D22C4 LDR X0, [X0 + 0xBE8]
	0x033D22C8 BL 0x1C16D08
	0x033D22CC MOV X1, X0
	0x033D22D0 MOV X0, X19
	0x033D22D4 MOV X2, X31
	0x033D22D8 BL 0x337DF1C
	0x033D22DC ADRP X0, 0xD5A000
	0x033D22E0 LDR X0, [X0 + 0xBF0]
	0x033D22E4 BL 0x1C16D08
	0x033D22E8 MOV X1, X0
	0x033D22EC MOV X0, X19
	0x033D22F0 BL 0x1C16DEC
	0x033D22F4 BL 0x1C16F20
	0x033D22F8 BL 0x1C16F28
	0x033D22FC STR X30, [X31 - 0x20]!
	0x033D2300 STP X20, X19, [X31 + 0x10]
	0x033D2304 ADRP X20, 0x100B000
	0x033D2308 LDRB W8, [X20 + 0x2CA]
	0x033D230C MOV X19, X0
	0x033D2310 TBNZ X8, 0x0, 0x33D2328
	0x033D2314 ADRP X0, 0xD23000
	0x033D2318 LDR X0, [X0 + 0x278]
	0x033D231C BL 0x1C16CF4
	0x033D2320 MOVZ W8, 0x1
	0x033D2324 STRB W8, [X20 + 0x2CA]
	0x033D2328 LDR X0, [X19 + 0x8]
	0x033D232C CBNZ X0, 0x33D2344
	0x033D2330 ADRP X8, 0xD23000
	0x033D2334 LDR X8, [X8 + 0x278]
	0x033D2338 LDR X8, [X8]
	0x033D233C LDR X8, [X8 + 0xB8]
	0x033D2340 LDR X0, [X8]
	0x033D2344 LDP X20, X19, [X31 + 0x10]
	0x033D2348 LDR X30, [X31], #0x20
	0x033D234C RET
	0x033D2350 STR X30, [X31 - 0x20]!
	0x033D2354 STP X20, X19, [X31 + 0x10]
	0x033D2358 ADRP X20, 0x100B000
	0x033D235C LDRB W8, [X20 + 0x2CB]
	0x033D2360 MOV X19, X0
	0x033D2364 TBNZ X8, 0x0, 0x33D237C
	0x033D2368 ADRP X0, 0xD21000
	0x033D236C LDR X0, [X0 + 0x758]
	0x033D2370 BL 0x1C16CF4
	0x033D2374 MOVZ W8, 0x1
	0x033D2378 STRB W8, [X20 + 0x2CB]
	0x033D237C LDR X0, [X19 + 0x8]
	0x033D2380 CBNZ X0, 0x33D23A0
	0x033D2384 ADRP X9, 0xD21000
	0x033D2388 LDR W8, [X19]
	0x033D238C LDR X9, [X9 + 0x758]
	0x033D2390 ADD X1, X31, 0xC
	0x033D2394 STR W8, [X31 + 0xC]
	0x033D2398 LDR X0, [X9]
	0x033D239C BL 0x1C16E04
	0x033D23A0 LDP X20, X19, [X31 + 0x10]
	0x033D23A4 LDR X30, [X31], #0x20
	0x033D23A8 RET
	0x033D23AC STP X30, X27, [X31 - 0x50]!
	0x033D23B0 STP X26, X25, [X31 + 0x10]
	0x033D23B4 STP X24, X23, [X31 + 0x20]
	0x033D23B8 STP X22, X21, [X31 + 0x30]
	0x033D23BC STP X20, X19, [X31 + 0x40]
	0x033D23C0 ADRP X21, 0x100B000
	0x033D23C4 LDRB W8, [X21 + 0x2C8]
	0x033D23C8 MOV X20, X1
	0x033D23CC MOV X19, X0
	0x033D23D0 TBNZ X8, 0x0, 0x33D2400
	0x033D23D4 ADRP X0, 0xD21000
	0x033D23D8 LDR X0, [X0 + 0x618]
	0x033D23DC BL 0x1C16CF4
	0x033D23E0 ADRP X0, 0xD21000
	0x033D23E4 LDR X0, [X0 + 0x758]
	0x033D23E8 BL 0x1C16CF4
	0x033D23EC ADRP X0, 0xD23000
	0x033D23F0 LDR X0, [X0 + 0x278]
	0x033D23F4 BL 0x1C16CF4
	0x033D23F8 MOVZ W8, 0x1
	0x033D23FC STRB W8, [X21 + 0x2C8]
	0x033D2400 CBZ X20, 0x33D2558
	0x033D2404 ADRP X22, 0xD23000
	0x033D2408 LDR X22, [X22 + 0x278]
	0x033D240C LDR X27, [X20]
	0x033D2410 ADRP X26, 0xD21000
	0x033D2414 LDR X25, [X22]
	0x033D2418 LDR X26, [X26 + 0x758]
	0x033D241C CMP X27, X25
	0x033D2420 B.EQ 0x33D24D4
	0x033D2424 LDR X1, [X26]
	0x033D2428 LDR X8, [X27 + 0x40]
	0x033D242C LDR X9, [X1 + 0x40]
	0x033D2430 CMP X8, X9
	0x033D2434 B.NE 0x33D255C
	0x033D2438 MOV X0, X20
	0x033D243C BL 0x1C16E08
	0x033D2440 LDR W3, [X0]
	0x033D2444 MOV X0, X31
	0x033D2448 MOV X1, X31
	0x033D244C MOV X2, X19
	0x033D2450 BL 0x33D2988
	0x033D2454 MOV W21, W0
	0x033D2458 MOV X23, X31
	0x033D245C CBZ W21, 0x33D24F4
	0x033D2460 TBNZ X21, 0x1F, 0x33D2564
	0x033D2464 ADRP X8, 0xD21000
	0x033D2468 LDR X8, [X8 + 0x618]
	0x033D246C ADD W1, W21, 0x1
	0x033D2470 LDR X0, [X8]
	0x033D2474 BL 0x1C16D6C
	0x033D2478 CBZ X0, 0x33D2558
	0x033D247C LDR X8, [X0 + 0x18]
	0x033D2480 ADD X9, X0, 0x20
	0x033D2484 MOV X22, X0
	0x033D2488 CMP W8, 0x0
	0x033D248C CSEL X24, X31, X9, EQ
	0x033D2490 CMP X27, X25
	0x033D2494 SXTW X25, W8
	0x033D2498 B.EQ 0x33D2518
	0x033D249C LDR X8, [X20]
	0x033D24A0 LDR X1, [X26]
	0x033D24A4 LDR X8, [X8 + 0x40]
	0x033D24A8 LDR X9, [X1 + 0x40]
	0x033D24AC CMP X8, X9
	0x033D24B0 B.NE 0x33D255C
	0x033D24B4 MOV X0, X20
	0x033D24B8 BL 0x1C16E08
	0x033D24BC LDR W3, [X0]
	0x033D24C0 MOV X0, X24
	0x033D24C4 MOV X1, X25
	0x033D24C8 MOV X2, X19
	0x033D24CC BL 0x33D2988
	0x033D24D0 B 0x33D252C
	0x033D24D4 MOV X0, X31
	0x033D24D8 MOV X1, X31
	0x033D24DC MOV X2, X19
	0x033D24E0 MOV X3, X20
	0x033D24E4 BL 0x33D28BC
	0x033D24E8 MOV W21, W0
	0x033D24EC MOV X23, X20
	0x033D24F0 CBNZ W21, 0x33D2460
	0x033D24F4 LDR X8, [X22]
	0x033D24F8 LDP X20, X19, [X31 + 0x40]
	0x033D24FC LDP X22, X21, [X31 + 0x30]
	0x033D2500 LDP X24, X23, [X31 + 0x20]
	0x033D2504 LDR X8, [X8 + 0xB8]
	0x033D2508 LDP X26, X25, [X31 + 0x10]
	0x033D250C LDR X0, [X8]
	0x033D2510 LDP X30, X27, [X31], #0x50
	0x033D2514 RET
	0x033D2518 MOV X0, X24
	0x033D251C MOV X1, X25
	0x033D2520 MOV X2, X19
	0x033D2524 MOV X3, X23
	0x033D2528 BL 0x33D28BC
	0x033D252C CMP W0, W21
	0x033D2530 B.NE 0x33D2584
	0x033D2534 MOV X0, X22
	0x033D2538 MOV W2, W21
	0x033D253C LDP X20, X19, [X31 + 0x40]
	0x033D2540 LDP X22, X21, [X31 + 0x30]
	0x033D2544 LDP X24, X23, [X31 + 0x20]
	0x033D2548 LDP X26, X25, [X31 + 0x10]
	0x033D254C MOV W1, W31
	0x033D2550 LDP X30, X27, [X31], #0x50
	0x033D2554 B 0x33D27C4
	0x033D2558 BL 0x1C16F20
	0x033D255C MOV X0, X20
	0x033D2560 BL 0x1C171E0
	0x033D2564 ADRP X0, 0xD21000
	0x033D2568 LDR X0, [X0 + 0x5B0]
	0x033D256C BL 0x1C16D08
	0x033D2570 BL 0x1C16F10
	0x033D2574 MOV X19, X0
	0x033D2578 ADRP X0, 0xD5A000
	0x033D257C LDR X0, [X0 + 0xBF8]
	0x033D2580 B 0x33D25A0
	0x033D2584 ADRP X0, 0xD21000
	0x033D2588 LDR X0, [X0 + 0x5B0]
	0x033D258C BL 0x1C16D08
	0x033D2590 BL 0x1C16F10
	0x033D2594 MOV X19, X0
	0x033D2598 ADRP X0, 0xD5A000
	0x033D259C LDR X0, [X0 + 0xC00]
	0x033D25A0 BL 0x1C16D08
	0x033D25A4 MOV X1, X0
	0x033D25A8 MOV X0, X19
	0x033D25AC MOV X2, X31
	0x033D25B0 BL 0x337DF1C
	0x033D25B4 ADRP X0, 0xD5A000
	0x033D25B8 LDR X0, [X0 + 0xC08]
	0x033D25BC BL 0x1C16D08
	0x033D25C0 MOV X1, X0
	0x033D25C4 MOV X0, X19
	0x033D25C8 BL 0x1C16DEC
	0x033D25CC STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-64], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Subtract X31, X31, 1920
	009 Move X20, 0x100E000
	010 Move X21, 0xD54000
	011 Move X23, 0xD5D000
	012 Move X22, 0xD5C000
	013 Move W8, [X20+687]
	014 Move X21, [X21+3512]
	015 Move X23, [X23+2960]
	016 Move X22, [X22+1688]
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0xD5C000
	023 Move X0, [X0+1688]
	024 Call 0x1C17CF4
	025 Move X0, 0xD54000
	026 Move X0, [X0+3512]
	027 Call 0x1C17CF4
	028 Move X0, 0xD5D000
	029 Move X0, [X0+2960]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+687], W8
	033 Move X0, [X21]
	034 Call 0x1C17F10
	035 Move X1, X31
	036 Move X20, X0
	037 Call Hashtable..ctor, X0
	038 Move [X19+240], X20
	039 Move X0, [X23]
	040 Move W8, 55
	041 Add X1, X31, 1932
	042 Move [X31+1932], W8
	043 Call 0x1C17E04
	044 Move X21, X0
	045 Add X0, X31, 1904
	046 Move W2, 8
	047 Move W1, W31
	048 Move W3, W31
	049 Move W4, W31
	050 Move W5, W31
	051 Move X6, X31
	052 Move [X31+1912], W31
	053 Move [X31+1904], X31
	054 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	055 Move X8, [X31+1904]
	056 Move W9, [X31+1912]
	057 Move X0, [X22]
	058 Add X1, X31, 1888
	059 Move [X31+1888], X8
	060 Move [X31+1896], W9
	061 Call 0x1C17E04
	062 Compare X20, 0
	063 JumpIfEqual {2027}
	064 Move X8, [X20]
	065 Move X2, X0
	066 Move X0, X20
	067 Move X1, X21
	068 Move X9, [X8+744]
	069 Move X3, [X8+752]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X0, [X23]
	072 Move X20, [X19]
	073 Move W8, 57
	074 Add X1, X31, 1928
	075 Move [X31+1928], W8
	076 Call 0x1C17E04
	077 Move X21, X0
	078 Add X0, X31, 1872
	079 Move W2, 12
	080 Move W1, W31
	081 Move W3, W31
	082 Move W4, W31
	083 Move W5, W31
	084 Move X6, X31
	085 Move [X31+1880], W31
	086 Move [X31+1872], X31
	087 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	088 Move X8, [X31+1872]
	089 Move W9, [X31+1880]
	090 Move X0, [X22]
	091 Add X1, X31, 1856
	092 Move [X31+1856], X8
	093 Move [X31+1864], W9
	094 Call 0x1C17E04
	095 Compare X20, 0
	096 JumpIfEqual {2027}
	097 Move X8, [X20]
	098 Move X2, X0
	099 Move X0, X20
	100 Move X1, X21
	101 Move X9, [X8+744]
	102 Move X3, [X8+752]
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move X0, [X23]
	105 Move X20, [X19]
	106 Move W8, 61
	107 Add X1, X31, 1852
	108 Move [X31+1852], W8
	109 Call 0x1C17E04
	110 Move X21, X0
	111 Add X0, X31, 1840
	112 Move W2, 40
	113 Move W1, W31
	114 Move W3, W31
	115 Move W4, W31
	116 Move W5, W31
	117 Move X6, X31
	118 Move [X31+1848], W31
	119 Move [X31+1840], X31
	120 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	121 Move X8, [X31+1840]
	122 Move W9, [X31+1848]
	123 Move X0, [X22]
	124 Add X1, X31, 1824
	125 Move [X31+1824], X8
	126 Move [X31+1832], W9
	127 Call 0x1C17E04
	128 Compare X20, 0
	129 JumpIfEqual {2027}
	130 Move X8, [X20]
	131 Move X2, X0
	132 Move X0, X20
	133 Move X1, X21
	134 Move X9, [X8+744]
	135 Move X3, [X8+752]
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Move X0, [X23]
	138 Move X20, [X19]
	139 Move W8, 66
	140 Add X1, X31, 1820
	141 Move [X31+1820], W8
	142 Call 0x1C17E04
	143 Move X21, X0
	144 Add X0, X31, 1808
	145 Move W2, 112
	146 Move W1, W31
	147 Move W3, W31
	148 Move W4, W31
	149 Move W5, W31
	150 Move X6, X31
	151 Move [X31+1816], W31
	152 Move [X31+1808], X31
	153 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	154 Move X8, [X31+1808]
	155 Move W9, [X31+1816]
	156 Move X0, [X22]
	157 Add X1, X31, 1792
	158 Move [X31+1792], X8
	159 Move [X31+1800], W9
	160 Call 0x1C17E04
	161 Compare X20, 0
	162 JumpIfEqual {2027}
	163 Move X8, [X20]
	164 Move X2, X0
	165 Move X0, X20
	166 Move X1, X21
	167 Move X9, [X8+744]
	168 Move X3, [X8+752]
	169 NotImplemented "Instruction BLR not yet implemented."
	170 Move X0, [X23]
	171 Move X20, [X19]
	172 Move W8, 67
	173 Add X1, X31, 1788
	174 Move [X31+1788], W8
	175 Call 0x1C17E04
	176 Move X21, X0
	177 Add X0, X31, 1776
	178 Move W2, 121
	179 Move W1, W31
	180 Move W3, W31
	181 Move W4, W31
	182 Move W5, W31
	183 Move X6, X31
	184 Move [X31+1784], W31
	185 Move [X31+1776], X31
	186 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	187 Move X8, [X31+1776]
	188 Move W9, [X31+1784]
	189 Move X0, [X22]
	190 Add X1, X31, 1760
	191 Move [X31+1760], X8
	192 Move [X31+1768], W9
	193 Call 0x1C17E04
	194 Compare X20, 0
	195 JumpIfEqual {2027}
	196 Move X8, [X20]
	197 Move X2, X0
	198 Move X0, X20
	199 Move X1, X21
	200 Move X9, [X8+744]
	201 Move X3, [X8+752]
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move X0, [X23]
	204 Move X20, [X19]
	205 Move W8, 68
	206 Add X1, X31, 1756
	207 Move [X31+1756], W8
	208 Call 0x1C17E04
	209 Move X21, X0
	210 Add X0, X31, 1744
	211 Move W2, 113
	212 Move W1, W31
	213 Move W3, W31
	214 Move W4, W31
	215 Move W5, W31
	216 Move X6, X31
	217 Move [X31+1752], W31
	218 Move [X31+1744], X31
	219 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	220 Move X8, [X31+1744]
	221 Move W9, [X31+1752]
	222 Move X0, [X22]
	223 Add X1, X31, 1728
	224 Move [X31+1728], X8
	225 Move [X31+1736], W9
	226 Call 0x1C17E04
	227 Compare X20, 0
	228 JumpIfEqual {2027}
	229 Move X8, [X20]
	230 Move X2, X0
	231 Move X0, X20
	232 Move X1, X21
	233 Move X9, [X8+744]
	234 Move X3, [X8+752]
	235 NotImplemented "Instruction BLR not yet implemented."
	236 Move X0, [X23]
	237 Move X20, [X19]
	238 Move W8, 69
	239 Add X1, X31, 1724
	240 Move [X31+1724], W8
	241 Call 0x1C17E04
	242 Move X21, X0
	243 Add X0, X31, 1712
	244 Move W2, 114
	245 Move W1, W31
	246 Move W3, W31
	247 Move W4, W31
	248 Move W5, W31
	249 Move X6, X31
	250 Move [X31+1720], W31
	251 Move [X31+1712], X31
	252 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	253 Move X8, [X31+1712]
	254 Move W9, [X31+1720]
	255 Move X0, [X22]
	256 Add X1, X31, 1696
	257 Move [X31+1696], X8
	258 Move [X31+1704], W9
	259 Call 0x1C17E04
	260 Compare X20, 0
	261 JumpIfEqual {2027}
	262 Move X8, [X20]
	263 Move X2, X0
	264 Move X0, X20
	265 Move X1, X21
	266 Move X9, [X8+744]
	267 Move X3, [X8+752]
	268 NotImplemented "Instruction BLR not yet implemented."
	269 Move X0, [X23]
	270 Move X20, [X19]
	271 Move W8, 70
	272 Add X1, X31, 1692
	273 Move [X31+1692], W8
	274 Call 0x1C17E04
	275 Move X21, X0
	276 Add X0, X31, 1680
	277 Move W2, 115
	278 Move W1, W31
	279 Move W3, W31
	280 Move W4, W31
	281 Move W5, W31
	282 Move X6, X31
	283 Move [X31+1688], W31
	284 Move [X31+1680], X31
	285 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	286 Move X8, [X31+1680]
	287 Move W9, [X31+1688]
	288 Move X0, [X22]
	289 Add X1, X31, 1664
	290 Move [X31+1664], X8
	291 Move [X31+1672], W9
	292 Call 0x1C17E04
	293 Compare X20, 0
	294 JumpIfEqual {2027}
	295 Move X8, [X20]
	296 Move X2, X0
	297 Move X0, X20
	298 Move X1, X21
	299 Move X9, [X8+744]
	300 Move X3, [X8+752]
	301 NotImplemented "Instruction BLR not yet implemented."
	302 Move X0, [X23]
	303 Move X20, [X19]
	304 Move W8, 71
	305 Add X1, X31, 1660
	306 Move [X31+1660], W8
	307 Call 0x1C17E04
	308 Move X21, X0
	309 Add X0, X31, 1648
	310 Move W2, 116
	311 Move W1, W31
	312 Move W3, W31
	313 Move W4, W31
	314 Move W5, W31
	315 Move X6, X31
	316 Move [X31+1656], W31
	317 Move [X31+1648], X31
	318 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	319 Move X8, [X31+1648]
	320 Move W9, [X31+1656]
	321 Move X0, [X22]
	322 Add X1, X31, 1632
	323 Move [X31+1632], X8
	324 Move [X31+1640], W9
	325 Call 0x1C17E04
	326 Compare X20, 0
	327 JumpIfEqual {2027}
	328 Move X8, [X20]
	329 Move X2, X0
	330 Move X0, X20
	331 Move X1, X21
	332 Move X9, [X8+744]
	333 Move X3, [X8+752]
	334 NotImplemented "Instruction BLR not yet implemented."
	335 Move X0, [X23]
	336 Move X20, [X19]
	337 Move W8, 72
	338 Add X1, X31, 1628
	339 Move [X31+1628], W8
	340 Call 0x1C17E04
	341 Move X21, X0
	342 Add X0, X31, 1616
	343 Move W2, 117
	344 Move W1, W31
	345 Move W3, W31
	346 Move W4, W31
	347 Move W5, W31
	348 Move X6, X31
	349 Move [X31+1624], W31
	350 Move [X31+1616], X31
	351 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	352 Move X8, [X31+1616]
	353 Move W9, [X31+1624]
	354 Move X0, [X22]
	355 Add X1, X31, 1600
	356 Move [X31+1600], X8
	357 Move [X31+1608], W9
	358 Call 0x1C17E04
	359 Compare X20, 0
	360 JumpIfEqual {2027}
	361 Move X8, [X20]
	362 Move X2, X0
	363 Move X0, X20
	364 Move X1, X21
	365 Move X9, [X8+744]
	366 Move X3, [X8+752]
	367 NotImplemented "Instruction BLR not yet implemented."
	368 Move X0, [X23]
	369 Move X20, [X19]
	370 Move W8, 73
	371 Add X1, X31, 1596
	372 Move [X31+1596], W8
	373 Call 0x1C17E04
	374 Move X21, X0
	375 Add X0, X31, 1584
	376 Move W2, 118
	377 Move W1, W31
	378 Move W3, W31
	379 Move W4, W31
	380 Move W5, W31
	381 Move X6, X31
	382 Move [X31+1592], W31
	383 Move [X31+1584], X31
	384 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	385 Move X8, [X31+1584]
	386 Move W9, [X31+1592]
	387 Move X0, [X22]
	388 Add X1, X31, 1568
	389 Move [X31+1568], X8
	390 Move [X31+1576], W9
	391 Call 0x1C17E04
	392 Compare X20, 0
	393 JumpIfEqual {2027}
	394 Move X8, [X20]
	395 Move X2, X0
	396 Move X0, X20
	397 Move X1, X21
	398 Move X9, [X8+744]
	399 Move X3, [X8+752]
	400 NotImplemented "Instruction BLR not yet implemented."
	401 Move X0, [X23]
	402 Move X20, [X19]
	403 Move W8, 74
	404 Add X1, X31, 1564
	405 Move [X31+1564], W8
	406 Call 0x1C17E04
	407 Move X21, X0
	408 Add X0, X31, 1552
	409 Move W2, 119
	410 Move W1, W31
	411 Move W3, W31
	412 Move W4, W31
	413 Move W5, W31
	414 Move X6, X31
	415 Move [X31+1560], W31
	416 Move [X31+1552], X31
	417 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	418 Move X8, [X31+1552]
	419 Move W9, [X31+1560]
	420 Move X0, [X22]
	421 Add X1, X31, 1536
	422 Move [X31+1536], X8
	423 Move [X31+1544], W9
	424 Call 0x1C17E04
	425 Compare X20, 0
	426 JumpIfEqual {2027}
	427 Move X8, [X20]
	428 Move X2, X0
	429 Move X0, X20
	430 Move X1, X21
	431 Move X9, [X8+744]
	432 Move X3, [X8+752]
	433 NotImplemented "Instruction BLR not yet implemented."
	434 Move X0, [X23]
	435 Move X20, [X19]
	436 Move W8, 75
	437 Add X1, X31, 1532
	438 Move [X31+1532], W8
	439 Call 0x1C17E04
	440 Move X21, X0
	441 Add X0, X31, 1520
	442 Move W2, 120
	443 Move W1, W31
	444 Move W3, W31
	445 Move W4, W31
	446 Move W5, W31
	447 Move X6, X31
	448 Move [X31+1528], W31
	449 Move [X31+1520], X31
	450 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	451 Move X8, [X31+1520]
	452 Move W9, [X31+1528]
	453 Move X0, [X22]
	454 Add X1, X31, 1504
	455 Move [X31+1504], X8
	456 Move [X31+1512], W9
	457 Call 0x1C17E04
	458 Compare X20, 0
	459 JumpIfEqual {2027}
	460 Move X8, [X20]
	461 Move X2, X0
	462 Move X0, X20
	463 Move X1, X21
	464 Move X9, [X8+744]
	465 Move X3, [X8+752]
	466 NotImplemented "Instruction BLR not yet implemented."
	467 Move X0, [X23]
	468 Move X20, [X19]
	469 Move W8, 76
	470 Add X1, X31, 1500
	471 Move [X31+1500], W8
	472 Call 0x1C17E04
	473 Move X21, X0
	474 Add X0, X31, 1488
	475 Move W2, 36
	476 Move W1, W31
	477 Move W3, W31
	478 Move W4, W31
	479 Move W5, W31
	480 Move X6, X31
	481 Move [X31+1496], W31
	482 Move [X31+1488], X31
	483 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	484 Move X8, [X31+1488]
	485 Move W9, [X31+1496]
	486 Move X0, [X22]
	487 Add X1, X31, 1472
	488 Move [X31+1472], X8
	489 Move [X31+1480], W9
	490 Call 0x1C17E04
	491 Compare X20, 0
	492 JumpIfEqual {2027}
	493 Move X8, [X20]
	494 Move X2, X0
	495 Move X0, X20
	496 Move X1, X21
	497 Move X9, [X8+744]
	498 Move X3, [X8+752]
	499 NotImplemented "Instruction BLR not yet implemented."
	500 Move X0, [X23]
	501 Move X20, [X19]
	502 Move W8, 79
	503 Add X1, X31, 1468
	504 Move [X31+1468], W8
	505 Call 0x1C17E04
	506 Move X21, X0
	507 Add X0, X31, 1456
	508 Move W2, 37
	509 Move W1, W31
	510 Move W3, W31
	511 Move W4, W31
	512 Move W5, W31
	513 Move X6, X31
	514 Move [X31+1464], W31
	515 Move [X31+1456], X31
	516 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	517 Move X8, [X31+1456]
	518 Move W9, [X31+1464]
	519 Move X0, [X22]
	520 Add X1, X31, 1440
	521 Move [X31+1440], X8
	522 Move [X31+1448], W9
	523 Call 0x1C17E04
	524 Compare X20, 0
	525 JumpIfEqual {2027}
	526 Move X8, [X20]
	527 Move X2, X0
	528 Move X0, X20
	529 Move X1, X21
	530 Move X9, [X8+744]
	531 Move X3, [X8+752]
	532 NotImplemented "Instruction BLR not yet implemented."
	533 Move X0, [X23]
	534 Move X20, [X19]
	535 Move W8, 80
	536 Add X1, X31, 1436
	537 Move [X31+1436], W8
	538 Call 0x1C17E04
	539 Move X21, X0
	540 Add X0, X31, 1424
	541 Move W2, 97
	542 Move W1, W31
	543 Move W3, W31
	544 Move W4, W31
	545 Move W5, W31
	546 Move X6, X31
	547 Move [X31+1432], W31
	548 Move [X31+1424], X31
	549 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	550 Move X8, [X31+1424]
	551 Move W9, [X31+1432]
	552 Move X0, [X22]
	553 Add X1, X31, 1408
	554 Move [X31+1408], X8
	555 Move [X31+1416], W9
	556 Call 0x1C17E04
	557 Compare X20, 0
	558 JumpIfEqual {2027}
	559 Move X8, [X20]
	560 Move X2, X0
	561 Move X0, X20
	562 Move X1, X21
	563 Move X9, [X8+744]
	564 Move X3, [X8+752]
	565 NotImplemented "Instruction BLR not yet implemented."
	566 Move X0, [X23]
	567 Move X20, [X19]
	568 Move W8, 81
	569 Add X1, X31, 1404
	570 Move [X31+1404], W8
	571 Call 0x1C17E04
	572 Move X21, X0
	573 Add X0, X31, 1392
	574 Move W2, 34
	575 Move W1, W31
	576 Move W3, W31
	577 Move W4, W31
	578 Move W5, W31
	579 Move X6, X31
	580 Move [X31+1400], W31
	581 Move [X31+1392], X31
	582 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	583 Move X8, [X31+1392]
	584 Move W9, [X31+1400]
	585 Move X0, [X22]
	586 Add X1, X31, 1376
	587 Move [X31+1376], X8
	588 Move [X31+1384], W9
	589 Call 0x1C17E04
	590 Compare X20, 0
	591 JumpIfEqual {2027}
	592 Move X8, [X20]
	593 Move X2, X0
	594 Move X0, X20
	595 Move X1, X21
	596 Move X9, [X8+744]
	597 Move X3, [X8+752]
	598 NotImplemented "Instruction BLR not yet implemented."
	599 Move X0, [X23]
	600 Move X20, [X19]
	601 Move W8, 82
	602 Add X1, X31, 1372
	603 Move [X31+1372], W8
	604 Call 0x1C17E04
	605 Move X21, X0
	606 Add X0, X31, 1360
	607 Move W2, 33
	608 Move W1, W31
	609 Move W3, W31
	610 Move W4, W31
	611 Move W5, W31
	612 Move X6, X31
	613 Move [X31+1368], W31
	614 Move [X31+1360], X31
	615 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	616 Move X8, [X31+1360]
	617 Move W9, [X31+1368]
	618 Move X0, [X22]
	619 Add X1, X31, 1344
	620 Move [X31+1344], X8
	621 Move [X31+1352], W9
	622 Call 0x1C17E04
	623 Compare X20, 0
	624 JumpIfEqual {2027}
	625 Move X8, [X20]
	626 Move X2, X0
	627 Move X0, X20
	628 Move X1, X21
	629 Move X9, [X8+744]
	630 Move X3, [X8+752]
	631 NotImplemented "Instruction BLR not yet implemented."
	632 Move X0, [X23]
	633 Move X20, [X19]
	634 Move W8, 83
	635 Add X1, X31, 1340
	636 Move [X31+1340], W8
	637 Call 0x1C17E04
	638 Move X21, X0
	639 Add X0, X31, 1328
	640 Move W2, 39
	641 Move W1, W31
	642 Move W3, W31
	643 Move W4, W31
	644 Move W5, W31
	645 Move X6, X31
	646 Move [X31+1336], W31
	647 Move [X31+1328], X31
	648 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	649 Move X8, [X31+1328]
	650 Move W9, [X31+1336]
	651 Move X0, [X22]
	652 Add X1, X31, 1312
	653 Move [X31+1312], X8
	654 Move [X31+1320], W9
	655 Call 0x1C17E04
	656 Compare X20, 0
	657 JumpIfEqual {2027}
	658 Move X8, [X20]
	659 Move X2, X0
	660 Move X0, X20
	661 Move X1, X21
	662 Move X9, [X8+744]
	663 Move X3, [X8+752]
	664 NotImplemented "Instruction BLR not yet implemented."
	665 Move X0, [X23]
	666 Move X20, [X19]
	667 Move W8, 84
	668 Add X1, X31, 1308
	669 Move [X31+1308], W8
	670 Call 0x1C17E04
	671 Move X21, X0
	672 Add X0, X31, 1296
	673 Move W2, 34
	674 Move W1, W31
	675 Move W3, W31
	676 Move W4, W31
	677 Move W5, W31
	678 Move X6, X31
	679 Move [X31+1304], W31
	680 Move [X31+1296], X31
	681 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	682 Move X8, [X31+1296]
	683 Move W9, [X31+1304]
	684 Move X0, [X22]
	685 Add X1, X31, 1280
	686 Move [X31+1280], X8
	687 Move [X31+1288], W9
	688 Call 0x1C17E04
	689 Compare X20, 0
	690 JumpIfEqual {2027}
	691 Move X8, [X20]
	692 Move X2, X0
	693 Move X0, X20
	694 Move X1, X21
	695 Move X9, [X8+744]
	696 Move X3, [X8+752]
	697 NotImplemented "Instruction BLR not yet implemented."
	698 Move X0, [X23]
	699 Move X20, [X19]
	700 Move W8, 85
	701 Add X1, X31, 1276
	702 Move [X31+1276], W8
	703 Call 0x1C17E04
	704 Move X21, X0
	705 Add X0, X31, 1264
	706 Move W2, 33
	707 Move W1, W31
	708 Move W3, W31
	709 Move W4, W31
	710 Move W5, W31
	711 Move X6, X31
	712 Move [X31+1272], W31
	713 Move [X31+1264], X31
	714 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	715 Move X8, [X31+1264]
	716 Move W9, [X31+1272]
	717 Move X0, [X22]
	718 Add X1, X31, 1248
	719 Move [X31+1248], X8
	720 Move [X31+1256], W9
	721 Call 0x1C17E04
	722 Compare X20, 0
	723 JumpIfEqual {2027}
	724 Move X8, [X20]
	725 Move X2, X0
	726 Move X0, X20
	727 Move X1, X21
	728 Move X9, [X8+744]
	729 Move X3, [X8+752]
	730 NotImplemented "Instruction BLR not yet implemented."
	731 Move X0, [X23]
	732 Move X20, [X19]
	733 Move W8, 87
	734 Add X1, X31, 1244
	735 Move [X31+1244], W8
	736 Call 0x1C17E04
	737 Move X21, X0
	738 Add X0, X31, 1232
	739 Move W2, 38
	740 Move W1, W31
	741 Move W3, W31
	742 Move W4, W31
	743 Move W5, W31
	744 Move X6, X31
	745 Move [X31+1240], W31
	746 Move [X31+1232], X31
	747 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	748 Move X8, [X31+1232]
	749 Move W9, [X31+1240]
	750 Move X0, [X22]
	751 Add X1, X31, 1216
	752 Move [X31+1216], X8
	753 Move [X31+1224], W9
	754 Call 0x1C17E04
	755 Compare X20, 0
	756 JumpIfEqual {2027}
	757 Move X8, [X20]
	758 Move X2, X0
	759 Move X0, X20
	760 Move X1, X21
	761 Move X9, [X8+744]
	762 Move X3, [X8+752]
	763 NotImplemented "Instruction BLR not yet implemented."
	764 Move X0, [X23]
	765 Move X20, [X19]
	766 Move W8, 139
	767 Add X1, X31, 1212
	768 Move [X31+1212], W8
	769 Call 0x1C17E04
	770 Move X21, X0
	771 Add X0, X31, 1200
	772 Move W2, 103
	773 Move W1, W31
	774 Move W3, W31
	775 Move W4, W31
	776 Move W5, W31
	777 Move X6, X31
	778 Move [X31+1208], W31
	779 Move [X31+1200], X31
	780 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	781 Move X8, [X31+1200]
	782 Move W9, [X31+1208]
	783 Move X0, [X22]
	784 Add X1, X31, 1184
	785 Move [X31+1184], X8
	786 Move [X31+1192], W9
	787 Call 0x1C17E04
	788 Compare X20, 0
	789 JumpIfEqual {2027}
	790 Move X8, [X20]
	791 Move X2, X0
	792 Move X0, X20
	793 Move X1, X21
	794 Move X9, [X8+744]
	795 Move X3, [X8+752]
	796 NotImplemented "Instruction BLR not yet implemented."
	797 Move X0, [X23]
	798 Move X20, [X19]
	799 Move W8, 140
	800 Add X1, X31, 1180
	801 Move [X31+1180], W8
	802 Call 0x1C17E04
	803 Move X21, X0
	804 Add X0, X31, 1168
	805 Move W2, 105
	806 Move W1, W31
	807 Move W3, W31
	808 Move W4, W31
	809 Move W5, W31
	810 Move X6, X31
	811 Move [X31+1176], W31
	812 Move [X31+1168], X31
	813 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	814 Move X8, [X31+1168]
	815 Move W9, [X31+1176]
	816 Move X0, [X22]
	817 Add X1, X31, 1152
	818 Move [X31+1152], X8
	819 Move [X31+1160], W9
	820 Call 0x1C17E04
	821 Compare X20, 0
	822 JumpIfEqual {2027}
	823 Move X8, [X20]
	824 Move X2, X0
	825 Move X0, X20
	826 Move X1, X21
	827 Move X9, [X8+744]
	828 Move X3, [X8+752]
	829 NotImplemented "Instruction BLR not yet implemented."
	830 Move X0, [X23]
	831 Move X20, [X19]
	832 Move W8, 141
	833 Add X1, X31, 1148
	834 Move [X31+1148], W8
	835 Call 0x1C17E04
	836 Move X21, X0
	837 Add X0, X31, 1136
	838 Move W2, 101
	839 Move W1, W31
	840 Move W3, W31
	841 Move W4, W31
	842 Move W5, W31
	843 Move X6, X31
	844 Move [X31+1144], W31
	845 Move [X31+1136], X31
	846 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	847 Move X8, [X31+1136]
	848 Move W9, [X31+1144]
	849 Move X0, [X22]
	850 Add X1, X31, 1120
	851 Move [X31+1120], X8
	852 Move [X31+1128], W9
	853 Call 0x1C17E04
	854 Compare X20, 0
	855 JumpIfEqual {2027}
	856 Move X8, [X20]
	857 Move X2, X0
	858 Move X0, X20
	859 Move X1, X21
	860 Move X9, [X8+744]
	861 Move X3, [X8+752]
	862 NotImplemented "Instruction BLR not yet implemented."
	863 Move X0, [X23]
	864 Move X20, [X19]
	865 Move W8, 142
	866 Add X1, X31, 1116
	867 Move [X31+1116], W8
	868 Call 0x1C17E04
	869 Move X21, X0
	870 Add X0, X31, 1104
	871 Move W2, 97
	872 Move W1, W31
	873 Move W3, W31
	874 Move W4, W31
	875 Move W5, W31
	876 Move X6, X31
	877 Move [X31+1112], W31
	878 Move [X31+1104], X31
	879 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	880 Move X8, [X31+1104]
	881 Move W9, [X31+1112]
	882 Move X0, [X22]
	883 Add X1, X31, 1088
	884 Move [X31+1088], X8
	885 Move [X31+1096], W9
	886 Call 0x1C17E04
	887 Compare X20, 0
	888 JumpIfEqual {2027}
	889 Move X8, [X20]
	890 Move X2, X0
	891 Move X0, X20
	892 Move X1, X21
	893 Move X9, [X8+744]
	894 Move X3, [X8+752]
	895 NotImplemented "Instruction BLR not yet implemented."
	896 Move X0, [X23]
	897 Move X20, [X19]
	898 Move W8, 143
	899 Add X1, X31, 1084
	900 Move [X31+1084], W8
	901 Call 0x1C17E04
	902 Move X21, X0
	903 Add X0, X31, 1072
	904 Move W2, 99
	905 Move W1, W31
	906 Move W3, W31
	907 Move W4, W31
	908 Move W5, W31
	909 Move X6, X31
	910 Move [X31+1080], W31
	911 Move [X31+1072], X31
	912 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	913 Move X8, [X31+1072]
	914 Move W9, [X31+1080]
	915 Move X0, [X22]
	916 Add X1, X31, 1056
	917 Move [X31+1056], X8
	918 Move [X31+1064], W9
	919 Call 0x1C17E04
	920 Compare X20, 0
	921 JumpIfEqual {2027}
	922 Move X8, [X20]
	923 Move X2, X0
	924 Move X0, X20
	925 Move X1, X21
	926 Move X9, [X8+744]
	927 Move X3, [X8+752]
	928 NotImplemented "Instruction BLR not yet implemented."
	929 Move X0, [X23]
	930 Move X20, [X19]
	931 Move W8, 148
	932 Add X1, X31, 1052
	933 Move [X31+1052], W8
	934 Call 0x1C17E04
	935 Move X21, X0
	936 Add X0, X31, 1040
	937 Move W2, 9
	938 Move W3, 1
	939 Move W1, W31
	940 Move W4, W31
	941 Move W5, W31
	942 Move X6, X31
	943 Move [X31+1048], W31
	944 Move [X31+1040], X31
	945 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	946 Move X8, [X31+1040]
	947 Move W9, [X31+1048]
	948 Move X0, [X22]
	949 Add X1, X31, 1024
	950 Move [X31+1024], X8
	951 Move [X31+1032], W9
	952 Call 0x1C17E04
	953 Compare X20, 0
	954 JumpIfEqual {2027}
	955 Move X8, [X20]
	956 Move X2, X0
	957 Move X0, X20
	958 Move X1, X21
	959 Move X9, [X8+744]
	960 Move X3, [X8+752]
	961 NotImplemented "Instruction BLR not yet implemented."
	962 Move X0, [X23]
	963 Move X20, [X19]
	964 Move W8, 158
	965 Add X1, X31, 1020
	966 Move [X31+1020], W8
	967 Call 0x1C17E04
	968 Move X21, X0
	969 Add X0, X31, 1008
	970 Move W2, 36
	971 Move W1, W31
	972 Move W3, W31
	973 Move W4, W31
	974 Move W5, W31
	975 Move X6, X31
	976 Move [X31+1016], W31
	977 Move [X31+1008], X31
	978 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	979 Move X8, [X31+1008]
	980 Move W9, [X31+1016]
	981 Move X0, [X22]
	982 Add X1, X31, 992
	983 Move [X31+992], X8
	984 Move [X31+1000], W9
	985 Call 0x1C17E04
	986 Compare X20, 0
	987 JumpIfEqual {2027}
	988 Move X8, [X20]
	989 Move X2, X0
	990 Move X0, X20
	991 Move X1, X21
	992 Move X9, [X8+744]
	993 Move X3, [X8+752]
	994 NotImplemented "Instruction BLR not yet implemented."
	995 Move X0, [X23]
	996 Move X20, [X19]
	997 Move W8, 162
	998 Add X1, X31, 988
	999 Move [X31+988], W8
	1000 Call 0x1C17E04
	1001 Move X21, X0
	1002 Add X0, X31, 976
	1003 Move W1, 67
	1004 Move W2, 67
	1005 Move W4, 1
	1006 Move W3, W31
	1007 Move W5, W31
	1008 Move X6, X31
	1009 Move [X31+984], W31
	1010 Move [X31+976], X31
	1011 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	1012 Move X8, [X31+976]
	1013 Move W9, [X31+984]
	1014 Move X0, [X22]
	1015 Add X1, X31, 960
	1016 Move [X31+960], X8
	1017 Move [X31+968], W9
	1018 Call 0x1C17E04
	1019 Compare X20, 0
	1020 JumpIfEqual {2027}
	1021 Move X8, [X20]
	1022 Move X2, X0
	1023 Move X0, X20
	1024 Move X1, X21
	1025 Move X9, [X8+744]
	1026 Move X3, [X8+752]
	1027 NotImplemented "Instruction BLR not yet implemented."
	1028 Move X0, [X23]
	1029 Move X20, [X19]
	1030 Move W8, 164
	1031 Add X1, X31, 956
	1032 Move [X31+956], W8
	1033 Call 0x1C17E04
	1034 Move X21, X0
	1035 Add X0, X31, 944
	1036 Move W2, 35
	1037 Move W1, W31
	1038 Move W3, W31
	1039 Move W4, W31
	1040 Move W5, W31
	1041 Move X6, X31
	1042 Move [X31+952], W31
	1043 Move [X31+944], X31
	1044 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	1045 Move X8, [X31+944]
	1046 Move W9, [X31+952]
	1047 Move X0, [X22]
	1048 Add X1, X31, 928
	1049 Move [X31+928], X8
	1050 Move [X31+936], W9
	1051 Call 0x1C17E04
	1052 Compare X20, 0
	1053 JumpIfEqual {2027}
	1054 Move X8, [X20]
	1055 Move X2, X0
	1056 Move X0, X20
	1057 Move X1, X21
	1058 Move X9, [X8+744]
	1059 Move X3, [X8+752]
	1060 NotImplemented "Instruction BLR not yet implemented."
	1061 Move X0, [X23]
	1062 Move X20, [X19]
	1063 Move W8, 165
	1064 Add X1, X31, 924
	1065 Move [X31+924], W8
	1066 Call 0x1C17E04
	1067 Move X21, X0
	1068 Add X0, X31, 912
	1069 Move W1, 10
	1070 Move W2, 13
	1071 Move W3, W31
	1072 Move W4, W31
	1073 Move W5, W31
	1074 Move X6, X31
	1075 Move [X31+920], W31
	1076 Move [X31+912], X31
	1077 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	1078 Move X8, [X31+912]
	1079 Move W9, [X31+920]
	1080 Move X0, [X22]
	1081 Add X1, X31, 896
	1082 Move [X31+896], X8
	1083 Move [X31+904], W9
	1084 Call 0x1C17E04
	1085 Compare X20, 0
	1086 JumpIfEqual {2027}
	1087 Move X8, [X20]
	1088 Move X2, X0
	1089 Move X0, X20
	1090 Move X1, X21
	1091 Move X9, [X8+744]
	1092 Move X3, [X8+752]
	1093 NotImplemented "Instruction BLR not yet implemented."
	1094 Move X0, [X23]
	1095 Move X20, [X19]
	1096 Move W8, 168
	1097 Add X1, X31, 892
	1098 Move [X31+892], W8
	1099 Call 0x1C17E04
	1100 Move X21, X0
	1101 Add X0, X31, 880
	1102 Move W2, 47
	1103 Move W1, W31
	1104 Move W3, W31
	1105 Move W4, W31
	1106 Move W5, W31
	1107 Move X6, X31
	1108 Move [X31+888], W31
	1109 Move [X31+880], X31
	1110 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	1111 Move X8, [X31+880]
	1112 Move W9, [X31+888]
	1113 Move X0, [X22]
	1114 Add X1, X31, 864
	1115 Move [X31+864], X8
	1116 Move [X31+872], W9
	1117 Call 0x1C17E04
	1118 Compare X20, 0
	1119 JumpIfEqual {2027}
	1120 Move X8, [X20]
	1121 Move X2, X0
	1122 Move X0, X20
	1123 Move X1, X21
	1124 Move X9, [X8+744]
	1125 Move X3, [X8+752]
	1126 NotImplemented "Instruction BLR not yet implemented."
	1127 Move X0, [X23]
	1128 Move X20, [X19]
	1129 Move W8, 176
	1130 Add X1, X31, 860
	1131 Move [X31+860], W8
	1132 Call 0x1C17E04
	1133 Move X21, X0
	1134 Add X0, X31, 848
	1135 Move W2, 42
	1136 Move W1, W31
	1137 Move W3, W31
	1138 Move W4, W31
	1139 Move W5, W31
	1140 Move X6, X31
	1141 Move [X31+856], W31
	1142 Move [X31+848], X31
	1143 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	1144 Move X8, [X31+848]
	1145 Move W9, [X31+856]
	1146 Move X0, [X22]
	1147 Add X1, X31, 832
	1148 Move [X31+832], X8
	1149 Move [X31+840], W9
	1150 Call 0x1C17E04
	1151 Compare X20, 0
	1152 JumpIfEqual {2027}
	1153 Move X8, [X20]
	1154 Move X2, X0
	1155 Move X0, X20
	1156 Move X1, X21
	1157 Move X9, [X8+744]
	1158 Move X3, [X8+752]
	1159 NotImplemented "Instruction BLR not yet implemented."
	1160 Move X0, [X23]
	1161 Move X20, [X19]
	1162 Move W8, 185
	1163 Add X1, X31, 828
	1164 Move [X31+828], W8
	1165 Call 0x1C17E04
	1166 Move X21, X0
	1167 Add X0, X31, 816
	1168 Move W1, 90
	1169 Move W2, 90
	1170 Move W4, 1
	1171 Move W3, W31
	1172 Move W5, W31
	1173 Move X6, X31
	1174 Move [X31+824], W31
	1175 Move [X31+816], X31
	1176 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	1177 Move X8, [X31+816]
	1178 Move W9, [X31+824]
	1179 Move X0, [X22]
	1180 Add X1, X31, 800
	1181 Move [X31+800], X8
	1182 Move [X31+808], W9
	1183 Call 0x1C17E04
	1184 Compare X20, 0
	1185 JumpIfEqual {2027}
	1186 Move X8, [X20]
	1187 Move X2, X0
	1188 Move X0, X20
	1189 Move X1, X21
	1190 Move X9, [X8+744]
	1191 Move X3, [X8+752]
	1192 NotImplemented "Instruction BLR not yet implemented."
	1193 Move X0, [X23]
	1194 Move X20, [X19]
	1195 Move W8, 186
	1196 Add X1, X31, 796
	1197 Move [X31+796], W8
	1198 Call 0x1C17E04
	1199 Move X21, X0
	1200 Add X0, X31, 784
	1201 Move W2, 36
	1202 Move W3, 1
	1203 Move W1, W31
	1204 Move W4, W31
	1205 Move W5, W31
	1206 Move X6, X31
	1207 Move [X31+792], W31
	1208 Move [X31+784], X31
	1209 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	1210 Move X8, [X31+784]
	1211 Move W9, [X31+792]
	1212 Move X0, [X22]
	1213 Add X1, X31, 768
	1214 Move [X31+768], X8
	1215 Move [X31+776], W9
	1216 Call 0x1C17E04
	1217 Compare X20, 0
	1218 JumpIfEqual {2027}
	1219 Move X8, [X20]
	1220 Move X2, X0
	1221 Move X0, X20
	1222 Move X1, X21
	1223 Move X9, [X8+744]
	1224 Move X3, [X8+752]
	1225 NotImplemented "Instruction BLR not yet implemented."
	1226 Move X0, [X23]
	1227 Move X20, [X19]
	1228 Move W8, 189
	1229 Add X1, X31, 764
	1230 Move [X31+764], W8
	1231 Call 0x1C17E04
	1232 Move X21, X0
	1233 Add X0, X31, 752
	1234 Move W1, 67
	1235 Move W2, 67
	1236 Move W3, 1
	1237 Move W4, 1
	1238 Move W5, W31
	1239 Move X6, X31
	1240 Move [X31+760], W31
	1241 Move [X31+752], X31
	1242 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	1243 Move X8, [X31+752]
	1244 Move W9, [X31+760]
	1245 Move X0, [X22]
	1246 Add X1, X31, 736
	1247 Move [X31+736], X8
	1248 Move [X31+744], W9
	1249 Call 0x1C17E04
	1250 Compare X20, 0
	1251 JumpIfEqual {2027}
	1252 Move X8, [X20]
	1253 Move X2, X0
	1254 Move X0, X20
	1255 Move X1, X21
	1256 Move X9, [X8+744]
	1257 Move X3, [X8+752]
	1258 NotImplemented "Instruction BLR not yet implemented."
	1259 Move X0, [X23]
	1260 Move X20, [X19]
	1261 Move W8, 191
	1262 Add X1, X31, 732
	1263 Move [X31+732], W8
	1264 Call 0x1C17E04
	1265 Move X21, X0
	1266 Add X0, X31, 720
	1267 Move W1, 9
	1268 Move W2, 46
	1269 Move W3, 1
	1270 Move W4, W31
	1271 Move W5, W31
	1272 Move X6, X31
	1273 Move [X31+728], W31
	1274 Move [X31+720], X31
	1275 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	1276 Move X8, [X31+720]
	1277 Move W9, [X31+728]
	1278 Move X0, [X22]
	1279 Add X1, X31, 704
	1280 Move [X31+704], X8
	1281 Move [X31+712], W9
	1282 Call 0x1C17E04
	1283 Compare X20, 0
	1284 JumpIfEqual {2027}
	1285 Move X8, [X20]
	1286 Move X2, X0
	1287 Move X0, X20
	1288 Move X1, X21
	1289 Move X9, [X8+744]
	1290 Move X3, [X8+752]
	1291 NotImplemented "Instruction BLR not yet implemented."
	1292 Move X0, [X23]
	1293 Move X20, [X19]
	1294 Move W8, 198
	1295 Add X1, X31, 700
	1296 Move [X31+700], W8
	1297 Call 0x1C17E04
	1298 Move X21, X0
	1299 Add X0, X31, 688
	1300 Move W2, 47
	1301 Move W3, 1
	1302 Move W1, W31
	1303 Move W4, W31
	1304 Move W5, W31
	1305 Move X6, X31
	1306 Move [X31+696], W31
	1307 Move [X31+688], X31
	1308 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	1309 Move X8, [X31+688]
	1310 Move W9, [X31+696]
	1311 Move X0, [X22]
	1312 Add X1, X31, 672
	1313 Move [X31+672], X8
	1314 Move [X31+680], W9
	1315 Call 0x1C17E04
	1316 Compare X20, 0
	1317 JumpIfEqual {2027}
	1318 Move X8, [X20]
	1319 Move X2, X0
	1320 Move X0, X20
	1321 Move X1, X21
	1322 Move X9, [X8+744]
	1323 Move X3, [X8+752]
	1324 NotImplemented "Instruction BLR not yet implemented."
	1325 Move X0, [X23]
	1326 Move X20, [X19]
	1327 Move W8, 199
	1328 Add X1, X31, 668
	1329 Move [X31+668], W8
	1330 Call 0x1C17E04
	1331 Move X21, X0
	1332 Add X0, X31, 656
	1333 Move W2, 36
	1334 Move W3, 1
	1335 Move W1, W31
	1336 Move W4, W31
	1337 Move W5, W31
	1338 Move X6, X31
	1339 Move [X31+664], W31
	1340 Move [X31+656], X31
	1341 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	1342 Move X8, [X31+656]
	1343 Move W9, [X31+664]
	1344 Move X0, [X22]
	1345 Add X1, X31, 640
	1346 Move [X31+640], X8
	1347 Move [X31+648], W9
	1348 Call 0x1C17E04
	1349 Compare X20, 0
	1350 JumpIfEqual {2027}
	1351 Move X8, [X20]
	1352 Move X2, X0
	1353 Move X0, X20
	1354 Move X1, X21
	1355 Move X9, [X8+744]
	1356 Move X3, [X8+752]
	1357 NotImplemented "Instruction BLR not yet implemented."
	1358 Move X0, [X23]
	1359 Move X20, [X19]
	1360 Move W8, 201
	1361 Add X1, X31, 636
	1362 Move [X31+636], W8
	1363 Call 0x1C17E04
	1364 Move X21, X0
	1365 Add X0, X31, 624
	1366 Move W2, 37
	1367 Move W3, 1
	1368 Move W1, W31
	1369 Move W4, W31
	1370 Move W5, W31
	1371 Move X6, X31
	1372 Move [X31+632], W31
	1373 Move [X31+624], X31
	1374 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	1375 Move X8, [X31+624]
	1376 Move W9, [X31+632]
	1377 Move X0, [X22]
	1378 Add X1, X31, 608
	1379 Move [X31+608], X8
	1380 Move [X31+616], W9
	1381 Call 0x1C17E04
	1382 Compare X20, 0
	1383 JumpIfEqual {2027}
	1384 Move X8, [X20]
	1385 Move X2, X0
	1386 Move X0, X20
	1387 Move X1, X21
	1388 Move X9, [X8+744]
	1389 Move X3, [X8+752]
	1390 NotImplemented "Instruction BLR not yet implemented."
	1391 Move X0, [X23]
	1392 Move X20, [X19]
	1393 Move W8, 207
	1394 Add X1, X31, 604
	1395 Move [X31+604], W8
	1396 Call 0x1C17E04
	1397 Move X21, X0
	1398 Add X0, X31, 592
	1399 Move W2, 42
	1400 Move W3, 1
	1401 Move W1, W31
	1402 Move W4, W31
	1403 Move W5, W31
	1404 Move X6, X31
	1405 Move [X31+600], W31
	1406 Move [X31+592], X31
	1407 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	1408 Move X8, [X31+592]
	1409 Move W9, [X31+600]
	1410 Move X0, [X22]
	1411 Add X1, X31, 576
	1412 Move [X31+576], X8
	1413 Move [X31+584], W9
	1414 Call 0x1C17E04
	1415 Compare X20, 0
	1416 JumpIfEqual {2027}
	1417 Move X8, [X20]
	1418 Move X2, X0
	1419 Move X0, X20
	1420 Move X1, X21
	1421 Move X9, [X8+744]
	1422 Move X3, [X8+752]
	1423 NotImplemented "Instruction BLR not yet implemented."
	1424 Move X0, [X23]
	1425 Move X20, [X19]
	1426 Move W8, 210
	1427 Add X1, X31, 572
	1428 Move [X31+572], W8
	1429 Call 0x1C17E04
	1430 Move X21, X0
	1431 Add X0, X31, 560
	1432 Move W2, 39
	1433 Move W3, 1
	1434 Move W1, W31
	1435 Move W4, W31
	1436 Move W5, W31
	1437 Move X6, X31
	1438 Move [X31+568], W31
	1439 Move [X31+560], X31
	1440 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	1441 Move X8, [X31+560]
	1442 Move W9, [X31+568]
	1443 Move X0, [X22]
	1444 Add X1, X31, 544
	1445 Move [X31+544], X8
	1446 Move [X31+552], W9
	1447 Call 0x1C17E04
	1448 Compare X20, 0
	1449 JumpIfEqual {2027}
	1450 Move X8, [X20]
	1451 Move X2, X0
	1452 Move X0, X20
	1453 Move X1, X21
	1454 Move X9, [X8+744]
	1455 Move X3, [X8+752]
	1456 NotImplemented "Instruction BLR not yet implemented."
	1457 Move X0, [X23]
	1458 Move X20, [X19]
	1459 Move W8, 214
	1460 Add X1, X31, 540
	1461 Move [X31+540], W8
	1462 Call 0x1C17E04
	1463 Move X21, X0
	1464 Add X0, X31, 528
	1465 Move W1, 90
	1466 Move W2, 90
	1467 Move W3, 1
	1468 Move W4, W31
	1469 Move W5, W31
	1470 Move X6, X31
	1471 Move [X31+536], W31
	1472 Move [X31+528], X31
	1473 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	1474 Move X8, [X31+528]
	1475 Move W9, [X31+536]
	1476 Move X0, [X22]
	1477 Add X1, X31, 512
	1478 Move [X31+512], X8
	1479 Move [X31+520], W9
	1480 Call 0x1C17E04
	1481 Compare X20, 0
	1482 JumpIfEqual {2027}
	1483 Move X8, [X20]
	1484 Move X2, X0
	1485 Move X0, X20
	1486 Move X1, X21
	1487 Move X9, [X8+744]
	1488 Move X3, [X8+752]
	1489 NotImplemented "Instruction BLR not yet implemented."
	1490 Move X0, [X23]
	1491 Move X20, [X19]
	1492 Move W8, 216
	1493 Add X1, X31, 508
	1494 Move [X31+508], W8
	1495 Call 0x1C17E04
	1496 Move X21, X0
	1497 Add X0, X31, 496
	1498 Move W2, 122
	1499 Move W1, W31
	1500 Move W3, W31
	1501 Move W4, W31
	1502 Move W5, W31
	1503 Move X6, X31
	1504 Move [X31+504], W31
	1505 Move [X31+496], X31
	1506 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	1507 Move X8, [X31+496]
	1508 Move W9, [X31+504]
	1509 Move X0, [X22]
	1510 Add X1, X31, 480
	1511 Move [X31+480], X8
	1512 Move [X31+488], W9
	1513 Call 0x1C17E04
	1514 Compare X20, 0
	1515 JumpIfEqual {2027}
	1516 Move X8, [X20]
	1517 Move X2, X0
	1518 Move X0, X20
	1519 Move X1, X21
	1520 Move X9, [X8+744]
	1521 Move X3, [X8+752]
	1522 NotImplemented "Instruction BLR not yet implemented."
	1523 Move X0, [X23]
	1524 Move X20, [X19]
	1525 Move W8, 217
	1526 Add X1, X31, 476
	1527 Move [X31+476], W8
	1528 Call 0x1C17E04
	1529 Move X21, X0
	1530 Add X0, X31, 464
	1531 Move W2, 123
	1532 Move W1, W31
	1533 Move W3, W31
	1534 Move W4, W31
	1535 Move W5, W31
	1536 Move X6, X31
	1537 Move [X31+472], W31
	1538 Move [X31+464], X31
	1539 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	1540 Move X8, [X31+464]
	1541 Move W9, [X31+472]
	1542 Move X0, [X22]
	1543 Add X1, X31, 448
	1544 Move [X31+448], X8
	1545 Move [X31+456], W9
	1546 Call 0x1C17E04
	1547 Compare X20, 0
	1548 JumpIfEqual {2027}
	1549 Move X8, [X20]
	1550 Move X2, X0
	1551 Move X0, X20
	1552 Move X1, X21
	1553 Move X9, [X8+744]
	1554 Move X3, [X8+752]
	1555 NotImplemented "Instruction BLR not yet implemented."
	1556 Move X0, [X23]
	1557 Move X20, [X19]
	1558 Move W8, 218
	1559 Add X1, X31, 444
	1560 Move [X31+444], W8
	1561 Call 0x1C17E04
	1562 Move X21, X0
	1563 Add X0, X31, 432
	1564 Move W2, 124
	1565 Move W1, W31
	1566 Move W3, W31
	1567 Move W4, W31
	1568 Move W5, W31
	1569 Move X6, X31
	1570 Move [X31+440], W31
	1571 Move [X31+432], X31
	1572 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	1573 Move X8, [X31+432]
	1574 Move W9, [X31+440]
	1575 Move X0, [X22]
	1576 Add X1, X31, 416
	1577 Move [X31+416], X8
	1578 Move [X31+424], W9
	1579 Call 0x1C17E04
	1580 Compare X20, 0
	1581 JumpIfEqual {2027}
	1582 Move X8, [X20]
	1583 Move X2, X0
	1584 Move X0, X20
	1585 Move X1, X21
	1586 Move X9, [X8+744]
	1587 Move X3, [X8+752]
	1588 NotImplemented "Instruction BLR not yet implemented."
	1589 Move X0, [X23]
	1590 Move X20, [X19]
	1591 Move W8, 219
	1592 Add X1, X31, 412
	1593 Move [X31+412], W8
	1594 Call 0x1C17E04
	1595 Move X21, X0
	1596 Add X0, X31, 400
	1597 Move W2, 125
	1598 Move W1, W31
	1599 Move W3, W31
	1600 Move W4, W31
	1601 Move W5, W31
	1602 Move X6, X31
	1603 Move [X31+408], W31
	1604 Move [X31+400], X31
	1605 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	1606 Move X8, [X31+400]
	1607 Move W9, [X31+408]
	1608 Move X0, [X22]
	1609 Add X1, X31, 384
	1610 Move [X31+384], X8
	1611 Move [X31+392], W9
	1612 Call 0x1C17E04
	1613 Compare X20, 0
	1614 JumpIfEqual {2027}
	1615 Move X8, [X20]
	1616 Move X2, X0
	1617 Move X0, X20
	1618 Move X1, X21
	1619 Move X9, [X8+744]
	1620 Move X3, [X8+752]
	1621 NotImplemented "Instruction BLR not yet implemented."
	1622 Move X0, [X23]
	1623 Move X20, [X19]
	1624 Move W8, 220
	1625 Add X1, X31, 380
	1626 Move [X31+380], W8
	1627 Call 0x1C17E04
	1628 Move X21, X0
	1629 Add X0, X31, 368
	1630 Move W2, 126
	1631 Move W1, W31
	1632 Move W3, W31
	1633 Move W4, W31
	1634 Move W5, W31
	1635 Move X6, X31
	1636 Move [X31+376], W31
	1637 Move [X31+368], X31
	1638 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	1639 Move X8, [X31+368]
	1640 Move W9, [X31+376]
	1641 Move X0, [X22]
	1642 Add X1, X31, 352
	1643 Move [X31+352], X8
	1644 Move [X31+360], W9
	1645 Call 0x1C17E04
	1646 Compare X20, 0
	1647 JumpIfEqual {2027}
	1648 Move X8, [X20]
	1649 Move X2, X0
	1650 Move X0, X20
	1651 Move X1, X21
	1652 Move X9, [X8+744]
	1653 Move X3, [X8+752]
	1654 NotImplemented "Instruction BLR not yet implemented."
	1655 Move X0, [X23]
	1656 Move X20, [X19]
	1657 Move W8, 221
	1658 Add X1, X31, 348
	1659 Move [X31+348], W8
	1660 Call 0x1C17E04
	1661 Move X21, X0
	1662 Add X0, X31, 336
	1663 Move W2, 127
	1664 Move W1, W31
	1665 Move W3, W31
	1666 Move W4, W31
	1667 Move W5, W31
	1668 Move X6, X31
	1669 Move [X31+344], W31
	1670 Move [X31+336], X31
	1671 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	1672 Move X8, [X31+336]
	1673 Move W9, [X31+344]
	1674 Move X0, [X22]
	1675 Add X1, X31, 320
	1676 Move [X31+320], X8
	1677 Move [X31+328], W9
	1678 Call 0x1C17E04
	1679 Compare X20, 0
	1680 JumpIfEqual {2027}
	1681 Move X8, [X20]
	1682 Move X2, X0
	1683 Move X0, X20
	1684 Move X1, X21
	1685 Move X9, [X8+744]
	1686 Move X3, [X8+752]
	1687 NotImplemented "Instruction BLR not yet implemented."
	1688 Move X0, [X23]
	1689 Move X20, [X19]
	1690 Move W8, 222
	1691 Add X1, X31, 316
	1692 Move [X31+316], W8
	1693 Call 0x1C17E04
	1694 Move X21, X0
	1695 Add X0, X31, 304
	1696 Move W2, 128
	1697 Move W1, W31
	1698 Move W3, W31
	1699 Move W4, W31
	1700 Move W5, W31
	1701 Move X6, X31
	1702 Move [X31+312], W31
	1703 Move [X31+304], X31
	1704 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	1705 Move X8, [X31+304]
	1706 Move W9, [X31+312]
	1707 Move X0, [X22]
	1708 Add X1, X31, 288
	1709 Move [X31+288], X8
	1710 Move [X31+296], W9
	1711 Call 0x1C17E04
	1712 Compare X20, 0
	1713 JumpIfEqual {2027}
	1714 Move X8, [X20]
	1715 Move X2, X0
	1716 Move X0, X20
	1717 Move X1, X21
	1718 Move X9, [X8+744]
	1719 Move X3, [X8+752]
	1720 NotImplemented "Instruction BLR not yet implemented."
	1721 Move X0, [X23]
	1722 Move X20, [X19]
	1723 Move W8, 223
	1724 Add X1, X31, 284
	1725 Move [X31+284], W8
	1726 Call 0x1C17E04
	1727 Move X21, X0
	1728 Add X0, X31, 272
	1729 Move W2, 129
	1730 Move W1, W31
	1731 Move W3, W31
	1732 Move W4, W31
	1733 Move W5, W31
	1734 Move X6, X31
	1735 Move [X31+280], W31
	1736 Move [X31+272], X31
	1737 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	1738 Move X8, [X31+272]
	1739 Move W9, [X31+280]
	1740 Move X0, [X22]
	1741 Add X1, X31, 256
	1742 Move [X31+256], X8
	1743 Move [X31+264], W9
	1744 Call 0x1C17E04
	1745 Compare X20, 0
	1746 JumpIfEqual {2027}
	1747 Move X8, [X20]
	1748 Move X2, X0
	1749 Move X0, X20
	1750 Move X1, X21
	1751 Move X9, [X8+744]
	1752 Move X3, [X8+752]
	1753 NotImplemented "Instruction BLR not yet implemented."
	1754 Move X0, [X23]
	1755 Move X20, [X19]
	1756 Move W8, 224
	1757 Add X1, X31, 252
	1758 Move [X31+252], W8
	1759 Call 0x1C17E04
	1760 Move X21, X0
	1761 Add X0, X31, 240
	1762 Move W2, 130
	1763 Move W1, W31
	1764 Move W3, W31
	1765 Move W4, W31
	1766 Move W5, W31
	1767 Move X6, X31
	1768 Move [X31+248], W31
	1769 Move [X31+240], X31
	1770 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	1771 Move X8, [X31+240]
	1772 Move W9, [X31+248]
	1773 Move X0, [X22]
	1774 Add X1, X31, 224
	1775 Move [X31+224], X8
	1776 Move [X31+232], W9
	1777 Call 0x1C17E04
	1778 Compare X20, 0
	1779 JumpIfEqual {2027}
	1780 Move X8, [X20]
	1781 Move X2, X0
	1782 Move X0, X20
	1783 Move X1, X21
	1784 Move X9, [X8+744]
	1785 Move X3, [X8+752]
	1786 NotImplemented "Instruction BLR not yet implemented."
	1787 Move X0, [X23]
	1788 Move X20, [X19]
	1789 Move W8, 225
	1790 Add X1, X31, 220
	1791 Move [X31+220], W8
	1792 Call 0x1C17E04
	1793 Move X21, X0
	1794 Add X0, X31, 208
	1795 Move W2, 131
	1796 Move W1, W31
	1797 Move W3, W31
	1798 Move W4, W31
	1799 Move W5, W31
	1800 Move X6, X31
	1801 Move [X31+216], W31
	1802 Move [X31+208], X31
	1803 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	1804 Move X8, [X31+208]
	1805 Move W9, [X31+216]
	1806 Move X0, [X22]
	1807 Add X1, X31, 192
	1808 Move [X31+192], X8
	1809 Move [X31+200], W9
	1810 Call 0x1C17E04
	1811 Compare X20, 0
	1812 JumpIfEqual {2027}
	1813 Move X8, [X20]
	1814 Move X2, X0
	1815 Move X0, X20
	1816 Move X1, X21
	1817 Move X9, [X8+744]
	1818 Move X3, [X8+752]
	1819 NotImplemented "Instruction BLR not yet implemented."
	1820 Move X0, [X23]
	1821 Move X20, [X19]
	1822 Move W8, 226
	1823 Add X1, X31, 188
	1824 Move [X31+188], W8
	1825 Call 0x1C17E04
	1826 Move X21, X0
	1827 Add X0, X31, 176
	1828 Move W2, 132
	1829 Move W1, W31
	1830 Move W3, W31
	1831 Move W4, W31
	1832 Move W5, W31
	1833 Move X6, X31
	1834 Move [X31+184], W31
	1835 Move [X31+176], X31
	1836 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	1837 Move X8, [X31+176]
	1838 Move W9, [X31+184]
	1839 Move X0, [X22]
	1840 Add X1, X31, 160
	1841 Move [X31+160], X8
	1842 Move [X31+168], W9
	1843 Call 0x1C17E04
	1844 Compare X20, 0
	1845 JumpIfEqual {2027}
	1846 Move X8, [X20]
	1847 Move X2, X0
	1848 Move X0, X20
	1849 Move X1, X21
	1850 Move X9, [X8+744]
	1851 Move X3, [X8+752]
	1852 NotImplemented "Instruction BLR not yet implemented."
	1853 Move X0, [X23]
	1854 Move X20, [X19]
	1855 Move W8, 227
	1856 Add X1, X31, 156
	1857 Move [X31+156], W8
	1858 Call 0x1C17E04
	1859 Move X21, X0
	1860 Add X0, X31, 144
	1861 Move W2, 133
	1862 Move W1, W31
	1863 Move W3, W31
	1864 Move W4, W31
	1865 Move W5, W31
	1866 Move X6, X31
	1867 Move [X31+152], W31
	1868 Move [X31+144], X31
	1869 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	1870 Move X8, [X31+144]
	1871 Move W9, [X31+152]
	1872 Move X0, [X22]
	1873 Add X1, X31, 128
	1874 Move [X31+128], X8
	1875 Move [X31+136], W9
	1876 Call 0x1C17E04
	1877 Compare X20, 0
	1878 JumpIfEqual {2027}
	1879 Move X8, [X20]
	1880 Move X2, X0
	1881 Move X0, X20
	1882 Move X1, X21
	1883 Move X9, [X8+744]
	1884 Move X3, [X8+752]
	1885 NotImplemented "Instruction BLR not yet implemented."
	1886 Move X0, [X23]
	1887 Move X20, [X19]
	1888 Move W8, 228
	1889 Add X1, X31, 124
	1890 Move [X31+124], W8
	1891 Call 0x1C17E04
	1892 Move X21, X0
	1893 Add X0, X31, 112
	1894 Move W2, 134
	1895 Move W1, W31
	1896 Move W3, W31
	1897 Move W4, W31
	1898 Move W5, W31
	1899 Move X6, X31
	1900 Move [X31+120], W31
	1901 Move [X31+112], X31
	1902 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	1903 Move X8, [X31+112]
	1904 Move W9, [X31+120]
	1905 Move X0, [X22]
	1906 Add X1, X31, 96
	1907 Move [X31+96], X8
	1908 Move [X31+104], W9
	1909 Call 0x1C17E04
	1910 Compare X20, 0
	1911 JumpIfEqual {2027}
	1912 Move X8, [X20]
	1913 Move X2, X0
	1914 Move X0, X20
	1915 Move X1, X21
	1916 Move X9, [X8+744]
	1917 Move X3, [X8+752]
	1918 NotImplemented "Instruction BLR not yet implemented."
	1919 Move X0, [X23]
	1920 Move X20, [X19]
	1921 Move W8, 229
	1922 Add X1, X31, 92
	1923 Move [X31+92], W8
	1924 Call 0x1C17E04
	1925 Move X21, X0
	1926 Add X0, X31, 80
	1927 Move W2, 135
	1928 Move W1, W31
	1929 Move W3, W31
	1930 Move W4, W31
	1931 Move W5, W31
	1932 Move X6, X31
	1933 Move [X31+88], W31
	1934 Move [X31+80], X31
	1935 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	1936 Move X8, [X31+80]
	1937 Move W9, [X31+88]
	1938 Move X0, [X22]
	1939 Add X1, X31, 64
	1940 Move [X31+64], X8
	1941 Move [X31+72], W9
	1942 Call 0x1C17E04
	1943 Compare X20, 0
	1944 JumpIfEqual {2027}
	1945 Move X8, [X20]
	1946 Move X2, X0
	1947 Move X0, X20
	1948 Move X1, X21
	1949 Move X9, [X8+744]
	1950 Move X3, [X8+752]
	1951 NotImplemented "Instruction BLR not yet implemented."
	1952 Move X0, [X23]
	1953 Move X20, [X19]
	1954 Move W8, 59
	1955 Add X1, X31, 60
	1956 Move [X31+60], W8
	1957 Call 0x1C17E04
	1958 Move X21, X0
	1959 Add X0, X31, 48
	1960 Move W2, 46
	1961 Move W1, W31
	1962 Move W3, W31
	1963 Move W4, W31
	1964 Move W5, W31
	1965 Move X6, X31
	1966 Move [X31+56], W31
	1967 Move [X31+48], X31
	1968 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	1969 Move X8, [X31+48]
	1970 Move W9, [X31+56]
	1971 Move X0, [X22]
	1972 Add X1, X31, 32
	1973 Move [X31+32], X8
	1974 Move [X31+40], W9
	1975 Call 0x1C17E04
	1976 Compare X20, 0
	1977 JumpIfEqual {2027}
	1978 Move X8, [X20]
	1979 Move X2, X0
	1980 Move X0, X20
	1981 Move X1, X21
	1982 Move X9, [X8+744]
	1983 Move X3, [X8+752]
	1984 NotImplemented "Instruction BLR not yet implemented."
	1985 Move X0, [X23]
	1986 Move X19, [X19]
	1987 Move W8, 77
	1988 Add X1, X31, 28
	1989 Move [X31+28], W8
	1990 Call 0x1C17E04
	1991 Move X20, X0
	1992 Add X0, X31, 16
	1993 Move W2, 45
	1994 Move W1, W31
	1995 Move W3, W31
	1996 Move W4, W31
	1997 Move W5, W31
	1998 Move X6, X31
	1999 Move [X31+24], W31
	2000 Move [X31+16], X31
	2001 Call ConsoleKeyInfo..ctor, X0, X1, X2, X3, X4, X5
	2002 Move X8, [X31+16]
	2003 Move W9, [X31+24]
	2004 Move X0, [X22]
	2005 Add X1, X31, 0
	2006 Move [X31], X8
	2007 Move [X31+8], W9
	2008 Call 0x1C17E04
	2009 Compare X19, 0
	2010 JumpIfEqual {2027}
	2011 Move X8, [X19]
	2012 Move X2, X0
	2013 Move X0, X19
	2014 Move X1, X20
	2015 Move X9, [X8+744]
	2016 Move X3, [X8+752]
	2017 NotImplemented "Instruction BLR not yet implemented."
	2018 Add X31, X31, 1920
	2019 Move X20, [X31+48]
	2020 Move X19, [X31+56]
	2021 Move X22, [X31+32]
	2022 Move X21, [X31+40]
	2023 Move X30, [X31+16]
	2024 Move X23, [X31+24]
	2025 Move X29, [X31+64]
	2026 Return 
	2027 Call 0x1C17F20

Method: System.Void InitKeys()

Disassembly:
	0x033CFEA0 MOV X0, X20
	0x033CFEA4 MOV X1, X21
	0x033CFEA8 LDR X9, [X8 + 0x2E8]
	0x033CFEAC LDR X3, [X8 + 0x2F0]
	0x033CFEB0 BLR X9
	0x033CFEB4 LDR X0, [X23]
	0x033CFEB8 LDR X20, [X19]
	0x033CFEBC MOVZ W8, 0x4F
	0x033CFEC0 ADD X1, X31, 0x5BC
	0x033CFEC4 STR W8, [X31 + 0x5BC]
	0x033CFEC8 BL 0x1C16E04
	0x033CFECC MOV X21, X0
	0x033CFED0 ADD X0, X31, 0x5B0
	0x033CFED4 MOVZ W2, 0x25
	0x033CFED8 MOV W1, W31
	0x033CFEDC MOV W3, W31
	0x033CFEE0 MOV W4, W31
	0x033CFEE4 MOV W5, W31
	0x033CFEE8 MOV X6, X31
	0x033CFEEC STR W31, [X31 + 0x5B8]
	0x033CFEF0 STR X31, [X31 + 0x5B0]
	0x033CFEF4 BL 0x339D33C
	0x033CFEF8 LDR X8, [X31 + 0x5B0]
	0x033CFEFC LDR W9, [X31 + 0x5B8]
	0x033CFF00 LDR X0, [X22]
	0x033CFF04 ADD X1, X31, 0x5A0
	0x033CFF08 STR X8, [X31 + 0x5A0]
	0x033CFF0C STR W9, [X31 + 0x5A8]
	0x033CFF10 BL 0x1C16E04
	0x033CFF14 CBZ X20, 0x33D15CC
	0x033CFF18 LDR X8, [X20]
	0x033CFF1C MOV X2, X0
	0x033CFF20 MOV X0, X20
	0x033CFF24 MOV X1, X21
	0x033CFF28 LDR X9, [X8 + 0x2E8]
	0x033CFF2C LDR X3, [X8 + 0x2F0]
	0x033CFF30 BLR X9
	0x033CFF34 LDR X0, [X23]
	0x033CFF38 LDR X20, [X19]
	0x033CFF3C MOVZ W8, 0x50
	0x033CFF40 ADD X1, X31, 0x59C
	0x033CFF44 STR W8, [X31 + 0x59C]
	0x033CFF48 BL 0x1C16E04
	0x033CFF4C MOV X21, X0
	0x033CFF50 ADD X0, X31, 0x590
	0x033CFF54 MOVZ W2, 0x61
	0x033CFF58 MOV W1, W31
	0x033CFF5C MOV W3, W31
	0x033CFF60 MOV W4, W31
	0x033CFF64 MOV W5, W31
	0x033CFF68 MOV X6, X31
	0x033CFF6C STR W31, [X31 + 0x598]
	0x033CFF70 STR X31, [X31 + 0x590]
	0x033CFF74 BL 0x339D33C
	0x033CFF78 LDR X8, [X31 + 0x590]
	0x033CFF7C LDR W9, [X31 + 0x598]
	0x033CFF80 LDR X0, [X22]
	0x033CFF84 ADD X1, X31, 0x580
	0x033CFF88 STR X8, [X31 + 0x580]
	0x033CFF8C STR W9, [X31 + 0x588]
	0x033CFF90 BL 0x1C16E04
	0x033CFF94 CBZ X20, 0x33D15CC
	0x033CFF98 LDR X8, [X20]
	0x033CFF9C MOV X2, X0
	0x033CFFA0 MOV X0, X20
	0x033CFFA4 MOV X1, X21
	0x033CFFA8 LDR X9, [X8 + 0x2E8]
	0x033CFFAC LDR X3, [X8 + 0x2F0]
	0x033CFFB0 BLR X9
	0x033CFFB4 LDR X0, [X23]
	0x033CFFB8 LDR X20, [X19]
	0x033CFFBC MOVZ W8, 0x51
	0x033CFFC0 ADD X1, X31, 0x57C
	0x033CFFC4 STR W8, [X31 + 0x57C]
	0x033CFFC8 BL 0x1C16E04
	0x033CFFCC MOV X21, X0
	0x033CFFD0 ADD X0, X31, 0x570
	0x033CFFD4 MOVZ W2, 0x22
	0x033CFFD8 MOV W1, W31
	0x033CFFDC MOV W3, W31
	0x033CFFE0 MOV W4, W31
	0x033CFFE4 MOV W5, W31
	0x033CFFE8 MOV X6, X31
	0x033CFFEC STR W31, [X31 + 0x578]
	0x033CFFF0 STR X31, [X31 + 0x570]
	0x033CFFF4 BL 0x339D33C
	0x033CFFF8 LDR X8, [X31 + 0x570]
	0x033CFFFC LDR W9, [X31 + 0x578]
	0x033D0000 LDR X0, [X22]
	0x033D0004 ADD X1, X31, 0x560

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x100F000
	007 Move W8, [X20+688]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0xD5E000
	014 Move X0, [X0+2968]
	015 Call 0x1C17CF4
	016 Move X0, 0xD25000
	017 Move X0, [X0+1560]
	018 Call 0x1C17CF4
	019 Move X0, 0xD5E000
	020 Move X0, [X0+2976]
	021 Call 0x1C17CF4
	022 Move X0, 0xD5E000
	023 Move X0, [X0+2984]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+688], W8
	027 Move W8, [X19+176]
	028 Compare W8, 0
	029 JumpIfNotEqual {93}
	030 Move X0, X19
	031 Call TermInfoDriver.CreateKeyMap, X0
	032 Move X8, 0xD5E000
	033 Move X8, [X8+2968]
	034 Move X0, [X8]
	035 Call 0x1C17F10
	036 Move X20, X0
	037 Call ByteMatcher..ctor, X0
	038 Move [X19+248], X20
	039 Move X8, 0xD5E000
	040 Move X8, [X8+2976]
	041 Move W1, 60
	042 Move X0, [X8]
	043 Call 0x1C17D6C
	044 Move X8, 0xD5E000
	045 Move X8, [X8+2984]
	046 Move X2, X31
	047 Move X20, X0
	048 Move X1, [X8]
	049 Call RuntimeHelpers.InitializeArray, X0, X1
	050 Compare X20, 0
	051 JumpIfEqual {100}
	052 Move X8, [X20+24]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X21, X31
	055 And X8, X8, 0
	056 Add X22, X20, 32
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move W1, [X22]
	059 Move X0, X19
	060 Call TermInfoDriver.AddStringMapping, X0, X1
	061 Move W8, [X20+24]
	062 Add X21, X21, 1
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X8, 0xD25000
	065 Move X20, [X19+248]
	066 Move X8, [X8+1560]
	067 Move W1, 1
	068 Move X0, [X8]
	069 Call 0x1C17D6C
	070 Move X8, [X19+264]
	071 Compare X8, 0
	072 JumpIfEqual {100}
	073 Move W9, [X8+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X2, X0
	076 Compare X0, 0
	077 JumpIfEqual {100}
	078 Move W9, [X2+24]
	079 Compare W9, 0
	080 JumpIfEqual {99}
	081 Move W8, [X8+34]
	082 Move [X2+32], W8
	083 Compare X20, 0
	084 JumpIfEqual {100}
	085 Move W1, 55
	086 Move X0, X20
	087 Call ByteMatcher.AddMapping, X0, X1, X2
	088 Move X8, [X19+248]
	089 Compare X8, 0
	090 JumpIfEqual {100}
	091 Move W8, 1
	092 Move [X19+176], W8
	093 Move X20, [X31+32]
	094 Move X19, [X31+40]
	095 Move X22, [X31+16]
	096 Move X21, [X31+24]
	097 Move X30, [X31+48]
	098 Return 
	099 Call 0x1C17F28
	100 Call 0x1C17F20

Method: System.Void AddStringMapping(System.TermInfoStrings s)

Disassembly:
	0x033D2640 MOV X0, X8
	0x033D2644 MOV W1, W31
	0x033D2648 MOV X2, X21
	0x033D264C MOV W3, W31
	0x033D2650 MOV X5, X31
	0x033D2654 BL 0x339FCE8
	0x033D2658 LDR W8, [X22 + 0x18]
	0x033D265C STR X21, [X22 + 0x10]
	0x033D2660 ADD W9, W8, 0x1
	0x033D2664 STR W9, [X22 + 0x18]
	0x033D2668 CBNZ X21, 0x33D2678
	0x033D266C BL 0x1C16F20
	0x033D2670 ADD W9, W8, 0x1
	0x033D2674 STR W9, [X22 + 0x18]
	0x033D2678 LDR W9, [X21 + 0x18]
	0x033D267C CMP W8, W9
	0x033D2680 B.CS 0x33D26A0
	0x033D2684 SXTW X8, W8
	0x033D2688 ADD X8, X21, X8, 0x4, LSL

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, [X0+16]
	006 Compare X0, 0
	007 JumpIfEqual {24}
	008 Move W19, W1
	009 Call TermInfoReader.GetStringBytes, X0, X1
	010 Compare X0, 0
	011 JumpIfEqual {20}
	012 Move X2, X0
	013 Move X0, [X20+248]
	014 Compare X0, 0
	015 JumpIfEqual {24}
	016 Move W1, W19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Return 
	024 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x033D2840 MOV W12, W20
	0x033D2844 ADD X13, X12, X8
	0x033D2848 CMP W13, W9
	0x033D284C B.CS 0x33D28B4
	0x033D2850 CBZ X1, 0x33D28B8
	0x033D2854 LDR W14, [X1 + 0x18]
	0x033D2858 CMP X8, X14
	0x033D285C B.CS 0x33D28B4
	0x033D2860 ADD X13, X19, W13, SXTW
	0x033D2864 LDRB W13, [X13 + 0x20]
	0x033D2868 STRH W13, [X11, X8, LSL #1]
	0x033D286C ADD X8, X8, 0x1
	0x033D2870 CMP X10, X8
	0x033D2874 B.NE 0x33D2844
	0x033D2878 LDP X20, X19, [X31 + 0x20]
	0x033D287C LDP X22, X21, [X31 + 0x10]
	0x033D2880 MOV X0, X31
	0x033D2884 MOV X2, X31
	0x033D2888 LDR X30, [X31], #0x30
	0x033D288C B 0x32256D4
	0x033D2890 ADRP X8, 0xD23000
	0x033D2894 LDR X8, [X8 + 0x278]
	0x033D2898 LDP X20, X19, [X31 + 0x20]
	0x033D289C LDP X22, X21, [X31 + 0x10]
	0x033D28A0 LDR X8, [X8]
	0x033D28A4 LDR X8, [X8 + 0xB8]
	0x033D28A8 LDR X0, [X8]
	0x033D28AC LDR X30, [X31], #0x30
	0x033D28B0 RET
	0x033D28B4 BL 0x1C16F28
	0x033D28B8 BL 0x1C16F20
	0x033D28BC SUB X31, X31, 0x60
	0x033D28C0 STP X30, X23, [X31 + 0x30]
	0x033D28C4 STP X22, X21, [X31 + 0x40]
	0x033D28C8 STP X20, X19, [X31 + 0x50]
	0x033D28CC ADRP X23, 0x100B000
	0x033D28D0 LDR X8, [X23 + 0x2B8]
	0x033D28D4 MOV X21, X3
	0x033D28D8 MOV X22, X2
	0x033D28DC MOV X19, X1
	0x033D28E0 MOV X20, X0
	0x033D28E4 CBNZ X8, 0x33D292C
	0x033D28E8 ADRP X12, 0xFFFFFFFFFD71B000
	0x033D28EC LDR V0, [X12 + 0x708]
	0x033D28F0 ADRP X8, 0xFFFFFFFFFD72E000
	0x033D28F4 ADRP X10, 0xFFFFFFFFFD724000
	0x033D28F8 ADD X8, X8, 0x168
	0x033D28FC MOVZ W9, 0x4
	0x033D2900 ADD X10, X10, 0x4E4
	0x033D2904 MOVZ W11, 0x8
	0x033D2908 MOVZ W13, 0x20
	0x033D290C ADD X0, X31, 0x0
	0x033D2910 STP X8, X9, [X31]
	0x033D2914 STP X10, X11, [X31 + 0x10]
	0x033D2918 STR W13, [X31 + 0x28]
	0x033D291C STR D0, [X31 + 0x20]
	0x033D2920 STRB W31, [X31 + 0x2C]
	0x033D2924 BL 0x1C1729C
	0x033D2928 STR X0, [X23 + 0x2B8]
	0x033D292C MOV X0, X22
	0x033D2930 BL 0x1C1727C
	0x033D2934 MOV X22, X0
	0x033D2938 MOV X0, X21
	0x033D293C BL 0x1C1727C
	0x033D2940 LDR X8, [X23 + 0x2B8]
	0x033D2944 MOV X21, X0
	0x033D2948 MOV X0, X20
	0x033D294C MOV X1, X19
	0x033D2950 MOV X2, X22
	0x033D2954 MOV X3, X21
	0x033D2958 BLR X8
	0x033D295C MOV W19, W0
	0x033D2960 MOV X0, X22
	0x033D2964 BL 0x1C17290
	0x033D2968 MOV X0, X21
	0x033D296C BL 0x1C17290
	0x033D2970 MOV W0, W19
	0x033D2974 LDP X20, X19, [X31 + 0x50]
	0x033D2978 LDP X22, X21, [X31 + 0x40]
	0x033D297C LDP X30, X23, [X31 + 0x30]
	0x033D2980 ADD X31, X31, 0x60
	0x033D2984 RET
	0x033D2988 SUB X31, X31, 0x60
	0x033D298C STP X30, X23, [X31 + 0x30]
	0x033D2990 STP X22, X21, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x100C000
	005 Move X20, 0xD22000
	006 Move W8, [X19+689]
	007 Move X20, [X20+2760]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {38}
	012 Move X0, 0xD23000
	013 Move X0, [X0+3672]
	014 Call 0x1C17CF4
	015 Move X0, 0xD22000
	016 Move X0, [X0+2760]
	017 Call 0x1C17CF4
	018 Move X0, 0xD56000
	019 Move X0, [X0+1984]
	020 Call 0x1C17CF4
	021 Move X0, 0xD5B000
	022 Move X0, [X0+2992]
	023 Call 0x1C17CF4
	024 Move X0, 0xD5B000
	025 Move X0, [X0+3000]
	026 Call 0x1C17CF4
	027 Move X0, 0xD5B000
	028 Move X0, [X0+3008]
	029 Call 0x1C17CF4
	030 Move X0, 0xD5B000
	031 Move X0, [X0+3016]
	032 Call 0x1C17CF4
	033 Move X0, 0xD5B000
	034 Move X0, [X0+3024]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X19+689], W8
	038 Move X0, [X20]
	039 Move W1, 4
	040 Call 0x1C17D6C
	041 Compare X0, 0
	042 JumpIfEqual {89}
	043 Move W8, [X0+24]
	044 Compare W8, 0
	045 JumpIfEqual {88}
	046 Move X9, 0xD5B000
	047 Move X9, [X9+3000]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X9, [X9]
	050 Move [X0+32], X9
	051 Move X9, 0xD5B000
	052 Move X9, [X9+3008]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X9, [X9]
	055 Move [X0+40], X9
	056 Move X9, 0xD5B000
	057 Move X9, [X9+3016]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X9, [X9]
	060 Move [X0+48], X9
	061 Move X8, 0xD5B000
	062 Move X8, [X8+3024]
	063 Move X20, 0xD56000
	064 Move X9, 0xD23000
	065 Move X19, 0xD5B000
	066 Move X8, [X8]
	067 Move X20, [X20+1984]
	068 Move W1, 16
	069 Move [X0+56], X8
	070 Move X8, [X20]
	071 Move X8, [X8+184]
	072 Move X9, [X9+3672]
	073 Move [X8+16], X0
	074 Move X0, [X9]
	075 Move X19, [X19+2992]
	076 Call 0x1C17D6C
	077 Move X1, [X19]
	078 Move X2, X31
	079 Move X19, X0
	080 Call RuntimeHelpers.InitializeArray, X0, X1
	081 Move X8, [X20]
	082 Move X8, [X8+184]
	083 Move [X8+24], X19
	084 Move X20, [X31+16]
	085 Move X19, [X31+24]
	086 Move X30, [X31+32]
	087 Return 
	088 Call 0x1C17F28
	089 Call 0x1C17F20

