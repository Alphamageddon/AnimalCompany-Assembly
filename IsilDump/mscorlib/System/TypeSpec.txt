Type: System.TypeSpec

Method: System.Boolean get_HasModifiers()

Disassembly:
	0x033D4208 LDR X0, [X0 + 0xCE0]
	0x033D420C B 0x33D43E0
	0x033D4210 MOV X0, X20
	0x033D4214 BL 0x19903C0

ISIL:
	001 Move X8, [X0+48]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.String GetDisplayFullName(System.TypeSpec/DisplayNameFormat flags)

Disassembly:
	0x033D4218 MOV X0, X20
	0x033D421C MOV W1, W24
	0x033D4220 MOV X2, X31
	0x033D4224 BL 0x3222A1C
	0x033D4228 STRH W0, [X31 + 0x8]
	0x033D422C ADRP X0, 0xD21000
	0x033D4230 LDR X0, [X0 + 0x170]
	0x033D4234 BL 0x1C16D08
	0x033D4238 BL 0x19903D0
	0x033D423C ADD X0, X31, 0x8
	0x033D4240 MOV X1, X31
	0x033D4244 BL 0x330A76C
	0x033D4248 MOV X19, X0
	0x033D424C ADD X0, X31, 0xC
	0x033D4250 MOV X1, X31
	0x033D4254 BL 0x337B6E0
	0x033D4258 MOV X20, X0
	0x033D425C ADRP X0, 0xD58000
	0x033D4260 LDR X0, [X0 + 0xCE8]
	0x033D4264 BL 0x1C16D08
	0x033D4268 MOV X21, X0
	0x033D426C ADRP X0, 0xD58000
	0x033D4270 LDR X0, [X0 + 0xCF0]
	0x033D4274 BL 0x1C16D08
	0x033D4278 MOV X2, X0
	0x033D427C MOV X0, X21
	0x033D4280 MOV X1, X19
	0x033D4284 MOV X3, X20
	0x033D4288 MOV X4, X31
	0x033D428C BL 0x32277C4
	0x033D4290 B 0x33D43F0
	0x033D4294 ADRP X0, 0xD27000
	0x033D4298 LDR X0, [X0 + 0x578]
	0x033D429C BL 0x1C16D08
	0x033D42A0 BL 0x1C16F10
	0x033D42A4 MOV X19, X0
	0x033D42A8 ADRP X0, 0xD58000
	0x033D42AC LDR X0, [X0 + 0xCF8]
	0x033D42B0 B 0x33D449C
	0x033D42B4 ADRP X0, 0xD27000
	0x033D42B8 LDR X0, [X0 + 0x578]
	0x033D42BC BL 0x1C16D08
	0x033D42C0 BL 0x1C16F10
	0x033D42C4 MOV X19, X0
	0x033D42C8 ADRP X0, 0xD58000
	0x033D42CC LDR X0, [X0 + 0xD00]
	0x033D42D0 B 0x33D449C
	0x033D42D4 ADRP X0, 0xD27000
	0x033D42D8 LDR X0, [X0 + 0x578]
	0x033D42DC BL 0x1C16D08
	0x033D42E0 BL 0x1C16F10
	0x033D42E4 MOV X19, X0
	0x033D42E8 ADRP X0, 0xD58000
	0x033D42EC LDR X0, [X0 + 0xD08]
	0x033D42F0 B 0x33D449C
	0x033D42F4 ADRP X0, 0xD27000
	0x033D42F8 LDR X0, [X0 + 0x578]
	0x033D42FC BL 0x1C16D08
	0x033D4300 BL 0x1C16F10
	0x033D4304 MOV X19, X0
	0x033D4308 ADRP X0, 0xD58000
	0x033D430C LDR X0, [X0 + 0xD10]
	0x033D4310 B 0x33D449C
	0x033D4314 ADRP X0, 0xD27000
	0x033D4318 LDR X0, [X0 + 0x578]
	0x033D431C BL 0x1C16D08
	0x033D4320 BL 0x1C16F10
	0x033D4324 MOV X19, X0
	0x033D4328 ADRP X0, 0xD58000
	0x033D432C LDR X0, [X0 + 0xD18]
	0x033D4330 B 0x33D449C
	0x033D4334 MOV X0, X20
	0x033D4338 BL 0x19903C0
	0x033D433C MOV X0, X20
	0x033D4340 MOV W1, W24
	0x033D4344 MOV X2, X31
	0x033D4348 BL 0x3222A1C
	0x033D434C STRH W0, [X31 + 0x8]
	0x033D4350 ADRP X0, 0xD21000
	0x033D4354 LDR X0, [X0 + 0x170]
	0x033D4358 BL 0x1C16D08
	0x033D435C BL 0x19903D0
	0x033D4360 ADD X0, X31, 0x8
	0x033D4364 MOV X1, X31
	0x033D4368 BL 0x330A76C
	0x033D436C MOV X19, X0
	0x033D4370 ADRP X0, 0xD58000
	0x033D4374 LDR X0, [X0 + 0xD20]
	0x033D4378 B 0x33D43E0
	0x033D437C ADRP X0, 0xD27000
	0x033D4380 LDR X0, [X0 + 0x578]
	0x033D4384 BL 0x1C16D08
	0x033D4388 BL 0x1C16F10
	0x033D438C MOV X19, X0
	0x033D4390 ADRP X0, 0xD58000
	0x033D4394 LDR X0, [X0 + 0xD28]
	0x033D4398 B 0x33D449C
	0x033D439C MOV X0, X20
	0x033D43A0 BL 0x19903C0
	0x033D43A4 MOV X0, X20
	0x033D43A8 MOV W1, W24
	0x033D43AC MOV X2, X31
	0x033D43B0 BL 0x3222A1C
	0x033D43B4 STRH W0, [X31 + 0x8]
	0x033D43B8 ADRP X0, 0xD21000
	0x033D43BC LDR X0, [X0 + 0x170]
	0x033D43C0 BL 0x1C16D08
	0x033D43C4 BL 0x19903D0
	0x033D43C8 ADD X0, X31, 0x8
	0x033D43CC MOV X1, X31
	0x033D43D0 BL 0x330A76C
	0x033D43D4 MOV X19, X0
	0x033D43D8 ADRP X0, 0xD58000
	0x033D43DC LDR X0, [X0 + 0xD30]
	0x033D43E0 BL 0x1C16D08
	0x033D43E4 MOV X1, X19
	0x033D43E8 MOV X2, X31
	0x033D43EC BL 0x321B938
	0x033D43F0 MOV X19, X0
	0x033D43F4 ADRP X0, 0xD27000
	0x033D43F8 LDR X0, [X0 + 0x578]
	0x033D43FC BL 0x1C16D08
	0x033D4400 BL 0x1C16F10
	0x033D4404 MOV X20, X0
	0x033D4408 ADRP X0, 0xD51000
	0x033D440C LDR X0, [X0 + 0x970]
	0x033D4410 BL 0x1C16D08
	0x033D4414 MOV X2, X0
	0x033D4418 MOV X0, X20
	0x033D441C MOV X1, X19
	0x033D4420 MOV X3, X31
	0x033D4424 BL 0x330E16C
	0x033D4428 ADRP X0, 0xD58000
	0x033D442C LDR X0, [X0 + 0xD38]
	0x033D4430 BL 0x1C16D08
	0x033D4434 MOV X1, X0
	0x033D4438 MOV X0, X20
	0x033D443C BL 0x1C16DEC
	0x033D4440 ADRP X0, 0xD27000
	0x033D4444 LDR X0, [X0 + 0x578]
	0x033D4448 BL 0x1C16D08
	0x033D444C BL 0x1C16F10
	0x033D4450 MOV X19, X0
	0x033D4454 ADRP X0, 0xD58000
	0x033D4458 LDR X0, [X0 + 0xD40]
	0x033D445C B 0x33D449C
	0x033D4460 ADRP X0, 0xD27000
	0x033D4464 LDR X0, [X0 + 0x578]
	0x033D4468 BL 0x1C16D08
	0x033D446C BL 0x1C16F10
	0x033D4470 MOV X19, X0
	0x033D4474 ADRP X0, 0xD58000
	0x033D4478 LDR X0, [X0 + 0xD48]
	0x033D447C B 0x33D449C
	0x033D4480 ADRP X0, 0xD27000
	0x033D4484 LDR X0, [X0 + 0x578]
	0x033D4488 BL 0x1C16D08
	0x033D448C BL 0x1C16F10
	0x033D4490 MOV X19, X0
	0x033D4494 ADRP X0, 0xD58000
	0x033D4498 LDR X0, [X0 + 0xD50]
	0x033D449C BL 0x1C16D08
	0x033D44A0 MOV X20, X0
	0x033D44A4 ADRP X0, 0xD51000
	0x033D44A8 LDR X0, [X0 + 0x970]
	0x033D44AC BL 0x1C16D08
	0x033D44B0 MOV X2, X0
	0x033D44B4 MOV X0, X19
	0x033D44B8 MOV X1, X20
	0x033D44BC MOV X3, X31
	0x033D44C0 BL 0x330E16C
	0x033D44C4 ADRP X0, 0xD58000
	0x033D44C8 LDR X0, [X0 + 0xD38]
	0x033D44CC BL 0x1C16D08
	0x033D44D0 MOV X1, X0
	0x033D44D4 MOV X0, X19
	0x033D44D8 BL 0x1C16DEC
	0x033D44DC ADRP X0, 0xD27000
	0x033D44E0 LDR X0, [X0 + 0x578]
	0x033D44E4 BL 0x1C16D08
	0x033D44E8 BL 0x1C16F10
	0x033D44EC MOV X19, X0
	0x033D44F0 ADRP X0, 0xD58000
	0x033D44F4 LDR X0, [X0 + 0xD58]
	0x033D44F8 BL 0x1C16D08
	0x033D44FC MOV X1, X0
	0x033D4500 MOV X0, X19
	0x033D4504 MOV X2, X31
	0x033D4508 BL 0x3314A68
	0x033D450C B 0x33D44C4
	0x033D4510 STP X30, X21, [X31 - 0x20]!
	0x033D4514 STP X20, X19, [X31 + 0x10]
	0x033D4518 ADRP X20, 0x1009000
	0x033D451C LDRB W8, [X20 + 0x2DE]
	0x033D4520 MOV X19, X0
	0x033D4524 TBNZ X8, 0x0, 0x33D453C
	0x033D4528 ADRP X0, 0xD1F000
	0x033D452C LDR X0, [X0 + 0x8F0]
	0x033D4530 BL 0x1C16CF4
	0x033D4534 MOVZ W8, 0x1
	0x033D4538 STRB W8, [X20 + 0x2DE]
	0x033D453C CBZ X19, 0x33D4600
	0x033D4540 ADRP X8, 0xD1F000
	0x033D4544 LDR X8, [X8 + 0x8F0]
	0x033D4548 LDR W21, [X19 + 0x10]
	0x033D454C LDR X0, [X8]
	0x033D4550 BL 0x1C16F10
	0x033D4554 MOV W1, W21
	0x033D4558 MOV X2, X31
	0x033D455C MOV X20, X0
	0x033D4560 BL 0x3231B28
	0x033D4564 LDR W8, [X19 + 0x10]
	0x033D4568 CMP W8, 0x1
	0x033D456C B.LT 0x33D45E4
	0x033D4570 MOV W21, W31
	0x033D4574 MOV X0, X19
	0x033D4578 MOV W1, W21
	0x033D457C MOV X2, X31
	0x033D4580 BL 0x3222A1C
	0x033D4584 AND W8, W0, 0xFFFF
	0x033D4588 CMP W8, 0x5C
	0x033D458C B.NE 0x33D45B0
	0x033D4590 LDR W8, [X19 + 0x10]
	0x033D4594 ADD W21, W21, 0x1
	0x033D4598 CMP W21, W8
	0x033D459C B.GE 0x33D45BC
	0x033D45A0 MOV X0, X19
	0x033D45A4 MOV W1, W21
	0x033D45A8 MOV X2, X31
	0x033D45AC BL 0x3222A1C
	0x033D45B0 MOV W1, W0
	0x033D45B4 CBNZ X20, 0x33D45C4
	0x033D45B8 B 0x33D4600
	0x033D45BC MOVZ W1, 0x5C
	0x033D45C0 CBZ X20, 0x33D4600
	0x033D45C4 MOV X0, X20
	0x033D45C8 MOV X2, X31
	0x033D45CC BL 0x3233D30
	0x033D45D0 LDR W8, [X19 + 0x10]
	0x033D45D4 ADD W21, W21, 0x1
	0x033D45D8 CMP W21, W8
	0x033D45DC B.LT 0x33D4574
	0x033D45E0 B 0x33D45E8
	0x033D45E4 CBZ X20, 0x33D4600
	0x033D45E8 LDR X8, [X20]
	0x033D45EC MOV X0, X20
	0x033D45F0 LDP X20, X19, [X31 + 0x10]
	0x033D45F4 LDP X2, X1, [X8 + 0x168]
	0x033D45F8 LDP X30, X21, [X31], #0x20
	0x033D45FC BR X2
	0x033D4600 BL 0x1C16F20
	0x033D4604 SUB X31, X31, 0xC0
	0x033D4608 STP X29, X30, [X31 + 0x60]
	0x033D460C STP X28, X27, [X31 + 0x70]
	0x033D4610 STP X26, X25, [X31 + 0x80]
	0x033D4614 STP X24, X23, [X31 + 0x90]
	0x033D4618 STP X22, X21, [X31 + 0xA0]
	0x033D461C STP X20, X19, [X31 + 0xB0]
	0x033D4620 ADRP X20, 0x1009000
	0x033D4624 LDRB W8, [X20 + 0x2DF]
	0x033D4628 MOV X29, X5
	0x033D462C MOV W22, W4
	0x033D4630 MOV W21, W3
	0x033D4634 MOV X23, X2
	0x033D4638 MOV X24, X1
	0x033D463C MOV X19, X0
	0x033D4640 TBNZ X8, 0x0, 0x33D470C
	0x033D4644 ADRP X0, 0xD50000
	0x033D4648 LDR X0, [X0 + 0xF00]
	0x033D464C BL 0x1C16CF4
	0x033D4650 ADRP X0, 0xD58000
	0x033D4654 LDR X0, [X0 + 0xC38]
	0x033D4658 BL 0x1C16CF4
	0x033D465C ADRP X0, 0xD58000
	0x033D4660 LDR X0, [X0 + 0xC68]
	0x033D4664 BL 0x1C16CF4
	0x033D4668 ADRP X0, 0xD58000
	0x033D466C LDR X0, [X0 + 0xC40]
	0x033D4670 BL 0x1C16CF4
	0x033D4674 ADRP X0, 0xD58000
	0x033D4678 LDR X0, [X0 + 0xC70]
	0x033D467C BL 0x1C16CF4
	0x033D4680 ADRP X0, 0xD58000

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+80], X26
	004 Move [X31+88], X25
	005 Move [X31+96], X24
	006 Move [X31+104], X23
	007 Move [X31+112], X22
	008 Move [X31+120], X21
	009 Move [X31+128], X20
	010 Move [X31+136], X19
	011 Move X21, 0x100A000
	012 Move W8, [X21+732]
	013 Move W20, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {48}
	019 Move X0, 0xD59000
	020 Move X0, [X0+3128]
	021 Call 0x1C17CF4
	022 Move X0, 0xD59000
	023 Move X0, [X0+3136]
	024 Call 0x1C17CF4
	025 Move X0, 0xD59000
	026 Move X0, [X0+3144]
	027 Call 0x1C17CF4
	028 Move X0, 0xD59000
	029 Move X0, [X0+3152]
	030 Call 0x1C17CF4
	031 Move X0, 0xD59000
	032 Move X0, [X0+3160]
	033 Call 0x1C17CF4
	034 Move X0, 0xD59000
	035 Move X0, [X0+3168]
	036 Call 0x1C17CF4
	037 Move X0, 0xD20000
	038 Move X0, [X0+2288]
	039 Call 0x1C17CF4
	040 Move X0, 0xD59000
	041 Move X0, [X0+3112]
	042 Call 0x1C17CF4
	043 Move X0, 0xD20000
	044 Move X0, [X0+2104]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X21+732], W8
	048 Move [X31+32], X31
	049 Move [X31+40], X31
	050 Move [X31+48], X31
	051 Move X21, [X19+16]
	052 Compare X21, 0
	053 JumpIfEqual {241}
	054 Move X25, 0xD59000
	055 Move X8, [X21]
	056 Move X25, [X25+3112]
	057 Move X22, 0xD20000
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Move X1, [X25]
	060 Move X22, [X22+2288]
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move X0, X21
	070 Move W2, W31
	071 Call 0x1C5D788
	072 NotImplemented "Instruction LDRSW not yet implemented."
	073 Add X8, X8, X9
	074 Add X0, X8, 312
	075 Move X8, [X0]
	076 Move X1, [X0+8]
	077 Move X0, X21
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move X8, [X22]
	080 Move X22, X0
	081 Move X0, X8
	082 Call 0x1C17F10
	083 Move X1, X22
	084 Move X2, X31
	085 Move X21, X0
	086 Call StringBuilder..ctor, X0, X1
	087 Move X0, [X19+32]
	088 Compare X0, 0
	089 JumpIfEqual {150}
	090 Move X8, 0xD59000
	091 Move X8, [X8+3152]
	092 Move X26, 0xD59000
	093 Move X24, 0xD59000
	094 Move X1, [X8]
	095 Move X26, [X26+3136]
	096 Move X24, [X24+3128]
	097 Add X8, X31, 8
	098 Call List`1<Object>.GetEnumerator, X0
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 Move X8, [X31+24]
	101 Move [X31+2], V0
	102 Move [X31+48], X8
	103 Move X1, [X26]
	104 Add X0, X31, 32
	105 Call Enumerator<Object>.MoveNext, X0
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {147}
	110 Compare X21, 0
	111 JumpIfEqual {287}
	112 Move X23, [X31+48]
	113 Move W1, 43
	114 Move X0, X21
	115 Move X2, X31
	116 Call StringBuilder.Append, X0, X1
	117 Compare X23, 0
	118 JumpIfEqual {288}
	119 Move X8, [X23]
	120 Move X1, [X25]
	121 Move X22, X0
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Compare X9, 0
	124 JumpIfEqual {131}
	125 Move X10, [X8+176]
	126 Add X10, X10, 8
	127 NotImplemented "Instruction LDUR not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Subtract X9, X9, 1
	130 Add X10, X10, 16
	131 Move X0, X23
	132 Move W2, W31
	133 Call 0x1C5D788
	134 NotImplemented "Instruction LDRSW not yet implemented."
	135 Add X8, X8, X9
	136 Add X0, X8, 312
	137 Move X8, [X0]
	138 Move X1, [X0+8]
	139 Move X0, X23
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Move X1, X0
	142 Compare X22, 0
	143 JumpIfEqual {286}
	144 Move X0, X22
	145 Move X2, X31
	146 Call StringBuilder.Append, X0, X1
	147 Move X1, [X24]
	148 Add X0, X31, 32
	149 Call Enumerator<Object>.Dispose, X0
	150 Move X25, 0xD20000
	151 Move X8, [X19+40]
	152 Move X25, [X25+2104]
	153 Compare X8, 0
	154 JumpIfEqual {246}
	155 Compare X21, 0
	156 JumpIfEqual {241}
	157 Move W1, 91
	158 Move X0, X21
	159 Move X2, X31
	160 Call StringBuilder.Append, X0, X1
	161 Move X0, [X19+40]
	162 Compare X0, 0
	163 JumpIfEqual {241}
	164 Move X26, 0xD59000
	165 Move X26, [X26+3168]
	166 Move W22, W31
	167 Move W8, [X0+24]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Compare W22, 0
	170 JumpIfEqual {178}
	171 Move X1, [X25]
	172 Move X0, X21
	173 Move X2, X31
	174 Call StringBuilder.Append, X0, X1
	175 Move X0, [X19+40]
	176 Compare X0, 0
	177 JumpIfEqual {241}
	178 Move X2, [X26]
	179 Move W1, W22
	180 Call List`1<Object>.get_Item, X0, X1
	181 Compare X0, 0
	182 JumpIfEqual {241}
	183 Move X8, [X0+24]
	184 Compare X8, 0
	185 JumpIfEqual {218}
	186 Move W1, 91
	187 Move X0, X21
	188 Move X2, X31
	189 Call StringBuilder.Append, X0, X1
	190 Move X8, [X19+40]
	191 Compare X8, 0
	192 JumpIfEqual {241}
	193 Move X2, [X26]
	194 Move X23, X0
	195 Move X0, X8
	196 Move W1, W22
	197 Call List`1<Object>.get_Item, X0, X1
	198 Compare X0, 0
	199 JumpIfEqual {241}
	200 Move X1, [X0+64]
	201 Move X24, X0
	202 Compare X1, 0
	203 JumpIfNotEqual {208}
	204 Move X0, X24
	205 Call TypeSpec.GetDisplayFullName, X0, X1
	206 Move X1, X0
	207 Move [X24+64], X0
	208 Compare X23, 0
	209 JumpIfEqual {241}
	210 Move X0, X23
	211 Move X2, X31
	212 Call StringBuilder.Append, X0, X1
	213 Compare X0, 0
	214 JumpIfEqual {241}
	215 Move W1, 93
	216 Move X2, X31
	217 Call StringBuilder.Append, X0, X1
	218 Move X0, [X19+40]
	219 Compare X0, 0
	220 JumpIfEqual {241}
	221 Move X2, [X26]
	222 Move W1, W22
	223 Call List`1<Object>.get_Item, X0, X1
	224 Compare X0, 0
	225 JumpIfEqual {241}
	226 Move X1, [X0+64]
	227 Move X23, X0
	228 Compare X1, 0
	229 JumpIfNotEqual {234}
	230 Move X0, X23
	231 Call TypeSpec.GetDisplayFullName, X0, X1
	232 Move X1, X0
	233 Move [X23+64], X0
	234 Move X0, X21
	235 Move X2, X31
	236 Call StringBuilder.Append, X0, X1
	237 Move X0, [X19+40]
	238 Add W22, W22, 1
	239 Compare X0, 0
	240 JumpIfNotEqual {167}
	241 Call 0x1C17F20
	242 Move W1, 93
	243 Move X0, X21
	244 Move X2, X31
	245 Call StringBuilder.Append, X0, X1
	246 Move TEMP, X20
	247 And TEMP, TEMP, 2
	248 Compare TEMP, 2
	249 JumpIfEqual {253}
	250 Move X0, X19
	251 Move X1, X21
	252 Call TypeSpec.GetModifierString, X0, X1
	253 Move X8, [X19+24]
	254 NotImplemented "Instruction CMP not yet implemented."
	255 NotImplemented "Instruction CSET not yet implemented."
	256 And W31, W8, W20
	257 Compare X21, 0
	258 JumpIfEqual {241}
	259 Move X1, [X25]
	260 Move X0, X21
	261 Move X2, X31
	262 Call StringBuilder.Append, X0, X1
	263 Compare X0, 0
	264 JumpIfEqual {241}
	265 Move X1, [X19+24]
	266 Move X2, X31
	267 Call StringBuilder.Append, X0, X1
	268 Compare X21, 0
	269 JumpIfEqual {241}
	270 Move X8, [X21]
	271 Move X0, X21
	272 Move X9, [X8+360]
	273 Move X1, [X8+368]
	274 NotImplemented "Instruction BLR not yet implemented."
	275 Move X20, [X31+128]
	276 Move X19, [X31+136]
	277 Move X22, [X31+112]
	278 Move X21, [X31+120]
	279 Move X24, [X31+96]
	280 Move X23, [X31+104]
	281 Move X26, [X31+80]
	282 Move X25, [X31+88]
	283 Move X30, [X31+64]
	284 Add X31, X31, 144
	285 Return X0
	286 Call 0x1C17F20
	287 Call 0x1C17F20
	288 Call 0x1C17F20
	289 Move X22, X0
	290 NotImplemented "Instruction CMP not yet implemented."
	291 Move X0, X22
	292 Call 0x3EB2AD0
	293 Move X23, [X0]
	294 Call 0x3EB2AE0
	295 Move X1, [X24]
	296 Add X0, X31, 32
	297 Call Enumerator<Object>.Dispose, X0
	298 Compare X23, 0
	299 JumpIfEqual {150}
	300 Move X0, X23
	301 Call 0x1C17F18
	302 Move X23, X31
	303 Move X22, X0
	304 Move X1, [X24]
	305 Add X0, X31, 32
	306 Call Enumerator<Object>.Dispose, X0
	307 Compare X23, 0
	308 JumpIfNotEqual {311}
	309 Move X0, X22
	310 Call 0x1D2D690
	311 Move X0, X23
	312 Call 0x1C17F18
	313 Call 0x1991590

Method: System.Text.StringBuilder GetModifierString(System.Text.StringBuilder sb)

Disassembly:
	0x033D46AC BL 0x1C16CF4
	0x033D46B0 ADRP X0, 0xD58000
	0x033D46B4 LDR X0, [X0 + 0xC58]
	0x033D46B8 BL 0x1C16CF4
	0x033D46BC ADRP X0, 0xD58000
	0x033D46C0 LDR X0, [X0 + 0xC60]
	0x033D46C4 BL 0x1C16CF4
	0x033D46C8 ADRP X0, 0xD58000
	0x033D46CC LDR X0, [X0 + 0xC88]
	0x033D46D0 BL 0x1C16CF4
	0x033D46D4 ADRP X0, 0xD48000
	0x033D46D8 LDR X0, [X0 + 0x4E8]
	0x033D46DC BL 0x1C16CF4
	0x033D46E0 ADRP X0, 0xD58000
	0x033D46E4 LDR X0, [X0 + 0xC28]
	0x033D46E8 BL 0x1C16CF4
	0x033D46EC ADRP X0, 0xD27000
	0x033D46F0 LDR X0, [X0 + 0xC60]
	0x033D46F4 BL 0x1C16CF4
	0x033D46F8 ADRP X0, 0xD1F000
	0x033D46FC LDR X0, [X0 + 0x6C0]
	0x033D4700 BL 0x1C16CF4
	0x033D4704 MOVZ W8, 0x1
	0x033D4708 STRB W8, [X20 + 0x2DF]
	0x033D470C STP X31, X31, [X31 + 0x40]
	0x033D4710 STR X31, [X31 + 0x50]
	0x033D4714 STP X31, X31, [X31 + 0x20]
	0x033D4718 STR X31, [X31 + 0x30]
	0x033D471C CBNZ X24, 0x33D477C
	0x033D4720 CBNZ X23, 0x33D477C
	0x033D4724 LDR X23, [X19 + 0x40]
	0x033D4728 CBNZ X23, 0x33D4740
	0x033D472C MOV X0, X19
	0x033D4730 MOV W1, W31
	0x033D4734 BL 0x33D3218
	0x033D4738 MOV X23, X0
	0x033D473C STR X0, [X19 + 0x40]
	0x033D4740 ADRP X8, 0xD48000
	0x033D4744 LDR X8, [X8 + 0x4E8]
	0x033D4748 LDR X0, [X8]
	0x033D474C LDR W8, [X0 + 0xE0]
	0x033D4750 CBNZ W8, 0x33D4758
	0x033D4754 BL 0x1C16DFC
	0x033D4758 AND W1, W21, 0x1
	0x033D475C AND W2, W22, 0x1
	0x033D4760 MOV X0, X23
	0x033D4764 MOV W3, W31
	0x033D4768 MOV X4, X29
	0x033D476C MOV X5, X31
	0x033D4770 BL 0x33B402C
	0x033D4774 MOV X20, X0
	0x033D4778 B 0x33D4CD8
	0x033D477C LDR X25, [X19 + 0x18]
	0x033D4780 CBZ X25, 0x33D4840
	0x033D4784 CBZ X24, 0x33D47C0
	0x033D4788 ADRP X8, 0xD50000
	0x033D478C LDR X8, [X8 + 0xF00]
	0x033D4790 LDR X0, [X8]
	0x033D4794 BL 0x1C16F10
	0x033D4798 MOV X1, X25
	0x033D479C MOV X2, X31
	0x033D47A0 MOV X26, X0
	0x033D47A4 BL 0x32D5CD4
	0x033D47A8 LDR X8, [X24 + 0x18]
	0x033D47AC LDR X0, [X24 + 0x40]
	0x033D47B0 LDR X2, [X24 + 0x28]
	0x033D47B4 MOV X1, X26
	0x033D47B8 BLR X8
	0x033D47BC B 0x33D47CC
	0x033D47C0 MOV X0, X25
	0x033D47C4 MOV X1, X31
	0x033D47C8 BL 0x32D59A8
	0x033D47CC MOV X1, X31
	0x033D47D0 MOV X2, X31
	0x033D47D4 MOV X25, X0
	0x033D47D8 BL 0x32D5BF8
	0x033D47DC TBZ X0, 0x0, 0x33D4840
	0x033D47E0 TBZ X21, 0x0, 0x33D4CD4
	0x033D47E4 ADRP X0, 0xD58000
	0x033D47E8 LDR X19, [X19 + 0x18]
	0x033D47EC LDR X0, [X0 + 0xD60]
	0x033D47F0 BL 0x1C16D08
	0x033D47F4 MOV X20, X0
	0x033D47F8 ADRP X0, 0xD27000
	0x033D47FC LDR X0, [X0 + 0x9B0]
	0x033D4800 BL 0x1C16D08
	0x033D4804 MOV X2, X0
	0x033D4808 MOV X0, X20
	0x033D480C MOV X1, X19
	0x033D4810 MOV X3, X31
	0x033D4814 BL 0x32274B8
	0x033D4818 MOV X19, X0
	0x033D481C ADRP X0, 0xD4D000
	0x033D4820 LDR X0, [X0 + 0x7A0]
	0x033D4824 BL 0x1C16D08
	0x033D4828 BL 0x1C16F10
	0x033D482C MOV X1, X19
	0x033D4830 MOV X2, X31
	0x033D4834 MOV X20, X0
	0x033D4838 BL 0x32E1E68
	0x033D483C B 0x33D4994
	0x033D4840 LDR X26, [X19 + 0x10]
	0x033D4844 CBZ X26, 0x33D4DC0
	0x033D4848 ADRP X28, 0xD58000
	0x033D484C LDR X8, [X26]
	0x033D4850 LDR X28, [X28 + 0xC28]
	0x033D4854 LDRH W9, [X8 + 0x12E]
	0x033D4858 LDR X1, [X28]
	0x033D485C CBZ X9, 0x33D4880
	0x033D4860 LDR X10, [X8 + 0xB0]
	0x033D4864 ADD X10, X10, 0x8
	0x033D4868 LDUR X11, [X10 - 0x8]
	0x033D486C CMP X11, X1
	0x033D4870 B.EQ 0x33D4890
	0x033D4874 SUBS X9, X9, 0x1
	0x033D4878 ADD X10, X10, 0x10
	0x033D487C B.NE 0x33D4868
	0x033D4880 MOV X0, X26
	0x033D4884 MOV W2, W31
	0x033D4888 BL 0x1C5C788
	0x033D488C B 0x33D489C
	0x033D4890 LDRSW X9, [X10]
	0x033D4894 ADD X8, X8, X9, 0x4, LSL
	0x033D4898 ADD X0, X8, 0x138
	0x033D489C LDP X8, X1, [X0]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X21, 0x100A000
	010 Move W8, [X21+733]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0xD59000
	018 Move X0, [X0+3176]
	019 Call 0x1C17CF4
	020 Move X0, 0xD59000
	021 Move X0, [X0+3184]
	022 Call 0x1C17CF4
	023 Move X0, 0xD59000
	024 Move X0, [X0+3192]
	025 Call 0x1C17CF4
	026 Move X0, 0xD59000
	027 Move X0, [X0+3200]
	028 Call 0x1C17CF4
	029 Move X0, 0xD59000
	030 Move X0, [X0+3208]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+733], W8
	034 Move [X31+32], X31
	035 Move [X31+40], X31
	036 Move [X31+48], X31
	037 Move X0, [X20+48]
	038 Compare X0, 0
	039 JumpIfEqual {91}
	040 Move X8, 0xD59000
	041 Move X8, [X8+3200]
	042 Move X23, 0xD59000
	043 Move X24, 0xD59000
	044 Move X22, 0xD59000
	045 Move X1, [X8]
	046 Move X23, [X23+3184]
	047 Move X24, [X24+3208]
	048 Move X22, [X22+3176]
	049 Add X8, X31, 8
	050 Call List`1<Object>.GetEnumerator, X0
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 Move X8, [X31+24]
	053 Move [X31+2], V0
	054 Move [X31+48], X8
	055 Move X1, [X23]
	056 Add X0, X31, 32
	057 Call Enumerator<Object>.MoveNext, X0
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {88}
	062 Move X21, [X31+48]
	063 Compare X21, 0
	064 JumpIfEqual {110}
	065 Move X8, [X21]
	066 Move X1, [X24]
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move W2, 1
	077 Move X0, X21
	078 Call 0x1C5D788
	079 Move W9, [X10]
	080 Add W9, W9, 1
	081 Add X8, X8, W9
	082 Add X0, X8, 312
	083 Move X8, [X0]
	084 Move X2, [X0+8]
	085 Move X0, X21
	086 Move X1, X19
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move X1, [X22]
	089 Add X0, X31, 32
	090 Call Enumerator<Object>.Dispose, X0
	091 Move W8, [X20+56]
	092 Compare W8, 0
	093 JumpIfEqual {100}
	094 Compare X19, 0
	095 JumpIfEqual {112}
	096 Move W1, 38
	097 Move X0, X19
	098 Move X2, X31
	099 Call StringBuilder.Append, X0, X1
	100 Move X0, X19
	101 Move X20, [X31+112]
	102 Move X19, [X31+120]
	103 Move X22, [X31+96]
	104 Move X21, [X31+104]
	105 Move X24, [X31+80]
	106 Move X23, [X31+88]
	107 Move X30, [X31+64]
	108 Add X31, X31, 128
	109 Return X0
	110 Move X23, X22
	111 Call 0x1C17F20
	112 Call 0x1C17F20
	113 Move X23, X22
	114 Move X21, X0
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X0, X21
	117 Call 0x3EB2AD0
	118 Move X22, [X0]
	119 Call 0x3EB2AE0
	120 Move X1, [X23]
	121 Add X0, X31, 32
	122 Call Enumerator<Object>.Dispose, X0
	123 Compare X22, 0
	124 JumpIfEqual {91}
	125 Move X0, X22
	126 Call 0x1C17F18
	127 Move X22, X31
	128 Move X21, X0
	129 Move X1, [X23]
	130 Add X0, X31, 32
	131 Call Enumerator<Object>.Dispose, X0
	132 Compare X22, 0
	133 JumpIfNotEqual {136}
	134 Move X0, X21
	135 Call 0x1D2D690
	136 Move X0, X22
	137 Call 0x1C17F18
	138 Call 0x1991590

Method: System.String get_DisplayFullName()

Disassembly:
	0x033D4684 LDR X0, [X0 + 0xC78]
	0x033D4688 BL 0x1C16CF4
	0x033D468C ADRP X0, 0xD58000
	0x033D4690 LDR X0, [X0 + 0xC48]
	0x033D4694 BL 0x1C16CF4
	0x033D4698 ADRP X0, 0xD58000
	0x033D469C LDR X0, [X0 + 0xC50]
	0x033D46A0 BL 0x1C16CF4
	0x033D46A4 ADRP X0, 0xD58000
	0x033D46A8 LDR X0, [X0 + 0xC80]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+64]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, X19
	008 Move W1, W31
	009 Call TypeSpec.GetDisplayFullName, X0, X1
	010 Move [X19+64], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return X0

Method: System.TypeSpec Parse(System.String typeName)

Disassembly:
	0x033D48A0 MOV X0, X26
	0x033D48A4 BLR X8
	0x033D48A8 MOV X2, X0
	0x033D48AC CBZ X23, 0x33D48CC
	0x033D48B0 LDR X8, [X23 + 0x18]
	0x033D48B4 LDR X0, [X23 + 0x40]
	0x033D48B8 LDR X4, [X23 + 0x28]
	0x033D48BC AND W3, W22, 0x1
	0x033D48C0 MOV X1, X25
	0x033D48C4 BLR X8
	0x033D48C8 B 0x33D48F0
	0x033D48CC CBZ X25, 0x33D4DC0
	0x033D48D0 LDR X8, [X25]
	0x033D48D4 AND W3, W22, 0x1
	0x033D48D8 MOV X0, X25
	0x033D48DC MOV X1, X2
	0x033D48E0 LDR X9, [X8 + 0x278]
	0x033D48E4 LDR X4, [X8 + 0x280]
	0x033D48E8 MOV W2, W31
	0x033D48EC BLR X9
	0x033D48F0 ADRP X8, 0xD1F000
	0x033D48F4 LDR X8, [X8 + 0x6C0]
	0x033D48F8 MOV X27, X0
	0x033D48FC LDR X0, [X8]
	0x033D4900 LDR W8, [X0 + 0xE0]
	0x033D4904 CBNZ W8, 0x33D490C
	0x033D4908 BL 0x1C16DFC
	0x033D490C MOV X0, X27
	0x033D4910 MOV X1, X31
	0x033D4914 MOV X2, X31
	0x033D4918 BL 0x3395194
	0x033D491C TBZ X0, 0x0, 0x33D49AC
	0x033D4920 TBZ X21, 0x0, 0x33D4CD4
	0x033D4924 LDR X20, [X19 + 0x10]
	0x033D4928 ADRP X0, 0xD58000
	0x033D492C LDR X0, [X0 + 0xD68]
	0x033D4930 BL 0x1C16D08
	0x033D4934 MOV X19, X0
	0x033D4938 CBZ X20, 0x33D4950
	0x033D493C LDR X8, [X20]
	0x033D4940 MOV X0, X20
	0x033D4944 LDP X9, X1, [X8 + 0x168]
	0x033D4948 BLR X9
	0x033D494C MOV X20, X0
	0x033D4950 ADRP X0, 0xD27000
	0x033D4954 LDR X0, [X0 + 0x9B0]
	0x033D4958 BL 0x1C16D08
	0x033D495C MOV X2, X0
	0x033D4960 MOV X0, X19
	0x033D4964 MOV X1, X20
	0x033D4968 MOV X3, X31
	0x033D496C BL 0x32274B8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move [X31+12], W31
	005 Compare X0, 0
	006 JumpIfEqual {19}
	007 Add X1, X31, 12
	008 Move W3, 1
	009 Move W2, W31
	010 Move X19, X0
	011 Call TypeSpec.Parse, X0, X1, X2, X3
	012 Move W8, [X31+12]
	013 Move W9, [X19+16]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 Return X0
	019 Move X0, 0xD25000
	020 Move X0, [X0+1320]
	021 Call 0x1C17D08
	022 Call 0x1C17F10
	023 Move X19, X0
	024 Move X0, 0xD52000
	025 Move X0, [X0+2416]
	026 Call 0x1C17D08
	027 Move X1, X0
	028 Move X0, X19
	029 Move X2, X31
	030 Call ArgumentNullException..ctor, X0, X1
	031 Move X0, 0xD28000
	032 Move X0, [X0+1400]
	033 Call 0x1C17D08
	034 Call 0x1C17F10
	035 Move X19, X0
	036 Move X0, 0xD59000
	037 Move X0, [X0+3216]
	038 Call 0x1C17D08
	039 Move X20, X0
	040 Move X0, 0xD52000
	041 Move X0, [X0+2416]
	042 Call 0x1C17D08
	043 Move X2, X0
	044 Move X0, X19
	045 Move X1, X20
	046 Move X3, X31
	047 Call ArgumentException..ctor, X0, X1, X2
	048 Move X0, 0xD59000
	049 Move X0, [X0+3224]
	050 Call 0x1C17D08
	051 Move X1, X0
	052 Move X0, X19
	053 Call 0x1C17DEC

Method: System.String UnescapeInternalName(System.String displayName)

Disassembly:
	0x033D5510 MOV X0, X21
	0x033D5514 MOV X1, X22
	0x033D5518 MOV X2, X31
	0x033D551C BL 0x33A8424
	0x033D5520 TBZ X0, 0x0, 0x33D552C
	0x033D5524 MOV W0, W31
	0x033D5528 B 0x33D55A4
	0x033D552C ADD X2, X31, 0x8
	0x033D5530 MOV X0, X20
	0x033D5534 MOV X1, X19
	0x033D5538 BL 0x1C8833C
	0x033D553C LDR X8, [X31 + 0x8]
	0x033D5540 CBZ X8, 0x33D55A4
	0x033D5544 MOV W9, W31
	0x033D5548 LDR W10, [X8 + 0x18]
	0x033D554C CMP W9, W10
	0x033D5550 B.GE 0x33D55A0
	0x033D5554 B.CS 0x33D55BC
	0x033D5558 ADD W19, W9, 0x1
	0x033D555C CMP W19, W10
	0x033D5560 B.CS 0x33D55BC
	0x033D5564 ADD X9, X8, W9, 0x3, SXTW
	0x033D5568 LDR X0, [X9 + 0x20]
	0x033D556C ADD X9, X8, W19, 0x3, SXTW
	0x033D5570 LDR X1, [X9 + 0x20]
	0x033D5574 CBZ X0, 0x33D5590
	0x033D5578 LDR X8, [X0]
	0x033D557C LDP X9, X2, [X8 + 0x138]
	0x033D5580 BLR X9
	0x033D5584 TBZ X0, 0x0, 0x33D5524
	0x033D5588 LDR X8, [X31 + 0x8]
	0x033D558C B 0x33D5594
	0x033D5590 CBNZ X1, 0x33D5524
	0x033D5594 ADD W9, W19, 0x1
	0x033D5598 CBNZ X8, 0x33D5548
	0x033D559C BL 0x1C16F20
	0x033D55A0 MOVZ W0, 0x1
	0x033D55A4 LDP X20, X19, [X31 + 0x30]
	0x033D55A8 LDP X22, X21, [X31 + 0x20]
	0x033D55AC LDP X30, X23, [X31 + 0x10]
	0x033D55B0 AND W0, W0, 0x1
	0x033D55B4 ADD X31, X31, 0x40
	0x033D55B8 RET
	0x033D55BC BL 0x1C16F28
	0x033D55C0 MOV X0, X22
	0x033D55C4 BL 0x1C171E0
	0x033D55C8 MOV X0, X21
	0x033D55CC BL 0x1C171E0
	0x033D55D0 B 0x33D5420
	0x033D55D4 B 0x1C88650
	0x033D55D8 STR X30, [X31 - 0x20]!
	0x033D55DC STP X20, X19, [X31 + 0x10]
	0x033D55E0 ADD X1, X31, 0x8
	0x033D55E4 STR X31, [X31 + 0x8]
	0x033D55E8 BL 0x1C88650
	0x033D55EC LDR X8, [X31 + 0x8]
	0x033D55F0 MOV W19, W0
	0x033D55F4 CBZ X8, 0x33D563C
	0x033D55F8 MOV X20, X31
	0x033D55FC LDR W9, [X8 + 0x18]
	0x033D5600 CMP X20, W9, SXTW

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1009000
	006 Move W8, [X20+734]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD1F000
	013 Move X0, [X0+2288]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+734], W8
	017 Compare X19, 0
	018 JumpIfEqual {67}
	019 Move X8, 0xD1F000
	020 Move X8, [X8+2288]
	021 Move W21, [X19+16]
	022 Move X0, [X8]
	023 Call 0x1C17F10
	024 Move W1, W21
	025 Move X2, X31
	026 Move X20, X0
	027 Call StringBuilder..ctor, X0, X1
	028 Move W8, [X19+16]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W21, W31
	031 Move X0, X19
	032 Move W1, W21
	033 Move X2, X31
	034 Call String.get_Chars, X0, X1
	035 And W8, W0, 0xFFFF
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W8, [X19+16]
	038 Add W21, W21, 1
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X0, X19
	041 Move W1, W21
	042 Move X2, X31
	043 Call String.get_Chars, X0, X1
	044 Move W1, W0
	045 Compare X20, 0
	046 JumpIfNotEqual {50}
	047 Move W1, 92
	048 Compare X20, 0
	049 JumpIfEqual {67}
	050 Move X0, X20
	051 Move X2, X31
	052 Call StringBuilder.Append, X0, X1
	053 Move W8, [X19+16]
	054 Add W21, W21, 1
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Compare X20, 0
	057 JumpIfEqual {67}
	058 Move X8, [X20]
	059 Move X0, X20
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X2, [X8+360]
	063 Move X1, [X8+368]
	064 Move X30, [X31+32]
	065 Move X21, [X31+40]
	066 CallNoReturn X2
	067 Call 0x1C17F20

Method: System.Type Resolve(System.Func`2<System.Reflection.AssemblyName, System.Reflection.Assembly> assemblyResolver, System.Func`4<System.Reflection.Assembly, System.String, System.Boolean, System.Type> typeResolver, System.Boolean throwOnError, System.Boolean ignoreCase, ref System.Threading.StackCrawlMark stackMark)

Disassembly:
	0x033D5604 B.GE 0x33D563C
	0x033D5608 CMP X20, X9
	0x033D560C B.CS 0x33D564C
	0x033D5610 ADD X9, X8, X20, 0x3, LSL
	0x033D5614 LDR X0, [X9 + 0x20]
	0x033D5618 CBZ X0, 0x33D5630
	0x033D561C LDR X8, [X0]
	0x033D5620 LDP X9, X1, [X8 + 0x158]
	0x033D5624 BLR X9
	0x033D5628 LDR X8, [X31 + 0x8]
	0x033D562C EOR W19, W0, W19, 0x0
	0x033D5630 ADD X20, X20, 0x1
	0x033D5634 CBNZ X8, 0x33D55FC
	0x033D5638 BL 0x1C16F20
	0x033D563C MOV W0, W19
	0x033D5640 LDP X20, X19, [X31 + 0x10]
	0x033D5644 LDR X30, [X31], #0x20
	0x033D5648 RET
	0x033D564C BL 0x1C16F28
	0x033D5650 STR X30, [X31 - 0x10]!
	0x033D5654 MOV X1, X31
	0x033D5658 BL 0x33BE520
	0x033D565C CBZ X0, 0x33D5674
	0x033D5660 LDR X8, [X0]
	0x033D5664 LDR X2, [X8 + 0x2E8]
	0x033D5668 LDR X1, [X8 + 0x2F0]
	0x033D566C LDR X30, [X31], #0x10
	0x033D5670 BR X2
	0x033D5674 BL 0x1C16F20
	0x033D5678 STR X30, [X31 - 0x20]!
	0x033D567C STP X20, X19, [X31 + 0x10]
	0x033D5680 ADRP X20, 0x1008000
	0x033D5684 LDRB W8, [X20 + 0x2E8]
	0x033D5688 MOV X19, X0
	0x033D568C TBNZ X8, 0x0, 0x33D56A4
	0x033D5690 ADRP X0, 0xD46000
	0x033D5694 LDR X0, [X0 + 0x850]
	0x033D5698 BL 0x1C16CF4
	0x033D569C MOVZ W8, 0x1
	0x033D56A0 STRB W8, [X20 + 0x2E8]
	0x033D56A4 LDRH W8, [X19]
	0x033D56A8 CMP W8, 0x8
	0x033D56AC B.NE 0x33D56E0
	0x033D56B0 ADRP X8, 0xD46000
	0x033D56B4 LDR X8, [X8 + 0x850]
	0x033D56B8 LDR X19, [X19 + 0x8]
	0x033D56BC LDR X0, [X8]
	0x033D56C0 LDR W8, [X0 + 0xE0]
	0x033D56C4 CBNZ W8, 0x33D56CC
	0x033D56C8 BL 0x1C16DFC
	0x033D56CC MOV X0, X19
	0x033D56D0 LDP X20, X19, [X31 + 0x10]
	0x033D56D4 MOV X1, X31
	0x033D56D8 LDR X30, [X31], #0x20
	0x033D56DC B 0x32C105C
	0x033D56E0 LDP X20, X19, [X31 + 0x10]
	0x033D56E4 LDR X30, [X31], #0x20
	0x033D56E8 RET
	0x033D56EC STP X30, X19, [X31 - 0x10]!
	0x033D56F0 LDRB W8, [X0 + 0x10]
	0x033D56F4 MOV X19, X0
	0x033D56F8 MOV X0, X1
	0x033D56FC MOV X2, X31
	0x033D5700 MOV W1, W8
	0x033D5704 BL 0x32C0780
	0x033D5708 STR X0, [X19 + 0x18]
	0x033D570C LDP X30, X19, [X31], #0x10
	0x033D5710 RET
	0x033D5714 MOV X1, X31
	0x033D5718 B 0x33BDD8C
	0x033D571C STR X30, [X31 - 0x20]!
	0x033D5720 STP X20, X19, [X31 + 0x10]
	0x033D5724 MOV X19, X1
	0x033D5728 MOV X1, X31
	0x033D572C MOV X20, X0
	0x033D5730 BL 0x33BDD8C
	0x033D5734 STRB W31, [X20 + 0x10]
	0x033D5738 MOV X0, X20
	0x033D573C MOV X1, X19
	0x033D5740 LDP X20, X19, [X31 + 0x10]
	0x033D5744 LDR X30, [X31], #0x20
	0x033D5748 B 0x33D56EC
	0x033D574C STP X30, X21, [X31 - 0x20]!
	0x033D5750 STP X20, X19, [X31 + 0x10]
	0x033D5754 MOV X19, X1
	0x033D5758 MOV X1, X31
	0x033D575C MOV X20, X0
	0x033D5760 AND W21, W2, 0x1
	0x033D5764 BL 0x33BDD8C
	0x033D5768 STRB W21, [X20 + 0x10]
	0x033D576C MOV X0, X20
	0x033D5770 MOV X1, X19
	0x033D5774 LDP X20, X19, [X31 + 0x10]
	0x033D5778 LDP X30, X21, [X31], #0x20
	0x033D577C B 0x33D56EC
	0x033D5780 STP X30, X23, [X31 - 0x30]!
	0x033D5784 STP X22, X21, [X31 + 0x10]
	0x033D5788 STP X20, X19, [X31 + 0x20]
	0x033D578C ADRP X21, 0x1008000
	0x033D5790 LDRB W8, [X21 + 0x2E9]
	0x033D5794 MOV X20, X1
	0x033D5798 MOV X19, X0
	0x033D579C TBNZ X8, 0x0, 0x33D57D8
	0x033D57A0 ADRP X0, 0xD28000
	0x033D57A4 LDR X0, [X0 + 0x968]
	0x033D57A8 BL 0x1C16CF4
	0x033D57AC ADRP X0, 0xD1E000
	0x033D57B0 LDR X0, [X0 + 0x6C0]
	0x033D57B4 BL 0x1C16CF4
	0x033D57B8 ADRP X0, 0xD49000
	0x033D57BC LDR X0, [X0 + 0x78]
	0x033D57C0 BL 0x1C16CF4
	0x033D57C4 ADRP X0, 0xD49000
	0x033D57C8 LDR X0, [X0 + 0x80]
	0x033D57CC BL 0x1C16CF4
	0x033D57D0 MOVZ W8, 0x1
	0x033D57D4 STRB W8, [X21 + 0x2E9]
	0x033D57D8 MOV X0, X19
	0x033D57DC MOV X1, X31
	0x033D57E0 BL 0x33BDD8C
	0x033D57E4 CBZ X20, 0x33D586C
	0x033D57E8 ADRP X8, 0xD49000
	0x033D57EC LDR X8, [X8 + 0x80]
	0x033D57F0 ADRP X21, 0xD28000
	0x033D57F4 ADRP X23, 0xD1E000
	0x033D57F8 ADRP X22, 0xD49000
	0x033D57FC LDR X1, [X8]
	0x033D5800 LDR X21, [X21 + 0x968]
	0x033D5804 LDR X23, [X23 + 0x6C0]
	0x033D5808 LDR X22, [X22 + 0x78]
	0x033D580C MOV X0, X20
	0x033D5810 MOV X2, X31
	0x033D5814 BL 0x32A9988
	0x033D5818 AND W8, W0, 0x1
	0x033D581C STRB W8, [X19 + 0x10]
	0x033D5820 LDR X0, [X23]
	0x033D5824 LDR X21, [X21]
	0x033D5828 LDR W8, [X0 + 0xE0]
	0x033D582C CBNZ W8, 0x33D5834
	0x033D5830 BL 0x1C16DFC
	0x033D5834 MOV X0, X21
	0x033D5838 MOV X1, X31
	0x033D583C BL 0x338C698
	0x033D5840 LDR X1, [X22]
	0x033D5844 MOV X2, X0
	0x033D5848 MOV X0, X20
	0x033D584C MOV X3, X31
	0x033D5850 BL 0x32A9678
	0x033D5854 MOV X1, X0
	0x033D5858 MOV X0, X19
	0x033D585C LDP X20, X19, [X31 + 0x20]
	0x033D5860 LDP X22, X21, [X31 + 0x10]
	0x033D5864 LDP X30, X23, [X31], #0x30
	0x033D5868 B 0x33D56EC
	0x033D586C ADRP X0, 0xD23000
	0x033D5870 LDR X0, [X0 + 0x528]
	0x033D5874 BL 0x1C16D08
	0x033D5878 BL 0x1C16F10
	0x033D587C MOV X19, X0
	0x033D5880 ADRP X0, 0xD48000
	0x033D5884 LDR X0, [X0 + 0x2D8]
	0x033D5888 BL 0x1C16D08
	0x033D588C MOV X1, X0
	0x033D5890 MOV X0, X19
	0x033D5894 MOV X2, X31
	0x033D5898 BL 0x330E100
	0x033D589C ADRP X0, 0xD57000
	0x033D58A0 LDR X0, [X0 + 0xDC0]
	0x033D58A4 BL 0x1C16D08
	0x033D58A8 MOV X1, X0
	0x033D58AC MOV X0, X19
	0x033D58B0 BL 0x1C16DEC
	0x033D58B4 STR X30, [X31 - 0x10]!
	0x033D58B8 LDR X8, [X0]
	0x033D58BC LDP X9, X1, [X8 + 0x198]
	0x033D58C0 BLR X9
	0x033D58C4 CMP X0, 0x0
	0x033D58C8 CSET W0, NE
	0x033D58CC LDR X30, [X31], #0x10
	0x033D58D0 RET
	0x033D58D4 STP X30, X19, [X31 - 0x10]!
	0x033D58D8 ADD X19, X0, 0x18
	0x033D58DC MOV X0, X19
	0x033D58E0 MOV X1, X31
	0x033D58E4 BL 0x32C05E4
	0x033D58E8 TBZ X0, 0x0, 0x33D58FC
	0x033D58EC MOV X0, X19
	0x033D58F0 MOV X1, X31
	0x033D58F4 LDP X30, X19, [X31], #0x10
	0x033D58F8 B 0x32C05F4
	0x033D58FC MOV X0, X31
	0x033D5900 LDP X30, X19, [X31], #0x10
	0x033D5904 RET
	0x033D5908 ADD X0, X0, 0x18
	0x033D590C MOV X2, X31
	0x033D5910 B 0x32C0668
	0x033D5914 LDRB W0, [X0 + 0x10]
	0x033D5918 RET
	0x033D591C STP X30, X21, [X31 - 0x20]!
	0x033D5920 STP X20, X19, [X31 + 0x10]
	0x033D5924 MOV X19, X0
	0x033D5928 ADD X0, X0, 0x18
	0x033D592C MOV X1, X31
	0x033D5930 BL 0x32C0794
	0x033D5934 MOV X0, X19
	0x033D5938 LDP X20, X19, [X31 + 0x10]
	0x033D593C MOV X1, X31
	0x033D5940 LDP X30, X21, [X31], #0x20
	0x033D5944 B 0x33CB4DC
	0x033D5948 CMP W1, 0x1
	0x033D594C MOV X21, X0
	0x033D5950 B.NE 0x33D5980
	0x033D5954 MOV X0, X21
	0x033D5958 BL 0x3EB1AD0
	0x033D595C LDR X20, [X0]
	0x033D5960 BL 0x3EB1AE0
	0x033D5964 MOV X0, X19
	0x033D5968 MOV X1, X31
	0x033D596C BL 0x33CB4DC
	0x033D5970 CBNZ X20, 0x33D5988
	0x033D5974 LDP X20, X19, [X31 + 0x10]
	0x033D5978 LDP X30, X21, [X31], #0x20
	0x033D597C RET
	0x033D5980 MOV X20, X31
	0x033D5984 B 0x33D5994
	0x033D5988 MOV X0, X20
	0x033D598C BL 0x1C16F18
	0x033D5990 MOV X21, X0
	0x033D5994 MOV X0, X19
	0x033D5998 MOV X1, X31
	0x033D599C BL 0x33CB4DC
	0x033D59A0 CBNZ X20, 0x33D59AC
	0x033D59A4 MOV X0, X21
	0x033D59A8 BL 0x1D2C690
	0x033D59AC MOV X0, X20
	0x033D59B0 BL 0x1C16F18
	0x033D59B4 BL 0x1990590
	0x033D59B8 STP X30, X21, [X31 - 0x20]!
	0x033D59BC STP X20, X19, [X31 + 0x10]
	0x033D59C0 ADRP X21, 0x1008000
	0x033D59C4 LDRB W8, [X21 + 0x2EA]
	0x033D59C8 MOV X19, X1
	0x033D59CC MOV X20, X0
	0x033D59D0 TBNZ X8, 0x0, 0x33D59F4
	0x033D59D4 ADRP X0, 0xD49000
	0x033D59D8 LDR X0, [X0 + 0x78]
	0x033D59DC BL 0x1C16CF4
	0x033D59E0 ADRP X0, 0xD49000
	0x033D59E4 LDR X0, [X0 + 0x80]
	0x033D59E8 BL 0x1C16CF4
	0x033D59EC MOVZ W8, 0x1
	0x033D59F0 STRB W8, [X21 + 0x2EA]
	0x033D59F4 CBZ X19, 0x33D5A5C
	0x033D59F8 LDR X8, [X20]
	0x033D59FC ADRP X21, 0xD49000
	0x033D5A00 MOV X0, X20
	0x033D5A04 LDP X9, X1, [X8 + 0x1B8]
	0x033D5A08 LDR X21, [X21 + 0x80]
	0x033D5A0C BLR X9
	0x033D5A10 LDR X1, [X21]
	0x033D5A14 AND W2, W0, 0x1
	0x033D5A18 MOV X0, X19
	0x033D5A1C MOV X3, X31
	0x033D5A20 BL 0x32A8CA8
	0x033D5A24 LDR X8, [X20]
	0x033D5A28 LDP X9, X1, [X8 + 0x198]
	0x033D5A2C MOV X0, X20
	0x033D5A30 BLR X9
	0x033D5A34 ADRP X8, 0xD49000
	0x033D5A38 LDR X8, [X8 + 0x78]
	0x033D5A3C MOV X2, X0
	0x033D5A40 LDR X1, [X8]
	0x033D5A44 MOV X0, X19
	0x033D5A48 MOV X3, X31
	0x033D5A4C BL 0x32A8BF0
	0x033D5A50 LDP X20, X19, [X31 + 0x10]
	0x033D5A54 LDP X30, X21, [X31], #0x20
	0x033D5A58 RET
	0x033D5A5C ADRP X0, 0xD23000
	0x033D5A60 LDR X0, [X0 + 0x528]
	0x033D5A64 BL 0x1C16D08
	0x033D5A68 BL 0x1C16F10
	0x033D5A6C MOV X19, X0
	0x033D5A70 ADRP X0, 0xD48000
	0x033D5A74 LDR X0, [X0 + 0x2D8]
	0x033D5A78 BL 0x1C16D08
	0x033D5A7C MOV X1, X0
	0x033D5A80 MOV X0, X19
	0x033D5A84 MOV X2, X31
	0x033D5A88 BL 0x330E100
	0x033D5A8C ADRP X0, 0xD57000
	0x033D5A90 LDR X0, [X0 + 0xDC8]
	0x033D5A94 BL 0x1C16D08
	0x033D5A98 MOV X1, X0
	0x033D5A9C MOV X0, X19
	0x033D5AA0 BL 0x1C16DEC
	0x033D5AA4 CMP W1, 0x1
	0x033D5AA8 MOV X20, X0
	0x033D5AAC B.NE 0x33D5B2C
	0x033D5AB0 MOV X0, X20
	0x033D5AB4 BL 0x3EB1AD0
	0x033D5AB8 MOV X20, X0
	0x033D5ABC ADRP X0, 0xD1E000
	0x033D5AC0 LDR X0, [X0 + 0x7D0]
	0x033D5AC4 BL 0x1C16D08
	0x033D5AC8 LDR X8, [X20]
	0x033D5ACC LDR X1, [X8]
	0x033D5AD0 BL 0x1C17270
	0x033D5AD4 TBZ X0, 0x0, 0x33D5B04
	0x033D5AD8 BL 0x3EB1AE0
	0x033D5ADC ADRP X0, 0xD49000
	0x033D5AE0 LDR X0, [X0 + 0x78]
	0x033D5AE4 BL 0x1C16D08
	0x033D5AE8 MOV X1, X0
	0x033D5AEC MOV X0, X19
	0x033D5AF0 LDP X20, X19, [X31 + 0x10]
	0x033D5AF4 MOV X2, X31
	0x033D5AF8 MOV X3, X31
	0x033D5AFC LDP X30, X21, [X31], #0x20
	0x033D5B00 B 0x32A8BF0
	0x033D5B04 MOVZ W0, 0x8
	0x033D5B08 BL 0x3EB1AF0
	0x033D5B0C LDR X8, [X20]
	0x033D5B10 STR X8, [X0]
	0x033D5B14 ADRP X1, 0xADF000
	0x033D5B18 ADD X1, X1, 0xE58
	0x033D5B1C MOV X2, X31
	0x033D5B20 BL 0x3EB1B00
	0x033D5B24 MOV X20, X0
	0x033D5B28 BL 0x3EB1AE0
	0x033D5B2C MOV X0, X20
	0x033D5B30 BL 0x1D2C690
	0x033D5B34 BL 0x1990590
	0x033D5B38 SUB X31, X31, 0x30
	0x033D5B3C STP X30, X19, [X31 + 0x20]
	0x033D5B40 MOV X1, X31
	0x033D5B44 MOV X19, X0
	0x033D5B48 BL 0x33BDD8C
	0x033D5B4C MOVN W0, 0xA
	0x033D5B50 BL 0x33D5B8C
	0x033D5B54 STR X0, [X19 + 0x18]
	0x033D5B58 MOVN W0, 0x9
	0x033D5B5C BL 0x33D5B8C
	0x033D5B60 STR X0, [X19 + 0x10]
	0x033D5B64 STUR X31, [X31 + 0x16]
	0x033D5B68 STP X31, X31, [X31 + 0x8]
	0x033D5B6C LDR X0, [X19 + 0x18]
	0x033D5B70 ADD X1, X31, 0x8
	0x033D5B74 BL 0x33D5C10
	0x033D5B78 LDRH W8, [X31 + 0x10]
	0x033D5B7C STRH W8, [X19 + 0x20]
	0x033D5B80 LDP X30, X19, [X31 + 0x20]
	0x033D5B84 ADD X31, X31, 0x30
	0x033D5B88 RET
	0x033D5B8C SUB X31, X31, 0x50
	0x033D5B90 STR X30, [X31 + 0x30]
	0x033D5B94 STP X20, X19, [X31 + 0x40]
	0x033D5B98 ADRP X20, 0x1008000
	0x033D5B9C LDR X8, [X20 + 0x2F0]
	0x033D5BA0 MOV W19, W0
	0x033D5BA4 CBNZ X8, 0x33D5BEC
	0x033D5BA8 ADRP X11, 0xFFFFFFFFFD718000
	0x033D5BAC LDR V0, [X11 + 0x640]
	0x033D5BB0 ADRP X8, 0xFFFFFFFFFD744000
	0x033D5BB4 ADRP X10, 0xFFFFFFFFFD73B000
	0x033D5BB8 ADD X8, X8, 0xC78
	0x033D5BBC MOVZ W9, 0xC
	0x033D5BC0 ADD X10, X10, 0x3C4
	0x033D5BC4 MOVZ W12, 0x4
	0x033D5BC8 ADD X0, X31, 0x0
	0x033D5BCC STP X8, X9, [X31]
	0x033D5BD0 STP X10, X9, [X31 + 0x10]
	0x033D5BD4 STR W12, [X31 + 0x28]
	0x033D5BD8 STR D0, [X31 + 0x20]
	0x033D5BDC STRB W31, [X31 + 0x2C]
	0x033D5BE0 BL 0x1C1729C
	0x033D5BE4 MOV X8, X0
	0x033D5BE8 STR X0, [X20 + 0x2F0]
	0x033D5BEC MOV W0, W19
	0x033D5BF0 BLR X8
	0x033D5BF4 MOV X19, X0
	0x033D5BF8 BL 0x1C16CAC
	0x033D5BFC MOV X0, X19
	0x033D5C00 LDP X20, X19, [X31 + 0x40]
	0x033D5C04 LDR X30, [X31 + 0x30]
	0x033D5C08 ADD X31, X31, 0x50
	0x033D5C0C RET
	0x033D5C10 SUB X31, X31, 0x50
	0x033D5C14 STP X30, X21, [X31 + 0x30]
	0x033D5C18 STP X20, X19, [X31 + 0x40]
	0x033D5C1C ADRP X21, 0x1008000
	0x033D5C20 LDR X8, [X21 + 0x2F8]
	0x033D5C24 MOV X19, X1
	0x033D5C28 MOV X20, X0
	0x033D5C2C CBNZ X8, 0x33D5C78
	0x033D5C30 ADRP X12, 0xFFFFFFFFFD718000
	0x033D5C34 LDR V0, [X12 + 0x640]
	0x033D5C38 ADRP X8, 0xFFFFFFFFFD744000
	0x033D5C3C ADRP X10, 0xFFFFFFFFFD72B000
	0x033D5C40 ADD X8, X8, 0xC78
	0x033D5C44 MOVZ W9, 0xC
	0x033D5C48 ADD X10, X10, 0x16D
	0x033D5C4C MOVZ W11, 0x1A
	0x033D5C50 MOVZ W13, 0x10
	0x033D5C54 ADD X0, X31, 0x0
	0x033D5C58 STP X8, X9, [X31]
	0x033D5C5C STP X10, X11, [X31 + 0x10]
	0x033D5C60 STR W13, [X31 + 0x28]
	0x033D5C64 STR D0, [X31 + 0x20]
	0x033D5C68 STRB W31, [X31 + 0x2C]
	0x033D5C6C BL 0x1C1729C
	0x033D5C70 MOV X8, X0
	0x033D5C74 STR X0, [X21 + 0x2F8]
	0x033D5C78 MOV X0, X20
	0x033D5C7C MOV X1, X19
	0x033D5C80 BLR X8
	0x033D5C84 MOV W19, W0
	0x033D5C88 BL 0x1C16CAC
	0x033D5C8C CMP W19, 0x0
	0x033D5C90 LDP X20, X19, [X31 + 0x40]
	0x033D5C94 LDP X30, X21, [X31 + 0x30]
	0x033D5C98 CSET W0, NE
	0x033D5C9C ADD X31, X31, 0x50
	0x033D5CA0 RET
	0x033D5CA4 AND W8, W0, 0xFFF0
	0x033D5CA8 ORR W0, W8, W1, 0x0
	0x033D5CAC RET
	0x033D5CB0 SUB X31, X31, 0x40
	0x033D5CB4 STR X30, [X31 + 0x20]
	0x033D5CB8 STP X20, X19, [X31 + 0x30]
	0x033D5CBC STP X31, X31, [X31 + 0x8]
	0x033D5CC0 STUR X31, [X31 + 0x16]
	0x033D5CC4 MOV X19, X0
	0x033D5CC8 LDR X0, [X0 + 0x18]
	0x033D5CCC MOV W20, W1
	0x033D5CD0 ADD X1, X31, 0x8
	0x033D5CD4 BL 0x33D5C10
	0x033D5CD8 LDRH W8, [X31 + 0x10]
	0x033D5CDC LDR X0, [X19 + 0x18]
	0x033D5CE0 AND W8, W8, 0xFFFFFFF0
	0x033D5CE4 ORR W1, W8, W20, 0x0
	0x033D5CE8 BL 0x33D5CFC
	0x033D5CEC LDP X20, X19, [X31 + 0x30]
	0x033D5CF0 LDR X30, [X31 + 0x20]
	0x033D5CF4 ADD X31, X31, 0x40
	0x033D5CF8 RET
	0x033D5CFC SUB X31, X31, 0x50
	0x033D5D00 STP X30, X21, [X31 + 0x30]
	0x033D5D04 STP X20, X19, [X31 + 0x40]
	0x033D5D08 ADRP X21, 0x1008000
	0x033D5D0C LDR X8, [X21 + 0x300]
	0x033D5D10 MOV W19, W1
	0x033D5D14 MOV X20, X0
	0x033D5D18 CBNZ X8, 0x33D5D60
	0x033D5D1C ADRP X12, 0xFFFFFFFFFD718000
	0x033D5D20 LDR V0, [X12 + 0x640]
	0x033D5D24 ADRP X8, 0xFFFFFFFFFD744000
	0x033D5D28 ADRP X10, 0xFFFFFFFFFD754000
	0x033D5D2C ADD X8, X8, 0xC78
	0x033D5D30 MOVZ W9, 0xC
	0x033D5D34 ADD X10, X10, 0xC4B
	0x033D5D38 MOVZ W11, 0x17
	0x033D5D3C ADD X0, X31, 0x0
	0x033D5D40 STP X8, X9, [X31]
	0x033D5D44 STP X10, X11, [X31 + 0x10]
	0x033D5D48 STR W9, [X31 + 0x28]
	0x033D5D4C STR D0, [X31 + 0x20]
	0x033D5D50 STRB W31, [X31 + 0x2C]
	0x033D5D54 BL 0x1C1729C
	0x033D5D58 MOV X8, X0
	0x033D5D5C STR X0, [X21 + 0x300]
	0x033D5D60 MOV X0, X20
	0x033D5D64 MOV W1, W19
	0x033D5D68 BLR X8
	0x033D5D6C MOV W19, W0
	0x033D5D70 BL 0x1C16CAC
	0x033D5D74 CMP W19, 0x0
	0x033D5D78 LDP X20, X19, [X31 + 0x40]
	0x033D5D7C LDP X30, X21, [X31 + 0x30]
	0x033D5D80 CSET W0, NE
	0x033D5D84 ADD X31, X31, 0x50
	0x033D5D88 RET
	0x033D5D8C SUB X31, X31, 0x50
	0x033D5D90 STP X30, X31, [X31 + 0x30]
	0x033D5D94 STP X20, X19, [X31 + 0x40]
	0x033D5D98 STP X31, X31, [X31 + 0x10]
	0x033D5D9C STR X31, [X31 + 0x8]
	0x033D5DA0 MOV X19, X0
	0x033D5DA4 LDR X0, [X0 + 0x10]
	0x033D5DA8 ADD X1, X31, 0x8
	0x033D5DAC ADD X3, X31, 0x3C
	0x033D5DB0 MOVZ W2, 0x1
	0x033D5DB4 BL 0x33D5EC4
	0x033D5DB8 TBZ X0, 0x0, 0x33D5E44
	0x033D5DBC LDRB W8, [X31 + 0xA]
	0x033D5DC0 TBZ X8, 0x0, 0x33D5DF4
	0x033D5DC4 LDRH W8, [X31 + 0x8]
	0x033D5DC8 CMP W8, 0x1
	0x033D5DCC B.NE 0x33D5DF4
	0x033D5DD0 LDRSH W2, [X31 + 0xE]
	0x033D5DD4 CMP W2, 0x14
	0x033D5DD8 B.EQ 0x33D5DF4
	0x033D5DDC SUB W8, W2, 0x10
	0x033D5DE0 CMP W8, 0x3
	0x033D5DE4 B.CC 0x33D5DF4
	0x033D5DE8 SUB W8, W2, 0x90
	0x033D5DEC CMP W8, 0x2
	0x033D5DF0 B.CS 0x33D5DFC
	0x033D5DF4 LDR X0, [X19 + 0x10]
	0x033D5DF8 B 0x33D5DA8
	0x033D5DFC LDR W8, [X31 + 0x14]
	0x033D5E00 LDRH W1, [X31 + 0x12]
	0x033D5E04 ADD X0, X31, 0x20
	0x033D5E08 MOV X6, X31
	0x033D5E0C ANDS W31, W8, 0x3
	0x033D5E10 CSET W4, NE
	0x033D5E14 ANDS W31, W8, 0xC
	0x033D5E18 UBFM W3, W8, 0x4, 0x4
	0x033D5E1C CSET W5, NE
	0x033D5E20 STR X31, [X31 + 0x20]
	0x033D5E24 STR W31, [X31 + 0x28]
	0x033D5E28 BL 0x339D33C
	0x033D5E2C LDR X0, [X31 + 0x20]
	0x033D5E30 LDR W1, [X31 + 0x28]
	0x033D5E34 LDP X20, X19, [X31 + 0x40]
	0x033D5E38 LDR X30, [X31 + 0x30]
	0x033D5E3C ADD X31, X31, 0x50
	0x033D5E40 RET
	0x033D5E44 ADRP X0, 0xD46000
	0x033D5E48 LDR X0, [X0 + 0x850]
	0x033D5E4C BL 0x1C16D08
	0x033D5E50 BL 0x19903D0
	0x033D5E54 MOV X0, X31
	0x033D5E58 BL 0x32C1324
	0x033D5E5C STR W0, [X31 + 0x38]
	0x033D5E60 ADD X0, X31, 0x38
	0x033D5E64 MOV X1, X31
	0x033D5E68 BL 0x337B6E0
	0x033D5E6C MOV X19, X0
	0x033D5E70 ADRP X0, 0xD57000
	0x033D5E74 LDR X0, [X0 + 0xDD0]
	0x033D5E78 BL 0x1C16D08
	0x033D5E7C MOV X1, X19
	0x033D5E80 MOV X2, X31
	0x033D5E84 BL 0x321B938
	0x033D5E88 MOV X19, X0
	0x033D5E8C ADRP X0, 0xD1E000
	0x033D5E90 LDR X0, [X0 + 0x5B0]
	0x033D5E94 BL 0x1C16D08
	0x033D5E98 BL 0x1C16F10
	0x033D5E9C MOV X1, X19
	0x033D5EA0 MOV X2, X31
	0x033D5EA4 MOV X20, X0
	0x033D5EA8 BL 0x337DF1C
	0x033D5EAC ADRP X0, 0xD57000
	0x033D5EB0 LDR X0, [X0 + 0xDD8]
	0x033D5EB4 BL 0x1C16D08
	0x033D5EB8 MOV X1, X0
	0x033D5EBC MOV X0, X20
	0x033D5EC0 BL 0x1C16DEC
	0x033D5EC4 SUB X31, X31, 0x60
	0x033D5EC8 STP X30, X23, [X31 + 0x30]
	0x033D5ECC STP X22, X21, [X31 + 0x40]
	0x033D5ED0 STP X20, X19, [X31 + 0x50]
	0x033D5ED4 ADRP X23, 0x1008000

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X20, 0x1009000
	015 Move W8, [X20+735]
	016 Move X29, X5
	017 Move W22, W4
	018 Move W21, W3
	019 Move X23, X2
	020 Move X24, X1
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {76}
	026 Move X0, 0xD50000
	027 Move X0, [X0+3840]
	028 Call 0x1C17CF4
	029 Move X0, 0xD58000
	030 Move X0, [X0+3128]
	031 Call 0x1C17CF4
	032 Move X0, 0xD58000
	033 Move X0, [X0+3176]
	034 Call 0x1C17CF4
	035 Move X0, 0xD58000
	036 Move X0, [X0+3136]
	037 Call 0x1C17CF4
	038 Move X0, 0xD58000
	039 Move X0, [X0+3184]
	040 Call 0x1C17CF4
	041 Move X0, 0xD58000
	042 Move X0, [X0+3192]
	043 Call 0x1C17CF4
	044 Move X0, 0xD58000
	045 Move X0, [X0+3144]
	046 Call 0x1C17CF4
	047 Move X0, 0xD58000
	048 Move X0, [X0+3152]
	049 Call 0x1C17CF4
	050 Move X0, 0xD58000
	051 Move X0, [X0+3200]
	052 Call 0x1C17CF4
	053 Move X0, 0xD58000
	054 Move X0, [X0+3160]
	055 Call 0x1C17CF4
	056 Move X0, 0xD58000
	057 Move X0, [X0+3168]
	058 Call 0x1C17CF4
	059 Move X0, 0xD58000
	060 Move X0, [X0+3208]
	061 Call 0x1C17CF4
	062 Move X0, 0xD48000
	063 Move X0, [X0+1256]
	064 Call 0x1C17CF4
	065 Move X0, 0xD58000
	066 Move X0, [X0+3112]
	067 Call 0x1C17CF4
	068 Move X0, 0xD27000
	069 Move X0, [X0+3168]
	070 Call 0x1C17CF4
	071 Move X0, 0xD1F000
	072 Move X0, [X0+1728]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+735], W8
	076 Move [X31+64], X31
	077 Move [X31+72], X31
	078 Move [X31+80], X31
	079 Move [X31+32], X31
	080 Move [X31+40], X31
	081 Move [X31+48], X31
	082 Compare X24, 0
	083 JumpIfNotEqual {109}
	084 Compare X23, 0
	085 JumpIfNotEqual {109}
	086 Move X23, [X19+64]
	087 Compare X23, 0
	088 JumpIfNotEqual {94}
	089 Move X0, X19
	090 Move W1, W31
	091 Call TypeSpec.GetDisplayFullName, X0, X1
	092 Move X23, X0
	093 Move [X19+64], X0
	094 Move X8, 0xD48000
	095 Move X8, [X8+1256]
	096 Move X0, [X8]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 And W1, W21, 1
	102 And W2, W22, 1
	103 Move X0, X23
	104 Move W3, W31
	105 Move X4, X29
	106 Move X5, X31
	107 Call RuntimeType.GetType, X0, X1, X2, X3, X4
	108 Move X20, X0
	109 Move X25, [X19+24]
	110 Compare X25, 0
	111 JumpIfEqual {164}
	112 Compare X24, 0
	113 JumpIfEqual {127}
	114 Move X8, 0xD50000
	115 Move X8, [X8+3840]
	116 Move X0, [X8]
	117 Call 0x1C17F10
	118 Move X1, X25
	119 Move X2, X31
	120 Move X26, X0
	121 Call AssemblyName..ctor, X0, X1
	122 Move X8, [X24+24]
	123 Move X0, [X24+64]
	124 Move X2, [X24+40]
	125 Move X1, X26
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move X0, X25
	128 Move X1, X31
	129 Call Assembly.Load, X0
	130 Move X1, X31
	131 Move X2, X31
	132 Move X25, X0
	133 Call Assembly.op_Equality, X0, X1
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfNotEqual {164}
	138 Move TEMP, X21
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfNotEqual {491}
	142 Move X0, 0xD58000
	143 Move X19, [X19+24]
	144 Move X0, [X0+3424]
	145 Call 0x1C17D08
	146 Move X20, X0
	147 Move X0, 0xD27000
	148 Move X0, [X0+2480]
	149 Call 0x1C17D08
	150 Move X2, X0
	151 Move X0, X20
	152 Move X1, X19
	153 Move X3, X31
	154 Call String.Concat, X0, X1, X2
	155 Move X19, X0
	156 Move X0, 0xD4D000
	157 Move X0, [X0+1952]
	158 Call 0x1C17D08
	159 Call 0x1C17F10
	160 Move X1, X19
	161 Move X2, X31
	162 Move X20, X0
	163 Call FileNotFoundException..ctor, X0, X1
	164 Move X26, [X19+16]
	165 Compare X26, 0
	166 JumpIfEqual {559}
	167 Move X28, 0xD58000
	168 Move X8, [X26]
	169 Move X28, [X28+3112]
	170 NotImplemented "Instruction LDRH not yet implemented."
	171 Move X1, [X28]
	172 Compare X9, 0
	173 JumpIfEqual {180}
	174 Move X10, [X8+176]
	175 Add X10, X10, 8
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Subtract X9, X9, 1
	179 Add X10, X10, 16
	180 Move X0, X26
	181 Move W2, W31
	182 Call 0x1C5D788
	183 NotImplemented "Instruction LDRSW not yet implemented."
	184 Add X8, X8, X9
	185 Add X0, X8, 312
	186 Move X8, [X0]
	187 Move X1, [X0+8]
	188 Move X0, X26
	189 NotImplemented "Instruction BLR not yet implemented."
	190 Move X2, X0
	191 Compare X23, 0
	192 JumpIfEqual {199}
	193 Move X8, [X23+24]
	194 Move X0, [X23+64]
	195 Move X4, [X23+40]
	196 And W3, W22, 1
	197 Move X1, X25
	198 NotImplemented "Instruction BLR not yet implemented."
	199 Compare X25, 0
	200 JumpIfEqual {559}
	201 Move X8, [X25]
	202 And W3, W22, 1
	203 Move X0, X25
	204 Move X1, X2
	205 Move X9, [X8+632]
	206 Move X4, [X8+640]
	207 Move W2, W31
	208 NotImplemented "Instruction BLR not yet implemented."
	209 Move X8, 0xD1F000
	210 Move X8, [X8+1728]
	211 Move X27, X0
	212 Move X0, [X8]
	213 Move W8, [X0+224]
	214 Compare W8, 0
	215 JumpIfNotEqual {217}
	216 Call 0x1C17DFC
	217 Move X0, X27
	218 Move X1, X31
	219 Move X2, X31
	220 Call Type.op_Equality, X0, X1
	221 Move TEMP, X0
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfNotEqual {265}
	225 Move TEMP, X21
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfNotEqual {491}
	229 Move X20, [X19+16]
	230 Move X0, 0xD58000
	231 Move X0, [X0+3432]
	232 Call 0x1C17D08
	233 Move X19, X0
	234 Compare X20, 0
	235 JumpIfEqual {242}
	236 Move X8, [X20]
	237 Move X0, X20
	238 Move X9, [X8+360]
	239 Move X1, [X8+368]
	240 NotImplemented "Instruction BLR not yet implemented."
	241 Move X20, X0
	242 Move X0, 0xD27000
	243 Move X0, [X0+2480]
	244 Call 0x1C17D08
	245 Move X2, X0
	246 Move X0, X19
	247 Move X1, X20
	248 Move X3, X31
	249 Call String.Concat, X0, X1, X2
	250 Move X19, X0
	251 Move X0, 0xD51000
	252 Move X0, [X0+1208]
	253 Call 0x1C17D08
	254 Call 0x1C17F10
	255 Move X1, X19
	256 Move X2, X31
	257 Move X20, X0
	258 Call TypeLoadException..ctor, X0, X1
	259 Move X0, 0xD58000
	260 Move X0, [X0+3440]
	261 Call 0x1C17D08
	262 Move X1, X0
	263 Move X0, X20
	264 Call 0x1C17DEC
	265 Move X0, [X19+32]
	266 Compare X0, 0
	267 JumpIfEqual {345}
	268 Move X8, 0xD58000
	269 Move X8, [X8+3152]
	270 Move X1, [X8]
	271 Add X8, X31, 8
	272 Call List`1<Object>.GetEnumerator, X0
	273 NotImplemented "Instruction LDUR not yet implemented."
	274 Move X8, [X31+24]
	275 Move X20, 0xD58000
	276 Move [X31+4], V0
	277 Move [X31+80], X8
	278 Move X20, [X20+3136]
	279 Move X1, [X20]
	280 Move X25, X27
	281 Add X0, X31, 64
	282 Call Enumerator<Object>.MoveNext, X0
	283 Move TEMP, X0
	284 And TEMP, TEMP, 1
	285 Compare TEMP, 1
	286 JumpIfNotEqual {346}
	287 Move X26, [X31+80]
	288 Compare X26, 0
	289 JumpIfEqual {508}
	290 Move X8, [X26]
	291 Move X1, [X28]
	292 NotImplemented "Instruction LDRH not yet implemented."
	293 Compare X9, 0
	294 JumpIfEqual {301}
	295 Move X10, [X8+176]
	296 Add X10, X10, 8
	297 NotImplemented "Instruction LDUR not yet implemented."
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Subtract X9, X9, 1
	300 Add X10, X10, 16
	301 Move X0, X26
	302 Move W2, W31
	303 Call 0x1C5D788
	304 NotImplemented "Instruction LDRSW not yet implemented."
	305 Add X8, X8, X9
	306 Add X0, X8, 312
	307 Move X8, [X0]
	308 Move X1, [X0+8]
	309 Move X0, X26
	310 NotImplemented "Instruction BLR not yet implemented."
	311 Move X1, X0
	312 Compare X25, 0
	313 JumpIfEqual {509}
	314 Move X8, [X25]
	315 Move X9, [X8+1896]
	316 Move X3, [X8+1904]
	317 Move W2, 48
	318 Move X0, X25
	319 NotImplemented "Instruction BLR not yet implemented."
	320 Move X8, 0xD1F000
	321 Move X8, [X8+1728]
	322 Move X27, X0
	323 Move X0, [X8]
	324 Move W8, [X0+224]
	325 Compare W8, 0
	326 JumpIfNotEqual {328}
	327 Call 0x1C17DFC
	328 Move X0, X27
	329 Move X1, X31
	330 Move X2, X31
	331 Call Type.op_Equality, X0, X1
	332 Move TEMP, X0
	333 And TEMP, TEMP, 1
	334 Compare TEMP, 1
	335 JumpIfNotEqual {279}
	336 Move TEMP, X21
	337 And TEMP, TEMP, 1
	338 Compare TEMP, 1
	339 JumpIfEqual {514}
	340 Move X8, 0xD58000
	341 Move X8, [X8+3128]
	342 Add X0, X31, 64
	343 Move X1, [X8]
	344 Call Enumerator<Object>.Dispose, X0
	345 Move X25, X27
	346 Move X8, 0xD58000
	347 Move X8, [X8+3128]
	348 Add X0, X31, 64
	349 Move X1, [X8]
	350 Call Enumerator<Object>.Dispose, X0
	351 Move X8, [X19+40]
	352 Compare X8, 0
	353 JumpIfEqual {421}
	354 Move W1, [X8+24]
	355 Move X8, 0xD27000
	356 Move X8, [X8+3168]
	357 Move X0, [X8]
	358 Call 0x1C17D6C
	359 Compare X0, 0
	360 JumpIfEqual {559}
	361 Move W8, [X0+24]
	362 Move X26, X0
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Move X27, X31
	365 Add X20, X26, 32
	366 Move X0, [X19+40]
	367 Compare X0, 0
	368 JumpIfEqual {559}
	369 Move X8, 0xD58000
	370 Move X8, [X8+3168]
	371 Move W1, W27
	372 Move X2, [X8]
	373 Call List`1<Object>.get_Item, X0, X1
	374 Compare X0, 0
	375 JumpIfEqual {559}
	376 And W3, W21, 1
	377 And W4, W22, 1
	378 Move X1, X24
	379 Move X2, X23
	380 Move X5, X29
	381 Call TypeSpec.Resolve, X0, X1, X2, X3, X4, X5
	382 Move X8, 0xD1F000
	383 Move X8, [X8+1728]
	384 Move X28, X0
	385 Move X8, [X8]
	386 Move W9, [X8+224]
	387 Compare W9, 0
	388 JumpIfNotEqual {391}
	389 Move X0, X8
	390 Call 0x1C17DFC
	391 Move X0, X28
	392 Move X1, X31
	393 Move X2, X31
	394 Call Type.op_Equality, X0, X1
	395 Move TEMP, X0
	396 And TEMP, TEMP, 1
	397 Compare TEMP, 1
	398 JumpIfEqual {487}
	399 Compare X28, 0
	400 JumpIfEqual {407}
	401 Move X8, [X26]
	402 Move X0, X28
	403 Move X1, [X8+64]
	404 Call 0x1C17E00
	405 Compare X0, 0
	406 JumpIfEqual {511}
	407 Move W8, [X26+24]
	408 NotImplemented "Instruction CMP not yet implemented."
	409 Move [X20], X28
	410 Add X27, X27, 1
	411 NotImplemented "Instruction CMP not yet implemented."
	412 Compare X25, 0
	413 JumpIfEqual {559}
	414 Move X8, [X25]
	415 Move X0, X25
	416 Move X1, X26
	417 Move X9, [X8+2264]
	418 Move X2, [X8+2272]
	419 NotImplemented "Instruction BLR not yet implemented."
	420 Move X25, X0
	421 Move X0, [X19+48]
	422 Compare X0, 0
	423 JumpIfEqual {476}
	424 Move X8, 0xD58000
	425 Move X8, [X8+3200]
	426 Move X1, [X8]
	427 Add X8, X31, 8
	428 Call List`1<Object>.GetEnumerator, X0
	429 NotImplemented "Instruction LDUR not yet implemented."
	430 Move X8, [X31+24]
	431 Move X22, 0xD58000
	432 Move X22, [X22+3184]
	433 Move [X31+2], V0
	434 Move [X31+48], X8
	435 Move X23, 0xD58000
	436 Move X23, [X23+3208]
	437 Move X1, [X22]
	438 Move X20, X25
	439 Add X0, X31, 32
	440 Call Enumerator<Object>.MoveNext, X0
	441 Move TEMP, X0
	442 And TEMP, TEMP, 1
	443 Compare TEMP, 1
	444 JumpIfNotEqual {471}
	445 Move X21, [X31+48]
	446 Compare X21, 0
	447 JumpIfEqual {507}
	448 Move X8, [X21]
	449 Move X1, [X23]
	450 NotImplemented "Instruction LDRH not yet implemented."
	451 Compare X9, 0
	452 JumpIfEqual {459}
	453 Move X10, [X8+176]
	454 Add X10, X10, 8
	455 NotImplemented "Instruction LDUR not yet implemented."
	456 NotImplemented "Instruction CMP not yet implemented."
	457 Subtract X9, X9, 1
	458 Add X10, X10, 16
	459 Move X0, X21
	460 Move W2, W31
	461 Call 0x1C5D788
	462 NotImplemented "Instruction LDRSW not yet implemented."
	463 Add X8, X8, X9
	464 Add X0, X8, 312
	465 Move X8, [X0]
	466 Move X2, [X0+8]
	467 Move X0, X21
	468 Move X1, X20
	469 NotImplemented "Instruction BLR not yet implemented."
	470 Move X25, X0
	471 Move X8, 0xD58000
	472 Move X8, [X8+3176]
	473 Add X0, X31, 32
	474 Move X1, [X8]
	475 Call Enumerator<Object>.Dispose, X0
	476 Move X20, X25
	477 Move W8, [X19+56]
	478 Compare W8, 0
	479 JumpIfEqual {492}
	480 Compare X20, 0
	481 JumpIfEqual {559}
	482 Move X8, [X20]
	483 Move X0, X20
	484 Move X9, [X8+2248]
	485 Move X1, [X8+2256]
	486 NotImplemented "Instruction BLR not yet implemented."
	487 Move TEMP, X21
	488 And TEMP, TEMP, 1
	489 Compare TEMP, 1
	490 JumpIfEqual {547}
	491 Move X20, X31
	492 Move X0, X20
	493 Move X20, [X31+176]
	494 Move X19, [X31+184]
	495 Move X22, [X31+160]
	496 Move X21, [X31+168]
	497 Move X24, [X31+144]
	498 Move X23, [X31+152]
	499 Move X26, [X31+128]
	500 Move X25, [X31+136]
	501 Move X28, [X31+112]
	502 Move X27, [X31+120]
	503 Move X29, [X31+96]
	504 Move X30, [X31+104]
	505 Add X31, X31, 192
	506 Return X0
	507 Call 0x1C17F20
	508 Call 0x1C17F20
	509 Call 0x1C17F20
	510 Call 0x1C17F28
	511 Call 0x1C17F44
	512 Move X1, X31
	513 Call 0x1C17DEC
	514 Move X0, 0xD58000
	515 Move X0, [X0+3432]
	516 Call 0x1C17D08
	517 Move X8, [X26]
	518 Move X27, X0
	519 Move X9, [X8+360]
	520 Move X1, [X8+368]
	521 Move X0, X26
	522 NotImplemented "Instruction BLR not yet implemented."
	523 Move X26, X0
	524 Move X0, 0xD27000
	525 Move X0, [X0+2480]
	526 Call 0x1C17D08
	527 Move X2, X0
	528 Move X0, X27
	529 Move X1, X26
	530 Move X3, X31
	531 Call String.Concat, X0, X1, X2
	532 Move X26, X0
	533 Move X0, 0xD51000
	534 Move X0, [X0+1208]
	535 Call 0x1C17D08
	536 Call 0x1C17F10
	537 Move X27, X0
	538 Move X1, X26
	539 Move X2, X31
	540 Call TypeLoadException..ctor, X0, X1
	541 Move X0, 0xD58000
	542 Move X0, [X0+3440]
	543 Call 0x1C17D08
	544 Move X1, X0
	545 Move X0, X27
	546 Call 0x1C17DEC
	547 Move X19, [X19+40]
	548 Compare X19, 0
	549 JumpIfEqual {559}
	550 Move X0, 0xD58000
	551 Move X0, [X0+3168]
	552 Call 0x1C17D08
	553 Move X2, X0
	554 Move X0, X19
	555 Move W1, W27
	556 Call List`1<Object>.get_Item, X0, X1
	557 Compare X0, 0
	558 JumpIfNotEqual {560}
	559 Call 0x1C17F20
	560 Move X20, [X0+16]
	561 Move X26, X0
	562 NotImplemented "Instruction CMP not yet implemented."
	563 Move X0, X26
	564 Call 0x3EB2AD0
	565 Move X27, [X0]
	566 Call 0x3EB2AE0
	567 Move X8, 0xD58000
	568 Move X8, [X8+3128]
	569 Add X0, X31, 64
	570 Move X1, [X8]
	571 Call Enumerator<Object>.Dispose, X0
	572 Compare X27, 0
	573 JumpIfEqual {351}
	574 Move X0, X27
	575 Call 0x1C17F18
	576 Move X27, X31
	577 Move X26, X0
	578 Move X8, 0xD58000
	579 Move X8, [X8+3128]
	580 Move X1, [X8]
	581 Add X0, X31, 64
	582 Call Enumerator<Object>.Dispose, X0
	583 Compare X27, 0
	584 JumpIfEqual {611}
	585 Move X0, X27
	586 Call 0x1C17F18
	587 Move X26, X0
	588 NotImplemented "Instruction CMP not yet implemented."
	589 Move X0, X26
	590 Call 0x3EB2AD0
	591 Move X21, [X0]
	592 Call 0x3EB2AE0
	593 Move X8, 0xD58000
	594 Move X8, [X8+3176]
	595 Add X0, X31, 32
	596 Move X1, [X8]
	597 Call Enumerator<Object>.Dispose, X0
	598 Compare X21, 0
	599 JumpIfEqual {477}
	600 Move X0, X21
	601 Call 0x1C17F18
	602 Move X21, X31
	603 Move X26, X0
	604 Move X8, 0xD58000
	605 Move X8, [X8+3176]
	606 Move X1, [X8]
	607 Add X0, X31, 32
	608 Call Enumerator<Object>.Dispose, X0
	609 Compare X21, 0
	610 JumpIfNotEqual {613}
	611 Move X0, X26
	612 Call 0x1D2D690
	613 Move X0, X21
	614 Call 0x1C17F18
	615 Call 0x1991590

Method: System.Void AddName(System.String type_name)

Disassembly:
	0x033D5ED8 LDR X8, [X23 + 0x308]
	0x033D5EDC MOV X20, X3
	0x033D5EE0 MOV W21, W2
	0x033D5EE4 MOV X19, X1
	0x033D5EE8 MOV X22, X0
	0x033D5EEC CBNZ X8, 0x33D5F38
	0x033D5EF0 ADRP X12, 0xFFFFFFFFFD718000
	0x033D5EF4 LDR V0, [X12 + 0x640]
	0x033D5EF8 ADRP X8, 0xFFFFFFFFFD744000
	0x033D5EFC ADRP X10, 0xFFFFFFFFFD74B000
	0x033D5F00 ADD X8, X8, 0xC78
	0x033D5F04 MOVZ W9, 0xC
	0x033D5F08 ADD X10, X10, 0x58
	0x033D5F0C MOVZ W11, 0x10
	0x033D5F10 MOVZ W13, 0x1C
	0x033D5F14 ADD X0, X31, 0x0
	0x033D5F18 STP X8, X9, [X31]
	0x033D5F1C STP X10, X11, [X31 + 0x10]
	0x033D5F20 STR W13, [X31 + 0x28]
	0x033D5F24 STR D0, [X31 + 0x20]
	0x033D5F28 STRB W31, [X31 + 0x2C]
	0x033D5F2C BL 0x1C1729C
	0x033D5F30 MOV X8, X0
	0x033D5F34 STR X0, [X23 + 0x308]
	0x033D5F38 ADD X1, X31, 0x0
	0x033D5F3C MOV X0, X22
	0x033D5F40 MOV W2, W21
	0x033D5F44 MOV X3, X20
	0x033D5F48 STP X31, X31, [X31]
	0x033D5F4C STR W31, [X31 + 0x18]
	0x033D5F50 STR X31, [X31 + 0x10]
	0x033D5F54 BLR X8
	0x033D5F58 MOV W20, W0
	0x033D5F5C BL 0x1C16CAC
	0x033D5F60 LDP W9, W10, [X31 + 0x4]
	0x033D5F64 LDRH W8, [X31]
	0x033D5F68 LDR W13, [X31 + 0x18]
	0x033D5F6C LDRH W11, [X31 + 0xC]
	0x033D5F70 LDRB W12, [X31 + 0xE]
	0x033D5F74 LDR V0, [X31 + 0x10]
	0x033D5F78 CMP W9, 0x0
	0x033D5F7C STRH W8, [X19]
	0x033D5F80 CSET W8, NE
	0x033D5F84 CMP W13, 0x0
	0x033D5F88 CSET W9, NE
	0x033D5F8C STRB W31, [X19 + 0x3]
	0x033D5F90 STURH W31, [X19 + 0x15]
	0x033D5F94 STR W10, [X19 + 0x4]
	0x033D5F98 STRH W11, [X19 + 0x8]
	0x033D5F9C STRH W12, [X19 + 0xA]
	0x033D5FA0 STUR D0, [X19 + 0xC]
	0x033D5FA4 STRB W8, [X19 + 0x2]
	0x033D5FA8 CMP W20, 0x0
	0x033D5FAC STRB W9, [X19 + 0x14]
	0x033D5FB0 STRB W31, [X19 + 0x17]
	0x033D5FB4 LDP X20, X19, [X31 + 0x50]
	0x033D5FB8 LDP X22, X21, [X31 + 0x40]
	0x033D5FBC LDP X30, X23, [X31 + 0x30]
	0x033D5FC0 CSET W0, NE
	0x033D5FC4 ADD X31, X31, 0x60
	0x033D5FC8 RET
	0x033D5FCC AND W8, W0, 0xFFFF
	0x033D5FD0 CMP W8, 0x14
	0x033D5FD4 B.EQ 0x33D5FF8
	0x033D5FD8 SXTH W8, W0
	0x033D5FDC SUB W9, W8, 0x10
	0x033D5FE0 CMP W9, 0x3
	0x033D5FE4 B.CC 0x33D5FF8
	0x033D5FE8 AND W8, W8, 0xFFFFFFFE
	0x033D5FEC CMP W8, 0x90
	0x033D5FF0 CSET W0, EQ
	0x033D5FF4 RET
	0x033D5FF8 MOVZ W0, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x1009000
	006 Move W8, [X19+736]
	007 Move X20, X1
	008 Move X21, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xD58000
	014 Move X0, [X0+3448]
	015 Call 0x1C17CF4
	016 Move X0, 0xD58000
	017 Move X0, [X0+3456]
	018 Call 0x1C17CF4
	019 Move X0, 0xD58000
	020 Move X0, [X0+3464]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X19+736], W8
	024 Move X8, [X21+16]
	025 Compare X8, 0
	026 JumpIfEqual {33}
	027 Move X19, [X21+32]
	028 Compare X19, 0
	029 JumpIfEqual {37}
	030 Move X0, X20
	031 Move X1, X31
	032 Call TypeIdentifiers.FromDisplay, X0
	033 Move X0, X20
	034 Move X1, X31
	035 Call TypeIdentifiers.FromDisplay, X0
	036 Move [X21+16], X0
	037 Move X8, 0xD58000
	038 Move X8, [X8+3464]
	039 Move X0, [X8]
	040 Call 0x1C17F10
	041 Move X8, 0xD58000
	042 Move X8, [X8+3456]
	043 Move X19, X0
	044 Move X1, [X8]
	045 Call List`1<Object>..ctor, X0
	046 Move X0, X20
	047 Move X1, X31
	048 Move [X21+32], X19
	049 Call TypeIdentifiers.FromDisplay, X0
	050 Compare X19, 0
	051 JumpIfEqual {84}
	052 Move X9, 0xD58000
	053 Move X9, [X9+3448]
	054 Move W10, [X19+28]
	055 Move X8, [X19+16]
	056 Move X1, X0
	057 Move X9, [X9]
	058 Add W10, W10, 1
	059 Move [X19+28], W10
	060 Compare X8, 0
	061 JumpIfEqual {84}
	062 NotImplemented "Instruction LDRSW not yet implemented."
	063 Move W11, [X8+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Add W9, W10, 1
	066 Add X8, X8, X10
	067 Move [X19+24], W9
	068 Move [X8+32], X1
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Return 
	074 Move X8, [X9+32]
	075 Move X0, X19
	076 Move X20, [X31+16]
	077 Move X19, [X31+24]
	078 Move X8, [X8+192]
	079 Move X2, [X8+112]
	080 Move X30, [X31+32]
	081 Move X21, [X31+40]
	082 Call List`1<Object>.AddWithResize, X0, X1
	083 Return 
	084 Call 0x1C17F20

Method: System.Void AddModifier(System.ModifierSpec md)

Disassembly:
	0x033D6004 LDRH W1, [X0 + 0x20]
	0x033D6008 MOV X0, X8
	0x033D600C B 0x33D5CFC
	0x033D6010 STP X30, X19, [X31 - 0x10]!
	0x033D6014 MOV X1, X31
	0x033D6018 BL 0x33BDD8C
	0x033D601C ADRP X0, 0xD1D000
	0x033D6020 LDR X0, [X0 + 0xB40]
	0x033D6024 BL 0x1C16D08
	0x033D6028 BL 0x1C16F10
	0x033D602C MOV X1, X31
	0x033D6030 MOV X19, X0
	0x033D6034 BL 0x3380310
	0x033D6038 ADRP X0, 0xD56000
	0x033D603C LDR X0, [X0 + 0xDE0]
	0x033D6040 BL 0x1C16D08
	0x033D6044 MOV X1, X0
	0x033D6048 MOV X0, X19
	0x033D604C BL 0x1C16DEC
	0x033D6050 LDR W0, [X0 + 0x4]
	0x033D6054 RET
	0x033D6058 LDR W0, [X0 + 0x8]
	0x033D605C RET
	0x033D6060 LDR W0, [X0 + 0xC]
	0x033D6064 RET
	0x033D6068 LDR W8, [X0]
	0x033D606C UBFM W0, W8, 0x1F, 0x1F
	0x033D6070 RET
	0x033D6074 LDRB W0, [X0 + 0x2]
	0x033D6078 RET
	0x033D607C STR X30, [X31 - 0x20]!
	0x033D6080 STP X20, X19, [X31 + 0x10]
	0x033D6084 ADRP X20, 0x1007000
	0x033D6088 LDRB W8, [X20 + 0x310]
	0x033D608C MOV X19, X0
	0x033D6090 TBNZ X8, 0x0, 0x33D60A8
	0x033D6094 ADRP X0, 0xD45000
	0x033D6098 LDR X0, [X0 + 0x5F0]
	0x033D609C BL 0x1C16CF4
	0x033D60A0 MOVZ W8, 0x1
	0x033D60A4 STRB W8, [X20 + 0x310]
	0x033D60A8 LDR X0, [X19 + 0x8]
	0x033D60AC LDP X20, X19, [X31 + 0x10]
	0x033D60B0 LDR X30, [X31], #0x20
	0x033D60B4 RET
	0x033D60B8 RET
	0x033D60BC STP X30, X21, [X31 - 0x20]!
	0x033D60C0 STP X20, X19, [X31 + 0x10]
	0x033D60C4 ADRP X21, 0x1007000
	0x033D60C8 ADRP X20, 0xD45000
	0x033D60CC LDRB W8, [X21 + 0x311]
	0x033D60D0 LDR X20, [X20 + 0x5F0]
	0x033D60D4 MOV X19, X0
	0x033D60D8 TBNZ X8, 0x0, 0x33D60FC
	0x033D60DC ADRP X0, 0xD56000
	0x033D60E0 LDR X0, [X0 + 0xDE8]
	0x033D60E4 BL 0x1C16CF4
	0x033D60E8 ADRP X0, 0xD45000
	0x033D60EC LDR X0, [X0 + 0x5F0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1008000
	006 Move W8, [X20+737]
	007 Move X19, X1
	008 Move X21, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xD57000
	014 Move X0, [X0+3472]
	015 Call 0x1C17CF4
	016 Move X0, 0xD57000
	017 Move X0, [X0+3480]
	018 Call 0x1C17CF4
	019 Move X0, 0xD57000
	020 Move X0, [X0+3488]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+737], W8
	024 Move X20, [X21+48]
	025 Compare X20, 0
	026 JumpIfNotEqual {39}
	027 Move X8, 0xD57000
	028 Move X8, [X8+3488]
	029 Move X0, [X8]
	030 Call 0x1C17F10
	031 Move X8, 0xD57000
	032 Move X8, [X8+3480]
	033 Move X20, X0
	034 Move X1, [X8]
	035 Call List`1<Object>..ctor, X0
	036 Move [X21+48], X20
	037 Compare X20, 0
	038 JumpIfEqual {71}
	039 Move X9, 0xD57000
	040 Move X9, [X9+3472]
	041 Move W10, [X20+28]
	042 Move X8, [X20+16]
	043 Move X9, [X9]
	044 Add W10, W10, 1
	045 Move [X20+28], W10
	046 Compare X8, 0
	047 JumpIfEqual {71}
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Move W11, [X8+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add W9, W10, 1
	052 Add X8, X8, X10
	053 Move [X20+24], W9
	054 Move [X8+32], X19
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Return 
	060 Move X8, [X9+32]
	061 Move X0, X20
	062 Move X1, X19
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X8, [X8+192]
	066 Move X2, [X8+112]
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Call List`1<Object>.AddWithResize, X0, X1
	070 Return 
	071 Call 0x1C17F20

Method: System.Void SkipSpace(System.String name, ref System.Int32 pos)

Disassembly:
	0x033D60F0 BL 0x1C16CF4
	0x033D60F4 MOVZ W8, 0x1
	0x033D60F8 STRB W8, [X21 + 0x311]
	0x033D60FC LDR X0, [X20]
	0x033D6100 ADRP X20, 0xD56000
	0x033D6104 LDR W8, [X0 + 0xE0]
	0x033D6108 LDR X20, [X20 + 0xDE8]
	0x033D610C CBNZ W8, 0x33D6114
	0x033D6110 BL 0x1C16DFC
	0x033D6114 LDR X0, [X20]
	0x033D6118 LDR W8, [X0 + 0xE0]
	0x033D611C CBNZ W8, 0x33D6124
	0x033D6120 BL 0x1C16DFC
	0x033D6124 LDP W11, W8, [X19 + 0x8]
	0x033D6128 LDR W9, [X19 + 0x4]
	0x033D612C MOVZ X10, 0x5A53
	0x033D6130 MOVK X10, 0xA09B0000
	0x033D6134 MOV X13, X8
	0x033D6138 MOVK X10, 0xB82F
	0x033D613C BFM X13, X9, 0x20, 0x1F
	0x033D6140 MOVK X10, 0x440000
	0x033D6144 UBFM X9, X13, 0x9, 0x3F
	0x033D6148 MOVZ W12, 0x3600
	0x00000000 INVALID
	0x033D6150 MOVK W12, 0xC4650000
	0x033D6154 UBFM X13, X9, 0xB, 0x3F
	0x033D6158 STR W13, [X19 + 0xC]
	0x033D615C MADD W8, W13, W12, W8
	0x033D6160 MOV X13, X11
	0x033D6164 BFM X13, X8, 0x20, 0x1F
	0x033D6168 UBFM X8, X9, 0x2B, 0x3F
	0x033D616C UBFM X9, X13, 0x9, 0x3F
	0x00000000 INVALID
	0x033D6174 UBFM X9, X9, 0xB, 0x3F
	0x033D6178 STP W8, W9, [X19 + 0x4]
	0x033D617C LDP X20, X19, [X31 + 0x10]
	0x033D6180 MADD W0, W9, W12, W11
	0x033D6184 LDP X30, X21, [X31], #0x20
	0x033D6188 RET
	0x033D618C LDP W11, W8, [X0 + 0x8]
	0x033D6190 LDR W9, [X0 + 0x4]
	0x033D6194 MOVZ X10, 0x5A53
	0x033D6198 MOVK X10, 0xA09B0000
	0x033D619C MOV X13, X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1008000
	008 Move W8, [X21+738]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD20000
	016 Move X0, [X0+368]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+738], W8
	020 Compare X20, 0
	021 JumpIfEqual {56}
	022 Move W21, [X19]
	023 Move W8, [X20+16]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X23, 0xD20000
	026 Move X23, [X23+368]
	027 Move X0, X20
	028 Move W1, W21
	029 Move X2, X31
	030 Call String.get_Chars, X0, X1
	031 Move X8, [X23]
	032 Move W22, W0
	033 Move W9, [X8+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move W0, W22
	039 Move X1, X31
	040 Call Char.IsWhiteSpace, X0
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {48}
	045 Move W8, [X20+16]
	046 Add W21, W21, 1
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move [X19], W21
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Move X23, [X31+56]
	055 Return 
	056 Call 0x1C17F20

Method: System.Void BoundCheck(System.Int32 idx, System.String s)

Disassembly:
	0x033D61A0 MOVK X10, 0xB82F
	0x033D61A4 BFM X13, X9, 0x20, 0x1F
	0x033D61A8 MOVK X10, 0x440000
	0x033D61AC UBFM X9, X13, 0x9, 0x3F
	0x033D61B0 MOVZ W12, 0x3600
	0x00000000 INVALID
	0x033D61B8 MOVK W12, 0xC4650000
	0x033D61BC UBFM X13, X9, 0xB, 0x3F
	0x033D61C0 STR W13, [X0 + 0xC]
	0x033D61C4 MADD W8, W13, W12, W8
	0x033D61C8 MOV X13, X11
	0x033D61CC BFM X13, X8, 0x20, 0x1F
	0x033D61D0 UBFM X8, X13, 0x9, 0x3F
	0x00000000 INVALID
	0x033D61D8 UBFM X10, X8, 0xB, 0x3F
	0x033D61DC UBFM X9, X9, 0x2B, 0x3F
	0x033D61E0 MADD W8, W10, W12, W11
	0x033D61E4 STP W9, W10, [X0 + 0x4]
	0x033D61E8 MOV W0, W8
	0x033D61EC RET
	0x033D61F0 TBNZ X1, 0x1F, 0x33D61FC
	0x033D61F4 STR W31, [X0]
	0x033D61F8 B 0x33D6208
	0x033D61FC MOVZ W8, 0x80000000
	0x033D6200 SUB W1, W31, W1
	0x033D6204 STR W8, [X0]
	0x033D6208 STP W1, W31, [X0 + 0x8]
	0x033D620C STR W31, [X0 + 0x4]
	0x033D6210 RET
	0x033D6214 STP W1, W31, [X0 + 0x8]
	0x033D6218 STR X31, [X0]
	0x033D621C RET
	0x033D6220 TBNZ X1, 0x0, 0x33D622C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {12}
	006 Move W8, [X1+16]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X20, [X31+16]
	009 Move X19, [X31+24]
	010 Move X30, [X31+32]
	011 Return 
	012 Call 0x1C17F20
	013 Move X0, 0xD26000
	014 Move X0, [X0+1400]
	015 Call 0x1C17D08
	016 Call 0x1C17F10
	017 Move X19, X0
	018 Move X0, 0xD57000
	019 Move X0, [X0+3496]
	020 Call 0x1C17D08
	021 Move X20, X0
	022 Move X0, 0xD50000
	023 Move X0, [X0+2416]
	024 Call 0x1C17D08
	025 Move X2, X0
	026 Move X0, X19
	027 Move X1, X20
	028 Move X3, X31
	029 Call ArgumentException..ctor, X0, X1, X2
	030 Move X0, 0xD57000
	031 Move X0, [X0+3504]
	032 Call 0x1C17D08
	033 Move X1, X0
	034 Move X0, X19
	035 Call 0x1C17DEC

Method: System.TypeIdentifier ParsedTypeIdentifier(System.String displayName)

Disassembly:
	0x033D5FFC RET
	0x033D6000 LDR X8, [X0 + 0x18]

ISIL:
	001 Move X1, X31
	002 Call TypeIdentifiers.FromDisplay, X0
	003 Return X0

Method: System.TypeSpec Parse(System.String name, ref System.Int32 p, System.Boolean is_recurse, System.Boolean allow_aqn)

Disassembly:
	0x033D4970 MOV X19, X0
	0x033D4974 ADRP X0, 0xD51000
	0x033D4978 LDR X0, [X0 + 0x4B8]
	0x033D497C BL 0x1C16D08
	0x033D4980 BL 0x1C16F10
	0x033D4984 MOV X1, X19
	0x033D4988 MOV X2, X31
	0x033D498C MOV X20, X0
	0x033D4990 BL 0x33BE6D8
	0x033D4994 ADRP X0, 0xD58000
	0x033D4998 LDR X0, [X0 + 0xD70]
	0x033D499C BL 0x1C16D08
	0x033D49A0 MOV X1, X0
	0x033D49A4 MOV X0, X20
	0x033D49A8 BL 0x1C16DEC
	0x033D49AC LDR X0, [X19 + 0x20]
	0x033D49B0 CBZ X0, 0x33D4AC0
	0x033D49B4 ADRP X8, 0xD58000
	0x033D49B8 LDR X8, [X8 + 0xC50]
	0x033D49BC LDR X1, [X8]
	0x033D49C0 ADD X8, X31, 0x8
	0x033D49C4 BL 0x301CB58
	0x033D49C8 LDUR V0, [X31 + 0x8]
	0x033D49CC LDR X8, [X31 + 0x18]
	0x033D49D0 ADRP X20, 0xD58000
	0x033D49D4 STR V0, [X31 + 0x4]
	0x033D49D8 STR X8, [X31 + 0x50]
	0x033D49DC LDR X20, [X20 + 0xC40]
	0x033D49E0 LDR X1, [X20]
	0x033D49E4 MOV X25, X27
	0x033D49E8 ADD X0, X31, 0x40
	0x033D49EC BL 0x2BC4350
	0x033D49F0 TBZ X0, 0x0, 0x33D4AC8
	0x033D49F4 LDR X26, [X31 + 0x50]
	0x033D49F8 CBZ X26, 0x33D4D00
	0x033D49FC LDR X8, [X26]
	0x033D4A00 LDR X1, [X28]
	0x033D4A04 LDRH W9, [X8 + 0x12E]
	0x033D4A08 CBZ X9, 0x33D4A2C
	0x033D4A0C LDR X10, [X8 + 0xB0]
	0x033D4A10 ADD X10, X10, 0x8
	0x033D4A14 LDUR X11, [X10 - 0x8]
	0x033D4A18 CMP X11, X1
	0x033D4A1C B.EQ 0x33D4A3C
	0x033D4A20 SUBS X9, X9, 0x1
	0x033D4A24 ADD X10, X10, 0x10
	0x033D4A28 B.NE 0x33D4A14
	0x033D4A2C MOV X0, X26
	0x033D4A30 MOV W2, W31
	0x033D4A34 BL 0x1C5C788
	0x033D4A38 B 0x33D4A48
	0x033D4A3C LDRSW X9, [X10]
	0x033D4A40 ADD X8, X8, X9, 0x4, LSL
	0x033D4A44 ADD X0, X8, 0x138
	0x033D4A48 LDP X8, X1, [X0]
	0x033D4A4C MOV X0, X26
	0x033D4A50 BLR X8
	0x033D4A54 MOV X1, X0
	0x033D4A58 CBZ X25, 0x33D4D04
	0x033D4A5C LDR X8, [X25]
	0x033D4A60 LDR X9, [X8 + 0x768]
	0x033D4A64 LDR X3, [X8 + 0x770]
	0x033D4A68 MOVZ W2, 0x30
	0x033D4A6C MOV X0, X25
	0x033D4A70 BLR X9
	0x033D4A74 ADRP X8, 0xD1F000
	0x033D4A78 LDR X8, [X8 + 0x6C0]
	0x033D4A7C MOV X27, X0
	0x033D4A80 LDR X0, [X8]
	0x033D4A84 LDR W8, [X0 + 0xE0]
	0x033D4A88 CBNZ W8, 0x33D4A90
	0x033D4A8C BL 0x1C16DFC
	0x033D4A90 MOV X0, X27
	0x033D4A94 MOV X1, X31
	0x033D4A98 MOV X2, X31
	0x033D4A9C BL 0x3395194
	0x033D4AA0 TBZ X0, 0x0, 0x33D49E0
	0x033D4AA4 TBNZ X21, 0x0, 0x33D4D18
	0x033D4AA8 ADRP X8, 0xD58000
	0x033D4AAC LDR X8, [X8 + 0xC38]
	0x033D4AB0 ADD X0, X31, 0x40
	0x033D4AB4 LDR X1, [X8]
	0x033D4AB8 BL 0x2BC434C
	0x033D4ABC B 0x33D4CD4
	0x033D4AC0 MOV X25, X27
	0x033D4AC4 B 0x33D4ADC
	0x033D4AC8 ADRP X8, 0xD58000
	0x033D4ACC LDR X8, [X8 + 0xC38]
	0x033D4AD0 ADD X0, X31, 0x40
	0x033D4AD4 LDR X1, [X8]
	0x033D4AD8 BL 0x2BC434C
	0x033D4ADC LDR X8, [X19 + 0x28]
	0x033D4AE0 CBZ X8, 0x33D4BD4
	0x033D4AE4 LDR W1, [X8 + 0x18]
	0x033D4AE8 ADRP X8, 0xD27000
	0x033D4AEC LDR X8, [X8 + 0xC60]
	0x033D4AF0 LDR X0, [X8]
	0x033D4AF4 BL 0x1C16D6C
	0x033D4AF8 CBZ X0, 0x33D4DC0
	0x033D4AFC LDR W8, [X0 + 0x18]
	0x033D4B00 MOV X26, X0
	0x033D4B04 CMP W8, 0x1
	0x033D4B08 B.LT 0x33D4BB4
	0x033D4B0C MOV X27, X31
	0x033D4B10 ADD X20, X26, 0x20
	0x033D4B14 LDR X0, [X19 + 0x28]
	0x033D4B18 CBZ X0, 0x33D4DC0
	0x033D4B1C ADRP X8, 0xD58000
	0x033D4B20 LDR X8, [X8 + 0xC60]
	0x033D4B24 MOV W1, W27
	0x033D4B28 LDR X2, [X8]
	0x033D4B2C BL 0x301BCCC
	0x033D4B30 CBZ X0, 0x33D4DC0
	0x033D4B34 AND W3, W21, 0x1
	0x033D4B38 AND W4, W22, 0x1
	0x033D4B3C MOV X1, X24
	0x033D4B40 MOV X2, X23
	0x033D4B44 MOV X5, X29
	0x033D4B48 BL 0x33D4604
	0x033D4B4C ADRP X8, 0xD1F000
	0x033D4B50 LDR X8, [X8 + 0x6C0]
	0x033D4B54 MOV X28, X0
	0x033D4B58 LDR X8, [X8]
	0x033D4B5C LDR W9, [X8 + 0xE0]
	0x033D4B60 CBNZ W9, 0x33D4B6C
	0x033D4B64 MOV X0, X8
	0x033D4B68 BL 0x1C16DFC
	0x033D4B6C MOV X0, X28
	0x033D4B70 MOV X1, X31
	0x033D4B74 MOV X2, X31
	0x033D4B78 BL 0x3395194
	0x033D4B7C TBNZ X0, 0x0, 0x33D4CD0
	0x033D4B80 CBZ X28, 0x33D4B98
	0x033D4B84 LDR X8, [X26]
	0x033D4B88 MOV X0, X28
	0x033D4B8C LDR X1, [X8 + 0x40]
	0x033D4B90 BL 0x1C16E00
	0x033D4B94 CBZ X0, 0x33D4D0C
	0x033D4B98 LDR W8, [X26 + 0x18]
	0x033D4B9C CMP X27, X8
	0x033D4BA0 B.CS 0x33D4D08
	0x033D4BA4 STR X28, [X20, X27, LSL #3]
	0x033D4BA8 ADD X27, X27, 0x1
	0x033D4BAC CMP X27, W8, SXTW
	0x033D4BB0 B.LT 0x33D4B14
	0x033D4BB4 CBZ X25, 0x33D4DC0
	0x033D4BB8 LDR X8, [X25]
	0x033D4BBC MOV X0, X25
	0x033D4BC0 MOV X1, X26
	0x033D4BC4 LDR X9, [X8 + 0x8D8]
	0x033D4BC8 LDR X2, [X8 + 0x8E0]
	0x033D4BCC BLR X9
	0x033D4BD0 MOV X25, X0
	0x033D4BD4 LDR X0, [X19 + 0x30]
	0x033D4BD8 CBZ X0, 0x33D4CA8
	0x033D4BDC ADRP X8, 0xD58000
	0x033D4BE0 LDR X8, [X8 + 0xC80]
	0x033D4BE4 LDR X1, [X8]
	0x033D4BE8 ADD X8, X31, 0x8
	0x033D4BEC BL 0x301CB58
	0x033D4BF0 LDUR V0, [X31 + 0x8]
	0x033D4BF4 LDR X8, [X31 + 0x18]
	0x033D4BF8 ADRP X22, 0xD58000
	0x033D4BFC LDR X22, [X22 + 0xC70]
	0x033D4C00 STR V0, [X31 + 0x2]
	0x033D4C04 STR X8, [X31 + 0x30]
	0x033D4C08 ADRP X23, 0xD58000
	0x033D4C0C LDR X23, [X23 + 0xC88]
	0x033D4C10 LDR X1, [X22]
	0x033D4C14 MOV X20, X25
	0x033D4C18 ADD X0, X31, 0x20
	0x033D4C1C BL 0x2BC4350
	0x033D4C20 TBZ X0, 0x0, 0x33D4C90
	0x033D4C24 LDR X21, [X31 + 0x30]
	0x033D4C28 CBZ X21, 0x33D4CFC
	0x033D4C2C LDR X8, [X21]
	0x033D4C30 LDR X1, [X23]
	0x033D4C34 LDRH W9, [X8 + 0x12E]
	0x033D4C38 CBZ X9, 0x33D4C5C
	0x033D4C3C LDR X10, [X8 + 0xB0]
	0x033D4C40 ADD X10, X10, 0x8
	0x033D4C44 LDUR X11, [X10 - 0x8]
	0x033D4C48 CMP X11, X1
	0x033D4C4C B.EQ 0x33D4C6C
	0x033D4C50 SUBS X9, X9, 0x1
	0x033D4C54 ADD X10, X10, 0x10
	0x033D4C58 B.NE 0x33D4C44
	0x033D4C5C MOV X0, X21
	0x033D4C60 MOV W2, W31
	0x033D4C64 BL 0x1C5C788
	0x033D4C68 B 0x33D4C78
	0x033D4C6C LDRSW X9, [X10]
	0x033D4C70 ADD X8, X8, X9, 0x4, LSL
	0x033D4C74 ADD X0, X8, 0x138
	0x033D4C78 LDP X8, X2, [X0]
	0x033D4C7C MOV X0, X21
	0x033D4C80 MOV X1, X20
	0x033D4C84 BLR X8
	0x033D4C88 MOV X25, X0
	0x033D4C8C B 0x33D4C10
	0x033D4C90 ADRP X8, 0xD58000
	0x033D4C94 LDR X8, [X8 + 0xC68]
	0x033D4C98 ADD X0, X31, 0x20
	0x033D4C9C LDR X1, [X8]
	0x033D4CA0 BL 0x2BC434C
	0x033D4CA4 B 0x33D4CAC
	0x033D4CA8 MOV X20, X25
	0x033D4CAC LDRB W8, [X19 + 0x38]
	0x033D4CB0 CBZ W8, 0x33D4CD8
	0x033D4CB4 CBZ X20, 0x33D4DC0
	0x033D4CB8 LDR X8, [X20]
	0x033D4CBC MOV X0, X20
	0x033D4CC0 LDR X9, [X8 + 0x8C8]
	0x033D4CC4 LDR X1, [X8 + 0x8D0]
	0x033D4CC8 BLR X9
	0x033D4CCC B 0x33D4774
	0x033D4CD0 TBNZ X21, 0x0, 0x33D4D98
	0x033D4CD4 MOV X20, X31
	0x033D4CD8 MOV X0, X20
	0x033D4CDC LDP X20, X19, [X31 + 0xB0]
	0x033D4CE0 LDP X22, X21, [X31 + 0xA0]
	0x033D4CE4 LDP X24, X23, [X31 + 0x90]
	0x033D4CE8 LDP X26, X25, [X31 + 0x80]
	0x033D4CEC LDP X28, X27, [X31 + 0x70]
	0x033D4CF0 LDP X29, X30, [X31 + 0x60]
	0x033D4CF4 ADD X31, X31, 0xC0
	0x033D4CF8 RET
	0x033D4CFC BL 0x1C16F20
	0x033D4D00 BL 0x1C16F20
	0x033D4D04 BL 0x1C16F20
	0x033D4D08 BL 0x1C16F28
	0x033D4D0C BL 0x1C16F44
	0x033D4D10 MOV X1, X31
	0x033D4D14 BL 0x1C16DEC
	0x033D4D18 ADRP X0, 0xD58000
	0x033D4D1C LDR X0, [X0 + 0xD68]
	0x033D4D20 BL 0x1C16D08
	0x033D4D24 LDR X8, [X26]
	0x033D4D28 MOV X27, X0
	0x033D4D2C LDP X9, X1, [X8 + 0x168]
	0x033D4D30 MOV X0, X26
	0x033D4D34 BLR X9
	0x033D4D38 MOV X26, X0
	0x033D4D3C ADRP X0, 0xD27000
	0x033D4D40 LDR X0, [X0 + 0x9B0]
	0x033D4D44 BL 0x1C16D08
	0x033D4D48 MOV X2, X0
	0x033D4D4C MOV X0, X27
	0x033D4D50 MOV X1, X26
	0x033D4D54 MOV X3, X31
	0x033D4D58 BL 0x32274B8
	0x033D4D5C MOV X26, X0
	0x033D4D60 ADRP X0, 0xD51000
	0x033D4D64 LDR X0, [X0 + 0x4B8]
	0x033D4D68 BL 0x1C16D08
	0x033D4D6C BL 0x1C16F10
	0x033D4D70 MOV X27, X0
	0x033D4D74 MOV X1, X26
	0x033D4D78 MOV X2, X31
	0x033D4D7C BL 0x33BE6D8
	0x033D4D80 ADRP X0, 0xD58000
	0x033D4D84 LDR X0, [X0 + 0xD70]
	0x033D4D88 BL 0x1C16D08
	0x033D4D8C MOV X1, X0
	0x033D4D90 MOV X0, X27
	0x033D4D94 BL 0x1C16DEC
	0x033D4D98 LDR X19, [X19 + 0x28]
	0x033D4D9C CBZ X19, 0x33D4DC0
	0x033D4DA0 ADRP X0, 0xD58000
	0x033D4DA4 LDR X0, [X0 + 0xC60]
	0x033D4DA8 BL 0x1C16D08
	0x033D4DAC MOV X2, X0
	0x033D4DB0 MOV X0, X19
	0x033D4DB4 MOV W1, W27
	0x033D4DB8 BL 0x301BCCC
	0x033D4DBC CBNZ X0, 0x33D4DC4
	0x033D4DC0 BL 0x1C16F20
	0x033D4DC4 LDR X20, [X0 + 0x10]
	0x033D4DC8 B 0x33D4928
	0x033D4DCC B 0x33D4DFC
	0x033D4DD0 B 0x33D4DFC
	0x033D4DD4 B 0x33D4DFC
	0x033D4DD8 B 0x33D4DFC
	0x033D4DDC B 0x33D4DFC
	0x033D4DE0 B 0x33D4DFC
	0x033D4DE4 B 0x33D4DFC
	0x033D4DE8 B 0x33D4DFC
	0x033D4DEC B 0x33D4DFC
	0x033D4DF0 B 0x33D4DFC
	0x033D4DF4 B 0x33D4E64
	0x033D4DF8 B 0x33D4E64
	0x033D4DFC MOV X26, X0
	0x033D4E00 CMP W1, 0x1
	0x033D4E04 B.NE 0x33D4E38
	0x033D4E08 MOV X0, X26
	0x033D4E0C BL 0x3EB1AD0
	0x033D4E10 LDR X27, [X0]
	0x033D4E14 BL 0x3EB1AE0
	0x033D4E18 ADRP X8, 0xD58000
	0x033D4E1C LDR X8, [X8 + 0xC38]
	0x033D4E20 ADD X0, X31, 0x40
	0x033D4E24 LDR X1, [X8]
	0x033D4E28 BL 0x2BC434C
	0x033D4E2C CBZ X27, 0x33D4ADC
	0x033D4E30 MOV X0, X27
	0x033D4E34 BL 0x1C16F18
	0x033D4E38 MOV X27, X31
	0x033D4E3C B 0x33D4E44
	0x033D4E40 MOV X26, X0
	0x033D4E44 ADRP X8, 0xD58000
	0x033D4E48 LDR X8, [X8 + 0xC38]
	0x033D4E4C LDR X1, [X8]
	0x033D4E50 ADD X0, X31, 0x40
	0x033D4E54 BL 0x2BC434C
	0x033D4E58 CBZ X27, 0x33D4EC4
	0x033D4E5C MOV X0, X27
	0x033D4E60 BL 0x1C16F18
	0x033D4E64 MOV X26, X0
	0x033D4E68 CMP W1, 0x1
	0x033D4E6C B.NE 0x33D4EA0
	0x033D4E70 MOV X0, X26
	0x033D4E74 BL 0x3EB1AD0
	0x033D4E78 LDR X21, [X0]
	0x033D4E7C BL 0x3EB1AE0
	0x033D4E80 ADRP X8, 0xD58000
	0x033D4E84 LDR X8, [X8 + 0xC68]
	0x033D4E88 ADD X0, X31, 0x20
	0x033D4E8C LDR X1, [X8]
	0x033D4E90 BL 0x2BC434C
	0x033D4E94 CBZ X21, 0x33D4CAC
	0x033D4E98 MOV X0, X21
	0x033D4E9C BL 0x1C16F18
	0x033D4EA0 MOV X21, X31
	0x033D4EA4 B 0x33D4EAC
	0x033D4EA8 MOV X26, X0
	0x033D4EAC ADRP X8, 0xD58000
	0x033D4EB0 LDR X8, [X8 + 0xC68]
	0x033D4EB4 LDR X1, [X8]
	0x033D4EB8 ADD X0, X31, 0x20
	0x033D4EBC BL 0x2BC434C
	0x033D4EC0 CBNZ X21, 0x33D4ECC
	0x033D4EC4 MOV X0, X26
	0x033D4EC8 BL 0x1D2C690
	0x033D4ECC MOV X0, X21
	0x033D4ED0 BL 0x1C16F18
	0x033D4ED4 BL 0x1990590
	0x033D4ED8 STP X30, X21, [X31 - 0x20]!
	0x033D4EDC STP X20, X19, [X31 + 0x10]
	0x033D4EE0 ADRP X19, 0x1009000
	0x033D4EE4 LDRB W8, [X19 + 0x2E0]
	0x033D4EE8 MOV X20, X1
	0x033D4EEC MOV X21, X0
	0x033D4EF0 TBNZ X8, 0x0, 0x33D4F20
	0x033D4EF4 ADRP X0, 0xD58000
	0x033D4EF8 LDR X0, [X0 + 0xD78]
	0x033D4EFC BL 0x1C16CF4
	0x033D4F00 ADRP X0, 0xD58000
	0x033D4F04 LDR X0, [X0 + 0xD80]
	0x033D4F08 BL 0x1C16CF4
	0x033D4F0C ADRP X0, 0xD58000
	0x033D4F10 LDR X0, [X0 + 0xD88]
	0x033D4F14 BL 0x1C16CF4
	0x033D4F18 MOVZ W8, 0x1
	0x033D4F1C STRB W8, [X19 + 0x2E0]
	0x033D4F20 LDR X8, [X21 + 0x10]
	0x033D4F24 CBZ X8, 0x33D4F40
	0x033D4F28 LDR X19, [X21 + 0x20]
	0x033D4F2C CBZ X19, 0x33D4F54
	0x033D4F30 MOV X0, X20
	0x033D4F34 MOV X1, X31
	0x033D4F38 BL 0x33D2EDC
	0x033D4F3C B 0x33D4F8C
	0x033D4F40 MOV X0, X20
	0x033D4F44 MOV X1, X31
	0x033D4F48 BL 0x33D2EDC
	0x033D4F4C STR X0, [X21 + 0x10]
	0x033D4F50 B 0x33D4FD0
	0x033D4F54 ADRP X8, 0xD58000
	0x033D4F58 LDR X8, [X8 + 0xD88]
	0x033D4F5C LDR X0, [X8]
	0x033D4F60 BL 0x1C16F10
	0x033D4F64 ADRP X8, 0xD58000
	0x033D4F68 LDR X8, [X8 + 0xD80]
	0x033D4F6C MOV X19, X0
	0x033D4F70 LDR X1, [X8]
	0x033D4F74 BL 0x301B7C4
	0x033D4F78 MOV X0, X20
	0x033D4F7C MOV X1, X31
	0x033D4F80 STR X19, [X21 + 0x20]
	0x033D4F84 BL 0x33D2EDC
	0x033D4F88 CBZ X19, 0x33D4FF8
	0x033D4F8C ADRP X9, 0xD58000
	0x033D4F90 LDR X9, [X9 + 0xD78]
	0x033D4F94 LDR W10, [X19 + 0x1C]
	0x033D4F98 LDR X8, [X19 + 0x10]
	0x033D4F9C MOV X1, X0
	0x033D4FA0 LDR X9, [X9]
	0x033D4FA4 ADD W10, W10, 0x1
	0x033D4FA8 STR W10, [X19 + 0x1C]
	0x033D4FAC CBZ X8, 0x33D4FF8
	0x033D4FB0 LDRSW X10, [X19 + 0x18]
	0x033D4FB4 LDR W11, [X8 + 0x18]
	0x033D4FB8 CMP W10, W11
	0x033D4FBC B.CS 0x33D4FDC
	0x033D4FC0 ADD W9, W10, 0x1
	0x033D4FC4 ADD X8, X8, X10, 0x3, LSL
	0x033D4FC8 STR W9, [X19 + 0x18]
	0x033D4FCC STR X1, [X8 + 0x20]
	0x033D4FD0 LDP X20, X19, [X31 + 0x10]
	0x033D4FD4 LDP X30, X21, [X31], #0x20
	0x033D4FD8 RET
	0x033D4FDC LDR X8, [X9 + 0x20]
	0x033D4FE0 MOV X0, X19
	0x033D4FE4 LDP X20, X19, [X31 + 0x10]
	0x033D4FE8 LDR X8, [X8 + 0xC0]
	0x033D4FEC LDR X2, [X8 + 0x70]
	0x033D4FF0 LDP X30, X21, [X31], #0x20
	0x033D4FF4 B 0x301BF90
	0x033D4FF8 BL 0x1C16F20
	0x033D4FFC MOV X1, X31
	0x033D5000 B 0x33D2EDC
	0x033D5004 STP X30, X21, [X31 - 0x20]!
	0x033D5008 STP X20, X19, [X31 + 0x10]
	0x033D500C ADRP X20, 0x1008000
	0x033D5010 LDRB W8, [X20 + 0x2E1]
	0x033D5014 MOV X19, X1
	0x033D5018 MOV X21, X0
	0x033D501C TBNZ X8, 0x0, 0x33D504C
	0x033D5020 ADRP X0, 0xD57000
	0x033D5024 LDR X0, [X0 + 0xD90]
	0x033D5028 BL 0x1C16CF4
	0x033D502C ADRP X0, 0xD57000
	0x033D5030 LDR X0, [X0 + 0xD98]
	0x033D5034 BL 0x1C16CF4
	0x033D5038 ADRP X0, 0xD57000
	0x033D503C LDR X0, [X0 + 0xDA0]
	0x033D5040 BL 0x1C16CF4
	0x033D5044 MOVZ W8, 0x1
	0x033D5048 STRB W8, [X20 + 0x2E1]
	0x033D504C LDR X20, [X21 + 0x30]
	0x033D5050 CBNZ X20, 0x33D5080
	0x033D5054 ADRP X8, 0xD57000
	0x033D5058 LDR X8, [X8 + 0xDA0]
	0x033D505C LDR X0, [X8]
	0x033D5060 BL 0x1C16F10
	0x033D5064 ADRP X8, 0xD57000
	0x033D5068 LDR X8, [X8 + 0xD98]
	0x033D506C MOV X20, X0
	0x033D5070 LDR X1, [X8]
	0x033D5074 BL 0x301B7C4
	0x033D5078 STR X20, [X21 + 0x30]
	0x033D507C CBZ X20, 0x33D50EC
	0x033D5080 ADRP X9, 0xD57000
	0x033D5084 LDR X9, [X9 + 0xD90]
	0x033D5088 LDR W10, [X20 + 0x1C]
	0x033D508C LDR X8, [X20 + 0x10]
	0x033D5090 LDR X9, [X9]
	0x033D5094 ADD W10, W10, 0x1
	0x033D5098 STR W10, [X20 + 0x1C]
	0x033D509C CBZ X8, 0x33D50EC
	0x033D50A0 LDRSW X10, [X20 + 0x18]
	0x033D50A4 LDR W11, [X8 + 0x18]
	0x033D50A8 CMP W10, W11
	0x033D50AC B.CS 0x33D50CC
	0x033D50B0 ADD W9, W10, 0x1
	0x033D50B4 ADD X8, X8, X10, 0x3, LSL
	0x033D50B8 STR W9, [X20 + 0x18]
	0x033D50BC STR X19, [X8 + 0x20]
	0x033D50C0 LDP X20, X19, [X31 + 0x10]
	0x033D50C4 LDP X30, X21, [X31], #0x20
	0x033D50C8 RET
	0x033D50CC LDR X8, [X9 + 0x20]
	0x033D50D0 MOV X0, X20
	0x033D50D4 MOV X1, X19
	0x033D50D8 LDP X20, X19, [X31 + 0x10]
	0x033D50DC LDR X8, [X8 + 0xC0]
	0x033D50E0 LDR X2, [X8 + 0x70]
	0x033D50E4 LDP X30, X21, [X31], #0x20
	0x033D50E8 B 0x301BF90
	0x033D50EC BL 0x1C16F20
	0x033D50F0 STP X30, X23, [X31 - 0x30]!
	0x033D50F4 STP X22, X21, [X31 + 0x10]
	0x033D50F8 STP X20, X19, [X31 + 0x20]
	0x033D50FC ADRP X21, 0x1008000
	0x033D5100 LDRB W8, [X21 + 0x2E2]
	0x033D5104 MOV X19, X1
	0x033D5108 MOV X20, X0
	0x033D510C TBNZ X8, 0x0, 0x33D5124
	0x033D5110 ADRP X0, 0xD20000
	0x033D5114 LDR X0, [X0 + 0x170]
	0x033D5118 BL 0x1C16CF4
	0x033D511C MOVZ W8, 0x1
	0x033D5120 STRB W8, [X21 + 0x2E2]
	0x033D5124 CBZ X20, 0x33D519C
	0x033D5128 LDR W21, [X19]
	0x033D512C LDR W8, [X20 + 0x10]
	0x033D5130 CMP W21, W8
	0x033D5134 B.GE 0x33D5188
	0x033D5138 ADRP X23, 0xD20000
	0x033D513C LDR X23, [X23 + 0x170]
	0x033D5140 MOV X0, X20
	0x033D5144 MOV W1, W21
	0x033D5148 MOV X2, X31
	0x033D514C BL 0x3222A1C
	0x033D5150 LDR X8, [X23]
	0x033D5154 MOV W22, W0
	0x033D5158 LDR W9, [X8 + 0xE0]
	0x033D515C CBNZ W9, 0x33D5168
	0x033D5160 MOV X0, X8
	0x033D5164 BL 0x1C16DFC
	0x033D5168 MOV W0, W22
	0x033D516C MOV X1, X31
	0x033D5170 BL 0x3317FCC
	0x033D5174 TBZ X0, 0x0, 0x33D5188
	0x033D5178 LDR W8, [X20 + 0x10]
	0x033D517C ADD W21, W21, 0x1
	0x033D5180 CMP W21, W8
	0x033D5184 B.LT 0x33D5140
	0x033D5188 STR W21, [X19]
	0x033D518C LDP X20, X19, [X31 + 0x20]
	0x033D5190 LDP X22, X21, [X31 + 0x10]
	0x033D5194 LDP X30, X23, [X31], #0x30
	0x033D5198 RET
	0x033D519C BL 0x1C16F20
	0x033D51A0 STR X30, [X31 - 0x20]!
	0x033D51A4 STP X20, X19, [X31 + 0x10]
	0x033D51A8 CBZ X1, 0x33D51C4
	0x033D51AC LDR W8, [X1 + 0x10]
	0x033D51B0 CMP W8, W0
	0x033D51B4 B.LE 0x33D51C8
	0x033D51B8 LDP X20, X19, [X31 + 0x10]
	0x033D51BC LDR X30, [X31], #0x20
	0x033D51C0 RET
	0x033D51C4 BL 0x1C16F20
	0x033D51C8 ADRP X0, 0xD26000
	0x033D51CC LDR X0, [X0 + 0x578]
	0x033D51D0 BL 0x1C16D08
	0x033D51D4 BL 0x1C16F10
	0x033D51D8 MOV X19, X0
	0x033D51DC ADRP X0, 0xD57000
	0x033D51E0 LDR X0, [X0 + 0xDA8]
	0x033D51E4 BL 0x1C16D08
	0x033D51E8 MOV X20, X0
	0x033D51EC ADRP X0, 0xD50000
	0x033D51F0 LDR X0, [X0 + 0x970]
	0x033D51F4 BL 0x1C16D08
	0x033D51F8 MOV X2, X0
	0x033D51FC MOV X0, X19
	0x033D5200 MOV X1, X20
	0x033D5204 MOV X3, X31
	0x033D5208 BL 0x330E16C
	0x033D520C ADRP X0, 0xD57000
	0x033D5210 LDR X0, [X0 + 0xDB0]
	0x033D5214 BL 0x1C16D08
	0x033D5218 MOV X1, X0
	0x033D521C MOV X0, X19
	0x033D5220 BL 0x1C16DEC
	0x033D5224 MOV X1, X31
	0x033D5228 B 0x33BDD8C
	0x033D522C STR X1, [X0]
	0x033D5230 RET
	0x033D5234 MOVZ W0, 0x8
	0x033D5238 RET
	0x033D523C MOV W8, W1
	0x033D5240 STR X8, [X0]
	0x033D5244 RET
	0x033D5248 STR X1, [X0]
	0x033D524C RET
	0x033D5250 STP X30, X21, [X31 - 0x20]!
	0x033D5254 STP X20, X19, [X31 + 0x10]
	0x033D5258 ADRP X21, 0x1008000
	0x033D525C LDRB W8, [X21 + 0x2E4]
	0x033D5260 MOV X20, X1
	0x033D5264 MOV X19, X0
	0x033D5268 TBNZ X8, 0x0, 0x33D5280
	0x033D526C ADRP X0, 0xD47000
	0x033D5270 LDR X0, [X0 + 0xF30]
	0x033D5274 BL 0x1C16CF4
	0x033D5278 MOVZ W8, 0x1
	0x033D527C STRB W8, [X21 + 0x2E4]
	0x033D5280 CBZ X20, 0x33D529C
	0x033D5284 ADRP X8, 0xD47000
	0x033D5288 LDR X8, [X8 + 0xF30]
	0x033D528C LDR X9, [X20]
	0x033D5290 LDR X8, [X8]
	0x033D5294 CMP X9, X8
	0x033D5298 B.EQ 0x33D52A4
	0x033D529C MOV W0, W31
	0x033D52A0 B 0x33D52BC
	0x033D52A4 MOV X0, X20
	0x033D52A8 BL 0x1C16E08
	0x033D52AC LDR X8, [X0]
	0x033D52B0 LDR X9, [X19]
	0x033D52B4 CMP X9, X8
	0x033D52B8 CSET W0, EQ
	0x033D52BC LDP X20, X19, [X31 + 0x10]
	0x033D52C0 LDP X30, X21, [X31], #0x20
	0x033D52C4 RET
	0x033D52C8 LDR W0, [X0]
	0x033D52CC RET
	0x033D52D0 STR X30, [X31 - 0x10]!
	0x033D52D4 LDR X8, [X0]
	0x033D52D8 ADD X0, X31, 0x8
	0x033D52DC MOV X1, X31
	0x033D52E0 STR X8, [X31 + 0x8]
	0x033D52E4 BL 0x339A968
	0x033D52E8 LDR X30, [X31], #0x10
	0x033D52EC RET
	0x033D52F0 STP X30, X21, [X31 - 0x20]!
	0x033D52F4 STP X20, X19, [X31 + 0x10]
	0x033D52F8 ADRP X21, 0x1008000
	0x033D52FC LDRB W8, [X21 + 0x2E5]
	0x033D5300 MOV X19, X1
	0x033D5304 MOV X20, X0
	0x033D5308 TBNZ X8, 0x0, 0x33D5320
	0x033D530C ADRP X0, 0xD51000
	0x033D5310 LDR X0, [X0 + 0xDA0]
	0x033D5314 BL 0x1C16CF4
	0x033D5318 MOVZ W8, 0x1
	0x033D531C STRB W8, [X21 + 0x2E5]
	0x033D5320 CBZ X19, 0x33D5348
	0x033D5324 ADRP X8, 0xD51000
	0x033D5328 LDR X8, [X8 + 0xDA0]
	0x033D532C LDR X2, [X20]
	0x033D5330 MOV X0, X19
	0x033D5334 LDP X20, X19, [X31 + 0x10]
	0x033D5338 LDR X1, [X8]
	0x033D533C MOV X3, X31
	0x033D5340 LDP X30, X21, [X31], #0x20
	0x033D5344 B 0x32A90D0
	0x033D5348 ADRP X0, 0xD23000
	0x033D534C LDR X0, [X0 + 0x528]
	0x033D5350 BL 0x1C16D08
	0x033D5354 BL 0x1C16F10
	0x033D5358 MOV X19, X0
	0x033D535C ADRP X0, 0xD48000
	0x033D5360 LDR X0, [X0 + 0x2D8]
	0x033D5364 BL 0x1C16D08
	0x033D5368 MOV X1, X0
	0x033D536C MOV X0, X19
	0x033D5370 MOV X2, X31
	0x033D5374 BL 0x330E100
	0x033D5378 ADRP X0, 0xD57000
	0x033D537C LDR X0, [X0 + 0xDB8]
	0x033D5380 BL 0x1C16D08
	0x033D5384 MOV X1, X0
	0x033D5388 MOV X0, X19
	0x033D538C BL 0x1C16DEC
	0x033D5390 CMP X0, X1
	0x033D5394 CSET W0, EQ
	0x033D5398 RET
	0x033D539C CMP X0, X1
	0x033D53A0 CSET W0, NE
	0x033D53A4 RET
	0x033D53A8 RET
	0x033D53AC RET
	0x033D53B0 RET
	0x033D53B4 MOV W0, W0
	0x033D53B8 RET
	0x033D53BC LDR X8, [X0]
	0x033D53C0 CMP X8, X1
	0x033D53C4 CSET W0, EQ
	0x033D53C8 RET
	0x033D53CC STR X30, [X31 - 0x20]!
	0x033D53D0 STP X20, X19, [X31 + 0x10]
	0x033D53D4 ADRP X19, 0x1008000
	0x033D53D8 ADRP X20, 0xD47000
	0x033D53DC LDRB W8, [X19 + 0x2E6]
	0x033D53E0 LDR X20, [X20 + 0xF30]
	0x033D53E4 TBNZ X8, 0x0, 0x33D53FC
	0x033D53E8 ADRP X0, 0xD47000
	0x033D53EC LDR X0, [X0 + 0xF30]
	0x033D53F0 BL 0x1C16CF4
	0x033D53F4 MOVZ W8, 0x1
	0x033D53F8 STRB W8, [X19 + 0x2E6]
	0x033D53FC LDR X8, [X20]
	0x033D5400 LDP X20, X19, [X31 + 0x10]
	0x033D5404 LDR X8, [X8 + 0xB8]
	0x033D5408 STR X31, [X8]
	0x033D540C LDR X30, [X31], #0x20
	0x033D5410 RET
	0x033D5414 MOV X1, X31
	0x033D5418 B 0x33BDD8C
	0x033D541C B 0x1C8833C
	0x033D5420 SUB X31, X31, 0x40
	0x033D5424 STP X30, X23, [X31 + 0x10]
	0x033D5428 STP X22, X21, [X31 + 0x20]
	0x033D542C STP X20, X19, [X31 + 0x30]
	0x033D5430 ADRP X21, 0x1008000
	0x033D5434 LDRB W8, [X21 + 0x2E7]
	0x033D5438 MOV X19, X1
	0x033D543C MOV X20, X0
	0x033D5440 TBNZ X8, 0x0, 0x33D5458
	0x033D5444 ADRP X0, 0xD47000
	0x033D5448 LDR X0, [X0 + 0x4E8]
	0x033D544C BL 0x1C16CF4
	0x033D5450 MOVZ W8, 0x1
	0x033D5454 STRB W8, [X21 + 0x2E7]
	0x033D5458 ORR X8, X20, X19, 0x0
	0x033D545C CMP X8, 0x0
	0x033D5460 CSET W0, EQ
	0x033D5464 STR X31, [X31 + 0x8]
	0x033D5468 CBZ X20, 0x33D55A4
	0x033D546C CBZ X19, 0x33D55A4
	0x033D5470 MOV X0, X20
	0x033D5474 MOV X1, X31
	0x033D5478 BL 0x33BE520
	0x033D547C MOV X21, X0
	0x033D5480 MOV X0, X19
	0x033D5484 MOV X1, X31
	0x033D5488 BL 0x33BE520
	0x033D548C ADRP X23, 0xD47000
	0x033D5490 LDR X23, [X23 + 0x4E8]
	0x033D5494 MOV X22, X0
	0x033D5498 LDR X1, [X23]
	0x033D549C CBZ X0, 0x33D54C8
	0x033D54A0 LDR X8, [X22]
	0x033D54A4 LDRB W9, [X1 + 0x130]
	0x033D54A8 LDRB W10, [X8 + 0x130]
	0x033D54AC CMP W10, W9
	0x033D54B0 B.CC 0x33D55C0
	0x033D54B4 LDR X8, [X8 + 0xC8]
	0x033D54B8 ADD X8, X8, X9, 0x3, LSL
	0x033D54BC LDUR X8, [X8 - 0x8]
	0x033D54C0 CMP X8, X1
	0x033D54C4 B.NE 0x33D55C0
	0x033D54C8 LDR W8, [X1 + 0xE0]
	0x033D54CC CBZ W8, 0x33D54D8
	0x033D54D0 CBNZ X21, 0x33D54E8
	0x033D54D4 B 0x33D5510
	0x033D54D8 MOV X0, X1
	0x033D54DC BL 0x1C16DFC
	0x033D54E0 LDR X1, [X23]
	0x033D54E4 CBZ X21, 0x33D5510
	0x033D54E8 LDR X8, [X21]
	0x033D54EC LDRB W9, [X1 + 0x130]
	0x033D54F0 LDRB W10, [X8 + 0x130]
	0x033D54F4 CMP W10, W9
	0x033D54F8 B.CC 0x33D55C8
	0x033D54FC LDR X8, [X8 + 0xC8]
	0x033D5500 ADD X8, X8, X9, 0x3, LSL
	0x033D5504 LDUR X8, [X8 - 0x8]
	0x033D5508 CMP X8, X1
	0x033D550C B.NE 0x33D55C8

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X24, 0x100A000
	015 Move X21, 0xD59000
	016 Move W8, [X24+739]
	017 Move X21, [X21+3232]
	018 Move W23, W3
	019 Move W22, W2
	020 Move X19, X1
	021 Move X20, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {49}
	026 Move X0, 0xD59000
	027 Move X0, [X0+3240]
	028 Call 0x1C17CF4
	029 Move X0, 0xD59000
	030 Move X0, [X0+3248]
	031 Call 0x1C17CF4
	032 Move X0, 0xD59000
	033 Move X0, [X0+3256]
	034 Call 0x1C17CF4
	035 Move X0, 0xD59000
	036 Move X0, [X0+3264]
	037 Call 0x1C17CF4
	038 Move X0, 0xD59000
	039 Move X0, [X0+3272]
	040 Call 0x1C17CF4
	041 Move X0, 0xD22000
	042 Move X0, [X0+632]
	043 Call 0x1C17CF4
	044 Move X0, 0xD59000
	045 Move X0, [X0+3232]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X24+739], W8
	049 NotImplemented "Instruction STRH not yet implemented."
	050 Move W8, [X19]
	051 Move X0, [X21]
	052 Move [X31+12], W8
	053 Call 0x1C17F10
	054 Move X1, X31
	055 Move X21, X0
	056 Call Object..ctor, X0
	057 Add X1, X31, 12
	058 Move X0, X20
	059 Call TypeSpec.SkipSpace, X0, X1
	060 Compare X20, 0
	061 JumpIfEqual {523}
	062 Move W24, [X31+12]
	063 Move W8, [X20+16]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X26, -42192896
	066 Add X26, X26, 2588
	067 Move W25, W24
	068 Move X0, X20
	069 Move W1, W24
	070 Move X2, X31
	071 Call String.get_Chars, X0, X1
	072 And W8, W0, 0xFFFF
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract W8, W8, 38
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction ADR not yet implemented."
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Add X9, X9, X10
	079 CallNoReturn X9
	080 Subtract W2, W24, W25
	081 Move X0, X20
	082 Move W1, W25
	083 Move X3, X31
	084 Call String.Substring, X0, X1, X2
	085 Compare X21, 0
	086 JumpIfEqual {523}
	087 Move X1, X0
	088 Move X0, X21
	089 Call TypeSpec.AddName, X0, X1
	090 Add W25, W24, 1
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Add W24, W24, 1
	093 NotImplemented "Instruction CMP not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Add W24, W24, 1
	096 Move [X31+12], W24
	097 Move W8, [X20+16]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move W26, W31
	100 Move W26, W31
	101 Move W25, W24
	102 Move X0, X20
	103 Move W1, W24
	104 Move X2, X31
	105 Call String.get_Chars, X0, X1
	106 And W8, W0, 0xFFFF
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move TEMP, X22
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {687}
	112 Subtract W2, W24, W25
	113 Move X0, X20
	114 Move W1, W25
	115 Move X3, X31
	116 Call String.Substring, X0, X1, X2
	117 Compare X21, 0
	118 JumpIfEqual {523}
	119 Move X1, X0
	120 Move X0, X21
	121 Call TypeSpec.AddName, X0, X1
	122 Add W25, W24, 1
	123 Move W26, 1
	124 Subtract W2, W24, W25
	125 Move X0, X20
	126 Move W1, W25
	127 Move X3, X31
	128 Call String.Substring, X0, X1, X2
	129 Compare X21, 0
	130 JumpIfEqual {523}
	131 Move X1, X0
	132 Compare X21, 0
	133 JumpIfEqual {523}
	134 Move X8, 0xD22000
	135 Move X8, [X8+632]
	136 Move X8, [X8]
	137 Move X8, [X8+184]
	138 Move X1, [X8]
	139 Move X0, X21
	140 Call TypeSpec.AddName, X0, X1
	141 Compare W26, 0
	142 JumpIfEqual {507}
	143 Move W8, [X20+16]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X28, 0xD59000
	146 Move X28, [X28+3248]
	147 And W27, W22, W23
	148 Move X0, X20
	149 Move W1, W24
	150 Move X2, X31
	151 Call String.get_Chars, X0, X1
	152 And W8, W0, 0xFFFF
	153 NotImplemented "Instruction CMP not yet implemented."
	154 NotImplemented "Instruction CMP not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Compare X21, 0
	157 JumpIfEqual {523}
	158 Move W8, [X21+56]
	159 Compare W8, 0
	160 JumpIfNotEqual {587}
	161 Move W8, [X20+16]
	162 Add W9, W24, 1
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move W26, W31
	165 Add W29, W24, W26
	166 Add W25, W29, 1
	167 Move X0, X20
	168 Move W1, W25
	169 Move X2, X31
	170 Call String.get_Chars, X0, X1
	171 And W8, W0, 0xFFFF
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move [X31+12], W25
	174 Move W9, [X20+16]
	175 Add W26, W26, 1
	176 Add W8, W24, W26
	177 Add W10, W8, 1
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Add W26, W26, 1
	180 Move W24, W8
	181 NotImplemented "Instruction CMP not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Compare X21, 0
	184 JumpIfEqual {523}
	185 Move W8, [X21+56]
	186 Compare W8, 0
	187 JumpIfNotEqual {601}
	188 Add W8, W24, 1
	189 Move [X31+12], W8
	190 Move W9, [X20+16]
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Add X1, X31, 12
	193 Move X0, X20
	194 Call TypeSpec.SkipSpace, X0, X1
	195 Move W24, [X31+12]
	196 Move X0, X20
	197 Move X2, X31
	198 Move W1, W24
	199 Call String.get_Chars, X0, X1
	200 And W8, W0, 0xFFFF
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move X0, X20
	203 Move W1, W24
	204 Move X2, X31
	205 Call String.get_Chars, X0, X1
	206 And W8, W0, 0xFFFF
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Move X0, X20
	209 Move W1, W24
	210 Move X2, X31
	211 Call String.get_Chars, X0, X1
	212 And W8, W0, 0xFFFF
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move W8, [X20+16]
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move W29, W31
	217 Move W25, 1
	218 Move X0, X20
	219 Move W1, W24
	220 Move X2, X31
	221 Call String.get_Chars, X0, X1
	222 And W8, W0, 0xFFFF
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move X0, X20
	225 Move W1, W24
	226 Move X2, X31
	227 Call String.get_Chars, X0, X1
	228 And W8, W0, 0xFFFF
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move TEMP, X29
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfEqual {524}
	234 Move W29, 1
	235 Move X0, X20
	236 Move W1, W24
	237 Move X2, X31
	238 Call String.get_Chars, X0, X1
	239 And W8, W0, 0xFFFF
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Add W25, W25, 1
	242 Add W8, W24, 1
	243 Add X1, X31, 12
	244 Move X0, X20
	245 Move [X31+12], W8
	246 Call TypeSpec.SkipSpace, X0, X1
	247 Move W24, [X31+12]
	248 Move W8, [X20+16]
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Compare X21, 0
	251 JumpIfEqual {523}
	252 Move W8, [X21+56]
	253 Compare W8, 0
	254 JumpIfNotEqual {594}
	255 Move W8, 1
	256 Move [X21+56], W8
	257 Move TEMP, X27
	258 And TEMP, TEMP, 1
	259 Compare TEMP, 1
	260 JumpIfEqual {478}
	261 Move TEMP, X22
	262 And TEMP, TEMP, 1
	263 Compare TEMP, 1
	264 JumpIfEqual {507}
	265 Move TEMP, X23
	266 And TEMP, TEMP, 1
	267 Compare TEMP, 1
	268 JumpIfNotEqual {323}
	269 Add W1, W24, 1
	270 Move X0, X20
	271 Move X2, X31
	272 Call String.Substring, X0, X1
	273 Compare X0, 0
	274 JumpIfEqual {523}
	275 Move X1, X31
	276 Call String.Trim, X0
	277 Compare X21, 0
	278 JumpIfEqual {523}
	279 Move [X21+24], X0
	280 Move W24, [X20+16]
	281 Move W26, 1
	282 Move W29, W31
	283 Move W25, 1
	284 Add W26, W26, 1
	285 Move W24, W29
	286 Move X8, 0xD59000
	287 Move X8, [X8+3272]
	288 Move X0, [X8]
	289 Call 0x1C17F10
	290 Move X1, X31
	291 Move X25, X0
	292 Call Object..ctor, X0
	293 Move X0, X21
	294 Move X1, X25
	295 Move [X25+16], W26
	296 Move W8, [X20+16]
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Move X0, X20
	299 Move W1, W24
	300 Move X2, X31
	301 Call String.get_Chars, X0, X1
	302 And W8, W0, 0xFFFF
	303 NotImplemented "Instruction CMP not yet implemented."
	304 NotImplemented "Instruction CMP not yet implemented."
	305 NotImplemented "Instruction CSET not yet implemented."
	306 NotImplemented "Instruction ORN not yet implemented."
	307 Move TEMP, X8
	308 And TEMP, TEMP, 1
	309 Compare TEMP, 1
	310 JumpIfNotEqual {632}
	311 Move X8, 0xD59000
	312 Move X8, [X8+3240]
	313 Move X0, [X8]
	314 Call 0x1C17F10
	315 And W2, W29, 1
	316 Move W1, W25
	317 Move X3, X31
	318 Move X26, X0
	319 Call ArraySpec..ctor, X0, X1, X2
	320 Move X0, X21
	321 Move X1, X26
	322 Call TypeSpec.AddModifier, X0, X1
	323 Add W24, W24, 1
	324 Move [X31+12], W24
	325 Move W8, [X20+16]
	326 NotImplemented "Instruction CMP not yet implemented."
	327 Move X8, 0xD59000
	328 Move X8, [X8+3264]
	329 Move X0, [X8]
	330 Call 0x1C17F10
	331 Move X8, 0xD59000
	332 Move X8, [X8+3256]
	333 Move X25, X0
	334 Move X1, [X8]
	335 Call List`1<Object>..ctor, X0
	336 Move X8, [X21+48]
	337 Compare X8, 0
	338 JumpIfNotEqual {694}
	339 Move W8, [X20+16]
	340 NotImplemented "Instruction CMP not yet implemented."
	341 Add X1, X31, 12
	342 Move X0, X20
	343 Call TypeSpec.SkipSpace, X0, X1
	344 Move W24, [X31+12]
	345 Move X0, X20
	346 Move X2, X31
	347 Move W1, W24
	348 Call String.get_Chars, X0, X1
	349 And W8, W0, 0xFFFF
	350 NotImplemented "Instruction CMP not yet implemented."
	351 Add W8, W24, 1
	352 Add X1, X31, 12
	353 Move W2, 1
	354 Move W3, 1
	355 Move X0, X20
	356 Move [X31+12], W8
	357 Call TypeSpec.Parse, X0, X1, X2, X3
	358 Compare X25, 0
	359 JumpIfEqual {523}
	360 Move W10, [X25+28]
	361 Move X8, [X25+16]
	362 Move X9, [X28]
	363 Add W10, W10, 1
	364 Move [X25+28], W10
	365 Compare X8, 0
	366 JumpIfEqual {523}
	367 NotImplemented "Instruction LDRSW not yet implemented."
	368 Move W11, [X8+24]
	369 Move X1, X0
	370 NotImplemented "Instruction CMP not yet implemented."
	371 Add W9, W10, 1
	372 Add X8, X8, X10
	373 Move [X25+24], W9
	374 Move [X8+32], X1
	375 Add X1, X31, 12
	376 Move W2, 1
	377 Move X0, X20
	378 Move W3, W31
	379 Call TypeSpec.Parse, X0, X1, X2, X3
	380 Compare X25, 0
	381 JumpIfEqual {523}
	382 Move W10, [X25+28]
	383 Move X8, [X25+16]
	384 Move X9, [X28]
	385 Add W10, W10, 1
	386 Move [X25+28], W10
	387 Compare X8, 0
	388 JumpIfEqual {523}
	389 NotImplemented "Instruction LDRSW not yet implemented."
	390 Move W11, [X8+24]
	391 Move X1, X0
	392 NotImplemented "Instruction CMP not yet implemented."
	393 Add W9, W10, 1
	394 Add X8, X8, X10
	395 Move [X25+24], W9
	396 Move [X8+32], X1
	397 Move X8, [X9+32]
	398 Move X0, X25
	399 Move X8, [X8+192]
	400 Move X2, [X8+112]
	401 Call List`1<Object>.AddWithResize, X0, X1
	402 Move W24, [X31+12]
	403 Move X1, X20
	404 Move W0, W24
	405 Call TypeSpec.BoundCheck, X0, X1
	406 Move X0, X20
	407 Move W1, W24
	408 Move X2, X31
	409 Call String.get_Chars, X0, X1
	410 And W8, W0, 0xFFFF
	411 NotImplemented "Instruction CMP not yet implemented."
	412 Add W24, W24, 1
	413 Move [X31+12], W24
	414 Move X8, [X9+32]
	415 Move X0, X25
	416 Move X8, [X8+192]
	417 Move X2, [X8+112]
	418 Call List`1<Object>.AddWithResize, X0, X1
	419 Move W24, [X31+12]
	420 Move W0, W24
	421 Move X1, X20
	422 Call TypeSpec.BoundCheck, X0, X1
	423 Move X0, X20
	424 Move W1, W24
	425 Move X2, X31
	426 Call String.get_Chars, X0, X1
	427 And W8, W0, 0xFFFF
	428 NotImplemented "Instruction CMP not yet implemented."
	429 Move X0, X20
	430 Move W1, W24
	431 Move X2, X31
	432 Call String.get_Chars, X0, X1
	433 And W8, W0, 0xFFFF
	434 NotImplemented "Instruction CMP not yet implemented."
	435 Add W24, W24, 1
	436 Move [X31+12], W24
	437 Move W8, [X20+16]
	438 NotImplemented "Instruction CMP not yet implemented."
	439 Move X0, X20
	440 Move W1, W24
	441 Move X2, X31
	442 Call String.get_Chars, X0, X1
	443 And W8, W0, 0xFFFF
	444 NotImplemented "Instruction CMP not yet implemented."
	445 Move [X21+40], X25
	446 Subtract W2, W24, W25
	447 Move X0, X20
	448 Move W1, W25
	449 Move X3, X31
	450 Call String.Substring, X0, X1, X2
	451 Compare X21, 0
	452 JumpIfEqual {523}
	453 Move X1, X0
	454 Move X0, X21
	455 Call TypeSpec.AddName, X0, X1
	456 Add W25, W24, 1
	457 Move W26, 1
	458 Move TEMP, X22
	459 And TEMP, TEMP, 1
	460 Compare TEMP, 1
	461 JumpIfNotEqual {124}
	462 Move TEMP, X23
	463 And TEMP, TEMP, 1
	464 Compare TEMP, 1
	465 JumpIfNotEqual {507}
	466 NotImplemented "Instruction CMP not yet implemented."
	467 Move TEMP, X22
	468 And TEMP, TEMP, 1
	469 Compare TEMP, 1
	470 JumpIfEqual {507}
	471 Move X0, 0xD27000
	472 Move X0, [X0+1400]
	473 Call 0x1C17D08
	474 Call 0x1C17F10
	475 Move X19, X0
	476 Move X0, 0xD58000
	477 Move X0, [X0+3280]
	478 Move W8, [X20+16]
	479 Move W22, W24
	480 NotImplemented "Instruction CMP not yet implemented."
	481 Move W22, W24
	482 Move X0, X20
	483 Move W1, W22
	484 Move X2, X31
	485 Call String.get_Chars, X0, X1
	486 And W8, W0, 0xFFFF
	487 NotImplemented "Instruction CMP not yet implemented."
	488 Move W8, [X20+16]
	489 Add W22, W22, 1
	490 NotImplemented "Instruction CMP not yet implemented."
	491 Move W8, [X20+16]
	492 NotImplemented "Instruction CMP not yet implemented."
	493 NotImplemented "Instruction ORN not yet implemented."
	494 Add W1, W24, 1
	495 Add W2, W22, W8
	496 Move X0, X20
	497 Move X3, X31
	498 Call String.Substring, X0, X1, X2
	499 Compare X0, 0
	500 JumpIfEqual {523}
	501 Move X1, X31
	502 Call String.Trim, X0
	503 Compare X21, 0
	504 JumpIfEqual {523}
	505 Move [X21+24], X0
	506 Move W24, W22
	507 Move [X19], W24
	508 Move X0, X21
	509 Move X20, [X31+96]
	510 Move X19, [X31+104]
	511 Move X22, [X31+80]
	512 Move X21, [X31+88]
	513 Move X24, [X31+64]
	514 Move X23, [X31+72]
	515 Move X26, [X31+48]
	516 Move X25, [X31+56]
	517 Move X28, [X31+32]
	518 Move X27, [X31+40]
	519 Move X29, [X31+16]
	520 Move X30, [X31+24]
	521 Add X31, X31, 112
	522 Return X0
	523 Call 0x1C17F20
	524 Move X0, 0xD27000
	525 Move X0, [X0+1400]
	526 Call 0x1C17D08
	527 Call 0x1C17F10
	528 Move X19, X0
	529 Move X0, 0xD58000
	530 Move X0, [X0+3288]
	531 Move X0, X20
	532 Call 0x19913C0
	533 Move X0, X20
	534 Move W1, W24
	535 Move X2, X31
	536 Call String.get_Chars, X0, X1
	537 NotImplemented "Instruction STRH not yet implemented."
	538 Move X0, 0xD21000
	539 Move X0, [X0+368]
	540 Call 0x1C17D08
	541 Call 0x19913D0
	542 Add X0, X31, 8
	543 Move X1, X31
	544 Call Char.ToString, X0
	545 Move X19, X0
	546 Move X0, 0xD58000
	547 Move X0, [X0+3296]
	548 Move X0, X20
	549 Call 0x19913C0
	550 Move X0, X20
	551 Move W1, W24
	552 Move X2, X31
	553 Call String.get_Chars, X0, X1
	554 NotImplemented "Instruction STRH not yet implemented."
	555 Move X0, 0xD21000
	556 Move X0, [X0+368]
	557 Call 0x1C17D08
	558 Call 0x19913D0
	559 Add X0, X31, 8
	560 Move X1, X31
	561 Call Char.ToString, X0
	562 Move X19, X0
	563 Add X0, X31, 12
	564 Move X1, X31
	565 Call Int32.ToString, X0
	566 Move X20, X0
	567 Move X0, 0xD58000
	568 Move X0, [X0+3304]
	569 Call 0x1C17D08
	570 Move X21, X0
	571 Move X0, 0xD58000
	572 Move X0, [X0+3312]
	573 Call 0x1C17D08
	574 Move X2, X0
	575 Move X0, X21
	576 Move X1, X19
	577 Move X3, X20
	578 Move X4, X31
	579 Call String.Concat, X0, X1, X2, X3
	580 Move X0, 0xD27000
	581 Move X0, [X0+1400]
	582 Call 0x1C17D08
	583 Call 0x1C17F10
	584 Move X19, X0
	585 Move X0, 0xD58000
	586 Move X0, [X0+3320]
	587 Move X0, 0xD27000
	588 Move X0, [X0+1400]
	589 Call 0x1C17D08
	590 Call 0x1C17F10
	591 Move X19, X0
	592 Move X0, 0xD58000
	593 Move X0, [X0+3328]
	594 Move X0, 0xD27000
	595 Move X0, [X0+1400]
	596 Call 0x1C17D08
	597 Call 0x1C17F10
	598 Move X19, X0
	599 Move X0, 0xD58000
	600 Move X0, [X0+3336]
	601 Move X0, 0xD27000
	602 Move X0, [X0+1400]
	603 Call 0x1C17D08
	604 Call 0x1C17F10
	605 Move X19, X0
	606 Move X0, 0xD58000
	607 Move X0, [X0+3344]
	608 Move X0, 0xD27000
	609 Move X0, [X0+1400]
	610 Call 0x1C17D08
	611 Call 0x1C17F10
	612 Move X19, X0
	613 Move X0, 0xD58000
	614 Move X0, [X0+3352]
	615 Move X0, X20
	616 Call 0x19913C0
	617 Move X0, X20
	618 Move W1, W24
	619 Move X2, X31
	620 Call String.get_Chars, X0, X1
	621 NotImplemented "Instruction STRH not yet implemented."
	622 Move X0, 0xD21000
	623 Move X0, [X0+368]
	624 Call 0x1C17D08
	625 Call 0x19913D0
	626 Add X0, X31, 8
	627 Move X1, X31
	628 Call Char.ToString, X0
	629 Move X19, X0
	630 Move X0, 0xD58000
	631 Move X0, [X0+3360]
	632 Move X0, 0xD27000
	633 Move X0, [X0+1400]
	634 Call 0x1C17D08
	635 Call 0x1C17F10
	636 Move X19, X0
	637 Move X0, 0xD58000
	638 Move X0, [X0+3368]
	639 Move X0, X20
	640 Call 0x19913C0
	641 Move X0, X20
	642 Move W1, W24
	643 Move X2, X31
	644 Call String.get_Chars, X0, X1
	645 NotImplemented "Instruction STRH not yet implemented."
	646 Move X0, 0xD21000
	647 Move X0, [X0+368]
	648 Call 0x1C17D08
	649 Call 0x19913D0
	650 Add X0, X31, 8
	651 Move X1, X31
	652 Call Char.ToString, X0
	653 Move X19, X0
	654 Move X0, 0xD58000
	655 Move X0, [X0+3376]
	656 Call 0x1C17D08
	657 Move X1, X19
	658 Move X2, X31
	659 Call String.Concat, X0, X1
	660 Move X19, X0
	661 Move X0, 0xD27000
	662 Move X0, [X0+1400]
	663 Call 0x1C17D08
	664 Call 0x1C17F10
	665 Move X20, X0
	666 Move X0, 0xD51000
	667 Move X0, [X0+2416]
	668 Call 0x1C17D08
	669 Move X2, X0
	670 Move X0, X20
	671 Move X1, X19
	672 Move X3, X31
	673 Call ArgumentException..ctor, X0, X1, X2
	674 Move X0, 0xD58000
	675 Move X0, [X0+3384]
	676 Call 0x1C17D08
	677 Move X1, X0
	678 Move X0, X20
	679 Call 0x1C17DEC
	680 Move X0, 0xD27000
	681 Move X0, [X0+1400]
	682 Call 0x1C17D08
	683 Call 0x1C17F10
	684 Move X19, X0
	685 Move X0, 0xD58000
	686 Move X0, [X0+3392]
	687 Move X0, 0xD27000
	688 Move X0, [X0+1400]
	689 Call 0x1C17D08
	690 Call 0x1C17F10
	691 Move X19, X0
	692 Move X0, 0xD58000
	693 Move X0, [X0+3400]
	694 Move X0, 0xD27000
	695 Move X0, [X0+1400]
	696 Call 0x1C17D08
	697 Call 0x1C17F10
	698 Move X19, X0
	699 Move X0, 0xD58000
	700 Move X0, [X0+3408]
	701 Call 0x1C17D08
	702 Move X20, X0
	703 Move X0, 0xD51000
	704 Move X0, [X0+2416]
	705 Call 0x1C17D08
	706 Move X2, X0
	707 Move X0, X19
	708 Move X1, X20
	709 Move X3, X31
	710 Call ArgumentException..ctor, X0, X1, X2
	711 Move X0, 0xD58000
	712 Move X0, [X0+3384]
	713 Call 0x1C17D08
	714 Move X1, X0
	715 Move X0, X19
	716 Call 0x1C17DEC
	717 Move X0, 0xD27000
	718 Move X0, [X0+1400]
	719 Call 0x1C17D08
	720 Call 0x1C17F10
	721 Move X19, X0
	722 Move X0, 0xD58000
	723 Move X0, [X0+3416]
	724 Call 0x1C17D08
	725 Move X1, X0
	726 Move X0, X19
	727 Move X2, X31
	728 Call ArgumentException..ctor, X0, X1

Method: System.Void .ctor()

Disassembly:
	0x033D6224 STR W31, [X0]
	0x033D6228 B 0x33D6238

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

