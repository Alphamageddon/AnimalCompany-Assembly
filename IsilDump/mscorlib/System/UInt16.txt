Type: System.UInt16

Method: System.Int32 CompareTo(System.Object value)

Disassembly:
	0x03399B8C MOV X4, X31
	0x03399B90 LDR X30, [X31], #0x30
	0x03399B94 B 0x337A230
	0x03399B98 STP X30, X23, [X31 - 0x30]!
	0x03399B9C STP X22, X21, [X31 + 0x10]
	0x03399BA0 STP X20, X19, [X31 + 0x20]
	0x03399BA4 ADRP X23, 0x1044000
	0x03399BA8 ADRP X21, 0xD89000
	0x03399BAC ADRP X22, 0xD8F000
	0x03399BB0 LDRB W8, [X23 + 0xC3]
	0x03399BB4 LDR X21, [X21 + 0x1D8]
	0x03399BB8 LDR X22, [X22 + 0x78]
	0x03399BBC MOV X19, X1
	0x03399BC0 MOV X20, X0
	0x03399BC4 TBNZ X8, 0x0, 0x3399BE8
	0x03399BC8 ADRP X0, 0xD8F000
	0x03399BCC LDR X0, [X0 + 0x78]
	0x03399BD0 BL 0x1C16CF4
	0x03399BD4 ADRP X0, 0xD89000
	0x03399BD8 LDR X0, [X0 + 0x1D8]
	0x03399BDC BL 0x1C16CF4
	0x03399BE0 MOVZ W8, 0x1
	0x03399BE4 STRB W8, [X23 + 0xC3]
	0x03399BE8 LDR X1, [X21]
	0x03399BEC LDR W20, [X20]
	0x03399BF0 MOV X0, X31
	0x03399BF4 BL 0x25BF134
	0x03399BF8 MOV X21, X0
	0x03399BFC LDR X0, [X22]
	0x03399C00 MOV X22, X1
	0x03399C04 LDR W8, [X0 + 0xE0]
	0x03399C08 CBNZ W8, 0x3399C10
	0x03399C0C BL 0x1C16DFC
	0x03399C10 MOV W0, W20
	0x03399C14 MOV X1, X21
	0x03399C18 MOV X2, X22
	0x03399C1C MOV X3, X19
	0x03399C20 LDP X20, X19, [X31 + 0x20]
	0x03399C24 LDP X22, X21, [X31 + 0x10]
	0x03399C28 MOV X4, X31
	0x03399C2C LDP X30, X23, [X31], #0x30
	0x03399C30 B 0x337A230
	0x03399C34 STR X30, [X31 - 0x30]!
	0x03399C38 STP X22, X21, [X31 + 0x10]
	0x03399C3C STP X20, X19, [X31 + 0x20]
	0x03399C40 ADRP X21, 0x1044000
	0x03399C44 LDRB W8, [X21 + 0xC4]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1045000
	006 Move W8, [X21+170]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD60000
	014 Move X0, [X0+1624]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+170], W8
	018 Compare X19, 0
	019 JumpIfEqual {30}
	020 Move X8, 0xD60000
	021 Move X8, [X8+1624]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move X0, X19
	027 Call 0x1C17E08
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 Subtract W0, W20, W8
	030 Move W0, 1
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0
	036 Move X0, 0xD63000
	037 Move X0, [X0+1400]
	038 Call 0x1C17D08
	039 Call 0x1C17F10
	040 Move X19, X0
	041 Move X0, 0xD93000
	042 Move X0, [X0+1400]
	043 Call 0x1C17D08
	044 Move X1, X0
	045 Move X0, X19
	046 Move X2, X31
	047 Call ArgumentException..ctor, X0, X1
	048 Move X0, 0xD93000
	049 Move X0, [X0+1408]
	050 Call 0x1C17D08
	051 Move X1, X0
	052 Move X0, X19
	053 Call 0x1C17DEC

Method: System.Int32 CompareTo(System.UInt16 value)

Disassembly:
	0x03399C48 MOV X20, X1
	0x03399C4C MOV X19, X0
	0x03399C50 TBNZ X8, 0x0, 0x3399C68

ISIL:
	001 NotImplemented "Instruction LDRH not yet implemented."
	002 Subtract W0, W8, W1
	003 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03399C54 ADRP X0, 0xD8F000
	0x03399C58 LDR X0, [X0 + 0x78]
	0x03399C5C BL 0x1C16CF4
	0x03399C60 MOVZ W8, 0x1
	0x03399C64 STRB W8, [X21 + 0xC4]
	0x03399C68 ADRP X21, 0x1040000
	0x03399C6C LDRB W8, [X21 + 0x762]
	0x03399C70 LDR W19, [X19]
	0x03399C74 CBNZ W8, 0x3399C8C
	0x03399C78 ADRP X0, 0xD81000
	0x03399C7C LDR X0, [X0 + 0x290]
	0x03399C80 BL 0x1C16CF4
	0x03399C84 MOVZ W8, 0x1
	0x03399C88 STRB W8, [X21 + 0x762]
	0x03399C8C ADRP X22, 0xD8F000
	0x03399C90 LDR X22, [X22 + 0x78]
	0x03399C94 CBZ X20, 0x3399CB0
	0x03399C98 MOV X0, X20
	0x03399C9C MOV X1, X31
	0x03399CA0 BL 0x3225708
	0x03399CA4 LDR W20, [X20 + 0x10]
	0x03399CA8 MOV X21, X0
	0x03399CAC B 0x3399CB4
	0x03399CB0 MOV X21, X31
	0x03399CB4 LDR X0, [X22]
	0x03399CB8 LDR W8, [X0 + 0xE0]
	0x03399CBC CBNZ W8, 0x3399CC4
	0x03399CC0 BL 0x1C16DFC
	0x03399CC4 MOV W0, W19
	0x03399CC8 MOV X1, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1045000
	006 Move W8, [X21+171]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD60000
	014 Move X0, [X0+1624]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+171], W8
	018 Compare X19, 0
	019 JumpIfEqual {25}
	020 Move X8, 0xD60000
	021 Move X8, [X8+1624]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X0, X19
	028 Call 0x1C17E08
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0

Method: System.Boolean Equals(System.UInt16 obj)

Disassembly:
	0x03399CCC MOV X2, X20
	0x03399CD0 LDP X20, X19, [X31 + 0x20]
	0x03399CD4 LDP X22, X21, [X31 + 0x10]
	0x03399CD8 MOV X3, X31

ISIL:
	001 NotImplemented "Instruction LDRH not yet implemented."
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03399CDC MOV X4, X31
	0x03399CE0 LDR X30, [X31], #0x30

ISIL:
	001 NotImplemented "Instruction LDRH not yet implemented."
	002 Return X0

Method: System.String ToString()

Disassembly:
	0x03399CE4 B 0x337A230
	0x03399CE8 STP X30, X23, [X31 - 0x30]!
	0x03399CEC STP X22, X21, [X31 + 0x10]
	0x03399CF0 STP X20, X19, [X31 + 0x20]
	0x03399CF4 ADRP X22, 0x1044000
	0x03399CF8 LDRB W8, [X22 + 0xC5]
	0x03399CFC MOV X19, X2
	0x03399D00 MOV X21, X1
	0x03399D04 MOV X20, X0
	0x03399D08 TBNZ X8, 0x0, 0x3399D20
	0x03399D0C ADRP X0, 0xD8F000
	0x03399D10 LDR X0, [X0 + 0x78]
	0x03399D14 BL 0x1C16CF4
	0x03399D18 MOVZ W8, 0x1
	0x03399D1C STRB W8, [X22 + 0xC5]
	0x03399D20 ADRP X22, 0x1040000
	0x03399D24 LDRB W8, [X22 + 0x762]
	0x03399D28 LDR W20, [X20]
	0x03399D2C CBNZ W8, 0x3399D44
	0x03399D30 ADRP X0, 0xD81000
	0x03399D34 LDR X0, [X0 + 0x290]
	0x03399D38 BL 0x1C16CF4
	0x03399D3C MOVZ W8, 0x1
	0x03399D40 STRB W8, [X22 + 0x762]
	0x03399D44 ADRP X23, 0xD8F000
	0x03399D48 LDR X23, [X23 + 0x78]
	0x03399D4C CBZ X21, 0x3399D68
	0x03399D50 MOV X0, X21
	0x03399D54 MOV X1, X31
	0x03399D58 BL 0x3225708
	0x03399D5C LDR W21, [X21 + 0x10]
	0x03399D60 MOV X22, X0
	0x03399D64 B 0x3399D6C
	0x03399D68 MOV X22, X31
	0x03399D6C LDR X0, [X23]
	0x03399D70 LDR W8, [X0 + 0xE0]
	0x03399D74 CBNZ W8, 0x3399D7C
	0x03399D78 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1045000
	007 Move X20, 0xD8A000
	008 Move X21, 0xD90000
	009 Move W8, [X22+172]
	010 Move X20, [X20+472]
	011 Move X21, [X21+120]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xD90000
	018 Move X0, [X0+120]
	019 Call 0x1C17CF4
	020 Move X0, 0xD8A000
	021 Move X0, [X0+472]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+172], W8
	025 Move X1, [X20]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X0, X31
	028 Call ReadOnlySpan`1<Char>.op_Implicit, X0
	029 Move X20, X0
	030 Move X0, [X21]
	031 Move X21, X1
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move W0, W19
	037 Move X1, X20
	038 Move X2, X21
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X3, X31
	044 Move X4, X31
	045 Move X30, [X31+48]
	046 Call Number.FormatUInt32, X0, X1, X2
	047 Return X0

Method: System.String ToString(System.IFormatProvider provider)

Disassembly:
	0x03399D7C MOV W0, W20
	0x03399D80 MOV X1, X22
	0x03399D84 MOV X2, X21
	0x03399D88 MOV X3, X19
	0x03399D8C LDP X20, X19, [X31 + 0x20]
	0x03399D90 LDP X22, X21, [X31 + 0x10]
	0x03399D94 MOV X4, X31
	0x03399D98 LDP X30, X23, [X31], #0x30
	0x03399D9C B 0x337A230
	0x03399DA0 STP X30, X27, [X31 - 0x50]!
	0x03399DA4 STP X26, X25, [X31 + 0x10]
	0x03399DA8 STP X24, X23, [X31 + 0x20]
	0x03399DAC STP X22, X21, [X31 + 0x30]
	0x03399DB0 STP X20, X19, [X31 + 0x40]
	0x03399DB4 ADRP X27, 0x1044000
	0x03399DB8 ADRP X26, 0xD8F000
	0x03399DBC LDRB W8, [X27 + 0xC6]
	0x03399DC0 LDR X26, [X26 + 0x78]
	0x03399DC4 MOV X20, X6
	0x03399DC8 MOV X22, X5
	0x03399DCC MOV X24, X4
	0x03399DD0 MOV X19, X3
	0x03399DD4 MOV X21, X2
	0x03399DD8 MOV X23, X1
	0x03399DDC MOV X25, X0
	0x03399DE0 TBNZ X8, 0x0, 0x3399DF8
	0x03399DE4 ADRP X0, 0xD8F000
	0x03399DE8 LDR X0, [X0 + 0x78]
	0x03399DEC BL 0x1C16CF4
	0x03399DF0 MOVZ W8, 0x1
	0x03399DF4 STRB W8, [X27 + 0xC6]
	0x03399DF8 LDR X0, [X26]
	0x03399DFC LDR W25, [X25]
	0x03399E00 LDR W8, [X0 + 0xE0]
	0x03399E04 CBNZ W8, 0x3399E0C
	0x03399E08 BL 0x1C16DFC
	0x03399E0C MOV W0, W25
	0x03399E10 MOV X1, X24
	0x03399E14 MOV X2, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1045000
	008 Move X21, 0xD8A000
	009 Move X22, 0xD90000
	010 Move W8, [X23+173]
	011 Move X21, [X21+472]
	012 Move X22, [X22+120]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xD90000
	020 Move X0, [X0+120]
	021 Call 0x1C17CF4
	022 Move X0, 0xD8A000
	023 Move X0, [X0+472]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+173], W8
	027 Move X1, [X21]
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 Move X0, X31
	030 Call ReadOnlySpan`1<Char>.op_Implicit, X0
	031 Move X21, X0
	032 Move X0, [X22]
	033 Move X22, X1
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move W0, W20
	039 Move X1, X21
	040 Move X2, X22
	041 Move X3, X19
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X4, X31
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Call Number.FormatUInt32, X0, X1, X2
	050 Return X0

Method: System.String ToString(System.String format)

Disassembly:
	0x03399E18 MOV X3, X20
	0x03399E1C MOV X4, X23
	0x03399E20 MOV X5, X21
	0x03399E24 MOV X6, X19
	0x03399E28 LDP X20, X19, [X31 + 0x40]
	0x03399E2C LDP X22, X21, [X31 + 0x30]
	0x03399E30 LDP X24, X23, [X31 + 0x20]
	0x03399E34 LDP X26, X25, [X31 + 0x10]
	0x03399E38 MOV X7, X31
	0x03399E3C LDP X30, X27, [X31], #0x50
	0x03399E40 B 0x337A5A8
	0x03399E44 STP X30, X21, [X31 - 0x20]!
	0x03399E48 STP X20, X19, [X31 + 0x10]
	0x03399E4C ADRP X20, 0x1044000
	0x03399E50 LDRB W8, [X20 + 0xC7]
	0x03399E54 MOV X19, X0
	0x03399E58 TBNZ X8, 0x0, 0x3399E70
	0x03399E5C ADRP X0, 0xD8F000
	0x03399E60 LDR X0, [X0 + 0x78]
	0x03399E64 BL 0x1C16CF4
	0x03399E68 MOVZ W8, 0x1
	0x03399E6C STRB W8, [X20 + 0xC7]
	0x03399E70 CBZ X19, 0x3399EF0
	0x03399E74 ADRP X20, 0x1040000
	0x03399E78 ADRP X21, 0xD8F000
	0x03399E7C LDRB W8, [X20 + 0x762]
	0x03399E80 LDR X21, [X21 + 0x78]
	0x03399E84 CBNZ W8, 0x3399E9C
	0x03399E88 ADRP X0, 0xD81000
	0x03399E8C LDR X0, [X0 + 0x290]
	0x03399E90 BL 0x1C16CF4
	0x03399E94 MOVZ W8, 0x1
	0x03399E98 STRB W8, [X20 + 0x762]
	0x03399E9C MOV X0, X19
	0x03399EA0 MOV X1, X31
	0x03399EA4 BL 0x3225708
	0x03399EA8 LDR W19, [X19 + 0x10]
	0x03399EAC MOV X20, X0
	0x03399EB0 MOV X0, X31
	0x03399EB4 BL 0x333AE98
	0x03399EB8 LDR X8, [X21]
	0x03399EBC MOV X21, X0
	0x03399EC0 LDR W9, [X8 + 0xE0]
	0x03399EC4 CBNZ W9, 0x3399ED0
	0x03399EC8 MOV X0, X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1045000
	007 Move W8, [X21+174]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD90000
	015 Move X0, [X0+120]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+174], W8
	019 Move X21, 0x1041000
	020 Move W8, [X21+1890]
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Compare W8, 0
	023 JumpIfNotEqual {29}
	024 Move X0, 0xD82000
	025 Move X0, [X0+656]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1890], W8
	029 Move X22, 0xD90000
	030 Move X22, [X22+120]
	031 Compare X20, 0
	032 JumpIfEqual {38}
	033 Move X0, X20
	034 Move X1, X31
	035 Call String.GetRawStringData, X0
	036 Move W20, [X20+16]
	037 Move X21, X0
	038 Move X21, X31
	039 Move X0, [X22]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move W0, W19
	045 Move X1, X21
	046 Move X2, X20
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X3, X31
	052 Move X4, X31
	053 Move X30, [X31+48]
	054 Call Number.FormatUInt32, X0, X1, X2
	055 Return X0

Method: System.String ToString(System.String format, System.IFormatProvider provider)

Disassembly:
	0x03399ECC BL 0x1C16DFC
	0x03399ED0 MOV X0, X20
	0x03399ED4 MOV X1, X19
	0x03399ED8 LDP X20, X19, [X31 + 0x10]
	0x03399EDC MOVZ W2, 0x7
	0x03399EE0 MOV X3, X21
	0x03399EE4 MOV X4, X31
	0x03399EE8 LDP X30, X21, [X31], #0x20
	0x03399EEC B 0x3388948
	0x03399EF0 MOVZ W0, 0x30
	0x03399EF4 BL 0x338F3E0
	0x03399EF8 STR X30, [X31 - 0x30]!
	0x03399EFC STP X22, X21, [X31 + 0x10]
	0x03399F00 STP X20, X19, [X31 + 0x20]
	0x03399F04 ADRP X21, 0x1044000
	0x03399F08 LDRB W8, [X21 + 0xC8]
	0x03399F0C MOV X19, X1
	0x03399F10 MOV X20, X0
	0x03399F14 TBNZ X8, 0x0, 0x3399F2C
	0x03399F18 ADRP X0, 0xD8F000
	0x03399F1C LDR X0, [X0 + 0x78]
	0x03399F20 BL 0x1C16CF4
	0x03399F24 MOVZ W8, 0x1
	0x03399F28 STRB W8, [X21 + 0xC8]
	0x03399F2C CBZ X20, 0x3399FB4
	0x03399F30 ADRP X21, 0x1040000
	0x03399F34 ADRP X22, 0xD8F000
	0x03399F38 LDRB W8, [X21 + 0x762]
	0x03399F3C LDR X22, [X22 + 0x78]
	0x03399F40 CBNZ W8, 0x3399F58
	0x03399F44 ADRP X0, 0xD81000
	0x03399F48 LDR X0, [X0 + 0x290]
	0x03399F4C BL 0x1C16CF4
	0x03399F50 MOVZ W8, 0x1
	0x03399F54 STRB W8, [X21 + 0x762]
	0x03399F58 MOV X0, X20
	0x03399F5C MOV X1, X31
	0x03399F60 BL 0x3225708
	0x03399F64 LDR W20, [X20 + 0x10]
	0x03399F68 MOV X21, X0
	0x03399F6C MOV X0, X19
	0x03399F70 MOV X1, X31
	0x03399F74 BL 0x333ACEC
	0x03399F78 LDR X8, [X22]
	0x03399F7C MOV X19, X0
	0x03399F80 LDR W9, [X8 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1045000
	008 Move W8, [X22+175]
	009 Move X19, X2
	010 Move X21, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD90000
	017 Move X0, [X0+120]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+175], W8
	021 Move X22, 0x1041000
	022 Move W8, [X22+1890]
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0xD82000
	027 Move X0, [X0+656]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+1890], W8
	031 Move X23, 0xD90000
	032 Move X23, [X23+120]
	033 Compare X21, 0
	034 JumpIfEqual {40}
	035 Move X0, X21
	036 Move X1, X31
	037 Call String.GetRawStringData, X0
	038 Move W21, [X21+16]
	039 Move X22, X0
	040 Move X22, X31
	041 Move X0, [X23]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move W0, W20
	047 Move X1, X22
	048 Move X2, X21
	049 Move X3, X19
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X4, X31
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 Call Number.FormatUInt32, X0, X1, X2
	058 Return X0

Method: System.Boolean TryFormat(System.Span`1<System.Char> destination, out System.Int32 charsWritten, System.ReadOnlySpan`1<System.Char> format = null, System.IFormatProvider provider = null)

Disassembly:
	0x03399F84 CBNZ W9, 0x3399F90
	0x03399F88 MOV X0, X8
	0x03399F8C BL 0x1C16DFC
	0x03399F90 MOV X0, X21
	0x03399F94 MOV X1, X20
	0x03399F98 MOV X3, X19
	0x03399F9C LDP X20, X19, [X31 + 0x20]
	0x03399FA0 LDP X22, X21, [X31 + 0x10]
	0x03399FA4 MOVZ W2, 0x7
	0x03399FA8 MOV X4, X31
	0x03399FAC LDR X30, [X31], #0x30
	0x03399FB0 B 0x3388948
	0x03399FB4 MOVZ W0, 0x30
	0x03399FB8 BL 0x338F3E0
	0x03399FBC STP X30, X23, [X31 - 0x30]!
	0x03399FC0 STP X22, X21, [X31 + 0x10]
	0x03399FC4 STP X20, X19, [X31 + 0x20]
	0x03399FC8 ADRP X22, 0x1044000
	0x03399FCC LDRB W8, [X22 + 0xC9]
	0x03399FD0 MOV X20, X2
	0x03399FD4 MOV W19, W1
	0x03399FD8 MOV X21, X0
	0x03399FDC TBNZ X8, 0x0, 0x3399FF4
	0x03399FE0 ADRP X0, 0xD8F000
	0x03399FE4 LDR X0, [X0 + 0x78]
	0x03399FE8 BL 0x1C16CF4
	0x03399FEC MOVZ W8, 0x1
	0x03399FF0 STRB W8, [X22 + 0xC9]
	0x03399FF4 MOV W0, W19
	0x03399FF8 MOV X1, X31
	0x03399FFC BL 0x333B33C
	0x0339A000 CBZ X21, 0x339A088
	0x0339A004 ADRP X22, 0x103F000
	0x0339A008 ADRP X23, 0xD8E000
	0x0339A00C LDRB W8, [X22 + 0x762]
	0x0339A010 LDR X23, [X23 + 0x78]
	0x0339A014 CBNZ W8, 0x339A02C
	0x0339A018 ADRP X0, 0xD80000
	0x0339A01C LDR X0, [X0 + 0x290]
	0x0339A020 BL 0x1C16CF4
	0x0339A024 MOVZ W8, 0x1

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x1045000
	012 Move X26, 0xD90000
	013 Move W8, [X27+176]
	014 Move X26, [X26+120]
	015 Move X20, X6
	016 Move X22, X5
	017 Move X24, X4
	018 Move X19, X3
	019 Move X21, X2
	020 Move X23, X1
	021 Move X25, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0xD90000
	027 Move X0, [X0+120]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X27+176], W8
	031 Move X0, [X26]
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move W0, W25
	038 Move X1, X24
	039 Move X2, X22
	040 Move X3, X20
	041 Move X4, X23
	042 Move X5, X21
	043 Move X6, X19
	044 Move X20, [X31+64]
	045 Move X19, [X31+72]
	046 Move X22, [X31+48]
	047 Move X21, [X31+56]
	048 Move X24, [X31+32]
	049 Move X23, [X31+40]
	050 Move X26, [X31+16]
	051 Move X25, [X31+24]
	052 Move X7, X31
	053 Move X30, [X31+80]
	054 Move X27, [X31+88]
	055 Call Number.TryFormatUInt32, X0, X1, X2, X3, X4
	056 Return X0

Method: System.UInt16 Parse(System.String s, System.IFormatProvider provider)

Disassembly:
	0x0339A028 STRB W8, [X22 + 0x762]
	0x0339A02C MOV X0, X21
	0x0339A030 MOV X1, X31
	0x0339A034 BL 0x3225708
	0x0339A038 LDR W21, [X21 + 0x10]
	0x0339A03C MOV X22, X0
	0x0339A040 MOV X0, X20
	0x0339A044 MOV X1, X31
	0x0339A048 BL 0x333ACEC
	0x0339A04C LDR X8, [X23]
	0x0339A050 MOV X20, X0
	0x0339A054 LDR W9, [X8 + 0xE0]
	0x0339A058 CBNZ W9, 0x339A064
	0x0339A05C MOV X0, X8
	0x0339A060 BL 0x1C16DFC
	0x0339A064 MOV X0, X22
	0x0339A068 MOV X1, X21
	0x0339A06C MOV W2, W19
	0x0339A070 MOV X3, X20
	0x0339A074 LDP X20, X19, [X31 + 0x20]
	0x0339A078 LDP X22, X21, [X31 + 0x10]
	0x0339A07C MOV X4, X31
	0x0339A080 LDP X30, X23, [X31], #0x30
	0x0339A084 B 0x3388948
	0x0339A088 MOVZ W0, 0x30
	0x0339A08C BL 0x338F3E0
	0x0339A090 STR X30, [X31 - 0x30]!
	0x0339A094 STP X22, X21, [X31 + 0x10]
	0x0339A098 STP X20, X19, [X31 + 0x20]
	0x0339A09C ADRP X21, 0x1043000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {34}
	007 Move X21, 0x1040000
	008 Move W8, [X21+1890]
	009 Move X19, X1
	010 Move X20, X0
	011 Compare W8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, 0xD81000
	014 Move X0, [X0+656]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1890], W8
	018 Move X0, X20
	019 Move X1, X31
	020 Call String.GetRawStringData, X0
	021 Move W20, [X20+16]
	022 Move X21, X0
	023 Move X0, X19
	024 Move X1, X31
	025 Call NumberFormatInfo.GetInstance, X0
	026 Move X1, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move W2, 7
	030 Move X3, X0
	031 Move X0, X21
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Move W0, 48
	035 Call ThrowHelper.ThrowArgumentNullException, X0

Method: System.UInt16 Parse(System.String s, System.Globalization.NumberStyles style, System.IFormatProvider provider)

Disassembly:
	0x0339A22C LDP X22, X21, [X31 + 0x20]
	0x0339A230 LDP X24, X23, [X31 + 0x10]
	0x0339A234 MOV X5, X31
	0x0339A238 LDR X30, [X31], #0x40
	0x0339A23C B 0x338A1E8
	0x0339A240 STR W31, [X19]
	0x0339A244 LDP X20, X19, [X31 + 0x30]
	0x0339A248 LDP X22, X21, [X31 + 0x20]
	0x0339A24C LDP X24, X23, [X31 + 0x10]
	0x0339A250 MOV W0, W31
	0x0339A254 LDR X30, [X31], #0x40
	0x0339A258 RET
	0x0339A25C MOVZ W0, 0xA
	0x0339A260 RET
	0x0339A264 STP X30, X21, [X31 - 0x20]!
	0x0339A268 STP X20, X19, [X31 + 0x10]
	0x0339A26C ADRP X21, 0x1043000
	0x0339A270 ADRP X20, 0xD62000
	0x0339A274 LDRB W8, [X21 + 0xCC]
	0x0339A278 LDR X20, [X20 + 0x9E8]
	0x0339A27C MOV X19, X0
	0x0339A280 TBNZ X8, 0x0, 0x339A298
	0x0339A284 ADRP X0, 0xD62000
	0x0339A288 LDR X0, [X0 + 0x9E8]
	0x0339A28C BL 0x1C16CF4
	0x0339A290 MOVZ W8, 0x1
	0x0339A294 STRB W8, [X21 + 0xCC]
	0x0339A298 LDR X0, [X20]
	0x0339A29C LDR W19, [X19]
	0x0339A2A0 LDR W8, [X0 + 0xE0]
	0x0339A2A4 CBNZ W8, 0x339A2AC
	0x0339A2A8 BL 0x1C16DFC
	0x0339A2AC MOV W0, W19
	0x0339A2B0 LDP X20, X19, [X31 + 0x10]
	0x0339A2B4 MOV X1, X31
	0x0339A2B8 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W19, W1
	007 Move X21, X0
	008 Move W0, W1
	009 Move X1, X31
	010 Move X20, X2
	011 Call NumberFormatInfo.ValidateParseStyleInteger, X0
	012 Compare X21, 0
	013 JumpIfEqual {42}
	014 Move X22, 0x1040000
	015 Move W8, [X22+1890]
	016 Compare W8, 0
	017 JumpIfNotEqual {23}
	018 Move X0, 0xD81000
	019 Move X0, [X0+656]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1890], W8
	023 Move X0, X21
	024 Move X1, X31
	025 Call String.GetRawStringData, X0
	026 Move W21, [X21+16]
	027 Move X22, X0
	028 Move X0, X20
	029 Move X1, X31
	030 Call NumberFormatInfo.GetInstance, X0
	031 Move X3, X0
	032 Move X0, X22
	033 Move X1, X21
	034 Move W2, W19
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Call UInt16.Parse, X0, X1, X2
	041 Return X0
	042 Move W0, 48
	043 Call ThrowHelper.ThrowArgumentNullException, X0

Method: System.UInt16 Parse(System.ReadOnlySpan`1<System.Char> s, System.Globalization.NumberStyles style, System.Globalization.NumberFormatInfo info)

Disassembly:
	0x0339A0A0 LDRB W8, [X21 + 0xCA]
	0x0339A0A4 MOV X19, X1
	0x0339A0A8 MOV X20, X0
	0x0339A0AC TBNZ X8, 0x0, 0x339A0C4
	0x0339A0B0 ADRP X0, 0xD8E000
	0x0339A0B4 LDR X0, [X0 + 0x78]
	0x0339A0B8 BL 0x1C16CF4
	0x0339A0BC MOVZ W8, 0x1
	0x0339A0C0 STRB W8, [X21 + 0xCA]
	0x0339A0C4 CBZ X20, 0x339A14C
	0x0339A0C8 ADRP X21, 0x103F000
	0x0339A0CC ADRP X22, 0xD8E000
	0x0339A0D0 LDRB W8, [X21 + 0x762]
	0x0339A0D4 LDR X22, [X22 + 0x78]
	0x0339A0D8 CBNZ W8, 0x339A0F0
	0x0339A0DC ADRP X0, 0xD80000
	0x0339A0E0 LDR X0, [X0 + 0x290]
	0x0339A0E4 BL 0x1C16CF4
	0x0339A0E8 MOVZ W8, 0x1
	0x0339A0EC STRB W8, [X21 + 0x762]
	0x0339A0F0 MOV X0, X20
	0x0339A0F4 MOV X1, X31
	0x0339A0F8 BL 0x3225708
	0x0339A0FC LDR W20, [X20 + 0x10]
	0x0339A100 MOV X21, X0
	0x0339A104 MOV X0, X31
	0x0339A108 BL 0x333AE98
	0x0339A10C LDR X8, [X22]
	0x0339A110 MOV X22, X0
	0x0339A114 LDR W9, [X8 + 0xE0]
	0x0339A118 CBNZ W9, 0x339A124
	0x0339A11C MOV X0, X8
	0x0339A120 BL 0x1C16DFC
	0x0339A124 MOV X0, X21
	0x0339A128 MOV X1, X20
	0x0339A12C MOV X3, X22
	0x0339A130 MOV X4, X19
	0x0339A134 LDP X20, X19, [X31 + 0x20]
	0x0339A138 LDP X22, X21, [X31 + 0x10]
	0x0339A13C MOVZ W2, 0x7
	0x0339A140 MOV X5, X31
	0x0339A144 LDR X30, [X31], #0x30
	0x0339A148 B 0x338A1E8
	0x0339A14C STR W31, [X19]
	0x0339A150 LDP X20, X19, [X31 + 0x20]
	0x0339A154 LDP X22, X21, [X31 + 0x10]
	0x0339A158 MOV W0, W31
	0x0339A15C LDR X30, [X31], #0x30
	0x0339A160 RET
	0x0339A164 STR X30, [X31 - 0x40]!
	0x0339A168 STP X24, X23, [X31 + 0x10]
	0x0339A16C STP X22, X21, [X31 + 0x20]
	0x0339A170 STP X20, X19, [X31 + 0x30]
	0x0339A174 ADRP X23, 0x1043000
	0x0339A178 LDRB W8, [X23 + 0xCB]
	0x0339A17C MOV X19, X3
	0x0339A180 MOV X21, X2
	0x0339A184 MOV W20, W1
	0x0339A188 MOV X22, X0
	0x0339A18C TBNZ X8, 0x0, 0x339A1A4
	0x0339A190 ADRP X0, 0xD8E000
	0x0339A194 LDR X0, [X0 + 0x78]
	0x0339A198 BL 0x1C16CF4
	0x0339A19C MOVZ W8, 0x1
	0x0339A1A0 STRB W8, [X23 + 0xCB]
	0x0339A1A4 MOV W0, W20
	0x0339A1A8 MOV X1, X31
	0x0339A1AC BL 0x333B33C
	0x0339A1B0 CBZ X22, 0x339A240
	0x0339A1B4 ADRP X23, 0x103F000
	0x0339A1B8 ADRP X24, 0xD8E000
	0x0339A1BC LDRB W8, [X23 + 0x762]
	0x0339A1C0 LDR X24, [X24 + 0x78]
	0x0339A1C4 CBNZ W8, 0x339A1DC
	0x0339A1C8 ADRP X0, 0xD80000
	0x0339A1CC LDR X0, [X0 + 0x290]
	0x0339A1D0 BL 0x1C16CF4
	0x0339A1D4 MOVZ W8, 0x1
	0x0339A1D8 STRB W8, [X23 + 0x762]
	0x0339A1DC MOV X0, X22
	0x0339A1E0 MOV X1, X31
	0x0339A1E4 BL 0x3225708
	0x0339A1E8 LDR W22, [X22 + 0x10]
	0x0339A1EC MOV X23, X0
	0x0339A1F0 MOV X0, X21
	0x0339A1F4 MOV X1, X31
	0x0339A1F8 BL 0x333ACEC
	0x0339A1FC LDR X8, [X24]
	0x0339A200 MOV X21, X0
	0x0339A204 LDR W9, [X8 + 0xE0]
	0x0339A208 CBNZ W9, 0x339A214
	0x0339A20C MOV X0, X8
	0x0339A210 BL 0x1C16DFC
	0x0339A214 MOV X0, X23
	0x0339A218 MOV X1, X22
	0x0339A21C MOV W2, W20
	0x0339A220 MOV X3, X21
	0x0339A224 MOV X4, X19
	0x0339A228 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x1044000
	009 Move X24, 0xD8F000
	010 Move W8, [X23+177]
	011 Move X24, [X24+120]
	012 Move X19, X3
	013 Move W20, W2
	014 Move X21, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xD8F000
	021 Move X0, [X0+120]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+177], W8
	025 Move X0, [X24]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X22
	031 Move X1, X21
	032 Move W2, W20
	033 Move X3, X19
	034 Move X4, X31
	035 Call Number.ParseUInt32, X0, X1, X2
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X20, [X31+48]
	038 Move X19, [X31+56]
	039 Move X22, [X31+32]
	040 Move X21, [X31+40]
	041 Move X24, [X31+16]
	042 Move X23, [X31+24]
	043 Move X30, [X31+64]
	044 Return X0
	045 Move X0, 0xD5A000
	046 Move X0, [X0+2136]
	047 Call 0x1C17D08
	048 Call 0x1C17F10
	049 Move X19, X0
	050 Move X0, 0xD8F000
	051 Move X0, [X0+448]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X19
	055 Call OverflowException..ctor, X0, X1
	056 Move X0, 0xD92000
	057 Move X0, [X0+1416]
	058 Call 0x1C17D08
	059 Move X1, X0
	060 Move X0, X19
	061 Call 0x1C17DEC
	062 Move X19, X0
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X0, X19
	065 Call 0x3EB2AD0
	066 Move X19, X0
	067 Move X0, 0xD5A000
	068 Move X0, [X0+2136]
	069 Call 0x1C17D08
	070 Move X8, [X19]
	071 Move X1, [X8]
	072 Call 0x1C18270
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {97}
	077 Move X19, [X19]
	078 Call 0x3EB2AE0
	079 Move X0, 0xD5A000
	080 Move X0, [X0+2136]
	081 Call 0x1C17D08
	082 Call 0x1C17F10
	083 Move X20, X0
	084 Move X0, 0xD8F000
	085 Move X0, [X0+448]
	086 Call 0x1C17D08
	087 Move X1, X0
	088 Move X0, X20
	089 Move X2, X19
	090 Call OverflowException..ctor, X0, X1, X2
	091 Move X0, 0xD92000
	092 Move X0, [X0+1416]
	093 Call 0x1C17D08
	094 Move X1, X0
	095 Move X0, X20
	096 Call 0x1C17DEC
	097 Move W0, 8
	098 Call 0x3EB2AF0
	099 Move X8, [X19]
	100 Move [X0], X8
	101 Move X1, 0xB1B000
	102 Add X1, X1, 3672
	103 Move X2, X31
	104 Call 0x3EB2B00
	105 Move X19, X0
	106 Call 0x3EB2AE0
	107 Move X0, X19
	108 Call 0x1D2D690
	109 Call 0x1991590

Method: System.Boolean TryParse(System.String s, out System.UInt16 result)

Disassembly:
	0x0339A2BC B 0x331E468
	0x0339A2C0 STP X30, X21, [X31 - 0x20]!
	0x0339A2C4 STP X20, X19, [X31 + 0x10]
	0x0339A2C8 ADRP X21, 0x1043000
	0x0339A2CC ADRP X20, 0xD62000
	0x0339A2D0 LDRB W8, [X21 + 0xCD]
	0x0339A2D4 LDR X20, [X20 + 0x9E8]
	0x0339A2D8 MOV X19, X0
	0x0339A2DC TBNZ X8, 0x0, 0x339A2F4
	0x0339A2E0 ADRP X0, 0xD62000
	0x0339A2E4 LDR X0, [X0 + 0x9E8]
	0x0339A2E8 BL 0x1C16CF4
	0x0339A2EC MOVZ W8, 0x1
	0x0339A2F0 STRB W8, [X21 + 0xCD]
	0x0339A2F4 LDR X0, [X20]
	0x0339A2F8 LDR W19, [X19]
	0x0339A2FC LDR W8, [X0 + 0xE0]
	0x0339A300 CBNZ W8, 0x339A308
	0x0339A304 BL 0x1C16DFC
	0x0339A308 MOV W0, W19
	0x0339A30C LDP X20, X19, [X31 + 0x10]
	0x0339A310 MOV X1, X31
	0x0339A314 LDP X30, X21, [X31], #0x20
	0x0339A318 B 0x331E8E4
	0x0339A31C STP X30, X21, [X31 - 0x20]!
	0x0339A320 STP X20, X19, [X31 + 0x10]
	0x0339A324 ADRP X21, 0x1043000
	0x0339A328 ADRP X20, 0xD62000
	0x0339A32C LDRB W8, [X21 + 0xCE]
	0x0339A330 LDR X20, [X20 + 0x9E8]
	0x0339A334 MOV X19, X0
	0x0339A338 TBNZ X8, 0x0, 0x339A350

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X1
	006 Compare X0, 0
	007 JumpIfEqual {34}
	008 Move X21, 0x1040000
	009 Move W8, [X21+1890]
	010 Move X20, X0
	011 Compare W8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, 0xD81000
	014 Move X0, [X0+656]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1890], W8
	018 Move X0, X20
	019 Move X1, X31
	020 Call String.GetRawStringData, X0
	021 Move W20, [X20+16]
	022 Move X21, X0
	023 Move X0, X31
	024 Call NumberFormatInfo.get_CurrentInfo
	025 Move X1, X20
	026 Move X4, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move W2, 7
	030 Move X3, X0
	031 Move X0, X21
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 NotImplemented "Instruction STRH not yet implemented."
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return X0

Method: System.Boolean TryParse(System.ReadOnlySpan`1<System.Char> s, System.Globalization.NumberStyles style, System.Globalization.NumberFormatInfo info, out System.UInt16 result)

Disassembly:
	0x0339A33C ADRP X0, 0xD62000
	0x0339A340 LDR X0, [X0 + 0x9E8]
	0x0339A344 BL 0x1C16CF4
	0x0339A348 MOVZ W8, 0x1
	0x0339A34C STRB W8, [X21 + 0xCE]
	0x0339A350 LDR X0, [X20]
	0x0339A354 LDR W19, [X19]
	0x0339A358 LDR W8, [X0 + 0xE0]
	0x0339A35C CBNZ W8, 0x339A364
	0x0339A360 BL 0x1C16DFC
	0x0339A364 MOV W0, W19
	0x0339A368 LDP X20, X19, [X31 + 0x10]
	0x0339A36C MOV X1, X31
	0x0339A370 LDP X30, X21, [X31], #0x20
	0x0339A374 B 0x331EDE8
	0x0339A378 STP X30, X21, [X31 - 0x20]!
	0x0339A37C STP X20, X19, [X31 + 0x10]
	0x0339A380 ADRP X21, 0x1043000
	0x0339A384 ADRP X20, 0xD62000
	0x0339A388 LDRB W8, [X21 + 0xCF]
	0x0339A38C LDR X20, [X20 + 0x9E8]
	0x0339A390 MOV X19, X0
	0x0339A394 TBNZ X8, 0x0, 0x339A3AC
	0x0339A398 ADRP X0, 0xD62000
	0x0339A39C LDR X0, [X0 + 0x9E8]
	0x0339A3A0 BL 0x1C16CF4
	0x0339A3A4 MOVZ W8, 0x1
	0x0339A3A8 STRB W8, [X21 + 0xCF]
	0x0339A3AC LDR X0, [X20]
	0x0339A3B0 LDR W19, [X19]
	0x0339A3B4 LDR W8, [X0 + 0xE0]
	0x0339A3B8 CBNZ W8, 0x339A3C0
	0x0339A3BC BL 0x1C16DFC
	0x0339A3C0 MOV W0, W19
	0x0339A3C4 LDP X20, X19, [X31 + 0x10]
	0x0339A3C8 MOV X1, X31
	0x0339A3CC LDP X30, X21, [X31], #0x20
	0x0339A3D0 B 0x331F48C
	0x0339A3D4 STP X30, X21, [X31 - 0x20]!
	0x0339A3D8 STP X20, X19, [X31 + 0x10]
	0x0339A3DC ADRP X21, 0x1043000
	0x0339A3E0 ADRP X20, 0xD62000
	0x0339A3E4 LDRB W8, [X21 + 0xD0]
	0x0339A3E8 LDR X20, [X20 + 0x9E8]
	0x0339A3EC MOV X19, X0
	0x0339A3F0 TBNZ X8, 0x0, 0x339A408
	0x0339A3F4 ADRP X0, 0xD62000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x1044000
	011 Move X24, 0xD8F000
	012 Move W8, [X25+178]
	013 Move X24, [X24+120]
	014 Move X19, X4
	015 Move X20, X3
	016 Move W21, W2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xD8F000
	024 Move X0, [X0+120]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X25+178], W8
	028 Move [X31+12], W31
	029 NotImplemented "Instruction STRH not yet implemented."
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Add X4, X31, 12
	036 Move X0, X23
	037 Move X1, X22
	038 Move W2, W21
	039 Move X3, X20
	040 Move X5, X31
	041 Call Number.TryParseUInt32, X0, X1, X2, X3
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {54}
	046 Move W8, [X31+12]
	047 Move W9, W8
	048 ShiftRight W9, 16
	049 And W9, W9, 0x7FFFFFFF
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move W0, 1
	053 NotImplemented "Instruction STRH not yet implemented."
	054 Move W0, W31
	055 Move X20, [X31+64]
	056 Move X19, [X31+72]
	057 Move X22, [X31+48]
	058 Move X21, [X31+56]
	059 Move X24, [X31+32]
	060 Move X23, [X31+40]
	061 Move X30, [X31+16]
	062 Move X25, [X31+24]
	063 Add X31, X31, 80
	064 Return X0

Method: System.TypeCode GetTypeCode()

Disassembly:
	0x0339A3F8 LDR X0, [X0 + 0x9E8]
	0x0339A3FC BL 0x1C16CF4

ISIL:
	001 Move W0, 8
	002 Return X0

Method: System.Boolean System.IConvertible.ToBoolean(System.IFormatProvider provider)

Disassembly:
	0x0339A400 MOVZ W8, 0x1
	0x0339A404 STRB W8, [X21 + 0xD0]
	0x0339A408 LDR X0, [X20]
	0x0339A40C LDR W19, [X19]
	0x0339A410 LDR W8, [X0 + 0xE0]
	0x0339A414 CBNZ W8, 0x339A41C
	0x0339A418 BL 0x1C16DFC
	0x0339A41C MOV W0, W19
	0x0339A420 LDP X20, X19, [X31 + 0x10]
	0x0339A424 MOV X1, X31
	0x0339A428 LDP X30, X21, [X31], #0x20
	0x0339A42C B 0x331F9F8
	0x0339A430 STP X30, X21, [X31 - 0x20]!
	0x0339A434 STP X20, X19, [X31 + 0x10]
	0x0339A438 ADRP X21, 0x1043000
	0x0339A43C ADRP X20, 0xD62000
	0x0339A440 LDRB W8, [X21 + 0xD1]
	0x0339A444 LDR X20, [X20 + 0x9E8]
	0x0339A448 MOV X19, X0
	0x0339A44C TBNZ X8, 0x0, 0x339A464
	0x0339A450 ADRP X0, 0xD62000
	0x0339A454 LDR X0, [X0 + 0x9E8]
	0x0339A458 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1044000
	006 Move X20, 0xD63000
	007 Move W8, [X21+179]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD63000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+179], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToBoolean, X0
	032 Return X0

Method: System.Char System.IConvertible.ToChar(System.IFormatProvider provider)

Disassembly:
	0x0339A45C MOVZ W8, 0x1
	0x0339A460 STRB W8, [X21 + 0xD1]
	0x0339A464 LDR X0, [X20]
	0x0339A468 LDR W19, [X19]
	0x0339A46C LDR W8, [X0 + 0xE0]
	0x0339A470 CBNZ W8, 0x339A478
	0x0339A474 BL 0x1C16DFC
	0x0339A478 MOV W0, W19
	0x0339A47C LDP X20, X19, [X31 + 0x10]
	0x0339A480 MOV X1, X31
	0x0339A484 LDP X30, X21, [X31], #0x20
	0x0339A488 B 0x331FF40
	0x0339A48C STP X30, X21, [X31 - 0x20]!
	0x0339A490 STP X20, X19, [X31 + 0x10]
	0x0339A494 ADRP X21, 0x1043000
	0x0339A498 ADRP X20, 0xD62000
	0x0339A49C LDRB W8, [X21 + 0xD2]
	0x0339A4A0 LDR X20, [X20 + 0x9E8]
	0x0339A4A4 MOV X19, X0
	0x0339A4A8 TBNZ X8, 0x0, 0x339A4C0
	0x0339A4AC ADRP X0, 0xD62000
	0x0339A4B0 LDR X0, [X0 + 0x9E8]
	0x0339A4B4 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1044000
	006 Move X20, 0xD63000
	007 Move W8, [X21+180]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD63000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+180], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToChar, X0
	032 Return X0

Method: System.SByte System.IConvertible.ToSByte(System.IFormatProvider provider)

Disassembly:
	0x0339A4B8 MOVZ W8, 0x1
	0x0339A4BC STRB W8, [X21 + 0xD2]
	0x0339A4C0 LDR X0, [X20]
	0x0339A4C4 LDR W19, [X19]
	0x0339A4C8 LDR W8, [X0 + 0xE0]
	0x0339A4CC CBNZ W8, 0x339A4D4
	0x0339A4D0 BL 0x1C16DFC
	0x0339A4D4 MOV W0, W19
	0x0339A4D8 LDP X20, X19, [X31 + 0x10]
	0x0339A4DC MOV X1, X31
	0x0339A4E0 LDP X30, X21, [X31], #0x20
	0x0339A4E4 B 0x3320398
	0x0339A4E8 LDR W0, [X0]
	0x0339A4EC RET
	0x0339A4F0 STP X30, X21, [X31 - 0x20]!
	0x0339A4F4 STP X20, X19, [X31 + 0x10]
	0x0339A4F8 ADRP X21, 0x1043000
	0x0339A4FC ADRP X20, 0xD62000
	0x0339A500 LDRB W8, [X21 + 0xD3]
	0x0339A504 LDR X20, [X20 + 0x9E8]
	0x0339A508 MOV X19, X0
	0x0339A50C TBNZ X8, 0x0, 0x339A524
	0x0339A510 ADRP X0, 0xD62000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1044000
	006 Move X20, 0xD63000
	007 Move W8, [X21+181]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD63000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+181], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToSByte, X0
	032 Return X0

Method: System.Byte System.IConvertible.ToByte(System.IFormatProvider provider)

Disassembly:
	0x0339A514 LDR X0, [X0 + 0x9E8]
	0x0339A518 BL 0x1C16CF4
	0x0339A51C MOVZ W8, 0x1
	0x0339A520 STRB W8, [X21 + 0xD3]
	0x0339A524 LDR X0, [X20]
	0x0339A528 LDR W19, [X19]
	0x0339A52C LDR W8, [X0 + 0xE0]
	0x0339A530 CBNZ W8, 0x339A538
	0x0339A534 BL 0x1C16DFC
	0x0339A538 MOV W0, W19
	0x0339A53C LDP X20, X19, [X31 + 0x10]
	0x0339A540 MOV X1, X31
	0x0339A544 LDP X30, X21, [X31], #0x20
	0x0339A548 B 0x3320D50
	0x0339A54C STP X30, X21, [X31 - 0x20]!
	0x0339A550 STP X20, X19, [X31 + 0x10]
	0x0339A554 ADRP X21, 0x1043000
	0x0339A558 ADRP X20, 0xD62000
	0x0339A55C LDRB W8, [X21 + 0xD4]
	0x0339A560 LDR X20, [X20 + 0x9E8]
	0x0339A564 MOV X19, X0
	0x0339A568 TBNZ X8, 0x0, 0x339A580
	0x0339A56C ADRP X0, 0xD62000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1044000
	006 Move X20, 0xD63000
	007 Move W8, [X21+182]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD63000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+182], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToByte, X0
	032 Return X0

Method: System.Int16 System.IConvertible.ToInt16(System.IFormatProvider provider)

Disassembly:
	0x0339A570 LDR X0, [X0 + 0x9E8]
	0x0339A574 BL 0x1C16CF4
	0x0339A578 MOVZ W8, 0x1
	0x0339A57C STRB W8, [X21 + 0xD4]
	0x0339A580 LDR X0, [X20]
	0x0339A584 LDR W19, [X19]
	0x0339A588 LDR W8, [X0 + 0xE0]
	0x0339A58C CBNZ W8, 0x339A594
	0x0339A590 BL 0x1C16DFC
	0x0339A594 MOV W0, W19
	0x0339A598 LDP X20, X19, [X31 + 0x10]
	0x0339A59C MOV X1, X31
	0x0339A5A0 LDP X30, X21, [X31], #0x20
	0x0339A5A4 B 0x3321318
	0x0339A5A8 STP X30, X21, [X31 - 0x20]!
	0x0339A5AC STP X20, X19, [X31 + 0x10]
	0x0339A5B0 ADRP X21, 0x1043000
	0x0339A5B4 ADRP X20, 0xD62000
	0x0339A5B8 LDRB W8, [X21 + 0xD5]
	0x0339A5BC LDR X20, [X20 + 0x9E8]
	0x0339A5C0 MOV X19, X0
	0x0339A5C4 TBNZ X8, 0x0, 0x339A5DC
	0x0339A5C8 ADRP X0, 0xD62000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1044000
	006 Move X20, 0xD63000
	007 Move W8, [X21+183]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD63000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+183], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToInt16, X0
	032 Return X0

Method: System.UInt16 System.IConvertible.ToUInt16(System.IFormatProvider provider)

Disassembly:
	0x0339A5CC LDR X0, [X0 + 0x9E8]
	0x0339A5D0 BL 0x1C16CF4

ISIL:
	001 NotImplemented "Instruction LDRH not yet implemented."
	002 Return X0

Method: System.Int32 System.IConvertible.ToInt32(System.IFormatProvider provider)

Disassembly:
	0x0339A5D4 MOVZ W8, 0x1
	0x0339A5D8 STRB W8, [X21 + 0xD5]
	0x0339A5DC LDR X0, [X20]
	0x0339A5E0 LDR W19, [X19]
	0x0339A5E4 LDR W8, [X0 + 0xE0]
	0x0339A5E8 CBNZ W8, 0x339A5F0
	0x0339A5EC BL 0x1C16DFC
	0x0339A5F0 MOV W0, W19
	0x0339A5F4 LDP X20, X19, [X31 + 0x10]
	0x0339A5F8 MOV X1, X31
	0x0339A5FC LDP X30, X21, [X31], #0x20
	0x0339A600 B 0x332177C
	0x0339A604 STP X30, X21, [X31 - 0x20]!
	0x0339A608 STP X20, X19, [X31 + 0x10]
	0x0339A60C ADRP X21, 0x1043000
	0x0339A610 ADRP X20, 0xD62000
	0x0339A614 LDRB W8, [X21 + 0xD6]
	0x0339A618 LDR X20, [X20 + 0x9E8]
	0x0339A61C MOV X19, X0
	0x0339A620 TBNZ X8, 0x0, 0x339A638
	0x0339A624 ADRP X0, 0xD62000
	0x0339A628 LDR X0, [X0 + 0x9E8]
	0x0339A62C BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1044000
	006 Move X20, 0xD63000
	007 Move W8, [X21+184]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD63000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+184], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToInt32, X0
	032 Return X0

Method: System.UInt32 System.IConvertible.ToUInt32(System.IFormatProvider provider)

Disassembly:
	0x0339A630 MOVZ W8, 0x1
	0x0339A634 STRB W8, [X21 + 0xD6]
	0x0339A638 LDR X0, [X20]
	0x0339A63C LDR W19, [X19]
	0x0339A640 LDR W8, [X0 + 0xE0]
	0x0339A644 CBNZ W8, 0x339A64C
	0x0339A648 BL 0x1C16DFC
	0x0339A64C MOV W0, W19
	0x0339A650 LDP X20, X19, [X31 + 0x10]
	0x0339A654 MOV X1, X31
	0x0339A658 LDP X30, X21, [X31], #0x20
	0x0339A65C B 0x3321AC0
	0x0339A660 STP X30, X21, [X31 - 0x20]!
	0x0339A664 STP X20, X19, [X31 + 0x10]
	0x0339A668 ADRP X21, 0x1043000
	0x0339A66C ADRP X20, 0xD62000
	0x0339A670 LDRB W8, [X21 + 0xD7]
	0x0339A674 LDR X20, [X20 + 0x9E8]
	0x0339A678 MOV X19, X0
	0x0339A67C TBNZ X8, 0x0, 0x339A694
	0x0339A680 ADRP X0, 0xD62000
	0x0339A684 LDR X0, [X0 + 0x9E8]
	0x0339A688 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1044000
	006 Move X20, 0xD63000
	007 Move W8, [X21+185]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD63000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+185], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToUInt32, X0
	032 Return X0

Method: System.Int64 System.IConvertible.ToInt64(System.IFormatProvider provider)

Disassembly:
	0x0339A68C MOVZ W8, 0x1
	0x0339A690 STRB W8, [X21 + 0xD7]
	0x0339A694 LDR X0, [X20]
	0x0339A698 LDR W19, [X19]
	0x0339A69C LDR W8, [X0 + 0xE0]
	0x0339A6A0 CBNZ W8, 0x339A6A8
	0x0339A6A4 BL 0x1C16DFC
	0x0339A6A8 MOV W0, W19
	0x0339A6AC LDP X20, X19, [X31 + 0x10]
	0x0339A6B0 MOV X1, X31
	0x0339A6B4 LDP X30, X21, [X31], #0x20
	0x0339A6B8 B 0x3321DEC
	0x0339A6BC STR X30, [X31 - 0x20]!
	0x0339A6C0 STP X20, X19, [X31 + 0x10]
	0x0339A6C4 ADRP X0, 0xD8E000
	0x0339A6C8 LDR X0, [X0 + 0x30]
	0x0339A6CC BL 0x1C16D08
	0x0339A6D0 MOV X19, X0
	0x0339A6D4 ADRP X0, 0xD8B000
	0x0339A6D8 LDR X0, [X0 + 0xC0]
	0x0339A6DC BL 0x1C16D08
	0x0339A6E0 MOV X20, X0
	0x0339A6E4 ADRP X0, 0xD8B000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1044000
	006 Move X20, 0xD63000
	007 Move W8, [X21+186]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD63000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+186], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToInt64, X0
	032 Return X0

Method: System.UInt64 System.IConvertible.ToUInt64(System.IFormatProvider provider)

Disassembly:
	0x0339A6E8 LDR X0, [X0 + 0x98]
	0x0339A6EC BL 0x1C16D08
	0x0339A6F0 MOV X2, X0
	0x0339A6F4 MOV X0, X19
	0x0339A6F8 MOV X1, X20
	0x0339A6FC MOV X3, X31
	0x0339A700 BL 0x320A264
	0x0339A704 MOV X19, X0
	0x0339A708 ADRP X0, 0xD61000
	0x0339A70C LDR X0, [X0 + 0xC08]
	0x0339A710 BL 0x1C16D08
	0x0339A714 BL 0x1C16F10
	0x0339A718 MOV X1, X19
	0x0339A71C MOV X2, X31
	0x0339A720 MOV X20, X0
	0x0339A724 BL 0x337B498
	0x0339A728 ADRP X0, 0xD91000
	0x0339A72C LDR X0, [X0 + 0x5A8]
	0x0339A730 BL 0x1C16D08
	0x0339A734 MOV X1, X0
	0x0339A738 MOV X0, X20
	0x0339A73C BL 0x1C16DEC
	0x0339A740 STR X30, [X31 - 0x40]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1044000
	006 Move X20, 0xD63000
	007 Move W8, [X21+187]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD63000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+187], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToUInt64, X0
	032 Return X0

Method: System.Single System.IConvertible.ToSingle(System.IFormatProvider provider)

Disassembly:
	0x0339A744 STP X24, X23, [X31 + 0x10]
	0x0339A748 STP X22, X21, [X31 + 0x20]
	0x0339A74C STP X20, X19, [X31 + 0x30]
	0x0339A750 ADRP X24, 0x1043000
	0x0339A754 ADRP X23, 0xD61000
	0x0339A758 ADRP X22, 0xD62000
	0x0339A75C LDRB W8, [X24 + 0xD8]
	0x0339A760 LDR X23, [X23 + 0x720]
	0x0339A764 LDR X22, [X22 + 0x9E8]
	0x0339A768 MOV X19, X2
	0x0339A76C MOV X20, X1
	0x0339A770 MOV X21, X0
	0x0339A774 TBNZ X8, 0x0, 0x339A798
	0x0339A778 ADRP X0, 0xD62000
	0x0339A77C LDR X0, [X0 + 0x9E8]
	0x0339A780 BL 0x1C16CF4
	0x0339A784 ADRP X0, 0xD61000
	0x0339A788 LDR X0, [X0 + 0x720]
	0x0339A78C BL 0x1C16CF4
	0x0339A790 MOVZ W8, 0x1
	0x0339A794 STRB W8, [X24 + 0xD8]
	0x0339A798 LDR W8, [X21]
	0x0339A79C LDR X0, [X23]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1044000
	006 Move X20, 0xD63000
	007 Move W8, [X21+188]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD63000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+188], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToSingle, X0
	032 Return V0

Method: System.Double System.IConvertible.ToDouble(System.IFormatProvider provider)

Disassembly:
	0x0339A7A0 ADD X1, X31, 0xC
	0x0339A7A4 STR W8, [X31 + 0xC]
	0x0339A7A8 BL 0x1C16E04
	0x0339A7AC LDR X8, [X22]
	0x0339A7B0 MOV X21, X0
	0x0339A7B4 LDR W9, [X8 + 0xE0]
	0x0339A7B8 CBNZ W9, 0x339A7C4
	0x0339A7BC MOV X0, X8
	0x0339A7C0 BL 0x1C16DFC
	0x0339A7C4 MOV X0, X21
	0x0339A7C8 MOV X1, X20
	0x0339A7CC MOV X2, X19
	0x0339A7D0 MOV X3, X31
	0x0339A7D4 BL 0x3318718
	0x0339A7D8 LDP X20, X19, [X31 + 0x30]
	0x0339A7DC LDP X22, X21, [X31 + 0x20]
	0x0339A7E0 LDP X24, X23, [X31 + 0x10]
	0x0339A7E4 LDR X30, [X31], #0x40
	0x0339A7E8 RET
	0x0339A7EC STP X30, X21, [X31 - 0x20]!
	0x0339A7F0 STP X20, X19, [X31 + 0x10]
	0x0339A7F4 ADRP X21, 0x1043000
	0x0339A7F8 LDRB W8, [X21 + 0xD9]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1044000
	006 Move X20, 0xD63000
	007 Move W8, [X21+189]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD63000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+189], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToDouble, X0
	032 Return V0

Method: System.Decimal System.IConvertible.ToDecimal(System.IFormatProvider provider)

Disassembly:
	0x0339A7FC MOV X20, X1
	0x0339A800 MOV X19, X0
	0x0339A804 TBNZ X8, 0x0, 0x339A81C
	0x0339A808 ADRP X0, 0xD5A000
	0x0339A80C LDR X0, [X0 + 0x758]
	0x0339A810 BL 0x1C16CF4
	0x0339A814 MOVZ W8, 0x1
	0x0339A818 STRB W8, [X21 + 0xD9]
	0x0339A81C CBZ X20, 0x339A858
	0x0339A820 ADRP X8, 0xD5A000
	0x0339A824 LDR X8, [X8 + 0x758]
	0x0339A828 LDR X9, [X20]
	0x0339A82C LDR X8, [X8]
	0x0339A830 CMP X9, X8
	0x0339A834 B.NE 0x339A870
	0x0339A838 MOV X0, X20
	0x0339A83C BL 0x1C16E08
	0x0339A840 LDR X8, [X0]
	0x0339A844 LDR X9, [X19]
	0x0339A848 CMP X9, X8
	0x0339A84C B.CS 0x339A860
	0x0339A850 MOVN W0, 0x0
	0x0339A854 B 0x339A864

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1044000
	006 Move X20, 0xD63000
	007 Move W8, [X21+190]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD63000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+190], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToDecimal, X0
	032 Return X0

Method: System.DateTime System.IConvertible.ToDateTime(System.IFormatProvider provider)

Disassembly:
	0x0339A858 MOVZ W0, 0x1
	0x0339A85C B 0x339A864
	0x0339A860 CSET W0, HI
	0x0339A864 LDP X20, X19, [X31 + 0x10]
	0x0339A868 LDP X30, X21, [X31], #0x20
	0x0339A86C RET
	0x0339A870 ADRP X0, 0xD61000
	0x0339A874 LDR X0, [X0 + 0x578]
	0x0339A878 BL 0x1C16D08
	0x0339A87C BL 0x1C16F10
	0x0339A880 MOV X19, X0
	0x0339A884 ADRP X0, 0xD91000
	0x0339A888 LDR X0, [X0 + 0x5B0]
	0x0339A88C BL 0x1C16D08
	0x0339A890 MOV X1, X0
	0x0339A894 MOV X0, X19
	0x0339A898 MOV X2, X31
	0x0339A89C BL 0x3314A68
	0x0339A8A0 ADRP X0, 0xD91000
	0x0339A8A4 LDR X0, [X0 + 0x5B8]
	0x0339A8A8 BL 0x1C16D08
	0x0339A8AC MOV X1, X0
	0x0339A8B0 MOV X0, X19
	0x0339A8B4 BL 0x1C16DEC
	0x0339A8B8 LDR X8, [X0]
	0x0339A8BC CMP X8, X1
	0x0339A8C0 B.CS 0x339A8CC
	0x0339A8C4 MOVN W0, 0x0
	0x0339A8C8 RET
	0x0339A8CC CSET W0, HI
	0x0339A8D0 RET
	0x0339A8D4 STP X30, X21, [X31 - 0x20]!
	0x0339A8D8 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xD8F000
	005 Move X0, [X0+48]
	006 Call 0x1C17D08
	007 Move X19, X0
	008 Move X0, 0xD8C000
	009 Move X0, [X0+144]
	010 Call 0x1C17D08
	011 Move X20, X0
	012 Move X0, 0xD8C000
	013 Move X0, [X0+152]
	014 Call 0x1C17D08
	015 Move X2, X0
	016 Move X0, X19
	017 Move X1, X20
	018 Move X3, X31
	019 Call SR.Format, X0, X1, X2
	020 Move X19, X0
	021 Move X0, 0xD62000
	022 Move X0, [X0+3080]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X2, X31
	027 Move X20, X0
	028 Call InvalidCastException..ctor, X0, X1
	029 Move X0, 0xD92000
	030 Move X0, [X0+1424]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X20
	034 Call 0x1C17DEC

Method: System.Object System.IConvertible.ToType(System.Type type, System.IFormatProvider provider)

Disassembly:
	0x0339A8DC ADRP X21, 0x1043000
	0x0339A8E0 LDRB W8, [X21 + 0xDA]
	0x0339A8E4 MOV X19, X1
	0x0339A8E8 MOV X20, X0
	0x0339A8EC TBNZ X8, 0x0, 0x339A904
	0x0339A8F0 ADRP X0, 0xD5A000
	0x0339A8F4 LDR X0, [X0 + 0x758]
	0x0339A8F8 BL 0x1C16CF4
	0x0339A8FC MOVZ W8, 0x1
	0x0339A900 STRB W8, [X21 + 0xDA]
	0x0339A904 CBZ X19, 0x339A920
	0x0339A908 ADRP X8, 0xD5A000
	0x0339A90C LDR X8, [X8 + 0x758]
	0x0339A910 LDR X9, [X19]
	0x0339A914 LDR X8, [X8]
	0x0339A918 CMP X9, X8
	0x0339A91C B.EQ 0x339A928
	0x0339A920 MOV W0, W31
	0x0339A924 B 0x339A940
	0x0339A928 LDR X20, [X20]
	0x0339A92C MOV X0, X19
	0x0339A930 BL 0x1C16E08
	0x0339A934 LDR X8, [X0]
	0x0339A938 CMP X20, X8
	0x0339A93C CSET W0, EQ
	0x0339A940 LDP X20, X19, [X31 + 0x10]
	0x0339A944 LDP X30, X21, [X31], #0x20
	0x0339A948 RET
	0x0339A94C LDR X8, [X0]
	0x0339A950 CMP X8, X1
	0x0339A954 CSET W0, EQ
	0x0339A958 RET
	0x0339A95C LDP W8, W9, [X0]
	0x0339A960 EOR W0, W9, W8, 0x0
	0x0339A964 RET
	0x0339A968 STR X30, [X31 - 0x30]!
	0x0339A96C STP X22, X21, [X31 + 0x10]
	0x0339A970 STP X20, X19, [X31 + 0x20]
	0x0339A974 ADRP X22, 0x1043000
	0x0339A978 ADRP X20, 0xD88000
	0x0339A97C ADRP X21, 0xD8E000
	0x0339A980 LDRB W8, [X22 + 0xDB]
	0x0339A984 LDR X20, [X20 + 0x1D8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1044000
	009 Move X23, 0xD5F000
	010 Move X22, 0xD63000
	011 Move W8, [X24+191]
	012 Move X23, [X23+1624]
	013 Move X22, [X22+2536]
	014 Move X19, X2
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xD63000
	022 Move X0, [X0+2536]
	023 Call 0x1C17CF4
	024 Move X0, 0xD5F000
	025 Move X0, [X0+1624]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+191], W8
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Move X0, [X23]
	031 Add X1, X31, 12
	032 NotImplemented "Instruction STRH not yet implemented."
	033 Call 0x1C17E04
	034 Move X8, [X22]
	035 Move X21, X0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X0, X21
	042 Move X1, X20
	043 Move X2, X19
	044 Move X3, X31
	045 Call Convert.DefaultToType, X0, X1, X2
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X22, [X31+32]
	049 Move X21, [X31+40]
	050 Move X24, [X31+16]
	051 Move X23, [X31+24]
	052 Move X30, [X31+64]
	053 Return X0

