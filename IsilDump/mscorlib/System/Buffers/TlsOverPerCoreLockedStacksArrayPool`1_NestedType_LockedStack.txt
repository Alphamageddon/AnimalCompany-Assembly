Type: System.Buffers.TlsOverPerCoreLockedStacksArrayPool`1/LockedStack

Method: System.Boolean TryPush(T[] array)

Disassembly:
	0x031986DC MOV X8, X0
	0x031986E0 MOVZ W1, 0x8
	0x031986E4 MOV X0, X8
	0x031986E8 BL 0x1C16D6C
	0x031986EC STR X0, [X19 + 0x10]
	0x031986F0 MOV X0, X19
	0x031986F4 MOV X1, X31
	0x031986F8 LDP X30, X19, [X31], #0x10
	0x031986FC B 0x33BDD8C
	0x03198700 STP X29, X30, [X31 - 0x50]!
	0x03198704 STR X25, [X31 + 0x10]
	0x03198708 STP X24, X23, [X31 + 0x20]
	0x0319870C STP X22, X21, [X31 + 0x30]
	0x03198710 STP X20, X19, [X31 + 0x40]
	0x03198714 ADD X29, X31, 0x0
	0x03198718 SUB X31, X31, 0x20
	0x0319871C MRS X24, 0xC000
	0x03198720 LDR X8, [X24 + 0x28]
	0x03198724 MOV X19, X3
	0x03198728 MOV X20, X2
	0x0319872C STUR X8, [X29 - 0x8]
	0x03198730 LDR X25, [X3 + 0x20]
	0x03198734 LDR X8, [X25 + 0xC0]
	0x03198738 LDR X8, [X8]
	0x0319873C LDR W21, [X8 + 0xFC]
	0x03198740 ADD X8, X31, 0x0
	0x03198744 ADD X9, X21, 0xF
	0x03198748 AND X9, X9, 0x1FFFFFFFF
	0x0319874C SUB X22, X8, X9
	0x03198750 ADD X31, X22, 0x0
	0x03198754 ADD X8, X31, 0x0
	0x03198758 SUB X23, X8, X9
	0x0319875C ADD X31, X23, 0x0
	0x03198760 MOV X0, X22
	0x03198764 MOV X2, X21
	0x03198768 BL 0x3EB1AC0
	0x0319876C LDR X8, [X25 + 0xC0]
	0x03198770 SUB X3, X29, 0x18
	0x03198774 SUB X4, X29, 0x10
	0x03198778 MOV X2, X31
	0x0319877C LDR X1, [X8 + 0x8]
	0x03198780 LDR X0, [X1]
	0x03198784 STUR X22, [X29 - 0x18]
	0x03198788 LDR X8, [X1 + 0x10]
	0x0319878C BLR X8
	0x03198790 LDUR X22, [X29 - 0x10]
	0x03198794 MOV X0, X23
	0x03198798 MOV X1, X20
	0x0319879C MOV X2, X21
	0x031987A0 BL 0x3EB1AC0
	0x031987A4 LDR X8, [X19 + 0x20]
	0x031987A8 SUB X3, X29, 0x18
	0x031987AC SUB X4, X29, 0x10
	0x031987B0 MOV X2, X31
	0x031987B4 LDR X8, [X8 + 0xC0]
	0x031987B8 LDR X1, [X8 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X1
	007 Move X1, X31
	008 Move X21, X2
	009 Move X19, X0
	010 Call Monitor.Enter, X0
	011 Move W22, [X19+24]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X8, [X21+32]
	014 Move X8, [X8+192]
	015 Move X0, [X8+16]
	016 Move W8, [X0+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {22}
	021 Call 0x1C5D684
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X8, [X21+32]
	027 Move X8, [X8+192]
	028 Move X0, [X8+16]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+184]
	036 Move W8, [X8]
	037 Compare W8, 0
	038 JumpIfEqual {45}
	039 Move W8, [X19+24]
	040 Compare W8, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X31
	043 Call Environment.get_TickCount
	044 Move [X19+28], W0
	045 NotImplemented "Instruction LDRSW not yet implemented."
	046 Move X9, [X19+16]
	047 Add W10, W8, 1
	048 Move [X19+24], W10
	049 Compare X9, 0
	050 JumpIfEqual {67}
	051 Move W10, [X9+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add X8, X9, X8
	054 Move [X8+32], X20
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X0, X19
	057 Move X1, X31
	058 NotImplemented "Instruction CSET not yet implemented."
	059 Call Monitor.Exit, X0
	060 Move W0, W20
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Return X0
	067 Call 0x1C17F20
	068 Call 0x1C17F28

Method: T[] TryPop()

Disassembly:
	0x031987BC LDR X0, [X1]
	0x031987C0 STUR X23, [X29 - 0x18]
	0x031987C4 LDR X8, [X1 + 0x10]
	0x031987C8 BLR X8
	0x031987CC LDUR X8, [X29 - 0x10]
	0x031987D0 LDR X9, [X24 + 0x28]
	0x031987D4 LDUR X10, [X29 - 0x8]
	0x031987D8 CMP X22, X8
	0x031987DC CSET W0, EQ
	0x031987E0 CMP X9, X10
	0x031987E4 B.NE 0x3198804
	0x031987E8 ADD X31, X29, 0x0
	0x031987EC LDP X20, X19, [X31 + 0x40]
	0x031987F0 LDP X22, X21, [X31 + 0x30]
	0x031987F4 LDP X24, X23, [X31 + 0x20]
	0x031987F8 LDR X25, [X31 + 0x10]
	0x031987FC LDP X29, X30, [X31], #0x50
	0x03198800 RET
	0x03198804 BL 0x3EB1B20
	0x03198808 STP X29, X30, [X31 - 0x30]!
	0x0319880C STR X21, [X31 + 0x10]
	0x03198810 STP X20, X19, [X31 + 0x20]
	0x03198814 ADD X29, X31, 0x0
	0x03198818 SUB X31, X31, 0x20
	0x0319881C MRS X20, 0xC000
	0x03198820 LDR X8, [X20 + 0x28]
	0x03198824 STUR X8, [X29 - 0x8]
	0x03198828 LDR X21, [X2 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call Monitor.Enter, X0
	007 Move W8, [X19+24]
	008 Subtract W8, W8, 1
	009 Move X9, [X19+16]
	010 Move [X19+24], W8
	011 Compare X9, 0
	012 JumpIfEqual {27}
	013 Move W10, [X9+24]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Add X8, X9, W8
	016 Move X20, [X8+32]
	017 Move [X8+32], X31
	018 Move X20, X31
	019 Move X0, X19
	020 Move X1, X31
	021 Call Monitor.Exit, X0
	022 Move X0, X20
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Return X0
	027 Call 0x1C17F20
	028 Call 0x1C17F28

Method: System.Void Trim(System.UInt32 tickCount, System.Int32 id, System.Buffers.TlsOverPerCoreLockedStacksArrayPool`1/MemoryPressure<T> pressure, System.Int32 bucketSize)

Disassembly:
	0x0319882C LDR X8, [X21 + 0xC0]
	0x03198830 LDR X8, [X8]
	0x03198834 LDR W2, [X8 + 0xFC]
	0x03198838 ADD X8, X31, 0x0
	0x0319883C ADD X9, X2, 0xF
	0x03198840 AND X9, X9, 0x1FFFFFFFF
	0x03198844 SUB X19, X8, X9
	0x03198848 ADD X31, X19, 0x0
	0x0319884C MOV X0, X19
	0x03198850 STUR X31, [X29 - 0x18]
	0x03198854 BL 0x3EB1AC0
	0x03198858 LDR X8, [X21 + 0xC0]
	0x0319885C SUB X3, X29, 0x10
	0x03198860 SUB X4, X29, 0x18
	0x03198864 MOV X2, X31
	0x03198868 LDR X1, [X8 + 0x8]
	0x0319886C LDR X0, [X1]
	0x03198870 STUR X19, [X29 - 0x10]
	0x03198874 LDR X8, [X1 + 0x10]
	0x03198878 BLR X8
	0x0319887C SUB X0, X29, 0x18
	0x03198880 MOV X1, X31
	0x03198884 BL 0x337C960
	0x03198888 LDR X8, [X20 + 0x28]
	0x0319888C LDUR X9, [X29 - 0x8]
	0x03198890 CMP X8, X9
	0x03198894 B.NE 0x31988AC
	0x03198898 ADD X31, X29, 0x0
	0x0319889C LDP X20, X19, [X31 + 0x20]
	0x031988A0 LDR X21, [X31 + 0x10]
	0x031988A4 LDP X29, X30, [X31], #0x30
	0x031988A8 RET
	0x031988AC BL 0x3EB1B20
	0x031988B0 STP X30, X19, [X31 - 0x10]!
	0x031988B4 LDR X8, [X2 + 0x20]
	0x031988B8 MOV X19, X1
	0x031988BC LDR X8, [X8 + 0xC0]
	0x031988C0 LDR X0, [X8 + 0x10]
	0x031988C4 LDRB W8, [X0 + 0x135]
	0x031988C8 TBNZ X8, 0x0, 0x31988D0
	0x031988CC BL 0x1C5C684
	0x031988D0 CBZ X19, 0x31988E4
	0x031988D4 LDR X8, [X19]
	0x031988D8 CMP X8, X0
	0x031988DC CSET W0, EQ
	0x031988E0 B 0x31988E8
	0x031988E4 MOV W0, W31
	0x031988E8 LDP X30, X19, [X31], #0x10
	0x031988EC RET
	0x031988F0 STR X30, [X31 - 0x10]!
	0x031988F4 CBZ X0, 0x3198924
	0x031988F8 MOV X1, X31
	0x031988FC BL 0x33BE520
	0x03198900 CBZ X0, 0x3198924
	0x03198904 LDR X8, [X0]
	0x03198908 LDP X9, X1, [X8 + 0x1A8]
	0x0319890C BLR X9
	0x03198910 CBZ X0, 0x3198924
	0x03198914 LDR X8, [X0]
	0x03198918 LDP X2, X1, [X8 + 0x158]
	0x0319891C LDR X30, [X31], #0x10
	0x03198920 BR X2
	0x03198924 BL 0x1C16F20
	0x03198928 LDR X8, [X1 + 0x20]
	0x0319892C LDR X8, [X8 + 0xC0]
	0x03198930 LDR X1, [X8 + 0x18]
	0x03198934 LDR X2, [X1]
	0x03198938 BR X2
	0x0319893C LDR X8, [X4 + 0x20]
	0x03198940 LDR X8, [X8 + 0xC0]
	0x03198944 LDR X1, [X8 + 0x18]
	0x03198948 LDR X2, [X1]
	0x0319894C BR X2
	0x03198950 STR X30, [X31 - 0x30]!
	0x03198954 STP X22, X21, [X31 + 0x10]
	0x03198958 STP X20, X19, [X31 + 0x20]
	0x0319895C ADRP X22, 0x1243000
	0x03198960 ADRP X21, 0xF5B000
	0x03198964 LDRB W8, [X22 + 0xE04]
	0x03198968 LDR X21, [X21 + 0x6C0]
	0x0319896C MOV X20, X4
	0x03198970 MOV X19, X1
	0x03198974 TBNZ X8, 0x0, 0x319898C
	0x03198978 ADRP X0, 0xF5B000
	0x0319897C LDR X0, [X0 + 0x6C0]
	0x03198980 BL 0x1C16CF4
	0x03198984 MOVZ W8, 0x1
	0x03198988 STRB W8, [X22 + 0xE04]
	0x0319898C LDR X8, [X20 + 0x20]
	0x03198990 LDR X0, [X21]
	0x03198994 LDR X8, [X8 + 0xC0]
	0x03198998 LDR W9, [X0 + 0xE0]
	0x0319899C LDR X20, [X8 + 0x28]
	0x031989A0 CBNZ W9, 0x31989A8
	0x031989A4 BL 0x1C16DFC
	0x031989A8 MOV X0, X20
	0x031989AC MOV X1, X31
	0x031989B0 BL 0x338C698
	0x031989B4 CBZ X19, 0x31989D4
	0x031989B8 MOV X1, X0
	0x031989BC MOV X0, X19
	0x031989C0 LDP X20, X19, [X31 + 0x20]
	0x031989C4 LDP X22, X21, [X31 + 0x10]
	0x031989C8 MOV X2, X31
	0x031989CC LDR X30, [X31], #0x30
	0x031989D0 B 0x32A8510
	0x031989D4 BL 0x1C16F20
	0x031989D8 STP X30, X21, [X31 - 0x20]!
	0x031989DC STP X20, X19, [X31 + 0x10]
	0x031989E0 MOV X21, X1
	0x031989E4 MOV X1, X31
	0x031989E8 MOV X20, X2
	0x031989EC MOV X19, X0
	0x031989F0 BL 0x33BDD8C
	0x031989F4 CBNZ X21, 0x3198A0C
	0x031989F8 LDR X8, [X20 + 0x20]
	0x031989FC LDR X8, [X8 + 0xC0]
	0x03198A00 LDR X0, [X8 + 0x40]
	0x03198A04 BL 0x211A0D4
	0x03198A08 MOV X21, X0
	0x03198A0C STR X21, [X19 + 0x10]
	0x03198A10 LDR X8, [X20 + 0x20]
	0x03198A14 LDR X8, [X8 + 0xC0]
	0x03198A18 LDR X0, [X8 + 0x58]
	0x03198A1C LDRB W8, [X0 + 0x135]
	0x03198A20 TBNZ X8, 0x0, 0x3198A28
	0x03198A24 BL 0x1C5C684
	0x03198A28 MOVZ W1, 0x7
	0x03198A2C BL 0x1C16D6C
	0x03198A30 STR X0, [X19 + 0x18]
	0x03198A34 LDP X20, X19, [X31 + 0x10]
	0x03198A38 LDP X30, X21, [X31], #0x20
	0x03198A3C RET
	0x03198A40 STR X30, [X31 - 0x20]!
	0x03198A44 STP X20, X19, [X31 + 0x10]
	0x03198A48 LDR X8, [X1 + 0x20]
	0x03198A4C MOV X20, X1
	0x03198A50 MOV X19, X0
	0x03198A54 LDR X8, [X8 + 0xC0]
	0x03198A58 LDR X8, [X8 + 0x68]
	0x03198A5C LDRB W9, [X8 + 0x135]
	0x03198A60 TBNZ X9, 0x0, 0x3198A70
	0x03198A64 MOV X0, X8
	0x03198A68 BL 0x1C5C684
	0x03198A6C MOV X8, X0
	0x03198A70 MOV X0, X8
	0x03198A74 BL 0x1C16F10
	0x03198A78 LDR X8, [X20 + 0x20]
	0x03198A7C MOV W1, W31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1244000
	009 Move W8, [X24+3584]
	010 Move W22, W4
	011 Move W21, W3
	012 Move W20, W2
	013 Move W23, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xF86000
	020 Move X0, [X0+1968]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+3584], W8
	024 Move W8, [X19+24]
	025 Compare W8, 0
	026 JumpIfEqual {124}
	027 Move [X31+12], W31
	028 Add X1, X31, 12
	029 Move X0, X19
	030 Move X2, X31
	031 Call Monitor.Enter, X0, X1
	032 Move W8, [X19+24]
	033 Move W11, [X19+28]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W9, 0xEA60
	036 Move W10, 0x2710
	037 NotImplemented "Instruction CSEL not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 Subtract W10, W23, W11
	041 NotImplemented "Instruction CSET not yet implemented."
	042 And W11, W12, W11
	043 Move TEMP, X11
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X23, 0xF86000
	049 Move X23, [X23+1968]
	050 Move X0, [X23]
	051 Move W9, [X0+224]
	052 Compare W9, 0
	053 JumpIfNotEqual {57}
	054 Call 0x1C17DFC
	055 Move X0, [X23]
	056 Move W8, [X19+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X9, [X0+184]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W10, 1
	061 Move W11, 8
	062 NotImplemented "Instruction CINC not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction CINC not yet implemented."
	065 Move X22, [X9]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 NotImplemented "Instruction CCMP not yet implemented."
	068 NotImplemented "Instruction CSEL not yet implemented."
	069 Add W23, W9, 1
	070 Subtract W23, W23, 1
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X9, [X19+16]
	073 Subtract W8, W8, 1
	074 Move [X19+24], W8
	075 Compare X9, 0
	076 JumpIfEqual {132}
	077 Move W10, [X9+24]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Add X8, X9, W8
	080 Move X21, [X8+32]
	081 Move [X8+32], X31
	082 Compare X22, 0
	083 JumpIfEqual {133}
	084 Move X0, X22
	085 Move X1, X31
	086 Call EventSource.IsEnabled, X0
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {104}
	091 Compare X21, 0
	092 JumpIfEqual {135}
	093 Move X8, [X21]
	094 Move X9, [X8+344]
	095 Move X1, [X8+352]
	096 Move X0, X21
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move W1, W0
	099 Move W2, [X21+24]
	100 Move X0, X22
	101 Move W3, W20
	102 Move X4, X31
	103 Call ArrayPoolEventSource.BufferTrimmed, X0, X1, X2, X3
	104 Move W8, [X19+24]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move W8, [X19+28]
	107 Move TEMP, 0x3A99
	108 Not TEMP
	109 Move W9, TEMP
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move W9, 0x3A98
	112 Add W8, W8, W9
	113 Move X21, X31
	114 Move [X19+28], W8
	115 Move X21, X31
	116 Move W8, [X31+12]
	117 Compare W8, 0
	118 JumpIfEqual {122}
	119 Move X0, X19
	120 Move X1, X31
	121 Call Monitor.Exit, X0
	122 Compare X21, 0
	123 JumpIfNotEqual {136}
	124 Move X20, [X31+48]
	125 Move X19, [X31+56]
	126 Move X22, [X31+32]
	127 Move X21, [X31+40]
	128 Move X24, [X31+16]
	129 Move X23, [X31+24]
	130 Move X30, [X31+64]
	131 Return 
	132 Call 0x1C17F20
	133 Call 0x1C17F20
	134 Call 0x1C17F28
	135 Call 0x1C17F20
	136 Move X0, X21
	137 Call 0x1C17F18
	138 Move X20, X0
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X0, X20
	141 Call 0x3EB2AD0
	142 Move X21, [X0]
	143 Call 0x3EB2AE0
	144 Move X21, X31
	145 Move X20, X0
	146 Move W8, [X31+12]
	147 Compare W8, 0
	148 JumpIfEqual {152}
	149 Move X0, X19
	150 Move X1, X31
	151 Call Monitor.Exit, X0
	152 Compare X21, 0
	153 JumpIfNotEqual {156}
	154 Move X0, X20
	155 Call 0x1D2D690
	156 Move X0, X21
	157 Call 0x1C17F18
	158 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x03198A80 MOV X20, X0
	0x03198A84 LDR X8, [X8 + 0xC0]
	0x03198A88 LDR X2, [X8 + 0x70]
	0x03198A8C BL 0x2398864
	0x03198A90 CBZ X20, 0x3198AA8
	0x03198A94 STR X19, [X20 + 0x20]
	0x03198A98 MOV X0, X20
	0x03198A9C LDP X20, X19, [X31 + 0x10]
	0x03198AA0 LDR X30, [X31], #0x20
	0x03198AA4 RET
	0x03198AA8 BL 0x1C16F20
	0x03198AAC LDR X8, [X1 + 0x20]
	0x03198AB0 LDR X8, [X8 + 0xC0]
	0x03198AB4 LDR X1, [X8 + 0x80]
	0x03198AB8 B 0x3198A40
	0x03198ABC STR X30, [X31 - 0x20]!
	0x03198AC0 STP X20, X19, [X31 + 0x10]
	0x03198AC4 LDR X20, [X0 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+32]
	004 Move X19, X0
	005 Move X8, [X8+192]
	006 Move X8, [X8+64]
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {15}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X8, X0
	015 Move W1, 8
	016 Move X0, X8
	017 Call 0x1C17D6C
	018 Move [X19+16], X0
	019 Move X0, X19
	020 Move X1, X31
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Call Object..ctor, X0
	024 Return 

