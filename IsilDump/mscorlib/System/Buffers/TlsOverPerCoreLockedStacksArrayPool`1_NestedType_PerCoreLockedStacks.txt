Type: System.Buffers.TlsOverPerCoreLockedStacksArrayPool`1/PerCoreLockedStacks

Method: System.Void .ctor()

Disassembly:
	0x024A2C1C LDR X8, [X21 + 0x20]
	0x024A2C20 ADD X9, X8, 0x135
	0x024A2C24 LDRH W9, [X9]
	0x024A2C28 B 0x24A2C30
	0x024A2C2C MOV X0, X8
	0x024A2C30 LDR X10, [X0 + 0xC0]
	0x024A2C34 LDR X10, [X10 + 0x18]
	0x024A2C38 LDR X21, [X10]
	0x024A2C3C TBNZ X9, 0x0, 0x24A2C4C
	0x024A2C40 MOV X0, X8
	0x024A2C44 BL 0x1C5C684
	0x024A2C48 MOV X8, X0
	0x024A2C4C LDR X8, [X8 + 0xC0]
	0x024A2C50 MOVZ W2, 0x1
	0x024A2C54 MOV X0, X22
	0x024A2C58 MOV W1, W20
	0x024A2C5C LDR X3, [X8 + 0x18]
	0x024A2C60 BLR X21
	0x024A2C64 STP X0, X1, [X19 + 0x10]
	0x024A2C68 LDP X20, X19, [X31 + 0x20]
	0x024A2C6C LDP X22, X21, [X31 + 0x10]
	0x024A2C70 LDR X30, [X31], #0x30
	0x024A2C74 RET
	0x024A2C78 STP X30, X19, [X31 - 0x10]!
	0x024A2C7C LDR X8, [X0]
	0x024A2C80 CBZ X8, 0x24A2C9C
	0x024A2C84 MOV X19, X0
	0x024A2C88 ADD X0, X0, 0x8
	0x024A2C8C MOV X1, X31
	0x024A2C90 BL 0x32C0794
	0x024A2C94 MOVI V0.2D, 0x0
	0x024A2C98 STP V0, V0, [X19]
	0x024A2C9C LDP X30, X19, [X31], #0x10
	0x024A2CA0 RET
	0x024A2CA4 STR X1, [X0 + 0x88]
	0x024A2CA8 RET
	0x024A2CAC LDR W0, [X0 + 0x90]
	0x024A2CB0 RET
	0x024A2CB4 STR W1, [X0 + 0x90]
	0x024A2CB8 RET
	0x024A2CBC STR X30, [X31 - 0x20]!
	0x024A2CC0 STP X20, X19, [X31 + 0x10]
	0x024A2CC4 CBZ X0, 0x24A2CFC
	0x024A2CC8 LDR X8, [X1 + 0x20]
	0x024A2CCC MOV X20, X1
	0x024A2CD0 MOV X19, X0
	0x024A2CD4 LDR X8, [X8 + 0xC0]
	0x024A2CD8 LDR X1, [X8 + 0x8]
	0x024A2CDC BL 0x2D0D634
	0x024A2CE0 LDR X8, [X20 + 0x20]
	0x024A2CE4 MOV X0, X19
	0x024A2CE8 LDP X20, X19, [X31 + 0x10]
	0x024A2CEC LDR X8, [X8 + 0xC0]
	0x024A2CF0 LDR X1, [X8 + 0x10]
	0x024A2CF4 LDR X30, [X31], #0x20
	0x024A2CF8 B 0x24A2D00
	0x024A2CFC BL 0x1C16F20
	0x024A2D00 STR X30, [X31 - 0x20]!
	0x024A2D04 STP X20, X19, [X31 + 0x10]
	0x024A2D08 ADRP X20, 0x1F37000
	0x024A2D0C LDRB W8, [X20 + 0xBBA]
	0x024A2D10 MOV X19, X0
	0x024A2D14 TBNZ X8, 0x0, 0x24A2D2C
	0x024A2D18 ADRP X0, 0x1C7A000
	0x024A2D1C LDR X0, [X0 + 0xE50]
	0x024A2D20 BL 0x1C16CF4
	0x024A2D24 MOVZ W8, 0x1
	0x024A2D28 STRB W8, [X20 + 0xBBA]
	0x024A2D2C CBZ X19, 0x24A2D70
	0x024A2D30 ADRP X20, 0x1C7A000
	0x024A2D34 LDR X20, [X20 + 0xE50]
	0x024A2D38 MOVZ W8, 0x3
	0x024A2D3C STR W8, [X19 + 0x30]
	0x024A2D40 STR X31, [X19 + 0x88]
	0x024A2D44 LDR X0, [X20]
	0x024A2D48 LDR W8, [X0 + 0xE0]
	0x024A2D4C CBNZ W8, 0x24A2D58

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1F38000
	009 Move X21, 0x1C52000
	010 Move W8, [X22+2990]
	011 Move X21, [X21+1448]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x1C52000
	019 Move X0, [X0+1448]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2990], W8
	023 Move X0, X19
	024 Move X1, X31
	025 Call Object..ctor, X0
	026 Move X0, X31
	027 Call Environment.get_ProcessorCount
	028 Move X8, [X21]
	029 Move W21, W0
	030 Move W9, [X8+224]
	031 Compare W9, 0
	032 JumpIfNotEqual {35}
	033 Move X0, X8
	034 Call 0x1C17DFC
	035 Move W1, 64
	036 Move W0, W21
	037 Move X2, X31
	038 Call Math.Min, X0, X1
	039 Move X8, [X20+32]
	040 Move W21, W0
	041 Move X8, [X8+192]
	042 Move X8, [X8]
	043 Move W9, [X8+309]
	044 Move TEMP, X9
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {51}
	048 Move X0, X8
	049 Call 0x1C5D684
	050 Move X8, X0
	051 Move X0, X8
	052 Move W1, W21
	053 Call 0x1C17D6C
	054 Compare X0, 0
	055 JumpIfEqual {91}
	056 Move W8, [X0+24]
	057 Move X21, X0
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X23, X31
	060 Add X24, X21, 32
	061 Move X8, [X20+32]
	062 Move X8, [X8+192]
	063 Move X0, [X8+8]
	064 Move W8, [X0+309]
	065 Move TEMP, X8
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {70}
	069 Call 0x1C5D684
	070 Call 0x1C17F10
	071 Move X8, [X20+32]
	072 Move X22, X0
	073 Move X8, [X8+192]
	074 Move X1, [X8+16]
	075 Call 0x3198A80, X0
	076 Move W8, [X21+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move [X24], X22
	079 Add X23, X23, 1
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move [X19+16], X21
	082 Move X20, [X31+48]
	083 Move X19, [X31+56]
	084 Move X22, [X31+32]
	085 Move X21, [X31+40]
	086 Move X24, [X31+16]
	087 Move X23, [X31+24]
	088 Move X30, [X31+64]
	089 Return 
	090 Call 0x1C17F28
	091 Call 0x1C17F20

Method: System.Void TryPush(T[] array)

Disassembly:
	0x024A2D50 BL 0x1C16DFC
	0x024A2D54 LDR X0, [X20]
	0x024A2D58 LDR X8, [X0 + 0xB8]
	0x024A2D5C LDR W8, [X8 + 0x4]
	0x024A2D60 STR W8, [X19 + 0x90]
	0x024A2D64 LDP X20, X19, [X31 + 0x10]
	0x024A2D68 LDR X30, [X31], #0x20
	0x024A2D6C RET
	0x024A2D70 BL 0x1C16F20
	0x024A2D74 STP X30, X23, [X31 - 0x30]!
	0x024A2D78 STP X22, X21, [X31 + 0x10]
	0x024A2D7C STP X20, X19, [X31 + 0x20]
	0x024A2D80 LDR X8, [X3 + 0x20]
	0x024A2D84 MOV X21, X3
	0x024A2D88 MOV W19, W2
	0x024A2D8C MOV X20, X1
	0x024A2D90 LDRB W9, [X8 + 0x135]
	0x024A2D94 MOV X22, X0
	0x024A2D98 TBNZ X9, 0x0, 0x24A2DA8
	0x024A2D9C MOV X0, X8
	0x024A2DA0 BL 0x1C5C684
	0x024A2DA4 MOV X8, X0
	0x024A2DA8 LDR X8, [X8 + 0xC0]
	0x024A2DAC LDR X0, [X8 + 0x30]
	0x024A2DB0 LDRB W8, [X0 + 0x135]
	0x024A2DB4 TBNZ X8, 0x0, 0x24A2DBC
	0x024A2DB8 BL 0x1C5C684
	0x024A2DBC LDR W8, [X0 + 0xE0]
	0x024A2DC0 CBNZ W8, 0x24A2DC8
	0x024A2DC4 BL 0x1C16DFC
	0x024A2DC8 LDR X0, [X21 + 0x20]
	0x024A2DCC LDRB W8, [X0 + 0x135]
	0x024A2DD0 TBNZ X8, 0x0, 0x24A2DD8
	0x024A2DD4 BL 0x1C5C684
	0x024A2DD8 LDR X8, [X0 + 0xC0]
	0x024A2DDC LDR X0, [X8 + 0x28]
	0x024A2DE0 BL 0x2D0D6C4
	0x024A2DE4 CBZ X0, 0x24A2E34
	0x024A2DE8 MOV X1, X22
	0x024A2DEC MOV X2, X31
	0x024A2DF0 MOV X23, X0
	0x024A2DF4 BL 0x3D9C6C8
	0x024A2DF8 LDR X0, [X21 + 0x20]
	0x024A2DFC LDRB W8, [X0 + 0x135]
	0x024A2E00 TBNZ X8, 0x0, 0x24A2E0C
	0x024A2E04 BL 0x1C5C684
	0x024A2E08 LDR X0, [X21 + 0x20]
	0x024A2E0C STR X20, [X23 + 0x88]
	0x024A2E10 LDRB W8, [X0 + 0x135]
	0x024A2E14 TBNZ X8, 0x0, 0x24A2E1C
	0x024A2E18 BL 0x1C5C684
	0x024A2E1C STR W19, [X23 + 0x90]
	0x024A2E20 LDP X20, X19, [X31 + 0x20]
	0x024A2E24 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1F38000
	008 Move X22, 0x1C7B000
	009 Move W8, [X23+2991]
	010 Move X22, [X22+3656]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x1C7B000
	019 Move X0, [X0+3656]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+2991], W8
	023 Move X0, [X22]
	024 Move X21, [X21+16]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X31
	030 Call RuntimeThread.GetCurrentProcessorId
	031 Compare X21, 0
	032 JumpIfEqual {66}
	033 Move W8, [X21+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction SDIV not yet implemented."
	036 Move W22, W31
	037 NotImplemented "Instruction MSUB not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add X8, X21, W23
	040 Move X0, [X8+32]
	041 Compare X0, 0
	042 JumpIfEqual {66}
	043 Move X8, [X19+32]
	044 Move X1, X20
	045 Move X8, [X8+192]
	046 Move X2, [X8+48]
	047 Call 0x24A7014
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {58}
	052 Move W8, [X21+24]
	053 Add W9, W23, 1
	054 Add W22, W22, 1
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CSINC not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X30, [X31+48]
	063 Move X23, [X31+56]
	064 Return 
	065 Call 0x1C17F28
	066 Call 0x1C17F20

Method: T[] TryPop()

Disassembly:
	0x024A2E28 MOV X0, X23
	0x024A2E2C LDP X30, X23, [X31], #0x30
	0x024A2E30 RET
	0x024A2E34 BL 0x1C16F20
	0x024A2E38 STR X30, [X31 - 0x20]!
	0x024A2E3C STP X20, X19, [X31 + 0x10]
	0x024A2E40 LDR X8, [X1 + 0x20]
	0x024A2E44 MOV X19, X1
	0x024A2E48 MOV X20, X0
	0x024A2E4C LDR X8, [X8 + 0xC0]
	0x024A2E50 LDR X8, [X8 + 0x30]
	0x024A2E54 LDRB W9, [X8 + 0x135]
	0x024A2E58 TBNZ X9, 0x0, 0x24A2E68
	0x024A2E5C MOV X0, X8
	0x024A2E60 BL 0x1C5C684
	0x024A2E64 MOV X8, X0
	0x024A2E68 LDR W9, [X8 + 0xE0]
	0x024A2E6C CBNZ W9, 0x24A2E78
	0x024A2E70 MOV X0, X8
	0x024A2E74 BL 0x1C16DFC
	0x024A2E78 LDR X8, [X19 + 0x20]
	0x024A2E7C MOV X0, X20
	0x024A2E80 LDR X8, [X8 + 0xC0]
	0x024A2E84 LDR X1, [X8 + 0x40]
	0x024A2E88 BL 0x2D0D54C
	0x024A2E8C LDR X8, [X19 + 0x20]
	0x024A2E90 MOV X0, X20
	0x024A2E94 LDP X20, X19, [X31 + 0x10]
	0x024A2E98 LDR X8, [X8 + 0xC0]
	0x024A2E9C LDR X1, [X8 + 0x10]
	0x024A2EA0 LDR X30, [X31], #0x20
	0x024A2EA4 B 0x24A2D00
	0x024A2EA8 LDR W0, [X0 + 0x9C]
	0x024A2EAC RET
	0x024A2EB0 STR W1, [X0 + 0x9C]
	0x024A2EB4 RET
	0x024A2EB8 LDR X0, [X0 + 0xA0]
	0x024A2EBC RET
	0x024A2EC0 STR X1, [X0 + 0xA0]
	0x024A2EC4 RET
	0x024A2EC8 LDRB W0, [X0 + 0xA8]
	0x024A2ECC RET
	0x024A2ED0 AND W8, W1, 0x1
	0x024A2ED4 STRB W8, [X0 + 0xA8]
	0x024A2ED8 RET
	0x024A2EDC LDR W0, [X0 + 0xAC]
	0x024A2EE0 RET
	0x024A2EE4 STR W1, [X0 + 0xAC]
	0x024A2EE8 RET
	0x024A2EEC LDR W0, [X0 + 0xB0]
	0x024A2EF0 RET
	0x024A2EF4 STR W1, [X0 + 0xB0]
	0x024A2EF8 RET
	0x024A2EFC LDP S0, S1, [X0 + 0xB4]
	0x024A2F00 LDR V2, [X0 + 0xBC]
	0x024A2F04 RET
	0x024A2F08 STP S0, S1, [X0 + 0xB4]
	0x024A2F0C STR S2, [X0 + 0xBC]
	0x024A2F10 RET
	0x024A2F14 LDP S0, S1, [X0 + 0xC0]
	0x024A2F18 LDR V2, [X0 + 0xC8]
	0x024A2F1C RET
	0x024A2F20 STP S0, S1, [X0 + 0xC0]
	0x024A2F24 STR S2, [X0 + 0xC8]
	0x024A2F28 RET
	0x024A2F2C LDP S0, S1, [X0 + 0xCC]
	0x024A2F30 LDR V2, [X0 + 0xD4]
	0x024A2F34 RET
	0x024A2F38 STP S0, S1, [X0 + 0xCC]
	0x024A2F3C STR S2, [X0 + 0xD4]
	0x024A2F40 RET
	0x024A2F44 LDR V0, [X0 + 0xD8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1F38000
	008 Move X20, 0x1C7B000
	009 Move W8, [X21+2992]
	010 Move X20, [X20+3656]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1C7B000
	017 Move X0, [X0+3656]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2992], W8
	021 Move X0, [X20]
	022 Move X21, [X19+16]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X31
	028 Call RuntimeThread.GetCurrentProcessorId
	029 Compare X21, 0
	030 JumpIfEqual {79}
	031 Move W8, [X21+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction SDIV not yet implemented."
	034 Move W22, W31
	035 NotImplemented "Instruction MSUB not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Add X8, X21, W23
	038 Move X19, [X8+32]
	039 Compare X19, 0
	040 JumpIfEqual {79}
	041 Move X0, X19
	042 Move X1, X31
	043 Call Monitor.Enter, X0
	044 Move W9, [X19+24]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X8, [X19+16]
	047 Subtract W9, W9, 1
	048 Move [X19+24], W9
	049 Compare X8, 0
	050 JumpIfEqual {79}
	051 Move W10, [X8+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add X8, X8, W9
	054 Move X20, [X8+32]
	055 Move X0, X19
	056 Move X1, X31
	057 Move [X8+32], X31
	058 Call Monitor.Exit, X0
	059 Compare X20, 0
	060 JumpIfEqual {64}
	061 Move X0, X19
	062 Move X1, X31
	063 Call Monitor.Exit, X0
	064 Move W8, [X21+24]
	065 Add W9, W23, 1
	066 Add W22, W22, 1
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CSINC not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X20, X31
	071 Move X0, X20
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Move X23, [X31+56]
	078 Return X0
	079 Call 0x1C17F20
	080 Call 0x1C17F28

Method: System.Boolean Trim(System.UInt32 tickCount, System.Int32 id, System.Buffers.TlsOverPerCoreLockedStacksArrayPool`1/MemoryPressure<T> pressure, System.Int32[] bucketSizes)

Disassembly:
	0x024A2F48 RET
	0x024A2F4C STR S0, [X0 + 0xD8]
	0x024A2F50 RET
	0x024A2F54 LDR W0, [X0 + 0xDC]
	0x024A2F58 RET
	0x024A2F5C STR W1, [X0 + 0xDC]
	0x024A2F60 RET
	0x024A2F64 LDR V0, [X0 + 0xE0]
	0x024A2F68 RET
	0x024A2F6C STR S0, [X0 + 0xE0]
	0x024A2F70 RET
	0x024A2F74 LDR V0, [X0 + 0xE4]
	0x024A2F78 RET
	0x024A2F7C STR S0, [X0 + 0xE4]
	0x024A2F80 RET
	0x024A2F84 STP D9, D8, [X31 - 0x20]!
	0x024A2F88 STP X30, X19, [X31 + 0x10]
	0x024A2F8C LDRB W8, [X0 + 0x84]
	0x024A2F90 MOV X19, X0
	0x024A2F94 CBZ W8, 0x24A2FE0
	0x024A2F98 LDR X8, [X1 + 0x20]
	0x024A2F9C MOV X0, X19
	0x024A2FA0 LDR X8, [X8 + 0xC0]
	0x024A2FA4 LDR X1, [X8 + 0x8]
	0x024A2FA8 BL 0x24A3060
	0x024A2FAC MOV V8.16B, V1.16B
	0x024A2FB0 BL 0x3EB1BD0
	0x024A2FB4 MOV V9.16B, V0.16B
	0x024A2FB8 MOV V0.16B, V8.16B
	0x024A2FBC BL 0x3EB1BD0
	0x024A2FC0 FMUL S0, S9, S0
	0x024A2FC4 BL 0x3EB1BB0
	0x024A2FC8 ADRP X8, 0xFFFFFFFFFE648000
	0x024A2FCC LDR V1, [X8 + 0x180]
	0x024A2FD0 STRB W31, [X19 + 0x84]
	0x024A2FD4 FSUB S0, S1, S0
	0x024A2FD8 STR S0, [X19 + 0x88]
	0x024A2FDC B 0x24A2FE4
	0x024A2FE0 LDR V0, [X19 + 0x88]
	0x024A2FE4 LDP X30, X19, [X31 + 0x10]
	0x024A2FE8 LDP D9, D8, [X31], #0x20
	0x024A2FEC RET
	0x024A2FF0 MOVZ W8, 0x1
	0x024A2FF4 STRB W8, [X0 + 0x84]
	0x024A2FF8 STR S0, [X0 + 0x88]
	0x024A2FFC RET

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, [X0+16]
	010 Compare X24, 0
	011 JumpIfEqual {53}
	012 Move W9, [X24+24]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X19, X5
	015 Move X20, X4
	016 Move W21, W3
	017 Move W22, W2
	018 Move W23, W1
	019 Move W8, W31
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Compare X20, 0
	022 JumpIfEqual {53}
	023 Move W9, [X20+24]
	024 Move X25, W8
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Add X8, X24, X25
	027 Move X0, [X8+32]
	028 Compare X0, 0
	029 JumpIfEqual {53}
	030 Move X8, [X19+32]
	031 Add X9, X20, X25
	032 Move W4, [X9+32]
	033 Move W1, W23
	034 Move X8, [X8+192]
	035 Move W2, W22
	036 Move W3, W21
	037 Move X5, [X8+72]
	038 Call 0x319882C, X0, X1, X2, X3, X4
	039 Move W9, [X24+24]
	040 Add W8, W25, 1
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X20, [X31+48]
	043 Move X19, [X31+56]
	044 Move X22, [X31+32]
	045 Move X21, [X31+40]
	046 Move X24, [X31+16]
	047 Move X23, [X31+24]
	048 Move W0, 1
	049 Move X30, [X31+64]
	050 Move X25, [X31+72]
	051 Return X0
	052 Call 0x1C17F28
	053 Call 0x1C17F20

