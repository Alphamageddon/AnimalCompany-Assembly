Type: System.Buffers.TlsOverPerCoreLockedStacksArrayPool`1

Method: System.Void .ctor()

Disassembly:
	0x026F00B4 MOV X0, X20
	0x026F00B8 BLR X8
	0x026F00BC CBNZ X19, 0x26F00F8
	0x026F00C0 LDP X20, X19, [X31 + 0x50]
	0x026F00C4 LDP X22, X21, [X31 + 0x40]
	0x026F00C8 LDP X24, X23, [X31 + 0x30]
	0x026F00CC LDP X26, X25, [X31 + 0x20]
	0x026F00D0 LDP X28, X27, [X31 + 0x10]
	0x026F00D4 MOVZ W0, 0x1
	0x026F00D8 LDR X30, [X31], #0x60
	0x026F00DC RET
	0x026F00E0 BL 0x1C16F28
	0x026F00E4 BL 0x1C16F28
	0x026F00E8 BL 0x1C16F20
	0x026F00EC BL 0x1C16F20
	0x026F00F0 BL 0x1C16F20
	0x026F00F4 BL 0x1C16F20
	0x026F00F8 MOV X0, X19
	0x026F00FC BL 0x1C16F18
	0x026F0100 BL 0x1C16F20
	0x026F0104 MOV X0, X20
	0x026F0108 BL 0x1C16F18
	0x026F010C B 0x26F01D4
	0x026F0110 B 0x26F012C
	0x026F0114 B 0x26F01D4
	0x026F0118 B 0x26F012C
	0x026F011C B 0x26F012C
	0x026F0120 B 0x26F01D4
	0x026F0124 B 0x26F01D4
	0x026F0128 B 0x26F012C
	0x026F012C MOV X22, X0
	0x026F0130 CMP W1, 0x1
	0x026F0134 B.NE 0x26F014C
	0x026F0138 MOV X0, X22
	0x026F013C BL 0x3EB1AD0
	0x026F0140 LDR X19, [X0]
	0x026F0144 BL 0x3EB1AE0
	0x026F0148 B 0x26F0058
	0x026F014C MOV X19, X31
	0x026F0150 B 0x26F0158
	0x026F0154 MOV X22, X0
	0x026F0158 CBZ X20, 0x26F01BC
	0x026F015C ADRP X10, 0x1A03000
	0x026F0160 LDR X8, [X20]
	0x026F0164 LDR X10, [X10 + 0xE00]
	0x026F0168 LDRH W9, [X8 + 0x12E]
	0x026F016C LDR X1, [X10]
	0x026F0170 CBZ X9, 0x26F0194
	0x026F0174 LDR X10, [X8 + 0xB0]
	0x026F0178 ADD X10, X10, 0x8
	0x026F017C LDUR X11, [X10 - 0x8]
	0x026F0180 CMP X11, X1
	0x026F0184 B.EQ 0x26F01A4
	0x026F0188 SUBS X9, X9, 0x1
	0x026F018C ADD X10, X10, 0x10
	0x026F0190 B.NE 0x26F017C
	0x026F0194 MOV X0, X20
	0x026F0198 MOV W2, W31
	0x026F019C BL 0x1C5C788
	0x026F01A0 B 0x26F01B0
	0x026F01A4 LDRSW X9, [X10]
	0x026F01A8 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1CEB000
	006 Move W8, [X21+1339]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x1A05000
	014 Move X0, [X0+3672]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1339], W8
	018 Move X8, [X20+32]
	019 Move X8, [X8+192]
	020 Move X0, [X8]
	021 Move W8, [X0+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {27}
	026 Call 0x1C5D684
	027 Move W1, 17
	028 Call 0x1C17D6C
	029 Move [X19+24], X0
	030 Move X8, [X20+32]
	031 Move X8, [X8+192]
	032 Move X0, [X8+32]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Move X21, 0x1A05000
	040 Move W8, [X0+224]
	041 Move X21, [X21+3672]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X8, [X20+32]
	046 Move X0, X19
	047 Move X8, [X8+192]
	048 Move X1, [X8+24]
	049 Call 0x2B88528, X0
	050 Move X0, [X21]
	051 Move W1, 17
	052 Call 0x1C17D6C
	053 Compare X0, 0
	054 JumpIfEqual {76}
	055 Move W8, [X0+24]
	056 Move X9, X8
	057 ShiftRight X9, 32
	058 And X9, X9, 0x7FFFFFFF
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X9, X31
	061 Move X10, W8
	062 Add X11, X0, 32
	063 Move W12, 16
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction LSLV not yet implemented."
	066 Move [X11], W13
	067 Add X9, X9, 1
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move [X19+16], X0
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X30, [X31+32]
	073 Move X21, [X31+40]
	074 Return 
	075 Call 0x1C17F28
	076 Call 0x1C17F20

Method: System.Buffers.TlsOverPerCoreLockedStacksArrayPool`1/PerCoreLockedStacks<T> CreatePerCoreLockedStacks(System.Int32 bucketIndex)

Disassembly:
	0x026F01AC ADD X0, X8, 0x138
	0x026F01B0 LDP X8, X1, [X0]
	0x026F01B4 MOV X0, X20
	0x026F01B8 BLR X8
	0x026F01BC CBZ X19, 0x26F0270
	0x026F01C0 MOV X0, X19
	0x026F01C4 BL 0x1C16F18
	0x026F01C8 B 0x26F01D4
	0x026F01CC B 0x26F01D4
	0x026F01D0 B 0x26F01D4
	0x026F01D4 MOV X22, X0
	0x026F01D8 CMP W1, 0x1
	0x026F01DC B.NE 0x26F01FC
	0x026F01E0 MOV X0, X22
	0x026F01E4 BL 0x3EB1AD0
	0x026F01E8 LDR X20, [X0]
	0x026F01EC BL 0x3EB1AE0
	0x026F01F0 MOVZ W22, 0x1
	0x026F01F4 CBNZ X21, 0x26EFE38
	0x026F01F8 B 0x26EFE98
	0x026F01FC MOV X20, X31
	0x026F0200 B 0x26F0208
	0x026F0204 MOV X22, X0
	0x026F0208 CBZ X21, 0x26F026C
	0x026F020C ADRP X10, 0x1A03000
	0x026F0210 LDR X8, [X21]
	0x026F0214 LDR X10, [X10 + 0xE00]
	0x026F0218 LDRH W9, [X8 + 0x12E]
	0x026F021C LDR X1, [X10]
	0x026F0220 CBZ X9, 0x26F0244
	0x026F0224 LDR X10, [X8 + 0xB0]
	0x026F0228 ADD X10, X10, 0x8
	0x026F022C LDUR X11, [X10 - 0x8]
	0x026F0230 CMP X11, X1
	0x026F0234 B.EQ 0x26F0254
	0x026F0238 SUBS X9, X9, 0x1
	0x026F023C ADD X10, X10, 0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X21, X2
	007 Move W19, W1
	008 Move X20, X0
	009 Move X8, [X8+192]
	010 Move X8, [X8+40]
	011 Move W9, [X8+309]
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X8
	017 Call 0x1C5D684
	018 Move X8, X0
	019 Move X0, X8
	020 Call 0x1C17F10
	021 Move X8, [X21+32]
	022 Move X21, X0
	023 Move X8, [X8+192]
	024 Move X1, [X8+48]
	025 Call 0x24A2C1C, X0
	026 Move X8, [X20+24]
	027 Compare X8, 0
	028 JumpIfEqual {43}
	029 Move W9, [X8+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Add X8, X8, W19
	032 Add X0, X8, 32
	033 Move X1, X21
	034 Move X2, X31
	035 Call 0x1C25138
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0
	043 Call 0x1C17F20
	044 Call 0x1C17F28

Method: System.Int32 get_Id()

Disassembly:
	0x026F0240 B.NE 0x26F022C
	0x026F0244 MOV X0, X21
	0x026F0248 MOV W2, W31
	0x026F024C BL 0x1C5C788
	0x026F0250 B 0x26F0260
	0x026F0254 LDRSW X9, [X10]
	0x026F0258 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move X8, [X0]
	005 Move X2, [X8+344]
	006 Move X1, [X8+352]
	007 Move X30, [X31+16]
	008 CallNoReturn X2
	009 Call 0x1C17F20

Method: T[] Rent(System.Int32 minimumLength)

Disassembly:
	0x026F025C ADD X0, X8, 0x138
	0x026F0260 LDP X8, X1, [X0]
	0x026F0264 MOV X0, X21
	0x026F0268 BLR X8
	0x026F026C CBNZ X20, 0x26F0278
	0x026F0270 MOV X0, X22
	0x026F0274 BL 0x1D2C690
	0x026F0278 MOV X0, X20
	0x026F027C BL 0x1C16F18
	0x026F0280 BL 0x1990590
	0x026F0284 STR X30, [X31 - 0x20]!
	0x026F0288 STP X20, X19, [X31 + 0x10]
	0x026F028C LDR X8, [X1 + 0x20]
	0x026F0290 MOV X20, X1
	0x026F0294 MOV X19, X0
	0x026F0298 LDRB W9, [X8 + 0x135]
	0x026F029C TBNZ X9, 0x0, 0x26F02AC
	0x026F02A0 MOV X0, X8
	0x026F02A4 BL 0x1C5C684
	0x026F02A8 MOV X8, X0
	0x026F02AC LDR X8, [X8 + 0xC0]
	0x026F02B0 LDR X1, [X8 + 0x8]
	0x026F02B4 LDRB W8, [X1 + 0x135]
	0x026F02B8 TBNZ X8, 0x0, 0x26F02C8
	0x026F02BC MOV X0, X1
	0x026F02C0 BL 0x1C5C684
	0x026F02C4 MOV X1, X0
	0x026F02C8 CBZ X19, 0x26F0348
	0x026F02CC LDR X8, [X19]
	0x026F02D0 CMP X8, X1
	0x026F02D4 B.NE 0x26F0340
	0x026F02D8 LDR X0, [X20 + 0x20]
	0x026F02DC LDRB W8, [X0 + 0x135]
	0x026F02E0 TBNZ X8, 0x0, 0x26F02E8
	0x026F02E4 BL 0x1C5C684
	0x026F02E8 LDR X8, [X0 + 0xC0]
	0x026F02EC LDR X1, [X8 + 0x8]
	0x026F02F0 LDRB W8, [X1 + 0x135]
	0x026F02F4 TBNZ X8, 0x0, 0x26F0304
	0x026F02F8 MOV X0, X1
	0x026F02FC BL 0x1C5C684
	0x026F0300 MOV X1, X0
	0x026F0304 LDR X8, [X19]
	0x026F0308 CMP X8, X1
	0x026F030C B.NE 0x26F0340
	0x026F0310 LDR X0, [X20 + 0x20]
	0x026F0314 LDRB W8, [X0 + 0x135]
	0x026F0318 TBNZ X8, 0x0, 0x26F0320
	0x026F031C BL 0x1C5C684
	0x026F0320 LDR X8, [X0 + 0xC0]
	0x026F0324 MOV X0, X19
	0x026F0328 LDR X1, [X8 + 0x100]
	0x026F032C BL 0x26EFA78
	0x026F0330 LDP X20, X19, [X31 + 0x10]
	0x026F0334 MOVZ W0, 0x1
	0x026F0338 LDR X30, [X31], #0x20
	0x026F033C RET
	0x026F0340 MOV X0, X19
	0x026F0344 BL 0x1C171E0
	0x026F0348 BL 0x1C16F20
	0x026F034C SUB X31, X31, 0x40
	0x026F0350 STR X30, [X31 + 0x20]
	0x026F0354 STP X20, X19, [X31 + 0x30]
	0x026F0358 ADRP X20, 0x1CEA000
	0x026F035C ADRP X19, 0x1A0A000
	0x026F0360 LDRB W8, [X20 + 0x53F]
	0x026F0364 LDR X19, [X19 + 0xC10]
	0x026F0368 TBNZ X8, 0x0, 0x26F0380
	0x026F036C ADRP X0, 0x1A0A000
	0x026F0370 LDR X0, [X0 + 0xC10]
	0x026F0374 BL 0x1C16CF4
	0x026F0378 MOVZ W8, 0x1
	0x026F037C STRB W8, [X20 + 0x53F]
	0x026F0380 LDR X0, [X19]
	0x026F0384 STR X31, [X31 + 0x28]
	0x026F0388 STP X31, X31, [X31 + 0x10]
	0x026F038C STR X31, [X31 + 0x8]
	0x026F0390 LDR W8, [X0 + 0xE0]
	0x026F0394 CBNZ W8, 0x26F039C
	0x026F0398 BL 0x1C16DFC
	0x026F039C ADD X0, X31, 0x2C
	0x026F03A0 ADD X1, X31, 0x18
	0x026F03A4 ADD X2, X31, 0x28
	0x026F03A8 ADD X3, X31, 0x10
	0x026F03AC ADD X4, X31, 0x8
	0x026F03B0 MOV X5, X31
	0x026F03B4 BL 0x33B3DDC
	0x026F03B8 LDP S0, S1, [X31 + 0x28]
	0x026F03BC ADRP X8, 0xFFFFFFFFFE3FD000
	0x026F03C0 ADRP X9, 0xFFFFFFFFFE3FD000
	0x026F03C4 LDR V2, [X8 + 0x4C0]
	0x026F03C8 LDR V3, [X9 + 0x828]
	0x026F03CC UCVTF D1, D1
	0x026F03D0 UCVTF D0, D0
	0x026F03D4 FMUL D2, D1, D2
	0x026F03D8 FMUL D1, D1, D3
	0x026F03DC LDP X20, X19, [X31 + 0x30]
	0x026F03E0 LDR X30, [X31 + 0x20]
	0x026F03E4 FCMP D1, D0
	0x026F03E8 CSET W8, LS
	0x026F03EC FCMP D2, D0
	0x026F03F0 MOVZ W9, 0x2
	0x026F03F4 CSEL W0, W8, W9, HI
	0x026F03F8 ADD X31, X31, 0x40
	0x026F03FC RET
	0x026F0400 MOVZ W0, 0x1
	0x026F0404 RET
	0x026F0408 STR X30, [X31 - 0x20]!
	0x026F040C STP X20, X19, [X31 + 0x10]
	0x026F0410 MOV X19, X0
	0x026F0414 LDR X0, [X0 + 0x20]
	0x026F0418 ADD X8, X0, 0x135
	0x026F041C LDRH W8, [X8]
	0x026F0420 TBNZ X8, 0x0, 0x26F0434
	0x026F0424 BL 0x1C5C684
	0x026F0428 LDR X0, [X19 + 0x20]
	0x026F042C ADD X8, X0, 0x135
	0x026F0430 LDRH W8, [X8]
	0x026F0434 TBNZ X8, 0x0, 0x26F043C
	0x026F0438 BL 0x1C5C684
	0x026F043C LDR X8, [X0 + 0xC0]
	0x026F0440 LDR X0, [X8 + 0x58]
	0x026F0444 LDRB W8, [X0 + 0x135]
	0x026F0448 TBNZ X8, 0x0, 0x26F0450
	0x026F044C BL 0x1C5C684
	0x026F0450 LDR X8, [X0 + 0xB8]
	0x026F0454 MOVZ W9, 0x1
	0x026F0458 STRB W9, [X8]
	0x026F045C LDR X0, [X19 + 0x20]
	0x026F0460 LDRB W8, [X0 + 0x135]
	0x026F0464 TBNZ X8, 0x0, 0x26F046C
	0x026F0468 BL 0x1C5C684
	0x026F046C LDR X8, [X0 + 0xC0]
	0x026F0470 LDR X0, [X8 + 0x58]
	0x026F0474 LDRB W8, [X0 + 0x135]
	0x026F0478 TBNZ X8, 0x0, 0x26F0480
	0x026F047C BL 0x1C5C684
	0x026F0480 LDR X8, [X0 + 0xB8]
	0x026F0484 LDRB W8, [X8]
	0x026F0488 CBZ W8, 0x26F04E4
	0x026F048C LDR X0, [X19 + 0x20]
	0x026F0490 LDRB W8, [X0 + 0x135]
	0x026F0494 TBNZ X8, 0x0, 0x26F049C
	0x026F0498 BL 0x1C5C684
	0x026F049C LDR X8, [X0 + 0xC0]
	0x026F04A0 LDR X0, [X8 + 0x80]
	0x026F04A4 LDRB W8, [X0 + 0x135]
	0x026F04A8 TBNZ X8, 0x0, 0x26F04B0
	0x026F04AC BL 0x1C5C684
	0x026F04B0 BL 0x1C16F10
	0x026F04B4 LDR X8, [X19 + 0x20]
	0x026F04B8 MOV X20, X0
	0x026F04BC LDRB W9, [X8 + 0x135]
	0x026F04C0 TBNZ X9, 0x0, 0x26F04D0
	0x026F04C4 MOV X0, X8
	0x026F04C8 BL 0x1C5C684
	0x026F04CC MOV X8, X0
	0x026F04D0 LDR X8, [X8 + 0xC0]
	0x026F04D4 MOV X0, X20
	0x026F04D8 LDR X1, [X8 + 0x110]
	0x026F04DC BL 0x29964AC
	0x026F04E0 B 0x26F04E8
	0x026F04E4 MOV X20, X31
	0x026F04E8 LDR X0, [X19 + 0x20]
	0x026F04EC LDRB W8, [X0 + 0x135]
	0x026F04F0 TBNZ X8, 0x0, 0x26F04F8
	0x026F04F4 BL 0x1C5C684
	0x026F04F8 LDR X8, [X0 + 0xC0]
	0x026F04FC LDR X0, [X8 + 0x58]
	0x026F0500 LDRB W8, [X0 + 0x135]
	0x026F0504 TBNZ X8, 0x0, 0x26F050C
	0x026F0508 BL 0x1C5C684
	0x026F050C LDR X8, [X0 + 0xB8]
	0x026F0510 STR X20, [X8 + 0x8]
	0x026F0514 LDR X0, [X19 + 0x20]
	0x026F0518 LDRB W8, [X0 + 0x135]
	0x026F051C TBNZ X8, 0x0, 0x26F0524
	0x026F0520 BL 0x1C5C684
	0x026F0524 LDR X8, [X0 + 0xC0]
	0x026F0528 LDR X0, [X8 + 0x58]
	0x026F052C LDRB W8, [X0 + 0x135]
	0x026F0530 TBNZ X8, 0x0, 0x26F0540
	0x026F0534 LDP X20, X19, [X31 + 0x10]
	0x026F0538 LDR X30, [X31], #0x20
	0x026F053C B 0x1C5C684
	0x026F0540 LDP X20, X19, [X31 + 0x10]
	0x026F0544 LDR X30, [X31], #0x20
	0x026F0548 RET
	0x026F054C STP X30, X21, [X31 - 0x20]!
	0x026F0550 STP X20, X19, [X31 + 0x10]
	0x026F0554 ADRP X21, 0x1CEA000
	0x026F0558 LDRB W8, [X21 + 0x540]
	0x026F055C MOV X20, X1
	0x026F0560 MOV X19, X0
	0x026F0564 TBNZ X8, 0x0, 0x26F057C
	0x026F0568 ADRP X0, 0x1A04000
	0x026F056C LDR X0, [X0 + 0xE58]
	0x026F0570 BL 0x1C16CF4
	0x026F0574 MOVZ W8, 0x1
	0x026F0578 STRB W8, [X21 + 0x540]
	0x026F057C LDR X8, [X20 + 0x20]
	0x026F0580 LDR X8, [X8 + 0xC0]
	0x026F0584 LDR X0, [X8]
	0x026F0588 LDRB W8, [X0 + 0x135]
	0x026F058C TBNZ X8, 0x0, 0x26F0594
	0x026F0590 BL 0x1C5C684
	0x026F0594 MOVZ W1, 0x11
	0x026F0598 BL 0x1C16D6C
	0x026F059C STR X0, [X19 + 0x18]
	0x026F05A0 LDR X8, [X20 + 0x20]
	0x026F05A4 LDR X8, [X8 + 0xC0]
	0x026F05A8 LDR X0, [X8 + 0x20]
	0x026F05AC LDRB W8, [X0 + 0x135]
	0x026F05B0 TBNZ X8, 0x0, 0x26F05B8
	0x026F05B4 BL 0x1C5C684
	0x026F05B8 ADRP X21, 0x1A04000
	0x026F05BC LDR W8, [X0 + 0xE0]
	0x026F05C0 LDR X21, [X21 + 0xE58]
	0x026F05C4 CBNZ W8, 0x26F05CC
	0x026F05C8 BL 0x1C16DFC
	0x026F05CC LDR X8, [X20 + 0x20]
	0x026F05D0 MOV X0, X19
	0x026F05D4 LDR X8, [X8 + 0xC0]
	0x026F05D8 LDR X1, [X8 + 0x18]
	0x026F05DC BL 0x2B87660
	0x026F05E0 LDR X0, [X21]
	0x026F05E4 MOVZ W1, 0x11
	0x026F05E8 BL 0x1C16D6C
	0x026F05EC CBZ X0, 0x26F0640
	0x026F05F0 LDR W8, [X0 + 0x18]
	0x026F05F4 UBFM X9, X8, 0x20, 0x1F
	0x026F05F8 CMP X9, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x1CEB000
	009 Move W8, [X20+1340]
	010 Move X22, X2
	011 Move W23, W1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x1A2E000
	018 Move X0, [X0+1968]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1340], W8
	022 Move TEMP, X23
	023 And TEMP, TEMP, -2147483648
	024 Compare TEMP, -2147483648
	025 JumpIfEqual {282}
	026 Compare W23, 0
	027 JumpIfEqual {119}
	028 Move X20, 0x1A2E000
	029 Move X20, [X20+1968]
	030 Move X0, [X20]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X20]
	036 Subtract W9, W23, 1
	037 Move W8, W9
	038 ShiftRight W8, 20
	039 And W8, W8, 0x7FFFFFFF
	040 Move W10, 4
	041 Move W11, 20
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSEL not yet implemented."
	044 Move W12, 8
	045 NotImplemented "Instruction CSET not yet implemented."
	046 NotImplemented "Instruction LSRV not yet implemented."
	047 Move W10, W11
	048 ShiftRight W10, 28
	049 And W10, W10, 0x7FFFFFF
	050 NotImplemented "Instruction BFM not yet implemented."
	051 Move W11, W9
	052 ShiftRight W11, 8
	053 And W11, W11, 0x7FFFFFFF
	054 NotImplemented "Instruction CMP not yet implemented."
	055 NotImplemented "Instruction CSEL not yet implemented."
	056 NotImplemented "Instruction CSEL not yet implemented."
	057 Move W11, W9
	058 ShiftRight W11, 4
	059 And W11, W11, 0x7FFFFFFF
	060 Or W12, W10, 4
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CSEL not yet implemented."
	063 NotImplemented "Instruction CSEL not yet implemented."
	064 Move X8, [X19+24]
	065 Move W11, W9
	066 ShiftRight W11, 2
	067 And W11, W11, 0x7FFFFFFF
	068 Or W12, W10, 2
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CSEL not yet implemented."
	071 NotImplemented "Instruction CSEL not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CSET not yet implemented."
	074 NotImplemented "Instruction CINC not yet implemented."
	075 Compare X8, 0
	076 JumpIfEqual {281}
	077 Move X12, [X0+184]
	078 Move X13, [X22+32]
	079 NotImplemented "Instruction LSRV not yet implemented."
	080 Move W11, [X8+24]
	081 Move X20, [X12]
	082 Move X8, [X13+192]
	083 Add W21, W9, W10
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X0, [X8+88]
	086 Move W8, [X0+309]
	087 Move TEMP, X8
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {92}
	091 Call 0x1C5D684
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X8, [X22+32]
	097 Move X8, [X8+192]
	098 Move X0, [X8+88]
	099 Move W8, [X0+309]
	100 Move TEMP, X8
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {105}
	104 Call 0x1C5D684
	105 Call 0x1C17D0C
	106 Move X8, [X0]
	107 Compare X8, 0
	108 JumpIfEqual {157}
	109 Move W9, [X8+24]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Add X8, X8, W21
	112 Add X8, X8, 32
	113 Move X23, [X8]
	114 Compare X23, 0
	115 JumpIfEqual {157}
	116 Move [X8], X31
	117 Compare X20, 0
	118 JumpIfNotEqual {176}
	119 Move X8, [X22+32]
	120 Move X8, [X8+192]
	121 Move X19, [X8+64]
	122 Move X8, [X19+56]
	123 Compare X8, 0
	124 JumpIfNotEqual {128}
	125 Move X0, X19
	126 Call 0x1C5D6E0
	127 Move X8, [X19+56]
	128 Move X0, [X8+16]
	129 Move W8, [X0+309]
	130 Move TEMP, X8
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfEqual {135}
	134 Call 0x1C5D684
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Move X8, [X19+56]
	140 Move X0, [X8+16]
	141 Move W8, [X0+309]
	142 Move TEMP, X8
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfEqual {147}
	146 Call 0x1C5D684
	147 Move X8, [X0+184]
	148 Move X23, [X8]
	149 Move X0, [X8+112]
	150 Move W8, [X0+309]
	151 Move TEMP, X8
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfEqual {156}
	155 Call 0x1C5D684
	156 Move W1, W23
	157 Move X8, [X19+24]
	158 Compare X8, 0
	159 JumpIfEqual {281}
	160 Move W9, [X8+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X24, W21
	163 Add X8, X8, X24
	164 Move X0, [X8+32]
	165 Compare X0, 0
	166 JumpIfEqual {201}
	167 Move X8, [X22+32]
	168 Move X8, [X8+192]
	169 Move X1, [X8+104]
	170 Call 0x26F54B4
	171 Compare X0, 0
	172 JumpIfEqual {201}
	173 Compare X20, 0
	174 JumpIfEqual {281}
	175 Move X23, X0
	176 Move X0, X20
	177 Move X1, X31
	178 Call EventSource.IsEnabled, X0
	179 Move TEMP, X0
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfNotEqual {272}
	183 Move X8, [X23]
	184 Move X0, X23
	185 Move X9, [X8+344]
	186 Move X1, [X8+352]
	187 NotImplemented "Instruction BLR not yet implemented."
	188 Move X8, [X19]
	189 Move W22, W0
	190 Move X0, X19
	191 Move X9, [X8+344]
	192 Move X1, [X8+352]
	193 NotImplemented "Instruction BLR not yet implemented."
	194 Move W2, [X23+24]
	195 Move W3, W0
	196 Move X0, X20
	197 Move W1, W22
	198 Move W4, W21
	199 Move X5, X31
	200 Call ArrayPoolEventSource.BufferRented, X0, X1, X2, X3, X4
	201 Move X8, [X19+16]
	202 Compare X8, 0
	203 JumpIfEqual {281}
	204 Move W9, [X8+24]
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move X9, [X22+32]
	207 Add X8, X8, X24
	208 Move W22, [X8+32]
	209 Move X9, [X9+192]
	210 Move X0, [X9+112]
	211 Move W9, [X0+309]
	212 Move TEMP, X9
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfEqual {217}
	216 Call 0x1C5D684
	217 Move W1, W22
	218 Call 0x1C17D6C
	219 Move X23, X0
	220 Compare X20, 0
	221 JumpIfEqual {281}
	222 Move X0, X20
	223 Move X1, X31
	224 Call EventSource.IsEnabled, X0
	225 Move TEMP, X0
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfNotEqual {272}
	229 Compare X23, 0
	230 JumpIfEqual {281}
	231 Move X8, [X23]
	232 Move X0, X23
	233 Move X9, [X8+344]
	234 Move X1, [X8+352]
	235 NotImplemented "Instruction BLR not yet implemented."
	236 Move X8, [X19]
	237 Move W22, W0
	238 Move X0, X19
	239 Move X9, [X8+344]
	240 Move X1, [X8+352]
	241 NotImplemented "Instruction BLR not yet implemented."
	242 Move W2, [X23+24]
	243 Move W3, W0
	244 Move TEMP, 0
	245 Not TEMP
	246 Move W4, TEMP
	247 Move X0, X20
	248 Move W1, W22
	249 Move X5, X31
	250 Call ArrayPoolEventSource.BufferRented, X0, X1, X2, X3, X4
	251 Move X8, [X19]
	252 Move X0, X19
	253 Move X9, [X8+344]
	254 Move X1, [X8+352]
	255 NotImplemented "Instruction BLR not yet implemented."
	256 Move X8, [X19+24]
	257 Compare X8, 0
	258 JumpIfEqual {281}
	259 Move W8, [X8+24]
	260 Move W2, [X23+24]
	261 Move W3, W0
	262 Move TEMP, 0
	263 Not TEMP
	264 Move W4, TEMP
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Move W8, 1
	267 NotImplemented "Instruction CINC not yet implemented."
	268 Move X0, X20
	269 Move W1, W22
	270 Move X6, X31
	271 Call ArrayPoolEventSource.BufferAllocated, X0, X1, X2, X3, X4, X5
	272 Move X0, X23
	273 Move X20, [X31+48]
	274 Move X19, [X31+56]
	275 Move X22, [X31+32]
	276 Move X21, [X31+40]
	277 Move X24, [X31+16]
	278 Move X23, [X31+24]
	279 Move X30, [X31+64]
	280 Return X0
	281 Call 0x1C17F20
	282 Move X0, 0x1A0C000
	283 Move X0, [X0+1888]
	284 Call 0x1C17D08
	285 Call 0x1C17F10
	286 Move X19, X0
	287 Move X0, 0x1A2E000
	288 Move X0, [X0+1976]
	289 Call 0x1C17D08
	290 Move X1, X0
	291 Move X0, X19
	292 Move X2, X31
	293 Call ArgumentOutOfRangeException..ctor, X0, X1
	294 Move X0, X19
	295 Move X1, X22
	296 Call 0x1C17DEC
	297 Call 0x1C17F28

Method: System.Void Return(T[] array, System.Boolean clearArray = False)

Disassembly:
	0x026F05FC B.LT 0x26F062C
	0x026F0600 MOV X9, X31
	0x026F0604 SXTW X10, W8
	0x026F0608 ADD X11, X0, 0x20
	0x026F060C MOVZ W12, 0x10
	0x026F0610 CMP X9, X8
	0x026F0614 B.CS 0x26F063C
	0x026F0618 LSLV W13, W12, W9
	0x026F061C STR W13, [X11, X9, LSL #2]
	0x026F0620 ADD X9, X9, 0x1
	0x026F0624 CMP X10, X9
	0x026F0628 B.NE 0x26F0610
	0x026F062C STR X0, [X19 + 0x10]
	0x026F0630 LDP X20, X19, [X31 + 0x10]
	0x026F0634 LDP X30, X21, [X31], #0x20
	0x026F0638 RET
	0x026F063C BL 0x1C16F28
	0x026F0640 BL 0x1C16F20
	0x026F0644 STP X30, X21, [X31 - 0x20]!
	0x026F0648 STP X20, X19, [X31 + 0x10]
	0x026F064C LDR X8, [X2 + 0x20]
	0x026F0650 MOV X21, X2
	0x026F0654 MOV W19, W1
	0x026F0658 MOV X20, X0
	0x026F065C LDR X8, [X8 + 0xC0]
	0x026F0660 LDR X8, [X8 + 0x28]
	0x026F0664 LDRB W9, [X8 + 0x135]
	0x026F0668 TBNZ X9, 0x0, 0x26F0678
	0x026F066C MOV X0, X8
	0x026F0670 BL 0x1C5C684
	0x026F0674 MOV X8, X0
	0x026F0678 MOV X0, X8
	0x026F067C BL 0x1C16F10
	0x026F0680 LDR X8, [X21 + 0x20]
	0x026F0684 MOV X21, X0
	0x026F0688 LDR X8, [X8 + 0xC0]
	0x026F068C LDR X1, [X8 + 0x30]
	0x026F0690 BL 0x24A2000
	0x026F0694 LDR X8, [X20 + 0x18]
	0x026F0698 CBZ X8, 0x26F06D0
	0x026F069C LDR W9, [X8 + 0x18]
	0x026F06A0 CMP W9, W19
	0x026F06A4 B.LS 0x26F06D4
	0x026F06A8 ADD X8, X8, W19, 0x3, SXTW
	0x026F06AC ADD X0, X8, 0x20
	0x026F06B0 MOV X1, X21
	0x026F06B4 MOV X2, X31
	0x026F06B8 BL 0x1C24138
	0x026F06BC LDP X20, X19, [X31 + 0x10]
	0x026F06C0 CMP X0, 0x0
	0x026F06C4 CSEL X0, X21, X0, EQ
	0x026F06C8 LDP X30, X21, [X31], #0x20
	0x026F06CC RET
	0x026F06D0 BL 0x1C16F20
	0x026F06D4 BL 0x1C16F28
	0x026F06D8 STR X30, [X31 - 0x10]!
	0x026F06DC CBZ X0, 0x26F06F0
	0x026F06E0 LDR X8, [X0]
	0x026F06E4 LDP X2, X1, [X8 + 0x158]
	0x026F06E8 LDR X30, [X31], #0x10
	0x026F06EC BR X2
	0x026F06F0 BL 0x1C16F20
	0x026F06F4 STR X30, [X31 - 0x40]!
	0x026F06F8 STP X24, X23, [X31 + 0x10]
	0x026F06FC STP X22, X21, [X31 + 0x20]
	0x026F0700 STP X20, X19, [X31 + 0x30]
	0x026F0704 ADRP X20, 0x1CEA000
	0x026F0708 LDRB W8, [X20 + 0x541]
	0x026F070C MOV X22, X2
	0x026F0710 MOV W23, W1
	0x026F0714 MOV X19, X0
	0x026F0718 TBNZ X8, 0x0, 0x26F0730
	0x026F071C ADRP X0, 0x1A2D000
	0x026F0720 LDR X0, [X0 + 0x7B0]
	0x026F0724 BL 0x1C16CF4
	0x026F0728 MOVZ W8, 0x1
	0x026F072C STRB W8, [X20 + 0x541]
	0x026F0730 TBNZ X23, 0x1F, 0x26F0A54
	0x026F0734 CBZ W23, 0x26F0854
	0x026F0738 ADRP X20, 0x1A2D000
	0x026F073C LDR X20, [X20 + 0x7B0]
	0x026F0740 LDR X0, [X20]
	0x026F0744 LDR W8, [X0 + 0xE0]
	0x026F0748 CBNZ W8, 0x26F0754
	0x026F074C BL 0x1C16DFC
	0x026F0750 LDR X0, [X20]
	0x026F0754 SUB W9, W23, 0x1
	0x026F0758 UBFM W8, W9, 0x14, 0x1F
	0x026F075C MOVZ W10, 0x4
	0x026F0760 MOVZ W11, 0x14
	0x026F0764 CMP W8, 0x0
	0x026F0768 CSEL W10, W11, W10, NE
	0x026F076C MOVZ W12, 0x8
	0x026F0770 CSET W11, NE
	0x026F0774 LSRV W9, W9, W10
	0x026F0778 UBFM W10, W11, 0x1C, 0x1B
	0x026F077C BFM W12, W11, 0x1C, 0x0
	0x026F0780 UBFM W11, W9, 0x8, 0x1F
	0x026F0784 CMP W9, 0xFF
	0x026F0788 CSEL W10, W12, W10, HI
	0x026F078C CSEL W9, W11, W9, HI
	0x026F0790 UBFM W11, W9, 0x4, 0x1F
	0x026F0794 ORR W12, W10, 0x4
	0x026F0798 CMP W9, 0xF
	0x026F079C CSEL W10, W12, W10, HI
	0x026F07A0 CSEL W9, W11, W9, HI
	0x026F07A4 LDR X8, [X19 + 0x18]
	0x026F07A8 UBFM W11, W9, 0x2, 0x1F
	0x026F07AC ORR W12, W10, 0x2
	0x026F07B0 CMP W9, 0x3
	0x026F07B4 CSEL W12, W12, W10, HI
	0x026F07B8 CSEL W10, W11, W9, HI
	0x026F07BC CMP W10, 0x1
	0x026F07C0 CSET W11, HI
	0x026F07C4 CINC W9, W12, HI
	0x026F07C8 CBZ X8, 0x26F0A50
	0x026F07CC LDR X12, [X0 + 0xB8]
	0x026F07D0 LDR X13, [X22 + 0x20]
	0x026F07D4 LSRV W10, W10, W11
	0x026F07D8 LDR W11, [X8 + 0x18]
	0x026F07DC LDR X20, [X12]
	0x026F07E0 LDR X8, [X13 + 0xC0]
	0x026F07E4 ADD W21, W9, W10
	0x026F07E8 CMP W21, W11
	0x026F07EC B.GE 0x26F08B0
	0x026F07F0 LDR X0, [X8 + 0x58]
	0x026F07F4 LDRB W8, [X0 + 0x135]
	0x026F07F8 TBNZ X8, 0x0, 0x26F0800
	0x026F07FC BL 0x1C5C684
	0x026F0800 LDR W8, [X0 + 0xE0]
	0x026F0804 CBNZ W8, 0x26F080C
	0x026F0808 BL 0x1C16DFC
	0x026F080C LDR X8, [X22 + 0x20]
	0x026F0810 LDR X8, [X8 + 0xC0]
	0x026F0814 LDR X0, [X8 + 0x58]
	0x026F0818 LDRB W8, [X0 + 0x135]
	0x026F081C TBNZ X8, 0x0, 0x26F0824
	0x026F0820 BL 0x1C5C684
	0x026F0824 BL 0x1C16D0C
	0x026F0828 LDR X8, [X0]
	0x026F082C CBZ X8, 0x26F08C8
	0x026F0830 LDR W9, [X8 + 0x18]
	0x026F0834 CMP W21, W9
	0x026F0838 B.CS 0x26F0A90
	0x026F083C ADD X8, X8, W21, 0x3, SXTW
	0x026F0840 LDR X23, [X8 + 0x20]!
	0x026F0844 CBZ X23, 0x26F08C8
	0x026F0848 STR X31, [X8]
	0x026F084C CBNZ X20, 0x26F0908
	0x026F0850 B 0x26F0A50
	0x026F0854 LDR X8, [X22 + 0x20]
	0x026F0858 LDR X8, [X8 + 0xC0]
	0x026F085C LDR X19, [X8 + 0x40]
	0x026F0860 LDR X8, [X19 + 0x38]
	0x026F0864 CBNZ X8, 0x26F0874
	0x026F0868 MOV X0, X19
	0x026F086C BL 0x1C5C6E0
	0x026F0870 LDR X8, [X19 + 0x38]
	0x026F0874 LDR X0, [X8 + 0x10]
	0x026F0878 LDRB W8, [X0 + 0x135]
	0x026F087C TBNZ X8, 0x0, 0x26F0884
	0x026F0880 BL 0x1C5C684
	0x026F0884 LDR W8, [X0 + 0xE0]
	0x026F0888 CBNZ W8, 0x26F0890
	0x026F088C BL 0x1C16DFC
	0x026F0890 LDR X8, [X19 + 0x38]
	0x026F0894 LDR X0, [X8 + 0x10]
	0x026F0898 LDRB W8, [X0 + 0x135]
	0x026F089C TBNZ X8, 0x0, 0x26F08A4
	0x026F08A0 BL 0x1C5C684
	0x026F08A4 LDR X8, [X0 + 0xB8]
	0x026F08A8 LDR X23, [X8]
	0x026F08AC B 0x26F0A38
	0x026F08B0 LDR X0, [X8 + 0x70]
	0x026F08B4 LDRB W8, [X0 + 0x135]
	0x026F08B8 TBNZ X8, 0x0, 0x26F08C0
	0x026F08BC BL 0x1C5C684
	0x026F08C0 MOV W1, W23
	0x026F08C4 B 0x26F0994
	0x026F08C8 LDR X8, [X19 + 0x18]
	0x026F08CC CBZ X8, 0x26F0A50
	0x026F08D0 LDR W9, [X8 + 0x18]
	0x026F08D4 CMP W21, W9
	0x026F08D8 B.CS 0x26F0A90
	0x026F08DC SXTW X24, W21
	0x026F08E0 ADD X8, X8, X24, 0x3, LSL
	0x026F08E4 LDR X0, [X8 + 0x20]
	0x026F08E8 CBZ X0, 0x26F095C
	0x026F08EC LDR X8, [X22 + 0x20]
	0x026F08F0 LDR X8, [X8 + 0xC0]
	0x026F08F4 LDR X1, [X8 + 0x68]
	0x026F08F8 BL 0x26F46AC
	0x026F08FC CBZ X0, 0x26F095C
	0x026F0900 CBZ X20, 0x26F0A50
	0x026F0904 MOV X23, X0
	0x026F0908 MOV X0, X20
	0x026F090C MOV X1, X31
	0x026F0910 BL 0x334F914
	0x026F0914 TBZ X0, 0x0, 0x26F0A38
	0x026F0918 LDR X8, [X23]
	0x026F091C MOV X0, X23
	0x026F0920 LDP X9, X1, [X8 + 0x158]
	0x026F0924 BLR X9
	0x026F0928 LDR X8, [X19]
	0x026F092C MOV W22, W0
	0x026F0930 MOV X0, X19
	0x026F0934 LDP X9, X1, [X8 + 0x158]
	0x026F0938 BLR X9
	0x026F093C LDR W2, [X23 + 0x18]
	0x026F0940 MOV W3, W0
	0x026F0944 MOV X0, X20
	0x026F0948 MOV W1, W22
	0x026F094C MOV W4, W21
	0x026F0950 MOV X5, X31
	0x026F0954 BL 0x335E220
	0x026F0958 B 0x26F0A38
	0x026F095C LDR X8, [X19 + 0x10]
	0x026F0960 CBZ X8, 0x26F0A50
	0x026F0964 LDR W9, [X8 + 0x18]
	0x026F0968 CMP W21, W9
	0x026F096C B.CS 0x26F0A90
	0x026F0970 LDR X9, [X22 + 0x20]
	0x026F0974 ADD X8, X8, X24, 0x2, LSL
	0x026F0978 LDR W22, [X8 + 0x20]
	0x026F097C LDR X9, [X9 + 0xC0]
	0x026F0980 LDR X0, [X9 + 0x70]
	0x026F0984 LDRB W9, [X0 + 0x135]
	0x026F0988 TBNZ X9, 0x0, 0x26F0990
	0x026F098C BL 0x1C5C684
	0x026F0990 MOV W1, W22
	0x026F0994 BL 0x1C16D6C
	0x026F0998 MOV X23, X0
	0x026F099C CBZ X20, 0x26F0A50
	0x026F09A0 MOV X0, X20
	0x026F09A4 MOV X1, X31
	0x026F09A8 BL 0x334F914
	0x026F09AC TBZ X0, 0x0, 0x26F0A38
	0x026F09B0 CBZ X23, 0x26F0A50
	0x026F09B4 LDR X8, [X23]
	0x026F09B8 MOV X0, X23
	0x026F09BC LDP X9, X1, [X8 + 0x158]
	0x026F09C0 BLR X9
	0x026F09C4 LDR X8, [X19]
	0x026F09C8 MOV W22, W0
	0x026F09CC MOV X0, X19
	0x026F09D0 LDP X9, X1, [X8 + 0x158]
	0x026F09D4 BLR X9
	0x026F09D8 LDR W2, [X23 + 0x18]
	0x026F09DC MOV W3, W0
	0x026F09E0 MOVN W4, 0x0
	0x026F09E4 MOV X0, X20
	0x026F09E8 MOV W1, W22
	0x026F09EC MOV X5, X31
	0x026F09F0 BL 0x335E220
	0x026F09F4 LDR X8, [X19]
	0x026F09F8 MOV X0, X19
	0x026F09FC LDP X9, X1, [X8 + 0x158]
	0x026F0A00 BLR X9
	0x026F0A04 LDR X8, [X19 + 0x18]
	0x026F0A08 CBZ X8, 0x26F0A50
	0x026F0A0C LDR W8, [X8 + 0x18]
	0x026F0A10 LDR W2, [X23 + 0x18]
	0x026F0A14 MOV W3, W0
	0x026F0A18 MOVN W4, 0x0
	0x026F0A1C CMP W21, W8
	0x026F0A20 MOVZ W8, 0x1
	0x026F0A24 CINC W5, W8, LT
	0x026F0A28 MOV X0, X20
	0x026F0A2C MOV W1, W22
	0x026F0A30 MOV X6, X31
	0x026F0A34 BL 0x335E30C
	0x026F0A38 MOV X0, X23
	0x026F0A3C LDP X20, X19, [X31 + 0x30]
	0x026F0A40 LDP X22, X21, [X31 + 0x20]
	0x026F0A44 LDP X24, X23, [X31 + 0x10]
	0x026F0A48 LDR X30, [X31], #0x40
	0x026F0A4C RET
	0x026F0A50 BL 0x1C16F20
	0x026F0A54 ADRP X0, 0x1A0B000
	0x026F0A58 LDR X0, [X0 + 0x760]
	0x026F0A5C BL 0x1C16D08
	0x026F0A60 BL 0x1C16F10
	0x026F0A64 MOV X19, X0
	0x026F0A68 ADRP X0, 0x1A2D000
	0x026F0A6C LDR X0, [X0 + 0x7B8]
	0x026F0A70 BL 0x1C16D08
	0x026F0A74 MOV X1, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1CEB000
	009 Move W8, [X22+1341]
	010 Move X21, X3
	011 Move W23, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x1A2E000
	019 Move X0, [X0+1968]
	020 Call 0x1C17CF4
	021 Move X0, 0x1A2E000
	022 Move X0, [X0+1984]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+1341], W8
	026 Compare X19, 0
	027 JumpIfEqual {321}
	028 Move W2, [X19+24]
	029 Move W9, 4
	030 Move W10, 20
	031 Move W11, 8
	032 Subtract W12, W2, 1
	033 Move W8, W12
	034 ShiftRight W8, 20
	035 And W8, W8, 0x7FFFFFFF
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSEL not yet implemented."
	038 NotImplemented "Instruction CSET not yet implemented."
	039 NotImplemented "Instruction LSRV not yet implemented."
	040 Move W12, W10
	041 ShiftRight W12, 28
	042 And W12, W12, 0x7FFFFFF
	043 NotImplemented "Instruction BFM not yet implemented."
	044 Move W10, W9
	045 ShiftRight W10, 8
	046 And W10, W10, 0x7FFFFFFF
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSEL not yet implemented."
	049 NotImplemented "Instruction CSEL not yet implemented."
	050 Move W10, W9
	051 ShiftRight W10, 4
	052 And W10, W10, 0x7FFFFFFF
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Or W12, W11, 4
	055 NotImplemented "Instruction CSEL not yet implemented."
	056 Move X8, [X20+24]
	057 NotImplemented "Instruction CSEL not yet implemented."
	058 Move W10, W9
	059 ShiftRight W10, 2
	060 And W10, W10, 0x7FFFFFFF
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Or W12, W11, 2
	063 NotImplemented "Instruction CSEL not yet implemented."
	064 NotImplemented "Instruction CSEL not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction CSET not yet implemented."
	067 NotImplemented "Instruction CINC not yet implemented."
	068 Compare X8, 0
	069 JumpIfEqual {319}
	070 Move W8, [X8+24]
	071 NotImplemented "Instruction LSRV not yet implemented."
	072 Add W22, W11, W9
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move TEMP, X23
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {82}
	078 Move X0, X19
	079 Move W1, W31
	080 Move X3, X31
	081 Call Array.Clear, X0, X1, X2
	082 Move X8, [X20+16]
	083 Compare X8, 0
	084 JumpIfEqual {319}
	085 Move W9, [X8+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X24, W22
	088 Add X8, X8, X24
	089 Move W8, [X8+32]
	090 Move W9, [X19+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X8, [X21+32]
	093 Move X8, [X8+192]
	094 Move X0, [X8+88]
	095 Move W8, [X0+309]
	096 Move TEMP, X8
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {101}
	100 Call 0x1C5D684
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 Move X8, [X21+32]
	106 Move X8, [X8+192]
	107 Move X0, [X8+88]
	108 Move W8, [X0+309]
	109 Move TEMP, X8
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {114}
	113 Call 0x1C5D684
	114 Call 0x1C17D0C
	115 Move X8, [X0]
	116 Compare X8, 0
	117 JumpIfEqual {147}
	118 Move W9, [X8+24]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Add X8, X8, X24
	121 Move X23, [X8+32]
	122 Move [X8+32], X19
	123 Compare X23, 0
	124 JumpIfEqual {267}
	125 Move X8, [X20+24]
	126 Compare X8, 0
	127 JumpIfEqual {319}
	128 Move W9, [X8+24]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Add X8, X8, X24
	131 Move X0, [X8+32]
	132 Compare X0, 0
	133 JumpIfNotEqual {142}
	134 Move X8, [X21+32]
	135 Move X0, X20
	136 Move W1, W22
	137 Move X8, [X8+192]
	138 Move X2, [X8+152]
	139 Call 0x26F01AC, X0, X1
	140 Compare X0, 0
	141 JumpIfEqual {319}
	142 Move X8, [X21+32]
	143 Move X1, X23
	144 Move X8, [X8+192]
	145 Move X2, [X8+160]
	146 Call 0x26F55D4
	147 Move X8, [X21+32]
	148 Move X8, [X8+192]
	149 Move X0, [X8+120]
	150 Move W8, [X0+309]
	151 Move TEMP, X8
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfEqual {156}
	155 Call 0x1C5D684
	156 Move W1, 17
	157 Call 0x1C17D6C
	158 Move X8, [X21+32]
	159 Move X23, X0
	160 Move X8, [X8+192]
	161 Move X8, [X8+88]
	162 Move W9, [X8+309]
	163 Move TEMP, X9
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfEqual {170}
	167 Move X0, X8
	168 Call 0x1C5D684
	169 Move X8, X0
	170 Move W9, [X8+224]
	171 Compare W9, 0
	172 JumpIfNotEqual {175}
	173 Move X0, X8
	174 Call 0x1C17DFC
	175 Move X8, [X21+32]
	176 Move X8, [X8+192]
	177 Move X0, [X8+88]
	178 Move W8, [X0+309]
	179 Move TEMP, X8
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfEqual {184}
	183 Call 0x1C5D684
	184 Call 0x1C17D0C
	185 Move [X0], X23
	186 Move X8, [X21+32]
	187 Move X8, [X8+192]
	188 Move X0, [X8+88]
	189 Move W8, [X0+309]
	190 Move TEMP, X8
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfEqual {195}
	194 Call 0x1C5D684
	195 Call 0x1C17D0C
	196 Compare X23, 0
	197 JumpIfEqual {319}
	198 Move W8, [X23+24]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Add X8, X23, X24
	201 Move [X8+32], X19
	202 Move X8, [X21+32]
	203 Move X8, [X8+192]
	204 Move X0, [X8+88]
	205 Move W8, [X0+309]
	206 Move TEMP, X8
	207 And TEMP, TEMP, 1
	208 Compare TEMP, 1
	209 JumpIfEqual {211}
	210 Call 0x1C5D684
	211 Move X8, [X0+184]
	212 Move W8, [X8]
	213 Compare W8, 0
	214 JumpIfEqual {267}
	215 Move X8, [X21+32]
	216 Move X8, [X8+192]
	217 Move X0, [X8+88]
	218 Move W8, [X0+309]
	219 Move TEMP, X8
	220 And TEMP, TEMP, 1
	221 Compare TEMP, 1
	222 JumpIfEqual {224}
	223 Call 0x1C5D684
	224 Move W8, [X0+224]
	225 Compare W8, 0
	226 JumpIfNotEqual {228}
	227 Call 0x1C17DFC
	228 Move X8, [X21+32]
	229 Move X8, [X8+192]
	230 Move X0, [X8+88]
	231 Move W8, [X0+309]
	232 Move TEMP, X8
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfEqual {237}
	236 Call 0x1C5D684
	237 Move X8, [X0+184]
	238 Move X0, [X8+8]
	239 Compare X0, 0
	240 JumpIfEqual {319}
	241 Move X8, [X21+32]
	242 Move X1, X23
	243 Move X2, X31
	244 Move X8, [X8+192]
	245 Move X3, [X8+136]
	246 Call 0x29979F8, X0, X1, X2
	247 Add X0, X20, 32
	248 Move W1, 1
	249 Move X2, X31
	250 Call Interlocked.Exchange, X0, X1
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move X8, 0x1A2E000
	253 Move X8, [X8+1984]
	254 Move X0, [X8]
	255 Call 0x1C17F10
	256 Move X8, [X21+32]
	257 Move X1, X31
	258 Move X3, X31
	259 Move X21, X0
	260 Move X8, [X8+192]
	261 Move X2, [X8+144]
	262 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	263 Move X0, X21
	264 Move X1, X20
	265 Move X2, X31
	266 Call Gen2GcCallback.Register, X0, X1
	267 Move X21, 0x1A2E000
	268 Move X21, [X21+1968]
	269 Move X0, [X21]
	270 Move W8, [X0+224]
	271 Compare W8, 0
	272 JumpIfNotEqual {275}
	273 Call 0x1C17DFC
	274 Move X0, [X21]
	275 Move X8, [X0+184]
	276 Move X21, [X8]
	277 Compare X21, 0
	278 JumpIfEqual {319}
	279 Move X0, X21
	280 Move X1, X31
	281 Call EventSource.IsEnabled, X0
	282 Move TEMP, X0
	283 And TEMP, TEMP, 1
	284 Compare TEMP, 1
	285 JumpIfNotEqual {311}
	286 Move X8, [X19]
	287 Move X0, X19
	288 Move X9, [X8+344]
	289 Move X1, [X8+352]
	290 NotImplemented "Instruction BLR not yet implemented."
	291 Move X8, [X20]
	292 Move W22, W0
	293 Move X0, X20
	294 Move X9, [X8+344]
	295 Move X1, [X8+352]
	296 NotImplemented "Instruction BLR not yet implemented."
	297 Move W2, [X19+24]
	298 Move W3, W0
	299 Move X0, X21
	300 Move W1, W22
	301 Move X20, [X31+48]
	302 Move X19, [X31+56]
	303 Move X22, [X31+32]
	304 Move X21, [X31+40]
	305 Move X24, [X31+16]
	306 Move X23, [X31+24]
	307 Move X4, X31
	308 Move X30, [X31+64]
	309 Call ArrayPoolEventSource.BufferReturned, X0, X1, X2, X3
	310 Return 
	311 Move X20, [X31+48]
	312 Move X19, [X31+56]
	313 Move X22, [X31+32]
	314 Move X21, [X31+40]
	315 Move X24, [X31+16]
	316 Move X23, [X31+24]
	317 Move X30, [X31+64]
	318 Return 
	319 Call 0x1C17F20
	320 Call 0x1C17F28
	321 Move X0, 0x1A09000
	322 Move X0, [X0+1320]
	323 Call 0x1C17D08
	324 Call 0x1C17F10
	325 Move X19, X0
	326 Move X0, 0x1A2C000
	327 Move X0, [X0+1600]
	328 Call 0x1C17D08
	329 Move X1, X0
	330 Move X0, X19
	331 Move X2, X31
	332 Call ArgumentNullException..ctor, X0, X1
	333 Move X0, 0x1A0C000
	334 Move X0, [X0+1400]
	335 Call 0x1C17D08
	336 Call 0x1C17F10
	337 Move X19, X0
	338 Move X0, 0x1A2E000
	339 Move X0, [X0+1992]
	340 Call 0x1C17D08
	341 Move X20, X0
	342 Move X0, 0x1A2C000
	343 Move X0, [X0+1600]
	344 Call 0x1C17D08
	345 Move X2, X0
	346 Move X0, X19
	347 Move X1, X20
	348 Move X3, X31
	349 Call ArgumentException..ctor, X0, X1, X2
	350 Move X0, X19
	351 Move X1, X21
	352 Call 0x1C17DEC

Method: System.Boolean Trim()

Disassembly:
	0x026F0A78 MOV X0, X19
	0x026F0A7C MOV X2, X31
	0x026F0A80 BL 0x3316014
	0x026F0A84 MOV X0, X19
	0x026F0A88 MOV X1, X22
	0x026F0A8C BL 0x1C16DEC
	0x026F0A90 BL 0x1C16F28
	0x026F0A94 STR X30, [X31 - 0x40]!
	0x026F0A98 STP X24, X23, [X31 + 0x10]
	0x026F0A9C STP X22, X21, [X31 + 0x20]
	0x026F0AA0 STP X20, X19, [X31 + 0x30]
	0x026F0AA4 ADRP X22, 0x1CEA000
	0x026F0AA8 LDRB W8, [X22 + 0x542]
	0x026F0AAC MOV X21, X3
	0x026F0AB0 MOV W23, W2
	0x026F0AB4 MOV X19, X1
	0x026F0AB8 MOV X20, X0
	0x026F0ABC TBNZ X8, 0x0, 0x26F0AE0
	0x026F0AC0 ADRP X0, 0x1A2D000
	0x026F0AC4 LDR X0, [X0 + 0x7B0]
	0x026F0AC8 BL 0x1C16CF4
	0x026F0ACC ADRP X0, 0x1A2D000
	0x026F0AD0 LDR X0, [X0 + 0x7C0]
	0x026F0AD4 BL 0x1C16CF4
	0x026F0AD8 MOVZ W8, 0x1
	0x026F0ADC STRB W8, [X22 + 0x542]
	0x026F0AE0 CBZ X19, 0x26F0E8C
	0x026F0AE4 LDR W2, [X19 + 0x18]
	0x026F0AE8 MOVZ W9, 0x4
	0x026F0AEC MOVZ W10, 0x14
	0x026F0AF0 MOVZ W11, 0x8
	0x026F0AF4 SUB W12, W2, 0x1
	0x026F0AF8 UBFM W8, W12, 0x14, 0x1F
	0x026F0AFC CMP W8, 0x0
	0x026F0B00 CSEL W9, W10, W9, NE
	0x026F0B04 CSET W10, NE
	0x026F0B08 LSRV W9, W12, W9
	0x026F0B0C UBFM W12, W10, 0x1C, 0x1B
	0x026F0B10 BFM W11, W10, 0x1C, 0x0
	0x026F0B14 UBFM W10, W9, 0x8, 0x1F
	0x026F0B18 CMP W9, 0xFF
	0x026F0B1C CSEL W9, W10, W9, HI
	0x026F0B20 CSEL W11, W11, W12, HI
	0x026F0B24 UBFM W10, W9, 0x4, 0x1F
	0x026F0B28 CMP W9, 0xF
	0x026F0B2C ORR W12, W11, 0x4
	0x026F0B30 CSEL W9, W10, W9, HI
	0x026F0B34 LDR X8, [X20 + 0x18]
	0x026F0B38 CSEL W11, W12, W11, HI
	0x026F0B3C UBFM W10, W9, 0x2, 0x1F
	0x026F0B40 CMP W9, 0x3
	0x026F0B44 ORR W12, W11, 0x2
	0x026F0B48 CSEL W9, W10, W9, HI
	0x026F0B4C CSEL W11, W12, W11, HI
	0x026F0B50 CMP W9, 0x1
	0x026F0B54 CSET W10, HI
	0x026F0B58 CINC W11, W11, HI
	0x026F0B5C CBZ X8, 0x26F0E84
	0x026F0B60 LDR W8, [X8 + 0x18]
	0x026F0B64 LSRV W9, W9, W10
	0x026F0B68 ADD W22, W11, W9
	0x026F0B6C CMP W22, W8
	0x026F0B70 B.GE 0x26F0DEC
	0x026F0B74 TBZ X23, 0x0, 0x26F0B88
	0x026F0B78 MOV X0, X19
	0x026F0B7C MOV W1, W31
	0x026F0B80 MOV X3, X31
	0x026F0B84 BL 0x339FA34
	0x026F0B88 LDR X8, [X20 + 0x10]
	0x026F0B8C CBZ X8, 0x26F0E84
	0x026F0B90 LDR W9, [X8 + 0x18]
	0x026F0B94 CMP W22, W9
	0x026F0B98 B.CS 0x26F0E88
	0x026F0B9C SXTW X24, W22
	0x026F0BA0 ADD X8, X8, X24, 0x2, LSL
	0x026F0BA4 LDR W8, [X8 + 0x20]
	0x026F0BA8 LDR W9, [X19 + 0x18]
	0x026F0BAC CMP W8, W9
	0x026F0BB0 B.NE 0x26F0EC0
	0x026F0BB4 LDR X8, [X21 + 0x20]
	0x026F0BB8 LDR X8, [X8 + 0xC0]
	0x026F0BBC LDR X0, [X8 + 0x58]
	0x026F0BC0 LDRB W8, [X0 + 0x135]
	0x026F0BC4 TBNZ X8, 0x0, 0x26F0BCC
	0x026F0BC8 BL 0x1C5C684
	0x026F0BCC LDR W8, [X0 + 0xE0]
	0x026F0BD0 CBNZ W8, 0x26F0BD8
	0x026F0BD4 BL 0x1C16DFC
	0x026F0BD8 LDR X8, [X21 + 0x20]
	0x026F0BDC LDR X8, [X8 + 0xC0]
	0x026F0BE0 LDR X0, [X8 + 0x58]
	0x026F0BE4 LDRB W8, [X0 + 0x135]
	0x026F0BE8 TBNZ X8, 0x0, 0x26F0BF0
	0x026F0BEC BL 0x1C5C684
	0x026F0BF0 BL 0x1C16D0C
	0x026F0BF4 LDR X8, [X0]
	0x026F0BF8 CBZ X8, 0x26F0C6C
	0x026F0BFC LDR W9, [X8 + 0x18]
	0x026F0C00 CMP W22, W9
	0x026F0C04 B.CS 0x26F0E88
	0x026F0C08 ADD X8, X8, X24, 0x3, LSL
	0x026F0C0C LDR X23, [X8 + 0x20]
	0x026F0C10 STR X19, [X8 + 0x20]
	0x026F0C14 CBZ X23, 0x26F0DEC
	0x026F0C18 LDR X8, [X20 + 0x18]
	0x026F0C1C CBZ X8, 0x26F0E84
	0x026F0C20 LDR W9, [X8 + 0x18]
	0x026F0C24 CMP W22, W9
	0x026F0C28 B.CS 0x26F0E88
	0x026F0C2C ADD X8, X8, X24, 0x3, LSL
	0x026F0C30 LDR X0, [X8 + 0x20]
	0x026F0C34 CBNZ X0, 0x26F0C54
	0x026F0C38 LDR X8, [X21 + 0x20]
	0x026F0C3C MOV X0, X20
	0x026F0C40 MOV W1, W22
	0x026F0C44 LDR X8, [X8 + 0xC0]
	0x026F0C48 LDR X2, [X8 + 0x98]
	0x026F0C4C BL 0x26F0644
	0x026F0C50 CBZ X0, 0x26F0E84
	0x026F0C54 LDR X8, [X21 + 0x20]
	0x026F0C58 MOV X1, X23
	0x026F0C5C LDR X8, [X8 + 0xC0]
	0x026F0C60 LDR X2, [X8 + 0xA0]
	0x026F0C64 BL 0x26F47CC
	0x026F0C68 B 0x26F0DEC
	0x026F0C6C LDR X8, [X21 + 0x20]
	0x026F0C70 LDR X8, [X8 + 0xC0]
	0x026F0C74 LDR X0, [X8 + 0x78]
	0x026F0C78 LDRB W8, [X0 + 0x135]
	0x026F0C7C TBNZ X8, 0x0, 0x26F0C84
	0x026F0C80 BL 0x1C5C684
	0x026F0C84 MOVZ W1, 0x11
	0x026F0C88 BL 0x1C16D6C
	0x026F0C8C LDR X8, [X21 + 0x20]
	0x026F0C90 MOV X23, X0
	0x026F0C94 LDR X8, [X8 + 0xC0]
	0x026F0C98 LDR X8, [X8 + 0x58]
	0x026F0C9C LDRB W9, [X8 + 0x135]
	0x026F0CA0 TBNZ X9, 0x0, 0x26F0CB0
	0x026F0CA4 MOV X0, X8
	0x026F0CA8 BL 0x1C5C684
	0x026F0CAC MOV X8, X0
	0x026F0CB0 LDR W9, [X8 + 0xE0]
	0x026F0CB4 CBNZ W9, 0x26F0CC0
	0x026F0CB8 MOV X0, X8
	0x026F0CBC BL 0x1C16DFC
	0x026F0CC0 LDR X8, [X21 + 0x20]
	0x026F0CC4 LDR X8, [X8 + 0xC0]
	0x026F0CC8 LDR X0, [X8 + 0x58]
	0x026F0CCC LDRB W8, [X0 + 0x135]
	0x026F0CD0 TBNZ X8, 0x0, 0x26F0CD8
	0x026F0CD4 BL 0x1C5C684
	0x026F0CD8 BL 0x1C16D0C
	0x026F0CDC STR X23, [X0]
	0x026F0CE0 LDR X8, [X21 + 0x20]
	0x026F0CE4 LDR X8, [X8 + 0xC0]
	0x026F0CE8 LDR X0, [X8 + 0x58]
	0x026F0CEC LDRB W8, [X0 + 0x135]
	0x026F0CF0 TBNZ X8, 0x0, 0x26F0CF8
	0x026F0CF4 BL 0x1C5C684
	0x026F0CF8 BL 0x1C16D0C
	0x026F0CFC CBZ X23, 0x26F0E84
	0x026F0D00 LDR W8, [X23 + 0x18]
	0x026F0D04 CMP W22, W8
	0x026F0D08 B.CS 0x26F0E88
	0x026F0D0C ADD X8, X23, X24, 0x3, LSL
	0x026F0D10 STR X19, [X8 + 0x20]
	0x026F0D14 LDR X8, [X21 + 0x20]
	0x026F0D18 LDR X8, [X8 + 0xC0]
	0x026F0D1C LDR X0, [X8 + 0x58]
	0x026F0D20 LDRB W8, [X0 + 0x135]
	0x026F0D24 TBNZ X8, 0x0, 0x26F0D2C
	0x026F0D28 BL 0x1C5C684
	0x026F0D2C LDR X8, [X0 + 0xB8]
	0x026F0D30 LDRB W8, [X8]
	0x026F0D34 CBZ W8, 0x26F0DEC
	0x026F0D38 LDR X8, [X21 + 0x20]
	0x026F0D3C LDR X8, [X8 + 0xC0]
	0x026F0D40 LDR X0, [X8 + 0x58]
	0x026F0D44 LDRB W8, [X0 + 0x135]
	0x026F0D48 TBNZ X8, 0x0, 0x26F0D50
	0x026F0D4C BL 0x1C5C684
	0x026F0D50 LDR W8, [X0 + 0xE0]
	0x026F0D54 CBNZ W8, 0x26F0D5C
	0x026F0D58 BL 0x1C16DFC
	0x026F0D5C LDR X8, [X21 + 0x20]
	0x026F0D60 LDR X8, [X8 + 0xC0]
	0x026F0D64 LDR X0, [X8 + 0x58]
	0x026F0D68 LDRB W8, [X0 + 0x135]
	0x026F0D6C TBNZ X8, 0x0, 0x26F0D74
	0x026F0D70 BL 0x1C5C684
	0x026F0D74 LDR X8, [X0 + 0xB8]
	0x026F0D78 LDR X0, [X8 + 0x8]
	0x026F0D7C CBZ X0, 0x26F0E84
	0x026F0D80 LDR X8, [X21 + 0x20]
	0x026F0D84 MOV X1, X23
	0x026F0D88 MOV X2, X31
	0x026F0D8C LDR X8, [X8 + 0xC0]
	0x026F0D90 LDR X3, [X8 + 0x88]
	0x026F0D94 BL 0x29969F8
	0x026F0D98 ADD X0, X20, 0x20
	0x026F0D9C MOVZ W1, 0x1
	0x026F0DA0 MOV X2, X31
	0x026F0DA4 BL 0x33E9064
	0x026F0DA8 CMP W0, 0x1
	0x026F0DAC B.EQ 0x26F0DEC
	0x026F0DB0 ADRP X8, 0x1A2D000
	0x026F0DB4 LDR X8, [X8 + 0x7C0]
	0x026F0DB8 LDR X0, [X8]
	0x026F0DBC BL 0x1C16F10
	0x026F0DC0 LDR X8, [X21 + 0x20]
	0x026F0DC4 MOV X1, X31
	0x026F0DC8 MOV X3, X31
	0x026F0DCC MOV X21, X0
	0x026F0DD0 LDR X8, [X8 + 0xC0]
	0x026F0DD4 LDR X2, [X8 + 0x90]
	0x026F0DD8 BL 0x2D2F428
	0x026F0DDC MOV X0, X21
	0x026F0DE0 MOV X1, X20
	0x026F0DE4 MOV X2, X31
	0x026F0DE8 BL 0x336757C
	0x026F0DEC ADRP X21, 0x1A2D000
	0x026F0DF0 LDR X21, [X21 + 0x7B0]
	0x026F0DF4 LDR X0, [X21]
	0x026F0DF8 LDR W8, [X0 + 0xE0]
	0x026F0DFC CBNZ W8, 0x26F0E08
	0x026F0E00 BL 0x1C16DFC
	0x026F0E04 LDR X0, [X21]
	0x026F0E08 LDR X8, [X0 + 0xB8]
	0x026F0E0C LDR X21, [X8]
	0x026F0E10 CBZ X21, 0x26F0E84
	0x026F0E14 MOV X0, X21
	0x026F0E18 MOV X1, X31
	0x026F0E1C BL 0x334F914
	0x026F0E20 TBZ X0, 0x0, 0x26F0E70
	0x026F0E24 LDR X8, [X19]
	0x026F0E28 MOV X0, X19
	0x026F0E2C LDP X9, X1, [X8 + 0x158]
	0x026F0E30 BLR X9
	0x026F0E34 LDR X8, [X20]
	0x026F0E38 MOV W22, W0
	0x026F0E3C MOV X0, X20
	0x026F0E40 LDP X9, X1, [X8 + 0x158]
	0x026F0E44 BLR X9
	0x026F0E48 LDR W2, [X19 + 0x18]
	0x026F0E4C MOV W3, W0
	0x026F0E50 MOV X0, X21
	0x026F0E54 MOV W1, W22
	0x026F0E58 LDP X20, X19, [X31 + 0x30]
	0x026F0E5C LDP X22, X21, [X31 + 0x20]
	0x026F0E60 LDP X24, X23, [X31 + 0x10]
	0x026F0E64 MOV X4, X31
	0x026F0E68 LDR X30, [X31], #0x40
	0x026F0E6C B 0x335E418
	0x026F0E70 LDP X20, X19, [X31 + 0x30]
	0x026F0E74 LDP X22, X21, [X31 + 0x20]
	0x026F0E78 LDP X24, X23, [X31 + 0x10]
	0x026F0E7C LDR X30, [X31], #0x40
	0x026F0E80 RET
	0x026F0E84 BL 0x1C16F20
	0x026F0E88 BL 0x1C16F28
	0x026F0E8C ADRP X0, 0x1A08000
	0x026F0E90 LDR X0, [X0 + 0x528]
	0x026F0E94 BL 0x1C16D08
	0x026F0E98 BL 0x1C16F10
	0x026F0E9C MOV X19, X0
	0x026F0EA0 ADRP X0, 0x1A2B000
	0x026F0EA4 LDR X0, [X0 + 0x640]
	0x026F0EA8 BL 0x1C16D08
	0x026F0EAC MOV X1, X0
	0x026F0EB0 MOV X0, X19
	0x026F0EB4 MOV X2, X31
	0x026F0EB8 BL 0x330E100
	0x026F0EBC B 0x26F0F04
	0x026F0EC0 ADRP X0, 0x1A0B000
	0x026F0EC4 LDR X0, [X0 + 0x578]
	0x026F0EC8 BL 0x1C16D08
	0x026F0ECC BL 0x1C16F10
	0x026F0ED0 MOV X19, X0
	0x026F0ED4 ADRP X0, 0x1A2D000
	0x026F0ED8 LDR X0, [X0 + 0x7C8]
	0x026F0EDC BL 0x1C16D08
	0x026F0EE0 MOV X20, X0
	0x026F0EE4 ADRP X0, 0x1A2B000
	0x026F0EE8 LDR X0, [X0 + 0x640]
	0x026F0EEC BL 0x1C16D08
	0x026F0EF0 MOV X2, X0
	0x026F0EF4 MOV X0, X19
	0x026F0EF8 MOV X1, X20
	0x026F0EFC MOV X3, X31
	0x026F0F00 BL 0x330E16C
	0x026F0F04 MOV X0, X19
	0x026F0F08 MOV X1, X21
	0x026F0F0C BL 0x1C16DEC
	0x026F0F10 STR X30, [X31 - 0x60]!
	0x026F0F14 STP X28, X27, [X31 + 0x10]
	0x026F0F18 STP X26, X25, [X31 + 0x20]
	0x026F0F1C STP X24, X23, [X31 + 0x30]
	0x026F0F20 STP X22, X21, [X31 + 0x40]
	0x026F0F24 STP X20, X19, [X31 + 0x50]
	0x026F0F28 ADRP X21, 0x1CEA000
	0x026F0F2C LDRB W8, [X21 + 0x543]
	0x026F0F30 MOV X19, X1
	0x026F0F34 MOV X20, X0
	0x026F0F38 TBNZ X8, 0x0, 0x26F0F68
	0x026F0F3C ADRP X0, 0x1A2D000
	0x026F0F40 LDR X0, [X0 + 0x7B0]
	0x026F0F44 BL 0x1C16CF4
	0x026F0F48 ADRP X0, 0x1A03000
	0x026F0F4C LDR X0, [X0 + 0xE00]
	0x026F0F50 BL 0x1C16CF4
	0x026F0F54 ADRP X0, 0x1A03000
	0x026F0F58 LDR X0, [X0 + 0xE18]
	0x026F0F5C BL 0x1C16CF4
	0x026F0F60 MOVZ W8, 0x1
	0x026F0F64 STRB W8, [X21 + 0x543]
	0x026F0F68 MOV X0, X31
	0x026F0F6C BL 0x33C18F4
	0x026F0F70 LDR X8, [X19 + 0x20]
	0x026F0F74 MOV W21, W0
	0x026F0F78 LDR X8, [X8 + 0xC0]
	0x026F0F7C LDR X8, [X8 + 0x58]
	0x026F0F80 LDRB W9, [X8 + 0x135]
	0x026F0F84 TBNZ X9, 0x0, 0x26F0F94
	0x026F0F88 MOV X0, X8
	0x026F0F8C BL 0x1C5C684
	0x026F0F90 MOV X8, X0
	0x026F0F94 ADRP X22, 0x1A2D000
	0x026F0F98 LDR W9, [X8 + 0xE0]
	0x026F0F9C LDR X22, [X22 + 0x7B0]
	0x026F0FA0 CBNZ W9, 0x26F0FAC
	0x026F0FA4 MOV X0, X8
	0x026F0FA8 BL 0x1C16DFC
	0x026F0FAC BL 0x26F17E4
	0x026F0FB0 LDR X8, [X22]
	0x026F0FB4 MOV W23, W0
	0x026F0FB8 LDR W9, [X8 + 0xE0]
	0x026F0FBC CBNZ W9, 0x26F0FCC
	0x026F0FC0 MOV X0, X8
	0x026F0FC4 BL 0x1C16DFC
	0x026F0FC8 LDR X8, [X22]
	0x026F0FCC LDR X8, [X8 + 0xB8]
	0x026F0FD0 LDR X22, [X8]
	0x026F0FD4 CBZ X22, 0x26F1580
	0x026F0FD8 MOV X0, X22
	0x026F0FDC MOV X1, X31
	0x026F0FE0 BL 0x334F914
	0x026F0FE4 TBZ X0, 0x0, 0x26F0FFC
	0x026F0FE8 MOV X0, X22
	0x026F0FEC MOV W1, W21
	0x026F0FF0 MOV W2, W23
	0x026F0FF4 MOV X3, X31
	0x026F0FF8 BL 0x335E438
	0x026F0FFC LDR X25, [X20 + 0x18]
	0x026F1000 CBZ X25, 0x26F1580
	0x026F1004 LDR X8, [X25 + 0x18]
	0x026F1008 CMP W8, 0x1
	0x026F100C B.LT 0x26F1080
	0x026F1010 MOV X24, X31
	0x026F1014 MOV X26, X31
	0x026F1018 AND X8, X8, 0x0
	0x026F101C ADD X27, X25, 0x20
	0x026F1020 CMP X26, W8, UXTW
	0x026F1024 B.CS 0x26F157C
	0x026F1028 LDR X8, [X27, X26, LSL #3]
	0x026F102C CMP X8, 0x0
	0x026F1030 CSEL X24, X24, X8, EQ
	0x026F1034 CBZ X8, 0x26F1070
	0x026F1038 LDR X8, [X20]
	0x026F103C MOV X0, X20
	0x026F1040 LDP X9, X1, [X8 + 0x158]
	0x026F1044 BLR X9
	0x026F1048 CBZ X24, 0x26F1580
	0x026F104C LDR X8, [X19 + 0x20]
	0x026F1050 LDR X4, [X20 + 0x10]
	0x026F1054 MOV W2, W0
	0x026F1058 MOV X0, X24
	0x026F105C LDR X8, [X8 + 0xC0]
	0x026F1060 MOV W1, W21
	0x026F1064 MOV W3, W23
	0x026F1068 LDR X5, [X8 + 0xB8]
	0x026F106C BL 0x24A232C
	0x026F1070 LDR W8, [X25 + 0x18]
	0x026F1074 ADD X26, X26, 0x1
	0x026F1078 CMP X26, W8, SXTW
	0x026F107C B.LT 0x26F1020
	0x026F1080 CMP W23, 0x2
	0x026F1084 B.NE 0x26F1558
	0x026F1088 MOV X0, X22
	0x026F108C MOV X1, X31
	0x026F1090 BL 0x334F914
	0x026F1094 TBZ X0, 0x0, 0x26F1338
	0x026F1098 LDR X8, [X19 + 0x20]
	0x026F109C LDR X8, [X8 + 0xC0]
	0x026F10A0 LDR X0, [X8 + 0x58]
	0x026F10A4 LDRB W8, [X0 + 0x135]
	0x026F10A8 TBNZ X8, 0x0, 0x26F10B0
	0x026F10AC BL 0x1C5C684
	0x026F10B0 LDR W8, [X0 + 0xE0]
	0x026F10B4 CBNZ W8, 0x26F10BC
	0x026F10B8 BL 0x1C16DFC
	0x026F10BC LDR X8, [X19 + 0x20]
	0x026F10C0 LDR X8, [X8 + 0xC0]
	0x026F10C4 LDR X0, [X8 + 0x58]
	0x026F10C8 LDRB W8, [X0 + 0x135]
	0x026F10CC TBNZ X8, 0x0, 0x26F10D4
	0x026F10D0 BL 0x1C5C684
	0x026F10D4 LDR X8, [X0 + 0xB8]
	0x026F10D8 LDR X21, [X8 + 0x8]
	0x026F10DC CBZ X21, 0x26F1580
	0x026F10E0 LDR X8, [X19 + 0x20]
	0x026F10E4 LDR X8, [X8 + 0xC0]
	0x026F10E8 LDR X1, [X8 + 0xC0]
	0x026F10EC LDRB W8, [X1 + 0x135]
	0x026F10F0 TBNZ X8, 0x0, 0x26F1100
	0x026F10F4 MOV X0, X1
	0x026F10F8 BL 0x1C5C684
	0x026F10FC MOV X1, X0
	0x026F1100 LDR X8, [X21]
	0x026F1104 LDRH W9, [X8 + 0x12E]
	0x026F1108 CBZ X9, 0x26F112C
	0x026F110C LDR X10, [X8 + 0xB0]
	0x026F1110 ADD X10, X10, 0x8
	0x026F1114 LDUR X11, [X10 - 0x8]
	0x026F1118 CMP X11, X1
	0x026F111C B.EQ 0x26F113C
	0x026F1120 SUBS X9, X9, 0x1
	0x026F1124 ADD X10, X10, 0x10
	0x026F1128 B.NE 0x26F1114
	0x026F112C MOV X0, X21
	0x026F1130 MOV W2, W31
	0x026F1134 BL 0x1C5C788
	0x026F1138 B 0x26F1148
	0x026F113C LDRSW X9, [X10]
	0x026F1140 ADD X8, X8, X9, 0x4, LSL
	0x026F1144 ADD X0, X8, 0x138
	0x026F1148 LDP X8, X1, [X0]
	0x026F114C MOV X0, X21
	0x026F1150 BLR X8
	0x026F1154 MOV X21, X0
	0x026F1158 CBZ X0, 0x26F1598
	0x026F115C ADRP X27, 0x1A02000
	0x026F1160 LDR X27, [X27 + 0xE18]
	0x026F1164 LDR X8, [X21]
	0x026F1168 LDR X1, [X27]
	0x026F116C LDRH W9, [X8 + 0x12E]
	0x026F1170 CBZ X9, 0x26F1194
	0x026F1174 LDR X10, [X8 + 0xB0]
	0x026F1178 ADD X10, X10, 0x8
	0x026F117C LDUR X11, [X10 - 0x8]
	0x026F1180 CMP X11, X1
	0x026F1184 B.EQ 0x26F11A4
	0x026F1188 SUBS X9, X9, 0x1
	0x026F118C ADD X10, X10, 0x10
	0x026F1190 B.NE 0x26F117C
	0x026F1194 MOV X0, X21
	0x026F1198 MOV W2, W31
	0x026F119C BL 0x1C5C788
	0x026F11A0 B 0x26F11B0
	0x026F11A4 LDRSW X9, [X10]
	0x026F11A8 ADD X8, X8, X9, 0x4, LSL
	0x026F11AC ADD X0, X8, 0x138
	0x026F11B0 LDP X8, X1, [X0]
	0x026F11B4 MOV X0, X21
	0x026F11B8 BLR X8
	0x026F11BC TBZ X0, 0x0, 0x26F12C4
	0x026F11C0 LDR X8, [X19 + 0x20]
	0x026F11C4 LDR X8, [X8 + 0xC0]
	0x026F11C8 LDR X1, [X8 + 0xD0]
	0x026F11CC LDRB W8, [X1 + 0x135]
	0x026F11D0 TBNZ X8, 0x0, 0x26F11E0
	0x026F11D4 MOV X0, X1
	0x026F11D8 BL 0x1C5C684
	0x026F11DC MOV X1, X0
	0x026F11E0 LDR X8, [X21]
	0x026F11E4 LDRH W9, [X8 + 0x12E]
	0x026F11E8 CBZ X9, 0x26F120C
	0x026F11EC LDR X10, [X8 + 0xB0]
	0x026F11F0 ADD X10, X10, 0x8
	0x026F11F4 LDUR X11, [X10 - 0x8]
	0x026F11F8 CMP X11, X1
	0x026F11FC B.EQ 0x26F121C
	0x026F1200 SUBS X9, X9, 0x1
	0x026F1204 ADD X10, X10, 0x10
	0x026F1208 B.NE 0x26F11F4
	0x026F120C MOV X0, X21
	0x026F1210 MOV W2, W31
	0x026F1214 BL 0x1C5C788
	0x026F1218 B 0x26F1228
	0x026F121C LDRSW X9, [X10]
	0x026F1220 ADD X8, X8, X9, 0x4, LSL
	0x026F1224 ADD X0, X8, 0x138
	0x026F1228 LDP X8, X1, [X0]
	0x026F122C MOV X0, X21
	0x026F1230 BLR X8
	0x026F1234 MOV X23, X0
	0x026F1238 CBZ X0, 0x26F1588
	0x026F123C LDR X8, [X23 + 0x18]
	0x026F1240 CMP W8, 0x1
	0x026F1244 B.LT 0x26F1164
	0x026F1248 MOV X28, X31
	0x026F124C AND X8, X8, 0x0
	0x026F1250 ADD X24, X23, 0x20
	0x026F1254 CMP X28, W8, UXTW
	0x026F1258 B.CS 0x26F1578
	0x026F125C MOV X0, X24
	0x026F1260 MOV X1, X31
	0x026F1264 BL 0x1C242E8
	0x026F1268 MOV X25, X0
	0x026F126C CBZ X0, 0x26F12AC
	0x026F1270 LDR X8, [X25]
	0x026F1274 LDP X9, X1, [X8 + 0x158]
	0x026F1278 MOV X0, X25
	0x026F127C BLR X9
	0x026F1280 LDR X8, [X20]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x1CEB000
	013 Move W8, [X21+1342]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x1A2E000
	021 Move X0, [X0+1968]
	022 Call 0x1C17CF4
	023 Move X0, 0x1A04000
	024 Move X0, [X0+3584]
	025 Call 0x1C17CF4
	026 Move X0, 0x1A04000
	027 Move X0, [X0+3608]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+1342], W8
	031 Move X0, X31
	032 Call Environment.get_TickCount
	033 Move X8, [X19+32]
	034 Move W21, W0
	035 Move X8, [X8+192]
	036 Move X8, [X8+88]
	037 Move W9, [X8+309]
	038 Move TEMP, X9
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {45}
	042 Move X0, X8
	043 Call 0x1C5D684
	044 Move X8, X0
	045 Move X22, 0x1A2E000
	046 Move W9, [X8+224]
	047 Move X22, [X22+1968]
	048 Compare W9, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Call 0x26F134C
	053 Move X8, [X22]
	054 Move W23, W0
	055 Move W9, [X8+224]
	056 Compare W9, 0
	057 JumpIfNotEqual {61}
	058 Move X0, X8
	059 Call 0x1C17DFC
	060 Move X8, [X22]
	061 Move X8, [X8+184]
	062 Move X22, [X8]
	063 Compare X22, 0
	064 JumpIfEqual {471}
	065 Move X0, X22
	066 Move X1, X31
	067 Call EventSource.IsEnabled, X0
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {77}
	072 Move X0, X22
	073 Move W1, W21
	074 Move W2, W23
	075 Move X3, X31
	076 Call ArrayPoolEventSource.BufferTrimPoll, X0, X1, X2
	077 Move X25, [X20+24]
	078 Compare X25, 0
	079 JumpIfEqual {471}
	080 Move X8, [X25+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X24, X31
	083 Move X26, X31
	084 And X8, X8, 0
	085 Add X27, X25, 32
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X8, [X27]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction CSEL not yet implemented."
	090 Compare X8, 0
	091 JumpIfEqual {108}
	092 Move X8, [X20]
	093 Move X0, X20
	094 Move X9, [X8+344]
	095 Move X1, [X8+352]
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Compare X24, 0
	098 JumpIfEqual {471}
	099 Move X8, [X19+32]
	100 Move X4, [X20+16]
	101 Move W2, W0
	102 Move X0, X24
	103 Move X8, [X8+192]
	104 Move W1, W21
	105 Move W3, W23
	106 Move X5, [X8+184]
	107 Call 0x24A2F48, X0, X1, X2, X3, X4
	108 Move W8, [X25+24]
	109 Add X26, X26, 1
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X0, X22
	113 Move X1, X31
	114 Call EventSource.IsEnabled, X0
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {304}
	119 Move X8, [X19+32]
	120 Move X8, [X8+192]
	121 Move X0, [X8+88]
	122 Move W8, [X0+309]
	123 Move TEMP, X8
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfEqual {128}
	127 Call 0x1C5D684
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Move X8, [X19+32]
	133 Move X8, [X8+192]
	134 Move X0, [X8+88]
	135 Move W8, [X0+309]
	136 Move TEMP, X8
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfEqual {141}
	140 Call 0x1C5D684
	141 Move X8, [X0+184]
	142 Move X21, [X8+8]
	143 Compare X21, 0
	144 JumpIfEqual {471}
	145 Move X8, [X19+32]
	146 Move X8, [X8+192]
	147 Move X1, [X8+192]
	148 Move W8, [X1+309]
	149 Move TEMP, X8
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfEqual {156}
	153 Move X0, X1
	154 Call 0x1C5D684
	155 Move X1, X0
	156 Move X8, [X21]
	157 NotImplemented "Instruction LDRH not yet implemented."
	158 Compare X9, 0
	159 JumpIfEqual {166}
	160 Move X10, [X8+176]
	161 Add X10, X10, 8
	162 NotImplemented "Instruction LDUR not yet implemented."
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Subtract X9, X9, 1
	165 Add X10, X10, 16
	166 Move X0, X21
	167 Move W2, W31
	168 Call 0x1C5D788
	169 NotImplemented "Instruction LDRSW not yet implemented."
	170 Add X8, X8, X9
	171 Add X0, X8, 312
	172 Move X8, [X0]
	173 Move X1, [X0+8]
	174 Move X0, X21
	175 NotImplemented "Instruction BLR not yet implemented."
	176 Move X21, X0
	177 Compare X0, 0
	178 JumpIfEqual {477}
	179 Move X27, 0x1A04000
	180 Move X27, [X27+3608]
	181 Move X8, [X21]
	182 Move X1, [X27]
	183 NotImplemented "Instruction LDRH not yet implemented."
	184 Compare X9, 0
	185 JumpIfEqual {192}
	186 Move X10, [X8+176]
	187 Add X10, X10, 8
	188 NotImplemented "Instruction LDUR not yet implemented."
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Subtract X9, X9, 1
	191 Add X10, X10, 16
	192 Move X0, X21
	193 Move W2, W31
	194 Call 0x1C5D788
	195 NotImplemented "Instruction LDRSW not yet implemented."
	196 Add X8, X8, X9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X1, [X0+8]
	200 Move X0, X21
	201 NotImplemented "Instruction BLR not yet implemented."
	202 Move TEMP, X0
	203 And TEMP, TEMP, 1
	204 Compare TEMP, 1
	205 JumpIfNotEqual {273}
	206 Move X8, [X19+32]
	207 Move X8, [X8+192]
	208 Move X1, [X8+208]
	209 Move W8, [X1+309]
	210 Move TEMP, X8
	211 And TEMP, TEMP, 1
	212 Compare TEMP, 1
	213 JumpIfEqual {217}
	214 Move X0, X1
	215 Call 0x1C5D684
	216 Move X1, X0
	217 Move X8, [X21]
	218 NotImplemented "Instruction LDRH not yet implemented."
	219 Compare X9, 0
	220 JumpIfEqual {227}
	221 Move X10, [X8+176]
	222 Add X10, X10, 8
	223 NotImplemented "Instruction LDUR not yet implemented."
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Subtract X9, X9, 1
	226 Add X10, X10, 16
	227 Move X0, X21
	228 Move W2, W31
	229 Call 0x1C5D788
	230 NotImplemented "Instruction LDRSW not yet implemented."
	231 Add X8, X8, X9
	232 Add X0, X8, 312
	233 Move X8, [X0]
	234 Move X1, [X0+8]
	235 Move X0, X21
	236 NotImplemented "Instruction BLR not yet implemented."
	237 Move X23, X0
	238 Compare X0, 0
	239 JumpIfEqual {473}
	240 Move X8, [X23+24]
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move X28, X31
	243 And X8, X8, 0
	244 Add X24, X23, 32
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move X0, X24
	247 Move X1, X31
	248 Call 0x1C252E8
	249 Move X25, X0
	250 Compare X0, 0
	251 JumpIfEqual {269}
	252 Move X8, [X25]
	253 Move X9, [X8+344]
	254 Move X1, [X8+352]
	255 Move X0, X25
	256 NotImplemented "Instruction BLR not yet implemented."
	257 Move X8, [X20]
	258 Move W26, W0
	259 Move X9, [X8+344]
	260 Move X1, [X8+352]
	261 Move X0, X20
	262 NotImplemented "Instruction BLR not yet implemented."
	263 Move W2, [X25+24]
	264 Move W3, W0
	265 Move X0, X22
	266 Move W1, W26
	267 Move X4, X31
	268 Call ArrayPoolEventSource.BufferTrimmed, X0, X1, X2, X3
	269 Move W8, [X23+24]
	270 Add X28, X28, 1
	271 Add X24, X24, 8
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Move X20, X31
	274 Move W22, W31
	275 Compare X21, 0
	276 JumpIfEqual {300}
	277 Move X10, 0x1A04000
	278 Move X8, [X21]
	279 Move X10, [X10+3584]
	280 NotImplemented "Instruction LDRH not yet implemented."
	281 Move X1, [X10]
	282 Compare X9, 0
	283 JumpIfEqual {290}
	284 Move X10, [X8+176]
	285 Add X10, X10, 8
	286 NotImplemented "Instruction LDUR not yet implemented."
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Subtract X9, X9, 1
	289 Add X10, X10, 16
	290 Move X0, X21
	291 Move W2, W31
	292 Call 0x1C5D788
	293 NotImplemented "Instruction LDRSW not yet implemented."
	294 Add X8, X8, X9
	295 Add X0, X8, 312
	296 Move X8, [X0]
	297 Move X1, [X0+8]
	298 Move X0, X21
	299 NotImplemented "Instruction BLR not yet implemented."
	300 Compare X20, 0
	301 JumpIfNotEqual {478}
	302 Compare W22, 0
	303 JumpIfEqual {456}
	304 Move X8, [X19+32]
	305 Move X8, [X8+192]
	306 Move X0, [X8+88]
	307 Move W8, [X0+309]
	308 Move TEMP, X8
	309 And TEMP, TEMP, 1
	310 Compare TEMP, 1
	311 JumpIfEqual {313}
	312 Call 0x1C5D684
	313 Move W8, [X0+224]
	314 Compare W8, 0
	315 JumpIfNotEqual {317}
	316 Call 0x1C17DFC
	317 Move X8, [X19+32]
	318 Move X8, [X8+192]
	319 Move X0, [X8+88]
	320 Move W8, [X0+309]
	321 Move TEMP, X8
	322 And TEMP, TEMP, 1
	323 Compare TEMP, 1
	324 JumpIfEqual {326}
	325 Call 0x1C5D684
	326 Move X8, [X0+184]
	327 Move X20, [X8+8]
	328 Compare X20, 0
	329 JumpIfEqual {471}
	330 Move X8, [X19+32]
	331 Move X8, [X8+192]
	332 Move X1, [X8+192]
	333 Move W8, [X1+309]
	334 Move TEMP, X8
	335 And TEMP, TEMP, 1
	336 Compare TEMP, 1
	337 JumpIfEqual {341}
	338 Move X0, X1
	339 Call 0x1C5D684
	340 Move X1, X0
	341 Move X8, [X20]
	342 NotImplemented "Instruction LDRH not yet implemented."
	343 Compare X9, 0
	344 JumpIfEqual {351}
	345 Move X10, [X8+176]
	346 Add X10, X10, 8
	347 NotImplemented "Instruction LDUR not yet implemented."
	348 NotImplemented "Instruction CMP not yet implemented."
	349 Subtract X9, X9, 1
	350 Add X10, X10, 16
	351 Move X0, X20
	352 Move W2, W31
	353 Call 0x1C5D788
	354 NotImplemented "Instruction LDRSW not yet implemented."
	355 Add X8, X8, X9
	356 Add X0, X8, 312
	357 Move X8, [X0]
	358 Move X1, [X0+8]
	359 Move X0, X20
	360 NotImplemented "Instruction BLR not yet implemented."
	361 Move X20, X0
	362 Compare X0, 0
	363 JumpIfEqual {474}
	364 Move X21, 0x1A04000
	365 Move X21, [X21+3608]
	366 Move X8, [X20]
	367 Move X1, [X21]
	368 NotImplemented "Instruction LDRH not yet implemented."
	369 Compare X9, 0
	370 JumpIfEqual {377}
	371 Move X10, [X8+176]
	372 Add X10, X10, 8
	373 NotImplemented "Instruction LDUR not yet implemented."
	374 NotImplemented "Instruction CMP not yet implemented."
	375 Subtract X9, X9, 1
	376 Add X10, X10, 16
	377 Move X0, X20
	378 Move W2, W31
	379 Call 0x1C5D788
	380 NotImplemented "Instruction LDRSW not yet implemented."
	381 Add X8, X8, X9
	382 Add X0, X8, 312
	383 Move X8, [X0]
	384 Move X1, [X0+8]
	385 Move X0, X20
	386 NotImplemented "Instruction BLR not yet implemented."
	387 Move TEMP, X0
	388 And TEMP, TEMP, 1
	389 Compare TEMP, 1
	390 JumpIfNotEqual {428}
	391 Move X8, [X19+32]
	392 Move X8, [X8+192]
	393 Move X1, [X8+208]
	394 Move W8, [X1+309]
	395 Move TEMP, X8
	396 And TEMP, TEMP, 1
	397 Compare TEMP, 1
	398 JumpIfEqual {402}
	399 Move X0, X1
	400 Call 0x1C5D684
	401 Move X1, X0
	402 Move X8, [X20]
	403 NotImplemented "Instruction LDRH not yet implemented."
	404 Compare X9, 0
	405 JumpIfEqual {412}
	406 Move X10, [X8+176]
	407 Add X10, X10, 8
	408 NotImplemented "Instruction LDUR not yet implemented."
	409 NotImplemented "Instruction CMP not yet implemented."
	410 Subtract X9, X9, 1
	411 Add X10, X10, 16
	412 Move X0, X20
	413 Move W2, W31
	414 Call 0x1C5D788
	415 NotImplemented "Instruction LDRSW not yet implemented."
	416 Add X8, X8, X9
	417 Add X0, X8, 312
	418 Move X8, [X0]
	419 Move X1, [X0+8]
	420 Move X0, X20
	421 NotImplemented "Instruction BLR not yet implemented."
	422 Compare X0, 0
	423 JumpIfEqual {472}
	424 Move W2, [X0+24]
	425 Move W1, W31
	426 Move X3, X31
	427 Call Array.Clear, X0, X1, X2
	428 Move X19, X31
	429 Compare X20, 0
	430 JumpIfEqual {454}
	431 Move X10, 0x1A03000
	432 Move X8, [X20]
	433 Move X10, [X10+3584]
	434 NotImplemented "Instruction LDRH not yet implemented."
	435 Move X1, [X10]
	436 Compare X9, 0
	437 JumpIfEqual {444}
	438 Move X10, [X8+176]
	439 Add X10, X10, 8
	440 NotImplemented "Instruction LDUR not yet implemented."
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Subtract X9, X9, 1
	443 Add X10, X10, 16
	444 Move X0, X20
	445 Move W2, W31
	446 Call 0x1C5D788
	447 NotImplemented "Instruction LDRSW not yet implemented."
	448 Add X8, X8, X9
	449 Add X0, X8, 312
	450 Move X8, [X0]
	451 Move X1, [X0+8]
	452 Move X0, X20
	453 NotImplemented "Instruction BLR not yet implemented."
	454 Compare X19, 0
	455 JumpIfNotEqual {475}
	456 Move X20, [X31+80]
	457 Move X19, [X31+88]
	458 Move X22, [X31+64]
	459 Move X21, [X31+72]
	460 Move X24, [X31+48]
	461 Move X23, [X31+56]
	462 Move X26, [X31+32]
	463 Move X25, [X31+40]
	464 Move X28, [X31+16]
	465 Move X27, [X31+24]
	466 Move W0, 1
	467 Move X30, [X31+96]
	468 Return X0
	469 Call 0x1C17F28
	470 Call 0x1C17F28
	471 Call 0x1C17F20
	472 Call 0x1C17F20
	473 Call 0x1C17F20
	474 Call 0x1C17F20
	475 Move X0, X19
	476 Call 0x1C17F18
	477 Call 0x1C17F20
	478 Move X0, X20
	479 Call 0x1C17F18
	480 Move X22, X0
	481 NotImplemented "Instruction CMP not yet implemented."
	482 Move X0, X22
	483 Call 0x3EB2AD0
	484 Move X19, [X0]
	485 Call 0x3EB2AE0
	486 Move X19, X31
	487 Move X22, X0
	488 Compare X20, 0
	489 JumpIfEqual {513}
	490 Move X10, 0x1A03000
	491 Move X8, [X20]
	492 Move X10, [X10+3584]
	493 NotImplemented "Instruction LDRH not yet implemented."
	494 Move X1, [X10]
	495 Compare X9, 0
	496 JumpIfEqual {503}
	497 Move X10, [X8+176]
	498 Add X10, X10, 8
	499 NotImplemented "Instruction LDUR not yet implemented."
	500 NotImplemented "Instruction CMP not yet implemented."
	501 Subtract X9, X9, 1
	502 Add X10, X10, 16
	503 Move X0, X20
	504 Move W2, W31
	505 Call 0x1C5D788
	506 NotImplemented "Instruction LDRSW not yet implemented."
	507 Add X8, X8, X9
	508 Add X0, X8, 312
	509 Move X8, [X0]
	510 Move X1, [X0+8]
	511 Move X0, X20
	512 NotImplemented "Instruction BLR not yet implemented."
	513 Compare X19, 0
	514 JumpIfEqual {555}
	515 Move X0, X19
	516 Call 0x1C17F18
	517 Move X22, X0
	518 NotImplemented "Instruction CMP not yet implemented."
	519 Move X0, X22
	520 Call 0x3EB2AD0
	521 Move X20, [X0]
	522 Call 0x3EB2AE0
	523 Move W22, 1
	524 Compare X21, 0
	525 JumpIfNotEqual {277}
	526 Move X20, X31
	527 Move X22, X0
	528 Compare X21, 0
	529 JumpIfEqual {553}
	530 Move X10, 0x1A03000
	531 Move X8, [X21]
	532 Move X10, [X10+3584]
	533 NotImplemented "Instruction LDRH not yet implemented."
	534 Move X1, [X10]
	535 Compare X9, 0
	536 JumpIfEqual {543}
	537 Move X10, [X8+176]
	538 Add X10, X10, 8
	539 NotImplemented "Instruction LDUR not yet implemented."
	540 NotImplemented "Instruction CMP not yet implemented."
	541 Subtract X9, X9, 1
	542 Add X10, X10, 16
	543 Move X0, X21
	544 Move W2, W31
	545 Call 0x1C5D788
	546 NotImplemented "Instruction LDRSW not yet implemented."
	547 Add X8, X8, X9
	548 Add X0, X8, 312
	549 Move X8, [X0]
	550 Move X1, [X0+8]
	551 Move X0, X21
	552 NotImplemented "Instruction BLR not yet implemented."
	553 Compare X20, 0
	554 JumpIfNotEqual {557}
	555 Move X0, X22
	556 Call 0x1D2D690
	557 Move X0, X20
	558 Call 0x1C17F18
	559 Call 0x1991590

Method: System.Boolean Gen2GcCallbackFunc(System.Object target)

Disassembly:
	0x026F1284 MOV W26, W0
	0x026F1288 LDP X9, X1, [X8 + 0x158]
	0x026F128C MOV X0, X20
	0x026F1290 BLR X9
	0x026F1294 LDR W2, [X25 + 0x18]
	0x026F1298 MOV W3, W0
	0x026F129C MOV X0, X22
	0x026F12A0 MOV W1, W26
	0x026F12A4 MOV X4, X31
	0x026F12A8 BL 0x335E428
	0x026F12AC LDR W8, [X23 + 0x18]
	0x026F12B0 ADD X28, X28, 0x1
	0x026F12B4 ADD X24, X24, 0x8
	0x026F12B8 CMP X28, W8, SXTW
	0x026F12BC B.LT 0x26F1254
	0x026F12C0 B 0x26F1164
	0x026F12C4 MOV X20, X31
	0x026F12C8 MOV W22, W31
	0x026F12CC CBZ X21, 0x26F1330
	0x026F12D0 ADRP X10, 0x1A02000
	0x026F12D4 LDR X8, [X21]
	0x026F12D8 LDR X10, [X10 + 0xE00]
	0x026F12DC LDRH W9, [X8 + 0x12E]
	0x026F12E0 LDR X1, [X10]
	0x026F12E4 CBZ X9, 0x26F1308
	0x026F12E8 LDR X10, [X8 + 0xB0]
	0x026F12EC ADD X10, X10, 0x8
	0x026F12F0 LDUR X11, [X10 - 0x8]
	0x026F12F4 CMP X11, X1
	0x026F12F8 B.EQ 0x26F1318
	0x026F12FC SUBS X9, X9, 0x1
	0x026F1300 ADD X10, X10, 0x10
	0x026F1304 B.NE 0x26F12F0
	0x026F1308 MOV X0, X21
	0x026F130C MOV W2, W31
	0x026F1310 BL 0x1C5C788
	0x026F1314 B 0x26F1324
	0x026F1318 LDRSW X9, [X10]
	0x026F131C ADD X8, X8, X9, 0x4, LSL
	0x026F1320 ADD X0, X8, 0x138
	0x026F1324 LDP X8, X1, [X0]
	0x026F1328 MOV X0, X21
	0x026F132C BLR X8
	0x026F1330 CBNZ X20, 0x26F159C
	0x026F1334 CBZ W22, 0x26F1558
	0x026F1338 LDR X8, [X19 + 0x20]
	0x026F133C LDR X8, [X8 + 0xC0]
	0x026F1340 LDR X0, [X8 + 0x58]
	0x026F1344 LDRB W8, [X0 + 0x135]
	0x026F1348 TBNZ X8, 0x0, 0x26F1350

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X20, X1
	006 Move X19, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {15}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X8, X0
	015 Move X8, [X8+192]
	016 Move X1, [X8+8]
	017 Move W8, [X1+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {25}
	022 Move X0, X1
	023 Call 0x1C5D684
	024 Move X1, X0
	025 Compare X19, 0
	026 JumpIfEqual {66}
	027 Move X8, [X19]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X0, [X20+32]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move X8, [X0+192]
	037 Move X1, [X8+8]
	038 Move W8, [X1+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {46}
	043 Move X0, X1
	044 Call 0x1C5D684
	045 Move X1, X0
	046 Move X8, [X19]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X0, [X20+32]
	049 Move W8, [X0+309]
	050 Move TEMP, X8
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {55}
	054 Call 0x1C5D684
	055 Move X8, [X0+192]
	056 Move X0, X19
	057 Move X1, [X8+256]
	058 Call 0x26F0A78, X0
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move W0, 1
	062 Move X30, [X31+32]
	063 Return X0
	064 Move X0, X19
	065 Call 0x1C181E0
	066 Call 0x1C17F20

Method: System.Buffers.TlsOverPerCoreLockedStacksArrayPool`1/MemoryPressure<T> GetMemoryPressure()

Disassembly:
	0x026F134C BL 0x1C5C684
	0x026F1350 LDR W8, [X0 + 0xE0]
	0x026F1354 CBNZ W8, 0x26F135C
	0x026F1358 BL 0x1C16DFC
	0x026F135C LDR X8, [X19 + 0x20]
	0x026F1360 LDR X8, [X8 + 0xC0]
	0x026F1364 LDR X0, [X8 + 0x58]
	0x026F1368 LDRB W8, [X0 + 0x135]
	0x026F136C TBNZ X8, 0x0, 0x26F1374
	0x026F1370 BL 0x1C5C684
	0x026F1374 LDR X8, [X0 + 0xB8]
	0x026F1378 LDR X20, [X8 + 0x8]
	0x026F137C CBZ X20, 0x26F1580
	0x026F1380 LDR X8, [X19 + 0x20]
	0x026F1384 LDR X8, [X8 + 0xC0]
	0x026F1388 LDR X1, [X8 + 0xC0]
	0x026F138C LDRB W8, [X1 + 0x135]
	0x026F1390 TBNZ X8, 0x0, 0x26F13A0
	0x026F1394 MOV X0, X1
	0x026F1398 BL 0x1C5C684
	0x026F139C MOV X1, X0
	0x026F13A0 LDR X8, [X20]
	0x026F13A4 LDRH W9, [X8 + 0x12E]
	0x026F13A8 CBZ X9, 0x26F13CC
	0x026F13AC LDR X10, [X8 + 0xB0]
	0x026F13B0 ADD X10, X10, 0x8
	0x026F13B4 LDUR X11, [X10 - 0x8]
	0x026F13B8 CMP X11, X1
	0x026F13BC B.EQ 0x26F13DC
	0x026F13C0 SUBS X9, X9, 0x1
	0x026F13C4 ADD X10, X10, 0x10
	0x026F13C8 B.NE 0x26F13B4
	0x026F13CC MOV X0, X20
	0x026F13D0 MOV W2, W31
	0x026F13D4 BL 0x1C5C788
	0x026F13D8 B 0x26F13E8
	0x026F13DC LDRSW X9, [X10]
	0x026F13E0 ADD X8, X8, X9, 0x4, LSL
	0x026F13E4 ADD X0, X8, 0x138
	0x026F13E8 LDP X8, X1, [X0]
	0x026F13EC MOV X0, X20
	0x026F13F0 BLR X8
	0x026F13F4 MOV X20, X0
	0x026F13F8 CBZ X0, 0x26F158C
	0x026F13FC ADRP X21, 0x1A02000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X20, 0x1CEA000
	006 Move X19, 0x1A0A000
	007 Move W8, [X20+1343]
	008 Move X19, [X19+3088]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x1A0A000
	014 Move X0, [X0+3088]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+1343], W8
	018 Move X0, [X19]
	019 Move [X31+40], X31
	020 Move [X31+16], X31
	021 Move [X31+24], X31
	022 Move [X31+8], X31
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Add X0, X31, 44
	028 Add X1, X31, 24
	029 Add X2, X31, 40
	030 Add X3, X31, 16
	031 Add X4, X31, 8
	032 Move X5, X31
	033 Call GC.GetMemoryInfo, X0, X1, X2, X3, X4
	034 Move S0, [X31+40]
	035 Move S1, [X31+44]
	036 Move X8, -29372416
	037 Move X9, -29372416
	038 Move V2, [X8+1216]
	039 Move V3, [X9+2088]
	040 NotImplemented "Instruction UCVTF not yet implemented."
	041 NotImplemented "Instruction UCVTF not yet implemented."
	042 Multiply D2, D1, D2
	043 Multiply D1, D1, D3
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X30, [X31+32]
	047 NotImplemented "Instruction FCMP not yet implemented."
	048 NotImplemented "Instruction CSET not yet implemented."
	049 NotImplemented "Instruction FCMP not yet implemented."
	050 Move W9, 2
	051 NotImplemented "Instruction CSEL not yet implemented."
	052 Add X31, X31, 64
	053 Return X0

Method: System.Boolean GetTrimBuffers()

Disassembly:
	0x026F1400 LDR X21, [X21 + 0xE18]
	0x026F1404 LDR X8, [X20]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Void .cctor()

Disassembly:
	0x026F1408 LDR X1, [X21]
	0x026F140C LDRH W9, [X8 + 0x12E]
	0x026F1410 CBZ X9, 0x26F1434
	0x026F1414 LDR X10, [X8 + 0xB0]
	0x026F1418 ADD X10, X10, 0x8
	0x026F141C LDUR X11, [X10 - 0x8]
	0x026F1420 CMP X11, X1
	0x026F1424 B.EQ 0x26F1444
	0x026F1428 SUBS X9, X9, 0x1
	0x026F142C ADD X10, X10, 0x10
	0x026F1430 B.NE 0x26F141C
	0x026F1434 MOV X0, X20
	0x026F1438 MOV W2, W31
	0x026F143C BL 0x1C5C788
	0x026F1440 B 0x26F1450
	0x026F1444 LDRSW X9, [X10]
	0x026F1448 ADD X8, X8, X9, 0x4, LSL
	0x026F144C ADD X0, X8, 0x138
	0x026F1450 LDP X8, X1, [X0]
	0x026F1454 MOV X0, X20
	0x026F1458 BLR X8
	0x026F145C TBZ X0, 0x0, 0x26F14EC
	0x026F1460 LDR X8, [X19 + 0x20]
	0x026F1464 LDR X8, [X8 + 0xC0]
	0x026F1468 LDR X1, [X8 + 0xD0]
	0x026F146C LDRB W8, [X1 + 0x135]
	0x026F1470 TBNZ X8, 0x0, 0x26F1480
	0x026F1474 MOV X0, X1
	0x026F1478 BL 0x1C5C684
	0x026F147C MOV X1, X0
	0x026F1480 LDR X8, [X20]
	0x026F1484 LDRH W9, [X8 + 0x12E]
	0x026F1488 CBZ X9, 0x26F14AC
	0x026F148C LDR X10, [X8 + 0xB0]
	0x026F1490 ADD X10, X10, 0x8
	0x026F1494 LDUR X11, [X10 - 0x8]
	0x026F1498 CMP X11, X1
	0x026F149C B.EQ 0x26F14BC
	0x026F14A0 SUBS X9, X9, 0x1
	0x026F14A4 ADD X10, X10, 0x10
	0x026F14A8 B.NE 0x26F1494
	0x026F14AC MOV X0, X20
	0x026F14B0 MOV W2, W31
	0x026F14B4 BL 0x1C5C788
	0x026F14B8 B 0x26F14C8
	0x026F14BC LDRSW X9, [X10]
	0x026F14C0 ADD X8, X8, X9, 0x4, LSL
	0x026F14C4 ADD X0, X8, 0x138
	0x026F14C8 LDP X8, X1, [X0]
	0x026F14CC MOV X0, X20
	0x026F14D0 BLR X8
	0x026F14D4 CBZ X0, 0x26F1584
	0x026F14D8 LDR W2, [X0 + 0x18]
	0x026F14DC MOV W1, W31
	0x026F14E0 MOV X3, X31
	0x026F14E4 BL 0x339FA34
	0x026F14E8 B 0x26F1404
	0x026F14EC MOV X19, X31
	0x026F14F0 CBZ X20, 0x26F1554
	0x026F14F4 ADRP X10, 0x1A02000
	0x026F14F8 LDR X8, [X20]
	0x026F14FC LDR X10, [X10 + 0xE00]
	0x026F1500 LDRH W9, [X8 + 0x12E]
	0x026F1504 LDR X1, [X10]
	0x026F1508 CBZ X9, 0x26F152C
	0x026F150C LDR X10, [X8 + 0xB0]
	0x026F1510 ADD X10, X10, 0x8
	0x026F1514 LDUR X11, [X10 - 0x8]
	0x026F1518 CMP X11, X1
	0x026F151C B.EQ 0x26F153C
	0x026F1520 SUBS X9, X9, 0x1
	0x026F1524 ADD X10, X10, 0x10
	0x026F1528 B.NE 0x26F1514
	0x026F152C MOV X0, X20
	0x026F1530 MOV W2, W31
	0x026F1534 BL 0x1C5C788
	0x026F1538 B 0x26F1548
	0x026F153C LDRSW X9, [X10]
	0x026F1540 ADD X8, X8, X9, 0x4, LSL
	0x026F1544 ADD X0, X8, 0x138
	0x026F1548 LDP X8, X1, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Add X8, X0, 309
	007 NotImplemented "Instruction LDRH not yet implemented."
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {16}
	012 Call 0x1C5D684
	013 Move X0, [X19+32]
	014 Add X8, X0, 309
	015 NotImplemented "Instruction LDRH not yet implemented."
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Move X8, [X0+192]
	022 Move X0, [X8+88]
	023 Move W8, [X0+309]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {29}
	028 Call 0x1C5D684
	029 Move X8, [X0+184]
	030 Move W9, 1
	031 Move [X8], W9
	032 Move X0, [X19+32]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Move X8, [X0+192]
	040 Move X0, [X8+88]
	041 Move W8, [X0+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {47}
	046 Call 0x1C5D684
	047 Move X8, [X0+184]
	048 Move W8, [X8]
	049 Compare W8, 0
	050 JumpIfEqual {81}
	051 Move X0, [X19+32]
	052 Move W8, [X0+309]
	053 Move TEMP, X8
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {58}
	057 Call 0x1C5D684
	058 Move X8, [X0+192]
	059 Move X0, [X8+128]
	060 Move W8, [X0+309]
	061 Move TEMP, X8
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {66}
	065 Call 0x1C5D684
	066 Call 0x1C17F10
	067 Move X8, [X19+32]
	068 Move X20, X0
	069 Move W9, [X8+309]
	070 Move TEMP, X9
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {77}
	074 Move X0, X8
	075 Call 0x1C5D684
	076 Move X8, X0
	077 Move X8, [X8+192]
	078 Move X0, X20
	079 Move X1, [X8+272]
	080 Call 0x29974AC, X0
	081 Move X20, X31
	082 Move X0, [X19+32]
	083 Move W8, [X0+309]
	084 Move TEMP, X8
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfEqual {89}
	088 Call 0x1C5D684
	089 Move X8, [X0+192]
	090 Move X0, [X8+88]
	091 Move W8, [X0+309]
	092 Move TEMP, X8
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {97}
	096 Call 0x1C5D684
	097 Move X8, [X0+184]
	098 Move [X8+8], X20
	099 Move X0, [X19+32]
	100 Move W8, [X0+309]
	101 Move TEMP, X8
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {106}
	105 Call 0x1C5D684
	106 Move X8, [X0+192]
	107 Move X0, [X8+88]
	108 Move W8, [X0+309]
	109 Move TEMP, X8
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {118}
	113 Move X20, [X31+16]
	114 Move X19, [X31+24]
	115 Move X30, [X31+32]
	116 Call 0x1C5D684
	117 Return 
	118 Move X20, [X31+16]
	119 Move X19, [X31+24]
	120 Move X30, [X31+32]
	121 Return 

