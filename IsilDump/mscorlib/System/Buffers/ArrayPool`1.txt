Type: System.Buffers.ArrayPool`1

Method: System.Buffers.ArrayPool`1<T> get_Shared()

Disassembly:
	0x02B884BC BL 0x1C5C684
	0x02B884C0 LDR X8, [X0 + 0xC0]
	0x02B884C4 MOV X0, X22
	0x02B884C8 MOV W1, W19
	0x02B884CC MOV W2, W23
	0x02B884D0 LDR X4, [X8 + 0x50]
	0x02B884D4 MOV W3, W20
	0x02B884D8 BL 0x22EADEC
	0x02B884DC LDP X20, X19, [X31 + 0x20]
	0x02B884E0 LDP X22, X21, [X31 + 0x10]
	0x02B884E4 ORN W8, W31, W0, 0x0
	0x02B884E8 UBFM W0, W8, 0x1F, 0x1F
	0x02B884EC LDP X30, X23, [X31], #0x30
	0x02B884F0 RET
	0x02B884F4 STR X30, [X31 - 0x10]!
	0x02B884F8 MOV X0, X31
	0x02B884FC BL 0x339D82C
	0x02B88500 MOV W0, W31
	0x02B88504 LDR X30, [X31], #0x10
	0x02B88508 RET
	0x02B8850C SUB X31, X31, 0x60
	0x02B88510 STR X30, [X31 + 0x40]
	0x02B88514 STP X20, X19, [X31 + 0x50]
	0x02B88518 LDR X8, [X1 + 0x20]
	0x02B8851C MOV X19, X1
	0x02B88520 MOV X20, X0
	0x02B88524 LDRB W9, [X8 + 0x135]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+32]
	005 Move W8, [X0+309]
	006 Move TEMP, X8
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {11}
	010 Call 0x1C5D684
	011 Move X8, [X0+192]
	012 Move X0, [X8+8]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move X0, [X19+32]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move X8, [X0+192]
	031 Move X0, [X8+8]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X0+184]
	039 Move X0, [X8]
	040 Move X30, [X31+16]
	041 Move X19, [X31+24]
	042 Return X0

Method: T[] Rent(System.Int32 minimumLength)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void Return(T[] array, System.Boolean clearArray = False)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void .ctor()

Disassembly:
	0x02B88528 TBNZ X9, 0x0, 0x2B88538
	0x02B8852C MOV X0, X8

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x02B88530 BL 0x1C5C684
	0x02B88534 MOV X8, X0
	0x02B88538 LDR X8, [X8 + 0xC0]
	0x02B8853C LDR X0, [X8 + 0x8]
	0x02B88540 LDRB W8, [X0 + 0x135]
	0x02B88544 TBNZ X8, 0x0, 0x2B8854C
	0x02B88548 BL 0x1C5C684
	0x02B8854C LDR W8, [X0 + 0xE0]
	0x02B88550 CBNZ W8, 0x2B88558
	0x02B88554 BL 0x1C16DFC
	0x02B88558 LDR X0, [X19 + 0x20]
	0x02B8855C LDRB W8, [X0 + 0x135]
	0x02B88560 TBNZ X8, 0x0, 0x2B88568
	0x02B88564 BL 0x1C5C684
	0x02B88568 LDR X8, [X0 + 0xC0]
	0x02B8856C MOV X0, X20
	0x02B88570 LDR X1, [X8 + 0x58]
	0x02B88574 ADD X8, X31, 0x0
	0x02B88578 BL 0x2B87C28
	0x02B8857C LDR X8, [X31 + 0x10]
	0x02B88580 LDR V0, [X31]
	0x02B88584 STR X8, [X31 + 0x30]
	0x02B88588 STR V0, [X31 + 0x2]
	0x02B8858C STR V0, [X31]
	0x02B88590 STR X8, [X31 + 0x10]
	0x02B88594 LDR X0, [X19 + 0x20]
	0x02B88598 LDRB W8, [X0 + 0x135]
	0x02B8859C TBNZ X8, 0x0, 0x2B885A4
	0x02B885A0 BL 0x1C5C684
	0x02B885A4 LDR X8, [X0 + 0xC0]
	0x02B885A8 ADD X1, X31, 0x0
	0x02B885AC LDR X0, [X8 + 0x20]
	0x02B885B0 BL 0x1C16E04
	0x02B885B4 LDP X20, X19, [X31 + 0x50]
	0x02B885B8 LDR X30, [X31 + 0x40]
	0x02B885BC ADD X31, X31, 0x60
	0x02B885C0 RET
	0x02B885C4 SUB X31, X31, 0x60
	0x02B885C8 STR X30, [X31 + 0x40]
	0x02B885CC STP X20, X19, [X31 + 0x50]
	0x02B885D0 LDR X8, [X1 + 0x20]
	0x02B885D4 MOV X19, X1
	0x02B885D8 MOV X20, X0
	0x02B885DC LDRB W9, [X8 + 0x135]
	0x02B885E0 TBNZ X9, 0x0, 0x2B885F0
	0x02B885E4 MOV X0, X8
	0x02B885E8 BL 0x1C5C684
	0x02B885EC MOV X8, X0
	0x02B885F0 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8+16]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Call 0x1C17F10
	021 Move X8, [X19+32]
	022 Move X20, X0
	023 Move W9, [X8+309]
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {31}
	028 Move X0, X8
	029 Call 0x1C5D684
	030 Move X8, X0
	031 Move X8, [X8+192]
	032 Move X0, X20
	033 Move X1, [X8+24]
	034 Call 0x26F00B4, X0
	035 Move X0, [X19+32]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X0+192]
	043 Move X0, [X8+8]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move X8, [X0+184]
	051 Move [X8], X20
	052 Move X0, [X19+32]
	053 Move W8, [X0+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {59}
	058 Call 0x1C5D684
	059 Move X8, [X0+192]
	060 Move X0, [X8+8]
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {71}
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Call 0x1C5D684
	070 Return 
	071 Move X20, [X31+16]
	072 Move X19, [X31+24]
	073 Move X30, [X31+32]
	074 Return 

