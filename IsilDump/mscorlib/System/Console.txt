Type: System.Console

Method: System.Void .cctor()

Disassembly:
	0x033C3504 BL 0x1C16DFC
	0x033C3508 MOV W0, W19
	0x033C350C LDP X20, X19, [X31 + 0x10]
	0x033C3510 LDP X30, X21, [X31], #0x20
	0x033C3514 B 0x33C3518
	0x033C3518 STR X30, [X31 - 0x20]!
	0x033C351C STP X20, X19, [X31 + 0x10]
	0x033C3520 ADRP X20, 0x101A000
	0x033C3524 LDRB W8, [X20 + 0x260]
	0x033C3528 MOV W19, W0
	0x033C352C TBNZ X8, 0x0, 0x33C3550
	0x033C3530 ADRP X0, 0xD64000
	0x033C3534 LDR X0, [X0 + 0x7B8]
	0x033C3538 BL 0x1C16CF4
	0x033C353C ADRP X0, 0xD69000
	0x033C3540 LDR X0, [X0 + 0x760]
	0x033C3544 BL 0x1C16CF4
	0x033C3548 MOVZ W8, 0x1
	0x033C354C STRB W8, [X20 + 0x260]
	0x033C3550 CMP W19, 0x10
	0x033C3554 B.CS 0x33C35EC
	0x033C3558 ADRP X20, 0xD64000
	0x033C355C LDR X20, [X20 + 0x7B8]
	0x033C3560 LDR X0, [X20]
	0x033C3564 LDR W8, [X0 + 0xE0]
	0x033C3568 CBNZ W8, 0x33C3574
	0x033C356C BL 0x1C16DFC
	0x033C3570 LDR X0, [X20]
	0x033C3574 LDR X8, [X0 + 0xB8]
	0x033C3578 LDR X20, [X8]
	0x033C357C CBZ X20, 0x33C3648
	0x033C3580 ADRP X10, 0xD69000
	0x033C3584 LDR X8, [X20]
	0x033C3588 LDR X10, [X10 + 0x760]
	0x033C358C LDRH W9, [X8 + 0x12E]
	0x033C3590 LDR X1, [X10]
	0x033C3594 CBZ X9, 0x33C35B8
	0x033C3598 LDR X10, [X8 + 0xB0]
	0x033C359C ADD X10, X10, 0x8
	0x033C35A0 LDUR X11, [X10 - 0x8]
	0x033C35A4 CMP X11, X1
	0x033C35A8 B.EQ 0x33C35C8
	0x033C35AC SUBS X9, X9, 0x1
	0x033C35B0 ADD X10, X10, 0x10
	0x033C35B4 B.NE 0x33C35A0
	0x033C35B8 MOV X0, X20
	0x033C35BC MOV W2, W31
	0x033C35C0 BL 0x1C5C788
	0x033C35C4 B 0x33C35D4
	0x033C35C8 LDRSW X9, [X10]
	0x033C35CC ADD X8, X8, X9, 0x4, LSL
	0x033C35D0 ADD X0, X8, 0x138
	0x033C35D4 LDP X3, X2, [X0]
	0x033C35D8 MOV X0, X20
	0x033C35DC MOV W1, W19
	0x033C35E0 LDP X20, X19, [X31 + 0x10]
	0x033C35E4 LDR X30, [X31], #0x20
	0x033C35E8 BR X3
	0x033C35EC ADRP X0, 0xD38000
	0x033C35F0 LDR X0, [X0 + 0x760]
	0x033C35F4 BL 0x1C16D08
	0x033C35F8 BL 0x1C16F10
	0x033C35FC MOV X19, X0
	0x033C3600 ADRP X0, 0xD3A000
	0x033C3604 LDR X0, [X0 + 0xEC8]
	0x033C3608 BL 0x1C16D08
	0x033C360C MOV X20, X0
	0x033C3610 ADRP X0, 0xD69000
	0x033C3614 LDR X0, [X0 + 0x768]
	0x033C3618 BL 0x1C16D08
	0x033C361C MOV X2, X0
	0x033C3620 MOV X0, X19
	0x033C3624 MOV X1, X20
	0x033C3628 MOV X3, X31
	0x033C362C BL 0x3311888
	0x033C3630 ADRP X0, 0xD69000
	0x033C3634 LDR X0, [X0 + 0x770]
	0x033C3638 BL 0x1C16D08
	0x033C363C MOV X1, X0
	0x033C3640 MOV X0, X19
	0x033C3644 BL 0x1C16DEC
	0x033C3648 BL 0x1C16F20
	0x033C364C STR X30, [X31 - 0x20]!
	0x033C3650 STP X20, X19, [X31 + 0x10]
	0x033C3654 ADRP X19, 0x101A000
	0x033C3658 ADRP X20, 0xD38000
	0x033C365C LDRB W8, [X19 + 0x23D]
	0x033C3660 LDR X20, [X20 + 0x958]
	0x033C3664 TBNZ X8, 0x0, 0x33C367C
	0x033C3668 ADRP X0, 0xD38000
	0x033C366C LDR X0, [X0 + 0x958]
	0x033C3670 BL 0x1C16CF4
	0x033C3674 MOVZ W8, 0x1
	0x033C3678 STRB W8, [X19 + 0x23D]
	0x033C367C LDR X0, [X20]
	0x033C3680 LDR W8, [X0 + 0xE0]
	0x033C3684 CBNZ W8, 0x33C368C
	0x033C3688 BL 0x1C16DFC
	0x033C368C MOV W0, W31
	0x033C3690 BL 0x33C36A4
	0x033C3694 LDP X20, X19, [X31 + 0x10]
	0x033C3698 AND X1, X1, 0x0
	0x033C369C LDR X30, [X31], #0x20
	0x033C36A0 RET
	0x033C36A4 STP X30, X21, [X31 - 0x20]!
	0x033C36A8 STP X20, X19, [X31 + 0x10]
	0x033C36AC ADRP X20, 0x101A000
	0x033C36B0 ADRP X21, 0xD64000
	0x033C36B4 LDRB W8, [X20 + 0x23E]
	0x033C36B8 LDR X21, [X21 + 0x7B8]
	0x033C36BC MOV W19, W0
	0x033C36C0 TBNZ X8, 0x0, 0x33C36D8
	0x033C36C4 ADRP X0, 0xD64000
	0x033C36C8 LDR X0, [X0 + 0x7B8]
	0x033C36CC BL 0x1C16CF4
	0x033C36D0 MOVZ W8, 0x1
	0x033C36D4 STRB W8, [X20 + 0x23E]
	0x033C36D8 LDR X0, [X21]
	0x033C36DC LDR W8, [X0 + 0xE0]
	0x033C36E0 CBNZ W8, 0x33C36E8
	0x033C36E4 BL 0x1C16DFC
	0x033C36E8 AND W0, W19, 0x1
	0x033C36EC BL 0x33C3700
	0x033C36F0 LDP X20, X19, [X31 + 0x10]
	0x033C36F4 AND X1, X1, 0x0
	0x033C36F8 LDP X30, X21, [X31], #0x20
	0x033C36FC RET
	0x033C3700 STP X30, X21, [X31 - 0x20]!
	0x033C3704 STP X20, X19, [X31 + 0x10]
	0x033C3708 ADRP X21, 0x101A000
	0x033C370C ADRP X20, 0xD64000
	0x033C3710 LDRB W8, [X21 + 0x261]
	0x033C3714 LDR X20, [X20 + 0x7B8]
	0x033C3718 MOV W19, W0
	0x033C371C TBNZ X8, 0x0, 0x33C3740
	0x033C3720 ADRP X0, 0xD64000
	0x033C3724 LDR X0, [X0 + 0x7B8]
	0x033C3728 BL 0x1C16CF4
	0x033C372C ADRP X0, 0xD69000
	0x033C3730 LDR X0, [X0 + 0x760]
	0x033C3734 BL 0x1C16CF4
	0x033C3738 MOVZ W8, 0x1
	0x033C373C STRB W8, [X21 + 0x261]
	0x033C3740 LDR X0, [X20]
	0x033C3744 LDR W8, [X0 + 0xE0]
	0x033C3748 CBNZ W8, 0x33C3754
	0x033C374C BL 0x1C16DFC
	0x033C3750 LDR X0, [X20]
	0x033C3754 LDR X8, [X0 + 0xB8]
	0x033C3758 LDR X20, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x101B000
	005 Move X19, 0xD6A000
	006 Move W8, [X20+556]
	007 Move X19, [X19+1808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {29}
	012 Move X0, 0xD39000
	013 Move X0, [X0+2392]
	014 Call 0x1C17CF4
	015 Move X0, 0xD60000
	016 Move X0, [X0+2520]
	017 Call 0x1C17CF4
	018 Move X0, 0xD6A000
	019 Move X0, [X0+1816]
	020 Call 0x1C17CF4
	021 Move X0, 0xD6A000
	022 Move X0, [X0+1824]
	023 Call 0x1C17CF4
	024 Move X0, 0xD6A000
	025 Move X0, [X0+1808]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+556], W8
	029 Move X0, [X19]
	030 Move X19, 0xD39000
	031 Move X19, [X19+2392]
	032 Move X1, X31
	033 Move [X31+12], W31
	034 Call File.Exists, X0
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {40}
	039 Move W8, 1
	040 Move X8, 0xD6A000
	041 Move X8, [X8+1824]
	042 Move X1, X31
	043 Move X0, [X8]
	044 Call File.Exists, X0
	045 And W8, W0, 1
	046 Move X9, [X19]
	047 Move X9, [X9+184]
	048 Move [X9+24], W8
	049 Call 0x1C88BC4
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X8, 0xD6A000
	052 Move X8, [X8+1816]
	053 Move X0, [X8]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Call WindowsConsole.GetInputCodePage
	059 Move X1, X31
	060 Call Encoding.GetEncoding, X0
	061 Move X8, [X19]
	062 Move X8, [X8+184]
	063 Move [X8+32], X0
	064 Call WindowsConsole.GetOutputCodePage
	065 Move X1, X31
	066 Call Encoding.GetEncoding, X0
	067 Move X1, X0
	068 Move X8, [X19]
	069 Move X8, [X8+184]
	070 Move [X8+40], X1
	071 Move X20, 0xD60000
	072 Move X20, [X20+2520]
	073 Move [X31+12], W31
	074 Move X0, [X20]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Add X0, X31, 12
	080 Move X1, X31
	081 Call EncodingHelper.InternalCodePage, X0
	082 Move W8, [X31+12]
	083 Add W31, W8, 1
	084 And W9, W8, 0xFFFFFFF
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move TEMP, X8
	087 And TEMP, TEMP, 0x10000000
	088 Compare TEMP, 0x10000000
	089 JumpIfEqual {92}
	090 Move X0, X31
	091 Call Encoding.get_Default
	092 Move X0, [X20]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move X0, X31
	098 Call EncodingHelper.get_UTF8Unmarked
	099 Move X8, [X19]
	100 Move X1, X0
	101 Move X8, [X8+184]
	102 Move [X8+32], X0
	103 Move [X8+40], X0
	104 Move X0, [X8+32]
	105 Call Console.SetupStreams, X0, X1
	106 Move X20, [X31+16]
	107 Move X19, [X31+24]
	108 Move X30, [X31+32]
	109 Return 
	110 Move X20, X0
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X0, X20
	113 Call 0x3EB2AD0
	114 Move X20, X0
	115 Move X0, 0xD37000
	116 Move X0, [X0+3264]
	117 Call 0x1C17D08
	118 Move X8, [X20]
	119 Move X1, [X8]
	120 Call 0x1C18270
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {144}
	125 Call 0x3EB2AE0
	126 Move X0, X31
	127 Call Encoding.get_Default
	128 Move X20, X0
	129 Move X0, X19
	130 Call 0x1C17D08
	131 Move X8, [X0+184]
	132 Move X0, X19
	133 Move [X8+40], X20
	134 Call 0x1C17D08
	135 Move X0, X19
	136 Call 0x1C17D08
	137 Move X8, [X0+184]
	138 Move X0, X19
	139 Move [X8+32], X20
	140 Call 0x1C17D08
	141 Move X8, [X19]
	142 Move X8, [X8+184]
	143 Move X1, [X8+40]
	144 Move W0, 8
	145 Call 0x3EB2AF0
	146 Move X8, [X20]
	147 Move [X0], X8
	148 Move X1, 0xAF2000
	149 Add X1, X1, 3672
	150 Move X2, X31
	151 Call 0x3EB2B00
	152 Move X20, X0
	153 Call 0x3EB2AE0
	154 Move X0, X20
	155 Call 0x1D2D690
	156 Call 0x1991590

Method: System.Void SetupStreams(System.Text.Encoding inputEncoding, System.Text.Encoding outputEncoding)

Disassembly:
	0x033C37F4 TBNZ X8, 0x0, 0x33C380C
	0x033C37F8 ADRP X0, 0xD64000
	0x033C37FC LDR X0, [X0 + 0x7B8]
	0x033C3800 BL 0x1C16CF4
	0x033C3804 MOVZ W8, 0x1
	0x033C3808 STRB W8, [X19 + 0x23F]
	0x033C380C LDR X0, [X20]
	0x033C3810 LDR W8, [X0 + 0xE0]
	0x033C3814 CBNZ W8, 0x33C381C
	0x033C3818 BL 0x1C16DFC
	0x033C381C LDP X20, X19, [X31 + 0x10]
	0x033C3820 LDR X30, [X31], #0x20
	0x033C3824 B 0x33C3828
	0x033C3828 STR X30, [X31 - 0x20]!
	0x033C382C STP X20, X19, [X31 + 0x10]
	0x033C3830 ADRP X20, 0x101A000
	0x033C3834 ADRP X19, 0xD64000
	0x033C3838 LDRB W8, [X20 + 0x262]
	0x033C383C LDR X19, [X19 + 0x7B8]
	0x033C3840 TBNZ X8, 0x0, 0x33C3864
	0x033C3844 ADRP X0, 0xD64000
	0x033C3848 LDR X0, [X0 + 0x7B8]
	0x033C384C BL 0x1C16CF4
	0x033C3850 ADRP X0, 0xD69000
	0x033C3854 LDR X0, [X0 + 0x760]
	0x033C3858 BL 0x1C16CF4
	0x033C385C MOVZ W8, 0x1
	0x033C3860 STRB W8, [X20 + 0x262]
	0x033C3864 LDR X0, [X19]
	0x033C3868 LDR W8, [X0 + 0xE0]
	0x033C386C CBNZ W8, 0x33C3878
	0x033C3870 BL 0x1C16DFC
	0x033C3874 LDR X0, [X19]
	0x033C3878 LDR X8, [X0 + 0xB8]
	0x033C387C LDR X19, [X8]
	0x033C3880 CBZ X19, 0x33C38F0
	0x033C3884 ADRP X10, 0xD69000
	0x033C3888 LDR X8, [X19]
	0x033C388C LDR X10, [X10 + 0x760]
	0x033C3890 LDRH W9, [X8 + 0x12E]
	0x033C3894 LDR X1, [X10]
	0x033C3898 CBZ X9, 0x33C38BC
	0x033C389C LDR X10, [X8 + 0xB0]
	0x033C38A0 ADD X10, X10, 0x8
	0x033C38A4 LDUR X11, [X10 - 0x8]
	0x033C38A8 CMP X11, X1
	0x033C38AC B.EQ 0x33C38CC
	0x033C38B0 SUBS X9, X9, 0x1
	0x033C38B4 ADD X10, X10, 0x10
	0x033C38B8 B.NE 0x33C38A4
	0x033C38BC MOVZ W2, 0x2
	0x033C38C0 MOV X0, X19
	0x033C38C4 BL 0x1C5C788
	0x033C38C8 B 0x33C38DC
	0x033C38CC LDR W9, [X10]
	0x033C38D0 ADD W9, W9, 0x2
	0x033C38D4 ADD X8, X8, W9, 0x4, SXTW
	0x033C38D8 ADD X0, X8, 0x138
	0x033C38DC LDP X2, X1, [X0]
	0x033C38E0 MOV X0, X19
	0x033C38E4 LDP X20, X19, [X31 + 0x10]
	0x033C38E8 LDR X30, [X31], #0x20
	0x033C38EC BR X2
	0x033C38F0 BL 0x1C16F20
	0x033C38F4 STP X30, X25, [X31 - 0x40]!
	0x033C38F8 STP X24, X23, [X31 + 0x10]
	0x033C38FC STP X22, X21, [X31 + 0x20]
	0x033C3900 STP X20, X19, [X31 + 0x30]
	0x033C3904 ADRP X19, 0x101A000
	0x033C3908 ADRP X20, 0xD38000
	0x033C390C LDRB W8, [X19 + 0x240]
	0x033C3910 LDR X20, [X20 + 0x958]
	0x033C3914 TBNZ X8, 0x0, 0x33C3944
	0x033C3918 ADRP X0, 0xD69000
	0x033C391C LDR X0, [X0 + 0x778]
	0x033C3920 BL 0x1C16CF4
	0x033C3924 ADRP X0, 0xD69000
	0x033C3928 LDR X0, [X0 + 0x780]
	0x033C392C BL 0x1C16CF4
	0x033C3930 ADRP X0, 0xD38000
	0x033C3934 LDR X0, [X0 + 0x958]
	0x033C3938 BL 0x1C16CF4
	0x033C393C MOVZ W8, 0x1
	0x033C3940 STRB W8, [X19 + 0x240]
	0x033C3944 LDR X0, [X20]
	0x033C3948 LDR W8, [X0 + 0xE0]
	0x033C394C CBNZ W8, 0x33C3958
	0x033C3950 BL 0x1C16DFC
	0x033C3954 LDR X0, [X20]
	0x033C3958 LDR X8, [X0 + 0xB8]
	0x033C395C LDR X8, [X8 + 0x30]
	0x033C3960 CBZ X8, 0x33C3A90
	0x033C3964 ADRP X8, 0xD69000
	0x033C3968 LDR X8, [X8 + 0x778]
	0x033C396C LDR X0, [X8]
	0x033C3970 BL 0x1C16F10
	0x033C3974 MOV W1, W31
	0x033C3978 MOV X2, X31
	0x033C397C MOV X19, X0
	0x033C3980 BL 0x339D290
	0x033C3984 LDR X0, [X20]
	0x033C3988 LDR W8, [X0 + 0xE0]
	0x033C398C CBNZ W8, 0x33C3998
	0x033C3990 BL 0x1C16DFC
	0x033C3994 LDR X0, [X20]
	0x033C3998 LDR X8, [X0 + 0xB8]
	0x033C399C LDR X0, [X8 + 0x30]
	0x033C39A0 CBZ X0, 0x33C3AB0
	0x033C39A4 LDR X8, [X0]
	0x033C39A8 LDP X9, X1, [X8 + 0x1D8]
	0x033C39AC BLR X9
	0x033C39B0 CBZ X0, 0x33C3AB0
	0x033C39B4 LDR X8, [X0 + 0x18]
	0x033C39B8 MOV X20, X0
	0x033C39BC CMP W8, 0x1
	0x033C39C0 B.LT 0x33C3A70
	0x033C39C4 ADRP X25, 0xD69000
	0x033C39C8 ADRP X21, 0xD36000
	0x033C39CC LDR X25, [X25 + 0x780]
	0x033C39D0 LDR X21, [X21 + 0xCC0]
	0x033C39D4 MOV X23, X31
	0x033C39D8 AND X8, X8, 0x0
	0x033C39DC ADD X24, X20, 0x20
	0x033C39E0 CMP X23, W8, UXTW
	0x033C39E4 B.CS 0x33C3AAC
	0x033C39E8 LDR X0, [X24, X23, LSL #3]
	0x033C39EC CBZ X0, 0x33C3A30
	0x033C39F0 LDR X1, [X25]
	0x033C39F4 LDR X8, [X0]
	0x033C39F8 CMP X8, X1
	0x033C39FC B.NE 0x33C3AA8
	0x033C3A00 LDR X9, [X0 + 0x18]
	0x033C3A04 LDR X8, [X0 + 0x40]
	0x033C3A08 LDR X3, [X0 + 0x28]
	0x033C3A0C MOV X0, X8
	0x033C3A10 MOV X1, X31
	0x033C3A14 MOV X2, X19
	0x033C3A18 BLR X9
	0x033C3A1C LDR W8, [X20 + 0x18]
	0x033C3A20 ADD X23, X23, 0x1
	0x033C3A24 CMP X23, W8, SXTW
	0x033C3A28 B.LT 0x33C39E0
	0x033C3A2C B 0x33C3A70
	0x033C3A30 BL 0x1C16F20
	0x033C3A34 B 0x33C3AD4
	0x033C3A38 CMP W1, 0x1
	0x033C3A3C MOV X22, X0
	0x033C3A40 B.NE 0x33C3AE0
	0x033C3A44 MOV X0, X22
	0x033C3A48 BL 0x3EB1AD0
	0x033C3A4C MOV X22, X0
	0x033C3A50 MOV X0, X21
	0x033C3A54 BL 0x1C16D08
	0x033C3A58 LDR X8, [X22]
	0x033C3A5C LDR X1, [X8]
	0x033C3A60 BL 0x1C17270
	0x033C3A64 TBZ X0, 0x0, 0x33C3AB4
	0x033C3A68 BL 0x3EB1AE0
	0x033C3A6C B 0x33C3A1C
	0x033C3A70 CBZ X19, 0x33C3AB0
	0x033C3A74 LDRB W8, [X19 + 0x14]
	0x033C3A78 CBZ W8, 0x33C3A90
	0x033C3A7C LDP X20, X19, [X31 + 0x30]
	0x033C3A80 LDP X22, X21, [X31 + 0x20]
	0x033C3A84 LDP X24, X23, [X31 + 0x10]
	0x033C3A88 LDP X30, X25, [X31], #0x40
	0x033C3A8C RET
	0x033C3A90 LDP X20, X19, [X31 + 0x30]
	0x033C3A94 LDP X22, X21, [X31 + 0x20]
	0x033C3A98 LDP X24, X23, [X31 + 0x10]
	0x033C3A9C MOVZ W0, 0x3A
	0x033C3AA0 LDP X30, X25, [X31], #0x40
	0x033C3AA4 B 0x1C88164
	0x033C3AA8 BL 0x1C171E0
	0x033C3AAC BL 0x1C16F28
	0x033C3AB0 BL 0x1C16F20
	0x033C3AB4 MOVZ W0, 0x8
	0x033C3AB8 BL 0x3EB1AF0
	0x033C3ABC LDR X8, [X22]
	0x033C3AC0 STR X8, [X0]
	0x033C3AC4 ADRP X1, 0xAF1000
	0x033C3AC8 ADD X1, X1, 0xE58
	0x033C3ACC MOV X2, X31
	0x033C3AD0 BL 0x3EB1B00
	0x033C3AD4 B 0x33C3AD8
	0x033C3AD8 MOV X22, X0
	0x033C3ADC BL 0x3EB1AE0
	0x033C3AE0 MOV X0, X22
	0x033C3AE4 BL 0x1D2C690
	0x033C3AE8 BL 0x1990590
	0x033C3AEC SUB X31, X31, 0x40
	0x033C3AF0 STP X30, X19, [X31 + 0x30]
	0x033C3AF4 ADRP X19, 0x101A000
	0x033C3AF8 LDR X8, [X19 + 0x248]
	0x033C3AFC CBNZ X8, 0x33C3B44
	0x033C3B00 ADRP X11, 0xFFFFFFFFFD72A000
	0x033C3B04 LDR V0, [X11 + 0x640]
	0x033C3B08 ADRP X8, 0xFFFFFFFFFD756000
	0x033C3B0C ADRP X10, 0xFFFFFFFFFD72F000
	0x033C3B10 ADD X8, X8, 0xC78
	0x033C3B14 MOVZ W9, 0xC
	0x033C3B18 ADD X10, X10, 0x5FC
	0x033C3B1C MOVZ W12, 0x1
	0x033C3B20 ADD X0, X31, 0x0
	0x033C3B24 STR W31, [X31 + 0x28]
	0x033C3B28 STP X8, X9, [X31]
	0x033C3B2C STP X10, X9, [X31 + 0x10]
	0x033C3B30 STR D0, [X31 + 0x20]
	0x033C3B34 STRB W12, [X31 + 0x2C]
	0x033C3B38 BL 0x1C1729C
	0x033C3B3C MOV X8, X0
	0x033C3B40 STR X0, [X19 + 0x248]
	0x033C3B44 BLR X8
	0x033C3B48 LDP X30, X19, [X31 + 0x30]
	0x033C3B4C ADD X31, X31, 0x40
	0x033C3B50 RET
	0x033C3B54 SUB X31, X31, 0x40
	0x033C3B58 STP X30, X19, [X31 + 0x30]
	0x033C3B5C ADRP X19, 0x101A000
	0x033C3B60 LDR X8, [X19 + 0x250]
	0x033C3B64 CBNZ X8, 0x33C3BB0
	0x033C3B68 ADRP X12, 0xFFFFFFFFFD72A000
	0x033C3B6C LDR V0, [X12 + 0x640]
	0x033C3B70 ADRP X8, 0xFFFFFFFFFD756000
	0x033C3B74 ADRP X10, 0xFFFFFFFFFD73B000
	0x033C3B78 ADD X8, X8, 0xC78
	0x033C3B7C MOVZ W9, 0xC
	0x033C3B80 ADD X10, X10, 0x326
	0x033C3B84 MOVZ W11, 0x12
	0x033C3B88 MOVZ W13, 0x1
	0x033C3B8C ADD X0, X31, 0x0
	0x033C3B90 STR W31, [X31 + 0x28]
	0x033C3B94 STP X8, X9, [X31]
	0x033C3B98 STP X10, X11, [X31 + 0x10]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x101B000
	011 Move W8, [X21+557]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {47}
	018 Move X0, 0xD6A000
	019 Move X0, [X0+1832]
	020 Call 0x1C17CF4
	021 Move X0, 0xD6A000
	022 Move X0, [X0+1840]
	023 Call 0x1C17CF4
	024 Move X0, 0xD65000
	025 Move X0, [X0+1976]
	026 Call 0x1C17CF4
	027 Move X0, 0xD39000
	028 Move X0, [X0+2392]
	029 Call 0x1C17CF4
	030 Move X0, 0xD38000
	031 Move X0, [X0+3088]
	032 Call 0x1C17CF4
	033 Move X0, 0xD64000
	034 Move X0, [X0+3584]
	035 Call 0x1C17CF4
	036 Move X0, 0xD64000
	037 Move X0, [X0+3696]
	038 Call 0x1C17CF4
	039 Move X0, 0xD65000
	040 Move X0, [X0+1944]
	041 Call 0x1C17CF4
	042 Move X0, 0xD6A000
	043 Move X0, [X0+1848]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X21+557], W8
	047 Move X23, 0xD39000
	048 Move X24, 0xD64000
	049 Move X23, [X23+2392]
	050 Move X24, [X24+3696]
	051 Call 0x1C88BC4
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X8, 0xD65000
	054 Move X8, [X8+1976]
	055 Move X0, [X8]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Call ConsoleDriver.get_IsConsole
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {133}
	065 Move X0, [X23]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move W0, W31
	071 Call Console.OpenStandardInput, X0
	072 Move X8, 0xD6A000
	073 Move X8, [X8+1832]
	074 Move X21, X0
	075 Move X8, [X8]
	076 Move X0, X8
	077 Call 0x1C17F10
	078 Move X1, X21
	079 Move X2, X20
	080 Move X3, X31
	081 Move X22, X0
	082 Call CStreamReader..ctor, X0, X1, X2
	083 Move X8, [X23]
	084 Move W0, W31
	085 Move X8, [X8+184]
	086 Move [X8+16], X22
	087 Call Console.OpenStandardOutput, X0
	088 Move X22, 0xD6A000
	089 Move X22, [X22+1840]
	090 Move X21, X0
	091 Move X8, [X22]
	092 Move X0, X8
	093 Call 0x1C17F10
	094 Move W3, 1
	095 Move X1, X21
	096 Move X2, X19
	097 Move X4, X31
	098 Move X20, X0
	099 Call CStreamWriter..ctor, X0, X1, X2, X3
	100 Compare X20, 0
	101 JumpIfEqual {259}
	102 Move X8, [X20]
	103 Move W1, 1
	104 Move X0, X20
	105 Move X9, [X8+648]
	106 Move X2, [X8+656]
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move X0, [X24]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Move X0, X20
	114 Move X1, X31
	115 Call TextWriter.Synchronized, X0
	116 Move X8, [X23]
	117 Move X8, [X8+184]
	118 Move [X8], X0
	119 Move W0, W31
	120 Call Console.OpenStandardError, X0
	121 Move X8, [X22]
	122 Move X21, X0
	123 Move X0, X8
	124 Call 0x1C17F10
	125 Move W3, 1
	126 Move X1, X21
	127 Move X2, X19
	128 Move X4, X31
	129 Move X20, X0
	130 Call CStreamWriter..ctor, X0, X1, X2, X3
	131 Compare X20, 0
	132 JumpIfNotEqual {209}
	133 Move X0, [X23]
	134 Move X21, 0xD65000
	135 Move X26, 0xD64000
	136 Move W8, [X0+224]
	137 Move X21, [X21+1944]
	138 Move X26, [X26+3584]
	139 Compare W8, 0
	140 JumpIfNotEqual {142}
	141 Call 0x1C17DFC
	142 Move X25, 0xD6A000
	143 Move X25, [X25+1848]
	144 Move W0, W31
	145 Call Console.OpenStandardInput, X0
	146 Move X8, [X21]
	147 Move X22, X0
	148 Move X0, X8
	149 Call 0x1C17F10
	150 Move X1, X22
	151 Move X2, X20
	152 Move X3, X31
	153 Move X21, X0
	154 Call UnexceptionalStreamReader..ctor, X0, X1, X2
	155 Move X0, [X26]
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X0, X21
	161 Move X1, X31
	162 Call TextReader.Synchronized, X0
	163 Move X8, [X23]
	164 Move X8, [X8+184]
	165 Move [X8+16], X0
	166 Move W0, W31
	167 Call Console.OpenStandardOutput, X0
	168 Move X8, [X25]
	169 Move X21, X0
	170 Move X0, X8
	171 Call 0x1C17F10
	172 Move X1, X21
	173 Move X2, X19
	174 Move X3, X31
	175 Move X20, X0
	176 Call UnexceptionalStreamWriter..ctor, X0, X1, X2
	177 Compare X20, 0
	178 JumpIfEqual {259}
	179 Move X8, [X20]
	180 Move W1, 1
	181 Move X0, X20
	182 Move X9, [X8+648]
	183 Move X2, [X8+656]
	184 NotImplemented "Instruction BLR not yet implemented."
	185 Move X0, [X24]
	186 Move W8, [X0+224]
	187 Compare W8, 0
	188 JumpIfNotEqual {190}
	189 Call 0x1C17DFC
	190 Move X0, X20
	191 Move X1, X31
	192 Call TextWriter.Synchronized, X0
	193 Move X8, [X23]
	194 Move X8, [X8+184]
	195 Move [X8], X0
	196 Move W0, W31
	197 Call Console.OpenStandardError, X0
	198 Move X8, [X25]
	199 Move X21, X0
	200 Move X0, X8
	201 Call 0x1C17F10
	202 Move X1, X21
	203 Move X2, X19
	204 Move X3, X31
	205 Move X20, X0
	206 Call UnexceptionalStreamWriter..ctor, X0, X1, X2
	207 Compare X20, 0
	208 JumpIfEqual {259}
	209 Move X8, [X20]
	210 Move W1, 1
	211 Move X0, X20
	212 Move X9, [X8+648]
	213 Move X2, [X8+656]
	214 NotImplemented "Instruction BLR not yet implemented."
	215 Move X19, 0xD38000
	216 Move X19, [X19+3088]
	217 Move X0, X20
	218 Move X1, X31
	219 Call TextWriter.Synchronized, X0
	220 Move X8, [X23]
	221 Move X9, [X8+184]
	222 Move [X9+8], X0
	223 Move W9, [X8+224]
	224 Compare W9, 0
	225 JumpIfNotEqual {229}
	226 Move X0, X8
	227 Call 0x1C17DFC
	228 Move X8, [X23]
	229 Move X0, [X19]
	230 Move X8, [X8+184]
	231 Move W9, [X0+224]
	232 Move X19, [X8]
	233 Compare W9, 0
	234 JumpIfNotEqual {236}
	235 Call 0x1C17DFC
	236 Move X0, X19
	237 Move X1, X31
	238 Call GC.SuppressFinalize, X0
	239 Move X8, [X23]
	240 Move X1, X31
	241 Move X8, [X8+184]
	242 Move X0, [X8+8]
	243 Call GC.SuppressFinalize, X0
	244 Move X8, [X23]
	245 Move X20, [X31+64]
	246 Move X19, [X31+72]
	247 Move X22, [X31+48]
	248 Move X21, [X31+56]
	249 Move X24, [X31+32]
	250 Move X23, [X31+40]
	251 Move X8, [X8+184]
	252 Move X26, [X31+16]
	253 Move X25, [X31+24]
	254 Move X1, X31
	255 Move X0, [X8+16]
	256 Move X30, [X31+80]
	257 Call GC.SuppressFinalize, X0
	258 Return 
	259 Call 0x1C17F20

Method: System.IO.TextWriter get_Error()

Disassembly:
	0x033C3E8C STRB W8, [X19 + 0x25E]
	0x033C3E90 LDR X0, [X20]
	0x033C3E94 BL 0x1C16F10
	0x033C3E98 MOV X1, X31
	0x033C3E9C MOV X19, X0
	0x033C3EA0 BL 0x33D5B38
	0x033C3EA4 MOV X0, X19
	0x033C3EA8 LDP X20, X19, [X31 + 0x10]
	0x033C3EAC LDR X30, [X31], #0x20
	0x033C3EB0 RET
	0x033C3EB4 STP X30, X21, [X31 - 0x20]!
	0x033C3EB8 STP X20, X19, [X31 + 0x10]
	0x033C3EBC ADRP X20, 0x101A000
	0x033C3EC0 ADRP X21, 0xD64000
	0x033C3EC4 LDRB W8, [X20 + 0x25F]
	0x033C3EC8 LDR X21, [X21 + 0x7C0]
	0x033C3ECC MOV X19, X0
	0x033C3ED0 TBNZ X8, 0x0, 0x33C3EE8
	0x033C3ED4 ADRP X0, 0xD64000
	0x033C3ED8 LDR X0, [X0 + 0x7C0]
	0x033C3EDC BL 0x1C16CF4
	0x033C3EE0 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x101B000
	005 Move X19, 0xD39000
	006 Move W8, [X20+558]
	007 Move X19, [X19+2392]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD39000
	013 Move X0, [X0+2392]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+558], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.IO.TextWriter get_Out()

Disassembly:
	0x033C3EE4 STRB W8, [X20 + 0x25F]
	0x033C3EE8 LDR X0, [X21]
	0x033C3EEC BL 0x1C16F10
	0x033C3EF0 MOV X1, X19
	0x033C3EF4 MOV X20, X0
	0x033C3EF8 BL 0x33C3F10
	0x033C3EFC MOV X0, X20
	0x033C3F00 LDP X20, X19, [X31 + 0x10]
	0x033C3F04 LDP X30, X21, [X31], #0x20
	0x033C3F08 RET
	0x033C3F0C RET
	0x033C3F10 STR X30, [X31 - 0x40]!
	0x033C3F14 STP X24, X23, [X31 + 0x10]
	0x033C3F18 STP X22, X21, [X31 + 0x20]
	0x033C3F1C STP X20, X19, [X31 + 0x30]
	0x033C3F20 ADRP X23, 0x101A000
	0x033C3F24 ADRP X24, 0xD32000
	0x033C3F28 ADRP X22, 0xD36000
	0x033C3F2C ADRP X21, 0xD64000
	0x033C3F30 LDRB W8, [X23 + 0x2A2]
	0x033C3F34 LDR X24, [X24 + 0x278]
	0x033C3F38 LDR X22, [X22 + 0xCC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x101B000
	005 Move X19, 0xD39000
	006 Move W8, [X20+559]
	007 Move X19, [X19+2392]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD39000
	013 Move X0, [X0+2392]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+559], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.IO.Stream Open(System.IntPtr handle, System.IO.FileAccess access, System.Int32 bufferSize)

Disassembly:
	0x033C3F3C LDR X21, [X21 + 0x7C0]
	0x033C3F40 MOV X20, X1
	0x033C3F44 MOV X19, X0
	0x033C3F48 TBNZ X8, 0x0, 0x33C3FB4
	0x033C3F4C ADRP X0, 0xD69000
	0x033C3F50 LDR X0, [X0 + 0x730]
	0x033C3F54 BL 0x1C16CF4
	0x033C3F58 ADRP X0, 0xD38000
	0x033C3F5C LDR X0, [X0 + 0x958]
	0x033C3F60 BL 0x1C16CF4
	0x033C3F64 ADRP X0, 0xD36000
	0x033C3F68 LDR X0, [X0 + 0xCC0]
	0x033C3F6C BL 0x1C16CF4
	0x033C3F70 ADRP X0, 0xD32000
	0x033C3F74 LDR X0, [X0 + 0x278]
	0x033C3F78 BL 0x1C16CF4
	0x033C3F7C ADRP X0, 0xD64000
	0x033C3F80 LDR X0, [X0 + 0x7C0]
	0x033C3F84 BL 0x1C16CF4
	0x033C3F88 ADRP X0, 0xD69000
	0x033C3F8C LDR X0, [X0 + 0x7B8]
	0x033C3F90 BL 0x1C16CF4
	0x033C3F94 ADRP X0, 0xD69000
	0x033C3F98 LDR X0, [X0 + 0x7C0]
	0x033C3F9C BL 0x1C16CF4
	0x033C3FA0 ADRP X0, 0xD69000
	0x033C3FA4 LDR X0, [X0 + 0x7C8]
	0x033C3FA8 BL 0x1C16CF4
	0x033C3FAC MOVZ W8, 0x1
	0x033C3FB0 STRB W8, [X23 + 0x2A2]
	0x033C3FB4 LDR X8, [X24]
	0x033C3FB8 MOVZ W9, 0x1
	0x033C3FBC LDR X8, [X8 + 0xB8]
	0x033C3FC0 LDR X8, [X8]
	0x033C3FC4 STRB W9, [X19 + 0x30]
	0x033C3FC8 STP X8, X8, [X19 + 0x20]
	0x033C3FCC LDR X0, [X22]
	0x033C3FD0 BL 0x1C16F10
	0x033C3FD4 MOVZ W8, 0xF
	0x033C3FD8 MOVI V0.2D, 0xFFFFFFFFFFFFFFFF
	0x033C3FDC STR X0, [X19 + 0xA8]
	0x033C3FE0 STR W8, [X19 + 0xD0]
	0x033C3FE4 STR D0, [X19 + 0x100]
	0x033C3FE8 STR X20, [X19 + 0x58]
	0x033C3FEC LDR X0, [X21]
	0x033C3FF0 LDR W8, [X0 + 0xE0]
	0x033C3FF4 CBNZ W8, 0x33C3FFC
	0x033C3FF8 BL 0x1C16DFC
	0x033C3FFC ADRP X23, 0xD69000
	0x033C4000 LDR X23, [X23 + 0x7B8]
	0x033C4004 MOV X0, X20
	0x033C4008 BL 0x33CCA00
	0x033C400C CBZ X0, 0x33C402C
	0x033C4010 MOV X21, X0
	0x033C4014 LDR X0, [X23]
	0x033C4018 BL 0x1C16F10
	0x033C401C MOV X2, X21
	0x033C4020 MOV X20, X0
	0x033C4024 BL 0x33CCB9C
	0x033C4028 B 0x33C408C
	0x033C402C ADRP X8, 0xD68000
	0x033C4030 LDR X8, [X8 + 0x7C0]
	0x033C4034 MOV X0, X20
	0x033C4038 MOV X2, X31
	0x033C403C LDR X1, [X8]
	0x033C4040 BL 0x321BA08
	0x033C4044 TBZ X0, 0x0, 0x33C4050
	0x033C4048 BL 0x33C69F4
	0x033C404C B 0x33C4070
	0x033C4050 ADRP X8, 0xD68000
	0x033C4054 LDR X8, [X8 + 0x7C8]
	0x033C4058 MOV X0, X20
	0x033C405C MOV X2, X31
	0x033C4060 LDR X1, [X8]
	0x033C4064 BL 0x321BA08
	0x033C4068 TBZ X0, 0x0, 0x33C4244
	0x033C406C BL 0x33C6984
	0x033C4070 LDR X8, [X23]
	0x033C4074 MOV X21, X0
	0x033C4078 MOV X0, X8
	0x033C407C BL 0x1C16F10
	0x033C4080 MOV X2, X21
	0x033C4084 MOV X20, X0
	0x033C4088 BL 0x33CCE60

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x101B000
	008 Move X23, 0xD5F000
	009 Move W8, [X19+560]
	010 Move X23, [X23+1648]
	011 Move W20, W2
	012 Move W21, W1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xD5F000
	019 Move X0, [X0+1648]
	020 Call 0x1C17CF4
	021 Move X0, 0xD38000
	022 Move X0, [X0+3088]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X19+560], W8
	026 Move X0, [X23]
	027 Call 0x1C17F10
	028 Move X19, X0
	029 Move W6, 1
	030 Move X1, X22
	031 Move W2, W21
	032 Move W3, W31
	033 Move W4, W20
	034 Move W5, W31
	035 Move X7, X31
	036 Call FileStream..ctor, X0, X1, X2, X3, X4, X5, X6
	037 Move X8, 0xD38000
	038 Move X8, [X8+3088]
	039 Move X0, [X8]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X19
	045 Move X1, X31
	046 Call GC.SuppressFinalize, X0
	047 Move X0, X19
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Move X23, [X31+56]
	054 Return X0
	055 Move X19, X0
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, X19
	058 Call 0x3EB2AD0
	059 Move X19, X0
	060 Move X0, 0xD5E000
	061 Move X0, [X0+1960]
	062 Call 0x1C17D08
	063 Move X8, [X19]
	064 Move X1, [X8]
	065 Call 0x1C18270
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {83}
	070 Call 0x3EB2AE0
	071 Move X0, 0xD5F000
	072 Move X0, [X0+3344]
	073 Call 0x1C17D08
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X0, 0xD5F000
	079 Move X0, [X0+3344]
	080 Call 0x1C17D08
	081 Move X8, [X0+184]
	082 Move X19, [X8]
	083 Move W0, 8
	084 Call 0x3EB2AF0
	085 Move X8, [X19]
	086 Move [X0], X8
	087 Move X1, 0xAF1000
	088 Add X1, X1, 3672
	089 Move X2, X31
	090 Call 0x3EB2B00
	091 Move X19, X0
	092 Call 0x3EB2AE0
	093 Move X0, X19
	094 Call 0x1D2D690
	095 Call 0x1991590

Method: System.IO.Stream OpenStandardError(System.Int32 bufferSize)

Disassembly:
	0x033C3DFC LDR X8, [X20]
	0x033C3E00 LDP X20, X19, [X31 + 0x10]
	0x033C3E04 LDR X8, [X8 + 0xB8]
	0x033C3E08 STR X0, [X8]
	0x033C3E0C LDR X30, [X31], #0x20
	0x033C3E10 RET
	0x033C3E14 MOV X0, X19
	0x033C3E18 BL 0x33C3EB4
	0x033C3E1C B 0x33C3DFC
	0x033C3E20 STR X30, [X31 - 0x20]!
	0x033C3E24 STP X20, X19, [X31 + 0x10]
	0x033C3E28 ADRP X19, 0x101A000
	0x033C3E2C ADRP X20, 0xD69000
	0x033C3E30 LDRB W8, [X19 + 0x25D]
	0x033C3E34 LDR X20, [X20 + 0x7A8]
	0x033C3E38 TBNZ X8, 0x0, 0x33C3E50
	0x033C3E3C ADRP X0, 0xD69000
	0x033C3E40 LDR X0, [X0 + 0x7A8]
	0x033C3E44 BL 0x1C16CF4
	0x033C3E48 MOVZ W8, 0x1
	0x033C3E4C STRB W8, [X19 + 0x25D]
	0x033C3E50 LDR X0, [X20]
	0x033C3E54 LDP X20, X19, [X31 + 0x10]
	0x033C3E58 LDR X30, [X31], #0x20
	0x033C3E5C B 0x1C16F10
	0x033C3E60 STR X30, [X31 - 0x20]!
	0x033C3E64 STP X20, X19, [X31 + 0x10]
	0x033C3E68 ADRP X19, 0x101A000
	0x033C3E6C ADRP X20, 0xD69000
	0x033C3E70 LDRB W8, [X19 + 0x25E]
	0x033C3E74 LDR X20, [X20 + 0x7B0]
	0x033C3E78 TBNZ X8, 0x0, 0x33C3E90
	0x033C3E7C ADRP X0, 0xD69000
	0x033C3E80 LDR X0, [X0 + 0x7B0]
	0x033C3E84 BL 0x1C16CF4
	0x033C3E88 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x101B000
	006 Move X20, 0xD5F000
	007 Move W8, [X21+561]
	008 Move X20, [X20+4008]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xD39000
	015 Move X0, [X0+2392]
	016 Call 0x1C17CF4
	017 Move X0, 0xD5F000
	018 Move X0, [X0+4008]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+561], W8
	022 Move X0, [X20]
	023 Move X20, 0xD39000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2392]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X31
	030 Call MonoIO.get_ConsoleError
	031 Move X8, [X20]
	032 Move X20, X0
	033 Move W9, [X8+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move X0, X20
	039 Move W2, W19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move W1, 2
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Call Console.Open, X0, X1, X2
	046 Return X0

Method: System.IO.Stream OpenStandardInput(System.Int32 bufferSize)

Disassembly:
	0x033C3CDC STR X0, [X0 + 0x40]
	0x033C3CE0 MOV X0, X2
	0x033C3CE4 BL 0x1C16D84
	0x033C3CE8 TBZ X0, 0x0, 0x33C3D04
	0x033C3CEC CMP W21, 0x1
	0x033C3CF0 B.NE 0x33C3D08
	0x033C3CF4 ADRP X8, 0xFFFFFFFFFE7F8000
	0x033C3CF8 ADD X8, X8, 0x1F8
	0x033C3CFC STR X8, [X19 + 0x18]
	0x033C3D00 B 0x33C3D18
	0x033C3D04 CBZ X20, 0x33C3D30
	0x033C3D08 LDR X8, [X19 + 0x10]
	0x033C3D0C LDR X9, [X19 + 0x20]
	0x033C3D10 STR X8, [X19 + 0x18]
	0x033C3D14 STR X9, [X19 + 0x40]
	0x033C3D18 ADRP X8, 0xFFFFFFFFFE7F8000
	0x033C3D1C ADD X8, X8, 0x1A4
	0x033C3D20 STR X8, [X19 + 0x38]
	0x033C3D24 LDP X20, X19, [X31 + 0x10]
	0x033C3D28 LDP X30, X21, [X31], #0x20
	0x033C3D2C RET
	0x033C3D30 ADRP X1, 0xFFFFFFFFFD758000
	0x033C3D34 ADD X1, X1, 0xEE3
	0x033C3D38 MOV X0, X31
	0x033C3D3C BL 0x1C16F3C
	0x033C3D40 MOV X1, X31
	0x033C3D44 BL 0x1C16DEC
	0x033C3D48 LDR X8, [X0 + 0x40]
	0x033C3D4C LDR X3, [X0 + 0x18]
	0x033C3D50 LDR X2, [X0 + 0x28]
	0x033C3D54 MOV X0, X8
	0x033C3D58 BR X3
	0x033C3D5C STR X30, [X31 - 0x20]!
	0x033C3D60 STP X20, X19, [X31 + 0x10]
	0x033C3D64 ADRP X19, 0x101A000
	0x033C3D68 LDRB W8, [X19 + 0x25C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x101B000
	006 Move X20, 0xD5F000
	007 Move W8, [X21+562]
	008 Move X20, [X20+4008]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xD39000
	015 Move X0, [X0+2392]
	016 Call 0x1C17CF4
	017 Move X0, 0xD5F000
	018 Move X0, [X0+4008]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+562], W8
	022 Move X0, [X20]
	023 Move X20, 0xD39000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2392]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X31
	030 Call MonoIO.get_ConsoleInput
	031 Move X8, [X20]
	032 Move X20, X0
	033 Move W9, [X8+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move X0, X20
	039 Move W2, W19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move W1, 1
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Call Console.Open, X0, X1, X2
	046 Return X0

Method: System.IO.Stream OpenStandardOutput(System.Int32 bufferSize)

Disassembly:
	0x033C3D6C TBNZ X8, 0x0, 0x33C3D9C
	0x033C3D70 ADRP X0, 0xD64000
	0x033C3D74 LDR X0, [X0 + 0x7B8]
	0x033C3D78 BL 0x1C16CF4
	0x033C3D7C ADRP X0, 0xD69000
	0x033C3D80 LDR X0, [X0 + 0x798]
	0x033C3D84 BL 0x1C16CF4
	0x033C3D88 ADRP X0, 0xD69000
	0x033C3D8C LDR X0, [X0 + 0x7A0]
	0x033C3D90 BL 0x1C16CF4
	0x033C3D94 MOVZ W8, 0x1
	0x033C3D98 STRB W8, [X19 + 0x25C]
	0x033C3D9C ADRP X20, 0xD64000
	0x033C3DA0 LDR X20, [X20 + 0x7B8]
	0x033C3DA4 BL 0x33C2B9C
	0x033C3DA8 TBZ X0, 0x0, 0x33C3DF8
	0x033C3DAC BL 0x1C87BC4
	0x033C3DB0 CMP W0, 0x3
	0x033C3DB4 B.GT 0x33C3DC0
	0x033C3DB8 BL 0x33C3E60
	0x033C3DBC B 0x33C3DFC
	0x033C3DC0 ADRP X8, 0xD69000
	0x033C3DC4 LDR X8, [X8 + 0x798]
	0x033C3DC8 LDR X0, [X8]
	0x033C3DCC BL 0x33C190C
	0x033C3DD0 ADRP X8, 0xD69000
	0x033C3DD4 LDR X8, [X8 + 0x7A0]
	0x033C3DD8 MOV X2, X31
	0x033C3DDC MOV X19, X0
	0x033C3DE0 LDR X1, [X8]
	0x033C3DE4 BL 0x321BA08
	0x033C3DE8 TBZ X0, 0x0, 0x33C3E14
	0x033C3DEC LDR X8, [X20]
	0x033C3DF0 LDR X8, [X8 + 0xB8]
	0x033C3DF4 STRB W31, [X8 + 0x8]
	0x033C3DF8 BL 0x33C3E20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x101B000
	006 Move X20, 0xD5F000
	007 Move W8, [X21+563]
	008 Move X20, [X20+4008]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xD39000
	015 Move X0, [X0+2392]
	016 Call 0x1C17CF4
	017 Move X0, 0xD5F000
	018 Move X0, [X0+4008]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+563], W8
	022 Move X0, [X20]
	023 Move X20, 0xD39000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2392]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X31
	030 Call MonoIO.get_ConsoleOutput
	031 Move X8, [X20]
	032 Move X20, X0
	033 Move W9, [X8+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move X0, X20
	039 Move W2, W19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move W1, 2
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Call Console.Open, X0, X1, X2
	046 Return X0

Method: System.Void SetError(System.IO.TextWriter newError)

Disassembly:
	0x033C408C STR X20, [X19 + 0x10]
	0x033C4090 ADRP X22, 0xD37000
	0x033C4094 LDR X22, [X22 + 0x958]
	0x033C4098 CBNZ X20, 0x33C40C0
	0x033C409C BL 0x33C6A64
	0x033C40A0 LDR X8, [X23]
	0x033C40A4 MOV X20, X0
	0x033C40A8 MOV X0, X8
	0x033C40AC BL 0x1C16F10
	0x033C40B0 MOV X2, X20
	0x033C40B4 MOV X21, X0
	0x033C40B8 BL 0x33CCE60
	0x033C40BC STR X21, [X19 + 0x10]
	0x033C40C0 LDR X0, [X22]
	0x033C40C4 LDR W8, [X0 + 0xE0]
	0x033C40C8 CBNZ W8, 0x33C40D4
	0x033C40CC BL 0x1C16DFC
	0x033C40D0 LDR X0, [X22]
	0x033C40D4 LDR X8, [X0 + 0xB8]
	0x033C40D8 ADRP X21, 0xD68000
	0x033C40DC LDR X8, [X8]
	0x033C40E0 LDR X21, [X21 + 0x730]
	0x033C40E4 CBZ X8, 0x33C4100
	0x033C40E8 LDR X9, [X8]
	0x033C40EC LDR X8, [X21]
	0x033C40F0 LDRB W11, [X9 + 0x130]
	0x033C40F4 LDRB W10, [X8 + 0x130]
	0x033C40F8 CMP W11, W10
	0x033C40FC B.CS 0x33C4108
	0x033C4100 MOVZ W20, 0x1
	0x033C4104 B 0x33C411C
	0x033C4108 LDR X9, [X9 + 0xC8]
	0x033C410C ADD X9, X9, X10, 0x3, LSL
	0x033C4110 LDUR X9, [X9 - 0x8]
	0x033C4114 CMP X9, X8
	0x033C4118 CSET W20, NE
	0x033C411C LDR W8, [X0 + 0xE0]
	0x033C4120 CBZ W8, 0x33C41C0
	0x033C4124 CBZ W20, 0x33C41C8
	0x033C4128 MOV W0, W31
	0x033C412C BL 0x33C2D6C
	0x033C4130 ADRP X23, 0x1019000
	0x033C4134 LDRB W8, [X23 + 0x2D9]
	0x033C4138 MOV X20, X0
	0x033C413C CBNZ W8, 0x33C4154
	0x033C4140 ADRP X0, 0xD37000
	0x033C4144 LDR X0, [X0 + 0x958]
	0x033C4148 BL 0x1C16CF4
	0x033C414C MOVZ W8, 0x1
	0x033C4150 STRB W8, [X23 + 0x2D9]
	0x033C4154 LDR X0, [X22]
	0x033C4158 LDR W8, [X0 + 0xE0]
	0x033C415C CBNZ W8, 0x33C4168
	0x033C4160 BL 0x1C16DFC
	0x033C4164 LDR X0, [X22]
	0x033C4168 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x101A000
	005 Move W8, [X20+564]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xD38000
	012 Move X0, [X0+2392]
	013 Call 0x1C17CF4
	014 Move X0, 0xD63000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+564], W8
	019 Compare X19, 0
	020 JumpIfEqual {47}
	021 Move X8, 0xD63000
	022 Move X8, [X8+3696]
	023 Move X20, 0xD38000
	024 Move X0, [X8]
	025 Move W8, [X0+224]
	026 Move X20, [X20+2392]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X1, X31
	032 Call TextWriter.Synchronized, X0
	033 Move X8, [X20]
	034 Move X19, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {41}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X8, [X20]
	041 Move X8, [X8+184]
	042 Move [X8+8], X19
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Return 
	047 Move X0, 0xD35000
	048 Move X0, [X0+1320]
	049 Call 0x1C17D08
	050 Call 0x1C17F10
	051 Move X19, X0
	052 Move X0, 0xD69000
	053 Move X0, [X0+1856]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X19
	057 Move X2, X31
	058 Call ArgumentNullException..ctor, X0, X1
	059 Move X0, 0xD69000
	060 Move X0, [X0+1864]
	061 Call 0x1C17D08
	062 Move X1, X0
	063 Move X0, X19
	064 Call 0x1C17DEC

Method: System.Void SetOut(System.IO.TextWriter newOut)

Disassembly:
	0x033C416C LDR X0, [X21]
	0x033C4170 LDR X22, [X8 + 0x28]
	0x033C4174 BL 0x1C16F10
	0x033C4178 MOV X1, X20
	0x033C417C MOV X2, X22
	0x033C4180 MOV W3, W31
	0x033C4184 MOV X4, X31
	0x033C4188 MOV X21, X0
	0x033C418C BL 0x3300794
	0x033C4190 STR X21, [X19 + 0x68]
	0x033C4194 CBZ X21, 0x33C424C
	0x033C4198 LDR X8, [X21]
	0x033C419C MOV X0, X21
	0x033C41A0 LDP X20, X19, [X31 + 0x30]
	0x033C41A4 LDP X22, X21, [X31 + 0x20]
	0x033C41A8 LDR X3, [X8 + 0x288]
	0x033C41AC LDR X2, [X8 + 0x290]
	0x033C41B0 LDP X24, X23, [X31 + 0x10]
	0x033C41B4 MOVZ W1, 0x1
	0x033C41B8 LDR X30, [X31], #0x40
	0x033C41BC BR X3
	0x033C41C0 BL 0x1C16DFC
	0x033C41C4 CBNZ W20, 0x33C4128
	0x033C41C8 LDR X8, [X22]
	0x033C41CC LDR X8, [X8 + 0xB8]
	0x033C41D0 LDR X0, [X8]
	0x033C41D4 CBZ X0, 0x33C422C
	0x033C41D8 LDR X9, [X0]
	0x033C41DC LDR X1, [X21]
	0x033C41E0 LDRB W10, [X9 + 0x130]
	0x033C41E4 LDRB W8, [X1 + 0x130]
	0x033C41E8 CMP W10, W8
	0x033C41EC B.CC 0x33C4228
	0x033C41F0 LDR X10, [X9 + 0xC8]
	0x033C41F4 SUB X9, X8, 0x1
	0x033C41F8 LDR X10, [X10, X9, LSL #3]
	0x033C41FC CMP X10, X1
	0x033C4200 B.NE 0x33C4228
	0x033C4204 STR X0, [X19 + 0x68]
	0x033C4208 LDR X10, [X0]
	0x033C420C LDRB W11, [X10 + 0x130]
	0x033C4210 CMP W11, W8
	0x033C4214 B.CC 0x33C4228
	0x033C4218 LDR X8, [X10 + 0xC8]
	0x033C421C LDR X8, [X8, X9, LSL #3]
	0x033C4220 CMP X8, X1
	0x033C4224 B.EQ 0x33C4230
	0x033C4228 BL 0x1C171E0
	0x033C422C STR X31, [X19 + 0x68]
	0x033C4230 LDP X20, X19, [X31 + 0x30]
	0x033C4234 LDP X22, X21, [X31 + 0x20]
	0x033C4238 LDP X24, X23, [X31 + 0x10]
	0x033C423C LDR X30, [X31], #0x40
	0x033C4240 RET
	0x033C4244 LDR X20, [X19 + 0x10]
	0x033C4248 B 0x33C4090

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x101A000
	005 Move W8, [X20+565]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xD38000
	012 Move X0, [X0+2392]
	013 Call 0x1C17CF4
	014 Move X0, 0xD63000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+565], W8
	019 Compare X19, 0
	020 JumpIfEqual {47}
	021 Move X8, 0xD63000
	022 Move X8, [X8+3696]
	023 Move X20, 0xD38000
	024 Move X0, [X8]
	025 Move W8, [X0+224]
	026 Move X20, [X20+2392]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X1, X31
	032 Call TextWriter.Synchronized, X0
	033 Move X8, [X20]
	034 Move X19, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {41}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X8, [X20]
	041 Move X8, [X8+184]
	042 Move [X8], X19
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Return 
	047 Move X0, 0xD35000
	048 Move X0, [X0+1320]
	049 Call 0x1C17D08
	050 Call 0x1C17F10
	051 Move X19, X0
	052 Move X0, 0xD69000
	053 Move X0, [X0+1872]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X19
	057 Move X2, X31
	058 Call ArgumentNullException..ctor, X0, X1
	059 Move X0, 0xD69000
	060 Move X0, [X0+1880]
	061 Call 0x1C17D08
	062 Move X1, X0
	063 Move X0, X19
	064 Call 0x1C17DEC

Method: System.Void Write(System.String value)

Disassembly:
	0x033C424C BL 0x1C16F20
	0x033C4250 B 0x1C875C0
	0x033C4254 B 0x1C87668
	0x033C4258 B 0x1C8766C
	0x033C425C AND W0, W0, 0x1
	0x033C4260 B 0x1C877AC
	0x033C4264 RET
	0x033C4268 LDR X8, [X0]
	0x033C426C LDP X2, X1, [X8 + 0x1B8]
	0x033C4270 BR X2
	0x033C4274 B 0x1C87838
	0x033C4278 LDR X0, [X0 + 0x20]
	0x033C427C RET
	0x033C4280 AND W3, W3, 0x1
	0x033C4284 B 0x1C877B4
	0x033C4288 STR X30, [X31 - 0x30]!
	0x033C428C STP X22, X21, [X31 + 0x10]
	0x033C4290 STP X20, X19, [X31 + 0x20]
	0x033C4294 ADRP X21, 0x1019000
	0x033C4298 ADRP X22, 0xD2F000
	0x033C429C LDRB W8, [X21 + 0x264]
	0x033C42A0 LDR X22, [X22 + 0x6C0]
	0x033C42A4 MOV X20, X1
	0x033C42A8 MOV X19, X0
	0x033C42AC TBNZ X8, 0x0, 0x33C42D0
	0x033C42B0 ADRP X0, 0xD2F000
	0x033C42B4 LDR X0, [X0 + 0xDF8]
	0x033C42B8 BL 0x1C16CF4
	0x033C42BC ADRP X0, 0xD2F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x101A000
	006 Move X20, 0xD38000
	007 Move W8, [X21+566]
	008 Move X20, [X20+2392]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD38000
	015 Move X0, [X0+2392]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+566], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X0, [X8]
	027 Compare X0, 0
	028 JumpIfEqual {38}
	029 Move X8, [X0]
	030 Move X1, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X3, [X8+584]
	034 Move X2, [X8+592]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 CallNoReturn X3
	038 Call 0x1C17F20

Method: System.Void WriteLine()

Disassembly:
	0x033C42C0 LDR X0, [X0 + 0x6C0]
	0x033C42C4 BL 0x1C16CF4
	0x033C42C8 MOVZ W8, 0x1
	0x033C42CC STRB W8, [X21 + 0x264]
	0x033C42D0 LDR X0, [X22]
	0x033C42D4 LDR W8, [X0 + 0xE0]
	0x033C42D8 CBNZ W8, 0x33C42E0
	0x033C42DC BL 0x1C16DFC
	0x033C42E0 MOV X0, X19
	0x033C42E4 MOV X1, X20
	0x033C42E8 MOV X2, X31
	0x033C42EC BL 0x3395194
	0x033C42F0 TBZ X0, 0x0, 0x33C4308
	0x033C42F4 MOVZ W0, 0x1
	0x033C42F8 LDP X20, X19, [X31 + 0x20]
	0x033C42FC LDP X22, X21, [X31 + 0x10]
	0x033C4300 LDR X30, [X31], #0x30
	0x033C4304 RET
	0x033C4308 CBZ X20, 0x33C441C
	0x033C430C MOV X0, X20
	0x033C4310 MOV X1, X31
	0x033C4314 BL 0x33970C4
	0x033C4318 TBNZ X0, 0x0, 0x33C4338
	0x033C431C LDR X8, [X20]
	0x033C4320 MOV X0, X20
	0x033C4324 MOV X1, X19
	0x033C4328 LDR X9, [X8 + 0x2A8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x101A000
	005 Move X19, 0xD38000
	006 Move W8, [X20+567]
	007 Move X19, [X19+2392]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD38000
	013 Move X0, [X0+2392]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+567], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X0, [X8]
	025 Compare X0, 0
	026 JumpIfEqual {34}
	027 Move X8, [X0]
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X2, [X8+600]
	031 Move X1, [X8+608]
	032 Move X30, [X31+32]
	033 CallNoReturn X2
	034 Call 0x1C17F20

Method: System.Void WriteLine(System.Int32 value)

Disassembly:
	0x033C432C LDR X2, [X8 + 0x2B0]
	0x033C4330 BLR X9
	0x033C4334 TBNZ X0, 0x0, 0x33C42F4
	0x033C4338 CBZ X19, 0x33C441C
	0x033C433C LDR X8, [X19]
	0x033C4340 MOV X0, X19
	0x033C4344 LDR X9, [X8 + 0x588]
	0x033C4348 LDR X1, [X8 + 0x590]
	0x033C434C BLR X9
	0x033C4350 TBZ X0, 0x0, 0x33C43A4
	0x033C4354 ADRP X8, 0xD2F000
	0x033C4358 LDR X8, [X8 + 0xDF8]
	0x033C435C LDR X0, [X8]
	0x033C4360 LDR W8, [X0 + 0xE0]
	0x033C4364 CBNZ W8, 0x33C436C
	0x033C4368 BL 0x1C16DFC
	0x033C436C MOV X0, X19
	0x033C4370 MOV X1, X31
	0x033C4374 BL 0x33AFB1C
	0x033C4378 LDR X8, [X22]
	0x033C437C MOV X21, X0
	0x033C4380 LDR W9, [X8 + 0xE0]
	0x033C4384 CBNZ W9, 0x33C4390
	0x033C4388 MOV X0, X8
	0x033C438C BL 0x1C16DFC
	0x033C4390 MOV X0, X21
	0x033C4394 MOV X1, X20
	0x033C4398 MOV X2, X31
	0x033C439C BL 0x3395194

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x101A000
	006 Move X20, 0xD38000
	007 Move W8, [X21+568]
	008 Move X20, [X20+2392]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD38000
	015 Move X0, [X0+2392]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+568], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X0, [X8]
	027 Compare X0, 0
	028 JumpIfEqual {38}
	029 Move X8, [X0]
	030 Move W1, W19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X3, [X8+616]
	034 Move X2, [X8+624]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 CallNoReturn X3
	038 Call 0x1C17F20

Method: System.Void WriteLine(System.String value)

Disassembly:
	0x033C43A0 TBNZ X0, 0x0, 0x33C42F4
	0x033C43A4 LDR X8, [X20]
	0x033C43A8 MOV X0, X20
	0x033C43AC LDR X9, [X8 + 0x588]
	0x033C43B0 LDR X1, [X8 + 0x590]
	0x033C43B4 BLR X9
	0x033C43B8 TBZ X0, 0x0, 0x33C4414
	0x033C43BC ADRP X8, 0xD2F000
	0x033C43C0 LDR X8, [X8 + 0xDF8]
	0x033C43C4 LDR X0, [X8]
	0x033C43C8 LDR W8, [X0 + 0xE0]
	0x033C43CC CBNZ W8, 0x33C43D4
	0x033C43D0 BL 0x1C16DFC
	0x033C43D4 MOV X0, X20
	0x033C43D8 MOV X1, X31
	0x033C43DC BL 0x33AFB1C
	0x033C43E0 LDR X8, [X22]
	0x033C43E4 MOV X20, X0
	0x033C43E8 LDR W9, [X8 + 0xE0]
	0x033C43EC CBNZ W9, 0x33C43F8
	0x033C43F0 MOV X0, X8
	0x033C43F4 BL 0x1C16DFC
	0x033C43F8 MOV X0, X20
	0x033C43FC MOV X1, X19
	0x033C4400 LDP X20, X19, [X31 + 0x20]
	0x033C4404 LDP X22, X21, [X31 + 0x10]
	0x033C4408 MOV X2, X31
	0x033C440C LDR X30, [X31], #0x30
	0x033C4410 B 0x3395194

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x101A000
	006 Move X20, 0xD38000
	007 Move W8, [X21+569]
	008 Move X20, [X20+2392]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD38000
	015 Move X0, [X0+2392]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+569], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X0, [X8]
	027 Compare X0, 0
	028 JumpIfEqual {38}
	029 Move X8, [X0]
	030 Move X1, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X3, [X8+632]
	034 Move X2, [X8+640]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 CallNoReturn X3
	038 Call 0x1C17F20

Method: System.Text.Encoding get_InputEncoding()

Disassembly:
	0x033C4414 MOV W0, W31
	0x033C4418 B 0x33C42F8
	0x033C441C BL 0x1C16F20
	0x033C4420 STR X30, [X31 - 0x30]!
	0x033C4424 STP X22, X21, [X31 + 0x10]
	0x033C4428 STP X20, X19, [X31 + 0x20]
	0x033C442C ADRP X22, 0x1019000
	0x033C4430 LDRB W8, [X22 + 0x265]
	0x033C4434 MOV W21, W2
	0x033C4438 MOV X19, X1
	0x033C443C MOV X20, X0
	0x033C4440 TBNZ X8, 0x0, 0x33C4458
	0x033C4444 ADRP X0, 0xD2F000
	0x033C4448 LDR X0, [X0 + 0x6C0]
	0x033C444C BL 0x1C16CF4
	0x033C4450 MOVZ W8, 0x1
	0x033C4454 STRB W8, [X22 + 0x265]
	0x033C4458 CBZ X19, 0x33C4578
	0x033C445C MOV X0, X19
	0x033C4460 MOV X1, X31
	0x033C4464 BL 0x33970C4
	0x033C4468 TBZ X0, 0x0, 0x33C44D0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x101A000
	005 Move X19, 0xD38000
	006 Move W8, [X20+570]
	007 Move X19, [X19+2392]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD38000
	013 Move X0, [X0+2392]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+570], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+32]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Text.Encoding get_OutputEncoding()

Disassembly:
	0x033C446C CBZ X20, 0x33C4578
	0x033C4470 MOV X0, X20
	0x033C4474 MOV X1, X31
	0x033C4478 BL 0x3396C08
	0x033C447C TBZ X0, 0x0, 0x33C4528
	0x033C4480 LDR X8, [X20]
	0x033C4484 MOV X0, X20
	0x033C4488 LDR X9, [X8 + 0x428]
	0x033C448C LDR X1, [X8 + 0x430]
	0x033C4490 BLR X9
	0x033C4494 ADRP X8, 0xD2F000
	0x033C4498 LDR X8, [X8 + 0x6C0]
	0x033C449C MOV X22, X0
	0x033C44A0 LDR X8, [X8]
	0x033C44A4 LDR W9, [X8 + 0xE0]
	0x033C44A8 CBNZ W9, 0x33C44B4
	0x033C44AC MOV X0, X8
	0x033C44B0 BL 0x1C16DFC
	0x033C44B4 MOV X0, X22
	0x033C44B8 MOV X1, X19
	0x033C44BC MOV X2, X31
	0x033C44C0 BL 0x3395194

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x101A000
	005 Move X19, 0xD38000
	006 Move W8, [X20+571]
	007 Move X19, [X19+2392]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD38000
	013 Move X0, [X0+2392]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+571], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+40]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void set_ForegroundColor(System.ConsoleColor value)

Disassembly:
	0x033C44C4 TBNZ X0, 0x0, 0x33C4564
	0x033C44C8 TBNZ X21, 0x0, 0x33C452C
	0x033C44CC B 0x33C4564
	0x033C44D0 ADRP X8, 0xD2F000
	0x033C44D4 LDR X8, [X8 + 0x6C0]
	0x033C44D8 LDR X0, [X8]
	0x033C44DC LDR W8, [X0 + 0xE0]
	0x033C44E0 CBNZ W8, 0x33C44E8
	0x033C44E4 BL 0x1C16DFC
	0x033C44E8 MOV X0, X20
	0x033C44EC MOV X1, X19
	0x033C44F0 MOV X2, X31
	0x033C44F4 BL 0x3395194
	0x033C44F8 TBZ X0, 0x0, 0x33C4504
	0x033C44FC MOVZ W0, 0x1
	0x033C4500 B 0x33C4564
	0x033C4504 LDR X8, [X19]
	0x033C4508 MOV X0, X19
	0x033C450C MOV X1, X20
	0x033C4510 LDP X20, X19, [X31 + 0x20]
	0x033C4514 LDR X3, [X8 + 0x2A8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x101A000
	006 Move X21, 0xD64000
	007 Move W8, [X20+572]
	008 Move X21, [X21+1976]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD64000
	015 Move X0, [X0+1976]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+572], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move W0, W19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]

Method: System.ConsoleKeyInfo ReadKey()

Disassembly:
	0x033C464C BLR X9
	0x033C4650 LDR X8, [X20]
	0x033C4654 MOV W22, W0
	0x033C4658 MOV X0, X20
	0x033C465C LDR X9, [X8 + 0x588]
	0x033C4660 LDR X1, [X8 + 0x590]
	0x033C4664 BLR X9
	0x033C4668 MOV W21, W0
	0x033C466C TBZ X22, 0x0, 0x33C46CC
	0x033C4670 TBZ X21, 0x0, 0x33C46CC
	0x033C4674 ADRP X8, 0xD2F000
	0x033C4678 LDR X8, [X8 + 0xDF8]
	0x033C467C LDR X0, [X8]
	0x033C4680 LDR W8, [X0 + 0xE0]
	0x033C4684 CBNZ W8, 0x33C468C
	0x033C4688 BL 0x1C16DFC
	0x033C468C MOV X0, X19
	0x033C4690 MOV X1, X31
	0x033C4694 BL 0x33AFB1C
	0x033C4698 MOV X19, X0
	0x033C469C MOV X0, X20
	0x033C46A0 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x101A000
	005 Move X20, 0xD38000
	006 Move W8, [X19+573]
	007 Move X20, [X20+2392]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD38000
	013 Move X0, [X0+2392]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+573], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move W0, W31
	023 Call Console.ReadKey, X0
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 And X1, X1, 0
	027 Move X30, [X31+32]
	028 Return X0

Method: System.ConsoleKeyInfo ReadKey(System.Boolean intercept)

Disassembly:
	0x033C46A4 BL 0x33AFB1C
	0x033C46A8 LDR X8, [X23]
	0x033C46AC MOV X20, X0
	0x033C46B0 LDR W9, [X8 + 0xE0]
	0x033C46B4 CBNZ W9, 0x33C46C0
	0x033C46B8 MOV X0, X8
	0x033C46BC BL 0x1C16DFC
	0x033C46C0 MOV X0, X19
	0x033C46C4 MOV X1, X20
	0x033C46C8 B 0x33C4774
	0x033C46CC TBZ X22, 0x0, 0x33C472C
	0x033C46D0 ADRP X8, 0xD2F000
	0x033C46D4 LDR X8, [X8 + 0xDF8]
	0x033C46D8 LDR X0, [X8]
	0x033C46DC LDR W8, [X0 + 0xE0]
	0x033C46E0 CBNZ W8, 0x33C46E8
	0x033C46E4 BL 0x1C16DFC
	0x033C46E8 MOV X0, X19
	0x033C46EC MOV X1, X31
	0x033C46F0 BL 0x33AFB1C
	0x033C46F4 LDR X8, [X23]
	0x033C46F8 MOV X22, X0
	0x033C46FC LDR W9, [X8 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x101A000
	006 Move X21, 0xD64000
	007 Move W8, [X20+574]
	008 Move X21, [X21+1976]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD64000
	015 Move X0, [X0+1976]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+574], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 And W0, W19, 1
	025 Call ConsoleDriver.ReadKey, X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 And X1, X1, 0
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Void ResetColor()

Disassembly:
	0x033C47DC LDR X0, [X0 + 0x7D0]
	0x033C47E0 BL 0x1C16CF4
	0x033C47E4 ADRP X0, 0xD61000
	0x033C47E8 LDR X0, [X0 + 0x708]
	0x033C47EC BL 0x1C16CF4
	0x033C47F0 ADRP X0, 0xD2F000
	0x033C47F4 LDR X0, [X0 + 0x6C0]
	0x033C47F8 BL 0x1C16CF4
	0x033C47FC ADRP X0, 0xD68000
	0x033C4800 LDR X0, [X0 + 0x7D8]
	0x033C4804 BL 0x1C16CF4
	0x033C4808 MOVZ W8, 0x1
	0x033C480C STRB W8, [X20 + 0x267]
	0x033C4810 LDR X0, [X23]
	0x033C4814 LDR W8, [X0 + 0xE0]
	0x033C4818 CBNZ W8, 0x33C4820
	0x033C481C BL 0x1C16DFC
	0x033C4820 MOV X0, X22
	0x033C4824 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x101A000
	005 Move X20, 0xD64000
	006 Move W8, [X19+575]
	007 Move X20, [X20+1976]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD64000
	013 Move X0, [X0+1976]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+575], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]

Method: System.Void DoConsoleCancelEvent()

Disassembly:
	0x033C48F4 LDR X9, [X8 + 0x358]
	0x033C48F8 LDR X1, [X8 + 0x360]
	0x033C48FC BLR X9
	0x033C4900 LDR X8, [X19]
	0x033C4904 MOV X23, X0
	0x033C4908 MOV X0, X19
	0x033C490C LDR X9, [X8 + 0x358]
	0x033C4910 LDR X1, [X8 + 0x360]
	0x033C4914 BLR X9
	0x033C4918 MOV X25, X0
	0x033C491C MOV X0, X19
	0x033C4920 MOV X1, X31
	0x033C4924 BL 0x32CE414
	0x033C4928 CBZ X25, 0x33C4EEC
	0x033C492C CBZ X23, 0x33C4EEC
	0x033C4930 LDR W8, [X25 + 0x18]
	0x033C4934 CBZ X21, 0x33C4968
	0x033C4938 LDR W9, [X23 + 0x18]
	0x033C493C TBNZ X0, 0x0, 0x33C4978
	0x033C4940 B 0x33C4998
	0x033C4944 TBZ X28, 0x0, 0x33C4DD0
	0x033C4948 ADRP X0, 0xD37000
	0x033C494C LDR X0, [X0 + 0x578]
	0x033C4950 BL 0x1C16D08
	0x033C4954 BL 0x1C16F10
	0x033C4958 MOV X19, X0
	0x033C495C ADRP X0, 0xD68000
	0x033C4960 LDR X0, [X0 + 0x7E0]
	0x033C4964 B 0x33C4F60
	0x033C4968 TBZ X0, 0x0, 0x33C4988
	0x033C496C LDR W9, [X23 + 0x18]
	0x033C4970 CMP W8, W9
	0x033C4974 B.EQ 0x33C49D8
	0x033C4978 ADD W9, W9, 0x1
	0x033C497C CMP W9, W8
	0x033C4980 B.NE 0x33C49A0
	0x033C4984 B 0x33C49D8
	0x033C4988 LDR W9, [X23 + 0x18]
	0x033C498C ADD W10, W8, 0x1
	0x033C4990 CMP W10, W9
	0x033C4994 B.EQ 0x33C49D8
	0x033C4998 CMP W8, W9
	0x033C499C B.EQ 0x33C49D8
	0x033C49A0 TBZ X28, 0x0, 0x33C4DD0
	0x033C49A4 ADRP X0, 0xD62000
	0x033C49A8 LDR X0, [X0 + 0x550]
	0x033C49AC BL 0x1C16D08
	0x033C49B0 BL 0x1C16F10
	0x033C49B4 MOV X19, X0
	0x033C49B8 ADRP X0, 0xD68000
	0x033C49BC LDR X0, [X0 + 0x7E8]
	0x033C49C0 BL 0x1C16D08
	0x033C49C4 MOV X1, X0
	0x033C49C8 MOV X0, X19
	0x033C49CC MOV X2, X31
	0x033C49D0 BL 0x32D28D0
	0x033C49D4 B 0x33C4F74
	0x033C49D8 ADRP X8, 0xD68000
	0x033C49DC LDR X8, [X8 + 0x7D0]
	0x033C49E0 LDR X0, [X8]
	0x033C49E4 BL 0x1C16F10
	0x033C49E8 MOV X24, X0
	0x033C49EC MOV X0, X19
	0x033C49F0 MOV X1, X31
	0x033C49F4 BL 0x32CE414
	0x033C49F8 MOV W27, W0
	0x033C49FC CBZ X21, 0x33C4ADC
	0x033C4A00 MOV X0, X21
	0x033C4A04 BL 0x1C25764
	0x033C4A08 MOV X26, X0
	0x033C4A0C STR W28, [X31 + 0xC]
	0x033C4A10 TBZ X27, 0x0, 0x33C4B24
	0x033C4A14 LDR W8, [X25 + 0x18]
	0x033C4A18 CBZ W8, 0x33C4DBC
	0x033C4A1C LDR X0, [X25 + 0x20]
	0x033C4A20 CBZ X0, 0x33C4EEC
	0x033C4A24 LDR X8, [X0]
	0x033C4A28 LDP X9, X1, [X8 + 0x1D8]
	0x033C4A2C BLR X9
	0x033C4A30 MOV X1, X0
	0x033C4A34 MOV X0, X26
	0x033C4A38 BL 0x33C4288
	0x033C4A3C LDR W8, [X25 + 0x18]
	0x033C4A40 MOV W26, W0
	0x033C4A44 CMP W8, 0x2
	0x033C4A48 B.LT 0x33C4AC4
	0x033C4A4C MOV X28, X31
	0x033C4A50 ADD X29, X25, 0x28
	0x033C4A54 LDR W8, [X23 + 0x18]
	0x033C4A58 CMP W28, W8
	0x033C4A5C B.CS 0x33C4DBC
	0x033C4A60 ADD X8, X23, W28, 0x3, SXTW
	0x033C4A64 LDR X0, [X8 + 0x20]
	0x033C4A68 CBZ X0, 0x33C4EEC
	0x033C4A6C LDR X8, [X0]
	0x033C4A70 ADD X20, X28, 0x1
	0x033C4A74 LDP X9, X1, [X8 + 0x1D8]
	0x033C4A78 BLR X9
	0x033C4A7C LDR W8, [X25 + 0x18]
	0x033C4A80 CMP W20, W8
	0x033C4A84 B.CS 0x33C4DBC
	0x033C4A88 MOV X27, X0
	0x033C4A8C LDR X0, [X29, X28, LSL #3]
	0x033C4A90 CBZ X0, 0x33C4EEC
	0x033C4A94 LDR X8, [X0]
	0x033C4A98 LDP X9, X1, [X8 + 0x1D8]
	0x033C4A9C BLR X9
	0x033C4AA0 MOV X1, X0
	0x033C4AA4 MOV X0, X27
	0x033C4AA8 BL 0x33C4288
	0x033C4AAC LDR W8, [X25 + 0x18]
	0x033C4AB0 ADD X28, X28, 0x1
	0x033C4AB4 ADD W9, W28, 0x1
	0x033C4AB8 AND W26, W26, W0, 0x0
	0x033C4ABC CMP W9, W8
	0x033C4AC0 B.LT 0x33C4A54
	0x033C4AC4 CBZ X24, 0x33C4EEC
	0x033C4AC8 LDR W28, [X31 + 0xC]
	0x033C4ACC MOVZ W8, 0x1
	0x033C4AD0 STRB W8, [X24 + 0x20]
	0x033C4AD4 TBZ X26, 0x0, 0x33C4DCC
	0x033C4AD8 B 0x33C4EC0
	0x033C4ADC TBZ X27, 0x0, 0x33C4BCC
	0x033C4AE0 LDR X8, [X23 + 0x18]
	0x033C4AE4 LDR W10, [X25 + 0x18]
	0x033C4AE8 ADD W9, W8, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, 0x101A000
	010 Move X20, 0xD38000
	011 Move W8, [X19+576]
	012 Move X20, [X20+2392]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xD69000
	018 Move X0, [X0+1912]
	019 Call 0x1C17CF4
	020 Move X0, 0xD69000
	021 Move X0, [X0+1920]
	022 Call 0x1C17CF4
	023 Move X0, 0xD38000
	024 Move X0, [X0+2392]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X19+576], W8
	028 Move X0, [X20]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X20]
	034 Move X8, [X0+184]
	035 Move X8, [X8+48]
	036 Compare X8, 0
	037 JumpIfEqual {119}
	038 Move X8, 0xD69000
	039 Move X8, [X8+1912]
	040 Move X0, [X8]
	041 Call 0x1C17F10
	042 Move W1, W31
	043 Move X2, X31
	044 Move X19, X0
	045 Call ConsoleCancelEventArgs..ctor, X0, X1
	046 Move X0, [X20]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X20]
	052 Move X8, [X0+184]
	053 Move X0, [X8+48]
	054 Compare X0, 0
	055 JumpIfEqual {132}
	056 Move X8, [X0]
	057 Move X9, [X8+472]
	058 Move X1, [X8+480]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Compare X0, 0
	061 JumpIfEqual {132}
	062 Move X8, [X0+24]
	063 Move X20, X0
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X25, 0xD69000
	066 Move X21, 0xD36000
	067 Move X25, [X25+1920]
	068 Move X21, [X21+3264]
	069 Move X23, X31
	070 And X8, X8, 0
	071 Add X24, X20, 32
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X0, [X24]
	074 Compare X0, 0
	075 JumpIfEqual {89}
	076 Move X1, [X25]
	077 Move X8, [X0]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X9, [X0+24]
	080 Move X8, [X0+64]
	081 Move X3, [X0+40]
	082 Move X0, X8
	083 Move X1, X31
	084 Move X2, X19
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move W8, [X20+24]
	087 Add X23, X23, 1
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Call 0x1C17F20
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X22, X0
	092 Move X0, X22
	093 Call 0x3EB2AD0
	094 Move X22, X0
	095 Move X0, X21
	096 Call 0x1C17D08
	097 Move X8, [X22]
	098 Move X1, [X8]
	099 Call 0x1C18270
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {133}
	104 Call 0x3EB2AE0
	105 Compare X19, 0
	106 JumpIfEqual {132}
	107 Move W8, [X19+20]
	108 Compare W8, 0
	109 JumpIfEqual {119}
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X24, [X31+16]
	115 Move X23, [X31+24]
	116 Move X30, [X31+64]
	117 Move X25, [X31+72]
	118 Return 
	119 Move X20, [X31+48]
	120 Move X19, [X31+56]
	121 Move X22, [X31+32]
	122 Move X21, [X31+40]
	123 Move X24, [X31+16]
	124 Move X23, [X31+24]
	125 Move W0, 58
	126 Move X30, [X31+64]
	127 Move X25, [X31+72]
	128 Call 0x1C89164
	129 Return 
	130 Call 0x1C181E0
	131 Call 0x1C17F28
	132 Call 0x1C17F20
	133 Move W0, 8
	134 Call 0x3EB2AF0
	135 Move X8, [X22]
	136 Move [X0], X8
	137 Move X1, 0xAF1000
	138 Add X1, X1, 3672
	139 Move X2, X31
	140 Call 0x3EB2B00
	141 Move X22, X0
	142 Call 0x3EB2AE0
	143 Move X0, X22
	144 Call 0x1D2D690
	145 Call 0x1991590

