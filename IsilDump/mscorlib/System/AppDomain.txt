Type: System.AppDomain

Method: System.Boolean IsAppXModel()

Disassembly:
	0x033C1110 MOV X1, X19
	0x033C1114 MOV X2, X31

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x033C1118 MOV X20, X0

ISIL:
	001 Return 

Method: System.String getFriendlyName()

Disassembly:
	0x033C1120 ADRP X0, 0xD6B000

ISIL:
	001 Call 0x1C257E4
	002 Return X0

Method: System.AppDomain getCurDomain()

Disassembly:
	0x033C1124 LDR X0, [X0 + 0x5E0]

ISIL:
	001 Call 0x1C253A8
	002 Return X0

Method: System.AppDomain get_CurrentDomain()

Disassembly:
	0x033C1128 BL 0x1C16D08

ISIL:
	001 Call 0x1C253A8
	002 Return X0

Method: System.Reflection.Assembly[] GetAssemblies(System.Boolean refOnly)

Disassembly:
	0x033C112C MOV X1, X0
	0x033C1130 MOV X0, X20

ISIL:
	001 And W1, W1, 1
	002 Call 0x1C25744
	003 Return X0

Method: System.Reflection.Assembly[] GetAssemblies()

Disassembly:
	0x033C1134 BL 0x1C16DEC
	0x033C1138 STR X30, [X31 - 0x30]!

ISIL:
	001 Move W1, W31
	002 Call 0x1C25744
	003 Return X0

Method: System.Object GetData(System.String name)

Disassembly:
	0x033C113C STP X22, X21, [X31 + 0x10]

ISIL:
	001 Call 0x1C25410
	002 Return X0

Method: System.Object InitializeLifetimeService()

Disassembly:
	0x033C1140 STP X20, X19, [X31 + 0x20]
	0x033C1144 ADRP X21, 0x101C000

ISIL:
	001 Move X0, X31
	002 Return X0

Method: System.Reflection.Assembly LoadAssembly(System.String assemblyRef, System.Security.Policy.Evidence securityEvidence, System.Boolean refOnly, ref System.Threading.StackCrawlMark stackMark)

Disassembly:
	0x033C1148 LDRB W8, [X21 + 0x21F]
	0x033C114C MOV X19, X1

ISIL:
	001 And W3, W3, 1
	002 Call 0x1C25654
	003 Return X0

Method: System.Reflection.Assembly Load(System.String assemblyString)

Disassembly:
	0x033C1150 MOV X20, X0
	0x033C1154 TBNZ X8, 0x0, 0x33C116C
	0x033C1158 ADRP X0, 0xD6B000
	0x033C115C LDR X0, [X0 + 0x5E8]
	0x033C1160 BL 0x1C16CF4
	0x033C1164 MOVZ W8, 0x1
	0x033C1168 STRB W8, [X21 + 0x21F]
	0x033C116C ADRP X22, 0xD6B000
	0x033C1170 LDR X21, [X20 + 0x48]!

ISIL:
	001 Move [X31-16], X30
	002 Move W8, 1
	003 Add X4, X31, 12
	004 Move X2, X31
	005 Move W3, W31
	006 Move [X31+12], W8
	007 Call AppDomain.Load, X0, X1, X2, X3, X4
	008 Move X30, [X31+16]
	009 Return X0

Method: System.Reflection.Assembly Load(System.String assemblyString, System.Security.Policy.Evidence assemblySecurity, System.Boolean refonly, ref System.Threading.StackCrawlMark stackMark)

Disassembly:
	0x033C1174 LDR X22, [X22 + 0x5E8]
	0x033C1178 MOV X0, X21
	0x033C117C MOV X1, X19
	0x033C1180 BL 0x33C0DE4
	0x033C1184 MOV X8, X0
	0x033C1188 CBZ X0, 0x33C119C
	0x033C118C LDR X1, [X22]
	0x033C1190 LDR X9, [X8]
	0x033C1194 CMP X9, X1
	0x033C1198 B.NE 0x33C11C8
	0x033C119C MOV X0, X20
	0x033C11A0 MOV X1, X8
	0x033C11A4 MOV X2, X21
	0x033C11A8 BL 0x1C24138
	0x033C11AC CMP X21, X0
	0x033C11B0 MOV X21, X0
	0x033C11B4 B.NE 0x33C1178
	0x033C11B8 LDP X20, X19, [X31 + 0x20]
	0x033C11BC LDP X22, X21, [X31 + 0x10]
	0x033C11C0 LDR X30, [X31], #0x30
	0x033C11C4 RET
	0x033C11C8 MOV X0, X8
	0x033C11CC BL 0x1C171E0
	0x033C11D0 STR X30, [X31 - 0x30]!
	0x033C11D4 STP X22, X21, [X31 + 0x10]
	0x033C11D8 STP X20, X19, [X31 + 0x20]
	0x033C11DC ADRP X21, 0x101C000
	0x033C11E0 LDRB W8, [X21 + 0x220]
	0x033C11E4 MOV X19, X1
	0x033C11E8 MOV X20, X0
	0x033C11EC TBNZ X8, 0x0, 0x33C1204
	0x033C11F0 ADRP X0, 0xD6B000
	0x033C11F4 LDR X0, [X0 + 0x5E8]
	0x033C11F8 BL 0x1C16CF4
	0x033C11FC MOVZ W8, 0x1
	0x033C1200 STRB W8, [X21 + 0x220]
	0x033C1204 ADRP X22, 0xD6B000
	0x033C1208 LDR X21, [X20 + 0x48]!
	0x033C120C LDR X22, [X22 + 0x5E8]
	0x033C1210 MOV X0, X21
	0x033C1214 MOV X1, X19
	0x033C1218 BL 0x33C0FDC
	0x033C121C MOV X8, X0
	0x033C1220 CBZ X0, 0x33C1234
	0x033C1224 LDR X1, [X22]
	0x033C1228 LDR X9, [X8]
	0x033C122C CMP X9, X1
	0x033C1230 B.NE 0x33C1260
	0x033C1234 MOV X0, X20
	0x033C1238 MOV X1, X8
	0x033C123C MOV X2, X21
	0x033C1240 BL 0x1C24138
	0x033C1244 CMP X21, X0
	0x033C1248 MOV X21, X0
	0x033C124C B.NE 0x33C1210
	0x033C1250 LDP X20, X19, [X31 + 0x20]
	0x033C1254 LDP X22, X21, [X31 + 0x10]
	0x033C1258 LDR X30, [X31], #0x30
	0x033C125C RET
	0x033C1260 MOV X0, X8
	0x033C1264 BL 0x1C171E0
	0x033C1268 STR X30, [X31 - 0x30]!
	0x033C126C STP X22, X21, [X31 + 0x10]
	0x033C1270 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {26}
	006 Move W8, [X1+16]
	007 Move X19, X1
	008 Compare W8, 0
	009 JumpIfEqual {38}
	010 And W3, W3, 1
	011 Move X1, X19
	012 Call 0x1C25654
	013 Move X1, X31
	014 Move X2, X31
	015 Move X20, X0
	016 Call Assembly.op_Equality, X0, X1
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {56}
	021 Move X0, X20
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return X0
	026 Move X0, 0xD38000
	027 Move X0, [X0+1320]
	028 Call 0x1C17D08
	029 Call 0x1C17F10
	030 Move X19, X0
	031 Move X0, 0xD6C000
	032 Move X0, [X0+1408]
	033 Call 0x1C17D08
	034 Move X1, X0
	035 Move X0, X19
	036 Move X2, X31
	037 Call ArgumentNullException..ctor, X0, X1
	038 Move X0, 0xD3B000
	039 Move X0, [X0+1400]
	040 Call 0x1C17D08
	041 Call 0x1C17F10
	042 Move X19, X0
	043 Move X0, 0xD6C000
	044 Move X0, [X0+1416]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Move X2, X31
	049 Call ArgumentException..ctor, X0, X1
	050 Move X0, 0xD6C000
	051 Move X0, [X0+1424]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X19
	055 Call 0x1C17DEC
	056 Move X0, 0xD61000
	057 Move X0, [X0+1952]
	058 Call 0x1C17D08
	059 Call 0x1C17F10
	060 Move X1, X31
	061 Move X2, X19
	062 Move X3, X31
	063 Move X20, X0
	064 Call FileNotFoundException..ctor, X0, X1, X2
	065 Move X0, 0xD6C000
	066 Move X0, [X0+1424]
	067 Call 0x1C17D08
	068 Move X1, X0
	069 Move X0, X20
	070 Call 0x1C17DEC

Method: System.AppDomain InternalSetDomainByID(System.Int32 domain_id)

Disassembly:
	0x033C1274 ADRP X21, 0x101C000

ISIL:
	001 Call 0x1C253F0
	002 Return X0

Method: System.AppDomain InternalSetDomain(System.AppDomain context)

Disassembly:
	0x033C1278 LDRB W8, [X21 + 0x221]

ISIL:
	001 Call 0x1C253D8
	002 Return X0

Method: System.Void InternalPushDomainRefByID(System.Int32 domain_id)

Disassembly:
	0x033C127C MOV X19, X1

ISIL:
	001 Call 0x1C25820
	002 Return 

Method: System.Void InternalPopDomainRef()

Disassembly:
	0x033C1280 MOV X20, X0

ISIL:
	001 Call 0x1C25808
	002 Return 

Method: System.Runtime.Remoting.Contexts.Context InternalSetContext(System.Runtime.Remoting.Contexts.Context context)

Disassembly:
	0x033C1284 TBNZ X8, 0x0, 0x33C129C

ISIL:
	001 Call 0x1C257CC
	002 Return X0

Method: System.Runtime.Remoting.Contexts.Context InternalGetContext()

Disassembly:
	0x033C1288 ADRP X0, 0xD6B000

ISIL:
	001 Call 0x1C257C8
	002 Return X0

Method: System.Runtime.Remoting.Contexts.Context InternalGetDefaultContext()

Disassembly:
	0x033C128C LDR X0, [X0 + 0x5F0]

ISIL:
	001 Call 0x1C257C8
	002 Return X0

Method: System.String InternalGetProcessGuid(System.String newguid)

Disassembly:
	0x033C1290 BL 0x1C16CF4

ISIL:
	001 Call 0x1C257F0
	002 Return X0

Method: System.Object InvokeInDomainByID(System.Int32 domain_id, System.Reflection.MethodInfo method, System.Object obj, System.Object[] args)

Disassembly:
	0x033C1294 MOVZ W8, 0x1
	0x033C1298 STRB W8, [X21 + 0x221]
	0x033C129C ADRP X22, 0xD6B000
	0x033C12A0 LDR X21, [X20 + 0x68]!
	0x033C12A4 LDR X22, [X22 + 0x5F0]
	0x033C12A8 MOV X0, X21
	0x033C12AC MOV X1, X19
	0x033C12B0 BL 0x33C0DE4
	0x033C12B4 MOV X8, X0
	0x033C12B8 CBZ X0, 0x33C12CC
	0x033C12BC LDR X1, [X22]
	0x033C12C0 LDR X9, [X8]
	0x033C12C4 CMP X9, X1
	0x033C12C8 B.NE 0x33C12F8
	0x033C12CC MOV X0, X20
	0x033C12D0 MOV X1, X8
	0x033C12D4 MOV X2, X21
	0x033C12D8 BL 0x1C24138
	0x033C12DC CMP X21, X0
	0x033C12E0 MOV X21, X0
	0x033C12E4 B.NE 0x33C12A8
	0x033C12E8 LDP X20, X19, [X31 + 0x20]
	0x033C12EC LDP X22, X21, [X31 + 0x10]
	0x033C12F0 LDR X30, [X31], #0x30
	0x033C12F4 RET
	0x033C12F8 MOV X0, X8
	0x033C12FC BL 0x1C171E0
	0x033C1300 STR X30, [X31 - 0x30]!
	0x033C1304 STP X22, X21, [X31 + 0x10]
	0x033C1308 STP X20, X19, [X31 + 0x20]
	0x033C130C ADRP X21, 0x101C000
	0x033C1310 LDRB W8, [X21 + 0x222]
	0x033C1314 MOV X19, X1
	0x033C1318 MOV X20, X0
	0x033C131C TBNZ X8, 0x0, 0x33C1334
	0x033C1320 ADRP X0, 0xD6B000
	0x033C1324 LDR X0, [X0 + 0x5F0]
	0x033C1328 BL 0x1C16CF4
	0x033C132C MOVZ W8, 0x1
	0x033C1330 STRB W8, [X21 + 0x222]
	0x033C1334 ADRP X22, 0xD6B000
	0x033C1338 LDR X21, [X20 + 0x68]!
	0x033C133C LDR X22, [X22 + 0x5F0]
	0x033C1340 MOV X0, X21
	0x033C1344 MOV X1, X19
	0x033C1348 BL 0x33C0FDC
	0x033C134C MOV X8, X0
	0x033C1350 CBZ X0, 0x33C1364
	0x033C1354 LDR X1, [X22]
	0x033C1358 LDR X9, [X8]
	0x033C135C CMP X9, X1
	0x033C1360 B.NE 0x33C1390
	0x033C1364 MOV X0, X20
	0x033C1368 MOV X1, X8
	0x033C136C MOV X2, X21
	0x033C1370 BL 0x1C24138
	0x033C1374 CMP X21, X0
	0x033C1378 MOV X21, X0
	0x033C137C B.NE 0x33C1340
	0x033C1380 LDP X20, X19, [X31 + 0x20]
	0x033C1384 LDP X22, X21, [X31 + 0x10]
	0x033C1388 LDR X30, [X31], #0x30
	0x033C138C RET
	0x033C1390 MOV X0, X8
	0x033C1394 BL 0x1C171E0
	0x033C1398 STR X30, [X31 - 0x20]!
	0x033C139C STP X20, X19, [X31 + 0x10]
	0x033C13A0 ADRP X20, 0x101C000
	0x033C13A4 LDRB W8, [X20 + 0x224]
	0x033C13A8 MOV W19, W0
	0x033C13AC STR W0, [X31 + 0xC]
	0x033C13B0 TBNZ X8, 0x0, 0x33C141C
	0x033C13B4 ADRP X0, 0xD34000
	0x033C13B8 LDR X0, [X0 + 0xC48]
	0x033C13BC BL 0x1C16CF4
	0x033C13C0 ADRP X0, 0xD6B000
	0x033C13C4 LDR X0, [X0 + 0x5F8]
	0x033C13C8 BL 0x1C16CF4
	0x033C13CC ADRP X0, 0xD6B000
	0x033C13D0 LDR X0, [X0 + 0x600]
	0x033C13D4 BL 0x1C16CF4
	0x033C13D8 ADRP X0, 0xD6B000
	0x033C13DC LDR X0, [X0 + 0x608]
	0x033C13E0 BL 0x1C16CF4
	0x033C13E4 ADRP X0, 0xD6B000
	0x033C13E8 LDR X0, [X0 + 0x610]
	0x033C13EC BL 0x1C16CF4
	0x033C13F0 ADRP X0, 0xD6B000
	0x033C13F4 LDR X0, [X0 + 0x618]
	0x033C13F8 BL 0x1C16CF4
	0x033C13FC ADRP X0, 0xD6B000
	0x033C1400 LDR X0, [X0 + 0x620]
	0x033C1404 BL 0x1C16CF4
	0x033C1408 ADRP X0, 0xD6B000
	0x033C140C LDR X0, [X0 + 0x628]
	0x033C1410 BL 0x1C16CF4
	0x033C1414 MOVZ W8, 0x1
	0x033C1418 STRB W8, [X20 + 0x224]
	0x033C141C MOVZ W8, 0x2EE0
	0x033C1420 CMP W19, W8

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x101D000
	009 Move W8, [X19+534]
	010 Move X21, X3
	011 Move X22, X2
	012 Move X20, X1
	013 Move W23, W0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xD64000
	019 Move X0, [X0+2464]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+534], W8
	023 Move [X31+8], X31
	024 Call 0x1C253A8
	025 Move X19, X0
	026 Move W0, W23
	027 Call 0x1C25820
	028 Move W0, W23
	029 Call 0x1C253F0
	030 Compare X20, 0
	031 JumpIfEqual {71}
	032 Move X9, 0xD64000
	033 Move X9, [X9+2464]
	034 Move X8, [X20]
	035 Move X1, [X9]
	036 Move W10, [X8+304]
	037 Move W9, [X1+304]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X8, [X8+200]
	040 Add X8, X8, X9
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Add X3, X31, 8
	044 Move X0, X20
	045 Move X1, X22
	046 Move X2, X21
	047 Move X4, X31
	048 Call RuntimeMethodInfo.InternalInvoke, X0, X1, X2, X3
	049 Move X21, [X31+8]
	050 Compare X21, 0
	051 JumpIfNotEqual {72}
	052 Move X20, X0
	053 Move X0, X19
	054 Call 0x1C253D8
	055 Call 0x1C25808
	056 Move X0, X20
	057 Compare X21, 0
	058 JumpIfNotEqual {69}
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X22, [X31+32]
	062 Move X21, [X31+40]
	063 Move X30, [X31+16]
	064 Move X23, [X31+24]
	065 Add X31, X31, 64
	066 Return X0
	067 Move X0, X20
	068 Call 0x1C181E0
	069 Move X0, X21
	070 Call 0x1C17F18
	071 Call 0x1C17F20
	072 Move X0, 0xD6C000
	073 Move X0, [X0+1432]
	074 Call 0x1C17D08
	075 Move X1, X0
	076 Move X0, X21
	077 Call 0x1C17DEC
	078 Move X20, X0
	079 Move W22, 1
	080 Move X20, X0
	081 Move W22, W31
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X0, X20
	084 Call 0x3EB2AD0
	085 Move X21, [X0]
	086 Call 0x3EB2AE0
	087 Move X0, X19
	088 Call 0x1C253D8
	089 Move X20, X31
	090 Move X0, X31
	091 Move TEMP, X22
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {55}
	095 Move X21, X31
	096 Move X20, X0
	097 Move X0, X19
	098 Call 0x1C253D8
	099 Move TEMP, X22
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {104}
	103 Call 0x1C25808
	104 Compare X21, 0
	105 JumpIfNotEqual {108}
	106 Move X0, X20
	107 Call 0x1D2D690
	108 Move X0, X21
	109 Call 0x1C17F18
	110 Call 0x1991590

Method: System.String GetProcessGuid()

Disassembly:
	0x033C1424 B.LE 0x33C1458
	0x033C1428 MOVZ W8, 0x4E9F
	0x033C142C CMP W19, W8
	0x033C1430 B.LE 0x33C1480
	0x033C1434 MOVZ W8, 0xFDE8
	0x033C1438 CMP W19, W8
	0x033C143C B.EQ 0x33C14F0
	0x033C1440 MOVZ W8, 0xFDE9
	0x033C1444 CMP W19, W8
	0x033C1448 B.NE 0x33C14A4
	0x033C144C ADRP X8, 0xD6B000
	0x033C1450 LDR X8, [X8 + 0x618]
	0x033C1454 B 0x33C1504
	0x033C1458 CMP W19, 0x4B0
	0x033C145C B.EQ 0x33C14D8
	0x033C1460 CMP W19, 0x4B1
	0x033C1464 B.EQ 0x33C14E4
	0x033C1468 MOVZ W8, 0x2EE0
	0x033C146C CMP W19, W8
	0x033C1470 B.NE 0x33C14A4
	0x033C1474 ADRP X8, 0xD6B000
	0x033C1478 LDR X8, [X8 + 0x628]
	0x033C147C B 0x33C1504
	0x033C1480 MOVZ W8, 0x2EE1
	0x033C1484 CMP W19, W8
	0x033C1488 B.EQ 0x33C14FC
	0x033C148C MOVZ W8, 0x4E9F
	0x033C1490 CMP W19, W8
	0x033C1494 B.NE 0x33C14A4
	0x033C1498 ADRP X8, 0xD6B000
	0x033C149C LDR X8, [X8 + 0x600]
	0x033C14A0 B 0x33C1504
	0x033C14A4 ADRP X8, 0xD34000
	0x033C14A8 LDR X8, [X8 + 0xC48]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x101D000
	006 Move X19, 0xD6C000
	007 Move W8, [X20+535]
	008 Move X19, [X19+1440]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD6C000
	014 Move X0, [X0+1440]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+535], W8
	018 Move X8, [X19]
	019 Move [X31], X31
	020 Move [X31+8], X31
	021 Move X8, [X8+184]
	022 Move X0, [X8]
	023 Compare X0, 0
	024 JumpIfNotEqual {38}
	025 Call Guid.NewGuid
	026 Move [X31], X0
	027 Move [X31+8], X1
	028 Add X0, X31, 0
	029 Move X1, X31
	030 Call Guid.ToString, X0
	031 Call 0x1C257F0
	032 Move X8, [X19]
	033 Move X8, [X8+184]
	034 Move [X8], X0
	035 Move X8, [X19]
	036 Move X8, [X8+184]
	037 Move X0, [X8]
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X30, [X31+16]
	041 Add X31, X31, 48
	042 Return X0

Method: System.Boolean InternalIsFinalizingForUnload(System.Int32 domain_id)

Disassembly:
	0x033C14AC LDR X0, [X8]

ISIL:
	001 Call 0x1C25408
	002 Return X0

Method: System.Boolean IsFinalizingForUnload()

Disassembly:
	0x033C14B0 LDR W8, [X0 + 0xE0]
	0x033C14B4 CBNZ W8, 0x33C14BC
	0x033C14B8 BL 0x1C16DFC
	0x033C14BC MOV X0, X31
	0x033C14C0 BL 0x3338524

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X31
	003 Call Thread.GetDomainID
	004 Move X30, [X31+16]
	005 Call 0x1C25408
	006 Return X0

Method: System.Int32 getDomainID()

Disassembly:
	0x033C14C4 MOV X1, X0
	0x033C14C8 ADD X0, X31, 0xC

ISIL:
	001 Move X0, X31
	002 Call Thread.GetDomainID
	003 Return X0

Method: System.String ToString()

Disassembly:
	0x033C14CC MOV X2, X31

ISIL:
	001 Call 0x1C257E4
	002 Return X0

Method: System.Void DoAssemblyLoad(System.Reflection.Assembly assembly)

Disassembly:
	0x033C14D0 BL 0x337B824
	0x033C14D4 B 0x33C1508
	0x033C14D8 ADRP X8, 0xD6B000
	0x033C14DC LDR X8, [X8 + 0x5F8]
	0x033C14E0 B 0x33C1504
	0x033C14E4 ADRP X8, 0xD6B000
	0x033C14E8 LDR X8, [X8 + 0x610]
	0x033C14EC B 0x33C1504
	0x033C14F0 ADRP X8, 0xD6B000
	0x033C14F4 LDR X8, [X8 + 0x608]
	0x033C14F8 B 0x33C1504
	0x033C14FC ADRP X8, 0xD6B000
	0x033C1500 LDR X8, [X8 + 0x620]
	0x033C1504 LDR X0, [X8]
	0x033C1508 LDP X20, X19, [X31 + 0x10]
	0x033C150C LDR X30, [X31], #0x20
	0x033C1510 RET
	0x033C1514 MOV X0, X31
	0x033C1518 B 0x32EC85C
	0x033C151C STR X30, [X31 - 0x10]!
	0x033C1520 MOV X0, X31
	0x033C1524 BL 0x33E3C68
	0x033C1528 CBZ X0, 0x33C1538
	0x033C152C MOV X1, X31
	0x033C1530 LDR X30, [X31], #0x10
	0x033C1534 B 0x33E3CC4
	0x033C1538 BL 0x1C16F20
	0x033C153C B 0x1C87BB0
	0x033C1540 B 0x1C87BCC
	0x033C1544 B 0x1C87E0C
	0x033C1548 STR X30, [X31 - 0x20]!
	0x033C154C STP X20, X19, [X31 + 0x10]
	0x033C1550 ADRP X20, 0x101C000
	0x033C1554 ADRP X19, 0xD6B000
	0x033C1558 LDRB W8, [X20 + 0x225]
	0x033C155C LDR X19, [X19 + 0x630]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x101D000
	007 Move W8, [X21+536]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD6C000
	015 Move X0, [X0+1448]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+536], W8
	019 Move X22, [X19+56]
	020 Compare X22, 0
	021 JumpIfEqual {41}
	022 Move X8, 0xD6C000
	023 Move X8, [X8+1448]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X1, X20
	027 Move X2, X31
	028 Move X21, X0
	029 Call AssemblyLoadEventArgs..ctor, X0, X1
	030 Move X4, [X22+24]
	031 Move X0, [X22+64]
	032 Move X3, [X22+40]
	033 Move X1, X19
	034 Move X2, X21
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 CallNoReturn X4
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Return 

Method: System.Reflection.Assembly DoAssemblyResolve(System.String name, System.Reflection.Assembly requestingAssembly, System.Boolean refonly)

Disassembly:
	0x033C1560 TBNZ X8, 0x0, 0x33C1578
	0x033C1564 ADRP X0, 0xD6B000
	0x033C1568 LDR X0, [X0 + 0x630]
	0x033C156C BL 0x1C16CF4
	0x033C1570 MOVZ W8, 0x1
	0x033C1574 STRB W8, [X20 + 0x225]
	0x033C1578 LDR X8, [X19]
	0x033C157C LDR X8, [X8 + 0xB8]
	0x033C1580 LDR X0, [X8]
	0x033C1584 CBNZ X0, 0x33C15A4
	0x033C1588 BL 0x1C87E0C
	0x033C158C LDR X8, [X19]
	0x033C1590 LDR X8, [X8 + 0xB8]
	0x033C1594 STR X0, [X8]
	0x033C1598 LDR X8, [X19]
	0x033C159C LDR X8, [X8 + 0xB8]
	0x033C15A0 LDR X0, [X8]
	0x033C15A4 LDP X20, X19, [X31 + 0x10]
	0x033C15A8 LDR X30, [X31], #0x20
	0x033C15AC RET
	0x033C15B0 B 0x1C87BC4
	0x033C15B4 B 0x1C87E34
	0x033C15B8 STR X30, [X31 - 0x30]!
	0x033C15BC STP X22, X21, [X31 + 0x10]
	0x033C15C0 STP X20, X19, [X31 + 0x20]
	0x033C15C4 ADRP X19, 0x101C000
	0x033C15C8 ADRP X22, 0xD6B000
	0x033C15CC LDRB W8, [X19 + 0x226]
	0x033C15D0 LDR X22, [X22 + 0x630]
	0x033C15D4 TBNZ X8, 0x0, 0x33C15F8
	0x033C15D8 ADRP X0, 0xD6B000
	0x033C15DC LDR X0, [X0 + 0x630]
	0x033C15E0 BL 0x1C16CF4
	0x033C15E4 ADRP X0, 0xD6A000
	0x033C15E8 LDR X0, [X0 + 0x8D8]
	0x033C15EC BL 0x1C16CF4
	0x033C15F0 MOVZ W8, 0x1
	0x033C15F4 STRB W8, [X19 + 0x226]
	0x033C15F8 LDR X8, [X22]
	0x033C15FC LDR X8, [X8 + 0xB8]
	0x033C1600 LDR X19, [X8 + 0x8]
	0x033C1604 CBNZ X19, 0x33C1658
	0x033C1608 BL 0x1C87E34
	0x033C160C BL 0x33C166C
	0x033C1610 MOV X20, X0
	0x033C1614 BL 0x1C87BC4
	0x033C1618 ADRP X8, 0xD6A000
	0x033C161C LDR X8, [X8 + 0x8D8]
	0x033C1620 CMP W0, 0x6
	0x033C1624 MOVZ W9, 0x4
	0x033C1628 CSEL W21, W9, W0, EQ
	0x033C162C LDR X8, [X8]
	0x033C1630 MOV X0, X8
	0x033C1634 BL 0x1C16F10
	0x033C1638 MOV W1, W21
	0x033C163C MOV X2, X20
	0x033C1640 MOV X3, X31
	0x033C1644 MOV X19, X0
	0x033C1648 BL 0x339E8BC
	0x033C164C LDR X8, [X22]
	0x033C1650 LDR X8, [X8 + 0xB8]
	0x033C1654 STR X19, [X8 + 0x8]
	0x033C1658 MOV X0, X19
	0x033C165C LDP X20, X19, [X31 + 0x20]
	0x033C1660 LDP X22, X21, [X31 + 0x10]
	0x033C1664 LDR X30, [X31], #0x30
	0x033C1668 RET
	0x033C166C STP X29, X30, [X31 - 0x60]!
	0x033C1670 STP X28, X27, [X31 + 0x10]
	0x033C1674 STP X26, X25, [X31 + 0x20]
	0x033C1678 STP X24, X23, [X31 + 0x30]
	0x033C167C STP X22, X21, [X31 + 0x40]
	0x033C1680 STP X20, X19, [X31 + 0x50]
	0x033C1684 ADRP X19, 0x101C000
	0x033C1688 LDRB W8, [X19 + 0x227]
	0x033C168C MOV X22, X0
	0x033C1690 TBNZ X8, 0x0, 0x33C16B4
	0x033C1694 ADRP X0, 0xD34000
	0x033C1698 LDR X0, [X0 + 0x170]
	0x033C169C BL 0x1C16CF4
	0x033C16A0 ADRP X0, 0xD3A000
	0x033C16A4 LDR X0, [X0 + 0x7C0]
	0x033C16A8 BL 0x1C16CF4
	0x033C16AC MOVZ W8, 0x1
	0x033C16B0 STRB W8, [X19 + 0x227]
	0x033C16B4 ADRP X9, 0xD3A000
	0x033C16B8 LDR X9, [X9 + 0x7C0]
	0x033C16BC CBZ X22, 0x33C17D8
	0x033C16C0 LDR W8, [X22 + 0x10]
	0x033C16C4 CMP W8, 0x1
	0x033C16C8 B.LT 0x33C1804
	0x033C16CC ADRP X28, 0xD34000
	0x033C16D0 LDR X28, [X28 + 0x170]
	0x033C16D4 ADRP X25, 0xFFFFFFFFFD7D5000
	0x033C16D8 MOV W26, W31
	0x033C16DC MOV W20, W31
	0x033C16E0 MOV W19, W31
	0x033C16E4 MOV W23, W31
	0x033C16E8 MOVN W21, 0x0
	0x033C16EC MOVZ W27, 0x1
	0x033C16F0 MOVZ W29, 0xA
	0x033C16F4 ADD X25, X25, 0x900
	0x033C16F8 MOV X0, X22
	0x033C16FC MOV W1, W23
	0x033C1700 MOV X2, X31
	0x033C1704 BL 0x3222A1C
	0x033C1708 LDR X8, [X28]
	0x033C170C MOV W24, W0
	0x033C1710 LDR W9, [X8 + 0xE0]
	0x033C1714 CBNZ W9, 0x33C1720
	0x033C1718 MOV X0, X8
	0x033C171C BL 0x1C16DFC
	0x033C1720 MOV W0, W24
	0x033C1724 MOV X1, X31
	0x033C1728 BL 0x33141B4
	0x033C172C TBZ X0, 0x0, 0x33C1740
	0x033C1730 TBNZ X21, 0x1F, 0x33C1768
	0x033C1734 MUL W8, W21, W29
	0x033C1738 ADD W8, W8, W24, UXTH
	0x033C173C B 0x33C176C
	0x033C1740 TBNZ X21, 0x1F, 0x33C1788
	0x033C1744 SUB W8, W27, 0x1
	0x033C1748 CMP W8, 0x3
	0x033C174C B.HI 0x33C1778
	0x033C1750 ADR X9, 0x10
	0x033C1754 LDRB W10, [X25, X8, LSL]
	0x033C1758 ADD X9, X9, X10, 0x2, LSL
	0x033C175C BR X9
	0x033C1760 MOV W20, W21
	0x033C1764 B 0x33C1778
	0x033C1768 AND W8, W24, 0xFFFF
	0x033C176C SUB W21, W8, 0x30
	0x033C1770 B 0x33C1788
	0x033C1774 MOV W19, W21
	0x033C1778 MOV W21, W26
	0x033C177C ADD W27, W27, 0x1
	0x033C1780 MOV W26, W21
	0x033C1784 MOVN W21, 0x0
	0x033C1788 LDR W8, [X22 + 0x10]
	0x033C178C ADD W23, W23, 0x1
	0x033C1790 CMP W23, W8
	0x033C1794 B.LT 0x33C16F8
	0x033C1798 TBNZ X21, 0x1F, 0x33C1818
	0x033C179C SUB W8, W27, 0x1
	0x033C17A0 CMP W8, 0x3
	0x033C17A4 B.HI 0x33C1818
	0x033C17A8 ADRP X9, 0xFFFFFFFFFD7D5000
	0x033C17AC ADD X9, X9, 0x904
	0x033C17B0 ADR X10, 0x1C
	0x033C17B4 LDRB W11, [X9, X8, LSL]
	0x033C17B8 ADD X10, X10, X11, 0x2, LSL
	0x033C17BC ADRP X9, 0xD3A000
	0x033C17C0 LDR X9, [X9 + 0x7C0]
	0x033C17C4 MOV W22, W31
	0x033C17C8 BR X10
	0x033C17CC MOV W22, W31
	0x033C17D0 MOV W20, W21
	0x033C17D4 B 0x33C1824
	0x033C17D8 LDR X0, [X9]
	0x033C17DC BL 0x1C16F10
	0x033C17E0 MOV W1, W31
	0x033C17E4 MOV W2, W31
	0x033C17E8 MOV W3, W31
	0x033C17EC MOV W4, W31
	0x033C17F0 MOV X5, X31
	0x033C17F4 MOV X19, X0
	0x033C17F8 BL 0x339C05C
	0x033C17FC MOV X0, X19
	0x033C1800 B 0x33C1850
	0x033C1804 MOV W22, W31
	0x033C1808 MOV W19, W31
	0x033C180C MOV W20, W31
	0x033C1810 MOV W21, W31
	0x033C1814 B 0x33C1828
	0x033C1818 MOV W22, W31
	0x033C181C ADRP X9, 0xD3A000
	0x033C1820 LDR X9, [X9 + 0x7C0]
	0x033C1824 MOV W21, W26
	0x033C1828 LDR X0, [X9]
	0x033C182C BL 0x1C16F10
	0x033C1830 MOV W1, W21
	0x033C1834 MOV W2, W20
	0x033C1838 MOV W3, W19
	0x033C183C MOV W4, W22
	0x033C1840 MOV X5, X31
	0x033C1844 MOV X23, X0
	0x033C1848 BL 0x339C05C
	0x033C184C MOV X0, X23
	0x033C1850 LDP X20, X19, [X31 + 0x50]
	0x033C1854 LDP X22, X21, [X31 + 0x40]
	0x033C1858 LDP X24, X23, [X31 + 0x30]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X23, 0x101D000
	013 Move W8, [X23+537]
	014 Move W20, W3
	015 Move X21, X2
	016 Move X19, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {48}
	022 Move X0, 0xD6C000
	023 Move X0, [X0+1440]
	024 Call 0x1C17CF4
	025 Move X0, 0xD35000
	026 Move X0, [X0+544]
	027 Call 0x1C17CF4
	028 Move X0, 0xD34000
	029 Move X0, [X0+752]
	030 Call 0x1C17CF4
	031 Move X0, 0xD33000
	032 Move X0, [X0+1816]
	033 Call 0x1C17CF4
	034 Move X0, 0xD34000
	035 Move X0, [X0+592]
	036 Call 0x1C17CF4
	037 Move X0, 0xD33000
	038 Move X0, [X0+1824]
	039 Call 0x1C17CF4
	040 Move X0, 0xD6C000
	041 Move X0, [X0+1456]
	042 Call 0x1C17CF4
	043 Move X0, 0xD6C000
	044 Move X0, [X0+1464]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X23+537], W8
	048 And W31, W20, 1
	049 Move W8, 64
	050 Move W9, 128
	051 NotImplemented "Instruction CSEL not yet implemented."
	052 Move X23, [X22]
	053 Compare X23, 0
	054 JumpIfEqual {97}
	055 Move X24, 0xD6C000
	056 Move X24, [X24+1440]
	057 Move X0, [X24]
	058 Call 0x1C17D0C
	059 Move TEMP, X20
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {67}
	063 Move X20, [X0+16]
	064 Compare X20, 0
	065 JumpIfNotEqual {87}
	066 Move W25, 16
	067 Move X20, [X0+8]
	068 Compare X20, 0
	069 JumpIfNotEqual {87}
	070 Move W25, 8
	071 Move X8, 0xD33000
	072 Move X8, [X8+1824]
	073 Move X0, [X8]
	074 Call 0x1C17F10
	075 Move X8, 0xD33000
	076 Move X8, [X8+1816]
	077 Move X20, X0
	078 Move X1, [X8]
	079 Call Dictionary`2<Object, Object>..ctor, X0
	080 Move X0, [X24]
	081 Call 0x1C17D0C
	082 Move [X0], X20
	083 Move X0, [X24]
	084 Call 0x1C17D0C
	085 Compare X20, 0
	086 JumpIfEqual {177}
	087 Move X8, 0xD35000
	088 Move X8, [X8+544]
	089 Move X0, X20
	090 Move X1, X19
	091 Move X2, [X8]
	092 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {98}
	097 Move X24, X31
	098 Move X8, 0xD34000
	099 Move X8, [X8+592]
	100 Move X0, X20
	101 Move X1, X19
	102 Move X2, X31
	103 Move X3, [X8]
	104 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	105 Move X8, [X23]
	106 Move X9, [X8+472]
	107 Move X1, [X8+480]
	108 Move X0, X23
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move X23, X0
	111 Compare X0, 0
	112 JumpIfEqual {176}
	113 Move W8, [X23+24]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X27, 0xD6C000
	116 Move X28, 0xD6C000
	117 Move X27, [X27+1456]
	118 Move X28, [X28+1464]
	119 Move W26, W31
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Add X8, X23, W26
	122 Move X24, [X8+32]
	123 Move X0, [X27]
	124 Call 0x1C17F10
	125 Move X25, X0
	126 Move X1, X19
	127 Move X2, X21
	128 Move X3, X31
	129 Call ResolveEventArgs..ctor, X0, X1, X2
	130 Compare X24, 0
	131 JumpIfEqual {173}
	132 Move X1, [X28]
	133 Move X8, [X24]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X0, [X24+64]
	136 Move X8, [X24+24]
	137 Move X3, [X24+40]
	138 Move X1, X22
	139 Move X2, X25
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Move X24, X0
	142 Move X1, X31
	143 Move X2, X31
	144 Call Assembly.op_Inequality, X0, X1
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {153}
	149 Move W8, [X23+24]
	150 Add W26, W26, 1
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X24, X31
	153 Move X8, 0xD34000
	154 Move X8, [X8+752]
	155 Move X0, X20
	156 Move X1, X19
	157 Move X2, [X8]
	158 Call Dictionary`2<Object, Object>.Remove, X0, X1
	159 Move X0, X24
	160 Move X20, [X31+80]
	161 Move X19, [X31+88]
	162 Move X22, [X31+64]
	163 Move X21, [X31+72]
	164 Move X24, [X31+48]
	165 Move X23, [X31+56]
	166 Move X26, [X31+32]
	167 Move X25, [X31+40]
	168 Move X28, [X31+16]
	169 Move X27, [X31+24]
	170 Move X30, [X31+96]
	171 Return X0
	172 Call 0x1C17F28
	173 Call 0x1C17F20
	174 Move X0, X24
	175 Call 0x1C181E0
	176 Call 0x1C17F20
	177 Call 0x1C17F20
	178 Move X21, X0
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X0, X21
	181 Call 0x3EB2AD0
	182 Move X22, [X0]
	183 Call 0x3EB2AE0
	184 Move X8, 0xD34000
	185 Move X8, [X8+752]
	186 Move X0, X20
	187 Move X1, X19
	188 Move X2, [X8]
	189 Call Dictionary`2<Object, Object>.Remove, X0, X1
	190 Compare X22, 0
	191 JumpIfEqual {97}
	192 Move X0, X22
	193 Call 0x1C17F18
	194 Move X22, X31
	195 Move X21, X0
	196 Move X8, 0xD34000
	197 Move X8, [X8+752]
	198 Move X2, [X8]
	199 Move X0, X20
	200 Move X1, X19
	201 Call Dictionary`2<Object, Object>.Remove, X0, X1
	202 Compare X22, 0
	203 JumpIfNotEqual {206}
	204 Move X0, X21
	205 Call 0x1D2D690
	206 Move X0, X22
	207 Call 0x1C17F18
	208 Call 0x1991590

Method: System.Reflection.Assembly DoTypeResolve(System.String name)

Disassembly:
	0x033C185C LDP X26, X25, [X31 + 0x20]
	0x033C1860 LDP X28, X27, [X31 + 0x10]
	0x033C1864 LDP X29, X30, [X31], #0x60
	0x033C1868 RET
	0x033C186C MOV W22, W31
	0x033C1870 MOV W19, W21
	0x033C1874 B 0x33C1824
	0x033C1878 MOV W22, W21
	0x033C187C B 0x33C1824
	0x033C1880 MOV W22, W21
	0x033C1884 B 0x33C181C
	0x033C1888 STR X30, [X31 - 0x20]!
	0x033C188C STP X20, X19, [X31 + 0x10]
	0x033C1890 ADRP X19, 0x101C000
	0x033C1894 ADRP X20, 0xD64000
	0x033C1898 LDRB W8, [X19 + 0x228]
	0x033C189C LDR X20, [X20 + 0x808]
	0x033C18A0 TBNZ X8, 0x0, 0x33C18B8
	0x033C18A4 ADRP X0, 0xD64000
	0x033C18A8 LDR X0, [X0 + 0x808]
	0x033C18AC BL 0x1C16CF4
	0x033C18B0 MOVZ W8, 0x1
	0x033C18B4 STRB W8, [X19 + 0x228]
	0x033C18B8 LDR X0, [X20]
	0x033C18BC BL 0x1C16F10
	0x033C18C0 MOVZ W2, 0x1
	0x033C18C4 MOV W1, W31
	0x033C18C8 MOV X3, X31
	0x033C18CC MOV X19, X0
	0x033C18D0 BL 0x334E484
	0x033C18D4 CBZ X19, 0x33C18F0
	0x033C18D8 LDR X8, [X19]
	0x033C18DC MOV X0, X19
	0x033C18E0 LDP X20, X19, [X31 + 0x10]
	0x033C18E4 LDP X2, X1, [X8 + 0x168]
	0x033C18E8 LDR X30, [X31], #0x20
	0x033C18EC BR X2
	0x033C18F0 BL 0x1C16F20
	0x033C18F4 B 0x1C87BB8
	0x033C18F8 B 0x1C87BCC
	0x033C18FC B 0x1C87C38
	0x033C1900 B 0x1C88164
	0x033C1904 B 0x1C880C0
	0x033C1908 B 0x1C87F84
	0x033C190C SUB X31, X31, 0x30
	0x033C1910 STR X30, [X31 + 0x10]
	0x033C1914 STP X20, X19, [X31 + 0x20]
	0x033C1918 CBZ X0, 0x33C194C
	0x033C191C MOV X1, X31
	0x033C1920 BL 0x320B028
	0x033C1924 STP X0, X1, [X31]
	0x033C1928 ADD X0, X31, 0x0
	0x033C192C MOV X1, X31
	0x033C1930 BL 0x320B21C
	0x033C1934 BL 0x1C87F84
	0x033C1938 MOV X20, X0
	0x033C193C ADD X0, X31, 0x0
	0x033C1940 MOV X1, X31
	0x033C1944 BL 0x320B264
	0x033C1948 B 0x33C1950
	0x033C194C MOV X20, X31
	0x033C1950 MOV X0, X20
	0x033C1954 LDP X20, X19, [X31 + 0x20]
	0x033C1958 LDR X30, [X31 + 0x10]
	0x033C195C ADD X31, X31, 0x30
	0x033C1960 RET
	0x033C1964 B 0x33C1968
	0x033C1968 MOV X20, X0
	0x033C196C CMP W1, 0x1
	0x033C1970 B.NE 0x33C19A0
	0x033C1974 MOV X0, X20
	0x033C1978 BL 0x3EB1AD0
	0x033C197C LDR X19, [X0]
	0x033C1980 BL 0x3EB1AE0
	0x033C1984 ADD X0, X31, 0x0
	0x033C1988 MOV X1, X31
	0x033C198C BL 0x320B264
	0x033C1990 MOV X20, X31
	0x033C1994 CBZ X19, 0x33C1950
	0x033C1998 MOV X0, X19
	0x033C199C BL 0x1C16F18
	0x033C19A0 MOV X19, X31
	0x033C19A4 B 0x33C19AC
	0x033C19A8 MOV X20, X0
	0x033C19AC ADD X0, X31, 0x0
	0x033C19B0 MOV X1, X31
	0x033C19B4 BL 0x320B264
	0x033C19B8 CBNZ X19, 0x33C19C4
	0x033C19BC MOV X0, X20
	0x033C19C0 BL 0x1D2C690
	0x033C19C4 MOV X0, X19
	0x033C19C8 BL 0x1C16F18
	0x033C19CC BL 0x1990590
	0x033C19D0 B 0x33C190C
	0x033C19D4 MOV W1, W31
	0x033C19D8 B 0x33C19DC
	0x033C19DC STP X30, X19, [X31 - 0x10]!
	0x033C19E0 MOV W19, W0
	0x033C19E4 MOV X0, X31
	0x033C19E8 BL 0x324ABEC
	0x033C19EC BL 0x1C87BC4
	0x033C19F0 CMP W0, 0x3
	0x033C19F4 B.GT 0x33C1A04
	0x033C19F8 MOV W0, W19
	0x033C19FC LDP X30, X19, [X31], #0x10
	0x033C1A00 B 0x1C87EA0
	0x033C1A04 MOV W0, W19
	0x033C1A08 LDP X30, X19, [X31], #0x10
	0x033C1A0C B 0x33C1A2C
	0x033C1A10 B 0x1C87EA0
	0x033C1A14 STR X30, [X31 - 0x10]!
	0x033C1A18 BL 0x1C87BC4
	0x033C1A1C CMP W0, 0x4
	0x033C1A20 CSET W0, LT
	0x033C1A24 LDR X30, [X31], #0x10
	0x033C1A28 RET
	0x033C1A2C STP X30, X25, [X31 - 0x40]!
	0x033C1A30 STP X24, X23, [X31 + 0x10]
	0x033C1A34 STP X22, X21, [X31 + 0x20]
	0x033C1A38 STP X20, X19, [X31 + 0x30]
	0x033C1A3C ADRP X21, 0x101C000
	0x033C1A40 ADRP X19, 0xD6B000
	0x033C1A44 LDRB W8, [X21 + 0x22A]
	0x033C1A48 LDR X19, [X19 + 0x638]
	0x033C1A4C MOV W20, W0
	0x033C1A50 TBNZ X8, 0x0, 0x33C1B88
	0x033C1A54 ADRP X0, 0xD59000
	0x033C1A58 LDR X0, [X0 + 0x1D0]
	0x033C1A5C BL 0x1C16CF4
	0x033C1A60 ADRP X0, 0xD34000
	0x033C1A64 LDR X0, [X0 + 0x278]
	0x033C1A68 BL 0x1C16CF4
	0x033C1A6C ADRP X0, 0xD6B000
	0x033C1A70 LDR X0, [X0 + 0x640]
	0x033C1A74 BL 0x1C16CF4
	0x033C1A78 ADRP X0, 0xD6B000
	0x033C1A7C LDR X0, [X0 + 0x648]
	0x033C1A80 BL 0x1C16CF4
	0x033C1A84 ADRP X0, 0xD6B000
	0x033C1A88 LDR X0, [X0 + 0x650]
	0x033C1A8C BL 0x1C16CF4
	0x033C1A90 ADRP X0, 0xD6B000
	0x033C1A94 LDR X0, [X0 + 0x658]
	0x033C1A98 BL 0x1C16CF4
	0x033C1A9C ADRP X0, 0xD6B000
	0x033C1AA0 LDR X0, [X0 + 0x660]
	0x033C1AA4 BL 0x1C16CF4
	0x033C1AA8 ADRP X0, 0xD6B000
	0x033C1AAC LDR X0, [X0 + 0x668]
	0x033C1AB0 BL 0x1C16CF4
	0x033C1AB4 ADRP X0, 0xD66000
	0x033C1AB8 LDR X0, [X0 + 0x468]
	0x033C1ABC BL 0x1C16CF4
	0x033C1AC0 ADRP X0, 0xD6B000
	0x033C1AC4 LDR X0, [X0 + 0x670]
	0x033C1AC8 BL 0x1C16CF4
	0x033C1ACC ADRP X0, 0xD6B000
	0x033C1AD0 LDR X0, [X0 + 0x638]
	0x033C1AD4 BL 0x1C16CF4
	0x033C1AD8 ADRP X0, 0xD6B000
	0x033C1ADC LDR X0, [X0 + 0x678]
	0x033C1AE0 BL 0x1C16CF4
	0x033C1AE4 ADRP X0, 0xD6B000
	0x033C1AE8 LDR X0, [X0 + 0x680]
	0x033C1AEC BL 0x1C16CF4
	0x033C1AF0 ADRP X0, 0xD6B000
	0x033C1AF4 LDR X0, [X0 + 0x688]
	0x033C1AF8 BL 0x1C16CF4
	0x033C1AFC ADRP X0, 0xD6B000
	0x033C1B00 LDR X0, [X0 + 0x690]
	0x033C1B04 BL 0x1C16CF4
	0x033C1B08 ADRP X0, 0xD6B000
	0x033C1B0C LDR X0, [X0 + 0x698]
	0x033C1B10 BL 0x1C16CF4
	0x033C1B14 ADRP X0, 0xD6B000
	0x033C1B18 LDR X0, [X0 + 0x6A0]
	0x033C1B1C BL 0x1C16CF4
	0x033C1B20 ADRP X0, 0xD6B000
	0x033C1B24 LDR X0, [X0 + 0x6A8]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x101D000
	012 Move W8, [X20+538]
	013 Move X19, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {45}
	019 Move X0, 0xD6C000
	020 Move X0, [X0+1440]
	021 Call 0x1C17CF4
	022 Move X0, 0xD35000
	023 Move X0, [X0+544]
	024 Call 0x1C17CF4
	025 Move X0, 0xD34000
	026 Move X0, [X0+752]
	027 Call 0x1C17CF4
	028 Move X0, 0xD33000
	029 Move X0, [X0+1816]
	030 Call 0x1C17CF4
	031 Move X0, 0xD34000
	032 Move X0, [X0+592]
	033 Call 0x1C17CF4
	034 Move X0, 0xD33000
	035 Move X0, [X0+1824]
	036 Call 0x1C17CF4
	037 Move X0, 0xD6C000
	038 Move X0, [X0+1456]
	039 Call 0x1C17CF4
	040 Move X0, 0xD6C000
	041 Move X0, [X0+1464]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X20+538], W8
	045 Move X8, [X21+96]
	046 Compare X8, 0
	047 JumpIfEqual {81}
	048 Move X22, 0xD6C000
	049 Move X22, [X22+1440]
	050 Move X0, [X22]
	051 Call 0x1C17D0C
	052 Move X20, [X0]
	053 Compare X20, 0
	054 JumpIfNotEqual {71}
	055 Move X8, 0xD33000
	056 Move X8, [X8+1824]
	057 Move X0, [X8]
	058 Call 0x1C17F10
	059 Move X8, 0xD33000
	060 Move X8, [X8+1816]
	061 Move X20, X0
	062 Move X1, [X8]
	063 Call Dictionary`2<Object, Object>..ctor, X0
	064 Move X0, [X22]
	065 Call 0x1C17D0C
	066 Move [X0], X20
	067 Move X0, [X22]
	068 Call 0x1C17D0C
	069 Compare X20, 0
	070 JumpIfEqual {162}
	071 Move X8, 0xD35000
	072 Move X8, [X8+544]
	073 Move X0, X20
	074 Move X1, X19
	075 Move X2, [X8]
	076 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {82}
	081 Move X23, X31
	082 Move X8, 0xD34000
	083 Move X8, [X8+592]
	084 Move X0, X20
	085 Move X1, X19
	086 Move X2, X31
	087 Move X3, [X8]
	088 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	089 Move X0, [X21+96]
	090 Compare X0, 0
	091 JumpIfEqual {160}
	092 Move X8, [X0]
	093 Move X9, [X8+472]
	094 Move X1, [X8+480]
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move X22, X0
	097 Compare X0, 0
	098 JumpIfEqual {161}
	099 Move W8, [X22+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X26, 0xD6C000
	102 Move X27, 0xD6C000
	103 Move X26, [X26+1456]
	104 Move X27, [X27+1464]
	105 Move W25, W31
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Add X8, X22, W25
	108 Move X23, [X8+32]
	109 Move X0, [X26]
	110 Call 0x1C17F10
	111 Move X24, X0
	112 Move X1, X19
	113 Move X2, X31
	114 Call ResolveEventArgs..ctor, X0, X1
	115 Compare X23, 0
	116 JumpIfEqual {157}
	117 Move X1, [X27]
	118 Move X8, [X23]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X0, [X23+64]
	121 Move X8, [X23+24]
	122 Move X3, [X23+40]
	123 Move X1, X21
	124 Move X2, X24
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Move X23, X0
	127 Move X1, X31
	128 Move X2, X31
	129 Call Assembly.op_Inequality, X0, X1
	130 Move TEMP, X0
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfEqual {138}
	134 Move W8, [X22+24]
	135 Add W25, W25, 1
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X23, X31
	138 Move X8, 0xD34000
	139 Move X8, [X8+752]
	140 Move X0, X20
	141 Move X1, X19
	142 Move X2, [X8]
	143 Call Dictionary`2<Object, Object>.Remove, X0, X1
	144 Move X0, X23
	145 Move X20, [X31+64]
	146 Move X19, [X31+72]
	147 Move X22, [X31+48]
	148 Move X21, [X31+56]
	149 Move X24, [X31+32]
	150 Move X23, [X31+40]
	151 Move X26, [X31+16]
	152 Move X25, [X31+24]
	153 Move X30, [X31+80]
	154 Move X27, [X31+88]
	155 Return X0
	156 Call 0x1C17F28
	157 Call 0x1C17F20
	158 Move X0, X23
	159 Call 0x1C181E0
	160 Call 0x1C17F20
	161 Call 0x1C17F20
	162 Call 0x1C17F20
	163 Move X21, X0
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X0, X21
	166 Call 0x3EB2AD0
	167 Move X22, [X0]
	168 Call 0x3EB2AE0
	169 Move X8, 0xD34000
	170 Move X8, [X8+752]
	171 Move X0, X20
	172 Move X1, X19
	173 Move X2, [X8]
	174 Call Dictionary`2<Object, Object>.Remove, X0, X1
	175 Compare X22, 0
	176 JumpIfEqual {81}
	177 Move X0, X22
	178 Call 0x1C17F18
	179 Move X22, X31
	180 Move X21, X0
	181 Move X8, 0xD34000
	182 Move X8, [X8+752]
	183 Move X2, [X8]
	184 Move X0, X20
	185 Move X1, X19
	186 Call Dictionary`2<Object, Object>.Remove, X0, X1
	187 Compare X22, 0
	188 JumpIfNotEqual {191}
	189 Move X0, X21
	190 Call 0x1D2D690
	191 Move X0, X22
	192 Call 0x1C17F18
	193 Call 0x1991590

Method: System.Void DoDomainUnload()

Disassembly:
	0x033C1B28 BL 0x1C16CF4
	0x033C1B2C ADRP X0, 0xD6B000
	0x033C1B30 LDR X0, [X0 + 0x6B0]
	0x033C1B34 BL 0x1C16CF4
	0x033C1B38 ADRP X0, 0xD6B000
	0x033C1B3C LDR X0, [X0 + 0x6B8]
	0x033C1B40 BL 0x1C16CF4
	0x033C1B44 ADRP X0, 0xD6B000
	0x033C1B48 LDR X0, [X0 + 0x6C0]

ISIL:
	001 Move X8, [X0+72]
	002 Compare X8, 0
	003 JumpIfEqual {10}
	004 Move X1, X0
	005 Move X4, [X8+24]
	006 Move X0, [X8+64]
	007 Move X3, [X8+40]
	008 Move X2, X31
	009 CallNoReturn X4
	010 Return 

Method: System.Byte[] GetMarshalledDomainObjRef()

Disassembly:
	0x033C1B4C BL 0x1C16CF4
	0x033C1B50 ADRP X0, 0xD6B000
	0x033C1B54 LDR X0, [X0 + 0x6C8]
	0x033C1B58 BL 0x1C16CF4
	0x033C1B5C ADRP X0, 0xD6B000
	0x033C1B60 LDR X0, [X0 + 0x6D0]
	0x033C1B64 BL 0x1C16CF4
	0x033C1B68 ADRP X0, 0xD5A000
	0x033C1B6C LDR X0, [X0 + 0x578]
	0x033C1B70 BL 0x1C16CF4
	0x033C1B74 ADRP X0, 0xD6B000
	0x033C1B78 LDR X0, [X0 + 0x6D8]
	0x033C1B7C BL 0x1C16CF4
	0x033C1B80 MOVZ W8, 0x1
	0x033C1B84 STRB W8, [X21 + 0x22A]
	0x033C1B88 ADRP X24, 0xD34000
	0x033C1B8C ADRP X21, 0xD6B000
	0x033C1B90 ADRP X23, 0xD59000
	0x033C1B94 LDR X24, [X24 + 0x278]
	0x033C1B98 LDR X21, [X21 + 0x6B8]
	0x033C1B9C LDR X23, [X23 + 0x1D0]
	0x033C1BA0 BL 0x1C88054
	0x033C1BA4 LDR X8, [X19]
	0x033C1BA8 MOV X19, X0
	0x033C1BAC MOV X0, X8
	0x033C1BB0 BL 0x33C190C
	0x033C1BB4 CBZ X0, 0x33C1BD4
	0x033C1BB8 LDR X8, [X24]
	0x033C1BBC MOV X2, X31
	0x033C1BC0 MOV X22, X0
	0x033C1BC4 LDR X8, [X8 + 0xB8]
	0x033C1BC8 LDR X1, [X8]
	0x033C1BCC BL 0x321BA08
	0x033C1BD0 TBZ X0, 0x0, 0x33C1C14
	0x033C1BD4 LDR X0, [X23]
	0x033C1BD8 ADRP X25, 0xD6B000
	0x033C1BDC ADRP X22, 0xD66000
	0x033C1BE0 LDR W8, [X0 + 0xE0]
	0x033C1BE4 LDR X25, [X25 + 0x6B0]
	0x033C1BE8 LDR X22, [X22 + 0x468]
	0x033C1BEC CBNZ W8, 0x33C1BF4
	0x033C1BF0 BL 0x1C16DFC
	0x033C1BF4 LDR X1, [X25]
	0x033C1BF8 MOV X0, X19
	0x033C1BFC MOV X2, X31
	0x033C1C00 BL 0x32FCE04
	0x033C1C04 LDR X1, [X22]
	0x033C1C08 MOV X2, X31
	0x033C1C0C BL 0x32FCE04
	0x033C1C10 MOV X22, X0
	0x033C1C14 LDR X0, [X21]
	0x033C1C18 BL 0x33C190C
	0x033C1C1C CBZ X0, 0x33C1C3C
	0x033C1C20 LDR X8, [X24]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x101D000
	006 Move X19, 0xD6C000
	007 Move X20, 0xD33000
	008 Move W8, [X21+539]
	009 Move X19, [X19+1472]
	010 Move X20, [X20+1728]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xD6C000
	016 Move X0, [X0+1472]
	017 Call 0x1C17CF4
	018 Move X0, 0xD63000
	019 Move X0, [X0+3688]
	020 Call 0x1C17CF4
	021 Move X0, 0xD33000
	022 Move X0, [X0+1728]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+539], W8
	026 Move X21, 0xD63000
	027 Move X21, [X21+3688]
	028 Call 0x1C253A8
	029 Move X8, [X20]
	030 Move X20, [X19]
	031 Move X19, X0
	032 Move W9, [X8+224]
	033 Compare W9, 0
	034 JumpIfNotEqual {37}
	035 Move X0, X8
	036 Call 0x1C17DFC
	037 Move X0, X20
	038 Move X1, X31
	039 Call Type.GetTypeFromHandle, X0
	040 Move X8, [X21]
	041 Move X20, X0
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X0, X19
	048 Move X1, X31
	049 Move X2, X20
	050 Move X3, X31
	051 Call RemotingServices.Marshal, X0, X1, X2
	052 Move X1, X31
	053 Call CADSerializer.SerializeObject, X0
	054 Compare X0, 0
	055 JumpIfEqual {64}
	056 Move X8, [X0]
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X2, [X8+952]
	060 Move X1, [X8+960]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 CallNoReturn X2
	064 Call 0x1C17F20

Method: System.Void ProcessMessageInDomain(System.Byte[] arrRequest, System.Runtime.Remoting.Messaging.CADMethodCallMessage cadMsg, out System.Byte[] arrResponse, out System.Runtime.Remoting.Messaging.CADMethodReturnMessage cadMrm)

Disassembly:
	0x033C1C24 MOV X2, X31
	0x033C1C28 MOV X21, X0
	0x033C1C2C LDR X8, [X8 + 0xB8]
	0x033C1C30 LDR X1, [X8]
	0x033C1C34 BL 0x321BA08
	0x033C1C38 TBZ X0, 0x0, 0x33C1C68
	0x033C1C3C LDR X0, [X23]
	0x033C1C40 ADRP X21, 0xD6B000
	0x033C1C44 LDR W8, [X0 + 0xE0]
	0x033C1C48 LDR X21, [X21 + 0x670]
	0x033C1C4C CBNZ W8, 0x33C1C54
	0x033C1C50 BL 0x1C16DFC
	0x033C1C54 LDR X1, [X21]
	0x033C1C58 MOV X0, X19
	0x033C1C5C MOV X2, X31
	0x033C1C60 BL 0x32FCE04
	0x033C1C64 MOV X21, X0
	0x033C1C68 CMP W20, 0x3B
	0x033C1C6C B.HI 0x33C1EA4
	0x033C1C70 ADRP X9, 0xFFFFFFFFFD7D5000
	0x033C1C74 MOV W8, W20
	0x033C1C78 ADD X9, X9, 0x908
	0x033C1C7C ADR X10, 0x10
	0x033C1C80 LDRB W11, [X9, X8, LSL]
	0x033C1C84 ADD X10, X10, X11, 0x2, LSL
	0x033C1C88 BR X10
	0x033C1C8C LDR X8, [X24]
	0x033C1C90 LDR X8, [X8 + 0xB8]
	0x033C1C94 LDR X21, [X8]
	0x033C1C98 MOV X0, X21
	0x033C1C9C LDP X20, X19, [X31 + 0x30]
	0x033C1CA0 LDP X22, X21, [X31 + 0x20]
	0x033C1CA4 LDP X24, X23, [X31 + 0x10]
	0x033C1CA8 LDP X30, X25, [X31], #0x40
	0x033C1CAC RET
	0x033C1CB0 ADRP X8, 0xD6B000
	0x033C1CB4 ADRP X9, 0xD5A000
	0x033C1CB8 LDR X8, [X8 + 0x6D0]
	0x033C1CBC LDR X9, [X9 + 0x578]
	0x033C1CC0 B 0x33C1E80
	0x033C1CC4 MOV X21, X19
	0x033C1CC8 B 0x33C1C98
	0x033C1CCC BL 0x1C87BC4
	0x033C1CD0 CMP W0, 0x6
	0x033C1CD4 B.NE 0x33C1C8C
	0x033C1CD8 LDR X0, [X23]
	0x033C1CDC LDR W8, [X0 + 0xE0]
	0x033C1CE0 CBNZ W8, 0x33C1CE8
	0x033C1CE4 BL 0x1C16DFC
	0x033C1CE8 ADRP X8, 0xD6B000
	0x033C1CEC ADRP X9, 0xD6B000
	0x033C1CF0 LDR X8, [X8 + 0x640]
	0x033C1CF4 LDR X9, [X9 + 0x698]
	0x033C1CF8 B 0x33C1DB8
	0x033C1CFC BL 0x1C87BC4
	0x033C1D00 CMP W0, 0x6
	0x033C1D04 B.NE 0x33C1E34
	0x033C1D08 LDR X0, [X23]
	0x033C1D0C LDR W8, [X0 + 0xE0]
	0x033C1D10 CBNZ W8, 0x33C1D18
	0x033C1D14 BL 0x1C16DFC
	0x033C1D18 ADRP X8, 0xD6B000
	0x033C1D1C LDR X8, [X8 + 0x6A8]
	0x033C1D20 B 0x33C1E50
	0x033C1D24 ADRP X8, 0xD6B000
	0x033C1D28 ADRP X9, 0xD6B000
	0x033C1D2C LDR X8, [X8 + 0x6C8]
	0x033C1D30 LDR X9, [X9 + 0x678]
	0x033C1D34 B 0x33C1E80
	0x033C1D38 BL 0x1C87BC4
	0x033C1D3C LDR X8, [X23]
	0x033C1D40 MOV W20, W0
	0x033C1D44 LDR W9, [X8 + 0xE0]
	0x033C1D48 CBNZ W9, 0x33C1D54

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x101D000
	008 Move W8, [X23+540]
	009 Move X20, X4
	010 Move X19, X3
	011 Move X21, X2
	012 Move X22, X1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xD63000
	018 Move X0, [X0+3336]
	019 Call 0x1C17CF4
	020 Move X0, 0xD3B000
	021 Move X0, [X0+1368]
	022 Call 0x1C17CF4
	023 Move X0, 0xD6C000
	024 Move X0, [X0+1480]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+540], W8
	028 Move X23, 0xD63000
	029 Move X23, [X23+3336]
	030 Compare X22, 0
	031 JumpIfEqual {45}
	032 Move X8, 0xD3B000
	033 Move X8, [X8+1368]
	034 Move X0, [X8]
	035 Call 0x1C17F10
	036 Move X1, X22
	037 Move X2, X31
	038 Move X21, X0
	039 Call MemoryStream..ctor, X0, X1
	040 Move X0, X21
	041 Move X1, X31
	042 Move X2, X31
	043 Call CADSerializer.DeserializeMessage, X0, X1
	044 Move X22, X0
	045 Move X8, 0xD6C000
	046 Move X8, [X8+1480]
	047 Move X0, [X8]
	048 Call 0x1C17F10
	049 Move X1, X21
	050 Move X2, X31
	051 Move X22, X0
	052 Call MethodCall..ctor, X0, X1
	053 Move X0, [X23]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, X22
	059 Move X1, X31
	060 Call ChannelServices.SyncDispatchMessage, X0
	061 Move X1, X31
	062 Move X21, X0
	063 Call CADMethodReturnMessage.Create, X0
	064 Move X8, X0
	065 Move X0, X31
	066 Move [X20], X8
	067 Compare X8, 0
	068 JumpIfNotEqual {78}
	069 Move X0, X21
	070 Move X1, X31
	071 Call CADSerializer.SerializeMessage, X0
	072 Compare X0, 0
	073 JumpIfEqual {86}
	074 Move X8, [X0]
	075 Move X9, [X8+952]
	076 Move X1, [X8+960]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move [X19], X0
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X22, [X31+16]
	082 Move X21, [X31+24]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 
	086 Call 0x1C17F20

Method: System.Void add_AssemblyResolve(System.ResolveEventHandler value)

Disassembly:
	0x033C1D4C MOV X0, X8
	0x033C1D50 BL 0x1C16DFC
	0x033C1D54 CMP W20, 0x6
	0x033C1D58 B.NE 0x33C1E48
	0x033C1D5C ADRP X8, 0xD6B000
	0x033C1D60 ADRP X9, 0xD6B000
	0x033C1D64 LDR X8, [X8 + 0x640]
	0x033C1D68 LDR X9, [X9 + 0x690]
	0x033C1D6C B 0x33C1DB8
	0x033C1D70 ADRP X8, 0xD6B000
	0x033C1D74 ADRP X9, 0xD6B000
	0x033C1D78 LDR X8, [X8 + 0x658]
	0x033C1D7C LDR X9, [X9 + 0x688]
	0x033C1D80 B 0x33C1E80
	0x033C1D84 MOV X21, X22
	0x033C1D88 B 0x33C1C98
	0x033C1D8C BL 0x1C87BC4
	0x033C1D90 CMP W0, 0x6
	0x033C1D94 B.NE 0x33C1C8C
	0x033C1D98 LDR X0, [X23]
	0x033C1D9C LDR W8, [X0 + 0xE0]
	0x033C1DA0 CBNZ W8, 0x33C1DA8
	0x033C1DA4 BL 0x1C16DFC
	0x033C1DA8 ADRP X8, 0xD6B000
	0x033C1DAC ADRP X9, 0xD6B000
	0x033C1DB0 LDR X8, [X8 + 0x640]
	0x033C1DB4 LDR X9, [X9 + 0x6D8]
	0x033C1DB8 LDR X1, [X8]
	0x033C1DBC LDR X2, [X9]
	0x033C1DC0 MOV X0, X19
	0x033C1DC4 LDP X20, X19, [X31 + 0x30]
	0x033C1DC8 LDP X22, X21, [X31 + 0x20]
	0x033C1DCC LDP X24, X23, [X31 + 0x10]
	0x033C1DD0 MOV X3, X31
	0x033C1DD4 LDP X30, X25, [X31], #0x40
	0x033C1DD8 B 0x32FE7B4
	0x033C1DDC ADRP X8, 0xD6B000
	0x033C1DE0 LDR X8, [X8 + 0x668]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x101D000
	007 Move W8, [X21+541]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD6C000
	015 Move X0, [X0+1464]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+541], W8
	019 Move X22, 0xD6C000
	020 Add X20, X20, 64
	021 Move X21, [X20]
	022 Move X22, [X22+1464]
	023 Move X0, X21
	024 Move X1, X19
	025 Call Delegate.Combine, X0, X1
	026 Move X8, X0
	027 Compare X0, 0
	028 JumpIfEqual {32}
	029 Move X1, [X22]
	030 Move X9, [X8]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X0, X20
	033 Move X1, X8
	034 Move X2, X21
	035 Call 0x1C25138
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X21, X0
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return 
	044 Move X0, X8
	045 Call 0x1C181E0

Method: System.Void remove_AssemblyResolve(System.ResolveEventHandler value)

Disassembly:
	0x033C1F44 BL 0x1C16CF4
	0x033C1F48 ADRP X0, 0xD6B000
	0x033C1F4C LDR X0, [X0 + 0x6F0]
	0x033C1F50 BL 0x1C16CF4
	0x033C1F54 ADRP X0, 0xD6B000
	0x033C1F58 LDR X0, [X0 + 0x6F8]
	0x033C1F5C BL 0x1C16CF4
	0x033C1F60 ADRP X0, 0xD33000
	0x033C1F64 LDR X0, [X0 + 0xEC8]
	0x033C1F68 BL 0x1C16CF4
	0x033C1F6C MOVZ W8, 0x1
	0x033C1F70 STRB W8, [X23 + 0x229]
	0x033C1F74 MOV X0, X22
	0x033C1F78 BL 0x33C190C
	0x033C1F7C CBZ X0, 0x33C1FA4
	0x033C1F80 ADRP X8, 0xD34000
	0x033C1F84 LDR X8, [X8 + 0x278]
	0x033C1F88 MOV X2, X31
	0x033C1F8C MOV X23, X0
	0x033C1F90 LDR X8, [X8]
	0x033C1F94 LDR X8, [X8 + 0xB8]
	0x033C1F98 LDR X1, [X8]
	0x033C1F9C BL 0x3226EF8
	0x033C1FA0 TBNZ X0, 0x0, 0x33C21C4
	0x033C1FA4 ADRP X25, 0xD59000
	0x033C1FA8 LDR X25, [X25 + 0x1D0]
	0x033C1FAC ADRP X23, 0xD6B000
	0x033C1FB0 LDR X0, [X25]
	0x033C1FB4 LDR W8, [X0 + 0xE0]
	0x033C1FB8 LDR X23, [X23 + 0x6F8]
	0x033C1FBC CBNZ W8, 0x33C1FC4
	0x033C1FC0 BL 0x1C16DFC
	0x033C1FC4 LDR X1, [X23]
	0x033C1FC8 MOV X0, X21
	0x033C1FCC MOV X2, X31
	0x033C1FD0 BL 0x32FCE04
	0x033C1FD4 MOV X1, X31
	0x033C1FD8 MOV X23, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x101D000
	007 Move W8, [X21+542]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD6C000
	015 Move X0, [X0+1464]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+542], W8
	019 Move X22, 0xD6C000
	020 Add X20, X20, 64
	021 Move X21, [X20]
	022 Move X22, [X22+1464]
	023 Move X0, X21
	024 Move X1, X19
	025 Call Delegate.Remove, X0, X1
	026 Move X8, X0
	027 Compare X0, 0
	028 JumpIfEqual {32}
	029 Move X1, [X22]
	030 Move X9, [X8]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X0, X20
	033 Move X1, X8
	034 Move X2, X21
	035 Call 0x1C25138
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X21, X0
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return 
	044 Move X0, X8
	045 Call 0x1C181E0

Method: System.Void add_DomainUnload(System.EventHandler value)

Disassembly:
	0x033C2138 CBZ X9, 0x33C215C
	0x033C213C LDR X10, [X8 + 0xB0]
	0x033C2140 ADD X10, X10, 0x8
	0x033C2144 LDUR X11, [X10 - 0x8]
	0x033C2148 CMP X11, X1
	0x033C214C B.EQ 0x33C216C
	0x033C2150 SUBS X9, X9, 0x1
	0x033C2154 ADD X10, X10, 0x10
	0x033C2158 B.NE 0x33C2144
	0x033C215C MOV X0, X21
	0x033C2160 MOV W2, W31
	0x033C2164 BL 0x1C5C788
	0x033C2168 B 0x33C2178
	0x033C216C LDRSW X9, [X10]
	0x033C2170 ADD X8, X8, X9, 0x4, LSL
	0x033C2174 ADD X0, X8, 0x138
	0x033C2178 LDP X8, X1, [X0]
	0x033C217C MOV X0, X21
	0x033C2180 BLR X8
	0x033C2184 CBNZ X22, 0x33C21E4
	0x033C2188 CBZ W24, 0x33C2194
	0x033C218C CMP W24, 0xB
	0x033C2190 B.NE 0x33C21C4
	0x033C2194 LDR X0, [X25]
	0x033C2198 LDR W8, [X0 + 0xE0]
	0x033C219C CBNZ W8, 0x33C21A4
	0x033C21A0 BL 0x1C16DFC
	0x033C21A4 MOV X0, X20
	0x033C21A8 MOV X1, X19
	0x033C21AC LDP X20, X19, [X31 + 0x30]
	0x033C21B0 LDP X22, X21, [X31 + 0x20]
	0x033C21B4 LDP X24, X23, [X31 + 0x10]
	0x033C21B8 MOV X2, X31
	0x033C21BC LDP X30, X25, [X31], #0x40
	0x033C21C0 B 0x32FCE04
	0x033C21C4 MOV X0, X23
	0x033C21C8 LDP X20, X19, [X31 + 0x30]
	0x033C21CC LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x101C000
	007 Move W8, [X21+543]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD6B000
	015 Move X0, [X0+1512]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+543], W8
	019 Move X22, 0xD6B000
	020 Add X20, X20, 72
	021 Move X21, [X20]
	022 Move X22, [X22+1512]
	023 Move X0, X21
	024 Move X1, X19
	025 Call Delegate.Combine, X0, X1
	026 Move X8, X0
	027 Compare X0, 0
	028 JumpIfEqual {32}
	029 Move X1, [X22]
	030 Move X9, [X8]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X0, X20
	033 Move X1, X8
	034 Move X2, X21
	035 Call 0x1C25138
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X21, X0
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return 
	044 Move X0, X8
	045 Call 0x1C181E0

Method: System.Void remove_DomainUnload(System.EventHandler value)

Disassembly:
	0x033C21D0 LDP X24, X23, [X31 + 0x10]
	0x033C21D4 LDP X30, X25, [X31], #0x40
	0x033C21D8 RET
	0x033C21DC BL 0x1C16F20
	0x033C21E0 BL 0x1C16F20
	0x033C21E4 MOV X0, X22
	0x033C21E8 BL 0x1C16F18
	0x033C21EC BL 0x1C16F20
	0x033C21F0 BL 0x1C16F20
	0x033C21F4 B 0x33C223C
	0x033C21F8 B 0x33C223C
	0x033C21FC B 0x33C223C
	0x033C2200 B 0x33C223C
	0x033C2204 B 0x33C223C
	0x033C2208 B 0x33C223C
	0x033C220C B 0x33C223C
	0x033C2210 B 0x33C223C
	0x033C2214 B 0x33C223C
	0x033C2218 B 0x33C221C
	0x033C221C MOV X24, X1
	0x033C2220 MOV X23, X0
	0x033C2224 B 0x33C22D8
	0x033C2228 B 0x33C223C
	0x033C222C B 0x33C223C
	0x033C2230 B 0x33C223C
	0x033C2234 B 0x33C223C
	0x033C2238 B 0x33C223C
	0x033C223C MOV X24, X1
	0x033C2240 MOV X23, X0
	0x033C2244 CMP W24, 0x1
	0x033C2248 B.NE 0x33C226C
	0x033C224C MOV X0, X23
	0x033C2250 BL 0x3EB1AD0
	0x033C2254 LDR X22, [X0]
	0x033C2258 BL 0x3EB1AE0
	0x033C225C MOV W24, W31
	0x033C2260 MOV X23, X31
	0x033C2264 CBNZ X21, 0x33C2124

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x101C000
	007 Move W8, [X21+544]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD6B000
	015 Move X0, [X0+1512]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+544], W8
	019 Move X22, 0xD6B000
	020 Add X20, X20, 72
	021 Move X21, [X20]
	022 Move X22, [X22+1512]
	023 Move X0, X21
	024 Move X1, X19
	025 Call Delegate.Remove, X0, X1
	026 Move X8, X0
	027 Compare X0, 0
	028 JumpIfEqual {32}
	029 Move X1, [X22]
	030 Move X9, [X8]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X0, X20
	033 Move X1, X8
	034 Move X2, X21
	035 Call 0x1C25138
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X21, X0
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return 
	044 Move X0, X8
	045 Call 0x1C181E0

Method: System.Void add_UnhandledException(System.UnhandledExceptionEventHandler value)

Disassembly:
	0x033C2268 B 0x33C2184
	0x033C226C MOV X22, X31
	0x033C2270 CBZ X21, 0x33C22D4
	0x033C2274 ADRP X10, 0xD31000
	0x033C2278 LDR X8, [X21]
	0x033C227C LDR X10, [X10 + 0xE00]
	0x033C2280 LDRH W9, [X8 + 0x12E]
	0x033C2284 LDR X1, [X10]
	0x033C2288 CBZ X9, 0x33C22AC
	0x033C228C LDR X10, [X8 + 0xB0]
	0x033C2290 ADD X10, X10, 0x8
	0x033C2294 LDUR X11, [X10 - 0x8]
	0x033C2298 CMP X11, X1
	0x033C229C B.EQ 0x33C22BC
	0x033C22A0 SUBS X9, X9, 0x1
	0x033C22A4 ADD X10, X10, 0x10
	0x033C22A8 B.NE 0x33C2294
	0x033C22AC MOV X0, X21
	0x033C22B0 MOV W2, W31
	0x033C22B4 BL 0x1C5C788
	0x033C22B8 B 0x33C22C8
	0x033C22BC LDRSW X9, [X10]
	0x033C22C0 ADD X8, X8, X9, 0x4, LSL
	0x033C22C4 ADD X0, X8, 0x138
	0x033C22C8 LDP X8, X1, [X0]
	0x033C22CC MOV X0, X21
	0x033C22D0 BLR X8
	0x033C22D4 CBNZ X22, 0x33C2330
	0x033C22D8 CMP W24, 0x1
	0x033C22DC B.NE 0x33C2350
	0x033C22E0 MOV X0, X23
	0x033C22E4 BL 0x3EB1AD0
	0x033C22E8 MOV X21, X0
	0x033C22EC ADRP X0, 0xD37000
	0x033C22F0 LDR X0, [X0 + 0xCC0]
	0x033C22F4 BL 0x1C16D08
	0x033C22F8 LDR X8, [X21]
	0x033C22FC LDR X1, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x101C000
	007 Move W8, [X21+545]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD6B000
	015 Move X0, [X0+1520]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+545], W8
	019 Move X22, 0xD6B000
	020 Add X20, X20, 104
	021 Move X21, [X20]
	022 Move X22, [X22+1520]
	023 Move X0, X21
	024 Move X1, X19
	025 Call Delegate.Combine, X0, X1
	026 Move X8, X0
	027 Compare X0, 0
	028 JumpIfEqual {32}
	029 Move X1, [X22]
	030 Move X9, [X8]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X0, X20
	033 Move X1, X8
	034 Move X2, X21
	035 Call 0x1C25138
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X21, X0
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return 
	044 Move X0, X8
	045 Call 0x1C181E0

Method: System.Void remove_UnhandledException(System.UnhandledExceptionEventHandler value)

Disassembly:
	0x033C2300 BL 0x1C17270
	0x033C2304 TBZ X0, 0x0, 0x33C2310
	0x033C2308 BL 0x3EB1AE0
	0x033C230C B 0x33C2194
	0x033C2310 MOVZ W0, 0x8
	0x033C2314 BL 0x3EB1AF0
	0x033C2318 LDR X8, [X21]
	0x033C231C STR X8, [X0]
	0x033C2320 ADRP X1, 0xAF2000
	0x033C2324 ADD X1, X1, 0xE58
	0x033C2328 MOV X2, X31
	0x033C232C BL 0x3EB1B00
	0x033C2330 MOV X0, X22
	0x033C2334 BL 0x1C16F18
	0x033C2338 MOV X24, X1
	0x033C233C MOV X23, X0
	0x033C2340 CBNZ X21, 0x33C2274
	0x033C2344 B 0x33C22D4
	0x033C2348 MOV X23, X0
	0x033C234C BL 0x3EB1AE0
	0x033C2350 MOV X0, X23
	0x033C2354 BL 0x1D2C690
	0x033C2358 BL 0x1990590
	0x033C235C B 0x1C88054
	0x033C2360 MOV X2, X31
	0x033C2364 B 0x1C88180
	0x033C2368 B 0x1C88180
	0x033C236C B 0x1C87BB4
	0x033C2370 B 0x1C87CA4
	0x033C2374 B 0x1C87BBC
	0x033C2378 STR X30, [X31 - 0x10]!
	0x033C237C BL 0x1C87BC4
	0x033C2380 CMP W0, 0x4
	0x033C2384 B.NE 0x33C2394
	0x033C2388 MOVZ W0, 0x1
	0x033C238C LDR X30, [X31], #0x10
	0x033C2390 RET
	0x033C2394 CMP W0, 0x80

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x101C000
	007 Move W8, [X21+546]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD6B000
	015 Move X0, [X0+1520]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+546], W8
	019 Move X22, 0xD6B000
	020 Add X20, X20, 104
	021 Move X21, [X20]
	022 Move X22, [X22+1520]
	023 Move X0, X21
	024 Move X1, X19
	025 Call Delegate.Remove, X0, X1
	026 Move X8, X0
	027 Compare X0, 0
	028 JumpIfEqual {32}
	029 Move X1, [X22]
	030 Move X9, [X8]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X0, X20
	033 Move X1, X8
	034 Move X2, X21
	035 Call 0x1C25138
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X21, X0
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return 
	044 Move X0, X8
	045 Call 0x1C181E0

