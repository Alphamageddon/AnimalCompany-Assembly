Type: System.ResolveEventArgs

Method: System.Void .ctor(System.String name)

Disassembly:
	0x0338FC44 CMP W9, W8
	0x0338FC48 CSINV W0, W31, W31, CS
	0x0338FC4C B 0x338FC5C
	0x0338FC50 MOVZ W0, 0x1
	0x0338FC54 B 0x338FC5C
	0x0338FC58 MOVN W0, 0x0
	0x0338FC5C LDP X20, X19, [X31 + 0x10]
	0x0338FC60 LDP X30, X21, [X31], #0x20
	0x0338FC64 RET
	0x0338FC68 MOV W0, W31
	0x0338FC6C B 0x338FC5C
	0x0338FC70 ADRP X0, 0xD6C000
	0x0338FC74 LDR X0, [X0 + 0x578]
	0x0338FC78 BL 0x1C16D08
	0x0338FC7C BL 0x1C16F10
	0x0338FC80 MOV X19, X0
	0x0338FC84 ADRP X0, 0xD9C000
	0x0338FC88 LDR X0, [X0 + 0x260]
	0x0338FC8C BL 0x1C16D08
	0x0338FC90 MOV X1, X0
	0x0338FC94 MOV X0, X19
	0x0338FC98 MOV X2, X31
	0x0338FC9C BL 0x3314A68
	0x0338FCA0 ADRP X0, 0xD9C000
	0x0338FCA4 LDR X0, [X0 + 0x268]
	0x0338FCA8 BL 0x1C16D08
	0x0338FCAC MOV X1, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x104F000
	007 Move X22, 0xD91000
	008 Move W8, [X21+33]
	009 Move X22, [X22+344]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD91000
	017 Move X0, [X0+344]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+33], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X31
	028 Call EventArgs..ctor, X0
	029 Move [X20+16], X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Return 

Method: System.Void .ctor(System.String name, System.Reflection.Assembly requestingAssembly)

Disassembly:
	0x0338FCB0 MOV X0, X19
	0x0338FCB4 BL 0x1C16DEC
	0x0338FCB8 LDR V1, [X0]
	0x0338FCBC FCMP S1, S0
	0x0338FCC0 B.PL 0x338FCCC
	0x0338FCC4 MOVN W0, 0x0
	0x0338FCC8 RET
	0x0338FCCC B.LE 0x338FCD8
	0x0338FCD0 MOVZ W0, 0x1
	0x0338FCD4 RET
	0x0338FCD8 FCMP S1, S0
	0x0338FCDC B.NE 0x338FCE8
	0x0338FCE0 MOV W0, W31
	0x0338FCE4 RET
	0x0338FCE8 FMOV W8, S1
	0x0338FCEC AND W9, W8, 0x7FFFFFFF
	0x0338FCF0 MOVZ W8, 0x1
	0x0338FCF4 MOVK W8, 0x7F800000
	0x0338FCF8 CMP W9, W8
	0x0338FCFC B.CC 0x338FCD0
	0x0338FD00 FMOV W9, S0
	0x0338FD04 AND W9, W9, 0x7FFFFFFF
	0x0338FD08 CMP W9, W8
	0x0338FD0C CSINV W0, W31, W31, CS
	0x0338FD10 RET
	0x0338FD14 STP X30, X21, [X31 - 0x20]!
	0x0338FD18 STP X20, X19, [X31 + 0x10]
	0x0338FD1C ADRP X21, 0x104E000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x104F000
	008 Move X23, 0xD91000
	009 Move W8, [X22+34]
	010 Move X23, [X23+344]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xD91000
	019 Move X0, [X0+344]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+34], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Call EventArgs..ctor, X0
	031 Move [X20+16], X21
	032 Move [X20+24], X19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Move X23, [X31+56]
	039 Return 

Method: System.String get_Name()

Disassembly:
	0x0338FD20 LDRB W8, [X21 + 0x37]
	0x0338FD24 MOV X20, X1

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

