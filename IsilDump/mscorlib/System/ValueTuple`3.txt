Type: System.ValueTuple`3

Method: System.Void .ctor(T1 item1, T2 item2, T3 item3)

Disassembly:
	0x027BA1C8 ADD X0, X8, 0x138
	0x027BA1CC LDP X8, X2, [X0]
	0x027BA1D0 MOV X0, X19
	0x027BA1D4 MOV X1, X21
	0x027BA1D8 BLR X8
	0x027BA1DC MOV W2, W0
	0x027BA1E0 MOV W0, W22
	0x027BA1E4 MOV W1, W20

ISIL:
	001 Move [X0], X1
	002 Move [X0+8], X2
	003 Move W8, [X3+16]
	004 Move V0, [X3]
	005 And W9, W4, 1
	006 Move [X0+36], W9
	007 Move [X0+32], W8
	008 Move [X0+1], V0
	009 Return 

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x027BA1E8 MOV X3, X31
	0x027BA1EC BL 0x339BC9C
	0x027BA1F0 LDP X20, X19, [X31 + 0x60]
	0x027BA1F4 LDP X22, X21, [X31 + 0x50]
	0x027BA1F8 LDP X24, X23, [X31 + 0x40]
	0x027BA1FC LDR X30, [X31 + 0x30]
	0x027BA200 ADD X31, X31, 0x70
	0x027BA204 RET
	0x027BA208 BL 0x1C16F20
	0x027BA20C STR X30, [X31 - 0x20]!
	0x027BA210 STP X20, X19, [X31 + 0x10]
	0x027BA214 LDR X8, [X2 + 0x20]
	0x027BA218 MOV X19, X1
	0x027BA21C MOV X20, X0
	0x027BA220 LDRB W9, [X8 + 0x135]
	0x027BA224 TBNZ X9, 0x0, 0x27BA234
	0x027BA228 MOV X0, X8
	0x027BA22C BL 0x1C5C684
	0x027BA230 MOV X8, X0
	0x027BA234 LDR X8, [X8 + 0xC0]
	0x027BA238 MOV X0, X20
	0x027BA23C MOV X1, X19
	0x027BA240 LDP X20, X19, [X31 + 0x10]
	0x027BA244 LDR X2, [X8 + 0x110]
	0x027BA248 LDR X30, [X31], #0x20
	0x027BA24C B 0x27B9FCC
	0x027BA250 SUB X31, X31, 0x60
	0x027BA254 STR X30, [X31 + 0x30]
	0x027BA258 STP X22, X21, [X31 + 0x40]
	0x027BA25C STP X20, X19, [X31 + 0x50]
	0x027BA260 ADRP X22, 0x1C20000
	0x027BA264 ADRP X20, 0x1939000
	0x027BA268 LDRB W8, [X22 + 0x929]
	0x027BA26C LDR X20, [X20 + 0xAC8]
	0x027BA270 MOV X19, X1
	0x027BA274 MOV X21, X0
	0x027BA278 TBNZ X8, 0x0, 0x27BA2C0
	0x027BA27C ADRP X0, 0x1939000
	0x027BA280 LDR X0, [X0 + 0xB58]
	0x027BA284 BL 0x1C16CF4
	0x027BA288 ADRP X0, 0x1939000
	0x027BA28C LDR X0, [X0 + 0xAC8]
	0x027BA290 BL 0x1C16CF4
	0x027BA294 ADRP X0, 0x1939000
	0x027BA298 LDR X0, [X0 + 0x838]
	0x027BA29C BL 0x1C16CF4
	0x027BA2A0 ADRP X0, 0x1944000
	0x027BA2A4 LDR X0, [X0 + 0x310]
	0x027BA2A8 BL 0x1C16CF4
	0x027BA2AC ADRP X0, 0x193A000
	0x027BA2B0 LDR X0, [X0 + 0x608]
	0x027BA2B4 BL 0x1C16CF4
	0x027BA2B8 MOVZ W8, 0x1
	0x027BA2BC STRB W8, [X22 + 0x929]
	0x027BA2C0 LDR X0, [X20]
	0x027BA2C4 MOVZ W1, 0x7
	0x027BA2C8 STP X31, X31, [X31]
	0x027BA2CC STR W31, [X31 + 0x10]
	0x027BA2D0 BL 0x1C16D6C
	0x027BA2D4 CBZ X0, 0x27BA43C
	0x027BA2D8 LDR W8, [X0 + 0x18]
	0x027BA2DC MOV X20, X0
	0x027BA2E0 CBZ W8, 0x27BA438
	0x027BA2E4 ADRP X8, 0x1944000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+104], X21
	004 Move [X31+112], X20
	005 Move [X31+120], X19
	006 Move X8, [X2+32]
	007 Move X20, X2
	008 Move X21, X1
	009 Move X19, X0
	010 Move W9, [X8+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {18}
	015 Move X0, X8
	016 Call 0x1C5D684
	017 Move X8, X0
	018 Move X8, [X8+192]
	019 Move X0, [X8+8]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Compare X21, 0
	027 JumpIfEqual {30}
	028 Move X8, [X21]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W0, W31
	031 Move X0, [X20+32]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X0+192]
	039 Move X1, [X8+8]
	040 Move W8, [X1+309]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {48}
	045 Move X0, X1
	046 Call 0x1C5D684
	047 Move X1, X0
	048 Move X8, [X21]
	049 Move X9, [X1+64]
	050 Move X0, X21
	051 Move X8, [X8+64]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Call 0x1C17E08
	054 Move X8, [X0+32]
	055 Move V1, [X0]
	056 Move V0, [X0+16]
	057 Move [X31+32], X8
	058 Move [X31], V1
	059 Move [X31+8], V0
	060 Move X0, [X20+32]
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Move X8, [X0+192]
	068 Move V0, [X31]
	069 Move V1, [X31+16]
	070 Move X9, [X31+32]
	071 Add X1, X31, 48
	072 Move X2, [X8+32]
	073 Move X0, X19
	074 Move [X31+48], V0
	075 Move [X31+56], V1
	076 Move [X31+80], X9
	077 Call 0x27BA2E8, X0, X1
	078 Move X20, [X31+112]
	079 Move X19, [X31+120]
	080 Move X30, [X31+96]
	081 Move X21, [X31+104]
	082 And W0, W0, 1
	083 Add X31, X31, 128
	084 Return X0
	085 Call 0x1C181E0

Method: System.Boolean Equals(System.ValueTuple`3<T1, T2, T3> other)

Disassembly:
	0x027BA2E8 LDR X8, [X8 + 0x310]
	0x027BA2EC LDR X8, [X8]
	0x027BA2F0 STR X8, [X20 + 0x20]
	0x027BA2F4 LDR V0, [X21]
	0x027BA2F8 STR V0, [X31 + 0x2]
	0x027BA2FC LDRB W8, [X31 + 0x20]
	0x027BA300 TBNZ X8, 0x0, 0x27BA30C
	0x027BA304 MOV X0, X31
	0x027BA308 B 0x27BA32C
	0x027BA30C LDR X0, [X19 + 0x20]
	0x027BA310 LDRB W8, [X0 + 0x135]
	0x027BA314 TBNZ X8, 0x0, 0x27BA31C
	0x027BA318 BL 0x1C5C684
	0x027BA31C LDR X8, [X0 + 0xC0]
	0x027BA320 ADD X0, X31, 0x20
	0x027BA324 LDR X1, [X8 + 0x118]
	0x027BA328 BL 0x243C180
	0x027BA32C LDR W8, [X20 + 0x18]
	0x027BA330 CMP W8, 0x1
	0x027BA334 B.LS 0x27BA438
	0x027BA338 CMP W8, 0x2
	0x027BA33C STR X0, [X20 + 0x28]
	0x027BA340 B.EQ 0x27BA438
	0x027BA344 ADRP X22, 0x1939000
	0x027BA348 LDR X22, [X22 + 0x838]
	0x027BA34C LDR X8, [X22]
	0x027BA350 STR X8, [X20 + 0x30]
	0x027BA354 LDR V0, [X21 + 0x1]
	0x027BA358 LDR W8, [X21 + 0x20]
	0x027BA35C STR V0, [X31]
	0x027BA360 LDRB W9, [X31]
	0x027BA364 STR W8, [X31 + 0x10]
	0x027BA368 TBNZ X9, 0x0, 0x27BA374
	0x027BA36C MOV X0, X31
	0x027BA370 B 0x27BA394
	0x027BA374 LDR X0, [X19 + 0x20]
	0x027BA378 LDRB W8, [X0 + 0x135]
	0x027BA37C TBNZ X8, 0x0, 0x27BA384
	0x027BA380 BL 0x1C5C684
	0x027BA384 LDR X8, [X0 + 0xC0]
	0x027BA388 ADD X0, X31, 0x0
	0x027BA38C LDR X1, [X8 + 0x120]
	0x027BA390 BL 0x2437E88
	0x027BA394 LDR W8, [X20 + 0x18]
	0x027BA398 CMP W8, 0x3
	0x027BA39C B.LS 0x27BA438
	0x027BA3A0 CMP W8, 0x4
	0x027BA3A4 STR X0, [X20 + 0x38]
	0x027BA3A8 B.EQ 0x27BA438
	0x027BA3AC LDR X8, [X22]
	0x027BA3B0 ADRP X9, 0x1939000
	0x027BA3B4 LDR X9, [X9 + 0xB58]
	0x027BA3B8 ADD X21, X21, 0x24
	0x027BA3BC STR X8, [X20 + 0x40]
	0x027BA3C0 LDR X0, [X9]
	0x027BA3C4 LDR W8, [X0 + 0xE0]
	0x027BA3C8 CBNZ W8, 0x27BA3D0
	0x027BA3CC BL 0x1C16DFC
	0x027BA3D0 LDR X0, [X19 + 0x20]
	0x027BA3D4 LDRB W8, [X0 + 0x135]
	0x027BA3D8 TBNZ X8, 0x0, 0x27BA3E0
	0x027BA3DC BL 0x1C5C684
	0x027BA3E0 LDR X8, [X0 + 0xC0]
	0x027BA3E4 MOV X0, X21
	0x027BA3E8 LDR X1, [X8 + 0x128]
	0x027BA3EC BL 0x33176C4
	0x027BA3F0 LDR W8, [X20 + 0x18]
	0x027BA3F4 CMP W8, 0x5
	0x027BA3F8 B.LS 0x27BA438
	0x027BA3FC CMP W8, 0x6
	0x027BA400 STR X0, [X20 + 0x48]
	0x027BA404 B.EQ 0x27BA438
	0x027BA408 ADRP X8, 0x193A000
	0x027BA40C LDR X8, [X8 + 0x608]
	0x027BA410 MOV X0, X20
	0x027BA414 MOV X1, X31
	0x027BA418 LDR X8, [X8]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+176], X30
	003 Move [X31+184], X21
	004 Move [X31+192], X20
	005 Move [X31+200], X19
	006 Move X8, [X2+32]
	007 Move X21, X2
	008 Move X19, X1
	009 Move X20, X0
	010 Move W9, [X8+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {18}
	015 Move X0, X8
	016 Call 0x1C5D684
	017 Move X8, X0
	018 Move X8, [X8+192]
	019 Move X0, [X8+48]
	020 Call 0x27C2370
	021 Compare X0, 0
	022 JumpIfEqual {104}
	023 Move X8, [X0]
	024 Move X3, [X19]
	025 Move X4, [X19+8]
	026 Move X1, [X20]
	027 Move X2, [X20+8]
	028 Move X9, [X8+440]
	029 Move X5, [X8+448]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {96}
	035 Move X0, [X21+32]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X0+192]
	043 Move X0, [X8+80]
	044 Call 0x27C2434
	045 Move W8, [X20+32]
	046 Move V0, [X20+1]
	047 Move [X31+96], W8
	048 Move [X31+5], V0
	049 Move X8, [X19+32]
	050 Move V1, [X19]
	051 Move V0, [X19+16]
	052 Move [X31+64], X8
	053 Move [X31+32], V1
	054 Move [X31+40], V0
	055 Move [X31], V0
	056 Move [X31+16], W8
	057 Compare X0, 0
	058 JumpIfEqual {104}
	059 Move X8, [X0]
	060 Move V0, [X31+5]
	061 Move W9, [X31+96]
	062 Move V1, [X31]
	063 Move W10, [X31+16]
	064 Move X11, [X8+440]
	065 Move [X31+9], V0
	066 Move [X31+160], W9
	067 Move [X31+7], V1
	068 Move [X31+128], W10
	069 Move X3, [X8+448]
	070 Add X1, X31, 144
	071 Add X2, X31, 112
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {96}
	077 Move X0, [X21+32]
	078 Move W8, [X0+309]
	079 Move TEMP, X8
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {84}
	083 Call 0x1C5D684
	084 Move X8, [X0+192]
	085 Move X0, [X8+112]
	086 Call 0x21199DC
	087 Compare X0, 0
	088 JumpIfEqual {104}
	089 Move X8, [X0]
	090 Move W9, [X19+36]
	091 Move W1, [X20+36]
	092 Move X10, [X8+440]
	093 Move X3, [X8+448]
	094 And W2, W9, 1
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move W0, W31
	097 Move X20, [X31+192]
	098 Move X19, [X31+200]
	099 Move X30, [X31+176]
	100 Move X21, [X31+184]
	101 And W0, W0, 1
	102 Add X31, X31, 208
	103 Return X0
	104 Call 0x1C17F20

Method: System.Boolean System.Collections.IStructuralEquatable.Equals(System.Object other, System.Collections.IEqualityComparer comparer)

Disassembly:
	0x027BA41C STR X8, [X20 + 0x50]
	0x027BA420 BL 0x32278CC
	0x027BA424 LDP X20, X19, [X31 + 0x50]
	0x027BA428 LDP X22, X21, [X31 + 0x40]
	0x027BA42C LDR X30, [X31 + 0x30]
	0x027BA430 ADD X31, X31, 0x60
	0x027BA434 RET
	0x027BA438 BL 0x1C16F28
	0x027BA43C BL 0x1C16F20
	0x027BA440 SUB X31, X31, 0x60
	0x027BA444 STR X30, [X31 + 0x30]
	0x027BA448 STP X22, X21, [X31 + 0x40]
	0x027BA44C STP X20, X19, [X31 + 0x50]
	0x027BA450 ADRP X22, 0x1C20000
	0x027BA454 ADRP X20, 0x1939000
	0x027BA458 LDRB W8, [X22 + 0x92A]
	0x027BA45C LDR X20, [X20 + 0xAC8]
	0x027BA460 MOV X19, X1
	0x027BA464 MOV X21, X0
	0x027BA468 TBNZ X8, 0x0, 0x27BA4A4
	0x027BA46C ADRP X0, 0x1939000
	0x027BA470 LDR X0, [X0 + 0xB58]
	0x027BA474 BL 0x1C16CF4
	0x027BA478 ADRP X0, 0x1939000
	0x027BA47C LDR X0, [X0 + 0xAC8]
	0x027BA480 BL 0x1C16CF4
	0x027BA484 ADRP X0, 0x1939000
	0x027BA488 LDR X0, [X0 + 0x838]
	0x027BA48C BL 0x1C16CF4
	0x027BA490 ADRP X0, 0x193A000
	0x027BA494 LDR X0, [X0 + 0x608]
	0x027BA498 BL 0x1C16CF4
	0x027BA49C MOVZ W8, 0x1
	0x027BA4A0 STRB W8, [X22 + 0x92A]
	0x027BA4A4 LDR X0, [X20]
	0x027BA4A8 MOVZ W1, 0x6
	0x027BA4AC STP X31, X31, [X31]
	0x027BA4B0 STR W31, [X31 + 0x10]
	0x027BA4B4 BL 0x1C16D6C
	0x027BA4B8 LDR V0, [X21]
	0x027BA4BC MOV X20, X0
	0x027BA4C0 MOV X0, X31
	0x027BA4C4 STR V0, [X31 + 0x2]
	0x027BA4C8 LDRB W8, [X31 + 0x20]
	0x027BA4CC TBZ X8, 0x0, 0x27BA4F0
	0x027BA4D0 LDR X0, [X19 + 0x20]
	0x027BA4D4 LDRB W8, [X0 + 0x135]
	0x027BA4D8 TBNZ X8, 0x0, 0x27BA4E0
	0x027BA4DC BL 0x1C5C684
	0x027BA4E0 LDR X8, [X0 + 0xC0]
	0x027BA4E4 ADD X0, X31, 0x20
	0x027BA4E8 LDR X1, [X8 + 0x118]
	0x027BA4EC BL 0x243C180
	0x027BA4F0 CBZ X20, 0x27BA600
	0x027BA4F4 LDR W8, [X20 + 0x18]
	0x027BA4F8 CBZ W8, 0x27BA5FC
	0x027BA4FC CMP W8, 0x1
	0x027BA500 STR X0, [X20 + 0x20]
	0x027BA504 B.EQ 0x27BA5FC
	0x027BA508 ADRP X22, 0x1939000
	0x027BA50C LDR X22, [X22 + 0x838]
	0x027BA510 LDR X8, [X22]
	0x027BA514 STR X8, [X20 + 0x28]
	0x027BA518 LDR V0, [X21 + 0x1]
	0x027BA51C LDR W8, [X21 + 0x20]
	0x027BA520 STR V0, [X31]
	0x027BA524 LDRB W9, [X31]
	0x027BA528 STR W8, [X31 + 0x10]
	0x027BA52C TBNZ X9, 0x0, 0x27BA538
	0x027BA530 MOV X0, X31
	0x027BA534 B 0x27BA558
	0x027BA538 LDR X0, [X19 + 0x20]
	0x027BA53C LDRB W8, [X0 + 0x135]
	0x027BA540 TBNZ X8, 0x0, 0x27BA548
	0x027BA544 BL 0x1C5C684
	0x027BA548 LDR X8, [X0 + 0xC0]
	0x027BA54C ADD X0, X31, 0x0
	0x027BA550 LDR X1, [X8 + 0x120]
	0x027BA554 BL 0x2437E88
	0x027BA558 LDR W8, [X20 + 0x18]
	0x027BA55C CMP W8, 0x2
	0x027BA560 B.LS 0x27BA5FC
	0x027BA564 CMP W8, 0x3
	0x027BA568 STR X0, [X20 + 0x30]
	0x027BA56C B.EQ 0x27BA5FC
	0x027BA570 LDR X8, [X22]
	0x027BA574 ADRP X9, 0x1939000
	0x027BA578 LDR X9, [X9 + 0xB58]
	0x027BA57C ADD X21, X21, 0x24
	0x027BA580 STR X8, [X20 + 0x38]
	0x027BA584 LDR X0, [X9]
	0x027BA588 LDR W8, [X0 + 0xE0]
	0x027BA58C CBNZ W8, 0x27BA594
	0x027BA590 BL 0x1C16DFC
	0x027BA594 LDR X0, [X19 + 0x20]
	0x027BA598 LDRB W8, [X0 + 0x135]
	0x027BA59C TBNZ X8, 0x0, 0x27BA5A4
	0x027BA5A0 BL 0x1C5C684
	0x027BA5A4 LDR X8, [X0 + 0xC0]
	0x027BA5A8 MOV X0, X21
	0x027BA5AC LDR X1, [X8 + 0x128]
	0x027BA5B0 BL 0x33176C4
	0x027BA5B4 LDR W8, [X20 + 0x18]
	0x027BA5B8 CMP W8, 0x4
	0x027BA5BC B.LS 0x27BA5FC
	0x027BA5C0 CMP W8, 0x5
	0x027BA5C4 STR X0, [X20 + 0x40]
	0x027BA5C8 B.EQ 0x27BA5FC
	0x027BA5CC ADRP X8, 0x193A000
	0x027BA5D0 LDR X8, [X8 + 0x608]
	0x027BA5D4 MOV X0, X20
	0x027BA5D8 MOV X1, X31
	0x027BA5DC LDR X8, [X8]
	0x027BA5E0 STR X8, [X20 + 0x48]
	0x027BA5E4 BL 0x32278CC
	0x027BA5E8 LDP X20, X19, [X31 + 0x50]
	0x027BA5EC LDP X22, X21, [X31 + 0x40]
	0x027BA5F0 LDR X30, [X31 + 0x30]
	0x027BA5F4 ADD X31, X31, 0x60
	0x027BA5F8 RET
	0x027BA5FC BL 0x1C16F28
	0x027BA600 BL 0x1C16F20
	0x027BA604 MOVZ W0, 0x3
	0x027BA608 RET
	0x027BA60C STP W1, W2, [X0]
	0x027BA610 STR W3, [X0 + 0x8]
	0x027BA614 RET
	0x027BA618 STP X30, X21, [X31 - 0x20]!
	0x027BA61C STP X20, X19, [X31 + 0x10]
	0x027BA620 LDR X8, [X2 + 0x20]
	0x027BA624 MOV X20, X2
	0x027BA628 MOV X21, X1
	0x027BA62C MOV X19, X0
	0x027BA630 LDRB W9, [X8 + 0x135]
	0x027BA634 TBNZ X9, 0x0, 0x27BA644
	0x027BA638 MOV X0, X8
	0x027BA63C BL 0x1C5C684
	0x027BA640 MOV X8, X0
	0x027BA644 LDR X8, [X8 + 0xC0]
	0x027BA648 LDR X0, [X8 + 0x8]
	0x027BA64C LDRB W8, [X0 + 0x135]
	0x027BA650 TBNZ X8, 0x0, 0x27BA658
	0x027BA654 BL 0x1C5C684
	0x027BA658 CBZ X21, 0x27BA668
	0x027BA65C LDR X8, [X21]
	0x027BA660 CMP X8, X0
	0x027BA664 B.EQ 0x27BA678
	0x027BA668 LDP X20, X19, [X31 + 0x10]
	0x027BA66C MOV W0, W31
	0x027BA670 LDP X30, X21, [X31], #0x20
	0x027BA674 RET
	0x027BA678 LDR X0, [X20 + 0x20]
	0x027BA67C LDRB W8, [X0 + 0x135]
	0x027BA680 TBNZ X8, 0x0, 0x27BA688
	0x027BA684 BL 0x1C5C684
	0x027BA688 LDR X8, [X0 + 0xC0]
	0x027BA68C LDR X1, [X8 + 0x8]
	0x027BA690 LDRB W8, [X1 + 0x135]
	0x027BA694 TBNZ X8, 0x0, 0x27BA6A4
	0x027BA698 MOV X0, X1
	0x027BA69C BL 0x1C5C684
	0x027BA6A0 MOV X1, X0
	0x027BA6A4 LDR X8, [X21]
	0x027BA6A8 LDR X9, [X1 + 0x40]
	0x027BA6AC MOV X0, X21
	0x027BA6B0 LDR X8, [X8 + 0x40]
	0x027BA6B4 CMP X8, X9
	0x027BA6B8 B.NE 0x27BA6FC
	0x027BA6BC BL 0x1C16E08
	0x027BA6C0 MOV X8, X0
	0x027BA6C4 LDR X0, [X20 + 0x20]
	0x027BA6C8 LDR X20, [X8]
	0x027BA6CC LDR W21, [X8 + 0x8]
	0x027BA6D0 LDRB W9, [X0 + 0x135]
	0x027BA6D4 TBNZ X9, 0x0, 0x27BA6DC
	0x027BA6D8 BL 0x1C5C684
	0x027BA6DC LDR X8, [X0 + 0xC0]
	0x027BA6E0 MOV X0, X19
	0x027BA6E4 MOV X1, X20
	0x027BA6E8 LDP X20, X19, [X31 + 0x10]
	0x027BA6EC LDR X3, [X8 + 0x20]
	0x027BA6F0 MOV X2, X21
	0x027BA6F4 LDP X30, X21, [X31], #0x20
	0x027BA6F8 B 0x27BA700
	0x027BA6FC BL 0x1C171E0
	0x027BA700 STR X30, [X31 - 0x30]!
	0x027BA704 STP X22, X21, [X31 + 0x10]
	0x027BA708 STP X20, X19, [X31 + 0x20]
	0x027BA70C LDR X8, [X3 + 0x20]
	0x027BA710 MOV X21, X3
	0x027BA714 MOV X19, X2
	0x027BA718 MOV X22, X1
	0x027BA71C LDRB W9, [X8 + 0x135]
	0x027BA720 MOV X20, X0
	0x027BA724 TBNZ X9, 0x0, 0x27BA734
	0x027BA728 MOV X0, X8
	0x027BA72C BL 0x1C5C684
	0x027BA730 MOV X8, X0
	0x027BA734 LDR X8, [X8 + 0xC0]
	0x027BA738 LDR X0, [X8 + 0x30]
	0x027BA73C BL 0x211A010
	0x027BA740 CBZ X0, 0x27BA7E8
	0x027BA744 LDR X8, [X0]
	0x027BA748 LDR W1, [X20]
	0x027BA74C MOV W2, W22
	0x027BA750 LDP X9, X3, [X8 + 0x1B8]
	0x027BA754 BLR X9
	0x027BA758 TBZ X0, 0x0, 0x27BA7D4
	0x027BA75C LDR X0, [X21 + 0x20]
	0x027BA760 LDRB W8, [X0 + 0x135]
	0x027BA764 TBNZ X8, 0x0, 0x27BA76C
	0x027BA768 BL 0x1C5C684
	0x027BA76C LDR X8, [X0 + 0xC0]
	0x027BA770 LDR X0, [X8 + 0x50]
	0x027BA774 BL 0x211A010
	0x027BA778 CBZ X0, 0x27BA7E8
	0x027BA77C LDR X8, [X0]
	0x027BA780 LDR W1, [X20 + 0x4]
	0x027BA784 UBFM X2, X22, 0x20, 0x3F
	0x027BA788 LDP X9, X3, [X8 + 0x1B8]
	0x027BA78C BLR X9

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+160], X30
	003 Move [X31+168], X25
	004 Move [X31+176], X24
	005 Move [X31+184], X23
	006 Move [X31+192], X22
	007 Move [X31+200], X21
	008 Move [X31+208], X20
	009 Move [X31+216], X19
	010 Move X23, 0x1C21000
	011 Move W8, [X23+2341]
	012 Move X20, X3
	013 Move X19, X2
	014 Move X22, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x1964000
	021 Move X0, [X0+2304]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+2341], W8
	025 Compare X22, 0
	026 JumpIfEqual {246}
	027 Move X0, [X20+32]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Move X8, [X0+192]
	035 Move X0, [X8+8]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X22]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, [X20+32]
	045 Move W8, [X0+309]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {51}
	050 Call 0x1C5D684
	051 Move X8, [X0+192]
	052 Move X1, [X8+8]
	053 Move W8, [X1+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {61}
	058 Move X0, X1
	059 Call 0x1C5D684
	060 Move X1, X0
	061 Move X8, [X22]
	062 Move X9, [X1+64]
	063 Move X0, X22
	064 Move X8, [X8+64]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Call 0x1C17E08
	067 Move V0, [X0]
	068 Move V1, [X0+16]
	069 Move W8, [X0+32]
	070 Move [X31+112], V0
	071 Move [X31+120], V1
	072 Move [X31+144], W8
	073 Move V0, [X21]
	074 Move W24, [X0+36]
	075 Move [X31+2], V0
	076 Move X0, [X20+32]
	077 Move W8, [X0+309]
	078 Move TEMP, X8
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {83}
	082 Call 0x1C5D684
	083 Move X8, [X0+192]
	084 Add X1, X31, 32
	085 Move X0, [X8]
	086 Call 0x1C17E04
	087 Move V0, [X31+7]
	088 Move X22, X0
	089 Move [X31+5], V0
	090 Move X8, [X20+32]
	091 Move W9, [X8+309]
	092 Move TEMP, X9
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {99}
	096 Move X0, X8
	097 Call 0x1C5D684
	098 Move X8, X0
	099 Move X8, [X8+192]
	100 Add X1, X31, 80
	101 Move X0, [X8]
	102 Call 0x1C17E04
	103 Compare X19, 0
	104 JumpIfEqual {268}
	105 Move X25, 0x1964000
	106 Move X8, [X19]
	107 Move X25, [X25+2304]
	108 Move X23, X0
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Move X1, [X25]
	111 Compare X9, 0
	112 JumpIfEqual {119}
	113 Move X10, [X8+176]
	114 Add X10, X10, 8
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Subtract X9, X9, 1
	118 Add X10, X10, 16
	119 Move X0, X19
	120 Move W2, W31
	121 Call 0x1C5D788
	122 NotImplemented "Instruction LDRSW not yet implemented."
	123 Add X8, X8, X9
	124 Add X0, X8, 312
	125 Move X8, [X0]
	126 Move X3, [X0+8]
	127 Move X0, X19
	128 Move X1, X22
	129 Move X2, X23
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {246}
	135 Move W8, [X21+32]
	136 Move V0, [X21+1]
	137 Move [X31+96], W8
	138 Move [X31+5], V0
	139 Move X0, [X20+32]
	140 Move W8, [X0+309]
	141 Move TEMP, X8
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfEqual {146}
	145 Call 0x1C5D684
	146 Move X8, [X0+192]
	147 Add X1, X31, 80
	148 Move X0, [X8+16]
	149 Call 0x1C17E04
	150 Move V1, [X31+112]
	151 Move V0, [X31+128]
	152 Move W8, [X31+144]
	153 Move X22, X0
	154 Move [X31+32], V1
	155 Move [X31+40], V0
	156 Move V0, [X31+3]
	157 Move [X31+64], W8
	158 Move W8, W8
	159 Move [X31+16], W8
	160 Move [X31], V0
	161 Move X8, [X20+32]
	162 Move W9, [X8+309]
	163 Move TEMP, X9
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfEqual {170}
	167 Move X0, X8
	168 Call 0x1C5D684
	169 Move X8, X0
	170 Move X8, [X8+192]
	171 Add X1, X31, 0
	172 Move X0, [X8+16]
	173 Call 0x1C17E04
	174 Move X8, [X19]
	175 Move X1, [X25]
	176 Move X23, X0
	177 NotImplemented "Instruction LDRH not yet implemented."
	178 Compare X9, 0
	179 JumpIfEqual {186}
	180 Move X10, [X8+176]
	181 Add X10, X10, 8
	182 NotImplemented "Instruction LDUR not yet implemented."
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Subtract X9, X9, 1
	185 Add X10, X10, 16
	186 Move X0, X19
	187 Move W2, W31
	188 Call 0x1C5D788
	189 NotImplemented "Instruction LDRSW not yet implemented."
	190 Add X8, X8, X9
	191 Add X0, X8, 312
	192 Move X8, [X0]
	193 Move X3, [X0+8]
	194 Move X0, X19
	195 Move X1, X22
	196 Move X2, X23
	197 NotImplemented "Instruction BLR not yet implemented."
	198 Move TEMP, X0
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfNotEqual {246}
	202 Move W8, [X21+36]
	203 Move [X31+32], W8
	204 Move X0, [X20+32]
	205 Move W8, [X0+309]
	206 Move TEMP, X8
	207 And TEMP, TEMP, 1
	208 Compare TEMP, 1
	209 JumpIfEqual {211}
	210 Call 0x1C5D684
	211 Move X8, [X0+192]
	212 Add X1, X31, 32
	213 Move X0, [X8+24]
	214 Call 0x1C17E04
	215 And W8, W24, 1
	216 Move [X31+80], W8
	217 Move X8, [X20+32]
	218 Move X20, X0
	219 Move W9, [X8+309]
	220 Move TEMP, X9
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfEqual {227}
	224 Move X0, X8
	225 Call 0x1C5D684
	226 Move X8, X0
	227 Move X8, [X8+192]
	228 Add X1, X31, 80
	229 Move X0, [X8+24]
	230 Call 0x1C17E04
	231 Move X8, [X19]
	232 Move X1, [X25]
	233 Move X21, X0
	234 NotImplemented "Instruction LDRH not yet implemented."
	235 Compare X9, 0
	236 JumpIfEqual {243}
	237 Move X10, [X8+176]
	238 Add X10, X10, 8
	239 NotImplemented "Instruction LDUR not yet implemented."
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Subtract X9, X9, 1
	242 Add X10, X10, 16
	243 Move X0, X19
	244 Move W2, W31
	245 Call 0x1C5D788
	246 Move W0, W31
	247 Move X20, [X31+208]
	248 Move X19, [X31+216]
	249 Move X22, [X31+192]
	250 Move X21, [X31+200]
	251 Move X24, [X31+176]
	252 Move X23, [X31+184]
	253 Move X30, [X31+160]
	254 Move X25, [X31+168]
	255 And W0, W0, 1
	256 Add X31, X31, 224
	257 Return X0
	258 NotImplemented "Instruction LDRSW not yet implemented."
	259 Add X8, X8, X9
	260 Add X0, X8, 312
	261 Move X8, [X0]
	262 Move X3, [X0+8]
	263 Move X0, X19
	264 Move X1, X20
	265 Move X2, X21
	266 NotImplemented "Instruction BLR not yet implemented."
	267 Call 0x1C181E0
	268 Call 0x1C17F20

Method: System.Int32 System.IComparable.CompareTo(System.Object other)

Disassembly:
	0x027BA790 TBZ X0, 0x0, 0x27BA7D4
	0x027BA794 LDR X0, [X21 + 0x20]
	0x027BA798 LDRB W8, [X0 + 0x135]
	0x027BA79C TBNZ X8, 0x0, 0x27BA7A4
	0x027BA7A0 BL 0x1C5C684
	0x027BA7A4 LDR X8, [X0 + 0xC0]
	0x027BA7A8 LDR X0, [X8 + 0x70]
	0x027BA7AC BL 0x211A010
	0x027BA7B0 CBZ X0, 0x27BA7E8
	0x027BA7B4 LDR X8, [X0]
	0x027BA7B8 LDR W1, [X20 + 0x8]
	0x027BA7BC MOV W2, W19
	0x027BA7C0 LDP X20, X19, [X31 + 0x20]
	0x027BA7C4 LDP X4, X3, [X8 + 0x1B8]
	0x027BA7C8 LDP X22, X21, [X31 + 0x10]
	0x027BA7CC LDR X30, [X31], #0x30
	0x027BA7D0 BR X4
	0x027BA7D4 LDP X20, X19, [X31 + 0x20]
	0x027BA7D8 LDP X22, X21, [X31 + 0x10]
	0x027BA7DC MOV W0, W31
	0x027BA7E0 LDR X30, [X31], #0x30
	0x027BA7E4 RET
	0x027BA7E8 BL 0x1C16F20
	0x027BA7EC STR X30, [X31 - 0x50]!
	0x027BA7F0 STP X26, X25, [X31 + 0x10]
	0x027BA7F4 STP X24, X23, [X31 + 0x20]
	0x027BA7F8 STP X22, X21, [X31 + 0x30]
	0x027BA7FC STP X20, X19, [X31 + 0x40]
	0x027BA800 ADRP X23, 0x1C20000
	0x027BA804 LDRB W8, [X23 + 0x92B]
	0x027BA808 MOV X20, X3
	0x027BA80C MOV X19, X2
	0x027BA810 MOV X22, X1
	0x027BA814 MOV X21, X0
	0x027BA818 TBNZ X8, 0x0, 0x27BA830
	0x027BA81C ADRP X0, 0x1963000
	0x027BA820 LDR X0, [X0 + 0x900]
	0x027BA824 BL 0x1C16CF4
	0x027BA828 MOVZ W8, 0x1
	0x027BA82C STRB W8, [X23 + 0x92B]
	0x027BA830 CBZ X22, 0x27BAADC
	0x027BA834 LDR X0, [X20 + 0x20]
	0x027BA838 LDRB W8, [X0 + 0x135]
	0x027BA83C TBNZ X8, 0x0, 0x27BA844
	0x027BA840 BL 0x1C5C684
	0x027BA844 LDR X8, [X0 + 0xC0]
	0x027BA848 LDR X0, [X8 + 0x8]
	0x027BA84C LDRB W8, [X0 + 0x135]
	0x027BA850 TBNZ X8, 0x0, 0x27BA858
	0x027BA854 BL 0x1C5C684
	0x027BA858 LDR X8, [X22]
	0x027BA85C CMP X8, X0
	0x027BA860 B.NE 0x27BAADC
	0x027BA864 LDR X0, [X20 + 0x20]
	0x027BA868 LDRB W8, [X0 + 0x135]
	0x027BA86C TBNZ X8, 0x0, 0x27BA874
	0x027BA870 BL 0x1C5C684
	0x027BA874 LDR X8, [X0 + 0xC0]
	0x027BA878 LDR X1, [X8 + 0x8]
	0x027BA87C LDRB W8, [X1 + 0x135]
	0x027BA880 TBNZ X8, 0x0, 0x27BA890
	0x027BA884 MOV X0, X1
	0x027BA888 BL 0x1C5C684
	0x027BA88C MOV X1, X0
	0x027BA890 LDR X8, [X22]
	0x027BA894 LDR X9, [X1 + 0x40]
	0x027BA898 MOV X0, X22
	0x027BA89C LDR X8, [X8 + 0x40]
	0x027BA8A0 CMP X8, X9
	0x027BA8A4 B.NE 0x27BAB20
	0x027BA8A8 BL 0x1C16E08
	0x027BA8AC LDR W8, [X21]
	0x027BA8B0 LDP W22, W26, [X0]
	0x027BA8B4 LDR W24, [X0 + 0x8]
	0x027BA8B8 STR W8, [X31 + 0xC]
	0x027BA8BC LDR X0, [X20 + 0x20]
	0x027BA8C0 LDRB W8, [X0 + 0x135]
	0x027BA8C4 TBNZ X8, 0x0, 0x27BA8CC
	0x027BA8C8 BL 0x1C5C684
	0x027BA8CC LDR X8, [X0 + 0xC0]
	0x027BA8D0 ADD X1, X31, 0xC
	0x027BA8D4 LDR X0, [X8]
	0x027BA8D8 BL 0x1C16E04
	0x027BA8DC STR W22, [X31 + 0x8]
	0x027BA8E0 LDR X8, [X20 + 0x20]
	0x027BA8E4 MOV X22, X0
	0x027BA8E8 LDRB W9, [X8 + 0x135]
	0x027BA8EC TBNZ X9, 0x0, 0x27BA8FC
	0x027BA8F0 MOV X0, X8
	0x027BA8F4 BL 0x1C5C684
	0x027BA8F8 MOV X8, X0
	0x027BA8FC LDR X8, [X8 + 0xC0]
	0x027BA900 ADD X1, X31, 0x8
	0x027BA904 LDR X0, [X8]
	0x027BA908 BL 0x1C16E04
	0x027BA90C CBZ X19, 0x27BAB24
	0x027BA910 ADRP X25, 0x1963000
	0x027BA914 LDR X8, [X19]
	0x027BA918 LDR X25, [X25 + 0x900]
	0x027BA91C MOV X23, X0
	0x027BA920 LDRH W9, [X8 + 0x12E]
	0x027BA924 LDR X1, [X25]
	0x027BA928 CBZ X9, 0x27BA94C

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+104], X21
	004 Move [X31+112], X20
	005 Move [X31+120], X19
	006 Compare X1, 0
	007 JumpIfEqual {75}
	008 Move X20, X0
	009 Move X0, [X2+32]
	010 Move X19, X2
	011 Move X21, X1
	012 Move W8, [X0+309]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {18}
	017 Call 0x1C5D684
	018 Move X8, [X0+192]
	019 Move X0, [X8+8]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Move X8, [X21]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X0, [X19+32]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Move X1, [X8+8]
	037 Move W8, [X1+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {45}
	042 Move X0, X1
	043 Call 0x1C5D684
	044 Move X1, X0
	045 Move X8, [X21]
	046 Move X9, [X1+64]
	047 Move X0, X21
	048 Move X8, [X8+64]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Call 0x1C17E08
	051 Move X8, [X0+32]
	052 Move V1, [X0]
	053 Move V0, [X0+16]
	054 Move [X31+32], X8
	055 Move [X31], V1
	056 Move [X31+8], V0
	057 Move X0, [X19+32]
	058 Move W8, [X0+309]
	059 Move TEMP, X8
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {64}
	063 Call 0x1C5D684
	064 Move X8, [X0+192]
	065 Move V0, [X31]
	066 Move V1, [X31+16]
	067 Move X9, [X31+32]
	068 Add X1, X31, 48
	069 Move X2, [X8+144]
	070 Move X0, X20
	071 Move [X31+48], V0
	072 Move [X31+56], V1
	073 Move [X31+80], X9
	074 Call 0x27BA92C, X0, X1
	075 Move W0, 1
	076 Move X20, [X31+112]
	077 Move X19, [X31+120]
	078 Move X30, [X31+96]
	079 Move X21, [X31+104]
	080 Add X31, X31, 128
	081 Return X0
	082 Move X8, [X20+32]
	083 Move V1, [X20]
	084 Move V0, [X20+16]
	085 Move [X31+80], X8
	086 Move [X31+48], V1
	087 Move [X31+56], V0
	088 Move X0, [X19+32]
	089 Call 0x199C99C
	090 Move X8, [X0+192]
	091 Add X1, X31, 48
	092 Move X0, [X8+8]
	093 Call 0x1C17E04
	094 Move X1, X31
	095 Call "il2cpp_vm_object_is_inst", X0
	096 Move X20, X0
	097 Call 0x19913C0
	098 Move X8, [X20]
	099 Move X0, X20
	100 Move X9, [X8+360]
	101 Move X1, [X8+368]
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X20, X0
	104 Move X0, 0x1964000
	105 Move X0, [X0+2336]
	106 Call 0x1C17D08
	107 Move X1, X20
	108 Move X2, X31
	109 Call SR.Format, X0, X1
	110 Move X20, X0
	111 Move X0, 0x1942000
	112 Move X0, [X0+1400]
	113 Call 0x1C17D08
	114 Call 0x1C17F10
	115 Move X21, X0
	116 Move X0, 0x1964000
	117 Move X0, [X0+2344]
	118 Call 0x1C17D08
	119 Move X2, X0
	120 Move X0, X21
	121 Move X1, X20
	122 Move X3, X31
	123 Call ArgumentException..ctor, X0, X1, X2
	124 Move X0, X21
	125 Move X1, X19
	126 Call 0x1C17DEC
	127 Call 0x1C181E0

Method: System.Int32 CompareTo(System.ValueTuple`3<T1, T2, T3> other)

Disassembly:
	0x027BA92C LDR X10, [X8 + 0xB0]
	0x027BA930 ADD X10, X10, 0x8
	0x027BA934 LDUR X11, [X10 - 0x8]
	0x027BA938 CMP X11, X1
	0x027BA93C B.EQ 0x27BA95C
	0x027BA940 SUBS X9, X9, 0x1
	0x027BA944 ADD X10, X10, 0x10
	0x027BA948 B.NE 0x27BA934
	0x027BA94C MOV X0, X19
	0x027BA950 MOV W2, W31
	0x027BA954 BL 0x1C5C788
	0x027BA958 B 0x27BA968
	0x027BA95C LDRSW X9, [X10]
	0x027BA960 ADD X8, X8, X9, 0x4, LSL
	0x027BA964 ADD X0, X8, 0x138
	0x027BA968 LDP X8, X3, [X0]
	0x027BA96C MOV X0, X19
	0x027BA970 MOV X1, X22
	0x027BA974 MOV X2, X23
	0x027BA978 BLR X8
	0x027BA97C TBZ X0, 0x0, 0x27BAADC
	0x027BA980 LDR W8, [X21 + 0x4]
	0x027BA984 STR W8, [X31 + 0xC]
	0x027BA988 LDR X0, [X20 + 0x20]
	0x027BA98C LDRB W8, [X0 + 0x135]
	0x027BA990 TBNZ X8, 0x0, 0x27BA998
	0x027BA994 BL 0x1C5C684
	0x027BA998 LDR X8, [X0 + 0xC0]
	0x027BA99C ADD X1, X31, 0xC
	0x027BA9A0 LDR X0, [X8 + 0x10]
	0x027BA9A4 BL 0x1C16E04
	0x027BA9A8 STR W26, [X31 + 0x8]
	0x027BA9AC LDR X8, [X20 + 0x20]
	0x027BA9B0 MOV X22, X0
	0x027BA9B4 LDRB W9, [X8 + 0x135]
	0x027BA9B8 TBNZ X9, 0x0, 0x27BA9C8
	0x027BA9BC MOV X0, X8
	0x027BA9C0 BL 0x1C5C684
	0x027BA9C4 MOV X8, X0
	0x027BA9C8 LDR X8, [X8 + 0xC0]
	0x027BA9CC ADD X1, X31, 0x8
	0x027BA9D0 LDR X0, [X8 + 0x10]
	0x027BA9D4 BL 0x1C16E04
	0x027BA9D8 LDR X8, [X19]
	0x027BA9DC LDR X1, [X25]
	0x027BA9E0 MOV X23, X0
	0x027BA9E4 LDRH W9, [X8 + 0x12E]
	0x027BA9E8 CBZ X9, 0x27BAA0C
	0x027BA9EC LDR X10, [X8 + 0xB0]
	0x027BA9F0 ADD X10, X10, 0x8
	0x027BA9F4 LDUR X11, [X10 - 0x8]
	0x027BA9F8 CMP X11, X1
	0x027BA9FC B.EQ 0x27BAA1C
	0x027BAA00 SUBS X9, X9, 0x1
	0x027BAA04 ADD X10, X10, 0x10
	0x027BAA08 B.NE 0x27BA9F4
	0x027BAA0C MOV X0, X19
	0x027BAA10 MOV W2, W31
	0x027BAA14 BL 0x1C5C788
	0x027BAA18 B 0x27BAA28
	0x027BAA1C LDRSW X9, [X10]
	0x027BAA20 ADD X8, X8, X9, 0x4, LSL
	0x027BAA24 ADD X0, X8, 0x138
	0x027BAA28 LDP X8, X3, [X0]
	0x027BAA2C MOV X0, X19
	0x027BAA30 MOV X1, X22
	0x027BAA34 MOV X2, X23
	0x027BAA38 BLR X8
	0x027BAA3C TBZ X0, 0x0, 0x27BAADC
	0x027BAA40 LDR W8, [X21 + 0x8]
	0x027BAA44 STR W8, [X31 + 0xC]
	0x027BAA48 LDR X0, [X20 + 0x20]
	0x027BAA4C LDRB W8, [X0 + 0x135]
	0x027BAA50 TBNZ X8, 0x0, 0x27BAA58

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+176], X30
	003 Move [X31+184], X21
	004 Move [X31+192], X20
	005 Move [X31+200], X19
	006 Move X8, [X2+32]
	007 Move X21, X2
	008 Move X19, X1
	009 Move X20, X0
	010 Move W9, [X8+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {18}
	015 Move X0, X8
	016 Call 0x1C5D684
	017 Move X8, X0
	018 Move X8, [X8+192]
	019 Move X0, [X8+152]
	020 Call Comparer`1<Nullable`1<Vector3>>.get_Default
	021 Compare X0, 0
	022 JumpIfEqual {98}
	023 Move X8, [X0]
	024 Move X3, [X19]
	025 Move X4, [X19+8]
	026 Move X1, [X20]
	027 Move X2, [X20+8]
	028 Move X9, [X8+408]
	029 Move X5, [X8+416]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Compare W0, 0
	032 JumpIfNotEqual {92}
	033 Move X0, [X21+32]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move X8, [X0+192]
	041 Move X0, [X8+184]
	042 Call Comparer`1<Nullable`1<Quaternion>>.get_Default
	043 Move W8, [X20+32]
	044 Move V0, [X20+1]
	045 Move [X31+96], W8
	046 Move [X31+5], V0
	047 Move X8, [X19+32]
	048 Move V1, [X19]
	049 Move V0, [X19+16]
	050 Move [X31+64], X8
	051 Move [X31+32], V1
	052 Move [X31+40], V0
	053 Move [X31], V0
	054 Move [X31+16], W8
	055 Compare X0, 0
	056 JumpIfEqual {98}
	057 Move X8, [X0]
	058 Move V0, [X31+5]
	059 Move W9, [X31+96]
	060 Move V1, [X31]
	061 Move W10, [X31+16]
	062 Move X11, [X8+408]
	063 Move [X31+9], V0
	064 Move [X31+160], W9
	065 Move [X31+7], V1
	066 Move [X31+128], W10
	067 Move X3, [X8+416]
	068 Add X1, X31, 144
	069 Add X2, X31, 112
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Compare W0, 0
	072 JumpIfNotEqual {92}
	073 Move X0, [X21+32]
	074 Move W8, [X0+309]
	075 Move TEMP, X8
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {80}
	079 Call 0x1C5D684
	080 Move X8, [X0+192]
	081 Move X0, [X8+216]
	082 Call Comparer`1<Boolean>.get_Default
	083 Compare X0, 0
	084 JumpIfEqual {98}
	085 Move X8, [X0]
	086 Move W9, [X19+36]
	087 Move W1, [X20+36]
	088 Move X10, [X8+408]
	089 Move X3, [X8+416]
	090 And W2, W9, 1
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move X20, [X31+192]
	093 Move X19, [X31+200]
	094 Move X30, [X31+176]
	095 Move X21, [X31+184]
	096 Add X31, X31, 208
	097 Return X0
	098 Call 0x1C17F20

Method: System.Int32 System.Collections.IStructuralComparable.CompareTo(System.Object other, System.Collections.IComparer comparer)

Disassembly:
	0x027BAA54 BL 0x1C5C684
	0x027BAA58 LDR X8, [X0 + 0xC0]
	0x027BAA5C ADD X1, X31, 0xC
	0x027BAA60 LDR X0, [X8 + 0x18]
	0x027BAA64 BL 0x1C16E04
	0x027BAA68 STR W24, [X31 + 0x8]
	0x027BAA6C LDR X8, [X20 + 0x20]
	0x027BAA70 MOV X20, X0
	0x027BAA74 LDRB W9, [X8 + 0x135]
	0x027BAA78 TBNZ X9, 0x0, 0x27BAA88
	0x027BAA7C MOV X0, X8
	0x027BAA80 BL 0x1C5C684
	0x027BAA84 MOV X8, X0
	0x027BAA88 LDR X8, [X8 + 0xC0]
	0x027BAA8C ADD X1, X31, 0x8
	0x027BAA90 LDR X0, [X8 + 0x18]
	0x027BAA94 BL 0x1C16E04
	0x027BAA98 LDR X8, [X19]
	0x027BAA9C LDR X1, [X25]
	0x027BAAA0 MOV X21, X0
	0x027BAAA4 LDRH W9, [X8 + 0x12E]
	0x027BAAA8 CBZ X9, 0x27BAACC
	0x027BAAAC LDR X10, [X8 + 0xB0]
	0x027BAAB0 ADD X10, X10, 0x8
	0x027BAAB4 LDUR X11, [X10 - 0x8]
	0x027BAAB8 CMP X11, X1
	0x027BAABC B.EQ 0x27BAAFC
	0x027BAAC0 SUBS X9, X9, 0x1
	0x027BAAC4 ADD X10, X10, 0x10
	0x027BAAC8 B.NE 0x27BAAB4
	0x027BAACC MOV X0, X19
	0x027BAAD0 MOV W2, W31
	0x027BAAD4 BL 0x1C5C788
	0x027BAAD8 B 0x27BAB08
	0x027BAADC MOV W0, W31
	0x027BAAE0 LDP X20, X19, [X31 + 0x40]
	0x027BAAE4 LDP X22, X21, [X31 + 0x30]
	0x027BAAE8 LDP X24, X23, [X31 + 0x20]
	0x027BAAEC LDP X26, X25, [X31 + 0x10]
	0x027BAAF0 AND W0, W0, 0x1
	0x027BAAF4 LDR X30, [X31], #0x50
	0x027BAAF8 RET
	0x027BAAFC LDRSW X9, [X10]
	0x027BAB00 ADD X8, X8, X9, 0x4, LSL
	0x027BAB04 ADD X0, X8, 0x138
	0x027BAB08 LDP X8, X3, [X0]
	0x027BAB0C MOV X0, X19
	0x027BAB10 MOV X1, X20
	0x027BAB14 MOV X2, X21
	0x027BAB18 BLR X8
	0x027BAB1C B 0x27BAAE0
	0x027BAB20 BL 0x1C171E0
	0x027BAB24 BL 0x1C16F20
	0x027BAB28 SUB X31, X31, 0x30
	0x027BAB2C STP X30, X21, [X31 + 0x10]
	0x027BAB30 STP X20, X19, [X31 + 0x20]
	0x027BAB34 CBZ X1, 0x27BABFC
	0x027BAB38 MOV X20, X0
	0x027BAB3C LDR X0, [X2 + 0x20]
	0x027BAB40 MOV X19, X2
	0x027BAB44 MOV X21, X1
	0x027BAB48 LDRB W8, [X0 + 0x135]
	0x027BAB4C TBNZ X8, 0x0, 0x27BAB54
	0x027BAB50 BL 0x1C5C684
	0x027BAB54 LDR X8, [X0 + 0xC0]
	0x027BAB58 LDR X0, [X8 + 0x8]
	0x027BAB5C LDRB W8, [X0 + 0x135]
	0x027BAB60 TBNZ X8, 0x0, 0x27BAB68
	0x027BAB64 BL 0x1C5C684
	0x027BAB68 LDR X8, [X21]
	0x027BAB6C CMP X8, X0
	0x027BAB70 B.NE 0x27BAC10
	0x027BAB74 LDR X0, [X19 + 0x20]
	0x027BAB78 LDRB W8, [X0 + 0x135]
	0x027BAB7C TBNZ X8, 0x0, 0x27BAB84
	0x027BAB80 BL 0x1C5C684
	0x027BAB84 LDR X8, [X0 + 0xC0]
	0x027BAB88 LDR X1, [X8 + 0x8]
	0x027BAB8C LDRB W8, [X1 + 0x135]
	0x027BAB90 TBNZ X8, 0x0, 0x27BABA0
	0x027BAB94 MOV X0, X1
	0x027BAB98 BL 0x1C5C684
	0x027BAB9C MOV X1, X0
	0x027BABA0 LDR X8, [X21]
	0x027BABA4 LDR X9, [X1 + 0x40]
	0x027BABA8 MOV X0, X21
	0x027BABAC LDR X8, [X8 + 0x40]
	0x027BABB0 CMP X8, X9
	0x027BABB4 B.NE 0x27BACB8
	0x027BABB8 BL 0x1C16E08
	0x027BABBC MOV X8, X0
	0x027BABC0 LDR X0, [X19 + 0x20]
	0x027BABC4 LDR X19, [X8]
	0x027BABC8 LDR W21, [X8 + 0x8]
	0x027BABCC LDRB W9, [X0 + 0x135]
	0x027BABD0 TBNZ X9, 0x0, 0x27BABD8
	0x027BABD4 BL 0x1C5C684
	0x027BABD8 LDR X8, [X0 + 0xC0]
	0x027BABDC MOV X0, X20
	0x027BABE0 MOV X1, X19
	0x027BABE4 MOV X2, X21
	0x027BABE8 LDR X3, [X8 + 0x90]
	0x027BABEC LDP X20, X19, [X31 + 0x20]
	0x027BABF0 LDP X30, X21, [X31 + 0x10]
	0x027BABF4 ADD X31, X31, 0x30
	0x027BABF8 B 0x27BACBC
	0x027BABFC LDP X20, X19, [X31 + 0x20]
	0x027BAC00 LDP X30, X21, [X31 + 0x10]
	0x027BAC04 MOVZ W0, 0x1
	0x027BAC08 ADD X31, X31, 0x30
	0x027BAC0C RET
	0x027BAC10 LDR W8, [X20 + 0x8]
	0x027BAC14 LDR X9, [X20]
	0x027BAC18 STR W8, [X31 + 0x8]
	0x027BAC1C STR X9, [X31]
	0x027BAC20 LDR X0, [X19 + 0x20]
	0x027BAC24 BL 0x199B99C
	0x027BAC28 LDR X8, [X0 + 0xC0]
	0x027BAC2C ADD X1, X31, 0x0
	0x027BAC30 LDR X0, [X8 + 0x8]
	0x027BAC34 BL 0x1C16E04
	0x027BAC38 MOV X1, X31
	0x027BAC3C BL 0x33BE520
	0x027BAC40 MOV X20, X0
	0x027BAC44 BL 0x19903C0
	0x027BAC48 LDR X8, [X20]
	0x027BAC4C MOV X0, X20
	0x027BAC50 LDP X9, X1, [X8 + 0x168]
	0x027BAC54 BLR X9
	0x027BAC58 MOV X20, X0
	0x027BAC5C ADRP X0, 0x1963000
	0x027BAC60 LDR X0, [X0 + 0x920]
	0x027BAC64 BL 0x1C16D08
	0x027BAC68 MOV X1, X20
	0x027BAC6C MOV X2, X31
	0x027BAC70 BL 0x32094D4
	0x027BAC74 MOV X20, X0
	0x027BAC78 ADRP X0, 0x1941000
	0x027BAC7C LDR X0, [X0 + 0x578]
	0x027BAC80 BL 0x1C16D08
	0x027BAC84 BL 0x1C16F10
	0x027BAC88 MOV X21, X0
	0x027BAC8C ADRP X0, 0x1963000
	0x027BAC90 LDR X0, [X0 + 0x928]
	0x027BAC94 BL 0x1C16D08
	0x027BAC98 MOV X2, X0
	0x027BAC9C MOV X0, X21
	0x027BACA0 MOV X1, X20
	0x027BACA4 MOV X3, X31
	0x027BACA8 BL 0x330E16C
	0x027BACAC MOV X0, X21
	0x027BACB0 MOV X1, X19
	0x027BACB4 BL 0x1C16DEC
	0x027BACB8 BL 0x1C171E0
	0x027BACBC STR X30, [X31 - 0x30]!
	0x027BACC0 STP X22, X21, [X31 + 0x10]
	0x027BACC4 STP X20, X19, [X31 + 0x20]
	0x027BACC8 LDR X8, [X3 + 0x20]
	0x027BACCC MOV X21, X3
	0x027BACD0 MOV X19, X2
	0x027BACD4 MOV X22, X1
	0x027BACD8 LDRB W9, [X8 + 0x135]
	0x027BACDC MOV X20, X0
	0x027BACE0 TBNZ X9, 0x0, 0x27BACF0
	0x027BACE4 MOV X0, X8
	0x027BACE8 BL 0x1C5C684
	0x027BACEC MOV X8, X0
	0x027BACF0 LDR X8, [X8 + 0xC0]
	0x027BACF4 LDR X0, [X8 + 0x98]
	0x027BACF8 BL 0x291DF4C
	0x027BACFC CBZ X0, 0x27BADA0
	0x027BAD00 LDR X8, [X0]
	0x027BAD04 LDR W1, [X20]
	0x027BAD08 MOV W2, W22
	0x027BAD0C LDP X9, X3, [X8 + 0x198]
	0x027BAD10 BLR X9
	0x027BAD14 CBNZ W0, 0x27BAD50
	0x027BAD18 LDR X0, [X21 + 0x20]
	0x027BAD1C LDRB W8, [X0 + 0x135]
	0x027BAD20 TBNZ X8, 0x0, 0x27BAD28
	0x027BAD24 BL 0x1C5C684
	0x027BAD28 LDR X8, [X0 + 0xC0]
	0x027BAD2C LDR X0, [X8 + 0xB8]
	0x027BAD30 BL 0x291DF4C
	0x027BAD34 CBZ X0, 0x27BADA0
	0x027BAD38 LDR X8, [X0]
	0x027BAD3C LDR W1, [X20 + 0x4]
	0x027BAD40 UBFM X2, X22, 0x20, 0x3F
	0x027BAD44 LDP X9, X3, [X8 + 0x198]
	0x027BAD48 BLR X9
	0x027BAD4C CBZ W0, 0x27BAD60
	0x027BAD50 LDP X20, X19, [X31 + 0x20]
	0x027BAD54 LDP X22, X21, [X31 + 0x10]
	0x027BAD58 LDR X30, [X31], #0x30
	0x027BAD5C RET
	0x027BAD60 LDR X0, [X21 + 0x20]
	0x027BAD64 LDRB W8, [X0 + 0x135]
	0x027BAD68 TBNZ X8, 0x0, 0x27BAD70
	0x027BAD6C BL 0x1C5C684
	0x027BAD70 LDR X8, [X0 + 0xC0]
	0x027BAD74 LDR X0, [X8 + 0xD8]
	0x027BAD78 BL 0x291DF4C
	0x027BAD7C CBZ X0, 0x27BADA0
	0x027BAD80 LDR X8, [X0]
	0x027BAD84 LDR W1, [X20 + 0x8]
	0x027BAD88 MOV W2, W19
	0x027BAD8C LDP X20, X19, [X31 + 0x20]
	0x027BAD90 LDP X4, X3, [X8 + 0x198]
	0x027BAD94 LDP X22, X21, [X31 + 0x10]
	0x027BAD98 LDR X30, [X31], #0x30
	0x027BAD9C BR X4
	0x027BADA0 BL 0x1C16F20
	0x027BADA4 SUB X31, X31, 0x60
	0x027BADA8 STR X30, [X31 + 0x10]
	0x027BADAC STP X26, X25, [X31 + 0x20]
	0x027BADB0 STP X24, X23, [X31 + 0x30]
	0x027BADB4 STP X22, X21, [X31 + 0x40]
	0x027BADB8 STP X20, X19, [X31 + 0x50]
	0x027BADBC ADRP X23, 0x1C20000
	0x027BADC0 LDRB W8, [X23 + 0x92C]
	0x027BADC4 MOV X20, X3
	0x027BADC8 MOV X19, X2
	0x027BADCC MOV X22, X1
	0x027BADD0 MOV X21, X0
	0x027BADD4 TBNZ X8, 0x0, 0x27BADEC
	0x027BADD8 ADRP X0, 0x1963000
	0x027BADDC LDR X0, [X0 + 0x918]
	0x027BADE0 BL 0x1C16CF4
	0x027BADE4 MOVZ W8, 0x1
	0x027BADE8 STRB W8, [X23 + 0x92C]
	0x027BADEC CBZ X22, 0x27BAF18
	0x027BADF0 LDR X0, [X20 + 0x20]
	0x027BADF4 LDRB W8, [X0 + 0x135]
	0x027BADF8 TBNZ X8, 0x0, 0x27BAE00
	0x027BADFC BL 0x1C5C684
	0x027BAE00 LDR X8, [X0 + 0xC0]
	0x027BAE04 LDR X0, [X8 + 0x8]
	0x027BAE08 LDRB W8, [X0 + 0x135]
	0x027BAE0C TBNZ X8, 0x0, 0x27BAE14
	0x027BAE10 BL 0x1C5C684
	0x027BAE14 LDR X8, [X22]
	0x027BAE18 CMP X8, X0
	0x027BAE1C B.NE 0x27BB0DC
	0x027BAE20 LDR X0, [X20 + 0x20]
	0x027BAE24 LDRB W8, [X0 + 0x135]
	0x027BAE28 TBNZ X8, 0x0, 0x27BAE30
	0x027BAE2C BL 0x1C5C684
	0x027BAE30 LDR X8, [X0 + 0xC0]
	0x027BAE34 LDR X1, [X8 + 0x8]
	0x027BAE38 LDRB W8, [X1 + 0x135]
	0x027BAE3C TBNZ X8, 0x0, 0x27BAE4C
	0x027BAE40 MOV X0, X1
	0x027BAE44 BL 0x1C5C684
	0x027BAE48 MOV X1, X0
	0x027BAE4C LDR X8, [X22]
	0x027BAE50 LDR X9, [X1 + 0x40]
	0x027BAE54 MOV X0, X22
	0x027BAE58 LDR X8, [X8 + 0x40]
	0x027BAE5C CMP X8, X9
	0x027BAE60 B.NE 0x27BB184
	0x027BAE64 BL 0x1C16E08
	0x027BAE68 LDR W8, [X21]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+160], X30
	003 Move [X31+168], X25
	004 Move [X31+176], X24
	005 Move [X31+184], X23
	006 Move [X31+192], X22
	007 Move [X31+200], X21
	008 Move [X31+208], X20
	009 Move [X31+216], X19
	010 Move X23, 0x1C21000
	011 Move W8, [X23+2342]
	012 Move X19, X3
	013 Move X20, X2
	014 Move X22, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x1964000
	021 Move X0, [X0+2328]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+2342], W8
	025 Compare X22, 0
	026 JumpIfEqual {122}
	027 Move X0, [X19+32]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Move X8, [X0+192]
	035 Move X0, [X8+8]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X22]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, [X19+32]
	045 Move W8, [X0+309]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {51}
	050 Call 0x1C5D684
	051 Move X8, [X0+192]
	052 Move X1, [X8+8]
	053 Move W8, [X1+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {61}
	058 Move X0, X1
	059 Call 0x1C5D684
	060 Move X1, X0
	061 Move X8, [X22]
	062 Move X9, [X1+64]
	063 Move X0, X22
	064 Move X8, [X8+64]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Call 0x1C17E08
	067 Move V0, [X0]
	068 Move V1, [X0+16]
	069 Move W8, [X0+32]
	070 Move [X31+112], V0
	071 Move [X31+120], V1
	072 Move [X31+144], W8
	073 Move V0, [X21]
	074 Move W24, [X0+36]
	075 Move [X31+2], V0
	076 Move X0, [X19+32]
	077 Move W8, [X0+309]
	078 Move TEMP, X8
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {83}
	082 Call 0x1C5D684
	083 Move X8, [X0+192]
	084 Add X1, X31, 32
	085 Move X0, [X8]
	086 Call 0x1C17E04
	087 Move V0, [X31+7]
	088 Move X22, X0
	089 Move [X31+5], V0
	090 Move X8, [X19+32]
	091 Move W9, [X8+309]
	092 Move TEMP, X9
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {99}
	096 Move X0, X8
	097 Call 0x1C5D684
	098 Move X8, X0
	099 Move X8, [X8+192]
	100 Add X1, X31, 80
	101 Move X0, [X8]
	102 Call 0x1C17E04
	103 Compare X20, 0
	104 JumpIfEqual {308}
	105 Move X25, 0x1964000
	106 Move X8, [X20]
	107 Move X25, [X25+2328]
	108 Move X23, X0
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Move X1, [X25]
	111 Compare X9, 0
	112 JumpIfEqual {119}
	113 Move X10, [X8+176]
	114 Add X10, X10, 8
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Subtract X9, X9, 1
	118 Add X10, X10, 16
	119 Move X0, X20
	120 Move W2, W31
	121 Call 0x1C5D788
	122 Move W0, 1
	123 NotImplemented "Instruction LDRSW not yet implemented."
	124 Add X8, X8, X9
	125 Add X0, X8, 312
	126 Move X8, [X0]
	127 Move X3, [X0+8]
	128 Move X0, X20
	129 Move X1, X22
	130 Move X2, X23
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Compare W0, 0
	133 JumpIfNotEqual {252}
	134 Move W8, [X21+32]
	135 Move V0, [X21+1]
	136 Move [X31+96], W8
	137 Move [X31+5], V0
	138 Move X0, [X19+32]
	139 Move W8, [X0+309]
	140 Move TEMP, X8
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfEqual {145}
	144 Call 0x1C5D684
	145 Move X8, [X0+192]
	146 Add X1, X31, 80
	147 Move X0, [X8+16]
	148 Call 0x1C17E04
	149 Move V1, [X31+112]
	150 Move V0, [X31+128]
	151 Move W8, [X31+144]
	152 Move X22, X0
	153 Move [X31+32], V1
	154 Move [X31+40], V0
	155 Move V0, [X31+3]
	156 Move [X31+64], W8
	157 Move W8, W8
	158 Move [X31+16], W8
	159 Move [X31], V0
	160 Move X8, [X19+32]
	161 Move W9, [X8+309]
	162 Move TEMP, X9
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfEqual {169}
	166 Move X0, X8
	167 Call 0x1C5D684
	168 Move X8, X0
	169 Move X8, [X8+192]
	170 Add X1, X31, 0
	171 Move X0, [X8+16]
	172 Call 0x1C17E04
	173 Move X8, [X20]
	174 Move X1, [X25]
	175 Move X23, X0
	176 NotImplemented "Instruction LDRH not yet implemented."
	177 Compare X9, 0
	178 JumpIfEqual {185}
	179 Move X10, [X8+176]
	180 Add X10, X10, 8
	181 NotImplemented "Instruction LDUR not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Subtract X9, X9, 1
	184 Add X10, X10, 16
	185 Move X0, X20
	186 Move W2, W31
	187 Call 0x1C5D788
	188 NotImplemented "Instruction LDRSW not yet implemented."
	189 Add X8, X8, X9
	190 Add X0, X8, 312
	191 Move X8, [X0]
	192 Move X3, [X0+8]
	193 Move X0, X20
	194 Move X1, X22
	195 Move X2, X23
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Compare W0, 0
	198 JumpIfNotEqual {252}
	199 Move W8, [X21+36]
	200 Move [X31+32], W8
	201 Move X0, [X19+32]
	202 Move W8, [X0+309]
	203 Move TEMP, X8
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfEqual {208}
	207 Call 0x1C5D684
	208 Move X8, [X0+192]
	209 Add X1, X31, 32
	210 Move X0, [X8+24]
	211 Call 0x1C17E04
	212 And W8, W24, 1
	213 Move [X31+80], W8
	214 Move X8, [X19+32]
	215 Move X19, X0
	216 Move W9, [X8+309]
	217 Move TEMP, X9
	218 And TEMP, TEMP, 1
	219 Compare TEMP, 1
	220 JumpIfEqual {224}
	221 Move X0, X8
	222 Call 0x1C5D684
	223 Move X8, X0
	224 Move X8, [X8+192]
	225 Add X1, X31, 80
	226 Move X0, [X8+24]
	227 Call 0x1C17E04
	228 Move X8, [X20]
	229 Move X1, [X25]
	230 Move X21, X0
	231 NotImplemented "Instruction LDRH not yet implemented."
	232 Compare X9, 0
	233 JumpIfEqual {240}
	234 Move X10, [X8+176]
	235 Add X10, X10, 8
	236 NotImplemented "Instruction LDUR not yet implemented."
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Subtract X9, X9, 1
	239 Add X10, X10, 16
	240 Move X0, X20
	241 Move W2, W31
	242 Call 0x1C5D788
	243 NotImplemented "Instruction LDRSW not yet implemented."
	244 Add X8, X8, X9
	245 Add X0, X8, 312
	246 Move X8, [X0]
	247 Move X3, [X0+8]
	248 Move X0, X20
	249 Move X1, X19
	250 Move X2, X21
	251 NotImplemented "Instruction BLR not yet implemented."
	252 Move X20, [X31+208]
	253 Move X19, [X31+216]
	254 Move X22, [X31+192]
	255 Move X21, [X31+200]
	256 Move X24, [X31+176]
	257 Move X23, [X31+184]
	258 Move X30, [X31+160]
	259 Move X25, [X31+168]
	260 Add X31, X31, 224
	261 Return X0
	262 Move X8, [X21+32]
	263 Move V1, [X21]
	264 Move V0, [X21+16]
	265 Move [X31+144], X8
	266 Move [X31+112], V1
	267 Move [X31+120], V0
	268 Move X0, [X19+32]
	269 Call 0x199C99C
	270 Move X8, [X0+192]
	271 Add X1, X31, 112
	272 Move X0, [X8+8]
	273 Call 0x1C17E04
	274 Move X1, X31
	275 Call "il2cpp_vm_object_is_inst", X0
	276 Move X20, X0
	277 Call 0x19913C0
	278 Move X8, [X20]
	279 Move X0, X20
	280 Move X9, [X8+360]
	281 Move X1, [X8+368]
	282 NotImplemented "Instruction BLR not yet implemented."
	283 Move X20, X0
	284 Move X0, 0x1964000
	285 Move X0, [X0+2336]
	286 Call 0x1C17D08
	287 Move X1, X20
	288 Move X2, X31
	289 Call SR.Format, X0, X1
	290 Move X20, X0
	291 Move X0, 0x1942000
	292 Move X0, [X0+1400]
	293 Call 0x1C17D08
	294 Call 0x1C17F10
	295 Move X21, X0
	296 Move X0, 0x1964000
	297 Move X0, [X0+2344]
	298 Call 0x1C17D08
	299 Move X2, X0
	300 Move X0, X21
	301 Move X1, X20
	302 Move X3, X31
	303 Call ArgumentException..ctor, X0, X1, X2
	304 Move X0, X21
	305 Move X1, X19
	306 Call 0x1C17DEC
	307 Call 0x1C181E0
	308 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x027BAE6C LDP W22, W26, [X0]
	0x027BAE70 LDR W24, [X0 + 0x8]
	0x027BAE74 STR W8, [X31]
	0x027BAE78 LDR X0, [X20 + 0x20]
	0x027BAE7C LDRB W8, [X0 + 0x135]
	0x027BAE80 TBNZ X8, 0x0, 0x27BAE88
	0x027BAE84 BL 0x1C5C684
	0x027BAE88 LDR X8, [X0 + 0xC0]
	0x027BAE8C ADD X1, X31, 0x0
	0x027BAE90 LDR X0, [X8]
	0x027BAE94 BL 0x1C16E04
	0x027BAE98 STR W22, [X31 + 0x1C]
	0x027BAE9C LDR X8, [X20 + 0x20]
	0x027BAEA0 MOV X22, X0
	0x027BAEA4 LDRB W9, [X8 + 0x135]
	0x027BAEA8 TBNZ X9, 0x0, 0x27BAEB8
	0x027BAEAC MOV X0, X8
	0x027BAEB0 BL 0x1C5C684
	0x027BAEB4 MOV X8, X0
	0x027BAEB8 LDR X8, [X8 + 0xC0]
	0x027BAEBC ADD X1, X31, 0x1C
	0x027BAEC0 LDR X0, [X8]
	0x027BAEC4 BL 0x1C16E04
	0x027BAEC8 CBZ X19, 0x27BB188
	0x027BAECC ADRP X25, 0x1963000
	0x027BAED0 LDR X8, [X19]
	0x027BAED4 LDR X25, [X25 + 0x918]
	0x027BAED8 MOV X23, X0
	0x027BAEDC LDRH W9, [X8 + 0x12E]
	0x027BAEE0 LDR X1, [X25]
	0x027BAEE4 CBZ X9, 0x27BAF08
	0x027BAEE8 LDR X10, [X8 + 0xB0]
	0x027BAEEC ADD X10, X10, 0x8
	0x027BAEF0 LDUR X11, [X10 - 0x8]
	0x027BAEF4 CMP X11, X1
	0x027BAEF8 B.EQ 0x27BAF20
	0x027BAEFC SUBS X9, X9, 0x1
	0x027BAF00 ADD X10, X10, 0x10
	0x027BAF04 B.NE 0x27BAEF0
	0x027BAF08 MOV X0, X19
	0x027BAF0C MOV W2, W31
	0x027BAF10 BL 0x1C5C788
	0x027BAF14 B 0x27BAF2C
	0x027BAF18 MOVZ W0, 0x1
	0x027BAF1C B 0x27BB0C0
	0x027BAF20 LDRSW X9, [X10]
	0x027BAF24 ADD X8, X8, X9, 0x4, LSL
	0x027BAF28 ADD X0, X8, 0x138
	0x027BAF2C LDP X8, X3, [X0]
	0x027BAF30 MOV X0, X19
	0x027BAF34 MOV X1, X22
	0x027BAF38 MOV X2, X23
	0x027BAF3C BLR X8
	0x027BAF40 CBNZ W0, 0x27BB0C0
	0x027BAF44 LDR W8, [X21 + 0x4]
	0x027BAF48 STR W8, [X31]
	0x027BAF4C LDR X0, [X20 + 0x20]
	0x027BAF50 LDRB W8, [X0 + 0x135]
	0x027BAF54 TBNZ X8, 0x0, 0x27BAF5C
	0x027BAF58 BL 0x1C5C684
	0x027BAF5C LDR X8, [X0 + 0xC0]
	0x027BAF60 ADD X1, X31, 0x0
	0x027BAF64 LDR X0, [X8 + 0x10]
	0x027BAF68 BL 0x1C16E04
	0x027BAF6C STR W26, [X31 + 0x1C]
	0x027BAF70 LDR X8, [X20 + 0x20]
	0x027BAF74 MOV X22, X0
	0x027BAF78 LDRB W9, [X8 + 0x135]
	0x027BAF7C TBNZ X9, 0x0, 0x27BAF8C
	0x027BAF80 MOV X0, X8
	0x027BAF84 BL 0x1C5C684

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X21, 0x1C21000
	009 Move W8, [X21+2343]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x193A000
	017 Move X0, [X0+2904]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2343], W8
	021 Move [X31], X31
	022 Move [X31+8], X31
	023 Move [X31+16], W31
	024 Move V0, [X19]
	025 Move W21, W31
	026 Move [X31+2], V0
	027 Move W8, [X31+32]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {44}
	032 Move X0, [X20+32]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Move X8, [X0+192]
	040 Add X0, X31, 32
	041 Move X1, [X8+248]
	042 Call Nullable`1<Vector3>.GetHashCode, X0
	043 Move W21, W0
	044 Move V0, [X19+1]
	045 Move W8, [X19+32]
	046 Move X23, 0x193A000
	047 Move [X31], V0
	048 Move W9, [X31]
	049 Move X23, [X23+2904]
	050 Move [X31+16], W8
	051 Move TEMP, X9
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {56}
	055 Move W22, W31
	056 Move X0, [X20+32]
	057 Move W8, [X0+309]
	058 Move TEMP, X8
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {63}
	062 Call 0x1C5D684
	063 Move X8, [X0+192]
	064 Add X0, X31, 0
	065 Move X1, [X8+256]
	066 Call Nullable`1<Quaternion>.GetHashCode, X0
	067 Move W22, W0
	068 Move X0, [X23]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, [X20+32]
	074 Move W8, [X0+309]
	075 Move TEMP, X8
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {80}
	079 Call 0x1C5D684
	080 Move X8, [X0+192]
	081 Add X0, X19, 36
	082 Move X1, [X8+264]
	083 Call Boolean.GetHashCode, X0
	084 Move W2, W0
	085 Move W0, W21
	086 Move W1, W22
	087 Move X3, X31
	088 Call ValueTuple.CombineHashCodes, X0, X1, X2
	089 Move X20, [X31+80]
	090 Move X19, [X31+88]
	091 Move X22, [X31+64]
	092 Move X21, [X31+72]
	093 Move X30, [X31+48]
	094 Move X23, [X31+56]
	095 Add X31, X31, 96
	096 Return X0

Method: System.Int32 System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer comparer)

Disassembly:
	0x027BAF88 MOV X8, X0
	0x027BAF8C LDR X8, [X8 + 0xC0]
	0x027BAF90 ADD X1, X31, 0x1C
	0x027BAF94 LDR X0, [X8 + 0x10]
	0x027BAF98 BL 0x1C16E04
	0x027BAF9C LDR X8, [X19]
	0x027BAFA0 LDR X1, [X25]
	0x027BAFA4 MOV X23, X0
	0x027BAFA8 LDRH W9, [X8 + 0x12E]
	0x027BAFAC CBZ X9, 0x27BAFD0
	0x027BAFB0 LDR X10, [X8 + 0xB0]
	0x027BAFB4 ADD X10, X10, 0x8
	0x027BAFB8 LDUR X11, [X10 - 0x8]
	0x027BAFBC CMP X11, X1
	0x027BAFC0 B.EQ 0x27BAFE0
	0x027BAFC4 SUBS X9, X9, 0x1
	0x027BAFC8 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {15}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X8, X0
	015 Move X8, [X8+192]
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X2, [X8+272]
	021 Move X30, [X31+32]

Method: System.Int32 GetHashCodeCore(System.Collections.IEqualityComparer comparer)

Disassembly:
	0x027BAFCC B.NE 0x27BAFB8
	0x027BAFD0 MOV X0, X19
	0x027BAFD4 MOV W2, W31
	0x027BAFD8 BL 0x1C5C788
	0x027BAFDC B 0x27BAFEC
	0x027BAFE0 LDRSW X9, [X10]
	0x027BAFE4 ADD X8, X8, X9, 0x4, LSL
	0x027BAFE8 ADD X0, X8, 0x138
	0x027BAFEC LDP X8, X3, [X0]
	0x027BAFF0 MOV X0, X19
	0x027BAFF4 MOV X1, X22
	0x027BAFF8 MOV X2, X23
	0x027BAFFC BLR X8
	0x027BB000 CBNZ W0, 0x27BB0C0
	0x027BB004 LDR W8, [X21 + 0x8]
	0x027BB008 STR W8, [X31]
	0x027BB00C LDR X0, [X20 + 0x20]
	0x027BB010 LDRB W8, [X0 + 0x135]
	0x027BB014 TBNZ X8, 0x0, 0x27BB01C
	0x027BB018 BL 0x1C5C684
	0x027BB01C LDR X8, [X0 + 0xC0]
	0x027BB020 ADD X1, X31, 0x0
	0x027BB024 LDR X0, [X8 + 0x18]
	0x027BB028 BL 0x1C16E04
	0x027BB02C STR W24, [X31 + 0x1C]
	0x027BB030 LDR X8, [X20 + 0x20]
	0x027BB034 MOV X20, X0
	0x027BB038 LDRB W9, [X8 + 0x135]
	0x027BB03C TBNZ X9, 0x0, 0x27BB04C
	0x027BB040 MOV X0, X8
	0x027BB044 BL 0x1C5C684
	0x027BB048 MOV X8, X0
	0x027BB04C LDR X8, [X8 + 0xC0]
	0x027BB050 ADD X1, X31, 0x1C
	0x027BB054 LDR X0, [X8 + 0x18]
	0x027BB058 BL 0x1C16E04
	0x027BB05C LDR X8, [X19]
	0x027BB060 LDR X1, [X25]
	0x027BB064 MOV X21, X0
	0x027BB068 LDRH W9, [X8 + 0x12E]
	0x027BB06C CBZ X9, 0x27BB090
	0x027BB070 LDR X10, [X8 + 0xB0]
	0x027BB074 ADD X10, X10, 0x8
	0x027BB078 LDUR X11, [X10 - 0x8]
	0x027BB07C CMP X11, X1
	0x027BB080 B.EQ 0x27BB0A0
	0x027BB084 SUBS X9, X9, 0x1
	0x027BB088 ADD X10, X10, 0x10
	0x027BB08C B.NE 0x27BB078
	0x027BB090 MOV X0, X19
	0x027BB094 MOV W2, W31
	0x027BB098 BL 0x1C5C788
	0x027BB09C B 0x27BB0AC
	0x027BB0A0 LDRSW X9, [X10]
	0x027BB0A4 ADD X8, X8, X9, 0x4, LSL
	0x027BB0A8 ADD X0, X8, 0x138
	0x027BB0AC LDP X8, X3, [X0]
	0x027BB0B0 MOV X0, X19
	0x027BB0B4 MOV X1, X20
	0x027BB0B8 MOV X2, X21
	0x027BB0BC BLR X8
	0x027BB0C0 LDP X20, X19, [X31 + 0x50]
	0x027BB0C4 LDP X22, X21, [X31 + 0x40]
	0x027BB0C8 LDP X24, X23, [X31 + 0x30]
	0x027BB0CC LDP X26, X25, [X31 + 0x20]
	0x027BB0D0 LDR X30, [X31 + 0x10]
	0x027BB0D4 ADD X31, X31, 0x60
	0x027BB0D8 RET
	0x027BB0DC LDR W8, [X21 + 0x8]
	0x027BB0E0 LDR X9, [X21]
	0x027BB0E4 STR W8, [X31 + 0x8]
	0x027BB0E8 STR X9, [X31]
	0x027BB0EC LDR X0, [X20 + 0x20]
	0x027BB0F0 BL 0x199B99C
	0x027BB0F4 LDR X8, [X0 + 0xC0]
	0x027BB0F8 ADD X1, X31, 0x0
	0x027BB0FC LDR X0, [X8 + 0x8]
	0x027BB100 BL 0x1C16E04
	0x027BB104 MOV X1, X31
	0x027BB108 BL 0x33BE520
	0x027BB10C MOV X19, X0
	0x027BB110 BL 0x19903C0
	0x027BB114 LDR X8, [X19]
	0x027BB118 MOV X0, X19
	0x027BB11C LDP X9, X1, [X8 + 0x168]
	0x027BB120 BLR X9
	0x027BB124 MOV X19, X0
	0x027BB128 ADRP X0, 0x1962000
	0x027BB12C LDR X0, [X0 + 0x920]
	0x027BB130 BL 0x1C16D08
	0x027BB134 MOV X1, X19
	0x027BB138 MOV X2, X31
	0x027BB13C BL 0x32094D4
	0x027BB140 MOV X19, X0
	0x027BB144 ADRP X0, 0x1940000
	0x027BB148 LDR X0, [X0 + 0x578]
	0x027BB14C BL 0x1C16D08
	0x027BB150 BL 0x1C16F10
	0x027BB154 MOV X21, X0
	0x027BB158 ADRP X0, 0x1962000
	0x027BB15C LDR X0, [X0 + 0x928]
	0x027BB160 BL 0x1C16D08
	0x027BB164 MOV X2, X0
	0x027BB168 MOV X0, X21
	0x027BB16C MOV X1, X19
	0x027BB170 MOV X3, X31
	0x027BB174 BL 0x330E16C
	0x027BB178 MOV X0, X21
	0x027BB17C MOV X1, X20
	0x027BB180 BL 0x1C16DEC
	0x027BB184 BL 0x1C171E0
	0x027BB188 BL 0x1C16F20
	0x027BB18C STR X30, [X31 - 0x30]!
	0x027BB190 STP X22, X21, [X31 + 0x10]
	0x027BB194 STP X20, X19, [X31 + 0x20]
	0x027BB198 LDR X8, [X1 + 0x20]
	0x027BB19C MOV X21, X1
	0x027BB1A0 MOV X19, X0
	0x027BB1A4 LDRB W9, [X8 + 0x135]
	0x027BB1A8 TBNZ X9, 0x0, 0x27BB1B8
	0x027BB1AC MOV X0, X8
	0x027BB1B0 BL 0x1C5C684
	0x027BB1B4 MOV X8, X0
	0x027BB1B8 LDR X8, [X8 + 0xC0]
	0x027BB1BC MOV X0, X19
	0x027BB1C0 LDR X1, [X8 + 0xF8]
	0x027BB1C4 BL 0x337B6D8
	0x027BB1C8 MOV W20, W0
	0x027BB1CC LDR X0, [X21 + 0x20]
	0x027BB1D0 ADD X22, X19, 0x4
	0x027BB1D4 LDRB W8, [X0 + 0x135]
	0x027BB1D8 TBNZ X8, 0x0, 0x27BB1E0
	0x027BB1DC BL 0x1C5C684
	0x027BB1E0 LDR X8, [X0 + 0xC0]
	0x027BB1E4 MOV X0, X22
	0x027BB1E8 LDR X1, [X8 + 0x100]
	0x027BB1EC BL 0x337B6D8
	0x027BB1F0 LDR X8, [X21 + 0x20]
	0x027BB1F4 MOV W21, W0
	0x027BB1F8 LDRB W9, [X8 + 0x135]
	0x027BB1FC TBNZ X9, 0x0, 0x27BB20C
	0x027BB200 MOV X0, X8
	0x027BB204 BL 0x1C5C684
	0x027BB208 MOV X8, X0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+64], X24
	004 Move [X31+72], X23
	005 Move [X31+80], X22
	006 Move [X31+88], X21
	007 Move [X31+96], X20
	008 Move [X31+104], X19
	009 Move X22, 0x1C21000
	010 Move W8, [X22+2344]
	011 Move X20, X2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x1964000
	019 Move X0, [X0+2304]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2344], W8
	023 Move V0, [X21]
	024 Move [X31+2], V0
	025 Move X0, [X20+32]
	026 Move W8, [X0+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {32}
	031 Call 0x1C5D684
	032 Move X8, [X0+192]
	033 Add X1, X31, 32
	034 Move X0, [X8]
	035 Call 0x1C17E04
	036 Compare X19, 0
	037 JumpIfEqual {160}
	038 Move X24, 0x1963000
	039 Move X8, [X19]
	040 Move X24, [X24+2304]
	041 Move X22, X0
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 Move X1, [X24]
	044 Compare X9, 0
	045 JumpIfEqual {52}
	046 Move X10, [X8+176]
	047 Add X10, X10, 8
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Subtract X9, X9, 1
	051 Add X10, X10, 16
	052 Move W2, 1
	053 Move X0, X19
	054 Call 0x1C5D788
	055 Move W9, [X10]
	056 Add W9, W9, 1
	057 Add X8, X8, W9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X2, [X0+8]
	061 Move X0, X19
	062 Move X1, X22
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move W8, [X21+32]
	065 Move V0, [X21+1]
	066 Move W22, W0
	067 Move [X31+16], W8
	068 Move [X31], V0
	069 Move X8, [X20+32]
	070 Move W9, [X8+309]
	071 Move TEMP, X9
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {78}
	075 Move X0, X8
	076 Call 0x1C5D684
	077 Move X8, X0
	078 Move X8, [X8+192]
	079 Add X1, X31, 0
	080 Move X0, [X8+16]
	081 Call 0x1C17E04
	082 Move X8, [X19]
	083 Move X1, [X24]
	084 Move X23, X0
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Compare X9, 0
	087 JumpIfEqual {94}
	088 Move X10, [X8+176]
	089 Add X10, X10, 8
	090 NotImplemented "Instruction LDUR not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Subtract X9, X9, 1
	093 Add X10, X10, 16
	094 Move W2, 1
	095 Move X0, X19
	096 Call 0x1C5D788
	097 Move W9, [X10]
	098 Add W9, W9, 1
	099 Add X8, X8, W9
	100 Add X0, X8, 312
	101 Move X8, [X0]
	102 Move X2, [X0+8]
	103 Move X0, X19
	104 Move X1, X23
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move W8, [X21+36]
	107 Move [X31+60], W8
	108 Move X8, [X20+32]
	109 Move W20, W0
	110 Move W9, [X8+309]
	111 Move TEMP, X9
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfEqual {118}
	115 Move X0, X8
	116 Call 0x1C5D684
	117 Move X8, X0
	118 Move X8, [X8+192]
	119 Add X1, X31, 60
	120 Move X0, [X8+24]
	121 Call 0x1C17E04
	122 Move X8, [X19]
	123 Move X1, [X24]
	124 Move X21, X0
	125 NotImplemented "Instruction LDRH not yet implemented."
	126 Compare X9, 0
	127 JumpIfEqual {134}
	128 Move X10, [X8+176]
	129 Add X10, X10, 8
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Subtract X9, X9, 1
	133 Add X10, X10, 16
	134 Move W2, 1
	135 Move X0, X19
	136 Call 0x1C5D788
	137 Move W9, [X10]
	138 Add W9, W9, 1
	139 Add X8, X8, W9
	140 Add X0, X8, 312
	141 Move X8, [X0]
	142 Move X2, [X0+8]
	143 Move X0, X19
	144 Move X1, X21
	145 NotImplemented "Instruction BLR not yet implemented."
	146 Move W2, W0
	147 Move W0, W22
	148 Move W1, W20
	149 Move X3, X31
	150 Call ValueTuple.CombineHashCodes, X0, X1, X2
	151 Move X20, [X31+96]
	152 Move X19, [X31+104]
	153 Move X22, [X31+80]
	154 Move X21, [X31+88]
	155 Move X24, [X31+64]
	156 Move X23, [X31+72]
	157 Move X30, [X31+48]
	158 Add X31, X31, 112
	159 Return X0
	160 Call 0x1C17F20

Method: System.Int32 System.IValueTupleInternal.GetHashCode(System.Collections.IEqualityComparer comparer)

Disassembly:
	0x027BB20C LDR X8, [X8 + 0xC0]
	0x027BB210 ADD X0, X19, 0x8
	0x027BB214 LDR X1, [X8 + 0x108]
	0x027BB218 BL 0x337B6D8
	0x027BB21C MOV W2, W0
	0x027BB220 MOV W0, W20
	0x027BB224 MOV W1, W21
	0x027BB228 LDP X20, X19, [X31 + 0x20]
	0x027BB22C LDP X22, X21, [X31 + 0x10]
	0x027BB230 MOV X3, X31
	0x027BB234 LDR X30, [X31], #0x30
	0x027BB238 B 0x339BC9C
	0x027BB23C STR X30, [X31 - 0x20]!
	0x027BB240 STP X20, X19, [X31 + 0x10]
	0x027BB244 LDR X8, [X2 + 0x20]
	0x027BB248 MOV X19, X1
	0x027BB24C MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {15}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X8, X0
	015 Move X8, [X8+192]
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X2, [X8+272]
	021 Move X30, [X31+32]
	022 Call 0x27BAFCC, X0, X1
	023 Return X0

Method: System.String ToString()

Disassembly:
	0x027BB250 LDRB W9, [X8 + 0x135]
	0x027BB254 TBNZ X9, 0x0, 0x27BB264
	0x027BB258 MOV X0, X8
	0x027BB25C BL 0x1C5C684
	0x027BB260 MOV X8, X0
	0x027BB264 LDR X8, [X8 + 0xC0]
	0x027BB268 MOV X0, X20
	0x027BB26C MOV X1, X19
	0x027BB270 LDP X20, X19, [X31 + 0x10]
	0x027BB274 LDR X2, [X8 + 0x110]
	0x027BB278 LDR X30, [X31], #0x20
	0x027BB27C B 0x27BB280
	0x027BB280 SUB X31, X31, 0x50
	0x027BB284 STR X30, [X31 + 0x10]
	0x027BB288 STP X24, X23, [X31 + 0x20]
	0x027BB28C STP X22, X21, [X31 + 0x30]
	0x027BB290 STP X20, X19, [X31 + 0x40]
	0x027BB294 ADRP X22, 0x1C1F000
	0x027BB298 LDRB W8, [X22 + 0x92D]
	0x027BB29C MOV X20, X2
	0x027BB2A0 MOV X19, X1
	0x027BB2A4 MOV X21, X0
	0x027BB2A8 TBNZ X8, 0x0, 0x27BB2C0
	0x027BB2AC ADRP X0, 0x1962000
	0x027BB2B0 LDR X0, [X0 + 0x900]
	0x027BB2B4 BL 0x1C16CF4
	0x027BB2B8 MOVZ W8, 0x1
	0x027BB2BC STRB W8, [X22 + 0x92D]
	0x027BB2C0 LDR W8, [X21]
	0x027BB2C4 STR W8, [X31 + 0x1C]
	0x027BB2C8 LDR X0, [X20 + 0x20]
	0x027BB2CC LDRB W8, [X0 + 0x135]
	0x027BB2D0 TBNZ X8, 0x0, 0x27BB2D8
	0x027BB2D4 BL 0x1C5C684
	0x027BB2D8 LDR X8, [X0 + 0xC0]
	0x027BB2DC ADD X1, X31, 0x1C
	0x027BB2E0 LDR X0, [X8]
	0x027BB2E4 BL 0x1C16E04
	0x027BB2E8 CBZ X19, 0x27BB4B4
	0x027BB2EC ADRP X24, 0x1962000
	0x027BB2F0 LDR X8, [X19]
	0x027BB2F4 LDR X24, [X24 + 0x900]
	0x027BB2F8 MOV X22, X0
	0x027BB2FC LDRH W9, [X8 + 0x12E]
	0x027BB300 LDR X1, [X24]
	0x027BB304 CBZ X9, 0x27BB328
	0x027BB308 LDR X10, [X8 + 0xB0]
	0x027BB30C ADD X10, X10, 0x8
	0x027BB310 LDUR X11, [X10 - 0x8]
	0x027BB314 CMP X11, X1
	0x027BB318 B.EQ 0x27BB338
	0x027BB31C SUBS X9, X9, 0x1
	0x027BB320 ADD X10, X10, 0x10
	0x027BB324 B.NE 0x27BB310
	0x027BB328 MOVZ W2, 0x1
	0x027BB32C MOV X0, X19
	0x027BB330 BL 0x1C5C788
	0x027BB334 B 0x27BB348
	0x027BB338 LDR W9, [X10]
	0x027BB33C ADD W9, W9, 0x1
	0x027BB340 ADD X8, X8, W9, 0x4, SXTW
	0x027BB344 ADD X0, X8, 0x138
	0x027BB348 LDP X8, X2, [X0]
	0x027BB34C MOV X0, X19
	0x027BB350 MOV X1, X22
	0x027BB354 BLR X8
	0x027BB358 LDR W8, [X21 + 0x4]
	0x027BB35C MOV W22, W0
	0x027BB360 STR W8, [X31 + 0x18]
	0x027BB364 LDR X8, [X20 + 0x20]
	0x027BB368 LDRB W9, [X8 + 0x135]
	0x027BB36C TBNZ X9, 0x0, 0x27BB37C
	0x027BB370 MOV X0, X8
	0x027BB374 BL 0x1C5C684
	0x027BB378 MOV X8, X0
	0x027BB37C LDR X8, [X8 + 0xC0]
	0x027BB380 ADD X1, X31, 0x18
	0x027BB384 LDR X0, [X8 + 0x10]
	0x027BB388 BL 0x1C16E04
	0x027BB38C LDR X8, [X19]
	0x027BB390 LDR X1, [X24]
	0x027BB394 MOV X23, X0
	0x027BB398 LDRH W9, [X8 + 0x12E]
	0x027BB39C CBZ X9, 0x27BB3C0
	0x027BB3A0 LDR X10, [X8 + 0xB0]
	0x027BB3A4 ADD X10, X10, 0x8
	0x027BB3A8 LDUR X11, [X10 - 0x8]
	0x027BB3AC CMP X11, X1
	0x027BB3B0 B.EQ 0x27BB3D0
	0x027BB3B4 SUBS X9, X9, 0x1
	0x027BB3B8 ADD X10, X10, 0x10
	0x027BB3BC B.NE 0x27BB3A8
	0x027BB3C0 MOVZ W2, 0x1
	0x027BB3C4 MOV X0, X19
	0x027BB3C8 BL 0x1C5C788
	0x027BB3CC B 0x27BB3E0
	0x027BB3D0 LDR W9, [X10]
	0x027BB3D4 ADD W9, W9, 0x1
	0x027BB3D8 ADD X8, X8, W9, 0x4, SXTW
	0x027BB3DC ADD X0, X8, 0x138
	0x027BB3E0 LDP X8, X2, [X0]
	0x027BB3E4 MOV X0, X19
	0x027BB3E8 MOV X1, X23
	0x027BB3EC BLR X8
	0x027BB3F0 LDR W8, [X21 + 0x8]
	0x027BB3F4 STR W8, [X31 + 0xC]
	0x027BB3F8 LDR X8, [X20 + 0x20]
	0x027BB3FC MOV W20, W0
	0x027BB400 LDRB W9, [X8 + 0x135]
	0x027BB404 TBNZ X9, 0x0, 0x27BB414
	0x027BB408 MOV X0, X8
	0x027BB40C BL 0x1C5C684
	0x027BB410 MOV X8, X0
	0x027BB414 LDR X8, [X8 + 0xC0]
	0x027BB418 ADD X1, X31, 0xC
	0x027BB41C LDR X0, [X8 + 0x18]
	0x027BB420 BL 0x1C16E04
	0x027BB424 LDR X8, [X19]
	0x027BB428 LDR X1, [X24]
	0x027BB42C MOV X21, X0
	0x027BB430 LDRH W9, [X8 + 0x12E]
	0x027BB434 CBZ X9, 0x27BB458
	0x027BB438 LDR X10, [X8 + 0xB0]
	0x027BB43C ADD X10, X10, 0x8

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0x1C20000
	008 Move X20, 0x1939000
	009 Move W8, [X22+2345]
	010 Move X20, [X20+2760]
	011 Move X19, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x1939000
	018 Move X0, [X0+2904]
	019 Call 0x1C17CF4
	020 Move X0, 0x1939000
	021 Move X0, [X0+2760]
	022 Call 0x1C17CF4
	023 Move X0, 0x1939000
	024 Move X0, [X0+2104]
	025 Call 0x1C17CF4
	026 Move X0, 0x1944000
	027 Move X0, [X0+784]
	028 Call 0x1C17CF4
	029 Move X0, 0x193A000
	030 Move X0, [X0+1544]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+2345], W8
	034 Move X0, [X20]
	035 Move W1, 7
	036 Move [X31], X31
	037 Move [X31+8], X31
	038 Move [X31+16], W31
	039 Call 0x1C17D6C
	040 Compare X0, 0
	041 JumpIfEqual {142}
	042 Move W8, [X0+24]
	043 Move X20, X0
	044 Compare W8, 0
	045 JumpIfEqual {141}
	046 Move X8, 0x1944000
	047 Move X8, [X8+784]
	048 Move X8, [X8]
	049 Move [X20+32], X8
	050 Move V0, [X21]
	051 Move [X31+2], V0
	052 Move W8, [X31+32]
	053 Move TEMP, X8
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {58}
	057 Move X0, X31
	058 Move X0, [X19+32]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Move X8, [X0+192]
	066 Add X0, X31, 32
	067 Move X1, [X8+280]
	068 Call Nullable`1<Vector3>.ToString, X0
	069 Move W8, [X20+24]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move [X20+40], X0
	073 Move X22, 0x1939000
	074 Move X22, [X22+2104]
	075 Move X8, [X22]
	076 Move [X20+48], X8
	077 Move V0, [X21+1]
	078 Move W8, [X21+32]
	079 Move [X31], V0
	080 Move W9, [X31]
	081 Move [X31+16], W8
	082 Move TEMP, X9
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {87}
	086 Move X0, X31
	087 Move X0, [X19+32]
	088 Move W8, [X0+309]
	089 Move TEMP, X8
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {94}
	093 Call 0x1C5D684
	094 Move X8, [X0+192]
	095 Add X0, X31, 0
	096 Move X1, [X8+288]
	097 Call Nullable`1<Quaternion>.ToString, X0
	098 Move W8, [X20+24]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move [X20+56], X0
	102 Move X8, [X22]
	103 Move X9, 0x1939000
	104 Move X9, [X9+2904]
	105 Add X21, X21, 36
	106 Move [X20+64], X8
	107 Move X0, [X9]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X0, [X19+32]
	113 Move W8, [X0+309]
	114 Move TEMP, X8
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfEqual {119}
	118 Call 0x1C5D684
	119 Move X8, [X0+192]
	120 Move X0, X21
	121 Move X1, [X8+296]
	122 Call Boolean.ToString, X0
	123 Move W8, [X20+24]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move [X20+72], X0
	127 Move X8, 0x193A000
	128 Move X8, [X8+1544]
	129 Move X0, X20
	130 Move X1, X31
	131 Move X8, [X8]
	132 Move [X20+80], X8
	133 Call String.Concat, X0
	134 Move X20, [X31+80]
	135 Move X19, [X31+88]
	136 Move X22, [X31+64]
	137 Move X21, [X31+72]
	138 Move X30, [X31+48]
	139 Add X31, X31, 96
	140 Return X0
	141 Call 0x1C17F28
	142 Call 0x1C17F20

Method: System.String System.IValueTupleInternal.ToStringEnd()

Disassembly:
	0x027BB440 LDUR X11, [X10 - 0x8]
	0x027BB444 CMP X11, X1
	0x027BB448 B.EQ 0x27BB468
	0x027BB44C SUBS X9, X9, 0x1
	0x027BB450 ADD X10, X10, 0x10
	0x027BB454 B.NE 0x27BB440
	0x027BB458 MOVZ W2, 0x1
	0x027BB45C MOV X0, X19
	0x027BB460 BL 0x1C5C788
	0x027BB464 B 0x27BB478
	0x027BB468 LDR W9, [X10]
	0x027BB46C ADD W9, W9, 0x1
	0x027BB470 ADD X8, X8, W9, 0x4, SXTW
	0x027BB474 ADD X0, X8, 0x138
	0x027BB478 LDP X8, X2, [X0]
	0x027BB47C MOV X0, X19
	0x027BB480 MOV X1, X21
	0x027BB484 BLR X8
	0x027BB488 MOV W2, W0
	0x027BB48C MOV W0, W22
	0x027BB490 MOV W1, W20
	0x027BB494 MOV X3, X31
	0x027BB498 BL 0x339BC9C
	0x027BB49C LDP X20, X19, [X31 + 0x40]
	0x027BB4A0 LDP X22, X21, [X31 + 0x30]
	0x027BB4A4 LDP X24, X23, [X31 + 0x20]
	0x027BB4A8 LDR X30, [X31 + 0x10]
	0x027BB4AC ADD X31, X31, 0x50
	0x027BB4B0 RET
	0x027BB4B4 BL 0x1C16F20
	0x027BB4B8 STR X30, [X31 - 0x20]!
	0x027BB4BC STP X20, X19, [X31 + 0x10]
	0x027BB4C0 LDR X8, [X2 + 0x20]
	0x027BB4C4 MOV X19, X1
	0x027BB4C8 MOV X20, X0
	0x027BB4CC LDRB W9, [X8 + 0x135]
	0x027BB4D0 TBNZ X9, 0x0, 0x27BB4E0
	0x027BB4D4 MOV X0, X8
	0x027BB4D8 BL 0x1C5C684
	0x027BB4DC MOV X8, X0
	0x027BB4E0 LDR X8, [X8 + 0xC0]
	0x027BB4E4 MOV X0, X20
	0x027BB4E8 MOV X1, X19
	0x027BB4EC LDP X20, X19, [X31 + 0x10]
	0x027BB4F0 LDR X2, [X8 + 0x110]
	0x027BB4F4 LDR X30, [X31], #0x20
	0x027BB4F8 B 0x27BB280
	0x027BB4FC STP X30, X23, [X31 - 0x30]!
	0x027BB500 STP X22, X21, [X31 + 0x10]
	0x027BB504 STP X20, X19, [X31 + 0x20]
	0x027BB508 ADRP X19, 0x1C1F000
	0x027BB50C ADRP X22, 0x1938000
	0x027BB510 LDRB W8, [X19 + 0x92E]
	0x027BB514 LDR X22, [X22 + 0xAC8]
	0x027BB518 MOV X21, X1
	0x027BB51C MOV X20, X0
	0x027BB520 TBNZ X8, 0x0, 0x27BB55C
	0x027BB524 ADRP X0, 0x1938000
	0x027BB528 LDR X0, [X0 + 0xAC8]
	0x027BB52C BL 0x1C16CF4
	0x027BB530 ADRP X0, 0x1938000
	0x027BB534 LDR X0, [X0 + 0x838]
	0x027BB538 BL 0x1C16CF4
	0x027BB53C ADRP X0, 0x1943000
	0x027BB540 LDR X0, [X0 + 0x310]
	0x027BB544 BL 0x1C16CF4
	0x027BB548 ADRP X0, 0x1939000
	0x027BB54C LDR X0, [X0 + 0x608]
	0x027BB550 BL 0x1C16CF4
	0x027BB554 MOVZ W8, 0x1
	0x027BB558 STRB W8, [X19 + 0x92E]
	0x027BB55C LDR X0, [X22]
	0x027BB560 MOVZ W1, 0x7
	0x027BB564 BL 0x1C16D6C
	0x027BB568 CBZ X0, 0x27BB67C
	0x027BB56C LDR W8, [X0 + 0x18]
	0x027BB570 MOV X19, X0
	0x027BB574 CBZ W8, 0x27BB678
	0x027BB578 ADRP X8, 0x1943000
	0x027BB57C LDR X8, [X8 + 0x310]
	0x027BB580 LDR X8, [X8]
	0x027BB584 STR X8, [X19 + 0x20]
	0x027BB588 LDR X0, [X21 + 0x20]
	0x027BB58C LDRB W8, [X0 + 0x135]
	0x027BB590 TBNZ X8, 0x0, 0x27BB598
	0x027BB594 BL 0x1C5C684
	0x027BB598 LDR X8, [X0 + 0xC0]
	0x027BB59C MOV X0, X20
	0x027BB5A0 LDR X1, [X8 + 0x118]
	0x027BB5A4 BL 0x337B6E0
	0x027BB5A8 LDR W8, [X19 + 0x18]
	0x027BB5AC CMP W8, 0x1
	0x027BB5B0 B.LS 0x27BB678
	0x027BB5B4 CMP W8, 0x2
	0x027BB5B8 STR X0, [X19 + 0x28]
	0x027BB5BC B.EQ 0x27BB678
	0x027BB5C0 ADRP X23, 0x1938000
	0x027BB5C4 LDR X23, [X23 + 0x838]
	0x027BB5C8 ADD X22, X20, 0x4
	0x027BB5CC LDR X8, [X23]
	0x027BB5D0 STR X8, [X19 + 0x30]
	0x027BB5D4 LDR X0, [X21 + 0x20]
	0x027BB5D8 LDRB W8, [X0 + 0x135]
	0x027BB5DC TBNZ X8, 0x0, 0x27BB5E4
	0x027BB5E0 BL 0x1C5C684
	0x027BB5E4 LDR X8, [X0 + 0xC0]
	0x027BB5E8 MOV X0, X22
	0x027BB5EC LDR X1, [X8 + 0x120]
	0x027BB5F0 BL 0x337B6E0
	0x027BB5F4 LDR W8, [X19 + 0x18]
	0x027BB5F8 CMP W8, 0x3
	0x027BB5FC B.LS 0x27BB678
	0x027BB600 CMP W8, 0x4

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0x1C20000
	008 Move X20, 0x1939000
	009 Move W8, [X22+2346]
	010 Move X20, [X20+2760]
	011 Move X19, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x1939000
	018 Move X0, [X0+2904]
	019 Call 0x1C17CF4
	020 Move X0, 0x1939000
	021 Move X0, [X0+2760]
	022 Call 0x1C17CF4
	023 Move X0, 0x1939000
	024 Move X0, [X0+2104]
	025 Call 0x1C17CF4
	026 Move X0, 0x193A000
	027 Move X0, [X0+1544]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+2346], W8
	031 Move X0, [X20]
	032 Move W1, 6
	033 Move [X31], X31
	034 Move [X31+8], X31
	035 Move [X31+16], W31
	036 Call 0x1C17D6C
	037 Move V0, [X21]
	038 Move X20, X0
	039 Move X0, X31
	040 Move [X31+2], V0
	041 Move W8, [X31+32]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {57}
	046 Move X0, [X19+32]
	047 Move W8, [X0+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {53}
	052 Call 0x1C5D684
	053 Move X8, [X0+192]
	054 Add X0, X31, 32
	055 Move X1, [X8+280]
	056 Call Nullable`1<Vector3>.ToString, X0
	057 Compare X20, 0
	058 JumpIfEqual {133}
	059 Move W8, [X20+24]
	060 Compare W8, 0
	061 JumpIfEqual {132}
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move [X20+32], X0
	064 Move X22, 0x1939000
	065 Move X22, [X22+2104]
	066 Move X8, [X22]
	067 Move [X20+40], X8
	068 Move V0, [X21+1]
	069 Move W8, [X21+32]
	070 Move [X31], V0
	071 Move W9, [X31]
	072 Move [X31+16], W8
	073 Move TEMP, X9
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {78}
	077 Move X0, X31
	078 Move X0, [X19+32]
	079 Move W8, [X0+309]
	080 Move TEMP, X8
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {85}
	084 Call 0x1C5D684
	085 Move X8, [X0+192]
	086 Add X0, X31, 0
	087 Move X1, [X8+288]
	088 Call Nullable`1<Quaternion>.ToString, X0
	089 Move W8, [X20+24]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move [X20+48], X0
	093 Move X8, [X22]
	094 Move X9, 0x1939000
	095 Move X9, [X9+2904]
	096 Add X21, X21, 36
	097 Move [X20+56], X8
	098 Move X0, [X9]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Move X0, [X19+32]
	104 Move W8, [X0+309]
	105 Move TEMP, X8
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfEqual {110}
	109 Call 0x1C5D684
	110 Move X8, [X0+192]
	111 Move X0, X21
	112 Move X1, [X8+296]
	113 Call Boolean.ToString, X0
	114 Move W8, [X20+24]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move [X20+64], X0
	118 Move X8, 0x193A000
	119 Move X8, [X8+1544]
	120 Move X0, X20
	121 Move X1, X31
	122 Move X8, [X8]
	123 Move [X20+72], X8
	124 Call String.Concat, X0
	125 Move X20, [X31+80]
	126 Move X19, [X31+88]
	127 Move X22, [X31+64]
	128 Move X21, [X31+72]
	129 Move X30, [X31+48]
	130 Add X31, X31, 96
	131 Return X0
	132 Call 0x1C17F28
	133 Call 0x1C17F20

Method: System.Int32 System.Runtime.CompilerServices.ITuple.get_Length()

Disassembly:
	0x027BB604 STR X0, [X19 + 0x38]
	0x027BB608 B.EQ 0x27BB678

ISIL:
	001 Move W0, 3
	002 Return X0

