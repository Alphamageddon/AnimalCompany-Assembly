Type: System.TypeInitializationException

Method: System.Void .ctor()

Disassembly:
	0x0339989C BL 0x320A264
	0x033998A0 MOV X19, X0
	0x033998A4 ADRP X0, 0xD62000
	0x033998A8 LDR X0, [X0 + 0xC08]
	0x033998AC BL 0x1C16D08
	0x033998B0 BL 0x1C16F10
	0x033998B4 MOV X1, X19
	0x033998B8 MOV X2, X31
	0x033998BC MOV X20, X0
	0x033998C0 BL 0x337B498
	0x033998C4 ADRP X0, 0xD92000
	0x033998C8 LDR X0, [X0 + 0x590]
	0x033998CC BL 0x1C16D08
	0x033998D0 MOV X1, X0
	0x033998D4 MOV X0, X20
	0x033998D8 BL 0x1C16DEC
	0x033998DC STR X30, [X31 - 0x40]!
	0x033998E0 STP X24, X23, [X31 + 0x10]
	0x033998E4 STP X22, X21, [X31 + 0x20]
	0x033998E8 STP X20, X19, [X31 + 0x30]
	0x033998EC ADRP X24, 0x1044000
	0x033998F0 ADRP X23, 0xD5F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1045000
	006 Move X21, 0xD93000
	007 Move W8, [X20+165]
	008 Move X21, [X21+1376]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD93000
	015 Move X0, [X0+1376]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+165], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call SystemException..ctor, X0, X1
	022 Move W8, 0x1534
	023 NotImplemented "Instruction MOVK not yet implemented."
	024 Move [X19+96], W8
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return 

Method: System.Void .ctor(System.String fullTypeName, System.Exception innerException)

Disassembly:
	0x033998F4 ADRP X22, 0xD63000
	0x033998F8 LDRB W8, [X24 + 0xBF]
	0x033998FC LDR X23, [X23 + 0x658]
	0x03399900 LDR X22, [X22 + 0x9E8]
	0x03399904 MOV X19, X2
	0x03399908 MOV X20, X1
	0x0339990C MOV X21, X0
	0x03399910 TBNZ X8, 0x0, 0x3399934
	0x03399914 ADRP X0, 0xD63000
	0x03399918 LDR X0, [X0 + 0x9E8]
	0x0339991C BL 0x1C16CF4
	0x03399920 ADRP X0, 0xD5F000
	0x03399924 LDR X0, [X0 + 0x658]
	0x03399928 BL 0x1C16CF4
	0x0339992C MOVZ W8, 0x1
	0x03399930 STRB W8, [X24 + 0xBF]
	0x03399934 LDRH W8, [X21]
	0x03399938 LDR X0, [X23]
	0x0339993C ADD X1, X31, 0xC
	0x03399940 STRH W8, [X31 + 0xC]
	0x03399944 BL 0x1C16E04
	0x03399948 LDR X8, [X22]
	0x0339994C MOV X21, X0
	0x03399950 LDR W9, [X8 + 0xE0]
	0x03399954 CBNZ W9, 0x3399960
	0x03399958 MOV X0, X8
	0x0339995C BL 0x1C16DFC
	0x03399960 MOV X0, X21
	0x03399964 MOV X1, X20
	0x03399968 MOV X2, X19
	0x0339996C MOV X3, X31
	0x03399970 BL 0x3318718

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1045000
	008 Move X23, 0xD93000
	009 Move W8, [X22+166]
	010 Move X23, [X23+1384]
	011 Move X21, X2
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xD93000
	019 Move X0, [X0+1384]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+166], W8
	023 Move X0, [X23]
	024 Move X1, X20
	025 Move X2, X31
	026 Call SR.Format, X0, X1
	027 Move X1, X0
	028 Move X0, X19
	029 Move X2, X21
	030 Call SystemException..ctor, X0, X1, X2
	031 Move W8, 0x1534
	032 NotImplemented "Instruction MOVK not yet implemented."
	033 Move [X19+144], X20
	034 Move [X19+96], W8
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Move X23, [X31+56]
	041 Return 

Method: System.Void .ctor(System.String fullTypeName, System.String message, System.Exception innerException)

Disassembly:
	0x03399974 LDP X20, X19, [X31 + 0x30]
	0x03399978 LDP X22, X21, [X31 + 0x20]
	0x0339997C LDP X24, X23, [X31 + 0x10]
	0x03399980 LDR X30, [X31], #0x40
	0x03399984 RET
	0x03399988 STP X30, X21, [X31 - 0x20]!
	0x0339998C STP X20, X19, [X31 + 0x10]
	0x03399990 ADRP X21, 0x1044000
	0x03399994 LDRB W8, [X21 + 0xC0]
	0x03399998 MOV X20, X1
	0x0339999C MOV X19, X0
	0x033999A0 TBNZ X8, 0x0, 0x33999B8
	0x033999A4 ADRP X0, 0xD62000
	0x033999A8 LDR X0, [X0 + 0x720]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X2
	006 Move X2, X3
	007 Move X20, X0
	008 Call SystemException..ctor, X0, X1, X2
	009 Move W8, 0x1534
	010 NotImplemented "Instruction MOVK not yet implemented."
	011 Move [X20+144], X19
	012 Move [X20+96], W8
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Return 

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x033999AC BL 0x1C16CF4
	0x033999B0 MOVZ W8, 0x1
	0x033999B4 STRB W8, [X21 + 0xC0]
	0x033999B8 CBZ X20, 0x33999F4
	0x033999BC ADRP X8, 0xD62000
	0x033999C0 LDR X8, [X8 + 0x720]
	0x033999C4 LDR X9, [X20]
	0x033999C8 LDR X8, [X8]
	0x033999CC CMP X9, X8
	0x033999D0 B.NE 0x3399A0C
	0x033999D4 MOV X0, X20
	0x033999D8 BL 0x1C16E08
	0x033999DC LDR W8, [X0]
	0x033999E0 LDR W9, [X19]
	0x033999E4 CMP W9, W8
	0x033999E8 B.CS 0x33999FC
	0x033999EC MOVN W0, 0x0
	0x033999F0 B 0x3399A00
	0x033999F4 MOVZ W0, 0x1
	0x033999F8 B 0x3399A00
	0x033999FC CSET W0, HI
	0x03399A00 LDP X20, X19, [X31 + 0x10]
	0x03399A04 LDP X30, X21, [X31], #0x20
	0x03399A08 RET
	0x03399A0C ADRP X0, 0xD62000
	0x03399A10 LDR X0, [X0 + 0x578]
	0x03399A14 BL 0x1C16D08
	0x03399A18 BL 0x1C16F10
	0x03399A1C MOV X19, X0
	0x03399A20 ADRP X0, 0xD92000
	0x03399A24 LDR X0, [X0 + 0x598]
	0x03399A28 BL 0x1C16D08
	0x03399A2C MOV X1, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1045000
	008 Move W8, [X23+167]
	009 Move X21, X3
	010 Move X22, X2
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xD93000
	018 Move X0, [X0+1392]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+167], W8
	022 Move X0, X19
	023 Move X1, X20
	024 Move X2, X22
	025 Move X3, X21
	026 Call SystemException..ctor, X0, X1, X2
	027 Compare X20, 0
	028 JumpIfEqual {43}
	029 Move X8, 0xD93000
	030 Move X8, [X8+1392]
	031 Move X0, X20
	032 Move X2, X31
	033 Move X1, [X8]
	034 Call SerializationInfo.GetString, X0, X1
	035 Move [X19+144], X0
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Move X23, [X31+56]
	042 Return 
	043 Call 0x1C17F20

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03399A30 MOV X0, X19
	0x03399A34 MOV X2, X31
	0x03399A38 BL 0x3314A68
	0x03399A3C ADRP X0, 0xD92000
	0x03399A40 LDR X0, [X0 + 0x5A0]
	0x03399A44 BL 0x1C16D08
	0x03399A48 MOV X1, X0
	0x03399A4C MOV X0, X19
	0x03399A50 BL 0x1C16DEC
	0x03399A54 LDR W8, [X0]
	0x03399A58 CMP W8, W1
	0x03399A5C B.CS 0x3399A68
	0x03399A60 MOVN W0, 0x0
	0x03399A64 RET
	0x03399A68 CSET W0, HI
	0x03399A6C RET
	0x03399A70 STP X30, X21, [X31 - 0x20]!
	0x03399A74 STP X20, X19, [X31 + 0x10]
	0x03399A78 ADRP X21, 0x1044000
	0x03399A7C LDRB W8, [X21 + 0xC1]
	0x03399A80 MOV X19, X1
	0x03399A84 MOV X20, X0
	0x03399A88 TBNZ X8, 0x0, 0x3399AA0
	0x03399A8C ADRP X0, 0xD62000
	0x03399A90 LDR X0, [X0 + 0x720]
	0x03399A94 BL 0x1C16CF4
	0x03399A98 MOVZ W8, 0x1
	0x03399A9C STRB W8, [X21 + 0xC1]
	0x03399AA0 CBZ X19, 0x3399ABC
	0x03399AA4 ADRP X8, 0xD62000
	0x03399AA8 LDR X8, [X8 + 0x720]
	0x03399AAC LDR X9, [X19]
	0x03399AB0 LDR X8, [X8]
	0x03399AB4 CMP X9, X8
	0x03399AB8 B.EQ 0x3399AC4
	0x03399ABC MOV W0, W31
	0x03399AC0 B 0x3399ADC
	0x03399AC4 LDR W20, [X20]
	0x03399AC8 MOV X0, X19
	0x03399ACC BL 0x1C16E08
	0x03399AD0 LDR W8, [X0]
	0x03399AD4 CMP W20, W8
	0x03399AD8 CSET W0, EQ
	0x03399ADC LDP X20, X19, [X31 + 0x10]
	0x03399AE0 LDP X30, X21, [X31], #0x20
	0x03399AE4 RET
	0x03399AE8 LDR W8, [X0]
	0x03399AEC CMP W8, W1
	0x03399AF0 CSET W0, EQ
	0x03399AF4 RET
	0x03399AF8 LDR W0, [X0]
	0x03399AFC RET
	0x03399B00 STR X30, [X31 - 0x30]!
	0x03399B04 STP X22, X21, [X31 + 0x10]
	0x03399B08 STP X20, X19, [X31 + 0x20]
	0x03399B0C ADRP X22, 0x1044000
	0x03399B10 ADRP X20, 0xD89000
	0x03399B14 ADRP X21, 0xD8F000
	0x03399B18 LDRB W8, [X22 + 0xC2]
	0x03399B1C LDR X20, [X20 + 0x1D8]
	0x03399B20 LDR X21, [X21 + 0x78]
	0x03399B24 MOV X19, X0
	0x03399B28 TBNZ X8, 0x0, 0x3399B4C
	0x03399B2C ADRP X0, 0xD8F000
	0x03399B30 LDR X0, [X0 + 0x78]
	0x03399B34 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1045000
	008 Move W8, [X23+168]
	009 Move X21, X3
	010 Move X22, X2
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xD83000
	018 Move X0, [X0+2912]
	019 Call 0x1C17CF4
	020 Move X0, 0xD5B000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move X0, 0xD93000
	024 Move X0, [X0+1392]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+168], W8
	028 Move X0, X20
	029 Move X1, X19
	030 Move X2, X22
	031 Move X3, X21
	032 Move X4, X31
	033 Call Exception.GetObjectData, X0, X1, X2
	034 Move X21, 0x1045000
	035 Move W8, [X21+169]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {45}
	040 Move X0, 0xD5D000
	041 Move X0, [X0+632]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+169], W8
	045 Move X8, 0xD83000
	046 Move X9, 0xD5B000
	047 Move X20, [X20+144]
	048 Move X8, [X8+2912]
	049 Move X9, [X9+1728]
	050 Compare X20, 0
	051 JumpIfNotEqual {57}
	052 Move X10, 0xD5D000
	053 Move X10, [X10+632]
	054 Move X10, [X10]
	055 Move X10, [X10+184]
	056 Move X20, [X10]
	057 Move X0, [X9]
	058 Move X21, [X8]
	059 Move W9, [X0+224]
	060 Compare W9, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X21
	064 Call Type.GetTypeFromHandle, X0
	065 Compare X19, 0
	066 JumpIfEqual {82}
	067 Move X8, 0xD93000
	068 Move X8, [X8+1392]
	069 Move X3, X0
	070 Move X0, X19
	071 Move X2, X20
	072 Move X1, [X8]
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X4, X31
	078 Move X30, [X31+48]
	079 Move X23, [X31+56]
	080 Call SerializationInfo.AddValue, X0, X1, X2, X3
	081 Return 
	082 Call 0x1C17F20

Method: System.String get_TypeName()

Disassembly:
	0x03399B38 ADRP X0, 0xD89000
	0x03399B3C LDR X0, [X0 + 0x1D8]
	0x03399B40 BL 0x1C16CF4
	0x03399B44 MOVZ W8, 0x1
	0x03399B48 STRB W8, [X22 + 0xC2]
	0x03399B4C LDR X1, [X20]
	0x03399B50 LDR W19, [X19]
	0x03399B54 MOV X0, X31
	0x03399B58 BL 0x25BF134
	0x03399B5C MOV X20, X0
	0x03399B60 LDR X0, [X21]
	0x03399B64 MOV X21, X1
	0x03399B68 LDR W8, [X0 + 0xE0]
	0x03399B6C CBNZ W8, 0x3399B74
	0x03399B70 BL 0x1C16DFC
	0x03399B74 MOV W0, W19
	0x03399B78 MOV X1, X20
	0x03399B7C MOV X2, X21
	0x03399B80 LDP X20, X19, [X31 + 0x20]
	0x03399B84 LDP X22, X21, [X31 + 0x10]
	0x03399B88 MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1045000
	005 Move W8, [X20+169]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD5D000
	012 Move X0, [X0+632]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+169], W8
	016 Move X0, [X19+144]
	017 Compare X0, 0
	018 JumpIfNotEqual {24}
	019 Move X8, 0xD5D000
	020 Move X8, [X8+632]
	021 Move X8, [X8]
	022 Move X8, [X8+184]
	023 Move X0, [X8]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return X0

