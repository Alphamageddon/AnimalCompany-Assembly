Type: System.Number

Method: System.String FormatDecimal(System.Decimal value, System.ReadOnlySpan`1<System.Char> format, System.Globalization.NumberFormatInfo info)

Disassembly:
	0x0338156C LDR W8, [X22 + 0x10]
	0x03381570 CMP W27, W8
	0x03381574 B.GE 0x33815A4
	0x03381578 CMP W27, W8
	0x0338157C B.CS 0x3382158
	0x03381580 LDR X24, [X22 + 0x8]
	0x03381584 MOV X0, X25
	0x03381588 MOV W1, W31
	0x0338158C MOV X2, X31
	0x03381590 BL 0x3222A1C
	0x03381594 ADD W8, W27, 0x1
	0x03381598 STRH W0, [X24, X27, LSL #1]
	0x0338159C STR W8, [X22 + 0x18]
	0x033815A0 B 0x33815B4
	0x033815A4 MOV X0, X22
	0x033815A8 MOV X1, X25
	0x033815AC MOV X2, X31
	0x033815B0 BL 0x3241020
	0x033815B4 ADRP X8, 0xDA1000
	0x033815B8 LDR X8, [X8 + 0x20]
	0x033815BC LDUR X0, [X29 - 0x28]
	0x033815C0 MOV X1, X20
	0x033815C4 LDR X2, [X8]
	0x033815C8 BL 0x2218CF8
	0x033815CC LDUR W8, [X29 - 0x38]
	0x033815D0 STUR X0, [X29 - 0x58]
	0x033815D4 CMP W8, W20
	0x033815D8 B.GE 0x3381FF8
	0x033815DC LDUR W8, [X29 - 0x3C]
	0x033815E0 LDUR X23, [X29 - 0x30]
	0x033815E4 STUR W31, [X29 - 0x7C]
	0x033815E8 EOR W8, W8, 0x1
	0x033815EC STUR W8, [X29 - 0x28]
	0x033815F0 SUB W8, W20, 0x2
	0x033815F4 STUR W8, [X29 - 0x8C]
	0x033815F8 MOV W8, W20
	0x033815FC SXTW X8, W8
	0x03381600 STUR X8, [X29 - 0x88]
	0x03381604 LDUR W8, [X29 - 0x38]
	0x03381608 LDUR X9, [X29 - 0x58]
	0x0338160C LDRH W26, [X9, W8, SXTW]
	0x03381610 CMP W26, 0x3B
	0x03381614 B.EQ 0x3381FF8
	0x03381618 CBZ W26, 0x3381FF8
	0x0338161C LDUR W24, [X29 - 0x4C]
	0x03381620 CMP W24, 0x1
	0x03381624 B.LT 0x33817BC
	0x03381628 CMP W26, 0x30
	0x0338162C B.HI 0x33817BC
	0x03381630 MOV W8, W26
	0x03381634 MOVZ W9, 0x1
	0x03381638 LSLV X8, X9, X8
	0x0338163C MOVZ X9, 0x4008
	0x03381640 MOVK X9, 0x10000
	0x03381644 ANDS X31, X8, X9, 0x0
	0x03381648 B.EQ 0x33817BC
	0x0338164C LDUR X21, [X29 - 0x48]
	0x03381650 LDUR W25, [X29 - 0x28]
	0x03381654 SUB W8, W28, W24
	0x03381658 ADD W24, W24, 0x1
	0x0338165C STUR W8, [X29 - 0x3C]
	0x03381660 MOV X8, X23
	0x03381664 LDRH W9, [X8], #0x2
	0x03381668 ADRP X10, 0x105B000
	0x0338166C LDRB W10, [X10 + 0x4E2]
	0x03381670 MOVZ W11, 0x30
	0x03381674 CMP W9, 0x0
	0x03381678 CSEL W27, W11, W9, EQ
	0x0338167C CSEL X23, X23, X8, EQ
	0x03381680 CBNZ W10, 0x338169C
	0x03381684 ADRP X0, 0xDA1000
	0x03381688 LDR X0, [X0 + 0x588]
	0x0338168C BL 0x1C16CF4
	0x03381690 ADRP X8, 0x105B000
	0x03381694 MOVZ W9, 0x1
	0x03381698 STRB W9, [X8 + 0x4E2]
	0x0338169C LDRSW X8, [X22 + 0x18]
	0x033816A0 LDR W9, [X22 + 0x10]
	0x033816A4 CMP W8, W9
	0x033816A8 B.GE 0x33816C8
	0x033816AC CMP W8, W9
	0x033816B0 B.CS 0x3382158
	0x033816B4 LDR X9, [X22 + 0x8]
	0x033816B8 ADD W10, W8, 0x1
	0x033816BC STRH W27, [X9, X8, LSL #1]
	0x033816C0 STR W10, [X22 + 0x18]
	0x033816C4 B 0x33816D8
	0x033816C8 MOV X0, X22
	0x033816CC MOV W1, W27
	0x033816D0 MOV X2, X31
	0x033816D4 BL 0x3240EF4
	0x033816D8 CMP W28, 0x2
	0x033816DC CSET W8, LT
	0x033816E0 TBNZ X19, 0x1F, 0x33817A0
	0x033816E4 ORR W8, W8, W25, 0x0
	0x033816E8 TBNZ X8, 0x0, 0x33817A0
	0x033816EC LDUR W8, [X29 - 0x10]
	0x033816F0 CMP W19, W8
	0x033816F4 B.CS 0x3382158
	0x033816F8 LDUR X8, [X29 - 0x18]
	0x033816FC LDR W8, [X8, W19, UXTW]
	0x03381700 ADD W8, W8, 0x1
	0x03381704 CMP W28, W8
	0x03381708 B.NE 0x33817A0
	0x0338170C CBZ X21, 0x338215C
	0x03381710 ADRP X8, 0x105C000
	0x03381714 LDRB W8, [X8 + 0x4]
	0x03381718 LDR X27, [X21 + 0x40]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 208
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X25+40]
	017 Move X24, 0x105C000
	018 Move X26, 0xDA8000
	019 Move X19, X4
	020 Move [X29-24], X8
	021 Move W8, [X24+4020]
	022 Move X26, [X26+120]
	023 Move X20, X3
	024 Move X21, X2
	025 Move X22, X1
	026 Move X23, X0
	027 Subtract X27, X29, 160
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {40}
	032 Move X0, 0xDA8000
	033 Move X0, [X0+120]
	034 Call 0x1C17CF4
	035 Move X0, 0xDA2000
	036 Move X0, [X0+1256]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X24+4020], W8
	040 Move X0, [X26]
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 Move [X29-164], W31
	043 Move [X27+106], V0
	044 Move [X29-80], V0
	045 Move [X29-72], V0
	046 Move [X29-112], V0
	047 Move [X29-104], V0
	048 Move [X29-144], V0
	049 Move [X29-136], V0
	050 Move [X29-160], V0
	051 Move [X29-208], V0
	052 Move [X29-200], V0
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Subtract X2, X29, 164
	058 Move X0, X21
	059 Move X1, X20
	060 Call Number.ParseFormatSpecifier, X0, X1
	061 Move W24, W0
	062 And W28, W0, 0xFFFF
	063 NotImplemented "Instruction MOVI not yet implemented."
	064 Subtract X2, X29, 160
	065 Move X0, X23
	066 Move X1, X22
	067 Move [X29-160], V0
	068 Move [X29-152], V0
	069 Move [X29-128], V0
	070 Move [X29-120], V0
	071 Move [X29-96], V0
	072 Move [X29-88], V0
	073 Move [X29-64], V0
	074 Move [X27+106], V0
	075 Call Number.DecimalToNumber, X0, X1
	076 Add X8, X31, 0
	077 Subtract X1, X8, 64
	078 Add X31, X1, 0
	079 NotImplemented "Instruction MOVI not yet implemented."
	080 Subtract X0, X29, 208
	081 Move W2, 32
	082 Move X3, X31
	083 Move [X8-32], V0
	084 Move [X8-24], V0
	085 Move [X8-64], V0
	086 Move [X8-56], V0
	087 Call ValueStringBuilder..ctor, X0, X1
	088 Compare W28, 0
	089 JumpIfEqual {103}
	090 Move X0, [X26]
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Subtract X0, X29, 208
	097 Subtract X1, X29, 160
	098 Move W5, 1
	099 Move W2, W24
	100 Move W3, W20
	101 Move X4, X19
	102 Call Number.NumberToString, X0, X1, X2, X3, X4, X5
	103 Move X0, [X26]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Subtract X0, X29, 208
	109 Subtract X1, X29, 160
	110 Move X2, X21
	111 Move X3, X20
	112 Move X4, X19
	113 Call Number.NumberToStringFormat, X0, X1, X2, X3
	114 Subtract X0, X29, 208
	115 Move X1, X31
	116 Call ValueStringBuilder.ToString, X0
	117 Move X8, [X25+40]
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Add X31, X29, 0
	121 Move X20, [X31+80]
	122 Move X19, [X31+88]
	123 Move X22, [X31+64]
	124 Move X21, [X31+72]
	125 Move X24, [X31+48]
	126 Move X23, [X31+56]
	127 Move X26, [X31+32]
	128 Move X25, [X31+40]
	129 Move X28, [X31+16]
	130 Move X27, [X31+24]
	131 Move X29, [X31+96]
	132 Move X30, [X31+104]
	133 Return X0
	134 Call 0x3EB2B20

Method: System.Boolean TryFormatDecimal(System.Decimal value, System.ReadOnlySpan`1<System.Char> format, System.Globalization.NumberFormatInfo info, System.Span`1<System.Char> destination, out System.Int32 charsWritten)

Disassembly:
	0x03383164 LDR X8, [X8 + 0x40]
	0x03383168 CBZ X8, 0x3383288
	0x0338316C LDR W10, [X8 + 0x18]
	0x03383170 MOVZ W9, 0x15
	0x03383174 AND W9, W9, W23, 0x1F
	0x03383178 ADD W9, W21, W9
	0x0338317C CMP W9, W10
	0x03383180 B.CS 0x338328C
	0x03383184 ADD X8, X8, W9, 0x3, SXTW
	0x03383188 LDR W9, [X0 + 0xE0]
	0x0338318C LDR X21, [X8 + 0x20]
	0x03383190 CBNZ W9, 0x3383198
	0x03383194 BL 0x1C16DFC
	0x03383198 ADD X2, X31, 0xC
	0x0338319C MOV X0, X20
	0x033831A0 MOV X1, X21
	0x033831A4 BL 0x338B3A8
	0x033831A8 MOV X20, X0
	0x033831AC TBZ X20, 0xA, 0x33831DC
	0x033831B0 UBFM X8, X20, 0xB, 0xB
	0x033831B4 ADD X8, X20, X8
	0x033831B8 ADD X8, X8, 0x3FF
	0x033831BC CMP X8, X20
	0x033831C0 MOV X20, X8
	0x033831C4 B.CS 0x33831DC
	0x033831C8 LDR W9, [X31 + 0xC]
	0x033831CC MOVZ X20, 0x80000000
	0x033831D0 BFM X20, X8, 0x1, 0x3F
	0x033831D4 ADD W8, W9, 0x1
	0x033831D8 STR W8, [X31 + 0xC]
	0x033831DC LDR W8, [X31 + 0xC]
	0x033831E0 ADD W9, W8, 0x3FE
	0x033831E4 CMP W9, 0x0
	0x033831E8 B.LE 0x3383210
	0x033831EC CMP W9, 0x7FE
	0x033831F0 B.GT 0x3383230
	0x033831F4 UBFM X20, X20, 0xB, 0x3F
	0x033831F8 BFM X20, X9, 0xC, 0xB
	0x033831FC B 0x3383254
	0x03383200 CMP W23, 0x0
	0x03383204 MOVZ X8, 0x7FF00000
	0x03383208 CSEL X20, X8, X31, GT
	0x0338320C B 0x3383254
	0x03383210 MOVZ X10, 0x58
	0x03383214 MOVK X10, 0x80000000
	0x03383218 CMP X20, X10
	0x0338321C B.CC 0x3383238
	0x03383220 ADDS W31, W9, 0x34
	0x03383224 B.NE 0x3383238
	0x03383228 MOVZ W20, 0x1
	0x0338322C B 0x3383254
	0x03383230 MOVZ X20, 0x7FF00000
	0x03383234 B 0x3383254
	0x03383238 ADDS W31, W9, 0x33
	0x0338323C B.LT 0x3383250
	0x03383240 MOVN W9, 0x3F1
	0x03383244 SUB X8, X9, X8
	0x03383248 LSRV X20, X20, X8
	0x0338324C B 0x3383254
	0x03383250 MOV X20, X31
	0x03383254 MOV X0, X19
	0x03383258 MOV X1, X31
	0x0338325C BL 0x338C38C
	0x03383260 ORR X8, X20, 0xFFFFFFFFFFFFFFFF
	0x03383264 ANDS W31, W0, 0x1
	0x03383268 CSEL X8, X8, X20, NE
	0x0338326C FMOV D0, X8
	0x03383270 LDP X20, X19, [X31 + 0x40]
	0x03383274 LDP X22, X21, [X31 + 0x30]
	0x03383278 LDP X24, X23, [X31 + 0x20]
	0x0338327C LDP X30, X25, [X31 + 0x10]
	0x03383280 ADD X31, X31, 0x50
	0x03383284 RET
	0x03383288 BL 0x1C16F20
	0x0338328C BL 0x1C16F28
	0x03383290 STR D8, [X31 - 0x40]!
	0x03383294 STP X29, X30, [X31 + 0x8]
	0x03383298 STR X23, [X31 + 0x18]
	0x0338329C STP X22, X21, [X31 + 0x20]
	0x033832A0 STP X20, X19, [X31 + 0x30]
	0x033832A4 ADD X29, X31, 0x8
	0x033832A8 SUB X31, X31, 0x30
	0x033832AC MRS X22, 0xC000
	0x033832B0 LDR X8, [X22 + 0x28]
	0x033832B4 ADRP X21, 0x1059000
	0x033832B8 MOV X19, X1
	0x033832BC MOV X20, X0
	0x033832C0 STUR X8, [X29 - 0x10]
	0x033832C4 LDRB W8, [X21 + 0xFBA]
	0x033832C8 MOV V8.16B, V0.16B
	0x033832CC TBNZ X8, 0x0, 0x33832F0
	0x033832D0 ADRP X0, 0xDA5000
	0x033832D4 LDR X0, [X0 + 0x78]
	0x033832D8 BL 0x1C16CF4
	0x033832DC ADRP X0, 0xD9F000
	0x033832E0 LDR X0, [X0 + 0x4E8]
	0x033832E4 BL 0x1C16CF4
	0x033832E8 MOVZ W8, 0x1
	0x033832EC STRB W8, [X21 + 0xFBA]
	0x033832F0 ADD X8, X31, 0x0
	0x033832F4 MOVI V0.2D, 0x0
	0x033832F8 SUB X1, X8, 0x40
	0x033832FC STUR V0, [X29 - 0x28]
	0x03383300 STUR V0, [X29 - 0x38]
	0x03383304 ADD X31, X1, 0x0
	0x03383308 SUB X0, X29, 0x38
	0x0338330C MOVZ W2, 0x20
	0x03383310 MOV X3, X31
	0x03383314 STP V0, V0, [X8 - 0x20]
	0x03383318 STP V0, V0, [X8 - 0x40]
	0x0338331C BL 0x3240C88
	0x03383320 ADRP X21, 0x1056000
	0x03383324 LDRB W8, [X21 + 0x762]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 240
	015 Move [X29-224], X6
	016 Move [X29-216], X7
	017 Move [X29-232], X5
	018 NotImplemented "Instruction MRS not yet implemented."
	019 Move X8, [X28+40]
	020 Move X27, 0x105A000
	021 Move X19, 0xDA6000
	022 Move X22, X4
	023 Move [X29-24], X8
	024 Move W8, [X27+4021]
	025 Move X19, [X19+120]
	026 Move X23, X3
	027 Move X24, X2
	028 Move X25, X1
	029 Move X26, X0
	030 Subtract X20, X29, 160
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {43}
	035 Move X0, 0xDA6000
	036 Move X0, [X0+120]
	037 Call 0x1C17CF4
	038 Move X0, 0xDA0000
	039 Move X0, [X0+1256]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X27+4021], W8
	043 Move X0, [X19]
	044 NotImplemented "Instruction MOVI not yet implemented."
	045 Move [X29-164], W31
	046 Move [X20+106], V0
	047 Move [X29-80], V0
	048 Move [X29-72], V0
	049 Move [X29-112], V0
	050 Move [X29-104], V0
	051 Move [X29-144], V0
	052 Move [X29-136], V0
	053 Move [X29-160], V0
	054 Move [X29-208], V0
	055 Move [X29-200], V0
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Subtract X2, X29, 164
	061 Move X0, X24
	062 Move X1, X23
	063 Call Number.ParseFormatSpecifier, X0, X1
	064 Move W27, W0
	065 And W21, W0, 0xFFFF
	066 NotImplemented "Instruction MOVI not yet implemented."
	067 Subtract X2, X29, 160
	068 Move X0, X26
	069 Move X1, X25
	070 Move [X29-160], V0
	071 Move [X29-152], V0
	072 Move [X29-128], V0
	073 Move [X29-120], V0
	074 Move [X29-96], V0
	075 Move [X29-88], V0
	076 Move [X29-64], V0
	077 Move [X20+106], V0
	078 Call Number.DecimalToNumber, X0, X1
	079 Add X8, X31, 0
	080 Subtract X1, X8, 64
	081 Add X31, X1, 0
	082 NotImplemented "Instruction MOVI not yet implemented."
	083 Subtract X0, X29, 208
	084 Move W2, 32
	085 Move X3, X31
	086 Move [X8-32], V0
	087 Move [X8-24], V0
	088 Move [X8-64], V0
	089 Move [X8-56], V0
	090 Call ValueStringBuilder..ctor, X0, X1
	091 Compare W21, 0
	092 JumpIfEqual {106}
	093 Move X0, [X19]
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Subtract X0, X29, 208
	100 Subtract X1, X29, 160
	101 Move W5, 1
	102 Move W2, W27
	103 Move W3, W23
	104 Move X4, X22
	105 Call Number.NumberToString, X0, X1, X2, X3, X4, X5
	106 Move X0, [X19]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Subtract X0, X29, 208
	112 Subtract X1, X29, 160
	113 Move X2, X24
	114 Move X3, X23
	115 Move X4, X22
	116 Call Number.NumberToStringFormat, X0, X1, X2, X3
	117 Move X1, [X29-232]
	118 Move X2, [X29-224]
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 Subtract X0, X29, 208
	121 Move X4, X31
	122 Call ValueStringBuilder.TryCopyTo, X0, X1, X2
	123 Move X8, [X28+40]
	124 NotImplemented "Instruction LDUR not yet implemented."
	125 NotImplemented "Instruction CMP not yet implemented."
	126 And W0, W0, 1
	127 Add X31, X29, 0
	128 Move X20, [X31+80]
	129 Move X19, [X31+88]
	130 Move X22, [X31+64]
	131 Move X21, [X31+72]
	132 Move X24, [X31+48]
	133 Move X23, [X31+56]
	134 Move X26, [X31+32]
	135 Move X25, [X31+40]
	136 Move X28, [X31+16]
	137 Move X27, [X31+24]
	138 Move X29, [X31+96]
	139 Move X30, [X31+104]
	140 Return X0
	141 Call 0x3EB2B20

Method: System.Void DecimalToNumber(System.Decimal value, ref System.Number/NumberBuffer number)

Disassembly:
	0x03381860 B.GE 0x3381880
	0x03381864 CMP W8, W9
	0x03381868 B.CS 0x3382158
	0x0338186C LDR X9, [X22 + 0x8]
	0x03381870 ADD W10, W8, 0x1
	0x03381874 STRH W27, [X9, X8, LSL #1]
	0x03381878 STR W10, [X22 + 0x18]
	0x0338187C B 0x3381890
	0x03381880 MOV X0, X22
	0x03381884 MOV W1, W27
	0x03381888 MOV X2, X31
	0x0338188C BL 0x3240EF4
	0x03381890 MOVZ X8, 0x1
	0x03381894 ADD X24, X24, X8
	0x03381898 SUB W21, W21, 0x1
	0x0338189C SUBS X25, X25, 0x1
	0x033818A0 ADD X28, X28, 0x2
	0x033818A4 B.NE 0x3381820
	0x033818A8 B 0x3381FF8
	0x033818AC CMP W26, 0x5C
	0x033818B0 B.EQ 0x338195C
	0x033818B4 CMP W26, 0x65
	0x033818B8 B.EQ 0x33819DC
	0x033818BC MOVZ W8, 0x2030
	0x033818C0 CMP W26, W8
	0x033818C4 B.NE 0x3381A10
	0x033818C8 CBZ X21, 0x338215C
	0x033818CC ADRP X8, 0x105C000
	0x033818D0 LDRB W8, [X8 + 0x4]
	0x033818D4 LDR X26, [X21 + 0x98]
	0x033818D8 CBNZ W8, 0x33818F4
	0x033818DC ADRP X0, 0xDA1000
	0x033818E0 LDR X0, [X0 + 0x588]
	0x033818E4 BL 0x1C16CF4
	0x033818E8 MOVZ W8, 0x1
	0x033818EC ADRP X9, 0x105C000
	0x033818F0 STRB W8, [X9 + 0x4]
	0x033818F4 CBZ X26, 0x338215C
	0x033818F8 LDR W8, [X26 + 0x10]
	0x033818FC CMP W8, 0x1
	0x03381900 B.NE 0x3381948
	0x03381904 LDRSW X21, [X22 + 0x18]
	0x03381908 LDR W8, [X22 + 0x10]
	0x0338190C CMP W21, W8
	0x03381910 B.GE 0x3381948
	0x03381914 CMP W21, W8
	0x03381918 B.CS 0x3382158
	0x0338191C MOV W25, W24
	0x03381920 LDR X24, [X22 + 0x8]
	0x03381924 MOV X0, X26
	0x03381928 MOV W1, W31
	0x0338192C MOV X2, X31
	0x03381930 BL 0x3222A1C
	0x03381934 ADD W8, W21, 0x1
	0x03381938 STRH W0, [X24, X21, LSL #1]
	0x0338193C STR W8, [X22 + 0x18]
	0x03381940 MOV W24, W25
	0x03381944 B 0x3381FE4
	0x03381948 MOV X0, X22
	0x0338194C MOV X1, X26
	0x03381950 MOV X2, X31
	0x03381954 BL 0x3241020
	0x03381958 B 0x3381FE4
	0x0338195C CMP W27, W20
	0x03381960 B.GE 0x3381FE4
	0x03381964 LDUR X8, [X29 - 0x58]
	0x03381968 LDRH W26, [X8, W27, SXTW]
	0x0338196C CBZ W26, 0x3381FE4
	0x03381970 ADRP X8, 0x105B000
	0x03381974 LDRB W8, [X8 + 0x4E2]
	0x03381978 CBNZ W8, 0x3381994
	0x0338197C ADRP X0, 0xDA1000
	0x03381980 LDR X0, [X0 + 0x588]
	0x03381984 BL 0x1C16CF4
	0x03381988 ADRP X8, 0x105B000
	0x0338198C MOVZ W9, 0x1
	0x03381990 STRB W9, [X8 + 0x4E2]
	0x03381994 LDRSW X8, [X22 + 0x18]
	0x03381998 LDR W9, [X22 + 0x10]
	0x0338199C LDUR W10, [X29 - 0x38]
	0x033819A0 CMP W8, W9
	0x033819A4 ADD W27, W10, 0x2
	0x033819A8 B.LT 0x3381A44
	0x033819AC MOV X0, X22
	0x033819B0 MOV W1, W26
	0x033819B4 MOV X2, X31
	0x033819B8 BL 0x3240EF4
	0x033819BC B 0x3381FE4
	0x033819C0 TBNZ X24, 0x1F, 0x3381BC8
	0x033819C4 LDRH W26, [X23]
	0x033819C8 CBZ W26, 0x3381C84
	0x033819CC ADD X23, X23, 0x2
	0x033819D0 B 0x3381C94
	0x033819D4 CMP W26, 0x45
	0x033819D8 B.NE 0x3381A10
	0x033819DC LDUR W8, [X29 - 0x5C]
	0x033819E0 TBZ X8, 0x0, 0x3381A60
	0x033819E4 LDUR W11, [X29 - 0x38]
	0x033819E8 CMP W27, W20
	0x033819EC B.GE 0x3381AB4
	0x033819F0 LDUR X8, [X29 - 0x58]
	0x033819F4 LDRH W8, [X8, W27, SXTW]
	0x033819F8 CMP W8, 0x30
	0x033819FC B.NE 0x3381AB4
	0x03381A00 MOV W5, W31
	0x03381A04 ADD W8, W11, 0x2
	0x03381A08 MOVZ W9, 0x1
	0x03381A0C B 0x3381EC4
	0x03381A10 ADRP X8, 0x105B000
	0x03381A14 LDRB W8, [X8 + 0x4E2]
	0x03381A18 CBNZ W8, 0x3381A34
	0x03381A1C ADRP X0, 0xDA1000
	0x03381A20 LDR X0, [X0 + 0x588]
	0x03381A24 BL 0x1C16CF4
	0x03381A28 ADRP X8, 0x105B000
	0x03381A2C MOVZ W9, 0x1
	0x03381A30 STRB W9, [X8 + 0x4E2]
	0x03381A34 LDRSW X8, [X22 + 0x18]
	0x03381A38 LDR W9, [X22 + 0x10]
	0x03381A3C CMP W8, W9
	0x03381A40 B.GE 0x33819AC
	0x03381A44 CMP W8, W9
	0x03381A48 B.CS 0x3382158
	0x03381A4C LDR X9, [X22 + 0x8]
	0x03381A50 ADD W10, W8, 0x1
	0x03381A54 STRH W26, [X9, X8, LSL #1]
	0x03381A58 STR W10, [X22 + 0x18]
	0x03381A5C B 0x3381FE4
	0x03381A60 ADRP X8, 0x105B000
	0x03381A64 LDRB W8, [X8 + 0x4E2]
	0x03381A68 LDUR W21, [X29 - 0x38]
	0x03381A6C CBNZ W8, 0x3381A88
	0x03381A70 ADRP X0, 0xDA1000
	0x03381A74 LDR X0, [X0 + 0x588]
	0x03381A78 BL 0x1C16CF4
	0x03381A7C ADRP X8, 0x105B000
	0x03381A80 MOVZ W9, 0x1
	0x03381A84 STRB W9, [X8 + 0x4E2]
	0x03381A88 LDRSW X8, [X22 + 0x18]
	0x03381A8C LDR W9, [X22 + 0x10]
	0x03381A90 CMP W8, W9
	0x03381A94 B.GE 0x3381BDC
	0x03381A98 CMP W8, W9

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X22+40]
	014 Move X23, 0x105C000
	015 Move X24, 0xD9B000
	016 Move X19, X2
	017 Move [X31+24], X8
	018 Move W8, [X23+4022]
	019 Move X24, [X24+1520]
	020 Move X20, X1
	021 Move X21, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0xD9B000
	027 Move X0, [X0+1520]
	028 Call 0x1C17CF4
	029 Move X0, 0xDA8000
	030 Move X0, [X0+120]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+4022], W8
	034 Move X0, X19
	035 Move X1, X31
	036 Move [X31+8], X21
	037 Move [X31+16], X20
	038 Call NumberBuffer.get_digits, X0
	039 Move W8, 29
	040 Move [X19], W8
	041 Move X8, [X24]
	042 Move X20, X0
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move X25, 0xDA8000
	049 Move X25, [X25+120]
	050 Add X0, X31, 8
	051 Move X1, X31
	052 Call Decimal.get_IsNegative, X0
	053 And W1, W0, 1
	054 Move X0, X19
	055 Move X2, X31
	056 Call NumberBuffer.set_sign, X0, X1
	057 Add X23, X20, 58
	058 Move W26, 0xCCCD
	059 NotImplemented "Instruction MOVK not yet implemented."
	060 Move TEMP, 9
	061 Not TEMP
	062 Move W27, TEMP
	063 Move X21, X23
	064 Move X0, [X24]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfEqual {73}
	068 Move W8, [X31+20]
	069 Move W9, [X31+12]
	070 Or W8, W9, W8
	071 Compare W8, 0
	072 JumpIfNotEqual {84}
	073 Call 0x1C17DFC
	074 Move X0, [X24]
	075 Move W9, [X31+20]
	076 Move W10, [X31+12]
	077 Move W8, [X0+224]
	078 Or W20, W10, W9
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Compare W20, 0
	083 JumpIfEqual {110}
	084 Add X0, X31, 8
	085 Move X1, X31
	086 Call Decimal.DecDivMod1E9, X0
	087 Move X8, [X25]
	088 Move W20, W0
	089 Move W9, [X8+224]
	090 Compare W9, 0
	091 JumpIfNotEqual {94}
	092 Move X0, X8
	093 Call 0x1C17DFC
	094 Move W8, 7
	095 Move W10, W8
	096 NotImplemented "Instruction UMADDL not yet implemented."
	097 Move W9, W20
	098 Move X20, X8
	099 ShiftRight X20, 35
	100 And X20, X20, 0x7FFFFFFF
	101 NotImplemented "Instruction MADD not yet implemented."
	102 Add W8, W8, 48
	103 NotImplemented "Instruction STRH not yet implemented."
	104 Subtract W8, W10, 1
	105 Move TEMP, X10
	106 And TEMP, TEMP, -2147483648
	107 Compare TEMP, -2147483648
	108 JumpIfNotEqual {95}
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X0, [X25]
	111 Move W20, [X31+16]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Compare W20, 0
	117 JumpIfEqual {141}
	118 Move W8, 0xCCCD
	119 Move TEMP, 1
	120 Not TEMP
	121 Move W10, TEMP
	122 NotImplemented "Instruction MOVK not yet implemented."
	123 Move TEMP, 9
	124 Not TEMP
	125 Move W9, TEMP
	126 Move W12, W10
	127 NotImplemented "Instruction UMADDL not yet implemented."
	128 Move W11, W20
	129 Move X20, X10
	130 ShiftRight X20, 35
	131 And X20, X20, 0x7FFFFFFF
	132 NotImplemented "Instruction MADD not yet implemented."
	133 Add W10, W10, 48
	134 NotImplemented "Instruction STRH not yet implemented."
	135 Subtract W10, W12, 1
	136 Move TEMP, X12
	137 And TEMP, TEMP, -2147483648
	138 Compare TEMP, -2147483648
	139 JumpIfNotEqual {126}
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Subtract X8, X23, X21
	142 NotImplemented "Instruction CMP not yet implemented."
	143 NotImplemented "Instruction CINC not yet implemented."
	144 Add X0, X31, 8
	145 Move X1, X31
	146 Move X20, X8
	147 ShiftRight X20, 1
	148 And X20, X20, 0x7FFFFFFF
	149 Call Decimal.get_Scale, X0
	150 Subtract W8, W20, W0
	151 Move X0, X19
	152 Move X1, X31
	153 Move [X19+4], W8
	154 Call NumberBuffer.get_digits, X0
	155 NotImplemented "Instruction CMP not yet implemented."
	156 NotImplemented "Instruction LDRH not yet implemented."
	157 Subtract W20, W20, 1
	158 NotImplemented "Instruction CMP not yet implemented."
	159 NotImplemented "Instruction STRH not yet implemented."
	160 NotImplemented "Instruction STRH not yet implemented."
	161 Move X8, [X22+40]
	162 Move X9, [X31+24]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move X20, [X31+96]
	165 Move X19, [X31+104]
	166 Move X22, [X31+80]
	167 Move X21, [X31+88]
	168 Move X24, [X31+64]
	169 Move X23, [X31+72]
	170 Move X26, [X31+48]
	171 Move X25, [X31+56]
	172 Move X30, [X31+32]
	173 Move X27, [X31+40]
	174 Add X31, X31, 112
	175 Return 
	176 Call 0x3EB2B20

Method: System.String FormatDouble(System.Double value, System.String format, System.Globalization.NumberFormatInfo info)

Disassembly:
	0x03383374 BL 0x1C16DFC
	0x03383378 SUB X0, X29, 0x38
	0x0338337C MOV V0.16B, V8.16B
	0x03383380 MOV X1, X21
	0x03383384 MOV X2, X20
	0x03383388 MOV X3, X19
	0x0338338C BL 0x33833D0
	0x03383390 CBNZ X0, 0x33833A0
	0x03383394 SUB X0, X29, 0x38
	0x03383398 MOV X1, X31
	0x0338339C BL 0x3240CC4
	0x033833A0 LDR X8, [X22 + 0x28]
	0x033833A4 LDUR X9, [X29 - 0x10]
	0x033833A8 CMP X8, X9
	0x033833AC B.NE 0x33833CC
	0x033833B0 SUB X31, X29, 0x8
	0x033833B4 LDP X20, X19, [X31 + 0x30]
	0x033833B8 LDP X22, X21, [X31 + 0x20]
	0x033833BC LDR X23, [X31 + 0x18]
	0x033833C0 LDP X29, X30, [X31 + 0x8]
	0x033833C4 LDR V8, [X31], #0x40
	0x033833C8 RET
	0x033833CC BL 0x3EB1B20
	0x033833D0 SUB X31, X31, 0x100
	0x033833D4 STR D10, [X31 + 0xA0]
	0x033833D8 STP D9, D8, [X31 + 0xA8]
	0x033833DC STR X30, [X31 + 0xB8]
	0x033833E0 STP X26, X25, [X31 + 0xC0]
	0x033833E4 STP X24, X23, [X31 + 0xD0]
	0x033833E8 STP X22, X21, [X31 + 0xE0]
	0x033833EC STP X20, X19, [X31 + 0xF0]
	0x033833F0 MRS X25, 0xC000
	0x033833F4 LDR X8, [X25 + 0x28]
	0x033833F8 ADRP X23, 0x1059000
	0x033833FC ADRP X26, 0xDA5000
	0x03383400 MOV X19, X3
	0x03383404 STR X8, [X31 + 0x98]
	0x03383408 LDRB W8, [X23 + 0xFBC]
	0x0338340C LDR X26, [X26 + 0x78]
	0x03383410 MOV X21, X2
	0x03383414 MOV X22, X1
	0x03383418 MOV V8.16B, V0.16B
	0x0338341C MOV X20, X0
	0x03383420 TBNZ X8, 0x0, 0x3383438
	0x03383424 ADRP X0, 0xDA5000
	0x03383428 LDR X0, [X0 + 0x78]
	0x0338342C BL 0x1C16CF4
	0x03383430 MOVZ W8, 0x1
	0x03383434 STRB W8, [X23 + 0xFBC]
	0x03383438 LDR X0, [X26]
	0x0338343C MOVI V0.2D, 0x0
	0x03383440 STR W31, [X31 + 0xC]
	0x03383444 STUR V0, [X31 + 0x7A]
	0x03383448 STP V0, V0, [X31 + 0x60]
	0x0338344C STP V0, V0, [X31 + 0x40]
	0x03383450 STP V0, V0, [X31 + 0x20]
	0x03383454 STR V0, [X31 + 0x1]
	0x03383458 LDR W8, [X0 + 0xE0]
	0x0338345C CBNZ W8, 0x3383464
	0x03383460 BL 0x1C16DFC
	0x03383464 ADD X2, X31, 0xC
	0x03383468 MOV X0, X22
	0x0338346C MOV X1, X21
	0x03383470 BL 0x338071C
	0x03383474 AND W8, W0, 0xFFFF
	0x03383478 MOV W23, W0
	0x0338347C MOVI V0.2D, 0x0
	0x03383480 CMP W8, 0x52
	0x03383484 STP V0, V0, [X31 + 0x10]
	0x03383488 STP V0, V0, [X31 + 0x30]
	0x0338348C STP V0, V0, [X31 + 0x50]
	0x03383490 STR V0, [X31 + 0x7]
	0x03383494 STUR V0, [X31 + 0x7A]
	0x03383498 B.HI 0x33834BC
	0x0338349C CMP W8, 0x45
	0x033834A0 B.EQ 0x3383570
	0x033834A4 CMP W8, 0x47
	0x033834A8 B.EQ 0x3383558
	0x033834AC CMP W8, 0x52
	0x033834B0 B.EQ 0x33834D4

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+8], X29
	003 Move [X31+16], X30
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Add X29, X31, 8
	010 Subtract X31, X31, 48
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X22+40]
	013 Move X21, 0x105A000
	014 Move X19, X1
	015 Move X20, X0
	016 Move [X29-16], X8
	017 Move W8, [X21+4023]
	018 Move V8, V0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xDA6000
	024 Move X0, [X0+120]
	025 Call 0x1C17CF4
	026 Move X0, 0xDA0000
	027 Move X0, [X0+1256]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+4023], W8
	031 Add X8, X31, 0
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Subtract X1, X8, 64
	034 Move [X29-40], V0
	035 Move [X29-56], V0
	036 Add X31, X1, 0
	037 Subtract X0, X29, 56
	038 Move W2, 32
	039 Move X3, X31
	040 Move [X8-32], V0
	041 Move [X8-24], V0
	042 Move [X8-64], V0
	043 Move [X8-56], V0
	044 Call ValueStringBuilder..ctor, X0, X1
	045 Move X21, 0x1057000
	046 Move W8, [X21+1890]
	047 Compare W8, 0
	048 JumpIfNotEqual {54}
	049 Move X0, 0xD98000
	050 Move X0, [X0+656]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X21+1890], W8
	054 Move X23, 0xDA6000
	055 Move X23, [X23+120]
	056 Compare X20, 0
	057 JumpIfEqual {63}
	058 Move X0, X20
	059 Move X1, X31
	060 Call String.GetRawStringData, X0
	061 Move W20, [X20+16]
	062 Move X21, X0
	063 Move X21, X31
	064 Move X0, [X23]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Subtract X0, X29, 56
	070 Move V0, V8
	071 Move X1, X21
	072 Move X2, X20
	073 Move X3, X19
	074 Call Number.FormatDouble, X0, V0, X1, X2
	075 Compare X0, 0
	076 JumpIfNotEqual {80}
	077 Subtract X0, X29, 56
	078 Move X1, X31
	079 Call ValueStringBuilder.ToString, X0
	080 Move X8, [X22+40]
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Subtract X31, X29, 8
	084 Move X20, [X31+48]
	085 Move X19, [X31+56]
	086 Move X22, [X31+32]
	087 Move X21, [X31+40]
	088 Move X23, [X31+24]
	089 Move X29, [X31+8]
	090 Move X30, [X31+16]
	091 Move V8, [X31+64]
	092 Return X0
	093 Call 0x3EB2B20

Method: System.Boolean TryFormatDouble(System.Double value, System.ReadOnlySpan`1<System.Char> format, System.Globalization.NumberFormatInfo info, System.Span`1<System.Char> destination, out System.Int32 charsWritten)

Disassembly:
	0x033837A0 CBZ X0, 0x33837D0
	0x033837A4 MOV X22, X0
	0x033837A8 LDR X0, [X26]
	0x033837AC LDR W8, [X0 + 0xE0]
	0x033837B0 CBNZ W8, 0x33837B8
	0x033837B4 BL 0x1C16DFC
	0x033837B8 MOV X0, X22
	0x033837BC MOV X1, X21
	0x033837C0 MOV X2, X20
	0x033837C4 MOV X3, X19
	0x033837C8 BL 0x33828FC
	0x033837CC B 0x33837E8
	0x033837D0 SUB X0, X29, 0x38
	0x033837D4 MOV X1, X21
	0x033837D8 MOV X2, X20
	0x033837DC MOV X3, X19
	0x033837E0 MOV X4, X31
	0x033837E4 BL 0x3240D90
	0x033837E8 LDR X8, [X25 + 0x28]
	0x033837EC LDUR X9, [X29 - 0x10]
	0x033837F0 CMP X8, X9
	0x033837F4 B.NE 0x3383820
	0x033837F8 AND W0, W0, 0x1
	0x033837FC SUB X31, X29, 0x8
	0x03383800 LDP X20, X19, [X31 + 0x50]
	0x03383804 LDP X22, X21, [X31 + 0x40]
	0x03383808 LDP X24, X23, [X31 + 0x30]
	0x0338380C LDP X26, X25, [X31 + 0x20]
	0x03383810 LDR X27, [X31 + 0x18]
	0x03383814 LDP X29, X30, [X31 + 0x8]
	0x03383818 LDR V8, [X31], #0x60
	0x0338381C RET
	0x03383820 BL 0x3EB1B20
	0x03383824 STR X30, [X31 - 0x30]!
	0x03383828 STP X22, X21, [X31 + 0x10]
	0x0338382C STP X20, X19, [X31 + 0x20]
	0x03383830 ADRP X21, 0x1059000
	0x03383834 LDRB W8, [X21 + 0xFCC]
	0x03383838 MOV W20, W1
	0x0338383C MOV W19, W0
	0x03383840 TBNZ X8, 0x0, 0x3383864
	0x03383844 ADRP X0, 0xD70000
	0x03383848 LDR X0, [X0 + 0x5A8]
	0x0338384C BL 0x1C16CF4
	0x03383850 ADRP X0, 0xDA5000
	0x03383854 LDR X0, [X0 + 0x78]
	0x03383858 BL 0x1C16CF4
	0x0338385C MOVZ W8, 0x1
	0x03383860 STRB W8, [X21 + 0xFCC]
	0x03383864 MOVZ W8, 0x869F
	0x03383868 MOVK W8, 0x10000
	0x0338386C UBFM W9, W19, 0x5, 0x1F
	0x03383870 ADD W8, W8, 0x1
	0x03383874 CMP W9, 0xC34
	0x03383878 UDIV W8, W19, W8
	0x0338387C CSEL W9, W8, W19, HI
	0x03383880 ADRP X8, 0xD70000
	0x03383884 LDR X8, [X8 + 0x5A8]
	0x03383888 MOVZ W10, 0x6
	0x0338388C CSINC W21, W10, W31, HI
	0x03383890 CMP W9, 0xA
	0x03383894 B.CC 0x33838D0
	0x03383898 CMP W9, 0x63
	0x0338389C B.HI 0x33838A8
	0x033838A0 ADD W21, W21, 0x1
	0x033838A4 B 0x33838D0
	0x033838A8 CMP W9, 0x3E7
	0x033838AC B.HI 0x33838B8
	0x033838B0 ADD W21, W21, 0x2
	0x033838B4 B 0x33838D0
	0x033838B8 UBFM W9, W9, 0x4, 0x1F
	0x033838BC CMP W9, 0x270
	0x033838C0 B.HI 0x33838CC
	0x033838C4 ADD W21, W21, 0x3
	0x033838C8 B 0x33838D0
	0x033838CC ADD W21, W21, 0x4
	0x033838D0 LDR X0, [X8]
	0x033838D4 LDR W8, [X0 + 0xE0]
	0x033838D8 CBNZ W8, 0x33838E0
	0x033838DC BL 0x1C16DFC
	0x033838E0 CMP W21, W20
	0x033838E4 CSEL W22, W21, W20, GT
	0x033838E8 MOV W0, W22
	0x033838EC MOV X1, X31
	0x033838F0 BL 0x32277A4
	0x033838F4 MOV X21, X0
	0x033838F8 CBZ X0, 0x338390C

ISIL:
	001 Move [X31-96], D8
	002 Move [X31+8], X29
	003 Move [X31+16], X30
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 8
	014 Subtract X31, X31, 48
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X25+40]
	017 Move X27, 0x105A000
	018 Move X26, 0xDA6000
	019 Move X19, X5
	020 Move [X29-16], X8
	021 Move W8, [X27+4024]
	022 Move X26, [X26+120]
	023 Move X20, X4
	024 Move X21, X3
	025 Move X22, X2
	026 Move X23, X1
	027 Move X24, X0
	028 Move V8, V0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {41}
	033 Move X0, 0xDA6000
	034 Move X0, [X0+120]
	035 Call 0x1C17CF4
	036 Move X0, 0xDA0000
	037 Move X0, [X0+1256]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X27+4024], W8
	041 Add X8, X31, 0
	042 NotImplemented "Instruction MOVI not yet implemented."
	043 Subtract X1, X8, 64
	044 Move [X29-40], V0
	045 Move [X29-56], V0
	046 Add X31, X1, 0
	047 Subtract X0, X29, 56
	048 Move W2, 32
	049 Move X3, X31
	050 Move [X8-32], V0
	051 Move [X8-24], V0
	052 Move [X8-64], V0
	053 Move [X8-56], V0
	054 Call ValueStringBuilder..ctor, X0, X1
	055 Move X0, [X26]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Subtract X0, X29, 56
	061 Move V0, V8
	062 Move X1, X24
	063 Move X2, X23
	064 Move X3, X22
	065 Call Number.FormatDouble, X0, V0, X1, X2
	066 Compare X0, 0
	067 JumpIfEqual {79}
	068 Move X22, X0
	069 Move X0, [X26]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X0, X22
	075 Move X1, X21
	076 Move X2, X20
	077 Move X3, X19
	078 Call Number.TryCopyTo, X0, X1, X2
	079 Subtract X0, X29, 56
	080 Move X1, X21
	081 Move X2, X20
	082 Move X3, X19
	083 Move X4, X31
	084 Call ValueStringBuilder.TryCopyTo, X0, X1, X2
	085 Move X8, [X25+40]
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 And W0, W0, 1
	089 Subtract X31, X29, 8
	090 Move X20, [X31+80]
	091 Move X19, [X31+88]
	092 Move X22, [X31+64]
	093 Move X21, [X31+72]
	094 Move X24, [X31+48]
	095 Move X23, [X31+56]
	096 Move X26, [X31+32]
	097 Move X25, [X31+40]
	098 Move X27, [X31+24]
	099 Move X29, [X31+8]
	100 Move X30, [X31+16]
	101 Move V8, [X31+96]
	102 Return X0
	103 Call 0x3EB2B20

Method: System.String FormatDouble(ref System.Text.ValueStringBuilder sb, System.Double value, System.ReadOnlySpan`1<System.Char> format, System.Globalization.NumberFormatInfo info)

Disassembly:
	0x033834B4 MOVZ W24, 0x7
	0x033834B8 B 0x3383584
	0x033834BC CMP W8, 0x65
	0x033834C0 B.EQ 0x3383570
	0x033834C4 CMP W8, 0x67
	0x033834C8 B.EQ 0x3383558
	0x033834CC CMP W8, 0x72
	0x033834D0 B.NE 0x33834B4
	0x033834D4 LDR X0, [X26]
	0x033834D8 LDR W8, [X0 + 0xE0]
	0x033834DC CBNZ W8, 0x33834E4
	0x033834E0 BL 0x1C16DFC
	0x033834E4 FCVT S9, S8
	0x033834E8 ADD X1, X31, 0x10
	0x033834EC MOVZ W0, 0x7
	0x033834F0 MOV V0.16B, V9.16B
	0x033834F4 BL 0x33829D0
	0x033834F8 LDR W8, [X31 + 0x14]
	0x033834FC MOVN W9, 0x80000000
	0x03383500 CMP W8, W9
	0x03383504 B.EQ 0x3383644
	0x03383508 MOVZ W9, 0x80000000
	0x0338350C CMP W8, W9
	0x03383510 B.EQ 0x33835C0
	0x03383514 LDR X0, [X26]
	0x03383518 LDR W8, [X0 + 0xE0]
	0x0338351C CBNZ W8, 0x3383524
	0x03383520 BL 0x1C16DFC
	0x03383524 ADD X0, X31, 0x10
	0x03383528 BL 0x3382DB0
	0x0338352C LDR X0, [X26]
	0x00000000 INVALID
	0x03383534 LDR W8, [X0 + 0xE0]
	0x03383538 CBNZ W8, 0x3383540
	0x0338353C BL 0x1C16DFC
	0x03383540 ADD X1, X31, 0x10
	0x03383544 FCMP S10, S8
	0x03383548 B.NE 0x3383660
	0x0338354C MOVZ W2, 0x47
	0x03383550 MOVZ W3, 0x7
	0x03383554 B 0x3383678
	0x03383558 LDR W8, [X31 + 0xC]
	0x0338355C MOVZ W9, 0x7
	0x03383560 CMP W8, 0x7
	0x03383564 MOVZ W8, 0x9
	0x03383568 CSEL W24, W8, W9, GT
	0x0338356C B 0x3383584
	0x03383570 LDR W8, [X31 + 0xC]
	0x03383574 MOVZ W9, 0x9
	0x03383578 CMP W8, 0x7
	0x0338357C MOVZ W8, 0x7
	0x03383580 CSEL W24, W8, W9, LT
	0x03383584 LDR X0, [X26]
	0x03383588 LDR W8, [X0 + 0xE0]
	0x0338358C CBNZ W8, 0x3383594
	0x03383590 BL 0x1C16DFC
	0x03383594 FCVT S0, S8
	0x03383598 ADD X1, X31, 0x10
	0x0338359C MOV W0, W24
	0x033835A0 BL 0x33829D0
	0x033835A4 LDR W8, [X31 + 0x14]
	0x033835A8 MOVN W9, 0x80000000
	0x033835AC CMP W8, W9
	0x033835B0 B.EQ 0x33835CC
	0x033835B4 MOVZ W9, 0x80000000
	0x033835B8 CMP W8, W9
	0x033835BC B.NE 0x33835E8
	0x033835C0 CBZ X19, 0x33836C0
	0x033835C4 LDR X0, [X19 + 0x68]
	0x033835C8 B 0x338368C
	0x033835CC ADD X0, X31, 0x10
	0x033835D0 MOV X1, X31
	0x033835D4 BL 0x338C38C
	0x033835D8 CBZ X19, 0x33836C0
	0x033835DC TBZ X0, 0x0, 0x3383658
	0x033835E0 LDR X0, [X19 + 0x78]
	0x033835E4 B 0x338368C
	0x033835E8 ANDS W31, W23, 0xFFFF
	0x033835EC B.EQ 0x3383618
	0x033835F0 LDR X0, [X26]
	0x033835F4 LDR W21, [X31 + 0xC]
	0x033835F8 LDR W8, [X0 + 0xE0]
	0x033835FC CBNZ W8, 0x3383604
	0x03383600 BL 0x1C16DFC
	0x03383604 ADD X1, X31, 0x10
	0x03383608 MOV X0, X20
	0x0338360C MOV W2, W23
	0x03383610 MOV W3, W21
	0x03383614 B 0x338367C
	0x03383618 LDR X0, [X26]
	0x0338361C LDR W8, [X0 + 0xE0]
	0x03383620 CBNZ W8, 0x3383628
	0x03383624 BL 0x1C16DFC
	0x03383628 ADD X1, X31, 0x10
	0x0338362C MOV X0, X20
	0x03383630 MOV X2, X22
	0x03383634 MOV X3, X21
	0x03383638 MOV X4, X19
	0x0338363C BL 0x338102C
	0x03383640 B 0x3383688
	0x03383644 ADD X0, X31, 0x10
	0x03383648 MOV X1, X31
	0x0338364C BL 0x338C38C
	0x03383650 CBZ X19, 0x33836C0
	0x03383654 TBNZ X0, 0x0, 0x33835E0
	0x03383658 LDR X0, [X19 + 0x70]
	0x0338365C B 0x338368C
	0x03383660 MOVZ W0, 0x9
	0x03383664 MOV V0.16B, V9.16B
	0x03383668 BL 0x33829D0
	0x0338366C ADD X1, X31, 0x10
	0x03383670 MOVZ W2, 0x47
	0x03383674 MOVZ W3, 0x9
	0x03383678 MOV X0, X20
	0x0338367C MOV X4, X19
	0x03383680 MOV W5, W31
	0x03383684 BL 0x3380A9C
	0x03383688 MOV X0, X31
	0x0338368C LDR X8, [X25 + 0x28]
	0x03383690 LDR X9, [X31 + 0x98]
	0x03383694 CMP X8, X9
	0x03383698 B.NE 0x33836C4
	0x0338369C LDP X20, X19, [X31 + 0xF0]
	0x033836A0 LDP X22, X21, [X31 + 0xE0]
	0x033836A4 LDP X24, X23, [X31 + 0xD0]
	0x033836A8 LDP X26, X25, [X31 + 0xC0]
	0x033836AC LDR X30, [X31 + 0xB8]
	0x033836B0 LDP D9, D8, [X31 + 0xA8]
	0x033836B4 LDR V10, [X31 + 0xA0]
	0x033836B8 ADD X31, X31, 0x100
	0x033836BC RET
	0x033836C0 BL 0x1C16F20
	0x033836C4 BL 0x3EB1B20
	0x033836C8 STR D8, [X31 - 0x60]!
	0x033836CC STP X29, X30, [X31 + 0x8]
	0x033836D0 STR X27, [X31 + 0x18]
	0x033836D4 STP X26, X25, [X31 + 0x20]
	0x033836D8 STP X24, X23, [X31 + 0x30]
	0x033836DC STP X22, X21, [X31 + 0x40]
	0x033836E0 STP X20, X19, [X31 + 0x50]
	0x033836E4 ADD X29, X31, 0x8
	0x033836E8 SUB X31, X31, 0x30
	0x033836EC MRS X25, 0xC000
	0x033836F0 LDR X8, [X25 + 0x28]
	0x033836F4 ADRP X27, 0x1059000
	0x033836F8 ADRP X26, 0xDA5000
	0x033836FC MOV X19, X5
	0x03383700 STUR X8, [X29 - 0x10]
	0x03383704 LDRB W8, [X27 + 0xFBB]
	0x03383708 LDR X26, [X26 + 0x78]
	0x0338370C MOV X20, X4
	0x03383710 MOV X21, X3
	0x03383714 MOV X22, X2
	0x03383718 MOV X23, X1
	0x0338371C MOV X24, X0
	0x03383720 MOV V8.16B, V0.16B
	0x03383724 TBNZ X8, 0x0, 0x3383748
	0x03383728 ADRP X0, 0xDA5000
	0x0338372C LDR X0, [X0 + 0x78]
	0x03383730 BL 0x1C16CF4
	0x03383734 ADRP X0, 0xD9F000
	0x03383738 LDR X0, [X0 + 0x4E8]
	0x0338373C BL 0x1C16CF4
	0x03383740 MOVZ W8, 0x1
	0x03383744 STRB W8, [X27 + 0xFBB]
	0x03383748 ADD X8, X31, 0x0
	0x0338374C MOVI V0.2D, 0x0
	0x03383750 SUB X1, X8, 0x40
	0x03383754 STUR V0, [X29 - 0x28]
	0x03383758 STUR V0, [X29 - 0x38]
	0x0338375C ADD X31, X1, 0x0
	0x03383760 SUB X0, X29, 0x38
	0x03383764 MOVZ W2, 0x20
	0x03383768 MOV X3, X31
	0x0338376C STP V0, V0, [X8 - 0x20]
	0x03383770 STP V0, V0, [X8 - 0x40]
	0x03383774 BL 0x3240C88
	0x03383778 LDR X0, [X26]
	0x0338377C LDR W8, [X0 + 0xE0]
	0x03383780 CBNZ W8, 0x3383788
	0x03383784 BL 0x1C16DFC
	0x03383788 SUB X0, X29, 0x38
	0x0338378C MOV V0.16B, V8.16B
	0x03383790 MOV X1, X24
	0x03383794 MOV X2, X23
	0x03383798 MOV X3, X22
	0x0338379C BL 0x33833D0

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+160], D9
	003 Move [X31+168], D8
	004 Move [X31+176], X30
	005 Move [X31+192], X26
	006 Move [X31+200], X25
	007 Move [X31+208], X24
	008 Move [X31+216], X23
	009 Move [X31+224], X22
	010 Move [X31+232], X21
	011 Move [X31+240], X20
	012 Move [X31+248], X19
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X8, [X25+40]
	015 Move X23, 0x105A000
	016 Move X26, 0xDA6000
	017 Move X19, X3
	018 Move [X31+152], X8
	019 Move W8, [X23+4025]
	020 Move X26, [X26+120]
	021 Move X21, X2
	022 Move X22, X1
	023 Move V8, V0
	024 Move X20, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0xDA6000
	030 Move X0, [X0+120]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+4025], W8
	034 Move X0, [X26]
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Move [X31+12], W31
	037 Move [X31+122], V0
	038 Move [X31+96], V0
	039 Move [X31+104], V0
	040 Move [X31+64], V0
	041 Move [X31+72], V0
	042 Move [X31+32], V0
	043 Move [X31+40], V0
	044 Move [X31+1], V0
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Add X2, X31, 12
	050 Move X0, X22
	051 Move X1, X21
	052 Call Number.ParseFormatSpecifier, X0, X1
	053 And W8, W0, 0xFFFF
	054 Move W23, W0
	055 NotImplemented "Instruction MOVI not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move [X31+16], V0
	058 Move [X31+24], V0
	059 Move [X31+48], V0
	060 Move [X31+56], V0
	061 Move [X31+80], V0
	062 Move [X31+88], V0
	063 Move [X31+7], V0
	064 Move [X31+122], V0
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move W24, 15
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X0, [X26]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Add X1, X31, 16
	078 Move W0, 15
	079 Move V0, V8
	080 Call Number.DoubleToNumber, V0, X0, X1
	081 Move W8, [X31+20]
	082 Move TEMP, 0x80000000
	083 Not TEMP
	084 Move W9, TEMP
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move W9, 0x80000000
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, [X26]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Add X0, X31, 16
	094 Call Number.NumberToDouble, X0
	095 Move X0, [X26]
	096 Move V9, V0
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Add X1, X31, 16
	102 NotImplemented "Instruction FCMP not yet implemented."
	103 Move W2, 71
	104 Move W3, 15
	105 Move W8, [X31+12]
	106 Move W9, 15
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move W8, 17
	109 NotImplemented "Instruction CSEL not yet implemented."
	110 Move W8, [X31+12]
	111 Move W9, 17
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move W8, 15
	114 NotImplemented "Instruction CSEL not yet implemented."
	115 Move X0, [X26]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1C17DFC
	120 Add X1, X31, 16
	121 Move V0, V8
	122 Move W0, W24
	123 Call Number.DoubleToNumber, V0, X0, X1
	124 Move W8, [X31+20]
	125 Move TEMP, 0x80000000
	126 Not TEMP
	127 Move W9, TEMP
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move W9, 0x80000000
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Compare X19, 0
	132 JumpIfEqual {203}
	133 Move X0, [X19+104]
	134 Add X0, X31, 16
	135 Move X1, X31
	136 Call NumberBuffer.get_sign, X0
	137 Compare X19, 0
	138 JumpIfEqual {203}
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfNotEqual {175}
	143 Move X0, [X19+120]
	144 And W31, W23, 0xFFFF
	145 Move X0, [X26]
	146 Move W21, [X31+12]
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1C17DFC
	151 Add X1, X31, 16
	152 Move X0, X20
	153 Move W2, W23
	154 Move W3, W21
	155 Move X0, [X26]
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Add X1, X31, 16
	161 Move X0, X20
	162 Move X2, X22
	163 Move X3, X21
	164 Move X4, X19
	165 Call Number.NumberToStringFormat, X0, X1, X2, X3
	166 Add X0, X31, 16
	167 Move X1, X31
	168 Call NumberBuffer.get_sign, X0
	169 Compare X19, 0
	170 JumpIfEqual {203}
	171 Move TEMP, X0
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfEqual {143}
	175 Move X0, [X19+112]
	176 Move W0, 17
	177 Move V0, V8
	178 Call Number.DoubleToNumber, V0, X0, X1
	179 Add X1, X31, 16
	180 Move W2, 71
	181 Move W3, 17
	182 Move X0, X20
	183 Move X4, X19
	184 Move W5, W31
	185 Call Number.NumberToString, X0, X1, X2, X3, X4, X5
	186 Move X0, X31
	187 Move X8, [X25+40]
	188 Move X9, [X31+152]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X20, [X31+240]
	191 Move X19, [X31+248]
	192 Move X22, [X31+224]
	193 Move X21, [X31+232]
	194 Move X24, [X31+208]
	195 Move X23, [X31+216]
	196 Move X26, [X31+192]
	197 Move X25, [X31+200]
	198 Move X30, [X31+176]
	199 Move D9, [X31+160]
	200 Move D8, [X31+168]
	201 Add X31, X31, 256
	202 Return X0
	203 Call 0x1C17F20
	204 Call 0x3EB2B20

Method: System.String FormatSingle(System.Single value, System.String format, System.Globalization.NumberFormatInfo info)

Disassembly:
	0x03384290 ADD W20, W20, 0x3
	0x03384294 B 0x33842C8
	0x03384298 UBFM W10, W9, 0x5, 0x1F
	0x0338429C CMP W10, 0xC34
	0x033842A0 B.HI 0x33842AC
	0x033842A4 ADD W20, W20, 0x4
	0x033842A8 B 0x33842C8
	0x033842AC MOVZ W10, 0x423F
	0x033842B0 MOVK W10, 0xF0000
	0x033842B4 CMP W9, W10
	0x033842B8 B.HI 0x33842C4
	0x033842BC ADD W20, W20, 0x5
	0x033842C0 B 0x33842C8
	0x033842C4 ADD W20, W20, 0x6
	0x033842C8 LDR X0, [X8]
	0x033842CC LDR W8, [X0 + 0xE0]
	0x033842D0 CBNZ W8, 0x33842D8
	0x033842D4 BL 0x1C16DFC
	0x033842D8 CMP W22, W20
	0x033842DC CSEL W21, W20, W22, LT
	0x033842E0 MOV W0, W21
	0x033842E4 MOV X1, X31
	0x033842E8 BL 0x32277A4
	0x033842EC MOV X20, X0
	0x033842F0 CBZ X0, 0x3384304
	0x033842F4 MOV X0, X31
	0x033842F8 BL 0x32C1424
	0x033842FC ADD X8, X20, W0, SXTW
	0x03384300 B 0x3384308
	0x03384304 MOV X8, X20
	0x03384308 ADRP X24, 0xDA4000
	0x0338430C LDR X24, [X24 + 0x78]
	0x03384310 MOVZ W25, 0xCA00
	0x03384314 UBFM W9, W21, 0x1F, 0x1E
	0x03384318 MOVZ W26, 0xCCCD
	0x0338431C MOVK W25, 0x3B9A0000
	0x03384320 SUB W23, W22, 0x2
	0x03384324 MOVK W26, 0xCCCC0000
	0x03384328 ADD X21, X8, X9
	0x0338432C MOVN W27, 0x9
	0x03384330 LDR X0, [X24]
	0x03384334 LDR W8, [X0 + 0xE0]
	0x03384338 CBNZ W8, 0x3384348
	0x0338433C BL 0x1C16DFC
	0x03384340 LDR X0, [X24]
	0x03384344 LDR W8, [X0 + 0xE0]
	0x03384348 UBFM X9, X19, 0x20, 0x3F
	0x0338434C CBZ X9, 0x33843A0
	0x03384350 CBNZ W8, 0x3384358
	0x03384354 BL 0x1C16DFC
	0x03384358 MOV X8, X19
	0x0338435C UDIV X19, X19, X25
	0x03384360 MSUB W8, W19, W25, W8
	0x03384364 MOVZ W9, 0x7
	0x03384368 MOV W10, W8
	0x0338436C UMADDL X8, X8, X26, X31
	0x03384370 UBFM X8, X8, 0x23, 0x3F
	0x03384374 MOV W11, W9
	0x03384378 MADD W9, W8, W27, W10
	0x0338437C ADD W9, W9, 0x30
	0x03384380 STRH W9, [X21 - 0x2]!
	0x03384384 SUB W9, W11, 0x1
	0x03384388 TBZ X11, 0x1F, 0x3384368
	0x0338438C CMP W10, 0x9
	0x03384390 B.HI 0x3384368
	0x03384394 SUB W22, W22, 0x9
	0x03384398 SUB W23, W23, 0x9
	0x0338439C B 0x3384330
	0x033843A0 CBZ W8, 0x33843AC
	0x033843A4 CBZ W19, 0x33843B4
	0x033843A8 B 0x33843BC
	0x033843AC BL 0x1C16DFC
	0x033843B0 CBNZ W19, 0x33843BC
	0x033843B4 SUB W8, W22, 0x1
	0x033843B8 TBNZ X8, 0x1F, 0x33843F4
	0x033843BC MOVZ W8, 0xCCCD
	0x033843C0 MOVK W8, 0xCCCC0000
	0x033843C4 MOVN W9, 0x9
	0x033843C8 UMADDL X12, X19, X8, X31
	0x033843CC MOV W10, W19

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+8], X29
	003 Move [X31+16], X30
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Add X29, X31, 8
	010 Subtract X31, X31, 48
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X22+40]
	013 Move X21, 0x1059000
	014 Move X19, X1
	015 Move X20, X0
	016 Move [X29-16], X8
	017 Move W8, [X21+4026]
	018 Move V8, V0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xDA5000
	024 Move X0, [X0+120]
	025 Call 0x1C17CF4
	026 Move X0, 0xD9F000
	027 Move X0, [X0+1256]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+4026], W8
	031 Add X8, X31, 0
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Subtract X1, X8, 64
	034 Move [X29-40], V0
	035 Move [X29-56], V0
	036 Add X31, X1, 0
	037 Subtract X0, X29, 56
	038 Move W2, 32
	039 Move X3, X31
	040 Move [X8-32], V0
	041 Move [X8-24], V0
	042 Move [X8-64], V0
	043 Move [X8-56], V0
	044 Call ValueStringBuilder..ctor, X0, X1
	045 Move X21, 0x1056000
	046 Move W8, [X21+1890]
	047 Compare W8, 0
	048 JumpIfNotEqual {54}
	049 Move X0, 0xD97000
	050 Move X0, [X0+656]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X21+1890], W8
	054 Move X23, 0xDA5000
	055 Move X23, [X23+120]
	056 Compare X20, 0
	057 JumpIfEqual {63}
	058 Move X0, X20
	059 Move X1, X31
	060 Call String.GetRawStringData, X0
	061 Move W20, [X20+16]
	062 Move X21, X0
	063 Move X21, X31
	064 Move X0, [X23]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Subtract X0, X29, 56
	070 Move V0, V8
	071 Move X1, X21
	072 Move X2, X20
	073 Move X3, X19
	074 Call Number.FormatSingle, X0, V0, X1, X2
	075 Compare X0, 0
	076 JumpIfNotEqual {80}
	077 Subtract X0, X29, 56
	078 Move X1, X31
	079 Call ValueStringBuilder.ToString, X0
	080 Move X8, [X22+40]
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Subtract X31, X29, 8
	084 Move X20, [X31+48]
	085 Move X19, [X31+56]
	086 Move X22, [X31+32]
	087 Move X21, [X31+40]
	088 Move X23, [X31+24]
	089 Move X29, [X31+8]
	090 Move X30, [X31+16]
	091 Move V8, [X31+64]
	092 Return X0
	093 Call 0x3EB2B20

Method: System.Boolean TryFormatSingle(System.Single value, System.ReadOnlySpan`1<System.Char> format, System.Globalization.NumberFormatInfo info, System.Span`1<System.Char> destination, out System.Int32 charsWritten)

Disassembly:
	0x033846C8 ADRP X25, 0xD6F000
	0x033846CC LDRB W8, [X21 + 0xFD1]
	0x033846D0 LDR X25, [X25 + 0x5A8]
	0x033846D4 MOV W22, W2
	0x033846D8 MOV W19, W1
	0x033846DC MOV X20, X0
	0x033846E0 TBNZ X8, 0x0, 0x3384704
	0x033846E4 ADRP X0, 0xD6F000
	0x033846E8 LDR X0, [X0 + 0x5A8]
	0x033846EC BL 0x1C16CF4
	0x033846F0 ADRP X0, 0xDA4000
	0x033846F4 LDR X0, [X0 + 0x78]
	0x033846F8 BL 0x1C16CF4
	0x033846FC MOVZ W8, 0x1
	0x03384700 STRB W8, [X21 + 0xFD1]
	0x03384704 UBFM X24, X20, 0x20, 0x3F
	0x03384708 CMP X24, 0x0
	0x0338470C MOVZ W8, 0x9
	0x03384710 CSEL X9, X24, X20, NE
	0x03384714 LDR X0, [X25]
	0x03384718 CSINC W8, W8, W31, NE
	0x0338471C UBFM X11, X9, 0x10, 0x3F
	0x03384720 ORR W10, W8, 0x4
	0x03384724 CMP X11, 0x0
	0x03384728 CSEL W8, W10, W8, NE
	0x0338472C CSEL X9, X11, X9, NE
	0x03384730 ORR W11, W8, 0x2
	0x03384734 CMP X9, 0xFF
	0x03384738 LDR W10, [X0 + 0xE0]
	0x0338473C CSEL W8, W11, W8, HI
	0x03384740 UBFM X11, X9, 0x8, 0x3F
	0x03384744 CSEL X9, X11, X9, HI
	0x03384748 CMP X9, 0xF
	0x0338474C CINC W21, W8, HI
	0x03384750 CBNZ W10, 0x3384758
	0x03384754 BL 0x1C16DFC
	0x03384758 ADRP X26, 0xDA4000
	0x0338475C LDR X26, [X26 + 0x78]
	0x03384760 CMP W21, W22
	0x03384764 CSEL W23, W21, W22, GT
	0x03384768 MOV W0, W23
	0x0338476C MOV X1, X31
	0x03384770 BL 0x32277A4
	0x03384774 MOV X21, X0
	0x03384778 CBZ X0, 0x338478C
	0x0338477C MOV X0, X31
	0x03384780 BL 0x32C1424
	0x03384784 ADD X8, X21, W0, SXTW
	0x03384788 B 0x3384790
	0x0338478C MOV X8, X21
	0x03384790 LDR X0, [X26]
	0x03384794 ADD X23, X8, W23, 0x1, SXTW
	0x03384798 LDR W9, [X0 + 0xE0]
	0x0338479C CBZ W9, 0x33847A8
	0x033847A0 CBNZ W24, 0x33847D8
	0x033847A4 B 0x338483C
	0x033847A8 BL 0x1C16DFC
	0x033847AC LDR X0, [X26]
	0x033847B0 LDR W8, [X0 + 0xE0]
	0x033847B4 CBZ W8, 0x33847D0
	0x033847B8 CMP W24, 0x0
	0x033847BC CSEL X8, X21, X31, EQ
	0x033847C0 CSEL X21, X31, X21, EQ
	0x033847C4 CBNZ W24, 0x33847D8
	0x033847C8 MOV X21, X8
	0x033847CC B 0x338483C
	0x033847D0 BL 0x1C16DFC
	0x033847D4 CBZ W24, 0x338483C
	0x033847D8 MOVZ W9, 0x6
	0x033847DC MOVZ W8, 0x30
	0x033847E0 MOV W10, W9
	0x033847E4 AND W9, W20, 0xF
	0x033847E8 CMP W9, 0xA
	0x033847EC CSEL W11, W8, W19, CC
	0x033847F0 ADD W9, W11, W9
	0x033847F4 UBFM W20, W20, 0x4, 0x1F
	0x033847F8 STRH W9, [X23 - 0x2]!
	0x033847FC SUB W9, W10, 0x1
	0x03384800 TBZ X10, 0x1F, 0x33847E0
	0x03384804 CBNZ W20, 0x33847E0
	0x03384808 SUB W9, W22, 0xA
	0x0338480C MOVZ W8, 0x30
	0x03384810 MOV W10, W9
	0x03384814 AND W9, W24, 0xF
	0x03384818 CMP W9, 0xA
	0x0338481C CSEL W11, W8, W19, CC
	0x03384820 ADD W9, W11, W9

ISIL:
	001 Move [X31-96], D8
	002 Move [X31+8], X29
	003 Move [X31+16], X30
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 8
	014 Subtract X31, X31, 48
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X25+40]
	017 Move X27, 0x1059000
	018 Move X26, 0xDA5000
	019 Move X19, X5
	020 Move [X29-16], X8
	021 Move W8, [X27+4027]
	022 Move X26, [X26+120]
	023 Move X20, X4
	024 Move X21, X3
	025 Move X22, X2
	026 Move X23, X1
	027 Move X24, X0
	028 Move V8, V0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {41}
	033 Move X0, 0xDA5000
	034 Move X0, [X0+120]
	035 Call 0x1C17CF4
	036 Move X0, 0xD9F000
	037 Move X0, [X0+1256]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X27+4027], W8
	041 Add X8, X31, 0
	042 NotImplemented "Instruction MOVI not yet implemented."
	043 Subtract X1, X8, 64
	044 Move [X29-40], V0
	045 Move [X29-56], V0
	046 Add X31, X1, 0
	047 Subtract X0, X29, 56
	048 Move W2, 32
	049 Move X3, X31
	050 Move [X8-32], V0
	051 Move [X8-24], V0
	052 Move [X8-64], V0
	053 Move [X8-56], V0
	054 Call ValueStringBuilder..ctor, X0, X1
	055 Move X0, [X26]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Subtract X0, X29, 56
	061 Move V0, V8
	062 Move X1, X24
	063 Move X2, X23
	064 Move X3, X22
	065 Call Number.FormatSingle, X0, V0, X1, X2
	066 Compare X0, 0
	067 JumpIfEqual {79}
	068 Move X22, X0
	069 Move X0, [X26]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X0, X22
	075 Move X1, X21
	076 Move X2, X20
	077 Move X3, X19
	078 Call Number.TryCopyTo, X0, X1, X2
	079 Subtract X0, X29, 56
	080 Move X1, X21
	081 Move X2, X20
	082 Move X3, X19
	083 Move X4, X31
	084 Call ValueStringBuilder.TryCopyTo, X0, X1, X2
	085 Move X8, [X25+40]
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 And W0, W0, 1
	089 Subtract X31, X29, 8
	090 Move X20, [X31+80]
	091 Move X19, [X31+88]
	092 Move X22, [X31+64]
	093 Move X21, [X31+72]
	094 Move X24, [X31+48]
	095 Move X23, [X31+56]
	096 Move X26, [X31+32]
	097 Move X25, [X31+40]
	098 Move X27, [X31+24]
	099 Move X29, [X31+8]
	100 Move X30, [X31+16]
	101 Move V8, [X31+96]
	102 Return X0
	103 Call 0x3EB2B20

Method: System.String FormatSingle(ref System.Text.ValueStringBuilder sb, System.Single value, System.ReadOnlySpan`1<System.Char> format, System.Globalization.NumberFormatInfo info)

Disassembly:
	0x033843D0 UBFM X19, X12, 0x23, 0x3F
	0x033843D4 MADD W12, W19, W9, W10
	0x033843D8 ADD W12, W12, 0x30
	0x033843DC MOV W11, W23
	0x033843E0 STRH W12, [X21 - 0x2]!
	0x033843E4 SUB W23, W23, 0x1
	0x033843E8 TBZ X11, 0x1F, 0x33843C8
	0x033843EC CMP W10, 0x9
	0x033843F0 B.HI 0x33843C8
	0x033843F4 MOV X0, X20
	0x033843F8 LDP X20, X19, [X31 + 0x40]
	0x033843FC LDP X22, X21, [X31 + 0x30]
	0x03384400 LDP X24, X23, [X31 + 0x20]
	0x03384404 LDP X26, X25, [X31 + 0x10]
	0x03384408 LDP X30, X27, [X31], #0x50
	0x0338440C RET
	0x03384410 STR X30, [X31 - 0x60]!
	0x03384414 STP X28, X27, [X31 + 0x10]
	0x03384418 STP X26, X25, [X31 + 0x20]
	0x0338441C STP X24, X23, [X31 + 0x30]
	0x03384420 STP X22, X21, [X31 + 0x40]
	0x03384424 STP X20, X19, [X31 + 0x50]
	0x03384428 ADRP X22, 0x1058000
	0x0338442C LDRB W8, [X22 + 0xFCF]
	0x03384430 MOV X19, X2
	0x03384434 MOV W20, W1
	0x03384438 MOV X21, X0
	0x0338443C TBNZ X8, 0x0, 0x3384460
	0x03384440 ADRP X0, 0xD6F000
	0x03384444 LDR X0, [X0 + 0x5A8]
	0x03384448 BL 0x1C16CF4
	0x0338444C ADRP X0, 0xDA4000
	0x03384450 LDR X0, [X0 + 0x78]
	0x03384454 BL 0x1C16CF4
	0x03384458 MOVZ W8, 0x1
	0x0338445C STRB W8, [X22 + 0xFCF]
	0x03384460 MOVZ W8, 0x967F
	0x03384464 MOVK W8, 0x980000
	0x03384468 CMP W20, 0x1
	0x0338446C SUB X22, X31, X21
	0x03384470 CSINC W23, W20, W31, GT
	0x03384474 CMP X22, X8
	0x03384478 B.LS 0x33844A0
	0x0338447C MOVZ X9, 0x3FFF
	0x03384480 MOVK X9, 0x107A0000
	0x03384484 MOVK X9, 0x5AF3
	0x03384488 CMP X22, X9
	0x0338448C B.LS 0x33844AC
	0x03384490 ADD X8, X9, 0x1
	0x03384494 UDIV X9, X22, X8
	0x03384498 MOVZ W20, 0xF
	0x0338449C B 0x33844B8
	0x033844A0 MOVZ W20, 0x1
	0x033844A4 MOV X9, X22
	0x033844A8 B 0x33844B8
	0x033844AC ADD X8, X8, 0x1
	0x033844B0 UDIV X9, X22, X8
	0x033844B4 MOVZ W20, 0x8
	0x033844B8 ADRP X8, 0xD6F000
	0x033844BC LDR X8, [X8 + 0x5A8]
	0x033844C0 CMP W9, 0xA
	0x033844C4 B.CC 0x338452C
	0x033844C8 CMP W9, 0x63
	0x033844CC B.HI 0x33844D8
	0x033844D0 ADD W20, W20, 0x1
	0x033844D4 B 0x338452C
	0x033844D8 CMP W9, 0x3E7
	0x033844DC B.HI 0x33844E8
	0x033844E0 ADD W20, W20, 0x2
	0x033844E4 B 0x338452C
	0x033844E8 UBFM W10, W9, 0x4, 0x1F
	0x033844EC CMP W10, 0x270
	0x033844F0 B.HI 0x33844FC
	0x033844F4 ADD W20, W20, 0x3
	0x033844F8 B 0x338452C
	0x033844FC UBFM W10, W9, 0x5, 0x1F
	0x03384500 CMP W10, 0xC34
	0x03384504 B.HI 0x3384510
	0x03384508 ADD W20, W20, 0x4
	0x0338450C B 0x338452C
	0x03384510 MOVZ W10, 0x423F
	0x03384514 MOVK W10, 0xF0000
	0x03384518 CMP W9, W10
	0x0338451C B.HI 0x3384528
	0x03384520 ADD W20, W20, 0x5
	0x03384524 B 0x338452C
	0x03384528 ADD W20, W20, 0x6
	0x0338452C LDR X0, [X8]
	0x03384530 LDR W8, [X0 + 0xE0]
	0x03384534 CBNZ W8, 0x338453C
	0x03384538 BL 0x1C16DFC
	0x0338453C CBZ X19, 0x33846AC
	0x03384540 LDR W8, [X19 + 0x10]
	0x03384544 CMP W23, W20
	0x03384548 CSEL W9, W20, W23, LT
	0x0338454C MOV X1, X31
	0x03384550 ADD W21, W8, W9
	0x03384554 MOV W0, W21
	0x03384558 BL 0x32277A4
	0x0338455C MOV X20, X0
	0x03384560 CBZ X0, 0x3384574
	0x03384564 MOV X0, X31
	0x03384568 BL 0x32C1424
	0x0338456C ADD X8, X20, W0, SXTW
	0x03384570 B 0x3384578
	0x03384574 MOV X8, X20
	0x03384578 ADRP X25, 0xDA4000
	0x0338457C LDR X25, [X25 + 0x78]
	0x03384580 MOVZ W26, 0xCA00
	0x03384584 MOVZ W27, 0xCCCD
	0x03384588 MOVK W26, 0x3B9A0000
	0x0338458C ADD X24, X8, W21, 0x1, SXTW
	0x03384590 SUB W21, W23, 0x2
	0x03384594 MOVK W27, 0xCCCC0000
	0x03384598 MOVN W28, 0x9
	0x0338459C LDR X0, [X25]
	0x033845A0 LDR W8, [X0 + 0xE0]
	0x033845A4 CBNZ W8, 0x33845B4
	0x033845A8 BL 0x1C16DFC
	0x033845AC LDR X0, [X25]
	0x033845B0 LDR W8, [X0 + 0xE0]
	0x033845B4 UBFM X9, X22, 0x20, 0x3F
	0x033845B8 CBZ X9, 0x338460C
	0x033845BC CBNZ W8, 0x33845C4
	0x033845C0 BL 0x1C16DFC
	0x033845C4 MOV X8, X22
	0x033845C8 UDIV X22, X22, X26
	0x033845CC MSUB W8, W22, W26, W8
	0x033845D0 MOVZ W9, 0x7
	0x033845D4 MOV W10, W8
	0x033845D8 UMADDL X8, X8, X27, X31
	0x033845DC UBFM X8, X8, 0x23, 0x3F
	0x033845E0 MOV W11, W9
	0x033845E4 MADD W9, W8, W28, W10
	0x033845E8 ADD W9, W9, 0x30
	0x033845EC STRH W9, [X24 - 0x2]!
	0x033845F0 SUB W9, W11, 0x1
	0x033845F4 TBZ X11, 0x1F, 0x33845D4
	0x033845F8 CMP W10, 0x9
	0x033845FC B.HI 0x33845D4
	0x03384600 SUB W23, W23, 0x9
	0x03384604 SUB W21, W21, 0x9
	0x03384608 B 0x338459C
	0x0338460C CBZ W8, 0x3384618
	0x03384610 CBZ W22, 0x3384620
	0x03384614 B 0x3384628
	0x03384618 BL 0x1C16DFC
	0x0338461C CBNZ W22, 0x3384628
	0x03384620 SUB W8, W23, 0x1
	0x03384624 TBNZ X8, 0x1F, 0x3384660
	0x03384628 MOVZ W8, 0xCCCD
	0x0338462C MOVK W8, 0xCCCC0000
	0x03384630 MOVN W9, 0x9
	0x03384634 UMADDL X12, X22, X8, X31
	0x03384638 MOV W10, W22
	0x0338463C UBFM X22, X12, 0x23, 0x3F
	0x03384640 MADD W12, W22, W9, W10
	0x03384644 ADD W12, W12, 0x30
	0x03384648 MOV W11, W21
	0x0338464C STRH W12, [X24 - 0x2]!
	0x03384650 SUB W21, W21, 0x1
	0x03384654 TBZ X11, 0x1F, 0x3384634
	0x03384658 CMP W10, 0x9
	0x0338465C B.HI 0x3384634
	0x03384660 LDR W21, [X19 + 0x10]
	0x03384664 CMP W21, 0x1
	0x03384668 B.MI 0x338468C
	0x0338466C SUB W21, W21, 0x1
	0x03384670 MOV X0, X19
	0x03384674 MOV W1, W21
	0x03384678 MOV X2, X31
	0x0338467C BL 0x3222A1C
	0x03384680 CMP W21, 0x0
	0x03384684 STRH W0, [X24 - 0x2]!
	0x03384688 B.GT 0x338466C
	0x0338468C MOV X0, X20
	0x03384690 LDP X20, X19, [X31 + 0x50]
	0x03384694 LDP X22, X21, [X31 + 0x40]
	0x03384698 LDP X24, X23, [X31 + 0x30]
	0x0338469C LDP X26, X25, [X31 + 0x20]
	0x033846A0 LDP X28, X27, [X31 + 0x10]
	0x033846A4 LDR X30, [X31], #0x60
	0x033846A8 RET
	0x033846AC BL 0x1C16F20
	0x033846B0 STR X30, [X31 - 0x50]!
	0x033846B4 STP X26, X25, [X31 + 0x10]
	0x033846B8 STP X24, X23, [X31 + 0x20]
	0x033846BC STP X22, X21, [X31 + 0x30]
	0x033846C0 STP X20, X19, [X31 + 0x40]
	0x033846C4 ADRP X21, 0x1058000

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+160], D10
	003 Move [X31+168], D9
	004 Move [X31+176], D8
	005 Move [X31+184], X30
	006 Move [X31+192], X26
	007 Move [X31+200], X25
	008 Move [X31+208], X24
	009 Move [X31+216], X23
	010 Move [X31+224], X22
	011 Move [X31+232], X21
	012 Move [X31+240], X20
	013 Move [X31+248], X19
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X25+40]
	016 Move X23, 0x1059000
	017 Move X26, 0xDA5000
	018 Move X19, X3
	019 Move [X31+152], X8
	020 Move W8, [X23+4028]
	021 Move X26, [X26+120]
	022 Move X21, X2
	023 Move X22, X1
	024 Move V8, V0
	025 Move X20, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, 0xDA5000
	031 Move X0, [X0+120]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+4028], W8
	035 Move X0, [X26]
	036 NotImplemented "Instruction MOVI not yet implemented."
	037 Move [X31+12], W31
	038 Move [X31+122], V0
	039 Move [X31+96], V0
	040 Move [X31+104], V0
	041 Move [X31+64], V0
	042 Move [X31+72], V0
	043 Move [X31+32], V0
	044 Move [X31+40], V0
	045 Move [X31+1], V0
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Add X2, X31, 12
	051 Move X0, X22
	052 Move X1, X21
	053 Call Number.ParseFormatSpecifier, X0, X1
	054 And W8, W0, 0xFFFF
	055 Move W23, W0
	056 NotImplemented "Instruction MOVI not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move [X31+16], V0
	059 Move [X31+24], V0
	060 Move [X31+48], V0
	061 Move [X31+56], V0
	062 Move [X31+80], V0
	063 Move [X31+88], V0
	064 Move [X31+7], V0
	065 Move [X31+122], V0
	066 NotImplemented "Instruction CMP not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W24, 7
	070 NotImplemented "Instruction CMP not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X0, [X26]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 NotImplemented "Instruction FCVT not yet implemented."
	079 Add X1, X31, 16
	080 Move W0, 7
	081 Move V0, V9
	082 Call Number.DoubleToNumber, V0, X0, X1
	083 Move W8, [X31+20]
	084 Move TEMP, 0x80000000
	085 Not TEMP
	086 Move W9, TEMP
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move W9, 0x80000000
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X0, [X26]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Add X0, X31, 16
	096 Call Number.NumberToDouble, X0
	097 Move X0, [X26]
	098 NotImplemented "Instruction INVALID not yet implemented."
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Add X1, X31, 16
	104 NotImplemented "Instruction FCMP not yet implemented."
	105 Move W2, 71
	106 Move W3, 7
	107 Move W8, [X31+12]
	108 Move W9, 7
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move W8, 9
	111 NotImplemented "Instruction CSEL not yet implemented."
	112 Move W8, [X31+12]
	113 Move W9, 9
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move W8, 7
	116 NotImplemented "Instruction CSEL not yet implemented."
	117 Move X0, [X26]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 NotImplemented "Instruction FCVT not yet implemented."
	123 Add X1, X31, 16
	124 Move W0, W24
	125 Call Number.DoubleToNumber, V0, X0, X1
	126 Move W8, [X31+20]
	127 Move TEMP, 0x80000000
	128 Not TEMP
	129 Move W9, TEMP
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move W9, 0x80000000
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Compare X19, 0
	134 JumpIfEqual {206}
	135 Move X0, [X19+104]
	136 Add X0, X31, 16
	137 Move X1, X31
	138 Call NumberBuffer.get_sign, X0
	139 Compare X19, 0
	140 JumpIfEqual {206}
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {177}
	145 Move X0, [X19+120]
	146 And W31, W23, 0xFFFF
	147 Move X0, [X26]
	148 Move W21, [X31+12]
	149 Move W8, [X0+224]
	150 Compare W8, 0
	151 JumpIfNotEqual {153}
	152 Call 0x1C17DFC
	153 Add X1, X31, 16
	154 Move X0, X20
	155 Move W2, W23
	156 Move W3, W21
	157 Move X0, [X26]
	158 Move W8, [X0+224]
	159 Compare W8, 0
	160 JumpIfNotEqual {162}
	161 Call 0x1C17DFC
	162 Add X1, X31, 16
	163 Move X0, X20
	164 Move X2, X22
	165 Move X3, X21
	166 Move X4, X19
	167 Call Number.NumberToStringFormat, X0, X1, X2, X3
	168 Add X0, X31, 16
	169 Move X1, X31
	170 Call NumberBuffer.get_sign, X0
	171 Compare X19, 0
	172 JumpIfEqual {206}
	173 Move TEMP, X0
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfEqual {145}
	177 Move X0, [X19+112]
	178 Move W0, 9
	179 Move V0, V9
	180 Call Number.DoubleToNumber, V0, X0, X1
	181 Add X1, X31, 16
	182 Move W2, 71
	183 Move W3, 9
	184 Move X0, X20
	185 Move X4, X19
	186 Move W5, W31
	187 Call Number.NumberToString, X0, X1, X2, X3, X4, X5
	188 Move X0, X31
	189 Move X8, [X25+40]
	190 Move X9, [X31+152]
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move X20, [X31+240]
	193 Move X19, [X31+248]
	194 Move X22, [X31+224]
	195 Move X21, [X31+232]
	196 Move X24, [X31+208]
	197 Move X23, [X31+216]
	198 Move X26, [X31+192]
	199 Move X25, [X31+200]
	200 Move X30, [X31+184]
	201 Move D9, [X31+168]
	202 Move D8, [X31+176]
	203 Move V10, [X31+160]
	204 Add X31, X31, 256
	205 Return X0
	206 Call 0x1C17F20
	207 Call 0x3EB2B20

Method: System.Boolean TryCopyTo(System.String source, System.Span`1<System.Char> destination, out System.Int32 charsWritten)

Disassembly:
	0x033838FC MOV X0, X31
	0x03383900 BL 0x32C1424
	0x03383904 ADD X8, X21, W0, SXTW
	0x03383908 B 0x3383910
	0x0338390C MOV X8, X21
	0x03383910 CMP W20, 0x1
	0x03383914 ADD X22, X8, W22, 0x1, SXTW
	0x03383918 B.LE 0x3383974
	0x0338391C ADRP X8, 0xDA5000
	0x03383920 LDR X8, [X8 + 0x78]
	0x03383924 LDR X0, [X8]
	0x03383928 LDR W8, [X0 + 0xE0]
	0x0338392C CBNZ W8, 0x3383934
	0x03383930 BL 0x1C16DFC
	0x03383934 MOVZ W8, 0xCCCD
	0x03383938 SUB W10, W20, 0x2
	0x0338393C MOVK W8, 0xCCCC0000
	0x03383940 MOVN W9, 0x9
	0x03383944 MOV W12, W10
	0x03383948 UMADDL X10, X19, X8, X31
	0x0338394C MOV W11, W19
	0x03383950 UBFM X19, X10, 0x23, 0x3F
	0x03383954 MADD W10, W19, W9, W11
	0x03383958 ADD W10, W10, 0x30
	0x0338395C STRH W10, [X22 - 0x2]!
	0x03383960 SUB W10, W12, 0x1
	0x03383964 TBZ X12, 0x1F, 0x3383944
	0x03383968 CMP W11, 0x9
	0x0338396C B.HI 0x3383944
	0x03383970 B 0x33839A0
	0x03383974 MOVZ W8, 0xCCCD
	0x03383978 MOVK W8, 0xCCCC0000
	0x0338397C MOVN W9, 0x9
	0x03383980 UMADDL X10, X19, X8, X31
	0x03383984 UBFM X10, X10, 0x23, 0x3F
	0x03383988 MADD W11, W10, W9, W19
	0x0338398C ADD W11, W11, 0x30
	0x03383990 CMP W19, 0xA
	0x03383994 STRH W11, [X22 - 0x2]!
	0x03383998 MOV W19, W10
	0x0338399C B.CS 0x3383980
	0x033839A0 MOV X0, X21
	0x033839A4 LDP X20, X19, [X31 + 0x20]
	0x033839A8 LDP X22, X21, [X31 + 0x10]
	0x033839AC LDR X30, [X31], #0x30
	0x033839B0 RET
	0x033839B4 STP X30, X25, [X31 - 0x40]!
	0x033839B8 STP X24, X23, [X31 + 0x10]
	0x033839BC STP X22, X21, [X31 + 0x20]
	0x033839C0 STP X20, X19, [X31 + 0x30]
	0x033839C4 ADRP X22, 0x1059000
	0x033839C8 LDRB W8, [X22 + 0xFC7]
	0x033839CC MOV X19, X2

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x105A000
	009 Move W8, [X23+4029]
	010 Move X19, X3
	011 Move X21, X2
	012 Move X22, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xDA8000
	019 Move X0, [X0+4040]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+4029], W8
	023 Move X23, 0x105A000
	024 Move W8, [X23+939]
	025 Compare W8, 0
	026 JumpIfNotEqual {32}
	027 Move X0, 0xD98000
	028 Move X0, [X0+656]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X23+939], W8
	032 Move X23, 0xDA8000
	033 Move X23, [X23+4040]
	034 Compare X20, 0
	035 JumpIfEqual {40}
	036 Move X0, X20
	037 Move X1, X31
	038 Call String.GetRawStringData, X0
	039 Move W8, [X20+16]
	040 Move X0, X31
	041 Move X8, X31
	042 Move X3, [X23]
	043 Move [X31], X0
	044 Move [X31+8], X8
	045 Add X0, X31, 0
	046 Move X1, X22
	047 Move X2, X21
	048 Call ReadOnlySpan`1<Char>.TryCopyTo, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {56}
	053 Compare X20, 0
	054 JumpIfEqual {67}
	055 Move W8, [X20+16]
	056 Move W8, W31
	057 Move [X19], W8
	058 Move X20, [X31+48]
	059 Move X19, [X31+56]
	060 Move X22, [X31+32]
	061 Move X21, [X31+40]
	062 Move X30, [X31+16]
	063 Move X23, [X31+24]
	064 And W0, W0, 1
	065 Add X31, X31, 64
	066 Return X0
	067 Call 0x1C17F20

Method: System.String FormatInt32(System.Int32 value, System.ReadOnlySpan`1<System.Char> format, System.IFormatProvider provider)

Disassembly:
	0x0337AD88 LDRB W8, [X22 + 0x762]
	0x0337AD8C CBZ W8, 0x337ADAC
	0x0337AD90 CBZ X21, 0x337ADC4
	0x0337AD94 MOV X0, X21
	0x0337AD98 MOV X1, X31
	0x0337AD9C BL 0x3225708
	0x0337ADA0 LDR W21, [X21 + 0x10]
	0x0337ADA4 MOV X22, X0
	0x0337ADA8 B 0x337ADC8
	0x0337ADAC ADRP X0, 0xDA0000
	0x0337ADB0 LDR X0, [X0 + 0x290]
	0x0337ADB4 BL 0x1C16CF4
	0x0337ADB8 MOVZ W8, 0x1
	0x0337ADBC STRB W8, [X22 + 0x762]
	0x0337ADC0 CBNZ X21, 0x337AD94
	0x0337ADC4 MOV X22, X31
	0x0337ADC8 MOV X0, X20
	0x0337ADCC MOV X1, X31
	0x0337ADD0 BL 0x333ACEC
	0x0337ADD4 MOV X3, X0
	0x0337ADD8 MOV X0, X22
	0x0337ADDC MOV X1, X21
	0x0337ADE0 MOV W2, W19
	0x0337ADE4 LDP X20, X19, [X31 + 0x20]
	0x0337ADE8 LDP X22, X21, [X31 + 0x10]
	0x0337ADEC LDR X30, [X31], #0x30
	0x0337ADF0 B 0x337ABB4
	0x0337ADF4 SUB X31, X31, 0xE0
	0x0337ADF8 STP X30, X25, [X31 + 0xA0]
	0x0337ADFC STP X24, X23, [X31 + 0xB0]
	0x0337AE00 STP X22, X21, [X31 + 0xC0]
	0x0337AE04 STP X20, X19, [X31 + 0xD0]
	0x0337AE08 MRS X23, 0xC000
	0x0337AE0C LDR X8, [X23 + 0x28]
	0x0337AE10 ADRP X24, 0x1062000
	0x0337AE14 MOV X22, X3
	0x0337AE18 MOV W19, W2
	0x0337AE1C STR X8, [X31 + 0x98]
	0x0337AE20 LDRB W8, [X24 + 0xFE1]
	0x0337AE24 MOV X20, X1
	0x0337AE28 MOV X21, X0
	0x0337AE2C TBNZ X8, 0x0, 0x337AE50
	0x0337AE30 ADRP X0, 0xDAE000
	0x0337AE34 LDR X0, [X0 + 0x78]
	0x0337AE38 BL 0x1C16CF4
	0x0337AE3C ADRP X0, 0xDAE000
	0x0337AE40 LDR X0, [X0 + 0x1D0]
	0x0337AE44 BL 0x1C16CF4
	0x0337AE48 MOVZ W8, 0x1
	0x0337AE4C STRB W8, [X24 + 0xFE1]
	0x0337AE50 ADRP X24, 0xDAE000
	0x0337AE54 LDR X24, [X24 + 0x78]
	0x0337AE58 MOVI V0.2D, 0x0
	0x0337AE5C CMP W19, 0x7
	0x0337AE60 STR W31, [X31 + 0xC]
	0x0337AE64 STR X31, [X31]
	0x0337AE68 STUR V0, [X31 + 0x7A]
	0x0337AE6C STP V0, V0, [X31 + 0x60]
	0x0337AE70 STP V0, V0, [X31 + 0x40]
	0x0337AE74 STP V0, V0, [X31 + 0x20]
	0x0337AE78 STR V0, [X31 + 0x1]
	0x0337AE7C B.HI 0x337AEBC
	0x0337AE80 LDR X0, [X24]
	0x0337AE84 STRB W31, [X31 + 0x8]
	0x0337AE88 LDR W8, [X0 + 0xE0]
	0x0337AE8C CBNZ W8, 0x337AE94
	0x0337AE90 BL 0x1C16DFC
	0x0337AE94 ADD X4, X31, 0x4
	0x0337AE98 ADD X5, X31, 0x8
	0x0337AE9C MOV X0, X21
	0x0337AEA0 MOV X1, X20
	0x0337AEA4 MOV W2, W19
	0x0337AEA8 MOV X3, X22
	0x0337AEAC ADD X25, X31, 0x4
	0x0337AEB0 BL 0x338751C
	0x0337AEB4 TBNZ X0, 0x0, 0x337AF68
	0x0337AEB8 B 0x337AF94
	0x0337AEBC TBNZ X19, 0x9, 0x337AF34
	0x0337AEC0 LDR X0, [X24]
	0x0337AEC4 MOVI V0.2D, 0x0
	0x0337AEC8 STUR V0, [X31 + 0x7A]
	0x0337AECC STP V0, V0, [X31 + 0x60]
	0x0337AED0 STP V0, V0, [X31 + 0x40]
	0x0337AED4 STP V0, V0, [X31 + 0x20]
	0x0337AED8 STR V0, [X31 + 0x1]
	0x0337AEDC STR W31, [X31 + 0xC]
	0x0337AEE0 LDR W8, [X0 + 0xE0]
	0x0337AEE4 CBNZ W8, 0x337AEEC
	0x0337AEE8 BL 0x1C16DFC
	0x0337AEEC ADD X3, X31, 0x10
	0x0337AEF0 MOV X0, X21
	0x0337AEF4 MOV X1, X20
	0x0337AEF8 MOV W2, W19
	0x0337AEFC MOV X4, X22
	0x0337AF00 MOV W5, W31
	0x0337AF04 BL 0x3387ED4
	0x0337AF08 ADD X0, X31, 0x10
	0x0337AF0C ADD X1, X31, 0xC
	0x0337AF10 ADD X25, X31, 0xC
	0x0337AF14 BL 0x3387248
	0x0337AF18 TBNZ X0, 0x0, 0x337AF68
	0x0337AF1C LDR X0, [X24]
	0x0337AF20 BL 0x19903D0
	0x0337AF24 ADRP X8, 0xDAE000
	0x0337AF28 LDR X8, [X8 + 0x1D0]
	0x0337AF2C MOVZ W0, 0x1
	0x0337AF30 B 0x337AFAC
	0x0337AF34 LDR X0, [X24]
	0x0337AF38 STRB W31, [X31 + 0x8]
	0x0337AF3C LDR W8, [X0 + 0xE0]
	0x0337AF40 CBNZ W8, 0x337AF48
	0x0337AF44 BL 0x1C16DFC
	0x0337AF48 ADD X4, X31, 0x0
	0x0337AF4C ADD X5, X31, 0x8
	0x0337AF50 MOV X0, X21
	0x0337AF54 MOV X1, X20
	0x0337AF58 MOV W2, W19
	0x0337AF5C ADD X25, X31, 0x0
	0x0337AF60 BL 0x3387B84
	0x0337AF64 TBZ X0, 0x0, 0x337AF94
	0x0337AF68 LDR W0, [X25]
	0x0337AF6C LDR X8, [X23 + 0x28]
	0x0337AF70 LDR X9, [X31 + 0x98]
	0x0337AF74 CMP X8, X9
	0x0337AF78 B.NE 0x337AFB4
	0x0337AF7C LDP X20, X19, [X31 + 0xD0]
	0x0337AF80 LDP X22, X21, [X31 + 0xC0]
	0x0337AF84 LDP X24, X23, [X31 + 0xB0]
	0x0337AF88 LDP X30, X25, [X31 + 0xA0]
	0x0337AF8C ADD X31, X31, 0xE0
	0x0337AF90 RET
	0x0337AF94 LDR X0, [X24]
	0x0337AF98 LDRB W19, [X31 + 0x8]
	0x0337AF9C BL 0x19903D0
	0x0337AFA0 ADRP X8, 0xDAE000
	0x0337AFA4 LDR X8, [X8 + 0x1D0]
	0x0337AFA8 MOV W0, W19
	0x0337AFAC LDR X1, [X8]
	0x0337AFB0 BL 0x3387AFC
	0x0337AFB4 BL 0x3EB1B20
	0x0337AFB8 MOVZ W0, 0x7
	0x0337AFBC RET
	0x0337AFC0 STP X30, X21, [X31 - 0x20]!
	0x0337AFC4 STP X20, X19, [X31 + 0x10]
	0x0337AFC8 ADRP X21, 0x1062000
	0x0337AFCC ADRP X20, 0xD82000
	0x0337AFD0 LDRB W8, [X21 + 0xF46]
	0x0337AFD4 LDR X20, [X20 + 0x9E8]
	0x0337AFD8 MOV X19, X0
	0x0337AFDC TBNZ X8, 0x0, 0x337AFF4
	0x0337AFE0 ADRP X0, 0xD82000
	0x0337AFE4 LDR X0, [X0 + 0x9E8]
	0x0337AFE8 BL 0x1C16CF4
	0x0337AFEC MOVZ W8, 0x1
	0x0337AFF0 STRB W8, [X21 + 0xF46]
	0x0337AFF4 LDR X0, [X20]
	0x0337AFF8 LDRH W19, [X19]
	0x0337AFFC LDR W8, [X0 + 0xE0]
	0x0337B000 CBNZ W8, 0x337B008
	0x0337B004 BL 0x1C16DFC
	0x0337B008 MOV W0, W19
	0x0337B00C LDP X20, X19, [X31 + 0x10]
	0x0337B010 MOV X1, X31
	0x0337B014 LDP X30, X21, [X31], #0x20
	0x0337B018 B 0x331E444
	0x0337B01C STP X30, X21, [X31 - 0x20]!
	0x0337B020 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 192
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X25+40]
	017 Move X23, 0x1063000
	018 Move X26, 0xDAF000
	019 Move X22, X3
	020 Move [X29-8], X8
	021 Move W8, [X23+4030]
	022 Move X26, [X26+120]
	023 Move X20, X2
	024 Move X21, X1
	025 Move W19, W0
	026 Subtract X27, X29, 144
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {42}
	031 Move X0, 0xDAF000
	032 Move X0, [X0+120]
	033 Call 0x1C17CF4
	034 Move X0, 0xDA9000
	035 Move X0, [X0+40]
	036 Call 0x1C17CF4
	037 Move X0, 0xDA9000
	038 Move X0, [X0+1256]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X23+4030], W8
	042 Move X0, [X26]
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Move [X29-148], W31
	045 Move [X27+106], V0
	046 Move [X29-64], V0
	047 Move [X29-56], V0
	048 Move [X29-96], V0
	049 Move [X29-88], V0
	050 Move [X29-128], V0
	051 Move [X29-120], V0
	052 Move [X29-144], V0
	053 Move [X29-192], V0
	054 Move [X29-184], V0
	055 Move W8, [X0+224]
	056 Move TEMP, X19
	057 And TEMP, TEMP, -2147483648
	058 Compare TEMP, -2147483648
	059 JumpIfEqual {69}
	060 Compare W20, 0
	061 JumpIfNotEqual {69}
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move TEMP, 0
	066 Not TEMP
	067 Move W1, TEMP
	068 Move W0, W19
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Subtract X2, X29, 148
	073 Move X0, X21
	074 Move X1, X20
	075 Call Number.ParseFormatSpecifier, X0, X1
	076 Move W23, W0
	077 Move X0, X22
	078 Move X1, X31
	079 Call NumberFormatInfo.GetInstance, X0
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 Move W8, 0xFFDF
	082 And W10, W23, W8
	083 NotImplemented "Instruction CMP not yet implemented."
	084 NotImplemented "Instruction CSET not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction CSET not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X24, X0
	089 And W8, W8, W9
	090 Compare W8, 0
	091 JumpIfNotEqual {104}
	092 And W8, W23, 0xFFFFFFDF
	093 And W8, W8, 0xFFFF
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X0, [X26]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Subtract W1, W23, 33
	101 Move W0, W19
	102 Move W2, W22
	103 Call Number.Int32ToHexStr, X0, X1, X2
	104 Move TEMP, X19
	105 And TEMP, TEMP, -2147483648
	106 Compare TEMP, -2147483648
	107 JumpIfEqual {176}
	108 Move X0, [X26]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Move W0, W19
	114 Move W1, W22
	115 Call Number.UInt32ToDecStr, X0, X1
	116 Move X8, [X25+40]
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Add X31, X29, 0
	120 Move X20, [X31+80]
	121 Move X19, [X31+88]
	122 Move X22, [X31+64]
	123 Move X21, [X31+72]
	124 Move X24, [X31+48]
	125 Move X23, [X31+56]
	126 Move X26, [X31+32]
	127 Move X25, [X31+40]
	128 Move X28, [X31+16]
	129 Move X27, [X31+24]
	130 Move X29, [X31+96]
	131 Move X30, [X31+104]
	132 Return X0
	133 Move X0, [X26]
	134 NotImplemented "Instruction MOVI not yet implemented."
	135 Move [X27+106], V0
	136 Move [X29-64], V0
	137 Move [X29-56], V0
	138 Move [X29-96], V0
	139 Move [X29-88], V0
	140 Move [X29-128], V0
	141 Move [X29-120], V0
	142 Move [X29-144], V0
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {147}
	146 Call 0x1C17DFC
	147 Subtract X1, X29, 144
	148 Move W0, W19
	149 Move X2, X31
	150 Call 0x338CD98
	151 Add X8, X31, 0
	152 Subtract X1, X8, 64
	153 Add X31, X1, 0
	154 NotImplemented "Instruction MOVI not yet implemented."
	155 Subtract X0, X29, 192
	156 Move W2, 32
	157 Move X3, X31
	158 Move [X8-32], V0
	159 Move [X8-24], V0
	160 Move [X8-64], V0
	161 Move [X8-56], V0
	162 Call ValueStringBuilder..ctor, X0, X1
	163 Move X0, [X26]
	164 And W31, W23, 0xFFFF
	165 Move W8, [X0+224]
	166 Compare W8, 0
	167 JumpIfNotEqual {169}
	168 Call 0x1C17DFC
	169 Subtract X0, X29, 192
	170 Subtract X1, X29, 144
	171 Move W2, W23
	172 Move W3, W22
	173 Move X4, X24
	174 Move W5, W31
	175 Call Number.NumberToString, X0, X1, X2, X3, X4, X5
	176 Compare X24, 0
	177 JumpIfEqual {200}
	178 Move X0, [X26]
	179 Move X20, [X24+48]
	180 Move W8, [X0+224]
	181 Compare W8, 0
	182 JumpIfNotEqual {184}
	183 Call 0x1C17DFC
	184 Move W0, W19
	185 Move W1, W22
	186 Move X2, X20
	187 Call Number.NegativeInt32ToDecStr, X0, X1, X2
	188 Compare W8, 0
	189 JumpIfNotEqual {191}
	190 Call 0x1C17DFC
	191 Subtract X0, X29, 192
	192 Subtract X1, X29, 144
	193 Move X2, X21
	194 Move X3, X20
	195 Move X4, X24
	196 Call Number.NumberToStringFormat, X0, X1, X2, X3
	197 Subtract X0, X29, 192
	198 Move X1, X31
	199 Call ValueStringBuilder.ToString, X0
	200 Call 0x1C17F20
	201 Call 0x3EB2B20

Method: System.Boolean TryFormatInt32(System.Int32 value, System.ReadOnlySpan`1<System.Char> format, System.IFormatProvider provider, System.Span`1<System.Char> destination, out System.Int32 charsWritten)

Disassembly:
	0x0337B848 MOV X19, X1
	0x0337B84C MOV X20, X0
	0x0337B850 TBNZ X8, 0x0, 0x337B874
	0x0337B854 ADRP X0, 0xDAD000
	0x0337B858 LDR X0, [X0 + 0x78]
	0x0337B85C BL 0x1C16CF4
	0x0337B860 ADRP X0, 0xDA7000
	0x0337B864 LDR X0, [X0 + 0x1D8]
	0x0337B868 BL 0x1C16CF4
	0x0337B86C MOVZ W8, 0x1
	0x0337B870 STRB W8, [X23 + 0xF57]
	0x0337B874 LDR X1, [X21]
	0x0337B878 LDR W20, [X20]
	0x0337B87C MOV X0, X31
	0x0337B880 BL 0x25BF134
	0x0337B884 MOV X21, X0
	0x0337B888 LDR X0, [X22]
	0x0337B88C MOV X22, X1
	0x0337B890 LDR W8, [X0 + 0xE0]
	0x0337B894 CBNZ W8, 0x337B89C
	0x0337B898 BL 0x1C16DFC
	0x0337B89C MOV W0, W20
	0x0337B8A0 MOV X1, X21
	0x0337B8A4 MOV X2, X22
	0x0337B8A8 MOV X3, X19
	0x0337B8AC LDP X20, X19, [X31 + 0x20]
	0x0337B8B0 LDP X22, X21, [X31 + 0x10]
	0x0337B8B4 LDP X30, X23, [X31], #0x30
	0x0337B8B8 B 0x3379D88
	0x0337B8BC STP X30, X23, [X31 - 0x30]!
	0x0337B8C0 STP X22, X21, [X31 + 0x10]
	0x0337B8C4 STP X20, X19, [X31 + 0x20]
	0x0337B8C8 ADRP X22, 0x1061000
	0x0337B8CC LDRB W8, [X22 + 0xF58]
	0x0337B8D0 MOV X19, X2
	0x0337B8D4 MOV X21, X1
	0x0337B8D8 MOV X20, X0
	0x0337B8DC TBNZ X8, 0x0, 0x337B8F4
	0x0337B8E0 ADRP X0, 0xDAD000
	0x0337B8E4 LDR X0, [X0 + 0x78]
	0x0337B8E8 BL 0x1C16CF4
	0x0337B8EC MOVZ W8, 0x1
	0x0337B8F0 STRB W8, [X22 + 0xF58]
	0x0337B8F4 ADRP X22, 0x105E000
	0x0337B8F8 LDRB W8, [X22 + 0x762]
	0x0337B8FC LDR W20, [X20]
	0x0337B900 CBNZ W8, 0x337B918
	0x0337B904 ADRP X0, 0xD9F000
	0x0337B908 LDR X0, [X0 + 0x290]
	0x0337B90C BL 0x1C16CF4
	0x0337B910 MOVZ W8, 0x1
	0x0337B914 STRB W8, [X22 + 0x762]
	0x0337B918 ADRP X23, 0xDAD000
	0x0337B91C LDR X23, [X23 + 0x78]
	0x0337B920 CBZ X21, 0x337B93C
	0x0337B924 MOV X0, X21
	0x0337B928 MOV X1, X31
	0x0337B92C BL 0x3225708
	0x0337B930 LDR W21, [X21 + 0x10]
	0x0337B934 MOV X22, X0
	0x0337B938 B 0x337B940
	0x0337B93C MOV X22, X31
	0x0337B940 LDR X0, [X23]
	0x0337B944 LDR W8, [X0 + 0xE0]
	0x0337B948 CBNZ W8, 0x337B950
	0x0337B94C BL 0x1C16DFC
	0x0337B950 MOV W0, W20
	0x0337B954 MOV X1, X22
	0x0337B958 MOV X2, X21
	0x0337B95C MOV X3, X19
	0x0337B960 LDP X20, X19, [X31 + 0x20]
	0x0337B964 LDP X22, X21, [X31 + 0x10]
	0x0337B968 LDP X30, X23, [X31], #0x30
	0x0337B96C B 0x3379D88
	0x0337B970 STP X30, X27, [X31 - 0x50]!
	0x0337B974 STP X26, X25, [X31 + 0x10]
	0x0337B978 STP X24, X23, [X31 + 0x20]
	0x0337B97C STP X22, X21, [X31 + 0x30]
	0x0337B980 STP X20, X19, [X31 + 0x40]
	0x0337B984 ADRP X27, 0x1061000
	0x0337B988 ADRP X26, 0xDAD000
	0x0337B98C LDRB W8, [X27 + 0xF59]
	0x0337B990 LDR X26, [X26 + 0x78]
	0x0337B994 MOV X20, X6
	0x0337B998 MOV X22, X5
	0x0337B99C MOV X24, X4
	0x0337B9A0 MOV X19, X3
	0x0337B9A4 MOV X21, X2
	0x0337B9A8 MOV X23, X1
	0x0337B9AC MOV X25, X0
	0x0337B9B0 TBNZ X8, 0x0, 0x337B9C8
	0x0337B9B4 ADRP X0, 0xDAD000
	0x0337B9B8 LDR X0, [X0 + 0x78]
	0x0337B9BC BL 0x1C16CF4
	0x0337B9C0 MOVZ W8, 0x1
	0x0337B9C4 STRB W8, [X27 + 0xF59]
	0x0337B9C8 LDR X0, [X26]
	0x0337B9CC LDR W25, [X25]
	0x0337B9D0 LDR W8, [X0 + 0xE0]
	0x0337B9D4 CBNZ W8, 0x337B9DC
	0x0337B9D8 BL 0x1C16DFC
	0x0337B9DC MOV W0, W25
	0x0337B9E0 MOV X1, X24
	0x0337B9E4 MOV X2, X22
	0x0337B9E8 MOV X3, X20
	0x0337B9EC MOV X4, X23
	0x0337B9F0 MOV X5, X21
	0x0337B9F4 MOV X6, X19
	0x0337B9F8 LDP X20, X19, [X31 + 0x40]
	0x0337B9FC LDP X22, X21, [X31 + 0x30]
	0x0337BA00 LDP X24, X23, [X31 + 0x20]
	0x0337BA04 LDP X26, X25, [X31 + 0x10]
	0x0337BA08 LDP X30, X27, [X31], #0x50
	0x0337BA0C B 0x337A848
	0x0337BA10 STP X30, X21, [X31 - 0x20]!
	0x0337BA14 STP X20, X19, [X31 + 0x10]
	0x0337BA18 ADRP X20, 0x1061000
	0x0337BA1C LDRB W8, [X20 + 0xF5A]
	0x0337BA20 MOV X19, X0
	0x0337BA24 TBNZ X8, 0x0, 0x337BA3C
	0x0337BA28 ADRP X0, 0xDAD000
	0x0337BA2C LDR X0, [X0 + 0x78]
	0x0337BA30 BL 0x1C16CF4
	0x0337BA34 MOVZ W8, 0x1
	0x0337BA38 STRB W8, [X20 + 0xF5A]
	0x0337BA3C CBNZ X19, 0x337BA4C
	0x0337BA40 MOVZ W0, 0x30
	0x0337BA44 MOV X1, X31
	0x0337BA48 BL 0x338F3E0
	0x0337BA4C ADRP X20, 0x105E000
	0x0337BA50 LDRB W8, [X20 + 0x762]
	0x0337BA54 CBNZ W8, 0x337BA6C
	0x0337BA58 ADRP X0, 0xD9F000
	0x0337BA5C LDR X0, [X0 + 0x290]
	0x0337BA60 BL 0x1C16CF4
	0x0337BA64 MOVZ W8, 0x1
	0x0337BA68 STRB W8, [X20 + 0x762]
	0x0337BA6C ADRP X21, 0xDAD000
	0x0337BA70 LDR X21, [X21 + 0x78]
	0x0337BA74 CBZ X19, 0x337BA90
	0x0337BA78 MOV X0, X19
	0x0337BA7C MOV X1, X31
	0x0337BA80 BL 0x3225708
	0x0337BA84 LDR W20, [X19 + 0x10]
	0x0337BA88 MOV X19, X0
	0x0337BA8C B 0x337BA94
	0x0337BA90 MOV X20, X31
	0x0337BA94 MOV X0, X31
	0x0337BA98 BL 0x333AE98
	0x0337BA9C LDR X8, [X21]
	0x0337BAA0 MOV X21, X0
	0x0337BAA4 LDR W9, [X8 + 0xE0]
	0x0337BAA8 CBNZ W9, 0x337BAB4
	0x0337BAAC MOV X0, X8
	0x0337BAB0 BL 0x1C16DFC
	0x0337BAB4 MOV X0, X19
	0x0337BAB8 MOV X1, X20
	0x0337BABC LDP X20, X19, [X31 + 0x10]
	0x0337BAC0 MOVZ W2, 0x7
	0x0337BAC4 MOV X3, X21
	0x0337BAC8 LDP X30, X21, [X31], #0x20
	0x0337BACC B 0x337ADF4
	0x0337BAD0 STR X30, [X31 - 0x30]!
	0x0337BAD4 STP X22, X21, [X31 + 0x10]
	0x0337BAD8 STP X20, X19, [X31 + 0x20]
	0x0337BADC ADRP X21, 0x1061000
	0x0337BAE0 LDRB W8, [X21 + 0xF5B]
	0x0337BAE4 MOV W19, W1
	0x0337BAE8 MOV X20, X0
	0x0337BAEC TBNZ X8, 0x0, 0x337BB04
	0x0337BAF0 ADRP X0, 0xDAD000
	0x0337BAF4 LDR X0, [X0 + 0x78]
	0x0337BAF8 BL 0x1C16CF4
	0x0337BAFC MOVZ W8, 0x1
	0x0337BB00 STRB W8, [X21 + 0xF5B]
	0x0337BB04 MOV W0, W19
	0x0337BB08 MOV X1, X31
	0x0337BB0C BL 0x333B33C
	0x0337BB10 CBNZ X20, 0x337BB20
	0x0337BB14 MOVZ W0, 0x30
	0x0337BB18 MOV X1, X31
	0x0337BB1C BL 0x338F3E0
	0x0337BB20 ADRP X21, 0x105E000
	0x0337BB24 LDRB W8, [X21 + 0x762]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 224
	015 Move [X29-216], X6
	016 NotImplemented "Instruction MRS not yet implemented."
	017 Move X8, [X28+40]
	018 Move X26, 0x1062000
	019 Move X27, 0xDAE000
	020 Move X20, X5
	021 Move [X29-24], X8
	022 Move W8, [X26+4031]
	023 Move X27, [X27+120]
	024 Move X21, X4
	025 Move X25, X3
	026 Move X23, X2
	027 Move X24, X1
	028 Move W22, W0
	029 Subtract X19, X29, 160
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {45}
	034 Move X0, 0xDAE000
	035 Move X0, [X0+120]
	036 Call 0x1C17CF4
	037 Move X0, 0xDA8000
	038 Move X0, [X0+40]
	039 Call 0x1C17CF4
	040 Move X0, 0xDA8000
	041 Move X0, [X0+1256]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X26+4031], W8
	045 Move X0, [X27]
	046 NotImplemented "Instruction MOVI not yet implemented."
	047 Move [X29-164], W31
	048 Move [X19+106], V0
	049 Move [X29-80], V0
	050 Move [X29-72], V0
	051 Move [X29-112], V0
	052 Move [X29-104], V0
	053 Move [X29-144], V0
	054 Move [X29-136], V0
	055 Move [X29-160], V0
	056 Move [X29-208], V0
	057 Move [X29-200], V0
	058 Move W8, [X0+224]
	059 Move TEMP, X22
	060 And TEMP, TEMP, -2147483648
	061 Compare TEMP, -2147483648
	062 JumpIfEqual {72}
	063 Compare W23, 0
	064 JumpIfNotEqual {72}
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move TEMP, 0
	069 Not TEMP
	070 Move W1, TEMP
	071 Move W0, W22
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Subtract X2, X29, 164
	076 Move X0, X24
	077 Move X1, X23
	078 Call Number.ParseFormatSpecifier, X0, X1
	079 Move W26, W0
	080 Move X0, X25
	081 Move X1, X31
	082 Call NumberFormatInfo.GetInstance, X0
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 Move W8, 0xFFDF
	085 And W10, W26, W8
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction CSET not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction CSET not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X10, X0
	092 And W8, W8, W9
	093 Compare W8, 0
	094 JumpIfNotEqual {110}
	095 And W8, W26, 0xFFFFFFDF
	096 And W8, W8, 0xFFFF
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X0, [X27]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 Subtract W1, W26, 33
	105 Move W0, W22
	106 Move W2, W25
	107 Move X3, X21
	108 Move X4, X20
	109 Call Number.TryInt32ToHexStr, X0, X1, X2, X3, X4
	110 Move TEMP, X22
	111 And TEMP, TEMP, -2147483648
	112 Compare TEMP, -2147483648
	113 JumpIfEqual {187}
	114 Move X0, [X27]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {119}
	118 Call 0x1C17DFC
	119 Move W0, W22
	120 Move W1, W25
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 Move X2, X21
	123 Move X3, X20
	124 Call Number.TryUInt32ToDecStr, X0, X1, X2, X3
	125 Move X8, [X28+40]
	126 NotImplemented "Instruction LDUR not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 And W0, W0, 1
	129 Add X31, X29, 0
	130 Move X20, [X31+80]
	131 Move X19, [X31+88]
	132 Move X22, [X31+64]
	133 Move X21, [X31+72]
	134 Move X24, [X31+48]
	135 Move X23, [X31+56]
	136 Move X26, [X31+32]
	137 Move X25, [X31+40]
	138 Move X28, [X31+16]
	139 Move X27, [X31+24]
	140 Move X29, [X31+96]
	141 Move X30, [X31+104]
	142 Return X0
	143 Move X0, [X27]
	144 NotImplemented "Instruction MOVI not yet implemented."
	145 Move [X19+106], V0
	146 Move [X29-80], V0
	147 Move [X29-72], V0
	148 Move [X29-112], V0
	149 Move [X29-104], V0
	150 Move [X29-144], V0
	151 Move [X29-136], V0
	152 Move [X29-160], V0
	153 Move W8, [X0+224]
	154 Move [X29-224], X10
	155 Compare W8, 0
	156 JumpIfNotEqual {158}
	157 Call 0x1C17DFC
	158 Subtract X1, X29, 160
	159 Move W0, W22
	160 Move X2, X31
	161 Call 0x338CD98
	162 Add X8, X31, 0
	163 Subtract X1, X8, 64
	164 Add X31, X1, 0
	165 NotImplemented "Instruction MOVI not yet implemented."
	166 Subtract X0, X29, 208
	167 Move W2, 32
	168 Move X3, X31
	169 Move [X8-32], V0
	170 Move [X8-24], V0
	171 Move [X8-64], V0
	172 Move [X8-56], V0
	173 Call ValueStringBuilder..ctor, X0, X1
	174 Move X0, [X27]
	175 And W31, W26, 0xFFFF
	176 Move W8, [X0+224]
	177 Compare W8, 0
	178 JumpIfNotEqual {180}
	179 Call 0x1C17DFC
	180 NotImplemented "Instruction LDUR not yet implemented."
	181 Subtract X0, X29, 208
	182 Subtract X1, X29, 160
	183 Move W2, W26
	184 Move W3, W25
	185 Move W5, W31
	186 Call Number.NumberToString, X0, X1, X2, X3, X4, X5
	187 Compare X10, 0
	188 JumpIfEqual {217}
	189 Move X0, [X27]
	190 Move X23, [X10+48]
	191 Move W8, [X0+224]
	192 Compare W8, 0
	193 JumpIfNotEqual {195}
	194 Call 0x1C17DFC
	195 NotImplemented "Instruction LDUR not yet implemented."
	196 Move W0, W22
	197 Move W1, W25
	198 Move X2, X23
	199 Move X3, X21
	200 Move X4, X20
	201 Call Number.TryNegativeInt32ToDecStr, X0, X1, X2, X3, X4
	202 Compare W8, 0
	203 JumpIfNotEqual {205}
	204 Call 0x1C17DFC
	205 NotImplemented "Instruction LDUR not yet implemented."
	206 Subtract X0, X29, 208
	207 Subtract X1, X29, 160
	208 Move X2, X24
	209 Move X3, X23
	210 Call Number.NumberToStringFormat, X0, X1, X2, X3
	211 NotImplemented "Instruction LDUR not yet implemented."
	212 Subtract X0, X29, 208
	213 Move X1, X21
	214 Move X2, X20
	215 Move X4, X31
	216 Call ValueStringBuilder.TryCopyTo, X0, X1, X2
	217 Call 0x1C17F20
	218 Call 0x3EB2B20

Method: System.String FormatUInt32(System.UInt32 value, System.ReadOnlySpan`1<System.Char> format, System.IFormatProvider provider)

Disassembly:
	0x0337B230 CBNZ W8, 0x337B238
	0x0337B234 BL 0x1C16DFC
	0x0337B238 MOV W0, W19
	0x0337B23C LDP X20, X19, [X31 + 0x10]
	0x0337B240 MOV X1, X31
	0x0337B244 LDP X30, X21, [X31], #0x20
	0x0337B248 B 0x3320848
	0x0337B24C STP X30, X21, [X31 - 0x20]!
	0x0337B250 STP X20, X19, [X31 + 0x10]
	0x0337B254 ADRP X21, 0x1061000
	0x0337B258 ADRP X20, 0xD81000
	0x0337B25C LDRB W8, [X21 + 0xF4D]
	0x0337B260 LDR X20, [X20 + 0x9E8]
	0x0337B264 MOV X19, X0
	0x0337B268 TBNZ X8, 0x0, 0x337B280
	0x0337B26C ADRP X0, 0xD81000
	0x0337B270 LDR X0, [X0 + 0x9E8]
	0x0337B274 BL 0x1C16CF4
	0x0337B278 MOVZ W8, 0x1
	0x0337B27C STRB W8, [X21 + 0xF4D]
	0x0337B280 LDR X0, [X20]
	0x0337B284 LDRH W19, [X19]
	0x0337B288 LDR W8, [X0 + 0xE0]
	0x0337B28C CBNZ W8, 0x337B294
	0x0337B290 BL 0x1C16DFC
	0x0337B294 MOV W0, W19
	0x0337B298 LDP X20, X19, [X31 + 0x10]
	0x0337B29C MOV X1, X31
	0x0337B2A0 LDP X30, X21, [X31], #0x20
	0x0337B2A4 B 0x3320D38
	0x0337B2A8 STP X30, X21, [X31 - 0x20]!
	0x0337B2AC STP X20, X19, [X31 + 0x10]
	0x0337B2B0 ADRP X21, 0x1061000
	0x0337B2B4 ADRP X20, 0xD81000
	0x0337B2B8 LDRB W8, [X21 + 0xF4E]
	0x0337B2BC LDR X20, [X20 + 0x9E8]
	0x0337B2C0 MOV X19, X0
	0x0337B2C4 TBNZ X8, 0x0, 0x337B2DC
	0x0337B2C8 ADRP X0, 0xD81000
	0x0337B2CC LDR X0, [X0 + 0x9E8]
	0x0337B2D0 BL 0x1C16CF4
	0x0337B2D4 MOVZ W8, 0x1
	0x0337B2D8 STRB W8, [X21 + 0xF4E]
	0x0337B2DC LDR X0, [X20]
	0x0337B2E0 LDRH W19, [X19]
	0x0337B2E4 LDR W8, [X0 + 0xE0]
	0x0337B2E8 CBNZ W8, 0x337B2F0
	0x0337B2EC BL 0x1C16DFC
	0x0337B2F0 MOV W0, W19
	0x0337B2F4 LDP X20, X19, [X31 + 0x10]
	0x0337B2F8 MOV X1, X31
	0x0337B2FC LDP X30, X21, [X31], #0x20
	0x0337B300 B 0x3321268
	0x0337B304 STP X30, X21, [X31 - 0x20]!
	0x0337B308 STP X20, X19, [X31 + 0x10]
	0x0337B30C ADRP X21, 0x1061000
	0x0337B310 ADRP X20, 0xD81000
	0x0337B314 LDRB W8, [X21 + 0xF4F]
	0x0337B318 LDR X20, [X20 + 0x9E8]
	0x0337B31C MOV X19, X0
	0x0337B320 TBNZ X8, 0x0, 0x337B338
	0x0337B324 ADRP X0, 0xD81000
	0x0337B328 LDR X0, [X0 + 0x9E8]
	0x0337B32C BL 0x1C16CF4
	0x0337B330 MOVZ W8, 0x1
	0x0337B334 STRB W8, [X21 + 0xF4F]
	0x0337B338 LDR X0, [X20]
	0x0337B33C LDRH W19, [X19]
	0x0337B340 LDR W8, [X0 + 0xE0]
	0x0337B344 CBNZ W8, 0x337B34C
	0x0337B348 BL 0x1C16DFC
	0x0337B34C MOV W0, W19
	0x0337B350 LDP X20, X19, [X31 + 0x10]
	0x0337B354 MOV X1, X31
	0x0337B358 LDP X30, X21, [X31], #0x20
	0x0337B35C B 0x332175C
	0x0337B360 STP X30, X21, [X31 - 0x20]!
	0x0337B364 STP X20, X19, [X31 + 0x10]
	0x0337B368 ADRP X21, 0x1061000
	0x0337B36C ADRP X20, 0xD81000
	0x0337B370 LDRB W8, [X21 + 0xF50]
	0x0337B374 LDR X20, [X20 + 0x9E8]
	0x0337B378 MOV X19, X0
	0x0337B37C TBNZ X8, 0x0, 0x337B394
	0x0337B380 ADRP X0, 0xD81000
	0x0337B384 LDR X0, [X0 + 0x9E8]
	0x0337B388 BL 0x1C16CF4
	0x0337B38C MOVZ W8, 0x1
	0x0337B390 STRB W8, [X21 + 0xF50]
	0x0337B394 LDR X0, [X20]
	0x0337B398 LDRH W19, [X19]
	0x0337B39C LDR W8, [X0 + 0xE0]
	0x0337B3A0 CBNZ W8, 0x337B3A8
	0x0337B3A4 BL 0x1C16DFC
	0x0337B3A8 MOV W0, W19
	0x0337B3AC LDP X20, X19, [X31 + 0x10]
	0x0337B3B0 MOV X1, X31
	0x0337B3B4 LDP X30, X21, [X31], #0x20
	0x0337B3B8 B 0x3321AA0
	0x0337B3BC STP X30, X21, [X31 - 0x20]!
	0x0337B3C0 STP X20, X19, [X31 + 0x10]
	0x0337B3C4 ADRP X21, 0x1061000
	0x0337B3C8 ADRP X20, 0xD81000
	0x0337B3CC LDRB W8, [X21 + 0xF51]
	0x0337B3D0 LDR X20, [X20 + 0x9E8]
	0x0337B3D4 MOV X19, X0
	0x0337B3D8 TBNZ X8, 0x0, 0x337B3F0
	0x0337B3DC ADRP X0, 0xD81000
	0x0337B3E0 LDR X0, [X0 + 0x9E8]
	0x0337B3E4 BL 0x1C16CF4
	0x0337B3E8 MOVZ W8, 0x1
	0x0337B3EC STRB W8, [X21 + 0xF51]
	0x0337B3F0 LDR X0, [X20]
	0x0337B3F4 LDRH W19, [X19]
	0x0337B3F8 LDR W8, [X0 + 0xE0]
	0x0337B3FC CBNZ W8, 0x337B404
	0x0337B400 BL 0x1C16DFC
	0x0337B404 MOV W0, W19
	0x0337B408 LDP X20, X19, [X31 + 0x10]
	0x0337B40C MOV X1, X31
	0x0337B410 LDP X30, X21, [X31], #0x20
	0x0337B414 B 0x3321CE4
	0x0337B418 STR X30, [X31 - 0x20]!
	0x0337B41C STP X20, X19, [X31 + 0x10]
	0x0337B420 ADRP X0, 0xDAD000
	0x0337B424 LDR X0, [X0 + 0x30]
	0x0337B428 BL 0x1C16D08
	0x0337B42C MOV X19, X0
	0x0337B430 ADRP X0, 0xDAA000
	0x0337B434 LDR X0, [X0 + 0xB8]
	0x0337B438 BL 0x1C16D08
	0x0337B43C MOV X20, X0
	0x0337B440 ADRP X0, 0xDAA000
	0x0337B444 LDR X0, [X0 + 0x98]
	0x0337B448 BL 0x1C16D08
	0x0337B44C MOV X2, X0
	0x0337B450 MOV X0, X19
	0x0337B454 MOV X1, X20
	0x0337B458 MOV X3, X31
	0x0337B45C BL 0x320A264
	0x0337B460 MOV X19, X0
	0x0337B464 ADRP X0, 0xD80000
	0x0337B468 LDR X0, [X0 + 0xC08]
	0x0337B46C BL 0x1C16D08
	0x0337B470 BL 0x1C16F10
	0x0337B474 MOV X1, X19
	0x0337B478 MOV X20, X0
	0x0337B47C BL 0x337B498
	0x0337B480 ADRP X0, 0xDAF000
	0x0337B484 LDR X0, [X0 + 0xE88]
	0x0337B488 BL 0x1C16D08
	0x0337B48C MOV X1, X0
	0x0337B490 MOV X0, X20

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 192
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X25+40]
	017 Move X23, 0x1062000
	018 Move X26, 0xDAE000
	019 Move X22, X3
	020 Move [X29-8], X8
	021 Move W8, [X23+4032]
	022 Move X26, [X26+120]
	023 Move X19, X2
	024 Move X20, X1
	025 Move W21, W0
	026 Subtract X27, X29, 144
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {42}
	031 Move X0, 0xDAE000
	032 Move X0, [X0+120]
	033 Call 0x1C17CF4
	034 Move X0, 0xDA8000
	035 Move X0, [X0+40]
	036 Call 0x1C17CF4
	037 Move X0, 0xDA8000
	038 Move X0, [X0+1256]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X23+4032], W8
	042 Move X0, [X26]
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Move [X29-148], W31
	045 Move [X27+106], V0
	046 Move [X29-64], V0
	047 Move [X29-56], V0
	048 Move [X29-96], V0
	049 Move [X29-88], V0
	050 Move [X29-128], V0
	051 Move [X29-120], V0
	052 Move [X29-144], V0
	053 Move [X29-192], V0
	054 Move [X29-184], V0
	055 Move W8, [X0+224]
	056 Compare W19, 0
	057 JumpIfEqual {92}
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Subtract X2, X29, 148
	062 Move X0, X20
	063 Move X1, X19
	064 Call Number.ParseFormatSpecifier, X0, X1
	065 Move W23, W0
	066 Move X0, X22
	067 Move X1, X31
	068 Call NumberFormatInfo.GetInstance, X0
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 Move W8, 0xFFDF
	071 And W10, W23, W8
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CSET not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction CSET not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 And W8, W8, W9
	078 Compare W8, 0
	079 JumpIfNotEqual {99}
	080 And W8, W23, 0xFFFFFFDF
	081 And W8, W8, 0xFFFF
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X0, [X26]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Subtract W1, W23, 33
	089 Move W0, W21
	090 Move W2, W22
	091 Call Number.Int32ToHexStr, X0, X1, X2
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move TEMP, 0
	096 Not TEMP
	097 Move W1, TEMP
	098 Move W0, W21
	099 Move X0, [X26]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move W0, W21
	105 Move W1, W22
	106 Call Number.UInt32ToDecStr, X0, X1
	107 Move X8, [X25+40]
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Add X31, X29, 0
	111 Move X20, [X31+80]
	112 Move X19, [X31+88]
	113 Move X22, [X31+64]
	114 Move X21, [X31+72]
	115 Move X24, [X31+48]
	116 Move X23, [X31+56]
	117 Move X26, [X31+32]
	118 Move X25, [X31+40]
	119 Move X28, [X31+16]
	120 Move X27, [X31+24]
	121 Move X29, [X31+96]
	122 Move X30, [X31+104]
	123 Return X0
	124 Move X24, X0
	125 Move X0, [X26]
	126 NotImplemented "Instruction MOVI not yet implemented."
	127 Move [X27+106], V0
	128 Move [X29-64], V0
	129 Move [X29-56], V0
	130 Move [X29-96], V0
	131 Move [X29-88], V0
	132 Move [X29-128], V0
	133 Move [X29-120], V0
	134 Move [X29-144], V0
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Subtract X1, X29, 144
	140 Move W0, W21
	141 Move X2, X31
	142 Call 0x338CEC4
	143 Add X8, X31, 0
	144 Subtract X1, X8, 64
	145 Add X31, X1, 0
	146 NotImplemented "Instruction MOVI not yet implemented."
	147 Subtract X0, X29, 192
	148 Move W2, 32
	149 Move X3, X31
	150 Move [X8-32], V0
	151 Move [X8-24], V0
	152 Move [X8-64], V0
	153 Move [X8-56], V0
	154 Call ValueStringBuilder..ctor, X0, X1
	155 Move X0, [X26]
	156 And W31, W23, 0xFFFF
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {161}
	160 Call 0x1C17DFC
	161 Subtract X0, X29, 192
	162 Subtract X1, X29, 144
	163 Move W2, W23
	164 Move W3, W22
	165 Move X4, X24
	166 Move W5, W31
	167 Call Number.NumberToString, X0, X1, X2, X3, X4, X5
	168 Compare W8, 0
	169 JumpIfNotEqual {171}
	170 Call 0x1C17DFC
	171 Subtract X0, X29, 192
	172 Subtract X1, X29, 144
	173 Move X2, X20
	174 Move X3, X19
	175 Move X4, X24
	176 Call Number.NumberToStringFormat, X0, X1, X2, X3
	177 Subtract X0, X29, 192
	178 Move X1, X31
	179 Call ValueStringBuilder.ToString, X0
	180 Call 0x3EB2B20

Method: System.Boolean TryFormatUInt32(System.UInt32 value, System.ReadOnlySpan`1<System.Char> format, System.IFormatProvider provider, System.Span`1<System.Char> destination, out System.Int32 charsWritten)

Disassembly:
	0x0337B5A8 LDR X8, [X8]
	0x0337B5AC CMP X9, X8
	0x0337B5B0 B.NE 0x337B5EC
	0x0337B5B4 MOV X0, X20
	0x0337B5B8 BL 0x1C16E08
	0x0337B5BC LDR W8, [X0]
	0x0337B5C0 LDR W9, [X19]
	0x0337B5C4 CMP W9, W8
	0x0337B5C8 B.GE 0x337B5DC
	0x0337B5CC MOVN W0, 0x0
	0x0337B5D0 B 0x337B5E0
	0x0337B5D4 MOVZ W0, 0x1
	0x0337B5D8 B 0x337B5E0
	0x0337B5DC CSET W0, GT
	0x0337B5E0 LDP X20, X19, [X31 + 0x10]
	0x0337B5E4 LDP X30, X21, [X31], #0x20
	0x0337B5E8 RET
	0x0337B5EC ADRP X0, 0xD80000
	0x0337B5F0 LDR X0, [X0 + 0x578]
	0x0337B5F4 BL 0x1C16D08
	0x0337B5F8 BL 0x1C16F10
	0x0337B5FC MOV X19, X0
	0x0337B600 ADRP X0, 0xDAF000
	0x0337B604 LDR X0, [X0 + 0xE90]
	0x0337B608 BL 0x1C16D08
	0x0337B60C MOV X1, X0
	0x0337B610 MOV X0, X19
	0x0337B614 MOV X2, X31
	0x0337B618 BL 0x3314A68
	0x0337B61C ADRP X0, 0xDAF000
	0x0337B620 LDR X0, [X0 + 0xE98]
	0x0337B624 BL 0x1C16D08
	0x0337B628 MOV X1, X0
	0x0337B62C MOV X0, X19
	0x0337B630 BL 0x1C16DEC
	0x0337B634 LDR W8, [X0]
	0x0337B638 CMP W8, W1
	0x0337B63C B.GE 0x337B648
	0x0337B640 MOVN W0, 0x0
	0x0337B644 RET
	0x0337B648 CSET W0, GT
	0x0337B64C RET
	0x0337B650 STP X30, X21, [X31 - 0x20]!
	0x0337B654 STP X20, X19, [X31 + 0x10]
	0x0337B658 ADRP X21, 0x1061000
	0x0337B65C LDRB W8, [X21 + 0xF54]
	0x0337B660 MOV X19, X1
	0x0337B664 MOV X20, X0
	0x0337B668 TBNZ X8, 0x0, 0x337B680
	0x0337B66C ADRP X0, 0xD78000
	0x0337B670 LDR X0, [X0 + 0x758]
	0x0337B674 BL 0x1C16CF4
	0x0337B678 MOVZ W8, 0x1
	0x0337B67C STRB W8, [X21 + 0xF54]
	0x0337B680 CBZ X19, 0x337B69C
	0x0337B684 ADRP X8, 0xD78000
	0x0337B688 LDR X8, [X8 + 0x758]
	0x0337B68C LDR X9, [X19]
	0x0337B690 LDR X8, [X8]
	0x0337B694 CMP X9, X8
	0x0337B698 B.EQ 0x337B6A4
	0x0337B69C MOV W0, W31
	0x0337B6A0 B 0x337B6BC
	0x0337B6A4 LDR W20, [X20]
	0x0337B6A8 MOV X0, X19
	0x0337B6AC BL 0x1C16E08
	0x0337B6B0 LDR W8, [X0]
	0x0337B6B4 CMP W20, W8
	0x0337B6B8 CSET W0, EQ
	0x0337B6BC LDP X20, X19, [X31 + 0x10]
	0x0337B6C0 LDP X30, X21, [X31], #0x20
	0x0337B6C4 RET
	0x0337B6C8 LDR W8, [X0]
	0x0337B6CC CMP W8, W1
	0x0337B6D0 CSET W0, EQ
	0x0337B6D4 RET
	0x0337B6D8 LDR W0, [X0]
	0x0337B6DC RET
	0x0337B6E0 STR X30, [X31 - 0x30]!
	0x0337B6E4 STP X22, X21, [X31 + 0x10]
	0x0337B6E8 STP X20, X19, [X31 + 0x20]
	0x0337B6EC ADRP X22, 0x1061000
	0x0337B6F0 ADRP X20, 0xDA7000
	0x0337B6F4 ADRP X21, 0xDAD000
	0x0337B6F8 LDRB W8, [X22 + 0xF55]
	0x0337B6FC LDR X20, [X20 + 0x1D8]
	0x0337B700 LDR X21, [X21 + 0x78]
	0x0337B704 MOV X19, X0
	0x0337B708 TBNZ X8, 0x0, 0x337B72C
	0x0337B70C ADRP X0, 0xDAD000
	0x0337B710 LDR X0, [X0 + 0x78]
	0x0337B714 BL 0x1C16CF4
	0x0337B718 ADRP X0, 0xDA7000
	0x0337B71C LDR X0, [X0 + 0x1D8]
	0x0337B720 BL 0x1C16CF4
	0x0337B724 MOVZ W8, 0x1
	0x0337B728 STRB W8, [X22 + 0xF55]
	0x0337B72C LDR X1, [X20]
	0x0337B730 LDR W19, [X19]
	0x0337B734 MOV X0, X31
	0x0337B738 BL 0x25BF134
	0x0337B73C MOV X20, X0
	0x0337B740 LDR X0, [X21]
	0x0337B744 MOV X21, X1
	0x0337B748 LDR W8, [X0 + 0xE0]
	0x0337B74C CBNZ W8, 0x337B754
	0x0337B750 BL 0x1C16DFC
	0x0337B754 MOV W0, W19
	0x0337B758 MOV X1, X20
	0x0337B75C MOV X2, X21
	0x0337B760 LDP X20, X19, [X31 + 0x20]
	0x0337B764 LDP X22, X21, [X31 + 0x10]
	0x0337B768 MOV X3, X31
	0x0337B76C LDR X30, [X31], #0x30
	0x0337B770 B 0x3379D88
	0x0337B774 STR X30, [X31 - 0x30]!
	0x0337B778 STP X22, X21, [X31 + 0x10]
	0x0337B77C STP X20, X19, [X31 + 0x20]
	0x0337B780 ADRP X21, 0x1061000
	0x0337B784 LDRB W8, [X21 + 0xF56]
	0x0337B788 MOV X20, X1
	0x0337B78C MOV X19, X0
	0x0337B790 TBNZ X8, 0x0, 0x337B7A8
	0x0337B794 ADRP X0, 0xDAD000
	0x0337B798 LDR X0, [X0 + 0x78]
	0x0337B79C BL 0x1C16CF4
	0x0337B7A0 MOVZ W8, 0x1
	0x0337B7A4 STRB W8, [X21 + 0xF56]
	0x0337B7A8 ADRP X21, 0x105E000
	0x0337B7AC LDRB W8, [X21 + 0x762]
	0x0337B7B0 LDR W19, [X19]
	0x0337B7B4 CBNZ W8, 0x337B7CC
	0x0337B7B8 ADRP X0, 0xD9F000
	0x0337B7BC LDR X0, [X0 + 0x290]
	0x0337B7C0 BL 0x1C16CF4
	0x0337B7C4 MOVZ W8, 0x1
	0x0337B7C8 STRB W8, [X21 + 0x762]
	0x0337B7CC ADRP X22, 0xDAD000
	0x0337B7D0 LDR X22, [X22 + 0x78]
	0x0337B7D4 CBZ X20, 0x337B7F0
	0x0337B7D8 MOV X0, X20
	0x0337B7DC MOV X1, X31
	0x0337B7E0 BL 0x3225708
	0x0337B7E4 LDR W20, [X20 + 0x10]
	0x0337B7E8 MOV X21, X0
	0x0337B7EC B 0x337B7F4
	0x0337B7F0 MOV X21, X31
	0x0337B7F4 LDR X0, [X22]
	0x0337B7F8 LDR W8, [X0 + 0xE0]
	0x0337B7FC CBNZ W8, 0x337B804
	0x0337B800 BL 0x1C16DFC
	0x0337B804 MOV W0, W19
	0x0337B808 MOV X1, X21
	0x0337B80C MOV X2, X20
	0x0337B810 LDP X20, X19, [X31 + 0x20]
	0x0337B814 LDP X22, X21, [X31 + 0x10]
	0x0337B818 MOV X3, X31
	0x0337B81C LDR X30, [X31], #0x30
	0x0337B820 B 0x3379D88
	0x0337B824 STP X30, X23, [X31 - 0x30]!
	0x0337B828 STP X22, X21, [X31 + 0x10]
	0x0337B82C STP X20, X19, [X31 + 0x20]
	0x0337B830 ADRP X23, 0x1061000
	0x0337B834 ADRP X21, 0xDA7000
	0x0337B838 ADRP X22, 0xDAD000
	0x0337B83C LDRB W8, [X23 + 0xF57]
	0x0337B840 LDR X21, [X21 + 0x1D8]
	0x0337B844 LDR X22, [X22 + 0x78]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 224
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X28+40]
	017 Move X26, 0x1062000
	018 Move X19, 0xDAE000
	019 Move X20, X6
	020 Move [X29-24], X8
	021 Move W8, [X26+4033]
	022 Move X19, [X19+120]
	023 Move X21, X5
	024 Move X27, X4
	025 Move X25, X3
	026 Move X22, X2
	027 Move X23, X1
	028 Move W24, W0
	029 Subtract X9, X29, 160
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {46}
	034 Move X0, 0xDAE000
	035 Move X0, [X0+120]
	036 Call 0x1C17CF4
	037 Move X0, 0xDA8000
	038 Move X0, [X0+40]
	039 Call 0x1C17CF4
	040 Move X0, 0xDA8000
	041 Move X0, [X0+1256]
	042 Call 0x1C17CF4
	043 Subtract X9, X29, 160
	044 Move W8, 1
	045 Move [X26+4033], W8
	046 Move X0, [X19]
	047 NotImplemented "Instruction MOVI not yet implemented."
	048 Move [X29-164], W31
	049 Move [X9+106], V0
	050 Move [X29-80], V0
	051 Move [X29-72], V0
	052 Move [X29-112], V0
	053 Move [X29-104], V0
	054 Move [X29-144], V0
	055 Move [X29-136], V0
	056 Move [X29-160], V0
	057 Move [X29-208], V0
	058 Move [X29-200], V0
	059 Move W8, [X0+224]
	060 Compare W22, 0
	061 JumpIfEqual {99}
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Subtract X2, X29, 164
	066 Move X0, X23
	067 Move X1, X22
	068 Call Number.ParseFormatSpecifier, X0, X1
	069 Move W26, W0
	070 Move X0, X25
	071 Move X1, X31
	072 Call NumberFormatInfo.GetInstance, X0
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 Move W8, 0xFFDF
	075 And W10, W26, W8
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CSET not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CSET not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 And W8, W8, W9
	082 Compare W8, 0
	083 JumpIfNotEqual {106}
	084 And W8, W26, 0xFFFFFFDF
	085 And W8, W8, 0xFFFF
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X0, [X19]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Subtract W1, W26, 33
	093 Move W0, W24
	094 Move W2, W25
	095 Move X3, X27
	096 Move X4, X21
	097 Move X5, X20
	098 Call Number.TryInt32ToHexStr, X0, X1, X2, X3, X4
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move TEMP, 0
	103 Not TEMP
	104 Move W1, TEMP
	105 Move W0, W24
	106 Move X0, [X19]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move W0, W24
	112 Move W1, W25
	113 Move X2, X27
	114 Move X3, X21
	115 Move X4, X20
	116 Call Number.TryUInt32ToDecStr, X0, X1, X2, X3
	117 Move X8, [X28+40]
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 And W0, W0, 1
	121 Add X31, X29, 0
	122 Move X20, [X31+80]
	123 Move X19, [X31+88]
	124 Move X22, [X31+64]
	125 Move X21, [X31+72]
	126 Move X24, [X31+48]
	127 Move X23, [X31+56]
	128 Move X26, [X31+32]
	129 Move X25, [X31+40]
	130 Move X28, [X31+16]
	131 Move X27, [X31+24]
	132 Move X29, [X31+96]
	133 Move X30, [X31+104]
	134 Return X0
	135 Move [X29-216], X0
	136 Move X0, [X19]
	137 NotImplemented "Instruction MOVI not yet implemented."
	138 Subtract X8, X29, 160
	139 Move [X8+106], V0
	140 Move [X29-80], V0
	141 Move [X29-72], V0
	142 Move [X29-112], V0
	143 Move [X29-104], V0
	144 Move [X29-144], V0
	145 Move [X29-136], V0
	146 Move [X29-160], V0
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1C17DFC
	151 Subtract X1, X29, 160
	152 Move W0, W24
	153 Move X2, X31
	154 Call 0x338CEC4
	155 Add X8, X31, 0
	156 Subtract X1, X8, 64
	157 Add X31, X1, 0
	158 NotImplemented "Instruction MOVI not yet implemented."
	159 Subtract X0, X29, 208
	160 Move W2, 32
	161 Move X3, X31
	162 Move [X8-32], V0
	163 Move [X8-24], V0
	164 Move [X8-64], V0
	165 Move [X8-56], V0
	166 Call ValueStringBuilder..ctor, X0, X1
	167 Move X0, [X19]
	168 And W31, W26, 0xFFFF
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {173}
	172 Call 0x1C17DFC
	173 NotImplemented "Instruction LDUR not yet implemented."
	174 Subtract X0, X29, 208
	175 Subtract X1, X29, 160
	176 Move W2, W26
	177 Move W3, W25
	178 Move W5, W31
	179 Call Number.NumberToString, X0, X1, X2, X3, X4, X5
	180 Compare W8, 0
	181 JumpIfNotEqual {183}
	182 Call 0x1C17DFC
	183 NotImplemented "Instruction LDUR not yet implemented."
	184 Subtract X0, X29, 208
	185 Subtract X1, X29, 160
	186 Move X2, X23
	187 Move X3, X22
	188 Call Number.NumberToStringFormat, X0, X1, X2, X3
	189 Subtract X0, X29, 208
	190 Move X1, X27
	191 Move X2, X21
	192 Move X3, X20
	193 Move X4, X31
	194 Call ValueStringBuilder.TryCopyTo, X0, X1, X2
	195 Call 0x3EB2B20

Method: System.String FormatInt64(System.Int64 value, System.ReadOnlySpan`1<System.Char> format, System.IFormatProvider provider)

Disassembly:
	0x0337DA00 LDR X20, [X20 + 0x9E8]
	0x0337DA04 MOV X19, X0
	0x0337DA08 TBNZ X8, 0x0, 0x337DA20
	0x0337DA0C ADRP X0, 0xD7F000
	0x0337DA10 LDR X0, [X0 + 0x9E8]
	0x0337DA14 BL 0x1C16CF4
	0x0337DA18 MOVZ W8, 0x1
	0x0337DA1C STRB W8, [X21 + 0xF7E]
	0x0337DA20 LDR X0, [X20]
	0x0337DA24 LDR X19, [X19]
	0x0337DA28 LDR W8, [X0 + 0xE0]
	0x0337DA2C CBNZ W8, 0x337DA34
	0x0337DA30 BL 0x1C16DFC
	0x0337DA34 MOV X0, X19
	0x0337DA38 LDP X20, X19, [X31 + 0x10]
	0x0337DA3C MOV X1, X31
	0x0337DA40 LDP X30, X21, [X31], #0x20
	0x0337DA44 B 0x331F4E4
	0x0337DA48 STP X30, X21, [X31 - 0x20]!
	0x0337DA4C STP X20, X19, [X31 + 0x10]
	0x0337DA50 ADRP X21, 0x105F000
	0x0337DA54 ADRP X20, 0xD7F000
	0x0337DA58 LDRB W8, [X21 + 0xF7F]
	0x0337DA5C LDR X20, [X20 + 0x9E8]
	0x0337DA60 MOV X19, X0
	0x0337DA64 TBNZ X8, 0x0, 0x337DA7C
	0x0337DA68 ADRP X0, 0xD7F000
	0x0337DA6C LDR X0, [X0 + 0x9E8]
	0x0337DA70 BL 0x1C16CF4
	0x0337DA74 MOVZ W8, 0x1
	0x0337DA78 STRB W8, [X21 + 0xF7F]
	0x0337DA7C LDR X0, [X20]
	0x0337DA80 LDR X19, [X19]
	0x0337DA84 LDR W8, [X0 + 0xE0]
	0x0337DA88 CBNZ W8, 0x337DA90
	0x0337DA8C BL 0x1C16DFC
	0x0337DA90 MOV X0, X19
	0x0337DA94 LDP X20, X19, [X31 + 0x10]
	0x0337DA98 MOV X1, X31
	0x0337DA9C LDP X30, X21, [X31], #0x20
	0x0337DAA0 B 0x331FA50
	0x0337DAA4 STP X30, X21, [X31 - 0x20]!
	0x0337DAA8 STP X20, X19, [X31 + 0x10]
	0x0337DAAC ADRP X21, 0x105F000
	0x0337DAB0 ADRP X20, 0xD7F000
	0x0337DAB4 LDRB W8, [X21 + 0xF80]
	0x0337DAB8 LDR X20, [X20 + 0x9E8]
	0x0337DABC MOV X19, X0
	0x0337DAC0 TBNZ X8, 0x0, 0x337DAD8
	0x0337DAC4 ADRP X0, 0xD7F000
	0x0337DAC8 LDR X0, [X0 + 0x9E8]
	0x0337DACC BL 0x1C16CF4
	0x0337DAD0 MOVZ W8, 0x1
	0x0337DAD4 STRB W8, [X21 + 0xF80]
	0x0337DAD8 LDR X0, [X20]
	0x0337DADC LDR X19, [X19]
	0x0337DAE0 LDR W8, [X0 + 0xE0]
	0x0337DAE4 CBNZ W8, 0x337DAEC
	0x0337DAE8 BL 0x1C16DFC
	0x0337DAEC MOV X0, X19
	0x0337DAF0 LDP X20, X19, [X31 + 0x10]
	0x0337DAF4 MOV X1, X31
	0x0337DAF8 LDP X30, X21, [X31], #0x20
	0x0337DAFC B 0x331FF98
	0x0337DB00 STP X30, X21, [X31 - 0x20]!
	0x0337DB04 STP X20, X19, [X31 + 0x10]
	0x0337DB08 ADRP X21, 0x105F000
	0x0337DB0C ADRP X20, 0xD7F000
	0x0337DB10 LDRB W8, [X21 + 0xF81]
	0x0337DB14 LDR X20, [X20 + 0x9E8]
	0x0337DB18 MOV X19, X0
	0x0337DB1C TBNZ X8, 0x0, 0x337DB34
	0x0337DB20 ADRP X0, 0xD7F000
	0x0337DB24 LDR X0, [X0 + 0x9E8]
	0x0337DB28 BL 0x1C16CF4
	0x0337DB2C MOVZ W8, 0x1
	0x0337DB30 STRB W8, [X21 + 0xF81]
	0x0337DB34 LDR X0, [X20]
	0x0337DB38 LDR X19, [X19]
	0x0337DB3C LDR W8, [X0 + 0xE0]
	0x0337DB40 CBNZ W8, 0x337DB48
	0x0337DB44 BL 0x1C16DFC
	0x0337DB48 MOV X0, X19
	0x0337DB4C LDP X20, X19, [X31 + 0x10]
	0x0337DB50 MOV X1, X31
	0x0337DB54 LDP X30, X21, [X31], #0x20
	0x0337DB58 B 0x33203EC
	0x0337DB5C STP X30, X21, [X31 - 0x20]!
	0x0337DB60 STP X20, X19, [X31 + 0x10]
	0x0337DB64 ADRP X21, 0x105F000
	0x0337DB68 ADRP X20, 0xD7F000
	0x0337DB6C LDRB W8, [X21 + 0xF82]
	0x0337DB70 LDR X20, [X20 + 0x9E8]
	0x0337DB74 MOV X19, X0
	0x0337DB78 TBNZ X8, 0x0, 0x337DB90
	0x0337DB7C ADRP X0, 0xD7F000
	0x0337DB80 LDR X0, [X0 + 0x9E8]
	0x0337DB84 BL 0x1C16CF4
	0x0337DB88 MOVZ W8, 0x1
	0x0337DB8C STRB W8, [X21 + 0xF82]
	0x0337DB90 LDR X0, [X20]
	0x0337DB94 LDR X19, [X19]
	0x0337DB98 LDR W8, [X0 + 0xE0]
	0x0337DB9C CBNZ W8, 0x337DBA4
	0x0337DBA0 BL 0x1C16DFC
	0x0337DBA4 MOV X0, X19
	0x0337DBA8 LDP X20, X19, [X31 + 0x10]
	0x0337DBAC MOV X1, X31
	0x0337DBB0 LDP X30, X21, [X31], #0x20
	0x0337DBB4 B 0x33208F8
	0x0337DBB8 LDR X0, [X0]
	0x0337DBBC RET
	0x0337DBC0 STP X30, X21, [X31 - 0x20]!
	0x0337DBC4 STP X20, X19, [X31 + 0x10]
	0x0337DBC8 ADRP X21, 0x105F000
	0x0337DBCC ADRP X20, 0xD7F000
	0x0337DBD0 LDRB W8, [X21 + 0xF83]
	0x0337DBD4 LDR X20, [X20 + 0x9E8]
	0x0337DBD8 MOV X19, X0
	0x0337DBDC TBNZ X8, 0x0, 0x337DBF4
	0x0337DBE0 ADRP X0, 0xD7F000
	0x0337DBE4 LDR X0, [X0 + 0x9E8]
	0x0337DBE8 BL 0x1C16CF4
	0x0337DBEC MOVZ W8, 0x1
	0x0337DBF0 STRB W8, [X21 + 0xF83]
	0x0337DBF4 LDR X0, [X20]
	0x0337DBF8 LDR X19, [X19]
	0x0337DBFC LDR W8, [X0 + 0xE0]
	0x0337DC00 CBNZ W8, 0x337DC08
	0x0337DC04 BL 0x1C16DFC
	0x0337DC08 MOV X0, X19
	0x0337DC0C LDP X20, X19, [X31 + 0x10]
	0x0337DC10 MOV X1, X31
	0x0337DC14 LDP X30, X21, [X31], #0x20
	0x0337DC18 B 0x3321320
	0x0337DC1C STP X30, X21, [X31 - 0x20]!
	0x0337DC20 STP X20, X19, [X31 + 0x10]
	0x0337DC24 ADRP X21, 0x105F000
	0x0337DC28 ADRP X20, 0xD7F000
	0x0337DC2C LDRB W8, [X21 + 0xF84]
	0x0337DC30 LDR X20, [X20 + 0x9E8]
	0x0337DC34 MOV X19, X0
	0x0337DC38 TBNZ X8, 0x0, 0x337DC50
	0x0337DC3C ADRP X0, 0xD7F000
	0x0337DC40 LDR X0, [X0 + 0x9E8]
	0x0337DC44 BL 0x1C16CF4
	0x0337DC48 MOVZ W8, 0x1
	0x0337DC4C STRB W8, [X21 + 0xF84]
	0x0337DC50 LDR X0, [X20]
	0x0337DC54 LDR X19, [X19]
	0x0337DC58 LDR W8, [X0 + 0xE0]
	0x0337DC5C CBNZ W8, 0x337DC64
	0x0337DC60 BL 0x1C16DFC
	0x0337DC64 MOV X0, X19
	0x0337DC68 LDP X20, X19, [X31 + 0x10]
	0x0337DC6C MOV X1, X31
	0x0337DC70 LDP X30, X21, [X31], #0x20
	0x0337DC74 B 0x3321784
	0x0337DC78 STP X30, X21, [X31 - 0x20]!
	0x0337DC7C STP X20, X19, [X31 + 0x10]
	0x0337DC80 ADRP X21, 0x105F000
	0x0337DC84 ADRP X20, 0xD7F000
	0x0337DC88 LDRB W8, [X21 + 0xF85]
	0x0337DC8C LDR X20, [X20 + 0x9E8]
	0x0337DC90 MOV X19, X0
	0x0337DC94 TBNZ X8, 0x0, 0x337DCAC

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 192
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X25+40]
	017 Move X23, 0x1060000
	018 Move X26, 0xDAC000
	019 Move X22, X3
	020 Move [X29-8], X8
	021 Move W8, [X23+4034]
	022 Move X26, [X26+120]
	023 Move X20, X2
	024 Move X21, X1
	025 Move X19, X0
	026 Subtract X27, X29, 144
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {42}
	031 Move X0, 0xDAC000
	032 Move X0, [X0+120]
	033 Call 0x1C17CF4
	034 Move X0, 0xDA6000
	035 Move X0, [X0+40]
	036 Call 0x1C17CF4
	037 Move X0, 0xDA6000
	038 Move X0, [X0+1256]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X23+4034], W8
	042 Move X0, [X26]
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Move [X29-148], W31
	045 Move [X27+106], V0
	046 Move [X29-64], V0
	047 Move [X29-56], V0
	048 Move [X29-96], V0
	049 Move [X29-88], V0
	050 Move [X29-128], V0
	051 Move [X29-120], V0
	052 Move [X29-144], V0
	053 Move [X29-192], V0
	054 Move [X29-184], V0
	055 Move W8, [X0+224]
	056 Move TEMP, X19
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {69}
	060 Compare W20, 0
	061 JumpIfNotEqual {69}
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move TEMP, 0
	066 Not TEMP
	067 Move W1, TEMP
	068 Move X0, X19
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Subtract X2, X29, 148
	073 Move X0, X21
	074 Move X1, X20
	075 Call Number.ParseFormatSpecifier, X0, X1
	076 Move W23, W0
	077 Move X0, X22
	078 Move X1, X31
	079 Call NumberFormatInfo.GetInstance, X0
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 Move W8, 0xFFDF
	082 And W10, W23, W8
	083 NotImplemented "Instruction CMP not yet implemented."
	084 NotImplemented "Instruction CSET not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction CSET not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X24, X0
	089 And W8, W8, W9
	090 Compare W8, 0
	091 JumpIfNotEqual {104}
	092 And W8, W23, 0xFFFFFFDF
	093 And W8, W8, 0xFFFF
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X0, [X26]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Subtract W1, W23, 33
	101 Move X0, X19
	102 Move W2, W22
	103 Call Number.Int64ToHexStr, X0, X1, X2
	104 Move TEMP, X19
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfEqual {175}
	108 Move X0, [X26]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Move X0, X19
	114 Move W1, W22
	115 Call Number.UInt64ToDecStr, X0, X1
	116 Move X8, [X25+40]
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Add X31, X29, 0
	120 Move X20, [X31+80]
	121 Move X19, [X31+88]
	122 Move X22, [X31+64]
	123 Move X21, [X31+72]
	124 Move X24, [X31+48]
	125 Move X23, [X31+56]
	126 Move X26, [X31+32]
	127 Move X25, [X31+40]
	128 Move X28, [X31+16]
	129 Move X27, [X31+24]
	130 Move X29, [X31+96]
	131 Move X30, [X31+104]
	132 Return X0
	133 Move X0, [X26]
	134 NotImplemented "Instruction MOVI not yet implemented."
	135 Move [X27+106], V0
	136 Move [X29-64], V0
	137 Move [X29-56], V0
	138 Move [X29-96], V0
	139 Move [X29-88], V0
	140 Move [X29-128], V0
	141 Move [X29-120], V0
	142 Move [X29-144], V0
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {147}
	146 Call 0x1C17DFC
	147 Subtract X1, X29, 144
	148 Move X0, X19
	149 Call Number.Int64ToNumber, X0, X1
	150 Add X8, X31, 0
	151 Subtract X1, X8, 64
	152 Add X31, X1, 0
	153 NotImplemented "Instruction MOVI not yet implemented."
	154 Subtract X0, X29, 192
	155 Move W2, 32
	156 Move X3, X31
	157 Move [X8-32], V0
	158 Move [X8-24], V0
	159 Move [X8-64], V0
	160 Move [X8-56], V0
	161 Call ValueStringBuilder..ctor, X0, X1
	162 Move X0, [X26]
	163 And W31, W23, 0xFFFF
	164 Move W8, [X0+224]
	165 Compare W8, 0
	166 JumpIfNotEqual {168}
	167 Call 0x1C17DFC
	168 Subtract X0, X29, 192
	169 Subtract X1, X29, 144
	170 Move W2, W23
	171 Move W3, W22
	172 Move X4, X24
	173 Move W5, W31
	174 Call Number.NumberToString, X0, X1, X2, X3, X4, X5
	175 Compare X24, 0
	176 JumpIfEqual {199}
	177 Move X0, [X26]
	178 Move X20, [X24+48]
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {183}
	182 Call 0x1C17DFC
	183 Move X0, X19
	184 Move W1, W22
	185 Move X2, X20
	186 Call Number.NegativeInt64ToDecStr, X0, X1, X2
	187 Compare W8, 0
	188 JumpIfNotEqual {190}
	189 Call 0x1C17DFC
	190 Subtract X0, X29, 192
	191 Subtract X1, X29, 144
	192 Move X2, X21
	193 Move X3, X20
	194 Move X4, X24
	195 Call Number.NumberToStringFormat, X0, X1, X2, X3
	196 Subtract X0, X29, 192
	197 Move X1, X31
	198 Call ValueStringBuilder.ToString, X0
	199 Call 0x1C17F20
	200 Call 0x3EB2B20

Method: System.Boolean TryFormatInt64(System.Int64 value, System.ReadOnlySpan`1<System.Char> format, System.IFormatProvider provider, System.Span`1<System.Char> destination, out System.Int32 charsWritten)

Disassembly:
	0x0337DF34 STR W8, [X19 + 0x60]
	0x0337DF38 LDP X30, X19, [X31], #0x10
	0x0337DF3C RET
	0x0337DF40 STP X30, X19, [X31 - 0x10]!
	0x0337DF44 MOV X3, X31
	0x0337DF48 MOV X19, X0
	0x0337DF4C BL 0x338C990
	0x0337DF50 MOVZ W8, 0x1509
	0x0337DF54 MOVK W8, 0x80130000
	0x0337DF58 STR W8, [X19 + 0x60]
	0x0337DF5C LDP X30, X19, [X31], #0x10
	0x0337DF60 RET
	0x0337DF64 MOV X4, X31
	0x0337DF68 B 0x338CA74
	0x0337DF6C STP X30, X21, [X31 - 0x20]!
	0x0337DF70 STP X20, X19, [X31 + 0x10]
	0x0337DF74 ADRP X20, 0x105F000
	0x0337DF78 ADRP X21, 0xDAD000
	0x0337DF7C LDRB W8, [X20 + 0xF8A]
	0x0337DF80 LDR X21, [X21 + 0xED0]
	0x0337DF84 MOV X19, X0
	0x0337DF88 TBNZ X8, 0x0, 0x337DFA0
	0x0337DF8C ADRP X0, 0xDAD000
	0x0337DF90 LDR X0, [X0 + 0xED0]
	0x0337DF94 BL 0x1C16CF4
	0x0337DF98 MOVZ W8, 0x1
	0x0337DF9C STRB W8, [X20 + 0xF8A]
	0x0337DFA0 LDR X1, [X21]
	0x0337DFA4 MOV X0, X19
	0x0337DFA8 MOV X2, X31
	0x0337DFAC BL 0x338C8D8
	0x0337DFB0 MOVZ W8, 0x153A
	0x0337DFB4 MOVK W8, 0x80130000
	0x0337DFB8 STR W8, [X19 + 0x60]
	0x0337DFBC LDP X20, X19, [X31 + 0x10]
	0x0337DFC0 LDP X30, X21, [X31], #0x20
	0x0337DFC4 RET
	0x0337DFC8 STP X30, X19, [X31 - 0x10]!
	0x0337DFCC MOV X2, X31
	0x0337DFD0 MOV X19, X0
	0x0337DFD4 BL 0x338C8D8
	0x0337DFD8 MOVZ W8, 0x153A
	0x0337DFDC MOVK W8, 0x80130000
	0x0337DFE0 STR W8, [X19 + 0x60]
	0x0337DFE4 LDP X30, X19, [X31], #0x10
	0x0337DFE8 RET
	0x0337DFEC MOV X4, X31
	0x0337DFF0 B 0x338CA74
	0x0337DFF4 STP X30, X21, [X31 - 0x20]!
	0x0337DFF8 STP X20, X19, [X31 + 0x10]
	0x0337DFFC ADRP X20, 0x105F000
	0x0337E000 ADRP X21, 0xD75000
	0x0337E004 LDRB W8, [X20 + 0xF8B]
	0x0337E008 B 0x3EB1634
	0x0337E00C MOV X19, X0
	0x0337E010 TBNZ X8, 0x0, 0x337E028
	0x0337E014 ADRP X0, 0xD75000
	0x0337E018 LDR X0, [X0 + 0x7D0]
	0x0337E01C BL 0x1C16CF4
	0x0337E020 MOVZ W8, 0x1
	0x0337E024 STRB W8, [X20 + 0xF8B]
	0x0337E028 LDR X0, [X21]
	0x0337E02C LDR W8, [X0 + 0xE0]
	0x0337E030 CBNZ W8, 0x337E038
	0x0337E034 BL 0x1C16DFC
	0x0337E038 MOV X0, X19
	0x0337E03C LDP X20, X19, [X31 + 0x10]
	0x0337E040 MOV X1, X31
	0x0337E044 LDP X30, X21, [X31], #0x20
	0x0337E048 B 0x33B2C54
	0x0337E04C STR X30, [X31 - 0x30]!
	0x0337E050 STP X22, X21, [X31 + 0x10]
	0x0337E054 STP X20, X19, [X31 + 0x20]
	0x0337E058 ADRP X21, 0x105E000
	0x0337E05C ADRP X22, 0xD75000
	0x0337E060 LDRB W8, [X21 + 0xF8C]
	0x0337E064 LDR X22, [X22 + 0x7D0]
	0x0337E068 MOV X19, X1
	0x0337E06C MOV X20, X0
	0x0337E070 TBNZ X8, 0x0, 0x337E088
	0x0337E074 ADRP X0, 0xD75000
	0x0337E078 LDR X0, [X0 + 0x7D0]
	0x0337E07C BL 0x1C16CF4
	0x0337E080 MOVZ W8, 0x1
	0x0337E084 STRB W8, [X21 + 0xF8C]
	0x0337E088 LDR X0, [X22]
	0x0337E08C LDR W8, [X0 + 0xE0]
	0x0337E090 CBNZ W8, 0x337E098
	0x0337E094 BL 0x1C16DFC
	0x0337E098 MOV X0, X20
	0x0337E09C MOV X1, X19
	0x0337E0A0 LDP X20, X19, [X31 + 0x20]
	0x0337E0A4 LDP X22, X21, [X31 + 0x10]
	0x0337E0A8 MOV X2, X31
	0x0337E0AC LDR X30, [X31], #0x30
	0x0337E0B0 B 0x33B2C70
	0x0337E0B4 STR X30, [X31 - 0x40]!
	0x0337E0B8 STP X24, X23, [X31 + 0x10]
	0x0337E0BC STP X22, X21, [X31 + 0x20]
	0x0337E0C0 STP X20, X19, [X31 + 0x30]
	0x0337E0C4 ADRP X24, 0x105E000
	0x0337E0C8 ADRP X23, 0xD75000
	0x0337E0CC LDRB W8, [X24 + 0xF8D]
	0x0337E0D0 LDR X23, [X23 + 0x7D0]
	0x0337E0D4 MOV X19, X3
	0x0337E0D8 MOV X20, X2
	0x0337E0DC MOV X21, X1
	0x0337E0E0 MOV X22, X0
	0x0337E0E4 TBNZ X8, 0x0, 0x337E0FC
	0x0337E0E8 ADRP X0, 0xD75000
	0x0337E0EC LDR X0, [X0 + 0x7D0]
	0x0337E0F0 BL 0x1C16CF4
	0x0337E0F4 MOVZ W8, 0x1
	0x0337E0F8 STRB W8, [X24 + 0xF8D]
	0x0337E0FC LDR X0, [X23]
	0x0337E100 LDR W8, [X0 + 0xE0]
	0x0337E104 CBNZ W8, 0x337E10C
	0x0337E108 BL 0x1C16DFC
	0x0337E10C MOV X0, X22
	0x0337E110 MOV X1, X21
	0x0337E114 MOV X2, X20
	0x0337E118 MOV X3, X19
	0x0337E11C LDP X20, X19, [X31 + 0x30]
	0x0337E120 LDP X22, X21, [X31 + 0x20]
	0x0337E124 LDP X24, X23, [X31 + 0x10]
	0x0337E128 MOV X4, X31
	0x0337E12C LDR X30, [X31], #0x40
	0x0337E130 B 0x33B2CD8
	0x0337E134 LDR W0, [X0 + 0x10]
	0x0337E138 RET
	0x0337E13C STR X30, [X31 - 0x20]!
	0x0337E140 STP X20, X19, [X31 + 0x10]
	0x0337E144 MOV W19, W1
	0x0337E148 MOV X1, X31
	0x0337E14C MOV X20, X0
	0x0337E150 BL 0x33BDD8C
	0x0337E154 STR W19, [X20 + 0x10]
	0x0337E158 LDP X20, X19, [X31 + 0x10]
	0x0337E15C LDR X30, [X31], #0x20
	0x0337E160 RET
	0x0337E164 STP X30, X21, [X31 - 0x20]!
	0x0337E168 STP X20, X19, [X31 + 0x10]
	0x0337E16C MOV W21, W1
	0x0337E170 MOV X1, X31
	0x0337E174 MOV X20, X2
	0x0337E178 MOV X19, X0
	0x0337E17C BL 0x33BDD8C
	0x0337E180 CMP W21, 0x2
	0x0337E184 B.HI 0x337E198
	0x0337E188 ADRP X8, 0xFFFFFFFFFD818000
	0x0337E18C ADD X8, X8, 0x864
	0x0337E190 LDR W8, [X8, W21, SXTW]
	0x0337E194 STR W8, [X19 + 0x10]
	0x0337E198 MOV X0, X20
	0x0337E19C MOV X1, X31
	0x0337E1A0 BL 0x32C2380
	0x0337E1A4 STR X0, [X19 + 0x18]
	0x0337E1A8 LDP X20, X19, [X31 + 0x10]
	0x0337E1AC LDP X30, X21, [X31], #0x20
	0x0337E1B0 RET
	0x0337E1B4 STR X30, [X31 - 0x10]!
	0x0337E1B8 LDR X0, [X0 + 0x18]
	0x0337E1BC CBZ X0, 0x337E1CC
	0x0337E1C0 MOV X1, X31
	0x0337E1C4 LDR X30, [X31], #0x10
	0x0337E1C8 B 0x32C2440
	0x0337E1CC BL 0x1C16F20
	0x0337E1D0 STP X30, X21, [X31 - 0x20]!
	0x0337E1D4 STP X20, X19, [X31 + 0x10]
	0x0337E1D8 ADRP X21, 0x105E000
	0x0337E1DC LDRB W8, [X21 + 0xF8E]
	0x0337E1E0 MOV W19, W1
	0x0337E1E4 MOV W20, W0
	0x0337E1E8 TBNZ X8, 0x0, 0x337E200
	0x0337E1EC ADRP X0, 0xDA1000
	0x0337E1F0 LDR X0, [X0 + 0xF8]
	0x0337E1F4 BL 0x1C16CF4
	0x0337E1F8 MOVZ W8, 0x1
	0x0337E1FC STRB W8, [X21 + 0xF8E]
	0x0337E200 CMP W20, 0x2
	0x0337E204 B.EQ 0x337E240
	0x0337E208 CMP W20, 0x1
	0x0337E20C B.EQ 0x337E270

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 224
	015 Move [X29-216], X6
	016 NotImplemented "Instruction MRS not yet implemented."
	017 Move X8, [X28+40]
	018 Move X26, 0x1060000
	019 Move X27, 0xDAC000
	020 Move X20, X5
	021 Move [X29-24], X8
	022 Move W8, [X26+4035]
	023 Move X27, [X27+120]
	024 Move X21, X4
	025 Move X25, X3
	026 Move X23, X2
	027 Move X24, X1
	028 Move X22, X0
	029 Subtract X19, X29, 160
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {45}
	034 Move X0, 0xDAC000
	035 Move X0, [X0+120]
	036 Call 0x1C17CF4
	037 Move X0, 0xDA6000
	038 Move X0, [X0+40]
	039 Call 0x1C17CF4
	040 Move X0, 0xDA6000
	041 Move X0, [X0+1256]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X26+4035], W8
	045 Move X0, [X27]
	046 NotImplemented "Instruction MOVI not yet implemented."
	047 Move [X29-164], W31
	048 Move [X19+106], V0
	049 Move [X29-80], V0
	050 Move [X29-72], V0
	051 Move [X29-112], V0
	052 Move [X29-104], V0
	053 Move [X29-144], V0
	054 Move [X29-136], V0
	055 Move [X29-160], V0
	056 Move [X29-208], V0
	057 Move [X29-200], V0
	058 Move W8, [X0+224]
	059 Move TEMP, X22
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {72}
	063 Compare W23, 0
	064 JumpIfNotEqual {72}
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move TEMP, 0
	069 Not TEMP
	070 Move W1, TEMP
	071 Move X0, X22
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Subtract X2, X29, 164
	076 Move X0, X24
	077 Move X1, X23
	078 Call Number.ParseFormatSpecifier, X0, X1
	079 Move W26, W0
	080 Move X0, X25
	081 Move X1, X31
	082 Call NumberFormatInfo.GetInstance, X0
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 Move W8, 0xFFDF
	085 And W10, W26, W8
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction CSET not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction CSET not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X10, X0
	092 And W8, W8, W9
	093 Compare W8, 0
	094 JumpIfNotEqual {110}
	095 And W8, W26, 0xFFFFFFDF
	096 And W8, W8, 0xFFFF
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X0, [X27]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 Subtract W1, W26, 33
	105 Move X0, X22
	106 Move W2, W25
	107 Move X3, X21
	108 Move X4, X20
	109 Call Number.TryInt64ToHexStr, X0, X1, X2, X3, X4
	110 Move TEMP, X22
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfEqual {186}
	114 Move X0, [X27]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {119}
	118 Call 0x1C17DFC
	119 Move X0, X22
	120 Move W1, W25
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 Move X2, X21
	123 Move X3, X20
	124 Call Number.TryUInt64ToDecStr, X0, X1, X2, X3
	125 Move X8, [X28+40]
	126 NotImplemented "Instruction LDUR not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 And W0, W0, 1
	129 Add X31, X29, 0
	130 Move X20, [X31+80]
	131 Move X19, [X31+88]
	132 Move X22, [X31+64]
	133 Move X21, [X31+72]
	134 Move X24, [X31+48]
	135 Move X23, [X31+56]
	136 Move X26, [X31+32]
	137 Move X25, [X31+40]
	138 Move X28, [X31+16]
	139 Move X27, [X31+24]
	140 Move X29, [X31+96]
	141 Move X30, [X31+104]
	142 Return X0
	143 Move X0, [X27]
	144 NotImplemented "Instruction MOVI not yet implemented."
	145 Move [X19+106], V0
	146 Move [X29-80], V0
	147 Move [X29-72], V0
	148 Move [X29-112], V0
	149 Move [X29-104], V0
	150 Move [X29-144], V0
	151 Move [X29-136], V0
	152 Move [X29-160], V0
	153 Move W8, [X0+224]
	154 Move [X29-224], X10
	155 Compare W8, 0
	156 JumpIfNotEqual {158}
	157 Call 0x1C17DFC
	158 Subtract X1, X29, 160
	159 Move X0, X22
	160 Call Number.Int64ToNumber, X0, X1
	161 Add X8, X31, 0
	162 Subtract X1, X8, 64
	163 Add X31, X1, 0
	164 NotImplemented "Instruction MOVI not yet implemented."
	165 Subtract X0, X29, 208
	166 Move W2, 32
	167 Move X3, X31
	168 Move [X8-32], V0
	169 Move [X8-24], V0
	170 Move [X8-64], V0
	171 Move [X8-56], V0
	172 Call ValueStringBuilder..ctor, X0, X1
	173 Move X0, [X27]
	174 And W31, W26, 0xFFFF
	175 Move W8, [X0+224]
	176 Compare W8, 0
	177 JumpIfNotEqual {179}
	178 Call 0x1C17DFC
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 Subtract X0, X29, 208
	181 Subtract X1, X29, 160
	182 Move W2, W26
	183 Move W3, W25
	184 Move W5, W31
	185 Call Number.NumberToString, X0, X1, X2, X3, X4, X5
	186 Compare X10, 0
	187 JumpIfEqual {216}
	188 Move X0, [X27]
	189 Move X23, [X10+48]
	190 Move W8, [X0+224]
	191 Compare W8, 0
	192 JumpIfNotEqual {194}
	193 Call 0x1C17DFC
	194 NotImplemented "Instruction LDUR not yet implemented."
	195 Move X0, X22
	196 Move W1, W25
	197 Move X2, X23
	198 Move X3, X21
	199 Move X4, X20
	200 Call Number.TryNegativeInt64ToDecStr, X0, X1, X2, X3, X4
	201 Compare W8, 0
	202 JumpIfNotEqual {204}
	203 Call 0x1C17DFC
	204 NotImplemented "Instruction LDUR not yet implemented."
	205 Subtract X0, X29, 208
	206 Subtract X1, X29, 160
	207 Move X2, X24
	208 Move X3, X23
	209 Call Number.NumberToStringFormat, X0, X1, X2, X3
	210 NotImplemented "Instruction LDUR not yet implemented."
	211 Subtract X0, X29, 208
	212 Move X1, X21
	213 Move X2, X20
	214 Move X4, X31
	215 Call ValueStringBuilder.TryCopyTo, X0, X1, X2
	216 Call 0x1C17F20
	217 Call 0x3EB2B20

Method: System.String FormatUInt64(System.UInt64 value, System.ReadOnlySpan`1<System.Char> format, System.IFormatProvider provider)

Disassembly:
	0x0338619C CMP W25, 0x1
	0x033861A0 B.MI 0x33861C4
	0x033861A4 SUB W25, W25, 0x1
	0x033861A8 MOV X0, X23
	0x033861AC MOV W1, W25
	0x033861B0 MOV X2, X31
	0x033861B4 BL 0x3222A1C
	0x033861B8 CMP W25, 0x0
	0x033861BC STRH W0, [X21], #0xFFFFFFFFFFFFFFFE
	0x033861C0 B.GT 0x33861A4
	0x033861C4 LDR W8, [X24 + 0x18]
	0x033861C8 SUB W9, W8, 0x1
	0x033861CC CMP W22, W9
	0x033861D0 B.GE 0x33861EC
	0x033861D4 SXTW X9, W22
	0x033861D8 ADD X22, X9, 0x1
	0x033861DC CMP W22, W8
	0x033861E0 B.CS 0x3386380
	0x033861E4 ADD X8, X24, X22, 0x2, LSL
	0x033861E8 LDR W27, [X8 + 0x20]
	0x033861EC MOV W8, W31
	0x033861F0 SUBS W29, W29, 0x1
	0x033861F4 MOV X9, X21
	0x033861F8 B.PL 0x3386160
	0x033861FC ADD X20, X20, W28, 0x1, SXTW
	0x03386200 LDR W27, [X31 + 0xC]
	0x03386204 LDR X28, [X31]
	0x03386208 CMP W27, 0x1
	0x0338620C B.LT 0x3386360
	0x03386210 ADRP X21, 0x1057000
	0x03386214 LDRB W8, [X21 + 0x4]
	0x03386218 CBNZ W8, 0x3386230
	0x0338621C ADRP X0, 0xD9C000
	0x03386220 LDR X0, [X0 + 0x588]
	0x03386224 BL 0x1C16CF4
	0x03386228 MOVZ W8, 0x1
	0x0338622C STRB W8, [X21 + 0x4]
	0x03386230 CBZ X28, 0x3386384
	0x03386234 LDR W8, [X28 + 0x10]
	0x03386238 CMP W8, 0x1
	0x0338623C B.NE 0x3386280
	0x03386240 LDRSW X21, [X19 + 0x18]
	0x03386244 LDR W8, [X19 + 0x10]
	0x03386248 CMP W21, W8
	0x0338624C B.GE 0x3386280
	0x03386250 CMP W21, W8
	0x03386254 B.CS 0x3386380
	0x03386258 LDR X22, [X19 + 0x8]
	0x0338625C MOV X0, X28
	0x03386260 MOV W1, W31
	0x03386264 MOV X2, X31
	0x03386268 BL 0x3222A1C
	0x0338626C ADD W8, W21, 0x1
	0x03386270 STRH W0, [X22, X21, LSL #1]
	0x03386274 STR W8, [X19 + 0x18]
	0x03386278 TBZ X26, 0x1F, 0x33862D8
	0x0338627C B 0x3386294
	0x03386280 MOV X0, X19
	0x03386284 MOV X1, X28
	0x03386288 MOV X2, X31
	0x0338628C BL 0x3241020
	0x03386290 TBZ X26, 0x1F, 0x33862D8
	0x03386294 ADRP X8, 0xD6D000
	0x03386298 LDR X8, [X8 + 0x5A8]
	0x0338629C LDR X0, [X8]
	0x033862A0 LDR W8, [X0 + 0xE0]
	0x033862A4 CBNZ W8, 0x33862AC
	0x033862A8 BL 0x1C16DFC
	0x033862AC SUB W8, W31, W26
	0x033862B0 CMP W8, W27
	0x033862B4 CSNEG W22, W27, W26, GT
	0x033862B8 MOVZ W1, 0x30
	0x033862BC MOV X0, X19
	0x033862C0 MOV W2, W22
	0x033862C4 MOV X3, X31
	0x033862C8 BL 0x3241390
	0x033862CC SUB W27, W27, W22
	0x033862D0 CMP W27, 0x1
	0x033862D4 B.LT 0x3386360
	0x033862D8 ADRP X21, 0xD9C000
	0x033862DC LDR X21, [X21 + 0x588]
	0x033862E0 ADD W23, W27, 0x1
	0x033862E4 MOVZ W24, 0x30
	0x033862E8 ADRP X25, 0x1056000
	0x033862EC MOVZ W26, 0x1
	0x033862F0 MOV X8, X20
	0x033862F4 LDRH W9, [X8], #0x2
	0x033862F8 LDRB W10, [X25 + 0x4E2]
	0x033862FC CMP W9, 0x0
	0x03386300 CSEL W22, W24, W9, EQ
	0x03386304 CSEL X20, X20, X8, EQ
	0x03386308 CBNZ W10, 0x3386318
	0x0338630C MOV X0, X21
	0x03386310 BL 0x1C16CF4
	0x03386314 STRB W26, [X25 + 0x4E2]
	0x03386318 LDRSW X8, [X19 + 0x18]
	0x0338631C LDR W9, [X19 + 0x10]
	0x03386320 CMP W8, W9
	0x03386324 B.GE 0x3386344
	0x03386328 CMP W8, W9
	0x0338632C B.CS 0x3386380
	0x03386330 LDR X9, [X19 + 0x8]
	0x03386334 ADD W10, W8, 0x1
	0x03386338 STRH W22, [X9, X8, LSL #1]
	0x0338633C STR W10, [X19 + 0x18]
	0x03386340 B 0x3386354
	0x03386344 MOV X0, X19
	0x03386348 MOV W1, W22
	0x0338634C MOV X2, X31
	0x03386350 BL 0x3240EF4
	0x03386354 SUB W23, W23, 0x1
	0x03386358 CMP W23, 0x1
	0x0338635C B.GT 0x33862F0
	0x03386360 LDP X20, X19, [X31 + 0x60]
	0x03386364 LDP X22, X21, [X31 + 0x50]
	0x03386368 LDP X24, X23, [X31 + 0x40]
	0x0338636C LDP X26, X25, [X31 + 0x30]
	0x03386370 LDP X28, X27, [X31 + 0x20]
	0x03386374 LDP X29, X30, [X31 + 0x10]
	0x03386378 ADD X31, X31, 0x70
	0x0338637C RET
	0x03386380 BL 0x1C16F28
	0x03386384 BL 0x1C16F20
	0x03386388 SUB X31, X31, 0x70
	0x0338638C STP X29, X30, [X31 + 0x10]
	0x03386390 STP X28, X27, [X31 + 0x20]
	0x03386394 STP X26, X25, [X31 + 0x30]
	0x03386398 STP X24, X23, [X31 + 0x40]
	0x0338639C STP X22, X21, [X31 + 0x50]
	0x033863A0 STP X20, X19, [X31 + 0x60]
	0x033863A4 ADRP X23, 0x1056000
	0x033863A8 LDRB W8, [X23 + 0xFDB]
	0x033863AC MOV X19, X4
	0x033863B0 MOV W20, W3
	0x033863B4 MOV X21, X1
	0x033863B8 MOV X22, X0
	0x033863BC TBNZ X8, 0x0, 0x33863E0
	0x033863C0 ADRP X0, 0xDA2000
	0x033863C4 LDR X0, [X0 + 0x78]
	0x033863C8 BL 0x1C16CF4
	0x033863CC ADRP X0, 0xD6E000
	0x033863D0 LDR X0, [X0 + 0xA08]
	0x033863D4 BL 0x1C16CF4
	0x033863D8 MOVZ W8, 0x1
	0x033863DC STRB W8, [X23 + 0xFDB]
	0x033863E0 ADRP X25, 0xDA2000
	0x033863E4 LDR X25, [X25 + 0x78]
	0x033863E8 MOV X0, X21
	0x033863EC MOV X1, X31
	0x033863F0 BL 0x338C38C
	0x033863F4 TBZ X0, 0x0, 0x3386438
	0x033863F8 LDR X0, [X25]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 192
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X25+40]
	017 Move X23, 0x1057000
	018 Move X26, 0xDA3000
	019 Move X22, X3
	020 Move [X29-8], X8
	021 Move W8, [X23+4036]
	022 Move X26, [X26+120]
	023 Move X19, X2
	024 Move X20, X1
	025 Move X21, X0
	026 Subtract X27, X29, 144
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {42}
	031 Move X0, 0xDA3000
	032 Move X0, [X0+120]
	033 Call 0x1C17CF4
	034 Move X0, 0xD9D000
	035 Move X0, [X0+40]
	036 Call 0x1C17CF4
	037 Move X0, 0xD9D000
	038 Move X0, [X0+1256]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X23+4036], W8
	042 Move X0, [X26]
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Move [X29-148], W31
	045 Move [X27+106], V0
	046 Move [X29-64], V0
	047 Move [X29-56], V0
	048 Move [X29-96], V0
	049 Move [X29-88], V0
	050 Move [X29-128], V0
	051 Move [X29-120], V0
	052 Move [X29-144], V0
	053 Move [X29-192], V0
	054 Move [X29-184], V0
	055 Move W8, [X0+224]
	056 Compare W19, 0
	057 JumpIfEqual {92}
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Subtract X2, X29, 148
	062 Move X0, X20
	063 Move X1, X19
	064 Call Number.ParseFormatSpecifier, X0, X1
	065 Move W23, W0
	066 Move X0, X22
	067 Move X1, X31
	068 Call NumberFormatInfo.GetInstance, X0
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 Move W8, 0xFFDF
	071 And W10, W23, W8
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CSET not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction CSET not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 And W8, W8, W9
	078 Compare W8, 0
	079 JumpIfNotEqual {99}
	080 And W8, W23, 0xFFFFFFDF
	081 And W8, W8, 0xFFFF
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X0, [X26]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Subtract W1, W23, 33
	089 Move X0, X21
	090 Move W2, W22
	091 Call Number.Int64ToHexStr, X0, X1, X2
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move TEMP, 0
	096 Not TEMP
	097 Move W1, TEMP
	098 Move X0, X21
	099 Move X0, [X26]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move X0, X21
	105 Move W1, W22
	106 Call Number.UInt64ToDecStr, X0, X1
	107 Move X8, [X25+40]
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Add X31, X29, 0
	111 Move X20, [X31+80]
	112 Move X19, [X31+88]
	113 Move X22, [X31+64]
	114 Move X21, [X31+72]
	115 Move X24, [X31+48]
	116 Move X23, [X31+56]
	117 Move X26, [X31+32]
	118 Move X25, [X31+40]
	119 Move X28, [X31+16]
	120 Move X27, [X31+24]
	121 Move X29, [X31+96]
	122 Move X30, [X31+104]
	123 Return X0
	124 Move X24, X0
	125 Move X0, [X26]
	126 NotImplemented "Instruction MOVI not yet implemented."
	127 Move [X27+106], V0
	128 Move [X29-64], V0
	129 Move [X29-56], V0
	130 Move [X29-96], V0
	131 Move [X29-88], V0
	132 Move [X29-128], V0
	133 Move [X29-120], V0
	134 Move [X29-144], V0
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Subtract X1, X29, 144
	140 Move X0, X21
	141 Call Number.UInt64ToNumber, X0, X1
	142 Add X8, X31, 0
	143 Subtract X1, X8, 64
	144 Add X31, X1, 0
	145 NotImplemented "Instruction MOVI not yet implemented."
	146 Subtract X0, X29, 192
	147 Move W2, 32
	148 Move X3, X31
	149 Move [X8-32], V0
	150 Move [X8-24], V0
	151 Move [X8-64], V0
	152 Move [X8-56], V0
	153 Call ValueStringBuilder..ctor, X0, X1
	154 Move X0, [X26]
	155 And W31, W23, 0xFFFF
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Subtract X0, X29, 192
	161 Subtract X1, X29, 144
	162 Move W2, W23
	163 Move W3, W22
	164 Move X4, X24
	165 Move W5, W31
	166 Call Number.NumberToString, X0, X1, X2, X3, X4, X5
	167 Compare W8, 0
	168 JumpIfNotEqual {170}
	169 Call 0x1C17DFC
	170 Subtract X0, X29, 192
	171 Subtract X1, X29, 144
	172 Move X2, X20
	173 Move X3, X19
	174 Move X4, X24
	175 Call Number.NumberToStringFormat, X0, X1, X2, X3
	176 Subtract X0, X29, 192
	177 Move X1, X31
	178 Call ValueStringBuilder.ToString, X0
	179 Call 0x3EB2B20

Method: System.Boolean TryFormatUInt64(System.UInt64 value, System.ReadOnlySpan`1<System.Char> format, System.IFormatProvider provider, System.Span`1<System.Char> destination, out System.Int32 charsWritten)

Disassembly:
	0x03386590 B 0x33865A4
	0x03386594 MOV X0, X22
	0x03386598 MOV W1, W26
	0x0338659C MOV X2, X31
	0x033865A0 BL 0x3240EF4
	0x033865A4 LDR W8, [X23 + 0x10]
	0x033865A8 ADD W24, W24, 0x1
	0x033865AC CMP W24, W8
	0x033865B0 B.LT 0x338645C
	0x033865B4 LDP X20, X19, [X31 + 0x60]
	0x033865B8 LDP X22, X21, [X31 + 0x50]
	0x033865BC LDP X24, X23, [X31 + 0x40]
	0x033865C0 LDP X26, X25, [X31 + 0x30]
	0x033865C4 LDP X28, X27, [X31 + 0x20]
	0x033865C8 LDP X29, X30, [X31 + 0x10]
	0x033865CC ADD X31, X31, 0x70
	0x033865D0 RET
	0x033865D4 BL 0x1C16F20
	0x033865D8 BL 0x1C16F28
	0x033865DC STP X29, X30, [X31 - 0x60]!
	0x033865E0 STP X28, X27, [X31 + 0x10]
	0x033865E4 STP X26, X25, [X31 + 0x20]
	0x033865E8 STP X24, X23, [X31 + 0x30]
	0x033865EC STP X22, X21, [X31 + 0x40]
	0x033865F0 STP X20, X19, [X31 + 0x50]
	0x033865F4 ADRP X24, 0x1056000
	0x033865F8 LDRB W8, [X24 + 0xFDC]
	0x033865FC MOV W19, W5
	0x03386600 MOV X20, X4
	0x03386604 MOV W23, W3
	0x03386608 MOV X22, X1
	0x0338660C MOV X21, X0
	0x03386610 TBNZ X8, 0x0, 0x3386628
	0x03386614 ADRP X0, 0xDA2000
	0x03386618 LDR X0, [X0 + 0x78]
	0x0338661C BL 0x1C16CF4
	0x03386620 MOVZ W8, 0x1
	0x03386624 STRB W8, [X24 + 0xFDC]
	0x03386628 MOV X0, X22
	0x0338662C MOV X1, X31
	0x03386630 BL 0x338C3A8
	0x03386634 MOV X8, X0
	0x03386638 LDRH W9, [X8], #0x2
	0x0338663C ADRP X25, 0x1056000
	0x03386640 LDRB W10, [X25 + 0x4E2]
	0x03386644 MOVZ W11, 0x30
	0x03386648 CMP W9, 0x0
	0x0338664C CSEL W24, W11, W9, EQ
	0x03386650 CSEL X26, X0, X8, EQ
	0x03386654 CBNZ W10, 0x338666C
	0x03386658 ADRP X0, 0xD9C000
	0x0338665C LDR X0, [X0 + 0x588]
	0x03386660 BL 0x1C16CF4
	0x03386664 MOVZ W8, 0x1
	0x03386668 STRB W8, [X25 + 0x4E2]
	0x0338666C LDRSW X8, [X21 + 0x18]
	0x03386670 LDR W9, [X21 + 0x10]
	0x03386674 CMP W8, W9
	0x03386678 B.GE 0x3386698
	0x0338667C CMP W8, W9
	0x03386680 B.CS 0x338682C
	0x03386684 LDR X9, [X21 + 0x8]
	0x03386688 ADD W10, W8, 0x1
	0x0338668C STRH W24, [X9, X8, LSL #1]
	0x03386690 STR W10, [X21 + 0x18]
	0x03386694 B 0x33866A8
	0x03386698 MOV X0, X21
	0x0338669C MOV W1, W24
	0x033866A0 MOV X2, X31
	0x033866A4 BL 0x3240EF4
	0x033866A8 SUBS W27, W23, 0x1
	0x033866AC B.EQ 0x33867BC
	0x033866B0 CBZ X20, 0x3386830
	0x033866B4 ADRP X24, 0x1057000
	0x033866B8 LDRB W8, [X24 + 0x4]
	0x033866BC LDR X23, [X20 + 0x38]
	0x033866C0 CBNZ W8, 0x33866D8
	0x033866C4 ADRP X0, 0xD9C000
	0x033866C8 LDR X0, [X0 + 0x588]
	0x033866CC BL 0x1C16CF4
	0x033866D0 MOVZ W8, 0x1
	0x033866D4 STRB W8, [X24 + 0x4]
	0x033866D8 CBZ X23, 0x3386830
	0x033866DC LDR W8, [X23 + 0x10]
	0x033866E0 CMP W8, 0x1
	0x033866E4 B.NE 0x3386724
	0x033866E8 LDRSW X24, [X21 + 0x18]
	0x033866EC LDR W8, [X21 + 0x10]
	0x033866F0 CMP W24, W8
	0x033866F4 B.GE 0x3386724
	0x033866F8 CMP W24, W8
	0x033866FC B.CS 0x338682C
	0x03386700 LDR X28, [X21 + 0x8]
	0x03386704 MOV X0, X23
	0x03386708 MOV W1, W31
	0x0338670C MOV X2, X31
	0x03386710 BL 0x3222A1C
	0x03386714 ADD W8, W24, 0x1
	0x03386718 STRH W0, [X28, X24, LSL #1]
	0x0338671C STR W8, [X21 + 0x18]
	0x03386720 B 0x3386734
	0x03386724 MOV X0, X21
	0x03386728 MOV X1, X23
	0x0338672C MOV X2, X31
	0x03386730 BL 0x3241020
	0x03386734 CMP W27, 0x1
	0x03386738 B.LT 0x33867BC
	0x0338673C ADRP X23, 0xD9C000
	0x03386740 LDR X23, [X23 + 0x588]
	0x03386744 MOVZ W28, 0x30
	0x03386748 MOVZ W29, 0x1
	0x0338674C MOV X8, X26
	0x03386750 LDRH W9, [X8], #0x2
	0x03386754 LDRB W10, [X25 + 0x4E2]
	0x03386758 CMP W9, 0x0
	0x0338675C CSEL W24, W28, W9, EQ
	0x03386760 CSEL X26, X26, X8, EQ
	0x03386764 CBNZ W10, 0x3386774
	0x03386768 MOV X0, X23
	0x0338676C BL 0x1C16CF4
	0x03386770 STRB W29, [X25 + 0x4E2]
	0x03386774 LDRSW X8, [X21 + 0x18]
	0x03386778 LDR W9, [X21 + 0x10]
	0x0338677C CMP W8, W9
	0x03386780 B.GE 0x33867A0
	0x03386784 CMP W8, W9
	0x03386788 B.CS 0x338682C
	0x0338678C LDR X9, [X21 + 0x8]
	0x03386790 ADD W10, W8, 0x1
	0x03386794 STRH W24, [X9, X8, LSL #1]
	0x03386798 STR W10, [X21 + 0x18]
	0x0338679C B 0x33867B0
	0x033867A0 MOV X0, X21
	0x033867A4 MOV W1, W24
	0x033867A8 MOV X2, X31
	0x033867AC BL 0x3240EF4
	0x033867B0 SUB W27, W27, 0x1
	0x033867B4 CMP W27, 0x0
	0x033867B8 B.GT 0x338674C
	0x033867BC ADRP X23, 0xDA2000
	0x033867C0 LDR X23, [X23 + 0x78]
	0x033867C4 MOV X0, X22
	0x033867C8 MOV X1, X31
	0x033867CC BL 0x338C3A8
	0x033867D0 LDRH W8, [X0]
	0x033867D4 CBZ W8, 0x33867E4
	0x033867D8 LDR W8, [X22 + 0x4]
	0x033867DC SUB W22, W8, 0x1
	0x033867E0 B 0x33867E8
	0x033867E4 MOV W22, W31
	0x033867E8 LDR X0, [X23]
	0x033867EC LDR W8, [X0 + 0xE0]
	0x033867F0 CBNZ W8, 0x33867F8
	0x033867F4 BL 0x1C16DFC
	0x033867F8 MOV X0, X21
	0x033867FC MOV X1, X20
	0x03386800 MOV W2, W22
	0x03386804 MOV W3, W19
	0x03386808 LDP X20, X19, [X31 + 0x50]
	0x0338680C LDP X22, X21, [X31 + 0x40]
	0x03386810 LDP X24, X23, [X31 + 0x30]
	0x03386814 LDP X26, X25, [X31 + 0x20]
	0x03386818 LDP X28, X27, [X31 + 0x10]
	0x0338681C MOVZ W4, 0x3
	0x03386820 MOVZ W5, 0x1
	0x03386824 LDP X29, X30, [X31], #0x60
	0x03386828 B 0x3386FA0

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 224
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X28+40]
	017 Move X26, 0x1057000
	018 Move X19, 0xDA3000
	019 Move X20, X6
	020 Move [X29-24], X8
	021 Move W8, [X26+4037]
	022 Move X19, [X19+120]
	023 Move X21, X5
	024 Move X27, X4
	025 Move X25, X3
	026 Move X22, X2
	027 Move X23, X1
	028 Move X24, X0
	029 Subtract X9, X29, 160
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {46}
	034 Move X0, 0xDA3000
	035 Move X0, [X0+120]
	036 Call 0x1C17CF4
	037 Move X0, 0xD9D000
	038 Move X0, [X0+40]
	039 Call 0x1C17CF4
	040 Move X0, 0xD9D000
	041 Move X0, [X0+1256]
	042 Call 0x1C17CF4
	043 Subtract X9, X29, 160
	044 Move W8, 1
	045 Move [X26+4037], W8
	046 Move X0, [X19]
	047 NotImplemented "Instruction MOVI not yet implemented."
	048 Move [X29-164], W31
	049 Move [X9+106], V0
	050 Move [X29-80], V0
	051 Move [X29-72], V0
	052 Move [X29-112], V0
	053 Move [X29-104], V0
	054 Move [X29-144], V0
	055 Move [X29-136], V0
	056 Move [X29-160], V0
	057 Move [X29-208], V0
	058 Move [X29-200], V0
	059 Move W8, [X0+224]
	060 Compare W22, 0
	061 JumpIfEqual {99}
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Subtract X2, X29, 164
	066 Move X0, X23
	067 Move X1, X22
	068 Call Number.ParseFormatSpecifier, X0, X1
	069 Move W26, W0
	070 Move X0, X25
	071 Move X1, X31
	072 Call NumberFormatInfo.GetInstance, X0
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 Move W8, 0xFFDF
	075 And W10, W26, W8
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CSET not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CSET not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 And W8, W8, W9
	082 Compare W8, 0
	083 JumpIfNotEqual {106}
	084 And W8, W26, 0xFFFFFFDF
	085 And W8, W8, 0xFFFF
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X0, [X19]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Subtract W1, W26, 33
	093 Move X0, X24
	094 Move W2, W25
	095 Move X3, X27
	096 Move X4, X21
	097 Move X5, X20
	098 Call Number.TryInt64ToHexStr, X0, X1, X2, X3, X4
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move TEMP, 0
	103 Not TEMP
	104 Move W1, TEMP
	105 Move X0, X24
	106 Move X0, [X19]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move X0, X24
	112 Move W1, W25
	113 Move X2, X27
	114 Move X3, X21
	115 Move X4, X20
	116 Call Number.TryUInt64ToDecStr, X0, X1, X2, X3
	117 Move X8, [X28+40]
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 And W0, W0, 1
	121 Add X31, X29, 0
	122 Move X20, [X31+80]
	123 Move X19, [X31+88]
	124 Move X22, [X31+64]
	125 Move X21, [X31+72]
	126 Move X24, [X31+48]
	127 Move X23, [X31+56]
	128 Move X26, [X31+32]
	129 Move X25, [X31+40]
	130 Move X28, [X31+16]
	131 Move X27, [X31+24]
	132 Move X29, [X31+96]
	133 Move X30, [X31+104]
	134 Return X0
	135 Move [X29-216], X0
	136 Move X0, [X19]
	137 NotImplemented "Instruction MOVI not yet implemented."
	138 Subtract X8, X29, 160
	139 Move [X8+106], V0
	140 Move [X29-80], V0
	141 Move [X29-72], V0
	142 Move [X29-112], V0
	143 Move [X29-104], V0
	144 Move [X29-144], V0
	145 Move [X29-136], V0
	146 Move [X29-160], V0
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1C17DFC
	151 Subtract X1, X29, 160
	152 Move X0, X24
	153 Call Number.UInt64ToNumber, X0, X1
	154 Add X8, X31, 0
	155 Subtract X1, X8, 64
	156 Add X31, X1, 0
	157 NotImplemented "Instruction MOVI not yet implemented."
	158 Subtract X0, X29, 208
	159 Move W2, 32
	160 Move X3, X31
	161 Move [X8-32], V0
	162 Move [X8-24], V0
	163 Move [X8-64], V0
	164 Move [X8-56], V0
	165 Call ValueStringBuilder..ctor, X0, X1
	166 Move X0, [X19]
	167 And W31, W26, 0xFFFF
	168 Move W8, [X0+224]
	169 Compare W8, 0
	170 JumpIfNotEqual {172}
	171 Call 0x1C17DFC
	172 NotImplemented "Instruction LDUR not yet implemented."
	173 Subtract X0, X29, 208
	174 Subtract X1, X29, 160
	175 Move W2, W26
	176 Move W3, W25
	177 Move W5, W31
	178 Call Number.NumberToString, X0, X1, X2, X3, X4, X5
	179 Compare W8, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1C17DFC
	182 NotImplemented "Instruction LDUR not yet implemented."
	183 Subtract X0, X29, 208
	184 Subtract X1, X29, 160
	185 Move X2, X23
	186 Move X3, X22
	187 Call Number.NumberToStringFormat, X0, X1, X2, X3
	188 Subtract X0, X29, 208
	189 Move X1, X27
	190 Move X2, X21
	191 Move X3, X20
	192 Move X4, X31
	193 Call ValueStringBuilder.TryCopyTo, X0, X1, X2
	194 Call 0x3EB2B20

Method: System.Void Int32ToNumber(System.Int32 value, ref System.Number/NumberBuffer number)

Disassembly:
	0x0338682C BL 0x1C16F28
	0x03386830 BL 0x1C16F20
	0x03386834 SUB X31, X31, 0x70
	0x03386838 STP X29, X30, [X31 + 0x10]
	0x0338683C STP X28, X27, [X31 + 0x20]
	0x03386840 STP X26, X25, [X31 + 0x30]
	0x03386844 STP X24, X23, [X31 + 0x40]
	0x03386848 STP X22, X21, [X31 + 0x50]
	0x0338684C STP X20, X19, [X31 + 0x60]
	0x03386850 ADRP X19, 0x1056000
	0x03386854 LDRB W8, [X19 + 0xFDE]
	0x03386858 MOV W24, W6
	0x0338685C MOV W29, W5
	0x03386860 MOV X20, X4
	0x03386864 MOV W23, W3
	0x03386868 MOV X22, X1
	0x0338686C MOV X21, X0
	0x03386870 TBNZ X8, 0x0, 0x3386888
	0x03386874 ADRP X0, 0xDA2000
	0x03386878 LDR X0, [X0 + 0x78]
	0x0338687C BL 0x1C16CF4
	0x03386880 MOVZ W8, 0x1
	0x03386884 STRB W8, [X19 + 0xFDE]
	0x03386888 LDR W25, [X22 + 0x4]
	0x0338688C ADRP X26, 0x1056000
	0x03386890 TBZ X24, 0x0, 0x338689C
	0x03386894 MOV W27, W31
	0x03386898 B 0x33868BC
	0x0338689C ADDS W31, W25, 0x3
	0x033868A0 CSET W8, LT
	0x033868A4 CMP W25, W23
	0x033868A8 CSET W9, GT
	0x033868AC ORR W27, W9, W8, 0x0
	0x033868B0 B.GT 0x3386934
	0x033868B4 ADDS W31, W25, 0x4
	0x033868B8 B.LE 0x3386934
	0x033868BC MOV X0, X22
	0x033868C0 MOV X1, X31
	0x033868C4 BL 0x338C3A8
	0x033868C8 CMP W25, 0x1
	0x033868CC MOV X23, X0
	0x033868D0 B.LT 0x33868E4
	0x033868D4 STR X20, [X31 + 0x8]
	0x033868D8 MOV W20, W27
	0x033868DC MOV W27, W29
	0x033868E0 B 0x3386954
	0x033868E4 LDRB W8, [X26 + 0x4E2]
	0x033868E8 CBNZ W8, 0x3386900
	0x033868EC ADRP X0, 0xD9C000
	0x033868F0 LDR X0, [X0 + 0x588]
	0x033868F4 BL 0x1C16CF4
	0x033868F8 MOVZ W8, 0x1
	0x033868FC STRB W8, [X26 + 0x4E2]
	0x03386900 LDRSW X8, [X21 + 0x18]
	0x03386904 LDR W9, [X21 + 0x10]
	0x03386908 CMP W8, W9
	0x0338690C B.GE 0x3386BCC
	0x03386910 CMP W8, W9
	0x03386914 B.CS 0x3386BE4
	0x03386918 LDR X9, [X21 + 0x8]
	0x0338691C MOVZ W10, 0x30
	0x03386920 ADD W11, W8, 0x1
	0x03386924 STRH W10, [X9, X8, LSL #1]
	0x03386928 STR W11, [X21 + 0x18]
	0x0338692C TBZ X25, 0x1F, 0x33869EC
	0x03386930 B 0x33869F4
	0x03386934 MOV X0, X22
	0x03386938 MOV X1, X31
	0x0338693C STR X20, [X31 + 0x8]
	0x03386940 MOV W20, W27
	0x03386944 MOV W27, W29
	0x03386948 BL 0x338C3A8
	0x0338694C MOV X23, X0
	0x03386950 MOVZ W25, 0x1
	0x03386954 ADRP X24, 0xD9C000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1057000
	006 Move W8, [X21+4038]
	007 Move X19, X1
	008 Move W20, W0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xDA3000
	014 Move X0, [X0+120]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+4038], W8
	018 Move X21, 0xDA3000
	019 Move X21, [X21+120]
	020 Move W8, 10
	021 Move [X19], W8
	022 Move TEMP, X20
	023 And TEMP, TEMP, -2147483648
	024 Compare TEMP, -2147483648
	025 JumpIfEqual {30}
	026 Move X0, X19
	027 Move W1, W31
	028 Move X2, X31
	029 Call NumberBuffer.set_sign, X0, X1
	030 Move W1, 1
	031 Move X0, X19
	032 Move X2, X31
	033 Call NumberBuffer.set_sign, X0, X1
	034 Subtract W20, W31, W20
	035 Move X0, X19
	036 Move X1, X31
	037 Call NumberBuffer.get_digits, X0
	038 Move X8, [X21]
	039 Move X21, X0
	040 Move W9, [X8+224]
	041 Compare W9, 0
	042 JumpIfNotEqual {45}
	043 Move X0, X8
	044 Call 0x1C17DFC
	045 Add X8, X21, 20
	046 Compare W20, 0
	047 JumpIfEqual {72}
	048 Move W9, 0xCCCD
	049 Move TEMP, 1
	050 Not TEMP
	051 Move W11, TEMP
	052 NotImplemented "Instruction MOVK not yet implemented."
	053 Move TEMP, 9
	054 Not TEMP
	055 Move W10, TEMP
	056 Move X21, X8
	057 Move W13, W11
	058 NotImplemented "Instruction UMADDL not yet implemented."
	059 Move W12, W20
	060 Move X20, X11
	061 ShiftRight X20, 35
	062 And X20, X20, 0x7FFFFFFF
	063 NotImplemented "Instruction MADD not yet implemented."
	064 Add W11, W11, 48
	065 NotImplemented "Instruction STRH not yet implemented."
	066 Subtract W11, W13, 1
	067 Move TEMP, X13
	068 And TEMP, TEMP, -2147483648
	069 Compare TEMP, -2147483648
	070 JumpIfNotEqual {57}
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X21, X8
	073 Subtract X8, X8, X21
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction CINC not yet implemented."
	076 Move X20, X8
	077 ShiftRight X20, 1
	078 And X20, X20, 0x7FFFFFFF
	079 Move X0, X19
	080 Move X1, X31
	081 Move [X19+4], W20
	082 Call NumberBuffer.get_digits, X0
	083 NotImplemented "Instruction CMP not yet implemented."
	084 NotImplemented "Instruction LDRH not yet implemented."
	085 Subtract W20, W20, 1
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction STRH not yet implemented."
	088 Move X20, [X31+16]
	089 Move X19, [X31+24]
	090 NotImplemented "Instruction STRH not yet implemented."
	091 Move X30, [X31+32]
	092 Move X21, [X31+40]
	093 Return 

Method: System.String NegativeInt32ToDecStr(System.Int32 value, System.Int32 digits, System.String sNegative)

Disassembly:
	0x033849B4 MOVZ W8, 0xCCCD
	0x033849B8 MOVN W10, 0x1
	0x033849BC MOVK W8, 0xCCCC0000
	0x033849C0 MOVN W9, 0x9
	0x033849C4 MOV W12, W10
	0x033849C8 UMADDL X10, X24, X8, X31
	0x033849CC MOV W11, W24
	0x033849D0 UBFM X24, X10, 0x23, 0x3F
	0x033849D4 MADD W10, W24, W9, W11
	0x033849D8 ADD W10, W10, 0x30
	0x033849DC STRH W10, [X20 - 0x2]!
	0x033849E0 SUB W10, W12, 0x1
	0x033849E4 TBZ X12, 0x1F, 0x33849C4
	0x033849E8 CMP W11, 0x9
	0x033849EC B.HI 0x33849C4
	0x033849F0 SUB X8, X21, X20
	0x033849F4 CMP X8, 0x0
	0x033849F8 CINC X8, X8, LT
	0x033849FC UBFM X21, X8, 0x1, 0x3F
	0x03384A00 MOV X0, X19
	0x03384A04 MOV X1, X31
	0x03384A08 STR W21, [X19 + 0x4]
	0x03384A0C BL 0x338C3A8
	0x03384A10 CMP W21, 0x1
	0x03384A14 B.MI 0x3384A2C
	0x03384A18 LDRH W8, [X20], #0x2
	0x03384A1C SUB W21, W21, 0x1
	0x03384A20 CMP W21, 0x0
	0x03384A24 STRH W8, [X0], #0x2
	0x03384A28 B.GT 0x3384A18
	0x03384A2C LDP X20, X19, [X31 + 0x40]
	0x03384A30 LDP X22, X21, [X31 + 0x30]
	0x03384A34 LDP X24, X23, [X31 + 0x20]
	0x03384A38 LDP X26, X25, [X31 + 0x10]
	0x03384A3C STRH W31, [X0]
	0x03384A40 LDR X30, [X31], #0x50
	0x03384A44 RET
	0x03384A48 STR X30, [X31 - 0x50]!
	0x03384A4C STP X26, X25, [X31 + 0x10]
	0x03384A50 STP X24, X23, [X31 + 0x20]
	0x03384A54 STP X22, X21, [X31 + 0x30]
	0x03384A58 STP X20, X19, [X31 + 0x40]
	0x03384A5C ADRP X24, 0x1058000
	0x03384A60 LDRB W8, [X24 + 0xFD5]
	0x03384A64 MOV X21, X4
	0x03384A68 MOV X20, X3
	0x03384A6C MOV X22, X2
	0x03384A70 MOV W23, W1
	0x03384A74 MOV X19, X0
	0x03384A78 TBNZ X8, 0x0, 0x3384AB4
	0x03384A7C ADRP X0, 0xD6F000
	0x03384A80 LDR X0, [X0 + 0x5A8]
	0x03384A84 BL 0x1C16CF4
	0x03384A88 ADRP X0, 0xD9E000
	0x03384A8C LDR X0, [X0 + 0x2C8]
	0x03384A90 BL 0x1C16CF4
	0x03384A94 ADRP X0, 0xDA4000
	0x03384A98 LDR X0, [X0 + 0x78]
	0x03384A9C BL 0x1C16CF4
	0x03384AA0 ADRP X0, 0xD9E000
	0x03384AA4 LDR X0, [X0 + 0x588]
	0x03384AA8 BL 0x1C16CF4
	0x03384AAC MOVZ W8, 0x1
	0x03384AB0 STRB W8, [X24 + 0xFD5]
	0x03384AB4 MOVZ W8, 0x967F
	0x03384AB8 MOVK W8, 0x980000
	0x03384ABC CMP W23, 0x1
	0x03384AC0 CSINC W23, W23, W31, GT
	0x03384AC4 CMP X19, X8
	0x03384AC8 B.LS 0x3384AF0
	0x03384ACC MOVZ X9, 0x3FFF
	0x03384AD0 MOVK X9, 0x107A0000
	0x03384AD4 MOVK X9, 0x5AF3
	0x03384AD8 CMP X19, X9
	0x03384ADC B.LS 0x3384AFC
	0x03384AE0 ADD X8, X9, 0x1
	0x03384AE4 UDIV X9, X19, X8
	0x03384AE8 MOVZ W24, 0xF
	0x03384AEC B 0x3384B08
	0x03384AF0 MOVZ W24, 0x1
	0x03384AF4 MOV X9, X19
	0x03384AF8 B 0x3384B08
	0x03384AFC ADD X8, X8, 0x1
	0x03384B00 UDIV X9, X19, X8
	0x03384B04 MOVZ W24, 0x8
	0x03384B08 ADRP X8, 0xD6F000
	0x03384B0C LDR X8, [X8 + 0x5A8]
	0x03384B10 CMP W9, 0xA
	0x03384B14 B.CC 0x3384B7C
	0x03384B18 CMP W9, 0x63
	0x03384B1C B.HI 0x3384B28
	0x03384B20 ADD W24, W24, 0x1
	0x03384B24 B 0x3384B7C
	0x03384B28 CMP W9, 0x3E7
	0x03384B2C B.HI 0x3384B38
	0x03384B30 ADD W24, W24, 0x2
	0x03384B34 B 0x3384B7C
	0x03384B38 UBFM W10, W9, 0x4, 0x1F
	0x03384B3C CMP W10, 0x270
	0x03384B40 B.HI 0x3384B4C
	0x03384B44 ADD W24, W24, 0x3
	0x03384B48 B 0x3384B7C
	0x03384B4C UBFM W10, W9, 0x5, 0x1F
	0x03384B50 CMP W10, 0xC34
	0x03384B54 B.HI 0x3384B60
	0x03384B58 ADD W24, W24, 0x4
	0x03384B5C B 0x3384B7C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x1059000
	010 Move W8, [X22+4039]
	011 Move X19, X2
	012 Move W21, W1
	013 Move W20, W0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xD70000
	019 Move X0, [X0+1448]
	020 Call 0x1C17CF4
	021 Move X0, 0xDA5000
	022 Move X0, [X0+120]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+4039], W8
	026 Move W8, 0x869F
	027 Subtract W22, W31, W20
	028 NotImplemented "Instruction MOVK not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Add W8, W8, 1
	031 Move W10, W22
	032 ShiftRight W10, 5
	033 And W10, W10, 0x7FFFFFFF
	034 Move W9, 6
	035 NotImplemented "Instruction CSINC not yet implemented."
	036 NotImplemented "Instruction UDIV not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSINC not yet implemented."
	039 NotImplemented "Instruction CSNEG not yet implemented."
	040 Move X8, 0xD70000
	041 Move X8, [X8+1448]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add W21, W21, 1
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Add W21, W21, 2
	047 Move W9, W9
	048 ShiftRight W9, 4
	049 And W9, W9, 0x7FFFFFFF
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add W21, W21, 3
	052 Add W21, W21, 4
	053 Move X0, [X8]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Compare X19, 0
	059 JumpIfEqual {122}
	060 Move W8, [X19+16]
	061 Move X24, 0xDA5000
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X24, [X24+120]
	064 NotImplemented "Instruction CSEL not yet implemented."
	065 Add W21, W8, W9
	066 Move W0, W21
	067 Move X1, X31
	068 Call String.FastAllocateString, X0
	069 Move X20, X0
	070 Compare X0, 0
	071 JumpIfEqual {75}
	072 Move X0, X31
	073 Call RuntimeHelpers.get_OffsetToStringData
	074 Add X25, X20, W0
	075 Move X25, X20
	076 Move X0, [X24]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move W8, 0xCCCD
	082 Add X24, X25, W21
	083 Subtract W10, W23, 2
	084 NotImplemented "Instruction MOVK not yet implemented."
	085 Move TEMP, 9
	086 Not TEMP
	087 Move W9, TEMP
	088 Move W12, W10
	089 NotImplemented "Instruction UMADDL not yet implemented."
	090 Move W11, W22
	091 Move X22, X10
	092 ShiftRight X22, 35
	093 And X22, X22, 0x7FFFFFFF
	094 NotImplemented "Instruction MADD not yet implemented."
	095 Add W10, W10, 48
	096 NotImplemented "Instruction STRH not yet implemented."
	097 Subtract W10, W12, 1
	098 Move TEMP, X12
	099 And TEMP, TEMP, -2147483648
	100 Compare TEMP, -2147483648
	101 JumpIfNotEqual {88}
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move W21, [X19+16]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Subtract W21, W21, 1
	106 Move X0, X19
	107 Move W1, W21
	108 Move X2, X31
	109 Call String.get_Chars, X0, X1
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction STRH not yet implemented."
	112 Move X0, X20
	113 Move X20, [X31+48]
	114 Move X19, [X31+56]
	115 Move X22, [X31+32]
	116 Move X21, [X31+40]
	117 Move X24, [X31+16]
	118 Move X23, [X31+24]
	119 Move X30, [X31+64]
	120 Move X25, [X31+72]
	121 Return X0
	122 Call 0x1C17F20

Method: System.Boolean TryNegativeInt32ToDecStr(System.Int32 value, System.Int32 digits, System.String sNegative, System.Span`1<System.Char> destination, out System.Int32 charsWritten)

Disassembly:
	0x03384E5C MOVK W26, 0x3B9A0000
	0x03384E60 BL 0x2218CFC
	0x03384E64 ADRP X27, 0xDA4000
	0x03384E68 LDR X27, [X27 + 0x78]
	0x03384E6C MOVZ W28, 0xCCCD
	0x03384E70 ADD X22, X0, W25, 0x1, SXTW
	0x03384E74 SUB W21, W23, 0x2
	0x03384E78 MOVK W28, 0xCCCC0000
	0x03384E7C MOVN W29, 0x9
	0x03384E80 LDR X0, [X27]
	0x03384E84 LDR W8, [X0 + 0xE0]
	0x03384E88 CBNZ W8, 0x3384E98
	0x03384E8C BL 0x1C16DFC
	0x03384E90 LDR X0, [X27]
	0x03384E94 LDR W8, [X0 + 0xE0]
	0x03384E98 UBFM X9, X24, 0x20, 0x3F
	0x03384E9C CBZ X9, 0x3384EF0
	0x03384EA0 CBNZ W8, 0x3384EA8
	0x03384EA4 BL 0x1C16DFC
	0x03384EA8 MOV X8, X24
	0x03384EAC UDIV X24, X24, X26
	0x03384EB0 MSUB W8, W24, W26, W8
	0x03384EB4 MOVZ W9, 0x7
	0x03384EB8 MOV W10, W8
	0x03384EBC UMADDL X8, X8, X28, X31
	0x03384EC0 UBFM X8, X8, 0x23, 0x3F
	0x03384EC4 MOV W11, W9
	0x03384EC8 MADD W9, W8, W29, W10
	0x03384ECC ADD W9, W9, 0x30
	0x03384ED0 STRH W9, [X22 - 0x2]!
	0x03384ED4 SUB W9, W11, 0x1
	0x03384ED8 TBZ X11, 0x1F, 0x3384EB8
	0x03384EDC CMP W10, 0x9
	0x03384EE0 B.HI 0x3384EB8
	0x03384EE4 SUB W23, W23, 0x9
	0x03384EE8 SUB W21, W21, 0x9
	0x03384EEC B 0x3384E80
	0x03384EF0 CBZ W8, 0x3384EFC
	0x03384EF4 CBZ W24, 0x3384F04
	0x03384EF8 B 0x3384F0C
	0x03384EFC BL 0x1C16DFC
	0x03384F00 CBNZ W24, 0x3384F0C
	0x03384F04 SUB W8, W23, 0x1
	0x03384F08 TBNZ X8, 0x1F, 0x3384F44
	0x03384F0C MOVZ W8, 0xCCCD
	0x03384F10 MOVK W8, 0xCCCC0000
	0x03384F14 MOVN W9, 0x9
	0x03384F18 UMADDL X12, X24, X8, X31
	0x03384F1C MOV W10, W24
	0x03384F20 UBFM X24, X12, 0x23, 0x3F
	0x03384F24 MADD W12, W24, W9, W10
	0x03384F28 ADD W12, W12, 0x30
	0x03384F2C MOV W11, W21
	0x03384F30 STRH W12, [X22 - 0x2]!
	0x03384F34 SUB W21, W21, 0x1
	0x03384F38 TBZ X11, 0x1F, 0x3384F18
	0x03384F3C CMP W10, 0x9
	0x03384F40 B.HI 0x3384F18
	0x03384F44 LDR W21, [X20 + 0x10]
	0x03384F48 CMP W21, 0x1
	0x03384F4C B.MI 0x3384F70
	0x03384F50 SUB W21, W21, 0x1
	0x03384F54 MOV X0, X20
	0x03384F58 MOV W1, W21
	0x03384F5C MOV X2, X31
	0x03384F60 BL 0x3222A1C
	0x03384F64 CMP W21, 0x0
	0x03384F68 STRH W0, [X22 - 0x2]!
	0x03384F6C B.GT 0x3384F50
	0x03384F70 CMP W25, W19
	0x03384F74 LDP X20, X19, [X31 + 0x50]
	0x03384F78 LDP X22, X21, [X31 + 0x40]
	0x03384F7C LDP X24, X23, [X31 + 0x30]
	0x03384F80 LDP X26, X25, [X31 + 0x20]
	0x03384F84 LDP X28, X27, [X31 + 0x10]
	0x03384F88 CSET W0, LE
	0x03384F8C LDP X29, X30, [X31], #0x60
	0x03384F90 RET
	0x03384F94 BL 0x1C16F20
	0x03384F98 STP X30, X27, [X31 - 0x50]!
	0x03384F9C STP X26, X25, [X31 + 0x10]
	0x03384FA0 STP X24, X23, [X31 + 0x20]
	0x03384FA4 STP X22, X21, [X31 + 0x30]
	0x03384FA8 STP X20, X19, [X31 + 0x40]
	0x03384FAC ADRP X25, 0x1058000
	0x03384FB0 ADRP X26, 0xD6F000
	0x03384FB4 LDRB W8, [X25 + 0xFD2]
	0x03384FB8 LDR X26, [X26 + 0x5A8]
	0x03384FBC MOV X23, X5
	0x03384FC0 MOV X22, X4
	0x03384FC4 MOV X24, X3
	0x03384FC8 MOV W21, W2
	0x03384FCC MOV W19, W1
	0x03384FD0 MOV X20, X0
	0x03384FD4 TBNZ X8, 0x0, 0x3385010
	0x03384FD8 ADRP X0, 0xD6F000
	0x03384FDC LDR X0, [X0 + 0x5A8]
	0x03384FE0 BL 0x1C16CF4
	0x03384FE4 ADRP X0, 0xD9E000
	0x03384FE8 LDR X0, [X0 + 0x2C8]
	0x03384FEC BL 0x1C16CF4
	0x03384FF0 ADRP X0, 0xDA4000
	0x03384FF4 LDR X0, [X0 + 0x78]
	0x03384FF8 BL 0x1C16CF4
	0x03384FFC ADRP X0, 0xD9E000
	0x03385000 LDR X0, [X0 + 0x588]
	0x03385004 BL 0x1C16CF4
	0x03385008 MOVZ W8, 0x1
	0x0338500C STRB W8, [X25 + 0xFD2]
	0x03385010 UBFM X25, X20, 0x20, 0x3F
	0x03385014 CMP X25, 0x0
	0x03385018 MOVZ W8, 0x9
	0x0338501C CSEL X9, X25, X20, NE
	0x03385020 LDR X0, [X26]
	0x03385024 CSINC W8, W8, W31, NE
	0x03385028 UBFM X11, X9, 0x10, 0x3F
	0x0338502C ORR W10, W8, 0x4
	0x03385030 CMP X11, 0x0
	0x03385034 CSEL W8, W10, W8, NE
	0x03385038 CSEL X9, X11, X9, NE
	0x0338503C ORR W11, W8, 0x2
	0x03385040 CMP X9, 0xFF

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x1059000
	011 Move W8, [X25+4040]
	012 Move X21, X5
	013 Move X19, X4
	014 Move X22, X3
	015 Move X20, X2
	016 Move W24, W1
	017 Move W23, W0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0xD70000
	023 Move X0, [X0+1448]
	024 Call 0x1C17CF4
	025 Move X0, 0xD9F000
	026 Move X0, [X0+712]
	027 Call 0x1C17CF4
	028 Move X0, 0xDA5000
	029 Move X0, [X0+120]
	030 Call 0x1C17CF4
	031 Move X0, 0xD9F000
	032 Move X0, [X0+1416]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X25+4040], W8
	036 Move W8, 0x869F
	037 Subtract W25, W31, W23
	038 NotImplemented "Instruction MOVK not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add W8, W8, 1
	041 Move W10, W25
	042 ShiftRight W10, 5
	043 And W10, W10, 0x7FFFFFFF
	044 Move W9, 6
	045 NotImplemented "Instruction CSINC not yet implemented."
	046 NotImplemented "Instruction UDIV not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSINC not yet implemented."
	049 NotImplemented "Instruction CSNEG not yet implemented."
	050 Move X8, 0xD70000
	051 Move X8, [X8+1448]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Add W26, W26, 1
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Add W26, W26, 2
	057 Move W9, W9
	058 ShiftRight W9, 4
	059 And W9, W9, 0x7FFFFFFF
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add W26, W26, 3
	062 Add W26, W26, 4
	063 Move X0, [X8]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Compare X20, 0
	069 JumpIfEqual {135}
	070 Move W8, [X20+16]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 NotImplemented "Instruction CSEL not yet implemented."
	073 Add W23, W8, W9
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move [X21], W31
	076 Move [X21], W23
	077 Move X8, 0xD9F000
	078 Move X8, [X8+712]
	079 Move X0, X22
	080 Move X1, X19
	081 Move X2, [X8]
	082 Call MemoryMarshal.GetReference, X0
	083 Move X8, 0xDA5000
	084 Move X8, [X8+120]
	085 Move X21, X0
	086 Move X8, [X8]
	087 Move W9, [X8+224]
	088 Compare W9, 0
	089 JumpIfNotEqual {92}
	090 Move X0, X8
	091 Call 0x1C17DFC
	092 Move W8, 0xCCCD
	093 Add X22, X21, W23
	094 Subtract W10, W24, 2
	095 NotImplemented "Instruction MOVK not yet implemented."
	096 Move TEMP, 9
	097 Not TEMP
	098 Move W9, TEMP
	099 Move W12, W10
	100 NotImplemented "Instruction UMADDL not yet implemented."
	101 Move W11, W25
	102 Move X25, X10
	103 ShiftRight X25, 35
	104 And X25, X25, 0x7FFFFFFF
	105 NotImplemented "Instruction MADD not yet implemented."
	106 Add W10, W10, 48
	107 NotImplemented "Instruction STRH not yet implemented."
	108 Subtract W10, W12, 1
	109 Move TEMP, X12
	110 And TEMP, TEMP, -2147483648
	111 Compare TEMP, -2147483648
	112 JumpIfNotEqual {99}
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move W21, [X20+16]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Subtract W21, W21, 1
	117 Move X0, X20
	118 Move W1, W21
	119 Move X2, X31
	120 Call String.get_Chars, X0, X1
	121 NotImplemented "Instruction CMP not yet implemented."
	122 NotImplemented "Instruction STRH not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X20, [X31+64]
	125 Move X19, [X31+72]
	126 Move X22, [X31+48]
	127 Move X21, [X31+56]
	128 Move X24, [X31+32]
	129 Move X23, [X31+40]
	130 Move X26, [X31+16]
	131 Move X25, [X31+24]
	132 NotImplemented "Instruction CSET not yet implemented."
	133 Move X30, [X31+80]
	134 Return X0
	135 Call 0x1C17F20

Method: System.String Int32ToHexStr(System.Int32 value, System.Char hexBase, System.Int32 digits)

Disassembly:
	0x03384B60 MOVZ W10, 0x423F
	0x03384B64 MOVK W10, 0xF0000
	0x03384B68 CMP W9, W10
	0x03384B6C B.HI 0x3384B78
	0x03384B70 ADD W24, W24, 0x5
	0x03384B74 B 0x3384B7C
	0x03384B78 ADD W24, W24, 0x6
	0x03384B7C LDR X0, [X8]
	0x03384B80 LDR W8, [X0 + 0xE0]
	0x03384B84 CBNZ W8, 0x3384B8C
	0x03384B88 BL 0x1C16DFC
	0x03384B8C CMP W23, W24
	0x03384B90 CSEL W26, W24, W23, LT
	0x03384B94 CMP W26, W20
	0x03384B98 B.LE 0x3384BA8
	0x03384B9C MOV W0, W31
	0x03384BA0 STR W31, [X21]
	0x03384BA4 B 0x3384CB4
	0x03384BA8 ADRP X8, 0xD9E000
	0x03384BAC LDR X8, [X8 + 0x2C8]
	0x03384BB0 STR W26, [X21]
	0x03384BB4 ADRP X24, 0xDA4000
	0x03384BB8 MOVZ W25, 0xCA00
	0x03384BBC LDR X2, [X8]
	0x03384BC0 LDR X24, [X24 + 0x78]
	0x03384BC4 MOV X0, X22
	0x03384BC8 MOV X1, X20
	0x03384BCC MOVK W25, 0x3B9A0000
	0x03384BD0 BL 0x2218CFC
	0x03384BD4 UBFM W8, W26, 0x1F, 0x1E
	0x03384BD8 MOVZ W22, 0xCCCD
	0x03384BDC SUB W21, W23, 0x2
	0x03384BE0 MOVK W22, 0xCCCC0000
	0x03384BE4 ADD X20, X0, X8
	0x03384BE8 MOVN W26, 0x9
	0x03384BEC LDR X0, [X24]
	0x03384BF0 LDR W8, [X0 + 0xE0]
	0x03384BF4 CBNZ W8, 0x3384C04
	0x03384BF8 BL 0x1C16DFC
	0x03384BFC LDR X0, [X24]
	0x03384C00 LDR W8, [X0 + 0xE0]
	0x03384C04 UBFM X9, X19, 0x20, 0x3F
	0x03384C08 CBZ X9, 0x3384C5C
	0x03384C0C CBNZ W8, 0x3384C14
	0x03384C10 BL 0x1C16DFC
	0x03384C14 MOV X8, X19
	0x03384C18 UDIV X19, X19, X25
	0x03384C1C MSUB W8, W19, W25, W8
	0x03384C20 MOVZ W9, 0x7
	0x03384C24 MOV W10, W8
	0x03384C28 UMADDL X8, X8, X22, X31
	0x03384C2C UBFM X8, X8, 0x23, 0x3F
	0x03384C30 MOV W11, W9
	0x03384C34 MADD W9, W8, W26, W10
	0x03384C38 ADD W9, W9, 0x30
	0x03384C3C STRH W9, [X20 - 0x2]!
	0x03384C40 SUB W9, W11, 0x1
	0x03384C44 TBZ X11, 0x1F, 0x3384C24
	0x03384C48 CMP W10, 0x9
	0x03384C4C B.HI 0x3384C24
	0x03384C50 SUB W23, W23, 0x9
	0x03384C54 SUB W21, W21, 0x9
	0x03384C58 B 0x3384BEC
	0x03384C5C CBZ W8, 0x3384C68
	0x03384C60 CBZ W19, 0x3384C70
	0x03384C64 B 0x3384C78
	0x03384C68 BL 0x1C16DFC
	0x03384C6C CBNZ W19, 0x3384C78
	0x03384C70 SUB W8, W23, 0x1
	0x03384C74 TBNZ X8, 0x1F, 0x3384CB0
	0x03384C78 MOVZ W8, 0xCCCD
	0x03384C7C MOVK W8, 0xCCCC0000
	0x03384C80 MOVN W9, 0x9
	0x03384C84 UMADDL X12, X19, X8, X31
	0x03384C88 MOV W10, W19
	0x03384C8C UBFM X19, X12, 0x23, 0x3F
	0x03384C90 MADD W12, W19, W9, W10
	0x03384C94 ADD W12, W12, 0x30

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0x1059000
	010 Move X22, 0xD70000
	011 Move W8, [X23+4041]
	012 Move X22, [X22+1448]
	013 Move W21, W2
	014 Move W19, W1
	015 Move W20, W0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0xD70000
	021 Move X0, [X0+1448]
	022 Call 0x1C17CF4
	023 Move X0, 0xDA5000
	024 Move X0, [X0+120]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+4041], W8
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move W8, W20
	030 Move W9, W20
	031 ShiftRight W9, 16
	032 And W9, W9, 0x7FFFFFFF
	033 Move X0, [X22]
	034 Move W10, 5
	035 NotImplemented "Instruction CSINC not yet implemented."
	036 Move X11, X8
	037 ShiftRight X11, 16
	038 And X11, X11, 0x7FFFFFFF
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CSINC not yet implemented."
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 Or W10, W9, 2
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CSEL not yet implemented."
	045 Move W10, [X0+224]
	046 Move X11, X8
	047 ShiftRight X11, 8
	048 And X11, X11, 0x7FFFFFFF
	049 NotImplemented "Instruction CSEL not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CINC not yet implemented."
	052 Compare W10, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X24, 0xDA5000
	056 Move X24, [X24+120]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction CSEL not yet implemented."
	059 Move W0, W22
	060 Move X1, X31
	061 Call String.FastAllocateString, X0
	062 Move X21, X0
	063 Compare X0, 0
	064 JumpIfEqual {68}
	065 Move X0, X31
	066 Call RuntimeHelpers.get_OffsetToStringData
	067 Add X25, X21, W0
	068 Move X25, X21
	069 Move X0, [X24]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move W8, W22
	075 ShiftRight W8, 31
	076 And W8, W8, 0x3FFFFFFF
	077 Subtract W10, W23, 2
	078 Add X8, X25, X8
	079 Move W9, 48
	080 Move W11, W10
	081 And W10, W20, 15
	082 NotImplemented "Instruction CMP not yet implemented."
	083 NotImplemented "Instruction CSEL not yet implemented."
	084 Add W10, W12, W10
	085 Move W20, W20
	086 ShiftRight W20, 4
	087 And W20, W20, 0x7FFFFFFF
	088 NotImplemented "Instruction STRH not yet implemented."
	089 Subtract W10, W11, 1
	090 Move TEMP, X11
	091 And TEMP, TEMP, -2147483648
	092 Compare TEMP, -2147483648
	093 JumpIfNotEqual {80}
	094 Compare W20, 0
	095 JumpIfNotEqual {80}
	096 Move X0, X21
	097 Move X20, [X31+48]
	098 Move X19, [X31+56]
	099 Move X22, [X31+32]
	100 Move X21, [X31+40]
	101 Move X24, [X31+16]
	102 Move X23, [X31+24]
	103 Move X30, [X31+64]
	104 Move X25, [X31+72]
	105 Return X0

Method: System.Boolean TryInt32ToHexStr(System.Int32 value, System.Char hexBase, System.Int32 digits, System.Span`1<System.Char> destination, out System.Int32 charsWritten)

Disassembly:
	0x03385044 LDR W10, [X0 + 0xE0]
	0x03385048 CSEL W8, W11, W8, HI
	0x0338504C UBFM X11, X9, 0x8, 0x3F
	0x03385050 CSEL X9, X11, X9, HI
	0x03385054 CMP X9, 0xF
	0x03385058 CINC W27, W8, HI
	0x0338505C CBNZ W10, 0x3385064
	0x03385060 BL 0x1C16DFC
	0x03385064 CMP W27, W21
	0x03385068 CSEL W27, W27, W21, GT
	0x0338506C CMP W27, W22
	0x03385070 B.LE 0x3385080
	0x03385074 MOV W0, W31
	0x03385078 STR W31, [X23]
	0x0338507C B 0x3385184
	0x03385080 STR W27, [X23]
	0x03385084 ADRP X8, 0xD9D000
	0x03385088 LDR X8, [X8 + 0x2C8]
	0x0338508C MOV X0, X24
	0x03385090 MOV X1, X22
	0x03385094 LDR X2, [X8]
	0x03385098 BL 0x2218CFC
	0x0338509C ADRP X23, 0xDA3000
	0x033850A0 LDR X23, [X23 + 0x78]
	0x033850A4 ADD X22, X0, W27, 0x1, SXTW
	0x033850A8 LDR X8, [X23]
	0x033850AC LDR W9, [X8 + 0xE0]
	0x033850B0 CBNZ W9, 0x33850C8
	0x033850B4 MOV X0, X8
	0x033850B8 BL 0x1C16DFC
	0x033850BC LDR X0, [X23]
	0x033850C0 LDR W8, [X0 + 0xE0]
	0x033850C4 CBZ W8, 0x3385130
	0x033850C8 CBZ W25, 0x3385138
	0x033850CC MOVZ W9, 0x6
	0x033850D0 MOVZ W8, 0x30
	0x033850D4 MOV W10, W9
	0x033850D8 AND W9, W20, 0xF
	0x033850DC CMP W9, 0xA
	0x033850E0 CSEL W11, W8, W19, CC
	0x033850E4 ADD W9, W11, W9
	0x033850E8 UBFM W20, W20, 0x4, 0x1F
	0x033850EC STRH W9, [X22 - 0x2]!
	0x033850F0 SUB W9, W10, 0x1
	0x033850F4 TBZ X10, 0x1F, 0x33850D4
	0x033850F8 CBNZ W20, 0x33850D4
	0x033850FC SUB W9, W21, 0xA
	0x03385100 MOVZ W8, 0x30
	0x03385104 MOV W10, W9
	0x03385108 AND W9, W25, 0xF
	0x0338510C CMP W9, 0xA
	0x03385110 CSEL W11, W8, W19, CC
	0x03385114 ADD W9, W11, W9
	0x03385118 UBFM W25, W25, 0x4, 0x1F
	0x0338511C STRH W9, [X22 - 0x2]!
	0x03385120 SUB W9, W10, 0x1
	0x03385124 TBZ X10, 0x1F, 0x3385104
	0x03385128 CBNZ W25, 0x3385104
	0x0338512C B 0x3385180
	0x03385130 BL 0x1C16DFC
	0x03385134 CBNZ W25, 0x33850CC
	0x03385138 LDR X0, [X26]
	0x0338513C LDR W8, [X0 + 0xE0]
	0x03385140 CBNZ W8, 0x3385148
	0x03385144 BL 0x1C16DFC
	0x03385148 CMP W21, 0x1
	0x0338514C CSINC W8, W21, W31, GT
	0x03385150 SUB W9, W8, 0x2
	0x03385154 MOVZ W8, 0x30
	0x03385158 MOV W10, W9
	0x0338515C AND W9, W20, 0xF
	0x03385160 CMP W9, 0xA
	0x03385164 CSEL W11, W8, W19, CC
	0x03385168 ADD W9, W11, W9
	0x0338516C UBFM W20, W20, 0x4, 0x1F
	0x03385170 STRH W9, [X22 - 0x2]!
	0x03385174 SUB W9, W10, 0x1
	0x03385178 TBZ X10, 0x1F, 0x3385158
	0x0338517C CBNZ W20, 0x3385158
	0x03385180 MOVZ W0, 0x1
	0x03385184 LDP X20, X19, [X31 + 0x40]
	0x03385188 LDP X22, X21, [X31 + 0x30]
	0x0338518C LDP X24, X23, [X31 + 0x20]
	0x03385190 LDP X26, X25, [X31 + 0x10]
	0x03385194 LDP X30, X27, [X31], #0x50
	0x03385198 RET
	0x0338519C STP X29, X30, [X31 - 0x60]!
	0x033851A0 STP X28, X27, [X31 + 0x10]
	0x033851A4 STP X26, X25, [X31 + 0x20]
	0x033851A8 STP X24, X23, [X31 + 0x30]
	0x033851AC STP X22, X21, [X31 + 0x40]
	0x033851B0 STP X20, X19, [X31 + 0x50]
	0x033851B4 ADD X29, X31, 0x0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x1058000
	011 Move X25, 0xD6F000
	012 Move W8, [X26+4042]
	013 Move X25, [X25+1448]
	014 Move X22, X5
	015 Move X19, X4
	016 Move X23, X3
	017 Move W24, W2
	018 Move W20, W1
	019 Move W21, W0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xD6F000
	025 Move X0, [X0+1448]
	026 Call 0x1C17CF4
	027 Move X0, 0xD9E000
	028 Move X0, [X0+712]
	029 Call 0x1C17CF4
	030 Move X0, 0xDA4000
	031 Move X0, [X0+120]
	032 Call 0x1C17CF4
	033 Move X0, 0xD9E000
	034 Move X0, [X0+1416]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X26+4042], W8
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W8, W21
	040 Move W9, W21
	041 ShiftRight W9, 16
	042 And W9, W9, 0x7FFFFFFF
	043 Move X0, [X25]
	044 Move W10, 5
	045 NotImplemented "Instruction CSINC not yet implemented."
	046 Move X11, X8
	047 ShiftRight X11, 16
	048 And X11, X11, 0x7FFFFFFF
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CSINC not yet implemented."
	051 NotImplemented "Instruction CSEL not yet implemented."
	052 Or W10, W9, 2
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CSEL not yet implemented."
	055 Move W10, [X0+224]
	056 Move X11, X8
	057 ShiftRight X11, 8
	058 And X11, X11, 0x7FFFFFFF
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CINC not yet implemented."
	062 Compare W10, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction CSEL not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move [X22], W31
	069 Move X8, 0xD9E000
	070 Move X8, [X8+712]
	071 Move [X22], W24
	072 Move X22, 0xDA4000
	073 Move X0, X23
	074 Move X2, [X8]
	075 Move X22, [X22+120]
	076 Move X1, X19
	077 Call MemoryMarshal.GetReference, X0
	078 Move X8, [X22]
	079 Move X22, X0
	080 Move W9, [X8+224]
	081 Compare W9, 0
	082 JumpIfNotEqual {85}
	083 Move X0, X8
	084 Call 0x1C17DFC
	085 Move W8, W24
	086 ShiftRight W8, 31
	087 And W8, W8, 0x3FFFFFFF
	088 Subtract W10, W25, 2
	089 Add X8, X22, X8
	090 Move W9, 48
	091 Move W11, W10
	092 And W10, W21, 15
	093 NotImplemented "Instruction CMP not yet implemented."
	094 NotImplemented "Instruction CSEL not yet implemented."
	095 Add W10, W12, W10
	096 Move W21, W21
	097 ShiftRight W21, 4
	098 And W21, W21, 0x7FFFFFFF
	099 NotImplemented "Instruction STRH not yet implemented."
	100 Subtract W10, W11, 1
	101 Move TEMP, X11
	102 And TEMP, TEMP, -2147483648
	103 Compare TEMP, -2147483648
	104 JumpIfNotEqual {91}
	105 Compare W21, 0
	106 JumpIfNotEqual {91}
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X20, [X31+64]
	109 Move X19, [X31+72]
	110 Move X22, [X31+48]
	111 Move X21, [X31+56]
	112 Move X24, [X31+32]
	113 Move X23, [X31+40]
	114 Move X26, [X31+16]
	115 Move X25, [X31+24]
	116 NotImplemented "Instruction CSET not yet implemented."
	117 Move X30, [X31+80]
	118 Return X0

Method: System.Char* Int32ToHexChars(System.Char* buffer, System.UInt32 value, System.Int32 hexBase, System.Int32 digits)

Disassembly:
	0x03386958 LDR X24, [X24 + 0x588]
	0x0338695C ADD W28, W25, 0x1
	0x03386960 MOVZ W29, 0x30
	0x03386964 MOVZ W19, 0x1
	0x03386968 MOV X8, X23
	0x0338696C LDRH W9, [X8], #0x2
	0x03386970 LDRB W10, [X26 + 0x4E2]
	0x03386974 CMP W9, 0x0
	0x03386978 CSEL W25, W29, W9, EQ
	0x0338697C CSEL X23, X23, X8, EQ
	0x03386980 CBNZ W10, 0x3386990
	0x03386984 MOV X0, X24
	0x03386988 BL 0x1C16CF4
	0x0338698C STRB W19, [X26 + 0x4E2]
	0x03386990 LDRSW X8, [X21 + 0x18]
	0x03386994 LDR W9, [X21 + 0x10]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Compare W1, 0
	003 JumpIfEqual {22}
	004 Subtract W9, W3, 2
	005 Move W8, 48
	006 Move W10, W9
	007 And W9, W1, 15
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CSEL not yet implemented."
	010 Add W9, W11, W9
	011 Move W1, W1
	012 ShiftRight W1, 4
	013 And W1, W1, 0x7FFFFFFF
	014 NotImplemented "Instruction STRH not yet implemented."
	015 Subtract W9, W10, 1
	016 Move TEMP, X10
	017 And TEMP, TEMP, -2147483648
	018 Compare TEMP, -2147483648
	019 JumpIfNotEqual {6}
	020 Compare W1, 0
	021 JumpIfNotEqual {6}
	022 Return X0

Method: System.Void UInt32ToNumber(System.UInt32 value, ref System.Number/NumberBuffer number)

Disassembly:
	0x03386998 CMP W8, W9
	0x0338699C B.GE 0x33869BC
	0x033869A0 CMP W8, W9
	0x033869A4 B.CS 0x3386BE4
	0x033869A8 LDR X9, [X21 + 0x8]
	0x033869AC ADD W10, W8, 0x1
	0x033869B0 STRH W25, [X9, X8, LSL #1]
	0x033869B4 STR W10, [X21 + 0x18]
	0x033869B8 B 0x33869CC
	0x033869BC MOV X0, X21
	0x033869C0 MOV W1, W25
	0x033869C4 MOV X2, X31
	0x033869C8 BL 0x3240EF4
	0x033869CC SUB W28, W28, 0x1
	0x033869D0 CMP W28, 0x1
	0x033869D4 B.GT 0x3386968
	0x033869D8 MOV W29, W27
	0x033869DC MOV W27, W20
	0x033869E0 LDR X20, [X31 + 0x8]
	0x033869E4 MOV W25, W31
	0x033869E8 TBNZ X25, 0x1F, 0x33869F4
	0x033869EC LDRH W8, [X23]
	0x033869F0 CBZ W8, 0x3386B54
	0x033869F4 CBZ X20, 0x3386BE8
	0x033869F8 ADRP X19, 0x1057000
	0x033869FC LDRB W8, [X19 + 0x4]
	0x03386A00 LDR X24, [X20 + 0x38]
	0x03386A04 CBNZ W8, 0x3386A1C
	0x03386A08 ADRP X0, 0xD9C000
	0x03386A0C LDR X0, [X0 + 0x588]
	0x03386A10 BL 0x1C16CF4
	0x03386A14 MOVZ W8, 0x1
	0x03386A18 STRB W8, [X19 + 0x4]
	0x03386A1C CBZ X24, 0x3386BE8
	0x03386A20 LDR W8, [X24 + 0x10]
	0x03386A24 CMP W8, 0x1
	0x03386A28 B.NE 0x3386A6C
	0x03386A2C LDRSW X19, [X21 + 0x18]
	0x03386A30 LDR W8, [X21 + 0x10]
	0x03386A34 CMP W19, W8
	0x03386A38 B.GE 0x3386A6C
	0x03386A3C CMP W19, W8
	0x03386A40 B.CS 0x3386BE4
	0x03386A44 LDR X28, [X21 + 0x8]
	0x03386A48 MOV X0, X24
	0x03386A4C MOV W1, W31
	0x03386A50 MOV X2, X31
	0x03386A54 BL 0x3222A1C
	0x03386A58 ADD W8, W19, 0x1
	0x03386A5C STRH W0, [X28, X19, LSL #1]
	0x03386A60 STR W8, [X21 + 0x18]
	0x03386A64 TBZ X25, 0x1F, 0x3386AE8
	0x03386A68 B 0x3386A80
	0x03386A6C MOV X0, X21
	0x03386A70 MOV X1, X24
	0x03386A74 MOV X2, X31
	0x03386A78 BL 0x3241020
	0x03386A7C TBZ X25, 0x1F, 0x3386AE8
	0x03386A80 ADRP X24, 0xD9C000
	0x03386A84 LDR X24, [X24 + 0x588]
	0x03386A88 MOVZ W19, 0x1
	0x03386A8C MOVZ W28, 0x30
	0x03386A90 LDRB W8, [X26 + 0x4E2]
	0x03386A94 CBNZ W8, 0x3386AA4
	0x03386A98 MOV X0, X24
	0x03386A9C BL 0x1C16CF4
	0x03386AA0 STRB W19, [X26 + 0x4E2]
	0x03386AA4 LDRSW X8, [X21 + 0x18]
	0x03386AA8 LDR W9, [X21 + 0x10]
	0x03386AAC CMP W8, W9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1057000
	007 Move X21, 0xDA3000
	008 Move W8, [X22+4043]
	009 Move X21, [X21+120]
	010 Move X19, X1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDA3000
	017 Move X0, [X0+120]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+4043], W8
	021 Move W8, 10
	022 Move X0, X19
	023 Move W1, W31
	024 Move X2, X31
	025 Move [X19], W8
	026 Call NumberBuffer.set_sign, X0, X1
	027 Move X0, X19
	028 Move X1, X31
	029 Call NumberBuffer.get_digits, X0
	030 Move X8, [X21]
	031 Move X21, X0
	032 Move W9, [X8+224]
	033 Compare W9, 0
	034 JumpIfNotEqual {37}
	035 Move X0, X8
	036 Call 0x1C17DFC
	037 Add X8, X21, 20
	038 Compare W20, 0
	039 JumpIfEqual {64}
	040 Move W9, 0xCCCD
	041 Move TEMP, 1
	042 Not TEMP
	043 Move W11, TEMP
	044 NotImplemented "Instruction MOVK not yet implemented."
	045 Move TEMP, 9
	046 Not TEMP
	047 Move W10, TEMP
	048 Move X21, X8
	049 Move W13, W11
	050 NotImplemented "Instruction UMADDL not yet implemented."
	051 Move W12, W20
	052 Move X20, X11
	053 ShiftRight X20, 35
	054 And X20, X20, 0x7FFFFFFF
	055 NotImplemented "Instruction MADD not yet implemented."
	056 Add W11, W11, 48
	057 NotImplemented "Instruction STRH not yet implemented."
	058 Subtract W11, W13, 1
	059 Move TEMP, X13
	060 And TEMP, TEMP, -2147483648
	061 Compare TEMP, -2147483648
	062 JumpIfNotEqual {49}
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X21, X8
	065 Subtract X8, X8, X21
	066 NotImplemented "Instruction CMP not yet implemented."
	067 NotImplemented "Instruction CINC not yet implemented."
	068 Move X20, X8
	069 ShiftRight X20, 1
	070 And X20, X20, 0x7FFFFFFF
	071 Move X0, X19
	072 Move X1, X31
	073 Move [X19+4], W20
	074 Call NumberBuffer.get_digits, X0
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction LDRH not yet implemented."
	077 Subtract W20, W20, 1
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction STRH not yet implemented."
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X22, [X31+16]
	083 Move X21, [X31+24]
	084 NotImplemented "Instruction STRH not yet implemented."
	085 Move X30, [X31+48]
	086 Return 

Method: System.Char* UInt32ToDecChars(System.Char* bufferEnd, System.UInt32 value, System.Int32 digits)

Disassembly:
	0x03383328 CBNZ W8, 0x3383340
	0x0338332C ADRP X0, 0xD97000
	0x03383330 LDR X0, [X0 + 0x290]
	0x03383334 BL 0x1C16CF4
	0x03383338 MOVZ W8, 0x1
	0x0338333C STRB W8, [X21 + 0x762]
	0x03383340 ADRP X23, 0xDA5000
	0x03383344 LDR X23, [X23 + 0x78]
	0x03383348 CBZ X20, 0x3383364
	0x0338334C MOV X0, X20
	0x03383350 MOV X1, X31
	0x03383354 BL 0x3225708
	0x03383358 LDR W20, [X20 + 0x10]
	0x0338335C MOV X21, X0
	0x03383360 B 0x3383368
	0x03383364 MOV X21, X31
	0x03383368 LDR X0, [X23]
	0x0338336C LDR W8, [X0 + 0xE0]
	0x03383370 CBNZ W8, 0x3383378

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Compare W1, 0
	003 JumpIfEqual {25}
	004 Move W8, 0xCCCD
	005 Subtract W10, W2, 2
	006 NotImplemented "Instruction MOVK not yet implemented."
	007 Move TEMP, 9
	008 Not TEMP
	009 Move W9, TEMP
	010 Move W12, W10
	011 NotImplemented "Instruction UMADDL not yet implemented."
	012 Move W11, W1
	013 Move X1, X10
	014 ShiftRight X1, 35
	015 And X1, X1, 0x7FFFFFFF
	016 NotImplemented "Instruction MADD not yet implemented."
	017 Add W10, W10, 48
	018 NotImplemented "Instruction STRH not yet implemented."
	019 Subtract W10, W12, 1
	020 Move TEMP, X12
	021 And TEMP, TEMP, -2147483648
	022 Compare TEMP, -2147483648
	023 JumpIfNotEqual {10}
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Return X0

Method: System.String UInt32ToDecStr(System.UInt32 value, System.Int32 digits)

Disassembly:
	0x03384824 UBFM W24, W24, 0x4, 0x1F
	0x03384828 STRH W9, [X23 - 0x2]!
	0x0338482C SUB W9, W10, 0x1
	0x03384830 TBZ X10, 0x1F, 0x3384810
	0x03384834 CBNZ W24, 0x3384810
	0x03384838 B 0x3384884
	0x0338483C LDR X0, [X25]
	0x03384840 LDR W8, [X0 + 0xE0]
	0x03384844 CBNZ W8, 0x338484C
	0x03384848 BL 0x1C16DFC
	0x0338484C CMP W22, 0x1
	0x03384850 CSINC W8, W22, W31, GT
	0x03384854 SUB W9, W8, 0x2
	0x03384858 MOVZ W8, 0x30
	0x0338485C MOV W10, W9
	0x03384860 AND W9, W20, 0xF
	0x03384864 CMP W9, 0xA
	0x03384868 CSEL W11, W8, W19, CC
	0x0338486C ADD W9, W11, W9
	0x03384870 UBFM W20, W20, 0x4, 0x1F
	0x03384874 STRH W9, [X23 - 0x2]!
	0x03384878 SUB W9, W10, 0x1
	0x0338487C TBZ X10, 0x1F, 0x338485C
	0x03384880 CBNZ W20, 0x338485C
	0x03384884 MOV X0, X21
	0x03384888 LDP X20, X19, [X31 + 0x40]
	0x0338488C LDP X22, X21, [X31 + 0x30]
	0x03384890 LDP X24, X23, [X31 + 0x20]
	0x03384894 LDP X26, X25, [X31 + 0x10]
	0x03384898 LDR X30, [X31], #0x50
	0x0338489C RET
	0x033848A0 STR X30, [X31 - 0x50]!
	0x033848A4 STP X26, X25, [X31 + 0x10]
	0x033848A8 STP X24, X23, [X31 + 0x20]
	0x033848AC STP X22, X21, [X31 + 0x30]
	0x033848B0 STP X20, X19, [X31 + 0x40]
	0x033848B4 ADRP X21, 0x1058000
	0x033848B8 LDRB W8, [X21 + 0xFCE]
	0x033848BC MOV X19, X1
	0x033848C0 MOV X20, X0
	0x033848C4 TBNZ X8, 0x0, 0x33848DC
	0x033848C8 ADRP X0, 0xDA4000
	0x033848CC LDR X0, [X0 + 0x78]
	0x033848D0 BL 0x1C16CF4
	0x033848D4 MOVZ W8, 0x1
	0x033848D8 STRB W8, [X21 + 0xFCE]
	0x033848DC ADRP X22, 0xDA4000
	0x033848E0 LDR X22, [X22 + 0x78]
	0x033848E4 MOVZ W23, 0xCA00
	0x033848E8 UBFM X1, X20, 0x3F, 0x3F
	0x033848EC MOV X0, X19
	0x033848F0 MOV X2, X31
	0x033848F4 MOVK W23, 0x3B9A0000
	0x033848F8 BL 0x338C39C
	0x033848FC MOVZ W8, 0x13
	0x03384900 MOV X0, X19
	0x03384904 MOV X1, X31
	0x03384908 STR W8, [X19]
	0x0338490C BL 0x338C38C
	0x03384910 ANDS W31, W0, 0x1
	0x03384914 MOV X0, X19
	0x03384918 MOV X1, X31
	0x0338491C CSNEG X24, X20, X20, EQ
	0x03384920 BL 0x338C3A8
	0x03384924 ADD X21, X0, 0x26
	0x03384928 MOVZ W25, 0xCCCD
	0x0338492C MOVK W25, 0xCCCC0000
	0x03384930 MOVN W26, 0x9
	0x03384934 MOV X20, X21
	0x03384938 LDR X0, [X22]
	0x0338493C LDR W8, [X0 + 0xE0]
	0x03384940 CBNZ W8, 0x3384950
	0x03384944 BL 0x1C16DFC
	0x03384948 LDR X0, [X22]
	0x0338494C LDR W8, [X0 + 0xE0]
	0x03384950 UBFM X9, X24, 0x20, 0x3F
	0x03384954 CBZ X9, 0x33849A0
	0x03384958 CBNZ W8, 0x3384960
	0x0338495C BL 0x1C16DFC
	0x03384960 MOV X8, X24
	0x03384964 UDIV X24, X24, X23
	0x03384968 MSUB W8, W24, W23, W8
	0x0338496C MOVZ W9, 0x7
	0x03384970 MOV W10, W8
	0x03384974 UMADDL X8, X8, X25, X31
	0x03384978 UBFM X8, X8, 0x23, 0x3F
	0x0338497C MOV W11, W9
	0x03384980 MADD W9, W8, W26, W10
	0x03384984 ADD W9, W9, 0x30
	0x03384988 STRH W9, [X20 - 0x2]!
	0x0338498C SUB W9, W11, 0x1
	0x03384990 TBZ X11, 0x1F, 0x3384970
	0x03384994 CMP W10, 0x9
	0x03384998 B.HI 0x3384970
	0x0338499C B 0x3384938
	0x033849A0 CBZ W8, 0x33849AC
	0x033849A4 CBNZ W24, 0x33849B4
	0x033849A8 B 0x33849F0
	0x033849AC BL 0x1C16DFC
	0x033849B0 CBZ W24, 0x33849F0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1059000
	007 Move W8, [X21+4044]
	008 Move W20, W1
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xD70000
	015 Move X0, [X0+1448]
	016 Call 0x1C17CF4
	017 Move X0, 0xDA5000
	018 Move X0, [X0+120]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+4044], W8
	022 Move W8, 0x869F
	023 NotImplemented "Instruction MOVK not yet implemented."
	024 Move W9, W19
	025 ShiftRight W9, 5
	026 And W9, W9, 0x7FFFFFFF
	027 Add W8, W8, 1
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction UDIV not yet implemented."
	030 NotImplemented "Instruction CSEL not yet implemented."
	031 Move X8, 0xD70000
	032 Move X8, [X8+1448]
	033 Move W10, 6
	034 NotImplemented "Instruction CSINC not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Add W21, W21, 1
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add W21, W21, 2
	040 Move W9, W9
	041 ShiftRight W9, 4
	042 And W9, W9, 0x7FFFFFFF
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add W21, W21, 3
	045 Add W21, W21, 4
	046 Move X0, [X8]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CSEL not yet implemented."
	053 Move W0, W22
	054 Move X1, X31
	055 Call String.FastAllocateString, X0
	056 Move X21, X0
	057 Compare X0, 0
	058 JumpIfEqual {62}
	059 Move X0, X31
	060 Call RuntimeHelpers.get_OffsetToStringData
	061 Add X8, X21, W0
	062 Move X8, X21
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add X22, X8, W22
	065 Move X8, 0xDA5000
	066 Move X8, [X8+120]
	067 Move X0, [X8]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move W8, 0xCCCD
	073 Subtract W10, W20, 2
	074 NotImplemented "Instruction MOVK not yet implemented."
	075 Move TEMP, 9
	076 Not TEMP
	077 Move W9, TEMP
	078 Move W12, W10
	079 NotImplemented "Instruction UMADDL not yet implemented."
	080 Move W11, W19
	081 Move X19, X10
	082 ShiftRight X19, 35
	083 And X19, X19, 0x7FFFFFFF
	084 NotImplemented "Instruction MADD not yet implemented."
	085 Add W10, W10, 48
	086 NotImplemented "Instruction STRH not yet implemented."
	087 Subtract W10, W12, 1
	088 Move TEMP, X12
	089 And TEMP, TEMP, -2147483648
	090 Compare TEMP, -2147483648
	091 JumpIfNotEqual {78}
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move W8, 0xCCCD
	094 NotImplemented "Instruction MOVK not yet implemented."
	095 Move TEMP, 9
	096 Not TEMP
	097 Move W9, TEMP
	098 NotImplemented "Instruction UMADDL not yet implemented."
	099 Move X10, X10
	100 ShiftRight X10, 35
	101 And X10, X10, 0x7FFFFFFF
	102 NotImplemented "Instruction MADD not yet implemented."
	103 Add W11, W11, 48
	104 NotImplemented "Instruction CMP not yet implemented."
	105 NotImplemented "Instruction STRH not yet implemented."
	106 Move W19, W10
	107 Move X0, X21
	108 Move X20, [X31+32]
	109 Move X19, [X31+40]
	110 Move X22, [X31+16]
	111 Move X21, [X31+24]
	112 Move X30, [X31+48]
	113 Return X0

Method: System.Boolean TryUInt32ToDecStr(System.UInt32 value, System.Int32 digits, System.Span`1<System.Char> destination, out System.Int32 charsWritten)

Disassembly:
	0x03384C98 MOV W11, W21
	0x03384C9C STRH W12, [X20 - 0x2]!
	0x03384CA0 SUB W21, W21, 0x1
	0x03384CA4 TBZ X11, 0x1F, 0x3384C84
	0x03384CA8 CMP W10, 0x9
	0x03384CAC B.HI 0x3384C84
	0x03384CB0 MOVZ W0, 0x1
	0x03384CB4 LDP X20, X19, [X31 + 0x40]
	0x03384CB8 LDP X22, X21, [X31 + 0x30]
	0x03384CBC LDP X24, X23, [X31 + 0x20]
	0x03384CC0 LDP X26, X25, [X31 + 0x10]
	0x03384CC4 LDR X30, [X31], #0x50
	0x03384CC8 RET
	0x03384CCC STP X29, X30, [X31 - 0x60]!
	0x03384CD0 STP X28, X27, [X31 + 0x10]
	0x03384CD4 STP X26, X25, [X31 + 0x20]
	0x03384CD8 STP X24, X23, [X31 + 0x30]
	0x03384CDC STP X22, X21, [X31 + 0x40]
	0x03384CE0 STP X20, X19, [X31 + 0x50]
	0x03384CE4 ADRP X25, 0x1058000
	0x03384CE8 LDRB W8, [X25 + 0xFD0]
	0x03384CEC MOV X21, X5
	0x03384CF0 MOV X19, X4
	0x03384CF4 MOV X22, X3
	0x03384CF8 MOV X20, X2
	0x03384CFC MOV W23, W1
	0x03384D00 MOV X24, X0
	0x03384D04 TBNZ X8, 0x0, 0x3384D40
	0x03384D08 ADRP X0, 0xD6F000
	0x03384D0C LDR X0, [X0 + 0x5A8]
	0x03384D10 BL 0x1C16CF4
	0x03384D14 ADRP X0, 0xD9E000
	0x03384D18 LDR X0, [X0 + 0x2C8]
	0x03384D1C BL 0x1C16CF4
	0x03384D20 ADRP X0, 0xDA4000
	0x03384D24 LDR X0, [X0 + 0x78]
	0x03384D28 BL 0x1C16CF4
	0x03384D2C ADRP X0, 0xD9E000
	0x03384D30 LDR X0, [X0 + 0x588]
	0x03384D34 BL 0x1C16CF4
	0x03384D38 MOVZ W8, 0x1
	0x03384D3C STRB W8, [X25 + 0xFD0]
	0x03384D40 MOVZ W8, 0x967F
	0x03384D44 MOVK W8, 0x980000
	0x03384D48 CMP W23, 0x1
	0x03384D4C SUB X24, X31, X24
	0x03384D50 CSINC W23, W23, W31, GT
	0x03384D54 CMP X24, X8
	0x03384D58 B.LS 0x3384D80
	0x03384D5C MOVZ X9, 0x3FFF
	0x03384D60 MOVK X9, 0x107A0000
	0x03384D64 MOVK X9, 0x5AF3
	0x03384D68 CMP X24, X9
	0x03384D6C B.LS 0x3384D8C
	0x03384D70 ADD X8, X9, 0x1
	0x03384D74 UDIV X9, X24, X8
	0x03384D78 MOVZ W25, 0xF
	0x03384D7C B 0x3384D98
	0x03384D80 MOVZ W25, 0x1
	0x03384D84 MOV X9, X24
	0x03384D88 B 0x3384D98
	0x03384D8C ADD X8, X8, 0x1
	0x03384D90 UDIV X9, X24, X8
	0x03384D94 MOVZ W25, 0x8
	0x03384D98 ADRP X8, 0xD6F000
	0x03384D9C LDR X8, [X8 + 0x5A8]
	0x03384DA0 CMP W9, 0xA
	0x03384DA4 B.CC 0x3384E0C
	0x03384DA8 CMP W9, 0x63
	0x03384DAC B.HI 0x3384DB8
	0x03384DB0 ADD W25, W25, 0x1
	0x03384DB4 B 0x3384E0C
	0x03384DB8 CMP W9, 0x3E7
	0x03384DBC B.HI 0x3384DC8
	0x03384DC0 ADD W25, W25, 0x2
	0x03384DC4 B 0x3384E0C
	0x03384DC8 UBFM W10, W9, 0x4, 0x1F
	0x03384DCC CMP W10, 0x270
	0x03384DD0 B.HI 0x3384DDC
	0x03384DD4 ADD W25, W25, 0x3
	0x03384DD8 B 0x3384E0C
	0x03384DDC UBFM W10, W9, 0x5, 0x1F
	0x03384DE0 CMP W10, 0xC34
	0x03384DE4 B.HI 0x3384DF0
	0x03384DE8 ADD W25, W25, 0x4
	0x03384DEC B 0x3384E0C
	0x03384DF0 MOVZ W10, 0x423F
	0x03384DF4 MOVK W10, 0xF0000
	0x03384DF8 CMP W9, W10
	0x03384DFC B.HI 0x3384E08
	0x03384E00 ADD W25, W25, 0x5
	0x03384E04 B 0x3384E0C
	0x03384E08 ADD W25, W25, 0x6
	0x03384E0C LDR X0, [X8]
	0x03384E10 LDR W8, [X0 + 0xE0]
	0x03384E14 CBNZ W8, 0x3384E1C
	0x03384E18 BL 0x1C16DFC
	0x03384E1C CBZ X20, 0x3384F94
	0x03384E20 LDR W8, [X20 + 0x10]
	0x03384E24 CMP W23, W25
	0x03384E28 CSEL W9, W25, W23, LT
	0x03384E2C ADD W25, W8, W9
	0x03384E30 CMP W25, W19
	0x03384E34 B.LE 0x3384E40
	0x03384E38 STR W31, [X21]
	0x03384E3C B 0x3384F70
	0x03384E40 STR W25, [X21]
	0x03384E44 ADRP X8, 0xD9E000
	0x03384E48 LDR X8, [X8 + 0x2C8]
	0x03384E4C MOVZ W26, 0xCA00
	0x03384E50 MOV X0, X22
	0x03384E54 MOV X1, X19
	0x03384E58 LDR X2, [X8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1059000
	009 Move W8, [X24+4045]
	010 Move X22, X4
	011 Move X21, X3
	012 Move X23, X2
	013 Move W20, W1
	014 Move W19, W0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0xD70000
	020 Move X0, [X0+1448]
	021 Call 0x1C17CF4
	022 Move X0, 0xD9F000
	023 Move X0, [X0+712]
	024 Call 0x1C17CF4
	025 Move X0, 0xDA5000
	026 Move X0, [X0+120]
	027 Call 0x1C17CF4
	028 Move X0, 0xD9F000
	029 Move X0, [X0+1416]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X24+4045], W8
	033 Move W8, 0x869F
	034 NotImplemented "Instruction MOVK not yet implemented."
	035 Move W9, W19
	036 ShiftRight W9, 5
	037 And W9, W9, 0x7FFFFFFF
	038 Add W8, W8, 1
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction UDIV not yet implemented."
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 Move X8, 0xD70000
	043 Move X8, [X8+1448]
	044 Move W10, 6
	045 NotImplemented "Instruction CSINC not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add W24, W24, 1
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add W24, W24, 2
	051 Move W9, W9
	052 ShiftRight W9, 4
	053 And W9, W9, 0x7FFFFFFF
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Add W24, W24, 3
	056 Add W24, W24, 4
	057 Move X0, [X8]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction CSEL not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move W0, W31
	066 Move [X22], W31
	067 Move X8, 0xD9F000
	068 Move X8, [X8+712]
	069 Move [X22], W24
	070 Move X0, X23
	071 Move X1, X21
	072 Move X2, [X8]
	073 Call MemoryMarshal.GetReference, X0
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Add X21, X0, W24
	076 Move X8, 0xDA5000
	077 Move X8, [X8+120]
	078 Move X0, [X8]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move W8, 0xCCCD
	084 Subtract W10, W20, 2
	085 NotImplemented "Instruction MOVK not yet implemented."
	086 Move TEMP, 9
	087 Not TEMP
	088 Move W9, TEMP
	089 Move W12, W10
	090 NotImplemented "Instruction UMADDL not yet implemented."
	091 Move W11, W19
	092 Move X19, X10
	093 ShiftRight X19, 35
	094 And X19, X19, 0x7FFFFFFF
	095 NotImplemented "Instruction MADD not yet implemented."
	096 Add W10, W10, 48
	097 NotImplemented "Instruction STRH not yet implemented."
	098 Subtract W10, W12, 1
	099 Move TEMP, X12
	100 And TEMP, TEMP, -2147483648
	101 Compare TEMP, -2147483648
	102 JumpIfNotEqual {89}
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move W8, 0xCCCD
	105 NotImplemented "Instruction MOVK not yet implemented."
	106 Move TEMP, 9
	107 Not TEMP
	108 Move W9, TEMP
	109 NotImplemented "Instruction UMADDL not yet implemented."
	110 Move X10, X10
	111 ShiftRight X10, 35
	112 And X10, X10, 0x7FFFFFFF
	113 NotImplemented "Instruction MADD not yet implemented."
	114 Add W11, W11, 48
	115 NotImplemented "Instruction CMP not yet implemented."
	116 NotImplemented "Instruction STRH not yet implemented."
	117 Move W19, W10
	118 Move W0, 1
	119 Move X20, [X31+48]
	120 Move X19, [X31+56]
	121 Move X22, [X31+32]
	122 Move X21, [X31+40]
	123 Move X24, [X31+16]
	124 Move X23, [X31+24]
	125 Move X30, [X31+64]
	126 Return X0

Method: System.Void Int64ToNumber(System.Int64 input, ref System.Number/NumberBuffer number)

Disassembly:
	0x033858A0 BL 0x338C3A8
	0x033858A4 LDR X8, [X21]
	0x033858A8 MOV X21, X0
	0x033858AC LDR W9, [X8 + 0xE0]
	0x033858B0 CBNZ W9, 0x33858BC
	0x033858B4 MOV X0, X8
	0x033858B8 BL 0x1C16DFC
	0x033858BC ADD X8, X21, 0x14
	0x033858C0 CBZ W20, 0x3385908
	0x033858C4 MOVZ W9, 0xCCCD
	0x033858C8 MOVN W11, 0x1
	0x033858CC MOVK W9, 0xCCCC0000
	0x033858D0 MOVN W10, 0x9
	0x033858D4 MOV X21, X8
	0x033858D8 MOV W13, W11
	0x033858DC UMADDL X11, X20, X9, X31
	0x033858E0 MOV W12, W20
	0x033858E4 UBFM X20, X11, 0x23, 0x3F
	0x033858E8 MADD W11, W20, W10, W12
	0x033858EC ADD W11, W11, 0x30
	0x033858F0 STRH W11, [X21 - 0x2]!
	0x033858F4 SUB W11, W13, 0x1
	0x033858F8 TBZ X13, 0x1F, 0x33858D8
	0x033858FC CMP W12, 0x9
	0x03385900 B.HI 0x33858D8
	0x03385904 B 0x338590C
	0x03385908 MOV X21, X8
	0x0338590C SUB X8, X8, X21
	0x03385910 CMP X8, 0x0
	0x03385914 CINC X8, X8, LT
	0x03385918 UBFM X20, X8, 0x1, 0x3F
	0x0338591C MOV X0, X19
	0x03385920 MOV X1, X31
	0x03385924 STR W20, [X19 + 0x4]
	0x03385928 BL 0x338C3A8
	0x0338592C CMP W20, 0x1
	0x03385930 B.MI 0x3385948
	0x03385934 LDRH W8, [X21], #0x2
	0x03385938 SUB W20, W20, 0x1
	0x0338593C CMP W20, 0x0
	0x03385940 STRH W8, [X0], #0x2
	0x03385944 B.GT 0x3385934
	0x03385948 LDP X20, X19, [X31 + 0x10]
	0x0338594C STRH W31, [X0]
	0x03385950 LDP X30, X21, [X31], #0x20
	0x03385954 RET
	0x03385958 CMP W3, 0x1
	0x0338595C B.PL 0x3385964
	0x03385960 CBZ W1, 0x3385994
	0x03385964 SUB W9, W3, 0x2
	0x03385968 MOVZ W8, 0x30
	0x0338596C MOV W10, W9
	0x03385970 AND W9, W1, 0xF
	0x03385974 CMP W9, 0xA
	0x03385978 CSEL W11, W8, W2, CC
	0x0338597C ADD W9, W11, W9
	0x03385980 UBFM W1, W1, 0x4, 0x1F
	0x03385984 STRH W9, [X0 - 0x2]!
	0x03385988 SUB W9, W10, 0x1
	0x0338598C TBZ X10, 0x1F, 0x338596C
	0x03385990 CBNZ W1, 0x338596C
	0x03385994 RET
	0x03385998 STR X30, [X31 - 0x30]!
	0x0338599C STP X22, X21, [X31 + 0x10]
	0x033859A0 STP X20, X19, [X31 + 0x20]
	0x033859A4 ADRP X22, 0x1057000
	0x033859A8 ADRP X21, 0xDA3000
	0x033859AC LDRB W8, [X22 + 0xFCB]
	0x033859B0 LDR X21, [X21 + 0x78]
	0x033859B4 MOV X19, X1
	0x033859B8 MOV W20, W0
	0x033859BC TBNZ X8, 0x0, 0x33859D4
	0x033859C0 ADRP X0, 0xDA3000
	0x033859C4 LDR X0, [X0 + 0x78]
	0x033859C8 BL 0x1C16CF4
	0x033859CC MOVZ W8, 0x1
	0x033859D0 STRB W8, [X22 + 0xFCB]
	0x033859D4 MOVZ W8, 0xA
	0x033859D8 MOV X0, X19
	0x033859DC MOV W1, W31
	0x033859E0 MOV X2, X31
	0x033859E4 STR W8, [X19]
	0x033859E8 BL 0x338C39C
	0x033859EC MOV X0, X19
	0x033859F0 MOV X1, X31
	0x033859F4 BL 0x338C3A8
	0x033859F8 LDR X8, [X21]
	0x033859FC MOV X21, X0
	0x03385A00 LDR W9, [X8 + 0xE0]
	0x03385A04 CBNZ W9, 0x3385A10
	0x03385A08 MOV X0, X8
	0x03385A0C BL 0x1C16DFC
	0x03385A10 ADD X8, X21, 0x14
	0x03385A14 CBZ W20, 0x3385A5C
	0x03385A18 MOVZ W9, 0xCCCD
	0x03385A1C MOVN W11, 0x1
	0x03385A20 MOVK W9, 0xCCCC0000
	0x03385A24 MOVN W10, 0x9
	0x03385A28 MOV X21, X8
	0x03385A2C MOV W13, W11
	0x03385A30 UMADDL X11, X20, X9, X31
	0x03385A34 MOV W12, W20
	0x03385A38 UBFM X20, X11, 0x23, 0x3F
	0x03385A3C MADD W11, W20, W10, W12
	0x03385A40 ADD W11, W11, 0x30
	0x03385A44 STRH W11, [X21 - 0x2]!

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x1058000
	011 Move W8, [X21+4046]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xDA4000
	019 Move X0, [X0+120]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+4046], W8
	023 Move X22, 0xDA4000
	024 Move X22, [X22+120]
	025 Move W23, 0xCA00
	026 Move X1, X20
	027 ShiftRight X1, 63
	028 And X1, X1, 0x7FFFFFFF
	029 Move X0, X19
	030 Move X2, X31
	031 NotImplemented "Instruction MOVK not yet implemented."
	032 Call NumberBuffer.set_sign, X0, X1
	033 Move W8, 19
	034 Move X0, X19
	035 Move X1, X31
	036 Move [X19], W8
	037 Call NumberBuffer.get_sign, X0
	038 And W31, W0, 1
	039 Move X0, X19
	040 Move X1, X31
	041 NotImplemented "Instruction CSNEG not yet implemented."
	042 Call NumberBuffer.get_digits, X0
	043 Add X21, X0, 38
	044 Move W25, 0xCCCD
	045 NotImplemented "Instruction MOVK not yet implemented."
	046 Move TEMP, 9
	047 Not TEMP
	048 Move W26, TEMP
	049 Move X20, X21
	050 Move X0, [X22]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {57}
	054 Call 0x1C17DFC
	055 Move X0, [X22]
	056 Move W8, [X0+224]
	057 Move X9, X24
	058 ShiftRight X9, 32
	059 And X9, X9, 0x7FFFFFFF
	060 Compare X9, 0
	061 JumpIfEqual {84}
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X8, X24
	066 NotImplemented "Instruction UDIV not yet implemented."
	067 NotImplemented "Instruction MSUB not yet implemented."
	068 Move W9, 7
	069 Move W10, W8
	070 NotImplemented "Instruction UMADDL not yet implemented."
	071 Move X8, X8
	072 ShiftRight X8, 35
	073 And X8, X8, 0x7FFFFFFF
	074 Move W11, W9
	075 NotImplemented "Instruction MADD not yet implemented."
	076 Add W9, W9, 48
	077 NotImplemented "Instruction STRH not yet implemented."
	078 Subtract W9, W11, 1
	079 Move TEMP, X11
	080 And TEMP, TEMP, -2147483648
	081 Compare TEMP, -2147483648
	082 JumpIfNotEqual {69}
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Compare W8, 0
	085 JumpIfEqual {88}
	086 Compare W24, 0
	087 JumpIfNotEqual {91}
	088 Call 0x1C17DFC
	089 Compare W24, 0
	090 JumpIfEqual {114}
	091 Move W8, 0xCCCD
	092 Move TEMP, 1
	093 Not TEMP
	094 Move W10, TEMP
	095 NotImplemented "Instruction MOVK not yet implemented."
	096 Move TEMP, 9
	097 Not TEMP
	098 Move W9, TEMP
	099 Move W12, W10
	100 NotImplemented "Instruction UMADDL not yet implemented."
	101 Move W11, W24
	102 Move X24, X10
	103 ShiftRight X24, 35
	104 And X24, X24, 0x7FFFFFFF
	105 NotImplemented "Instruction MADD not yet implemented."
	106 Add W10, W10, 48
	107 NotImplemented "Instruction STRH not yet implemented."
	108 Subtract W10, W12, 1
	109 Move TEMP, X12
	110 And TEMP, TEMP, -2147483648
	111 Compare TEMP, -2147483648
	112 JumpIfNotEqual {99}
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Subtract X8, X21, X20
	115 NotImplemented "Instruction CMP not yet implemented."
	116 NotImplemented "Instruction CINC not yet implemented."
	117 Move X21, X8
	118 ShiftRight X21, 1
	119 And X21, X21, 0x7FFFFFFF
	120 Move X0, X19
	121 Move X1, X31
	122 Move [X19+4], W21
	123 Call NumberBuffer.get_digits, X0
	124 NotImplemented "Instruction CMP not yet implemented."
	125 NotImplemented "Instruction LDRH not yet implemented."
	126 Subtract W21, W21, 1
	127 NotImplemented "Instruction CMP not yet implemented."
	128 NotImplemented "Instruction STRH not yet implemented."
	129 Move X20, [X31+64]
	130 Move X19, [X31+72]
	131 Move X22, [X31+48]
	132 Move X21, [X31+56]
	133 Move X24, [X31+32]
	134 Move X23, [X31+40]
	135 Move X26, [X31+16]
	136 Move X25, [X31+24]
	137 NotImplemented "Instruction STRH not yet implemented."
	138 Move X30, [X31+80]
	139 Return 

Method: System.String NegativeInt64ToDecStr(System.Int64 input, System.Int32 digits, System.String sNegative)

Disassembly:
	0x03385410 ADRP X21, 0x1057000
	0x03385414 LDRB W8, [X21 + 0xFD3]
	0x03385418 MOV X19, X1
	0x0338541C MOV X20, X0
	0x03385420 TBNZ X8, 0x0, 0x3385438
	0x03385424 ADRP X0, 0xDA3000
	0x03385428 LDR X0, [X0 + 0x78]
	0x0338542C BL 0x1C16CF4
	0x03385430 MOVZ W8, 0x1
	0x03385434 STRB W8, [X21 + 0xFD3]
	0x03385438 ADRP X23, 0xDA3000
	0x0338543C LDR X23, [X23 + 0x78]
	0x03385440 MOVZ W24, 0xCA00
	0x03385444 MOVZ W8, 0x14
	0x03385448 MOV X0, X19
	0x0338544C MOV W1, W31
	0x03385450 MOV X2, X31
	0x03385454 MOVK W24, 0x3B9A0000
	0x03385458 STR W8, [X19]
	0x0338545C BL 0x338C39C
	0x03385460 MOV X0, X19
	0x03385464 MOV X1, X31
	0x03385468 BL 0x338C3A8
	0x0338546C ADD X22, X0, 0x28
	0x03385470 MOVZ W25, 0xCCCD
	0x03385474 MOVK W25, 0xCCCC0000
	0x03385478 MOVN W26, 0x9
	0x0338547C MOV X21, X22
	0x03385480 LDR X0, [X23]
	0x03385484 LDR W8, [X0 + 0xE0]
	0x03385488 CBNZ W8, 0x3385498
	0x0338548C BL 0x1C16DFC
	0x03385490 LDR X0, [X23]
	0x03385494 LDR W8, [X0 + 0xE0]
	0x03385498 UBFM X9, X20, 0x20, 0x3F
	0x0338549C CBZ X9, 0x33854E8
	0x033854A0 CBNZ W8, 0x33854A8
	0x033854A4 BL 0x1C16DFC
	0x033854A8 MOV X8, X20
	0x033854AC UDIV X20, X20, X24
	0x033854B0 MSUB W8, W20, W24, W8
	0x033854B4 MOVZ W9, 0x7
	0x033854B8 MOV W10, W8
	0x033854BC UMADDL X8, X8, X25, X31
	0x033854C0 UBFM X8, X8, 0x23, 0x3F
	0x033854C4 MOV W11, W9
	0x033854C8 MADD W9, W8, W26, W10
	0x033854CC ADD W9, W9, 0x30
	0x033854D0 STRH W9, [X21 - 0x2]!
	0x033854D4 SUB W9, W11, 0x1
	0x033854D8 TBZ X11, 0x1F, 0x33854B8
	0x033854DC CMP W10, 0x9
	0x033854E0 B.HI 0x33854B8
	0x033854E4 B 0x3385480
	0x033854E8 CBZ W8, 0x33854F4
	0x033854EC CBNZ W20, 0x33854FC
	0x033854F0 B 0x3385538
	0x033854F4 BL 0x1C16DFC
	0x033854F8 CBZ W20, 0x3385538
	0x033854FC MOVZ W8, 0xCCCD
	0x03385500 MOVN W10, 0x1
	0x03385504 MOVK W8, 0xCCCC0000
	0x03385508 MOVN W9, 0x9
	0x0338550C MOV W12, W10
	0x03385510 UMADDL X10, X20, X8, X31
	0x03385514 MOV W11, W20
	0x03385518 UBFM X20, X10, 0x23, 0x3F
	0x0338551C MADD W10, W20, W9, W11
	0x03385520 ADD W10, W10, 0x30
	0x03385524 STRH W10, [X21 - 0x2]!
	0x03385528 SUB W10, W12, 0x1
	0x0338552C TBZ X12, 0x1F, 0x338550C
	0x03385530 CMP W11, 0x9
	0x03385534 B.HI 0x338550C
	0x03385538 SUB X8, X22, X21
	0x0338553C CMP X8, 0x0
	0x03385540 CINC X8, X8, LT
	0x03385544 UBFM X20, X8, 0x1, 0x3F
	0x03385548 MOV X0, X19
	0x0338554C MOV X1, X31
	0x03385550 STR W20, [X19 + 0x4]
	0x03385554 BL 0x338C3A8
	0x03385558 CMP W20, 0x1
	0x0338555C B.MI 0x3385574
	0x03385560 LDRH W8, [X21], #0x2
	0x03385564 SUB W20, W20, 0x1
	0x03385568 CMP W20, 0x0
	0x0338556C STRH W8, [X0], #0x2
	0x03385570 B.GT 0x3385560
	0x03385574 LDP X20, X19, [X31 + 0x40]
	0x03385578 LDP X22, X21, [X31 + 0x30]
	0x0338557C LDP X24, X23, [X31 + 0x20]
	0x03385580 LDP X26, X25, [X31 + 0x10]
	0x03385584 STRH W31, [X0]
	0x03385588 LDR X30, [X31], #0x50
	0x0338558C RET
	0x03385590 STP X29, X30, [X31 - 0x60]!
	0x03385594 STP X28, X27, [X31 + 0x10]
	0x03385598 STP X26, X25, [X31 + 0x20]
	0x0338559C STP X24, X23, [X31 + 0x30]
	0x033855A0 STP X22, X21, [X31 + 0x40]
	0x033855A4 STP X20, X19, [X31 + 0x50]
	0x033855A8 ADD X29, X31, 0x0
	0x033855AC SUB X31, X31, 0xE0
	0x033855B0 MRS X28, 0xC000
	0x033855B4 LDR X8, [X28 + 0x28]
	0x033855B8 ADRP X26, 0x1057000
	0x033855BC ADRP X19, 0xDA3000
	0x033855C0 MOV X20, X6
	0x033855C4 STUR X8, [X29 - 0x18]
	0x033855C8 LDRB W8, [X26 + 0xFC5]
	0x033855CC LDR X19, [X19 + 0x78]
	0x033855D0 MOV X21, X5
	0x033855D4 MOV X27, X4
	0x033855D8 MOV X25, X3
	0x033855DC MOV X22, X2
	0x033855E0 MOV X23, X1
	0x033855E4 MOV X24, X0
	0x033855E8 SUB X9, X29, 0xA0
	0x033855EC TBNZ X8, 0x0, 0x3385620
	0x033855F0 ADRP X0, 0xDA3000
	0x033855F4 LDR X0, [X0 + 0x78]
	0x033855F8 BL 0x1C16CF4
	0x033855FC ADRP X0, 0xD9D000
	0x03385600 LDR X0, [X0 + 0x28]
	0x03385604 BL 0x1C16CF4
	0x03385608 ADRP X0, 0xD9D000
	0x0338560C LDR X0, [X0 + 0x4E8]
	0x03385610 BL 0x1C16CF4
	0x03385614 SUB X9, X29, 0xA0
	0x03385618 MOVZ W8, 0x1
	0x0338561C STRB W8, [X26 + 0xFC5]
	0x03385620 LDR X0, [X19]
	0x03385624 MOVI V0.2D, 0x0
	0x03385628 STUR W31, [X29 - 0xA4]
	0x0338562C STUR V0, [X9 + 0x6A]
	0x03385630 STP V0, V0, [X29 - 0x50]
	0x03385634 STP V0, V0, [X29 - 0x70]
	0x03385638 STP V0, V0, [X29 - 0x90]
	0x0338563C STUR V0, [X29 - 0xA0]
	0x03385640 STP V0, V0, [X29 - 0xD0]
	0x03385644 LDR W8, [X0 + 0xE0]
	0x03385648 CBZ W22, 0x33856E0
	0x0338564C CBNZ W8, 0x3385654
	0x03385650 BL 0x1C16DFC
	0x03385654 SUB X2, X29, 0xA4
	0x03385658 MOV X0, X23
	0x0338565C MOV X1, X22
	0x03385660 BL 0x338071C
	0x03385664 MOV W26, W0
	0x03385668 MOV X0, X25
	0x0338566C MOV X1, X31
	0x03385670 BL 0x333ACEC
	0x03385674 LDUR W25, [X29 - 0xA4]
	0x03385678 MOVZ W8, 0xFFDF
	0x0338567C AND W10, W26, W8, 0x0
	0x03385680 CMP W10, 0x47
	0x03385684 CSET W8, EQ
	0x03385688 CMP W25, 0x1
	0x0338568C CSET W9, LT
	0x03385690 CMP W10, 0x44
	0x03385694 B.EQ 0x33856F4
	0x03385698 AND W8, W8, W9, 0x0
	0x0338569C CBNZ W8, 0x33856F4
	0x033856A0 AND W8, W26, 0xFFFFFFDF
	0x033856A4 AND W8, W8, 0xFFFF
	0x033856A8 CMP W8, 0x58
	0x033856AC B.NE 0x3385750

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0x1058000
	013 Move W8, [X22+4047]
	014 Move X19, X2
	015 Move W20, W1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xD6F000
	022 Move X0, [X0+1448]
	023 Call 0x1C17CF4
	024 Move X0, 0xDA4000
	025 Move X0, [X0+120]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+4047], W8
	029 Move W8, 0x967F
	030 NotImplemented "Instruction MOVK not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Subtract X22, X31, X21
	033 NotImplemented "Instruction CSINC not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X9, 0x3FFF
	036 NotImplemented "Instruction MOVK not yet implemented."
	037 NotImplemented "Instruction MOVK not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add X8, X9, 1
	040 NotImplemented "Instruction UDIV not yet implemented."
	041 Move W20, 15
	042 Move W20, 1
	043 Move X9, X22
	044 Add X8, X8, 1
	045 NotImplemented "Instruction UDIV not yet implemented."
	046 Move W20, 8
	047 Move X8, 0xD6F000
	048 Move X8, [X8+1448]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add W20, W20, 1
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add W20, W20, 2
	054 Move W10, W9
	055 ShiftRight W10, 4
	056 And W10, W10, 0x7FFFFFFF
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add W20, W20, 3
	059 Move W10, W9
	060 ShiftRight W10, 5
	061 And W10, W10, 0x7FFFFFFF
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Add W20, W20, 4
	064 Move W10, 0x423F
	065 NotImplemented "Instruction MOVK not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Add W20, W20, 5
	068 Add W20, W20, 6
	069 Move X0, [X8]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Compare X19, 0
	075 JumpIfEqual {191}
	076 Move W8, [X19+16]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 NotImplemented "Instruction CSEL not yet implemented."
	079 Move X1, X31
	080 Add W21, W8, W9
	081 Move W0, W21
	082 Call String.FastAllocateString, X0
	083 Move X20, X0
	084 Compare X0, 0
	085 JumpIfEqual {89}
	086 Move X0, X31
	087 Call RuntimeHelpers.get_OffsetToStringData
	088 Add X8, X20, W0
	089 Move X8, X20
	090 Move X25, 0xDA4000
	091 Move X25, [X25+120]
	092 Move W26, 0xCA00
	093 Move W27, 0xCCCD
	094 NotImplemented "Instruction MOVK not yet implemented."
	095 Add X24, X8, W21
	096 Subtract W21, W23, 2
	097 NotImplemented "Instruction MOVK not yet implemented."
	098 Move TEMP, 9
	099 Not TEMP
	100 Move W28, TEMP
	101 Move X0, [X25]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {108}
	105 Call 0x1C17DFC
	106 Move X0, [X25]
	107 Move W8, [X0+224]
	108 Move X9, X22
	109 ShiftRight X9, 32
	110 And X9, X9, 0x7FFFFFFF
	111 Compare X9, 0
	112 JumpIfEqual {137}
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Move X8, X22
	117 NotImplemented "Instruction UDIV not yet implemented."
	118 NotImplemented "Instruction MSUB not yet implemented."
	119 Move W9, 7
	120 Move W10, W8
	121 NotImplemented "Instruction UMADDL not yet implemented."
	122 Move X8, X8
	123 ShiftRight X8, 35
	124 And X8, X8, 0x7FFFFFFF
	125 Move W11, W9
	126 NotImplemented "Instruction MADD not yet implemented."
	127 Add W9, W9, 48
	128 NotImplemented "Instruction STRH not yet implemented."
	129 Subtract W9, W11, 1
	130 Move TEMP, X11
	131 And TEMP, TEMP, -2147483648
	132 Compare TEMP, -2147483648
	133 JumpIfNotEqual {120}
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Subtract W23, W23, 9
	136 Subtract W21, W21, 9
	137 Compare W8, 0
	138 JumpIfEqual {141}
	139 Compare W22, 0
	140 JumpIfEqual {144}
	141 Call 0x1C17DFC
	142 Compare W22, 0
	143 JumpIfNotEqual {149}
	144 Subtract W8, W23, 1
	145 Move TEMP, X8
	146 And TEMP, TEMP, -2147483648
	147 Compare TEMP, -2147483648
	148 JumpIfEqual {169}
	149 Move W8, 0xCCCD
	150 NotImplemented "Instruction MOVK not yet implemented."
	151 Move TEMP, 9
	152 Not TEMP
	153 Move W9, TEMP
	154 NotImplemented "Instruction UMADDL not yet implemented."
	155 Move W10, W22
	156 Move X22, X12
	157 ShiftRight X22, 35
	158 And X22, X22, 0x7FFFFFFF
	159 NotImplemented "Instruction MADD not yet implemented."
	160 Add W12, W12, 48
	161 Move W11, W21
	162 NotImplemented "Instruction STRH not yet implemented."
	163 Subtract W21, W21, 1
	164 Move TEMP, X11
	165 And TEMP, TEMP, -2147483648
	166 Compare TEMP, -2147483648
	167 JumpIfNotEqual {154}
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move W21, [X19+16]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Subtract W21, W21, 1
	172 Move X0, X19
	173 Move W1, W21
	174 Move X2, X31
	175 Call String.get_Chars, X0, X1
	176 NotImplemented "Instruction CMP not yet implemented."
	177 NotImplemented "Instruction STRH not yet implemented."
	178 Move X0, X20
	179 Move X20, [X31+80]
	180 Move X19, [X31+88]
	181 Move X22, [X31+64]
	182 Move X21, [X31+72]
	183 Move X24, [X31+48]
	184 Move X23, [X31+56]
	185 Move X26, [X31+32]
	186 Move X25, [X31+40]
	187 Move X28, [X31+16]
	188 Move X27, [X31+24]
	189 Move X30, [X31+96]
	190 Return X0
	191 Call 0x1C17F20

Method: System.Boolean TryNegativeInt64ToDecStr(System.Int64 input, System.Int32 digits, System.String sNegative, System.Span`1<System.Char> destination, out System.Int32 charsWritten)

Disassembly:
	0x03385CCC MOV W1, W24
	0x03385CD0 MOV X2, X31
	0x03385CD4 BL 0x3222A1C
	0x03385CD8 AND W8, W0, 0xFFFF
	0x03385CDC CMP W8, 0x2D
	0x03385CE0 B.EQ 0x3385D34
	0x03385CE4 CMP W8, 0x24
	0x03385CE8 B.EQ 0x3385D44
	0x03385CEC CMP W8, 0x23
	0x03385CF0 B.NE 0x3385DC4
	0x03385CF4 ADRP X8, 0xDA3000
	0x03385CF8 LDR X8, [X8 + 0x78]
	0x03385CFC LDR X28, [X19 + 0x18]
	0x03385D00 LDP X26, X27, [X19 + 0x48]
	0x03385D04 LDR X0, [X8]
	0x03385D08 LDR W8, [X0 + 0xE0]
	0x03385D0C CBNZ W8, 0x3385D14
	0x03385D10 BL 0x1C16DFC
	0x03385D14 MOV X0, X22
	0x03385D18 MOV X1, X21
	0x03385D1C MOV W3, W20
	0x03385D20 MOV X5, X28
	0x03385D24 MOV X6, X27
	0x03385D28 MOV X7, X26
	0x03385D2C BL 0x3385E58
	0x03385D30 B 0x3385E20
	0x03385D34 LDRB W8, [X29 + 0x4]
	0x03385D38 LDR X26, [X19 + 0x30]
	0x03385D3C CBNZ W8, 0x3385D64
	0x03385D40 B 0x3385D50
	0x03385D44 LDRB W8, [X29 + 0x4]
	0x03385D48 LDR X26, [X19 + 0x58]
	0x03385D4C CBNZ W8, 0x3385D64
	0x03385D50 ADRP X0, 0xD9D000
	0x03385D54 LDR X0, [X0 + 0x588]
	0x03385D58 BL 0x1C16CF4
	0x03385D5C MOVZ W8, 0x1
	0x03385D60 STRB W8, [X29 + 0x4]
	0x03385D64 CBZ X26, 0x3385E50
	0x03385D68 LDR W8, [X26 + 0x10]
	0x03385D6C CMP W8, 0x1
	0x03385D70 B.NE 0x3385DB0
	0x03385D74 LDRSW X27, [X22 + 0x18]
	0x03385D78 LDR W8, [X22 + 0x10]
	0x03385D7C CMP W27, W8
	0x03385D80 B.GE 0x3385DB0
	0x03385D84 CMP W27, W8
	0x03385D88 B.CS 0x3385E54
	0x03385D8C LDR X28, [X22 + 0x8]
	0x03385D90 MOV X0, X26
	0x03385D94 MOV W1, W31
	0x03385D98 MOV X2, X31
	0x03385D9C BL 0x3222A1C
	0x03385DA0 ADD W8, W27, 0x1
	0x03385DA4 STRH W0, [X28, X27, LSL #1]
	0x03385DA8 STR W8, [X22 + 0x18]
	0x03385DAC B 0x3385E20
	0x03385DB0 MOV X0, X22
	0x03385DB4 MOV X1, X26
	0x03385DB8 MOV X2, X31
	0x03385DBC BL 0x3241020
	0x03385DC0 B 0x3385E20
	0x03385DC4 LDRB W8, [X25 + 0x4E2]
	0x03385DC8 MOV W26, W0
	0x03385DCC CBNZ W8, 0x3385DE4
	0x03385DD0 ADRP X0, 0xD9D000
	0x03385DD4 LDR X0, [X0 + 0x588]
	0x03385DD8 BL 0x1C16CF4
	0x03385DDC MOVZ W8, 0x1
	0x03385DE0 STRB W8, [X25 + 0x4E2]
	0x03385DE4 LDRSW X8, [X22 + 0x18]
	0x03385DE8 LDR W9, [X22 + 0x10]
	0x03385DEC CMP W8, W9
	0x03385DF0 B.GE 0x3385E10
	0x03385DF4 CMP W8, W9
	0x03385DF8 B.CS 0x3385E54
	0x03385DFC LDR X9, [X22 + 0x8]
	0x03385E00 ADD W10, W8, 0x1
	0x03385E04 STRH W26, [X9, X8, LSL #1]
	0x03385E08 STR W10, [X22 + 0x18]
	0x03385E0C B 0x3385E20
	0x03385E10 MOV X0, X22
	0x03385E14 MOV W1, W26
	0x03385E18 MOV X2, X31
	0x03385E1C BL 0x3240EF4
	0x03385E20 LDR W8, [X23 + 0x10]
	0x03385E24 ADD W24, W24, 0x1
	0x03385E28 CMP W24, W8
	0x03385E2C B.LT 0x3385CC8
	0x03385E30 LDP X20, X19, [X31 + 0x60]
	0x03385E34 LDP X22, X21, [X31 + 0x50]
	0x03385E38 LDP X24, X23, [X31 + 0x40]
	0x03385E3C LDP X26, X25, [X31 + 0x30]
	0x03385E40 LDP X28, X27, [X31 + 0x20]
	0x03385E44 LDP X29, X30, [X31 + 0x10]
	0x03385E48 ADD X31, X31, 0x70
	0x03385E4C RET
	0x03385E50 BL 0x1C16F20
	0x03385E54 BL 0x1C16F28
	0x03385E58 SUB X31, X31, 0x70
	0x03385E5C STP X29, X30, [X31 + 0x10]
	0x03385E60 STP X28, X27, [X31 + 0x20]
	0x03385E64 STP X26, X25, [X31 + 0x30]
	0x03385E68 STP X24, X23, [X31 + 0x40]
	0x03385E6C STP X22, X21, [X31 + 0x50]
	0x03385E70 STP X20, X19, [X31 + 0x60]
	0x03385E74 ADRP X21, 0x1057000
	0x03385E78 LDRB W8, [X21 + 0xFDA]
	0x03385E7C MOV X23, X7
	0x03385E80 MOV X28, X6
	0x03385E84 MOV X24, X5
	0x03385E88 MOV W27, W3
	0x03385E8C MOV X20, X1
	0x03385E90 MOV X19, X0
	0x03385E94 TBNZ X8, 0x0, 0x3385EB8
	0x03385E98 ADRP X0, 0xD6E000
	0x03385E9C LDR X0, [X0 + 0x5A8]
	0x03385EA0 BL 0x1C16CF4
	0x03385EA4 ADRP X0, 0xD9D000
	0x03385EA8 LDR X0, [X0 + 0x2C8]
	0x03385EAC BL 0x1C16CF4
	0x03385EB0 MOVZ W8, 0x1
	0x03385EB4 STRB W8, [X21 + 0xFDA]
	0x03385EB8 LDR W26, [X20 + 0x4]
	0x03385EBC MOV X0, X20
	0x03385EC0 MOV X1, X31
	0x03385EC4 BL 0x338C3A8
	0x03385EC8 CMP W26, 0x1
	0x03385ECC MOV X20, X0
	0x03385ED0 B.LT 0x3385F7C
	0x03385ED4 CBZ X24, 0x3385FD8
	0x03385ED8 LDR X8, [X24 + 0x18]
	0x03385EDC STR W27, [X31 + 0xC]
	0x03385EE0 STR X28, [X31]
	0x03385EE4 CBZ X8, 0x338607C
	0x03385EE8 CBZ W8, 0x3386380
	0x03385EEC LDR W9, [X24 + 0x20]
	0x03385EF0 MOV W10, W31
	0x03385EF4 SUB W11, W8, 0x1
	0x03385EF8 MOV W25, W26
	0x03385EFC MOV W13, W9
	0x03385F00 MOV W12, W9
	0x03385F04 CMP W26, W12
	0x03385F08 B.LE 0x3385FCC
	0x03385F0C CMP W10, W8
	0x03385F10 B.CS 0x3386380
	0x03385F14 CBZ W13, 0x3385FCC
	0x03385F18 CBZ X23, 0x3386384
	0x03385F1C CMP W10, W11
	0x03385F20 CINC W10, W10, LT
	0x03385F24 CMP W10, W8
	0x03385F28 B.CS 0x3386380
	0x03385F2C ADD X13, X24, W10, 0x2, SXTW
	0x03385F30 LDR W14, [X23 + 0x10]
	0x03385F34 LDR W13, [X13 + 0x20]
	0x03385F38 ADD W25, W14, W25
	0x03385F3C ADD W12, W13, W12
	0x03385F40 ORR W14, W12, W25, 0x0
	0x03385F44 TBZ X14, 0x1F, 0x3385F04
	0x03385F48 ADRP X0, 0xD76000
	0x03385F4C LDR X0, [X0 + 0x760]
	0x03385F50 BL 0x1C16D08
	0x03385F54 BL 0x1C16F10
	0x03385F58 MOV X1, X31
	0x03385F5C MOV X19, X0
	0x03385F60 BL 0x3315FB8
	0x03385F64 ADRP X0, 0xDA5000
	0x03385F68 LDR X0, [X0 + 0xFD0]
	0x03385F6C BL 0x1C16D08
	0x03385F70 MOV X1, X0
	0x03385F74 MOV X0, X19
	0x03385F78 BL 0x1C16DEC
	0x03385F7C ADRP X21, 0x1057000
	0x03385F80 LDRB W8, [X21 + 0x4E2]
	0x03385F84 CBNZ W8, 0x3385F9C
	0x03385F88 ADRP X0, 0xD9D000
	0x03385F8C LDR X0, [X0 + 0x588]
	0x03385F90 BL 0x1C16CF4
	0x03385F94 MOVZ W8, 0x1

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X25, 0x1058000
	014 Move W8, [X25+4048]
	015 Move X21, X5
	016 Move X19, X4
	017 Move X22, X3
	018 Move X20, X2
	019 Move W23, W1
	020 Move X24, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {39}
	025 Move X0, 0xD6F000
	026 Move X0, [X0+1448]
	027 Call 0x1C17CF4
	028 Move X0, 0xD9E000
	029 Move X0, [X0+712]
	030 Call 0x1C17CF4
	031 Move X0, 0xDA4000
	032 Move X0, [X0+120]
	033 Call 0x1C17CF4
	034 Move X0, 0xD9E000
	035 Move X0, [X0+1416]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X25+4048], W8
	039 Move W8, 0x967F
	040 NotImplemented "Instruction MOVK not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract X24, X31, X24
	043 NotImplemented "Instruction CSINC not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X9, 0x3FFF
	046 NotImplemented "Instruction MOVK not yet implemented."
	047 NotImplemented "Instruction MOVK not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Add X8, X9, 1
	050 NotImplemented "Instruction UDIV not yet implemented."
	051 Move W25, 15
	052 Move W25, 1
	053 Move X9, X24
	054 Add X8, X8, 1
	055 NotImplemented "Instruction UDIV not yet implemented."
	056 Move W25, 8
	057 Move X8, 0xD6F000
	058 Move X8, [X8+1448]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add W25, W25, 1
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Add W25, W25, 2
	064 Move W10, W9
	065 ShiftRight W10, 4
	066 And W10, W10, 0x7FFFFFFF
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add W25, W25, 3
	069 Move W10, W9
	070 ShiftRight W10, 5
	071 And W10, W10, 0x7FFFFFFF
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Add W25, W25, 4
	074 Move W10, 0x423F
	075 NotImplemented "Instruction MOVK not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Add W25, W25, 5
	078 Add W25, W25, 6
	079 Move X0, [X8]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Compare X20, 0
	085 JumpIfEqual {202}
	086 Move W8, [X20+16]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 NotImplemented "Instruction CSEL not yet implemented."
	089 Add W25, W8, W9
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move [X21], W31
	092 Move [X21], W25
	093 Move X8, 0xD9E000
	094 Move X8, [X8+712]
	095 Move W26, 0xCA00
	096 Move X0, X22
	097 Move X1, X19
	098 Move X2, [X8]
	099 NotImplemented "Instruction MOVK not yet implemented."
	100 Call MemoryMarshal.GetReference, X0
	101 Move X27, 0xDA4000
	102 Move X27, [X27+120]
	103 Move W28, 0xCCCD
	104 Add X22, X0, W25
	105 Subtract W21, W23, 2
	106 NotImplemented "Instruction MOVK not yet implemented."
	107 Move TEMP, 9
	108 Not TEMP
	109 Move W29, TEMP
	110 Move X0, [X27]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {117}
	114 Call 0x1C17DFC
	115 Move X0, [X27]
	116 Move W8, [X0+224]
	117 Move X9, X24
	118 ShiftRight X9, 32
	119 And X9, X9, 0x7FFFFFFF
	120 Compare X9, 0
	121 JumpIfEqual {146}
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move X8, X24
	126 NotImplemented "Instruction UDIV not yet implemented."
	127 NotImplemented "Instruction MSUB not yet implemented."
	128 Move W9, 7
	129 Move W10, W8
	130 NotImplemented "Instruction UMADDL not yet implemented."
	131 Move X8, X8
	132 ShiftRight X8, 35
	133 And X8, X8, 0x7FFFFFFF
	134 Move W11, W9
	135 NotImplemented "Instruction MADD not yet implemented."
	136 Add W9, W9, 48
	137 NotImplemented "Instruction STRH not yet implemented."
	138 Subtract W9, W11, 1
	139 Move TEMP, X11
	140 And TEMP, TEMP, -2147483648
	141 Compare TEMP, -2147483648
	142 JumpIfNotEqual {129}
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Subtract W23, W23, 9
	145 Subtract W21, W21, 9
	146 Compare W8, 0
	147 JumpIfEqual {150}
	148 Compare W24, 0
	149 JumpIfEqual {153}
	150 Call 0x1C17DFC
	151 Compare W24, 0
	152 JumpIfNotEqual {158}
	153 Subtract W8, W23, 1
	154 Move TEMP, X8
	155 And TEMP, TEMP, -2147483648
	156 Compare TEMP, -2147483648
	157 JumpIfEqual {178}
	158 Move W8, 0xCCCD
	159 NotImplemented "Instruction MOVK not yet implemented."
	160 Move TEMP, 9
	161 Not TEMP
	162 Move W9, TEMP
	163 NotImplemented "Instruction UMADDL not yet implemented."
	164 Move W10, W24
	165 Move X24, X12
	166 ShiftRight X24, 35
	167 And X24, X24, 0x7FFFFFFF
	168 NotImplemented "Instruction MADD not yet implemented."
	169 Add W12, W12, 48
	170 Move W11, W21
	171 NotImplemented "Instruction STRH not yet implemented."
	172 Subtract W21, W21, 1
	173 Move TEMP, X11
	174 And TEMP, TEMP, -2147483648
	175 Compare TEMP, -2147483648
	176 JumpIfNotEqual {163}
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move W21, [X20+16]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Subtract W21, W21, 1
	181 Move X0, X20
	182 Move W1, W21
	183 Move X2, X31
	184 Call String.get_Chars, X0, X1
	185 NotImplemented "Instruction CMP not yet implemented."
	186 NotImplemented "Instruction STRH not yet implemented."
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move X20, [X31+80]
	189 Move X19, [X31+88]
	190 Move X22, [X31+64]
	191 Move X21, [X31+72]
	192 Move X24, [X31+48]
	193 Move X23, [X31+56]
	194 Move X26, [X31+32]
	195 Move X25, [X31+40]
	196 Move X28, [X31+16]
	197 Move X27, [X31+24]
	198 NotImplemented "Instruction CSET not yet implemented."
	199 Move X29, [X31+96]
	200 Move X30, [X31+104]
	201 Return X0
	202 Call 0x1C17F20

Method: System.String Int64ToHexStr(System.Int64 value, System.Char hexBase, System.Int32 digits)

Disassembly:
	0x033856B0 LDR X0, [X19]
	0x033856B4 LDR W8, [X0 + 0xE0]
	0x033856B8 CBNZ W8, 0x33856C0
	0x033856BC BL 0x1C16DFC
	0x033856C0 SUB W1, W26, 0x21
	0x033856C4 MOV X0, X24
	0x033856C8 MOV W2, W25
	0x033856CC MOV X3, X27
	0x033856D0 MOV X4, X21
	0x033856D4 MOV X5, X20
	0x033856D8 BL 0x3384F98
	0x033856DC B 0x338571C
	0x033856E0 CBNZ W8, 0x33856E8
	0x033856E4 BL 0x1C16DFC
	0x033856E8 MOVN W1, 0x0
	0x033856EC MOV X0, X24
	0x033856F0 B 0x338570C
	0x033856F4 LDR X0, [X19]
	0x033856F8 LDR W8, [X0 + 0xE0]
	0x033856FC CBNZ W8, 0x3385704
	0x03385700 BL 0x1C16DFC
	0x03385704 MOV X0, X24
	0x03385708 MOV W1, W25
	0x0338570C MOV X2, X27
	0x03385710 MOV X3, X21
	0x03385714 MOV X4, X20
	0x03385718 BL 0x3384A48
	0x0338571C LDR X8, [X28 + 0x28]
	0x03385720 LDUR X9, [X29 - 0x18]
	0x03385724 CMP X8, X9
	0x03385728 B.NE 0x3385828
	0x0338572C AND W0, W0, 0x1
	0x03385730 ADD X31, X29, 0x0
	0x03385734 LDP X20, X19, [X31 + 0x50]
	0x03385738 LDP X22, X21, [X31 + 0x40]
	0x0338573C LDP X24, X23, [X31 + 0x30]
	0x03385740 LDP X26, X25, [X31 + 0x20]
	0x03385744 LDP X28, X27, [X31 + 0x10]
	0x03385748 LDP X29, X30, [X31], #0x60
	0x0338574C RET
	0x03385750 STUR X0, [X29 - 0xD8]
	0x03385754 LDR X0, [X19]
	0x03385758 MOVI V0.2D, 0x0
	0x0338575C SUB X8, X29, 0xA0
	0x03385760 STUR V0, [X8 + 0x6A]
	0x03385764 STP V0, V0, [X29 - 0x50]
	0x03385768 STP V0, V0, [X29 - 0x70]
	0x0338576C STP V0, V0, [X29 - 0x90]
	0x03385770 STUR V0, [X29 - 0xA0]
	0x03385774 LDR W8, [X0 + 0xE0]
	0x03385778 CBNZ W8, 0x3385780
	0x0338577C BL 0x1C16DFC
	0x03385780 SUB X1, X29, 0xA0
	0x03385784 MOV X0, X24
	0x03385788 BL 0x33853FC
	0x0338578C ADD X8, X31, 0x0
	0x03385790 SUB X1, X8, 0x40
	0x03385794 ADD X31, X1, 0x0
	0x03385798 MOVI V0.2D, 0x0
	0x0338579C SUB X0, X29, 0xD0
	0x033857A0 MOVZ W2, 0x20
	0x033857A4 MOV X3, X31
	0x033857A8 STP V0, V0, [X8 - 0x20]
	0x033857AC STP V0, V0, [X8 - 0x40]
	0x033857B0 BL 0x3240C88
	0x033857B4 LDR X0, [X19]
	0x033857B8 ANDS W31, W26, 0xFFFF
	0x033857BC LDR W8, [X0 + 0xE0]
	0x033857C0 B.EQ 0x33857EC
	0x033857C4 CBNZ W8, 0x33857CC
	0x033857C8 BL 0x1C16DFC
	0x033857CC LDUR X4, [X29 - 0xD8]
	0x033857D0 SUB X0, X29, 0xD0
	0x033857D4 SUB X1, X29, 0xA0
	0x033857D8 MOV W2, W26
	0x033857DC MOV W3, W25
	0x033857E0 MOV W5, W31
	0x033857E4 BL 0x3380A9C
	0x033857E8 B 0x338580C
	0x033857EC CBNZ W8, 0x33857F4
	0x033857F0 BL 0x1C16DFC
	0x033857F4 LDUR X4, [X29 - 0xD8]
	0x033857F8 SUB X0, X29, 0xD0
	0x033857FC SUB X1, X29, 0xA0
	0x03385800 MOV X2, X23
	0x03385804 MOV X3, X22
	0x03385808 BL 0x338102C
	0x0338580C SUB X0, X29, 0xD0
	0x03385810 MOV X1, X27
	0x03385814 MOV X2, X21
	0x03385818 MOV X3, X20
	0x0338581C MOV X4, X31
	0x03385820 BL 0x3240D90
	0x03385824 B 0x338571C
	0x03385828 BL 0x3EB1B20
	0x0338582C STP X30, X21, [X31 - 0x20]!
	0x03385830 STP X20, X19, [X31 + 0x10]
	0x03385834 ADRP X21, 0x1057000
	0x03385838 LDRB W8, [X21 + 0xFC6]
	0x0338583C MOV X19, X1
	0x03385840 MOV W20, W0
	0x03385844 TBNZ X8, 0x0, 0x338585C
	0x03385848 ADRP X0, 0xDA3000
	0x0338584C LDR X0, [X0 + 0x78]
	0x03385850 BL 0x1C16CF4
	0x03385854 MOVZ W8, 0x1
	0x03385858 STRB W8, [X21 + 0xFC6]
	0x0338585C ADRP X21, 0xDA3000
	0x03385860 LDR X21, [X21 + 0x78]
	0x03385864 MOVZ W8, 0xA
	0x03385868 STR W8, [X19]
	0x0338586C TBNZ X20, 0x1F, 0x3385884
	0x03385870 MOV X0, X19
	0x03385874 MOV W1, W31
	0x03385878 MOV X2, X31
	0x0338587C BL 0x338C39C
	0x03385880 B 0x3385898
	0x03385884 MOVZ W1, 0x1
	0x03385888 MOV X0, X19
	0x0338588C MOV X2, X31
	0x03385890 BL 0x338C39C
	0x03385894 SUB W20, W31, W20
	0x03385898 MOV X0, X19
	0x0338589C MOV X1, X31

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x1058000
	011 Move X25, 0xD6F000
	012 Move W8, [X21+4049]
	013 Move X25, [X25+1448]
	014 Move W22, W2
	015 Move W19, W1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xD6F000
	022 Move X0, [X0+1448]
	023 Call 0x1C17CF4
	024 Move X0, 0xDA4000
	025 Move X0, [X0+120]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+4049], W8
	029 Move X24, X20
	030 ShiftRight X24, 32
	031 And X24, X24, 0x7FFFFFFF
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W8, 9
	034 NotImplemented "Instruction CSEL not yet implemented."
	035 Move X0, [X25]
	036 NotImplemented "Instruction CSINC not yet implemented."
	037 Move X11, X9
	038 ShiftRight X11, 16
	039 And X11, X11, 0x7FFFFFFF
	040 Or W10, W8, 4
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CSEL not yet implemented."
	043 NotImplemented "Instruction CSEL not yet implemented."
	044 Or W11, W8, 2
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W10, [X0+224]
	047 NotImplemented "Instruction CSEL not yet implemented."
	048 Move X11, X9
	049 ShiftRight X11, 8
	050 And X11, X11, 0x7FFFFFFF
	051 NotImplemented "Instruction CSEL not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CINC not yet implemented."
	054 Compare W10, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X26, 0xDA4000
	058 Move X26, [X26+120]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CSEL not yet implemented."
	061 Move W0, W23
	062 Move X1, X31
	063 Call String.FastAllocateString, X0
	064 Move X21, X0
	065 Compare X0, 0
	066 JumpIfEqual {70}
	067 Move X0, X31
	068 Call RuntimeHelpers.get_OffsetToStringData
	069 Add X8, X21, W0
	070 Move X8, X21
	071 Move X0, [X26]
	072 Add X23, X8, W23
	073 Move W9, [X0+224]
	074 Compare W9, 0
	075 JumpIfEqual {78}
	076 Compare W24, 0
	077 JumpIfNotEqual {92}
	078 Call 0x1C17DFC
	079 Move X0, [X26]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfEqual {89}
	083 NotImplemented "Instruction CMP not yet implemented."
	084 NotImplemented "Instruction CSEL not yet implemented."
	085 NotImplemented "Instruction CSEL not yet implemented."
	086 Compare W24, 0
	087 JumpIfNotEqual {92}
	088 Move X21, X8
	089 Call 0x1C17DFC
	090 Compare W24, 0
	091 JumpIfEqual {128}
	092 Move W9, 6
	093 Move W8, 48
	094 Move W10, W9
	095 And W9, W20, 15
	096 NotImplemented "Instruction CMP not yet implemented."
	097 NotImplemented "Instruction CSEL not yet implemented."
	098 Add W9, W11, W9
	099 Move W20, W20
	100 ShiftRight W20, 4
	101 And W20, W20, 0x7FFFFFFF
	102 NotImplemented "Instruction STRH not yet implemented."
	103 Subtract W9, W10, 1
	104 Move TEMP, X10
	105 And TEMP, TEMP, -2147483648
	106 Compare TEMP, -2147483648
	107 JumpIfNotEqual {94}
	108 Compare W20, 0
	109 JumpIfNotEqual {94}
	110 Subtract W9, W22, 10
	111 Move W8, 48
	112 Move W10, W9
	113 And W9, W24, 15
	114 NotImplemented "Instruction CMP not yet implemented."
	115 NotImplemented "Instruction CSEL not yet implemented."
	116 Add W9, W11, W9
	117 Move W24, W24
	118 ShiftRight W24, 4
	119 And W24, W24, 0x7FFFFFFF
	120 NotImplemented "Instruction STRH not yet implemented."
	121 Subtract W9, W10, 1
	122 Move TEMP, X10
	123 And TEMP, TEMP, -2147483648
	124 Compare TEMP, -2147483648
	125 JumpIfNotEqual {112}
	126 Compare W24, 0
	127 JumpIfNotEqual {112}
	128 Move X0, [X25]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 NotImplemented "Instruction CMP not yet implemented."
	134 NotImplemented "Instruction CSINC not yet implemented."
	135 Subtract W9, W8, 2
	136 Move W8, 48
	137 Move W10, W9
	138 And W9, W20, 15
	139 NotImplemented "Instruction CMP not yet implemented."
	140 NotImplemented "Instruction CSEL not yet implemented."
	141 Add W9, W11, W9
	142 Move W20, W20
	143 ShiftRight W20, 4
	144 And W20, W20, 0x7FFFFFFF
	145 NotImplemented "Instruction STRH not yet implemented."
	146 Subtract W9, W10, 1
	147 Move TEMP, X10
	148 And TEMP, TEMP, -2147483648
	149 Compare TEMP, -2147483648
	150 JumpIfNotEqual {137}
	151 Compare W20, 0
	152 JumpIfNotEqual {137}
	153 Move X0, X21
	154 Move X20, [X31+64]
	155 Move X19, [X31+72]
	156 Move X22, [X31+48]
	157 Move X21, [X31+56]
	158 Move X24, [X31+32]
	159 Move X23, [X31+40]
	160 Move X26, [X31+16]
	161 Move X25, [X31+24]
	162 Move X30, [X31+80]
	163 Return X0

Method: System.Boolean TryInt64ToHexStr(System.Int64 value, System.Char hexBase, System.Int32 digits, System.Span`1<System.Char> destination, out System.Int32 charsWritten)

Disassembly:
	0x03385F98 STRB W8, [X21 + 0x4E2]
	0x03385F9C LDRSW X8, [X19 + 0x18]
	0x03385FA0 LDR W9, [X19 + 0x10]
	0x03385FA4 CMP W8, W9
	0x03385FA8 B.GE 0x3386068
	0x03385FAC CMP W8, W9
	0x03385FB0 B.CS 0x3386380
	0x03385FB4 LDR X9, [X19 + 0x8]
	0x03385FB8 MOVZ W10, 0x30
	0x03385FBC ADD W11, W8, 0x1
	0x03385FC0 STRH W10, [X9, X8, LSL #1]
	0x03385FC4 STR W11, [X19 + 0x18]
	0x03385FC8 B 0x3386208
	0x03385FCC CMP W12, 0x0
	0x03385FD0 CSEL W27, W31, W9, EQ
	0x03385FD4 B 0x3386084
	0x03385FD8 ADRP X23, 0xD9D000
	0x03385FDC LDR X23, [X23 + 0x588]
	0x03385FE0 ADD W21, W26, 0x1
	0x03385FE4 MOVZ W22, 0x30
	0x03385FE8 ADRP X25, 0x1057000
	0x03385FEC MOVZ W26, 0x1
	0x03385FF0 MOV X8, X20
	0x03385FF4 LDRH W9, [X8], #0x2
	0x03385FF8 LDRB W10, [X25 + 0x4E2]
	0x03385FFC CMP W9, 0x0
	0x03386000 CSEL W24, W22, W9, EQ
	0x03386004 CSEL X20, X20, X8, EQ
	0x03386008 CBNZ W10, 0x3386018
	0x0338600C MOV X0, X23
	0x03386010 BL 0x1C16CF4
	0x03386014 STRB W26, [X25 + 0x4E2]
	0x03386018 LDRSW X8, [X19 + 0x18]
	0x0338601C LDR W9, [X19 + 0x10]
	0x03386020 CMP W8, W9
	0x03386024 B.GE 0x3386044
	0x03386028 CMP W8, W9
	0x0338602C B.CS 0x3386380
	0x03386030 LDR X9, [X19 + 0x8]
	0x03386034 ADD W10, W8, 0x1
	0x03386038 STRH W24, [X9, X8, LSL #1]
	0x0338603C STR W10, [X19 + 0x18]
	0x03386040 B 0x3386054
	0x03386044 MOV X0, X19
	0x03386048 MOV W1, W24
	0x0338604C MOV X2, X31
	0x03386050 BL 0x3240EF4
	0x03386054 SUB W21, W21, 0x1
	0x03386058 CMP W21, 0x1
	0x0338605C B.GT 0x3385FF0
	0x03386060 MOV W26, W31
	0x03386064 B 0x3386208
	0x03386068 MOVZ W1, 0x30
	0x0338606C MOV X0, X19
	0x03386070 MOV X2, X31
	0x03386074 BL 0x3240EF4
	0x03386078 B 0x3386208
	0x0338607C MOV W27, W31
	0x03386080 MOV W25, W26
	0x03386084 MOV X0, X20
	0x03386088 MOV X1, X31
	0x0338608C BL 0x322DCA0
	0x03386090 ADRP X21, 0x1057000
	0x03386094 LDRB W8, [X21 + 0x5]
	0x03386098 CMP W26, W0
	0x0338609C CSEL W28, W26, W0, LT
	0x033860A0 CBNZ W8, 0x33860C4
	0x033860A4 ADRP X0, 0xD9B000
	0x033860A8 LDR X0, [X0 + 0x850]
	0x033860AC BL 0x1C16CF4
	0x033860B0 ADRP X0, 0xD9C000
	0x033860B4 LDR X0, [X0 + 0x588]
	0x033860B8 BL 0x1C16CF4
	0x033860BC MOVZ W8, 0x1
	0x033860C0 STRB W8, [X21 + 0x5]
	0x033860C4 LDR W8, [X19 + 0x10]
	0x033860C8 LDRSW X21, [X19 + 0x18]
	0x033860CC SUB W9, W8, W25
	0x033860D0 CMP W21, W9
	0x033860D4 B.LE 0x33860EC
	0x033860D8 MOV X0, X19
	0x033860DC MOV W1, W25
	0x033860E0 MOV X2, X31
	0x033860E4 BL 0x324114C
	0x033860E8 LDR W8, [X19 + 0x10]
	0x033860EC ADD W9, W21, W25
	0x033860F0 STR W9, [X19 + 0x18]
	0x033860F4 ADRP X9, 0xD9B000
	0x033860F8 LDR X9, [X9 + 0x850]
	0x033860FC SUBS W8, W8, W21
	0x03386100 LDR X22, [X9]
	0x03386104 B.CC 0x3386110
	0x03386108 CMP W8, W25
	0x0338610C B.CS 0x3386118
	0x03386110 MOV X0, X31
	0x03386114 BL 0x339D6EC
	0x03386118 LDR X0, [X22 + 0x20]
	0x0338611C LDR X22, [X19 + 0x8]
	0x03386120 LDRB W8, [X0 + 0x135]
	0x03386124 TBNZ X8, 0x0, 0x338612C
	0x03386128 BL 0x1C5C684
	0x0338612C ADRP X8, 0xD9C000
	0x03386130 LDR X8, [X8 + 0x2C8]
	0x03386134 MOV W25, W25
	0x03386138 ADD X0, X22, X21, 0x1, LSL
	0x0338613C MOV X1, X25
	0x03386140 LDR X2, [X8]
	0x03386144 BL 0x2218CFC
	0x03386148 SUBS W29, W26, 0x1
	0x0338614C B.MI 0x33861FC
	0x03386150 ADD X9, X0, X25, 0x1, LSL
	0x03386154 MOV W22, W31
	0x03386158 MOV W8, W31
	0x0338615C SUB X9, X9, 0x2
	0x03386160 CMP W29, W28
	0x03386164 SUB X21, X9, 0x2
	0x03386168 B.GE 0x3386174
	0x0338616C LDRH W10, [X20, W29, UXTW]
	0x03386170 B 0x3386178
	0x03386174 MOVZ W10, 0x30
	0x03386178 CMP W27, 0x1
	0x0338617C STRH W10, [X9]
	0x03386180 B.LT 0x33861F0
	0x03386184 ADD W8, W8, 0x1
	0x03386188 CBZ W29, 0x33861F0
	0x0338618C CMP W8, W27
	0x03386190 B.NE 0x33861F0
	0x03386194 CBZ X23, 0x3386384
	0x03386198 LDR W25, [X23 + 0x10]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X25, 0x1058000
	012 Move X26, 0xD6F000
	013 Move W8, [X25+4050]
	014 Move X26, [X26+1448]
	015 Move X23, X5
	016 Move X22, X4
	017 Move X24, X3
	018 Move W21, W2
	019 Move W19, W1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {39}
	025 Move X0, 0xD6F000
	026 Move X0, [X0+1448]
	027 Call 0x1C17CF4
	028 Move X0, 0xD9E000
	029 Move X0, [X0+712]
	030 Call 0x1C17CF4
	031 Move X0, 0xDA4000
	032 Move X0, [X0+120]
	033 Call 0x1C17CF4
	034 Move X0, 0xD9E000
	035 Move X0, [X0+1416]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X25+4050], W8
	039 Move X25, X20
	040 ShiftRight X25, 32
	041 And X25, X25, 0x7FFFFFFF
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move W8, 9
	044 NotImplemented "Instruction CSEL not yet implemented."
	045 Move X0, [X26]
	046 NotImplemented "Instruction CSINC not yet implemented."
	047 Move X11, X9
	048 ShiftRight X11, 16
	049 And X11, X11, 0x7FFFFFFF
	050 Or W10, W8, 4
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CSEL not yet implemented."
	053 NotImplemented "Instruction CSEL not yet implemented."
	054 Or W11, W8, 2
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move W10, [X0+224]
	057 NotImplemented "Instruction CSEL not yet implemented."
	058 Move X11, X9
	059 ShiftRight X11, 8
	060 And X11, X11, 0x7FFFFFFF
	061 NotImplemented "Instruction CSEL not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction CINC not yet implemented."
	064 Compare W10, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CSEL not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move W0, W31
	071 Move [X23], W31
	072 Move [X23], W27
	073 Move X8, 0xD9D000
	074 Move X8, [X8+712]
	075 Move X0, X24
	076 Move X1, X22
	077 Move X2, [X8]
	078 Call MemoryMarshal.GetReference, X0
	079 Move X23, 0xDA3000
	080 Move X23, [X23+120]
	081 Add X22, X0, W27
	082 Move X8, [X23]
	083 Move W9, [X8+224]
	084 Compare W9, 0
	085 JumpIfNotEqual {92}
	086 Move X0, X8
	087 Call 0x1C17DFC
	088 Move X0, [X23]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfEqual {130}
	092 Compare W25, 0
	093 JumpIfEqual {133}
	094 Move W9, 6
	095 Move W8, 48
	096 Move W10, W9
	097 And W9, W20, 15
	098 NotImplemented "Instruction CMP not yet implemented."
	099 NotImplemented "Instruction CSEL not yet implemented."
	100 Add W9, W11, W9
	101 Move W20, W20
	102 ShiftRight W20, 4
	103 And W20, W20, 0x7FFFFFFF
	104 NotImplemented "Instruction STRH not yet implemented."
	105 Subtract W9, W10, 1
	106 Move TEMP, X10
	107 And TEMP, TEMP, -2147483648
	108 Compare TEMP, -2147483648
	109 JumpIfNotEqual {96}
	110 Compare W20, 0
	111 JumpIfNotEqual {96}
	112 Subtract W9, W21, 10
	113 Move W8, 48
	114 Move W10, W9
	115 And W9, W25, 15
	116 NotImplemented "Instruction CMP not yet implemented."
	117 NotImplemented "Instruction CSEL not yet implemented."
	118 Add W9, W11, W9
	119 Move W25, W25
	120 ShiftRight W25, 4
	121 And W25, W25, 0x7FFFFFFF
	122 NotImplemented "Instruction STRH not yet implemented."
	123 Subtract W9, W10, 1
	124 Move TEMP, X10
	125 And TEMP, TEMP, -2147483648
	126 Compare TEMP, -2147483648
	127 JumpIfNotEqual {114}
	128 Compare W25, 0
	129 JumpIfNotEqual {114}
	130 Call 0x1C17DFC
	131 Compare W25, 0
	132 JumpIfNotEqual {94}
	133 Move X0, [X26]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 NotImplemented "Instruction CMP not yet implemented."
	139 NotImplemented "Instruction CSINC not yet implemented."
	140 Subtract W9, W8, 2
	141 Move W8, 48
	142 Move W10, W9
	143 And W9, W20, 15
	144 NotImplemented "Instruction CMP not yet implemented."
	145 NotImplemented "Instruction CSEL not yet implemented."
	146 Add W9, W11, W9
	147 Move W20, W20
	148 ShiftRight W20, 4
	149 And W20, W20, 0x7FFFFFFF
	150 NotImplemented "Instruction STRH not yet implemented."
	151 Subtract W9, W10, 1
	152 Move TEMP, X10
	153 And TEMP, TEMP, -2147483648
	154 Compare TEMP, -2147483648
	155 JumpIfNotEqual {142}
	156 Compare W20, 0
	157 JumpIfNotEqual {142}
	158 Move W0, 1
	159 Move X20, [X31+64]
	160 Move X19, [X31+72]
	161 Move X22, [X31+48]
	162 Move X21, [X31+56]
	163 Move X24, [X31+32]
	164 Move X23, [X31+40]
	165 Move X26, [X31+16]
	166 Move X25, [X31+24]
	167 Move X30, [X31+80]
	168 Move X27, [X31+88]
	169 Return X0

Method: System.Void UInt64ToNumber(System.UInt64 value, ref System.Number/NumberBuffer number)

Disassembly:
	0x033863FC LDR W8, [X0 + 0xE0]
	0x03386400 CBNZ W8, 0x338640C
	0x03386404 BL 0x1C16DFC
	0x03386408 LDR X0, [X25]
	0x0338640C CBZ X19, 0x33865D4
	0x03386410 LDR X8, [X0 + 0xB8]
	0x03386414 LDR X8, [X8 + 0x20]
	0x03386418 CBZ X8, 0x33865D4
	0x0338641C LDRSW X9, [X19 + 0xBC]
	0x03386420 LDR W10, [X8 + 0x18]
	0x03386424 CMP W9, W10
	0x03386428 B.CS 0x33865D8
	0x0338642C ADD X8, X8, X9, 0x3, LSL
	0x03386430 ADD X8, X8, 0x20
	0x03386434 B 0x3386440
	0x03386438 ADRP X8, 0xD6E000
	0x0338643C LDR X8, [X8 + 0xA08]
	0x03386440 LDR X23, [X8]
	0x03386444 CBZ X23, 0x33865D4
	0x03386448 LDR W8, [X23 + 0x10]
	0x0338644C CMP W8, 0x1
	0x03386450 B.LT 0x33865B4
	0x03386454 MOV W24, W31
	0x03386458 ADRP X29, 0x1056000
	0x0338645C MOV X0, X23
	0x03386460 MOV W1, W24
	0x03386464 MOV X2, X31
	0x03386468 BL 0x3222A1C
	0x0338646C AND W8, W0, 0xFFFF
	0x03386470 CMP W8, 0x2D
	0x03386474 B.EQ 0x33864BC
	0x03386478 CMP W8, 0x23
	0x0338647C B.NE 0x3386534
	0x03386480 CBZ X19, 0x33865D4
	0x03386484 LDR X0, [X25]
	0x03386488 LDR X28, [X19 + 0x10]
	0x0338648C LDP X27, X26, [X19 + 0x38]
	0x03386490 LDR W8, [X0 + 0xE0]
	0x03386494 CBNZ W8, 0x338649C
	0x03386498 BL 0x1C16DFC
	0x0338649C MOV X0, X22
	0x033864A0 MOV X1, X21
	0x033864A4 MOV W3, W20
	0x033864A8 MOV X5, X28
	0x033864AC MOV X6, X27
	0x033864B0 MOV X7, X26
	0x033864B4 BL 0x3385E58
	0x033864B8 B 0x33865A4
	0x033864BC CBZ X19, 0x33865D4
	0x033864C0 ADRP X8, 0x1057000
	0x033864C4 LDRB W8, [X8 + 0x4]
	0x033864C8 LDR X26, [X19 + 0x30]
	0x033864CC CBNZ W8, 0x33864E8
	0x033864D0 ADRP X0, 0xD9C000
	0x033864D4 LDR X0, [X0 + 0x588]
	0x033864D8 BL 0x1C16CF4
	0x033864DC ADRP X8, 0x1057000
	0x033864E0 MOVZ W9, 0x1
	0x033864E4 STRB W9, [X8 + 0x4]
	0x033864E8 CBZ X26, 0x33865D4
	0x033864EC LDR W8, [X26 + 0x10]
	0x033864F0 CMP W8, 0x1
	0x033864F4 B.NE 0x3386580
	0x033864F8 LDRSW X27, [X22 + 0x18]
	0x033864FC LDR W8, [X22 + 0x10]
	0x03386500 CMP W27, W8
	0x03386504 B.GE 0x3386580
	0x03386508 CMP W27, W8
	0x0338650C B.CS 0x33865D8
	0x03386510 LDR X28, [X22 + 0x8]
	0x03386514 MOV X0, X26
	0x03386518 MOV W1, W31
	0x0338651C MOV X2, X31
	0x03386520 BL 0x3222A1C
	0x03386524 ADD W8, W27, 0x1
	0x03386528 STRH W0, [X28, X27, LSL #1]
	0x0338652C STR W8, [X22 + 0x18]
	0x03386530 B 0x33865A4
	0x03386534 LDRB W8, [X29 + 0x4E2]
	0x03386538 MOV W26, W0
	0x0338653C CBNZ W8, 0x3386554
	0x03386540 ADRP X0, 0xD9C000
	0x03386544 LDR X0, [X0 + 0x588]
	0x03386548 BL 0x1C16CF4
	0x0338654C MOVZ W8, 0x1
	0x03386550 STRB W8, [X29 + 0x4E2]
	0x03386554 LDRSW X8, [X22 + 0x18]
	0x03386558 LDR W9, [X22 + 0x10]
	0x0338655C CMP W8, W9
	0x03386560 B.GE 0x3386594
	0x03386564 CMP W8, W9
	0x03386568 B.CS 0x33865D8
	0x0338656C LDR X9, [X22 + 0x8]
	0x03386570 ADD W10, W8, 0x1
	0x03386574 STRH W26, [X9, X8, LSL #1]
	0x03386578 STR W10, [X22 + 0x18]
	0x0338657C B 0x33865A4
	0x03386580 MOV X0, X22
	0x03386584 MOV X1, X26
	0x03386588 MOV X2, X31
	0x0338658C BL 0x3241020

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x1057000
	011 Move W8, [X21+4051]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xDA3000
	019 Move X0, [X0+120]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+4051], W8
	023 Move X23, 0xDA3000
	024 Move X23, [X23+120]
	025 Move W24, 0xCA00
	026 Move W8, 20
	027 Move X0, X19
	028 Move W1, W31
	029 Move X2, X31
	030 NotImplemented "Instruction MOVK not yet implemented."
	031 Move [X19], W8
	032 Call NumberBuffer.set_sign, X0, X1
	033 Move X0, X19
	034 Move X1, X31
	035 Call NumberBuffer.get_digits, X0
	036 Add X22, X0, 40
	037 Move W25, 0xCCCD
	038 NotImplemented "Instruction MOVK not yet implemented."
	039 Move TEMP, 9
	040 Not TEMP
	041 Move W26, TEMP
	042 Move X21, X22
	043 Move X0, [X23]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {50}
	047 Call 0x1C17DFC
	048 Move X0, [X23]
	049 Move W8, [X0+224]
	050 Move X9, X20
	051 ShiftRight X9, 32
	052 And X9, X9, 0x7FFFFFFF
	053 Compare X9, 0
	054 JumpIfEqual {77}
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X8, X20
	059 NotImplemented "Instruction UDIV not yet implemented."
	060 NotImplemented "Instruction MSUB not yet implemented."
	061 Move W9, 7
	062 Move W10, W8
	063 NotImplemented "Instruction UMADDL not yet implemented."
	064 Move X8, X8
	065 ShiftRight X8, 35
	066 And X8, X8, 0x7FFFFFFF
	067 Move W11, W9
	068 NotImplemented "Instruction MADD not yet implemented."
	069 Add W9, W9, 48
	070 NotImplemented "Instruction STRH not yet implemented."
	071 Subtract W9, W11, 1
	072 Move TEMP, X11
	073 And TEMP, TEMP, -2147483648
	074 Compare TEMP, -2147483648
	075 JumpIfNotEqual {62}
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Compare W8, 0
	078 JumpIfEqual {81}
	079 Compare W20, 0
	080 JumpIfNotEqual {84}
	081 Call 0x1C17DFC
	082 Compare W20, 0
	083 JumpIfEqual {107}
	084 Move W8, 0xCCCD
	085 Move TEMP, 1
	086 Not TEMP
	087 Move W10, TEMP
	088 NotImplemented "Instruction MOVK not yet implemented."
	089 Move TEMP, 9
	090 Not TEMP
	091 Move W9, TEMP
	092 Move W12, W10
	093 NotImplemented "Instruction UMADDL not yet implemented."
	094 Move W11, W20
	095 Move X20, X10
	096 ShiftRight X20, 35
	097 And X20, X20, 0x7FFFFFFF
	098 NotImplemented "Instruction MADD not yet implemented."
	099 Add W10, W10, 48
	100 NotImplemented "Instruction STRH not yet implemented."
	101 Subtract W10, W12, 1
	102 Move TEMP, X12
	103 And TEMP, TEMP, -2147483648
	104 Compare TEMP, -2147483648
	105 JumpIfNotEqual {92}
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Subtract X8, X22, X21
	108 NotImplemented "Instruction CMP not yet implemented."
	109 NotImplemented "Instruction CINC not yet implemented."
	110 Move X20, X8
	111 ShiftRight X20, 1
	112 And X20, X20, 0x7FFFFFFF
	113 Move X0, X19
	114 Move X1, X31
	115 Move [X19+4], W20
	116 Call NumberBuffer.get_digits, X0
	117 NotImplemented "Instruction CMP not yet implemented."
	118 NotImplemented "Instruction LDRH not yet implemented."
	119 Subtract W20, W20, 1
	120 NotImplemented "Instruction CMP not yet implemented."
	121 NotImplemented "Instruction STRH not yet implemented."
	122 Move X20, [X31+64]
	123 Move X19, [X31+72]
	124 Move X22, [X31+48]
	125 Move X21, [X31+56]
	126 Move X24, [X31+32]
	127 Move X23, [X31+40]
	128 Move X26, [X31+16]
	129 Move X25, [X31+24]
	130 NotImplemented "Instruction STRH not yet implemented."
	131 Move X30, [X31+80]
	132 Return 

Method: System.String UInt64ToDecStr(System.UInt64 value, System.Int32 digits)

Disassembly:
	0x033851B8 SUB X31, X31, 0xC0
	0x033851BC MRS X25, 0xC000
	0x033851C0 LDR X8, [X25 + 0x28]
	0x033851C4 ADRP X23, 0x1057000
	0x033851C8 ADRP X26, 0xDA3000
	0x033851CC MOV X22, X3
	0x033851D0 STUR X8, [X29 - 0x8]
	0x033851D4 LDRB W8, [X23 + 0xFC4]
	0x033851D8 LDR X26, [X26 + 0x78]
	0x033851DC MOV X19, X2
	0x033851E0 MOV X20, X1
	0x033851E4 MOV X21, X0
	0x033851E8 SUB X27, X29, 0x90
	0x033851EC TBNZ X8, 0x0, 0x338521C
	0x033851F0 ADRP X0, 0xDA3000
	0x033851F4 LDR X0, [X0 + 0x78]
	0x033851F8 BL 0x1C16CF4
	0x033851FC ADRP X0, 0xD9D000
	0x03385200 LDR X0, [X0 + 0x28]
	0x03385204 BL 0x1C16CF4
	0x03385208 ADRP X0, 0xD9D000
	0x0338520C LDR X0, [X0 + 0x4E8]
	0x03385210 BL 0x1C16CF4
	0x03385214 MOVZ W8, 0x1
	0x03385218 STRB W8, [X23 + 0xFC4]
	0x0338521C LDR X0, [X26]
	0x03385220 MOVI V0.2D, 0x0
	0x03385224 STUR W31, [X29 - 0x94]
	0x03385228 STUR V0, [X27 + 0x6A]
	0x0338522C STP V0, V0, [X29 - 0x40]
	0x03385230 STP V0, V0, [X29 - 0x60]
	0x03385234 STP V0, V0, [X29 - 0x80]
	0x03385238 STUR V0, [X29 - 0x90]
	0x0338523C STP V0, V0, [X29 - 0xC0]
	0x03385240 LDR W8, [X0 + 0xE0]
	0x03385244 CBZ W19, 0x33852D0
	0x03385248 CBNZ W8, 0x3385250
	0x0338524C BL 0x1C16DFC
	0x03385250 SUB X2, X29, 0x94
	0x03385254 MOV X0, X20
	0x03385258 MOV X1, X19
	0x0338525C BL 0x338071C
	0x03385260 MOV W23, W0
	0x03385264 MOV X0, X22
	0x03385268 MOV X1, X31
	0x0338526C BL 0x333ACEC
	0x03385270 LDUR W22, [X29 - 0x94]
	0x03385274 MOVZ W8, 0xFFDF
	0x03385278 AND W10, W23, W8, 0x0
	0x0338527C CMP W10, 0x47
	0x03385280 CSET W8, EQ
	0x03385284 CMP W22, 0x1
	0x03385288 CSET W9, LT
	0x0338528C CMP W10, 0x44
	0x03385290 B.EQ 0x33852E4
	0x03385294 AND W8, W8, W9, 0x0
	0x03385298 CBNZ W8, 0x33852E4
	0x0338529C AND W8, W23, 0xFFFFFFDF
	0x033852A0 AND W8, W8, 0xFFFF
	0x033852A4 CMP W8, 0x58
	0x033852A8 B.NE 0x3385330
	0x033852AC LDR X0, [X26]
	0x033852B0 LDR W8, [X0 + 0xE0]
	0x033852B4 CBNZ W8, 0x33852BC
	0x033852B8 BL 0x1C16DFC
	0x033852BC SUB W1, W23, 0x21
	0x033852C0 MOV X0, X21
	0x033852C4 MOV W2, W22
	0x033852C8 BL 0x33846B0
	0x033852CC B 0x3385300
	0x033852D0 CBNZ W8, 0x33852D8
	0x033852D4 BL 0x1C16DFC
	0x033852D8 MOVN W1, 0x0
	0x033852DC MOV X0, X21
	0x033852E0 B 0x33852FC
	0x033852E4 LDR X0, [X26]
	0x033852E8 LDR W8, [X0 + 0xE0]
	0x033852EC CBNZ W8, 0x33852F4
	0x033852F0 BL 0x1C16DFC
	0x033852F4 MOV X0, X21
	0x033852F8 MOV W1, W22
	0x033852FC BL 0x33841B8
	0x03385300 LDR X8, [X25 + 0x28]
	0x03385304 LDUR X9, [X29 - 0x8]
	0x03385308 CMP X8, X9
	0x0338530C B.NE 0x33853F8
	0x03385310 ADD X31, X29, 0x0
	0x03385314 LDP X20, X19, [X31 + 0x50]
	0x03385318 LDP X22, X21, [X31 + 0x40]
	0x0338531C LDP X24, X23, [X31 + 0x30]
	0x03385320 LDP X26, X25, [X31 + 0x20]
	0x03385324 LDP X28, X27, [X31 + 0x10]
	0x03385328 LDP X29, X30, [X31], #0x60
	0x0338532C RET
	0x03385330 MOV X24, X0
	0x03385334 LDR X0, [X26]
	0x03385338 MOVI V0.2D, 0x0
	0x0338533C STUR V0, [X27 + 0x6A]
	0x03385340 STP V0, V0, [X29 - 0x40]
	0x03385344 STP V0, V0, [X29 - 0x60]
	0x03385348 STP V0, V0, [X29 - 0x80]
	0x0338534C STUR V0, [X29 - 0x90]
	0x03385350 LDR W8, [X0 + 0xE0]
	0x03385354 CBNZ W8, 0x338535C
	0x03385358 BL 0x1C16DFC
	0x0338535C SUB X1, X29, 0x90
	0x03385360 MOV X0, X21
	0x03385364 BL 0x33853FC
	0x03385368 ADD X8, X31, 0x0
	0x0338536C SUB X1, X8, 0x40
	0x03385370 ADD X31, X1, 0x0
	0x03385374 MOVI V0.2D, 0x0
	0x03385378 SUB X0, X29, 0xC0
	0x0338537C MOVZ W2, 0x20
	0x03385380 MOV X3, X31
	0x03385384 STP V0, V0, [X8 - 0x20]
	0x03385388 STP V0, V0, [X8 - 0x40]
	0x0338538C BL 0x3240C88
	0x03385390 LDR X0, [X26]
	0x03385394 ANDS W31, W23, 0xFFFF
	0x03385398 LDR W8, [X0 + 0xE0]
	0x0338539C B.EQ 0x33853C8
	0x033853A0 CBNZ W8, 0x33853A8
	0x033853A4 BL 0x1C16DFC
	0x033853A8 SUB X0, X29, 0xC0
	0x033853AC SUB X1, X29, 0x90
	0x033853B0 MOV W2, W23
	0x033853B4 MOV W3, W22
	0x033853B8 MOV X4, X24
	0x033853BC MOV W5, W31
	0x033853C0 BL 0x3380A9C
	0x033853C4 B 0x33853E8
	0x033853C8 CBNZ W8, 0x33853D0
	0x033853CC BL 0x1C16DFC
	0x033853D0 SUB X0, X29, 0xC0
	0x033853D4 SUB X1, X29, 0x90
	0x033853D8 MOV X2, X20
	0x033853DC MOV X3, X19
	0x033853E0 MOV X4, X24
	0x033853E4 BL 0x338102C
	0x033853E8 SUB X0, X29, 0xC0
	0x033853EC MOV X1, X31
	0x033853F0 BL 0x3240CC4
	0x033853F4 B 0x3385300
	0x033853F8 BL 0x3EB1B20
	0x033853FC STR X30, [X31 - 0x50]!
	0x03385400 STP X26, X25, [X31 + 0x10]
	0x03385404 STP X24, X23, [X31 + 0x20]
	0x03385408 STP X22, X21, [X31 + 0x30]
	0x0338540C STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x1058000
	012 Move W8, [X21+4052]
	013 Move W20, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xD6F000
	020 Move X0, [X0+1448]
	021 Call 0x1C17CF4
	022 Move X0, 0xDA4000
	023 Move X0, [X0+120]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+4052], W8
	027 Move W8, 0x967F
	028 NotImplemented "Instruction MOVK not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CSINC not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X9, 0x3FFF
	033 NotImplemented "Instruction MOVK not yet implemented."
	034 NotImplemented "Instruction MOVK not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Add X8, X9, 1
	037 NotImplemented "Instruction UDIV not yet implemented."
	038 Move W20, 15
	039 Move W20, 1
	040 Move X9, X19
	041 Add X8, X8, 1
	042 NotImplemented "Instruction UDIV not yet implemented."
	043 Move W20, 8
	044 Move X8, 0xD6F000
	045 Move X8, [X8+1448]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add W20, W20, 1
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add W20, W20, 2
	051 Move W10, W9
	052 ShiftRight W10, 4
	053 And W10, W10, 0x7FFFFFFF
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Add W20, W20, 3
	056 Move W10, W9
	057 ShiftRight W10, 5
	058 And W10, W10, 0x7FFFFFFF
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Add W20, W20, 4
	061 Move W10, 0x423F
	062 NotImplemented "Instruction MOVK not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add W20, W20, 5
	065 Add W20, W20, 6
	066 Move X0, [X8]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 NotImplemented "Instruction CMP not yet implemented."
	072 NotImplemented "Instruction CSEL not yet implemented."
	073 Move W0, W21
	074 Move X1, X31
	075 Call String.FastAllocateString, X0
	076 Move X20, X0
	077 Compare X0, 0
	078 JumpIfEqual {82}
	079 Move X0, X31
	080 Call RuntimeHelpers.get_OffsetToStringData
	081 Add X8, X20, W0
	082 Move X8, X20
	083 Move X24, 0xDA4000
	084 Move X24, [X24+120]
	085 Move W25, 0xCA00
	086 Move W9, W21
	087 ShiftRight W9, 31
	088 And W9, W9, 0x3FFFFFFF
	089 Move W26, 0xCCCD
	090 NotImplemented "Instruction MOVK not yet implemented."
	091 Subtract W23, W22, 2
	092 NotImplemented "Instruction MOVK not yet implemented."
	093 Add X21, X8, X9
	094 Move TEMP, 9
	095 Not TEMP
	096 Move W27, TEMP
	097 Move X0, [X24]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {104}
	101 Call 0x1C17DFC
	102 Move X0, [X24]
	103 Move W8, [X0+224]
	104 Move X9, X19
	105 ShiftRight X9, 32
	106 And X9, X9, 0x7FFFFFFF
	107 Compare X9, 0
	108 JumpIfEqual {133}
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X8, X19
	113 NotImplemented "Instruction UDIV not yet implemented."
	114 NotImplemented "Instruction MSUB not yet implemented."
	115 Move W9, 7
	116 Move W10, W8
	117 NotImplemented "Instruction UMADDL not yet implemented."
	118 Move X8, X8
	119 ShiftRight X8, 35
	120 And X8, X8, 0x7FFFFFFF
	121 Move W11, W9
	122 NotImplemented "Instruction MADD not yet implemented."
	123 Add W9, W9, 48
	124 NotImplemented "Instruction STRH not yet implemented."
	125 Subtract W9, W11, 1
	126 Move TEMP, X11
	127 And TEMP, TEMP, -2147483648
	128 Compare TEMP, -2147483648
	129 JumpIfNotEqual {116}
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Subtract W22, W22, 9
	132 Subtract W23, W23, 9
	133 Compare W8, 0
	134 JumpIfEqual {137}
	135 Compare W19, 0
	136 JumpIfEqual {140}
	137 Call 0x1C17DFC
	138 Compare W19, 0
	139 JumpIfNotEqual {145}
	140 Subtract W8, W22, 1
	141 Move TEMP, X8
	142 And TEMP, TEMP, -2147483648
	143 Compare TEMP, -2147483648
	144 JumpIfEqual {165}
	145 Move W8, 0xCCCD
	146 NotImplemented "Instruction MOVK not yet implemented."
	147 Move TEMP, 9
	148 Not TEMP
	149 Move W9, TEMP
	150 NotImplemented "Instruction UMADDL not yet implemented."
	151 Move W10, W19
	152 Move X19, X12
	153 ShiftRight X19, 35
	154 And X19, X19, 0x7FFFFFFF
	155 NotImplemented "Instruction MADD not yet implemented."
	156 Add W12, W12, 48
	157 Move W11, W23
	158 NotImplemented "Instruction STRH not yet implemented."
	159 Subtract W23, W23, 1
	160 Move TEMP, X11
	161 And TEMP, TEMP, -2147483648
	162 Compare TEMP, -2147483648
	163 JumpIfNotEqual {150}
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X0, X20
	166 Move X20, [X31+64]
	167 Move X19, [X31+72]
	168 Move X22, [X31+48]
	169 Move X21, [X31+56]
	170 Move X24, [X31+32]
	171 Move X23, [X31+40]
	172 Move X26, [X31+16]
	173 Move X25, [X31+24]
	174 Move X30, [X31+80]
	175 Move X27, [X31+88]
	176 Return X0

Method: System.Boolean TryUInt64ToDecStr(System.UInt64 value, System.Int32 digits, System.Span`1<System.Char> destination, out System.Int32 charsWritten)

Disassembly:
	0x03385A48 SUB W11, W13, 0x1
	0x03385A4C TBZ X13, 0x1F, 0x3385A2C
	0x03385A50 CMP W12, 0x9
	0x03385A54 B.HI 0x3385A2C
	0x03385A58 B 0x3385A60
	0x03385A5C MOV X21, X8
	0x03385A60 SUB X8, X8, X21
	0x03385A64 CMP X8, 0x0
	0x03385A68 CINC X8, X8, LT
	0x03385A6C UBFM X20, X8, 0x1, 0x3F
	0x03385A70 MOV X0, X19
	0x03385A74 MOV X1, X31
	0x03385A78 STR W20, [X19 + 0x4]
	0x03385A7C BL 0x338C3A8
	0x03385A80 CMP W20, 0x1
	0x03385A84 B.MI 0x3385A9C
	0x03385A88 LDRH W8, [X21], #0x2
	0x03385A8C SUB W20, W20, 0x1
	0x03385A90 CMP W20, 0x0
	0x03385A94 STRH W8, [X0], #0x2
	0x03385A98 B.GT 0x3385A88
	0x03385A9C LDP X20, X19, [X31 + 0x20]
	0x03385AA0 LDP X22, X21, [X31 + 0x10]
	0x03385AA4 STRH W31, [X0]
	0x03385AA8 LDR X30, [X31], #0x30
	0x03385AAC RET
	0x03385AB0 LDR X8, [X0]
	0x03385AB4 MOVZ X9, 0x5A53
	0x03385AB8 MOVK X9, 0xA09B0000
	0x03385ABC MOVK X9, 0xB82F
	0x03385AC0 MOVK X9, 0x440000
	0x03385AC4 UBFM X10, X8, 0x9, 0x3F
	0x00000000 INVALID
	0x03385ACC MOVZ W10, 0xCA00
	0x03385AD0 UBFM X9, X9, 0xB, 0x3F
	0x03385AD4 MOVK W10, 0x3B9A0000
	0x03385AD8 MSUB W8, W9, W10, W8
	0x03385ADC STR X9, [X0]
	0x03385AE0 MOV W0, W8
	0x03385AE4 RET
	0x03385AE8 UBFM X0, X0, 0x20, 0x3F
	0x03385AEC RET
	0x03385AF0 RET
	0x03385AF4 STP X30, X21, [X31 - 0x20]!
	0x03385AF8 STP X20, X19, [X31 + 0x10]
	0x03385AFC MOV W21, W1
	0x03385B00 MOV X1, X31
	0x03385B04 MOV X20, X0
	0x03385B08 BL 0x338C3A8
	0x03385B0C MOV X19, X0
	0x03385B10 CMP W21, 0x1
	0x03385B14 MOV W8, W21
	0x03385B18 B.LT 0x3385B44
	0x03385B1C MOV X9, X31
	0x03385B20 MOV X10, X19
	0x03385B24 LDRH W11, [X10]
	0x03385B28 CBZ W11, 0x3385B48
	0x03385B2C ADD X9, X9, 0x1
	0x03385B30 CMP X8, X9
	0x03385B34 ADD X10, X10, 0x2
	0x03385B38 B.NE 0x3385B24
	0x03385B3C MOV W9, W8
	0x03385B40 B 0x3385B50
	0x03385B44 MOV W9, W31
	0x03385B48 CMP W9, W21
	0x03385B4C B.NE 0x3385B5C
	0x03385B50 LDRH W10, [X19, W21, UXTW]
	0x03385B54 CMP W10, 0x35
	0x03385B58 B.CS 0x3385B9C
	0x03385B5C MOV W8, W9
	0x03385B60 ADD X9, X19, W9, 0x1, UXTW
	0x03385B64 SUB X9, X9, 0x2
	0x03385B68 SUBS X8, X8, 0x1
	0x03385B6C B.LT 0x3385B80
	0x03385B70 LDRH W10, [X9], #0xFFFFFFFFFFFFFFFE
	0x03385B74 CMP W10, 0x30
	0x03385B78 B.EQ 0x3385B68
	0x03385B7C B 0x3385BBC
	0x03385B80 MOV X0, X20
	0x03385B84 MOV W1, W31
	0x03385B88 MOV X2, X31
	0x03385B8C STR W31, [X20 + 0x4]
	0x03385B90 BL 0x338C39C
	0x03385B94 MOV X8, X31
	0x03385B98 B 0x3385BDC
	0x03385B9C ADD X9, X19, W21, 0x1, UXTW
	0x03385BA0 SUBS X8, X8, 0x1
	0x03385BA4 B.LT 0x3385BC4
	0x03385BA8 LDRH W10, [X9 - 0x2]!
	0x03385BAC CMP W10, 0x39
	0x03385BB0 B.EQ 0x3385BA0
	0x03385BB4 ADD W10, W10, 0x1
	0x03385BB8 STRH W10, [X9]
	0x03385BBC ADD X8, X8, 0x1
	0x03385BC0 B 0x3385BDC
	0x03385BC4 LDR W8, [X20 + 0x4]
	0x03385BC8 MOVZ W9, 0x31
	0x03385BCC ADD W8, W8, 0x1
	0x03385BD0 STR W8, [X20 + 0x4]
	0x03385BD4 STRH W9, [X19]
	0x03385BD8 MOVZ W8, 0x1
	0x03385BDC SBFM X8, X8, 0x3F, 0x1F
	0x03385BE0 STRH W31, [X8, X19, LSL]
	0x03385BE4 LDP X20, X19, [X31 + 0x10]
	0x03385BE8 LDP X30, X21, [X31], #0x20
	0x03385BEC RET
	0x03385BF0 SUB X31, X31, 0x70
	0x03385BF4 STP X29, X30, [X31 + 0x10]
	0x03385BF8 STP X28, X27, [X31 + 0x20]
	0x03385BFC STP X26, X25, [X31 + 0x30]
	0x03385C00 STP X24, X23, [X31 + 0x40]
	0x03385C04 STP X22, X21, [X31 + 0x50]
	0x03385C08 STP X20, X19, [X31 + 0x60]
	0x03385C0C ADRP X23, 0x1057000
	0x03385C10 ADRP X24, 0xDA3000
	0x03385C14 LDRB W8, [X23 + 0xFD9]
	0x03385C18 LDR X24, [X24 + 0x78]
	0x03385C1C MOV X19, X4
	0x03385C20 MOV W20, W3
	0x03385C24 MOV X21, X1
	0x03385C28 MOV X22, X0
	0x03385C2C TBNZ X8, 0x0, 0x3385C44
	0x03385C30 ADRP X0, 0xDA3000
	0x03385C34 LDR X0, [X0 + 0x78]
	0x03385C38 BL 0x1C16CF4
	0x03385C3C MOVZ W8, 0x1
	0x03385C40 STRB W8, [X23 + 0xFD9]
	0x03385C44 MOV X0, X21
	0x03385C48 MOV X1, X31
	0x03385C4C BL 0x338C38C
	0x03385C50 LDR X8, [X24]
	0x03385C54 MOV W23, W0
	0x03385C58 LDR W9, [X8 + 0xE0]
	0x03385C5C CBNZ W9, 0x3385C6C
	0x03385C60 MOV X0, X8
	0x03385C64 BL 0x1C16DFC
	0x03385C68 LDR X8, [X24]
	0x03385C6C LDR X8, [X8 + 0xB8]
	0x03385C70 TBZ X23, 0x0, 0x3385C88
	0x03385C74 CBZ X19, 0x3385E50
	0x03385C78 LDR X8, [X8 + 0x8]
	0x03385C7C CBZ X8, 0x3385E50
	0x03385C80 LDR W9, [X19 + 0xB8]
	0x03385C84 B 0x3385C98
	0x03385C88 CBZ X19, 0x3385E50
	0x03385C8C LDR X8, [X8]
	0x03385C90 CBZ X8, 0x3385E50
	0x03385C94 LDR W9, [X19 + 0xB4]
	0x03385C98 LDR W10, [X8 + 0x18]
	0x03385C9C CMP W9, W10
	0x03385CA0 B.CS 0x3385E54
	0x03385CA4 ADD X8, X8, W9, 0x3, SXTW
	0x03385CA8 LDR X23, [X8 + 0x20]
	0x03385CAC CBZ X23, 0x3385E50
	0x03385CB0 LDR W8, [X23 + 0x10]
	0x03385CB4 CMP W8, 0x1
	0x03385CB8 B.LT 0x3385E30
	0x03385CBC MOV W24, W31
	0x03385CC0 ADRP X29, 0x1058000
	0x03385CC4 ADRP X25, 0x1057000
	0x03385CC8 MOV X0, X23

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0x1058000
	011 Move W8, [X24+4053]
	012 Move X21, X4
	013 Move X20, X3
	014 Move X22, X2
	015 Move W23, W1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0xD6F000
	022 Move X0, [X0+1448]
	023 Call 0x1C17CF4
	024 Move X0, 0xD9E000
	025 Move X0, [X0+712]
	026 Call 0x1C17CF4
	027 Move X0, 0xDA4000
	028 Move X0, [X0+120]
	029 Call 0x1C17CF4
	030 Move X0, 0xD9E000
	031 Move X0, [X0+1416]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X24+4053], W8
	035 Move W8, 0x967F
	036 NotImplemented "Instruction MOVK not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSINC not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X9, 0x3FFF
	041 NotImplemented "Instruction MOVK not yet implemented."
	042 NotImplemented "Instruction MOVK not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add X8, X9, 1
	045 NotImplemented "Instruction UDIV not yet implemented."
	046 Move W24, 15
	047 Move W24, 1
	048 Move X9, X19
	049 Add X8, X8, 1
	050 NotImplemented "Instruction UDIV not yet implemented."
	051 Move W24, 8
	052 Move X8, 0xD6F000
	053 Move X8, [X8+1448]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Add W24, W24, 1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add W24, W24, 2
	059 Move W10, W9
	060 ShiftRight W10, 4
	061 And W10, W10, 0x7FFFFFFF
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Add W24, W24, 3
	064 Move W10, W9
	065 ShiftRight W10, 5
	066 And W10, W10, 0x7FFFFFFF
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add W24, W24, 4
	069 Move W10, 0x423F
	070 NotImplemented "Instruction MOVK not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Add W24, W24, 5
	073 Add W24, W24, 6
	074 Move X0, [X8]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction CSEL not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move W0, W31
	083 Move [X21], W31
	084 Move X8, 0xD9E000
	085 Move X8, [X8+712]
	086 Move [X21], W26
	087 Move X24, 0xDA4000
	088 Move W25, 0xCA00
	089 Move X2, [X8]
	090 Move X24, [X24+120]
	091 Move X0, X22
	092 Move X1, X20
	093 NotImplemented "Instruction MOVK not yet implemented."
	094 Call MemoryMarshal.GetReference, X0
	095 Move W8, W26
	096 ShiftRight W8, 31
	097 And W8, W8, 0x3FFFFFFF
	098 Move W22, 0xCCCD
	099 Subtract W21, W23, 2
	100 NotImplemented "Instruction MOVK not yet implemented."
	101 Add X20, X0, X8
	102 Move TEMP, 9
	103 Not TEMP
	104 Move W26, TEMP
	105 Move X0, [X24]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {112}
	109 Call 0x1C17DFC
	110 Move X0, [X24]
	111 Move W8, [X0+224]
	112 Move X9, X19
	113 ShiftRight X9, 32
	114 And X9, X9, 0x7FFFFFFF
	115 Compare X9, 0
	116 JumpIfEqual {141}
	117 Compare W8, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1C17DFC
	120 Move X8, X19
	121 NotImplemented "Instruction UDIV not yet implemented."
	122 NotImplemented "Instruction MSUB not yet implemented."
	123 Move W9, 7
	124 Move W10, W8
	125 NotImplemented "Instruction UMADDL not yet implemented."
	126 Move X8, X8
	127 ShiftRight X8, 35
	128 And X8, X8, 0x7FFFFFFF
	129 Move W11, W9
	130 NotImplemented "Instruction MADD not yet implemented."
	131 Add W9, W9, 48
	132 NotImplemented "Instruction STRH not yet implemented."
	133 Subtract W9, W11, 1
	134 Move TEMP, X11
	135 And TEMP, TEMP, -2147483648
	136 Compare TEMP, -2147483648
	137 JumpIfNotEqual {124}
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Subtract W23, W23, 9
	140 Subtract W21, W21, 9
	141 Compare W8, 0
	142 JumpIfEqual {145}
	143 Compare W19, 0
	144 JumpIfEqual {148}
	145 Call 0x1C17DFC
	146 Compare W19, 0
	147 JumpIfNotEqual {153}
	148 Subtract W8, W23, 1
	149 Move TEMP, X8
	150 And TEMP, TEMP, -2147483648
	151 Compare TEMP, -2147483648
	152 JumpIfEqual {173}
	153 Move W8, 0xCCCD
	154 NotImplemented "Instruction MOVK not yet implemented."
	155 Move TEMP, 9
	156 Not TEMP
	157 Move W9, TEMP
	158 NotImplemented "Instruction UMADDL not yet implemented."
	159 Move W10, W19
	160 Move X19, X12
	161 ShiftRight X19, 35
	162 And X19, X19, 0x7FFFFFFF
	163 NotImplemented "Instruction MADD not yet implemented."
	164 Add W12, W12, 48
	165 Move W11, W21
	166 NotImplemented "Instruction STRH not yet implemented."
	167 Subtract W21, W21, 1
	168 Move TEMP, X11
	169 And TEMP, TEMP, -2147483648
	170 Compare TEMP, -2147483648
	171 JumpIfNotEqual {158}
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move W0, 1
	174 Move X20, [X31+64]
	175 Move X19, [X31+72]
	176 Move X22, [X31+48]
	177 Move X21, [X31+56]
	178 Move X24, [X31+32]
	179 Move X23, [X31+40]
	180 Move X26, [X31+16]
	181 Move X25, [X31+24]
	182 Move X30, [X31+80]
	183 Return X0

Method: System.Char ParseFormatSpecifier(System.ReadOnlySpan`1<System.Char> format, out System.Int32 digits)

Disassembly:
	0x0338171C CBNZ W8, 0x3381738
	0x03381720 ADRP X0, 0xDA1000
	0x03381724 LDR X0, [X0 + 0x588]
	0x03381728 BL 0x1C16CF4
	0x0338172C MOVZ W8, 0x1
	0x03381730 ADRP X9, 0x105C000
	0x03381734 STRB W8, [X9 + 0x4]
	0x03381738 CBZ X27, 0x338215C
	0x0338173C LDR W8, [X27 + 0x10]
	0x03381740 CMP W8, 0x1
	0x03381744 B.NE 0x3381788
	0x03381748 LDRSW X25, [X22 + 0x18]
	0x0338174C LDR W8, [X22 + 0x10]
	0x03381750 CMP W25, W8
	0x03381754 B.GE 0x3381788
	0x03381758 CMP W25, W8
	0x0338175C B.CS 0x3382158
	0x03381760 LDR X21, [X22 + 0x8]
	0x03381764 MOV X0, X27
	0x03381768 MOV W1, W31
	0x0338176C MOV X2, X31
	0x03381770 BL 0x3222A1C
	0x03381774 STRH W0, [X21, X25, LSL #1]
	0x03381778 LDUR X21, [X29 - 0x48]
	0x0338177C ADD W8, W25, 0x1
	0x03381780 STR W8, [X22 + 0x18]
	0x03381784 B 0x3381798
	0x03381788 MOV X0, X22
	0x0338178C MOV X1, X27
	0x03381790 MOV X2, X31
	0x03381794 BL 0x3241020
	0x03381798 LDUR W25, [X29 - 0x28]
	0x0338179C SUB W19, W19, 0x1
	0x033817A0 SUB W24, W24, 0x1
	0x033817A4 CMP W24, 0x1
	0x033817A8 SUB W28, W28, 0x1
	0x033817AC B.GT 0x3381660
	0x033817B0 LDUR W28, [X29 - 0x3C]
	0x033817B4 MOV W24, W31
	0x033817B8 B 0x33817C0
	0x033817BC LDUR X21, [X29 - 0x48]
	0x033817C0 LDUR W8, [X29 - 0x38]
	0x033817C4 CMP W26, 0x45
	0x033817C8 ADD W27, W8, 0x1
	0x033817CC B.HI 0x33818AC
	0x033817D0 SUB W8, W26, 0x22
	0x033817D4 CMP W8, 0xE
	0x033817D8 B.HI 0x33819D4
	0x033817DC ADRP X11, 0xFFFFFFFFFD815000
	0x033817E0 ADD X11, X11, 0x844
	0x033817E4 ADR X9, 0x10
	0x033817E8 LDRH W10, [X11, X8, LSL #1]
	0x033817EC ADD X9, X9, X10, 0x2, LSL
	0x033817F0 BR X9
	0x033817F4 CMP W27, W20
	0x033817F8 B.GE 0x3381FE4
	0x033817FC LDUR W8, [X29 - 0x38]
	0x03381800 STUR W28, [X29 - 0x3C]
	0x03381804 STUR W24, [X29 - 0x4C]
	0x03381808 SBFM X24, X27, 0x20, 0x1F
	0x0338180C ORN W21, W31, W8, 0x0
	0x03381810 LDUR X8, [X29 - 0x58]
	0x03381814 ADD X28, X8, W27, 0x1, SXTW
	0x03381818 LDUR X8, [X29 - 0x88]
	0x0338181C SUB X25, X8, W27, SXTW
	0x03381820 LDRH W27, [X28]
	0x03381824 CBZ W27, 0x3381C60
	0x03381828 CMP W27, W26
	0x0338182C B.EQ 0x3381C60
	0x03381830 ADRP X8, 0x105B000
	0x03381834 LDRB W8, [X8 + 0x4E2]
	0x03381838 CBNZ W8, 0x3381854
	0x0338183C ADRP X0, 0xDA1000
	0x03381840 LDR X0, [X0 + 0x588]
	0x03381844 BL 0x1C16CF4
	0x03381848 ADRP X8, 0x105B000
	0x0338184C MOVZ W9, 0x1
	0x03381850 STRB W9, [X8 + 0x4E2]
	0x03381854 LDRSW X8, [X22 + 0x18]
	0x03381858 LDR W9, [X22 + 0x10]
	0x0338185C CMP W8, W9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x105C000
	007 Move W8, [X22+4054]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xDA2000
	016 Move X0, [X0+40]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+4054], W8
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 And W8, W0, 0xFFFFFFDF
	023 Subtract W8, W8, 65
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 Subtract W8, W8, 48
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Subtract W9, W9, 48
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W10, 10
	035 NotImplemented "Instruction MADD not yet implemented."
	036 Move TEMP, 0
	037 Not TEMP
	038 Move W8, TEMP
	039 Move [X19], W8
	040 Move TEMP, 0
	041 Not TEMP
	042 Move W8, TEMP
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Subtract W8, W8, 48
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W8, W31
	047 Move W10, 1
	048 Move W9, 10
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X11, W10
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Subtract W12, W10, 48
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Add W10, W11, 1
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction MADD not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Compare W9, 0
	061 JumpIfEqual {70}
	062 Move TEMP, 0
	063 Not TEMP
	064 Move W8, TEMP
	065 Move [X19], W8
	066 Compare W0, 0
	067 JumpIfEqual {69}
	068 Move W0, W31
	069 Move W0, 71
	070 Move [X19], W8
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X30, [X31+48]
	076 Return X0
	077 Call 0x1C17F28

Method: System.Void NumberToString(ref System.Text.ValueStringBuilder sb, ref System.Number/NumberBuffer number, System.Char format, System.Int32 nMaxDigits, System.Globalization.NumberFormatInfo info, System.Boolean isDecimal)

Disassembly:
	0x03381A9C B.CS 0x3382158
	0x03381AA0 LDR X9, [X22 + 0x8]
	0x03381AA4 ADD W10, W8, 0x1
	0x03381AA8 STRH W26, [X9, X8, LSL #1]
	0x03381AAC STR W10, [X22 + 0x18]
	0x03381AB0 B 0x3381BEC
	0x03381AB4 ADD W8, W11, 0x2
	0x03381AB8 CMP W8, W20
	0x03381ABC B.GE 0x3381F04
	0x03381AC0 LDUR X9, [X29 - 0x58]
	0x03381AC4 LDRH W9, [X9, W27, SXTW]
	0x03381AC8 CMP W9, 0x2D
	0x03381ACC B.EQ 0x3381EAC
	0x03381AD0 CMP W9, 0x2B
	0x03381AD4 B.NE 0x3381F04
	0x03381AD8 LDUR X9, [X29 - 0x58]
	0x03381ADC LDRH W9, [X9, W8, SXTW]
	0x03381AE0 CMP W9, 0x30
	0x03381AE4 B.NE 0x3381F04
	0x03381AE8 MOV W9, W31
	0x03381AEC MOVZ W5, 0x1
	0x03381AF0 B 0x3381EC4
	0x03381AF4 CBZ X21, 0x338215C
	0x03381AF8 ADRP X8, 0x105C000
	0x03381AFC LDRB W8, [X8 + 0x4]
	0x03381B00 LDR X26, [X21 + 0x90]
	0x03381B04 CBNZ W8, 0x33818F4
	0x03381B08 B 0x33818DC
	0x03381B0C LDUR W9, [X29 - 0x7C]
	0x03381B10 CMP W28, 0x0
	0x03381B14 CSET W8, NE
	0x03381B18 ORR W8, W9, W8, 0x0
	0x03381B1C TBNZ X8, 0x0, 0x3381FE4
	0x03381B20 LDUR W9, [X29 - 0x34]
	0x03381B24 LDUR W8, [X29 - 0x74]
	0x03381B28 TBNZ X8, 0x1F, 0x3381B40
	0x03381B2C LDUR W8, [X29 - 0x1C]
	0x03381B30 CMP W8, W9
	0x03381B34 B.LE 0x3381E78
	0x03381B38 LDRH W8, [X23]
	0x03381B3C CBZ W8, 0x3381E78
	0x03381B40 CBZ X21, 0x338215C
	0x03381B44 ADRP X8, 0x105C000
	0x03381B48 LDRB W8, [X8 + 0x4]
	0x03381B4C LDR X26, [X21 + 0x38]
	0x03381B50 CBNZ W8, 0x3381B6C
	0x03381B54 ADRP X0, 0xDA1000
	0x03381B58 LDR X0, [X0 + 0x588]
	0x03381B5C BL 0x1C16CF4
	0x03381B60 MOVZ W8, 0x1
	0x03381B64 ADRP X9, 0x105C000
	0x03381B68 STRB W8, [X9 + 0x4]
	0x03381B6C CBZ X26, 0x338215C
	0x03381B70 LDR W8, [X26 + 0x10]
	0x03381B74 CMP W8, 0x1
	0x03381B78 B.NE 0x3381E84
	0x03381B7C LDRSW X21, [X22 + 0x18]
	0x03381B80 LDR W8, [X22 + 0x10]
	0x03381B84 CMP W21, W8
	0x03381B88 B.GE 0x3381E84
	0x03381B8C CMP W21, W8
	0x03381B90 B.CS 0x3382158
	0x03381B94 MOV W25, W24
	0x03381B98 LDR X24, [X22 + 0x8]
	0x03381B9C MOV X0, X26
	0x03381BA0 MOV W1, W31
	0x03381BA4 MOV X2, X31
	0x03381BA8 BL 0x3222A1C
	0x03381BAC ADD W8, W21, 0x1
	0x03381BB0 STRH W0, [X24, X21, LSL #1]
	0x03381BB4 STR W8, [X22 + 0x18]
	0x03381BB8 MOVZ W8, 0x1
	0x03381BBC MOV W28, W31
	0x03381BC0 STUR W8, [X29 - 0x7C]
	0x03381BC4 B 0x3381940
	0x03381BC8 LDUR W8, [X29 - 0x78]
	0x03381BCC ADD W24, W24, 0x1
	0x03381BD0 CMP W28, W8
	0x03381BD4 B.LE 0x3381C90
	0x03381BD8 B 0x3381DC0
	0x03381BDC MOV X0, X22
	0x03381BE0 MOV W1, W26
	0x03381BE4 MOV X2, X31
	0x03381BE8 BL 0x3240EF4
	0x03381BEC CMP W27, W20
	0x03381BF0 B.GE 0x3381FE0
	0x03381BF4 LDUR X8, [X29 - 0x58]
	0x03381BF8 LDRH W26, [X8, W27, SXTW]
	0x03381BFC CMP W26, 0x2D
	0x03381C00 B.EQ 0x3381C0C
	0x03381C04 CMP W26, 0x2B
	0x03381C08 B.NE 0x3381DD8
	0x03381C0C ADRP X8, 0x105B000
	0x03381C10 LDRB W8, [X8 + 0x4E2]
	0x03381C14 CBNZ W8, 0x3381C30
	0x03381C18 ADRP X0, 0xDA1000
	0x03381C1C LDR X0, [X0 + 0x588]
	0x03381C20 BL 0x1C16CF4
	0x03381C24 ADRP X8, 0x105B000
	0x03381C28 MOVZ W9, 0x1
	0x03381C2C STRB W9, [X8 + 0x4E2]
	0x03381C30 LDRSW X8, [X22 + 0x18]
	0x03381C34 LDR W9, [X22 + 0x10]
	0x03381C38 ADD W27, W21, 0x2
	0x03381C3C CMP W8, W9
	0x03381C40 B.GE 0x3381DC8
	0x03381C44 CMP W8, W9
	0x03381C48 B.CS 0x3382158
	0x03381C4C LDR X9, [X22 + 0x8]
	0x03381C50 ADD W10, W8, 0x1
	0x03381C54 STRH W26, [X9, X8, LSL #1]
	0x03381C58 STR W10, [X22 + 0x18]
	0x03381C5C B 0x3381DD8
	0x03381C60 LDUR X9, [X29 - 0x58]
	0x03381C64 SBFM X8, X24, 0x1F, 0x3F
	0x03381C68 LDUR W24, [X29 - 0x4C]
	0x03381C6C LDUR W28, [X29 - 0x3C]
	0x03381C70 LDRH W8, [X8, X9, LSL]
	0x03381C74 CMP W8, 0x0
	0x03381C78 CSET W8, NE
	0x03381C7C SUB W27, W8, W21
	0x03381C80 B 0x3381FE4
	0x03381C84 LDUR W8, [X29 - 0x74]
	0x03381C88 CMP W28, W8
	0x03381C8C B.LE 0x3381DC0
	0x03381C90 MOVZ W26, 0x30
	0x03381C94 ADRP X8, 0x105B000
	0x03381C98 LDRB W8, [X8 + 0x4E2]
	0x03381C9C CBNZ W8, 0x3381CB8
	0x03381CA0 ADRP X0, 0xDA1000
	0x03381CA4 LDR X0, [X0 + 0x588]
	0x03381CA8 BL 0x1C16CF4
	0x03381CAC ADRP X8, 0x105B000
	0x03381CB0 MOVZ W9, 0x1
	0x03381CB4 STRB W9, [X8 + 0x4E2]
	0x03381CB8 LDRSW X8, [X22 + 0x18]
	0x03381CBC LDR W9, [X22 + 0x10]
	0x03381CC0 LDUR W25, [X29 - 0x28]
	0x03381CC4 CMP W8, W9
	0x03381CC8 B.GE 0x3381CE8
	0x03381CCC CMP W8, W9
	0x03381CD0 B.CS 0x3382158
	0x03381CD4 LDR X9, [X22 + 0x8]
	0x03381CD8 ADD W10, W8, 0x1
	0x03381CDC STRH W26, [X9, X8, LSL #1]
	0x03381CE0 STR W10, [X22 + 0x18]
	0x03381CE4 B 0x3381CF8
	0x03381CE8 MOV X0, X22
	0x03381CEC MOV W1, W26
	0x03381CF0 MOV X2, X31
	0x03381CF4 BL 0x3240EF4
	0x03381CF8 CMP W28, 0x2
	0x03381CFC CSET W8, LT
	0x03381D00 TBNZ X19, 0x1F, 0x3381DC0
	0x03381D04 ORR W8, W8, W25, 0x0
	0x03381D08 TBNZ X8, 0x0, 0x3381DC0
	0x03381D0C LDUR W8, [X29 - 0x10]
	0x03381D10 CMP W19, W8
	0x03381D14 B.CS 0x3382158
	0x03381D18 LDUR X8, [X29 - 0x18]
	0x03381D1C LDR W8, [X8, W19, UXTW]
	0x03381D20 ADD W8, W8, 0x1
	0x03381D24 CMP W28, W8
	0x03381D28 B.NE 0x3381DC0
	0x03381D2C CBZ X21, 0x338215C
	0x03381D30 ADRP X8, 0x105C000
	0x03381D34 LDRB W8, [X8 + 0x4]
	0x03381D38 LDR X26, [X21 + 0x40]
	0x03381D3C CBNZ W8, 0x3381D58
	0x03381D40 ADRP X0, 0xDA1000
	0x03381D44 LDR X0, [X0 + 0x588]
	0x03381D48 BL 0x1C16CF4
	0x03381D4C MOVZ W8, 0x1
	0x03381D50 ADRP X9, 0x105C000
	0x03381D54 STRB W8, [X9 + 0x4]
	0x03381D58 CBZ X26, 0x338215C
	0x03381D5C LDR W8, [X26 + 0x10]
	0x03381D60 CMP W8, 0x1
	0x03381D64 B.NE 0x3381DAC
	0x03381D68 LDRSW X21, [X22 + 0x18]
	0x03381D6C LDR W8, [X22 + 0x10]
	0x03381D70 CMP W21, W8
	0x03381D74 B.GE 0x3381DAC
	0x03381D78 CMP W21, W8
	0x03381D7C B.CS 0x3382158
	0x03381D80 MOV W25, W24
	0x03381D84 LDR X24, [X22 + 0x8]
	0x03381D88 MOV X0, X26
	0x03381D8C MOV W1, W31
	0x03381D90 MOV X2, X31
	0x03381D94 BL 0x3222A1C
	0x03381D98 ADD W8, W21, 0x1
	0x03381D9C STRH W0, [X24, X21, LSL #1]
	0x03381DA0 STR W8, [X22 + 0x18]
	0x03381DA4 MOV W24, W25
	0x03381DA8 B 0x3381DBC
	0x03381DAC MOV X0, X22
	0x03381DB0 MOV X1, X26
	0x03381DB4 MOV X2, X31
	0x03381DB8 BL 0x3241020
	0x03381DBC SUB W19, W19, 0x1
	0x03381DC0 SUB W28, W28, 0x1
	0x03381DC4 B 0x3381FE4
	0x03381DC8 MOV X0, X22
	0x03381DCC MOV W1, W26
	0x03381DD0 MOV X2, X31
	0x03381DD4 BL 0x3240EF4
	0x03381DD8 CMP W27, W20
	0x03381DDC B.GE 0x3381FE0
	0x03381DE0 LDUR X8, [X29 - 0x58]
	0x03381DE4 MOV W25, W24
	0x03381DE8 ADD X21, X8, W27, 0x1, SXTW
	0x03381DEC LDUR X8, [X29 - 0x88]
	0x03381DF0 SUB X24, X8, W27, SXTW
	0x03381DF4 LDRH W8, [X21]
	0x03381DF8 CMP W8, 0x30
	0x03381DFC B.NE 0x3381EA4
	0x03381E00 ADRP X8, 0x105B000
	0x03381E04 LDRB W8, [X8 + 0x4E2]
	0x03381E08 CBNZ W8, 0x3381E24
	0x03381E0C ADRP X0, 0xDA1000
	0x03381E10 LDR X0, [X0 + 0x588]
	0x03381E14 BL 0x1C16CF4
	0x03381E18 ADRP X8, 0x105B000
	0x03381E1C MOVZ W9, 0x1
	0x03381E20 STRB W9, [X8 + 0x4E2]
	0x03381E24 LDRSW X8, [X22 + 0x18]
	0x03381E28 LDR W9, [X22 + 0x10]
	0x03381E2C CMP W8, W9
	0x03381E30 B.GE 0x3381E54
	0x03381E34 CMP W8, W9
	0x03381E38 B.CS 0x3382158
	0x03381E3C LDR X9, [X22 + 0x8]
	0x03381E40 ADD W10, W8, 0x1
	0x03381E44 MOVZ W11, 0x30
	0x03381E48 STRH W11, [X9, X8, LSL #1]
	0x03381E4C STR W10, [X22 + 0x18]
	0x03381E50 B 0x3381E64
	0x03381E54 MOVZ W1, 0x30
	0x03381E58 MOV X0, X22
	0x03381E5C MOV X2, X31
	0x03381E60 BL 0x3240EF4
	0x03381E64 ADD W27, W27, 0x1
	0x03381E68 SUBS X24, X24, 0x1
	0x03381E6C ADD X21, X21, 0x2
	0x03381E70 B.NE 0x3381DF4
	0x03381E74 B 0x3381FF8
	0x03381E78 STUR W31, [X29 - 0x7C]
	0x03381E7C MOV W28, W31
	0x03381E80 B 0x3381FE4
	0x03381E84 MOV X0, X22
	0x03381E88 MOV X1, X26
	0x03381E8C MOV X2, X31
	0x03381E90 BL 0x3241020
	0x03381E94 MOVZ W8, 0x1
	0x03381E98 MOV W28, W31
	0x03381E9C STUR W8, [X29 - 0x7C]
	0x03381EA0 B 0x3381FE4
	0x03381EA4 STUR W31, [X29 - 0x5C]
	0x03381EA8 B 0x3381940
	0x03381EAC LDUR X9, [X29 - 0x58]
	0x03381EB0 LDRH W9, [X9, W8, SXTW]
	0x03381EB4 CMP W9, 0x30
	0x03381EB8 B.NE 0x3381F04
	0x03381EBC MOV W9, W31
	0x03381EC0 MOV W5, W31
	0x03381EC4 CMP W8, W20
	0x03381EC8 B.GE 0x3381F70
	0x03381ECC LDUR W10, [X29 - 0x8C]
	0x03381ED0 ADD W10, W10, W9
	0x03381ED4 SUB W10, W10, W11
	0x03381ED8 LDUR X11, [X29 - 0x58]
	0x03381EDC LDRH W11, [X11, W8, SXTW]
	0x03381EE0 CMP W11, 0x30
	0x03381EE4 B.NE 0x3381F70
	0x03381EE8 ADD W8, W8, 0x1
	0x03381EEC CMP W20, W8
	0x03381EF0 ADD W9, W9, 0x1
	0x03381EF4 B.NE 0x3381ED8
	0x03381EF8 MOV W9, W10
	0x03381EFC MOV W27, W20
	0x03381F00 B 0x3381F74
	0x03381F04 ADRP X8, 0x105B000
	0x03381F08 LDRB W8, [X8 + 0x4E2]
	0x03381F0C CBNZ W8, 0x3381F28
	0x03381F10 ADRP X0, 0xDA1000
	0x03381F14 LDR X0, [X0 + 0x588]
	0x03381F18 BL 0x1C16CF4
	0x03381F1C ADRP X8, 0x105B000
	0x03381F20 MOVZ W9, 0x1
	0x03381F24 STRB W9, [X8 + 0x4E2]
	0x03381F28 LDRSW X8, [X22 + 0x18]
	0x03381F2C LDR W9, [X22 + 0x10]
	0x03381F30 CMP W8, W9
	0x03381F34 B.GE 0x3381F54
	0x03381F38 CMP W8, W9
	0x03381F3C B.CS 0x3382158
	0x03381F40 LDR X9, [X22 + 0x8]
	0x03381F44 ADD W10, W8, 0x1
	0x03381F48 STRH W26, [X9, X8, LSL #1]
	0x03381F4C STR W10, [X22 + 0x18]
	0x03381F50 B 0x3381F64
	0x03381F54 MOV X0, X22
	0x03381F58 MOV W1, W26
	0x03381F5C MOV X2, X31
	0x03381F60 BL 0x3240EF4
	0x03381F64 MOVZ W8, 0x1
	0x03381F68 STUR W8, [X29 - 0x5C]
	0x03381F6C B 0x3381FE4
	0x03381F70 MOV W27, W8
	0x03381F74 LDUR X8, [X29 - 0x30]
	0x03381F78 CMP W9, 0xA
	0x03381F7C MOVZ W10, 0xA
	0x03381F80 CSEL W4, W9, W10, LT
	0x03381F84 LDRH W8, [X8]
	0x03381F88 CBZ W8, 0x3381FA0
	0x03381F8C LDUR X8, [X29 - 0x70]
	0x03381F90 LDUR W9, [X29 - 0x34]
	0x03381F94 LDR W8, [X8 + 0x4]
	0x03381F98 SUB W21, W8, W9
	0x03381F9C B 0x3381FA4
	0x03381FA0 MOV W21, W31
	0x03381FA4 ADRP X8, 0xDA7000
	0x03381FA8 LDR X8, [X8 + 0x78]
	0x03381FAC LDR X0, [X8]
	0x03381FB0 LDR W8, [X0 + 0xE0]
	0x03381FB4 CBNZ W8, 0x3381FCC
	0x03381FB8 STUR W5, [X29 - 0x38]
	0x03381FBC MOV W25, W4
	0x03381FC0 BL 0x1C16DFC
	0x03381FC4 LDUR W5, [X29 - 0x38]
	0x03381FC8 MOV W4, W25
	0x03381FCC LDUR X1, [X29 - 0x48]
	0x03381FD0 MOV X0, X22
	0x03381FD4 MOV W2, W21
	0x03381FD8 MOV W3, W26
	0x03381FDC BL 0x3386FA0
	0x03381FE0 STUR W31, [X29 - 0x5C]
	0x03381FE4 CMP W27, W20
	0x03381FE8 STUR W24, [X29 - 0x4C]
	0x03381FEC MOV W8, W27
	0x03381FF0 STUR W27, [X29 - 0x38]
	0x03381FF4 B.LT 0x3381604
	0x03381FF8 LDUR X8, [X29 - 0x68]
	0x03381FFC LDR X8, [X8 + 0x28]
	0x03382000 LDUR X9, [X29 - 0x8]
	0x03382004 CMP X8, X9
	0x03382008 B.NE 0x3382160
	0x0338200C ADD X31, X29, 0x0
	0x03382010 LDP X20, X19, [X31 + 0x50]
	0x03382014 LDP X22, X21, [X31 + 0x40]
	0x03382018 LDP X24, X23, [X31 + 0x30]
	0x0338201C LDP X26, X25, [X31 + 0x20]
	0x03382020 LDP X28, X27, [X31 + 0x10]
	0x03382024 LDP X29, X30, [X31], #0x60
	0x03382028 RET

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X25, 0x105C000
	013 Move W8, [X25+4055]
	014 Move W24, W5
	015 Move X19, X4
	016 Move W22, W3
	017 Move W23, W2
	018 Move X20, X1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0xDA8000
	025 Move X0, [X0+120]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X25+4055], W8
	029 And W8, W23, 0xFFFF
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract W8, W8, 67
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X9, -41852928
	034 Add X9, X9, 2072
	035 NotImplemented "Instruction ADR not yet implemented."
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Add X10, X10, X11
	038 CallNoReturn X10
	039 Subtract W8, W8, 99
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X9, -41852928
	042 Add X9, X9, 2044
	043 NotImplemented "Instruction ADR not yet implemented."
	044 NotImplemented "Instruction LDRH not yet implemented."
	045 Add X10, X10, X11
	046 CallNoReturn X10
	047 Move TEMP, X22
	048 And TEMP, TEMP, -2147483648
	049 Compare TEMP, -2147483648
	050 JumpIfNotEqual {54}
	051 Compare X19, 0
	052 JumpIfEqual {409}
	053 Move W22, [X19+176]
	054 Move X8, 0xDA8000
	055 Move X8, [X8+120]
	056 Move W23, [X20+4]
	057 Move X0, [X8]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Add W1, W23, W22
	063 Move X0, X20
	064 Call Number.RoundNumber, X0, X1
	065 Move X0, X21
	066 Move X1, X20
	067 Move W2, W22
	068 Move W3, W22
	069 Move X4, X19
	070 Move X20, [X31+80]
	071 Move X19, [X31+88]
	072 Move X22, [X31+64]
	073 Move X21, [X31+72]
	074 Move X24, [X31+48]
	075 Move X23, [X31+56]
	076 Move X26, [X31+32]
	077 Move X25, [X31+40]
	078 Move X30, [X31+16]
	079 Move X27, [X31+24]
	080 Add X31, X31, 96
	081 Call Number.FormatCurrency, X0, X1, X2, X3, X4
	082 Return 
	083 Move X25, 0xDA8000
	084 Move X25, [X25+120]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move W9, 7
	087 NotImplemented "Instruction CSINC not yet implemented."
	088 Move X0, [X25]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Move X0, X20
	094 Move W1, W22
	095 Call Number.RoundNumber, X0, X1
	096 Move X0, X20
	097 Move X1, X31
	098 Call NumberBuffer.get_sign, X0
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {280}
	103 Compare X19, 0
	104 JumpIfEqual {409}
	105 Move X26, 0x105D000
	106 Move W8, [X26+4]
	107 Move X24, [X19+48]
	108 Compare W8, 0
	109 JumpIfNotEqual {115}
	110 Move X0, 0xDA2000
	111 Move X0, [X0+1416]
	112 Call 0x1C17CF4
	113 Move W8, 1
	114 Move [X26+4], W8
	115 Compare X24, 0
	116 JumpIfEqual {409}
	117 Move W8, [X24+16]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 NotImplemented "Instruction LDRSW not yet implemented."
	120 Move W8, [X21+16]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X27, [X21+8]
	124 Move X0, X24
	125 Move W1, W31
	126 Move X2, X31
	127 Call String.get_Chars, X0, X1
	128 Add W8, W26, 1
	129 NotImplemented "Instruction STRH not yet implemented."
	130 Move [X21+24], W8
	131 Move TEMP, X22
	132 And TEMP, TEMP, -2147483648
	133 Compare TEMP, -2147483648
	134 JumpIfNotEqual {138}
	135 Compare X19, 0
	136 JumpIfEqual {409}
	137 Move W22, [X19+172]
	138 Move X24, 0xDA8000
	139 Move X24, [X24+120]
	140 Move W23, [X20+4]
	141 Move X0, [X24]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Add W1, W23, W22
	147 Move X0, X20
	148 Call Number.RoundNumber, X0, X1
	149 Move X0, X20
	150 Move X1, X31
	151 Call NumberBuffer.get_sign, X0
	152 Move TEMP, X0
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfNotEqual {274}
	156 Compare X19, 0
	157 JumpIfEqual {409}
	158 Move X25, 0x105D000
	159 Move W8, [X25+4]
	160 Move X23, [X19+48]
	161 Compare W8, 0
	162 JumpIfNotEqual {168}
	163 Move X0, 0xDA2000
	164 Move X0, [X0+1416]
	165 Call 0x1C17CF4
	166 Move W8, 1
	167 Move [X25+4], W8
	168 Compare X23, 0
	169 JumpIfEqual {409}
	170 Move W8, [X23+16]
	171 NotImplemented "Instruction CMP not yet implemented."
	172 NotImplemented "Instruction LDRSW not yet implemented."
	173 Move W8, [X21+16]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X26, [X21+8]
	177 Move X0, X23
	178 Move W1, W31
	179 Move X2, X31
	180 Call String.get_Chars, X0, X1
	181 Add W8, W25, 1
	182 NotImplemented "Instruction STRH not yet implemented."
	183 Move [X21+24], W8
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Add W31, W22, 1
	186 Move TEMP, X24
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {332}
	190 Move X0, X20
	191 Move X1, X31
	192 Call NumberBuffer.get_digits, X0
	193 NotImplemented "Instruction LDRH not yet implemented."
	194 Compare W8, 0
	195 JumpIfNotEqual {200}
	196 Move X0, X20
	197 Move W1, W31
	198 Move X2, X31
	199 Call NumberBuffer.set_sign, X0, X1
	200 Move W24, 1
	201 Move W22, 29
	202 Move TEMP, X22
	203 And TEMP, TEMP, -2147483648
	204 Compare TEMP, -2147483648
	205 JumpIfNotEqual {209}
	206 Compare X19, 0
	207 JumpIfEqual {409}
	208 Move W22, [X19+172]
	209 Move X8, 0xDA8000
	210 Move X8, [X8+120]
	211 Move W23, [X20+4]
	212 Move X0, [X8]
	213 Move W8, [X0+224]
	214 Compare W8, 0
	215 JumpIfNotEqual {217}
	216 Call 0x1C17DFC
	217 Add W1, W23, W22
	218 Move X0, X20
	219 Call Number.RoundNumber, X0, X1
	220 Move X0, X21
	221 Move X1, X20
	222 Move W3, W22
	223 Move X4, X19
	224 Move X20, [X31+80]
	225 Move X19, [X31+88]
	226 Move X22, [X31+64]
	227 Move X21, [X31+72]
	228 Move X24, [X31+48]
	229 Move X23, [X31+56]
	230 Move X26, [X31+32]
	231 Move X25, [X31+40]
	232 Move X30, [X31+16]
	233 Move X27, [X31+24]
	234 Add X31, X31, 96
	235 Call Number.FormatNumber, X0, X1, X2, X3, X4
	236 Return 
	237 Move TEMP, X22
	238 And TEMP, TEMP, -2147483648
	239 Compare TEMP, -2147483648
	240 JumpIfNotEqual {244}
	241 Compare X19, 0
	242 JumpIfEqual {409}
	243 Move W22, [X19+200]
	244 Move W8, [X20+4]
	245 Add W23, W8, 2
	246 Move [X20+4], W23
	247 Move X8, 0xDA8000
	248 Move X8, [X8+120]
	249 Move X0, [X8]
	250 Move W8, [X0+224]
	251 Compare W8, 0
	252 JumpIfNotEqual {254}
	253 Call 0x1C17DFC
	254 Add W1, W23, W22
	255 Move X0, X20
	256 Call Number.RoundNumber, X0, X1
	257 Move X0, X21
	258 Move X1, X20
	259 Move W3, W22
	260 Move X4, X19
	261 Move X20, [X31+80]
	262 Move X19, [X31+88]
	263 Move X22, [X31+64]
	264 Move X21, [X31+72]
	265 Move X24, [X31+48]
	266 Move X23, [X31+56]
	267 Move X26, [X31+32]
	268 Move X25, [X31+40]
	269 Move X30, [X31+16]
	270 Move X27, [X31+24]
	271 Add X31, X31, 96
	272 Call Number.FormatPercent, X0, X1, X2, X3, X4
	273 Return 
	274 Compare X19, 0
	275 JumpIfNotEqual {307}
	276 Move X0, X21
	277 Move X1, X24
	278 Move X2, X31
	279 Call ValueStringBuilder.AppendSlow, X0, X1
	280 Move X0, [X25]
	281 Move W8, [X0+224]
	282 Compare W8, 0
	283 JumpIfNotEqual {285}
	284 Call 0x1C17DFC
	285 Move X0, X21
	286 Move X1, X20
	287 Move W3, W22
	288 Move X4, X19
	289 Move W5, W23
	290 Move X20, [X31+80]
	291 Move X19, [X31+88]
	292 Move X22, [X31+64]
	293 Move X21, [X31+72]
	294 Move X24, [X31+48]
	295 Move X23, [X31+56]
	296 Move X26, [X31+32]
	297 Move X25, [X31+40]
	298 Move X30, [X31+16]
	299 Move X27, [X31+24]
	300 Add X31, X31, 96
	301 Call Number.FormatScientific, X0, X1, X2, X3, X4, X5
	302 Return 
	303 Move X0, X21
	304 Move X1, X23
	305 Move X2, X31
	306 Call ValueStringBuilder.AppendSlow, X0, X1
	307 Move X0, [X24]
	308 Move X19, [X19+56]
	309 Move W8, [X0+224]
	310 Compare W8, 0
	311 JumpIfNotEqual {313}
	312 Call 0x1C17DFC
	313 Move X0, X21
	314 Move X1, X20
	315 Move W3, W22
	316 Move X5, X31
	317 Move X6, X19
	318 Move X7, X31
	319 Call Number.FormatFixed, X0, X1, X2, X3, X4, X5, X6, X7
	320 Move X20, [X31+80]
	321 Move X19, [X31+88]
	322 Move X22, [X31+64]
	323 Move X21, [X31+72]
	324 Move X24, [X31+48]
	325 Move X23, [X31+56]
	326 Move X26, [X31+32]
	327 Move X25, [X31+40]
	328 Move X30, [X31+16]
	329 Move X27, [X31+24]
	330 Add X31, X31, 96
	331 Return 
	332 Move W22, [X20]
	333 Move X8, 0xDA8000
	334 Move X8, [X8+120]
	335 Move X0, [X8]
	336 Move W8, [X0+224]
	337 Compare W8, 0
	338 JumpIfNotEqual {340}
	339 Call 0x1C17DFC
	340 Move X0, X20
	341 Move W1, W22
	342 Call Number.RoundNumber, X0, X1
	343 Move W24, W31
	344 Move X0, X20
	345 Move X1, X31
	346 Call NumberBuffer.get_sign, X0
	347 Move TEMP, X0
	348 And TEMP, TEMP, 1
	349 Compare TEMP, 1
	350 JumpIfNotEqual {383}
	351 Compare X19, 0
	352 JumpIfEqual {409}
	353 Move X26, 0x105D000
	354 Move W8, [X26+4]
	355 Move X25, [X19+48]
	356 Compare W8, 0
	357 JumpIfNotEqual {363}
	358 Move X0, 0xDA2000
	359 Move X0, [X0+1416]
	360 Call 0x1C17CF4
	361 Move W8, 1
	362 Move [X26+4], W8
	363 Compare X25, 0
	364 JumpIfEqual {409}
	365 Move W8, [X25+16]
	366 NotImplemented "Instruction CMP not yet implemented."
	367 NotImplemented "Instruction LDRSW not yet implemented."
	368 Move W8, [X21+16]
	369 NotImplemented "Instruction CMP not yet implemented."
	370 NotImplemented "Instruction CMP not yet implemented."
	371 Move X27, [X21+8]
	372 Move X0, X25
	373 Move W1, W31
	374 Move X2, X31
	375 Call String.get_Chars, X0, X1
	376 Add W8, W26, 1
	377 NotImplemented "Instruction STRH not yet implemented."
	378 Move [X21+24], W8
	379 Move X0, X21
	380 Move X1, X25
	381 Move X2, X31
	382 Call ValueStringBuilder.AppendSlow, X0, X1
	383 Move X8, 0xDA8000
	384 Move X8, [X8+120]
	385 Move X0, [X8]
	386 Move W8, [X0+224]
	387 Compare W8, 0
	388 JumpIfNotEqual {390}
	389 Call 0x1C17DFC
	390 Subtract W5, W23, 2
	391 Move X0, X21
	392 Move X1, X20
	393 Move W3, W22
	394 Move X4, X19
	395 Move W6, W24
	396 Move X20, [X31+80]
	397 Move X19, [X31+88]
	398 Move X22, [X31+64]
	399 Move X21, [X31+72]
	400 Move X24, [X31+48]
	401 Move X23, [X31+56]
	402 Move X26, [X31+32]
	403 Move X25, [X31+40]
	404 Move X30, [X31+16]
	405 Move X27, [X31+24]
	406 Add X31, X31, 96
	407 Call Number.FormatGeneral, X0, X1, X2, X3, X4, X5, X6
	408 Return 
	409 Call 0x1C17F20
	410 Move X0, 0xDA0000
	411 Move X0, [X0+3080]
	412 Call 0x1C17D08
	413 Call 0x1C17F10
	414 Move X19, X0
	415 Move X0, 0xDA8000
	416 Move X0, [X0+1392]
	417 Call 0x1C17D08
	418 Move X1, X0
	419 Move X0, X19
	420 Move X2, X31
	421 Call FormatException..ctor, X0, X1
	422 Move X0, 0xDA9000
	423 Move X0, [X0+4032]
	424 Call 0x1C17D08
	425 Move X1, X0
	426 Move X0, X19
	427 Call 0x1C17DEC
	428 Call 0x1C17F28

Method: System.Void NumberToStringFormat(ref System.Text.ValueStringBuilder sb, ref System.Number/NumberBuffer number, System.ReadOnlySpan`1<System.Char> format, System.Globalization.NumberFormatInfo info)

Disassembly:
	0x0338202C MOV W27, W31
	0x03382030 LDUR W9, [X29 - 0x4C]
	0x03382034 MOVN W19, 0x0
	0x03382038 AND W9, W9, W9, 0x1F
	0x0338203C ADD W9, W9, W28
	0x03382040 CMP W10, W9
	0x03382044 CSEL W10, W10, W9, GT
	0x03382048 CBZ W27, 0x3381514
	0x0338204C CMP W10, W27
	0x03382050 B.LE 0x3381514
	0x03382054 MOV W19, W31
	0x03382058 MOV W24, W31
	0x0338205C SUB W11, W8, 0x1
	0x03382060 MOVZ W1, 0x4
	0x03382064 MOV W26, W27
	0x03382068 STUR X12, [X29 - 0x58]
	0x0338206C CMP W19, W1
	0x03382070 B.LT 0x3382104
	0x03382074 ADRP X8, 0xD72000
	0x03382078 LDR X8, [X8 + 0xE58]
	0x0338207C UBFM W1, W1, 0x1F, 0x1E
	0x03382080 MOV X23, X20
	0x03382084 MOV W20, W10
	0x03382088 LDR X0, [X8]
	0x0338208C MOV X21, X22
	0x03382090 MOV W22, W19
	0x03382094 MOV W19, W11
	0x03382098 BL 0x1C16D6C
	0x0338209C ADRP X8, 0xDA5000
	0x033820A0 LDR X8, [X8 + 0x8E0]
	0x033820A4 MOV X25, X0
	0x033820A8 LDR X1, [X8]
	0x033820AC BL 0x25FC3C4
	0x033820B0 ADRP X8, 0xDA5000
	0x033820B4 LDR X8, [X8 + 0x8D0]
	0x033820B8 MOV X2, X0
	0x033820BC MOV X4, X1
	0x033820C0 SUB X0, X29, 0x18
	0x033820C4 LDR X3, [X8]
	0x033820C8 MOV X1, X2
	0x033820CC MOV X2, X4
	0x033820D0 BL 0x25FBE98
	0x033820D4 ADRP X8, 0xDA5000
	0x033820D8 LDR X8, [X8 + 0x8E0]
	0x033820DC MOV X0, X25
	0x033820E0 LDR X1, [X8]
	0x033820E4 BL 0x25FC3C4
	0x033820E8 LDUR X12, [X29 - 0x58]
	0x033820EC MOV W11, W19
	0x033820F0 MOV W19, W22
	0x033820F4 MOV X22, X21
	0x033820F8 MOV W10, W20
	0x033820FC MOV X20, X23
	0x03382100 STP X0, X1, [X29 - 0x18]
	0x03382104 CMP W19, W1
	0x03382108 B.CS 0x3382158
	0x0338210C CMP W24, W11
	0x03382110 STR W27, [X0, W19, SXTW]
	0x03382114 B.GE 0x3382134
	0x03382118 LDR W8, [X12 + 0x18]
	0x0338211C SXTW X9, W24
	0x03382120 ADD X24, X9, 0x1
	0x03382124 CMP W24, W8
	0x03382128 B.CS 0x3382158
	0x0338212C ADD X8, X12, X24, 0x2, LSL
	0x03382130 LDR W26, [X8 + 0x20]
	0x03382134 CBZ W26, 0x3382150
	0x03382138 ADD W27, W26, W27
	0x0338213C CMP W10, W27
	0x03382140 B.LE 0x3382150
	0x03382144 LDUR W1, [X29 - 0x10]
	0x03382148 ADD W19, W19, 0x1
	0x0338214C B 0x338206C
	0x03382150 LDUR X26, [X29 - 0x70]
	0x03382154 B 0x3381514
	0x03382158 BL 0x1C16F28
	0x0338215C BL 0x1C16F20
	0x03382160 BL 0x3EB1B20
	0x03382164 STP X29, X30, [X31 - 0x60]!
	0x03382168 STP X28, X27, [X31 + 0x10]
	0x0338216C STP X26, X25, [X31 + 0x20]
	0x03382170 STP X24, X23, [X31 + 0x30]
	0x03382174 STP X22, X21, [X31 + 0x40]
	0x03382178 STP X20, X19, [X31 + 0x50]
	0x0338217C ADD X29, X31, 0x0
	0x03382180 SUB X31, X31, 0xF0
	0x03382184 STP X6, X7, [X29 - 0xE0]
	0x03382188 STUR X5, [X29 - 0xE8]
	0x0338218C MRS X28, 0xC000
	0x03382190 LDR X8, [X28 + 0x28]
	0x03382194 ADRP X27, 0x105A000
	0x03382198 ADRP X19, 0xDA6000
	0x0338219C MOV X22, X4
	0x033821A0 STUR X8, [X29 - 0x18]
	0x033821A4 LDRB W8, [X27 + 0xFB5]
	0x033821A8 LDR X19, [X19 + 0x78]
	0x033821AC MOV X23, X3
	0x033821B0 MOV X24, X2
	0x033821B4 MOV X25, X1
	0x033821B8 MOV X26, X0
	0x033821BC SUB X20, X29, 0xA0
	0x033821C0 TBNZ X8, 0x0, 0x33821E4
	0x033821C4 ADRP X0, 0xDA6000
	0x033821C8 LDR X0, [X0 + 0x78]
	0x033821CC BL 0x1C16CF4
	0x033821D0 ADRP X0, 0xDA0000
	0x033821D4 LDR X0, [X0 + 0x4E8]
	0x033821D8 BL 0x1C16CF4
	0x033821DC MOVZ W8, 0x1
	0x033821E0 STRB W8, [X27 + 0xFB5]
	0x033821E4 LDR X0, [X19]
	0x033821E8 MOVI V0.2D, 0x0
	0x033821EC STUR W31, [X29 - 0xA4]
	0x033821F0 STUR V0, [X20 + 0x6A]
	0x033821F4 STP V0, V0, [X29 - 0x50]
	0x033821F8 STP V0, V0, [X29 - 0x70]
	0x033821FC STP V0, V0, [X29 - 0x90]
	0x03382200 STUR V0, [X29 - 0xA0]
	0x03382204 STP V0, V0, [X29 - 0xD0]
	0x03382208 LDR W8, [X0 + 0xE0]
	0x0338220C CBNZ W8, 0x3382214
	0x03382210 BL 0x1C16DFC
	0x03382214 SUB X2, X29, 0xA4
	0x03382218 MOV X0, X24
	0x0338221C MOV X1, X23
	0x03382220 BL 0x338071C
	0x03382224 MOV W27, W0
	0x03382228 AND W21, W0, 0xFFFF
	0x0338222C MOVI V0.2D, 0x0
	0x03382230 SUB X2, X29, 0xA0
	0x03382234 MOV X0, X26
	0x03382238 MOV X1, X25
	0x0338223C STP V0, V0, [X29 - 0xA0]
	0x03382240 STP V0, V0, [X29 - 0x80]
	0x03382244 STP V0, V0, [X29 - 0x60]
	0x03382248 STUR V0, [X29 - 0x40]
	0x0338224C STUR V0, [X20 + 0x6A]
	0x03382250 BL 0x3380860
	0x03382254 ADD X8, X31, 0x0
	0x03382258 SUB X1, X8, 0x40
	0x0338225C ADD X31, X1, 0x0
	0x03382260 MOVI V0.2D, 0x0
	0x03382264 SUB X0, X29, 0xD0
	0x03382268 MOVZ W2, 0x20
	0x0338226C MOV X3, X31
	0x03382270 STP V0, V0, [X8 - 0x20]
	0x03382274 STP V0, V0, [X8 - 0x40]
	0x03382278 BL 0x3240C88
	0x0338227C CBZ W21, 0x33822B4
	0x03382280 LDR X0, [X19]
	0x03382284 LDUR W23, [X29 - 0xA4]
	0x03382288 LDR W8, [X0 + 0xE0]
	0x0338228C CBNZ W8, 0x3382294
	0x03382290 BL 0x1C16DFC
	0x03382294 SUB X0, X29, 0xD0
	0x03382298 SUB X1, X29, 0xA0
	0x0338229C MOVZ W5, 0x1
	0x033822A0 MOV W2, W27
	0x033822A4 MOV W3, W23
	0x033822A8 MOV X4, X22
	0x033822AC BL 0x3380A9C
	0x033822B0 B 0x33822DC
	0x033822B4 LDR X0, [X19]
	0x033822B8 LDR W8, [X0 + 0xE0]
	0x033822BC CBNZ W8, 0x33822C4
	0x033822C0 BL 0x1C16DFC
	0x033822C4 SUB X0, X29, 0xD0
	0x033822C8 SUB X1, X29, 0xA0
	0x033822CC MOV X2, X24
	0x033822D0 MOV X3, X23
	0x033822D4 MOV X4, X22
	0x033822D8 BL 0x338102C
	0x033822DC LDP X1, X2, [X29 - 0xE8]
	0x033822E0 LDUR X3, [X29 - 0xD8]
	0x033822E4 SUB X0, X29, 0xD0
	0x033822E8 MOV X4, X31
	0x033822EC BL 0x3240D90
	0x033822F0 LDR X8, [X28 + 0x28]
	0x033822F4 LDUR X9, [X29 - 0x18]
	0x033822F8 CMP X8, X9
	0x033822FC B.NE 0x3382324
	0x03382300 AND W0, W0, 0x1
	0x03382304 ADD X31, X29, 0x0
	0x03382308 LDP X20, X19, [X31 + 0x50]
	0x0338230C LDP X22, X21, [X31 + 0x40]
	0x03382310 LDP X24, X23, [X31 + 0x30]
	0x03382314 LDP X26, X25, [X31 + 0x20]
	0x03382318 LDP X28, X27, [X31 + 0x10]
	0x0338231C LDP X29, X30, [X31], #0x60
	0x03382320 RET
	0x03382324 BL 0x3EB1B20
	0x03382328 CMP W2, 0x1
	0x0338232C B.PL 0x3382334
	0x03382330 CBZ W1, 0x3382370
	0x03382334 MOVZ W8, 0xCCCD
	0x03382338 SUB W10, W2, 0x2
	0x0338233C MOVK W8, 0xCCCC0000
	0x03382340 MOVN W9, 0x9
	0x03382344 MOV W12, W10
	0x03382348 UMADDL X10, X1, X8, X31
	0x0338234C MOV W11, W1
	0x03382350 UBFM X1, X10, 0x23, 0x3F
	0x03382354 MADD W10, W1, W9, W11
	0x03382358 ADD W10, W10, 0x30
	0x0338235C STRH W10, [X0 - 0x2]!
	0x03382360 SUB W10, W12, 0x1
	0x03382364 TBZ X12, 0x1F, 0x3382344
	0x03382368 CMP W11, 0x9
	0x0338236C B.HI 0x3382344
	0x03382370 RET
	0x03382374 STR D8, [X31 - 0x40]!
	0x03382378 STP X29, X30, [X31 + 0x8]
	0x0338237C STR X23, [X31 + 0x18]
	0x03382380 STP X22, X21, [X31 + 0x20]
	0x03382384 STP X20, X19, [X31 + 0x30]
	0x03382388 ADD X29, X31, 0x8
	0x0338238C SUB X31, X31, 0x30
	0x03382390 MRS X22, 0xC000
	0x03382394 LDR X8, [X22 + 0x28]
	0x03382398 ADRP X21, 0x105A000
	0x0338239C MOV X19, X1
	0x033823A0 MOV X20, X0
	0x033823A4 STUR X8, [X29 - 0x10]
	0x033823A8 LDRB W8, [X21 + 0xFB7]
	0x033823AC MOV V8.16B, V0.16B
	0x033823B0 TBNZ X8, 0x0, 0x33823D4
	0x033823B4 ADRP X0, 0xDA6000
	0x033823B8 LDR X0, [X0 + 0x78]
	0x033823BC BL 0x1C16CF4
	0x033823C0 ADRP X0, 0xDA0000
	0x033823C4 LDR X0, [X0 + 0x4E8]
	0x033823C8 BL 0x1C16CF4
	0x033823CC MOVZ W8, 0x1
	0x033823D0 STRB W8, [X21 + 0xFB7]
	0x033823D4 ADD X8, X31, 0x0
	0x033823D8 MOVI V0.2D, 0x0
	0x033823DC SUB X1, X8, 0x40
	0x033823E0 STUR V0, [X29 - 0x28]
	0x033823E4 STUR V0, [X29 - 0x38]
	0x033823E8 ADD X31, X1, 0x0
	0x033823EC SUB X0, X29, 0x38
	0x033823F0 MOVZ W2, 0x20
	0x033823F4 MOV X3, X31
	0x033823F8 STP V0, V0, [X8 - 0x20]
	0x033823FC STP V0, V0, [X8 - 0x40]
	0x03382400 BL 0x3240C88
	0x03382404 ADRP X21, 0x1057000
	0x03382408 LDRB W8, [X21 + 0x762]
	0x0338240C CBNZ W8, 0x3382424
	0x03382410 ADRP X0, 0xD98000
	0x03382414 LDR X0, [X0 + 0x290]
	0x03382418 BL 0x1C16CF4
	0x0338241C MOVZ W8, 0x1
	0x03382420 STRB W8, [X21 + 0x762]
	0x03382424 ADRP X23, 0xDA6000
	0x03382428 LDR X23, [X23 + 0x78]
	0x0338242C CBZ X20, 0x3382448
	0x03382430 MOV X0, X20
	0x03382434 MOV X1, X31
	0x03382438 BL 0x3225708
	0x0338243C LDR W20, [X20 + 0x10]
	0x03382440 MOV X21, X0
	0x03382444 B 0x338244C
	0x03382448 MOV X21, X31
	0x0338244C LDR X0, [X23]
	0x03382450 LDR W8, [X0 + 0xE0]
	0x03382454 CBNZ W8, 0x338245C
	0x03382458 BL 0x1C16DFC
	0x0338245C SUB X0, X29, 0x38
	0x03382460 MOV V0.16B, V8.16B
	0x03382464 MOV X1, X21
	0x03382468 MOV X2, X20
	0x0338246C MOV X3, X19
	0x03382470 BL 0x33824B4
	0x03382474 CBNZ X0, 0x3382484
	0x03382478 SUB X0, X29, 0x38
	0x0338247C MOV X1, X31
	0x03382480 BL 0x3240CC4
	0x03382484 LDR X8, [X22 + 0x28]
	0x03382488 LDUR X9, [X29 - 0x10]
	0x0338248C CMP X8, X9
	0x03382490 B.NE 0x33824B0
	0x03382494 SUB X31, X29, 0x8
	0x03382498 LDP X20, X19, [X31 + 0x30]
	0x0338249C LDP X22, X21, [X31 + 0x20]
	0x033824A0 LDR X23, [X31 + 0x18]
	0x033824A4 LDP X29, X30, [X31 + 0x8]
	0x033824A8 LDR V8, [X31], #0x40
	0x033824AC RET
	0x033824B0 BL 0x3EB1B20
	0x033824B4 SUB X31, X31, 0x100
	0x033824B8 STP D9, D8, [X31 + 0xA0]
	0x033824BC STR X30, [X31 + 0xB0]
	0x033824C0 STP X26, X25, [X31 + 0xC0]
	0x033824C4 STP X24, X23, [X31 + 0xD0]
	0x033824C8 STP X22, X21, [X31 + 0xE0]
	0x033824CC STP X20, X19, [X31 + 0xF0]
	0x033824D0 MRS X25, 0xC000
	0x033824D4 LDR X8, [X25 + 0x28]
	0x033824D8 ADRP X23, 0x105A000
	0x033824DC ADRP X26, 0xDA6000
	0x033824E0 MOV X19, X3
	0x033824E4 STR X8, [X31 + 0x98]
	0x033824E8 LDRB W8, [X23 + 0xFB9]
	0x033824EC LDR X26, [X26 + 0x78]
	0x033824F0 MOV X21, X2
	0x033824F4 MOV X22, X1
	0x033824F8 MOV V8.16B, V0.16B
	0x033824FC MOV X20, X0
	0x03382500 TBNZ X8, 0x0, 0x3382518
	0x03382504 ADRP X0, 0xDA6000
	0x03382508 LDR X0, [X0 + 0x78]
	0x0338250C BL 0x1C16CF4
	0x03382510 MOVZ W8, 0x1
	0x03382514 STRB W8, [X23 + 0xFB9]
	0x03382518 LDR X0, [X26]
	0x0338251C MOVI V0.2D, 0x0
	0x03382520 STR W31, [X31 + 0xC]
	0x03382524 STUR V0, [X31 + 0x7A]
	0x03382528 STP V0, V0, [X31 + 0x60]
	0x0338252C STP V0, V0, [X31 + 0x40]
	0x03382530 STP V0, V0, [X31 + 0x20]
	0x03382534 STR V0, [X31 + 0x1]
	0x03382538 LDR W8, [X0 + 0xE0]
	0x0338253C CBNZ W8, 0x3382544
	0x03382540 BL 0x1C16DFC
	0x03382544 ADD X2, X31, 0xC
	0x03382548 MOV X0, X22
	0x0338254C MOV X1, X21
	0x03382550 BL 0x338071C
	0x03382554 AND W8, W0, 0xFFFF
	0x03382558 MOV W23, W0
	0x0338255C MOVI V0.2D, 0x0
	0x03382560 CMP W8, 0x52
	0x03382564 STP V0, V0, [X31 + 0x10]
	0x03382568 STP V0, V0, [X31 + 0x30]
	0x0338256C STP V0, V0, [X31 + 0x50]
	0x03382570 STR V0, [X31 + 0x7]
	0x03382574 STUR V0, [X31 + 0x7A]
	0x03382578 B.HI 0x338259C
	0x0338257C CMP W8, 0x45
	0x03382580 B.EQ 0x338264C
	0x03382584 CMP W8, 0x47
	0x03382588 B.EQ 0x3382634
	0x0338258C CMP W8, 0x52
	0x03382590 B.EQ 0x33825B4
	0x03382594 MOVZ W24, 0xF
	0x03382598 B 0x3382660
	0x0338259C CMP W8, 0x65
	0x033825A0 B.EQ 0x338264C
	0x033825A4 CMP W8, 0x67
	0x033825A8 B.EQ 0x3382634
	0x033825AC CMP W8, 0x72
	0x033825B0 B.NE 0x3382594
	0x033825B4 LDR X0, [X26]
	0x033825B8 LDR W8, [X0 + 0xE0]
	0x033825BC CBNZ W8, 0x33825C4
	0x033825C0 BL 0x1C16DFC
	0x033825C4 ADD X1, X31, 0x10
	0x033825C8 MOVZ W0, 0xF
	0x033825CC MOV V0.16B, V8.16B
	0x033825D0 BL 0x33829D0
	0x033825D4 LDR W8, [X31 + 0x14]
	0x033825D8 MOVN W9, 0x80000000
	0x033825DC CMP W8, W9
	0x033825E0 B.EQ 0x3382720
	0x033825E4 MOVZ W9, 0x80000000
	0x033825E8 CMP W8, W9
	0x033825EC B.EQ 0x338269C
	0x033825F0 LDR X0, [X26]
	0x033825F4 LDR W8, [X0 + 0xE0]
	0x033825F8 CBNZ W8, 0x3382600
	0x033825FC BL 0x1C16DFC
	0x03382600 ADD X0, X31, 0x10
	0x03382604 BL 0x3382DB0
	0x03382608 LDR X0, [X26]
	0x0338260C MOV V9.16B, V0.16B
	0x03382610 LDR W8, [X0 + 0xE0]
	0x03382614 CBNZ W8, 0x338261C
	0x03382618 BL 0x1C16DFC
	0x0338261C ADD X1, X31, 0x10
	0x03382620 FCMP D9, D8
	0x03382624 B.NE 0x338273C
	0x03382628 MOVZ W2, 0x47
	0x0338262C MOVZ W3, 0xF
	0x03382630 B 0x3382754
	0x03382634 LDR W8, [X31 + 0xC]
	0x03382638 MOVZ W9, 0xF
	0x0338263C CMP W8, 0xF
	0x03382640 MOVZ W8, 0x11
	0x03382644 CSEL W24, W8, W9, GT
	0x03382648 B 0x3382660
	0x0338264C LDR W8, [X31 + 0xC]
	0x03382650 MOVZ W9, 0x11
	0x03382654 CMP W8, 0xF
	0x03382658 MOVZ W8, 0xF
	0x0338265C CSEL W24, W8, W9, LT
	0x03382660 LDR X0, [X26]
	0x03382664 LDR W8, [X0 + 0xE0]
	0x03382668 CBNZ W8, 0x3382670
	0x0338266C BL 0x1C16DFC
	0x03382670 ADD X1, X31, 0x10
	0x03382674 MOV V0.16B, V8.16B
	0x03382678 MOV W0, W24
	0x0338267C BL 0x33829D0
	0x03382680 LDR W8, [X31 + 0x14]
	0x03382684 MOVN W9, 0x80000000
	0x03382688 CMP W8, W9
	0x0338268C B.EQ 0x33826A8
	0x03382690 MOVZ W9, 0x80000000
	0x03382694 CMP W8, W9
	0x03382698 B.NE 0x33826C4
	0x0338269C CBZ X19, 0x3382798
	0x033826A0 LDR X0, [X19 + 0x68]
	0x033826A4 B 0x3382768
	0x033826A8 ADD X0, X31, 0x10
	0x033826AC MOV X1, X31
	0x033826B0 BL 0x338C38C
	0x033826B4 CBZ X19, 0x3382798
	0x033826B8 TBZ X0, 0x0, 0x3382734
	0x033826BC LDR X0, [X19 + 0x78]
	0x033826C0 B 0x3382768
	0x033826C4 ANDS W31, W23, 0xFFFF
	0x033826C8 B.EQ 0x33826F4
	0x033826CC LDR X0, [X26]
	0x033826D0 LDR W21, [X31 + 0xC]
	0x033826D4 LDR W8, [X0 + 0xE0]
	0x033826D8 CBNZ W8, 0x33826E0
	0x033826DC BL 0x1C16DFC
	0x033826E0 ADD X1, X31, 0x10
	0x033826E4 MOV X0, X20
	0x033826E8 MOV W2, W23
	0x033826EC MOV W3, W21
	0x033826F0 B 0x3382758
	0x033826F4 LDR X0, [X26]
	0x033826F8 LDR W8, [X0 + 0xE0]
	0x033826FC CBNZ W8, 0x3382704
	0x03382700 BL 0x1C16DFC
	0x03382704 ADD X1, X31, 0x10
	0x03382708 MOV X0, X20
	0x0338270C MOV X2, X22
	0x03382710 MOV X3, X21
	0x03382714 MOV X4, X19
	0x03382718 BL 0x338102C
	0x0338271C B 0x3382764
	0x03382720 ADD X0, X31, 0x10
	0x03382724 MOV X1, X31
	0x03382728 BL 0x338C38C
	0x0338272C CBZ X19, 0x3382798
	0x03382730 TBNZ X0, 0x0, 0x33826BC
	0x03382734 LDR X0, [X19 + 0x70]
	0x03382738 B 0x3382768
	0x0338273C MOVZ W0, 0x11
	0x03382740 MOV V0.16B, V8.16B
	0x03382744 BL 0x33829D0
	0x03382748 ADD X1, X31, 0x10
	0x0338274C MOVZ W2, 0x47
	0x03382750 MOVZ W3, 0x11
	0x03382754 MOV X0, X20
	0x03382758 MOV X4, X19
	0x0338275C MOV W5, W31
	0x03382760 BL 0x3380A9C
	0x03382764 MOV X0, X31
	0x03382768 LDR X8, [X25 + 0x28]
	0x0338276C LDR X9, [X31 + 0x98]
	0x03382770 CMP X8, X9
	0x03382774 B.NE 0x338279C
	0x03382778 LDP X20, X19, [X31 + 0xF0]
	0x0338277C LDP X22, X21, [X31 + 0xE0]
	0x03382780 LDP X24, X23, [X31 + 0xD0]
	0x03382784 LDP X26, X25, [X31 + 0xC0]
	0x03382788 LDR X30, [X31 + 0xB0]
	0x0338278C LDP D9, D8, [X31 + 0xA0]
	0x03382790 ADD X31, X31, 0x100
	0x03382794 RET
	0x03382798 BL 0x1C16F20
	0x0338279C BL 0x3EB1B20
	0x033827A0 STR D8, [X31 - 0x60]!
	0x033827A4 STP X29, X30, [X31 + 0x8]
	0x033827A8 STR X27, [X31 + 0x18]
	0x033827AC STP X26, X25, [X31 + 0x20]
	0x033827B0 STP X24, X23, [X31 + 0x30]
	0x033827B4 STP X22, X21, [X31 + 0x40]
	0x033827B8 STP X20, X19, [X31 + 0x50]
	0x033827BC ADD X29, X31, 0x8
	0x033827C0 SUB X31, X31, 0x30
	0x033827C4 MRS X25, 0xC000
	0x033827C8 LDR X8, [X25 + 0x28]
	0x033827CC ADRP X27, 0x105A000
	0x033827D0 ADRP X26, 0xDA6000
	0x033827D4 MOV X19, X5
	0x033827D8 STUR X8, [X29 - 0x10]
	0x033827DC LDRB W8, [X27 + 0xFB8]
	0x033827E0 LDR X26, [X26 + 0x78]
	0x033827E4 MOV X20, X4
	0x033827E8 MOV X21, X3
	0x033827EC MOV X22, X2
	0x033827F0 MOV X23, X1
	0x033827F4 MOV X24, X0
	0x033827F8 MOV V8.16B, V0.16B
	0x033827FC TBNZ X8, 0x0, 0x3382820
	0x03382800 ADRP X0, 0xDA6000
	0x03382804 LDR X0, [X0 + 0x78]
	0x03382808 BL 0x1C16CF4
	0x0338280C ADRP X0, 0xDA0000
	0x03382810 LDR X0, [X0 + 0x4E8]
	0x03382814 BL 0x1C16CF4
	0x03382818 MOVZ W8, 0x1
	0x0338281C STRB W8, [X27 + 0xFB8]
	0x03382820 ADD X8, X31, 0x0
	0x03382824 MOVI V0.2D, 0x0
	0x03382828 SUB X1, X8, 0x40
	0x0338282C STUR V0, [X29 - 0x28]
	0x03382830 STUR V0, [X29 - 0x38]
	0x03382834 ADD X31, X1, 0x0
	0x03382838 SUB X0, X29, 0x38
	0x0338283C MOVZ W2, 0x20
	0x03382840 MOV X3, X31
	0x03382844 STP V0, V0, [X8 - 0x20]
	0x03382848 STP V0, V0, [X8 - 0x40]
	0x0338284C BL 0x3240C88
	0x03382850 LDR X0, [X26]
	0x03382854 LDR W8, [X0 + 0xE0]
	0x03382858 CBNZ W8, 0x3382860
	0x0338285C BL 0x1C16DFC
	0x03382860 SUB X0, X29, 0x38
	0x03382864 MOV V0.16B, V8.16B
	0x03382868 MOV X1, X24
	0x0338286C MOV X2, X23
	0x03382870 MOV X3, X22
	0x03382874 BL 0x33824B4
	0x03382878 CBZ X0, 0x33828A8
	0x0338287C MOV X22, X0
	0x03382880 LDR X0, [X26]
	0x03382884 LDR W8, [X0 + 0xE0]
	0x03382888 CBNZ W8, 0x3382890
	0x0338288C BL 0x1C16DFC
	0x03382890 MOV X0, X22
	0x03382894 MOV X1, X21
	0x03382898 MOV X2, X20
	0x0338289C MOV X3, X19
	0x033828A0 BL 0x33828FC
	0x033828A4 B 0x33828C0
	0x033828A8 SUB X0, X29, 0x38
	0x033828AC MOV X1, X21
	0x033828B0 MOV X2, X20
	0x033828B4 MOV X3, X19
	0x033828B8 MOV X4, X31
	0x033828BC BL 0x3240D90
	0x033828C0 LDR X8, [X25 + 0x28]
	0x033828C4 LDUR X9, [X29 - 0x10]
	0x033828C8 CMP X8, X9
	0x033828CC B.NE 0x33828F8
	0x033828D0 AND W0, W0, 0x1
	0x033828D4 SUB X31, X29, 0x8
	0x033828D8 LDP X20, X19, [X31 + 0x50]
	0x033828DC LDP X22, X21, [X31 + 0x40]
	0x033828E0 LDP X24, X23, [X31 + 0x30]
	0x033828E4 LDP X26, X25, [X31 + 0x20]
	0x033828E8 LDR X27, [X31 + 0x18]
	0x033828EC LDP X29, X30, [X31 + 0x8]
	0x033828F0 LDR V8, [X31], #0x60
	0x033828F4 RET
	0x033828F8 BL 0x3EB1B20
	0x033828FC SUB X31, X31, 0x40
	0x03382900 STP X30, X23, [X31 + 0x10]
	0x03382904 STP X22, X21, [X31 + 0x20]
	0x03382908 STP X20, X19, [X31 + 0x30]
	0x0338290C ADRP X23, 0x105A000
	0x03382910 LDRB W8, [X23 + 0xFBD]
	0x03382914 MOV X19, X3
	0x03382918 MOV X21, X2
	0x0338291C MOV X22, X1
	0x03382920 MOV X20, X0
	0x03382924 TBNZ X8, 0x0, 0x338293C
	0x03382928 ADRP X0, 0xDA8000
	0x0338292C LDR X0, [X0 + 0xFC8]
	0x03382930 BL 0x1C16CF4
	0x03382934 MOVZ W8, 0x1
	0x03382938 STRB W8, [X23 + 0xFBD]
	0x0338293C ADRP X23, 0x105A000
	0x03382940 LDRB W8, [X23 + 0x3AB]
	0x03382944 CBNZ W8, 0x338295C
	0x03382948 ADRP X0, 0xD98000
	0x0338294C LDR X0, [X0 + 0x290]
	0x03382950 BL 0x1C16CF4
	0x03382954 MOVZ W8, 0x1
	0x03382958 STRB W8, [X23 + 0x3AB]
	0x0338295C ADRP X23, 0xDA8000
	0x03382960 LDR X23, [X23 + 0xFC8]
	0x03382964 CBZ X20, 0x338297C
	0x03382968 MOV X0, X20
	0x0338296C MOV X1, X31
	0x03382970 BL 0x3225708
	0x03382974 LDR W8, [X20 + 0x10]
	0x03382978 B 0x3382984
	0x0338297C MOV X0, X31
	0x03382980 MOV X8, X31
	0x03382984 LDR X3, [X23]
	0x03382988 STP X0, X8, [X31]
	0x0338298C ADD X0, X31, 0x0
	0x03382990 MOV X1, X22
	0x03382994 MOV X2, X21
	0x03382998 BL 0x25BECB8
	0x0338299C TBZ X0, 0x0, 0x33829AC
	0x033829A0 CBZ X20, 0x33829CC
	0x033829A4 LDR W8, [X20 + 0x10]
	0x033829A8 B 0x33829B0
	0x033829AC MOV W8, W31
	0x033829B0 STR W8, [X19]
	0x033829B4 LDP X20, X19, [X31 + 0x30]
	0x033829B8 LDP X22, X21, [X31 + 0x20]
	0x033829BC LDP X30, X23, [X31 + 0x10]
	0x033829C0 AND W0, W0, 0x1
	0x033829C4 ADD X31, X31, 0x40
	0x033829C8 RET
	0x033829CC BL 0x1C16F20
	0x033829D0 STR D8, [X31 - 0x50]!
	0x033829D4 STP X29, X30, [X31 + 0x8]
	0x033829D8 STR X25, [X31 + 0x18]
	0x033829DC STP X24, X23, [X31 + 0x20]
	0x033829E0 STP X22, X21, [X31 + 0x30]
	0x033829E4 STP X20, X19, [X31 + 0x40]
	0x033829E8 ADD X29, X31, 0x8
	0x033829EC SUB X31, X31, 0x10
	0x033829F0 MRS X24, 0xC000
	0x033829F4 LDR X8, [X24 + 0x28]
	0x033829F8 ADRP X21, 0x105A000
	0x033829FC MOV X19, X1
	0x03382A00 MOV W20, W0
	0x03382A04 STUR X8, [X29 - 0x10]
	0x03382A08 LDRB W8, [X21 + 0xFFD]
	0x03382A0C MOV V8.16B, V0.16B
	0x03382A10 TBNZ X8, 0x0, 0x3382A28
	0x03382A14 ADRP X0, 0xD9C000
	0x03382A18 LDR X0, [X0 + 0xD78]
	0x03382A1C BL 0x1C16CF4
	0x03382A20 MOVZ W8, 0x1
	0x03382A24 STRB W8, [X21 + 0xFFD]
	0x03382A28 FMOV X25, D8
	0x03382A2C ORN X8, X31, X25, 0x0
	0x03382A30 ANDS X31, X8, 0x7FFFFFFFFFFFFFFF
	0x03382A34 UBFM X23, X25, 0x3F, 0x3F
	0x03382A38 STR W20, [X19]
	0x03382A3C B.NE 0x3382A7C
	0x03382A40 AND X8, X25, 0x7FFFFFFF
	0x03382A44 MOVZ X9, 0x7FF00000
	0x03382A48 CMP X8, X9
	0x03382A4C MOVZ W8, 0x80000000
	0x03382A50 CSINV W8, W8, W8, HI
	0x03382A54 MOV X0, X19
	0x03382A58 MOV W1, W23
	0x03382A5C MOV X2, X31
	0x03382A60 STR W8, [X19 + 0x4]
	0x03382A64 BL 0x338C39C
	0x03382A68 MOV X0, X19
	0x03382A6C MOV X1, X31
	0x03382A70 BL 0x338C3A8
	0x03382A74 STRH W31, [X0]
	0x03382A78 B 0x3382D7C
	0x03382A7C ADD X8, X31, 0x0
	0x03382A80 SUB X22, X8, 0x40
	0x03382A84 ADD X31, X22, 0x0
	0x03382A88 MOVI V0.2D, 0x0
	0x03382A8C MOV X0, X19
	0x03382A90 MOV X1, X31
	0x03382A94 STURH W31, [X8 - 0x10]
	0x03382A98 STP V0, V0, [X8 - 0x30]
	0x03382A9C STUR V0, [X8 - 0x40]
	0x03382AA0 BL 0x338C3A8
	0x03382AA4 MOV X21, X0
	0x03382AA8 MOV X0, X19
	0x03382AAC MOV W1, W23
	0x03382AB0 MOV X2, X31
	0x03382AB4 STR W31, [X19 + 0x4]
	0x03382AB8 BL 0x338C39C
	0x03382ABC STRH W31, [X21]
	0x03382AC0 CBZ X25, 0x3382B9C
	0x03382AC4 ADD X8, X31, 0x0
	0x03382AC8 SUB X23, X8, 0x10
	0x03382ACC ADD X31, X23, 0x0
	0x03382AD0 MOVZ W9, 0x25
	0x03382AD4 STUR W31, [X8 - 0x10]
	0x03382AD8 STURH W31, [X8 - 0xC]
	0x03382ADC STURB W9, [X8 - 0x10]
	0x03382AE0 ORR X8, X23, 0x1
	0x03382AE4 MOVZ W9, 0x2E
	0x03382AE8 STRB W9, [X8]
	0x03382AEC ORR X8, X23, 0x3
	0x03382AF0 MOVZ W9, 0x34
	0x03382AF4 STRB W9, [X8]
	0x03382AF8 ORR X8, X23, 0x3
	0x03382AFC MOVZ W9, 0x30
	0x03382B00 STRB W9, [X8]
	0x03382B04 ORR X8, X23, 0x7
	0x03382B08 MOVZ W9, 0x65
	0x03382B0C STRB W9, [X8]
	0x03382B10 MOVZ W8, 0x5
	0x03382B14 ORR X8, X23, X8, 0x0
	0x03382B18 STRB W31, [X8]
	0x03382B1C ADRP X8, 0xD9C000
	0x03382B20 LDR X8, [X8 + 0xD78]
	0x03382B24 LDR X0, [X8]
	0x03382B28 LDR W8, [X0 + 0xE0]
	0x03382B2C CBNZ W8, 0x3382B34
	0x03382B30 BL 0x1C16DFC
	0x03382B34 MOVZ W2, 0x32
	0x03382B38 MOV V0.16B, V8.16B
	0x03382B3C MOV X0, X23
	0x03382B40 MOV X1, X22
	0x03382B44 MOV X3, X31
	0x03382B48 BL 0x3209FDC
	0x03382B4C SUB W8, W0, 0x1
	0x03382B50 MOV W10, W8
	0x03382B54 LDRB W8, [X22, W8, SXTW]
	0x03382B58 CMP W10, 0x0
	0x03382B5C CSET W9, GT
	0x03382B60 CMP W8, 0x65
	0x03382B64 SUB W8, W10, 0x1
	0x03382B68 B.EQ 0x3382B74
	0x03382B6C CMP W10, 0x0
	0x03382B70 B.GT 0x3382B50
	0x03382B74 ADD W11, W8, 0x2
	0x03382B78 LDRB W12, [X22, W11, SXTW]
	0x03382B7C SXTW X10, W10
	0x03382B80 CMP W12, 0x2B
	0x03382B84 B.EQ 0x3382C08
	0x03382B88 CMP W12, 0x2D
	0x03382B8C B.NE 0x3382C0C
	0x03382B90 ADD W11, W8, 0x3
	0x03382B94 MOVN W8, 0x0
	0x03382B98 B 0x3382C10
	0x03382B9C CMP W20, 0x1
	0x03382BA0 B.LT 0x3382C00
	0x03382BA4 ADRP X9, 0xFFFFFFFFFD768000
	0x03382BA8 MOV W8, W20
	0x03382BAC LDR V0, [X9 + 0x79]
	0x03382BB0 ADD X10, X8, 0x1
	0x03382BB4 SUB X11, X8, 0x1
	0x03382BB8 AND X8, X10, 0x0
	0x03382BBC MOVZ W10, 0x2
	0x03382BC0 UNIMPLEMENTED
	0x03382BC4 MOVZ W9, 0x30
	0x03382BC8 UNIMPLEMENTED
	0x03382BCC MOV X10, X21
	0x00000000 INVALID
	0x03382BD4 UNIMPLEMENTED
	0x03382BD8 FMOV W11, S3
	0x03382BDC TBZ X11, 0x0, 0x3382BE4
	0x03382BE0 STRH W9, [X10]
	0x03382BE4 UNIMPLEMENTED
	0x03382BE8 TBZ X11, 0x0, 0x3382BF0
	0x03382BEC STRH W9, [X10 + 0x2]
	0x00000000 INVALID
	0x03382BF4 SUBS X8, X8, 0x2
	0x03382BF8 ADD X10, X10, 0x4
	0x03382BFC B.NE 0x3382BD0
	0x03382C00 STRH W31, [X21, W20, SXTW]
	0x03382C04 B 0x3382D7C
	0x03382C08 ADD W11, W8, 0x3
	0x03382C0C MOVZ W8, 0x1
	0x03382C10 CMP W11, W0
	0x03382C14 B.GE 0x3382C44
	0x03382C18 SXTW X14, W0
	0x03382C1C MOV W13, W31
	0x03382C20 ADD X12, X22, W11, SXTW
	0x03382C24 SUB X11, X14, W11, SXTW
	0x03382C28 MOVZ W14, 0xA
	0x03382C2C LDRB W15, [X12], #0x1
	0x03382C30 SUBS X11, X11, 0x1
	0x03382C34 MADD W13, W13, W14, W15
	0x03382C38 SUB W13, W13, 0x30
	0x03382C3C B.NE 0x3382C2C
	0x03382C40 B 0x3382C48
	0x03382C44 MOV W13, W31
	0x03382C48 MUL W8, W13, W8
	0x03382C4C MOV W12, W31
	0x03382C50 MOV X11, X31
	0x03382C54 ADD W13, W8, 0x1
	0x03382C58 CMP W10, 0x1
	0x03382C5C STR W13, [X19 + 0x4]
	0x03382C60 B.LT 0x3382CA4
	0x03382C64 CMP W20, 0x1
	0x03382C68 B.LT 0x3382CA4
	0x03382C6C MOV X11, X31
	0x03382C70 MOV W12, W31
	0x03382C74 LDRB W9, [X22, X11, LSL]
	0x03382C78 SUB W13, W9, 0x30
	0x03382C7C CMP W13, 0x9
	0x03382C80 B.HI 0x3382C8C
	0x03382C84 STRH W9, [X21, W12, SXTW]
	0x03382C88 ADD W12, W12, 0x1
	0x03382C8C ADD X11, X11, 0x1
	0x03382C90 CMP X11, X10
	0x03382C94 CSET W9, LT
	0x03382C98 B.GE 0x3382CA4
	0x03382C9C CMP W12, W20
	0x03382CA0 B.LT 0x3382C74
	0x03382CA4 CMP W12, W20
	0x03382CA8 ADD X10, X21, W12, 0x1, SXTW
	0x03382CAC B.GE 0x3382CDC
	0x03382CB0 SXTW X12, W12
	0x03382CB4 SXTW X13, W20
	0x03382CB8 SUB X13, X13, X12
	0x03382CBC ADD X12, X21, X12, 0x1, LSL
	0x03382CC0 MOVZ W14, 0x30
	0x03382CC4 ADD X12, X12, 0x2
	0x03382CC8 SUBS X13, X13, 0x1
	0x03382CCC STRH W14, [X10]
	0x03382CD0 MOV X10, X12
	0x03382CD4 B.NE 0x3382CC4
	0x03382CD8 MOV X10, X12
	0x03382CDC STRH W31, [X10]
	0x03382CE0 CBZ W9, 0x3382D7C
	0x03382CE4 LDRB W9, [X11, X22, LSL]
	0x03382CE8 CMP W9, 0x35
	0x03382CEC B.CC 0x3382D7C
	0x03382CF0 SUB W12, W20, 0x1
	0x03382CF4 ADD X9, X21, W12, 0x1, SXTW
	0x03382CF8 LDRH W10, [X9]
	0x03382CFC CMP W10, 0x39
	0x03382D00 CSET W11, EQ
	0x03382D04 B.NE 0x3382D54
	0x03382D08 CMP W12, 0x1
	0x03382D0C B.LT 0x3382D54
	0x03382D10 SUB W10, W20, 0x2
	0x03382D14 ADD X15, X21, W10, 0x1, SXTW
	0x03382D18 MOVZ W16, 0x30
	0x03382D1C MOV X14, X15
	0x03382D20 STRH W16, [X9]
	0x03382D24 LDRH W10, [X14], #0xFFFFFFFFFFFFFFFE
	0x03382D28 SUB W13, W12, 0x1
	0x03382D2C CMP W10, 0x39
	0x03382D30 CSET W11, EQ
	0x03382D34 B.NE 0x3382D4C
	0x03382D38 CMP W12, 0x1
	0x03382D3C MOV X9, X15
	0x03382D40 MOV X15, X14
	0x03382D44 MOV W12, W13
	0x03382D48 B.GT 0x3382D20
	0x03382D4C ADD X9, X14, 0x2
	0x03382D50 B 0x3382D58
	0x03382D54 MOV W13, W12
	0x03382D58 CBNZ W13, 0x3382D74
	0x03382D5C CBZ W11, 0x3382D74
	0x03382D60 MOVZ W10, 0x31
	0x03382D64 ADD W8, W8, 0x2
	0x03382D68 STRH W10, [X9]
	0x03382D6C STR W8, [X19 + 0x4]
	0x03382D70 B 0x3382D7C
	0x03382D74 ADD W8, W10, 0x1
	0x03382D78 STRH W8, [X9]
	0x03382D7C LDR X8, [X24 + 0x28]
	0x03382D80 LDUR X9, [X29 - 0x10]
	0x03382D84 CMP X8, X9
	0x03382D88 B.NE 0x3382DAC
	0x03382D8C SUB X31, X29, 0x8
	0x03382D90 LDP X20, X19, [X31 + 0x40]
	0x03382D94 LDP X22, X21, [X31 + 0x30]
	0x03382D98 LDP X24, X23, [X31 + 0x20]
	0x03382D9C LDR X25, [X31 + 0x18]
	0x03382DA0 LDP X29, X30, [X31 + 0x8]
	0x03382DA4 LDR V8, [X31], #0x50
	0x03382DA8 RET
	0x03382DAC BL 0x3EB1B20
	0x03382DB0 SUB X31, X31, 0x50
	0x03382DB4 STP X30, X25, [X31 + 0x10]
	0x03382DB8 STP X24, X23, [X31 + 0x20]
	0x03382DBC STP X22, X21, [X31 + 0x30]
	0x03382DC0 STP X20, X19, [X31 + 0x40]
	0x03382DC4 ADRP X20, 0x105A000
	0x03382DC8 LDRB W8, [X20 + 0xFFC]
	0x03382DCC MOV X19, X0
	0x03382DD0 TBNZ X8, 0x0, 0x3382DF4
	0x03382DD4 ADRP X0, 0xD71000
	0x03382DD8 LDR X0, [X0 + 0x5A8]
	0x03382DDC BL 0x1C16CF4
	0x03382DE0 ADRP X0, 0xDA6000
	0x03382DE4 LDR X0, [X0 + 0x78]
	0x03382DE8 BL 0x1C16CF4
	0x03382DEC MOVZ W8, 0x1
	0x03382DF0 STRB W8, [X20 + 0xFFC]
	0x03382DF4 MOV X0, X19
	0x03382DF8 MOV X1, X31
	0x03382DFC BL 0x338C3A8
	0x03382E00 MOV X1, X31
	0x03382E04 MOV X21, X0
	0x03382E08 BL 0x322DCA0
	0x03382E0C LDRH W8, [X21]
	0x03382E10 MOV W20, W0
	0x03382E14 MOV W23, W0
	0x03382E18 CMP W8, 0x30
	0x03382E1C B.NE 0x3382E30
	0x03382E20 LDRH W8, [X21 + 0x2]!
	0x03382E24 SUB W23, W23, 0x1
	0x03382E28 CMP W8, 0x30
	0x03382E2C B.EQ 0x3382E20
	0x03382E30 CBZ W23, 0x3382F70
	0x03382E34 ADRP X24, 0xD71000
	0x03382E38 LDR X24, [X24 + 0x5A8]
	0x03382E3C ADRP X22, 0xDA6000
	0x03382E40 LDR X0, [X24]
	0x03382E44 LDR W8, [X0 + 0xE0]
	0x03382E48 LDR X22, [X22 + 0x78]
	0x03382E4C CBNZ W8, 0x3382E54
	0x03382E50 BL 0x1C16DFC
	0x03382E54 LDR X0, [X22]
	0x03382E58 CMP W23, 0x9
	0x03382E5C MOVZ W9, 0x9
	0x03382E60 CSEL W25, W23, W9, LT
	0x03382E64 LDR W8, [X0 + 0xE0]
	0x03382E68 CBNZ W8, 0x3382E70
	0x03382E6C BL 0x1C16DFC
	0x03382E70 MOV X8, X21
	0x03382E74 LDRH W9, [X8], #0x2
	0x03382E78 ADD X10, X21, W25, 0x1, SXTW
	0x03382E7C SUB W23, W23, W25
	0x03382E80 CMP X8, X10
	0x03382E84 SUB W9, W9, 0x30
	0x03382E88 B.CS 0x3382EA4
	0x03382E8C MOVZ W11, 0xA
	0x03382E90 LDRH W12, [X8], #0x2
	0x03382E94 MADD W9, W9, W11, W12
	0x03382E98 CMP X8, X10
	0x03382E9C SUB W9, W9, 0x30
	0x03382EA0 B.CC 0x3382E90
	0x03382EA4 CMP W23, 0x0
	0x03382EA8 MOV W25, W9
	0x03382EAC B.LE 0x3382F78
	0x03382EB0 LDR X0, [X24]
	0x03382EB4 LDR W8, [X0 + 0xE0]
	0x03382EB8 CBNZ W8, 0x3382EC0
	0x03382EBC BL 0x1C16DFC
	0x03382EC0 LDR X0, [X22]
	0x03382EC4 CMP W23, 0x9
	0x03382EC8 MOVZ W9, 0x9
	0x03382ECC CSEL W24, W23, W9, LT
	0x03382ED0 LDR W8, [X0 + 0xE0]
	0x03382ED4 CBNZ W8, 0x3382EE0
	0x03382ED8 BL 0x1C16DFC
	0x03382EDC LDR X0, [X22]
	0x03382EE0 LDR X9, [X0 + 0xB8]
	0x03382EE4 LDR X8, [X9 + 0x30]
	0x03382EE8 CBZ X8, 0x3383288
	0x03382EEC LDR W11, [X8 + 0x18]
	0x03382EF0 SUB W10, W24, 0x1
	0x03382EF4 CMP W10, W11
	0x03382EF8 B.CS 0x338328C
	0x03382EFC LDR X9, [X9 + 0x38]
	0x03382F00 CBZ X9, 0x3383288
	0x03382F04 LDR W11, [X9 + 0x18]
	0x03382F08 SXTW X10, W10
	0x03382F0C CMP W10, W11
	0x03382F10 B.CS 0x338328C
	0x03382F14 ADD X9, X9, X10
	0x03382F18 ADD X8, X8, X10, 0x3, LSL
	0x03382F1C LDRB W9, [X9 + 0x20]
	0x03382F20 LDR X8, [X8 + 0x20]
	0x03382F24 LDRH W11, [X21 + 0x12]!
	0x03382F28 SUB W23, W23, W24
	0x03382F2C SUB W12, W31, W9
	0x03382F30 LSRV X8, X8, X12
	0x03382F34 ADD X9, X21, W24, 0x1, SXTW
	0x03382F38 ADD X10, X21, 0x2
	0x03382F3C AND X8, X8, 0x0
	0x03382F40 CMP X10, X9
	0x03382F44 MUL X8, X8, X25
	0x03382F48 SUB W11, W11, 0x30
	0x03382F4C B.CS 0x3382F68
	0x03382F50 MOVZ W12, 0xA
	0x03382F54 LDRH W13, [X10], #0x2
	0x03382F58 MADD W11, W11, W12, W13
	0x03382F5C CMP X10, X9
	0x03382F60 SUB W11, W11, 0x30
	0x03382F64 B.CC 0x3382F54
	0x03382F68 ADD X25, X8, W11, UXTW
	0x03382F6C B 0x3382F7C
	0x03382F70 FMOV D0, X31
	0x03382F74 B 0x3383270
	0x03382F78 LDR X0, [X22]
	0x03382F7C LDR W8, [X19 + 0x4]
	0x03382F80 LDR W9, [X0 + 0xE0]
	0x03382F84 SUB W10, W23, W20
	0x03382F88 ADD W23, W10, W8
	0x03382F8C CBNZ W9, 0x3382F94
	0x03382F90 BL 0x1C16DFC
	0x03382F94 CMP W23, 0x0
	0x03382F98 CSNEG W24, W23, W23, PL
	0x03382F9C CMP W24, 0x160
	0x03382FA0 B.GE 0x3383200
	0x03382FA4 UBFM X9, X25, 0x20, 0x3F
	0x03382FA8 UBFM X8, X25, 0x20, 0x1F
	0x03382FAC CMP X9, 0x0
	0x03382FB0 CSEL X8, X8, X25, EQ
	0x03382FB4 MOVZ W10, 0x40
	0x03382FB8 MOVZ W11, 0x20
	0x03382FBC UBFM X12, X8, 0x30, 0x3F
	0x03382FC0 CSEL W9, W11, W10, EQ
	0x03382FC4 UBFM X10, X8, 0x30, 0x2F
	0x03382FC8 CMP X12, 0x0
	0x03382FCC CSEL X8, X10, X8, EQ
	0x03382FD0 SUB W11, W9, 0x10
	0x03382FD4 UBFM X12, X8, 0x38, 0x3F
	0x03382FD8 CSEL W9, W11, W9, EQ
	0x03382FDC UBFM X10, X8, 0x38, 0x37
	0x03382FE0 CMP X12, 0x0
	0x03382FE4 CSEL X8, X10, X8, EQ
	0x03382FE8 SUB W11, W9, 0x8
	0x03382FEC UBFM X12, X8, 0x3C, 0x3F
	0x03382FF0 CSEL W9, W11, W9, EQ
	0x03382FF4 UBFM X10, X8, 0x3C, 0x3B
	0x03382FF8 CMP X12, 0x0
	0x03382FFC CSEL X8, X10, X8, EQ
	0x03383000 SUB W11, W9, 0x4
	0x03383004 UBFM X12, X8, 0x3E, 0x3F
	0x03383008 CSEL W9, W11, W9, EQ
	0x0338300C UBFM X10, X8, 0x3E, 0x3D
	0x03383010 CMP X12, 0x0
	0x03383014 SUB W11, W9, 0x2
	0x03383018 CSEL X8, X10, X8, EQ
	0x0338301C CSEL W9, W11, W9, EQ
	0x03383020 SBFM X10, X8, 0x3F, 0x3F
	0x03383024 ORN X11, X31, X8, 0x0
	0x03383028 ORN W10, W31, W10, 0x0
	0x0338302C UBFM X11, X11, 0x3F, 0x3F
	0x03383030 ADD W25, W9, W10
	0x03383034 LSLV X20, X8, X11
	0x03383038 ANDS W21, W24, 0xF
	0x0338303C STR W25, [X31 + 0xC]
	0x03383040 B.EQ 0x33830F0
	0x03383044 LDR X0, [X22]
	0x03383048 LDR W8, [X0 + 0xE0]
	0x0338304C CBNZ W8, 0x3383058
	0x03383050 BL 0x1C16DFC
	0x03383054 LDR X0, [X22]
	0x03383058 LDR X8, [X0 + 0xB8]
	0x0338305C LDR X9, [X8 + 0x38]
	0x03383060 CBZ X9, 0x3383288
	0x03383064 LDR W10, [X9 + 0x18]
	0x03383068 SUB W21, W21, 0x1
	0x0338306C CMP W21, W10
	0x03383070 B.CS 0x338328C
	0x03383074 ADD X9, X9, W21, UXTW
	0x00000000 INVALID
	0x0338307C MOVZ W10, 0x1
	0x03383080 CMP W23, 0x0
	0x03383084 SUB W10, W10, W9
	0x03383088 CSEL W9, W10, W9, LT
	0x0338308C ADD W9, W9, W25
	0x03383090 STR W9, [X31 + 0xC]
	0x03383094 LDR W9, [X0 + 0xE0]
	0x03383098 CBNZ W9, 0x33830A8
	0x0338309C BL 0x1C16DFC
	0x033830A0 LDR X0, [X22]
	0x033830A4 LDR X8, [X0 + 0xB8]
	0x033830A8 LDR X8, [X8 + 0x30]
	0x033830AC CBZ X8, 0x3383288
	0x033830B0 LDR W10, [X8 + 0x18]
	0x033830B4 SBFM W9, W23, 0x1F, 0x1F
	0x033830B8 AND W9, W9, 0xF
	0x033830BC ADD W9, W21, W9
	0x033830C0 CMP W9, W10
	0x033830C4 B.CS 0x338328C
	0x033830C8 ADD X8, X8, W9, 0x3, UXTW
	0x033830CC LDR W9, [X0 + 0xE0]
	0x033830D0 LDR X21, [X8 + 0x20]
	0x033830D4 CBNZ W9, 0x33830DC
	0x033830D8 BL 0x1C16DFC
	0x033830DC ADD X2, X31, 0xC
	0x033830E0 MOV X0, X20
	0x033830E4 MOV X1, X21
	0x033830E8 BL 0x338B3A8
	0x033830EC MOV X20, X0
	0x033830F0 SBFM W21, W24, 0x4, 0x1F
	0x033830F4 CBZ W21, 0x33831AC
	0x033830F8 LDR X0, [X22]
	0x033830FC LDR W8, [X0 + 0xE0]
	0x03383100 CBNZ W8, 0x338310C
	0x03383104 BL 0x1C16DFC
	0x03383108 LDR X0, [X22]
	0x0338310C LDR X8, [X0 + 0xB8]
	0x03383110 LDR X9, [X8 + 0x48]
	0x03383114 CBZ X9, 0x3383288
	0x03383118 LDR W10, [X9 + 0x18]
	0x0338311C SXTW X11, W21
	0x03383120 SUB X21, X11, 0x1
	0x03383124 CMP W21, W10
	0x03383128 B.CS 0x338328C
	0x0338312C ADD X9, X9, X21, 0x1, LSL
	0x03383130 LDRSH W9, [X9 + 0x20]
	0x03383134 LDR W10, [X31 + 0xC]
	0x03383138 MOVZ W11, 0x1
	0x0338313C CMP W23, 0x0
	0x03383140 SUB W11, W11, W9
	0x03383144 CSEL W9, W11, W9, LT
	0x03383148 ADD W9, W9, W10
	0x0338314C STR W9, [X31 + 0xC]
	0x03383150 LDR W9, [X0 + 0xE0]
	0x03383154 CBNZ W9, 0x3383164
	0x03383158 BL 0x1C16DFC
	0x0338315C LDR X0, [X22]
	0x03383160 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 144
	015 Move [X29-40], X2
	016 NotImplemented "Instruction MRS not yet implemented."
	017 Move [X29-104], X8
	018 Move X8, [X8+40]
	019 Move X19, 0x105B000
	020 Move X21, X4
	021 Move X20, X3
	022 Move [X29-8], X8
	023 Move W8, [X19+4056]
	024 Move X26, X1
	025 Move X22, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {56}
	030 Move X0, 0xD73000
	031 Move X0, [X0+3672]
	032 Call 0x1C17CF4
	033 Move X0, 0xDA1000
	034 Move X0, [X0+32]
	035 Call 0x1C17CF4
	036 Move X0, 0xDA7000
	037 Move X0, [X0+120]
	038 Call 0x1C17CF4
	039 Move X0, 0xDA1000
	040 Move X0, [X0+40]
	041 Call 0x1C17CF4
	042 Move X0, 0xDA6000
	043 Move X0, [X0+2256]
	044 Call 0x1C17CF4
	045 Move X0, 0xDA1000
	046 Move X0, [X0+352]
	047 Call 0x1C17CF4
	048 Move X0, 0xDA6000
	049 Move X0, [X0+2264]
	050 Call 0x1C17CF4
	051 Move X0, 0xDA6000
	052 Move X0, [X0+2272]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X19+4056], W8
	056 Move X0, X26
	057 Move X1, X31
	058 Move [X29-24], X31
	059 Move [X29-16], X31
	060 Call NumberBuffer.get_digits, X0
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 Move [X29-48], X0
	063 Compare W8, 0
	064 JumpIfEqual {69}
	065 Move X0, X26
	066 Move X1, X31
	067 Call NumberBuffer.get_sign, X0
	068 And W25, W0, 1
	069 Move W25, 2
	070 Move [X29-72], X21
	071 Move X8, 0xDA7000
	072 Move X8, [X8+120]
	073 Move X0, [X8]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 Move X1, X20
	080 Move W2, W25
	081 Call Number.FindSection, X0, X1
	082 Move X27, W20
	083 Move [X29-56], W31
	084 Move X8, 0xDA1000
	085 Move X8, [X8+32]
	086 Move W21, W0
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 Move X1, X20
	089 Move X2, [X8]
	090 Call MemoryMarshal.GetReference, X0
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X17, -41857024
	093 Move [X29-28], W31
	094 Move W28, W31
	095 Move W19, W31
	096 Move W16, W31
	097 Move W8, W31
	098 Move TEMP, 0x80000000
	099 Not TEMP
	100 Move W24, TEMP
	101 Move TEMP, 0
	102 Not TEMP
	103 Move W9, TEMP
	104 Move TEMP, 0
	105 Not TEMP
	106 Move W10, TEMP
	107 Move W13, W21
	108 Add X17, X17, 2100
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Compare W12, 0
	112 JumpIfEqual {209}
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Add W11, W13, 1
	115 Subtract W14, W12, 34
	116 NotImplemented "Instruction CMP not yet implemented."
	117 NotImplemented "Instruction ADR not yet implemented."
	118 Move W15, [X17]
	119 Add X13, X13, X15
	120 CallNoReturn X13
	121 Move X13, W11
	122 NotImplemented "Instruction CMP not yet implemented."
	123 NotImplemented "Instruction CSEL not yet implemented."
	124 Add X11, X0, W11
	125 NotImplemented "Instruction CMP not yet implemented."
	126 NotImplemented "Instruction LDRH not yet implemented."
	127 Compare W15, 0
	128 JumpIfEqual {132}
	129 Add X13, X13, 1
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Add X11, X11, 2
	132 Move W11, W13
	133 NotImplemented "Instruction CMP not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move W13, 0x2030
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Add W8, W8, 3
	138 NotImplemented "Instruction CMP not yet implemented."
	139 NotImplemented "Instruction LDRH not yet implemented."
	140 Add W13, W13, 2
	141 NotImplemented "Instruction CMP not yet implemented."
	142 NotImplemented "Instruction CSEL not yet implemented."
	143 NotImplemented "Instruction CMP not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 NotImplemented "Instruction LDRH not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Add W12, W13, 2
	148 NotImplemented "Instruction CMP not yet implemented."
	149 NotImplemented "Instruction LDRH not yet implemented."
	150 NotImplemented "Instruction CMP not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 NotImplemented "Instruction LDRH not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Add W11, W11, 1
	155 NotImplemented "Instruction CMP not yet implemented."
	156 NotImplemented "Instruction LDRH not yet implemented."
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move W19, 1
	159 Move TEMP, 0x80000000
	160 Not TEMP
	161 Move W12, TEMP
	162 NotImplemented "Instruction CMP not yet implemented."
	163 NotImplemented "Instruction LDUR not yet implemented."
	164 Add W28, W12, 1
	165 NotImplemented "Instruction CSEL not yet implemented."
	166 Move [X29-28], W28
	167 NotImplemented "Instruction LDUR not yet implemented."
	168 Add W12, W12, 1
	169 Move [X29-28], W12
	170 Add W8, W8, 2
	171 Move TEMP, X9
	172 And TEMP, TEMP, -2147483648
	173 Compare TEMP, -2147483648
	174 JumpIfNotEqual {197}
	175 NotImplemented "Instruction LDUR not yet implemented."
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move TEMP, X10
	178 And TEMP, TEMP, -2147483648
	179 Compare TEMP, -2147483648
	180 JumpIfEqual {194}
	181 NotImplemented "Instruction LDUR not yet implemented."
	182 Move W13, 1
	183 NotImplemented "Instruction CMP not yet implemented."
	184 NotImplemented "Instruction CSET not yet implemented."
	185 Or W16, W16, W10
	186 NotImplemented "Instruction LDUR not yet implemented."
	187 NotImplemented "Instruction CSINC not yet implemented."
	188 Move [X29-56], W10
	189 Move W10, W12
	190 NotImplemented "Instruction LDUR not yet implemented."
	191 NotImplemented "Instruction CMP not yet implemented."
	192 NotImplemented "Instruction CSEL not yet implemented."
	193 Move W11, W14
	194 Move W10, 1
	195 Move [X29-56], W10
	196 NotImplemented "Instruction LDUR not yet implemented."
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move W13, W11
	199 Move [X29-52], W31
	200 Move W19, W31
	201 Move W28, W31
	202 Move [X29-28], W31
	203 Move W8, W31
	204 Move W16, W31
	205 Move TEMP, 0x80000000
	206 Not TEMP
	207 Move W24, TEMP
	208 Move W19, 1
	209 NotImplemented "Instruction LDUR not yet implemented."
	210 NotImplemented "Instruction CMP not yet implemented."
	211 NotImplemented "Instruction CSEL not yet implemented."
	212 Move [X29-52], W9
	213 Move TEMP, X10
	214 And TEMP, TEMP, -2147483648
	215 Compare TEMP, -2147483648
	216 JumpIfEqual {222}
	217 NotImplemented "Instruction CMP not yet implemented."
	218 NotImplemented "Instruction LDUR not yet implemented."
	219 Subtract W9, W9, W9
	220 Add W8, W9, W8
	221 Move W16, 1
	222 NotImplemented "Instruction LDUR not yet implemented."
	223 Move [X29-60], W16
	224 NotImplemented "Instruction LDRH not yet implemented."
	225 Compare W9, 0
	226 JumpIfEqual {263}
	227 Move W9, [X26+4]
	228 And W31, W19, 1
	229 Add W8, W9, W8
	230 Move [X26+4], W8
	231 Move X9, 0xDA7000
	232 Move X9, [X9+120]
	233 NotImplemented "Instruction LDUR not yet implemented."
	234 NotImplemented "Instruction LDUR not yet implemented."
	235 Move X0, [X9]
	236 Subtract W10, W11, W10
	237 Add W8, W10, W8
	238 Move W9, [X0+224]
	239 NotImplemented "Instruction CSEL not yet implemented."
	240 Compare W9, 0
	241 JumpIfNotEqual {243}
	242 Call 0x1C17DFC
	243 Move X0, X26
	244 Move W1, W25
	245 Call Number.RoundNumber, X0, X1
	246 NotImplemented "Instruction LDUR not yet implemented."
	247 NotImplemented "Instruction LDRH not yet implemented."
	248 Compare W8, 0
	249 JumpIfNotEqual {262}
	250 Move X8, 0xDA7000
	251 Move X8, [X8+120]
	252 Move X0, [X8]
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 NotImplemented "Instruction LDUR not yet implemented."
	258 Move W2, 2
	259 Move X1, X20
	260 Call Number.FindSection, X0, X1
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Move [X29-56], W21
	263 Move X0, X26
	264 Move W1, W31
	265 Move X2, X31
	266 Move [X29-56], W21
	267 Call NumberBuffer.set_sign, X0, X1
	268 Move [X26+4], W31
	269 NotImplemented "Instruction LDUR not yet implemented."
	270 Subtract W8, W9, W24
	271 NotImplemented "Instruction CSEL not yet implemented."
	272 Subtract W8, W9, W28
	273 NotImplemented "Instruction CSEL not yet implemented."
	274 Move [X29-116], W8
	275 Move TEMP, X19
	276 And TEMP, TEMP, 1
	277 Compare TEMP, 1
	278 JumpIfNotEqual {284}
	279 NotImplemented "Instruction LDUR not yet implemented."
	280 NotImplemented "Instruction LDUR not yet implemented."
	281 Move W11, 1
	282 Move W28, W9
	283 Move [X29-76], W31
	284 Move W8, [X26+4]
	285 NotImplemented "Instruction LDUR not yet implemented."
	286 NotImplemented "Instruction LDUR not yet implemented."
	287 Move W11, W31
	288 Subtract W14, W8, W9
	289 Move [X29-76], W14
	290 NotImplemented "Instruction CSEL not yet implemented."
	291 Add X8, X31, 0
	292 Subtract X0, X8, 16
	293 Add X31, X0, 0
	294 Move X9, -42549248
	295 Move V0, [X9+976]
	296 Move [X8-16], X31
	297 Move [X8-8], X31
	298 Move [X29-24], X0
	299 Move [X29-112], X26
	300 Move [X29-16], D0
	301 Move [X29-120], W10
	302 Move [X29-92], W11
	303 Move TEMP, X13
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfNotEqual {321}
	307 Compare X12, 0
	308 JumpIfEqual {1072}
	309 Move X8, [X12+64]
	310 Compare X8, 0
	311 JumpIfEqual {1072}
	312 Move W8, [X8+16]
	313 NotImplemented "Instruction CMP not yet implemented."
	314 Move X12, [X12+16]
	315 Compare X12, 0
	316 JumpIfEqual {1072}
	317 Move W8, [X12+24]
	318 Compare W8, 0
	319 JumpIfEqual {997}
	320 Move W27, [X12+32]
	321 Move TEMP, 0
	322 Not TEMP
	323 Move W19, TEMP
	324 Move X0, X26
	325 Move X1, X31
	326 Call NumberBuffer.get_sign, X0
	327 NotImplemented "Instruction LDUR not yet implemented."
	328 NotImplemented "Instruction LDUR not yet implemented."
	329 Compare W8, 0
	330 JumpIfNotEqual {367}
	331 Move TEMP, X0
	332 And TEMP, TEMP, 1
	333 Compare TEMP, 1
	334 JumpIfNotEqual {367}
	335 Compare X9, 0
	336 JumpIfEqual {1072}
	337 Move X24, 0x105C000
	338 Move W8, [X24+4]
	339 Move X25, [X9+48]
	340 Compare W8, 0
	341 JumpIfNotEqual {347}
	342 Move X0, 0xDA1000
	343 Move X0, [X0+1416]
	344 Call 0x1C17CF4
	345 Move W8, 1
	346 Move [X24+4], W8
	347 Compare X25, 0
	348 JumpIfEqual {1072}
	349 Move W8, [X25+16]
	350 NotImplemented "Instruction CMP not yet implemented."
	351 NotImplemented "Instruction LDRSW not yet implemented."
	352 Move W8, [X22+16]
	353 NotImplemented "Instruction CMP not yet implemented."
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Move X24, [X22+8]
	356 Move X0, X25
	357 Move W1, W31
	358 Move X2, X31
	359 Call String.get_Chars, X0, X1
	360 Add W8, W27, 1
	361 NotImplemented "Instruction STRH not yet implemented."
	362 Move [X22+24], W8
	363 Move X0, X22
	364 Move X1, X25
	365 Move X2, X31
	366 Call ValueStringBuilder.AppendSlow, X0, X1
	367 Move X8, 0xDA1000
	368 Move X8, [X8+32]
	369 NotImplemented "Instruction LDUR not yet implemented."
	370 Move X1, X20
	371 Move X2, [X8]
	372 Call MemoryMarshal.GetReference, X0
	373 NotImplemented "Instruction LDUR not yet implemented."
	374 Move [X29-88], X0
	375 NotImplemented "Instruction CMP not yet implemented."
	376 NotImplemented "Instruction LDUR not yet implemented."
	377 NotImplemented "Instruction LDUR not yet implemented."
	378 Move [X29-124], W31
	379 Xor W8, W8, 1
	380 Move [X29-40], W8
	381 Subtract W8, W20, 2
	382 Move [X29-140], W8
	383 Move W8, W20
	384 Move X8, W8
	385 Move [X29-136], X8
	386 NotImplemented "Instruction LDUR not yet implemented."
	387 NotImplemented "Instruction LDUR not yet implemented."
	388 NotImplemented "Instruction LDRH not yet implemented."
	389 NotImplemented "Instruction CMP not yet implemented."
	390 Compare W26, 0
	391 JumpIfEqual {979}
	392 NotImplemented "Instruction LDUR not yet implemented."
	393 NotImplemented "Instruction CMP not yet implemented."
	394 NotImplemented "Instruction CMP not yet implemented."
	395 Move W8, W26
	396 Move W9, 1
	397 NotImplemented "Instruction LSLV not yet implemented."
	398 Move X9, 0x4008
	399 NotImplemented "Instruction MOVK not yet implemented."
	400 And X31, X8, X9
	401 NotImplemented "Instruction LDUR not yet implemented."
	402 NotImplemented "Instruction LDUR not yet implemented."
	403 Subtract W8, W28, W24
	404 Add W24, W24, 1
	405 Move [X29-60], W8
	406 Move X8, X23
	407 NotImplemented "Instruction LDRH not yet implemented."
	408 Move X10, 0x105B000
	409 Move W10, [X10+1250]
	410 Move W11, 48
	411 NotImplemented "Instruction CMP not yet implemented."
	412 NotImplemented "Instruction CSEL not yet implemented."
	413 NotImplemented "Instruction CSEL not yet implemented."
	414 Compare W10, 0
	415 JumpIfNotEqual {422}
	416 Move X0, 0xDA1000
	417 Move X0, [X0+1416]
	418 Call 0x1C17CF4
	419 Move X8, 0x105B000
	420 Move W9, 1
	421 Move [X8+1250], W9
	422 NotImplemented "Instruction LDRSW not yet implemented."
	423 Move W9, [X22+16]
	424 NotImplemented "Instruction CMP not yet implemented."
	425 NotImplemented "Instruction CMP not yet implemented."
	426 Move X9, [X22+8]
	427 Add W10, W8, 1
	428 NotImplemented "Instruction STRH not yet implemented."
	429 Move [X22+24], W10
	430 Move X0, X22
	431 Move W1, W27
	432 Move X2, X31
	433 Call ValueStringBuilder.GrowAndAppend, X0, X1
	434 NotImplemented "Instruction CMP not yet implemented."
	435 NotImplemented "Instruction CSET not yet implemented."
	436 Move TEMP, X19
	437 And TEMP, TEMP, -2147483648
	438 Compare TEMP, -2147483648
	439 JumpIfEqual {487}
	440 Or W8, W8, W25
	441 Move TEMP, X8
	442 And TEMP, TEMP, 1
	443 Compare TEMP, 1
	444 JumpIfEqual {487}
	445 NotImplemented "Instruction LDUR not yet implemented."
	446 NotImplemented "Instruction CMP not yet implemented."
	447 NotImplemented "Instruction LDUR not yet implemented."
	448 Move W8, [X8]
	449 Add W8, W8, 1
	450 NotImplemented "Instruction CMP not yet implemented."
	451 Compare X21, 0
	452 JumpIfEqual {1072}
	453 Move X8, 0x105C000
	454 Move W8, [X8+4]
	455 Move X27, [X21+64]
	456 Compare W8, 0
	457 JumpIfNotEqual {464}
	458 Move X0, 0xDA1000
	459 Move X0, [X0+1416]
	460 Call 0x1C17CF4
	461 Move W8, 1
	462 Move X9, 0x105C000
	463 Move [X9+4], W8
	464 Compare X27, 0
	465 JumpIfEqual {1072}
	466 Move W8, [X27+16]
	467 NotImplemented "Instruction CMP not yet implemented."
	468 NotImplemented "Instruction LDRSW not yet implemented."
	469 Move W8, [X22+16]
	470 NotImplemented "Instruction CMP not yet implemented."
	471 NotImplemented "Instruction CMP not yet implemented."
	472 Move X21, [X22+8]
	473 Move X0, X27
	474 Move W1, W31
	475 Move X2, X31
	476 Call String.get_Chars, X0, X1
	477 NotImplemented "Instruction STRH not yet implemented."
	478 NotImplemented "Instruction LDUR not yet implemented."
	479 Add W8, W25, 1
	480 Move [X22+24], W8
	481 Move X0, X22
	482 Move X1, X27
	483 Move X2, X31
	484 Call ValueStringBuilder.AppendSlow, X0, X1
	485 NotImplemented "Instruction LDUR not yet implemented."
	486 Subtract W19, W19, 1
	487 Subtract W24, W24, 1
	488 NotImplemented "Instruction CMP not yet implemented."
	489 Subtract W28, W28, 1
	490 NotImplemented "Instruction LDUR not yet implemented."
	491 Move W24, W31
	492 NotImplemented "Instruction LDUR not yet implemented."
	493 NotImplemented "Instruction LDUR not yet implemented."
	494 NotImplemented "Instruction CMP not yet implemented."
	495 Add W27, W8, 1
	496 Subtract W8, W26, 34
	497 NotImplemented "Instruction CMP not yet implemented."
	498 Move X11, -41857024
	499 Add X11, X11, 2116
	500 NotImplemented "Instruction ADR not yet implemented."
	501 NotImplemented "Instruction LDRH not yet implemented."
	502 Add X9, X9, X10
	503 CallNoReturn X9
	504 NotImplemented "Instruction CMP not yet implemented."
	505 NotImplemented "Instruction LDUR not yet implemented."
	506 Move [X29-60], W28
	507 Move [X29-76], W24
	508 NotImplemented "Instruction SBFM not yet implemented."
	509 NotImplemented "Instruction ORN not yet implemented."
	510 NotImplemented "Instruction LDUR not yet implemented."
	511 Add X28, X8, W27
	512 NotImplemented "Instruction LDUR not yet implemented."
	513 Subtract X25, X8, W27
	514 NotImplemented "Instruction LDRH not yet implemented."
	515 Compare W27, 0
	516 JumpIfEqual {768}
	517 NotImplemented "Instruction CMP not yet implemented."
	518 Move X8, 0x105B000
	519 Move W8, [X8+1250]
	520 Compare W8, 0
	521 JumpIfNotEqual {528}
	522 Move X0, 0xDA1000
	523 Move X0, [X0+1416]
	524 Call 0x1C17CF4
	525 Move X8, 0x105B000
	526 Move W9, 1
	527 Move [X8+1250], W9
	528 NotImplemented "Instruction LDRSW not yet implemented."
	529 Move W9, [X22+16]
	530 NotImplemented "Instruction CMP not yet implemented."
	531 NotImplemented "Instruction CMP not yet implemented."
	532 Move X9, [X22+8]
	533 Add W10, W8, 1
	534 NotImplemented "Instruction STRH not yet implemented."
	535 Move [X22+24], W10
	536 Move X0, X22
	537 Move W1, W27
	538 Move X2, X31
	539 Call ValueStringBuilder.GrowAndAppend, X0, X1
	540 Move X8, 1
	541 Add X24, X24, X8
	542 Subtract W21, W21, 1
	543 Subtract X25, X25, 1
	544 Add X28, X28, 2
	545 NotImplemented "Instruction CMP not yet implemented."
	546 NotImplemented "Instruction CMP not yet implemented."
	547 Move W8, 0x2030
	548 NotImplemented "Instruction CMP not yet implemented."
	549 Compare X21, 0
	550 JumpIfEqual {1072}
	551 Move X8, 0x105C000
	552 Move W8, [X8+4]
	553 Move X26, [X21+152]
	554 Compare W8, 0
	555 JumpIfNotEqual {562}
	556 Move X0, 0xDA1000
	557 Move X0, [X0+1416]
	558 Call 0x1C17CF4
	559 Move W8, 1
	560 Move X9, 0x105C000
	561 Move [X9+4], W8
	562 Compare X26, 0
	563 JumpIfEqual {1072}
	564 Move W8, [X26+16]
	565 NotImplemented "Instruction CMP not yet implemented."
	566 NotImplemented "Instruction LDRSW not yet implemented."
	567 Move W8, [X22+16]
	568 NotImplemented "Instruction CMP not yet implemented."
	569 NotImplemented "Instruction CMP not yet implemented."
	570 Move W25, W24
	571 Move X24, [X22+8]
	572 Move X0, X26
	573 Move W1, W31
	574 Move X2, X31
	575 Call String.get_Chars, X0, X1
	576 Add W8, W21, 1
	577 NotImplemented "Instruction STRH not yet implemented."
	578 Move [X22+24], W8
	579 Move W24, W25
	580 Move X0, X22
	581 Move X1, X26
	582 Move X2, X31
	583 Call ValueStringBuilder.AppendSlow, X0, X1
	584 NotImplemented "Instruction CMP not yet implemented."
	585 NotImplemented "Instruction LDUR not yet implemented."
	586 NotImplemented "Instruction LDRH not yet implemented."
	587 Compare W26, 0
	588 JumpIfEqual {975}
	589 Move X8, 0x105B000
	590 Move W8, [X8+1250]
	591 Compare W8, 0
	592 JumpIfNotEqual {599}
	593 Move X0, 0xDA1000
	594 Move X0, [X0+1416]
	595 Call 0x1C17CF4
	596 Move X8, 0x105B000
	597 Move W9, 1
	598 Move [X8+1250], W9
	599 NotImplemented "Instruction LDRSW not yet implemented."
	600 Move W9, [X22+16]
	601 NotImplemented "Instruction LDUR not yet implemented."
	602 NotImplemented "Instruction CMP not yet implemented."
	603 Add W27, W10, 2
	604 Move X0, X22
	605 Move W1, W26
	606 Move X2, X31
	607 Call ValueStringBuilder.GrowAndAppend, X0, X1
	608 Move TEMP, X24
	609 And TEMP, TEMP, -2147483648
	610 Compare TEMP, -2147483648
	611 JumpIfEqual {737}
	612 NotImplemented "Instruction LDRH not yet implemented."
	613 Compare W26, 0
	614 JumpIfEqual {776}
	615 Add X23, X23, 2
	616 NotImplemented "Instruction CMP not yet implemented."
	617 NotImplemented "Instruction LDUR not yet implemented."
	618 Move TEMP, X8
	619 And TEMP, TEMP, 1
	620 Compare TEMP, 1
	621 JumpIfNotEqual {648}
	622 NotImplemented "Instruction LDUR not yet implemented."
	623 NotImplemented "Instruction CMP not yet implemented."
	624 NotImplemented "Instruction LDUR not yet implemented."
	625 NotImplemented "Instruction LDRH not yet implemented."
	626 NotImplemented "Instruction CMP not yet implemented."
	627 Move W5, W31
	628 Add W8, W11, 2
	629 Move W9, 1
	630 Move X8, 0x105B000
	631 Move W8, [X8+1250]
	632 Compare W8, 0
	633 JumpIfNotEqual {640}
	634 Move X0, 0xDA1000
	635 Move X0, [X0+1416]
	636 Call 0x1C17CF4
	637 Move X8, 0x105B000
	638 Move W9, 1
	639 Move [X8+1250], W9
	640 NotImplemented "Instruction LDRSW not yet implemented."
	641 Move W9, [X22+16]
	642 NotImplemented "Instruction CMP not yet implemented."
	643 NotImplemented "Instruction CMP not yet implemented."
	644 Move X9, [X22+8]
	645 Add W10, W8, 1
	646 NotImplemented "Instruction STRH not yet implemented."
	647 Move [X22+24], W10
	648 Move X8, 0x105B000
	649 Move W8, [X8+1250]
	650 NotImplemented "Instruction LDUR not yet implemented."
	651 Compare W8, 0
	652 JumpIfNotEqual {659}
	653 Move X0, 0xDA1000
	654 Move X0, [X0+1416]
	655 Call 0x1C17CF4
	656 Move X8, 0x105B000
	657 Move W9, 1
	658 Move [X8+1250], W9
	659 NotImplemented "Instruction LDRSW not yet implemented."
	660 Move W9, [X22+16]
	661 NotImplemented "Instruction CMP not yet implemented."
	662 NotImplemented "Instruction CMP not yet implemented."
	663 Move X9, [X22+8]
	664 Add W10, W8, 1
	665 NotImplemented "Instruction STRH not yet implemented."
	666 Move [X22+24], W10
	667 Add W8, W11, 2
	668 NotImplemented "Instruction CMP not yet implemented."
	669 NotImplemented "Instruction LDUR not yet implemented."
	670 NotImplemented "Instruction LDRH not yet implemented."
	671 NotImplemented "Instruction CMP not yet implemented."
	672 NotImplemented "Instruction CMP not yet implemented."
	673 NotImplemented "Instruction LDUR not yet implemented."
	674 NotImplemented "Instruction LDRH not yet implemented."
	675 NotImplemented "Instruction CMP not yet implemented."
	676 Move W9, W31
	677 Move W5, 1
	678 Compare X21, 0
	679 JumpIfEqual {1072}
	680 Move X8, 0x105C000
	681 Move W8, [X8+4]
	682 Move X26, [X21+144]
	683 Compare W8, 0
	684 JumpIfNotEqual {562}
	685 NotImplemented "Instruction LDUR not yet implemented."
	686 NotImplemented "Instruction CMP not yet implemented."
	687 NotImplemented "Instruction CSET not yet implemented."
	688 Or W8, W9, W8
	689 Move TEMP, X8
	690 And TEMP, TEMP, 1
	691 Compare TEMP, 1
	692 JumpIfEqual {975}
	693 NotImplemented "Instruction LDUR not yet implemented."
	694 NotImplemented "Instruction LDUR not yet implemented."
	695 Move TEMP, X8
	696 And TEMP, TEMP, -2147483648
	697 Compare TEMP, -2147483648
	698 JumpIfEqual {704}
	699 NotImplemented "Instruction LDUR not yet implemented."
	700 NotImplemented "Instruction CMP not yet implemented."
	701 NotImplemented "Instruction LDRH not yet implemented."
	702 Compare W8, 0
	703 JumpIfEqual {894}
	704 Compare X21, 0
	705 JumpIfEqual {1072}
	706 Move X8, 0x105C000
	707 Move W8, [X8+4]
	708 Move X26, [X21+56]
	709 Compare W8, 0
	710 JumpIfNotEqual {717}
	711 Move X0, 0xDA1000
	712 Move X0, [X0+1416]
	713 Call 0x1C17CF4
	714 Move W8, 1
	715 Move X9, 0x105C000
	716 Move [X9+4], W8
	717 Compare X26, 0
	718 JumpIfEqual {1072}
	719 Move W8, [X26+16]
	720 NotImplemented "Instruction CMP not yet implemented."
	721 NotImplemented "Instruction LDRSW not yet implemented."
	722 Move W8, [X22+16]
	723 NotImplemented "Instruction CMP not yet implemented."
	724 NotImplemented "Instruction CMP not yet implemented."
	725 Move W25, W24
	726 Move X24, [X22+8]
	727 Move X0, X26
	728 Move W1, W31
	729 Move X2, X31
	730 Call String.get_Chars, X0, X1
	731 Add W8, W21, 1
	732 NotImplemented "Instruction STRH not yet implemented."
	733 Move [X22+24], W8
	734 Move W8, 1
	735 Move W28, W31
	736 Move [X29-124], W8
	737 NotImplemented "Instruction LDUR not yet implemented."
	738 Add W24, W24, 1
	739 NotImplemented "Instruction CMP not yet implemented."
	740 Move X0, X22
	741 Move W1, W26
	742 Move X2, X31
	743 Call ValueStringBuilder.GrowAndAppend, X0, X1
	744 NotImplemented "Instruction CMP not yet implemented."
	745 NotImplemented "Instruction LDUR not yet implemented."
	746 NotImplemented "Instruction LDRH not yet implemented."
	747 NotImplemented "Instruction CMP not yet implemented."
	748 NotImplemented "Instruction CMP not yet implemented."
	749 Move X8, 0x105B000
	750 Move W8, [X8+1250]
	751 Compare W8, 0
	752 JumpIfNotEqual {759}
	753 Move X0, 0xDA1000
	754 Move X0, [X0+1416]
	755 Call 0x1C17CF4
	756 Move X8, 0x105B000
	757 Move W9, 1
	758 Move [X8+1250], W9
	759 NotImplemented "Instruction LDRSW not yet implemented."
	760 Move W9, [X22+16]
	761 Add W27, W21, 2
	762 NotImplemented "Instruction CMP not yet implemented."
	763 NotImplemented "Instruction CMP not yet implemented."
	764 Move X9, [X22+8]
	765 Add W10, W8, 1
	766 NotImplemented "Instruction STRH not yet implemented."
	767 Move [X22+24], W10
	768 NotImplemented "Instruction LDUR not yet implemented."
	769 NotImplemented "Instruction SBFM not yet implemented."
	770 NotImplemented "Instruction LDUR not yet implemented."
	771 NotImplemented "Instruction LDUR not yet implemented."
	772 NotImplemented "Instruction LDRH not yet implemented."
	773 NotImplemented "Instruction CMP not yet implemented."
	774 NotImplemented "Instruction CSET not yet implemented."
	775 Subtract W27, W8, W21
	776 NotImplemented "Instruction LDUR not yet implemented."
	777 NotImplemented "Instruction CMP not yet implemented."
	778 Move W26, 48
	779 Move X8, 0x105B000
	780 Move W8, [X8+1250]
	781 Compare W8, 0
	782 JumpIfNotEqual {789}
	783 Move X0, 0xDA1000
	784 Move X0, [X0+1416]
	785 Call 0x1C17CF4
	786 Move X8, 0x105B000
	787 Move W9, 1
	788 Move [X8+1250], W9
	789 NotImplemented "Instruction LDRSW not yet implemented."
	790 Move W9, [X22+16]
	791 NotImplemented "Instruction LDUR not yet implemented."
	792 NotImplemented "Instruction CMP not yet implemented."
	793 NotImplemented "Instruction CMP not yet implemented."
	794 Move X9, [X22+8]
	795 Add W10, W8, 1
	796 NotImplemented "Instruction STRH not yet implemented."
	797 Move [X22+24], W10
	798 Move X0, X22
	799 Move W1, W26
	800 Move X2, X31
	801 Call ValueStringBuilder.GrowAndAppend, X0, X1
	802 NotImplemented "Instruction CMP not yet implemented."
	803 NotImplemented "Instruction CSET not yet implemented."
	804 Move TEMP, X19
	805 And TEMP, TEMP, -2147483648
	806 Compare TEMP, -2147483648
	807 JumpIfEqual {855}
	808 Or W8, W8, W25
	809 Move TEMP, X8
	810 And TEMP, TEMP, 1
	811 Compare TEMP, 1
	812 JumpIfEqual {855}
	813 NotImplemented "Instruction LDUR not yet implemented."
	814 NotImplemented "Instruction CMP not yet implemented."
	815 NotImplemented "Instruction LDUR not yet implemented."
	816 Move W8, [X8]
	817 Add W8, W8, 1
	818 NotImplemented "Instruction CMP not yet implemented."
	819 Compare X21, 0
	820 JumpIfEqual {1072}
	821 Move X8, 0x105C000
	822 Move W8, [X8+4]
	823 Move X26, [X21+64]
	824 Compare W8, 0
	825 JumpIfNotEqual {832}
	826 Move X0, 0xDA1000
	827 Move X0, [X0+1416]
	828 Call 0x1C17CF4
	829 Move W8, 1
	830 Move X9, 0x105C000
	831 Move [X9+4], W8
	832 Compare X26, 0
	833 JumpIfEqual {1072}
	834 Move W8, [X26+16]
	835 NotImplemented "Instruction CMP not yet implemented."
	836 NotImplemented "Instruction LDRSW not yet implemented."
	837 Move W8, [X22+16]
	838 NotImplemented "Instruction CMP not yet implemented."
	839 NotImplemented "Instruction CMP not yet implemented."
	840 Move W25, W24
	841 Move X24, [X22+8]
	842 Move X0, X26
	843 Move W1, W31
	844 Move X2, X31
	845 Call String.get_Chars, X0, X1
	846 Add W8, W21, 1
	847 NotImplemented "Instruction STRH not yet implemented."
	848 Move [X22+24], W8
	849 Move W24, W25
	850 Move X0, X22
	851 Move X1, X26
	852 Move X2, X31
	853 Call ValueStringBuilder.AppendSlow, X0, X1
	854 Subtract W19, W19, 1
	855 Subtract W28, W28, 1
	856 Move X0, X22
	857 Move W1, W26
	858 Move X2, X31
	859 Call ValueStringBuilder.GrowAndAppend, X0, X1
	860 NotImplemented "Instruction CMP not yet implemented."
	861 NotImplemented "Instruction LDUR not yet implemented."
	862 Move W25, W24
	863 Add X21, X8, W27
	864 NotImplemented "Instruction LDUR not yet implemented."
	865 Subtract X24, X8, W27
	866 NotImplemented "Instruction LDRH not yet implemented."
	867 NotImplemented "Instruction CMP not yet implemented."
	868 Move X8, 0x105B000
	869 Move W8, [X8+1250]
	870 Compare W8, 0
	871 JumpIfNotEqual {878}
	872 Move X0, 0xDA1000
	873 Move X0, [X0+1416]
	874 Call 0x1C17CF4
	875 Move X8, 0x105B000
	876 Move W9, 1
	877 Move [X8+1250], W9
	878 NotImplemented "Instruction LDRSW not yet implemented."
	879 Move W9, [X22+16]
	880 NotImplemented "Instruction CMP not yet implemented."
	881 NotImplemented "Instruction CMP not yet implemented."
	882 Move X9, [X22+8]
	883 Add W10, W8, 1
	884 Move W11, 48
	885 NotImplemented "Instruction STRH not yet implemented."
	886 Move [X22+24], W10
	887 Move W1, 48
	888 Move X0, X22
	889 Move X2, X31
	890 Call ValueStringBuilder.GrowAndAppend, X0, X1
	891 Add W27, W27, 1
	892 Subtract X24, X24, 1
	893 Add X21, X21, 2
	894 Move [X29-124], W31
	895 Move W28, W31
	896 Move X0, X22
	897 Move X1, X26
	898 Move X2, X31
	899 Call ValueStringBuilder.AppendSlow, X0, X1
	900 Move W8, 1
	901 Move W28, W31
	902 Move [X29-124], W8
	903 Move [X29-92], W31
	904 NotImplemented "Instruction LDUR not yet implemented."
	905 NotImplemented "Instruction LDRH not yet implemented."
	906 NotImplemented "Instruction CMP not yet implemented."
	907 Move W9, W31
	908 Move W5, W31
	909 NotImplemented "Instruction CMP not yet implemented."
	910 NotImplemented "Instruction LDUR not yet implemented."
	911 Add W10, W10, W9
	912 Subtract W10, W10, W11
	913 NotImplemented "Instruction LDUR not yet implemented."
	914 NotImplemented "Instruction LDRH not yet implemented."
	915 NotImplemented "Instruction CMP not yet implemented."
	916 Add W8, W8, 1
	917 NotImplemented "Instruction CMP not yet implemented."
	918 Add W9, W9, 1
	919 Move W9, W10
	920 Move W27, W20
	921 Move X8, 0x105B000
	922 Move W8, [X8+1250]
	923 Compare W8, 0
	924 JumpIfNotEqual {931}
	925 Move X0, 0xDA1000
	926 Move X0, [X0+1416]
	927 Call 0x1C17CF4
	928 Move X8, 0x105B000
	929 Move W9, 1
	930 Move [X8+1250], W9
	931 NotImplemented "Instruction LDRSW not yet implemented."
	932 Move W9, [X22+16]
	933 NotImplemented "Instruction CMP not yet implemented."
	934 NotImplemented "Instruction CMP not yet implemented."
	935 Move X9, [X22+8]
	936 Add W10, W8, 1
	937 NotImplemented "Instruction STRH not yet implemented."
	938 Move [X22+24], W10
	939 Move X0, X22
	940 Move W1, W26
	941 Move X2, X31
	942 Call ValueStringBuilder.GrowAndAppend, X0, X1
	943 Move W8, 1
	944 Move [X29-92], W8
	945 Move W27, W8
	946 NotImplemented "Instruction LDUR not yet implemented."
	947 NotImplemented "Instruction CMP not yet implemented."
	948 Move W10, 10
	949 NotImplemented "Instruction CSEL not yet implemented."
	950 NotImplemented "Instruction LDRH not yet implemented."
	951 Compare W8, 0
	952 JumpIfEqual {957}
	953 NotImplemented "Instruction LDUR not yet implemented."
	954 NotImplemented "Instruction LDUR not yet implemented."
	955 Move W8, [X8+4]
	956 Subtract W21, W8, W9
	957 Move W21, W31
	958 Move X8, 0xDA7000
	959 Move X8, [X8+120]
	960 Move X0, [X8]
	961 Move W8, [X0+224]
	962 Compare W8, 0
	963 JumpIfNotEqual {969}
	964 Move [X29-56], W5
	965 Move W25, W4
	966 Call 0x1C17DFC
	967 NotImplemented "Instruction LDUR not yet implemented."
	968 Move W4, W25
	969 NotImplemented "Instruction LDUR not yet implemented."
	970 Move X0, X22
	971 Move W2, W21
	972 Move W3, W26
	973 Call Number.FormatExponent, X0, X1, X2, X3, X4, X5
	974 Move [X29-92], W31
	975 NotImplemented "Instruction CMP not yet implemented."
	976 Move [X29-76], W24
	977 Move W8, W27
	978 Move [X29-56], W27
	979 NotImplemented "Instruction LDUR not yet implemented."
	980 Move X8, [X8+40]
	981 NotImplemented "Instruction LDUR not yet implemented."
	982 NotImplemented "Instruction CMP not yet implemented."
	983 Add X31, X29, 0
	984 Move X20, [X31+80]
	985 Move X19, [X31+88]
	986 Move X22, [X31+64]
	987 Move X21, [X31+72]
	988 Move X24, [X31+48]
	989 Move X23, [X31+56]
	990 Move X26, [X31+32]
	991 Move X25, [X31+40]
	992 Move X28, [X31+16]
	993 Move X27, [X31+24]
	994 Move X29, [X31+96]
	995 Move X30, [X31+104]
	996 Return 
	997 Move W27, W31
	998 NotImplemented "Instruction LDUR not yet implemented."
	999 Move TEMP, 0
	1000 Not TEMP
	1001 Move W19, TEMP
	1002 And W9, W9, W9
	1003 Add W9, W9, W28
	1004 NotImplemented "Instruction CMP not yet implemented."
	1005 NotImplemented "Instruction CSEL not yet implemented."
	1006 Compare W27, 0
	1007 JumpIfEqual {324}
	1008 NotImplemented "Instruction CMP not yet implemented."
	1009 Move W19, W31
	1010 Move W24, W31
	1011 Subtract W11, W8, 1
	1012 Move W1, 4
	1013 Move W26, W27
	1014 Move [X29-88], X12
	1015 NotImplemented "Instruction CMP not yet implemented."
	1016 Move X8, 0xD72000
	1017 Move X8, [X8+3672]
	1018 Move W1, W1
	1019 ShiftRight W1, 31
	1020 And W1, W1, 0x3FFFFFFF
	1021 Move X23, X20
	1022 Move W20, W10
	1023 Move X0, [X8]
	1024 Move X21, X22
	1025 Move W22, W19
	1026 Move W19, W11
	1027 Call 0x1C17D6C
	1028 Move X8, 0xDA5000
	1029 Move X8, [X8+2272]
	1030 Move X25, X0
	1031 Move X1, [X8]
	1032 Call Span`1<Int32>.op_Implicit, X0
	1033 Move X8, 0xDA5000
	1034 Move X8, [X8+2256]
	1035 Move X2, X0
	1036 Move X4, X1
	1037 Subtract X0, X29, 24
	1038 Move X3, [X8]
	1039 Move X1, X2
	1040 Move X2, X4
	1041 Call Span`1<Int32>.CopyTo, X0, X1
	1042 Move X8, 0xDA5000
	1043 Move X8, [X8+2272]
	1044 Move X0, X25
	1045 Move X1, [X8]
	1046 Call Span`1<Int32>.op_Implicit, X0
	1047 NotImplemented "Instruction LDUR not yet implemented."
	1048 Move W11, W19
	1049 Move W19, W22
	1050 Move X22, X21
	1051 Move W10, W20
	1052 Move X20, X23
	1053 Move [X29-24], X0
	1054 Move [X29-16], X1
	1055 NotImplemented "Instruction CMP not yet implemented."
	1056 NotImplemented "Instruction CMP not yet implemented."
	1057 Move [X0], W27
	1058 Move W8, [X12+24]
	1059 Move X9, W24
	1060 Add X24, X9, 1
	1061 NotImplemented "Instruction CMP not yet implemented."
	1062 Add X8, X12, X24
	1063 Move W26, [X8+32]
	1064 Compare W26, 0
	1065 JumpIfEqual {1070}
	1066 Add W27, W26, W27
	1067 NotImplemented "Instruction CMP not yet implemented."
	1068 NotImplemented "Instruction LDUR not yet implemented."
	1069 Add W19, W19, 1
	1070 NotImplemented "Instruction LDUR not yet implemented."
	1071 Call 0x1C17F28
	1072 Call 0x1C17F20
	1073 Call 0x3EB2B20

Method: System.Void FormatCurrency(ref System.Text.ValueStringBuilder sb, ref System.Number/NumberBuffer number, System.Int32 nMinDigits, System.Int32 nMaxDigits, System.Globalization.NumberFormatInfo info)

Disassembly:
	0x03386BF0 STP X29, X30, [X31 + 0x10]
	0x03386BF4 STP X28, X27, [X31 + 0x20]
	0x03386BF8 STP X26, X25, [X31 + 0x30]
	0x03386BFC STP X24, X23, [X31 + 0x40]
	0x03386C00 STP X22, X21, [X31 + 0x50]
	0x03386C04 STP X20, X19, [X31 + 0x60]
	0x03386C08 ADRP X23, 0x1056000
	0x03386C0C ADRP X24, 0xDA2000
	0x03386C10 LDRB W8, [X23 + 0xFDF]
	0x03386C14 LDR X24, [X24 + 0x78]
	0x03386C18 MOV X19, X4
	0x03386C1C MOV W20, W3
	0x03386C20 MOV X21, X1
	0x03386C24 MOV X22, X0
	0x03386C28 TBNZ X8, 0x0, 0x3386C40
	0x03386C2C ADRP X0, 0xDA2000
	0x03386C30 LDR X0, [X0 + 0x78]
	0x03386C34 BL 0x1C16CF4
	0x03386C38 MOVZ W8, 0x1
	0x03386C3C STRB W8, [X23 + 0xFDF]
	0x03386C40 MOV X0, X21
	0x03386C44 MOV X1, X31
	0x03386C48 BL 0x338C38C
	0x03386C4C LDR X8, [X24]
	0x03386C50 MOV W23, W0
	0x03386C54 LDR W9, [X8 + 0xE0]
	0x03386C58 CBNZ W9, 0x3386C68
	0x03386C5C MOV X0, X8
	0x03386C60 BL 0x1C16DFC
	0x03386C64 LDR X8, [X24]
	0x03386C68 LDR X8, [X8 + 0xB8]
	0x03386C6C TBZ X23, 0x0, 0x3386C84
	0x03386C70 CBZ X19, 0x3386E4C
	0x03386C74 LDR X8, [X8 + 0x18]
	0x03386C78 CBZ X8, 0x3386E4C
	0x03386C7C LDR W9, [X19 + 0xC4]
	0x03386C80 B 0x3386C94
	0x03386C84 CBZ X19, 0x3386E4C
	0x03386C88 LDR X8, [X8 + 0x10]
	0x03386C8C CBZ X8, 0x3386E4C
	0x03386C90 LDR W9, [X19 + 0xC0]
	0x03386C94 LDR W10, [X8 + 0x18]
	0x03386C98 CMP W9, W10
	0x03386C9C B.CS 0x3386E50
	0x03386CA0 ADD X8, X8, W9, 0x3, SXTW
	0x03386CA4 LDR X23, [X8 + 0x20]
	0x03386CA8 CBZ X23, 0x3386E4C
	0x03386CAC LDR W8, [X23 + 0x10]
	0x03386CB0 CMP W8, 0x1
	0x03386CB4 B.LT 0x3386E2C
	0x03386CB8 MOV W24, W31
	0x03386CBC ADRP X29, 0x1057000
	0x03386CC0 ADRP X25, 0x1056000
	0x03386CC4 MOV X0, X23
	0x03386CC8 MOV W1, W24
	0x03386CCC MOV X2, X31
	0x03386CD0 BL 0x3222A1C
	0x03386CD4 AND W8, W0, 0xFFFF
	0x03386CD8 CMP W8, 0x2D
	0x03386CDC B.EQ 0x3386D30
	0x03386CE0 CMP W8, 0x25
	0x03386CE4 B.EQ 0x3386D40
	0x03386CE8 CMP W8, 0x23
	0x03386CEC B.NE 0x3386DC0
	0x03386CF0 ADRP X8, 0xDA2000
	0x03386CF4 LDR X8, [X8 + 0x78]
	0x03386CF8 LDR X28, [X19 + 0x20]
	0x03386CFC LDP X27, X26, [X19 + 0x80]
	0x03386D00 LDR X0, [X8]
	0x03386D04 LDR W8, [X0 + 0xE0]
	0x03386D08 CBNZ W8, 0x3386D10
	0x03386D0C BL 0x1C16DFC
	0x03386D10 MOV X0, X22
	0x03386D14 MOV X1, X21
	0x03386D18 MOV W3, W20
	0x03386D1C MOV X5, X28
	0x03386D20 MOV X6, X27
	0x03386D24 MOV X7, X26
	0x03386D28 BL 0x3385E58
	0x03386D2C B 0x3386E1C
	0x03386D30 LDRB W8, [X29 + 0x4]
	0x03386D34 LDR X26, [X19 + 0x30]
	0x03386D38 CBNZ W8, 0x3386D60
	0x03386D3C B 0x3386D4C
	0x03386D40 LDRB W8, [X29 + 0x4]
	0x03386D44 LDR X26, [X19 + 0x90]
	0x03386D48 CBNZ W8, 0x3386D60
	0x03386D4C ADRP X0, 0xD9C000
	0x03386D50 LDR X0, [X0 + 0x588]
	0x03386D54 BL 0x1C16CF4
	0x03386D58 MOVZ W8, 0x1
	0x03386D5C STRB W8, [X29 + 0x4]
	0x03386D60 CBZ X26, 0x3386E4C
	0x03386D64 LDR W8, [X26 + 0x10]
	0x03386D68 CMP W8, 0x1
	0x03386D6C B.NE 0x3386DAC
	0x03386D70 LDRSW X27, [X22 + 0x18]
	0x03386D74 LDR W8, [X22 + 0x10]
	0x03386D78 CMP W27, W8
	0x03386D7C B.GE 0x3386DAC
	0x03386D80 CMP W27, W8
	0x03386D84 B.CS 0x3386E50
	0x03386D88 LDR X28, [X22 + 0x8]
	0x03386D8C MOV X0, X26
	0x03386D90 MOV W1, W31
	0x03386D94 MOV X2, X31
	0x03386D98 BL 0x3222A1C
	0x03386D9C ADD W8, W27, 0x1
	0x03386DA0 STRH W0, [X28, X27, LSL #1]
	0x03386DA4 STR W8, [X22 + 0x18]
	0x03386DA8 B 0x3386E1C
	0x03386DAC MOV X0, X22
	0x03386DB0 MOV X1, X26
	0x03386DB4 MOV X2, X31
	0x03386DB8 BL 0x3241020
	0x03386DBC B 0x3386E1C
	0x03386DC0 LDRB W8, [X25 + 0x4E2]
	0x03386DC4 MOV W26, W0
	0x03386DC8 CBNZ W8, 0x3386DE0
	0x03386DCC ADRP X0, 0xD9C000
	0x03386DD0 LDR X0, [X0 + 0x588]
	0x03386DD4 BL 0x1C16CF4
	0x03386DD8 MOVZ W8, 0x1
	0x03386DDC STRB W8, [X25 + 0x4E2]
	0x03386DE0 LDRSW X8, [X22 + 0x18]
	0x03386DE4 LDR W9, [X22 + 0x10]
	0x03386DE8 CMP W8, W9
	0x03386DEC B.GE 0x3386E0C
	0x03386DF0 CMP W8, W9
	0x03386DF4 B.CS 0x3386E50
	0x03386DF8 LDR X9, [X22 + 0x8]
	0x03386DFC ADD W10, W8, 0x1
	0x03386E00 STRH W26, [X9, X8, LSL #1]
	0x03386E04 STR W10, [X22 + 0x18]
	0x03386E08 B 0x3386E1C
	0x03386E0C MOV X0, X22
	0x03386E10 MOV W1, W26
	0x03386E14 MOV X2, X31
	0x03386E18 BL 0x3240EF4
	0x03386E1C LDR W8, [X23 + 0x10]
	0x03386E20 ADD W24, W24, 0x1
	0x03386E24 CMP W24, W8
	0x03386E28 B.LT 0x3386CC4
	0x03386E2C LDP X20, X19, [X31 + 0x60]
	0x03386E30 LDP X22, X21, [X31 + 0x50]
	0x03386E34 LDP X24, X23, [X31 + 0x40]
	0x03386E38 LDP X26, X25, [X31 + 0x30]
	0x03386E3C LDP X28, X27, [X31 + 0x20]
	0x03386E40 LDP X29, X30, [X31 + 0x10]
	0x03386E44 ADD X31, X31, 0x70
	0x03386E48 RET
	0x03386E4C BL 0x1C16F20
	0x03386E50 BL 0x1C16F28
	0x03386E54 STR X30, [X31 - 0x30]!

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0x1057000
	015 Move X24, 0xDA3000
	016 Move W8, [X23+4057]
	017 Move X24, [X24+120]
	018 Move X19, X4
	019 Move W20, W3
	020 Move X21, X1
	021 Move X22, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0xDA3000
	027 Move X0, [X0+120]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+4057], W8
	031 Move X0, X21
	032 Move X1, X31
	033 Call NumberBuffer.get_sign, X0
	034 Move X8, [X24]
	035 Move W23, W0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {42}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X8, [X24]
	042 Move X8, [X8+184]
	043 Move TEMP, X23
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {53}
	047 Compare X19, 0
	048 JumpIfEqual {166}
	049 Move X8, [X8+8]
	050 Compare X8, 0
	051 JumpIfEqual {166}
	052 Move W9, [X19+184]
	053 Compare X19, 0
	054 JumpIfEqual {166}
	055 Move X8, [X8]
	056 Compare X8, 0
	057 JumpIfEqual {166}
	058 Move W9, [X19+180]
	059 Move W10, [X8+24]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add X8, X8, W9
	062 Move X23, [X8+32]
	063 Compare X23, 0
	064 JumpIfEqual {166}
	065 Move W8, [X23+16]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W24, W31
	068 Move X29, 0x1058000
	069 Move X25, 0x1057000
	070 Move X0, X23
	071 Move W1, W24
	072 Move X2, X31
	073 Call String.get_Chars, X0, X1
	074 And W8, W0, 0xFFFF
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X8, 0xDA3000
	079 Move X8, [X8+120]
	080 Move X28, [X19+24]
	081 Move X26, [X19+72]
	082 Move X27, [X19+80]
	083 Move X0, [X8]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move X0, X22
	089 Move X1, X21
	090 Move W3, W20
	091 Move X5, X28
	092 Move X6, X27
	093 Move X7, X26
	094 Call Number.FormatFixed, X0, X1, X2, X3, X4, X5, X6, X7
	095 Move W8, [X29+4]
	096 Move X26, [X19+48]
	097 Compare W8, 0
	098 JumpIfNotEqual {108}
	099 Move W8, [X29+4]
	100 Move X26, [X19+88]
	101 Compare W8, 0
	102 JumpIfNotEqual {108}
	103 Move X0, 0xD9D000
	104 Move X0, [X0+1416]
	105 Call 0x1C17CF4
	106 Move W8, 1
	107 Move [X29+4], W8
	108 Compare X26, 0
	109 JumpIfEqual {166}
	110 Move W8, [X26+16]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 NotImplemented "Instruction LDRSW not yet implemented."
	113 Move W8, [X22+16]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X28, [X22+8]
	117 Move X0, X26
	118 Move W1, W31
	119 Move X2, X31
	120 Call String.get_Chars, X0, X1
	121 Add W8, W27, 1
	122 NotImplemented "Instruction STRH not yet implemented."
	123 Move [X22+24], W8
	124 Move X0, X22
	125 Move X1, X26
	126 Move X2, X31
	127 Call ValueStringBuilder.AppendSlow, X0, X1
	128 Move W8, [X25+1250]
	129 Move W26, W0
	130 Compare W8, 0
	131 JumpIfNotEqual {137}
	132 Move X0, 0xD9D000
	133 Move X0, [X0+1416]
	134 Call 0x1C17CF4
	135 Move W8, 1
	136 Move [X25+1250], W8
	137 NotImplemented "Instruction LDRSW not yet implemented."
	138 Move W9, [X22+16]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move X9, [X22+8]
	142 Add W10, W8, 1
	143 NotImplemented "Instruction STRH not yet implemented."
	144 Move [X22+24], W10
	145 Move X0, X22
	146 Move W1, W26
	147 Move X2, X31
	148 Call ValueStringBuilder.GrowAndAppend, X0, X1
	149 Move W8, [X23+16]
	150 Add W24, W24, 1
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X20, [X31+96]
	153 Move X19, [X31+104]
	154 Move X22, [X31+80]
	155 Move X21, [X31+88]
	156 Move X24, [X31+64]
	157 Move X23, [X31+72]
	158 Move X26, [X31+48]
	159 Move X25, [X31+56]
	160 Move X28, [X31+32]
	161 Move X27, [X31+40]
	162 Move X29, [X31+16]
	163 Move X30, [X31+24]
	164 Add X31, X31, 112
	165 Return 
	166 Call 0x1C17F20
	167 Call 0x1C17F28

Method: System.Void FormatFixed(ref System.Text.ValueStringBuilder sb, ref System.Number/NumberBuffer number, System.Int32 nMinDigits, System.Int32 nMaxDigits, System.Globalization.NumberFormatInfo info, System.Int32[] groupDigits, System.String sDecimal, System.String sGroup)

Disassembly:
	0x03386E58 STP X22, X21, [X31 + 0x10]
	0x03386E5C STP X20, X19, [X31 + 0x20]
	0x03386E60 ADRP X22, 0x1056000
	0x03386E64 LDRB W8, [X22 + 0xFE0]
	0x03386E68 MOV W20, W2
	0x03386E6C MOV X19, X1
	0x03386E70 MOV X21, X0
	0x03386E74 TBNZ X8, 0x0, 0x3386E98
	0x03386E78 ADRP X0, 0xD9C000
	0x03386E7C LDR X0, [X0 + 0x20]
	0x03386E80 BL 0x1C16CF4
	0x03386E84 ADRP X0, 0xD9C000
	0x03386E88 LDR X0, [X0 + 0x28]
	0x03386E8C BL 0x1C16CF4
	0x03386E90 MOVZ W8, 0x1
	0x03386E94 STRB W8, [X22 + 0xFE0]
	0x03386E98 CBZ W20, 0x3386F88
	0x03386E9C ADRP X8, 0xD9C000
	0x03386EA0 LDR X8, [X8 + 0x20]
	0x03386EA4 MOV X0, X21
	0x03386EA8 MOV X1, X19
	0x03386EAC LDR X2, [X8]
	0x03386EB0 BL 0x2218CF8
	0x03386EB4 MOV W8, W31
	0x03386EB8 SXTW X9, W19
	0x03386EBC CMP W8, W19
	0x03386EC0 B.GE 0x3386F88
	0x03386EC4 MOV W11, W8
	0x03386EC8 LDRH W10, [X0, W11, SXTW]
	0x03386ECC ADD W8, W11, 0x1
	0x03386ED0 CMP W10, 0x22
	0x03386ED4 B.HI 0x3386EE4
	0x03386ED8 B.EQ 0x3386F00
	0x03386EDC CBNZ W10, 0x3386F58
	0x03386EE0 B 0x3386F88
	0x03386EE4 CMP W10, 0x27
	0x03386EE8 B.EQ 0x3386F00
	0x03386EEC CMP W10, 0x5C
	0x03386EF0 B.EQ 0x3386F38
	0x03386EF4 CMP W10, 0x3B
	0x03386EF8 B.NE 0x3386F58
	0x03386EFC B 0x3386F68
	0x03386F00 SXTW X11, W8
	0x03386F04 CMP X9, W8, SXTW
	0x03386F08 CSEL X12, X11, X9, LT
	0x03386F0C ADD X8, X0, W8, 0x1, SXTW
	0x03386F10 CMP X12, X11
	0x03386F14 B.EQ 0x3386F54
	0x03386F18 LDRH W13, [X8]
	0x03386F1C CBZ W13, 0x3386F30
	0x03386F20 ADD X11, X11, 0x1
	0x03386F24 CMP W13, W10
	0x03386F28 ADD X8, X8, 0x2
	0x03386F2C B.NE 0x3386F10
	0x03386F30 MOV W8, W11
	0x03386F34 B 0x3386F58
	0x03386F38 CMP W8, W19
	0x03386F3C B.GE 0x3386F58
	0x03386F40 LDRH W10, [X0, W8, SXTW]
	0x03386F44 ADD W11, W11, 0x2
	0x03386F48 CMP W10, 0x0
	0x03386F4C CSEL W8, W8, W11, EQ
	0x03386F50 B 0x3386F58
	0x03386F54 MOV W8, W12
	0x03386F58 CMP W8, W19
	0x03386F5C MOV W11, W8
	0x03386F60 B.LT 0x3386EC8
	0x03386F64 B 0x3386F88
	0x03386F68 SUBS W20, W20, 0x1
	0x03386F6C B.NE 0x3386EBC
	0x03386F70 CMP W8, W19
	0x03386F74 B.GE 0x3386F88
	0x03386F78 LDRH W9, [X0, W8, SXTW]
	0x03386F7C CMP W9, 0x3B
	0x03386F80 B.EQ 0x3386F88
	0x03386F84 CBNZ W9, 0x3386F8C
	0x03386F88 MOV W8, W31
	0x03386F8C LDP X20, X19, [X31 + 0x20]
	0x03386F90 LDP X22, X21, [X31 + 0x10]
	0x03386F94 MOV W0, W8
	0x03386F98 LDR X30, [X31], #0x30
	0x03386F9C RET
	0x03386FA0 STP X29, X30, [X31 - 0x50]!
	0x03386FA4 STP X26, X25, [X31 + 0x10]
	0x03386FA8 STP X24, X23, [X31 + 0x20]
	0x03386FAC STP X22, X21, [X31 + 0x30]
	0x03386FB0 STP X20, X19, [X31 + 0x40]
	0x03386FB4 ADD X29, X31, 0x0
	0x03386FB8 SUB X31, X31, 0x10
	0x03386FBC MRS X25, 0xC000
	0x03386FC0 LDR X8, [X25 + 0x28]
	0x03386FC4 ADRP X26, 0x1056000
	0x03386FC8 MOV W23, W5
	0x03386FCC MOV W21, W4
	0x03386FD0 STUR X8, [X29 - 0x8]
	0x03386FD4 LDRB W8, [X26 + 0xFDD]
	0x03386FD8 MOV W24, W3
	0x03386FDC MOV W20, W2
	0x03386FE0 MOV X22, X1
	0x03386FE4 MOV X19, X0
	0x03386FE8 TBNZ X8, 0x0, 0x3387000
	0x03386FEC ADRP X0, 0xDA2000
	0x03386FF0 LDR X0, [X0 + 0x78]
	0x03386FF4 BL 0x1C16CF4
	0x03386FF8 MOVZ W8, 0x1
	0x03386FFC STRB W8, [X26 + 0xFDD]
	0x03387000 ADRP X26, 0x1055000
	0x03387004 LDRB W8, [X26 + 0x4E2]
	0x03387008 CBNZ W8, 0x3387020
	0x0338700C ADRP X0, 0xD9B000
	0x03387010 LDR X0, [X0 + 0x588]
	0x03387014 BL 0x1C16CF4
	0x03387018 MOVZ W8, 0x1
	0x0338701C STRB W8, [X26 + 0x4E2]
	0x03387020 LDRSW X8, [X19 + 0x18]
	0x03387024 LDR W9, [X19 + 0x10]
	0x03387028 CMP W8, W9
	0x0338702C B.GE 0x33870C0
	0x03387030 CMP W8, W9
	0x03387034 B.CS 0x3387240
	0x03387038 LDR X9, [X19 + 0x8]
	0x0338703C ADD W10, W8, 0x1
	0x03387040 STRH W24, [X9, X8, LSL #1]
	0x03387044 STR W10, [X19 + 0x18]
	0x03387048 TBZ X20, 0x1F, 0x33870D4
	0x0338704C CBZ X22, 0x338723C
	0x03387050 ADRP X23, 0x1056000
	0x03387054 LDRB W8, [X23 + 0x4]
	0x03387058 LDR X22, [X22 + 0x30]
	0x0338705C CBNZ W8, 0x3387074
	0x03387060 ADRP X0, 0xD9B000
	0x03387064 LDR X0, [X0 + 0x588]
	0x03387068 BL 0x1C16CF4
	0x0338706C MOVZ W8, 0x1
	0x03387070 STRB W8, [X23 + 0x4]
	0x03387074 CBZ X22, 0x338723C
	0x03387078 LDR W8, [X22 + 0x10]
	0x0338707C CMP W8, 0x1
	0x03387080 B.NE 0x338714C
	0x03387084 LDRSW X23, [X19 + 0x18]
	0x03387088 LDR W8, [X19 + 0x10]
	0x0338708C CMP W23, W8
	0x03387090 B.GE 0x338714C
	0x03387094 CMP W23, W8
	0x03387098 B.CS 0x3387240
	0x0338709C LDR X24, [X19 + 0x8]
	0x033870A0 MOV X0, X22
	0x033870A4 MOV W1, W31
	0x033870A8 MOV X2, X31
	0x033870AC BL 0x3222A1C
	0x033870B0 ADD W8, W23, 0x1
	0x033870B4 STRH W0, [X24, X23, LSL #1]
	0x033870B8 STR W8, [X19 + 0x18]
	0x033870BC B 0x338715C
	0x033870C0 MOV X0, X19
	0x033870C4 MOV W1, W24
	0x033870C8 MOV X2, X31
	0x033870CC BL 0x3240EF4
	0x033870D0 TBNZ X20, 0x1F, 0x338704C
	0x033870D4 TBZ X23, 0x0, 0x3387174
	0x033870D8 CBZ X22, 0x338723C
	0x033870DC ADRP X23, 0x1056000
	0x033870E0 LDRB W8, [X23 + 0x4]
	0x033870E4 LDR X22, [X22 + 0x28]
	0x033870E8 CBNZ W8, 0x3387100
	0x033870EC ADRP X0, 0xD9B000
	0x033870F0 LDR X0, [X0 + 0x588]
	0x033870F4 BL 0x1C16CF4
	0x033870F8 MOVZ W8, 0x1
	0x033870FC STRB W8, [X23 + 0x4]
	0x03387100 CBZ X22, 0x338723C
	0x03387104 LDR W8, [X22 + 0x10]
	0x03387108 CMP W8, 0x1
	0x0338710C B.NE 0x3387164
	0x03387110 LDRSW X23, [X19 + 0x18]
	0x03387114 LDR W8, [X19 + 0x10]
	0x03387118 CMP W23, W8
	0x0338711C B.GE 0x3387164
	0x03387120 CMP W23, W8
	0x03387124 B.CS 0x3387240
	0x03387128 LDR X24, [X19 + 0x8]
	0x0338712C MOV X0, X22
	0x03387130 MOV W1, W31
	0x03387134 MOV X2, X31
	0x03387138 BL 0x3222A1C
	0x0338713C ADD W8, W23, 0x1
	0x03387140 STRH W0, [X24, X23, LSL #1]
	0x03387144 STR W8, [X19 + 0x18]
	0x03387148 B 0x3387174
	0x0338714C MOV X0, X19
	0x03387150 MOV X1, X22
	0x03387154 MOV X2, X31
	0x03387158 BL 0x3241020
	0x0338715C SUB W20, W31, W20
	0x03387160 B 0x3387174
	0x03387164 MOV X0, X19
	0x03387168 MOV X1, X22
	0x0338716C MOV X2, X31
	0x03387170 BL 0x3241020
	0x03387174 ADRP X8, 0xDA1000
	0x03387178 LDR X8, [X8 + 0x78]
	0x0338717C ADD X9, X31, 0x0
	0x03387180 SUB X22, X9, 0x20
	0x03387184 ADD X31, X22, 0x0
	0x03387188 LDR X0, [X8]
	0x0338718C STP X31, X31, [X9 - 0x20]
	0x03387190 STUR W31, [X9 - 0x10]
	0x03387194 LDR W8, [X0 + 0xE0]
	0x03387198 CBNZ W8, 0x33871A0
	0x0338719C BL 0x1C16DFC
	0x033871A0 CMP W21, 0x1
	0x033871A4 ADD X8, X22, 0x14
	0x033871A8 B.PL 0x33871B4
	0x033871AC MOV X1, X8
	0x033871B0 CBZ W20, 0x33871F4
	0x033871B4 MOVZ W9, 0xCCCD
	0x033871B8 SUB W11, W21, 0x2
	0x033871BC MOVK W9, 0xCCCC0000
	0x033871C0 MOVN W10, 0x9
	0x033871C4 MOV X1, X8
	0x033871C8 MOV W13, W11
	0x033871CC UMADDL X11, X20, X9, X31
	0x033871D0 MOV W12, W20
	0x033871D4 UBFM X20, X11, 0x23, 0x3F
	0x033871D8 MADD W11, W20, W10, W12
	0x033871DC ADD W11, W11, 0x30
	0x033871E0 STRH W11, [X1 - 0x2]!
	0x033871E4 SUB W11, W13, 0x1
	0x033871E8 TBZ X13, 0x1F, 0x33871C8
	0x033871EC CMP W12, 0x9
	0x033871F0 B.HI 0x33871C8
	0x033871F4 SUB X8, X8, X1
	0x033871F8 CMP X8, 0x0
	0x033871FC CINC X8, X8, LT
	0x03387200 UBFM X2, X8, 0x1, 0x3F
	0x03387204 MOV X0, X19
	0x03387208 MOV X3, X31
	0x0338720C BL 0x32414B8
	0x03387210 LDR X8, [X25 + 0x28]
	0x03387214 LDUR X9, [X29 - 0x8]
	0x03387218 CMP X8, X9
	0x0338721C B.NE 0x3387244
	0x03387220 ADD X31, X29, 0x0
	0x03387224 LDP X20, X19, [X31 + 0x40]
	0x03387228 LDP X22, X21, [X31 + 0x30]
	0x0338722C LDP X24, X23, [X31 + 0x20]
	0x03387230 LDP X26, X25, [X31 + 0x10]
	0x03387234 LDP X29, X30, [X31], #0x50
	0x03387238 RET
	0x0338723C BL 0x1C16F20
	0x03387240 BL 0x1C16F28
	0x03387244 BL 0x3EB1B20
	0x03387248 STR X30, [X31 - 0x30]!
	0x0338724C STP X22, X21, [X31 + 0x10]
	0x03387250 STP X20, X19, [X31 + 0x20]
	0x03387254 LDR W22, [X0 + 0x4]
	0x03387258 CMP W22, 0xA
	0x0338725C B.GT 0x3387270
	0x03387260 LDR W8, [X0]
	0x03387264 MOV X20, X0
	0x03387268 CMP W22, W8
	0x0338726C B.GE 0x3387284
	0x03387270 MOV W0, W31
	0x03387274 LDP X20, X19, [X31 + 0x20]
	0x03387278 LDP X22, X21, [X31 + 0x10]
	0x0338727C LDR X30, [X31], #0x30
	0x03387280 RET
	0x03387284 MOV X19, X1
	0x03387288 MOV X0, X20
	0x0338728C MOV X1, X31
	0x03387290 BL 0x338C3A8
	0x03387294 MOVZ W8, 0xCCCC
	0x03387298 MOV W21, W31
	0x0338729C MOVK W8, 0xCCC0000
	0x033872A0 SUBS W22, W22, 0x1
	0x033872A4 B.MI 0x33872D0
	0x033872A8 CMP W21, W8
	0x033872AC B.HI 0x3387270
	0x033872B0 LDRH W9, [X0]
	0x033872B4 ADD W10, W21, W21, 0x2, LSL
	0x033872B8 UBFM W21, W10, 0x1F, 0x1E
	0x033872BC CBZ W9, 0x33872A0
	0x033872C0 ADD W9, W21, W9
	0x033872C4 ADD X0, X0, 0x2
	0x033872C8 SUB W21, W9, 0x30
	0x033872CC B 0x33872A0
	0x033872D0 MOV X0, X20
	0x033872D4 MOV X1, X31
	0x033872D8 BL 0x338C38C
	0x033872DC TBZ X0, 0x0, 0x33872F4
	0x033872E0 SUB W21, W31, W21
	0x033872E4 CMP W21, 0x1
	0x033872E8 MOV W0, W31
	0x033872EC B.GE 0x3387274
	0x033872F0 B 0x33872F8
	0x033872F4 TBNZ X21, 0x1F, 0x3387270
	0x033872F8 MOVZ W0, 0x1
	0x033872FC STR W21, [X19]
	0x03387300 B 0x3387274
	0x03387304 STR X30, [X31 - 0x30]!
	0x03387308 STP X22, X21, [X31 + 0x10]
	0x0338730C STP X20, X19, [X31 + 0x20]
	0x03387310 LDR W22, [X0 + 0x4]
	0x03387314 CMP W22, 0x13
	0x03387318 B.GT 0x338732C
	0x0338731C LDR W8, [X0]
	0x03387320 MOV X20, X0
	0x03387324 CMP W22, W8
	0x03387328 B.GE 0x3387340
	0x0338732C MOV W0, W31
	0x03387330 LDP X20, X19, [X31 + 0x20]
	0x03387334 LDP X22, X21, [X31 + 0x10]
	0x03387338 LDR X30, [X31], #0x30
	0x0338733C RET
	0x03387340 MOV X19, X1
	0x03387344 MOV X0, X20
	0x03387348 MOV X1, X31
	0x0338734C BL 0x338C3A8
	0x03387350 ORR X8, X31, 0xCCCCCCCCCCCCCCCC
	0x03387354 MOV X21, X31
	0x03387358 MOVK X8, 0xCCC0000
	0x0338735C SUBS W22, W22, 0x1
	0x03387360 B.MI 0x338738C
	0x03387364 CMP X21, X8
	0x03387368 B.HI 0x338732C
	0x0338736C LDRH W9, [X0]
	0x03387370 ADD X10, X21, X21, 0x2, LSL
	0x03387374 UBFM X21, X10, 0x3F, 0x3E
	0x03387378 CBZ X9, 0x338735C
	0x0338737C ADD X9, X21, X9
	0x03387380 ADD X0, X0, 0x2
	0x03387384 SUB X21, X9, 0x30

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0x1057000
	015 Move W8, [X21+4058]
	016 Move X23, X7
	017 Move X28, X6
	018 Move X24, X5
	019 Move W27, W3
	020 Move X20, X1
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0xD6E000
	027 Move X0, [X0+1448]
	028 Call 0x1C17CF4
	029 Move X0, 0xD9D000
	030 Move X0, [X0+712]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+4058], W8
	034 Move W26, [X20+4]
	035 Move X0, X20
	036 Move X1, X31
	037 Call NumberBuffer.get_digits, X0
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X20, X0
	040 Compare X24, 0
	041 JumpIfEqual {107}
	042 Move X8, [X24+24]
	043 Move [X31+12], W27
	044 Move [X31], X28
	045 Compare X8, 0
	046 JumpIfEqual {143}
	047 Compare W8, 0
	048 JumpIfEqual {335}
	049 Move W9, [X24+32]
	050 Move W10, W31
	051 Subtract W11, W8, 1
	052 Move W25, W26
	053 Move W13, W9
	054 Move W12, W9
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Compare W13, 0
	058 JumpIfEqual {105}
	059 Compare X23, 0
	060 JumpIfEqual {336}
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CINC not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add X13, X24, W10
	065 Move W14, [X23+16]
	066 Move W13, [X13+32]
	067 Add W25, W14, W25
	068 Add W12, W13, W12
	069 Or W14, W12, W25
	070 Move TEMP, X14
	071 And TEMP, TEMP, -2147483648
	072 Compare TEMP, -2147483648
	073 JumpIfNotEqual {55}
	074 Move X0, 0xD76000
	075 Move X0, [X0+1888]
	076 Call 0x1C17D08
	077 Call 0x1C17F10
	078 Move X1, X31
	079 Move X19, X0
	080 Call ArgumentOutOfRangeException..ctor, X0
	081 Move X0, 0xDA5000
	082 Move X0, [X0+4048]
	083 Call 0x1C17D08
	084 Move X1, X0
	085 Move X0, X19
	086 Call 0x1C17DEC
	087 Move X21, 0x1057000
	088 Move W8, [X21+1250]
	089 Compare W8, 0
	090 JumpIfNotEqual {96}
	091 Move X0, 0xD9D000
	092 Move X0, [X0+1416]
	093 Call 0x1C17CF4
	094 Move W8, 1
	095 Move [X21+1250], W8
	096 NotImplemented "Instruction LDRSW not yet implemented."
	097 Move W9, [X19+16]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X9, [X19+8]
	101 Move W10, 48
	102 Add W11, W8, 1
	103 NotImplemented "Instruction STRH not yet implemented."
	104 Move [X19+24], W11
	105 NotImplemented "Instruction CMP not yet implemented."
	106 NotImplemented "Instruction CSEL not yet implemented."
	107 Move X23, 0xD9D000
	108 Move X23, [X23+1416]
	109 Add W21, W26, 1
	110 Move W22, 48
	111 Move X25, 0x1057000
	112 Move W26, 1
	113 Move X8, X20
	114 NotImplemented "Instruction LDRH not yet implemented."
	115 Move W10, [X25+1250]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 NotImplemented "Instruction CSEL not yet implemented."
	118 NotImplemented "Instruction CSEL not yet implemented."
	119 Compare W10, 0
	120 JumpIfNotEqual {124}
	121 Move X0, X23
	122 Call 0x1C17CF4
	123 Move [X25+1250], W26
	124 NotImplemented "Instruction LDRSW not yet implemented."
	125 Move W9, [X19+16]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X9, [X19+8]
	129 Add W10, W8, 1
	130 NotImplemented "Instruction STRH not yet implemented."
	131 Move [X19+24], W10
	132 Move X0, X19
	133 Move W1, W24
	134 Move X2, X31
	135 Call ValueStringBuilder.GrowAndAppend, X0, X1
	136 Subtract W21, W21, 1
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move W26, W31
	139 Move W1, 48
	140 Move X0, X19
	141 Move X2, X31
	142 Call ValueStringBuilder.GrowAndAppend, X0, X1
	143 Move W27, W31
	144 Move W25, W26
	145 Move X0, X20
	146 Move X1, X31
	147 Call String.wcslen, X0
	148 Move X21, 0x1057000
	149 Move W8, [X21+5]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 NotImplemented "Instruction CSEL not yet implemented."
	152 Compare W8, 0
	153 JumpIfNotEqual {162}
	154 Move X0, 0xD9B000
	155 Move X0, [X0+2128]
	156 Call 0x1C17CF4
	157 Move X0, 0xD9C000
	158 Move X0, [X0+1416]
	159 Call 0x1C17CF4
	160 Move W8, 1
	161 Move [X21+5], W8
	162 Move W8, [X19+16]
	163 NotImplemented "Instruction LDRSW not yet implemented."
	164 Subtract W9, W8, W25
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move X0, X19
	167 Move W1, W25
	168 Move X2, X31
	169 Call ValueStringBuilder.Grow, X0, X1
	170 Move W8, [X19+16]
	171 Add W9, W21, W25
	172 Move [X19+24], W9
	173 Move X9, 0xD9B000
	174 Move X9, [X9+2128]
	175 Subtract W8, W8, W21
	176 Move X22, [X9]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X0, X31
	179 Call ThrowHelper.ThrowArgumentOutOfRangeException
	180 Move X0, [X22+32]
	181 Move X22, [X19+8]
	182 Move W8, [X0+309]
	183 Move TEMP, X8
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfEqual {188}
	187 Call 0x1C5D684
	188 Move X8, 0xD9C000
	189 Move X8, [X8+712]
	190 Move W25, W25
	191 Add X0, X22, X21
	192 Move X1, X25
	193 Move X2, [X8]
	194 Call MemoryMarshal.GetReference, X0
	195 Subtract W29, W26, 1
	196 Add X9, X0, X25
	197 Move W22, W31
	198 Move W8, W31
	199 Subtract X9, X9, 2
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Subtract X21, X9, 2
	202 NotImplemented "Instruction LDRH not yet implemented."
	203 Move W10, 48
	204 NotImplemented "Instruction CMP not yet implemented."
	205 NotImplemented "Instruction STRH not yet implemented."
	206 Add W8, W8, 1
	207 Compare W29, 0
	208 JumpIfEqual {230}
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Compare X23, 0
	211 JumpIfEqual {336}
	212 Move W25, [X23+16]
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Subtract W25, W25, 1
	215 Move X0, X23
	216 Move W1, W25
	217 Move X2, X31
	218 Call String.get_Chars, X0, X1
	219 NotImplemented "Instruction CMP not yet implemented."
	220 NotImplemented "Instruction STRH not yet implemented."
	221 Move W8, [X24+24]
	222 Subtract W9, W8, 1
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move X9, W22
	225 Add X22, X9, 1
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Add X8, X24, X22
	228 Move W27, [X8+32]
	229 Move W8, W31
	230 Subtract W29, W29, 1
	231 Move X9, X21
	232 Add X20, X20, W28
	233 Move W27, [X31+12]
	234 Move X28, [X31]
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Move X21, 0x1057000
	237 Move W8, [X21+4]
	238 Compare W8, 0
	239 JumpIfNotEqual {245}
	240 Move X0, 0xD9C000
	241 Move X0, [X0+1416]
	242 Call 0x1C17CF4
	243 Move W8, 1
	244 Move [X21+4], W8
	245 Compare X28, 0
	246 JumpIfEqual {336}
	247 Move W8, [X28+16]
	248 NotImplemented "Instruction CMP not yet implemented."
	249 NotImplemented "Instruction LDRSW not yet implemented."
	250 Move W8, [X19+16]
	251 NotImplemented "Instruction CMP not yet implemented."
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Move X22, [X19+8]
	254 Move X0, X28
	255 Move W1, W31
	256 Move X2, X31
	257 Call String.get_Chars, X0, X1
	258 Add W8, W21, 1
	259 NotImplemented "Instruction STRH not yet implemented."
	260 Move [X19+24], W8
	261 Move TEMP, X26
	262 And TEMP, TEMP, -2147483648
	263 Compare TEMP, -2147483648
	264 JumpIfNotEqual {290}
	265 Move X0, X19
	266 Move X1, X28
	267 Move X2, X31
	268 Call ValueStringBuilder.AppendSlow, X0, X1
	269 Move TEMP, X26
	270 And TEMP, TEMP, -2147483648
	271 Compare TEMP, -2147483648
	272 JumpIfNotEqual {290}
	273 Move X8, 0xD6D000
	274 Move X8, [X8+1448]
	275 Move X0, [X8]
	276 Move W8, [X0+224]
	277 Compare W8, 0
	278 JumpIfNotEqual {280}
	279 Call 0x1C17DFC
	280 Subtract W8, W31, W26
	281 NotImplemented "Instruction CMP not yet implemented."
	282 NotImplemented "Instruction CSNEG not yet implemented."
	283 Move W1, 48
	284 Move X0, X19
	285 Move W2, W22
	286 Move X3, X31
	287 Call ValueStringBuilder.Append, X0, X1, X2
	288 Subtract W27, W27, W22
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Move X21, 0xD9C000
	291 Move X21, [X21+1416]
	292 Add W23, W27, 1
	293 Move W24, 48
	294 Move X25, 0x1056000
	295 Move W26, 1
	296 Move X8, X20
	297 NotImplemented "Instruction LDRH not yet implemented."
	298 Move W10, [X25+1250]
	299 NotImplemented "Instruction CMP not yet implemented."
	300 NotImplemented "Instruction CSEL not yet implemented."
	301 NotImplemented "Instruction CSEL not yet implemented."
	302 Compare W10, 0
	303 JumpIfNotEqual {307}
	304 Move X0, X21
	305 Call 0x1C17CF4
	306 Move [X25+1250], W26
	307 NotImplemented "Instruction LDRSW not yet implemented."
	308 Move W9, [X19+16]
	309 NotImplemented "Instruction CMP not yet implemented."
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Move X9, [X19+8]
	312 Add W10, W8, 1
	313 NotImplemented "Instruction STRH not yet implemented."
	314 Move [X19+24], W10
	315 Move X0, X19
	316 Move W1, W22
	317 Move X2, X31
	318 Call ValueStringBuilder.GrowAndAppend, X0, X1
	319 Subtract W23, W23, 1
	320 NotImplemented "Instruction CMP not yet implemented."
	321 Move X20, [X31+96]
	322 Move X19, [X31+104]
	323 Move X22, [X31+80]
	324 Move X21, [X31+88]
	325 Move X24, [X31+64]
	326 Move X23, [X31+72]
	327 Move X26, [X31+48]
	328 Move X25, [X31+56]
	329 Move X28, [X31+32]
	330 Move X27, [X31+40]
	331 Move X29, [X31+16]
	332 Move X30, [X31+24]
	333 Add X31, X31, 112
	334 Return 
	335 Call 0x1C17F28
	336 Call 0x1C17F20

Method: System.Void FormatNumber(ref System.Text.ValueStringBuilder sb, ref System.Number/NumberBuffer number, System.Int32 nMinDigits, System.Int32 nMaxDigits, System.Globalization.NumberFormatInfo info)

Disassembly:
	0x03387388 B 0x338735C
	0x0338738C MOV X0, X20
	0x03387390 MOV X1, X31
	0x03387394 BL 0x338C38C
	0x03387398 TBZ X0, 0x0, 0x33873AC
	0x0338739C SUB X21, X31, X21
	0x033873A0 CMP X21, 0x1
	0x033873A4 B.GE 0x338732C
	0x033873A8 B 0x33873B0
	0x033873AC TBNZ X21, 0x0, 0x338732C
	0x033873B0 MOVZ W0, 0x1
	0x033873B4 STR X21, [X19]
	0x033873B8 B 0x3387330
	0x033873BC STP X30, X21, [X31 - 0x20]!
	0x033873C0 STP X20, X19, [X31 + 0x10]
	0x033873C4 LDR W21, [X0 + 0x4]
	0x033873C8 CMP W21, 0xA
	0x033873CC B.GT 0x33873F4
	0x033873D0 LDR W8, [X0]
	0x033873D4 MOV X20, X0
	0x033873D8 CMP W21, W8
	0x033873DC B.LT 0x33873F4
	0x033873E0 MOV X19, X1
	0x033873E4 MOV X0, X20
	0x033873E8 MOV X1, X31
	0x033873EC BL 0x338C38C
	0x033873F0 TBZ X0, 0x0, 0x3387408
	0x033873F4 MOV W8, W31
	0x033873F8 LDP X20, X19, [X31 + 0x10]
	0x033873FC MOV W0, W8
	0x03387400 LDP X30, X21, [X31], #0x20
	0x03387404 RET
	0x03387408 MOV X0, X20
	0x0338740C MOV X1, X31
	0x03387410 BL 0x338C3A8
	0x03387414 MOVZ W9, 0x9999
	0x03387418 MOV W11, W31
	0x0338741C MOVK W9, 0x19990000
	0x03387420 MOV W10, W11
	0x03387424 SUBS W21, W21, 0x1
	0x03387428 B.MI 0x3387460
	0x0338742C CMP W10, W9
	0x03387430 B.HI 0x33873F4
	0x03387434 LDRH W11, [X0]
	0x03387438 ADD W8, W10, W10, 0x2, LSL
	0x0338743C UBFM W10, W8, 0x1F, 0x1E
	0x03387440 CBZ W11, 0x3387424
	0x03387444 ADD W11, W10, W11
	0x03387448 SUB W11, W11, 0x30
	0x0338744C MOV W8, W31
	0x03387450 CMP W11, W10
	0x03387454 ADD X0, X0, 0x2
	0x03387458 B.CS 0x3387420
	0x0338745C B 0x33873F8
	0x03387460 MOVZ W8, 0x1
	0x03387464 STR W10, [X19]
	0x03387468 B 0x33873F8
	0x0338746C STP X30, X21, [X31 - 0x20]!
	0x03387470 STP X20, X19, [X31 + 0x10]
	0x03387474 LDR W21, [X0 + 0x4]
	0x03387478 CMP W21, 0x14
	0x0338747C B.GT 0x33874A4
	0x03387480 LDR W8, [X0]
	0x03387484 MOV X20, X0
	0x03387488 CMP W21, W8
	0x0338748C B.LT 0x33874A4
	0x03387490 MOV X19, X1
	0x03387494 MOV X0, X20
	0x03387498 MOV X1, X31
	0x0338749C BL 0x338C38C
	0x033874A0 TBZ X0, 0x0, 0x33874B8
	0x033874A4 MOV W8, W31
	0x033874A8 LDP X20, X19, [X31 + 0x10]
	0x033874AC MOV W0, W8
	0x033874B0 LDP X30, X21, [X31], #0x20
	0x033874B4 RET
	0x033874B8 MOV X0, X20
	0x033874BC MOV X1, X31
	0x033874C0 BL 0x338C3A8
	0x033874C4 ORR X9, X31, 0x9999999999999999
	0x033874C8 MOV X11, X31
	0x033874CC MOVK X9, 0x19990000
	0x033874D0 MOV X10, X11
	0x033874D4 SUBS W21, W21, 0x1
	0x033874D8 B.MI 0x3387510
	0x033874DC CMP X10, X9
	0x033874E0 B.HI 0x33874A4
	0x033874E4 LDRH W11, [X0]
	0x033874E8 ADD X8, X10, X10, 0x2, LSL
	0x033874EC UBFM X10, X8, 0x3F, 0x3E
	0x033874F0 CBZ X11, 0x33874D4
	0x033874F4 ADD X11, X10, X11
	0x033874F8 SUB X11, X11, 0x30
	0x033874FC MOV W8, W31
	0x03387500 CMP X11, X10
	0x03387504 ADD X0, X0, 0x2
	0x03387508 B.CS 0x33874D0
	0x0338750C B 0x33874A8
	0x03387510 MOVZ W8, 0x1
	0x03387514 STR X10, [X19]
	0x03387518 B 0x33874A8
	0x0338751C SUB X31, X31, 0x80
	0x03387520 STP X29, X30, [X31 + 0x20]
	0x03387524 STP X28, X27, [X31 + 0x30]
	0x03387528 STP X26, X25, [X31 + 0x40]
	0x0338752C STP X24, X23, [X31 + 0x50]
	0x03387530 STP X22, X21, [X31 + 0x60]
	0x03387534 STP X20, X19, [X31 + 0x70]
	0x03387538 ADRP X20, 0x1055000
	0x0338753C LDRB W8, [X20 + 0xFE7]
	0x03387540 MOV X27, X5
	0x03387544 MOV X19, X4
	0x03387548 MOV X25, X3
	0x0338754C MOV W22, W2
	0x03387550 MOV X23, X1
	0x03387554 MOV X21, X0
	0x03387558 TBNZ X8, 0x0, 0x33875AC
	0x0338755C ADRP X0, 0xDA3000
	0x03387560 LDR X0, [X0 + 0xFD8]
	0x03387564 BL 0x1C16CF4
	0x03387568 ADRP X0, 0xDA1000
	0x0338756C LDR X0, [X0 + 0x78]
	0x03387570 BL 0x1C16CF4
	0x03387574 ADRP X0, 0xDA0000
	0x03387578 LDR X0, [X0 + 0x7E8]
	0x0338757C BL 0x1C16CF4
	0x03387580 ADRP X0, 0xD9B000
	0x03387584 LDR X0, [X0 + 0x28]
	0x03387588 BL 0x1C16CF4
	0x0338758C ADRP X0, 0xD71000
	0x03387590 LDR X0, [X0 + 0x3F8]
	0x03387594 BL 0x1C16CF4
	0x03387598 ADRP X0, 0xD6D000
	0x0338759C LDR X0, [X0 + 0x2A8]
	0x033875A0 BL 0x1C16CF4
	0x033875A4 MOVZ W8, 0x1
	0x033875A8 STRB W8, [X20 + 0xFE7]
	0x033875AC CBZ W23, 0x3387AB0
	0x033875B0 LDRH W28, [X21]
	0x033875B4 TBNZ X22, 0x0, 0x33875CC
	0x033875B8 MOV W24, W31
	0x033875BC UBFM X20, X23, 0x20, 0x3F
	0x033875C0 TBNZ X22, 0x2, 0x3387638
	0x033875C4 MOVZ W25, 0x1
	0x033875C8 B 0x3387810
	0x033875CC ADRP X26, 0xDA1000
	0x033875D0 LDR X26, [X26 + 0x78]
	0x033875D4 LDR X0, [X26]
	0x033875D8 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0x1056000
	015 Move W8, [X23+4059]
	016 Move X19, X4
	017 Move W20, W3
	018 Move X21, X1
	019 Move X22, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0xDA2000
	025 Move X0, [X0+120]
	026 Call 0x1C17CF4
	027 Move X0, 0xD6E000
	028 Move X0, [X0+2568]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X23+4059], W8
	032 Move X25, 0xDA2000
	033 Move X25, [X25+120]
	034 Move X0, X21
	035 Move X1, X31
	036 Call NumberBuffer.get_sign, X0
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {58}
	041 Move X0, [X25]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X25]
	047 Compare X19, 0
	048 JumpIfEqual {162}
	049 Move X8, [X0+184]
	050 Move X8, [X8+32]
	051 Compare X8, 0
	052 JumpIfEqual {162}
	053 NotImplemented "Instruction LDRSW not yet implemented."
	054 Move W10, [X8+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Add X8, X8, X9
	057 Add X8, X8, 32
	058 Move X8, 0xD6E000
	059 Move X8, [X8+2568]
	060 Move X23, [X8]
	061 Compare X23, 0
	062 JumpIfEqual {162}
	063 Move W8, [X23+16]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move W24, W31
	066 Move X29, 0x1056000
	067 Move X0, X23
	068 Move W1, W24
	069 Move X2, X31
	070 Call String.get_Chars, X0, X1
	071 And W8, W0, 0xFFFF
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Compare X19, 0
	075 JumpIfEqual {162}
	076 Move X0, [X25]
	077 Move X28, [X19+16]
	078 Move X27, [X19+56]
	079 Move X26, [X19+64]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X0, X22
	085 Move X1, X21
	086 Move W3, W20
	087 Move X5, X28
	088 Move X6, X27
	089 Move X7, X26
	090 Call Number.FormatFixed, X0, X1, X2, X3, X4, X5, X6, X7
	091 Compare X19, 0
	092 JumpIfEqual {162}
	093 Move X8, 0x1057000
	094 Move W8, [X8+4]
	095 Move X26, [X19+48]
	096 Compare W8, 0
	097 JumpIfNotEqual {104}
	098 Move X0, 0xD9C000
	099 Move X0, [X0+1416]
	100 Call 0x1C17CF4
	101 Move X8, 0x1057000
	102 Move W9, 1
	103 Move [X8+4], W9
	104 Compare X26, 0
	105 JumpIfEqual {162}
	106 Move W8, [X26+16]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 NotImplemented "Instruction LDRSW not yet implemented."
	109 Move W8, [X22+16]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X28, [X22+8]
	113 Move X0, X26
	114 Move W1, W31
	115 Move X2, X31
	116 Call String.get_Chars, X0, X1
	117 Add W8, W27, 1
	118 NotImplemented "Instruction STRH not yet implemented."
	119 Move [X22+24], W8
	120 Move W8, [X29+1250]
	121 Move W26, W0
	122 Compare W8, 0
	123 JumpIfNotEqual {129}
	124 Move X0, 0xD9C000
	125 Move X0, [X0+1416]
	126 Call 0x1C17CF4
	127 Move W8, 1
	128 Move [X29+1250], W8
	129 NotImplemented "Instruction LDRSW not yet implemented."
	130 Move W9, [X22+16]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X9, [X22+8]
	134 Add W10, W8, 1
	135 NotImplemented "Instruction STRH not yet implemented."
	136 Move [X22+24], W10
	137 Move X0, X22
	138 Move X1, X26
	139 Move X2, X31
	140 Call ValueStringBuilder.AppendSlow, X0, X1
	141 Move X0, X22
	142 Move W1, W26
	143 Move X2, X31
	144 Call ValueStringBuilder.GrowAndAppend, X0, X1
	145 Move W8, [X23+16]
	146 Add W24, W24, 1
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X20, [X31+96]
	149 Move X19, [X31+104]
	150 Move X22, [X31+80]
	151 Move X21, [X31+88]
	152 Move X24, [X31+64]
	153 Move X23, [X31+72]
	154 Move X26, [X31+48]
	155 Move X25, [X31+56]
	156 Move X28, [X31+32]
	157 Move X27, [X31+40]
	158 Move X29, [X31+16]
	159 Move X30, [X31+24]
	160 Add X31, X31, 112
	161 Return 
	162 Call 0x1C17F20
	163 Call 0x1C17F28

Method: System.Void FormatScientific(ref System.Text.ValueStringBuilder sb, ref System.Number/NumberBuffer number, System.Int32 nMinDigits, System.Int32 nMaxDigits, System.Globalization.NumberFormatInfo info, System.Char expChar)

Disassembly:
	0x033875DC CBNZ W8, 0x33875E4
	0x033875E0 BL 0x1C16DFC
	0x033875E4 SUB W8, W28, 0x9
	0x033875E8 CMP W8, 0x5
	0x033875EC B.CS 0x3387720
	0x033875F0 CMP W23, 0x2
	0x033875F4 B.CC 0x3387AB0
	0x033875F8 MOVZ W24, 0x1
	0x033875FC LDR X0, [X26]
	0x03387600 LDRH W28, [X21, W24, SXTW]
	0x03387604 LDR W8, [X0 + 0xE0]
	0x03387608 CBNZ W8, 0x3387610
	0x0338760C BL 0x1C16DFC
	0x03387610 SUB W8, W28, 0x9
	0x03387614 CMP W8, 0x5
	0x03387618 B.CS 0x338762C
	0x0338761C ADD W24, W24, 0x1
	0x03387620 CMP W23, W24
	0x03387624 B.NE 0x33875FC
	0x03387628 B 0x3387AB0
	0x0338762C CMP W28, 0x20
	0x03387630 B.EQ 0x338761C
	0x03387634 B 0x33875BC
	0x03387638 CBZ X25, 0x3387AF8
	0x0338763C ADRP X8, 0xD71000
	0x03387640 LDP X26, X25, [X25 + 0x28]
	0x03387644 LDR X8, [X8 + 0x3F8]
	0x03387648 MOV X2, X31
	0x0338764C MOV X0, X26
	0x03387650 LDR X1, [X8]
	0x03387654 BL 0x321BA08
	0x03387658 TBZ X0, 0x0, 0x33876A0
	0x0338765C ADRP X8, 0xD6D000
	0x03387660 LDR X8, [X8 + 0x2A8]
	0x03387664 MOV X0, X25
	0x03387668 MOV X2, X31
	0x0338766C LDR X1, [X8]
	0x03387670 BL 0x321BA08
	0x03387674 TBZ X0, 0x0, 0x33876A0
	0x03387678 CMP W28, 0x2B
	0x0338767C B.EQ 0x33879BC
	0x03387680 CMP W28, 0x2D
	0x03387684 B.NE 0x33875C4
	0x03387688 ADD W24, W24, 0x1
	0x0338768C CMP W24, W23
	0x03387690 B.CS 0x3387AB0
	0x03387694 LDRH W28, [X21, W24, SXTW]
	0x03387698 MOVN W25, 0x0
	0x0338769C B 0x3387810
	0x033876A0 ADRP X8, 0xDA0000
	0x033876A4 LDR X8, [X8 + 0x7E8]
	0x033876A8 CMP W24, W23
	0x033876AC LDR X20, [X8]
	0x033876B0 B.LS 0x33876BC
	0x033876B4 MOV X0, X31
	0x033876B8 BL 0x339D6EC
	0x033876BC LDR X0, [X20 + 0x20]
	0x033876C0 LDRB W8, [X0 + 0x135]
	0x033876C4 TBNZ X8, 0x0, 0x33876CC
	0x033876C8 BL 0x1C5C684
	0x033876CC MOV X0, X26
	0x033876D0 MOV X1, X31
	0x033876D4 SUB W23, W23, W24
	0x033876D8 ADD X21, X21, W24, 0x1, SXTW
	0x033876DC BL 0x32277A8
	0x033876E0 TBNZ X0, 0x0, 0x3387770
	0x033876E4 ADRP X20, 0x1052000
	0x033876E8 LDRB W8, [X20 + 0x762]
	0x033876EC CBNZ W8, 0x3387704
	0x033876F0 ADRP X0, 0xD93000
	0x033876F4 LDR X0, [X0 + 0x290]
	0x033876F8 BL 0x1C16CF4
	0x033876FC MOVZ W8, 0x1
	0x03387700 STRB W8, [X20 + 0x762]
	0x03387704 CBZ X26, 0x338772C
	0x03387708 MOV X0, X26
	0x0338770C MOV X1, X31
	0x03387710 BL 0x3225708
	0x03387714 LDR W3, [X26 + 0x10]
	0x03387718 MOV X2, X0
	0x0338771C B 0x3387734
	0x03387720 CMP W28, 0x20
	0x03387724 B.NE 0x33875B8
	0x03387728 B 0x33875F0
	0x0338772C MOV X2, X31
	0x03387730 MOV X3, X31
	0x03387734 ADRP X8, 0xDA3000
	0x03387738 LDR X8, [X8 + 0xFD8]
	0x0338773C MOV X0, X21
	0x03387740 MOV X1, X23
	0x03387744 LDR X4, [X8]
	0x03387748 BL 0x338C288
	0x0338774C TBZ X0, 0x0, 0x3387770
	0x03387750 CBZ X26, 0x3387AF8
	0x03387754 LDR W24, [X26 + 0x10]
	0x03387758 CMP W24, W23
	0x0338775C B.CS 0x3387AB0
	0x03387760 SXTW X8, W24
	0x03387764 LDRH W28, [X21, X8, LSL #1]
	0x03387768 MOV X20, X31
	0x0338776C B 0x338780C
	0x03387770 MOV X0, X25
	0x03387774 MOV X1, X31
	0x03387778 BL 0x32277A8
	0x0338777C TBNZ X0, 0x0, 0x3387804
	0x03387780 ADRP X20, 0x1052000
	0x03387784 LDRB W8, [X20 + 0x762]
	0x03387788 CBNZ W8, 0x33877A0
	0x0338778C ADRP X0, 0xD93000
	0x03387790 LDR X0, [X0 + 0x290]
	0x03387794 BL 0x1C16CF4
	0x03387798 MOVZ W8, 0x1
	0x0338779C STRB W8, [X20 + 0x762]
	0x033877A0 CBZ X25, 0x33877BC
	0x033877A4 MOV X0, X25
	0x033877A8 MOV X1, X31
	0x033877AC BL 0x3225708
	0x033877B0 LDR W3, [X25 + 0x10]
	0x033877B4 MOV X2, X0
	0x033877B8 B 0x33877C4
	0x033877BC MOV X2, X31
	0x033877C0 MOV X3, X31
	0x033877C4 ADRP X8, 0xDA3000
	0x033877C8 LDR X8, [X8 + 0xFD8]
	0x033877CC MOV X0, X21
	0x033877D0 MOV X1, X23
	0x033877D4 LDR X4, [X8]
	0x033877D8 BL 0x338C288
	0x033877DC TBZ X0, 0x0, 0x3387804
	0x033877E0 CBZ X25, 0x3387AF8
	0x033877E4 LDR W24, [X25 + 0x10]
	0x033877E8 CMP W24, W23
	0x033877EC B.CS 0x3387AB0
	0x033877F0 SXTW X8, W24
	0x033877F4 LDRH W28, [X21, X8, LSL #1]
	0x033877F8 MOV X20, X31
	0x033877FC MOVN W25, 0x0
	0x03387800 B 0x3387810
	0x03387804 MOV X20, X31
	0x03387808 MOV W24, W31
	0x0338780C MOVZ W25, 0x1
	0x03387810 ADRP X29, 0xDA1000
	0x03387814 LDR X29, [X29 + 0x78]
	0x03387818 LDR X0, [X29]
	0x0338781C LDR W8, [X0 + 0xE0]
	0x03387820 CBNZ W8, 0x3387828
	0x03387824 BL 0x1C16DFC
	0x03387828 SUB W26, W28, 0x30
	0x0338782C CMP W26, 0x9
	0x03387830 B.HI 0x3387AB0

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X24, 0x1056000
	014 Move W8, [X24+4060]
	015 Move W19, W5
	016 Move X20, X4
	017 Move W23, W3
	018 Move X22, X1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0xDA2000
	025 Move X0, [X0+120]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+4060], W8
	029 Move X0, X22
	030 Move X1, X31
	031 Call NumberBuffer.get_digits, X0
	032 Move X8, X0
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X25, 0x1056000
	035 Move W10, [X25+1250]
	036 Move W11, 48
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSEL not yet implemented."
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 Compare W10, 0
	041 JumpIfNotEqual {47}
	042 Move X0, 0xD9C000
	043 Move X0, [X0+1416]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X25+1250], W8
	047 NotImplemented "Instruction LDRSW not yet implemented."
	048 Move W9, [X21+16]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X9, [X21+8]
	052 Add W10, W8, 1
	053 NotImplemented "Instruction STRH not yet implemented."
	054 Move [X21+24], W10
	055 Move X0, X21
	056 Move W1, W24
	057 Move X2, X31
	058 Call ValueStringBuilder.GrowAndAppend, X0, X1
	059 Subtract W27, W23, 1
	060 Compare X20, 0
	061 JumpIfEqual {159}
	062 Move X24, 0x1057000
	063 Move W8, [X24+4]
	064 Move X23, [X20+56]
	065 Compare W8, 0
	066 JumpIfNotEqual {72}
	067 Move X0, 0xD9C000
	068 Move X0, [X0+1416]
	069 Call 0x1C17CF4
	070 Move W8, 1
	071 Move [X24+4], W8
	072 Compare X23, 0
	073 JumpIfEqual {159}
	074 Move W8, [X23+16]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction LDRSW not yet implemented."
	077 Move W8, [X21+16]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X28, [X21+8]
	081 Move X0, X23
	082 Move W1, W31
	083 Move X2, X31
	084 Call String.get_Chars, X0, X1
	085 Add W8, W24, 1
	086 NotImplemented "Instruction STRH not yet implemented."
	087 Move [X21+24], W8
	088 Move X0, X21
	089 Move X1, X23
	090 Move X2, X31
	091 Call ValueStringBuilder.AppendSlow, X0, X1
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X23, 0xD9C000
	094 Move X23, [X23+1416]
	095 Move W28, 48
	096 Move W29, 1
	097 Move X8, X26
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 Move W10, [X25+1250]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 NotImplemented "Instruction CSEL not yet implemented."
	102 NotImplemented "Instruction CSEL not yet implemented."
	103 Compare W10, 0
	104 JumpIfNotEqual {108}
	105 Move X0, X23
	106 Call 0x1C17CF4
	107 Move [X25+1250], W29
	108 NotImplemented "Instruction LDRSW not yet implemented."
	109 Move W9, [X21+16]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X9, [X21+8]
	113 Add W10, W8, 1
	114 NotImplemented "Instruction STRH not yet implemented."
	115 Move [X21+24], W10
	116 Move X0, X21
	117 Move W1, W24
	118 Move X2, X31
	119 Call ValueStringBuilder.GrowAndAppend, X0, X1
	120 Subtract W27, W27, 1
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X23, 0xDA2000
	123 Move X23, [X23+120]
	124 Move X0, X22
	125 Move X1, X31
	126 Call NumberBuffer.get_digits, X0
	127 NotImplemented "Instruction LDRH not yet implemented."
	128 Compare W8, 0
	129 JumpIfEqual {132}
	130 Move W8, [X22+4]
	131 Subtract W22, W8, 1
	132 Move W22, W31
	133 Move X0, [X23]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Move X0, X21
	139 Move X1, X20
	140 Move W2, W22
	141 Move W3, W19
	142 Move X20, [X31+80]
	143 Move X19, [X31+88]
	144 Move X22, [X31+64]
	145 Move X21, [X31+72]
	146 Move X24, [X31+48]
	147 Move X23, [X31+56]
	148 Move X26, [X31+32]
	149 Move X25, [X31+40]
	150 Move X28, [X31+16]
	151 Move X27, [X31+24]
	152 Move W4, 3
	153 Move W5, 1
	154 Move X29, [X31+96]
	155 Move X30, [X31+104]
	156 Call Number.FormatExponent, X0, X1, X2, X3, X4, X5
	157 Return 
	158 Call 0x1C17F28
	159 Call 0x1C17F20

Method: System.Void FormatExponent(ref System.Text.ValueStringBuilder sb, System.Globalization.NumberFormatInfo info, System.Int32 value, System.Char expChar, System.Int32 minDigits, System.Boolean positiveSign)

Disassembly:
	0x03387FA0 SUB X8, X8, X25
	0x03387FA4 CMP X8, 0x0
	0x03387FA8 CINC X8, X8, LT
	0x03387FAC SBFM X21, X8, 0x1, 0x3F
	0x03387FB0 CMP X21, X27, ASR
	0x03387FB4 B.GE 0x3387FDC
	0x03387FB8 LDR X0, [X26]
	0x03387FBC LDR W8, [X0 + 0xE0]
	0x03387FC0 CBNZ W8, 0x3387FC8
	0x03387FC4 BL 0x1C16DFC
	0x03387FC8 MOV X0, X20
	0x03387FCC MOV X1, X19
	0x03387FD0 MOV W2, W21
	0x03387FD4 BL 0x338A158
	0x03387FD8 TBZ X0, 0x0, 0x3387FF8
	0x03387FDC LDP X20, X19, [X31 + 0x50]
	0x03387FE0 LDP X22, X21, [X31 + 0x40]
	0x03387FE4 LDP X24, X23, [X31 + 0x30]
	0x03387FE8 LDP X26, X25, [X31 + 0x20]
	0x03387FEC LDP X30, X27, [X31 + 0x10]
	0x03387FF0 ADD X31, X31, 0x60
	0x03387FF4 RET
	0x03387FF8 LDR X0, [X26]
	0x03387FFC BL 0x19903D0
	0x03388000 MOV W0, W31
	0x03388004 MOV X1, X31
	0x03388008 BL 0x3387AFC
	0x0338800C SUB X31, X31, 0x80
	0x03388010 STP X29, X30, [X31 + 0x20]
	0x03388014 STP X28, X27, [X31 + 0x30]
	0x03388018 STP X26, X25, [X31 + 0x40]
	0x0338801C STP X24, X23, [X31 + 0x50]
	0x03388020 STP X22, X21, [X31 + 0x60]
	0x03388024 STP X20, X19, [X31 + 0x70]
	0x03388028 ADRP X24, 0x1054000
	0x0338802C LDRB W8, [X24 + 0xFE8]
	0x03388030 MOV X27, X5
	0x03388034 MOV X19, X4
	0x03388038 MOV X25, X3
	0x0338803C MOV W22, W2
	0x03388040 MOV X23, X1
	0x03388044 MOV X21, X0
	0x03388048 TBNZ X8, 0x0, 0x338809C
	0x0338804C ADRP X0, 0xDA2000
	0x03388050 LDR X0, [X0 + 0xFD8]
	0x03388054 BL 0x1C16CF4
	0x03388058 ADRP X0, 0xDA0000
	0x0338805C LDR X0, [X0 + 0x78]
	0x03388060 BL 0x1C16CF4
	0x03388064 ADRP X0, 0xD9F000
	0x03388068 LDR X0, [X0 + 0x7E8]
	0x0338806C BL 0x1C16CF4
	0x03388070 ADRP X0, 0xD9A000
	0x03388074 LDR X0, [X0 + 0x28]
	0x03388078 BL 0x1C16CF4
	0x0338807C ADRP X0, 0xD70000
	0x03388080 LDR X0, [X0 + 0x3F8]
	0x03388084 BL 0x1C16CF4
	0x03388088 ADRP X0, 0xD6C000
	0x0338808C LDR X0, [X0 + 0x2A8]
	0x03388090 BL 0x1C16CF4
	0x03388094 MOVZ W8, 0x1
	0x03388098 STRB W8, [X24 + 0xFE8]
	0x0338809C CBZ W23, 0x33885A0
	0x033880A0 LDRH W28, [X21]
	0x033880A4 TBNZ X22, 0x0, 0x33880BC
	0x033880A8 MOV W24, W31
	0x033880AC UBFM X20, X23, 0x20, 0x3F
	0x033880B0 TBNZ X22, 0x2, 0x3388128
	0x033880B4 MOVZ W25, 0x1
	0x033880B8 B 0x3388300
	0x033880BC ADRP X26, 0xDA0000
	0x033880C0 LDR X26, [X26 + 0x78]
	0x033880C4 LDR X0, [X26]
	0x033880C8 LDR W8, [X0 + 0xE0]
	0x033880CC CBNZ W8, 0x33880D4
	0x033880D0 BL 0x1C16DFC
	0x033880D4 SUB W8, W28, 0x9
	0x033880D8 CMP W8, 0x5
	0x033880DC B.CS 0x3388210
	0x033880E0 CMP W23, 0x2
	0x033880E4 B.CC 0x33885A0
	0x033880E8 MOVZ W24, 0x1
	0x033880EC LDR X0, [X26]
	0x033880F0 LDRH W28, [X21, W24, SXTW]
	0x033880F4 LDR W8, [X0 + 0xE0]
	0x033880F8 CBNZ W8, 0x3388100
	0x033880FC BL 0x1C16DFC
	0x03388100 SUB W8, W28, 0x9
	0x03388104 CMP W8, 0x5
	0x03388108 B.CS 0x338811C
	0x0338810C ADD W24, W24, 0x1
	0x03388110 CMP W23, W24
	0x03388114 B.NE 0x33880EC
	0x03388118 B 0x33885A0
	0x0338811C CMP W28, 0x20
	0x03388120 B.EQ 0x338810C
	0x03388124 B 0x33880AC
	0x03388128 CBZ X25, 0x33885F4
	0x0338812C ADRP X8, 0xD70000
	0x03388130 LDP X26, X25, [X25 + 0x28]
	0x03388134 LDR X8, [X8 + 0x3F8]
	0x03388138 MOV X2, X31
	0x0338813C MOV X0, X26
	0x03388140 LDR X1, [X8]
	0x03388144 BL 0x321BA08
	0x03388148 TBZ X0, 0x0, 0x3388190
	0x0338814C ADRP X8, 0xD6C000
	0x03388150 LDR X8, [X8 + 0x2A8]
	0x03388154 MOV X0, X25
	0x03388158 MOV X2, X31
	0x0338815C LDR X1, [X8]
	0x03388160 BL 0x321BA08
	0x03388164 TBZ X0, 0x0, 0x3388190
	0x03388168 CMP W28, 0x2B
	0x0338816C B.EQ 0x338858C
	0x03388170 CMP W28, 0x2D
	0x03388174 B.NE 0x33880B4
	0x03388178 ADD W24, W24, 0x1
	0x0338817C CMP W24, W23
	0x03388180 B.CS 0x33885A0
	0x03388184 LDRH W28, [X21, W24, SXTW]
	0x03388188 MOVN W25, 0x0
	0x0338818C B 0x3388300
	0x03388190 ADRP X8, 0xD9F000
	0x03388194 LDR X8, [X8 + 0x7E8]
	0x03388198 CMP W24, W23
	0x0338819C LDR X20, [X8]
	0x033881A0 B.LS 0x33881AC
	0x033881A4 MOV X0, X31
	0x033881A8 BL 0x339D6EC
	0x033881AC LDR X0, [X20 + 0x20]
	0x033881B0 LDRB W8, [X0 + 0x135]
	0x033881B4 TBNZ X8, 0x0, 0x33881BC
	0x033881B8 BL 0x1C5C684
	0x033881BC MOV X0, X26
	0x033881C0 MOV X1, X31
	0x033881C4 SUB W23, W23, W24
	0x033881C8 ADD X21, X21, W24, 0x1, SXTW
	0x033881CC BL 0x32277A8
	0x033881D0 TBNZ X0, 0x0, 0x3388260
	0x033881D4 ADRP X20, 0x1051000
	0x033881D8 LDRB W8, [X20 + 0x762]
	0x033881DC CBNZ W8, 0x33881F4
	0x033881E0 ADRP X0, 0xD92000
	0x033881E4 LDR X0, [X0 + 0x290]
	0x033881E8 BL 0x1C16CF4
	0x033881EC MOVZ W8, 0x1
	0x033881F0 STRB W8, [X20 + 0x762]
	0x033881F4 CBZ X26, 0x338821C
	0x033881F8 MOV X0, X26
	0x033881FC MOV X1, X31
	0x03388200 BL 0x3225708
	0x03388204 LDR W3, [X26 + 0x10]
	0x03388208 MOV X2, X0
	0x0338820C B 0x3388224
	0x03388210 CMP W28, 0x20
	0x03388214 B.NE 0x33880A8
	0x03388218 B 0x33880E0
	0x0338821C MOV X2, X31
	0x03388220 MOV X3, X31
	0x03388224 ADRP X8, 0xDA2000
	0x03388228 LDR X8, [X8 + 0xFD8]
	0x0338822C MOV X0, X21
	0x03388230 MOV X1, X23
	0x03388234 LDR X4, [X8]
	0x03388238 BL 0x338C288
	0x0338823C TBZ X0, 0x0, 0x3388260
	0x03388240 CBZ X26, 0x33885F4
	0x03388244 LDR W24, [X26 + 0x10]

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Add X29, X31, 0
	012 Subtract X31, X31, 16
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X8, [X25+40]
	015 Move X26, 0x1056000
	016 Move W23, W5
	017 Move W21, W4
	018 Move [X29-8], X8
	019 Move W8, [X26+4061]
	020 Move W24, W3
	021 Move W20, W2
	022 Move X22, X1
	023 Move X19, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0xDA2000
	029 Move X0, [X0+120]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+4061], W8
	033 Move X26, 0x1055000
	034 Move W8, [X26+1250]
	035 Compare W8, 0
	036 JumpIfNotEqual {42}
	037 Move X0, 0xD9B000
	038 Move X0, [X0+1416]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X26+1250], W8
	042 NotImplemented "Instruction LDRSW not yet implemented."
	043 Move W9, [X19+16]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X9, [X19+8]
	047 Add W10, W8, 1
	048 NotImplemented "Instruction STRH not yet implemented."
	049 Move [X19+24], W10
	050 Move TEMP, X20
	051 And TEMP, TEMP, -2147483648
	052 Compare TEMP, -2147483648
	053 JumpIfNotEqual {90}
	054 Compare X22, 0
	055 JumpIfEqual {195}
	056 Move X23, 0x1056000
	057 Move W8, [X23+4]
	058 Move X22, [X22+48]
	059 Compare W8, 0
	060 JumpIfNotEqual {66}
	061 Move X0, 0xD9B000
	062 Move X0, [X0+1416]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X23+4], W8
	066 Compare X22, 0
	067 JumpIfEqual {195}
	068 Move W8, [X22+16]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction LDRSW not yet implemented."
	071 Move W8, [X19+16]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X24, [X19+8]
	075 Move X0, X22
	076 Move W1, W31
	077 Move X2, X31
	078 Call String.get_Chars, X0, X1
	079 Add W8, W23, 1
	080 NotImplemented "Instruction STRH not yet implemented."
	081 Move [X19+24], W8
	082 Move X0, X19
	083 Move W1, W24
	084 Move X2, X31
	085 Call ValueStringBuilder.GrowAndAppend, X0, X1
	086 Move TEMP, X20
	087 And TEMP, TEMP, -2147483648
	088 Compare TEMP, -2147483648
	089 JumpIfEqual {54}
	090 Move TEMP, X23
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {131}
	094 Compare X22, 0
	095 JumpIfEqual {195}
	096 Move X23, 0x1056000
	097 Move W8, [X23+4]
	098 Move X22, [X22+40]
	099 Compare W8, 0
	100 JumpIfNotEqual {106}
	101 Move X0, 0xD9B000
	102 Move X0, [X0+1416]
	103 Call 0x1C17CF4
	104 Move W8, 1
	105 Move [X23+4], W8
	106 Compare X22, 0
	107 JumpIfEqual {195}
	108 Move W8, [X22+16]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 NotImplemented "Instruction LDRSW not yet implemented."
	111 Move W8, [X19+16]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X24, [X19+8]
	115 Move X0, X22
	116 Move W1, W31
	117 Move X2, X31
	118 Call String.get_Chars, X0, X1
	119 Add W8, W23, 1
	120 NotImplemented "Instruction STRH not yet implemented."
	121 Move [X19+24], W8
	122 Move X0, X19
	123 Move X1, X22
	124 Move X2, X31
	125 Call ValueStringBuilder.AppendSlow, X0, X1
	126 Subtract W20, W31, W20
	127 Move X0, X19
	128 Move X1, X22
	129 Move X2, X31
	130 Call ValueStringBuilder.AppendSlow, X0, X1
	131 Move X8, 0xDA1000
	132 Move X8, [X8+120]
	133 Add X9, X31, 0
	134 Subtract X22, X9, 32
	135 Add X31, X22, 0
	136 Move X0, [X8]
	137 Move [X9-32], X31
	138 Move [X9-24], X31
	139 Move [X9-16], W31
	140 Move W8, [X0+224]
	141 Compare W8, 0
	142 JumpIfNotEqual {144}
	143 Call 0x1C17DFC
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Add X8, X22, 20
	146 Move X1, X8
	147 Compare W20, 0
	148 JumpIfEqual {171}
	149 Move W9, 0xCCCD
	150 Subtract W11, W21, 2
	151 NotImplemented "Instruction MOVK not yet implemented."
	152 Move TEMP, 9
	153 Not TEMP
	154 Move W10, TEMP
	155 Move X1, X8
	156 Move W13, W11
	157 NotImplemented "Instruction UMADDL not yet implemented."
	158 Move W12, W20
	159 Move X20, X11
	160 ShiftRight X20, 35
	161 And X20, X20, 0x7FFFFFFF
	162 NotImplemented "Instruction MADD not yet implemented."
	163 Add W11, W11, 48
	164 NotImplemented "Instruction STRH not yet implemented."
	165 Subtract W11, W13, 1
	166 Move TEMP, X13
	167 And TEMP, TEMP, -2147483648
	168 Compare TEMP, -2147483648
	169 JumpIfNotEqual {156}
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Subtract X8, X8, X1
	172 NotImplemented "Instruction CMP not yet implemented."
	173 NotImplemented "Instruction CINC not yet implemented."
	174 Move X2, X8
	175 ShiftRight X2, 1
	176 And X2, X2, 0x7FFFFFFF
	177 Move X0, X19
	178 Move X3, X31
	179 Call ValueStringBuilder.Append, X0, X1, X2
	180 Move X8, [X25+40]
	181 NotImplemented "Instruction LDUR not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Add X31, X29, 0
	184 Move X20, [X31+64]
	185 Move X19, [X31+72]
	186 Move X22, [X31+48]
	187 Move X21, [X31+56]
	188 Move X24, [X31+32]
	189 Move X23, [X31+40]
	190 Move X26, [X31+16]
	191 Move X25, [X31+24]
	192 Move X29, [X31+80]
	193 Move X30, [X31+88]
	194 Return 
	195 Call 0x1C17F20
	196 Call 0x1C17F28
	197 Call 0x3EB2B20

Method: System.Void FormatGeneral(ref System.Text.ValueStringBuilder sb, ref System.Number/NumberBuffer number, System.Int32 nMinDigits, System.Int32 nMaxDigits, System.Globalization.NumberFormatInfo info, System.Char expChar, System.Boolean bSuppressScientific)

Disassembly:
	0x03387834 CMP W28, 0x30
	0x03387838 STR W25, [X31 + 0x1C]
	0x0338783C B.NE 0x3387870
	0x03387840 ADD W24, W24, 0x1
	0x03387844 CMP W24, W23
	0x03387848 B.CS 0x3387998
	0x0338784C LDRH W25, [X21, W24, SXTW]
	0x03387850 SUBS W26, W25, 0x30
	0x03387854 B.EQ 0x3387840
	0x03387858 LDR X0, [X29]
	0x0338785C LDR W8, [X0 + 0xE0]
	0x03387860 CBNZ W8, 0x3387868
	0x03387864 BL 0x1C16DFC
	0x03387868 CMP W26, 0x9
	0x0338786C B.HI 0x33879B4
	0x03387870 ADD W8, W24, 0x1
	0x03387874 CMP W8, W23
	0x03387878 STP X20, X27, [X31 + 0x8]
	0x0338787C MOV W27, W24
	0x03387880 ADD W24, W24, 0x9
	0x03387884 MOVN W20, 0x7
	0x03387888 CSET W8, CC
	0x0338788C MOVZ W28, 0xA
	0x03387890 TBZ X8, 0x0, 0x3387AE4
	0x03387894 LDR X0, [X29]
	0x03387898 ADD W8, W27, W20
	0x0338789C ADD W8, W8, 0x9
	0x033878A0 LDRH W25, [X21, W8, SXTW]
	0x033878A4 LDR W9, [X0 + 0xE0]
	0x033878A8 CBNZ W9, 0x33878B0
	0x033878AC BL 0x1C16DFC
	0x033878B0 SUB W8, W25, 0x30
	0x033878B4 CMP W8, 0x9
	0x033878B8 B.HI 0x33879A0
	0x033878BC ADD W8, W27, W20
	0x033878C0 ADD W9, W8, 0xA
	0x033878C4 MADD W10, W26, W28, W25
	0x033878C8 CMP W9, W23
	0x033878CC CSET W8, CC
	0x033878D0 ADDS W20, W20, 0x1
	0x033878D4 SUB W26, W10, 0x30
	0x033878D8 B.CC 0x3387890
	0x033878DC CMP W9, W23
	0x033878E0 B.CS 0x3387AE4
	0x033878E4 LDR X0, [X29]
	0x033878E8 LDRH W25, [X21, W24, SXTW]
	0x033878EC LDR W8, [X0 + 0xE0]
	0x033878F0 CBNZ W8, 0x33878F8
	0x033878F4 BL 0x1C16DFC
	0x033878F8 LDR X20, [X31 + 0x8]
	0x033878FC SUB W8, W25, 0x30
	0x03387900 CMP W8, 0x9
	0x03387904 B.HI 0x33879D0
	0x03387908 MOVZ W9, 0xCCCC
	0x0338790C MOVK W9, 0xCCC0000
	0x03387910 MOVZ W10, 0xA
	0x03387914 CMP W26, W9
	0x03387918 MADD W26, W26, W10, W8
	0x0338791C LDR W10, [X31 + 0x1C]
	0x03387920 MOVZ W9, 0x1
	0x03387924 MOVZ W8, 0x2
	0x03387928 ADD W24, W27, 0xA
	0x0338792C SUB W9, W9, W10
	0x03387930 SUB W8, W8, W10
	0x03387934 CSET W10, GT
	0x03387938 CMP W9, 0x0
	0x0338793C CSEL W8, W8, W9, LT
	0x03387940 MOVN W9, 0x80000000
	0x03387944 SBFM W8, W8, 0x1, 0x1F
	0x03387948 ADD X8, X8, X9
	0x0338794C CMP X8, X26
	0x03387950 CSET W8, CC
	0x03387954 CMP W24, W23
	0x03387958 ORR W28, W10, W8, 0x0
	0x0338795C B.CS 0x3387ADC
	0x03387960 LDR X27, [X31 + 0x10]
	0x03387964 LDR X0, [X29]
	0x03387968 LDRH W25, [X21, W24, SXTW]
	0x0338796C LDR W8, [X0 + 0xE0]
	0x03387970 CBNZ W8, 0x3387978
	0x03387974 BL 0x1C16DFC
	0x03387978 SUB W8, W25, 0x30
	0x0338797C CMP W8, 0xA
	0x03387980 B.CS 0x33879D8
	0x03387984 ADD W24, W24, 0x1
	0x03387988 CMP W23, W24
	0x0338798C MOVZ W28, 0x1
	0x03387990 B.NE 0x3387964
	0x03387994 B 0x3387A9C
	0x03387998 MOV W26, W31
	0x0338799C B 0x3387AE4
	0x033879A0 ADD W8, W27, W20
	0x033879A4 LDP X20, X27, [X31 + 0x8]
	0x033879A8 MOV W28, W31
	0x033879AC ADD W24, W8, 0x9
	0x033879B0 B 0x33879D8
	0x033879B4 MOV W26, W31
	0x033879B8 B 0x33879D4
	0x033879BC ADD W24, W24, 0x1
	0x033879C0 CMP W24, W23
	0x033879C4 B.CS 0x3387AB0
	0x033879C8 LDRH W28, [X21, W24, SXTW]
	0x033879CC B 0x33875C4
	0x033879D0 LDR X27, [X31 + 0x10]
	0x033879D4 MOV W28, W31
	0x033879D8 LDR X0, [X29]
	0x033879DC LDR W8, [X0 + 0xE0]
	0x033879E0 CBNZ W8, 0x33879E8
	0x033879E4 BL 0x1C16DFC
	0x033879E8 SUB W8, W25, 0x9
	0x033879EC CMP W8, 0x5
	0x033879F0 B.CS 0x3387A60
	0x033879F4 TBZ X22, 0x1, 0x3387AB0
	0x033879F8 ADD W24, W24, 0x1
	0x033879FC CMP W24, W23
	0x03387A00 B.GE 0x3387A54
	0x03387A04 MOV X25, X20
	0x03387A08 ADD X20, X21, W24, 0x1, SXTW
	0x03387A0C CMP W23, W24
	0x03387A10 B.LS 0x3387AF4
	0x03387A14 LDR X0, [X29]
	0x03387A18 LDRH W22, [X20]
	0x03387A1C LDR W8, [X0 + 0xE0]
	0x03387A20 CBNZ W8, 0x3387A28
	0x03387A24 BL 0x1C16DFC
	0x03387A28 SUB W8, W22, 0x9
	0x03387A2C CMP W8, 0x5
	0x03387A30 B.CS 0x3387A48
	0x03387A34 ADD W24, W24, 0x1
	0x03387A38 CMP W23, W24
	0x03387A3C ADD X20, X20, 0x2
	0x03387A40 B.NE 0x3387A0C
	0x03387A44 B 0x3387A94
	0x03387A48 CMP W22, 0x20
	0x03387A4C B.EQ 0x3387A34
	0x03387A50 MOV X20, X25
	0x03387A54 CMP W24, W23
	0x03387A58 B.CC 0x3387A68
	0x03387A5C B 0x3387A94
	0x03387A60 CMP W25, 0x20
	0x03387A64 B.EQ 0x33879F4
	0x03387A68 LDR X0, [X29]
	0x03387A6C MOV W22, W23
	0x03387A70 BFM X22, X20, 0x20, 0x1F
	0x03387A74 LDR W8, [X0 + 0xE0]
	0x03387A78 CBNZ W8, 0x3387A80
	0x03387A7C BL 0x1C16DFC
	0x03387A80 MOV X0, X21
	0x03387A84 MOV X1, X22
	0x03387A88 MOV W2, W24
	0x03387A8C BL 0x338A158
	0x03387A90 TBZ X0, 0x0, 0x3387AB0
	0x03387A94 AND W28, W28, 0x1
	0x03387A98 CBZ W28, 0x3387AE4
	0x03387A9C MOVZ W9, 0x1
	0x03387AA0 MOV W8, W31
	0x03387AA4 MOV W0, W31
	0x03387AA8 STRB W9, [X27]
	0x03387AAC B 0x3387AB8
	0x03387AB0 MOV W8, W31
	0x03387AB4 MOV W0, W31
	0x03387AB8 STR W8, [X19]
	0x03387ABC LDP X20, X19, [X31 + 0x70]
	0x03387AC0 LDP X22, X21, [X31 + 0x60]
	0x03387AC4 LDP X24, X23, [X31 + 0x50]
	0x03387AC8 LDP X26, X25, [X31 + 0x40]
	0x03387ACC LDP X28, X27, [X31 + 0x30]
	0x03387AD0 LDP X29, X30, [X31 + 0x20]
	0x03387AD4 ADD X31, X31, 0x80
	0x03387AD8 RET
	0x03387ADC LDR X27, [X31 + 0x10]
	0x03387AE0 CBNZ W28, 0x3387A9C
	0x03387AE4 LDR W8, [X31 + 0x1C]
	0x03387AE8 MOVZ W0, 0x1
	0x03387AEC MUL W8, W26, W8
	0x03387AF0 B 0x3387AB8
	0x03387AF4 BL 0x1C16F28
	0x03387AF8 BL 0x1C16F20
	0x03387AFC STR X30, [X31 - 0x20]!
	0x03387B00 STP X20, X19, [X31 + 0x10]
	0x03387B04 TBZ X0, 0x0, 0x3387B3C
	0x03387B08 MOV X0, X1
	0x03387B0C MOV X1, X31
	0x03387B10 BL 0x320A364
	0x03387B14 MOV X20, X0
	0x03387B18 ADRP X0, 0xD6C000
	0x03387B1C LDR X0, [X0 + 0x858]
	0x03387B20 BL 0x1C16D08
	0x03387B24 BL 0x1C16F10
	0x03387B28 MOV X1, X20
	0x03387B2C MOV X2, X31
	0x03387B30 MOV X19, X0
	0x03387B34 BL 0x338CB50
	0x03387B38 B 0x3387B6C
	0x03387B3C ADRP X0, 0xD99000
	0x03387B40 LDR X0, [X0 + 0xC08]
	0x03387B44 BL 0x1C16D08
	0x03387B48 BL 0x1C16F10
	0x03387B4C MOV X19, X0
	0x03387B50 ADRP X0, 0xD9B000
	0x03387B54 LDR X0, [X0 + 0x618]
	0x03387B58 BL 0x1C16D08
	0x03387B5C MOV X1, X0
	0x03387B60 MOV X0, X19
	0x03387B64 MOV X2, X31
	0x03387B68 BL 0x33674A0
	0x03387B6C ADRP X0, 0xDA3000
	0x03387B70 LDR X0, [X0 + 0xFE0]
	0x03387B74 BL 0x1C16D08
	0x03387B78 MOV X1, X0
	0x03387B7C MOV X0, X19
	0x03387B80 BL 0x1C16DEC
	0x03387B84 STR X30, [X31 - 0x60]!
	0x03387B88 STP X28, X27, [X31 + 0x10]
	0x03387B8C STP X26, X25, [X31 + 0x20]
	0x03387B90 STP X24, X23, [X31 + 0x30]
	0x03387B94 STP X22, X21, [X31 + 0x40]
	0x03387B98 STP X20, X19, [X31 + 0x50]
	0x03387B9C ADRP X24, 0x1055000
	0x03387BA0 LDRB W8, [X24 + 0xFEC]
	0x03387BA4 MOV X20, X5
	0x03387BA8 MOV X19, X4
	0x03387BAC MOV W23, W2
	0x03387BB0 MOV X21, X1
	0x03387BB4 MOV X22, X0
	0x03387BB8 TBNZ X8, 0x0, 0x3387BDC
	0x03387BBC ADRP X0, 0xDA1000
	0x03387BC0 LDR X0, [X0 + 0x78]
	0x03387BC4 BL 0x1C16CF4
	0x03387BC8 ADRP X0, 0xD9B000
	0x03387BCC LDR X0, [X0 + 0x28]
	0x03387BD0 BL 0x1C16CF4
	0x03387BD4 MOVZ W8, 0x1
	0x03387BD8 STRB W8, [X24 + 0xFEC]
	0x03387BDC CBZ W21, 0x3387DDC
	0x03387BE0 LDRH W28, [X22]
	0x03387BE4 TBNZ X23, 0x0, 0x3387C74
	0x03387BE8 MOV W24, W31

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0x1056000
	015 Move W8, [X19+4062]
	016 Move W24, W6
	017 Move W29, W5
	018 Move X20, X4
	019 Move W23, W3
	020 Move X22, X1
	021 Move X21, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0xDA2000
	027 Move X0, [X0+120]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X19+4062], W8
	031 Move W25, [X22+4]
	032 Move X26, 0x1056000
	033 Move TEMP, X24
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {38}
	037 Move W27, W31
	038 Add W31, W25, 3
	039 NotImplemented "Instruction CSET not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSET not yet implemented."
	042 Or W27, W9, W8
	043 Add W31, W25, 4
	044 Move X0, X22
	045 Move X1, X31
	046 Call NumberBuffer.get_digits, X0
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X23, X0
	049 Move [X31+8], X20
	050 Move W20, W27
	051 Move W27, W29
	052 Move W8, [X26+1250]
	053 Compare W8, 0
	054 JumpIfNotEqual {60}
	055 Move X0, 0xD9C000
	056 Move X0, [X0+1416]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X26+1250], W8
	060 NotImplemented "Instruction LDRSW not yet implemented."
	061 Move W9, [X21+16]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X9, [X21+8]
	065 Move W10, 48
	066 Add W11, W8, 1
	067 NotImplemented "Instruction STRH not yet implemented."
	068 Move [X21+24], W11
	069 Move TEMP, X25
	070 And TEMP, TEMP, -2147483648
	071 Compare TEMP, -2147483648
	072 JumpIfNotEqual {119}
	073 Move X0, X22
	074 Move X1, X31
	075 Move [X31+8], X20
	076 Move W20, W27
	077 Move W27, W29
	078 Call NumberBuffer.get_digits, X0
	079 Move X23, X0
	080 Move W25, 1
	081 Move X24, 0xD9C000
	082 Move X24, [X24+1416]
	083 Add W28, W25, 1
	084 Move W29, 48
	085 Move W19, 1
	086 Move X8, X23
	087 NotImplemented "Instruction LDRH not yet implemented."
	088 Move W10, [X26+1250]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 NotImplemented "Instruction CSEL not yet implemented."
	091 NotImplemented "Instruction CSEL not yet implemented."
	092 Compare W10, 0
	093 JumpIfNotEqual {97}
	094 Move X0, X24
	095 Call 0x1C17CF4
	096 Move [X26+1250], W19
	097 NotImplemented "Instruction LDRSW not yet implemented."
	098 Move W9, [X21+16]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X9, [X21+8]
	102 Add W10, W8, 1
	103 NotImplemented "Instruction STRH not yet implemented."
	104 Move [X21+24], W10
	105 Move X0, X21
	106 Move W1, W25
	107 Move X2, X31
	108 Call ValueStringBuilder.GrowAndAppend, X0, X1
	109 Subtract W28, W28, 1
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move W29, W27
	112 Move W27, W20
	113 Move X20, [X31+8]
	114 Move W25, W31
	115 Move TEMP, X25
	116 And TEMP, TEMP, -2147483648
	117 Compare TEMP, -2147483648
	118 JumpIfEqual {122}
	119 NotImplemented "Instruction LDRH not yet implemented."
	120 Compare W8, 0
	121 JumpIfEqual {212}
	122 Compare X20, 0
	123 JumpIfEqual {266}
	124 Move X19, 0x1057000
	125 Move W8, [X19+4]
	126 Move X24, [X20+56]
	127 Compare W8, 0
	128 JumpIfNotEqual {134}
	129 Move X0, 0xD9C000
	130 Move X0, [X0+1416]
	131 Call 0x1C17CF4
	132 Move W8, 1
	133 Move [X19+4], W8
	134 Compare X24, 0
	135 JumpIfEqual {266}
	136 Move W8, [X24+16]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 NotImplemented "Instruction LDRSW not yet implemented."
	139 Move W8, [X21+16]
	140 NotImplemented "Instruction CMP not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X28, [X21+8]
	143 Move X0, X24
	144 Move W1, W31
	145 Move X2, X31
	146 Call String.get_Chars, X0, X1
	147 Add W8, W19, 1
	148 NotImplemented "Instruction STRH not yet implemented."
	149 Move [X21+24], W8
	150 Move TEMP, X25
	151 And TEMP, TEMP, -2147483648
	152 Compare TEMP, -2147483648
	153 JumpIfNotEqual {185}
	154 Move X0, X21
	155 Move X1, X24
	156 Move X2, X31
	157 Call ValueStringBuilder.AppendSlow, X0, X1
	158 Move TEMP, X25
	159 And TEMP, TEMP, -2147483648
	160 Compare TEMP, -2147483648
	161 JumpIfNotEqual {185}
	162 Move X24, 0xD9C000
	163 Move X24, [X24+1416]
	164 Move W19, 1
	165 Move W28, 48
	166 Move W8, [X26+1250]
	167 Compare W8, 0
	168 JumpIfNotEqual {172}
	169 Move X0, X24
	170 Call 0x1C17CF4
	171 Move [X26+1250], W19
	172 NotImplemented "Instruction LDRSW not yet implemented."
	173 Move W9, [X21+16]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X9, [X21+8]
	177 Add W10, W8, 1
	178 NotImplemented "Instruction STRH not yet implemented."
	179 Move [X21+24], W10
	180 Move W1, 48
	181 Move X0, X21
	182 Move X2, X31
	183 Call ValueStringBuilder.GrowAndAppend, X0, X1
	184 Add W25, W25, 1
	185 NotImplemented "Instruction LDRH not yet implemented."
	186 Compare W25, 0
	187 JumpIfEqual {212}
	188 Move X24, 0xD9C000
	189 Move X24, [X24+1416]
	190 Move W19, 1
	191 Move W8, [X26+1250]
	192 Compare W8, 0
	193 JumpIfNotEqual {197}
	194 Move X0, X24
	195 Call 0x1C17CF4
	196 Move [X26+1250], W19
	197 NotImplemented "Instruction LDRSW not yet implemented."
	198 Move W9, [X21+16]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move X9, [X21+8]
	202 Add W10, W8, 1
	203 NotImplemented "Instruction STRH not yet implemented."
	204 Move [X21+24], W10
	205 Move X0, X21
	206 Move W1, W25
	207 Move X2, X31
	208 Call ValueStringBuilder.GrowAndAppend, X0, X1
	209 NotImplemented "Instruction LDRH not yet implemented."
	210 Compare W25, 0
	211 JumpIfNotEqual {191}
	212 Compare W27, 0
	213 JumpIfEqual {243}
	214 Move X8, 0xDA2000
	215 Move X8, [X8+120]
	216 Move W19, [X22+4]
	217 Move X0, [X8]
	218 Move W8, [X0+224]
	219 Compare W8, 0
	220 JumpIfNotEqual {222}
	221 Call 0x1C17DFC
	222 Subtract W2, W19, 1
	223 Move X0, X21
	224 Move X1, X20
	225 Move W3, W29
	226 Move X20, [X31+96]
	227 Move X19, [X31+104]
	228 Move X22, [X31+80]
	229 Move X21, [X31+88]
	230 Move X24, [X31+64]
	231 Move X23, [X31+72]
	232 Move X26, [X31+48]
	233 Move X25, [X31+56]
	234 Move X28, [X31+32]
	235 Move X27, [X31+40]
	236 Move X29, [X31+16]
	237 Move X30, [X31+24]
	238 Move W4, 2
	239 Move W5, 1
	240 Add X31, X31, 112
	241 Call Number.FormatExponent, X0, X1, X2, X3, X4, X5
	242 Return 
	243 Move X20, [X31+96]
	244 Move X19, [X31+104]
	245 Move X22, [X31+80]
	246 Move X21, [X31+88]
	247 Move X24, [X31+64]
	248 Move X23, [X31+72]
	249 Move X26, [X31+48]
	250 Move X25, [X31+56]
	251 Move X28, [X31+32]
	252 Move X27, [X31+40]
	253 Move X29, [X31+16]
	254 Move X30, [X31+24]
	255 Add X31, X31, 112
	256 Return 
	257 Move W1, 48
	258 Move X0, X21
	259 Move X2, X31
	260 Call ValueStringBuilder.GrowAndAppend, X0, X1
	261 Move TEMP, X25
	262 And TEMP, TEMP, -2147483648
	263 Compare TEMP, -2147483648
	264 JumpIfNotEqual {119}
	265 Call 0x1C17F28
	266 Call 0x1C17F20

Method: System.Void FormatPercent(ref System.Text.ValueStringBuilder sb, ref System.Number/NumberBuffer number, System.Int32 nMinDigits, System.Int32 nMaxDigits, System.Globalization.NumberFormatInfo info)

Disassembly:
	0x03387BEC ADRP X25, 0xDA1000
	0x03387BF0 LDR X25, [X25 + 0x78]
	0x03387BF4 LDR X0, [X25]
	0x03387BF8 LDR W8, [X0 + 0xE0]
	0x03387BFC CBNZ W8, 0x3387C08
	0x03387C00 BL 0x1C16DFC
	0x03387C04 LDR X0, [X25]
	0x03387C08 LDR X8, [X0 + 0xB8]
	0x03387C0C LDR X8, [X8 + 0x28]
	0x03387C10 CBZ X8, 0x3387ECC
	0x03387C14 LDR W9, [X8 + 0x18]
	0x03387C18 CMP W28, W9
	0x03387C1C B.CS 0x3387DDC
	0x03387C20 ADD X10, X8, W28, 0x2, UXTW
	0x03387C24 LDR W10, [X10 + 0x20]
	0x03387C28 CMP W10, 0xFF
	0x03387C2C B.EQ 0x3387DDC
	0x03387C30 CMP W28, 0x30
	0x03387C34 B.NE 0x3387CEC
	0x03387C38 ADD W24, W24, 0x1
	0x03387C3C CMP W24, W21
	0x03387C40 B.CS 0x3387E08
	0x03387C44 LDRH W28, [X22, W24, SXTW]
	0x03387C48 CMP X28, 0x30
	0x03387C4C B.EQ 0x3387C38
	0x03387C50 CMP W28, W9
	0x03387C54 B.CS 0x3387C68
	0x03387C58 ADD X10, X8, X28, 0x2, LSL
	0x03387C5C LDR W10, [X10 + 0x20]
	0x03387C60 CMP W10, 0xFF
	0x03387C64 B.NE 0x3387CEC
	0x03387C68 MOV W26, W31
	0x03387C6C MOV W27, W31
	0x03387C70 B 0x3387DC0
	0x03387C74 ADRP X25, 0xDA1000
	0x03387C78 LDR X25, [X25 + 0x78]
	0x03387C7C LDR X0, [X25]
	0x03387C80 LDR W8, [X0 + 0xE0]
	0x03387C84 CBNZ W8, 0x3387C8C
	0x03387C88 BL 0x1C16DFC
	0x03387C8C SUB W8, W28, 0x9
	0x03387C90 CMP W8, 0x5
	0x03387C94 B.CS 0x3387CE0
	0x03387C98 CMP W21, 0x2
	0x03387C9C B.CC 0x3387DDC
	0x03387CA0 MOVZ W24, 0x1
	0x03387CA4 LDR X0, [X25]
	0x03387CA8 LDRH W28, [X22, W24, SXTW]
	0x03387CAC LDR W8, [X0 + 0xE0]
	0x03387CB0 CBNZ W8, 0x3387CB8
	0x03387CB4 BL 0x1C16DFC
	0x03387CB8 SUB W8, W28, 0x9
	0x03387CBC CMP W8, 0x5
	0x03387CC0 B.CS 0x3387CD4
	0x03387CC4 ADD W24, W24, 0x1
	0x03387CC8 CMP W21, W24
	0x03387CCC B.NE 0x3387CA4
	0x03387CD0 B 0x3387DDC
	0x03387CD4 CMP W28, 0x20
	0x03387CD8 B.EQ 0x3387CC4
	0x03387CDC B 0x3387BEC
	0x03387CE0 CMP W28, 0x20
	0x03387CE4 B.NE 0x3387BE8
	0x03387CE8 B 0x3387C98
	0x03387CEC MOV W10, W24
	0x03387CF0 CMP W28, W9
	0x03387CF4 B.CS 0x3387ED0
	0x03387CF8 ADD X11, X8, W28, 0x2, UXTW
	0x03387CFC LDR W26, [X11 + 0x20]
	0x03387D00 ADD W12, W10, 0x1
	0x03387D04 CMP W12, W21
	0x03387D08 CSET W12, CC
	0x03387D0C ADD W24, W10, 0x8
	0x03387D10 MOVN W11, 0x6
	0x03387D14 TBZ X12, 0x0, 0x3387E70
	0x03387D18 ADD W12, W10, W11
	0x03387D1C ADD W12, W12, 0x8
	0x03387D20 LDRH W28, [X22, W12, SXTW]
	0x03387D24 CMP W28, W9
	0x03387D28 B.CS 0x3387DB4
	0x03387D2C ADD X12, X8, X28, 0x2, LSL
	0x03387D30 LDR W13, [X12 + 0x20]
	0x03387D34 CMP W13, 0xFF
	0x03387D38 B.EQ 0x3387DB4
	0x03387D3C ADD W12, W10, W11
	0x03387D40 ADD W14, W12, 0x9
	0x03387D44 CMP W14, W21
	0x03387D48 CSET W12, CC
	0x03387D4C ADDS W11, W11, 0x1
	0x03387D50 ADD W26, W13, W26, 0x4, LSL
	0x03387D54 B.CC 0x3387D14
	0x03387D58 CMP W14, W21
	0x03387D5C B.CS 0x3387E70
	0x03387D60 LDRH W28, [X22, W24, SXTW]
	0x03387D64 CMP W28, W9
	0x03387D68 B.CS 0x3387C6C
	0x03387D6C ADD X11, X8, X28, 0x2, LSL
	0x03387D70 LDR W11, [X11 + 0x20]
	0x03387D74 CMP W11, 0xFF
	0x03387D78 B.EQ 0x3387C6C
	0x03387D7C ADD W24, W10, 0x9
	0x03387D80 CMP W24, W21
	0x03387D84 B.CS 0x3387EB0
	0x03387D88 LDRH W28, [X22, W24, SXTW]
	0x03387D8C CMP W28, W9
	0x03387D90 B.CS 0x3387EC4
	0x03387D94 ADD X10, X8, X28, 0x2, LSL
	0x03387D98 LDR W10, [X10 + 0x20]
	0x03387D9C CMP W10, 0xFF
	0x03387DA0 B.EQ 0x3387EC4
	0x03387DA4 ADD W24, W24, 0x1
	0x03387DA8 CMP W21, W24
	0x03387DAC B.NE 0x3387D88
	0x03387DB0 B 0x3387EB0
	0x03387DB4 ADD W8, W10, W11
	0x03387DB8 MOV W27, W31
	0x03387DBC ADD W24, W8, 0x8
	0x03387DC0 LDR W8, [X0 + 0xE0]
	0x03387DC4 CBNZ W8, 0x3387DCC
	0x03387DC8 BL 0x1C16DFC
	0x03387DCC SUB W8, W28, 0x9
	0x03387DD0 CMP W8, 0x5
	0x03387DD4 B.CS 0x3387E78
	0x03387DD8 TBNZ X23, 0x1, 0x3387E10
	0x03387DDC MOV W26, W31
	0x03387DE0 MOV W0, W31
	0x03387DE4 STR W26, [X19]
	0x03387DE8 LDP X20, X19, [X31 + 0x50]
	0x03387DEC LDP X22, X21, [X31 + 0x40]
	0x03387DF0 LDP X24, X23, [X31 + 0x30]
	0x03387DF4 LDP X26, X25, [X31 + 0x20]
	0x03387DF8 LDP X28, X27, [X31 + 0x10]
	0x03387DFC AND W0, W0, 0x1
	0x03387E00 LDR X30, [X31], #0x60
	0x03387E04 RET
	0x03387E08 MOV W26, W31
	0x03387E0C B 0x3387E70
	0x03387E10 ADD W24, W24, 0x1
	0x03387E14 CMP W24, W21
	0x03387E18 B.GE 0x3387E64
	0x03387E1C ADD X23, X22, W24, 0x1, SXTW
	0x03387E20 CMP W24, W21
	0x03387E24 B.CS 0x3387ED0
	0x03387E28 LDR X0, [X25]
	0x03387E2C LDRH W28, [X23]
	0x03387E30 LDR W8, [X0 + 0xE0]
	0x03387E34 CBNZ W8, 0x3387E3C
	0x03387E38 BL 0x1C16DFC
	0x03387E3C SUB W8, W28, 0x9
	0x03387E40 CMP W8, 0x5
	0x03387E44 B.CS 0x3387E5C
	0x03387E48 ADD W24, W24, 0x1
	0x03387E4C CMP W21, W24
	0x03387E50 ADD X23, X23, 0x2

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0x1056000
	015 Move X24, 0xDA2000
	016 Move W8, [X23+4063]
	017 Move X24, [X24+120]
	018 Move X19, X4
	019 Move W20, W3
	020 Move X21, X1
	021 Move X22, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0xDA2000
	027 Move X0, [X0+120]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+4063], W8
	031 Move X0, X21
	032 Move X1, X31
	033 Call NumberBuffer.get_sign, X0
	034 Move X8, [X24]
	035 Move W23, W0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {42}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X8, [X24]
	042 Move X8, [X8+184]
	043 Move TEMP, X23
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {53}
	047 Compare X19, 0
	048 JumpIfEqual {166}
	049 Move X8, [X8+24]
	050 Compare X8, 0
	051 JumpIfEqual {166}
	052 Move W9, [X19+196]
	053 Compare X19, 0
	054 JumpIfEqual {166}
	055 Move X8, [X8+16]
	056 Compare X8, 0
	057 JumpIfEqual {166}
	058 Move W9, [X19+192]
	059 Move W10, [X8+24]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add X8, X8, W9
	062 Move X23, [X8+32]
	063 Compare X23, 0
	064 JumpIfEqual {166}
	065 Move W8, [X23+16]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W24, W31
	068 Move X29, 0x1057000
	069 Move X25, 0x1056000
	070 Move X0, X23
	071 Move W1, W24
	072 Move X2, X31
	073 Call String.get_Chars, X0, X1
	074 And W8, W0, 0xFFFF
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X8, 0xDA2000
	079 Move X8, [X8+120]
	080 Move X28, [X19+32]
	081 Move X27, [X19+128]
	082 Move X26, [X19+136]
	083 Move X0, [X8]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move X0, X22
	089 Move X1, X21
	090 Move W3, W20
	091 Move X5, X28
	092 Move X6, X27
	093 Move X7, X26
	094 Call Number.FormatFixed, X0, X1, X2, X3, X4, X5, X6, X7
	095 Move W8, [X29+4]
	096 Move X26, [X19+48]
	097 Compare W8, 0
	098 JumpIfNotEqual {108}
	099 Move W8, [X29+4]
	100 Move X26, [X19+144]
	101 Compare W8, 0
	102 JumpIfNotEqual {108}
	103 Move X0, 0xD9C000
	104 Move X0, [X0+1416]
	105 Call 0x1C17CF4
	106 Move W8, 1
	107 Move [X29+4], W8
	108 Compare X26, 0
	109 JumpIfEqual {166}
	110 Move W8, [X26+16]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 NotImplemented "Instruction LDRSW not yet implemented."
	113 Move W8, [X22+16]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X28, [X22+8]
	117 Move X0, X26
	118 Move W1, W31
	119 Move X2, X31
	120 Call String.get_Chars, X0, X1
	121 Add W8, W27, 1
	122 NotImplemented "Instruction STRH not yet implemented."
	123 Move [X22+24], W8
	124 Move X0, X22
	125 Move X1, X26
	126 Move X2, X31
	127 Call ValueStringBuilder.AppendSlow, X0, X1
	128 Move W8, [X25+1250]
	129 Move W26, W0
	130 Compare W8, 0
	131 JumpIfNotEqual {137}
	132 Move X0, 0xD9C000
	133 Move X0, [X0+1416]
	134 Call 0x1C17CF4
	135 Move W8, 1
	136 Move [X25+1250], W8
	137 NotImplemented "Instruction LDRSW not yet implemented."
	138 Move W9, [X22+16]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move X9, [X22+8]
	142 Add W10, W8, 1
	143 NotImplemented "Instruction STRH not yet implemented."
	144 Move [X22+24], W10
	145 Move X0, X22
	146 Move W1, W26
	147 Move X2, X31
	148 Call ValueStringBuilder.GrowAndAppend, X0, X1
	149 Move W8, [X23+16]
	150 Add W24, W24, 1
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X20, [X31+96]
	153 Move X19, [X31+104]
	154 Move X22, [X31+80]
	155 Move X21, [X31+88]
	156 Move X24, [X31+64]
	157 Move X23, [X31+72]
	158 Move X26, [X31+48]
	159 Move X25, [X31+56]
	160 Move X28, [X31+32]
	161 Move X27, [X31+40]
	162 Move X29, [X31+16]
	163 Move X30, [X31+24]
	164 Add X31, X31, 112
	165 Return 
	166 Call 0x1C17F20
	167 Call 0x1C17F28

Method: System.Void RoundNumber(ref System.Number/NumberBuffer number, System.Int32 pos)

Disassembly:
	0x03386AF4 LDR X24, [X24 + 0x588]
	0x03386AF8 MOVZ W19, 0x1
	0x03386AFC LDRB W8, [X26 + 0x4E2]
	0x03386B00 CBNZ W8, 0x3386B10
	0x03386B04 MOV X0, X24
	0x03386B08 BL 0x1C16CF4
	0x03386B0C STRB W19, [X26 + 0x4E2]
	0x03386B10 LDRSW X8, [X21 + 0x18]
	0x03386B14 LDR W9, [X21 + 0x10]
	0x03386B18 CMP W8, W9
	0x03386B1C B.GE 0x3386B3C
	0x03386B20 CMP W8, W9
	0x03386B24 B.CS 0x3386BE4
	0x03386B28 LDR X9, [X21 + 0x8]
	0x03386B2C ADD W10, W8, 0x1
	0x03386B30 STRH W25, [X9, X8, LSL #1]
	0x03386B34 STR W10, [X21 + 0x18]
	0x03386B38 B 0x3386B4C
	0x03386B3C MOV X0, X21
	0x03386B40 MOV W1, W25
	0x03386B44 MOV X2, X31
	0x03386B48 BL 0x3240EF4
	0x03386B4C LDRH W25, [X23 + 0x2]!
	0x03386B50 CBNZ W25, 0x3386AFC
	0x03386B54 CBZ W27, 0x3386BAC
	0x03386B58 ADRP X8, 0xDA2000
	0x03386B5C LDR X8, [X8 + 0x78]
	0x03386B60 LDR W19, [X22 + 0x4]
	0x03386B64 LDR X0, [X8]
	0x03386B68 LDR W8, [X0 + 0xE0]
	0x03386B6C CBNZ W8, 0x3386B74
	0x03386B70 BL 0x1C16DFC
	0x03386B74 SUB W2, W19, 0x1
	0x03386B78 MOV X0, X21
	0x03386B7C MOV X1, X20
	0x03386B80 MOV W3, W29
	0x03386B84 LDP X20, X19, [X31 + 0x60]
	0x03386B88 LDP X22, X21, [X31 + 0x50]
	0x03386B8C LDP X24, X23, [X31 + 0x40]
	0x03386B90 LDP X26, X25, [X31 + 0x30]
	0x03386B94 LDP X28, X27, [X31 + 0x20]
	0x03386B98 LDP X29, X30, [X31 + 0x10]
	0x03386B9C MOVZ W4, 0x2
	0x03386BA0 MOVZ W5, 0x1
	0x03386BA4 ADD X31, X31, 0x70
	0x03386BA8 B 0x3386FA0
	0x03386BAC LDP X20, X19, [X31 + 0x60]
	0x03386BB0 LDP X22, X21, [X31 + 0x50]
	0x03386BB4 LDP X24, X23, [X31 + 0x40]
	0x03386BB8 LDP X26, X25, [X31 + 0x30]
	0x03386BBC LDP X28, X27, [X31 + 0x20]
	0x03386BC0 LDP X29, X30, [X31 + 0x10]
	0x03386BC4 ADD X31, X31, 0x70
	0x03386BC8 RET
	0x03386BCC MOVZ W1, 0x30
	0x03386BD0 MOV X0, X21
	0x03386BD4 MOV X2, X31
	0x03386BD8 BL 0x3240EF4
	0x03386BDC TBZ X25, 0x1F, 0x33869EC
	0x03386BE0 B 0x33869F4
	0x03386BE4 BL 0x1C16F28
	0x03386BE8 BL 0x1C16F20
	0x03386BEC SUB X31, X31, 0x70

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W21, W1
	006 Move X1, X31
	007 Move X20, X0
	008 Call NumberBuffer.get_digits, X0
	009 Move X19, X0
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W8, W21
	012 Move X9, X31
	013 Move X10, X19
	014 NotImplemented "Instruction LDRH not yet implemented."
	015 Compare W11, 0
	016 JumpIfEqual {22}
	017 Add X9, X9, 1
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Add X10, X10, 2
	020 Move W9, W8
	021 Move W9, W31
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W8, W9
	026 Add X9, X19, W9
	027 Subtract X9, X9, 2
	028 Subtract X8, X8, 1
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X20
	032 Move W1, W31
	033 Move X2, X31
	034 Move [X20+4], W31
	035 Call NumberBuffer.set_sign, X0, X1
	036 Move X8, X31
	037 Add X9, X19, W21
	038 Subtract X8, X8, 1
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Add W10, W10, 1
	042 NotImplemented "Instruction STRH not yet implemented."
	043 Add X8, X8, 1
	044 Move W8, [X20+4]
	045 Move W9, 49
	046 Add W8, W8, 1
	047 Move [X20+4], W8
	048 NotImplemented "Instruction STRH not yet implemented."
	049 Move W8, 1
	050 NotImplemented "Instruction SBFM not yet implemented."
	051 NotImplemented "Instruction STRH not yet implemented."
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return 

Method: System.Int32 FindSection(System.ReadOnlySpan`1<System.Char> format, System.Int32 section)

Disassembly:
	0x03387E54 B.NE 0x3387E20
	0x03387E58 B 0x3387E6C
	0x03387E5C CMP W28, 0x20
	0x03387E60 B.EQ 0x3387E48
	0x03387E64 CMP W24, W21
	0x03387E68 B.CC 0x3387E80
	0x03387E6C CBNZ W27, 0x3387EB0
	0x03387E70 MOVZ W0, 0x1
	0x03387E74 B 0x3387DE4
	0x03387E78 CMP W28, 0x20
	0x03387E7C B.EQ 0x3387DD8
	0x03387E80 LDR X0, [X25]
	0x03387E84 LDR W8, [X0 + 0xE0]
	0x03387E88 CBNZ W8, 0x3387E90
	0x03387E8C BL 0x1C16DFC
	0x03387E90 MOV X0, X22
	0x03387E94 MOV X1, X21
	0x03387E98 MOV W2, W24
	0x03387E9C BL 0x338A158
	0x03387EA0 ANDS W31, W0, 0x1
	0x03387EA4 AND W8, W27, W0, 0x0
	0x03387EA8 CSEL W26, W26, W31, NE
	0x03387EAC TBZ X8, 0x0, 0x3387DE4
	0x03387EB0 MOVZ W8, 0x1
	0x03387EB4 MOV W26, W31
	0x03387EB8 MOV W0, W31
	0x03387EBC STRB W8, [X20]
	0x03387EC0 B 0x3387DE4
	0x03387EC4 MOVZ W27, 0x1
	0x03387EC8 B 0x3387C70
	0x03387ECC BL 0x1C16F20
	0x03387ED0 BL 0x1C16F28
	0x03387ED4 SUB X31, X31, 0x60
	0x03387ED8 STP X30, X27, [X31 + 0x10]
	0x03387EDC STP X26, X25, [X31 + 0x20]
	0x03387EE0 STP X24, X23, [X31 + 0x30]
	0x03387EE4 STP X22, X21, [X31 + 0x40]
	0x03387EE8 STP X20, X19, [X31 + 0x50]
	0x03387EEC ADRP X25, 0x1055000
	0x03387EF0 ADRP X27, 0xD9B000
	0x03387EF4 ADRP X26, 0xDA1000
	0x03387EF8 LDRB W8, [X25 + 0xFF7]
	0x03387EFC LDR X27, [X27 + 0x20]
	0x03387F00 LDR X26, [X26 + 0x78]
	0x03387F04 MOV W24, W5
	0x03387F08 MOV X21, X4
	0x03387F0C MOV X22, X3
	0x03387F10 MOV W23, W2
	0x03387F14 MOV X19, X1
	0x03387F18 MOV X20, X0
	0x03387F1C TBNZ X8, 0x0, 0x3387F4C
	0x03387F20 ADRP X0, 0xD9B000
	0x03387F24 LDR X0, [X0 + 0x20]
	0x03387F28 BL 0x1C16CF4
	0x03387F2C ADRP X0, 0xDA1000
	0x03387F30 LDR X0, [X0 + 0x78]
	0x03387F34 BL 0x1C16CF4
	0x03387F38 ADRP X0, 0xD9B000
	0x03387F3C LDR X0, [X0 + 0x28]
	0x03387F40 BL 0x1C16CF4
	0x03387F44 MOVZ W8, 0x1
	0x03387F48 STRB W8, [X25 + 0xFF7]
	0x03387F4C LDR X2, [X27]
	0x03387F50 MOV X0, X20
	0x03387F54 MOV X1, X19
	0x03387F58 BL 0x2218CF8
	0x03387F5C LDR X8, [X26]
	0x03387F60 STR X0, [X31 + 0x8]
	0x03387F64 MOV X25, X0
	0x03387F68 LDR W9, [X8 + 0xE0]
	0x03387F6C CBNZ W9, 0x3387F78
	0x03387F70 MOV X0, X8
	0x03387F74 BL 0x1C16DFC
	0x03387F78 UBFM X27, X19, 0x20, 0x1F
	0x03387F7C ADD X1, X25, X27, 0x1F, ASR
	0x03387F80 AND W5, W24, 0x1
	0x03387F84 ADD X0, X31, 0x8
	0x03387F88 MOV W2, W23
	0x03387F8C MOV X3, X22
	0x03387F90 MOV X4, X21
	0x03387F94 BL 0x338987C
	0x03387F98 TBZ X0, 0x0, 0x3387FF8
	0x03387F9C LDR X8, [X31 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1056000
	007 Move W8, [X22+4064]
	008 Move W20, W2
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xD9C000
	016 Move X0, [X0+32]
	017 Call 0x1C17CF4
	018 Move X0, 0xD9C000
	019 Move X0, [X0+40]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+4064], W8
	023 Compare W20, 0
	024 JumpIfEqual {69}
	025 Move X8, 0xD9C000
	026 Move X8, [X8+32]
	027 Move X0, X21
	028 Move X1, X19
	029 Move X2, [X8]
	030 Call MemoryMarshal.GetReference, X0
	031 Move W8, W31
	032 Move X9, W19
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W11, W8
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Add W8, W11, 1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Compare W10, 0
	039 JumpIfNotEqual {61}
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X11, W8
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CSEL not yet implemented."
	046 Add X8, X0, W8
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Compare W13, 0
	050 JumpIfEqual {54}
	051 Add X11, X11, 1
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add X8, X8, 2
	054 Move W8, W11
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction LDRH not yet implemented."
	057 Add W11, W11, 2
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 Move W8, W12
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W11, W8
	063 Subtract W20, W20, 1
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction LDRH not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Compare W9, 0
	068 JumpIfNotEqual {70}
	069 Move W8, W31
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move W0, W8
	075 Move X30, [X31+48]
	076 Return X0

Method: System.UInt32 Low32(System.UInt64 value)

Disassembly:
	0x03386AF0 ADRP X24, 0xD9C000

ISIL:
	001 Return X0

Method: System.UInt32 High32(System.UInt64 value)

Disassembly:
	0x03386AE8 LDRH W25, [X23]
	0x03386AEC CBZ W25, 0x3386B54

ISIL:
	001 Move X0, X0
	002 ShiftRight X0, 32
	003 And X0, X0, 0x7FFFFFFF
	004 Return X0

Method: System.UInt32 Int64DivMod1E9(ref System.UInt64 value)

Disassembly:
	0x03386AB0 B.GE 0x3386AD0
	0x03386AB4 CMP W8, W9
	0x03386AB8 B.CS 0x3386BE4
	0x03386ABC LDR X9, [X21 + 0x8]
	0x03386AC0 ADD W10, W8, 0x1
	0x03386AC4 STRH W28, [X9, X8, LSL #1]
	0x03386AC8 STR W10, [X21 + 0x18]
	0x03386ACC B 0x3386AE0
	0x03386AD0 MOVZ W1, 0x30
	0x03386AD4 MOV X0, X21
	0x03386AD8 MOV X2, X31
	0x03386ADC BL 0x3240EF4
	0x03386AE0 ADDS W25, W25, 0x1
	0x03386AE4 B.CC 0x3386A90

ISIL:
	001 Move X8, [X0]
	002 Move X9, 0x5A53
	003 NotImplemented "Instruction MOVK not yet implemented."
	004 NotImplemented "Instruction MOVK not yet implemented."
	005 NotImplemented "Instruction MOVK not yet implemented."
	006 Move X10, X8
	007 ShiftRight X10, 9
	008 And X10, X10, 0x7FFFFFFF
	009 NotImplemented "Instruction INVALID not yet implemented."
	010 Move W10, 0xCA00
	011 Move X9, X9
	012 ShiftRight X9, 11
	013 And X9, X9, 0x7FFFFFFF
	014 NotImplemented "Instruction MOVK not yet implemented."
	015 NotImplemented "Instruction MSUB not yet implemented."
	016 Move [X0], X9
	017 Move W0, W8
	018 Return X0

Method: System.Boolean NumberToInt32(ref System.Number/NumberBuffer number, ref System.Int32 value)

Disassembly:
	0x03388248 CMP W24, W23
	0x0338824C B.CS 0x33885A0
	0x03388250 SXTW X8, W24
	0x03388254 LDRH W28, [X21, X8, LSL #1]
	0x03388258 MOV X20, X31
	0x0338825C B 0x33882FC
	0x03388260 MOV X0, X25
	0x03388264 MOV X1, X31
	0x03388268 BL 0x32277A8
	0x0338826C TBNZ X0, 0x0, 0x33882F4
	0x03388270 ADRP X20, 0x1051000
	0x03388274 LDRB W8, [X20 + 0x762]
	0x03388278 CBNZ W8, 0x3388290
	0x0338827C ADRP X0, 0xD92000
	0x03388280 LDR X0, [X0 + 0x290]
	0x03388284 BL 0x1C16CF4
	0x03388288 MOVZ W8, 0x1
	0x0338828C STRB W8, [X20 + 0x762]
	0x03388290 CBZ X25, 0x33882AC
	0x03388294 MOV X0, X25
	0x03388298 MOV X1, X31
	0x0338829C BL 0x3225708
	0x033882A0 LDR W3, [X25 + 0x10]
	0x033882A4 MOV X2, X0
	0x033882A8 B 0x33882B4
	0x033882AC MOV X2, X31
	0x033882B0 MOV X3, X31
	0x033882B4 ADRP X8, 0xDA2000
	0x033882B8 LDR X8, [X8 + 0xFD8]
	0x033882BC MOV X0, X21
	0x033882C0 MOV X1, X23
	0x033882C4 LDR X4, [X8]
	0x033882C8 BL 0x338C288
	0x033882CC TBZ X0, 0x0, 0x33882F4
	0x033882D0 CBZ X25, 0x33885F4
	0x033882D4 LDR W24, [X25 + 0x10]
	0x033882D8 CMP W24, W23
	0x033882DC B.CS 0x33885A0
	0x033882E0 SXTW X8, W24
	0x033882E4 LDRH W28, [X21, X8, LSL #1]
	0x033882E8 MOV X20, X31
	0x033882EC MOVN W25, 0x0
	0x033882F0 B 0x3388300
	0x033882F4 MOV X20, X31
	0x033882F8 MOV W24, W31
	0x033882FC MOVZ W25, 0x1
	0x03388300 STR X20, [X31 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W22, [X0+4]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W8, [X0]
	009 Move X20, X0
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W0, W31
	012 Move X20, [X31+32]
	013 Move X19, [X31+40]
	014 Move X22, [X31+16]
	015 Move X21, [X31+24]
	016 Move X30, [X31+48]
	017 Return X0
	018 Move X19, X1
	019 Move X0, X20
	020 Move X1, X31
	021 Call NumberBuffer.get_digits, X0
	022 Move W8, 0xCCCC
	023 Move W21, W31
	024 NotImplemented "Instruction MOVK not yet implemented."
	025 Subtract W22, W22, 1
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Add W10, W21, W21
	029 Move W21, W10
	030 ShiftRight W21, 31
	031 And W21, W21, 0x3FFFFFFF
	032 Compare W9, 0
	033 JumpIfEqual {25}
	034 Add W9, W21, W9
	035 Add X0, X0, 2
	036 Subtract W21, W9, 48
	037 Move X0, X20
	038 Move X1, X31
	039 Call NumberBuffer.get_sign, X0
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {47}
	044 Subtract W21, W31, W21
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W0, W31
	047 Move TEMP, X21
	048 And TEMP, TEMP, -2147483648
	049 Compare TEMP, -2147483648
	050 JumpIfEqual {11}
	051 Move W0, 1
	052 Move [X19], W21

Method: System.Boolean NumberToInt64(ref System.Number/NumberBuffer number, ref System.Int64 value)

Disassembly:
	0x03388304 ADRP X26, 0xDA0000
	0x03388308 LDR X26, [X26 + 0x78]
	0x0338830C LDR X0, [X26]
	0x03388310 LDR W8, [X0 + 0xE0]
	0x03388314 CBNZ W8, 0x338831C
	0x03388318 BL 0x1C16DFC
	0x0338831C SUB W29, W28, 0x30
	0x03388320 CMP W29, 0x9
	0x03388324 B.HI 0x33885A0
	0x03388328 CMP W28, 0x30
	0x0338832C STR X25, [X31 + 0x10]
	0x03388330 B.NE 0x3388364
	0x03388334 ADD W24, W24, 0x1
	0x03388338 CMP W24, W23
	0x0338833C B.CS 0x3388490
	0x03388340 LDRH W25, [X21, W24, SXTW]
	0x03388344 SUBS W29, W25, 0x30
	0x03388348 B.EQ 0x3388334
	0x0338834C LDR X0, [X26]
	0x03388350 LDR W8, [X0 + 0xE0]
	0x03388354 CBNZ W8, 0x338835C
	0x03388358 BL 0x1C16DFC
	0x0338835C CMP W29, 0x9
	0x03388360 B.HI 0x33884B0
	0x03388364 ADD W8, W24, 0x1
	0x03388368 CMP W8, W23
	0x0338836C STR X27, [X31 + 0x8]
	0x03388370 MOV W27, W24
	0x03388374 MOV W28, W29
	0x03388378 ADD W24, W24, 0x12
	0x0338837C MOVN W25, 0x10
	0x03388380 CSET W8, CC
	0x03388384 MOVZ W29, 0xA
	0x03388388 TBZ X8, 0x0, 0x33885DC
	0x0338838C LDR X0, [X26]
	0x03388390 ADD W8, W27, W25
	0x03388394 ADD W8, W8, 0x12
	0x03388398 LDRH W20, [X21, W8, SXTW]
	0x0338839C LDR W9, [X0 + 0xE0]
	0x033883A0 CBNZ W9, 0x33883A8
	0x033883A4 BL 0x1C16DFC
	0x033883A8 SUB W8, W20, 0x30
	0x033883AC CMP W8, 0x9
	0x033883B0 B.HI 0x3388498
	0x033883B4 ADD W8, W27, W25
	0x033883B8 ADD W9, W8, 0x13

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W22, [X0+4]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W8, [X0]
	009 Move X20, X0
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W0, W31
	012 Move X20, [X31+32]
	013 Move X19, [X31+40]
	014 Move X22, [X31+16]
	015 Move X21, [X31+24]
	016 Move X30, [X31+48]
	017 Return X0
	018 Move X19, X1
	019 Move X0, X20
	020 Move X1, X31
	021 Call NumberBuffer.get_digits, X0
	022 Or X8, X31, -3689348814741910324
	023 Move X21, X31
	024 NotImplemented "Instruction MOVK not yet implemented."
	025 Subtract W22, W22, 1
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Add X10, X21, X21
	029 Move X21, X10
	030 ShiftRight X21, 63
	031 And X21, X21, 0x3FFFFFFF
	032 Compare X9, 0
	033 JumpIfEqual {25}
	034 Add X9, X21, X9
	035 Add X0, X0, 2
	036 Subtract X21, X9, 48
	037 Move X0, X20
	038 Move X1, X31
	039 Call NumberBuffer.get_sign, X0
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {46}
	044 Subtract X21, X31, X21
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move TEMP, X21
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {11}
	050 Move W0, 1
	051 Move [X19], X21

Method: System.Boolean NumberToUInt32(ref System.Number/NumberBuffer number, ref System.UInt32 value)

Disassembly:
	0x033883BC MADD X10, X28, X29, X20
	0x033883C0 CMP W9, W23
	0x033883C4 CSET W8, CC
	0x033883C8 ADDS W25, W25, 0x1
	0x033883CC SUB X28, X10, 0x30
	0x033883D0 B.CC 0x3388388
	0x033883D4 CMP W9, W23
	0x033883D8 B.CS 0x33885DC
	0x033883DC LDR X0, [X26]
	0x033883E0 LDRH W25, [X21, W24, SXTW]
	0x033883E4 LDR W8, [X0 + 0xE0]
	0x033883E8 CBNZ W8, 0x33883F0
	0x033883EC BL 0x1C16DFC
	0x033883F0 SUB W8, W25, 0x30
	0x033883F4 CMP W8, 0x9
	0x033883F8 B.HI 0x33885CC
	0x033883FC LDR X11, [X31 + 0x10]
	0x03388400 ORR X8, X31, 0xCCCCCCCCCCCCCCCC
	0x03388404 MOVK X8, 0xCCC0000
	0x03388408 CMP X28, X8
	0x0338840C MOVZ W8, 0x1
	0x03388410 MOVZ W10, 0x2
	0x03388414 SUB W8, W8, W11
	0x03388418 SUB W10, W10, W11
	0x0338841C CSET W11, GT
	0x03388420 CMP W8, 0x0
	0x03388424 MOVZ W9, 0xA
	0x03388428 CSEL W8, W10, W8, LT
	0x0338842C MADD X9, X28, X9, X25
	0x03388430 MOVN X10, 0x80000000
	0x03388434 SBFM W8, W8, 0x1, 0x1F
	0x03388438 SUB X28, X9, 0x30
	0x0338843C ADD X8, X8, X10
	0x03388440 CMP X28, X8
	0x03388444 ADD W24, W27, 0x13
	0x03388448 CSET W8, HI
	0x0338844C CMP W24, W23
	0x03388450 ORR W29, W11, W8, 0x0
	0x03388454 B.CS 0x33885D4
	0x03388458 LDR X27, [X31 + 0x8]
	0x0338845C LDR X0, [X26]
	0x03388460 LDRH W25, [X21, W24, SXTW]
	0x03388464 LDR W8, [X0 + 0xE0]
	0x03388468 CBNZ W8, 0x3388470

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W21, [X0+4]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W8, [X0]
	008 Move X20, X0
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X19, X1
	011 Move X0, X20
	012 Move X1, X31
	013 Call NumberBuffer.get_sign, X0
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {25}
	018 Move W8, W31
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move W0, W8
	022 Move X30, [X31+32]
	023 Move X21, [X31+40]
	024 Return X0
	025 Move X0, X20
	026 Move X1, X31
	027 Call NumberBuffer.get_digits, X0
	028 Move W9, 0x9999
	029 Move W11, W31
	030 NotImplemented "Instruction MOVK not yet implemented."
	031 Move W10, W11
	032 Subtract W21, W21, 1
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Add W8, W10, W10
	036 Move W10, W8
	037 ShiftRight W10, 31
	038 And W10, W10, 0x3FFFFFFF
	039 Compare W11, 0
	040 JumpIfEqual {32}
	041 Add W11, W10, W11
	042 Subtract W11, W11, 48
	043 Move W8, W31
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add X0, X0, 2
	046 Move W8, 1
	047 Move [X19], W10

Method: System.Boolean NumberToUInt64(ref System.Number/NumberBuffer number, ref System.UInt64 value)

Disassembly:
	0x0338846C BL 0x1C16DFC
	0x03388470 SUB W8, W25, 0x30
	0x03388474 CMP W8, 0xA
	0x03388478 B.CS 0x33884B8
	0x0338847C ADD W24, W24, 0x1
	0x03388480 CMP W23, W24
	0x03388484 MOVZ W29, 0x1
	0x03388488 B.NE 0x338845C
	0x0338848C B 0x3388578
	0x03388490 MOV X28, X31
	0x03388494 B 0x33885DC
	0x03388498 ADD W8, W27, W25
	0x0338849C MOV W29, W31
	0x033884A0 ADD W24, W8, 0x12
	0x033884A4 MOV W25, W20
	0x033884A8 LDR X27, [X31 + 0x8]
	0x033884AC B 0x33884B8
	0x033884B0 MOV X28, X31
	0x033884B4 MOV W29, W31
	0x033884B8 LDR X0, [X26]
	0x033884BC LDR W8, [X0 + 0xE0]
	0x033884C0 CBNZ W8, 0x33884C8
	0x033884C4 BL 0x1C16DFC
	0x033884C8 SUB W8, W25, 0x9
	0x033884CC CMP W8, 0x5
	0x033884D0 B.CS 0x3388538
	0x033884D4 TBZ X22, 0x1, 0x33885A0
	0x033884D8 ADD W24, W24, 0x1
	0x033884DC CMP W24, W23
	0x033884E0 B.GE 0x338852C
	0x033884E4 ADD X22, X21, W24, 0x1, SXTW
	0x033884E8 CMP W23, W24
	0x033884EC B.LS 0x33885F0
	0x033884F0 LDR X0, [X26]
	0x033884F4 LDRH W20, [X22]
	0x033884F8 LDR W8, [X0 + 0xE0]
	0x033884FC CBNZ W8, 0x3388504
	0x03388500 BL 0x1C16DFC
	0x03388504 SUB W8, W20, 0x9
	0x03388508 CMP W8, 0x5
	0x0338850C B.CS 0x3388524
	0x03388510 ADD W24, W24, 0x1
	0x03388514 CMP W23, W24
	0x03388518 ADD X22, X22, 0x2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W21, [X0+4]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W8, [X0]
	008 Move X20, X0
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X19, X1
	011 Move X0, X20
	012 Move X1, X31
	013 Call NumberBuffer.get_sign, X0
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {25}
	018 Move W8, W31
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move W0, W8
	022 Move X30, [X31+32]
	023 Move X21, [X31+40]
	024 Return X0
	025 Move X0, X20
	026 Move X1, X31
	027 Call NumberBuffer.get_digits, X0
	028 Or X9, X31, -7378697629483820647
	029 Move X11, X31
	030 NotImplemented "Instruction MOVK not yet implemented."
	031 Move X10, X11
	032 Subtract W21, W21, 1
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Add X8, X10, X10
	036 Move X10, X8
	037 ShiftRight X10, 63
	038 And X10, X10, 0x3FFFFFFF
	039 Compare X11, 0
	040 JumpIfEqual {32}
	041 Add X11, X10, X11
	042 Subtract X11, X11, 48
	043 Move W8, W31
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add X0, X0, 2
	046 Move W8, 1
	047 Move [X19], X10

Method: System.Int32 ParseInt32(System.ReadOnlySpan`1<System.Char> value, System.Globalization.NumberStyles styles, System.Globalization.NumberFormatInfo info)

Disassembly:
	0x0337BDF4 STR X30, [X31 - 0x30]!
	0x0337BDF8 STP X22, X21, [X31 + 0x10]
	0x0337BDFC STP X20, X19, [X31 + 0x20]
	0x0337BE00 ADRP X21, 0x1061000
	0x0337BE04 LDRB W8, [X21 + 0xF5F]
	0x0337BE08 MOV X19, X1
	0x0337BE0C MOV X20, X0
	0x0337BE10 TBNZ X8, 0x0, 0x337BE28
	0x0337BE14 ADRP X0, 0xDAD000
	0x0337BE18 LDR X0, [X0 + 0x78]
	0x0337BE1C BL 0x1C16CF4
	0x0337BE20 MOVZ W8, 0x1
	0x0337BE24 STRB W8, [X21 + 0xF5F]
	0x0337BE28 CBZ X20, 0x337BEAC
	0x0337BE2C ADRP X21, 0x105E000
	0x0337BE30 ADRP X22, 0xDAD000
	0x0337BE34 LDRB W8, [X21 + 0x762]
	0x0337BE38 LDR X22, [X22 + 0x78]
	0x0337BE3C CBNZ W8, 0x337BE54
	0x0337BE40 ADRP X0, 0xD9F000
	0x0337BE44 LDR X0, [X0 + 0x290]
	0x0337BE48 BL 0x1C16CF4
	0x0337BE4C MOVZ W8, 0x1
	0x0337BE50 STRB W8, [X21 + 0x762]
	0x0337BE54 MOV X0, X20
	0x0337BE58 MOV X1, X31
	0x0337BE5C BL 0x3225708
	0x0337BE60 LDR W20, [X20 + 0x10]
	0x0337BE64 MOV X21, X0
	0x0337BE68 MOV X0, X31
	0x0337BE6C BL 0x333AE98
	0x0337BE70 LDR X8, [X22]
	0x0337BE74 MOV X22, X0
	0x0337BE78 LDR W9, [X8 + 0xE0]
	0x0337BE7C CBNZ W9, 0x337BE88
	0x0337BE80 MOV X0, X8
	0x0337BE84 BL 0x1C16DFC
	0x0337BE88 MOV X0, X21
	0x0337BE8C MOV X1, X20
	0x0337BE90 MOV X3, X22
	0x0337BE94 MOV X4, X19
	0x0337BE98 LDP X20, X19, [X31 + 0x20]
	0x0337BE9C LDP X22, X21, [X31 + 0x10]
	0x0337BEA0 MOVZ W2, 0x7
	0x0337BEA4 LDR X30, [X31], #0x30
	0x0337BEA8 B 0x337BEC4
	0x0337BEAC STR W31, [X19]
	0x0337BEB0 LDP X20, X19, [X31 + 0x20]
	0x0337BEB4 LDP X22, X21, [X31 + 0x10]
	0x0337BEB8 MOV W0, W31
	0x0337BEBC LDR X30, [X31], #0x30
	0x0337BEC0 RET
	0x0337BEC4 SUB X31, X31, 0xE0
	0x0337BEC8 STP X30, X25, [X31 + 0xA0]
	0x0337BECC STP X24, X23, [X31 + 0xB0]
	0x0337BED0 STP X22, X21, [X31 + 0xC0]
	0x0337BED4 STP X20, X19, [X31 + 0xD0]
	0x0337BED8 MRS X24, 0xC000
	0x0337BEDC LDR X8, [X24 + 0x28]
	0x0337BEE0 ADRP X25, 0x1061000
	0x0337BEE4 MOV X19, X4
	0x0337BEE8 MOV X23, X3
	0x0337BEEC STR X8, [X31 + 0x98]
	0x0337BEF0 LDRB W8, [X25 + 0xFE6]
	0x0337BEF4 MOV W20, W2
	0x0337BEF8 MOV X21, X1
	0x0337BEFC MOV X22, X0
	0x0337BF00 TBNZ X8, 0x0, 0x337BF18
	0x0337BF04 ADRP X0, 0xDAD000
	0x0337BF08 LDR X0, [X0 + 0x78]
	0x0337BF0C BL 0x1C16CF4
	0x0337BF10 MOVZ W8, 0x1
	0x0337BF14 STRB W8, [X25 + 0xFE6]
	0x0337BF18 ADRP X25, 0xDAD000
	0x0337BF1C LDR X25, [X25 + 0x78]
	0x0337BF20 MOVI V0.2D, 0x0
	0x0337BF24 CMP W20, 0x7
	0x0337BF28 STUR V0, [X31 + 0x7A]
	0x0337BF2C STP V0, V0, [X31 + 0x60]
	0x0337BF30 STP V0, V0, [X31 + 0x40]
	0x0337BF34 STP V0, V0, [X31 + 0x20]
	0x0337BF38 STR V0, [X31 + 0x1]
	0x0337BF3C B.HI 0x337BF74
	0x0337BF40 LDR X0, [X25]
	0x0337BF44 STRB W31, [X31 + 0xC]
	0x0337BF48 LDR W8, [X0 + 0xE0]
	0x0337BF4C CBNZ W8, 0x337BF54
	0x0337BF50 BL 0x1C16DFC
	0x0337BF54 ADD X5, X31, 0xC
	0x0337BF58 MOV X0, X22
	0x0337BF5C MOV X1, X21
	0x0337BF60 MOV W2, W20
	0x0337BF64 MOV X3, X23
	0x0337BF68 MOV X4, X19
	0x0337BF6C BL 0x338751C
	0x0337BF70 B 0x337C018
	0x0337BF74 STR W31, [X19]
	0x0337BF78 TBNZ X20, 0x9, 0x337BFEC
	0x0337BF7C LDR X0, [X25]
	0x0337BF80 MOVI V0.2D, 0x0
	0x0337BF84 STUR V0, [X31 + 0x7A]
	0x0337BF88 STP V0, V0, [X31 + 0x60]
	0x0337BF8C STP V0, V0, [X31 + 0x40]
	0x0337BF90 STP V0, V0, [X31 + 0x20]
	0x0337BF94 STR V0, [X31 + 0x1]
	0x0337BF98 LDR W8, [X0 + 0xE0]
	0x0337BF9C CBNZ W8, 0x337BFA4
	0x0337BFA0 BL 0x1C16DFC
	0x0337BFA4 ADD X3, X31, 0x10
	0x0337BFA8 MOV X0, X22
	0x0337BFAC MOV X1, X21
	0x0337BFB0 MOV W2, W20
	0x0337BFB4 MOV X4, X23

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+160], X30
	003 Move [X31+168], X25
	004 Move [X31+176], X24
	005 Move [X31+184], X23
	006 Move [X31+192], X22
	007 Move [X31+200], X21
	008 Move [X31+208], X20
	009 Move [X31+216], X19
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X23+40]
	012 Move X24, 0x1062000
	013 Move X22, X3
	014 Move W19, W2
	015 Move [X31+152], X8
	016 Move W8, [X24+4065]
	017 Move X20, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xDAE000
	024 Move X0, [X0+120]
	025 Call 0x1C17CF4
	026 Move X0, 0xDAE000
	027 Move X0, [X0+464]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X24+4065], W8
	031 Move X24, 0xDAE000
	032 Move X24, [X24+120]
	033 NotImplemented "Instruction MOVI not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move [X31+12], W31
	036 Move [X31], X31
	037 Move [X31+122], V0
	038 Move [X31+96], V0
	039 Move [X31+104], V0
	040 Move [X31+64], V0
	041 Move [X31+72], V0
	042 Move [X31+32], V0
	043 Move [X31+40], V0
	044 Move [X31+1], V0
	045 Move X0, [X24]
	046 Move [X31+8], W31
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Add X4, X31, 4
	052 Add X5, X31, 8
	053 Move X0, X21
	054 Move X1, X20
	055 Move W2, W19
	056 Move X3, X22
	057 Add X25, X31, 4
	058 Call Number.TryParseInt32IntegerStyle, X0, X1, X2, X3, X4
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {119}
	063 Move TEMP, X19
	064 And TEMP, TEMP, 512
	065 Compare TEMP, 512
	066 JumpIfEqual {102}
	067 Move X0, [X24]
	068 NotImplemented "Instruction MOVI not yet implemented."
	069 Move [X31+122], V0
	070 Move [X31+96], V0
	071 Move [X31+104], V0
	072 Move [X31+64], V0
	073 Move [X31+72], V0
	074 Move [X31+32], V0
	075 Move [X31+40], V0
	076 Move [X31+1], V0
	077 Move [X31+12], W31
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Add X3, X31, 16
	083 Move X0, X21
	084 Move X1, X20
	085 Move W2, W19
	086 Move X4, X22
	087 Move W5, W31
	088 Call Number.StringToNumber, X0, X1, X2, X3, X4
	089 Add X0, X31, 16
	090 Add X1, X31, 12
	091 Add X25, X31, 12
	092 Call Number.NumberToInt32, X0, X1
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {119}
	097 Move X0, [X24]
	098 Call 0x19913D0
	099 Move X8, 0xDAE000
	100 Move X8, [X8+464]
	101 Move W0, 1
	102 Move X0, [X24]
	103 Move [X31+8], W31
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Add X4, X31, 0
	109 Add X5, X31, 8
	110 Move X0, X21
	111 Move X1, X20
	112 Move W2, W19
	113 Add X25, X31, 0
	114 Call Number.TryParseUInt32HexNumberStyle, X0, X1, X2, X3, X4
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {133}
	119 Move W0, [X25]
	120 Move X8, [X23+40]
	121 Move X9, [X31+152]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X20, [X31+208]
	124 Move X19, [X31+216]
	125 Move X22, [X31+192]
	126 Move X21, [X31+200]
	127 Move X24, [X31+176]
	128 Move X23, [X31+184]
	129 Move X30, [X31+160]
	130 Move X25, [X31+168]
	131 Add X31, X31, 224
	132 Return X0
	133 Move X0, [X24]
	134 Move W19, [X31+8]
	135 Call 0x19913D0
	136 Move X8, 0xDAE000
	137 Move X8, [X8+464]
	138 Move W0, W19
	139 Move X1, [X8]
	140 Call Number.ThrowOverflowOrFormatException, X0, X1
	141 Call 0x3EB2B20

Method: System.Int64 ParseInt64(System.ReadOnlySpan`1<System.Char> value, System.Globalization.NumberStyles styles, System.Globalization.NumberFormatInfo info)

Disassembly:
	0x0337E2E0 LDR X0, [X0 + 0xED8]
	0x0337E2E4 BL 0x1C16D08
	0x0337E2E8 MOV X2, X0
	0x0337E2EC MOV X0, X19
	0x0337E2F0 MOV X1, X20
	0x0337E2F4 MOV X3, X31
	0x0337E2F8 BL 0x3311888
	0x0337E2FC ADRP X0, 0xDAC000
	0x0337E300 LDR X0, [X0 + 0xEE0]
	0x0337E304 BL 0x1C16D08
	0x0337E308 MOV X1, X0
	0x0337E30C MOV X0, X19
	0x0337E310 BL 0x1C16DEC
	0x0337E314 STP X30, X19, [X31 - 0x10]!
	0x0337E318 MOV X1, X31
	0x0337E31C BL 0x33A703C
	0x0337E320 LDP X30, X19, [X31], #0x10
	0x0337E324 RET
	0x0337E328 CMP W1, 0x1
	0x0337E32C MOV X19, X0
	0x0337E330 B.NE 0x337E3D0
	0x0337E334 MOV X0, X19
	0x0337E338 BL 0x3EB1AD0
	0x0337E33C MOV X19, X0
	0x0337E340 ADRP X0, 0xD9E000
	0x0337E344 LDR X0, [X0 + 0x28]
	0x0337E348 BL 0x1C16D08
	0x0337E34C LDR X8, [X19]
	0x0337E350 LDR X1, [X8]
	0x0337E354 BL 0x1C17270
	0x0337E358 TBZ X0, 0x0, 0x337E3A8
	0x0337E35C BL 0x3EB1AE0
	0x0337E360 ADRP X0, 0xD9E000
	0x0337E364 LDR X0, [X0 + 0x30]
	0x0337E368 BL 0x1C16D08
	0x0337E36C BL 0x1C16F10
	0x0337E370 MOV X19, X0
	0x0337E374 ADRP X0, 0xD9E000
	0x0337E378 LDR X0, [X0 + 0x38]
	0x0337E37C BL 0x1C16D08
	0x0337E380 MOV X1, X0
	0x0337E384 MOV X0, X19
	0x0337E388 MOV X2, X31
	0x0337E38C BL 0x339ECD8
	0x0337E390 ADRP X0, 0xDAC000
	0x0337E394 LDR X0, [X0 + 0xEE8]
	0x0337E398 BL 0x1C16D08
	0x0337E39C MOV X1, X0
	0x0337E3A0 MOV X0, X19
	0x0337E3A4 BL 0x1C16DEC
	0x0337E3A8 MOVZ W0, 0x8
	0x0337E3AC BL 0x3EB1AF0
	0x0337E3B0 LDR X8, [X19]
	0x0337E3B4 STR X8, [X0]
	0x0337E3B8 ADRP X1, 0xB36000
	0x0337E3BC ADD X1, X1, 0xE58
	0x0337E3C0 MOV X2, X31
	0x0337E3C4 BL 0x3EB1B00
	0x0337E3C8 MOV X19, X0
	0x0337E3CC BL 0x3EB1AE0
	0x0337E3D0 MOV X0, X19
	0x0337E3D4 BL 0x1D2C690
	0x0337E3D8 BL 0x1990590
	0x0337E3DC STR X30, [X31 - 0x20]!
	0x0337E3E0 STP X20, X19, [X31 + 0x10]
	0x0337E3E4 ADRP X19, 0x105E000
	0x0337E3E8 ADRP X20, 0xDA1000
	0x0337E3EC LDRB W8, [X19 + 0xF8F]
	0x0337E3F0 LDR X20, [X20 + 0xF8]
	0x0337E3F4 TBNZ X8, 0x0, 0x337E40C
	0x0337E3F8 ADRP X0, 0xDA1000
	0x0337E3FC LDR X0, [X0 + 0xF8]
	0x0337E400 BL 0x1C16CF4
	0x0337E404 MOVZ W8, 0x1
	0x0337E408 STRB W8, [X19 + 0xF8F]
	0x0337E40C LDR X0, [X20]
	0x0337E410 BL 0x1C16F10
	0x0337E414 MOV X1, X31
	0x0337E418 MOV X19, X0
	0x0337E41C BL 0x33BDD8C
	0x0337E420 STR W31, [X19 + 0x10]
	0x0337E424 LDR X8, [X20]
	0x0337E428 LDR X8, [X8 + 0xB8]
	0x0337E42C STR X19, [X8]
	0x0337E430 LDR X0, [X20]
	0x0337E434 BL 0x1C16F10
	0x0337E438 MOV X1, X31
	0x0337E43C MOV X19, X0
	0x0337E440 BL 0x33BDD8C
	0x0337E444 MOVZ W8, 0x1
	0x0337E448 STR W8, [X19 + 0x10]
	0x0337E44C LDR X0, [X20]
	0x0337E450 LDR X8, [X0 + 0xB8]
	0x0337E454 STR X19, [X8 + 0x8]
	0x0337E458 BL 0x1C16F10
	0x0337E45C MOV X1, X31
	0x0337E460 MOV X19, X0
	0x0337E464 BL 0x33BDD8C
	0x0337E468 MOVZ W8, 0x3
	0x0337E46C STR W8, [X19 + 0x10]
	0x0337E470 LDR X0, [X20]
	0x0337E474 LDR X8, [X0 + 0xB8]
	0x0337E478 STR X19, [X8 + 0x10]
	0x0337E47C BL 0x1C16F10
	0x0337E480 MOV X1, X31
	0x0337E484 MOV X19, X0
	0x0337E488 BL 0x33BDD8C
	0x0337E48C MOVZ W8, 0x4
	0x0337E490 STR W8, [X19 + 0x10]
	0x0337E494 LDR X0, [X20]
	0x0337E498 LDR X8, [X0 + 0xB8]
	0x0337E49C STR X19, [X8 + 0x18]
	0x0337E4A0 BL 0x1C16F10
	0x0337E4A4 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+176], X30
	003 Move [X31+184], X25
	004 Move [X31+192], X24
	005 Move [X31+200], X23
	006 Move [X31+208], X22
	007 Move [X31+216], X21
	008 Move [X31+224], X20
	009 Move [X31+232], X19
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X23+40]
	012 Move X24, 0x105F000
	013 Move X22, X3
	014 Move W19, W2
	015 Move [X31+168], X8
	016 Move W8, [X24+4066]
	017 Move X20, X1
	018 Move X21, X0
	019 Add X25, X31, 32
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0xDAB000
	025 Move X0, [X0+120]
	026 Call 0x1C17CF4
	027 Move X0, 0xDAB000
	028 Move X0, [X0+496]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X24+4066], W8
	032 Move X24, 0xDAB000
	033 Move X24, [X24+120]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move [X31+24], X31
	037 Move [X31], X31
	038 Move [X31+8], X31
	039 Move [X25+106], V0
	040 Move [X31+112], V0
	041 Move [X31+120], V0
	042 Move [X31+80], V0
	043 Move [X31+88], V0
	044 Move [X31+48], V0
	045 Move [X31+56], V0
	046 Move [X31+2], V0
	047 Move X0, [X24]
	048 Move [X31+20], W31
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Add X4, X31, 8
	054 Add X5, X31, 20
	055 Move X0, X21
	056 Move X1, X20
	057 Move W2, W19
	058 Move X3, X22
	059 Add X25, X31, 8
	060 Call Number.TryParseInt64IntegerStyle, X0, X1, X2, X3, X4
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {121}
	065 Move TEMP, X19
	066 And TEMP, TEMP, 512
	067 Compare TEMP, 512
	068 JumpIfEqual {104}
	069 Move X0, [X24]
	070 NotImplemented "Instruction MOVI not yet implemented."
	071 Move [X25+106], V0
	072 Move [X31+112], V0
	073 Move [X31+120], V0
	074 Move [X31+80], V0
	075 Move [X31+88], V0
	076 Move [X31+48], V0
	077 Move [X31+56], V0
	078 Move [X31+2], V0
	079 Move [X31+24], X31
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Add X3, X31, 32
	085 Move X0, X21
	086 Move X1, X20
	087 Move W2, W19
	088 Move X4, X22
	089 Move W5, W31
	090 Call Number.StringToNumber, X0, X1, X2, X3, X4
	091 Add X0, X31, 32
	092 Add X1, X31, 24
	093 Add X25, X31, 24
	094 Call Number.NumberToInt64, X0, X1
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {121}
	099 Move X0, [X24]
	100 Call 0x19913D0
	101 Move X8, 0xDAB000
	102 Move X8, [X8+496]
	103 Move W0, 1
	104 Move X0, [X24]
	105 Move [X31+20], W31
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Add X4, X31, 0
	111 Add X5, X31, 20
	112 Move X0, X21
	113 Move X1, X20
	114 Move W2, W19
	115 Add X25, X31, 0
	116 Call Number.TryParseUInt64HexNumberStyle, X0, X1, X2, X3, X4
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfNotEqual {135}
	121 Move X0, [X25]
	122 Move X8, [X23+40]
	123 Move X9, [X31+168]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X20, [X31+224]
	126 Move X19, [X31+232]
	127 Move X22, [X31+208]
	128 Move X21, [X31+216]
	129 Move X24, [X31+192]
	130 Move X23, [X31+200]
	131 Move X30, [X31+176]
	132 Move X25, [X31+184]
	133 Add X31, X31, 240
	134 Return X0
	135 Move X0, [X24]
	136 Move W19, [X31+20]
	137 Call 0x19913D0
	138 Move X8, 0xDAB000
	139 Move X8, [X8+496]
	140 Move W0, W19
	141 Move X1, [X8]
	142 Call Number.ThrowOverflowOrFormatException, X0, X1
	143 Call 0x3EB2B20

Method: System.UInt32 ParseUInt32(System.ReadOnlySpan`1<System.Char> value, System.Globalization.NumberStyles styles, System.Globalization.NumberFormatInfo info)

Disassembly:
	0x03389948 LDR X0, [X21]
	0x0338994C LDR W8, [X0 + 0xE0]
	0x03389950 CBNZ W8, 0x3389958
	0x03389954 BL 0x1C16DFC
	0x03389958 AND W8, W28, 0xFFFF
	0x0338995C CMP W8, 0x20
	0x03389960 SUB W9, W8, 0x9
	0x03389964 CSET W8, NE
	0x03389968 CMP W9, 0x4
	0x0338996C CSET W9, HI
	0x03389970 TBZ X23, 0x0, 0x3389994
	0x03389974 AND W8, W8, W9, 0x0
	0x03389978 TBNZ X8, 0x0, 0x3389994
	0x0338997C AND W8, W19, W27, 0x0
	0x03389980 CMP W8, 0x1
	0x03389984 B.NE 0x3389A74
	0x03389988 LDR W8, [X22 + 0xBC]
	0x0338998C CMP W8, 0x2
	0x03389990 B.EQ 0x3389A74
	0x03389994 AND W20, W19, 0x1
	0x03389998 TBZ X23, 0x2, 0x3389A14
	0x0338999C CBNZ W20, 0x3389A14
	0x033899A0 LDR X0, [X21]
	0x033899A4 LDR X29, [X22 + 0x28]
	0x033899A8 LDR W8, [X0 + 0xE0]
	0x033899AC CBNZ W8, 0x33899B4
	0x033899B0 BL 0x1C16DFC
	0x033899B4 MOV X0, X26
	0x033899B8 MOV X1, X24
	0x033899BC MOV X2, X29
	0x033899C0 BL 0x3389F94
	0x033899C4 MOV X29, X0
	0x033899C8 CBNZ X0, 0x3389A08
	0x033899CC LDR X0, [X21]
	0x033899D0 LDR X29, [X22 + 0x30]
	0x033899D4 LDR W8, [X0 + 0xE0]
	0x033899D8 CBNZ W8, 0x33899E0
	0x033899DC BL 0x1C16DFC
	0x033899E0 MOV X0, X26
	0x033899E4 MOV X1, X24
	0x033899E8 MOV X2, X29
	0x033899EC BL 0x3389F94
	0x033899F0 CBZ X0, 0x3389A14
	0x033899F4 MOV X29, X0
	0x033899F8 LDR X0, [X31 + 0x28]
	0x033899FC MOVZ W1, 0x1
	0x03389A00 MOV X2, X31
	0x03389A04 BL 0x338C39C
	0x03389A08 ORR W19, W19, 0x1
	0x03389A0C SUB X26, X29, 0x2
	0x03389A10 B 0x3389A74
	0x03389A14 TBZ X23, 0x4, 0x3389A40
	0x03389A18 AND W8, W28, 0xFFFF
	0x03389A1C CMP W8, 0x28
	0x03389A20 B.NE 0x3389A40
	0x03389A24 CBNZ W20, 0x3389A40
	0x03389A28 LDR X0, [X31 + 0x28]
	0x03389A2C MOVZ W1, 0x1
	0x03389A30 MOV X2, X31
	0x03389A34 ORR W19, W19, 0x3
	0x03389A38 BL 0x338C39C
	0x03389A3C B 0x3389A74
	0x03389A40 CBZ X25, 0x3389A8C
	0x03389A44 LDR X0, [X21]
	0x03389A48 LDR W8, [X0 + 0xE0]
	0x03389A4C CBNZ W8, 0x3389A54
	0x03389A50 BL 0x1C16DFC
	0x03389A54 MOV X0, X26
	0x03389A58 MOV X1, X24
	0x03389A5C MOV X2, X25
	0x03389A60 BL 0x3389F94
	0x03389A64 CBZ X0, 0x3389A8C
	0x03389A68 MOV X25, X31
	0x03389A6C ORR W19, W19, 0x20
	0x03389A70 SUB X26, X0, 0x2
	0x03389A74 ADD X26, X26, 0x2
	0x03389A78 CMP X26, X24
	0x03389A7C MOV W28, W31
	0x03389A80 B.CS 0x3389948
	0x03389A84 LDRH W28, [X26]
	0x03389A88 B 0x3389948
	0x03389A8C MOV W20, W31
	0x03389A90 MOV W27, W31
	0x03389A94 LDR X0, [X21]
	0x03389A98 LDR W8, [X0 + 0xE0]
	0x03389A9C CBNZ W8, 0x3389AA4
	0x03389AA0 BL 0x1C16DFC
	0x03389AA4 AND W8, W28, 0xFFFF
	0x03389AA8 SUB W9, W8, 0x30
	0x03389AAC CMP W9, 0x9
	0x03389AB0 B.HI 0x3389AE0
	0x03389AB4 CMP W8, 0x30
	0x03389AB8 B.NE 0x3389B14
	0x03389ABC TBNZ X19, 0x3, 0x3389B14
	0x03389AC0 ORR W8, W19, 0x4
	0x03389AC4 TBZ X19, 0x4, 0x3389AD8
	0x03389AC8 LDR X10, [X31 + 0x28]
	0x03389ACC LDR W9, [X10 + 0x4]
	0x03389AD0 SUB W9, W9, 0x1
	0x03389AD4 STR W9, [X10 + 0x4]
	0x03389AD8 MOV W19, W8
	0x03389ADC B 0x3389C20
	0x03389AE0 TBZ X23, 0x5, 0x3389BB0
	0x03389AE4 TBNZ X19, 0x4, 0x3389BB0
	0x03389AE8 LDR X0, [X21]
	0x03389AEC LDR W8, [X0 + 0xE0]
	0x03389AF0 CBNZ W8, 0x3389AF8
	0x03389AF4 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+160], X30
	003 Move [X31+176], X24
	004 Move [X31+184], X23
	005 Move [X31+192], X22
	006 Move [X31+200], X21
	007 Move [X31+208], X20
	008 Move [X31+216], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X23+40]
	011 Move X24, 0x1054000
	012 Move X22, X3
	013 Move W19, W2
	014 Move [X31+152], X8
	015 Move W8, [X24+4067]
	016 Move X20, X1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xDA0000
	023 Move X0, [X0+120]
	024 Call 0x1C17CF4
	025 Move X0, 0xDA0000
	026 Move X0, [X0+480]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X24+4067], W8
	030 Move X24, 0xDA0000
	031 Move X24, [X24+120]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move [X31+122], V0
	035 Move [X31+96], V0
	036 Move [X31+104], V0
	037 Move [X31+64], V0
	038 Move [X31+72], V0
	039 Move [X31+32], V0
	040 Move [X31+40], V0
	041 Move [X31+1], V0
	042 Move [X31+12], W31
	043 Move X0, [X24]
	044 Move [X31+8], W31
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Add X4, X31, 12
	050 Add X5, X31, 8
	051 Move X0, X21
	052 Move X1, X20
	053 Move W2, W19
	054 Move X3, X22
	055 Call Number.TryParseUInt32IntegerStyle, X0, X1, X2, X3, X4
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {113}
	060 Move TEMP, X19
	061 And TEMP, TEMP, 512
	062 Compare TEMP, 512
	063 JumpIfEqual {97}
	064 Move X0, [X24]
	065 NotImplemented "Instruction MOVI not yet implemented."
	066 Move [X31+122], V0
	067 Move [X31+96], V0
	068 Move [X31+104], V0
	069 Move [X31+64], V0
	070 Move [X31+72], V0
	071 Move [X31+32], V0
	072 Move [X31+40], V0
	073 Move [X31+1], V0
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Add X3, X31, 16
	079 Move X0, X21
	080 Move X1, X20
	081 Move W2, W19
	082 Move X4, X22
	083 Move W5, W31
	084 Call Number.StringToNumber, X0, X1, X2, X3, X4
	085 Add X0, X31, 16
	086 Add X1, X31, 12
	087 Call Number.NumberToUInt32, X0, X1
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {113}
	092 Move X0, [X24]
	093 Call 0x19913D0
	094 Move X8, 0xDA0000
	095 Move X8, [X8+480]
	096 Move W0, 1
	097 Move X0, [X24]
	098 Move [X31+8], W31
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Add X4, X31, 12
	104 Add X5, X31, 8
	105 Move X0, X21
	106 Move X1, X20
	107 Move W2, W19
	108 Call Number.TryParseUInt32HexNumberStyle, X0, X1, X2, X3, X4
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {126}
	113 Move W0, [X31+12]
	114 Move X8, [X23+40]
	115 Move X9, [X31+152]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X20, [X31+208]
	118 Move X19, [X31+216]
	119 Move X22, [X31+192]
	120 Move X21, [X31+200]
	121 Move X24, [X31+176]
	122 Move X23, [X31+184]
	123 Move X30, [X31+160]
	124 Add X31, X31, 224
	125 Return X0
	126 Move X0, [X24]
	127 Move W19, [X31+8]
	128 Call 0x19913D0
	129 Move X8, 0xDA0000
	130 Move X8, [X8+480]
	131 Move W0, W19
	132 Move X1, [X8]
	133 Call Number.ThrowOverflowOrFormatException, X0, X1
	134 Call 0x3EB2B20

Method: System.UInt64 ParseUInt64(System.ReadOnlySpan`1<System.Char> value, System.Globalization.NumberStyles styles, System.Globalization.NumberFormatInfo info)

Disassembly:
	0x0338A0CC UBFM X27, X19, 0x20, 0x1F
	0x0338A0D0 ADD X1, X25, X27, 0x1F, ASR
	0x0338A0D4 AND W5, W24, 0x1
	0x0338A0D8 ADD X0, X31, 0x8
	0x0338A0DC MOV W2, W23
	0x0338A0E0 MOV X3, X22
	0x0338A0E4 MOV X4, X21
	0x0338A0E8 BL 0x338987C
	0x0338A0EC TBZ X0, 0x0, 0x338A138
	0x0338A0F0 LDR X8, [X31 + 0x8]
	0x0338A0F4 SUB X8, X8, X25
	0x0338A0F8 CMP X8, 0x0
	0x0338A0FC CINC X8, X8, LT
	0x0338A100 SBFM X21, X8, 0x1, 0x3F
	0x0338A104 CMP X21, X27, ASR
	0x0338A108 B.GE 0x338A130
	0x0338A10C LDR X0, [X26]
	0x0338A110 LDR W8, [X0 + 0xE0]
	0x0338A114 CBNZ W8, 0x338A11C
	0x0338A118 BL 0x1C16DFC
	0x0338A11C MOV X0, X20
	0x0338A120 MOV X1, X19
	0x0338A124 MOV W2, W21
	0x0338A128 BL 0x338A158
	0x0338A12C TBZ X0, 0x0, 0x338A138
	0x0338A130 MOVZ W0, 0x1
	0x0338A134 B 0x338A13C
	0x0338A138 MOV W0, W31
	0x0338A13C LDP X20, X19, [X31 + 0x50]
	0x0338A140 LDP X22, X21, [X31 + 0x40]
	0x0338A144 LDP X24, X23, [X31 + 0x30]
	0x0338A148 LDP X26, X25, [X31 + 0x20]
	0x0338A14C LDP X30, X27, [X31 + 0x10]
	0x0338A150 ADD X31, X31, 0x60
	0x0338A154 RET
	0x0338A158 STR X30, [X31 - 0x30]!
	0x0338A15C STP X22, X21, [X31 + 0x10]
	0x0338A160 STP X20, X19, [X31 + 0x20]
	0x0338A164 ADRP X22, 0x1052000
	0x0338A168 LDRB W8, [X22 + 0xFF9]
	0x0338A16C MOV W19, W2
	0x0338A170 MOV X20, X1
	0x0338A174 MOV X21, X0
	0x0338A178 TBNZ X8, 0x0, 0x338A190
	0x0338A17C ADRP X0, 0xD98000
	0x0338A180 LDR X0, [X0 + 0x28]
	0x0338A184 BL 0x1C16CF4
	0x0338A188 MOVZ W8, 0x1
	0x0338A18C STRB W8, [X22 + 0xFF9]
	0x0338A190 CMP W20, W19
	0x0338A194 B.LE 0x338A1C8
	0x0338A198 CSEL W8, W19, W20, CC
	0x0338A19C MOVZ W9, 0x1
	0x0338A1A0 CMP W8, W19
	0x0338A1A4 B.EQ 0x338A1E4
	0x0338A1A8 LDRH W10, [X21, W19, SXTW]
	0x0338A1AC CBNZ W10, 0x338A1CC
	0x0338A1B0 ADD W19, W19, 0x1
	0x0338A1B4 CMP W19, W20
	0x0338A1B8 CSET W9, LT
	0x0338A1BC CMP W20, W19
	0x0338A1C0 B.NE 0x338A1A0
	0x0338A1C4 B 0x338A1CC
	0x0338A1C8 MOV W9, W31
	0x0338A1CC LDP X20, X19, [X31 + 0x20]
	0x0338A1D0 LDP X22, X21, [X31 + 0x10]
	0x0338A1D4 ORN W8, W31, W9, 0x0
	0x0338A1D8 AND W0, W8, 0x1
	0x0338A1DC LDR X30, [X31], #0x30
	0x0338A1E0 RET
	0x0338A1E4 BL 0x1C16F28
	0x0338A1E8 SUB X31, X31, 0xE0
	0x0338A1EC STP X30, X25, [X31 + 0xA0]
	0x0338A1F0 STP X24, X23, [X31 + 0xB0]
	0x0338A1F4 STP X22, X21, [X31 + 0xC0]
	0x0338A1F8 STP X20, X19, [X31 + 0xD0]
	0x0338A1FC MRS X24, 0xC000
	0x0338A200 LDR X8, [X24 + 0x28]
	0x0338A204 ADRP X25, 0x1052000
	0x0338A208 MOV X19, X4
	0x0338A20C MOV X23, X3
	0x0338A210 STR X8, [X31 + 0x98]
	0x0338A214 LDRB W8, [X25 + 0xFEA]
	0x0338A218 MOV W20, W2
	0x0338A21C MOV X21, X1
	0x0338A220 MOV X22, X0
	0x0338A224 TBNZ X8, 0x0, 0x338A23C
	0x0338A228 ADRP X0, 0xD9E000
	0x0338A22C LDR X0, [X0 + 0x78]
	0x0338A230 BL 0x1C16CF4
	0x0338A234 MOVZ W8, 0x1
	0x0338A238 STRB W8, [X25 + 0xFEA]
	0x0338A23C ADRP X25, 0xD9E000
	0x0338A240 LDR X25, [X25 + 0x78]
	0x0338A244 MOVI V0.2D, 0x0
	0x0338A248 CMP W20, 0x7
	0x0338A24C STUR V0, [X31 + 0x7A]
	0x0338A250 STP V0, V0, [X31 + 0x60]
	0x0338A254 STP V0, V0, [X31 + 0x40]
	0x0338A258 STP V0, V0, [X31 + 0x20]
	0x0338A25C STR V0, [X31 + 0x1]
	0x0338A260 B.HI 0x338A298
	0x0338A264 LDR X0, [X25]
	0x0338A268 STRB W31, [X31 + 0xC]
	0x0338A26C LDR W8, [X0 + 0xE0]
	0x0338A270 CBNZ W8, 0x338A278
	0x0338A274 BL 0x1C16DFC
	0x0338A278 ADD X5, X31, 0xC

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+160], X30
	003 Move [X31+176], X24
	004 Move [X31+184], X23
	005 Move [X31+192], X22
	006 Move [X31+200], X21
	007 Move [X31+208], X20
	008 Move [X31+216], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X23+40]
	011 Move X24, 0x1053000
	012 Move X22, X3
	013 Move W19, W2
	014 Move [X31+152], X8
	015 Move W8, [X24+4068]
	016 Move X20, X1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xD9F000
	023 Move X0, [X0+120]
	024 Call 0x1C17CF4
	025 Move X0, 0xD9F000
	026 Move X0, [X0+512]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X24+4068], W8
	030 Move X24, 0xD9F000
	031 Move X24, [X24+120]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move [X31+122], V0
	035 Move [X31+96], V0
	036 Move [X31+104], V0
	037 Move [X31+64], V0
	038 Move [X31+72], V0
	039 Move [X31+32], V0
	040 Move [X31+40], V0
	041 Move [X31+1], V0
	042 Move [X31+8], X31
	043 Move X0, [X24]
	044 Move [X31+4], W31
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Add X4, X31, 8
	050 Add X5, X31, 4
	051 Move X0, X21
	052 Move X1, X20
	053 Move W2, W19
	054 Move X3, X22
	055 Call Number.TryParseUInt64IntegerStyle, X0, X1, X2, X3, X4
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {113}
	060 Move TEMP, X19
	061 And TEMP, TEMP, 512
	062 Compare TEMP, 512
	063 JumpIfEqual {97}
	064 Move X0, [X24]
	065 NotImplemented "Instruction MOVI not yet implemented."
	066 Move [X31+122], V0
	067 Move [X31+96], V0
	068 Move [X31+104], V0
	069 Move [X31+64], V0
	070 Move [X31+72], V0
	071 Move [X31+32], V0
	072 Move [X31+40], V0
	073 Move [X31+1], V0
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Add X3, X31, 16
	079 Move X0, X21
	080 Move X1, X20
	081 Move W2, W19
	082 Move X4, X22
	083 Move W5, W31
	084 Call Number.StringToNumber, X0, X1, X2, X3, X4
	085 Add X0, X31, 16
	086 Add X1, X31, 8
	087 Call Number.NumberToUInt64, X0, X1
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {113}
	092 Move X0, [X24]
	093 Call 0x19913D0
	094 Move X8, 0xD9F000
	095 Move X8, [X8+512]
	096 Move W0, 1
	097 Move X0, [X24]
	098 Move [X31+4], W31
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Add X4, X31, 8
	104 Add X5, X31, 4
	105 Move X0, X21
	106 Move X1, X20
	107 Move W2, W19
	108 Call Number.TryParseUInt64HexNumberStyle, X0, X1, X2, X3, X4
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {126}
	113 Move X0, [X31+8]
	114 Move X8, [X23+40]
	115 Move X9, [X31+152]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X20, [X31+208]
	118 Move X19, [X31+216]
	119 Move X22, [X31+192]
	120 Move X21, [X31+200]
	121 Move X24, [X31+176]
	122 Move X23, [X31+184]
	123 Move X30, [X31+160]
	124 Add X31, X31, 224
	125 Return X0
	126 Move X0, [X24]
	127 Move W19, [X31+4]
	128 Call 0x19913D0
	129 Move X8, 0xD9F000
	130 Move X8, [X8+512]
	131 Move W0, W19
	132 Move X1, [X8]
	133 Call Number.ThrowOverflowOrFormatException, X0, X1
	134 Call 0x3EB2B20

Method: System.Boolean ParseNumber(ref System.Char* str, System.Char* strEnd, System.Globalization.NumberStyles styles, ref System.Number/NumberBuffer number, System.Globalization.NumberFormatInfo info, System.Boolean parseDecimal)

Disassembly:
	0x0338A87C B 0x338A884
	0x0338A880 MOV X1, X31
	0x0338A884 CMP W23, 0x0
	0x0338A888 B.LE 0x338A8B8
	0x0338A88C MOV W0, W31
	0x0338A890 LDR X8, [X22 + 0x28]
	0x0338A894 LDR X9, [X31 + 0x18]
	0x0338A898 CMP X8, X9
	0x0338A89C B.NE 0x338A8EC
	0x0338A8A0 LDP X20, X19, [X31 + 0x50]
	0x0338A8A4 LDP X22, X21, [X31 + 0x40]
	0x0338A8A8 LDP X24, X23, [X31 + 0x30]
	0x0338A8AC LDR X30, [X31 + 0x20]
	0x0338A8B0 ADD X31, X31, 0x60
	0x0338A8B4 RET
	0x0338A8B8 ADDS W31, W23, 0x1D
	0x0338A8BC B.LE 0x338A8D8
	0x0338A8C0 UBFM X2, X1, 0x20, 0x3F
	0x0338A8C4 SUB W5, W31, W23
	0x0338A8C8 AND W4, W20, 0x1
	0x0338A8CC ADD X0, X31, 0x8
	0x0338A8D0 STP X31, X31, [X31 + 0x8]
	0x0338A8D4 B 0x338A75C
	0x0338A8D8 AND W4, W20, 0x1
	0x0338A8DC ADD X0, X31, 0x8
	0x0338A8E0 MOVZ W5, 0x1C
	0x0338A8E4 STP X31, X31, [X31 + 0x8]
	0x0338A8E8 B 0x338A750
	0x0338A8EC BL 0x3EB1B20
	0x0338A8F0 SUB X31, X31, 0xF0
	0x0338A8F4 STP X30, X27, [X31 + 0xA0]
	0x0338A8F8 STP X26, X25, [X31 + 0xB0]
	0x0338A8FC STP X24, X23, [X31 + 0xC0]
	0x0338A900 STP X22, X21, [X31 + 0xD0]
	0x0338A904 STP X20, X19, [X31 + 0xE0]
	0x0338A908 MRS X24, 0xC000
	0x0338A90C LDR X8, [X24 + 0x28]
	0x0338A910 ADRP X23, 0x1052000
	0x0338A914 ADRP X25, 0xD9E000
	0x0338A918 MOV X19, X3
	0x0338A91C STR X8, [X31 + 0x98]
	0x0338A920 LDRB W8, [X23 + 0xFF2]
	0x0338A924 LDR X25, [X25 + 0x78]
	0x0338A928 MOV W22, W2
	0x0338A92C MOV X20, X1
	0x0338A930 MOV X21, X0
	0x0338A934 TBNZ X8, 0x0, 0x338A958
	0x0338A938 ADRP X0, 0xD9E000
	0x0338A93C LDR X0, [X0 + 0x78]
	0x0338A940 BL 0x1C16CF4
	0x0338A944 ADRP X0, 0xDA0000
	0x0338A948 LDR X0, [X0 + 0xFF0]
	0x0338A94C BL 0x1C16CF4
	0x0338A950 MOVZ W8, 0x1
	0x0338A954 STRB W8, [X23 + 0xFF2]
	0x0338A958 LDR X0, [X25]
	0x0338A95C MOVI V0.2D, 0x0
	0x0338A960 STP V0, V0, [X31 + 0x10]
	0x0338A964 STP V0, V0, [X31 + 0x30]
	0x0338A968 STP V0, V0, [X31 + 0x50]
	0x0338A96C STR V0, [X31 + 0x7]
	0x0338A970 STUR V0, [X31 + 0x7A]
	0x0338A974 STR X31, [X31 + 0x8]
	0x0338A978 LDR W8, [X0 + 0xE0]
	0x0338A97C CBNZ W8, 0x338A984
	0x0338A980 BL 0x1C16DFC
	0x0338A984 ADD X3, X31, 0x10
	0x0338A988 MOV X0, X21
	0x0338A98C MOV X1, X20
	0x0338A990 MOV W2, W22
	0x0338A994 MOV X4, X19
	0x0338A998 MOV W5, W31
	0x0338A99C BL 0x338A028
	0x0338A9A0 TBZ X0, 0x0, 0x338A9CC
	0x0338A9A4 LDR X0, [X25]
	0x0338A9A8 LDR W8, [X0 + 0xE0]
	0x0338A9AC CBNZ W8, 0x338A9B4
	0x0338A9B0 BL 0x1C16DFC
	0x0338A9B4 ADD X0, X31, 0x10
	0x0338A9B8 ADD X1, X31, 0x8
	0x0338A9BC BL 0x338AC40
	0x0338A9C0 TBZ X0, 0x0, 0x338AC08
	0x0338A9C4 LDR V0, [X31 + 0x8]
	0x0338A9C8 B 0x338ABDC
	0x0338A9CC MOV X0, X21
	0x0338A9D0 MOV X1, X20
	0x0338A9D4 BL 0x337FDBC
	0x0338A9D8 BL 0x337FEB0
	0x0338A9DC CBZ X19, 0x338AC24
	0x0338A9E0 ADRP X27, 0x104F000
	0x0338A9E4 LDRB W8, [X27 + 0x762]
	0x0338A9E8 LDR X22, [X19 + 0x70]
	0x0338A9EC MOV X20, X0
	0x0338A9F0 MOV X21, X1
	0x0338A9F4 CBZ W8, 0x338AA14
	0x0338A9F8 CBZ X22, 0x338AA2C
	0x0338A9FC MOV X0, X22
	0x0338AA00 MOV X1, X31
	0x0338AA04 BL 0x3225708
	0x0338AA08 LDR W22, [X22 + 0x10]
	0x0338AA0C MOV X23, X0
	0x0338AA10 B 0x338AA30
	0x0338AA14 ADRP X0, 0xD90000
	0x0338AA18 LDR X0, [X0 + 0x290]
	0x0338AA1C BL 0x1C16CF4
	0x0338AA20 MOVZ W8, 0x1
	0x0338AA24 STRB W8, [X27 + 0x762]
	0x0338AA28 CBNZ X22, 0x338A9FC
	0x0338AA2C MOV X23, X31
	0x0338AA30 ADRP X26, 0x1052000
	0x0338AA34 LDRB W8, [X26 + 0xD06]
	0x0338AA38 CBNZ W8, 0x338AA5C
	0x0338AA3C ADRP X0, 0xD90000
	0x0338AA40 LDR X0, [X0 + 0x2D0]
	0x0338AA44 BL 0x1C16CF4
	0x0338AA48 ADRP X0, 0xD98000
	0x0338AA4C LDR X0, [X0 + 0x28]
	0x0338AA50 BL 0x1C16CF4
	0x0338AA54 MOVZ W8, 0x1
	0x0338AA58 STRB W8, [X26 + 0xD06]
	0x0338AA5C CMP W21, W22
	0x0338AA60 B.NE 0x338AA94
	0x0338AA64 CBZ W21, 0x338AA8C
	0x0338AA68 ADRP X8, 0xD90000
	0x0338AA6C LDR X8, [X8 + 0x2D0]
	0x0338AA70 MOV X0, X20
	0x0338AA74 MOV X1, X21
	0x0338AA78 MOV X2, X23
	0x0338AA7C LDR X4, [X8]
	0x0338AA80 MOV X3, X22
	0x0338AA84 BL 0x1F96ECC
	0x0338AA88 TBZ X0, 0x0, 0x338AA94
	0x0338AA8C MOVZ X8, 0x7FF00000
	0x0338AA90 B 0x338ABD8
	0x0338AA94 LDRB W8, [X27 + 0x762]
	0x0338AA98 LDR X22, [X19 + 0x78]
	0x0338AA9C CBZ W8, 0x338AABC
	0x0338AAA0 CBZ X22, 0x338AAD4
	0x0338AAA4 MOV X0, X22
	0x0338AAA8 MOV X1, X31
	0x0338AAAC BL 0x3225708
	0x0338AAB0 LDR W22, [X22 + 0x10]
	0x0338AAB4 MOV X23, X0
	0x0338AAB8 B 0x338AAD8
	0x0338AABC ADRP X0, 0xD90000
	0x0338AAC0 LDR X0, [X0 + 0x290]
	0x0338AAC4 BL 0x1C16CF4
	0x0338AAC8 MOVZ W8, 0x1
	0x0338AACC STRB W8, [X27 + 0x762]
	0x0338AAD0 CBNZ X22, 0x338AAA4
	0x0338AAD4 MOV X23, X31
	0x0338AAD8 LDRB W8, [X26 + 0xD06]
	0x0338AADC CBNZ W8, 0x338AB00
	0x0338AAE0 ADRP X0, 0xD90000
	0x0338AAE4 LDR X0, [X0 + 0x2D0]
	0x0338AAE8 BL 0x1C16CF4
	0x0338AAEC ADRP X0, 0xD98000
	0x0338AAF0 LDR X0, [X0 + 0x28]
	0x0338AAF4 BL 0x1C16CF4
	0x0338AAF8 MOVZ W8, 0x1
	0x0338AAFC STRB W8, [X26 + 0xD06]
	0x0338AB00 CMP W21, W22
	0x0338AB04 B.NE 0x338AB38
	0x0338AB08 CBZ W21, 0x338AB30
	0x0338AB0C ADRP X8, 0xD90000
	0x0338AB10 LDR X8, [X8 + 0x2D0]
	0x0338AB14 MOV X0, X20
	0x0338AB18 MOV X1, X21
	0x0338AB1C MOV X2, X23
	0x0338AB20 LDR X4, [X8]
	0x0338AB24 MOV X3, X22
	0x0338AB28 BL 0x1F96ECC
	0x0338AB2C TBZ X0, 0x0, 0x338AB38
	0x0338AB30 MOVZ X8, 0xFFF00000
	0x0338AB34 B 0x338ABD8
	0x0338AB38 LDRB W8, [X27 + 0x762]
	0x0338AB3C LDR X19, [X19 + 0x68]
	0x0338AB40 CBZ W8, 0x338AB60
	0x0338AB44 CBZ X19, 0x338AB78
	0x0338AB48 MOV X0, X19
	0x0338AB4C MOV X1, X31
	0x0338AB50 BL 0x3225708
	0x0338AB54 LDR W19, [X19 + 0x10]
	0x0338AB58 MOV X22, X0
	0x0338AB5C B 0x338AB7C
	0x0338AB60 ADRP X0, 0xD90000
	0x0338AB64 LDR X0, [X0 + 0x290]
	0x0338AB68 BL 0x1C16CF4
	0x0338AB6C MOVZ W8, 0x1
	0x0338AB70 STRB W8, [X27 + 0x762]
	0x0338AB74 CBNZ X19, 0x338AB48
	0x0338AB78 MOV X22, X31
	0x0338AB7C LDRB W8, [X26 + 0xD06]
	0x0338AB80 CBNZ W8, 0x338ABA4
	0x0338AB84 ADRP X0, 0xD90000
	0x0338AB88 LDR X0, [X0 + 0x2D0]
	0x0338AB8C BL 0x1C16CF4
	0x0338AB90 ADRP X0, 0xD98000
	0x0338AB94 LDR X0, [X0 + 0x28]
	0x0338AB98 BL 0x1C16CF4
	0x0338AB9C MOVZ W8, 0x1
	0x0338ABA0 STRB W8, [X26 + 0xD06]
	0x0338ABA4 CMP W21, W19
	0x0338ABA8 B.NE 0x338AC28
	0x0338ABAC CBZ W21, 0x338ABD4
	0x0338ABB0 ADRP X8, 0xD90000
	0x0338ABB4 LDR X8, [X8 + 0x2D0]
	0x0338ABB8 MOV X0, X20
	0x0338ABBC MOV X1, X21
	0x0338ABC0 MOV X2, X22
	0x0338ABC4 LDR X4, [X8]
	0x0338ABC8 MOV X3, X19
	0x0338ABCC BL 0x1F96ECC
	0x0338ABD0 TBZ X0, 0x0, 0x338AC28
	0x0338ABD4 MOVZ X8, 0x7FF80000
	0x0338ABD8 FMOV D0, X8
	0x0338ABDC LDR X8, [X24 + 0x28]
	0x0338ABE0 LDR X9, [X31 + 0x98]
	0x0338ABE4 CMP X8, X9
	0x0338ABE8 B.NE 0x338AC3C
	0x0338ABEC LDP X20, X19, [X31 + 0xE0]
	0x0338ABF0 LDP X22, X21, [X31 + 0xD0]
	0x0338ABF4 LDP X24, X23, [X31 + 0xC0]
	0x0338ABF8 LDP X26, X25, [X31 + 0xB0]
	0x0338ABFC LDP X30, X27, [X31 + 0xA0]
	0x0338AC00 ADD X31, X31, 0xF0
	0x0338AC04 RET
	0x0338AC08 LDR X0, [X25]
	0x0338AC0C BL 0x19903D0
	0x0338AC10 ADRP X8, 0xDA0000
	0x0338AC14 LDR X8, [X8 + 0xFF0]
	0x0338AC18 MOVZ W0, 0x1
	0x0338AC1C LDR X1, [X8]
	0x0338AC20 BL 0x3387AFC
	0x0338AC24 BL 0x1C16F20
	0x0338AC28 LDR X0, [X25]
	0x0338AC2C BL 0x19903D0
	0x0338AC30 MOV W0, W31
	0x0338AC34 MOV X1, X31
	0x0338AC38 BL 0x3387AFC
	0x0338AC3C BL 0x3EB1B20
	0x0338AC40 STR X30, [X31 - 0x30]!
	0x0338AC44 STP X22, X21, [X31 + 0x10]
	0x0338AC48 STP X20, X19, [X31 + 0x20]
	0x0338AC4C ADRP X21, 0x1052000
	0x0338AC50 ADRP X22, 0xD9E000
	0x0338AC54 LDRB W8, [X21 + 0xFFA]
	0x0338AC58 LDR X22, [X22 + 0x78]
	0x0338AC5C MOV X19, X1
	0x0338AC60 MOV X20, X0
	0x0338AC64 TBNZ X8, 0x0, 0x338AC7C
	0x0338AC68 ADRP X0, 0xD9E000
	0x0338AC6C LDR X0, [X0 + 0x78]
	0x0338AC70 BL 0x1C16CF4
	0x0338AC74 MOVZ W8, 0x1
	0x0338AC78 STRB W8, [X21 + 0xFFA]
	0x0338AC7C LDR X0, [X22]
	0x0338AC80 LDR W8, [X0 + 0xE0]
	0x0338AC84 CBNZ W8, 0x338AC8C
	0x0338AC88 BL 0x1C16DFC
	0x0338AC8C MOV X0, X20
	0x0338AC90 BL 0x3382DB0
	0x0338AC94 FMOV X8, D0
	0x0338AC98 AND X8, X8, 0x7FFFFFFFFFFFFFFF
	0x0338AC9C MOVZ X9, 0x7FF00000
	0x0338ACA0 CMP X8, X9
	0x0338ACA4 CSET W0, NE
	0x0338ACA8 FCMP D0, 0x0
	0x0338ACAC CCMP X8, X9, 0x4, NE
	0x0338ACB0 FMOV D1, X31
	0x0338ACB4 FCSEL D0, D1, D0, EQ
	0x0338ACB8 STR D0, [X19]
	0x0338ACBC LDP X20, X19, [X31 + 0x20]
	0x0338ACC0 LDP X22, X21, [X31 + 0x10]
	0x0338ACC4 LDR X30, [X31], #0x30
	0x0338ACC8 RET
	0x0338ACCC SUB X31, X31, 0xF0
	0x0338ACD0 STP X30, X27, [X31 + 0xA0]
	0x0338ACD4 STP X26, X25, [X31 + 0xB0]
	0x0338ACD8 STP X24, X23, [X31 + 0xC0]
	0x0338ACDC STP X22, X21, [X31 + 0xD0]
	0x0338ACE0 STP X20, X19, [X31 + 0xE0]
	0x0338ACE4 MRS X24, 0xC000
	0x0338ACE8 LDR X8, [X24 + 0x28]
	0x0338ACEC ADRP X23, 0x1052000
	0x0338ACF0 ADRP X25, 0xD9E000
	0x0338ACF4 MOV X19, X3
	0x0338ACF8 STR X8, [X31 + 0x98]
	0x0338ACFC LDRB W8, [X23 + 0xFF3]
	0x0338AD00 LDR X25, [X25 + 0x78]
	0x0338AD04 MOV W22, W2
	0x0338AD08 MOV X20, X1
	0x0338AD0C MOV X21, X0
	0x0338AD10 TBNZ X8, 0x0, 0x338AD34
	0x0338AD14 ADRP X0, 0xD9E000
	0x0338AD18 LDR X0, [X0 + 0x78]
	0x0338AD1C BL 0x1C16CF4
	0x0338AD20 ADRP X0, 0xDA0000
	0x0338AD24 LDR X0, [X0 + 0xFF8]
	0x0338AD28 BL 0x1C16CF4
	0x0338AD2C MOVZ W8, 0x1
	0x0338AD30 STRB W8, [X23 + 0xFF3]
	0x0338AD34 LDR X0, [X25]
	0x0338AD38 MOVI V0.2D, 0x0
	0x0338AD3C STP V0, V0, [X31 + 0x10]
	0x0338AD40 STP V0, V0, [X31 + 0x30]
	0x0338AD44 STP V0, V0, [X31 + 0x50]
	0x0338AD48 STR V0, [X31 + 0x7]
	0x0338AD4C STUR V0, [X31 + 0x7A]
	0x0338AD50 STR X31, [X31 + 0x8]
	0x0338AD54 LDR W8, [X0 + 0xE0]
	0x0338AD58 CBNZ W8, 0x338AD60
	0x0338AD5C BL 0x1C16DFC
	0x0338AD60 ADD X3, X31, 0x10
	0x0338AD64 MOV X0, X21
	0x0338AD68 MOV X1, X20
	0x0338AD6C MOV W2, W22
	0x0338AD70 MOV X4, X19
	0x0338AD74 MOV W5, W31
	0x0338AD78 BL 0x338A028
	0x0338AD7C TBZ X0, 0x0, 0x338ADD8
	0x0338AD80 LDR X0, [X25]
	0x0338AD84 LDR W8, [X0 + 0xE0]
	0x0338AD88 CBNZ W8, 0x338AD90
	0x0338AD8C BL 0x1C16DFC
	0x0338AD90 ADD X0, X31, 0x10
	0x0338AD94 ADD X1, X31, 0x8
	0x0338AD98 BL 0x338AC40
	0x0338AD9C TBZ X0, 0x0, 0x338ADBC
	0x0338ADA0 LDR V0, [X31 + 0x8]
	0x0338ADA4 MOVZ W9, 0x7F800000
	0x00000000 INVALID
	0x0338ADAC FMOV W8, S0
	0x0338ADB0 AND W8, W8, 0x7FFFFFFF
	0x0338ADB4 CMP W8, W9
	0x0338ADB8 B.NE 0x338AFE8
	0x0338ADBC LDR X0, [X25]
	0x0338ADC0 BL 0x19903D0
	0x0338ADC4 ADRP X8, 0xDA0000
	0x0338ADC8 LDR X8, [X8 + 0xFF8]
	0x0338ADCC MOVZ W0, 0x1
	0x0338ADD0 LDR X1, [X8]
	0x0338ADD4 BL 0x3387AFC
	0x0338ADD8 MOV X0, X21
	0x0338ADDC MOV X1, X20
	0x0338ADE0 BL 0x337FDBC
	0x0338ADE4 BL 0x337FEB0
	0x0338ADE8 CBZ X19, 0x338B014
	0x0338ADEC ADRP X27, 0x104F000
	0x0338ADF0 LDRB W8, [X27 + 0x762]
	0x0338ADF4 LDR X22, [X19 + 0x70]
	0x0338ADF8 MOV X20, X0
	0x0338ADFC MOV X21, X1
	0x0338AE00 CBZ W8, 0x338AE20
	0x0338AE04 CBZ X22, 0x338AE38
	0x0338AE08 MOV X0, X22
	0x0338AE0C MOV X1, X31
	0x0338AE10 BL 0x3225708
	0x0338AE14 LDR W22, [X22 + 0x10]
	0x0338AE18 MOV X23, X0
	0x0338AE1C B 0x338AE3C
	0x0338AE20 ADRP X0, 0xD90000
	0x0338AE24 LDR X0, [X0 + 0x290]
	0x0338AE28 BL 0x1C16CF4
	0x0338AE2C MOVZ W8, 0x1
	0x0338AE30 STRB W8, [X27 + 0x762]
	0x0338AE34 CBNZ X22, 0x338AE08
	0x0338AE38 MOV X23, X31
	0x0338AE3C ADRP X26, 0x1052000
	0x0338AE40 LDRB W8, [X26 + 0xD06]
	0x0338AE44 CBNZ W8, 0x338AE68
	0x0338AE48 ADRP X0, 0xD90000
	0x0338AE4C LDR X0, [X0 + 0x2D0]
	0x0338AE50 BL 0x1C16CF4
	0x0338AE54 ADRP X0, 0xD98000
	0x0338AE58 LDR X0, [X0 + 0x28]
	0x0338AE5C BL 0x1C16CF4
	0x0338AE60 MOVZ W8, 0x1
	0x0338AE64 STRB W8, [X26 + 0xD06]
	0x0338AE68 CMP W21, W22
	0x0338AE6C B.NE 0x338AEA0
	0x0338AE70 CBZ W21, 0x338AE98
	0x0338AE74 ADRP X8, 0xD90000
	0x0338AE78 LDR X8, [X8 + 0x2D0]
	0x0338AE7C MOV X0, X20
	0x0338AE80 MOV X1, X21
	0x0338AE84 MOV X2, X23
	0x0338AE88 LDR X4, [X8]
	0x0338AE8C MOV X3, X22
	0x0338AE90 BL 0x1F96ECC
	0x0338AE94 TBZ X0, 0x0, 0x338AEA0
	0x0338AE98 MOVZ W8, 0x7F800000
	0x0338AE9C B 0x338AFE4
	0x0338AEA0 LDRB W8, [X27 + 0x762]
	0x0338AEA4 LDR X22, [X19 + 0x78]
	0x0338AEA8 CBZ W8, 0x338AEC8
	0x0338AEAC CBZ X22, 0x338AEE0
	0x0338AEB0 MOV X0, X22
	0x0338AEB4 MOV X1, X31
	0x0338AEB8 BL 0x3225708
	0x0338AEBC LDR W22, [X22 + 0x10]
	0x0338AEC0 MOV X23, X0
	0x0338AEC4 B 0x338AEE4
	0x0338AEC8 ADRP X0, 0xD90000
	0x0338AECC LDR X0, [X0 + 0x290]
	0x0338AED0 BL 0x1C16CF4
	0x0338AED4 MOVZ W8, 0x1
	0x0338AED8 STRB W8, [X27 + 0x762]
	0x0338AEDC CBNZ X22, 0x338AEB0
	0x0338AEE0 MOV X23, X31
	0x0338AEE4 LDRB W8, [X26 + 0xD06]
	0x0338AEE8 CBNZ W8, 0x338AF0C
	0x0338AEEC ADRP X0, 0xD90000
	0x0338AEF0 LDR X0, [X0 + 0x2D0]
	0x0338AEF4 BL 0x1C16CF4
	0x0338AEF8 ADRP X0, 0xD98000
	0x0338AEFC LDR X0, [X0 + 0x28]
	0x0338AF00 BL 0x1C16CF4
	0x0338AF04 MOVZ W8, 0x1
	0x0338AF08 STRB W8, [X26 + 0xD06]
	0x0338AF0C CMP W21, W22
	0x0338AF10 B.NE 0x338AF44
	0x0338AF14 CBZ W21, 0x338AF3C
	0x0338AF18 ADRP X8, 0xD90000
	0x0338AF1C LDR X8, [X8 + 0x2D0]
	0x0338AF20 MOV X0, X20
	0x0338AF24 MOV X1, X21
	0x0338AF28 MOV X2, X23
	0x0338AF2C LDR X4, [X8]
	0x0338AF30 MOV X3, X22
	0x0338AF34 BL 0x1F96ECC
	0x0338AF38 TBZ X0, 0x0, 0x338AF44
	0x0338AF3C MOVZ W8, 0xFF800000
	0x0338AF40 B 0x338AFE4
	0x0338AF44 LDRB W8, [X27 + 0x762]
	0x0338AF48 LDR X19, [X19 + 0x68]
	0x0338AF4C CBZ W8, 0x338AF6C
	0x0338AF50 CBZ X19, 0x338AF84
	0x0338AF54 MOV X0, X19
	0x0338AF58 MOV X1, X31
	0x0338AF5C BL 0x3225708
	0x0338AF60 LDR W19, [X19 + 0x10]
	0x0338AF64 MOV X22, X0
	0x0338AF68 B 0x338AF88
	0x0338AF6C ADRP X0, 0xD90000
	0x0338AF70 LDR X0, [X0 + 0x290]
	0x0338AF74 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X19, 0x1053000
	015 Move W8, [X19+4069]
	016 Move X22, X4
	017 Move W23, W2
	018 Move X24, X1
	019 Move X20, X0
	020 Move [X31+16], W5
	021 Move [X31+40], X3
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0xD9F000
	027 Move X0, [X0+120]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X19+4069], W8
	031 Move X0, [X31+40]
	032 Move W1, W31
	033 Move X2, X31
	034 Move [X0+4], W31
	035 Call NumberBuffer.set_sign, X0, X1
	036 Compare X22, 0
	037 JumpIfEqual {532}
	038 Move TEMP, X23
	039 And TEMP, TEMP, 256
	040 Compare TEMP, 256
	041 JumpIfEqual {45}
	042 Move X25, X31
	043 Add X8, X22, 56
	044 Add X9, X22, 64
	045 Move X25, [X22+88]
	046 Add X8, X22, 80
	047 Add X9, X22, 72
	048 Move X26, [X20]
	049 Move X10, [X8]
	050 Move X8, [X9]
	051 Move [X31+8], X20
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move [X31+24], X10
	054 Move [X31+32], X8
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 Move W28, W31
	057 Move X21, 0xD9F000
	058 Move X21, [X21+120]
	059 Move W19, W31
	060 Move W8, W23
	061 ShiftRight W8, 8
	062 And W8, W8, 255
	063 Move W27, 33
	064 Move [X31+20], W8
	065 Move X0, [X21]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 And W8, W28, 0xFFFF
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Subtract W9, W8, 9
	073 NotImplemented "Instruction CSET not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction CSET not yet implemented."
	076 Move TEMP, X23
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {89}
	080 And W8, W8, W9
	081 Move TEMP, X8
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfEqual {89}
	085 And W8, W19, W27
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move W8, [X22+188]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 And W20, W19, 1
	090 Move TEMP, X23
	091 And TEMP, TEMP, 4
	092 Compare TEMP, 4
	093 JumpIfNotEqual {128}
	094 Compare W20, 0
	095 JumpIfNotEqual {128}
	096 Move X0, [X21]
	097 Move X29, [X22+40]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X0, X26
	103 Move X1, X24
	104 Move X2, X29
	105 Call Number.MatchChars, X0, X1, X2
	106 Move X29, X0
	107 Compare X0, 0
	108 JumpIfNotEqual {126}
	109 Move X0, [X21]
	110 Move X29, [X22+48]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Move X0, X26
	116 Move X1, X24
	117 Move X2, X29
	118 Call Number.MatchChars, X0, X1, X2
	119 Compare X0, 0
	120 JumpIfEqual {128}
	121 Move X29, X0
	122 Move X0, [X31+40]
	123 Move W1, 1
	124 Move X2, X31
	125 Call NumberBuffer.set_sign, X0, X1
	126 Or W19, W19, 1
	127 Subtract X26, X29, 2
	128 Move TEMP, X23
	129 And TEMP, TEMP, 16
	130 Compare TEMP, 16
	131 JumpIfNotEqual {141}
	132 And W8, W28, 0xFFFF
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Compare W20, 0
	135 JumpIfNotEqual {141}
	136 Move X0, [X31+40]
	137 Move W1, 1
	138 Move X2, X31
	139 Or W19, W19, 3
	140 Call NumberBuffer.set_sign, X0, X1
	141 Compare X25, 0
	142 JumpIfEqual {161}
	143 Move X0, [X21]
	144 Move W8, [X0+224]
	145 Compare W8, 0
	146 JumpIfNotEqual {148}
	147 Call 0x1C17DFC
	148 Move X0, X26
	149 Move X1, X24
	150 Move X2, X25
	151 Call Number.MatchChars, X0, X1, X2
	152 Compare X0, 0
	153 JumpIfEqual {161}
	154 Move X25, X31
	155 Or W19, W19, 32
	156 Subtract X26, X0, 2
	157 Add X26, X26, 2
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move W28, W31
	160 NotImplemented "Instruction LDRH not yet implemented."
	161 Move W20, W31
	162 Move W27, W31
	163 Move X0, [X21]
	164 Move W8, [X0+224]
	165 Compare W8, 0
	166 JumpIfNotEqual {168}
	167 Call 0x1C17DFC
	168 And W8, W28, 0xFFFF
	169 Subtract W9, W8, 48
	170 NotImplemented "Instruction CMP not yet implemented."
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move TEMP, X19
	173 And TEMP, TEMP, 8
	174 Compare TEMP, 8
	175 JumpIfEqual {206}
	176 Or W8, W19, 4
	177 Move TEMP, X19
	178 And TEMP, TEMP, 16
	179 Compare TEMP, 16
	180 JumpIfNotEqual {185}
	181 Move X10, [X31+40]
	182 Move W9, [X10+4]
	183 Subtract W9, W9, 1
	184 Move [X10+4], W9
	185 Move W19, W8
	186 Move TEMP, X23
	187 And TEMP, TEMP, 32
	188 Compare TEMP, 32
	189 JumpIfNotEqual {251}
	190 Move TEMP, X19
	191 And TEMP, TEMP, 16
	192 Compare TEMP, 16
	193 JumpIfEqual {251}
	194 Move X0, [X21]
	195 Move W8, [X0+224]
	196 Compare W8, 0
	197 JumpIfNotEqual {199}
	198 Call 0x1C17DFC
	199 Move X2, [X31+24]
	200 Move X0, X26
	201 Move X1, X24
	202 Call Number.MatchChars, X0, X1, X2
	203 Compare X0, 0
	204 JumpIfEqual {231}
	205 Or W19, W19, 16
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move X0, [X31+40]
	208 And W8, W28, 0xFFFF
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X1, X31
	211 Move W29, W20
	212 NotImplemented "Instruction CSET not yet implemented."
	213 Call NumberBuffer.get_digits, X0
	214 Move W8, [X31+16]
	215 Add W9, W27, 1
	216 NotImplemented "Instruction STRH not yet implemented."
	217 Or W8, W20, W8
	218 Move W20, W29
	219 And W31, W8, 1
	220 NotImplemented "Instruction CSINC not yet implemented."
	221 Move W27, W9
	222 Move TEMP, X19
	223 And TEMP, TEMP, 16
	224 Compare TEMP, 16
	225 JumpIfEqual {230}
	226 Move X9, [X31+40]
	227 Move W8, [X9+4]
	228 Add W8, W8, 1
	229 Move [X9+4], W8
	230 Or W19, W19, 12
	231 Move W9, [X31+20]
	232 And W8, W19, 32
	233 Xor W9, W9, 1
	234 Or W8, W9, W8
	235 Move TEMP, X8
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfEqual {251}
	239 Move X0, [X21]
	240 Move X29, [X22+56]
	241 Move W8, [X0+224]
	242 Compare W8, 0
	243 JumpIfNotEqual {245}
	244 Call 0x1C17DFC
	245 Move X0, X26
	246 Move X1, X24
	247 Move X2, X29
	248 Call Number.MatchChars, X0, X1, X2
	249 Compare X0, 0
	250 JumpIfNotEqual {205}
	251 Move TEMP, X19
	252 And TEMP, TEMP, 16
	253 Compare TEMP, 16
	254 JumpIfEqual {299}
	255 Move TEMP, X23
	256 And TEMP, TEMP, 64
	257 Compare TEMP, 64
	258 JumpIfNotEqual {299}
	259 Move TEMP, X19
	260 And TEMP, TEMP, 4
	261 Compare TEMP, 4
	262 JumpIfNotEqual {299}
	263 Move X0, [X21]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X2, [X31+32]
	269 Move X0, X26
	270 Move X1, X24
	271 Call Number.MatchChars, X0, X1, X2
	272 Compare X0, 0
	273 JumpIfNotEqual {294}
	274 Move W9, [X31+20]
	275 And W8, W19, 32
	276 Xor W9, W9, 1
	277 Or W8, W9, W8
	278 Move TEMP, X8
	279 And TEMP, TEMP, 1
	280 Compare TEMP, 1
	281 JumpIfEqual {299}
	282 Move X0, [X21]
	283 Move X29, [X22+64]
	284 Move W8, [X0+224]
	285 Compare W8, 0
	286 JumpIfNotEqual {288}
	287 Call 0x1C17DFC
	288 Move X0, X26
	289 Move X1, X24
	290 Move X2, X29
	291 Call Number.MatchChars, X0, X1, X2
	292 Compare X0, 0
	293 JumpIfEqual {299}
	294 Subtract X26, X0, 2
	295 Add X26, X26, 2
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Move W28, W31
	298 NotImplemented "Instruction LDRH not yet implemented."
	299 Move X0, [X31+40]
	300 Move X1, X31
	301 Move [X0], W20
	302 Call NumberBuffer.get_digits, X0
	303 Move X8, X0
	304 NotImplemented "Instruction STRH not yet implemented."
	305 Move TEMP, X19
	306 And TEMP, TEMP, 4
	307 Compare TEMP, 4
	308 JumpIfNotEqual {515}
	309 Or W8, W28, 32
	310 And W8, W8, 0xFFFF
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Move TEMP, X23
	313 And TEMP, TEMP, 128
	314 Compare TEMP, 128
	315 JumpIfNotEqual {404}
	316 Add X29, X26, 2
	317 NotImplemented "Instruction CMP not yet implemented."
	318 NotImplemented "Instruction LDRH not yet implemented."
	319 Move W28, W31
	320 Move X0, [X21]
	321 Move X27, [X22+40]
	322 Move W8, [X0+224]
	323 Compare W8, 0
	324 JumpIfNotEqual {326}
	325 Call 0x1C17DFC
	326 Move X0, X29
	327 Move X1, X24
	328 Move X2, X27
	329 Call Number.MatchChars, X0, X1, X2
	330 Compare X0, 0
	331 JumpIfEqual {335}
	332 Move X27, X0
	333 NotImplemented "Instruction CMP not yet implemented."
	334 NotImplemented "Instruction LDRH not yet implemented."
	335 Move X0, [X21]
	336 Move X27, [X22+48]
	337 Move W8, [X0+224]
	338 Compare W8, 0
	339 JumpIfNotEqual {341}
	340 Call 0x1C17DFC
	341 Move X0, X29
	342 Move X1, X24
	343 Move X2, X27
	344 Call Number.MatchChars, X0, X1, X2
	345 Compare X0, 0
	346 JumpIfEqual {352}
	347 Move X27, X0
	348 NotImplemented "Instruction CMP not yet implemented."
	349 NotImplemented "Instruction LDRH not yet implemented."
	350 Move W29, W31
	351 Move W28, W31
	352 Move W8, W31
	353 Move X27, X29
	354 Move W29, W31
	355 Move W28, W31
	356 Move W29, 1
	357 Move X0, [X21]
	358 Move W8, [X0+224]
	359 Compare W8, 0
	360 JumpIfNotEqual {362}
	361 Call 0x1C17DFC
	362 Subtract W8, W28, 48
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Move W20, W31
	365 Move W26, 10
	366 Multiply W8, W20, W26
	367 Add X27, X27, 2
	368 Add W8, W8, W28
	369 NotImplemented "Instruction CMP not yet implemented."
	370 Subtract W20, W8, 48
	371 NotImplemented "Instruction LDRH not yet implemented."
	372 Move W28, W31
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Move X0, [X21]
	375 Move W8, [X0+224]
	376 Compare W8, 0
	377 JumpIfNotEqual {379}
	378 Call 0x1C17DFC
	379 And W8, W28, 0xFFFF
	380 Subtract W8, W8, 48
	381 NotImplemented "Instruction CMP not yet implemented."
	382 Add X27, X27, 2
	383 NotImplemented "Instruction CMP not yet implemented."
	384 Move W28, W31
	385 NotImplemented "Instruction LDRH not yet implemented."
	386 Move W20, 0x270F
	387 Move X0, [X21]
	388 Move W8, [X0+224]
	389 Compare W8, 0
	390 JumpIfNotEqual {392}
	391 Call 0x1C17DFC
	392 And W8, W28, 0xFFFF
	393 Subtract W8, W8, 48
	394 NotImplemented "Instruction CMP not yet implemented."
	395 Move X10, [X31+40]
	396 NotImplemented "Instruction CMP not yet implemented."
	397 NotImplemented "Instruction CSNEG not yet implemented."
	398 Move W8, [X10+4]
	399 Add W8, W8, W9
	400 Move [X10+4], W8
	401 NotImplemented "Instruction CMP not yet implemented."
	402 NotImplemented "Instruction LDRH not yet implemented."
	403 Move W28, W31
	404 Move X27, X26
	405 Move X26, X27
	406 Move X0, [X21]
	407 Move W8, [X0+224]
	408 Compare W8, 0
	409 JumpIfNotEqual {411}
	410 Call 0x1C17DFC
	411 And W8, W28, 0xFFFF
	412 NotImplemented "Instruction CMP not yet implemented."
	413 Subtract W9, W8, 9
	414 NotImplemented "Instruction CSET not yet implemented."
	415 NotImplemented "Instruction CMP not yet implemented."
	416 NotImplemented "Instruction CSET not yet implemented."
	417 Move TEMP, X23
	418 And TEMP, TEMP, 2
	419 Compare TEMP, 2
	420 JumpIfNotEqual {424}
	421 And W8, W8, W9
	422 Compare W8, 0
	423 JumpIfEqual {486}
	424 Move TEMP, X23
	425 And TEMP, TEMP, 8
	426 Compare TEMP, 8
	427 JumpIfNotEqual {464}
	428 Move TEMP, X19
	429 And TEMP, TEMP, 1
	430 Compare TEMP, 1
	431 JumpIfEqual {464}
	432 Move X0, [X21]
	433 Move X27, [X22+40]
	434 Move W8, [X0+224]
	435 Compare W8, 0
	436 JumpIfNotEqual {438}
	437 Call 0x1C17DFC
	438 Move X0, X26
	439 Move X1, X24
	440 Move X2, X27
	441 Call Number.MatchChars, X0, X1, X2
	442 Move X27, X0
	443 Compare X0, 0
	444 JumpIfNotEqual {462}
	445 Move X0, [X21]
	446 Move X27, [X22+48]
	447 Move W8, [X0+224]
	448 Compare W8, 0
	449 JumpIfNotEqual {451}
	450 Call 0x1C17DFC
	451 Move X0, X26
	452 Move X1, X24
	453 Move X2, X27
	454 Call Number.MatchChars, X0, X1, X2
	455 Compare X0, 0
	456 JumpIfEqual {464}
	457 Move X27, X0
	458 Move X0, [X31+40]
	459 Move W1, 1
	460 Move X2, X31
	461 Call NumberBuffer.set_sign, X0, X1
	462 Or W19, W19, 1
	463 Subtract X26, X27, 2
	464 And W8, W28, 0xFFFF
	465 NotImplemented "Instruction CMP not yet implemented."
	466 Move TEMP, X19
	467 And TEMP, TEMP, 2
	468 Compare TEMP, 2
	469 JumpIfNotEqual {471}
	470 And W19, W19, 0xFFFFFFFD
	471 Compare X25, 0
	472 JumpIfEqual {490}
	473 Move X0, [X21]
	474 Move W8, [X0+224]
	475 Compare W8, 0
	476 JumpIfNotEqual {478}
	477 Call 0x1C17DFC
	478 Move X0, X26
	479 Move X1, X24
	480 Move X2, X25
	481 Call Number.MatchChars, X0, X1, X2
	482 Compare X0, 0
	483 JumpIfEqual {490}
	484 Move X25, X31
	485 Subtract X26, X0, 2
	486 Add X26, X26, 2
	487 NotImplemented "Instruction CMP not yet implemented."
	488 Move W28, W31
	489 NotImplemented "Instruction LDRH not yet implemented."
	490 Move TEMP, X19
	491 And TEMP, TEMP, 2
	492 Compare TEMP, 2
	493 JumpIfEqual {515}
	494 Move X20, [X31+8]
	495 Move TEMP, X19
	496 And TEMP, TEMP, 8
	497 Compare TEMP, 8
	498 JumpIfEqual {514}
	499 Move W8, [X31+16]
	500 Move TEMP, X8
	501 And TEMP, TEMP, 1
	502 Compare TEMP, 1
	503 JumpIfEqual {506}
	504 Move X8, [X31+40]
	505 Move [X8+4], W31
	506 Move TEMP, X19
	507 And TEMP, TEMP, 16
	508 Compare TEMP, 16
	509 JumpIfEqual {514}
	510 Move X0, [X31+40]
	511 Move W1, W31
	512 Move X2, X31
	513 Call NumberBuffer.set_sign, X0, X1
	514 Move W0, 1
	515 Move X20, [X31+8]
	516 Move W0, W31
	517 Move [X20], X26
	518 Move X20, [X31+128]
	519 Move X19, [X31+136]
	520 Move X22, [X31+112]
	521 Move X21, [X31+120]
	522 Move X24, [X31+96]
	523 Move X23, [X31+104]
	524 Move X26, [X31+80]
	525 Move X25, [X31+88]
	526 Move X28, [X31+64]
	527 Move X27, [X31+72]
	528 Move X29, [X31+48]
	529 Move X30, [X31+56]
	530 Add X31, X31, 144
	531 Return X0
	532 Call 0x1C17F20

Method: System.Boolean TryParseInt32(System.ReadOnlySpan`1<System.Char> value, System.Globalization.NumberStyles styles, System.Globalization.NumberFormatInfo info, out System.Int32 result)

Disassembly:
	0x0337CEC4 MOV X19, X3
	0x0337CEC8 MOV X21, X2
	0x0337CECC MOV X23, X1
	0x0337CED0 MOV X25, X0
	0x0337CED4 TBNZ X8, 0x0, 0x337CEEC
	0x0337CED8 ADRP X0, 0xDAC000
	0x0337CEDC LDR X0, [X0 + 0x78]
	0x0337CEE0 BL 0x1C16CF4
	0x0337CEE4 MOVZ W8, 0x1
	0x0337CEE8 STRB W8, [X27 + 0xF76]
	0x0337CEEC LDR X0, [X26]
	0x0337CEF0 LDR X25, [X25]
	0x0337CEF4 LDR W8, [X0 + 0xE0]
	0x0337CEF8 CBNZ W8, 0x337CF00
	0x0337CEFC BL 0x1C16DFC
	0x0337CF00 MOV X0, X25
	0x0337CF04 MOV X1, X24
	0x0337CF08 MOV X2, X22
	0x0337CF0C MOV X3, X20
	0x0337CF10 MOV X4, X23
	0x0337CF14 MOV X5, X21
	0x0337CF18 MOV X6, X19
	0x0337CF1C LDP X20, X19, [X31 + 0x40]
	0x0337CF20 LDP X22, X21, [X31 + 0x30]
	0x0337CF24 LDP X24, X23, [X31 + 0x20]
	0x0337CF28 LDP X26, X25, [X31 + 0x10]
	0x0337CF2C LDP X30, X27, [X31], #0x50
	0x0337CF30 B 0x337CF34
	0x0337CF34 STP X29, X30, [X31 - 0x60]!
	0x0337CF38 STP X28, X27, [X31 + 0x10]
	0x0337CF3C STP X26, X25, [X31 + 0x20]
	0x0337CF40 STP X24, X23, [X31 + 0x30]
	0x0337CF44 STP X22, X21, [X31 + 0x40]
	0x0337CF48 STP X20, X19, [X31 + 0x50]
	0x0337CF4C ADD X29, X31, 0x0
	0x0337CF50 SUB X31, X31, 0xE0
	0x0337CF54 STUR X6, [X29 - 0xD8]
	0x0337CF58 MRS X28, 0xC000
	0x0337CF5C LDR X8, [X28 + 0x28]
	0x0337CF60 ADRP X26, 0x1060000
	0x0337CF64 ADRP X27, 0xDAC000
	0x0337CF68 MOV X20, X5
	0x0337CF6C STUR X8, [X29 - 0x18]
	0x0337CF70 LDRB W8, [X26 + 0xFC3]
	0x0337CF74 LDR X27, [X27 + 0x78]
	0x0337CF78 MOV X21, X4
	0x0337CF7C MOV X25, X3
	0x0337CF80 MOV X23, X2
	0x0337CF84 MOV X24, X1
	0x0337CF88 MOV X22, X0
	0x0337CF8C SUB X19, X29, 0xA0
	0x0337CF90 TBNZ X8, 0x0, 0x337CFC0
	0x0337CF94 ADRP X0, 0xDAC000
	0x0337CF98 LDR X0, [X0 + 0x78]
	0x0337CF9C BL 0x1C16CF4
	0x0337CFA0 ADRP X0, 0xDA6000
	0x0337CFA4 LDR X0, [X0 + 0x28]
	0x0337CFA8 BL 0x1C16CF4
	0x0337CFAC ADRP X0, 0xDA6000
	0x0337CFB0 LDR X0, [X0 + 0x4E8]
	0x0337CFB4 BL 0x1C16CF4
	0x0337CFB8 MOVZ W8, 0x1
	0x0337CFBC STRB W8, [X26 + 0xFC3]
	0x0337CFC0 LDR X0, [X27]
	0x0337CFC4 MOVI V0.2D, 0x0
	0x0337CFC8 STUR W31, [X29 - 0xA4]
	0x0337CFCC STUR V0, [X19 + 0x6A]
	0x0337CFD0 STP V0, V0, [X29 - 0x50]
	0x0337CFD4 STP V0, V0, [X29 - 0x70]
	0x0337CFD8 STP V0, V0, [X29 - 0x90]
	0x0337CFDC STUR V0, [X29 - 0xA0]
	0x0337CFE0 STP V0, V0, [X29 - 0xD0]
	0x0337CFE4 LDR W8, [X0 + 0xE0]
	0x0337CFE8 TBNZ X22, 0x0, 0x337D004
	0x0337CFEC CBNZ W23, 0x337D004
	0x0337CFF0 CBNZ W8, 0x337CFF8
	0x0337CFF4 BL 0x1C16DFC
	0x0337CFF8 MOVN W1, 0x0
	0x0337CFFC MOV X0, X22
	0x0337D000 B 0x337D0B8
	0x0337D004 CBNZ W8, 0x337D00C
	0x0337D008 BL 0x1C16DFC
	0x0337D00C SUB X2, X29, 0xA4
	0x0337D010 MOV X0, X24
	0x0337D014 MOV X1, X23
	0x0337D018 BL 0x338071C
	0x0337D01C MOV W26, W0
	0x0337D020 MOV X0, X25
	0x0337D024 MOV X1, X31
	0x0337D028 BL 0x333ACEC
	0x0337D02C LDUR W25, [X29 - 0xA4]
	0x0337D030 MOVZ W8, 0xFFDF
	0x0337D034 AND W10, W26, W8, 0x0
	0x0337D038 CMP W10, 0x47
	0x0337D03C CSET W8, EQ
	0x0337D040 CMP W25, 0x1
	0x0337D044 CSET W9, LT

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+160], X30
	003 Move [X31+168], X25
	004 Move [X31+176], X24
	005 Move [X31+184], X23
	006 Move [X31+192], X22
	007 Move [X31+200], X21
	008 Move [X31+208], X20
	009 Move [X31+216], X19
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X24+40]
	012 Move X25, 0x1061000
	013 Move X19, X4
	014 Move X23, X3
	015 Move [X31+152], X8
	016 Move W8, [X25+4070]
	017 Move W20, W2
	018 Move X21, X1
	019 Move X22, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0xDAD000
	025 Move X0, [X0+120]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X25+4070], W8
	029 Move X25, 0xDAD000
	030 Move X25, [X25+120]
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move [X31+122], V0
	034 Move [X31+96], V0
	035 Move [X31+104], V0
	036 Move [X31+64], V0
	037 Move [X31+72], V0
	038 Move [X31+32], V0
	039 Move [X31+40], V0
	040 Move [X31+1], V0
	041 Move X0, [X25]
	042 Move [X31+12], W31
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Add X5, X31, 12
	048 Move X0, X22
	049 Move X1, X21
	050 Move W2, W20
	051 Move X3, X23
	052 Move X4, X19
	053 Call Number.TryParseInt32IntegerStyle, X0, X1, X2, X3, X4
	054 Move [X19], W31
	055 Move TEMP, X20
	056 And TEMP, TEMP, 512
	057 Compare TEMP, 512
	058 JumpIfEqual {94}
	059 Move X0, [X25]
	060 NotImplemented "Instruction MOVI not yet implemented."
	061 Move [X31+122], V0
	062 Move [X31+96], V0
	063 Move [X31+104], V0
	064 Move [X31+64], V0
	065 Move [X31+72], V0
	066 Move [X31+32], V0
	067 Move [X31+40], V0
	068 Move [X31+1], V0
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Add X3, X31, 16
	074 Move X0, X22
	075 Move X1, X21
	076 Move W2, W20
	077 Move X4, X23
	078 Move W5, W31
	079 Call Number.TryStringToNumber, X0, X1, X2, X3, X4
	080 Move W8, W0
	081 Move W0, W31
	082 Move TEMP, X8
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {106}
	086 Move X0, [X25]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Add X0, X31, 16
	092 Move X1, X19
	093 Call Number.NumberToInt32, X0, X1
	094 Move X0, [X25]
	095 Move [X31+12], W31
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Add X5, X31, 12
	101 Move X0, X22
	102 Move X1, X21
	103 Move W2, W20
	104 Move X4, X19
	105 Call Number.TryParseUInt32HexNumberStyle, X0, X1, X2, X3, X4
	106 Move X8, [X24+40]
	107 Move X9, [X31+152]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X20, [X31+208]
	110 Move X19, [X31+216]
	111 Move X22, [X31+192]
	112 Move X21, [X31+200]
	113 Move X24, [X31+176]
	114 Move X23, [X31+184]
	115 Move X30, [X31+160]
	116 Move X25, [X31+168]
	117 And W0, W0, 1
	118 Add X31, X31, 224
	119 Return X0
	120 Call 0x3EB2B20

Method: System.Boolean TryParseInt32IntegerStyle(System.ReadOnlySpan`1<System.Char> value, System.Globalization.NumberStyles styles, System.Globalization.NumberFormatInfo info, out System.Int32 result, ref System.Boolean failureIsOverflow)

Disassembly:
	0x0338851C B.NE 0x33884E8
	0x03388520 B 0x3388570
	0x03388524 CMP W20, 0x20
	0x03388528 B.EQ 0x3388510
	0x0338852C CMP W24, W23
	0x03388530 B.CC 0x3388540
	0x03388534 B 0x3388570
	0x03388538 CMP W25, 0x20
	0x0338853C B.EQ 0x33884D4
	0x03388540 LDR X0, [X26]
	0x03388544 LDR X9, [X31 + 0x18]
	0x03388548 MOV W22, W23
	0x0338854C LDR W8, [X0 + 0xE0]
	0x03388550 BFM X22, X9, 0x20, 0x1F
	0x03388554 CBNZ W8, 0x338855C
	0x03388558 BL 0x1C16DFC
	0x0338855C MOV X0, X21
	0x03388560 MOV X1, X22
	0x03388564 MOV W2, W24
	0x03388568 BL 0x338A158
	0x0338856C TBZ X0, 0x0, 0x33885A0
	0x03388570 AND W29, W29, 0x1
	0x03388574 CBZ W29, 0x33885DC
	0x03388578 MOVZ W9, 0x1
	0x0338857C MOV X8, X31
	0x03388580 MOV W0, W31
	0x03388584 STRB W9, [X27]
	0x03388588 B 0x33885A8
	0x0338858C ADD W24, W24, 0x1
	0x03388590 CMP W24, W23
	0x03388594 B.CS 0x33885A0
	0x03388598 LDRH W28, [X21, W24, SXTW]
	0x0338859C B 0x33880B4
	0x033885A0 MOV X8, X31
	0x033885A4 MOV W0, W31
	0x033885A8 STR X8, [X19]
	0x033885AC LDP X20, X19, [X31 + 0x70]
	0x033885B0 LDP X22, X21, [X31 + 0x60]
	0x033885B4 LDP X24, X23, [X31 + 0x50]
	0x033885B8 LDP X26, X25, [X31 + 0x40]
	0x033885BC LDP X28, X27, [X31 + 0x30]
	0x033885C0 LDP X29, X30, [X31 + 0x20]
	0x033885C4 ADD X31, X31, 0x80
	0x033885C8 RET
	0x033885CC MOV W29, W31
	0x033885D0 B 0x33884A8
	0x033885D4 LDR X27, [X31 + 0x8]
	0x033885D8 CBNZ W29, 0x3388578
	0x033885DC LDR X8, [X31 + 0x10]
	0x033885E0 MOVZ W0, 0x1
	0x033885E4 SXTW X8, W8
	0x033885E8 MUL X8, X28, X8
	0x033885EC B 0x33885A8
	0x033885F0 BL 0x1C16F28
	0x033885F4 BL 0x1C16F20
	0x033885F8 STR X30, [X31 - 0x60]!
	0x033885FC STP X28, X27, [X31 + 0x10]
	0x03388600 STP X26, X25, [X31 + 0x20]
	0x03388604 STP X24, X23, [X31 + 0x30]
	0x03388608 STP X22, X21, [X31 + 0x40]
	0x0338860C STP X20, X19, [X31 + 0x50]
	0x03388610 ADRP X24, 0x1054000
	0x03388614 LDRB W8, [X24 + 0xFEF]
	0x03388618 MOV X20, X5
	0x0338861C MOV X19, X4
	0x03388620 MOV W23, W2
	0x03388624 MOV X21, X1
	0x03388628 MOV X22, X0
	0x0338862C TBNZ X8, 0x0, 0x3388650
	0x03388630 ADRP X0, 0xDA0000
	0x03388634 LDR X0, [X0 + 0x78]
	0x03388638 BL 0x1C16CF4
	0x0338863C ADRP X0, 0xD9A000
	0x03388640 LDR X0, [X0 + 0x28]
	0x03388644 BL 0x1C16CF4
	0x03388648 MOVZ W8, 0x1
	0x0338864C STRB W8, [X24 + 0xFEF]
	0x03388650 CBZ W21, 0x3388850
	0x03388654 LDRH W28, [X22]
	0x03388658 TBNZ X23, 0x0, 0x33886E8
	0x0338865C MOV W24, W31
	0x03388660 ADRP X25, 0xDA0000
	0x03388664 LDR X25, [X25 + 0x78]
	0x03388668 LDR X0, [X25]
	0x0338866C LDR W8, [X0 + 0xE0]
	0x03388670 CBNZ W8, 0x338867C
	0x03388674 BL 0x1C16DFC
	0x03388678 LDR X0, [X25]
	0x0338867C LDR X8, [X0 + 0xB8]
	0x03388680 LDR X8, [X8 + 0x28]
	0x03388684 CBZ X8, 0x3388940
	0x03388688 LDR W9, [X8 + 0x18]
	0x0338868C CMP W28, W9
	0x03388690 B.CS 0x3388850
	0x03388694 ADD X10, X8, W28, 0x2, UXTW
	0x03388698 LDR W10, [X10 + 0x20]
	0x0338869C CMP W10, 0xFF
	0x033886A0 B.EQ 0x3388850
	0x033886A4 CMP W28, 0x30
	0x033886A8 B.NE 0x3388760
	0x033886AC ADD W24, W24, 0x1
	0x033886B0 CMP W24, W21
	0x033886B4 B.CS 0x338887C
	0x033886B8 LDRH W28, [X22, W24, SXTW]
	0x033886BC CMP X28, 0x30
	0x033886C0 B.EQ 0x33886AC
	0x033886C4 CMP W28, W9
	0x033886C8 B.CS 0x33886DC
	0x033886CC ADD X10, X8, X28, 0x2, LSL
	0x033886D0 LDR W10, [X10 + 0x20]
	0x033886D4 CMP W10, 0xFF
	0x033886D8 B.NE 0x3388760
	0x033886DC MOV X26, X31
	0x033886E0 MOV W27, W31
	0x033886E4 B 0x3388834
	0x033886E8 ADRP X25, 0xDA0000
	0x033886EC LDR X25, [X25 + 0x78]
	0x033886F0 LDR X0, [X25]
	0x033886F4 LDR W8, [X0 + 0xE0]
	0x033886F8 CBNZ W8, 0x3388700
	0x033886FC BL 0x1C16DFC
	0x03388700 SUB W8, W28, 0x9
	0x03388704 CMP W8, 0x5
	0x03388708 B.CS 0x3388754
	0x0338870C CMP W21, 0x2
	0x03388710 B.CC 0x3388850
	0x03388714 MOVZ W24, 0x1
	0x03388718 LDR X0, [X25]
	0x0338871C LDRH W28, [X22, W24, SXTW]
	0x03388720 LDR W8, [X0 + 0xE0]
	0x03388724 CBNZ W8, 0x338872C
	0x03388728 BL 0x1C16DFC
	0x0338872C SUB W8, W28, 0x9
	0x03388730 CMP W8, 0x5
	0x03388734 B.CS 0x3388748
	0x03388738 ADD W24, W24, 0x1
	0x0338873C CMP W21, W24
	0x03388740 B.NE 0x3388718
	0x03388744 B 0x3388850
	0x03388748 CMP W28, 0x20
	0x0338874C B.EQ 0x3388738
	0x03388750 B 0x3388660
	0x03388754 CMP W28, 0x20
	0x03388758 B.NE 0x338865C
	0x0338875C B 0x338870C
	0x03388760 MOV W10, W24
	0x03388764 CMP W28, W9
	0x03388768 B.CS 0x3388944
	0x0338876C ADD X11, X8, W28, 0x2, UXTW
	0x03388770 LDRSW X26, [X11 + 0x20]
	0x03388774 ADD W12, W10, 0x1
	0x03388778 CMP W12, W21
	0x0338877C CSET W12, CC
	0x03388780 ADD W24, W10, 0x10
	0x03388784 MOVN W11, 0xE
	0x03388788 TBZ X12, 0x0, 0x33888E4
	0x0338878C ADD W12, W10, W11
	0x03388790 ADD W12, W12, 0x10
	0x03388794 LDRH W28, [X22, W12, SXTW]
	0x03388798 CMP W28, W9
	0x0338879C B.CS 0x3388828
	0x033887A0 ADD X12, X8, X28, 0x2, LSL
	0x033887A4 LDRSW X13, [X12 + 0x20]
	0x033887A8 CMP W13, 0xFF
	0x033887AC B.EQ 0x3388828
	0x033887B0 ADD W12, W10, W11
	0x033887B4 ADD W14, W12, 0x11
	0x033887B8 CMP W14, W21
	0x033887BC CSET W12, CC
	0x033887C0 ADDS W11, W11, 0x1
	0x033887C4 ADD X26, X13, X26, 0x4, LSL
	0x033887C8 B.CC 0x3388788
	0x033887CC CMP W14, W21
	0x033887D0 B.CS 0x33888E4
	0x033887D4 LDRH W28, [X22, W24, SXTW]
	0x033887D8 CMP W28, W9
	0x033887DC B.CS 0x33886E0
	0x033887E0 ADD X11, X8, X28, 0x2, LSL
	0x033887E4 LDR W11, [X11 + 0x20]
	0x033887E8 CMP W11, 0xFF
	0x033887EC B.EQ 0x33886E0
	0x033887F0 ADD W24, W10, 0x11
	0x033887F4 CMP W24, W21
	0x033887F8 B.CS 0x3388924
	0x033887FC LDRH W28, [X22, W24, SXTW]
	0x03388800 CMP W28, W9
	0x03388804 B.CS 0x3388938
	0x03388808 ADD X10, X8, X28, 0x2, LSL
	0x0338880C LDR W10, [X10 + 0x20]
	0x03388810 CMP W10, 0xFF
	0x03388814 B.EQ 0x3388938
	0x03388818 ADD W24, W24, 0x1
	0x0338881C CMP W21, W24
	0x03388820 B.NE 0x33887FC
	0x03388824 B 0x3388924
	0x03388828 ADD W8, W10, W11
	0x0338882C MOV W27, W31
	0x03388830 ADD W24, W8, 0x10
	0x03388834 LDR W8, [X0 + 0xE0]
	0x03388838 CBNZ W8, 0x3388840
	0x0338883C BL 0x1C16DFC
	0x03388840 SUB W8, W28, 0x9
	0x03388844 CMP W8, 0x5
	0x03388848 B.CS 0x33888EC
	0x0338884C TBNZ X23, 0x1, 0x3388884
	0x03388850 MOV X26, X31
	0x03388854 MOV W0, W31
	0x03388858 STR X26, [X19]
	0x0338885C LDP X20, X19, [X31 + 0x50]
	0x03388860 LDP X22, X21, [X31 + 0x40]
	0x03388864 LDP X24, X23, [X31 + 0x30]
	0x03388868 LDP X26, X25, [X31 + 0x20]
	0x0338886C LDP X28, X27, [X31 + 0x10]
	0x03388870 AND W0, W0, 0x1
	0x03388874 LDR X30, [X31], #0x60
	0x03388878 RET
	0x0338887C MOV X26, X31
	0x03388880 B 0x33888E4
	0x03388884 ADD W24, W24, 0x1
	0x03388888 CMP W24, W21
	0x0338888C B.GE 0x33888D8
	0x03388890 ADD X23, X22, W24, 0x1, SXTW
	0x03388894 CMP W24, W21
	0x03388898 B.CS 0x3388944
	0x0338889C LDR X0, [X25]
	0x033888A0 LDRH W28, [X23]
	0x033888A4 LDR W8, [X0 + 0xE0]
	0x033888A8 CBNZ W8, 0x33888B0
	0x033888AC BL 0x1C16DFC
	0x033888B0 SUB W8, W28, 0x9
	0x033888B4 CMP W8, 0x5
	0x033888B8 B.CS 0x33888D0
	0x033888BC ADD W24, W24, 0x1
	0x033888C0 CMP W21, W24
	0x033888C4 ADD X23, X23, 0x2
	0x033888C8 B.NE 0x3388894
	0x033888CC B 0x33888E0
	0x033888D0 CMP W28, 0x20
	0x033888D4 B.EQ 0x33888BC
	0x033888D8 CMP W24, W21
	0x033888DC B.CC 0x33888F4
	0x033888E0 CBNZ W27, 0x3388924
	0x033888E4 MOVZ W0, 0x1
	0x033888E8 B 0x3388858
	0x033888EC CMP W28, 0x20
	0x033888F0 B.EQ 0x338884C
	0x033888F4 LDR X0, [X25]
	0x033888F8 LDR W8, [X0 + 0xE0]
	0x033888FC CBNZ W8, 0x3388904
	0x03388900 BL 0x1C16DFC
	0x03388904 MOV X0, X22
	0x03388908 MOV X1, X21
	0x0338890C MOV W2, W24
	0x03388910 BL 0x338A158
	0x03388914 ANDS W31, W0, 0x1
	0x03388918 AND W8, W27, W0, 0x0
	0x0338891C CSEL X26, X26, X31, NE
	0x03388920 TBZ X8, 0x0, 0x3388858
	0x03388924 MOVZ W8, 0x1
	0x03388928 MOV X26, X31
	0x0338892C MOV W0, W31
	0x03388930 STRB W8, [X20]
	0x03388934 B 0x3388858
	0x03388938 MOVZ W27, 0x1
	0x0338893C B 0x33886E4
	0x03388940 BL 0x1C16F20
	0x03388944 BL 0x1C16F28
	0x03388948 SUB X31, X31, 0xE0
	0x0338894C STR X30, [X31 + 0xA0]
	0x03388950 STP X24, X23, [X31 + 0xB0]
	0x03388954 STP X22, X21, [X31 + 0xC0]
	0x03388958 STP X20, X19, [X31 + 0xD0]
	0x0338895C MRS X23, 0xC000
	0x03388960 LDR X8, [X23 + 0x28]
	0x03388964 ADRP X24, 0x1054000
	0x03388968 MOV X22, X3
	0x0338896C MOV W19, W2
	0x03388970 STR X8, [X31 + 0x98]
	0x03388974 LDRB W8, [X24 + 0xFE3]
	0x03388978 MOV X20, X1
	0x0338897C MOV X21, X0
	0x03388980 TBNZ X8, 0x0, 0x33889A4
	0x03388984 ADRP X0, 0xDA0000
	0x03388988 LDR X0, [X0 + 0x78]
	0x0338898C BL 0x1C16CF4
	0x03388990 ADRP X0, 0xDA0000
	0x03388994 LDR X0, [X0 + 0x1E0]
	0x03388998 BL 0x1C16CF4
	0x0338899C MOVZ W8, 0x1
	0x033889A0 STRB W8, [X24 + 0xFE3]
	0x033889A4 ADRP X24, 0xDA0000
	0x033889A8 LDR X24, [X24 + 0x78]
	0x033889AC MOVI V0.2D, 0x0
	0x033889B0 CMP W19, 0x7
	0x033889B4 STUR V0, [X31 + 0x7A]
	0x033889B8 STP V0, V0, [X31 + 0x60]
	0x033889BC STP V0, V0, [X31 + 0x40]
	0x033889C0 STP V0, V0, [X31 + 0x20]
	0x033889C4 STR V0, [X31 + 0x1]
	0x033889C8 STR W31, [X31 + 0xC]
	0x033889CC B.HI 0x3388A08
	0x033889D0 LDR X0, [X24]
	0x033889D4 STRB W31, [X31 + 0x8]
	0x033889D8 LDR W8, [X0 + 0xE0]
	0x033889DC CBNZ W8, 0x33889E4
	0x033889E0 BL 0x1C16DFC
	0x033889E4 ADD X4, X31, 0xC
	0x033889E8 ADD X5, X31, 0x8
	0x033889EC MOV X0, X21
	0x033889F0 MOV X1, X20
	0x033889F4 MOV W2, W19
	0x033889F8 MOV X3, X22
	0x033889FC BL 0x3388AF8
	0x03388A00 TBNZ X0, 0x0, 0x3388AA8
	0x03388A04 B 0x3388AD4
	0x03388A08 TBNZ X19, 0x9, 0x3388A78
	0x03388A0C LDR X0, [X24]
	0x03388A10 MOVI V0.2D, 0x0
	0x03388A14 STUR V0, [X31 + 0x7A]
	0x03388A18 STP V0, V0, [X31 + 0x60]
	0x03388A1C STP V0, V0, [X31 + 0x40]
	0x03388A20 STP V0, V0, [X31 + 0x20]
	0x03388A24 STR V0, [X31 + 0x1]
	0x03388A28 LDR W8, [X0 + 0xE0]
	0x03388A2C CBNZ W8, 0x3388A34
	0x03388A30 BL 0x1C16DFC
	0x03388A34 ADD X3, X31, 0x10
	0x03388A38 MOV X0, X21
	0x03388A3C MOV X1, X20
	0x03388A40 MOV W2, W19
	0x03388A44 MOV X4, X22
	0x03388A48 MOV W5, W31
	0x03388A4C BL 0x3387ED4
	0x03388A50 ADD X0, X31, 0x10
	0x03388A54 ADD X1, X31, 0xC
	0x03388A58 BL 0x33873BC
	0x03388A5C TBNZ X0, 0x0, 0x3388AA8
	0x03388A60 LDR X0, [X24]
	0x03388A64 BL 0x19903D0
	0x03388A68 ADRP X8, 0xDA0000
	0x03388A6C LDR X8, [X8 + 0x1E0]
	0x03388A70 MOVZ W0, 0x1
	0x03388A74 B 0x3388AEC
	0x03388A78 LDR X0, [X24]
	0x03388A7C STRB W31, [X31 + 0x8]
	0x03388A80 LDR W8, [X0 + 0xE0]
	0x03388A84 CBNZ W8, 0x3388A8C
	0x03388A88 BL 0x1C16DFC
	0x03388A8C ADD X4, X31, 0xC
	0x03388A90 ADD X5, X31, 0x8
	0x03388A94 MOV X0, X21
	0x03388A98 MOV X1, X20
	0x03388A9C MOV W2, W19
	0x03388AA0 BL 0x3387B84
	0x03388AA4 TBZ X0, 0x0, 0x3388AD4
	0x03388AA8 LDR W0, [X31 + 0xC]
	0x03388AAC LDR X8, [X23 + 0x28]
	0x03388AB0 LDR X9, [X31 + 0x98]
	0x03388AB4 CMP X8, X9
	0x03388AB8 B.NE 0x3388AF4
	0x03388ABC LDP X20, X19, [X31 + 0xD0]
	0x03388AC0 LDP X22, X21, [X31 + 0xC0]
	0x03388AC4 LDP X24, X23, [X31 + 0xB0]
	0x03388AC8 LDR X30, [X31 + 0xA0]
	0x03388ACC ADD X31, X31, 0xE0
	0x03388AD0 RET
	0x03388AD4 LDR X0, [X24]
	0x03388AD8 LDRB W19, [X31 + 0x8]
	0x03388ADC BL 0x19903D0
	0x03388AE0 ADRP X8, 0xDA0000
	0x03388AE4 LDR X8, [X8 + 0x1E0]
	0x03388AE8 MOV W0, W19
	0x03388AEC LDR X1, [X8]
	0x03388AF0 BL 0x3387AFC
	0x03388AF4 BL 0x3EB1B20
	0x03388AF8 SUB X31, X31, 0x80

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X20, 0x1055000
	015 Move W8, [X20+4071]
	016 Move X27, X5
	017 Move X19, X4
	018 Move X25, X3
	019 Move W22, W2
	020 Move X23, X1
	021 Move X21, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {46}
	026 Move X0, 0xDA3000
	027 Move X0, [X0+4056]
	028 Call 0x1C17CF4
	029 Move X0, 0xDA1000
	030 Move X0, [X0+120]
	031 Call 0x1C17CF4
	032 Move X0, 0xDA0000
	033 Move X0, [X0+2024]
	034 Call 0x1C17CF4
	035 Move X0, 0xD9B000
	036 Move X0, [X0+40]
	037 Call 0x1C17CF4
	038 Move X0, 0xD71000
	039 Move X0, [X0+1016]
	040 Call 0x1C17CF4
	041 Move X0, 0xD6D000
	042 Move X0, [X0+680]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X20+4071], W8
	046 Compare W23, 0
	047 JumpIfEqual {385}
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Move TEMP, X22
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {62}
	053 Move W24, W31
	054 Move X20, X23
	055 ShiftRight X20, 32
	056 And X20, X20, 0x7FFFFFFF
	057 Move TEMP, X22
	058 And TEMP, TEMP, 4
	059 Compare TEMP, 4
	060 JumpIfEqual {84}
	061 Move W25, 1
	062 Move X26, 0xDA1000
	063 Move X26, [X26+120]
	064 Move X0, [X26]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Subtract W8, W28, 9
	070 NotImplemented "Instruction CMP not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move W24, 1
	073 Move X0, [X26]
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Subtract W8, W28, 9
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Add W24, W24, 1
	082 NotImplemented "Instruction CMP not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Compare X25, 0
	085 JumpIfEqual {409}
	086 Move X8, 0xD71000
	087 Move X26, [X25+40]
	088 Move X25, [X25+48]
	089 Move X8, [X8+1016]
	090 Move X2, X31
	091 Move X0, X26
	092 Move X1, [X8]
	093 Call String.op_Equality, X0, X1
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {116}
	098 Move X8, 0xD6D000
	099 Move X8, [X8+680]
	100 Move X0, X25
	101 Move X2, X31
	102 Move X1, [X8]
	103 Call String.op_Equality, X0, X1
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {116}
	108 NotImplemented "Instruction CMP not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Add W24, W24, 1
	111 NotImplemented "Instruction CMP not yet implemented."
	112 NotImplemented "Instruction LDRH not yet implemented."
	113 Move TEMP, 0
	114 Not TEMP
	115 Move W25, TEMP
	116 Move X8, 0xDA0000
	117 Move X8, [X8+2024]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X20, [X8]
	120 Move X0, X31
	121 Call ThrowHelper.ThrowArgumentOutOfRangeException
	122 Move X0, [X20+32]
	123 Move W8, [X0+309]
	124 Move TEMP, X8
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {129}
	128 Call 0x1C5D684
	129 Move X0, X26
	130 Move X1, X31
	131 Subtract W23, W23, W24
	132 Add X21, X21, W24
	133 Call String.IsNullOrEmpty, X0
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {174}
	138 Move X20, 0x1052000
	139 Move W8, [X20+1890]
	140 Compare W8, 0
	141 JumpIfNotEqual {147}
	142 Move X0, 0xD93000
	143 Move X0, [X0+656]
	144 Call 0x1C17CF4
	145 Move W8, 1
	146 Move [X20+1890], W8
	147 Compare X26, 0
	148 JumpIfEqual {155}
	149 Move X0, X26
	150 Move X1, X31
	151 Call String.GetRawStringData, X0
	152 Move W3, [X26+16]
	153 Move X2, X0
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X2, X31
	156 Move X3, X31
	157 Move X8, 0xDA3000
	158 Move X8, [X8+4056]
	159 Move X0, X21
	160 Move X1, X23
	161 Move X4, [X8]
	162 Call 0x338D288
	163 Move TEMP, X0
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfNotEqual {174}
	167 Compare X26, 0
	168 JumpIfEqual {409}
	169 Move W24, [X26+16]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move X8, W24
	172 NotImplemented "Instruction LDRH not yet implemented."
	173 Move X20, X31
	174 Move X0, X25
	175 Move X1, X31
	176 Call String.IsNullOrEmpty, X0
	177 Move TEMP, X0
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfEqual {219}
	181 Move X20, 0x1052000
	182 Move W8, [X20+1890]
	183 Compare W8, 0
	184 JumpIfNotEqual {190}
	185 Move X0, 0xD93000
	186 Move X0, [X0+656]
	187 Call 0x1C17CF4
	188 Move W8, 1
	189 Move [X20+1890], W8
	190 Compare X25, 0
	191 JumpIfEqual {197}
	192 Move X0, X25
	193 Move X1, X31
	194 Call String.GetRawStringData, X0
	195 Move W3, [X25+16]
	196 Move X2, X0
	197 Move X2, X31
	198 Move X3, X31
	199 Move X8, 0xDA3000
	200 Move X8, [X8+4056]
	201 Move X0, X21
	202 Move X1, X23
	203 Move X4, [X8]
	204 Call 0x338D288
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfNotEqual {219}
	209 Compare X25, 0
	210 JumpIfEqual {409}
	211 Move W24, [X25+16]
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Move X8, W24
	214 NotImplemented "Instruction LDRH not yet implemented."
	215 Move X20, X31
	216 Move TEMP, 0
	217 Not TEMP
	218 Move W25, TEMP
	219 Move X20, X31
	220 Move W24, W31
	221 Move W25, 1
	222 Move X29, 0xDA1000
	223 Move X29, [X29+120]
	224 Move X0, [X29]
	225 Move W8, [X0+224]
	226 Compare W8, 0
	227 JumpIfNotEqual {229}
	228 Call 0x1C17DFC
	229 Subtract W26, W28, 48
	230 NotImplemented "Instruction CMP not yet implemented."
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Move [X31+28], W25
	233 Add W24, W24, 1
	234 NotImplemented "Instruction CMP not yet implemented."
	235 NotImplemented "Instruction LDRH not yet implemented."
	236 Subtract W26, W25, 48
	237 Move X0, [X29]
	238 Move W8, [X0+224]
	239 Compare W8, 0
	240 JumpIfNotEqual {242}
	241 Call 0x1C17DFC
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Add W8, W24, 1
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Move [X31+8], X20
	246 Move [X31+16], X27
	247 Move W27, W24
	248 Add W24, W24, 9
	249 Move TEMP, 7
	250 Not TEMP
	251 Move W20, TEMP
	252 NotImplemented "Instruction CSET not yet implemented."
	253 Move W28, 10
	254 Move TEMP, X8
	255 And TEMP, TEMP, 1
	256 Compare TEMP, 1
	257 JumpIfNotEqual {405}
	258 Move X0, [X29]
	259 Add W8, W27, W20
	260 Add W8, W8, 9
	261 NotImplemented "Instruction LDRH not yet implemented."
	262 Move W9, [X0+224]
	263 Compare W9, 0
	264 JumpIfNotEqual {266}
	265 Call 0x1C17DFC
	266 Subtract W8, W25, 48
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Add W8, W27, W20
	269 Add W9, W8, 10
	270 NotImplemented "Instruction MADD not yet implemented."
	271 NotImplemented "Instruction CMP not yet implemented."
	272 NotImplemented "Instruction CSET not yet implemented."
	273 Add W20, W20, 1
	274 Subtract W26, W10, 48
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Move X0, [X29]
	277 NotImplemented "Instruction LDRH not yet implemented."
	278 Move W8, [X0+224]
	279 Compare W8, 0
	280 JumpIfNotEqual {282}
	281 Call 0x1C17DFC
	282 Move X20, [X31+8]
	283 Subtract W8, W25, 48
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Move W9, 0xCCCC
	286 NotImplemented "Instruction MOVK not yet implemented."
	287 Move W10, 10
	288 NotImplemented "Instruction CMP not yet implemented."
	289 NotImplemented "Instruction MADD not yet implemented."
	290 Move W10, [X31+28]
	291 Move W9, 1
	292 Move W8, 2
	293 Add W24, W27, 10
	294 Subtract W9, W9, W10
	295 Subtract W8, W8, W10
	296 NotImplemented "Instruction CSET not yet implemented."
	297 NotImplemented "Instruction CMP not yet implemented."
	298 NotImplemented "Instruction CSEL not yet implemented."
	299 Move TEMP, 0x80000000
	300 Not TEMP
	301 Move W9, TEMP
	302 NotImplemented "Instruction SBFM not yet implemented."
	303 Add X8, X8, X9
	304 NotImplemented "Instruction CMP not yet implemented."
	305 NotImplemented "Instruction CSET not yet implemented."
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Or W28, W10, W8
	308 Move X27, [X31+16]
	309 Move X0, [X29]
	310 NotImplemented "Instruction LDRH not yet implemented."
	311 Move W8, [X0+224]
	312 Compare W8, 0
	313 JumpIfNotEqual {315}
	314 Call 0x1C17DFC
	315 Subtract W8, W25, 48
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Add W24, W24, 1
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Move W28, 1
	320 Move W26, W31
	321 Add W8, W27, W20
	322 Move X20, [X31+8]
	323 Move X27, [X31+16]
	324 Move W28, W31
	325 Add W24, W8, 9
	326 Move W26, W31
	327 Add W24, W24, 1
	328 NotImplemented "Instruction CMP not yet implemented."
	329 NotImplemented "Instruction LDRH not yet implemented."
	330 Move X27, [X31+16]
	331 Move W28, W31
	332 Move X0, [X29]
	333 Move W8, [X0+224]
	334 Compare W8, 0
	335 JumpIfNotEqual {337}
	336 Call 0x1C17DFC
	337 Subtract W8, W25, 9
	338 NotImplemented "Instruction CMP not yet implemented."
	339 Move TEMP, X22
	340 And TEMP, TEMP, 2
	341 Compare TEMP, 2
	342 JumpIfNotEqual {385}
	343 Add W24, W24, 1
	344 NotImplemented "Instruction CMP not yet implemented."
	345 Move X25, X20
	346 Add X20, X21, W24
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Move X0, [X29]
	349 NotImplemented "Instruction LDRH not yet implemented."
	350 Move W8, [X0+224]
	351 Compare W8, 0
	352 JumpIfNotEqual {354}
	353 Call 0x1C17DFC
	354 Subtract W8, W22, 9
	355 NotImplemented "Instruction CMP not yet implemented."
	356 Add W24, W24, 1
	357 NotImplemented "Instruction CMP not yet implemented."
	358 Add X20, X20, 2
	359 NotImplemented "Instruction CMP not yet implemented."
	360 Move X20, X25
	361 NotImplemented "Instruction CMP not yet implemented."
	362 NotImplemented "Instruction CMP not yet implemented."
	363 Move X0, [X29]
	364 Move W22, W23
	365 NotImplemented "Instruction BFM not yet implemented."
	366 Move W8, [X0+224]
	367 Compare W8, 0
	368 JumpIfNotEqual {370}
	369 Call 0x1C17DFC
	370 Move X0, X21
	371 Move X1, X22
	372 Move W2, W24
	373 Call Number.TrailingZeros, X0, X1
	374 Move TEMP, X0
	375 And TEMP, TEMP, 1
	376 Compare TEMP, 1
	377 JumpIfNotEqual {385}
	378 And W28, W28, 1
	379 Compare W28, 0
	380 JumpIfEqual {405}
	381 Move W9, 1
	382 Move W8, W31
	383 Move W0, W31
	384 Move [X27], W9
	385 Move W8, W31
	386 Move W0, W31
	387 Move [X19], W8
	388 Move X20, [X31+112]
	389 Move X19, [X31+120]
	390 Move X22, [X31+96]
	391 Move X21, [X31+104]
	392 Move X24, [X31+80]
	393 Move X23, [X31+88]
	394 Move X26, [X31+64]
	395 Move X25, [X31+72]
	396 Move X28, [X31+48]
	397 Move X27, [X31+56]
	398 Move X29, [X31+32]
	399 Move X30, [X31+40]
	400 Add X31, X31, 128
	401 Return X0
	402 Move X27, [X31+16]
	403 Compare W28, 0
	404 JumpIfNotEqual {381}
	405 Move W8, [X31+28]
	406 Move W0, 1
	407 Multiply W8, W26, W8
	408 Call 0x1C17F28
	409 Call 0x1C17F20

Method: System.Boolean TryParseInt64IntegerStyle(System.ReadOnlySpan`1<System.Char> value, System.Globalization.NumberStyles styles, System.Globalization.NumberFormatInfo info, out System.Int64 result, ref System.Boolean failureIsOverflow)

Disassembly:
	0x0338900C B.NE 0x3388FD8
	0x03389010 B 0x3389064
	0x03389014 CMP W22, 0x20
	0x03389018 B.EQ 0x3389000
	0x0338901C MOV X20, X25
	0x03389020 CMP W24, W23
	0x03389024 B.CC 0x3389034
	0x03389028 B 0x3389060
	0x0338902C CMP W25, 0x20
	0x03389030 B.EQ 0x3388FC0
	0x03389034 LDR X0, [X29]
	0x03389038 MOV W22, W23
	0x0338903C BFM X22, X20, 0x20, 0x1F
	0x03389040 LDR W8, [X0 + 0xE0]
	0x03389044 CBNZ W8, 0x338904C
	0x03389048 BL 0x1C16DFC
	0x0338904C MOV X0, X21
	0x03389050 MOV X1, X22
	0x03389054 MOV W2, W24
	0x03389058 BL 0x338A158
	0x0338905C TBZ X0, 0x0, 0x3389084
	0x03389060 AND W28, W28, 0x1
	0x03389064 TBNZ X28, 0x0, 0x33890B0
	0x03389068 LDR W9, [X31 + 0x1C]
	0x0338906C CMP W26, 0x0
	0x03389070 CSET W8, EQ
	0x03389074 ORR W8, W9, W8, 0x0
	0x03389078 TBZ X8, 0x0, 0x33890B0
	0x0338907C MOVZ W0, 0x1
	0x03389080 B 0x338908C
	0x03389084 MOV W26, W31
	0x03389088 MOV W0, W31
	0x0338908C STR W26, [X19]
	0x03389090 LDP X20, X19, [X31 + 0x70]
	0x03389094 LDP X22, X21, [X31 + 0x60]
	0x03389098 LDP X24, X23, [X31 + 0x50]
	0x0338909C LDP X26, X25, [X31 + 0x40]
	0x033890A0 LDP X28, X27, [X31 + 0x30]
	0x033890A4 LDP X29, X30, [X31 + 0x20]
	0x033890A8 ADD X31, X31, 0x80
	0x033890AC RET
	0x033890B0 MOV W26, W31
	0x033890B4 MOV W0, W31
	0x033890B8 MOVZ W8, 0x1
	0x033890BC STRB W8, [X27]
	0x033890C0 B 0x338908C
	0x033890C4 BL 0x1C16F28
	0x033890C8 BL 0x1C16F20
	0x033890CC SUB X31, X31, 0xE0
	0x033890D0 STR X30, [X31 + 0xA0]
	0x033890D4 STP X24, X23, [X31 + 0xB0]
	0x033890D8 STP X22, X21, [X31 + 0xC0]
	0x033890DC STP X20, X19, [X31 + 0xD0]
	0x033890E0 MRS X23, 0xC000
	0x033890E4 LDR X8, [X23 + 0x28]
	0x033890E8 ADRP X24, 0x1053000
	0x033890EC MOV X22, X3
	0x033890F0 MOV W19, W2
	0x033890F4 STR X8, [X31 + 0x98]
	0x033890F8 LDRB W8, [X24 + 0xFE4]
	0x033890FC MOV X20, X1
	0x03389100 MOV X21, X0
	0x03389104 TBNZ X8, 0x0, 0x3389128
	0x03389108 ADRP X0, 0xD9F000
	0x0338910C LDR X0, [X0 + 0x78]
	0x03389110 BL 0x1C16CF4
	0x03389114 ADRP X0, 0xD9F000
	0x03389118 LDR X0, [X0 + 0x200]
	0x0338911C BL 0x1C16CF4
	0x03389120 MOVZ W8, 0x1
	0x03389124 STRB W8, [X24 + 0xFE4]
	0x03389128 ADRP X24, 0xD9F000
	0x0338912C LDR X24, [X24 + 0x78]
	0x03389130 MOVI V0.2D, 0x0
	0x03389134 CMP W19, 0x7
	0x03389138 STUR V0, [X31 + 0x7A]
	0x0338913C STP V0, V0, [X31 + 0x60]
	0x03389140 STP V0, V0, [X31 + 0x40]
	0x03389144 STP V0, V0, [X31 + 0x20]
	0x03389148 STR V0, [X31 + 0x1]
	0x0338914C STR X31, [X31 + 0x8]
	0x03389150 B.HI 0x338918C
	0x03389154 LDR X0, [X24]
	0x03389158 STRB W31, [X31 + 0x4]
	0x0338915C LDR W8, [X0 + 0xE0]
	0x03389160 CBNZ W8, 0x3389168
	0x03389164 BL 0x1C16DFC
	0x03389168 ADD X4, X31, 0x8
	0x0338916C ADD X5, X31, 0x4
	0x03389170 MOV X0, X21
	0x03389174 MOV X1, X20
	0x03389178 MOV W2, W19
	0x0338917C MOV X3, X22
	0x03389180 BL 0x338927C
	0x03389184 TBNZ X0, 0x0, 0x338922C
	0x03389188 B 0x3389258
	0x0338918C TBNZ X19, 0x9, 0x33891FC
	0x03389190 LDR X0, [X24]
	0x03389194 MOVI V0.2D, 0x0
	0x03389198 STUR V0, [X31 + 0x7A]
	0x0338919C STP V0, V0, [X31 + 0x60]
	0x033891A0 STP V0, V0, [X31 + 0x40]
	0x033891A4 STP V0, V0, [X31 + 0x20]
	0x033891A8 STR V0, [X31 + 0x1]
	0x033891AC LDR W8, [X0 + 0xE0]
	0x033891B0 CBNZ W8, 0x33891B8
	0x033891B4 BL 0x1C16DFC
	0x033891B8 ADD X3, X31, 0x10
	0x033891BC MOV X0, X21
	0x033891C0 MOV X1, X20
	0x033891C4 MOV W2, W19
	0x033891C8 MOV X4, X22
	0x033891CC MOV W5, W31
	0x033891D0 BL 0x3387ED4
	0x033891D4 ADD X0, X31, 0x10
	0x033891D8 ADD X1, X31, 0x8
	0x033891DC BL 0x338746C
	0x033891E0 TBNZ X0, 0x0, 0x338922C
	0x033891E4 LDR X0, [X24]
	0x033891E8 BL 0x19903D0
	0x033891EC ADRP X8, 0xD9F000
	0x033891F0 LDR X8, [X8 + 0x200]
	0x033891F4 MOVZ W0, 0x1
	0x033891F8 B 0x3389270
	0x033891FC LDR X0, [X24]
	0x03389200 STRB W31, [X31 + 0x4]
	0x03389204 LDR W8, [X0 + 0xE0]
	0x03389208 CBNZ W8, 0x3389210
	0x0338920C BL 0x1C16DFC
	0x03389210 ADD X4, X31, 0x8
	0x03389214 ADD X5, X31, 0x4
	0x03389218 MOV X0, X21
	0x0338921C MOV X1, X20
	0x03389220 MOV W2, W19
	0x03389224 BL 0x33885F8
	0x03389228 TBZ X0, 0x0, 0x3389258
	0x0338922C LDR X0, [X31 + 0x8]
	0x03389230 LDR X8, [X23 + 0x28]
	0x03389234 LDR X9, [X31 + 0x98]
	0x03389238 CMP X8, X9
	0x0338923C B.NE 0x3389278
	0x03389240 LDP X20, X19, [X31 + 0xD0]
	0x03389244 LDP X22, X21, [X31 + 0xC0]
	0x03389248 LDP X24, X23, [X31 + 0xB0]
	0x0338924C LDR X30, [X31 + 0xA0]
	0x03389250 ADD X31, X31, 0xE0
	0x03389254 RET
	0x03389258 LDR X0, [X24]
	0x0338925C LDRB W19, [X31 + 0x4]
	0x03389260 BL 0x19903D0
	0x03389264 ADRP X8, 0xD9F000
	0x03389268 LDR X8, [X8 + 0x200]
	0x0338926C MOV W0, W19
	0x03389270 LDR X1, [X8]
	0x03389274 BL 0x3387AFC
	0x03389278 BL 0x3EB1B20
	0x0338927C SUB X31, X31, 0x80
	0x03389280 STP X29, X30, [X31 + 0x20]
	0x03389284 STP X28, X27, [X31 + 0x30]
	0x03389288 STP X26, X25, [X31 + 0x40]
	0x0338928C STP X24, X23, [X31 + 0x50]
	0x03389290 STP X22, X21, [X31 + 0x60]
	0x03389294 STP X20, X19, [X31 + 0x70]
	0x03389298 ADRP X24, 0x1053000
	0x0338929C LDRB W8, [X24 + 0xFEE]
	0x033892A0 MOV X27, X5
	0x033892A4 MOV X19, X4
	0x033892A8 MOV X25, X3
	0x033892AC MOV W22, W2
	0x033892B0 MOV X23, X1
	0x033892B4 MOV X21, X0
	0x033892B8 TBNZ X8, 0x0, 0x338930C
	0x033892BC ADRP X0, 0xDA1000
	0x033892C0 LDR X0, [X0 + 0xFD8]
	0x033892C4 BL 0x1C16CF4
	0x033892C8 ADRP X0, 0xD9F000
	0x033892CC LDR X0, [X0 + 0x78]
	0x033892D0 BL 0x1C16CF4
	0x033892D4 ADRP X0, 0xD9E000
	0x033892D8 LDR X0, [X0 + 0x7E8]
	0x033892DC BL 0x1C16CF4
	0x033892E0 ADRP X0, 0xD99000
	0x033892E4 LDR X0, [X0 + 0x28]
	0x033892E8 BL 0x1C16CF4
	0x033892EC ADRP X0, 0xD6F000
	0x033892F0 LDR X0, [X0 + 0x3F8]
	0x033892F4 BL 0x1C16CF4
	0x033892F8 ADRP X0, 0xD6B000
	0x033892FC LDR X0, [X0 + 0x2A8]
	0x03389300 BL 0x1C16CF4
	0x03389304 MOVZ W8, 0x1
	0x03389308 STRB W8, [X24 + 0xFEE]
	0x0338930C CBZ W23, 0x3389814
	0x03389310 LDRH W28, [X21]
	0x03389314 TBNZ X22, 0x0, 0x3389330
	0x03389318 MOV W24, W31
	0x0338931C UBFM X20, X23, 0x20, 0x3F
	0x03389320 TBNZ X22, 0x2, 0x338939C
	0x03389324 STR X20, [X31 + 0x18]
	0x03389328 MOVZ W20, 0x1
	0x0338932C B 0x338956C
	0x03389330 ADRP X26, 0xD9F000
	0x03389334 LDR X26, [X26 + 0x78]
	0x03389338 LDR X0, [X26]
	0x0338933C LDR W8, [X0 + 0xE0]
	0x03389340 CBNZ W8, 0x3389348
	0x03389344 BL 0x1C16DFC
	0x03389348 SUB W8, W28, 0x9
	0x0338934C CMP W8, 0x5
	0x03389350 B.CS 0x3389480
	0x03389354 CMP W23, 0x2
	0x03389358 B.CC 0x3389814
	0x0338935C MOVZ W24, 0x1
	0x03389360 LDR X0, [X26]
	0x03389364 LDRH W28, [X21, W24, SXTW]
	0x03389368 LDR W8, [X0 + 0xE0]
	0x0338936C CBNZ W8, 0x3389374
	0x03389370 BL 0x1C16DFC
	0x03389374 SUB W8, W28, 0x9
	0x03389378 CMP W8, 0x5
	0x0338937C B.CS 0x3389390
	0x03389380 ADD W24, W24, 0x1
	0x03389384 CMP W23, W24
	0x03389388 B.NE 0x3389360
	0x0338938C B 0x3389814
	0x03389390 CMP W28, 0x20
	0x03389394 B.EQ 0x3389380
	0x03389398 B 0x338931C
	0x0338939C CBZ X25, 0x3389878
	0x033893A0 ADRP X8, 0xD6F000
	0x033893A4 LDP X26, X25, [X25 + 0x28]
	0x033893A8 LDR X8, [X8 + 0x3F8]
	0x033893AC MOV X2, X31
	0x033893B0 MOV X0, X26
	0x033893B4 LDR X1, [X8]
	0x033893B8 BL 0x321BA08
	0x033893BC TBZ X0, 0x0, 0x3389400
	0x033893C0 ADRP X8, 0xD6B000
	0x033893C4 LDR X8, [X8 + 0x2A8]
	0x033893C8 MOV X0, X25
	0x033893CC MOV X2, X31
	0x033893D0 LDR X1, [X8]
	0x033893D4 BL 0x321BA08
	0x033893D8 TBZ X0, 0x0, 0x3389400
	0x033893DC CMP W28, 0x2D
	0x033893E0 B.EQ 0x3389728
	0x033893E4 CMP W28, 0x2B
	0x033893E8 B.NE 0x3389324
	0x033893EC ADD W24, W24, 0x1
	0x033893F0 CMP W24, W23
	0x033893F4 B.CS 0x3389814
	0x033893F8 LDRH W28, [X21, W24, SXTW]
	0x033893FC B 0x3389324
	0x03389400 ADRP X8, 0xD9E000
	0x03389404 LDR X8, [X8 + 0x7E8]
	0x03389408 CMP W24, W23
	0x0338940C LDR X20, [X8]
	0x03389410 B.LS 0x338941C
	0x03389414 MOV X0, X31
	0x03389418 BL 0x339D6EC
	0x0338941C LDR X0, [X20 + 0x20]
	0x03389420 LDRB W8, [X0 + 0x135]
	0x03389424 TBNZ X8, 0x0, 0x338942C
	0x03389428 BL 0x1C5C684
	0x0338942C MOV X0, X26
	0x03389430 MOV X1, X31
	0x03389434 SUB W23, W23, W24
	0x03389438 ADD X21, X21, W24, 0x1, SXTW
	0x0338943C BL 0x32277A8
	0x03389440 TBNZ X0, 0x0, 0x33894CC
	0x03389444 ADRP X20, 0x1050000
	0x03389448 LDRB W8, [X20 + 0x762]
	0x0338944C CBNZ W8, 0x3389464
	0x03389450 ADRP X0, 0xD91000
	0x03389454 LDR X0, [X0 + 0x290]
	0x03389458 BL 0x1C16CF4
	0x0338945C MOVZ W8, 0x1
	0x03389460 STRB W8, [X20 + 0x762]
	0x03389464 CBZ X26, 0x338948C
	0x03389468 MOV X0, X26
	0x0338946C MOV X1, X31
	0x03389470 BL 0x3225708
	0x03389474 LDR W3, [X26 + 0x10]
	0x03389478 MOV X2, X0
	0x0338947C B 0x3389494
	0x03389480 CMP W28, 0x20
	0x03389484 B.NE 0x3389318
	0x03389488 B 0x3389354
	0x0338948C MOV X2, X31
	0x03389490 MOV X3, X31
	0x03389494 ADRP X8, 0xDA1000
	0x03389498 LDR X8, [X8 + 0xFD8]
	0x0338949C MOV X0, X21
	0x033894A0 MOV X1, X23
	0x033894A4 LDR X4, [X8]
	0x033894A8 BL 0x338C288
	0x033894AC TBZ X0, 0x0, 0x33894CC
	0x033894B0 CBZ X26, 0x3389878
	0x033894B4 LDR W24, [X26 + 0x10]
	0x033894B8 CMP W24, W23
	0x033894BC B.CS 0x3389814
	0x033894C0 SXTW X8, W24
	0x033894C4 LDRH W28, [X21, X8, LSL #1]
	0x033894C8 B 0x3389564
	0x033894CC MOV X0, X25
	0x033894D0 MOV X1, X31
	0x033894D4 BL 0x32277A8
	0x033894D8 TBNZ X0, 0x0, 0x3389560
	0x033894DC ADRP X20, 0x1050000
	0x033894E0 LDRB W8, [X20 + 0x762]
	0x033894E4 CBNZ W8, 0x33894FC
	0x033894E8 ADRP X0, 0xD91000
	0x033894EC LDR X0, [X0 + 0x290]
	0x033894F0 BL 0x1C16CF4
	0x033894F4 MOVZ W8, 0x1
	0x033894F8 STRB W8, [X20 + 0x762]
	0x033894FC CBZ X25, 0x3389518
	0x03389500 MOV X0, X25
	0x03389504 MOV X1, X31
	0x03389508 BL 0x3225708
	0x0338950C LDR W3, [X25 + 0x10]
	0x03389510 MOV X2, X0
	0x03389514 B 0x3389520
	0x03389518 MOV X2, X31
	0x0338951C MOV X3, X31
	0x03389520 ADRP X8, 0xDA1000
	0x03389524 LDR X8, [X8 + 0xFD8]
	0x03389528 MOV X0, X21
	0x0338952C MOV X1, X23
	0x03389530 LDR X4, [X8]
	0x03389534 BL 0x338C288
	0x03389538 TBZ X0, 0x0, 0x3389560
	0x0338953C CBZ X25, 0x3389878
	0x03389540 LDR W24, [X25 + 0x10]
	0x03389544 CMP W24, W23
	0x03389548 B.CS 0x3389814
	0x0338954C SXTW X8, W24
	0x03389550 LDRH W28, [X21, X8, LSL #1]
	0x03389554 MOV W20, W31
	0x03389558 STR X31, [X31 + 0x18]
	0x0338955C B 0x338956C
	0x03389560 MOV W24, W31
	0x03389564 STR X31, [X31 + 0x18]
	0x03389568 MOVZ W20, 0x1
	0x0338956C ADRP X29, 0xD9F000
	0x03389570 LDR X29, [X29 + 0x78]
	0x03389574 LDR X0, [X29]
	0x03389578 LDR W8, [X0 + 0xE0]
	0x0338957C CBNZ W8, 0x3389584
	0x03389580 BL 0x1C16DFC
	0x03389584 SUB W26, W28, 0x30
	0x03389588 CMP W26, 0x9
	0x0338958C B.HI 0x3389814
	0x03389590 CMP W28, 0x30
	0x03389594 B.NE 0x33895C8
	0x03389598 ADD W24, W24, 0x1
	0x0338959C CMP W24, W23
	0x033895A0 B.CS 0x33896E8
	0x033895A4 LDRH W25, [X21, W24, SXTW]
	0x033895A8 SUBS W26, W25, 0x30
	0x033895AC B.EQ 0x3389598
	0x033895B0 LDR X0, [X29]
	0x033895B4 LDR W8, [X0 + 0xE0]
	0x033895B8 CBNZ W8, 0x33895C0
	0x033895BC BL 0x1C16DFC
	0x033895C0 CMP W26, 0x9
	0x033895C4 B.HI 0x3389718
	0x033895C8 ADD W8, W24, 0x1
	0x033895CC CMP W8, W23
	0x033895D0 STR X27, [X31 + 0x10]
	0x033895D4 MOV W27, W24
	0x033895D8 MOV W26, W26
	0x033895DC ADD W24, W24, 0x13
	0x033895E0 MOVN W25, 0x11
	0x033895E4 CSET W8, CC
	0x033895E8 MOVZ W28, 0xA
	0x033895EC STR W20, [X31 + 0xC]
	0x033895F0 TBZ X8, 0x0, 0x33896F0
	0x033895F4 LDR X0, [X29]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X24, 0x1054000
	015 Move W8, [X24+4072]
	016 Move X27, X5
	017 Move X19, X4
	018 Move X25, X3
	019 Move W22, W2
	020 Move X23, X1
	021 Move X21, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {46}
	026 Move X0, 0xDA2000
	027 Move X0, [X0+4056]
	028 Call 0x1C17CF4
	029 Move X0, 0xDA0000
	030 Move X0, [X0+120]
	031 Call 0x1C17CF4
	032 Move X0, 0xD9F000
	033 Move X0, [X0+2024]
	034 Call 0x1C17CF4
	035 Move X0, 0xD9A000
	036 Move X0, [X0+40]
	037 Call 0x1C17CF4
	038 Move X0, 0xD70000
	039 Move X0, [X0+1016]
	040 Call 0x1C17CF4
	041 Move X0, 0xD6C000
	042 Move X0, [X0+680]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X24+4072], W8
	046 Compare W23, 0
	047 JumpIfEqual {384}
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Move TEMP, X22
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {62}
	053 Move W24, W31
	054 Move X20, X23
	055 ShiftRight X20, 32
	056 And X20, X20, 0x7FFFFFFF
	057 Move TEMP, X22
	058 And TEMP, TEMP, 4
	059 Compare TEMP, 4
	060 JumpIfEqual {84}
	061 Move W25, 1
	062 Move X26, 0xDA0000
	063 Move X26, [X26+120]
	064 Move X0, [X26]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Subtract W8, W28, 9
	070 NotImplemented "Instruction CMP not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move W24, 1
	073 Move X0, [X26]
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Subtract W8, W28, 9
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Add W24, W24, 1
	082 NotImplemented "Instruction CMP not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Compare X25, 0
	085 JumpIfEqual {410}
	086 Move X8, 0xD70000
	087 Move X26, [X25+40]
	088 Move X25, [X25+48]
	089 Move X8, [X8+1016]
	090 Move X2, X31
	091 Move X0, X26
	092 Move X1, [X8]
	093 Call String.op_Equality, X0, X1
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {116}
	098 Move X8, 0xD6C000
	099 Move X8, [X8+680]
	100 Move X0, X25
	101 Move X2, X31
	102 Move X1, [X8]
	103 Call String.op_Equality, X0, X1
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {116}
	108 NotImplemented "Instruction CMP not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Add W24, W24, 1
	111 NotImplemented "Instruction CMP not yet implemented."
	112 NotImplemented "Instruction LDRH not yet implemented."
	113 Move TEMP, 0
	114 Not TEMP
	115 Move W25, TEMP
	116 Move X8, 0xD9F000
	117 Move X8, [X8+2024]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X20, [X8]
	120 Move X0, X31
	121 Call ThrowHelper.ThrowArgumentOutOfRangeException
	122 Move X0, [X20+32]
	123 Move W8, [X0+309]
	124 Move TEMP, X8
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {129}
	128 Call 0x1C5D684
	129 Move X0, X26
	130 Move X1, X31
	131 Subtract W23, W23, W24
	132 Add X21, X21, W24
	133 Call String.IsNullOrEmpty, X0
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {174}
	138 Move X20, 0x1051000
	139 Move W8, [X20+1890]
	140 Compare W8, 0
	141 JumpIfNotEqual {147}
	142 Move X0, 0xD92000
	143 Move X0, [X0+656]
	144 Call 0x1C17CF4
	145 Move W8, 1
	146 Move [X20+1890], W8
	147 Compare X26, 0
	148 JumpIfEqual {155}
	149 Move X0, X26
	150 Move X1, X31
	151 Call String.GetRawStringData, X0
	152 Move W3, [X26+16]
	153 Move X2, X0
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X2, X31
	156 Move X3, X31
	157 Move X8, 0xDA2000
	158 Move X8, [X8+4056]
	159 Move X0, X21
	160 Move X1, X23
	161 Move X4, [X8]
	162 Call 0x338D288
	163 Move TEMP, X0
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfNotEqual {174}
	167 Compare X26, 0
	168 JumpIfEqual {410}
	169 Move W24, [X26+16]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move X8, W24
	172 NotImplemented "Instruction LDRH not yet implemented."
	173 Move X20, X31
	174 Move X0, X25
	175 Move X1, X31
	176 Call String.IsNullOrEmpty, X0
	177 Move TEMP, X0
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfEqual {219}
	181 Move X20, 0x1051000
	182 Move W8, [X20+1890]
	183 Compare W8, 0
	184 JumpIfNotEqual {190}
	185 Move X0, 0xD92000
	186 Move X0, [X0+656]
	187 Call 0x1C17CF4
	188 Move W8, 1
	189 Move [X20+1890], W8
	190 Compare X25, 0
	191 JumpIfEqual {197}
	192 Move X0, X25
	193 Move X1, X31
	194 Call String.GetRawStringData, X0
	195 Move W3, [X25+16]
	196 Move X2, X0
	197 Move X2, X31
	198 Move X3, X31
	199 Move X8, 0xDA2000
	200 Move X8, [X8+4056]
	201 Move X0, X21
	202 Move X1, X23
	203 Move X4, [X8]
	204 Call 0x338D288
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfNotEqual {219}
	209 Compare X25, 0
	210 JumpIfEqual {410}
	211 Move W24, [X25+16]
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Move X8, W24
	214 NotImplemented "Instruction LDRH not yet implemented."
	215 Move X20, X31
	216 Move TEMP, 0
	217 Not TEMP
	218 Move W25, TEMP
	219 Move X20, X31
	220 Move W24, W31
	221 Move W25, 1
	222 Move [X31+24], X20
	223 Move X26, 0xDA0000
	224 Move X26, [X26+120]
	225 Move X0, [X26]
	226 Move W8, [X0+224]
	227 Compare W8, 0
	228 JumpIfNotEqual {230}
	229 Call 0x1C17DFC
	230 Subtract W29, W28, 48
	231 NotImplemented "Instruction CMP not yet implemented."
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Move [X31+16], X25
	234 Add W24, W24, 1
	235 NotImplemented "Instruction CMP not yet implemented."
	236 NotImplemented "Instruction LDRH not yet implemented."
	237 Subtract W29, W25, 48
	238 Move X0, [X26]
	239 Move W8, [X0+224]
	240 Compare W8, 0
	241 JumpIfNotEqual {243}
	242 Call 0x1C17DFC
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Add W8, W24, 1
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move [X31+8], X27
	247 Move W27, W24
	248 Move W28, W29
	249 Add W24, W24, 18
	250 Move TEMP, 16
	251 Not TEMP
	252 Move W25, TEMP
	253 NotImplemented "Instruction CSET not yet implemented."
	254 Move W29, 10
	255 Move TEMP, X8
	256 And TEMP, TEMP, 1
	257 Compare TEMP, 1
	258 JumpIfNotEqual {405}
	259 Move X0, [X26]
	260 Add W8, W27, W25
	261 Add W8, W8, 18
	262 NotImplemented "Instruction LDRH not yet implemented."
	263 Move W9, [X0+224]
	264 Compare W9, 0
	265 JumpIfNotEqual {267}
	266 Call 0x1C17DFC
	267 Subtract W8, W20, 48
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Add W8, W27, W25
	270 Add W9, W8, 19
	271 NotImplemented "Instruction MADD not yet implemented."
	272 NotImplemented "Instruction CMP not yet implemented."
	273 NotImplemented "Instruction CSET not yet implemented."
	274 Add W25, W25, 1
	275 Subtract X28, X10, 48
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Move X0, [X26]
	278 NotImplemented "Instruction LDRH not yet implemented."
	279 Move W8, [X0+224]
	280 Compare W8, 0
	281 JumpIfNotEqual {283}
	282 Call 0x1C17DFC
	283 Subtract W8, W25, 48
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Move X11, [X31+16]
	286 Or X8, X31, -3689348814741910324
	287 NotImplemented "Instruction MOVK not yet implemented."
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Move W8, 1
	290 Move W10, 2
	291 Subtract W8, W8, W11
	292 Subtract W10, W10, W11
	293 NotImplemented "Instruction CSET not yet implemented."
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Move W9, 10
	296 NotImplemented "Instruction CSEL not yet implemented."
	297 NotImplemented "Instruction MADD not yet implemented."
	298 Move TEMP, 0x80000000
	299 Not TEMP
	300 Move X10, TEMP
	301 NotImplemented "Instruction SBFM not yet implemented."
	302 Subtract X28, X9, 48
	303 Add X8, X8, X10
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Add W24, W27, 19
	306 NotImplemented "Instruction CSET not yet implemented."
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Or W29, W11, W8
	309 Move X27, [X31+8]
	310 Move X0, [X26]
	311 NotImplemented "Instruction LDRH not yet implemented."
	312 Move W8, [X0+224]
	313 Compare W8, 0
	314 JumpIfNotEqual {316}
	315 Call 0x1C17DFC
	316 Subtract W8, W25, 48
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Add W24, W24, 1
	319 NotImplemented "Instruction CMP not yet implemented."
	320 Move W29, 1
	321 Move X28, X31
	322 Add W8, W27, W25
	323 Move W29, W31
	324 Add W24, W8, 18
	325 Move W25, W20
	326 Move X27, [X31+8]
	327 Move X28, X31
	328 Move W29, W31
	329 Move X0, [X26]
	330 Move W8, [X0+224]
	331 Compare W8, 0
	332 JumpIfNotEqual {334}
	333 Call 0x1C17DFC
	334 Subtract W8, W25, 9
	335 NotImplemented "Instruction CMP not yet implemented."
	336 Move TEMP, X22
	337 And TEMP, TEMP, 2
	338 Compare TEMP, 2
	339 JumpIfNotEqual {384}
	340 Add W24, W24, 1
	341 NotImplemented "Instruction CMP not yet implemented."
	342 Add X22, X21, W24
	343 NotImplemented "Instruction CMP not yet implemented."
	344 Move X0, [X26]
	345 NotImplemented "Instruction LDRH not yet implemented."
	346 Move W8, [X0+224]
	347 Compare W8, 0
	348 JumpIfNotEqual {350}
	349 Call 0x1C17DFC
	350 Subtract W8, W20, 9
	351 NotImplemented "Instruction CMP not yet implemented."
	352 Add W24, W24, 1
	353 NotImplemented "Instruction CMP not yet implemented."
	354 Add X22, X22, 2
	355 NotImplemented "Instruction CMP not yet implemented."
	356 NotImplemented "Instruction CMP not yet implemented."
	357 NotImplemented "Instruction CMP not yet implemented."
	358 Move X0, [X26]
	359 Move X9, [X31+24]
	360 Move W22, W23
	361 Move W8, [X0+224]
	362 NotImplemented "Instruction BFM not yet implemented."
	363 Compare W8, 0
	364 JumpIfNotEqual {366}
	365 Call 0x1C17DFC
	366 Move X0, X21
	367 Move X1, X22
	368 Move W2, W24
	369 Call Number.TrailingZeros, X0, X1
	370 Move TEMP, X0
	371 And TEMP, TEMP, 1
	372 Compare TEMP, 1
	373 JumpIfNotEqual {384}
	374 And W29, W29, 1
	375 Compare W29, 0
	376 JumpIfEqual {405}
	377 Move W9, 1
	378 Move X8, X31
	379 Move W0, W31
	380 Move [X27], W9
	381 Add W24, W24, 1
	382 NotImplemented "Instruction CMP not yet implemented."
	383 NotImplemented "Instruction LDRH not yet implemented."
	384 Move X8, X31
	385 Move W0, W31
	386 Move [X19], X8
	387 Move X20, [X31+112]
	388 Move X19, [X31+120]
	389 Move X22, [X31+96]
	390 Move X21, [X31+104]
	391 Move X24, [X31+80]
	392 Move X23, [X31+88]
	393 Move X26, [X31+64]
	394 Move X25, [X31+72]
	395 Move X28, [X31+48]
	396 Move X27, [X31+56]
	397 Move X29, [X31+32]
	398 Move X30, [X31+40]
	399 Add X31, X31, 128
	400 Return X0
	401 Move W29, W31
	402 Move X27, [X31+8]
	403 Compare W29, 0
	404 JumpIfNotEqual {377}
	405 Move X8, [X31+16]
	406 Move W0, 1
	407 Move X8, W8
	408 Multiply X8, X28, X8
	409 Call 0x1C17F28
	410 Call 0x1C17F20

Method: System.Boolean TryParseInt64(System.ReadOnlySpan`1<System.Char> value, System.Globalization.NumberStyles styles, System.Globalization.NumberFormatInfo info, out System.Int64 result)

Disassembly:
	0x0337E658 ADD W8, W28, W21
	0x0337E65C EOR W9, W8, W23, 0x0
	0x0337E660 EXTR W8, W8, W8, 0xC
	0x0337E664 ADD W8, W9, W8
	0x0337E668 EOR W9, W8, W9, 0x17
	0x0337E66C EXTR W8, W8, W8, 0x5
	0x0337E670 ADD W8, W9, W8
	0x0337E674 EXTR W9, W9, W9, 0xD
	0x0337E678 ADD W8, W8, W29
	0x0337E67C EOR W9, W8, W9, 0x0
	0x0337E680 EXTR W8, W8, W8, 0xC
	0x0337E684 ADD W8, W9, W8
	0x0337E688 SUB X26, X26, 0x8
	0x0337E68C EOR W9, W8, W9, 0x17
	0x0337E690 EXTR W8, W8, W8, 0x5
	0x0337E694 CMP X26, 0x7
	0x0337E698 ADD W21, W9, W8
	0x0337E69C EXTR W23, W9, W9, 0xD
	0x0337E6A0 ADD X24, X24, 0x8
	0x0337E6A4 B.HI 0x337E5F0
	0x0337E6A8 AND X24, X25, 0xFFFFFFFF
	0x0337E6AC MOV X25, X26
	0x0337E6B0 CMP W25, 0x7
	0x0337E6B4 B.HI 0x337E8A0
	0x0337E6B8 ADRP X9, 0xFFFFFFFFFD818000
	0x0337E6BC AND X8, X25, 0x0
	0x0337E6C0 ADD X9, X9, 0x7ED
	0x0337E6C4 ADR X10, 0x10
	0x0337E6C8 LDRB W11, [X9, X8, LSL]
	0x0337E6CC ADD X10, X10, X11, 0x2, LSL
	0x0337E6D0 BR X10
	0x0337E6D4 LDR X0, [X19]
	0x0337E6D8 LDR W20, [X20, X24, LSL]
	0x0337E6DC LDR W8, [X0 + 0xE0]
	0x0337E6E0 CBNZ W8, 0x337E6E8
	0x0337E6E4 BL 0x1C16DFC
	0x0337E6E8 LDRB W8, [X22]
	0x0337E6EC ADD W20, W20, W21
	0x0337E6F0 CBNZ W8, 0x337E708
	0x0337E6F4 ADRP X0, 0xDA9000
	0x0337E6F8 LDR X0, [X0 + 0x9D8]
	0x0337E6FC BL 0x1C16CF4
	0x0337E700 MOVZ W8, 0x1
	0x0337E704 STRB W8, [X22]
	0x0337E708 LDR X0, [X19]
	0x0337E70C EOR W21, W20, W23, 0x0
	0x0337E710 LDR W8, [X0 + 0xE0]
	0x0337E714 CBNZ W8, 0x337E71C
	0x0337E718 BL 0x1C16DFC
	0x0337E71C EXTR W8, W20, W20, 0xC
	0x0337E720 ADD W8, W21, W8
	0x0337E724 EOR W9, W8, W21, 0x17
	0x0337E728 EXTR W8, W8, W8, 0x5
	0x0337E72C ADD W21, W9, W8
	0x0337E730 EXTR W23, W9, W9, 0xD
	0x0337E734 ADD W21, W21, 0x80
	0x0337E738 B 0x337E8A0
	0x0337E73C LDR X0, [X19]
	0x0337E740 LDR W25, [X20, X24, LSL]
	0x0337E744 LDR W8, [X0 + 0xE0]
	0x0337E748 CBNZ W8, 0x337E750
	0x0337E74C BL 0x1C16DFC
	0x0337E750 LDRB W8, [X22]
	0x0337E754 ADD W21, W25, W21
	0x0337E758 CBNZ W8, 0x337E770
	0x0337E75C ADRP X0, 0xDA9000
	0x0337E760 LDR X0, [X0 + 0x9D8]
	0x0337E764 BL 0x1C16CF4
	0x0337E768 MOVZ W8, 0x1
	0x0337E76C STRB W8, [X22]
	0x0337E770 LDR X0, [X19]
	0x0337E774 ORR X24, X24, 0x7
	0x0337E778 EOR W23, W21, W23, 0x0
	0x0337E77C LDR W8, [X0 + 0xE0]
	0x0337E780 CBNZ W8, 0x337E788
	0x0337E784 BL 0x1C16DFC
	0x0337E788 EXTR W8, W21, W21, 0xC
	0x0337E78C ADD W8, W23, W8
	0x0337E790 EOR W9, W8, W23, 0x17
	0x0337E794 EXTR W8, W8, W8, 0x5
	0x0337E798 ADD W21, W9, W8
	0x0337E79C EXTR W23, W9, W9, 0xD
	0x0337E7A0 LDRB W8, [X20, X24, LSL]
	0x0337E7A4 ADD W8, W21, W8
	0x0337E7A8 ADD W21, W8, 0x8000
	0x0337E7AC B 0x337E8A0
	0x0337E7B0 LDR X0, [X19]
	0x0337E7B4 LDR W25, [X20, X24, LSL]
	0x0337E7B8 LDR W8, [X0 + 0xE0]
	0x0337E7BC CBNZ W8, 0x337E7C4
	0x0337E7C0 BL 0x1C16DFC
	0x0337E7C4 LDRB W8, [X22]
	0x0337E7C8 ADD W21, W25, W21
	0x0337E7CC CBNZ W8, 0x337E7E4
	0x0337E7D0 ADRP X0, 0xDA9000
	0x0337E7D4 LDR X0, [X0 + 0x9D8]
	0x0337E7D8 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+160], X30
	003 Move [X31+168], X25
	004 Move [X31+176], X24
	005 Move [X31+184], X23
	006 Move [X31+192], X22
	007 Move [X31+200], X21
	008 Move [X31+208], X20
	009 Move [X31+216], X19
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X24+40]
	012 Move X25, 0x105F000
	013 Move X19, X4
	014 Move X23, X3
	015 Move [X31+152], X8
	016 Move W8, [X25+4073]
	017 Move W20, W2
	018 Move X21, X1
	019 Move X22, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0xDAB000
	025 Move X0, [X0+120]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X25+4073], W8
	029 Move X25, 0xDAB000
	030 Move X25, [X25+120]
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move [X31+122], V0
	034 Move [X31+96], V0
	035 Move [X31+104], V0
	036 Move [X31+64], V0
	037 Move [X31+72], V0
	038 Move [X31+32], V0
	039 Move [X31+40], V0
	040 Move [X31+1], V0
	041 Move X0, [X25]
	042 Move [X31+12], W31
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Add X5, X31, 12
	048 Move X0, X22
	049 Move X1, X21
	050 Move W2, W20
	051 Move X3, X23
	052 Move X4, X19
	053 Call Number.TryParseInt64IntegerStyle, X0, X1, X2, X3, X4
	054 Move [X19], X31
	055 Move TEMP, X20
	056 And TEMP, TEMP, 512
	057 Compare TEMP, 512
	058 JumpIfEqual {94}
	059 Move X0, [X25]
	060 NotImplemented "Instruction MOVI not yet implemented."
	061 Move [X31+122], V0
	062 Move [X31+96], V0
	063 Move [X31+104], V0
	064 Move [X31+64], V0
	065 Move [X31+72], V0
	066 Move [X31+32], V0
	067 Move [X31+40], V0
	068 Move [X31+1], V0
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Add X3, X31, 16
	074 Move X0, X22
	075 Move X1, X21
	076 Move W2, W20
	077 Move X4, X23
	078 Move W5, W31
	079 Call Number.TryStringToNumber, X0, X1, X2, X3, X4
	080 Move W8, W0
	081 Move W0, W31
	082 Move TEMP, X8
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {106}
	086 Move X0, [X25]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Add X0, X31, 16
	092 Move X1, X19
	093 Call Number.NumberToInt64, X0, X1
	094 Move X0, [X25]
	095 Move [X31+12], W31
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Add X5, X31, 12
	101 Move X0, X22
	102 Move X1, X21
	103 Move W2, W20
	104 Move X4, X19
	105 Call Number.TryParseUInt64HexNumberStyle, X0, X1, X2, X3, X4
	106 Move X8, [X24+40]
	107 Move X9, [X31+152]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X20, [X31+208]
	110 Move X19, [X31+216]
	111 Move X22, [X31+192]
	112 Move X21, [X31+200]
	113 Move X24, [X31+176]
	114 Move X23, [X31+184]
	115 Move X30, [X31+160]
	116 Move X25, [X31+168]
	117 And W0, W0, 1
	118 Add X31, X31, 224
	119 Return X0
	120 Call 0x3EB2B20

Method: System.Boolean TryParseUInt32(System.ReadOnlySpan`1<System.Char> value, System.Globalization.NumberStyles styles, System.Globalization.NumberFormatInfo info, out System.UInt32 result)

Disassembly:
	0x0338B1E8 LDR X0, [X25]
	0x0338B1EC LDR W8, [X0 + 0xE0]
	0x0338B1F0 CBNZ W8, 0x338B1F8
	0x0338B1F4 BL 0x1C16DFC
	0x0338B1F8 ADD X0, X31, 0x0
	0x0338B1FC MOV X1, X19
	0x0338B200 BL 0x338AC40
	0x0338B204 LDR X8, [X24 + 0x28]
	0x0338B208 LDR X9, [X31 + 0x88]
	0x0338B20C CMP X8, X9
	0x0338B210 B.NE 0x338B234
	0x0338B214 LDP X20, X19, [X31 + 0xD0]
	0x0338B218 LDP X22, X21, [X31 + 0xC0]
	0x0338B21C LDP X24, X23, [X31 + 0xB0]
	0x0338B220 LDP X26, X25, [X31 + 0xA0]
	0x0338B224 LDR X30, [X31 + 0x90]
	0x0338B228 AND W0, W0, 0x1
	0x0338B22C ADD X31, X31, 0xE0
	0x0338B230 RET
	0x0338B234 BL 0x3EB1B20
	0x0338B238 SUB X31, X31, 0xF0
	0x0338B23C STR X30, [X31 + 0xA0]
	0x0338B240 STP X26, X25, [X31 + 0xB0]
	0x0338B244 STP X24, X23, [X31 + 0xC0]
	0x0338B248 STP X22, X21, [X31 + 0xD0]
	0x0338B24C STP X20, X19, [X31 + 0xE0]
	0x0338B250 MRS X24, 0xC000
	0x0338B254 LDR X8, [X24 + 0x28]
	0x0338B258 ADRP X26, 0x1051000
	0x0338B25C ADRP X25, 0xD9D000
	0x0338B260 MOV X19, X4
	0x0338B264 STR X8, [X31 + 0x98]
	0x0338B268 LDRB W8, [X26 + 0xFF6]
	0x0338B26C LDR X25, [X25 + 0x78]
	0x0338B270 MOV X20, X3
	0x0338B274 MOV W21, W2
	0x0338B278 MOV X22, X1
	0x0338B27C MOV X23, X0
	0x0338B280 TBNZ X8, 0x0, 0x338B298
	0x0338B284 ADRP X0, 0xD9D000
	0x0338B288 LDR X0, [X0 + 0x78]
	0x0338B28C BL 0x1C16CF4
	0x0338B290 MOVZ W8, 0x1
	0x0338B294 STRB W8, [X26 + 0xFF6]
	0x0338B298 MOVI V0.2D, 0x0
	0x0338B29C STP V0, V0, [X31 + 0x10]
	0x0338B2A0 STP V0, V0, [X31 + 0x30]
	0x0338B2A4 STP V0, V0, [X31 + 0x50]
	0x0338B2A8 STR V0, [X31 + 0x7]
	0x0338B2AC STUR V0, [X31 + 0x7A]
	0x0338B2B0 STR W31, [X19]
	0x0338B2B4 LDR X0, [X25]
	0x0338B2B8 STR X31, [X31 + 0x8]
	0x0338B2BC LDR W8, [X0 + 0xE0]
	0x0338B2C0 CBNZ W8, 0x338B2C8
	0x0338B2C4 BL 0x1C16DFC
	0x0338B2C8 ADD X3, X31, 0x10
	0x0338B2CC MOV X0, X23
	0x0338B2D0 MOV X1, X22
	0x0338B2D4 MOV W2, W21
	0x0338B2D8 MOV X4, X20
	0x0338B2DC MOV W5, W31
	0x0338B2E0 BL 0x338A028
	0x0338B2E4 MOV W8, W0
	0x0338B2E8 MOV W0, W31
	0x0338B2EC TBZ X8, 0x0, 0x338B33C
	0x0338B2F0 LDR X0, [X25]
	0x0338B2F4 LDR W8, [X0 + 0xE0]
	0x0338B2F8 CBNZ W8, 0x338B300
	0x0338B2FC BL 0x1C16DFC
	0x0338B300 ADD X0, X31, 0x10
	0x0338B304 ADD X1, X31, 0x8
	0x0338B308 BL 0x338AC40
	0x0338B30C TBZ X0, 0x0, 0x338B32C
	0x0338B310 LDR V0, [X31 + 0x8]
	0x0338B314 MOVZ W9, 0x7F800000
	0x00000000 INVALID
	0x0338B31C FMOV W8, S0
	0x0338B320 AND W8, W8, 0x7FFFFFFF
	0x0338B324 CMP W8, W9
	0x0338B328 B.NE 0x338B334
	0x0338B32C MOV W0, W31
	0x0338B330 B 0x338B33C
	0x0338B334 MOVZ W0, 0x1
	0x0338B338 STR S0, [X19]
	0x0338B33C LDR X8, [X24 + 0x28]
	0x0338B340 LDR X9, [X31 + 0x98]
	0x0338B344 CMP X8, X9
	0x0338B348 B.NE 0x338B368
	0x0338B34C LDP X20, X19, [X31 + 0xE0]
	0x0338B350 LDP X22, X21, [X31 + 0xD0]
	0x0338B354 LDP X24, X23, [X31 + 0xC0]
	0x0338B358 LDP X26, X25, [X31 + 0xB0]
	0x0338B35C LDR X30, [X31 + 0xA0]
	0x0338B360 ADD X31, X31, 0xF0
	0x0338B364 RET
	0x0338B368 BL 0x3EB1B20

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+160], X30
	003 Move [X31+168], X25
	004 Move [X31+176], X24
	005 Move [X31+184], X23
	006 Move [X31+192], X22
	007 Move [X31+200], X21
	008 Move [X31+208], X20
	009 Move [X31+216], X19
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X24+40]
	012 Move X25, 0x1052000
	013 Move X19, X4
	014 Move X23, X3
	015 Move [X31+152], X8
	016 Move W8, [X25+4074]
	017 Move W20, W2
	018 Move X21, X1
	019 Move X22, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0xD9E000
	025 Move X0, [X0+120]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X25+4074], W8
	029 Move X25, 0xD9E000
	030 Move X25, [X25+120]
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move [X31+122], V0
	034 Move [X31+96], V0
	035 Move [X31+104], V0
	036 Move [X31+64], V0
	037 Move [X31+72], V0
	038 Move [X31+32], V0
	039 Move [X31+40], V0
	040 Move [X31+1], V0
	041 Move X0, [X25]
	042 Move [X31+12], W31
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Add X5, X31, 12
	048 Move X0, X22
	049 Move X1, X21
	050 Move W2, W20
	051 Move X3, X23
	052 Move X4, X19
	053 Call Number.TryParseUInt32IntegerStyle, X0, X1, X2, X3, X4
	054 Move TEMP, X20
	055 And TEMP, TEMP, 512
	056 Compare TEMP, 512
	057 JumpIfEqual {94}
	058 NotImplemented "Instruction MOVI not yet implemented."
	059 Move [X31+122], V0
	060 Move [X31+96], V0
	061 Move [X31+104], V0
	062 Move [X31+64], V0
	063 Move [X31+72], V0
	064 Move [X31+32], V0
	065 Move [X31+40], V0
	066 Move [X31+1], V0
	067 Move [X19], W31
	068 Move X0, [X25]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Add X3, X31, 16
	074 Move X0, X22
	075 Move X1, X21
	076 Move W2, W20
	077 Move X4, X23
	078 Move W5, W31
	079 Call Number.TryStringToNumber, X0, X1, X2, X3, X4
	080 Move W8, W0
	081 Move W0, W31
	082 Move TEMP, X8
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {106}
	086 Move X0, [X25]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Add X0, X31, 16
	092 Move X1, X19
	093 Call Number.NumberToUInt32, X0, X1
	094 Move X0, [X25]
	095 Move [X31+12], W31
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Add X5, X31, 12
	101 Move X0, X22
	102 Move X1, X21
	103 Move W2, W20
	104 Move X4, X19
	105 Call Number.TryParseUInt32HexNumberStyle, X0, X1, X2, X3, X4
	106 Move X8, [X24+40]
	107 Move X9, [X31+152]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X20, [X31+208]
	110 Move X19, [X31+216]
	111 Move X22, [X31+192]
	112 Move X21, [X31+200]
	113 Move X24, [X31+176]
	114 Move X23, [X31+184]
	115 Move X30, [X31+160]
	116 Move X25, [X31+168]
	117 And W0, W0, 1
	118 Add X31, X31, 224
	119 Return X0
	120 Call 0x3EB2B20

Method: System.Boolean TryParseUInt32IntegerStyle(System.ReadOnlySpan`1<System.Char> value, System.Globalization.NumberStyles styles, System.Globalization.NumberFormatInfo info, out System.UInt32 result, ref System.Boolean failureIsOverflow)

Disassembly:
	0x03389AF8 LDR X2, [X31 + 0x18]
	0x03389AFC MOV X0, X26
	0x03389B00 MOV X1, X24
	0x03389B04 BL 0x3389F94
	0x03389B08 CBZ X0, 0x3389B74
	0x03389B0C ORR W19, W19, 0x10
	0x03389B10 B 0x3389C1C
	0x03389B14 CMP W27, 0x31
	0x03389B18 B.GT 0x3389B58
	0x03389B1C LDR X0, [X31 + 0x28]
	0x03389B20 AND W8, W28, 0xFFFF
	0x03389B24 CMP W8, 0x30
	0x03389B28 MOV X1, X31
	0x03389B2C MOV W29, W20
	0x03389B30 CSET W20, NE
	0x03389B34 BL 0x338C3A8
	0x03389B38 LDR W8, [X31 + 0x10]
	0x03389B3C ADD W9, W27, 0x1
	0x03389B40 STRH W28, [X0, W27, SXTW]
	0x03389B44 ORR W8, W20, W8, 0x0
	0x03389B48 MOV W20, W29
	0x03389B4C ANDS W31, W8, 0x1
	0x03389B50 CSINC W20, W29, W27, EQ
	0x03389B54 MOV W27, W9
	0x03389B58 TBNZ X19, 0x4, 0x3389B6C
	0x03389B5C LDR X9, [X31 + 0x28]
	0x03389B60 LDR W8, [X9 + 0x4]
	0x03389B64 ADD W8, W8, 0x1
	0x03389B68 STR W8, [X9 + 0x4]
	0x03389B6C ORR W19, W19, 0xC
	0x03389B70 B 0x3389C20
	0x03389B74 LDR W9, [X31 + 0x14]
	0x03389B78 AND W8, W19, 0x20
	0x03389B7C EOR W9, W9, 0x1
	0x03389B80 ORR W8, W9, W8, 0x5
	0x03389B84 TBNZ X8, 0x0, 0x3389BB0
	0x03389B88 LDR X0, [X21]
	0x03389B8C LDR X29, [X22 + 0x38]
	0x03389B90 LDR W8, [X0 + 0xE0]
	0x03389B94 CBNZ W8, 0x3389B9C
	0x03389B98 BL 0x1C16DFC
	0x03389B9C MOV X0, X26
	0x03389BA0 MOV X1, X24
	0x03389BA4 MOV X2, X29
	0x03389BA8 BL 0x3389F94
	0x03389BAC CBNZ X0, 0x3389B0C
	0x03389BB0 TBNZ X19, 0x4, 0x3389C38
	0x03389BB4 TBZ X23, 0x6, 0x3389C38
	0x03389BB8 TBZ X19, 0x2, 0x3389C38
	0x03389BBC LDR X0, [X21]
	0x03389BC0 LDR W8, [X0 + 0xE0]
	0x03389BC4 CBNZ W8, 0x3389BCC
	0x03389BC8 BL 0x1C16DFC
	0x03389BCC LDR X2, [X31 + 0x20]
	0x03389BD0 MOV X0, X26
	0x03389BD4 MOV X1, X24
	0x03389BD8 BL 0x3389F94
	0x03389BDC CBNZ X0, 0x3389C1C
	0x03389BE0 LDR W9, [X31 + 0x14]
	0x03389BE4 AND W8, W19, 0x20
	0x03389BE8 EOR W9, W9, 0x1
	0x03389BEC ORR W8, W9, W8, 0x5
	0x03389BF0 TBNZ X8, 0x0, 0x3389C38
	0x03389BF4 LDR X0, [X21]
	0x03389BF8 LDR X29, [X22 + 0x40]
	0x03389BFC LDR W8, [X0 + 0xE0]
	0x03389C00 CBNZ W8, 0x3389C08
	0x03389C04 BL 0x1C16DFC
	0x03389C08 MOV X0, X26
	0x03389C0C MOV X1, X24
	0x03389C10 MOV X2, X29
	0x03389C14 BL 0x3389F94
	0x03389C18 CBZ X0, 0x3389C38
	0x03389C1C SUB X26, X0, 0x2
	0x03389C20 ADD X26, X26, 0x2
	0x03389C24 CMP X26, X24
	0x03389C28 MOV W28, W31
	0x03389C2C B.CS 0x3389A94
	0x03389C30 LDRH W28, [X26]
	0x03389C34 B 0x3389A94
	0x03389C38 LDR X0, [X31 + 0x28]
	0x03389C3C MOV X1, X31
	0x03389C40 STR W20, [X0]
	0x03389C44 BL 0x338C3A8
	0x03389C48 MOV X8, X0
	0x03389C4C STRH W31, [X0, W20, SXTW]
	0x03389C50 TBZ X19, 0x2, 0x3389F48
	0x03389C54 ORR W8, W28, 0x20
	0x03389C58 AND W8, W8, 0xFFFF
	0x03389C5C CMP W8, 0x65
	0x03389C60 B.NE 0x3389DF8
	0x03389C64 TBZ X23, 0x7, 0x3389DF8
	0x03389C68 ADD X29, X26, 0x2
	0x03389C6C CMP X29, X24
	0x03389C70 B.CS 0x3389C7C
	0x03389C74 LDRH W28, [X29]
	0x03389C78 B 0x3389C80
	0x03389C7C MOV W28, W31
	0x03389C80 LDR X0, [X21]
	0x03389C84 LDR X27, [X22 + 0x28]
	0x03389C88 LDR W8, [X0 + 0xE0]
	0x03389C8C CBNZ W8, 0x3389C94
	0x03389C90 BL 0x1C16DFC
	0x03389C94 MOV X0, X29
	0x03389C98 MOV X1, X24
	0x03389C9C MOV X2, X27
	0x03389CA0 BL 0x3389F94
	0x03389CA4 CBZ X0, 0x3389CBC
	0x03389CA8 MOV X27, X0
	0x03389CAC CMP X0, X24
	0x03389CB0 B.CS 0x3389CF8
	0x03389CB4 LDRH W28, [X27]
	0x03389CB8 B 0x3389D0C
	0x03389CBC LDR X0, [X21]
	0x03389CC0 LDR X27, [X22 + 0x30]
	0x03389CC4 LDR W8, [X0 + 0xE0]
	0x03389CC8 CBNZ W8, 0x3389CD0
	0x03389CCC BL 0x1C16DFC
	0x03389CD0 MOV X0, X29
	0x03389CD4 MOV X1, X24
	0x03389CD8 MOV X2, X27
	0x03389CDC BL 0x3389F94
	0x03389CE0 CBZ X0, 0x3389D04
	0x03389CE4 MOV X27, X0
	0x03389CE8 CMP X0, X24
	0x03389CEC B.CS 0x3389D14
	0x03389CF0 LDRH W28, [X27]
	0x03389CF4 B 0x3389D18
	0x03389CF8 MOV W29, W31
	0x03389CFC MOV W28, W31
	0x03389D00 B 0x3389D1C
	0x03389D04 MOV W8, W31
	0x03389D08 MOV X27, X29
	0x03389D0C MOV W29, W31
	0x03389D10 B 0x3389D1C
	0x03389D14 MOV W28, W31
	0x03389D18 MOVZ W29, 0x1
	0x03389D1C LDR X0, [X21]
	0x03389D20 LDR W8, [X0 + 0xE0]
	0x03389D24 CBNZ W8, 0x3389D2C
	0x03389D28 BL 0x1C16DFC
	0x03389D2C SUB W8, W28, 0x30
	0x03389D30 CMP W8, 0x9
	0x03389D34 B.HI 0x3389DE4
	0x03389D38 MOV W20, W31
	0x03389D3C MOVZ W26, 0xA
	0x03389D40 MUL W8, W20, W26
	0x03389D44 ADD X27, X27, 0x2
	0x03389D48 ADD W8, W8, W28, UXTH
	0x03389D4C CMP X27, X24
	0x03389D50 SUB W20, W8, 0x30
	0x03389D54 B.CS 0x3389D60
	0x03389D58 LDRH W28, [X27]
	0x03389D5C B 0x3389D64
	0x03389D60 MOV W28, W31
	0x03389D64 CMP W20, 0x3E9
	0x03389D68 B.LT 0x3389DA8
	0x03389D6C LDR X0, [X21]
	0x03389D70 LDR W8, [X0 + 0xE0]
	0x03389D74 CBNZ W8, 0x3389D7C
	0x03389D78 BL 0x1C16DFC
	0x03389D7C AND W8, W28, 0xFFFF
	0x03389D80 SUB W8, W8, 0x30
	0x03389D84 CMP W8, 0xA
	0x03389D88 B.CS 0x3389DA4
	0x03389D8C ADD X27, X27, 0x2
	0x03389D90 CMP X27, X24
	0x03389D94 MOV W28, W31
	0x03389D98 B.CS 0x3389D6C
	0x03389D9C LDRH W28, [X27]
	0x03389DA0 B 0x3389D6C
	0x03389DA4 MOVZ W20, 0x270F
	0x03389DA8 LDR X0, [X21]
	0x03389DAC LDR W8, [X0 + 0xE0]
	0x03389DB0 CBNZ W8, 0x3389DB8
	0x03389DB4 BL 0x1C16DFC
	0x03389DB8 AND W8, W28, 0xFFFF
	0x03389DBC SUB W8, W8, 0x30
	0x03389DC0 CMP W8, 0xA
	0x03389DC4 B.CC 0x3389D40
	0x03389DC8 LDR X10, [X31 + 0x28]
	0x03389DCC CMP W29, 0x0
	0x03389DD0 CSNEG W9, W20, W20, EQ
	0x03389DD4 LDR W8, [X10 + 0x4]
	0x03389DD8 ADD W8, W8, W9
	0x03389DDC STR W8, [X10 + 0x4]
	0x03389DE0 B 0x3389DFC
	0x03389DE4 CMP X26, X24
	0x03389DE8 B.CS 0x3389DF4
	0x03389DEC LDRH W28, [X26]
	0x03389DF0 B 0x3389DF8
	0x03389DF4 MOV W28, W31
	0x03389DF8 MOV X27, X26
	0x03389DFC MOV X26, X27
	0x03389E00 LDR X0, [X21]
	0x03389E04 LDR W8, [X0 + 0xE0]
	0x03389E08 CBNZ W8, 0x3389E10
	0x03389E0C BL 0x1C16DFC
	0x03389E10 AND W8, W28, 0xFFFF
	0x03389E14 CMP W8, 0x20
	0x03389E18 SUB W9, W8, 0x9
	0x03389E1C CSET W8, NE
	0x03389E20 CMP W9, 0x4
	0x03389E24 CSET W9, HI
	0x03389E28 TBZ X23, 0x1, 0x3389E34
	0x03389E2C AND W8, W8, W9, 0x0
	0x03389E30 CBZ W8, 0x3389EF8
	0x03389E34 TBZ X23, 0x3, 0x3389EB0
	0x03389E38 TBNZ X19, 0x0, 0x3389EB0
	0x03389E3C LDR X0, [X21]
	0x03389E40 LDR X27, [X22 + 0x28]
	0x03389E44 LDR W8, [X0 + 0xE0]
	0x03389E48 CBNZ W8, 0x3389E50
	0x03389E4C BL 0x1C16DFC
	0x03389E50 MOV X0, X26
	0x03389E54 MOV X1, X24
	0x03389E58 MOV X2, X27
	0x03389E5C BL 0x3389F94
	0x03389E60 MOV X27, X0
	0x03389E64 CBNZ X0, 0x3389EA4
	0x03389E68 LDR X0, [X21]
	0x03389E6C LDR X27, [X22 + 0x30]
	0x03389E70 LDR W8, [X0 + 0xE0]
	0x03389E74 CBNZ W8, 0x3389E7C
	0x03389E78 BL 0x1C16DFC
	0x03389E7C MOV X0, X26
	0x03389E80 MOV X1, X24
	0x03389E84 MOV X2, X27
	0x03389E88 BL 0x3389F94
	0x03389E8C CBZ X0, 0x3389EB0
	0x03389E90 MOV X27, X0
	0x03389E94 LDR X0, [X31 + 0x28]
	0x03389E98 MOVZ W1, 0x1
	0x03389E9C MOV X2, X31
	0x03389EA0 BL 0x338C39C
	0x03389EA4 ORR W19, W19, 0x1
	0x03389EA8 SUB X26, X27, 0x2
	0x03389EAC B 0x3389EF8
	0x03389EB0 AND W8, W28, 0xFFFF
	0x03389EB4 CMP W8, 0x29
	0x03389EB8 B.NE 0x3389EC8
	0x03389EBC TBZ X19, 0x1, 0x3389EC8
	0x03389EC0 AND W19, W19, 0xFFFFFFFD
	0x03389EC4 B 0x3389EF8
	0x03389EC8 CBZ X25, 0x3389F10
	0x03389ECC LDR X0, [X21]
	0x03389ED0 LDR W8, [X0 + 0xE0]
	0x03389ED4 CBNZ W8, 0x3389EDC
	0x03389ED8 BL 0x1C16DFC
	0x03389EDC MOV X0, X26
	0x03389EE0 MOV X1, X24
	0x03389EE4 MOV X2, X25
	0x03389EE8 BL 0x3389F94
	0x03389EEC CBZ X0, 0x3389F10
	0x03389EF0 MOV X25, X31
	0x03389EF4 SUB X26, X0, 0x2
	0x03389EF8 ADD X26, X26, 0x2
	0x03389EFC CMP X26, X24
	0x03389F00 MOV W28, W31
	0x03389F04 B.CS 0x3389E00
	0x03389F08 LDRH W28, [X26]
	0x03389F0C B 0x3389E00
	0x03389F10 TBNZ X19, 0x1, 0x3389F48
	0x03389F14 LDR X20, [X31 + 0x8]
	0x03389F18 TBNZ X19, 0x3, 0x3389F40
	0x03389F1C LDR W8, [X31 + 0x10]
	0x03389F20 TBNZ X8, 0x0, 0x3389F2C
	0x03389F24 LDR X8, [X31 + 0x28]
	0x03389F28 STR W31, [X8 + 0x4]
	0x03389F2C TBNZ X19, 0x4, 0x3389F40
	0x03389F30 LDR X0, [X31 + 0x28]
	0x03389F34 MOV W1, W31
	0x03389F38 MOV X2, X31
	0x03389F3C BL 0x338C39C
	0x03389F40 MOVZ W0, 0x1
	0x03389F44 B 0x3389F50
	0x03389F48 LDR X20, [X31 + 0x8]
	0x03389F4C MOV W0, W31
	0x03389F50 STR X26, [X20]
	0x03389F54 LDP X20, X19, [X31 + 0x80]
	0x03389F58 LDP X22, X21, [X31 + 0x70]
	0x03389F5C LDP X24, X23, [X31 + 0x60]
	0x03389F60 LDP X26, X25, [X31 + 0x50]
	0x03389F64 LDP X28, X27, [X31 + 0x40]
	0x03389F68 LDP X29, X30, [X31 + 0x30]
	0x03389F6C ADD X31, X31, 0x90
	0x03389F70 RET
	0x03389F74 BL 0x1C16F20
	0x03389F78 CMP W0, 0x20
	0x03389F7C SUB W8, W0, 0x9
	0x03389F80 CSET W9, EQ
	0x03389F84 CMP W8, 0x5
	0x03389F88 CSET W8, CC
	0x03389F8C ORR W0, W9, W8, 0x0
	0x03389F90 RET
	0x03389F94 STP X30, X21, [X31 - 0x20]!
	0x03389F98 STP X20, X19, [X31 + 0x10]
	0x03389F9C MOV X20, X2
	0x03389FA0 MOV X21, X1
	0x03389FA4 MOV X19, X0
	0x03389FA8 CBZ X2, 0x3389FB8
	0x03389FAC MOV X0, X31
	0x03389FB0 BL 0x32C1424
	0x03389FB4 ADD X20, X20, W0, SXTW
	0x03389FB8 LDRH W8, [X20]
	0x03389FBC CBZ W8, 0x338A008
	0x03389FC0 CMP X19, X21
	0x03389FC4 B.CS 0x3389FD0
	0x03389FC8 LDRH W9, [X19]
	0x03389FCC B 0x3389FD4
	0x03389FD0 MOV W9, W31
	0x03389FD4 CMP W9, W8, UXTH
	0x03389FD8 B.EQ 0x3389FF4
	0x03389FDC CMP W9, 0x20
	0x03389FE0 MOV X0, X31
	0x03389FE4 B.NE 0x338A00C
	0x03389FE8 AND W8, W8, 0xFFFF
	0x03389FEC CMP W8, 0xA0
	0x03389FF0 B.NE 0x338A00C
	0x03389FF4 LDRH W8, [X20 + 0x2]!
	0x03389FF8 ADD X19, X19, 0x2
	0x03389FFC CBNZ W8, 0x3389FC0
	0x0338A000 MOV X0, X19
	0x0338A004 B 0x338A00C
	0x0338A008 MOV X0, X31
	0x0338A00C LDP X20, X19, [X31 + 0x10]
	0x0338A010 LDP X30, X21, [X31], #0x20
	0x0338A014 RET
	0x0338A018 SUB W8, W0, 0x30
	0x0338A01C CMP W8, 0xA
	0x0338A020 CSET W0, CC
	0x0338A024 RET
	0x0338A028 SUB X31, X31, 0x60
	0x0338A02C STP X30, X27, [X31 + 0x10]
	0x0338A030 STP X26, X25, [X31 + 0x20]
	0x0338A034 STP X24, X23, [X31 + 0x30]
	0x0338A038 STP X22, X21, [X31 + 0x40]
	0x0338A03C STP X20, X19, [X31 + 0x50]
	0x0338A040 ADRP X25, 0x1052000
	0x0338A044 ADRP X27, 0xD98000
	0x0338A048 ADRP X26, 0xD9E000
	0x0338A04C LDRB W8, [X25 + 0xFF8]
	0x0338A050 LDR X27, [X27 + 0x20]
	0x0338A054 LDR X26, [X26 + 0x78]
	0x0338A058 MOV W24, W5
	0x0338A05C MOV X21, X4
	0x0338A060 MOV X22, X3
	0x0338A064 MOV W23, W2
	0x0338A068 MOV X19, X1
	0x0338A06C MOV X20, X0
	0x0338A070 TBNZ X8, 0x0, 0x338A0A0
	0x0338A074 ADRP X0, 0xD98000
	0x0338A078 LDR X0, [X0 + 0x20]
	0x0338A07C BL 0x1C16CF4
	0x0338A080 ADRP X0, 0xD9E000
	0x0338A084 LDR X0, [X0 + 0x78]
	0x0338A088 BL 0x1C16CF4
	0x0338A08C ADRP X0, 0xD98000
	0x0338A090 LDR X0, [X0 + 0x28]
	0x0338A094 BL 0x1C16CF4
	0x0338A098 MOVZ W8, 0x1
	0x0338A09C STRB W8, [X25 + 0xFF8]
	0x0338A0A0 LDR X2, [X27]
	0x0338A0A4 MOV X0, X20
	0x0338A0A8 MOV X1, X19
	0x0338A0AC BL 0x2218CF8
	0x0338A0B0 LDR X8, [X26]
	0x0338A0B4 STR X0, [X31 + 0x8]
	0x0338A0B8 MOV X25, X0
	0x0338A0BC LDR W9, [X8 + 0xE0]
	0x0338A0C0 CBNZ W9, 0x338A0CC
	0x0338A0C4 MOV X0, X8
	0x0338A0C8 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X20, 0x1054000
	015 Move W8, [X20+4075]
	016 Move X27, X5
	017 Move X19, X4
	018 Move X25, X3
	019 Move W22, W2
	020 Move X23, X1
	021 Move X21, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {46}
	026 Move X0, 0xDA2000
	027 Move X0, [X0+4056]
	028 Call 0x1C17CF4
	029 Move X0, 0xDA0000
	030 Move X0, [X0+120]
	031 Call 0x1C17CF4
	032 Move X0, 0xD9F000
	033 Move X0, [X0+2024]
	034 Call 0x1C17CF4
	035 Move X0, 0xD9A000
	036 Move X0, [X0+40]
	037 Call 0x1C17CF4
	038 Move X0, 0xD70000
	039 Move X0, [X0+1016]
	040 Call 0x1C17CF4
	041 Move X0, 0xD6C000
	042 Move X0, [X0+680]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X20+4075], W8
	046 Compare W23, 0
	047 JumpIfEqual {378}
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Move TEMP, X22
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {62}
	053 Move W24, W31
	054 Move X20, X23
	055 ShiftRight X20, 32
	056 And X20, X20, 0x7FFFFFFF
	057 Move TEMP, X22
	058 And TEMP, TEMP, 4
	059 Compare TEMP, 4
	060 JumpIfEqual {84}
	061 Move W25, 1
	062 Move X26, 0xDA0000
	063 Move X26, [X26+120]
	064 Move X0, [X26]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Subtract W8, W28, 9
	070 NotImplemented "Instruction CMP not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move W24, 1
	073 Move X0, [X26]
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Subtract W8, W28, 9
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Add W24, W24, 1
	082 NotImplemented "Instruction CMP not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Compare X25, 0
	085 JumpIfEqual {400}
	086 Move X8, 0xD70000
	087 Move X26, [X25+40]
	088 Move X25, [X25+48]
	089 Move X8, [X8+1016]
	090 Move X2, X31
	091 Move X0, X26
	092 Move X1, [X8]
	093 Call String.op_Equality, X0, X1
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {113}
	098 Move X8, 0xD6C000
	099 Move X8, [X8+680]
	100 Move X0, X25
	101 Move X2, X31
	102 Move X1, [X8]
	103 Call String.op_Equality, X0, X1
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {113}
	108 NotImplemented "Instruction CMP not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Add W24, W24, 1
	111 NotImplemented "Instruction CMP not yet implemented."
	112 NotImplemented "Instruction LDRH not yet implemented."
	113 Move X8, 0xD9F000
	114 Move X8, [X8+2024]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X20, [X8]
	117 Move X0, X31
	118 Call ThrowHelper.ThrowArgumentOutOfRangeException
	119 Move X0, [X20+32]
	120 Move W8, [X0+309]
	121 Move TEMP, X8
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfEqual {126}
	125 Call 0x1C5D684
	126 Move X0, X26
	127 Move X1, X31
	128 Subtract W23, W23, W24
	129 Add X21, X21, W24
	130 Call String.IsNullOrEmpty, X0
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfEqual {171}
	135 Move X20, 0x1051000
	136 Move W8, [X20+1890]
	137 Compare W8, 0
	138 JumpIfNotEqual {144}
	139 Move X0, 0xD92000
	140 Move X0, [X0+656]
	141 Call 0x1C17CF4
	142 Move W8, 1
	143 Move [X20+1890], W8
	144 Compare X26, 0
	145 JumpIfEqual {152}
	146 Move X0, X26
	147 Move X1, X31
	148 Call String.GetRawStringData, X0
	149 Move W3, [X26+16]
	150 Move X2, X0
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X2, X31
	153 Move X3, X31
	154 Move X8, 0xDA2000
	155 Move X8, [X8+4056]
	156 Move X0, X21
	157 Move X1, X23
	158 Move X4, [X8]
	159 Call 0x338D288
	160 Move TEMP, X0
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfNotEqual {171}
	164 Compare X26, 0
	165 JumpIfEqual {400}
	166 Move W24, [X26+16]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X8, W24
	169 NotImplemented "Instruction LDRH not yet implemented."
	170 Move X20, X31
	171 Move X0, X25
	172 Move X1, X31
	173 Call String.IsNullOrEmpty, X0
	174 Move TEMP, X0
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfEqual {214}
	178 Move X20, 0x1051000
	179 Move W8, [X20+1890]
	180 Compare W8, 0
	181 JumpIfNotEqual {187}
	182 Move X0, 0xD92000
	183 Move X0, [X0+656]
	184 Call 0x1C17CF4
	185 Move W8, 1
	186 Move [X20+1890], W8
	187 Compare X25, 0
	188 JumpIfEqual {194}
	189 Move X0, X25
	190 Move X1, X31
	191 Call String.GetRawStringData, X0
	192 Move W3, [X25+16]
	193 Move X2, X0
	194 Move X2, X31
	195 Move X3, X31
	196 Move X8, 0xDA2000
	197 Move X8, [X8+4056]
	198 Move X0, X21
	199 Move X1, X23
	200 Move X4, [X8]
	201 Call 0x338D288
	202 Move TEMP, X0
	203 And TEMP, TEMP, 1
	204 Compare TEMP, 1
	205 JumpIfNotEqual {214}
	206 Compare X25, 0
	207 JumpIfEqual {400}
	208 Move W24, [X25+16]
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X8, W24
	211 NotImplemented "Instruction LDRH not yet implemented."
	212 Move X20, X31
	213 Move W25, W31
	214 Move X20, X31
	215 Move W24, W31
	216 Move W25, 1
	217 Move X29, 0xDA0000
	218 Move X29, [X29+120]
	219 Move X0, [X29]
	220 Move W8, [X0+224]
	221 Compare W8, 0
	222 JumpIfNotEqual {224}
	223 Call 0x1C17DFC
	224 Subtract W26, W28, 48
	225 NotImplemented "Instruction CMP not yet implemented."
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Move [X31+28], W25
	228 Add W24, W24, 1
	229 NotImplemented "Instruction CMP not yet implemented."
	230 NotImplemented "Instruction LDRH not yet implemented."
	231 Subtract W26, W25, 48
	232 Move X0, [X29]
	233 Move W8, [X0+224]
	234 Compare W8, 0
	235 JumpIfNotEqual {237}
	236 Call 0x1C17DFC
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Add W8, W24, 1
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Move [X31+8], X20
	241 Move [X31+16], X27
	242 Move W27, W24
	243 Add W24, W24, 9
	244 Move TEMP, 7
	245 Not TEMP
	246 Move W20, TEMP
	247 NotImplemented "Instruction CSET not yet implemented."
	248 Move W28, 10
	249 Move TEMP, X8
	250 And TEMP, TEMP, 1
	251 Compare TEMP, 1
	252 JumpIfNotEqual {304}
	253 Move X0, [X29]
	254 Add W8, W27, W20
	255 Add W8, W8, 9
	256 NotImplemented "Instruction LDRH not yet implemented."
	257 Move W9, [X0+224]
	258 Compare W9, 0
	259 JumpIfNotEqual {261}
	260 Call 0x1C17DFC
	261 Subtract W8, W25, 48
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Add W8, W27, W20
	264 Add W9, W8, 10
	265 NotImplemented "Instruction MADD not yet implemented."
	266 NotImplemented "Instruction CMP not yet implemented."
	267 NotImplemented "Instruction CSET not yet implemented."
	268 Add W20, W20, 1
	269 Subtract W26, W10, 48
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Move X0, [X29]
	272 NotImplemented "Instruction LDRH not yet implemented."
	273 Move W8, [X0+224]
	274 Compare W8, 0
	275 JumpIfNotEqual {277}
	276 Call 0x1C17DFC
	277 Move X20, [X31+8]
	278 Subtract W8, W25, 48
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move W9, 0x9999
	281 Add W24, W27, 10
	282 Move X27, [X31+16]
	283 NotImplemented "Instruction MOVK not yet implemented."
	284 Add W10, W9, 1
	285 NotImplemented "Instruction CMP not yet implemented."
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Move W28, W31
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Move W28, 1
	290 Move W9, 10
	291 NotImplemented "Instruction CMP not yet implemented."
	292 NotImplemented "Instruction MADD not yet implemented."
	293 Move X0, [X29]
	294 NotImplemented "Instruction LDRH not yet implemented."
	295 Move W8, [X0+224]
	296 Compare W8, 0
	297 JumpIfNotEqual {299}
	298 Call 0x1C17DFC
	299 Subtract W8, W25, 48
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Add W24, W24, 1
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Move W28, 1
	304 Move X27, [X31+16]
	305 Move W26, W31
	306 Add W8, W27, W20
	307 Move X20, [X31+8]
	308 Move X27, [X31+16]
	309 Move W28, W31
	310 Add W24, W8, 9
	311 Move W26, W31
	312 Add W24, W24, 1
	313 NotImplemented "Instruction CMP not yet implemented."
	314 NotImplemented "Instruction LDRH not yet implemented."
	315 Move W25, W31
	316 Move X27, [X31+16]
	317 Move W28, W31
	318 Move X0, [X29]
	319 Move W8, [X0+224]
	320 Compare W8, 0
	321 JumpIfNotEqual {323}
	322 Call 0x1C17DFC
	323 Subtract W8, W25, 9
	324 NotImplemented "Instruction CMP not yet implemented."
	325 Move TEMP, X22
	326 And TEMP, TEMP, 2
	327 Compare TEMP, 2
	328 JumpIfNotEqual {378}
	329 Add W24, W24, 1
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Move X25, X20
	332 Add X20, X21, W24
	333 NotImplemented "Instruction CMP not yet implemented."
	334 Move X0, [X29]
	335 NotImplemented "Instruction LDRH not yet implemented."
	336 Move W8, [X0+224]
	337 Compare W8, 0
	338 JumpIfNotEqual {340}
	339 Call 0x1C17DFC
	340 Subtract W8, W22, 9
	341 NotImplemented "Instruction CMP not yet implemented."
	342 Add W24, W24, 1
	343 NotImplemented "Instruction CMP not yet implemented."
	344 Add X20, X20, 2
	345 NotImplemented "Instruction CMP not yet implemented."
	346 Move X20, X25
	347 NotImplemented "Instruction CMP not yet implemented."
	348 NotImplemented "Instruction CMP not yet implemented."
	349 Move X0, [X29]
	350 Move W22, W23
	351 NotImplemented "Instruction BFM not yet implemented."
	352 Move W8, [X0+224]
	353 Compare W8, 0
	354 JumpIfNotEqual {356}
	355 Call 0x1C17DFC
	356 Move X0, X21
	357 Move X1, X22
	358 Move W2, W24
	359 Call Number.TrailingZeros, X0, X1
	360 Move TEMP, X0
	361 And TEMP, TEMP, 1
	362 Compare TEMP, 1
	363 JumpIfNotEqual {378}
	364 And W28, W28, 1
	365 Move TEMP, X28
	366 And TEMP, TEMP, 1
	367 Compare TEMP, 1
	368 JumpIfEqual {395}
	369 Move W9, [X31+28]
	370 NotImplemented "Instruction CMP not yet implemented."
	371 NotImplemented "Instruction CSET not yet implemented."
	372 Or W8, W9, W8
	373 Move TEMP, X8
	374 And TEMP, TEMP, 1
	375 Compare TEMP, 1
	376 JumpIfNotEqual {395}
	377 Move W0, 1
	378 Move W26, W31
	379 Move W0, W31
	380 Move [X19], W26
	381 Move X20, [X31+112]
	382 Move X19, [X31+120]
	383 Move X22, [X31+96]
	384 Move X21, [X31+104]
	385 Move X24, [X31+80]
	386 Move X23, [X31+88]
	387 Move X26, [X31+64]
	388 Move X25, [X31+72]
	389 Move X28, [X31+48]
	390 Move X27, [X31+56]
	391 Move X29, [X31+32]
	392 Move X30, [X31+40]
	393 Add X31, X31, 128
	394 Return X0
	395 Move W26, W31
	396 Move W0, W31
	397 Move W8, 1
	398 Move [X27], W8
	399 Call 0x1C17F28
	400 Call 0x1C17F20

Method: System.Boolean TryParseUInt32HexNumberStyle(System.ReadOnlySpan`1<System.Char> value, System.Globalization.NumberStyles styles, System.Globalization.NumberFormatInfo info, out System.UInt32 result, ref System.Boolean failureIsOverflow)

Disassembly:
	0x03388B84 STRB W8, [X20 + 0xFEB]
	0x03388B88 CBZ W23, 0x3389084
	0x03388B8C LDRH W28, [X21]
	0x03388B90 TBNZ X22, 0x0, 0x3388BA8
	0x03388B94 MOV W24, W31
	0x03388B98 UBFM X20, X23, 0x20, 0x3F
	0x03388B9C TBNZ X22, 0x2, 0x3388C14
	0x03388BA0 MOVZ W25, 0x1
	0x03388BA4 B 0x3388DE8
	0x03388BA8 ADRP X26, 0xDA0000
	0x03388BAC LDR X26, [X26 + 0x78]
	0x03388BB0 LDR X0, [X26]
	0x03388BB4 LDR W8, [X0 + 0xE0]
	0x03388BB8 CBNZ W8, 0x3388BC0
	0x03388BBC BL 0x1C16DFC
	0x03388BC0 SUB W8, W28, 0x9
	0x03388BC4 CMP W8, 0x5
	0x03388BC8 B.CS 0x3388CF8
	0x03388BCC CMP W23, 0x2
	0x03388BD0 B.CC 0x3389084
	0x03388BD4 MOVZ W24, 0x1
	0x03388BD8 LDR X0, [X26]
	0x03388BDC LDRH W28, [X21, W24, SXTW]
	0x03388BE0 LDR W8, [X0 + 0xE0]
	0x03388BE4 CBNZ W8, 0x3388BEC
	0x03388BE8 BL 0x1C16DFC
	0x03388BEC SUB W8, W28, 0x9
	0x03388BF0 CMP W8, 0x5
	0x03388BF4 B.CS 0x3388C08
	0x03388BF8 ADD W24, W24, 0x1
	0x03388BFC CMP W23, W24
	0x03388C00 B.NE 0x3388BD8
	0x03388C04 B 0x3389084
	0x03388C08 CMP W28, 0x20
	0x03388C0C B.EQ 0x3388BF8
	0x03388C10 B 0x3388B98
	0x03388C14 CBZ X25, 0x33890C8
	0x03388C18 ADRP X8, 0xD70000
	0x03388C1C LDP X26, X25, [X25 + 0x28]
	0x03388C20 LDR X8, [X8 + 0x3F8]
	0x03388C24 MOV X2, X31
	0x03388C28 MOV X0, X26
	0x03388C2C LDR X1, [X8]
	0x03388C30 BL 0x321BA08
	0x03388C34 TBZ X0, 0x0, 0x3388C78
	0x03388C38 ADRP X8, 0xD6C000
	0x03388C3C LDR X8, [X8 + 0x2A8]
	0x03388C40 MOV X0, X25
	0x03388C44 MOV X2, X31
	0x03388C48 LDR X1, [X8]
	0x03388C4C BL 0x321BA08
	0x03388C50 TBZ X0, 0x0, 0x3388C78
	0x03388C54 CMP W28, 0x2D
	0x03388C58 B.EQ 0x3388F84
	0x03388C5C CMP W28, 0x2B
	0x03388C60 B.NE 0x3388BA0
	0x03388C64 ADD W24, W24, 0x1
	0x03388C68 CMP W24, W23
	0x03388C6C B.CS 0x3389084
	0x03388C70 LDRH W28, [X21, W24, SXTW]
	0x03388C74 B 0x3388BA0
	0x03388C78 ADRP X8, 0xD9F000
	0x03388C7C LDR X8, [X8 + 0x7E8]
	0x03388C80 CMP W24, W23
	0x03388C84 LDR X20, [X8]
	0x03388C88 B.LS 0x3388C94
	0x03388C8C MOV X0, X31
	0x03388C90 BL 0x339D6EC
	0x03388C94 LDR X0, [X20 + 0x20]
	0x03388C98 LDRB W8, [X0 + 0x135]
	0x03388C9C TBNZ X8, 0x0, 0x3388CA4
	0x03388CA0 BL 0x1C5C684
	0x03388CA4 MOV X0, X26
	0x03388CA8 MOV X1, X31
	0x03388CAC SUB W23, W23, W24
	0x03388CB0 ADD X21, X21, W24, 0x1, SXTW
	0x03388CB4 BL 0x32277A8
	0x03388CB8 TBNZ X0, 0x0, 0x3388D48
	0x03388CBC ADRP X20, 0x1051000
	0x03388CC0 LDRB W8, [X20 + 0x762]
	0x03388CC4 CBNZ W8, 0x3388CDC
	0x03388CC8 ADRP X0, 0xD92000
	0x03388CCC LDR X0, [X0 + 0x290]
	0x03388CD0 BL 0x1C16CF4
	0x03388CD4 MOVZ W8, 0x1
	0x03388CD8 STRB W8, [X20 + 0x762]
	0x03388CDC CBZ X26, 0x3388D04
	0x03388CE0 MOV X0, X26
	0x03388CE4 MOV X1, X31
	0x03388CE8 BL 0x3225708
	0x03388CEC LDR W3, [X26 + 0x10]
	0x03388CF0 MOV X2, X0
	0x03388CF4 B 0x3388D0C
	0x03388CF8 CMP W28, 0x20
	0x03388CFC B.NE 0x3388B94
	0x03388D00 B 0x3388BCC
	0x03388D04 MOV X2, X31
	0x03388D08 MOV X3, X31
	0x03388D0C ADRP X8, 0xDA2000
	0x03388D10 LDR X8, [X8 + 0xFD8]
	0x03388D14 MOV X0, X21
	0x03388D18 MOV X1, X23
	0x03388D1C LDR X4, [X8]
	0x03388D20 BL 0x338C288
	0x03388D24 TBZ X0, 0x0, 0x3388D48
	0x03388D28 CBZ X26, 0x33890C8
	0x03388D2C LDR W24, [X26 + 0x10]
	0x03388D30 CMP W24, W23
	0x03388D34 B.CS 0x3389084
	0x03388D38 SXTW X8, W24
	0x03388D3C LDRH W28, [X21, X8, LSL #1]
	0x03388D40 MOV X20, X31
	0x03388D44 B 0x3388DE4
	0x03388D48 MOV X0, X25
	0x03388D4C MOV X1, X31
	0x03388D50 BL 0x32277A8
	0x03388D54 TBNZ X0, 0x0, 0x3388DDC
	0x03388D58 ADRP X20, 0x1051000
	0x03388D5C LDRB W8, [X20 + 0x762]
	0x03388D60 CBNZ W8, 0x3388D78
	0x03388D64 ADRP X0, 0xD92000
	0x03388D68 LDR X0, [X0 + 0x290]
	0x03388D6C BL 0x1C16CF4
	0x03388D70 MOVZ W8, 0x1
	0x03388D74 STRB W8, [X20 + 0x762]
	0x03388D78 CBZ X25, 0x3388D94
	0x03388D7C MOV X0, X25
	0x03388D80 MOV X1, X31
	0x03388D84 BL 0x3225708
	0x03388D88 LDR W3, [X25 + 0x10]
	0x03388D8C MOV X2, X0
	0x03388D90 B 0x3388D9C
	0x03388D94 MOV X2, X31
	0x03388D98 MOV X3, X31
	0x03388D9C ADRP X8, 0xDA2000
	0x03388DA0 LDR X8, [X8 + 0xFD8]
	0x03388DA4 MOV X0, X21
	0x03388DA8 MOV X1, X23
	0x03388DAC LDR X4, [X8]
	0x03388DB0 BL 0x338C288
	0x03388DB4 TBZ X0, 0x0, 0x3388DDC
	0x03388DB8 CBZ X25, 0x33890C8
	0x03388DBC LDR W24, [X25 + 0x10]
	0x03388DC0 CMP W24, W23
	0x03388DC4 B.CS 0x3389084
	0x03388DC8 SXTW X8, W24
	0x03388DCC LDRH W28, [X21, X8, LSL #1]
	0x03388DD0 MOV X20, X31
	0x03388DD4 MOV W25, W31
	0x03388DD8 B 0x3388DE8
	0x03388DDC MOV X20, X31
	0x03388DE0 MOV W24, W31
	0x03388DE4 MOVZ W25, 0x1
	0x03388DE8 ADRP X29, 0xDA0000
	0x03388DEC LDR X29, [X29 + 0x78]
	0x03388DF0 LDR X0, [X29]
	0x03388DF4 LDR W8, [X0 + 0xE0]
	0x03388DF8 CBNZ W8, 0x3388E00
	0x03388DFC BL 0x1C16DFC
	0x03388E00 SUB W26, W28, 0x30
	0x03388E04 CMP W26, 0x9
	0x03388E08 B.HI 0x3389084
	0x03388E0C CMP W28, 0x30
	0x03388E10 STR W25, [X31 + 0x1C]
	0x03388E14 B.NE 0x3388E48
	0x03388E18 ADD W24, W24, 0x1
	0x03388E1C CMP W24, W23
	0x03388E20 B.CS 0x3388F60
	0x03388E24 LDRH W25, [X21, W24, SXTW]
	0x03388E28 SUBS W26, W25, 0x30
	0x03388E2C B.EQ 0x3388E18
	0x03388E30 LDR X0, [X29]
	0x03388E34 LDR W8, [X0 + 0xE0]
	0x03388E38 CBNZ W8, 0x3388E40
	0x03388E3C BL 0x1C16DFC
	0x03388E40 CMP W26, 0x9
	0x03388E44 B.HI 0x3388F7C
	0x03388E48 ADD W8, W24, 0x1
	0x03388E4C CMP W8, W23
	0x03388E50 STP X20, X27, [X31 + 0x8]
	0x03388E54 MOV W27, W24
	0x03388E58 ADD W24, W24, 0x9
	0x03388E5C MOVN W20, 0x7
	0x03388E60 CSET W8, CC
	0x03388E64 MOVZ W28, 0xA
	0x03388E68 TBZ X8, 0x0, 0x3388F58
	0x03388E6C LDR X0, [X29]
	0x03388E70 ADD W8, W27, W20
	0x03388E74 ADD W8, W8, 0x9
	0x03388E78 LDRH W25, [X21, W8, SXTW]
	0x03388E7C LDR W9, [X0 + 0xE0]
	0x03388E80 CBNZ W9, 0x3388E88
	0x03388E84 BL 0x1C16DFC
	0x03388E88 SUB W8, W25, 0x30
	0x03388E8C CMP W8, 0x9
	0x03388E90 B.HI 0x3388F68
	0x03388E94 ADD W8, W27, W20
	0x03388E98 ADD W9, W8, 0xA
	0x03388E9C MADD W10, W26, W28, W25
	0x03388EA0 CMP W9, W23
	0x03388EA4 CSET W8, CC
	0x03388EA8 ADDS W20, W20, 0x1
	0x03388EAC SUB W26, W10, 0x30
	0x03388EB0 B.CC 0x3388E68
	0x03388EB4 CMP W9, W23
	0x03388EB8 B.CS 0x3388F58
	0x03388EBC LDR X0, [X29]
	0x03388EC0 LDRH W25, [X21, W24, SXTW]
	0x03388EC4 LDR W8, [X0 + 0xE0]
	0x03388EC8 CBNZ W8, 0x3388ED0
	0x03388ECC BL 0x1C16DFC
	0x03388ED0 LDR X20, [X31 + 0x8]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X24, 0x1055000
	013 Move W8, [X24+4076]
	014 Move X20, X5
	015 Move X19, X4
	016 Move W23, W2
	017 Move X21, X1
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xDA1000
	024 Move X0, [X0+120]
	025 Call 0x1C17CF4
	026 Move X0, 0xD9B000
	027 Move X0, [X0+40]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X24+4076], W8
	031 Compare W21, 0
	032 JumpIfEqual {146}
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move TEMP, X23
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {67}
	038 Move W24, W31
	039 Move X25, 0xDA1000
	040 Move X25, [X25+120]
	041 Move X0, [X25]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X25]
	047 Move X8, [X0+184]
	048 Move X8, [X8+40]
	049 Compare X8, 0
	050 JumpIfEqual {205}
	051 Move W9, [X8+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add X10, X8, W28
	054 Move W10, [X10+32]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Add W24, W24, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Add X10, X8, X28
	063 Move W10, [X10+32]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move W26, W31
	066 Move W27, W31
	067 Move X25, 0xDA1000
	068 Move X25, [X25+120]
	069 Move X0, [X25]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Subtract W8, W28, 9
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move W24, 1
	078 Move X0, [X25]
	079 NotImplemented "Instruction LDRH not yet implemented."
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Subtract W8, W28, 9
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Add W24, W24, 1
	087 NotImplemented "Instruction CMP not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move W10, W24
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Add X11, X8, W28
	093 Move W26, [X11+32]
	094 Add W12, W10, 1
	095 NotImplemented "Instruction CMP not yet implemented."
	096 NotImplemented "Instruction CSET not yet implemented."
	097 Add W24, W10, 8
	098 Move TEMP, 6
	099 Not TEMP
	100 Move W11, TEMP
	101 Move TEMP, X12
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {182}
	105 Add W12, W10, W11
	106 Add W12, W12, 8
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Add X12, X8, X28
	110 Move W13, [X12+32]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Add W12, W10, W11
	113 Add W14, W12, 9
	114 NotImplemented "Instruction CMP not yet implemented."
	115 NotImplemented "Instruction CSET not yet implemented."
	116 Add W11, W11, 1
	117 Add W26, W13, W26
	118 NotImplemented "Instruction CMP not yet implemented."
	119 NotImplemented "Instruction LDRH not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Add X11, X8, X28
	122 Move W11, [X11+32]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Add W24, W10, 9
	125 NotImplemented "Instruction CMP not yet implemented."
	126 NotImplemented "Instruction LDRH not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Add X10, X8, X28
	129 Move W10, [X10+32]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Add W24, W24, 1
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Add W8, W10, W11
	134 Move W27, W31
	135 Add W24, W8, 8
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1C17DFC
	140 Subtract W8, W28, 9
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move TEMP, X23
	143 And TEMP, TEMP, 2
	144 Compare TEMP, 2
	145 JumpIfEqual {163}
	146 Move W26, W31
	147 Move W0, W31
	148 Move [X19], W26
	149 Move X20, [X31+80]
	150 Move X19, [X31+88]
	151 Move X22, [X31+64]
	152 Move X21, [X31+72]
	153 Move X24, [X31+48]
	154 Move X23, [X31+56]
	155 Move X26, [X31+32]
	156 Move X25, [X31+40]
	157 Move X28, [X31+16]
	158 Move X27, [X31+24]
	159 And W0, W0, 1
	160 Move X30, [X31+96]
	161 Return X0
	162 Move W26, W31
	163 Add W24, W24, 1
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Add X23, X22, W24
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X0, [X25]
	168 NotImplemented "Instruction LDRH not yet implemented."
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {173}
	172 Call 0x1C17DFC
	173 Subtract W8, W28, 9
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Add W24, W24, 1
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Add X23, X23, 2
	178 NotImplemented "Instruction CMP not yet implemented."
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Compare W27, 0
	181 JumpIfNotEqual {200}
	182 Move W0, 1
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move X0, [X25]
	185 Move W8, [X0+224]
	186 Compare W8, 0
	187 JumpIfNotEqual {189}
	188 Call 0x1C17DFC
	189 Move X0, X22
	190 Move X1, X21
	191 Move W2, W24
	192 Call Number.TrailingZeros, X0, X1
	193 And W31, W0, 1
	194 And W8, W27, W0
	195 NotImplemented "Instruction CSEL not yet implemented."
	196 Move TEMP, X8
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfNotEqual {148}
	200 Move W8, 1
	201 Move W26, W31
	202 Move W0, W31
	203 Move [X20], W8
	204 Move W27, 1
	205 Call 0x1C17F20
	206 Call 0x1C17F28

Method: System.Boolean TryParseUInt64(System.ReadOnlySpan`1<System.Char> value, System.Globalization.NumberStyles styles, System.Globalization.NumberFormatInfo info, out System.UInt64 result)

Disassembly:
	0x0338B36C ADD X9, X0, W1, 0x1, SXTW
	0x0338B370 LDRH W8, [X0], #0x2
	0x0338B374 CMP X0, X9
	0x0338B378 SUB W8, W8, 0x30
	0x0338B37C B.CS 0x338B398
	0x0338B380 MOVZ W10, 0xA
	0x0338B384 LDRH W11, [X0], #0x2
	0x0338B388 MADD W8, W8, W10, W11
	0x0338B38C CMP X0, X9
	0x0338B390 SUB W8, W8, 0x30
	0x0338B394 B.CC 0x338B384
	0x0338B398 MOV W0, W8
	0x0338B39C RET
	0x0338B3A0 UMADDL X0, X1, X0, X31
	0x0338B3A4 RET
	0x0338B3A8 STP X30, X23, [X31 - 0x30]!
	0x0338B3AC STP X22, X21, [X31 + 0x10]
	0x0338B3B0 STP X20, X19, [X31 + 0x20]
	0x0338B3B4 ADRP X22, 0x1051000
	0x0338B3B8 ADRP X23, 0xD9D000
	0x0338B3BC LDRB W8, [X22 + 0xFFB]
	0x0338B3C0 LDR X23, [X23 + 0x78]
	0x0338B3C4 MOV X19, X2
	0x0338B3C8 MOV X21, X1
	0x0338B3CC MOV X20, X0
	0x0338B3D0 TBNZ X8, 0x0, 0x338B3E8
	0x0338B3D4 ADRP X0, 0xD9D000
	0x0338B3D8 LDR X0, [X0 + 0x78]
	0x0338B3DC BL 0x1C16CF4
	0x0338B3E0 MOVZ W8, 0x1
	0x0338B3E4 STRB W8, [X22 + 0xFFB]
	0x0338B3E8 LDR X0, [X23]
	0x0338B3EC LDR W8, [X0 + 0xE0]
	0x0338B3F0 CBNZ W8, 0x338B3F8
	0x0338B3F4 BL 0x1C16DFC
	0x0338B3F8 UBFM X8, X20, 0x20, 0x3F
	0x0338B3FC UBFM X9, X21, 0x20, 0x3F
	0x0338B400 AND X10, X21, 0x0
	0x0338B404 AND X11, X20, 0x0
	0x0338B408 MUL X12, X9, X8
	0x0338B40C MUL X8, X10, X8
	0x0338B410 MUL X9, X9, X11
	0x0338B414 ADD X8, X12, X8, 0x20, LSR
	0x0338B418 ADDS X0, X8, X9, 0x20, LSR
	0x0338B41C B.MI 0x338B430
	0x0338B420 LDR W8, [X19]
	0x0338B424 UBFM X0, X0, 0x3F, 0x3E
	0x0338B428 SUB W8, W8, 0x1
	0x0338B42C STR W8, [X19]
	0x0338B430 LDP X20, X19, [X31 + 0x20]
	0x0338B434 LDP X22, X21, [X31 + 0x10]
	0x0338B438 LDP X30, X23, [X31], #0x30
	0x0338B43C RET
	0x0338B440 CMP W0, 0x0
	0x0338B444 CSNEG W0, W0, W0, PL
	0x0338B448 RET
	0x0338B44C STP X30, X27, [X31 - 0x50]!
	0x0338B450 STP X26, X25, [X31 + 0x10]
	0x0338B454 STP X24, X23, [X31 + 0x20]
	0x0338B458 STP X22, X21, [X31 + 0x30]
	0x0338B45C STP X20, X19, [X31 + 0x40]
	0x0338B460 ADRP X20, 0x1051000
	0x0338B464 ADRP X19, 0xD68000
	0x0338B468 LDRB W8, [X20 + 0xFFE]
	0x0338B46C LDR X19, [X19 + 0xAC8]
	0x0338B470 TBNZ X8, 0x0, 0x338B6EC
	0x0338B474 ADRP X0, 0xD90000
	0x0338B478 LDR X0, [X0 + 0x820]
	0x0338B47C BL 0x1C16CF4
	0x0338B480 ADRP X0, 0xD69000
	0x0338B484 LDR X0, [X0 + 0xE58]
	0x0338B488 BL 0x1C16CF4
	0x0338B48C ADRP X0, 0xD9D000
	0x0338B490 LDR X0, [X0 + 0x78]
	0x0338B494 BL 0x1C16CF4
	0x0338B498 ADRP X0, 0xD97000
	0x0338B49C LDR X0, [X0 + 0x708]
	0x0338B4A0 BL 0x1C16CF4
	0x0338B4A4 ADRP X0, 0xD68000
	0x0338B4A8 LDR X0, [X0 + 0xAC8]
	0x0338B4AC BL 0x1C16CF4
	0x0338B4B0 ADRP X0, 0xDA0000
	0x0338B4B4 LDR X0, [X0]
	0x0338B4B8 BL 0x1C16CF4
	0x0338B4BC ADRP X0, 0xDA0000
	0x0338B4C0 LDR X0, [X0 + 0x8]
	0x0338B4C4 BL 0x1C16CF4
	0x0338B4C8 ADRP X0, 0xDA0000
	0x0338B4CC LDR X0, [X0 + 0x10]
	0x0338B4D0 BL 0x1C16CF4
	0x0338B4D4 ADRP X0, 0xDA0000
	0x0338B4D8 LDR X0, [X0 + 0x18]
	0x0338B4DC BL 0x1C16CF4
	0x0338B4E0 ADRP X0, 0xDA0000
	0x0338B4E4 LDR X0, [X0 + 0x20]
	0x0338B4E8 BL 0x1C16CF4
	0x0338B4EC ADRP X0, 0xD70000

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+160], X30
	003 Move [X31+168], X25
	004 Move [X31+176], X24
	005 Move [X31+184], X23
	006 Move [X31+192], X22
	007 Move [X31+200], X21
	008 Move [X31+208], X20
	009 Move [X31+216], X19
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X24+40]
	012 Move X25, 0x1052000
	013 Move X19, X4
	014 Move X23, X3
	015 Move [X31+152], X8
	016 Move W8, [X25+4077]
	017 Move W20, W2
	018 Move X21, X1
	019 Move X22, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0xD9E000
	025 Move X0, [X0+120]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X25+4077], W8
	029 Move X25, 0xD9E000
	030 Move X25, [X25+120]
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move [X31+122], V0
	034 Move [X31+96], V0
	035 Move [X31+104], V0
	036 Move [X31+64], V0
	037 Move [X31+72], V0
	038 Move [X31+32], V0
	039 Move [X31+40], V0
	040 Move [X31+1], V0
	041 Move X0, [X25]
	042 Move [X31+12], W31
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Add X5, X31, 12
	048 Move X0, X22
	049 Move X1, X21
	050 Move W2, W20
	051 Move X3, X23
	052 Move X4, X19
	053 Call Number.TryParseUInt64IntegerStyle, X0, X1, X2, X3, X4
	054 Move TEMP, X20
	055 And TEMP, TEMP, 512
	056 Compare TEMP, 512
	057 JumpIfEqual {94}
	058 NotImplemented "Instruction MOVI not yet implemented."
	059 Move [X31+122], V0
	060 Move [X31+96], V0
	061 Move [X31+104], V0
	062 Move [X31+64], V0
	063 Move [X31+72], V0
	064 Move [X31+32], V0
	065 Move [X31+40], V0
	066 Move [X31+1], V0
	067 Move [X19], X31
	068 Move X0, [X25]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Add X3, X31, 16
	074 Move X0, X22
	075 Move X1, X21
	076 Move W2, W20
	077 Move X4, X23
	078 Move W5, W31
	079 Call Number.TryStringToNumber, X0, X1, X2, X3, X4
	080 Move W8, W0
	081 Move W0, W31
	082 Move TEMP, X8
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {106}
	086 Move X0, [X25]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Add X0, X31, 16
	092 Move X1, X19
	093 Call Number.NumberToUInt64, X0, X1
	094 Move X0, [X25]
	095 Move [X31+12], W31
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Add X5, X31, 12
	101 Move X0, X22
	102 Move X1, X21
	103 Move W2, W20
	104 Move X4, X19
	105 Call Number.TryParseUInt64HexNumberStyle, X0, X1, X2, X3, X4
	106 Move X8, [X24+40]
	107 Move X9, [X31+152]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X20, [X31+208]
	110 Move X19, [X31+216]
	111 Move X22, [X31+192]
	112 Move X21, [X31+200]
	113 Move X24, [X31+176]
	114 Move X23, [X31+184]
	115 Move X30, [X31+160]
	116 Move X25, [X31+168]
	117 And W0, W0, 1
	118 Add X31, X31, 224
	119 Return X0
	120 Call 0x3EB2B20

Method: System.Boolean TryParseUInt64IntegerStyle(System.ReadOnlySpan`1<System.Char> value, System.Globalization.NumberStyles styles, System.Globalization.NumberFormatInfo info, out System.UInt64 result, ref System.Boolean failureIsOverflow)

Disassembly:
	0x0338A27C MOV X0, X22
	0x0338A280 MOV X1, X21
	0x0338A284 MOV W2, W20
	0x0338A288 MOV X3, X23
	0x0338A28C MOV X4, X19
	0x0338A290 BL 0x3388AF8
	0x0338A294 B 0x338A33C
	0x0338A298 TBNZ X20, 0x9, 0x338A310
	0x0338A29C MOVI V0.2D, 0x0
	0x0338A2A0 STUR V0, [X31 + 0x7A]
	0x0338A2A4 STP V0, V0, [X31 + 0x60]
	0x0338A2A8 STP V0, V0, [X31 + 0x40]
	0x0338A2AC STP V0, V0, [X31 + 0x20]
	0x0338A2B0 STR V0, [X31 + 0x1]
	0x0338A2B4 STR W31, [X19]
	0x0338A2B8 LDR X0, [X25]
	0x0338A2BC LDR W8, [X0 + 0xE0]
	0x0338A2C0 CBNZ W8, 0x338A2C8
	0x0338A2C4 BL 0x1C16DFC
	0x0338A2C8 ADD X3, X31, 0x10
	0x0338A2CC MOV X0, X22
	0x0338A2D0 MOV X1, X21
	0x0338A2D4 MOV W2, W20
	0x0338A2D8 MOV X4, X23
	0x0338A2DC MOV W5, W31
	0x0338A2E0 BL 0x338A028
	0x0338A2E4 MOV W8, W0
	0x0338A2E8 MOV W0, W31
	0x0338A2EC TBZ X8, 0x0, 0x338A33C
	0x0338A2F0 LDR X0, [X25]
	0x0338A2F4 LDR W8, [X0 + 0xE0]
	0x0338A2F8 CBNZ W8, 0x338A300
	0x0338A2FC BL 0x1C16DFC
	0x0338A300 ADD X0, X31, 0x10
	0x0338A304 MOV X1, X19
	0x0338A308 BL 0x33873BC
	0x0338A30C B 0x338A33C
	0x0338A310 LDR X0, [X25]
	0x0338A314 STRB W31, [X31 + 0xC]
	0x0338A318 LDR W8, [X0 + 0xE0]
	0x0338A31C CBNZ W8, 0x338A324
	0x0338A320 BL 0x1C16DFC
	0x0338A324 ADD X5, X31, 0xC
	0x0338A328 MOV X0, X22
	0x0338A32C MOV X1, X21
	0x0338A330 MOV W2, W20
	0x0338A334 MOV X4, X19
	0x0338A338 BL 0x3387B84
	0x0338A33C LDR X8, [X24 + 0x28]
	0x0338A340 LDR X9, [X31 + 0x98]
	0x0338A344 CMP X8, X9
	0x0338A348 B.NE 0x338A368
	0x0338A34C LDP X20, X19, [X31 + 0xD0]
	0x0338A350 LDP X22, X21, [X31 + 0xC0]
	0x0338A354 LDP X24, X23, [X31 + 0xB0]
	0x0338A358 LDP X30, X25, [X31 + 0xA0]
	0x0338A35C AND W0, W0, 0x1
	0x0338A360 ADD X31, X31, 0xE0
	0x0338A364 RET
	0x0338A368 BL 0x3EB1B20
	0x0338A36C SUB X31, X31, 0xE0
	0x0338A370 STP X30, X25, [X31 + 0xA0]
	0x0338A374 STP X24, X23, [X31 + 0xB0]
	0x0338A378 STP X22, X21, [X31 + 0xC0]
	0x0338A37C STP X20, X19, [X31 + 0xD0]
	0x0338A380 MRS X24, 0xC000
	0x0338A384 LDR X8, [X24 + 0x28]
	0x0338A388 ADRP X25, 0x1052000
	0x0338A38C MOV X19, X4
	0x0338A390 MOV X23, X3
	0x0338A394 STR X8, [X31 + 0x98]
	0x0338A398 LDRB W8, [X25 + 0xFED]
	0x0338A39C MOV W20, W2
	0x0338A3A0 MOV X21, X1
	0x0338A3A4 MOV X22, X0
	0x0338A3A8 TBNZ X8, 0x0, 0x338A3C0
	0x0338A3AC ADRP X0, 0xD9E000
	0x0338A3B0 LDR X0, [X0 + 0x78]
	0x0338A3B4 BL 0x1C16CF4
	0x0338A3B8 MOVZ W8, 0x1
	0x0338A3BC STRB W8, [X25 + 0xFED]
	0x0338A3C0 ADRP X25, 0xD9E000
	0x0338A3C4 LDR X25, [X25 + 0x78]
	0x0338A3C8 MOVI V0.2D, 0x0
	0x0338A3CC CMP W20, 0x7
	0x0338A3D0 STUR V0, [X31 + 0x7A]
	0x0338A3D4 STP V0, V0, [X31 + 0x60]
	0x0338A3D8 STP V0, V0, [X31 + 0x40]
	0x0338A3DC STP V0, V0, [X31 + 0x20]
	0x0338A3E0 STR V0, [X31 + 0x1]
	0x0338A3E4 B.HI 0x338A41C
	0x0338A3E8 LDR X0, [X25]
	0x0338A3EC STRB W31, [X31 + 0xC]
	0x0338A3F0 LDR W8, [X0 + 0xE0]
	0x0338A3F4 CBNZ W8, 0x338A3FC
	0x0338A3F8 BL 0x1C16DFC
	0x0338A3FC ADD X5, X31, 0xC
	0x0338A400 MOV X0, X22
	0x0338A404 MOV X1, X21
	0x0338A408 MOV W2, W20
	0x0338A40C MOV X3, X23
	0x0338A410 MOV X4, X19
	0x0338A414 BL 0x338927C
	0x0338A418 B 0x338A4C0
	0x0338A41C TBNZ X20, 0x9, 0x338A494
	0x0338A420 MOVI V0.2D, 0x0
	0x0338A424 STUR V0, [X31 + 0x7A]
	0x0338A428 STP V0, V0, [X31 + 0x60]
	0x0338A42C STP V0, V0, [X31 + 0x40]
	0x0338A430 STP V0, V0, [X31 + 0x20]
	0x0338A434 STR V0, [X31 + 0x1]
	0x0338A438 STR X31, [X19]
	0x0338A43C LDR X0, [X25]
	0x0338A440 LDR W8, [X0 + 0xE0]
	0x0338A444 CBNZ W8, 0x338A44C
	0x0338A448 BL 0x1C16DFC
	0x0338A44C ADD X3, X31, 0x10
	0x0338A450 MOV X0, X22
	0x0338A454 MOV X1, X21
	0x0338A458 MOV W2, W20
	0x0338A45C MOV X4, X23
	0x0338A460 MOV W5, W31
	0x0338A464 BL 0x338A028
	0x0338A468 MOV W8, W0
	0x0338A46C MOV W0, W31
	0x0338A470 TBZ X8, 0x0, 0x338A4C0
	0x0338A474 LDR X0, [X25]
	0x0338A478 LDR W8, [X0 + 0xE0]
	0x0338A47C CBNZ W8, 0x338A484
	0x0338A480 BL 0x1C16DFC
	0x0338A484 ADD X0, X31, 0x10
	0x0338A488 MOV X1, X19
	0x0338A48C BL 0x338746C
	0x0338A490 B 0x338A4C0
	0x0338A494 LDR X0, [X25]
	0x0338A498 STRB W31, [X31 + 0xC]
	0x0338A49C LDR W8, [X0 + 0xE0]
	0x0338A4A0 CBNZ W8, 0x338A4A8
	0x0338A4A4 BL 0x1C16DFC
	0x0338A4A8 ADD X5, X31, 0xC
	0x0338A4AC MOV X0, X22
	0x0338A4B0 MOV X1, X21
	0x0338A4B4 MOV W2, W20
	0x0338A4B8 MOV X4, X19
	0x0338A4BC BL 0x33885F8
	0x0338A4C0 LDR X8, [X24 + 0x28]
	0x0338A4C4 LDR X9, [X31 + 0x98]
	0x0338A4C8 CMP X8, X9
	0x0338A4CC B.NE 0x338A4EC
	0x0338A4D0 LDP X20, X19, [X31 + 0xD0]
	0x0338A4D4 LDP X22, X21, [X31 + 0xC0]
	0x0338A4D8 LDP X24, X23, [X31 + 0xB0]
	0x0338A4DC LDP X30, X25, [X31 + 0xA0]
	0x0338A4E0 AND W0, W0, 0x1
	0x0338A4E4 ADD X31, X31, 0xE0
	0x0338A4E8 RET
	0x0338A4EC BL 0x3EB1B20
	0x0338A4F0 SUB X31, X31, 0xE0
	0x0338A4F4 STP X30, X25, [X31 + 0xA0]
	0x0338A4F8 STP X24, X23, [X31 + 0xB0]
	0x0338A4FC STP X22, X21, [X31 + 0xC0]
	0x0338A500 STP X20, X19, [X31 + 0xD0]
	0x0338A504 MRS X23, 0xC000
	0x0338A508 LDR X8, [X23 + 0x28]
	0x0338A50C ADRP X25, 0x1052000
	0x0338A510 ADRP X24, 0xD9E000
	0x0338A514 MOV X19, X3
	0x0338A518 STR X8, [X31 + 0x98]
	0x0338A51C LDRB W8, [X25 + 0xFF0]
	0x0338A520 LDR X24, [X24 + 0x78]
	0x0338A524 MOV W20, W2
	0x0338A528 MOV X21, X1
	0x0338A52C MOV X22, X0
	0x0338A530 TBNZ X8, 0x0, 0x338A554
	0x0338A534 ADRP X0, 0xD9E000
	0x0338A538 LDR X0, [X0 + 0x78]
	0x0338A53C BL 0x1C16CF4
	0x0338A540 ADRP X0, 0xDA0000
	0x0338A544 LDR X0, [X0 + 0xFE8]
	0x0338A548 BL 0x1C16CF4
	0x0338A54C MOVZ W8, 0x1
	0x0338A550 STRB W8, [X25 + 0xFF0]
	0x0338A554 LDR X0, [X24]
	0x0338A558 MOVI V0.2D, 0x0
	0x0338A55C STUR V0, [X31 + 0x7A]
	0x0338A560 STP V0, V0, [X31 + 0x60]
	0x0338A564 STP V0, V0, [X31 + 0x40]
	0x0338A568 STP V0, V0, [X31 + 0x20]
	0x0338A56C STR V0, [X31 + 0x1]
	0x0338A570 STP X31, X31, [X31]
	0x0338A574 LDR W8, [X0 + 0xE0]
	0x0338A578 CBNZ W8, 0x338A580
	0x0338A57C BL 0x1C16DFC
	0x0338A580 ADD X3, X31, 0x10
	0x0338A584 MOVZ W5, 0x1
	0x0338A588 MOV X0, X22
	0x0338A58C MOV X1, X21
	0x0338A590 MOV W2, W20
	0x0338A594 MOV X4, X19
	0x0338A598 BL 0x3387ED4
	0x0338A59C ADD X0, X31, 0x10
	0x0338A5A0 ADD X1, X31, 0x0
	0x0338A5A4 BL 0x338A5F8
	0x0338A5A8 TBZ X0, 0x0, 0x338A5D8
	0x0338A5AC LDP X0, X1, [X31]
	0x0338A5B0 LDR X8, [X23 + 0x28]
	0x0338A5B4 LDR X9, [X31 + 0x98]
	0x0338A5B8 CMP X8, X9
	0x0338A5BC B.NE 0x338A5F4
	0x0338A5C0 LDP X20, X19, [X31 + 0xD0]
	0x0338A5C4 LDP X22, X21, [X31 + 0xC0]
	0x0338A5C8 LDP X24, X23, [X31 + 0xB0]
	0x0338A5CC LDP X30, X25, [X31 + 0xA0]
	0x0338A5D0 ADD X31, X31, 0xE0
	0x0338A5D4 RET
	0x0338A5D8 LDR X0, [X24]
	0x0338A5DC BL 0x19903D0
	0x0338A5E0 ADRP X8, 0xDA0000
	0x0338A5E4 LDR X8, [X8 + 0xFE8]
	0x0338A5E8 MOVZ W0, 0x1
	0x0338A5EC LDR X1, [X8]
	0x0338A5F0 BL 0x3387AFC
	0x0338A5F4 BL 0x3EB1B20
	0x0338A5F8 SUB X31, X31, 0x60
	0x0338A5FC STR X30, [X31 + 0x20]
	0x0338A600 STP X24, X23, [X31 + 0x30]
	0x0338A604 STP X22, X21, [X31 + 0x40]
	0x0338A608 STP X20, X19, [X31 + 0x50]
	0x0338A60C MRS X22, 0xC000
	0x0338A610 LDR X8, [X22 + 0x28]
	0x0338A614 ADRP X21, 0x1052000
	0x0338A618 MOV X19, X1
	0x0338A61C MOV X20, X0
	0x0338A620 STR X8, [X31 + 0x18]
	0x0338A624 LDRB W8, [X21 + 0xFF1]
	0x0338A628 TBNZ X8, 0x0, 0x338A640
	0x0338A62C ADRP X0, 0xD69000
	0x0338A630 LDR X0, [X0 + 0x5A8]
	0x0338A634 BL 0x1C16CF4
	0x0338A638 MOVZ W8, 0x1
	0x0338A63C STRB W8, [X21 + 0xFF1]
	0x0338A640 MOV X0, X20
	0x0338A644 MOV X1, X31
	0x0338A648 BL 0x338C3A8
	0x0338A64C LDR W23, [X20 + 0x4]
	0x0338A650 MOV X21, X0
	0x0338A654 MOV X0, X20
	0x0338A658 MOV X1, X31
	0x0338A65C BL 0x338C38C
	0x0338A660 LDRH W8, [X21]
	0x0338A664 MOV W20, W0
	0x0338A668 CBZ W8, 0x338A6EC
	0x0338A66C CMP W23, 0x1D
	0x0338A670 B.GT 0x338A88C
	0x0338A674 ORR X9, X31, 0x9999999999999999
	0x0338A678 ADDS W31, W23, 0x1C
	0x0338A67C MOVN W10, 0x1B
	0x0338A680 MOV X1, X31
	0x0338A684 MOVK X9, 0x19990000
	0x0338A688 CSEL W10, W23, W10, LT
	0x0338A68C MOVZ W11, 0xA
	0x0338A690 ADDS W31, W23, 0x1C
	0x0338A694 AND W8, W8, 0xFFFF
	0x0338A698 B.LE 0x338A778
	0x0338A69C SUB W12, W8, 0x30
	0x0338A6A0 LDRH W8, [X21 + 0x2]!
	0x0338A6A4 NOP
	0x0338A6A8 MADD X1, X1, X11, X12
	0x0338A6AC CMP X1, X9
	0x0338A6B0 SUB W23, W23, 0x1
	0x0338A6B4 B.CS 0x338A77C
	0x0338A6B8 CBNZ W8, 0x338A690
	0x0338A6BC ADD W8, W23, 0x1
	0x0338A6C0 CMP W8, 0x0
	0x0338A6C4 CSEL W10, W31, W23, GT
	0x0338A6C8 CMP W23, 0x0
	0x0338A6CC B.LE 0x338A774
	0x0338A6D0 ADD X8, X1, X1, 0x2, LSL
	0x0338A6D4 UBFM X1, X8, 0x3F, 0x3E
	0x0338A6D8 CMP X1, X9
	0x0338A6DC SUB W23, W23, 0x1
	0x0338A6E0 B.CC 0x338A6C8
	0x0338A6E4 MOV W8, W31
	0x0338A6E8 B 0x338A77C
	0x0338A6EC ADRP X8, 0xD69000
	0x0338A6F0 LDR X8, [X8 + 0x5A8]
	0x0338A6F4 LDR X0, [X8]
	0x0338A6F8 LDR W8, [X0 + 0xE0]
	0x0338A6FC CBNZ W8, 0x338A704
	0x0338A700 BL 0x1C16DFC
	0x0338A704 ADRP X24, 0x1053000
	0x0338A708 LDRB W8, [X24 + 0x6]
	0x0338A70C SUB W21, W31, W23
	0x0338A710 CBNZ W8, 0x338A734
	0x0338A714 ADRP X0, 0xDA0000
	0x0338A718 LDR X0, [X0 + 0xF00]
	0x0338A71C BL 0x1C16CF4
	0x0338A720 ADRP X0, 0xD69000
	0x0338A724 LDR X0, [X0 + 0x5A8]
	0x0338A728 BL 0x1C16CF4
	0x0338A72C MOVZ W8, 0x1
	0x0338A730 STRB W8, [X24 + 0x6]
	0x0338A734 CMP W21, 0x1C
	0x0338A738 MOVZ W8, 0x1C
	0x0338A73C CSEL W8, W21, W8, LT
	0x0338A740 BIC W5, W8, W8, 0x1F
	0x0338A744 STP X31, X31, [X31 + 0x8]
	0x0338A748 AND W4, W20, 0x1
	0x0338A74C ADD X0, X31, 0x8
	0x0338A750 MOV W1, W31
	0x0338A754 MOV W2, W31
	0x0338A758 MOV W3, W31
	0x0338A75C MOV X6, X31
	0x0338A760 BL 0x33D6CEC
	0x0338A764 LDUR V0, [X31 + 0x8]
	0x0338A768 MOVZ W0, 0x1
	0x0338A76C STR V0, [X19]
	0x0338A770 B 0x338A890
	0x0338A774 MOV W8, W31
	0x0338A778 MOV W23, W10
	0x0338A77C MOVZ W10, 0x9999
	0x0338A780 ORR X9, X31, 0x9999999999999999
	0x0338A784 MOVK W10, 0x19990000
	0x0338A788 MOV W3, W31
	0x0338A78C MOVK X9, 0x9998
	0x0338A790 ORR X11, X31, 0x9999999999999999
	0x0338A794 SUB W12, W10, 0x1
	0x0338A798 MOVZ W13, 0xA
	0x0338A79C CMP W23, 0x0
	0x0338A7A0 B.GT 0x338A7B0
	0x0338A7A4 CBZ W8, 0x338A820
	0x0338A7A8 ADDS W31, W23, 0x1B
	0x0338A7AC B.LT 0x338A820
	0x0338A7B0 CMP W3, W12
	0x0338A7B4 B.LS 0x338A7D8
	0x0338A7B8 CMP W3, W10
	0x0338A7BC B.NE 0x338A820
	0x0338A7C0 CMP X1, X9
	0x0338A7C4 B.LS 0x338A7D8
	0x0338A7C8 CMP X1, X11
	0x0338A7CC B.NE 0x338A820
	0x0338A7D0 CMP W8, 0x36
	0x0338A7D4 B.CS 0x338A820
	0x0338A7D8 AND X14, X1, 0x0
	0x0338A7DC UBFM X14, X14, 0x3E, 0x3D
	0x0338A7E0 UBFM X15, X1, 0x20, 0x3F
	0x0338A7E4 ADD X14, X14, W1, UXTW
	0x0338A7E8 MUL X15, X15, X13
	0x0338A7EC UBFM X14, X14, 0x3F, 0x3E
	0x0338A7F0 ADD X15, X15, X14, 0x20, LSR
	0x0338A7F4 AND X1, X14, 0xFFFFFFFF
	0x0338A7F8 UBFM X14, X15, 0x20, 0x3F
	0x0338A7FC BFM X1, X15, 0x20, 0x1F
	0x0338A800 MADD W3, W3, W13, W14
	0x0338A804 CBZ W8, 0x338A818
	0x0338A808 SUB W14, W8, 0x30
	0x0338A80C LDRH W8, [X21 + 0x2]!
	0x0338A810 ADDS X1, X1, X14
	0x0338A814 CINC W3, W3, CS
	0x0338A818 SUB W23, W23, 0x1
	0x0338A81C B 0x338A79C
	0x0338A820 CMP W8, 0x35
	0x0338A824 B.CC 0x338A884
	0x0338A828 B.NE 0x338A85C
	0x0338A82C TBNZ X1, 0x0, 0x338A85C
	0x0338A830 MOVZ W10, 0x2
	0x0338A834 LDRH W8, [X21, X10, LSL]
	0x0338A838 MOV W11, W10
	0x0338A83C CMP W10, 0x2A
	0x0338A840 B.EQ 0x338A850
	0x0338A844 CMP W8, 0x30
	0x0338A848 ADD X10, X10, 0x2
	0x0338A84C B.EQ 0x338A834
	0x0338A850 CMP W11, 0x2A
	0x0338A854 B.EQ 0x338A884
	0x0338A858 CBZ W8, 0x338A884
	0x0338A85C ADDS X1, X1, 0x1
	0x0338A860 B.CC 0x338A884
	0x0338A864 ADDS W3, W3, 0x1
	0x0338A868 B.CC 0x338A880
	0x0338A86C MOVZ W3, 0x9999
	0x0338A870 ADD W23, W23, 0x1
	0x0338A874 ADD X1, X9, 0x2
	0x0338A878 MOVK W3, 0x19990000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X24, 0x1053000
	015 Move W8, [X24+4078]
	016 Move X27, X5
	017 Move X19, X4
	018 Move X25, X3
	019 Move W22, W2
	020 Move X23, X1
	021 Move X21, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {46}
	026 Move X0, 0xDA1000
	027 Move X0, [X0+4056]
	028 Call 0x1C17CF4
	029 Move X0, 0xD9F000
	030 Move X0, [X0+120]
	031 Call 0x1C17CF4
	032 Move X0, 0xD9E000
	033 Move X0, [X0+2024]
	034 Call 0x1C17CF4
	035 Move X0, 0xD99000
	036 Move X0, [X0+40]
	037 Call 0x1C17CF4
	038 Move X0, 0xD6F000
	039 Move X0, [X0+1016]
	040 Call 0x1C17CF4
	041 Move X0, 0xD6B000
	042 Move X0, [X0+680]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X24+4078], W8
	046 Compare W23, 0
	047 JumpIfEqual {372}
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Move TEMP, X22
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {63}
	053 Move W24, W31
	054 Move X20, X23
	055 ShiftRight X20, 32
	056 And X20, X20, 0x7FFFFFFF
	057 Move TEMP, X22
	058 And TEMP, TEMP, 4
	059 Compare TEMP, 4
	060 JumpIfEqual {85}
	061 Move [X31+24], X20
	062 Move W20, 1
	063 Move X26, 0xD9F000
	064 Move X26, [X26+120]
	065 Move X0, [X26]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Subtract W8, W28, 9
	071 NotImplemented "Instruction CMP not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move W24, 1
	074 Move X0, [X26]
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Subtract W8, W28, 9
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Add W24, W24, 1
	083 NotImplemented "Instruction CMP not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Compare X25, 0
	086 JumpIfEqual {407}
	087 Move X8, 0xD6F000
	088 Move X26, [X25+40]
	089 Move X25, [X25+48]
	090 Move X8, [X8+1016]
	091 Move X2, X31
	092 Move X0, X26
	093 Move X1, [X8]
	094 Call String.op_Equality, X0, X1
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {114}
	099 Move X8, 0xD6B000
	100 Move X8, [X8+680]
	101 Move X0, X25
	102 Move X2, X31
	103 Move X1, [X8]
	104 Call String.op_Equality, X0, X1
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {114}
	109 NotImplemented "Instruction CMP not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Add W24, W24, 1
	112 NotImplemented "Instruction CMP not yet implemented."
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Move X8, 0xD9E000
	115 Move X8, [X8+2024]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X20, [X8]
	118 Move X0, X31
	119 Call ThrowHelper.ThrowArgumentOutOfRangeException
	120 Move X0, [X20+32]
	121 Move W8, [X0+309]
	122 Move TEMP, X8
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfEqual {127}
	126 Call 0x1C5D684
	127 Move X0, X26
	128 Move X1, X31
	129 Subtract W23, W23, W24
	130 Add X21, X21, W24
	131 Call String.IsNullOrEmpty, X0
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfEqual {171}
	136 Move X20, 0x1050000
	137 Move W8, [X20+1890]
	138 Compare W8, 0
	139 JumpIfNotEqual {145}
	140 Move X0, 0xD91000
	141 Move X0, [X0+656]
	142 Call 0x1C17CF4
	143 Move W8, 1
	144 Move [X20+1890], W8
	145 Compare X26, 0
	146 JumpIfEqual {153}
	147 Move X0, X26
	148 Move X1, X31
	149 Call String.GetRawStringData, X0
	150 Move W3, [X26+16]
	151 Move X2, X0
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X2, X31
	154 Move X3, X31
	155 Move X8, 0xDA1000
	156 Move X8, [X8+4056]
	157 Move X0, X21
	158 Move X1, X23
	159 Move X4, [X8]
	160 Call 0x338D288
	161 Move TEMP, X0
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfNotEqual {171}
	165 Compare X26, 0
	166 JumpIfEqual {407}
	167 Move W24, [X26+16]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X8, W24
	170 NotImplemented "Instruction LDRH not yet implemented."
	171 Move X0, X25
	172 Move X1, X31
	173 Call String.IsNullOrEmpty, X0
	174 Move TEMP, X0
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfEqual {214}
	178 Move X20, 0x1050000
	179 Move W8, [X20+1890]
	180 Compare W8, 0
	181 JumpIfNotEqual {187}
	182 Move X0, 0xD91000
	183 Move X0, [X0+656]
	184 Call 0x1C17CF4
	185 Move W8, 1
	186 Move [X20+1890], W8
	187 Compare X25, 0
	188 JumpIfEqual {194}
	189 Move X0, X25
	190 Move X1, X31
	191 Call String.GetRawStringData, X0
	192 Move W3, [X25+16]
	193 Move X2, X0
	194 Move X2, X31
	195 Move X3, X31
	196 Move X8, 0xDA1000
	197 Move X8, [X8+4056]
	198 Move X0, X21
	199 Move X1, X23
	200 Move X4, [X8]
	201 Call 0x338D288
	202 Move TEMP, X0
	203 And TEMP, TEMP, 1
	204 Compare TEMP, 1
	205 JumpIfNotEqual {214}
	206 Compare X25, 0
	207 JumpIfEqual {407}
	208 Move W24, [X25+16]
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X8, W24
	211 NotImplemented "Instruction LDRH not yet implemented."
	212 Move W20, W31
	213 Move [X31+24], X31
	214 Move W24, W31
	215 Move [X31+24], X31
	216 Move W20, 1
	217 Move X29, 0xD9F000
	218 Move X29, [X29+120]
	219 Move X0, [X29]
	220 Move W8, [X0+224]
	221 Compare W8, 0
	222 JumpIfNotEqual {224}
	223 Call 0x1C17DFC
	224 Subtract W26, W28, 48
	225 NotImplemented "Instruction CMP not yet implemented."
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Add W24, W24, 1
	228 NotImplemented "Instruction CMP not yet implemented."
	229 NotImplemented "Instruction LDRH not yet implemented."
	230 Subtract W26, W25, 48
	231 Move X0, [X29]
	232 Move W8, [X0+224]
	233 Compare W8, 0
	234 JumpIfNotEqual {236}
	235 Call 0x1C17DFC
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Add W8, W24, 1
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Move [X31+16], X27
	240 Move W27, W24
	241 Move W26, W26
	242 Add W24, W24, 19
	243 Move TEMP, 17
	244 Not TEMP
	245 Move W25, TEMP
	246 NotImplemented "Instruction CSET not yet implemented."
	247 Move W28, 10
	248 Move [X31+12], W20
	249 Move TEMP, X8
	250 And TEMP, TEMP, 1
	251 Compare TEMP, 1
	252 JumpIfNotEqual {307}
	253 Move X0, [X29]
	254 Add W8, W27, W25
	255 Add W8, W8, 19
	256 NotImplemented "Instruction LDRH not yet implemented."
	257 Move W9, [X0+224]
	258 Compare W9, 0
	259 JumpIfNotEqual {261}
	260 Call 0x1C17DFC
	261 Subtract W8, W20, 48
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Add W8, W27, W25
	264 Add W9, W8, 20
	265 NotImplemented "Instruction MADD not yet implemented."
	266 NotImplemented "Instruction CMP not yet implemented."
	267 NotImplemented "Instruction CSET not yet implemented."
	268 Add W25, W25, 1
	269 Subtract X26, X10, 48
	270 Move W20, [X31+12]
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Move X0, [X29]
	273 NotImplemented "Instruction LDRH not yet implemented."
	274 Move W8, [X0+224]
	275 Compare W8, 0
	276 JumpIfNotEqual {278}
	277 Call 0x1C17DFC
	278 Subtract W8, W25, 48
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Or X8, X31, -7378697629483820647
	281 Add W24, W27, 20
	282 Move X27, [X31+16]
	283 NotImplemented "Instruction MOVK not yet implemented."
	284 NotImplemented "Instruction MOVK not yet implemented."
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Subtract X8, X8, 1
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Move W28, W31
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Move W28, 1
	291 Move W8, 10
	292 NotImplemented "Instruction MADD not yet implemented."
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Subtract X26, X8, 48
	295 Move X0, [X29]
	296 NotImplemented "Instruction LDRH not yet implemented."
	297 Move W8, [X0+224]
	298 Compare W8, 0
	299 JumpIfNotEqual {301}
	300 Call 0x1C17DFC
	301 Subtract W8, W25, 48
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Add W24, W24, 1
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Move W28, 1
	306 Move X26, X31
	307 Move X27, [X31+16]
	308 Move W20, [X31+12]
	309 Add W8, W27, W25
	310 Move W25, W20
	311 Move X27, [X31+16]
	312 Move W20, [X31+12]
	313 Move W28, W31
	314 Add W24, W8, 19
	315 Move X26, X31
	316 Move X27, [X31+16]
	317 Add W24, W24, 1
	318 NotImplemented "Instruction CMP not yet implemented."
	319 NotImplemented "Instruction LDRH not yet implemented."
	320 Move [X31+24], X20
	321 Move W20, W31
	322 Move X27, [X31+16]
	323 Move W28, W31
	324 Move X0, [X29]
	325 Move W8, [X0+224]
	326 Compare W8, 0
	327 JumpIfNotEqual {329}
	328 Call 0x1C17DFC
	329 Subtract W8, W25, 9
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Move TEMP, X22
	332 And TEMP, TEMP, 2
	333 Compare TEMP, 2
	334 JumpIfNotEqual {372}
	335 Add W24, W24, 1
	336 NotImplemented "Instruction CMP not yet implemented."
	337 Move W25, W20
	338 Add X22, X21, W24
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Move X0, [X29]
	341 NotImplemented "Instruction LDRH not yet implemented."
	342 Move W8, [X0+224]
	343 Compare W8, 0
	344 JumpIfNotEqual {346}
	345 Call 0x1C17DFC
	346 Subtract W8, W20, 9
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Add W24, W24, 1
	349 NotImplemented "Instruction CMP not yet implemented."
	350 Add X22, X22, 2
	351 NotImplemented "Instruction CMP not yet implemented."
	352 Move W20, W25
	353 NotImplemented "Instruction CMP not yet implemented."
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Move X0, [X29]
	356 Move X9, [X31+24]
	357 Move W22, W23
	358 Move W8, [X0+224]
	359 NotImplemented "Instruction BFM not yet implemented."
	360 Compare W8, 0
	361 JumpIfNotEqual {363}
	362 Call 0x1C17DFC
	363 Move X0, X21
	364 Move X1, X22
	365 Move W2, W24
	366 Call Number.TrailingZeros, X0, X1
	367 Move TEMP, X0
	368 And TEMP, TEMP, 1
	369 Compare TEMP, 1
	370 JumpIfNotEqual {372}
	371 And W28, W28, 1
	372 Move X26, X31
	373 Move W0, W31
	374 Move [X19], X26
	375 Move X20, [X31+112]
	376 Move X19, [X31+120]
	377 Move X22, [X31+96]
	378 Move X21, [X31+104]
	379 Move X24, [X31+80]
	380 Move X23, [X31+88]
	381 Move X26, [X31+64]
	382 Move X25, [X31+72]
	383 Move X28, [X31+48]
	384 Move X27, [X31+56]
	385 Move X29, [X31+32]
	386 Move X30, [X31+40]
	387 Add X31, X31, 128
	388 Return X0
	389 Move W20, W25
	390 Move TEMP, X28
	391 And TEMP, TEMP, 1
	392 Compare TEMP, 1
	393 JumpIfEqual {402}
	394 NotImplemented "Instruction CMP not yet implemented."
	395 NotImplemented "Instruction CSET not yet implemented."
	396 Or W8, W20, W8
	397 Move TEMP, X8
	398 And TEMP, TEMP, 1
	399 Compare TEMP, 1
	400 JumpIfNotEqual {402}
	401 Move W0, 1
	402 Move X26, X31
	403 Move W0, W31
	404 Move W8, 1
	405 Move [X27], W8
	406 Call 0x1C17F28
	407 Call 0x1C17F20

Method: System.Boolean TryParseUInt64HexNumberStyle(System.ReadOnlySpan`1<System.Char> value, System.Globalization.NumberStyles styles, System.Globalization.NumberFormatInfo info, out System.UInt64 result, ref System.Boolean failureIsOverflow)

Disassembly:
	0x033895F8 ADD W8, W27, W25
	0x033895FC ADD W8, W8, 0x13
	0x03389600 LDRH W20, [X21, W8, SXTW]
	0x03389604 LDR W9, [X0 + 0xE0]
	0x03389608 CBNZ W9, 0x3389610
	0x0338960C BL 0x1C16DFC
	0x03389610 SUB W8, W20, 0x30
	0x03389614 CMP W8, 0x9
	0x03389618 B.HI 0x33896FC
	0x0338961C ADD W8, W27, W25
	0x03389620 ADD W9, W8, 0x14
	0x03389624 MADD X10, X26, X28, X20
	0x03389628 CMP W9, W23
	0x0338962C CSET W8, CC
	0x03389630 ADDS W25, W25, 0x1
	0x03389634 SUB X26, X10, 0x30
	0x03389638 B.CC 0x33895F0
	0x0338963C LDR W20, [X31 + 0xC]
	0x03389640 CMP W9, W23
	0x03389644 B.CS 0x3389720
	0x03389648 LDR X0, [X29]
	0x0338964C LDRH W25, [X21, W24, SXTW]
	0x03389650 LDR W8, [X0 + 0xE0]
	0x03389654 CBNZ W8, 0x338965C
	0x03389658 BL 0x1C16DFC
	0x0338965C SUB W8, W25, 0x30
	0x03389660 CMP W8, 0x9
	0x03389664 B.HI 0x3389744
	0x03389668 ORR X8, X31, 0x9999999999999999
	0x0338966C ADD W24, W27, 0x14
	0x03389670 LDR X27, [X31 + 0x10]
	0x03389674 MOVK X8, 0x999A
	0x03389678 MOVK X8, 0x19990000
	0x0338967C CMP X26, X8
	0x03389680 B.CS 0x338969C
	0x03389684 SUB X8, X8, 0x1
	0x03389688 CMP X26, X8
	0x0338968C MOV W28, W31
	0x03389690 B.NE 0x33896A0
	0x03389694 CMP W25, 0x36
	0x03389698 B.CC 0x33896A0
	0x0338969C MOVZ W28, 0x1
	0x033896A0 MOVZ W8, 0xA
	0x033896A4 MADD X8, X26, X8, X25
	0x033896A8 CMP W24, W23
	0x033896AC SUB X26, X8, 0x30
	0x033896B0 B.CS 0x3389844
	0x033896B4 LDR X0, [X29]
	0x033896B8 LDRH W25, [X21, W24, SXTW]
	0x033896BC LDR W8, [X0 + 0xE0]
	0x033896C0 CBNZ W8, 0x33896C8
	0x033896C4 BL 0x1C16DFC
	0x033896C8 SUB W8, W25, 0x30
	0x033896CC CMP W8, 0xA
	0x033896D0 B.CS 0x338974C
	0x033896D4 ADD W24, W24, 0x1
	0x033896D8 CMP W23, W24
	0x033896DC MOVZ W28, 0x1
	0x033896E0 B.NE 0x33896B4
	0x033896E4 B 0x3389860
	0x033896E8 MOV X26, X31
	0x033896EC B 0x3389858
	0x033896F0 LDR X27, [X31 + 0x10]
	0x033896F4 LDR W20, [X31 + 0xC]
	0x033896F8 B 0x3389848
	0x033896FC ADD W8, W27, W25
	0x03389700 MOV W25, W20
	0x03389704 LDR X27, [X31 + 0x10]
	0x03389708 LDR W20, [X31 + 0xC]
	0x0338970C MOV W28, W31
	0x03389710 ADD W24, W8, 0x13
	0x03389714 B 0x338974C
	0x03389718 MOV X26, X31
	0x0338971C B 0x3389748
	0x03389720 LDR X27, [X31 + 0x10]
	0x03389724 B 0x3389848
	0x03389728 ADD W24, W24, 0x1
	0x0338972C CMP W24, W23
	0x03389730 B.CS 0x3389814
	0x03389734 LDRH W28, [X21, W24, SXTW]
	0x03389738 STR X20, [X31 + 0x18]
	0x0338973C MOV W20, W31
	0x03389740 B 0x338956C
	0x03389744 LDR X27, [X31 + 0x10]
	0x03389748 MOV W28, W31
	0x0338974C LDR X0, [X29]
	0x03389750 LDR W8, [X0 + 0xE0]
	0x03389754 CBNZ W8, 0x338975C
	0x03389758 BL 0x1C16DFC
	0x0338975C SUB W8, W25, 0x9
	0x03389760 CMP W8, 0x5
	0x03389764 B.CS 0x33897D4
	0x03389768 TBZ X22, 0x1, 0x3389814
	0x0338976C ADD W24, W24, 0x1
	0x03389770 CMP W24, W23
	0x03389774 B.GE 0x33897C8
	0x03389778 MOV W25, W20
	0x0338977C ADD X22, X21, W24, 0x1, SXTW
	0x03389780 CMP W23, W24
	0x03389784 B.LS 0x3389874
	0x03389788 LDR X0, [X29]
	0x0338978C LDRH W20, [X22]
	0x03389790 LDR W8, [X0 + 0xE0]
	0x03389794 CBNZ W8, 0x338979C
	0x03389798 BL 0x1C16DFC
	0x0338979C SUB W8, W20, 0x9
	0x033897A0 CMP W8, 0x5
	0x033897A4 B.CS 0x33897BC
	0x033897A8 ADD W24, W24, 0x1
	0x033897AC CMP W23, W24
	0x033897B0 ADD X22, X22, 0x2
	0x033897B4 B.NE 0x3389780
	0x033897B8 B 0x3389840
	0x033897BC CMP W20, 0x20
	0x033897C0 B.EQ 0x33897A8
	0x033897C4 MOV W20, W25
	0x033897C8 CMP W24, W23
	0x033897CC B.CC 0x33897DC
	0x033897D0 B 0x338980C
	0x033897D4 CMP W25, 0x20
	0x033897D8 B.EQ 0x3389768
	0x033897DC LDR X0, [X29]
	0x033897E0 LDR X9, [X31 + 0x18]
	0x033897E4 MOV W22, W23
	0x033897E8 LDR W8, [X0 + 0xE0]
	0x033897EC BFM X22, X9, 0x20, 0x1F
	0x033897F0 CBNZ W8, 0x33897F8
	0x033897F4 BL 0x1C16DFC
	0x033897F8 MOV X0, X21
	0x033897FC MOV X1, X22
	0x03389800 MOV W2, W24
	0x03389804 BL 0x338A158
	0x03389808 TBZ X0, 0x0, 0x3389814
	0x0338980C AND W28, W28, 0x1
	0x03389810 B 0x3389844
	0x03389814 MOV X26, X31
	0x03389818 MOV W0, W31
	0x0338981C STR X26, [X19]
	0x03389820 LDP X20, X19, [X31 + 0x70]
	0x03389824 LDP X22, X21, [X31 + 0x60]
	0x03389828 LDP X24, X23, [X31 + 0x50]
	0x0338982C LDP X26, X25, [X31 + 0x40]
	0x03389830 LDP X28, X27, [X31 + 0x30]
	0x03389834 LDP X29, X30, [X31 + 0x20]
	0x03389838 ADD X31, X31, 0x80
	0x0338983C RET
	0x03389840 MOV W20, W25
	0x03389844 TBNZ X28, 0x0, 0x3389860
	0x03389848 CMP X26, 0x0
	0x0338984C CSET W8, EQ
	0x03389850 ORR W8, W20, W8, 0x0
	0x03389854 TBZ X8, 0x0, 0x3389860
	0x03389858 MOVZ W0, 0x1
	0x0338985C B 0x338981C
	0x03389860 MOV X26, X31
	0x03389864 MOV W0, W31
	0x03389868 MOVZ W8, 0x1
	0x0338986C STRB W8, [X27]
	0x03389870 B 0x338981C
	0x03389874 BL 0x1C16F28
	0x03389878 BL 0x1C16F20
	0x0338987C SUB X31, X31, 0x90
	0x03389880 STP X29, X30, [X31 + 0x30]
	0x03389884 STP X28, X27, [X31 + 0x40]
	0x03389888 STP X26, X25, [X31 + 0x50]
	0x0338988C STP X24, X23, [X31 + 0x60]
	0x03389890 STP X22, X21, [X31 + 0x70]
	0x03389894 STP X20, X19, [X31 + 0x80]
	0x03389898 ADRP X19, 0x1053000
	0x0338989C LDRB W8, [X19 + 0xFE5]
	0x033898A0 MOV X22, X4
	0x033898A4 MOV W23, W2
	0x033898A8 MOV X24, X1
	0x033898AC MOV X20, X0
	0x033898B0 STR W5, [X31 + 0x10]
	0x033898B4 STR X3, [X31 + 0x28]
	0x033898B8 TBNZ X8, 0x0, 0x33898D0
	0x033898BC ADRP X0, 0xD9F000
	0x033898C0 LDR X0, [X0 + 0x78]
	0x033898C4 BL 0x1C16CF4
	0x033898C8 MOVZ W8, 0x1
	0x033898CC STRB W8, [X19 + 0xFE5]
	0x033898D0 LDR X0, [X31 + 0x28]
	0x033898D4 MOV W1, W31
	0x033898D8 MOV X2, X31
	0x033898DC STR W31, [X0 + 0x4]
	0x033898E0 BL 0x338C39C
	0x033898E4 CBZ X22, 0x3389F74
	0x033898E8 TBNZ X23, 0x8, 0x33898FC
	0x033898EC MOV X25, X31
	0x033898F0 ADD X8, X22, 0x38
	0x033898F4 ADD X9, X22, 0x40
	0x033898F8 B 0x3389908
	0x033898FC LDR X25, [X22 + 0x58]
	0x03389900 ADD X8, X22, 0x50
	0x03389904 ADD X9, X22, 0x48
	0x03389908 LDR X26, [X20]
	0x0338990C LDR X10, [X8]
	0x03389910 LDR X8, [X9]
	0x03389914 STR X20, [X31 + 0x8]
	0x03389918 CMP X26, X24
	0x0338991C STP X10, X8, [X31 + 0x18]
	0x03389920 B.CS 0x338992C
	0x03389924 LDRH W28, [X26]
	0x03389928 B 0x3389930
	0x0338992C MOV W28, W31
	0x03389930 ADRP X21, 0xD9F000
	0x03389934 LDR X21, [X21 + 0x78]
	0x03389938 MOV W19, W31
	0x0338993C UBFM W8, W23, 0x8, 0x8
	0x03389940 MOVZ W27, 0x21
	0x03389944 STR W8, [X31 + 0x14]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X24, 0x1054000
	013 Move W8, [X24+4079]
	014 Move X20, X5
	015 Move X19, X4
	016 Move W23, W2
	017 Move X21, X1
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xDA0000
	024 Move X0, [X0+120]
	025 Call 0x1C17CF4
	026 Move X0, 0xD9A000
	027 Move X0, [X0+40]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X24+4079], W8
	031 Compare W21, 0
	032 JumpIfEqual {146}
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move TEMP, X23
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {67}
	038 Move W24, W31
	039 Move X25, 0xDA0000
	040 Move X25, [X25+120]
	041 Move X0, [X25]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X25]
	047 Move X8, [X0+184]
	048 Move X8, [X8+40]
	049 Compare X8, 0
	050 JumpIfEqual {205}
	051 Move W9, [X8+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add X10, X8, W28
	054 Move W10, [X10+32]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Add W24, W24, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Add X10, X8, X28
	063 Move W10, [X10+32]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X26, X31
	066 Move W27, W31
	067 Move X25, 0xDA0000
	068 Move X25, [X25+120]
	069 Move X0, [X25]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Subtract W8, W28, 9
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move W24, 1
	078 Move X0, [X25]
	079 NotImplemented "Instruction LDRH not yet implemented."
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Subtract W8, W28, 9
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Add W24, W24, 1
	087 NotImplemented "Instruction CMP not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move W10, W24
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Add X11, X8, W28
	093 NotImplemented "Instruction LDRSW not yet implemented."
	094 Add W12, W10, 1
	095 NotImplemented "Instruction CMP not yet implemented."
	096 NotImplemented "Instruction CSET not yet implemented."
	097 Add W24, W10, 16
	098 Move TEMP, 14
	099 Not TEMP
	100 Move W11, TEMP
	101 Move TEMP, X12
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {182}
	105 Add W12, W10, W11
	106 Add W12, W12, 16
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Add X12, X8, X28
	110 NotImplemented "Instruction LDRSW not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Add W12, W10, W11
	113 Add W14, W12, 17
	114 NotImplemented "Instruction CMP not yet implemented."
	115 NotImplemented "Instruction CSET not yet implemented."
	116 Add W11, W11, 1
	117 Add X26, X13, X26
	118 NotImplemented "Instruction CMP not yet implemented."
	119 NotImplemented "Instruction LDRH not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Add X11, X8, X28
	122 Move W11, [X11+32]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Add W24, W10, 17
	125 NotImplemented "Instruction CMP not yet implemented."
	126 NotImplemented "Instruction LDRH not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Add X10, X8, X28
	129 Move W10, [X10+32]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Add W24, W24, 1
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Add W8, W10, W11
	134 Move W27, W31
	135 Add W24, W8, 16
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1C17DFC
	140 Subtract W8, W28, 9
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move TEMP, X23
	143 And TEMP, TEMP, 2
	144 Compare TEMP, 2
	145 JumpIfEqual {163}
	146 Move X26, X31
	147 Move W0, W31
	148 Move [X19], X26
	149 Move X20, [X31+80]
	150 Move X19, [X31+88]
	151 Move X22, [X31+64]
	152 Move X21, [X31+72]
	153 Move X24, [X31+48]
	154 Move X23, [X31+56]
	155 Move X26, [X31+32]
	156 Move X25, [X31+40]
	157 Move X28, [X31+16]
	158 Move X27, [X31+24]
	159 And W0, W0, 1
	160 Move X30, [X31+96]
	161 Return X0
	162 Move X26, X31
	163 Add W24, W24, 1
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Add X23, X22, W24
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X0, [X25]
	168 NotImplemented "Instruction LDRH not yet implemented."
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {173}
	172 Call 0x1C17DFC
	173 Subtract W8, W28, 9
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Add W24, W24, 1
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Add X23, X23, 2
	178 NotImplemented "Instruction CMP not yet implemented."
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Compare W27, 0
	181 JumpIfNotEqual {200}
	182 Move W0, 1
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move X0, [X25]
	185 Move W8, [X0+224]
	186 Compare W8, 0
	187 JumpIfNotEqual {189}
	188 Call 0x1C17DFC
	189 Move X0, X22
	190 Move X1, X21
	191 Move W2, W24
	192 Call Number.TrailingZeros, X0, X1
	193 And W31, W0, 1
	194 And W8, W27, W0
	195 NotImplemented "Instruction CSEL not yet implemented."
	196 Move TEMP, X8
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfNotEqual {148}
	200 Move W8, 1
	201 Move X26, X31
	202 Move W0, W31
	203 Move [X20], W8
	204 Move W27, 1
	205 Call 0x1C17F20
	206 Call 0x1C17F28

Method: System.Decimal ParseDecimal(System.ReadOnlySpan`1<System.Char> value, System.Globalization.NumberStyles styles, System.Globalization.NumberFormatInfo info)

Disassembly:
	0x0338B4F0 LDR X0, [X0 + 0x568]
	0x0338B4F4 BL 0x1C16CF4
	0x0338B4F8 ADRP X0, 0xDA0000
	0x0338B4FC LDR X0, [X0 + 0x28]
	0x0338B500 BL 0x1C16CF4
	0x0338B504 ADRP X0, 0xDA0000
	0x0338B508 LDR X0, [X0 + 0x30]
	0x0338B50C BL 0x1C16CF4
	0x0338B510 ADRP X0, 0xDA0000
	0x0338B514 LDR X0, [X0 + 0x38]
	0x0338B518 BL 0x1C16CF4
	0x0338B51C ADRP X0, 0xDA0000
	0x0338B520 LDR X0, [X0 + 0x40]
	0x0338B524 BL 0x1C16CF4
	0x0338B528 ADRP X0, 0xDA0000
	0x0338B52C LDR X0, [X0 + 0x48]
	0x0338B530 BL 0x1C16CF4
	0x0338B534 ADRP X0, 0xDA0000
	0x0338B538 LDR X0, [X0 + 0x50]
	0x0338B53C BL 0x1C16CF4
	0x0338B540 ADRP X0, 0xDA0000
	0x0338B544 LDR X0, [X0 + 0x58]
	0x0338B548 BL 0x1C16CF4
	0x0338B54C ADRP X0, 0xDA0000
	0x0338B550 LDR X0, [X0 + 0x60]
	0x0338B554 BL 0x1C16CF4
	0x0338B558 ADRP X0, 0xDA0000
	0x0338B55C LDR X0, [X0 + 0x68]
	0x0338B560 BL 0x1C16CF4
	0x0338B564 ADRP X0, 0xDA0000
	0x0338B568 LDR X0, [X0 + 0x70]
	0x0338B56C BL 0x1C16CF4
	0x0338B570 ADRP X0, 0xDA0000
	0x0338B574 LDR X0, [X0 + 0x78]
	0x0338B578 BL 0x1C16CF4
	0x0338B57C ADRP X0, 0xDA0000
	0x0338B580 LDR X0, [X0 + 0x80]
	0x0338B584 BL 0x1C16CF4
	0x0338B588 ADRP X0, 0xDA0000
	0x0338B58C LDR X0, [X0 + 0x88]
	0x0338B590 BL 0x1C16CF4
	0x0338B594 ADRP X0, 0xDA0000
	0x0338B598 LDR X0, [X0 + 0x90]
	0x0338B59C BL 0x1C16CF4
	0x0338B5A0 ADRP X0, 0xDA0000
	0x0338B5A4 LDR X0, [X0 + 0x98]
	0x0338B5A8 BL 0x1C16CF4
	0x0338B5AC ADRP X0, 0xDA0000
	0x0338B5B0 LDR X0, [X0 + 0xA0]
	0x0338B5B4 BL 0x1C16CF4
	0x0338B5B8 ADRP X0, 0xDA0000
	0x0338B5BC LDR X0, [X0 + 0xA8]
	0x0338B5C0 BL 0x1C16CF4
	0x0338B5C4 ADRP X0, 0xDA0000
	0x0338B5C8 LDR X0, [X0 + 0xB0]
	0x0338B5CC BL 0x1C16CF4
	0x0338B5D0 ADRP X0, 0xDA0000
	0x0338B5D4 LDR X0, [X0 + 0xB8]
	0x0338B5D8 BL 0x1C16CF4
	0x0338B5DC ADRP X0, 0xDA0000
	0x0338B5E0 LDR X0, [X0 + 0xC0]
	0x0338B5E4 BL 0x1C16CF4
	0x0338B5E8 ADRP X0, 0xDA0000
	0x0338B5EC LDR X0, [X0 + 0xC8]
	0x0338B5F0 BL 0x1C16CF4
	0x0338B5F4 ADRP X0, 0xDA0000

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+160], X30
	003 Move [X31+168], X25
	004 Move [X31+176], X24
	005 Move [X31+184], X23
	006 Move [X31+192], X22
	007 Move [X31+200], X21
	008 Move [X31+208], X20
	009 Move [X31+216], X19
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X23+40]
	012 Move X25, 0x1052000
	013 Move X24, 0xD9E000
	014 Move X19, X3
	015 Move [X31+152], X8
	016 Move W8, [X25+4080]
	017 Move X24, [X24+120]
	018 Move W20, W2
	019 Move X21, X1
	020 Move X22, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xD9E000
	026 Move X0, [X0+120]
	027 Call 0x1C17CF4
	028 Move X0, 0xDA0000
	029 Move X0, [X0+4072]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X25+4080], W8
	033 Move X0, [X24]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+122], V0
	036 Move [X31+96], V0
	037 Move [X31+104], V0
	038 Move [X31+64], V0
	039 Move [X31+72], V0
	040 Move [X31+32], V0
	041 Move [X31+40], V0
	042 Move [X31+1], V0
	043 Move [X31], X31
	044 Move [X31+8], X31
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Add X3, X31, 16
	050 Move W5, 1
	051 Move X0, X22
	052 Move X1, X21
	053 Move W2, W20
	054 Move X4, X19
	055 Call Number.StringToNumber, X0, X1, X2, X3, X4
	056 Add X0, X31, 16
	057 Add X1, X31, 0
	058 Call Number.NumberBufferToDecimal, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {78}
	063 Move X0, [X31]
	064 Move X1, [X31+8]
	065 Move X8, [X23+40]
	066 Move X9, [X31+152]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X20, [X31+208]
	069 Move X19, [X31+216]
	070 Move X22, [X31+192]
	071 Move X21, [X31+200]
	072 Move X24, [X31+176]
	073 Move X23, [X31+184]
	074 Move X30, [X31+160]
	075 Move X25, [X31+168]
	076 Add X31, X31, 224
	077 Return X0
	078 Move X0, [X24]
	079 Call 0x19913D0
	080 Move X8, 0xDA0000
	081 Move X8, [X8+4072]
	082 Move W0, 1
	083 Move X1, [X8]
	084 Call Number.ThrowOverflowOrFormatException, X0, X1
	085 Call 0x3EB2B20

Method: System.Boolean NumberBufferToDecimal(ref System.Number/NumberBuffer number, ref System.Decimal value)

Disassembly:
	0x0338B5F8 LDR X0, [X0 + 0xD0]
	0x0338B5FC BL 0x1C16CF4
	0x0338B600 ADRP X0, 0xDA0000
	0x0338B604 LDR X0, [X0 + 0xD8]
	0x0338B608 BL 0x1C16CF4
	0x0338B60C ADRP X0, 0xDA0000
	0x0338B610 LDR X0, [X0 + 0xE0]
	0x0338B614 BL 0x1C16CF4
	0x0338B618 ADRP X0, 0xDA0000
	0x0338B61C LDR X0, [X0 + 0xE8]
	0x0338B620 BL 0x1C16CF4
	0x0338B624 ADRP X0, 0xDA0000
	0x0338B628 LDR X0, [X0 + 0xF0]
	0x0338B62C BL 0x1C16CF4
	0x0338B630 ADRP X0, 0xDA0000
	0x0338B634 LDR X0, [X0 + 0xF8]
	0x0338B638 BL 0x1C16CF4
	0x0338B63C ADRP X0, 0xDA0000
	0x0338B640 LDR X0, [X0 + 0x100]
	0x0338B644 BL 0x1C16CF4
	0x0338B648 ADRP X0, 0xDA0000
	0x0338B64C LDR X0, [X0 + 0x108]
	0x0338B650 BL 0x1C16CF4
	0x0338B654 ADRP X0, 0xDA0000
	0x0338B658 LDR X0, [X0 + 0x110]
	0x0338B65C BL 0x1C16CF4
	0x0338B660 ADRP X0, 0xDA0000
	0x0338B664 LDR X0, [X0 + 0x118]
	0x0338B668 BL 0x1C16CF4
	0x0338B66C ADRP X0, 0xDA0000
	0x0338B670 LDR X0, [X0 + 0x120]
	0x0338B674 BL 0x1C16CF4
	0x0338B678 ADRP X0, 0xDA0000
	0x0338B67C LDR X0, [X0 + 0x128]
	0x0338B680 BL 0x1C16CF4
	0x0338B684 ADRP X0, 0xDA0000
	0x0338B688 LDR X0, [X0 + 0x130]
	0x0338B68C BL 0x1C16CF4
	0x0338B690 ADRP X0, 0xDA0000
	0x0338B694 LDR X0, [X0 + 0x138]
	0x0338B698 BL 0x1C16CF4
	0x0338B69C ADRP X0, 0xDA0000
	0x0338B6A0 LDR X0, [X0 + 0x140]
	0x0338B6A4 BL 0x1C16CF4
	0x0338B6A8 ADRP X0, 0xDA0000
	0x0338B6AC LDR X0, [X0 + 0x148]
	0x0338B6B0 BL 0x1C16CF4
	0x0338B6B4 ADRP X0, 0xDA0000
	0x0338B6B8 LDR X0, [X0 + 0x150]
	0x0338B6BC BL 0x1C16CF4
	0x0338B6C0 ADRP X0, 0xDA0000
	0x0338B6C4 LDR X0, [X0 + 0x158]
	0x0338B6C8 BL 0x1C16CF4
	0x0338B6CC ADRP X0, 0xDA0000
	0x0338B6D0 LDR X0, [X0 + 0x160]
	0x0338B6D4 BL 0x1C16CF4
	0x0338B6D8 ADRP X0, 0xDA0000
	0x0338B6DC LDR X0, [X0 + 0x168]
	0x0338B6E0 BL 0x1C16CF4
	0x0338B6E4 MOVZ W8, 0x1
	0x0338B6E8 STRB W8, [X20 + 0xFFE]
	0x0338B6EC LDR X0, [X19]
	0x0338B6F0 MOVZ W1, 0x4
	0x0338B6F4 BL 0x1C16D6C
	0x0338B6F8 CBZ X0, 0x338BC84
	0x0338B6FC LDR W8, [X0 + 0x18]
	0x0338B700 CBZ W8, 0x338BC80
	0x0338B704 ADRP X9, 0xDA0000
	0x0338B708 LDR X9, [X9 + 0x160]
	0x0338B70C CMP W8, 0x1
	0x0338B710 LDR X9, [X9]
	0x0338B714 STR X9, [X0 + 0x20]
	0x0338B718 B.EQ 0x338BC80
	0x0338B71C ADRP X9, 0xDA0000
	0x0338B720 LDR X9, [X9 + 0xC0]
	0x0338B724 CMP W8, 0x2
	0x0338B728 LDR X9, [X9]
	0x0338B72C STR X9, [X0 + 0x28]
	0x0338B730 B.LS 0x338BC80
	0x0338B734 ADRP X9, 0xDA0000
	0x0338B738 LDR X9, [X9 + 0x68]
	0x0338B73C CMP W8, 0x3
	0x0338B740 LDR X9, [X9]
	0x0338B744 STR X9, [X0 + 0x30]
	0x0338B748 B.EQ 0x338BC80
	0x0338B74C ADRP X8, 0xDA0000
	0x0338B750 LDR X8, [X8 + 0x140]
	0x0338B754 ADRP X20, 0xD9D000
	0x0338B758 MOVZ W1, 0x10
	0x0338B75C LDR X8, [X8]
	0x0338B760 LDR X20, [X20 + 0x78]
	0x0338B764 STR X8, [X0 + 0x38]
	0x0338B768 LDR X8, [X20]
	0x0338B76C LDR X8, [X8 + 0xB8]
	0x0338B770 STR X0, [X8]
	0x0338B774 LDR X0, [X19]
	0x0338B778 BL 0x1C16D6C
	0x0338B77C CBZ X0, 0x338BC84
	0x0338B780 LDR W8, [X0 + 0x18]
	0x0338B784 CBZ W8, 0x338BC80
	0x0338B788 ADRP X9, 0xDA0000
	0x0338B78C LDR X9, [X9 + 0x128]
	0x0338B790 CMP W8, 0x1
	0x0338B794 LDR X9, [X9]
	0x0338B798 STR X9, [X0 + 0x20]
	0x0338B79C B.EQ 0x338BC80
	0x0338B7A0 ADRP X9, 0xDA0000
	0x0338B7A4 LDR X9, [X9 + 0x58]
	0x0338B7A8 CMP W8, 0x2
	0x0338B7AC LDR X9, [X9]
	0x0338B7B0 STR X9, [X0 + 0x28]
	0x0338B7B4 B.LS 0x338BC80
	0x0338B7B8 ADRP X9, 0xDA0000
	0x0338B7BC LDR X9, [X9 + 0x148]
	0x0338B7C0 CMP W8, 0x3
	0x0338B7C4 LDR X9, [X9]
	0x0338B7C8 STR X9, [X0 + 0x30]
	0x0338B7CC B.EQ 0x338BC80
	0x0338B7D0 ADRP X9, 0xDA0000
	0x0338B7D4 LDR X9, [X9 + 0xB8]
	0x0338B7D8 CMP W8, 0x4
	0x0338B7DC LDR X9, [X9]
	0x0338B7E0 STR X9, [X0 + 0x38]
	0x0338B7E4 B.LS 0x338BC80
	0x0338B7E8 ADRP X9, 0xDA0000
	0x0338B7EC LDR X9, [X9 + 0x60]
	0x0338B7F0 CMP W8, 0x5
	0x0338B7F4 LDR X9, [X9]
	0x0338B7F8 STR X9, [X0 + 0x40]
	0x0338B7FC B.EQ 0x338BC80
	0x0338B800 ADRP X9, 0xDA0000
	0x0338B804 LDR X9, [X9 + 0x100]
	0x0338B808 CMP W8, 0x6
	0x0338B80C LDR X9, [X9]
	0x0338B810 STR X9, [X0 + 0x48]
	0x0338B814 B.LS 0x338BC80
	0x0338B818 ADRP X9, 0xDA0000
	0x0338B81C LDR X9, [X9 + 0x90]
	0x0338B820 CMP W8, 0x7
	0x0338B824 LDR X9, [X9]
	0x0338B828 STR X9, [X0 + 0x50]
	0x0338B82C B.EQ 0x338BC80
	0x0338B830 ADRP X9, 0xDA0000
	0x0338B834 LDR X9, [X9 + 0xA8]
	0x0338B838 CMP W8, 0x8
	0x0338B83C LDR X9, [X9]
	0x0338B840 STR X9, [X0 + 0x58]
	0x0338B844 B.LS 0x338BC80
	0x0338B848 ADRP X9, 0xDA0000
	0x0338B84C LDR X9, [X9 + 0x120]
	0x0338B850 CMP W8, 0x9
	0x0338B854 LDR X9, [X9]
	0x0338B858 STR X9, [X0 + 0x60]
	0x0338B85C B.EQ 0x338BC80
	0x0338B860 ADRP X9, 0xDA0000
	0x0338B864 LDR X9, [X9 + 0x130]
	0x0338B868 CMP W8, 0xA
	0x0338B86C LDR X9, [X9]
	0x0338B870 STR X9, [X0 + 0x68]
	0x0338B874 B.LS 0x338BC80
	0x0338B878 ADRP X9, 0xDA0000
	0x0338B87C LDR X9, [X9 + 0x150]
	0x0338B880 CMP W8, 0xB
	0x0338B884 LDR X9, [X9]
	0x0338B888 STR X9, [X0 + 0x70]
	0x0338B88C B.EQ 0x338BC80
	0x0338B890 ADRP X9, 0xDA0000
	0x0338B894 LDR X9, [X9 + 0x80]
	0x0338B898 CMP W8, 0xC
	0x0338B89C LDR X9, [X9]
	0x0338B8A0 STR X9, [X0 + 0x78]
	0x0338B8A4 B.LS 0x338BC80
	0x0338B8A8 ADRP X9, 0xDA0000
	0x0338B8AC LDR X9, [X9 + 0xC8]
	0x0338B8B0 CMP W8, 0xD
	0x0338B8B4 LDR X9, [X9]
	0x0338B8B8 STR X9, [X0 + 0x80]
	0x0338B8BC B.EQ 0x338BC80
	0x0338B8C0 ADRP X9, 0xDA0000
	0x0338B8C4 LDR X9, [X9 + 0x40]
	0x0338B8C8 CMP W8, 0xE
	0x0338B8CC LDR X9, [X9]
	0x0338B8D0 STR X9, [X0 + 0x88]
	0x0338B8D4 B.LS 0x338BC80
	0x0338B8D8 ADRP X9, 0xDA0000
	0x0338B8DC LDR X9, [X9 + 0xB0]
	0x0338B8E0 CMP W8, 0xF
	0x0338B8E4 LDR X9, [X9]
	0x0338B8E8 STR X9, [X0 + 0x90]
	0x0338B8EC B.EQ 0x338BC80

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X22+40]
	011 Move X21, 0x1052000
	012 Move X19, X1
	013 Move X20, X0
	014 Move [X31+24], X8
	015 Move W8, [X21+4081]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xD69000
	021 Move X0, [X0+1448]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+4081], W8
	025 Move X0, X20
	026 Move X1, X31
	027 Call NumberBuffer.get_digits, X0
	028 Move W23, [X20+4]
	029 Move X21, X0
	030 Move X0, X20
	031 Move X1, X31
	032 Call NumberBuffer.get_sign, X0
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move W20, W0
	035 Compare W8, 0
	036 JumpIfEqual {68}
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Or X9, X31, -7378697629483820647
	039 Add W31, W23, 28
	040 Move TEMP, 27
	041 Not TEMP
	042 Move W10, TEMP
	043 Move X1, X31
	044 NotImplemented "Instruction MOVK not yet implemented."
	045 NotImplemented "Instruction CSEL not yet implemented."
	046 Move W11, 10
	047 Add W31, W23, 28
	048 And W8, W8, 0xFFFF
	049 Subtract W12, W8, 48
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 NotImplemented "Instruction NOP not yet implemented."
	052 NotImplemented "Instruction MADD not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Subtract W23, W23, 1
	055 Compare W8, 0
	056 JumpIfNotEqual {47}
	057 Add W8, W23, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add X8, X1, X1
	062 Move X1, X8
	063 ShiftRight X1, 63
	064 And X1, X1, 0x3FFFFFFF
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Subtract W23, W23, 1
	067 Move W8, W31
	068 Move X8, 0xD69000
	069 Move X8, [X8+1448]
	070 Move X0, [X8]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X24, 0x1053000
	076 Move W8, [X24+6]
	077 Subtract W21, W31, W23
	078 Compare W8, 0
	079 JumpIfNotEqual {88}
	080 Move X0, 0xDA0000
	081 Move X0, [X0+3840]
	082 Call 0x1C17CF4
	083 Move X0, 0xD69000
	084 Move X0, [X0+1448]
	085 Call 0x1C17CF4
	086 Move W8, 1
	087 Move [X24+6], W8
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move W8, 28
	090 NotImplemented "Instruction CSEL not yet implemented."
	091 NotImplemented "Instruction BIC not yet implemented."
	092 Move [X31+8], X31
	093 Move [X31+16], X31
	094 And W4, W20, 1
	095 Add X0, X31, 8
	096 Move W1, W31
	097 Move W2, W31
	098 Move W3, W31
	099 Move X6, X31
	100 Call Decimal..ctor, X0, X1, X2, X3, X4, X5
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 Move W0, 1
	103 Move [X19], V0
	104 Move W8, W31
	105 Move W23, W10
	106 Move W10, 0x9999
	107 Or X9, X31, -7378697629483820647
	108 NotImplemented "Instruction MOVK not yet implemented."
	109 Move W3, W31
	110 NotImplemented "Instruction MOVK not yet implemented."
	111 Or X11, X31, -7378697629483820647
	112 Subtract W12, W10, 1
	113 Move W13, 10
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Compare W8, 0
	116 JumpIfEqual {149}
	117 Add W31, W23, 27
	118 NotImplemented "Instruction CMP not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 And X14, X1, 0
	124 Move X14, X14
	125 ShiftRight X14, 62
	126 And X14, X14, 0x1FFFFFFF
	127 Move X15, X1
	128 ShiftRight X15, 32
	129 And X15, X15, 0x7FFFFFFF
	130 Add X14, X14, W1
	131 Multiply X15, X15, X13
	132 Move X14, X14
	133 ShiftRight X14, 63
	134 And X14, X14, 0x3FFFFFFF
	135 Add X15, X15, X14
	136 And X1, X14, 0xFFFFFFFF
	137 Move X14, X15
	138 ShiftRight X14, 32
	139 And X14, X14, 0x7FFFFFFF
	140 NotImplemented "Instruction BFM not yet implemented."
	141 NotImplemented "Instruction MADD not yet implemented."
	142 Compare W8, 0
	143 JumpIfEqual {148}
	144 Subtract W14, W8, 48
	145 NotImplemented "Instruction LDRH not yet implemented."
	146 Add X1, X1, X14
	147 NotImplemented "Instruction CINC not yet implemented."
	148 Subtract W23, W23, 1
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move TEMP, X1
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfEqual {163}
	154 Move W10, 2
	155 NotImplemented "Instruction LDRH not yet implemented."
	156 Move W11, W10
	157 NotImplemented "Instruction CMP not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Add X10, X10, 2
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Compare W8, 0
	162 JumpIfEqual {170}
	163 Add X1, X1, 1
	164 Add W3, W3, 1
	165 Move W3, 0x9999
	166 Add W23, W23, 1
	167 Add X1, X9, 2
	168 NotImplemented "Instruction MOVK not yet implemented."
	169 Move X1, X31
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move W0, W31
	172 Move X8, [X22+40]
	173 Move X9, [X31+24]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X20, [X31+80]
	176 Move X19, [X31+88]
	177 Move X22, [X31+64]
	178 Move X21, [X31+72]
	179 Move X24, [X31+48]
	180 Move X23, [X31+56]
	181 Move X30, [X31+32]
	182 Add X31, X31, 96
	183 Return X0
	184 Add W31, W23, 29
	185 Move X2, X1
	186 ShiftRight X2, 32
	187 And X2, X2, 0x7FFFFFFF
	188 Subtract W5, W31, W23
	189 And W4, W20, 1
	190 Add X0, X31, 8
	191 Move [X31+8], X31
	192 Move [X31+16], X31
	193 And W4, W20, 1
	194 Add X0, X31, 8
	195 Move W5, 28
	196 Move [X31+8], X31
	197 Move [X31+16], X31
	198 Call 0x3EB2B20

Method: System.Double ParseDouble(System.ReadOnlySpan`1<System.Char> value, System.Globalization.NumberStyles styles, System.Globalization.NumberFormatInfo info)

Disassembly:
	0x0338B8F0 ADRP X8, 0xDA0000
	0x0338B8F4 LDR X8, [X8 + 0x138]
	0x0338B8F8 MOVZ W1, 0x4
	0x0338B8FC LDR X8, [X8]
	0x0338B900 STR X8, [X0 + 0x98]
	0x0338B904 LDR X8, [X20]
	0x0338B908 LDR X8, [X8 + 0xB8]
	0x0338B90C STR X0, [X8 + 0x8]
	0x0338B910 LDR X0, [X19]
	0x0338B914 BL 0x1C16D6C
	0x0338B918 CBZ X0, 0x338BC84
	0x0338B91C LDR W8, [X0 + 0x18]
	0x0338B920 CBZ W8, 0x338BC80
	0x0338B924 ADRP X9, 0xDA0000
	0x0338B928 LDR X9, [X9 + 0x118]
	0x0338B92C CMP W8, 0x1
	0x0338B930 LDR X9, [X9]
	0x0338B934 STR X9, [X0 + 0x20]
	0x0338B938 B.EQ 0x338BC80
	0x0338B93C ADRP X9, 0xDA0000
	0x0338B940 LDR X9, [X9 + 0x70]
	0x0338B944 CMP W8, 0x2
	0x0338B948 LDR X9, [X9]
	0x0338B94C STR X9, [X0 + 0x28]
	0x0338B950 B.LS 0x338BC80
	0x0338B954 ADRP X9, 0xDA0000
	0x0338B958 LDR X9, [X9 + 0x50]
	0x0338B95C CMP W8, 0x3
	0x0338B960 LDR X9, [X9]
	0x0338B964 STR X9, [X0 + 0x30]
	0x0338B968 B.EQ 0x338BC80
	0x0338B96C ADRP X8, 0xDA0000
	0x0338B970 LDR X8, [X8 + 0xD0]
	0x0338B974 MOVZ W1, 0xC
	0x0338B978 LDR X8, [X8]
	0x0338B97C STR X8, [X0 + 0x38]
	0x0338B980 LDR X8, [X20]
	0x0338B984 LDR X8, [X8 + 0xB8]
	0x0338B988 STR X0, [X8 + 0x10]
	0x0338B98C LDR X0, [X19]
	0x0338B990 BL 0x1C16D6C
	0x0338B994 CBZ X0, 0x338BC84
	0x0338B998 LDR W8, [X0 + 0x18]
	0x0338B99C CBZ W8, 0x338BC80
	0x0338B9A0 ADRP X9, 0xDA0000
	0x0338B9A4 LDR X9, [X9 + 0x110]
	0x0338B9A8 CMP W8, 0x1
	0x0338B9AC LDR X9, [X9]
	0x0338B9B0 STR X9, [X0 + 0x20]
	0x0338B9B4 B.EQ 0x338BC80
	0x0338B9B8 ADRP X9, 0xDA0000
	0x0338B9BC LDR X9, [X9 + 0x158]
	0x0338B9C0 CMP W8, 0x2
	0x0338B9C4 LDR X9, [X9]
	0x0338B9C8 STR X9, [X0 + 0x28]
	0x0338B9CC B.LS 0x338BC80
	0x0338B9D0 ADRP X9, 0xDA0000
	0x0338B9D4 LDR X9, [X9 + 0x78]
	0x0338B9D8 CMP W8, 0x3
	0x0338B9DC LDR X9, [X9]
	0x0338B9E0 STR X9, [X0 + 0x30]
	0x0338B9E4 B.EQ 0x338BC80
	0x0338B9E8 ADRP X9, 0xDA0000
	0x0338B9EC LDR X9, [X9 + 0x28]
	0x0338B9F0 CMP W8, 0x4
	0x0338B9F4 LDR X9, [X9]
	0x0338B9F8 STR X9, [X0 + 0x38]
	0x0338B9FC B.LS 0x338BC80
	0x0338BA00 ADRP X9, 0xDA0000
	0x0338BA04 LDR X9, [X9 + 0x30]
	0x0338BA08 CMP W8, 0x5
	0x0338BA0C LDR X9, [X9]
	0x0338BA10 STR X9, [X0 + 0x40]
	0x0338BA14 B.EQ 0x338BC80
	0x0338BA18 ADRP X9, 0xDA0000
	0x0338BA1C LDR X9, [X9 + 0x108]
	0x0338BA20 CMP W8, 0x6
	0x0338BA24 LDR X9, [X9]
	0x0338BA28 STR X9, [X0 + 0x48]
	0x0338BA2C B.LS 0x338BC80
	0x0338BA30 ADRP X9, 0xDA0000
	0x0338BA34 LDR X9, [X9 + 0xD8]
	0x0338BA38 CMP W8, 0x7
	0x0338BA3C LDR X9, [X9]
	0x0338BA40 STR X9, [X0 + 0x50]
	0x0338BA44 B.EQ 0x338BC80
	0x0338BA48 ADRP X9, 0xDA0000
	0x0338BA4C LDR X9, [X9 + 0xF8]
	0x0338BA50 CMP W8, 0x8
	0x0338BA54 LDR X9, [X9]
	0x0338BA58 STR X9, [X0 + 0x58]
	0x0338BA5C B.LS 0x338BC80
	0x0338BA60 ADRP X9, 0xDA0000
	0x0338BA64 LDR X9, [X9 + 0xE8]
	0x0338BA68 CMP W8, 0x9
	0x0338BA6C LDR X9, [X9]
	0x0338BA70 STR X9, [X0 + 0x60]
	0x0338BA74 B.EQ 0x338BC80
	0x0338BA78 ADRP X9, 0xDA0000
	0x0338BA7C LDR X9, [X9 + 0x38]
	0x0338BA80 CMP W8, 0xA
	0x0338BA84 LDR X9, [X9]
	0x0338BA88 STR X9, [X0 + 0x68]
	0x0338BA8C B.LS 0x338BC80
	0x0338BA90 ADRP X9, 0xDA0000
	0x0338BA94 LDR X9, [X9 + 0xA0]
	0x0338BA98 CMP W8, 0xB
	0x0338BA9C LDR X9, [X9]
	0x0338BAA0 STR X9, [X0 + 0x70]
	0x0338BAA4 B.EQ 0x338BC80
	0x0338BAA8 ADRP X8, 0xDA0000
	0x0338BAAC LDR X8, [X8 + 0x88]
	0x0338BAB0 MOVZ W1, 0x5
	0x0338BAB4 LDR X8, [X8]
	0x0338BAB8 STR X8, [X0 + 0x78]
	0x0338BABC LDR X8, [X20]
	0x0338BAC0 LDR X8, [X8 + 0xB8]
	0x0338BAC4 STR X0, [X8 + 0x18]
	0x0338BAC8 LDR X0, [X19]
	0x0338BACC BL 0x1C16D6C
	0x0338BAD0 CBZ X0, 0x338BC84
	0x0338BAD4 LDR W8, [X0 + 0x18]
	0x0338BAD8 CBZ W8, 0x338BC80
	0x0338BADC ADRP X9, 0xDA0000
	0x0338BAE0 LDR X9, [X9 + 0x168]
	0x0338BAE4 CMP W8, 0x1
	0x0338BAE8 LDR X9, [X9]
	0x0338BAEC STR X9, [X0 + 0x20]
	0x0338BAF0 B.EQ 0x338BC80
	0x0338BAF4 ADRP X9, 0xDA0000
	0x0338BAF8 LDR X9, [X9 + 0x48]
	0x0338BAFC CMP W8, 0x2
	0x0338BB00 LDR X9, [X9]
	0x0338BB04 STR X9, [X0 + 0x28]
	0x0338BB08 B.LS 0x338BC80
	0x0338BB0C ADRP X9, 0xDA0000
	0x0338BB10 LDR X9, [X9 + 0xE0]
	0x0338BB14 CMP W8, 0x3
	0x0338BB18 LDR X9, [X9]
	0x0338BB1C STR X9, [X0 + 0x30]
	0x0338BB20 B.EQ 0x338BC80
	0x0338BB24 ADRP X9, 0xDA0000
	0x0338BB28 LDR X9, [X9 + 0x98]
	0x0338BB2C CMP W8, 0x4
	0x0338BB30 LDR X9, [X9]
	0x0338BB34 STR X9, [X0 + 0x38]
	0x0338BB38 B.LS 0x338BC80
	0x0338BB3C ADRP X8, 0xDA0000
	0x0338BB40 LDR X8, [X8 + 0xF0]
	0x0338BB44 ADRP X9, 0xD69000
	0x0338BB48 ADRP X19, 0xDA0000
	0x0338BB4C ADRP X23, 0xD70000
	0x0338BB50 LDR X8, [X8]
	0x0338BB54 ADRP X24, 0xDA0000
	0x0338BB58 ADRP X25, 0xD97000
	0x0338BB5C ADRP X26, 0xDA0000
	0x0338BB60 STR X8, [X0 + 0x40]
	0x0338BB64 LDR X8, [X20]
	0x0338BB68 LDR X9, [X9 + 0xE58]
	0x0338BB6C LDR X19, [X19 + 0x18]
	0x0338BB70 LDR X23, [X23 + 0x568]
	0x0338BB74 LDR X8, [X8 + 0xB8]
	0x0338BB78 LDR X24, [X24 + 0x20]
	0x0338BB7C LDR X25, [X25 + 0x708]
	0x0338BB80 LDR X26, [X26 + 0x10]
	0x0338BB84 STR X0, [X8 + 0x20]
	0x0338BB88 LDR X0, [X9]
	0x0338BB8C ADRP X27, 0xDA0000
	0x0338BB90 ADRP X22, 0xD90000
	0x0338BB94 ADRP X21, 0xDA0000
	0x0338BB98 LDR X27, [X27 + 0x8]
	0x0338BB9C LDR X22, [X22 + 0x820]
	0x0338BBA0 LDR X21, [X21]
	0x0338BBA4 MOVZ W1, 0x100
	0x0338BBA8 BL 0x1C16D6C
	0x0338BBAC LDR X1, [X19]
	0x0338BBB0 MOV X2, X31
	0x0338BBB4 MOV X19, X0
	0x0338BBB8 BL 0x32C5BD8
	0x0338BBBC LDR X8, [X20]
	0x0338BBC0 MOVZ W1, 0x1E
	0x0338BBC4 LDR X8, [X8 + 0xB8]
	0x0338BBC8 STR X19, [X8 + 0x28]
	0x0338BBCC LDR X0, [X23]
	0x0338BBD0 BL 0x1C16D6C
	0x0338BBD4 LDR X1, [X24]
	0x0338BBD8 MOV X2, X31
	0x0338BBDC MOV X19, X0
	0x0338BBE0 BL 0x32C5BD8
	0x0338BBE4 LDR X8, [X20]
	0x0338BBE8 MOVZ W1, 0xF
	0x0338BBEC LDR X8, [X8 + 0xB8]
	0x0338BBF0 STR X19, [X8 + 0x30]
	0x0338BBF4 LDR X0, [X25]
	0x0338BBF8 BL 0x1C16D6C
	0x0338BBFC LDR X1, [X26]
	0x0338BC00 MOV X2, X31
	0x0338BC04 MOV X19, X0
	0x0338BC08 BL 0x32C5BD8
	0x0338BC0C LDR X8, [X20]
	0x0338BC10 MOVZ W1, 0x2A
	0x0338BC14 LDR X8, [X8 + 0xB8]
	0x0338BC18 STR X19, [X8 + 0x38]
	0x0338BC1C LDR X0, [X23]
	0x0338BC20 BL 0x1C16D6C
	0x0338BC24 LDR X1, [X27]
	0x0338BC28 MOV X2, X31
	0x0338BC2C MOV X19, X0
	0x0338BC30 BL 0x32C5BD8
	0x0338BC34 LDR X8, [X20]
	0x0338BC38 MOVZ W1, 0x15
	0x0338BC3C LDR X8, [X8 + 0xB8]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+160], X30
	003 Move [X31+168], X27
	004 Move [X31+176], X26
	005 Move [X31+184], X25
	006 Move [X31+192], X24
	007 Move [X31+200], X23
	008 Move [X31+208], X22
	009 Move [X31+216], X21
	010 Move [X31+224], X20
	011 Move [X31+232], X19
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X24+40]
	014 Move X23, 0x1052000
	015 Move X25, 0xD9E000
	016 Move X19, X3
	017 Move [X31+152], X8
	018 Move W8, [X23+4082]
	019 Move X25, [X25+120]
	020 Move W22, W2
	021 Move X20, X1
	022 Move X21, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, 0xD9E000
	028 Move X0, [X0+120]
	029 Call 0x1C17CF4
	030 Move X0, 0xDA0000
	031 Move X0, [X0+4080]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+4082], W8
	035 Move X0, [X25]
	036 NotImplemented "Instruction MOVI not yet implemented."
	037 Move [X31+16], V0
	038 Move [X31+24], V0
	039 Move [X31+48], V0
	040 Move [X31+56], V0
	041 Move [X31+80], V0
	042 Move [X31+88], V0
	043 Move [X31+7], V0
	044 Move [X31+122], V0
	045 Move [X31+8], X31
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Add X3, X31, 16
	051 Move X0, X21
	052 Move X1, X20
	053 Move W2, W22
	054 Move X4, X19
	055 Move W5, W31
	056 Call Number.TryStringToNumber, X0, X1, X2, X3, X4
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {74}
	061 Move X0, [X25]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Add X0, X31, 16
	067 Add X1, X31, 8
	068 Call Number.NumberBufferToDouble, X0, X1
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {238}
	073 Move V0, [X31+8]
	074 Move X0, X21
	075 Move X1, X20
	076 Call MemoryExtensions.TrimStart, X0
	077 Call MemoryExtensions.TrimEnd, X0
	078 Compare X19, 0
	079 JumpIfEqual {245}
	080 Move X27, 0x104F000
	081 Move W8, [X27+1890]
	082 Move X22, [X19+112]
	083 Move X20, X0
	084 Move X21, X1
	085 Compare W8, 0
	086 JumpIfEqual {94}
	087 Compare X22, 0
	088 JumpIfEqual {101}
	089 Move X0, X22
	090 Move X1, X31
	091 Call String.GetRawStringData, X0
	092 Move W22, [X22+16]
	093 Move X23, X0
	094 Move X0, 0xD90000
	095 Move X0, [X0+656]
	096 Call 0x1C17CF4
	097 Move W8, 1
	098 Move [X27+1890], W8
	099 Compare X22, 0
	100 JumpIfNotEqual {89}
	101 Move X23, X31
	102 Move X26, 0x1052000
	103 Move W8, [X26+3334]
	104 Compare W8, 0
	105 JumpIfNotEqual {114}
	106 Move X0, 0xD90000
	107 Move X0, [X0+720]
	108 Call 0x1C17CF4
	109 Move X0, 0xD98000
	110 Move X0, [X0+40]
	111 Call 0x1C17CF4
	112 Move W8, 1
	113 Move [X26+3334], W8
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Compare W21, 0
	116 JumpIfEqual {129}
	117 Move X8, 0xD90000
	118 Move X8, [X8+720]
	119 Move X0, X20
	120 Move X1, X21
	121 Move X2, X23
	122 Move X4, [X8]
	123 Move X3, X22
	124 Call 0x1F97ECC
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {130}
	129 Move X8, 0x7FF00000
	130 Move W8, [X27+1890]
	131 Move X22, [X19+120]
	132 Compare W8, 0
	133 JumpIfEqual {141}
	134 Compare X22, 0
	135 JumpIfEqual {148}
	136 Move X0, X22
	137 Move X1, X31
	138 Call String.GetRawStringData, X0
	139 Move W22, [X22+16]
	140 Move X23, X0
	141 Move X0, 0xD90000
	142 Move X0, [X0+656]
	143 Call 0x1C17CF4
	144 Move W8, 1
	145 Move [X27+1890], W8
	146 Compare X22, 0
	147 JumpIfNotEqual {136}
	148 Move X23, X31
	149 Move W8, [X26+3334]
	150 Compare W8, 0
	151 JumpIfNotEqual {160}
	152 Move X0, 0xD90000
	153 Move X0, [X0+720]
	154 Call 0x1C17CF4
	155 Move X0, 0xD98000
	156 Move X0, [X0+40]
	157 Call 0x1C17CF4
	158 Move W8, 1
	159 Move [X26+3334], W8
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Compare W21, 0
	162 JumpIfEqual {175}
	163 Move X8, 0xD90000
	164 Move X8, [X8+720]
	165 Move X0, X20
	166 Move X1, X21
	167 Move X2, X23
	168 Move X4, [X8]
	169 Move X3, X22
	170 Call 0x1F97ECC
	171 Move TEMP, X0
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfNotEqual {176}
	175 Move X8, 0xFFF00000
	176 Move W8, [X27+1890]
	177 Move X19, [X19+104]
	178 Compare W8, 0
	179 JumpIfEqual {187}
	180 Compare X19, 0
	181 JumpIfEqual {194}
	182 Move X0, X19
	183 Move X1, X31
	184 Call String.GetRawStringData, X0
	185 Move W19, [X19+16]
	186 Move X22, X0
	187 Move X0, 0xD90000
	188 Move X0, [X0+656]
	189 Call 0x1C17CF4
	190 Move W8, 1
	191 Move [X27+1890], W8
	192 Compare X19, 0
	193 JumpIfNotEqual {182}
	194 Move X22, X31
	195 Move W8, [X26+3334]
	196 Compare W8, 0
	197 JumpIfNotEqual {206}
	198 Move X0, 0xD90000
	199 Move X0, [X0+720]
	200 Call 0x1C17CF4
	201 Move X0, 0xD98000
	202 Move X0, [X0+40]
	203 Call 0x1C17CF4
	204 Move W8, 1
	205 Move [X26+3334], W8
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Compare W21, 0
	208 JumpIfEqual {221}
	209 Move X8, 0xD90000
	210 Move X8, [X8+720]
	211 Move X0, X20
	212 Move X1, X21
	213 Move X2, X22
	214 Move X4, [X8]
	215 Move X3, X19
	216 Call 0x1F97ECC
	217 Move TEMP, X0
	218 And TEMP, TEMP, 1
	219 Compare TEMP, 1
	220 JumpIfNotEqual {246}
	221 Move X8, 0x7FF80000
	222 Move D0, X8
	223 Move X8, [X24+40]
	224 Move X9, [X31+152]
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move X20, [X31+224]
	227 Move X19, [X31+232]
	228 Move X22, [X31+208]
	229 Move X21, [X31+216]
	230 Move X24, [X31+192]
	231 Move X23, [X31+200]
	232 Move X26, [X31+176]
	233 Move X25, [X31+184]
	234 Move X30, [X31+160]
	235 Move X27, [X31+168]
	236 Add X31, X31, 240
	237 Return V0
	238 Move X0, [X25]
	239 Call 0x19913D0
	240 Move X8, 0xDA0000
	241 Move X8, [X8+4080]
	242 Move W0, 1
	243 Move X1, [X8]
	244 Call Number.ThrowOverflowOrFormatException, X0, X1
	245 Call 0x1C17F20
	246 Move X0, [X25]
	247 Call 0x19913D0
	248 Move W0, W31
	249 Move X1, X31
	250 Call Number.ThrowOverflowOrFormatException, X0, X1
	251 Call 0x3EB2B20

Method: System.Single ParseSingle(System.ReadOnlySpan`1<System.Char> value, System.Globalization.NumberStyles styles, System.Globalization.NumberFormatInfo info)

Disassembly:
	0x0338BCCC STRB W8, [X1 + 0x3]
	0x0338BCD0 B.LS 0x338BD94
	0x0338BCD4 LDRB W8, [X0 + 0x4]
	0x0338BCD8 CMP W2, 0x5
	0x0338BCDC STRB W8, [X1 + 0x4]
	0x0338BCE0 B.EQ 0x338BD94
	0x0338BCE4 LDRB W8, [X0 + 0x5]
	0x0338BCE8 CMP W2, 0x6
	0x0338BCEC STRB W8, [X1 + 0x5]
	0x0338BCF0 B.LS 0x338BD94
	0x0338BCF4 LDRB W8, [X0 + 0x6]
	0x0338BCF8 CMP W2, 0x7
	0x0338BCFC STRB W8, [X1 + 0x6]
	0x0338BD00 B.EQ 0x338BD94
	0x0338BD04 LDRB W8, [X0 + 0x7]
	0x0338BD08 CMP W2, 0x8
	0x0338BD0C STRB W8, [X1 + 0x7]
	0x0338BD10 B.LS 0x338BD94
	0x0338BD14 LDRB W8, [X0 + 0x8]
	0x0338BD18 CMP W2, 0x9
	0x0338BD1C STRB W8, [X1 + 0x8]
	0x0338BD20 B.EQ 0x338BD94
	0x0338BD24 LDRB W8, [X0 + 0x9]
	0x0338BD28 CMP W2, 0xA
	0x0338BD2C STRB W8, [X1 + 0x9]
	0x0338BD30 B.LS 0x338BD94
	0x0338BD34 LDRB W8, [X0 + 0xA]
	0x0338BD38 CMP W2, 0xB
	0x0338BD3C STRB W8, [X1 + 0xA]
	0x0338BD40 B.EQ 0x338BD94
	0x0338BD44 LDRB W8, [X0 + 0xB]
	0x0338BD48 CMP W2, 0xC
	0x0338BD4C STRB W8, [X1 + 0xB]
	0x0338BD50 B.LS 0x338BD94
	0x0338BD54 LDRB W8, [X0 + 0xC]
	0x0338BD58 CMP W2, 0xD
	0x0338BD5C STRB W8, [X1 + 0xC]
	0x0338BD60 B.EQ 0x338BD94
	0x0338BD64 LDRB W8, [X0 + 0xD]
	0x0338BD68 CMP W2, 0xE
	0x0338BD6C STRB W8, [X1 + 0xD]
	0x0338BD70 B.LS 0x338BD94
	0x0338BD74 LDRB W8, [X0 + 0xE]
	0x0338BD78 CMP W2, 0xF
	0x0338BD7C STRB W8, [X1 + 0xE]
	0x0338BD80 B.EQ 0x338BD94
	0x0338BD84 LDRB W8, [X0 + 0xF]
	0x0338BD88 STRB W8, [X1 + 0xF]
	0x0338BD8C LDR X30, [X31], #0x10
	0x0338BD90 RET
	0x0338BD94 BL 0x1C16F28
	0x0338BD98 STP X30, X21, [X31 - 0x20]!
	0x0338BD9C STP X20, X19, [X31 + 0x10]
	0x0338BDA0 ADRP X21, 0x1052000
	0x0338BDA4 LDRB W8, [X21 + 0x2]
	0x0338BDA8 MOV X19, X1
	0x0338BDAC MOV W20, W0
	0x0338BDB0 CBNZ W8, 0x338BDC8
	0x0338BDB4 ADRP X0, 0xD9D000
	0x0338BDB8 LDR X0, [X0 + 0x78]
	0x0338BDBC BL 0x1C16CF4
	0x0338BDC0 MOVZ W8, 0x1
	0x0338BDC4 STRB W8, [X21 + 0x2]
	0x0338BDC8 MOVZ W8, 0xA
	0x0338BDCC STR W8, [X19]
	0x0338BDD0 TBNZ X20, 0x1F, 0x338BDE8
	0x0338BDD4 MOV X0, X19
	0x0338BDD8 MOV W1, W31
	0x0338BDDC MOV X2, X31
	0x0338BDE0 BL 0x338C39C
	0x0338BDE4 B 0x338BDFC
	0x0338BDE8 MOVZ W1, 0x1
	0x0338BDEC MOV X0, X19
	0x0338BDF0 MOV X2, X31
	0x0338BDF4 BL 0x338C39C
	0x0338BDF8 SUB W20, W31, W20
	0x0338BDFC MOV X0, X19
	0x0338BE00 MOV X1, X31
	0x0338BE04 BL 0x338C3A8
	0x0338BE08 ADRP X8, 0xD9D000
	0x0338BE0C LDR X8, [X8 + 0x78]
	0x0338BE10 MOV X21, X0
	0x0338BE14 LDR X8, [X8]
	0x0338BE18 LDR W9, [X8 + 0xE0]
	0x0338BE1C CBNZ W9, 0x338BE28
	0x0338BE20 MOV X0, X8
	0x0338BE24 BL 0x1C16DFC
	0x0338BE28 ADD X8, X21, 0x14
	0x0338BE2C CBZ W20, 0x338BE74
	0x0338BE30 MOVZ W9, 0xCCCD
	0x0338BE34 MOVN W11, 0x1
	0x0338BE38 MOVK W9, 0xCCCC0000
	0x0338BE3C MOVN W10, 0x9
	0x0338BE40 MOV X21, X8
	0x0338BE44 MOV W13, W11
	0x0338BE48 UMADDL X11, X20, X9, X31
	0x0338BE4C MOV W12, W20
	0x0338BE50 UBFM X20, X11, 0x23, 0x3F
	0x0338BE54 MADD W11, W20, W10, W12
	0x0338BE58 ADD W11, W11, 0x30
	0x0338BE5C STRH W11, [X21 - 0x2]!
	0x0338BE60 SUB W11, W13, 0x1
	0x0338BE64 TBZ X13, 0x1F, 0x338BE44
	0x0338BE68 CMP W12, 0x9
	0x0338BE6C B.HI 0x338BE44
	0x0338BE70 B 0x338BE78
	0x0338BE74 MOV X21, X8
	0x0338BE78 SUB X8, X8, X21
	0x0338BE7C CMP X8, 0x0
	0x0338BE80 CINC X8, X8, LT
	0x0338BE84 UBFM X20, X8, 0x1, 0x3F
	0x0338BE88 MOV X0, X19
	0x0338BE8C MOV X1, X31
	0x0338BE90 STR W20, [X19 + 0x4]
	0x0338BE94 BL 0x338C3A8
	0x0338BE98 CMP W20, 0x1
	0x0338BE9C B.MI 0x338BEB4
	0x0338BEA0 LDRH W8, [X21], #0x2
	0x0338BEA4 SUB W20, W20, 0x1
	0x0338BEA8 CMP W20, 0x0
	0x0338BEAC STRH W8, [X0], #0x2
	0x0338BEB0 B.GT 0x338BEA0
	0x0338BEB4 LDP X20, X19, [X31 + 0x10]
	0x0338BEB8 STRH W31, [X0]
	0x0338BEBC LDP X30, X21, [X31], #0x20
	0x0338BEC0 RET
	0x0338BEC4 STP X30, X21, [X31 - 0x20]!
	0x0338BEC8 STP X20, X19, [X31 + 0x10]
	0x0338BECC ADRP X21, 0x1052000
	0x0338BED0 LDRB W8, [X21 + 0x3]
	0x0338BED4 MOV X19, X1
	0x0338BED8 MOV W20, W0
	0x0338BEDC CBNZ W8, 0x338BEF4
	0x0338BEE0 ADRP X0, 0xD9D000
	0x0338BEE4 LDR X0, [X0 + 0x78]
	0x0338BEE8 BL 0x1C16CF4
	0x0338BEEC MOVZ W8, 0x1
	0x0338BEF0 STRB W8, [X21 + 0x3]
	0x0338BEF4 MOVZ W8, 0xA
	0x0338BEF8 MOV X0, X19
	0x0338BEFC MOV W1, W31
	0x0338BF00 MOV X2, X31
	0x0338BF04 STR W8, [X19]
	0x0338BF08 BL 0x338C39C
	0x0338BF0C MOV X0, X19
	0x0338BF10 MOV X1, X31
	0x0338BF14 BL 0x338C3A8
	0x0338BF18 ADRP X8, 0xD9D000
	0x0338BF1C LDR X8, [X8 + 0x78]
	0x0338BF20 MOV X21, X0
	0x0338BF24 LDR X8, [X8]
	0x0338BF28 LDR W9, [X8 + 0xE0]
	0x0338BF2C CBNZ W9, 0x338BF38
	0x0338BF30 MOV X0, X8
	0x0338BF34 BL 0x1C16DFC
	0x0338BF38 ADD X8, X21, 0x14
	0x0338BF3C CBZ W20, 0x338BF84
	0x0338BF40 MOVZ W9, 0xCCCD
	0x0338BF44 MOVN W11, 0x1
	0x0338BF48 MOVK W9, 0xCCCC0000
	0x0338BF4C MOVN W10, 0x9
	0x0338BF50 MOV X21, X8
	0x0338BF54 MOV W13, W11
	0x0338BF58 UMADDL X11, X20, X9, X31
	0x0338BF5C MOV W12, W20
	0x0338BF60 UBFM X20, X11, 0x23, 0x3F
	0x0338BF64 MADD W11, W20, W10, W12
	0x0338BF68 ADD W11, W11, 0x30
	0x0338BF6C STRH W11, [X21 - 0x2]!
	0x0338BF70 SUB W11, W13, 0x1
	0x0338BF74 TBZ X13, 0x1F, 0x338BF54
	0x0338BF78 CMP W12, 0x9
	0x0338BF7C B.HI 0x338BF54
	0x0338BF80 B 0x338BF88
	0x0338BF84 MOV X21, X8
	0x0338BF88 SUB X8, X8, X21
	0x0338BF8C CMP X8, 0x0
	0x0338BF90 CINC X8, X8, LT
	0x0338BF94 UBFM X20, X8, 0x1, 0x3F
	0x0338BF98 MOV X0, X19
	0x0338BF9C MOV X1, X31
	0x0338BFA0 STR W20, [X19 + 0x4]
	0x0338BFA4 BL 0x338C3A8
	0x0338BFA8 CMP W20, 0x1
	0x0338BFAC B.MI 0x338BFC4
	0x0338BFB0 LDRH W8, [X21], #0x2
	0x0338BFB4 SUB W20, W20, 0x1
	0x0338BFB8 CMP W20, 0x0
	0x0338BFBC STRH W8, [X0], #0x2
	0x0338BFC0 B.GT 0x338BFB0
	0x0338BFC4 LDP X20, X19, [X31 + 0x10]
	0x0338BFC8 STRH W31, [X0]
	0x0338BFCC LDP X30, X21, [X31], #0x20
	0x0338BFD0 RET
	0x0338BFD4 STR X30, [X31 - 0x40]!
	0x0338BFD8 STP X24, X23, [X31 + 0x10]
	0x0338BFDC STP X22, X21, [X31 + 0x20]
	0x0338BFE0 STP X20, X19, [X31 + 0x30]
	0x0338BFE4 LDR X8, [X3 + 0x38]
	0x0338BFE8 MOV X21, X3
	0x0338BFEC MOV W20, W2
	0x0338BFF0 MOV X19, X1
	0x0338BFF4 MOV X22, X0
	0x0338BFF8 CBNZ X8, 0x338C034
	0x0338BFFC ADRP X0, 0xD8F000
	0x0338C000 LDR X0, [X0 + 0xD68]
	0x0338C004 BL 0x1C16CF4
	0x0338C008 ADRP X0, 0xD8E000
	0x0338C00C LDR X0, [X0 + 0xD70]
	0x0338C010 BL 0x1C16CF4
	0x0338C014 ADRP X0, 0xD67000
	0x0338C018 LDR X0, [X0 + 0x6C0]
	0x0338C01C BL 0x1C16CF4
	0x0338C020 LDR X8, [X21 + 0x38]
	0x0338C024 CBNZ X8, 0x338C034
	0x0338C028 MOV X0, X21
	0x0338C02C BL 0x1C5C6E0

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+160], X30
	003 Move [X31+168], X27
	004 Move [X31+176], X26
	005 Move [X31+184], X25
	006 Move [X31+192], X24
	007 Move [X31+200], X23
	008 Move [X31+208], X22
	009 Move [X31+216], X21
	010 Move [X31+224], X20
	011 Move [X31+232], X19
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X24+40]
	014 Move X23, 0x1052000
	015 Move X25, 0xD9E000
	016 Move X19, X3
	017 Move [X31+152], X8
	018 Move W8, [X23+4083]
	019 Move X25, [X25+120]
	020 Move W22, W2
	021 Move X20, X1
	022 Move X21, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, 0xD9E000
	028 Move X0, [X0+120]
	029 Call 0x1C17CF4
	030 Move X0, 0xDA0000
	031 Move X0, [X0+4088]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+4083], W8
	035 Move X0, [X25]
	036 NotImplemented "Instruction MOVI not yet implemented."
	037 Move [X31+16], V0
	038 Move [X31+24], V0
	039 Move [X31+48], V0
	040 Move [X31+56], V0
	041 Move [X31+80], V0
	042 Move [X31+88], V0
	043 Move [X31+7], V0
	044 Move [X31+122], V0
	045 Move [X31+8], X31
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Add X3, X31, 16
	051 Move X0, X21
	052 Move X1, X20
	053 Move W2, W22
	054 Move X4, X19
	055 Move W5, W31
	056 Call Number.TryStringToNumber, X0, X1, X2, X3, X4
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {86}
	061 Move X0, [X25]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Add X0, X31, 16
	067 Add X1, X31, 8
	068 Call Number.NumberBufferToDouble, X0, X1
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {79}
	073 Move V0, [X31+8]
	074 Move W9, 0x7F800000
	075 NotImplemented "Instruction INVALID not yet implemented."
	076 Move W8, S0
	077 And W8, W8, 0x7FFFFFFF
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X0, [X25]
	080 Call 0x19913D0
	081 Move X8, 0xDA0000
	082 Move X8, [X8+4088]
	083 Move W0, 1
	084 Move X1, [X8]
	085 Call Number.ThrowOverflowOrFormatException, X0, X1
	086 Move X0, X21
	087 Move X1, X20
	088 Call MemoryExtensions.TrimStart, X0
	089 Call MemoryExtensions.TrimEnd, X0
	090 Compare X19, 0
	091 JumpIfEqual {250}
	092 Move X27, 0x104F000
	093 Move W8, [X27+1890]
	094 Move X22, [X19+112]
	095 Move X20, X0
	096 Move X21, X1
	097 Compare W8, 0
	098 JumpIfEqual {106}
	099 Compare X22, 0
	100 JumpIfEqual {113}
	101 Move X0, X22
	102 Move X1, X31
	103 Call String.GetRawStringData, X0
	104 Move W22, [X22+16]
	105 Move X23, X0
	106 Move X0, 0xD90000
	107 Move X0, [X0+656]
	108 Call 0x1C17CF4
	109 Move W8, 1
	110 Move [X27+1890], W8
	111 Compare X22, 0
	112 JumpIfNotEqual {101}
	113 Move X23, X31
	114 Move X26, 0x1052000
	115 Move W8, [X26+3334]
	116 Compare W8, 0
	117 JumpIfNotEqual {126}
	118 Move X0, 0xD90000
	119 Move X0, [X0+720]
	120 Call 0x1C17CF4
	121 Move X0, 0xD98000
	122 Move X0, [X0+40]
	123 Call 0x1C17CF4
	124 Move W8, 1
	125 Move [X26+3334], W8
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Compare W21, 0
	128 JumpIfEqual {141}
	129 Move X8, 0xD90000
	130 Move X8, [X8+720]
	131 Move X0, X20
	132 Move X1, X21
	133 Move X2, X23
	134 Move X4, [X8]
	135 Move X3, X22
	136 Call 0x1F97ECC
	137 Move TEMP, X0
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfNotEqual {142}
	141 Move W8, 0x7F800000
	142 Move W8, [X27+1890]
	143 Move X22, [X19+120]
	144 Compare W8, 0
	145 JumpIfEqual {153}
	146 Compare X22, 0
	147 JumpIfEqual {160}
	148 Move X0, X22
	149 Move X1, X31
	150 Call String.GetRawStringData, X0
	151 Move W22, [X22+16]
	152 Move X23, X0
	153 Move X0, 0xD90000
	154 Move X0, [X0+656]
	155 Call 0x1C17CF4
	156 Move W8, 1
	157 Move [X27+1890], W8
	158 Compare X22, 0
	159 JumpIfNotEqual {148}
	160 Move X23, X31
	161 Move W8, [X26+3334]
	162 Compare W8, 0
	163 JumpIfNotEqual {172}
	164 Move X0, 0xD90000
	165 Move X0, [X0+720]
	166 Call 0x1C17CF4
	167 Move X0, 0xD98000
	168 Move X0, [X0+40]
	169 Call 0x1C17CF4
	170 Move W8, 1
	171 Move [X26+3334], W8
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Compare W21, 0
	174 JumpIfEqual {187}
	175 Move X8, 0xD90000
	176 Move X8, [X8+720]
	177 Move X0, X20
	178 Move X1, X21
	179 Move X2, X23
	180 Move X4, [X8]
	181 Move X3, X22
	182 Call 0x1F97ECC
	183 Move TEMP, X0
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfNotEqual {188}
	187 Move W8, 0xFF800000
	188 Move W8, [X27+1890]
	189 Move X19, [X19+104]
	190 Compare W8, 0
	191 JumpIfEqual {199}
	192 Compare X19, 0
	193 JumpIfEqual {206}
	194 Move X0, X19
	195 Move X1, X31
	196 Call String.GetRawStringData, X0
	197 Move W19, [X19+16]
	198 Move X22, X0
	199 Move X0, 0xD90000
	200 Move X0, [X0+656]
	201 Call 0x1C17CF4
	202 Move W8, 1
	203 Move [X27+1890], W8
	204 Compare X19, 0
	205 JumpIfNotEqual {194}
	206 Move X22, X31
	207 Move W8, [X26+3334]
	208 Compare W8, 0
	209 JumpIfNotEqual {218}
	210 Move X0, 0xD90000
	211 Move X0, [X0+720]
	212 Call 0x1C17CF4
	213 Move X0, 0xD98000
	214 Move X0, [X0+40]
	215 Call 0x1C17CF4
	216 Move W8, 1
	217 Move [X26+3334], W8
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Compare W21, 0
	220 JumpIfEqual {233}
	221 Move X8, 0xD90000
	222 Move X8, [X8+720]
	223 Move X0, X20
	224 Move X1, X21
	225 Move X2, X22
	226 Move X4, [X8]
	227 Move X3, X19
	228 Call 0x1F97ECC
	229 Move TEMP, X0
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfNotEqual {251}
	233 Move W8, 0x7FC00000
	234 Move S0, W8
	235 Move X8, [X24+40]
	236 Move X9, [X31+152]
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move X20, [X31+224]
	239 Move X19, [X31+232]
	240 Move X22, [X31+208]
	241 Move X21, [X31+216]
	242 Move X24, [X31+192]
	243 Move X23, [X31+200]
	244 Move X26, [X31+176]
	245 Move X25, [X31+184]
	246 Move X30, [X31+160]
	247 Move X27, [X31+168]
	248 Add X31, X31, 240
	249 Return V0
	250 Call 0x1C17F20
	251 Move X0, [X25]
	252 Call 0x19913D0
	253 Move W0, W31
	254 Move X1, X31
	255 Call Number.ThrowOverflowOrFormatException, X0, X1
	256 Call 0x3EB2B20

Method: System.Boolean TryParseDecimal(System.ReadOnlySpan`1<System.Char> value, System.Globalization.NumberStyles styles, System.Globalization.NumberFormatInfo info, out System.Decimal result)

Disassembly:
	0x0338C030 LDR X8, [X21 + 0x38]
	0x0338C034 ADRP X24, 0xD67000
	0x0338C038 LDR X24, [X24 + 0x6C0]
	0x0338C03C LDR X23, [X8]
	0x0338C040 LDR X0, [X24]
	0x0338C044 LDR W9, [X0 + 0xE0]
	0x0338C048 CBNZ W9, 0x338C050
	0x0338C04C BL 0x1C16DFC
	0x0338C050 MOV X0, X23
	0x0338C054 MOV X1, X31
	0x0338C058 BL 0x338C698
	0x0338C05C ADRP X8, 0xD8E000
	0x0338C060 LDR X8, [X8 + 0xD68]
	0x0338C064 MOV X23, X0
	0x0338C068 MOV X1, X31
	0x0338C06C LDR X8, [X8]
	0x0338C070 MOV X0, X8
	0x0338C074 BL 0x338C698
	0x0338C078 MOV X1, X0
	0x0338C07C MOV X0, X23
	0x0338C080 MOV X2, X31
	0x0338C084 BL 0x3395194
	0x0338C088 TBZ X0, 0x0, 0x338C0C0
	0x0338C08C LDR X8, [X21 + 0x38]
	0x0338C090 MOV X0, X22
	0x0338C094 MOV X1, X19
	0x0338C098 LDR X2, [X8 + 0x10]
	0x0338C09C BL 0x2218CF8
	0x0338C0A0 MOV W1, W20
	0x0338C0A4 MOV W2, W19
	0x0338C0A8 LDP X20, X19, [X31 + 0x30]
	0x0338C0AC LDP X22, X21, [X31 + 0x20]
	0x0338C0B0 LDP X24, X23, [X31 + 0x10]
	0x0338C0B4 MOV X3, X31
	0x0338C0B8 LDR X30, [X31], #0x40
	0x0338C0BC B 0x3390DC0
	0x0338C0C0 LDR X0, [X24]
	0x0338C0C4 LDR X8, [X21 + 0x38]
	0x0338C0C8 LDR W9, [X0 + 0xE0]
	0x0338C0CC LDR X23, [X8]
	0x0338C0D0 CBNZ W9, 0x338C0D8
	0x0338C0D4 BL 0x1C16DFC
	0x0338C0D8 MOV X0, X23
	0x0338C0DC MOV X1, X31
	0x0338C0E0 BL 0x338C698
	0x0338C0E4 ADRP X8, 0xD8E000
	0x0338C0E8 LDR X8, [X8 + 0xD70]
	0x0338C0EC MOV X23, X0
	0x0338C0F0 MOV X1, X31
	0x0338C0F4 LDR X8, [X8]
	0x0338C0F8 MOV X0, X8
	0x0338C0FC BL 0x338C698
	0x0338C100 MOV X1, X0
	0x0338C104 MOV X0, X23
	0x0338C108 MOV X2, X31
	0x0338C10C BL 0x3395194
	0x0338C110 LDR X8, [X21 + 0x38]
	0x0338C114 MOV W23, W0
	0x0338C118 MOV X0, X22
	0x0338C11C MOV X1, X19
	0x0338C120 LDR X2, [X8 + 0x10]
	0x0338C124 BL 0x2218CF8
	0x0338C128 TBZ X23, 0x0, 0x338C14C
	0x0338C12C MOV W1, W20
	0x0338C130 MOV W2, W19

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+144], X30
	003 Move [X31+160], X26
	004 Move [X31+168], X25
	005 Move [X31+176], X24
	006 Move [X31+184], X23
	007 Move [X31+192], X22
	008 Move [X31+200], X21
	009 Move [X31+208], X20
	010 Move [X31+216], X19
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X24+40]
	013 Move X26, 0x1051000
	014 Move X25, 0xD9D000
	015 Move X19, X4
	016 Move [X31+136], X8
	017 Move W8, [X26+4084]
	018 Move X25, [X25+120]
	019 Move X20, X3
	020 Move W21, W2
	021 Move X22, X1
	022 Move X23, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0xD9D000
	028 Move X0, [X0+120]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X26+4084], W8
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+106], V0
	034 Move [X31+80], V0
	035 Move [X31+88], V0
	036 Move [X31+48], V0
	037 Move [X31+56], V0
	038 Move [X31+16], V0
	039 Move [X31+24], V0
	040 Move [X31], V0
	041 Move [X19], X31
	042 Move [X19+8], X31
	043 Move X0, [X25]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Add X3, X31, 0
	049 Move W5, 1
	050 Move X0, X23
	051 Move X1, X22
	052 Move W2, W21
	053 Move X4, X20
	054 Call Number.TryStringToNumber, X0, X1, X2, X3, X4
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {67}
	059 Move X0, [X25]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Add X0, X31, 0
	065 Move X1, X19
	066 Call Number.NumberBufferToDecimal, X0, X1
	067 Move W0, W31
	068 Move X8, [X24+40]
	069 Move X9, [X31+136]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X20, [X31+208]
	072 Move X19, [X31+216]
	073 Move X22, [X31+192]
	074 Move X21, [X31+200]
	075 Move X24, [X31+176]
	076 Move X23, [X31+184]
	077 Move X26, [X31+160]
	078 Move X25, [X31+168]
	079 Move X30, [X31+144]
	080 And W0, W0, 1
	081 Add X31, X31, 224
	082 Return X0
	083 Call 0x3EB2B20

Method: System.Boolean TryParseDouble(System.ReadOnlySpan`1<System.Char> value, System.Globalization.NumberStyles styles, System.Globalization.NumberFormatInfo info, out System.Double result)

Disassembly:
	0x0338C134 LDP X20, X19, [X31 + 0x30]
	0x0338C138 LDP X22, X21, [X31 + 0x20]
	0x0338C13C LDP X24, X23, [X31 + 0x10]
	0x0338C140 MOV X3, X31
	0x0338C144 LDR X30, [X31], #0x40
	0x0338C148 B 0x3391718
	0x0338C14C LDR X8, [X21 + 0x38]
	0x0338C150 MOV W1, W20
	0x0338C154 MOV W2, W19
	0x0338C158 LDP X20, X19, [X31 + 0x30]
	0x0338C15C LDR X3, [X8 + 0x38]
	0x0338C160 LDP X22, X21, [X31 + 0x20]
	0x0338C164 LDP X24, X23, [X31 + 0x10]
	0x0338C168 LDR X30, [X31], #0x40
	0x0338C16C B 0x225740C
	0x0338C170 SUB X31, X31, 0x40
	0x0338C174 STP X30, X23, [X31 + 0x10]
	0x0338C178 STP X22, X21, [X31 + 0x20]
	0x0338C17C STP X20, X19, [X31 + 0x30]
	0x0338C180 LDR X8, [X4 + 0x38]
	0x0338C184 MOV X20, X4
	0x0338C188 MOV X19, X3
	0x0338C18C MOV X21, X2
	0x0338C190 MOV X22, X1
	0x0338C194 MOV X23, X0
	0x0338C198 CBNZ X8, 0x338C1A8
	0x0338C19C MOV X0, X20
	0x0338C1A0 BL 0x1C5C6E0
	0x0338C1A4 LDR X8, [X20 + 0x38]
	0x0338C1A8 STR X31, [X31 + 0x8]
	0x0338C1AC LDR X1, [X8 + 0x20]
	0x0338C1B0 ADD X0, X31, 0x8
	0x0338C1B4 BL 0x1F96FD0
	0x0338C1B8 CMP W22, W19
	0x0338C1BC TBZ X0, 0x0, 0x338C218
	0x0338C1C0 B.LT 0x338C21C
	0x0338C1C4 LDR X8, [X20 + 0x38]
	0x0338C1C8 MOV X0, X23
	0x0338C1CC MOV X1, X22
	0x0338C1D0 LDR X2, [X8 + 0x28]
	0x0338C1D4 BL 0x2218CF8
	0x0338C1D8 LDR X8, [X20 + 0x38]
	0x0338C1DC MOV X1, X19
	0x0338C1E0 LDR X2, [X8 + 0x28]
	0x0338C1E4 SUB W8, W22, W19
	0x0338C1E8 UBFM X8, X8, 0x20, 0x1F
	0x0338C1EC ADD X20, X0, X8, 0x1F, ASR
	0x0338C1F0 MOV X0, X21
	0x0338C1F4 BL 0x2218CF8
	0x0338C1F8 LDR X8, [X31 + 0x8]
	0x0338C1FC SXTW X9, W19
	0x0338C200 MOV X1, X0
	0x0338C204 MOV X0, X20
	0x0338C208 MUL X2, X8, X9
	0x0338C20C MOV X3, X31
	0x0338C210 BL 0x3391068
	0x0338C214 B 0x338C270
	0x0338C218 B.GE 0x338C224
	0x0338C21C MOV W0, W31
	0x0338C220 B 0x338C270
	0x0338C224 LDR X8, [X20 + 0x38]
	0x0338C228 MOV X0, X23
	0x0338C22C MOV X1, X22
	0x0338C230 LDR X2, [X8 + 0x28]
	0x0338C234 BL 0x2218CF8

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+144], X30
	003 Move [X31+160], X26
	004 Move [X31+168], X25
	005 Move [X31+176], X24
	006 Move [X31+184], X23
	007 Move [X31+192], X22
	008 Move [X31+200], X21
	009 Move [X31+208], X20
	010 Move [X31+216], X19
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X24+40]
	013 Move X26, 0x1051000
	014 Move X25, 0xD9D000
	015 Move X19, X4
	016 Move [X31+136], X8
	017 Move W8, [X26+4085]
	018 Move X25, [X25+120]
	019 Move X20, X3
	020 Move W21, W2
	021 Move X22, X1
	022 Move X23, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0xD9D000
	028 Move X0, [X0+120]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X26+4085], W8
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+106], V0
	034 Move [X31+80], V0
	035 Move [X31+88], V0
	036 Move [X31+48], V0
	037 Move [X31+56], V0
	038 Move [X31+16], V0
	039 Move [X31+24], V0
	040 Move [X31], V0
	041 Move [X19], X31
	042 Move X0, [X25]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Add X3, X31, 0
	048 Move X0, X23
	049 Move X1, X22
	050 Move W2, W21
	051 Move X4, X20
	052 Move W5, W31
	053 Call Number.TryStringToNumber, X0, X1, X2, X3, X4
	054 Move W8, W0
	055 Move W0, W31
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {68}
	060 Move X0, [X25]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Add X0, X31, 0
	066 Move X1, X19
	067 Call Number.NumberBufferToDouble, X0, X1
	068 Move X8, [X24+40]
	069 Move X9, [X31+136]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X20, [X31+208]
	072 Move X19, [X31+216]
	073 Move X22, [X31+192]
	074 Move X21, [X31+200]
	075 Move X24, [X31+176]
	076 Move X23, [X31+184]
	077 Move X26, [X31+160]
	078 Move X25, [X31+168]
	079 Move X30, [X31+144]
	080 And W0, W0, 1
	081 Add X31, X31, 224
	082 Return X0
	083 Call 0x3EB2B20

Method: System.Boolean TryParseSingle(System.ReadOnlySpan`1<System.Char> value, System.Globalization.NumberStyles styles, System.Globalization.NumberFormatInfo info, out System.Single result)

Disassembly:
	0x0338C238 LDR X8, [X20 + 0x38]
	0x0338C23C MOV X1, X19
	0x0338C240 LDR X2, [X8 + 0x28]
	0x0338C244 SUB W8, W22, W19
	0x0338C248 UBFM X8, X8, 0x20, 0x1F
	0x0338C24C ADD X22, X0, X8, 0x1F, ASR
	0x0338C250 MOV X0, X21
	0x0338C254 BL 0x2218CF8
	0x0338C258 LDR X8, [X20 + 0x38]
	0x0338C25C MOV X1, X0
	0x0338C260 MOV X0, X22
	0x0338C264 MOV W2, W19
	0x0338C268 LDR X3, [X8 + 0x40]
	0x0338C26C BL 0x22586B8
	0x0338C270 LDP X20, X19, [X31 + 0x30]
	0x0338C274 LDP X22, X21, [X31 + 0x20]
	0x0338C278 LDP X30, X23, [X31 + 0x10]
	0x0338C27C AND W0, W0, 0x1
	0x0338C280 ADD X31, X31, 0x40
	0x0338C284 RET
	0x0338C288 SUB X31, X31, 0x40
	0x0338C28C STP X30, X23, [X31 + 0x10]
	0x0338C290 STP X22, X21, [X31 + 0x20]
	0x0338C294 STP X20, X19, [X31 + 0x30]
	0x0338C298 LDR X8, [X4 + 0x38]
	0x0338C29C MOV X20, X4
	0x0338C2A0 MOV X19, X3
	0x0338C2A4 MOV X21, X2
	0x0338C2A8 MOV X22, X1
	0x0338C2AC MOV X23, X0
	0x0338C2B0 CBNZ X8, 0x338C2C0
	0x0338C2B4 MOV X0, X20
	0x0338C2B8 BL 0x1C5C6E0
	0x0338C2BC LDR X8, [X20 + 0x38]
	0x0338C2C0 STR X31, [X31 + 0x8]
	0x0338C2C4 LDR X1, [X8 + 0x20]
	0x0338C2C8 ADD X0, X31, 0x8
	0x0338C2CC BL 0x1F96FD0
	0x0338C2D0 LDR X8, [X20 + 0x38]
	0x0338C2D4 CMP W19, W22
	0x0338C2D8 TBZ X0, 0x0, 0x338C328
	0x0338C2DC B.GT 0x338C32C
	0x0338C2E0 LDR X2, [X8 + 0x28]
	0x0338C2E4 MOV X0, X23
	0x0338C2E8 MOV X1, X22
	0x0338C2EC BL 0x2218CF8
	0x0338C2F0 LDR X8, [X20 + 0x38]
	0x0338C2F4 MOV X20, X0
	0x0338C2F8 MOV X0, X21
	0x0338C2FC MOV X1, X19
	0x0338C300 LDR X2, [X8 + 0x28]
	0x0338C304 BL 0x2218CF8
	0x0338C308 LDR X8, [X31 + 0x8]
	0x0338C30C SXTW X9, W19
	0x0338C310 MOV X1, X0
	0x0338C314 MOV X0, X20
	0x0338C318 MUL X2, X8, X9
	0x0338C31C MOV X3, X31
	0x0338C320 BL 0x3391068
	0x0338C324 B 0x338C374
	0x0338C328 B.LE 0x338C334
	0x0338C32C MOV W0, W31
	0x0338C330 B 0x338C374
	0x0338C334 LDR X2, [X8 + 0x28]
	0x0338C338 MOV X0, X23
	0x0338C33C MOV X1, X22
	0x0338C340 BL 0x2218CF8
	0x0338C344 LDR X8, [X20 + 0x38]
	0x0338C348 MOV X22, X0
	0x0338C34C MOV X0, X21
	0x0338C350 MOV X1, X19
	0x0338C354 LDR X2, [X8 + 0x28]
	0x0338C358 BL 0x2218CF8
	0x0338C35C LDR X8, [X20 + 0x38]
	0x0338C360 MOV X1, X0
	0x0338C364 MOV X0, X22
	0x0338C368 MOV W2, W19

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+160], X30
	003 Move [X31+176], X26
	004 Move [X31+184], X25
	005 Move [X31+192], X24
	006 Move [X31+200], X23
	007 Move [X31+208], X22
	008 Move [X31+216], X21
	009 Move [X31+224], X20
	010 Move [X31+232], X19
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X24+40]
	013 Move X26, 0x1051000
	014 Move X25, 0xD9D000
	015 Move X19, X4
	016 Move [X31+152], X8
	017 Move W8, [X26+4086]
	018 Move X25, [X25+120]
	019 Move X20, X3
	020 Move W21, W2
	021 Move X22, X1
	022 Move X23, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0xD9D000
	028 Move X0, [X0+120]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X26+4086], W8
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+16], V0
	034 Move [X31+24], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+80], V0
	038 Move [X31+88], V0
	039 Move [X31+7], V0
	040 Move [X31+122], V0
	041 Move [X19], W31
	042 Move X0, [X25]
	043 Move [X31+8], X31
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Add X3, X31, 16
	049 Move X0, X23
	050 Move X1, X22
	051 Move W2, W21
	052 Move X4, X20
	053 Move W5, W31
	054 Call Number.TryStringToNumber, X0, X1, X2, X3, X4
	055 Move W8, W0
	056 Move W0, W31
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {82}
	061 Move X0, [X25]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Add X0, X31, 16
	067 Add X1, X31, 8
	068 Call Number.NumberBufferToDouble, X0, X1
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {79}
	073 Move V0, [X31+8]
	074 Move W9, 0x7F800000
	075 NotImplemented "Instruction INVALID not yet implemented."
	076 Move W8, S0
	077 And W8, W8, 0x7FFFFFFF
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move W0, W31
	080 Move W0, 1
	081 Move [X19], S0
	082 Move X8, [X24+40]
	083 Move X9, [X31+152]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X20, [X31+224]
	086 Move X19, [X31+232]
	087 Move X22, [X31+208]
	088 Move X21, [X31+216]
	089 Move X24, [X31+192]
	090 Move X23, [X31+200]
	091 Move X26, [X31+176]
	092 Move X25, [X31+184]
	093 Move X30, [X31+160]
	094 Add X31, X31, 240
	095 Return X0
	096 Call 0x3EB2B20

Method: System.Void StringToNumber(System.ReadOnlySpan`1<System.Char> value, System.Globalization.NumberStyles styles, ref System.Number/NumberBuffer number, System.Globalization.NumberFormatInfo info, System.Boolean parseDecimal)

Disassembly:
	0x03388ED4 SUB W8, W25, 0x30
	0x03388ED8 CMP W8, 0x9
	0x03388EDC B.HI 0x3388F9C
	0x03388EE0 MOVZ W9, 0x9999
	0x03388EE4 ADD W24, W27, 0xA
	0x03388EE8 LDR X27, [X31 + 0x10]
	0x03388EEC MOVK W9, 0x19990000
	0x03388EF0 ADD W10, W9, 0x1
	0x03388EF4 CMP W26, W10
	0x03388EF8 B.CS 0x3388F10
	0x03388EFC CMP W26, W9
	0x03388F00 MOV W28, W31
	0x03388F04 B.NE 0x3388F14
	0x03388F08 CMP W25, 0x36
	0x03388F0C B.CC 0x3388F14
	0x03388F10 MOVZ W28, 0x1
	0x03388F14 MOVZ W9, 0xA
	0x03388F18 CMP W24, W23
	0x03388F1C MADD W26, W26, W9, W8
	0x03388F20 B.CS 0x3389064
	0x03388F24 LDR X0, [X29]
	0x03388F28 LDRH W25, [X21, W24, SXTW]
	0x03388F2C LDR W8, [X0 + 0xE0]
	0x03388F30 CBNZ W8, 0x3388F38
	0x03388F34 BL 0x1C16DFC
	0x03388F38 SUB W8, W25, 0x30
	0x03388F3C CMP W8, 0xA
	0x03388F40 B.CS 0x3388FA4
	0x03388F44 ADD W24, W24, 0x1
	0x03388F48 CMP W23, W24
	0x03388F4C MOVZ W28, 0x1
	0x03388F50 B.NE 0x3388F24
	0x03388F54 B 0x33890B0
	0x03388F58 LDR X27, [X31 + 0x10]
	0x03388F5C B 0x3389068
	0x03388F60 MOV W26, W31
	0x03388F64 B 0x338907C
	0x03388F68 ADD W8, W27, W20
	0x03388F6C LDP X20, X27, [X31 + 0x8]
	0x03388F70 MOV W28, W31
	0x03388F74 ADD W24, W8, 0x9
	0x03388F78 B 0x3388FA4
	0x03388F7C MOV W26, W31
	0x03388F80 B 0x3388FA0
	0x03388F84 ADD W24, W24, 0x1
	0x03388F88 CMP W24, W23
	0x03388F8C B.CS 0x3389084
	0x03388F90 LDRH W28, [X21, W24, SXTW]
	0x03388F94 MOV W25, W31
	0x03388F98 B 0x3388DE8
	0x03388F9C LDR X27, [X31 + 0x10]
	0x03388FA0 MOV W28, W31
	0x03388FA4 LDR X0, [X29]
	0x03388FA8 LDR W8, [X0 + 0xE0]
	0x03388FAC CBNZ W8, 0x3388FB4
	0x03388FB0 BL 0x1C16DFC
	0x03388FB4 SUB W8, W25, 0x9
	0x03388FB8 CMP W8, 0x5
	0x03388FBC B.CS 0x338902C
	0x03388FC0 TBZ X22, 0x1, 0x3389084
	0x03388FC4 ADD W24, W24, 0x1
	0x03388FC8 CMP W24, W23
	0x03388FCC B.GE 0x3389020
	0x03388FD0 MOV X25, X20
	0x03388FD4 ADD X20, X21, W24, 0x1, SXTW
	0x03388FD8 CMP W23, W24
	0x03388FDC B.LS 0x33890C4
	0x03388FE0 LDR X0, [X29]
	0x03388FE4 LDRH W22, [X20]
	0x03388FE8 LDR W8, [X0 + 0xE0]
	0x03388FEC CBNZ W8, 0x3388FF4
	0x03388FF0 BL 0x1C16DFC
	0x03388FF4 SUB W8, W22, 0x9
	0x03388FF8 CMP W8, 0x5
	0x03388FFC B.CS 0x3389014
	0x03389000 ADD W24, W24, 0x1
	0x03389004 CMP W23, W24
	0x03389008 ADD X20, X20, 0x2

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X25, 0x1055000
	013 Move X27, 0xD9B000
	014 Move X26, 0xDA1000
	015 Move W8, [X25+4087]
	016 Move X27, [X27+32]
	017 Move X26, [X26+120]
	018 Move W24, W5
	019 Move X21, X4
	020 Move X22, X3
	021 Move W23, W2
	022 Move X19, X1
	023 Move X20, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {39}
	028 Move X0, 0xD9B000
	029 Move X0, [X0+32]
	030 Call 0x1C17CF4
	031 Move X0, 0xDA1000
	032 Move X0, [X0+120]
	033 Call 0x1C17CF4
	034 Move X0, 0xD9B000
	035 Move X0, [X0+40]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X25+4087], W8
	039 Move X2, [X27]
	040 Move X0, X20
	041 Move X1, X19
	042 Call MemoryMarshal.GetReference, X0
	043 Move X8, [X26]
	044 Move [X31+8], X0
	045 Move X25, X0
	046 Move W9, [X8+224]
	047 Compare W9, 0
	048 JumpIfNotEqual {51}
	049 Move X0, X8
	050 Call 0x1C17DFC
	051 Move X27, X19
	052 ShiftRight X27, 32
	053 And X27, X27, 0x7FFFFFFF
	054 Add X1, X25, X27
	055 And W5, W24, 1
	056 Add X0, X31, 8
	057 Move W2, W23
	058 Move X3, X22
	059 Move X4, X21
	060 Call Number.ParseNumber, X0, X1, X2, X3, X4, X5
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {96}
	065 Move X8, [X31+8]
	066 Subtract X8, X8, X25
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CINC not yet implemented."
	069 NotImplemented "Instruction SBFM not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X0, [X26]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X20
	077 Move X1, X19
	078 Move W2, W21
	079 Call Number.TrailingZeros, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {96}
	084 Move X20, [X31+80]
	085 Move X19, [X31+88]
	086 Move X22, [X31+64]
	087 Move X21, [X31+72]
	088 Move X24, [X31+48]
	089 Move X23, [X31+56]
	090 Move X26, [X31+32]
	091 Move X25, [X31+40]
	092 Move X30, [X31+16]
	093 Move X27, [X31+24]
	094 Add X31, X31, 96
	095 Return 
	096 Move X0, [X26]
	097 Call 0x19913D0
	098 Move W0, W31
	099 Move X1, X31
	100 Call Number.ThrowOverflowOrFormatException, X0, X1

Method: System.Boolean TryStringToNumber(System.ReadOnlySpan`1<System.Char> value, System.Globalization.NumberStyles styles, ref System.Number/NumberBuffer number, System.Globalization.NumberFormatInfo info, System.Boolean parseDecimal)

Disassembly:
	0x0338B028 BL 0x3387AFC
	0x0338B02C BL 0x3EB1B20
	0x0338B030 SUB X31, X31, 0xE0
	0x0338B034 STR X30, [X31 + 0x90]
	0x0338B038 STP X26, X25, [X31 + 0xA0]
	0x0338B03C STP X24, X23, [X31 + 0xB0]
	0x0338B040 STP X22, X21, [X31 + 0xC0]
	0x0338B044 STP X20, X19, [X31 + 0xD0]
	0x0338B048 MRS X24, 0xC000
	0x0338B04C LDR X8, [X24 + 0x28]
	0x0338B050 ADRP X26, 0x1051000
	0x0338B054 ADRP X25, 0xD9D000
	0x0338B058 MOV X19, X4
	0x0338B05C STR X8, [X31 + 0x88]
	0x0338B060 LDRB W8, [X26 + 0xFF4]
	0x0338B064 LDR X25, [X25 + 0x78]
	0x0338B068 MOV X20, X3
	0x0338B06C MOV W21, W2
	0x0338B070 MOV X22, X1
	0x0338B074 MOV X23, X0
	0x0338B078 TBNZ X8, 0x0, 0x338B090
	0x0338B07C ADRP X0, 0xD9D000
	0x0338B080 LDR X0, [X0 + 0x78]
	0x0338B084 BL 0x1C16CF4
	0x0338B088 MOVZ W8, 0x1
	0x0338B08C STRB W8, [X26 + 0xFF4]
	0x0338B090 MOVI V0.2D, 0x0
	0x0338B094 STUR V0, [X31 + 0x6A]
	0x0338B098 STP V0, V0, [X31 + 0x50]
	0x0338B09C STP V0, V0, [X31 + 0x30]
	0x0338B0A0 STP V0, V0, [X31 + 0x10]
	0x0338B0A4 STR V0, [X31]
	0x0338B0A8 STP X31, X31, [X19]
	0x0338B0AC LDR X0, [X25]
	0x0338B0B0 LDR W8, [X0 + 0xE0]
	0x0338B0B4 CBNZ W8, 0x338B0BC
	0x0338B0B8 BL 0x1C16DFC
	0x0338B0BC ADD X3, X31, 0x0
	0x0338B0C0 MOVZ W5, 0x1
	0x0338B0C4 MOV X0, X23
	0x0338B0C8 MOV X1, X22
	0x0338B0CC MOV W2, W21
	0x0338B0D0 MOV X4, X20
	0x0338B0D4 BL 0x338A028
	0x0338B0D8 TBZ X0, 0x0, 0x338B0FC
	0x0338B0DC LDR X0, [X25]
	0x0338B0E0 LDR W8, [X0 + 0xE0]
	0x0338B0E4 CBNZ W8, 0x338B0EC
	0x0338B0E8 BL 0x1C16DFC
	0x0338B0EC ADD X0, X31, 0x0
	0x0338B0F0 MOV X1, X19
	0x0338B0F4 BL 0x338A5F8
	0x0338B0F8 B 0x338B100
	0x0338B0FC MOV W0, W31
	0x0338B100 LDR X8, [X24 + 0x28]
	0x0338B104 LDR X9, [X31 + 0x88]
	0x0338B108 CMP X8, X9
	0x0338B10C B.NE 0x338B130
	0x0338B110 LDP X20, X19, [X31 + 0xD0]
	0x0338B114 LDP X22, X21, [X31 + 0xC0]
	0x0338B118 LDP X24, X23, [X31 + 0xB0]
	0x0338B11C LDP X26, X25, [X31 + 0xA0]
	0x0338B120 LDR X30, [X31 + 0x90]
	0x0338B124 AND W0, W0, 0x1
	0x0338B128 ADD X31, X31, 0xE0
	0x0338B12C RET
	0x0338B130 BL 0x3EB1B20
	0x0338B134 SUB X31, X31, 0xE0
	0x0338B138 STR X30, [X31 + 0x90]
	0x0338B13C STP X26, X25, [X31 + 0xA0]
	0x0338B140 STP X24, X23, [X31 + 0xB0]
	0x0338B144 STP X22, X21, [X31 + 0xC0]
	0x0338B148 STP X20, X19, [X31 + 0xD0]
	0x0338B14C MRS X24, 0xC000
	0x0338B150 LDR X8, [X24 + 0x28]
	0x0338B154 ADRP X26, 0x1051000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X25, 0x1052000
	013 Move X27, 0xD98000
	014 Move X26, 0xD9E000
	015 Move W8, [X25+4088]
	016 Move X27, [X27+32]
	017 Move X26, [X26+120]
	018 Move W24, W5
	019 Move X21, X4
	020 Move X22, X3
	021 Move W23, W2
	022 Move X19, X1
	023 Move X20, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {39}
	028 Move X0, 0xD98000
	029 Move X0, [X0+32]
	030 Call 0x1C17CF4
	031 Move X0, 0xD9E000
	032 Move X0, [X0+120]
	033 Call 0x1C17CF4
	034 Move X0, 0xD98000
	035 Move X0, [X0+40]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X25+4088], W8
	039 Move X2, [X27]
	040 Move X0, X20
	041 Move X1, X19
	042 Call MemoryMarshal.GetReference, X0
	043 Move X8, [X26]
	044 Move [X31+8], X0
	045 Move X25, X0
	046 Move W9, [X8+224]
	047 Compare W9, 0
	048 JumpIfNotEqual {51}
	049 Move X0, X8
	050 Call 0x1C17DFC
	051 Move X27, X19
	052 ShiftRight X27, 32
	053 And X27, X27, 0x7FFFFFFF
	054 Add X1, X25, X27
	055 And W5, W24, 1
	056 Add X0, X31, 8
	057 Move W2, W23
	058 Move X3, X22
	059 Move X4, X21
	060 Call Number.ParseNumber, X0, X1, X2, X3, X4, X5
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {85}
	065 Move X8, [X31+8]
	066 Subtract X8, X8, X25
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CINC not yet implemented."
	069 NotImplemented "Instruction SBFM not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X0, [X26]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X20
	077 Move X1, X19
	078 Move W2, W21
	079 Call Number.TrailingZeros, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {85}
	084 Move W0, 1
	085 Move W0, W31
	086 Move X20, [X31+80]
	087 Move X19, [X31+88]
	088 Move X22, [X31+64]
	089 Move X21, [X31+72]
	090 Move X24, [X31+48]
	091 Move X23, [X31+56]
	092 Move X26, [X31+32]
	093 Move X25, [X31+40]
	094 Move X30, [X31+16]
	095 Move X27, [X31+24]
	096 Add X31, X31, 96
	097 Return X0

Method: System.Boolean TrailingZeros(System.ReadOnlySpan`1<System.Char> value, System.Int32 index)

Disassembly:
	0x0338B158 ADRP X25, 0xD9D000
	0x0338B15C MOV X19, X4
	0x0338B160 STR X8, [X31 + 0x88]
	0x0338B164 LDRB W8, [X26 + 0xFF5]
	0x0338B168 LDR X25, [X25 + 0x78]
	0x0338B16C MOV X20, X3
	0x0338B170 MOV W21, W2
	0x0338B174 MOV X22, X1
	0x0338B178 MOV X23, X0
	0x0338B17C TBNZ X8, 0x0, 0x338B194
	0x0338B180 ADRP X0, 0xD9D000
	0x0338B184 LDR X0, [X0 + 0x78]
	0x0338B188 BL 0x1C16CF4
	0x0338B18C MOVZ W8, 0x1
	0x0338B190 STRB W8, [X26 + 0xFF5]
	0x0338B194 MOVI V0.2D, 0x0
	0x0338B198 STUR V0, [X31 + 0x6A]
	0x0338B19C STP V0, V0, [X31 + 0x50]
	0x0338B1A0 STP V0, V0, [X31 + 0x30]
	0x0338B1A4 STP V0, V0, [X31 + 0x10]
	0x0338B1A8 STR V0, [X31]
	0x0338B1AC STR X31, [X19]
	0x0338B1B0 LDR X0, [X25]
	0x0338B1B4 LDR W8, [X0 + 0xE0]
	0x0338B1B8 CBNZ W8, 0x338B1C0
	0x0338B1BC BL 0x1C16DFC
	0x0338B1C0 ADD X3, X31, 0x0
	0x0338B1C4 MOV X0, X23
	0x0338B1C8 MOV X1, X22
	0x0338B1CC MOV W2, W21
	0x0338B1D0 MOV X4, X20
	0x0338B1D4 MOV W5, W31
	0x0338B1D8 BL 0x338A028
	0x0338B1DC MOV W8, W0
	0x0338B1E0 MOV W0, W31
	0x0338B1E4 TBZ X8, 0x0, 0x338B204

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1052000
	007 Move W8, [X22+4089]
	008 Move W19, W2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD98000
	016 Move X0, [X0+40]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+4089], W8
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CSEL not yet implemented."
	022 Move W9, 1
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Compare W10, 0
	026 JumpIfNotEqual {32}
	027 Add W19, W19, 1
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSET not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W9, W31
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 NotImplemented "Instruction ORN not yet implemented."
	037 And W0, W8, 1
	038 Move X30, [X31+48]
	039 Return X0
	040 Call 0x1C17F28

Method: System.Char* MatchChars(System.Char* p, System.Char* pEnd, System.String value)

Disassembly:
	0x0338AF94 LDR X0, [X0 + 0x2D0]
	0x0338AF98 BL 0x1C16CF4
	0x0338AF9C ADRP X0, 0xD98000
	0x0338AFA0 LDR X0, [X0 + 0x28]
	0x0338AFA4 BL 0x1C16CF4
	0x0338AFA8 MOVZ W8, 0x1
	0x0338AFAC STRB W8, [X26 + 0xD06]
	0x0338AFB0 CMP W21, W19
	0x0338AFB4 B.NE 0x338B018
	0x0338AFB8 CBZ W21, 0x338AFE0
	0x0338AFBC ADRP X8, 0xD90000
	0x0338AFC0 LDR X8, [X8 + 0x2D0]
	0x0338AFC4 MOV X0, X20
	0x0338AFC8 MOV X1, X21
	0x0338AFCC MOV X2, X22
	0x0338AFD0 LDR X4, [X8]
	0x0338AFD4 MOV X3, X19
	0x0338AFD8 BL 0x1F96ECC
	0x0338AFDC TBZ X0, 0x0, 0x338B018
	0x0338AFE0 MOVZ W8, 0x7FC00000
	0x0338AFE4 FMOV S0, W8
	0x0338AFE8 LDR X8, [X24 + 0x28]
	0x0338AFEC LDR X9, [X31 + 0x98]
	0x0338AFF0 CMP X8, X9
	0x0338AFF4 B.NE 0x338B02C
	0x0338AFF8 LDP X20, X19, [X31 + 0xE0]
	0x0338AFFC LDP X22, X21, [X31 + 0xD0]
	0x0338B000 LDP X24, X23, [X31 + 0xC0]
	0x0338B004 LDP X26, X25, [X31 + 0xB0]
	0x0338B008 LDP X30, X27, [X31 + 0xA0]
	0x0338B00C ADD X31, X31, 0xF0
	0x0338B010 RET
	0x0338B014 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X2
	006 Move X21, X1
	007 Move X19, X0
	008 Compare X2, 0
	009 JumpIfEqual {13}
	010 Move X0, X31
	011 Call RuntimeHelpers.get_OffsetToStringData
	012 Add X20, X20, W0
	013 NotImplemented "Instruction LDRH not yet implemented."
	014 Compare W8, 0
	015 JumpIfEqual {29}
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction LDRH not yet implemented."
	018 Move W9, W31
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X0, X31
	022 And W8, W8, 0xFFFF
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Add X19, X19, 2
	026 Compare W8, 0
	027 JumpIfNotEqual {16}
	028 Move X0, X19
	029 Move X0, X31
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return X0

Method: System.Boolean IsWhite(System.Int32 ch)

Disassembly:
	0x0338AF78 MOVZ W8, 0x1
	0x0338AF7C STRB W8, [X27 + 0x762]
	0x0338AF80 CBNZ X19, 0x338AF54
	0x0338AF84 MOV X22, X31
	0x0338AF88 LDRB W8, [X26 + 0xD06]
	0x0338AF8C CBNZ W8, 0x338AFB0
	0x0338AF90 ADRP X0, 0xD90000

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Subtract W8, W0, 9
	003 NotImplemented "Instruction CSET not yet implemented."
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSET not yet implemented."
	006 Or W0, W9, W8
	007 Return X0

Method: System.Boolean IsDigit(System.Int32 ch)

Disassembly:
	0x0338B018 LDR X0, [X25]
	0x0338B01C BL 0x19903D0
	0x0338B020 MOV W0, W31
	0x0338B024 MOV X1, X31

ISIL:
	001 Subtract W8, W0, 48
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void ThrowOverflowOrFormatException(System.Boolean overflow, System.String overflowResourceKey)

Disassembly:
	0x03388AFC STP X29, X30, [X31 + 0x20]
	0x03388B00 STP X28, X27, [X31 + 0x30]
	0x03388B04 STP X26, X25, [X31 + 0x40]
	0x03388B08 STP X24, X23, [X31 + 0x50]
	0x03388B0C STP X22, X21, [X31 + 0x60]
	0x03388B10 STP X20, X19, [X31 + 0x70]
	0x03388B14 ADRP X20, 0x1054000
	0x03388B18 LDRB W8, [X20 + 0xFEB]
	0x03388B1C MOV X27, X5
	0x03388B20 MOV X19, X4
	0x03388B24 MOV X25, X3
	0x03388B28 MOV W22, W2
	0x03388B2C MOV X23, X1
	0x03388B30 MOV X21, X0
	0x03388B34 TBNZ X8, 0x0, 0x3388B88
	0x03388B38 ADRP X0, 0xDA2000
	0x03388B3C LDR X0, [X0 + 0xFD8]
	0x03388B40 BL 0x1C16CF4
	0x03388B44 ADRP X0, 0xDA0000
	0x03388B48 LDR X0, [X0 + 0x78]
	0x03388B4C BL 0x1C16CF4
	0x03388B50 ADRP X0, 0xD9F000
	0x03388B54 LDR X0, [X0 + 0x7E8]
	0x03388B58 BL 0x1C16CF4
	0x03388B5C ADRP X0, 0xD9A000
	0x03388B60 LDR X0, [X0 + 0x28]
	0x03388B64 BL 0x1C16CF4
	0x03388B68 ADRP X0, 0xD70000
	0x03388B6C LDR X0, [X0 + 0x3F8]
	0x03388B70 BL 0x1C16CF4
	0x03388B74 ADRP X0, 0xD6C000
	0x03388B78 LDR X0, [X0 + 0x2A8]
	0x03388B7C BL 0x1C16CF4
	0x03388B80 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move TEMP, X0
	005 And TEMP, TEMP, 1
	006 Compare TEMP, 1
	007 JumpIfNotEqual {20}
	008 Move X0, X1
	009 Move X1, X31
	010 Call SR.GetResourceString, X0
	011 Move X20, X0
	012 Move X0, 0xD6C000
	013 Move X0, [X0+2136]
	014 Call 0x1C17D08
	015 Call 0x1C17F10
	016 Move X1, X20
	017 Move X2, X31
	018 Move X19, X0
	019 Call OverflowException..ctor, X0, X1
	020 Move X0, 0xD99000
	021 Move X0, [X0+3080]
	022 Call 0x1C17D08
	023 Call 0x1C17F10
	024 Move X19, X0
	025 Move X0, 0xD9B000
	026 Move X0, [X0+1560]
	027 Call 0x1C17D08
	028 Move X1, X0
	029 Move X0, X19
	030 Move X2, X31
	031 Call FormatException..ctor, X0, X1
	032 Move X0, 0xDA3000
	033 Move X0, [X0+4064]
	034 Call 0x1C17D08
	035 Move X1, X0
	036 Move X0, X19
	037 Call 0x1C17DEC

Method: System.Boolean NumberBufferToDouble(ref System.Number/NumberBuffer number, ref System.Double value)

Disassembly:
	0x0338BC40 STR X19, [X8 + 0x40]
	0x0338BC44 LDR X0, [X22]
	0x0338BC48 BL 0x1C16D6C
	0x0338BC4C LDR X1, [X21]
	0x0338BC50 MOV X2, X31
	0x0338BC54 MOV X19, X0
	0x0338BC58 BL 0x32C5BD8
	0x0338BC5C LDR X8, [X20]
	0x0338BC60 LDP X22, X21, [X31 + 0x30]
	0x0338BC64 LDP X24, X23, [X31 + 0x20]
	0x0338BC68 LDP X26, X25, [X31 + 0x10]
	0x0338BC6C LDR X8, [X8 + 0xB8]
	0x0338BC70 STR X19, [X8 + 0x48]
	0x0338BC74 LDP X20, X19, [X31 + 0x40]
	0x0338BC78 LDP X30, X27, [X31], #0x50
	0x0338BC7C RET
	0x0338BC80 BL 0x1C16F28
	0x0338BC84 BL 0x1C16F20
	0x0338BC88 STR X30, [X31 - 0x10]!
	0x0338BC8C CBZ W2, 0x338BD94
	0x0338BC90 LDR W8, [X0]
	0x0338BC94 CMP W2, 0x1
	0x0338BC98 STRB W8, [X1]
	0x0338BC9C B.EQ 0x338BD94
	0x0338BCA0 LDR W8, [X0]
	0x0338BCA4 CMP W2, 0x2
	0x0338BCA8 UBFM W8, W8, 0x8, 0x1F
	0x0338BCAC STRB W8, [X1 + 0x1]
	0x0338BCB0 B.LS 0x338BD94
	0x0338BCB4 LDRH W8, [X0 + 0x2]
	0x0338BCB8 CMP W2, 0x3
	0x0338BCBC STRB W8, [X1 + 0x2]
	0x0338BCC0 B.EQ 0x338BD94
	0x0338BCC4 LDRB W8, [X0 + 0x3]
	0x0338BCC8 CMP W2, 0x4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1052000
	007 Move X22, 0xD9E000
	008 Move W8, [X21+4090]
	009 Move X22, [X22+120]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD9E000
	017 Move X0, [X0+120]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+4090], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Call Number.NumberToDouble, X0
	028 Move X8, D0
	029 And X8, X8, 0x7FFFFFFFFFFFFFFF
	030 Move X9, 0x7FF00000
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSET not yet implemented."
	033 NotImplemented "Instruction FCMP not yet implemented."
	034 NotImplemented "Instruction CCMP not yet implemented."
	035 Move D1, X31
	036 NotImplemented "Instruction FCSEL not yet implemented."
	037 Move [X19], D0
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return X0

Method: System.UInt32 DigitsToInt(System.Char* p, System.Int32 count)

Disassembly:
	0x0338C36C LDR X3, [X8 + 0x38]
	0x0338C370 BL 0x22586B8
	0x0338C374 LDP X20, X19, [X31 + 0x30]
	0x0338C378 LDP X22, X21, [X31 + 0x20]
	0x0338C37C LDP X30, X23, [X31 + 0x10]
	0x0338C380 AND W0, W0, 0x1
	0x0338C384 ADD X31, X31, 0x40
	0x0338C388 RET
	0x0338C38C LDR W8, [X0 + 0x8]
	0x0338C390 CMP W8, 0x0
	0x0338C394 CSET W0, NE
	0x0338C398 RET
	0x0338C39C AND W8, W1, 0x1

ISIL:
	001 Add X9, X0, W1
	002 NotImplemented "Instruction LDRH not yet implemented."
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Subtract W8, W8, 48
	005 Move W10, 10
	006 NotImplemented "Instruction LDRH not yet implemented."
	007 NotImplemented "Instruction MADD not yet implemented."
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Subtract W8, W8, 48
	010 Move W0, W8
	011 Return X0

Method: System.UInt64 Mul32x32To64(System.UInt32 a, System.UInt32 b)

Disassembly:
	0x0338C3A0 STR W8, [X0 + 0x8]
	0x0338C3A4 RET

ISIL:
	001 NotImplemented "Instruction UMADDL not yet implemented."
	002 Return X0

Method: System.UInt64 Mul64Lossy(System.UInt64 a, System.UInt64 b, ref System.Int32 pexp)

Disassembly:
	0x0338C3A8 ADD X0, X0, 0xC
	0x0338C3AC RET
	0x0338C3B0 STP X30, X21, [X31 - 0x20]!
	0x0338C3B4 STP X20, X19, [X31 + 0x10]
	0x0338C3B8 ADRP X20, 0x1051000
	0x0338C3BC ADRP X21, 0xD9F000
	0x0338C3C0 LDRB W8, [X20 + 0x7]
	0x0338C3C4 LDR X21, [X21 + 0x170]
	0x0338C3C8 MOV X19, X0
	0x0338C3CC TBNZ X8, 0x0, 0x338C3E4
	0x0338C3D0 ADRP X0, 0xD9F000
	0x0338C3D4 LDR X0, [X0 + 0x170]
	0x0338C3D8 BL 0x1C16CF4
	0x0338C3DC MOVZ W8, 0x1
	0x0338C3E0 STRB W8, [X20 + 0x7]
	0x0338C3E4 LDR X1, [X21]
	0x0338C3E8 MOV X0, X19
	0x0338C3EC MOV X2, X31
	0x0338C3F0 BL 0x337DF1C
	0x0338C3F4 MOVZ W8, 0x1622
	0x0338C3F8 MOVK W8, 0x80130000
	0x0338C3FC STR W8, [X19 + 0x60]
	0x0338C400 STR X31, [X19 + 0x90]
	0x0338C404 LDP X20, X19, [X31 + 0x10]
	0x0338C408 LDP X30, X21, [X31], #0x20
	0x0338C40C RET
	0x0338C410 STR X30, [X31 - 0x20]!
	0x0338C414 STP X20, X19, [X31 + 0x10]
	0x0338C418 MOV X19, X1
	0x0338C41C MOV X1, X2
	0x0338C420 MOV X2, X31
	0x0338C424 MOV X20, X0
	0x0338C428 BL 0x337DF1C
	0x0338C42C MOVZ W8, 0x1622
	0x0338C430 MOVK W8, 0x80130000
	0x0338C434 STR W8, [X20 + 0x60]
	0x0338C438 STR X19, [X20 + 0x90]
	0x0338C43C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1051000
	008 Move X23, 0xD9D000
	009 Move W8, [X22+4091]
	010 Move X23, [X23+120]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xD9D000
	019 Move X0, [X0+120]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+4091], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X8, X20
	029 ShiftRight X8, 32
	030 And X8, X8, 0x7FFFFFFF
	031 Move X9, X21
	032 ShiftRight X9, 32
	033 And X9, X9, 0x7FFFFFFF
	034 And X10, X21, 0
	035 And X11, X20, 0
	036 Multiply X12, X9, X8
	037 Multiply X8, X10, X8
	038 Multiply X9, X9, X11
	039 Add X8, X12, X8
	040 Add X0, X8, X9
	041 Move W8, [X19]
	042 Move X0, X0
	043 ShiftRight X0, 63
	044 And X0, X0, 0x3FFFFFFF
	045 Subtract W8, W8, 1
	046 Move [X19], W8
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Move X23, [X31+56]
	053 Return X0

Method: System.Int32 abs(System.Int32 value)

Disassembly:
	0x0338C440 LDR X30, [X31], #0x20
	0x0338C444 RET
	0x0338C448 STR X30, [X31 - 0x30]!

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSNEG not yet implemented."
	003 Return X0

Method: System.Double NumberToDouble(ref System.Number/NumberBuffer number)

Disassembly:
	0x03383DB0 BL 0x2218CFC
	0x03383DB4 CMP W20, 0x1
	0x03383DB8 ADD X21, X0, W24, 0x1, SXTW
	0x03383DBC B.LE 0x3383E18
	0x03383DC0 ADRP X8, 0xDA5000
	0x03383DC4 LDR X8, [X8 + 0x78]
	0x03383DC8 LDR X0, [X8]
	0x03383DCC LDR W8, [X0 + 0xE0]
	0x03383DD0 CBNZ W8, 0x3383DD8
	0x03383DD4 BL 0x1C16DFC
	0x03383DD8 MOVZ W8, 0xCCCD
	0x03383DDC SUB W10, W20, 0x2
	0x03383DE0 MOVK W8, 0xCCCC0000
	0x03383DE4 MOVN W9, 0x9
	0x03383DE8 MOV W12, W10
	0x03383DEC UMADDL X10, X19, X8, X31
	0x03383DF0 MOV W11, W19
	0x03383DF4 UBFM X19, X10, 0x23, 0x3F
	0x03383DF8 MADD W10, W19, W9, W11
	0x03383DFC ADD W10, W10, 0x30
	0x03383E00 STRH W10, [X21 - 0x2]!
	0x03383E04 SUB W10, W12, 0x1
	0x03383E08 TBZ X12, 0x1F, 0x3383DE8
	0x03383E0C CMP W11, 0x9
	0x03383E10 B.HI 0x3383DE8
	0x03383E14 B 0x3383E44
	0x03383E18 MOVZ W8, 0xCCCD
	0x03383E1C MOVK W8, 0xCCCC0000
	0x03383E20 MOVN W9, 0x9
	0x03383E24 UMADDL X10, X19, X8, X31
	0x03383E28 UBFM X10, X10, 0x23, 0x3F
	0x03383E2C MADD W11, W10, W9, W19
	0x03383E30 ADD W11, W11, 0x30
	0x03383E34 CMP W19, 0xA
	0x03383E38 STRH W11, [X21 - 0x2]!
	0x03383E3C MOV W19, W10
	0x03383E40 B.CS 0x3383E24
	0x03383E44 MOVZ W0, 0x1
	0x03383E48 LDP X20, X19, [X31 + 0x30]
	0x03383E4C LDP X22, X21, [X31 + 0x20]
	0x03383E50 LDP X24, X23, [X31 + 0x10]
	0x03383E54 LDR X30, [X31], #0x40
	0x03383E58 RET
	0x03383E5C STR X30, [X31 - 0x50]!
	0x03383E60 STP X26, X25, [X31 + 0x10]
	0x03383E64 STP X24, X23, [X31 + 0x20]
	0x03383E68 STP X22, X21, [X31 + 0x30]
	0x03383E6C STP X20, X19, [X31 + 0x40]
	0x03383E70 ADRP X25, 0x1059000
	0x03383E74 LDRB W8, [X25 + 0xFC8]
	0x03383E78 MOV X21, X5
	0x03383E7C MOV X19, X4
	0x03383E80 MOV X22, X3
	0x03383E84 MOV X20, X2
	0x03383E88 MOV W24, W1
	0x03383E8C MOV W23, W0
	0x03383E90 TBNZ X8, 0x0, 0x3383ECC
	0x03383E94 ADRP X0, 0xD70000
	0x03383E98 LDR X0, [X0 + 0x5A8]
	0x03383E9C BL 0x1C16CF4
	0x03383EA0 ADRP X0, 0xD9F000
	0x03383EA4 LDR X0, [X0 + 0x2C8]
	0x03383EA8 BL 0x1C16CF4
	0x03383EAC ADRP X0, 0xDA5000
	0x03383EB0 LDR X0, [X0 + 0x78]
	0x03383EB4 BL 0x1C16CF4
	0x03383EB8 ADRP X0, 0xD9F000
	0x03383EBC LDR X0, [X0 + 0x588]
	0x03383EC0 BL 0x1C16CF4
	0x03383EC4 MOVZ W8, 0x1
	0x03383EC8 STRB W8, [X25 + 0xFC8]
	0x03383ECC MOVZ W8, 0x869F
	0x03383ED0 SUB W25, W31, W23
	0x03383ED4 MOVK W8, 0x10000
	0x03383ED8 CMP W24, 0x1
	0x03383EDC ADD W8, W8, 0x1
	0x03383EE0 UBFM W10, W25, 0x5, 0x1F
	0x03383EE4 MOVZ W9, 0x6
	0x03383EE8 CSINC W24, W24, W31, GT
	0x03383EEC UDIV W8, W25, W8
	0x03383EF0 CMP W10, 0xC34
	0x03383EF4 CSINC W26, W9, W31, HI
	0x03383EF8 CSNEG W9, W8, W23, HI
	0x03383EFC ADRP X8, 0xD70000
	0x03383F00 LDR X8, [X8 + 0x5A8]
	0x03383F04 CMP W9, 0xA
	0x03383F08 B.CC 0x3383F44
	0x03383F0C CMP W9, 0x63
	0x03383F10 B.HI 0x3383F1C
	0x03383F14 ADD W26, W26, 0x1
	0x03383F18 B 0x3383F44
	0x03383F1C CMP W9, 0x3E7
	0x03383F20 B.HI 0x3383F2C
	0x03383F24 ADD W26, W26, 0x2
	0x03383F28 B 0x3383F44
	0x03383F2C UBFM W9, W9, 0x4, 0x1F
	0x03383F30 CMP W9, 0x270
	0x03383F34 B.HI 0x3383F40
	0x03383F38 ADD W26, W26, 0x3
	0x03383F3C B 0x3383F44
	0x03383F40 ADD W26, W26, 0x4
	0x03383F44 LDR X0, [X8]
	0x03383F48 LDR W8, [X0 + 0xE0]
	0x03383F4C CBNZ W8, 0x3383F54
	0x03383F50 BL 0x1C16DFC
	0x03383F54 CBZ X20, 0x3384040
	0x03383F58 LDR W8, [X20 + 0x10]
	0x03383F5C CMP W24, W26
	0x03383F60 CSEL W9, W26, W24, LT
	0x03383F64 ADD W23, W8, W9
	0x03383F68 CMP W23, W19
	0x03383F6C B.LE 0x3383F78
	0x03383F70 STR W31, [X21]
	0x03383F74 B 0x3384020
	0x03383F78 STR W23, [X21]
	0x03383F7C ADRP X8, 0xD9F000
	0x03383F80 LDR X8, [X8 + 0x2C8]
	0x03383F84 MOV X0, X22
	0x03383F88 MOV X1, X19
	0x03383F8C LDR X2, [X8]
	0x03383F90 BL 0x2218CFC
	0x03383F94 ADRP X8, 0xDA5000
	0x03383F98 LDR X8, [X8 + 0x78]
	0x03383F9C MOV X21, X0
	0x03383FA0 LDR X8, [X8]
	0x03383FA4 LDR W9, [X8 + 0xE0]
	0x03383FA8 CBNZ W9, 0x3383FB4
	0x03383FAC MOV X0, X8
	0x03383FB0 BL 0x1C16DFC
	0x03383FB4 MOVZ W8, 0xCCCD
	0x03383FB8 ADD X22, X21, W23, 0x1, SXTW
	0x03383FBC SUB W10, W24, 0x2
	0x03383FC0 MOVK W8, 0xCCCC0000
	0x03383FC4 MOVN W9, 0x9
	0x03383FC8 MOV W12, W10
	0x03383FCC UMADDL X10, X25, X8, X31
	0x03383FD0 MOV W11, W25
	0x03383FD4 UBFM X25, X10, 0x23, 0x3F
	0x03383FD8 MADD W10, W25, W9, W11
	0x03383FDC ADD W10, W10, 0x30
	0x03383FE0 STRH W10, [X22 - 0x2]!
	0x03383FE4 SUB W10, W12, 0x1
	0x03383FE8 TBZ X12, 0x1F, 0x3383FC8
	0x03383FEC CMP W11, 0x9
	0x03383FF0 B.HI 0x3383FC8
	0x03383FF4 LDR W21, [X20 + 0x10]
	0x03383FF8 CMP W21, 0x1
	0x03383FFC B.MI 0x3384020
	0x03384000 SUB W21, W21, 0x1
	0x03384004 MOV X0, X20
	0x03384008 MOV W1, W21
	0x0338400C MOV X2, X31
	0x03384010 BL 0x3222A1C
	0x03384014 CMP W21, 0x0
	0x03384018 STRH W0, [X22 - 0x2]!
	0x0338401C B.GT 0x3384000
	0x03384020 CMP W23, W19
	0x03384024 LDP X20, X19, [X31 + 0x40]
	0x03384028 LDP X22, X21, [X31 + 0x30]
	0x0338402C LDP X24, X23, [X31 + 0x20]
	0x03384030 LDP X26, X25, [X31 + 0x10]
	0x03384034 CSET W0, LE
	0x03384038 LDR X30, [X31], #0x50
	0x0338403C RET
	0x03384040 BL 0x1C16F20
	0x03384044 STR X30, [X31 - 0x50]!
	0x03384048 STP X26, X25, [X31 + 0x10]
	0x0338404C STP X24, X23, [X31 + 0x20]
	0x03384050 STP X22, X21, [X31 + 0x30]
	0x03384054 STP X20, X19, [X31 + 0x40]
	0x03384058 ADRP X26, 0x1058000
	0x0338405C ADRP X25, 0xD6F000
	0x03384060 LDRB W8, [X26 + 0xFCA]
	0x03384064 LDR X25, [X25 + 0x5A8]
	0x03384068 MOV X22, X5
	0x0338406C MOV X19, X4
	0x03384070 MOV X23, X3
	0x03384074 MOV W24, W2
	0x03384078 MOV W20, W1
	0x0338407C MOV W21, W0
	0x03384080 TBNZ X8, 0x0, 0x33840BC
	0x03384084 ADRP X0, 0xD6F000
	0x03384088 LDR X0, [X0 + 0x5A8]
	0x0338408C BL 0x1C16CF4
	0x03384090 ADRP X0, 0xD9E000
	0x03384094 LDR X0, [X0 + 0x2C8]
	0x03384098 BL 0x1C16CF4
	0x0338409C ADRP X0, 0xDA4000
	0x033840A0 LDR X0, [X0 + 0x78]
	0x033840A4 BL 0x1C16CF4
	0x033840A8 ADRP X0, 0xD9E000
	0x033840AC LDR X0, [X0 + 0x588]
	0x033840B0 BL 0x1C16CF4
	0x033840B4 MOVZ W8, 0x1
	0x033840B8 STRB W8, [X26 + 0xFCA]
	0x033840BC CMP W24, 0x1
	0x033840C0 MOV W8, W21
	0x033840C4 UBFM W9, W21, 0x10, 0x1F
	0x033840C8 LDR X0, [X25]
	0x033840CC MOVZ W10, 0x5
	0x033840D0 CSINC W25, W24, W31, GT
	0x033840D4 UBFM X11, X8, 0x10, 0x3F
	0x033840D8 CMP W9, 0x0
	0x033840DC CSINC W9, W10, W31, NE
	0x033840E0 CSEL X8, X11, X8, NE
	0x033840E4 ORR W10, W9, 0x2
	0x033840E8 CMP X8, 0xFF
	0x033840EC CSEL W9, W10, W9, HI
	0x033840F0 LDR W10, [X0 + 0xE0]
	0x033840F4 UBFM X11, X8, 0x8, 0x3F
	0x033840F8 CSEL X8, X11, X8, HI
	0x033840FC CMP X8, 0xF
	0x03384100 CINC W24, W9, HI
	0x03384104 CBNZ W10, 0x338410C
	0x03384108 BL 0x1C16DFC
	0x0338410C CMP W25, W24
	0x03384110 CSEL W24, W24, W25, LT
	0x03384114 CMP W24, W19
	0x03384118 B.LE 0x3384124
	0x0338411C STR W31, [X22]
	0x03384120 B 0x3384198
	0x03384124 ADRP X8, 0xD9E000
	0x03384128 LDR X8, [X8 + 0x2C8]
	0x0338412C STR W24, [X22]
	0x03384130 ADRP X22, 0xDA4000
	0x03384134 MOV X0, X23
	0x03384138 LDR X2, [X8]
	0x0338413C LDR X22, [X22 + 0x78]
	0x03384140 MOV X1, X19
	0x03384144 BL 0x2218CFC
	0x03384148 LDR X8, [X22]
	0x0338414C MOV X22, X0
	0x03384150 LDR W9, [X8 + 0xE0]
	0x03384154 CBNZ W9, 0x3384160
	0x03384158 MOV X0, X8
	0x0338415C BL 0x1C16DFC
	0x03384160 UBFM W8, W24, 0x1F, 0x1E
	0x03384164 SUB W10, W25, 0x2
	0x03384168 ADD X8, X22, X8
	0x0338416C MOVZ W9, 0x30
	0x03384170 MOV W11, W10
	0x03384174 AND W10, W21, 0xF
	0x03384178 CMP W10, 0xA
	0x0338417C CSEL W12, W9, W20, CC
	0x03384180 ADD W10, W12, W10
	0x03384184 UBFM W21, W21, 0x4, 0x1F
	0x03384188 STRH W10, [X8 - 0x2]!
	0x0338418C SUB W10, W11, 0x1
	0x03384190 TBZ X11, 0x1F, 0x3384170
	0x03384194 CBNZ W21, 0x3384170
	0x03384198 CMP W24, W19
	0x0338419C LDP X20, X19, [X31 + 0x40]
	0x033841A0 LDP X22, X21, [X31 + 0x30]
	0x033841A4 LDP X24, X23, [X31 + 0x20]
	0x033841A8 LDP X26, X25, [X31 + 0x10]
	0x033841AC CSET W0, LE
	0x033841B0 LDR X30, [X31], #0x50
	0x033841B4 RET
	0x033841B8 STP X30, X27, [X31 - 0x50]!
	0x033841BC STP X26, X25, [X31 + 0x10]
	0x033841C0 STP X24, X23, [X31 + 0x20]
	0x033841C4 STP X22, X21, [X31 + 0x30]
	0x033841C8 STP X20, X19, [X31 + 0x40]
	0x033841CC ADRP X21, 0x1058000
	0x033841D0 LDRB W8, [X21 + 0xFD4]
	0x033841D4 MOV W20, W1
	0x033841D8 MOV X19, X0
	0x033841DC TBNZ X8, 0x0, 0x3384200
	0x033841E0 ADRP X0, 0xD6F000
	0x033841E4 LDR X0, [X0 + 0x5A8]
	0x033841E8 BL 0x1C16CF4
	0x033841EC ADRP X0, 0xDA4000
	0x033841F0 LDR X0, [X0 + 0x78]
	0x033841F4 BL 0x1C16CF4
	0x033841F8 MOVZ W8, 0x1
	0x033841FC STRB W8, [X21 + 0xFD4]
	0x03384200 MOVZ W8, 0x967F
	0x03384204 MOVK W8, 0x980000
	0x03384208 CMP W20, 0x1
	0x0338420C CSINC W22, W20, W31, GT
	0x03384210 CMP X19, X8
	0x03384214 B.LS 0x338423C
	0x03384218 MOVZ X9, 0x3FFF
	0x0338421C MOVK X9, 0x107A0000
	0x03384220 MOVK X9, 0x5AF3
	0x03384224 CMP X19, X9
	0x03384228 B.LS 0x3384248
	0x0338422C ADD X8, X9, 0x1
	0x03384230 UDIV X9, X19, X8
	0x03384234 MOVZ W20, 0xF
	0x03384238 B 0x3384254
	0x0338423C MOVZ W20, 0x1
	0x03384240 MOV X9, X19
	0x03384244 B 0x3384254
	0x03384248 ADD X8, X8, 0x1
	0x0338424C UDIV X9, X19, X8
	0x03384250 MOVZ W20, 0x8
	0x03384254 ADRP X8, 0xD6F000
	0x03384258 LDR X8, [X8 + 0x5A8]
	0x0338425C CMP W9, 0xA
	0x03384260 B.CC 0x33842C8
	0x03384264 CMP W9, 0x63
	0x03384268 B.HI 0x3384274
	0x0338426C ADD W20, W20, 0x1
	0x03384270 B 0x33842C8
	0x03384274 CMP W9, 0x3E7
	0x03384278 B.HI 0x3384284
	0x0338427C ADD W20, W20, 0x2
	0x03384280 B 0x33842C8
	0x03384284 UBFM W10, W9, 0x4, 0x1F
	0x03384288 CMP W10, 0x270
	0x0338428C B.HI 0x3384298

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x105A000
	011 Move W8, [X20+4092]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xD71000
	018 Move X0, [X0+1448]
	019 Call 0x1C17CF4
	020 Move X0, 0xDA6000
	021 Move X0, [X0+120]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+4092], W8
	025 Move X0, X19
	026 Move X1, X31
	027 Call NumberBuffer.get_digits, X0
	028 Move X1, X31
	029 Move X21, X0
	030 Call String.wcslen, X0
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move W20, W0
	033 Move W23, W0
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Subtract W23, W23, 1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Compare W23, 0
	039 JumpIfEqual {117}
	040 Move X24, 0xD71000
	041 Move X24, [X24+1448]
	042 Move X22, 0xDA6000
	043 Move X0, [X24]
	044 Move W8, [X0+224]
	045 Move X22, [X22+120]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X0, [X22]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W9, 9
	052 NotImplemented "Instruction CSEL not yet implemented."
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X8, X21
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Add X10, X21, W25
	060 Subtract W23, W23, W25
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Subtract W9, W9, 48
	063 Move W11, 10
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 NotImplemented "Instruction MADD not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract W9, W9, 48
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W25, W9
	070 Move X0, [X24]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X0, [X22]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move W9, 9
	078 NotImplemented "Instruction CSEL not yet implemented."
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X22]
	084 Move X9, [X0+184]
	085 Move X8, [X9+48]
	086 Compare X8, 0
	087 JumpIfEqual {344}
	088 Move W11, [X8+24]
	089 Subtract W10, W24, 1
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X9, [X9+56]
	092 Compare X9, 0
	093 JumpIfEqual {344}
	094 Move W11, [X9+24]
	095 Move X10, W10
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Add X9, X9, X10
	098 Add X8, X8, X10
	099 Move W9, [X9+32]
	100 Move X8, [X8+32]
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 Subtract W23, W23, W24
	103 Subtract W12, W31, W9
	104 NotImplemented "Instruction LSRV not yet implemented."
	105 Add X9, X21, W24
	106 Add X10, X21, 2
	107 And X8, X8, 0
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Multiply X8, X8, X25
	110 Subtract W11, W11, 48
	111 Move W12, 10
	112 NotImplemented "Instruction LDRH not yet implemented."
	113 NotImplemented "Instruction MADD not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Subtract W11, W11, 48
	116 Add X25, X8, W11
	117 Move D0, X31
	118 Move X0, [X22]
	119 Move W8, [X19+4]
	120 Move W9, [X0+224]
	121 Subtract W10, W23, W20
	122 Add W23, W10, W8
	123 Compare W9, 0
	124 JumpIfNotEqual {126}
	125 Call 0x1C17DFC
	126 NotImplemented "Instruction CMP not yet implemented."
	127 NotImplemented "Instruction CSNEG not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X9, X25
	130 ShiftRight X9, 32
	131 And X9, X9, 0x7FFFFFFF
	132 Move X8, X25
	133 ShiftRight X8, 32
	134 And X8, X8, 0x7FFFFFFF
	135 NotImplemented "Instruction CMP not yet implemented."
	136 NotImplemented "Instruction CSEL not yet implemented."
	137 Move W10, 64
	138 Move W11, 32
	139 Move X12, X8
	140 ShiftRight X12, 48
	141 And X12, X12, 0x7FFFFFFF
	142 NotImplemented "Instruction CSEL not yet implemented."
	143 Move X10, X8
	144 ShiftRight X10, 48
	145 And X10, X10, 0x7FFF
	146 NotImplemented "Instruction CMP not yet implemented."
	147 NotImplemented "Instruction CSEL not yet implemented."
	148 Subtract W11, W9, 16
	149 Move X12, X8
	150 ShiftRight X12, 56
	151 And X12, X12, 0x7FFFFFFF
	152 NotImplemented "Instruction CSEL not yet implemented."
	153 Move X10, X8
	154 ShiftRight X10, 56
	155 And X10, X10, 0x7FFFFF
	156 NotImplemented "Instruction CMP not yet implemented."
	157 NotImplemented "Instruction CSEL not yet implemented."
	158 Subtract W11, W9, 8
	159 Move X12, X8
	160 ShiftRight X12, 60
	161 And X12, X12, 0x7FFFFFFF
	162 NotImplemented "Instruction CSEL not yet implemented."
	163 Move X10, X8
	164 ShiftRight X10, 60
	165 And X10, X10, 0x7FFFFFF
	166 NotImplemented "Instruction CMP not yet implemented."
	167 NotImplemented "Instruction CSEL not yet implemented."
	168 Subtract W11, W9, 4
	169 Move X12, X8
	170 ShiftRight X12, 62
	171 And X12, X12, 0x7FFFFFFF
	172 NotImplemented "Instruction CSEL not yet implemented."
	173 Move X10, X8
	174 ShiftRight X10, 62
	175 And X10, X10, 0x1FFFFFFF
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Subtract W11, W9, 2
	178 NotImplemented "Instruction CSEL not yet implemented."
	179 NotImplemented "Instruction CSEL not yet implemented."
	180 NotImplemented "Instruction SBFM not yet implemented."
	181 NotImplemented "Instruction ORN not yet implemented."
	182 NotImplemented "Instruction ORN not yet implemented."
	183 Move X11, X11
	184 ShiftRight X11, 63
	185 And X11, X11, 0x7FFFFFFF
	186 Add W25, W9, W10
	187 NotImplemented "Instruction LSLV not yet implemented."
	188 And W21, W24, 15
	189 Move [X31+12], W25
	190 Move X0, [X22]
	191 Move W8, [X0+224]
	192 Compare W8, 0
	193 JumpIfNotEqual {196}
	194 Call 0x1C17DFC
	195 Move X0, [X22]
	196 Move X8, [X0+184]
	197 Move X9, [X8+56]
	198 Compare X9, 0
	199 JumpIfEqual {344}
	200 Move W10, [X9+24]
	201 Subtract W21, W21, 1
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Add X9, X9, W21
	204 NotImplemented "Instruction INVALID not yet implemented."
	205 Move W10, 1
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Subtract W10, W10, W9
	208 NotImplemented "Instruction CSEL not yet implemented."
	209 Add W9, W9, W25
	210 Move [X31+12], W9
	211 Move W9, [X0+224]
	212 Compare W9, 0
	213 JumpIfNotEqual {217}
	214 Call 0x1C17DFC
	215 Move X0, [X22]
	216 Move X8, [X0+184]
	217 Move X8, [X8+48]
	218 Compare X8, 0
	219 JumpIfEqual {344}
	220 Move W10, [X8+24]
	221 NotImplemented "Instruction SBFM not yet implemented."
	222 And W9, W9, 15
	223 Add W9, W21, W9
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Add X8, X8, W9
	226 Move W9, [X0+224]
	227 Move X21, [X8+32]
	228 Compare W9, 0
	229 JumpIfNotEqual {231}
	230 Call 0x1C17DFC
	231 Add X2, X31, 12
	232 Move X0, X20
	233 Move X1, X21
	234 Call Number.Mul64Lossy, X0, X1, X2
	235 Move X20, X0
	236 NotImplemented "Instruction SBFM not yet implemented."
	237 Compare W21, 0
	238 JumpIfEqual {287}
	239 Move X0, [X22]
	240 Move W8, [X0+224]
	241 Compare W8, 0
	242 JumpIfNotEqual {245}
	243 Call 0x1C17DFC
	244 Move X0, [X22]
	245 Move X8, [X0+184]
	246 Move X9, [X8+72]
	247 Compare X9, 0
	248 JumpIfEqual {344}
	249 Move W10, [X9+24]
	250 Move X11, W21
	251 Subtract X21, X11, 1
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Add X9, X9, X21
	254 NotImplemented "Instruction LDRSH not yet implemented."
	255 Move W10, [X31+12]
	256 Move W11, 1
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Subtract W11, W11, W9
	259 NotImplemented "Instruction CSEL not yet implemented."
	260 Add W9, W9, W10
	261 Move [X31+12], W9
	262 Move W9, [X0+224]
	263 Compare W9, 0
	264 JumpIfNotEqual {268}
	265 Call 0x1C17DFC
	266 Move X0, [X22]
	267 Move X8, [X0+184]
	268 Move X8, [X8+64]
	269 Compare X8, 0
	270 JumpIfEqual {344}
	271 Move W10, [X8+24]
	272 Move W9, 21
	273 And W9, W9, W23
	274 Add W9, W21, W9
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Add X8, X8, W9
	277 Move W9, [X0+224]
	278 Move X21, [X8+32]
	279 Compare W9, 0
	280 JumpIfNotEqual {282}
	281 Call 0x1C17DFC
	282 Add X2, X31, 12
	283 Move X0, X20
	284 Move X1, X21
	285 Call Number.Mul64Lossy, X0, X1, X2
	286 Move X20, X0
	287 Move TEMP, X20
	288 And TEMP, TEMP, 1024
	289 Compare TEMP, 1024
	290 JumpIfNotEqual {303}
	291 Move X8, X20
	292 ShiftRight X8, 11
	293 And X8, X8, 2047
	294 Add X8, X20, X8
	295 Add X8, X8, 1023
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Move X20, X8
	298 Move W9, [X31+12]
	299 Move X20, 0x80000000
	300 NotImplemented "Instruction BFM not yet implemented."
	301 Add W8, W9, 1
	302 Move [X31+12], W8
	303 Move W8, [X31+12]
	304 Add W9, W8, 1022
	305 NotImplemented "Instruction CMP not yet implemented."
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Move X20, X20
	308 ShiftRight X20, 11
	309 And X20, X20, 0x7FFFFFFF
	310 NotImplemented "Instruction BFM not yet implemented."
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Move X8, 0x7FF00000
	313 NotImplemented "Instruction CSEL not yet implemented."
	314 Move X10, 88
	315 NotImplemented "Instruction MOVK not yet implemented."
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Add W31, W9, 52
	318 Move W20, 1
	319 Move X20, 0x7FF00000
	320 Add W31, W9, 51
	321 Move TEMP, 1009
	322 Not TEMP
	323 Move W9, TEMP
	324 Subtract X8, X9, X8
	325 NotImplemented "Instruction LSRV not yet implemented."
	326 Move X20, X31
	327 Move X0, X19
	328 Move X1, X31
	329 Call NumberBuffer.get_sign, X0
	330 Or X8, X20, -1
	331 And W31, W0, 1
	332 NotImplemented "Instruction CSEL not yet implemented."
	333 Move D0, X8
	334 Move X20, [X31+64]
	335 Move X19, [X31+72]
	336 Move X22, [X31+48]
	337 Move X21, [X31+56]
	338 Move X24, [X31+32]
	339 Move X23, [X31+40]
	340 Move X30, [X31+16]
	341 Move X25, [X31+24]
	342 Add X31, X31, 80
	343 Return V0
	344 Call 0x1C17F20
	345 Call 0x1C17F28

Method: System.Void DoubleToNumber(System.Double value, System.Int32 precision, ref System.Number/NumberBuffer number)

Disassembly:
	0x033839D0 MOV W21, W1
	0x033839D4 MOV W20, W0
	0x033839D8 TBNZ X8, 0x0, 0x33839FC
	0x033839DC ADRP X0, 0xD70000
	0x033839E0 LDR X0, [X0 + 0x5A8]
	0x033839E4 BL 0x1C16CF4
	0x033839E8 ADRP X0, 0xDA5000
	0x033839EC LDR X0, [X0 + 0x78]
	0x033839F0 BL 0x1C16CF4
	0x033839F4 MOVZ W8, 0x1
	0x033839F8 STRB W8, [X22 + 0xFC7]
	0x033839FC MOVZ W8, 0x869F
	0x03383A00 SUB W22, W31, W20
	0x03383A04 MOVK W8, 0x10000
	0x03383A08 CMP W21, 0x1
	0x03383A0C ADD W8, W8, 0x1
	0x03383A10 UBFM W10, W22, 0x5, 0x1F
	0x03383A14 MOVZ W9, 0x6
	0x03383A18 CSINC W23, W21, W31, GT
	0x03383A1C UDIV W8, W22, W8
	0x03383A20 CMP W10, 0xC34
	0x03383A24 CSINC W21, W9, W31, HI
	0x03383A28 CSNEG W9, W8, W20, HI
	0x03383A2C ADRP X8, 0xD70000
	0x03383A30 LDR X8, [X8 + 0x5A8]
	0x03383A34 CMP W9, 0xA
	0x03383A38 B.CC 0x3383A74
	0x03383A3C CMP W9, 0x63
	0x03383A40 B.HI 0x3383A4C
	0x03383A44 ADD W21, W21, 0x1
	0x03383A48 B 0x3383A74
	0x03383A4C CMP W9, 0x3E7
	0x03383A50 B.HI 0x3383A5C
	0x03383A54 ADD W21, W21, 0x2
	0x03383A58 B 0x3383A74
	0x03383A5C UBFM W9, W9, 0x4, 0x1F
	0x03383A60 CMP W9, 0x270
	0x03383A64 B.HI 0x3383A70
	0x03383A68 ADD W21, W21, 0x3
	0x03383A6C B 0x3383A74
	0x03383A70 ADD W21, W21, 0x4
	0x03383A74 LDR X0, [X8]
	0x03383A78 LDR W8, [X0 + 0xE0]
	0x03383A7C CBNZ W8, 0x3383A84
	0x03383A80 BL 0x1C16DFC
	0x03383A84 CBZ X19, 0x3383B5C
	0x03383A88 LDR W8, [X19 + 0x10]
	0x03383A8C ADRP X24, 0xDA5000
	0x03383A90 CMP W23, W21
	0x03383A94 LDR X24, [X24 + 0x78]
	0x03383A98 CSEL W9, W21, W23, LT
	0x03383A9C ADD W21, W8, W9
	0x03383AA0 MOV W0, W21
	0x03383AA4 MOV X1, X31
	0x03383AA8 BL 0x32277A4
	0x03383AAC MOV X20, X0
	0x03383AB0 CBZ X0, 0x3383AC4
	0x03383AB4 MOV X0, X31
	0x03383AB8 BL 0x32C1424
	0x03383ABC ADD X25, X20, W0, SXTW
	0x03383AC0 B 0x3383AC8
	0x03383AC4 MOV X25, X20
	0x03383AC8 LDR X0, [X24]
	0x03383ACC LDR W8, [X0 + 0xE0]
	0x03383AD0 CBNZ W8, 0x3383AD8
	0x03383AD4 BL 0x1C16DFC
	0x03383AD8 MOVZ W8, 0xCCCD
	0x03383ADC ADD X24, X25, W21, 0x1, SXTW
	0x03383AE0 SUB W10, W23, 0x2
	0x03383AE4 MOVK W8, 0xCCCC0000
	0x03383AE8 MOVN W9, 0x9
	0x03383AEC MOV W12, W10
	0x03383AF0 UMADDL X10, X22, X8, X31
	0x03383AF4 MOV W11, W22
	0x03383AF8 UBFM X22, X10, 0x23, 0x3F
	0x03383AFC MADD W10, W22, W9, W11
	0x03383B00 ADD W10, W10, 0x30
	0x03383B04 STRH W10, [X24 - 0x2]!
	0x03383B08 SUB W10, W12, 0x1
	0x03383B0C TBZ X12, 0x1F, 0x3383AEC
	0x03383B10 CMP W11, 0x9
	0x03383B14 B.HI 0x3383AEC
	0x03383B18 LDR W21, [X19 + 0x10]
	0x03383B1C CMP W21, 0x1
	0x03383B20 B.MI 0x3383B44
	0x03383B24 SUB W21, W21, 0x1
	0x03383B28 MOV X0, X19
	0x03383B2C MOV W1, W21
	0x03383B30 MOV X2, X31
	0x03383B34 BL 0x3222A1C
	0x03383B38 CMP W21, 0x0
	0x03383B3C STRH W0, [X24 - 0x2]!
	0x03383B40 B.GT 0x3383B24
	0x03383B44 MOV X0, X20
	0x03383B48 LDP X20, X19, [X31 + 0x30]
	0x03383B4C LDP X22, X21, [X31 + 0x20]
	0x03383B50 LDP X24, X23, [X31 + 0x10]
	0x03383B54 LDP X30, X25, [X31], #0x40
	0x03383B58 RET
	0x03383B5C BL 0x1C16F20
	0x03383B60 STP X30, X25, [X31 - 0x40]!
	0x03383B64 STP X24, X23, [X31 + 0x10]
	0x03383B68 STP X22, X21, [X31 + 0x20]
	0x03383B6C STP X20, X19, [X31 + 0x30]
	0x03383B70 ADRP X23, 0x1059000
	0x03383B74 ADRP X22, 0xD70000
	0x03383B78 LDRB W8, [X23 + 0xFC9]
	0x03383B7C LDR X22, [X22 + 0x5A8]
	0x03383B80 MOV W21, W2
	0x03383B84 MOV W19, W1
	0x03383B88 MOV W20, W0
	0x03383B8C TBNZ X8, 0x0, 0x3383BB0
	0x03383B90 ADRP X0, 0xD70000
	0x03383B94 LDR X0, [X0 + 0x5A8]
	0x03383B98 BL 0x1C16CF4
	0x03383B9C ADRP X0, 0xDA5000
	0x03383BA0 LDR X0, [X0 + 0x78]
	0x03383BA4 BL 0x1C16CF4
	0x03383BA8 MOVZ W8, 0x1
	0x03383BAC STRB W8, [X23 + 0xFC9]
	0x03383BB0 CMP W21, 0x1
	0x03383BB4 MOV W8, W20
	0x03383BB8 UBFM W9, W20, 0x10, 0x1F
	0x03383BBC LDR X0, [X22]
	0x03383BC0 MOVZ W10, 0x5
	0x03383BC4 CSINC W23, W21, W31, GT
	0x03383BC8 UBFM X11, X8, 0x10, 0x3F
	0x03383BCC CMP W9, 0x0
	0x03383BD0 CSINC W9, W10, W31, NE
	0x03383BD4 CSEL X8, X11, X8, NE
	0x03383BD8 ORR W10, W9, 0x2
	0x03383BDC CMP X8, 0xFF
	0x03383BE0 CSEL W9, W10, W9, HI
	0x03383BE4 LDR W10, [X0 + 0xE0]
	0x03383BE8 UBFM X11, X8, 0x8, 0x3F
	0x03383BEC CSEL X8, X11, X8, HI
	0x03383BF0 CMP X8, 0xF
	0x03383BF4 CINC W21, W9, HI
	0x03383BF8 CBNZ W10, 0x3383C00
	0x03383BFC BL 0x1C16DFC
	0x03383C00 ADRP X24, 0xDA5000
	0x03383C04 LDR X24, [X24 + 0x78]
	0x03383C08 CMP W23, W21
	0x03383C0C CSEL W22, W21, W23, LT
	0x03383C10 MOV W0, W22
	0x03383C14 MOV X1, X31
	0x03383C18 BL 0x32277A4
	0x03383C1C MOV X21, X0
	0x03383C20 CBZ X0, 0x3383C34
	0x03383C24 MOV X0, X31
	0x03383C28 BL 0x32C1424
	0x03383C2C ADD X25, X21, W0, SXTW
	0x03383C30 B 0x3383C38
	0x03383C34 MOV X25, X21
	0x03383C38 LDR X0, [X24]
	0x03383C3C LDR W8, [X0 + 0xE0]
	0x03383C40 CBNZ W8, 0x3383C48
	0x03383C44 BL 0x1C16DFC
	0x03383C48 UBFM W8, W22, 0x1F, 0x1E
	0x03383C4C SUB W10, W23, 0x2
	0x03383C50 ADD X8, X25, X8
	0x03383C54 MOVZ W9, 0x30
	0x03383C58 MOV W11, W10
	0x03383C5C AND W10, W20, 0xF
	0x03383C60 CMP W10, 0xA
	0x03383C64 CSEL W12, W9, W19, CC
	0x03383C68 ADD W10, W12, W10
	0x03383C6C UBFM W20, W20, 0x4, 0x1F
	0x03383C70 STRH W10, [X8 - 0x2]!
	0x03383C74 SUB W10, W11, 0x1
	0x03383C78 TBZ X11, 0x1F, 0x3383C58
	0x03383C7C CBNZ W20, 0x3383C58
	0x03383C80 MOV X0, X21
	0x03383C84 LDP X20, X19, [X31 + 0x30]
	0x03383C88 LDP X22, X21, [X31 + 0x20]
	0x03383C8C LDP X24, X23, [X31 + 0x10]
	0x03383C90 LDP X30, X25, [X31], #0x40
	0x03383C94 RET
	0x03383C98 STR X30, [X31 - 0x40]!
	0x03383C9C STP X24, X23, [X31 + 0x10]
	0x03383CA0 STP X22, X21, [X31 + 0x20]
	0x03383CA4 STP X20, X19, [X31 + 0x30]
	0x03383CA8 ADRP X24, 0x1059000
	0x03383CAC LDRB W8, [X24 + 0xFCD]
	0x03383CB0 MOV X22, X4
	0x03383CB4 MOV X21, X3
	0x03383CB8 MOV X23, X2
	0x03383CBC MOV W20, W1
	0x03383CC0 MOV W19, W0
	0x03383CC4 TBNZ X8, 0x0, 0x3383D00
	0x03383CC8 ADRP X0, 0xD70000
	0x03383CCC LDR X0, [X0 + 0x5A8]
	0x03383CD0 BL 0x1C16CF4
	0x03383CD4 ADRP X0, 0xD9F000
	0x03383CD8 LDR X0, [X0 + 0x2C8]
	0x03383CDC BL 0x1C16CF4
	0x03383CE0 ADRP X0, 0xDA5000
	0x03383CE4 LDR X0, [X0 + 0x78]
	0x03383CE8 BL 0x1C16CF4
	0x03383CEC ADRP X0, 0xD9F000
	0x03383CF0 LDR X0, [X0 + 0x588]
	0x03383CF4 BL 0x1C16CF4
	0x03383CF8 MOVZ W8, 0x1
	0x03383CFC STRB W8, [X24 + 0xFCD]
	0x03383D00 MOVZ W8, 0x869F
	0x03383D04 MOVK W8, 0x10000
	0x03383D08 UBFM W9, W19, 0x5, 0x1F
	0x03383D0C ADD W8, W8, 0x1
	0x03383D10 CMP W9, 0xC34
	0x03383D14 UDIV W8, W19, W8
	0x03383D18 CSEL W9, W8, W19, HI
	0x03383D1C ADRP X8, 0xD70000
	0x03383D20 LDR X8, [X8 + 0x5A8]
	0x03383D24 MOVZ W10, 0x6
	0x03383D28 CSINC W24, W10, W31, HI
	0x03383D2C CMP W9, 0xA
	0x03383D30 B.CC 0x3383D6C
	0x03383D34 CMP W9, 0x63
	0x03383D38 B.HI 0x3383D44
	0x03383D3C ADD W24, W24, 0x1
	0x03383D40 B 0x3383D6C
	0x03383D44 CMP W9, 0x3E7
	0x03383D48 B.HI 0x3383D54
	0x03383D4C ADD W24, W24, 0x2
	0x03383D50 B 0x3383D6C
	0x03383D54 UBFM W9, W9, 0x4, 0x1F
	0x03383D58 CMP W9, 0x270
	0x03383D5C B.HI 0x3383D68
	0x03383D60 ADD W24, W24, 0x3
	0x03383D64 B 0x3383D6C
	0x03383D68 ADD W24, W24, 0x4
	0x03383D6C LDR X0, [X8]
	0x03383D70 LDR W8, [X0 + 0xE0]
	0x03383D74 CBNZ W8, 0x3383D7C
	0x03383D78 BL 0x1C16DFC
	0x03383D7C CMP W24, W20
	0x03383D80 CSEL W24, W24, W20, GT
	0x03383D84 CMP W24, W21
	0x03383D88 B.LE 0x3383D98
	0x03383D8C MOV W0, W31
	0x03383D90 STR W31, [X22]
	0x03383D94 B 0x3383E48
	0x03383D98 ADRP X8, 0xD9F000
	0x03383D9C LDR X8, [X8 + 0x2C8]
	0x03383DA0 STR W24, [X22]
	0x03383DA4 MOV X0, X23
	0x03383DA8 MOV X1, X21
	0x03383DAC LDR X2, [X8]

ISIL:
	001 Move [X31-80], D8
	002 Move [X31+8], X29
	003 Move [X31+16], X30
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Add X29, X31, 8
	012 Subtract X31, X31, 16
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X8, [X24+40]
	015 Move X21, 0x105A000
	016 Move X19, X1
	017 Move W20, W0
	018 Move [X29-16], X8
	019 Move W8, [X21+4093]
	020 Move V8, V0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0xD9C000
	026 Move X0, [X0+3448]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+4093], W8
	030 Move X25, D8
	031 NotImplemented "Instruction ORN not yet implemented."
	032 And X31, X8, 0x7FFFFFFFFFFFFFFF
	033 Move X23, X25
	034 ShiftRight X23, 63
	035 And X23, X23, 0x7FFFFFFF
	036 Move [X19], W20
	037 And X8, X25, 0x7FFFFFFF
	038 Move X9, 0x7FF00000
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W8, 0x80000000
	041 NotImplemented "Instruction CSINV not yet implemented."
	042 Move X0, X19
	043 Move W1, W23
	044 Move X2, X31
	045 Move [X19+4], W8
	046 Call NumberBuffer.set_sign, X0, X1
	047 Move X0, X19
	048 Move X1, X31
	049 Call NumberBuffer.get_digits, X0
	050 NotImplemented "Instruction STRH not yet implemented."
	051 Add X8, X31, 0
	052 Subtract X22, X8, 64
	053 Add X31, X22, 0
	054 NotImplemented "Instruction MOVI not yet implemented."
	055 Move X0, X19
	056 Move X1, X31
	057 NotImplemented "Instruction STURH not yet implemented."
	058 Move [X8-48], V0
	059 Move [X8-40], V0
	060 Move [X8-64], V0
	061 Call NumberBuffer.get_digits, X0
	062 Move X21, X0
	063 Move X0, X19
	064 Move W1, W23
	065 Move X2, X31
	066 Move [X19+4], W31
	067 Call NumberBuffer.set_sign, X0, X1
	068 NotImplemented "Instruction STRH not yet implemented."
	069 Compare X25, 0
	070 JumpIfEqual {123}
	071 Add X8, X31, 0
	072 Subtract X23, X8, 16
	073 Add X31, X23, 0
	074 Move W9, 37
	075 Move [X8-16], W31
	076 NotImplemented "Instruction STURH not yet implemented."
	077 NotImplemented "Instruction STURB not yet implemented."
	078 Or X8, X23, 1
	079 Move W9, 46
	080 Move [X8], W9
	081 Or X8, X23, 3
	082 Move W9, 52
	083 Move [X8], W9
	084 Or X8, X23, 3
	085 Move W9, 48
	086 Move [X8], W9
	087 Or X8, X23, 7
	088 Move W9, 101
	089 Move [X8], W9
	090 Move W8, 5
	091 Or X8, X23, X8
	092 Move [X8], W31
	093 Move X8, 0xD9C000
	094 Move X8, [X8+3448]
	095 Move X0, [X8]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move W2, 50
	101 Move V0, V8
	102 Move X0, X23
	103 Move X1, X22
	104 Move X3, X31
	105 Call Sys.DoubleToString, V0, X0, X1, X2
	106 Subtract W8, W0, 1
	107 Move W10, W8
	108 Move W8, [X22]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 NotImplemented "Instruction CSET not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Subtract W8, W10, 1
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Add W11, W8, 2
	115 Move W12, [X22]
	116 Move X10, W10
	117 NotImplemented "Instruction CMP not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Add W11, W8, 3
	120 Move TEMP, 0
	121 Not TEMP
	122 Move W8, TEMP
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X9, -42565632
	125 Move W8, W20
	126 Move V0, [X9+121]
	127 Add X10, X8, 1
	128 Subtract X11, X8, 1
	129 And X8, X10, 0
	130 Move W10, 2
	131 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	132 Move W9, 48
	133 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	134 Move X10, X21
	135 NotImplemented "Instruction INVALID not yet implemented."
	136 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	137 Move W11, S3
	138 Move TEMP, X11
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfNotEqual {143}
	142 NotImplemented "Instruction STRH not yet implemented."
	143 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	144 Move TEMP, X11
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 Invalid "Jump target not found in method."
	148 NotImplemented "Instruction STRH not yet implemented."
	149 NotImplemented "Instruction INVALID not yet implemented."
	150 Subtract X8, X8, 2
	151 Add X10, X10, 4
	152 NotImplemented "Instruction STRH not yet implemented."
	153 Add W11, W8, 3
	154 Move W8, 1
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move X14, W0
	157 Move W13, W31
	158 Add X12, X22, W11
	159 Subtract X11, X14, W11
	160 Move W14, 10
	161 Move W15, [X12+1]
	162 Subtract X11, X11, 1
	163 NotImplemented "Instruction MADD not yet implemented."
	164 Subtract W13, W13, 48
	165 Move W13, W31
	166 Multiply W8, W13, W8
	167 Move W12, W31
	168 Move X11, X31
	169 Add W13, W8, 1
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move [X19+4], W13
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X11, X31
	174 Move W12, W31
	175 Move W9, [X22]
	176 Subtract W13, W9, 48
	177 NotImplemented "Instruction CMP not yet implemented."
	178 NotImplemented "Instruction STRH not yet implemented."
	179 Add W12, W12, 1
	180 Add X11, X11, 1
	181 NotImplemented "Instruction CMP not yet implemented."
	182 NotImplemented "Instruction CSET not yet implemented."
	183 NotImplemented "Instruction CMP not yet implemented."
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Add X10, X21, W12
	186 Move X12, W12
	187 Move X13, W20
	188 Subtract X13, X13, X12
	189 Add X12, X21, X12
	190 Move W14, 48
	191 Add X12, X12, 2
	192 Subtract X13, X13, 1
	193 NotImplemented "Instruction STRH not yet implemented."
	194 Move X10, X12
	195 Move X10, X12
	196 NotImplemented "Instruction STRH not yet implemented."
	197 Compare W9, 0
	198 JumpIfEqual {232}
	199 Move W9, [X11]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Subtract W12, W20, 1
	202 Add X9, X21, W12
	203 NotImplemented "Instruction LDRH not yet implemented."
	204 NotImplemented "Instruction CMP not yet implemented."
	205 NotImplemented "Instruction CSET not yet implemented."
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Subtract W10, W20, 2
	208 Add X15, X21, W10
	209 Move W16, 48
	210 Move X14, X15
	211 NotImplemented "Instruction STRH not yet implemented."
	212 NotImplemented "Instruction LDRH not yet implemented."
	213 Subtract W13, W12, 1
	214 NotImplemented "Instruction CMP not yet implemented."
	215 NotImplemented "Instruction CSET not yet implemented."
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move X9, X15
	218 Move X15, X14
	219 Move W12, W13
	220 Add X9, X14, 2
	221 Move W13, W12
	222 Compare W13, 0
	223 JumpIfNotEqual {230}
	224 Compare W11, 0
	225 JumpIfEqual {230}
	226 Move W10, 49
	227 Add W8, W8, 2
	228 NotImplemented "Instruction STRH not yet implemented."
	229 Move [X19+4], W8
	230 Add W8, W10, 1
	231 NotImplemented "Instruction STRH not yet implemented."
	232 Move X8, [X24+40]
	233 NotImplemented "Instruction LDUR not yet implemented."
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Subtract X31, X29, 8
	236 Move X20, [X31+64]
	237 Move X19, [X31+72]
	238 Move X22, [X31+48]
	239 Move X21, [X31+56]
	240 Move X24, [X31+32]
	241 Move X23, [X31+40]
	242 Move X25, [X31+24]
	243 Move X29, [X31+8]
	244 Move X30, [X31+16]
	245 Move V8, [X31+80]
	246 Return 
	247 Call 0x3EB2B20

Method: System.Void .cctor()

Disassembly:
	0x0338C44C STP X22, X21, [X31 + 0x10]
	0x0338C450 STP X20, X19, [X31 + 0x20]
	0x0338C454 ADRP X21, 0x1051000
	0x0338C458 ADRP X22, 0xD9F000
	0x0338C45C LDRB W8, [X21 + 0x8]
	0x0338C460 LDR X22, [X22 + 0x170]
	0x0338C464 MOV X19, X1
	0x0338C468 MOV X20, X0
	0x0338C46C TBNZ X8, 0x0, 0x338C484
	0x0338C470 ADRP X0, 0xD9F000
	0x0338C474 LDR X0, [X0 + 0x170]
	0x0338C478 BL 0x1C16CF4
	0x0338C47C MOVZ W8, 0x1
	0x0338C480 STRB W8, [X21 + 0x8]
	0x0338C484 LDR X1, [X22]
	0x0338C488 MOV X0, X20
	0x0338C48C MOV X2, X31
	0x0338C490 BL 0x337DF1C
	0x0338C494 MOVZ W8, 0x1622
	0x0338C498 MOVK W8, 0x80130000
	0x0338C49C STR W8, [X20 + 0x60]
	0x0338C4A0 STR X19, [X20 + 0x90]
	0x0338C4A4 LDP X20, X19, [X31 + 0x20]
	0x0338C4A8 LDP X22, X21, [X31 + 0x10]
	0x0338C4AC LDR X30, [X31], #0x30
	0x0338C4B0 RET
	0x0338C4B4 STP X30, X23, [X31 - 0x30]!
	0x0338C4B8 STP X22, X21, [X31 + 0x10]
	0x0338C4BC STP X20, X19, [X31 + 0x20]
	0x0338C4C0 ADRP X23, 0x1051000
	0x0338C4C4 LDRB W8, [X23 + 0x9]
	0x0338C4C8 MOV X21, X3
	0x0338C4CC MOV X22, X2
	0x0338C4D0 MOV X20, X1
	0x0338C4D4 MOV X19, X0
	0x0338C4D8 TBNZ X8, 0x0, 0x338C4F0
	0x0338C4DC ADRP X0, 0xD9F000
	0x0338C4E0 LDR X0, [X0 + 0x178]
	0x0338C4E4 BL 0x1C16CF4
	0x0338C4E8 MOVZ W8, 0x1
	0x0338C4EC STRB W8, [X23 + 0x9]
	0x0338C4F0 MOV X0, X19
	0x0338C4F4 MOV X1, X20
	0x0338C4F8 MOV X2, X22
	0x0338C4FC MOV X3, X21
	0x0338C500 MOV X4, X31
	0x0338C504 BL 0x337DF64
	0x0338C508 CBZ X20, 0x338C538
	0x0338C50C ADRP X8, 0xD9F000
	0x0338C510 LDR X8, [X8 + 0x178]
	0x0338C514 MOV X0, X20
	0x0338C518 MOV X2, X31
	0x0338C51C LDR X1, [X8]
	0x0338C520 BL 0x32A9F64
	0x0338C524 STR X0, [X19 + 0x90]
	0x0338C528 LDP X20, X19, [X31 + 0x20]
	0x0338C52C LDP X22, X21, [X31 + 0x10]
	0x0338C530 LDP X30, X23, [X31], #0x30
	0x0338C534 RET
	0x0338C538 BL 0x1C16F20
	0x0338C53C STP X30, X23, [X31 - 0x30]!
	0x0338C540 STP X22, X21, [X31 + 0x10]
	0x0338C544 STP X20, X19, [X31 + 0x20]
	0x0338C548 ADRP X23, 0x1051000
	0x0338C54C LDRB W8, [X23 + 0xA]
	0x0338C550 MOV X21, X3
	0x0338C554 MOV X22, X2
	0x0338C558 MOV X19, X1
	0x0338C55C MOV X20, X0
	0x0338C560 TBNZ X8, 0x0, 0x338C590
	0x0338C564 ADRP X0, 0xD8F000
	0x0338C568 LDR X0, [X0 + 0xB60]
	0x0338C56C BL 0x1C16CF4
	0x0338C570 ADRP X0, 0xD67000
	0x0338C574 LDR X0, [X0 + 0x6C0]
	0x0338C578 BL 0x1C16CF4
	0x0338C57C ADRP X0, 0xD9F000
	0x0338C580 LDR X0, [X0 + 0x178]
	0x0338C584 BL 0x1C16CF4
	0x0338C588 MOVZ W8, 0x1
	0x0338C58C STRB W8, [X23 + 0xA]
	0x0338C590 MOV X0, X20
	0x0338C594 MOV X1, X19
	0x0338C598 MOV X2, X22
	0x0338C59C MOV X3, X21
	0x0338C5A0 MOV X4, X31
	0x0338C5A4 BL 0x33B3620
	0x0338C5A8 ADRP X21, 0x1051000
	0x0338C5AC LDRB W8, [X21 + 0xC]
	0x0338C5B0 TBNZ X8, 0x0, 0x338C5C8
	0x0338C5B4 ADRP X0, 0xD69000
	0x0338C5B8 LDR X0, [X0 + 0x278]
	0x0338C5BC BL 0x1C16CF4
	0x0338C5C0 MOVZ W8, 0x1
	0x0338C5C4 STRB W8, [X21 + 0xC]
	0x0338C5C8 ADRP X8, 0xD8F000
	0x0338C5CC ADRP X9, 0xD67000
	0x0338C5D0 LDR X20, [X20 + 0x90]
	0x0338C5D4 LDR X8, [X8 + 0xB60]
	0x0338C5D8 LDR X9, [X9 + 0x6C0]
	0x0338C5DC CBNZ X20, 0x338C5F4
	0x0338C5E0 ADRP X10, 0xD69000
	0x0338C5E4 LDR X10, [X10 + 0x278]
	0x0338C5E8 LDR X10, [X10]
	0x0338C5EC LDR X10, [X10 + 0xB8]
	0x0338C5F0 LDR X20, [X10]
	0x0338C5F4 LDR X0, [X9]
	0x0338C5F8 LDR X21, [X8]
	0x0338C5FC LDR W9, [X0 + 0xE0]
	0x0338C600 CBNZ W9, 0x338C608
	0x0338C604 BL 0x1C16DFC
	0x0338C608 MOV X0, X21
	0x0338C60C BL 0x338C698
	0x0338C610 CBZ X19, 0x338C640
	0x0338C614 ADRP X8, 0xD9F000
	0x0338C618 LDR X8, [X8 + 0x178]
	0x0338C61C MOV X3, X0
	0x0338C620 MOV X0, X19
	0x0338C624 MOV X2, X20
	0x0338C628 LDR X1, [X8]
	0x0338C62C LDP X20, X19, [X31 + 0x20]
	0x0338C630 LDP X22, X21, [X31 + 0x10]
	0x0338C634 MOV X4, X31
	0x0338C638 LDP X30, X23, [X31], #0x30
	0x0338C63C B 0x32A89BC
	0x0338C640 BL 0x1C16F20
	0x0338C644 STR X30, [X31 - 0x20]!
	0x0338C648 STP X20, X19, [X31 + 0x10]
	0x0338C64C ADRP X20, 0x1051000
	0x0338C650 LDRB W8, [X20 + 0xC]
	0x0338C654 MOV X19, X0
	0x0338C658 TBNZ X8, 0x0, 0x338C670
	0x0338C65C ADRP X0, 0xD69000
	0x0338C660 LDR X0, [X0 + 0x278]
	0x0338C664 BL 0x1C16CF4
	0x0338C668 MOVZ W8, 0x1
	0x0338C66C STRB W8, [X20 + 0xC]
	0x0338C670 LDR X0, [X19 + 0x90]
	0x0338C674 CBNZ X0, 0x338C68C
	0x0338C678 ADRP X8, 0xD69000
	0x0338C67C LDR X8, [X8 + 0x278]
	0x0338C680 LDR X8, [X8]
	0x0338C684 LDR X8, [X8 + 0xB8]
	0x0338C688 LDR X0, [X8]
	0x0338C68C LDP X20, X19, [X31 + 0x10]
	0x0338C690 LDR X30, [X31], #0x20
	0x0338C694 RET
	0x0338C698 STR X30, [X31 - 0x20]!
	0x0338C69C STP X20, X19, [X31 + 0x10]
	0x0338C6A0 ADRP X20, 0x1051000
	0x0338C6A4 LDRB W8, [X20 + 0x9B]
	0x0338C6A8 MOV X19, X0
	0x0338C6AC TBNZ X8, 0x0, 0x338C6C4
	0x0338C6B0 ADRP X0, 0xD67000
	0x0338C6B4 LDR X0, [X0 + 0x6C0]
	0x0338C6B8 BL 0x1C16CF4
	0x0338C6BC MOVZ W8, 0x1
	0x0338C6C0 STRB W8, [X20 + 0x9B]
	0x0338C6C4 MOV X0, X19
	0x0338C6C8 MOV X1, X31
	0x0338C6CC MOV X2, X31
	0x0338C6D0 BL 0x33BE5B0
	0x0338C6D4 TBZ X0, 0x0, 0x338C6E8
	0x0338C6D8 LDP X20, X19, [X31 + 0x10]
	0x0338C6DC MOV X0, X31
	0x0338C6E0 LDR X30, [X31], #0x20
	0x0338C6E4 RET
	0x0338C6E8 ADRP X8, 0xD67000
	0x0338C6EC LDR X8, [X8 + 0x6C0]
	0x0338C6F0 LDR X0, [X8]
	0x0338C6F4 LDR W8, [X0 + 0xE0]
	0x0338C6F8 CBNZ W8, 0x338C700
	0x0338C6FC BL 0x1C16DFC
	0x0338C700 MOV X0, X19
	0x0338C704 LDP X20, X19, [X31 + 0x10]
	0x0338C708 LDR X30, [X31], #0x20
	0x0338C70C B 0x1C179F4
	0x0338C710 STR X30, [X31 - 0x20]!
	0x0338C714 STP X20, X19, [X31 + 0x10]
	0x0338C718 ADRP X20, 0x1051000
	0x0338C71C LDRB W8, [X20 + 0xB]
	0x0338C720 MOV X19, X0
	0x0338C724 TBNZ X8, 0x0, 0x338C73C
	0x0338C728 ADRP X0, 0xD9F000
	0x0338C72C LDR X0, [X0 + 0x180]
	0x0338C730 BL 0x1C16CF4
	0x0338C734 MOVZ W8, 0x1
	0x0338C738 STRB W8, [X20 + 0xB]
	0x0338C73C ADRP X20, 0x1051000
	0x0338C740 LDRB W8, [X20 + 0xC]
	0x0338C744 TBNZ X8, 0x0, 0x338C75C
	0x0338C748 ADRP X0, 0xD69000
	0x0338C74C LDR X0, [X0 + 0x278]
	0x0338C750 BL 0x1C16CF4
	0x0338C754 MOVZ W8, 0x1
	0x0338C758 STRB W8, [X20 + 0xC]
	0x0338C75C LDR X1, [X19 + 0x90]
	0x0338C760 CBNZ X1, 0x338C77C
	0x0338C764 ADRP X8, 0xD69000
	0x0338C768 LDR X8, [X8 + 0x278]
	0x0338C76C LDR X8, [X8]
	0x0338C770 LDR X8, [X8 + 0xB8]
	0x0338C774 LDR X1, [X8]
	0x0338C778 CBZ X1, 0x338C7D0
	0x0338C77C LDR W8, [X1 + 0x10]
	0x0338C780 CBZ W8, 0x338C7D0
	0x0338C784 ADRP X8, 0xD9F000
	0x0338C788 LDR X8, [X8 + 0x180]
	0x0338C78C MOV X2, X31
	0x0338C790 LDR X0, [X8]
	0x0338C794 BL 0x32094D4
	0x0338C798 MOV X20, X0
	0x0338C79C MOV X0, X19
	0x0338C7A0 MOV X1, X31
	0x0338C7A4 BL 0x33B3134
	0x0338C7A8 MOV X19, X0
	0x0338C7AC MOV X0, X31
	0x0338C7B0 BL 0x33C1548
	0x0338C7B4 MOV X1, X0
	0x0338C7B8 MOV X0, X19
	0x0338C7BC MOV X2, X20
	0x0338C7C0 LDP X20, X19, [X31 + 0x10]
	0x0338C7C4 MOV X3, X31
	0x0338C7C8 LDR X30, [X31], #0x20
	0x0338C7CC B 0x32274B8
	0x0338C7D0 MOV X0, X19
	0x0338C7D4 LDP X20, X19, [X31 + 0x10]
	0x0338C7D8 MOV X1, X31
	0x0338C7DC LDR X30, [X31], #0x20
	0x0338C7E0 B 0x33B3134
	0x0338C7E4 STP X30, X19, [X31 - 0x10]!
	0x0338C7E8 MOV X1, X31
	0x0338C7EC MOV X19, X0
	0x0338C7F0 BL 0x33A51F0
	0x0338C7F4 STR X31, [X19 + 0x10]
	0x0338C7F8 STRB W31, [X19 + 0x18]
	0x0338C7FC LDP X30, X19, [X31], #0x10
	0x0338C800 RET
	0x0338C804 STR X30, [X31 - 0x20]!
	0x0338C808 STP X20, X19, [X31 + 0x10]
	0x0338C80C MOV X19, X1
	0x0338C810 MOV X1, X31
	0x0338C814 MOV X20, X0
	0x0338C818 BL 0x33A51F0
	0x0338C81C STR X19, [X20 + 0x10]
	0x0338C820 STRB W31, [X20 + 0x18]
	0x0338C824 LDP X20, X19, [X31 + 0x10]
	0x0338C828 LDR X30, [X31], #0x20
	0x0338C82C RET
	0x0338C830 STP X30, X21, [X31 - 0x20]!
	0x0338C834 STP X20, X19, [X31 + 0x10]
	0x0338C838 MOV X19, X1
	0x0338C83C MOV X1, X31
	0x0338C840 MOV X20, X0
	0x0338C844 AND W21, W2, 0x1
	0x0338C848 BL 0x33A51F0
	0x0338C84C STR X19, [X20 + 0x10]
	0x0338C850 STRB W21, [X20 + 0x18]
	0x0338C854 LDP X20, X19, [X31 + 0x10]
	0x0338C858 LDP X30, X21, [X31], #0x20
	0x0338C85C RET
	0x0338C860 LDR X0, [X0 + 0x10]
	0x0338C864 RET
	0x0338C868 LDRB W0, [X0 + 0x18]
	0x0338C86C RET
	0x0338C870 LDR X0, [X0 + 0x90]
	0x0338C874 RET
	0x0338C878 STR X1, [X0 + 0x90]
	0x0338C87C RET
	0x0338C880 STP X30, X21, [X31 - 0x20]!
	0x0338C884 STP X20, X19, [X31 + 0x10]
	0x0338C888 ADRP X20, 0x1051000
	0x0338C88C ADRP X21, 0xD9F000
	0x0338C890 LDRB W8, [X20 + 0xD]
	0x0338C894 LDR X21, [X21 + 0x188]
	0x0338C898 MOV X19, X0
	0x0338C89C TBNZ X8, 0x0, 0x338C8B4
	0x0338C8A0 ADRP X0, 0xD9F000
	0x0338C8A4 LDR X0, [X0 + 0x188]
	0x0338C8A8 BL 0x1C16CF4
	0x0338C8AC MOVZ W8, 0x1
	0x0338C8B0 STRB W8, [X20 + 0xD]
	0x0338C8B4 LDR X1, [X21]
	0x0338C8B8 MOV X0, X19
	0x0338C8BC BL 0x338C8D8
	0x0338C8C0 MOVZ W8, 0x153B
	0x0338C8C4 MOVK W8, 0x80130000
	0x0338C8C8 STR W8, [X19 + 0x60]
	0x0338C8CC LDP X20, X19, [X31 + 0x10]
	0x0338C8D0 LDP X30, X21, [X31], #0x20
	0x0338C8D4 RET
	0x0338C8D8 STR X30, [X31 - 0x30]!
	0x0338C8DC STP X22, X21, [X31 + 0x10]
	0x0338C8E0 STP X20, X19, [X31 + 0x20]
	0x0338C8E4 ADRP X21, 0x1051000
	0x0338C8E8 ADRP X22, 0xD67000
	0x0338C8EC LDRB W8, [X21 + 0x69]
	0x0338C8F0 LDR X22, [X22 + 0x7D0]
	0x0338C8F4 MOV X20, X1
	0x0338C8F8 MOV X19, X0
	0x0338C8FC TBNZ X8, 0x0, 0x338C914
	0x0338C900 ADRP X0, 0xD67000
	0x0338C904 LDR X0, [X0 + 0x7D0]
	0x0338C908 BL 0x1C16CF4
	0x0338C90C MOVZ W8, 0x1
	0x0338C910 STRB W8, [X21 + 0x69]
	0x0338C914 LDR X0, [X22]
	0x0338C918 LDR W8, [X0 + 0xE0]
	0x0338C91C CBNZ W8, 0x338C924
	0x0338C920 BL 0x1C16DFC
	0x0338C924 MOV X0, X19
	0x0338C928 MOV X1, X20
	0x0338C92C MOV X2, X31
	0x0338C930 BL 0x33B2C70
	0x0338C934 MOVZ W8, 0x1501
	0x0338C938 MOVK W8, 0x80130000
	0x0338C93C STR W8, [X19 + 0x60]
	0x0338C940 LDP X20, X19, [X31 + 0x20]
	0x0338C944 LDP X22, X21, [X31 + 0x10]
	0x0338C948 LDR X30, [X31], #0x30
	0x0338C94C RET
	0x0338C950 STP X30, X19, [X31 - 0x10]!
	0x0338C954 MOV X19, X0
	0x0338C958 BL 0x338C8D8
	0x0338C95C MOVZ W8, 0x153B
	0x0338C960 MOVK W8, 0x80130000
	0x0338C964 STR W8, [X19 + 0x60]
	0x0338C968 LDP X30, X19, [X31], #0x10
	0x0338C96C RET
	0x0338C970 STP X30, X19, [X31 - 0x10]!
	0x0338C974 MOV X19, X0
	0x0338C978 BL 0x338C990
	0x0338C97C MOVZ W8, 0x153B
	0x0338C980 MOVK W8, 0x80130000
	0x0338C984 STR W8, [X19 + 0x60]
	0x0338C988 LDP X30, X19, [X31], #0x10
	0x0338C98C RET
	0x0338C990 STP X30, X23, [X31 - 0x30]!
	0x0338C994 STP X22, X21, [X31 + 0x10]
	0x0338C998 STP X20, X19, [X31 + 0x20]
	0x0338C99C ADRP X22, 0x1051000
	0x0338C9A0 ADRP X23, 0xD67000
	0x0338C9A4 LDRB W8, [X22 + 0x6A]
	0x0338C9A8 LDR X23, [X23 + 0x7D0]
	0x0338C9AC MOV X20, X2
	0x0338C9B0 MOV X21, X1
	0x0338C9B4 MOV X19, X0
	0x0338C9B8 TBNZ X8, 0x0, 0x338C9D0
	0x0338C9BC ADRP X0, 0xD67000
	0x0338C9C0 LDR X0, [X0 + 0x7D0]
	0x0338C9C4 BL 0x1C16CF4
	0x0338C9C8 MOVZ W8, 0x1
	0x0338C9CC STRB W8, [X22 + 0x6A]
	0x0338C9D0 LDR X0, [X23]
	0x0338C9D4 LDR W8, [X0 + 0xE0]
	0x0338C9D8 CBNZ W8, 0x338C9E0
	0x0338C9DC BL 0x1C16DFC
	0x0338C9E0 MOV X0, X19
	0x0338C9E4 MOV X1, X21
	0x0338C9E8 MOV X2, X20
	0x0338C9EC MOV X3, X31
	0x0338C9F0 BL 0x33B2CA0
	0x0338C9F4 MOVZ W8, 0x1501
	0x0338C9F8 MOVK W8, 0x80130000
	0x0338C9FC STR W8, [X19 + 0x60]
	0x0338CA00 LDP X20, X19, [X31 + 0x20]
	0x0338CA04 LDP X22, X21, [X31 + 0x10]
	0x0338CA08 LDP X30, X23, [X31], #0x30
	0x0338CA0C RET
	0x0338CA10 STR X30, [X31 - 0x20]!
	0x0338CA14 STP X20, X19, [X31 + 0x10]
	0x0338CA18 MOV X19, X2
	0x0338CA1C MOV X20, X0
	0x0338CA20 BL 0x338C8D8
	0x0338CA24 MOVZ W8, 0x153B
	0x0338CA28 MOVK W8, 0x80130000
	0x0338CA2C STR W8, [X20 + 0x60]
	0x0338CA30 STR X19, [X20 + 0x90]
	0x0338CA34 LDP X20, X19, [X31 + 0x10]
	0x0338CA38 LDR X30, [X31], #0x20
	0x0338CA3C RET
	0x0338CA40 STR X30, [X31 - 0x20]!
	0x0338CA44 STP X20, X19, [X31 + 0x10]
	0x0338CA48 MOV X19, X3
	0x0338CA4C MOV X20, X0
	0x0338CA50 BL 0x338C990
	0x0338CA54 MOVZ W8, 0x153B
	0x0338CA58 MOVK W8, 0x80130000
	0x0338CA5C STR W8, [X20 + 0x60]
	0x0338CA60 STR X19, [X20 + 0x90]
	0x0338CA64 LDP X20, X19, [X31 + 0x10]
	0x0338CA68 LDR X30, [X31], #0x20
	0x0338CA6C RET
	0x0338CA70 B 0x338CA74
	0x0338CA74 STR X30, [X31 - 0x40]!
	0x0338CA78 STP X24, X23, [X31 + 0x10]
	0x0338CA7C STP X22, X21, [X31 + 0x20]
	0x0338CA80 STP X20, X19, [X31 + 0x30]
	0x0338CA84 ADRP X24, 0x1051000
	0x0338CA88 ADRP X23, 0xD67000
	0x0338CA8C LDRB W8, [X24 + 0x6B]
	0x0338CA90 LDR X23, [X23 + 0x7D0]
	0x0338CA94 MOV X19, X3
	0x0338CA98 MOV X20, X2
	0x0338CA9C MOV X21, X1
	0x0338CAA0 MOV X22, X0
	0x0338CAA4 TBNZ X8, 0x0, 0x338CABC
	0x0338CAA8 ADRP X0, 0xD67000
	0x0338CAAC LDR X0, [X0 + 0x7D0]
	0x0338CAB0 BL 0x1C16CF4
	0x0338CAB4 MOVZ W8, 0x1
	0x0338CAB8 STRB W8, [X24 + 0x6B]
	0x0338CABC LDR X0, [X23]
	0x0338CAC0 LDR W8, [X0 + 0xE0]
	0x0338CAC4 CBNZ W8, 0x338CACC
	0x0338CAC8 BL 0x1C16DFC
	0x0338CACC MOV X0, X22
	0x0338CAD0 MOV X1, X21
	0x0338CAD4 MOV X2, X20
	0x0338CAD8 MOV X3, X19
	0x0338CADC LDP X20, X19, [X31 + 0x30]
	0x0338CAE0 LDP X22, X21, [X31 + 0x20]
	0x0338CAE4 LDP X24, X23, [X31 + 0x10]
	0x0338CAE8 MOV X4, X31
	0x0338CAEC LDR X30, [X31], #0x40
	0x0338CAF0 B 0x33B2CD8
	0x0338CAF4 STP X30, X21, [X31 - 0x20]!
	0x0338CAF8 STP X20, X19, [X31 + 0x10]
	0x0338CAFC ADRP X20, 0x1051000
	0x0338CB00 ADRP X21, 0xD9F000
	0x0338CB04 LDRB W8, [X20 + 0xE]
	0x0338CB08 LDR X21, [X21 + 0x190]
	0x0338CB0C MOV X19, X0
	0x0338CB10 TBNZ X8, 0x0, 0x338CB28
	0x0338CB14 ADRP X0, 0xD9F000
	0x0338CB18 LDR X0, [X0 + 0x190]
	0x0338CB1C BL 0x1C16CF4
	0x0338CB20 MOVZ W8, 0x1
	0x0338CB24 STRB W8, [X20 + 0xE]
	0x0338CB28 LDR X1, [X21]
	0x0338CB2C MOV X0, X19
	0x0338CB30 MOV X2, X31
	0x0338CB34 BL 0x3316338
	0x0338CB38 MOVZ W8, 0x1516
	0x0338CB3C MOVK W8, 0x80130000
	0x0338CB40 STR W8, [X19 + 0x60]
	0x0338CB44 LDP X20, X19, [X31 + 0x10]
	0x0338CB48 LDP X30, X21, [X31], #0x20
	0x0338CB4C RET
	0x0338CB50 STP X30, X19, [X31 - 0x10]!
	0x0338CB54 MOV X2, X31
	0x0338CB58 MOV X19, X0
	0x0338CB5C BL 0x3316338
	0x0338CB60 MOVZ W8, 0x1516
	0x0338CB64 MOVK W8, 0x80130000
	0x0338CB68 STR W8, [X19 + 0x60]
	0x0338CB6C LDP X30, X19, [X31], #0x10
	0x0338CB70 RET
	0x0338CB74 STP X30, X19, [X31 - 0x10]!
	0x0338CB78 MOV X3, X31
	0x0338CB7C MOV X19, X0
	0x0338CB80 BL 0x331635C
	0x0338CB84 MOVZ W8, 0x1516
	0x0338CB88 MOVK W8, 0x80130000
	0x0338CB8C STR W8, [X19 + 0x60]
	0x0338CB90 LDP X30, X19, [X31], #0x10
	0x0338CB94 RET
	0x0338CB98 MOV X4, X31
	0x0338CB9C B 0x3316380
	0x0338CBA0 MOV X1, X31
	0x0338CBA4 B 0x33A51F0
	0x0338CBA8 STR X30, [X31 - 0x30]!
	0x0338CBAC STP X22, X21, [X31 + 0x10]
	0x0338CBB0 STP X20, X19, [X31 + 0x20]
	0x0338CBB4 ADRP X22, 0x1051000
	0x0338CBB8 ADRP X21, 0xD96000
	0x0338CBBC LDRB W8, [X22 + 0xF]
	0x0338CBC0 LDR X21, [X21 + 0x98]
	0x0338CBC4 MOV X20, X1
	0x0338CBC8 MOV X19, X0
	0x0338CBCC TBNZ X8, 0x0, 0x338CBE4
	0x0338CBD0 ADRP X0, 0xD96000
	0x0338CBD4 LDR X0, [X0 + 0x98]
	0x0338CBD8 BL 0x1C16CF4
	0x0338CBDC MOVZ W8, 0x1
	0x0338CBE0 STRB W8, [X22 + 0xF]
	0x0338CBE4 STP X31, X31, [X19 + 0x8]
	0x0338CBE8 STR X20, [X19]
	0x0338CBEC LDR X0, [X21]
	0x0338CBF0 LDR W8, [X0 + 0xE0]
	0x0338CBF4 CBNZ W8, 0x338CC00
	0x0338CBF8 BL 0x1C16DFC
	0x0338CBFC LDR X0, [X21]
	0x0338CC00 LDR X8, [X0 + 0xB8]
	0x0338CC04 LDP X22, X21, [X31 + 0x10]
	0x0338CC08 LDR X8, [X8]
	0x0338CC0C STR X8, [X19 + 0x18]
	0x0338CC10 LDP X20, X19, [X31 + 0x20]
	0x0338CC14 LDR X30, [X31], #0x30
	0x0338CC18 RET
	0x0338CC1C STP X30, X23, [X31 - 0x30]!
	0x0338CC20 STP X22, X21, [X31 + 0x10]
	0x0338CC24 STP X20, X19, [X31 + 0x20]
	0x0338CC28 ADRP X23, 0x1051000
	0x0338CC2C ADRP X22, 0xD96000
	0x0338CC30 LDRB W8, [X23 + 0x10]
	0x0338CC34 LDR X22, [X22 + 0x98]
	0x0338CC38 MOV X20, X2
	0x0338CC3C MOV X21, X1
	0x0338CC40 MOV X19, X0
	0x0338CC44 TBNZ X8, 0x0, 0x338CC5C
	0x0338CC48 ADRP X0, 0xD96000
	0x0338CC4C LDR X0, [X0 + 0x98]
	0x0338CC50 BL 0x1C16CF4
	0x0338CC54 MOVZ W8, 0x1
	0x0338CC58 STRB W8, [X23 + 0x10]
	0x0338CC5C STP X21, X20, [X19]
	0x0338CC60 STR X31, [X19 + 0x10]
	0x0338CC64 LDR X0, [X22]
	0x0338CC68 LDR W8, [X0 + 0xE0]
	0x0338CC6C CBNZ W8, 0x338CC78
	0x0338CC70 BL 0x1C16DFC
	0x0338CC74 LDR X0, [X22]
	0x0338CC78 LDR X8, [X0 + 0xB8]
	0x0338CC7C LDP X22, X21, [X31 + 0x10]
	0x0338CC80 LDR X8, [X8 + 0x8]
	0x0338CC84 STR X8, [X19 + 0x18]
	0x0338CC88 LDP X20, X19, [X31 + 0x20]
	0x0338CC8C LDP X30, X23, [X31], #0x30
	0x0338CC90 RET
	0x0338CC94 STR X30, [X31 - 0x40]!
	0x0338CC98 STP X24, X23, [X31 + 0x10]
	0x0338CC9C STP X22, X21, [X31 + 0x20]
	0x0338CCA0 STP X20, X19, [X31 + 0x30]
	0x0338CCA4 ADRP X24, 0x1051000
	0x0338CCA8 ADRP X23, 0xD96000
	0x0338CCAC LDRB W8, [X24 + 0x11]
	0x0338CCB0 LDR X23, [X23 + 0x98]
	0x0338CCB4 MOV X20, X3
	0x0338CCB8 MOV X21, X2
	0x0338CCBC MOV X22, X1
	0x0338CCC0 MOV X19, X0
	0x0338CCC4 TBNZ X8, 0x0, 0x338CCDC
	0x0338CCC8 ADRP X0, 0xD96000
	0x0338CCCC LDR X0, [X0 + 0x98]
	0x0338CCD0 BL 0x1C16CF4
	0x0338CCD4 MOVZ W8, 0x1
	0x0338CCD8 STRB W8, [X24 + 0x11]
	0x0338CCDC STP X22, X21, [X19]
	0x0338CCE0 STR X20, [X19 + 0x10]
	0x0338CCE4 LDR X0, [X23]
	0x0338CCE8 LDR W8, [X0 + 0xE0]
	0x0338CCEC CBNZ W8, 0x338CCF8
	0x0338CCF0 BL 0x1C16DFC
	0x0338CCF4 LDR X0, [X23]
	0x0338CCF8 LDR X8, [X0 + 0xB8]
	0x0338CCFC LDP X22, X21, [X31 + 0x20]
	0x0338CD00 LDP X24, X23, [X31 + 0x10]
	0x0338CD04 LDR X8, [X8 + 0x10]
	0x0338CD08 STR X8, [X19 + 0x18]
	0x0338CD0C LDP X20, X19, [X31 + 0x30]
	0x0338CD10 LDR X30, [X31], #0x40
	0x0338CD14 RET
	0x0338CD18 STR X30, [X31 - 0x10]!
	0x0338CD1C CBZ X1, 0x338CD74
	0x0338CD20 LDR W8, [X1 + 0x18]
	0x0338CD24 CMP W8, 0x0
	0x0338CD28 B.LE 0x338CD54
	0x0338CD2C LDR X9, [X1 + 0x20]
	0x0338CD30 CMP W8, 0x1
	0x0338CD34 STR X9, [X0]
	0x0338CD38 B.EQ 0x338CD58
	0x0338CD3C LDR X9, [X1 + 0x28]
	0x0338CD40 CMP W8, 0x3
	0x0338CD44 STR X9, [X0 + 0x8]
	0x0338CD48 B.LT 0x338CD6C
	0x0338CD4C LDR X8, [X1 + 0x30]
	0x0338CD50 B 0x338CD60
	0x0338CD54 STR X31, [X0]
	0x0338CD58 MOV X8, X31
	0x0338CD5C STR X31, [X0 + 0x8]
	0x0338CD60 STP X8, X1, [X0 + 0x10]
	0x0338CD64 LDR X30, [X31], #0x10
	0x0338CD68 RET
	0x0338CD6C MOV X8, X31
	0x0338CD70 B 0x338CD60
	0x0338CD74 BL 0x1C16F20
	0x0338CD78 STR X30, [X31 - 0x10]!
	0x0338CD7C LDR X8, [X0 + 0x18]
	0x0338CD80 CBZ X8, 0x338CD90
	0x0338CD84 LDR W0, [X8 + 0x18]
	0x0338CD88 LDR X30, [X31], #0x10
	0x0338CD8C RET
	0x0338CD90 BL 0x1C16F20
	0x0338CD94 STP X30, X21, [X31 - 0x20]!
	0x0338CD98 STP X20, X19, [X31 + 0x10]
	0x0338CD9C ADRP X21, 0x1051000
	0x0338CDA0 LDRB W8, [X21 + 0x12]
	0x0338CDA4 MOV W19, W1
	0x0338CDA8 MOV X20, X0
	0x0338CDAC TBNZ X8, 0x0, 0x338CDC4
	0x0338CDB0 ADRP X0, 0xD96000
	0x0338CDB4 LDR X0, [X0 + 0x98]
	0x0338CDB8 BL 0x1C16CF4
	0x0338CDBC MOVZ W8, 0x1
	0x0338CDC0 STRB W8, [X21 + 0x12]
	0x0338CDC4 CBZ W19, 0x338CDF4
	0x0338CDC8 ADRP X8, 0xD96000
	0x0338CDCC LDR X8, [X8 + 0x98]
	0x0338CDD0 LDR X0, [X8]
	0x0338CDD4 LDR W8, [X0 + 0xE0]
	0x0338CDD8 CBNZ W8, 0x338CDE0
	0x0338CDDC BL 0x1C16DFC
	0x0338CDE0 MOV X0, X20
	0x0338CDE4 MOV W1, W19
	0x0338CDE8 LDP X20, X19, [X31 + 0x10]
	0x0338CDEC LDP X30, X21, [X31], #0x20
	0x0338CDF0 B 0x338CE04
	0x0338CDF4 LDR X0, [X20]
	0x0338CDF8 LDP X20, X19, [X31 + 0x10]
	0x0338CDFC LDP X30, X21, [X31], #0x20
	0x0338CE00 RET
	0x0338CE04 STR X30, [X31 - 0x10]!
	0x0338CE08 CMP W1, 0x2
	0x0338CE0C B.EQ 0x338CE20
	0x0338CE10 CMP W1, 0x1
	0x0338CE14 B.NE 0x338CE28
	0x0338CE18 ADD X8, X0, 0x8
	0x0338CE1C B 0x338CE44
	0x0338CE20 ADD X8, X0, 0x10
	0x0338CE24 B 0x338CE44
	0x0338CE28 LDR X8, [X0 + 0x18]
	0x0338CE2C CBZ X8, 0x338CE50
	0x0338CE30 LDR W9, [X8 + 0x18]
	0x0338CE34 CMP W9, W1
	0x0338CE38 B.LS 0x338CE54
	0x0338CE3C ADD X8, X8, W1, 0x3, SXTW
	0x0338CE40 ADD X8, X8, 0x20
	0x0338CE44 LDR X0, [X8]
	0x0338CE48 LDR X30, [X31], #0x10
	0x0338CE4C RET
	0x0338CE50 BL 0x1C16F20
	0x0338CE54 BL 0x1C16F28
	0x0338CE58 STP X30, X21, [X31 - 0x20]!
	0x0338CE5C STP X20, X19, [X31 + 0x10]
	0x0338CE60 ADRP X21, 0x1051000
	0x0338CE64 ADRP X20, 0xD67000
	0x0338CE68 ADRP X19, 0xD96000
	0x0338CE6C LDRB W8, [X21 + 0x13]
	0x0338CE70 LDR X20, [X20 + 0x9D0]
	0x0338CE74 LDR X19, [X19 + 0x98]
	0x0338CE78 TBNZ X8, 0x0, 0x338CE9C
	0x0338CE7C ADRP X0, 0xD67000
	0x0338CE80 LDR X0, [X0 + 0x9D0]
	0x0338CE84 BL 0x1C16CF4
	0x0338CE88 ADRP X0, 0xD96000
	0x0338CE8C LDR X0, [X0 + 0x98]
	0x0338CE90 BL 0x1C16CF4
	0x0338CE94 MOVZ W8, 0x1
	0x0338CE98 STRB W8, [X21 + 0x13]
	0x0338CE9C LDR X0, [X20]
	0x0338CEA0 MOVZ W1, 0x1
	0x0338CEA4 BL 0x1C16D6C
	0x0338CEA8 LDR X8, [X19]
	0x0338CEAC MOVZ W1, 0x2
	0x0338CEB0 LDR X8, [X8 + 0xB8]
	0x0338CEB4 STR X0, [X8]
	0x0338CEB8 LDR X0, [X20]
	0x0338CEBC BL 0x1C16D6C
	0x0338CEC0 LDR X8, [X19]
	0x0338CEC4 MOVZ W1, 0x3
	0x0338CEC8 LDR X8, [X8 + 0xB8]
	0x0338CECC STR X0, [X8 + 0x8]
	0x0338CED0 LDR X0, [X20]
	0x0338CED4 BL 0x1C16D6C
	0x0338CED8 LDR X8, [X19]
	0x0338CEDC LDP X20, X19, [X31 + 0x10]
	0x0338CEE0 LDR X8, [X8 + 0xB8]
	0x0338CEE4 STR X0, [X8 + 0x10]
	0x0338CEE8 LDP X30, X21, [X31], #0x20
	0x0338CEEC RET
	0x0338CEF0 SUB X31, X31, 0x60
	0x0338CEF4 STP X30, X27, [X31 + 0x10]
	0x0338CEF8 STP X26, X25, [X31 + 0x20]
	0x0338CEFC STP X24, X23, [X31 + 0x30]
	0x0338CF00 STP X22, X21, [X31 + 0x40]
	0x0338CF04 STP X20, X19, [X31 + 0x50]
	0x0338CF08 ADRP X22, 0x1051000
	0x0338CF0C LDRB W8, [X22 + 0x14]
	0x0338CF10 MOV X20, X4
	0x0338CF14 MOV W19, W3
	0x0338CF18 MOV W24, W2
	0x0338CF1C MOV X21, X1
	0x0338CF20 MOV X23, X0
	0x0338CF24 TBNZ X8, 0x0, 0x338CF3C
	0x0338CF28 ADRP X0, 0xD96000
	0x0338CF2C LDR X0, [X0 + 0x28]
	0x0338CF30 BL 0x1C16CF4
	0x0338CF34 MOVZ W8, 0x1
	0x0338CF38 STRB W8, [X22 + 0x14]
	0x0338CF3C ADDS W31, W24, 0x1
	0x0338CF40 MOVZ W8, 0xA
	0x0338CF44 LDR W25, [X20]
	0x0338CF48 CSEL W22, W8, W24, EQ
	0x0338CF4C SUB W8, W22, 0x2
	0x0338CF50 EXTR W8, W8, W8, 0x1
	0x0338CF54 CMP W8, 0x7
	0x0338CF58 STR W25, [X31 + 0xC]
	0x0338CF5C B.HI 0x338D20C
	0x0338CF60 MOVZ W9, 0x1
	0x0338CF64 LSLV W8, W9, W8
	0x0338CF68 MOVZ W9, 0x99
	0x0338CF6C ANDS W31, W8, W9, 0x0
	0x0338CF70 B.EQ 0x338D20C
	0x0338CF74 TBNZ X25, 0x1F, 0x338D0CC
	0x0338CF78 CMP W25, W21
	0x0338CF7C B.GE 0x338D0CC
	0x0338CF80 ANDS W31, W19, 0x3000
	0x0338CF84 B.NE 0x338CFA4
	0x0338CF88 ADD X2, X31, 0xC
	0x0338CF8C MOV X0, X23
	0x0338CF90 MOV X1, X21
	0x0338CF94 BL 0x338D254
	0x0338CF98 LDR W25, [X31 + 0xC]
	0x0338CF9C CMP W25, W21
	0x0338CFA0 B.EQ 0x338D160
	0x0338CFA4 CMP W25, W21
	0x0338CFA8 B.CS 0x338D0C8
	0x0338CFAC LDRH W8, [X23, W25, SXTW]
	0x0338CFB0 CMP W8, 0x2B
	0x0338CFB4 B.EQ 0x338CFE0
	0x0338CFB8 CMP W8, 0x2D
	0x0338CFBC B.NE 0x338CFF0
	0x0338CFC0 CMP W22, 0xA
	0x0338CFC4 B.NE 0x338D194
	0x0338CFC8 TBNZ X19, 0x9, 0x338D1C8
	0x0338CFCC ADD W25, W25, 0x1
	0x0338CFD0 MOVN X27, 0x0
	0x0338CFD4 STR W25, [X31 + 0xC]
	0x0338CFD8 MOVZ W26, 0x1
	0x0338CFDC B 0x338CFF8
	0x0338CFE0 MOV W26, W31
	0x0338CFE4 ADD W25, W25, 0x1
	0x0338CFE8 STR W25, [X31 + 0xC]
	0x0338CFEC B 0x338CFF4
	0x0338CFF0 MOV W26, W31
	0x0338CFF4 MOVZ W27, 0x1
	0x0338CFF8 CMP W24, 0x10
	0x0338CFFC B.EQ 0x338D008
	0x0338D000 ADDS W31, W24, 0x1
	0x0338D004 B.NE 0x338D04C
	0x0338D008 ADD W8, W25, 0x1
	0x0338D00C CMP W8, W21
	0x0338D010 B.GE 0x338D04C
	0x0338D014 CMP W25, W21
	0x0338D018 B.CS 0x338D0C8
	0x0338D01C LDRH W9, [X23, W25, SXTW]
	0x0338D020 CMP W9, 0x30
	0x0338D024 B.NE 0x338D04C
	0x0338D028 CMP W8, W21
	0x0338D02C B.CS 0x338D0C8
	0x0338D030 LDRH W8, [X23, W8, SXTW]
	0x0338D034 ORR W8, W8, 0x20
	0x0338D038 CMP W8, 0x78
	0x0338D03C B.NE 0x338D04C
	0x0338D040 ADD W25, W25, 0x2
	0x0338D044 MOVZ W22, 0x10
	0x0338D048 STR W25, [X31 + 0xC]
	0x0338D04C UBFM W4, W19, 0x9, 0x9
	0x0338D050 ADD X3, X31, 0xC
	0x0338D054 MOV W0, W22
	0x0338D058 MOV X1, X23
	0x0338D05C MOV X2, X21
	0x0338D060 BL 0x338D320
	0x0338D064 LDR W8, [X31 + 0xC]
	0x0338D068 CMP W8, W25
	0x0338D06C B.EQ 0x338D100
	0x0338D070 TBZ X19, 0xC, 0x338D07C
	0x0338D074 CMP W8, W21
	0x0338D078 B.LT 0x338D120
	0x0338D07C STR W8, [X20]
	0x0338D080 MOVZ X8, 0x80000000
	0x0338D084 CMP X0, X8
	0x0338D088 CSET W8, NE
	0x0338D08C TBNZ X19, 0x9, 0x338D0A0
	0x0338D090 CMP W22, 0xA
	0x0338D094 B.NE 0x338D0A0
	0x0338D098 ORR W8, W26, W8, 0x0
	0x0338D09C CBZ W8, 0x338D140
	0x0338D0A0 CMP W22, 0xA
	0x0338D0A4 CSINC X8, X27, X31, EQ
	0x0338D0A8 LDP X20, X19, [X31 + 0x50]
	0x0338D0AC LDP X22, X21, [X31 + 0x40]
	0x0338D0B0 LDP X24, X23, [X31 + 0x30]
	0x0338D0B4 LDP X26, X25, [X31 + 0x20]
	0x0338D0B8 LDP X30, X27, [X31 + 0x10]
	0x0338D0BC MUL X0, X0, X8
	0x0338D0C0 ADD X31, X31, 0x60
	0x0338D0C4 RET
	0x0338D0C8 BL 0x1C16F28
	0x0338D0CC ADRP X0, 0xD6E000
	0x0338D0D0 LDR X0, [X0 + 0x760]
	0x0338D0D4 BL 0x1C16D08
	0x0338D0D8 BL 0x1C16F10
	0x0338D0DC MOV X19, X0
	0x0338D0E0 ADRP X0, 0xD8E000
	0x0338D0E4 LDR X0, [X0 + 0x660]
	0x0338D0E8 BL 0x1C16D08
	0x0338D0EC MOV X1, X0
	0x0338D0F0 MOV X0, X19
	0x0338D0F4 MOV X2, X31
	0x0338D0F8 BL 0x3316014
	0x0338D0FC B 0x338D1F4
	0x0338D100 ADRP X0, 0xD93000
	0x0338D104 LDR X0, [X0 + 0xC08]
	0x0338D108 BL 0x1C16D08
	0x0338D10C BL 0x1C16F10
	0x0338D110 MOV X19, X0
	0x0338D114 ADRP X0, 0xD9E000
	0x0338D118 LDR X0, [X0 + 0x198]
	0x0338D11C B 0x338D17C
	0x0338D120 ADRP X0, 0xD93000
	0x0338D124 LDR X0, [X0 + 0xC08]
	0x0338D128 BL 0x1C16D08
	0x0338D12C BL 0x1C16F10
	0x0338D130 MOV X19, X0
	0x0338D134 ADRP X0, 0xD9D000
	0x0338D138 LDR X0, [X0 + 0xDF0]
	0x0338D13C B 0x338D17C
	0x0338D140 ADRP X0, 0xD66000
	0x0338D144 LDR X0, [X0 + 0x858]
	0x0338D148 BL 0x1C16D08
	0x0338D14C BL 0x1C16F10
	0x0338D150 MOV X19, X0
	0x0338D154 ADRP X0, 0xD9B000
	0x0338D158 LDR X0, [X0 + 0x1F0]
	0x0338D15C B 0x338D1E4
	0x0338D160 ADRP X0, 0xD93000
	0x0338D164 LDR X0, [X0 + 0xC08]
	0x0338D168 BL 0x1C16D08
	0x0338D16C BL 0x1C16F10
	0x0338D170 MOV X19, X0
	0x0338D174 ADRP X0, 0xD9E000
	0x0338D178 LDR X0, [X0 + 0x1A0]
	0x0338D17C BL 0x1C16D08
	0x0338D180 MOV X1, X0
	0x0338D184 MOV X0, X19
	0x0338D188 MOV X2, X31
	0x0338D18C BL 0x33674A0
	0x0338D190 B 0x338D1F4
	0x0338D194 ADRP X0, 0xD6E000
	0x0338D198 LDR X0, [X0 + 0x578]
	0x0338D19C BL 0x1C16D08
	0x0338D1A0 BL 0x1C16F10
	0x0338D1A4 MOV X19, X0
	0x0338D1A8 ADRP X0, 0xD9E000
	0x0338D1AC LDR X0, [X0 + 0x1A8]
	0x0338D1B0 BL 0x1C16D08
	0x0338D1B4 MOV X1, X0
	0x0338D1B8 MOV X0, X19
	0x0338D1BC MOV X2, X31
	0x0338D1C0 BL 0x3314A68
	0x0338D1C4 B 0x338D1F4
	0x0338D1C8 ADRP X0, 0xD66000
	0x0338D1CC LDR X0, [X0 + 0x858]
	0x0338D1D0 BL 0x1C16D08
	0x0338D1D4 BL 0x1C16F10
	0x0338D1D8 MOV X19, X0
	0x0338D1DC ADRP X0, 0xD9E000
	0x0338D1E0 LDR X0, [X0 + 0x1B0]
	0x0338D1E4 BL 0x1C16D08
	0x0338D1E8 MOV X1, X0
	0x0338D1EC MOV X0, X19
	0x0338D1F0 BL 0x338CB50
	0x0338D1F4 ADRP X0, 0xD9E000
	0x0338D1F8 LDR X0, [X0 + 0x1B8]
	0x0338D1FC BL 0x1C16D08
	0x0338D200 MOV X1, X0
	0x0338D204 MOV X0, X19
	0x0338D208 BL 0x1C16DEC
	0x0338D20C ADRP X0, 0xD6E000
	0x0338D210 LDR X0, [X0 + 0x578]
	0x0338D214 BL 0x1C16D08
	0x0338D218 BL 0x1C16F10
	0x0338D21C MOV X19, X0
	0x0338D220 ADRP X0, 0xD9B000
	0x0338D224 LDR X0, [X0 + 0x238]
	0x0338D228 BL 0x1C16D08
	0x0338D22C MOV X20, X0
	0x0338D230 ADRP X0, 0xD94000
	0x0338D234 LDR X0, [X0 + 0x730]
	0x0338D238 BL 0x1C16D08
	0x0338D23C MOV X2, X0
	0x0338D240 MOV X0, X19
	0x0338D244 MOV X1, X20
	0x0338D248 MOV X3, X31
	0x0338D24C BL 0x330E16C
	0x0338D250 B 0x338D1F4
	0x0338D254 STP X30, X25, [X31 - 0x40]!
	0x0338D258 STP X24, X23, [X31 + 0x10]
	0x0338D25C STP X22, X21, [X31 + 0x20]
	0x0338D260 STP X20, X19, [X31 + 0x30]
	0x0338D264 ADRP X22, 0x1050000
	0x0338D268 LDRB W8, [X22 + 0x18]
	0x0338D26C MOV X19, X2
	0x0338D270 MOV X20, X1
	0x0338D274 MOV X21, X0
	0x0338D278 TBNZ X8, 0x0, 0x338D29C
	0x0338D27C ADRP X0, 0xD68000
	0x0338D280 LDR X0, [X0 + 0x170]
	0x0338D284 BL 0x1C16CF4
	0x0338D288 ADRP X0, 0xD95000
	0x0338D28C LDR X0, [X0 + 0x28]
	0x0338D290 BL 0x1C16CF4
	0x0338D294 MOVZ W8, 0x1
	0x0338D298 STRB W8, [X22 + 0x18]
	0x0338D29C LDR W22, [X19]
	0x0338D2A0 CMP W22, W20
	0x0338D2A4 B.GE 0x338D304
	0x0338D2A8 ADRP X25, 0xD68000
	0x0338D2AC LDR X25, [X25 + 0x170]
	0x0338D2B0 MOV W9, W20
	0x0338D2B4 SXTW X8, W22
	0x0338D2B8 SXTW X9, W9
	0x0338D2BC ADD X23, X21, X8, 0x1, LSL
	0x0338D2C0 SUB X24, X9, X8
	0x0338D2C4 CMP W22, W20
	0x0338D2C8 B.CS 0x338D31C
	0x0338D2CC LDR X0, [X25]
	0x0338D2D0 LDRH W21, [X23]
	0x0338D2D4 LDR W8, [X0 + 0xE0]
	0x0338D2D8 CBNZ W8, 0x338D2E0
	0x0338D2DC BL 0x1C16DFC
	0x0338D2E0 MOV W0, W21
	0x0338D2E4 MOV X1, X31
	0x0338D2E8 BL 0x3317FCC
	0x0338D2EC TBZ X0, 0x0, 0x338D304
	0x0338D2F0 ADD W22, W22, 0x1
	0x0338D2F4 SUBS X24, X24, 0x1
	0x0338D2F8 ADD X23, X23, 0x2
	0x0338D2FC B.NE 0x338D2C4
	0x0338D300 MOV W22, W20
	0x0338D304 STR W22, [X19]
	0x0338D308 LDP X20, X19, [X31 + 0x30]
	0x0338D30C LDP X22, X21, [X31 + 0x20]
	0x0338D310 LDP X24, X23, [X31 + 0x10]
	0x0338D314 LDP X30, X25, [X31], #0x40
	0x0338D318 RET
	0x0338D31C BL 0x1C16F28
	0x0338D320 STR X30, [X31 - 0x40]!
	0x0338D324 STP X24, X23, [X31 + 0x10]
	0x0338D328 STP X22, X21, [X31 + 0x20]
	0x0338D32C STP X20, X19, [X31 + 0x30]
	0x0338D330 ADRP X24, 0x1050000
	0x0338D334 LDRB W8, [X24 + 0x19]
	0x0338D338 MOV W23, W4
	0x0338D33C MOV X19, X3
	0x0338D340 MOV X20, X2
	0x0338D344 MOV X22, X1
	0x0338D348 MOV W21, W0
	0x0338D34C TBNZ X8, 0x0, 0x338D364
	0x0338D350 ADRP X0, 0xD95000
	0x0338D354 LDR X0, [X0 + 0x28]
	0x0338D358 BL 0x1C16CF4
	0x0338D35C MOVZ W8, 0x1
	0x0338D360 STRB W8, [X24 + 0x19]
	0x0338D364 CMP W21, 0xA
	0x0338D368 B.NE 0x338D41C
	0x0338D36C TBNZ X23, 0x0, 0x338D41C
	0x0338D370 LDR W8, [X19]
	0x0338D374 CMP W8, W20
	0x0338D378 B.GE 0x338D4EC
	0x0338D37C MOV W10, W20
	0x0338D380 SXTW X11, W8
	0x0338D384 SXTW X12, W10
	0x0338D388 ADD X10, X22, X11, 0x1, LSL

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x1051000
	012 Move X19, 0xD68000
	013 Move W8, [X20+4094]
	014 Move X19, [X19+2760]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {177}
	019 Move X0, 0xD90000
	020 Move X0, [X0+2080]
	021 Call 0x1C17CF4
	022 Move X0, 0xD69000
	023 Move X0, [X0+3672]
	024 Call 0x1C17CF4
	025 Move X0, 0xD9D000
	026 Move X0, [X0+120]
	027 Call 0x1C17CF4
	028 Move X0, 0xD97000
	029 Move X0, [X0+1800]
	030 Call 0x1C17CF4
	031 Move X0, 0xD68000
	032 Move X0, [X0+2760]
	033 Call 0x1C17CF4
	034 Move X0, 0xDA0000
	035 Move X0, [X0]
	036 Call 0x1C17CF4
	037 Move X0, 0xDA0000
	038 Move X0, [X0+8]
	039 Call 0x1C17CF4
	040 Move X0, 0xDA0000
	041 Move X0, [X0+16]
	042 Call 0x1C17CF4
	043 Move X0, 0xDA0000
	044 Move X0, [X0+24]
	045 Call 0x1C17CF4
	046 Move X0, 0xDA0000
	047 Move X0, [X0+32]
	048 Call 0x1C17CF4
	049 Move X0, 0xD70000
	050 Move X0, [X0+1384]
	051 Call 0x1C17CF4
	052 Move X0, 0xDA0000
	053 Move X0, [X0+40]
	054 Call 0x1C17CF4
	055 Move X0, 0xDA0000
	056 Move X0, [X0+48]
	057 Call 0x1C17CF4
	058 Move X0, 0xDA0000
	059 Move X0, [X0+56]
	060 Call 0x1C17CF4
	061 Move X0, 0xDA0000
	062 Move X0, [X0+64]
	063 Call 0x1C17CF4
	064 Move X0, 0xDA0000
	065 Move X0, [X0+72]
	066 Call 0x1C17CF4
	067 Move X0, 0xDA0000
	068 Move X0, [X0+80]
	069 Call 0x1C17CF4
	070 Move X0, 0xDA0000
	071 Move X0, [X0+88]
	072 Call 0x1C17CF4
	073 Move X0, 0xDA0000
	074 Move X0, [X0+96]
	075 Call 0x1C17CF4
	076 Move X0, 0xDA0000
	077 Move X0, [X0+104]
	078 Call 0x1C17CF4
	079 Move X0, 0xDA0000
	080 Move X0, [X0+112]
	081 Call 0x1C17CF4
	082 Move X0, 0xDA0000
	083 Move X0, [X0+120]
	084 Call 0x1C17CF4
	085 Move X0, 0xDA0000
	086 Move X0, [X0+128]
	087 Call 0x1C17CF4
	088 Move X0, 0xDA0000
	089 Move X0, [X0+136]
	090 Call 0x1C17CF4
	091 Move X0, 0xDA0000
	092 Move X0, [X0+144]
	093 Call 0x1C17CF4
	094 Move X0, 0xDA0000
	095 Move X0, [X0+152]
	096 Call 0x1C17CF4
	097 Move X0, 0xDA0000
	098 Move X0, [X0+160]
	099 Call 0x1C17CF4
	100 Move X0, 0xDA0000
	101 Move X0, [X0+168]
	102 Call 0x1C17CF4
	103 Move X0, 0xDA0000
	104 Move X0, [X0+176]
	105 Call 0x1C17CF4
	106 Move X0, 0xDA0000
	107 Move X0, [X0+184]
	108 Call 0x1C17CF4
	109 Move X0, 0xDA0000
	110 Move X0, [X0+192]
	111 Call 0x1C17CF4
	112 Move X0, 0xDA0000
	113 Move X0, [X0+200]
	114 Call 0x1C17CF4
	115 Move X0, 0xDA0000
	116 Move X0, [X0+208]
	117 Call 0x1C17CF4
	118 Move X0, 0xDA0000
	119 Move X0, [X0+216]
	120 Call 0x1C17CF4
	121 Move X0, 0xDA0000
	122 Move X0, [X0+224]
	123 Call 0x1C17CF4
	124 Move X0, 0xDA0000
	125 Move X0, [X0+232]
	126 Call 0x1C17CF4
	127 Move X0, 0xDA0000
	128 Move X0, [X0+240]
	129 Call 0x1C17CF4
	130 Move X0, 0xDA0000
	131 Move X0, [X0+248]
	132 Call 0x1C17CF4
	133 Move X0, 0xDA0000
	134 Move X0, [X0+256]
	135 Call 0x1C17CF4
	136 Move X0, 0xDA0000
	137 Move X0, [X0+264]
	138 Call 0x1C17CF4
	139 Move X0, 0xDA0000
	140 Move X0, [X0+272]
	141 Call 0x1C17CF4
	142 Move X0, 0xDA0000
	143 Move X0, [X0+280]
	144 Call 0x1C17CF4
	145 Move X0, 0xDA0000
	146 Move X0, [X0+288]
	147 Call 0x1C17CF4
	148 Move X0, 0xDA0000
	149 Move X0, [X0+296]
	150 Call 0x1C17CF4
	151 Move X0, 0xDA0000
	152 Move X0, [X0+304]
	153 Call 0x1C17CF4
	154 Move X0, 0xDA0000
	155 Move X0, [X0+312]
	156 Call 0x1C17CF4
	157 Move X0, 0xDA0000
	158 Move X0, [X0+320]
	159 Call 0x1C17CF4
	160 Move X0, 0xDA0000
	161 Move X0, [X0+328]
	162 Call 0x1C17CF4
	163 Move X0, 0xDA0000
	164 Move X0, [X0+336]
	165 Call 0x1C17CF4
	166 Move X0, 0xDA0000
	167 Move X0, [X0+344]
	168 Call 0x1C17CF4
	169 Move X0, 0xDA0000
	170 Move X0, [X0+352]
	171 Call 0x1C17CF4
	172 Move X0, 0xDA0000
	173 Move X0, [X0+360]
	174 Call 0x1C17CF4
	175 Move W8, 1
	176 Move [X20+4094], W8
	177 Move X0, [X19]
	178 Move W1, 4
	179 Call 0x1C17D6C
	180 Compare X0, 0
	181 JumpIfEqual {514}
	182 Move W8, [X0+24]
	183 Compare W8, 0
	184 JumpIfEqual {513}
	185 Move X9, 0xDA0000
	186 Move X9, [X9+352]
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move X9, [X9]
	189 Move [X0+32], X9
	190 Move X9, 0xDA0000
	191 Move X9, [X9+192]
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move X9, [X9]
	194 Move [X0+40], X9
	195 Move X9, 0xDA0000
	196 Move X9, [X9+104]
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move X9, [X9]
	199 Move [X0+48], X9
	200 Move X8, 0xDA0000
	201 Move X8, [X8+320]
	202 Move X20, 0xD9D000
	203 Move W1, 16
	204 Move X8, [X8]
	205 Move X20, [X20+120]
	206 Move [X0+56], X8
	207 Move X8, [X20]
	208 Move X8, [X8+184]
	209 Move [X8], X0
	210 Move X0, [X19]
	211 Call 0x1C17D6C
	212 Compare X0, 0
	213 JumpIfEqual {514}
	214 Move W8, [X0+24]
	215 Compare W8, 0
	216 JumpIfEqual {513}
	217 Move X9, 0xDA0000
	218 Move X9, [X9+296]
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move X9, [X9]
	221 Move [X0+32], X9
	222 Move X9, 0xDA0000
	223 Move X9, [X9+88]
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move X9, [X9]
	226 Move [X0+40], X9
	227 Move X9, 0xDA0000
	228 Move X9, [X9+328]
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move X9, [X9]
	231 Move [X0+48], X9
	232 Move X9, 0xDA0000
	233 Move X9, [X9+184]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move X9, [X9]
	236 Move [X0+56], X9
	237 Move X9, 0xDA0000
	238 Move X9, [X9+96]
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Move X9, [X9]
	241 Move [X0+64], X9
	242 Move X9, 0xDA0000
	243 Move X9, [X9+256]
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Move X9, [X9]
	246 Move [X0+72], X9
	247 Move X9, 0xDA0000
	248 Move X9, [X9+144]
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Move X9, [X9]
	251 Move [X0+80], X9
	252 Move X9, 0xDA0000
	253 Move X9, [X9+168]
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Move X9, [X9]
	256 Move [X0+88], X9
	257 Move X9, 0xDA0000
	258 Move X9, [X9+288]
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Move X9, [X9]
	261 Move [X0+96], X9
	262 Move X9, 0xDA0000
	263 Move X9, [X9+304]
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Move X9, [X9]
	266 Move [X0+104], X9
	267 Move X9, 0xDA0000
	268 Move X9, [X9+336]
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Move X9, [X9]
	271 Move [X0+112], X9
	272 Move X9, 0xDA0000
	273 Move X9, [X9+128]
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Move X9, [X9]
	276 Move [X0+120], X9
	277 Move X9, 0xDA0000
	278 Move X9, [X9+200]
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move X9, [X9]
	281 Move [X0+128], X9
	282 Move X9, 0xDA0000
	283 Move X9, [X9+64]
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Move X9, [X9]
	286 Move [X0+136], X9
	287 Move X9, 0xDA0000
	288 Move X9, [X9+176]
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Move X9, [X9]
	291 Move [X0+144], X9
	292 Move X8, 0xDA0000
	293 Move X8, [X8+312]
	294 Move W1, 4
	295 Move X8, [X8]
	296 Move [X0+152], X8
	297 Move X8, [X20]
	298 Move X8, [X8+184]
	299 Move [X8+8], X0
	300 Move X0, [X19]
	301 Call 0x1C17D6C
	302 Compare X0, 0
	303 JumpIfEqual {514}
	304 Move W8, [X0+24]
	305 Compare W8, 0
	306 JumpIfEqual {513}
	307 Move X9, 0xDA0000
	308 Move X9, [X9+280]
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Move X9, [X9]
	311 Move [X0+32], X9
	312 Move X9, 0xDA0000
	313 Move X9, [X9+112]
	314 NotImplemented "Instruction CMP not yet implemented."
	315 Move X9, [X9]
	316 Move [X0+40], X9
	317 Move X9, 0xDA0000
	318 Move X9, [X9+80]
	319 NotImplemented "Instruction CMP not yet implemented."
	320 Move X9, [X9]
	321 Move [X0+48], X9
	322 Move X8, 0xDA0000
	323 Move X8, [X8+208]
	324 Move W1, 12
	325 Move X8, [X8]
	326 Move [X0+56], X8
	327 Move X8, [X20]
	328 Move X8, [X8+184]
	329 Move [X8+16], X0
	330 Move X0, [X19]
	331 Call 0x1C17D6C
	332 Compare X0, 0
	333 JumpIfEqual {514}
	334 Move W8, [X0+24]
	335 Compare W8, 0
	336 JumpIfEqual {513}
	337 Move X9, 0xDA0000
	338 Move X9, [X9+272]
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Move X9, [X9]
	341 Move [X0+32], X9
	342 Move X9, 0xDA0000
	343 Move X9, [X9+344]
	344 NotImplemented "Instruction CMP not yet implemented."
	345 Move X9, [X9]
	346 Move [X0+40], X9
	347 Move X9, 0xDA0000
	348 Move X9, [X9+120]
	349 NotImplemented "Instruction CMP not yet implemented."
	350 Move X9, [X9]
	351 Move [X0+48], X9
	352 Move X9, 0xDA0000
	353 Move X9, [X9+40]
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Move X9, [X9]
	356 Move [X0+56], X9
	357 Move X9, 0xDA0000
	358 Move X9, [X9+48]
	359 NotImplemented "Instruction CMP not yet implemented."
	360 Move X9, [X9]
	361 Move [X0+64], X9
	362 Move X9, 0xDA0000
	363 Move X9, [X9+264]
	364 NotImplemented "Instruction CMP not yet implemented."
	365 Move X9, [X9]
	366 Move [X0+72], X9
	367 Move X9, 0xDA0000
	368 Move X9, [X9+216]
	369 NotImplemented "Instruction CMP not yet implemented."
	370 Move X9, [X9]
	371 Move [X0+80], X9
	372 Move X9, 0xDA0000
	373 Move X9, [X9+248]
	374 NotImplemented "Instruction CMP not yet implemented."
	375 Move X9, [X9]
	376 Move [X0+88], X9
	377 Move X9, 0xDA0000
	378 Move X9, [X9+232]
	379 NotImplemented "Instruction CMP not yet implemented."
	380 Move X9, [X9]
	381 Move [X0+96], X9
	382 Move X9, 0xDA0000
	383 Move X9, [X9+56]
	384 NotImplemented "Instruction CMP not yet implemented."
	385 Move X9, [X9]
	386 Move [X0+104], X9
	387 Move X9, 0xDA0000
	388 Move X9, [X9+160]
	389 NotImplemented "Instruction CMP not yet implemented."
	390 Move X9, [X9]
	391 Move [X0+112], X9
	392 Move X8, 0xDA0000
	393 Move X8, [X8+136]
	394 Move W1, 5
	395 Move X8, [X8]
	396 Move [X0+120], X8
	397 Move X8, [X20]
	398 Move X8, [X8+184]
	399 Move [X8+24], X0
	400 Move X0, [X19]
	401 Call 0x1C17D6C
	402 Compare X0, 0
	403 JumpIfEqual {514}
	404 Move W8, [X0+24]
	405 Compare W8, 0
	406 JumpIfEqual {513}
	407 Move X9, 0xDA0000
	408 Move X9, [X9+360]
	409 NotImplemented "Instruction CMP not yet implemented."
	410 Move X9, [X9]
	411 Move [X0+32], X9
	412 Move X9, 0xDA0000
	413 Move X9, [X9+72]
	414 NotImplemented "Instruction CMP not yet implemented."
	415 Move X9, [X9]
	416 Move [X0+40], X9
	417 Move X9, 0xDA0000
	418 Move X9, [X9+224]
	419 NotImplemented "Instruction CMP not yet implemented."
	420 Move X9, [X9]
	421 Move [X0+48], X9
	422 Move X9, 0xDA0000
	423 Move X9, [X9+152]
	424 NotImplemented "Instruction CMP not yet implemented."
	425 Move X9, [X9]
	426 Move [X0+56], X9
	427 Move X8, 0xDA0000
	428 Move X8, [X8+240]
	429 Move X9, 0xD69000
	430 Move X19, 0xDA0000
	431 Move X23, 0xD70000
	432 Move X8, [X8]
	433 Move X24, 0xDA0000
	434 Move X25, 0xD97000
	435 Move X26, 0xDA0000
	436 Move [X0+64], X8
	437 Move X8, [X20]
	438 Move X9, [X9+3672]
	439 Move X19, [X19+24]
	440 Move X23, [X23+1384]
	441 Move X8, [X8+184]
	442 Move X24, [X24+32]
	443 Move X25, [X25+1800]
	444 Move X26, [X26+16]
	445 Move [X8+32], X0
	446 Move X0, [X9]
	447 Move X27, 0xDA0000
	448 Move X22, 0xD90000
	449 Move X21, 0xDA0000
	450 Move X27, [X27+8]
	451 Move X22, [X22+2080]
	452 Move X21, [X21]
	453 Move W1, 256
	454 Call 0x1C17D6C
	455 Move X1, [X19]
	456 Move X2, X31
	457 Move X19, X0
	458 Call RuntimeHelpers.InitializeArray, X0, X1
	459 Move X8, [X20]
	460 Move W1, 30
	461 Move X8, [X8+184]
	462 Move [X8+40], X19
	463 Move X0, [X23]
	464 Call 0x1C17D6C
	465 Move X1, [X24]
	466 Move X2, X31
	467 Move X19, X0
	468 Call RuntimeHelpers.InitializeArray, X0, X1
	469 Move X8, [X20]
	470 Move W1, 15
	471 Move X8, [X8+184]
	472 Move [X8+48], X19
	473 Move X0, [X25]
	474 Call 0x1C17D6C
	475 Move X1, [X26]
	476 Move X2, X31
	477 Move X19, X0
	478 Call RuntimeHelpers.InitializeArray, X0, X1
	479 Move X8, [X20]
	480 Move W1, 42
	481 Move X8, [X8+184]
	482 Move [X8+56], X19
	483 Move X0, [X23]
	484 Call 0x1C17D6C
	485 Move X1, [X27]
	486 Move X2, X31
	487 Move X19, X0
	488 Call RuntimeHelpers.InitializeArray, X0, X1
	489 Move X8, [X20]
	490 Move W1, 21
	491 Move X8, [X8+184]
	492 Move [X8+64], X19
	493 Move X0, [X22]
	494 Call 0x1C17D6C
	495 Move X1, [X21]
	496 Move X2, X31
	497 Move X19, X0
	498 Call RuntimeHelpers.InitializeArray, X0, X1
	499 Move X8, [X20]
	500 Move X22, [X31+48]
	501 Move X21, [X31+56]
	502 Move X24, [X31+32]
	503 Move X23, [X31+40]
	504 Move X26, [X31+16]
	505 Move X25, [X31+24]
	506 Move X8, [X8+184]
	507 Move [X8+72], X19
	508 Move X20, [X31+64]
	509 Move X19, [X31+72]
	510 Move X30, [X31+80]
	511 Move X27, [X31+88]
	512 Return 
	513 Call 0x1C17F28
	514 Call 0x1C17F20
	515 Move [X31-16], X30
	516 Compare W2, 0
	517 JumpIfEqual {570}
	518 Move W8, [X0]
	519 NotImplemented "Instruction CMP not yet implemented."
	520 Move [X1], W8
	521 Move W8, [X0]
	522 NotImplemented "Instruction CMP not yet implemented."
	523 Move W8, W8
	524 ShiftRight W8, 8
	525 And W8, W8, 0x7FFFFFFF
	526 Move [X1+1], W8
	527 NotImplemented "Instruction LDRH not yet implemented."
	528 NotImplemented "Instruction CMP not yet implemented."
	529 Move [X1+2], W8
	530 Move W8, [X0+3]
	531 NotImplemented "Instruction CMP not yet implemented."
	532 Move [X1+3], W8
	533 Move W8, [X0+4]
	534 NotImplemented "Instruction CMP not yet implemented."
	535 Move [X1+4], W8
	536 Move W8, [X0+5]
	537 NotImplemented "Instruction CMP not yet implemented."
	538 Move [X1+5], W8
	539 Move W8, [X0+6]
	540 NotImplemented "Instruction CMP not yet implemented."
	541 Move [X1+6], W8
	542 Move W8, [X0+7]
	543 NotImplemented "Instruction CMP not yet implemented."
	544 Move [X1+7], W8
	545 Move W8, [X0+8]
	546 NotImplemented "Instruction CMP not yet implemented."
	547 Move [X1+8], W8
	548 Move W8, [X0+9]
	549 NotImplemented "Instruction CMP not yet implemented."
	550 Move [X1+9], W8
	551 Move W8, [X0+10]
	552 NotImplemented "Instruction CMP not yet implemented."
	553 Move [X1+10], W8
	554 Move W8, [X0+11]
	555 NotImplemented "Instruction CMP not yet implemented."
	556 Move [X1+11], W8
	557 Move W8, [X0+12]
	558 NotImplemented "Instruction CMP not yet implemented."
	559 Move [X1+12], W8
	560 Move W8, [X0+13]
	561 NotImplemented "Instruction CMP not yet implemented."
	562 Move [X1+13], W8
	563 Move W8, [X0+14]
	564 NotImplemented "Instruction CMP not yet implemented."
	565 Move [X1+14], W8
	566 Move W8, [X0+15]
	567 Move [X1+15], W8
	568 Move X30, [X31+16]
	569 Return 
	570 Call 0x1C17F28
	571 Move [X31-32], X30
	572 Move [X31-24], X21
	573 Move [X31+16], X20
	574 Move [X31+24], X19
	575 Move X21, 0x1052000
	576 Move W8, [X21+2]
	577 Move X19, X1
	578 Move W20, W0
	579 Compare W8, 0
	580 JumpIfNotEqual {586}
	581 Move X0, 0xD9D000
	582 Move X0, [X0+120]
	583 Call 0x1C17CF4
	584 Move W8, 1
	585 Move [X21+2], W8
	586 Move W8, 10
	587 Move [X19], W8
	588 Move TEMP, X20
	589 And TEMP, TEMP, -2147483648
	590 Compare TEMP, -2147483648
	591 JumpIfEqual {596}
	592 Move X0, X19
	593 Move W1, W31
	594 Move X2, X31
	595 Call NumberBuffer.set_sign, X0, X1
	596 Move W1, 1
	597 Move X0, X19
	598 Move X2, X31
	599 Call NumberBuffer.set_sign, X0, X1
	600 Subtract W20, W31, W20
	601 Move X0, X19
	602 Move X1, X31
	603 Call NumberBuffer.get_digits, X0
	604 Move X8, 0xD9D000
	605 Move X8, [X8+120]
	606 Move X21, X0
	607 Move X8, [X8]
	608 Move W9, [X8+224]
	609 Compare W9, 0
	610 JumpIfNotEqual {613}
	611 Move X0, X8
	612 Call 0x1C17DFC
	613 Add X8, X21, 20
	614 Compare W20, 0
	615 JumpIfEqual {640}
	616 Move W9, 0xCCCD
	617 Move TEMP, 1
	618 Not TEMP
	619 Move W11, TEMP
	620 NotImplemented "Instruction MOVK not yet implemented."
	621 Move TEMP, 9
	622 Not TEMP
	623 Move W10, TEMP
	624 Move X21, X8
	625 Move W13, W11
	626 NotImplemented "Instruction UMADDL not yet implemented."
	627 Move W12, W20
	628 Move X20, X11
	629 ShiftRight X20, 35
	630 And X20, X20, 0x7FFFFFFF
	631 NotImplemented "Instruction MADD not yet implemented."
	632 Add W11, W11, 48
	633 NotImplemented "Instruction STRH not yet implemented."
	634 Subtract W11, W13, 1
	635 Move TEMP, X13
	636 And TEMP, TEMP, -2147483648
	637 Compare TEMP, -2147483648
	638 JumpIfNotEqual {625}
	639 NotImplemented "Instruction CMP not yet implemented."
	640 Move X21, X8
	641 Subtract X8, X8, X21
	642 NotImplemented "Instruction CMP not yet implemented."
	643 NotImplemented "Instruction CINC not yet implemented."
	644 Move X20, X8
	645 ShiftRight X20, 1
	646 And X20, X20, 0x7FFFFFFF
	647 Move X0, X19
	648 Move X1, X31
	649 Move [X19+4], W20
	650 Call NumberBuffer.get_digits, X0
	651 NotImplemented "Instruction CMP not yet implemented."
	652 NotImplemented "Instruction LDRH not yet implemented."
	653 Subtract W20, W20, 1
	654 NotImplemented "Instruction CMP not yet implemented."
	655 NotImplemented "Instruction STRH not yet implemented."
	656 Move X20, [X31+16]
	657 Move X19, [X31+24]
	658 NotImplemented "Instruction STRH not yet implemented."
	659 Move X30, [X31+32]
	660 Move X21, [X31+40]
	661 Return 
	662 Move [X31-32], X30
	663 Move [X31-24], X21
	664 Move [X31+16], X20
	665 Move [X31+24], X19
	666 Move X21, 0x1052000
	667 Move W8, [X21+3]
	668 Move X19, X1
	669 Move W20, W0
	670 Compare W8, 0
	671 JumpIfNotEqual {677}
	672 Move X0, 0xD9D000
	673 Move X0, [X0+120]
	674 Call 0x1C17CF4
	675 Move W8, 1
	676 Move [X21+3], W8
	677 Move W8, 10
	678 Move X0, X19
	679 Move W1, W31
	680 Move X2, X31
	681 Move [X19], W8
	682 Call NumberBuffer.set_sign, X0, X1
	683 Move X0, X19
	684 Move X1, X31
	685 Call NumberBuffer.get_digits, X0
	686 Move X8, 0xD9D000
	687 Move X8, [X8+120]
	688 Move X21, X0
	689 Move X8, [X8]
	690 Move W9, [X8+224]
	691 Compare W9, 0
	692 JumpIfNotEqual {695}
	693 Move X0, X8
	694 Call 0x1C17DFC
	695 Add X8, X21, 20
	696 Compare W20, 0
	697 JumpIfEqual {722}
	698 Move W9, 0xCCCD
	699 Move TEMP, 1
	700 Not TEMP
	701 Move W11, TEMP
	702 NotImplemented "Instruction MOVK not yet implemented."
	703 Move TEMP, 9
	704 Not TEMP
	705 Move W10, TEMP
	706 Move X21, X8
	707 Move W13, W11
	708 NotImplemented "Instruction UMADDL not yet implemented."
	709 Move W12, W20
	710 Move X20, X11
	711 ShiftRight X20, 35
	712 And X20, X20, 0x7FFFFFFF
	713 NotImplemented "Instruction MADD not yet implemented."
	714 Add W11, W11, 48
	715 NotImplemented "Instruction STRH not yet implemented."
	716 Subtract W11, W13, 1
	717 Move TEMP, X13
	718 And TEMP, TEMP, -2147483648
	719 Compare TEMP, -2147483648
	720 JumpIfNotEqual {707}
	721 NotImplemented "Instruction CMP not yet implemented."
	722 Move X21, X8
	723 Subtract X8, X8, X21
	724 NotImplemented "Instruction CMP not yet implemented."
	725 NotImplemented "Instruction CINC not yet implemented."
	726 Move X20, X8
	727 ShiftRight X20, 1
	728 And X20, X20, 0x7FFFFFFF
	729 Move X0, X19
	730 Move X1, X31
	731 Move [X19+4], W20
	732 Call NumberBuffer.get_digits, X0
	733 NotImplemented "Instruction CMP not yet implemented."
	734 NotImplemented "Instruction LDRH not yet implemented."
	735 Subtract W20, W20, 1
	736 NotImplemented "Instruction CMP not yet implemented."
	737 NotImplemented "Instruction STRH not yet implemented."
	738 Move X20, [X31+16]
	739 Move X19, [X31+24]
	740 NotImplemented "Instruction STRH not yet implemented."
	741 Move X30, [X31+32]
	742 Move X21, [X31+40]
	743 Return 
	744 Move [X31-64], X30
	745 Move [X31+16], X24
	746 Move [X31+24], X23
	747 Move [X31+32], X22
	748 Move [X31+40], X21
	749 Move [X31+48], X20
	750 Move [X31+56], X19
	751 Move X8, [X3+56]
	752 Move X21, X3
	753 Move W20, W2
	754 Move X19, X1
	755 Move X22, X0
	756 Compare X8, 0
	757 JumpIfNotEqual {773}
	758 Move X0, 0xD8F000
	759 Move X0, [X0+3432]
	760 Call 0x1C17CF4
	761 Move X0, 0xD8E000
	762 Move X0, [X0+3440]
	763 Call 0x1C17CF4
	764 Move X0, 0xD67000
	765 Move X0, [X0+1728]
	766 Call 0x1C17CF4
	767 Move X8, [X21+56]
	768 Compare X8, 0
	769 JumpIfNotEqual {773}
	770 Move X0, X21
	771 Call 0x1C5D6E0
	772 Move X8, [X21+56]
	773 Move X24, 0xD67000
	774 Move X24, [X24+1728]
	775 Move X23, [X8]
	776 Move X0, [X24]
	777 Move W9, [X0+224]
	778 Compare W9, 0
	779 JumpIfNotEqual {781}
	780 Call 0x1C17DFC
	781 Move X0, X23
	782 Move X1, X31
	783 Call Type.GetTypeFromHandle, X0
	784 Move X8, 0xD8E000
	785 Move X8, [X8+3432]
	786 Move X23, X0
	787 Move X1, X31
	788 Move X8, [X8]
	789 Move X0, X8
	790 Call Type.GetTypeFromHandle, X0
	791 Move X1, X0
	792 Move X0, X23
	793 Move X2, X31
	794 Call Type.op_Equality, X0, X1
	795 Move TEMP, X0
	796 And TEMP, TEMP, 1
	797 Compare TEMP, 1
	798 JumpIfNotEqual {816}
	799 Move X8, [X21+56]
	800 Move X0, X22
	801 Move X1, X19
	802 Move X2, [X8+16]
	803 Call MemoryMarshal.GetReference, X0
	804 Move W1, W20
	805 Move W2, W19
	806 Move X20, [X31+48]
	807 Move X19, [X31+56]
	808 Move X22, [X31+32]
	809 Move X21, [X31+40]
	810 Move X24, [X31+16]
	811 Move X23, [X31+24]
	812 Move X3, X31
	813 Move X30, [X31+64]
	814 Call SpanHelpers.IndexOf, X0, X1, X2
	815 Return 
	816 Move X0, [X24]
	817 Move X8, [X21+56]
	818 Move W9, [X0+224]
	819 Move X23, [X8]
	820 Compare W9, 0
	821 JumpIfNotEqual {823}
	822 Call 0x1C17DFC
	823 Move X0, X23
	824 Move X1, X31
	825 Call Type.GetTypeFromHandle, X0
	826 Move X8, 0xD8E000
	827 Move X8, [X8+3440]
	828 Move X23, X0
	829 Move X1, X31
	830 Move X8, [X8]
	831 Move X0, X8
	832 Call Type.GetTypeFromHandle, X0
	833 Move X1, X0
	834 Move X0, X23
	835 Move X2, X31
	836 Call Type.op_Equality, X0, X1
	837 Move X8, [X21+56]
	838 Move W23, W0
	839 Move X0, X22
	840 Move X1, X19
	841 Move X2, [X8+16]
	842 Call MemoryMarshal.GetReference, X0
	843 Move TEMP, X23
	844 And TEMP, TEMP, 1
	845 Compare TEMP, 1
	846 JumpIfNotEqual {859}
	847 Move W1, W20
	848 Move W2, W19
	849 Move X20, [X31+48]
	850 Move X19, [X31+56]
	851 Move X22, [X31+32]
	852 Move X21, [X31+40]
	853 Move X24, [X31+16]
	854 Move X23, [X31+24]
	855 Move X3, X31
	856 Move X30, [X31+64]
	857 Call SpanHelpers.IndexOf, X0, X1, X2
	858 Return 
	859 Move X8, [X21+56]
	860 Move W1, W20
	861 Move W2, W19
	862 Move X20, [X31+48]
	863 Move X19, [X31+56]
	864 Move X3, [X8+56]
	865 Move X22, [X31+32]
	866 Move X21, [X31+40]
	867 Move X24, [X31+16]
	868 Move X23, [X31+24]
	869 Move X30, [X31+64]
	870 Call SpanHelpers.IndexOf, X0, X1, X2
	871 Return 
	872 Subtract X31, X31, 64
	873 Move [X31+16], X30
	874 Move [X31+24], X23
	875 Move [X31+32], X22
	876 Move [X31+40], X21
	877 Move [X31+48], X20
	878 Move [X31+56], X19
	879 Move X8, [X4+56]
	880 Move X20, X4
	881 Move X19, X3
	882 Move X21, X2
	883 Move X22, X1
	884 Move X23, X0
	885 Compare X8, 0
	886 JumpIfNotEqual {890}
	887 Move X0, X20
	888 Call 0x1C5D6E0
	889 Move X8, [X20+56]
	890 Move [X31+8], X31
	891 Move X1, [X8+32]
	892 Add X0, X31, 8
	893 Call 0x1F97FD0
	894 NotImplemented "Instruction CMP not yet implemented."
	895 Move TEMP, X0
	896 And TEMP, TEMP, 1
	897 Compare TEMP, 1
	898 Invalid "Jump target not found in method."
	899 Move X8, [X20+56]
	900 Move X0, X23
	901 Move X1, X22
	902 Move X2, [X8+40]
	903 Call MemoryMarshal.GetReference, X0
	904 Move X8, [X20+56]
	905 Move X1, X19
	906 Move X2, [X8+40]
	907 Subtract W8, W22, W19
	908 Move X8, X8
	909 ShiftRight X8, 32
	910 And X8, X8, 0x7FFFFFFF
	911 Add X20, X0, X8
	912 Move X0, X21
	913 Call MemoryMarshal.GetReference, X0
	914 Move X8, [X31+8]
	915 Move X9, W19
	916 Move X1, X0
	917 Move X0, X20
	918 Multiply X2, X8, X9
	919 Move X3, X31
	920 Call SpanHelpers.SequenceEqual, X0, X1, X2
	921 Move W0, W31
	922 Move X8, [X20+56]
	923 Move X0, X23
	924 Move X1, X22
	925 Move X2, [X8+40]
	926 Call MemoryMarshal.GetReference, X0
	927 Move X8, [X20+56]
	928 Move X1, X19
	929 Move X2, [X8+40]
	930 Subtract W8, W22, W19
	931 Move X8, X8
	932 ShiftRight X8, 32
	933 And X8, X8, 0x7FFFFFFF
	934 Add X22, X0, X8
	935 Move X0, X21
	936 Call MemoryMarshal.GetReference, X0
	937 Move X8, [X20+56]
	938 Move X1, X0
	939 Move X0, X22
	940 Move W2, W19
	941 Move X3, [X8+64]
	942 Call 0x22596B8, X0, X1, X2
	943 Move X20, [X31+48]
	944 Move X19, [X31+56]
	945 Move X22, [X31+32]
	946 Move X21, [X31+40]
	947 Move X30, [X31+16]
	948 Move X23, [X31+24]
	949 And W0, W0, 1
	950 Add X31, X31, 64
	951 Return 
	952 Subtract X31, X31, 64
	953 Move [X31+16], X30
	954 Move [X31+24], X23
	955 Move [X31+32], X22
	956 Move [X31+40], X21
	957 Move [X31+48], X20
	958 Move [X31+56], X19
	959 Move X8, [X4+56]
	960 Move X20, X4
	961 Move X19, X3
	962 Move X21, X2
	963 Move X22, X1
	964 Move X23, X0
	965 Compare X8, 0
	966 JumpIfNotEqual {970}
	967 Move X0, X20
	968 Call 0x1C5D6E0
	969 Move X8, [X20+56]
	970 Move [X31+8], X31
	971 Move X1, [X8+32]
	972 Add X0, X31, 8
	973 Call 0x1F97FD0
	974 Move X8, [X20+56]
	975 NotImplemented "Instruction CMP not yet implemented."
	976 Move TEMP, X0
	977 And TEMP, TEMP, 1
	978 Compare TEMP, 1
	979 Invalid "Jump target not found in method."
	980 Move X2, [X8+40]
	981 Move X0, X23
	982 Move X1, X22
	983 Call MemoryMarshal.GetReference, X0
	984 Move X8, [X20+56]
	985 Move X20, X0
	986 Move X0, X21
	987 Move X1, X19
	988 Move X2, [X8+40]
	989 Call MemoryMarshal.GetReference, X0
	990 Move X8, [X31+8]
	991 Move X9, W19
	992 Move X1, X0
	993 Move X0, X20
	994 Multiply X2, X8, X9
	995 Move X3, X31
	996 Call SpanHelpers.SequenceEqual, X0, X1, X2
	997 Move W0, W31
	998 Move X2, [X8+40]
	999 Move X0, X23
	1000 Move X1, X22
	1001 Call MemoryMarshal.GetReference, X0
	1002 Move X8, [X20+56]
	1003 Move X22, X0
	1004 Move X0, X21
	1005 Move X1, X19
	1006 Move X2, [X8+40]
	1007 Call MemoryMarshal.GetReference, X0
	1008 Move X8, [X20+56]
	1009 Move X1, X0
	1010 Move X0, X22
	1011 Move W2, W19
	1012 Move X3, [X8+56]
	1013 Call 0x22596B8, X0, X1, X2
	1014 Move X20, [X31+48]
	1015 Move X19, [X31+56]
	1016 Move X22, [X31+32]
	1017 Move X21, [X31+40]
	1018 Move X30, [X31+16]
	1019 Move X23, [X31+24]
	1020 And W0, W0, 1
	1021 Add X31, X31, 64
	1022 Return 

