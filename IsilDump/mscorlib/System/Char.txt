Type: System.Char

Method: System.Boolean IsLatin1(System.Char ch)

Disassembly:
	0x0331B588 LDR X0, [X0 + 0xC08]
	0x0331B58C BL 0x1C16D08
	0x0331B590 BL 0x1C16F10
	0x0331B594 MOV X1, X19

ISIL:
	001 And W8, W0, 0xFFFF
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean IsAscii(System.Char ch)

Disassembly:
	0x0331B598 MOV X2, X31
	0x0331B59C MOV X20, X0
	0x0331B5A0 BL 0x337B498
	0x0331B5A4 ADRP X0, 0xE0D000

ISIL:
	001 And W8, W0, 0xFFFF
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Globalization.UnicodeCategory GetLatin1UnicodeCategory(System.Char ch)

Disassembly:
	0x0331B5A8 LDR X0, [X0 + 0xE0]
	0x0331B5AC BL 0x1C16D08
	0x0331B5B0 MOV X1, X0
	0x0331B5B4 MOV X0, X20
	0x0331B5B8 BL 0x1C16DEC
	0x0331B5BC STR X30, [X31 - 0x40]!
	0x0331B5C0 STP X24, X23, [X31 + 0x10]
	0x0331B5C4 STP X22, X21, [X31 + 0x20]
	0x0331B5C8 STP X20, X19, [X31 + 0x30]
	0x0331B5CC ADRP X24, 0x10C1000
	0x0331B5D0 ADRP X23, 0xDDA000
	0x0331B5D4 ADRP X22, 0xDE1000
	0x0331B5D8 LDRB W8, [X24 + 0xBDF]
	0x0331B5DC LDR X23, [X23 + 0x170]
	0x0331B5E0 LDR X22, [X22 + 0x9E8]
	0x0331B5E4 MOV X19, X2
	0x0331B5E8 MOV X20, X1
	0x0331B5EC MOV X21, X0
	0x0331B5F0 TBNZ X8, 0x0, 0x331B614
	0x0331B5F4 ADRP X0, 0xDDA000
	0x0331B5F8 LDR X0, [X0 + 0x170]
	0x0331B5FC BL 0x1C16CF4
	0x0331B600 ADRP X0, 0xDE1000
	0x0331B604 LDR X0, [X0 + 0x9E8]
	0x0331B608 BL 0x1C16CF4
	0x0331B60C MOVZ W8, 0x1
	0x0331B610 STRB W8, [X24 + 0xBDF]
	0x0331B614 LDRH W8, [X21]
	0x0331B618 LDR X0, [X23]
	0x0331B61C ADD X1, X31, 0xC
	0x0331B620 STRH W8, [X31 + 0xC]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C2000
	006 Move X20, 0xDDB000
	007 Move W8, [X21+3015]
	008 Move X20, [X20+368]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDDB000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3015], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X8, [X8]
	027 Compare X8, 0
	028 JumpIfEqual {38}
	029 Move W9, [X8+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Add X8, X8, W19
	032 Move W0, [X8+32]
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0
	038 Call 0x1C17F20
	039 Call 0x1C17F28

Method: System.Int32 GetHashCode()

Disassembly:
	0x0331B624 BL 0x1C16E04
	0x0331B628 LDR X8, [X22]
	0x0331B62C MOV X21, X0

ISIL:
	001 NotImplemented "Instruction LDRH not yet implemented."
	002 NotImplemented "Instruction BFM not yet implemented."
	003 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x0331B630 LDR W9, [X8 + 0xE0]
	0x0331B634 CBNZ W9, 0x331B640
	0x0331B638 MOV X0, X8
	0x0331B63C BL 0x1C16DFC
	0x0331B640 MOV X0, X21
	0x0331B644 MOV X1, X20
	0x0331B648 MOV X2, X19
	0x0331B64C BL 0x3318718
	0x0331B650 LDP X20, X19, [X31 + 0x30]
	0x0331B654 LDP X22, X21, [X31 + 0x20]
	0x0331B658 LDP X24, X23, [X31 + 0x10]
	0x0331B65C LDR X30, [X31], #0x40
	0x0331B660 RET
	0x0331B664 STP X30, X21, [X31 - 0x20]!
	0x0331B668 STP X20, X19, [X31 + 0x10]
	0x0331B66C ADRP X21, 0x10C1000
	0x0331B670 ADRP X20, 0xDDA000
	0x0331B674 LDRB W8, [X21 + 0xBE0]
	0x0331B678 LDR X20, [X20 + 0x170]
	0x0331B67C MOV W19, W0
	0x0331B680 TBNZ X8, 0x0, 0x331B698
	0x0331B684 ADRP X0, 0xDDA000
	0x0331B688 LDR X0, [X0 + 0x170]
	0x0331B68C BL 0x1C16CF4
	0x0331B690 MOVZ W8, 0x1
	0x0331B694 STRB W8, [X21 + 0xBE0]
	0x0331B698 LDR X0, [X20]
	0x0331B69C LDR W8, [X0 + 0xE0]
	0x0331B6A0 CBNZ W8, 0x331B6A8
	0x0331B6A4 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C2000
	006 Move W8, [X21+3016]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xDDB000
	014 Move X0, [X0+368]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3016], W8
	018 Compare X19, 0
	019 JumpIfEqual {25}
	020 Move X8, 0xDDB000
	021 Move X8, [X8+368]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X0, X19
	028 Call 0x1C17E08
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0

Method: System.Boolean Equals(System.Char obj)

Disassembly:
	0x0331B6A8 AND W8, W19, 0xFFFF
	0x0331B6AC CMP W8, 0xFF
	0x0331B6B0 B.HI 0x331B6D0
	0x0331B6B4 LDR X0, [X20]

ISIL:
	001 NotImplemented "Instruction LDRH not yet implemented."
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Int32 CompareTo(System.Object value)

Disassembly:
	0x0331B6B8 LDR W8, [X0 + 0xE0]
	0x0331B6BC CBNZ W8, 0x331B6C4
	0x0331B6C0 BL 0x1C16DFC
	0x0331B6C4 MOV W0, W19
	0x0331B6C8 BL 0x331A5A8
	0x0331B6CC B 0x331B6DC
	0x0331B6D0 MOV W0, W19
	0x0331B6D4 MOV X1, X31
	0x0331B6D8 BL 0x330331C
	0x0331B6DC LDP X20, X19, [X31 + 0x10]
	0x0331B6E0 CMP W0, 0xE
	0x0331B6E4 CSET W0, EQ
	0x0331B6E8 LDP X30, X21, [X31], #0x20
	0x0331B6EC RET
	0x0331B6F0 STR X30, [X31 - 0x30]!
	0x0331B6F4 STP X22, X21, [X31 + 0x10]
	0x0331B6F8 STP X20, X19, [X31 + 0x20]
	0x0331B6FC ADRP X21, 0x10C1000
	0x0331B700 LDRB W8, [X21 + 0xBE1]
	0x0331B704 MOV W19, W1
	0x0331B708 MOV X20, X0
	0x0331B70C TBNZ X8, 0x0, 0x331B724
	0x0331B710 ADRP X0, 0xDDA000
	0x0331B714 LDR X0, [X0 + 0x170]
	0x0331B718 BL 0x1C16CF4
	0x0331B71C MOVZ W8, 0x1
	0x0331B720 STRB W8, [X21 + 0xBE1]
	0x0331B724 CBZ X20, 0x331B7F0
	0x0331B728 LDR W8, [X20 + 0x10]
	0x0331B72C CMP W8, W19
	0x0331B730 B.LS 0x331B820
	0x0331B734 ADRP X22, 0xDDA000
	0x0331B738 LDR X22, [X22 + 0x170]
	0x0331B73C MOV X0, X20
	0x0331B740 MOV W1, W19
	0x0331B744 MOV X2, X31
	0x0331B748 BL 0x3222A1C
	0x0331B74C LDR X8, [X22]
	0x0331B750 MOV W21, W0
	0x0331B754 LDR W9, [X8 + 0xE0]
	0x0331B758 CBNZ W9, 0x331B764
	0x0331B75C MOV X0, X8
	0x0331B760 BL 0x1C16DFC
	0x0331B764 AND W8, W21, 0xFFFF
	0x0331B768 CMP W8, 0xFF
	0x0331B76C B.HI 0x331B79C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C2000
	006 Move W8, [X21+3017]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xDDB000
	014 Move X0, [X0+368]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3017], W8
	018 Compare X19, 0
	019 JumpIfEqual {30}
	020 Move X8, 0xDDB000
	021 Move X8, [X8+368]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move X0, X19
	027 Call 0x1C17E08
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 Subtract W0, W20, W8
	030 Move W0, 1
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0
	036 Move X0, 0xDE1000
	037 Move X0, [X0+1400]
	038 Call 0x1C17D08
	039 Call 0x1C17F10
	040 Move X19, X0
	041 Move X0, 0xE0E000
	042 Move X0, [X0+152]
	043 Call 0x1C17D08
	044 Move X1, X0
	045 Move X0, X19
	046 Call ArgumentException..ctor, X0, X1
	047 Move X0, 0xE0E000
	048 Move X0, [X0+160]
	049 Call 0x1C17D08
	050 Move X1, X0
	051 Move X0, X19
	052 Call 0x1C17DEC

Method: System.Int32 CompareTo(System.Char value)

Disassembly:
	0x0331B770 LDR X0, [X22]
	0x0331B774 LDR W8, [X0 + 0xE0]
	0x0331B778 CBNZ W8, 0x331B780

ISIL:
	001 NotImplemented "Instruction LDRH not yet implemented."
	002 Subtract W0, W8, W1
	003 Return X0

Method: System.String ToString()

Disassembly:
	0x0330B76C STR X8, [X31 + 0x30]
	0x0330B770 STR V1, [X31]
	0x0330B774 STR X9, [X31 + 0x10]
	0x0330B778 BL 0x330B420
	0x0330B77C STR X0, [X19]
	0x0330B780 LDP X20, X19, [X31 + 0xB0]
	0x0330B784 LDP X22, X21, [X31 + 0xA0]
	0x0330B788 LDP X24, X23, [X31 + 0x90]
	0x0330B78C LDR X30, [X31 + 0x80]
	0x0330B790 ADD X31, X31, 0xC0
	0x0330B794 RET
	0x0330B798 BL 0x1C16F20
	0x0330B79C STP X30, X23, [X31 - 0x30]!
	0x0330B7A0 STP X22, X21, [X31 + 0x10]
	0x0330B7A4 STP X20, X19, [X31 + 0x20]
	0x0330B7A8 MOV W19, W2
	0x0330B7AC MOVZ W2, 0x1
	0x0330B7B0 MOV W3, W19
	0x0330B7B4 MOV W4, W31
	0x0330B7B8 MOV W20, W1
	0x0330B7BC MOV X21, X0
	0x0330B7C0 MOV X22, X8
	0x0330B7C4 STP X31, X31, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10D2000
	006 Move X20, 0xDEB000
	007 Move W8, [X21+3018]
	008 Move X20, [X20+368]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDEB000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3018], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call String.CreateFromChar, X0
	032 Return X0

Method: System.String ToString(System.IFormatProvider provider)

Disassembly:
	0x0331B784 BL 0x331A5A8
	0x0331B788 CMP W0, 0x9
	0x0331B78C B.CS 0x331B7DC
	0x0331B790 MOVZ W8, 0x11F
	0x0331B794 LSRV W8, W8, W0
	0x0331B798 B 0x331B7D4
	0x0331B79C MOV X0, X20
	0x0331B7A0 MOV W1, W19
	0x0331B7A4 MOV X2, X31
	0x0331B7A8 BL 0x3303350
	0x0331B7AC LDR X8, [X22]
	0x0331B7B0 MOV W19, W0
	0x0331B7B4 LDR W9, [X8 + 0xE0]
	0x0331B7B8 CBNZ W9, 0x331B7C4
	0x0331B7BC MOV X0, X8
	0x0331B7C0 BL 0x1C16DFC
	0x0331B7C4 CMP W19, 0x9
	0x0331B7C8 B.CS 0x331B7DC
	0x0331B7CC MOVZ W8, 0x11F
	0x0331B7D0 LSRV W8, W8, W19
	0x0331B7D4 AND W0, W8, 0x1
	0x0331B7D8 B 0x331B7E0
	0x0331B7DC MOV W0, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C2000
	006 Move X20, 0xDDB000
	007 Move W8, [X21+3019]
	008 Move X20, [X20+368]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDDB000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3019], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call String.CreateFromChar, X0
	032 Return X0

Method: System.String ToString(System.Char c)

Disassembly:
	0x0331B77C BL 0x1C16DFC
	0x0331B780 MOV W0, W21

ISIL:
	001 Move X1, X31
	002 Call String.CreateFromChar, X0
	003 Return X0

Method: System.Char Parse(System.String s)

Disassembly:
	0x0331B7E0 LDP X20, X19, [X31 + 0x20]
	0x0331B7E4 LDP X22, X21, [X31 + 0x10]
	0x0331B7E8 LDR X30, [X31], #0x30
	0x0331B7EC RET
	0x0331B7F0 ADRP X0, 0xDDD000
	0x0331B7F4 LDR X0, [X0 + 0x528]
	0x0331B7F8 BL 0x1C16D08
	0x0331B7FC BL 0x1C16F10
	0x0331B800 MOV X19, X0
	0x0331B804 ADRP X0, 0xE01000
	0x0331B808 LDR X0, [X0 + 0xCC0]
	0x0331B80C BL 0x1C16D08
	0x0331B810 MOV X1, X0
	0x0331B814 MOV X0, X19
	0x0331B818 BL 0x330E100
	0x0331B81C B 0x331B84C
	0x0331B820 ADRP X0, 0xDE0000
	0x0331B824 LDR X0, [X0 + 0x760]
	0x0331B828 BL 0x1C16D08
	0x0331B82C BL 0x1C16F10
	0x0331B830 MOV X19, X0
	0x0331B834 ADRP X0, 0xDE3000
	0x0331B838 LDR X0, [X0 + 0x130]
	0x0331B83C BL 0x1C16D08
	0x0331B840 MOV X1, X0
	0x0331B844 MOV X0, X19
	0x0331B848 BL 0x3316014
	0x0331B84C ADRP X0, 0xE0D000
	0x0331B850 LDR X0, [X0 + 0xE8]
	0x0331B854 BL 0x1C16D08
	0x0331B858 MOV X1, X0
	0x0331B85C MOV X0, X19
	0x0331B860 BL 0x1C16DEC
	0x0331B864 SUB W8, W0, 0x8
	0x0331B868 CMP W8, 0x3
	0x0331B86C CSET W0, CC
	0x0331B870 RET
	0x0331B874 STP X30, X21, [X31 - 0x20]!
	0x0331B878 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {13}
	005 Move W8, [X0+16]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W1, W31
	008 Move X2, X31
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call String.get_Chars, X0, X1
	012 Return X0
	013 Move X0, 0xDDE000
	014 Move X0, [X0+1320]
	015 Call 0x1C17D08
	016 Call 0x1C17F10
	017 Move X19, X0
	018 Move X0, 0xE02000
	019 Move X0, [X0+3264]
	020 Call 0x1C17D08
	021 Move X1, X0
	022 Move X0, X19
	023 Call ArgumentNullException..ctor, X0, X1
	024 Move X0, 0xE06000
	025 Move X0, [X0+3080]
	026 Call 0x1C17D08
	027 Call 0x1C17F10
	028 Move X19, X0
	029 Move X0, 0xE0E000
	030 Move X0, [X0+168]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X19
	034 Move X2, X31
	035 Call FormatException..ctor, X0, X1
	036 Move X0, 0xE0E000
	037 Move X0, [X0+176]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X19
	041 Call 0x1C17DEC

Method: System.Boolean IsDigit(System.Char c)

Disassembly:
	0x033151B4 BL 0x1C16D08
	0x033151B8 MOV X1, X0
	0x033151BC MOV X0, X19
	0x033151C0 BL 0x1C16DEC
	0x033151C4 STP X30, X23, [X31 - 0x30]!
	0x033151C8 STP X22, X21, [X31 + 0x10]
	0x033151CC STP X20, X19, [X31 + 0x20]
	0x033151D0 ADRP X23, 0x10C7000
	0x033151D4 LDRB W8, [X23 + 0xB74]
	0x033151D8 MOV X21, X3
	0x033151DC MOV X22, X2
	0x033151E0 MOV X19, X1
	0x033151E4 MOV X20, X0
	0x033151E8 TBNZ X8, 0x0, 0x331523C
	0x033151EC ADRP X0, 0xE10000
	0x033151F0 LDR X0, [X0 + 0xE70]
	0x033151F4 BL 0x1C16CF4
	0x033151F8 ADRP X0, 0xE10000
	0x033151FC LDR X0, [X0 + 0x8C8]
	0x03315200 BL 0x1C16CF4
	0x03315204 ADRP X0, 0xE12000
	0x03315208 LDR X0, [X0 + 0xEE0]
	0x0331520C BL 0x1C16CF4
	0x03315210 ADRP X0, 0xE12000
	0x03315214 LDR X0, [X0 + 0xEE8]
	0x03315218 BL 0x1C16CF4
	0x0331521C ADRP X0, 0xDDE000
	0x03315220 LDR X0, [X0 + 0x6C0]
	0x03315224 BL 0x1C16CF4
	0x03315228 ADRP X0, 0xE12000
	0x0331522C LDR X0, [X0 + 0xEC8]
	0x03315230 BL 0x1C16CF4
	0x03315234 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x10C8000
	006 Move X21, 0xDE1000
	007 Move W8, [X20+3020]
	008 Move X21, [X21+368]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDE1000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3020], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 And W8, W19, 0xFFFF
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Subtract W8, W19, 48
	027 And W8, W8, 0xFFFF
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSET not yet implemented."
	030 Move W0, W19
	031 Move X1, X31
	032 Call CharUnicodeInfo.GetUnicodeCategory, X0
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSET not yet implemented."
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return X0

Method: System.Boolean CheckLetter(System.Globalization.UnicodeCategory uc)

Disassembly:
	0x0331B87C ADRP X21, 0x10C1000
	0x0331B880 ADRP X20, 0xDDA000
	0x0331B884 LDRB W8, [X21 + 0xBE2]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Boolean IsLetter(System.Char c)

Disassembly:
	0x0331B888 LDR X20, [X20 + 0x170]
	0x0331B88C MOV W19, W0
	0x0331B890 TBNZ X8, 0x0, 0x331B8A8
	0x0331B894 ADRP X0, 0xDDA000
	0x0331B898 LDR X0, [X0 + 0x170]
	0x0331B89C BL 0x1C16CF4
	0x0331B8A0 MOVZ W8, 0x1
	0x0331B8A4 STRB W8, [X21 + 0xBE2]
	0x0331B8A8 LDR X0, [X20]
	0x0331B8AC LDR W8, [X0 + 0xE0]
	0x0331B8B0 CBNZ W8, 0x331B8B8
	0x0331B8B4 BL 0x1C16DFC
	0x0331B8B8 AND W8, W19, 0xFFFF
	0x0331B8BC CMP W8, 0xFF
	0x0331B8C0 B.HI 0x331B8F0
	0x0331B8C4 LDR X0, [X20]
	0x0331B8C8 LDR W8, [X0 + 0xE0]
	0x0331B8CC CBNZ W8, 0x331B8D4
	0x0331B8D0 BL 0x1C16DFC
	0x0331B8D4 AND W8, W19, 0xFFFF
	0x0331B8D8 CMP W8, 0x7F
	0x0331B8DC B.HI 0x331B918
	0x0331B8E0 SUB W8, W19, 0x30
	0x0331B8E4 AND W8, W8, 0xFFFF
	0x0331B8E8 CMP W8, 0xA
	0x0331B8EC B 0x331B93C
	0x0331B8F0 MOV W0, W19
	0x0331B8F4 MOV X1, X31
	0x0331B8F8 BL 0x330331C
	0x0331B8FC LDR X8, [X20]
	0x0331B900 MOV W19, W0
	0x0331B904 LDR W9, [X8 + 0xE0]
	0x0331B908 CBNZ W9, 0x331B934
	0x0331B90C MOV X0, X8
	0x0331B910 BL 0x1C16DFC
	0x0331B914 B 0x331B934
	0x0331B918 LDR X0, [X20]
	0x0331B91C LDR W8, [X0 + 0xE0]
	0x0331B920 CBNZ W8, 0x331B928
	0x0331B924 BL 0x1C16DFC
	0x0331B928 MOV W0, W19
	0x0331B92C BL 0x331A5A8
	0x0331B930 MOV W19, W0
	0x0331B934 SUB W8, W19, 0x8
	0x0331B938 CMP W8, 0x3
	0x0331B93C LDP X20, X19, [X31 + 0x10]
	0x0331B940 CSET W0, CC
	0x0331B944 LDP X30, X21, [X31], #0x20
	0x0331B948 RET
	0x0331B94C STR X30, [X31 - 0x30]!
	0x0331B950 STP X22, X21, [X31 + 0x10]
	0x0331B954 STP X20, X19, [X31 + 0x20]
	0x0331B958 ADRP X21, 0x10C1000
	0x0331B95C LDRB W8, [X21 + 0xBE3]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C2000
	006 Move X20, 0xDDB000
	007 Move W8, [X21+3021]
	008 Move X20, [X20+368]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDDB000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3021], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 And W8, W19, 0xFFFF
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 And W8, W19, 0xFFFF
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Or W8, W19, 32
	034 Subtract W8, W8, 97
	035 And W8, W8, 0xFFFF
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W0, W19
	038 Move X1, X31
	039 Call CharUnicodeInfo.GetUnicodeCategory, X0
	040 Move X8, [X20]
	041 Move W19, W0
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {55}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X0, [X20]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move W0, W19
	053 Call Char.GetLatin1UnicodeCategory, X0
	054 Move W19, W0
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 NotImplemented "Instruction CSET not yet implemented."
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Return X0

Method: System.Boolean IsWhiteSpaceLatin1(System.Char c)

Disassembly:
	0x0331B960 MOV W19, W1
	0x0331B964 MOV X20, X0
	0x0331B968 TBNZ X8, 0x0, 0x331B980
	0x0331B96C ADRP X0, 0xDDA000
	0x0331B970 LDR X0, [X0 + 0x170]
	0x0331B974 BL 0x1C16CF4
	0x0331B978 MOVZ W8, 0x1
	0x0331B97C STRB W8, [X21 + 0xBE3]
	0x0331B980 CBZ X20, 0x331BA5C
	0x0331B984 LDR W8, [X20 + 0x10]
	0x0331B988 CMP W8, W19
	0x0331B98C B.LS 0x331BA8C
	0x0331B990 ADRP X22, 0xDDA000
	0x0331B994 LDR X22, [X22 + 0x170]
	0x0331B998 MOV X0, X20

ISIL:
	001 And W8, W0, 0xFFFF
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W0, 1
	004 Return X0
	005 Subtract W9, W8, 9
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CSET not yet implemented."
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Or W8, W10, W9
	012 NotImplemented "Instruction CSET not yet implemented."
	013 Or W0, W9, W8
	014 Return X0

Method: System.Boolean IsWhiteSpace(System.Char c)

Disassembly:
	0x03318FCC CBZ X9, 0x3318FF0
	0x03318FD0 LDR X10, [X8 + 0xB0]
	0x03318FD4 ADD X10, X10, 0x8
	0x03318FD8 LDUR X11, [X10 - 0x8]
	0x03318FDC CMP X11, X1
	0x03318FE0 B.EQ 0x33190F0
	0x03318FE4 SUBS X9, X9, 0x1
	0x03318FE8 ADD X10, X10, 0x10
	0x03318FEC B.NE 0x3318FD8
	0x03318FF0 MOVZ W2, 0x9
	0x03318FF4 MOV X0, X19
	0x03318FF8 BL 0x1C5C788
	0x03318FFC B 0x3319100
	0x03319000 LDR W9, [X10]
	0x03319004 ADD W9, W9, 0x7
	0x03319008 ADD X8, X8, W9, 0x4, SXTW
	0x0331900C ADD X0, X8, 0x138
	0x03319010 LDP X8, X2, [X0]
	0x03319014 MOV X0, X19
	0x03319018 MOV X1, X20
	0x0331901C BLR X8
	0x03319020 ADRP X8, 0xDDA000
	0x03319024 LDR X8, [X8 + 0x758]
	0x03319028 B 0x331909C
	0x0331902C ADRP X10, 0xE0A000
	0x03319030 LDR X8, [X19]
	0x03319034 LDR X10, [X10 + 0xE10]
	0x03319038 LDRH W9, [X8 + 0x12E]
	0x0331903C LDR X1, [X10]
	0x03319040 CBZ X9, 0x3319064
	0x03319044 LDR X10, [X8 + 0xB0]
	0x03319048 ADD X10, X10, 0x8
	0x0331904C LDUR X11, [X10 - 0x8]
	0x03319050 CMP X11, X1
	0x03319054 B.EQ 0x3319164
	0x03319058 SUBS X9, X9, 0x1
	0x0331905C ADD X10, X10, 0x10
	0x03319060 B.NE 0x331904C
	0x03319064 MOVZ W2, 0xA
	0x03319068 MOV X0, X19
	0x0331906C BL 0x1C5C788
	0x03319070 B 0x3319174
	0x03319074 LDR W9, [X10]
	0x03319078 ADD W9, W9, 0x8
	0x0331907C ADD X8, X8, W9, 0x4, SXTW
	0x03319080 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C5000
	006 Move X20, 0xDDE000
	007 Move W8, [X21+3022]
	008 Move X20, [X20+368]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDDE000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3022], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 And W8, W19, 0xFFFF
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 And W8, W19, 0xFFFF
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W0, 1
	034 Move W0, W19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X1, X31
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Call CharUnicodeInfo.IsWhiteSpace, X0
	041 Return X0
	042 Subtract W9, W8, 9
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CSET not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CSET not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Or W8, W10, W9
	049 NotImplemented "Instruction CSET not yet implemented."
	050 Or W0, W9, W8
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return X0

Method: System.Boolean IsUpper(System.Char c)

Disassembly:
	0x0331B99C MOV W1, W19
	0x0331B9A0 MOV X2, X31
	0x0331B9A4 BL 0x3222A1C
	0x0331B9A8 LDR X8, [X22]
	0x0331B9AC MOV W21, W0
	0x0331B9B0 LDR W9, [X8 + 0xE0]
	0x0331B9B4 CBNZ W9, 0x331B9C0
	0x0331B9B8 MOV X0, X8
	0x0331B9BC BL 0x1C16DFC
	0x0331B9C0 AND W8, W21, 0xFFFF
	0x0331B9C4 CMP W8, 0xFF
	0x0331B9C8 B.HI 0x331B9F8
	0x0331B9CC LDR X0, [X22]
	0x0331B9D0 LDR W8, [X0 + 0xE0]
	0x0331B9D4 CBNZ W8, 0x331B9DC
	0x0331B9D8 BL 0x1C16DFC
	0x0331B9DC AND W8, W21, 0xFFFF
	0x0331B9E0 CMP W8, 0x7F
	0x0331B9E4 B.HI 0x331BA24
	0x0331B9E8 SUB W8, W21, 0x30
	0x0331B9EC AND W8, W8, 0xFFFF
	0x0331B9F0 CMP W8, 0xA
	0x0331B9F4 B 0x331BA48
	0x0331B9F8 MOV X0, X20
	0x0331B9FC MOV W1, W19
	0x0331BA00 MOV X2, X31
	0x0331BA04 BL 0x3303350
	0x0331BA08 LDR X8, [X22]
	0x0331BA0C MOV W19, W0
	0x0331BA10 LDR W9, [X8 + 0xE0]
	0x0331BA14 CBNZ W9, 0x331BA40
	0x0331BA18 MOV X0, X8
	0x0331BA1C BL 0x1C16DFC
	0x0331BA20 B 0x331BA40
	0x0331BA24 LDR X0, [X22]
	0x0331BA28 LDR W8, [X0 + 0xE0]
	0x0331BA2C CBNZ W8, 0x331BA34
	0x0331BA30 BL 0x1C16DFC
	0x0331BA34 MOV W0, W21
	0x0331BA38 BL 0x331A5A8
	0x0331BA3C MOV W19, W0
	0x0331BA40 SUB W8, W19, 0x8
	0x0331BA44 CMP W8, 0x3
	0x0331BA48 LDP X20, X19, [X31 + 0x20]
	0x0331BA4C LDP X22, X21, [X31 + 0x10]
	0x0331BA50 CSET W0, CC
	0x0331BA54 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C2000
	006 Move X20, 0xDDB000
	007 Move W8, [X21+3023]
	008 Move X20, [X20+368]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDDB000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3023], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 And W8, W19, 0xFFFF
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 And W8, W19, 0xFFFF
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract W8, W19, 65
	034 And W8, W8, 0xFFFF
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Move W0, W19
	038 Move X1, X31
	039 Call CharUnicodeInfo.GetUnicodeCategory, X0
	040 Move X0, [X20]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move W0, W19
	046 Call Char.GetLatin1UnicodeCategory, X0
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSET not yet implemented."
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Return X0

Method: System.Boolean IsLower(System.Char c)

Disassembly:
	0x0331BA58 RET
	0x0331BA5C ADRP X0, 0xDDD000
	0x0331BA60 LDR X0, [X0 + 0x528]
	0x0331BA64 BL 0x1C16D08
	0x0331BA68 BL 0x1C16F10
	0x0331BA6C MOV X19, X0
	0x0331BA70 ADRP X0, 0xE01000
	0x0331BA74 LDR X0, [X0 + 0xCC0]
	0x0331BA78 BL 0x1C16D08
	0x0331BA7C MOV X1, X0
	0x0331BA80 MOV X0, X19
	0x0331BA84 BL 0x330E100
	0x0331BA88 B 0x331BAB8
	0x0331BA8C ADRP X0, 0xDE0000
	0x0331BA90 LDR X0, [X0 + 0x760]
	0x0331BA94 BL 0x1C16D08
	0x0331BA98 BL 0x1C16F10
	0x0331BA9C MOV X19, X0
	0x0331BAA0 ADRP X0, 0xDE3000
	0x0331BAA4 LDR X0, [X0 + 0x130]
	0x0331BAA8 BL 0x1C16D08
	0x0331BAAC MOV X1, X0
	0x0331BAB0 MOV X0, X19
	0x0331BAB4 BL 0x3316014
	0x0331BAB8 ADRP X0, 0xE0D000
	0x0331BABC LDR X0, [X0 + 0xF0]
	0x0331BAC0 BL 0x1C16D08
	0x0331BAC4 MOV X1, X0
	0x0331BAC8 MOV X0, X19
	0x0331BACC BL 0x1C16DEC
	0x0331BAD0 SUB W8, W0, 0xB
	0x0331BAD4 CMP W8, 0x3
	0x0331BAD8 CSET W0, CC
	0x0331BADC RET
	0x0331BAE0 MOVZ W8, 0xFF7F
	0x0331BAE4 AND W8, W0, W8, 0x0
	0x0331BAE8 CMP W8, 0x20
	0x0331BAEC CSET W0, EQ
	0x0331BAF0 RET
	0x0331BAF4 STP X30, X21, [X31 - 0x20]!
	0x0331BAF8 STP X20, X19, [X31 + 0x10]
	0x0331BAFC ADRP X21, 0x10C1000
	0x0331BB00 ADRP X20, 0xDDA000
	0x0331BB04 LDRB W8, [X21 + 0xBE4]
	0x0331BB08 LDR X20, [X20 + 0x170]
	0x0331BB0C MOV W19, W0
	0x0331BB10 TBNZ X8, 0x0, 0x331BB28

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C2000
	006 Move X20, 0xDDB000
	007 Move W8, [X21+3024]
	008 Move X20, [X20+368]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDDB000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3024], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 And W8, W19, 0xFFFF
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 And W8, W19, 0xFFFF
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract W8, W19, 97
	034 And W8, W8, 0xFFFF
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Move W0, W19
	038 Move X1, X31
	039 Call CharUnicodeInfo.GetUnicodeCategory, X0
	040 Move X0, [X20]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move W0, W19
	046 Call Char.GetLatin1UnicodeCategory, X0
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSET not yet implemented."
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Return X0

Method: System.Boolean CheckPunctuation(System.Globalization.UnicodeCategory uc)

Disassembly:
	0x0331BB14 ADRP X0, 0xDDA000
	0x0331BB18 LDR X0, [X0 + 0x170]
	0x0331BB1C BL 0x1C16CF4
	0x0331BB20 MOVZ W8, 0x1

ISIL:
	001 Subtract W8, W0, 18
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean IsPunctuation(System.Char c)

Disassembly:
	0x0331BB24 STRB W8, [X21 + 0xBE4]
	0x0331BB28 LDR X0, [X20]
	0x0331BB2C LDR W8, [X0 + 0xE0]
	0x0331BB30 CBNZ W8, 0x331BB38
	0x0331BB34 BL 0x1C16DFC
	0x0331BB38 AND W8, W19, 0xFFFF
	0x0331BB3C CMP W8, 0xFF
	0x0331BB40 B.HI 0x331BB68
	0x0331BB44 LDR X0, [X20]
	0x0331BB48 LDR W8, [X0 + 0xE0]
	0x0331BB4C CBNZ W8, 0x331BB54
	0x0331BB50 BL 0x1C16DFC
	0x0331BB54 MOVZ W8, 0xFF7F
	0x0331BB58 AND W8, W19, W8, 0x0
	0x0331BB5C CMP W8, 0x20
	0x0331BB60 CSET W0, EQ
	0x0331BB64 B 0x331BB98
	0x0331BB68 MOV W0, W19
	0x0331BB6C MOV X1, X31
	0x0331BB70 BL 0x330331C
	0x0331BB74 LDR X8, [X20]
	0x0331BB78 MOV W19, W0
	0x0331BB7C LDR W9, [X8 + 0xE0]
	0x0331BB80 CBNZ W9, 0x331BB8C
	0x0331BB84 MOV X0, X8
	0x0331BB88 BL 0x1C16DFC
	0x0331BB8C SUB W8, W19, 0xB
	0x0331BB90 CMP W8, 0x3
	0x0331BB94 CSET W0, CC
	0x0331BB98 LDP X20, X19, [X31 + 0x10]
	0x0331BB9C LDP X30, X21, [X31], #0x20
	0x0331BBA0 RET
	0x0331BBA4 UBFM W8, W0, 0xB, 0xF
	0x0331BBA8 CMP W8, 0x1B
	0x0331BBAC CSET W0, EQ
	0x0331BBB0 RET
	0x0331BBB4 STP X30, X21, [X31 - 0x20]!
	0x0331BBB8 STP X20, X19, [X31 + 0x10]
	0x0331BBBC ADRP X21, 0x10C1000
	0x0331BBC0 LDRB W8, [X21 + 0xBE5]
	0x0331BBC4 MOV W19, W1
	0x0331BBC8 MOV X20, X0
	0x0331BBCC TBNZ X8, 0x0, 0x331BBE4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C2000
	006 Move X20, 0xDDB000
	007 Move W8, [X21+3025]
	008 Move X20, [X20+368]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDDB000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3025], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 And W8, W19, 0xFFFF
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move W0, W19
	032 Call Char.GetLatin1UnicodeCategory, X0
	033 Move W19, W0
	034 Move W0, W19
	035 Move X1, X31
	036 Call CharUnicodeInfo.GetUnicodeCategory, X0
	037 Move X8, [X20]
	038 Move W19, W0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {44}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Subtract W8, W19, 18
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSET not yet implemented."
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return X0

Method: System.Boolean CheckLetterOrDigit(System.Globalization.UnicodeCategory uc)

Disassembly:
	0x0331BBD0 ADRP X0, 0xDDA000
	0x0331BBD4 LDR X0, [X0 + 0x170]
	0x0331BBD8 BL 0x1C16CF4
	0x0331BBDC MOVZ W8, 0x1
	0x0331BBE0 STRB W8, [X21 + 0xBE5]
	0x0331BBE4 CBZ X20, 0x331BC3C
	0x0331BBE8 LDR W8, [X20 + 0x10]
	0x0331BBEC CMP W8, W19

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, 287
	003 NotImplemented "Instruction LSRV not yet implemented."
	004 And W0, W8, 1
	005 Return X0
	006 Move W0, W31
	007 Return X0

Method: System.Boolean IsLetterOrDigit(System.Char c)

Disassembly:
	0x0331BBF0 B.LS 0x331BC6C
	0x0331BBF4 ADRP X21, 0xDDA000
	0x0331BBF8 LDR X21, [X21 + 0x170]
	0x0331BBFC MOV X0, X20
	0x0331BC00 MOV W1, W19
	0x0331BC04 MOV X2, X31
	0x0331BC08 BL 0x3222A1C
	0x0331BC0C LDR X8, [X21]
	0x0331BC10 MOV W19, W0
	0x0331BC14 LDR W9, [X8 + 0xE0]
	0x0331BC18 CBNZ W9, 0x331BC24
	0x0331BC1C MOV X0, X8
	0x0331BC20 BL 0x1C16DFC
	0x0331BC24 UBFM W8, W19, 0xB, 0xF
	0x0331BC28 LDP X20, X19, [X31 + 0x10]
	0x0331BC2C CMP W8, 0x1B
	0x0331BC30 CSET W0, EQ
	0x0331BC34 LDP X30, X21, [X31], #0x20
	0x0331BC38 RET
	0x0331BC3C ADRP X0, 0xDDD000
	0x0331BC40 LDR X0, [X0 + 0x528]
	0x0331BC44 BL 0x1C16D08
	0x0331BC48 BL 0x1C16F10
	0x0331BC4C MOV X19, X0
	0x0331BC50 ADRP X0, 0xE01000
	0x0331BC54 LDR X0, [X0 + 0xCC0]
	0x0331BC58 BL 0x1C16D08
	0x0331BC5C MOV X1, X0
	0x0331BC60 MOV X0, X19
	0x0331BC64 BL 0x330E100
	0x0331BC68 B 0x331BC98
	0x0331BC6C ADRP X0, 0xDE0000
	0x0331BC70 LDR X0, [X0 + 0x760]
	0x0331BC74 BL 0x1C16D08
	0x0331BC78 BL 0x1C16F10
	0x0331BC7C MOV X19, X0
	0x0331BC80 ADRP X0, 0xDE3000
	0x0331BC84 LDR X0, [X0 + 0x130]
	0x0331BC88 BL 0x1C16D08
	0x0331BC8C MOV X1, X0
	0x0331BC90 MOV X0, X19
	0x0331BC94 BL 0x3316014
	0x0331BC98 ADRP X0, 0xE0D000
	0x0331BC9C LDR X0, [X0 + 0xF8]
	0x0331BCA0 BL 0x1C16D08
	0x0331BCA4 MOV X1, X0
	0x0331BCA8 MOV X0, X19
	0x0331BCAC BL 0x1C16DEC
	0x0331BCB0 STR X30, [X31 - 0x30]!
	0x0331BCB4 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C2000
	006 Move X20, 0xDDB000
	007 Move W8, [X21+3026]
	008 Move X20, [X20+368]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDDB000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3026], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 And W8, W19, 0xFFFF
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move W0, W19
	032 Call Char.GetLatin1UnicodeCategory, X0
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W8, 287
	035 NotImplemented "Instruction LSRV not yet implemented."
	036 Move W0, W19
	037 Move X1, X31
	038 Call CharUnicodeInfo.GetUnicodeCategory, X0
	039 Move X8, [X20]
	040 Move W19, W0
	041 Move W9, [X8+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W8, 287
	048 NotImplemented "Instruction LSRV not yet implemented."
	049 And W0, W8, 1
	050 Move W0, W31
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return X0

Method: System.Char ToUpper(System.Char c)

Disassembly:
	0x0331BCB8 STP X20, X19, [X31 + 0x20]
	0x0331BCBC ADRP X21, 0x10C1000
	0x0331BCC0 LDRB W8, [X21 + 0xBE6]
	0x0331BCC4 MOV W19, W1
	0x0331BCC8 MOV X20, X0
	0x0331BCCC TBNZ X8, 0x0, 0x331BCE4
	0x0331BCD0 ADRP X0, 0xDDA000
	0x0331BCD4 LDR X0, [X0 + 0x170]
	0x0331BCD8 BL 0x1C16CF4
	0x0331BCDC MOVZ W8, 0x1
	0x0331BCE0 STRB W8, [X21 + 0xBE6]
	0x0331BCE4 CBZ X20, 0x331BDB4
	0x0331BCE8 LDR W8, [X20 + 0x10]
	0x0331BCEC CMP W8, W19
	0x0331BCF0 B.LS 0x331BDE4
	0x0331BCF4 ADRP X22, 0xDDA000
	0x0331BCF8 LDR X22, [X22 + 0x170]
	0x0331BCFC MOV X0, X20
	0x0331BD00 MOV W1, W19
	0x0331BD04 MOV X2, X31
	0x0331BD08 BL 0x3222A1C
	0x0331BD0C LDR X8, [X22]
	0x0331BD10 MOV W21, W0
	0x0331BD14 LDR W9, [X8 + 0xE0]
	0x0331BD18 CBNZ W9, 0x331BD24
	0x0331BD1C MOV X0, X8
	0x0331BD20 BL 0x1C16DFC
	0x0331BD24 AND W8, W21, 0xFFFF
	0x0331BD28 MOV X0, X20
	0x0331BD2C MOV W1, W19
	0x0331BD30 CMP W8, 0xFF

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x10C2000
	006 Move X21, 0xDDB000
	007 Move W8, [X20+3027]
	008 Move X21, [X21+3144]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDDB000
	015 Move X0, [X0+3144]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3027], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X31
	025 Call CultureInfo.get_CurrentCulture
	026 Compare X0, 0
	027 JumpIfEqual {43}
	028 Move X8, [X0]
	029 Move X9, [X8+472]
	030 Move X1, [X8+480]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Compare X0, 0
	033 JumpIfEqual {43}
	034 Move X8, [X0]
	035 Move W1, W19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X3, [X8+456]
	039 Move X2, [X8+464]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 CallNoReturn X3
	043 Call 0x1C17F20

Method: System.Char ToUpperInvariant(System.Char c)

Disassembly:
	0x0331BD34 B.HI 0x331BD6C
	0x0331BD38 MOV X2, X31
	0x0331BD3C BL 0x3222A1C
	0x0331BD40 LDR X8, [X22]
	0x0331BD44 MOV W19, W0
	0x0331BD48 LDR W9, [X8 + 0xE0]
	0x0331BD4C CBNZ W9, 0x331BD58
	0x0331BD50 MOV X0, X8
	0x0331BD54 BL 0x1C16DFC
	0x0331BD58 AND W8, W19, 0xFFFF
	0x0331BD5C CMP W8, 0x20
	0x0331BD60 B.NE 0x331BD80
	0x0331BD64 MOVZ W0, 0x1
	0x0331BD68 B 0x331BDA4
	0x0331BD6C LDP X20, X19, [X31 + 0x20]
	0x0331BD70 LDP X22, X21, [X31 + 0x10]
	0x0331BD74 MOV X2, X31
	0x0331BD78 LDR X30, [X31], #0x30
	0x0331BD7C B 0x3303620
	0x0331BD80 SUB W9, W8, 0x9
	0x0331BD84 CMP W9, 0x5
	0x0331BD88 CSET W9, CC
	0x0331BD8C CMP W8, 0xA0
	0x0331BD90 CSET W10, EQ
	0x0331BD94 CMP W8, 0x85
	0x0331BD98 ORR W8, W10, W9, 0x0
	0x0331BD9C CSET W9, EQ
	0x0331BDA0 ORR W0, W9, W8, 0x0
	0x0331BDA4 LDP X20, X19, [X31 + 0x20]
	0x0331BDA8 LDP X22, X21, [X31 + 0x10]
	0x0331BDAC LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x10C2000
	006 Move X21, 0xDDB000
	007 Move W8, [X20+3028]
	008 Move X21, [X21+3144]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDDB000
	015 Move X0, [X0+3144]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3028], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X31
	025 Call CultureInfo.get_InvariantCulture
	026 Compare X0, 0
	027 JumpIfEqual {43}
	028 Move X8, [X0]
	029 Move X9, [X8+472]
	030 Move X1, [X8+480]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Compare X0, 0
	033 JumpIfEqual {43}
	034 Move X8, [X0]
	035 Move W1, W19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X3, [X8+456]
	039 Move X2, [X8+464]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 CallNoReturn X3
	043 Call 0x1C17F20

Method: System.Char ToLower(System.Char c, System.Globalization.CultureInfo culture)

Disassembly:
	0x0331BDB0 RET
	0x0331BDB4 ADRP X0, 0xDDD000
	0x0331BDB8 LDR X0, [X0 + 0x528]
	0x0331BDBC BL 0x1C16D08
	0x0331BDC0 BL 0x1C16F10
	0x0331BDC4 MOV X19, X0
	0x0331BDC8 ADRP X0, 0xE01000
	0x0331BDCC LDR X0, [X0 + 0xCC0]
	0x0331BDD0 BL 0x1C16D08
	0x0331BDD4 MOV X1, X0
	0x0331BDD8 MOV X0, X19
	0x0331BDDC BL 0x330E100
	0x0331BDE0 B 0x331BE10
	0x0331BDE4 ADRP X0, 0xDE0000
	0x0331BDE8 LDR X0, [X0 + 0x760]
	0x0331BDEC BL 0x1C16D08
	0x0331BDF0 BL 0x1C16F10
	0x0331BDF4 MOV X19, X0
	0x0331BDF8 ADRP X0, 0xDE3000
	0x0331BDFC LDR X0, [X0 + 0x130]
	0x0331BE00 BL 0x1C16D08
	0x0331BE04 MOV X1, X0
	0x0331BE08 MOV X0, X19
	0x0331BE0C BL 0x3316014
	0x0331BE10 ADRP X0, 0xE0D000
	0x0331BE14 LDR X0, [X0 + 0x100]
	0x0331BE18 BL 0x1C16D08
	0x0331BE1C MOV X1, X0
	0x0331BE20 MOV X0, X19
	0x0331BE24 BL 0x1C16DEC
	0x0331BE28 STP X30, X21, [X31 - 0x20]!
	0x0331BE2C STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {21}
	005 Move X8, [X1]
	006 Move W19, W0
	007 Move X0, X1
	008 Move X9, [X8+472]
	009 Move X8, [X8+480]
	010 Move X1, X8
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Compare X0, 0
	013 JumpIfEqual {38}
	014 Move X8, [X0]
	015 Move W1, W19
	016 Move X3, [X8+424]
	017 Move X2, [X8+432]
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 CallNoReturn X3
	021 Move X0, 0xDDE000
	022 Move X0, [X0+1320]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X19, X0
	026 Move X0, 0xE07000
	027 Move X0, [X0+4080]
	028 Call 0x1C17D08
	029 Move X1, X0
	030 Move X0, X19
	031 Call ArgumentNullException..ctor, X0, X1
	032 Move X0, 0xE0E000
	033 Move X0, [X0+184]
	034 Call 0x1C17D08
	035 Move X1, X0
	036 Move X0, X19
	037 Call 0x1C17DEC
	038 Call 0x1C17F20

Method: System.Char ToLower(System.Char c)

Disassembly:
	0x0331BE30 ADRP X21, 0x10C1000
	0x0331BE34 ADRP X20, 0xDDA000
	0x0331BE38 LDRB W8, [X21 + 0xBE7]
	0x0331BE3C LDR X20, [X20 + 0x170]
	0x0331BE40 MOV W19, W0
	0x0331BE44 TBNZ X8, 0x0, 0x331BE5C
	0x0331BE48 ADRP X0, 0xDDA000
	0x0331BE4C LDR X0, [X0 + 0x170]
	0x0331BE50 BL 0x1C16CF4
	0x0331BE54 MOVZ W8, 0x1
	0x0331BE58 STRB W8, [X21 + 0xBE7]
	0x0331BE5C LDR X0, [X20]
	0x0331BE60 LDR W8, [X0 + 0xE0]
	0x0331BE64 CBNZ W8, 0x331BE6C
	0x0331BE68 BL 0x1C16DFC
	0x0331BE6C AND W0, W19, 0xFFFF
	0x0331BE70 CMP W0, 0xFF
	0x0331BE74 B.HI 0x331BE98
	0x0331BE78 LDR X0, [X20]
	0x0331BE7C LDR W8, [X0 + 0xE0]
	0x0331BE80 CBNZ W8, 0x331BE88
	0x0331BE84 BL 0x1C16DFC
	0x0331BE88 MOV W0, W19
	0x0331BE8C LDP X20, X19, [X31 + 0x10]
	0x0331BE90 LDP X30, X21, [X31], #0x20
	0x0331BE94 B 0x331A5A8
	0x0331BE98 LDP X20, X19, [X31 + 0x10]
	0x0331BE9C MOV X1, X31
	0x0331BEA0 LDP X30, X21, [X31], #0x20
	0x0331BEA4 B 0x3303338
	0x0331BEA8 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x10C2000
	006 Move X21, 0xDDB000
	007 Move W8, [X20+3029]
	008 Move X21, [X21+3144]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDDB000
	015 Move X0, [X0+3144]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3029], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X31
	025 Call CultureInfo.get_CurrentCulture
	026 Compare X0, 0
	027 JumpIfEqual {43}
	028 Move X8, [X0]
	029 Move X9, [X8+472]
	030 Move X1, [X8+480]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Compare X0, 0
	033 JumpIfEqual {43}
	034 Move X8, [X0]
	035 Move W1, W19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X3, [X8+424]
	039 Move X2, [X8+432]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 CallNoReturn X3
	043 Call 0x1C17F20

Method: System.Char ToLowerInvariant(System.Char c)

Disassembly:
	0x0331BEAC STP X22, X21, [X31 + 0x10]
	0x0331BEB0 STP X20, X19, [X31 + 0x20]
	0x0331BEB4 ADRP X21, 0x10C1000
	0x0331BEB8 LDRB W8, [X21 + 0xBE8]
	0x0331BEBC MOV W19, W1
	0x0331BEC0 MOV X20, X0
	0x0331BEC4 TBNZ X8, 0x0, 0x331BEDC
	0x0331BEC8 ADRP X0, 0xDDA000
	0x0331BECC LDR X0, [X0 + 0x170]
	0x0331BED0 BL 0x1C16CF4
	0x0331BED4 MOVZ W8, 0x1
	0x0331BED8 STRB W8, [X21 + 0xBE8]
	0x0331BEDC CBZ X20, 0x331BF78
	0x0331BEE0 LDR W8, [X20 + 0x10]
	0x0331BEE4 CMP W8, W19
	0x0331BEE8 B.LS 0x331BFA8
	0x0331BEEC ADRP X22, 0xDDA000
	0x0331BEF0 LDR X22, [X22 + 0x170]
	0x0331BEF4 MOV X0, X20
	0x0331BEF8 MOV W1, W19
	0x0331BEFC MOV X2, X31
	0x0331BF00 BL 0x3222A1C
	0x0331BF04 LDR X8, [X22]
	0x0331BF08 MOV W21, W0
	0x0331BF0C LDR W9, [X8 + 0xE0]
	0x0331BF10 CBNZ W9, 0x331BF1C
	0x0331BF14 MOV X0, X8
	0x0331BF18 BL 0x1C16DFC
	0x0331BF1C AND W8, W21, 0xFFFF
	0x0331BF20 MOV X0, X20
	0x0331BF24 MOV W1, W19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x10C2000
	006 Move X21, 0xDDB000
	007 Move W8, [X20+3030]
	008 Move X21, [X21+3144]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDDB000
	015 Move X0, [X0+3144]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3030], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X31
	025 Call CultureInfo.get_InvariantCulture
	026 Compare X0, 0
	027 JumpIfEqual {43}
	028 Move X8, [X0]
	029 Move X9, [X8+472]
	030 Move X1, [X8+480]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Compare X0, 0
	033 JumpIfEqual {43}
	034 Move X8, [X0]
	035 Move W1, W19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X3, [X8+424]
	039 Move X2, [X8+432]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 CallNoReturn X3
	043 Call 0x1C17F20

Method: System.TypeCode GetTypeCode()

Disassembly:
	0x0331BF28 CMP W8, 0xFF
	0x0331BF2C B.HI 0x331BF64

ISIL:
	001 Move W0, 4
	002 Return X0

Method: System.Boolean System.IConvertible.ToBoolean(System.IFormatProvider provider)

Disassembly:
	0x0331BF30 MOV X2, X31
	0x0331BF34 BL 0x3222A1C
	0x0331BF38 LDR X8, [X22]
	0x0331BF3C MOV W19, W0
	0x0331BF40 LDR W9, [X8 + 0xE0]
	0x0331BF44 CBNZ W9, 0x331BF50
	0x0331BF48 MOV X0, X8
	0x0331BF4C BL 0x1C16DFC
	0x0331BF50 MOV W0, W19
	0x0331BF54 LDP X20, X19, [X31 + 0x20]
	0x0331BF58 LDP X22, X21, [X31 + 0x10]
	0x0331BF5C LDR X30, [X31], #0x30
	0x0331BF60 B 0x331A5A8
	0x0331BF64 LDP X20, X19, [X31 + 0x20]
	0x0331BF68 LDP X22, X21, [X31 + 0x10]
	0x0331BF6C MOV X2, X31
	0x0331BF70 LDR X30, [X31], #0x30
	0x0331BF74 B 0x33033F8
	0x0331BF78 ADRP X0, 0xDDD000
	0x0331BF7C LDR X0, [X0 + 0x528]
	0x0331BF80 BL 0x1C16D08
	0x0331BF84 BL 0x1C16F10
	0x0331BF88 MOV X19, X0
	0x0331BF8C ADRP X0, 0xE01000
	0x0331BF90 LDR X0, [X0 + 0xCC0]
	0x0331BF94 BL 0x1C16D08
	0x0331BF98 MOV X1, X0
	0x0331BF9C MOV X0, X19
	0x0331BFA0 BL 0x330E100
	0x0331BFA4 B 0x331BFD4
	0x0331BFA8 ADRP X0, 0xDE0000
	0x0331BFAC LDR X0, [X0 + 0x760]
	0x0331BFB0 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xE0E000
	005 Move X0, [X0+48]
	006 Call 0x1C17D08
	007 Move X19, X0
	008 Move X0, 0xE0B000
	009 Move X0, [X0+224]
	010 Call 0x1C17D08
	011 Move X20, X0
	012 Move X0, 0xE0B000
	013 Move X0, [X0+168]
	014 Call 0x1C17D08
	015 Move X2, X0
	016 Move X0, X19
	017 Move X1, X20
	018 Move X3, X31
	019 Call SR.Format, X0, X1, X2
	020 Move X19, X0
	021 Move X0, 0xDE1000
	022 Move X0, [X0+3080]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X2, X31
	027 Move X20, X0
	028 Call InvalidCastException..ctor, X0, X1
	029 Move X0, 0xE0E000
	030 Move X0, [X0+192]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X20
	034 Call 0x1C17DEC

Method: System.Char System.IConvertible.ToChar(System.IFormatProvider provider)

Disassembly:
	0x0331BFB4 BL 0x1C16F10
	0x0331BFB8 MOV X19, X0

ISIL:
	001 NotImplemented "Instruction LDRH not yet implemented."
	002 Return X0

Method: System.SByte System.IConvertible.ToSByte(System.IFormatProvider provider)

Disassembly:
	0x0331BFBC ADRP X0, 0xDE3000
	0x0331BFC0 LDR X0, [X0 + 0x130]
	0x0331BFC4 BL 0x1C16D08
	0x0331BFC8 MOV X1, X0
	0x0331BFCC MOV X0, X19
	0x0331BFD0 BL 0x3316014
	0x0331BFD4 ADRP X0, 0xE0D000
	0x0331BFD8 LDR X0, [X0 + 0x108]
	0x0331BFDC BL 0x1C16D08
	0x0331BFE0 MOV X1, X0
	0x0331BFE4 MOV X0, X19
	0x0331BFE8 BL 0x1C16DEC
	0x0331BFEC UBFM W8, W0, 0xA, 0xF
	0x0331BFF0 CMP W8, 0x36
	0x0331BFF4 CSET W0, EQ
	0x0331BFF8 RET
	0x0331BFFC STP X30, X21, [X31 - 0x20]!
	0x0331C000 STP X20, X19, [X31 + 0x10]
	0x0331C004 ADRP X21, 0x10C0000
	0x0331C008 LDRB W8, [X21 + 0xBE9]
	0x0331C00C MOV W19, W1
	0x0331C010 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C2000
	006 Move X20, 0xDE2000
	007 Move W8, [X21+3031]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDE2000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3031], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]

Method: System.Byte System.IConvertible.ToByte(System.IFormatProvider provider)

Disassembly:
	0x0331C070 UBFM W8, W19, 0xA, 0xF
	0x0331C074 LDP X20, X19, [X31 + 0x10]
	0x0331C078 CMP W8, 0x36
	0x0331C07C CSET W0, EQ
	0x0331C080 LDP X30, X21, [X31], #0x20
	0x0331C084 RET
	0x0331C088 ADRP X0, 0xDDF000
	0x0331C08C LDR X0, [X0 + 0x760]
	0x0331C090 BL 0x1C16D08
	0x0331C094 BL 0x1C16F10
	0x0331C098 MOV X19, X0
	0x0331C09C ADRP X0, 0xDE2000
	0x0331C0A0 LDR X0, [X0 + 0x130]
	0x0331C0A4 BL 0x1C16D08
	0x0331C0A8 MOV X1, X0
	0x0331C0AC MOV X0, X19
	0x0331C0B0 BL 0x3316014
	0x0331C0B4 B 0x331C0E4
	0x0331C0B8 ADRP X0, 0xDDC000
	0x0331C0BC LDR X0, [X0 + 0x528]
	0x0331C0C0 BL 0x1C16D08
	0x0331C0C4 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C1000
	006 Move X20, 0xDE1000
	007 Move W8, [X21+3032]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDE1000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3032], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]

Method: System.Int16 System.IConvertible.ToInt16(System.IFormatProvider provider)

Disassembly:
	0x0331C124 AND W0, W8, W9, 0x0
	0x0331C128 RET
	0x0331C12C STR X30, [X31 - 0x30]!
	0x0331C130 STP X22, X21, [X31 + 0x10]
	0x0331C134 STP X20, X19, [X31 + 0x20]
	0x0331C138 ADRP X22, 0x10C0000
	0x0331C13C ADRP X21, 0xDD9000
	0x0331C140 LDRB W8, [X22 + 0xBEA]
	0x0331C144 LDR X21, [X21 + 0x170]
	0x0331C148 MOV W19, W1
	0x0331C14C MOV W20, W0
	0x0331C150 TBNZ X8, 0x0, 0x331C168
	0x0331C154 ADRP X0, 0xDD9000
	0x0331C158 LDR X0, [X0 + 0x170]
	0x0331C15C BL 0x1C16CF4
	0x0331C160 MOVZ W8, 0x1
	0x0331C164 STRB W8, [X22 + 0xBEA]
	0x0331C168 LDR X0, [X21]
	0x0331C16C LDR W8, [X0 + 0xE0]
	0x0331C170 CBNZ W8, 0x331C178
	0x0331C174 BL 0x1C16DFC
	0x0331C178 UBFM W8, W20, 0xA, 0xF

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C1000
	006 Move X20, 0xDE1000
	007 Move W8, [X21+3033]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDE1000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3033], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]

Method: System.UInt16 System.IConvertible.ToUInt16(System.IFormatProvider provider)

Disassembly:
	0x0331C1D0 BL 0x1C16D08
	0x0331C1D4 BL 0x1C16F10
	0x0331C1D8 MOV X19, X0
	0x0331C1DC ADRP X0, 0xE0C000
	0x0331C1E0 LDR X0, [X0 + 0x118]
	0x0331C1E4 BL 0x1C16D08
	0x0331C1E8 MOV X20, X0
	0x0331C1EC ADRP X0, 0xE0C000
	0x0331C1F0 LDR X0, [X0 + 0x120]
	0x0331C1F4 B 0x331C224
	0x0331C1F8 ADRP X0, 0xDDF000
	0x0331C1FC LDR X0, [X0 + 0x760]
	0x0331C200 BL 0x1C16D08
	0x0331C204 BL 0x1C16F10
	0x0331C208 MOV X19, X0
	0x0331C20C ADRP X0, 0xE0C000
	0x0331C210 LDR X0, [X0 + 0x128]
	0x0331C214 BL 0x1C16D08
	0x0331C218 MOV X20, X0
	0x0331C21C ADRP X0, 0xE0C000
	0x0331C220 LDR X0, [X0 + 0x130]
	0x0331C224 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C1000
	006 Move X20, 0xDE1000
	007 Move W8, [X21+3034]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDE1000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3034], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.Int32 System.IConvertible.ToInt32(System.IFormatProvider provider)

Disassembly:
	0x0331C22C MOV X0, X19
	0x0331C230 MOV X1, X20
	0x0331C234 BL 0x3311888
	0x0331C238 ADRP X0, 0xE0C000
	0x0331C23C LDR X0, [X0 + 0x138]
	0x0331C240 BL 0x1C16D08
	0x0331C244 MOV X1, X0
	0x0331C248 MOV X0, X19
	0x0331C24C BL 0x1C16DEC
	0x0331C250 STR X30, [X31 - 0x30]!
	0x0331C254 STP X22, X21, [X31 + 0x10]
	0x0331C258 STP X20, X19, [X31 + 0x20]
	0x0331C25C ADRP X21, 0x10C0000
	0x0331C260 ADRP X22, 0xDD7000
	0x0331C264 ADRP X19, 0xE0C000
	0x0331C268 ADRP X20, 0xDD9000
	0x0331C26C LDRB W8, [X21 + 0xBEB]
	0x0331C270 LDR X22, [X22 + 0x618]
	0x0331C274 LDR X19, [X19 + 0x140]
	0x0331C278 LDR X20, [X20 + 0x170]
	0x0331C27C TBNZ X8, 0x0, 0x331C2AC
	0x0331C280 ADRP X0, 0xDD7000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C1000
	006 Move X20, 0xDE1000
	007 Move W8, [X21+3035]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDE1000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3035], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.UInt32 System.IConvertible.ToUInt32(System.IFormatProvider provider)

Disassembly:
	0x0331C28C ADRP X0, 0xDD9000
	0x0331C290 LDR X0, [X0 + 0x170]
	0x0331C294 BL 0x1C16CF4
	0x0331C298 ADRP X0, 0xE0C000
	0x0331C29C LDR X0, [X0 + 0x140]
	0x0331C2A0 BL 0x1C16CF4
	0x0331C2A4 MOVZ W8, 0x1
	0x0331C2A8 STRB W8, [X21 + 0xBEB]
	0x0331C2AC LDR X0, [X22]
	0x0331C2B0 MOVZ W1, 0x100
	0x0331C2B4 BL 0x1C16D6C
	0x0331C2B8 LDR X1, [X19]
	0x0331C2BC MOV X2, X31
	0x0331C2C0 MOV X19, X0
	0x0331C2C4 BL 0x32C5BD8
	0x0331C2C8 LDR X8, [X20]
	0x0331C2CC LDP X22, X21, [X31 + 0x10]
	0x0331C2D0 LDR X8, [X8 + 0xB8]
	0x0331C2D4 STR X19, [X8]
	0x0331C2D8 LDP X20, X19, [X31 + 0x20]
	0x0331C2DC LDR X30, [X31], #0x30
	0x0331C2E0 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C1000
	006 Move X20, 0xDE1000
	007 Move W8, [X21+3036]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDE1000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3036], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.Int64 System.IConvertible.ToInt64(System.IFormatProvider provider)

Disassembly:
	0x0331C2EC MOV X19, X1
	0x0331C2F0 MOV X1, X31
	0x0331C2F4 MOV X20, X0
	0x0331C2F8 BL 0x33BDD8C
	0x0331C2FC MOVN W8, 0x0
	0x0331C300 STR X19, [X20 + 0x10]
	0x0331C304 STR W8, [X20 + 0x18]
	0x0331C308 LDP X20, X19, [X31 + 0x10]
	0x0331C30C LDR X30, [X31], #0x20
	0x0331C310 RET
	0x0331C314 MOV X1, X31
	0x0331C318 B 0x33C5A24
	0x0331C31C STP X30, X21, [X31 - 0x20]!
	0x0331C320 STP X20, X19, [X31 + 0x10]
	0x0331C324 MOV X19, X0
	0x0331C328 LDR X0, [X0 + 0x10]
	0x0331C32C CBZ X0, 0x331C374
	0x0331C330 LDR W8, [X0 + 0x10]
	0x0331C334 LDR W20, [X19 + 0x18]
	0x0331C338 SUB W21, W8, 0x1
	0x0331C33C CMP W20, W21
	0x0331C340 B.GE 0x331C35C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C1000
	006 Move X20, 0xDE1000
	007 Move W8, [X21+3037]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDE1000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3037], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.UInt64 System.IConvertible.ToUInt64(System.IFormatProvider provider)

Disassembly:
	0x0331C34C STR W1, [X19 + 0x18]
	0x0331C350 BL 0x3222A1C
	0x0331C354 STRH W0, [X19 + 0x1C]
	0x0331C358 B 0x331C360
	0x0331C35C STR W8, [X19 + 0x18]
	0x0331C360 CMP W20, W21
	0x0331C364 LDP X20, X19, [X31 + 0x10]
	0x0331C368 CSET W0, LT
	0x0331C36C LDP X30, X21, [X31], #0x20
	0x0331C370 RET
	0x0331C374 BL 0x1C16F20
	0x0331C378 LDR X8, [X0 + 0x10]
	0x0331C37C CBZ X8, 0x331C388
	0x0331C380 LDR W8, [X8 + 0x10]
	0x0331C384 STR W8, [X0 + 0x18]
	0x0331C388 STR X31, [X0 + 0x10]
	0x0331C38C RET
	0x0331C390 SUB X31, X31, 0x30
	0x0331C394 STP X30, X21, [X31 + 0x10]
	0x0331C398 STP X20, X19, [X31 + 0x20]
	0x0331C39C ADRP X21, 0x10C0000
	0x0331C3A0 ADRP X20, 0xDD9000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C1000
	006 Move X20, 0xDE1000
	007 Move W8, [X21+3038]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDE1000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3038], W8
	019 Move X0, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.Single System.IConvertible.ToSingle(System.IFormatProvider provider)

Disassembly:
	0x0331C3AC MOV X19, X0
	0x0331C3B0 TBNZ X8, 0x0, 0x331C3C8
	0x0331C3B4 ADRP X0, 0xDD9000
	0x0331C3B8 LDR X0, [X0 + 0x170]
	0x0331C3BC BL 0x1C16CF4
	0x0331C3C0 MOVZ W8, 0x1
	0x0331C3C4 STRB W8, [X21 + 0xBEC]
	0x0331C3C8 MOV X0, X19
	0x0331C3CC BL 0x331C3F4
	0x0331C3D0 LDR X8, [X20]
	0x0331C3D4 STRH W0, [X31 + 0xC]
	0x0331C3D8 ADD X1, X31, 0xC
	0x0331C3DC MOV X0, X8
	0x0331C3E0 BL 0x1C16E04
	0x0331C3E4 LDP X20, X19, [X31 + 0x20]
	0x0331C3E8 LDP X30, X21, [X31 + 0x10]
	0x0331C3EC ADD X31, X31, 0x30
	0x0331C3F0 RET
	0x0331C3F4 STP X30, X19, [X31 - 0x10]!
	0x0331C3F8 LDR W8, [X0 + 0x18]
	0x0331C3FC ADDS W31, W8, 0x1
	0x0331C400 B.EQ 0x331C424
	0x0331C404 LDR X9, [X0 + 0x10]
	0x0331C408 CBZ X9, 0x331C444
	0x0331C40C LDR W9, [X9 + 0x10]
	0x0331C410 CMP W8, W9
	0x0331C414 B.GE 0x331C448
	0x0331C418 LDRH W0, [X0 + 0x1C]
	0x0331C41C LDP X30, X19, [X31], #0x10
	0x0331C420 RET
	0x0331C424 ADRP X0, 0xDD7000
	0x0331C428 LDR X0, [X0 + 0x5B0]
	0x0331C42C BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xE0D000
	005 Move X0, [X0+48]
	006 Call 0x1C17D08
	007 Move X19, X0
	008 Move X0, 0xE0A000
	009 Move X0, [X0+224]
	010 Call 0x1C17D08
	011 Move X20, X0
	012 Move X0, 0xE0A000
	013 Move X0, [X0+232]
	014 Call 0x1C17D08
	015 Move X2, X0
	016 Move X0, X19
	017 Move X1, X20
	018 Move X3, X31
	019 Call SR.Format, X0, X1, X2
	020 Move X19, X0
	021 Move X0, 0xDE0000
	022 Move X0, [X0+3080]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X2, X31
	027 Move X20, X0
	028 Call InvalidCastException..ctor, X0, X1
	029 Move X0, 0xE0D000
	030 Move X0, [X0+200]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X20
	034 Call 0x1C17DEC

Method: System.Double System.IConvertible.ToDouble(System.IFormatProvider provider)

Disassembly:
	0x0331C430 BL 0x1C16F10
	0x0331C434 MOV X19, X0
	0x0331C438 ADRP X0, 0xE02000
	0x0331C43C LDR X0, [X0 + 0xC48]
	0x0331C440 B 0x331C464
	0x0331C444 BL 0x1C16F20
	0x0331C448 ADRP X0, 0xDD7000
	0x0331C44C LDR X0, [X0 + 0x5B0]
	0x0331C450 BL 0x1C16D08
	0x0331C454 BL 0x1C16F10
	0x0331C458 MOV X19, X0
	0x0331C45C ADRP X0, 0xE02000
	0x0331C460 LDR X0, [X0 + 0xC40]
	0x0331C464 BL 0x1C16D08
	0x0331C468 MOV X1, X0
	0x0331C46C MOV X0, X19
	0x0331C470 MOV X2, X31
	0x0331C474 BL 0x337DF1C
	0x0331C478 ADRP X0, 0xE0C000
	0x0331C47C LDR X0, [X0 + 0x148]
	0x0331C480 BL 0x1C16D08
	0x0331C484 MOV X1, X0
	0x0331C488 MOV X0, X19
	0x0331C48C BL 0x1C16DEC
	0x0331C490 MOVN W8, 0x0
	0x0331C494 STRH W31, [X0 + 0x1C]
	0x0331C498 STR W8, [X0 + 0x18]
	0x0331C49C RET
	0x0331C4A0 STR X30, [X31 - 0x20]!
	0x0331C4A4 STP X20, X19, [X31 + 0x10]
	0x0331C4A8 ADRP X19, 0x10C0000
	0x0331C4AC ADRP X20, 0xE0C000
	0x0331C4B0 LDRB W8, [X19 + 0xBED]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xE0D000
	005 Move X0, [X0+48]
	006 Call 0x1C17D08
	007 Move X19, X0
	008 Move X0, 0xE0A000
	009 Move X0, [X0+224]
	010 Call 0x1C17D08
	011 Move X20, X0
	012 Move X0, 0xE0A000
	013 Move X0, [X0+240]
	014 Call 0x1C17D08
	015 Move X2, X0
	016 Move X0, X19
	017 Move X1, X20
	018 Move X3, X31
	019 Call SR.Format, X0, X1, X2
	020 Move X19, X0
	021 Move X0, 0xDE0000
	022 Move X0, [X0+3080]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X2, X31
	027 Move X20, X0
	028 Call InvalidCastException..ctor, X0, X1
	029 Move X0, 0xE0D000
	030 Move X0, [X0+208]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X20
	034 Call 0x1C17DEC

Method: System.Decimal System.IConvertible.ToDecimal(System.IFormatProvider provider)

Disassembly:
	0x0331C4B4 LDR X20, [X20 + 0x150]
	0x0331C4B8 TBNZ X8, 0x0, 0x331C4D0
	0x0331C4BC ADRP X0, 0xE0C000
	0x0331C4C0 LDR X0, [X0 + 0x150]
	0x0331C4C4 BL 0x1C16CF4
	0x0331C4C8 MOVZ W8, 0x1
	0x0331C4CC STRB W8, [X19 + 0xBED]
	0x0331C4D0 LDR X0, [X20]
	0x0331C4D4 BL 0x1C16D9C
	0x0331C4D8 SUB X31, X31, 0x70
	0x0331C4DC STP X29, X30, [X31 + 0x10]
	0x0331C4E0 STP X28, X27, [X31 + 0x20]
	0x0331C4E4 STP X26, X25, [X31 + 0x30]
	0x0331C4E8 STP X24, X23, [X31 + 0x40]
	0x0331C4EC STP X22, X21, [X31 + 0x50]
	0x0331C4F0 STP X20, X19, [X31 + 0x60]
	0x0331C4F4 ADRP X25, 0x10C0000
	0x0331C4F8 ADRP X26, 0xE06000
	0x0331C4FC ADRP X19, 0xE05000
	0x0331C500 LDRB W8, [X25 + 0xBEE]
	0x0331C504 LDR X26, [X26 + 0x20]
	0x0331C508 LDR X19, [X19 + 0x830]
	0x0331C50C MOV X20, X5
	0x0331C510 MOV X27, X4
	0x0331C514 MOV X22, X3
	0x0331C518 MOV X23, X2
	0x0331C51C MOV X21, X1
	0x0331C520 MOV X24, X0
	0x0331C524 TBNZ X8, 0x0, 0x331C56C
	0x0331C528 ADRP X0, 0xDE0000
	0x0331C52C LDR X0, [X0 + 0x9E8]
	0x0331C530 BL 0x1C16CF4
	0x0331C534 ADRP X0, 0xE05000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xE0D000
	005 Move X0, [X0+48]
	006 Call 0x1C17D08
	007 Move X19, X0
	008 Move X0, 0xE0A000
	009 Move X0, [X0+224]
	010 Call 0x1C17D08
	011 Move X20, X0
	012 Move X0, 0xE0A000
	013 Move X0, [X0+160]
	014 Call 0x1C17D08
	015 Move X2, X0
	016 Move X0, X19
	017 Move X1, X20
	018 Move X3, X31
	019 Call SR.Format, X0, X1, X2
	020 Move X19, X0
	021 Move X0, 0xDE0000
	022 Move X0, [X0+3080]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X2, X31
	027 Move X20, X0
	028 Call InvalidCastException..ctor, X0, X1
	029 Move X0, 0xE0D000
	030 Move X0, [X0+216]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X20
	034 Call 0x1C17DEC

Method: System.DateTime System.IConvertible.ToDateTime(System.IFormatProvider provider)

Disassembly:
	0x0331C538 LDR X0, [X0 + 0x830]
	0x0331C53C BL 0x1C16CF4
	0x0331C540 ADRP X0, 0xE06000
	0x0331C544 LDR X0, [X0 + 0x20]
	0x0331C548 BL 0x1C16CF4
	0x0331C54C ADRP X0, 0xE06000
	0x0331C550 LDR X0, [X0 + 0x28]
	0x0331C554 BL 0x1C16CF4
	0x0331C558 ADRP X0, 0xE06000
	0x0331C55C LDR X0, [X0 + 0x928]
	0x0331C560 BL 0x1C16CF4
	0x0331C564 MOVZ W8, 0x1
	0x0331C568 STRB W8, [X25 + 0xBEE]
	0x0331C56C LDR X2, [X26]
	0x0331C570 MOV X0, X24
	0x0331C574 MOV X1, X21
	0x0331C578 BL 0x2218CF8
	0x0331C57C LDR X2, [X19]
	0x0331C580 MOV X24, X0
	0x0331C584 MOV X0, X23
	0x0331C588 MOV X1, X22
	0x0331C58C BL 0x2218CF4
	0x0331C590 CBZ W21, 0x331C604
	0x0331C594 ADRP X28, 0xDE0000
	0x0331C598 LDR X28, [X28 + 0x9E8]
	0x0331C59C MOV X23, X0
	0x0331C5A0 LDR X0, [X28]
	0x0331C5A4 LDR W8, [X0 + 0xE0]
	0x0331C5A8 CBNZ W8, 0x331C5B4
	0x0331C5AC BL 0x1C16DFC
	0x0331C5B0 LDR X0, [X28]
	0x0331C5B4 LDR X8, [X0 + 0xB8]
	0x0331C5B8 LDR X29, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xE0D000
	005 Move X0, [X0+48]
	006 Call 0x1C17D08
	007 Move X19, X0
	008 Move X0, 0xE0A000
	009 Move X0, [X0+224]
	010 Call 0x1C17D08
	011 Move X20, X0
	012 Move X0, 0xE0A000
	013 Move X0, [X0+152]
	014 Call 0x1C17D08
	015 Move X2, X0
	016 Move X0, X19
	017 Move X1, X20
	018 Move X3, X31
	019 Call SR.Format, X0, X1, X2
	020 Move X19, X0
	021 Move X0, 0xDE0000
	022 Move X0, [X0+3080]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X2, X31
	027 Move X20, X0
	028 Call InvalidCastException..ctor, X0, X1
	029 Move X0, 0xE0D000
	030 Move X0, [X0+224]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X20
	034 Call 0x1C17DEC

Method: System.Object System.IConvertible.ToType(System.Type type, System.IFormatProvider provider)

Disassembly:
	0x0331C5BC CBZ X29, 0x331C82C
	0x0331C5C0 LDR W8, [X29 + 0x18]
	0x0331C5C4 STP X27, X20, [X31]
	0x0331C5C8 CBZ W8, 0x331C830
	0x0331C5CC SBFM W8, W21, 0x2, 0x1F
	0x0331C5D0 UBFM W8, W8, 0x1F, 0x1E
	0x0331C5D4 ADD W8, W8, W21, 0x2, ASR
	0x0331C5D8 CMP W8, W22
	0x0331C5DC AND W27, W21, 0xFFFFFFFC
	0x0331C5E0 B.LE 0x331C614
	0x0331C5E4 MOVZ W8, 0x5556
	0x0331C5E8 MOVK W8, 0x55550000
	0x0331C5EC SMADDL X8, X22, X8, X31
	0x0331C5F0 UBFM X9, X8, 0x3F, 0x3F
	0x0331C5F4 UBFM X8, X8, 0x20, 0x3F
	0x0331C5F8 ADD W8, W8, W9
	0x0331C5FC UBFM W19, W8, 0x1E, 0x1D
	0x0331C600 B 0x331C618
	0x0331C604 MOV W26, W31
	0x0331C608 MOV W25, W31
	0x0331C60C MOVZ W0, 0x1
	0x0331C610 B 0x331C804
	0x0331C614 SUB W19, W27, 0x4
	0x0331C618 CMP W19, 0x1
	0x0331C61C B.LT 0x331C6C4
	0x0331C620 MOV X25, X31
	0x0331C624 MOV W26, W31
	0x0331C628 LDR W8, [X0 + 0xE0]
	0x0331C62C CBNZ W8, 0x331C634
	0x0331C630 BL 0x1C16DFC
	0x0331C634 ADD X11, X24, W26, 0x1, SXTW
	0x0331C638 LDRH W8, [X11]
	0x0331C63C LDRH W10, [X11 + 0x2]
	0x0331C640 LDRH W9, [X11 + 0x4]
	0x0331C644 LDRH W11, [X11 + 0x6]
	0x0331C648 ORR W12, W10, W8, 0x0
	0x0331C64C ORR W12, W12, W9, 0x0
	0x0331C650 ORR W12, W12, W11, 0x0
	0x0331C654 CMP W12, 0xFF
	0x0331C658 B.HI 0x331C7FC
	0x0331C65C ADD X12, X29, 0x20
	0x00000000 INVALID

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x10C1000
	009 Move X23, 0xDDA000
	010 Move X22, 0xDE1000
	011 Move W8, [X24+3039]
	012 Move X23, [X23+368]
	013 Move X22, [X22+2536]
	014 Move X19, X2
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xDDA000
	022 Move X0, [X0+368]
	023 Call 0x1C17CF4
	024 Move X0, 0xDE1000
	025 Move X0, [X0+2536]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+3039], W8
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Move X0, [X23]
	031 Add X1, X31, 12
	032 NotImplemented "Instruction STRH not yet implemented."
	033 Call 0x1C17E04
	034 Move X8, [X22]
	035 Move X21, X0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X0, X21
	042 Move X1, X20
	043 Move X2, X19
	044 Call Convert.DefaultToType, X0, X1, X2
	045 Move X20, [X31+48]
	046 Move X19, [X31+56]
	047 Move X22, [X31+32]
	048 Move X21, [X31+40]
	049 Move X24, [X31+16]
	050 Move X23, [X31+24]
	051 Move X30, [X31+64]
	052 Return X0

Method: System.Boolean IsControl(System.Char c)

Disassembly:
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x0331C670 UBFM W10, W10, 0x14, 0x13
	0x0331C674 ORR W8, W10, W8, 0x12
	0x0331C678 ORR W8, W8, W11, 0x0
	0x0331C67C ORR W20, W8, W9, 0x6
	0x0331C680 TBNZ X20, 0x1F, 0x331C7FC
	0x0331C684 LDR X0, [X28]
	0x0331C688 LDR W8, [X0 + 0xE0]
	0x0331C68C CBNZ W8, 0x331C694
	0x0331C690 BL 0x1C16DFC
	0x0331C694 ADD W26, W26, 0x4
	0x0331C698 UBFM W8, W20, 0x10, 0x1F
	0x0331C69C ADD X9, X23, X25
	0x0331C6A0 UBFM W10, W20, 0x8, 0x1F
	0x0331C6A4 CMP W26, W19
	0x0331C6A8 STRB W8, [X9]
	0x0331C6AC STRB W10, [X9 + 0x1]
	0x0331C6B0 STRB W20, [X9 + 0x2]
	0x0331C6B4 B.GE 0x331C6D0
	0x0331C6B8 LDR X0, [X28]
	0x0331C6BC ADD X25, X25, 0x3
	0x0331C6C0 B 0x331C628
	0x0331C6C4 MOV W25, W31
	0x0331C6C8 MOV W26, W31
	0x0331C6CC B 0x331C6D4
	0x0331C6D0 ADD W25, W25, 0x3
	0x0331C6D4 SUB W8, W27, 0x4
	0x0331C6D8 CMP W19, W8
	0x0331C6DC B.NE 0x331C7FC
	0x0331C6E0 CMP W26, W27
	0x0331C6E4 B.EQ 0x331C7FC
	0x0331C6E8 LDRH W9, [X24, W8, SXTW]
	0x0331C6EC SUB W8, W27, 0x3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C1000
	006 Move X20, 0xDDA000
	007 Move W8, [X21+3040]
	008 Move X20, [X20+368]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDDA000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3040], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 And W8, W19, 0xFFFF
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move W0, W19
	032 Call Char.GetLatin1UnicodeCategory, X0
	033 Move W0, W19
	034 Move X1, X31
	035 Call CharUnicodeInfo.GetUnicodeCategory, X0
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0

Method: System.Boolean IsLetterOrDigit(System.String s, System.Int32 index)

Disassembly:
	0x0331C6F0 SUB W10, W27, 0x2
	0x0331C6F4 LDRH W11, [X24, W8, SXTW]
	0x0331C6F8 LDRH W8, [X24, W10, SXTW]
	0x0331C6FC SUB W10, W27, 0x1
	0x0331C700 LDRH W10, [X24, W10, SXTW]
	0x0331C704 ORR W12, W11, W9, 0x0
	0x0331C708 ORR W12, W12, W8, 0x0
	0x0331C70C ORR W12, W12, W10, 0x0
	0x0331C710 CMP W12, 0xFF
	0x0331C714 B.HI 0x331C7FC
	0x0331C718 ADD X12, X29, 0x20
	0x00000000 INVALID
	0x00000000 INVALID
	0x0331C724 CMP W10, 0x3D
	0x0331C728 UBFM W11, W11, 0x14, 0x13
	0x0331C72C ORR W9, W11, W9, 0x12
	0x0331C730 B.NE 0x331C75C
	0x0331C734 CMP W8, 0x3D
	0x0331C738 B.NE 0x331C7AC
	0x0331C73C SUB W8, W22, 0x1
	0x0331C740 CMP W25, W8
	0x0331C744 B.GT 0x331C7FC
	0x0331C748 TBNZ X9, 0x1F, 0x331C7FC
	0x0331C74C ADD X8, X23, W25, SXTW
	0x0331C750 UBFM W19, W9, 0x10, 0x1F
	0x0331C754 MOVZ W9, 0x1
	0x0331C758 B 0x331C7E0
	0x0331C75C SUB W11, W22, 0x3
	0x0331C760 CMP W25, W11
	0x0331C764 B.GT 0x331C7FC
	0x00000000 INVALID
	0x00000000 INVALID
	0x0331C770 ORR W9, W9, W10, 0x0
	0x0331C774 ORR W19, W9, W8, 0x6
	0x0331C778 TBNZ X19, 0x1F, 0x331C7FC
	0x0331C77C LDR X0, [X28]
	0x0331C780 ADD X20, X23, W25, SXTW
	0x0331C784 LDR W8, [X0 + 0xE0]
	0x0331C788 CBNZ W8, 0x331C790
	0x0331C78C BL 0x1C16DFC
	0x0331C790 UBFM W9, W19, 0x10, 0x1F
	0x0331C794 UBFM W10, W19, 0x8, 0x1F
	0x0331C798 ADD X8, X20, 0x2
	0x0331C79C STRB W9, [X20]
	0x0331C7A0 STRB W10, [X20 + 0x1]
	0x0331C7A4 MOVZ W9, 0x3
	0x0331C7A8 B 0x331C7E0
	0x0331C7AC SUB W10, W22, 0x2
	0x0331C7B0 CMP W25, W10
	0x0331C7B4 B.GT 0x331C7FC
	0x0331C7B8 ADD X8, X29, X8
	0x00000000 INVALID
	0x0331C7C0 ORR W8, W9, W8, 0x6
	0x0331C7C4 TBNZ X8, 0x1F, 0x331C7FC
	0x0331C7C8 UBFM W9, W8, 0x10, 0x1F
	0x0331C7CC ADD W10, W25, 0x1
	0x0331C7D0 UBFM W19, W8, 0x8, 0x1F
	0x0331C7D4 STRB W9, [X23, W25, SXTW]
	0x0331C7D8 ADD X8, X23, W10, SXTW
	0x0331C7DC MOVZ W9, 0x2
	0x0331C7E0 ADD W25, W25, W9
	0x0331C7E4 CMP W27, W21
	0x0331C7E8 ADD W26, W26, 0x4
	0x0331C7EC STRB W19, [X8]
	0x0331C7F0 B.NE 0x331C7FC
	0x0331C7F4 LDP X27, X20, [X31]
	0x0331C7F8 B 0x331C60C
	0x0331C7FC LDP X27, X20, [X31]
	0x0331C800 MOV W0, W31
	0x0331C804 STR W26, [X27]
	0x0331C808 STR W25, [X20]
	0x0331C80C LDP X20, X19, [X31 + 0x60]
	0x0331C810 LDP X22, X21, [X31 + 0x50]
	0x0331C814 LDP X24, X23, [X31 + 0x40]
	0x0331C818 LDP X26, X25, [X31 + 0x30]
	0x0331C81C LDP X28, X27, [X31 + 0x20]
	0x0331C820 LDP X29, X30, [X31 + 0x10]
	0x0331C824 ADD X31, X31, 0x70
	0x0331C828 RET
	0x0331C82C BL 0x1C16F20
	0x0331C830 BL 0x1C16F28
	0x0331C834 LDRH W8, [X0]
	0x0331C838 LDRH W10, [X0 + 0x2]
	0x0331C83C LDRH W9, [X0 + 0x4]
	0x0331C840 LDRH W11, [X0 + 0x6]
	0x0331C844 ORR W12, W10, W8, 0x0
	0x0331C848 ORR W12, W12, W9, 0x0
	0x0331C84C ORR W12, W12, W11, 0x0
	0x0331C850 CMP W12, 0xFF
	0x0331C854 B.HI 0x331C87C
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10C1000
	007 Move W8, [X21+3041]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDDA000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3041], W8
	019 Compare X20, 0
	020 JumpIfEqual {70}
	021 Move W8, [X20+16]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X22, 0xDDA000
	024 Move X22, [X22+368]
	025 Move X0, X20
	026 Move W1, W19
	027 Move X2, X31
	028 Call String.get_Chars, X0, X1
	029 Move X8, [X22]
	030 Move W21, W0
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {36}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 And W8, W21, 0xFFFF
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, [X22]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move W0, W21
	044 Call Char.GetLatin1UnicodeCategory, X0
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W8, 287
	047 NotImplemented "Instruction LSRV not yet implemented."
	048 Move X0, X20
	049 Move W1, W19
	050 Move X2, X31
	051 Call CharUnicodeInfo.GetUnicodeCategory, X0, X1
	052 Move X8, [X22]
	053 Move W19, W0
	054 Move W9, [X8+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W8, 287
	061 NotImplemented "Instruction LSRV not yet implemented."
	062 And W0, W8, 1
	063 Move W0, W31
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Return X0
	070 Move X0, 0xDDD000
	071 Move X0, [X0+1320]
	072 Call 0x1C17D08
	073 Call 0x1C17F10
	074 Move X19, X0
	075 Move X0, 0xE01000
	076 Move X0, [X0+3264]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X19
	080 Call ArgumentNullException..ctor, X0, X1
	081 Move X0, 0xDE0000
	082 Move X0, [X0+1888]
	083 Call 0x1C17D08
	084 Call 0x1C17F10
	085 Move X19, X0
	086 Move X0, 0xDE3000
	087 Move X0, [X0+304]
	088 Call 0x1C17D08
	089 Move X1, X0
	090 Move X0, X19
	091 Call ArgumentOutOfRangeException..ctor, X0, X1
	092 Move X0, 0xE0D000
	093 Move X0, [X0+232]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X19
	097 Call 0x1C17DEC

Method: System.Boolean CheckNumber(System.Globalization.UnicodeCategory uc)

Disassembly:
	0x00000000 INVALID
	0x0331C868 UBFM W10, W10, 0x14, 0x13
	0x0331C86C ORR W8, W10, W8, 0x12
	0x0331C870 ORR W8, W8, W11, 0x0

ISIL:
	001 Subtract W8, W0, 8
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean IsNumber(System.Char c)

Disassembly:
	0x0331C874 ORR W0, W8, W9, 0x6
	0x0331C878 RET
	0x0331C87C MOVN W0, 0x0
	0x0331C880 RET
	0x0331C884 UBFM W8, W1, 0x10, 0x1F
	0x0331C888 UBFM W9, W1, 0x8, 0x1F
	0x0331C88C STRB W8, [X0]
	0x0331C890 STRB W9, [X0 + 0x1]
	0x0331C894 STRB W1, [X0 + 0x2]
	0x0331C898 RET
	0x0331C89C STR X30, [X31 - 0x20]!
	0x0331C8A0 STP X20, X19, [X31 + 0x10]
	0x0331C8A4 ADRP X20, 0x10C0000
	0x0331C8A8 LDRB W8, [X20 + 0xBEF]
	0x0331C8AC MOV X19, X0
	0x0331C8B0 TBNZ X8, 0x0, 0x331C8C8
	0x0331C8B4 ADRP X0, 0xE07000
	0x0331C8B8 LDR X0, [X0 + 0xE10]
	0x0331C8BC BL 0x1C16CF4
	0x0331C8C0 MOVZ W8, 0x1
	0x0331C8C4 STRB W8, [X20 + 0xBEF]
	0x0331C8C8 CBZ X19, 0x331C928
	0x0331C8CC ADRP X20, 0xE07000
	0x0331C8D0 LDR X20, [X20 + 0xE10]
	0x0331C8D4 MOV X0, X19
	0x0331C8D8 LDR X1, [X20]
	0x0331C8DC BL 0x1C16E00
	0x0331C8E0 CBZ X0, 0x331C930
	0x0331C8E4 LDR X8, [X0]
	0x0331C8E8 LDR X1, [X20]
	0x0331C8EC MOV X19, X0
	0x0331C8F0 LDRH W9, [X8 + 0x12E]
	0x0331C8F4 CBZ X9, 0x331C918
	0x0331C8F8 LDR X10, [X8 + 0xB0]
	0x0331C8FC ADD X10, X10, 0x8
	0x0331C900 LDUR X11, [X10 - 0x8]
	0x0331C904 CMP X11, X1
	0x0331C908 B.EQ 0x331C940
	0x0331C90C SUBS X9, X9, 0x1
	0x0331C910 ADD X10, X10, 0x10
	0x0331C914 B.NE 0x331C900
	0x0331C918 MOV X0, X19
	0x0331C91C MOV W2, W31
	0x0331C920 BL 0x1C5C788
	0x0331C924 B 0x331C94C
	0x0331C928 MOV W0, W31
	0x0331C92C B 0x331C934
	0x0331C930 MOVZ W0, 0x1
	0x0331C934 LDP X20, X19, [X31 + 0x10]
	0x0331C938 LDR X30, [X31], #0x20
	0x0331C93C RET
	0x0331C940 LDRSW X9, [X10]
	0x0331C944 ADD X8, X8, X9, 0x4, LSL
	0x0331C948 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C1000
	006 Move X20, 0xDDA000
	007 Move W8, [X21+3042]
	008 Move X20, [X20+368]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDDA000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3042], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 And W8, W19, 0xFFFF
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 And W8, W19, 0xFFFF
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract W8, W19, 48
	034 And W8, W8, 0xFFFF
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W0, W19
	037 Move X1, X31
	038 Call CharUnicodeInfo.GetUnicodeCategory, X0
	039 Move X8, [X20]
	040 Move W19, W0
	041 Move W9, [X8+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {54}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X0, [X20]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move W0, W19
	052 Call Char.GetLatin1UnicodeCategory, X0
	053 Move W19, W0
	054 Subtract W8, W19, 8
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 NotImplemented "Instruction CSET not yet implemented."
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Return X0

Method: System.Boolean IsNumber(System.String s, System.Int32 index)

Disassembly:
	0x0331C94C LDP X2, X1, [X0]
	0x0331C950 MOV X0, X19
	0x0331C954 LDP X20, X19, [X31 + 0x10]
	0x0331C958 LDR X30, [X31], #0x20
	0x0331C95C BR X2
	0x0331C960 SUB X31, X31, 0x60
	0x0331C964 STR X30, [X31 + 0x20]
	0x0331C968 STP X24, X23, [X31 + 0x30]
	0x0331C96C STP X22, X21, [X31 + 0x40]
	0x0331C970 STP X20, X19, [X31 + 0x50]
	0x0331C974 MRS X23, 0xC000
	0x0331C978 LDR X8, [X23 + 0x28]
	0x0331C97C ADRP X20, 0x10C0000
	0x0331C980 MOV X19, X2
	0x0331C984 MOV W22, W1
	0x0331C988 STR X8, [X31 + 0x18]
	0x0331C98C LDRB W8, [X20 + 0xBF0]
	0x0331C990 MOV X21, X0
	0x0331C994 TBNZ X8, 0x0, 0x331CA54
	0x0331C998 ADRP X0, 0xDD7000
	0x0331C99C LDR X0, [X0 + 0xB58]
	0x0331C9A0 BL 0x1C16CF4
	0x0331C9A4 ADRP X0, 0xDD8000
	0x0331C9A8 LDR X0, [X0 + 0x9D8]
	0x0331C9AC BL 0x1C16CF4
	0x0331C9B0 ADRP X0, 0xDD9000
	0x0331C9B4 LDR X0, [X0 + 0x170]
	0x0331C9B8 BL 0x1C16CF4
	0x0331C9BC ADRP X0, 0xDD8000
	0x0331C9C0 LDR X0, [X0 + 0x9F0]
	0x0331C9C4 BL 0x1C16CF4
	0x0331C9C8 ADRP X0, 0xDFF000
	0x0331C9CC LDR X0, [X0 + 0x5F0]
	0x0331C9D0 BL 0x1C16CF4
	0x0331C9D4 ADRP X0, 0xDDA000
	0x0331C9D8 LDR X0, [X0 + 0x978]
	0x0331C9DC BL 0x1C16CF4
	0x0331C9E0 ADRP X0, 0xE07000
	0x0331C9E4 LDR X0, [X0 + 0xE10]
	0x0331C9E8 BL 0x1C16CF4
	0x0331C9EC ADRP X0, 0xDDB000
	0x0331C9F0 LDR X0, [X0 + 0x628]
	0x0331C9F4 BL 0x1C16CF4
	0x0331C9F8 ADRP X0, 0xDD7000
	0x0331C9FC LDR X0, [X0 + 0x758]
	0x0331CA00 BL 0x1C16CF4
	0x0331CA04 ADRP X0, 0xDD9000
	0x0331CA08 LDR X0, [X0 + 0xA60]
	0x0331CA0C BL 0x1C16CF4
	0x0331CA10 ADRP X0, 0xE00000
	0x0331CA14 LDR X0, [X0 + 0x6B0]
	0x0331CA18 BL 0x1C16CF4
	0x0331CA1C ADRP X0, 0xDD7000
	0x0331CA20 LDR X0, [X0 + 0xA90]
	0x0331CA24 BL 0x1C16CF4
	0x0331CA28 ADRP X0, 0xDDC000
	0x0331CA2C LDR X0, [X0 + 0x658]
	0x0331CA30 BL 0x1C16CF4
	0x0331CA34 ADRP X0, 0xDDF000
	0x0331CA38 LDR X0, [X0 + 0x720]
	0x0331CA3C BL 0x1C16CF4
	0x0331CA40 ADRP X0, 0xDD8000
	0x0331CA44 LDR X0, [X0 + 0x758]
	0x0331CA48 BL 0x1C16CF4
	0x0331CA4C MOVZ W8, 0x1
	0x0331CA50 STRB W8, [X20 + 0xBF0]
	0x0331CA54 CBZ X21, 0x331CAD8
	0x0331CA58 ADRP X24, 0xE07000
	0x0331CA5C LDR X24, [X24 + 0xE10]
	0x0331CA60 MOV X0, X21
	0x0331CA64 LDR X1, [X24]
	0x0331CA68 BL 0x1C16E00
	0x0331CA6C CBZ X0, 0x331D194
	0x0331CA70 CMP W22, 0x12
	0x0331CA74 B.HI 0x331D21C
	0x0331CA78 ADRP X9, 0xFFFFFFFFFD87A000
	0x0331CA7C MOV W8, W22
	0x0331CA80 ADD X9, X9, 0x644
	0x0331CA84 ADR X10, 0x14
	0x0331CA88 LDRH W11, [X9, X8, LSL #1]
	0x0331CA8C ADD X10, X10, X11, 0x2, LSL
	0x0331CA90 MOV X20, X0
	0x0331CA94 BR X10
	0x0331CA98 LDR X8, [X20]
	0x0331CA9C LDR X1, [X24]
	0x0331CAA0 LDRH W9, [X8 + 0x12E]
	0x0331CAA4 CBZ X9, 0x331CAC8
	0x0331CAA8 LDR X10, [X8 + 0xB0]
	0x0331CAAC ADD X10, X10, 0x8
	0x0331CAB0 LDUR X11, [X10 - 0x8]
	0x0331CAB4 CMP X11, X1
	0x0331CAB8 B.EQ 0x331CEB0
	0x0331CABC SUBS X9, X9, 0x1
	0x0331CAC0 ADD X10, X10, 0x10
	0x0331CAC4 B.NE 0x331CAB0
	0x0331CAC8 MOVZ W2, 0x1
	0x0331CACC MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10C1000
	007 Move W8, [X21+3043]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDDA000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3043], W8
	019 Compare X20, 0
	020 JumpIfEqual {76}
	021 Move W8, [X20+16]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X22, 0xDDA000
	024 Move X22, [X22+368]
	025 Move X0, X20
	026 Move W1, W19
	027 Move X2, X31
	028 Call String.get_Chars, X0, X1
	029 Move X8, [X22]
	030 Move W21, W0
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {36}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 And W8, W21, 0xFFFF
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, [X22]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 And W8, W21, 0xFFFF
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Subtract W8, W21, 48
	046 And W8, W8, 0xFFFF
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X0, X20
	049 Move W1, W19
	050 Move X2, X31
	051 Call CharUnicodeInfo.GetUnicodeCategory, X0, X1
	052 Move X8, [X22]
	053 Move W19, W0
	054 Move W9, [X8+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {67}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Move X0, [X22]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move W0, W21
	065 Call Char.GetLatin1UnicodeCategory, X0
	066 Move W19, W0
	067 Subtract W8, W19, 8
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 NotImplemented "Instruction CSET not yet implemented."
	074 Move X30, [X31+48]
	075 Return X0
	076 Move X0, 0xDDD000
	077 Move X0, [X0+1320]
	078 Call 0x1C17D08
	079 Call 0x1C17F10
	080 Move X19, X0
	081 Move X0, 0xE01000
	082 Move X0, [X0+3264]
	083 Call 0x1C17D08
	084 Move X1, X0
	085 Move X0, X19
	086 Call ArgumentNullException..ctor, X0, X1
	087 Move X0, 0xDE0000
	088 Move X0, [X0+1888]
	089 Call 0x1C17D08
	090 Call 0x1C17F10
	091 Move X19, X0
	092 Move X0, 0xDE3000
	093 Move X0, [X0+304]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X19
	097 Call ArgumentOutOfRangeException..ctor, X0, X1
	098 Move X0, 0xE0D000
	099 Move X0, [X0+240]
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X19
	103 Call 0x1C17DEC

Method: System.Boolean CheckSeparator(System.Globalization.UnicodeCategory uc)

Disassembly:
	0x0331CAD0 BL 0x1C5C788
	0x0331CAD4 B 0x331CEC0
	0x0331CAD8 CMP W22, 0x12
	0x0331CADC B.HI 0x331CA58

ISIL:
	001 Subtract W8, W0, 11
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean IsSeparatorLatin1(System.Char c)

Disassembly:
	0x0331CAE0 MOVZ W8, 0x1
	0x0331CAE4 MOVZ W9, 0x3
	0x0331CAE8 LSLV W8, W8, W22
	0x0331CAEC MOVK W9, 0x40000
	0x0331CAF0 ANDS W31, W8, W9, 0x0

ISIL:
	001 Move W8, 0xFF7F
	002 And W8, W0, W8
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.Boolean IsSeparator(System.Char c)

Disassembly:
	0x0331CAF4 B.EQ 0x331CA58
	0x0331CAF8 MOV X21, X31
	0x0331CAFC B 0x331D168
	0x0331CB00 LDR X8, [X20]
	0x0331CB04 LDR X1, [X24]
	0x0331CB08 LDRH W9, [X8 + 0x12E]
	0x0331CB0C CBZ X9, 0x331CB30
	0x0331CB10 LDR X10, [X8 + 0xB0]
	0x0331CB14 ADD X10, X10, 0x8
	0x0331CB18 LDUR X11, [X10 - 0x8]
	0x0331CB1C CMP X11, X1
	0x0331CB20 B.EQ 0x331CE80
	0x0331CB24 SUBS X9, X9, 0x1
	0x0331CB28 ADD X10, X10, 0x10
	0x0331CB2C B.NE 0x331CB18
	0x0331CB30 MOVZ W2, 0xC
	0x0331CB34 MOV X0, X20
	0x0331CB38 BL 0x1C5C788
	0x0331CB3C B 0x331CE90
	0x0331CB40 LDR X8, [X20]
	0x0331CB44 LDR X1, [X24]
	0x0331CB48 LDRH W9, [X8 + 0x12E]
	0x0331CB4C CBZ X9, 0x331CB70
	0x0331CB50 LDR X10, [X8 + 0xB0]
	0x0331CB54 ADD X10, X10, 0x8
	0x0331CB58 LDUR X11, [X10 - 0x8]
	0x0331CB5C CMP X11, X1
	0x0331CB60 B.EQ 0x331CEE4
	0x0331CB64 SUBS X9, X9, 0x1
	0x0331CB68 ADD X10, X10, 0x10
	0x0331CB6C B.NE 0x331CB58
	0x0331CB70 MOVZ W2, 0x9
	0x0331CB74 MOV X0, X20
	0x0331CB78 BL 0x1C5C788
	0x0331CB7C B 0x331CEF4
	0x0331CB80 LDR X8, [X20]
	0x0331CB84 LDR X1, [X24]
	0x0331CB88 LDRH W9, [X8 + 0x12E]
	0x0331CB8C CBZ X9, 0x331CBB0
	0x0331CB90 LDR X10, [X8 + 0xB0]
	0x0331CB94 ADD X10, X10, 0x8
	0x0331CB98 LDUR X11, [X10 - 0x8]
	0x0331CB9C CMP X11, X1
	0x0331CBA0 B.EQ 0x331CF10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C1000
	006 Move X20, 0xDDA000
	007 Move W8, [X21+3044]
	008 Move X20, [X20+368]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDDA000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3044], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 And W8, W19, 0xFFFF
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move W8, 0xFF7F
	032 And W8, W19, W8
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSET not yet implemented."
	035 Move W0, W19
	036 Move X1, X31
	037 Call CharUnicodeInfo.GetUnicodeCategory, X0
	038 Move X8, [X20]
	039 Move W19, W0
	040 Move W9, [X8+224]
	041 Compare W9, 0
	042 JumpIfNotEqual {45}
	043 Move X0, X8
	044 Call 0x1C17DFC
	045 Subtract W8, W19, 11
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CSET not yet implemented."
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return X0

Method: System.Boolean IsSurrogate(System.Char c)

Disassembly:
	0x0331CBA4 SUBS X9, X9, 0x1
	0x0331CBA8 ADD X10, X10, 0x10
	0x0331CBAC B.NE 0x331CB98
	0x0331CBB0 MOVZ W2, 0xE

ISIL:
	001 Move W8, W0
	002 ShiftRight W8, 11
	003 And W8, W8, 0x7FFF
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSET not yet implemented."
	006 Return X0

Method: System.Boolean IsSurrogate(System.String s, System.Int32 index)

Disassembly:
	0x0331CBB4 MOV X0, X20
	0x0331CBB8 BL 0x1C5C788
	0x0331CBBC B 0x331CF20
	0x0331CBC0 LDR X8, [X20]
	0x0331CBC4 LDR X1, [X24]
	0x0331CBC8 LDRH W9, [X8 + 0x12E]
	0x0331CBCC CBZ X9, 0x331CBF0
	0x0331CBD0 LDR X10, [X8 + 0xB0]
	0x0331CBD4 ADD X10, X10, 0x8
	0x0331CBD8 LDUR X11, [X10 - 0x8]
	0x0331CBDC CMP X11, X1
	0x0331CBE0 B.EQ 0x331CF3C
	0x0331CBE4 SUBS X9, X9, 0x1
	0x0331CBE8 ADD X10, X10, 0x10
	0x0331CBEC B.NE 0x331CBD8
	0x0331CBF0 MOVZ W2, 0x4
	0x0331CBF4 MOV X0, X20
	0x0331CBF8 BL 0x1C5C788
	0x0331CBFC B 0x331CF4C
	0x0331CC00 LDR X8, [X20]
	0x0331CC04 LDR X1, [X24]
	0x0331CC08 LDRH W9, [X8 + 0x12E]
	0x0331CC0C CBZ X9, 0x331CC30
	0x0331CC10 LDR X10, [X8 + 0xB0]
	0x0331CC14 ADD X10, X10, 0x8
	0x0331CC18 LDUR X11, [X10 - 0x8]
	0x0331CC1C CMP X11, X1
	0x0331CC20 B.EQ 0x331CF68
	0x0331CC24 SUBS X9, X9, 0x1
	0x0331CC28 ADD X10, X10, 0x10
	0x0331CC2C B.NE 0x331CC18
	0x0331CC30 MOVZ W2, 0x6
	0x0331CC34 MOV X0, X20
	0x0331CC38 BL 0x1C5C788
	0x0331CC3C B 0x331CF78
	0x0331CC40 LDR X8, [X20]
	0x0331CC44 LDR X1, [X24]
	0x0331CC48 LDRH W9, [X8 + 0x12E]
	0x0331CC4C CBZ X9, 0x331CC70
	0x0331CC50 LDR X10, [X8 + 0xB0]
	0x0331CC54 ADD X10, X10, 0x8
	0x0331CC58 LDUR X11, [X10 - 0x8]
	0x0331CC5C CMP X11, X1
	0x0331CC60 B.EQ 0x331CF94
	0x0331CC64 SUBS X9, X9, 0x1
	0x0331CC68 ADD X10, X10, 0x10
	0x0331CC6C B.NE 0x331CC58
	0x0331CC70 MOVZ W2, 0xA
	0x0331CC74 MOV X0, X20
	0x0331CC78 BL 0x1C5C788
	0x0331CC7C B 0x331CFA4
	0x0331CC80 LDR X8, [X20]
	0x0331CC84 LDR X1, [X24]
	0x0331CC88 LDRH W9, [X8 + 0x12E]
	0x0331CC8C CBZ X9, 0x331CCB0
	0x0331CC90 LDR X10, [X8 + 0xB0]
	0x0331CC94 ADD X10, X10, 0x8
	0x0331CC98 LDUR X11, [X10 - 0x8]
	0x0331CC9C CMP X11, X1
	0x0331CCA0 B.EQ 0x331CFC8
	0x0331CCA4 SUBS X9, X9, 0x1
	0x0331CCA8 ADD X10, X10, 0x10
	0x0331CCAC B.NE 0x331CC98

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C1000
	006 Move W8, [X21+3045]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xDDA000
	014 Move X0, [X0+368]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3045], W8
	018 Compare X20, 0
	019 JumpIfEqual {45}
	020 Move W8, [X20+16]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X21, 0xDDA000
	023 Move X21, [X21+368]
	024 Move X0, X20
	025 Move W1, W19
	026 Move X2, X31
	027 Call String.get_Chars, X0, X1
	028 Move X8, [X21]
	029 Move W19, W0
	030 Move W9, [X8+224]
	031 Compare W9, 0
	032 JumpIfNotEqual {35}
	033 Move X0, X8
	034 Call 0x1C17DFC
	035 Move W8, W19
	036 ShiftRight W8, 11
	037 And W8, W8, 0x7FFF
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSET not yet implemented."
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return X0
	045 Move X0, 0xDDD000
	046 Move X0, [X0+1320]
	047 Call 0x1C17D08
	048 Call 0x1C17F10
	049 Move X19, X0
	050 Move X0, 0xE01000
	051 Move X0, [X0+3264]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X19
	055 Call ArgumentNullException..ctor, X0, X1
	056 Move X0, 0xDE0000
	057 Move X0, [X0+1888]
	058 Call 0x1C17D08
	059 Call 0x1C17F10
	060 Move X19, X0
	061 Move X0, 0xDE3000
	062 Move X0, [X0+304]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X19
	066 Call ArgumentOutOfRangeException..ctor, X0, X1
	067 Move X0, 0xE0D000
	068 Move X0, [X0+248]
	069 Call 0x1C17D08
	070 Move X1, X0
	071 Move X0, X19
	072 Call 0x1C17DEC

Method: System.Boolean IsWhiteSpace(System.String s, System.Int32 index)

Disassembly:
	0x0331CCB0 MOVZ W2, 0xF
	0x0331CCB4 MOV X0, X20
	0x0331CCB8 BL 0x1C5C788
	0x0331CCBC B 0x331CFD8
	0x0331CCC0 LDR X8, [X20]
	0x0331CCC4 LDR X1, [X24]
	0x0331CCC8 LDRH W9, [X8 + 0x12E]
	0x0331CCCC CBZ X9, 0x331CCF0
	0x0331CCD0 LDR X10, [X8 + 0xB0]
	0x0331CCD4 ADD X10, X10, 0x8
	0x0331CCD8 LDUR X11, [X10 - 0x8]
	0x0331CCDC CMP X11, X1
	0x0331CCE0 B.EQ 0x331CFFC
	0x0331CCE4 SUBS X9, X9, 0x1
	0x0331CCE8 ADD X10, X10, 0x10
	0x0331CCEC B.NE 0x331CCD8
	0x0331CCF0 MOVZ W2, 0x2
	0x0331CCF4 MOV X0, X20
	0x0331CCF8 BL 0x1C5C788
	0x0331CCFC B 0x331D00C
	0x0331CD00 LDR X8, [X20]
	0x0331CD04 LDR X1, [X24]
	0x0331CD08 LDRH W9, [X8 + 0x12E]
	0x0331CD0C CBZ X9, 0x331CD30
	0x0331CD10 LDR X10, [X8 + 0xB0]
	0x0331CD14 ADD X10, X10, 0x8
	0x0331CD18 LDUR X11, [X10 - 0x8]
	0x0331CD1C CMP X11, X1
	0x0331CD20 B.EQ 0x331D028
	0x0331CD24 SUBS X9, X9, 0x1
	0x0331CD28 ADD X10, X10, 0x10
	0x0331CD2C B.NE 0x331CD18
	0x0331CD30 MOVZ W2, 0x3
	0x0331CD34 MOV X0, X20
	0x0331CD38 BL 0x1C5C788
	0x0331CD3C B 0x331D038
	0x0331CD40 LDR X8, [X20]
	0x0331CD44 LDR X1, [X24]
	0x0331CD48 LDRH W9, [X8 + 0x12E]
	0x0331CD4C CBZ X9, 0x331CD70
	0x0331CD50 LDR X10, [X8 + 0xB0]
	0x0331CD54 ADD X10, X10, 0x8
	0x0331CD58 LDUR X11, [X10 - 0x8]
	0x0331CD5C CMP X11, X1
	0x0331CD60 B.EQ 0x331D05C
	0x0331CD64 SUBS X9, X9, 0x1
	0x0331CD68 ADD X10, X10, 0x10
	0x0331CD6C B.NE 0x331CD58
	0x0331CD70 MOVZ W2, 0x5
	0x0331CD74 MOV X0, X20
	0x0331CD78 BL 0x1C5C788
	0x0331CD7C B 0x331D06C
	0x0331CD80 LDR X8, [X20]
	0x0331CD84 LDR X1, [X24]
	0x0331CD88 LDRH W9, [X8 + 0x12E]
	0x0331CD8C CBZ X9, 0x331CDB0
	0x0331CD90 LDR X10, [X8 + 0xB0]
	0x0331CD94 ADD X10, X10, 0x8
	0x0331CD98 LDUR X11, [X10 - 0x8]
	0x0331CD9C CMP X11, X1
	0x0331CDA0 B.EQ 0x331D090
	0x0331CDA4 SUBS X9, X9, 0x1
	0x0331CDA8 ADD X10, X10, 0x10
	0x0331CDAC B.NE 0x331CD98
	0x0331CDB0 MOVZ W2, 0x7
	0x0331CDB4 MOV X0, X20
	0x0331CDB8 BL 0x1C5C788
	0x0331CDBC B 0x331D0A0
	0x0331CDC0 LDR X8, [X20]
	0x0331CDC4 LDR X1, [X24]
	0x0331CDC8 LDRH W9, [X8 + 0x12E]
	0x0331CDCC CBZ X9, 0x331CDF0
	0x0331CDD0 LDR X10, [X8 + 0xB0]
	0x0331CDD4 ADD X10, X10, 0x8
	0x0331CDD8 LDUR X11, [X10 - 0x8]
	0x0331CDDC CMP X11, X1
	0x0331CDE0 B.EQ 0x331D0BC
	0x0331CDE4 SUBS X9, X9, 0x1
	0x0331CDE8 ADD X10, X10, 0x10
	0x0331CDEC B.NE 0x331CDD8
	0x0331CDF0 MOVZ W2, 0x8
	0x0331CDF4 MOV X0, X20
	0x0331CDF8 BL 0x1C5C788
	0x0331CDFC B 0x331D0CC
	0x0331CE00 LDR X8, [X20]
	0x0331CE04 LDR X1, [X24]
	0x0331CE08 LDRH W9, [X8 + 0x12E]
	0x0331CE0C CBZ X9, 0x331CE30
	0x0331CE10 LDR X10, [X8 + 0xB0]
	0x0331CE14 ADD X10, X10, 0x8
	0x0331CE18 LDUR X11, [X10 - 0x8]
	0x0331CE1C CMP X11, X1
	0x0331CE20 B.EQ 0x331D0F0
	0x0331CE24 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10C1000
	007 Move W8, [X21+3046]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDDA000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3046], W8
	019 Compare X20, 0
	020 JumpIfEqual {75}
	021 Move W8, [X20+16]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X22, 0xDDA000
	024 Move X22, [X22+368]
	025 Move X0, X20
	026 Move W1, W19
	027 Move X2, X31
	028 Call String.get_Chars, X0, X1
	029 Move X8, [X22]
	030 Move W21, W0
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {36}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 And W8, W21, 0xFFFF
	037 Move X0, X20
	038 Move W1, W19
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X2, X31
	041 Call String.get_Chars, X0, X1
	042 Move X8, [X22]
	043 Move W19, W0
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 And W8, W19, 0xFFFF
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W0, 1
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X2, X31
	057 Move X30, [X31+48]
	058 Call CharUnicodeInfo.IsWhiteSpace, X0, X1
	059 Return X0
	060 Subtract W9, W8, 9
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CSET not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction CSET not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Or W8, W10, W9
	067 NotImplemented "Instruction CSET not yet implemented."
	068 Or W0, W9, W8
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Return X0
	075 Move X0, 0xDDD000
	076 Move X0, [X0+1320]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X19, X0
	080 Move X0, 0xE01000
	081 Move X0, [X0+3264]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X19
	085 Call ArgumentNullException..ctor, X0, X1
	086 Move X0, 0xDE0000
	087 Move X0, [X0+1888]
	088 Call 0x1C17D08
	089 Call 0x1C17F10
	090 Move X19, X0
	091 Move X0, 0xDE3000
	092 Move X0, [X0+304]
	093 Call 0x1C17D08
	094 Move X1, X0
	095 Move X0, X19
	096 Call ArgumentOutOfRangeException..ctor, X0, X1
	097 Move X0, 0xE0D000
	098 Move X0, [X0+256]
	099 Call 0x1C17D08
	100 Move X1, X0
	101 Move X0, X19
	102 Call 0x1C17DEC

Method: System.Globalization.UnicodeCategory GetUnicodeCategory(System.Char c)

Disassembly:
	0x0331CE28 ADD X10, X10, 0x10
	0x0331CE2C B.NE 0x331CE18
	0x0331CE30 MOVZ W2, 0xB
	0x0331CE34 MOV X0, X20
	0x0331CE38 BL 0x1C5C788
	0x0331CE3C B 0x331D100
	0x0331CE40 LDR X8, [X20]
	0x0331CE44 LDR X1, [X24]
	0x0331CE48 LDRH W9, [X8 + 0x12E]
	0x0331CE4C CBZ X9, 0x331CE70
	0x0331CE50 LDR X10, [X8 + 0xB0]
	0x0331CE54 ADD X10, X10, 0x8
	0x0331CE58 LDUR X11, [X10 - 0x8]
	0x0331CE5C CMP X11, X1
	0x0331CE60 B.EQ 0x331D128
	0x0331CE64 SUBS X9, X9, 0x1
	0x0331CE68 ADD X10, X10, 0x10
	0x0331CE6C B.NE 0x331CE58
	0x0331CE70 MOVZ W2, 0xD
	0x0331CE74 MOV X0, X20
	0x0331CE78 BL 0x1C5C788
	0x0331CE7C B 0x331D138
	0x0331CE80 LDR W9, [X10]
	0x0331CE84 ADD W9, W9, 0xC
	0x0331CE88 ADD X8, X8, W9, 0x4, SXTW
	0x0331CE8C ADD X0, X8, 0x138
	0x0331CE90 LDP X8, X2, [X0]
	0x0331CE94 MOV X0, X20
	0x0331CE98 MOV X1, X19
	0x0331CE9C BLR X8
	0x0331CEA0 ADRP X8, 0xDDA000
	0x0331CEA4 LDR X8, [X8 + 0x978]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C1000
	006 Move X20, 0xDDA000
	007 Move W8, [X21+3047]
	008 Move X20, [X20+368]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDDA000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3047], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 And W0, W19, 0xFFFF
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move W0, W19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call Char.GetLatin1UnicodeCategory, X0
	037 Return X0
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X1, X31
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Call CharUnicodeInfo.GetUnicodeCategory, X0
	044 Return X0

Method: System.Globalization.UnicodeCategory GetUnicodeCategory(System.String s, System.Int32 index)

Disassembly:
	0x0331CEA8 STR D0, [X31 + 0x8]
	0x0331CEAC B 0x331D11C
	0x0331CEB0 LDR W9, [X10]
	0x0331CEB4 ADD W9, W9, 0x1
	0x0331CEB8 ADD X8, X8, W9, 0x4, SXTW
	0x0331CEBC ADD X0, X8, 0x138
	0x0331CEC0 LDP X8, X2, [X0]
	0x0331CEC4 MOV X0, X20
	0x0331CEC8 MOV X1, X19
	0x0331CECC BLR X8
	0x0331CED0 ADRP X8, 0xDD7000
	0x0331CED4 LDR X8, [X8 + 0xB58]
	0x0331CED8 AND W9, W0, 0x1
	0x0331CEDC STRB W9, [X31 + 0x8]
	0x0331CEE0 B 0x331D154
	0x0331CEE4 LDR W9, [X10]
	0x0331CEE8 ADD W9, W9, 0x9
	0x0331CEEC ADD X8, X8, W9, 0x4, SXTW
	0x0331CEF0 ADD X0, X8, 0x138
	0x0331CEF4 LDP X8, X2, [X0]
	0x0331CEF8 MOV X0, X20
	0x0331CEFC MOV X1, X19
	0x0331CF00 BLR X8
	0x0331CF04 ADRP X8, 0xDD9000
	0x0331CF08 LDR X8, [X8 + 0xA60]
	0x0331CF0C B 0x331CFBC
	0x0331CF10 LDR W9, [X10]
	0x0331CF14 ADD W9, W9, 0xE
	0x0331CF18 ADD X8, X8, W9, 0x4, SXTW
	0x0331CF1C ADD X0, X8, 0x138
	0x0331CF20 LDP X8, X2, [X0]
	0x0331CF24 MOV X0, X20
	0x0331CF28 MOV X1, X19
	0x0331CF2C BLR X8
	0x0331CF30 ADRP X8, 0xDD8000
	0x0331CF34 LDR X8, [X8 + 0x9F0]
	0x0331CF38 B 0x331CFBC
	0x0331CF3C LDR W9, [X10]
	0x0331CF40 ADD W9, W9, 0x4
	0x0331CF44 ADD X8, X8, W9, 0x4, SXTW
	0x0331CF48 ADD X0, X8, 0x138
	0x0331CF4C LDP X8, X2, [X0]
	0x0331CF50 MOV X0, X20
	0x0331CF54 MOV X1, X19
	0x0331CF58 BLR X8
	0x0331CF5C ADRP X8, 0xDD8000
	0x0331CF60 LDR X8, [X8 + 0x9D8]
	0x0331CF64 B 0x331D050
	0x0331CF68 LDR W9, [X10]
	0x0331CF6C ADD W9, W9, 0x6
	0x0331CF70 ADD X8, X8, W9, 0x4, SXTW
	0x0331CF74 ADD X0, X8, 0x138
	0x0331CF78 LDP X8, X2, [X0]
	0x0331CF7C MOV X0, X20
	0x0331CF80 MOV X1, X19
	0x0331CF84 BLR X8
	0x0331CF88 ADRP X8, 0xDDC000
	0x0331CF8C LDR X8, [X8 + 0x658]
	0x0331CF90 B 0x331D084
	0x0331CF94 LDR W9, [X10]
	0x0331CF98 ADD W9, W9, 0xA
	0x0331CF9C ADD X8, X8, W9, 0x4, SXTW
	0x0331CFA0 ADD X0, X8, 0x138
	0x0331CFA4 LDP X8, X2, [X0]
	0x0331CFA8 MOV X0, X20
	0x0331CFAC MOV X1, X19
	0x0331CFB0 BLR X8
	0x0331CFB4 ADRP X8, 0xDD8000
	0x0331CFB8 LDR X8, [X8 + 0x758]
	0x0331CFBC LDR X8, [X8]
	0x0331CFC0 STR X0, [X31 + 0x8]
	0x0331CFC4 B 0x331D158
	0x0331CFC8 LDR W9, [X10]
	0x0331CFCC ADD W9, W9, 0xF
	0x0331CFD0 ADD X8, X8, W9, 0x4, SXTW
	0x0331CFD4 ADD X0, X8, 0x138
	0x0331CFD8 LDP X8, X2, [X0]
	0x0331CFDC MOV X0, X20
	0x0331CFE0 MOV X1, X19
	0x0331CFE4 BLR X8
	0x0331CFE8 LDR X8, [X23 + 0x28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10C1000
	007 Move W8, [X21+3048]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDDA000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3048], W8
	019 Compare X20, 0
	020 JumpIfEqual {65}
	021 Move W8, [X20+16]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X22, 0xDDA000
	024 Move X22, [X22+368]
	025 Move X0, X20
	026 Move W1, W19
	027 Move X2, X31
	028 Call String.get_Chars, X0, X1
	029 Move X8, [X22]
	030 Move W21, W0
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {36}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 And W8, W21, 0xFFFF
	037 Move X0, X20
	038 Move W1, W19
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X2, X31
	041 Call String.get_Chars, X0, X1
	042 Move X8, [X22]
	043 Move W19, W0
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move W0, W19
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Call Char.GetLatin1UnicodeCategory, X0
	056 Return X0
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X2, X31
	062 Move X30, [X31+48]
	063 Call CharUnicodeInfo.InternalGetUnicodeCategory, X0, X1
	064 Return X0
	065 Move X0, 0xDDD000
	066 Move X0, [X0+1320]
	067 Call 0x1C17D08
	068 Call 0x1C17F10
	069 Move X19, X0
	070 Move X0, 0xE01000
	071 Move X0, [X0+3264]
	072 Call 0x1C17D08
	073 Move X1, X0
	074 Move X0, X19
	075 Call ArgumentNullException..ctor, X0, X1
	076 Move X0, 0xDE0000
	077 Move X0, [X0+1888]
	078 Call 0x1C17D08
	079 Call 0x1C17F10
	080 Move X19, X0
	081 Move X0, 0xDE3000
	082 Move X0, [X0+304]
	083 Call 0x1C17D08
	084 Move X1, X0
	085 Move X0, X19
	086 Call ArgumentOutOfRangeException..ctor, X0, X1
	087 Move X0, 0xE0D000
	088 Move X0, [X0+264]
	089 Call 0x1C17D08
	090 Move X1, X0
	091 Move X0, X19
	092 Call 0x1C17DEC

Method: System.Boolean IsHighSurrogate(System.Char c)

Disassembly:
	0x0331CFEC LDR X9, [X31 + 0x18]
	0x0331CFF0 CMP X8, X9
	0x0331CFF4 B.EQ 0x331D17C
	0x0331CFF8 B 0x331D24C

ISIL:
	001 Move W8, W0
	002 ShiftRight W8, 10
	003 And W8, W8, 0x7FFF
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSET not yet implemented."
	006 Return X0

Method: System.Boolean IsHighSurrogate(System.String s, System.Int32 index)

Disassembly:
	0x0331CFFC LDR W9, [X10]
	0x0331D000 ADD W9, W9, 0x2
	0x0331D004 ADD X8, X8, W9, 0x4, SXTW
	0x0331D008 ADD X0, X8, 0x138
	0x0331D00C LDP X8, X2, [X0]
	0x0331D010 MOV X0, X20
	0x0331D014 MOV X1, X19
	0x0331D018 BLR X8
	0x0331D01C ADRP X8, 0xDD8000
	0x0331D020 LDR X8, [X8 + 0x170]
	0x0331D024 B 0x331D084
	0x0331D028 LDR W9, [X10]
	0x0331D02C ADD W9, W9, 0x3
	0x0331D030 ADD X8, X8, W9, 0x4, SXTW
	0x0331D034 ADD X0, X8, 0x138
	0x0331D038 LDP X8, X2, [X0]
	0x0331D03C MOV X0, X20
	0x0331D040 MOV X1, X19
	0x0331D044 BLR X8
	0x0331D048 ADRP X8, 0xDFF000
	0x0331D04C LDR X8, [X8 + 0x6B0]
	0x0331D050 LDR X8, [X8]
	0x0331D054 STRB W0, [X31 + 0x8]
	0x0331D058 B 0x331D158
	0x0331D05C LDR W9, [X10]
	0x0331D060 ADD W9, W9, 0x5
	0x0331D064 ADD X8, X8, W9, 0x4, SXTW
	0x0331D068 ADD X0, X8, 0x138
	0x0331D06C LDP X8, X2, [X0]
	0x0331D070 MOV X0, X20
	0x0331D074 MOV X1, X19
	0x0331D078 BLR X8
	0x0331D07C ADRP X8, 0xDDA000
	0x0331D080 LDR X8, [X8 + 0x628]
	0x0331D084 LDR X8, [X8]
	0x0331D088 STRH W0, [X31 + 0x8]
	0x0331D08C B 0x331D158
	0x0331D090 LDR W9, [X10]
	0x0331D094 ADD W9, W9, 0x7
	0x0331D098 ADD X8, X8, W9, 0x4, SXTW
	0x0331D09C ADD X0, X8, 0x138
	0x0331D0A0 LDP X8, X2, [X0]
	0x0331D0A4 MOV X0, X20
	0x0331D0A8 MOV X1, X19
	0x0331D0AC BLR X8
	0x0331D0B0 ADRP X8, 0xDD6000
	0x0331D0B4 LDR X8, [X8 + 0x758]
	0x0331D0B8 B 0x331D0E4
	0x0331D0BC LDR W9, [X10]
	0x0331D0C0 ADD W9, W9, 0x8
	0x0331D0C4 ADD X8, X8, W9, 0x4, SXTW
	0x0331D0C8 ADD X0, X8, 0x138
	0x0331D0CC LDP X8, X2, [X0]
	0x0331D0D0 MOV X0, X20
	0x0331D0D4 MOV X1, X19
	0x0331D0D8 BLR X8
	0x0331D0DC ADRP X8, 0xDDE000
	0x0331D0E0 LDR X8, [X8 + 0x720]
	0x0331D0E4 LDR X8, [X8]
	0x0331D0E8 STR W0, [X31 + 0x8]
	0x0331D0EC B 0x331D158
	0x0331D0F0 LDR W9, [X10]
	0x0331D0F4 ADD W9, W9, 0xB
	0x0331D0F8 ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C0000
	006 Move W8, [X21+3049]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xDD9000
	014 Move X0, [X0+368]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3049], W8
	018 Compare X20, 0
	019 JumpIfEqual {60}
	020 Move TEMP, X19
	021 And TEMP, TEMP, -2147483648
	022 Compare TEMP, -2147483648
	023 JumpIfEqual {49}
	024 Move W8, [X20+16]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X21, 0xDD9000
	027 Move X21, [X21+368]
	028 Move X0, X20
	029 Move W1, W19
	030 Move X2, X31
	031 Call String.get_Chars, X0, X1
	032 Move X8, [X21]
	033 Move W19, W0
	034 Move W9, [X8+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Move W8, W19
	040 ShiftRight W8, 10
	041 And W8, W8, 0x7FFF
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CSET not yet implemented."
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0
	049 Move X0, 0xDDF000
	050 Move X0, [X0+1888]
	051 Call 0x1C17D08
	052 Call 0x1C17F10
	053 Move X19, X0
	054 Move X0, 0xDE2000
	055 Move X0, [X0+304]
	056 Call 0x1C17D08
	057 Move X1, X0
	058 Move X0, X19
	059 Call ArgumentOutOfRangeException..ctor, X0, X1
	060 Move X0, 0xDDC000
	061 Move X0, [X0+1320]
	062 Call 0x1C17D08
	063 Call 0x1C17F10
	064 Move X19, X0
	065 Move X0, 0xE00000
	066 Move X0, [X0+3264]
	067 Call 0x1C17D08
	068 Move X1, X0
	069 Move X0, X19
	070 Call ArgumentNullException..ctor, X0, X1
	071 Move X0, 0xE0C000
	072 Move X0, [X0+272]
	073 Call 0x1C17D08
	074 Move X1, X0
	075 Move X0, X19
	076 Call 0x1C17DEC

Method: System.Boolean IsLowSurrogate(System.Char c)

Disassembly:
	0x0331D0FC ADD X0, X8, 0x138
	0x0331D100 LDP X8, X2, [X0]
	0x0331D104 MOV X0, X20
	0x0331D108 MOV X1, X19

ISIL:
	001 Move W8, W0
	002 ShiftRight W8, 10
	003 And W8, W8, 0x7FFF
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSET not yet implemented."
	006 Return X0

Method: System.Boolean IsSurrogatePair(System.Char highSurrogate, System.Char lowSurrogate)

Disassembly:
	0x0331D10C BLR X8
	0x0331D110 ADRP X8, 0xDD6000
	0x0331D114 LDR X8, [X8 + 0xA90]
	0x0331D118 STR S0, [X31 + 0x8]
	0x0331D11C LDR X0, [X8]
	0x0331D120 ADD X1, X31, 0x8
	0x0331D124 B 0x331D160
	0x0331D128 LDR W9, [X10]

ISIL:
	001 Move W8, W0
	002 ShiftRight W8, 10
	003 And W8, W8, 0x7FFF
	004 Move W9, W1
	005 ShiftRight W9, 10
	006 And W9, W9, 0x7FFF
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 And W0, W8, W9
	012 Return X0

Method: System.Int32 ConvertToUtf32(System.Char highSurrogate, System.Char lowSurrogate)

Disassembly:
	0x0331D12C ADD W9, W9, 0xD
	0x0331D130 ADD X8, X8, W9, 0x4, SXTW
	0x0331D134 ADD X0, X8, 0x138
	0x0331D138 LDP X8, X2, [X0]
	0x0331D13C MOV X0, X20
	0x0331D140 MOV X1, X19
	0x0331D144 BLR X8
	0x0331D148 ADRP X8, 0xDFE000
	0x0331D14C LDR X8, [X8 + 0x5F0]
	0x0331D150 STP X0, X1, [X31 + 0x8]
	0x0331D154 LDR X8, [X8]
	0x0331D158 ADD X1, X31, 0x8
	0x0331D15C MOV X0, X8
	0x0331D160 BL 0x1C16E04
	0x0331D164 MOV X21, X0
	0x0331D168 LDR X8, [X23 + 0x28]
	0x0331D16C LDR X9, [X31 + 0x18]
	0x0331D170 CMP X8, X9
	0x0331D174 B.NE 0x331D24C
	0x0331D178 MOV X0, X21
	0x0331D17C LDP X20, X19, [X31 + 0x50]
	0x0331D180 LDP X22, X21, [X31 + 0x40]
	0x0331D184 LDP X24, X23, [X31 + 0x30]
	0x0331D188 LDR X30, [X31 + 0x20]
	0x0331D18C ADD X31, X31, 0x60
	0x0331D190 RET
	0x0331D194 ADRP X0, 0xDDE000
	0x0331D198 LDR X0, [X0 + 0xC08]
	0x0331D19C BL 0x1C16D08
	0x0331D1A0 BL 0x1C16F10
	0x0331D1A4 MOV X19, X0
	0x0331D1A8 ADRP X0, 0xE0B000
	0x0331D1AC LDR X0, [X0 + 0x158]
	0x0331D1B0 BL 0x1C16D08
	0x0331D1B4 MOV X1, X0
	0x0331D1B8 MOV X0, X19
	0x0331D1BC MOV X2, X31
	0x0331D1C0 BL 0x337B498
	0x0331D1C4 ADRP X0, 0xE0B000
	0x0331D1C8 LDR X0, [X0 + 0x160]
	0x0331D1CC BL 0x1C16D08
	0x0331D1D0 MOV X1, X0
	0x0331D1D4 MOV X0, X19
	0x0331D1D8 BL 0x1C16DEC
	0x0331D1DC ADRP X0, 0xDDE000
	0x0331D1E0 LDR X0, [X0 + 0xC08]
	0x0331D1E4 BL 0x1C16D08
	0x0331D1E8 BL 0x1C16F10
	0x0331D1EC MOV X19, X0
	0x0331D1F0 ADRP X0, 0xE0B000
	0x0331D1F4 LDR X0, [X0 + 0x60]
	0x0331D1F8 B 0x331D1B0
	0x0331D1FC ADRP X0, 0xDDE000
	0x0331D200 LDR X0, [X0 + 0xC08]
	0x0331D204 BL 0x1C16D08
	0x0331D208 BL 0x1C16F10
	0x0331D20C MOV X19, X0
	0x0331D210 ADRP X0, 0xE0B000
	0x0331D214 LDR X0, [X0 + 0x58]
	0x0331D218 B 0x331D1B0
	0x0331D21C ADRP X0, 0xDDE000
	0x0331D220 LDR X0, [X0 + 0x578]
	0x0331D224 BL 0x1C16D08
	0x0331D228 BL 0x1C16F10
	0x0331D22C MOV X19, X0
	0x0331D230 ADRP X0, 0xE0B000
	0x0331D234 LDR X0, [X0 + 0x168]
	0x0331D238 BL 0x1C16D08
	0x0331D23C MOV X1, X0
	0x0331D240 MOV X0, X19
	0x0331D244 BL 0x3314A68
	0x0331D248 B 0x331D1C4
	0x0331D24C BL 0x3EB1B20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x10C0000
	007 Move X21, 0xDD9000
	008 Move W8, [X22+3050]
	009 Move X21, [X21+368]
	010 Move W19, W1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDD9000
	017 Move X0, [X0+368]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3050], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W8, W20
	027 ShiftRight W8, 10
	028 And W8, W8, 0x7FFF
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move W8, W19
	036 ShiftRight W8, 10
	037 And W8, W8, 0x7FFF
	038 NotImplemented "Instruction CMP not yet implemented."
	039 And W8, W20, 0xFFFF
	040 Move W8, W8
	041 ShiftRight W8, 22
	042 And W8, W8, 0x1FFFFF
	043 Add W8, W8, W19
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move W9, 0x2400
	049 NotImplemented "Instruction MOVK not yet implemented."
	050 Add W0, W8, W9
	051 Move X30, [X31+48]
	052 Return X0
	053 Move X0, 0xDDF000
	054 Move X0, [X0+1888]
	055 Call 0x1C17D08
	056 Call 0x1C17F10
	057 Move X19, X0
	058 Move X0, 0xE0C000
	059 Move X0, [X0+280]
	060 Call 0x1C17D08
	061 Move X20, X0
	062 Move X0, 0xE0C000
	063 Move X0, [X0+288]
	064 Move X0, 0xDDF000
	065 Move X0, [X0+1888]
	066 Call 0x1C17D08
	067 Call 0x1C17F10
	068 Move X19, X0
	069 Move X0, 0xE0C000
	070 Move X0, [X0+296]
	071 Call 0x1C17D08
	072 Move X20, X0
	073 Move X0, 0xE0C000
	074 Move X0, [X0+304]
	075 Call 0x1C17D08
	076 Move X2, X0
	077 Move X0, X19
	078 Move X1, X20
	079 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	080 Move X0, 0xE0C000
	081 Move X0, [X0+312]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X19
	085 Call 0x1C17DEC

Method: System.Void .cctor()

Disassembly:
	0x0331D250 STR X30, [X31 - 0x30]!
	0x0331D254 STP X22, X21, [X31 + 0x10]
	0x0331D258 STP X20, X19, [X31 + 0x20]
	0x0331D25C ADRP X22, 0x10BF000
	0x0331D260 ADRP X21, 0xDD8000
	0x0331D264 LDRB W8, [X22 + 0xBF2]
	0x0331D268 LDR X21, [X21 + 0xC48]
	0x0331D26C MOV X19, X1
	0x0331D270 MOV X20, X0
	0x0331D274 TBNZ X8, 0x0, 0x331D298
	0x0331D278 ADRP X0, 0xDDF000
	0x0331D27C LDR X0, [X0 + 0x9E8]
	0x0331D280 BL 0x1C16CF4
	0x0331D284 ADRP X0, 0xDD8000
	0x0331D288 LDR X0, [X0 + 0xC48]
	0x0331D28C BL 0x1C16CF4
	0x0331D290 MOVZ W8, 0x1
	0x0331D294 STRB W8, [X22 + 0xBF2]
	0x0331D298 LDR X0, [X21]
	0x0331D29C ADRP X21, 0xDDF000
	0x0331D2A0 LDR W8, [X0 + 0xE0]
	0x0331D2A4 LDR X21, [X21 + 0x9E8]
	0x0331D2A8 CBNZ W8, 0x331D2B0
	0x0331D2AC BL 0x1C16DFC
	0x0331D2B0 MOV X0, X31
	0x0331D2B4 BL 0x33387A0
	0x0331D2B8 LDR X8, [X21]
	0x0331D2BC MOV X21, X0
	0x0331D2C0 LDR W9, [X8 + 0xE0]
	0x0331D2C4 CBNZ W9, 0x331D2D0
	0x0331D2C8 MOV X0, X8
	0x0331D2CC BL 0x1C16DFC
	0x0331D2D0 MOV X0, X20
	0x0331D2D4 MOV X1, X19
	0x0331D2D8 MOV X2, X21
	0x0331D2DC LDP X20, X19, [X31 + 0x20]
	0x0331D2E0 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10C0000
	007 Move X22, 0xDD7000
	008 Move X19, 0xE0C000
	009 Move X20, 0xDD9000
	010 Move W8, [X21+3051]
	011 Move X22, [X22+1560]
	012 Move X19, [X19+320]
	013 Move X20, [X20+368]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xDD7000
	019 Move X0, [X0+1560]
	020 Call 0x1C17CF4
	021 Move X0, 0xDD9000
	022 Move X0, [X0+368]
	023 Call 0x1C17CF4
	024 Move X0, 0xE0C000
	025 Move X0, [X0+320]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3051], W8
	029 Move X0, [X22]
	030 Move W1, 256
	031 Call 0x1C17D6C
	032 Move X1, [X19]
	033 Move X2, X31
	034 Move X19, X0
	035 Call RuntimeHelpers.InitializeArray, X0, X1
	036 Move X8, [X20]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X8, [X8+184]
	040 Move [X8], X19
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+48]
	044 Return 

