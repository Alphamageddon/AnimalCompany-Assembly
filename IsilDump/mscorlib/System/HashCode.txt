Type: System.HashCode

Method: System.UInt32 GenerateGlobalSeed()

Disassembly:
	0x0337A224 LDP X22, X21, [X31 + 0x10]
	0x0337A228 LDP X30, X23, [X31], #0x30
	0x0337A22C B 0x3379D88
	0x0337A230 STP X29, X30, [X31 - 0x60]!
	0x0337A234 STP X28, X27, [X31 + 0x10]
	0x0337A238 STP X26, X25, [X31 + 0x20]
	0x0337A23C STP X24, X23, [X31 + 0x30]
	0x0337A240 STP X22, X21, [X31 + 0x40]
	0x0337A244 STP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X31, 12
	003 Move W1, 4
	004 Move X2, X31
	005 Move [X31+12], W31
	006 Call Interop.GetRandomBytes, X0, X1
	007 Move W0, [X31+12]
	008 Move X30, [X31+16]
	009 Return X0

Method: System.Int32 Combine(T1 value1, T2 value2, T3 value3, T4 value4)

Disassembly:
	0x021E9B48 ADD X12, X13, 0xC
	0x021E9B4C STP X9, X11, [X31 + 0x60]
	0x021E9B50 ADD X9, X14, 0xC
	0x021E9B54 STP V21, V22, [X31 + 0xF0]
	0x021E9B58 STP V19, V20, [X31 + 0xD0]
	0x021E9B5C STR V18, [X31 + 0xC]
	0x021E9B60 STR X8, [X31 + 0xB0]
	0x021E9B64 STP S17, S16, [X31 + 0xB8]
	0x021E9B68 STP X12, X9, [X31 + 0x78]
	0x021E9B6C ORR X9, X15, 0x7
	0x021E9B70 LDR X8, [X0 + 0x38]
	0x021E9B74 STR X9, [X31 + 0x70]
	0x021E9B78 ADD X9, X31, 0xB0
	0x021E9B7C ADD X11, X15, 0x8
	0x021E9B80 ORR X10, X9, 0x7
	0x021E9B84 ADD X12, X15, 0xC
	0x021E9B88 STP X11, X10, [X31 + 0x88]
	0x021E9B8C ADD X10, X9, 0x8
	0x021E9B90 ADD X9, X9, 0xC
	0x021E9B94 STP X12, X10, [X31 + 0x98]
	0x021E9B98 STR X9, [X31 + 0xA8]
	0x021E9B9C CBNZ X8, 0x21E9BC0
	0x021E9BA0 MOV X23, X0
	0x021E9BA4 ADRP X0, 0x1F32000
	0x021E9BA8 LDR X0, [X0 + 0xB10]
	0x021E9BAC BL 0x1C16CF4
	0x021E9BB0 LDR X8, [X23 + 0x38]
	0x021E9BB4 CBNZ X8, 0x21E9BC0
	0x021E9BB8 MOV X0, X23
	0x021E9BBC BL 0x1C5C6E0
	0x021E9BC0 ADD X0, X31, 0x120
	0x021E9BC4 MOV X1, X31
	0x021E9BC8 BL 0x338FE0C
	0x021E9BCC STR W0, [X31 + 0x2C]
	0x021E9BD0 MOV X0, X22
	0x021E9BD4 MOV X1, X31
	0x021E9BD8 BL 0x338FE0C
	0x021E9BDC MOV W22, W0
	0x021E9BE0 MOV X0, X21
	0x021E9BE4 MOV X1, X31
	0x021E9BE8 BL 0x338FE0C
	0x021E9BEC STR W0, [X31 + 0x38]
	0x021E9BF0 MOV X0, X20
	0x021E9BF4 MOV X1, X31
	0x021E9BF8 BL 0x338FE0C
	0x021E9BFC STR W0, [X31 + 0x24]
	0x021E9C00 ADD X0, X31, 0x110
	0x021E9C04 MOV X1, X31
	0x021E9C08 BL 0x338FE0C
	0x021E9C0C STR W0, [X31 + 0x1C]
	0x021E9C10 MOV X0, X19
	0x021E9C14 MOV X1, X31
	0x021E9C18 BL 0x338FE0C
	0x021E9C1C STR W0, [X31 + 0x10]
	0x021E9C20 MOV X0, X29
	0x021E9C24 MOV X1, X31
	0x021E9C28 BL 0x338FE0C
	0x021E9C2C STR W0, [X31 + 0x30]
	0x021E9C30 MOV X0, X28
	0x021E9C34 MOV X1, X31
	0x021E9C38 BL 0x338FE0C
	0x021E9C3C MOV W29, W0
	0x021E9C40 ADD X0, X31, 0x100
	0x021E9C44 MOV X1, X31
	0x021E9C48 BL 0x338FE0C
	0x021E9C4C STR W0, [X31 + 0x14]
	0x021E9C50 MOV X0, X27
	0x021E9C54 MOV X1, X31
	0x021E9C58 BL 0x338FE0C
	0x021E9C5C STR W0, [X31 + 0xC]
	0x021E9C60 MOV X0, X26
	0x021E9C64 MOV X1, X31
	0x021E9C68 BL 0x338FE0C
	0x021E9C6C STR W0, [X31 + 0x20]
	0x021E9C70 MOV X0, X24
	0x021E9C74 MOV X1, X31
	0x021E9C78 BL 0x338FE0C
	0x021E9C7C MOV W28, W0
	0x021E9C80 ADD X0, X31, 0xF0
	0x021E9C84 MOV X1, X31
	0x021E9C88 BL 0x338FE0C
	0x021E9C8C MOV W23, W0
	0x021E9C90 MOV X0, X25
	0x021E9C94 MOV X1, X31
	0x021E9C98 BL 0x338FE0C
	0x021E9C9C MOV W25, W0
	0x021E9CA0 LDR X0, [X31 + 0x40]
	0x021E9CA4 MOV X1, X31
	0x021E9CA8 BL 0x338FE0C
	0x021E9CAC STR W0, [X31 + 0x40]
	0x021E9CB0 LDR X0, [X31 + 0x68]
	0x021E9CB4 MOV X1, X31
	0x021E9CB8 BL 0x338FE0C
	0x021E9CBC STR W0, [X31 + 0x68]
	0x021E9CC0 ADD X0, X31, 0xE0
	0x021E9CC4 MOV X1, X31
	0x021E9CC8 BL 0x338FE0C
	0x021E9CCC STR W0, [X31 + 0x28]
	0x021E9CD0 LDR X0, [X31 + 0x48]
	0x021E9CD4 MOV X1, X31
	0x021E9CD8 BL 0x338FE0C
	0x021E9CDC STR W0, [X31 + 0x18]
	0x021E9CE0 LDR X0, [X31 + 0x50]
	0x021E9CE4 MOV X1, X31
	0x021E9CE8 BL 0x338FE0C
	0x021E9CEC STR W0, [X31 + 0x50]
	0x021E9CF0 LDR X0, [X31 + 0x78]
	0x021E9CF4 MOV X1, X31
	0x021E9CF8 BL 0x338FE0C
	0x021E9CFC STR W0, [X31 + 0x78]
	0x021E9D00 ADD X0, X31, 0xD0
	0x021E9D04 MOV X1, X31
	0x021E9D08 BL 0x338FE0C
	0x021E9D0C STR W0, [X31 + 0x3C]
	0x021E9D10 LDR X0, [X31 + 0x58]
	0x021E9D14 MOV X1, X31
	0x021E9D18 BL 0x338FE0C
	0x021E9D1C STR W0, [X31 + 0x34]
	0x021E9D20 LDR X0, [X31 + 0x60]
	0x021E9D24 MOV X1, X31
	0x021E9D28 BL 0x338FE0C
	0x021E9D2C STR W0, [X31 + 0x60]
	0x021E9D30 LDR X0, [X31 + 0x80]
	0x021E9D34 MOV X1, X31
	0x021E9D38 BL 0x338FE0C
	0x021E9D3C STR W0, [X31 + 0x80]
	0x021E9D40 ADD X0, X31, 0xC0
	0x021E9D44 MOV X1, X31
	0x021E9D48 BL 0x338FE0C
	0x021E9D4C STR W0, [X31 + 0x58]
	0x021E9D50 LDR X0, [X31 + 0x70]
	0x021E9D54 MOV X1, X31
	0x021E9D58 BL 0x338FE0C
	0x021E9D5C STR W0, [X31 + 0x48]
	0x021E9D60 LDR X0, [X31 + 0x88]
	0x021E9D64 MOV X1, X31
	0x021E9D68 BL 0x338FE0C
	0x021E9D6C STR W0, [X31 + 0x70]
	0x021E9D70 LDR X0, [X31 + 0x98]
	0x021E9D74 MOV X1, X31
	0x021E9D78 BL 0x338FE0C
	0x021E9D7C STR W0, [X31 + 0x88]
	0x021E9D80 ADD X0, X31, 0xB0
	0x021E9D84 MOV X1, X31
	0x021E9D88 BL 0x338FE0C
	0x021E9D8C STR W0, [X31 + 0x98]
	0x021E9D90 LDR X0, [X31 + 0x90]
	0x021E9D94 MOV X1, X31
	0x021E9D98 BL 0x338FE0C
	0x021E9D9C STR W0, [X31 + 0x90]
	0x021E9DA0 LDR X0, [X31 + 0xA0]
	0x021E9DA4 MOV X1, X31
	0x021E9DA8 BL 0x338FE0C
	0x021E9DAC STR W0, [X31 + 0xA0]
	0x021E9DB0 LDR X0, [X31 + 0xA8]
	0x021E9DB4 MOV X1, X31
	0x021E9DB8 BL 0x338FE0C
	0x021E9DBC ADRP X19, 0x1F32000
	0x021E9DC0 LDR X19, [X19 + 0xB10]
	0x021E9DC4 STR W0, [X31 + 0xA8]
	0x021E9DC8 LDR X8, [X19]
	0x021E9DCC LDR W9, [X8 + 0xE0]
	0x021E9DD0 CBNZ W9, 0x21E9DDC
	0x021E9DD4 MOV X0, X8
	0x021E9DD8 BL 0x1C16DFC
	0x021E9DDC ADRP X21, 0x21F0000
	0x021E9DE0 LDR W9, [X31 + 0x2C]
	0x021E9DE4 LDRB W8, [X21 + 0x835]
	0x021E9DE8 EOR W20, W9, W22, 0x2
	0x021E9DEC CBNZ W8, 0x21E9E04
	0x021E9DF0 ADRP X0, 0x1F32000
	0x021E9DF4 LDR X0, [X0 + 0xB10]
	0x021E9DF8 BL 0x1C16CF4
	0x021E9DFC MOVZ W8, 0x1
	0x021E9E00 STRB W8, [X21 + 0x835]
	0x021E9E04 LDR W9, [X31 + 0x1C]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move [X31+8], X1
	011 Move X8, [X4+56]
	012 Move X20, X4
	013 Move X19, X3
	014 Move X21, X2
	015 Move X22, X0
	016 Compare X8, 0
	017 JumpIfNotEqual {26}
	018 Move X0, 0x1F33000
	019 Move X0, [X0+2832]
	020 Call 0x1C17CF4
	021 Move X8, [X20+56]
	022 Compare X8, 0
	023 JumpIfNotEqual {26}
	024 Move X0, X20
	025 Call 0x1C5D6E0
	026 Move W23, 0xCA77
	027 Move W25, 0x4428
	028 NotImplemented "Instruction MOVK not yet implemented."
	029 NotImplemented "Instruction MOVK not yet implemented."
	030 Compare X22, 0
	031 JumpIfEqual {38}
	032 Move X8, [X22]
	033 Move X0, X22
	034 Move X9, [X8+344]
	035 Move X1, [X8+352]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 NotImplemented "Instruction MADD not yet implemented."
	038 Move X8, [X20+56]
	039 Add X0, X31, 8
	040 Move X1, [X8+24]
	041 Call AssemblyVersion.GetHashCode, X0
	042 Move W20, W0
	043 Compare X21, 0
	044 JumpIfEqual {51}
	045 Move X8, [X21]
	046 Move X0, X21
	047 Move X9, [X8+344]
	048 Move X1, [X8+352]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Multiply W22, W0, W23
	051 Move W22, W31
	052 Move W21, 0x864F
	053 NotImplemented "Instruction MOVK not yet implemented."
	054 Compare X19, 0
	055 JumpIfEqual {62}
	056 Move X8, [X19]
	057 Move X0, X19
	058 Move X9, [X8+344]
	059 Move X1, [X8+352]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 NotImplemented "Instruction MADD not yet implemented."
	062 Move X19, 0x1F33000
	063 Move X19, [X19+2832]
	064 Move X0, [X19]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X24, 0x21F1000
	070 Move W8, [X24+2101]
	071 Compare W8, 0
	072 JumpIfNotEqual {78}
	073 Move X0, 0x1F33000
	074 Move X0, [X0+2832]
	075 Call 0x1C17CF4
	076 Move W8, 1
	077 Move [X24+2101], W8
	078 Move X0, [X19]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X19]
	084 Move X8, [X0+184]
	085 Move X26, 0x21F1000
	086 Move W9, [X26+2102]
	087 Move W24, [X8]
	088 Compare W9, 0
	089 JumpIfNotEqual {95}
	090 Move X0, X19
	091 Call 0x1C17CF4
	092 Move X0, [X19]
	093 Move W8, 1
	094 Move [X26+2102], W8
	095 Move W8, [X0+224]
	096 Add W25, W25, W24
	097 Compare W8, 0
	098 JumpIfEqual {100}
	099 NotImplemented "Instruction EXTR not yet implemented."
	100 Call 0x1C17DFC
	101 Move W8, [X26+2102]
	102 NotImplemented "Instruction EXTR not yet implemented."
	103 Compare W8, 0
	104 JumpIfNotEqual {110}
	105 Move X0, 0x1F33000
	106 Move X0, [X0+2832]
	107 Call 0x1C17CF4
	108 Move W8, 1
	109 Move [X26+2102], W8
	110 Move X0, [X19]
	111 NotImplemented "Instruction MADD not yet implemented."
	112 Add W20, W9, W24
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfEqual {117}
	116 NotImplemented "Instruction EXTR not yet implemented."
	117 Call 0x1C17DFC
	118 Move W8, [X26+2102]
	119 NotImplemented "Instruction EXTR not yet implemented."
	120 Compare W8, 0
	121 JumpIfNotEqual {127}
	122 Move X0, 0x1F33000
	123 Move X0, [X0+2832]
	124 Call 0x1C17CF4
	125 Move W8, 1
	126 Move [X26+2102], W8
	127 Move X0, [X19]
	128 Add W22, W24, W22
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfEqual {133}
	132 NotImplemented "Instruction EXTR not yet implemented."
	133 Call 0x1C17DFC
	134 Move W8, [X26+2102]
	135 NotImplemented "Instruction EXTR not yet implemented."
	136 Compare W8, 0
	137 JumpIfNotEqual {143}
	138 Move X0, 0x1F33000
	139 Move X0, [X0+2832]
	140 Call 0x1C17CF4
	141 Move W8, 1
	142 Move [X26+2102], W8
	143 Move X0, [X19]
	144 Move W8, [X0+224]
	145 Compare W8, 0
	146 JumpIfNotEqual {148}
	147 Call 0x1C17DFC
	148 Move X26, 0x21F1000
	149 Move W8, [X26+2103]
	150 Compare W8, 0
	151 JumpIfNotEqual {157}
	152 Move X0, 0x1F33000
	153 Move X0, [X0+2832]
	154 Call 0x1C17CF4
	155 Move W8, 1
	156 Move [X26+2103], W8
	157 Move X0, [X19]
	158 Add W19, W21, W24
	159 Move W8, [X0+224]
	160 Compare W8, 0
	161 JumpIfNotEqual {163}
	162 Call 0x1C17DFC
	163 Move W9, 0x79B1
	164 NotImplemented "Instruction MOVK not yet implemented."
	165 Move X12, -24109056
	166 NotImplemented "Instruction EXTR not yet implemented."
	167 Multiply W10, W22, W9
	168 Move V0, [X12+255]
	169 Move X12, -24100864
	170 Multiply W8, W8, W9
	171 Multiply W11, W20, W9
	172 Multiply W9, W25, W9
	173 Move V1, [X12+27]
	174 Move S2, W10
	175 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	176 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	177 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	178 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	179 NotImplemented "Instruction INVALID not yet implemented."
	180 NotImplemented "Instruction INVALID not yet implemented."
	181 Or V0, V1, V0
	182 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	183 Move W8, S0
	184 Add W8, W8, 16
	185 Xor W8, W8, W8
	186 Multiply W8, W8, W23
	187 Move W9, 0xAE3D
	188 Move X20, [X31+64]
	189 Move X19, [X31+72]
	190 Move X22, [X31+48]
	191 Move X21, [X31+56]
	192 Move X24, [X31+32]
	193 Move X23, [X31+40]
	194 Move X26, [X31+16]
	195 Move X25, [X31+24]
	196 Xor W8, W8, W8
	197 NotImplemented "Instruction MOVK not yet implemented."
	198 Multiply W8, W8, W9
	199 Xor W0, W8, W8
	200 Move X30, [X31+80]
	201 Return X0

Method: System.Int32 Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7, T8 value8)

Disassembly:
	0x021EAA90 BL 0x1C16CF4
	0x021EAA94 MOVZ W8, 0x1
	0x021EAA98 STRB W8, [X28 + 0x836]
	0x021EAA9C LDR X0, [X19]
	0x021EAAA0 LDUR W9, [X29 - 0x90]
	0x021EAAA4 MOVZ W23, 0x79B1
	0x021EAAA8 MOVK W23, 0x9E370000
	0x021EAAAC LDR W8, [X0 + 0xE0]
	0x021EAAB0 ADD W25, W22, W9
	0x021EAAB4 CBZ W8, 0x21EAAC0
	0x021EAAB8 EXTR W25, W25, W25, 0x13
	0x021EAABC B 0x21EAAE4
	0x021EAAC0 BL 0x1C16DFC
	0x021EAAC4 LDRB W8, [X28 + 0x836]
	0x021EAAC8 EXTR W25, W25, W25, 0x13
	0x021EAACC CBNZ W8, 0x21EAAE4
	0x021EAAD0 ADRP X0, 0x1F31000
	0x021EAAD4 LDR X0, [X0 + 0xB10]
	0x021EAAD8 BL 0x1C16CF4
	0x021EAADC MOVZ W8, 0x1
	0x021EAAE0 STRB W8, [X28 + 0x836]
	0x021EAAE4 LDR X0, [X19]
	0x021EAAE8 MUL W26, W26, W23
	0x021EAAEC ADD W20, W20, W22
	0x021EAAF0 LDR W8, [X0 + 0xE0]
	0x021EAAF4 CBZ W8, 0x21EAB00
	0x021EAAF8 EXTR W20, W20, W20, 0x13
	0x021EAAFC B 0x21EAB24
	0x021EAB00 BL 0x1C16DFC
	0x021EAB04 LDRB W8, [X28 + 0x836]
	0x021EAB08 EXTR W20, W20, W20, 0x13
	0x021EAB0C CBNZ W8, 0x21EAB24
	0x021EAB10 ADRP X0, 0x1F31000
	0x021EAB14 LDR X0, [X0 + 0xB10]
	0x021EAB18 BL 0x1C16CF4
	0x021EAB1C MOVZ W8, 0x1
	0x021EAB20 STRB W8, [X28 + 0x836]
	0x021EAB24 LDR X0, [X19]
	0x021EAB28 LDUR W9, [X29 - 0x98]
	0x021EAB2C MUL W22, W24, W23
	0x021EAB30 LDR W8, [X0 + 0xE0]
	0x021EAB34 ADD W24, W26, W9
	0x021EAB38 CBZ W8, 0x21EAB44
	0x021EAB3C EXTR W24, W24, W24, 0x13
	0x021EAB40 B 0x21EAB68
	0x021EAB44 BL 0x1C16DFC
	0x021EAB48 LDRB W8, [X28 + 0x836]
	0x021EAB4C EXTR W24, W24, W24, 0x13
	0x021EAB50 CBNZ W8, 0x21EAB68
	0x021EAB54 ADRP X0, 0x1F31000
	0x021EAB58 LDR X0, [X0 + 0xB10]
	0x021EAB5C BL 0x1C16CF4
	0x021EAB60 MOVZ W8, 0x1
	0x021EAB64 STRB W8, [X28 + 0x836]
	0x021EAB68 LDR X0, [X19]
	0x021EAB6C LDUR W9, [X29 - 0x88]
	0x021EAB70 MUL W25, W25, W23
	0x021EAB74 LDR W8, [X0 + 0xE0]
	0x021EAB78 ADD W22, W22, W9
	0x021EAB7C CBZ W8, 0x21EAB88
	0x021EAB80 EXTR W22, W22, W22, 0x13
	0x021EAB84 B 0x21EABAC
	0x021EAB88 BL 0x1C16DFC
	0x021EAB8C LDRB W8, [X28 + 0x836]
	0x021EAB90 EXTR W22, W22, W22, 0x13
	0x021EAB94 CBNZ W8, 0x21EABAC
	0x021EAB98 ADRP X0, 0x1F31000
	0x021EAB9C LDR X0, [X0 + 0xB10]
	0x021EABA0 BL 0x1C16CF4
	0x021EABA4 MOVZ W8, 0x1
	0x021EABA8 STRB W8, [X28 + 0x836]
	0x021EABAC LDR X0, [X19]
	0x021EABB0 ADD W25, W25, W27
	0x021EABB4 LDR W8, [X0 + 0xE0]
	0x021EABB8 CBZ W8, 0x21EABC4
	0x021EABBC EXTR W25, W25, W25, 0x13
	0x021EABC0 B 0x21EABE8
	0x021EABC4 BL 0x1C16DFC
	0x021EABC8 LDRB W8, [X28 + 0x836]
	0x021EABCC EXTR W25, W25, W25, 0x13
	0x021EABD0 CBNZ W8, 0x21EABE8
	0x021EABD4 ADRP X0, 0x1F31000
	0x021EABD8 LDR X0, [X0 + 0xB10]
	0x021EABDC BL 0x1C16CF4
	0x021EABE0 MOVZ W8, 0x1
	0x021EABE4 STRB W8, [X28 + 0x836]
	0x021EABE8 LDR X0, [X19]
	0x021EABEC LDR W8, [X0 + 0xE0]
	0x021EABF0 CBNZ W8, 0x21EABF8
	0x021EABF4 BL 0x1C16DFC
	0x021EABF8 ADRP X26, 0x21EF000
	0x021EABFC LDRB W8, [X26 + 0x837]
	0x021EAC00 CBNZ W8, 0x21EAC18
	0x021EAC04 ADRP X0, 0x1F31000
	0x021EAC08 LDR X0, [X0 + 0xB10]
	0x021EAC0C BL 0x1C16CF4
	0x021EAC10 MOVZ W8, 0x1
	0x021EAC14 STRB W8, [X26 + 0x837]
	0x021EAC18 LDR X0, [X19]
	0x021EAC1C LDR W8, [X0 + 0xE0]
	0x021EAC20 CBNZ W8, 0x21EAC28
	0x021EAC24 BL 0x1C16DFC
	0x021EAC28 LDUR X8, [X29 - 0x70]
	0x021EAC2C MOVZ W13, 0xCA77
	0x021EAC30 MOVK W13, 0x85EB0000
	0x021EAC34 LDR X8, [X8 + 0x28]
	0x021EAC38 LDUR X9, [X29 - 0x10]
	0x021EAC3C CMP X8, X9
	0x021EAC40 B.NE 0x21EACD8
	0x021EAC44 MUL W9, W25, W23
	0x021EAC48 ADRP X12, 0xFFFFFFFFFE900000
	0x021EAC4C MUL W8, W20, W23
	0x021EAC50 FMOV S0, W9
	0x021EAC54 ADRP X9, 0xFFFFFFFFFE902000
	0x021EAC58 LDR V1, [X12 + 0xFF]
	0x021EAC5C MUL W11, W24, W23
	0x021EAC60 ADD W8, W8, W21
	0x021EAC64 LDR V2, [X9 + 0x1B]
	0x021EAC68 MUL W10, W22, W23
	0x021EAC6C EXTR W8, W8, W8, 0x13
	0x021EAC70 UNIMPLEMENTED
	0x021EAC74 MUL W8, W8, W23
	0x021EAC78 UNIMPLEMENTED
	0x021EAC7C UNIMPLEMENTED
	0x021EAC80 UNIMPLEMENTED
	0x00000000 INVALID
	0x00000000 INVALID
	0x021EAC8C ORR V0.16B, V2.16B, V0.16B
	0x021EAC90 UNIMPLEMENTED
	0x021EAC94 FMOV W8, S0
	0x021EAC98 ADD W8, W8, 0x20
	0x021EAC9C EOR W8, W8, W8, 0xF
	0x021EACA0 MUL W8, W8, W13
	0x021EACA4 MOVZ W9, 0xAE3D
	0x021EACA8 EOR W8, W8, W8, 0xD
	0x021EACAC MOVK W9, 0xC2B20000
	0x021EACB0 MUL W8, W8, W9
	0x021EACB4 EOR W0, W8, W8, 0x10
	0x021EACB8 ADD X31, X29, 0x0
	0x021EACBC LDP X20, X19, [X31 + 0x50]
	0x021EACC0 LDP X22, X21, [X31 + 0x40]
	0x021EACC4 LDP X24, X23, [X31 + 0x30]
	0x021EACC8 LDP X26, X25, [X31 + 0x20]
	0x021EACCC LDP X28, X27, [X31 + 0x10]
	0x021EACD0 LDP X29, X30, [X31], #0x60
	0x021EACD4 RET
	0x021EACD8 BL 0x3EB1B20
	0x021EACDC STP X30, X23, [X31 - 0x30]!
	0x021EACE0 STP X22, X21, [X31 + 0x10]
	0x021EACE4 STP X20, X19, [X31 + 0x20]
	0x021EACE8 LDR X8, [X1 + 0x38]
	0x021EACEC MOV X21, X1
	0x021EACF0 MOV X19, X0
	0x021EACF4 CBNZ X8, 0x21EAD18
	0x021EACF8 ADRP X0, 0x1F09000
	0x021EACFC LDR X0, [X0 + 0xE00]
	0x021EAD00 BL 0x1C16CF4
	0x021EAD04 ADRP X0, 0x1F09000
	0x021EAD08 LDR X0, [X0 + 0xE18]
	0x021EAD0C BL 0x1C16CF4
	0x021EAD10 LDR X8, [X21 + 0x38]
	0x021EAD14 CBZ X8, 0x21EAED8
	0x021EAD18 CBZ X19, 0x21EAEE4
	0x021EAD1C LDR X8, [X21 + 0x38]
	0x021EAD20 LDR X1, [X8 + 0x8]
	0x021EAD24 LDRB W8, [X1 + 0x135]
	0x021EAD28 TBNZ X8, 0x0, 0x21EAD38
	0x021EAD2C MOV X0, X1
	0x021EAD30 BL 0x1C5C684
	0x021EAD34 MOV X1, X0
	0x021EAD38 LDR X8, [X19]
	0x021EAD3C LDRH W9, [X8 + 0x12E]
	0x021EAD40 CBZ X9, 0x21EAD64
	0x021EAD44 LDR X10, [X8 + 0xB0]
	0x021EAD48 ADD X10, X10, 0x8
	0x021EAD4C LDUR X11, [X10 - 0x8]
	0x021EAD50 CMP X11, X1
	0x021EAD54 B.EQ 0x21EAD74
	0x021EAD58 SUBS X9, X9, 0x1
	0x021EAD5C ADD X10, X10, 0x10
	0x021EAD60 B.NE 0x21EAD4C
	0x021EAD64 MOV X0, X19
	0x021EAD68 MOV W2, W31
	0x021EAD6C BL 0x1C5C788
	0x021EAD70 B 0x21EAD80
	0x021EAD74 LDRSW X9, [X10]
	0x021EAD78 ADD X8, X8, X9, 0x4, LSL
	0x021EAD7C ADD X0, X8, 0x138
	0x021EAD80 LDP X8, X1, [X0]
	0x021EAD84 MOV X0, X19
	0x021EAD88 BLR X8
	0x021EAD8C MOV X19, X0
	0x021EAD90 CBZ X0, 0x21EAF20
	0x021EAD94 ADRP X22, 0x1F09000
	0x021EAD98 LDR X22, [X22 + 0xE18]
	0x021EAD9C MOVZ W20, 0x11
	0x021EADA0 MOVZ W23, 0x1D
	0x021EADA4 LDR X8, [X19]
	0x021EADA8 LDR X1, [X22]
	0x021EADAC LDRH W9, [X8 + 0x12E]
	0x021EADB0 CBZ X9, 0x21EADD4
	0x021EADB4 LDR X10, [X8 + 0xB0]
	0x021EADB8 ADD X10, X10, 0x8
	0x021EADBC LDUR X11, [X10 - 0x8]
	0x021EADC0 CMP X11, X1
	0x021EADC4 B.EQ 0x21EADE4
	0x021EADC8 SUBS X9, X9, 0x1
	0x021EADCC ADD X10, X10, 0x10
	0x021EADD0 B.NE 0x21EADBC
	0x021EADD4 MOV X0, X19
	0x021EADD8 MOV W2, W31
	0x021EADDC BL 0x1C5C788
	0x021EADE0 B 0x21EADF0
	0x021EADE4 LDRSW X9, [X10]
	0x021EADE8 ADD X8, X8, X9, 0x4, LSL
	0x021EADEC ADD X0, X8, 0x138
	0x021EADF0 LDP X8, X1, [X0]
	0x021EADF4 MOV X0, X19
	0x021EADF8 BLR X8
	0x021EADFC TBZ X0, 0x0, 0x21EAE88
	0x021EAE00 LDR X8, [X21 + 0x38]
	0x021EAE04 LDR X1, [X8 + 0x18]
	0x021EAE08 LDRB W8, [X1 + 0x135]
	0x021EAE0C TBNZ X8, 0x0, 0x21EAE1C
	0x021EAE10 MOV X0, X1
	0x021EAE14 BL 0x1C5C684
	0x021EAE18 MOV X1, X0
	0x021EAE1C LDR X8, [X19]
	0x021EAE20 LDRH W9, [X8 + 0x12E]
	0x021EAE24 CBZ X9, 0x21EAE48
	0x021EAE28 LDR X10, [X8 + 0xB0]
	0x021EAE2C ADD X10, X10, 0x8
	0x021EAE30 LDUR X11, [X10 - 0x8]
	0x021EAE34 CMP X11, X1
	0x021EAE38 B.EQ 0x21EAE58
	0x021EAE3C SUBS X9, X9, 0x1
	0x021EAE40 ADD X10, X10, 0x10
	0x021EAE44 B.NE 0x21EAE30
	0x021EAE48 MOV X0, X19
	0x021EAE4C MOV W2, W31
	0x021EAE50 BL 0x1C5C788
	0x021EAE54 B 0x21EAE64
	0x021EAE58 LDRSW X9, [X10]
	0x021EAE5C ADD X8, X8, X9, 0x4, LSL
	0x021EAE60 ADD X0, X8, 0x138
	0x021EAE64 LDP X8, X1, [X0]
	0x021EAE68 MOV X0, X19
	0x021EAE6C BLR X8
	0x021EAE70 CBZ X0, 0x21EAF1C
	0x021EAE74 LDR X8, [X0]
	0x021EAE78 LDP X9, X1, [X8 + 0x158]
	0x021EAE7C BLR X9
	0x021EAE80 MADD W20, W20, W23, W0
	0x021EAE84 B 0x21EADA4
	0x021EAE88 MOV X21, X31
	0x021EAE8C CBZ X19, 0x21EAF04
	0x021EAE90 ADRP X10, 0x1F09000
	0x021EAE94 LDR X8, [X19]
	0x021EAE98 LDR X10, [X10 + 0xE00]
	0x021EAE9C LDRH W9, [X8 + 0x12E]
	0x021EAEA0 LDR X1, [X10]
	0x021EAEA4 CBZ X9, 0x21EAEC8
	0x021EAEA8 LDR X10, [X8 + 0xB0]
	0x021EAEAC ADD X10, X10, 0x8
	0x021EAEB0 LDUR X11, [X10 - 0x8]
	0x021EAEB4 CMP X11, X1
	0x021EAEB8 B.EQ 0x21EAEEC
	0x021EAEBC SUBS X9, X9, 0x1
	0x021EAEC0 ADD X10, X10, 0x10
	0x021EAEC4 B.NE 0x21EAEB0
	0x021EAEC8 MOV X0, X19
	0x021EAECC MOV W2, W31
	0x021EAED0 BL 0x1C5C788
	0x021EAED4 B 0x21EAEF8
	0x021EAED8 MOV X0, X21
	0x021EAEDC BL 0x1C5C6E0
	0x021EAEE0 CBNZ X19, 0x21EAD1C
	0x021EAEE4 MOV W20, W31
	0x021EAEE8 B 0x21EAF08
	0x021EAEEC LDRSW X9, [X10]
	0x021EAEF0 ADD X8, X8, X9, 0x4, LSL
	0x021EAEF4 ADD X0, X8, 0x138
	0x021EAEF8 LDP X8, X1, [X0]
	0x021EAEFC MOV X0, X19
	0x021EAF00 BLR X8
	0x021EAF04 CBNZ X21, 0x21EAF24
	0x021EAF08 MOV W0, W20
	0x021EAF0C LDP X20, X19, [X31 + 0x20]
	0x021EAF10 LDP X22, X21, [X31 + 0x10]
	0x021EAF14 LDP X30, X23, [X31], #0x30
	0x021EAF18 RET
	0x021EAF1C BL 0x1C16F20
	0x021EAF20 BL 0x1C16F20
	0x021EAF24 MOV X0, X21
	0x021EAF28 BL 0x1C16F18
	0x021EAF2C MOV X22, X0
	0x021EAF30 MOVZ W20, 0x11
	0x021EAF34 B 0x21EAF48
	0x021EAF38 B 0x21EAF44
	0x021EAF3C B 0x21EAF44
	0x021EAF40 B 0x21EAF44
	0x021EAF44 MOV X22, X0
	0x021EAF48 CMP W1, 0x1
	0x021EAF4C B.NE 0x21EAF64
	0x021EAF50 MOV X0, X22
	0x021EAF54 BL 0x3EB1AD0
	0x021EAF58 LDR X21, [X0]
	0x021EAF5C BL 0x3EB1AE0
	0x021EAF60 B 0x21EAE8C
	0x021EAF64 MOV X21, X31
	0x021EAF68 B 0x21EAF70
	0x021EAF6C MOV X22, X0
	0x021EAF70 CBZ X19, 0x21EAFD4
	0x021EAF74 ADRP X10, 0x1F09000
	0x021EAF78 LDR X8, [X19]
	0x021EAF7C LDR X10, [X10 + 0xE00]
	0x021EAF80 LDRH W9, [X8 + 0x12E]
	0x021EAF84 LDR X1, [X10]
	0x021EAF88 CBZ X9, 0x21EAFAC
	0x021EAF8C LDR X10, [X8 + 0xB0]
	0x021EAF90 ADD X10, X10, 0x8
	0x021EAF94 LDUR X11, [X10 - 0x8]
	0x021EAF98 CMP X11, X1
	0x021EAF9C B.EQ 0x21EAFBC
	0x021EAFA0 SUBS X9, X9, 0x1
	0x021EAFA4 ADD X10, X10, 0x10
	0x021EAFA8 B.NE 0x21EAF94
	0x021EAFAC MOV X0, X19
	0x021EAFB0 MOV W2, W31
	0x021EAFB4 BL 0x1C5C788
	0x021EAFB8 B 0x21EAFC8
	0x021EAFBC LDRSW X9, [X10]
	0x021EAFC0 ADD X8, X8, X9, 0x4, LSL
	0x021EAFC4 ADD X0, X8, 0x138
	0x021EAFC8 LDP X8, X1, [X0]
	0x021EAFCC MOV X0, X19
	0x021EAFD0 BLR X8
	0x021EAFD4 CBNZ X21, 0x21EAFE0
	0x021EAFD8 MOV X0, X22
	0x021EAFDC BL 0x1D2C690
	0x021EAFE0 MOV X0, X21
	0x021EAFE4 BL 0x1C16F18
	0x021EAFE8 BL 0x1990590
	0x021EAFEC STP X29, X30, [X31 - 0x60]!
	0x021EAFF0 STP X28, X27, [X31 + 0x10]
	0x021EAFF4 STP X26, X25, [X31 + 0x20]
	0x021EAFF8 STP X24, X23, [X31 + 0x30]
	0x021EAFFC STP X22, X21, [X31 + 0x40]
	0x021EB000 STP X20, X19, [X31 + 0x50]
	0x021EB004 ADD X29, X31, 0x0
	0x021EB008 SUB X31, X31, 0x10
	0x021EB00C MRS X26, 0xC000
	0x021EB010 LDR X8, [X26 + 0x28]
	0x021EB014 MOV X20, X1
	0x021EB018 MOV X19, X0
	0x021EB01C STUR X8, [X29 - 0x8]
	0x021EB020 LDR X8, [X1 + 0x38]
	0x021EB024 CBNZ X8, 0x21EB054
	0x021EB028 ADRP X0, 0x1F08000
	0x021EB02C LDR X0, [X0 + 0xE00]
	0x021EB030 BL 0x1C16CF4
	0x021EB034 ADRP X0, 0x1F08000
	0x021EB038 LDR X0, [X0 + 0xE18]
	0x021EB03C BL 0x1C16CF4
	0x021EB040 LDR X8, [X20 + 0x38]
	0x021EB044 CBNZ X8, 0x21EB054
	0x021EB048 MOV X0, X20
	0x021EB04C BL 0x1C5C6E0
	0x021EB050 LDR X8, [X20 + 0x38]
	0x021EB054 LDR X0, [X8 + 0x28]
	0x021EB058 LDR W22, [X0 + 0xFC]
	0x021EB05C LDRB W9, [X0 + 0x135]
	0x021EB060 MOV W8, W22
	0x021EB064 TBNZ X9, 0x0, 0x21EB070
	0x021EB068 BL 0x1C5C684
	0x021EB06C LDR W8, [X0 + 0xFC]
	0x021EB070 ADD W8, W8, 0x10
	0x021EB074 ADD X8, X8, 0xF
	0x021EB078 ADD X9, X31, 0x0
	0x021EB07C AND X8, X8, 0x1FFFFFFFF
	0x021EB080 SUB X23, X9, X8
	0x021EB084 ADD X31, X23, 0x0
	0x021EB088 ADD X9, X22, 0xF
	0x021EB08C ADD X8, X31, 0x0
	0x021EB090 AND X9, X9, 0x1FFFFFFFF
	0x021EB094 SUB X24, X8, X9
	0x021EB098 ADD X31, X24, 0x0
	0x021EB09C ADD X8, X31, 0x0
	0x021EB0A0 SUB X25, X8, X9
	0x021EB0A4 ADD X31, X25, 0x0
	0x021EB0A8 MOV X0, X25
	0x021EB0AC MOV W1, W31
	0x021EB0B0 MOV X2, X22
	0x021EB0B4 BL 0x3EB1B10
	0x021EB0B8 CBZ X19, 0x21EB114
	0x021EB0BC LDR X8, [X20 + 0x38]
	0x021EB0C0 LDR X1, [X8 + 0x8]
	0x021EB0C4 LDRB W8, [X1 + 0x135]
	0x021EB0C8 TBNZ X8, 0x0, 0x21EB0D8
	0x021EB0CC MOV X0, X1
	0x021EB0D0 BL 0x1C5C684
	0x021EB0D4 MOV X1, X0
	0x021EB0D8 LDR X8, [X19]
	0x021EB0DC LDRH W9, [X8 + 0x12E]
	0x021EB0E0 CBZ X9, 0x21EB104
	0x021EB0E4 LDR X10, [X8 + 0xB0]
	0x021EB0E8 ADD X10, X10, 0x8
	0x021EB0EC LDUR X11, [X10 - 0x8]
	0x021EB0F0 CMP X11, X1
	0x021EB0F4 B.EQ 0x21EB11C
	0x021EB0F8 SUBS X9, X9, 0x1
	0x021EB0FC ADD X10, X10, 0x10
	0x021EB100 B.NE 0x21EB0EC
	0x021EB104 MOV X0, X19
	0x021EB108 MOV W2, W31
	0x021EB10C BL 0x1C5C788
	0x021EB110 B 0x21EB128
	0x021EB114 MOV W21, W31
	0x021EB118 B 0x21EB2E0
	0x021EB11C LDRSW X9, [X10]
	0x021EB120 ADD X8, X8, X9, 0x4, LSL
	0x021EB124 ADD X0, X8, 0x138
	0x021EB128 LDP X8, X1, [X0]
	0x021EB12C MOV X0, X19
	0x021EB130 BLR X8
	0x021EB134 MOV X19, X0
	0x021EB138 CBZ X0, 0x21EB314
	0x021EB13C ADRP X27, 0x1F08000
	0x021EB140 LDR X27, [X27 + 0xE18]
	0x021EB144 MOVZ W21, 0x11
	0x021EB148 MOVZ W28, 0x1D
	0x021EB14C LDR X8, [X19]
	0x021EB150 LDR X1, [X27]
	0x021EB154 LDRH W9, [X8 + 0x12E]
	0x021EB158 CBZ X9, 0x21EB17C
	0x021EB15C LDR X10, [X8 + 0xB0]
	0x021EB160 ADD X10, X10, 0x8
	0x021EB164 LDUR X11, [X10 - 0x8]
	0x021EB168 CMP X11, X1
	0x021EB16C B.EQ 0x21EB18C
	0x021EB170 SUBS X9, X9, 0x1
	0x021EB174 ADD X10, X10, 0x10
	0x021EB178 B.NE 0x21EB164
	0x021EB17C MOV X0, X19
	0x021EB180 MOV W2, W31
	0x021EB184 BL 0x1C5C788
	0x021EB188 B 0x21EB198
	0x021EB18C LDRSW X9, [X10]
	0x021EB190 ADD X8, X8, X9, 0x4, LSL
	0x021EB194 ADD X0, X8, 0x138
	0x021EB198 LDP X8, X1, [X0]
	0x021EB19C MOV X0, X19
	0x021EB1A0 BLR X8
	0x021EB1A4 TBZ X0, 0x0, 0x21EB274
	0x021EB1A8 LDR X8, [X20 + 0x38]
	0x021EB1AC LDR X1, [X8 + 0x18]
	0x021EB1B0 LDRB W8, [X1 + 0x135]
	0x021EB1B4 TBNZ X8, 0x0, 0x21EB1C4
	0x021EB1B8 MOV X0, X1
	0x021EB1BC BL 0x1C5C684
	0x021EB1C0 MOV X1, X0
	0x021EB1C4 LDR X8, [X19]
	0x021EB1C8 LDRH W9, [X8 + 0x12E]
	0x021EB1CC CBZ X9, 0x21EB1F0
	0x021EB1D0 LDR X10, [X8 + 0xB0]
	0x021EB1D4 ADD X10, X10, 0x8
	0x021EB1D8 LDUR X11, [X10 - 0x8]

ISIL:
	001 Subtract X31, X31, 400
	002 Move [X31+304], X29
	003 Move [X31+312], X30
	004 Move [X31+320], X28
	005 Move [X31+328], X27
	006 Move [X31+336], X26
	007 Move [X31+344], X25
	008 Move [X31+352], X24
	009 Move [X31+360], X23
	010 Move [X31+368], X22
	011 Move [X31+376], X21
	012 Move [X31+384], X20
	013 Move [X31+392], X19
	014 Move V16, [X31+492]
	015 Move V17, [X31+488]
	016 Move X8, [X31+480]
	017 Move V19, [X31+448]
	018 Move V18, [X31+464]
	019 Move V21, [X31+416]
	020 Move V20, [X31+432]
	021 Move V22, [X31+25]
	022 Add X9, X31, 288
	023 Add X10, X31, 272
	024 Add X12, X31, 240
	025 Add X13, X31, 224
	026 Add X14, X31, 208
	027 Or X22, X9, 7
	028 Add X21, X9, 8
	029 Add X20, X9, 12
	030 Or X19, X10, 7
	031 Add X29, X10, 8
	032 Add X28, X10, 12
	033 Add X10, X12, 8
	034 Or X9, X13, 7
	035 Add X11, X31, 256
	036 Move [X31+64], X10
	037 Move [X31+72], X9
	038 Add X10, X13, 8
	039 Or X9, X14, 7
	040 Or X27, X11, 7
	041 Add X26, X11, 8
	042 Add X24, X11, 12
	043 Add X11, X12, 12
	044 Move [X31+80], X10
	045 Move [X31+88], X9
	046 Add X9, X14, 8
	047 Move [X31+288], S0
	048 Move [X31+292], S1
	049 Move [X31+296], S2
	050 Move [X31+300], S3
	051 Move [X31+272], S4
	052 Move [X31+276], S5
	053 Move [X31+280], S6
	054 Move [X31+284], S7
	055 Add X15, X31, 192
	056 Or X25, X12, 7
	057 Add X12, X13, 12
	058 Move [X31+96], X9
	059 Move [X31+104], X11
	060 Add X9, X14, 12
	061 Move [X31+240], V21
	062 Move [X31+248], V22
	063 Move [X31+208], V19
	064 Move [X31+216], V20
	065 Move [X31+12], V18
	066 Move [X31+176], X8
	067 Move [X31+184], S17
	068 Move [X31+192], S16
	069 Move [X31+120], X12
	070 Move [X31+128], X9
	071 Or X9, X15, 7
	072 Move X8, [X0+56]
	073 Move [X31+112], X9
	074 Add X9, X31, 176
	075 Add X11, X15, 8
	076 Or X10, X9, 7
	077 Add X12, X15, 12
	078 Move [X31+136], X11
	079 Move [X31+144], X10
	080 Add X10, X9, 8
	081 Add X9, X9, 12
	082 Move [X31+152], X12
	083 Move [X31+160], X10
	084 Move [X31+168], X9
	085 Compare X8, 0
	086 JumpIfNotEqual {96}
	087 Move X23, X0
	088 Move X0, 0x1F32000
	089 Move X0, [X0+2832]
	090 Call 0x1C17CF4
	091 Move X8, [X23+56]
	092 Compare X8, 0
	093 JumpIfNotEqual {96}
	094 Move X0, X23
	095 Call 0x1C5D6E0
	096 Add X0, X31, 288
	097 Move X1, X31
	098 Call Single.GetHashCode, X0
	099 Move [X31+44], W0
	100 Move X0, X22
	101 Move X1, X31
	102 Call Single.GetHashCode, X0
	103 Move W22, W0
	104 Move X0, X21
	105 Move X1, X31
	106 Call Single.GetHashCode, X0
	107 Move [X31+56], W0
	108 Move X0, X20
	109 Move X1, X31
	110 Call Single.GetHashCode, X0
	111 Move [X31+36], W0
	112 Add X0, X31, 272
	113 Move X1, X31
	114 Call Single.GetHashCode, X0
	115 Move [X31+28], W0
	116 Move X0, X19
	117 Move X1, X31
	118 Call Single.GetHashCode, X0
	119 Move [X31+16], W0
	120 Move X0, X29
	121 Move X1, X31
	122 Call Single.GetHashCode, X0
	123 Move [X31+48], W0
	124 Move X0, X28
	125 Move X1, X31
	126 Call Single.GetHashCode, X0
	127 Move W29, W0
	128 Add X0, X31, 256
	129 Move X1, X31
	130 Call Single.GetHashCode, X0
	131 Move [X31+20], W0
	132 Move X0, X27
	133 Move X1, X31
	134 Call Single.GetHashCode, X0
	135 Move [X31+12], W0
	136 Move X0, X26
	137 Move X1, X31
	138 Call Single.GetHashCode, X0
	139 Move [X31+32], W0
	140 Move X0, X24
	141 Move X1, X31
	142 Call Single.GetHashCode, X0
	143 Move W28, W0
	144 Add X0, X31, 240
	145 Move X1, X31
	146 Call Single.GetHashCode, X0
	147 Move W23, W0
	148 Move X0, X25
	149 Move X1, X31
	150 Call Single.GetHashCode, X0
	151 Move W25, W0
	152 Move X0, [X31+64]
	153 Move X1, X31
	154 Call Single.GetHashCode, X0
	155 Move [X31+64], W0
	156 Move X0, [X31+104]
	157 Move X1, X31
	158 Call Single.GetHashCode, X0
	159 Move [X31+104], W0
	160 Add X0, X31, 224
	161 Move X1, X31
	162 Call Single.GetHashCode, X0
	163 Move [X31+40], W0
	164 Move X0, [X31+72]
	165 Move X1, X31
	166 Call Single.GetHashCode, X0
	167 Move [X31+24], W0
	168 Move X0, [X31+80]
	169 Move X1, X31
	170 Call Single.GetHashCode, X0
	171 Move [X31+80], W0
	172 Move X0, [X31+120]
	173 Move X1, X31
	174 Call Single.GetHashCode, X0
	175 Move [X31+120], W0
	176 Add X0, X31, 208
	177 Move X1, X31
	178 Call Single.GetHashCode, X0
	179 Move [X31+60], W0
	180 Move X0, [X31+88]
	181 Move X1, X31
	182 Call Single.GetHashCode, X0
	183 Move [X31+52], W0
	184 Move X0, [X31+96]
	185 Move X1, X31
	186 Call Single.GetHashCode, X0
	187 Move [X31+96], W0
	188 Move X0, [X31+128]
	189 Move X1, X31
	190 Call Single.GetHashCode, X0
	191 Move [X31+128], W0
	192 Add X0, X31, 192
	193 Move X1, X31
	194 Call Single.GetHashCode, X0
	195 Move [X31+88], W0
	196 Move X0, [X31+112]
	197 Move X1, X31
	198 Call Single.GetHashCode, X0
	199 Move [X31+72], W0
	200 Move X0, [X31+136]
	201 Move X1, X31
	202 Call Single.GetHashCode, X0
	203 Move [X31+112], W0
	204 Move X0, [X31+152]
	205 Move X1, X31
	206 Call Single.GetHashCode, X0
	207 Move [X31+136], W0
	208 Add X0, X31, 176
	209 Move X1, X31
	210 Call Single.GetHashCode, X0
	211 Move [X31+152], W0
	212 Move X0, [X31+144]
	213 Move X1, X31
	214 Call Single.GetHashCode, X0
	215 Move [X31+144], W0
	216 Move X0, [X31+160]
	217 Move X1, X31
	218 Call Single.GetHashCode, X0
	219 Move [X31+160], W0
	220 Move X0, [X31+168]
	221 Move X1, X31
	222 Call Single.GetHashCode, X0
	223 Move X19, 0x1F32000
	224 Move X19, [X19+2832]
	225 Move [X31+168], W0
	226 Move X8, [X19]
	227 Move W9, [X8+224]
	228 Compare W9, 0
	229 JumpIfNotEqual {232}
	230 Move X0, X8
	231 Call 0x1C17DFC
	232 Move X21, 0x21F0000
	233 Move W9, [X31+44]
	234 Move W8, [X21+2101]
	235 Xor W20, W9, W22
	236 Compare W8, 0
	237 JumpIfNotEqual {243}
	238 Move X0, 0x1F32000
	239 Move X0, [X0+2832]
	240 Call 0x1C17CF4
	241 Move W8, 1
	242 Move [X21+2101], W8
	243 Move W9, [X31+28]
	244 Move W10, [X31+16]
	245 Move X0, [X19]
	246 Xor W21, W9, W10
	247 Move W9, [X31+56]
	248 Move W8, [X0+224]
	249 Xor W20, W20, W9
	250 Compare W8, 0
	251 JumpIfNotEqual {254}
	252 Call 0x1C17DFC
	253 Move X0, [X19]
	254 Move X8, [X0+184]
	255 Move W10, [X31+12]
	256 Move X27, 0x21F0000
	257 Move W9, [X27+2102]
	258 Move W24, [X8]
	259 Move W8, [X31+20]
	260 Xor W26, W8, W10
	261 Move W8, [X31+48]
	262 Xor W21, W21, W8
	263 Move W8, [X31+36]
	264 Xor W20, W20, W8
	265 Compare W9, 0
	266 JumpIfNotEqual {272}
	267 Move X0, X19
	268 Call 0x1C17CF4
	269 Move X0, [X19]
	270 Move W8, 1
	271 Move [X27+2102], W8
	272 Move W8, [X31+32]
	273 Xor W22, W23, W25
	274 Move W23, 0xCA77
	275 NotImplemented "Instruction MOVK not yet implemented."
	276 Xor W25, W26, W8
	277 Move W8, [X0+224]
	278 Move W10, 0x4428
	279 NotImplemented "Instruction MADD not yet implemented."
	280 NotImplemented "Instruction MOVK not yet implemented."
	281 Add W9, W9, W10
	282 Xor W26, W21, W29
	283 NotImplemented "Instruction EXTR not yet implemented."
	284 Move [X31+56], W9
	285 Compare W8, 0
	286 JumpIfNotEqual {296}
	287 Call 0x1C17DFC
	288 Move W8, [X27+2102]
	289 Compare W8, 0
	290 JumpIfNotEqual {296}
	291 Move X0, 0x1F32000
	292 Move X0, [X0+2832]
	293 Call 0x1C17CF4
	294 Move W8, 1
	295 Move [X27+2102], W8
	296 Move W8, [X31+40]
	297 Move W9, [X31+24]
	298 Move X0, [X19]
	299 Xor W21, W25, W28
	300 Xor W29, W8, W9
	301 Move W9, [X31+64]
	302 Move W8, [X0+224]
	303 Xor W27, W22, W9
	304 NotImplemented "Instruction MADD not yet implemented."
	305 Add W20, W9, W24
	306 Compare W8, 0
	307 JumpIfEqual {311}
	308 Move W23, 0xCA77
	309 NotImplemented "Instruction MOVK not yet implemented."
	310 NotImplemented "Instruction EXTR not yet implemented."
	311 Call 0x1C17DFC
	312 Move X22, 0x21F0000
	313 Move W8, [X22+2102]
	314 Move W23, 0xCA77
	315 NotImplemented "Instruction EXTR not yet implemented."
	316 NotImplemented "Instruction MOVK not yet implemented."
	317 Compare W8, 0
	318 JumpIfNotEqual {324}
	319 Move X0, 0x1F32000
	320 Move X0, [X0+2832]
	321 Call 0x1C17CF4
	322 Move W8, 1
	323 Move [X22+2102], W8
	324 Move W8, [X31+60]
	325 Move W9, [X31+52]
	326 Move X0, [X19]
	327 Move W22, 0x79B1
	328 NotImplemented "Instruction MOVK not yet implemented."
	329 Xor W28, W8, W9
	330 Move W9, [X31+80]
	331 Move W8, [X0+224]
	332 NotImplemented "Instruction MADD not yet implemented."
	333 Xor W29, W29, W9
	334 Move W9, [X31+104]
	335 Xor W27, W27, W9
	336 Compare W8, 0
	337 JumpIfEqual {339}
	338 NotImplemented "Instruction EXTR not yet implemented."
	339 Call 0x1C17DFC
	340 Move X21, 0x21F0000
	341 Move W8, [X21+2102]
	342 NotImplemented "Instruction EXTR not yet implemented."
	343 Compare W8, 0
	344 JumpIfNotEqual {350}
	345 Move X0, 0x1F32000
	346 Move X0, [X0+2832]
	347 Call 0x1C17CF4
	348 Move W8, 1
	349 Move [X21+2102], W8
	350 Move W8, [X31+88]
	351 Move W9, [X31+72]
	352 Move X0, [X19]
	353 Move W10, 0x864F
	354 NotImplemented "Instruction MOVK not yet implemented."
	355 Xor W20, W8, W9
	356 Move W8, [X31+96]
	357 Move W9, [X31+56]
	358 Xor W28, W28, W8
	359 Move W8, [X31+120]
	360 Xor W21, W29, W8
	361 Move W8, [X0+224]
	362 Multiply W29, W9, W22
	363 NotImplemented "Instruction MADD not yet implemented."
	364 Add W23, W9, W10
	365 Compare W8, 0
	366 JumpIfEqual {368}
	367 NotImplemented "Instruction EXTR not yet implemented."
	368 Call 0x1C17DFC
	369 Move X24, 0x21F0000
	370 Move W8, [X24+2102]
	371 NotImplemented "Instruction EXTR not yet implemented."
	372 Compare W8, 0
	373 JumpIfNotEqual {379}
	374 Move X0, 0x1F32000
	375 Move X0, [X0+2832]
	376 Call 0x1C17CF4
	377 Move W8, 1
	378 Move [X24+2102], W8
	379 Move W9, [X31+112]
	380 Move X0, [X19]
	381 Multiply W25, W25, W22
	382 Xor W27, W20, W9
	383 Move W9, [X31+128]
	384 Move W8, [X0+224]
	385 Xor W20, W28, W9
	386 Move W28, 0xCA77
	387 NotImplemented "Instruction MOVK not yet implemented."
	388 NotImplemented "Instruction MADD not yet implemented."
	389 Compare W8, 0
	390 JumpIfEqual {393}
	391 NotImplemented "Instruction EXTR not yet implemented."
	392 Move X29, 0x21EF000
	393 Call 0x1C17DFC
	394 Move X29, 0x21EF000
	395 Move W8, [X29+2102]
	396 NotImplemented "Instruction EXTR not yet implemented."
	397 Compare W8, 0
	398 JumpIfNotEqual {404}
	399 Move X0, 0x1F31000
	400 Move X0, [X0+2832]
	401 Call 0x1C17CF4
	402 Move W8, 1
	403 Move [X29+2102], W8
	404 Move X0, [X19]
	405 Move W9, [X31+136]
	406 Multiply W26, W26, W22
	407 NotImplemented "Instruction MADD not yet implemented."
	408 Move W8, [X0+224]
	409 Xor W21, W27, W9
	410 Compare W8, 0
	411 JumpIfEqual {413}
	412 NotImplemented "Instruction EXTR not yet implemented."
	413 Call 0x1C17DFC
	414 Move W8, [X29+2102]
	415 NotImplemented "Instruction EXTR not yet implemented."
	416 Compare W8, 0
	417 JumpIfNotEqual {423}
	418 Move X0, 0x1F31000
	419 Move X0, [X0+2832]
	420 Call 0x1C17CF4
	421 Move W8, 1
	422 Move [X29+2102], W8
	423 Move X0, [X19]
	424 Move W9, [X31+152]
	425 Move W10, [X31+144]
	426 NotImplemented "Instruction MADD not yet implemented."
	427 Move W8, [X0+224]
	428 Xor W20, W9, W10
	429 Compare W8, 0
	430 JumpIfEqual {432}
	431 NotImplemented "Instruction EXTR not yet implemented."
	432 Call 0x1C17DFC
	433 Move W8, [X29+2102]
	434 NotImplemented "Instruction EXTR not yet implemented."
	435 Compare W8, 0
	436 JumpIfNotEqual {442}
	437 Move X0, 0x1F31000
	438 Move X0, [X0+2832]
	439 Call 0x1C17CF4
	440 Move W8, 1
	441 Move [X29+2102], W8
	442 Move X0, [X19]
	443 Move W9, [X31+160]
	444 Move W8, [X0+224]
	445 Xor W20, W20, W9
	446 Compare W8, 0
	447 JumpIfNotEqual {449}
	448 Call 0x1C17DFC
	449 Move X27, 0x21EF000
	450 Move W9, [X31+168]
	451 Move W8, [X27+2103]
	452 Multiply W21, W23, W22
	453 Xor W20, W20, W9
	454 Compare W8, 0
	455 JumpIfNotEqual {461}
	456 Move X0, 0x1F31000
	457 Move X0, [X0+2832]
	458 Call 0x1C17CF4
	459 Move W8, 1
	460 Move [X27+2103], W8
	461 Move X0, [X19]
	462 NotImplemented "Instruction MADD not yet implemented."
	463 Move W8, [X0+224]
	464 Compare W8, 0
	465 JumpIfNotEqual {467}
	466 Call 0x1C17DFC
	467 Multiply W9, W26, W22
	468 Move X12, -24117248
	469 Move S0, W9
	470 Move X9, -24109056
	471 Move V1, [X12+255]
	472 Multiply W11, W24, W22
	473 Move V2, [X9+27]
	474 NotImplemented "Instruction EXTR not yet implemented."
	475 Multiply W10, W25, W22
	476 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	477 Multiply W8, W8, W22
	478 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	479 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	480 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	481 NotImplemented "Instruction INVALID not yet implemented."
	482 NotImplemented "Instruction INVALID not yet implemented."
	483 Or V0, V2, V0
	484 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	485 Move W8, S0
	486 Add W8, W8, 32
	487 Xor W8, W8, W8
	488 Multiply W8, W8, W28
	489 Move W9, 0xAE3D
	490 Move X20, [X31+384]
	491 Move X19, [X31+392]
	492 Move X22, [X31+368]
	493 Move X21, [X31+376]
	494 Move X24, [X31+352]
	495 Move X23, [X31+360]
	496 Move X26, [X31+336]
	497 Move X25, [X31+344]
	498 Move X28, [X31+320]
	499 Move X27, [X31+328]
	500 Move X29, [X31+304]
	501 Move X30, [X31+312]
	502 Xor W8, W8, W8
	503 NotImplemented "Instruction MOVK not yet implemented."
	504 Multiply W8, W8, W9
	505 Xor W0, W8, W8
	506 Add X31, X31, 400
	507 Return X0

Method: System.UInt32 Rol(System.UInt32 value, System.Int32 count)

Disassembly:
	0x0337A248 ADD X29, X31, 0x0
	0x0337A24C SUB X31, X31, 0xC0
	0x0337A250 MRS X25, 0xC000

ISIL:
	001 Subtract W8, W31, W1
	002 NotImplemented "Instruction RORV not yet implemented."
	003 Return X0

Method: System.Void Initialize(out System.UInt32 v1, out System.UInt32 v2, out System.UInt32 v3, out System.UInt32 v4)

Disassembly:
	0x0337A254 LDR X8, [X25 + 0x28]
	0x0337A258 ADRP X23, 0x1062000
	0x0337A25C ADRP X26, 0xDAE000
	0x0337A260 MOV X22, X3
	0x0337A264 STUR X8, [X29 - 0x8]
	0x0337A268 LDRB W8, [X23 + 0xFC0]
	0x0337A26C LDR X26, [X26 + 0x78]
	0x0337A270 MOV X19, X2
	0x0337A274 MOV X20, X1
	0x0337A278 MOV W21, W0
	0x0337A27C SUB X27, X29, 0x90
	0x0337A280 TBNZ X8, 0x0, 0x337A2B0
	0x0337A284 ADRP X0, 0xDAE000
	0x0337A288 LDR X0, [X0 + 0x78]
	0x0337A28C BL 0x1C16CF4
	0x0337A290 ADRP X0, 0xDA8000
	0x0337A294 LDR X0, [X0 + 0x28]
	0x0337A298 BL 0x1C16CF4
	0x0337A29C ADRP X0, 0xDA8000
	0x0337A2A0 LDR X0, [X0 + 0x4E8]
	0x0337A2A4 BL 0x1C16CF4
	0x0337A2A8 MOVZ W8, 0x1
	0x0337A2AC STRB W8, [X23 + 0xFC0]
	0x0337A2B0 LDR X0, [X26]
	0x0337A2B4 MOVI V0.2D, 0x0
	0x0337A2B8 STUR W31, [X29 - 0x94]
	0x0337A2BC STUR V0, [X27 + 0x6A]
	0x0337A2C0 STP V0, V0, [X29 - 0x40]
	0x0337A2C4 STP V0, V0, [X29 - 0x60]
	0x0337A2C8 STP V0, V0, [X29 - 0x80]
	0x0337A2CC STUR V0, [X29 - 0x90]
	0x0337A2D0 STP V0, V0, [X29 - 0xC0]
	0x0337A2D4 LDR W8, [X0 + 0xE0]
	0x0337A2D8 CBZ W19, 0x337A364
	0x0337A2DC CBNZ W8, 0x337A2E4
	0x0337A2E0 BL 0x1C16DFC
	0x0337A2E4 SUB X2, X29, 0x94
	0x0337A2E8 MOV X0, X20
	0x0337A2EC MOV X1, X19
	0x0337A2F0 BL 0x338071C
	0x0337A2F4 MOV W23, W0
	0x0337A2F8 MOV X0, X22
	0x0337A2FC MOV X1, X31
	0x0337A300 BL 0x333ACEC
	0x0337A304 LDUR W22, [X29 - 0x94]
	0x0337A308 MOVZ W8, 0xFFDF

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1063000
	009 Move X23, 0xDA2000
	010 Move W8, [X24+3894]
	011 Move X23, [X23+2832]
	012 Move X19, X3
	013 Move X20, X2
	014 Move X21, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xDA2000
	021 Move X0, [X0+2832]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+3894], W8
	025 Move X0, [X23]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X23]
	031 Move X8, [X0+184]
	032 Move W10, 0x4428
	033 NotImplemented "Instruction MOVK not yet implemented."
	034 Move X24, [X31+16]
	035 Move X23, [X31+24]
	036 Move W9, [X8]
	037 Add W9, W9, W10
	038 Move [X22], W9
	039 Move W9, [X8]
	040 Move W10, 0xCA77
	041 NotImplemented "Instruction MOVK not yet implemented."
	042 Add W9, W9, W10
	043 Move [X21], W9
	044 Move W9, [X8]
	045 Move X22, [X31+32]
	046 Move X21, [X31+40]
	047 Move [X20], W9
	048 Move W8, [X8]
	049 Move W9, 0x864F
	050 NotImplemented "Instruction MOVK not yet implemented."
	051 Add W8, W8, W9
	052 Move [X19], W8
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X30, [X31+64]
	056 Return 

Method: System.UInt32 Round(System.UInt32 hash, System.UInt32 input)

Disassembly:
	0x0337A30C AND W10, W23, W8, 0x0
	0x0337A310 CMP W10, 0x47
	0x0337A314 CSET W8, EQ
	0x0337A318 CMP W22, 0x1
	0x0337A31C CSET W9, LT
	0x0337A320 CMP W10, 0x44
	0x0337A324 B.EQ 0x337A378
	0x0337A328 AND W8, W8, W9, 0x0
	0x0337A32C CBNZ W8, 0x337A378
	0x0337A330 AND W8, W23, 0xFFFFFFDF
	0x0337A334 AND W8, W8, 0xFFFF
	0x0337A338 CMP W8, 0x58
	0x0337A33C B.NE 0x337A3C4
	0x0337A340 LDR X0, [X26]
	0x0337A344 LDR W8, [X0 + 0xE0]
	0x0337A348 CBNZ W8, 0x337A350
	0x0337A34C BL 0x1C16DFC
	0x0337A350 SUB W1, W23, 0x21
	0x0337A354 MOV W0, W21
	0x0337A358 MOV W2, W22
	0x0337A35C BL 0x3383B60
	0x0337A360 B 0x337A394
	0x0337A364 CBNZ W8, 0x337A36C
	0x0337A368 BL 0x1C16DFC
	0x0337A36C MOVN W1, 0x0
	0x0337A370 MOV W0, W21
	0x0337A374 B 0x337A390
	0x0337A378 LDR X0, [X26]
	0x0337A37C LDR W8, [X0 + 0xE0]
	0x0337A380 CBNZ W8, 0x337A388

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1063000
	007 Move X21, 0xDA2000
	008 Move W8, [X22+3895]
	009 Move X21, [X21+2832]
	010 Move W19, W1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDA2000
	017 Move X0, [X0+2832]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3895], W8
	021 Move X0, [X21]
	022 Move W9, 0xCA77
	023 NotImplemented "Instruction MOVK not yet implemented."
	024 NotImplemented "Instruction MADD not yet implemented."
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 NotImplemented "Instruction EXTR not yet implemented."
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move W9, 0x79B1
	035 NotImplemented "Instruction MOVK not yet implemented."
	036 Multiply W0, W8, W9
	037 Move X30, [X31+48]
	038 Return X0

Method: System.UInt32 QueueRound(System.UInt32 hash, System.UInt32 queuedValue)

Disassembly:
	0x0337A384 BL 0x1C16DFC
	0x0337A388 MOV W0, W21
	0x0337A38C MOV W1, W22
	0x0337A390 BL 0x3383824
	0x0337A394 LDR X8, [X25 + 0x28]
	0x0337A398 LDUR X9, [X29 - 0x8]
	0x0337A39C CMP X8, X9
	0x0337A3A0 B.NE 0x337A490
	0x0337A3A4 ADD X31, X29, 0x0
	0x0337A3A8 LDP X20, X19, [X31 + 0x50]
	0x0337A3AC LDP X22, X21, [X31 + 0x40]
	0x0337A3B0 LDP X24, X23, [X31 + 0x30]
	0x0337A3B4 LDP X26, X25, [X31 + 0x20]
	0x0337A3B8 LDP X28, X27, [X31 + 0x10]
	0x0337A3BC LDP X29, X30, [X31], #0x60
	0x0337A3C0 RET
	0x0337A3C4 MOV X24, X0
	0x0337A3C8 LDR X0, [X26]
	0x0337A3CC MOVI V0.2D, 0x0
	0x0337A3D0 STUR V0, [X27 + 0x6A]
	0x0337A3D4 STP V0, V0, [X29 - 0x40]
	0x0337A3D8 STP V0, V0, [X29 - 0x60]
	0x0337A3DC STP V0, V0, [X29 - 0x80]
	0x0337A3E0 STUR V0, [X29 - 0x90]
	0x0337A3E4 LDR W8, [X0 + 0xE0]
	0x0337A3E8 CBNZ W8, 0x337A3F0
	0x0337A3EC BL 0x1C16DFC
	0x0337A3F0 SUB X1, X29, 0x90
	0x0337A3F4 MOV W0, W21
	0x0337A3F8 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1063000
	007 Move X21, 0xDA2000
	008 Move W8, [X22+3896]
	009 Move X21, [X21+2832]
	010 Move W19, W1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDA2000
	017 Move X0, [X0+2832]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3896], W8
	021 Move X0, [X21]
	022 Move W9, 0xAE3D
	023 NotImplemented "Instruction MOVK not yet implemented."
	024 NotImplemented "Instruction MADD not yet implemented."
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 NotImplemented "Instruction EXTR not yet implemented."
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move W9, 0xEB2F
	035 NotImplemented "Instruction MOVK not yet implemented."
	036 Multiply W0, W8, W9
	037 Move X30, [X31+48]
	038 Return X0

Method: System.UInt32 MixState(System.UInt32 v1, System.UInt32 v2, System.UInt32 v3, System.UInt32 v4)

Disassembly:
	0x0337A3FC BL 0x338BEC4
	0x0337A400 ADD X8, X31, 0x0
	0x0337A404 SUB X1, X8, 0x40
	0x0337A408 ADD X31, X1, 0x0
	0x0337A40C MOVI V0.2D, 0x0
	0x0337A410 SUB X0, X29, 0xC0
	0x0337A414 MOVZ W2, 0x20
	0x0337A418 MOV X3, X31
	0x0337A41C STP V0, V0, [X8 - 0x20]
	0x0337A420 STP V0, V0, [X8 - 0x40]
	0x0337A424 BL 0x3240C88
	0x0337A428 LDR X0, [X26]
	0x0337A42C ANDS W31, W23, 0xFFFF
	0x0337A430 LDR W8, [X0 + 0xE0]
	0x0337A434 B.EQ 0x337A460
	0x0337A438 CBNZ W8, 0x337A440
	0x0337A43C BL 0x1C16DFC
	0x0337A440 SUB X0, X29, 0xC0
	0x0337A444 SUB X1, X29, 0x90
	0x0337A448 MOV W2, W23
	0x0337A44C MOV W3, W22
	0x0337A450 MOV X4, X24
	0x0337A454 MOV W5, W31
	0x0337A458 BL 0x3380A9C
	0x0337A45C B 0x337A480
	0x0337A460 CBNZ W8, 0x337A468
	0x0337A464 BL 0x1C16DFC
	0x0337A468 SUB X0, X29, 0xC0
	0x0337A46C SUB X1, X29, 0x90
	0x0337A470 MOV X2, X20
	0x0337A474 MOV X3, X19
	0x0337A478 MOV X4, X24
	0x0337A47C BL 0x338102C
	0x0337A480 SUB X0, X29, 0xC0
	0x0337A484 MOV X1, X31
	0x0337A488 BL 0x3240CC4
	0x0337A48C B 0x337A394
	0x0337A490 BL 0x3EB1B20
	0x0337A494 STR X30, [X31 - 0x50]!
	0x0337A498 STP X26, X25, [X31 + 0x10]
	0x0337A49C STP X24, X23, [X31 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x1063000
	009 Move X24, 0xDA2000
	010 Move W8, [X23+3897]
	011 Move X24, [X24+2832]
	012 Move W19, W3
	013 Move W20, W2
	014 Move W22, W1
	015 Move W21, W0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xDA2000
	021 Move X0, [X0+2832]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+3897], W8
	025 Move X0, [X24]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X8, -42524672
	031 Move X9, -42524672
	032 Move V1, [X8+151]
	033 Move S0, W22
	034 Move V2, [X9+192]
	035 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	036 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	037 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	038 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	039 NotImplemented "Instruction INVALID not yet implemented."
	040 NotImplemented "Instruction INVALID not yet implemented."
	041 Move X20, [X31+48]
	042 Move X19, [X31+56]
	043 Move X22, [X31+32]
	044 Move X21, [X31+40]
	045 Move X24, [X31+16]
	046 Move X23, [X31+24]
	047 Or V0, V0, V1
	048 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	049 Move W0, S0
	050 Move X30, [X31+64]
	051 Return X0

Method: System.UInt32 MixEmptyState()

Disassembly:
	0x0337A4A0 STP X22, X21, [X31 + 0x30]
	0x0337A4A4 STP X20, X19, [X31 + 0x40]
	0x0337A4A8 ADRP X26, 0x1062000
	0x0337A4AC LDRB W8, [X26 + 0xF44]
	0x0337A4B0 MOV X20, X6
	0x0337A4B4 MOV X23, X5
	0x0337A4B8 MOV X24, X4
	0x0337A4BC MOV X19, X3
	0x0337A4C0 MOV X21, X2
	0x0337A4C4 MOV X22, X1
	0x0337A4C8 MOV X25, X0
	0x0337A4CC TBNZ X8, 0x0, 0x337A4F0
	0x0337A4D0 ADRP X0, 0xDAE000
	0x0337A4D4 LDR X0, [X0 + 0x78]
	0x0337A4D8 BL 0x1C16CF4
	0x0337A4DC ADRP X0, 0xDA8000
	0x0337A4E0 LDR X0, [X0 + 0x28]
	0x0337A4E4 BL 0x1C16CF4
	0x0337A4E8 MOVZ W8, 0x1
	0x0337A4EC STRB W8, [X26 + 0xF44]
	0x0337A4F0 LDRSH W9, [X25]
	0x0337A4F4 ADRP X8, 0xDAE000
	0x0337A4F8 LDR X8, [X8 + 0x78]
	0x0337A4FC CMP W23, 0x1
	0x0337A500 AND W25, W9, 0xFFFF

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1063000
	005 Move X19, 0xDA2000
	006 Move W8, [X20+3898]
	007 Move X19, [X19+2832]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDA2000
	013 Move X0, [X0+2832]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3898], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W9, 0x67B1
	027 NotImplemented "Instruction MOVK not yet implemented."
	028 Move W8, [X8]
	029 Add W0, W8, W9
	030 Move X30, [X31+32]
	031 Return X0

Method: System.UInt32 MixFinal(System.UInt32 hash)

Disassembly:
	0x0337A504 B.LT 0x337A560
	0x0337A508 TBZ X9, 0x1F, 0x337A560
	0x0337A50C LDRH W9, [X24]
	0x0337A510 ORR W9, W9, 0x20
	0x0337A514 CMP W9, 0x78
	0x0337A518 B.NE 0x337A560
	0x0337A51C LDR X0, [X8]
	0x0337A520 LDR W8, [X0 + 0xE0]
	0x0337A524 CBNZ W8, 0x337A52C
	0x0337A528 BL 0x1C16DFC

ISIL:
	001 Move W9, 0xCA77
	002 Xor W8, W0, W0
	003 NotImplemented "Instruction MOVK not yet implemented."
	004 Multiply W8, W8, W9
	005 Move W9, 0xAE3D
	006 Xor W8, W8, W8
	007 NotImplemented "Instruction MOVK not yet implemented."
	008 Multiply W8, W8, W9
	009 Xor W0, W8, W8
	010 Return X0

Method: System.Void Add(T value)

Disassembly:
	0x021E9530 LDRB W9, [X0 + 0x135]
	0x021E9534 MOV W8, W26
	0x021E9538 TBNZ X9, 0x0, 0x21E9548
	0x021E953C BL 0x1C5C684
	0x021E9540 LDR W8, [X0 + 0xFC]
	0x021E9544 LDR X21, [X19 + 0x38]
	0x021E9548 ADD W8, W8, 0x10
	0x021E954C ADD X8, X8, 0xF
	0x021E9550 ADD X9, X31, 0x0
	0x021E9554 AND X8, X8, 0x1FFFFFFFF
	0x021E9558 SUB X8, X9, X8
	0x021E955C STUR X8, [X29 - 0x58]
	0x021E9560 ADD X31, X8, 0x0
	0x021E9564 LDR X0, [X21 + 0x20]
	0x021E9568 LDR W23, [X0 + 0xFC]
	0x021E956C LDRB W9, [X0 + 0x135]
	0x021E9570 MOV W8, W23
	0x021E9574 TBNZ X9, 0x0, 0x21E9584
	0x021E9578 BL 0x1C5C684
	0x021E957C LDR W8, [X0 + 0xFC]
	0x021E9580 LDR X21, [X19 + 0x38]
	0x021E9584 ADD W8, W8, 0x10
	0x021E9588 ADD X8, X8, 0xF
	0x021E958C ADD X9, X31, 0x0
	0x021E9590 AND X8, X8, 0x1FFFFFFFF
	0x021E9594 SUB X8, X9, X8
	0x021E9598 STUR X8, [X29 - 0x50]
	0x021E959C ADD X31, X8, 0x0
	0x021E95A0 LDR X0, [X21 + 0x30]
	0x021E95A4 LDR W24, [X0 + 0xFC]
	0x021E95A8 LDRB W9, [X0 + 0x135]
	0x021E95AC MOV W8, W24
	0x021E95B0 TBNZ X9, 0x0, 0x21E95C0
	0x021E95B4 BL 0x1C5C684
	0x021E95B8 LDR W8, [X0 + 0xFC]
	0x021E95BC LDR X21, [X19 + 0x38]
	0x021E95C0 ADD W8, W8, 0x10
	0x021E95C4 ADD X8, X8, 0xF
	0x021E95C8 ADD X9, X31, 0x0
	0x021E95CC AND X8, X8, 0x1FFFFFFFF
	0x021E95D0 SUB X8, X9, X8
	0x021E95D4 STP X8, X24, [X29 - 0x48]
	0x021E95D8 ADD X31, X8, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 And W8, W1, 1
	005 Move [X31+12], W8
	006 Move X8, [X2+56]
	007 Move X20, X2
	008 Move X19, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {22}
	011 Move X0, 0x1F0B000
	012 Move X0, [X0+2904]
	013 Call 0x1C17CF4
	014 Move X0, 0x1F33000
	015 Move X0, [X0+2832]
	016 Call 0x1C17CF4
	017 Move X8, [X20+56]
	018 Compare X8, 0
	019 JumpIfNotEqual {22}
	020 Move X0, X20
	021 Call 0x1C5D6E0
	022 Move X8, 0x1F0B000
	023 Move X8, [X8+2904]
	024 Move X0, [X8]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X8, [X20+56]
	030 Add X0, X31, 12
	031 Move X1, [X8+8]
	032 Call Boolean.GetHashCode, X0
	033 Move X8, 0x1F33000
	034 Move X8, [X8+2832]
	035 Move W20, W0
	036 Move X8, [X8]
	037 Move W9, [X8+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 Move X0, X19
	043 Move W1, W20
	044 Move X2, X31
	045 Call HashCode.Add, X0, X1
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Return 

Method: System.Void Add(System.Int32 value)

Disassembly:
	0x0337A52C MOV W0, W25
	0x0337A530 MOV X1, X24
	0x0337A534 MOV X2, X23
	0x0337A538 MOV X3, X20
	0x0337A53C MOV X4, X22
	0x0337A540 MOV X5, X21
	0x0337A544 MOV X6, X19
	0x0337A548 LDP X20, X19, [X31 + 0x40]
	0x0337A54C LDP X22, X21, [X31 + 0x30]
	0x0337A550 LDP X24, X23, [X31 + 0x20]
	0x0337A554 LDP X26, X25, [X31 + 0x10]
	0x0337A558 LDR X30, [X31], #0x50
	0x0337A55C B 0x337A5A8
	0x0337A560 LDR X0, [X8]
	0x0337A564 SXTH W25, W25
	0x0337A568 LDR W8, [X0 + 0xE0]
	0x0337A56C CBNZ W8, 0x337A574
	0x0337A570 BL 0x1C16DFC
	0x0337A574 MOV W0, W25
	0x0337A578 MOV X1, X24
	0x0337A57C MOV X2, X23
	0x0337A580 MOV X3, X20
	0x0337A584 MOV X4, X22
	0x0337A588 MOV X5, X21
	0x0337A58C MOV X6, X19
	0x0337A590 LDP X20, X19, [X31 + 0x40]
	0x0337A594 LDP X22, X21, [X31 + 0x30]
	0x0337A598 LDP X24, X23, [X31 + 0x20]
	0x0337A59C LDP X26, X25, [X31 + 0x10]
	0x0337A5A0 LDR X30, [X31], #0x50
	0x0337A5A4 B 0x337A848
	0x0337A5A8 STP X29, X30, [X31 - 0x60]!
	0x0337A5AC STP X28, X27, [X31 + 0x10]
	0x0337A5B0 STP X26, X25, [X31 + 0x20]
	0x0337A5B4 STP X24, X23, [X31 + 0x30]
	0x0337A5B8 STP X22, X21, [X31 + 0x40]
	0x0337A5BC STP X20, X19, [X31 + 0x50]
	0x0337A5C0 ADD X29, X31, 0x0
	0x0337A5C4 SUB X31, X31, 0xE0
	0x0337A5C8 MRS X28, 0xC000
	0x0337A5CC LDR X8, [X28 + 0x28]
	0x0337A5D0 ADRP X26, 0x1062000
	0x0337A5D4 ADRP X19, 0xDAE000
	0x0337A5D8 MOV X20, X6
	0x0337A5DC STUR X8, [X29 - 0x18]
	0x0337A5E0 LDRB W8, [X26 + 0xFC1]
	0x0337A5E4 LDR X19, [X19 + 0x78]
	0x0337A5E8 MOV X21, X5
	0x0337A5EC MOV X27, X4
	0x0337A5F0 MOV X25, X3
	0x0337A5F4 MOV X22, X2
	0x0337A5F8 MOV X23, X1
	0x0337A5FC MOV W24, W0
	0x0337A600 SUB X9, X29, 0xA0
	0x0337A604 TBNZ X8, 0x0, 0x337A638
	0x0337A608 ADRP X0, 0xDAE000
	0x0337A60C LDR X0, [X0 + 0x78]
	0x0337A610 BL 0x1C16CF4
	0x0337A614 ADRP X0, 0xDA8000
	0x0337A618 LDR X0, [X0 + 0x28]
	0x0337A61C BL 0x1C16CF4
	0x0337A620 ADRP X0, 0xDA8000
	0x0337A624 LDR X0, [X0 + 0x4E8]
	0x0337A628 BL 0x1C16CF4
	0x0337A62C SUB X9, X29, 0xA0
	0x0337A630 MOVZ W8, 0x1
	0x0337A634 STRB W8, [X26 + 0xFC1]
	0x0337A638 LDR X0, [X19]
	0x0337A63C MOVI V0.2D, 0x0
	0x0337A640 STUR W31, [X29 - 0xA4]
	0x0337A644 STUR V0, [X9 + 0x6A]
	0x0337A648 STP V0, V0, [X29 - 0x50]
	0x0337A64C STP V0, V0, [X29 - 0x70]
	0x0337A650 STP V0, V0, [X29 - 0x90]
	0x0337A654 STUR V0, [X29 - 0xA0]
	0x0337A658 STP V0, V0, [X29 - 0xD0]
	0x0337A65C LDR W8, [X0 + 0xE0]
	0x0337A660 CBZ W22, 0x337A6F8
	0x0337A664 CBNZ W8, 0x337A66C
	0x0337A668 BL 0x1C16DFC
	0x0337A66C SUB X2, X29, 0xA4
	0x0337A670 MOV X0, X23
	0x0337A674 MOV X1, X22
	0x0337A678 BL 0x338071C
	0x0337A67C MOV W26, W0
	0x0337A680 MOV X0, X25
	0x0337A684 MOV X1, X31
	0x0337A688 BL 0x333ACEC
	0x0337A68C LDUR W25, [X29 - 0xA4]
	0x0337A690 MOVZ W8, 0xFFDF
	0x0337A694 AND W10, W26, W8, 0x0
	0x0337A698 CMP W10, 0x47
	0x0337A69C CSET W8, EQ
	0x0337A6A0 CMP W25, 0x1
	0x0337A6A4 CSET W9, LT
	0x0337A6A8 CMP W10, 0x44
	0x0337A6AC B.EQ 0x337A70C
	0x0337A6B0 AND W8, W8, W9, 0x0
	0x0337A6B4 CBNZ W8, 0x337A70C
	0x0337A6B8 AND W8, W26, 0xFFFFFFDF
	0x0337A6BC AND W8, W8, 0xFFFF
	0x0337A6C0 CMP W8, 0x58
	0x0337A6C4 B.NE 0x337A768
	0x0337A6C8 LDR X0, [X19]
	0x0337A6CC LDR W8, [X0 + 0xE0]
	0x0337A6D0 CBNZ W8, 0x337A6D8
	0x0337A6D4 BL 0x1C16DFC
	0x0337A6D8 SUB W1, W26, 0x21
	0x0337A6DC MOV W0, W24
	0x0337A6E0 MOV W2, W25
	0x0337A6E4 MOV X3, X27
	0x0337A6E8 MOV X4, X21
	0x0337A6EC MOV X5, X20
	0x0337A6F0 BL 0x3384044
	0x0337A6F4 B 0x337A734
	0x0337A6F8 CBNZ W8, 0x337A700
	0x0337A6FC BL 0x1C16DFC
	0x0337A700 MOVN W1, 0x0
	0x0337A704 MOV W0, W24
	0x0337A708 B 0x337A724
	0x0337A70C LDR X0, [X19]
	0x0337A710 LDR W8, [X0 + 0xE0]
	0x0337A714 CBNZ W8, 0x337A71C
	0x0337A718 BL 0x1C16DFC
	0x0337A71C MOV W0, W24
	0x0337A720 MOV W1, W25
	0x0337A724 MOV X2, X27
	0x0337A728 MOV X3, X21
	0x0337A72C MOV X4, X20
	0x0337A730 BL 0x3383C98
	0x0337A734 LDR X8, [X28 + 0x28]
	0x0337A738 LDUR X9, [X29 - 0x18]
	0x0337A73C CMP X8, X9
	0x0337A740 B.NE 0x337A844
	0x0337A744 AND W0, W0, 0x1
	0x0337A748 ADD X31, X29, 0x0
	0x0337A74C LDP X20, X19, [X31 + 0x50]
	0x0337A750 LDP X22, X21, [X31 + 0x40]
	0x0337A754 LDP X24, X23, [X31 + 0x30]
	0x0337A758 LDP X26, X25, [X31 + 0x20]
	0x0337A75C LDP X28, X27, [X31 + 0x10]
	0x0337A760 LDP X29, X30, [X31], #0x60
	0x0337A764 RET
	0x0337A768 STUR X0, [X29 - 0xD8]
	0x0337A76C LDR X0, [X19]
	0x0337A770 MOVI V0.2D, 0x0
	0x0337A774 SUB X8, X29, 0xA0
	0x0337A778 STUR V0, [X8 + 0x6A]
	0x0337A77C STP V0, V0, [X29 - 0x50]
	0x0337A780 STP V0, V0, [X29 - 0x70]
	0x0337A784 STP V0, V0, [X29 - 0x90]
	0x0337A788 STUR V0, [X29 - 0xA0]
	0x0337A78C LDR W8, [X0 + 0xE0]
	0x0337A790 CBNZ W8, 0x337A798
	0x0337A794 BL 0x1C16DFC
	0x0337A798 SUB X1, X29, 0xA0
	0x0337A79C MOV W0, W24
	0x0337A7A0 MOV X2, X31
	0x0337A7A4 BL 0x338BEC4
	0x0337A7A8 ADD X8, X31, 0x0
	0x0337A7AC SUB X1, X8, 0x40
	0x0337A7B0 ADD X31, X1, 0x0
	0x0337A7B4 MOVI V0.2D, 0x0
	0x0337A7B8 SUB X0, X29, 0xD0
	0x0337A7BC MOVZ W2, 0x20
	0x0337A7C0 MOV X3, X31

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x1063000
	012 Move W8, [X21+3899]
	013 Move W20, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xDA2000
	020 Move X0, [X0+2832]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3899], W8
	024 Move W8, [X19+28]
	025 And W9, W8, 3
	026 Add W10, W8, 1
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move [X19+28], W10
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Compare W9, 0
	031 JumpIfNotEqual {35}
	032 Move [X19+16], W20
	033 Move [X19+24], W20
	034 Move [X19+20], W20
	035 Move W21, 0xCA77
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction MOVK not yet implemented."
	038 Move X22, 0xDA2000
	039 Move X22, [X22+2832]
	040 Move X0, [X22]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X23, 0x1060000
	046 Move W8, [X23+2101]
	047 Compare W8, 0
	048 JumpIfNotEqual {54}
	049 Move X0, 0xDA2000
	050 Move X0, [X0+2832]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X23+2101], W8
	054 Move X0, [X22]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move X0, [X22]
	060 Move X8, [X0+184]
	061 Move W10, 0x4428
	062 NotImplemented "Instruction MOVK not yet implemented."
	063 Move W9, [X8]
	064 Add W24, W9, W10
	065 Move [X19], W24
	066 Move W9, [X8]
	067 Add W9, W9, W21
	068 Move [X19+4], W9
	069 Move W9, [X8]
	070 Move [X19+8], W9
	071 Move W8, [X8]
	072 Move W9, 0x864F
	073 NotImplemented "Instruction MOVK not yet implemented."
	074 Add W8, W8, W9
	075 Move [X19+12], W8
	076 Move X8, 0xDA2000
	077 Move W24, [X19]
	078 Move X8, [X8+2832]
	079 Move X0, [X8]
	080 Move W8, [X0+224]
	081 Move W25, [X19+16]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X22, 0x1060000
	086 Move W8, [X22+2102]
	087 Compare W8, 0
	088 JumpIfNotEqual {94}
	089 Move X0, 0xDA2000
	090 Move X0, [X0+2832]
	091 Call 0x1C17CF4
	092 Move W8, 1
	093 Move [X22+2102], W8
	094 Move X23, 0xDA2000
	095 Move X23, [X23+2832]
	096 NotImplemented "Instruction MADD not yet implemented."
	097 Move X0, [X23]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfEqual {102}
	101 Move W8, W31
	102 Call 0x1C17DFC
	103 Move W8, [X22+2102]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 NotImplemented "Instruction CSET not yet implemented."
	106 Move W26, [X19+4]
	107 Move W27, [X19+20]
	108 Move W24, 0x79B1
	109 NotImplemented "Instruction MOVK not yet implemented."
	110 NotImplemented "Instruction EXTR not yet implemented."
	111 Multiply W9, W9, W24
	112 Move [X19], W9
	113 Compare W8, 0
	114 JumpIfEqual {120}
	115 Move X0, 0xDA2000
	116 Move X0, [X0+2832]
	117 Call 0x1C17CF4
	118 Move W8, 1
	119 Move [X22+2102], W8
	120 Move X0, [X23]
	121 NotImplemented "Instruction MADD not yet implemented."
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfEqual {126}
	125 Move W8, W31
	126 Call 0x1C17DFC
	127 Move W8, [X22+2102]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 NotImplemented "Instruction CSET not yet implemented."
	130 Move W26, [X19+8]
	131 Move W27, [X19+24]
	132 NotImplemented "Instruction EXTR not yet implemented."
	133 Multiply W9, W9, W24
	134 Move [X19+4], W9
	135 Compare W8, 0
	136 JumpIfEqual {142}
	137 Move X0, 0xDA2000
	138 Move X0, [X0+2832]
	139 Call 0x1C17CF4
	140 Move W8, 1
	141 Move [X22+2102], W8
	142 Move X0, [X23]
	143 NotImplemented "Instruction MADD not yet implemented."
	144 Move W8, [X0+224]
	145 Compare W8, 0
	146 JumpIfEqual {148}
	147 Move W8, W31
	148 Call 0x1C17DFC
	149 Move W8, [X22+2102]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 NotImplemented "Instruction CSET not yet implemented."
	152 Move W26, [X19+12]
	153 NotImplemented "Instruction EXTR not yet implemented."
	154 Multiply W9, W9, W24
	155 Move [X19+8], W9
	156 Compare W8, 0
	157 JumpIfEqual {163}
	158 Move X0, 0xDA2000
	159 Move X0, [X0+2832]
	160 Call 0x1C17CF4
	161 Move W8, 1
	162 Move [X22+2102], W8
	163 Move X0, [X23]
	164 NotImplemented "Instruction MADD not yet implemented."
	165 Move W8, [X0+224]
	166 Compare W8, 0
	167 JumpIfNotEqual {169}
	168 Call 0x1C17DFC
	169 NotImplemented "Instruction EXTR not yet implemented."
	170 Multiply W8, W8, W24
	171 Move [X19+12], W8
	172 Move X20, [X31+64]
	173 Move X19, [X31+72]
	174 Move X22, [X31+48]
	175 Move X21, [X31+56]
	176 Move X24, [X31+32]
	177 Move X23, [X31+40]
	178 Move X26, [X31+16]
	179 Move X25, [X31+24]
	180 Move X30, [X31+80]
	181 Move X27, [X31+88]
	182 Return 

Method: System.Int32 ToHashCode()

Disassembly:
	0x0337A7C4 STP V0, V0, [X8 - 0x20]
	0x0337A7C8 STP V0, V0, [X8 - 0x40]
	0x0337A7CC BL 0x3240C88
	0x0337A7D0 LDR X0, [X19]
	0x0337A7D4 ANDS W31, W26, 0xFFFF
	0x0337A7D8 LDR W8, [X0 + 0xE0]
	0x0337A7DC B.EQ 0x337A808
	0x0337A7E0 CBNZ W8, 0x337A7E8
	0x0337A7E4 BL 0x1C16DFC
	0x0337A7E8 LDUR X4, [X29 - 0xD8]
	0x0337A7EC SUB X0, X29, 0xD0
	0x0337A7F0 SUB X1, X29, 0xA0
	0x0337A7F4 MOV W2, W26
	0x0337A7F8 MOV W3, W25
	0x0337A7FC MOV W5, W31
	0x0337A800 BL 0x3380A9C
	0x0337A804 B 0x337A828
	0x0337A808 CBNZ W8, 0x337A810
	0x0337A80C BL 0x1C16DFC
	0x0337A810 LDUR X4, [X29 - 0xD8]
	0x0337A814 SUB X0, X29, 0xD0
	0x0337A818 SUB X1, X29, 0xA0
	0x0337A81C MOV X2, X23
	0x0337A820 MOV X3, X22
	0x0337A824 BL 0x338102C
	0x0337A828 SUB X0, X29, 0xD0
	0x0337A82C MOV X1, X27
	0x0337A830 MOV X2, X21
	0x0337A834 MOV X3, X20
	0x0337A838 MOV X4, X31
	0x0337A83C BL 0x3240D90
	0x0337A840 B 0x337A734
	0x0337A844 BL 0x3EB1B20
	0x0337A848 STP X29, X30, [X31 - 0x60]!
	0x0337A84C STP X28, X27, [X31 + 0x10]
	0x0337A850 STP X26, X25, [X31 + 0x20]
	0x0337A854 STP X24, X23, [X31 + 0x30]
	0x0337A858 STP X22, X21, [X31 + 0x40]
	0x0337A85C STP X20, X19, [X31 + 0x50]
	0x0337A860 ADD X29, X31, 0x0
	0x0337A864 SUB X31, X31, 0xE0
	0x0337A868 STUR X6, [X29 - 0xD8]
	0x0337A86C MRS X28, 0xC000
	0x0337A870 LDR X8, [X28 + 0x28]
	0x0337A874 ADRP X26, 0x1062000
	0x0337A878 ADRP X27, 0xDAE000
	0x0337A87C MOV X20, X5
	0x0337A880 STUR X8, [X29 - 0x18]
	0x0337A884 LDRB W8, [X26 + 0xFBF]
	0x0337A888 LDR X27, [X27 + 0x78]
	0x0337A88C MOV X21, X4
	0x0337A890 MOV X25, X3
	0x0337A894 MOV X23, X2
	0x0337A898 MOV X24, X1
	0x0337A89C MOV W22, W0
	0x0337A8A0 SUB X19, X29, 0xA0
	0x0337A8A4 TBNZ X8, 0x0, 0x337A8D4
	0x0337A8A8 ADRP X0, 0xDAE000
	0x0337A8AC LDR X0, [X0 + 0x78]
	0x0337A8B0 BL 0x1C16CF4
	0x0337A8B4 ADRP X0, 0xDA8000
	0x0337A8B8 LDR X0, [X0 + 0x28]
	0x0337A8BC BL 0x1C16CF4
	0x0337A8C0 ADRP X0, 0xDA8000
	0x0337A8C4 LDR X0, [X0 + 0x4E8]
	0x0337A8C8 BL 0x1C16CF4
	0x0337A8CC MOVZ W8, 0x1
	0x0337A8D0 STRB W8, [X26 + 0xFBF]
	0x0337A8D4 LDR X0, [X27]
	0x0337A8D8 MOVI V0.2D, 0x0
	0x0337A8DC STUR W31, [X29 - 0xA4]
	0x0337A8E0 STUR V0, [X19 + 0x6A]
	0x0337A8E4 STP V0, V0, [X29 - 0x50]
	0x0337A8E8 STP V0, V0, [X29 - 0x70]
	0x0337A8EC STP V0, V0, [X29 - 0x90]
	0x0337A8F0 STUR V0, [X29 - 0xA0]
	0x0337A8F4 STP V0, V0, [X29 - 0xD0]
	0x0337A8F8 LDR W8, [X0 + 0xE0]
	0x0337A8FC TBNZ X22, 0x1F, 0x337A918
	0x0337A900 CBNZ W23, 0x337A918
	0x0337A904 CBNZ W8, 0x337A90C
	0x0337A908 BL 0x1C16DFC
	0x0337A90C MOVN W1, 0x0
	0x0337A910 MOV W0, W22
	0x0337A914 B 0x337A9CC
	0x0337A918 CBNZ W8, 0x337A920
	0x0337A91C BL 0x1C16DFC
	0x0337A920 SUB X2, X29, 0xA4
	0x0337A924 MOV X0, X24
	0x0337A928 MOV X1, X23
	0x0337A92C BL 0x338071C
	0x0337A930 MOV W26, W0
	0x0337A934 MOV X0, X25
	0x0337A938 MOV X1, X31
	0x0337A93C BL 0x333ACEC
	0x0337A940 LDUR W25, [X29 - 0xA4]
	0x0337A944 MOVZ W8, 0xFFDF
	0x0337A948 AND W10, W26, W8, 0x0
	0x0337A94C CMP W10, 0x47
	0x0337A950 CSET W8, EQ
	0x0337A954 CMP W25, 0x1
	0x0337A958 CSET W9, LT
	0x0337A95C CMP W10, 0x44
	0x0337A960 MOV X10, X0
	0x0337A964 B.EQ 0x337A9B0
	0x0337A968 AND W8, W8, W9, 0x0
	0x0337A96C CBNZ W8, 0x337A9B0
	0x0337A970 AND W8, W26, 0xFFFFFFDF
	0x0337A974 AND W8, W8, 0xFFFF
	0x0337A978 CMP W8, 0x58
	0x0337A97C B.NE 0x337AA10
	0x0337A980 LDR X0, [X27]
	0x0337A984 LDR W8, [X0 + 0xE0]
	0x0337A988 CBNZ W8, 0x337A990
	0x0337A98C BL 0x1C16DFC
	0x0337A990 LDUR X5, [X29 - 0xD8]
	0x0337A994 SUB W1, W26, 0x21
	0x0337A998 MOV W0, W22
	0x0337A99C MOV W2, W25
	0x0337A9A0 MOV X3, X21
	0x0337A9A4 MOV X4, X20
	0x0337A9A8 BL 0x3384044
	0x0337A9AC B 0x337A9DC
	0x0337A9B0 TBNZ X22, 0x1F, 0x337AAAC
	0x0337A9B4 LDR X0, [X27]
	0x0337A9B8 LDR W8, [X0 + 0xE0]
	0x0337A9BC CBNZ W8, 0x337A9C4
	0x0337A9C0 BL 0x1C16DFC
	0x0337A9C4 MOV W0, W22
	0x0337A9C8 MOV W1, W25
	0x0337A9CC LDUR X4, [X29 - 0xD8]
	0x0337A9D0 MOV X2, X21
	0x0337A9D4 MOV X3, X20
	0x0337A9D8 BL 0x3383C98
	0x0337A9DC LDR X8, [X28 + 0x28]
	0x0337A9E0 LDUR X9, [X29 - 0x18]
	0x0337A9E4 CMP X8, X9
	0x0337A9E8 B.NE 0x337AB24
	0x0337A9EC AND W0, W0, 0x1
	0x0337A9F0 ADD X31, X29, 0x0
	0x0337A9F4 LDP X20, X19, [X31 + 0x50]
	0x0337A9F8 LDP X22, X21, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X20, 0x1063000
	012 Move W8, [X20+3900]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xDA2000
	019 Move X0, [X0+2832]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3900], W8
	023 Move W23, [X19+28]
	024 Move X20, 0xDA2000
	025 Move X20, [X20+2832]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 And W21, W23, 3
	028 Move X0, [X20]
	029 Move V0, [X19]
	030 Move W8, [X0+224]
	031 Move [X31], V0
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X22, 0x1060000
	036 Move W8, [X22+2103]
	037 Compare W8, 0
	038 JumpIfNotEqual {44}
	039 Move X0, 0xDA2000
	040 Move X0, [X0+2832]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X22+2103], W8
	044 Move X0, [X20]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X9, -42520576
	050 Move X8, -42520576
	051 Move V1, [X9+2]
	052 Move V0, [X8+127]
	053 Move V2, [X31]
	054 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	055 NotImplemented "Instruction INVALID not yet implemented."
	056 NotImplemented "Instruction INVALID not yet implemented."
	057 Or V0, V0, V1
	058 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	059 Move W0, S0
	060 Move X0, [X20]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Call HashCode.MixEmptyState
	066 Move W22, 0xAE3D
	067 NotImplemented "Instruction MOVK not yet implemented."
	068 Add W23, W0, W23
	069 Compare W21, 0
	070 JumpIfEqual {142}
	071 Move X0, [X20]
	072 Move W25, [X19+16]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X24, 0x1063000
	078 Move W8, [X24+4095]
	079 Compare W8, 0
	080 JumpIfNotEqual {86}
	081 Move X0, 0xDA2000
	082 Move X0, [X0+2832]
	083 Call 0x1C17CF4
	084 Move W8, 1
	085 Move [X24+4095], W8
	086 Move X0, [X20]
	087 NotImplemented "Instruction MADD not yet implemented."
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move W25, 0xEB2F
	093 NotImplemented "Instruction MOVK not yet implemented."
	094 NotImplemented "Instruction EXTR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Multiply W23, W8, W25
	097 Move X0, [X20]
	098 Move W26, [X19+20]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Move W8, [X24+4095]
	104 Compare W8, 0
	105 JumpIfNotEqual {111}
	106 Move X0, 0xDA2000
	107 Move X0, [X0+2832]
	108 Call 0x1C17CF4
	109 Move W8, 1
	110 Move [X24+4095], W8
	111 Move X0, [X20]
	112 NotImplemented "Instruction MADD not yet implemented."
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 NotImplemented "Instruction EXTR not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Multiply W23, W8, W25
	120 Move X0, [X20]
	121 Move W19, [X19+24]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {126}
	125 Call 0x1C17DFC
	126 Move W8, [X24+4095]
	127 Compare W8, 0
	128 JumpIfNotEqual {134}
	129 Move X0, 0xDA2000
	130 Move X0, [X0+2832]
	131 Call 0x1C17CF4
	132 Move W8, 1
	133 Move [X24+4095], W8
	134 Move X0, [X20]
	135 NotImplemented "Instruction MADD not yet implemented."
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1C17DFC
	140 NotImplemented "Instruction EXTR not yet implemented."
	141 Multiply W23, W8, W25
	142 Move X0, [X20]
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {147}
	146 Call 0x1C17DFC
	147 Move W9, 0xCA77
	148 Xor W8, W23, W23
	149 NotImplemented "Instruction MOVK not yet implemented."
	150 Multiply W8, W8, W9
	151 Xor W8, W8, W8
	152 Multiply W8, W8, W22
	153 Move X20, [X31+80]
	154 Move X19, [X31+88]
	155 Move X22, [X31+64]
	156 Move X21, [X31+72]
	157 Move X24, [X31+48]
	158 Move X23, [X31+56]
	159 Move X26, [X31+32]
	160 Move X25, [X31+40]
	161 Move X30, [X31+16]
	162 Xor W0, W8, W8
	163 Add X31, X31, 96
	164 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x0337A9FC LDP X24, X23, [X31 + 0x30]
	0x0337AA00 LDP X26, X25, [X31 + 0x20]
	0x0337AA04 LDP X28, X27, [X31 + 0x10]
	0x0337AA08 LDP X29, X30, [X31], #0x60
	0x0337AA0C RET
	0x0337AA10 LDR X0, [X27]
	0x0337AA14 MOVI V0.2D, 0x0
	0x0337AA18 STUR V0, [X19 + 0x6A]
	0x0337AA1C STP V0, V0, [X29 - 0x50]
	0x0337AA20 STP V0, V0, [X29 - 0x70]
	0x0337AA24 STP V0, V0, [X29 - 0x90]
	0x0337AA28 STUR V0, [X29 - 0xA0]
	0x0337AA2C LDR W8, [X0 + 0xE0]
	0x0337AA30 STUR X10, [X29 - 0xE0]
	0x0337AA34 CBNZ W8, 0x337AA3C
	0x0337AA38 BL 0x1C16DFC
	0x0337AA3C SUB X1, X29, 0xA0
	0x0337AA40 MOV W0, W22

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD7A000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xDB1000
	009 Move X0, [X0+3656]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Call NotSupportedException..ctor, X0, X1
	014 Move X0, 0xDB1000
	015 Move X0, [X0+3664]
	016 Call 0x1C17D08
	017 Move X1, X0
	018 Move X0, X19
	019 Call 0x1C17DEC

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x0337AA68 STP V0, V0, [X8 - 0x20]
	0x0337AA6C STP V0, V0, [X8 - 0x40]
	0x0337AA70 BL 0x3240C88
	0x0337AA74 LDR X0, [X27]
	0x0337AA78 ANDS W31, W26, 0xFFFF
	0x0337AA7C LDR W8, [X0 + 0xE0]
	0x0337AA80 B.EQ 0x337AAE4
	0x0337AA84 CBNZ W8, 0x337AA8C
	0x0337AA88 BL 0x1C16DFC
	0x0337AA8C LDUR X4, [X29 - 0xE0]
	0x0337AA90 SUB X0, X29, 0xD0
	0x0337AA94 SUB X1, X29, 0xA0
	0x0337AA98 MOV W2, W26
	0x0337AA9C MOV W3, W25
	0x0337AAA0 MOV W5, W31
	0x0337AAA4 BL 0x3380A9C
	0x0337AAA8 B 0x337AB04
	0x0337AAAC CBZ X10, 0x337AB20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD7A000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xDB1000
	009 Move X0, [X0+3672]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Call NotSupportedException..ctor, X0, X1
	014 Move X0, 0xDB1000
	015 Move X0, [X0+3680]
	016 Call 0x1C17D08
	017 Move X1, X0
	018 Move X0, X19
	019 Call 0x1C17DEC

Method: System.Void .cctor()

Disassembly:
	0x0337AAB0 LDR X0, [X27]
	0x0337AAB4 LDR X23, [X10 + 0x30]
	0x0337AAB8 LDR W8, [X0 + 0xE0]
	0x0337AABC CBNZ W8, 0x337AAC4
	0x0337AAC0 BL 0x1C16DFC
	0x0337AAC4 LDUR X5, [X29 - 0xD8]
	0x0337AAC8 MOV W0, W22
	0x0337AACC MOV W1, W25
	0x0337AAD0 MOV X2, X23
	0x0337AAD4 MOV X3, X21
	0x0337AAD8 MOV X4, X20
	0x0337AADC BL 0x3383E5C
	0x0337AAE0 B 0x337A9DC
	0x0337AAE4 CBNZ W8, 0x337AAEC
	0x0337AAE8 BL 0x1C16DFC
	0x0337AAEC LDUR X4, [X29 - 0xE0]
	0x0337AAF0 SUB X0, X29, 0xD0
	0x0337AAF4 SUB X1, X29, 0xA0
	0x0337AAF8 MOV X2, X24
	0x0337AAFC MOV X3, X23
	0x0337AB00 BL 0x338102C
	0x0337AB04 LDUR X3, [X29 - 0xD8]
	0x0337AB08 SUB X0, X29, 0xD0
	0x0337AB0C MOV X1, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1063000
	005 Move X19, 0xDA2000
	006 Move W8, [X20+3901]
	007 Move X19, [X19+2832]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDA2000
	013 Move X0, [X0+2832]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3901], W8
	017 Add X0, X31, 12
	018 Move W1, 4
	019 Move X2, X31
	020 Move [X31+12], W31
	021 Call Interop.GetRandomBytes, X0, X1
	022 Move X8, [X19]
	023 Move W9, [X31+12]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X8, [X8+184]
	027 Move [X8], W9
	028 Move X30, [X31+32]
	029 Return 

