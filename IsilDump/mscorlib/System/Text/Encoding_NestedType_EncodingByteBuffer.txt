Type: System.Text.Encoding/EncodingByteBuffer

Method: System.Void .ctor(System.Text.Encoding inEncoding, System.Text.EncoderNLS inEncoder, System.Byte* inByteStart, System.Int32 inByteCount, System.Char* inCharStart, System.Int32 inCharCount)

Disassembly:
	0x032470A8 CBNZ W8, 0x32470B0
	0x032470AC BL 0x1C16DFC
	0x032470B0 LDR W1, [X31 + 0xC]
	0x032470B4 MOV W0, W24
	0x032470B8 MOV W2, W28
	0x032470BC BL 0x3247160
	0x032470C0 CBNZ W0, 0x32470E0
	0x032470C4 AND W23, W27, 0xFF
	0x032470C8 CBZ W23, 0x3247110
	0x032470CC ADD W25, W25, 0x1
	0x032470D0 CMP W26, W25
	0x032470D4 B.NE 0x324706C
	0x032470D8 MOV W19, W26
	0x032470DC B 0x3247030
	0x032470E0 CBZ X20, 0x3247118
	0x032470E4 MOV W2, W0
	0x032470E8 MOV X0, X20
	0x032470EC MOV W1, W22
	0x032470F0 MOV X3, X31
	0x032470F4 BL 0x3232F10
	0x032470F8 MOVZ W2, 0x1
	0x032470FC MOV X0, X20
	0x03247100 MOV W1, W25
	0x03247104 MOV X3, X31
	0x03247108 BL 0x3233A34
	0x0324710C B 0x3247030
	0x03247110 ADD W19, W25, 0x1
	0x03247114 B 0x3247030
	0x03247118 MOVN W19, 0x0
	0x0324711C B 0x3247030
	0x03247120 BL 0x1C16F20
	0x03247124 STR X30, [X31 - 0x10]!
	0x03247128 CBZ X0, 0x324713C
	0x0324712C MOV W1, W2
	0x03247130 MOV X2, X31
	0x03247134 BL 0x3232E88
	0x03247138 B 0x3247150
	0x0324713C CBZ X1, 0x324715C
	0x03247140 MOV X0, X1
	0x03247144 MOV W1, W2
	0x03247148 MOV X2, X31
	0x0324714C BL 0x3222A1C
	0x03247150 AND W0, W0, 0xFFFF
	0x03247154 LDR X30, [X31], #0x10
	0x03247158 RET
	0x0324715C BL 0x1C16F20
	0x03247160 STP X30, X23, [X31 - 0x30]!
	0x03247164 STP X22, X21, [X31 + 0x10]
	0x03247168 STP X20, X19, [X31 + 0x20]
	0x0324716C ADRP X22, 0x1195000
	0x03247170 ADRP X23, 0xEDB000
	0x03247174 LDRB W8, [X22 + 0x465]
	0x03247178 LDR X23, [X23 + 0x2B8]
	0x0324717C MOV W19, W2
	0x03247180 MOV W20, W1
	0x03247184 MOV W21, W0
	0x03247188 TBNZ X8, 0x0, 0x32471A0
	0x0324718C ADRP X0, 0xEDB000
	0x03247190 LDR X0, [X0 + 0x2B8]
	0x03247194 BL 0x1C16CF4
	0x03247198 MOVZ W8, 0x1
	0x0324719C STRB W8, [X22 + 0x465]
	0x032471A0 LDR X0, [X23]
	0x032471A4 LDR W8, [X0 + 0xE0]
	0x032471A8 CBNZ W8, 0x32471B4
	0x032471AC BL 0x1C16DFC
	0x032471B0 LDR X0, [X23]
	0x032471B4 LDR X8, [X0 + 0xB8]
	0x032471B8 LDR X8, [X8 + 0x8]
	0x032471BC LDR W9, [X8, W21, SXTW]
	0x032471C0 CMP W9, W20
	0x032471C4 B.NE 0x3247260
	0x032471C8 LDR W9, [X0 + 0xE0]
	0x032471CC CBNZ W9, 0x32471E0
	0x032471D0 BL 0x1C16DFC
	0x032471D4 LDR X0, [X23]
	0x032471D8 LDR X8, [X0 + 0xB8]
	0x032471DC LDR X8, [X8 + 0x8]
	0x032471E0 ADD W9, W21, 0x1
	0x032471E4 LDR W9, [X8, W9, SXTW]
	0x032471E8 CMP W9, W19
	0x032471EC B.NE 0x3247238
	0x032471F0 LDR W9, [X0 + 0xE0]
	0x032471F4 CBNZ W9, 0x3247208
	0x032471F8 BL 0x1C16DFC
	0x032471FC LDR X0, [X23]
	0x03247200 LDR X8, [X0 + 0xB8]
	0x03247204 LDR X8, [X8 + 0x8]
	0x03247208 ADD W9, W21, 0x2
	0x0324720C LDR W8, [X8, W9, SXTW]
	0x03247210 CBNZ W8, 0x3247238
	0x03247214 LDR W8, [X0 + 0xE0]
	0x03247218 CBNZ W8, 0x3247220
	0x0324721C BL 0x1C16DFC
	0x03247220 MOV W0, W21
	0x03247224 BL 0x3246650
	0x03247228 MOV W22, W0
	0x0324722C BL 0x3246480
	0x03247230 TBZ X0, 0x6, 0x3247264
	0x03247234 LDR X0, [X23]
	0x03247238 LDR W8, [X0 + 0xE0]
	0x0324723C CBNZ W8, 0x3247248
	0x03247240 BL 0x1C16DFC
	0x03247244 LDR X0, [X23]
	0x03247248 LDR X8, [X0 + 0xB8]
	0x0324724C LDR X8, [X8 + 0x8]
	0x03247250 LDR W8, [X8, W21, SXTW]
	0x03247254 ADD W21, W21, 0x1
	0x03247258 CBNZ W8, 0x3247238
	0x0324725C B 0x32471A4
	0x03247260 MOV W22, W31
	0x03247264 MOV W0, W22
	0x03247268 LDP X20, X19, [X31 + 0x20]
	0x0324726C LDP X22, X21, [X31 + 0x10]
	0x03247270 LDP X30, X23, [X31], #0x30
	0x03247274 RET
	0x03247278 STR X30, [X31 - 0x30]!
	0x0324727C STP X22, X21, [X31 + 0x10]
	0x03247280 STP X20, X19, [X31 + 0x20]
	0x03247284 ADRP X22, 0x1195000
	0x03247288 ADRP X21, 0xEDB000
	0x0324728C LDRB W8, [X22 + 0x466]
	0x03247290 LDR X21, [X21 + 0x2B8]
	0x03247294 MOV W20, W1
	0x03247298 MOV X19, X0
	0x0324729C TBNZ X8, 0x0, 0x32472B4
	0x032472A0 ADRP X0, 0xEDB000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, X1
	010 Move X1, X31
	011 Move W22, W6
	012 Move X23, X5
	013 Move W24, W4
	014 Move X25, X3
	015 Move X21, X2
	016 Move X19, X0
	017 Call Object..ctor, X0
	018 Add X8, X23, W22
	019 Add X9, X25, W24
	020 Move [X19+72], X20
	021 Move [X19+80], X21
	022 Move [X19+16], X25
	023 Move [X19+24], X25
	024 Move [X19+48], X23
	025 Move [X19+56], X8
	026 Move [X19+32], X9
	027 Move [X19+40], X23
	028 Compare X21, 0
	029 JumpIfEqual {122}
	030 Move X0, X21
	031 Move X1, X31
	032 Call Encoder.get_FallbackBuffer, X0
	033 Move X8, [X19+80]
	034 Move [X19+88], X0
	035 Compare X8, 0
	036 JumpIfEqual {152}
	037 Move W9, [X8+49]
	038 Compare W9, 0
	039 JumpIfEqual {132}
	040 Move X0, X8
	041 Move X1, X31
	042 Call Encoder.get_InternalHasFallbackBuffer, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {132}
	047 Move X0, [X19+88]
	048 Compare X0, 0
	049 JumpIfEqual {152}
	050 Move X8, [X0]
	051 Move X9, [X8+440]
	052 Move X1, [X8+448]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X0, 0xEAD000
	056 Move X0, [X0+2512]
	057 Call 0x1C17D08
	058 Move W1, 2
	059 Call 0x1C17D6C
	060 Move X21, [X19+80]
	061 Move X20, X0
	062 Move X0, X21
	063 Call 0x19913C0
	064 Move X21, [X21+40]
	065 Move X0, X21
	066 Call 0x19913C0
	067 Move X8, [X21]
	068 Move X0, X21
	069 Move X9, [X8+440]
	070 Move X1, [X8+448]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X21, X0
	073 Move X0, X20
	074 Call 0x19913C0
	075 Move X0, X20
	076 Move X1, X21
	077 Call 0x19990B4
	078 Move X0, X20
	079 Move X1, X31
	080 Move X2, X21
	081 Call 0x1994444
	082 Move X19, [X19+80]
	083 Move X0, X19
	084 Call 0x19913C0
	085 Move X19, [X19+16]
	086 Move X0, X19
	087 Call 0x19913C0
	088 Move X0, X19
	089 Move X1, X31
	090 Call "il2cpp_vm_object_is_inst", X0
	091 Move X19, X0
	092 Move X0, X20
	093 Call 0x19913C0
	094 Move X0, X20
	095 Move X1, X19
	096 Call 0x19990B4
	097 Move W1, 1
	098 Move X0, X20
	099 Move X2, X19
	100 Call 0x1994444
	101 Move X0, 0xEDC000
	102 Move X0, [X0+1712]
	103 Call 0x1C17D08
	104 Move X1, X20
	105 Move X2, X31
	106 Call Environment.GetResourceString, X0, X1
	107 Move X19, X0
	108 Move X0, 0xEB5000
	109 Move X0, [X0+1400]
	110 Call 0x1C17D08
	111 Call 0x1C17F10
	112 Move X1, X19
	113 Move X2, X31
	114 Move X20, X0
	115 Call ArgumentException..ctor, X0, X1
	116 Move X0, 0xEDC000
	117 Move X0, [X0+2904]
	118 Call 0x1C17D08
	119 Move X1, X0
	120 Move X0, X20
	121 Call 0x1C17DEC
	122 Compare X20, 0
	123 JumpIfEqual {152}
	124 Move X0, [X20+40]
	125 Compare X0, 0
	126 JumpIfEqual {152}
	127 Move X8, [X0]
	128 Move X9, [X8+376]
	129 Move X1, [X8+384]
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move [X19+88], X0
	132 Move X0, [X19+88]
	133 Compare X0, 0
	134 JumpIfEqual {152}
	135 Move X8, [X19+16]
	136 Move X3, [X19+80]
	137 Move X2, [X19+56]
	138 Move X1, [X19+40]
	139 Move X20, [X31+48]
	140 Move X19, [X31+56]
	141 Move X22, [X31+32]
	142 Move X21, [X31+40]
	143 Move X24, [X31+16]
	144 Move X23, [X31+24]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 NotImplemented "Instruction CSET not yet implemented."
	147 Move X5, X31
	148 Move X30, [X31+64]
	149 Move X25, [X31+72]
	150 Call EncoderFallbackBuffer.InternalInitialize, X0, X1, X2, X3, X4
	151 Return 
	152 Call 0x1C17F20

Method: System.Boolean AddByte(System.Byte b, System.Int32 moreBytesExpected)

Disassembly:
	0x032472A4 LDR X0, [X0 + 0x2B8]
	0x032472A8 BL 0x1C16CF4
	0x032472AC MOVZ W8, 0x1
	0x032472B0 STRB W8, [X22 + 0x466]
	0x032472B4 LDR X0, [X21]
	0x032472B8 STR X31, [X31 + 0x8]
	0x032472BC LDR W8, [X0 + 0xE0]
	0x032472C0 CBNZ W8, 0x32472C8
	0x032472C4 BL 0x1C16DFC
	0x032472C8 ADD X1, X31, 0x8
	0x032472CC MOV X0, X19
	0x032472D0 MOV W2, W20
	0x032472D4 BL 0x324687C
	0x032472D8 LDR X0, [X31 + 0x8]
	0x032472DC CBZ X0, 0x32472F0
	0x032472E0 LDR X8, [X0]
	0x032472E4 LDP X9, X1, [X8 + 0x168]
	0x032472E8 BLR X9
	0x032472EC MOV X19, X0
	0x032472F0 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move X9, [X0+32]
	006 Subtract X9, X9, W2
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Add X9, X8, 1
	009 Move [X0+16], X9
	010 Move [X8], W1
	011 Move W8, [X0+64]
	012 Add W8, W8, 1
	013 Move [X0+64], W8
	014 Move W0, 1
	015 Move W1, 1
	016 Call EncodingByteBuffer.MovePrevious, X0, X1
	017 Move W0, W31
	018 Move X30, [X31+16]
	019 Return X0

Method: System.Boolean AddByte(System.Byte b1)

Disassembly:
	0x03247370 CBZ X24, 0x32474D4
	0x03247374 ADRP X8, 0xEAC000

ISIL:
	001 Move W2, W31
	002 Call EncodingByteBuffer.AddByte, X0, X1, X2
	003 Return X0

Method: System.Boolean AddByte(System.Byte b1, System.Byte b2)

Disassembly:
	0x03247378 LDR W26, [X24 + 0x10]
	0x0324737C LDR X8, [X8 + 0x8F0]

ISIL:
	001 Move W3, W31

Method: System.Boolean AddByte(System.Byte b1, System.Byte b2, System.Int32 moreBytesExpected)

Disassembly:
	0x03247380 LDR X0, [X8]
	0x03247384 BL 0x1C16F10
	0x03247388 ADD W1, W26, 0x64
	0x0324738C MOV X2, X31
	0x03247390 MOV X25, X0
	0x03247394 BL 0x3231B28
	0x03247398 STR X25, [X22]
	0x0324739C CBZ X25, 0x32474D4
	0x032473A0 LDR W2, [X19]
	0x032473A4 MOV X0, X25
	0x032473A8 MOV X1, X24
	0x032473AC MOV X4, X31
	0x032473B0 SUB W3, W20, W2
	0x032473B4 BL 0x323351C
	0x032473B8 LDR X8, [X21]
	0x032473BC CBNZ X8, 0x32473D8
	0x032473C0 ADRP X8, 0xEAD000
	0x032473C4 LDR X8, [X8 + 0xE58]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W2
	006 Add W2, W3, 1
	007 Move W19, W3
	008 Move X21, X0
	009 Call EncodingByteBuffer.AddByte, X0, X1, X2
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {23}
	014 Move W1, W20
	015 Move W2, W19
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X0, X21
	019 Move X30, [X31+32]
	020 Move X21, [X31+40]
	021 Call EncodingByteBuffer.AddByte, X0, X1, X2
	022 Return X0
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move W0, W31
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 Return X0

Method: System.Void MovePrevious(System.Boolean bThrow)

Disassembly:
	0x032472F4 LDP X20, X19, [X31 + 0x20]
	0x032472F8 LDP X22, X21, [X31 + 0x10]
	0x032472FC LDR X30, [X31], #0x30
	0x03247300 RET
	0x03247304 STR X30, [X31 - 0x50]!
	0x03247308 STP X26, X25, [X31 + 0x10]
	0x0324730C STP X24, X23, [X31 + 0x20]
	0x03247310 STP X22, X21, [X31 + 0x30]
	0x03247314 STP X20, X19, [X31 + 0x40]
	0x03247318 ADRP X25, 0x1195000
	0x0324731C LDRB W8, [X25 + 0x469]
	0x03247320 MOV X19, X5
	0x03247324 MOV W23, W4
	0x03247328 MOV W20, W3
	0x0324732C MOV X24, X2
	0x03247330 MOV X21, X1
	0x03247334 MOV X22, X0
	0x03247338 TBNZ X8, 0x0, 0x3247368
	0x0324733C ADRP X0, 0xEAD000
	0x03247340 LDR X0, [X0 + 0xE58]
	0x03247344 BL 0x1C16CF4
	0x03247348 ADRP X0, 0xEDB000
	0x0324734C LDR X0, [X0 + 0x2B8]
	0x03247350 BL 0x1C16CF4
	0x03247354 ADRP X0, 0xEAC000
	0x03247358 LDR X0, [X0 + 0x8F0]
	0x0324735C BL 0x1C16CF4
	0x03247360 MOVZ W8, 0x1
	0x03247364 STRB W8, [X25 + 0x469]
	0x03247368 LDR X25, [X22]
	0x0324736C CBNZ X25, 0x32473A0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+88]
	006 Compare X0, 0
	007 JumpIfEqual {42}
	008 Move W8, [X0+42]
	009 Move W20, W1
	010 Compare W8, 0
	011 JumpIfEqual {16}
	012 Move X8, [X0]
	013 Move X9, [X8+424]
	014 Move X1, [X8+432]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move X8, [X19+40]
	017 Move X9, [X19+48]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Subtract X8, X8, 2
	020 Move [X19+40], X8
	021 Move TEMP, X20
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {38}
	025 Move X0, [X19+72]
	026 Compare X0, 0
	027 JumpIfEqual {42}
	028 Move X9, [X19+16]
	029 Move X8, [X19+24]
	030 Move X1, [X19+80]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSET not yet implemented."
	035 Move X30, [X31+32]
	036 Call Encoding.ThrowBytesOverflow, X0, X1, X2
	037 Return 
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return 
	042 Call 0x1C17F20

Method: System.Boolean get_MoreData()

Disassembly:
	0x032473C8 MOVZ W1, 0x13
	0x032473CC LDR X0, [X8]
	0x032473D0 BL 0x1C16D6C
	0x032473D4 STR X0, [X21]
	0x032473D8 CBZ X24, 0x32474D4
	0x032473DC ADRP X25, 0xEDB000
	0x032473E0 LDR X25, [X25 + 0x2B8]
	0x032473E4 MOV X0, X24
	0x032473E8 MOV W1, W20
	0x032473EC MOV X2, X31
	0x032473F0 BL 0x3222A1C
	0x032473F4 LDR X8, [X25]
	0x032473F8 LDR X24, [X21]
	0x032473FC MOV W25, W0
	0x03247400 LDR W9, [X8 + 0xE0]
	0x03247404 CBNZ W9, 0x3247410
	0x03247408 MOV X0, X8
	0x0324740C BL 0x1C16DFC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+88]
	005 Compare X0, 0
	006 JumpIfEqual {20}
	007 Move X8, [X0]
	008 Move X9, [X8+440]
	009 Move X1, [X8+448]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W0, 1
	013 Move X8, [X19+40]
	014 Move X9, [X19+56]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 NotImplemented "Instruction CSET not yet implemented."
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return X0
	020 Call 0x1C17F20

Method: System.Char GetNextChar()

Disassembly:
	0x03247410 AND W0, W25, 0xFFFF
	0x03247414 MOV X1, X24
	0x03247418 MOV W2, W31
	0x0324741C MOV W3, W23
	0x03247420 BL 0x324774C
	0x03247424 CMP W0, 0x1
	0x03247428 B.LT 0x32474B4
	0x0324742C MOV X23, X31
	0x03247430 MOV W24, W0
	0x03247434 MOVZ W25, 0xFFFE
	0x03247438 MOVN W26, 0x23FF
	0x0324743C LDR X8, [X21]
	0x03247440 CBZ X8, 0x32474D4
	0x03247444 LDR W9, [X8 + 0x18]
	0x03247448 CMP X23, X9
	0x0324744C B.CS 0x32474D8
	0x03247450 LDR X0, [X22]
	0x03247454 CBZ X0, 0x32474D4
	0x03247458 ADD X8, X8, X23, 0x2, LSL
	0x0324745C LDR W1, [X8 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+88]
	005 Compare X0, 0
	006 JumpIfEqual {20}
	007 Move X1, X31
	008 Call EncoderFallbackBuffer.InternalGetNextChar, X0
	009 And W31, W0, 0xFFFF
	010 Move X8, [X19+40]
	011 Move X9, [X19+56]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Add X9, X8, 2
	014 Move [X19+40], X9
	015 NotImplemented "Instruction LDRH not yet implemented."
	016 Move W0, W31
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return X0
	020 Call 0x1C17F20

Method: System.Int32 get_CharsUsed()

Disassembly:
	0x03247460 CMP W1, W25
	0x03247464 B.LE 0x32474A0
	0x03247468 UBFM W1, W1, 0xA, 0x1F
	0x0324746C MOV X2, X31
	0x03247470 BL 0x3233D30
	0x03247474 LDR X8, [X21]

ISIL:
	001 Move X8, [X0+40]
	002 Move X9, [X0+48]
	003 Subtract X8, X8, X9
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CINC not yet implemented."
	006 Move X0, X8
	007 ShiftRight X0, 1
	008 And X0, X0, 0x7FFFFFFF
	009 Return X0

Method: System.Int32 get_Count()

Disassembly:
	0x03247478 CBZ X8, 0x32474D4
	0x0324747C LDR W9, [X8 + 0x18]

ISIL:
	001 Move W0, [X0+64]
	002 Return X0

