Type: System.Text.UnicodeEncoding

Method: System.Void .ctor()

Disassembly:
	0x0323E790 STRB W8, [X23 + 0x418]
	0x0323E794 CBZ X22, 0x323E804
	0x0323E798 TBNZ X20, 0x1F, 0x323E84C
	0x0323E79C TBNZ X19, 0x1F, 0x323E84C
	0x0323E7A0 LDR W8, [X22 + 0x18]
	0x0323E7A4 SUB W9, W8, W19
	0x0323E7A8 CMP W9, W20
	0x0323E7AC B.LT 0x323E8B8
	0x0323E7B0 CBZ W20, 0x323E7E0
	0x0323E7B4 ADD X9, X22, 0x20
	0x0323E7B8 CMP W8, 0x0
	0x0323E7BC CSEL X8, X31, X9, EQ
	0x0323E7C0 ADD X0, X8, W19, SXTW

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, 1
	005 Move W1, 1200
	006 Move X2, X31
	007 Move X19, X0
	008 Move [X0+58], W20
	009 Call Encoding..ctor, X0, X1
	010 NotImplemented "Instruction STRH not yet implemented."
	011 Move [X19+58], W20
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void .ctor(System.Boolean bigEndian, System.Boolean byteOrderMark)

Disassembly:
	0x0323E7C4 MOV W1, W20
	0x0323E7C8 MOV X2, X21
	0x0323E7CC LDP X20, X19, [X31 + 0x20]
	0x0323E7D0 LDP X22, X21, [X31 + 0x10]
	0x0323E7D4 MOV X3, X31
	0x0323E7D8 LDP X30, X23, [X31], #0x30
	0x0323E7DC B 0x322DAF4
	0x0323E7E0 ADRP X8, 0xEB7000
	0x0323E7E4 LDR X8, [X8 + 0x278]
	0x0323E7E8 LDP X20, X19, [X31 + 0x20]
	0x0323E7EC LDP X22, X21, [X31 + 0x10]
	0x0323E7F0 LDR X8, [X8]
	0x0323E7F4 LDR X8, [X8 + 0xB8]
	0x0323E7F8 LDR X0, [X8]
	0x0323E7FC LDP X30, X23, [X31], #0x30
	0x0323E800 RET
	0x0323E804 ADRP X0, 0xEBA000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 And W21, W1, 1
	006 Move W9, 1200
	007 And W20, W2, 1
	008 Move W8, 1
	009 NotImplemented "Instruction CINC not yet implemented."
	010 Move X2, X31
	011 Move X19, X0
	012 Move [X0+58], W8
	013 Call Encoding..ctor, X0, X1
	014 Move [X19+56], W31
	015 Move [X19+57], W21
	016 Move [X19+58], W20
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Move X21, [X31+40]
	021 Return 

Method: System.Void .ctor(System.Boolean bigEndian, System.Boolean byteOrderMark, System.Boolean throwOnInvalidBytes)

Disassembly:
	0x0323E808 LDR X0, [X0 + 0x528]
	0x0323E80C BL 0x1C16D08
	0x0323E810 BL 0x1C16F10
	0x0323E814 MOV X19, X0
	0x0323E818 ADRP X0, 0xEE4000
	0x0323E81C LDR X0, [X0 + 0x308]
	0x0323E820 BL 0x1C16D08
	0x0323E824 MOV X20, X0
	0x0323E828 ADRP X0, 0xEE4000
	0x0323E82C LDR X0, [X0 + 0x2E0]
	0x0323E830 BL 0x1C16D08
	0x0323E834 MOV X2, X0
	0x0323E838 MOV X0, X19
	0x0323E83C MOV X1, X20
	0x0323E840 MOV X3, X31
	0x0323E844 BL 0x3315F7C
	0x0323E848 B 0x323E8FC
	0x0323E84C ADRP X8, 0xEDD000
	0x0323E850 ADRP X9, 0xEC0000
	0x0323E854 LDR X8, [X8 + 0x648]
	0x0323E858 LDR X9, [X9 + 0x130]
	0x0323E85C CMP W19, 0x0
	0x0323E860 CSEL X0, X9, X8, LT
	0x0323E864 BL 0x1C16D08
	0x0323E868 MOV X19, X0
	0x0323E86C ADRP X0, 0xEBD000
	0x0323E870 LDR X0, [X0 + 0x760]
	0x0323E874 BL 0x1C16D08
	0x0323E878 BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 And W23, W1, 1
	008 Move W9, 1200
	009 And W22, W2, 1
	010 Move W8, 1
	011 NotImplemented "Instruction CINC not yet implemented."
	012 Move X2, X31
	013 Move W20, W3
	014 Move X19, X0
	015 And W21, W3, 1
	016 Move [X0+58], W8
	017 Call Encoding..ctor, X0, X1
	018 Move [X19+56], W21
	019 Move [X19+57], W23
	020 Move [X19+58], W22
	021 Move TEMP, X20
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {36}
	025 Move X8, [X19]
	026 Move X0, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move X2, [X8+392]
	032 Move X1, [X8+400]
	033 Move X30, [X31+48]
	034 Move X23, [X31+56]
	035 CallNoReturn X2
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Move X23, [X31+56]
	042 Return 

Method: System.Void SetDefaultFallbacks()

Disassembly:
	0x0323E87C MOV X20, X0
	0x0323E880 ADRP X0, 0xEDD000
	0x0323E884 LDR X0, [X0 + 0x670]
	0x0323E888 BL 0x1C16D08
	0x0323E88C MOV X2, X0
	0x0323E890 MOV X0, X20
	0x0323E894 MOV X1, X19
	0x0323E898 MOV X3, X31
	0x0323E89C BL 0x3311888
	0x0323E8A0 ADRP X0, 0xEE4000
	0x0323E8A4 LDR X0, [X0 + 0x8C8]
	0x0323E8A8 BL 0x1C16D08
	0x0323E8AC MOV X1, X0
	0x0323E8B0 MOV X0, X20
	0x0323E8B4 BL 0x1C16DEC
	0x0323E8B8 ADRP X0, 0xEBD000
	0x0323E8BC LDR X0, [X0 + 0x760]
	0x0323E8C0 BL 0x1C16D08
	0x0323E8C4 BL 0x1C16F10
	0x0323E8C8 MOV X19, X0
	0x0323E8CC ADRP X0, 0xEE4000
	0x0323E8D0 LDR X0, [X0 + 0x308]
	0x0323E8D4 BL 0x1C16D08
	0x0323E8D8 MOV X20, X0
	0x0323E8DC ADRP X0, 0xEE4000
	0x0323E8E0 LDR X0, [X0 + 0xE0]
	0x0323E8E4 BL 0x1C16D08
	0x0323E8E8 MOV X2, X0
	0x0323E8EC MOV X0, X19
	0x0323E8F0 MOV X1, X20
	0x0323E8F4 MOV X3, X31
	0x0323E8F8 BL 0x3311888
	0x0323E8FC ADRP X0, 0xEE4000
	0x0323E900 LDR X0, [X0 + 0x8C8]
	0x0323E904 BL 0x1C16D08
	0x0323E908 MOV X1, X0
	0x0323E90C MOV X0, X19
	0x0323E910 BL 0x1C16DEC
	0x0323E914 SUB X31, X31, 0x80
	0x0323E918 STP X29, X30, [X31 + 0x20]
	0x0323E91C STP X28, X27, [X31 + 0x30]
	0x0323E920 STP X26, X25, [X31 + 0x40]
	0x0323E924 STP X24, X23, [X31 + 0x50]
	0x0323E928 STP X22, X21, [X31 + 0x60]
	0x0323E92C STP X20, X19, [X31 + 0x70]
	0x0323E930 ADRP X19, 0x119E000
	0x0323E934 LDRB W8, [X19 + 0x419]
	0x0323E938 MOV X21, X3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x119F000
	006 Move W8, [X20+1044]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0xEE5000
	013 Move X0, [X0+1608]
	014 Call 0x1C17CF4
	015 Move X0, 0xEE5000
	016 Move X0, [X0+872]
	017 Call 0x1C17CF4
	018 Move X0, 0xEE5000
	019 Move X0, [X0+1616]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1044], W8
	023 Move W8, [X19+56]
	024 Compare W8, 0
	025 JumpIfEqual {32}
	026 Move X0, X31
	027 Call EncoderFallback.get_ExceptionFallback
	028 Move [X19+40], X0
	029 Move X0, X31
	030 Call DecoderFallback.get_ExceptionFallback
	031 Move [X19+48], X0
	032 Move X8, 0xEE5000
	033 Move X8, [X8+872]
	034 Move X0, [X8]
	035 Call 0x1C17F10
	036 Move X21, 0xEE5000
	037 Move X21, [X21+1616]
	038 Move X20, X0
	039 Move X1, [X21]
	040 Call EncoderReplacementFallback..ctor, X0, X1
	041 Move [X19+40], X20
	042 Move X8, 0xEE5000
	043 Move X8, [X8+1608]
	044 Move X0, [X8]
	045 Call 0x1C17F10
	046 Move X1, [X21]
	047 Move X2, X31
	048 Move X20, X0
	049 Call DecoderReplacementFallback..ctor, X0, X1
	050 Move [X19+48], X20
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return 

Method: System.Int32 GetByteCount(System.Char[] chars, System.Int32 index, System.Int32 count)

Disassembly:
	0x0323E93C MOV W23, W2
	0x0323E940 MOV X20, X0
	0x0323E944 STR X1, [X31]
	0x0323E948 TBNZ X8, 0x0, 0x323E960
	0x0323E94C ADRP X0, 0xEE4000
	0x0323E950 LDR X0, [X0 + 0x8D0]
	0x0323E954 BL 0x1C16CF4
	0x0323E958 MOVZ W8, 0x1
	0x0323E95C STRB W8, [X19 + 0x419]
	0x0323E960 UBFM W22, W23, 0x1F, 0x1E
	0x0323E964 STR X31, [X31 + 0x18]
	0x0323E968 TBNZ X22, 0x1F, 0x323ED5C
	0x0323E96C LDR X8, [X31]
	0x0323E970 ADD X23, X8, W23, 0x1, SXTW
	0x0323E974 CBZ X21, 0x323E9E0
	0x0323E978 LDRH W25, [X21 + 0x20]
	0x0323E97C ADD W8, W22, 0x2
	0x0323E980 MOV X0, X21
	0x0323E984 MOV X1, X31
	0x0323E988 CMP W25, 0x0
	0x0323E98C CSEL W22, W22, W8, EQ
	0x0323E990 BL 0x33FBF14
	0x0323E994 TBZ X0, 0x0, 0x323E9EC
	0x0323E998 MOV X0, X21
	0x0323E99C MOV X1, X31
	0x0323E9A0 BL 0x33FBF24
	0x0323E9A4 CBZ X0, 0x323ECD4
	0x0323E9A8 LDR X8, [X0]
	0x0323E9AC MOV X24, X0
	0x0323E9B0 LDP X9, X1, [X8 + 0x1B8]
	0x0323E9B4 BLR X9
	0x0323E9B8 CMP W0, 0x1
	0x0323E9BC B.GE 0x323EDB8
	0x0323E9C0 LDR X1, [X31]
	0x0323E9C4 MOV X0, X24
	0x0323E9C8 MOV X2, X23
	0x0323E9CC MOV X3, X21
	0x0323E9D0 MOV W4, W31
	0x0323E9D4 MOV X5, X31
	0x0323E9D8 BL 0x33FBF60
	0x0323E9DC B 0x323E9F0
	0x0323E9E0 MOV X24, X31
	0x0323E9E4 MOV W25, W31
	0x0323E9E8 B 0x323E9F0
	0x0323E9EC MOV X24, X31
	0x0323E9F0 STR X21, [X31 + 0x8]
	0x0323E9F4 STR W31, [X31 + 0x10]
	0x0323E9F8 ADRP X27, 0xEE4000
	0x0323E9FC LDR X27, [X27 + 0x8D0]
	0x0323EA00 MOVZ X29, 0xD800
	0x0323EA04 LDR X21, [X31]
	0x0323EA08 MOVK X29, 0xD8000000
	0x0323EA0C MOVK X29, 0xD800
	0x0323EA10 SUB X28, X23, 0x6
	0x0323EA14 MOVK X29, 0xD8000000
	0x0323EA18 MOV W19, W25
	0x0323EA1C CBZ X24, 0x323EA34
	0x0323EA20 MOV X0, X24
	0x0323EA24 MOV X1, X31
	0x0323EA28 BL 0x33FBF7C
	0x0323EA2C AND W26, W0, 0xFFFF
	0x0323EA30 B 0x323EA38
	0x0323EA34 MOV W26, W31
	0x0323EA38 CMP X23, X21
	0x0323EA3C B.HI 0x323EA44
	0x0323EA40 CBZ W26, 0x323EB58
	0x0323EA44 CBZ W26, 0x323EA50
	0x0323EA48 ADD W22, W22, 0x2
	0x0323EA4C B 0x323EAE4
	0x0323EA50 ANDS X31, X21, 0x7
	0x0323EA54 B.NE 0x323EAE0
	0x0323EA58 ANDS W31, W19, 0xFFFF
	0x0323EA5C B.NE 0x323EAE0
	0x0323EA60 LDRB W8, [X20 + 0x39]
	0x0323EA64 CMP W8, 0x1
	0x0323EA68 B.EQ 0x323EAE0
	0x0323EA6C CMP X28, X21
	0x0323EA70 B.LS 0x323EAD8
	0x0323EA74 LDR X25, [X21]
	0x0323EA78 ANDS X31, X25, 0x8000800080008000
	0x0323EA7C B.EQ 0x323EAD0
	0x0323EA80 AND X8, X25, 0xF800F800F800F800
	0x0323EA84 EOR X8, X8, X29, 0x0
	0x0323EA88 ANDS X31, X8, 0xFFFF
	0x0323EA8C B.EQ 0x323EAA8
	0x0323EA90 AND X9, X8, 0xFFFFFFFF
	0x0323EA94 CBZ X9, 0x323EAA8
	0x0323EA98 UBFM X9, X8, 0x3B, 0x3F
	0x0323EA9C CBZ X9, 0x323EAA8
	0x0323EAA0 AND X8, X8, 0xFFFFFFFFFFFF
	0x0323EAA4 CBNZ X8, 0x323EAD0
	0x0323EAA8 LDR X0, [X27]
	0x0323EAAC LDR W8, [X0 + 0xE0]
	0x0323EAB0 CBNZ W8, 0x323EABC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {37}
	006 Move TEMP, X3
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {54}
	010 Move TEMP, X2
	011 And TEMP, TEMP, -2147483648
	012 Compare TEMP, -2147483648
	013 JumpIfEqual {54}
	014 Move W8, [X1+24]
	015 Subtract W9, W8, W2
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Compare W3, 0
	018 JumpIfEqual {32}
	019 Move X9, [X0]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Add X10, X1, 32
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X5, [X9+552]
	025 Move X4, [X9+560]
	026 NotImplemented "Instruction CSEL not yet implemented."
	027 Add X1, X8, W2
	028 Move W2, W3
	029 Move X3, X31
	030 Move X30, [X31+32]
	031 CallNoReturn X5
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move W0, W31
	035 Move X30, [X31+32]
	036 Return X0
	037 Move X0, 0xEBB000
	038 Move X0, [X0+1320]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0xEE5000
	043 Move X0, [X0+728]
	044 Call 0x1C17D08
	045 Move X20, X0
	046 Move X0, 0xEE5000
	047 Move X0, [X0+736]
	048 Call 0x1C17D08
	049 Move X2, X0
	050 Move X0, X19
	051 Move X1, X20
	052 Move X3, X31
	053 Call ArgumentNullException..ctor, X0, X1, X2
	054 Move X8, 0xEDE000
	055 Move X9, 0xEC1000
	056 Move X8, [X8+1608]
	057 Move X9, [X9+304]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 Call 0x1C17D08
	061 Move X19, X0
	062 Move X0, 0xEBE000
	063 Move X0, [X0+1888]
	064 Call 0x1C17D08
	065 Call 0x1C17F10
	066 Move X20, X0
	067 Move X0, 0xEDE000
	068 Move X0, [X0+1648]
	069 Call 0x1C17D08
	070 Move X2, X0
	071 Move X0, X20
	072 Move X1, X19
	073 Move X3, X31
	074 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	075 Move X0, 0xEE5000
	076 Move X0, [X0+2168]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X20
	080 Call 0x1C17DEC
	081 Move X0, 0xEBE000
	082 Move X0, [X0+1888]
	083 Call 0x1C17D08
	084 Call 0x1C17F10
	085 Move X19, X0
	086 Move X0, 0xEE5000
	087 Move X0, [X0+728]
	088 Call 0x1C17D08
	089 Move X20, X0
	090 Move X0, 0xEE5000
	091 Move X0, [X0+224]
	092 Call 0x1C17D08
	093 Move X2, X0
	094 Move X0, X19
	095 Move X1, X20
	096 Move X3, X31
	097 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	098 Move X0, 0xEE5000
	099 Move X0, [X0+2168]
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X19
	103 Call 0x1C17DEC

Method: System.Int32 GetByteCount(System.String s)

Disassembly:
	0x0323EAB4 BL 0x1C16DFC
	0x0323EAB8 LDR X0, [X27]
	0x0323EABC LDR X8, [X0 + 0xB8]
	0x0323EAC0 AND X9, X25, 0xFC00FC00FC00FC00
	0x0323EAC4 LDR X8, [X8 + 0x20]
	0x0323EAC8 CMP X9, X8
	0x0323EACC B.NE 0x323EAD8
	0x0323EAD0 ADD X21, X21, 0x8
	0x0323EAD4 B 0x323EA6C
	0x0323EAD8 CMP X23, X21
	0x0323EADC B.LS 0x323ECB0
	0x0323EAE0 LDRH W26, [X21], #0x2
	0x0323EAE4 UBFM W8, W26, 0xB, 0x1F
	0x0323EAE8 CMP W8, 0x1B
	0x0323EAEC B.NE 0x323EB20
	0x0323EAF0 UBFM W8, W26, 0xA, 0x1F
	0x0323EAF4 CMP W8, 0x36
	0x0323EAF8 B.LS 0x323EB30
	0x0323EAFC ANDS W31, W19, 0xFFFF
	0x0323EB00 MOV W25, W31
	0x0323EB04 B.NE 0x323EA18
	0x0323EB08 CBNZ X24, 0x323EC84
	0x0323EB0C LDR X0, [X31 + 0x8]
	0x0323EB10 CBZ X0, 0x323EC50
	0x0323EB14 MOV X1, X31
	0x0323EB18 BL 0x33FBF24
	0x0323EB1C B 0x323EC64
	0x0323EB20 ANDS W31, W19, 0xFFFF
	0x0323EB24 MOV W25, W31
	0x0323EB28 B.EQ 0x323EA18
	0x0323EB2C B 0x323EB3C
	0x0323EB30 ANDS W31, W19, 0xFFFF
	0x0323EB34 MOV W25, W26
	0x0323EB38 B.EQ 0x323EA18
	0x0323EB3C LDR X25, [X31 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {21}
	006 Move X20, X0
	007 Move X0, X31
	008 Move X19, X1
	009 Call RuntimeHelpers.get_OffsetToStringData
	010 Move X8, [X20]
	011 Move W2, [X19+16]
	012 Add X1, X19, W0
	013 Move X0, X20
	014 Move X5, [X8+552]
	015 Move X4, [X8+560]
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X3, X31
	019 Move X30, [X31+32]
	020 CallNoReturn X5
	021 Move X0, 0xEBB000
	022 Move X0, [X0+1320]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X19, X0
	026 Move X0, 0xEDF000
	027 Move X0, [X0+3264]
	028 Call 0x1C17D08
	029 Move X1, X0
	030 Move X0, X19
	031 Move X2, X31
	032 Call ArgumentNullException..ctor, X0, X1
	033 Move X0, 0xEE5000
	034 Move X0, [X0+2176]
	035 Call 0x1C17D08
	036 Move X1, X0
	037 Move X0, X19
	038 Call 0x1C17DEC

Method: System.Int32 GetByteCount(System.Char* chars, System.Int32 count)

Disassembly:
	0x0323EB40 CBNZ X24, 0x323EC34
	0x0323EB44 CBZ X25, 0x323EBFC
	0x0323EB48 MOV X0, X25
	0x0323EB4C MOV X1, X31
	0x0323EB50 BL 0x33FBF24
	0x0323EB54 B 0x323EC10
	0x0323EB58 ANDS W31, W19, 0xFFFF
	0x0323EB5C B.EQ 0x323ECB0
	0x0323EB60 LDR X25, [X31 + 0x8]
	0x0323EB64 SUB W22, W22, 0x2
	0x0323EB68 CBZ X25, 0x323EB74
	0x0323EB6C LDRB W8, [X25 + 0x30]
	0x0323EB70 CBZ W8, 0x323ECB0
	0x0323EB74 LDR W8, [X31 + 0x10]
	0x0323EB78 TBNZ X8, 0x0, 0x323ECD8
	0x0323EB7C CBNZ X24, 0x323EBCC
	0x0323EB80 CBZ X25, 0x323EB94
	0x0323EB84 MOV X0, X25
	0x0323EB88 MOV X1, X31
	0x0323EB8C BL 0x33FBF24
	0x0323EB90 B 0x323EBA8
	0x0323EB94 LDR X0, [X20 + 0x28]
	0x0323EB98 CBZ X0, 0x323ECD4
	0x0323EB9C LDR X8, [X0]
	0x0323EBA0 LDP X9, X1, [X8 + 0x178]
	0x0323EBA4 BLR X9
	0x0323EBA8 MOV X24, X0
	0x0323EBAC CBZ X0, 0x323ECD4
	0x0323EBB0 LDR X1, [X31]
	0x0323EBB4 MOV X0, X24
	0x0323EBB8 MOV X2, X23
	0x0323EBBC MOV X3, X25
	0x0323EBC0 MOV W4, W31
	0x0323EBC4 MOV X5, X31
	0x0323EBC8 BL 0x33FBF60
	0x0323EBCC STR X21, [X31 + 0x18]
	0x0323EBD0 LDR X8, [X24]
	0x0323EBD4 ADD X2, X31, 0x18
	0x0323EBD8 MOV X0, X24
	0x0323EBDC MOV W1, W19
	0x0323EBE0 LDP X9, X3, [X8 + 0x1D8]
	0x0323EBE4 BLR X9
	0x0323EBE8 LDR X21, [X31 + 0x18]
	0x0323EBEC MOVZ W8, 0x1
	0x0323EBF0 MOV W25, W31
	0x0323EBF4 STR W8, [X31 + 0x10]
	0x0323EBF8 B 0x323EA18
	0x0323EBFC LDR X0, [X20 + 0x28]
	0x0323EC00 CBZ X0, 0x323ECD4
	0x0323EC04 LDR X8, [X0]
	0x0323EC08 LDP X9, X1, [X8 + 0x178]
	0x0323EC0C BLR X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {18}
	006 Move TEMP, X2
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {35}
	010 Move X8, [X0]
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X3, X31
	014 Move X5, [X8+552]
	015 Move X4, [X8+560]
	016 Move X30, [X31+32]
	017 CallNoReturn X5
	018 Move X0, 0xEBB000
	019 Move X0, [X0+1320]
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X19, X0
	023 Move X0, 0xEE5000
	024 Move X0, [X0+728]
	025 Call 0x1C17D08
	026 Move X20, X0
	027 Move X0, 0xEE5000
	028 Move X0, [X0+736]
	029 Call 0x1C17D08
	030 Move X2, X0
	031 Move X0, X19
	032 Move X1, X20
	033 Move X3, X31
	034 Call ArgumentNullException..ctor, X0, X1, X2
	035 Move X0, 0xEBE000
	036 Move X0, [X0+1888]
	037 Call 0x1C17D08
	038 Call 0x1C17F10
	039 Move X19, X0
	040 Move X0, 0xEDE000
	041 Move X0, [X0+1608]
	042 Call 0x1C17D08
	043 Move X20, X0
	044 Move X0, 0xEDE000
	045 Move X0, [X0+1648]
	046 Call 0x1C17D08
	047 Move X2, X0
	048 Move X0, X19
	049 Move X1, X20
	050 Move X3, X31
	051 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	052 Move X0, 0xEE5000
	053 Move X0, [X0+2184]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X19
	057 Call 0x1C17DEC

Method: System.Int32 GetBytes(System.String s, System.Int32 charIndex, System.Int32 charCount, System.Byte[] bytes, System.Int32 byteIndex)

Disassembly:
	0x0323EC10 MOV X24, X0
	0x0323EC14 CBZ X0, 0x323ECD4
	0x0323EC18 LDR X1, [X31]
	0x0323EC1C MOV X0, X24
	0x0323EC20 MOV X2, X23
	0x0323EC24 MOV X3, X25
	0x0323EC28 MOV W4, W31
	0x0323EC2C MOV X5, X31
	0x0323EC30 BL 0x33FBF60
	0x0323EC34 SUB X8, X21, 0x2
	0x0323EC38 STR X8, [X31 + 0x18]
	0x0323EC3C LDR X8, [X24]
	0x0323EC40 ADD X2, X31, 0x18
	0x0323EC44 MOV X0, X24
	0x0323EC48 MOV W1, W19
	0x0323EC4C B 0x323EC98
	0x0323EC50 LDR X0, [X20 + 0x28]
	0x0323EC54 CBZ X0, 0x323ECD4
	0x0323EC58 LDR X8, [X0]
	0x0323EC5C LDP X9, X1, [X8 + 0x178]
	0x0323EC60 BLR X9
	0x0323EC64 MOV X24, X0
	0x0323EC68 CBZ X0, 0x323ECD4
	0x0323EC6C LDP X1, X3, [X31]
	0x0323EC70 MOV X0, X24
	0x0323EC74 MOV X2, X23
	0x0323EC78 MOV W4, W31
	0x0323EC7C MOV X5, X31
	0x0323EC80 BL 0x33FBF60
	0x0323EC84 STR X21, [X31 + 0x18]
	0x0323EC88 LDR X8, [X24]
	0x0323EC8C ADD X2, X31, 0x18
	0x0323EC90 MOV X0, X24
	0x0323EC94 MOV W1, W26
	0x0323EC98 LDP X9, X3, [X8 + 0x1D8]
	0x0323EC9C BLR X9
	0x0323ECA0 LDR X21, [X31 + 0x18]
	0x0323ECA4 MOV W25, W31
	0x0323ECA8 SUB W22, W22, 0x2
	0x0323ECAC B 0x323EA18
	0x0323ECB0 MOV W0, W22
	0x0323ECB4 LDP X20, X19, [X31 + 0x70]
	0x0323ECB8 LDP X22, X21, [X31 + 0x60]
	0x0323ECBC LDP X24, X23, [X31 + 0x50]
	0x0323ECC0 LDP X26, X25, [X31 + 0x40]
	0x0323ECC4 LDP X28, X27, [X31 + 0x30]
	0x0323ECC8 LDP X29, X30, [X31 + 0x20]
	0x0323ECCC ADD X31, X31, 0x80
	0x0323ECD0 RET
	0x0323ECD4 BL 0x1C16F20
	0x0323ECD8 STRH W19, [X31 + 0x14]
	0x0323ECDC ADRP X0, 0xEB7000
	0x0323ECE0 LDR X0, [X0 + 0x170]
	0x0323ECE4 BL 0x1C16D08
	0x0323ECE8 ADD X1, X31, 0x14
	0x0323ECEC BL 0x1C16E04
	0x0323ECF0 MOV X19, X0
	0x0323ECF4 ADRP X0, 0xEE4000
	0x0323ECF8 LDR X0, [X0 + 0x8D8]
	0x0323ECFC BL 0x1C16D08
	0x0323ED00 MOV X1, X19
	0x0323ED04 MOV X2, X31
	0x0323ED08 BL 0x32094D4
	0x0323ED0C MOV X19, X0
	0x0323ED10 ADRP X0, 0xEBD000
	0x0323ED14 LDR X0, [X0 + 0x578]
	0x0323ED18 BL 0x1C16D08
	0x0323ED1C BL 0x1C16F10
	0x0323ED20 MOV X20, X0
	0x0323ED24 ADRP X0, 0xEE4000
	0x0323ED28 LDR X0, [X0 + 0x2D8]
	0x0323ED2C BL 0x1C16D08
	0x0323ED30 MOV X2, X0
	0x0323ED34 MOV X0, X20
	0x0323ED38 MOV X1, X19
	0x0323ED3C MOV X3, X31
	0x0323ED40 BL 0x330E16C
	0x0323ED44 ADRP X0, 0xEE4000
	0x0323ED48 LDR X0, [X0 + 0x8E0]
	0x0323ED4C BL 0x1C16D08
	0x0323ED50 MOV X1, X0
	0x0323ED54 MOV X0, X20
	0x0323ED58 BL 0x1C16DEC
	0x0323ED5C ADRP X0, 0xEBD000
	0x0323ED60 LDR X0, [X0 + 0x760]
	0x0323ED64 BL 0x1C16D08
	0x0323ED68 BL 0x1C16F10
	0x0323ED6C MOV X19, X0
	0x0323ED70 ADRP X0, 0xEDD000
	0x0323ED74 LDR X0, [X0 + 0x648]
	0x0323ED78 BL 0x1C16D08
	0x0323ED7C MOV X20, X0
	0x0323ED80 ADRP X0, 0xEE4000
	0x0323ED84 LDR X0, [X0 + 0x420]
	0x0323ED88 BL 0x1C16D08
	0x0323ED8C MOV X2, X0
	0x0323ED90 MOV X0, X19
	0x0323ED94 MOV X1, X20
	0x0323ED98 MOV X3, X31
	0x0323ED9C BL 0x3311888
	0x0323EDA0 ADRP X0, 0xEE4000
	0x0323EDA4 LDR X0, [X0 + 0x8E0]
	0x0323EDA8 BL 0x1C16D08
	0x0323EDAC MOV X1, X0
	0x0323EDB0 MOV X0, X19
	0x0323EDB4 BL 0x1C16DEC
	0x0323EDB8 LDR X8, [X20]
	0x0323EDBC MOV X0, X20
	0x0323EDC0 LDP X9, X1, [X8 + 0x1B8]
	0x0323EDC4 BLR X9
	0x0323EDC8 MOV X20, X0
	0x0323EDCC MOV X0, X21
	0x0323EDD0 BL 0x19903C0
	0x0323EDD4 LDR X19, [X21 + 0x10]
	0x0323EDD8 MOV X0, X19
	0x0323EDDC BL 0x19903C0
	0x0323EDE0 MOV X0, X19
	0x0323EDE4 MOV X1, X31
	0x0323EDE8 BL 0x33BE520
	0x0323EDEC MOV X19, X0
	0x0323EDF0 ADRP X0, 0xEE4000
	0x0323EDF4 LDR X0, [X0 + 0x6B0]
	0x0323EDF8 BL 0x1C16D08
	0x0323EDFC MOV X1, X20
	0x0323EE00 MOV X2, X19
	0x0323EE04 MOV X3, X31
	0x0323EE08 BL 0x320A264
	0x0323EE0C MOV X19, X0
	0x0323EE10 ADRP X0, 0xEBD000
	0x0323EE14 LDR X0, [X0 + 0x578]
	0x0323EE18 BL 0x1C16D08
	0x0323EE1C BL 0x1C16F10
	0x0323EE20 MOV X1, X19
	0x0323EE24 MOV X2, X31
	0x0323EE28 MOV X20, X0
	0x0323EE2C BL 0x3314A68
	0x0323EE30 B 0x323ED44
	0x0323EE34 SUB X31, X31, 0x90
	0x0323EE38 STP X29, X30, [X31 + 0x30]
	0x0323EE3C STP X28, X27, [X31 + 0x40]
	0x0323EE40 STP X26, X25, [X31 + 0x50]
	0x0323EE44 STP X24, X23, [X31 + 0x60]
	0x0323EE48 STP X22, X21, [X31 + 0x70]
	0x0323EE4C STP X20, X19, [X31 + 0x80]
	0x0323EE50 ADRP X20, 0x119E000
	0x0323EE54 LDRB W8, [X20 + 0x41A]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X25, 0x119F000
	012 Move W8, [X25+1045]
	013 Move W19, W5
	014 Move X24, X4
	015 Move W20, W3
	016 Move W21, W2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xEE4000
	024 Move X0, [X0+2096]
	025 Call 0x1C17CF4
	026 Move X0, 0xEE5000
	027 Move X0, [X0+760]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1045], W8
	031 Compare X22, 0
	032 JumpIfEqual {96}
	033 Compare X24, 0
	034 JumpIfEqual {96}
	035 Move TEMP, X20
	036 And TEMP, TEMP, -2147483648
	037 Compare TEMP, -2147483648
	038 JumpIfEqual {117}
	039 Move TEMP, X21
	040 And TEMP, TEMP, -2147483648
	041 Compare TEMP, -2147483648
	042 JumpIfEqual {117}
	043 Move W8, [X22+16]
	044 Subtract W8, W8, W21
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move TEMP, X19
	047 And TEMP, TEMP, -2147483648
	048 Compare TEMP, -2147483648
	049 JumpIfEqual {85}
	050 Move W8, [X24+24]
	051 Subtract W25, W8, W19
	052 Move X26, 0xEE5000
	053 Move X27, 0xEE4000
	054 Move X26, [X26+760]
	055 Move X27, [X27+2096]
	056 Move X0, X31
	057 Call RuntimeHelpers.get_OffsetToStringData
	058 Move X1, [X26]
	059 Move W26, W0
	060 Move X0, X24
	061 Call 0x25FC4C0, X0
	062 Move X2, [X27]
	063 Call 0x2219CF4, X0
	064 Move X8, [X23]
	065 Add X3, X0, W19
	066 Move X0, X23
	067 Move W2, W20
	068 Move X7, [X8+648]
	069 Move X6, [X8+656]
	070 Add X8, X22, W21
	071 Add X1, X8, W26
	072 Move W4, W25
	073 Move X20, [X31+64]
	074 Move X19, [X31+72]
	075 Move X22, [X31+48]
	076 Move X21, [X31+56]
	077 Move X24, [X31+32]
	078 Move X23, [X31+40]
	079 Move X26, [X31+16]
	080 Move X25, [X31+24]
	081 Move X5, X31
	082 Move X30, [X31+80]
	083 Move X27, [X31+88]
	084 CallNoReturn X7
	085 Move X0, 0xEBE000
	086 Move X0, [X0+1888]
	087 Call 0x1C17D08
	088 Call 0x1C17F10
	089 Move X19, X0
	090 Move X0, 0xEE5000
	091 Move X0, [X0+768]
	092 Call 0x1C17D08
	093 Move X20, X0
	094 Move X0, 0xEDE000
	095 Move X0, [X0+1632]
	096 Move X8, 0xEE5000
	097 Move X9, 0xEDF000
	098 Move X8, [X8+776]
	099 Move X9, [X9+3264]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 NotImplemented "Instruction CSEL not yet implemented."
	102 Call 0x1C17D08
	103 Move X19, X0
	104 Move X0, 0xEBB000
	105 Move X0, [X0+1320]
	106 Call 0x1C17D08
	107 Call 0x1C17F10
	108 Move X20, X0
	109 Move X0, 0xEE5000
	110 Move X0, [X0+736]
	111 Call 0x1C17D08
	112 Move X2, X0
	113 Move X0, X20
	114 Move X1, X19
	115 Move X3, X31
	116 Call ArgumentNullException..ctor, X0, X1, X2
	117 Move X8, 0xEE5000
	118 Move X9, 0xEE5000
	119 Move X8, [X8+784]
	120 Move X9, [X9+792]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 NotImplemented "Instruction CSEL not yet implemented."
	123 Call 0x1C17D08
	124 Move X19, X0
	125 Move X0, 0xEBE000
	126 Move X0, [X0+1888]
	127 Call 0x1C17D08
	128 Call 0x1C17F10
	129 Move X20, X0
	130 Move X0, 0xEDE000
	131 Move X0, [X0+1648]
	132 Call 0x1C17D08
	133 Move X2, X0
	134 Move X0, X20
	135 Move X1, X19
	136 Move X3, X31
	137 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	138 Move X0, 0xEE5000
	139 Move X0, [X0+2192]
	140 Call 0x1C17D08
	141 Move X1, X0
	142 Move X0, X20
	143 Call 0x1C17DEC
	144 Move X0, 0xEBE000
	145 Move X0, [X0+1888]
	146 Call 0x1C17D08
	147 Call 0x1C17F10
	148 Move X19, X0
	149 Move X0, 0xEDF000
	150 Move X0, [X0+3264]
	151 Call 0x1C17D08
	152 Move X20, X0
	153 Move X0, 0xEE5000
	154 Move X0, [X0+264]
	155 Call 0x1C17D08
	156 Move X2, X0
	157 Move X0, X19
	158 Move X1, X20
	159 Move X3, X31
	160 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	161 Move X0, 0xEE5000
	162 Move X0, [X0+2192]
	163 Call 0x1C17D08
	164 Move X1, X0
	165 Move X0, X19
	166 Call 0x1C17DEC

Method: System.Int32 GetBytes(System.Char[] chars, System.Int32 charIndex, System.Int32 charCount, System.Byte[] bytes, System.Int32 byteIndex)

Disassembly:
	0x0323EE58 MOV X19, X5
	0x0323EE5C MOV W25, W4
	0x0323EE60 MOV X21, X3
	0x0323EE64 MOV W23, W2
	0x0323EE68 MOV X28, X1
	0x0323EE6C MOV X22, X0
	0x0323EE70 TBNZ X8, 0x0, 0x323EE88
	0x0323EE74 ADRP X0, 0xEE4000
	0x0323EE78 LDR X0, [X0 + 0x8D0]
	0x0323EE7C BL 0x1C16CF4
	0x0323EE80 MOVZ W8, 0x1
	0x0323EE84 STRB W8, [X20 + 0x41A]
	0x0323EE88 ADD X23, X28, W23, 0x1, SXTW
	0x0323EE8C STR X31, [X31 + 0x28]
	0x0323EE90 CBZ X19, 0x323EEF8
	0x0323EE94 LDRH W26, [X19 + 0x20]
	0x0323EE98 MOV X0, X19
	0x0323EE9C MOV X1, X31
	0x0323EEA0 BL 0x33FBF14
	0x0323EEA4 TBZ X0, 0x0, 0x323EF04
	0x0323EEA8 MOV X0, X19
	0x0323EEAC MOV X1, X31
	0x0323EEB0 BL 0x33FBF24
	0x0323EEB4 CBZ X0, 0x323F3DC
	0x0323EEB8 LDR X8, [X0]
	0x0323EEBC MOV X24, X0
	0x0323EEC0 LDP X9, X1, [X8 + 0x1B8]
	0x0323EEC4 BLR X9
	0x0323EEC8 CMP W0, 0x1
	0x0323EECC B.LT 0x323EED8
	0x0323EED0 LDRB W8, [X19 + 0x31]
	0x0323EED4 CBNZ W8, 0x323F464
	0x0323EED8 MOV X0, X24
	0x0323EEDC MOV X1, X28
	0x0323EEE0 MOV X2, X23
	0x0323EEE4 MOV X3, X19
	0x0323EEE8 MOV W4, W31
	0x0323EEEC MOV X5, X31
	0x0323EEF0 BL 0x33FBF60
	0x0323EEF4 B 0x323EF08
	0x0323EEF8 MOV X24, X31
	0x0323EEFC MOV W26, W31
	0x0323EF00 B 0x323EF08
	0x0323EF04 MOV X24, X31
	0x0323EF08 STR W31, [X31 + 0x20]
	0x0323EF0C ADRP X20, 0xEE4000
	0x0323EF10 LDR X20, [X20 + 0x8D0]
	0x0323EF14 ADD X29, X21, W25, SXTW
	0x0323EF18 MOV X27, X21
	0x0323EF1C MOVZ X21, 0xD800
	0x0323EF20 MOVK X21, 0xD8000000
	0x0323EF24 MOVK X21, 0xD800
	0x0323EF28 MOVK X21, 0xD8000000
	0x0323EF2C STP X27, X28, [X31 + 0x10]
	0x0323EF30 MOV W25, W26
	0x0323EF34 CBZ X24, 0x323EF4C
	0x0323EF38 MOV X0, X24
	0x0323EF3C MOV X1, X31
	0x0323EF40 BL 0x33FBF7C
	0x0323EF44 AND W26, W0, 0xFFFF
	0x0323EF48 B 0x323EF50
	0x0323EF4C MOV W26, W31
	0x0323EF50 SUBS X8, X23, X28
	0x0323EF54 B.HI 0x323EF5C
	0x0323EF58 CBZ W26, 0x323F1B8
	0x0323EF5C CBNZ W26, 0x323F0FC
	0x0323EF60 LDRB W9, [X22 + 0x39]
	0x0323EF64 CMP W9, 0x1
	0x0323EF68 B.EQ 0x323F0F8
	0x0323EF6C ANDS X31, X28, 0x7
	0x0323EF70 B.EQ 0x323F020
	0x0323EF74 ANDS W31, W25, 0xFFFF
	0x0323EF78 B.NE 0x323F0F8
	0x0323EF7C TBNZ X27, 0x0, 0x323F0F8
	0x0323EF80 EOR W9, W28, W27, 0x0
	0x0323EF84 AND X9, X9, 0x7
	0x0323EF88 CBZ X9, 0x323F0F8
	0x0323EF8C SUB X9, X29, X27
	0x0323EF90 CMP X8, 0x0
	0x0323EF94 SBFM X9, X9, 0x1, 0x3F
	0x0323EF98 CINC X8, X8, LT
	0x0323EF9C SBFM X10, X8, 0x1, 0x3F
	0x0323EFA0 CMP X9, X8, ASR
	0x0323EFA4 CSEL X8, X9, X10, LT
	0x0323EFA8 ADD X8, X28, X8, 0x1, LSL
	0x0323EFAC SUB X8, X8, 0x2
	0x0323EFB0 CMP X8, X28
	0x0323EFB4 B.LS 0x323F0F0
	0x0323EFB8 LDRH W9, [X28]
	0x0323EFBC UBFM W10, W9, 0xB, 0x1F
	0x0323EFC0 CMP W10, 0x1B
	0x0323EFC4 B.NE 0x323EFE8
	0x0323EFC8 UBFM W10, W9, 0xA, 0x1F
	0x0323EFCC CMP W10, 0x36
	0x0323EFD0 B.HI 0x323F0F0
	0x0323EFD4 LDRH W10, [X28 + 0x2]
	0x0323EFD8 UBFM W10, W10, 0xA, 0x1F
	0x0323EFDC CMP W10, 0x37
	0x0323EFE0 B.EQ 0x323F008
	0x0323EFE4 B 0x323F0F0
	0x0323EFE8 MOV X10, X28
	0x0323EFEC LDRH W11, [X10 + 0x2]!
	0x0323EFF0 UBFM W11, W11, 0xB, 0x1F
	0x0323EFF4 CMP W11, 0x1B
	0x0323EFF8 B.NE 0x323F008
	0x0323EFFC STRH W9, [X27], #0x2
	0x0323F000 MOV X28, X10
	0x0323F004 B 0x323EFB0
	0x0323F008 STRH W9, [X27]
	0x0323F00C LDRH W9, [X28 + 0x2]
	0x0323F010 ADD X28, X28, 0x4
	0x0323F014 STRH W9, [X27 + 0x2]
	0x0323F018 ADD X27, X27, 0x4
	0x0323F01C B 0x323EFB0
	0x0323F020 ANDS W31, W25, 0xFFFF
	0x0323F024 B.NE 0x323EF74
	0x0323F028 AND X9, X27, 0x7
	0x0323F02C CBNZ X9, 0x323EF74
	0x0323F030 SUB X9, X29, X27
	0x0323F034 CMP X8, 0x0
	0x0323F038 SBFM X9, X9, 0x1, 0x3F
	0x0323F03C CINC X8, X8, LT
	0x0323F040 SBFM X10, X8, 0x1, 0x3F
	0x0323F044 CMP X9, X8, ASR
	0x0323F048 CSEL X8, X9, X10, LT
	0x0323F04C ADD X8, X28, X8, 0x1, LSL
	0x0323F050 SUB X26, X8, 0x6
	0x0323F054 CMP X26, X28
	0x0323F058 B.LS 0x323F0F0
	0x0323F05C STR X19, [X31 + 0x8]
	0x0323F060 MOV X19, X20
	0x0323F064 LDR X20, [X28]
	0x0323F068 ANDS X31, X20, 0x8000800080008000
	0x0323F06C B.EQ 0x323F0D8
	0x0323F070 AND X8, X20, 0xF800F800F800F800
	0x0323F074 EOR X8, X8, X21, 0x0
	0x0323F078 ANDS X31, X8, 0xFFFF
	0x0323F07C B.EQ 0x323F098
	0x0323F080 AND X9, X8, 0xFFFFFFFF
	0x0323F084 CBZ X9, 0x323F098
	0x0323F088 UBFM X9, X8, 0x3B, 0x3F
	0x0323F08C CBZ X9, 0x323F098
	0x0323F090 AND X8, X8, 0xFFFFFFFFFFFF
	0x0323F094 CBNZ X8, 0x323F0D8
	0x0323F098 LDR X0, [X19]
	0x0323F09C LDR W8, [X0 + 0xE0]
	0x0323F0A0 CBNZ W8, 0x323F0B0
	0x0323F0A4 MOV X21, X19
	0x0323F0A8 BL 0x1C16DFC
	0x0323F0AC LDR X0, [X19]
	0x0323F0B0 LDR X8, [X0 + 0xB8]
	0x0323F0B4 MOVZ X21, 0xD800
	0x0323F0B8 MOVK X21, 0xD8000000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x119F000
	011 Move W8, [X25+1046]
	012 Move W20, W5
	013 Move X23, X4
	014 Move W19, W3
	015 Move W21, W2
	016 Move X24, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xEE4000
	023 Move X0, [X0+2096]
	024 Call 0x1C17CF4
	025 Move X0, 0xEE5000
	026 Move X0, [X0+760]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+1046], W8
	030 Compare X24, 0
	031 JumpIfEqual {106}
	032 Compare X23, 0
	033 JumpIfEqual {106}
	034 Move TEMP, X19
	035 And TEMP, TEMP, -2147483648
	036 Compare TEMP, -2147483648
	037 JumpIfEqual {127}
	038 Move TEMP, X21
	039 And TEMP, TEMP, -2147483648
	040 Compare TEMP, -2147483648
	041 JumpIfEqual {127}
	042 Move W8, [X24+24]
	043 Subtract W9, W8, W21
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move TEMP, X20
	046 And TEMP, TEMP, -2147483648
	047 Compare TEMP, -2147483648
	048 JumpIfEqual {95}
	049 Move W9, [X23+24]
	050 Subtract W25, W9, W20
	051 Compare W19, 0
	052 JumpIfEqual {84}
	053 Move X9, 0xEE5000
	054 Move X9, [X9+760]
	055 Move X26, 0xEE4000
	056 Move X26, [X26+2096]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X1, [X9]
	059 Add X9, X24, 32
	060 Move X0, X23
	061 NotImplemented "Instruction CSEL not yet implemented."
	062 Call 0x25FC4C0, X0
	063 Move X2, [X26]
	064 Call 0x2219CF4, X0
	065 Move X8, [X22]
	066 Add X1, X24, W21
	067 Add X3, X0, W20
	068 Move X0, X22
	069 Move X7, [X8+648]
	070 Move X6, [X8+656]
	071 Move W2, W19
	072 Move W4, W25
	073 Move X20, [X31+64]
	074 Move X19, [X31+72]
	075 Move X22, [X31+48]
	076 Move X21, [X31+56]
	077 Move X24, [X31+32]
	078 Move X23, [X31+40]
	079 Move X26, [X31+16]
	080 Move X25, [X31+24]
	081 Move X5, X31
	082 Move X30, [X31+80]
	083 CallNoReturn X7
	084 Move X20, [X31+64]
	085 Move X19, [X31+72]
	086 Move X22, [X31+48]
	087 Move X21, [X31+56]
	088 Move X24, [X31+32]
	089 Move X23, [X31+40]
	090 Move X26, [X31+16]
	091 Move X25, [X31+24]
	092 Move W0, W31
	093 Move X30, [X31+80]
	094 Return X0
	095 Move X0, 0xEBE000
	096 Move X0, [X0+1888]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X19, X0
	100 Move X0, 0xEE5000
	101 Move X0, [X0+768]
	102 Call 0x1C17D08
	103 Move X20, X0
	104 Move X0, 0xEDE000
	105 Move X0, [X0+1632]
	106 Move X8, 0xEE5000
	107 Move X9, 0xEE5000
	108 Move X8, [X8+776]
	109 Move X9, [X9+728]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction CSEL not yet implemented."
	112 Call 0x1C17D08
	113 Move X19, X0
	114 Move X0, 0xEBB000
	115 Move X0, [X0+1320]
	116 Call 0x1C17D08
	117 Call 0x1C17F10
	118 Move X20, X0
	119 Move X0, 0xEE5000
	120 Move X0, [X0+736]
	121 Call 0x1C17D08
	122 Move X2, X0
	123 Move X0, X20
	124 Move X1, X19
	125 Move X3, X31
	126 Call ArgumentNullException..ctor, X0, X1, X2
	127 Move X8, 0xEE5000
	128 Move X9, 0xEE5000
	129 Move X8, [X8+784]
	130 Call 0x3EB2894
	131 Return X0
	132 NotImplemented "Instruction CMP not yet implemented."
	133 NotImplemented "Instruction CSEL not yet implemented."
	134 Call 0x1C17D08
	135 Move X19, X0
	136 Move X0, 0xEBD000
	137 Move X0, [X0+1888]
	138 Call 0x1C17D08
	139 Call 0x1C17F10
	140 Move X20, X0
	141 Move X0, 0xEDD000
	142 Move X0, [X0+1648]
	143 Call 0x1C17D08
	144 Move X2, X0
	145 Move X0, X20
	146 Move X1, X19
	147 Move X3, X31
	148 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	149 Move X0, 0xEE4000
	150 Move X0, [X0+2200]
	151 Call 0x1C17D08
	152 Move X1, X0
	153 Move X0, X20
	154 Call 0x1C17DEC
	155 Move X0, 0xEBD000
	156 Move X0, [X0+1888]
	157 Call 0x1C17D08
	158 Call 0x1C17F10
	159 Move X19, X0
	160 Move X0, 0xEE4000
	161 Move X0, [X0+728]
	162 Call 0x1C17D08
	163 Move X20, X0
	164 Move X0, 0xEE4000
	165 Move X0, [X0+224]
	166 Call 0x1C17D08
	167 Move X2, X0
	168 Move X0, X19
	169 Move X1, X20
	170 Move X3, X31
	171 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	172 Move X0, 0xEE4000
	173 Move X0, [X0+2200]
	174 Call 0x1C17D08
	175 Move X1, X0
	176 Move X0, X19
	177 Call 0x1C17DEC

Method: System.Int32 GetBytes(System.Char* chars, System.Int32 charCount, System.Byte* bytes, System.Int32 byteCount)

Disassembly:
	0x0323F0BC AND X9, X20, 0xFC00FC00FC00FC00
	0x0323F0C0 LDR X8, [X8 + 0x20]
	0x0323F0C4 MOVK X21, 0xD800
	0x0323F0C8 MOVK X21, 0xD8000000
	0x0323F0CC CMP X9, X8
	0x0323F0D0 B.NE 0x323F0E8
	0x0323F0D4 LDR X20, [X28]
	0x0323F0D8 ADD X28, X28, 0x8
	0x0323F0DC CMP X26, X28
	0x0323F0E0 STR X20, [X27], #0x8
	0x0323F0E4 B.HI 0x323F064
	0x0323F0E8 MOV X20, X19
	0x0323F0EC LDR X19, [X31 + 0x8]
	0x0323F0F0 CMP X23, X28
	0x0323F0F4 B.LS 0x323F3C8
	0x0323F0F8 LDRH W26, [X28], #0x2
	0x0323F0FC UBFM W8, W26, 0xB, 0x1F
	0x0323F100 CMP W8, 0x1B
	0x0323F104 B.NE 0x323F13C
	0x0323F108 UBFM W8, W26, 0xA, 0x1F
	0x0323F10C CMP W8, 0x36
	0x0323F110 B.LS 0x323F148
	0x0323F114 ANDS W31, W25, 0xFFFF
	0x0323F118 B.EQ 0x323F1EC
	0x0323F11C ADD X8, X27, 0x3
	0x0323F120 CMP X8, X29
	0x0323F124 B.CS 0x323F330
	0x0323F128 LDRB W8, [X22 + 0x39]
	0x0323F12C CBZ W8, 0x323F168
	0x0323F130 UBFM W8, W25, 0x8, 0x1F
	0x0323F134 STRB W8, [X27]
	0x0323F138 B 0x323F170
	0x0323F13C ANDS W31, W25, 0xFFFF
	0x0323F140 B.EQ 0x323F17C
	0x0323F144 B 0x323F150
	0x0323F148 ANDS W31, W25, 0xFFFF
	0x0323F14C B.EQ 0x323EF30
	0x0323F150 CBNZ X24, 0x323F2A4
	0x0323F154 CBZ X19, 0x323F26C
	0x0323F158 MOV X0, X19
	0x0323F15C MOV X1, X31
	0x0323F160 BL 0x33FBF24
	0x0323F164 B 0x323F280
	0x0323F168 STRB W25, [X27]
	0x0323F16C UBFM W25, W25, 0x8, 0xF
	0x0323F170 ADD X8, X27, 0x2
	0x0323F174 STRB W25, [X27 + 0x1]
	0x0323F178 MOV X27, X8
	0x0323F17C ADD X8, X27, 0x1
	0x0323F180 CMP X8, X29
	0x0323F184 B.CS 0x323F31C
	0x0323F188 LDRB W9, [X22 + 0x39]
	0x0323F18C UBFM W8, W26, 0x8, 0x1F
	0x0323F190 CBZ W9, 0x323F19C
	0x0323F194 STRB W8, [X27]
	0x0323F198 B 0x323F1A4
	0x0323F19C STRB W26, [X27]
	0x0323F1A0 MOV W26, W8
	0x0323F1A4 ADD X8, X27, 0x2
	0x0323F1A8 STRB W26, [X27 + 0x1]
	0x0323F1AC MOV X27, X8
	0x0323F1B0 MOV W26, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {24}
	006 Compare X3, 0
	007 JumpIfEqual {24}
	008 Move TEMP, X4
	009 And TEMP, TEMP, -2147483648
	010 Compare TEMP, -2147483648
	011 JumpIfEqual {45}
	012 Move TEMP, X2
	013 And TEMP, TEMP, -2147483648
	014 Compare TEMP, -2147483648
	015 JumpIfEqual {45}
	016 Move X8, [X0]
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X5, X31
	020 Move X7, [X8+648]
	021 Move X6, [X8+656]
	022 Move X30, [X31+32]
	023 CallNoReturn X7
	024 Move X8, 0xEE4000
	025 Move X9, 0xEE4000
	026 Move X8, [X8+728]
	027 Move X9, [X9+776]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSEL not yet implemented."
	030 Call 0x1C17D08
	031 Move X19, X0
	032 Move X0, 0xEBA000
	033 Move X0, [X0+1320]
	034 Call 0x1C17D08
	035 Call 0x1C17F10
	036 Move X20, X0
	037 Move X0, 0xEE4000
	038 Move X0, [X0+736]
	039 Call 0x1C17D08
	040 Move X2, X0
	041 Move X0, X20
	042 Move X1, X19
	043 Move X3, X31
	044 Call ArgumentNullException..ctor, X0, X1, X2
	045 Move X8, 0xEE4000
	046 Move X9, 0xEE4000
	047 Move X8, [X8+808]
	048 Move X9, [X9+784]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 Call 0x1C17D08
	052 Move X19, X0
	053 Move X0, 0xEBD000
	054 Move X0, [X0+1888]
	055 Call 0x1C17D08
	056 Call 0x1C17F10
	057 Move X20, X0
	058 Move X0, 0xEDD000
	059 Move X0, [X0+1648]
	060 Call 0x1C17D08
	061 Move X2, X0
	062 Move X0, X20
	063 Move X1, X19
	064 Move X3, X31
	065 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	066 Move X0, 0xEE4000
	067 Move X0, [X0+2208]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X20
	071 Call 0x1C17DEC

Method: System.Int32 GetCharCount(System.Byte[] bytes, System.Int32 index, System.Int32 count)

Disassembly:
	0x0323F1B4 B 0x323EF30
	0x0323F1B8 ANDS W31, W25, 0xFFFF
	0x0323F1BC B.EQ 0x323F3C8
	0x0323F1C0 CBZ X19, 0x323F1CC
	0x0323F1C4 LDRB W8, [X19 + 0x30]
	0x0323F1C8 CBZ W8, 0x323F3D4
	0x0323F1CC LDR W8, [X31 + 0x20]
	0x0323F1D0 TBNZ X8, 0x0, 0x323F3E0
	0x0323F1D4 CBNZ X24, 0x323F23C
	0x0323F1D8 CBZ X19, 0x323F204
	0x0323F1DC MOV X0, X19
	0x0323F1E0 MOV X1, X31
	0x0323F1E4 BL 0x33FBF24
	0x0323F1E8 B 0x323F218
	0x0323F1EC CBNZ X24, 0x323F2F8
	0x0323F1F0 CBZ X19, 0x323F2C0
	0x0323F1F4 MOV X0, X19
	0x0323F1F8 MOV X1, X31
	0x0323F1FC BL 0x33FBF24
	0x0323F200 B 0x323F2D4
	0x0323F204 LDR X0, [X22 + 0x28]
	0x0323F208 CBZ X0, 0x323F3DC
	0x0323F20C LDR X8, [X0]
	0x0323F210 LDP X9, X1, [X8 + 0x178]
	0x0323F214 BLR X9
	0x0323F218 MOV X24, X0
	0x0323F21C CBZ X0, 0x323F3DC
	0x0323F220 LDR X1, [X31 + 0x18]
	0x0323F224 MOVZ W4, 0x1
	0x0323F228 MOV X0, X24
	0x0323F22C MOV X2, X23
	0x0323F230 MOV X3, X19
	0x0323F234 MOV X5, X31
	0x0323F238 BL 0x33FBF60
	0x0323F23C STR X28, [X31 + 0x28]
	0x0323F240 LDR X8, [X24]
	0x0323F244 ADD X2, X31, 0x28
	0x0323F248 MOV X0, X24
	0x0323F24C MOV W1, W25
	0x0323F250 LDP X9, X3, [X8 + 0x1D8]
	0x0323F254 BLR X9
	0x0323F258 LDR X28, [X31 + 0x28]
	0x0323F25C MOVZ W8, 0x1
	0x0323F260 MOV W26, W31
	0x0323F264 STR W8, [X31 + 0x20]
	0x0323F268 B 0x323EF30
	0x0323F26C LDR X0, [X22 + 0x28]
	0x0323F270 CBZ X0, 0x323F3DC
	0x0323F274 LDR X8, [X0]
	0x0323F278 LDP X9, X1, [X8 + 0x178]
	0x0323F27C BLR X9
	0x0323F280 MOV X24, X0
	0x0323F284 CBZ X0, 0x323F3DC
	0x0323F288 LDR X1, [X31 + 0x18]
	0x0323F28C MOVZ W4, 0x1
	0x0323F290 MOV X0, X24
	0x0323F294 MOV X2, X23
	0x0323F298 MOV X3, X19
	0x0323F29C MOV X5, X31
	0x0323F2A0 BL 0x33FBF60
	0x0323F2A4 SUB X8, X28, 0x2
	0x0323F2A8 STR X8, [X31 + 0x28]
	0x0323F2AC LDR X8, [X24]
	0x0323F2B0 ADD X2, X31, 0x28
	0x0323F2B4 MOV X0, X24
	0x0323F2B8 MOV W1, W25
	0x0323F2BC B 0x323F30C
	0x0323F2C0 LDR X0, [X22 + 0x28]
	0x0323F2C4 CBZ X0, 0x323F3DC
	0x0323F2C8 LDR X8, [X0]
	0x0323F2CC LDP X9, X1, [X8 + 0x178]
	0x0323F2D0 BLR X9
	0x0323F2D4 MOV X24, X0
	0x0323F2D8 CBZ X0, 0x323F3DC
	0x0323F2DC LDR X1, [X31 + 0x18]
	0x0323F2E0 MOVZ W4, 0x1
	0x0323F2E4 MOV X0, X24
	0x0323F2E8 MOV X2, X23
	0x0323F2EC MOV X3, X19
	0x0323F2F0 MOV X5, X31
	0x0323F2F4 BL 0x33FBF60
	0x0323F2F8 STR X28, [X31 + 0x28]
	0x0323F2FC LDR X8, [X24]
	0x0323F300 ADD X2, X31, 0x28
	0x0323F304 MOV X0, X24
	0x0323F308 MOV W1, W26
	0x0323F30C LDP X9, X3, [X8 + 0x1D8]
	0x0323F310 BLR X9
	0x0323F314 LDR X28, [X31 + 0x28]
	0x0323F318 B 0x323F1B0
	0x0323F31C CBZ X24, 0x323F328
	0x0323F320 LDRB W8, [X24 + 0x2A]
	0x0323F324 CBNZ W8, 0x323F34C
	0x0323F328 SUB X28, X28, 0x2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {37}
	006 Move TEMP, X3
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {54}
	010 Move TEMP, X2
	011 And TEMP, TEMP, -2147483648
	012 Compare TEMP, -2147483648
	013 JumpIfEqual {54}
	014 Move W8, [X1+24]
	015 Subtract W9, W8, W2
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Compare W3, 0
	018 JumpIfEqual {32}
	019 Move X9, [X0]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Add X10, X1, 32
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X5, [X9+712]
	025 Move X4, [X9+720]
	026 NotImplemented "Instruction CSEL not yet implemented."
	027 Add X1, X8, W2
	028 Move W2, W3
	029 Move X3, X31
	030 Move X30, [X31+32]
	031 CallNoReturn X5
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move W0, W31
	035 Move X30, [X31+32]
	036 Return X0
	037 Move X0, 0xEBA000
	038 Move X0, [X0+1320]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0xEE4000
	043 Move X0, [X0+776]
	044 Call 0x1C17D08
	045 Move X20, X0
	046 Move X0, 0xEE4000
	047 Move X0, [X0+736]
	048 Call 0x1C17D08
	049 Move X2, X0
	050 Move X0, X19
	051 Move X1, X20
	052 Move X3, X31
	053 Call ArgumentNullException..ctor, X0, X1, X2
	054 Move X8, 0xEDD000
	055 Move X9, 0xEC0000
	056 Move X8, [X8+1608]
	057 Move X9, [X9+304]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 Call 0x1C17D08
	061 Move X19, X0
	062 Move X0, 0xEBD000
	063 Move X0, [X0+1888]
	064 Call 0x1C17D08
	065 Call 0x1C17F10
	066 Move X20, X0
	067 Move X0, 0xEDD000
	068 Move X0, [X0+1648]
	069 Call 0x1C17D08
	070 Move X2, X0
	071 Move X0, X20
	072 Move X1, X19
	073 Move X3, X31
	074 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	075 Move X0, 0xEE4000
	076 Move X0, [X0+2216]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X20
	080 Call 0x1C17DEC
	081 Move X0, 0xEBD000
	082 Move X0, [X0+1888]
	083 Call 0x1C17D08
	084 Call 0x1C17F10
	085 Move X19, X0
	086 Move X0, 0xEE4000
	087 Move X0, [X0+776]
	088 Call 0x1C17D08
	089 Move X20, X0
	090 Move X0, 0xEE4000
	091 Move X0, [X0+224]
	092 Call 0x1C17D08
	093 Move X2, X0
	094 Move X0, X19
	095 Move X1, X20
	096 Move X3, X31
	097 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	098 Move X0, 0xEE4000
	099 Move X0, [X0+2216]
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X19
	103 Call 0x1C17DEC

Method: System.Int32 GetCharCount(System.Byte* bytes, System.Int32 count)

Disassembly:
	0x0323F32C B 0x323F364
	0x0323F330 CBZ X24, 0x323F360
	0x0323F334 LDRB W8, [X24 + 0x2A]
	0x0323F338 CBZ W8, 0x323F360
	0x0323F33C LDR X8, [X24]
	0x0323F340 MOV X0, X24
	0x0323F344 LDP X9, X1, [X8 + 0x1A8]
	0x0323F348 BLR X9
	0x0323F34C LDR X8, [X24]
	0x0323F350 MOV X0, X24
	0x0323F354 LDP X9, X1, [X8 + 0x1A8]
	0x0323F358 BLR X9
	0x0323F35C B 0x323F364
	0x0323F360 SUB X28, X28, 0x4
	0x0323F364 LDR X20, [X31 + 0x10]
	0x0323F368 MOV X0, X22
	0x0323F36C MOV X1, X19
	0x0323F370 MOV X3, X31
	0x0323F374 CMP X27, X20
	0x0323F378 CSET W2, EQ
	0x0323F37C BL 0x3245184
	0x0323F380 CBZ X19, 0x323F3A4
	0x0323F384 MOV W25, W31
	0x0323F388 LDR X8, [X31 + 0x18]
	0x0323F38C STRH W25, [X19 + 0x20]
	0x0323F390 SUB X8, X28, X8
	0x0323F394 CMP X8, 0x0
	0x0323F398 CINC X8, X8, LT
	0x0323F39C UBFM X8, X8, 0x1, 0x3F
	0x0323F3A0 STR W8, [X19 + 0x34]
	0x0323F3A4 SUB W0, W27, W20
	0x0323F3A8 LDP X20, X19, [X31 + 0x80]
	0x0323F3AC LDP X22, X21, [X31 + 0x70]
	0x0323F3B0 LDP X24, X23, [X31 + 0x60]
	0x0323F3B4 LDP X26, X25, [X31 + 0x50]
	0x0323F3B8 LDP X28, X27, [X31 + 0x40]
	0x0323F3BC LDP X29, X30, [X31 + 0x30]
	0x0323F3C0 ADD X31, X31, 0x90
	0x0323F3C4 RET
	0x0323F3C8 LDR X20, [X31 + 0x10]
	0x0323F3CC CBNZ X19, 0x323F384
	0x0323F3D0 B 0x323F3A4
	0x0323F3D4 LDR X20, [X31 + 0x10]
	0x0323F3D8 B 0x323F388
	0x0323F3DC BL 0x1C16F20
	0x0323F3E0 STRH W25, [X31 + 0x24]
	0x0323F3E4 ADRP X0, 0xEB6000
	0x0323F3E8 LDR X0, [X0 + 0x170]
	0x0323F3EC BL 0x1C16D08
	0x0323F3F0 ADD X1, X31, 0x24
	0x0323F3F4 BL 0x1C16E04
	0x0323F3F8 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {18}
	006 Move TEMP, X2
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {35}
	010 Move X8, [X0]
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X3, X31
	014 Move X5, [X8+712]
	015 Move X4, [X8+720]
	016 Move X30, [X31+32]
	017 CallNoReturn X5
	018 Move X0, 0xEBA000
	019 Move X0, [X0+1320]
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X19, X0
	023 Move X0, 0xEE4000
	024 Move X0, [X0+776]
	025 Call 0x1C17D08
	026 Move X20, X0
	027 Move X0, 0xEE4000
	028 Move X0, [X0+736]
	029 Call 0x1C17D08
	030 Move X2, X0
	031 Move X0, X19
	032 Move X1, X20
	033 Move X3, X31
	034 Call ArgumentNullException..ctor, X0, X1, X2
	035 Move X0, 0xEBD000
	036 Move X0, [X0+1888]
	037 Call 0x1C17D08
	038 Call 0x1C17F10
	039 Move X19, X0
	040 Move X0, 0xEDD000
	041 Move X0, [X0+1608]
	042 Call 0x1C17D08
	043 Move X20, X0
	044 Move X0, 0xEDD000
	045 Move X0, [X0+1648]
	046 Call 0x1C17D08
	047 Move X2, X0
	048 Move X0, X19
	049 Move X1, X20
	050 Move X3, X31
	051 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	052 Move X0, 0xEE4000
	053 Move X0, [X0+2224]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X19
	057 Call 0x1C17DEC

Method: System.Int32 GetChars(System.Byte[] bytes, System.Int32 byteIndex, System.Int32 byteCount, System.Char[] chars, System.Int32 charIndex)

Disassembly:
	0x0323F3FC ADRP X0, 0xEE3000
	0x0323F400 LDR X0, [X0 + 0x8D8]
	0x0323F404 BL 0x1C16D08
	0x0323F408 MOV X1, X19
	0x0323F40C MOV X2, X31
	0x0323F410 BL 0x32094D4
	0x0323F414 MOV X19, X0
	0x0323F418 ADRP X0, 0xEBC000
	0x0323F41C LDR X0, [X0 + 0x578]
	0x0323F420 BL 0x1C16D08
	0x0323F424 BL 0x1C16F10
	0x0323F428 MOV X20, X0
	0x0323F42C ADRP X0, 0xEE3000
	0x0323F430 LDR X0, [X0 + 0x2D8]
	0x0323F434 BL 0x1C16D08
	0x0323F438 MOV X2, X0
	0x0323F43C MOV X0, X20
	0x0323F440 MOV X1, X19
	0x0323F444 MOV X3, X31
	0x0323F448 BL 0x330E16C
	0x0323F44C ADRP X0, 0xEE3000
	0x0323F450 LDR X0, [X0 + 0x8E8]
	0x0323F454 BL 0x1C16D08
	0x0323F458 MOV X1, X0
	0x0323F45C MOV X0, X20
	0x0323F460 BL 0x1C16DEC
	0x0323F464 LDR X8, [X22]
	0x0323F468 MOV X0, X22
	0x0323F46C LDP X9, X1, [X8 + 0x1B8]
	0x0323F470 BLR X9
	0x0323F474 MOV X20, X0
	0x0323F478 MOV X0, X19
	0x0323F47C BL 0x19903C0
	0x0323F480 LDR X19, [X19 + 0x10]
	0x0323F484 MOV X0, X19
	0x0323F488 BL 0x19903C0
	0x0323F48C MOV X0, X19
	0x0323F490 MOV X1, X31
	0x0323F494 BL 0x33BE520
	0x0323F498 MOV X19, X0
	0x0323F49C ADRP X0, 0xEE3000
	0x0323F4A0 LDR X0, [X0 + 0x6B0]
	0x0323F4A4 BL 0x1C16D08
	0x0323F4A8 MOV X1, X20
	0x0323F4AC MOV X2, X19
	0x0323F4B0 MOV X3, X31
	0x0323F4B4 BL 0x320A264
	0x0323F4B8 MOV X19, X0
	0x0323F4BC ADRP X0, 0xEBC000
	0x0323F4C0 LDR X0, [X0 + 0x578]
	0x0323F4C4 BL 0x1C16D08
	0x0323F4C8 BL 0x1C16F10
	0x0323F4CC MOV X1, X19
	0x0323F4D0 MOV X2, X31
	0x0323F4D4 MOV X20, X0
	0x0323F4D8 BL 0x3314A68
	0x0323F4DC B 0x323F44C
	0x0323F4E0 SUB X31, X31, 0x80
	0x0323F4E4 STP X29, X30, [X31 + 0x20]
	0x0323F4E8 STP X28, X27, [X31 + 0x30]
	0x0323F4EC STP X26, X25, [X31 + 0x40]
	0x0323F4F0 STP X24, X23, [X31 + 0x50]
	0x0323F4F4 STP X22, X21, [X31 + 0x60]
	0x0323F4F8 STP X20, X19, [X31 + 0x70]
	0x0323F4FC ADRP X19, 0x119D000
	0x0323F500 LDRB W8, [X19 + 0x41B]
	0x0323F504 MOV X25, X3
	0x0323F508 MOV W21, W2
	0x0323F50C MOV X23, X1
	0x0323F510 MOV X22, X0
	0x0323F514 TBNZ X8, 0x0, 0x323F544
	0x0323F518 ADRP X0, 0xEB4000
	0x0323F51C LDR X0, [X0 + 0x618]
	0x0323F520 BL 0x1C16CF4
	0x0323F524 ADRP X0, 0xEE3000
	0x0323F528 LDR X0, [X0 + 0x8F0]
	0x0323F52C BL 0x1C16CF4
	0x0323F530 ADRP X0, 0xEE3000
	0x0323F534 LDR X0, [X0 + 0x8D0]
	0x0323F538 BL 0x1C16CF4
	0x0323F53C MOVZ W8, 0x1
	0x0323F540 STRB W8, [X19 + 0x41B]
	0x0323F544 CBZ X25, 0x323F590
	0x0323F548 ADRP X8, 0xEE3000
	0x0323F54C LDR X8, [X8 + 0x8F0]
	0x0323F550 LDR X1, [X8]
	0x0323F554 LDR X8, [X25]
	0x0323F558 CMP X8, X1
	0x0323F55C B.NE 0x323FB1C
	0x0323F560 LDRH W24, [X25 + 0x34]
	0x0323F564 LDR W20, [X25 + 0x30]
	0x0323F568 SBFM W8, W21, 0x1, 0x1F
	0x0323F56C ADD X26, X23, W21, SXTW
	0x0323F570 CMP W24, 0x0
	0x0323F574 CINC W8, W8, NE
	0x0323F578 CMP W20, 0x0
	0x0323F57C CSET W9, GE
	0x0323F580 AND W9, W21, W9, 0x0
	0x0323F584 ADD W8, W8, W9
	0x0323F588 STR W8, [X31 + 0x1C]
	0x0323F58C B 0x323F5A4
	0x0323F590 SBFM W8, W21, 0x1, 0x1F
	0x0323F594 MOV W24, W31
	0x0323F598 ADD X26, X23, W21, SXTW
	0x0323F59C STR W8, [X31 + 0x1C]
	0x0323F5A0 MOVN W20, 0x0
	0x0323F5A4 CMP X26, X23
	0x0323F5A8 STP X23, X25, [X31]
	0x0323F5AC B.LS 0x323F948
	0x0323F5B0 STR X31, [X31 + 0x10]
	0x0323F5B4 ADRP X29, 0xEE3000
	0x0323F5B8 MOVZ X28, 0xD800
	0x0323F5BC LDR X29, [X29 + 0x8D0]
	0x0323F5C0 MOVK X28, 0xD8000000
	0x0323F5C4 MOVK X28, 0xD800
	0x0323F5C8 SUB X27, X26, 0x7
	0x0323F5CC MOVK X28, 0xD8000000
	0x0323F5D0 MOVZ W25, 0xD800
	0x0323F5D4 LDRB W21, [X22 + 0x39]
	0x0323F5D8 MOV W19, W24
	0x0323F5DC ANDS W31, W19, 0xFFFF
	0x0323F5E0 B.NE 0x323F674
	0x0323F5E4 ADDS W31, W20, 0x1
	0x0323F5E8 B.NE 0x323F674
	0x0323F5EC AND X8, X23, 0x7
	0x0323F5F0 CBNZ X8, 0x323F674
	0x0323F5F4 AND W8, W21, 0xFF
	0x0323F5F8 CMP W8, 0x1
	0x0323F5FC B.EQ 0x323F674
	0x0323F600 CMP X27, X23
	0x0323F604 B.LS 0x323F66C
	0x0323F608 LDR X21, [X23]
	0x0323F60C ANDS X31, X21, 0x8000800080008000
	0x0323F610 B.EQ 0x323F664
	0x0323F614 AND X8, X21, 0xF800F800F800F800
	0x0323F618 EOR X8, X8, X28, 0x0
	0x0323F61C ANDS X31, X8, 0xFFFF
	0x0323F620 B.EQ 0x323F63C
	0x0323F624 AND X9, X8, 0xFFFFFFFF
	0x0323F628 CBZ X9, 0x323F63C
	0x0323F62C UBFM X9, X8, 0x3B, 0x3F
	0x0323F630 CBZ X9, 0x323F63C
	0x0323F634 AND X8, X8, 0xFFFFFFFFFFFF
	0x0323F638 CBNZ X8, 0x323F664
	0x0323F63C LDR X0, [X29]
	0x0323F640 LDR W8, [X0 + 0xE0]
	0x0323F644 CBNZ W8, 0x323F650
	0x0323F648 BL 0x1C16DFC
	0x0323F64C LDR X0, [X29]
	0x0323F650 LDR X8, [X0 + 0xB8]
	0x0323F654 AND X9, X21, 0xFC00FC00FC00FC00
	0x0323F658 LDR X8, [X8 + 0x20]
	0x0323F65C CMP X9, X8

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x119E000
	011 Move W8, [X25+1047]
	012 Move W20, W5
	013 Move X23, X4
	014 Move W19, W3
	015 Move W21, W2
	016 Move X24, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xEE4000
	023 Move X0, [X0+712]
	024 Call 0x1C17CF4
	025 Move X0, 0xEE4000
	026 Move X0, [X0+720]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+1047], W8
	030 Compare X24, 0
	031 JumpIfEqual {106}
	032 Compare X23, 0
	033 JumpIfEqual {106}
	034 Move TEMP, X19
	035 And TEMP, TEMP, -2147483648
	036 Compare TEMP, -2147483648
	037 JumpIfEqual {127}
	038 Move TEMP, X21
	039 And TEMP, TEMP, -2147483648
	040 Compare TEMP, -2147483648
	041 JumpIfEqual {127}
	042 Move W8, [X24+24]
	043 Subtract W9, W8, W21
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move TEMP, X20
	046 And TEMP, TEMP, -2147483648
	047 Compare TEMP, -2147483648
	048 JumpIfEqual {95}
	049 Move W9, [X23+24]
	050 Subtract W25, W9, W20
	051 Compare W19, 0
	052 JumpIfEqual {84}
	053 Move X9, 0xEE4000
	054 Move X9, [X9+720]
	055 Move X26, 0xEE4000
	056 Move X26, [X26+712]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X1, [X9]
	059 Add X9, X24, 32
	060 Move X0, X23
	061 NotImplemented "Instruction CSEL not yet implemented."
	062 Call Span`1<Char>.op_Implicit, X0
	063 Move X2, [X26]
	064 Call MemoryMarshal.GetReference, X0
	065 Move X8, [X22]
	066 Add X1, X24, W21
	067 Add X3, X0, W20
	068 Move X0, X22
	069 Move X7, [X8+776]
	070 Move X6, [X8+784]
	071 Move W2, W19
	072 Move W4, W25
	073 Move X20, [X31+64]
	074 Move X19, [X31+72]
	075 Move X22, [X31+48]
	076 Move X21, [X31+56]
	077 Move X24, [X31+32]
	078 Move X23, [X31+40]
	079 Move X26, [X31+16]
	080 Move X25, [X31+24]
	081 Move X5, X31
	082 Move X30, [X31+80]
	083 CallNoReturn X7
	084 Move X20, [X31+64]
	085 Move X19, [X31+72]
	086 Move X22, [X31+48]
	087 Move X21, [X31+56]
	088 Move X24, [X31+32]
	089 Move X23, [X31+40]
	090 Move X26, [X31+16]
	091 Move X25, [X31+24]
	092 Move W0, W31
	093 Move X30, [X31+80]
	094 Return X0
	095 Move X0, 0xEBD000
	096 Move X0, [X0+1888]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X19, X0
	100 Move X0, 0xEE4000
	101 Move X0, [X0+792]
	102 Call 0x1C17D08
	103 Move X20, X0
	104 Move X0, 0xEDD000
	105 Move X0, [X0+1632]
	106 Move X8, 0xEE4000
	107 Move X9, 0xEE4000
	108 Move X8, [X8+728]
	109 Move X9, [X9+776]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction CSEL not yet implemented."
	112 Call 0x1C17D08
	113 Move X19, X0
	114 Move X0, 0xEBA000
	115 Move X0, [X0+1320]
	116 Call 0x1C17D08
	117 Call 0x1C17F10
	118 Move X20, X0
	119 Move X0, 0xEE4000
	120 Move X0, [X0+736]
	121 Call 0x1C17D08
	122 Move X2, X0
	123 Move X0, X20
	124 Move X1, X19
	125 Move X3, X31
	126 Call ArgumentNullException..ctor, X0, X1, X2
	127 Move X8, 0xEE4000
	128 Move X9, 0xEE4000
	129 Move X8, [X8+808]
	130 Move X9, [X9+768]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 NotImplemented "Instruction CSEL not yet implemented."
	133 Call 0x1C17D08
	134 Move X19, X0
	135 Move X0, 0xEBD000
	136 Move X0, [X0+1888]
	137 Call 0x1C17D08
	138 Call 0x1C17F10
	139 Move X20, X0
	140 Move X0, 0xEDD000
	141 Move X0, [X0+1648]
	142 Call 0x1C17D08
	143 Move X2, X0
	144 Move X0, X20
	145 Move X1, X19
	146 Move X3, X31
	147 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	148 Move X0, 0xEE4000
	149 Move X0, [X0+2232]
	150 Call 0x1C17D08
	151 Move X1, X0
	152 Move X0, X20
	153 Call 0x1C17DEC
	154 Move X0, 0xEBD000
	155 Move X0, [X0+1888]
	156 Call 0x1C17D08
	157 Call 0x1C17F10
	158 Move X19, X0
	159 Move X0, 0xEE4000
	160 Move X0, [X0+776]
	161 Call 0x1C17D08
	162 Move X20, X0
	163 Move X0, 0xEE4000
	164 Move X0, [X0+224]
	165 Call 0x1C17D08
	166 Move X2, X0
	167 Move X0, X19
	168 Move X1, X20
	169 Move X3, X31
	170 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	171 Move X0, 0xEE4000
	172 Move X0, [X0+2232]
	173 Call 0x1C17D08
	174 Move X1, X0
	175 Move X0, X19
	176 Call 0x1C17DEC

Method: System.Int32 GetChars(System.Byte* bytes, System.Int32 byteCount, System.Char* chars, System.Int32 charCount)

Disassembly:
	0x0323F660 B.NE 0x323F66C
	0x0323F664 ADD X23, X23, 0x8
	0x0323F668 B 0x323F600
	0x0323F66C CMP X26, X23
	0x0323F670 B.LS 0x323F950
	0x0323F674 TBZ X20, 0x1F, 0x323F684
	0x0323F678 LDRB W20, [X23], #0x1
	0x0323F67C CMP X23, X26
	0x0323F680 B.CS 0x323F95C
	0x0323F684 LDRB W21, [X22 + 0x39]
	0x0323F688 LDRB W8, [X23], #0x1
	0x0323F68C CMP W21, 0x0
	0x0323F690 ORR W9, W20, W8, 0x8
	0x0323F694 BFM W8, W20, 0x18, 0x17
	0x0323F698 CSEL W24, W9, W8, EQ
	0x0323F69C AND W8, W24, 0xF800
	0x0323F6A0 CMP W8, W25
	0x0323F6A4 B.NE 0x323F6C0
	0x0323F6A8 UBFM W8, W24, 0xA, 0xF
	0x0323F6AC CMP W8, 0x36
	0x0323F6B0 B.LS 0x323F718
	0x0323F6B4 ANDS W31, W19, 0xFFFF
	0x0323F6B8 B.NE 0x323F6C8
	0x0323F6BC B 0x323F6DC
	0x0323F6C0 ANDS W31, W19, 0xFFFF
	0x0323F6C4 B.NE 0x323F75C
	0x0323F6C8 MOV W19, W31
	0x0323F6CC CMP X26, X23
	0x0323F6D0 MOVN W20, 0x0
	0x0323F6D4 B.HI 0x323F5DC
	0x0323F6D8 B 0x323F950
	0x0323F6DC ADRP X8, 0xEB4000
	0x0323F6E0 LDR X8, [X8 + 0x618]
	0x0323F6E4 MOVZ W1, 0x2
	0x0323F6E8 LDR X0, [X8]
	0x0323F6EC BL 0x1C16D6C
	0x0323F6F0 CBZ X0, 0x323FB18
	0x0323F6F4 LDR W8, [X0 + 0x18]
	0x0323F6F8 MOV X25, X0
	0x0323F6FC CBZ W21, 0x323F7A0
	0x0323F700 CBZ W8, 0x323FB14
	0x0323F704 UBFM W9, W24, 0x8, 0x1F
	0x0323F708 CMP W8, 0x1
	0x0323F70C STRB W9, [X25 + 0x20]
	0x0323F710 B.NE 0x323F7B4
	0x0323F714 B 0x323FB14
	0x0323F718 ANDS W31, W19, 0xFFFF
	0x0323F71C B.EQ 0x323F8E0
	0x0323F720 ADRP X8, 0xEB4000
	0x0323F724 LDR X8, [X8 + 0x618]
	0x0323F728 MOVZ W1, 0x2
	0x0323F72C LDR X0, [X8]
	0x0323F730 BL 0x1C16D6C
	0x0323F734 CBZ X0, 0x323FB18
	0x0323F738 LDR W8, [X0 + 0x18]
	0x0323F73C MOV X25, X0
	0x0323F740 CBZ W21, 0x323F84C
	0x0323F744 CBZ W8, 0x323FB14
	0x0323F748 UBFM W9, W19, 0x8, 0x1F
	0x0323F74C CMP W8, 0x1
	0x0323F750 STRB W9, [X25 + 0x20]
	0x0323F754 B.NE 0x323F860

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {24}
	006 Compare X3, 0
	007 JumpIfEqual {24}
	008 Move TEMP, X2
	009 And TEMP, TEMP, -2147483648
	010 Compare TEMP, -2147483648
	011 JumpIfEqual {45}
	012 Move TEMP, X4
	013 And TEMP, TEMP, -2147483648
	014 Compare TEMP, -2147483648
	015 JumpIfEqual {45}
	016 Move X8, [X0]
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X5, X31
	020 Move X7, [X8+776]
	021 Move X6, [X8+784]
	022 Move X30, [X31+32]
	023 CallNoReturn X7
	024 Move X8, 0xEE4000
	025 Move X9, 0xEE4000
	026 Move X8, [X8+728]
	027 Move X9, [X9+776]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSEL not yet implemented."
	030 Call 0x1C17D08
	031 Move X19, X0
	032 Move X0, 0xEBA000
	033 Move X0, [X0+1320]
	034 Call 0x1C17D08
	035 Call 0x1C17F10
	036 Move X20, X0
	037 Move X0, 0xEE4000
	038 Move X0, [X0+736]
	039 Call 0x1C17D08
	040 Move X2, X0
	041 Move X0, X20
	042 Move X1, X19
	043 Move X3, X31
	044 Call ArgumentNullException..ctor, X0, X1, X2
	045 Move X8, 0xEE4000
	046 Move X9, 0xEE4000
	047 Move X8, [X8+808]
	048 Move X9, [X9+784]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 Call 0x1C17D08
	052 Move X19, X0
	053 Move X0, 0xEBD000
	054 Move X0, [X0+1888]
	055 Call 0x1C17D08
	056 Call 0x1C17F10
	057 Move X20, X0
	058 Move X0, 0xEDD000
	059 Move X0, [X0+1648]
	060 Call 0x1C17D08
	061 Move X2, X0
	062 Move X0, X20
	063 Move X1, X19
	064 Move X3, X31
	065 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	066 Move X0, 0xEE4000
	067 Move X0, [X0+2240]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X20
	071 Call 0x1C17DEC

Method: System.String GetString(System.Byte[] bytes, System.Int32 index, System.Int32 count)

Disassembly:
	0x0323F758 B 0x323FB14
	0x0323F75C ADRP X8, 0xEB4000
	0x0323F760 LDR X8, [X8 + 0x618]
	0x0323F764 MOVZ W1, 0x2
	0x0323F768 LDR X0, [X8]
	0x0323F76C BL 0x1C16D6C
	0x0323F770 CBZ X0, 0x323FB18
	0x0323F774 LDR W8, [X0 + 0x18]
	0x0323F778 LDR W20, [X31 + 0x1C]
	0x0323F77C LDR X24, [X31 + 0x10]
	0x0323F780 MOV X25, X0
	0x0323F784 CBZ W21, 0x323F7D8
	0x0323F788 CBZ W8, 0x323FB14
	0x0323F78C UBFM W9, W19, 0x8, 0x1F
	0x0323F790 CMP W8, 0x1
	0x0323F794 STRB W9, [X25 + 0x20]
	0x0323F798 B.NE 0x323F7EC
	0x0323F79C B 0x323FB14
	0x0323F7A0 CBZ W8, 0x323FB14
	0x0323F7A4 CMP W8, 0x1
	0x0323F7A8 STRB W24, [X25 + 0x20]
	0x0323F7AC B.EQ 0x323FB14
	0x0323F7B0 UBFM W24, W24, 0x8, 0x1F
	0x0323F7B4 LDR W19, [X31 + 0x1C]
	0x0323F7B8 LDR X20, [X31 + 0x10]
	0x0323F7BC STRB W24, [X25 + 0x21]
	0x0323F7C0 CBNZ X20, 0x323F838
	0x0323F7C4 LDR X0, [X31 + 0x8]
	0x0323F7C8 CBZ X0, 0x323F808
	0x0323F7CC MOV X1, X31
	0x0323F7D0 BL 0x33FC534
	0x0323F7D4 B 0x323F81C
	0x0323F7D8 CBZ W8, 0x323FB14
	0x0323F7DC CMP W8, 0x1
	0x0323F7E0 STRB W19, [X25 + 0x20]
	0x0323F7E4 B.EQ 0x323FB14
	0x0323F7E8 UBFM W19, W19, 0x8, 0xF
	0x0323F7EC STRB W19, [X25 + 0x21]
	0x0323F7F0 CBNZ X24, 0x323F8B0
	0x0323F7F4 LDR X0, [X31 + 0x8]
	0x0323F7F8 CBZ X0, 0x323F880
	0x0323F7FC MOV X1, X31
	0x0323F800 BL 0x33FC534
	0x0323F804 B 0x323F894
	0x0323F808 LDR X0, [X22 + 0x30]
	0x0323F80C CBZ X0, 0x323FB18
	0x0323F810 LDR X8, [X0]
	0x0323F814 LDP X9, X1, [X8 + 0x178]
	0x0323F818 BLR X9
	0x0323F81C MOV X20, X0
	0x0323F820 CBZ X0, 0x323FB18
	0x0323F824 LDR X1, [X31]
	0x0323F828 MOV X0, X20
	0x0323F82C MOV X2, X31
	0x0323F830 MOV X3, X31
	0x0323F834 BL 0x33FC570
	0x0323F838 LDR X8, [X20]
	0x0323F83C SUB W19, W19, 0x1
	0x0323F840 STR X20, [X31 + 0x10]
	0x0323F844 MOV X0, X20
	0x0323F848 B 0x323F8C0
	0x0323F84C CBZ W8, 0x323FB14
	0x0323F850 CMP W8, 0x1
	0x0323F854 STRB W19, [X25 + 0x20]
	0x0323F858 B.EQ 0x323FB14
	0x0323F85C UBFM W19, W19, 0x8, 0xF
	0x0323F860 LDR X20, [X31 + 0x10]
	0x0323F864 STRB W19, [X25 + 0x21]
	0x0323F868 CBNZ X20, 0x323F920
	0x0323F86C LDR X0, [X31 + 0x8]
	0x0323F870 CBZ X0, 0x323F8F0
	0x0323F874 MOV X1, X31
	0x0323F878 BL 0x33FC534
	0x0323F87C B 0x323F904
	0x0323F880 LDR X0, [X22 + 0x30]
	0x0323F884 CBZ X0, 0x323FB18
	0x0323F888 LDR X8, [X0]
	0x0323F88C LDP X9, X1, [X8 + 0x178]
	0x0323F890 BLR X9
	0x0323F894 MOV X24, X0
	0x0323F898 CBZ X0, 0x323FB18
	0x0323F89C LDR X1, [X31]
	0x0323F8A0 MOV X0, X24
	0x0323F8A4 MOV X2, X31
	0x0323F8A8 MOV X3, X31
	0x0323F8AC BL 0x33FC570
	0x0323F8B0 LDR X8, [X24]
	0x0323F8B4 SUB W19, W20, 0x1
	0x0323F8B8 MOV X0, X24
	0x0323F8BC STR X24, [X31 + 0x10]
	0x0323F8C0 LDP X9, X3, [X8 + 0x1B8]
	0x0323F8C4 MOV X1, X25
	0x0323F8C8 MOV X2, X23
	0x0323F8CC BLR X9
	0x0323F8D0 MOV W24, W31
	0x0323F8D4 ADD W8, W19, W0
	0x0323F8D8 MOVZ W25, 0xD800
	0x0323F8DC STR W8, [X31 + 0x1C]
	0x0323F8E0 CMP X26, X23
	0x0323F8E4 MOVN W20, 0x0
	0x0323F8E8 B.HI 0x323F5D4
	0x0323F8EC B 0x323F960
	0x0323F8F0 LDR X0, [X22 + 0x30]
	0x0323F8F4 CBZ X0, 0x323FB18
	0x0323F8F8 LDR X8, [X0]
	0x0323F8FC LDP X9, X1, [X8 + 0x178]
	0x0323F900 BLR X9
	0x0323F904 MOV X20, X0
	0x0323F908 CBZ X0, 0x323FB18
	0x0323F90C LDR X1, [X31]
	0x0323F910 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x119E000
	008 Move W8, [X23+1048]
	009 Move W20, W3
	010 Move W19, W2
	011 Move X22, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xEB7000
	018 Move X0, [X0+632]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+1048], W8
	022 Compare X22, 0
	023 JumpIfEqual {64}
	024 Move TEMP, X20
	025 And TEMP, TEMP, -2147483648
	026 Compare TEMP, -2147483648
	027 JumpIfEqual {81}
	028 Move TEMP, X19
	029 And TEMP, TEMP, -2147483648
	030 Compare TEMP, -2147483648
	031 JumpIfEqual {81}
	032 Move W8, [X22+24]
	033 Subtract W9, W8, W19
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Compare W20, 0
	036 JumpIfEqual {52}
	037 Add X9, X22, 32
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 Add X0, X8, W19
	041 Move W1, W20
	042 Move X2, X21
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X3, X31
	048 Move X30, [X31+48]
	049 Move X23, [X31+56]
	050 Call String.CreateStringFromEncoding, X0, X1, X2
	051 Return X0
	052 Move X8, 0xEB7000
	053 Move X8, [X8+632]
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X8, [X8]
	059 Move X8, [X8+184]
	060 Move X0, [X8]
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Return X0
	064 Move X0, 0xEBA000
	065 Move X0, [X0+1320]
	066 Call 0x1C17D08
	067 Call 0x1C17F10
	068 Move X19, X0
	069 Move X0, 0xEE4000
	070 Move X0, [X0+776]
	071 Call 0x1C17D08
	072 Move X20, X0
	073 Move X0, 0xEE4000
	074 Move X0, [X0+736]
	075 Call 0x1C17D08
	076 Move X2, X0
	077 Move X0, X19
	078 Move X1, X20
	079 Move X3, X31
	080 Call ArgumentNullException..ctor, X0, X1, X2
	081 Move X8, 0xEDD000
	082 Move X9, 0xEC0000
	083 Move X8, [X8+1608]
	084 Move X9, [X9+304]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction CSEL not yet implemented."
	087 Call 0x1C17D08
	088 Move X19, X0
	089 Move X0, 0xEBD000
	090 Move X0, [X0+1888]
	091 Call 0x1C17D08
	092 Call 0x1C17F10
	093 Move X20, X0
	094 Move X0, 0xEDD000
	095 Move X0, [X0+1648]
	096 Call 0x1C17D08
	097 Move X2, X0
	098 Move X0, X20
	099 Move X1, X19
	100 Move X3, X31
	101 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	102 Move X0, 0xEE4000
	103 Move X0, [X0+2248]
	104 Call 0x1C17D08
	105 Move X1, X0
	106 Move X0, X20
	107 Call 0x1C17DEC
	108 Move X0, 0xEBD000
	109 Move X0, [X0+1888]
	110 Call 0x1C17D08
	111 Call 0x1C17F10
	112 Move X19, X0
	113 Move X0, 0xEE4000
	114 Move X0, [X0+776]
	115 Call 0x1C17D08
	116 Move X20, X0
	117 Move X0, 0xEE4000
	118 Move X0, [X0+224]
	119 Call 0x1C17D08
	120 Move X2, X0
	121 Move X0, X19
	122 Move X1, X20
	123 Move X3, X31
	124 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	125 Move X0, 0xEE4000
	126 Move X0, [X0+2248]
	127 Call 0x1C17D08
	128 Move X1, X0
	129 Move X0, X19
	130 Call 0x1C17DEC

Method: System.Int32 GetByteCount(System.Char* chars, System.Int32 count, System.Text.EncoderNLS encoder)

Disassembly:
	0x0323F914 MOV X2, X31
	0x0323F918 MOV X3, X31
	0x0323F91C BL 0x33FC570
	0x0323F920 LDR X8, [X20]
	0x0323F924 MOV X0, X20
	0x0323F928 MOV X1, X25
	0x0323F92C MOV X2, X23
	0x0323F930 LDP X9, X3, [X8 + 0x1B8]
	0x0323F934 LDR W8, [X31 + 0x1C]
	0x0323F938 STR X20, [X31 + 0x10]
	0x0323F93C SUB W19, W8, 0x1
	0x0323F940 BLR X9
	0x0323F944 B 0x323F8D4
	0x0323F948 STR X31, [X31 + 0x10]
	0x0323F94C B 0x323F960
	0x0323F950 MOV W24, W31
	0x0323F954 MOVN W20, 0x0
	0x0323F958 B 0x323F960
	0x0323F95C MOV W24, W19
	0x0323F960 LDR X21, [X31 + 0x8]
	0x0323F964 CBZ X21, 0x323F970
	0x0323F968 LDRB W8, [X21 + 0x28]
	0x0323F96C CBZ W8, 0x323F9C8
	0x0323F970 ANDS W31, W24, 0xFFFF
	0x0323F974 B.EQ 0x323F9B8
	0x0323F978 ADRP X8, 0xEB4000
	0x0323F97C LDRB W19, [X22 + 0x39]
	0x0323F980 LDR X8, [X8 + 0x618]
	0x0323F984 MOVZ W1, 0x2
	0x0323F988 LDR X0, [X8]
	0x0323F98C BL 0x1C16D6C
	0x0323F990 CBZ X0, 0x323FB18
	0x0323F994 LDR W8, [X0 + 0x18]
	0x0323F998 MOV X25, X0
	0x0323F99C CBZ W19, 0x323F9DC
	0x0323F9A0 CBZ W8, 0x323FB14
	0x0323F9A4 UBFM W9, W24, 0x8, 0x1F
	0x0323F9A8 CMP W8, 0x1
	0x0323F9AC STRB W9, [X25 + 0x20]
	0x0323F9B0 B.NE 0x323F9F0
	0x0323F9B4 B 0x323FB14
	0x0323F9B8 LDR W19, [X31 + 0x1C]
	0x0323F9BC LDR X24, [X31 + 0x10]
	0x0323F9C0 TBZ X20, 0x1F, 0x323FA68
	0x0323F9C4 B 0x323FAF0
	0x0323F9C8 LDR W9, [X31 + 0x1C]
	0x0323F9CC ANDS W31, W24, 0xFFFF
	0x0323F9D0 CSET W8, NE
	0x0323F9D4 SUB W0, W9, W8
	0x0323F9D8 B 0x323FAF4
	0x0323F9DC CBZ W8, 0x323FB14
	0x0323F9E0 CMP W8, 0x1
	0x0323F9E4 STRB W24, [X25 + 0x20]
	0x0323F9E8 B.EQ 0x323FB14
	0x0323F9EC UBFM W24, W24, 0x8, 0xF
	0x0323F9F0 STRB W24, [X25 + 0x21]
	0x0323F9F4 LDR W19, [X31 + 0x1C]
	0x0323F9F8 LDR X24, [X31 + 0x10]
	0x0323F9FC CBNZ X24, 0x323FA44
	0x0323FA00 CBZ X21, 0x323FA14
	0x0323FA04 MOV X0, X21
	0x0323FA08 MOV X1, X31
	0x0323FA0C BL 0x33FC534
	0x0323FA10 B 0x323FA28
	0x0323FA14 LDR X0, [X22 + 0x30]
	0x0323FA18 CBZ X0, 0x323FB18
	0x0323FA1C LDR X8, [X0]
	0x0323FA20 LDP X9, X1, [X8 + 0x178]
	0x0323FA24 BLR X9
	0x0323FA28 MOV X24, X0
	0x0323FA2C CBZ X0, 0x323FB18
	0x0323FA30 LDR X1, [X31]
	0x0323FA34 MOV X0, X24
	0x0323FA38 MOV X2, X31
	0x0323FA3C MOV X3, X31
	0x0323FA40 BL 0x33FC570
	0x0323FA44 LDR X8, [X24]
	0x0323FA48 MOV X0, X24
	0x0323FA4C MOV X1, X25
	0x0323FA50 MOV X2, X23
	0x0323FA54 LDP X9, X3, [X8 + 0x1B8]
	0x0323FA58 SUB W19, W19, 0x1
	0x0323FA5C BLR X9
	0x0323FA60 ADD W19, W19, W0
	0x0323FA64 TBNZ X20, 0x1F, 0x323FAF0
	0x0323FA68 CBNZ X24, 0x323FAB0
	0x0323FA6C CBZ X21, 0x323FA80
	0x0323FA70 MOV X0, X21
	0x0323FA74 MOV X1, X31
	0x0323FA78 BL 0x33FC534
	0x0323FA7C B 0x323FA94
	0x0323FA80 LDR X0, [X22 + 0x30]
	0x0323FA84 CBZ X0, 0x323FB18
	0x0323FA88 LDR X8, [X0]
	0x0323FA8C LDP X9, X1, [X8 + 0x178]
	0x0323FA90 BLR X9
	0x0323FA94 MOV X24, X0
	0x0323FA98 CBZ X0, 0x323FB18
	0x0323FA9C LDR X1, [X31]
	0x0323FAA0 MOV X0, X24
	0x0323FAA4 MOV X2, X31
	0x0323FAA8 MOV X3, X31
	0x0323FAAC BL 0x33FC570
	0x0323FAB0 ADRP X8, 0xEB4000
	0x0323FAB4 LDR X8, [X8 + 0x618]
	0x0323FAB8 MOVZ W1, 0x1
	0x0323FABC LDR X0, [X8]
	0x0323FAC0 BL 0x1C16D6C
	0x0323FAC4 CBZ X0, 0x323FB18
	0x0323FAC8 LDR W8, [X0 + 0x18]
	0x0323FACC MOV X1, X0
	0x0323FAD0 CBZ W8, 0x323FB14
	0x0323FAD4 STRB W20, [X1 + 0x20]
	0x0323FAD8 LDR X8, [X24]
	0x0323FADC MOV X0, X24
	0x0323FAE0 MOV X2, X23
	0x0323FAE4 LDP X9, X3, [X8 + 0x1B8]
	0x0323FAE8 BLR X9
	0x0323FAEC ADD W19, W0, W19
	0x0323FAF0 MOV W0, W19
	0x0323FAF4 LDP X20, X19, [X31 + 0x70]
	0x0323FAF8 LDP X22, X21, [X31 + 0x60]
	0x0323FAFC LDP X24, X23, [X31 + 0x50]
	0x0323FB00 LDP X26, X25, [X31 + 0x40]
	0x0323FB04 LDP X28, X27, [X31 + 0x30]
	0x0323FB08 LDP X29, X30, [X31 + 0x20]
	0x0323FB0C ADD X31, X31, 0x80
	0x0323FB10 RET
	0x0323FB14 BL 0x1C16F28
	0x0323FB18 BL 0x1C16F20
	0x0323FB1C MOV X0, X25
	0x0323FB20 BL 0x1C171E0
	0x0323FB24 SUB X31, X31, 0xB0
	0x0323FB28 STP X29, X30, [X31 + 0x50]
	0x0323FB2C STP X28, X27, [X31 + 0x60]
	0x0323FB30 STP X26, X25, [X31 + 0x70]
	0x0323FB34 STP X24, X23, [X31 + 0x80]
	0x0323FB38 STP X22, X21, [X31 + 0x90]
	0x0323FB3C STP X20, X19, [X31 + 0xA0]
	0x0323FB40 ADRP X19, 0x119D000
	0x0323FB44 LDRB W8, [X19 + 0x41C]
	0x0323FB48 MOV X21, X5
	0x0323FB4C MOV W23, W4
	0x0323FB50 MOV X26, X3
	0x0323FB54 MOV W24, W2
	0x0323FB58 MOV X25, X1
	0x0323FB5C STR X0, [X31 + 0x40]
	0x0323FB60 TBNZ X8, 0x0, 0x323FB90
	0x0323FB64 ADRP X0, 0xEB4000
	0x0323FB68 LDR X0, [X0 + 0x618]
	0x0323FB6C BL 0x1C16CF4
	0x0323FB70 ADRP X0, 0xEE3000
	0x0323FB74 LDR X0, [X0 + 0x8F0]
	0x0323FB78 BL 0x1C16CF4
	0x0323FB7C ADRP X0, 0xEE3000
	0x0323FB80 LDR X0, [X0 + 0x8D0]
	0x0323FB84 BL 0x1C16CF4
	0x0323FB88 MOVZ W8, 0x1
	0x0323FB8C STRB W8, [X19 + 0x41C]
	0x0323FB90 STR X31, [X31 + 0x48]
	0x0323FB94 CBZ X21, 0x323FBC0
	0x0323FB98 ADRP X8, 0xEE3000
	0x0323FB9C LDR X8, [X8 + 0x8F0]
	0x0323FBA0 LDR X1, [X8]
	0x0323FBA4 LDR X8, [X21]
	0x0323FBA8 CMP X8, X1
	0x0323FBAC B.NE 0x3240400
	0x0323FBB0 LDR W27, [X21 + 0x30]
	0x0323FBB4 LDRH W29, [X21 + 0x34]
	0x0323FBB8 STR X21, [X31 + 0x30]
	0x0323FBBC B 0x323FBCC
	0x0323FBC0 STR X31, [X31 + 0x30]
	0x0323FBC4 MOV W29, W31
	0x0323FBC8 MOVN W27, 0x0
	0x0323FBCC ADD X20, X25, W24, SXTW
	0x0323FBD0 CMP X20, X25
	0x0323FBD4 ADD X19, X26, W23, 0x1, SXTW
	0x0323FBD8 STR X25, [X31 + 0x38]
	0x0323FBDC B.LS 0x3240098
	0x0323FBE0 SUB X8, X19, 0x2
	0x0323FBE4 STP X21, X31, [X31 + 0x20]
	0x0323FBE8 STR X8, [X31 + 0x10]
	0x0323FBEC ADRP X12, 0xEE3000
	0x0323FBF0 MOVZ X21, 0xD800
	0x0323FBF4 LDR X12, [X12 + 0x8D0]
	0x0323FBF8 LDR X22, [X31 + 0x40]
	0x0323FBFC MOVK X21, 0xD8000000
	0x0323FC00 MOVK X21, 0xD800
	0x0323FC04 MOVK X21, 0xD8000000
	0x0323FC08 MOV X28, X26
	0x0323FC0C MOV X24, X25
	0x0323FC10 LDRB W8, [X22 + 0x39]
	0x0323FC14 CMP W8, 0x1
	0x0323FC18 B.EQ 0x323FD04
	0x0323FC1C ANDS W31, W29, 0xFFFF
	0x0323FC20 B.NE 0x323FD04
	0x0323FC24 ADDS W31, W27, 0x1
	0x0323FC28 B.NE 0x323FD04
	0x0323FC2C ORR W8, W25, W28, 0x0
	0x0323FC30 AND X8, X8, 0x7
	0x0323FC34 CBNZ X8, 0x323FD04
	0x0323FC38 SUB X9, X19, X28
	0x0323FC3C SUB X8, X20, X25
	0x0323FC40 CMP X9, 0x0
	0x0323FC44 SBFM X10, X8, 0x1, 0x3F
	0x0323FC48 CINC X9, X9, LT
	0x0323FC4C AND X11, X9, 0xFFFFFFFF
	0x0323FC50 CMP X10, X9, ASR
	0x0323FC54 CSEL X8, X8, X11, LT
	0x0323FC58 ADD X8, X25, X8
	0x0323FC5C SUB X25, X8, 0x7
	0x0323FC60 CMP X25, X24
	0x0323FC64 B.LS 0x323FCFC
	0x0323FC68 MOV W23, W29
	0x0323FC6C MOV X29, X26
	0x0323FC70 MOV X26, X19
	0x0323FC74 LDR X19, [X24]
	0x0323FC78 ANDS X31, X19, 0x8000800080008000
	0x0323FC7C B.EQ 0x323FCDC
	0x0323FC80 AND X8, X19, 0xF800F800F800F800
	0x0323FC84 EOR X8, X8, X21, 0x0
	0x0323FC88 ANDS X31, X8, 0xFFFF
	0x0323FC8C B.EQ 0x323FCA8
	0x0323FC90 AND X9, X8, 0xFFFFFFFF
	0x0323FC94 CBZ X9, 0x323FCA8
	0x0323FC98 UBFM X9, X8, 0x3B, 0x3F
	0x0323FC9C CBZ X9, 0x323FCA8
	0x0323FCA0 AND X8, X8, 0xFFFFFFFFFFFF
	0x0323FCA4 CBNZ X8, 0x323FCDC
	0x0323FCA8 LDR X0, [X12]
	0x0323FCAC LDR W8, [X0 + 0xE0]
	0x0323FCB0 CBNZ W8, 0x323FCC4
	0x0323FCB4 MOV X22, X12
	0x0323FCB8 BL 0x1C16DFC
	0x0323FCBC LDR X0, [X22]
	0x0323FCC0 MOV X12, X22
	0x0323FCC4 LDR X8, [X0 + 0xB8]
	0x0323FCC8 AND X9, X19, 0xFC00FC00FC00FC00
	0x0323FCCC LDR X8, [X8 + 0x20]
	0x0323FCD0 CMP X9, X8
	0x0323FCD4 B.NE 0x323FCEC
	0x0323FCD8 LDR X19, [X24]
	0x0323FCDC ADD X24, X24, 0x8
	0x0323FCE0 CMP X25, X24
	0x0323FCE4 STR X19, [X28], #0x8
	0x0323FCE8 B.HI 0x323FC74
	0x0323FCEC LDR X22, [X31 + 0x40]
	0x0323FCF0 MOV X19, X26
	0x0323FCF4 MOV X26, X29
	0x0323FCF8 MOV W29, W23
	0x0323FCFC CMP X20, X24
	0x0323FD00 B.LS 0x32400AC
	0x0323FD04 TBZ X27, 0x1F, 0x323FD1C
	0x0323FD08 LDRB W27, [X24], #0x1
	0x0323FD0C CMP X20, X24
	0x0323FD10 MOV X25, X24
	0x0323FD14 B.HI 0x323FC10
	0x0323FD18 B 0x32400B8
	0x0323FD1C STR X19, [X31 + 0x18]
	0x0323FD20 MOV X25, X24
	0x0323FD24 LDRB W19, [X22 + 0x39]
	0x0323FD28 LDRB W8, [X25], #0x1
	0x0323FD2C CMP W19, 0x0
	0x0323FD30 ORR W9, W27, W8, 0x8
	0x0323FD34 BFM W8, W27, 0x18, 0x17
	0x0323FD38 CSEL W27, W9, W8, EQ
	0x0323FD3C AND W8, W27, 0xF800
	0x0323FD40 MOVZ W9, 0xD800
	0x0323FD44 CMP W8, W9
	0x0323FD48 B.NE 0x323FD74
	0x0323FD4C UBFM W8, W27, 0xA, 0xF
	0x0323FD50 CMP W8, 0x36
	0x0323FD54 B.LS 0x323FDD4
	0x0323FD58 ANDS W31, W29, 0xFFFF
	0x0323FD5C B.EQ 0x323FE64
	0x0323FD60 LDR X8, [X31 + 0x10]
	0x0323FD64 CMP X8, X28
	0x0323FD68 B.LS 0x3240390
	0x0323FD6C STRH W29, [X28], #0x2
	0x0323FD70 B 0x323FDCC
	0x0323FD74 ANDS W31, W29, 0xFFFF
	0x0323FD78 B.EQ 0x323FDCC
	0x0323FD7C STR X26, [X31 + 0x8]
	0x0323FD80 ADRP X8, 0xEB4000
	0x0323FD84 LDR X8, [X8 + 0x618]
	0x0323FD88 MOVZ W1, 0x2
	0x0323FD8C MOV X22, X12
	0x0323FD90 LDR X0, [X8]
	0x0323FD94 BL 0x1C16D6C
	0x0323FD98 CBZ X0, 0x32403FC
	0x0323FD9C LDR W8, [X0 + 0x18]
	0x0323FDA0 MOV X26, X0
	0x0323FDA4 CBZ W19, 0x323FE28
	0x0323FDA8 CBZ W8, 0x32403F8
	0x0323FDAC LDR X19, [X31 + 0x18]
	0x0323FDB0 MOV W23, W27
	0x0323FDB4 UBFM W9, W29, 0x8, 0x1F
	0x0323FDB8 CMP W8, 0x1
	0x0323FDBC MOV W8, W29
	0x0323FDC0 STRB W9, [X26 + 0x20]
	0x0323FDC4 B.NE 0x323FE44
	0x0323FDC8 B 0x32403F8
	0x0323FDCC LDR X19, [X31 + 0x18]
	0x0323FDD0 B 0x323FF60
	0x0323FDD4 ANDS W31, W29, 0xFFFF
	0x0323FDD8 B.EQ 0x323FEAC
	0x0323FDDC STR X26, [X31 + 0x8]
	0x0323FDE0 ADRP X8, 0xEB4000
	0x0323FDE4 LDR X8, [X8 + 0x618]
	0x0323FDE8 MOVZ W1, 0x2
	0x0323FDEC MOV X23, X12
	0x0323FDF0 LDR X0, [X8]
	0x0323FDF4 BL 0x1C16D6C
	0x0323FDF8 CBZ X0, 0x32403FC
	0x0323FDFC LDR W8, [X0 + 0x18]
	0x0323FE00 MOV X22, X0
	0x0323FE04 CBZ W19, 0x323FEB8
	0x0323FE08 CBZ W8, 0x32403F8
	0x0323FE0C LDR X19, [X31 + 0x18]
	0x0323FE10 UBFM W9, W29, 0x8, 0x1F
	0x0323FE14 CMP W8, 0x1
	0x0323FE18 MOV W8, W29
	0x0323FE1C STRB W9, [X22 + 0x20]
	0x0323FE20 B.NE 0x323FED0
	0x0323FE24 B 0x32403F8
	0x0323FE28 CBZ W8, 0x32403F8
	0x0323FE2C LDR X19, [X31 + 0x18]
	0x0323FE30 CMP W8, 0x1

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0x119E000
	015 Move W8, [X19+1049]
	016 Move X21, X3
	017 Move W23, W2
	018 Move X20, X0
	019 Move [X31], X1
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0xEE4000
	025 Move X0, [X0+2256]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+1049], W8
	029 Move W22, W23
	030 ShiftRight W22, 31
	031 And W22, W22, 0x3FFFFFFF
	032 Move [X31+24], X31
	033 Move TEMP, X22
	034 And TEMP, TEMP, -2147483648
	035 Compare TEMP, -2147483648
	036 JumpIfEqual {309}
	037 Move X8, [X31]
	038 Add X23, X8, W23
	039 Compare X21, 0
	040 JumpIfEqual {70}
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Add W8, W22, 2
	043 Move X0, X21
	044 Move X1, X31
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CSEL not yet implemented."
	047 Call Encoder.get_InternalHasFallbackBuffer, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {72}
	052 Move X0, X21
	053 Move X1, X31
	054 Call Encoder.get_FallbackBuffer, X0
	055 Compare X0, 0
	056 JumpIfEqual {275}
	057 Move X8, [X0]
	058 Move X24, X0
	059 Move X9, [X8+440]
	060 Move X1, [X8+448]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X1, [X31]
	064 Move X0, X24
	065 Move X2, X23
	066 Move X3, X21
	067 Move W4, W31
	068 Move X5, X31
	069 Call EncoderFallbackBuffer.InternalInitialize, X0, X1, X2, X3, X4
	070 Move X24, X31
	071 Move W25, W31
	072 Move X24, X31
	073 Move [X31+8], X21
	074 Move [X31+16], W31
	075 Move X27, 0xEE4000
	076 Move X27, [X27+2256]
	077 Move X29, 0xD800
	078 Move X21, [X31]
	079 NotImplemented "Instruction MOVK not yet implemented."
	080 NotImplemented "Instruction MOVK not yet implemented."
	081 Subtract X28, X23, 6
	082 NotImplemented "Instruction MOVK not yet implemented."
	083 Move W19, W25
	084 Compare X24, 0
	085 JumpIfEqual {90}
	086 Move X0, X24
	087 Move X1, X31
	088 Call EncoderFallbackBuffer.InternalGetNextChar, X0
	089 And W26, W0, 0xFFFF
	090 Move W26, W31
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Compare W26, 0
	093 JumpIfEqual {160}
	094 Compare W26, 0
	095 JumpIfEqual {97}
	096 Add W22, W22, 2
	097 And X31, X21, 7
	098 And W31, W19, 0xFFFF
	099 Move W8, [X20+57]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X25, [X21]
	103 And X31, X25, -9223231297218904064
	104 And X8, X25, -576188069258921984
	105 Xor X8, X8, X29
	106 And X31, X8, 0xFFFF
	107 And X9, X8, 0xFFFFFFFF
	108 Compare X9, 0
	109 JumpIfEqual {118}
	110 Move X9, X8
	111 ShiftRight X9, 59
	112 And X9, X9, 0x7FFFFFFF
	113 Compare X9, 0
	114 JumpIfEqual {118}
	115 And X8, X8, 0xFFFFFFFFFFFF
	116 Compare X8, 0
	117 JumpIfNotEqual {128}
	118 Move X0, [X27]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {124}
	122 Call 0x1C17DFC
	123 Move X0, [X27]
	124 Move X8, [X0+184]
	125 And X9, X25, -287953294993589248
	126 Move X8, [X8+32]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Add X21, X21, 8
	129 NotImplemented "Instruction CMP not yet implemented."
	130 NotImplemented "Instruction LDRH not yet implemented."
	131 Move W8, W26
	132 ShiftRight W8, 11
	133 And W8, W8, 0x7FFFFFFF
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move W8, W26
	136 ShiftRight W8, 10
	137 And W8, W8, 0x7FFFFFFF
	138 NotImplemented "Instruction CMP not yet implemented."
	139 And W31, W19, 0xFFFF
	140 Move W25, W31
	141 Compare X24, 0
	142 JumpIfNotEqual {249}
	143 Move X0, [X31+8]
	144 Compare X0, 0
	145 JumpIfEqual {232}
	146 Move X1, X31
	147 Call Encoder.get_FallbackBuffer, X0
	148 And W31, W19, 0xFFFF
	149 Move W25, W31
	150 And W31, W19, 0xFFFF
	151 Move W25, W26
	152 Move X25, [X31+8]
	153 Compare X24, 0
	154 JumpIfNotEqual {226}
	155 Compare X25, 0
	156 JumpIfEqual {209}
	157 Move X0, X25
	158 Move X1, X31
	159 Call Encoder.get_FallbackBuffer, X0
	160 And W31, W19, 0xFFFF
	161 Move X25, [X31+8]
	162 Subtract W22, W22, 2
	163 Compare X25, 0
	164 JumpIfEqual {168}
	165 Move W8, [X25+48]
	166 Compare W8, 0
	167 JumpIfEqual {260}
	168 Move W8, [X31+16]
	169 Move TEMP, X8
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfEqual {276}
	173 Compare X24, 0
	174 JumpIfNotEqual {197}
	175 Compare X25, 0
	176 JumpIfEqual {180}
	177 Move X0, X25
	178 Move X1, X31
	179 Call Encoder.get_FallbackBuffer, X0
	180 Move X0, [X20+40]
	181 Compare X0, 0
	182 JumpIfEqual {275}
	183 Move X8, [X0]
	184 Move X9, [X8+376]
	185 Move X1, [X8+384]
	186 NotImplemented "Instruction BLR not yet implemented."
	187 Move X24, X0
	188 Compare X0, 0
	189 JumpIfEqual {275}
	190 Move X1, [X31]
	191 Move X0, X24
	192 Move X2, X23
	193 Move X3, X25
	194 Move W4, W31
	195 Move X5, X31
	196 Call EncoderFallbackBuffer.InternalInitialize, X0, X1, X2, X3, X4
	197 Move [X31+24], X21
	198 Move X8, [X24]
	199 Add X2, X31, 24
	200 Move X0, X24
	201 Move W1, W19
	202 Move X9, [X8+472]
	203 Move X3, [X8+480]
	204 NotImplemented "Instruction BLR not yet implemented."
	205 Move X21, [X31+24]
	206 Move W8, 1
	207 Move W25, W31
	208 Move [X31+16], W8
	209 Move X0, [X20+40]
	210 Compare X0, 0
	211 JumpIfEqual {275}
	212 Move X8, [X0]
	213 Move X9, [X8+376]
	214 Move X1, [X8+384]
	215 NotImplemented "Instruction BLR not yet implemented."
	216 Move X24, X0
	217 Compare X0, 0
	218 JumpIfEqual {275}
	219 Move X1, [X31]
	220 Move X0, X24
	221 Move X2, X23
	222 Move X3, X25
	223 Move W4, W31
	224 Move X5, X31
	225 Call EncoderFallbackBuffer.InternalInitialize, X0, X1, X2, X3, X4
	226 Subtract X8, X21, 2
	227 Move [X31+24], X8
	228 Move X8, [X24]
	229 Add X2, X31, 24
	230 Move X0, X24
	231 Move W1, W19
	232 Move X0, [X20+40]
	233 Compare X0, 0
	234 JumpIfEqual {275}
	235 Move X8, [X0]
	236 Move X9, [X8+376]
	237 Move X1, [X8+384]
	238 NotImplemented "Instruction BLR not yet implemented."
	239 Move X24, X0
	240 Compare X0, 0
	241 JumpIfEqual {275}
	242 Move X1, [X31]
	243 Move X3, [X31+8]
	244 Move X0, X24
	245 Move X2, X23
	246 Move W4, W31
	247 Move X5, X31
	248 Call EncoderFallbackBuffer.InternalInitialize, X0, X1, X2, X3, X4
	249 Move [X31+24], X21
	250 Move X8, [X24]
	251 Add X2, X31, 24
	252 Move X0, X24
	253 Move W1, W26
	254 Move X9, [X8+472]
	255 Move X3, [X8+480]
	256 NotImplemented "Instruction BLR not yet implemented."
	257 Move X21, [X31+24]
	258 Move W25, W31
	259 Subtract W22, W22, 2
	260 Move W0, W22
	261 Move X20, [X31+112]
	262 Move X19, [X31+120]
	263 Move X22, [X31+96]
	264 Move X21, [X31+104]
	265 Move X24, [X31+80]
	266 Move X23, [X31+88]
	267 Move X26, [X31+64]
	268 Move X25, [X31+72]
	269 Move X28, [X31+48]
	270 Move X27, [X31+56]
	271 Move X29, [X31+32]
	272 Move X30, [X31+40]
	273 Add X31, X31, 128
	274 Return X0
	275 Call 0x1C17F20
	276 NotImplemented "Instruction STRH not yet implemented."
	277 Move X0, 0xEB7000
	278 Move X0, [X0+368]
	279 Call 0x1C17D08
	280 Add X1, X31, 20
	281 Call 0x1C17E04
	282 Move X19, X0
	283 Move X0, 0xEE4000
	284 Move X0, [X0+2264]
	285 Call 0x1C17D08
	286 Move X1, X19
	287 Move X2, X31
	288 Call SR.Format, X0, X1
	289 Move X19, X0
	290 Move X0, 0xEBD000
	291 Move X0, [X0+1400]
	292 Call 0x1C17D08
	293 Call 0x1C17F10
	294 Move X20, X0
	295 Move X0, 0xEE4000
	296 Move X0, [X0+728]
	297 Call 0x1C17D08
	298 Move X2, X0
	299 Move X0, X20
	300 Move X1, X19
	301 Move X3, X31
	302 Call ArgumentException..ctor, X0, X1, X2
	303 Move X0, 0xEE4000
	304 Move X0, [X0+2272]
	305 Call 0x1C17D08
	306 Move X1, X0
	307 Move X0, X20
	308 Call 0x1C17DEC
	309 Move X0, 0xEBD000
	310 Move X0, [X0+1888]
	311 Call 0x1C17D08
	312 Call 0x1C17F10
	313 Move X19, X0
	314 Move X0, 0xEDD000
	315 Move X0, [X0+1608]
	316 Call 0x1C17D08
	317 Move X20, X0
	318 Move X0, 0xEE4000
	319 Move X0, [X0+1056]
	320 Call 0x1C17D08
	321 Move X2, X0
	322 Move X0, X19
	323 Move X1, X20
	324 Move X3, X31
	325 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	326 Move X0, 0xEE4000
	327 Move X0, [X0+2272]
	328 Call 0x1C17D08
	329 Move X1, X0
	330 Move X0, X19
	331 Call 0x1C17DEC
	332 Move X8, [X20]
	333 Move X0, X20
	334 Move X9, [X8+440]
	335 Move X1, [X8+448]
	336 NotImplemented "Instruction BLR not yet implemented."
	337 Move X20, X0
	338 Move X0, X21
	339 Call 0x19913C0
	340 Move X19, [X21+16]
	341 Move X0, X19
	342 Call 0x19913C0
	343 Move X0, X19
	344 Move X1, X31
	345 Call "il2cpp_vm_object_is_inst", X0
	346 Move X19, X0
	347 Move X0, 0xEE4000
	348 Move X0, [X0+1712]
	349 Call 0x1C17D08
	350 Move X1, X20
	351 Move X2, X19
	352 Move X3, X31
	353 Call SR.Format, X0, X1, X2
	354 Move X19, X0
	355 Move X0, 0xEBD000
	356 Move X0, [X0+1400]
	357 Call 0x1C17D08
	358 Call 0x1C17F10
	359 Move X1, X19
	360 Move X2, X31
	361 Move X20, X0
	362 Call ArgumentException..ctor, X0, X1

Method: System.Int32 GetBytes(System.Char* chars, System.Int32 charCount, System.Byte* bytes, System.Int32 byteCount, System.Text.EncoderNLS encoder)

Disassembly:
	0x0323FE34 STRB W29, [X26 + 0x20]
	0x0323FE38 B.EQ 0x32403F8
	0x0323FE3C MOV W23, W27
	0x0323FE40 UBFM W8, W29, 0x8, 0xF
	0x0323FE44 LDR X27, [X31 + 0x28]
	0x0323FE48 STRB W8, [X26 + 0x21]
	0x0323FE4C CBNZ X27, 0x323FF24
	0x0323FE50 LDR X0, [X31 + 0x20]
	0x0323FE54 CBZ X0, 0x323FEF0
	0x0323FE58 MOV X1, X31
	0x0323FE5C BL 0x33FC534
	0x0323FE60 B 0x323FF08
	0x0323FE64 STR X26, [X31 + 0x8]
	0x0323FE68 ADRP X8, 0xEB4000
	0x0323FE6C LDR X8, [X8 + 0x618]
	0x0323FE70 MOVZ W1, 0x2
	0x0323FE74 MOV X23, X12
	0x0323FE78 LDR X0, [X8]
	0x0323FE7C BL 0x1C16D6C
	0x0323FE80 CBZ X0, 0x32403FC
	0x0323FE84 LDR W8, [X0 + 0x18]
	0x0323FE88 MOV X26, X0
	0x0323FE8C CBZ W19, 0x323FF74
	0x0323FE90 CBZ W8, 0x32403F8
	0x0323FE94 LDR X19, [X31 + 0x18]
	0x0323FE98 UBFM W9, W27, 0x8, 0x1F
	0x0323FE9C CMP W8, 0x1
	0x0323FEA0 STRB W9, [X26 + 0x20]
	0x0323FEA4 B.NE 0x323FF8C
	0x0323FEA8 B 0x32403F8
	0x0323FEAC LDR X19, [X31 + 0x18]
	0x0323FEB0 MOV W29, W27
	0x0323FEB4 B 0x3240084
	0x0323FEB8 CBZ W8, 0x32403F8
	0x0323FEBC LDR X19, [X31 + 0x18]
	0x0323FEC0 CMP W8, 0x1
	0x0323FEC4 STRB W29, [X22 + 0x20]
	0x0323FEC8 B.EQ 0x32403F8
	0x0323FECC UBFM W8, W29, 0x8, 0xF
	0x0323FED0 LDR X26, [X31 + 0x28]
	0x0323FED4 STRB W8, [X22 + 0x21]
	0x0323FED8 CBNZ X26, 0x323FFE0
	0x0323FEDC LDR X0, [X31 + 0x20]
	0x0323FEE0 CBZ X0, 0x323FFAC
	0x0323FEE4 MOV X1, X31
	0x0323FEE8 BL 0x33FC534
	0x0323FEEC B 0x323FFC4
	0x0323FEF0 LDR X8, [X31 + 0x40]
	0x0323FEF4 LDR X0, [X8 + 0x30]
	0x0323FEF8 CBZ X0, 0x32403FC
	0x0323FEFC LDR X8, [X0]
	0x0323FF00 LDP X9, X1, [X8 + 0x178]
	0x0323FF04 BLR X9
	0x0323FF08 MOV X27, X0
	0x0323FF0C CBZ X0, 0x32403FC
	0x0323FF10 LDR X1, [X31 + 0x38]
	0x0323FF14 MOV X0, X27
	0x0323FF18 MOV X2, X19
	0x0323FF1C MOV X3, X31
	0x0323FF20 BL 0x33FC570
	0x0323FF24 STR X28, [X31 + 0x48]
	0x0323FF28 LDR X8, [X27]
	0x0323FF2C ADD X3, X31, 0x48
	0x0323FF30 MOV X0, X27
	0x0323FF34 MOV X1, X26
	0x0323FF38 LDP X9, X4, [X8 + 0x1A8]
	0x0323FF3C MOV X2, X25
	0x0323FF40 STR X27, [X31 + 0x28]
	0x0323FF44 BLR X9
	0x0323FF48 LDR X28, [X31 + 0x48]
	0x0323FF4C TBZ X0, 0x0, 0x324034C
	0x0323FF50 LDR X26, [X31 + 0x8]
	0x0323FF54 MOV X12, X22
	0x0323FF58 LDR X22, [X31 + 0x40]
	0x0323FF5C MOV W27, W23
	0x0323FF60 CMP X19, X28
	0x0323FF64 B.LS 0x3240320
	0x0323FF68 MOV W29, W31
	0x0323FF6C STRH W27, [X28], #0x2
	0x0323FF70 B 0x3240084
	0x0323FF74 CBZ W8, 0x32403F8
	0x0323FF78 LDR X19, [X31 + 0x18]
	0x0323FF7C CMP W8, 0x1
	0x0323FF80 STRB W27, [X26 + 0x20]
	0x0323FF84 B.EQ 0x32403F8
	0x0323FF88 UBFM W27, W27, 0x8, 0x1F
	0x0323FF8C STRB W27, [X26 + 0x21]
	0x0323FF90 LDR X27, [X31 + 0x28]
	0x0323FF94 CBNZ X27, 0x3240048
	0x0323FF98 LDR X0, [X31 + 0x20]
	0x0323FF9C CBZ X0, 0x3240014
	0x0323FFA0 MOV X1, X31
	0x0323FFA4 BL 0x33FC534
	0x0323FFA8 B 0x324002C
	0x0323FFAC LDR X8, [X31 + 0x40]
	0x0323FFB0 LDR X0, [X8 + 0x30]
	0x0323FFB4 CBZ X0, 0x32403FC
	0x0323FFB8 LDR X8, [X0]
	0x0323FFBC LDP X9, X1, [X8 + 0x178]
	0x0323FFC0 BLR X9
	0x0323FFC4 MOV X26, X0
	0x0323FFC8 CBZ X0, 0x32403FC
	0x0323FFCC LDR X1, [X31 + 0x38]
	0x0323FFD0 MOV X0, X26
	0x0323FFD4 MOV X2, X19
	0x0323FFD8 MOV X3, X31
	0x0323FFDC BL 0x33FC570
	0x0323FFE0 STR X28, [X31 + 0x48]
	0x0323FFE4 LDR X8, [X26]
	0x0323FFE8 ADD X3, X31, 0x48
	0x0323FFEC MOV X0, X26
	0x0323FFF0 MOV X1, X22
	0x0323FFF4 LDP X9, X4, [X8 + 0x1A8]
	0x0323FFF8 MOV X2, X25
	0x0323FFFC STR X26, [X31 + 0x28]
	0x03240000 BLR X9
	0x03240004 LDR X28, [X31 + 0x48]
	0x03240008 TBZ X0, 0x0, 0x324034C
	0x0324000C MOV W29, W27
	0x03240010 B 0x3240078
	0x03240014 LDR X8, [X31 + 0x40]
	0x03240018 LDR X0, [X8 + 0x30]
	0x0324001C CBZ X0, 0x32403FC
	0x03240020 LDR X8, [X0]
	0x03240024 LDP X9, X1, [X8 + 0x178]
	0x03240028 BLR X9
	0x0324002C MOV X27, X0
	0x03240030 CBZ X0, 0x32403FC
	0x03240034 LDR X1, [X31 + 0x38]
	0x03240038 MOV X0, X27
	0x0324003C MOV X2, X19
	0x03240040 MOV X3, X31
	0x03240044 BL 0x33FC570
	0x03240048 STR X28, [X31 + 0x48]
	0x0324004C LDR X8, [X27]
	0x03240050 ADD X3, X31, 0x48
	0x03240054 MOV X0, X27
	0x03240058 MOV X1, X26
	0x0324005C LDP X9, X4, [X8 + 0x1A8]
	0x03240060 MOV X2, X25
	0x03240064 STR X27, [X31 + 0x28]
	0x03240068 BLR X9
	0x0324006C LDR X28, [X31 + 0x48]
	0x03240070 TBZ X0, 0x0, 0x32403B8
	0x03240074 MOV W29, W31
	0x03240078 LDR X26, [X31 + 0x8]
	0x0324007C LDR X22, [X31 + 0x40]
	0x03240080 MOV X12, X23
	0x03240084 CMP X20, X25
	0x03240088 MOVN W27, 0x0
	0x0324008C B.HI 0x323FC0C
	0x03240090 MOVN W27, 0x0
	0x03240094 B 0x32400B8
	0x03240098 LDR X22, [X31 + 0x40]
	0x0324009C MOV X24, X31
	0x032400A0 MOV X28, X26
	0x032400A4 CBNZ X21, 0x32400C4
	0x032400A8 B 0x32400CC
	0x032400AC MOV W29, W31
	0x032400B0 MOVN W27, 0x0
	0x032400B4 MOV X25, X24
	0x032400B8 LDR X21, [X31 + 0x20]
	0x032400BC LDR X24, [X31 + 0x28]
	0x032400C0 CBZ X21, 0x32400CC
	0x032400C4 LDRB W8, [X21 + 0x28]
	0x032400C8 CBZ W8, 0x32402D8
	0x032400CC ANDS W31, W29, 0xFFFF
	0x032400D0 B.EQ 0x32401BC
	0x032400D4 ADRP X8, 0xEB3000
	0x032400D8 MOV X23, X19
	0x032400DC LDRB W19, [X22 + 0x39]
	0x032400E0 LDR X8, [X8 + 0x618]
	0x032400E4 MOVZ W1, 0x2
	0x032400E8 MOV X20, X26
	0x032400EC LDR X0, [X8]
	0x032400F0 BL 0x1C16D6C
	0x032400F4 CBZ X0, 0x32403FC
	0x032400F8 LDR W8, [X0 + 0x18]
	0x032400FC MOV X26, X0
	0x03240100 CBZ W19, 0x3240128
	0x03240104 CBZ W8, 0x32403F8
	0x03240108 LDR X22, [X31 + 0x40]
	0x0324010C UBFM W9, W29, 0x8, 0x1F
	0x03240110 CMP W8, 0x1
	0x03240114 MOV W8, W29
	0x03240118 MOV X19, X23
	0x0324011C STRB W9, [X26 + 0x20]
	0x03240120 B.NE 0x3240144
	0x03240124 B 0x32403F8
	0x03240128 CBZ W8, 0x32403F8
	0x0324012C CMP W8, 0x1
	0x03240130 STRB W29, [X26 + 0x20]
	0x03240134 B.EQ 0x32403F8
	0x03240138 LDR X22, [X31 + 0x40]
	0x0324013C MOV X19, X23
	0x03240140 UBFM W8, W29, 0x8, 0xF
	0x03240144 STRB W8, [X26 + 0x21]
	0x03240148 CBNZ X24, 0x3240190
	0x0324014C CBZ X21, 0x3240160
	0x03240150 MOV X0, X21
	0x03240154 MOV X1, X31
	0x03240158 BL 0x33FC534
	0x0324015C B 0x3240174
	0x03240160 LDR X0, [X22 + 0x30]
	0x03240164 CBZ X0, 0x32403FC
	0x03240168 LDR X8, [X0]
	0x0324016C LDP X9, X1, [X8 + 0x178]
	0x03240170 BLR X9
	0x03240174 MOV X24, X0
	0x03240178 CBZ X0, 0x32403FC
	0x0324017C LDR X1, [X31 + 0x38]
	0x03240180 MOV X0, X24
	0x03240184 MOV X2, X19
	0x03240188 MOV X3, X31
	0x0324018C BL 0x33FC570
	0x03240190 STR X28, [X31 + 0x48]
	0x03240194 LDR X8, [X24]
	0x03240198 ADD X3, X31, 0x48
	0x0324019C MOV X0, X24
	0x032401A0 MOV X1, X26
	0x032401A4 LDP X9, X4, [X8 + 0x1A8]
	0x032401A8 MOV X2, X25
	0x032401AC BLR X9
	0x032401B0 LDR X28, [X31 + 0x48]
	0x032401B4 TBZ X0, 0x0, 0x32401D8
	0x032401B8 MOV X26, X20
	0x032401BC TBNZ X27, 0x1F, 0x32402D0
	0x032401C0 CBNZ X24, 0x3240254
	0x032401C4 CBZ X21, 0x3240224
	0x032401C8 MOV X0, X21
	0x032401CC MOV X1, X31
	0x032401D0 BL 0x33FC534
	0x032401D4 B 0x3240238
	0x032401D8 CMP W27, 0x0
	0x032401DC MOVN X8, 0x2
	0x032401E0 CINC X8, X8, LT
	0x032401E4 MOV X0, X24
	0x032401E8 MOV X1, X31
	0x032401EC ADD X19, X8, X25
	0x032401F0 BL 0x33FC800
	0x032401F4 CMP X28, X20
	0x032401F8 CSET W2, EQ
	0x032401FC MOV X0, X22
	0x03240200 MOV X1, X21
	0x03240204 MOV X3, X31
	0x03240208 MOV X26, X20
	0x0324020C BL 0x3245300
	0x03240210 TBNZ X27, 0x1F, 0x324021C
	0x03240214 ADD X25, X19, 0x3
	0x03240218 B 0x32402D4
	0x0324021C ADD X25, X19, 0x2
	0x03240220 B 0x32402D4
	0x03240224 LDR X0, [X22 + 0x30]
	0x03240228 CBZ X0, 0x32403FC
	0x0324022C LDR X8, [X0]
	0x03240230 LDP X9, X1, [X8 + 0x178]
	0x03240234 BLR X9
	0x03240238 MOV X24, X0
	0x0324023C CBZ X0, 0x32403FC
	0x03240240 LDR X1, [X31 + 0x38]
	0x03240244 MOV X0, X24
	0x03240248 MOV X2, X19
	0x0324024C MOV X3, X31
	0x03240250 BL 0x33FC570
	0x03240254 ADRP X8, 0xEB3000
	0x03240258 LDR X8, [X8 + 0x618]
	0x0324025C MOVZ W1, 0x1
	0x03240260 STR X28, [X31 + 0x48]
	0x03240264 LDR X0, [X8]
	0x03240268 BL 0x1C16D6C
	0x0324026C CBZ X0, 0x32403FC
	0x03240270 LDR W8, [X0 + 0x18]
	0x03240274 MOV X1, X0
	0x03240278 CBZ W8, 0x32403F8
	0x0324027C STRB W27, [X1 + 0x20]
	0x03240280 LDR X8, [X24]
	0x03240284 ADD X3, X31, 0x48
	0x03240288 MOV X0, X24
	0x0324028C MOV X2, X25
	0x03240290 LDP X9, X4, [X8 + 0x1A8]
	0x03240294 BLR X9
	0x03240298 LDR X28, [X31 + 0x48]
	0x0324029C TBZ X0, 0x0, 0x32402AC
	0x032402A0 MOV W29, W31
	0x032402A4 MOVN W27, 0x0
	0x032402A8 B 0x32402D4
	0x032402AC MOV X0, X24
	0x032402B0 MOV X1, X31
	0x032402B4 BL 0x33FC800
	0x032402B8 CMP X28, X26
	0x032402BC CSET W2, EQ
	0x032402C0 MOV X0, X22
	0x032402C4 MOV X1, X21
	0x032402C8 MOV X3, X31
	0x032402CC BL 0x3245300
	0x032402D0 MOV W29, W31
	0x032402D4 CBZ X21, 0x32402F0
	0x032402D8 LDR X8, [X31 + 0x38]
	0x032402DC SUB W8, W25, W8
	0x032402E0 STR W8, [X21 + 0x2C]
	0x032402E4 LDR X8, [X31 + 0x30]
	0x032402E8 STRH W29, [X8 + 0x34]
	0x032402EC STR W27, [X21 + 0x30]
	0x032402F0 SUB X8, X28, X26
	0x032402F4 CMP X8, 0x0
	0x032402F8 LDP X20, X19, [X31 + 0xA0]
	0x032402FC LDP X22, X21, [X31 + 0x90]
	0x03240300 LDP X24, X23, [X31 + 0x80]
	0x03240304 LDP X26, X25, [X31 + 0x70]
	0x03240308 LDP X28, X27, [X31 + 0x60]
	0x0324030C LDP X29, X30, [X31 + 0x50]
	0x03240310 CINC X8, X8, LT
	0x03240314 UBFM X0, X8, 0x1, 0x3F
	0x03240318 ADD X31, X31, 0xB0
	0x0324031C RET
	0x03240320 LDR X21, [X31 + 0x20]
	0x03240324 CMP X28, X26
	0x03240328 CSET W2, EQ
	0x0324032C MOV X0, X22
	0x03240330 MOV X1, X21
	0x03240334 MOV X3, X31
	0x03240338 SUB X25, X24, 0x1
	0x0324033C BL 0x3245300
	0x03240340 MOV W29, W31
	0x03240344 MOVN W27, 0x0
	0x03240348 B 0x32400BC
	0x0324034C SUB X25, X24, 0x1
	0x03240350 LDR X24, [X31 + 0x28]
	0x03240354 MOV X1, X31
	0x03240358 MOV X0, X24
	0x0324035C BL 0x33FC800
	0x03240360 LDR X26, [X31 + 0x8]
	0x03240364 LDR X22, [X31 + 0x40]
	0x03240368 LDR X21, [X31 + 0x20]
	0x0324036C MOV X3, X31
	0x03240370 CMP X28, X26
	0x03240374 CSET W2, EQ
	0x03240378 MOV X0, X22
	0x0324037C MOV X1, X21
	0x03240380 BL 0x3245300
	0x03240384 MOVN W27, 0x0
	0x03240388 CBNZ X21, 0x32400C4
	0x0324038C B 0x32400CC
	0x03240390 LDR X21, [X31 + 0x20]
	0x03240394 CMP X28, X26
	0x03240398 CSET W2, EQ
	0x0324039C MOV X0, X22
	0x032403A0 MOV X1, X21
	0x032403A4 MOV X3, X31
	0x032403A8 SUB X25, X24, 0x1
	0x032403AC BL 0x3245300
	0x032403B0 LDR X19, [X31 + 0x18]
	0x032403B4 B 0x3240344
	0x032403B8 SUB X25, X24, 0x1
	0x032403BC LDR X24, [X31 + 0x28]
	0x032403C0 MOV X1, X31
	0x032403C4 MOV X0, X24
	0x032403C8 BL 0x33FC800
	0x032403CC LDR X26, [X31 + 0x8]
	0x032403D0 LDR X22, [X31 + 0x40]
	0x032403D4 LDR X21, [X31 + 0x20]
	0x032403D8 MOV X3, X31
	0x032403DC CMP X28, X26
	0x032403E0 CSET W2, EQ
	0x032403E4 MOV X0, X22
	0x032403E8 MOV X1, X21
	0x032403EC BL 0x3245300
	0x032403F0 MOV W29, W31
	0x032403F4 B 0x3240384
	0x032403F8 BL 0x1C16F28
	0x032403FC BL 0x1C16F20
	0x03240400 MOV X0, X21
	0x03240404 BL 0x1C171E0
	0x03240408 STP X30, X21, [X31 - 0x20]!
	0x0324040C STP X20, X19, [X31 + 0x10]
	0x03240410 ADRP X20, 0x119C000
	0x03240414 ADRP X21, 0xEE2000
	0x03240418 LDRB W8, [X20 + 0x41D]
	0x0324041C LDR X21, [X21 + 0x3F0]
	0x03240420 MOV X19, X0
	0x03240424 TBNZ X8, 0x0, 0x324043C
	0x03240428 ADRP X0, 0xEE2000
	0x0324042C LDR X0, [X0 + 0x3F0]
	0x03240430 BL 0x1C16CF4
	0x03240434 MOVZ W8, 0x1
	0x03240438 STRB W8, [X20 + 0x41D]
	0x0324043C LDR X0, [X21]
	0x03240440 BL 0x1C16F10
	0x03240444 MOV X1, X19
	0x03240448 MOV X20, X0
	0x0324044C BL 0x322EC5C
	0x03240450 MOV X0, X20
	0x03240454 LDP X20, X19, [X31 + 0x10]
	0x03240458 LDP X30, X21, [X31], #0x20
	0x0324045C RET
	0x03240460 STP X30, X21, [X31 - 0x20]!
	0x03240464 STP X20, X19, [X31 + 0x10]
	0x03240468 ADRP X20, 0x119C000
	0x0324046C ADRP X21, 0xEE2000
	0x03240470 LDRB W8, [X20 + 0x41E]
	0x03240474 LDR X21, [X21 + 0x8F0]
	0x03240478 MOV X19, X0
	0x0324047C TBNZ X8, 0x0, 0x3240494
	0x03240480 ADRP X0, 0xEE2000
	0x03240484 LDR X0, [X0 + 0x8F0]
	0x03240488 BL 0x1C16CF4
	0x0324048C MOVZ W8, 0x1
	0x03240490 STRB W8, [X20 + 0x41E]
	0x03240494 LDR X0, [X21]
	0x03240498 BL 0x1C16F10
	0x0324049C MOV X1, X19
	0x032404A0 MOV X2, X31
	0x032404A4 MOV X20, X0
	0x032404A8 BL 0x3240C2C
	0x032404AC MOV X0, X20
	0x032404B0 LDP X20, X19, [X31 + 0x10]
	0x032404B4 LDP X30, X21, [X31], #0x20
	0x032404B8 RET
	0x032404BC STR X30, [X31 - 0x20]!
	0x032404C0 STP X20, X19, [X31 + 0x10]
	0x032404C4 ADRP X20, 0x119C000
	0x032404C8 LDRB W8, [X20 + 0x41F]
	0x032404CC MOV X19, X0
	0x032404D0 TBNZ X8, 0x0, 0x32404F4
	0x032404D4 ADRP X0, 0xEBB000
	0x032404D8 LDR X0, [X0 + 0xCC8]
	0x032404DC BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X20, 0x119E000
	015 Move W8, [X20+1050]
	016 Move X19, X5
	017 Move W25, W4
	018 Move X21, X3
	019 Move W23, W2
	020 Move X28, X1
	021 Move X22, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0xEE4000
	027 Move X0, [X0+2256]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1050], W8
	031 Add X23, X28, W23
	032 Move [X31+40], X31
	033 Compare X19, 0
	034 JumpIfEqual {64}
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X0, X19
	037 Move X1, X31
	038 Call Encoder.get_InternalHasFallbackBuffer, X0
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {66}
	043 Move X0, X19
	044 Move X1, X31
	045 Call Encoder.get_FallbackBuffer, X0
	046 Compare X0, 0
	047 JumpIfEqual {407}
	048 Move X8, [X0]
	049 Move X24, X0
	050 Move X9, [X8+440]
	051 Move X1, [X8+448]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W8, [X19+49]
	055 Compare W8, 0
	056 JumpIfNotEqual {441}
	057 Move X0, X24
	058 Move X1, X28
	059 Move X2, X23
	060 Move X3, X19
	061 Move W4, W31
	062 Move X5, X31
	063 Call EncoderFallbackBuffer.InternalInitialize, X0, X1, X2, X3, X4
	064 Move X24, X31
	065 Move W26, W31
	066 Move X24, X31
	067 Move [X31+32], W31
	068 Move X20, 0xEE4000
	069 Move X20, [X20+2256]
	070 Add X29, X21, W25
	071 Move X27, X21
	072 Move X21, 0xD800
	073 NotImplemented "Instruction MOVK not yet implemented."
	074 NotImplemented "Instruction MOVK not yet implemented."
	075 NotImplemented "Instruction MOVK not yet implemented."
	076 Move [X31+16], X27
	077 Move [X31+24], X28
	078 Move W25, W26
	079 Compare X24, 0
	080 JumpIfEqual {85}
	081 Move X0, X24
	082 Move X1, X31
	083 Call EncoderFallbackBuffer.InternalGetNextChar, X0
	084 And W26, W0, 0xFFFF
	085 Move W26, W31
	086 Subtract X8, X23, X28
	087 Compare W26, 0
	088 JumpIfEqual {244}
	089 Compare W26, 0
	090 JumpIfNotEqual {195}
	091 Move W9, [X22+57]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 And X31, X28, 7
	094 And W31, W25, 0xFFFF
	095 Move TEMP, X27
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {194}
	099 Xor W9, W28, W27
	100 And X9, X9, 7
	101 Compare X9, 0
	102 JumpIfEqual {194}
	103 Subtract X9, X29, X27
	104 NotImplemented "Instruction CMP not yet implemented."
	105 NotImplemented "Instruction SBFM not yet implemented."
	106 NotImplemented "Instruction CINC not yet implemented."
	107 NotImplemented "Instruction SBFM not yet implemented."
	108 NotImplemented "Instruction CMP not yet implemented."
	109 NotImplemented "Instruction CSEL not yet implemented."
	110 Add X8, X28, X8
	111 Subtract X8, X8, 2
	112 NotImplemented "Instruction CMP not yet implemented."
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Move W10, W9
	115 ShiftRight W10, 11
	116 And W10, W10, 0x7FFFFFFF
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move W10, W9
	119 ShiftRight W10, 10
	120 And W10, W10, 0x7FFFFFFF
	121 NotImplemented "Instruction CMP not yet implemented."
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move W10, W10
	124 ShiftRight W10, 10
	125 And W10, W10, 0x7FFFFFFF
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X10, X28
	128 NotImplemented "Instruction LDRH not yet implemented."
	129 Move W11, W11
	130 ShiftRight W11, 11
	131 And W11, W11, 0x7FFFFFFF
	132 NotImplemented "Instruction CMP not yet implemented."
	133 NotImplemented "Instruction STRH not yet implemented."
	134 Move X28, X10
	135 NotImplemented "Instruction STRH not yet implemented."
	136 NotImplemented "Instruction LDRH not yet implemented."
	137 Add X28, X28, 4
	138 NotImplemented "Instruction STRH not yet implemented."
	139 Add X27, X27, 4
	140 And W31, W25, 0xFFFF
	141 And X9, X27, 7
	142 Compare X9, 0
	143 JumpIfNotEqual {94}
	144 Subtract X9, X29, X27
	145 NotImplemented "Instruction CMP not yet implemented."
	146 NotImplemented "Instruction SBFM not yet implemented."
	147 NotImplemented "Instruction CINC not yet implemented."
	148 NotImplemented "Instruction SBFM not yet implemented."
	149 NotImplemented "Instruction CMP not yet implemented."
	150 NotImplemented "Instruction CSEL not yet implemented."
	151 Add X8, X28, X8
	152 Subtract X26, X8, 6
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move [X31+8], X19
	155 Move X19, X20
	156 Move X20, [X28]
	157 And X31, X20, -9223231297218904064
	158 And X8, X20, -576188069258921984
	159 Xor X8, X8, X21
	160 And X31, X8, 0xFFFF
	161 And X9, X8, 0xFFFFFFFF
	162 Compare X9, 0
	163 JumpIfEqual {172}
	164 Move X9, X8
	165 ShiftRight X9, 59
	166 And X9, X9, 0x7FFFFFFF
	167 Compare X9, 0
	168 JumpIfEqual {172}
	169 And X8, X8, 0xFFFFFFFFFFFF
	170 Compare X8, 0
	171 JumpIfNotEqual {188}
	172 Move X0, [X19]
	173 Move W8, [X0+224]
	174 Compare W8, 0
	175 JumpIfNotEqual {179}
	176 Move X21, X19
	177 Call 0x1C17DFC
	178 Move X0, [X19]
	179 Move X8, [X0+184]
	180 Move X21, 0xD800
	181 NotImplemented "Instruction MOVK not yet implemented."
	182 And X9, X20, -287953294993589248
	183 Move X8, [X8+32]
	184 NotImplemented "Instruction MOVK not yet implemented."
	185 NotImplemented "Instruction MOVK not yet implemented."
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move X20, [X28]
	188 Add X28, X28, 8
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move [X27+8], X20
	191 Move X20, X19
	192 Move X19, [X31+8]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 NotImplemented "Instruction LDRH not yet implemented."
	195 Move W8, W26
	196 ShiftRight W8, 11
	197 And W8, W8, 0x7FFFFFFF
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move W8, W26
	200 ShiftRight W8, 10
	201 And W8, W8, 0x7FFFFFFF
	202 NotImplemented "Instruction CMP not yet implemented."
	203 And W31, W25, 0xFFFF
	204 Add X8, X27, 3
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move W8, [X22+57]
	207 Compare W8, 0
	208 JumpIfEqual {222}
	209 Move W8, W25
	210 ShiftRight W8, 8
	211 And W8, W8, 0x7FFFFFFF
	212 Move [X27], W8
	213 And W31, W25, 0xFFFF
	214 And W31, W25, 0xFFFF
	215 Compare X24, 0
	216 JumpIfNotEqual {315}
	217 Compare X19, 0
	218 JumpIfEqual {298}
	219 Move X0, X19
	220 Move X1, X31
	221 Call Encoder.get_FallbackBuffer, X0
	222 Move [X27], W25
	223 Move W25, W25
	224 ShiftRight W25, 8
	225 And W25, W25, 0x7FFF
	226 Add X8, X27, 2
	227 Move [X27+1], W25
	228 Move X27, X8
	229 Add X8, X27, 1
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Move W9, [X22+57]
	232 Move W8, W26
	233 ShiftRight W8, 8
	234 And W8, W8, 0x7FFFFFFF
	235 Compare W9, 0
	236 JumpIfEqual {238}
	237 Move [X27], W8
	238 Move [X27], W26
	239 Move W26, W8
	240 Add X8, X27, 2
	241 Move [X27+1], W26
	242 Move X27, X8
	243 Move W26, W31
	244 And W31, W25, 0xFFFF
	245 Compare X19, 0
	246 JumpIfEqual {250}
	247 Move W8, [X19+48]
	248 Compare W8, 0
	249 JumpIfEqual {406}
	250 Move W8, [X31+32]
	251 Move TEMP, X8
	252 And TEMP, TEMP, 1
	253 Compare TEMP, 1
	254 JumpIfEqual {408}
	255 Compare X24, 0
	256 JumpIfNotEqual {286}
	257 Compare X19, 0
	258 JumpIfEqual {269}
	259 Move X0, X19
	260 Move X1, X31
	261 Call Encoder.get_FallbackBuffer, X0
	262 Compare X24, 0
	263 JumpIfNotEqual {338}
	264 Compare X19, 0
	265 JumpIfEqual {321}
	266 Move X0, X19
	267 Move X1, X31
	268 Call Encoder.get_FallbackBuffer, X0
	269 Move X0, [X22+40]
	270 Compare X0, 0
	271 JumpIfEqual {407}
	272 Move X8, [X0]
	273 Move X9, [X8+376]
	274 Move X1, [X8+384]
	275 NotImplemented "Instruction BLR not yet implemented."
	276 Move X24, X0
	277 Compare X0, 0
	278 JumpIfEqual {407}
	279 Move X1, [X31+24]
	280 Move W4, 1
	281 Move X0, X24
	282 Move X2, X23
	283 Move X3, X19
	284 Move X5, X31
	285 Call EncoderFallbackBuffer.InternalInitialize, X0, X1, X2, X3, X4
	286 Move [X31+40], X28
	287 Move X8, [X24]
	288 Add X2, X31, 40
	289 Move X0, X24
	290 Move W1, W25
	291 Move X9, [X8+472]
	292 Move X3, [X8+480]
	293 NotImplemented "Instruction BLR not yet implemented."
	294 Move X28, [X31+40]
	295 Move W8, 1
	296 Move W26, W31
	297 Move [X31+32], W8
	298 Move X0, [X22+40]
	299 Compare X0, 0
	300 JumpIfEqual {407}
	301 Move X8, [X0]
	302 Move X9, [X8+376]
	303 Move X1, [X8+384]
	304 NotImplemented "Instruction BLR not yet implemented."
	305 Move X24, X0
	306 Compare X0, 0
	307 JumpIfEqual {407}
	308 Move X1, [X31+24]
	309 Move W4, 1
	310 Move X0, X24
	311 Move X2, X23
	312 Move X3, X19
	313 Move X5, X31
	314 Call EncoderFallbackBuffer.InternalInitialize, X0, X1, X2, X3, X4
	315 Subtract X8, X28, 2
	316 Move [X31+40], X8
	317 Move X8, [X24]
	318 Add X2, X31, 40
	319 Move X0, X24
	320 Move W1, W25
	321 Move X0, [X22+40]
	322 Compare X0, 0
	323 JumpIfEqual {407}
	324 Move X8, [X0]
	325 Move X9, [X8+376]
	326 Move X1, [X8+384]
	327 NotImplemented "Instruction BLR not yet implemented."
	328 Move X24, X0
	329 Compare X0, 0
	330 JumpIfEqual {407}
	331 Move X1, [X31+24]
	332 Move W4, 1
	333 Move X0, X24
	334 Move X2, X23
	335 Move X3, X19
	336 Move X5, X31
	337 Call EncoderFallbackBuffer.InternalInitialize, X0, X1, X2, X3, X4
	338 Move [X31+40], X28
	339 Move X8, [X24]
	340 Add X2, X31, 40
	341 Move X0, X24
	342 Move W1, W26
	343 Move X9, [X8+472]
	344 Move X3, [X8+480]
	345 NotImplemented "Instruction BLR not yet implemented."
	346 Move X28, [X31+40]
	347 Compare X24, 0
	348 JumpIfEqual {352}
	349 Move W8, [X24+42]
	350 Compare W8, 0
	351 JumpIfNotEqual {363}
	352 Subtract X28, X28, 2
	353 Compare X24, 0
	354 JumpIfEqual {368}
	355 Move W8, [X24+42]
	356 Compare W8, 0
	357 JumpIfEqual {368}
	358 Move X8, [X24]
	359 Move X0, X24
	360 Move X9, [X8+424]
	361 Move X1, [X8+432]
	362 NotImplemented "Instruction BLR not yet implemented."
	363 Move X8, [X24]
	364 Move X0, X24
	365 Move X9, [X8+424]
	366 Move X1, [X8+432]
	367 NotImplemented "Instruction BLR not yet implemented."
	368 Subtract X28, X28, 4
	369 Move X20, [X31+16]
	370 Move X0, X22
	371 Move X1, X19
	372 Move X3, X31
	373 NotImplemented "Instruction CMP not yet implemented."
	374 NotImplemented "Instruction CSET not yet implemented."
	375 Call Encoding.ThrowBytesOverflow, X0, X1, X2
	376 Compare X19, 0
	377 JumpIfEqual {388}
	378 Move W25, W31
	379 Move X8, [X31+24]
	380 NotImplemented "Instruction STRH not yet implemented."
	381 Subtract X8, X28, X8
	382 NotImplemented "Instruction CMP not yet implemented."
	383 NotImplemented "Instruction CINC not yet implemented."
	384 Move X8, X8
	385 ShiftRight X8, 1
	386 And X8, X8, 0x7FFFFFFF
	387 Move [X19+52], W8
	388 Subtract W0, W27, W20
	389 Move X20, [X31+128]
	390 Move X19, [X31+136]
	391 Move X22, [X31+112]
	392 Move X21, [X31+120]
	393 Move X24, [X31+96]
	394 Move X23, [X31+104]
	395 Move X26, [X31+80]
	396 Move X25, [X31+88]
	397 Move X28, [X31+64]
	398 Move X27, [X31+72]
	399 Move X29, [X31+48]
	400 Move X30, [X31+56]
	401 Add X31, X31, 144
	402 Return X0
	403 Move X20, [X31+16]
	404 Compare X19, 0
	405 JumpIfNotEqual {378}
	406 Move X20, [X31+16]
	407 Call 0x1C17F20
	408 NotImplemented "Instruction STRH not yet implemented."
	409 Move X0, 0xEB6000
	410 Move X0, [X0+368]
	411 Call 0x1C17D08
	412 Add X1, X31, 36
	413 Call 0x1C17E04
	414 Move X19, X0
	415 Move X0, 0xEE3000
	416 Move X0, [X0+2264]
	417 Call 0x1C17D08
	418 Move X1, X19
	419 Move X2, X31
	420 Call SR.Format, X0, X1
	421 Move X19, X0
	422 Move X0, 0xEBC000
	423 Move X0, [X0+1400]
	424 Call 0x1C17D08
	425 Call 0x1C17F10
	426 Move X20, X0
	427 Move X0, 0xEE3000
	428 Move X0, [X0+728]
	429 Call 0x1C17D08
	430 Move X2, X0
	431 Move X0, X20
	432 Move X1, X19
	433 Move X3, X31
	434 Call ArgumentException..ctor, X0, X1, X2
	435 Move X0, 0xEE3000
	436 Move X0, [X0+2280]
	437 Call 0x1C17D08
	438 Move X1, X0
	439 Move X0, X20
	440 Call 0x1C17DEC
	441 Move X8, [X22]
	442 Move X0, X22
	443 Move X9, [X8+440]
	444 Move X1, [X8+448]
	445 NotImplemented "Instruction BLR not yet implemented."
	446 Move X20, X0
	447 Move X0, X19
	448 Call 0x19913C0
	449 Move X19, [X19+16]
	450 Move X0, X19
	451 Call 0x19913C0
	452 Move X0, X19
	453 Move X1, X31
	454 Call "il2cpp_vm_object_is_inst", X0
	455 Move X19, X0
	456 Move X0, 0xEE3000
	457 Move X0, [X0+1712]
	458 Call 0x1C17D08
	459 Move X1, X20
	460 Move X2, X19
	461 Move X3, X31
	462 Call SR.Format, X0, X1, X2
	463 Move X19, X0
	464 Move X0, 0xEBC000
	465 Move X0, [X0+1400]
	466 Call 0x1C17D08
	467 Call 0x1C17F10
	468 Move X1, X19
	469 Move X2, X31
	470 Move X20, X0
	471 Call ArgumentException..ctor, X0, X1

Method: System.Int32 GetCharCount(System.Byte* bytes, System.Int32 count, System.Text.DecoderNLS baseDecoder)

Disassembly:
	0x032404E0 ADRP X0, 0xEB3000
	0x032404E4 LDR X0, [X0 + 0x618]
	0x032404E8 BL 0x1C16CF4
	0x032404EC MOVZ W8, 0x1
	0x032404F0 STRB W8, [X20 + 0x41F]
	0x032404F4 LDRB W8, [X19 + 0x3A]
	0x032404F8 CBZ W8, 0x324053C
	0x032404FC ADRP X8, 0xEB3000
	0x03240500 LDR X8, [X8 + 0x618]
	0x03240504 LDRB W19, [X19 + 0x39]
	0x03240508 MOVZ W1, 0x2
	0x0324050C LDR X0, [X8]
	0x03240510 BL 0x1C16D6C
	0x03240514 CBZ X0, 0x32405C4
	0x03240518 LDR W8, [X0 + 0x18]
	0x0324051C CBZ W19, 0x3240598
	0x03240520 CBZ W8, 0x32405C0
	0x03240524 MOVZ W9, 0xFE
	0x03240528 CMP W8, 0x1
	0x0324052C STRB W9, [X0 + 0x20]
	0x03240530 B.EQ 0x32405C0
	0x03240534 MOVZ W8, 0xFF
	0x03240538 B 0x32405B0
	0x0324053C ADRP X8, 0xEBB000
	0x03240540 LDR X8, [X8 + 0xCC8]
	0x03240544 LDR X19, [X8]
	0x03240548 LDR X8, [X19 + 0x38]
	0x0324054C CBNZ X8, 0x324055C
	0x03240550 MOV X0, X19
	0x03240554 BL 0x1C5C6E0
	0x03240558 LDR X8, [X19 + 0x38]
	0x0324055C LDR X0, [X8 + 0x10]
	0x03240560 LDRB W8, [X0 + 0x135]
	0x03240564 TBNZ X8, 0x0, 0x324056C
	0x03240568 BL 0x1C5C684
	0x0324056C LDR W8, [X0 + 0xE0]
	0x03240570 CBNZ W8, 0x3240578
	0x03240574 BL 0x1C16DFC
	0x03240578 LDR X8, [X19 + 0x38]
	0x0324057C LDR X0, [X8 + 0x10]
	0x03240580 LDRB W8, [X0 + 0x135]
	0x03240584 TBNZ X8, 0x0, 0x324058C
	0x03240588 BL 0x1C5C684
	0x0324058C LDR X8, [X0 + 0xB8]
	0x03240590 LDR X0, [X8]
	0x03240594 B 0x32405B4
	0x03240598 CBZ W8, 0x32405C0
	0x0324059C MOVZ W9, 0xFF
	0x032405A0 CMP W8, 0x1
	0x032405A4 STRB W9, [X0 + 0x20]
	0x032405A8 B.EQ 0x32405C0
	0x032405AC MOVZ W8, 0xFE
	0x032405B0 STRB W8, [X0 + 0x21]
	0x032405B4 LDP X20, X19, [X31 + 0x10]
	0x032405B8 LDR X30, [X31], #0x20
	0x032405BC RET
	0x032405C0 BL 0x1C16F28
	0x032405C4 BL 0x1C16F20
	0x032405C8 STR X30, [X31 - 0x30]!
	0x032405CC STP X22, X21, [X31 + 0x10]
	0x032405D0 STP X20, X19, [X31 + 0x20]
	0x032405D4 ADRP X22, 0x119C000
	0x032405D8 ADRP X20, 0xEE2000
	0x032405DC ADRP X21, 0xEB3000
	0x032405E0 LDRB W8, [X22 + 0x420]
	0x032405E4 LDR X20, [X20 + 0x8F8]
	0x032405E8 LDR X21, [X21 + 0x6C0]
	0x032405EC MOV X19, X0
	0x032405F0 TBNZ X8, 0x0, 0x3240638
	0x032405F4 ADRP X0, 0xEBB000
	0x032405F8 LDR X0, [X0 + 0xCC8]
	0x032405FC BL 0x1C16CF4
	0x03240600 ADRP X0, 0xEE2000
	0x03240604 LDR X0, [X0 + 0x6F0]
	0x03240608 BL 0x1C16CF4
	0x0324060C ADRP X0, 0xEB3000
	0x03240610 LDR X0, [X0 + 0x6C0]
	0x03240614 BL 0x1C16CF4
	0x03240618 ADRP X0, 0xEE2000
	0x0324061C LDR X0, [X0 + 0x8F8]
	0x03240620 BL 0x1C16CF4
	0x03240624 ADRP X0, 0xEE2000
	0x03240628 LDR X0, [X0 + 0x8D0]
	0x0324062C BL 0x1C16CF4
	0x03240630 MOVZ W8, 0x1
	0x03240634 STRB W8, [X22 + 0x420]
	0x03240638 MOV X0, X19
	0x0324063C MOV X1, X31
	0x03240640 BL 0x33BE520
	0x03240644 LDR X8, [X21]
	0x03240648 LDR X21, [X20]
	0x0324064C MOV X20, X0
	0x03240650 LDR W9, [X8 + 0xE0]
	0x03240654 CBNZ W9, 0x3240660
	0x03240658 MOV X0, X8
	0x0324065C BL 0x1C16DFC
	0x03240660 ADRP X22, 0xEE2000
	0x03240664 LDR X22, [X22 + 0x6F0]
	0x03240668 MOV X0, X21
	0x0324066C MOV X1, X31
	0x03240670 BL 0x338C698
	0x03240674 MOV X1, X0
	0x03240678 MOV X0, X20
	0x0324067C MOV X2, X31
	0x03240680 BL 0x3395F0C
	0x03240684 TBZ X0, 0x0, 0x324069C
	0x03240688 LDR X8, [X19]
	0x0324068C MOV X0, X19
	0x03240690 LDP X9, X1, [X8 + 0x198]
	0x03240694 BLR X9
	0x03240698 B 0x3240734
	0x0324069C LDRB W8, [X19 + 0x3A]
	0x032406A0 CBZ W8, 0x32406D4
	0x032406A4 ADRP X20, 0xEE2000
	0x032406A8 LDR X20, [X20 + 0x8D0]
	0x032406AC LDRB W19, [X19 + 0x39]
	0x032406B0 LDR X0, [X20]
	0x032406B4 LDR W8, [X0 + 0xE0]
	0x032406B8 CBNZ W8, 0x32406C4
	0x032406BC BL 0x1C16DFC
	0x032406C0 LDR X0, [X20]
	0x032406C4 LDR X8, [X0 + 0xB8]
	0x032406C8 CBZ W19, 0x3240730
	0x032406CC LDR X0, [X8 + 0x10]
	0x032406D0 B 0x3240734
	0x032406D4 ADRP X8, 0xEBB000
	0x032406D8 LDR X8, [X8 + 0xCC8]
	0x032406DC LDR X19, [X8]
	0x032406E0 LDR X8, [X19 + 0x38]
	0x032406E4 CBNZ X8, 0x32406F4
	0x032406E8 MOV X0, X19
	0x032406EC BL 0x1C5C6E0
	0x032406F0 LDR X8, [X19 + 0x38]
	0x032406F4 LDR X0, [X8 + 0x10]
	0x032406F8 LDRB W8, [X0 + 0x135]
	0x032406FC TBNZ X8, 0x0, 0x3240704
	0x03240700 BL 0x1C5C684
	0x03240704 LDR W8, [X0 + 0xE0]
	0x03240708 CBNZ W8, 0x3240710
	0x0324070C BL 0x1C16DFC
	0x03240710 LDR X8, [X19 + 0x38]
	0x03240714 LDR X0, [X8 + 0x10]
	0x03240718 LDRB W8, [X0 + 0x135]
	0x0324071C TBNZ X8, 0x0, 0x3240724
	0x03240720 BL 0x1C5C684
	0x03240724 LDR X8, [X0 + 0xB8]
	0x03240728 LDR X0, [X8]
	0x0324072C B 0x3240734
	0x03240730 LDR X0, [X8 + 0x18]
	0x03240734 LDR X1, [X22]
	0x03240738 LDP X20, X19, [X31 + 0x20]
	0x0324073C LDP X22, X21, [X31 + 0x10]
	0x03240740 LDR X30, [X31], #0x30
	0x03240744 B 0x25BEADC
	0x03240748 STR X30, [X31 - 0x20]!
	0x0324074C STP X20, X19, [X31 + 0x10]
	0x03240750 TBNZ X1, 0x1F, 0x32407BC
	0x03240754 MOV X19, X0
	0x03240758 LDR X0, [X0 + 0x28]
	0x0324075C CBZ X0, 0x32407B8
	0x03240760 LDR X8, [X0]
	0x03240764 MOV W10, W1
	0x03240768 ADD X20, X10, 0x1
	0x0324076C LDP X9, X8, [X8 + 0x188]
	0x03240770 MOV X1, X8
	0x03240774 BLR X9
	0x03240778 CMP W0, 0x2
	0x0324077C B.LT 0x324079C
	0x03240780 LDR X0, [X19 + 0x28]
	0x03240784 CBZ X0, 0x32407B8
	0x03240788 LDR X8, [X0]
	0x0324078C LDP X9, X1, [X8 + 0x188]
	0x03240790 BLR X9
	0x03240794 SXTW X8, W0
	0x03240798 MUL X20, X20, X8
	0x0324079C MOVZ W8, 0x40000000
	0x032407A0 CMP X20, X8
	0x032407A4 B.GE 0x32407EC
	0x032407A8 UBFM W0, W20, 0x1F, 0x1E
	0x032407AC LDP X20, X19, [X31 + 0x10]
	0x032407B0 LDR X30, [X31], #0x20
	0x032407B4 RET
	0x032407B8 BL 0x1C16F20
	0x032407BC ADRP X0, 0xEBB000
	0x032407C0 LDR X0, [X0 + 0x760]
	0x032407C4 BL 0x1C16D08
	0x032407C8 BL 0x1C16F10
	0x032407CC MOV X19, X0
	0x032407D0 ADRP X0, 0xEE2000
	0x032407D4 LDR X0, [X0 + 0x310]
	0x032407D8 BL 0x1C16D08
	0x032407DC MOV X20, X0
	0x032407E0 ADRP X0, 0xEDB000
	0x032407E4 LDR X0, [X0 + 0x670]
	0x032407E8 B 0x3240818
	0x032407EC ADRP X0, 0xEBB000
	0x032407F0 LDR X0, [X0 + 0x760]
	0x032407F4 BL 0x1C16D08
	0x032407F8 BL 0x1C16F10
	0x032407FC MOV X19, X0
	0x03240800 ADRP X0, 0xEE2000
	0x03240804 LDR X0, [X0 + 0x310]
	0x03240808 BL 0x1C16D08
	0x0324080C MOV X20, X0
	0x03240810 ADRP X0, 0xEE2000
	0x03240814 LDR X0, [X0 + 0x420]
	0x03240818 BL 0x1C16D08
	0x0324081C MOV X2, X0
	0x03240820 MOV X0, X19
	0x03240824 MOV X1, X20
	0x03240828 MOV X3, X31
	0x0324082C BL 0x3311888
	0x03240830 ADRP X0, 0xEE2000
	0x03240834 LDR X0, [X0 + 0x900]
	0x03240838 BL 0x1C16D08
	0x0324083C MOV X1, X0
	0x03240840 MOV X0, X19
	0x03240844 BL 0x1C16DEC
	0x03240848 STR X30, [X31 - 0x20]!
	0x0324084C STP X20, X19, [X31 + 0x10]
	0x03240850 TBNZ X1, 0x1F, 0x32408C0
	0x03240854 MOV X20, X0
	0x03240858 LDR X0, [X0 + 0x30]
	0x0324085C CBZ X0, 0x32408BC
	0x03240860 LDR X8, [X0]
	0x03240864 AND W10, W1, 0x1
	0x03240868 ADD W10, W10, W1, 0x1, LSR
	0x0324086C ADD W19, W10, 0x1
	0x03240870 LDP X9, X8, [X8 + 0x188]
	0x03240874 MOV X1, X8
	0x03240878 BLR X9
	0x0324087C CMP W0, 0x2
	0x03240880 B.LT 0x32408AC
	0x03240884 LDR X0, [X20 + 0x30]
	0x03240888 CBZ X0, 0x32408BC
	0x0324088C LDR X8, [X0]
	0x03240890 LDP X9, X1, [X8 + 0x188]
	0x03240894 BLR X9
	0x03240898 SXTW X8, W0
	0x0324089C MUL X19, X19, X8
	0x032408A0 MOVZ W8, 0x80000000
	0x032408A4 CMP X19, X8
	0x032408A8 B.GE 0x32408F0
	0x032408AC MOV W0, W19
	0x032408B0 LDP X20, X19, [X31 + 0x10]
	0x032408B4 LDR X30, [X31], #0x20
	0x032408B8 RET
	0x032408BC BL 0x1C16F20
	0x032408C0 ADRP X0, 0xEBB000
	0x032408C4 LDR X0, [X0 + 0x760]
	0x032408C8 BL 0x1C16D08
	0x032408CC BL 0x1C16F10
	0x032408D0 MOV X19, X0
	0x032408D4 ADRP X0, 0xEE2000
	0x032408D8 LDR X0, [X0 + 0x328]
	0x032408DC BL 0x1C16D08
	0x032408E0 MOV X20, X0
	0x032408E4 ADRP X0, 0xEDB000
	0x032408E8 LDR X0, [X0 + 0x670]
	0x032408EC B 0x324091C
	0x032408F0 ADRP X0, 0xEBB000
	0x032408F4 LDR X0, [X0 + 0x760]
	0x032408F8 BL 0x1C16D08
	0x032408FC BL 0x1C16F10
	0x03240900 MOV X19, X0
	0x03240904 ADRP X0, 0xEE2000
	0x03240908 LDR X0, [X0 + 0x328]
	0x0324090C BL 0x1C16D08
	0x03240910 MOV X20, X0
	0x03240914 ADRP X0, 0xEE2000
	0x03240918 LDR X0, [X0 + 0x430]
	0x0324091C BL 0x1C16D08
	0x03240920 MOV X2, X0
	0x03240924 MOV X0, X19
	0x03240928 MOV X1, X20
	0x0324092C MOV X3, X31
	0x03240930 BL 0x3311888
	0x03240934 ADRP X0, 0xEE2000
	0x03240938 LDR X0, [X0 + 0x908]
	0x0324093C BL 0x1C16D08
	0x03240940 MOV X1, X0
	0x03240944 MOV X0, X19
	0x03240948 BL 0x1C16DEC
	0x0324094C STP X30, X21, [X31 - 0x20]!
	0x03240950 STP X20, X19, [X31 + 0x10]
	0x03240954 ADRP X21, 0x119C000
	0x03240958 LDRB W8, [X21 + 0x421]
	0x0324095C MOV X20, X1
	0x03240960 MOV X19, X0
	0x03240964 TBNZ X8, 0x0, 0x324097C
	0x03240968 ADRP X0, 0xEE2000
	0x0324096C LDR X0, [X0 + 0x8D0]
	0x03240970 BL 0x1C16CF4
	0x03240974 MOVZ W8, 0x1
	0x03240978 STRB W8, [X21 + 0x421]
	0x0324097C CBZ X20, 0x3240A4C
	0x03240980 ADRP X8, 0xEE2000
	0x03240984 LDR X8, [X8 + 0x8D0]
	0x03240988 LDR X9, [X20]
	0x0324098C LDR X8, [X8]
	0x03240990 LDRB W11, [X9 + 0x130]
	0x03240994 LDRB W10, [X8 + 0x130]
	0x03240998 CMP W11, W10
	0x0324099C B.CC 0x3240A4C
	0x032409A0 LDR X9, [X9 + 0xC8]
	0x032409A4 ADD X9, X9, X10, 0x3, LSL
	0x032409A8 LDUR X9, [X9 - 0x8]
	0x032409AC CMP X9, X8
	0x032409B0 CSEL X20, X20, X31, EQ
	0x032409B4 B.NE 0x3240A4C
	0x032409B8 LDR X8, [X19]
	0x032409BC MOV X0, X19
	0x032409C0 LDR X9, [X8 + 0x328]
	0x032409C4 LDR X1, [X8 + 0x330]
	0x032409C8 BLR X9
	0x032409CC CBZ X20, 0x3240A5C
	0x032409D0 LDR X8, [X20]
	0x032409D4 MOV W21, W0
	0x032409D8 MOV X0, X20
	0x032409DC LDR X9, [X8 + 0x328]
	0x032409E0 LDR X1, [X8 + 0x330]
	0x032409E4 BLR X9
	0x032409E8 CMP W21, W0
	0x032409EC B.NE 0x3240A4C
	0x032409F0 LDRB W8, [X19 + 0x3A]
	0x032409F4 LDRB W9, [X20 + 0x3A]
	0x032409F8 CMP W8, W9
	0x032409FC B.NE 0x3240A4C
	0x03240A00 LDRB W8, [X19 + 0x39]
	0x03240A04 LDRB W9, [X20 + 0x39]
	0x03240A08 CMP W8, W9
	0x03240A0C B.NE 0x3240A4C
	0x03240A10 LDR X0, [X19 + 0x28]
	0x03240A14 CBZ X0, 0x3240A5C
	0x03240A18 LDR X8, [X0]
	0x03240A1C LDR X1, [X20 + 0x28]
	0x03240A20 LDP X9, X2, [X8 + 0x138]
	0x03240A24 BLR X9
	0x03240A28 TBZ X0, 0x0, 0x3240A4C
	0x03240A2C LDR X0, [X19 + 0x30]
	0x03240A30 CBZ X0, 0x3240A5C
	0x03240A34 LDR X8, [X0]
	0x03240A38 LDR X1, [X20 + 0x30]
	0x03240A3C LDP X20, X19, [X31 + 0x10]
	0x03240A40 LDP X3, X2, [X8 + 0x138]
	0x03240A44 LDP X30, X21, [X31], #0x20
	0x03240A48 BR X3
	0x03240A4C LDP X20, X19, [X31 + 0x10]
	0x03240A50 MOV W0, W31
	0x03240A54 LDP X30, X21, [X31], #0x20
	0x03240A58 RET
	0x03240A5C BL 0x1C16F20
	0x03240A60 STP X30, X21, [X31 - 0x20]!
	0x03240A64 STP X20, X19, [X31 + 0x10]
	0x03240A68 LDR X8, [X0]
	0x03240A6C MOV X19, X0
	0x03240A70 LDR X9, [X8 + 0x328]
	0x03240A74 LDR X1, [X8 + 0x330]
	0x03240A78 BLR X9
	0x03240A7C LDR X8, [X19 + 0x28]
	0x03240A80 CBZ X8, 0x3240AD8
	0x03240A84 LDR X9, [X8]
	0x03240A88 MOV W20, W0
	0x03240A8C MOV X0, X8
	0x03240A90 LDP X10, X1, [X9 + 0x158]
	0x03240A94 BLR X10
	0x03240A98 LDR X8, [X19 + 0x30]
	0x03240A9C CBZ X8, 0x3240AD8
	0x03240AA0 LDR X9, [X8]
	0x03240AA4 MOV W21, W0
	0x03240AA8 MOV X0, X8
	0x03240AAC LDP X10, X1, [X9 + 0x158]
	0x03240AB0 BLR X10
	0x03240AB4 LDRB W8, [X19 + 0x3A]
	0x03240AB8 LDRB W9, [X19 + 0x39]
	0x03240ABC ADD W10, W21, W20
	0x03240AC0 LDP X20, X19, [X31 + 0x10]
	0x03240AC4 ADD W10, W10, W0
	0x03240AC8 ADD W8, W10, W8, 0x2, LSL
	0x03240ACC ADD W0, W8, W9, 0x3, LSL
	0x03240AD0 LDP X30, X21, [X31], #0x20
	0x03240AD4 RET
	0x03240AD8 BL 0x1C16F20
	0x03240ADC STR X30, [X31 - 0x30]!
	0x03240AE0 STP X22, X21, [X31 + 0x10]
	0x03240AE4 STP X20, X19, [X31 + 0x20]
	0x03240AE8 ADRP X19, 0x119C000
	0x03240AEC ADRP X20, 0xEE2000
	0x03240AF0 ADRP X21, 0xEB3000
	0x03240AF4 LDRB W8, [X19 + 0x422]
	0x03240AF8 LDR X20, [X20 + 0x8D0]
	0x03240AFC LDR X21, [X21 + 0x618]
	0x03240B00 TBNZ X8, 0x0, 0x3240B24
	0x03240B04 ADRP X0, 0xEB3000
	0x03240B08 LDR X0, [X0 + 0x618]
	0x03240B0C BL 0x1C16CF4
	0x03240B10 ADRP X0, 0xEE2000
	0x03240B14 LDR X0, [X0 + 0x8D0]
	0x03240B18 BL 0x1C16CF4
	0x03240B1C MOVZ W8, 0x1
	0x03240B20 STRB W8, [X19 + 0x422]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0x119D000
	015 Move W8, [X19+1051]
	016 Move X25, X3
	017 Move W21, W2
	018 Move X23, X1
	019 Move X22, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0xEB4000
	025 Move X0, [X0+1560]
	026 Call 0x1C17CF4
	027 Move X0, 0xEE3000
	028 Move X0, [X0+2288]
	029 Call 0x1C17CF4
	030 Move X0, 0xEE3000
	031 Move X0, [X0+2256]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X19+1051], W8
	035 Compare X25, 0
	036 JumpIfEqual {53}
	037 Move X8, 0xEE3000
	038 Move X8, [X8+2288]
	039 Move X1, [X8]
	040 Move X8, [X25]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 Move W20, [X25+48]
	044 NotImplemented "Instruction SBFM not yet implemented."
	045 Add X26, X23, W21
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CINC not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CSET not yet implemented."
	050 And W9, W21, W9
	051 Add W8, W8, W9
	052 Move [X31+28], W8
	053 NotImplemented "Instruction SBFM not yet implemented."
	054 Move W24, W31
	055 Add X26, X23, W21
	056 Move [X31+28], W8
	057 Move TEMP, 0
	058 Not TEMP
	059 Move W20, TEMP
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move [X31], X23
	062 Move [X31+8], X25
	063 Move [X31+16], X31
	064 Move X29, 0xEE3000
	065 Move X28, 0xD800
	066 Move X29, [X29+2256]
	067 NotImplemented "Instruction MOVK not yet implemented."
	068 NotImplemented "Instruction MOVK not yet implemented."
	069 Subtract X27, X26, 7
	070 NotImplemented "Instruction MOVK not yet implemented."
	071 Move W25, 0xD800
	072 Move W21, [X22+57]
	073 Move W19, W24
	074 And W31, W19, 0xFFFF
	075 Add W31, W20, 1
	076 And X8, X23, 7
	077 Compare X8, 0
	078 JumpIfNotEqual {110}
	079 And W8, W21, 255
	080 NotImplemented "Instruction CMP not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X21, [X23]
	083 And X31, X21, -9223231297218904064
	084 And X8, X21, -576188069258921984
	085 Xor X8, X8, X28
	086 And X31, X8, 0xFFFF
	087 And X9, X8, 0xFFFFFFFF
	088 Compare X9, 0
	089 JumpIfEqual {98}
	090 Move X9, X8
	091 ShiftRight X9, 59
	092 And X9, X9, 0x7FFFFFFF
	093 Compare X9, 0
	094 JumpIfEqual {98}
	095 And X8, X8, 0xFFFFFFFFFFFF
	096 Compare X8, 0
	097 JumpIfNotEqual {108}
	098 Move X0, [X29]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {104}
	102 Call 0x1C17DFC
	103 Move X0, [X29]
	104 Move X8, [X0+184]
	105 And X9, X21, -287953294993589248
	106 Move X8, [X8+32]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Add X23, X23, 8
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move TEMP, X20
	111 And TEMP, TEMP, -2147483648
	112 Compare TEMP, -2147483648
	113 JumpIfNotEqual {116}
	114 Move W20, [X23+1]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move W21, [X22+57]
	117 Move W8, [X23+1]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Or W9, W20, W8
	120 NotImplemented "Instruction BFM not yet implemented."
	121 NotImplemented "Instruction CSEL not yet implemented."
	122 And W8, W24, 0xF800
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move W8, W24
	125 ShiftRight W8, 10
	126 And W8, W8, 0x7FFF
	127 NotImplemented "Instruction CMP not yet implemented."
	128 And W31, W19, 0xFFFF
	129 And W31, W19, 0xFFFF
	130 Move W19, W31
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move TEMP, 0
	133 Not TEMP
	134 Move W20, TEMP
	135 Move X8, 0xEB4000
	136 Move X8, [X8+1560]
	137 Move W1, 2
	138 Move X0, [X8]
	139 Call 0x1C17D6C
	140 Compare X0, 0
	141 JumpIfEqual {460}
	142 Move W8, [X0+24]
	143 Move X25, X0
	144 Compare W21, 0
	145 JumpIfEqual {192}
	146 Compare W8, 0
	147 JumpIfEqual {459}
	148 Move W9, W24
	149 ShiftRight W9, 8
	150 And W9, W9, 0x7FFFFFFF
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move [X25+32], W9
	153 And W31, W19, 0xFFFF
	154 Move X8, 0xEB4000
	155 Move X8, [X8+1560]
	156 Move W1, 2
	157 Move X0, [X8]
	158 Call 0x1C17D6C
	159 Compare X0, 0
	160 JumpIfEqual {460}
	161 Move W8, [X0+24]
	162 Move X25, X0
	163 Compare W21, 0
	164 JumpIfEqual {243}
	165 Compare W8, 0
	166 JumpIfEqual {459}
	167 Move W9, W19
	168 ShiftRight W9, 8
	169 And W9, W9, 0x7FFFFFFF
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move [X25+32], W9
	172 Move X8, 0xEB4000
	173 Move X8, [X8+1560]
	174 Move W1, 2
	175 Move X0, [X8]
	176 Call 0x1C17D6C
	177 Compare X0, 0
	178 JumpIfEqual {460}
	179 Move W8, [X0+24]
	180 Move W20, [X31+28]
	181 Move X24, [X31+16]
	182 Move X25, X0
	183 Compare W21, 0
	184 JumpIfEqual {209}
	185 Compare W8, 0
	186 JumpIfEqual {459}
	187 Move W9, W19
	188 ShiftRight W9, 8
	189 And W9, W9, 0x7FFFFFFF
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move [X25+32], W9
	192 Compare W8, 0
	193 JumpIfEqual {459}
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move [X25+32], W24
	196 Move W24, W24
	197 ShiftRight W24, 8
	198 And W24, W24, 0x7FFFFFFF
	199 Move W19, [X31+28]
	200 Move X20, [X31+16]
	201 Move [X25+33], W24
	202 Compare X20, 0
	203 JumpIfNotEqual {239}
	204 Move X0, [X31+8]
	205 Compare X0, 0
	206 JumpIfEqual {224}
	207 Move X1, X31
	208 Call Decoder.get_FallbackBuffer, X0
	209 Compare W8, 0
	210 JumpIfEqual {459}
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move [X25+32], W19
	213 Move W19, W19
	214 ShiftRight W19, 8
	215 And W19, W19, 0x7FFF
	216 Move [X25+33], W19
	217 Compare X24, 0
	218 JumpIfNotEqual {274}
	219 Move X0, [X31+8]
	220 Compare X0, 0
	221 JumpIfEqual {259}
	222 Move X1, X31
	223 Call Decoder.get_FallbackBuffer, X0
	224 Move X0, [X22+48]
	225 Compare X0, 0
	226 JumpIfEqual {460}
	227 Move X8, [X0]
	228 Move X9, [X8+376]
	229 Move X1, [X8+384]
	230 NotImplemented "Instruction BLR not yet implemented."
	231 Move X20, X0
	232 Compare X0, 0
	233 JumpIfEqual {460}
	234 Move X1, [X31]
	235 Move X0, X20
	236 Move X2, X31
	237 Move X3, X31
	238 Call DecoderFallbackBuffer.InternalInitialize, X0, X1, X2
	239 Move X8, [X20]
	240 Subtract W19, W19, 1
	241 Move [X31+16], X20
	242 Move X0, X20
	243 Compare W8, 0
	244 JumpIfEqual {459}
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move [X25+32], W19
	247 Move W19, W19
	248 ShiftRight W19, 8
	249 And W19, W19, 0x7FFF
	250 Move X20, [X31+16]
	251 Move [X25+33], W19
	252 Compare X20, 0
	253 JumpIfNotEqual {306}
	254 Move X0, [X31+8]
	255 Compare X0, 0
	256 JumpIfEqual {291}
	257 Move X1, X31
	258 Call Decoder.get_FallbackBuffer, X0
	259 Move X0, [X22+48]
	260 Compare X0, 0
	261 JumpIfEqual {460}
	262 Move X8, [X0]
	263 Move X9, [X8+376]
	264 Move X1, [X8+384]
	265 NotImplemented "Instruction BLR not yet implemented."
	266 Move X24, X0
	267 Compare X0, 0
	268 JumpIfEqual {460}
	269 Move X1, [X31]
	270 Move X0, X24
	271 Move X2, X31
	272 Move X3, X31
	273 Call DecoderFallbackBuffer.InternalInitialize, X0, X1, X2
	274 Move X8, [X24]
	275 Subtract W19, W20, 1
	276 Move X0, X24
	277 Move [X31+16], X24
	278 Move X9, [X8+440]
	279 Move X3, [X8+448]
	280 Move X1, X25
	281 Move X2, X23
	282 NotImplemented "Instruction BLR not yet implemented."
	283 Move W24, W31
	284 Add W8, W19, W0
	285 Move W25, 0xD800
	286 Move [X31+28], W8
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Move TEMP, 0
	289 Not TEMP
	290 Move W20, TEMP
	291 Move X0, [X22+48]
	292 Compare X0, 0
	293 JumpIfEqual {460}
	294 Move X8, [X0]
	295 Move X9, [X8+376]
	296 Move X1, [X8+384]
	297 NotImplemented "Instruction BLR not yet implemented."
	298 Move X20, X0
	299 Compare X0, 0
	300 JumpIfEqual {460}
	301 Move X1, [X31]
	302 Move X0, X20
	303 Move X2, X31
	304 Move X3, X31
	305 Call DecoderFallbackBuffer.InternalInitialize, X0, X1, X2
	306 Move X8, [X20]
	307 Move X0, X20
	308 Move X1, X25
	309 Move X2, X23
	310 Move X9, [X8+440]
	311 Move X3, [X8+448]
	312 Move W8, [X31+28]
	313 Move [X31+16], X20
	314 Subtract W19, W8, 1
	315 NotImplemented "Instruction BLR not yet implemented."
	316 Move [X31+16], X31
	317 Move W24, W31
	318 Move TEMP, 0
	319 Not TEMP
	320 Move W20, TEMP
	321 Move W24, W19
	322 Move X21, [X31+8]
	323 Compare X21, 0
	324 JumpIfEqual {328}
	325 Move W8, [X21+40]
	326 Compare W8, 0
	327 JumpIfEqual {354}
	328 And W31, W24, 0xFFFF
	329 Move X8, 0xEB4000
	330 Move W19, [X22+57]
	331 Move X8, [X8+1560]
	332 Move W1, 2
	333 Move X0, [X8]
	334 Call 0x1C17D6C
	335 Compare X0, 0
	336 JumpIfEqual {460}
	337 Move W8, [X0+24]
	338 Move X25, X0
	339 Compare W19, 0
	340 JumpIfEqual {358}
	341 Compare W8, 0
	342 JumpIfEqual {459}
	343 Move W9, W24
	344 ShiftRight W9, 8
	345 And W9, W9, 0x7FFFFFFF
	346 NotImplemented "Instruction CMP not yet implemented."
	347 Move [X25+32], W9
	348 Move W19, [X31+28]
	349 Move X24, [X31+16]
	350 Move TEMP, X20
	351 And TEMP, TEMP, -2147483648
	352 Compare TEMP, -2147483648
	353 JumpIfNotEqual {403}
	354 Move W9, [X31+28]
	355 And W31, W24, 0xFFFF
	356 NotImplemented "Instruction CSET not yet implemented."
	357 Subtract W0, W9, W8
	358 Compare W8, 0
	359 JumpIfEqual {459}
	360 NotImplemented "Instruction CMP not yet implemented."
	361 Move [X25+32], W24
	362 Move W24, W24
	363 ShiftRight W24, 8
	364 And W24, W24, 0x7FFF
	365 Move [X25+33], W24
	366 Move W19, [X31+28]
	367 Move X24, [X31+16]
	368 Compare X24, 0
	369 JumpIfNotEqual {390}
	370 Compare X21, 0
	371 JumpIfEqual {375}
	372 Move X0, X21
	373 Move X1, X31
	374 Call Decoder.get_FallbackBuffer, X0
	375 Move X0, [X22+48]
	376 Compare X0, 0
	377 JumpIfEqual {460}
	378 Move X8, [X0]
	379 Move X9, [X8+376]
	380 Move X1, [X8+384]
	381 NotImplemented "Instruction BLR not yet implemented."
	382 Move X24, X0
	383 Compare X0, 0
	384 JumpIfEqual {460}
	385 Move X1, [X31]
	386 Move X0, X24
	387 Move X2, X31
	388 Move X3, X31
	389 Call DecoderFallbackBuffer.InternalInitialize, X0, X1, X2
	390 Move X8, [X24]
	391 Move X0, X24
	392 Move X1, X25
	393 Move X2, X23
	394 Move X9, [X8+440]
	395 Move X3, [X8+448]
	396 Subtract W19, W19, 1
	397 NotImplemented "Instruction BLR not yet implemented."
	398 Add W19, W19, W0
	399 Move TEMP, X20
	400 And TEMP, TEMP, -2147483648
	401 Compare TEMP, -2147483648
	402 JumpIfEqual {444}
	403 Compare X24, 0
	404 JumpIfNotEqual {425}
	405 Compare X21, 0
	406 JumpIfEqual {410}
	407 Move X0, X21
	408 Move X1, X31
	409 Call Decoder.get_FallbackBuffer, X0
	410 Move X0, [X22+48]
	411 Compare X0, 0
	412 JumpIfEqual {460}
	413 Move X8, [X0]
	414 Move X9, [X8+376]
	415 Move X1, [X8+384]
	416 NotImplemented "Instruction BLR not yet implemented."
	417 Move X24, X0
	418 Compare X0, 0
	419 JumpIfEqual {460}
	420 Move X1, [X31]
	421 Move X0, X24
	422 Move X2, X31
	423 Move X3, X31
	424 Call DecoderFallbackBuffer.InternalInitialize, X0, X1, X2
	425 Move X8, 0xEB4000
	426 Move X8, [X8+1560]
	427 Move W1, 1
	428 Move X0, [X8]
	429 Call 0x1C17D6C
	430 Compare X0, 0
	431 JumpIfEqual {460}
	432 Move W8, [X0+24]
	433 Move X1, X0
	434 Compare W8, 0
	435 JumpIfEqual {459}
	436 Move [X1+32], W20
	437 Move X8, [X24]
	438 Move X0, X24
	439 Move X2, X23
	440 Move X9, [X8+440]
	441 Move X3, [X8+448]
	442 NotImplemented "Instruction BLR not yet implemented."
	443 Add W19, W0, W19
	444 Move W0, W19
	445 Move X20, [X31+112]
	446 Move X19, [X31+120]
	447 Move X22, [X31+96]
	448 Move X21, [X31+104]
	449 Move X24, [X31+80]
	450 Move X23, [X31+88]
	451 Move X26, [X31+64]
	452 Move X25, [X31+72]
	453 Move X28, [X31+48]
	454 Move X27, [X31+56]
	455 Move X29, [X31+32]
	456 Move X30, [X31+40]
	457 Add X31, X31, 128
	458 Return X0
	459 Call 0x1C17F28
	460 Call 0x1C17F20
	461 Move X0, X25
	462 Call 0x1C181E0

Method: System.Int32 GetChars(System.Byte* bytes, System.Int32 byteCount, System.Char* chars, System.Int32 charCount, System.Text.DecoderNLS baseDecoder)

Disassembly:
	0x03240B24 LDR X0, [X20]
	0x03240B28 BL 0x1C16F10
	0x03240B2C MOVZ W22, 0x1
	0x03240B30 MOVZ W1, 0x4B1
	0x03240B34 MOV X2, X31
	0x03240B38 MOV X19, X0
	0x03240B3C STRB W22, [X0 + 0x3A]
	0x03240B40 BL 0x3241B10
	0x03240B44 MOVZ W8, 0x100
	0x03240B48 STRH W8, [X19 + 0x38]
	0x03240B4C STRB W22, [X19 + 0x3A]
	0x03240B50 LDR X8, [X20]
	0x03240B54 LDR X8, [X8 + 0xB8]
	0x03240B58 STR X19, [X8]
	0x03240B5C LDR X0, [X20]
	0x03240B60 BL 0x1C16F10
	0x03240B64 MOVZ W1, 0x4B0
	0x03240B68 MOV X2, X31
	0x03240B6C MOV X19, X0
	0x03240B70 STRB W22, [X0 + 0x3A]
	0x03240B74 BL 0x3241B10
	0x03240B78 STRH W31, [X19 + 0x38]
	0x03240B7C STRB W22, [X19 + 0x3A]
	0x03240B80 LDR X8, [X20]
	0x03240B84 MOVZ W1, 0x2
	0x03240B88 LDR X8, [X8 + 0xB8]
	0x03240B8C STR X19, [X8 + 0x8]
	0x03240B90 LDR X0, [X21]
	0x03240B94 BL 0x1C16D6C
	0x03240B98 CBZ X0, 0x3240C28
	0x03240B9C LDR W8, [X0 + 0x18]
	0x03240BA0 CBZ W8, 0x3240C24
	0x03240BA4 MOVZ W9, 0xFE
	0x03240BA8 CMP W8, 0x1
	0x03240BAC STRB W9, [X0 + 0x20]
	0x03240BB0 B.EQ 0x3240C24
	0x03240BB4 MOVZ W8, 0xFF
	0x03240BB8 STRB W8, [X0 + 0x21]
	0x03240BBC LDR X8, [X20]
	0x03240BC0 MOVZ W1, 0x2
	0x03240BC4 LDR X8, [X8 + 0xB8]
	0x03240BC8 STR X0, [X8 + 0x10]
	0x03240BCC LDR X0, [X21]
	0x03240BD0 BL 0x1C16D6C
	0x03240BD4 CBZ X0, 0x3240C28
	0x03240BD8 LDR W8, [X0 + 0x18]
	0x03240BDC CBZ W8, 0x3240C24
	0x03240BE0 MOVZ W9, 0xFF
	0x03240BE4 CMP W8, 0x1
	0x03240BE8 STRB W9, [X0 + 0x20]
	0x03240BEC B.EQ 0x3240C24
	0x03240BF0 MOVZ W8, 0xFE
	0x03240BF4 STRB W8, [X0 + 0x21]
	0x03240BF8 LDR X8, [X20]
	0x03240BFC MOVZ X9, 0xD800
	0x03240C00 MOVK X9, 0xDC000000
	0x03240C04 LDP X20, X19, [X31 + 0x20]
	0x03240C08 LDR X8, [X8 + 0xB8]
	0x03240C0C LDP X22, X21, [X31 + 0x10]
	0x03240C10 MOVK X9, 0xD800
	0x03240C14 MOVK X9, 0xDC000000
	0x03240C18 STP X0, X9, [X8 + 0x18]
	0x03240C1C LDR X30, [X31], #0x30
	0x03240C20 RET
	0x03240C24 BL 0x1C16F28
	0x03240C28 BL 0x1C16F20
	0x03240C2C MOVN W8, 0x0
	0x03240C30 MOV X2, X31
	0x03240C34 STR W8, [X0 + 0x30]
	0x03240C38 B 0x33FCA64
	0x03240C3C MOV X8, X0
	0x03240C40 LDR X0, [X0 + 0x18]
	0x03240C44 MOVN W9, 0x0
	0x03240C48 STR W9, [X8 + 0x30]
	0x03240C4C STRH W31, [X8 + 0x34]
	0x03240C50 CBZ X0, 0x3240C60
	0x03240C54 LDR X8, [X0]
	0x03240C58 LDP X2, X1, [X8 + 0x198]
	0x03240C5C BR X2
	0x03240C60 RET
	0x03240C64 LDR W8, [X0 + 0x30]
	0x03240C68 ADDS W31, W8, 0x1
	0x03240C6C B.EQ 0x3240C78
	0x03240C70 MOVZ W0, 0x1
	0x03240C74 RET
	0x03240C78 LDRH W8, [X0 + 0x34]
	0x03240C7C CMP W8, 0x0
	0x03240C80 CSET W0, NE
	0x03240C84 RET
	0x03240C88 STP X31, X1, [X0]
	0x03240C8C STR X2, [X0 + 0x10]
	0x03240C90 STR W31, [X0 + 0x18]
	0x03240C94 RET
	0x03240C98 LDR W0, [X0 + 0x18]
	0x03240C9C RET
	0x03240CA0 STR X30, [X31 - 0x10]!
	0x03240CA4 LDR W8, [X0 + 0x10]
	0x03240CA8 CMP W8, W1
	0x03240CAC B.LS 0x3240CC0
	0x03240CB0 LDR X8, [X0 + 0x8]
	0x03240CB4 ADD X0, X8, W1, 0x1, SXTW
	0x03240CB8 LDR X30, [X31], #0x10
	0x03240CBC RET
	0x03240CC0 BL 0x1C16F28
	0x03240CC4 STR X30, [X31 - 0x30]!
	0x03240CC8 STP X22, X21, [X31 + 0x10]
	0x03240CCC STP X20, X19, [X31 + 0x20]
	0x03240CD0 ADRP X20, 0x119C000
	0x03240CD4 ADRP X21, 0xEE1000
	0x03240CD8 LDRB W8, [X20 + 0x425]
	0x03240CDC LDR X21, [X21 + 0x850]
	0x03240CE0 MOV X19, X0
	0x03240CE4 TBNZ X8, 0x0, 0x3240D08
	0x03240CE8 ADRP X0, 0xEE1000
	0x03240CEC LDR X0, [X0 + 0x850]
	0x03240CF0 BL 0x1C16CF4
	0x03240CF4 ADRP X0, 0xEE1000
	0x03240CF8 LDR X0, [X0 + 0x858]
	0x03240CFC BL 0x1C16CF4
	0x03240D00 MOVZ W8, 0x1
	0x03240D04 STRB W8, [X20 + 0x425]
	0x03240D08 LDR W20, [X19 + 0x18]
	0x03240D0C LDR W8, [X19 + 0x10]
	0x03240D10 LDR X21, [X21]
	0x03240D14 CMP W8, W20
	0x03240D18 B.CS 0x3240D24
	0x03240D1C MOV X0, X31
	0x03240D20 BL 0x339D6EC
	0x03240D24 LDR X0, [X21 + 0x20]
	0x03240D28 ADRP X22, 0xEE1000
	0x03240D2C LDR X21, [X19 + 0x8]
	0x03240D30 LDRB W8, [X0 + 0x135]
	0x03240D34 LDR X22, [X22 + 0x858]
	0x03240D38 TBNZ X8, 0x0, 0x3240D40
	0x03240D3C BL 0x1C5C684
	0x03240D40 LDR X2, [X22]
	0x03240D44 MOV X0, X21
	0x03240D48 MOV X1, X20
	0x03240D4C BL 0x25FB81C
	0x03240D50 MOV X2, X0
	0x03240D54 MOV X3, X1
	0x03240D58 MOV X0, X31
	0x03240D5C MOV X1, X2
	0x03240D60 MOV X2, X3
	0x03240D64 MOV X3, X31
	0x03240D68 BL 0x322EB14
	0x03240D6C MOV X20, X0
	0x03240D70 MOV X0, X19
	0x03240D74 MOV X1, X31
	0x03240D78 BL 0x32549D4
	0x03240D7C MOV X0, X20
	0x03240D80 LDP X20, X19, [X31 + 0x20]
	0x03240D84 LDP X22, X21, [X31 + 0x10]
	0x03240D88 LDR X30, [X31], #0x30
	0x03240D8C RET
	0x03240D90 SUB X31, X31, 0x50
	0x03240D94 STP X30, X25, [X31 + 0x10]
	0x03240D98 STP X24, X23, [X31 + 0x20]
	0x03240D9C STP X22, X21, [X31 + 0x30]
	0x03240DA0 STP X20, X19, [X31 + 0x40]
	0x03240DA4 ADRP X23, 0x119C000
	0x03240DA8 ADRP X24, 0xEE1000
	0x03240DAC LDRB W8, [X23 + 0x426]
	0x03240DB0 LDR X24, [X24 + 0x850]
	0x03240DB4 MOV X20, X3
	0x03240DB8 MOV X21, X2
	0x03240DBC MOV X22, X1
	0x03240DC0 MOV X19, X0
	0x03240DC4 TBNZ X8, 0x0, 0x3240DE8
	0x03240DC8 ADRP X0, 0xEE1000
	0x03240DCC LDR X0, [X0 + 0x850]
	0x03240DD0 BL 0x1C16CF4
	0x03240DD4 ADRP X0, 0xEE2000
	0x03240DD8 LDR X0, [X0 + 0x910]
	0x03240DDC BL 0x1C16CF4
	0x03240DE0 MOVZ W8, 0x1
	0x03240DE4 STRB W8, [X23 + 0x426]
	0x03240DE8 LDR W23, [X19 + 0x18]
	0x03240DEC LDR W8, [X19 + 0x10]
	0x03240DF0 LDR X24, [X24]
	0x03240DF4 CMP W8, W23
	0x03240DF8 B.CS 0x3240E04
	0x03240DFC MOV X0, X31
	0x03240E00 BL 0x339D6EC
	0x03240E04 LDR X0, [X24 + 0x20]
	0x03240E08 ADRP X25, 0xEE2000
	0x03240E0C LDR X24, [X19 + 0x8]
	0x03240E10 LDRB W8, [X0 + 0x135]
	0x03240E14 LDR X25, [X25 + 0x910]
	0x03240E18 TBNZ X8, 0x0, 0x3240E20
	0x03240E1C BL 0x1C5C684
	0x03240E20 LDR X3, [X25]
	0x03240E24 ADD X0, X31, 0x0
	0x03240E28 MOV X1, X22
	0x03240E2C MOV X2, X21
	0x03240E30 STP X24, X23, [X31]
	0x03240E34 BL 0x25FB79C
	0x03240E38 MOV W21, W0
	0x03240E3C TBZ X0, 0x0, 0x3240E48
	0x03240E40 LDR W8, [X19 + 0x18]
	0x03240E44 B 0x3240E4C
	0x03240E48 MOV W8, W31
	0x03240E4C MOV X0, X19
	0x03240E50 MOV X1, X31
	0x03240E54 STR W8, [X20]
	0x03240E58 BL 0x32549D4
	0x03240E5C AND W0, W21, 0x1
	0x03240E60 LDP X20, X19, [X31 + 0x40]
	0x03240E64 LDP X22, X21, [X31 + 0x30]
	0x03240E68 LDP X24, X23, [X31 + 0x20]
	0x03240E6C LDP X30, X25, [X31 + 0x10]
	0x03240E70 ADD X31, X31, 0x50
	0x03240E74 RET
	0x03240E78 STP X30, X21, [X31 - 0x20]!
	0x03240E7C STP X20, X19, [X31 + 0x10]
	0x03240E80 ADRP X21, 0x119C000
	0x03240E84 LDRB W8, [X21 + 0x427]
	0x03240E88 MOV W19, W1
	0x03240E8C MOV X20, X0
	0x03240E90 TBNZ X8, 0x0, 0x3240EA8
	0x03240E94 ADRP X0, 0xEE2000
	0x03240E98 LDR X0, [X0 + 0x588]
	0x03240E9C BL 0x1C16CF4
	0x03240EA0 MOVZ W8, 0x1
	0x03240EA4 STRB W8, [X21 + 0x427]
	0x03240EA8 LDRSW X8, [X20 + 0x18]
	0x03240EAC LDR W9, [X20 + 0x10]
	0x03240EB0 CMP W8, W9
	0x03240EB4 B.GE 0x3240EDC
	0x03240EB8 CMP W8, W9
	0x03240EBC B.CS 0x3240EF0
	0x03240EC0 LDR X9, [X20 + 0x8]
	0x03240EC4 ADD W10, W8, 0x1
	0x03240EC8 STRH W19, [X9, X8, LSL #1]
	0x03240ECC STR W10, [X20 + 0x18]
	0x03240ED0 LDP X20, X19, [X31 + 0x10]
	0x03240ED4 LDP X30, X21, [X31], #0x20
	0x03240ED8 RET
	0x03240EDC MOV X0, X20
	0x03240EE0 MOV W1, W19
	0x03240EE4 LDP X20, X19, [X31 + 0x10]
	0x03240EE8 LDP X30, X21, [X31], #0x20
	0x03240EEC B 0x3240EF4
	0x03240EF0 BL 0x1C16F28
	0x03240EF4 STP X30, X23, [X31 - 0x30]!
	0x03240EF8 STP X22, X21, [X31 + 0x10]
	0x03240EFC STP X20, X19, [X31 + 0x20]
	0x03240F00 ADRP X21, 0xEE2000
	0x03240F04 LDR X21, [X21 + 0x588]
	0x03240F08 MOV W19, W1
	0x03240F0C MOV X20, X0
	0x03240F10 MOVZ W22, 0x1
	0x03240F14 ADRP X23, 0x119C000
	0x03240F18 MOVZ W1, 0x1
	0x03240F1C MOV X0, X20
	0x03240F20 BL 0x324114C
	0x03240F24 LDRB W8, [X23 + 0x4E2]
	0x03240F28 CBNZ W8, 0x3240F38
	0x03240F2C MOV X0, X21
	0x03240F30 BL 0x1C16CF4
	0x03240F34 STRB W22, [X23 + 0x4E2]
	0x03240F38 LDRSW X8, [X20 + 0x18]
	0x03240F3C LDR W9, [X20 + 0x10]
	0x03240F40 CMP W8, W9
	0x03240F44 B.GE 0x3240F18
	0x03240F48 CMP W8, W9
	0x03240F4C B.CS 0x3240F70
	0x03240F50 LDR X9, [X20 + 0x8]
	0x03240F54 ADD W10, W8, 0x1
	0x03240F58 LDP X22, X21, [X31 + 0x10]
	0x03240F5C STRH W19, [X9, X8, LSL #1]
	0x03240F60 STR W10, [X20 + 0x18]
	0x03240F64 LDP X20, X19, [X31 + 0x20]
	0x03240F68 LDP X30, X23, [X31], #0x30
	0x03240F6C RET
	0x03240F70 BL 0x1C16F28
	0x03240F74 STR X30, [X31 - 0x30]!
	0x03240F78 STP X22, X21, [X31 + 0x10]
	0x03240F7C STP X20, X19, [X31 + 0x20]
	0x03240F80 ADRP X21, 0x119C000
	0x03240F84 LDRB W8, [X21 + 0x428]
	0x03240F88 MOV X20, X1
	0x03240F8C MOV X19, X0
	0x03240F90 TBNZ X8, 0x0, 0x3240FA8
	0x03240F94 ADRP X0, 0xEE2000
	0x03240F98 LDR X0, [X0 + 0x588]
	0x03240F9C BL 0x1C16CF4
	0x03240FA0 MOVZ W8, 0x1
	0x03240FA4 STRB W8, [X21 + 0x428]
	0x03240FA8 CBZ X20, 0x3241018
	0x03240FAC LDR W8, [X20 + 0x10]
	0x03240FB0 CMP W8, 0x1
	0x03240FB4 B.NE 0x3241000
	0x03240FB8 LDRSW X21, [X19 + 0x18]
	0x03240FBC LDR W8, [X19 + 0x10]
	0x03240FC0 CMP W21, W8
	0x03240FC4 B.GE 0x3241000
	0x03240FC8 CMP W21, W8
	0x03240FCC B.CS 0x324101C
	0x03240FD0 LDR X22, [X19 + 0x8]
	0x03240FD4 MOV X0, X20
	0x03240FD8 MOV W1, W31
	0x03240FDC MOV X2, X31
	0x03240FE0 BL 0x3222A1C
	0x03240FE4 ADD W8, W21, 0x1
	0x03240FE8 STRH W0, [X22, X21, LSL #1]
	0x03240FEC STR W8, [X19 + 0x18]
	0x03240FF0 LDP X20, X19, [X31 + 0x20]
	0x03240FF4 LDP X22, X21, [X31 + 0x10]
	0x03240FF8 LDR X30, [X31], #0x30
	0x03240FFC RET
	0x03241000 MOV X0, X19
	0x03241004 MOV X1, X20
	0x03241008 LDP X20, X19, [X31 + 0x20]
	0x0324100C LDP X22, X21, [X31 + 0x10]
	0x03241010 LDR X30, [X31], #0x30
	0x03241014 B 0x3241020
	0x03241018 BL 0x1C16F20
	0x0324101C BL 0x1C16F28
	0x03241020 SUB X31, X31, 0x50
	0x03241024 STR X30, [X31 + 0x10]
	0x03241028 STP X24, X23, [X31 + 0x20]
	0x0324102C STP X22, X21, [X31 + 0x30]
	0x03241030 STP X20, X19, [X31 + 0x40]
	0x03241034 ADRP X21, 0x119B000
	0x03241038 LDRB W8, [X21 + 0x429]
	0x0324103C MOV X19, X1
	0x03241040 MOV X20, X0
	0x03241044 TBNZ X8, 0x0, 0x3241074
	0x03241048 ADRP X0, 0xEE1000
	0x0324104C LDR X0, [X0 + 0x198]
	0x03241050 BL 0x1C16CF4
	0x03241054 ADRP X0, 0xEE1000
	0x03241058 LDR X0, [X0 + 0x1A8]
	0x0324105C BL 0x1C16CF4
	0x03241060 ADRP X0, 0xEE1000
	0x03241064 LDR X0, [X0 + 0x588]
	0x03241068 BL 0x1C16CF4
	0x0324106C MOVZ W8, 0x1
	0x03241070 STRB W8, [X21 + 0x429]
	0x03241074 CBZ X19, 0x3241148
	0x03241078 LDR W8, [X20 + 0x10]
	0x0324107C LDR W1, [X19 + 0x10]
	0x03241080 LDRSW X21, [X20 + 0x18]
	0x03241084 SUB W8, W8, W1
	0x03241088 CMP W21, W8
	0x0324108C B.LE 0x3241098
	0x03241090 MOV X0, X20
	0x03241094 BL 0x324114C
	0x03241098 ADRP X22, 0x119B000
	0x0324109C ADRP X23, 0xEE1000
	0x032410A0 LDRB W8, [X22 + 0x3AB]
	0x032410A4 LDR X23, [X23 + 0x1A8]
	0x032410A8 CBNZ W8, 0x32410C0
	0x032410AC ADRP X0, 0xED9000
	0x032410B0 LDR X0, [X0 + 0x290]
	0x032410B4 BL 0x1C16CF4
	0x032410B8 MOVZ W8, 0x1
	0x032410BC STRB W8, [X22 + 0x3AB]
	0x032410C0 MOV X0, X19
	0x032410C4 MOV X1, X31
	0x032410C8 BL 0x3225708
	0x032410CC LDR W8, [X19 + 0x10]
	0x032410D0 LDR X23, [X23]
	0x032410D4 STP X0, X8, [X31]
	0x032410D8 LDR W22, [X20 + 0x10]
	0x032410DC CMP W22, W21
	0x032410E0 B.CS 0x32410F0
	0x032410E4 MOV X0, X31
	0x032410E8 BL 0x339D6EC
	0x032410EC LDR W22, [X20 + 0x10]
	0x032410F0 LDR X0, [X23 + 0x20]
	0x032410F4 ADRP X24, 0xEE1000
	0x032410F8 LDR X23, [X20 + 0x8]
	0x032410FC LDRB W8, [X0 + 0x135]
	0x03241100 LDR X24, [X24 + 0x198]
	0x03241104 TBNZ X8, 0x0, 0x324110C
	0x03241108 BL 0x1C5C684
	0x0324110C LDR X3, [X24]
	0x03241110 SUB W2, W22, W21
	0x03241114 ADD X1, X23, X21, 0x1, LSL
	0x03241118 ADD X0, X31, 0x0
	0x0324111C BL 0x25BEC30
	0x03241120 LDR W8, [X20 + 0x18]
	0x03241124 LDR W9, [X19 + 0x10]
	0x03241128 LDP X22, X21, [X31 + 0x30]
	0x0324112C LDP X24, X23, [X31 + 0x20]
	0x03241130 LDR X30, [X31 + 0x10]
	0x03241134 ADD W8, W9, W8
	0x03241138 STR W8, [X20 + 0x18]
	0x0324113C LDP X20, X19, [X31 + 0x40]
	0x03241140 ADD X31, X31, 0x50
	0x03241144 RET
	0x03241148 BL 0x1C16F20
	0x0324114C STP X30, X25, [X31 - 0x40]!
	0x03241150 STP X24, X23, [X31 + 0x10]
	0x03241154 STP X22, X21, [X31 + 0x20]
	0x03241158 STP X20, X19, [X31 + 0x30]
	0x0324115C ADRP X21, 0x119B000
	0x03241160 ADRP X22, 0xEDD000
	0x03241164 LDRB W8, [X21 + 0x42D]
	0x03241168 LDR X22, [X22 + 0xD60]
	0x0324116C MOV W20, W1
	0x03241170 MOV X19, X0
	0x03241174 TBNZ X8, 0x0, 0x32411C8
	0x03241178 ADRP X0, 0xEDD000
	0x0324117C LDR X0, [X0 + 0xD58]
	0x03241180 BL 0x1C16CF4
	0x03241184 ADRP X0, 0xEDD000
	0x03241188 LDR X0, [X0 + 0xD60]
	0x0324118C BL 0x1C16CF4
	0x03241190 ADRP X0, 0xEB2000
	0x03241194 LDR X0, [X0 + 0x5A8]
	0x03241198 BL 0x1C16CF4
	0x0324119C ADRP X0, 0xEE1000
	0x032411A0 LDR X0, [X0 + 0x918]
	0x032411A4 BL 0x1C16CF4
	0x032411A8 ADRP X0, 0xEE1000
	0x032411AC LDR X0, [X0 + 0x588]
	0x032411B0 BL 0x1C16CF4
	0x032411B4 ADRP X0, 0xEE1000
	0x032411B8 LDR X0, [X0 + 0x2D0]
	0x032411BC BL 0x1C16CF4
	0x032411C0 MOVZ W8, 0x1
	0x032411C4 STRB W8, [X21 + 0x42D]
	0x032411C8 LDR X0, [X22]
	0x032411CC ADRP X23, 0xEDD000
	0x032411D0 LDR W8, [X0 + 0xE0]
	0x032411D4 LDR X23, [X23 + 0xD58]
	0x032411D8 CBNZ W8, 0x32411E0
	0x032411DC BL 0x1C16DFC
	0x032411E0 LDR X21, [X23]
	0x032411E4 LDR X0, [X21 + 0x20]
	0x032411E8 LDRB W8, [X0 + 0x135]
	0x032411EC TBNZ X8, 0x0, 0x32411F4
	0x032411F0 BL 0x1C5C684
	0x032411F4 LDR X8, [X0 + 0xC0]
	0x032411F8 LDR X0, [X8 + 0x8]
	0x032411FC LDRB W8, [X0 + 0x135]
	0x03241200 TBNZ X8, 0x0, 0x3241208
	0x03241204 BL 0x1C5C684
	0x03241208 LDR W8, [X0 + 0xE0]
	0x0324120C CBNZ W8, 0x3241214
	0x03241210 BL 0x1C16DFC
	0x03241214 LDR X0, [X21 + 0x20]
	0x03241218 LDRB W8, [X0 + 0x135]
	0x0324121C TBNZ X8, 0x0, 0x3241224
	0x03241220 BL 0x1C5C684
	0x03241224 LDR X8, [X0 + 0xC0]
	0x03241228 ADRP X21, 0xEB2000
	0x0324122C LDR X0, [X8 + 0x8]
	0x03241230 LDRB W8, [X0 + 0x135]
	0x03241234 LDR X21, [X21 + 0x5A8]
	0x03241238 TBNZ X8, 0x0, 0x3241240
	0x0324123C BL 0x1C5C684
	0x03241240 LDR X8, [X0 + 0xB8]
	0x03241244 LDR X0, [X21]
	0x03241248 LDR W24, [X19 + 0x18]
	0x0324124C LDR W25, [X19 + 0x10]
	0x03241250 LDR X21, [X8]
	0x03241254 LDR W8, [X0 + 0xE0]
	0x03241258 CBNZ W8, 0x3241260
	0x0324125C BL 0x1C16DFC
	0x03241260 ADD W0, W24, W20
	0x03241264 UBFM W1, W25, 0x1F, 0x1E
	0x03241268 MOV X2, X31
	0x0324126C BL 0x337EDF0
	0x03241270 CBZ X21, 0x324138C
	0x03241274 LDR X8, [X21]
	0x03241278 ADRP X24, 0xEE1000
	0x0324127C ADRP X25, 0xEE1000
	0x03241280 MOV W1, W0
	0x03241284 LDP X9, X2, [X8 + 0x178]
	0x03241288 LDR X24, [X24 + 0x2D0]
	0x0324128C LDR X25, [X25 + 0x918]
	0x03241290 MOV X0, X21
	0x03241294 ADD X20, X19, 0x8
	0x03241298 BLR X9
	0x0324129C LDR X1, [X24]
	0x032412A0 MOV X21, X0
	0x032412A4 BL 0x25FBC40
	0x032412A8 LDR X3, [X25]
	0x032412AC MOV X2, X0
	0x032412B0 MOV X4, X1
	0x032412B4 MOV X0, X20
	0x032412B8 MOV X1, X2
	0x032412BC MOV X2, X4
	0x032412C0 BL 0x25FB714
	0x032412C4 LDR X20, [X19]
	0x032412C8 STR X21, [X19]
	0x032412CC LDR X1, [X24]
	0x032412D0 MOV X0, X21
	0x032412D4 BL 0x25FBC40
	0x032412D8 STP X0, X1, [X19 + 0x8]
	0x032412DC CBZ X20, 0x3241378
	0x032412E0 LDR X0, [X22]
	0x032412E4 LDR W8, [X0 + 0xE0]
	0x032412E8 CBNZ W8, 0x32412F0
	0x032412EC BL 0x1C16DFC
	0x032412F0 LDR X19, [X23]
	0x032412F4 LDR X0, [X19 + 0x20]
	0x032412F8 LDRB W8, [X0 + 0x135]
	0x032412FC TBNZ X8, 0x0, 0x3241304
	0x03241300 BL 0x1C5C684
	0x03241304 LDR X8, [X0 + 0xC0]
	0x03241308 LDR X0, [X8 + 0x8]
	0x0324130C LDRB W8, [X0 + 0x135]
	0x03241310 TBNZ X8, 0x0, 0x3241318
	0x03241314 BL 0x1C5C684
	0x03241318 LDR W8, [X0 + 0xE0]
	0x0324131C CBNZ W8, 0x3241324
	0x03241320 BL 0x1C16DFC
	0x03241324 LDR X0, [X19 + 0x20]
	0x03241328 LDRB W8, [X0 + 0x135]
	0x0324132C TBNZ X8, 0x0, 0x3241334
	0x03241330 BL 0x1C5C684
	0x03241334 LDR X8, [X0 + 0xC0]
	0x03241338 LDR X0, [X8 + 0x8]
	0x0324133C LDRB W8, [X0 + 0x135]
	0x03241340 TBNZ X8, 0x0, 0x3241348
	0x03241344 BL 0x1C5C684
	0x03241348 LDR X8, [X0 + 0xB8]
	0x0324134C LDR X0, [X8]
	0x03241350 CBZ X0, 0x324138C
	0x03241354 LDR X8, [X0]
	0x03241358 MOV X1, X20
	0x0324135C LDP X20, X19, [X31 + 0x30]
	0x03241360 LDP X22, X21, [X31 + 0x20]
	0x03241364 LDP X4, X3, [X8 + 0x188]
	0x03241368 LDP X24, X23, [X31 + 0x10]
	0x0324136C MOV W2, W31
	0x03241370 LDP X30, X25, [X31], #0x40
	0x03241374 BR X4
	0x03241378 LDP X20, X19, [X31 + 0x30]
	0x0324137C LDP X22, X21, [X31 + 0x20]
	0x03241380 LDP X24, X23, [X31 + 0x10]
	0x03241384 LDP X30, X25, [X31], #0x40
	0x03241388 RET
	0x0324138C BL 0x1C16F20
	0x03241390 STP X30, X23, [X31 - 0x30]!
	0x03241394 STP X22, X21, [X31 + 0x10]
	0x03241398 STP X20, X19, [X31 + 0x20]
	0x0324139C ADRP X22, 0x119B000
	0x032413A0 LDRB W8, [X22 + 0x42A]
	0x032413A4 MOV W19, W2
	0x032413A8 MOV W20, W1
	0x032413AC MOV X21, X0
	0x032413B0 TBNZ X8, 0x0, 0x32413D4
	0x032413B4 ADRP X0, 0xEE0000
	0x032413B8 LDR X0, [X0 + 0x850]
	0x032413BC BL 0x1C16CF4
	0x032413C0 ADRP X0, 0xEE1000
	0x032413C4 LDR X0, [X0 + 0x588]
	0x032413C8 BL 0x1C16CF4
	0x032413CC MOVZ W8, 0x1
	0x032413D0 STRB W8, [X22 + 0x42A]
	0x032413D4 LDR W8, [X21 + 0x10]
	0x032413D8 LDR W22, [X21 + 0x18]
	0x032413DC ADRP X23, 0xEE0000
	0x032413E0 LDR X23, [X23 + 0x850]
	0x032413E4 SUB W9, W8, W19
	0x032413E8 CMP W22, W9
	0x032413EC B.LE 0x3241404
	0x032413F0 MOV X0, X21
	0x032413F4 MOV W1, W19
	0x032413F8 BL 0x324114C
	0x032413FC LDR W22, [X21 + 0x18]
	0x03241400 LDR W8, [X21 + 0x10]
	0x03241404 LDR X23, [X23]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X19, 0x119D000
	015 Move W8, [X19+1052]
	016 Move X21, X5
	017 Move W23, W4
	018 Move X26, X3
	019 Move W24, W2
	020 Move X25, X1
	021 Move [X31+64], X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {37}
	026 Move X0, 0xEB4000
	027 Move X0, [X0+1560]
	028 Call 0x1C17CF4
	029 Move X0, 0xEE3000
	030 Move X0, [X0+2288]
	031 Call 0x1C17CF4
	032 Move X0, 0xEE3000
	033 Move X0, [X0+2256]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X19+1052], W8
	037 Move [X31+72], X31
	038 Compare X21, 0
	039 JumpIfEqual {48}
	040 Move X8, 0xEE3000
	041 Move X8, [X8+2288]
	042 Move X1, [X8]
	043 Move X8, [X21]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W27, [X21+48]
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Move [X31+48], X21
	048 Move [X31+48], X31
	049 Move W29, W31
	050 Move TEMP, 0
	051 Not TEMP
	052 Move W27, TEMP
	053 Add X20, X25, W24
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Add X19, X26, W23
	056 Move [X31+56], X25
	057 Subtract X8, X19, 2
	058 Move [X31+32], X21
	059 Move [X31+40], X31
	060 Move [X31+16], X8
	061 Move X12, 0xEE3000
	062 Move X21, 0xD800
	063 Move X12, [X12+2256]
	064 Move X22, [X31+64]
	065 NotImplemented "Instruction MOVK not yet implemented."
	066 NotImplemented "Instruction MOVK not yet implemented."
	067 NotImplemented "Instruction MOVK not yet implemented."
	068 Move X28, X26
	069 Move X24, X25
	070 Move W8, [X22+57]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 And W31, W29, 0xFFFF
	073 Add W31, W27, 1
	074 Or W8, W25, W28
	075 And X8, X8, 7
	076 Compare X8, 0
	077 JumpIfNotEqual {129}
	078 Subtract X9, X19, X28
	079 Subtract X8, X20, X25
	080 NotImplemented "Instruction CMP not yet implemented."
	081 NotImplemented "Instruction SBFM not yet implemented."
	082 NotImplemented "Instruction CINC not yet implemented."
	083 And X11, X9, 0xFFFFFFFF
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction CSEL not yet implemented."
	086 Add X8, X25, X8
	087 Subtract X25, X8, 7
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move W23, W29
	090 Move X29, X26
	091 Move X26, X19
	092 Move X19, [X24]
	093 And X31, X19, -9223231297218904064
	094 And X8, X19, -576188069258921984
	095 Xor X8, X8, X21
	096 And X31, X8, 0xFFFF
	097 And X9, X8, 0xFFFFFFFF
	098 Compare X9, 0
	099 JumpIfEqual {108}
	100 Move X9, X8
	101 ShiftRight X9, 59
	102 And X9, X9, 0x7FFFFFFF
	103 Compare X9, 0
	104 JumpIfEqual {108}
	105 And X8, X8, 0xFFFFFFFFFFFF
	106 Compare X8, 0
	107 JumpIfNotEqual {121}
	108 Move X0, [X12]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {116}
	112 Move X22, X12
	113 Call 0x1C17DFC
	114 Move X0, [X22]
	115 Move X12, X22
	116 Move X8, [X0+184]
	117 And X9, X19, -287953294993589248
	118 Move X8, [X8+32]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X19, [X24]
	121 Add X24, X24, 8
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move [X28+8], X19
	124 Move X22, [X31+64]
	125 Move X19, X26
	126 Move X26, X29
	127 Move W29, W23
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move TEMP, X27
	130 And TEMP, TEMP, -2147483648
	131 Compare TEMP, -2147483648
	132 JumpIfNotEqual {136}
	133 Move W27, [X24+1]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X25, X24
	136 Move [X31+24], X19
	137 Move X25, X24
	138 Move W19, [X22+57]
	139 Move W8, [X25+1]
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Or W9, W27, W8
	142 NotImplemented "Instruction BFM not yet implemented."
	143 NotImplemented "Instruction CSEL not yet implemented."
	144 And W8, W27, 0xF800
	145 Move W9, 0xD800
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move W8, W27
	148 ShiftRight W8, 10
	149 And W8, W8, 0x7FFF
	150 NotImplemented "Instruction CMP not yet implemented."
	151 And W31, W29, 0xFFFF
	152 Move X8, [X31+16]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 NotImplemented "Instruction STRH not yet implemented."
	155 And W31, W29, 0xFFFF
	156 Move [X31+8], X26
	157 Move X8, 0xEB4000
	158 Move X8, [X8+1560]
	159 Move W1, 2
	160 Move X22, X12
	161 Move X0, [X8]
	162 Call 0x1C17D6C
	163 Compare X0, 0
	164 JumpIfEqual {650}
	165 Move W8, [X0+24]
	166 Move X26, X0
	167 Compare W19, 0
	168 JumpIfEqual {203}
	169 Compare W8, 0
	170 JumpIfEqual {649}
	171 Move X19, [X31+24]
	172 Move W23, W27
	173 Move W9, W29
	174 ShiftRight W9, 8
	175 And W9, W9, 0x7FFFFFFF
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move W8, W29
	178 Move [X26+32], W9
	179 Move X19, [X31+24]
	180 And W31, W29, 0xFFFF
	181 Move [X31+8], X26
	182 Move X8, 0xEB4000
	183 Move X8, [X8+1560]
	184 Move W1, 2
	185 Move X23, X12
	186 Move X0, [X8]
	187 Call 0x1C17D6C
	188 Compare X0, 0
	189 JumpIfEqual {650}
	190 Move W8, [X0+24]
	191 Move X22, X0
	192 Compare W19, 0
	193 JumpIfEqual {244}
	194 Compare W8, 0
	195 JumpIfEqual {649}
	196 Move X19, [X31+24]
	197 Move W9, W29
	198 ShiftRight W9, 8
	199 And W9, W9, 0x7FFFFFFF
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move W8, W29
	202 Move [X22+32], W9
	203 Compare W8, 0
	204 JumpIfEqual {649}
	205 Move X19, [X31+24]
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move [X26+32], W29
	208 Move W23, W27
	209 Move W8, W29
	210 ShiftRight W8, 8
	211 And W8, W8, 0x7FFF
	212 Move X27, [X31+40]
	213 Move [X26+33], W8
	214 Compare X27, 0
	215 JumpIfNotEqual {277}
	216 Move X0, [X31+32]
	217 Compare X0, 0
	218 JumpIfEqual {261}
	219 Move X1, X31
	220 Call Decoder.get_FallbackBuffer, X0
	221 Move [X31+8], X26
	222 Move X8, 0xEB4000
	223 Move X8, [X8+1560]
	224 Move W1, 2
	225 Move X23, X12
	226 Move X0, [X8]
	227 Call 0x1C17D6C
	228 Compare X0, 0
	229 JumpIfEqual {650}
	230 Move W8, [X0+24]
	231 Move X26, X0
	232 Compare W19, 0
	233 JumpIfEqual {299}
	234 Compare W8, 0
	235 JumpIfEqual {649}
	236 Move X19, [X31+24]
	237 Move W9, W27
	238 ShiftRight W9, 8
	239 And W9, W9, 0x7FFFFFFF
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move [X26+32], W9
	242 Move X19, [X31+24]
	243 Move W29, W27
	244 Compare W8, 0
	245 JumpIfEqual {649}
	246 Move X19, [X31+24]
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Move [X22+32], W29
	249 Move W8, W29
	250 ShiftRight W8, 8
	251 And W8, W8, 0x7FFF
	252 Move X26, [X31+40]
	253 Move [X22+33], W8
	254 Compare X26, 0
	255 JumpIfNotEqual {332}
	256 Move X0, [X31+32]
	257 Compare X0, 0
	258 JumpIfEqual {316}
	259 Move X1, X31
	260 Call Decoder.get_FallbackBuffer, X0
	261 Move X8, [X31+64]
	262 Move X0, [X8+48]
	263 Compare X0, 0
	264 JumpIfEqual {650}
	265 Move X8, [X0]
	266 Move X9, [X8+376]
	267 Move X1, [X8+384]
	268 NotImplemented "Instruction BLR not yet implemented."
	269 Move X27, X0
	270 Compare X0, 0
	271 JumpIfEqual {650}
	272 Move X1, [X31+56]
	273 Move X0, X27
	274 Move X2, X19
	275 Move X3, X31
	276 Call DecoderFallbackBuffer.InternalInitialize, X0, X1, X2
	277 Move [X31+72], X28
	278 Move X8, [X27]
	279 Add X3, X31, 72
	280 Move X0, X27
	281 Move X1, X26
	282 Move X9, [X8+424]
	283 Move X4, [X8+432]
	284 Move X2, X25
	285 Move [X31+40], X27
	286 NotImplemented "Instruction BLR not yet implemented."
	287 Move X28, [X31+72]
	288 Move TEMP, X0
	289 And TEMP, TEMP, 1
	290 Compare TEMP, 1
	291 JumpIfNotEqual {606}
	292 Move X26, [X31+8]
	293 Move X12, X22
	294 Move X22, [X31+64]
	295 Move W27, W23
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Move W29, W31
	298 NotImplemented "Instruction STRH not yet implemented."
	299 Compare W8, 0
	300 JumpIfEqual {649}
	301 Move X19, [X31+24]
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Move [X26+32], W27
	304 Move W27, W27
	305 ShiftRight W27, 8
	306 And W27, W27, 0x7FFFFFFF
	307 Move [X26+33], W27
	308 Move X27, [X31+40]
	309 Compare X27, 0
	310 JumpIfNotEqual {364}
	311 Move X0, [X31+32]
	312 Compare X0, 0
	313 JumpIfEqual {348}
	314 Move X1, X31
	315 Call Decoder.get_FallbackBuffer, X0
	316 Move X8, [X31+64]
	317 Move X0, [X8+48]
	318 Compare X0, 0
	319 JumpIfEqual {650}
	320 Move X8, [X0]
	321 Move X9, [X8+376]
	322 Move X1, [X8+384]
	323 NotImplemented "Instruction BLR not yet implemented."
	324 Move X26, X0
	325 Compare X0, 0
	326 JumpIfEqual {650}
	327 Move X1, [X31+56]
	328 Move X0, X26
	329 Move X2, X19
	330 Move X3, X31
	331 Call DecoderFallbackBuffer.InternalInitialize, X0, X1, X2
	332 Move [X31+72], X28
	333 Move X8, [X26]
	334 Add X3, X31, 72
	335 Move X0, X26
	336 Move X1, X22
	337 Move X9, [X8+424]
	338 Move X4, [X8+432]
	339 Move X2, X25
	340 Move [X31+40], X26
	341 NotImplemented "Instruction BLR not yet implemented."
	342 Move X28, [X31+72]
	343 Move TEMP, X0
	344 And TEMP, TEMP, 1
	345 Compare TEMP, 1
	346 JumpIfNotEqual {606}
	347 Move W29, W27
	348 Move X8, [X31+64]
	349 Move X0, [X8+48]
	350 Compare X0, 0
	351 JumpIfEqual {650}
	352 Move X8, [X0]
	353 Move X9, [X8+376]
	354 Move X1, [X8+384]
	355 NotImplemented "Instruction BLR not yet implemented."
	356 Move X27, X0
	357 Compare X0, 0
	358 JumpIfEqual {650}
	359 Move X1, [X31+56]
	360 Move X0, X27
	361 Move X2, X19
	362 Move X3, X31
	363 Call DecoderFallbackBuffer.InternalInitialize, X0, X1, X2
	364 Move [X31+72], X28
	365 Move X8, [X27]
	366 Add X3, X31, 72
	367 Move X0, X27
	368 Move X1, X26
	369 Move X9, [X8+424]
	370 Move X4, [X8+432]
	371 Move X2, X25
	372 Move [X31+40], X27
	373 NotImplemented "Instruction BLR not yet implemented."
	374 Move X28, [X31+72]
	375 Move TEMP, X0
	376 And TEMP, TEMP, 1
	377 Compare TEMP, 1
	378 JumpIfNotEqual {634}
	379 Move W29, W31
	380 Move X26, [X31+8]
	381 Move X22, [X31+64]
	382 Move X12, X23
	383 NotImplemented "Instruction CMP not yet implemented."
	384 Move TEMP, 0
	385 Not TEMP
	386 Move W27, TEMP
	387 Move TEMP, 0
	388 Not TEMP
	389 Move W27, TEMP
	390 Move X22, [X31+64]
	391 Move X24, X31
	392 Move X28, X26
	393 Compare X21, 0
	394 JumpIfNotEqual {404}
	395 Move W29, W31
	396 Move TEMP, 0
	397 Not TEMP
	398 Move W27, TEMP
	399 Move X25, X24
	400 Move X21, [X31+32]
	401 Move X24, [X31+40]
	402 Compare X21, 0
	403 JumpIfEqual {407}
	404 Move W8, [X21+40]
	405 Compare W8, 0
	406 JumpIfEqual {568}
	407 And W31, W29, 0xFFFF
	408 Move X8, 0xEB3000
	409 Move X23, X19
	410 Move W19, [X22+57]
	411 Move X8, [X8+1560]
	412 Move W1, 2
	413 Move X20, X26
	414 Move X0, [X8]
	415 Call 0x1C17D6C
	416 Compare X0, 0
	417 JumpIfEqual {650}
	418 Move W8, [X0+24]
	419 Move X26, X0
	420 Compare W19, 0
	421 JumpIfEqual {432}
	422 Compare W8, 0
	423 JumpIfEqual {649}
	424 Move X22, [X31+64]
	425 Move W9, W29
	426 ShiftRight W9, 8
	427 And W9, W9, 0x7FFFFFFF
	428 NotImplemented "Instruction CMP not yet implemented."
	429 Move W8, W29
	430 Move X19, X23
	431 Move [X26+32], W9
	432 Compare W8, 0
	433 JumpIfEqual {649}
	434 NotImplemented "Instruction CMP not yet implemented."
	435 Move [X26+32], W29
	436 Move X22, [X31+64]
	437 Move X19, X23
	438 Move W8, W29
	439 ShiftRight W8, 8
	440 And W8, W8, 0x7FFF
	441 Move [X26+33], W8
	442 Compare X24, 0
	443 JumpIfNotEqual {464}
	444 Compare X21, 0
	445 JumpIfEqual {449}
	446 Move X0, X21
	447 Move X1, X31
	448 Call Decoder.get_FallbackBuffer, X0
	449 Move X0, [X22+48]
	450 Compare X0, 0
	451 JumpIfEqual {650}
	452 Move X8, [X0]
	453 Move X9, [X8+376]
	454 Move X1, [X8+384]
	455 NotImplemented "Instruction BLR not yet implemented."
	456 Move X24, X0
	457 Compare X0, 0
	458 JumpIfEqual {650}
	459 Move X1, [X31+56]
	460 Move X0, X24
	461 Move X2, X19
	462 Move X3, X31
	463 Call DecoderFallbackBuffer.InternalInitialize, X0, X1, X2
	464 Move [X31+72], X28
	465 Move X8, [X24]
	466 Add X3, X31, 72
	467 Move X0, X24
	468 Move X1, X26
	469 Move X9, [X8+424]
	470 Move X4, [X8+432]
	471 Move X2, X25
	472 NotImplemented "Instruction BLR not yet implemented."
	473 Move X28, [X31+72]
	474 Move TEMP, X0
	475 And TEMP, TEMP, 1
	476 Compare TEMP, 1
	477 JumpIfNotEqual {490}
	478 Move X26, X20
	479 Move TEMP, X27
	480 And TEMP, TEMP, -2147483648
	481 Compare TEMP, -2147483648
	482 JumpIfEqual {565}
	483 Compare X24, 0
	484 JumpIfNotEqual {527}
	485 Compare X21, 0
	486 JumpIfEqual {512}
	487 Move X0, X21
	488 Move X1, X31
	489 Call Decoder.get_FallbackBuffer, X0
	490 NotImplemented "Instruction CMP not yet implemented."
	491 Move TEMP, 2
	492 Not TEMP
	493 Move X8, TEMP
	494 NotImplemented "Instruction CINC not yet implemented."
	495 Move X0, X24
	496 Move X1, X31
	497 Add X19, X8, X25
	498 Call DecoderFallbackBuffer.InternalReset, X0
	499 NotImplemented "Instruction CMP not yet implemented."
	500 NotImplemented "Instruction CSET not yet implemented."
	501 Move X0, X22
	502 Move X1, X21
	503 Move X3, X31
	504 Move X26, X20
	505 Call Encoding.ThrowCharsOverflow, X0, X1, X2
	506 Move TEMP, X27
	507 And TEMP, TEMP, -2147483648
	508 Compare TEMP, -2147483648
	509 JumpIfEqual {511}
	510 Add X25, X19, 3
	511 Add X25, X19, 2
	512 Move X0, [X22+48]
	513 Compare X0, 0
	514 JumpIfEqual {650}
	515 Move X8, [X0]
	516 Move X9, [X8+376]
	517 Move X1, [X8+384]
	518 NotImplemented "Instruction BLR not yet implemented."
	519 Move X24, X0
	520 Compare X0, 0
	521 JumpIfEqual {650}
	522 Move X1, [X31+56]
	523 Move X0, X24
	524 Move X2, X19
	525 Move X3, X31
	526 Call DecoderFallbackBuffer.InternalInitialize, X0, X1, X2
	527 Move X8, 0xEB3000
	528 Move X8, [X8+1560]
	529 Move W1, 1
	530 Move [X31+72], X28
	531 Move X0, [X8]
	532 Call 0x1C17D6C
	533 Compare X0, 0
	534 JumpIfEqual {650}
	535 Move W8, [X0+24]
	536 Move X1, X0
	537 Compare W8, 0
	538 JumpIfEqual {649}
	539 Move [X1+32], W27
	540 Move X8, [X24]
	541 Add X3, X31, 72
	542 Move X0, X24
	543 Move X2, X25
	544 Move X9, [X8+424]
	545 Move X4, [X8+432]
	546 NotImplemented "Instruction BLR not yet implemented."
	547 Move X28, [X31+72]
	548 Move TEMP, X0
	549 And TEMP, TEMP, 1
	550 Compare TEMP, 1
	551 JumpIfNotEqual {556}
	552 Move W29, W31
	553 Move TEMP, 0
	554 Not TEMP
	555 Move W27, TEMP
	556 Move X0, X24
	557 Move X1, X31
	558 Call DecoderFallbackBuffer.InternalReset, X0
	559 NotImplemented "Instruction CMP not yet implemented."
	560 NotImplemented "Instruction CSET not yet implemented."
	561 Move X0, X22
	562 Move X1, X21
	563 Move X3, X31
	564 Call Encoding.ThrowCharsOverflow, X0, X1, X2
	565 Move W29, W31
	566 Compare X21, 0
	567 JumpIfEqual {574}
	568 Move X8, [X31+56]
	569 Subtract W8, W25, W8
	570 Move [X21+44], W8
	571 Move X8, [X31+48]
	572 NotImplemented "Instruction STRH not yet implemented."
	573 Move [X21+48], W27
	574 Subtract X8, X28, X26
	575 NotImplemented "Instruction CMP not yet implemented."
	576 Move X20, [X31+160]
	577 Move X19, [X31+168]
	578 Move X22, [X31+144]
	579 Move X21, [X31+152]
	580 Move X24, [X31+128]
	581 Move X23, [X31+136]
	582 Move X26, [X31+112]
	583 Move X25, [X31+120]
	584 Move X28, [X31+96]
	585 Move X27, [X31+104]
	586 Move X29, [X31+80]
	587 Move X30, [X31+88]
	588 NotImplemented "Instruction CINC not yet implemented."
	589 Move X0, X8
	590 ShiftRight X0, 1
	591 And X0, X0, 0x7FFFFFFF
	592 Add X31, X31, 176
	593 Return X0
	594 Move X21, [X31+32]
	595 NotImplemented "Instruction CMP not yet implemented."
	596 NotImplemented "Instruction CSET not yet implemented."
	597 Move X0, X22
	598 Move X1, X21
	599 Move X3, X31
	600 Subtract X25, X24, 1
	601 Call Encoding.ThrowCharsOverflow, X0, X1, X2
	602 Move W29, W31
	603 Move TEMP, 0
	604 Not TEMP
	605 Move W27, TEMP
	606 Subtract X25, X24, 1
	607 Move X24, [X31+40]
	608 Move X1, X31
	609 Move X0, X24
	610 Call DecoderFallbackBuffer.InternalReset, X0
	611 Move X26, [X31+8]
	612 Move X22, [X31+64]
	613 Move X21, [X31+32]
	614 Move X3, X31
	615 NotImplemented "Instruction CMP not yet implemented."
	616 NotImplemented "Instruction CSET not yet implemented."
	617 Move X0, X22
	618 Move X1, X21
	619 Call Encoding.ThrowCharsOverflow, X0, X1, X2
	620 Move TEMP, 0
	621 Not TEMP
	622 Move W27, TEMP
	623 Compare X21, 0
	624 JumpIfNotEqual {404}
	625 Move X21, [X31+32]
	626 NotImplemented "Instruction CMP not yet implemented."
	627 NotImplemented "Instruction CSET not yet implemented."
	628 Move X0, X22
	629 Move X1, X21
	630 Move X3, X31
	631 Subtract X25, X24, 1
	632 Call Encoding.ThrowCharsOverflow, X0, X1, X2
	633 Move X19, [X31+24]
	634 Subtract X25, X24, 1
	635 Move X24, [X31+40]
	636 Move X1, X31
	637 Move X0, X24
	638 Call DecoderFallbackBuffer.InternalReset, X0
	639 Move X26, [X31+8]
	640 Move X22, [X31+64]
	641 Move X21, [X31+32]
	642 Move X3, X31
	643 NotImplemented "Instruction CMP not yet implemented."
	644 NotImplemented "Instruction CSET not yet implemented."
	645 Move X0, X22
	646 Move X1, X21
	647 Call Encoding.ThrowCharsOverflow, X0, X1, X2
	648 Move W29, W31
	649 Call 0x1C17F28
	650 Call 0x1C17F20
	651 Move X0, X21
	652 Call 0x1C181E0

Method: System.Text.Encoder GetEncoder()

Disassembly:
	0x03241408 SUBS W8, W8, W22
	0x0324140C B.CC 0x3241418
	0x03241410 CMP W8, W19
	0x03241414 B.CS 0x3241420
	0x03241418 MOV X0, X31
	0x0324141C BL 0x339D6EC
	0x03241420 LDR X0, [X23 + 0x20]
	0x03241424 LDR X23, [X21 + 0x8]
	0x03241428 LDRB W8, [X0 + 0x135]
	0x0324142C TBNZ X8, 0x0, 0x3241434
	0x03241430 BL 0x1C5C684
	0x03241434 CMP W19, 0x1
	0x03241438 B.LT 0x324149C
	0x0324143C ADRP X10, 0xFFFFFFFFFD8A9000
	0x03241440 LDR V0, [X10 + 0x79]
	0x03241444 SXTW X8, W22
	0x03241448 MOV W9, W19
	0x0324144C ADD X11, X9, 0x1
	0x03241450 SUB X9, X9, 0x1
	0x03241454 ADD X12, X23, X8, 0x1, LSL
	0x03241458 MOVZ W10, 0x2
	0x0324145C AND X8, X11, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x119C000
	006 Move X21, 0xEE2000
	007 Move W8, [X20+1053]
	008 Move X21, [X21+1008]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEE2000
	015 Move X0, [X0+1008]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1053], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call EncoderNLS..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Text.Decoder GetDecoder()

Disassembly:
	0x03241460 UNIMPLEMENTED
	0x03241464 ADD X9, X12, 0x2
	0x03241468 UNIMPLEMENTED
	0x00000000 INVALID
	0x03241470 UNIMPLEMENTED
	0x03241474 FMOV W10, S3
	0x03241478 TBZ X10, 0x0, 0x3241480
	0x0324147C STURH W20, [X9 - 0x2]
	0x03241480 UNIMPLEMENTED
	0x03241484 TBZ X10, 0x0, 0x324148C
	0x03241488 STRH W20, [X9]
	0x00000000 INVALID
	0x03241490 SUBS X8, X8, 0x2
	0x03241494 ADD X9, X9, 0x4
	0x03241498 B.NE 0x324146C
	0x0324149C LDR W8, [X21 + 0x18]
	0x032414A0 ADD W8, W8, W19
	0x032414A4 STR W8, [X21 + 0x18]
	0x032414A8 LDP X20, X19, [X31 + 0x20]
	0x032414AC LDP X22, X21, [X31 + 0x10]
	0x032414B0 LDP X30, X23, [X31], #0x30
	0x032414B4 RET
	0x032414B8 STP X30, X23, [X31 - 0x30]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x119C000
	006 Move X21, 0xEE2000
	007 Move W8, [X20+1054]
	008 Move X21, [X21+2288]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEE2000
	015 Move X0, [X0+2288]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1054], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X2, X31
	023 Move X20, X0
	024 Call Decoder..ctor, X0, X1
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.Byte[] GetPreamble()

Disassembly:
	0x032414BC STP X22, X21, [X31 + 0x10]
	0x032414C0 STP X20, X19, [X31 + 0x20]
	0x032414C4 ADRP X22, 0x119B000
	0x032414C8 LDRB W8, [X22 + 0x42B]
	0x032414CC MOV W19, W2
	0x032414D0 MOV X20, X1
	0x032414D4 MOV X21, X0
	0x032414D8 TBNZ X8, 0x0, 0x32414FC
	0x032414DC ADRP X0, 0xEE0000
	0x032414E0 LDR X0, [X0 + 0x850]
	0x032414E4 BL 0x1C16CF4
	0x032414E8 ADRP X0, 0xEE1000
	0x032414EC LDR X0, [X0 + 0x588]
	0x032414F0 BL 0x1C16CF4
	0x032414F4 MOVZ W8, 0x1
	0x032414F8 STRB W8, [X22 + 0x42B]
	0x032414FC LDR W8, [X21 + 0x10]
	0x03241500 LDR W22, [X21 + 0x18]
	0x03241504 ADRP X23, 0xEE0000
	0x03241508 LDR X23, [X23 + 0x850]
	0x0324150C SUB W9, W8, W19
	0x03241510 CMP W22, W9
	0x03241514 B.LE 0x324152C
	0x03241518 MOV X0, X21
	0x0324151C MOV W1, W19
	0x03241520 BL 0x324114C
	0x03241524 LDR W22, [X21 + 0x18]
	0x03241528 LDR W8, [X21 + 0x10]
	0x0324152C LDR X23, [X23]
	0x03241530 SUBS W8, W8, W22
	0x03241534 B.CC 0x3241540
	0x03241538 CMP W8, W19
	0x0324153C B.CS 0x3241548
	0x03241540 MOV X0, X31
	0x03241544 BL 0x339D6EC
	0x03241548 LDR X0, [X23 + 0x20]
	0x0324154C LDR X23, [X21 + 0x8]
	0x03241550 LDRB W8, [X0 + 0x135]
	0x03241554 TBNZ X8, 0x0, 0x324155C
	0x03241558 BL 0x1C5C684
	0x0324155C CMP W19, 0x1
	0x03241560 B.LT 0x324157C
	0x03241564 ADD X8, X23, W22, 0x1, SXTW
	0x03241568 MOV W9, W19
	0x0324156C LDRH W10, [X20], #0x2
	0x03241570 SUBS X9, X9, 0x1
	0x03241574 STRH W10, [X8], #0x2
	0x03241578 B.NE 0x324156C
	0x0324157C LDR W8, [X21 + 0x18]
	0x03241580 ADD W8, W8, W19
	0x03241584 STR W8, [X21 + 0x18]
	0x03241588 LDP X20, X19, [X31 + 0x20]
	0x0324158C LDP X22, X21, [X31 + 0x10]
	0x03241590 LDP X30, X23, [X31], #0x30
	0x03241594 RET
	0x03241598 STR X30, [X31 - 0x30]!
	0x0324159C STP X22, X21, [X31 + 0x10]
	0x032415A0 STP X20, X19, [X31 + 0x20]
	0x032415A4 ADRP X21, 0x119B000
	0x032415A8 LDRB W8, [X21 + 0x42C]
	0x032415AC MOV W19, W1
	0x032415B0 MOV X20, X0
	0x032415B4 TBNZ X8, 0x0, 0x32415D8
	0x032415B8 ADRP X0, 0xEE0000
	0x032415BC LDR X0, [X0 + 0x850]
	0x032415C0 BL 0x1C16CF4
	0x032415C4 ADRP X0, 0xEE1000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x119C000
	005 Move W8, [X20+1055]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xEBB000
	012 Move X0, [X0+3272]
	013 Call 0x1C17CF4
	014 Move X0, 0xEB3000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1055], W8
	019 Move W8, [X19+58]
	020 Compare W8, 0
	021 JumpIfEqual {39}
	022 Move X8, 0xEB3000
	023 Move X8, [X8+1560]
	024 Move W19, [X19+57]
	025 Move W1, 2
	026 Move X0, [X8]
	027 Call 0x1C17D6C
	028 Compare X0, 0
	029 JumpIfEqual {81}
	030 Move W8, [X0+24]
	031 Compare W19, 0
	032 JumpIfEqual {69}
	033 Compare W8, 0
	034 JumpIfEqual {80}
	035 Move W9, 254
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move [X0+32], W9
	038 Move W8, 255
	039 Move X8, 0xEBB000
	040 Move X8, [X8+3272]
	041 Move X19, [X8]
	042 Move X8, [X19+56]
	043 Compare X8, 0
	044 JumpIfNotEqual {48}
	045 Move X0, X19
	046 Call 0x1C5D6E0
	047 Move X8, [X19+56]
	048 Move X0, [X8+16]
	049 Move W8, [X0+309]
	050 Move TEMP, X8
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {55}
	054 Call 0x1C5D684
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X8, [X19+56]
	060 Move X0, [X8+16]
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Move X8, [X0+184]
	068 Move X0, [X8]
	069 Compare W8, 0
	070 JumpIfEqual {80}
	071 Move W9, 255
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move [X0+32], W9
	074 Move W8, 254
	075 Move [X0+33], W8
	076 Move X20, [X31+16]
	077 Move X19, [X31+24]
	078 Move X30, [X31+32]
	079 Return X0
	080 Call 0x1C17F28
	081 Call 0x1C17F20

Method: System.ReadOnlySpan`1<System.Byte> get_Preamble()

Disassembly:
	0x032415C8 LDR X0, [X0 + 0x588]
	0x032415CC BL 0x1C16CF4
	0x032415D0 MOVZ W8, 0x1
	0x032415D4 STRB W8, [X21 + 0x42C]
	0x032415D8 LDR W8, [X20 + 0x10]
	0x032415DC LDRSW X21, [X20 + 0x18]
	0x032415E0 ADRP X22, 0xEE0000
	0x032415E4 LDR X22, [X22 + 0x850]
	0x032415E8 SUB W9, W8, W19
	0x032415EC CMP W21, W9
	0x032415F0 B.LE 0x3241604
	0x032415F4 MOV X0, X20
	0x032415F8 MOV W1, W19
	0x032415FC BL 0x324114C
	0x03241600 LDR W8, [X20 + 0x10]
	0x03241604 ADD W9, W21, W19
	0x03241608 STR W9, [X20 + 0x18]
	0x0324160C LDR X22, [X22]
	0x03241610 SUBS W8, W8, W21
	0x03241614 B.CC 0x3241620
	0x03241618 CMP W8, W19
	0x0324161C B.CS 0x3241628
	0x03241620 MOV X0, X31
	0x03241624 BL 0x339D6EC
	0x03241628 LDR X0, [X22 + 0x20]
	0x0324162C LDR X20, [X20 + 0x8]
	0x03241630 LDRB W8, [X0 + 0x135]
	0x03241634 TBNZ X8, 0x0, 0x324163C
	0x03241638 BL 0x1C5C684
	0x0324163C ADD X0, X20, X21, 0x1, LSL
	0x03241640 MOV W1, W19
	0x03241644 LDP X20, X19, [X31 + 0x20]
	0x03241648 LDP X22, X21, [X31 + 0x10]
	0x0324164C LDR X30, [X31], #0x30
	0x03241650 RET
	0x03241654 STR X30, [X31 - 0x20]!
	0x03241658 STP X20, X19, [X31 + 0x10]
	0x0324165C ADRP X19, 0x119B000
	0x03241660 LDRB W8, [X19 + 0x42E]
	0x03241664 MOV X20, X0
	0x03241668 TBNZ X8, 0x0, 0x324168C
	0x0324166C ADRP X0, 0xEDD000
	0x03241670 LDR X0, [X0 + 0xD58]
	0x03241674 BL 0x1C16CF4
	0x03241678 ADRP X0, 0xEDD000
	0x0324167C LDR X0, [X0 + 0xD60]
	0x03241680 BL 0x1C16CF4
	0x03241684 MOVZ W8, 0x1
	0x03241688 STRB W8, [X19 + 0x42E]
	0x0324168C LDR X19, [X20]
	0x03241690 MOVI V0.2D, 0x0
	0x03241694 STP V0, V0, [X20]
	0x03241698 CBZ X19, 0x324173C
	0x0324169C ADRP X8, 0xEDD000
	0x032416A0 LDR X8, [X8 + 0xD60]
	0x032416A4 ADRP X20, 0xEDD000
	0x032416A8 LDR X0, [X8]
	0x032416AC LDR W8, [X0 + 0xE0]
	0x032416B0 LDR X20, [X20 + 0xD58]
	0x032416B4 CBNZ W8, 0x32416BC
	0x032416B8 BL 0x1C16DFC
	0x032416BC LDR X20, [X20]
	0x032416C0 LDR X0, [X20 + 0x20]
	0x032416C4 LDRB W8, [X0 + 0x135]
	0x032416C8 TBNZ X8, 0x0, 0x32416D0
	0x032416CC BL 0x1C5C684
	0x032416D0 LDR X8, [X0 + 0xC0]
	0x032416D4 LDR X0, [X8 + 0x8]
	0x032416D8 LDRB W8, [X0 + 0x135]
	0x032416DC TBNZ X8, 0x0, 0x32416E4
	0x032416E0 BL 0x1C5C684
	0x032416E4 LDR W8, [X0 + 0xE0]
	0x032416E8 CBNZ W8, 0x32416F0
	0x032416EC BL 0x1C16DFC
	0x032416F0 LDR X0, [X20 + 0x20]
	0x032416F4 LDRB W8, [X0 + 0x135]
	0x032416F8 TBNZ X8, 0x0, 0x3241700
	0x032416FC BL 0x1C5C684
	0x03241700 LDR X8, [X0 + 0xC0]
	0x03241704 LDR X0, [X8 + 0x8]
	0x03241708 LDRB W8, [X0 + 0x135]
	0x0324170C TBNZ X8, 0x0, 0x3241714
	0x03241710 BL 0x1C5C684
	0x03241714 LDR X8, [X0 + 0xB8]
	0x03241718 LDR X0, [X8]
	0x0324171C CBZ X0, 0x3241748
	0x03241720 LDR X8, [X0]
	0x03241724 MOV X1, X19
	0x03241728 LDP X20, X19, [X31 + 0x10]
	0x0324172C MOV W2, W31
	0x03241730 LDP X4, X3, [X8 + 0x188]
	0x03241734 LDR X30, [X31], #0x20
	0x03241738 BR X4
	0x0324173C LDP X20, X19, [X31 + 0x10]
	0x03241740 LDR X30, [X31], #0x20
	0x03241744 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x119C000
	007 Move X20, 0xEE2000
	008 Move X21, 0xEB3000
	009 Move W8, [X22+1056]
	010 Move X20, [X20+2296]
	011 Move X21, [X21+1728]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0xEBB000
	018 Move X0, [X0+3272]
	019 Call 0x1C17CF4
	020 Move X0, 0xEE2000
	021 Move X0, [X0+1776]
	022 Call 0x1C17CF4
	023 Move X0, 0xEB3000
	024 Move X0, [X0+1728]
	025 Call 0x1C17CF4
	026 Move X0, 0xEE2000
	027 Move X0, [X0+2296]
	028 Call 0x1C17CF4
	029 Move X0, 0xEE2000
	030 Move X0, [X0+2256]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+1056], W8
	034 Move X0, X19
	035 Move X1, X31
	036 Call "il2cpp_vm_object_is_inst", X0
	037 Move X8, [X21]
	038 Move X21, [X20]
	039 Move X20, X0
	040 Move W9, [X8+224]
	041 Compare W9, 0
	042 JumpIfNotEqual {45}
	043 Move X0, X8
	044 Call 0x1C17DFC
	045 Move X22, 0xEE2000
	046 Move X22, [X22+1776]
	047 Move X0, X21
	048 Move X1, X31
	049 Call Type.GetTypeFromHandle, X0
	050 Move X1, X0
	051 Move X0, X20
	052 Move X2, X31
	053 Call Type.op_Inequality, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {63}
	058 Move X8, [X19]
	059 Move X0, X19
	060 Move X9, [X8+408]
	061 Move X1, [X8+416]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move W8, [X19+58]
	064 Compare W8, 0
	065 JumpIfEqual {79}
	066 Move X20, 0xEE2000
	067 Move X20, [X20+2256]
	068 Move W19, [X19+57]
	069 Move X0, [X20]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {75}
	073 Call 0x1C17DFC
	074 Move X0, [X20]
	075 Move X8, [X0+184]
	076 Compare W19, 0
	077 JumpIfEqual {109}
	078 Move X0, [X8+16]
	079 Move X8, 0xEBB000
	080 Move X8, [X8+3272]
	081 Move X19, [X8]
	082 Move X8, [X19+56]
	083 Compare X8, 0
	084 JumpIfNotEqual {88}
	085 Move X0, X19
	086 Call 0x1C5D6E0
	087 Move X8, [X19+56]
	088 Move X0, [X8+16]
	089 Move W8, [X0+309]
	090 Move TEMP, X8
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {95}
	094 Call 0x1C5D684
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X8, [X19+56]
	100 Move X0, [X8+16]
	101 Move W8, [X0+309]
	102 Move TEMP, X8
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {107}
	106 Call 0x1C5D684
	107 Move X8, [X0+184]
	108 Move X0, [X8]
	109 Move X0, [X8+24]
	110 Move X1, [X22]
	111 Move X20, [X31+32]
	112 Move X19, [X31+40]
	113 Move X22, [X31+16]
	114 Move X21, [X31+24]
	115 Move X30, [X31+48]
	116 Call 0x25BFADC, X0
	117 Return X0

Method: System.Int32 GetMaxByteCount(System.Int32 charCount)

Disassembly:
	0x03241748 BL 0x1C16F20
	0x0324174C STP X31, X1, [X0]
	0x03241750 STR X2, [X0 + 0x10]
	0x03241754 RET
	0x03241758 STP X30, X23, [X31 - 0x30]!
	0x0324175C STP X22, X21, [X31 + 0x10]
	0x03241760 STP X20, X19, [X31 + 0x20]
	0x03241764 ADRP X22, 0x119B000
	0x03241768 LDRB W8, [X22 + 0x430]
	0x0324176C MOV X20, X2
	0x03241770 MOV X21, X1
	0x03241774 MOV X19, X0
	0x03241778 TBNZ X8, 0x0, 0x32417CC
	0x0324177C ADRP X0, 0xEDD000
	0x03241780 LDR X0, [X0 + 0xD50]
	0x03241784 BL 0x1C16CF4
	0x03241788 ADRP X0, 0xEDD000
	0x0324178C LDR X0, [X0 + 0xD68]
	0x03241790 BL 0x1C16CF4
	0x03241794 ADRP X0, 0xEE1000
	0x03241798 LDR X0, [X0 + 0x28]
	0x0324179C BL 0x1C16CF4
	0x032417A0 ADRP X0, 0xEDD000
	0x032417A4 LDR X0, [X0 + 0x2F0]
	0x032417A8 BL 0x1C16CF4
	0x032417AC ADRP X0, 0xEE1000
	0x032417B0 LDR X0, [X0 + 0x920]
	0x032417B4 BL 0x1C16CF4
	0x032417B8 ADRP X0, 0xEE1000
	0x032417BC LDR X0, [X0 + 0x928]
	0x032417C0 BL 0x1C16CF4
	0x032417C4 MOVZ W8, 0x1
	0x032417C8 STRB W8, [X22 + 0x430]
	0x032417CC BL 0x3241948
	0x032417D0 CBZ X0, 0x3241940
	0x032417D4 LDR X8, [X0]
	0x032417D8 MOV W1, W20
	0x032417DC LDR X9, [X8 + 0x358]
	0x032417E0 LDR X2, [X8 + 0x360]
	0x032417E4 BLR X9
	0x032417E8 LDR W8, [X19 + 0x10]
	0x032417EC ADD W22, W0, 0x1
	0x032417F0 CMP W8, W22
	0x032417F4 B.GE 0x32418B8
	0x032417F8 MOV X0, X19
	0x032417FC BL 0x32419EC
	0x03241800 ADRP X8, 0xEDD000
	0x03241804 LDR X8, [X8 + 0xD68]
	0x03241808 LDR X0, [X8]
	0x0324180C LDR W8, [X0 + 0xE0]
	0x03241810 CBNZ W8, 0x3241818
	0x03241814 BL 0x1C16DFC
	0x03241818 ADRP X8, 0xEDD000
	0x0324181C LDR X8, [X8 + 0xD50]
	0x03241820 LDR X23, [X8]
	0x03241824 LDR X0, [X23 + 0x20]
	0x03241828 LDRB W8, [X0 + 0x135]
	0x0324182C TBNZ X8, 0x0, 0x3241834
	0x03241830 BL 0x1C5C684
	0x03241834 LDR X8, [X0 + 0xC0]
	0x03241838 LDR X0, [X8 + 0x8]
	0x0324183C LDRB W8, [X0 + 0x135]
	0x03241840 TBNZ X8, 0x0, 0x3241848
	0x03241844 BL 0x1C5C684

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move TEMP, X1
	005 And TEMP, TEMP, -2147483648
	006 Compare TEMP, -2147483648
	007 JumpIfEqual {39}
	008 Move X19, X0
	009 Move X0, [X0+40]
	010 Compare X0, 0
	011 JumpIfEqual {38}
	012 Move X8, [X0]
	013 Move W10, W1
	014 Add X20, X10, 1
	015 Move X9, [X8+392]
	016 Move X8, [X8+400]
	017 Move X1, X8
	018 NotImplemented "Instruction BLR not yet implemented."
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X0, [X19+40]
	021 Compare X0, 0
	022 JumpIfEqual {38}
	023 Move X8, [X0]
	024 Move X9, [X8+392]
	025 Move X1, [X8+400]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X8, W0
	028 Multiply X20, X20, X8
	029 Move W8, 0x40000000
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W0, W20
	032 ShiftRight W0, 31
	033 And W0, W0, 0x3FFFFFFF
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return X0
	038 Call 0x1C17F20
	039 Move X0, 0xEBB000
	040 Move X0, [X0+1888]
	041 Call 0x1C17D08
	042 Call 0x1C17F10
	043 Move X19, X0
	044 Move X0, 0xEE2000
	045 Move X0, [X0+784]
	046 Call 0x1C17D08
	047 Move X20, X0
	048 Move X0, 0xEDB000
	049 Move X0, [X0+1648]
	050 Move X0, 0xEBB000
	051 Move X0, [X0+1888]
	052 Call 0x1C17D08
	053 Call 0x1C17F10
	054 Move X19, X0
	055 Move X0, 0xEE2000
	056 Move X0, [X0+784]
	057 Call 0x1C17D08
	058 Move X20, X0
	059 Move X0, 0xEE2000
	060 Move X0, [X0+1056]
	061 Call 0x1C17D08
	062 Move X2, X0
	063 Move X0, X19
	064 Move X1, X20
	065 Move X3, X31
	066 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	067 Move X0, 0xEE2000
	068 Move X0, [X0+2304]
	069 Call 0x1C17D08
	070 Move X1, X0
	071 Move X0, X19
	072 Call 0x1C17DEC

Method: System.Int32 GetMaxCharCount(System.Int32 byteCount)

Disassembly:
	0x03241848 LDR W8, [X0 + 0xE0]
	0x0324184C CBNZ W8, 0x3241854
	0x03241850 BL 0x1C16DFC
	0x03241854 LDR X0, [X23 + 0x20]
	0x03241858 LDRB W8, [X0 + 0x135]
	0x0324185C TBNZ X8, 0x0, 0x3241864
	0x03241860 BL 0x1C5C684
	0x03241864 LDR X8, [X0 + 0xC0]
	0x03241868 LDR X0, [X8 + 0x8]
	0x0324186C LDRB W8, [X0 + 0x135]
	0x03241870 TBNZ X8, 0x0, 0x3241878
	0x03241874 BL 0x1C5C684
	0x03241878 LDR X8, [X0 + 0xB8]
	0x0324187C LDR X0, [X8]
	0x03241880 CBZ X0, 0x3241940
	0x03241884 LDR X8, [X0]
	0x03241888 MOV W1, W22
	0x0324188C LDP X9, X2, [X8 + 0x178]
	0x03241890 BLR X9
	0x03241894 STR X0, [X19]
	0x03241898 CBZ X0, 0x32418A8
	0x0324189C LDR W8, [X0 + 0x18]
	0x032418A0 ADD X9, X0, 0x20
	0x032418A4 B 0x32418B0
	0x032418A8 MOV X9, X31
	0x032418AC MOV W8, W31
	0x032418B0 STR X9, [X19 + 0x8]
	0x032418B4 STP W8, W31, [X19 + 0x10]
	0x032418B8 BL 0x3241948
	0x032418BC CBZ X0, 0x3241940
	0x032418C0 LDR X8, [X0]
	0x032418C4 LDP X3, X4, [X19 + 0x8]
	0x032418C8 MOV X1, X21
	0x032418CC MOV X2, X20
	0x032418D0 LDR X9, [X8 + 0x3B8]
	0x032418D4 LDR X5, [X8 + 0x3C0]
	0x032418D8 BLR X9
	0x032418DC LDR W8, [X19 + 0x10]
	0x032418E0 CMP W0, W8
	0x032418E4 B.CS 0x3241944
	0x032418E8 LDR X8, [X19 + 0x8]
	0x032418EC ADRP X9, 0xEDD000
	0x032418F0 MOV W20, W0
	0x032418F4 STRB W31, [X8, W0, SXTW]
	0x032418F8 LDR W8, [X19 + 0x10]
	0x032418FC LDR X9, [X9 + 0x2F0]
	0x03241900 CMP W8, W0
	0x03241904 LDR X21, [X9]
	0x03241908 B.HI 0x3241914
	0x0324190C MOV X0, X31
	0x03241910 BL 0x339D6EC
	0x03241914 LDR X0, [X21 + 0x20]
	0x03241918 LDR X19, [X19 + 0x8]
	0x0324191C LDRB W8, [X0 + 0x135]
	0x03241920 TBNZ X8, 0x0, 0x3241928
	0x03241924 BL 0x1C5C684
	0x03241928 ADD W1, W20, 0x1
	0x0324192C MOV X0, X19
	0x03241930 LDP X20, X19, [X31 + 0x20]
	0x03241934 LDP X22, X21, [X31 + 0x10]
	0x03241938 LDP X30, X23, [X31], #0x30
	0x0324193C RET
	0x03241940 BL 0x1C16F20
	0x03241944 BL 0x1C16F28
	0x03241948 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move TEMP, X1
	005 And TEMP, TEMP, -2147483648
	006 Compare TEMP, -2147483648
	007 JumpIfEqual {38}
	008 Move X20, X0
	009 Move X0, [X0+48]
	010 Compare X0, 0
	011 JumpIfEqual {37}
	012 Move X8, [X0]
	013 And W10, W1, 1
	014 Add W10, W10, W1
	015 Add W19, W10, 1
	016 Move X9, [X8+392]
	017 Move X8, [X8+400]
	018 Move X1, X8
	019 NotImplemented "Instruction BLR not yet implemented."
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X0, [X20+48]
	022 Compare X0, 0
	023 JumpIfEqual {37}
	024 Move X8, [X0]
	025 Move X9, [X8+392]
	026 Move X1, [X8+400]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X8, W0
	029 Multiply X19, X19, X8
	030 Move W8, 0x80000000
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W0, W19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0
	037 Call 0x1C17F20
	038 Move X0, 0xEBB000
	039 Move X0, [X0+1888]
	040 Call 0x1C17D08
	041 Call 0x1C17F10
	042 Move X19, X0
	043 Move X0, 0xEE2000
	044 Move X0, [X0+808]
	045 Call 0x1C17D08
	046 Move X20, X0
	047 Move X0, 0xEDB000
	048 Move X0, [X0+1648]
	049 Move X0, 0xEBB000
	050 Move X0, [X0+1888]
	051 Call 0x1C17D08
	052 Call 0x1C17F10
	053 Move X19, X0
	054 Move X0, 0xEE2000
	055 Move X0, [X0+808]
	056 Call 0x1C17D08
	057 Move X20, X0
	058 Move X0, 0xEE2000
	059 Move X0, [X0+1072]
	060 Call 0x1C17D08
	061 Move X2, X0
	062 Move X0, X19
	063 Move X1, X20
	064 Move X3, X31
	065 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	066 Move X0, 0xEE2000
	067 Move X0, [X0+2312]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X19
	071 Call 0x1C17DEC

Method: System.Boolean Equals(System.Object value)

Disassembly:
	0x0324194C STP X20, X19, [X31 + 0x10]
	0x03241950 ADRP X19, 0x119B000
	0x03241954 ADRP X20, 0xEE1000
	0x03241958 LDRB W8, [X19 + 0x44F]
	0x0324195C LDR X20, [X20 + 0x3F8]
	0x03241960 TBNZ X8, 0x0, 0x3241984
	0x03241964 ADRP X0, 0xEE1000
	0x03241968 LDR X0, [X0 + 0x3F8]
	0x0324196C BL 0x1C16CF4
	0x03241970 ADRP X0, 0xEE1000
	0x03241974 LDR X0, [X0 + 0x828]
	0x03241978 BL 0x1C16CF4
	0x0324197C MOVZ W8, 0x1
	0x03241980 STRB W8, [X19 + 0x44F]
	0x03241984 LDR X8, [X20]
	0x03241988 LDR X8, [X8 + 0xB8]
	0x0324198C LDR X19, [X8 + 0x20]
	0x03241990 BL 0x1C16D44
	0x03241994 CBZ X19, 0x32419A4
	0x03241998 LDR X8, [X20]
	0x0324199C LDR X8, [X8 + 0xB8]
	0x032419A0 B 0x32419D4
	0x032419A4 ADRP X8, 0xEE1000
	0x032419A8 LDR X8, [X8 + 0x828]
	0x032419AC LDR X0, [X8]
	0x032419B0 BL 0x1C16F10
	0x032419B4 MOVZ W1, 0x1
	0x032419B8 MOV X2, X31
	0x032419BC MOV X19, X0
	0x032419C0 BL 0x323A304
	0x032419C4 BL 0x1C16D44
	0x032419C8 LDR X8, [X20]
	0x032419CC LDR X8, [X8 + 0xB8]
	0x032419D0 STR X19, [X8 + 0x20]
	0x032419D4 LDR X19, [X8 + 0x20]
	0x032419D8 BL 0x1C16D44
	0x032419DC MOV X0, X19
	0x032419E0 LDP X20, X19, [X31 + 0x10]
	0x032419E4 LDR X30, [X31], #0x20
	0x032419E8 RET
	0x032419EC STR X30, [X31 - 0x20]!
	0x032419F0 STP X20, X19, [X31 + 0x10]
	0x032419F4 ADRP X19, 0x119B000
	0x032419F8 LDRB W8, [X19 + 0x431]
	0x032419FC MOV X20, X0
	0x03241A00 TBNZ X8, 0x0, 0x3241A24
	0x03241A04 ADRP X0, 0xEDD000
	0x03241A08 LDR X0, [X0 + 0xD50]
	0x03241A0C BL 0x1C16CF4
	0x03241A10 ADRP X0, 0xEDD000
	0x03241A14 LDR X0, [X0 + 0xD68]
	0x03241A18 BL 0x1C16CF4
	0x03241A1C MOVZ W8, 0x1
	0x03241A20 STRB W8, [X19 + 0x431]
	0x03241A24 LDR X19, [X20]
	0x03241A28 CBZ X19, 0x3241AD0
	0x03241A2C ADRP X8, 0xEDD000
	0x03241A30 LDR X8, [X8 + 0xD68]
	0x03241A34 STR X31, [X20]
	0x03241A38 ADRP X20, 0xEDD000
	0x03241A3C LDR X0, [X8]
	0x03241A40 LDR W8, [X0 + 0xE0]
	0x03241A44 LDR X20, [X20 + 0xD50]
	0x03241A48 CBNZ W8, 0x3241A50
	0x03241A4C BL 0x1C16DFC
	0x03241A50 LDR X20, [X20]
	0x03241A54 LDR X0, [X20 + 0x20]
	0x03241A58 LDRB W8, [X0 + 0x135]
	0x03241A5C TBNZ X8, 0x0, 0x3241A64

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x119C000
	006 Move W8, [X21+1057]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xEE2000
	014 Move X0, [X0+2256]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1057], W8
	018 Compare X20, 0
	019 JumpIfEqual {76}
	020 Move X8, 0xEE2000
	021 Move X8, [X8+2256]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Move X8, [X19]
	033 Move X0, X19
	034 Move X9, [X8+808]
	035 Move X1, [X8+816]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Compare X20, 0
	038 JumpIfEqual {82}
	039 Move X8, [X20]
	040 Move W21, W0
	041 Move X0, X20
	042 Move X9, [X8+808]
	043 Move X1, [X8+816]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W8, [X19+58]
	047 Move W9, [X20+58]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W8, [X19+57]
	050 Move W9, [X20+57]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, [X19+40]
	053 Compare X0, 0
	054 JumpIfEqual {82}
	055 Move X8, [X0]
	056 Move X1, [X20+40]
	057 Move X9, [X8+312]
	058 Move X2, [X8+320]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {76}
	064 Move X0, [X19+48]
	065 Compare X0, 0
	066 JumpIfEqual {82}
	067 Move X8, [X0]
	068 Move X1, [X20+48]
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X3, [X8+312]
	072 Move X2, [X8+320]
	073 Move X30, [X31+32]
	074 Move X21, [X31+40]
	075 CallNoReturn X3
	076 Move X20, [X31+16]
	077 Move X19, [X31+24]
	078 Move W0, W31
	079 Move X30, [X31+32]
	080 Move X21, [X31+40]
	081 Return X0
	082 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x03241A60 BL 0x1C5C684
	0x03241A64 LDR X8, [X0 + 0xC0]
	0x03241A68 LDR X0, [X8 + 0x8]
	0x03241A6C LDRB W8, [X0 + 0x135]
	0x03241A70 TBNZ X8, 0x0, 0x3241A78
	0x03241A74 BL 0x1C5C684
	0x03241A78 LDR W8, [X0 + 0xE0]
	0x03241A7C CBNZ W8, 0x3241A84
	0x03241A80 BL 0x1C16DFC
	0x03241A84 LDR X0, [X20 + 0x20]
	0x03241A88 LDRB W8, [X0 + 0x135]
	0x03241A8C TBNZ X8, 0x0, 0x3241A94
	0x03241A90 BL 0x1C5C684
	0x03241A94 LDR X8, [X0 + 0xC0]
	0x03241A98 LDR X0, [X8 + 0x8]
	0x03241A9C LDRB W8, [X0 + 0x135]
	0x03241AA0 TBNZ X8, 0x0, 0x3241AA8
	0x03241AA4 BL 0x1C5C684
	0x03241AA8 LDR X8, [X0 + 0xB8]
	0x03241AAC LDR X0, [X8]
	0x03241AB0 CBZ X0, 0x3241ADC
	0x03241AB4 LDR X8, [X0]
	0x03241AB8 MOV X1, X19
	0x03241ABC LDP X20, X19, [X31 + 0x10]
	0x03241AC0 MOV W2, W31
	0x03241AC4 LDP X4, X3, [X8 + 0x188]
	0x03241AC8 LDR X30, [X31], #0x20
	0x03241ACC BR X4
	0x03241AD0 LDP X20, X19, [X31 + 0x10]
	0x03241AD4 LDR X30, [X31], #0x20
	0x03241AD8 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0]
	006 Move X19, X0
	007 Move X9, [X8+808]
	008 Move X1, [X8+816]
	009 NotImplemented "Instruction BLR not yet implemented."
	010 Move X8, [X19+40]
	011 Compare X8, 0
	012 JumpIfEqual {39}
	013 Move X9, [X8]
	014 Move W20, W0
	015 Move X0, X8
	016 Move X10, [X9+344]
	017 Move X1, [X9+352]
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Move X8, [X19+48]
	020 Compare X8, 0
	021 JumpIfEqual {39}
	022 Move X9, [X8]
	023 Move W21, W0
	024 Move X0, X8
	025 Move X10, [X9+344]
	026 Move X1, [X9+352]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move W8, [X19+58]
	029 Move W9, [X19+57]
	030 Add W10, W21, W20
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Add W10, W10, W0
	034 Add W8, W10, W8
	035 Add W0, W8, W9
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0
	039 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03241ADC BL 0x1C16F20
	0x03241AE0 STP X30, X19, [X31 - 0x10]!
	0x03241AE4 MOVZ W8, 0x1
	0x03241AE8 MOV X1, X31
	0x03241AEC MOV X19, X0
	0x03241AF0 STRB W8, [X0 + 0x21]
	0x03241AF4 BL 0x33BDD8C
	0x03241AF8 LDR X8, [X19]
	0x03241AFC STR W31, [X19 + 0x10]
	0x03241B00 MOV X0, X19
	0x03241B04 LDP X2, X1, [X8 + 0x188]
	0x03241B08 LDP X30, X19, [X31], #0x10
	0x03241B0C BR X2
	0x03241B10 STR X30, [X31 - 0x20]!
	0x03241B14 STP X20, X19, [X31 + 0x10]
	0x03241B18 MOV W20, W1
	0x03241B1C MOVZ W8, 0x1
	0x03241B20 MOV X1, X31
	0x03241B24 MOV X19, X0
	0x03241B28 STRB W8, [X0 + 0x21]
	0x03241B2C BL 0x33BDD8C
	0x03241B30 TBNZ X20, 0x1F, 0x3241B50
	0x03241B34 LDR X8, [X19]
	0x03241B38 STR W20, [X19 + 0x10]
	0x03241B3C MOV X0, X19
	0x03241B40 LDP X20, X19, [X31 + 0x10]
	0x03241B44 LDP X2, X1, [X8 + 0x188]
	0x03241B48 LDR X30, [X31], #0x20
	0x03241B4C BR X2
	0x03241B50 ADRP X0, 0xEBA000
	0x03241B54 LDR X0, [X0 + 0x760]
	0x03241B58 BL 0x1C16D08
	0x03241B5C BL 0x1C16F10
	0x03241B60 MOV X19, X0
	0x03241B64 ADRP X0, 0xEE1000
	0x03241B68 LDR X0, [X0 + 0x930]
	0x03241B6C BL 0x1C16D08
	0x03241B70 MOV X1, X0
	0x03241B74 MOV X0, X19
	0x03241B78 MOV X2, X31
	0x03241B7C BL 0x3316014
	0x03241B80 ADRP X0, 0xEE1000
	0x03241B84 LDR X0, [X0 + 0x938]
	0x03241B88 BL 0x1C16D08
	0x03241B8C MOV X1, X0
	0x03241B90 MOV X0, X19
	0x03241B94 BL 0x1C16DEC
	0x03241B98 STR X30, [X31 - 0x30]!
	0x03241B9C STP X22, X21, [X31 + 0x10]
	0x03241BA0 STP X20, X19, [X31 + 0x20]
	0x03241BA4 ADRP X20, 0x119B000
	0x03241BA8 ADRP X22, 0xEE1000
	0x03241BAC ADRP X21, 0xEE1000
	0x03241BB0 LDRB W8, [X20 + 0x432]
	0x03241BB4 LDR X22, [X22 + 0x940]
	0x03241BB8 LDR X21, [X21 + 0x948]
	0x03241BBC MOV X19, X0
	0x03241BC0 TBNZ X8, 0x0, 0x3241BE4
	0x03241BC4 ADRP X0, 0xEE1000
	0x03241BC8 LDR X0, [X0 + 0x948]
	0x03241BCC BL 0x1C16CF4
	0x03241BD0 ADRP X0, 0xEE1000
	0x03241BD4 LDR X0, [X0 + 0x940]
	0x03241BD8 BL 0x1C16CF4
	0x03241BDC MOVZ W8, 0x1
	0x03241BE0 STRB W8, [X20 + 0x432]
	0x03241BE4 LDR X0, [X22]
	0x03241BE8 BL 0x1C16F10
	0x03241BEC MOV X1, X19
	0x03241BF0 MOV X2, X31
	0x03241BF4 MOV X20, X0
	0x03241BF8 BL 0x33FEFC8
	0x03241BFC STR X20, [X19 + 0x28]
	0x03241C00 LDR X0, [X21]
	0x03241C04 BL 0x1C16F10
	0x03241C08 MOV X1, X19
	0x03241C0C MOV X2, X31
	0x03241C10 MOV X20, X0
	0x03241C14 BL 0x33FD168
	0x03241C18 STR X20, [X19 + 0x30]
	0x03241C1C LDP X20, X19, [X31 + 0x20]
	0x03241C20 LDP X22, X21, [X31 + 0x10]
	0x03241C24 LDR X30, [X31], #0x30
	0x03241C28 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x119C000
	007 Move X20, 0xEE2000
	008 Move X21, 0xEB3000
	009 Move W8, [X19+1058]
	010 Move X20, [X20+2256]
	011 Move X21, [X21+1560]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xEB3000
	017 Move X0, [X0+1560]
	018 Call 0x1C17CF4
	019 Move X0, 0xEE2000
	020 Move X0, [X0+2256]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X19+1058], W8
	024 Move X0, [X20]
	025 Call 0x1C17F10
	026 Move W22, 1
	027 Move W1, 1201
	028 Move X2, X31
	029 Move X19, X0
	030 Move [X0+58], W22
	031 Call Encoding..ctor, X0, X1
	032 Move W8, 256
	033 NotImplemented "Instruction STRH not yet implemented."
	034 Move [X19+58], W22
	035 Move X8, [X20]
	036 Move X8, [X8+184]
	037 Move [X8], X19
	038 Move X0, [X20]
	039 Call 0x1C17F10
	040 Move W1, 1200
	041 Move X2, X31
	042 Move X19, X0
	043 Move [X0+58], W22
	044 Call Encoding..ctor, X0, X1
	045 NotImplemented "Instruction STRH not yet implemented."
	046 Move [X19+58], W22
	047 Move X8, [X20]
	048 Move W1, 2
	049 Move X8, [X8+184]
	050 Move [X8+8], X19
	051 Move X0, [X21]
	052 Call 0x1C17D6C
	053 Compare X0, 0
	054 JumpIfEqual {94}
	055 Move W8, [X0+24]
	056 Compare W8, 0
	057 JumpIfEqual {93}
	058 Move W9, 254
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move [X0+32], W9
	061 Move W8, 255
	062 Move [X0+33], W8
	063 Move X8, [X20]
	064 Move W1, 2
	065 Move X8, [X8+184]
	066 Move [X8+16], X0
	067 Move X0, [X21]
	068 Call 0x1C17D6C
	069 Compare X0, 0
	070 JumpIfEqual {94}
	071 Move W8, [X0+24]
	072 Compare W8, 0
	073 JumpIfEqual {93}
	074 Move W9, 255
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move [X0+32], W9
	077 Move W8, 254
	078 Move [X0+33], W8
	079 Move X8, [X20]
	080 Move X9, 0xD800
	081 NotImplemented "Instruction MOVK not yet implemented."
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X8, [X8+184]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 NotImplemented "Instruction MOVK not yet implemented."
	088 NotImplemented "Instruction MOVK not yet implemented."
	089 Move [X8+24], X0
	090 Move [X8+32], X9
	091 Move X30, [X31+48]
	092 Return 
	093 Call 0x1C17F28
	094 Call 0x1C17F20

