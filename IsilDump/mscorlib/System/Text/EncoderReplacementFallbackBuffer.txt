Type: System.Text.EncoderReplacementFallbackBuffer

Method: System.Void .ctor(System.Text.EncoderReplacementFallback fallback)

Disassembly:
	0x032306DC MOV W19, W3
	0x032306E0 MOV W21, W2
	0x032306E4 MOV X24, X1
	0x032306E8 MOV X22, X0
	0x032306EC TBNZ X8, 0x0, 0x3230710
	0x032306F0 ADRP X0, 0xEF2000
	0x032306F4 LDR X0, [X0 + 0x2C8]
	0x032306F8 BL 0x1C16CF4
	0x032306FC ADRP X0, 0xEF2000
	0x03230700 LDR X0, [X0 + 0x2D0]
	0x03230704 BL 0x1C16CF4
	0x03230708 MOVZ W8, 0x1
	0x0323070C STRB W8, [X25 + 0x3B9]
	0x03230710 CBZ X24, 0x32307FC
	0x03230714 CBZ X23, 0x32307FC
	0x03230718 TBNZ X19, 0x1F, 0x3230854
	0x0323071C TBNZ X21, 0x1F, 0x3230854
	0x03230720 LDR W8, [X24 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Move X1, X31
	007 Move X19, X0
	008 Move [X0+56], D0
	009 Call EncoderFallbackBuffer..ctor, X0
	010 Compare X20, 0
	011 JumpIfEqual {21}
	012 Move X0, [X20+16]
	013 Move X2, X31
	014 Move X1, X0
	015 Call String.Concat, X0, X1
	016 Move [X19+48], X0
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Return 
	021 Call 0x1C17F20

Method: System.Boolean Fallback(System.Char charUnknown, System.Int32 index)

Disassembly:
	0x032307E0 ADRP X0, 0xEF2000
	0x032307E4 LDR X0, [X0 + 0x318]
	0x032307E8 BL 0x1C16D08
	0x032307EC MOV X20, X0
	0x032307F0 ADRP X0, 0xEEB000
	0x032307F4 LDR X0, [X0 + 0x660]
	0x032307F8 B 0x32308EC
	0x032307FC ADRP X8, 0xEF2000
	0x03230800 ADRP X9, 0xEF2000
	0x03230804 LDR X8, [X8 + 0x2D8]
	0x03230808 LDR X9, [X9 + 0x308]
	0x0323080C CMP X24, 0x0
	0x03230810 CSEL X0, X9, X8, EQ
	0x03230814 BL 0x1C16D08
	0x03230818 MOV X19, X0
	0x0323081C ADRP X0, 0xEC8000
	0x03230820 LDR X0, [X0 + 0x528]
	0x03230824 BL 0x1C16D08
	0x03230828 BL 0x1C16F10
	0x0323082C MOV X20, X0
	0x03230830 ADRP X0, 0xEF2000
	0x03230834 LDR X0, [X0 + 0x2E0]
	0x03230838 BL 0x1C16D08
	0x0323083C MOV X2, X0
	0x03230840 MOV X0, X20
	0x03230844 MOV X1, X19
	0x03230848 MOV X3, X31
	0x0323084C BL 0x3315F7C
	0x03230850 B 0x32308A8
	0x03230854 ADRP X8, 0xEF2000
	0x03230858 ADRP X9, 0xEF2000
	0x0323085C LDR X8, [X8 + 0x328]
	0x03230860 LDR X9, [X9 + 0x300]
	0x03230864 CMP W21, 0x0
	0x03230868 CSEL X0, X9, X8, LT
	0x0323086C BL 0x1C16D08
	0x03230870 MOV X19, X0
	0x03230874 ADRP X0, 0xECB000
	0x03230878 LDR X0, [X0 + 0x760]
	0x0323087C BL 0x1C16D08
	0x03230880 BL 0x1C16F10
	0x03230884 MOV X20, X0
	0x03230888 ADRP X0, 0xEEB000
	0x0323088C LDR X0, [X0 + 0x670]
	0x03230890 BL 0x1C16D08
	0x03230894 MOV X2, X0
	0x03230898 MOV X0, X20
	0x0323089C MOV X1, X19
	0x032308A0 MOV X3, X31
	0x032308A4 BL 0x3311888
	0x032308A8 ADRP X0, 0xEF2000
	0x032308AC LDR X0, [X0 + 0x3D0]
	0x032308B0 BL 0x1C16D08
	0x032308B4 MOV X1, X0
	0x032308B8 MOV X0, X20
	0x032308BC BL 0x1C16DEC
	0x032308C0 ADRP X0, 0xECB000
	0x032308C4 LDR X0, [X0 + 0x760]
	0x032308C8 BL 0x1C16D08
	0x032308CC BL 0x1C16F10
	0x032308D0 MOV X19, X0
	0x032308D4 ADRP X0, 0xEF2000
	0x032308D8 LDR X0, [X0 + 0x308]
	0x032308DC BL 0x1C16D08
	0x032308E0 MOV X20, X0
	0x032308E4 ADRP X0, 0xEF2000
	0x032308E8 LDR X0, [X0 + 0xE0]
	0x032308EC BL 0x1C16D08
	0x032308F0 MOV X2, X0
	0x032308F4 MOV X0, X19
	0x032308F8 MOV X1, X20
	0x032308FC MOV X3, X31
	0x03230900 BL 0x3311888
	0x03230904 ADRP X0, 0xEF2000
	0x03230908 LDR X0, [X0 + 0x3D0]
	0x0323090C BL 0x1C16D08
	0x03230910 MOV X1, X0
	0x03230914 MOV X0, X19
	0x03230918 BL 0x1C16DEC
	0x0323091C STR X30, [X31 - 0x20]!
	0x03230920 STP X20, X19, [X31 + 0x10]
	0x03230924 CBZ X1, 0x3230950
	0x03230928 CBZ X3, 0x3230950
	0x0323092C TBNZ X2, 0x1F, 0x32309A8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x11AD000
	007 Move W8, [X21+949]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEC6000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+949], W8
	019 Move W8, [X19+56]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X22, 0xEC6000
	022 Move X22, [X22+368]
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move W0, W20
	029 Move X1, X31
	030 Call Char.IsHighSurrogate, X0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {83}
	035 Move W8, [X19+56]
	036 Move TEMP, X8
	037 And TEMP, TEMP, -2147483648
	038 Compare TEMP, -2147483648
	039 JumpIfEqual {83}
	040 Move X0, [X19+48]
	041 Compare X0, 0
	042 JumpIfEqual {108}
	043 Move W8, [X19+60]
	044 Move X2, X31
	045 Add W1, W8, 1
	046 Call String.get_Chars, X0, X1
	047 Move X8, [X22]
	048 Move W21, W0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move W0, W21
	055 Move X1, X31
	056 Call Char.IsLowSurrogate, X0
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {83}
	061 Move X0, [X19+48]
	062 Compare X0, 0
	063 JumpIfEqual {108}
	064 Move W8, [X19+60]
	065 Move X2, X31
	066 Add W1, W8, 1
	067 Call String.get_Chars, X0, X1
	068 Move X8, [X22]
	069 Move W21, W0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {75}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move W0, W20
	076 Move W1, W21
	077 Move X2, X31
	078 Call Char.ConvertToUtf32, X0, X1
	079 Move W1, W0
	080 Move X0, X19
	081 Move X2, X31
	082 Call EncoderFallbackBuffer.ThrowLastCharRecursive, X0, X1
	083 And W1, W20, 0xFFFF
	084 Move X0, X19
	085 Move X2, X31
	086 Call EncoderFallbackBuffer.ThrowLastCharRecursive, X0, X1
	087 Move X8, [X19+48]
	088 Compare X8, 0
	089 JumpIfEqual {108}
	090 Move W8, [X8+16]
	091 Move TEMP, 0
	092 Not TEMP
	093 Move W9, TEMP
	094 Move X22, [X31+16]
	095 Move X21, [X31+24]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Add W10, W8, 1
	098 NotImplemented "Instruction CINC not yet implemented."
	099 NotImplemented "Instruction SBFM not yet implemented."
	100 Move [X19+56], W8
	101 Move [X19+60], W9
	102 Move X20, [X31+32]
	103 Move X19, [X31+40]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 NotImplemented "Instruction CSET not yet implemented."
	106 Move X30, [X31+48]
	107 Return X0
	108 Call 0x1C17F20

Method: System.Boolean Fallback(System.Char charUnknownHigh, System.Char charUnknownLow, System.Int32 index)

Disassembly:
	0x03230930 TBNZ X4, 0x1F, 0x32309A8
	0x03230934 LDR X8, [X0]
	0x03230938 LDP X20, X19, [X31 + 0x10]
	0x0323093C MOV X5, X31
	0x03230940 LDR X7, [X8 + 0x308]
	0x03230944 LDR X6, [X8 + 0x310]
	0x03230948 LDR X30, [X31], #0x20
	0x0323094C BR X7
	0x03230950 ADRP X8, 0xEF2000
	0x03230954 ADRP X9, 0xEF2000
	0x03230958 LDR X8, [X8 + 0x2D8]
	0x0323095C LDR X9, [X9 + 0x308]
	0x03230960 CMP X1, 0x0
	0x03230964 CSEL X0, X9, X8, EQ
	0x03230968 BL 0x1C16D08
	0x0323096C MOV X19, X0
	0x03230970 ADRP X0, 0xEC8000
	0x03230974 LDR X0, [X0 + 0x528]
	0x03230978 BL 0x1C16D08
	0x0323097C BL 0x1C16F10
	0x03230980 MOV X20, X0
	0x03230984 ADRP X0, 0xEF2000
	0x03230988 LDR X0, [X0 + 0x2E0]
	0x0323098C BL 0x1C16D08
	0x03230990 MOV X2, X0
	0x03230994 MOV X0, X20
	0x03230998 MOV X1, X19
	0x0323099C MOV X3, X31
	0x032309A0 BL 0x3315F7C
	0x032309A4 B 0x32309FC
	0x032309A8 ADRP X8, 0xEF2000
	0x032309AC ADRP X9, 0xEF2000
	0x032309B0 LDR X8, [X8 + 0x328]
	0x032309B4 LDR X9, [X9 + 0x310]
	0x032309B8 CMP W4, 0x0
	0x032309BC CSEL X0, X9, X8, LT
	0x032309C0 BL 0x1C16D08
	0x032309C4 MOV X19, X0
	0x032309C8 ADRP X0, 0xECB000
	0x032309CC LDR X0, [X0 + 0x760]
	0x032309D0 BL 0x1C16D08
	0x032309D4 BL 0x1C16F10
	0x032309D8 MOV X20, X0
	0x032309DC ADRP X0, 0xEEB000
	0x032309E0 LDR X0, [X0 + 0x670]
	0x032309E4 BL 0x1C16D08
	0x032309E8 MOV X2, X0
	0x032309EC MOV X0, X20
	0x032309F0 MOV X1, X19
	0x032309F4 MOV X3, X31
	0x032309F8 BL 0x3311888
	0x032309FC ADRP X0, 0xEF2000
	0x03230A00 LDR X0, [X0 + 0x3D8]
	0x03230A04 BL 0x1C16D08
	0x03230A08 MOV X1, X0
	0x03230A0C MOV X0, X20
	0x03230A10 BL 0x1C16DEC
	0x03230A14 STP X30, X23, [X31 - 0x30]!
	0x03230A18 STP X22, X21, [X31 + 0x10]
	0x03230A1C STP X20, X19, [X31 + 0x20]
	0x03230A20 ADRP X23, 0x11AC000
	0x03230A24 LDRB W8, [X23 + 0x3BA]
	0x03230A28 MOV W20, W3
	0x03230A2C MOV W19, W2
	0x03230A30 MOV X22, X1
	0x03230A34 MOV X21, X0
	0x03230A38 TBNZ X8, 0x0, 0x3230A50
	0x03230A3C ADRP X0, 0xEC5000
	0x03230A40 LDR X0, [X0 + 0x278]
	0x03230A44 BL 0x1C16CF4
	0x03230A48 MOVZ W8, 0x1
	0x03230A4C STRB W8, [X23 + 0x3BA]
	0x03230A50 CBZ X22, 0x3230AC0
	0x03230A54 TBNZ X20, 0x1F, 0x3230B08
	0x03230A58 TBNZ X19, 0x1F, 0x3230B08
	0x03230A5C LDR W8, [X22 + 0x18]
	0x03230A60 SUB W9, W8, W19
	0x03230A64 CMP W9, W20
	0x03230A68 B.LT 0x3230B74
	0x03230A6C CBZ W20, 0x3230A9C
	0x03230A70 ADD X9, X22, 0x20
	0x03230A74 CMP W8, 0x0
	0x03230A78 CSEL X8, X31, X9, EQ
	0x03230A7C ADD X0, X8, W19, SXTW
	0x03230A80 MOV W1, W20
	0x03230A84 MOV X2, X21
	0x03230A88 LDP X20, X19, [X31 + 0x20]
	0x03230A8C LDP X22, X21, [X31 + 0x10]
	0x03230A90 MOV X3, X31
	0x03230A94 LDP X30, X23, [X31], #0x30
	0x03230A98 B 0x322DAF4
	0x03230A9C ADRP X8, 0xEC5000
	0x03230AA0 LDR X8, [X8 + 0x278]
	0x03230AA4 LDP X20, X19, [X31 + 0x20]
	0x03230AA8 LDP X22, X21, [X31 + 0x10]
	0x03230AAC LDR X8, [X8]
	0x03230AB0 LDR X8, [X8 + 0xB8]
	0x03230AB4 LDR X0, [X8]
	0x03230AB8 LDP X30, X23, [X31], #0x30
	0x03230ABC RET
	0x03230AC0 ADRP X0, 0xEC8000
	0x03230AC4 LDR X0, [X0 + 0x528]
	0x03230AC8 BL 0x1C16D08
	0x03230ACC BL 0x1C16F10
	0x03230AD0 MOV X19, X0
	0x03230AD4 ADRP X0, 0xEF2000
	0x03230AD8 LDR X0, [X0 + 0x308]
	0x03230ADC BL 0x1C16D08
	0x03230AE0 MOV X20, X0
	0x03230AE4 ADRP X0, 0xEF2000
	0x03230AE8 LDR X0, [X0 + 0x2E0]
	0x03230AEC BL 0x1C16D08
	0x03230AF0 MOV X2, X0
	0x03230AF4 MOV X0, X19
	0x03230AF8 MOV X1, X20
	0x03230AFC MOV X3, X31
	0x03230B00 BL 0x3315F7C
	0x03230B04 B 0x3230BB8
	0x03230B08 ADRP X8, 0xEEB000
	0x03230B0C ADRP X9, 0xECE000
	0x03230B10 LDR X8, [X8 + 0x648]
	0x03230B14 LDR X9, [X9 + 0x130]
	0x03230B18 CMP W19, 0x0
	0x03230B1C CSEL X0, X9, X8, LT
	0x03230B20 BL 0x1C16D08
	0x03230B24 MOV X19, X0
	0x03230B28 ADRP X0, 0xECB000
	0x03230B2C LDR X0, [X0 + 0x760]
	0x03230B30 BL 0x1C16D08
	0x03230B34 BL 0x1C16F10
	0x03230B38 MOV X20, X0
	0x03230B3C ADRP X0, 0xEEB000
	0x03230B40 LDR X0, [X0 + 0x670]
	0x03230B44 BL 0x1C16D08
	0x03230B48 MOV X2, X0
	0x03230B4C MOV X0, X20

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x11AD000
	009 Move X22, 0xEC6000
	010 Move W8, [X23+950]
	011 Move X22, [X22+368]
	012 Move W20, W2
	013 Move W21, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xEC6000
	020 Move X0, [X0+368]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+950], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move W0, W21
	030 Move X1, X31
	031 Call Char.IsHighSurrogate, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {82}
	036 Move X0, [X22]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move W0, W20
	042 Move X1, X31
	043 Call Char.IsLowSurrogate, X0
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {113}
	048 Move W8, [X19+56]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, [X22]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move W0, W21
	056 Move W1, W20
	057 Move X2, X31
	058 Call Char.ConvertToUtf32, X0, X1
	059 Move W1, W0
	060 Move X0, X19
	061 Move X2, X31
	062 Call EncoderFallbackBuffer.ThrowLastCharRecursive, X0, X1
	063 Move X8, [X19+48]
	064 Compare X8, 0
	065 JumpIfEqual {156}
	066 Move W8, [X8+16]
	067 Move TEMP, 0
	068 Not TEMP
	069 Move W9, TEMP
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X30, [X31+16]
	073 Move X23, [X31+24]
	074 Move [X19+56], W8
	075 Move [X19+60], W9
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CSET not yet implemented."
	080 Add X31, X31, 64
	081 Return X0
	082 Move W8, 0xD800
	083 Move [X31+12], W8
	084 Move X19, 0xEC4000
	085 Move X19, [X19+1880]
	086 Move X0, X19
	087 Call 0x1C17D08
	088 Add X1, X31, 12
	089 Call 0x1C17E04
	090 Move X20, X0
	091 Move W8, 0xDBFF
	092 Move X0, X19
	093 Move [X31+8], W8
	094 Call 0x1C17D08
	095 Add X1, X31, 8
	096 Call 0x1C17E04
	097 Move X19, X0
	098 Move X0, 0xEF3000
	099 Move X0, [X0+880]
	100 Call 0x1C17D08
	101 Move X1, X20
	102 Move X2, X19
	103 Move X3, X31
	104 Call SR.Format, X0, X1, X2
	105 Move X19, X0
	106 Move X0, 0xECC000
	107 Move X0, [X0+1888]
	108 Call 0x1C17D08
	109 Call 0x1C17F10
	110 Move X20, X0
	111 Move X0, 0xEF3000
	112 Move X0, [X0+888]
	113 Move W8, 0xDC00
	114 Move [X31+12], W8
	115 Move X19, 0xEC4000
	116 Move X19, [X19+1880]
	117 Move X0, X19
	118 Call 0x1C17D08
	119 Add X1, X31, 12
	120 Call 0x1C17E04
	121 Move X20, X0
	122 Move W8, 0xDFFF
	123 Move X0, X19
	124 Move [X31+8], W8
	125 Call 0x1C17D08
	126 Add X1, X31, 8
	127 Call 0x1C17E04
	128 Move X19, X0
	129 Move X0, 0xEF3000
	130 Move X0, [X0+880]
	131 Call 0x1C17D08
	132 Move X1, X20
	133 Move X2, X19
	134 Move X3, X31
	135 Call SR.Format, X0, X1, X2
	136 Move X19, X0
	137 Move X0, 0xECC000
	138 Move X0, [X0+1888]
	139 Call 0x1C17D08
	140 Call 0x1C17F10
	141 Move X20, X0
	142 Move X0, 0xEF3000
	143 Move X0, [X0+896]
	144 Call 0x1C17D08
	145 Move X1, X0
	146 Move X0, X20
	147 Move X2, X19
	148 Move X3, X31
	149 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	150 Move X0, 0xEF3000
	151 Move X0, [X0+904]
	152 Call 0x1C17D08
	153 Move X1, X0
	154 Move X0, X20
	155 Call 0x1C17DEC
	156 Call 0x1C17F20

Method: System.Char GetNextChar()

Disassembly:
	0x03230B50 MOV X1, X19
	0x03230B54 MOV X3, X31
	0x03230B58 BL 0x3311888
	0x03230B5C ADRP X0, 0xEF2000
	0x03230B60 LDR X0, [X0 + 0x3E0]
	0x03230B64 BL 0x1C16D08
	0x03230B68 MOV X1, X0
	0x03230B6C MOV X0, X20
	0x03230B70 BL 0x1C16DEC
	0x03230B74 ADRP X0, 0xECB000
	0x03230B78 LDR X0, [X0 + 0x760]
	0x03230B7C BL 0x1C16D08
	0x03230B80 BL 0x1C16F10
	0x03230B84 MOV X19, X0
	0x03230B88 ADRP X0, 0xEF2000
	0x03230B8C LDR X0, [X0 + 0x308]
	0x03230B90 BL 0x1C16D08
	0x03230B94 MOV X20, X0
	0x03230B98 ADRP X0, 0xEF2000
	0x03230B9C LDR X0, [X0 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+56]
	003 Move W9, [X0+60]
	004 Subtract W8, W8, 1
	005 Add W1, W9, 1
	006 Move [X0+56], W8
	007 Move [X0+60], W1
	008 Move TEMP, 0x80000000
	009 Not TEMP
	010 Move W9, TEMP
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move TEMP, 0
	013 Not TEMP
	014 Move W8, TEMP
	015 Move [X0+56], W8
	016 Move W0, W31
	017 Move X30, [X31+16]
	018 Return X0
	019 Move X0, [X0+48]
	020 Compare X0, 0
	021 JumpIfEqual {26}
	022 Move X2, X31
	023 Move X30, [X31+16]
	024 Call String.get_Chars, X0, X1
	025 Return X0
	026 Call 0x1C17F20

Method: System.Boolean MovePrevious()

Disassembly:
	0x03230BA0 BL 0x1C16D08
	0x03230BA4 MOV X2, X0
	0x03230BA8 MOV X0, X19
	0x03230BAC MOV X1, X20
	0x03230BB0 MOV X3, X31
	0x03230BB4 BL 0x3311888
	0x03230BB8 ADRP X0, 0xEF2000
	0x03230BBC LDR X0, [X0 + 0x3E0]
	0x03230BC0 BL 0x1C16D08
	0x03230BC4 MOV X1, X0
	0x03230BC8 MOV X0, X19
	0x03230BCC BL 0x1C16DEC

ISIL:
	001 Move W8, [X0+56]
	002 Add W31, W8, 1
	003 Move W9, [X0+60]
	004 Move TEMP, X9
	005 And TEMP, TEMP, -2147483648
	006 Compare TEMP, -2147483648
	007 JumpIfEqual {14}
	008 Subtract W9, W9, 1
	009 Add W8, W8, 1
	010 Move [X0+56], W8
	011 Move [X0+60], W9
	012 Move W0, 1
	013 Return X0
	014 Move W0, W31
	015 Return X0

Method: System.Int32 get_Remaining()

Disassembly:
	0x03230BD0 STP X30, X21, [X31 - 0x20]!
	0x03230BD4 STP X20, X19, [X31 + 0x10]
	0x03230BD8 ADRP X20, 0x11AC000

ISIL:
	001 Move W8, [X0+56]
	002 NotImplemented "Instruction BIC not yet implemented."
	003 Return X0

Method: System.Void Reset()

Disassembly:
	0x03230BDC ADRP X21, 0xEF2000
	0x03230BE0 LDRB W8, [X20 + 0x3BB]
	0x03230BE4 LDR X21, [X21 + 0x3E8]
	0x03230BE8 MOV X19, X0
	0x03230BEC TBNZ X8, 0x0, 0x3230C04

ISIL:
	001 NotImplemented "Instruction MOVI not yet implemented."
	002 Move [X0+16], X31
	003 Move [X0+56], D0
	004 Move [X0+42], W31
	005 Return 

