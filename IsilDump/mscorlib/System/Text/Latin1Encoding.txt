Type: System.Text.Latin1Encoding

Method: System.Void .ctor()

Disassembly:
	0x0323209C BL 0x1C16CF4
	0x032320A0 ADRP X0, 0xEF0000
	0x032320A4 LDR X0, [X0 + 0x498]

ISIL:
	001 Move W1, 0x6FAF
	002 Move X2, X31
	003 Call Encoding..ctor, X0, X1
	004 Return 

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x032320A8 BL 0x1C16CF4
	0x032320AC ADRP X0, 0xECE000
	0x032320B0 LDR X0, [X0 + 0x150]
	0x032320B4 BL 0x1C16CF4
	0x032320B8 MOVZ W8, 0x1
	0x032320BC STRB W8, [X20 + 0x3CA]
	0x032320C0 MOV X0, X19
	0x032320C4 MOV X1, X31
	0x032320C8 BL 0x33BDD8C
	0x032320CC CBZ X21, 0x32322EC
	0x032320D0 MOV X0, X21
	0x032320D4 MOV X1, X31
	0x032320D8 BL 0x32A8830
	0x032320DC CBZ X0, 0x3232294
	0x032320E0 ADRP X28, 0xEF0000
	0x032320E4 ADRP X29, 0xEF0000
	0x032320E8 ADRP X26, 0xECE000
	0x032320EC LDR X28, [X28 + 0x490]
	0x032320F0 LDR X29, [X29 + 0x498]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X2
	007 Move X21, X1
	008 Move W1, 0x6FAF
	009 Move X2, X31
	010 Move X19, X3
	011 Move X22, X0
	012 Call Encoding..ctor, X0, X1
	013 Move X0, X22
	014 Move X1, X21
	015 Move X2, X20
	016 Move X3, X19
	017 Move X20, [X31+32]
	018 Move X19, [X31+40]
	019 Move X22, [X31+16]
	020 Move X21, [X31+24]
	021 Move X4, X31
	022 Move X30, [X31+48]
	023 Call Encoding.DeserializeEncoding, X0, X1, X2
	024 Return 

Method: System.Void System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x032320F4 LDR X26, [X26 + 0x150]
	0x032320F8 MOV X24, X0
	0x032320FC MOV W27, W31
	0x03232100 MOV X20, X31
	0x03232104 MOV W23, W31
	0x03232108 MOVN W22, 0x80000000
	0x0323210C MOV X0, X24
	0x03232110 MOV X1, X31
	0x03232114 BL 0x3291B70
	0x03232118 TBZ X0, 0x0, 0x32321B0
	0x0323211C MOV X0, X24
	0x03232120 MOV X1, X31
	0x03232124 BL 0x3291A04
	0x03232128 LDR X1, [X28]
	0x0323212C MOV X2, X31
	0x03232130 MOV X25, X0
	0x03232134 BL 0x321BA08
	0x03232138 TBNZ X0, 0x0, 0x3232180
	0x0323213C LDR X1, [X29]
	0x03232140 MOV X0, X25
	0x03232144 MOV X2, X31
	0x03232148 BL 0x321BA08
	0x0323214C TBNZ X0, 0x0, 0x3232198
	0x03232150 LDR X1, [X26]
	0x03232154 MOV X0, X25
	0x03232158 MOV X2, X31
	0x0323215C BL 0x321BA08
	0x03232160 TBZ X0, 0x0, 0x323210C
	0x03232164 LDR X1, [X26]
	0x03232168 MOV X0, X21
	0x0323216C MOV X2, X31
	0x03232170 BL 0x32A9B08
	0x03232174 MOV W23, W0
	0x03232178 MOVZ W27, 0x1
	0x0323217C B 0x323210C
	0x03232180 LDR X1, [X28]
	0x03232184 MOV X0, X21
	0x03232188 MOV X2, X31
	0x0323218C BL 0x32A9B08
	0x03232190 MOV W22, W0
	0x03232194 B 0x323210C
	0x03232198 LDR X1, [X29]
	0x0323219C MOV X0, X21
	0x032321A0 MOV X2, X31
	0x032321A4 BL 0x32A9F64
	0x032321A8 MOV X20, X0
	0x032321AC B 0x323210C
	0x032321B0 CBNZ X20, 0x32321C8
	0x032321B4 ADRP X8, 0xEC3000
	0x032321B8 LDR X8, [X8 + 0x278]
	0x032321BC LDR X8, [X8]
	0x032321C0 LDR X8, [X8 + 0xB8]
	0x032321C4 LDR X20, [X8]
	0x032321C8 CMP W22, 0x1
	0x032321CC B.LT 0x3232298
	0x032321D0 CBZ X20, 0x3232294
	0x032321D4 LDR W21, [X20 + 0x10]
	0x032321D8 CMP W21, W22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x11AB000
	008 Move W8, [X23+962]
	009 Move X21, X3
	010 Move X22, X2
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xEF1000
	018 Move X0, [X0+1032]
	019 Call 0x1C17CF4
	020 Move X0, 0xEF1000
	021 Move X0, [X0+1040]
	022 Call 0x1C17CF4
	023 Move X0, 0xEF1000
	024 Move X0, [X0+1048]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+962], W8
	028 Move X0, X20
	029 Move X1, X19
	030 Move X2, X22
	031 Move X3, X21
	032 Move X4, X31
	033 Call Encoding.SerializeEncoding, X0, X1, X2
	034 Compare X19, 0
	035 JumpIfEqual {69}
	036 Move X8, 0xEF1000
	037 Move X8, [X8+1040]
	038 Move X21, 0xEF1000
	039 Move X22, 0xEF1000
	040 Move W2, 1
	041 Move X1, [X8]
	042 Move X21, [X21+1032]
	043 Move X22, [X22+1048]
	044 Move X0, X19
	045 Move X3, X31
	046 Call SerializationInfo.AddValue, X0, X1, X2
	047 Move X8, [X20]
	048 Move X0, X20
	049 Move X9, [X8+808]
	050 Move X1, [X8+816]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X1, [X21]
	053 Move W2, W0
	054 Move X0, X19
	055 Move X3, X31
	056 Call SerializationInfo.AddValue, X0, X1, X2
	057 Move X1, [X22]
	058 Move X0, X19
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X2, X31
	064 Move X3, X31
	065 Move X30, [X31+48]
	066 Move X23, [X31+56]
	067 Call SerializationInfo.AddValue, X0, X1, X2
	068 Return 
	069 Call 0x1C17F20

Method: System.Int32 GetByteCount(System.Char* chars, System.Int32 charCount, System.Text.EncoderNLS encoder)

Disassembly:
	0x032321DC B.GT 0x3232298
	0x032321E0 TBNZ X27, 0x0, 0x323221C
	0x032321E4 ADRP X8, 0xEC1000
	0x032321E8 LDR X8, [X8 + 0x5A8]
	0x032321EC LDR X0, [X8]
	0x032321F0 LDR W8, [X0 + 0xE0]
	0x032321F4 CBNZ W8, 0x32321FC
	0x032321F8 BL 0x1C16DFC
	0x032321FC MOVZ W0, 0x10
	0x03232200 MOV W1, W21
	0x03232204 MOV X2, X31
	0x03232208 BL 0x337EDF0
	0x0323220C MOV W1, W22
	0x03232210 MOV X2, X31
	0x03232214 BL 0x337EE94
	0x03232218 MOV W23, W0
	0x0323221C TBNZ X23, 0x1F, 0x32322B8
	0x03232220 CMP W23, W22
	0x03232224 B.GT 0x32322B8
	0x03232228 LDR W8, [X20 + 0x10]
	0x0323222C CMP W23, W8
	0x03232230 B.LT 0x32322B8
	0x03232234 STR W22, [X19 + 0x28]
	0x03232238 ADRP X8, 0xECA000
	0x0323223C LDR X8, [X8 + 0x8D8]
	0x03232240 MOV W1, W23
	0x03232244 LDR X0, [X8]
	0x03232248 BL 0x1C16D6C
	0x0323224C STR X0, [X19 + 0x10]
	0x03232250 LDR W4, [X20 + 0x10]
	0x03232254 MOV X2, X0
	0x03232258 MOV X0, X20
	0x0323225C MOV W1, W31
	0x03232260 MOV W3, W31
	0x03232264 MOV X5, X31
	0x03232268 BL 0x322D7E4
	0x0323226C LDR W8, [X20 + 0x10]
	0x03232270 STR X31, [X19 + 0x18]
	0x03232274 LDP X22, X21, [X31 + 0x40]
	0x03232278 LDP X24, X23, [X31 + 0x30]
	0x0323227C STR W8, [X19 + 0x20]
	0x03232280 LDP X20, X19, [X31 + 0x50]
	0x03232284 LDP X26, X25, [X31 + 0x20]
	0x03232288 LDP X28, X27, [X31 + 0x10]
	0x0323228C LDP X29, X30, [X31], #0x60
	0x03232290 RET
	0x03232294 BL 0x1C16F20
	0x03232298 ADRP X0, 0xEEB000
	0x0323229C LDR X0, [X0 + 0x2E0]
	0x032322A0 BL 0x1C16D08
	0x032322A4 BL 0x1C16F10
	0x032322A8 MOV X19, X0
	0x032322AC ADRP X0, 0xEF0000
	0x032322B0 LDR X0, [X0 + 0x4A0]
	0x032322B4 B 0x32322D4
	0x032322B8 ADRP X0, 0xEEB000
	0x032322BC LDR X0, [X0 + 0x2E0]
	0x032322C0 BL 0x1C16D08
	0x032322C4 BL 0x1C16F10
	0x032322C8 MOV X19, X0
	0x032322CC ADRP X0, 0xEF0000
	0x032322D0 LDR X0, [X0 + 0x4A8]
	0x032322D4 BL 0x1C16D08
	0x032322D8 MOV X1, X0
	0x032322DC MOV X0, X19
	0x032322E0 MOV X2, X31
	0x032322E4 BL 0x329F100
	0x032322E8 B 0x323231C
	0x032322EC ADRP X0, 0xEC6000
	0x032322F0 LDR X0, [X0 + 0x528]
	0x032322F4 BL 0x1C16D08
	0x032322F8 BL 0x1C16F10
	0x032322FC MOV X19, X0
	0x03232300 ADRP X0, 0xEEB000
	0x03232304 LDR X0, [X0 + 0x2D8]
	0x03232308 BL 0x1C16D08
	0x0323230C MOV X1, X0
	0x03232310 MOV X0, X19
	0x03232314 MOV X2, X31
	0x03232318 BL 0x330E100
	0x0323231C ADRP X0, 0xEF0000
	0x03232320 LDR X0, [X0 + 0x4B0]
	0x03232324 BL 0x1C16D08
	0x03232328 MOV X1, X0
	0x0323232C MOV X0, X19
	0x03232330 BL 0x1C16DEC
	0x03232334 STR X30, [X31 - 0x30]!
	0x03232338 STP X22, X21, [X31 + 0x10]
	0x0323233C STP X20, X19, [X31 + 0x20]
	0x03232340 ADRP X21, 0x11AA000
	0x03232344 LDRB W8, [X21 + 0x3CB]
	0x03232348 MOV X19, X1
	0x0323234C MOV X20, X0
	0x03232350 TBNZ X8, 0x0, 0x323238C
	0x03232354 ADRP X0, 0xEF0000
	0x03232358 LDR X0, [X0 + 0x4B8]
	0x0323235C BL 0x1C16CF4
	0x03232360 ADRP X0, 0xEF0000
	0x03232364 LDR X0, [X0 + 0x490]
	0x03232368 BL 0x1C16CF4
	0x0323236C ADRP X0, 0xEF0000
	0x03232370 LDR X0, [X0 + 0x498]
	0x03232374 BL 0x1C16CF4
	0x03232378 ADRP X0, 0xECE000
	0x0323237C LDR X0, [X0 + 0x150]
	0x03232380 BL 0x1C16CF4
	0x03232384 MOVZ W8, 0x1
	0x03232388 STRB W8, [X21 + 0x3CB]
	0x0323238C CBZ X19, 0x323242C
	0x03232390 ADRP X8, 0xEF0000
	0x03232394 LDR X8, [X8 + 0x490]
	0x03232398 LDR W2, [X20 + 0x28]
	0x0323239C MOV X0, X19
	0x032323A0 MOV X3, X31
	0x032323A4 LDR X1, [X8]
	0x032323A8 BL 0x32A8F28
	0x032323AC LDR X8, [X20 + 0x10]
	0x032323B0 CBZ X8, 0x3232474
	0x032323B4 ADRP X9, 0xECE000
	0x032323B8 LDR X9, [X9 + 0x150]
	0x032323BC LDR W10, [X20 + 0x24]
	0x032323C0 LDR W8, [X8 + 0x18]
	0x032323C4 ADRP X21, 0xEF0000
	0x032323C8 LDR X1, [X9]
	0x032323CC ADRP X22, 0xEF0000
	0x032323D0 LDR X21, [X21 + 0x498]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x11AB000
	011 Move W8, [X23+963]
	012 Move X19, X3
	013 Move W22, W2
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xEF1000
	021 Move X0, [X0+872]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+963], W8
	025 Move [X31+8], X31
	026 Compare X19, 0
	027 JumpIfEqual {37}
	028 Move X0, [X19+16]
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Compare X0, 0
	031 JumpIfEqual {65}
	032 Move X8, 0xEF1000
	033 Move X8, [X8+872]
	034 Move X9, [X0]
	035 Move X8, [X8]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, [X21+40]
	038 Compare X0, 0
	039 JumpIfEqual {45}
	040 Move X8, 0xEF1000
	041 Move X8, [X8+872]
	042 Move X9, [X0]
	043 Move X8, [X8]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X23, X31
	046 Add X22, X20, W22
	047 Move W24, W31
	048 Move X9, [X8+392]
	049 Move X1, [X8+400]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CINC not yet implemented."
	054 Move W0, W24
	055 Move X20, [X31+64]
	056 Move X19, [X31+72]
	057 Move X22, [X31+48]
	058 Move X21, [X31+56]
	059 Move X24, [X31+32]
	060 Move X23, [X31+40]
	061 Move X26, [X31+16]
	062 Move X25, [X31+24]
	063 Move X30, [X31+80]
	064 Return X0
	065 Add X22, X20, W22
	066 Compare W24, 0
	067 JumpIfEqual {91}
	068 Compare X19, 0
	069 JumpIfEqual {142}
	070 Move X0, X19
	071 Move X1, X31
	072 Call Encoder.get_FallbackBuffer, X0
	073 Compare X0, 0
	074 JumpIfEqual {142}
	075 Move X1, X20
	076 Move X2, X22
	077 Move X3, X19
	078 Move W4, W31
	079 Move X5, X31
	080 Move X23, X0
	081 Call EncoderFallbackBuffer.InternalInitialize, X0, X1, X2, X3, X4
	082 Move [X31+8], X20
	083 Move X8, [X23]
	084 Add X2, X31, 8
	085 Move X0, X23
	086 Move W1, W24
	087 Move X9, [X8+472]
	088 Move X3, [X8+480]
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move X26, [X31+8]
	091 Move X23, X31
	092 Move X26, X20
	093 Move W24, W31
	094 Compare X23, 0
	095 JumpIfEqual {100}
	096 Move X0, X23
	097 Move X1, X31
	098 Call EncoderFallbackBuffer.InternalGetNextChar, X0
	099 And W25, W0, 0xFFFF
	100 Move W25, W31
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Compare W25, 0
	103 JumpIfEqual {54}
	104 Compare W25, 0
	105 JumpIfNotEqual {107}
	106 NotImplemented "Instruction LDRH not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Add W24, W24, 1
	109 Compare X23, 0
	110 JumpIfNotEqual {133}
	111 Compare X19, 0
	112 JumpIfEqual {116}
	113 Move X0, X19
	114 Move X1, X31
	115 Call Encoder.get_FallbackBuffer, X0
	116 Move X0, [X21+40]
	117 Compare X0, 0
	118 JumpIfEqual {142}
	119 Move X8, [X0]
	120 Move X9, [X8+376]
	121 Move X1, [X8+384]
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Move X23, X0
	124 Compare X0, 0
	125 JumpIfEqual {142}
	126 Move X0, X23
	127 Move X1, X20
	128 Move X2, X22
	129 Move X3, X19
	130 Move W4, W31
	131 Move X5, X31
	132 Call EncoderFallbackBuffer.InternalInitialize, X0, X1, X2, X3, X4
	133 Move [X31+8], X26
	134 Move X8, [X23]
	135 Add X2, X31, 8
	136 Move X0, X23
	137 Move W1, W25
	138 Move X9, [X8+472]
	139 Move X3, [X8+480]
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Move X26, [X31+8]
	142 Call 0x1C17F20

Method: System.Int32 GetBytes(System.Char* chars, System.Int32 charCount, System.Byte* bytes, System.Int32 byteCount, System.Text.EncoderNLS encoder)

Disassembly:
	0x032323D4 LDR X22, [X22 + 0x4B8]
	0x032323D8 ADD W2, W10, W8
	0x032323DC MOV X0, X19
	0x032323E0 MOV X3, X31
	0x032323E4 BL 0x32A8F28
	0x032323E8 LDR X8, [X20]
	0x032323EC MOV X0, X20
	0x032323F0 LDP X9, X1, [X8 + 0x168]
	0x032323F4 BLR X9
	0x032323F8 LDR X1, [X21]
	0x032323FC MOV X2, X0
	0x03232400 MOV X0, X19
	0x03232404 MOV X3, X31
	0x03232408 BL 0x32A8BF0
	0x0323240C LDR X1, [X22]
	0x03232410 MOV X0, X19
	0x03232414 LDP X20, X19, [X31 + 0x20]
	0x03232418 LDP X22, X21, [X31 + 0x10]
	0x0323241C MOV W2, W31
	0x03232420 MOV X3, X31
	0x03232424 LDR X30, [X31], #0x30
	0x03232428 B 0x32A8F28
	0x0323242C ADRP X0, 0xEC6000
	0x03232430 LDR X0, [X0 + 0x528]
	0x03232434 BL 0x1C16D08
	0x03232438 BL 0x1C16F10
	0x0323243C MOV X19, X0
	0x03232440 ADRP X0, 0xEEB000
	0x03232444 LDR X0, [X0 + 0x2D8]
	0x03232448 BL 0x1C16D08
	0x0323244C MOV X1, X0
	0x03232450 MOV X0, X19
	0x03232454 MOV X2, X31
	0x03232458 BL 0x330E100
	0x0323245C ADRP X0, 0xEF0000
	0x03232460 LDR X0, [X0 + 0x4C0]
	0x03232464 BL 0x1C16D08
	0x03232468 MOV X1, X0
	0x0323246C MOV X0, X19
	0x03232470 BL 0x1C16DEC
	0x03232474 BL 0x1C16F20
	0x03232478 STR X30, [X31 - 0x10]!
	0x0323247C LDR X8, [X0 + 0x10]
	0x03232480 CBZ X8, 0x3232498
	0x03232484 LDR W9, [X0 + 0x24]
	0x03232488 LDR W8, [X8 + 0x18]
	0x0323248C ADD W0, W9, W8
	0x03232490 LDR X30, [X31], #0x10
	0x03232494 RET
	0x03232498 BL 0x1C16F20
	0x0323249C STP X30, X21, [X31 - 0x20]!
	0x032324A0 STP X20, X19, [X31 + 0x10]
	0x032324A4 ADRP X21, 0x11AA000
	0x032324A8 LDRB W8, [X21 + 0x3CC]
	0x032324AC MOV W20, W1
	0x032324B0 MOV X19, X0
	0x032324B4 TBNZ X8, 0x0, 0x32324CC
	0x032324B8 ADRP X0, 0xECA000
	0x032324BC LDR X0, [X0 + 0x8D8]
	0x032324C0 BL 0x1C16CF4
	0x032324C4 MOVZ W8, 0x1
	0x032324C8 STRB W8, [X21 + 0x3CC]
	0x032324CC TBNZ X20, 0x1F, 0x323254C
	0x032324D0 LDR W8, [X19 + 0x28]
	0x032324D4 CMP W8, W20
	0x032324D8 B.LT 0x323257C
	0x032324DC LDP W9, W8, [X19 + 0x20]
	0x032324E0 ADD W9, W9, W8
	0x032324E4 CMP W9, W20
	0x032324E8 B.GT 0x32325AC
	0x032324EC LDR X9, [X19 + 0x10]
	0x032324F0 CBZ X9, 0x3232608
	0x032324F4 LDR W9, [X9 + 0x18]
	0x032324F8 ADD W9, W8, W9
	0x032324FC CMP W9, W20
	0x03232500 B.EQ 0x3232540
	0x03232504 ADRP X9, 0xECA000
	0x03232508 LDR X9, [X9 + 0x8D8]
	0x0323250C SUB W1, W20, W8
	0x03232510 LDR X0, [X9]
	0x03232514 BL 0x1C16D6C
	0x03232518 LDR X8, [X19 + 0x10]
	0x0323251C LDR W4, [X19 + 0x20]
	0x03232520 MOV X20, X0
	0x03232524 MOV W1, W31
	0x03232528 MOV X0, X8
	0x0323252C MOV X2, X20
	0x03232530 MOV W3, W31
	0x03232534 MOV X5, X31
	0x03232538 BL 0x339FCE8
	0x0323253C STR X20, [X19 + 0x10]
	0x03232540 LDP X20, X19, [X31 + 0x10]
	0x03232544 LDP X30, X21, [X31], #0x20
	0x03232548 RET
	0x0323254C ADRP X0, 0xEC9000
	0x03232550 LDR X0, [X0 + 0x760]
	0x03232554 BL 0x1C16D08
	0x03232558 BL 0x1C16F10
	0x0323255C MOV X19, X0
	0x03232560 ADRP X0, 0xECB000
	0x03232564 LDR X0, [X0 + 0xEC8]
	0x03232568 BL 0x1C16D08
	0x0323256C MOV X20, X0
	0x03232570 ADRP X0, 0xEF0000
	0x03232574 LDR X0, [X0 + 0x4C8]
	0x03232578 B 0x32325D8
	0x0323257C ADRP X0, 0xEC9000
	0x03232580 LDR X0, [X0 + 0x760]
	0x03232584 BL 0x1C16D08
	0x03232588 BL 0x1C16F10
	0x0323258C MOV X19, X0
	0x03232590 ADRP X0, 0xECB000
	0x03232594 LDR X0, [X0 + 0xEC8]
	0x03232598 BL 0x1C16D08
	0x0323259C MOV X20, X0
	0x032325A0 ADRP X0, 0xEF0000
	0x032325A4 LDR X0, [X0 + 0x450]
	0x032325A8 B 0x32325D8
	0x032325AC ADRP X0, 0xEC9000
	0x032325B0 LDR X0, [X0 + 0x760]
	0x032325B4 BL 0x1C16D08
	0x032325B8 BL 0x1C16F10
	0x032325BC MOV X19, X0
	0x032325C0 ADRP X0, 0xECB000
	0x032325C4 LDR X0, [X0 + 0xEC8]
	0x032325C8 BL 0x1C16D08
	0x032325CC MOV X20, X0
	0x032325D0 ADRP X0, 0xEEB000
	0x032325D4 LDR X0, [X0 + 0x2A0]
	0x032325D8 BL 0x1C16D08
	0x032325DC MOV X2, X0
	0x032325E0 MOV X0, X19
	0x032325E4 MOV X1, X20
	0x032325E8 MOV X3, X31
	0x032325EC BL 0x3311888
	0x032325F0 ADRP X0, 0xEF0000
	0x032325F4 LDR X0, [X0 + 0x4D0]
	0x032325F8 BL 0x1C16D08
	0x032325FC MOV X1, X0
	0x03232600 MOV X0, X19
	0x03232604 BL 0x1C16DEC
	0x03232608 BL 0x1C16F20
	0x0323260C LDP W9, W8, [X0 + 0x20]
	0x03232610 ADD W0, W9, W8
	0x03232614 RET
	0x03232618 LDR W0, [X0 + 0x28]
	0x0323261C RET
	0x03232620 STP X30, X21, [X31 - 0x20]!
	0x03232624 STP X20, X19, [X31 + 0x10]
	0x03232628 ADRP X20, 0x11AA000
	0x0323262C LDRB W8, [X20 + 0x3CD]
	0x03232630 MOV X19, X0
	0x03232634 TBNZ X8, 0x0, 0x323264C
	0x03232638 ADRP X0, 0xEC3000
	0x0323263C LDR X0, [X0 + 0x278]
	0x03232640 BL 0x1C16CF4
	0x03232644 MOVZ W8, 0x1
	0x03232648 STRB W8, [X20 + 0x3CD]
	0x0323264C LDP W9, W8, [X19 + 0x20]
	0x03232650 ADDS W0, W9, W8
	0x03232654 B.EQ 0x3232678
	0x03232658 MOV X1, X31
	0x0323265C BL 0x32277A4
	0x03232660 MOV X20, X0
	0x03232664 CBZ X0, 0x3232690
	0x03232668 MOV X0, X31
	0x0323266C BL 0x32C1424
	0x03232670 ADD X21, X20, W0, SXTW
	0x03232674 B 0x3232694
	0x03232678 ADRP X8, 0xEC3000
	0x0323267C LDR X8, [X8 + 0x278]
	0x03232680 LDR X8, [X8]
	0x03232684 LDR X8, [X8 + 0xB8]
	0x03232688 LDR X20, [X8]
	0x0323268C B 0x32326E8
	0x03232690 MOV X21, X20
	0x03232694 LDR W2, [X19 + 0x20]
	0x03232698 CMP W2, 0x1
	0x0323269C B.LT 0x32326E0
	0x032326A0 CBZ X20, 0x32326F8
	0x032326A4 LDRSW X8, [X19 + 0x24]
	0x032326A8 LDR W9, [X20 + 0x10]
	0x032326AC ADD W10, W8, W2
	0x032326B0 CMP W10, W9
	0x032326B4 B.HI 0x32326FC
	0x032326B8 LDR X9, [X19 + 0x10]
	0x032326BC CBZ X9, 0x32326F8
	0x032326C0 LDR W10, [X9 + 0x18]
	0x032326C4 CMP W2, W10
	0x032326C8 B.HI 0x32326FC
	0x032326CC CBZ W10, 0x3232758
	0x032326D0 ADD X1, X9, 0x20
	0x032326D4 ADD X0, X21, X8, 0x1, LSL
	0x032326D8 MOV X3, X31
	0x032326DC BL 0x3227300
	0x032326E0 LDR X19, [X19 + 0x18]
	0x032326E4 CBNZ X19, 0x3232694
	0x032326E8 MOV X0, X20
	0x032326EC LDP X20, X19, [X31 + 0x10]
	0x032326F0 LDP X30, X21, [X31], #0x20
	0x032326F4 RET
	0x032326F8 BL 0x1C16F20
	0x032326FC ADRP X0, 0xEC9000
	0x03232700 LDR X0, [X0 + 0x760]
	0x03232704 BL 0x1C16D08
	0x03232708 BL 0x1C16F10
	0x0323270C MOV X19, X0
	0x03232710 ADRP X0, 0xEF0000
	0x03232714 LDR X0, [X0 + 0x4D8]
	0x03232718 BL 0x1C16D08
	0x0323271C MOV X20, X0
	0x03232720 ADRP X0, 0xEE9000
	0x03232724 LDR X0, [X0 + 0x660]
	0x03232728 BL 0x1C16D08

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X23, 0x11AB000
	013 Move W8, [X23+964]
	014 Move X20, X5
	015 Move W24, W4
	016 Move X19, X3
	017 Move W25, W2
	018 Move X21, X1
	019 Move X22, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0xEF1000
	025 Move X0, [X0+872]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+964], W8
	029 Move [X31+8], X31
	030 Compare X20, 0
	031 JumpIfEqual {39}
	032 Move X27, [X20+16]
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Compare X27, 0
	035 JumpIfEqual {76}
	036 Move X8, 0xEF1000
	037 Move X8, [X8+872]
	038 Move X9, [X27]
	039 Move X27, [X22+40]
	040 Compare X27, 0
	041 JumpIfEqual {75}
	042 Move X8, 0xEF1000
	043 Move X8, [X8+872]
	044 Move X9, [X27]
	045 Move W26, W31
	046 Move X8, [X8]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X9, [X8+392]
	049 Move X1, [X8+400]
	050 Move X0, X27
	051 Add X23, X21, W25
	052 NotImplemented "Instruction BLR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X0, [X27+16]
	055 Compare X0, 0
	056 JumpIfEqual {238}
	057 Move W1, W31
	058 Move X2, X31
	059 Call String.get_Chars, X0, X1
	060 And W8, W0, 0xFFFF
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W27, W0
	063 Compare W26, 0
	064 JumpIfEqual {217}
	065 Compare W24, 0
	066 JumpIfNotEqual {72}
	067 Move W2, 1
	068 Move X0, X22
	069 Move X1, X20
	070 Move X3, X31
	071 Call Encoding.ThrowBytesOverflow, X0, X1, X2
	072 Move X26, X19
	073 Move [X26+1], W27
	074 Subtract W24, W24, 1
	075 Move W26, W31
	076 Add X23, X21, W25
	077 Compare W26, 0
	078 JumpIfEqual {113}
	079 Compare X20, 0
	080 JumpIfEqual {238}
	081 Move X0, X20
	082 Move X1, X31
	083 Call Encoder.get_FallbackBuffer, X0
	084 Compare X0, 0
	085 JumpIfEqual {238}
	086 Move W4, 1
	087 Move X1, X21
	088 Move X2, X23
	089 Move X3, X20
	090 Move X5, X31
	091 Move X25, X0
	092 Call EncoderFallbackBuffer.InternalInitialize, X0, X1, X2, X3, X4
	093 Move [X31+8], X21
	094 Move X8, [X25]
	095 Add X2, X31, 8
	096 Move X0, X25
	097 Move W1, W26
	098 Move X9, [X8+472]
	099 Move X3, [X8+480]
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Move X8, [X25]
	102 Move X27, [X31+8]
	103 Move X0, X25
	104 Move X9, [X8+440]
	105 Move X1, [X8+448]
	106 NotImplemented "Instruction BLR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move W2, 1
	109 Move X0, X22
	110 Move X1, X20
	111 Move X3, X31
	112 Call Encoding.ThrowBytesOverflow, X0, X1, X2
	113 Move X25, X31
	114 Move X27, X21
	115 Add X28, X19, W24
	116 Move X26, X19
	117 Compare X25, 0
	118 JumpIfEqual {123}
	119 Move X0, X25
	120 Move X1, X31
	121 Call EncoderFallbackBuffer.InternalGetNextChar, X0
	122 And W24, W0, 0xFFFF
	123 Move W24, W31
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Compare W24, 0
	126 JumpIfEqual {189}
	127 Compare W24, 0
	128 JumpIfNotEqual {130}
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 NotImplemented "Instruction CMP not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move [X26+1], W24
	133 Compare X25, 0
	134 JumpIfNotEqual {157}
	135 Compare X20, 0
	136 JumpIfEqual {140}
	137 Move X0, X20
	138 Move X1, X31
	139 Call Encoder.get_FallbackBuffer, X0
	140 Move X0, [X22+40]
	141 Compare X0, 0
	142 JumpIfEqual {238}
	143 Move X8, [X0]
	144 Move X9, [X8+376]
	145 Move X1, [X8+384]
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Move X25, X0
	148 Compare X0, 0
	149 JumpIfEqual {238}
	150 Move W4, 1
	151 Move X0, X25
	152 Move X1, X21
	153 Move X2, X23
	154 Move X3, X20
	155 Move X5, X31
	156 Call EncoderFallbackBuffer.InternalInitialize, X0, X1, X2, X3, X4
	157 Move [X31+8], X27
	158 Move X8, [X25]
	159 Add X2, X31, 8
	160 Move X0, X25
	161 Move W1, W24
	162 Move X9, [X8+472]
	163 Move X3, [X8+480]
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Move X8, [X25]
	166 Move X27, [X31+8]
	167 Move X0, X25
	168 Move X9, [X8+440]
	169 Move X1, [X8+448]
	170 NotImplemented "Instruction BLR not yet implemented."
	171 Subtract X8, X28, X26
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X0, X25
	174 Move X1, X31
	175 Subtract X27, X27, 2
	176 Call EncoderFallbackBuffer.InternalReset, X0
	177 Compare X25, 0
	178 JumpIfEqual {182}
	179 Move W8, [X25+42]
	180 Compare W8, 0
	181 JumpIfNotEqual {183}
	182 Subtract X27, X27, 2
	183 NotImplemented "Instruction CMP not yet implemented."
	184 NotImplemented "Instruction CSET not yet implemented."
	185 Move X0, X22
	186 Move X1, X20
	187 Move X3, X31
	188 Call Encoding.ThrowBytesOverflow, X0, X1, X2
	189 Compare X20, 0
	190 JumpIfEqual {204}
	191 Compare X25, 0
	192 JumpIfEqual {197}
	193 Move W8, [X25+41]
	194 Compare W8, 0
	195 JumpIfNotEqual {197}
	196 NotImplemented "Instruction STRH not yet implemented."
	197 Subtract X8, X27, X21
	198 NotImplemented "Instruction CMP not yet implemented."
	199 NotImplemented "Instruction CINC not yet implemented."
	200 Move X8, X8
	201 ShiftRight X8, 1
	202 And X8, X8, 0x7FFFFFFF
	203 Move [X20+52], W8
	204 Subtract W0, W26, W19
	205 Move X20, [X31+80]
	206 Move X19, [X31+88]
	207 Move X22, [X31+64]
	208 Move X21, [X31+72]
	209 Move X24, [X31+48]
	210 Move X23, [X31+56]
	211 Move X26, [X31+32]
	212 Move X25, [X31+40]
	213 Move X28, [X31+16]
	214 Move X27, [X31+24]
	215 Move X30, [X31+96]
	216 Return X0
	217 Move X26, X19
	218 NotImplemented "Instruction CMP not yet implemented."
	219 NotImplemented "Instruction CMP not yet implemented."
	220 NotImplemented "Instruction CSET not yet implemented."
	221 Move X0, X22
	222 Move X1, X20
	223 Move X3, X31
	224 Call Encoding.ThrowBytesOverflow, X0, X1, X2
	225 Add X23, X21, W24
	226 Move X8, X21
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move X9, X8
	229 NotImplemented "Instruction LDRH not yet implemented."
	230 NotImplemented "Instruction CMP not yet implemented."
	231 NotImplemented "Instruction CSEL not yet implemented."
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Move [X26+1], W9
	234 Compare X20, 0
	235 JumpIfEqual {204}
	236 NotImplemented "Instruction STRH not yet implemented."
	237 Subtract X8, X8, X21
	238 Call 0x1C17F20

Method: System.Int32 GetCharCount(System.Byte* bytes, System.Int32 count, System.Text.DecoderNLS decoder)

Disassembly:
	0x0323272C MOV X2, X0
	0x03232730 MOV X0, X19

ISIL:
	001 Move W0, W2
	002 Return X0

Method: System.Int32 GetChars(System.Byte* bytes, System.Int32 byteCount, System.Char* chars, System.Int32 charCount, System.Text.DecoderNLS decoder)

Disassembly:
	0x03232734 MOV X1, X20
	0x03232738 MOV X3, X31
	0x0323273C BL 0x3311888
	0x03232740 ADRP X0, 0xEF0000
	0x03232744 LDR X0, [X0 + 0x4E0]
	0x03232748 BL 0x1C16D08
	0x0323274C MOV X1, X0
	0x03232750 MOV X0, X19
	0x03232754 BL 0x1C16DEC
	0x03232758 BL 0x1C16F28
	0x0323275C STR X30, [X31 - 0x30]!
	0x03232760 STP X22, X21, [X31 + 0x10]
	0x03232764 STP X20, X19, [X31 + 0x20]
	0x03232768 ADRP X22, 0x11AA000
	0x0323276C LDRB W8, [X22 + 0x3CE]
	0x03232770 MOV W19, W2
	0x03232774 MOV W20, W1
	0x03232778 MOV X21, X0
	0x0323277C TBNZ X8, 0x0, 0x3232794
	0x03232780 ADRP X0, 0xEF0000
	0x03232784 LDR X0, [X0 + 0x4E8]
	0x03232788 BL 0x1C16CF4
	0x0323278C MOVZ W8, 0x1
	0x03232790 STRB W8, [X22 + 0x3CE]
	0x03232794 TBNZ X20, 0x1F, 0x3232808
	0x03232798 LDP W9, W8, [X21 + 0x20]
	0x0323279C ADD W8, W9, W8
	0x032327A0 CMP W8, W20
	0x032327A4 B.LT 0x3232838
	0x032327A8 TBNZ X19, 0x1F, 0x3232868
	0x032327AC SUB W8, W8, W19
	0x032327B0 CMP W8, W20
	0x032327B4 B.LT 0x3232898

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X5
	007 Move X20, X3
	008 Move X21, X1
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CMP not yet implemented."
	011 NotImplemented "Instruction CSET not yet implemented."
	012 Move X1, X19
	013 Move X3, X31
	014 Move W22, W4
	015 Call Encoding.ThrowCharsOverflow, X0, X1, X2
	016 Move W2, W22
	017 Add X8, X21, W2
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X8, W2
	020 Add X9, X21, 1
	021 Move W10, [X21]
	022 Move X21, X9
	023 Subtract X8, X8, 1
	024 Add X9, X9, 1
	025 NotImplemented "Instruction STRH not yet implemented."
	026 Compare X19, 0
	027 JumpIfEqual {29}
	028 Move [X19+44], W2
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move W0, W2
	034 Move X30, [X31+48]
	035 Return X0

Method: System.Int32 GetMaxByteCount(System.Int32 charCount)

Disassembly:
	0x032327B8 MOV W0, W19
	0x032327BC MOV X1, X31
	0x032327C0 BL 0x32277A4
	0x032327C4 MOV X22, X0
	0x032327C8 CBZ X0, 0x32327DC
	0x032327CC MOV X0, X31
	0x032327D0 BL 0x32C1424
	0x032327D4 ADD X2, X22, W0, SXTW
	0x032327D8 B 0x32327E0
	0x032327DC MOV X2, X22
	0x032327E0 MOV W3, W19
	0x032327E4 MOV X0, X21
	0x032327E8 MOV W1, W20
	0x032327EC MOV W4, W19
	0x032327F0 BL 0x32328F4
	0x032327F4 MOV X0, X22
	0x032327F8 LDP X20, X19, [X31 + 0x20]
	0x032327FC LDP X22, X21, [X31 + 0x10]
	0x03232800 LDR X30, [X31], #0x30
	0x03232804 RET
	0x03232808 ADRP X0, 0xEC9000
	0x0323280C LDR X0, [X0 + 0x760]
	0x03232810 BL 0x1C16D08
	0x03232814 BL 0x1C16F10
	0x03232818 MOV X19, X0
	0x0323281C ADRP X0, 0xEE9000
	0x03232820 LDR X0, [X0 + 0x658]
	0x03232824 BL 0x1C16D08
	0x03232828 MOV X20, X0
	0x0323282C ADRP X0, 0xEF0000
	0x03232830 LDR X0, [X0 + 0xD8]
	0x03232834 B 0x32328C4
	0x03232838 ADRP X0, 0xEC9000
	0x0323283C LDR X0, [X0 + 0x760]
	0x03232840 BL 0x1C16D08
	0x03232844 BL 0x1C16F10
	0x03232848 MOV X19, X0
	0x0323284C ADRP X0, 0xEE9000
	0x03232850 LDR X0, [X0 + 0x658]
	0x03232854 BL 0x1C16D08
	0x03232858 MOV X20, X0
	0x0323285C ADRP X0, 0xEF0000
	0x03232860 LDR X0, [X0 + 0x128]
	0x03232864 B 0x32328C4
	0x03232868 ADRP X0, 0xEC9000
	0x0323286C LDR X0, [X0 + 0x760]
	0x03232870 BL 0x1C16D08
	0x03232874 BL 0x1C16F10
	0x03232878 MOV X19, X0
	0x0323287C ADRP X0, 0xEC9000
	0x03232880 LDR X0, [X0 + 0x768]
	0x03232884 BL 0x1C16D08
	0x03232888 MOV X20, X0
	0x0323288C ADRP X0, 0xEF0000
	0x03232890 LDR X0, [X0]
	0x03232894 B 0x32328C4
	0x03232898 ADRP X0, 0xEC9000
	0x0323289C LDR X0, [X0 + 0x760]
	0x032328A0 BL 0x1C16D08
	0x032328A4 BL 0x1C16F10
	0x032328A8 MOV X19, X0
	0x032328AC ADRP X0, 0xEC9000
	0x032328B0 LDR X0, [X0 + 0x768]
	0x032328B4 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move TEMP, X1
	005 And TEMP, TEMP, -2147483648
	006 Compare TEMP, -2147483648
	007 JumpIfEqual {37}
	008 Move X20, X0
	009 Move X0, [X0+40]
	010 Compare X0, 0
	011 JumpIfEqual {36}
	012 Move X8, [X0]
	013 Move W10, W1
	014 Add X19, X10, 1
	015 Move X9, [X8+392]
	016 Move X8, [X8+400]
	017 Move X1, X8
	018 NotImplemented "Instruction BLR not yet implemented."
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X0, [X20+40]
	021 Compare X0, 0
	022 JumpIfEqual {36}
	023 Move X8, [X0]
	024 Move X9, [X8+392]
	025 Move X1, [X8+400]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X8, W0
	028 Multiply X19, X19, X8
	029 Move W8, 0x80000000
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W0, W19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0
	036 Call 0x1C17F20
	037 Move X0, 0xECA000
	038 Move X0, [X0+1888]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0xEF1000
	043 Move X0, [X0+784]
	044 Call 0x1C17D08
	045 Move X20, X0
	046 Move X0, 0xEEA000
	047 Move X0, [X0+1648]
	048 Move X0, 0xECA000
	049 Move X0, [X0+1888]
	050 Call 0x1C17D08
	051 Call 0x1C17F10
	052 Move X19, X0
	053 Move X0, 0xEF1000
	054 Move X0, [X0+784]
	055 Call 0x1C17D08
	056 Move X20, X0
	057 Move X0, 0xEF1000
	058 Move X0, [X0+1056]
	059 Call 0x1C17D08
	060 Move X2, X0
	061 Move X0, X19
	062 Move X1, X20
	063 Move X3, X31
	064 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	065 Move X0, 0xEF1000
	066 Move X0, [X0+1064]
	067 Call 0x1C17D08
	068 Move X1, X0
	069 Move X0, X19
	070 Call 0x1C17DEC

Method: System.Int32 GetMaxCharCount(System.Int32 byteCount)

Disassembly:
	0x032328B8 MOV X20, X0
	0x032328BC ADRP X0, 0xEF0000
	0x032328C0 LDR X0, [X0 + 0x130]
	0x032328C4 BL 0x1C16D08
	0x032328C8 MOV X2, X0
	0x032328CC MOV X0, X19
	0x032328D0 MOV X1, X20
	0x032328D4 MOV X3, X31
	0x032328D8 BL 0x3311888
	0x032328DC ADRP X0, 0xEF0000
	0x032328E0 LDR X0, [X0 + 0x4F0]
	0x032328E4 BL 0x1C16D08
	0x032328E8 MOV X1, X0
	0x032328EC MOV X0, X19
	0x032328F0 BL 0x1C16DEC
	0x032328F4 STP X30, X27, [X31 - 0x50]!
	0x032328F8 STP X26, X25, [X31 + 0x10]
	0x032328FC STP X24, X23, [X31 + 0x20]
	0x03232900 STP X22, X21, [X31 + 0x30]
	0x03232904 STP X20, X19, [X31 + 0x40]
	0x03232908 ADRP X24, 0x11AA000
	0x0323290C LDRB W8, [X24 + 0x3D1]
	0x03232910 MOV W19, W4
	0x03232914 MOV X20, X3
	0x03232918 MOV X21, X2
	0x0323291C MOV W23, W1
	0x03232920 MOV X22, X0
	0x03232924 TBNZ X8, 0x0, 0x323293C
	0x03232928 ADRP X0, 0xEC1000
	0x0323292C LDR X0, [X0 + 0x5A8]
	0x03232930 BL 0x1C16CF4
	0x03232934 MOVZ W8, 0x1
	0x03232938 STRB W8, [X24 + 0x3D1]
	0x0323293C TBNZ X19, 0x1F, 0x3232A00
	0x03232940 LDP W9, W8, [X22 + 0x20]
	0x03232944 ADD W8, W9, W8
	0x03232948 CMP W8, W23
	0x0323294C B.CC 0x3232A30
	0x03232950 SUB W8, W8, W19
	0x03232954 CMP W8, W23
	0x03232958 B.LT 0x3232A78
	0x0323295C CMP W19, 0x1
	0x03232960 B.LT 0x32329E4
	0x03232964 ADRP X26, 0xEC1000
	0x03232968 LDR X26, [X26 + 0x5A8]
	0x0323296C ADD W27, W19, W23
	0x03232970 MOV W23, W19
	0x03232974 CBZ X22, 0x32329FC
	0x03232978 LDR W8, [X22 + 0x24]
	0x0323297C SUBS W24, W27, W8
	0x03232980 B.MI 0x32329D8
	0x03232984 LDR X0, [X26]
	0x03232988 LDR W25, [X22 + 0x20]
	0x0323298C LDR W8, [X0 + 0xE0]
	0x03232990 CBNZ W8, 0x3232998
	0x03232994 BL 0x1C16DFC
	0x03232998 MOV W0, W24
	0x0323299C MOV W1, W25
	0x032329A0 MOV X2, X31
	0x032329A4 BL 0x337EE94
	0x032329A8 SUB W9, W0, W19
	0x032329AC LDR X8, [X22 + 0x10]
	0x032329B0 CMP W9, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move TEMP, X1
	005 And TEMP, TEMP, -2147483648
	006 Compare TEMP, -2147483648
	007 JumpIfEqual {36}
	008 Move X20, X0
	009 Move X0, [X0+48]
	010 Compare X0, 0
	011 JumpIfEqual {35}
	012 Move X8, [X0]
	013 Move W19, W1
	014 Move X9, [X8+392]
	015 Move X8, [X8+400]
	016 Move X1, X8
	017 NotImplemented "Instruction BLR not yet implemented."
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X0, [X20+48]
	020 Compare X0, 0
	021 JumpIfEqual {35}
	022 Move X8, [X0]
	023 Move X9, [X8+392]
	024 Move X1, [X8+400]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move X8, W0
	027 Multiply X19, X8, X19
	028 Move W8, 0x80000000
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W0, W19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0
	035 Call 0x1C17F20
	036 Move X0, 0xECA000
	037 Move X0, [X0+1888]
	038 Call 0x1C17D08
	039 Call 0x1C17F10
	040 Move X19, X0
	041 Move X0, 0xEF1000
	042 Move X0, [X0+808]
	043 Call 0x1C17D08
	044 Move X20, X0
	045 Move X0, 0xEEA000
	046 Move X0, [X0+1648]
	047 Move X0, 0xECA000
	048 Move X0, [X0+1888]
	049 Call 0x1C17D08
	050 Call 0x1C17F10
	051 Move X19, X0
	052 Move X0, 0xEF1000
	053 Move X0, [X0+808]
	054 Call 0x1C17D08
	055 Move X20, X0
	056 Move X0, 0xEF1000
	057 Move X0, [X0+1072]
	058 Call 0x1C17D08
	059 Move X2, X0
	060 Move X0, X19
	061 Move X1, X20
	062 Move X3, X31
	063 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	064 Move X0, 0xEF1000
	065 Move X0, [X0+1080]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X19
	069 Call 0x1C17DEC

Method: System.Char[] GetBestFitUnicodeToBytesData()

Disassembly:
	0x032329B4 CSEL W5, W19, W0, GE
	0x032329B8 SUB W23, W23, W5
	0x032329BC BIC W1, W9, W9, 0x1F
	0x032329C0 MOV X0, X8
	0x032329C4 MOV X2, X21
	0x032329C8 MOV X3, X20
	0x032329CC MOV W4, W23
	0x032329D0 SUB W19, W19, W5
	0x032329D4 BL 0x32338CC
	0x032329D8 LDR X22, [X22 + 0x18]
	0x032329DC CMP W19, 0x0
	0x032329E0 B.GT 0x3232974
	0x032329E4 LDP X20, X19, [X31 + 0x40]
	0x032329E8 LDP X22, X21, [X31 + 0x30]
	0x032329EC LDP X24, X23, [X31 + 0x20]
	0x032329F0 LDP X26, X25, [X31 + 0x10]
	0x032329F4 LDP X30, X27, [X31], #0x50
	0x032329F8 RET
	0x032329FC BL 0x1C16F20
	0x03232A00 ADRP X0, 0xEC9000
	0x03232A04 LDR X0, [X0 + 0x760]
	0x03232A08 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x11AB000
	005 Move X19, 0xEF1000
	006 Move W8, [X20+965]
	007 Move X19, [X19+1088]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xEF1000
	013 Move X0, [X0+1088]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+965], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03232A0C BL 0x1C16F10
	0x03232A10 MOV X19, X0
	0x03232A14 ADRP X0, 0xEE9000
	0x03232A18 LDR X0, [X0 + 0x648]
	0x03232A1C BL 0x1C16D08
	0x03232A20 MOV X20, X0
	0x03232A24 ADRP X0, 0xEF0000
	0x03232A28 LDR X0, [X0 + 0x4F8]
	0x03232A2C B 0x3232A5C
	0x03232A30 ADRP X0, 0xEC9000
	0x03232A34 LDR X0, [X0 + 0x760]
	0x03232A38 BL 0x1C16D08
	0x03232A3C BL 0x1C16F10
	0x03232A40 MOV X19, X0
	0x03232A44 ADRP X0, 0xEF0000
	0x03232A48 LDR X0, [X0 + 0x280]
	0x03232A4C BL 0x1C16D08
	0x03232A50 MOV X20, X0
	0x03232A54 ADRP X0, 0xEE9000
	0x03232A58 LDR X0, [X0 + 0x660]
	0x03232A5C BL 0x1C16D08
	0x03232A60 MOV X2, X0
	0x03232A64 MOV X0, X19
	0x03232A68 MOV X1, X20
	0x03232A6C MOV X3, X31
	0x03232A70 BL 0x3311888
	0x03232A74 B 0x3232AA8
	0x03232A78 ADRP X0, 0xEC9000
	0x03232A7C LDR X0, [X0 + 0x578]
	0x03232A80 BL 0x1C16D08
	0x03232A84 BL 0x1C16F10
	0x03232A88 MOV X19, X0
	0x03232A8C ADRP X0, 0xEF0000
	0x03232A90 LDR X0, [X0 + 0x500]
	0x03232A94 BL 0x1C16D08
	0x03232A98 MOV X1, X0
	0x03232A9C MOV X0, X19
	0x03232AA0 MOV X2, X31
	0x03232AA4 BL 0x3314A68
	0x03232AA8 ADRP X0, 0xEF0000
	0x03232AAC LDR X0, [X0 + 0x508]
	0x03232AB0 BL 0x1C16D08
	0x03232AB4 MOV X1, X0
	0x03232AB8 MOV X0, X19
	0x03232ABC BL 0x1C16DEC
	0x03232AC0 STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x11AB000
	007 Move X20, 0xEF1000
	008 Move X22, 0xECB000
	009 Move X21, 0xEF1000
	010 Move W8, [X19+966]
	011 Move X20, [X20+1088]
	012 Move X22, [X22+2264]
	013 Move X21, [X21+1096]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xECB000
	019 Move X0, [X0+2264]
	020 Call 0x1C17CF4
	021 Move X0, 0xEF1000
	022 Move X0, [X0+1088]
	023 Call 0x1C17CF4
	024 Move X0, 0xEF1000
	025 Move X0, [X0+1096]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+966], W8
	029 Move X0, [X20]
	030 Call 0x1C17F10
	031 Move W1, 0x6FAF
	032 Move X2, X31
	033 Move X19, X0
	034 Call Encoding..ctor, X0, X1
	035 Move X8, [X20]
	036 Move W1, 604
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X0, [X22]
	040 Call 0x1C17D6C
	041 Move X1, [X21]
	042 Move X2, X31
	043 Move X19, X0
	044 Call RuntimeHelpers.InitializeArray, X0, X1
	045 Move X8, [X20]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X8, [X8+184]
	049 Move [X8+8], X19
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X30, [X31+48]
	053 Return 

