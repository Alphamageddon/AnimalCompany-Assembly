Type: System.Text.EncodingProvider

Method: System.Text.Encoding GetEncoding(System.String name)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Text.Encoding GetEncoding(System.Int32 codepage)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Text.Encoding GetEncoding(System.Int32 codepage, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback)

Disassembly:
	0x03231C84 BL 0x1C16D08
	0x03231C88 ADRP X20, 0xEEC000
	0x03231C8C LDR X20, [X20 + 0x58]
	0x03231C90 MOV X19, X0
	0x03231C94 MOV X0, X20
	0x03231C98 BL 0x1C16D08
	0x03231C9C MOV X1, X0
	0x03231CA0 MOV X0, X19
	0x03231CA4 MOV X2, X31
	0x03231CA8 BL 0x32094D4
	0x03231CAC MOV X19, X0
	0x03231CB0 ADRP X0, 0xECA000
	0x03231CB4 LDR X0, [X0 + 0x760]
	0x03231CB8 BL 0x1C16D08
	0x03231CBC BL 0x1C16F10
	0x03231CC0 MOV X21, X0
	0x03231CC4 MOV X0, X20
	0x03231CC8 BL 0x1C16D08
	0x03231CCC MOV X1, X0
	0x03231CD0 MOV X0, X21
	0x03231CD4 MOV X2, X19
	0x03231CD8 MOV X3, X31
	0x03231CDC BL 0x3311888
	0x03231CE0 ADRP X0, 0xEF1000
	0x03231CE4 LDR X0, [X0 + 0x468]
	0x03231CE8 BL 0x1C16D08
	0x03231CEC MOV X1, X0
	0x03231CF0 MOV X0, X21
	0x03231CF4 BL 0x1C16DEC
	0x03231CF8 CBZ X1, 0x3231D04
	0x03231CFC LDR W3, [X1 + 0x10]
	0x03231D00 B 0x3231D08
	0x03231D04 MOV W3, W31
	0x03231D08 MOVZ W4, 0x10
	0x03231D0C MOV W2, W31
	0x03231D10 B 0x3231D30
	0x03231D14 MOV W4, W2
	0x03231D18 CBZ X1, 0x3231D24
	0x03231D1C LDR W3, [X1 + 0x10]
	0x03231D20 B 0x3231D28
	0x03231D24 MOV W3, W31
	0x03231D28 MOV W2, W31
	0x03231D2C B 0x3231D30
	0x03231D30 STR X30, [X31 - 0x40]!
	0x03231D34 STP X24, X23, [X31 + 0x10]
	0x03231D38 STP X22, X21, [X31 + 0x20]
	0x03231D3C STP X20, X19, [X31 + 0x30]
	0x03231D40 ADRP X24, 0x11AB000
	0x03231D44 LDRB W8, [X24 + 0x3C8]
	0x03231D48 MOV W23, W4
	0x03231D4C MOV W19, W3
	0x03231D50 MOV W20, W2
	0x03231D54 MOV X21, X1
	0x03231D58 MOV X22, X0
	0x03231D5C TBNZ X8, 0x0, 0x3231D8C
	0x03231D60 ADRP X0, 0xECB000
	0x03231D64 LDR X0, [X0 + 0x8D8]
	0x03231D68 BL 0x1C16CF4
	0x03231D6C ADRP X0, 0xEC2000
	0x03231D70 LDR X0, [X0 + 0x5A8]
	0x03231D74 BL 0x1C16CF4
	0x03231D78 ADRP X0, 0xEC4000
	0x03231D7C LDR X0, [X0 + 0x278]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x11AC000
	008 Move W8, [X23+957]
	009 Move X19, X3
	010 Move X20, X2
	011 Move W21, W1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xEF2000
	018 Move X0, [X0+1016]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+957], W8
	022 Move X8, [X22]
	023 Move X0, X22
	024 Move W1, W21
	025 Move X9, [X8+392]
	026 Move X2, [X8+400]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Compare X0, 0
	029 JumpIfEqual {64}
	030 Move X8, [X22]
	031 Move X0, X22
	032 Move W1, W21
	033 Move X9, [X8+392]
	034 Move X2, [X8+400]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Compare X0, 0
	037 JumpIfEqual {73}
	038 Move X8, [X0]
	039 Move X9, [X8+488]
	040 Move X1, [X8+496]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Compare X0, 0
	043 JumpIfEqual {73}
	044 Move X9, 0xEF2000
	045 Move X9, [X9+1016]
	046 Move X8, [X0]
	047 Move X21, X0
	048 Move X1, [X9]
	049 Move W10, [X8+304]
	050 Move W9, [X1+304]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X8, [X8+200]
	053 Add X8, X8, X9
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X0, X21
	057 Move X1, X20
	058 Move X2, X31
	059 Call Encoding.set_EncoderFallback, X0, X1
	060 Move X0, X21
	061 Move X1, X19
	062 Move X2, X31
	063 Call Encoding.set_DecoderFallback, X0, X1
	064 Move X21, X31
	065 Move X0, X21
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Move X23, [X31+56]
	072 Return X0
	073 Call 0x1C17F20
	074 Move X0, X21
	075 Call 0x1C181E0

Method: System.Text.Encoding GetEncodingFromProvider(System.Int32 codepage)

Disassembly:
	0x03231D80 BL 0x1C16CF4
	0x03231D84 MOVZ W8, 0x1
	0x03231D88 STRB W8, [X24 + 0x3C8]
	0x03231D8C MOV X0, X22
	0x03231D90 MOV X1, X31
	0x03231D94 BL 0x33BDD8C
	0x03231D98 TBNZ X23, 0x1F, 0x3231E58
	0x03231D9C TBNZ X19, 0x1F, 0x3231E70
	0x03231DA0 TBNZ X20, 0x1F, 0x3231EEC
	0x03231DA4 CBNZ X21, 0x3231DC0
	0x03231DA8 ADRP X8, 0xEC4000
	0x03231DAC LDR X8, [X8 + 0x278]
	0x03231DB0 LDR X8, [X8]
	0x03231DB4 LDR X8, [X8 + 0xB8]
	0x03231DB8 LDR X21, [X8]
	0x03231DBC CBZ X21, 0x3231F78
	0x03231DC0 LDR W8, [X21 + 0x10]
	0x03231DC4 SUB W8, W8, W19
	0x03231DC8 CMP W8, W20
	0x03231DCC B.LT 0x3231F1C
	0x03231DD0 ADRP X8, 0xEC2000
	0x03231DD4 LDR X8, [X8 + 0x5A8]
	0x03231DD8 MOVN W9, 0x80000000
	0x03231DDC STR W9, [X22 + 0x28]
	0x03231DE0 ADRP X24, 0xECB000
	0x03231DE4 LDR X0, [X8]
	0x03231DE8 LDR W8, [X0 + 0xE0]
	0x03231DEC LDR X24, [X24 + 0x8D8]
	0x03231DF0 CBNZ W8, 0x3231DF8
	0x03231DF4 BL 0x1C16DFC
	0x03231DF8 CMP W23, 0x0
	0x03231DFC MOVZ W8, 0x10
	0x03231E00 CSEL W0, W8, W23, EQ
	0x03231E04 MOV W1, W19
	0x03231E08 MOV X2, X31
	0x03231E0C BL 0x337EDF0
	0x03231E10 LDR X8, [X24]
	0x03231E14 MOV W1, W0
	0x03231E18 MOV X0, X8
	0x03231E1C BL 0x1C16D6C
	0x03231E20 STR X0, [X22 + 0x10]
	0x03231E24 MOV X0, X31
	0x03231E28 STR W19, [X22 + 0x20]
	0x03231E2C BL 0x32C1424
	0x03231E30 LDR X1, [X22 + 0x10]
	0x03231E34 ADD X8, X21, W20, 0x1, UXTW
	0x03231E38 MOV W3, W19
	0x03231E3C LDP X20, X19, [X31 + 0x30]
	0x03231E40 LDP X22, X21, [X31 + 0x20]
	0x03231E44 LDP X24, X23, [X31 + 0x10]
	0x03231E48 ADD X0, X8, W0, SXTW
	0x03231E4C MOV W2, W31
	0x03231E50 LDR X30, [X31], #0x40
	0x03231E54 B 0x3231F7C
	0x03231E58 ADRP X0, 0xEF1000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x11AC000
	006 Move X20, 0xEF2000
	007 Move W8, [X21+958]
	008 Move X20, [X20+1024]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEF2000
	015 Move X0, [X0+1024]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+958], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X21, [X8+8]
	027 Call 0x1C17D44
	028 Compare X21, 0
	029 JumpIfEqual {59}
	030 Move X0, [X20]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X20]
	036 Move X8, [X0+184]
	037 Move X20, [X8+8]
	038 Call 0x1C17D44
	039 Compare X20, 0
	040 JumpIfEqual {66}
	041 Move W8, [X20+24]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move W21, W31
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add X8, X20, W21
	046 Move X0, [X8+32]
	047 Compare X0, 0
	048 JumpIfEqual {66}
	049 Move X8, [X0]
	050 Move W1, W19
	051 Move X9, [X8+392]
	052 Move X2, [X8+400]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Compare X0, 0
	055 JumpIfNotEqual {60}
	056 Move W8, [X20+24]
	057 Add W21, W21, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, X31
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Return X0
	065 Call 0x1C17F28
	066 Call 0x1C17F20

Method: System.Text.Encoding GetEncodingFromProvider(System.String encodingName)

Disassembly:
	0x03231E5C LDR X0, [X0 + 0x470]
	0x03231E60 BL 0x1C16D08
	0x03231E64 ADRP X20, 0xEEC000
	0x03231E68 LDR X20, [X20 + 0x58]
	0x03231E6C B 0x3231E84
	0x03231E70 ADRP X0, 0xEF1000
	0x03231E74 LDR X0, [X0 + 0x478]
	0x03231E78 BL 0x1C16D08
	0x03231E7C ADRP X20, 0xECA000
	0x03231E80 LDR X20, [X20 + 0x768]
	0x03231E84 MOV X19, X0
	0x03231E88 MOV X0, X20
	0x03231E8C BL 0x1C16D08
	0x03231E90 MOV X1, X0
	0x03231E94 MOV X0, X19
	0x03231E98 MOV X2, X31
	0x03231E9C BL 0x32094D4
	0x03231EA0 MOV X19, X0
	0x03231EA4 ADRP X0, 0xECA000
	0x03231EA8 LDR X0, [X0 + 0x760]
	0x03231EAC BL 0x1C16D08
	0x03231EB0 BL 0x1C16F10
	0x03231EB4 MOV X21, X0
	0x03231EB8 MOV X0, X20
	0x03231EBC BL 0x1C16D08
	0x03231EC0 MOV X1, X0
	0x03231EC4 MOV X0, X21
	0x03231EC8 MOV X2, X19
	0x03231ECC MOV X3, X31
	0x03231ED0 BL 0x3311888
	0x03231ED4 ADRP X0, 0xEF1000
	0x03231ED8 LDR X0, [X0 + 0x480]
	0x03231EDC BL 0x1C16D08
	0x03231EE0 MOV X1, X0
	0x03231EE4 MOV X0, X21
	0x03231EE8 BL 0x1C16DEC
	0x03231EEC ADRP X0, 0xECA000
	0x03231EF0 LDR X0, [X0 + 0x760]
	0x03231EF4 BL 0x1C16D08
	0x03231EF8 BL 0x1C16F10
	0x03231EFC MOV X19, X0
	0x03231F00 ADRP X0, 0xEEA000
	0x03231F04 LDR X0, [X0 + 0x658]
	0x03231F08 BL 0x1C16D08
	0x03231F0C MOV X20, X0
	0x03231F10 ADRP X0, 0xEF1000
	0x03231F14 LDR X0, [X0 + 0xD8]
	0x03231F18 B 0x3231F48
	0x03231F1C ADRP X0, 0xECA000
	0x03231F20 LDR X0, [X0 + 0x760]
	0x03231F24 BL 0x1C16D08
	0x03231F28 BL 0x1C16F10
	0x03231F2C MOV X19, X0
	0x03231F30 ADRP X0, 0xECA000
	0x03231F34 LDR X0, [X0 + 0x768]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x11AC000
	006 Move X20, 0xEF2000
	007 Move W8, [X21+959]
	008 Move X20, [X20+1024]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEF2000
	015 Move X0, [X0+1024]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+959], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X21, [X8+8]
	027 Call 0x1C17D44
	028 Compare X21, 0
	029 JumpIfEqual {59}
	030 Move X0, [X20]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X20]
	036 Move X8, [X0+184]
	037 Move X20, [X8+8]
	038 Call 0x1C17D44
	039 Compare X20, 0
	040 JumpIfEqual {66}
	041 Move W8, [X20+24]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move W21, W31
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add X8, X20, W21
	046 Move X0, [X8+32]
	047 Compare X0, 0
	048 JumpIfEqual {66}
	049 Move X8, [X0]
	050 Move X1, X19
	051 Move X9, [X8+376]
	052 Move X2, [X8+384]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Compare X0, 0
	055 JumpIfNotEqual {60}
	056 Move W8, [X20+24]
	057 Add W21, W21, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, X31
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Return X0
	065 Call 0x1C17F28
	066 Call 0x1C17F20

Method: System.Text.Encoding GetEncodingFromProvider(System.Int32 codepage, System.Text.EncoderFallback enc, System.Text.DecoderFallback dec)

Disassembly:
	0x03231F38 BL 0x1C16D08
	0x03231F3C MOV X20, X0
	0x03231F40 ADRP X0, 0xEF1000
	0x03231F44 LDR X0, [X0 + 0x130]
	0x03231F48 BL 0x1C16D08
	0x03231F4C MOV X2, X0
	0x03231F50 MOV X0, X19
	0x03231F54 MOV X1, X20
	0x03231F58 MOV X3, X31
	0x03231F5C BL 0x3311888
	0x03231F60 ADRP X0, 0xEF1000
	0x03231F64 LDR X0, [X0 + 0x480]
	0x03231F68 BL 0x1C16D08
	0x03231F6C MOV X1, X0
	0x03231F70 MOV X0, X19
	0x03231F74 BL 0x1C16DEC
	0x03231F78 BL 0x1C16F20
	0x03231F7C STR X30, [X31 - 0x20]!
	0x03231F80 STP X20, X19, [X31 + 0x10]
	0x03231F84 CMP W3, 0x1
	0x03231F88 B.LT 0x3231FD4
	0x03231F8C CBZ X1, 0x3231FE0
	0x03231F90 LDR W9, [X1 + 0x18]
	0x03231F94 CMP W9, W2
	0x03231F98 B.CC 0x3231FE4
	0x03231F9C ADD W10, W3, W2
	0x03231FA0 CMP W10, W9
	0x03231FA4 B.GT 0x3231FE4
	0x03231FA8 CMP W9, W2
	0x03231FAC B.LS 0x3232040
	0x03231FB0 LDP X20, X19, [X31 + 0x10]
	0x03231FB4 MOV X8, X0
	0x03231FB8 ADD X9, X1, W2, 0x1, SXTW
	0x03231FBC ADD X0, X9, 0x20
	0x03231FC0 MOV X1, X8
	0x03231FC4 MOV W2, W3
	0x03231FC8 MOV X3, X31
	0x03231FCC LDR X30, [X31], #0x20
	0x03231FD0 B 0x3227300
	0x03231FD4 LDP X20, X19, [X31 + 0x10]
	0x03231FD8 LDR X30, [X31], #0x20
	0x03231FDC RET
	0x03231FE0 BL 0x1C16F20
	0x03231FE4 ADRP X0, 0xECA000
	0x03231FE8 LDR X0, [X0 + 0x760]
	0x03231FEC BL 0x1C16D08
	0x03231FF0 BL 0x1C16F10
	0x03231FF4 MOV X19, X0
	0x03231FF8 ADRP X0, 0xEF1000
	0x03231FFC LDR X0, [X0 + 0x288]
	0x03232000 BL 0x1C16D08
	0x03232004 MOV X20, X0
	0x03232008 ADRP X0, 0xEE9000
	0x0323200C LDR X0, [X0 + 0x660]
	0x03232010 BL 0x1C16D08
	0x03232014 MOV X2, X0
	0x03232018 MOV X0, X19
	0x0323201C MOV X1, X20
	0x03232020 MOV X3, X31
	0x03232024 BL 0x3311888
	0x03232028 ADRP X0, 0xEF0000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x11AC000
	008 Move X22, 0xEF2000
	009 Move W8, [X23+960]
	010 Move X22, [X22+1024]
	011 Move X19, X2
	012 Move X20, X1
	013 Move W21, W0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xEF2000
	019 Move X0, [X0+1024]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+960], W8
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X22]
	029 Move X8, [X0+184]
	030 Move X23, [X8+8]
	031 Call 0x1C17D44
	032 Compare X23, 0
	033 JumpIfEqual {65}
	034 Move X0, [X22]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X22]
	040 Move X8, [X0+184]
	041 Move X22, [X8+8]
	042 Call 0x1C17D44
	043 Compare X22, 0
	044 JumpIfEqual {74}
	045 Move W8, [X22+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W23, W31
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Add X8, X22, W23
	050 Move X0, [X8+32]
	051 Compare X0, 0
	052 JumpIfEqual {74}
	053 Move X8, [X0]
	054 Move W1, W21
	055 Move X2, X20
	056 Move X3, X19
	057 Move X9, [X8+408]
	058 Move X4, [X8+416]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Compare X0, 0
	061 JumpIfNotEqual {66}
	062 Move W8, [X22+24]
	063 Add W23, W23, 1
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X0, X31
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Move X23, [X31+56]
	072 Return X0
	073 Call 0x1C17F28
	074 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x0323202C LDR X0, [X0 + 0x488]
	0x03232030 BL 0x1C16D08
	0x03232034 MOV X1, X0
	0x03232038 MOV X0, X19
	0x0323203C BL 0x1C16DEC
	0x03232040 BL 0x1C16F28
	0x03232044 STP X29, X30, [X31 - 0x60]!
	0x03232048 STP X28, X27, [X31 + 0x10]
	0x0323204C STP X26, X25, [X31 + 0x20]
	0x03232050 STP X24, X23, [X31 + 0x30]
	0x03232054 STP X22, X21, [X31 + 0x40]
	0x03232058 STP X20, X19, [X31 + 0x50]
	0x0323205C ADRP X20, 0x11AA000
	0x03232060 LDRB W8, [X20 + 0x3CA]
	0x03232064 MOV X21, X1
	0x03232068 MOV X19, X0
	0x0323206C TBNZ X8, 0x0, 0x32320C0
	0x03232070 ADRP X0, 0xECA000
	0x03232074 LDR X0, [X0 + 0x8D8]
	0x03232078 BL 0x1C16CF4
	0x0323207C ADRP X0, 0xEC1000
	0x03232080 LDR X0, [X0 + 0x5A8]
	0x03232084 BL 0x1C16CF4
	0x03232088 ADRP X0, 0xEC3000
	0x0323208C LDR X0, [X0 + 0x278]
	0x03232090 BL 0x1C16CF4
	0x03232094 ADRP X0, 0xEF0000
	0x03232098 LDR X0, [X0 + 0x490]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x11AB000
	006 Move X21, 0xEC8000
	007 Move X20, 0xEF1000
	008 Move W8, [X19+961]
	009 Move X21, [X21+3264]
	010 Move X20, [X20+1024]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xEF1000
	016 Move X0, [X0+1024]
	017 Call 0x1C17CF4
	018 Move X0, 0xEC8000
	019 Move X0, [X0+3264]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+961], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X19, X0
	027 Call Object..ctor, X0
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move [X8], X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

