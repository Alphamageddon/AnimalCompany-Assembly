Type: System.Text.UTF8Encoding/UTF8EncodingSealed

Method: System.Void .ctor(System.Boolean encoderShouldEmitUTF8Identifier)

Disassembly:
	0x0323E5E4 MOV X3, X31
	0x0323E5E8 BL 0x3311888
	0x0323E5EC ADRP X0, 0xEE4000
	0x0323E5F0 LDR X0, [X0 + 0x8B8]
	0x0323E5F4 BL 0x1C16D08
	0x0323E5F8 MOV X1, X0
	0x0323E5FC MOV X0, X20
	0x0323E600 BL 0x1C16DEC
	0x0323E604 ADRP X0, 0xEBD000
	0x0323E608 LDR X0, [X0 + 0x760]
	0x0323E60C BL 0x1C16D08
	0x0323E610 BL 0x1C16F10
	0x0323E614 MOV X19, X0
	0x0323E618 ADRP X0, 0xEE4000
	0x0323E61C LDR X0, [X0 + 0x308]
	0x0323E620 BL 0x1C16D08
	0x0323E624 MOV X20, X0
	0x0323E628 ADRP X0, 0xEE4000
	0x0323E62C LDR X0, [X0 + 0xE0]
	0x0323E630 BL 0x1C16D08
	0x0323E634 MOV X2, X0
	0x0323E638 MOV X0, X19
	0x0323E63C MOV X1, X20
	0x0323E640 MOV X3, X31
	0x0323E644 BL 0x3311888
	0x0323E648 ADRP X0, 0xEE4000
	0x0323E64C LDR X0, [X0 + 0x8B8]
	0x0323E650 BL 0x1C16D08
	0x0323E654 MOV X1, X0
	0x0323E658 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x119F000
	007 Move X22, 0xEE5000
	008 Move W8, [X21+1042]
	009 Move X22, [X22+2088]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xEE5000
	017 Move X0, [X0+2088]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1042], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W1, 0xFDE9
	027 Move X0, X19
	028 Move X2, X31
	029 And W20, W20, 1
	030 Call Encoding..ctor, X0, X1
	031 Move [X19+56], W20
	032 Move [X19+57], W31
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return 

Method: System.ReadOnlySpan`1<System.Byte> get_Preamble()

Disassembly:
	0x0323E65C BL 0x1C16DEC
	0x0323E660 STR X30, [X31 - 0x20]!
	0x0323E664 STP X20, X19, [X31 + 0x10]
	0x0323E668 CBZ X1, 0x323E694
	0x0323E66C CBZ X3, 0x323E694
	0x0323E670 TBNZ X2, 0x1F, 0x323E6EC
	0x0323E674 TBNZ X4, 0x1F, 0x323E6EC
	0x0323E678 LDR X8, [X0]
	0x0323E67C LDP X20, X19, [X31 + 0x10]
	0x0323E680 MOV X5, X31
	0x0323E684 LDR X7, [X8 + 0x308]
	0x0323E688 LDR X6, [X8 + 0x310]
	0x0323E68C LDR X30, [X31], #0x20
	0x0323E690 BR X7
	0x0323E694 ADRP X8, 0xEE4000
	0x0323E698 ADRP X9, 0xEE4000
	0x0323E69C LDR X8, [X8 + 0x2D8]
	0x0323E6A0 LDR X9, [X9 + 0x308]
	0x0323E6A4 CMP X1, 0x0
	0x0323E6A8 CSEL X0, X9, X8, EQ
	0x0323E6AC BL 0x1C16D08
	0x0323E6B0 MOV X19, X0
	0x0323E6B4 ADRP X0, 0xEBA000
	0x0323E6B8 LDR X0, [X0 + 0x528]
	0x0323E6BC BL 0x1C16D08
	0x0323E6C0 BL 0x1C16F10
	0x0323E6C4 MOV X20, X0
	0x0323E6C8 ADRP X0, 0xEE4000
	0x0323E6CC LDR X0, [X0 + 0x2E0]
	0x0323E6D0 BL 0x1C16D08
	0x0323E6D4 MOV X2, X0
	0x0323E6D8 MOV X0, X20
	0x0323E6DC MOV X1, X19
	0x0323E6E0 MOV X3, X31
	0x0323E6E4 BL 0x3315F7C
	0x0323E6E8 B 0x323E740
	0x0323E6EC ADRP X8, 0xEE4000
	0x0323E6F0 ADRP X9, 0xEE4000
	0x0323E6F4 LDR X8, [X8 + 0x328]
	0x0323E6F8 LDR X9, [X9 + 0x310]
	0x0323E6FC CMP W4, 0x0
	0x0323E700 CSEL X0, X9, X8, LT
	0x0323E704 BL 0x1C16D08
	0x0323E708 MOV X19, X0
	0x0323E70C ADRP X0, 0xEBD000
	0x0323E710 LDR X0, [X0 + 0x760]
	0x0323E714 BL 0x1C16D08
	0x0323E718 BL 0x1C16F10
	0x0323E71C MOV X20, X0
	0x0323E720 ADRP X0, 0xEDD000
	0x0323E724 LDR X0, [X0 + 0x670]
	0x0323E728 BL 0x1C16D08
	0x0323E72C MOV X2, X0
	0x0323E730 MOV X0, X20
	0x0323E734 MOV X1, X19
	0x0323E738 MOV X3, X31
	0x0323E73C BL 0x3311888

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x119F000
	005 Move W8, [X20+1043]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0xEBE000
	012 Move X0, [X0+3272]
	013 Call 0x1C17CF4
	014 Move X0, 0xEE5000
	015 Move X0, [X0+1776]
	016 Call 0x1C17CF4
	017 Move X0, 0xEE5000
	018 Move X0, [X0+2088]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1043], W8
	022 Move X20, 0xEE5000
	023 Move W8, [X19+56]
	024 Move X20, [X20+1776]
	025 Compare W8, 0
	026 JumpIfEqual {37}
	027 Move X19, 0xEE5000
	028 Move X19, [X19+2088]
	029 Move X0, [X19]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move X0, [X19]
	035 Move X8, [X0+184]
	036 Add X8, X8, 8
	037 Move X8, 0xEBE000
	038 Move X8, [X8+3272]
	039 Move X19, [X8]
	040 Move X8, [X19+56]
	041 Compare X8, 0
	042 JumpIfNotEqual {46}
	043 Move X0, X19
	044 Call 0x1C5D6E0
	045 Move X8, [X19+56]
	046 Move X0, [X8+16]
	047 Move W8, [X0+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {53}
	052 Call 0x1C5D684
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X8, [X19+56]
	058 Move X0, [X8+16]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Move X8, [X0+184]
	066 Move X0, [X8]
	067 Move X1, [X20]
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Call 0x25BFADC, X0
	072 Return X0

