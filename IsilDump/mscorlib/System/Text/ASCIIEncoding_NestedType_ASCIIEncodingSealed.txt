Type: System.Text.ASCIIEncoding/ASCIIEncodingSealed

Method: System.Void .ctor()

Disassembly:
	0x033FDB70 CBNZ W8, 0x33FDB78
	0x033FDB74 BL 0x1C16DFC
	0x033FDB78 MOV W0, W21
	0x033FDB7C MOV X1, X31
	0x033FDB80 BL 0x331BFEC
	0x033FDB84 TBZ X0, 0x0, 0x33FDB94
	0x033FDB88 TBNZ X24, 0x0, 0x33FDBF0
	0x033FDB8C MOVZ W24, 0x1
	0x033FDB90 B 0x33FDB9C
	0x033FDB94 TBZ X24, 0x0, 0x33FDBF0
	0x033FDB98 MOV W24, W31
	0x033FDB9C LDR X8, [X20 + 0x18]
	0x033FDBA0 CMP X22, X8
	0x033FDBA4 B.CS 0x33FDBE8
	0x033FDBA8 STRH W21, [X22], #0x2
	0x033FDBAC LDR X8, [X20]
	0x033FDBB0 MOV X0, X20
	0x033FDBB4 LDP X9, X1, [X8 + 0x188]
	0x033FDBB8 BLR X9
	0x033FDBBC MOV W21, W0
	0x033FDBC0 ANDS W31, W0, 0xFFFF
	0x033FDBC4 B.NE 0x33FDB48
	0x033FDBC8 TBNZ X24, 0x0, 0x33FDBF0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xFE1000
	006 Move X21, 0xD26000
	007 Move W8, [X20+1241]
	008 Move X21, [X21+2584]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD26000
	015 Move X0, [X0+2584]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1241], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W1, 0x4E9F
	028 Move X2, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Encoding..ctor, X0, X1
	032 Return 

