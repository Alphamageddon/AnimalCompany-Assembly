Type: System.Text.EncoderNLS

Method: System.Void .ctor(System.Text.Encoding encoding)

Disassembly:
	0x0322FC5C RET
	0x0322FC60 ADRP X0, 0xEC9000
	0x0322FC64 LDR X0, [X0 + 0x528]
	0x0322FC68 BL 0x1C16D08
	0x0322FC6C BL 0x1C16F10
	0x0322FC70 MOV X19, X0
	0x0322FC74 ADRP X0, 0xEF3000
	0x0322FC78 LDR X0, [X0 + 0x2D8]
	0x0322FC7C BL 0x1C16D08
	0x0322FC80 MOV X20, X0
	0x0322FC84 ADRP X0, 0xEF3000
	0x0322FC88 LDR X0, [X0 + 0x2E0]
	0x0322FC8C BL 0x1C16D08
	0x0322FC90 MOV X2, X0
	0x0322FC94 MOV X0, X19
	0x0322FC98 MOV X1, X20
	0x0322FC9C MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Encoder..ctor, X0
	008 Move [X19+40], X20
	009 Compare X20, 0
	010 JumpIfEqual {21}
	011 Move X8, [X20+40]
	012 Move X9, [X19]
	013 Move X0, X19
	014 Move [X19+16], X8
	015 Move X2, [X9+376]
	016 Move X1, [X9+384]
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 CallNoReturn X2
	021 Call 0x1C17F20

Method: System.Void Reset()

Disassembly:
	0x0322FCA0 BL 0x3315F7C
	0x0322FCA4 B 0x322FD58
	0x0322FCA8 ADRP X8, 0xEEC000
	0x0322FCAC ADRP X9, 0xECF000
	0x0322FCB0 LDR X8, [X8 + 0x648]
	0x0322FCB4 LDR X9, [X9 + 0x130]
	0x0322FCB8 CMP W2, 0x0
	0x0322FCBC CSEL X0, X9, X8, LT

ISIL:
	001 Move X8, X0
	002 Move X0, [X0+24]
	003 NotImplemented "Instruction STRH not yet implemented."
	004 Compare X0, 0
	005 JumpIfEqual {10}
	006 Move X8, [X0]
	007 Move X2, [X8+456]
	008 Move X1, [X8+464]
	009 CallNoReturn X2
	010 Return 

Method: System.Int32 GetByteCount(System.Char[] chars, System.Int32 index, System.Int32 count, System.Boolean flush)

Disassembly:
	0x0322FCC0 BL 0x1C16D08
	0x0322FCC4 MOV X19, X0
	0x0322FCC8 ADRP X0, 0xECC000
	0x0322FCCC LDR X0, [X0 + 0x760]
	0x0322FCD0 BL 0x1C16D08
	0x0322FCD4 BL 0x1C16F10
	0x0322FCD8 MOV X20, X0
	0x0322FCDC ADRP X0, 0xEEC000
	0x0322FCE0 LDR X0, [X0 + 0x670]
	0x0322FCE4 BL 0x1C16D08
	0x0322FCE8 MOV X2, X0
	0x0322FCEC MOV X0, X20
	0x0322FCF0 MOV X1, X19
	0x0322FCF4 MOV X3, X31
	0x0322FCF8 BL 0x3311888
	0x0322FCFC ADRP X0, 0xEF3000
	0x0322FD00 LDR X0, [X0 + 0x390]
	0x0322FD04 BL 0x1C16D08
	0x0322FD08 MOV X1, X0
	0x0322FD0C MOV X0, X20
	0x0322FD10 BL 0x1C16DEC
	0x0322FD14 ADRP X0, 0xECC000
	0x0322FD18 LDR X0, [X0 + 0x760]
	0x0322FD1C BL 0x1C16D08
	0x0322FD20 BL 0x1C16F10
	0x0322FD24 MOV X19, X0
	0x0322FD28 ADRP X0, 0xEF3000
	0x0322FD2C LDR X0, [X0 + 0x2D8]
	0x0322FD30 BL 0x1C16D08
	0x0322FD34 MOV X20, X0
	0x0322FD38 ADRP X0, 0xEF3000
	0x0322FD3C LDR X0, [X0 + 0xE0]
	0x0322FD40 BL 0x1C16D08
	0x0322FD44 MOV X2, X0
	0x0322FD48 MOV X0, X19
	0x0322FD4C MOV X1, X20
	0x0322FD50 MOV X3, X31
	0x0322FD54 BL 0x3311888
	0x0322FD58 ADRP X0, 0xEF3000
	0x0322FD5C LDR X0, [X0 + 0x390]
	0x0322FD60 BL 0x1C16D08
	0x0322FD64 MOV X1, X0
	0x0322FD68 MOV X0, X19
	0x0322FD6C BL 0x1C16DEC
	0x0322FD70 STR X30, [X31 - 0x20]!
	0x0322FD74 STP X20, X19, [X31 + 0x10]
	0x0322FD78 CBZ X1, 0x322FDB4
	0x0322FD7C MOV X20, X0
	0x0322FD80 MOV X0, X31
	0x0322FD84 MOV X19, X1
	0x0322FD88 BL 0x32C1424
	0x0322FD8C LDR X8, [X20]
	0x0322FD90 LDR W2, [X19 + 0x10]
	0x0322FD94 ADD X1, X19, W0, SXTW
	0x0322FD98 MOV X0, X20
	0x0322FD9C LDR X5, [X8 + 0x228]
	0x0322FDA0 LDR X4, [X8 + 0x230]
	0x0322FDA4 LDP X20, X19, [X31 + 0x10]
	0x0322FDA8 MOV X3, X31
	0x0322FDAC LDR X30, [X31], #0x20
	0x0322FDB0 BR X5
	0x0322FDB4 ADRP X0, 0xEC9000
	0x0322FDB8 LDR X0, [X0 + 0x528]
	0x0322FDBC BL 0x1C16D08
	0x0322FDC0 BL 0x1C16F10
	0x0322FDC4 MOV X19, X0
	0x0322FDC8 ADRP X0, 0xEED000
	0x0322FDCC LDR X0, [X0 + 0xCC0]
	0x0322FDD0 BL 0x1C16D08
	0x0322FDD4 MOV X1, X0
	0x0322FDD8 MOV X0, X19
	0x0322FDDC MOV X2, X31
	0x0322FDE0 BL 0x330E100
	0x0322FDE4 ADRP X0, 0xEF3000
	0x0322FDE8 LDR X0, [X0 + 0x398]
	0x0322FDEC BL 0x1C16D08
	0x0322FDF0 MOV X1, X0
	0x0322FDF4 MOV X0, X19
	0x0322FDF8 BL 0x1C16DEC
	0x0322FDFC STR X30, [X31 - 0x20]!
	0x0322FE00 STP X20, X19, [X31 + 0x10]
	0x0322FE04 CBZ X1, 0x322FE28
	0x0322FE08 TBNZ X2, 0x1F, 0x322FE70
	0x0322FE0C LDR X8, [X0]
	0x0322FE10 LDP X20, X19, [X31 + 0x10]
	0x0322FE14 MOV X3, X31
	0x0322FE18 LDR X5, [X8 + 0x228]
	0x0322FE1C LDR X4, [X8 + 0x230]
	0x0322FE20 LDR X30, [X31], #0x20
	0x0322FE24 BR X5
	0x0322FE28 ADRP X0, 0xEC9000
	0x0322FE2C LDR X0, [X0 + 0x528]
	0x0322FE30 BL 0x1C16D08
	0x0322FE34 BL 0x1C16F10
	0x0322FE38 MOV X19, X0
	0x0322FE3C ADRP X0, 0xEF3000
	0x0322FE40 LDR X0, [X0 + 0x2D8]
	0x0322FE44 BL 0x1C16D08
	0x0322FE48 MOV X20, X0
	0x0322FE4C ADRP X0, 0xEF3000
	0x0322FE50 LDR X0, [X0 + 0x2E0]
	0x0322FE54 BL 0x1C16D08
	0x0322FE58 MOV X2, X0
	0x0322FE5C MOV X0, X19
	0x0322FE60 MOV X1, X20
	0x0322FE64 MOV X3, X31
	0x0322FE68 BL 0x3315F7C
	0x0322FE6C B 0x322FEB4
	0x0322FE70 ADRP X0, 0xECC000
	0x0322FE74 LDR X0, [X0 + 0x760]
	0x0322FE78 BL 0x1C16D08
	0x0322FE7C BL 0x1C16F10
	0x0322FE80 MOV X19, X0
	0x0322FE84 ADRP X0, 0xEEC000
	0x0322FE88 LDR X0, [X0 + 0x648]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x11AE000
	009 Move W8, [X24+941]
	010 Move W21, W4
	011 Move W19, W3
	012 Move W20, W2
	013 Move X23, X1
	014 Move X22, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xEF4000
	020 Move X0, [X0+712]
	021 Call 0x1C17CF4
	022 Move X0, 0xEF4000
	023 Move X0, [X0+720]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X24+941], W8
	027 Compare X23, 0
	028 JumpIfEqual {64}
	029 Move TEMP, X19
	030 And TEMP, TEMP, -2147483648
	031 Compare TEMP, -2147483648
	032 JumpIfEqual {81}
	033 Move TEMP, X20
	034 And TEMP, TEMP, -2147483648
	035 Compare TEMP, -2147483648
	036 JumpIfEqual {81}
	037 Move W8, [X23+24]
	038 Subtract W8, W8, W20
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, 0xEF4000
	041 Move X8, [X8+720]
	042 Move X24, 0xEF4000
	043 Move X0, X23
	044 Move X1, [X8]
	045 Move X24, [X24+712]
	046 Call Span`1<Char>.op_Implicit, X0
	047 Move X2, [X24]
	048 Call MemoryMarshal.GetReference, X0
	049 Move X8, [X22]
	050 Add X1, X0, W20
	051 And W3, W21, 1
	052 Move X0, X22
	053 Move X5, [X8+408]
	054 Move X4, [X8+416]
	055 Move W2, W19
	056 Move X20, [X31+48]
	057 Move X19, [X31+56]
	058 Move X22, [X31+32]
	059 Move X21, [X31+40]
	060 Move X24, [X31+16]
	061 Move X23, [X31+24]
	062 Move X30, [X31+64]
	063 CallNoReturn X5
	064 Move X0, 0xECA000
	065 Move X0, [X0+1320]
	066 Call 0x1C17D08
	067 Call 0x1C17F10
	068 Move X19, X0
	069 Move X0, 0xEF4000
	070 Move X0, [X0+728]
	071 Call 0x1C17D08
	072 Move X20, X0
	073 Move X0, 0xEF4000
	074 Move X0, [X0+736]
	075 Call 0x1C17D08
	076 Move X2, X0
	077 Move X0, X19
	078 Move X1, X20
	079 Move X3, X31
	080 Call ArgumentNullException..ctor, X0, X1, X2
	081 Move X8, 0xEED000
	082 Move X9, 0xED0000
	083 Move X8, [X8+1608]
	084 Move X9, [X9+304]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction CSEL not yet implemented."
	087 Call 0x1C17D08
	088 Move X19, X0
	089 Move X0, 0xECD000
	090 Move X0, [X0+1888]
	091 Call 0x1C17D08
	092 Call 0x1C17F10
	093 Move X20, X0
	094 Move X0, 0xEED000
	095 Move X0, [X0+1648]
	096 Call 0x1C17D08
	097 Move X2, X0
	098 Move X0, X20
	099 Move X1, X19
	100 Move X3, X31
	101 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	102 Move X0, 0xEF4000
	103 Move X0, [X0+744]
	104 Call 0x1C17D08
	105 Move X1, X0
	106 Move X0, X20
	107 Call 0x1C17DEC
	108 Move X0, 0xECD000
	109 Move X0, [X0+1888]
	110 Call 0x1C17D08
	111 Call 0x1C17F10
	112 Move X19, X0
	113 Move X0, 0xEF4000
	114 Move X0, [X0+728]
	115 Call 0x1C17D08
	116 Move X20, X0
	117 Move X0, 0xEF4000
	118 Move X0, [X0+224]
	119 Call 0x1C17D08
	120 Move X2, X0
	121 Move X0, X19
	122 Move X1, X20
	123 Move X3, X31
	124 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	125 Move X0, 0xEF4000
	126 Move X0, [X0+744]
	127 Call 0x1C17D08
	128 Move X1, X0
	129 Move X0, X19
	130 Call 0x1C17DEC

Method: System.Int32 GetByteCount(System.Char* chars, System.Int32 count, System.Boolean flush)

Disassembly:
	0x0322FE8C BL 0x1C16D08
	0x0322FE90 MOV X20, X0
	0x0322FE94 ADRP X0, 0xEEC000
	0x0322FE98 LDR X0, [X0 + 0x670]
	0x0322FE9C BL 0x1C16D08
	0x0322FEA0 MOV X2, X0
	0x0322FEA4 MOV X0, X19
	0x0322FEA8 MOV X1, X20
	0x0322FEAC MOV X3, X31
	0x0322FEB0 BL 0x3311888
	0x0322FEB4 ADRP X0, 0xEF3000
	0x0322FEB8 LDR X0, [X0 + 0x3A0]
	0x0322FEBC BL 0x1C16D08
	0x0322FEC0 MOV X1, X0
	0x0322FEC4 MOV X0, X19
	0x0322FEC8 BL 0x1C16DEC
	0x0322FECC STP X30, X27, [X31 - 0x50]!
	0x0322FED0 STP X26, X25, [X31 + 0x10]
	0x0322FED4 STP X24, X23, [X31 + 0x20]
	0x0322FED8 STP X22, X21, [X31 + 0x30]
	0x0322FEDC STP X20, X19, [X31 + 0x40]
	0x0322FEE0 ADRP X25, 0x11AD000
	0x0322FEE4 LDRB W8, [X25 + 0x3B7]
	0x0322FEE8 MOV W19, W5
	0x0322FEEC MOV X24, X4
	0x0322FEF0 MOV W20, W3
	0x0322FEF4 MOV W21, W2
	0x0322FEF8 MOV X22, X1
	0x0322FEFC MOV X23, X0
	0x0322FF00 TBNZ X8, 0x0, 0x322FF24
	0x0322FF04 ADRP X0, 0xEF2000
	0x0322FF08 LDR X0, [X0 + 0x830]
	0x0322FF0C BL 0x1C16CF4
	0x0322FF10 ADRP X0, 0xEF3000
	0x0322FF14 LDR X0, [X0 + 0x2F8]
	0x0322FF18 BL 0x1C16CF4
	0x0322FF1C MOVZ W8, 0x1
	0x0322FF20 STRB W8, [X25 + 0x3B7]
	0x0322FF24 CBZ X22, 0x322FFF4
	0x0322FF28 CBZ X24, 0x322FFF4
	0x0322FF2C TBNZ X20, 0x1F, 0x323004C
	0x0322FF30 TBNZ X21, 0x1F, 0x323004C
	0x0322FF34 LDR W8, [X22 + 0x10]
	0x0322FF38 SUB W8, W8, W21
	0x0322FF3C CMP W8, W20
	0x0322FF40 B.LT 0x32300B8
	0x0322FF44 TBNZ X19, 0x1F, 0x322FFC4
	0x0322FF48 LDR W8, [X24 + 0x18]
	0x0322FF4C SUBS W25, W8, W19
	0x0322FF50 B.LT 0x322FFC4
	0x0322FF54 ADRP X26, 0xEF3000
	0x0322FF58 ADRP X27, 0xEF2000
	0x0322FF5C LDR X26, [X26 + 0x2F8]
	0x0322FF60 LDR X27, [X27 + 0x830]
	0x0322FF64 MOV X0, X31
	0x0322FF68 BL 0x32C1424
	0x0322FF6C LDR X1, [X26]
	0x0322FF70 MOV W26, W0
	0x0322FF74 MOV X0, X24
	0x0322FF78 BL 0x25FB4C0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {26}
	006 Move TEMP, X2
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {43}
	010 Move X8, X0
	011 Move X0, [X0+40]
	012 And W9, W3, 1
	013 Move [X8+48], W9
	014 Move W9, 1
	015 Move [X8+49], W9
	016 Compare X0, 0
	017 JumpIfEqual {66}
	018 Move X9, [X0]
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X3, X8
	022 Move X5, [X9+552]
	023 Move X4, [X9+560]
	024 Move X30, [X31+32]
	025 CallNoReturn X5
	026 Move X0, 0xECA000
	027 Move X0, [X0+1320]
	028 Call 0x1C17D08
	029 Call 0x1C17F10
	030 Move X19, X0
	031 Move X0, 0xEF4000
	032 Move X0, [X0+728]
	033 Call 0x1C17D08
	034 Move X20, X0
	035 Move X0, 0xEF4000
	036 Move X0, [X0+736]
	037 Call 0x1C17D08
	038 Move X2, X0
	039 Move X0, X19
	040 Move X1, X20
	041 Move X3, X31
	042 Call ArgumentNullException..ctor, X0, X1, X2
	043 Move X0, 0xECD000
	044 Move X0, [X0+1888]
	045 Call 0x1C17D08
	046 Call 0x1C17F10
	047 Move X19, X0
	048 Move X0, 0xEED000
	049 Move X0, [X0+1608]
	050 Call 0x1C17D08
	051 Move X20, X0
	052 Move X0, 0xEED000
	053 Move X0, [X0+1648]
	054 Call 0x1C17D08
	055 Move X2, X0
	056 Move X0, X19
	057 Move X1, X20
	058 Move X3, X31
	059 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	060 Move X0, 0xEF4000
	061 Move X0, [X0+752]
	062 Call 0x1C17D08
	063 Move X1, X0
	064 Move X0, X19
	065 Call 0x1C17DEC
	066 Call 0x1C17F20

Method: System.Int32 GetBytes(System.Char[] chars, System.Int32 charIndex, System.Int32 charCount, System.Byte[] bytes, System.Int32 byteIndex, System.Boolean flush)

Disassembly:
	0x0322FF7C LDR X2, [X27]
	0x0322FF80 BL 0x2218CF4
	0x0322FF84 LDR X8, [X23]
	0x0322FF88 ADD X3, X0, W19, UXTW
	0x0322FF8C MOV X0, X23
	0x0322FF90 MOV W2, W20
	0x0322FF94 LDR X7, [X8 + 0x288]
	0x0322FF98 LDR X6, [X8 + 0x290]
	0x0322FF9C ADD X8, X22, W21, 0x1, SXTW
	0x0322FFA0 ADD X1, X8, W26, SXTW
	0x0322FFA4 MOV W4, W25
	0x0322FFA8 LDP X20, X19, [X31 + 0x40]
	0x0322FFAC LDP X22, X21, [X31 + 0x30]
	0x0322FFB0 LDP X24, X23, [X31 + 0x20]
	0x0322FFB4 LDP X26, X25, [X31 + 0x10]
	0x0322FFB8 MOV X5, X31
	0x0322FFBC LDP X30, X27, [X31], #0x50
	0x0322FFC0 BR X7
	0x0322FFC4 ADRP X0, 0xECC000
	0x0322FFC8 LDR X0, [X0 + 0x760]
	0x0322FFCC BL 0x1C16D08
	0x0322FFD0 BL 0x1C16F10
	0x0322FFD4 MOV X19, X0
	0x0322FFD8 ADRP X0, 0xEF3000
	0x0322FFDC LDR X0, [X0 + 0x300]
	0x0322FFE0 BL 0x1C16D08
	0x0322FFE4 MOV X20, X0
	0x0322FFE8 ADRP X0, 0xEEC000
	0x0322FFEC LDR X0, [X0 + 0x660]
	0x0322FFF0 B 0x32300E4
	0x0322FFF4 ADRP X8, 0xEF3000
	0x0322FFF8 ADRP X9, 0xEED000
	0x0322FFFC LDR X8, [X8 + 0x308]
	0x03230000 B 0x3EB188C
	0x03230004 CMP X22, 0x0
	0x03230008 CSEL X0, X9, X8, EQ
	0x0323000C BL 0x1C16D08
	0x03230010 MOV X19, X0
	0x03230014 ADRP X0, 0xEC8000
	0x03230018 LDR X0, [X0 + 0x528]
	0x0323001C BL 0x1C16D08
	0x03230020 BL 0x1C16F10
	0x03230024 MOV X20, X0
	0x03230028 ADRP X0, 0xEF2000
	0x0323002C LDR X0, [X0 + 0x2E0]
	0x03230030 BL 0x1C16D08
	0x03230034 MOV X2, X0
	0x03230038 MOV X0, X20
	0x0323003C MOV X1, X19
	0x03230040 MOV X3, X31
	0x03230044 BL 0x3315F7C
	0x03230048 B 0x32300A0
	0x0323004C ADRP X8, 0xEF2000
	0x03230050 ADRP X9, 0xEF2000
	0x03230054 LDR X8, [X8 + 0x310]
	0x03230058 LDR X9, [X9 + 0x318]
	0x0323005C CMP W21, 0x0
	0x03230060 CSEL X0, X9, X8, LT
	0x03230064 BL 0x1C16D08
	0x03230068 MOV X19, X0
	0x0323006C ADRP X0, 0xECB000
	0x03230070 LDR X0, [X0 + 0x760]
	0x03230074 BL 0x1C16D08
	0x03230078 BL 0x1C16F10
	0x0323007C MOV X20, X0
	0x03230080 ADRP X0, 0xEEB000
	0x03230084 LDR X0, [X0 + 0x670]
	0x03230088 BL 0x1C16D08
	0x0323008C MOV X2, X0
	0x03230090 MOV X0, X20
	0x03230094 MOV X1, X19
	0x03230098 MOV X3, X31
	0x0323009C BL 0x3311888
	0x032300A0 ADRP X0, 0xEF2000
	0x032300A4 LDR X0, [X0 + 0x3A8]
	0x032300A8 BL 0x1C16D08
	0x032300AC MOV X1, X0
	0x032300B0 MOV X0, X20
	0x032300B4 BL 0x1C16DEC
	0x032300B8 ADRP X0, 0xECB000
	0x032300BC LDR X0, [X0 + 0x760]
	0x032300C0 BL 0x1C16D08
	0x032300C4 BL 0x1C16F10
	0x032300C8 MOV X19, X0
	0x032300CC ADRP X0, 0xEEC000
	0x032300D0 LDR X0, [X0 + 0xCC0]
	0x032300D4 BL 0x1C16D08
	0x032300D8 MOV X20, X0
	0x032300DC ADRP X0, 0xEF2000
	0x032300E0 LDR X0, [X0 + 0x108]
	0x032300E4 BL 0x1C16D08
	0x032300E8 MOV X2, X0
	0x032300EC MOV X0, X19
	0x032300F0 MOV X1, X20
	0x032300F4 MOV X3, X31
	0x032300F8 BL 0x3311888
	0x032300FC ADRP X0, 0xEF2000
	0x03230100 LDR X0, [X0 + 0x3A8]
	0x03230104 BL 0x1C16D08
	0x03230108 MOV X1, X0
	0x0323010C MOV X0, X19
	0x03230110 BL 0x1C16DEC
	0x03230114 STR X30, [X31 - 0x50]!
	0x03230118 STP X26, X25, [X31 + 0x10]
	0x0323011C STP X24, X23, [X31 + 0x20]
	0x03230120 STP X22, X21, [X31 + 0x30]
	0x03230124 STP X20, X19, [X31 + 0x40]
	0x03230128 ADRP X25, 0x11AC000
	0x0323012C LDRB W8, [X25 + 0x3B8]
	0x03230130 MOV W20, W5
	0x03230134 MOV X23, X4
	0x03230138 MOV W19, W3
	0x0323013C MOV W21, W2
	0x03230140 MOV X24, X1
	0x03230144 MOV X22, X0
	0x03230148 TBNZ X8, 0x0, 0x323016C
	0x0323014C ADRP X0, 0xEF1000
	0x03230150 LDR X0, [X0 + 0x830]
	0x03230154 BL 0x1C16CF4
	0x03230158 ADRP X0, 0xEF2000
	0x0323015C LDR X0, [X0 + 0x2F8]
	0x03230160 BL 0x1C16CF4
	0x03230164 MOVZ W8, 0x1
	0x03230168 STRB W8, [X25 + 0x3B8]
	0x0323016C CBZ X24, 0x3230258
	0x03230170 CBZ X23, 0x3230258
	0x03230174 TBNZ X19, 0x1F, 0x32302B0
	0x03230178 TBNZ X21, 0x1F, 0x32302B0
	0x0323017C LDR W8, [X24 + 0x18]
	0x03230180 SUB W9, W8, W21
	0x03230184 CMP W9, W19
	0x03230188 B.LT 0x323031C
	0x0323018C TBNZ X20, 0x1F, 0x3230228
	0x03230190 LDR W9, [X23 + 0x18]
	0x03230194 SUBS W25, W9, W20
	0x03230198 B.LT 0x3230228
	0x0323019C CBZ W19, 0x323020C
	0x032301A0 ADRP X9, 0xEF2000
	0x032301A4 LDR X9, [X9 + 0x2F8]
	0x032301A8 ADRP X26, 0xEF1000
	0x032301AC LDR X26, [X26 + 0x830]
	0x032301B0 CMP W8, 0x0
	0x032301B4 LDR X1, [X9]
	0x032301B8 ADD X9, X24, 0x20
	0x032301BC MOV X0, X23
	0x032301C0 CSEL X24, X31, X9, EQ
	0x032301C4 BL 0x25FB4C0
	0x032301C8 LDR X2, [X26]
	0x032301CC BL 0x2218CF4
	0x032301D0 LDR X8, [X22]
	0x032301D4 ADD X1, X24, W21, 0x1, SXTW
	0x032301D8 ADD X3, X0, W20, UXTW
	0x032301DC MOV X0, X22
	0x032301E0 LDR X7, [X8 + 0x288]
	0x032301E4 LDR X6, [X8 + 0x290]
	0x032301E8 MOV W2, W19
	0x032301EC MOV W4, W25
	0x032301F0 LDP X20, X19, [X31 + 0x40]
	0x032301F4 LDP X22, X21, [X31 + 0x30]
	0x032301F8 LDP X24, X23, [X31 + 0x20]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X26, 0x11AE000
	014 Move W8, [X26+942]
	015 Move W20, W6
	016 Move W21, W5
	017 Move X24, X4
	018 Move W19, W3
	019 Move W22, W2
	020 Move X25, X1
	021 Move X23, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {40}
	026 Move X0, 0xEF3000
	027 Move X0, [X0+2096]
	028 Call 0x1C17CF4
	029 Move X0, 0xEF4000
	030 Move X0, [X0+712]
	031 Call 0x1C17CF4
	032 Move X0, 0xEF4000
	033 Move X0, [X0+760]
	034 Call 0x1C17CF4
	035 Move X0, 0xEF4000
	036 Move X0, [X0+720]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X26+942], W8
	040 Compare X25, 0
	041 JumpIfEqual {113}
	042 Compare X24, 0
	043 JumpIfEqual {113}
	044 Move TEMP, X19
	045 And TEMP, TEMP, -2147483648
	046 Compare TEMP, -2147483648
	047 JumpIfEqual {134}
	048 Move TEMP, X22
	049 And TEMP, TEMP, -2147483648
	050 Compare TEMP, -2147483648
	051 JumpIfEqual {134}
	052 Move W8, [X25+24]
	053 Subtract W8, W8, W22
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move TEMP, X21
	056 And TEMP, TEMP, -2147483648
	057 Compare TEMP, -2147483648
	058 JumpIfEqual {102}
	059 Move W8, [X24+24]
	060 Subtract W26, W8, W21
	061 Move X8, 0xEF3000
	062 Move X8, [X8+720]
	063 Move X27, 0xEF3000
	064 Move X28, 0xEF3000
	065 Move X29, 0xEF2000
	066 Move X1, [X8]
	067 Move X27, [X27+712]
	068 Move X28, [X28+760]
	069 Move X29, [X29+2096]
	070 Move X0, X25
	071 Call Span`1<Char>.op_Implicit, X0
	072 Move X2, [X27]
	073 Call MemoryMarshal.GetReference, X0
	074 Move X1, [X28]
	075 Move X25, X0
	076 Move X0, X24
	077 Call 0x25FC4C0, X0
	078 Move X2, [X29]
	079 Call 0x2219CF4, X0
	080 Move X8, [X23]
	081 Add X1, X25, W22
	082 Add X3, X0, W21
	083 And W5, W20, 1
	084 Move X7, [X8+440]
	085 Move X6, [X8+448]
	086 Move X0, X23
	087 Move W2, W19
	088 Move W4, W26
	089 Move X20, [X31+80]
	090 Move X19, [X31+88]
	091 Move X22, [X31+64]
	092 Move X21, [X31+72]
	093 Move X24, [X31+48]
	094 Move X23, [X31+56]
	095 Move X26, [X31+32]
	096 Move X25, [X31+40]
	097 Move X28, [X31+16]
	098 Move X27, [X31+24]
	099 Move X29, [X31+96]
	100 Move X30, [X31+104]
	101 CallNoReturn X7
	102 Move X0, 0xECC000
	103 Move X0, [X0+1888]
	104 Call 0x1C17D08
	105 Call 0x1C17F10
	106 Move X19, X0
	107 Move X0, 0xEF3000
	108 Move X0, [X0+768]
	109 Call 0x1C17D08
	110 Move X20, X0
	111 Move X0, 0xEEC000
	112 Move X0, [X0+1632]
	113 Move X8, 0xEF3000
	114 Move X9, 0xEF3000
	115 Move X8, [X8+776]
	116 Move X9, [X9+728]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 NotImplemented "Instruction CSEL not yet implemented."
	119 Call 0x1C17D08
	120 Move X19, X0
	121 Move X0, 0xEC9000
	122 Move X0, [X0+1320]
	123 Call 0x1C17D08
	124 Call 0x1C17F10
	125 Move X20, X0
	126 Move X0, 0xEF3000
	127 Move X0, [X0+736]
	128 Call 0x1C17D08
	129 Move X2, X0
	130 Move X0, X20
	131 Move X1, X19
	132 Move X3, X31
	133 Call ArgumentNullException..ctor, X0, X1, X2
	134 Move X8, 0xEF3000
	135 Move X9, 0xEF3000
	136 Move X8, [X8+784]
	137 Move X9, [X9+792]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 NotImplemented "Instruction CSEL not yet implemented."
	140 Call 0x1C17D08
	141 Move X19, X0
	142 Move X0, 0xECC000
	143 Move X0, [X0+1888]
	144 Call 0x1C17D08
	145 Call 0x1C17F10
	146 Move X20, X0
	147 Move X0, 0xEEC000
	148 Move X0, [X0+1648]
	149 Call 0x1C17D08
	150 Move X2, X0
	151 Move X0, X20
	152 Move X1, X19
	153 Move X3, X31
	154 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	155 Move X0, 0xEF3000
	156 Move X0, [X0+800]
	157 Call 0x1C17D08
	158 Move X1, X0
	159 Move X0, X20
	160 Call 0x1C17DEC
	161 Move X0, 0xECC000
	162 Move X0, [X0+1888]
	163 Call 0x1C17D08
	164 Call 0x1C17F10
	165 Move X19, X0
	166 Move X0, 0xEF3000
	167 Move X0, [X0+728]
	168 Call 0x1C17D08
	169 Move X20, X0
	170 Move X0, 0xEF3000
	171 Move X0, [X0+224]
	172 Call 0x1C17D08
	173 Move X2, X0
	174 Move X0, X19
	175 Move X1, X20
	176 Move X3, X31
	177 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	178 Move X0, 0xEF3000
	179 Move X0, [X0+800]
	180 Call 0x1C17D08
	181 Move X1, X0
	182 Move X0, X19
	183 Call 0x1C17DEC

Method: System.Int32 GetBytes(System.Char* chars, System.Int32 charCount, System.Byte* bytes, System.Int32 byteCount, System.Boolean flush)

Disassembly:
	0x032301FC LDP X26, X25, [X31 + 0x10]
	0x03230200 MOV X5, X31
	0x03230204 LDR X30, [X31], #0x50
	0x03230208 BR X7
	0x0323020C LDP X20, X19, [X31 + 0x40]
	0x03230210 LDP X22, X21, [X31 + 0x30]
	0x03230214 LDP X24, X23, [X31 + 0x20]
	0x03230218 LDP X26, X25, [X31 + 0x10]
	0x0323021C MOV W0, W31
	0x03230220 LDR X30, [X31], #0x50
	0x03230224 RET
	0x03230228 ADRP X0, 0xECB000
	0x0323022C LDR X0, [X0 + 0x760]
	0x03230230 BL 0x1C16D08
	0x03230234 BL 0x1C16F10
	0x03230238 MOV X19, X0
	0x0323023C ADRP X0, 0xEF2000
	0x03230240 LDR X0, [X0 + 0x300]
	0x03230244 BL 0x1C16D08
	0x03230248 MOV X20, X0
	0x0323024C ADRP X0, 0xEEB000
	0x03230250 LDR X0, [X0 + 0x660]
	0x03230254 B 0x3230348
	0x03230258 ADRP X8, 0xEF2000
	0x0323025C ADRP X9, 0xEF2000
	0x03230260 LDR X8, [X8 + 0x308]
	0x03230264 LDR X9, [X9 + 0x2D8]
	0x03230268 CMP X24, 0x0
	0x0323026C CSEL X0, X9, X8, EQ
	0x03230270 BL 0x1C16D08
	0x03230274 MOV X19, X0
	0x03230278 ADRP X0, 0xEC8000
	0x0323027C LDR X0, [X0 + 0x528]
	0x03230280 BL 0x1C16D08
	0x03230284 BL 0x1C16F10
	0x03230288 MOV X20, X0
	0x0323028C ADRP X0, 0xEF2000
	0x03230290 LDR X0, [X0 + 0x2E0]
	0x03230294 BL 0x1C16D08
	0x03230298 MOV X2, X0
	0x0323029C MOV X0, X20
	0x032302A0 MOV X1, X19
	0x032302A4 MOV X3, X31
	0x032302A8 BL 0x3315F7C
	0x032302AC B 0x3230304
	0x032302B0 ADRP X8, 0xEF2000
	0x032302B4 ADRP X9, 0xEF2000
	0x032302B8 LDR X8, [X8 + 0x310]
	0x032302BC LDR X9, [X9 + 0x318]
	0x032302C0 CMP W21, 0x0
	0x032302C4 CSEL X0, X9, X8, LT
	0x032302C8 BL 0x1C16D08
	0x032302CC MOV X19, X0
	0x032302D0 ADRP X0, 0xECB000
	0x032302D4 LDR X0, [X0 + 0x760]
	0x032302D8 BL 0x1C16D08
	0x032302DC BL 0x1C16F10
	0x032302E0 MOV X20, X0
	0x032302E4 ADRP X0, 0xEEB000
	0x032302E8 LDR X0, [X0 + 0x670]
	0x032302EC BL 0x1C16D08
	0x032302F0 MOV X2, X0
	0x032302F4 MOV X0, X20
	0x032302F8 MOV X1, X19
	0x032302FC MOV X3, X31
	0x03230300 BL 0x3311888
	0x03230304 ADRP X0, 0xEF2000
	0x03230308 LDR X0, [X0 + 0x3B0]
	0x0323030C BL 0x1C16D08
	0x03230310 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {32}
	006 Compare X3, 0
	007 JumpIfEqual {32}
	008 Move TEMP, X2
	009 And TEMP, TEMP, -2147483648
	010 Compare TEMP, -2147483648
	011 JumpIfEqual {53}
	012 Move TEMP, X4
	013 And TEMP, TEMP, -2147483648
	014 Compare TEMP, -2147483648
	015 JumpIfEqual {53}
	016 Move X8, X0
	017 Move X0, [X0+40]
	018 And W9, W5, 1
	019 Move [X8+48], W9
	020 Move W9, 1
	021 Move [X8+49], W9
	022 Compare X0, 0
	023 JumpIfEqual {80}
	024 Move X9, [X0]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X5, X8
	028 Move X7, [X9+648]
	029 Move X6, [X9+656]
	030 Move X30, [X31+32]
	031 CallNoReturn X7
	032 Move X8, 0xEF3000
	033 Move X9, 0xEF3000
	034 Move X8, [X8+776]
	035 Move X9, [X9+728]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSEL not yet implemented."
	038 Call 0x1C17D08
	039 Move X19, X0
	040 Move X0, 0xEC9000
	041 Move X0, [X0+1320]
	042 Call 0x1C17D08
	043 Call 0x1C17F10
	044 Move X20, X0
	045 Move X0, 0xEF3000
	046 Move X0, [X0+736]
	047 Call 0x1C17D08
	048 Move X2, X0
	049 Move X0, X20
	050 Move X1, X19
	051 Move X3, X31
	052 Call ArgumentNullException..ctor, X0, X1, X2
	053 Move X8, 0xEF3000
	054 Move X9, 0xEF3000
	055 Move X8, [X8+784]
	056 Move X9, [X9+808]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction CSEL not yet implemented."
	059 Call 0x1C17D08
	060 Move X19, X0
	061 Move X0, 0xECC000
	062 Move X0, [X0+1888]
	063 Call 0x1C17D08
	064 Call 0x1C17F10
	065 Move X20, X0
	066 Move X0, 0xEEC000
	067 Move X0, [X0+1648]
	068 Call 0x1C17D08
	069 Move X2, X0
	070 Move X0, X20
	071 Move X1, X19
	072 Move X3, X31
	073 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	074 Move X0, 0xEF3000
	075 Move X0, [X0+816]
	076 Call 0x1C17D08
	077 Move X1, X0
	078 Move X0, X20
	079 Call 0x1C17DEC
	080 Call 0x1C17F20

Method: System.Text.Encoding get_Encoding()

Disassembly:
	0x03230314 MOV X0, X20
	0x03230318 BL 0x1C16DEC

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Boolean get_MustFlush()

Disassembly:
	0x0323031C ADRP X0, 0xECB000
	0x03230320 LDR X0, [X0 + 0x760]

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Void ClearMustFlush()

Disassembly:
	0x03230324 BL 0x1C16D08
	0x03230328 BL 0x1C16F10

ISIL:
	001 Move [X0+48], W31
	002 Return 

