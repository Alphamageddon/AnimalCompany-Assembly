Type: System.Text.EncodingHelper

Method: System.Text.Encoding get_UTF8Unmarked()

Disassembly:
	0x03248D44 ANDS W31, W21, 0x7
	0x03248D48 UBFM W8, W21, 0x3, 0x1F
	0x03248D4C CINC W8, W8, NE
	0x03248D50 UBFM W1, W8, 0x1C, 0x1B
	0x03248D54 TBZ X20, 0x0, 0x3248DEC
	0x03248D58 LDR X8, [X19 + 0x18]!
	0x03248D5C CBZ X8, 0x3248D6C
	0x03248D60 LDR W8, [X8 + 0x18]
	0x03248D64 CMP W1, W8
	0x03248D68 B.EQ 0x3248E08
	0x03248D6C ADRP X8, 0xEAB000
	0x03248D70 LDR X8, [X8 + 0x618]
	0x03248D74 LDR X0, [X8]
	0x03248D78 BL 0x1C16D6C
	0x03248D7C LDR X21, [X19]
	0x03248D80 CBZ X21, 0x3248E74
	0x03248D84 MOV X20, X0
	0x03248D88 CBZ X0, 0x3248E74
	0x03248D8C ADRP X8, 0xEAB000
	0x03248D90 LDR X8, [X8 + 0x5A8]
	0x03248D94 LDR X0, [X8]
	0x03248D98 LDR W8, [X0 + 0xE0]
	0x03248D9C CBNZ W8, 0x3248DA4
	0x03248DA0 BL 0x1C16DFC
	0x03248DA4 LDR W0, [X21 + 0x18]
	0x03248DA8 LDR W1, [X20 + 0x18]
	0x03248DAC MOV X2, X31
	0x03248DB0 BL 0x337EE94
	0x03248DB4 MOV W4, W0
	0x03248DB8 MOV X0, X21
	0x03248DBC MOV W1, W31
	0x03248DC0 MOV X2, X20
	0x03248DC4 MOV W3, W31
	0x03248DC8 MOV X5, X31
	0x03248DCC BL 0x339FCE8
	0x03248DD0 LDR X0, [X19]
	0x03248DD4 CBZ X0, 0x3248E74
	0x03248DD8 LDR W2, [X0 + 0x18]
	0x03248DDC MOV W1, W31
	0x03248DE0 MOV X3, X31
	0x03248DE4 BL 0x339FA34
	0x03248DE8 B 0x3248E04
	0x03248DEC ADRP X8, 0xEAB000
	0x03248DF0 LDR X8, [X8 + 0x618]
	0x03248DF4 LDR X0, [X8]
	0x03248DF8 BL 0x1C16D6C
	0x03248DFC MOV X20, X0
	0x03248E00 ADD X19, X19, 0x18
	0x03248E04 STR X20, [X19]
	0x03248E08 LDP X20, X19, [X31 + 0x20]
	0x03248E0C LDP X22, X21, [X31 + 0x10]
	0x03248E10 LDR X30, [X31], #0x30
	0x03248E14 RET
	0x03248E18 ADRP X0, 0xEB3000
	0x03248E1C LDR X0, [X0 + 0x760]
	0x03248E20 BL 0x1C16D08
	0x03248E24 BL 0x1C16F10
	0x03248E28 MOV X19, X0
	0x03248E2C ADRP X0, 0xEB3000
	0x03248E30 LDR X0, [X0 + 0x768]
	0x03248E34 BL 0x1C16D08
	0x03248E38 MOV X20, X0
	0x03248E3C ADRP X0, 0xEDA000
	0x03248E40 LDR X0, [X0 + 0xBA8]
	0x03248E44 BL 0x1C16D08
	0x03248E48 MOV X2, X0
	0x03248E4C MOV X0, X19
	0x03248E50 MOV X1, X20
	0x03248E54 MOV X3, X31
	0x03248E58 BL 0x3311888
	0x03248E5C ADRP X0, 0xEDA000
	0x03248E60 LDR X0, [X0 + 0xBB0]
	0x03248E64 BL 0x1C16D08
	0x03248E68 MOV X1, X0
	0x03248E6C MOV X0, X19
	0x03248E70 BL 0x1C16DEC
	0x03248E74 BL 0x1C16F20
	0x03248E78 STP X30, X21, [X31 - 0x20]!
	0x03248E7C STP X20, X19, [X31 + 0x10]
	0x03248E80 MOV X19, X1
	0x03248E84 MOV X1, X31
	0x03248E88 MOV W21, W2
	0x03248E8C MOV X20, X0
	0x03248E90 BL 0x33BDD8C
	0x03248E94 CBZ X19, 0x3248F28
	0x03248E98 CMP W21, 0x10000
	0x03248E9C B.HI 0x3248F5C
	0x03248EA0 MOV X0, X20
	0x03248EA4 MOV W1, W21
	0x03248EA8 MOV W2, W31
	0x03248EAC STR W21, [X20 + 0x10]
	0x03248EB0 BL 0x3248CF8
	0x03248EB4 CBZ W21, 0x3248F14
	0x03248EB8 CMP W21, 0x1
	0x03248EBC MOV X9, X31
	0x03248EC0 CSINC W8, W21, W31, GT
	0x03248EC4 LDRH W10, [X19], #0x2
	0x03248EC8 LDR X11, [X20 + 0x18]
	0x03248ECC CBZ X11, 0x3248F20
	0x03248ED0 LDR W12, [X11 + 0x18]
	0x03248ED4 CMP W9, W12
	0x03248ED8 B.CS 0x3248F24
	0x03248EDC UBFM W12, W10, 0x8, 0x1F
	0x03248EE0 ADD X11, X11, X9
	0x03248EE4 STRB W12, [X11 + 0x20]
	0x03248EE8 LDR X11, [X20 + 0x18]
	0x03248EEC CBZ X11, 0x3248F20
	0x03248EF0 LDR W13, [X11 + 0x18]
	0x03248EF4 ADD X12, X9, 0x1
	0x03248EF8 CMP W12, W13
	0x03248EFC B.CS 0x3248F24
	0x03248F00 ADD X9, X11, X9
	0x03248F04 SUBS W8, W8, 0x1
	0x03248F08 STRB W10, [X9 + 0x21]
	0x03248F0C ADD X9, X12, 0x1
	0x03248F10 B.NE 0x3248EC4
	0x03248F14 LDP X20, X19, [X31 + 0x10]
	0x03248F18 LDP X30, X21, [X31], #0x20
	0x03248F1C RET
	0x03248F20 BL 0x1C16F20
	0x03248F24 BL 0x1C16F28

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x1195000
	007 Move X22, 0xEDB000
	008 Move W8, [X19+1135]
	009 Move X22, [X22+2520]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xEDB000
	015 Move X0, [X0+2520]
	016 Call 0x1C17CF4
	017 Move X0, 0xEDB000
	018 Move X0, [X0+2088]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+1135], W8
	022 Move X0, [X22]
	023 Move [X31+12], W31
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X22]
	029 Move X8, [X0+184]
	030 Move X19, [X8]
	031 Call 0x1C17D44
	032 Compare X19, 0
	033 JumpIfNotEqual {94}
	034 Move X0, [X22]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X22]
	040 Move X8, [X0+184]
	041 Move X19, [X8+8]
	042 Move [X31+12], W31
	043 Add X1, X31, 12
	044 Move X0, X19
	045 Move X2, X31
	046 Call Monitor.Enter, X0, X1
	047 Move X0, [X22]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1C17DFC
	052 Move X0, [X22]
	053 Move X8, [X0+184]
	054 Move X20, [X8]
	055 Call 0x1C17D44
	056 Compare X20, 0
	057 JumpIfEqual {59}
	058 Move X20, X31
	059 Move X8, 0xEDB000
	060 Move X8, [X8+2088]
	061 Move X0, [X8]
	062 Call 0x1C17F10
	063 Move X20, X0
	064 Move W1, W31
	065 Move W2, W31
	066 Move X3, X31
	067 Call UTF8Encoding..ctor, X0, X1, X2
	068 Move X0, [X22]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Call 0x1C17D44
	074 Move X8, [X22]
	075 Move X8, [X8+184]
	076 Move [X8], X20
	077 Move X8, [X22]
	078 Move X8, [X8+184]
	079 Move X21, [X8]
	080 Call 0x1C17D44
	081 Compare X21, 0
	082 JumpIfEqual {112}
	083 Move W8, 1
	084 Move X20, X31
	085 Move [X21+33], W8
	086 Move W8, [X31+12]
	087 Compare W8, 0
	088 JumpIfEqual {92}
	089 Move X0, X19
	090 Move X1, X31
	091 Call Monitor.Exit, X0
	092 Compare X20, 0
	093 JumpIfNotEqual {110}
	094 Move X0, [X22]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {100}
	098 Call 0x1C17DFC
	099 Move X0, [X22]
	100 Move X8, [X0+184]
	101 Move X19, [X8]
	102 Call 0x1C17D44
	103 Move X0, X19
	104 Move X20, [X31+32]
	105 Move X19, [X31+40]
	106 Move X22, [X31+16]
	107 Move X21, [X31+24]
	108 Move X30, [X31+48]
	109 Return X0
	110 Move X0, X20
	111 Call 0x1C17F18
	112 Call 0x1C17F20
	113 Move X21, X0
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X0, X21
	116 Call 0x3EB2AD0
	117 Move X20, [X0]
	118 Call 0x3EB2AE0
	119 Move X20, X31
	120 Move X21, X0
	121 Move W8, [X31+12]
	122 Compare W8, 0
	123 JumpIfEqual {127}
	124 Move X0, X19
	125 Move X1, X31
	126 Call Monitor.Exit, X0
	127 Compare X20, 0
	128 JumpIfNotEqual {131}
	129 Move X0, X21
	130 Call 0x1D2D690
	131 Move X0, X20
	132 Call 0x1C17F18
	133 Call 0x1991590

Method: System.String InternalCodePage(ref System.Int32 code_page)

Disassembly:
	0x03248F28 ADRP X0, 0xEB0000

ISIL:
	001 Call 0x1CB8280
	002 Return X0

Method: System.Text.Encoding GetDefaultEncoding()

Disassembly:
	0x03245BD4 ADRP X0, 0xED8000
	0x03245BD8 LDR X0, [X0 + 0x2E0]
	0x03245BDC BL 0x1C16D08
	0x03245BE0 LDR X8, [X20]
	0x03245BE4 LDR X1, [X8]
	0x03245BE8 BL 0x1C17270
	0x03245BEC TBZ X0, 0x0, 0x3245C08
	0x03245BF0 BL 0x3EB1AE0
	0x03245BF4 STR X31, [X19 + 0x10]
	0x03245BF8 LDP X20, X19, [X31 + 0x20]
	0x03245BFC LDP X22, X21, [X31 + 0x10]
	0x03245C00 LDP X30, X23, [X31], #0x30
	0x03245C04 RET
	0x03245C08 MOVZ W0, 0x8
	0x03245C0C BL 0x3EB1AF0
	0x03245C10 LDR X8, [X20]
	0x03245C14 STR X8, [X0]
	0x03245C18 ADRP X1, 0xC6F000
	0x03245C1C ADD X1, X1, 0xE58
	0x03245C20 MOV X2, X31
	0x03245C24 BL 0x3EB1B00
	0x03245C28 MOV X20, X0
	0x03245C2C BL 0x3EB1AE0
	0x03245C30 MOV X0, X20
	0x03245C34 BL 0x1D2C690
	0x03245C38 BL 0x1990590
	0x03245C3C STP X30, X19, [X31 - 0x10]!
	0x03245C40 LDRB W8, [X0 + 0x28]
	0x03245C44 MOV X19, X0
	0x03245C48 CBZ W8, 0x3245C54
	0x03245C4C MOV X0, X19
	0x03245C50 B 0x3245C7C
	0x03245C54 LDR X0, [X19 + 0x20]
	0x03245C58 CBZ X0, 0x3245C84
	0x03245C5C LDR X8, [X0]
	0x03245C60 LDR X9, [X8 + 0x338]
	0x03245C64 LDR X1, [X8 + 0x340]
	0x03245C68 BLR X9
	0x03245C6C LDR X8, [X19 + 0x10]
	0x03245C70 CBZ X8, 0x3245C7C
	0x03245C74 CBZ X0, 0x3245C84
	0x03245C78 STR X8, [X0 + 0x10]
	0x03245C7C LDP X30, X19, [X31], #0x10
	0x03245C80 RET
	0x03245C84 BL 0x1C16F20
	0x03245C88 STP X30, X21, [X31 - 0x20]!
	0x03245C8C STP X20, X19, [X31 + 0x10]
	0x03245C90 ADRP X21, 0x1197000
	0x03245C94 LDRB W8, [X21 + 0x459]
	0x03245C98 MOV X19, X1
	0x03245C9C MOV X20, X0
	0x03245CA0 TBNZ X8, 0x0, 0x3245CB8
	0x03245CA4 ADRP X0, 0xEDD000
	0x03245CA8 LDR X0, [X0 + 0xB20]
	0x03245CAC BL 0x1C16CF4
	0x03245CB0 MOVZ W8, 0x1
	0x03245CB4 STRB W8, [X21 + 0x459]
	0x03245CB8 CBZ X19, 0x3245CE0
	0x03245CBC ADRP X8, 0xEDD000
	0x03245CC0 LDR X8, [X8 + 0xB20]
	0x03245CC4 LDR X2, [X20 + 0x20]
	0x03245CC8 MOV X0, X19
	0x03245CCC LDP X20, X19, [X31 + 0x10]
	0x03245CD0 LDR X1, [X8]
	0x03245CD4 MOV X3, X31
	0x03245CD8 LDP X30, X21, [X31], #0x20
	0x03245CDC B 0x32A8BF0
	0x03245CE0 ADRP X0, 0xEB3000
	0x03245CE4 LDR X0, [X0 + 0x528]
	0x03245CE8 BL 0x1C16D08
	0x03245CEC BL 0x1C16F10
	0x03245CF0 MOV X19, X0
	0x03245CF4 ADRP X0, 0xED8000
	0x03245CF8 LDR X0, [X0 + 0x2D8]
	0x03245CFC BL 0x1C16D08
	0x03245D00 MOV X1, X0
	0x03245D04 MOV X0, X19
	0x03245D08 MOV X2, X31
	0x03245D0C BL 0x330E100
	0x03245D10 ADRP X0, 0xEDD000
	0x03245D14 LDR X0, [X0 + 0xB50]
	0x03245D18 BL 0x1C16D08
	0x03245D1C MOV X1, X0
	0x03245D20 MOV X0, X19
	0x03245D24 BL 0x1C16DEC
	0x03245D28 LDR X8, [X0]
	0x03245D2C MOV W4, W31
	0x03245D30 LDP X6, X5, [X8 + 0x198]
	0x03245D34 BR X6
	0x03245D38 STR X30, [X31 - 0x10]!
	0x03245D3C LDR X0, [X0 + 0x20]
	0x03245D40 CBZ X0, 0x3245D58
	0x03245D44 LDR X8, [X0]
	0x03245D48 LDR X5, [X8 + 0x2A8]
	0x03245D4C LDR X4, [X8 + 0x2B0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1198000
	005 Move X19, 0xEDE000
	006 Move W8, [X20+1136]
	007 Move X19, [X19+2520]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xEDE000
	013 Move X0, [X0+2520]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1136], W8
	017 Move X0, [X19]
	018 Move W8, 1
	019 Move [X31+12], W8
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Add X0, X31, 12
	025 Call 0x1CB8280
	026 Move W8, [X31+12]
	027 Add W31, W8, 1
	028 And W0, W8, 0xFFFFFFF
	029 Subtract W8, W0, 1
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move [X31+12], W0
	032 Move X9, -40558592
	033 Add X9, X9, 1155
	034 NotImplemented "Instruction ADR not yet implemented."
	035 Move W11, [X9]
	036 Add X10, X10, X11
	037 CallNoReturn X10
	038 Move W0, 0x4E9F
	039 Call Encoding.GetEncoding, X0
	040 Move W0, 1201
	041 Move W0, 0xFDE9
	042 Move W0, 1200
	043 Move W0, 0xFDEF
	044 Move W0, 1252
	045 Move [X31+12], W0
	046 Call Encoding.GetEncoding, X0
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Return X0
	051 Move X19, X0
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X0, X19
	054 Call 0x3EB2AD0
	055 Move X19, X0
	056 Move X0, 0xEAF000
	057 Move X0, [X0+2880]
	058 Call 0x1C17D08
	059 Move X8, [X19]
	060 Move X1, [X8]
	061 Call 0x1C18270
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {76}
	066 Move X0, 0xEB7000
	067 Move X0, [X0+1400]
	068 Call 0x1C17D08
	069 Move X8, [X19]
	070 Move X1, [X8]
	071 Call 0x1C18270
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {85}
	076 Call 0x3EB2AE0
	077 Move X0, 0xEDE000
	078 Move X0, [X0+2520]
	079 Call 0x1C17D08
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Call EncodingHelper.get_UTF8Unmarked
	085 Move W0, 8
	086 Call 0x3EB2AF0
	087 Move X8, [X19]
	088 Move [X0], X8
	089 Move X1, 0xC70000
	090 Add X1, X1, 3672
	091 Move X2, X31
	092 Call 0x3EB2B00
	093 Move X19, X0
	094 Call 0x3EB2AE0
	095 Move X0, X19
	096 Call 0x1D2D690
	097 Call 0x1991590

Method: System.Object InvokeI18N(System.String name, System.Object[] args)

Disassembly:
	0x03244008 MOV W3, W19
	0x0324400C BLR X9
	0x03244010 LDR X8, [X23]
	0x03244014 MOV W1, W0
	0x03244018 MOV X0, X8
	0x0324401C BL 0x1C16D6C
	0x03244020 LDR X8, [X22]
	0x03244024 MOV X23, X0
	0x03244028 MOV X0, X22
	0x0324402C MOV X1, X21
	0x03244030 LDR X9, [X8 + 0x258]
	0x03244034 LDR X6, [X8 + 0x260]
	0x03244038 MOV W2, W20
	0x0324403C MOV W3, W19
	0x03244040 MOV X4, X23
	0x03244044 MOV W5, W31
	0x03244048 BLR X9
	0x0324404C MOV X0, X23
	0x03244050 LDP X20, X19, [X31 + 0x30]
	0x03244054 LDP X22, X21, [X31 + 0x20]
	0x03244058 LDP X24, X23, [X31 + 0x10]
	0x0324405C LDR X30, [X31], #0x40
	0x03244060 RET
	0x03244064 STP X30, X21, [X31 - 0x20]!
	0x03244068 STP X20, X19, [X31 + 0x10]
	0x0324406C ADRP X21, 0x1198000
	0x03244070 LDRB W8, [X21 + 0x441]
	0x03244074 MOV X19, X1
	0x03244078 MOV X20, X0
	0x0324407C TBNZ X8, 0x0, 0x3244094
	0x03244080 ADRP X0, 0xEAF000
	0x03244084 LDR X0, [X0 + 0x618]
	0x03244088 BL 0x1C16CF4
	0x0324408C MOVZ W8, 0x1
	0x03244090 STRB W8, [X21 + 0x441]
	0x03244094 CBZ X19, 0x3244100
	0x03244098 LDR X8, [X20]
	0x0324409C ADRP X21, 0xEAF000
	0x032440A0 MOV X0, X20
	0x032440A4 MOV X1, X19
	0x032440A8 LDP X9, X2, [X8 + 0x1F8]
	0x032440AC LDR X21, [X21 + 0x618]
	0x032440B0 BLR X9
	0x032440B4 LDR X8, [X21]
	0x032440B8 MOV W1, W0
	0x032440BC MOV X0, X8
	0x032440C0 BL 0x1C16D6C
	0x032440C4 LDR X8, [X20]
	0x032440C8 LDR W3, [X19 + 0x10]
	0x032440CC MOV X21, X0
	0x032440D0 MOV X0, X20
	0x032440D4 LDR X9, [X8 + 0x278]
	0x032440D8 LDR X6, [X8 + 0x280]
	0x032440DC MOV X1, X19
	0x032440E0 MOV W2, W31
	0x032440E4 MOV X4, X21
	0x032440E8 MOV W5, W31
	0x032440EC BLR X9
	0x032440F0 LDP X20, X19, [X31 + 0x10]
	0x032440F4 MOV X0, X21
	0x032440F8 LDP X30, X21, [X31], #0x20
	0x032440FC RET
	0x03244100 ADRP X0, 0xEDE000
	0x03244104 LDR X0, [X0 + 0xA78]
	0x03244108 BL 0x1C16D08
	0x0324410C MOV X1, X31
	0x03244110 BL 0x33BDD84
	0x03244114 MOV X19, X0
	0x03244118 ADRP X0, 0xEB4000
	0x0324411C LDR X0, [X0 + 0x528]
	0x03244120 BL 0x1C16D08
	0x03244124 BL 0x1C16F10
	0x03244128 MOV X20, X0
	0x0324412C ADRP X0, 0xED8000
	0x03244130 LDR X0, [X0 + 0xCC0]
	0x03244134 BL 0x1C16D08
	0x03244138 MOV X1, X0
	0x0324413C MOV X0, X20
	0x03244140 MOV X2, X19
	0x03244144 MOV X3, X31
	0x03244148 BL 0x3315F7C
	0x0324414C ADRP X0, 0xEDE000
	0x03244150 LDR X0, [X0 + 0xA80]
	0x03244154 BL 0x1C16D08
	0x03244158 MOV X1, X0
	0x0324415C MOV X0, X20
	0x03244160 BL 0x1C16DEC
	0x03244164 STP X30, X23, [X31 - 0x30]!
	0x03244168 STP X22, X21, [X31 + 0x10]
	0x0324416C STP X20, X19, [X31 + 0x20]
	0x03244170 CBZ X1, 0x32441C8
	0x03244174 MOV X23, X0
	0x03244178 MOV X0, X1
	0x0324417C MOV X1, X31
	0x03244180 MOV W19, W5
	0x03244184 MOV X20, X4
	0x03244188 MOV W21, W3
	0x0324418C MOV W22, W2
	0x03244190 BL 0x322D958
	0x03244194 LDR X8, [X23]
	0x03244198 MOV W2, W22
	0x0324419C MOV W3, W21
	0x032441A0 MOV X4, X20
	0x032441A4 LDR X7, [X8 + 0x258]
	0x032441A8 LDR X6, [X8 + 0x260]
	0x032441AC MOV W5, W19
	0x032441B0 LDP X20, X19, [X31 + 0x20]
	0x032441B4 LDP X22, X21, [X31 + 0x10]
	0x032441B8 MOV X1, X0
	0x032441BC MOV X0, X23
	0x032441C0 LDP X30, X23, [X31], #0x30
	0x032441C4 BR X7
	0x032441C8 ADRP X0, 0xEB4000
	0x032441CC LDR X0, [X0 + 0x528]
	0x032441D0 BL 0x1C16D08
	0x032441D4 BL 0x1C16F10
	0x032441D8 MOV X19, X0
	0x032441DC ADRP X0, 0xED8000
	0x032441E0 LDR X0, [X0 + 0xCC0]
	0x032441E4 BL 0x1C16D08
	0x032441E8 MOV X1, X0
	0x032441EC MOV X0, X19
	0x032441F0 MOV X2, X31
	0x032441F4 BL 0x330E100
	0x032441F8 ADRP X0, 0xEDE000
	0x032441FC LDR X0, [X0 + 0xA88]
	0x03244200 BL 0x1C16D08
	0x03244204 MOV X1, X0
	0x03244208 MOV X0, X19
	0x0324420C BL 0x1C16DEC
	0x03244210 LDR X8, [X0]
	0x03244214 LDR X6, [X8 + 0x298]
	0x03244218 LDR X5, [X8 + 0x2A0]
	0x0324421C BR X6
	0x03244220 STR X30, [X31 - 0x40]!
	0x03244224 STP X24, X23, [X31 + 0x10]
	0x03244228 STP X22, X21, [X31 + 0x20]
	0x0324422C STP X20, X19, [X31 + 0x30]
	0x03244230 ADRP X24, 0x1198000
	0x03244234 LDRB W8, [X24 + 0x442]
	0x03244238 MOV W20, W4
	0x0324423C MOV X19, X3
	0x03244240 MOV W21, W2
	0x03244244 MOV X23, X1
	0x03244248 MOV X22, X0
	0x0324424C TBNZ X8, 0x0, 0x3244270
	0x03244250 ADRP X0, 0xEAF000
	0x03244254 LDR X0, [X0 + 0x618]
	0x03244258 BL 0x1C16CF4
	0x0324425C ADRP X0, 0xEB8000
	0x03244260 LDR X0, [X0 + 0x8D8]
	0x03244264 BL 0x1C16CF4
	0x03244268 MOVZ W8, 0x1
	0x0324426C STRB W8, [X24 + 0x442]
	0x03244270 CBZ X19, 0x324436C
	0x03244274 CBZ X23, 0x3244378
	0x03244278 TBNZ X20, 0x1F, 0x32443C8
	0x0324427C TBNZ X21, 0x1F, 0x32443C8
	0x03244280 ADRP X8, 0xEB8000
	0x03244284 LDR X8, [X8 + 0x8D8]
	0x03244288 MOV W1, W21
	0x0324428C LDR X0, [X8]
	0x03244290 BL 0x1C16D6C
	0x03244294 CMP W21, 0x1
	0x03244298 MOV X24, X0
	0x0324429C B.LT 0x32442D0
	0x032442A0 CBZ X24, 0x3244368
	0x032442A4 LDR W9, [X24 + 0x18]
	0x032442A8 MOV X8, X31
	0x032442AC MOV W10, W21
	0x032442B0 ADD X11, X24, 0x20
	0x032442B4 CMP X8, X9
	0x032442B8 B.CS 0x3244364
	0x032442BC LDRH W12, [X23], #0x2
	0x032442C0 STRH W12, [X11, X8, LSL #1]
	0x032442C4 ADD X8, X8, 0x1
	0x032442C8 CMP X10, X8
	0x032442CC B.NE 0x32442B4
	0x032442D0 ADRP X8, 0xEAF000
	0x032442D4 LDR X8, [X8 + 0x618]
	0x032442D8 MOV W1, W20
	0x032442DC LDR X0, [X8]
	0x032442E0 BL 0x1C16D6C
	0x032442E4 LDR X8, [X22]
	0x032442E8 MOV X23, X0
	0x032442EC MOV X0, X22
	0x032442F0 MOV X1, X24
	0x032442F4 LDR X9, [X8 + 0x258]
	0x032442F8 LDR X6, [X8 + 0x260]
	0x032442FC MOV W2, W31
	0x03244300 MOV W3, W21
	0x03244304 MOV X4, X23
	0x03244308 MOV W5, W31
	0x0324430C BLR X9
	0x03244310 CMP W0, W20
	0x03244314 CSEL W0, W0, W20, LT
	0x03244318 CMP W0, 0x1
	0x0324431C B.LT 0x3244350
	0x03244320 CBZ X23, 0x3244368
	0x03244324 MOV X8, X31
	0x03244328 MOV W9, W0
	0x0324432C ADD X10, X23, 0x20
	0x03244330 LDR W11, [X23 + 0x18]
	0x03244334 CMP X8, X11
	0x03244338 B.CS 0x3244364
	0x0324433C LDRB W11, [X10, X8, LSL]
	0x03244340 STRB W11, [X19, X8, LSL]
	0x03244344 ADD X8, X8, 0x1
	0x03244348 CMP X9, X8
	0x0324434C B.NE 0x3244330
	0x03244350 LDP X20, X19, [X31 + 0x30]
	0x03244354 LDP X22, X21, [X31 + 0x20]
	0x03244358 LDP X24, X23, [X31 + 0x10]
	0x0324435C LDR X30, [X31], #0x40
	0x03244360 RET
	0x03244364 BL 0x1C16F28
	0x03244368 BL 0x1C16F20
	0x0324436C ADRP X0, 0xEDE000
	0x03244370 LDR X0, [X0 + 0x308]
	0x03244374 B 0x3244380
	0x03244378 ADRP X0, 0xEDE000
	0x0324437C LDR X0, [X0 + 0x2D8]
	0x03244380 BL 0x1C16D08
	0x03244384 MOV X19, X0
	0x03244388 ADRP X0, 0xEDE000
	0x0324438C LDR X0, [X0 + 0x2E0]
	0x03244390 BL 0x1C16D08
	0x03244394 MOV X1, X31
	0x03244398 BL 0x33BDD84
	0x0324439C MOV X20, X0
	0x032443A0 ADRP X0, 0xEB4000
	0x032443A4 LDR X0, [X0 + 0x528]
	0x032443A8 BL 0x1C16D08
	0x032443AC BL 0x1C16F10
	0x032443B0 MOV X1, X19
	0x032443B4 MOV X2, X20
	0x032443B8 MOV X3, X31
	0x032443BC MOV X21, X0
	0x032443C0 BL 0x3315F7C
	0x032443C4 B 0x3244424
	0x032443C8 ADRP X8, 0xEDE000
	0x032443CC ADRP X9, 0xEDE000
	0x032443D0 LDR X8, [X8 + 0x328]
	0x032443D4 LDR X9, [X9 + 0x310]
	0x032443D8 CMP W21, 0x0
	0x032443DC CSEL X0, X9, X8, LT
	0x032443E0 BL 0x1C16D08
	0x032443E4 MOV X19, X0
	0x032443E8 ADRP X0, 0xED7000
	0x032443EC LDR X0, [X0 + 0x670]
	0x032443F0 BL 0x1C16D08
	0x032443F4 MOV X1, X31
	0x032443F8 BL 0x33BDD84
	0x032443FC MOV X20, X0
	0x03244400 ADRP X0, 0xEB7000
	0x03244404 LDR X0, [X0 + 0x760]
	0x03244408 BL 0x1C16D08
	0x0324440C BL 0x1C16F10
	0x03244410 MOV X1, X19
	0x03244414 MOV X2, X20
	0x03244418 MOV X3, X31
	0x0324441C MOV X21, X0
	0x03244420 BL 0x3311888
	0x03244424 ADRP X0, 0xEDE000
	0x03244428 LDR X0, [X0 + 0xA90]
	0x0324442C BL 0x1C16D08
	0x03244430 MOV X1, X0
	0x03244434 MOV X0, X21
	0x03244438 BL 0x1C16DEC
	0x0324443C STR X30, [X31 - 0x30]!
	0x03244440 STP X22, X21, [X31 + 0x10]
	0x03244444 STP X20, X19, [X31 + 0x20]
	0x03244448 ADRP X22, 0x1198000
	0x0324444C LDRB W8, [X22 + 0x443]
	0x03244450 MOV W19, W2
	0x03244454 MOV X21, X1
	0x03244458 MOV X20, X0
	0x0324445C TBNZ X8, 0x0, 0x3244474
	0x03244460 ADRP X0, 0xEAF000
	0x03244464 LDR X0, [X0 + 0x618]
	0x03244468 BL 0x1C16CF4
	0x0324446C MOVZ W8, 0x1
	0x03244470 STRB W8, [X22 + 0x443]
	0x03244474 CBZ X21, 0x32444F4
	0x03244478 TBNZ X19, 0x1F, 0x3244544
	0x0324447C ADRP X8, 0xEAF000
	0x03244480 LDR X8, [X8 + 0x618]
	0x03244484 MOV W1, W19
	0x03244488 LDR X0, [X8]
	0x0324448C BL 0x1C16D6C
	0x03244490 MOV X1, X0
	0x03244494 CBZ W19, 0x32444C8
	0x03244498 CBZ X1, 0x32445A8
	0x0324449C LDR W9, [X1 + 0x18]
	0x032444A0 MOV X8, X31
	0x032444A4 MOV W10, W19
	0x032444A8 ADD X11, X1, 0x20
	0x032444AC CMP X8, X9
	0x032444B0 B.CS 0x32444F0
	0x032444B4 LDRB W12, [X21, X8, LSL]
	0x032444B8 STRB W12, [X11, X8, LSL]
	0x032444BC ADD X8, X8, 0x1
	0x032444C0 CMP X10, X8
	0x032444C4 B.NE 0x32444AC
	0x032444C8 LDR X8, [X20]
	0x032444CC MOV X0, X20
	0x032444D0 MOV W3, W19
	0x032444D4 LDP X20, X19, [X31 + 0x20]
	0x032444D8 LDR X5, [X8 + 0x2A8]
	0x032444DC LDR X4, [X8 + 0x2B0]
	0x032444E0 LDP X22, X21, [X31 + 0x10]
	0x032444E4 MOV W2, W31
	0x032444E8 LDR X30, [X31], #0x30
	0x032444EC BR X5
	0x032444F0 BL 0x1C16F28
	0x032444F4 ADRP X0, 0xEDE000
	0x032444F8 LDR X0, [X0 + 0x2E0]
	0x032444FC BL 0x1C16D08
	0x03244500 MOV X1, X31
	0x03244504 BL 0x33BDD84
	0x03244508 MOV X19, X0
	0x0324450C ADRP X0, 0xEB4000
	0x03244510 LDR X0, [X0 + 0x528]
	0x03244514 BL 0x1C16D08
	0x03244518 BL 0x1C16F10
	0x0324451C MOV X20, X0
	0x03244520 ADRP X0, 0xEDE000
	0x03244524 LDR X0, [X0 + 0x308]
	0x03244528 BL 0x1C16D08
	0x0324452C MOV X1, X0
	0x03244530 MOV X0, X20
	0x03244534 MOV X2, X19
	0x03244538 MOV X3, X31
	0x0324453C BL 0x3315F7C
	0x03244540 B 0x3244590
	0x03244544 ADRP X0, 0xED7000
	0x03244548 LDR X0, [X0 + 0x670]
	0x0324454C BL 0x1C16D08
	0x03244550 MOV X1, X31
	0x03244554 BL 0x33BDD84
	0x03244558 MOV X19, X0
	0x0324455C ADRP X0, 0xEB7000
	0x03244560 LDR X0, [X0 + 0x760]
	0x03244564 BL 0x1C16D08
	0x03244568 BL 0x1C16F10
	0x0324456C MOV X20, X0
	0x03244570 ADRP X0, 0xED7000
	0x03244574 LDR X0, [X0 + 0x648]
	0x03244578 BL 0x1C16D08
	0x0324457C MOV X1, X0
	0x03244580 MOV X0, X20
	0x03244584 MOV X2, X19
	0x03244588 MOV X3, X31
	0x0324458C BL 0x3311888
	0x03244590 ADRP X0, 0xEDE000
	0x03244594 LDR X0, [X0 + 0xA98]
	0x03244598 BL 0x1C16D08
	0x0324459C MOV X1, X0
	0x032445A0 MOV X0, X20
	0x032445A4 BL 0x1C16DEC
	0x032445A8 BL 0x1C16F20
	0x032445AC LDR X8, [X0]
	0x032445B0 LDR X4, [X8 + 0x2B8]
	0x032445B4 LDR X3, [X8 + 0x2C0]
	0x032445B8 BR X4
	0x032445BC STR X30, [X31 - 0x40]!
	0x032445C0 STP X24, X23, [X31 + 0x10]
	0x032445C4 STP X22, X21, [X31 + 0x20]
	0x032445C8 STP X20, X19, [X31 + 0x30]
	0x032445CC ADRP X24, 0x1198000
	0x032445D0 ADRP X23, 0xEB8000
	0x032445D4 LDRB W8, [X24 + 0x444]
	0x032445D8 LDR X23, [X23 + 0x8D8]
	0x032445DC MOV W19, W3
	0x032445E0 MOV W20, W2
	0x032445E4 MOV X21, X1
	0x032445E8 MOV X22, X0
	0x032445EC TBNZ X8, 0x0, 0x3244604
	0x032445F0 ADRP X0, 0xEB8000
	0x032445F4 LDR X0, [X0 + 0x8D8]
	0x032445F8 BL 0x1C16CF4
	0x032445FC MOVZ W8, 0x1
	0x03244600 STRB W8, [X24 + 0x444]
	0x03244604 LDR X8, [X22]
	0x03244608 MOV X0, X22
	0x0324460C MOV X1, X21
	0x03244610 MOV W2, W20
	0x03244614 LDR X9, [X8 + 0x2A8]
	0x03244618 LDR X4, [X8 + 0x2B0]
	0x0324461C MOV W3, W19
	0x03244620 BLR X9
	0x03244624 LDR X8, [X23]
	0x03244628 MOV W1, W0
	0x0324462C MOV X0, X8
	0x03244630 BL 0x1C16D6C
	0x03244634 LDR X8, [X22]
	0x03244638 MOV X23, X0
	0x0324463C MOV X0, X22
	0x03244640 MOV X1, X21
	0x03244644 LDR X9, [X8 + 0x2E8]
	0x03244648 LDR X6, [X8 + 0x2F0]
	0x0324464C MOV W2, W20
	0x03244650 MOV W3, W19
	0x03244654 MOV X4, X23
	0x03244658 MOV W5, W31
	0x0324465C BLR X9
	0x03244660 MOV X0, X23
	0x03244664 LDP X20, X19, [X31 + 0x30]
	0x03244668 LDP X22, X21, [X31 + 0x20]
	0x0324466C LDP X24, X23, [X31 + 0x10]
	0x03244670 LDR X30, [X31], #0x40
	0x03244674 RET
	0x03244678 STR X30, [X31 - 0x40]!
	0x0324467C STP X24, X23, [X31 + 0x10]
	0x03244680 STP X22, X21, [X31 + 0x20]
	0x03244684 STP X20, X19, [X31 + 0x30]
	0x03244688 ADRP X24, 0x1198000
	0x0324468C LDRB W8, [X24 + 0x445]
	0x03244690 MOV W20, W4
	0x03244694 MOV X19, X3
	0x03244698 MOV W21, W2
	0x0324469C MOV X23, X1
	0x032446A0 MOV X22, X0
	0x032446A4 TBNZ X8, 0x0, 0x32446C8
	0x032446A8 ADRP X0, 0xEAF000
	0x032446AC LDR X0, [X0 + 0x618]
	0x032446B0 BL 0x1C16CF4
	0x032446B4 ADRP X0, 0xEB8000
	0x032446B8 LDR X0, [X0 + 0x8D8]
	0x032446BC BL 0x1C16CF4
	0x032446C0 MOVZ W8, 0x1
	0x032446C4 STRB W8, [X24 + 0x445]
	0x032446C8 CBZ X19, 0x32447C4
	0x032446CC CBZ X23, 0x32447D0
	0x032446D0 TBNZ X20, 0x1F, 0x3244820
	0x032446D4 TBNZ X21, 0x1F, 0x3244820
	0x032446D8 ADRP X8, 0xEAF000
	0x032446DC LDR X8, [X8 + 0x618]
	0x032446E0 MOV W1, W21
	0x032446E4 LDR X0, [X8]
	0x032446E8 BL 0x1C16D6C
	0x032446EC CMP W21, 0x1
	0x032446F0 MOV X24, X0
	0x032446F4 B.LT 0x3244728
	0x032446F8 CBZ X24, 0x32447C0
	0x032446FC LDR W9, [X24 + 0x18]
	0x03244700 MOV X8, X31
	0x03244704 MOV W10, W21
	0x03244708 ADD X11, X24, 0x20
	0x0324470C CMP X8, X9
	0x03244710 B.CS 0x32447BC
	0x03244714 LDRB W12, [X23, X8, LSL]
	0x03244718 STRB W12, [X11, X8, LSL]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X19, 0x1199000
	009 Move X23, 0xEDF000
	010 Move W8, [X19+1137]
	011 Move X23, [X23+2520]
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0xEDF000
	019 Move X0, [X0+2520]
	020 Call 0x1C17CF4
	021 Move X0, 0xEB0000
	022 Move X0, [X0+1728]
	023 Call 0x1C17CF4
	024 Move X0, 0xEDF000
	025 Move X0, [X0+2592]
	026 Call 0x1C17CF4
	027 Move X0, 0xEDF000
	028 Move X0, [X0+2600]
	029 Call 0x1C17CF4
	030 Move X0, 0xEDF000
	031 Move X0, [X0+2608]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X19+1137], W8
	035 Move X0, [X23]
	036 Move [X31+32], W31
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X23]
	042 Move X8, [X0+184]
	043 Move X19, [X8+8]
	044 Move [X31+44], W31
	045 Add X1, X31, 44
	046 Move X0, X19
	047 Move X2, X31
	048 Call Monitor.Enter, X0, X1
	049 Move X0, [X23]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {55}
	053 Call 0x1C17DFC
	054 Move X0, [X23]
	055 Move X8, [X0+184]
	056 Move W9, [X8+24]
	057 Compare W9, 0
	058 JumpIfEqual {78}
	059 Move X21, X31
	060 Move X20, X31
	061 Move W8, [X31+44]
	062 Compare W8, 0
	063 JumpIfEqual {67}
	064 Move X0, X19
	065 Move X1, X31
	066 Call Monitor.Exit, X0
	067 Compare X21, 0
	068 JumpIfNotEqual {192}
	069 Move X0, X20
	070 Move X20, [X31+80]
	071 Move X19, [X31+88]
	072 Move X22, [X31+64]
	073 Move X21, [X31+72]
	074 Move X30, [X31+48]
	075 Move X23, [X31+56]
	076 Add X31, X31, 96
	077 Return X0
	078 Move W9, [X0+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {84}
	081 Call 0x1C17DFC
	082 Move X8, [X23]
	083 Move X8, [X8+184]
	084 Move X0, [X8+16]
	085 Move X1, X31
	086 Move X2, X31
	087 Call Assembly.op_Equality, X0, X1
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {123}
	092 Move X8, 0xEDF000
	093 Move X8, [X8+2608]
	094 Move X0, [X8]
	095 Move X1, X31
	096 Call Assembly.Load, X0
	097 Move X22, X0
	098 Move X0, [X23]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfEqual {104}
	102 Move X8, [X0+184]
	103 Move [X8+16], X22
	104 Call 0x1C17DFC
	105 Move X0, [X23]
	106 Move W8, [X0+224]
	107 Move X9, [X0+184]
	108 Move [X9+16], X22
	109 Compare W8, 0
	110 JumpIfNotEqual {115}
	111 Call 0x1C17DFC
	112 Move X8, [X23]
	113 Move X8, [X8+184]
	114 Move X22, [X8+16]
	115 Move X0, X22
	116 Move X1, X31
	117 Move X2, X31
	118 Call Assembly.op_Equality, X0, X1
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfEqual {59}
	123 Move X0, [X23]
	124 Move W8, [X0+224]
	125 Compare W8, 0
	126 JumpIfNotEqual {129}
	127 Call 0x1C17DFC
	128 Move X0, [X23]
	129 Move X8, [X0+184]
	130 Move X0, [X8+16]
	131 Compare X0, 0
	132 JumpIfEqual {194}
	133 Move X9, 0xEDF000
	134 Move X8, [X0]
	135 Move X9, [X9+2600]
	136 Move X2, [X8+576]
	137 Move X1, [X9]
	138 Move X9, [X8+568]
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Move X8, 0xEB0000
	141 Move X8, [X8+1728]
	142 Move X22, X0
	143 Move X0, [X8]
	144 Move W8, [X0+224]
	145 Compare W8, 0
	146 JumpIfNotEqual {148}
	147 Call 0x1C17DFC
	148 Move X0, X22
	149 Move X1, X31
	150 Move X2, X31
	151 Call Type.op_Equality, X0, X1
	152 Move TEMP, X0
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfEqual {59}
	156 Compare X22, 0
	157 JumpIfEqual {195}
	158 Move X9, 0xEDF000
	159 Move X8, [X22]
	160 Move X9, [X9+2592]
	161 Move X1, [X9]
	162 Move X9, [X8+2088]
	163 Move X8, [X8+2096]
	164 Move W2, 0x1018
	165 Move X0, X22
	166 Move X3, X31
	167 Move X4, X31
	168 Move X5, X31
	169 Move X6, X31
	170 Move X7, X31
	171 Move [X31], X31
	172 Move [X31+8], X8
	173 NotImplemented "Instruction BLR not yet implemented."
	174 Move X4, X0
	175 Compare X0, 0
	176 JumpIfEqual {59}
	177 Move X8, [X22]
	178 Move X9, [X8+2088]
	179 Move X8, [X8+2096]
	180 Move W2, 276
	181 Move X0, X22
	182 Move X1, X21
	183 Move X3, X31
	184 Move X5, X20
	185 Move X6, X31
	186 Move X7, X31
	187 Move [X31], X31
	188 Move [X31+8], X8
	189 NotImplemented "Instruction BLR not yet implemented."
	190 Move X20, X0
	191 Move X21, X31
	192 Move X0, X21
	193 Call 0x1C17F18
	194 Call 0x1C17F20
	195 Call 0x1C17F20
	196 Move X21, X1
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move X20, X0
	199 Move X0, X20
	200 Call 0x3EB2AD0
	201 Move X20, X0
	202 Move X0, 0xED9000
	203 Move X0, [X0+40]
	204 Call 0x1C17D08
	205 Move X8, [X20]
	206 Move X1, [X8]
	207 Call 0x1C18270
	208 Move TEMP, X0
	209 And TEMP, TEMP, 1
	210 Compare TEMP, 1
	211 JumpIfNotEqual {213}
	212 Move W21, 17
	213 Move X0, 0xEDE000
	214 Move X0, [X0+1680]
	215 Call 0x1C17D08
	216 Move X8, [X20]
	217 Move X1, [X8]
	218 Call 0x1C18270
	219 Move TEMP, X0
	220 And TEMP, TEMP, 1
	221 Compare TEMP, 1
	222 JumpIfNotEqual {233}
	223 Move W21, 18
	224 Move X8, [X20]
	225 NotImplemented "Instruction LDRSW not yet implemented."
	226 Add X10, X31, 16
	227 Move [X10], X8
	228 Add W8, W9, 1
	229 Move [X31+32], W8
	230 Call 0x3EB2AE0
	231 NotImplemented "Instruction CMP not yet implemented."
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Move W0, 8
	234 Call 0x3EB2AF0
	235 Move X8, [X20]
	236 Move [X0], X8
	237 Move X1, 0xC71000
	238 Add X1, X1, 3672
	239 Move X2, X31
	240 Call 0x3EB2B00
	241 Move X21, X1
	242 Move X20, X0
	243 Call 0x3EB2AE0
	244 Move X21, X1
	245 Move X20, X0
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move X0, X20
	248 Call 0x3EB2AD0
	249 Move X20, X0
	250 Move X0, 0xED9000
	251 Move X0, [X0+40]
	252 Call 0x1C17D08
	253 Move X8, [X20]
	254 Move X1, [X8]
	255 Call 0x1C18270
	256 Move TEMP, X0
	257 And TEMP, TEMP, 1
	258 Compare TEMP, 1
	259 JumpIfNotEqual {261}
	260 Move W21, 14
	261 Move X0, 0xEDE000
	262 Move X0, [X0+1680]
	263 Call 0x1C17D08
	264 Move X8, [X20]
	265 Move X1, [X8]
	266 Call 0x1C18270
	267 Move TEMP, X0
	268 And TEMP, TEMP, 1
	269 Compare TEMP, 1
	270 JumpIfNotEqual {272}
	271 Move W21, 15
	272 Move X0, 0xEB9000
	273 Move X0, [X0+1880]
	274 Call 0x1C17D08
	275 Move X8, [X20]
	276 Move X1, [X8]
	277 Call 0x1C18270
	278 Move TEMP, X0
	279 And TEMP, TEMP, 1
	280 Compare TEMP, 1
	281 JumpIfNotEqual {303}
	282 Move W21, 16
	283 Move X8, [X20]
	284 NotImplemented "Instruction LDRSW not yet implemented."
	285 Add X10, X31, 16
	286 Move [X10], X8
	287 Add W8, W9, 1
	288 Move [X31+32], W8
	289 Call 0x3EB2AE0
	290 NotImplemented "Instruction CMP not yet implemented."
	291 NotImplemented "Instruction CMP not yet implemented."
	292 NotImplemented "Instruction CMP not yet implemented."
	293 Move X0, 0xEDF000
	294 Move X0, [X0+2520]
	295 Call 0x1C17D08
	296 Move W8, [X0+224]
	297 Compare W8, 0
	298 JumpIfNotEqual {300}
	299 Call 0x1C17DFC
	300 Move X0, 0xEDF000
	301 Move X0, [X0+2520]
	302 Call 0x1C17D08
	303 Move W0, 8
	304 Call 0x3EB2AF0
	305 Move X8, [X20]
	306 Move [X0], X8
	307 Move X1, 0xC71000
	308 Add X1, X1, 3672
	309 Move X2, X31
	310 Call 0x3EB2B00
	311 Move X21, X1
	312 Move X20, X0
	313 Call 0x3EB2AE0
	314 Move X21, X1
	315 Move X20, X0
	316 Move X21, X1
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X20, X0
	319 Move X0, X20
	320 Call 0x3EB2AD0
	321 Move X20, X0
	322 Move X0, 0xEB9000
	323 Move X0, [X0+1880]
	324 Call 0x1C17D08
	325 Move X8, [X20]
	326 Move X1, [X8]
	327 Call 0x1C18270
	328 Move TEMP, X0
	329 And TEMP, TEMP, 1
	330 Compare TEMP, 1
	331 JumpIfNotEqual {349}
	332 Move X8, [X20]
	333 NotImplemented "Instruction LDRSW not yet implemented."
	334 Add X10, X31, 16
	335 Move [X10], X8
	336 Add W8, W9, 1
	337 Move [X31+32], W8
	338 Call 0x3EB2AE0
	339 Move X0, 0xEDF000
	340 Move X0, [X0+2520]
	341 Call 0x1C17D08
	342 Move W8, [X0+224]
	343 Compare W8, 0
	344 JumpIfNotEqual {346}
	345 Call 0x1C17DFC
	346 Move X0, 0xEDF000
	347 Move X0, [X0+2520]
	348 Call 0x1C17D08
	349 Move W0, 8
	350 Call 0x3EB2AF0
	351 Move X8, [X20]
	352 Move [X0], X8
	353 Move X1, 0xC71000
	354 Add X1, X1, 3672
	355 Move X2, X31
	356 Call 0x3EB2B00
	357 Move X21, X1
	358 Move X20, X0
	359 Call 0x3EB2AE0
	360 NotImplemented "Instruction CMP not yet implemented."
	361 Move X0, X20
	362 Call 0x3EB2AD0
	363 Move X20, X0
	364 Move X0, 0xEDE000
	365 Move X0, [X0+3048]
	366 Call 0x1C17D08
	367 Move X8, [X20]
	368 Move X1, [X8]
	369 Call 0x1C18270
	370 Move TEMP, X0
	371 And TEMP, TEMP, 1
	372 Compare TEMP, 1
	373 JumpIfNotEqual {383}
	374 Move X8, [X20]
	375 NotImplemented "Instruction LDRSW not yet implemented."
	376 Add X10, X31, 16
	377 Move [X10], X8
	378 Add W8, W9, 1
	379 Move [X31+32], W8
	380 Call 0x3EB2AE0
	381 Move X21, X31
	382 Move X20, X31
	383 Move W0, 8
	384 Call 0x3EB2AF0
	385 Move X8, [X20]
	386 Move [X0], X8
	387 Move X1, 0xC71000
	388 Add X1, X1, 3672
	389 Move X2, X31
	390 Call 0x3EB2B00
	391 Move X21, X1
	392 Move X20, X0
	393 Call 0x3EB2AE0
	394 Move X21, X1
	395 Move X20, X0
	396 NotImplemented "Instruction CMP not yet implemented."
	397 Move X0, X20
	398 Call 0x3EB2AD0
	399 Move X20, X0
	400 Move X0, 0xEB9000
	401 Move X0, [X0+1880]
	402 Call 0x1C17D08
	403 Move X8, [X20]
	404 Move X1, [X8]
	405 Call 0x1C18270
	406 Move TEMP, X0
	407 And TEMP, TEMP, 1
	408 Compare TEMP, 1
	409 JumpIfNotEqual {435}
	410 Move X8, [X20]
	411 NotImplemented "Instruction LDRSW not yet implemented."
	412 Add X10, X31, 16
	413 Move [X10], X8
	414 Add W8, W9, 1
	415 Move [X31+32], W8
	416 Call 0x3EB2AE0
	417 Move X0, 0xEDF000
	418 Move X0, [X0+2520]
	419 Call 0x1C17D08
	420 Move W8, [X0+224]
	421 Compare W8, 0
	422 JumpIfNotEqual {424}
	423 Call 0x1C17DFC
	424 Move X0, 0xEDF000
	425 Move X0, [X0+2520]
	426 Call 0x1C17D08
	427 Move X8, [X0+184]
	428 Move W9, 1
	429 Move X21, X31
	430 Move X20, X31
	431 Move [X8+24], W9
	432 Move W8, [X31+32]
	433 Subtract W8, W8, 1
	434 Move [X31+32], W8
	435 Move W0, 8
	436 Call 0x3EB2AF0
	437 Move X8, [X20]
	438 Move [X0], X8
	439 Move X1, 0xC71000
	440 Add X1, X1, 3672
	441 Move X2, X31
	442 Call 0x3EB2B00
	443 Move X21, X1
	444 Move X20, X0
	445 Call 0x3EB2AE0
	446 Move X21, X1
	447 Move X20, X0
	448 NotImplemented "Instruction CMP not yet implemented."
	449 Move X0, X20
	450 Call 0x3EB2AD0
	451 Move X21, [X0]
	452 Call 0x3EB2AE0
	453 Move X21, X31
	454 Move X20, X0
	455 Move W8, [X31+44]
	456 Compare W8, 0
	457 JumpIfEqual {461}
	458 Move X0, X19
	459 Move X1, X31
	460 Call Monitor.Exit, X0
	461 Compare X21, 0
	462 JumpIfNotEqual {465}
	463 Move X0, X20
	464 Call 0x1D2D690
	465 Move X0, X21
	466 Call 0x1C17F18
	467 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x03248F2C LDR X0, [X0 + 0x528]
	0x03248F30 BL 0x1C16D08
	0x03248F34 BL 0x1C16F10
	0x03248F38 MOV X19, X0
	0x03248F3C ADRP X0, 0xEB5000
	0x03248F40 LDR X0, [X0 + 0xEC8]
	0x03248F44 BL 0x1C16D08
	0x03248F48 MOV X1, X0
	0x03248F4C MOV X0, X19
	0x03248F50 MOV X2, X31
	0x03248F54 BL 0x330E100
	0x03248F58 B 0x3248FA0
	0x03248F5C ADRP X0, 0xEB3000
	0x03248F60 LDR X0, [X0 + 0x760]
	0x03248F64 BL 0x1C16D08
	0x03248F68 BL 0x1C16F10
	0x03248F6C MOV X19, X0
	0x03248F70 ADRP X0, 0xEB3000
	0x03248F74 LDR X0, [X0 + 0x768]
	0x03248F78 BL 0x1C16D08
	0x03248F7C MOV X20, X0
	0x03248F80 ADRP X0, 0xEDA000
	0x03248F84 LDR X0, [X0 + 0xBA8]
	0x03248F88 BL 0x1C16D08
	0x03248F8C MOV X2, X0
	0x03248F90 MOV X0, X19
	0x03248F94 MOV X1, X20
	0x03248F98 MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x1195000
	006 Move X21, 0xEB2000
	007 Move X20, 0xEDB000
	008 Move W8, [X19+1138]
	009 Move X21, [X21+3264]
	010 Move X20, [X20+2520]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xEDB000
	016 Move X0, [X0+2520]
	017 Call 0x1C17CF4
	018 Move X0, 0xEB2000
	019 Move X0, [X0+3264]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+1138], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X19, X0
	027 Call Object..ctor, X0
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move [X8+8], X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

