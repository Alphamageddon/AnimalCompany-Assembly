Type: System.Text.Encoding/DefaultEncoder

Method: System.Void .ctor(System.Text.Encoding encoding)

Disassembly:
	0x03245DC0 LDR X8, [X0]
	0x03245DC4 LDR X6, [X8 + 0x2F8]
	0x03245DC8 LDR X5, [X8 + 0x300]
	0x03245DCC LDR X30, [X31], #0x10
	0x03245DD0 BR X6
	0x03245DD4 BL 0x1C16F20
	0x03245DD8 STP X30, X25, [X31 - 0x40]!
	0x03245DDC STP X24, X23, [X31 + 0x10]
	0x03245DE0 STP X22, X21, [X31 + 0x20]
	0x03245DE4 STP X20, X19, [X31 + 0x30]
	0x03245DE8 MOV X20, X1
	0x03245DEC MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Encoder..ctor, X0
	008 Move W8, 1
	009 Move [X20+32], X19
	010 Move [X20+40], W8
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X30, [X31+32]
	014 Return 

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x0324644C B 0x3246454
	0x03246450 MOV W0, W31
	0x03246454 LDP X30, X19, [X31], #0x10
	0x03246458 RET
	0x0324645C BL 0x1C16F20
	0x03246460 LDP X8, X9, [X0 + 0x28]
	0x03246464 SUB X8, X8, X9
	0x03246468 CMP X8, 0x0
	0x0324646C CINC X8, X8, LT
	0x03246470 UBFM X0, X8, 0x1, 0x3F
	0x03246474 RET
	0x03246478 LDR W0, [X0 + 0x40]
	0x0324647C RET
	0x03246480 STP X30, X21, [X31 - 0x20]!
	0x03246484 STP X20, X19, [X31 + 0x10]
	0x03246488 ADRP X21, 0x1196000
	0x0324648C ADRP X20, 0xEDC000
	0x03246490 LDRB W8, [X21 + 0x45B]
	0x03246494 LDR X20, [X20 + 0x2B8]
	0x03246498 MOV W19, W0
	0x0324649C TBNZ X8, 0x0, 0x32464C0
	0x032464A0 ADRP X0, 0xEDB000
	0x032464A4 LDR X0, [X0 + 0xBC8]
	0x032464A8 BL 0x1C16CF4
	0x032464AC ADRP X0, 0xEDC000
	0x032464B0 LDR X0, [X0 + 0x2B8]
	0x032464B4 BL 0x1C16CF4
	0x032464B8 MOVZ W8, 0x1
	0x032464BC STRB W8, [X21 + 0x45B]
	0x032464C0 LDR X0, [X20]
	0x032464C4 ADRP X21, 0xEDB000
	0x032464C8 LDR W8, [X0 + 0xE0]
	0x032464CC LDR X21, [X21 + 0xBC8]
	0x032464D0 CBNZ W8, 0x32464DC
	0x032464D4 BL 0x1C16DFC
	0x032464D8 LDR X0, [X20]
	0x032464DC LDR X8, [X21]
	0x032464E0 LDR X9, [X0 + 0xB8]
	0x032464E4 LDR W10, [X8 + 0xE0]
	0x032464E8 LDR X20, [X9]
	0x032464EC CBNZ W10, 0x32464F8
	0x032464F0 MOV X0, X8
	0x032464F4 BL 0x1C16DFC
	0x032464F8 MOV W0, W19
	0x032464FC MOV X1, X31
	0x03246500 BL 0x320FE68
	0x03246504 LDRB W0, [X20, W0, SXTW]
	0x03246508 LDP X20, X19, [X31 + 0x10]
	0x0324650C LDP X30, X21, [X31], #0x20
	0x03246510 RET
	0x03246514 STP X30, X21, [X31 - 0x20]!
	0x03246518 STP X20, X19, [X31 + 0x10]
	0x0324651C ADRP X21, 0x1196000
	0x03246520 ADRP X20, 0xEDC000
	0x03246524 LDRB W8, [X21 + 0x45C]
	0x03246528 LDR X20, [X20 + 0x2B8]
	0x0324652C MOV W19, W0
	0x03246530 TBNZ X8, 0x0, 0x3246554
	0x03246534 ADRP X0, 0xEDB000
	0x03246538 LDR X0, [X0 + 0xBC8]
	0x0324653C BL 0x1C16CF4
	0x03246540 ADRP X0, 0xEDC000
	0x03246544 LDR X0, [X0 + 0x2B8]
	0x03246548 BL 0x1C16CF4
	0x0324654C MOVZ W8, 0x1
	0x03246550 STRB W8, [X21 + 0x45C]
	0x03246554 LDR X0, [X20]
	0x03246558 ADRP X21, 0xEDB000
	0x0324655C LDR W8, [X0 + 0xE0]
	0x03246560 LDR X21, [X21 + 0xBC8]
	0x03246564 CBNZ W8, 0x3246570
	0x03246568 BL 0x1C16DFC
	0x0324656C LDR X0, [X20]
	0x03246570 LDR X8, [X21]
	0x03246574 LDR X9, [X0 + 0xB8]
	0x03246578 LDR W10, [X8 + 0xE0]
	0x0324657C LDR X20, [X9 + 0x10]
	0x03246580 CBNZ W10, 0x324658C
	0x03246584 MOV X0, X8
	0x03246588 BL 0x1C16DFC
	0x0324658C MOV W0, W19
	0x03246590 MOV X1, X31
	0x03246594 BL 0x320FED0
	0x03246598 LDRSH W0, [X20, W0, SXTW]
	0x0324659C LDP X20, X19, [X31 + 0x10]
	0x032465A0 LDP X30, X21, [X31], #0x20
	0x032465A4 RET
	0x032465A8 STP X30, X21, [X31 - 0x20]!
	0x032465AC STP X20, X19, [X31 + 0x10]
	0x032465B0 ADRP X21, 0x1196000
	0x032465B4 ADRP X20, 0xEDC000
	0x032465B8 LDRB W8, [X21 + 0x45D]
	0x032465BC LDR X20, [X20 + 0x2B8]
	0x032465C0 MOV W19, W0
	0x032465C4 TBNZ X8, 0x0, 0x32465E8
	0x032465C8 ADRP X0, 0xEDB000
	0x032465CC LDR X0, [X0 + 0xBC8]
	0x032465D0 BL 0x1C16CF4
	0x032465D4 ADRP X0, 0xEDC000
	0x032465D8 LDR X0, [X0 + 0x2B8]
	0x032465DC BL 0x1C16CF4
	0x032465E0 MOVZ W8, 0x1
	0x032465E4 STRB W8, [X21 + 0x45D]
	0x032465E8 LDR X0, [X20]
	0x032465EC ADRP X21, 0xEDB000
	0x032465F0 LDR W8, [X0 + 0xE0]
	0x032465F4 LDR X21, [X21 + 0xBC8]
	0x032465F8 CBNZ W8, 0x3246604
	0x032465FC BL 0x1C16DFC
	0x03246600 LDR X0, [X20]
	0x03246604 LDR X8, [X21]
	0x03246608 LDR X9, [X0 + 0xB8]
	0x0324660C LDR W10, [X8 + 0xE0]
	0x03246610 LDR X20, [X9 + 0x28]
	0x03246614 CBNZ W10, 0x3246624
	0x03246618 MOV X0, X8
	0x0324661C BL 0x1C16DFC
	0x03246620 LDR X8, [X21]
	0x03246624 LDR X8, [X8 + 0xB8]
	0x03246628 LDR X0, [X8 + 0x10]
	0x0324662C CBZ X0, 0x324664C
	0x03246630 MOV W1, W19
	0x03246634 MOV X2, X31
	0x03246638 BL 0x320D6F0
	0x0324663C LDRB W0, [X20, W0, SXTW]
	0x03246640 LDP X20, X19, [X31 + 0x10]
	0x03246644 LDP X30, X21, [X31], #0x20
	0x03246648 RET
	0x0324664C BL 0x1C16F20
	0x03246650 STP X30, X21, [X31 - 0x20]!
	0x03246654 STP X20, X19, [X31 + 0x10]
	0x03246658 ADRP X21, 0x1196000
	0x0324665C ADRP X20, 0xEDC000
	0x03246660 LDRB W8, [X21 + 0x45E]
	0x03246664 LDR X20, [X20 + 0x2B8]
	0x03246668 MOV W19, W0
	0x0324666C TBNZ X8, 0x0, 0x3246690
	0x03246670 ADRP X0, 0xEDB000
	0x03246674 LDR X0, [X0 + 0xBC8]
	0x03246678 BL 0x1C16CF4
	0x0324667C ADRP X0, 0xEDC000
	0x03246680 LDR X0, [X0 + 0x2B8]
	0x03246684 BL 0x1C16CF4
	0x03246688 MOVZ W8, 0x1
	0x0324668C STRB W8, [X21 + 0x45E]
	0x03246690 LDR X0, [X20]
	0x03246694 ADRP X21, 0xEDB000
	0x03246698 LDR W8, [X0 + 0xE0]
	0x0324669C LDR X21, [X21 + 0xBC8]
	0x032466A0 CBNZ W8, 0x32466AC
	0x032466A4 BL 0x1C16DFC
	0x032466A8 LDR X0, [X20]
	0x032466AC LDR X8, [X21]
	0x032466B0 LDR X9, [X0 + 0xB8]
	0x032466B4 LDR W10, [X8 + 0xE0]
	0x032466B8 LDR X20, [X9 + 0x20]
	0x032466BC CBNZ W10, 0x32466CC
	0x032466C0 MOV X0, X8
	0x032466C4 BL 0x1C16DFC
	0x032466C8 LDR X8, [X21]
	0x032466CC LDR X8, [X8 + 0xB8]
	0x032466D0 LDR X0, [X8 + 0x18]
	0x032466D4 CBZ X0, 0x32466F4
	0x032466D8 MOV W1, W19
	0x032466DC MOV X2, X31
	0x032466E0 BL 0x320D6F0
	0x032466E4 LDRH W0, [X20, W0, SXTW]
	0x032466E8 LDP X20, X19, [X31 + 0x10]
	0x032466EC LDP X30, X21, [X31], #0x20
	0x032466F0 RET
	0x032466F4 BL 0x1C16F20
	0x032466F8 STP X30, X21, [X31 - 0x20]!
	0x032466FC STP X20, X19, [X31 + 0x10]
	0x03246700 ADRP X21, 0x1196000
	0x03246704 ADRP X20, 0xEDC000
	0x03246708 LDRB W8, [X21 + 0x45F]
	0x0324670C LDR X20, [X20 + 0x2B8]
	0x03246710 MOV W19, W0
	0x03246714 TBNZ X8, 0x0, 0x3246738
	0x03246718 ADRP X0, 0xEDB000
	0x0324671C LDR X0, [X0 + 0xBC8]
	0x03246720 BL 0x1C16CF4
	0x03246724 ADRP X0, 0xEDC000
	0x03246728 LDR X0, [X0 + 0x2B8]
	0x0324672C BL 0x1C16CF4
	0x03246730 MOVZ W8, 0x1
	0x03246734 STRB W8, [X21 + 0x45F]
	0x03246738 LDR X0, [X20]
	0x0324673C ADRP X21, 0xEDB000
	0x03246740 LDR W8, [X0 + 0xE0]
	0x03246744 LDR X21, [X21 + 0xBC8]
	0x03246748 CBNZ W8, 0x3246754
	0x0324674C BL 0x1C16DFC
	0x03246750 LDR X0, [X20]
	0x03246754 LDR X8, [X21]
	0x03246758 LDR X9, [X0 + 0xB8]
	0x0324675C LDR W10, [X8 + 0xE0]
	0x03246760 LDR X20, [X9 + 0x18]
	0x03246764 CBNZ W10, 0x3246774
	0x03246768 MOV X0, X8
	0x0324676C BL 0x1C16DFC
	0x03246770 LDR X8, [X21]
	0x03246774 LDR X8, [X8 + 0xB8]
	0x03246778 LDR X0, [X8 + 0x20]
	0x0324677C CBZ X0, 0x324679C
	0x03246780 MOV W1, W19
	0x03246784 MOV X2, X31
	0x03246788 BL 0x320D6F0
	0x0324678C LDRSH W0, [X20, W0, SXTW]
	0x03246790 LDP X20, X19, [X31 + 0x10]
	0x03246794 LDP X30, X21, [X31], #0x20
	0x03246798 RET
	0x0324679C BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1197000
	008 Move W8, [X21+1109]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {47}
	015 Move X0, 0xED5000
	016 Move X0, [X0+3440]
	017 Call 0x1C17CF4
	018 Move X0, 0xEB0000
	019 Move X0, [X0+368]
	020 Call 0x1C17CF4
	021 Move X0, 0xEDD000
	022 Move X0, [X0+2400]
	023 Call 0x1C17CF4
	024 Move X0, 0xEDD000
	025 Move X0, [X0+2408]
	026 Call 0x1C17CF4
	027 Move X0, 0xEDD000
	028 Move X0, [X0+2840]
	029 Call 0x1C17CF4
	030 Move X0, 0xEDD000
	031 Move X0, [X0+1016]
	032 Call 0x1C17CF4
	033 Move X0, 0xEAE000
	034 Move X0, [X0+1728]
	035 Call 0x1C17CF4
	036 Move X0, 0xEDD000
	037 Move X0, [X0+2848]
	038 Call 0x1C17CF4
	039 Move X0, 0xEDD000
	040 Move X0, [X0+2856]
	041 Call 0x1C17CF4
	042 Move X0, 0xEDD000
	043 Move X0, [X0+2864]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X21+1109], W8
	047 Move X0, X19
	048 Move X1, X31
	049 Call Encoder..ctor, X0
	050 Compare X20, 0
	051 JumpIfEqual {166}
	052 Move X22, 0xEAE000
	053 Move X22, [X22+1728]
	054 Move X8, 0xEDD000
	055 Move X23, 0xEDD000
	056 Move X0, [X22]
	057 Move X8, [X8+2840]
	058 Move W9, [X0+224]
	059 Move X21, [X8]
	060 Move X23, [X23+2848]
	061 Compare W9, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X21
	065 Move X1, X31
	066 Call Type.GetTypeFromHandle, X0
	067 Move X1, [X23]
	068 Move X2, X0
	069 Move X0, X20
	070 Move X3, X31
	071 Call SerializationInfo.GetValue, X0, X1, X2
	072 Compare X0, 0
	073 JumpIfEqual {93}
	074 Move X8, 0xEDD000
	075 Move X8, [X8+1016]
	076 Move X9, [X0]
	077 Move X1, [X8]
	078 Move W10, [X9+304]
	079 Move W8, [X1+304]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X10, [X9+200]
	082 Subtract X9, X8, 1
	083 Move X10, [X10]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move [X19+32], X0
	086 Move X10, [X0]
	087 Move W11, [X10+304]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X8, [X10+200]
	090 Move X8, [X8]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Call 0x1C181E0
	093 Move [X19+32], X31
	094 Move X8, 0xEDD000
	095 Move X0, [X22]
	096 Move X8, [X8+2400]
	097 Move W9, [X0+224]
	098 Move X21, [X8]
	099 Compare W9, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X0, X21
	103 Move X1, X31
	104 Call Type.GetTypeFromHandle, X0
	105 Move X8, 0xEDD000
	106 Move X8, [X8+2864]
	107 Move X2, X0
	108 Move X1, [X8]
	109 Move X0, X20
	110 Move X3, X31
	111 Call SerializationInfo.GetValue, X0, X1, X2
	112 Compare X0, 0
	113 JumpIfEqual {133}
	114 Move X8, 0xEDD000
	115 Move X8, [X8+2408]
	116 Move X9, [X0]
	117 Move X1, [X8]
	118 Move W10, [X9+304]
	119 Move W8, [X1+304]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X10, [X9+200]
	122 Subtract X9, X8, 1
	123 Move X10, [X10]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move [X19+16], X0
	126 Move X10, [X0]
	127 Move W11, [X10+304]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X8, [X10+200]
	130 Move X8, [X8]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Call 0x1C181E0
	133 Move [X19+16], X31
	134 Move X8, 0xED5000
	135 Move X8, [X8+3440]
	136 Move X0, [X8]
	137 Move X1, X31
	138 Call Type.GetTypeFromHandle, X0
	139 Move X8, 0xEDD000
	140 Move X8, [X8+2856]
	141 Move X2, X0
	142 Move X1, [X8]
	143 Move X0, X20
	144 Move X3, X31
	145 Call SerializationInfo.GetValue, X0, X1, X2
	146 Compare X0, 0
	147 JumpIfEqual {184}
	148 Move X8, 0xEB0000
	149 Move X8, [X8+368]
	150 Move X9, [X0]
	151 Move X1, [X8]
	152 Move X8, [X9+64]
	153 Move X9, [X1+64]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Call 0x1C17E08
	156 NotImplemented "Instruction LDRH not yet implemented."
	157 Move X22, [X31+16]
	158 Move X21, [X31+24]
	159 NotImplemented "Instruction STRH not yet implemented."
	160 Move X20, [X31+32]
	161 Move X19, [X31+40]
	162 Move X30, [X31+48]
	163 Move X23, [X31+56]
	164 Return 
	165 Call 0x1C181E0
	166 Move X0, 0xEB3000
	167 Move X0, [X0+1320]
	168 Call 0x1C17D08
	169 Call 0x1C17F10
	170 Move X19, X0
	171 Move X0, 0xED8000
	172 Move X0, [X0+728]
	173 Call 0x1C17D08
	174 Move X1, X0
	175 Move X0, X19
	176 Move X2, X31
	177 Call ArgumentNullException..ctor, X0, X1
	178 Move X0, 0xEDD000
	179 Move X0, [X0+2872]
	180 Call 0x1C17D08
	181 Move X1, X0
	182 Move X0, X19
	183 Call 0x1C17DEC
	184 Call 0x1C17F20
	185 Call 0x1C181E0
	186 Move X19, X0
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move X0, X19
	189 Call 0x3EB2AD0
	190 Move X19, X0
	191 Move X0, 0xED8000
	192 Move X0, [X0+736]
	193 Call 0x1C17D08
	194 Move X8, [X19]
	195 Move X1, [X8]
	196 Call 0x1C18270
	197 Move TEMP, X0
	198 And TEMP, TEMP, 1
	199 Compare TEMP, 1
	200 JumpIfNotEqual {209}
	201 Move X20, [X31+32]
	202 Move X19, [X31+40]
	203 Move X22, [X31+16]
	204 Move X21, [X31+24]
	205 Move X30, [X31+48]
	206 Move X23, [X31+56]
	207 Call 0x3EB2AE0
	208 Return 
	209 Move W0, 8
	210 Call 0x3EB2AF0
	211 Move X8, [X19]
	212 Move [X0], X8
	213 Move X1, 0xC6F000
	214 Add X1, X1, 3672
	215 Move X2, X31
	216 Call 0x3EB2B00
	217 Move X19, X0
	218 Call 0x3EB2AE0
	219 Move X0, X19
	220 Call 0x1D2D690
	221 Call 0x1991590

Method: System.Object GetRealObject(System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x032467A0 STR X30, [X31 - 0x30]!
	0x032467A4 STP X22, X21, [X31 + 0x10]
	0x032467A8 STP X20, X19, [X31 + 0x20]
	0x032467AC ADRP X21, 0x1196000
	0x032467B0 ADRP X22, 0xEDC000
	0x032467B4 LDRB W8, [X21 + 0x460]
	0x032467B8 LDR X22, [X22 + 0x2B8]
	0x032467BC MOV W19, W1
	0x032467C0 MOV X20, X0
	0x032467C4 TBNZ X8, 0x0, 0x32467DC
	0x032467C8 ADRP X0, 0xEDC000
	0x032467CC LDR X0, [X0 + 0x2B8]
	0x032467D0 BL 0x1C16CF4
	0x032467D4 MOVZ W8, 0x1
	0x032467D8 STRB W8, [X21 + 0x460]
	0x032467DC LDR X0, [X22]
	0x032467E0 STR X31, [X31 + 0x8]
	0x032467E4 CMP W19, 0x2
	0x032467E8 MOVZ W9, 0x3
	0x032467EC LDR W8, [X0 + 0xE0]
	0x032467F0 CSINC W21, W9, W31, EQ
	0x032467F4 CBNZ W8, 0x32467FC
	0x032467F8 BL 0x1C16DFC
	0x032467FC ADD X1, X31, 0x8
	0x03246800 MOV X0, X20
	0x03246804 MOV W2, W21
	0x03246808 BL 0x324687C
	0x0324680C LDR X0, [X22]
	0x03246810 LDR X21, [X31 + 0x8]
	0x03246814 LDR W8, [X0 + 0xE0]
	0x03246818 CBZ X21, 0x3246838
	0x0324681C CBNZ W8, 0x3246824
	0x03246820 BL 0x1C16DFC
	0x03246824 MOV X0, X21
	0x03246828 MOV W1, W31
	0x0324682C MOV W2, W19
	0x03246830 BL 0x3246AE8
	0x03246834 B 0x3246854
	0x03246838 CBNZ W8, 0x3246840
	0x0324683C BL 0x1C16DFC
	0x03246840 MOV X0, X20
	0x03246844 MOV W2, W19
	0x03246848 BL 0x32469AC
	0x0324684C MOV X21, X0
	0x03246850 CBZ X0, 0x3246868
	0x03246854 LDR X8, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1197000
	005 Move W8, [X20+1110]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xEDD000
	012 Move X0, [X0+1008]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1110], W8
	016 Move W8, [X19+40]
	017 Compare W8, 0
	018 JumpIfEqual {24}
	019 Move X0, X19
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Return X0
	024 Move X0, [X19+32]
	025 Compare X0, 0
	026 JumpIfEqual {54}
	027 Move X8, [X0]
	028 Move X9, [X8+840]
	029 Move X1, [X8+848]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X8, [X19+16]
	032 Compare X8, 0
	033 JumpIfEqual {37}
	034 Compare X0, 0
	035 JumpIfEqual {54}
	036 Move [X0+16], X8
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Compare W8, 0
	039 JumpIfEqual {20}
	040 Compare X0, 0
	041 JumpIfEqual {20}
	042 Move X9, 0xEDD000
	043 Move X9, [X9+1008]
	044 Move X10, [X0]
	045 Move X9, [X9]
	046 Move W12, [X10+304]
	047 Move W11, [X9+304]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X10, [X10+200]
	050 Add X10, X10, X11
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction STRH not yet implemented."
	054 Call 0x1C17F20

Method: System.Void System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03246858 MOV X0, X21
	0x0324685C LDP X9, X1, [X8 + 0x168]
	0x03246860 BLR X9
	0x03246864 MOV X20, X0
	0x03246868 MOV X0, X20
	0x0324686C LDP X20, X19, [X31 + 0x20]
	0x03246870 LDP X22, X21, [X31 + 0x10]
	0x03246874 LDR X30, [X31], #0x30
	0x03246878 RET
	0x0324687C SUB X31, X31, 0x50
	0x03246880 STR X30, [X31 + 0x10]
	0x03246884 STP X24, X23, [X31 + 0x20]
	0x03246888 STP X22, X21, [X31 + 0x30]
	0x0324688C STP X20, X19, [X31 + 0x40]
	0x03246890 ADRP X22, 0x1196000
	0x03246894 LDRB W8, [X22 + 0x467]
	0x03246898 MOV W21, W2
	0x0324689C MOV X19, X1
	0x032468A0 MOV X20, X0
	0x032468A4 TBNZ X8, 0x0, 0x32468BC
	0x032468A8 ADRP X0, 0xEDC000
	0x032468AC LDR X0, [X0 + 0x2B8]
	0x032468B0 BL 0x1C16CF4
	0x032468B4 MOVZ W8, 0x1
	0x032468B8 STRB W8, [X22 + 0x467]
	0x032468BC STR X31, [X31 + 0x18]
	0x032468C0 STR W31, [X31 + 0xC]
	0x032468C4 CBZ X20, 0x32469A8
	0x032468C8 LDR W8, [X20 + 0x10]
	0x032468CC ADRP X24, 0xEDC000
	0x032468D0 LDR X24, [X24 + 0x2B8]
	0x032468D4 CMP W8, 0x1
	0x032468D8 B.LT 0x3246958
	0x032468DC MOV W22, W31
	0x032468E0 MOV X0, X20
	0x032468E4 MOV W1, W22
	0x032468E8 MOV X2, X31
	0x032468EC BL 0x3222A1C
	0x032468F0 LDR X8, [X24]
	0x032468F4 MOV W23, W0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1197000
	006 Move W8, [X21+1111]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xEDD000
	014 Move X0, [X0+2848]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1111], W8
	018 Compare X19, 0
	019 JumpIfEqual {32}
	020 Move X8, 0xEDD000
	021 Move X8, [X8+2848]
	022 Move X2, [X20+32]
	023 Move X0, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X1, [X8]
	027 Move X3, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call SerializationInfo.AddValue, X0, X1, X2
	031 Return 
	032 Move X0, 0xEB3000
	033 Move X0, [X0+1320]
	034 Call 0x1C17D08
	035 Call 0x1C17F10
	036 Move X19, X0
	037 Move X0, 0xED8000
	038 Move X0, [X0+728]
	039 Call 0x1C17D08
	040 Move X1, X0
	041 Move X0, X19
	042 Move X2, X31
	043 Call ArgumentNullException..ctor, X0, X1
	044 Move X0, 0xEDD000
	045 Move X0, [X0+2880]
	046 Call 0x1C17D08
	047 Move X1, X0
	048 Move X0, X19
	049 Call 0x1C17DEC

Method: System.Int32 GetByteCount(System.Char[] chars, System.Int32 index, System.Int32 count, System.Boolean flush)

Disassembly:
	0x032468F8 LDR W9, [X8 + 0xE0]
	0x032468FC CBNZ W9, 0x3246908
	0x03246900 MOV X0, X8
	0x03246904 BL 0x1C16DFC
	0x03246908 MOV W0, W23
	0x0324690C MOV W1, W21
	0x03246910 BL 0x3246BF8
	0x03246914 CMP W0, 0x1
	0x03246918 B.NE 0x3246948

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X5, [X8+520]
	007 Move X4, [X8+528]
	008 Move X30, [X31+16]
	009 CallNoReturn X5
	010 Call 0x1C17F20

Method: System.Int32 GetByteCount(System.Char* chars, System.Int32 count, System.Boolean flush)

Disassembly:
	0x0324691C LDR X0, [X24]
	0x03246920 LDR W8, [X0 + 0xE0]
	0x03246924 CBNZ W8, 0x324692C
	0x03246928 BL 0x1C16DFC
	0x0324692C ADD X1, X31, 0x18
	0x03246930 ADD X5, X31, 0xC
	0x03246934 MOV X0, X19
	0x03246938 MOV X2, X20
	0x0324693C MOV W3, W22

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X4, [X8+536]
	007 Move X3, [X8+544]
	008 Move X30, [X31+16]
	009 CallNoReturn X4
	010 Call 0x1C17F20

Method: System.Int32 GetBytes(System.Char[] chars, System.Int32 charIndex, System.Int32 charCount, System.Byte[] bytes, System.Int32 byteIndex, System.Boolean flush)

Disassembly:
	0x03246940 MOV W4, W21
	0x03246944 BL 0x3247304
	0x03246948 LDR W8, [X20 + 0x10]
	0x0324694C ADD W22, W22, 0x1
	0x03246950 CMP W22, W8
	0x03246954 B.LT 0x32468E0
	0x03246958 LDR X0, [X19]
	0x0324695C CBZ X0, 0x3246974
	0x03246960 LDR W2, [X31 + 0xC]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X7, [X8+600]
	007 Move X6, [X8+608]
	008 Move X30, [X31+16]
	009 CallNoReturn X7
	010 Call 0x1C17F20

Method: System.Int32 GetBytes(System.Char* chars, System.Int32 charCount, System.Byte* bytes, System.Int32 byteCount, System.Boolean flush)

Disassembly:
	0x03246964 MOV X1, X20
	0x03246968 MOV X4, X31
	0x0324696C SUB W3, W8, W2
	0x03246970 BL 0x323351C
	0x03246974 LDR X0, [X24]
	0x03246978 LDR W8, [X0 + 0xE0]
	0x0324697C CBNZ W8, 0x3246984
	0x03246980 BL 0x1C16DFC
	0x03246984 MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X6, [X8+664]
	007 Move X5, [X8+672]
	008 Move X30, [X31+16]
	009 CallNoReturn X6
	010 Call 0x1C17F20

