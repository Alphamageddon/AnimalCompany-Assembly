Type: System.Text.Encoding/DefaultDecoder

Method: System.Void .ctor(System.Text.Encoding encoding)

Disassembly:
	0x03245B44 LDR X10, [X0]
	0x03245B48 LDRB W11, [X10 + 0x130]
	0x03245B4C CMP W11, W8
	0x03245B50 B.CC 0x3245B64
	0x03245B54 LDR X8, [X10 + 0xC8]
	0x03245B58 LDR X8, [X8, X9, LSL #3]
	0x03245B5C CMP X8, X1
	0x03245B60 B.EQ 0x3245BF8
	0x03245B64 BL 0x1C171E0
	0x03245B68 BL 0x1C171E0
	0x03245B6C ADRP X0, 0xEB3000
	0x03245B70 LDR X0, [X0 + 0x528]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Decoder..ctor, X0
	008 Move W8, 1
	009 Move [X20+32], X19
	010 Move [X20+40], W8
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X30, [X31+32]
	014 Return 

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03246988 MOV X1, X19
	0x0324698C LDP X20, X19, [X31 + 0x40]
	0x03246990 LDP X22, X21, [X31 + 0x30]
	0x03246994 LDP X24, X23, [X31 + 0x20]
	0x03246998 LDR X30, [X31 + 0x10]
	0x0324699C MOVZ W2, 0x1
	0x032469A0 ADD X31, X31, 0x50
	0x032469A4 B 0x32474DC
	0x032469A8 BL 0x1C16F20
	0x032469AC STR X30, [X31 - 0x40]!
	0x032469B0 STP X24, X23, [X31 + 0x10]
	0x032469B4 STP X22, X21, [X31 + 0x20]
	0x032469B8 STP X20, X19, [X31 + 0x30]
	0x032469BC ADRP X21, 0x1196000
	0x032469C0 LDRB W8, [X21 + 0x461]
	0x032469C4 MOV W19, W2
	0x032469C8 MOV X20, X0
	0x032469CC TBNZ X8, 0x0, 0x32469F0
	0x032469D0 ADRP X0, 0xEDC000
	0x032469D4 LDR X0, [X0 + 0x2B8]
	0x032469D8 BL 0x1C16CF4
	0x032469DC ADRP X0, 0xEAD000
	0x032469E0 LDR X0, [X0 + 0x8F0]
	0x032469E4 BL 0x1C16CF4
	0x032469E8 MOVZ W8, 0x1
	0x032469EC STRB W8, [X21 + 0x461]
	0x032469F0 CBZ X20, 0x3246AE4
	0x032469F4 LDR W8, [X20 + 0x10]
	0x032469F8 CMP W8, 0x1
	0x032469FC B.LT 0x3246A54
	0x03246A00 ADRP X23, 0xEDC000
	0x03246A04 LDR X23, [X23 + 0x2B8]
	0x03246A08 MOV W21, W31
	0x03246A0C MOV X0, X20
	0x03246A10 MOV W1, W21
	0x03246A14 MOV X2, X31
	0x03246A18 BL 0x3222A1C
	0x03246A1C LDR X8, [X23]
	0x03246A20 MOV W22, W0
	0x03246A24 LDR W9, [X8 + 0xE0]
	0x03246A28 CBNZ W9, 0x3246A34
	0x03246A2C MOV X0, X8
	0x03246A30 BL 0x1C16DFC
	0x03246A34 MOV W0, W22
	0x03246A38 MOV W1, W19
	0x03246A3C BL 0x3246BF8
	0x03246A40 CBNZ W0, 0x3246A5C
	0x03246A44 LDR W8, [X20 + 0x10]
	0x03246A48 ADD W21, W21, 0x1
	0x03246A4C CMP W21, W8
	0x03246A50 B.LT 0x3246A0C
	0x03246A54 MOV X22, X31
	0x03246A58 B 0x3246ACC
	0x03246A5C ADRP X8, 0xEAD000
	0x03246A60 LDRSW X24, [X20 + 0x10]
	0x03246A64 LDR X8, [X8 + 0x8F0]
	0x03246A68 LDR X0, [X8]
	0x03246A6C BL 0x1C16F10
	0x03246A70 MOVZ W8, 0x6667
	0x03246A74 MOVK W8, 0x66660000
	0x03246A78 MUL X8, X24, X8
	0x03246A7C UBFM X9, X8, 0x3F, 0x3F
	0x03246A80 SBFM X8, X8, 0x22, 0x3F
	0x03246A84 ADD W8, W8, W9
	0x03246A88 ADD W1, W8, W24
	0x03246A8C MOV X2, X31
	0x03246A90 MOV X22, X0
	0x03246A94 BL 0x3231B28
	0x03246A98 CBZ X22, 0x3246AE4
	0x03246A9C MOV X0, X22
	0x03246AA0 MOV X1, X20
	0x03246AA4 MOV X2, X31
	0x03246AA8 BL 0x32333E0
	0x03246AAC LDR X0, [X23]
	0x03246AB0 LDR W8, [X0 + 0xE0]
	0x03246AB4 CBNZ W8, 0x3246ABC
	0x03246AB8 BL 0x1C16DFC
	0x03246ABC MOV X0, X22
	0x03246AC0 MOV W1, W21
	0x03246AC4 MOV W2, W19
	0x03246AC8 BL 0x3246AE8
	0x03246ACC MOV X0, X22
	0x03246AD0 LDP X20, X19, [X31 + 0x30]
	0x03246AD4 LDP X22, X21, [X31 + 0x20]
	0x03246AD8 LDP X24, X23, [X31 + 0x10]
	0x03246ADC LDR X30, [X31], #0x40
	0x03246AE0 RET
	0x03246AE4 BL 0x1C16F20
	0x03246AE8 STP X30, X23, [X31 - 0x30]!
	0x03246AEC STP X22, X21, [X31 + 0x10]
	0x03246AF0 STP X20, X19, [X31 + 0x20]
	0x03246AF4 ADRP X22, 0x1196000
	0x03246AF8 ADRP X23, 0xEDC000
	0x03246AFC LDRB W8, [X22 + 0x462]
	0x03246B00 LDR X23, [X23 + 0x2B8]
	0x03246B04 MOV W19, W2
	0x03246B08 MOV W21, W1
	0x03246B0C MOV X20, X0
	0x03246B10 TBNZ X8, 0x0, 0x3246B28
	0x03246B14 ADRP X0, 0xEDC000
	0x03246B18 LDR X0, [X0 + 0x2B8]
	0x03246B1C BL 0x1C16CF4
	0x03246B20 MOVZ W8, 0x1
	0x03246B24 STRB W8, [X22 + 0x462]
	0x03246B28 LDR X0, [X23]
	0x03246B2C CMP W21, 0x0
	0x03246B30 CSET W9, GT
	0x03246B34 SUB W22, W21, W9
	0x03246B38 LDR W8, [X0 + 0xE0]
	0x03246B3C CBNZ W8, 0x3246B44
	0x03246B40 BL 0x1C16DFC
	0x03246B44 MOV X0, X20
	0x03246B48 MOV X1, X31
	0x03246B4C MOV W2, W22
	0x03246B50 BL 0x3246D2C
	0x03246B54 CBZ X20, 0x3246BF4
	0x03246B58 MOV X0, X20
	0x03246B5C MOV X1, X31
	0x03246B60 BL 0x323260C
	0x03246B64 CMP W0, W21
	0x03246B68 B.LE 0x3246BE4
	0x03246B6C MOV X0, X20
	0x03246B70 MOV W1, W21
	0x03246B74 MOV X2, X31
	0x03246B78 BL 0x3232E88
	0x03246B7C LDR X8, [X23]
	0x03246B80 MOV W22, W0
	0x03246B84 LDR W9, [X8 + 0xE0]
	0x03246B88 CBNZ W9, 0x3246B94
	0x03246B8C MOV X0, X8
	0x03246B90 BL 0x1C16DFC
	0x03246B94 MOV W0, W22
	0x03246B98 MOV W1, W19
	0x03246B9C BL 0x3246BF8
	0x03246BA0 CBZ W0, 0x3246BCC
	0x03246BA4 LDR X0, [X23]
	0x03246BA8 LDR W8, [X0 + 0xE0]
	0x03246BAC CBNZ W8, 0x3246BB4
	0x03246BB0 BL 0x1C16DFC
	0x03246BB4 MOV X0, X20
	0x03246BB8 MOV X1, X31
	0x03246BBC MOV W2, W21
	0x03246BC0 BL 0x3246EF0
	0x03246BC4 MOV W21, W0
	0x03246BC8 B 0x3246BD0
	0x03246BCC ADD W21, W21, 0x1
	0x03246BD0 MOV X0, X20
	0x03246BD4 MOV X1, X31
	0x03246BD8 BL 0x323260C
	0x03246BDC CMP W21, W0
	0x03246BE0 B.LT 0x3246B6C
	0x03246BE4 LDP X20, X19, [X31 + 0x20]
	0x03246BE8 LDP X22, X21, [X31 + 0x10]
	0x03246BEC LDP X30, X23, [X31], #0x30
	0x03246BF0 RET
	0x03246BF4 BL 0x1C16F20
	0x03246BF8 STP X30, X21, [X31 - 0x20]!
	0x03246BFC STP X20, X19, [X31 + 0x10]
	0x03246C00 ADRP X21, 0x1196000
	0x03246C04 LDRB W8, [X21 + 0x46A]
	0x03246C08 MOV W20, W1
	0x03246C0C MOV W19, W0
	0x03246C10 TBNZ X8, 0x0, 0x3246C28
	0x03246C14 ADRP X0, 0xEDC000
	0x03246C18 LDR X0, [X0 + 0x2B8]
	0x03246C1C BL 0x1C16CF4
	0x03246C20 MOVZ W8, 0x1
	0x03246C24 STRB W8, [X21 + 0x46A]
	0x03246C28 CMP W20, 0x1
	0x03246C2C B.EQ 0x3246C80
	0x03246C30 CMP W20, 0x2
	0x03246C34 B.EQ 0x3246CC0
	0x03246C38 CMP W20, 0x3

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1197000
	008 Move W8, [X21+1112]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {38}
	015 Move X0, 0xEDD000
	016 Move X0, [X0+2384]
	017 Call 0x1C17CF4
	018 Move X0, 0xEDD000
	019 Move X0, [X0+2392]
	020 Call 0x1C17CF4
	021 Move X0, 0xEDD000
	022 Move X0, [X0+2840]
	023 Call 0x1C17CF4
	024 Move X0, 0xEDD000
	025 Move X0, [X0+1016]
	026 Call 0x1C17CF4
	027 Move X0, 0xEAE000
	028 Move X0, [X0+1728]
	029 Call 0x1C17CF4
	030 Move X0, 0xEDD000
	031 Move X0, [X0+2848]
	032 Call 0x1C17CF4
	033 Move X0, 0xEDD000
	034 Move X0, [X0+2864]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+1112], W8
	038 Move X0, X19
	039 Move X1, X31
	040 Call Decoder..ctor, X0
	041 Compare X20, 0
	042 JumpIfEqual {125}
	043 Move X22, 0xEAE000
	044 Move X22, [X22+1728]
	045 Move X8, 0xEDD000
	046 Move X23, 0xEDD000
	047 Move X0, [X22]
	048 Move X8, [X8+2840]
	049 Move W9, [X0+224]
	050 Move X21, [X8]
	051 Move X23, [X23+2848]
	052 Compare W9, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X21
	056 Move X1, X31
	057 Call Type.GetTypeFromHandle, X0
	058 Move X1, [X23]
	059 Move X2, X0
	060 Move X0, X20
	061 Move X3, X31
	062 Call SerializationInfo.GetValue, X0, X1, X2
	063 Compare X0, 0
	064 JumpIfEqual {84}
	065 Move X8, 0xEDD000
	066 Move X8, [X8+1016]
	067 Move X9, [X0]
	068 Move X1, [X8]
	069 Move W10, [X9+304]
	070 Move W8, [X1+304]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X10, [X9+200]
	073 Subtract X9, X8, 1
	074 Move X10, [X10]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move [X19+32], X0
	077 Move X10, [X0]
	078 Move W11, [X10+304]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X8, [X10+200]
	081 Move X8, [X8]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Call 0x1C181E0
	084 Move [X19+32], X31
	085 Move X8, 0xEDD000
	086 Move X0, [X22]
	087 Move X8, [X8+2384]
	088 Move W9, [X0+224]
	089 Move X21, [X8]
	090 Compare W9, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Move X0, X21
	094 Move X1, X31
	095 Call Type.GetTypeFromHandle, X0
	096 Move X8, 0xEDD000
	097 Move X8, [X8+2864]
	098 Move X2, X0
	099 Move X1, [X8]
	100 Move X0, X20
	101 Move X3, X31
	102 Call SerializationInfo.GetValue, X0, X1, X2
	103 Compare X0, 0
	104 JumpIfEqual {159}
	105 Move X8, 0xEDD000
	106 Move X8, [X8+2392]
	107 Move X9, [X0]
	108 Move X1, [X8]
	109 Move W10, [X9+304]
	110 Move W8, [X1+304]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X10, [X9+200]
	113 Subtract X9, X8, 1
	114 Move X10, [X10]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move [X19+16], X0
	117 Move X10, [X0]
	118 Move W11, [X10+304]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X8, [X10+200]
	121 Move X8, [X8]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Call 0x1C181E0
	124 Call 0x1C181E0
	125 Move X0, 0xEB3000
	126 Move X0, [X0+1320]
	127 Call 0x1C17D08
	128 Call 0x1C17F10
	129 Move X19, X0
	130 Move X0, 0xED8000
	131 Move X0, [X0+728]
	132 Call 0x1C17D08
	133 Move X1, X0
	134 Move X0, X19
	135 Move X2, X31
	136 Call ArgumentNullException..ctor, X0, X1
	137 Move X0, 0xEDD000
	138 Move X0, [X0+2888]
	139 Call 0x1C17D08
	140 Move X1, X0
	141 Move X0, X19
	142 Call 0x1C17DEC
	143 Move X20, X0
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X0, X20
	146 Call 0x3EB2AD0
	147 Move X20, X0
	148 Move X0, 0xED8000
	149 Move X0, [X0+736]
	150 Call 0x1C17D08
	151 Move X8, [X20]
	152 Move X1, [X8]
	153 Call 0x1C18270
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfNotEqual {167}
	158 Call 0x3EB2AE0
	159 Move [X19+16], X31
	160 Move X20, [X31+32]
	161 Move X19, [X31+40]
	162 Move X22, [X31+16]
	163 Move X21, [X31+24]
	164 Move X30, [X31+48]
	165 Move X23, [X31+56]
	166 Return 
	167 Move W0, 8
	168 Call 0x3EB2AF0
	169 Move X8, [X20]
	170 Move [X0], X8
	171 Move X1, 0xC6F000
	172 Add X1, X1, 3672
	173 Move X2, X31
	174 Call 0x3EB2B00
	175 Move X20, X0
	176 Call 0x3EB2AE0
	177 Move X0, X20
	178 Call 0x1D2D690
	179 Call 0x1991590

Method: System.Object GetRealObject(System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03246C3C B.NE 0x3246CEC
	0x03246C40 MOVZ W8, 0x5400
	0x03246C44 ADD W8, W19, W8
	0x03246C48 UBFM W8, W8, 0x2, 0xF
	0x03246C4C CMP W8, 0xAE9
	0x03246C50 B.CC 0x3246D1C
	0x03246C54 ADRP X8, 0xEDC000
	0x03246C58 LDR X8, [X8 + 0x2B8]
	0x03246C5C AND W19, W19, 0xFFFF
	0x03246C60 LDR X0, [X8]
	0x03246C64 LDR W8, [X0 + 0xE0]
	0x03246C68 CBNZ W8, 0x3246C70
	0x03246C6C BL 0x1C16DFC
	0x03246C70 MOV W0, W19
	0x03246C74 BL 0x3246480
	0x03246C78 UBFM W0, W0, 0x1, 0x1
	0x03246C7C B 0x3246D20
	0x03246C80 MOVZ W8, 0x5400
	0x03246C84 ADD W8, W19, W8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+40]
	004 Move X19, X0
	005 Compare W8, 0
	006 JumpIfEqual {8}
	007 Move X0, X19
	008 Move X0, [X19+32]
	009 Compare X0, 0
	010 JumpIfEqual {24}
	011 Move X8, [X0]
	012 Move X9, [X8+824]
	013 Move X1, [X8+832]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move X8, [X19+16]
	016 Compare X8, 0
	017 JumpIfEqual {21}
	018 Compare X0, 0
	019 JumpIfEqual {24}
	020 Move [X0+16], X8
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Return X0
	024 Call 0x1C17F20

Method: System.Void System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03246C88 UBFM W8, W8, 0x2, 0xF
	0x03246C8C CMP W8, 0xAE9
	0x03246C90 B.CC 0x3246D1C
	0x03246C94 ADRP X8, 0xEDC000
	0x03246C98 LDR X8, [X8 + 0x2B8]
	0x03246C9C AND W19, W19, 0xFFFF
	0x03246CA0 LDR X0, [X8]
	0x03246CA4 LDR W8, [X0 + 0xE0]
	0x03246CA8 CBNZ W8, 0x3246CB0
	0x03246CAC BL 0x1C16DFC
	0x03246CB0 MOV W0, W19
	0x03246CB4 BL 0x3246480
	0x03246CB8 AND W0, W0, 0x1
	0x03246CBC B 0x3246D20
	0x03246CC0 ADRP X8, 0xEDC000
	0x03246CC4 LDR X8, [X8 + 0x2B8]
	0x03246CC8 LDR X0, [X8]
	0x03246CCC LDR W8, [X0 + 0xE0]
	0x03246CD0 CBNZ W8, 0x3246CD8
	0x03246CD4 BL 0x1C16DFC
	0x03246CD8 AND W0, W19, 0xFFFF
	0x03246CDC BL 0x3246480
	0x03246CE0 TBNZ X0, 0x4, 0x3246D1C
	0x03246CE4 UBFM W8, W0, 0x4, 0x1F
	0x03246CE8 B 0x3246D14
	0x03246CEC ADRP X8, 0xEDC000
	0x03246CF0 LDR X8, [X8 + 0x2B8]
	0x03246CF4 LDR X0, [X8]
	0x03246CF8 LDR W8, [X0 + 0xE0]
	0x03246CFC CBNZ W8, 0x3246D04
	0x03246D00 BL 0x1C16DFC
	0x03246D04 AND W0, W19, 0xFFFF
	0x03246D08 BL 0x3246480
	0x03246D0C TBNZ X0, 0x2, 0x3246D1C
	0x03246D10 UBFM W8, W0, 0x2, 0x1F
	0x03246D14 AND W0, W8, 0x2
	0x03246D18 B 0x3246D20
	0x03246D1C MOVZ W0, 0x1
	0x03246D20 LDP X20, X19, [X31 + 0x10]
	0x03246D24 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1197000
	006 Move W8, [X21+1113]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xEDD000
	014 Move X0, [X0+2848]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1113], W8
	018 Compare X19, 0
	019 JumpIfEqual {32}
	020 Move X8, 0xEDD000
	021 Move X8, [X8+2848]
	022 Move X2, [X20+32]
	023 Move X0, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X1, [X8]
	027 Move X3, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call SerializationInfo.AddValue, X0, X1, X2
	031 Return 
	032 Move X0, 0xEB3000
	033 Move X0, [X0+1320]
	034 Call 0x1C17D08
	035 Call 0x1C17F10
	036 Move X19, X0
	037 Move X0, 0xED8000
	038 Move X0, [X0+728]
	039 Call 0x1C17D08
	040 Move X1, X0
	041 Move X0, X19
	042 Move X2, X31
	043 Call ArgumentNullException..ctor, X0, X1
	044 Move X0, 0xEDD000
	045 Move X0, [X0+2896]
	046 Call 0x1C17D08
	047 Move X1, X0
	048 Move X0, X19
	049 Call 0x1C17DEC

Method: System.Int32 GetCharCount(System.Byte[] bytes, System.Int32 index, System.Int32 count)

Disassembly:
	0x03246D28 RET
	0x03246D2C STP X29, X30, [X31 - 0x60]!
	0x03246D30 STP X28, X27, [X31 + 0x10]
	0x03246D34 STP X26, X25, [X31 + 0x20]

ISIL:
	001 Move X8, [X0]
	002 Move W4, W31
	003 Move X6, [X8+408]
	004 Move X5, [X8+416]
	005 CallNoReturn X6

Method: System.Int32 GetCharCount(System.Byte[] bytes, System.Int32 index, System.Int32 count, System.Boolean flush)

Disassembly:
	0x03246D38 STP X24, X23, [X31 + 0x30]
	0x03246D3C STP X22, X21, [X31 + 0x40]
	0x03246D40 STP X20, X19, [X31 + 0x50]
	0x03246D44 ADRP X22, 0x1196000
	0x03246D48 LDRB W8, [X22 + 0x463]
	0x03246D4C MOV W20, W2
	0x03246D50 MOV X19, X1
	0x03246D54 MOV X21, X0
	0x03246D58 TBNZ X8, 0x0, 0x3246D70

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X5, [X8+680]
	007 Move X4, [X8+688]
	008 Move X30, [X31+16]
	009 CallNoReturn X5
	010 Call 0x1C17F20

Method: System.Int32 GetCharCount(System.Byte* bytes, System.Int32 count, System.Boolean flush)

Disassembly:
	0x03246D5C ADRP X0, 0xEDC000
	0x03246D60 LDR X0, [X0 + 0x2B8]
	0x03246D64 BL 0x1C16CF4
	0x03246D68 MOVZ W8, 0x1
	0x03246D6C STRB W8, [X22 + 0x463]
	0x03246D70 CBZ X21, 0x3246D88
	0x03246D74 MOV X0, X21
	0x03246D78 MOV X1, X31
	0x03246D7C BL 0x323260C

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X4, [X8+696]
	007 Move X3, [X8+704]
	008 Move X30, [X31+16]
	009 CallNoReturn X4
	010 Call 0x1C17F20

Method: System.Int32 GetChars(System.Byte[] bytes, System.Int32 byteIndex, System.Int32 byteCount, System.Char[] chars, System.Int32 charIndex)

Disassembly:
	0x03246D80 MOV W22, W0
	0x03246D84 B 0x3246D90
	0x03246D88 CBZ X19, 0x3246EEC
	0x03246D8C LDR W22, [X19 + 0x10]

ISIL:
	001 Move X8, [X0]
	002 Move W6, W31
	003 Move X9, [X8+456]
	004 Move X7, [X8+464]
	005 CallNoReturn X9

Method: System.Int32 GetChars(System.Byte[] bytes, System.Int32 byteIndex, System.Int32 byteCount, System.Char[] chars, System.Int32 charIndex, System.Boolean flush)

Disassembly:
	0x03246D90 ADRP X26, 0xEDC000
	0x03246D94 LDR X26, [X26 + 0x2B8]
	0x03246D98 LDR X0, [X26]
	0x03246D9C LDR W8, [X0 + 0xE0]
	0x03246DA0 CBNZ W8, 0x3246DA8
	0x03246DA4 BL 0x1C16DFC
	0x03246DA8 MOV X0, X21
	0x03246DAC MOV X1, X19
	0x03246DB0 MOV W2, W20

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X7, [X8+744]
	007 Move X6, [X8+752]
	008 Move X30, [X31+16]
	009 CallNoReturn X7
	010 Call 0x1C17F20

Method: System.Int32 GetChars(System.Byte* bytes, System.Int32 byteCount, System.Char* chars, System.Int32 charCount, System.Boolean flush)

Disassembly:
	0x03246DB4 BL 0x3247124
	0x03246DB8 ADD W23, W20, 0x1
	0x03246DBC CMP W23, W22
	0x03246DC0 B.GE 0x3246ECC
	0x03246DC4 MOV W25, W0
	0x03246DC8 MOVN W27, 0x10FF
	0x03246DCC MOVN W28, 0xABFF
	0x03246DD0 MOVZ W29, 0x1C
	0x03246DD4 LDR X0, [X26]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X6, [X8+760]
	007 Move X5, [X8+768]
	008 Move X30, [X31+16]
	009 CallNoReturn X6
	010 Call 0x1C17F20

