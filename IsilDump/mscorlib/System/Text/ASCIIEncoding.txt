Type: System.Text.ASCIIEncoding

Method: System.Void .ctor()

Disassembly:
	0x033FBAF4 LDP X20, X19, [X31 + 0x20]
	0x033FBAF8 LDP X22, X21, [X31 + 0x10]
	0x033FBAFC LDR X8, [X8]

ISIL:
	001 Move W1, 0x4E9F
	002 Move X2, X31
	003 Call Encoding..ctor, X0, X1
	004 Return 

Method: System.Void SetDefaultFallbacks()

Disassembly:
	0x033FBB00 LDR X8, [X8 + 0xB8]
	0x033FBB04 LDR X0, [X8]
	0x033FBB08 LDP X30, X23, [X31], #0x30
	0x033FBB0C RET
	0x033FBB10 ADRP X0, 0xCFD000
	0x033FBB14 LDR X0, [X0 + 0x528]
	0x033FBB18 BL 0x1C16D08
	0x033FBB1C BL 0x1C16F10

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call EncoderFallback.get_ReplacementFallback
	005 Move [X19+40], X0
	006 Call DecoderFallback.get_ReplacementFallback
	007 Move [X19+48], X0
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 

Method: System.Int32 GetByteCount(System.Char[] chars, System.Int32 index, System.Int32 count)

Disassembly:
	0x033FBC48 MOV X20, X0
	0x033FBC4C TBNZ X8, 0x0, 0x33FBC64
	0x033FBC50 ADRP X0, 0xD27000
	0x033FBC54 LDR X0, [X0 + 0x368]
	0x033FBC58 BL 0x1C16CF4
	0x033FBC5C MOVZ W8, 0x1
	0x033FBC60 STRB W8, [X22 + 0x4D2]
	0x033FBC64 ADD X26, X21, W23, 0x1, SXTW
	0x033FBC68 STR X31, [X31 + 0x8]
	0x033FBC6C CBZ X19, 0x33FBC94
	0x033FBC70 LDR X8, [X19 + 0x10]
	0x033FBC74 CBZ X8, 0x33FBCC0
	0x033FBC78 ADRP X9, 0xD27000
	0x033FBC7C LDR X9, [X9 + 0x368]
	0x033FBC80 LDR X10, [X8]
	0x033FBC84 LDR X9, [X9]
	0x033FBC88 CMP X10, X9
	0x033FBC8C CSEL X25, X8, X31, EQ
	0x033FBC90 B 0x33FBCC4
	0x033FBC94 LDR X25, [X20 + 0x28]
	0x033FBC98 CBZ X25, 0x33FBDB4
	0x033FBC9C ADRP X8, 0xD27000
	0x033FBCA0 LDR X8, [X8 + 0x368]
	0x033FBCA4 LDR X9, [X25]
	0x033FBCA8 MOV X22, X31
	0x033FBCAC LDR X8, [X8]
	0x033FBCB0 CMP X9, X8
	0x033FBCB4 B.NE 0x33FBDB8
	0x033FBCB8 MOV W24, W31
	0x033FBCBC B 0x33FBD14
	0x033FBCC0 MOV X25, X31
	0x033FBCC4 LDR X8, [X19 + 0x18]
	0x033FBCC8 LDRH W24, [X19 + 0x20]
	0x033FBCCC CBZ X8, 0x33FBD60
	0x033FBCD0 MOV X0, X19
	0x033FBCD4 BL 0x33FBF24
	0x033FBCD8 CBZ X0, 0x33FBE80
	0x033FBCDC LDR X8, [X0]
	0x033FBCE0 MOV X22, X0
	0x033FBCE4 LDP X9, X1, [X8 + 0x1B8]
	0x033FBCE8 BLR X9
	0x033FBCEC CMP W0, 0x1
	0x033FBCF0 B.LT 0x33FBCFC
	0x033FBCF4 LDRB W8, [X19 + 0x31]
	0x033FBCF8 CBNZ W8, 0x33FBE84
	0x033FBCFC STP X21, X26, [X22 + 0x10]
	0x033FBD00 STR X19, [X22 + 0x20]
	0x033FBD04 STRH W31, [X22 + 0x28]
	0x033FBD08 STRB W31, [X22 + 0x2A]
	0x033FBD0C STR W31, [X22 + 0x2C]
	0x033FBD10 CBZ X25, 0x33FBD68
	0x033FBD14 LDR X8, [X25]
	0x033FBD18 MOV X0, X25
	0x033FBD1C LDP X9, X1, [X8 + 0x188]
	0x033FBD20 BLR X9
	0x033FBD24 CMP W0, 0x1
	0x033FBD28 B.NE 0x33FBD50
	0x033FBD2C CMP W24, 0x0
	0x033FBD30 CINC W23, W23, NE
	0x033FBD34 MOV W0, W23
	0x033FBD38 LDP X20, X19, [X31 + 0x40]
	0x033FBD3C LDP X22, X21, [X31 + 0x30]
	0x033FBD40 LDP X24, X23, [X31 + 0x20]
	0x033FBD44 LDP X26, X25, [X31 + 0x10]
	0x033FBD48 LDR X30, [X31], #0x50
	0x033FBD4C RET
	0x033FBD50 MOV X25, X21
	0x033FBD54 CBZ W24, 0x33FBDBC
	0x033FBD58 CBNZ X19, 0x33FBD70
	0x033FBD5C B 0x33FBE80
	0x033FBD60 MOV X22, X31
	0x033FBD64 CBNZ X25, 0x33FBD14
	0x033FBD68 MOV X25, X21
	0x033FBD6C CBZ W24, 0x33FBDBC
	0x033FBD70 MOV X0, X19
	0x033FBD74 BL 0x33FBF24
	0x033FBD78 CBZ X0, 0x33FBE80
	0x033FBD7C STP X21, X26, [X0 + 0x10]
	0x033FBD80 STR X19, [X0 + 0x20]
	0x033FBD84 STRH W31, [X0 + 0x28]
	0x033FBD88 STRB W31, [X0 + 0x2A]
	0x033FBD8C STR W31, [X0 + 0x2C]
	0x033FBD90 STR X21, [X31 + 0x8]
	0x033FBD94 LDR X8, [X0]
	0x033FBD98 ADD X2, X31, 0x8
	0x033FBD9C MOV W1, W24
	0x033FBDA0 MOV X22, X0
	0x033FBDA4 LDP X9, X3, [X8 + 0x1D8]
	0x033FBDA8 BLR X9
	0x033FBDAC LDR X25, [X31 + 0x8]
	0x033FBDB0 B 0x33FBDBC
	0x033FBDB4 MOV X22, X31
	0x033FBDB8 MOV X25, X21
	0x033FBDBC MOV W23, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {37}
	006 Move TEMP, X3
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {54}
	010 Move TEMP, X2
	011 And TEMP, TEMP, -2147483648
	012 Compare TEMP, -2147483648
	013 JumpIfEqual {54}
	014 Move W8, [X1+24]
	015 Subtract W9, W8, W2
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Compare W3, 0
	018 JumpIfEqual {32}
	019 Move X9, [X0]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Add X10, X1, 32
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X5, [X9+552]
	025 Move X4, [X9+560]
	026 NotImplemented "Instruction CSEL not yet implemented."
	027 Add X1, X8, W2
	028 Move W2, W3
	029 Move X3, X31
	030 Move X30, [X31+32]
	031 CallNoReturn X5
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move W0, W31
	035 Move X30, [X31+32]
	036 Return X0
	037 Move X0, 0xCFE000
	038 Move X0, [X0+1320]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0xD28000
	043 Move X0, [X0+728]
	044 Call 0x1C17D08
	045 Move X20, X0
	046 Move X0, 0xD28000
	047 Move X0, [X0+736]
	048 Call 0x1C17D08
	049 Move X2, X0
	050 Move X0, X19
	051 Move X1, X20
	052 Move X3, X31
	053 Call ArgumentNullException..ctor, X0, X1, X2
	054 Move X8, 0xD21000
	055 Move X9, 0xD04000
	056 Move X8, [X8+1608]
	057 Move X9, [X9+304]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 Call 0x1C17D08
	061 Move X19, X0
	062 Move X0, 0xD01000
	063 Move X0, [X0+1888]
	064 Call 0x1C17D08
	065 Call 0x1C17F10
	066 Move X20, X0
	067 Move X0, 0xD21000
	068 Move X0, [X0+1648]
	069 Call 0x1C17D08
	070 Move X2, X0
	071 Move X0, X20
	072 Move X1, X19
	073 Move X3, X31
	074 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	075 Move X0, 0xD33000
	076 Move X0, [X0+2864]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X20
	080 Call 0x1C17DEC
	081 Move X0, 0xD01000
	082 Move X0, [X0+1888]
	083 Call 0x1C17D08
	084 Call 0x1C17F10
	085 Move X19, X0
	086 Move X0, 0xD28000
	087 Move X0, [X0+728]
	088 Call 0x1C17D08
	089 Move X20, X0
	090 Move X0, 0xD28000
	091 Move X0, [X0+224]
	092 Call 0x1C17D08
	093 Move X2, X0
	094 Move X0, X19
	095 Move X1, X20
	096 Move X3, X31
	097 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	098 Move X0, 0xD33000
	099 Move X0, [X0+2864]
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X19
	103 Call 0x1C17DEC

Method: System.Int32 GetByteCount(System.String chars)

Disassembly:
	0x033FBDC0 CBZ X22, 0x33FBDF0
	0x033FBDC4 LDR X8, [X22]
	0x033FBDC8 MOV X0, X22
	0x033FBDCC LDP X9, X1, [X8 + 0x198]
	0x033FBDD0 BLR X9
	0x033FBDD4 ANDS W8, W0, 0xFFFF
	0x033FBDD8 CSET W9, NE
	0x033FBDDC STRB W9, [X22 + 0x2A]
	0x033FBDE0 CBNZ W8, 0x33FBDE8
	0x033FBDE4 STR W31, [X22 + 0x2C]
	0x033FBDE8 AND W24, W0, 0xFFFF
	0x033FBDEC B 0x33FBDF4
	0x033FBDF0 MOV W24, W31
	0x033FBDF4 CMP X26, X25
	0x033FBDF8 B.HI 0x33FBE00
	0x033FBDFC CBZ W24, 0x33FBD34
	0x033FBE00 CBNZ W24, 0x33FBE08
	0x033FBE04 LDRH W24, [X25], #0x2
	0x033FBE08 CMP W24, 0x80
	0x033FBE0C B.CC 0x33FBE78
	0x033FBE10 CBNZ X22, 0x33FBE54
	0x033FBE14 CBZ X19, 0x33FBE24
	0x033FBE18 MOV X0, X19
	0x033FBE1C BL 0x33FBF24
	0x033FBE20 B 0x33FBE38
	0x033FBE24 LDR X0, [X20 + 0x28]
	0x033FBE28 CBZ X0, 0x33FBE80
	0x033FBE2C LDR X8, [X0]
	0x033FBE30 LDP X9, X1, [X8 + 0x178]
	0x033FBE34 BLR X9
	0x033FBE38 MOV X22, X0
	0x033FBE3C CBZ X0, 0x33FBE80
	0x033FBE40 STP X21, X26, [X22 + 0x10]
	0x033FBE44 STR X19, [X22 + 0x20]
	0x033FBE48 STRH W31, [X22 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {21}
	006 Move X20, X0
	007 Move X0, X31
	008 Move X19, X1
	009 Call RuntimeHelpers.get_OffsetToStringData
	010 Move X8, [X20]
	011 Move W2, [X19+16]
	012 Add X1, X19, W0
	013 Move X0, X20
	014 Move X5, [X8+552]
	015 Move X4, [X8+560]
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X3, X31
	019 Move X30, [X31+32]
	020 CallNoReturn X5
	021 Move X0, 0xCFE000
	022 Move X0, [X0+1320]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X19, X0
	026 Move X0, 0xD28000
	027 Move X0, [X0+728]
	028 Call 0x1C17D08
	029 Move X1, X0
	030 Move X0, X19
	031 Move X2, X31
	032 Call ArgumentNullException..ctor, X0, X1
	033 Move X0, 0xD33000
	034 Move X0, [X0+2872]
	035 Call 0x1C17D08
	036 Move X1, X0
	037 Move X0, X19
	038 Call 0x1C17DEC

Method: System.Int32 GetByteCount(System.Char* chars, System.Int32 count)

Disassembly:
	0x033FBE4C STRB W31, [X22 + 0x2A]
	0x033FBE50 STR W31, [X22 + 0x2C]
	0x033FBE54 STR X25, [X31 + 0x8]
	0x033FBE58 LDR X8, [X22]
	0x033FBE5C ADD X2, X31, 0x8
	0x033FBE60 MOV X0, X22
	0x033FBE64 MOV W1, W24
	0x033FBE68 LDP X9, X3, [X8 + 0x1D8]
	0x033FBE6C BLR X9
	0x033FBE70 LDR X25, [X31 + 0x8]
	0x033FBE74 B 0x33FBDC0
	0x033FBE78 ADD W23, W23, 0x1
	0x033FBE7C B 0x33FBDC0
	0x033FBE80 BL 0x1C16F20
	0x033FBE84 LDR X8, [X20]
	0x033FBE88 MOV X0, X20
	0x033FBE8C LDP X9, X1, [X8 + 0x1B8]
	0x033FBE90 BLR X9
	0x033FBE94 MOV X20, X0
	0x033FBE98 MOV X0, X19
	0x033FBE9C BL 0x19903C0
	0x033FBEA0 LDR X19, [X19 + 0x10]
	0x033FBEA4 MOV X0, X19
	0x033FBEA8 BL 0x19903C0
	0x033FBEAC MOV X0, X19
	0x033FBEB0 MOV X1, X31
	0x033FBEB4 BL 0x33BE520
	0x033FBEB8 MOV X19, X0
	0x033FBEBC ADRP X0, 0xD27000
	0x033FBEC0 LDR X0, [X0 + 0x6B0]
	0x033FBEC4 BL 0x1C16D08
	0x033FBEC8 MOV X1, X20
	0x033FBECC MOV X2, X19
	0x033FBED0 MOV X3, X31
	0x033FBED4 BL 0x320A264
	0x033FBED8 MOV X19, X0
	0x033FBEDC ADRP X0, 0xD00000
	0x033FBEE0 LDR X0, [X0 + 0x578]
	0x033FBEE4 BL 0x1C16D08
	0x033FBEE8 BL 0x1C16F10
	0x033FBEEC MOV X1, X19
	0x033FBEF0 MOV X2, X31
	0x033FBEF4 MOV X20, X0
	0x033FBEF8 BL 0x3314A68
	0x033FBEFC ADRP X0, 0xD32000
	0x033FBF00 LDR X0, [X0 + 0xB88]
	0x033FBF04 BL 0x1C16D08
	0x033FBF08 MOV X1, X0
	0x033FBF0C MOV X0, X20
	0x033FBF10 BL 0x1C16DEC
	0x033FBF14 LDR X8, [X0 + 0x18]
	0x033FBF18 CMP X8, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {18}
	006 Move TEMP, X2
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {35}
	010 Move X8, [X0]
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X3, X31
	014 Move X5, [X8+552]
	015 Move X4, [X8+560]
	016 Move X30, [X31+32]
	017 CallNoReturn X5
	018 Move X0, 0xCFE000
	019 Move X0, [X0+1320]
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X19, X0
	023 Move X0, 0xD28000
	024 Move X0, [X0+728]
	025 Call 0x1C17D08
	026 Move X20, X0
	027 Move X0, 0xD28000
	028 Move X0, [X0+736]
	029 Call 0x1C17D08
	030 Move X2, X0
	031 Move X0, X19
	032 Move X1, X20
	033 Move X3, X31
	034 Call ArgumentNullException..ctor, X0, X1, X2
	035 Move X0, 0xD01000
	036 Move X0, [X0+1888]
	037 Call 0x1C17D08
	038 Call 0x1C17F10
	039 Move X19, X0
	040 Move X0, 0xD21000
	041 Move X0, [X0+1608]
	042 Call 0x1C17D08
	043 Move X20, X0
	044 Move X0, 0xD21000
	045 Move X0, [X0+1648]
	046 Call 0x1C17D08
	047 Move X2, X0
	048 Move X0, X19
	049 Move X1, X20
	050 Move X3, X31
	051 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	052 Move X0, 0xD33000
	053 Move X0, [X0+2880]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X19
	057 Call 0x1C17DEC

Method: System.Int32 GetBytes(System.String chars, System.Int32 charIndex, System.Int32 charCount, System.Byte[] bytes, System.Int32 byteIndex)

Disassembly:
	0x033FBF1C CSET W0, NE
	0x033FBF20 RET
	0x033FBF24 STP X30, X19, [X31 - 0x10]!
	0x033FBF28 MOV X19, X0
	0x033FBF2C LDR X0, [X0 + 0x18]
	0x033FBF30 CBNZ X0, 0x33FBF54
	0x033FBF34 LDR X0, [X19 + 0x10]
	0x033FBF38 CBNZ X0, 0x33FBF44
	0x033FBF3C BL 0x33FAB20
	0x033FBF40 CBZ X0, 0x33FBF5C
	0x033FBF44 LDR X8, [X0]
	0x033FBF48 LDP X9, X1, [X8 + 0x178]
	0x033FBF4C BLR X9
	0x033FBF50 STR X0, [X19 + 0x18]
	0x033FBF54 LDP X30, X19, [X31], #0x10
	0x033FBF58 RET
	0x033FBF5C BL 0x1C16F20
	0x033FBF60 AND W8, W4, 0x1
	0x033FBF64 STP X1, X2, [X0 + 0x10]
	0x033FBF68 STR X3, [X0 + 0x20]
	0x033FBF6C STURH W31, [X0 + 0x29]
	0x033FBF70 STRB W8, [X0 + 0x28]
	0x033FBF74 STR W31, [X0 + 0x2C]
	0x033FBF78 RET
	0x033FBF7C STP X30, X19, [X31 - 0x10]!
	0x033FBF80 LDR X8, [X0]
	0x033FBF84 MOV X19, X0
	0x033FBF88 LDP X9, X1, [X8 + 0x198]
	0x033FBF8C BLR X9
	0x033FBF90 ANDS W8, W0, 0xFFFF
	0x033FBF94 CSET W9, NE
	0x033FBF98 STRB W9, [X19 + 0x2A]
	0x033FBF9C CBNZ W8, 0x33FBFA4
	0x033FBFA0 STR W31, [X19 + 0x2C]
	0x033FBFA4 LDP X30, X19, [X31], #0x10
	0x033FBFA8 RET
	0x033FBFAC SUB X31, X31, 0x70
	0x033FBFB0 STP X29, X30, [X31 + 0x10]
	0x033FBFB4 STP X28, X27, [X31 + 0x20]
	0x033FBFB8 STP X26, X25, [X31 + 0x30]
	0x033FBFBC STP X24, X23, [X31 + 0x40]
	0x033FBFC0 STP X22, X21, [X31 + 0x50]
	0x033FBFC4 STP X20, X19, [X31 + 0x60]
	0x033FBFC8 ADRP X23, 0xFE2000
	0x033FBFCC LDRB W8, [X23 + 0x4D3]
	0x033FBFD0 MOV X19, X5
	0x033FBFD4 MOV W24, W4
	0x033FBFD8 MOV X20, X3
	0x033FBFDC MOV W25, W2
	0x033FBFE0 MOV X21, X1
	0x033FBFE4 MOV X22, X0
	0x033FBFE8 TBNZ X8, 0x0, 0x33FC000
	0x033FBFEC ADRP X0, 0xD27000
	0x033FBFF0 LDR X0, [X0 + 0x368]
	0x033FBFF4 BL 0x1C16CF4
	0x033FBFF8 MOVZ W8, 0x1
	0x033FBFFC STRB W8, [X23 + 0x4D3]
	0x033FC000 ADD X28, X21, W25, 0x1, SXTW
	0x033FC004 STR X31, [X31 + 0x8]
	0x033FC008 CBZ X19, 0x33FC030
	0x033FC00C LDR X8, [X19 + 0x10]
	0x033FC010 CBZ X8, 0x33FC05C
	0x033FC014 ADRP X9, 0xD26000
	0x033FC018 LDR X9, [X9 + 0x368]
	0x033FC01C LDR X10, [X8]
	0x033FC020 LDR X9, [X9]
	0x033FC024 CMP X10, X9
	0x033FC028 CSEL X27, X8, X31, EQ
	0x033FC02C B 0x33FC060
	0x033FC030 LDR X27, [X22 + 0x28]
	0x033FC034 CBZ X27, 0x33FC050
	0x033FC038 ADRP X8, 0xD26000
	0x033FC03C LDR X8, [X8 + 0x368]
	0x033FC040 LDR X9, [X27]
	0x033FC044 LDR X8, [X8]
	0x033FC048 CMP X9, X8
	0x033FC04C B.EQ 0x33FC0D0
	0x033FC050 MOV X23, X31
	0x033FC054 ADD X25, X20, W24, SXTW
	0x033FC058 B 0x33FC164
	0x033FC05C MOV X27, X31
	0x033FC060 LDR X8, [X19 + 0x18]
	0x033FC064 LDRH W26, [X19 + 0x20]
	0x033FC068 CBZ X8, 0x33FC0B8
	0x033FC06C MOV X0, X19
	0x033FC070 BL 0x33FBF24
	0x033FC074 CBZ X0, 0x33FC350
	0x033FC078 LDR X8, [X0]
	0x033FC07C MOV X23, X0
	0x033FC080 LDP X9, X1, [X8 + 0x1B8]
	0x033FC084 BLR X9
	0x033FC088 CMP W0, 0x1
	0x033FC08C B.LT 0x33FC098
	0x033FC090 LDRB W8, [X19 + 0x31]
	0x033FC094 CBNZ W8, 0x33FC354
	0x033FC098 MOVZ W8, 0x1
	0x033FC09C STP X21, X28, [X23 + 0x10]
	0x033FC0A0 STR X19, [X23 + 0x20]
	0x033FC0A4 STRB W31, [X23 + 0x2A]
	0x033FC0A8 STRH W8, [X23 + 0x28]
	0x033FC0AC STR W31, [X23 + 0x2C]
	0x033FC0B0 CBNZ X27, 0x33FC0D8
	0x033FC0B4 B 0x33FC0C0
	0x033FC0B8 MOV X23, X31
	0x033FC0BC CBNZ X27, 0x33FC0D8
	0x033FC0C0 ADD X25, X20, W24, SXTW
	0x033FC0C4 MOV X27, X21
	0x033FC0C8 CBNZ W26, 0x33FC11C
	0x033FC0CC B 0x33FC168
	0x033FC0D0 MOV W26, W31
	0x033FC0D4 MOV X23, X31
	0x033FC0D8 LDR X8, [X27]
	0x033FC0DC MOV X0, X27
	0x033FC0E0 LDP X9, X1, [X8 + 0x188]
	0x033FC0E4 BLR X9
	0x033FC0E8 CMP W0, 0x1
	0x033FC0EC B.NE 0x33FC110
	0x033FC0F0 LDR X0, [X27 + 0x10]
	0x033FC0F4 CBZ X0, 0x33FC350
	0x033FC0F8 MOV W1, W31
	0x033FC0FC MOV X2, X31
	0x033FC100 BL 0x3222A1C
	0x033FC104 AND W8, W0, 0xFFFF
	0x033FC108 CMP W8, 0x7F
	0x033FC10C B.LS 0x33FC2C0
	0x033FC110 ADD X25, X20, W24, SXTW
	0x033FC114 CBZ W26, 0x33FC164
	0x033FC118 CBZ X19, 0x33FC350
	0x033FC11C MOV X0, X19
	0x033FC120 BL 0x33FBF24
	0x033FC124 CBZ X0, 0x33FC350
	0x033FC128 MOVZ W8, 0x1
	0x033FC12C STP X21, X28, [X0 + 0x10]
	0x033FC130 STR X19, [X0 + 0x20]
	0x033FC134 STRB W31, [X0 + 0x2A]
	0x033FC138 STR W31, [X0 + 0x2C]
	0x033FC13C STRH W8, [X0 + 0x28]
	0x033FC140 STR X21, [X31 + 0x8]
	0x033FC144 LDR X8, [X0]
	0x033FC148 ADD X2, X31, 0x8
	0x033FC14C MOV W1, W26
	0x033FC150 MOV X23, X0
	0x033FC154 LDP X9, X3, [X8 + 0x1D8]
	0x033FC158 BLR X9
	0x033FC15C LDR X27, [X31 + 0x8]
	0x033FC160 B 0x33FC168

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X25, 0xFE3000
	012 Move W8, [X25+1230]
	013 Move W19, W5
	014 Move X24, X4
	015 Move W20, W3
	016 Move W21, W2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD27000
	024 Move X0, [X0+2096]
	025 Call 0x1C17CF4
	026 Move X0, 0xD28000
	027 Move X0, [X0+760]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1230], W8
	031 Compare X22, 0
	032 JumpIfEqual {96}
	033 Compare X24, 0
	034 JumpIfEqual {96}
	035 Move TEMP, X20
	036 And TEMP, TEMP, -2147483648
	037 Compare TEMP, -2147483648
	038 JumpIfEqual {117}
	039 Move TEMP, X21
	040 And TEMP, TEMP, -2147483648
	041 Compare TEMP, -2147483648
	042 JumpIfEqual {117}
	043 Move W8, [X22+16]
	044 Subtract W8, W8, W21
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move TEMP, X19
	047 And TEMP, TEMP, -2147483648
	048 Compare TEMP, -2147483648
	049 JumpIfEqual {85}
	050 Move W8, [X24+24]
	051 Subtract W25, W8, W19
	052 Move X26, 0xD28000
	053 Move X27, 0xD27000
	054 Move X26, [X26+760]
	055 Move X27, [X27+2096]
	056 Move X0, X31
	057 Call RuntimeHelpers.get_OffsetToStringData
	058 Move X1, [X26]
	059 Move W26, W0
	060 Move X0, X24
	061 Call 0x25FC4C0, X0
	062 Move X2, [X27]
	063 Call 0x2219CF4, X0
	064 Move X8, [X23]
	065 Add X3, X0, W19
	066 Move X0, X23
	067 Move W2, W20
	068 Move X7, [X8+648]
	069 Move X6, [X8+656]
	070 Add X8, X22, W21
	071 Add X1, X8, W26
	072 Move W4, W25
	073 Move X20, [X31+64]
	074 Move X19, [X31+72]
	075 Move X22, [X31+48]
	076 Move X21, [X31+56]
	077 Move X24, [X31+32]
	078 Move X23, [X31+40]
	079 Move X26, [X31+16]
	080 Move X25, [X31+24]
	081 Move X5, X31
	082 Move X30, [X31+80]
	083 Move X27, [X31+88]
	084 CallNoReturn X7
	085 Move X0, 0xD00000
	086 Move X0, [X0+1888]
	087 Call 0x1C17D08
	088 Call 0x1C17F10
	089 Move X19, X0
	090 Move X0, 0xD27000
	091 Move X0, [X0+768]
	092 Call 0x1C17D08
	093 Move X20, X0
	094 Move X0, 0xD20000
	095 Move X0, [X0+1632]
	096 Move X8, 0xD27000
	097 Move X9, 0xD27000
	098 Move X8, [X8+776]
	099 Move X9, [X9+728]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 NotImplemented "Instruction CSEL not yet implemented."
	102 Call 0x1C17D08
	103 Move X19, X0
	104 Move X0, 0xCFD000
	105 Move X0, [X0+1320]
	106 Call 0x1C17D08
	107 Call 0x1C17F10
	108 Move X20, X0
	109 Move X0, 0xD27000
	110 Move X0, [X0+736]
	111 Call 0x1C17D08
	112 Move X2, X0
	113 Move X0, X20
	114 Move X1, X19
	115 Move X3, X31
	116 Call ArgumentNullException..ctor, X0, X1, X2
	117 Move X8, 0xD27000
	118 Move X9, 0xD27000
	119 Move X8, [X8+784]
	120 Move X9, [X9+792]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 NotImplemented "Instruction CSEL not yet implemented."
	123 Call 0x1C17D08
	124 Move X19, X0
	125 Move X0, 0xD00000
	126 Move X0, [X0+1888]
	127 Call 0x1C17D08
	128 Call 0x1C17F10
	129 Move X20, X0
	130 Move X0, 0xD20000
	131 Move X0, [X0+1648]
	132 Call 0x1C17D08
	133 Move X2, X0
	134 Move X0, X20
	135 Move X1, X19
	136 Move X3, X31
	137 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	138 Move X0, 0xD32000
	139 Move X0, [X0+2888]
	140 Call 0x1C17D08
	141 Move X1, X0
	142 Move X0, X20
	143 Call 0x1C17DEC
	144 Move X0, 0xD00000
	145 Move X0, [X0+1888]
	146 Call 0x1C17D08
	147 Call 0x1C17F10
	148 Move X19, X0
	149 Move X0, 0xD27000
	150 Move X0, [X0+728]
	151 Call 0x1C17D08
	152 Move X20, X0
	153 Move X0, 0xD27000
	154 Move X0, [X0+264]
	155 Call 0x1C17D08
	156 Move X2, X0
	157 Move X0, X19
	158 Move X1, X20
	159 Move X3, X31
	160 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	161 Move X0, 0xD32000
	162 Move X0, [X0+2888]
	163 Call 0x1C17D08
	164 Move X1, X0
	165 Move X0, X19
	166 Call 0x1C17DEC

Method: System.Int32 GetBytes(System.Char[] chars, System.Int32 charIndex, System.Int32 charCount, System.Byte[] bytes, System.Int32 byteIndex)

Disassembly:
	0x033FC164 MOV X27, X21
	0x033FC168 MOVZ W29, 0x1
	0x033FC16C MOV X26, X20
	0x033FC170 CBZ X23, 0x33FC1A0
	0x033FC174 LDR X8, [X23]
	0x033FC178 MOV X0, X23
	0x033FC17C LDP X9, X1, [X8 + 0x198]
	0x033FC180 BLR X9
	0x033FC184 ANDS W8, W0, 0xFFFF
	0x033FC188 CSET W9, NE
	0x033FC18C STRB W9, [X23 + 0x2A]
	0x033FC190 CBNZ W8, 0x33FC198
	0x033FC194 STR W31, [X23 + 0x2C]
	0x033FC198 AND W24, W0, 0xFFFF
	0x033FC19C B 0x33FC1A4
	0x033FC1A0 MOV W24, W31
	0x033FC1A4 CMP X28, X27
	0x033FC1A8 B.HI 0x33FC1B0
	0x033FC1AC CBZ W24, 0x33FC274
	0x033FC1B0 CBNZ W24, 0x33FC1B8
	0x033FC1B4 LDRH W24, [X27], #0x2
	0x033FC1B8 CMP W24, 0x80
	0x033FC1BC B.CS 0x33FC1D0
	0x033FC1C0 CMP X25, X26
	0x033FC1C4 B.LS 0x33FC238
	0x033FC1C8 STRB W24, [X26], #0x1
	0x033FC1CC B 0x33FC170
	0x033FC1D0 CBNZ X23, 0x33FC214
	0x033FC1D4 CBZ X19, 0x33FC1E4
	0x033FC1D8 MOV X0, X19
	0x033FC1DC BL 0x33FBF24
	0x033FC1E0 B 0x33FC1F8
	0x033FC1E4 LDR X0, [X22 + 0x28]
	0x033FC1E8 CBZ X0, 0x33FC350
	0x033FC1EC LDR X8, [X0]
	0x033FC1F0 LDP X9, X1, [X8 + 0x178]
	0x033FC1F4 BLR X9
	0x033FC1F8 MOV X23, X0
	0x033FC1FC CBZ X0, 0x33FC350
	0x033FC200 STP X21, X28, [X23 + 0x10]
	0x033FC204 STR X19, [X23 + 0x20]
	0x033FC208 STRH W29, [X23 + 0x28]
	0x033FC20C STRB W31, [X23 + 0x2A]
	0x033FC210 STR W31, [X23 + 0x2C]
	0x033FC214 STR X27, [X31 + 0x8]
	0x033FC218 LDR X8, [X23]
	0x033FC21C ADD X2, X31, 0x8
	0x033FC220 MOV X0, X23
	0x033FC224 MOV W1, W24
	0x033FC228 LDP X9, X3, [X8 + 0x1D8]
	0x033FC22C BLR X9
	0x033FC230 LDR X27, [X31 + 0x8]
	0x033FC234 B 0x33FC170
	0x033FC238 CBZ X23, 0x33FC258
	0x033FC23C LDRB W8, [X23 + 0x2A]
	0x033FC240 CBZ W8, 0x33FC258
	0x033FC244 LDR X8, [X23]
	0x033FC248 MOV X0, X23
	0x033FC24C LDP X9, X1, [X8 + 0x1A8]
	0x033FC250 BLR X9
	0x033FC254 B 0x33FC25C
	0x033FC258 SUB X27, X27, 0x2
	0x033FC25C CMP X26, X20
	0x033FC260 CSET W2, EQ
	0x033FC264 MOV X0, X22
	0x033FC268 MOV X1, X19
	0x033FC26C MOV X3, X31
	0x033FC270 BL 0x3245184
	0x033FC274 CBZ X19, 0x33FC29C
	0x033FC278 CBZ X23, 0x33FC288
	0x033FC27C LDRB W8, [X23 + 0x29]
	0x033FC280 CBNZ W8, 0x33FC288
	0x033FC284 STRH W31, [X19 + 0x20]
	0x033FC288 SUB X8, X27, X21
	0x033FC28C CMP X8, 0x0
	0x033FC290 CINC X8, X8, LT
	0x033FC294 UBFM X8, X8, 0x1, 0x3F
	0x033FC298 STR W8, [X19 + 0x34]
	0x033FC29C SUB W0, W26, W20
	0x033FC2A0 LDP X20, X19, [X31 + 0x60]
	0x033FC2A4 LDP X22, X21, [X31 + 0x50]
	0x033FC2A8 LDP X24, X23, [X31 + 0x40]
	0x033FC2AC LDP X26, X25, [X31 + 0x30]
	0x033FC2B0 LDP X28, X27, [X31 + 0x20]
	0x033FC2B4 LDP X29, X30, [X31 + 0x10]
	0x033FC2B8 ADD X31, X31, 0x70
	0x033FC2BC RET
	0x033FC2C0 MOV W27, W0
	0x033FC2C4 CBZ W26, 0x33FC2F0
	0x033FC2C8 CBNZ W24, 0x33FC2E0
	0x033FC2CC MOVZ W2, 0x1
	0x033FC2D0 MOV X0, X22
	0x033FC2D4 MOV X1, X19
	0x033FC2D8 MOV X3, X31
	0x033FC2DC BL 0x3245184
	0x033FC2E0 MOV X26, X20
	0x033FC2E4 STRB W27, [X26], #0x1
	0x033FC2E8 SUB W24, W24, 0x1
	0x033FC2EC B 0x33FC2F4
	0x033FC2F0 MOV X26, X20
	0x033FC2F4 CMP W24, W25
	0x033FC2F8 B.GE 0x33FC318
	0x033FC2FC CMP W24, 0x1
	0x033FC300 CSET W2, LT
	0x033FC304 MOV X0, X22
	0x033FC308 MOV X1, X19
	0x033FC30C MOV X3, X31
	0x033FC310 BL 0x3245184
	0x033FC314 ADD X28, X21, W24, 0x1, SXTW
	0x033FC318 MOV X8, X21
	0x033FC31C CMP X28, X21
	0x033FC320 B.LS 0x33FC340
	0x033FC324 MOV X9, X8
	0x033FC328 LDRH W9, [X8], #0x2
	0x033FC32C CMP W9, 0x80
	0x033FC330 CSEL W9, W9, W27, CC
	0x033FC334 CMP X28, X8
	0x033FC338 STRB W9, [X26], #0x1
	0x033FC33C B.HI 0x33FC324
	0x033FC340 CBZ X19, 0x33FC29C
	0x033FC344 STRH W31, [X19 + 0x20]
	0x033FC348 SUB X8, X8, X21
	0x033FC34C B 0x33FC28C
	0x033FC350 BL 0x1C16F20
	0x033FC354 LDR X8, [X22]
	0x033FC358 MOV X0, X22
	0x033FC35C LDP X9, X1, [X8 + 0x1B8]
	0x033FC360 BLR X9
	0x033FC364 MOV X20, X0
	0x033FC368 MOV X0, X19
	0x033FC36C BL 0x19903C0
	0x033FC370 LDR X19, [X19 + 0x10]
	0x033FC374 MOV X0, X19
	0x033FC378 BL 0x19903C0
	0x033FC37C MOV X0, X19
	0x033FC380 MOV X1, X31
	0x033FC384 BL 0x33BE520
	0x033FC388 MOV X19, X0
	0x033FC38C ADRP X0, 0xD26000
	0x033FC390 LDR X0, [X0 + 0x6B0]
	0x033FC394 BL 0x1C16D08
	0x033FC398 MOV X1, X20
	0x033FC39C MOV X2, X19
	0x033FC3A0 MOV X3, X31
	0x033FC3A4 BL 0x320A264
	0x033FC3A8 MOV X19, X0
	0x033FC3AC ADRP X0, 0xCFF000
	0x033FC3B0 LDR X0, [X0 + 0x578]
	0x033FC3B4 BL 0x1C16D08
	0x033FC3B8 BL 0x1C16F10
	0x033FC3BC MOV X1, X19
	0x033FC3C0 MOV X2, X31
	0x033FC3C4 MOV X20, X0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0xFE2000
	011 Move W8, [X25+1231]
	012 Move W20, W5
	013 Move X23, X4
	014 Move W19, W3
	015 Move W21, W2
	016 Move X24, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xD26000
	023 Move X0, [X0+2096]
	024 Call 0x1C17CF4
	025 Move X0, 0xD27000
	026 Move X0, [X0+760]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+1231], W8
	030 Compare X24, 0
	031 JumpIfEqual {106}
	032 Compare X23, 0
	033 JumpIfEqual {106}
	034 Move TEMP, X19
	035 And TEMP, TEMP, -2147483648
	036 Compare TEMP, -2147483648
	037 JumpIfEqual {127}
	038 Move TEMP, X21
	039 And TEMP, TEMP, -2147483648
	040 Compare TEMP, -2147483648
	041 JumpIfEqual {127}
	042 Move W8, [X24+24]
	043 Subtract W9, W8, W21
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move TEMP, X20
	046 And TEMP, TEMP, -2147483648
	047 Compare TEMP, -2147483648
	048 JumpIfEqual {95}
	049 Move W9, [X23+24]
	050 Subtract W25, W9, W20
	051 Compare W19, 0
	052 JumpIfEqual {84}
	053 Move X9, 0xD27000
	054 Move X9, [X9+760]
	055 Move X26, 0xD26000
	056 Move X26, [X26+2096]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X1, [X9]
	059 Add X9, X24, 32
	060 Move X0, X23
	061 NotImplemented "Instruction CSEL not yet implemented."
	062 Call 0x25FC4C0, X0
	063 Move X2, [X26]
	064 Call 0x2219CF4, X0
	065 Move X8, [X22]
	066 Add X1, X24, W21
	067 Add X3, X0, W20
	068 Move X0, X22
	069 Move X7, [X8+648]
	070 Move X6, [X8+656]
	071 Move W2, W19
	072 Move W4, W25
	073 Move X20, [X31+64]
	074 Move X19, [X31+72]
	075 Move X22, [X31+48]
	076 Move X21, [X31+56]
	077 Move X24, [X31+32]
	078 Move X23, [X31+40]
	079 Move X26, [X31+16]
	080 Move X25, [X31+24]
	081 Move X5, X31
	082 Move X30, [X31+80]
	083 CallNoReturn X7
	084 Move X20, [X31+64]
	085 Move X19, [X31+72]
	086 Move X22, [X31+48]
	087 Move X21, [X31+56]
	088 Move X24, [X31+32]
	089 Move X23, [X31+40]
	090 Move X26, [X31+16]
	091 Move X25, [X31+24]
	092 Move W0, W31
	093 Move X30, [X31+80]
	094 Return X0
	095 Move X0, 0xD00000
	096 Move X0, [X0+1888]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X19, X0
	100 Move X0, 0xD27000
	101 Move X0, [X0+768]
	102 Call 0x1C17D08
	103 Move X20, X0
	104 Move X0, 0xD20000
	105 Move X0, [X0+1632]
	106 Move X8, 0xD27000
	107 Move X9, 0xD27000
	108 Move X8, [X8+776]
	109 Move X9, [X9+728]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction CSEL not yet implemented."
	112 Call 0x1C17D08
	113 Move X19, X0
	114 Move X0, 0xCFD000
	115 Move X0, [X0+1320]
	116 Call 0x1C17D08
	117 Call 0x1C17F10
	118 Move X20, X0
	119 Move X0, 0xD27000
	120 Move X0, [X0+736]
	121 Call 0x1C17D08
	122 Move X2, X0
	123 Move X0, X20
	124 Move X1, X19
	125 Move X3, X31
	126 Call ArgumentNullException..ctor, X0, X1, X2
	127 Move X8, 0xD27000
	128 Move X9, 0xD27000
	129 Move X8, [X8+784]
	130 Move X9, [X9+792]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 NotImplemented "Instruction CSEL not yet implemented."
	133 Call 0x1C17D08
	134 Move X19, X0
	135 Move X0, 0xD00000
	136 Move X0, [X0+1888]
	137 Call 0x1C17D08
	138 Call 0x1C17F10
	139 Move X20, X0
	140 Move X0, 0xD20000
	141 Move X0, [X0+1648]
	142 Call 0x1C17D08
	143 Move X2, X0
	144 Move X0, X20
	145 Move X1, X19
	146 Move X3, X31
	147 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	148 Move X0, 0xD32000
	149 Move X0, [X0+2896]
	150 Call 0x1C17D08
	151 Move X1, X0
	152 Move X0, X20
	153 Call 0x1C17DEC
	154 Move X0, 0xD00000
	155 Move X0, [X0+1888]
	156 Call 0x1C17D08
	157 Call 0x1C17F10
	158 Move X19, X0
	159 Move X0, 0xD27000
	160 Move X0, [X0+728]
	161 Call 0x1C17D08
	162 Move X20, X0
	163 Move X0, 0xD27000
	164 Move X0, [X0+224]
	165 Call 0x1C17D08
	166 Move X2, X0
	167 Move X0, X19
	168 Move X1, X20
	169 Move X3, X31
	170 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	171 Move X0, 0xD32000
	172 Move X0, [X0+2896]
	173 Call 0x1C17D08
	174 Move X1, X0
	175 Move X0, X19
	176 Call 0x1C17DEC

Method: System.Int32 GetBytes(System.Char* chars, System.Int32 charCount, System.Byte* bytes, System.Int32 byteCount)

Disassembly:
	0x033FC3C8 BL 0x3314A68
	0x033FC3CC ADRP X0, 0xD31000
	0x033FC3D0 LDR X0, [X0 + 0xB90]
	0x033FC3D4 BL 0x1C16D08
	0x033FC3D8 MOV X1, X0
	0x033FC3DC MOV X0, X20
	0x033FC3E0 BL 0x1C16DEC
	0x033FC3E4 STP X30, X27, [X31 - 0x50]!
	0x033FC3E8 STP X26, X25, [X31 + 0x10]
	0x033FC3EC STP X24, X23, [X31 + 0x20]
	0x033FC3F0 STP X22, X21, [X31 + 0x30]
	0x033FC3F4 STP X20, X19, [X31 + 0x40]
	0x033FC3F8 ADRP X23, 0xFE1000
	0x033FC3FC LDRB W8, [X23 + 0x4D4]
	0x033FC400 MOV X20, X3
	0x033FC404 MOV W19, W2
	0x033FC408 MOV X21, X1
	0x033FC40C MOV X22, X0
	0x033FC410 TBNZ X8, 0x0, 0x33FC434
	0x033FC414 ADRP X0, 0xCF7000
	0x033FC418 LDR X0, [X0 + 0x618]
	0x033FC41C BL 0x1C16CF4
	0x033FC420 ADRP X0, 0xD26000
	0x033FC424 LDR X0, [X0 + 0x648]
	0x033FC428 BL 0x1C16CF4
	0x033FC42C MOVZ W8, 0x1
	0x033FC430 STRB W8, [X23 + 0x4D4]
	0x033FC434 CBZ X20, 0x33FC444
	0x033FC438 LDR X0, [X20 + 0x10]
	0x033FC43C CBNZ X0, 0x33FC44C
	0x033FC440 B 0x33FC490
	0x033FC444 LDR X0, [X22 + 0x30]
	0x033FC448 CBZ X0, 0x33FC490
	0x033FC44C ADRP X8, 0xD26000
	0x033FC450 LDR X8, [X8 + 0x648]
	0x033FC454 LDR X9, [X0]
	0x033FC458 LDR X8, [X8]
	0x033FC45C CMP X9, X8
	0x033FC460 B.NE 0x33FC490
	0x033FC464 LDP X9, X1, [X8 + 0x188]
	0x033FC468 BLR X9
	0x033FC46C CMP W0, 0x1
	0x033FC470 B.NE 0x33FC490
	0x033FC474 MOV W0, W19
	0x033FC478 LDP X20, X19, [X31 + 0x40]
	0x033FC47C LDP X22, X21, [X31 + 0x30]
	0x033FC480 LDP X24, X23, [X31 + 0x20]
	0x033FC484 LDP X26, X25, [X31 + 0x10]
	0x033FC488 LDP X30, X27, [X31], #0x50
	0x033FC48C RET
	0x033FC490 ADRP X8, 0xCF7000
	0x033FC494 LDR X8, [X8 + 0x618]
	0x033FC498 MOVZ W1, 0x1
	0x033FC49C LDR X0, [X8]
	0x033FC4A0 BL 0x1C16D6C
	0x033FC4A4 MOV X23, X0
	0x033FC4A8 MOV X25, X31
	0x033FC4AC ADD X26, X21, W19, SXTW
	0x033FC4B0 MOV X24, X21
	0x033FC4B4 CMP X26, X24
	0x033FC4B8 B.LS 0x33FC474
	0x00000000 INVALID

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {24}
	006 Compare X3, 0
	007 JumpIfEqual {24}
	008 Move TEMP, X4
	009 And TEMP, TEMP, -2147483648
	010 Compare TEMP, -2147483648
	011 JumpIfEqual {45}
	012 Move TEMP, X2
	013 And TEMP, TEMP, -2147483648
	014 Compare TEMP, -2147483648
	015 JumpIfEqual {45}
	016 Move X8, [X0]
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X5, X31
	020 Move X7, [X8+648]
	021 Move X6, [X8+656]
	022 Move X30, [X31+32]
	023 CallNoReturn X7
	024 Move X8, 0xD27000
	025 Move X9, 0xD27000
	026 Move X8, [X8+728]
	027 Move X9, [X9+776]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSEL not yet implemented."
	030 Call 0x1C17D08
	031 Move X19, X0
	032 Move X0, 0xCFD000
	033 Move X0, [X0+1320]
	034 Call 0x1C17D08
	035 Call 0x1C17F10
	036 Move X20, X0
	037 Move X0, 0xD27000
	038 Move X0, [X0+736]
	039 Call 0x1C17D08
	040 Move X2, X0
	041 Move X0, X20
	042 Move X1, X19
	043 Move X3, X31
	044 Call ArgumentNullException..ctor, X0, X1, X2
	045 Move X8, 0xD27000
	046 Move X9, 0xD27000
	047 Move X8, [X8+808]
	048 Move X9, [X9+784]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 Call 0x1C17D08
	052 Move X19, X0
	053 Move X0, 0xD00000
	054 Move X0, [X0+1888]
	055 Call 0x1C17D08
	056 Call 0x1C17F10
	057 Move X20, X0
	058 Move X0, 0xD20000
	059 Move X0, [X0+1648]
	060 Call 0x1C17D08
	061 Move X2, X0
	062 Move X0, X20
	063 Move X1, X19
	064 Move X3, X31
	065 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	066 Move X0, 0xD32000
	067 Move X0, [X0+2904]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X20
	071 Call 0x1C17DEC

Method: System.Int32 GetCharCount(System.Byte[] bytes, System.Int32 index, System.Int32 count)

Disassembly:
	0x033FC4C0 TBZ X27, 0x1F, 0x33FC4B4
	0x033FC4C4 CBNZ X25, 0x33FC4F8
	0x033FC4C8 CBZ X20, 0x33FC4D8
	0x033FC4CC MOV X0, X20
	0x033FC4D0 BL 0x33FC534
	0x033FC4D4 B 0x33FC4EC
	0x033FC4D8 LDR X0, [X22 + 0x30]
	0x033FC4DC CBZ X0, 0x33FC52C
	0x033FC4E0 LDR X8, [X0]
	0x033FC4E4 LDP X9, X1, [X8 + 0x178]
	0x033FC4E8 BLR X9
	0x033FC4EC MOV X25, X0
	0x033FC4F0 CBZ X0, 0x33FC52C
	0x033FC4F4 STP X21, X31, [X25 + 0x10]
	0x033FC4F8 CBZ X23, 0x33FC52C
	0x033FC4FC LDR W8, [X23 + 0x18]
	0x033FC500 CBZ W8, 0x33FC530
	0x033FC504 STRB W27, [X23 + 0x20]
	0x033FC508 LDR X8, [X25]
	0x033FC50C MOV X0, X25
	0x033FC510 MOV X1, X23
	0x033FC514 MOV X2, X24
	0x033FC518 LDP X9, X3, [X8 + 0x1B8]
	0x033FC51C BLR X9
	0x033FC520 ADD W8, W19, W0
	0x033FC524 SUB W19, W8, 0x1
	0x033FC528 B 0x33FC4B4
	0x033FC52C BL 0x1C16F20
	0x033FC530 BL 0x1C16F28
	0x033FC534 STP X30, X19, [X31 - 0x10]!
	0x033FC538 MOV X19, X0
	0x033FC53C LDR X0, [X0 + 0x18]
	0x033FC540 CBNZ X0, 0x33FC564
	0x033FC544 LDR X0, [X19 + 0x10]
	0x033FC548 CBNZ X0, 0x33FC554
	0x033FC54C BL 0x33FABB4
	0x033FC550 CBZ X0, 0x33FC56C
	0x033FC554 LDR X8, [X0]
	0x033FC558 LDP X9, X1, [X8 + 0x178]
	0x033FC55C BLR X9
	0x033FC560 STR X0, [X19 + 0x18]
	0x033FC564 LDP X30, X19, [X31], #0x10
	0x033FC568 RET
	0x033FC56C BL 0x1C16F20
	0x033FC570 STP X1, X2, [X0 + 0x10]
	0x033FC574 RET
	0x033FC578 SUB X31, X31, 0x70
	0x033FC57C STP X29, X30, [X31 + 0x10]
	0x033FC580 STP X28, X27, [X31 + 0x20]
	0x033FC584 STP X26, X25, [X31 + 0x30]
	0x033FC588 STP X24, X23, [X31 + 0x40]
	0x033FC58C STP X22, X21, [X31 + 0x50]
	0x033FC590 STP X20, X19, [X31 + 0x60]
	0x033FC594 ADRP X22, 0xFE1000
	0x033FC598 LDRB W8, [X22 + 0x4D5]
	0x033FC59C MOV X20, X5
	0x033FC5A0 MOV W24, W4
	0x033FC5A4 MOV X19, X3
	0x033FC5A8 MOV W23, W2
	0x033FC5AC MOV X21, X1
	0x033FC5B0 MOV X27, X0
	0x033FC5B4 TBNZ X8, 0x0, 0x33FC5D8
	0x033FC5B8 ADRP X0, 0xCF7000
	0x033FC5BC LDR X0, [X0 + 0x618]
	0x033FC5C0 BL 0x1C16CF4
	0x033FC5C4 ADRP X0, 0xD26000
	0x033FC5C8 LDR X0, [X0 + 0x648]
	0x033FC5CC BL 0x1C16CF4
	0x033FC5D0 MOVZ W8, 0x1
	0x033FC5D4 STRB W8, [X22 + 0x4D5]
	0x033FC5D8 ADD X26, X21, W23, SXTW
	0x033FC5DC STR X31, [X31 + 0x8]
	0x033FC5E0 CBZ X20, 0x33FC5F0
	0x033FC5E4 LDR X25, [X20 + 0x10]
	0x033FC5E8 CBNZ X25, 0x33FC5F8
	0x033FC5EC B 0x33FC6A4
	0x033FC5F0 LDR X25, [X27 + 0x30]
	0x033FC5F4 CBZ X25, 0x33FC6A4
	0x033FC5F8 ADRP X8, 0xD26000
	0x033FC5FC LDR X8, [X8 + 0x648]
	0x033FC600 LDR X9, [X25]
	0x033FC604 LDR X8, [X8]
	0x033FC608 CMP X9, X8
	0x033FC60C B.NE 0x33FC6A4
	0x033FC610 LDP X9, X1, [X8 + 0x188]
	0x033FC614 MOV X0, X25
	0x033FC618 BLR X9
	0x033FC61C CMP W0, 0x1
	0x033FC620 B.NE 0x33FC6A4
	0x033FC624 LDR X0, [X25 + 0x10]
	0x033FC628 CBZ X0, 0x33FC7F8
	0x033FC62C MOV W1, W31
	0x033FC630 MOV X2, X31
	0x033FC634 BL 0x3222A1C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {37}
	006 Move TEMP, X3
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {54}
	010 Move TEMP, X2
	011 And TEMP, TEMP, -2147483648
	012 Compare TEMP, -2147483648
	013 JumpIfEqual {54}
	014 Move W8, [X1+24]
	015 Subtract W9, W8, W2
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Compare W3, 0
	018 JumpIfEqual {32}
	019 Move X9, [X0]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Add X10, X1, 32
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X5, [X9+712]
	025 Move X4, [X9+720]
	026 NotImplemented "Instruction CSEL not yet implemented."
	027 Add X1, X8, W2
	028 Move W2, W3
	029 Move X3, X31
	030 Move X30, [X31+32]
	031 CallNoReturn X5
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move W0, W31
	035 Move X30, [X31+32]
	036 Return X0
	037 Move X0, 0xCFD000
	038 Move X0, [X0+1320]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0xD27000
	043 Move X0, [X0+776]
	044 Call 0x1C17D08
	045 Move X20, X0
	046 Move X0, 0xD27000
	047 Move X0, [X0+736]
	048 Call 0x1C17D08
	049 Move X2, X0
	050 Move X0, X19
	051 Move X1, X20
	052 Move X3, X31
	053 Call ArgumentNullException..ctor, X0, X1, X2
	054 Move X8, 0xD20000
	055 Move X9, 0xD03000
	056 Move X8, [X8+1608]
	057 Move X9, [X9+304]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 Call 0x1C17D08
	061 Move X19, X0
	062 Move X0, 0xD00000
	063 Move X0, [X0+1888]
	064 Call 0x1C17D08
	065 Call 0x1C17F10
	066 Move X20, X0
	067 Move X0, 0xD20000
	068 Move X0, [X0+1648]
	069 Call 0x1C17D08
	070 Move X2, X0
	071 Move X0, X20
	072 Move X1, X19
	073 Move X3, X31
	074 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	075 Move X0, 0xD32000
	076 Move X0, [X0+2912]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X20
	080 Call 0x1C17DEC
	081 Move X0, 0xD00000
	082 Move X0, [X0+1888]
	083 Call 0x1C17D08
	084 Call 0x1C17F10
	085 Move X19, X0
	086 Move X0, 0xD27000
	087 Move X0, [X0+776]
	088 Call 0x1C17D08
	089 Move X20, X0
	090 Move X0, 0xD27000
	091 Move X0, [X0+224]
	092 Call 0x1C17D08
	093 Move X2, X0
	094 Move X0, X19
	095 Move X1, X20
	096 Move X3, X31
	097 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	098 Move X0, 0xD32000
	099 Move X0, [X0+2912]
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X19
	103 Call 0x1C17DEC

Method: System.Int32 GetCharCount(System.Byte* bytes, System.Int32 count)

Disassembly:
	0x033FC638 CMP W24, W23
	0x033FC63C MOV W23, W0
	0x033FC640 B.GE 0x33FC660
	0x033FC644 CMP W24, 0x1
	0x033FC648 CSET W2, LT
	0x033FC64C MOV X0, X27
	0x033FC650 MOV X1, X20
	0x033FC654 MOV X3, X31
	0x033FC658 BL 0x3245300
	0x033FC65C ADD X26, X21, W24, SXTW
	0x033FC660 CMP X26, X21
	0x033FC664 MOV X27, X19
	0x033FC668 MOV X8, X21
	0x033FC66C B.LS 0x33FC698
	0x033FC670 MOV X8, X21
	0x033FC674 MOV X27, X19
	0x033FC678 MOV X9, X8
	0x033FC67C LDRB W9, [X8], #0x1
	0x033FC680 SXTB W10, W9
	0x033FC684 CMP W10, 0x0
	0x033FC688 CSEL W9, W9, W23, GE
	0x033FC68C CMP X8, X26
	0x033FC690 STRH W9, [X27], #0x2
	0x033FC694 B.CC 0x33FC678
	0x033FC698 CBZ X20, 0x33FC7BC
	0x033FC69C SUB W8, W8, W21
	0x033FC6A0 B 0x33FC7B8
	0x033FC6A4 STR X27, [X31]
	0x033FC6A8 ADRP X8, 0xCF7000
	0x033FC6AC LDR X8, [X8 + 0x618]
	0x033FC6B0 MOVZ W1, 0x1
	0x033FC6B4 LDR X0, [X8]
	0x033FC6B8 BL 0x1C16D6C
	0x033FC6BC MOV X23, X0
	0x033FC6C0 MOV X25, X31
	0x033FC6C4 ADD X29, X19, W24, 0x1, SXTW
	0x033FC6C8 MOV X27, X19
	0x033FC6CC MOV X24, X21
	0x033FC6D0 CMP X26, X24
	0x033FC6D4 B.LS 0x33FC7EC
	0x033FC6D8 MOV X28, X24
	0x00000000 INVALID
	0x033FC6E0 ADD X24, X28, 0x1
	0x033FC6E4 TBNZ X22, 0x1F, 0x33FC708
	0x033FC6E8 CMP X29, X27
	0x033FC6EC B.LS 0x33FC78C
	0x033FC6F0 AND W8, W22, 0xFF
	0x033FC6F4 CMP X26, X24
	0x033FC6F8 STRH W8, [X27], #0x2
	0x033FC6FC MOV X28, X24
	0x033FC700 B.NE 0x33FC6DC
	0x033FC704 B 0x33FC7AC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {18}
	006 Move TEMP, X2
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {35}
	010 Move X8, [X0]
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X3, X31
	014 Move X5, [X8+712]
	015 Move X4, [X8+720]
	016 Move X30, [X31+32]
	017 CallNoReturn X5
	018 Move X0, 0xCFD000
	019 Move X0, [X0+1320]
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X19, X0
	023 Move X0, 0xD27000
	024 Move X0, [X0+776]
	025 Call 0x1C17D08
	026 Move X20, X0
	027 Move X0, 0xD27000
	028 Move X0, [X0+736]
	029 Call 0x1C17D08
	030 Move X2, X0
	031 Move X0, X19
	032 Move X1, X20
	033 Move X3, X31
	034 Call ArgumentNullException..ctor, X0, X1, X2
	035 Move X0, 0xD00000
	036 Move X0, [X0+1888]
	037 Call 0x1C17D08
	038 Call 0x1C17F10
	039 Move X19, X0
	040 Move X0, 0xD20000
	041 Move X0, [X0+1608]
	042 Call 0x1C17D08
	043 Move X20, X0
	044 Move X0, 0xD20000
	045 Move X0, [X0+1648]
	046 Call 0x1C17D08
	047 Move X2, X0
	048 Move X0, X19
	049 Move X1, X20
	050 Move X3, X31
	051 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	052 Move X0, 0xD32000
	053 Move X0, [X0+2920]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X19
	057 Call 0x1C17DEC

Method: System.Int32 GetChars(System.Byte[] bytes, System.Int32 byteIndex, System.Int32 byteCount, System.Char[] chars, System.Int32 charIndex)

Disassembly:
	0x033FC708 CBNZ X25, 0x33FC740
	0x033FC70C CBZ X20, 0x33FC71C
	0x033FC710 MOV X0, X20
	0x033FC714 BL 0x33FC534
	0x033FC718 B 0x33FC734
	0x033FC71C LDR X8, [X31]
	0x033FC720 LDR X0, [X8 + 0x30]
	0x033FC724 CBZ X0, 0x33FC7F8
	0x033FC728 LDR X8, [X0]
	0x033FC72C LDP X9, X1, [X8 + 0x178]
	0x033FC730 BLR X9
	0x033FC734 MOV X25, X0
	0x033FC738 CBZ X0, 0x33FC7F8
	0x033FC73C STP X21, X29, [X25 + 0x10]
	0x033FC740 CBZ X23, 0x33FC7F8
	0x033FC744 LDR W8, [X23 + 0x18]
	0x033FC748 CBZ W8, 0x33FC7FC
	0x033FC74C STRB W22, [X23 + 0x20]
	0x033FC750 STR X27, [X31 + 0x8]
	0x033FC754 LDR X8, [X25]
	0x033FC758 ADD X3, X31, 0x8
	0x033FC75C MOV X0, X25
	0x033FC760 MOV X1, X23
	0x033FC764 LDP X9, X4, [X8 + 0x1A8]
	0x033FC768 MOV X2, X24
	0x033FC76C BLR X9
	0x033FC770 LDR X27, [X31 + 0x8]
	0x033FC774 TBNZ X0, 0x0, 0x33FC6D0
	0x033FC778 LDR X8, [X25]
	0x033FC77C STR X31, [X25 + 0x10]
	0x033FC780 MOV X0, X25
	0x033FC784 LDP X9, X1, [X8 + 0x198]
	0x033FC788 BLR X9
	0x033FC78C LDR X0, [X31]
	0x033FC790 CMP X27, X19
	0x033FC794 CSET W2, EQ
	0x033FC798 MOV X1, X20
	0x033FC79C MOV X3, X31
	0x033FC7A0 BL 0x3245300
	0x033FC7A4 CBNZ X20, 0x33FC7B4
	0x033FC7A8 B 0x33FC7BC
	0x033FC7AC MOV X28, X26
	0x033FC7B0 CBZ X20, 0x33FC7BC
	0x033FC7B4 SUB W8, W28, W21
	0x033FC7B8 STR W8, [X20 + 0x2C]
	0x033FC7BC SUB X8, X27, X19
	0x033FC7C0 CMP X8, 0x0
	0x033FC7C4 LDP X20, X19, [X31 + 0x60]
	0x033FC7C8 LDP X22, X21, [X31 + 0x50]
	0x033FC7CC LDP X24, X23, [X31 + 0x40]
	0x033FC7D0 LDP X26, X25, [X31 + 0x30]
	0x033FC7D4 LDP X28, X27, [X31 + 0x20]
	0x033FC7D8 LDP X29, X30, [X31 + 0x10]
	0x033FC7DC CINC X8, X8, LT
	0x033FC7E0 UBFM X0, X8, 0x1, 0x3F
	0x033FC7E4 ADD X31, X31, 0x70
	0x033FC7E8 RET
	0x033FC7EC MOV X28, X24
	0x033FC7F0 CBNZ X20, 0x33FC7B4
	0x033FC7F4 B 0x33FC7BC
	0x033FC7F8 BL 0x1C16F20
	0x033FC7FC BL 0x1C16F28
	0x033FC800 LDR X8, [X0]
	0x033FC804 STR X31, [X0 + 0x10]
	0x033FC808 LDP X2, X1, [X8 + 0x198]
	0x033FC80C BR X2
	0x033FC810 STR X30, [X31 - 0x20]!
	0x033FC814 STP X20, X19, [X31 + 0x10]
	0x033FC818 TBNZ X1, 0x1F, 0x33FC884
	0x033FC81C MOV X20, X0
	0x033FC820 LDR X0, [X0 + 0x28]
	0x033FC824 CBZ X0, 0x33FC880
	0x033FC828 LDR X8, [X0]
	0x033FC82C MOV W10, W1
	0x033FC830 ADD X19, X10, 0x1
	0x033FC834 LDP X9, X8, [X8 + 0x188]
	0x033FC838 MOV X1, X8
	0x033FC83C BLR X9
	0x033FC840 CMP W0, 0x2
	0x033FC844 B.LT 0x33FC864
	0x033FC848 LDR X0, [X20 + 0x28]
	0x033FC84C CBZ X0, 0x33FC880
	0x033FC850 LDR X8, [X0]
	0x033FC854 LDP X9, X1, [X8 + 0x188]
	0x033FC858 BLR X9
	0x033FC85C SXTW X8, W0
	0x033FC860 MUL X19, X19, X8
	0x033FC864 MOVZ W8, 0x80000000
	0x033FC868 CMP X19, X8
	0x033FC86C B.GE 0x33FC8B4
	0x033FC870 MOV W0, W19
	0x033FC874 LDP X20, X19, [X31 + 0x10]
	0x033FC878 LDR X30, [X31], #0x20
	0x033FC87C RET
	0x033FC880 BL 0x1C16F20
	0x033FC884 ADRP X0, 0xCFF000
	0x033FC888 LDR X0, [X0 + 0x760]
	0x033FC88C BL 0x1C16D08
	0x033FC890 BL 0x1C16F10
	0x033FC894 MOV X19, X0
	0x033FC898 ADRP X0, 0xD26000
	0x033FC89C LDR X0, [X0 + 0x310]
	0x033FC8A0 BL 0x1C16D08
	0x033FC8A4 MOV X20, X0
	0x033FC8A8 ADRP X0, 0xD1F000
	0x033FC8AC LDR X0, [X0 + 0x670]
	0x033FC8B0 B 0x33FC8E0
	0x033FC8B4 ADRP X0, 0xCFF000
	0x033FC8B8 LDR X0, [X0 + 0x760]
	0x033FC8BC BL 0x1C16D08
	0x033FC8C0 BL 0x1C16F10
	0x033FC8C4 MOV X19, X0
	0x033FC8C8 ADRP X0, 0xD26000
	0x033FC8CC LDR X0, [X0 + 0x310]
	0x033FC8D0 BL 0x1C16D08
	0x033FC8D4 MOV X20, X0
	0x033FC8D8 ADRP X0, 0xD26000
	0x033FC8DC LDR X0, [X0 + 0x420]
	0x033FC8E0 BL 0x1C16D08
	0x033FC8E4 MOV X2, X0
	0x033FC8E8 MOV X0, X19
	0x033FC8EC MOV X1, X20
	0x033FC8F0 MOV X3, X31
	0x033FC8F4 BL 0x3311888
	0x033FC8F8 ADRP X0, 0xD31000
	0x033FC8FC LDR X0, [X0 + 0xB98]
	0x033FC900 BL 0x1C16D08
	0x033FC904 MOV X1, X0
	0x033FC908 MOV X0, X19
	0x033FC90C BL 0x1C16DEC
	0x033FC910 STR X30, [X31 - 0x20]!
	0x033FC914 STP X20, X19, [X31 + 0x10]
	0x033FC918 TBNZ X1, 0x1F, 0x33FC980
	0x033FC91C MOV X20, X0
	0x033FC920 LDR X0, [X0 + 0x30]
	0x033FC924 CBZ X0, 0x33FC97C
	0x033FC928 LDR X8, [X0]
	0x033FC92C MOV W19, W1
	0x033FC930 LDP X9, X8, [X8 + 0x188]
	0x033FC934 MOV X1, X8
	0x033FC938 BLR X9
	0x033FC93C CMP W0, 0x2
	0x033FC940 B.LT 0x33FC96C
	0x033FC944 LDR X0, [X20 + 0x30]
	0x033FC948 CBZ X0, 0x33FC97C
	0x033FC94C LDR X8, [X0]
	0x033FC950 LDP X9, X1, [X8 + 0x188]
	0x033FC954 BLR X9
	0x033FC958 SXTW X8, W0
	0x033FC95C MUL X19, X8, X19
	0x033FC960 MOVZ W8, 0x80000000
	0x033FC964 CMP X19, X8
	0x033FC968 B.GE 0x33FC9B0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0xFE2000
	011 Move W8, [X25+1232]
	012 Move W20, W5
	013 Move X23, X4
	014 Move W19, W3
	015 Move W21, W2
	016 Move X24, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xD27000
	023 Move X0, [X0+712]
	024 Call 0x1C17CF4
	025 Move X0, 0xD27000
	026 Move X0, [X0+720]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+1232], W8
	030 Compare X24, 0
	031 JumpIfEqual {106}
	032 Compare X23, 0
	033 JumpIfEqual {106}
	034 Move TEMP, X19
	035 And TEMP, TEMP, -2147483648
	036 Compare TEMP, -2147483648
	037 JumpIfEqual {127}
	038 Move TEMP, X21
	039 And TEMP, TEMP, -2147483648
	040 Compare TEMP, -2147483648
	041 JumpIfEqual {127}
	042 Move W8, [X24+24]
	043 Subtract W9, W8, W21
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move TEMP, X20
	046 And TEMP, TEMP, -2147483648
	047 Compare TEMP, -2147483648
	048 JumpIfEqual {95}
	049 Move W9, [X23+24]
	050 Subtract W25, W9, W20
	051 Compare W19, 0
	052 JumpIfEqual {84}
	053 Move X9, 0xD27000
	054 Move X9, [X9+720]
	055 Move X26, 0xD27000
	056 Move X26, [X26+712]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X1, [X9]
	059 Add X9, X24, 32
	060 Move X0, X23
	061 NotImplemented "Instruction CSEL not yet implemented."
	062 Call Span`1<Char>.op_Implicit, X0
	063 Move X2, [X26]
	064 Call MemoryMarshal.GetReference, X0
	065 Move X8, [X22]
	066 Add X1, X24, W21
	067 Add X3, X0, W20
	068 Move X0, X22
	069 Move X7, [X8+776]
	070 Move X6, [X8+784]
	071 Move W2, W19
	072 Move W4, W25
	073 Move X20, [X31+64]
	074 Move X19, [X31+72]
	075 Move X22, [X31+48]
	076 Move X21, [X31+56]
	077 Move X24, [X31+32]
	078 Move X23, [X31+40]
	079 Move X26, [X31+16]
	080 Move X25, [X31+24]
	081 Move X5, X31
	082 Move X30, [X31+80]
	083 CallNoReturn X7
	084 Move X20, [X31+64]
	085 Move X19, [X31+72]
	086 Move X22, [X31+48]
	087 Move X21, [X31+56]
	088 Move X24, [X31+32]
	089 Move X23, [X31+40]
	090 Move X26, [X31+16]
	091 Move X25, [X31+24]
	092 Move W0, W31
	093 Move X30, [X31+80]
	094 Return X0
	095 Move X0, 0xD00000
	096 Move X0, [X0+1888]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X19, X0
	100 Move X0, 0xD27000
	101 Move X0, [X0+792]
	102 Call 0x1C17D08
	103 Move X20, X0
	104 Move X0, 0xD20000
	105 Move X0, [X0+1632]
	106 Move X8, 0xD27000
	107 Move X9, 0xD27000
	108 Move X8, [X8+728]
	109 Move X9, [X9+776]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction CSEL not yet implemented."
	112 Call 0x1C17D08
	113 Move X19, X0
	114 Move X0, 0xCFD000
	115 Move X0, [X0+1320]
	116 Call 0x1C17D08
	117 Call 0x1C17F10
	118 Move X20, X0
	119 Move X0, 0xD27000
	120 Move X0, [X0+736]
	121 Call 0x1C17D08
	122 Move X2, X0
	123 Move X0, X20
	124 Move X1, X19
	125 Move X3, X31
	126 Call ArgumentNullException..ctor, X0, X1, X2
	127 Move X8, 0xD27000
	128 Move X9, 0xD27000
	129 Move X8, [X8+808]
	130 Move X9, [X9+768]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 NotImplemented "Instruction CSEL not yet implemented."
	133 Call 0x1C17D08
	134 Move X19, X0
	135 Move X0, 0xD00000
	136 Move X0, [X0+1888]
	137 Call 0x1C17D08
	138 Call 0x1C17F10
	139 Move X20, X0
	140 Move X0, 0xD20000
	141 Move X0, [X0+1648]
	142 Call 0x1C17D08
	143 Move X2, X0
	144 Move X0, X20
	145 Move X1, X19
	146 Move X3, X31
	147 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	148 Move X0, 0xD32000
	149 Move X0, [X0+2928]
	150 Call 0x1C17D08
	151 Move X1, X0
	152 Move X0, X20
	153 Call 0x1C17DEC
	154 Move X0, 0xD00000
	155 Move X0, [X0+1888]
	156 Call 0x1C17D08
	157 Call 0x1C17F10
	158 Move X19, X0
	159 Move X0, 0xD27000
	160 Move X0, [X0+776]
	161 Call 0x1C17D08
	162 Move X20, X0
	163 Move X0, 0xD27000
	164 Move X0, [X0+224]
	165 Call 0x1C17D08
	166 Move X2, X0
	167 Move X0, X19
	168 Move X1, X20
	169 Move X3, X31
	170 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	171 Move X0, 0xD32000
	172 Move X0, [X0+2928]
	173 Call 0x1C17D08
	174 Move X1, X0
	175 Move X0, X19
	176 Call 0x1C17DEC

Method: System.Int32 GetChars(System.Byte* bytes, System.Int32 byteCount, System.Char* chars, System.Int32 charCount)

Disassembly:
	0x033FC96C MOV W0, W19
	0x033FC970 LDP X20, X19, [X31 + 0x10]
	0x033FC974 LDR X30, [X31], #0x20
	0x033FC978 RET
	0x033FC97C BL 0x1C16F20
	0x033FC980 ADRP X0, 0xCFF000
	0x033FC984 LDR X0, [X0 + 0x760]
	0x033FC988 BL 0x1C16D08
	0x033FC98C BL 0x1C16F10
	0x033FC990 MOV X19, X0
	0x033FC994 ADRP X0, 0xD26000
	0x033FC998 LDR X0, [X0 + 0x328]
	0x033FC99C BL 0x1C16D08
	0x033FC9A0 MOV X20, X0
	0x033FC9A4 ADRP X0, 0xD1F000
	0x033FC9A8 LDR X0, [X0 + 0x670]
	0x033FC9AC B 0x33FC9DC
	0x033FC9B0 ADRP X0, 0xCFF000
	0x033FC9B4 LDR X0, [X0 + 0x760]
	0x033FC9B8 BL 0x1C16D08
	0x033FC9BC BL 0x1C16F10
	0x033FC9C0 MOV X19, X0
	0x033FC9C4 ADRP X0, 0xD26000
	0x033FC9C8 LDR X0, [X0 + 0x328]
	0x033FC9CC BL 0x1C16D08
	0x033FC9D0 MOV X20, X0
	0x033FC9D4 ADRP X0, 0xD26000
	0x033FC9D8 LDR X0, [X0 + 0x430]
	0x033FC9DC BL 0x1C16D08
	0x033FC9E0 MOV X2, X0
	0x033FC9E4 MOV X0, X19
	0x033FC9E8 MOV X1, X20
	0x033FC9EC MOV X3, X31
	0x033FC9F0 BL 0x3311888
	0x033FC9F4 ADRP X0, 0xD31000
	0x033FC9F8 LDR X0, [X0 + 0xBA0]
	0x033FC9FC BL 0x1C16D08
	0x033FCA00 MOV X1, X0
	0x033FCA04 MOV X0, X19
	0x033FCA08 BL 0x1C16DEC
	0x033FCA0C STP X30, X21, [X31 - 0x20]!
	0x033FCA10 STP X20, X19, [X31 + 0x10]
	0x033FCA14 ADRP X20, 0xFE1000
	0x033FCA18 ADRP X21, 0xD26000
	0x033FCA1C LDRB W8, [X20 + 0x4D6]
	0x033FCA20 LDR X21, [X21 + 0x3E8]
	0x033FCA24 MOV X19, X0
	0x033FCA28 TBNZ X8, 0x0, 0x33FCA40
	0x033FCA2C ADRP X0, 0xD26000
	0x033FCA30 LDR X0, [X0 + 0x3E8]
	0x033FCA34 BL 0x1C16CF4
	0x033FCA38 MOVZ W8, 0x1
	0x033FCA3C STRB W8, [X20 + 0x4D6]
	0x033FCA40 LDR X0, [X21]
	0x033FCA44 BL 0x1C16F10
	0x033FCA48 MOV X1, X19
	0x033FCA4C MOV X20, X0
	0x033FCA50 BL 0x33FCA64
	0x033FCA54 MOV X0, X20
	0x033FCA58 LDP X20, X19, [X31 + 0x10]
	0x033FCA5C LDP X30, X21, [X31], #0x20
	0x033FCA60 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {24}
	006 Compare X3, 0
	007 JumpIfEqual {24}
	008 Move TEMP, X2
	009 And TEMP, TEMP, -2147483648
	010 Compare TEMP, -2147483648
	011 JumpIfEqual {45}
	012 Move TEMP, X4
	013 And TEMP, TEMP, -2147483648
	014 Compare TEMP, -2147483648
	015 JumpIfEqual {45}
	016 Move X8, [X0]
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X5, X31
	020 Move X7, [X8+776]
	021 Move X6, [X8+784]
	022 Move X30, [X31+32]
	023 CallNoReturn X7
	024 Move X8, 0xD27000
	025 Move X9, 0xD27000
	026 Move X8, [X8+728]
	027 Move X9, [X9+776]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSEL not yet implemented."
	030 Call 0x1C17D08
	031 Move X19, X0
	032 Move X0, 0xCFD000
	033 Move X0, [X0+1320]
	034 Call 0x1C17D08
	035 Call 0x1C17F10
	036 Move X20, X0
	037 Move X0, 0xD27000
	038 Move X0, [X0+736]
	039 Call 0x1C17D08
	040 Move X2, X0
	041 Move X0, X20
	042 Move X1, X19
	043 Move X3, X31
	044 Call ArgumentNullException..ctor, X0, X1, X2
	045 Move X8, 0xD27000
	046 Move X9, 0xD27000
	047 Move X8, [X8+808]
	048 Move X9, [X9+784]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 Call 0x1C17D08
	052 Move X19, X0
	053 Move X0, 0xD00000
	054 Move X0, [X0+1888]
	055 Call 0x1C17D08
	056 Call 0x1C17F10
	057 Move X20, X0
	058 Move X0, 0xD20000
	059 Move X0, [X0+1648]
	060 Call 0x1C17D08
	061 Move X2, X0
	062 Move X0, X20
	063 Move X1, X19
	064 Move X3, X31
	065 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	066 Move X0, 0xD32000
	067 Move X0, [X0+2936]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X20
	071 Call 0x1C17DEC

Method: System.String GetString(System.Byte[] bytes, System.Int32 byteIndex, System.Int32 byteCount)

Disassembly:
	0x033FCA64 STR X30, [X31 - 0x20]!
	0x033FCA68 STP X20, X19, [X31 + 0x10]
	0x033FCA6C MOV X20, X1
	0x033FCA70 MOV X1, X31
	0x033FCA74 MOV X19, X0
	0x033FCA78 BL 0x33BDD8C
	0x033FCA7C STR X20, [X19 + 0x20]
	0x033FCA80 CBZ X20, 0x33FCAA4
	0x033FCA84 LDR X8, [X20 + 0x30]
	0x033FCA88 LDR X9, [X19]
	0x033FCA8C MOV X0, X19
	0x033FCA90 STR X8, [X19 + 0x10]
	0x033FCA94 LDP X2, X1, [X9 + 0x178]
	0x033FCA98 LDP X20, X19, [X31 + 0x10]
	0x033FCA9C LDR X30, [X31], #0x20
	0x033FCAA0 BR X2
	0x033FCAA4 BL 0x1C16F20
	0x033FCAA8 STP X30, X21, [X31 - 0x20]!
	0x033FCAAC STP X20, X19, [X31 + 0x10]
	0x033FCAB0 ADRP X20, 0xFE1000
	0x033FCAB4 ADRP X21, 0xD26000
	0x033FCAB8 LDRB W8, [X20 + 0x4D7]
	0x033FCABC LDR X21, [X21 + 0x3F0]
	0x033FCAC0 MOV X19, X0
	0x033FCAC4 TBNZ X8, 0x0, 0x33FCADC
	0x033FCAC8 ADRP X0, 0xD26000
	0x033FCACC LDR X0, [X0 + 0x3F0]
	0x033FCAD0 BL 0x1C16CF4
	0x033FCAD4 MOVZ W8, 0x1
	0x033FCAD8 STRB W8, [X20 + 0x4D7]
	0x033FCADC LDR X0, [X21]
	0x033FCAE0 BL 0x1C16F10
	0x033FCAE4 MOV X1, X19
	0x033FCAE8 MOV X2, X31
	0x033FCAEC MOV X20, X0
	0x033FCAF0 BL 0x322EC5C
	0x033FCAF4 MOV X0, X20
	0x033FCAF8 LDP X20, X19, [X31 + 0x10]
	0x033FCAFC LDP X30, X21, [X31], #0x20
	0x033FCB00 RET
	0x033FCB04 STP X30, X21, [X31 - 0x20]!
	0x033FCB08 STP X20, X19, [X31 + 0x10]
	0x033FCB0C ADRP X19, 0xFE1000
	0x033FCB10 ADRP X21, 0xD31000
	0x033FCB14 ADRP X20, 0xD26000
	0x033FCB18 LDRB W8, [X19 + 0x4D8]
	0x033FCB1C LDR X21, [X21 + 0xBA8]
	0x033FCB20 LDR X20, [X20 + 0xA18]
	0x033FCB24 TBNZ X8, 0x0, 0x33FCB48
	0x033FCB28 ADRP X0, 0xD31000
	0x033FCB2C LDR X0, [X0 + 0xBA8]
	0x033FCB30 BL 0x1C16CF4
	0x033FCB34 ADRP X0, 0xD26000
	0x033FCB38 LDR X0, [X0 + 0xA18]
	0x033FCB3C BL 0x1C16CF4
	0x033FCB40 MOVZ W8, 0x1
	0x033FCB44 STRB W8, [X19 + 0x4D8]
	0x033FCB48 LDR X0, [X21]
	0x033FCB4C BL 0x1C16F10
	0x033FCB50 MOV X19, X0
	0x033FCB54 BL 0x33FCB70
	0x033FCB58 LDR X8, [X20]
	0x033FCB5C LDR X8, [X8 + 0xB8]
	0x033FCB60 STR X19, [X8]
	0x033FCB64 LDP X20, X19, [X31 + 0x10]
	0x033FCB68 LDP X30, X21, [X31], #0x20
	0x033FCB6C RET
	0x033FCB70 STP X30, X21, [X31 - 0x20]!
	0x033FCB74 STP X20, X19, [X31 + 0x10]
	0x033FCB78 ADRP X20, 0xFE1000
	0x033FCB7C ADRP X21, 0xD26000
	0x033FCB80 LDRB W8, [X20 + 0x4D9]
	0x033FCB84 LDR X21, [X21 + 0xA18]
	0x033FCB88 MOV X19, X0
	0x033FCB8C TBNZ X8, 0x0, 0x33FCBA4
	0x033FCB90 ADRP X0, 0xD26000
	0x033FCB94 LDR X0, [X0 + 0xA18]
	0x033FCB98 BL 0x1C16CF4
	0x033FCB9C MOVZ W8, 0x1
	0x033FCBA0 STRB W8, [X20 + 0x4D9]
	0x033FCBA4 LDR X0, [X21]
	0x033FCBA8 LDR W8, [X0 + 0xE0]
	0x033FCBAC CBNZ W8, 0x33FCBB4
	0x033FCBB0 BL 0x1C16DFC
	0x033FCBB4 MOV X0, X19
	0x033FCBB8 LDP X20, X19, [X31 + 0x10]
	0x033FCBBC MOVZ W1, 0x4E9F
	0x033FCBC0 MOV X2, X31
	0x033FCBC4 LDP X30, X21, [X31], #0x20
	0x033FCBC8 B 0x3241B10
	0x033FCBCC MOV X1, X31
	0x033FCBD0 B 0x33BDD8C
	0x033FCBD4 LDR X0, [X0 + 0x10]
	0x033FCBD8 RET
	0x033FCBDC LDR X8, [X0 + 0x18]
	0x033FCBE0 CMP X8, 0x0
	0x033FCBE4 CSET W0, NE
	0x033FCBE8 RET
	0x033FCBEC STP X30, X21, [X31 - 0x20]!
	0x033FCBF0 STP X20, X19, [X31 + 0x10]
	0x033FCBF4 ADRP X20, 0xFE1000
	0x033FCBF8 ADRP X21, 0xCFF000
	0x033FCBFC LDRB W8, [X20 + 0x4DA]
	0x033FCC00 LDR X21, [X21 + 0xCC8]
	0x033FCC04 MOV X19, X0
	0x033FCC08 TBNZ X8, 0x0, 0x33FCC2C
	0x033FCC0C ADRP X0, 0xCFF000
	0x033FCC10 LDR X0, [X0 + 0xCC8]
	0x033FCC14 BL 0x1C16CF4
	0x033FCC18 ADRP X0, 0xD00000
	0x033FCC1C LDR X0, [X0 + 0x8D8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xFE2000
	008 Move W8, [X23+1233]
	009 Move W20, W3
	010 Move W19, W2
	011 Move X22, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xCFA000
	018 Move X0, [X0+632]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+1233], W8
	022 Compare X22, 0
	023 JumpIfEqual {64}
	024 Move TEMP, X20
	025 And TEMP, TEMP, -2147483648
	026 Compare TEMP, -2147483648
	027 JumpIfEqual {81}
	028 Move TEMP, X19
	029 And TEMP, TEMP, -2147483648
	030 Compare TEMP, -2147483648
	031 JumpIfEqual {81}
	032 Move W8, [X22+24]
	033 Subtract W9, W8, W19
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Compare W20, 0
	036 JumpIfEqual {52}
	037 Add X9, X22, 32
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 Add X0, X8, W19
	041 Move W1, W20
	042 Move X2, X21
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X3, X31
	048 Move X30, [X31+48]
	049 Move X23, [X31+56]
	050 Call String.CreateStringFromEncoding, X0, X1, X2
	051 Return X0
	052 Move X8, 0xCFA000
	053 Move X8, [X8+632]
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X8, [X8]
	059 Move X8, [X8+184]
	060 Move X0, [X8]
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Return X0
	064 Move X0, 0xCFD000
	065 Move X0, [X0+1320]
	066 Call 0x1C17D08
	067 Call 0x1C17F10
	068 Move X19, X0
	069 Move X0, 0xD27000
	070 Move X0, [X0+776]
	071 Call 0x1C17D08
	072 Move X20, X0
	073 Move X0, 0xD27000
	074 Move X0, [X0+736]
	075 Call 0x1C17D08
	076 Move X2, X0
	077 Move X0, X19
	078 Move X1, X20
	079 Move X3, X31
	080 Call ArgumentNullException..ctor, X0, X1, X2
	081 Move X8, 0xD27000
	082 Move X9, 0xD27000
	083 Move X8, [X8+808]
	084 Move X9, [X9+768]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction CSEL not yet implemented."
	087 Call 0x1C17D08
	088 Move X19, X0
	089 Move X0, 0xD00000
	090 Move X0, [X0+1888]
	091 Call 0x1C17D08
	092 Call 0x1C17F10
	093 Move X20, X0
	094 Move X0, 0xD20000
	095 Move X0, [X0+1648]
	096 Call 0x1C17D08
	097 Move X2, X0
	098 Move X0, X20
	099 Move X1, X19
	100 Move X3, X31
	101 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	102 Move X0, 0xD32000
	103 Move X0, [X0+2944]
	104 Call 0x1C17D08
	105 Move X1, X0
	106 Move X0, X20
	107 Call 0x1C17DEC
	108 Move X0, 0xD00000
	109 Move X0, [X0+1888]
	110 Call 0x1C17D08
	111 Call 0x1C17F10
	112 Move X19, X0
	113 Move X0, 0xD27000
	114 Move X0, [X0+776]
	115 Call 0x1C17D08
	116 Move X20, X0
	117 Move X0, 0xD27000
	118 Move X0, [X0+224]
	119 Call 0x1C17D08
	120 Move X2, X0
	121 Move X0, X19
	122 Move X1, X20
	123 Move X3, X31
	124 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	125 Move X0, 0xD32000
	126 Move X0, [X0+2944]
	127 Call 0x1C17D08
	128 Move X1, X0
	129 Move X0, X19
	130 Call 0x1C17DEC

Method: System.Int32 GetByteCount(System.Char* chars, System.Int32 charCount, System.Text.EncoderNLS encoder)

Disassembly:
	0x033FCC20 BL 0x1C16CF4
	0x033FCC24 MOVZ W8, 0x1
	0x033FCC28 STRB W8, [X20 + 0x4DA]
	0x033FCC2C LDR X20, [X21]
	0x033FCC30 LDR X8, [X20 + 0x38]
	0x033FCC34 CBNZ X8, 0x33FCC44
	0x033FCC38 MOV X0, X20
	0x033FCC3C BL 0x1C5C6E0
	0x033FCC40 LDR X8, [X20 + 0x38]
	0x033FCC44 LDR X0, [X8 + 0x10]
	0x033FCC48 LDRB W8, [X0 + 0x135]
	0x033FCC4C TBNZ X8, 0x0, 0x33FCC54
	0x033FCC50 BL 0x1C5C684
	0x033FCC54 LDR W8, [X0 + 0xE0]
	0x033FCC58 CBNZ W8, 0x33FCC60
	0x033FCC5C BL 0x1C16DFC
	0x033FCC60 LDR X8, [X20 + 0x38]
	0x033FCC64 ADRP X21, 0xD00000
	0x033FCC68 LDR X0, [X8 + 0x10]
	0x033FCC6C LDRB W8, [X0 + 0x135]
	0x033FCC70 LDR X21, [X21 + 0x8D8]
	0x033FCC74 TBNZ X8, 0x0, 0x33FCC7C
	0x033FCC78 BL 0x1C5C684
	0x033FCC7C LDR X8, [X0 + 0xB8]
	0x033FCC80 LDR X9, [X19]
	0x033FCC84 MOVZ W4, 0x1
	0x033FCC88 MOV X0, X19
	0x033FCC8C LDR X20, [X8]
	0x033FCC90 LDP X8, X5, [X9 + 0x198]
	0x033FCC94 MOV W2, W31
	0x033FCC98 MOV W3, W31
	0x033FCC9C MOV X1, X20
	0x033FCCA0 BLR X8
	0x033FCCA4 LDR X8, [X21]
	0x033FCCA8 MOV W1, W0
	0x033FCCAC MOV X0, X8
	0x033FCCB0 BL 0x1C16D6C
	0x033FCCB4 LDR X8, [X19]
	0x033FCCB8 MOV X4, X0
	0x033FCCBC MOVZ W6, 0x1
	0x033FCCC0 MOV X0, X19
	0x033FCCC4 LDP X9, X7, [X8 + 0x1C8]
	0x033FCCC8 MOV X1, X20
	0x033FCCCC MOV W2, W31
	0x033FCCD0 MOV W3, W31
	0x033FCCD4 MOV W5, W31
	0x033FCCD8 BLR X9
	0x033FCCDC LDR X0, [X19 + 0x18]
	0x033FCCE0 CBZ X0, 0x33FCCF8
	0x033FCCE4 LDR X8, [X0]
	0x033FCCE8 LDP X20, X19, [X31 + 0x10]
	0x033FCCEC LDP X2, X1, [X8 + 0x198]
	0x033FCCF0 LDP X30, X21, [X31], #0x20
	0x033FCCF4 BR X2
	0x033FCCF8 LDP X20, X19, [X31 + 0x10]
	0x033FCCFC LDP X30, X21, [X31], #0x20
	0x033FCD00 RET
	0x033FCD04 LDR X8, [X0]
	0x033FCD08 LDP X5, X4, [X8 + 0x188]
	0x033FCD0C BR X5
	0x033FCD10 STR X30, [X31 - 0x30]!
	0x033FCD14 STP X22, X21, [X31 + 0x10]
	0x033FCD18 STP X20, X19, [X31 + 0x20]
	0x033FCD1C ADRP X22, 0xFE1000
	0x033FCD20 LDRB W8, [X22 + 0x4DB]
	0x033FCD24 MOV W19, W2
	0x033FCD28 MOV X21, X1
	0x033FCD2C MOV X20, X0
	0x033FCD30 TBNZ X8, 0x0, 0x33FCD48
	0x033FCD34 ADRP X0, 0xCF7000
	0x033FCD38 LDR X0, [X0 + 0x618]
	0x033FCD3C BL 0x1C16CF4
	0x033FCD40 MOVZ W8, 0x1
	0x033FCD44 STRB W8, [X22 + 0x4DB]
	0x033FCD48 CBZ X21, 0x33FCDC4
	0x033FCD4C TBNZ X19, 0x1F, 0x33FCE0C
	0x033FCD50 ADRP X8, 0xCF7000
	0x033FCD54 LDR X8, [X8 + 0x618]
	0x033FCD58 MOV W1, W19
	0x033FCD5C LDR X0, [X8]
	0x033FCD60 BL 0x1C16D6C
	0x033FCD64 MOV X1, X0
	0x033FCD68 CBZ W19, 0x33FCD9C
	0x033FCD6C CBZ X1, 0x33FCE68
	0x033FCD70 LDR W9, [X1 + 0x18]
	0x033FCD74 MOV X8, X31
	0x033FCD78 MOV W10, W19
	0x033FCD7C ADD X11, X1, 0x20
	0x033FCD80 CMP X8, X9
	0x033FCD84 B.CS 0x33FCDC0
	0x033FCD88 LDRB W12, [X21, X8, LSL]
	0x033FCD8C STRB W12, [X11, X8, LSL]
	0x033FCD90 ADD X8, X8, 0x1
	0x033FCD94 CMP X10, X8
	0x033FCD98 B.NE 0x33FCD80
	0x033FCD9C LDR X8, [X20]
	0x033FCDA0 MOV X0, X20
	0x033FCDA4 MOV W3, W19
	0x033FCDA8 LDP X20, X19, [X31 + 0x20]
	0x033FCDAC LDP X5, X4, [X8 + 0x188]
	0x033FCDB0 LDP X22, X21, [X31 + 0x10]
	0x033FCDB4 MOV W2, W31
	0x033FCDB8 LDR X30, [X31], #0x30
	0x033FCDBC BR X5
	0x033FCDC0 BL 0x1C16F28
	0x033FCDC4 ADRP X0, 0xCFC000
	0x033FCDC8 LDR X0, [X0 + 0x528]
	0x033FCDCC BL 0x1C16D08
	0x033FCDD0 BL 0x1C16F10
	0x033FCDD4 MOV X19, X0
	0x033FCDD8 ADRP X0, 0xD26000
	0x033FCDDC LDR X0, [X0 + 0x308]
	0x033FCDE0 BL 0x1C16D08
	0x033FCDE4 MOV X20, X0
	0x033FCDE8 ADRP X0, 0xD26000
	0x033FCDEC LDR X0, [X0 + 0x2E0]
	0x033FCDF0 BL 0x1C16D08
	0x033FCDF4 MOV X2, X0
	0x033FCDF8 MOV X0, X19
	0x033FCDFC MOV X1, X20
	0x033FCE00 MOV X3, X31
	0x033FCE04 BL 0x3315F7C
	0x033FCE08 B 0x33FCE50
	0x033FCE0C ADRP X0, 0xCFF000
	0x033FCE10 LDR X0, [X0 + 0x760]
	0x033FCE14 BL 0x1C16D08
	0x033FCE18 BL 0x1C16F10
	0x033FCE1C MOV X19, X0
	0x033FCE20 ADRP X0, 0xD1F000
	0x033FCE24 LDR X0, [X0 + 0x648]
	0x033FCE28 BL 0x1C16D08
	0x033FCE2C MOV X20, X0
	0x033FCE30 ADRP X0, 0xD1F000
	0x033FCE34 LDR X0, [X0 + 0x670]
	0x033FCE38 BL 0x1C16D08
	0x033FCE3C MOV X2, X0
	0x033FCE40 MOV X0, X19
	0x033FCE44 MOV X1, X20
	0x033FCE48 MOV X3, X31
	0x033FCE4C BL 0x3311888
	0x033FCE50 ADRP X0, 0xD31000
	0x033FCE54 LDR X0, [X0 + 0xBB0]
	0x033FCE58 BL 0x1C16D08
	0x033FCE5C MOV X1, X0
	0x033FCE60 MOV X0, X19
	0x033FCE64 BL 0x1C16DEC
	0x033FCE68 BL 0x1C16F20
	0x033FCE6C LDR X8, [X0]
	0x033FCE70 LDP X7, X6, [X8 + 0x1B8]
	0x033FCE74 BR X7
	0x033FCE78 STP X30, X25, [X31 - 0x40]!
	0x033FCE7C STP X24, X23, [X31 + 0x10]
	0x033FCE80 STP X22, X21, [X31 + 0x20]
	0x033FCE84 STP X20, X19, [X31 + 0x30]
	0x033FCE88 ADRP X25, 0xFE1000
	0x033FCE8C LDRB W8, [X25 + 0x4DC]
	0x033FCE90 MOV W22, W5
	0x033FCE94 MOV W20, W4
	0x033FCE98 MOV X19, X3
	0x033FCE9C MOV W21, W2
	0x033FCEA0 MOV X24, X1
	0x033FCEA4 MOV X23, X0
	0x033FCEA8 TBNZ X8, 0x0, 0x33FCECC
	0x033FCEAC ADRP X0, 0xCF7000
	0x033FCEB0 LDR X0, [X0 + 0x618]
	0x033FCEB4 BL 0x1C16CF4
	0x033FCEB8 ADRP X0, 0xD00000
	0x033FCEBC LDR X0, [X0 + 0x8D8]
	0x033FCEC0 BL 0x1C16CF4
	0x033FCEC4 MOVZ W8, 0x1
	0x033FCEC8 STRB W8, [X25 + 0x4DC]
	0x033FCECC CBZ X19, 0x33FCFC8
	0x033FCED0 CBZ X24, 0x33FCFD4
	0x033FCED4 TBNZ X20, 0x1F, 0x33FD01C
	0x033FCED8 TBNZ X21, 0x1F, 0x33FD01C
	0x033FCEDC ADRP X8, 0xCF7000
	0x033FCEE0 LDR X8, [X8 + 0x618]
	0x033FCEE4 MOV W1, W21
	0x033FCEE8 LDR X0, [X8]
	0x033FCEEC BL 0x1C16D6C
	0x033FCEF0 CMP W21, 0x1
	0x033FCEF4 MOV X25, X0
	0x033FCEF8 B.LT 0x33FCF2C
	0x033FCEFC CBZ X25, 0x33FCFC4
	0x033FCF00 LDR W9, [X25 + 0x18]
	0x033FCF04 MOV X8, X31
	0x033FCF08 MOV W10, W21
	0x033FCF0C ADD X11, X25, 0x20
	0x033FCF10 CMP X8, X9

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0xFE2000
	011 Move W8, [X22+1234]
	012 Move X19, X3
	013 Move W23, W2
	014 Move X21, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xD27000
	021 Move X0, [X0+872]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+1234], W8
	025 Add X26, X21, W23
	026 Move [X31+8], X31
	027 Compare X19, 0
	028 JumpIfEqual {38}
	029 Move X8, [X19+16]
	030 Compare X8, 0
	031 JumpIfEqual {48}
	032 Move X9, 0xD27000
	033 Move X9, [X9+872]
	034 Move X10, [X8]
	035 Move X9, [X9]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSEL not yet implemented."
	038 Move X25, [X20+40]
	039 Compare X25, 0
	040 JumpIfEqual {123}
	041 Move X8, 0xD27000
	042 Move X8, [X8+872]
	043 Move X9, [X25]
	044 Move X22, X31
	045 Move X8, [X8]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W24, W31
	048 Move X25, X31
	049 Move X8, [X19+24]
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Compare X8, 0
	052 JumpIfEqual {98}
	053 Move X0, X19
	054 Call Encoder.get_FallbackBuffer, X0
	055 Compare X0, 0
	056 JumpIfEqual {180}
	057 Move X8, [X0]
	058 Move X22, X0
	059 Move X9, [X8+440]
	060 Move X1, [X8+448]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move W8, [X19+49]
	064 Compare W8, 0
	065 JumpIfNotEqual {181}
	066 Move [X22+16], X21
	067 Move [X22+24], X26
	068 Move [X22+32], X19
	069 NotImplemented "Instruction STRH not yet implemented."
	070 Move [X22+42], W31
	071 Move [X22+44], W31
	072 Compare X25, 0
	073 JumpIfEqual {101}
	074 Move X8, [X25]
	075 Move X0, X25
	076 Move X9, [X8+392]
	077 Move X1, [X8+400]
	078 NotImplemented "Instruction BLR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 NotImplemented "Instruction CINC not yet implemented."
	082 Move W0, W23
	083 Move X20, [X31+64]
	084 Move X19, [X31+72]
	085 Move X22, [X31+48]
	086 Move X21, [X31+56]
	087 Move X24, [X31+32]
	088 Move X23, [X31+40]
	089 Move X26, [X31+16]
	090 Move X25, [X31+24]
	091 Move X30, [X31+80]
	092 Return X0
	093 Move X25, X21
	094 Compare W24, 0
	095 JumpIfEqual {125}
	096 Compare X19, 0
	097 JumpIfNotEqual {104}
	098 Move X22, X31
	099 Compare X25, 0
	100 JumpIfNotEqual {74}
	101 Move X25, X21
	102 Compare W24, 0
	103 JumpIfEqual {125}
	104 Move X0, X19
	105 Call Encoder.get_FallbackBuffer, X0
	106 Compare X0, 0
	107 JumpIfEqual {180}
	108 Move [X0+16], X21
	109 Move [X0+24], X26
	110 Move [X0+32], X19
	111 NotImplemented "Instruction STRH not yet implemented."
	112 Move [X0+42], W31
	113 Move [X0+44], W31
	114 Move [X31+8], X21
	115 Move X8, [X0]
	116 Add X2, X31, 8
	117 Move W1, W24
	118 Move X22, X0
	119 Move X9, [X8+472]
	120 Move X3, [X8+480]
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move X25, [X31+8]
	123 Move X22, X31
	124 Move X25, X21
	125 Move W23, W31
	126 Compare X22, 0
	127 JumpIfEqual {140}
	128 Move X8, [X22]
	129 Move X0, X22
	130 Move X9, [X8+408]
	131 Move X1, [X8+416]
	132 NotImplemented "Instruction BLR not yet implemented."
	133 And W8, W0, 0xFFFF
	134 NotImplemented "Instruction CSET not yet implemented."
	135 Move [X22+42], W9
	136 Compare W8, 0
	137 JumpIfNotEqual {139}
	138 Move [X22+44], W31
	139 And W24, W0, 0xFFFF
	140 Move W24, W31
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Compare W24, 0
	143 JumpIfEqual {82}
	144 Compare W24, 0
	145 JumpIfNotEqual {147}
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Compare X22, 0
	149 JumpIfNotEqual {170}
	150 Compare X19, 0
	151 JumpIfEqual {154}
	152 Move X0, X19
	153 Call Encoder.get_FallbackBuffer, X0
	154 Move X0, [X20+40]
	155 Compare X0, 0
	156 JumpIfEqual {180}
	157 Move X8, [X0]
	158 Move X9, [X8+376]
	159 Move X1, [X8+384]
	160 NotImplemented "Instruction BLR not yet implemented."
	161 Move X22, X0
	162 Compare X0, 0
	163 JumpIfEqual {180}
	164 Move [X22+16], X21
	165 Move [X22+24], X26
	166 Move [X22+32], X19
	167 NotImplemented "Instruction STRH not yet implemented."
	168 Move [X22+42], W31
	169 Move [X22+44], W31
	170 Move [X31+8], X25
	171 Move X8, [X22]
	172 Add X2, X31, 8
	173 Move X0, X22
	174 Move W1, W24
	175 Move X9, [X8+472]
	176 Move X3, [X8+480]
	177 NotImplemented "Instruction BLR not yet implemented."
	178 Move X25, [X31+8]
	179 Add W23, W23, 1
	180 Call 0x1C17F20
	181 Move X8, [X20]
	182 Move X0, X20
	183 Move X9, [X8+440]
	184 Move X1, [X8+448]
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Move X20, X0
	187 Move X0, X19
	188 Call 0x19913C0
	189 Move X19, [X19+16]
	190 Move X0, X19
	191 Call 0x19913C0
	192 Move X0, X19
	193 Move X1, X31
	194 Call "il2cpp_vm_object_is_inst", X0
	195 Move X19, X0
	196 Move X0, 0xD27000
	197 Move X0, [X0+1712]
	198 Call 0x1C17D08
	199 Move X1, X20
	200 Move X2, X19
	201 Move X3, X31
	202 Call SR.Format, X0, X1, X2
	203 Move X19, X0
	204 Move X0, 0xD00000
	205 Move X0, [X0+1400]
	206 Call 0x1C17D08
	207 Call 0x1C17F10
	208 Move X1, X19
	209 Move X2, X31
	210 Move X20, X0
	211 Call ArgumentException..ctor, X0, X1
	212 Move X0, 0xD32000
	213 Move X0, [X0+2952]
	214 Call 0x1C17D08
	215 Move X1, X0
	216 Move X0, X20
	217 Call 0x1C17DEC

Method: System.Int32 GetBytes(System.Char* chars, System.Int32 charCount, System.Byte* bytes, System.Int32 byteCount, System.Text.EncoderNLS encoder)

Disassembly:
	0x033FCFAC LDP X20, X19, [X31 + 0x30]
	0x033FCFB0 LDP X22, X21, [X31 + 0x20]
	0x033FCFB4 LDP X24, X23, [X31 + 0x10]
	0x033FCFB8 LDP X30, X25, [X31], #0x40
	0x033FCFBC RET
	0x033FCFC0 BL 0x1C16F28
	0x033FCFC4 BL 0x1C16F20
	0x033FCFC8 ADRP X0, 0xD26000
	0x033FCFCC LDR X0, [X0 + 0x2D8]
	0x033FCFD0 B 0x33FCFDC
	0x033FCFD4 ADRP X0, 0xD26000
	0x033FCFD8 LDR X0, [X0 + 0x308]
	0x033FCFDC BL 0x1C16D08
	0x033FCFE0 MOV X19, X0
	0x033FCFE4 ADRP X0, 0xCFC000
	0x033FCFE8 LDR X0, [X0 + 0x528]
	0x033FCFEC BL 0x1C16D08
	0x033FCFF0 BL 0x1C16F10
	0x033FCFF4 MOV X20, X0
	0x033FCFF8 ADRP X0, 0xD26000
	0x033FCFFC LDR X0, [X0 + 0x2E0]
	0x033FD000 BL 0x1C16D08
	0x033FD004 MOV X2, X0
	0x033FD008 MOV X0, X20
	0x033FD00C MOV X1, X19
	0x033FD010 MOV X3, X31
	0x033FD014 BL 0x3315F7C
	0x033FD018 B 0x33FD070
	0x033FD01C ADRP X8, 0xD25000
	0x033FD020 ADRP X9, 0xD25000
	0x033FD024 LDR X8, [X8 + 0x310]
	0x033FD028 LDR X9, [X9 + 0x328]
	0x033FD02C CMP W21, 0x0
	0x033FD030 CSEL X0, X9, X8, LT
	0x033FD034 BL 0x1C16D08
	0x033FD038 MOV X19, X0
	0x033FD03C ADRP X0, 0xCFE000
	0x033FD040 LDR X0, [X0 + 0x760]
	0x033FD044 BL 0x1C16D08
	0x033FD048 BL 0x1C16F10
	0x033FD04C MOV X20, X0
	0x033FD050 ADRP X0, 0xD1E000
	0x033FD054 LDR X0, [X0 + 0x670]
	0x033FD058 BL 0x1C16D08
	0x033FD05C MOV X2, X0
	0x033FD060 MOV X0, X20
	0x033FD064 MOV X1, X19
	0x033FD068 MOV X3, X31
	0x033FD06C BL 0x3311888
	0x033FD070 ADRP X0, 0xD30000
	0x033FD074 LDR X0, [X0 + 0xBB8]
	0x033FD078 BL 0x1C16D08
	0x033FD07C MOV X1, X0
	0x033FD080 MOV X0, X20
	0x033FD084 BL 0x1C16DEC
	0x033FD088 STR X30, [X31 - 0x50]!
	0x033FD08C STP X26, X25, [X31 + 0x10]
	0x033FD090 STP X24, X23, [X31 + 0x20]
	0x033FD094 STP X22, X21, [X31 + 0x30]
	0x033FD098 STP X20, X19, [X31 + 0x40]
	0x033FD09C ADRP X26, 0xFE0000
	0x033FD0A0 ADRP X25, 0xD25000
	0x033FD0A4 LDRB W8, [X26 + 0x4DD]
	0x033FD0A8 LDR X25, [X25 + 0xAB0]
	0x033FD0AC MOV W20, W5
	0x033FD0B0 MOV X19, X4
	0x033FD0B4 MOV X22, X3
	0x033FD0B8 MOV X21, X2
	0x033FD0BC MOV X24, X1
	0x033FD0C0 MOV X23, X0
	0x033FD0C4 TBNZ X8, 0x0, 0x33FD100
	0x033FD0C8 ADRP X0, 0xD25000
	0x033FD0CC LDR X0, [X0 + 0xAB0]
	0x033FD0D0 BL 0x1C16CF4
	0x033FD0D4 ADRP X0, 0xD25000
	0x033FD0D8 LDR X0, [X0 + 0xAB8]
	0x033FD0DC BL 0x1C16CF4
	0x033FD0E0 ADRP X0, 0xD25000
	0x033FD0E4 LDR X0, [X0 + 0xAC0]
	0x033FD0E8 BL 0x1C16CF4
	0x033FD0EC ADRP X0, 0xD25000
	0x033FD0F0 LDR X0, [X0 + 0x588]
	0x033FD0F4 BL 0x1C16CF4
	0x033FD0F8 MOVZ W8, 0x1
	0x033FD0FC STRB W8, [X26 + 0x4DD]
	0x033FD100 LDR X0, [X25]
	0x033FD104 ADRP X25, 0xD25000
	0x033FD108 LDR X8, [X0 + 0x38]
	0x033FD10C LDR X25, [X25 + 0xAB8]
	0x033FD110 CBNZ X8, 0x33FD118
	0x033FD114 BL 0x1C5C6E0
	0x033FD118 LDR X0, [X25]
	0x033FD11C LDR X8, [X0 + 0x38]
	0x033FD120 CBNZ X8, 0x33FD128
	0x033FD124 BL 0x1C5C6E0
	0x033FD128 LDR X8, [X23]
	0x033FD12C CMP W21, 0x0
	0x033FD130 CSINC X1, X24, X31, NE
	0x033FD134 CMP W19, 0x0
	0x033FD138 LDP X7, X6, [X8 + 0x1D8]
	0x033FD13C CSINC X3, X22, X31, NE
	0x033FD140 AND W5, W20, 0x1
	0x033FD144 MOV X0, X23
	0x033FD148 MOV W2, W21
	0x033FD14C MOV W4, W19
	0x033FD150 LDP X20, X19, [X31 + 0x40]
	0x033FD154 LDP X22, X21, [X31 + 0x30]
	0x033FD158 LDP X24, X23, [X31 + 0x20]
	0x033FD15C LDP X26, X25, [X31 + 0x10]
	0x033FD160 LDR X30, [X31], #0x50
	0x033FD164 BR X7
	0x033FD168 STR X30, [X31 - 0x20]!
	0x033FD16C STP X20, X19, [X31 + 0x10]
	0x033FD170 MOV X19, X1
	0x033FD174 MOVZ W8, 0x3F
	0x033FD178 MOV X1, X31
	0x033FD17C MOV X20, X0
	0x033FD180 STRH W8, [X0 + 0x20]
	0x033FD184 BL 0x33BDD8C
	0x033FD188 STR X19, [X20 + 0x10]
	0x033FD18C LDP X20, X19, [X31 + 0x10]
	0x033FD190 LDR X30, [X31], #0x20
	0x033FD194 RET
	0x033FD198 MOV X1, X31
	0x033FD19C B 0x33BDD8C
	0x033FD1A0 STP X30, X21, [X31 - 0x20]!
	0x033FD1A4 STP X20, X19, [X31 + 0x10]
	0x033FD1A8 ADRP X20, 0xFE0000
	0x033FD1AC ADRP X21, 0xD30000
	0x033FD1B0 LDRB W8, [X20 + 0x4DE]
	0x033FD1B4 LDR X21, [X21 + 0xBC0]
	0x033FD1B8 MOV X19, X0
	0x033FD1BC TBNZ X8, 0x0, 0x33FD1D4
	0x033FD1C0 ADRP X0, 0xD30000
	0x033FD1C4 LDR X0, [X0 + 0xBC0]
	0x033FD1C8 BL 0x1C16CF4
	0x033FD1CC MOVZ W8, 0x1
	0x033FD1D0 STRB W8, [X20 + 0x4DE]
	0x033FD1D4 LDR X0, [X21]
	0x033FD1D8 BL 0x1C16F10
	0x033FD1DC MOV X1, X19
	0x033FD1E0 MOV X20, X0
	0x033FD1E4 BL 0x33FD1F8
	0x033FD1E8 MOV X0, X20
	0x033FD1EC LDP X20, X19, [X31 + 0x10]
	0x033FD1F0 LDP X30, X21, [X31], #0x20
	0x033FD1F4 RET
	0x033FD1F8 SUB X31, X31, 0x30
	0x033FD1FC STP X30, X21, [X31 + 0x10]
	0x033FD200 STP X20, X19, [X31 + 0x20]
	0x033FD204 MOV X20, X1
	0x033FD208 MOVN W8, 0x0
	0x033FD20C MOV X1, X31
	0x033FD210 MOV X21, X0
	0x033FD214 STR W8, [X0 + 0x24]
	0x033FD218 BL 0x33BDD8C
	0x033FD21C STR X20, [X21 + 0x30]
	0x033FD220 CBZ X20, 0x33FD2A4
	0x033FD224 LDR X8, [X20 + 0x18]
	0x033FD228 CBNZ X8, 0x33FD294
	0x033FD22C BL 0x33FD3F0
	0x033FD230 MOV X19, X0
	0x033FD234 STRB W31, [X31 + 0xC]
	0x033FD238 ADD X1, X31, 0xC
	0x033FD23C MOV X2, X31
	0x033FD240 BL 0x33DE64C
	0x033FD244 LDR X21, [X21 + 0x30]
	0x033FD248 CBZ X21, 0x33FD2B0
	0x033FD24C LDR X8, [X21 + 0x18]
	0x033FD250 CBZ X8, 0x33FD25C
	0x033FD254 MOV X20, X31
	0x033FD258 B 0x33FD27C
	0x033FD25C LDR X0, [X20 + 0x10]
	0x033FD260 CBZ X0, 0x33FD2B4
	0x033FD264 LDR X8, [X0]
	0x033FD268 LDR X1, [X8 + 0x3B0]
	0x033FD26C LDR X9, [X8 + 0x3A8]
	0x033FD270 BLR X9
	0x033FD274 MOV X20, X31
	0x033FD278 STR X0, [X21 + 0x18]
	0x033FD27C LDRB W8, [X31 + 0xC]
	0x033FD280 CBZ W8, 0x33FD290
	0x033FD284 MOV X0, X19
	0x033FD288 MOV X1, X31
	0x033FD28C BL 0x33E14E4
	0x033FD290 CBNZ X20, 0x33FD2A8
	0x033FD294 LDP X20, X19, [X31 + 0x20]
	0x033FD298 LDP X30, X21, [X31 + 0x10]
	0x033FD29C ADD X31, X31, 0x30
	0x033FD2A0 RET
	0x033FD2A4 BL 0x1C16F20
	0x033FD2A8 MOV X0, X20
	0x033FD2AC BL 0x1C16F18
	0x033FD2B0 BL 0x1C16F20
	0x033FD2B4 BL 0x1C16F20
	0x033FD2B8 B 0x33FD2C4
	0x033FD2BC B 0x33FD2C4
	0x033FD2C0 B 0x33FD2C4
	0x033FD2C4 MOV X21, X0
	0x033FD2C8 CMP W1, 0x1
	0x033FD2CC B.NE 0x33FD2E4
	0x033FD2D0 MOV X0, X21
	0x033FD2D4 BL 0x3EB1AD0
	0x033FD2D8 LDR X20, [X0]
	0x033FD2DC BL 0x3EB1AE0
	0x033FD2E0 B 0x33FD27C
	0x033FD2E4 MOV X20, X31
	0x033FD2E8 B 0x33FD2F0
	0x033FD2EC MOV X21, X0
	0x033FD2F0 LDRB W8, [X31 + 0xC]
	0x033FD2F4 CBZ W8, 0x33FD304
	0x033FD2F8 MOV X0, X19
	0x033FD2FC MOV X1, X31
	0x033FD300 BL 0x33E14E4
	0x033FD304 CBNZ X20, 0x33FD310
	0x033FD308 MOV X0, X21
	0x033FD30C BL 0x1D2C690
	0x033FD310 MOV X0, X20
	0x033FD314 BL 0x1C16F18
	0x033FD318 BL 0x1990590
	0x033FD31C MOVZ W0, 0x1
	0x033FD320 RET
	0x033FD324 STP X30, X21, [X31 - 0x20]!
	0x033FD328 STP X20, X19, [X31 + 0x10]
	0x033FD32C ADRP X21, 0xFE0000
	0x033FD330 LDRB W8, [X21 + 0x4DF]
	0x033FD334 MOV X19, X1
	0x033FD338 MOV X20, X0
	0x033FD33C TBNZ X8, 0x0, 0x33FD354
	0x033FD340 ADRP X0, 0xD25000
	0x033FD344 LDR X0, [X0 + 0x948]
	0x033FD348 BL 0x1C16CF4
	0x033FD34C MOVZ W8, 0x1
	0x033FD350 STRB W8, [X21 + 0x4DF]
	0x033FD354 CBZ X19, 0x33FD374
	0x033FD358 ADRP X8, 0xD25000
	0x033FD35C LDR X8, [X8 + 0x948]
	0x033FD360 LDR X9, [X19]
	0x033FD364 LDR X8, [X8]
	0x033FD368 CMP X9, X8
	0x033FD36C CSEL X21, X19, X31, EQ
	0x033FD370 B.EQ 0x33FD37C
	0x033FD374 MOV W0, W31
	0x033FD378 B 0x33FD3BC
	0x033FD37C LDR X0, [X20 + 0x10]
	0x033FD380 CBZ X0, 0x33FD3C8
	0x033FD384 LDR X8, [X0]
	0x033FD388 LDR X9, [X8 + 0x328]
	0x033FD38C LDR X1, [X8 + 0x330]
	0x033FD390 BLR X9
	0x033FD394 CBZ X21, 0x33FD3C8
	0x033FD398 MOV W19, W0
	0x033FD39C LDR X0, [X21 + 0x10]
	0x033FD3A0 CBZ X0, 0x33FD3C8
	0x033FD3A4 LDR X8, [X0]
	0x033FD3A8 LDR X9, [X8 + 0x328]
	0x033FD3AC LDR X1, [X8 + 0x330]
	0x033FD3B0 BLR X9
	0x033FD3B4 CMP W19, W0
	0x033FD3B8 CSET W0, EQ
	0x033FD3BC LDP X20, X19, [X31 + 0x10]
	0x033FD3C0 LDP X30, X21, [X31], #0x20
	0x033FD3C4 RET
	0x033FD3C8 BL 0x1C16F20
	0x033FD3CC STR X30, [X31 - 0x10]!
	0x033FD3D0 LDR X0, [X0 + 0x10]
	0x033FD3D4 CBZ X0, 0x33FD3EC
	0x033FD3D8 LDR X8, [X0]
	0x033FD3DC LDR X2, [X8 + 0x328]
	0x033FD3E0 LDR X1, [X8 + 0x330]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0xFE2000
	015 Move W8, [X23+1235]
	016 Move X19, X5
	017 Move W24, W4
	018 Move X20, X3
	019 Move W25, W2
	020 Move X21, X1
	021 Move X22, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0xD27000
	027 Move X0, [X0+872]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+1235], W8
	031 Add X28, X21, W25
	032 Move [X31+8], X31
	033 Compare X19, 0
	034 JumpIfEqual {44}
	035 Move X8, [X19+16]
	036 Compare X8, 0
	037 JumpIfEqual {54}
	038 Move X9, 0xD26000
	039 Move X9, [X9+872]
	040 Move X10, [X8]
	041 Move X9, [X9]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSEL not yet implemented."
	044 Move X27, [X22+40]
	045 Compare X27, 0
	046 JumpIfEqual {52}
	047 Move X8, 0xD26000
	048 Move X8, [X8+872]
	049 Move X9, [X27]
	050 Move X8, [X8]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X23, X31
	053 Add X25, X20, W24
	054 Move X27, X31
	055 Move X8, [X19+24]
	056 NotImplemented "Instruction LDRH not yet implemented."
	057 Compare X8, 0
	058 JumpIfEqual {81}
	059 Move X0, X19
	060 Call Encoder.get_FallbackBuffer, X0
	061 Compare X0, 0
	062 JumpIfEqual {268}
	063 Move X8, [X0]
	064 Move X23, X0
	065 Move X9, [X8+440]
	066 Move X1, [X8+448]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W8, [X19+49]
	070 Compare W8, 0
	071 JumpIfNotEqual {269}
	072 Move W8, 1
	073 Move [X23+16], X21
	074 Move [X23+24], X28
	075 Move [X23+32], X19
	076 Move [X23+42], W31
	077 NotImplemented "Instruction STRH not yet implemented."
	078 Move [X23+44], W31
	079 Compare X27, 0
	080 JumpIfNotEqual {90}
	081 Move X23, X31
	082 Compare X27, 0
	083 JumpIfNotEqual {90}
	084 Add X25, X20, W24
	085 Move X27, X21
	086 Compare W26, 0
	087 JumpIfNotEqual {109}
	088 Move W26, W31
	089 Move X23, X31
	090 Move X8, [X27]
	091 Move X0, X27
	092 Move X9, [X8+392]
	093 Move X1, [X8+400]
	094 NotImplemented "Instruction BLR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X0, [X27+16]
	097 Compare X0, 0
	098 JumpIfEqual {268}
	099 Move W1, W31
	100 Move X2, X31
	101 Call String.get_Chars, X0, X1
	102 And W8, W0, 0xFFFF
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Add X25, X20, W24
	105 Compare W26, 0
	106 JumpIfEqual {129}
	107 Compare X19, 0
	108 JumpIfEqual {268}
	109 Move X0, X19
	110 Call Encoder.get_FallbackBuffer, X0
	111 Compare X0, 0
	112 JumpIfEqual {268}
	113 Move W8, 1
	114 Move [X0+16], X21
	115 Move [X0+24], X28
	116 Move [X0+32], X19
	117 Move [X0+42], W31
	118 Move [X0+44], W31
	119 NotImplemented "Instruction STRH not yet implemented."
	120 Move [X31+8], X21
	121 Move X8, [X0]
	122 Add X2, X31, 8
	123 Move W1, W26
	124 Move X23, X0
	125 Move X9, [X8+472]
	126 Move X3, [X8+480]
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move X27, [X31+8]
	129 Move X27, X21
	130 Move W29, 1
	131 Move X26, X20
	132 Compare X23, 0
	133 JumpIfEqual {146}
	134 Move X8, [X23]
	135 Move X0, X23
	136 Move X9, [X8+408]
	137 Move X1, [X8+416]
	138 NotImplemented "Instruction BLR not yet implemented."
	139 And W8, W0, 0xFFFF
	140 NotImplemented "Instruction CSET not yet implemented."
	141 Move [X23+42], W9
	142 Compare W8, 0
	143 JumpIfNotEqual {145}
	144 Move [X23+44], W31
	145 And W24, W0, 0xFFFF
	146 Move W24, W31
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Compare W24, 0
	149 JumpIfEqual {204}
	150 Compare W24, 0
	151 JumpIfNotEqual {153}
	152 NotImplemented "Instruction LDRH not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move [X26+1], W24
	156 Compare X23, 0
	157 JumpIfNotEqual {178}
	158 Compare X19, 0
	159 JumpIfEqual {162}
	160 Move X0, X19
	161 Call Encoder.get_FallbackBuffer, X0
	162 Move X0, [X22+40]
	163 Compare X0, 0
	164 JumpIfEqual {268}
	165 Move X8, [X0]
	166 Move X9, [X8+376]
	167 Move X1, [X8+384]
	168 NotImplemented "Instruction BLR not yet implemented."
	169 Move X23, X0
	170 Compare X0, 0
	171 JumpIfEqual {268}
	172 Move [X23+16], X21
	173 Move [X23+24], X28
	174 Move [X23+32], X19
	175 NotImplemented "Instruction STRH not yet implemented."
	176 Move [X23+42], W31
	177 Move [X23+44], W31
	178 Move [X31+8], X27
	179 Move X8, [X23]
	180 Add X2, X31, 8
	181 Move X0, X23
	182 Move W1, W24
	183 Move X9, [X8+472]
	184 Move X3, [X8+480]
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Move X27, [X31+8]
	187 Compare X23, 0
	188 JumpIfEqual {197}
	189 Move W8, [X23+42]
	190 Compare W8, 0
	191 JumpIfEqual {197}
	192 Move X8, [X23]
	193 Move X0, X23
	194 Move X9, [X8+424]
	195 Move X1, [X8+432]
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Subtract X27, X27, 2
	198 NotImplemented "Instruction CMP not yet implemented."
	199 NotImplemented "Instruction CSET not yet implemented."
	200 Move X0, X22
	201 Move X1, X19
	202 Move X3, X31
	203 Call Encoding.ThrowBytesOverflow, X0, X1, X2
	204 Compare X19, 0
	205 JumpIfEqual {219}
	206 Compare X23, 0
	207 JumpIfEqual {212}
	208 Move W8, [X23+41]
	209 Compare W8, 0
	210 JumpIfNotEqual {212}
	211 NotImplemented "Instruction STRH not yet implemented."
	212 Subtract X8, X27, X21
	213 NotImplemented "Instruction CMP not yet implemented."
	214 NotImplemented "Instruction CINC not yet implemented."
	215 Move X8, X8
	216 ShiftRight X8, 1
	217 And X8, X8, 0x7FFFFFFF
	218 Move [X19+52], W8
	219 Subtract W0, W26, W20
	220 Move X20, [X31+96]
	221 Move X19, [X31+104]
	222 Move X22, [X31+80]
	223 Move X21, [X31+88]
	224 Move X24, [X31+64]
	225 Move X23, [X31+72]
	226 Move X26, [X31+48]
	227 Move X25, [X31+56]
	228 Move X28, [X31+32]
	229 Move X27, [X31+40]
	230 Move X29, [X31+16]
	231 Move X30, [X31+24]
	232 Add X31, X31, 112
	233 Return X0
	234 Move W27, W0
	235 Compare W26, 0
	236 JumpIfEqual {247}
	237 Compare W24, 0
	238 JumpIfNotEqual {244}
	239 Move W2, 1
	240 Move X0, X22
	241 Move X1, X19
	242 Move X3, X31
	243 Call Encoding.ThrowBytesOverflow, X0, X1, X2
	244 Move X26, X20
	245 Move [X26+1], W27
	246 Subtract W24, W24, 1
	247 Move X26, X20
	248 NotImplemented "Instruction CMP not yet implemented."
	249 NotImplemented "Instruction CMP not yet implemented."
	250 NotImplemented "Instruction CSET not yet implemented."
	251 Move X0, X22
	252 Move X1, X19
	253 Move X3, X31
	254 Call Encoding.ThrowBytesOverflow, X0, X1, X2
	255 Add X28, X21, W24
	256 Move X8, X21
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Move X9, X8
	259 NotImplemented "Instruction LDRH not yet implemented."
	260 NotImplemented "Instruction CMP not yet implemented."
	261 NotImplemented "Instruction CSEL not yet implemented."
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Move [X26+1], W9
	264 Compare X19, 0
	265 JumpIfEqual {219}
	266 NotImplemented "Instruction STRH not yet implemented."
	267 Subtract X8, X8, X21
	268 Call 0x1C17F20
	269 Move X8, [X22]
	270 Move X0, X22
	271 Move X9, [X8+440]
	272 Move X1, [X8+448]
	273 NotImplemented "Instruction BLR not yet implemented."
	274 Move X20, X0
	275 Move X0, X19
	276 Call 0x19913C0
	277 Move X19, [X19+16]
	278 Move X0, X19
	279 Call 0x19913C0
	280 Move X0, X19
	281 Move X1, X31
	282 Call "il2cpp_vm_object_is_inst", X0
	283 Move X19, X0
	284 Move X0, 0xD26000
	285 Move X0, [X0+1712]
	286 Call 0x1C17D08
	287 Move X1, X20
	288 Move X2, X19
	289 Move X3, X31
	290 Call SR.Format, X0, X1, X2
	291 Move X19, X0
	292 Move X0, 0xCFF000
	293 Move X0, [X0+1400]
	294 Call 0x1C17D08
	295 Call 0x1C17F10
	296 Move X1, X19
	297 Move X2, X31
	298 Move X20, X0
	299 Call ArgumentException..ctor, X0, X1
	300 Move X0, 0xD31000
	301 Move X0, [X0+2960]
	302 Call 0x1C17D08
	303 Move X1, X0
	304 Move X0, X20
	305 Call 0x1C17DEC

Method: System.Int32 GetCharCount(System.Byte* bytes, System.Int32 count, System.Text.DecoderNLS decoder)

Disassembly:
	0x033FD3E4 LDR X30, [X31], #0x10
	0x033FD3E8 BR X2
	0x033FD3EC BL 0x1C16F20
	0x033FD3F0 STR X30, [X31 - 0x20]!
	0x033FD3F4 STP X20, X19, [X31 + 0x10]
	0x033FD3F8 ADRP X19, 0xFE0000
	0x033FD3FC ADRP X20, 0xD30000
	0x033FD400 LDRB W8, [X19 + 0x4E0]
	0x033FD404 LDR X20, [X20 + 0xBC0]
	0x033FD408 TBNZ X8, 0x0, 0x33FD42C
	0x033FD40C ADRP X0, 0xD30000
	0x033FD410 LDR X0, [X0 + 0xBC0]
	0x033FD414 BL 0x1C16CF4
	0x033FD418 ADRP X0, 0xCFC000
	0x033FD41C LDR X0, [X0 + 0xCC0]
	0x033FD420 BL 0x1C16CF4
	0x033FD424 MOVZ W8, 0x1
	0x033FD428 STRB W8, [X19 + 0x4E0]
	0x033FD42C LDR X8, [X20]
	0x033FD430 LDR X8, [X8 + 0xB8]
	0x033FD434 LDR X0, [X8]
	0x033FD438 CBNZ X0, 0x33FD478
	0x033FD43C ADRP X8, 0xCFC000
	0x033FD440 LDR X8, [X8 + 0xCC0]
	0x033FD444 LDR X0, [X8]
	0x033FD448 BL 0x1C16F10
	0x033FD44C MOV X1, X31
	0x033FD450 MOV X19, X0
	0x033FD454 BL 0x33BDD8C
	0x033FD458 LDR X8, [X20]
	0x033FD45C MOV X1, X19
	0x033FD460 MOV X2, X31
	0x033FD464 LDR X0, [X8 + 0xB8]
	0x033FD468 BL 0x1C24138
	0x033FD46C LDR X8, [X20]
	0x033FD470 LDR X8, [X8 + 0xB8]
	0x033FD474 LDR X0, [X8]
	0x033FD478 LDP X20, X19, [X31 + 0x10]
	0x033FD47C LDR X30, [X31], #0x20
	0x033FD480 RET
	0x033FD484 MOV X1, X31
	0x033FD488 B 0x33BDD8C
	0x033FD48C STP X30, X19, [X31 - 0x10]!
	0x033FD490 MOV X19, X0
	0x033FD494 BL 0x33FD4CC
	0x033FD498 ANDS W31, W0, 0xFFFF
	0x033FD49C STRH W0, [X19 + 0x20]
	0x033FD4A0 B.NE 0x33FD4B4
	0x033FD4A4 LDR X8, [X19 + 0x30]
	0x033FD4A8 CBZ X8, 0x33FD4C8
	0x033FD4AC LDRH W8, [X8 + 0x20]
	0x033FD4B0 STRH W8, [X19 + 0x20]
	0x033FD4B4 MOVI V0.2S, 0x1
	0x033FD4B8 MOVZ W0, 0x1
	0x033FD4BC STUR D0, [X19 + 0x24]
	0x033FD4C0 LDP X30, X19, [X31], #0x10
	0x033FD4C4 RET
	0x033FD4C8 BL 0x1C16F20
	0x033FD4CC STR X30, [X31 - 0x10]!
	0x033FD4D0 LDR X8, [X0 + 0x30]
	0x033FD4D4 CBZ X8, 0x33FD604
	0x033FD4D8 LDR X8, [X8 + 0x18]
	0x033FD4DC CBZ X8, 0x33FD604
	0x033FD4E0 LDR X9, [X8 + 0x18]
	0x033FD4E4 CBZ W9, 0x33FD5CC
	0x033FD4E8 CBZ X1, 0x33FD604
	0x033FD4EC LDR X11, [X1 + 0x18]
	0x033FD4F0 CBZ X11, 0x33FD5CC
	0x033FD4F4 CMP W11, 0x2
	0x033FD4F8 B.GT 0x33FD5CC
	0x033FD4FC CBZ W11, 0x33FD608
	0x033FD500 LDRB W10, [X1 + 0x20]
	0x033FD504 CMP W11, 0x1
	0x033FD508 B.EQ 0x33FD518
	0x033FD50C LDRB W11, [X1 + 0x21]
	0x033FD510 BFM W11, W10, 0x18, 0x7
	0x033FD514 MOV W10, W11
	0x033FD518 LDRH W11, [X8 + 0x20]
	0x033FD51C CMP W10, W11
	0x033FD520 B.CC 0x33FD5CC
	0x033FD524 CMP W9, 0x1
	0x033FD528 B.LS 0x33FD608
	0x033FD52C ORR X11, X31, 0xFFFFFFFFFFFFFFFF
	0x033FD530 ADD X11, X11, X9, 0x20, LSL

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X23, 0xFE1000
	012 Move W8, [X23+1236]
	013 Move X20, X3
	014 Move W19, W2
	015 Move X21, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xCF7000
	022 Move X0, [X0+1560]
	023 Call 0x1C17CF4
	024 Move X0, 0xD26000
	025 Move X0, [X0+1608]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+1236], W8
	029 Compare X20, 0
	030 JumpIfEqual {34}
	031 Move X0, [X20+16]
	032 Compare X0, 0
	033 JumpIfNotEqual {37}
	034 Move X0, [X22+48]
	035 Compare X0, 0
	036 JumpIfEqual {58}
	037 Move X8, 0xD26000
	038 Move X8, [X8+1608]
	039 Move X9, [X0]
	040 Move X8, [X8]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X9, [X8+392]
	043 Move X1, [X8+400]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W0, W19
	047 Move X20, [X31+64]
	048 Move X19, [X31+72]
	049 Move X22, [X31+48]
	050 Move X21, [X31+56]
	051 Move X24, [X31+32]
	052 Move X23, [X31+40]
	053 Move X26, [X31+16]
	054 Move X25, [X31+24]
	055 Move X30, [X31+80]
	056 Move X27, [X31+88]
	057 Return X0
	058 Move X8, 0xCF7000
	059 Move X8, [X8+1560]
	060 Move W1, 1
	061 Move X0, [X8]
	062 Call 0x1C17D6C
	063 Move X23, X0
	064 Move X25, X31
	065 Add X26, X21, W19
	066 Move X24, X21
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction INVALID not yet implemented."
	069 Move TEMP, X27
	070 And TEMP, TEMP, -2147483648
	071 Compare TEMP, -2147483648
	072 JumpIfNotEqual {67}
	073 Compare X25, 0
	074 JumpIfNotEqual {91}
	075 Compare X20, 0
	076 JumpIfEqual {79}
	077 Move X0, X20
	078 Call Decoder.get_FallbackBuffer, X0
	079 Move X0, [X22+48]
	080 Compare X0, 0
	081 JumpIfEqual {106}
	082 Move X8, [X0]
	083 Move X9, [X8+376]
	084 Move X1, [X8+384]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X25, X0
	087 Compare X0, 0
	088 JumpIfEqual {106}
	089 Move [X25+16], X21
	090 Move [X25+24], X31
	091 Compare X23, 0
	092 JumpIfEqual {106}
	093 Move W8, [X23+24]
	094 Compare W8, 0
	095 JumpIfEqual {107}
	096 Move [X23+32], W27
	097 Move X8, [X25]
	098 Move X0, X25
	099 Move X1, X23
	100 Move X2, X24
	101 Move X9, [X8+440]
	102 Move X3, [X8+448]
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Add W8, W19, W0
	105 Subtract W19, W8, 1
	106 Call 0x1C17F20
	107 Call 0x1C17F28

Method: System.Int32 GetChars(System.Byte* bytes, System.Int32 byteCount, System.Char* chars, System.Int32 charCount, System.Text.DecoderNLS decoder)

Disassembly:
	0x033FD578 CSEL W12, W12, W13, HI
	0x033FD57C CSEL W11, W13, W11, HI
	0x033FD580 SUB W13, W12, W11
	0x033FD584 CMP W13, 0x6
	0x033FD588 B.GT 0x33FD558
	0x033FD58C B 0x33FD598
	0x033FD590 MOV W11, W31
	0x033FD594 MOV W12, W9
	0x033FD598 CMP W11, W12
	0x033FD59C B.GE 0x33FD5CC
	0x033FD5A0 CMP W11, W9
	0x033FD5A4 B.CS 0x33FD608
	0x033FD5A8 ADD X13, X8, W11, 0x1, SXTW
	0x033FD5AC LDRH W13, [X13 + 0x20]
	0x033FD5B0 CMP W13, W10
	0x033FD5B4 B.EQ 0x33FD5EC
	0x033FD5B8 ADD W11, W11, 0x2
	0x033FD5BC CMP W11, W12
	0x033FD5C0 MOV W0, W31
	0x033FD5C4 B.LT 0x33FD5A0
	0x033FD5C8 B 0x33FD5D0
	0x033FD5CC MOV W0, W31
	0x033FD5D0 LDR X30, [X31], #0x10
	0x033FD5D4 RET
	0x033FD5D8 ORR W10, W13, 0x1
	0x033FD5DC CMP W10, W9
	0x033FD5E0 B.CS 0x33FD608
	0x033FD5E4 ADD X8, X8, W10, 0x1, UXTW
	0x033FD5E8 B 0x33FD5FC
	0x033FD5EC ADD W10, W11, 0x1
	0x033FD5F0 CMP W10, W9
	0x033FD5F4 B.CS 0x33FD608
	0x033FD5F8 ADD X8, X8, W10, 0x1, SXTW
	0x033FD5FC LDRH W0, [X8 + 0x20]
	0x033FD600 B 0x33FD5D0
	0x033FD604 BL 0x1C16F20
	0x033FD608 BL 0x1C16F28
	0x033FD60C LDR W9, [X0 + 0x24]
	0x033FD610 SUBS W9, W9, 0x1
	0x033FD614 STR W9, [X0 + 0x24]
	0x033FD618 B.MI 0x33FD63C
	0x033FD61C MOVN W10, 0x80000000
	0x033FD620 MOV X8, X0
	0x033FD624 CMP W9, W10
	0x033FD628 B.NE 0x33FD644
	0x033FD62C MOV W0, W31
	0x033FD630 MOVN W9, 0x0
	0x033FD634 STR W9, [X8 + 0x24]
	0x033FD638 RET
	0x033FD63C MOV W0, W31
	0x033FD640 RET
	0x033FD644 LDRH W0, [X8 + 0x20]
	0x033FD648 RET
	0x033FD64C MOVN W8, 0x0
	0x033FD650 STR W8, [X0 + 0x24]
	0x033FD654 STR X31, [X0 + 0x10]
	0x033FD658 RET
	0x033FD65C MOVZ W0, 0x1
	0x033FD660 RET
	0x033FD664 MOV X1, X31
	0x033FD668 B 0x33BDD8C
	0x033FD66C STR X30, [X31 - 0x20]!
	0x033FD670 STP X20, X19, [X31 + 0x10]
	0x033FD674 ADRP X19, 0xFE0000
	0x033FD678 ADRP X20, 0xD30000
	0x033FD67C LDRB W8, [X19 + 0x4E1]
	0x033FD680 LDR X20, [X20 + 0xBC8]
	0x033FD684 TBNZ X8, 0x0, 0x33FD69C
	0x033FD688 ADRP X0, 0xD30000
	0x033FD68C LDR X0, [X0 + 0xBC8]
	0x033FD690 BL 0x1C16CF4
	0x033FD694 MOVZ W8, 0x1
	0x033FD698 STRB W8, [X19 + 0x4E1]
	0x033FD69C LDR X0, [X20]
	0x033FD6A0 BL 0x1C16F10
	0x033FD6A4 MOV X1, X31
	0x033FD6A8 MOV X19, X0
	0x033FD6AC BL 0x33BDD8C
	0x033FD6B0 MOV X0, X19
	0x033FD6B4 LDP X20, X19, [X31 + 0x10]
	0x033FD6B8 LDR X30, [X31], #0x20
	0x033FD6BC RET
	0x033FD6C0 MOV X1, X31
	0x033FD6C4 B 0x33BDD8C
	0x033FD6C8 MOV W0, W31
	0x033FD6CC RET
	0x033FD6D0 STR X30, [X31 - 0x20]!
	0x033FD6D4 STP X20, X19, [X31 + 0x10]
	0x033FD6D8 ADRP X20, 0xFE0000
	0x033FD6DC LDRB W8, [X20 + 0x4E2]
	0x033FD6E0 MOV X19, X1
	0x033FD6E4 TBNZ X8, 0x0, 0x33FD6FC
	0x033FD6E8 ADRP X0, 0xD30000
	0x033FD6EC LDR X0, [X0 + 0xBD0]
	0x033FD6F0 BL 0x1C16CF4
	0x033FD6F4 MOVZ W8, 0x1
	0x033FD6F8 STRB W8, [X20 + 0x4E2]
	0x033FD6FC CBZ X19, 0x33FD71C
	0x033FD700 ADRP X8, 0xD30000
	0x033FD704 LDR X8, [X8 + 0xBD0]
	0x033FD708 LDR X9, [X19]
	0x033FD70C LDR X8, [X8]
	0x033FD710 CMP X9, X8
	0x033FD714 CSET W0, EQ
	0x033FD718 B 0x33FD720
	0x033FD71C MOV W0, W31
	0x033FD720 LDP X20, X19, [X31 + 0x10]
	0x033FD724 LDR X30, [X31], #0x20
	0x033FD728 RET
	0x033FD72C MOVZ W0, 0x36F
	0x033FD730 RET
	0x033FD734 STR X30, [X31 - 0x10]!
	0x033FD738 BL 0x33FD73C
	0x033FD73C SUB X31, X31, 0x50
	0x033FD740 STP X30, X25, [X31 + 0x10]
	0x033FD744 STP X24, X23, [X31 + 0x20]
	0x033FD748 STP X22, X21, [X31 + 0x30]
	0x033FD74C STP X20, X19, [X31 + 0x40]
	0x033FD750 ADRP X21, 0xFE0000
	0x033FD754 LDRB W8, [X21 + 0x4E3]
	0x033FD758 MOV W19, W2
	0x033FD75C MOV X20, X1
	0x033FD760 TBNZ X8, 0x0, 0x33FD790
	0x033FD764 ADRP X0, 0xCF8000
	0x033FD768 LDR X0, [X0 + 0xC48]
	0x033FD76C BL 0x1C16CF4
	0x033FD770 ADRP X0, 0xCF6000
	0x033FD774 LDR X0, [X0 + 0x8F0]
	0x033FD778 BL 0x1C16CF4
	0x033FD77C ADRP X0, 0xD23000
	0x033FD780 LDR X0, [X0 + 0xBA8]
	0x033FD784 BL 0x1C16CF4
	0x033FD788 MOVZ W8, 0x1
	0x033FD78C STRB W8, [X21 + 0x4E3]
	0x033FD790 CBZ X20, 0x33FD7C8
	0x033FD794 ADRP X8, 0xCF6000
	0x033FD798 LDR X8, [X8 + 0x8F0]
	0x033FD79C LDR X0, [X8]
	0x033FD7A0 BL 0x1C16F10
	0x033FD7A4 LDR W8, [X20 + 0x18]
	0x033FD7A8 MOV X2, X31
	0x033FD7AC MOV X21, X0
	0x033FD7B0 ADD W1, W8, W8, 0x1, LSL
	0x033FD7B4 BL 0x3231B28
	0x033FD7B8 LDR W8, [X20 + 0x18]
	0x033FD7BC CMP W8, 0x1
	0x033FD7C0 B.LT 0x33FD88C
	0x033FD7C4 CBNZ X21, 0x33FD7CC
	0x033FD7C8 BL 0x1C16F20
	0x033FD7CC ADRP X23, 0xCF8000
	0x033FD7D0 ADRP X24, 0xD23000
	0x033FD7D4 LDR X23, [X23 + 0xC48]
	0x033FD7D8 LDR X24, [X24 + 0xBA8]
	0x033FD7DC MOV X25, X31
	0x033FD7E0 ADD X22, X20, 0x20
	0x033FD7E4 MOVZ W1, 0x5B
	0x033FD7E8 MOV X0, X21
	0x033FD7EC MOV X2, X31
	0x033FD7F0 BL 0x3233D30
	0x033FD7F4 LDR X0, [X23]
	0x033FD7F8 LDR W8, [X0 + 0xE0]
	0x033FD7FC CBNZ W8, 0x33FD804

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0xFE1000
	015 Move W8, [X22+1237]
	016 Move X20, X5
	017 Move W24, W4
	018 Move X19, X3
	019 Move W23, W2
	020 Move X21, X1
	021 Move X27, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0xCF7000
	027 Move X0, [X0+1560]
	028 Call 0x1C17CF4
	029 Move X0, 0xD26000
	030 Move X0, [X0+1608]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+1237], W8
	034 Add X26, X21, W23
	035 Move [X31+8], X31
	036 Compare X20, 0
	037 JumpIfEqual {41}
	038 Move X25, [X20+16]
	039 Compare X25, 0
	040 JumpIfNotEqual {44}
	041 Move X25, [X27+48]
	042 Compare X25, 0
	043 JumpIfEqual {84}
	044 Move X8, 0xD26000
	045 Move X8, [X8+1608]
	046 Move X9, [X25]
	047 Move X8, [X8]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X9, [X8+392]
	050 Move X1, [X8+400]
	051 Move X0, X25
	052 NotImplemented "Instruction BLR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X0, [X25+16]
	055 Compare X0, 0
	056 JumpIfEqual {189}
	057 Move W1, W31
	058 Move X2, X31
	059 Call String.get_Chars, X0, X1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W23, W0
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction CSET not yet implemented."
	064 Move X0, X27
	065 Move X1, X20
	066 Move X3, X31
	067 Call Encoding.ThrowCharsOverflow, X0, X1, X2
	068 Add X26, X21, W24
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X27, X19
	071 Move X8, X21
	072 Move X8, X21
	073 Move X27, X19
	074 Move X9, X8
	075 Move W9, [X8+1]
	076 NotImplemented "Instruction SXTB not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 NotImplemented "Instruction CSEL not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction STRH not yet implemented."
	081 Compare X20, 0
	082 JumpIfEqual {166}
	083 Subtract W8, W8, W21
	084 Move [X31], X27
	085 Move X8, 0xCF7000
	086 Move X8, [X8+1560]
	087 Move W1, 1
	088 Move X0, [X8]
	089 Call 0x1C17D6C
	090 Move X23, X0
	091 Move X25, X31
	092 Add X29, X19, W24
	093 Move X27, X19
	094 Move X24, X21
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X28, X24
	097 NotImplemented "Instruction INVALID not yet implemented."
	098 Add X24, X28, 1
	099 Move TEMP, X22
	100 And TEMP, TEMP, -2147483648
	101 Compare TEMP, -2147483648
	102 JumpIfEqual {108}
	103 NotImplemented "Instruction CMP not yet implemented."
	104 And W8, W22, 255
	105 NotImplemented "Instruction CMP not yet implemented."
	106 NotImplemented "Instruction STRH not yet implemented."
	107 Move X28, X24
	108 Compare X25, 0
	109 JumpIfNotEqual {127}
	110 Compare X20, 0
	111 JumpIfEqual {114}
	112 Move X0, X20
	113 Call Decoder.get_FallbackBuffer, X0
	114 Move X8, [X31]
	115 Move X0, [X8+48]
	116 Compare X0, 0
	117 JumpIfEqual {189}
	118 Move X8, [X0]
	119 Move X9, [X8+376]
	120 Move X1, [X8+384]
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move X25, X0
	123 Compare X0, 0
	124 JumpIfEqual {189}
	125 Move [X25+16], X21
	126 Move [X25+24], X29
	127 Compare X23, 0
	128 JumpIfEqual {189}
	129 Move W8, [X23+24]
	130 Compare W8, 0
	131 JumpIfEqual {190}
	132 Move [X23+32], W22
	133 Move [X31+8], X27
	134 Move X8, [X25]
	135 Add X3, X31, 8
	136 Move X0, X25
	137 Move X1, X23
	138 Move X9, [X8+424]
	139 Move X4, [X8+432]
	140 Move X2, X24
	141 NotImplemented "Instruction BLR not yet implemented."
	142 Move X27, [X31+8]
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfEqual {95}
	147 Move X8, [X25]
	148 Move [X25+16], X31
	149 Move X0, X25
	150 Move X9, [X8+408]
	151 Move X1, [X8+416]
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Move X0, [X31]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 NotImplemented "Instruction CSET not yet implemented."
	156 Move X1, X20
	157 Move X3, X31
	158 Call Encoding.ThrowCharsOverflow, X0, X1, X2
	159 Compare X20, 0
	160 JumpIfNotEqual {164}
	161 Move X28, X26
	162 Compare X20, 0
	163 JumpIfEqual {166}
	164 Subtract W8, W28, W21
	165 Move [X20+44], W8
	166 Subtract X8, X27, X19
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X20, [X31+96]
	169 Move X19, [X31+104]
	170 Move X22, [X31+80]
	171 Move X21, [X31+88]
	172 Move X24, [X31+64]
	173 Move X23, [X31+72]
	174 Move X26, [X31+48]
	175 Move X25, [X31+56]
	176 Move X28, [X31+32]
	177 Move X27, [X31+40]
	178 Move X29, [X31+16]
	179 Move X30, [X31+24]
	180 NotImplemented "Instruction CINC not yet implemented."
	181 Move X0, X8
	182 ShiftRight X0, 1
	183 And X0, X0, 0x7FFFFFFF
	184 Add X31, X31, 112
	185 Return X0
	186 Move X28, X24
	187 Compare X20, 0
	188 JumpIfNotEqual {164}
	189 Call 0x1C17F20
	190 Call 0x1C17F28

Method: System.Int32 GetMaxByteCount(System.Int32 charCount)

Disassembly:
	0x033FD810 CMP X25, X8
	0x033FD814 B.CS 0x33FD904
	0x033FD818 LDR X1, [X24]
	0x033FD81C MOV X2, X0
	0x033FD820 ADD X0, X22, X25
	0x033FD824 MOV X3, X31
	0x033FD828 BL 0x3319D9C
	0x033FD82C MOV X1, X0
	0x033FD830 MOV X0, X21
	0x033FD834 MOV X2, X31
	0x033FD838 BL 0x32333E0
	0x033FD83C MOVZ W1, 0x5D
	0x033FD840 MOV X0, X21
	0x033FD844 MOV X2, X31
	0x033FD848 BL 0x3233D30
	0x033FD84C CMP X25, 0x12
	0x033FD850 ADD X8, X25, 0x1
	0x033FD854 B.HI 0x33FD868
	0x033FD858 LDRSW X9, [X20 + 0x18]
	0x033FD85C MOV X25, X8
	0x033FD860 CMP X8, X9
	0x033FD864 B.LT 0x33FD7E4
	0x033FD868 CMP W8, 0x14
	0x033FD86C B.NE 0x33FD88C
	0x033FD870 ADRP X0, 0xD30000
	0x033FD874 LDR X0, [X0 + 0xBD8]
	0x033FD878 BL 0x1C16D08
	0x033FD87C MOV X1, X0
	0x033FD880 MOV X0, X21
	0x033FD884 MOV X2, X31
	0x033FD888 BL 0x32333E0
	0x033FD88C STR W19, [X31 + 0xC]
	0x033FD890 ADRP X0, 0xCF6000
	0x033FD894 LDR X0, [X0 + 0x758]
	0x033FD898 BL 0x1C16D08
	0x033FD89C ADD X1, X31, 0xC
	0x033FD8A0 BL 0x1C16E04
	0x033FD8A4 MOV X22, X0
	0x033FD8A8 ADRP X0, 0xD30000
	0x033FD8AC LDR X0, [X0 + 0xBE0]
	0x033FD8B0 BL 0x1C16D08
	0x033FD8B4 MOV X1, X21
	0x033FD8B8 MOV X2, X22
	0x033FD8BC MOV X3, X31
	0x033FD8C0 BL 0x320A264
	0x033FD8C4 MOV X21, X0
	0x033FD8C8 ADRP X0, 0xD30000
	0x033FD8CC LDR X0, [X0 + 0xBE8]
	0x033FD8D0 BL 0x1C16D08
	0x033FD8D4 BL 0x1C16F10
	0x033FD8D8 MOV X1, X21
	0x033FD8DC MOV X2, X20
	0x033FD8E0 MOV W3, W19
	0x033FD8E4 MOV X22, X0
	0x033FD8E8 BL 0x33FD910
	0x033FD8EC ADRP X0, 0xD30000
	0x033FD8F0 LDR X0, [X0 + 0xBF0]
	0x033FD8F4 BL 0x1C16D08
	0x033FD8F8 MOV X1, X0
	0x033FD8FC MOV X0, X22
	0x033FD900 BL 0x1C16DEC
	0x033FD904 BL 0x1C16F28
	0x033FD908 MOV W0, W31
	0x033FD90C RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move TEMP, X1
	005 And TEMP, TEMP, -2147483648
	006 Compare TEMP, -2147483648
	007 JumpIfEqual {37}
	008 Move X20, X0
	009 Move X0, [X0+40]
	010 Compare X0, 0
	011 JumpIfEqual {36}
	012 Move X8, [X0]
	013 Move W10, W1
	014 Add X19, X10, 1
	015 Move X9, [X8+392]
	016 Move X8, [X8+400]
	017 Move X1, X8
	018 NotImplemented "Instruction BLR not yet implemented."
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X0, [X20+40]
	021 Compare X0, 0
	022 JumpIfEqual {36}
	023 Move X8, [X0]
	024 Move X9, [X8+392]
	025 Move X1, [X8+400]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X8, W0
	028 Multiply X19, X19, X8
	029 Move W8, 0x80000000
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W0, W19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0
	036 Call 0x1C17F20
	037 Move X0, 0xCFF000
	038 Move X0, [X0+1888]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0xD26000
	043 Move X0, [X0+784]
	044 Call 0x1C17D08
	045 Move X20, X0
	046 Move X0, 0xD1F000
	047 Move X0, [X0+1648]
	048 Move X0, 0xCFF000
	049 Move X0, [X0+1888]
	050 Call 0x1C17D08
	051 Call 0x1C17F10
	052 Move X19, X0
	053 Move X0, 0xD26000
	054 Move X0, [X0+784]
	055 Call 0x1C17D08
	056 Move X20, X0
	057 Move X0, 0xD26000
	058 Move X0, [X0+1056]
	059 Call 0x1C17D08
	060 Move X2, X0
	061 Move X0, X19
	062 Move X1, X20
	063 Move X3, X31
	064 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	065 Move X0, 0xD31000
	066 Move X0, [X0+2968]
	067 Call 0x1C17D08
	068 Move X1, X0
	069 Move X0, X19
	070 Call 0x1C17DEC

Method: System.Int32 GetMaxCharCount(System.Int32 byteCount)

Disassembly:
	0x033FD910 STP X30, X21, [X31 - 0x20]!
	0x033FD914 STP X20, X19, [X31 + 0x10]
	0x033FD918 MOV X20, X2
	0x033FD91C MOV X2, X31
	0x033FD920 MOV W19, W3
	0x033FD924 MOV X21, X0
	0x033FD928 BL 0x3314A68
	0x033FD92C STR X20, [X21 + 0x98]
	0x033FD930 STR W19, [X21 + 0xA0]
	0x033FD934 LDP X20, X19, [X31 + 0x10]
	0x033FD938 LDP X30, X21, [X31], #0x20
	0x033FD93C RET
	0x033FD940 STP X30, X21, [X31 - 0x20]!
	0x033FD944 STP X20, X19, [X31 + 0x10]
	0x033FD948 ADRP X20, 0xFE0000
	0x033FD94C ADRP X21, 0xD2A000
	0x033FD950 LDRB W8, [X20 + 0x4E4]
	0x033FD954 LDR X21, [X21 + 0xF58]
	0x033FD958 MOV X19, X0
	0x033FD95C TBNZ X8, 0x0, 0x33FD974
	0x033FD960 ADRP X0, 0xD2A000
	0x033FD964 LDR X0, [X0 + 0xF58]
	0x033FD968 BL 0x1C16CF4
	0x033FD96C MOVZ W8, 0x1
	0x033FD970 STRB W8, [X20 + 0x4E4]
	0x033FD974 LDR X1, [X21]
	0x033FD978 MOV X0, X19
	0x033FD97C MOV X2, X31
	0x033FD980 BL 0x3314A68
	0x033FD984 MOVZ W8, 0x57
	0x033FD988 MOVK W8, 0x80070000
	0x033FD98C STR W8, [X19 + 0x60]
	0x033FD990 LDP X20, X19, [X31 + 0x10]
	0x033FD994 LDP X30, X21, [X31], #0x20
	0x033FD998 RET
	0x033FD99C MOV X4, X31
	0x033FD9A0 B 0x3315D1C
	0x033FD9A4 STP X30, X21, [X31 - 0x20]!
	0x033FD9A8 STP X20, X19, [X31 + 0x10]
	0x033FD9AC ADRP X20, 0xFE0000
	0x033FD9B0 ADRP X21, 0xD24000
	0x033FD9B4 LDRB W8, [X20 + 0x4EC]
	0x033FD9B8 LDR X21, [X21 + 0x990]
	0x033FD9BC MOV X19, X0
	0x033FD9C0 TBNZ X8, 0x0, 0x33FD9D8
	0x033FD9C4 ADRP X0, 0xD24000
	0x033FD9C8 LDR X0, [X0 + 0x990]
	0x033FD9CC BL 0x1C16CF4
	0x033FD9D0 MOVZ W8, 0x1
	0x033FD9D4 STRB W8, [X20 + 0x4EC]
	0x033FD9D8 LDR X1, [X21]
	0x033FD9DC MOV X0, X19
	0x033FD9E0 LDP X20, X19, [X31 + 0x10]
	0x033FD9E4 LDP X30, X21, [X31], #0x20
	0x033FD9E8 B 0x33FE644
	0x033FD9EC STR X30, [X31 - 0x20]!
	0x033FD9F0 STP X20, X19, [X31 + 0x10]
	0x033FD9F4 ADRP X19, 0xFE0000
	0x033FD9F8 ADRP X20, 0xD25000
	0x033FD9FC LDRB W8, [X19 + 0x4E6]
	0x033FDA00 LDR X20, [X20 + 0x958]
	0x033FDA04 TBNZ X8, 0x0, 0x33FDA28
	0x033FDA08 ADRP X0, 0xD30000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move TEMP, X1
	005 And TEMP, TEMP, -2147483648
	006 Compare TEMP, -2147483648
	007 JumpIfEqual {36}
	008 Move X20, X0
	009 Move X0, [X0+48]
	010 Compare X0, 0
	011 JumpIfEqual {35}
	012 Move X8, [X0]
	013 Move W19, W1
	014 Move X9, [X8+392]
	015 Move X8, [X8+400]
	016 Move X1, X8
	017 NotImplemented "Instruction BLR not yet implemented."
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X0, [X20+48]
	020 Compare X0, 0
	021 JumpIfEqual {35}
	022 Move X8, [X0]
	023 Move X9, [X8+392]
	024 Move X1, [X8+400]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move X8, W0
	027 Multiply X19, X8, X19
	028 Move W8, 0x80000000
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W0, W19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0
	035 Call 0x1C17F20
	036 Move X0, 0xCFF000
	037 Move X0, [X0+1888]
	038 Call 0x1C17D08
	039 Call 0x1C17F10
	040 Move X19, X0
	041 Move X0, 0xD26000
	042 Move X0, [X0+808]
	043 Call 0x1C17D08
	044 Move X20, X0
	045 Move X0, 0xD1F000
	046 Move X0, [X0+1648]
	047 Move X0, 0xCFF000
	048 Move X0, [X0+1888]
	049 Call 0x1C17D08
	050 Call 0x1C17F10
	051 Move X19, X0
	052 Move X0, 0xD26000
	053 Move X0, [X0+808]
	054 Call 0x1C17D08
	055 Move X20, X0
	056 Move X0, 0xD26000
	057 Move X0, [X0+1072]
	058 Call 0x1C17D08
	059 Move X2, X0
	060 Move X0, X19
	061 Move X1, X20
	062 Move X3, X31
	063 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	064 Move X0, 0xD31000
	065 Move X0, [X0+2976]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X19
	069 Call 0x1C17DEC

Method: System.Text.Decoder GetDecoder()

Disassembly:
	0x033FDA0C LDR X0, [X0 + 0xBD0]
	0x033FDA10 BL 0x1C16CF4
	0x033FDA14 ADRP X0, 0xD25000
	0x033FDA18 LDR X0, [X0 + 0x958]
	0x033FDA1C BL 0x1C16CF4
	0x033FDA20 MOVZ W8, 0x1
	0x033FDA24 STRB W8, [X19 + 0x4E6]
	0x033FDA28 LDR X8, [X20]
	0x033FDA2C LDR X8, [X8 + 0xB8]
	0x033FDA30 LDR X0, [X8 + 0x8]
	0x033FDA34 CBNZ X0, 0x33FDA7C
	0x033FDA38 ADRP X8, 0xD30000
	0x033FDA3C LDR X8, [X8 + 0xBD0]
	0x033FDA40 LDR X0, [X8]
	0x033FDA44 BL 0x1C16F10
	0x033FDA48 MOV X1, X31
	0x033FDA4C MOV X19, X0
	0x033FDA50 BL 0x33BDD8C
	0x033FDA54 LDR X8, [X20]
	0x033FDA58 MOV X1, X19
	0x033FDA5C MOV X2, X31
	0x033FDA60 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xFE1000
	006 Move X21, 0xD26000
	007 Move W8, [X20+1238]
	008 Move X21, [X21+1000]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD26000
	015 Move X0, [X0+1000]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1238], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call DecoderNLS..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Text.Encoder GetEncoder()

Disassembly:
	0x033FDAA8 LDP X30, X19, [X31], #0x10
	0x033FDAAC RET
	0x033FDAB0 STR X30, [X31 - 0x40]!
	0x033FDAB4 STP X24, X23, [X31 + 0x10]
	0x033FDAB8 STP X22, X21, [X31 + 0x20]
	0x033FDABC STP X20, X19, [X31 + 0x30]
	0x033FDAC0 ADRP X23, 0xFE0000
	0x033FDAC4 LDRB W8, [X23 + 0x4E7]
	0x033FDAC8 MOV X19, X3
	0x033FDACC MOV X22, X2
	0x033FDAD0 MOV X21, X1
	0x033FDAD4 MOV X20, X0
	0x033FDAD8 TBNZ X8, 0x0, 0x33FDAF0
	0x033FDADC ADRP X0, 0xCF8000
	0x033FDAE0 LDR X0, [X0 + 0x170]
	0x033FDAE4 BL 0x1C16CF4
	0x033FDAE8 MOVZ W8, 0x1
	0x033FDAEC STRB W8, [X23 + 0x4E7]
	0x033FDAF0 CBZ X21, 0x33FDC38
	0x033FDAF4 LDR X8, [X20]
	0x033FDAF8 LDR W9, [X20 + 0x10]
	0x033FDAFC LDR W10, [X21 + 0x18]
	0x033FDB00 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xFE1000
	006 Move X21, 0xD26000
	007 Move W8, [X20+1239]
	008 Move X21, [X21+1008]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD26000
	015 Move X0, [X0+1008]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1239], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X2, X31
	023 Move X20, X0
	024 Call EncoderNLS..ctor, X0, X1
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.Void .cctor()

Disassembly:
	0x033FDB04 LDP X11, X3, [X8 + 0x178]
	0x033FDB08 SUB W8, W22, W9
	0x033FDB0C SUB W2, W8, W10
	0x033FDB10 MOV X1, X21
	0x033FDB14 BLR X11
	0x033FDB18 TBZ X0, 0x0, 0x33FDBD0
	0x033FDB1C LDR X8, [X20]
	0x033FDB20 LDR X22, [X19]
	0x033FDB24 MOV X0, X20
	0x033FDB28 LDP X9, X1, [X8 + 0x188]
	0x033FDB2C BLR X9
	0x033FDB30 ANDS W31, W0, 0xFFFF
	0x033FDB34 B.EQ 0x33FDBCC
	0x033FDB38 ADRP X23, 0xCF8000
	0x033FDB3C LDR X23, [X23 + 0x170]
	0x033FDB40 MOV W21, W0
	0x033FDB44 MOV W24, W31
	0x033FDB48 LDR X0, [X23]
	0x033FDB4C LDR W8, [X0 + 0xE0]
	0x033FDB50 CBNZ W8, 0x33FDB58
	0x033FDB54 BL 0x1C16DFC
	0x033FDB58 MOV W0, W21
	0x033FDB5C MOV X1, X31
	0x033FDB60 BL 0x331BBA4
	0x033FDB64 TBZ X0, 0x0, 0x33FDB9C
	0x033FDB68 LDR X0, [X23]
	0x033FDB6C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xFE1000
	006 Move X21, 0xD31000
	007 Move X20, 0xD26000
	008 Move W8, [X19+1240]
	009 Move X21, [X21+2984]
	010 Move X20, [X20+2584]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xD31000
	016 Move X0, [X0+2984]
	017 Call 0x1C17CF4
	018 Move X0, 0xD26000
	019 Move X0, [X0+2584]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+1240], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X19, X0
	026 Call ASCIIEncodingSealed..ctor, X0
	027 Move X8, [X20]
	028 Move X8, [X8+184]
	029 Move [X8], X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 

