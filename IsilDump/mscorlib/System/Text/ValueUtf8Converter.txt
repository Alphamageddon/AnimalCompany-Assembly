Type: System.Text.ValueUtf8Converter

Method: System.Void .ctor(System.Span`1<System.Byte> initialBuffer)

Disassembly:
	0x0324274C MOVZ W22, 0x8
	0x03242750 LDRB W8, [X31 + 0x14]
	0x03242754 CBZ W8, 0x3242764

ISIL:
	001 Move [X0], X31
	002 Move [X0+8], X1
	003 Move [X0+16], X2
	004 Return 

Method: System.Span`1<System.Byte> ConvertAndTerminateString(System.ReadOnlySpan`1<System.Char> value)

Disassembly:
	0x03242758 MOV X0, X19
	0x0324275C MOV X1, X31
	0x03242760 BL 0x33E14E4
	0x03242764 CBNZ X20, 0x3242898
	0x03242768 ORR W8, W22, 0x8
	0x0324276C CMP W8, 0x8
	0x03242770 B.NE 0x3242778
	0x03242774 LDR X21, [X31 + 0x18]
	0x03242778 MOV X0, X21
	0x0324277C LDP X20, X19, [X31 + 0x40]
	0x03242780 LDP X22, X21, [X31 + 0x30]
	0x03242784 LDP X30, X23, [X31 + 0x20]
	0x03242788 ADD X31, X31, 0x50
	0x0324278C RET
	0x03242790 ADRP X0, 0xEB1000
	0x03242794 LDR X0, [X0 + 0x9D0]
	0x03242798 BL 0x1C16D08
	0x0324279C MOVZ W1, 0x2
	0x032427A0 BL 0x1C16D6C
	0x032427A4 STR W31, [X31 + 0x10]
	0x032427A8 ADRP X20, 0xEB1000
	0x032427AC LDR X20, [X20 + 0x758]
	0x032427B0 MOV X19, X0
	0x032427B4 MOV X0, X20
	0x032427B8 BL 0x1C16D08
	0x032427BC ADD X1, X31, 0x10
	0x032427C0 BL 0x1C16E04
	0x032427C4 MOV X21, X0
	0x032427C8 MOV X0, X19
	0x032427CC BL 0x19903C0
	0x032427D0 MOV X0, X19
	0x032427D4 MOV X1, X21
	0x032427D8 BL 0x19980B4
	0x032427DC MOV X0, X19
	0x032427E0 MOV X1, X31
	0x032427E4 MOV X2, X21
	0x032427E8 BL 0x1993444
	0x032427EC MOVZ W8, 0xFFFF
	0x032427F0 MOV X0, X20
	0x032427F4 STR W8, [X31 + 0xC]
	0x032427F8 BL 0x1C16D08
	0x032427FC ADD X1, X31, 0xC
	0x03242800 BL 0x1C16E04
	0x03242804 MOV X20, X0
	0x03242808 MOV X0, X19
	0x0324280C BL 0x19903C0
	0x03242810 MOV X0, X19
	0x03242814 MOV X1, X20
	0x03242818 BL 0x19980B4
	0x0324281C MOVZ W1, 0x1
	0x03242820 MOV X0, X19
	0x03242824 MOV X2, X20
	0x03242828 BL 0x1993444
	0x0324282C ADRP X0, 0xEE0000
	0x03242830 LDR X0, [X0 + 0x370]
	0x03242834 BL 0x1C16D08
	0x03242838 MOV X1, X19
	0x0324283C MOV X2, X31
	0x03242840 BL 0x33BFB40
	0x03242844 MOV X19, X0
	0x03242848 ADRP X0, 0xEB9000
	0x0324284C LDR X0, [X0 + 0x760]
	0x03242850 BL 0x1C16D08
	0x03242854 BL 0x1C16F10
	0x03242858 MOV X20, X0
	0x0324285C ADRP X0, 0xEE0000
	0x03242860 LDR X0, [X0 + 0x9F0]
	0x03242864 BL 0x1C16D08
	0x03242868 MOV X1, X0
	0x0324286C MOV X0, X20
	0x03242870 MOV X2, X19
	0x03242874 MOV X3, X31
	0x03242878 BL 0x3311888
	0x0324287C ADRP X0, 0xEE0000
	0x03242880 LDR X0, [X0 + 0x9F8]
	0x03242884 BL 0x1C16D08
	0x03242888 MOV X1, X0
	0x0324288C MOV X0, X20
	0x03242890 BL 0x1C16DEC
	0x03242894 BL 0x1C16F20
	0x03242898 MOV X0, X20
	0x0324289C BL 0x1C16F18
	0x032428A0 BL 0x1C16F20
	0x032428A4 BL 0x1C16F20
	0x032428A8 ADRP X0, 0xEB1000
	0x032428AC LDR X0, [X0 + 0x9D0]
	0x032428B0 BL 0x1C16D08
	0x032428B4 MOVZ W1, 0x1
	0x032428B8 BL 0x1C16D6C
	0x032428BC MOV X21, X0
	0x032428C0 STR W20, [X31 + 0x10]
	0x032428C4 ADRP X0, 0xEB1000
	0x032428C8 LDR X0, [X0 + 0x758]
	0x032428CC BL 0x1C16D08
	0x032428D0 ADD X1, X31, 0x10
	0x032428D4 BL 0x1C16E04
	0x032428D8 CBNZ X21, 0x32429A0
	0x032428DC BL 0x1C16F20
	0x032428E0 ADRP X0, 0xEB1000
	0x032428E4 LDR X0, [X0 + 0x9D0]
	0x032428E8 BL 0x1C16D08
	0x032428EC MOVZ W1, 0x1
	0x032428F0 BL 0x1C16D6C
	0x032428F4 MOV X21, X0
	0x032428F8 STR W20, [X31 + 0x10]
	0x032428FC ADRP X0, 0xEB1000
	0x03242900 LDR X0, [X0 + 0x758]
	0x03242904 BL 0x1C16D08
	0x03242908 ADD X1, X31, 0x10
	0x0324290C BL 0x1C16E04
	0x03242910 CBNZ X21, 0x32429B4
	0x03242914 BL 0x1C16F20
	0x03242918 BL 0x1C16F20
	0x0324291C BL 0x1C16F28
	0x03242920 STR X31, [X31 + 0x18]
	0x03242924 STR W20, [X31 + 0x10]
	0x03242928 ADRP X0, 0xEB1000
	0x0324292C LDR X0, [X0 + 0x758]
	0x03242930 BL 0x1C16D08
	0x03242934 ADD X1, X31, 0x10
	0x03242938 BL 0x1C16E04
	0x0324293C MOV X20, X0
	0x03242940 ADRP X0, 0xEE0000
	0x03242944 LDR X0, [X0 + 0xA00]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x119B000
	008 Move W8, [X22+1072]
	009 Move X20, X2
	010 Move X21, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0xEDD000
	017 Move X0, [X0+3408]
	018 Call 0x1C17CF4
	019 Move X0, 0xEDD000
	020 Move X0, [X0+3432]
	021 Call 0x1C17CF4
	022 Move X0, 0xEE1000
	023 Move X0, [X0+40]
	024 Call 0x1C17CF4
	025 Move X0, 0xEDD000
	026 Move X0, [X0+752]
	027 Call 0x1C17CF4
	028 Move X0, 0xEE1000
	029 Move X0, [X0+2336]
	030 Call 0x1C17CF4
	031 Move X0, 0xEE1000
	032 Move X0, [X0+2344]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+1072], W8
	036 Call Encoding.get_UTF8
	037 Compare X0, 0
	038 JumpIfEqual {152}
	039 Move X8, [X0]
	040 Move W1, W20
	041 Move X9, [X8+856]
	042 Move X2, [X8+864]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move W8, [X19+16]
	045 Add W22, W0, 1
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, X19
	048 Call ValueUtf8Converter.Dispose, X0
	049 Move X8, 0xEDD000
	050 Move X8, [X8+3432]
	051 Move X0, [X8]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X8, 0xEDD000
	057 Move X8, [X8+3408]
	058 Move X23, [X8]
	059 Move X0, [X23+32]
	060 Move W8, [X0+309]
	061 Move TEMP, X8
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {66}
	065 Call 0x1C5D684
	066 Move X8, [X0+192]
	067 Move X0, [X8+8]
	068 Move W8, [X0+309]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {74}
	073 Call 0x1C5D684
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X0, [X23+32]
	079 Move W8, [X0+309]
	080 Move TEMP, X8
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {85}
	084 Call 0x1C5D684
	085 Move X8, [X0+192]
	086 Move X0, [X8+8]
	087 Move W8, [X0+309]
	088 Move TEMP, X8
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {93}
	092 Call 0x1C5D684
	093 Move X8, [X0+184]
	094 Move X0, [X8]
	095 Compare X0, 0
	096 JumpIfEqual {152}
	097 Move X8, [X0]
	098 Move W1, W22
	099 Move X9, [X8+376]
	100 Move X2, [X8+384]
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move [X19], X0
	103 Compare X0, 0
	104 JumpIfEqual {107}
	105 Move W8, [X0+24]
	106 Add X9, X0, 32
	107 Move X9, X31
	108 Move W8, W31
	109 Move [X19+8], X9
	110 Move [X19+16], W8
	111 Move [X19+20], W31
	112 Call Encoding.get_UTF8
	113 Compare X0, 0
	114 JumpIfEqual {152}
	115 Move X8, [X0]
	116 Move X3, [X19+8]
	117 Move X4, [X19+16]
	118 Move X1, X21
	119 Move X2, X20
	120 Move X9, [X8+952]
	121 Move X5, [X8+960]
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Move W8, [X19+16]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X8, [X19+8]
	126 Move X9, 0xEDD000
	127 Move W20, W0
	128 Move [X8], W31
	129 Move W8, [X19+16]
	130 Move X9, [X9+752]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X21, [X9]
	133 Move X0, X31
	134 Call ThrowHelper.ThrowArgumentOutOfRangeException
	135 Move X0, [X21+32]
	136 Move X19, [X19+8]
	137 Move W8, [X0+309]
	138 Move TEMP, X8
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfEqual {143}
	142 Call 0x1C5D684
	143 Add W1, W20, 1
	144 Move X0, X19
	145 Move X20, [X31+32]
	146 Move X19, [X31+40]
	147 Move X22, [X31+16]
	148 Move X21, [X31+24]
	149 Move X30, [X31+48]
	150 Move X23, [X31+56]
	151 Return X0
	152 Call 0x1C17F20
	153 Call 0x1C17F28

Method: System.Void Dispose()

Disassembly:
	0x032429EC ADRP X0, 0xEE0000
	0x032429F0 LDR X0, [X0 + 0xA08]
	0x032429F4 BL 0x1C16D08
	0x032429F8 MOV X1, X21
	0x032429FC MOV X2, X31
	0x03242A00 BL 0x33BFB40
	0x03242A04 MOV X21, X0
	0x03242A08 ADRP X0, 0xEB9000
	0x03242A0C LDR X0, [X0 + 0x578]
	0x03242A10 BL 0x1C16D08
	0x03242A14 BL 0x1C16F10
	0x03242A18 MOV X20, X0
	0x03242A1C ADRP X0, 0xEE0000
	0x03242A20 LDR X0, [X0 + 0x9F0]
	0x03242A24 BL 0x1C16D08
	0x03242A28 MOV X2, X0
	0x03242A2C MOV X0, X20
	0x03242A30 MOV X1, X21
	0x03242A34 MOV X3, X31
	0x03242A38 BL 0x330E16C
	0x03242A3C ADRP X0, 0xEE0000
	0x03242A40 LDR X0, [X0 + 0x9F8]
	0x03242A44 BL 0x1C16D08
	0x03242A48 MOV X1, X0
	0x03242A4C MOV X0, X20
	0x03242A50 BL 0x1C16DEC
	0x03242A54 LDR X8, [X21]
	0x03242A58 LDR X1, [X8 + 0x40]
	0x03242A5C MOV X0, X20
	0x03242A60 BL 0x1C16E00
	0x03242A64 CBNZ X0, 0x32429BC
	0x03242A68 BL 0x1C16F44
	0x03242A6C MOV X1, X31
	0x03242A70 BL 0x1C16DEC
	0x03242A74 STR X20, [X21 + 0x20]
	0x03242A78 ADRP X0, 0xEE0000
	0x03242A7C LDR X0, [X0 + 0xA10]
	0x03242A80 BL 0x1C16D08
	0x03242A84 MOV X1, X21
	0x03242A88 MOV X2, X31
	0x03242A8C BL 0x33BFB40
	0x03242A90 MOV X20, X0
	0x03242A94 ADRP X0, 0xEB1000
	0x03242A98 LDR X0, [X0 + 0xB40]
	0x03242A9C BL 0x1C16D08
	0x03242AA0 BL 0x1C16F10
	0x03242AA4 MOV X21, X0
	0x03242AA8 MOV X1, X20
	0x03242AAC MOV X2, X31
	0x03242AB0 BL 0x3379A44
	0x03242AB4 ADRP X0, 0xEE0000
	0x03242AB8 LDR X0, [X0 + 0x9F8]
	0x03242ABC BL 0x1C16D08
	0x03242AC0 MOV X1, X0
	0x03242AC4 MOV X0, X21
	0x03242AC8 BL 0x1C16DEC
	0x03242ACC B 0x3242B54
	0x03242AD0 B 0x3242B54
	0x03242AD4 B 0x3242B54
	0x03242AD8 B 0x3242B54
	0x03242ADC B 0x3242B54

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x119B000
	005 Move W8, [X19+1073]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xEDD000
	012 Move X0, [X0+3408]
	013 Call 0x1C17CF4
	014 Move X0, 0xEDD000
	015 Move X0, [X0+3432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+1073], W8
	019 Move X19, [X20]
	020 Compare X19, 0
	021 JumpIfEqual {80}
	022 Move X8, 0xEDD000
	023 Move X8, [X8+3432]
	024 Move [X20], X31
	025 Move X20, 0xEDD000
	026 Move X0, [X8]
	027 Move W8, [X0+224]
	028 Move X20, [X20+3408]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X20, [X20]
	033 Move X0, [X20+32]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move X8, [X0+192]
	041 Move X0, [X8+8]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, [X20+32]
	053 Move W8, [X0+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {59}
	058 Call 0x1C5D684
	059 Move X8, [X0+192]
	060 Move X0, [X8+8]
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Move X8, [X0+184]
	068 Move X0, [X8]
	069 Compare X0, 0
	070 JumpIfEqual {84}
	071 Move X8, [X0]
	072 Move X1, X19
	073 Move X20, [X31+16]
	074 Move X19, [X31+24]
	075 Move W2, W31
	076 Move X4, [X8+392]
	077 Move X3, [X8+400]
	078 Move X30, [X31+32]
	079 CallNoReturn X4
	080 Move X20, [X31+16]
	081 Move X19, [X31+24]
	082 Move X30, [X31+32]
	083 Return 
	084 Call 0x1C17F20

