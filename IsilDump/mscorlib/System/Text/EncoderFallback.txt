Type: System.Text.EncoderFallback

Method: System.Text.EncoderFallback get_ReplacementFallback()

Disassembly:
	0x033FBB20 MOV X19, X0
	0x033FBB24 ADRP X0, 0xD27000
	0x033FBB28 LDR X0, [X0 + 0x308]
	0x033FBB2C BL 0x1C16D08
	0x033FBB30 MOV X20, X0
	0x033FBB34 ADRP X0, 0xD27000
	0x033FBB38 LDR X0, [X0 + 0x2E0]
	0x033FBB3C BL 0x1C16D08
	0x033FBB40 MOV X2, X0
	0x033FBB44 MOV X0, X19
	0x033FBB48 MOV X1, X20
	0x033FBB4C MOV X3, X31
	0x033FBB50 BL 0x3315F7C
	0x033FBB54 B 0x33FBC08
	0x033FBB58 ADRP X8, 0xD27000
	0x033FBB5C ADRP X9, 0xD27000
	0x033FBB60 LDR X8, [X8 + 0x328]
	0x033FBB64 LDR X9, [X9 + 0x300]
	0x033FBB68 CMP W19, 0x0
	0x033FBB6C CSEL X0, X9, X8, LT
	0x033FBB70 BL 0x1C16D08
	0x033FBB74 MOV X19, X0
	0x033FBB78 ADRP X0, 0xD00000
	0x033FBB7C LDR X0, [X0 + 0x760]
	0x033FBB80 BL 0x1C16D08
	0x033FBB84 BL 0x1C16F10
	0x033FBB88 MOV X20, X0
	0x033FBB8C ADRP X0, 0xD20000
	0x033FBB90 LDR X0, [X0 + 0x670]
	0x033FBB94 BL 0x1C16D08
	0x033FBB98 MOV X2, X0
	0x033FBB9C MOV X0, X20
	0x033FBBA0 MOV X1, X19
	0x033FBBA4 MOV X3, X31
	0x033FBBA8 BL 0x3311888
	0x033FBBAC ADRP X0, 0xD32000
	0x033FBBB0 LDR X0, [X0 + 0xB80]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xFE3000
	005 Move X20, 0xD28000
	006 Move W8, [X19+1277]
	007 Move X20, [X20+2408]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xD28000
	013 Move X0, [X0+2408]
	014 Call 0x1C17CF4
	015 Move X0, 0xD28000
	016 Move X0, [X0+872]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+1277], W8
	020 Move X8, [X20]
	021 Move X8, [X8+184]
	022 Move X0, [X8]
	023 Compare X0, 0
	024 JumpIfNotEqual {40}
	025 Move X8, 0xD28000
	026 Move X8, [X8+872]
	027 Move X0, [X8]
	028 Call 0x1C17F10
	029 Move X1, X31
	030 Move X19, X0
	031 Call EncoderReplacementFallback..ctor, X0
	032 Move X8, [X20]
	033 Move X1, X19
	034 Move X2, X31
	035 Move X0, [X8+184]
	036 Call 0x1C25138
	037 Move X8, [X20]
	038 Move X8, [X8+184]
	039 Move X0, [X8]
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Return X0

Method: System.Text.EncoderFallback get_ExceptionFallback()

Disassembly:
	0x03400CD0 ADRP X0, 0xD2D000
	0x03400CD4 LDR X0, [X0 + 0xD08]
	0x03400CD8 BL 0x1C16CF4
	0x03400CDC ADRP X0, 0xCF3000
	0x03400CE0 LDR X0, [X0 + 0x9D0]
	0x03400CE4 BL 0x1C16CF4
	0x03400CE8 ADRP X0, 0xD2D000
	0x03400CEC LDR X0, [X0 + 0xD10]
	0x03400CF0 BL 0x1C16CF4
	0x03400CF4 ADRP X0, 0xD2D000
	0x03400CF8 LDR X0, [X0 + 0xD18]
	0x03400CFC BL 0x1C16CF4
	0x03400D00 ADRP X0, 0xCF3000
	0x03400D04 LDR X0, [X0 + 0x838]
	0x03400D08 BL 0x1C16CF4
	0x03400D0C ADRP X0, 0xD2D000
	0x03400D10 LDR X0, [X0 + 0xD00]
	0x03400D14 BL 0x1C16CF4
	0x03400D18 ADRP X0, 0xD2D000
	0x03400D1C LDR X0, [X0 + 0xD20]
	0x03400D20 BL 0x1C16CF4
	0x03400D24 ADRP X0, 0xCF3000
	0x03400D28 LDR X0, [X0 + 0x988]
	0x03400D2C BL 0x1C16CF4
	0x03400D30 MOVZ W8, 0x1
	0x03400D34 STRB W8, [X23 + 0x50B]
	0x03400D38 LDR X0, [X24]
	0x03400D3C LDR X2, [X19 + 0x10]
	0x03400D40 LDR X1, [X21]
	0x03400D44 LDR X3, [X22]
	0x03400D48 MOV X4, X31
	0x03400D4C BL 0x32277C4
	0x03400D50 LDR X8, [X20]
	0x03400D54 MOV X21, X0
	0x03400D58 MOVZ W1, 0x4
	0x03400D5C MOV X0, X8
	0x03400D60 BL 0x1C16D6C
	0x03400D64 CBZ X0, 0x3400EA0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xFDE000
	005 Move X20, 0xD23000
	006 Move W8, [X19+1278]
	007 Move X20, [X20+2408]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xD2E000
	013 Move X0, [X0+3200]
	014 Call 0x1C17CF4
	015 Move X0, 0xD23000
	016 Move X0, [X0+2408]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+1278], W8
	020 Move X8, [X20]
	021 Move X8, [X8+184]
	022 Move X0, [X8+8]
	023 Compare X0, 0
	024 JumpIfNotEqual {41}
	025 Move X8, 0xD2E000
	026 Move X8, [X8+3200]
	027 Move X0, [X8]
	028 Call 0x1C17F10
	029 Move X1, X31
	030 Move X19, X0
	031 Call Object..ctor, X0
	032 Move X8, [X20]
	033 Move X1, X19
	034 Move X2, X31
	035 Move X8, [X8+184]
	036 Add X0, X8, 8
	037 Call 0x1C25138
	038 Move X8, [X20]
	039 Move X8, [X8+184]
	040 Move X0, [X8+8]
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Return X0

Method: System.Text.EncoderFallbackBuffer CreateFallbackBuffer()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Int32 get_MaxCharCount()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void .ctor()

Disassembly:
	0x033FFFF0 CBNZ W8, 0x3400014
	0x033FFFF4 ADRP X0, 0xD23000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

