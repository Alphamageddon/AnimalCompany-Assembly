Type: System.Text.Encoder

Method: System.Void .ctor()

Disassembly:
	0x033FFB60 BL 0x1C16E04
	0x033FFB64 MOV X19, X0

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Text.EncoderFallback get_Fallback()

Disassembly:
	0x033FFB68 ADRP X0, 0xD23000
	0x033FFB6C LDR X0, [X0 + 0x370]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Text.EncoderFallbackBuffer get_FallbackBuffer()

Disassembly:
	0x033FCF24 CMP X10, X8
	0x033FCF28 B.NE 0x33FCF10
	0x033FCF2C ADRP X8, 0xD00000
	0x033FCF30 LDR X8, [X8 + 0x8D8]
	0x033FCF34 MOV W1, W20
	0x033FCF38 LDR X0, [X8]
	0x033FCF3C BL 0x1C16D6C
	0x033FCF40 LDR X8, [X23]
	0x033FCF44 MOV X24, X0
	0x033FCF48 AND W6, W22, 0x1
	0x033FCF4C MOV X0, X23
	0x033FCF50 LDP X9, X7, [X8 + 0x1C8]
	0x033FCF54 MOV X1, X25
	0x033FCF58 MOV W2, W31
	0x033FCF5C MOV W3, W21

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+24]
	005 Compare X0, 0
	006 JumpIfNotEqual {18}
	007 Move X0, [X19+16]
	008 Compare X0, 0
	009 JumpIfNotEqual {13}
	010 Call EncoderFallback.get_ReplacementFallback
	011 Compare X0, 0
	012 JumpIfEqual {21}
	013 Move X8, [X0]
	014 Move X9, [X8+376]
	015 Move X1, [X8+384]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move [X19+24], X0
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return X0
	021 Call 0x1C17F20

Method: System.Boolean get_InternalHasFallbackBuffer()

Disassembly:
	0x033FCF14 B.CS 0x33FCFC0
	0x033FCF18 LDRB W12, [X24, X8, LSL]
	0x033FCF1C STRB W12, [X11, X8, LSL]
	0x033FCF20 ADD X8, X8, 0x1

ISIL:
	001 Move X8, [X0+24]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void Reset()

Disassembly:
	0x033FFB70 BL 0x1C16D08
	0x033FFB74 MOV X1, X20
	0x033FFB78 MOV X2, X19
	0x033FFB7C MOV X3, X31
	0x033FFB80 BL 0x320A264
	0x033FFB84 MOV X19, X0
	0x033FFB88 ADRP X0, 0xCFC000
	0x033FFB8C LDR X0, [X0 + 0x760]
	0x033FFB90 BL 0x1C16D08
	0x033FFB94 BL 0x1C16F10
	0x033FFB98 MOV X20, X0
	0x033FFB9C ADRP X0, 0xD23000
	0x033FFBA0 LDR X0, [X0 + 0x378]
	0x033FFBA4 B 0x33FFC24
	0x033FFBA8 MOVZ W8, 0xDC00
	0x033FFBAC STR W8, [X31 + 0xC]
	0x033FFBB0 ADRP X19, 0xCF4000
	0x033FFBB4 LDR X19, [X19 + 0x758]
	0x033FFBB8 MOV X0, X19
	0x033FFBBC BL 0x1C16D08
	0x033FFBC0 ADD X1, X31, 0xC
	0x033FFBC4 BL 0x1C16E04
	0x033FFBC8 MOV X20, X0
	0x033FFBCC MOVZ W8, 0xDFFF
	0x033FFBD0 MOV X0, X19
	0x033FFBD4 STR W8, [X31 + 0x8]
	0x033FFBD8 BL 0x1C16D08
	0x033FFBDC ADD X1, X31, 0x8
	0x033FFBE0 BL 0x1C16E04
	0x033FFBE4 MOV X19, X0
	0x033FFBE8 ADRP X0, 0xD23000
	0x033FFBEC LDR X0, [X0 + 0x370]
	0x033FFBF0 BL 0x1C16D08
	0x033FFBF4 MOV X1, X20
	0x033FFBF8 MOV X2, X19
	0x033FFBFC MOV X3, X31
	0x033FFC00 BL 0x320A264
	0x033FFC04 MOV X19, X0
	0x033FFC08 ADRP X0, 0xCFC000
	0x033FFC0C LDR X0, [X0 + 0x760]
	0x033FFC10 BL 0x1C16D08
	0x033FFC14 BL 0x1C16F10
	0x033FFC18 MOV X20, X0
	0x033FFC1C ADRP X0, 0xD2E000
	0x033FFC20 LDR X0, [X0 + 0xCA8]
	0x033FFC24 BL 0x1C16D08
	0x033FFC28 MOV X1, X0
	0x033FFC2C MOV X0, X20
	0x033FFC30 MOV X2, X19
	0x033FFC34 MOV X3, X31
	0x033FFC38 BL 0x3311888
	0x033FFC3C ADRP X0, 0xD2E000
	0x033FFC40 LDR X0, [X0 + 0xCB0]
	0x033FFC44 BL 0x1C16D08
	0x033FFC48 MOV X1, X0
	0x033FFC4C MOV X0, X20
	0x033FFC50 BL 0x1C16DEC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xFDF000
	007 Move X22, 0xCFE000
	008 Move X21, 0xCF5000
	009 Move W8, [X20+1266]
	010 Move X22, [X22+2264]
	011 Move X21, [X21+1560]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xCF5000
	018 Move X0, [X0+1560]
	019 Call 0x1C17CF4
	020 Move X0, 0xCFE000
	021 Move X0, [X0+2264]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1266], W8
	025 Move X0, [X22]
	026 Move W1, W31
	027 Call 0x1C17D6C
	028 Move X8, [X19]
	029 Move X20, X0
	030 Move W4, 1
	031 Move X0, X19
	032 Move X9, [X8+392]
	033 Move X5, [X8+400]
	034 Move X1, X20
	035 Move W2, W31
	036 Move W3, W31
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X8, [X21]
	039 Move W1, W0
	040 Move X0, X8
	041 Call 0x1C17D6C
	042 Move X8, [X19]
	043 Move X4, X0
	044 Move W6, 1
	045 Move X0, X19
	046 Move X9, [X8+424]
	047 Move X7, [X8+432]
	048 Move X1, X20
	049 Move W2, W31
	050 Move W3, W31
	051 Move W5, W31
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X0, [X19+24]
	054 Compare X0, 0
	055 JumpIfEqual {65}
	056 Move X8, [X0]
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X2, [X8+456]
	062 Move X1, [X8+464]
	063 Move X30, [X31+48]
	064 CallNoReturn X2
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X30, [X31+48]
	070 Return 

Method: System.Int32 GetByteCount(System.Char[] chars, System.Int32 index, System.Int32 count, System.Boolean flush)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Int32 GetByteCount(System.Char* chars, System.Int32 count, System.Boolean flush)

Disassembly:
	0x033FFC54 MOV W0, W31
	0x033FFC58 RET
	0x033FFC5C MOV W0, W31
	0x033FFC60 RET
	0x033FFC64 MOV W0, W31
	0x033FFC68 RET
	0x033FFC6C STP X30, X21, [X31 - 0x20]!
	0x033FFC70 STP X20, X19, [X31 + 0x10]
	0x033FFC74 ADRP X20, 0xFDE000
	0x033FFC78 ADRP X21, 0xD28000
	0x033FFC7C LDRB W8, [X20 + 0x4FB]
	0x033FFC80 LDR X21, [X21 + 0xF58]
	0x033FFC84 MOV X19, X0
	0x033FFC88 TBNZ X8, 0x0, 0x33FFCA0
	0x033FFC8C ADRP X0, 0xD28000
	0x033FFC90 LDR X0, [X0 + 0xF58]
	0x033FFC94 BL 0x1C16CF4
	0x033FFC98 MOVZ W8, 0x1
	0x033FFC9C STRB W8, [X20 + 0x4FB]
	0x033FFCA0 LDR X1, [X21]
	0x033FFCA4 MOV X0, X19
	0x033FFCA8 MOV X2, X31
	0x033FFCAC BL 0x3314A68
	0x033FFCB0 MOVZ W8, 0x57
	0x033FFCB4 MOVK W8, 0x80070000
	0x033FFCB8 STR W8, [X19 + 0x60]
	0x033FFCBC LDP X20, X19, [X31 + 0x10]
	0x033FFCC0 LDP X30, X21, [X31], #0x20
	0x033FFCC4 RET
	0x033FFCC8 MOV X4, X31
	0x033FFCCC B 0x3315D1C
	0x033FFCD0 STR X30, [X31 - 0x20]!
	0x033FFCD4 STP X20, X19, [X31 + 0x10]
	0x033FFCD8 ADRP X19, 0xFDE000
	0x033FFCDC ADRP X20, 0xD23000
	0x033FFCE0 LDRB W8, [X19 + 0x4FE]
	0x033FFCE4 LDR X20, [X20 + 0x968]
	0x033FFCE8 TBNZ X8, 0x0, 0x33FFD0C
	0x033FFCEC ADRP X0, 0xD2E000
	0x033FFCF0 LDR X0, [X0 + 0xC80]
	0x033FFCF4 BL 0x1C16CF4
	0x033FFCF8 ADRP X0, 0xD23000
	0x033FFCFC LDR X0, [X0 + 0x968]
	0x033FFD00 BL 0x1C16CF4
	0x033FFD04 MOVZ W8, 0x1
	0x033FFD08 STRB W8, [X19 + 0x4FE]
	0x033FFD0C LDR X8, [X20]
	0x033FFD10 LDR X8, [X8 + 0xB8]
	0x033FFD14 LDR X0, [X8 + 0x8]
	0x033FFD18 CBNZ X0, 0x33FFD5C
	0x033FFD1C ADRP X8, 0xD2E000
	0x033FFD20 LDR X8, [X8 + 0xC80]
	0x033FFD24 LDR X0, [X8]
	0x033FFD28 BL 0x1C16F10
	0x033FFD2C MOV X1, X31
	0x033FFD30 MOV X19, X0
	0x033FFD34 BL 0x33BDD8C
	0x033FFD38 LDR X8, [X20]
	0x033FFD3C MOV X1, X19
	0x033FFD40 MOV X2, X31
	0x033FFD44 LDR X8, [X8 + 0xB8]
	0x033FFD48 ADD X0, X8, 0x8
	0x033FFD4C BL 0x1C24138
	0x033FFD50 LDR X8, [X20]
	0x033FFD54 LDR X8, [X8 + 0xB8]
	0x033FFD58 LDR X0, [X8 + 0x8]
	0x033FFD5C LDP X20, X19, [X31 + 0x10]
	0x033FFD60 LDR X30, [X31], #0x20
	0x033FFD64 RET
	0x033FFD68 STP X30, X19, [X31 - 0x10]!
	0x033FFD6C MOV X19, X0
	0x033FFD70 LDR X8, [X19]
	0x033FFD74 MOV X0, X19
	0x033FFD78 LDP X9, X1, [X8 + 0x198]
	0x033FFD7C BLR X9
	0x033FFD80 ANDS W31, W0, 0xFFFF
	0x033FFD84 B.NE 0x33FFD70
	0x033FFD88 LDP X30, X19, [X31], #0x10
	0x033FFD8C RET
	0x033FFD90 LDR X8, [X0]
	0x033FFD94 STR X31, [X0 + 0x10]
	0x033FFD98 STRB W31, [X0 + 0x2A]
	0x033FFD9C STR W31, [X0 + 0x2C]
	0x033FFDA0 LDP X2, X1, [X8 + 0x1C8]
	0x033FFDA4 BR X2
	0x033FFDA8 STR X30, [X31 - 0x40]!
	0x033FFDAC STP X24, X23, [X31 + 0x10]
	0x033FFDB0 STP X22, X21, [X31 + 0x20]
	0x033FFDB4 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xFDF000
	008 Move W8, [X23+1267]
	009 Move W20, W3
	010 Move W19, W2
	011 Move X22, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xCFE000
	018 Move X0, [X0+2264]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+1267], W8
	022 Compare X22, 0
	023 JumpIfEqual {62}
	024 Move TEMP, X19
	025 And TEMP, TEMP, -2147483648
	026 Compare TEMP, -2147483648
	027 JumpIfEqual {79}
	028 Move X8, 0xCFE000
	029 Move X8, [X8+2264]
	030 Move W1, W19
	031 Move X0, [X8]
	032 Call 0x1C17D6C
	033 Move X1, X0
	034 Compare W19, 0
	035 JumpIfEqual {47}
	036 Compare X1, 0
	037 JumpIfEqual {102}
	038 Move W9, [X1+24]
	039 Move X8, X31
	040 Move W10, W19
	041 Add X11, X1, 32
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 NotImplemented "Instruction STRH not yet implemented."
	045 Add X8, X8, 1
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X8, [X21]
	048 And W4, W20, 1
	049 Move X0, X21
	050 Move W3, W19
	051 Move X6, [X8+392]
	052 Move X5, [X8+400]
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move W2, W31
	058 Move X30, [X31+48]
	059 Move X23, [X31+56]
	060 CallNoReturn X6
	061 Call 0x1C17F28
	062 Move X0, 0xCFA000
	063 Move X0, [X0+1320]
	064 Call 0x1C17D08
	065 Call 0x1C17F10
	066 Move X19, X0
	067 Move X0, 0xD24000
	068 Move X0, [X0+728]
	069 Call 0x1C17D08
	070 Move X20, X0
	071 Move X0, 0xD24000
	072 Move X0, [X0+736]
	073 Call 0x1C17D08
	074 Move X2, X0
	075 Move X0, X19
	076 Move X1, X20
	077 Move X3, X31
	078 Call ArgumentNullException..ctor, X0, X1, X2
	079 Move X0, 0xCFD000
	080 Move X0, [X0+1888]
	081 Call 0x1C17D08
	082 Call 0x1C17F10
	083 Move X19, X0
	084 Move X0, 0xD1D000
	085 Move X0, [X0+1608]
	086 Call 0x1C17D08
	087 Move X20, X0
	088 Move X0, 0xD1D000
	089 Move X0, [X0+1648]
	090 Call 0x1C17D08
	091 Move X2, X0
	092 Move X0, X19
	093 Move X1, X20
	094 Move X3, X31
	095 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	096 Move X0, 0xD2F000
	097 Move X0, [X0+3160]
	098 Call 0x1C17D08
	099 Move X1, X0
	100 Move X0, X19
	101 Call 0x1C17DEC
	102 Call 0x1C17F20

Method: System.Int32 GetBytes(System.Char[] chars, System.Int32 charIndex, System.Int32 charCount, System.Byte[] bytes, System.Int32 byteIndex, System.Boolean flush)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Int32 GetBytes(System.Char* chars, System.Int32 charCount, System.Byte* bytes, System.Int32 byteCount, System.Boolean flush)

Disassembly:
	0x033FFDB8 ADRP X21, 0xFDE000
	0x033FFDBC ADRP X24, 0xCF6000
	0x033FFDC0 LDRB W8, [X21 + 0x4FF]
	0x033FFDC4 LDR X24, [X24 + 0x170]
	0x033FFDC8 MOV X22, X2
	0x033FFDCC MOV W20, W1
	0x033FFDD0 MOV X19, X0
	0x033FFDD4 TBNZ X8, 0x0, 0x33FFDEC
	0x033FFDD8 ADRP X0, 0xCF6000
	0x033FFDDC LDR X0, [X0 + 0x170]
	0x033FFDE0 BL 0x1C16CF4
	0x033FFDE4 MOVZ W8, 0x1
	0x033FFDE8 STRB W8, [X21 + 0x4FF]
	0x033FFDEC LDR X8, [X22]
	0x033FFDF0 LDR X9, [X19 + 0x10]
	0x033FFDF4 LDR X0, [X24]
	0x033FFDF8 SUB X8, X8, X9
	0x033FFDFC LDR W9, [X0 + 0xE0]
	0x033FFE00 CMP X8, 0x0
	0x033FFE04 CINC X8, X8, LT
	0x033FFE08 UBFM X8, X8, 0x1, 0x3F
	0x033FFE0C SUB W21, W8, 0x1
	0x033FFE10 CBNZ W9, 0x33FFE18
	0x033FFE14 BL 0x1C16DFC
	0x033FFE18 MOV W0, W20
	0x033FFE1C MOV X1, X31
	0x033FFE20 BL 0x331BFEC
	0x033FFE24 TBZ X0, 0x0, 0x33FFEB4
	0x033FFE28 LDR X8, [X22]
	0x033FFE2C LDR X9, [X19 + 0x18]
	0x033FFE30 CMP X8, X9
	0x033FFE34 B.CS 0x33FFEA4
	0x033FFE38 LDR X0, [X24]
	0x033FFE3C LDRH W23, [X8]
	0x033FFE40 LDR W9, [X0 + 0xE0]
	0x033FFE44 CBNZ W9, 0x33FFE4C
	0x033FFE48 BL 0x1C16DFC
	0x033FFE4C MOV W0, W23
	0x033FFE50 MOV X1, X31
	0x033FFE54 BL 0x331C0FC
	0x033FFE58 TBZ X0, 0x0, 0x33FFEB4
	0x033FFE5C LDRB W8, [X19 + 0x2A]
	0x033FFE60 CBZ W8, 0x33FFE78
	0x033FFE64 LDR W8, [X19 + 0x2C]
	0x033FFE68 ADD W9, W8, 0x1
	0x033FFE6C CMP W8, 0xFB
	0x033FFE70 STR W9, [X19 + 0x2C]
	0x033FFE74 B.GE 0x33FFF30
	0x033FFE78 LDR X8, [X22]
	0x033FFE7C MOV X0, X19
	0x033FFE80 MOV W1, W20
	0x033FFE84 MOV W2, W23
	0x033FFE88 ADD X8, X8, 0x2
	0x033FFE8C STR X8, [X22]
	0x033FFE90 LDR X8, [X19]
	0x033FFE94 MOV W3, W21
	0x033FFE98 LDP X9, X4, [X8 + 0x188]
	0x033FFE9C BLR X9
	0x033FFEA0 B 0x33FFEE8
	0x033FFEA4 LDR X8, [X19 + 0x20]
	0x033FFEA8 CBZ X8, 0x33FFEB4
	0x033FFEAC LDRB W9, [X8 + 0x30]
	0x033FFEB0 CBZ W9, 0x33FFF08
	0x033FFEB4 LDRB W8, [X19 + 0x2A]
	0x033FFEB8 CBZ W8, 0x33FFED0
	0x033FFEBC LDR W8, [X19 + 0x2C]
	0x033FFEC0 ADD W9, W8, 0x1
	0x033FFEC4 CMP W8, 0xFB
	0x033FFEC8 STR W9, [X19 + 0x2C]
	0x033FFECC B.GE 0x33FFF28
	0x033FFED0 LDR X8, [X19]
	0x033FFED4 MOV X0, X19
	0x033FFED8 MOV W1, W20
	0x033FFEDC MOV W2, W21
	0x033FFEE0 LDP X9, X3, [X8 + 0x178]
	0x033FFEE4 BLR X9
	0x033FFEE8 AND W8, W0, 0x1
	0x033FFEEC STRB W8, [X19 + 0x2A]
	0x033FFEF0 LDP X20, X19, [X31 + 0x30]
	0x033FFEF4 LDP X22, X21, [X31 + 0x20]
	0x033FFEF8 LDP X24, X23, [X31 + 0x10]
	0x033FFEFC AND W0, W0, 0x1
	0x033FFF00 LDR X30, [X31], #0x40
	0x033FFF04 RET
	0x033FFF08 LDRB W9, [X19 + 0x28]
	0x033FFF0C CBZ W9, 0x33FFF1C
	0x033FFF10 MOVZ W9, 0x1
	0x033FFF14 STRB W9, [X19 + 0x29]
	0x033FFF18 STRH W20, [X8 + 0x20]
	0x033FFF1C MOV W0, W31
	0x033FFF20 STRB W31, [X19 + 0x2A]
	0x033FFF24 B 0x33FFEF0
	0x033FFF28 AND W1, W20, 0xFFFF
	0x033FFF2C BL 0x33FFF50
	0x033FFF30 LDR X0, [X24]
	0x033FFF34 BL 0x19903D0
	0x033FFF38 MOV W0, W20
	0x033FFF3C MOV W1, W23
	0x033FFF40 MOV X2, X31
	0x033FFF44 BL 0x331C12C
	0x033FFF48 MOV W1, W0
	0x033FFF4C BL 0x33FFF50
	0x033FFF50 STR X30, [X31 - 0x20]!
	0x033FFF54 STP X20, X19, [X31 + 0x10]
	0x033FFF58 STR W1, [X31 + 0xC]
	0x033FFF5C ADRP X0, 0xCF4000
	0x033FFF60 LDR X0, [X0 + 0x758]
	0x033FFF64 BL 0x1C16D08
	0x033FFF68 ADD X1, X31, 0xC
	0x033FFF6C BL 0x1C16E04
	0x033FFF70 MOV X19, X0
	0x033FFF74 ADRP X0, 0xD23000
	0x033FFF78 LDR X0, [X0 + 0x8D8]
	0x033FFF7C BL 0x1C16D08
	0x033FFF80 MOV X1, X19
	0x033FFF84 MOV X2, X31
	0x033FFF88 BL 0x32094D4
	0x033FFF8C MOV X19, X0
	0x033FFF90 ADRP X0, 0xCFC000
	0x033FFF94 LDR X0, [X0 + 0x578]
	0x033FFF98 BL 0x1C16D08
	0x033FFF9C BL 0x1C16F10
	0x033FFFA0 MOV X20, X0
	0x033FFFA4 ADRP X0, 0xD23000
	0x033FFFA8 LDR X0, [X0 + 0x2D8]
	0x033FFFAC BL 0x1C16D08
	0x033FFFB0 MOV X2, X0
	0x033FFFB4 MOV X0, X20
	0x033FFFB8 MOV X1, X19
	0x033FFFBC MOV X3, X31
	0x033FFFC0 BL 0x330E16C
	0x033FFFC4 ADRP X0, 0xD2E000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xFDF000
	010 Move W8, [X25+1268]
	011 Move W22, W5
	012 Move W20, W4
	013 Move X19, X3
	014 Move W21, W2
	015 Move X24, X1
	016 Move X23, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xCF5000
	022 Move X0, [X0+1560]
	023 Call 0x1C17CF4
	024 Move X0, 0xCFE000
	025 Move X0, [X0+2264]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X25+1268], W8
	029 Compare X19, 0
	030 JumpIfEqual {101}
	031 Compare X24, 0
	032 JumpIfEqual {103}
	033 Move TEMP, X20
	034 And TEMP, TEMP, -2147483648
	035 Compare TEMP, -2147483648
	036 JumpIfEqual {120}
	037 Move TEMP, X21
	038 And TEMP, TEMP, -2147483648
	039 Compare TEMP, -2147483648
	040 JumpIfEqual {120}
	041 Move X8, 0xCFE000
	042 Move X8, [X8+2264]
	043 Move W1, W21
	044 Move X0, [X8]
	045 Call 0x1C17D6C
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X25, X0
	048 Compare X25, 0
	049 JumpIfEqual {100}
	050 Move W9, [X25+24]
	051 Move X8, X31
	052 Move W10, W21
	053 Add X11, X25, 32
	054 NotImplemented "Instruction CMP not yet implemented."
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 NotImplemented "Instruction STRH not yet implemented."
	057 Add X8, X8, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X8, 0xCF5000
	060 Move X8, [X8+1560]
	061 Move W1, W20
	062 Move X0, [X8]
	063 Call 0x1C17D6C
	064 Move X8, [X23]
	065 Move X24, X0
	066 And W6, W22, 1
	067 Move X0, X23
	068 Move X9, [X8+424]
	069 Move X7, [X8+432]
	070 Move X1, X25
	071 Move W2, W31
	072 Move W3, W21
	073 Move X4, X24
	074 Move W5, W31
	075 NotImplemented "Instruction BLR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CSEL not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Compare X24, 0
	080 JumpIfEqual {100}
	081 Move X8, X31
	082 Move W9, W0
	083 Add X10, X24, 32
	084 Move W11, [X24+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move W11, [X10]
	087 Move [X19], W11
	088 Add X8, X8, 1
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X20, [X31+48]
	091 Move X19, [X31+56]
	092 Move X22, [X31+32]
	093 Move X21, [X31+40]
	094 Move X24, [X31+16]
	095 Move X23, [X31+24]
	096 Move X30, [X31+64]
	097 Move X25, [X31+72]
	098 Return X0
	099 Call 0x1C17F28
	100 Call 0x1C17F20
	101 Move X0, 0xD24000
	102 Move X0, [X0+776]
	103 Move X0, 0xD24000
	104 Move X0, [X0+728]
	105 Call 0x1C17D08
	106 Move X19, X0
	107 Move X0, 0xCFA000
	108 Move X0, [X0+1320]
	109 Call 0x1C17D08
	110 Call 0x1C17F10
	111 Move X20, X0
	112 Move X0, 0xD24000
	113 Move X0, [X0+736]
	114 Call 0x1C17D08
	115 Move X2, X0
	116 Move X0, X20
	117 Move X1, X19
	118 Move X3, X31
	119 Call ArgumentNullException..ctor, X0, X1, X2
	120 Move X8, 0xD24000
	121 Move X9, 0xD24000
	122 Move X8, [X8+808]
	123 Move X9, [X9+784]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 NotImplemented "Instruction CSEL not yet implemented."
	126 Call 0x1C17D08
	127 Move X19, X0
	128 Move X0, 0xCFD000
	129 Move X0, [X0+1888]
	130 Call 0x1C17D08
	131 Call 0x1C17F10
	132 Move X20, X0
	133 Move X0, 0xD1D000
	134 Move X0, [X0+1648]
	135 Call 0x1C17D08
	136 Move X2, X0
	137 Move X0, X20
	138 Move X1, X19
	139 Move X3, X31
	140 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	141 Move X0, 0xD2F000
	142 Move X0, [X0+3168]
	143 Call 0x1C17D08
	144 Move X1, X0
	145 Move X0, X20
	146 Call 0x1C17DEC

