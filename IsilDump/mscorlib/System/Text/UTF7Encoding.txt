Type: System.Text.UTF7Encoding

Method: System.Void .ctor()

Disassembly:
	0x03239348 TBNZ X20, 0x1F, 0x32393E4
	0x0323934C LDR W9, [X23 + 0x18]
	0x03239350 SUBS W25, W9, W20
	0x03239354 B.LT 0x32393E4
	0x03239358 CBZ W19, 0x32393C8
	0x0323935C ADRP X9, 0xEE9000
	0x03239360 LDR X9, [X9 + 0x2D0]
	0x03239364 ADRP X26, 0xEE9000
	0x03239368 LDR X26, [X26 + 0x2C8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W1, 0xFDE8
	004 Move X2, X31
	005 Move X19, X0
	006 Call Encoding..ctor, X0, X1
	007 Move [X19+80], W31
	008 Move X0, X19
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call UTF7Encoding.MakeTables, X0
	012 Return 

Method: System.Void .ctor(System.Boolean allowOptionals)

Disassembly:
	0x0323936C CMP W8, 0x0
	0x03239370 LDR X1, [X9]
	0x03239374 ADD X9, X24, 0x20
	0x03239378 MOV X0, X23
	0x0323937C CSEL X24, X31, X9, EQ
	0x03239380 BL 0x25FBC40
	0x03239384 LDR X2, [X26]
	0x03239388 BL 0x2218CFC
	0x0323938C LDR X8, [X22]
	0x03239390 ADD X1, X24, W21, SXTW
	0x03239394 ADD X3, X0, W20, 0x1, UXTW
	0x03239398 MOV X0, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 And W20, W1, 1
	005 Move W1, 0xFDE8
	006 Move X2, X31
	007 Move X19, X0
	008 Call Encoding..ctor, X0, X1
	009 Move [X19+80], W20
	010 Move X0, X19
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X30, [X31+32]

Method: System.Void MakeTables()

Disassembly:
	0x0323939C LDR X7, [X8 + 0x308]
	0x032393A0 LDR X6, [X8 + 0x310]
	0x032393A4 MOV W2, W19
	0x032393A8 MOV W4, W25
	0x032393AC LDP X20, X19, [X31 + 0x40]
	0x032393B0 LDP X22, X21, [X31 + 0x30]
	0x032393B4 LDP X24, X23, [X31 + 0x20]
	0x032393B8 LDP X26, X25, [X31 + 0x10]
	0x032393BC MOV X5, X31
	0x032393C0 LDR X30, [X31], #0x50
	0x032393C4 BR X7
	0x032393C8 LDP X20, X19, [X31 + 0x40]
	0x032393CC LDP X22, X21, [X31 + 0x30]
	0x032393D0 LDP X24, X23, [X31 + 0x20]
	0x032393D4 LDP X26, X25, [X31 + 0x10]
	0x032393D8 MOV W0, W31
	0x032393DC LDR X30, [X31], #0x50
	0x032393E0 RET
	0x032393E4 ADRP X0, 0xEC2000
	0x032393E8 LDR X0, [X0 + 0x760]
	0x032393EC BL 0x1C16D08
	0x032393F0 BL 0x1C16F10
	0x032393F4 MOV X19, X0
	0x032393F8 ADRP X0, 0xEE9000
	0x032393FC LDR X0, [X0 + 0x318]
	0x03239400 BL 0x1C16D08
	0x03239404 MOV X20, X0
	0x03239408 ADRP X0, 0xEE2000
	0x0323940C LDR X0, [X0 + 0x660]
	0x03239410 B 0x3239504
	0x03239414 ADRP X8, 0xEE9000
	0x03239418 ADRP X9, 0xEE9000
	0x0323941C LDR X8, [X8 + 0x2D8]
	0x03239420 LDR X9, [X9 + 0x308]
	0x03239424 CMP X24, 0x0
	0x03239428 CSEL X0, X9, X8, EQ
	0x0323942C BL 0x1C16D08
	0x03239430 MOV X19, X0
	0x03239434 ADRP X0, 0xEBF000
	0x03239438 LDR X0, [X0 + 0x528]
	0x0323943C BL 0x1C16D08
	0x03239440 BL 0x1C16F10
	0x03239444 MOV X20, X0
	0x03239448 ADRP X0, 0xEE9000
	0x0323944C LDR X0, [X0 + 0x2E0]
	0x03239450 BL 0x1C16D08
	0x03239454 MOV X2, X0
	0x03239458 MOV X0, X20
	0x0323945C MOV X1, X19
	0x03239460 MOV X3, X31
	0x03239464 BL 0x3315F7C
	0x03239468 B 0x32394C0
	0x0323946C ADRP X8, 0xEE9000
	0x03239470 ADRP X9, 0xEE9000
	0x03239474 LDR X8, [X8 + 0x328]
	0x03239478 LDR X9, [X9 + 0x300]
	0x0323947C CMP W21, 0x0
	0x03239480 CSEL X0, X9, X8, LT
	0x03239484 BL 0x1C16D08
	0x03239488 MOV X19, X0
	0x0323948C ADRP X0, 0xEC2000
	0x03239490 LDR X0, [X0 + 0x760]
	0x03239494 BL 0x1C16D08
	0x03239498 BL 0x1C16F10
	0x0323949C MOV X20, X0
	0x032394A0 ADRP X0, 0xEE2000
	0x032394A4 LDR X0, [X0 + 0x670]
	0x032394A8 BL 0x1C16D08
	0x032394AC MOV X2, X0
	0x032394B0 MOV X0, X20
	0x032394B4 MOV X1, X19
	0x032394B8 MOV X3, X31
	0x032394BC BL 0x3311888
	0x032394C0 ADRP X0, 0xEE9000
	0x032394C4 LDR X0, [X0 + 0x770]
	0x032394C8 BL 0x1C16D08
	0x032394CC MOV X1, X0
	0x032394D0 MOV X0, X20
	0x032394D4 BL 0x1C16DEC
	0x032394D8 ADRP X0, 0xEC2000
	0x032394DC LDR X0, [X0 + 0x760]
	0x032394E0 BL 0x1C16D08
	0x032394E4 BL 0x1C16F10
	0x032394E8 MOV X19, X0
	0x032394EC ADRP X0, 0xEE9000
	0x032394F0 LDR X0, [X0 + 0x308]
	0x032394F4 BL 0x1C16D08
	0x032394F8 MOV X20, X0
	0x032394FC ADRP X0, 0xEE9000
	0x03239500 LDR X0, [X0 + 0xE0]
	0x03239504 BL 0x1C16D08
	0x03239508 MOV X2, X0
	0x0323950C MOV X0, X19
	0x03239510 MOV X1, X20
	0x03239514 MOV X3, X31
	0x03239518 BL 0x3311888
	0x0323951C ADRP X0, 0xEE9000
	0x03239520 LDR X0, [X0 + 0x770]
	0x03239524 BL 0x1C16D08
	0x03239528 MOV X1, X0
	0x0323952C MOV X0, X19
	0x03239530 BL 0x1C16DEC
	0x03239534 STR X30, [X31 - 0x20]!
	0x03239538 STP X20, X19, [X31 + 0x10]
	0x0323953C CBZ X1, 0x3239568
	0x03239540 CBZ X3, 0x3239568
	0x03239544 TBNZ X2, 0x1F, 0x32395C0
	0x03239548 TBNZ X4, 0x1F, 0x32395C0
	0x0323954C LDR X8, [X0]
	0x03239550 LDP X20, X19, [X31 + 0x10]
	0x03239554 MOV X5, X31
	0x03239558 LDR X7, [X8 + 0x308]
	0x0323955C LDR X6, [X8 + 0x310]
	0x03239560 LDR X30, [X31], #0x20
	0x03239564 BR X7
	0x03239568 ADRP X8, 0xEE9000
	0x0323956C ADRP X9, 0xEE9000
	0x03239570 LDR X8, [X8 + 0x2D8]
	0x03239574 LDR X9, [X9 + 0x308]
	0x03239578 CMP X1, 0x0
	0x0323957C CSEL X0, X9, X8, EQ
	0x03239580 BL 0x1C16D08
	0x03239584 MOV X19, X0
	0x03239588 ADRP X0, 0xEBF000
	0x0323958C LDR X0, [X0 + 0x528]
	0x03239590 BL 0x1C16D08
	0x03239594 BL 0x1C16F10
	0x03239598 MOV X20, X0
	0x0323959C ADRP X0, 0xEE9000
	0x032395A0 LDR X0, [X0 + 0x2E0]
	0x032395A4 BL 0x1C16D08
	0x032395A8 MOV X2, X0
	0x032395AC MOV X0, X20
	0x032395B0 MOV X1, X19
	0x032395B4 MOV X3, X31
	0x032395B8 BL 0x3315F7C
	0x032395BC B 0x3239614
	0x032395C0 ADRP X8, 0xEE9000
	0x032395C4 ADRP X9, 0xEE9000
	0x032395C8 LDR X8, [X8 + 0x328]
	0x032395CC LDR X9, [X9 + 0x310]
	0x032395D0 CMP W4, 0x0
	0x032395D4 CSEL X0, X9, X8, LT
	0x032395D8 BL 0x1C16D08
	0x032395DC MOV X19, X0
	0x032395E0 ADRP X0, 0xEC2000
	0x032395E4 LDR X0, [X0 + 0x760]
	0x032395E8 BL 0x1C16D08
	0x032395EC BL 0x1C16F10
	0x032395F0 MOV X20, X0
	0x032395F4 ADRP X0, 0xEE2000
	0x032395F8 LDR X0, [X0 + 0x670]
	0x032395FC BL 0x1C16D08
	0x03239600 MOV X2, X0
	0x03239604 MOV X0, X20
	0x03239608 MOV X1, X19
	0x0323960C MOV X3, X31
	0x03239610 BL 0x3311888
	0x03239614 ADRP X0, 0xEE9000
	0x03239618 LDR X0, [X0 + 0x778]
	0x0323961C BL 0x1C16D08

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x11A4000
	011 Move X21, 0xEBB000
	012 Move X25, 0xEEA000
	013 Move W8, [X20+1012]
	014 Move X21, [X21+1560]
	015 Move X25, [X25+1792]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {41}
	021 Move X0, 0xEBD000
	022 Move X0, [X0+2488]
	023 Call 0x1C17CF4
	024 Move X0, 0xEBB000
	025 Move X0, [X0+1560]
	026 Call 0x1C17CF4
	027 Move X0, 0xEEA000
	028 Move X0, [X0+1800]
	029 Call 0x1C17CF4
	030 Move X0, 0xEEA000
	031 Move X0, [X0+1792]
	032 Call 0x1C17CF4
	033 Move X0, 0xEEA000
	034 Move X0, [X0+1808]
	035 Call 0x1C17CF4
	036 Move X0, 0xEEA000
	037 Move X0, [X0+1816]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+1012], W8
	041 Move X0, [X21]
	042 Move W1, 64
	043 Call 0x1C17D6C
	044 Move [X19+56], X0
	045 Move X21, X0
	046 Move X0, [X25]
	047 Compare X0, 0
	048 JumpIfEqual {159}
	049 Move X26, 0xEEA000
	050 Move X24, 0xEBD000
	051 Move X23, 0xEEA000
	052 Move X22, 0xEEA000
	053 Move X26, [X26+1800]
	054 Move X24, [X24+2488]
	055 Move X23, [X23+1808]
	056 Move X22, [X22+1816]
	057 Move X20, X31
	058 Move W1, W20
	059 Move X2, X31
	060 Call String.get_Chars, X0, X1
	061 Compare X21, 0
	062 JumpIfEqual {159}
	063 Move W8, [X21+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Add X8, X21, X20
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move [X8+32], W0
	068 Move X0, [X25]
	069 Move X21, [X19+56]
	070 Add X20, X20, 1
	071 Compare X0, 0
	072 JumpIfNotEqual {58}
	073 Move X0, [X26]
	074 Move W1, 128
	075 Call 0x1C17D6C
	076 Move [X19+64], X0
	077 Compare X0, 0
	078 JumpIfEqual {159}
	079 Move X8, X31
	080 Move W9, 255
	081 Move W10, [X0+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Add X10, X0, X8
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move [X10+32], W9
	086 Move X0, [X19+64]
	087 Add X8, X8, 1
	088 Compare X0, 0
	089 JumpIfNotEqual {81}
	090 Move X8, X31
	091 Move X9, [X19+56]
	092 Compare X9, 0
	093 JumpIfEqual {159}
	094 Move W10, [X9+24]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X10, [X19+64]
	097 Compare X10, 0
	098 JumpIfEqual {159}
	099 Add X9, X9, X8
	100 Move W9, [X9+32]
	101 Move W11, [X10+24]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Add X9, X10, X9
	104 Move [X9+32], W8
	105 Add X8, X8, 1
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X0, [X24]
	108 Move W1, 128
	109 Call 0x1C17D6C
	110 Move [X19+72], X0
	111 Move X20, X0
	112 Move X0, [X23]
	113 Compare X0, 0
	114 JumpIfEqual {159}
	115 Move W24, [X0+16]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move W21, W31
	118 Move W25, 1
	119 Move W1, W21
	120 Move X2, X31
	121 Call String.get_Chars, X0, X1
	122 Compare X20, 0
	123 JumpIfEqual {159}
	124 Move W8, [X20+24]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Add W21, W21, 1
	127 Add X8, X20, W0
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move [X8+32], W25
	130 Move X0, [X23]
	131 Move X20, [X19+72]
	132 Compare X0, 0
	133 JumpIfNotEqual {119}
	134 Move W8, [X19+80]
	135 Compare W8, 0
	136 JumpIfEqual {160}
	137 Move X0, [X22]
	138 Compare X0, 0
	139 JumpIfEqual {159}
	140 Move W21, [X0+16]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move W20, W31
	143 Move W23, 1
	144 Move X24, [X19+72]
	145 Move W1, W20
	146 Move X2, X31
	147 Call String.get_Chars, X0, X1
	148 Compare X24, 0
	149 JumpIfEqual {159}
	150 Move W8, [X24+24]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Add W20, W20, 1
	153 Add X8, X24, W0
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move [X8+32], W23
	156 Move X0, [X22]
	157 Compare X0, 0
	158 JumpIfNotEqual {144}
	159 Call 0x1C17F20
	160 Move X20, [X31+64]
	161 Move X19, [X31+72]
	162 Move X22, [X31+48]
	163 Move X21, [X31+56]
	164 Move X24, [X31+32]
	165 Move X23, [X31+40]
	166 Move X26, [X31+16]
	167 Move X25, [X31+24]
	168 Move X30, [X31+80]
	169 Return 
	170 Call 0x1C17F28

Method: System.Void SetDefaultFallbacks()

Disassembly:
	0x03239620 MOV X1, X0
	0x03239624 MOV X0, X20
	0x03239628 BL 0x1C16DEC
	0x0323962C STP X30, X23, [X31 - 0x30]!
	0x03239630 STP X22, X21, [X31 + 0x10]
	0x03239634 STP X20, X19, [X31 + 0x20]
	0x03239638 ADRP X23, 0x11A3000
	0x0323963C LDRB W8, [X23 + 0x3FA]
	0x03239640 MOV W20, W3
	0x03239644 MOV W19, W2
	0x03239648 MOV X22, X1
	0x0323964C MOV X21, X0
	0x03239650 TBNZ X8, 0x0, 0x3239668
	0x03239654 ADRP X0, 0xEBC000
	0x03239658 LDR X0, [X0 + 0x278]
	0x0323965C BL 0x1C16CF4
	0x03239660 MOVZ W8, 0x1
	0x03239664 STRB W8, [X23 + 0x3FA]
	0x03239668 CBZ X22, 0x32396D8
	0x0323966C TBNZ X20, 0x1F, 0x3239720
	0x03239670 TBNZ X19, 0x1F, 0x3239720
	0x03239674 LDR W8, [X22 + 0x18]
	0x03239678 SUB W9, W8, W19
	0x0323967C CMP W9, W20
	0x03239680 B.LT 0x323978C
	0x03239684 CBZ W20, 0x32396B4
	0x03239688 ADD X9, X22, 0x20
	0x0323968C CMP W8, 0x0
	0x03239690 CSEL X8, X31, X9, EQ
	0x03239694 ADD X0, X8, W19, SXTW
	0x03239698 MOV W1, W20
	0x0323969C MOV X2, X21
	0x032396A0 LDP X20, X19, [X31 + 0x20]
	0x032396A4 LDP X22, X21, [X31 + 0x10]
	0x032396A8 MOV X3, X31
	0x032396AC LDP X30, X23, [X31], #0x30
	0x032396B0 B 0x322DAF4
	0x032396B4 ADRP X8, 0xEBC000
	0x032396B8 LDR X8, [X8 + 0x278]
	0x032396BC LDP X20, X19, [X31 + 0x20]
	0x032396C0 LDP X22, X21, [X31 + 0x10]
	0x032396C4 LDR X8, [X8]
	0x032396C8 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x11A4000
	008 Move X23, 0xEBD000
	009 Move X21, 0xEEA000
	010 Move X22, 0xEEA000
	011 Move W8, [X20+1013]
	012 Move X23, [X23+632]
	013 Move X21, [X21+872]
	014 Move X22, [X22+1824]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xEEA000
	021 Move X0, [X0+1824]
	022 Call 0x1C17CF4
	023 Move X0, 0xEEA000
	024 Move X0, [X0+872]
	025 Call 0x1C17CF4
	026 Move X0, 0xEBD000
	027 Move X0, [X0+632]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1013], W8
	031 Move X8, [X23]
	032 Move X0, [X21]
	033 Move X8, [X8+184]
	034 Move X20, [X8]
	035 Call 0x1C17F10
	036 Move X1, X20
	037 Move X21, X0
	038 Call EncoderReplacementFallback..ctor, X0, X1
	039 Move [X19+40], X21
	040 Move X0, [X22]
	041 Call 0x1C17F10
	042 Move X1, X31
	043 Move X20, X0
	044 Call DecoderFallback..ctor, X0
	045 Move [X19+48], X20
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X30, [X31+48]
	051 Move X23, [X31+56]
	052 Return 

Method: System.Boolean Equals(System.Object value)

Disassembly:
	0x032396D4 RET
	0x032396D8 ADRP X0, 0xEBF000
	0x032396DC LDR X0, [X0 + 0x528]
	0x032396E0 BL 0x1C16D08
	0x032396E4 BL 0x1C16F10
	0x032396E8 MOV X19, X0
	0x032396EC ADRP X0, 0xEE9000
	0x032396F0 LDR X0, [X0 + 0x308]
	0x032396F4 BL 0x1C16D08
	0x032396F8 MOV X20, X0
	0x032396FC ADRP X0, 0xEE9000
	0x03239700 LDR X0, [X0 + 0x2E0]
	0x03239704 BL 0x1C16D08
	0x03239708 MOV X2, X0
	0x0323970C MOV X0, X19
	0x03239710 MOV X1, X20
	0x03239714 MOV X3, X31
	0x03239718 BL 0x3315F7C
	0x0323971C B 0x32397D0
	0x03239720 ADRP X8, 0xEE2000
	0x03239724 ADRP X9, 0xEC5000
	0x03239728 LDR X8, [X8 + 0x648]
	0x0323972C LDR X9, [X9 + 0x130]
	0x03239730 CMP W19, 0x0
	0x03239734 CSEL X0, X9, X8, LT
	0x03239738 BL 0x1C16D08
	0x0323973C MOV X19, X0
	0x03239740 ADRP X0, 0xEC2000
	0x03239744 LDR X0, [X0 + 0x760]
	0x03239748 BL 0x1C16D08
	0x0323974C BL 0x1C16F10
	0x03239750 MOV X20, X0
	0x03239754 ADRP X0, 0xEE2000
	0x03239758 LDR X0, [X0 + 0x670]
	0x0323975C BL 0x1C16D08
	0x03239760 MOV X2, X0
	0x03239764 MOV X0, X20
	0x03239768 MOV X1, X19
	0x0323976C MOV X3, X31
	0x03239770 BL 0x3311888
	0x03239774 ADRP X0, 0xEE9000
	0x03239778 LDR X0, [X0 + 0x780]
	0x0323977C BL 0x1C16D08
	0x03239780 MOV X1, X0
	0x03239784 MOV X0, X20
	0x03239788 BL 0x1C16DEC
	0x0323978C ADRP X0, 0xEC2000
	0x03239790 LDR X0, [X0 + 0x760]
	0x03239794 BL 0x1C16D08
	0x03239798 BL 0x1C16F10
	0x0323979C MOV X19, X0
	0x032397A0 ADRP X0, 0xEE9000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x11A4000
	006 Move W8, [X21+1014]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xEEA000
	014 Move X0, [X0+1832]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1014], W8
	018 Compare X20, 0
	019 JumpIfEqual {61}
	020 Move X8, 0xEEA000
	021 Move X8, [X8+1832]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Compare X20, 0
	033 JumpIfEqual {67}
	034 Move W8, [X19+80]
	035 Move W9, [X20+80]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, [X19+40]
	038 Compare X0, 0
	039 JumpIfEqual {67}
	040 Move X8, [X0]
	041 Move X1, [X20+40]
	042 Move X9, [X8+312]
	043 Move X2, [X8+320]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {61}
	049 Move X0, [X19+48]
	050 Compare X0, 0
	051 JumpIfEqual {67}
	052 Move X8, [X0]
	053 Move X1, [X20+48]
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X3, [X8+312]
	057 Move X2, [X8+320]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 CallNoReturn X3
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move W0, W31
	064 Move X30, [X31+32]
	065 Move X21, [X31+40]
	066 Return X0
	067 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x032397A4 LDR X0, [X0 + 0x308]
	0x032397A8 BL 0x1C16D08
	0x032397AC MOV X20, X0
	0x032397B0 ADRP X0, 0xEE9000
	0x032397B4 LDR X0, [X0 + 0xE0]
	0x032397B8 BL 0x1C16D08
	0x032397BC MOV X2, X0
	0x032397C0 MOV X0, X19
	0x032397C4 MOV X1, X20
	0x032397C8 MOV X3, X31
	0x032397CC BL 0x3311888
	0x032397D0 ADRP X0, 0xEE9000
	0x032397D4 LDR X0, [X0 + 0x780]
	0x032397D8 BL 0x1C16D08
	0x032397DC MOV X1, X0
	0x032397E0 MOV X0, X19
	0x032397E4 BL 0x1C16DEC
	0x032397E8 LDR X8, [X0]
	0x032397EC MOV X5, X3
	0x032397F0 MOV X3, X31
	0x032397F4 MOV W4, W31
	0x032397F8 LDR X7, [X8 + 0x288]
	0x032397FC LDR X6, [X8 + 0x290]
	0x03239800 BR X7
	0x03239804 STR X30, [X31 - 0x60]!
	0x03239808 STP X28, X27, [X31 + 0x10]
	0x0323980C STP X26, X25, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Move X20, X0
	006 Move X9, [X8+808]
	007 Move X1, [X8+816]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move X8, [X20+40]
	010 Compare X8, 0
	011 JumpIfEqual {33}
	012 Move X9, [X8]
	013 Move W19, W0
	014 Move X0, X8
	015 Move X10, [X9+344]
	016 Move X1, [X9+352]
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Move X8, [X20+48]
	019 Compare X8, 0
	020 JumpIfEqual {33}
	021 Move X9, [X8]
	022 Move W20, W0
	023 Move X0, X8
	024 Move X10, [X9+344]
	025 Move X1, [X9+352]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Add W8, W20, W19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Add W0, W8, W0
	031 Move X30, [X31+32]
	032 Return X0
	033 Call 0x1C17F20

Method: System.Int32 GetByteCount(System.Char[] chars, System.Int32 index, System.Int32 count)

Disassembly:
	0x03239810 STP X24, X23, [X31 + 0x30]
	0x03239814 STP X22, X21, [X31 + 0x40]
	0x03239818 STP X20, X19, [X31 + 0x50]
	0x0323981C ADRP X21, 0x11A3000
	0x03239820 LDRB W8, [X21 + 0x3FB]
	0x03239824 MOV X19, X5
	0x03239828 MOV W24, W4
	0x0323982C MOV X20, X3
	0x03239830 MOV W23, W2
	0x03239834 MOV X25, X1
	0x03239838 MOV X22, X0
	0x0323983C TBNZ X8, 0x0, 0x3239860
	0x03239840 ADRP X0, 0xEE9000
	0x03239844 LDR X0, [X0 + 0x788]
	0x03239848 BL 0x1C16CF4
	0x0323984C ADRP X0, 0xEE9000
	0x03239850 LDR X0, [X0 + 0x790]
	0x03239854 BL 0x1C16CF4
	0x03239858 MOVZ W8, 0x1
	0x0323985C STRB W8, [X21 + 0x3FB]
	0x03239860 CBZ X19, 0x323987C
	0x03239864 ADRP X8, 0xEE9000
	0x03239868 LDR X8, [X8 + 0x788]
	0x0323986C LDR X1, [X8]
	0x03239870 LDR X8, [X19]
	0x03239874 CMP X8, X1
	0x03239878 B.NE 0x3239B98
	0x0323987C ADRP X8, 0xEE9000
	0x03239880 LDR X8, [X8 + 0x790]
	0x03239884 LDR X0, [X8]
	0x03239888 BL 0x1C16F10
	0x0323988C MOV X1, X22
	0x03239890 MOV X2, X19
	0x03239894 MOV X3, X20
	0x03239898 MOV W4, W24
	0x0323989C MOV X5, X25
	0x032398A0 MOV W6, W23
	0x032398A4 MOV X7, X31
	0x032398A8 MOV X21, X0
	0x032398AC BL 0x32460A8
	0x032398B0 CBZ X19, 0x3239928
	0x032398B4 LDP W25, W24, [X19 + 0x38]
	0x032398B8 CMP W24, 0x6
	0x032398BC B.LT 0x3239930
	0x032398C0 LDR X8, [X22 + 0x38]
	0x032398C4 CBZ X8, 0x3239B90
	0x032398C8 LDR W10, [X8 + 0x18]
	0x032398CC SUB W24, W24, 0x6
	0x032398D0 ASRV W9, W25, W24
	0x032398D4 AND W9, W9, 0x3F
	0x032398D8 CMP W9, W10
	0x032398DC B.CS 0x3239B94
	0x032398E0 CBZ X21, 0x3239B90
	0x032398E4 ADD X8, X8, W9, UXTW
	0x032398E8 LDRB W1, [X8 + 0x20]
	0x032398EC MOV X0, X21
	0x032398F0 MOV X2, X31
	0x032398F4 BL 0x3246370
	0x032398F8 TBNZ X0, 0x0, 0x3239918
	0x032398FC LDR W8, [X21 + 0x40]
	0x03239900 MOV X0, X22
	0x03239904 MOV X1, X19
	0x03239908 MOV X3, X31
	0x0323990C CMP W8, 0x0
	0x03239910 CSET W2, EQ
	0x03239914 BL 0x3245184
	0x03239918 ADD W8, W24, 0x6
	0x0323991C CMP W8, 0xB
	0x03239920 B.GT 0x32398C0
	0x03239924 B 0x3239934
	0x03239928 MOV W25, W31
	0x0323992C MOVN W24, 0x0
	0x03239930 CBZ X21, 0x3239B90
	0x03239934 MOVZ W26, 0x6
	0x03239938 UBFM W28, W24, 0x1F, 0x1F
	0x0323993C MOV X0, X21
	0x03239940 MOV X1, X31
	0x03239944 BL 0x32463C8
	0x03239948 TBZ X0, 0x0, 0x3239AA0
	0x0323994C MOV X0, X21
	0x03239950 MOV X1, X31
	0x03239954 BL 0x3246410
	0x03239958 AND W27, W0, 0xFFFF
	0x0323995C CMP W27, 0x80
	0x03239960 B.CS 0x32399C0
	0x03239964 LDR X8, [X22 + 0x48]
	0x03239968 CBZ X8, 0x3239B90
	0x0323996C LDR W9, [X8 + 0x18]
	0x03239970 AND W27, W0, 0xFFFF
	0x03239974 MOV W23, W0
	0x03239978 CMP W27, W9
	0x0323997C B.CS 0x3239B94
	0x03239980 ADD X8, X8, W23, UXTH
	0x03239984 LDRB W8, [X8 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {37}
	006 Move TEMP, X3
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {54}
	010 Move TEMP, X2
	011 And TEMP, TEMP, -2147483648
	012 Compare TEMP, -2147483648
	013 JumpIfEqual {54}
	014 Move W8, [X1+24]
	015 Subtract W9, W8, W2
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Compare W3, 0
	018 JumpIfEqual {32}
	019 Move X9, [X0]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Add X10, X1, 32
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X5, [X9+552]
	025 Move X4, [X9+560]
	026 NotImplemented "Instruction CSEL not yet implemented."
	027 Add X1, X8, W2
	028 Move W2, W3
	029 Move X3, X31
	030 Move X30, [X31+32]
	031 CallNoReturn X5
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move W0, W31
	035 Move X30, [X31+32]
	036 Return X0
	037 Move X0, 0xEC0000
	038 Move X0, [X0+1320]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0xEEA000
	043 Move X0, [X0+728]
	044 Call 0x1C17D08
	045 Move X20, X0
	046 Move X0, 0xEEA000
	047 Move X0, [X0+736]
	048 Call 0x1C17D08
	049 Move X2, X0
	050 Move X0, X19
	051 Move X1, X20
	052 Move X3, X31
	053 Call ArgumentNullException..ctor, X0, X1, X2
	054 Move X8, 0xEE3000
	055 Move X9, 0xEC6000
	056 Move X8, [X8+1608]
	057 Move X9, [X9+304]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 Call 0x1C17D08
	061 Move X19, X0
	062 Move X0, 0xEC3000
	063 Move X0, [X0+1888]
	064 Call 0x1C17D08
	065 Call 0x1C17F10
	066 Move X20, X0
	067 Move X0, 0xEE3000
	068 Move X0, [X0+1648]
	069 Call 0x1C17D08
	070 Move X2, X0
	071 Move X0, X20
	072 Move X1, X19
	073 Move X3, X31
	074 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	075 Move X0, 0xEEA000
	076 Move X0, [X0+1840]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X20
	080 Call 0x1C17DEC
	081 Move X0, 0xEC3000
	082 Move X0, [X0+1888]
	083 Call 0x1C17D08
	084 Call 0x1C17F10
	085 Move X19, X0
	086 Move X0, 0xEEA000
	087 Move X0, [X0+728]
	088 Call 0x1C17D08
	089 Move X20, X0
	090 Move X0, 0xEEA000
	091 Move X0, [X0+224]
	092 Call 0x1C17D08
	093 Move X2, X0
	094 Move X0, X19
	095 Move X1, X20
	096 Move X3, X31
	097 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	098 Move X0, 0xEEA000
	099 Move X0, [X0+1840]
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X19
	103 Call 0x1C17DEC

Method: System.Int32 GetByteCount(System.String s)

Disassembly:
	0x03239988 CBNZ W8, 0x3239A30
	0x0323998C AND W8, W23, 0xFFFF
	0x03239990 CMP W8, 0x2B
	0x03239994 CSET W8, NE
	0x03239998 EOR W9, W28, 0x1
	0x0323999C ORR W8, W8, W9, 0x0
	0x032399A0 TBNZ X8, 0x0, 0x32399C0
	0x032399A4 MOVZ W1, 0x2B
	0x032399A8 MOVZ W2, 0x2D
	0x032399AC MOV X0, X21
	0x032399B0 MOV X3, X31
	0x032399B4 BL 0x3246378
	0x032399B8 TBNZ X0, 0x0, 0x323993C
	0x032399BC B 0x3239AA0
	0x032399C0 TBZ X24, 0x1F, 0x32399DC
	0x032399C4 MOVZ W1, 0x2B
	0x032399C8 MOV X0, X21
	0x032399CC MOV X2, X31
	0x032399D0 BL 0x3246370
	0x032399D4 TBZ X0, 0x0, 0x3239B34
	0x032399D8 MOV W24, W31
	0x032399DC BFM W27, W25, 0x10, 0xF
	0x032399E0 ADD W24, W24, 0x10
	0x032399E4 CMP W24, 0x5
	0x032399E8 B.LE 0x3239A28
	0x032399EC LDR X8, [X22 + 0x38]
	0x032399F0 CBZ X8, 0x3239B90
	0x032399F4 LDR W10, [X8 + 0x18]
	0x032399F8 SUB W24, W24, 0x6
	0x032399FC ASRV W9, W27, W24
	0x03239A00 AND W9, W9, 0x3F
	0x03239A04 CMP W9, W10
	0x03239A08 B.CS 0x3239B94
	0x03239A0C ADD X8, X8, W9, UXTW
	0x03239A10 LDRB W1, [X8 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {21}
	006 Move X20, X0
	007 Move X0, X31
	008 Move X19, X1
	009 Call RuntimeHelpers.get_OffsetToStringData
	010 Move X8, [X20]
	011 Move W2, [X19+16]
	012 Add X1, X19, W0
	013 Move X0, X20
	014 Move X5, [X8+552]
	015 Move X4, [X8+560]
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X3, X31
	019 Move X30, [X31+32]
	020 CallNoReturn X5
	021 Move X0, 0xEC0000
	022 Move X0, [X0+1320]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X19, X0
	026 Move X0, 0xEE4000
	027 Move X0, [X0+3264]
	028 Call 0x1C17D08
	029 Move X1, X0
	030 Move X0, X19
	031 Move X2, X31
	032 Call ArgumentNullException..ctor, X0, X1
	033 Move X0, 0xEEA000
	034 Move X0, [X0+1848]
	035 Call 0x1C17D08
	036 Move X1, X0
	037 Move X0, X19
	038 Call 0x1C17DEC

Method: System.Int32 GetByteCount(System.Char* chars, System.Int32 count)

Disassembly:
	0x03239A14 MOV X0, X21
	0x03239A18 MOV X2, X31
	0x03239A1C BL 0x3246370
	0x03239A20 TBNZ X0, 0x0, 0x32399E4
	0x03239A24 B 0x3239AA8
	0x03239A28 MOV W25, W27
	0x03239A2C B 0x3239938
	0x03239A30 TBNZ X24, 0x1F, 0x3239A88
	0x03239A34 CBZ W24, 0x3239A70
	0x03239A38 LDR X8, [X22 + 0x38]
	0x03239A3C CBZ X8, 0x3239B90
	0x03239A40 LDR W10, [X8 + 0x18]
	0x03239A44 SUB W9, W26, W24
	0x03239A48 LSLV W9, W25, W9
	0x03239A4C AND W9, W9, 0x3F
	0x03239A50 CMP W9, W10
	0x03239A54 B.CS 0x3239B94
	0x03239A58 ADD X8, X8, W9, UXTW
	0x03239A5C LDRB W1, [X8 + 0x20]
	0x03239A60 MOV X0, X21
	0x03239A64 MOV X2, X31
	0x03239A68 BL 0x3246370
	0x03239A6C TBZ X0, 0x0, 0x3239ABC
	0x03239A70 MOVZ W1, 0x2D
	0x03239A74 MOV X0, X21
	0x03239A78 MOV X2, X31
	0x03239A7C BL 0x3246370
	0x03239A80 TBZ X0, 0x0, 0x3239B84
	0x03239A84 MOVN W24, 0x0
	0x03239A88 MOV X0, X21
	0x03239A8C MOV W1, W23
	0x03239A90 MOV X2, X31
	0x03239A94 BL 0x3246370
	0x03239A98 TBNZ X0, 0x0, 0x3239938
	0x03239A9C B 0x3239B34
	0x03239AA0 TBZ X24, 0x1F, 0x3239ABC
	0x03239AA4 B 0x3239B34
	0x03239AA8 MOV X0, X21
	0x03239AAC MOV X1, X31
	0x03239AB0 BL 0x3246410
	0x03239AB4 ADD W24, W24, 0x6
	0x03239AB8 MOV W25, W27
	0x03239ABC CBZ X19, 0x3239AC8
	0x03239AC0 LDRB W8, [X19 + 0x30]
	0x03239AC4 CBZ W8, 0x3239B34
	0x03239AC8 CMP W24, 0x1
	0x03239ACC B.LT 0x3239B14
	0x03239AD0 LDR X8, [X22 + 0x38]
	0x03239AD4 CBZ X8, 0x3239B90
	0x03239AD8 MOVZ W9, 0x6
	0x03239ADC LDR W10, [X8 + 0x18]
	0x03239AE0 SUB W9, W9, W24

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {18}
	006 Move TEMP, X2
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {35}
	010 Move X8, [X0]
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X3, X31
	014 Move X5, [X8+552]
	015 Move X4, [X8+560]
	016 Move X30, [X31+32]
	017 CallNoReturn X5
	018 Move X0, 0xEC0000
	019 Move X0, [X0+1320]
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X19, X0
	023 Move X0, 0xEEA000
	024 Move X0, [X0+728]
	025 Call 0x1C17D08
	026 Move X20, X0
	027 Move X0, 0xEEA000
	028 Move X0, [X0+736]
	029 Call 0x1C17D08
	030 Move X2, X0
	031 Move X0, X19
	032 Move X1, X20
	033 Move X3, X31
	034 Call ArgumentNullException..ctor, X0, X1, X2
	035 Move X0, 0xEC3000
	036 Move X0, [X0+1888]
	037 Call 0x1C17D08
	038 Call 0x1C17F10
	039 Move X19, X0
	040 Move X0, 0xEE3000
	041 Move X0, [X0+1608]
	042 Call 0x1C17D08
	043 Move X20, X0
	044 Move X0, 0xEE3000
	045 Move X0, [X0+1648]
	046 Call 0x1C17D08
	047 Move X2, X0
	048 Move X0, X19
	049 Move X1, X20
	050 Move X3, X31
	051 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	052 Move X0, 0xEEA000
	053 Move X0, [X0+1856]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X19
	057 Call 0x1C17DEC

Method: System.Int32 GetBytes(System.String s, System.Int32 charIndex, System.Int32 charCount, System.Byte[] bytes, System.Int32 byteIndex)

Disassembly:
	0x03239AE4 LSLV W9, W25, W9
	0x03239AE8 AND W9, W9, 0x3F
	0x03239AEC CMP W9, W10
	0x03239AF0 B.CS 0x3239B94
	0x03239AF4 ADD X8, X8, W9, UXTW
	0x03239AF8 LDRB W1, [X8 + 0x20]
	0x03239AFC MOV X0, X21
	0x03239B00 MOV X2, X31
	0x03239B04 BL 0x3246370
	0x03239B08 ANDS W31, W0, 0x1
	0x03239B0C CSEL W24, W31, W24, NE
	0x03239B10 B 0x3239B18
	0x03239B14 MOV W24, W31
	0x03239B18 MOVZ W1, 0x2D
	0x03239B1C MOV X0, X21
	0x03239B20 MOV X2, X31
	0x03239B24 BL 0x3246370
	0x03239B28 TBZ X0, 0x0, 0x3239B3C
	0x03239B2C MOV W25, W31
	0x03239B30 MOVN W24, 0x0
	0x03239B34 CBNZ X20, 0x3239B4C
	0x03239B38 B 0x3239B64
	0x03239B3C MOV X0, X21
	0x03239B40 MOV X1, X31
	0x03239B44 BL 0x3246410
	0x03239B48 CBZ X20, 0x3239B64
	0x03239B4C CBZ X19, 0x3239B64
	0x03239B50 MOV X0, X21
	0x03239B54 MOV X1, X31
	0x03239B58 STP W25, W24, [X19 + 0x38]
	0x03239B5C BL 0x3246460
	0x03239B60 STR W0, [X19 + 0x34]
	0x03239B64 LDR W0, [X21 + 0x40]
	0x03239B68 LDP X20, X19, [X31 + 0x50]
	0x03239B6C LDP X22, X21, [X31 + 0x40]
	0x03239B70 LDP X24, X23, [X31 + 0x30]
	0x03239B74 LDP X26, X25, [X31 + 0x20]
	0x03239B78 LDP X28, X27, [X31 + 0x10]
	0x03239B7C LDR X30, [X31], #0x60
	0x03239B80 RET
	0x03239B84 MOV W24, W31
	0x03239B88 CBNZ X19, 0x3239AC0
	0x03239B8C B 0x3239AC8
	0x03239B90 BL 0x1C16F20
	0x03239B94 BL 0x1C16F28
	0x03239B98 MOV X0, X19
	0x03239B9C BL 0x1C171E0
	0x03239BA0 LDR X8, [X0]
	0x03239BA4 MOV X5, X3
	0x03239BA8 MOV X3, X31
	0x03239BAC MOV W4, W31
	0x03239BB0 LDR X7, [X8 + 0x308]
	0x03239BB4 LDR X6, [X8 + 0x310]
	0x03239BB8 BR X7
	0x03239BBC STR X30, [X31 - 0x50]!
	0x03239BC0 STP X26, X25, [X31 + 0x10]
	0x03239BC4 STP X24, X23, [X31 + 0x20]
	0x03239BC8 STP X22, X21, [X31 + 0x30]
	0x03239BCC STP X20, X19, [X31 + 0x40]
	0x03239BD0 ADRP X21, 0x11A3000
	0x03239BD4 LDRB W8, [X21 + 0x3FC]
	0x03239BD8 MOV X19, X5
	0x03239BDC MOV W24, W4
	0x03239BE0 MOV X20, X3
	0x03239BE4 MOV W23, W2
	0x03239BE8 MOV X25, X1
	0x03239BEC MOV X22, X0
	0x03239BF0 TBNZ X8, 0x0, 0x3239C14
	0x03239BF4 ADRP X0, 0xEE9000
	0x03239BF8 LDR X0, [X0 + 0x798]
	0x03239BFC BL 0x1C16CF4
	0x03239C00 ADRP X0, 0xEE9000
	0x03239C04 LDR X0, [X0 + 0x7A0]
	0x03239C08 BL 0x1C16CF4
	0x03239C0C MOVZ W8, 0x1
	0x03239C10 STRB W8, [X21 + 0x3FC]
	0x03239C14 CBZ X19, 0x3239C30
	0x03239C18 ADRP X8, 0xEE9000
	0x03239C1C LDR X8, [X8 + 0x798]
	0x03239C20 LDR X1, [X8]
	0x03239C24 LDR X8, [X19]
	0x03239C28 CMP X8, X1
	0x03239C2C B.NE 0x3239E64
	0x03239C30 ADRP X8, 0xEE9000
	0x03239C34 LDR X8, [X8 + 0x7A0]
	0x03239C38 LDR X0, [X8]
	0x03239C3C BL 0x1C16F10
	0x03239C40 MOV X1, X22
	0x03239C44 MOV X2, X19
	0x03239C48 MOV X3, X20
	0x03239C4C MOV W4, W24
	0x03239C50 MOV X5, X25
	0x03239C54 MOV W6, W23
	0x03239C58 MOV X7, X31
	0x03239C5C MOV X21, X0
	0x03239C60 BL 0x3245DD8
	0x03239C64 CBZ X19, 0x3239CB0
	0x03239C68 LDRB W9, [X19 + 0x38]
	0x03239C6C LDP W23, W8, [X19 + 0x30]
	0x03239C70 CMP W9, 0x0
	0x03239C74 CSET W24, NE
	0x03239C78 SUBS W26, W8, 0x10
	0x03239C7C B.LT 0x3239CBC
	0x03239C80 CBZ X21, 0x3239E60
	0x03239C84 ASRV W1, W23, W26
	0x03239C88 MOV X0, X21
	0x03239C8C MOV X2, X31
	0x03239C90 BL 0x3245EF0
	0x03239C94 TBNZ X0, 0x0, 0x3239CC4
	0x03239C98 MOVZ W2, 0x1
	0x03239C9C MOV X0, X22
	0x03239CA0 MOV X1, X19
	0x03239CA4 MOV X3, X31
	0x03239CA8 BL 0x3245300
	0x03239CAC B 0x3239CC4
	0x03239CB0 MOV W23, W31
	0x03239CB4 MOV W24, W31
	0x03239CB8 MOVN W8, 0x0
	0x03239CBC MOV W26, W8
	0x03239CC0 CBZ X21, 0x3239E60
	0x03239CC4 MOV W8, W24
	0x03239CC8 MOV W25, W26
	0x03239CCC MOV W24, W8
	0x03239CD0 MOV X0, X21
	0x03239CD4 MOV X1, X31
	0x03239CD8 BL 0x3245F08
	0x03239CDC TBZ X0, 0x0, 0x3239DFC
	0x03239CE0 MOV X0, X21
	0x03239CE4 MOV X1, X31
	0x03239CE8 BL 0x3245F18
	0x03239CEC SXTB W1, W0
	0x03239CF0 TBZ X25, 0x1F, 0x3239D14
	0x03239CF4 CMP W1, 0x2B
	0x03239CF8 B.EQ 0x3239D58
	0x03239CFC TBZ X1, 0x1F, 0x3239D90
	0x03239D00 MOV X0, X21
	0x03239D04 MOV X2, X31
	0x03239D08 BL 0x3245F4C
	0x03239D0C TBNZ X0, 0x0, 0x3239CD0
	0x03239D10 B 0x3239DFC
	0x03239D14 TBNZ X1, 0x1F, 0x3239D40
	0x03239D18 LDR X8, [X22 + 0x40]
	0x03239D1C CBZ X8, 0x3239E60
	0x03239D20 LDR W9, [X8 + 0x18]
	0x03239D24 CMP W9, W1, UXTB
	0x03239D28 B.LS 0x3239E6C

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X25, 0x11A4000
	012 Move W8, [X25+1015]
	013 Move W19, W5
	014 Move X24, X4
	015 Move W20, W3
	016 Move W21, W2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xEE9000
	024 Move X0, [X0+2096]
	025 Call 0x1C17CF4
	026 Move X0, 0xEEA000
	027 Move X0, [X0+760]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1015], W8
	031 Compare X22, 0
	032 JumpIfEqual {96}
	033 Compare X24, 0
	034 JumpIfEqual {96}
	035 Move TEMP, X20
	036 And TEMP, TEMP, -2147483648
	037 Compare TEMP, -2147483648
	038 JumpIfEqual {117}
	039 Move TEMP, X21
	040 And TEMP, TEMP, -2147483648
	041 Compare TEMP, -2147483648
	042 JumpIfEqual {117}
	043 Move W8, [X22+16]
	044 Subtract W8, W8, W21
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move TEMP, X19
	047 And TEMP, TEMP, -2147483648
	048 Compare TEMP, -2147483648
	049 JumpIfEqual {85}
	050 Move W8, [X24+24]
	051 Subtract W25, W8, W19
	052 Move X26, 0xEEA000
	053 Move X27, 0xEE9000
	054 Move X26, [X26+760]
	055 Move X27, [X27+2096]
	056 Move X0, X31
	057 Call RuntimeHelpers.get_OffsetToStringData
	058 Move X1, [X26]
	059 Move W26, W0
	060 Move X0, X24
	061 Call 0x25FC4C0, X0
	062 Move X2, [X27]
	063 Call 0x2219CF4, X0
	064 Move X8, [X23]
	065 Add X3, X0, W19
	066 Move X0, X23
	067 Move W2, W20
	068 Move X7, [X8+648]
	069 Move X6, [X8+656]
	070 Add X8, X22, W21
	071 Add X1, X8, W26
	072 Move W4, W25
	073 Move X20, [X31+64]
	074 Move X19, [X31+72]
	075 Move X22, [X31+48]
	076 Move X21, [X31+56]
	077 Move X24, [X31+32]
	078 Move X23, [X31+40]
	079 Move X26, [X31+16]
	080 Move X25, [X31+24]
	081 Move X5, X31
	082 Move X30, [X31+80]
	083 Move X27, [X31+88]
	084 CallNoReturn X7
	085 Move X0, 0xEC3000
	086 Move X0, [X0+1888]
	087 Call 0x1C17D08
	088 Call 0x1C17F10
	089 Move X19, X0
	090 Move X0, 0xEEA000
	091 Move X0, [X0+768]
	092 Call 0x1C17D08
	093 Move X20, X0
	094 Move X0, 0xEE3000
	095 Move X0, [X0+1632]
	096 Move X8, 0xEEA000
	097 Move X9, 0xEE4000
	098 Move X8, [X8+776]
	099 Move X9, [X9+3264]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 NotImplemented "Instruction CSEL not yet implemented."
	102 Call 0x1C17D08
	103 Move X19, X0
	104 Move X0, 0xEC0000
	105 Move X0, [X0+1320]
	106 Call 0x1C17D08
	107 Call 0x1C17F10
	108 Move X20, X0
	109 Move X0, 0xEEA000
	110 Move X0, [X0+736]
	111 Call 0x1C17D08
	112 Move X2, X0
	113 Move X0, X20
	114 Move X1, X19
	115 Move X3, X31
	116 Call ArgumentNullException..ctor, X0, X1, X2
	117 Move X8, 0xEEA000
	118 Move X9, 0xEEA000
	119 Move X8, [X8+784]
	120 Move X9, [X9+792]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 NotImplemented "Instruction CSEL not yet implemented."
	123 Call 0x1C17D08
	124 Move X19, X0
	125 Move X0, 0xEC3000
	126 Move X0, [X0+1888]
	127 Call 0x1C17D08
	128 Call 0x1C17F10
	129 Move X20, X0
	130 Move X0, 0xEE3000
	131 Move X0, [X0+1648]
	132 Call 0x1C17D08
	133 Move X2, X0
	134 Move X0, X20
	135 Move X1, X19
	136 Move X3, X31
	137 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	138 Move X0, 0xEEA000
	139 Move X0, [X0+1864]
	140 Call 0x1C17D08
	141 Move X1, X0
	142 Move X0, X20
	143 Call 0x1C17DEC
	144 Move X0, 0xEC3000
	145 Move X0, [X0+1888]
	146 Call 0x1C17D08
	147 Call 0x1C17F10
	148 Move X19, X0
	149 Move X0, 0xEE4000
	150 Move X0, [X0+3264]
	151 Call 0x1C17D08
	152 Move X20, X0
	153 Move X0, 0xEEA000
	154 Move X0, [X0+264]
	155 Call 0x1C17D08
	156 Move X2, X0
	157 Move X0, X19
	158 Move X1, X20
	159 Move X3, X31
	160 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	161 Move X0, 0xEEA000
	162 Move X0, [X0+1864]
	163 Call 0x1C17D08
	164 Move X1, X0
	165 Move X0, X19
	166 Call 0x1C17DEC

Method: System.Int32 GetBytes(System.Char[] chars, System.Int32 charIndex, System.Int32 charCount, System.Byte[] bytes, System.Int32 byteIndex)

Disassembly:
	0x03239D2C ADD X8, X8, W1, UXTB
	0x00000000 INVALID
	0x03239D34 TBZ X8, 0x1F, 0x3239DAC
	0x03239D38 CMP W1, 0x2D
	0x03239D3C B.EQ 0x3239D64
	0x03239D40 MOV X0, X21
	0x03239D44 MOV X2, X31
	0x03239D48 BL 0x3245F4C
	0x03239D4C MOVN W25, 0x0
	0x03239D50 TBNZ X0, 0x0, 0x3239CD0
	0x03239D54 B 0x3239DFC
	0x03239D58 MOV W25, W31
	0x03239D5C MOVZ W8, 0x1
	0x03239D60 B 0x3239CCC
	0x03239D64 MOV W8, W31
	0x03239D68 MOVN W25, 0x0
	0x03239D6C TBZ X24, 0x0, 0x3239CCC
	0x03239D70 MOVZ W1, 0x2B
	0x03239D74 MOV X0, X21
	0x03239D78 MOV X2, X31
	0x03239D7C BL 0x3245EF0
	0x03239D80 MOVN W25, 0x0
	0x03239D84 MOVZ W8, 0x1
	0x03239D88 TBNZ X0, 0x0, 0x3239CCC
	0x03239D8C B 0x3239E54
	0x03239D90 AND W1, W1, 0xFF
	0x03239D94 MOV W26, W25
	0x03239D98 MOV X0, X21
	0x03239D9C MOV X2, X31
	0x03239DA0 BL 0x3245EF0
	0x03239DA4 TBNZ X0, 0x0, 0x3239CC4
	0x03239DA8 B 0x3239DD8
	0x03239DAC AND W8, W8, 0xFF
	0x03239DB0 ADD W26, W25, 0x6
	0x03239DB4 MOV W24, W31
	0x03239DB8 CMP W26, 0x10
	0x03239DBC ORR W23, W8, W23, 0x6
	0x03239DC0 B.LT 0x3239CC4
	0x03239DC4 SUB W26, W25, 0xA
	0x03239DC8 ASRV W8, W23, W26
	0x03239DCC MOV W24, W31
	0x03239DD0 AND W1, W8, 0xFFFF
	0x03239DD4 B 0x3239D98
	0x03239DD8 TBNZ X26, 0x1F, 0x3239DF8
	0x03239DDC MOVZ W1, 0x1
	0x03239DE0 MOV X0, X21
	0x03239DE4 MOV X2, X31
	0x03239DE8 BL 0x3245EF8
	0x03239DEC ADD W25, W26, 0x10
	0x03239DF0 CBNZ X20, 0x3239E00
	0x03239DF4 B 0x3239E38
	0x03239DF8 MOV W25, W26
	0x03239DFC CBZ X20, 0x3239E38
	0x03239E00 CBZ X19, 0x3239E38
	0x03239E04 LDRB W8, [X19 + 0x28]
	0x03239E08 CBZ W8, 0x3239E1C
	0x03239E0C MOVI D0, 0xFFFFFFFF00000000
	0x03239E10 MOV W8, W31
	0x03239E14 STR D0, [X19 + 0x30]
	0x03239E18 B 0x3239E24
	0x03239E1C AND W8, W24, 0x1
	0x03239E20 STP W23, W25, [X19 + 0x30]
	0x03239E24 MOV X0, X21
	0x03239E28 MOV X1, X31
	0x03239E2C STRB W8, [X19 + 0x38]
	0x03239E30 BL 0x3245F3C
	0x03239E34 STR W0, [X19 + 0x2C]
	0x03239E38 LDR W0, [X21 + 0x28]
	0x03239E3C LDP X20, X19, [X31 + 0x40]
	0x03239E40 LDP X22, X21, [X31 + 0x30]
	0x03239E44 LDP X24, X23, [X31 + 0x20]
	0x03239E48 LDP X26, X25, [X31 + 0x10]
	0x03239E4C LDR X30, [X31], #0x50
	0x03239E50 RET
	0x03239E54 MOVZ W24, 0x1
	0x03239E58 CBNZ X20, 0x3239E00
	0x03239E5C B 0x3239E38
	0x03239E60 BL 0x1C16F20
	0x03239E64 MOV X0, X19
	0x03239E68 BL 0x1C171E0
	0x03239E6C BL 0x1C16F28
	0x03239E70 STP X30, X21, [X31 - 0x20]!
	0x03239E74 STP X20, X19, [X31 + 0x10]
	0x03239E78 ADRP X20, 0x11A3000
	0x03239E7C ADRP X21, 0xEE9000
	0x03239E80 LDRB W8, [X20 + 0x3FD]
	0x03239E84 LDR X21, [X21 + 0x798]
	0x03239E88 MOV X19, X0
	0x03239E8C TBNZ X8, 0x0, 0x3239EA4
	0x03239E90 ADRP X0, 0xEE9000
	0x03239E94 LDR X0, [X0 + 0x798]
	0x03239E98 BL 0x1C16CF4
	0x03239E9C MOVZ W8, 0x1
	0x03239EA0 STRB W8, [X20 + 0x3FD]
	0x03239EA4 LDR X0, [X21]
	0x03239EA8 BL 0x1C16F10
	0x03239EAC MOV X1, X19
	0x03239EB0 MOV X2, X31
	0x03239EB4 MOV X20, X0
	0x03239EB8 BL 0x33FCA64
	0x03239EBC MOV X0, X20
	0x03239EC0 LDP X20, X19, [X31 + 0x10]
	0x03239EC4 LDP X30, X21, [X31], #0x20
	0x03239EC8 RET
	0x03239ECC MOV X2, X31
	0x03239ED0 B 0x33FCA64
	0x03239ED4 STP X30, X21, [X31 - 0x20]!
	0x03239ED8 STP X20, X19, [X31 + 0x10]
	0x03239EDC ADRP X20, 0x11A3000
	0x03239EE0 ADRP X21, 0xEE9000
	0x03239EE4 LDRB W8, [X20 + 0x3FE]
	0x03239EE8 LDR X21, [X21 + 0x788]
	0x03239EEC MOV X19, X0
	0x03239EF0 TBNZ X8, 0x0, 0x3239F08
	0x03239EF4 ADRP X0, 0xEE9000
	0x03239EF8 LDR X0, [X0 + 0x788]
	0x03239EFC BL 0x1C16CF4
	0x03239F00 MOVZ W8, 0x1
	0x03239F04 STRB W8, [X20 + 0x3FE]
	0x03239F08 LDR X0, [X21]
	0x03239F0C BL 0x1C16F10
	0x03239F10 MOV X1, X19
	0x03239F14 MOV X20, X0
	0x03239F18 BL 0x322EC5C
	0x03239F1C MOV X0, X20
	0x03239F20 LDP X20, X19, [X31 + 0x10]
	0x03239F24 LDP X30, X21, [X31], #0x20
	0x03239F28 RET
	0x03239F2C B 0x322EC5C
	0x03239F30 STR X30, [X31 - 0x20]!
	0x03239F34 STP X20, X19, [X31 + 0x10]
	0x03239F38 TBNZ X1, 0x1F, 0x3239F64
	0x03239F3C MOV W8, W1
	0x03239F40 UBFM X8, X8, 0x3F, 0x3E
	0x03239F44 ADD X8, X8, W1, UXTW
	0x03239F48 ORR W9, W31, 0x7FFFFFFE
	0x03239F4C CMP X8, X9
	0x03239F50 B.CS 0x3239F94
	0x03239F54 LDP X20, X19, [X31 + 0x10]
	0x03239F58 ADD W0, W8, 0x2
	0x03239F5C LDR X30, [X31], #0x20
	0x03239F60 RET
	0x03239F64 ADRP X0, 0xEC2000
	0x03239F68 LDR X0, [X0 + 0x760]
	0x03239F6C BL 0x1C16D08
	0x03239F70 BL 0x1C16F10
	0x03239F74 MOV X19, X0
	0x03239F78 ADRP X0, 0xEE9000
	0x03239F7C LDR X0, [X0 + 0x310]
	0x03239F80 BL 0x1C16D08
	0x03239F84 MOV X20, X0
	0x03239F88 ADRP X0, 0xEE2000
	0x03239F8C LDR X0, [X0 + 0x670]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x11A4000
	011 Move W8, [X25+1016]
	012 Move W20, W5
	013 Move X23, X4
	014 Move W19, W3
	015 Move W21, W2
	016 Move X24, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xEE9000
	023 Move X0, [X0+2096]
	024 Call 0x1C17CF4
	025 Move X0, 0xEEA000
	026 Move X0, [X0+760]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+1016], W8
	030 Compare X24, 0
	031 JumpIfEqual {106}
	032 Compare X23, 0
	033 JumpIfEqual {106}
	034 Move TEMP, X19
	035 And TEMP, TEMP, -2147483648
	036 Compare TEMP, -2147483648
	037 JumpIfEqual {127}
	038 Move TEMP, X21
	039 And TEMP, TEMP, -2147483648
	040 Compare TEMP, -2147483648
	041 JumpIfEqual {127}
	042 Move W8, [X24+24]
	043 Subtract W9, W8, W21
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move TEMP, X20
	046 And TEMP, TEMP, -2147483648
	047 Compare TEMP, -2147483648
	048 JumpIfEqual {95}
	049 Move W9, [X23+24]
	050 Subtract W25, W9, W20
	051 Compare W19, 0
	052 JumpIfEqual {84}
	053 Move X9, 0xEEA000
	054 Move X9, [X9+760]
	055 Move X26, 0xEE9000
	056 Move X26, [X26+2096]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X1, [X9]
	059 Add X9, X24, 32
	060 Move X0, X23
	061 NotImplemented "Instruction CSEL not yet implemented."
	062 Call 0x25FC4C0, X0
	063 Move X2, [X26]
	064 Call 0x2219CF4, X0
	065 Move X8, [X22]
	066 Add X1, X24, W21
	067 Add X3, X0, W20
	068 Move X0, X22
	069 Move X7, [X8+648]
	070 Move X6, [X8+656]
	071 Move W2, W19
	072 Move W4, W25
	073 Move X20, [X31+64]
	074 Move X19, [X31+72]
	075 Move X22, [X31+48]
	076 Move X21, [X31+56]
	077 Move X24, [X31+32]
	078 Move X23, [X31+40]
	079 Move X26, [X31+16]
	080 Move X25, [X31+24]
	081 Move X5, X31
	082 Move X30, [X31+80]
	083 CallNoReturn X7
	084 Move X20, [X31+64]
	085 Move X19, [X31+72]
	086 Move X22, [X31+48]
	087 Move X21, [X31+56]
	088 Move X24, [X31+32]
	089 Move X23, [X31+40]
	090 Move X26, [X31+16]
	091 Move X25, [X31+24]
	092 Move W0, W31
	093 Move X30, [X31+80]
	094 Return X0
	095 Move X0, 0xEC3000
	096 Move X0, [X0+1888]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X19, X0
	100 Move X0, 0xEEA000
	101 Move X0, [X0+768]
	102 Call 0x1C17D08
	103 Move X20, X0
	104 Move X0, 0xEE3000
	105 Move X0, [X0+1632]
	106 Move X8, 0xEEA000
	107 Move X9, 0xEEA000
	108 Move X8, [X8+776]
	109 Move X9, [X9+728]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction CSEL not yet implemented."
	112 Call 0x1C17D08
	113 Move X19, X0
	114 Move X0, 0xEC0000
	115 Move X0, [X0+1320]
	116 Call 0x1C17D08
	117 Call 0x1C17F10
	118 Move X20, X0
	119 Move X0, 0xEEA000
	120 Move X0, [X0+736]
	121 Call 0x1C17D08
	122 Move X2, X0
	123 Move X0, X20
	124 Move X1, X19
	125 Move X3, X31
	126 Call ArgumentNullException..ctor, X0, X1, X2
	127 Move X8, 0xEEA000
	128 Move X9, 0xEEA000
	129 Move X8, [X8+784]
	130 Move X9, [X9+792]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 NotImplemented "Instruction CSEL not yet implemented."
	133 Call 0x1C17D08
	134 Move X19, X0
	135 Move X0, 0xEC3000
	136 Move X0, [X0+1888]
	137 Call 0x1C17D08
	138 Call 0x1C17F10
	139 Move X20, X0
	140 Move X0, 0xEE3000
	141 Move X0, [X0+1648]
	142 Call 0x1C17D08
	143 Move X2, X0
	144 Move X0, X20
	145 Move X1, X19
	146 Move X3, X31
	147 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	148 Move X0, 0xEEA000
	149 Move X0, [X0+1872]
	150 Call 0x1C17D08
	151 Move X1, X0
	152 Move X0, X20
	153 Call 0x1C17DEC
	154 Move X0, 0xEC3000
	155 Move X0, [X0+1888]
	156 Call 0x1C17D08
	157 Call 0x1C17F10
	158 Move X19, X0
	159 Move X0, 0xEEA000
	160 Move X0, [X0+728]
	161 Call 0x1C17D08
	162 Move X20, X0
	163 Move X0, 0xEEA000
	164 Move X0, [X0+224]
	165 Call 0x1C17D08
	166 Move X2, X0
	167 Move X0, X19
	168 Move X1, X20
	169 Move X3, X31
	170 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	171 Move X0, 0xEEA000
	172 Move X0, [X0+1872]
	173 Call 0x1C17D08
	174 Move X1, X0
	175 Move X0, X19
	176 Call 0x1C17DEC

Method: System.Int32 GetBytes(System.Char* chars, System.Int32 charCount, System.Byte* bytes, System.Int32 byteCount)

Disassembly:
	0x03239F90 B 0x3239FC0
	0x03239F94 ADRP X0, 0xEC2000
	0x03239F98 LDR X0, [X0 + 0x760]
	0x03239F9C BL 0x1C16D08
	0x03239FA0 BL 0x1C16F10
	0x03239FA4 MOV X19, X0
	0x03239FA8 ADRP X0, 0xEE9000
	0x03239FAC LDR X0, [X0 + 0x310]
	0x03239FB0 BL 0x1C16D08
	0x03239FB4 MOV X20, X0
	0x03239FB8 ADRP X0, 0xEE9000
	0x03239FBC LDR X0, [X0 + 0x420]
	0x03239FC0 BL 0x1C16D08
	0x03239FC4 MOV X2, X0
	0x03239FC8 MOV X0, X19
	0x03239FCC MOV X1, X20
	0x03239FD0 MOV X3, X31
	0x03239FD4 BL 0x3311888
	0x03239FD8 ADRP X0, 0xEE9000
	0x03239FDC LDR X0, [X0 + 0x7A8]
	0x03239FE0 BL 0x1C16D08
	0x03239FE4 MOV X1, X0
	0x03239FE8 MOV X0, X19
	0x03239FEC BL 0x1C16DEC
	0x03239FF0 TBNZ X1, 0x1F, 0x323A000
	0x03239FF4 CMP W1, 0x0
	0x03239FF8 CSINC W0, W1, W31, NE
	0x03239FFC RET
	0x0323A000 STR X30, [X31 - 0x20]!
	0x0323A004 STP X20, X19, [X31 + 0x10]
	0x0323A008 ADRP X0, 0xEC1000
	0x0323A00C LDR X0, [X0 + 0x760]
	0x0323A010 BL 0x1C16D08
	0x0323A014 BL 0x1C16F10
	0x0323A018 MOV X19, X0
	0x0323A01C ADRP X0, 0xEE8000
	0x0323A020 LDR X0, [X0 + 0x328]
	0x0323A024 BL 0x1C16D08
	0x0323A028 MOV X20, X0
	0x0323A02C ADRP X0, 0xEE1000
	0x0323A030 LDR X0, [X0 + 0x670]
	0x0323A034 BL 0x1C16D08
	0x0323A038 MOV X2, X0
	0x0323A03C MOV X0, X19
	0x0323A040 MOV X1, X20
	0x0323A044 MOV X3, X31
	0x0323A048 BL 0x3311888
	0x0323A04C ADRP X0, 0xEE8000
	0x0323A050 LDR X0, [X0 + 0x7B0]
	0x0323A054 BL 0x1C16D08
	0x0323A058 MOV X1, X0
	0x0323A05C MOV X0, X19
	0x0323A060 BL 0x1C16DEC
	0x0323A064 STR X30, [X31 - 0x20]!
	0x0323A068 STP X20, X19, [X31 + 0x10]
	0x0323A06C ADRP X19, 0x11A2000
	0x0323A070 ADRP X20, 0xEE8000
	0x0323A074 LDRB W8, [X19 + 0x3FF]
	0x0323A078 LDR X20, [X20 + 0x728]
	0x0323A07C TBNZ X8, 0x0, 0x323A094
	0x0323A080 ADRP X0, 0xEE8000
	0x0323A084 LDR X0, [X0 + 0x728]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {24}
	006 Compare X3, 0
	007 JumpIfEqual {24}
	008 Move TEMP, X4
	009 And TEMP, TEMP, -2147483648
	010 Compare TEMP, -2147483648
	011 JumpIfEqual {45}
	012 Move TEMP, X2
	013 And TEMP, TEMP, -2147483648
	014 Compare TEMP, -2147483648
	015 JumpIfEqual {45}
	016 Move X8, [X0]
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X5, X31
	020 Move X7, [X8+648]
	021 Move X6, [X8+656]
	022 Move X30, [X31+32]
	023 CallNoReturn X7
	024 Move X8, 0xEEA000
	025 Move X9, 0xEEA000
	026 Move X8, [X8+728]
	027 Move X9, [X9+776]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSEL not yet implemented."
	030 Call 0x1C17D08
	031 Move X19, X0
	032 Move X0, 0xEC0000
	033 Move X0, [X0+1320]
	034 Call 0x1C17D08
	035 Call 0x1C17F10
	036 Move X20, X0
	037 Move X0, 0xEEA000
	038 Move X0, [X0+736]
	039 Call 0x1C17D08
	040 Move X2, X0
	041 Move X0, X20
	042 Move X1, X19
	043 Move X3, X31
	044 Call ArgumentNullException..ctor, X0, X1, X2
	045 Move X8, 0xEE9000
	046 Move X9, 0xEE9000
	047 Move X8, [X8+808]
	048 Move X9, [X9+784]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 Call 0x1C17D08
	052 Move X19, X0
	053 Move X0, 0xEC2000
	054 Move X0, [X0+1888]
	055 Call 0x1C17D08
	056 Call 0x1C17F10
	057 Move X20, X0
	058 Move X0, 0xEE2000
	059 Move X0, [X0+1648]
	060 Call 0x1C17D08
	061 Move X2, X0
	062 Move X0, X20
	063 Move X1, X19
	064 Move X3, X31
	065 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	066 Move X0, 0xEE9000
	067 Move X0, [X0+1880]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X20
	071 Call 0x1C17DEC

Method: System.Int32 GetCharCount(System.Byte[] bytes, System.Int32 index, System.Int32 count)

Disassembly:
	0x0323A088 BL 0x1C16CF4
	0x0323A08C MOVZ W8, 0x1
	0x0323A090 STRB W8, [X19 + 0x3FF]
	0x0323A094 LDR X0, [X20]
	0x0323A098 BL 0x1C16F10
	0x0323A09C MOVZ W1, 0xFDE8
	0x0323A0A0 MOV X2, X31
	0x0323A0A4 MOV X19, X0
	0x0323A0A8 BL 0x3241B10
	0x0323A0AC MOV X0, X19
	0x0323A0B0 STRB W31, [X19 + 0x50]
	0x0323A0B4 BL 0x323839C
	0x0323A0B8 LDR X8, [X20]
	0x0323A0BC LDR X8, [X8 + 0xB8]
	0x0323A0C0 STR X19, [X8]
	0x0323A0C4 LDP X20, X19, [X31 + 0x10]
	0x0323A0C8 LDR X30, [X31], #0x20
	0x0323A0CC RET
	0x0323A0D0 MOV X8, X0
	0x0323A0D4 LDR X0, [X0 + 0x18]
	0x0323A0D8 MOVI D0, 0xFFFFFFFF00000000
	0x0323A0DC STR D0, [X8 + 0x30]
	0x0323A0E0 STRB W31, [X8 + 0x38]
	0x0323A0E4 CBZ X0, 0x323A0F4
	0x0323A0E8 LDR X8, [X0]
	0x0323A0EC LDP X2, X1, [X8 + 0x198]
	0x0323A0F0 BR X2
	0x0323A0F4 RET
	0x0323A0F8 LDR W8, [X0 + 0x34]
	0x0323A0FC ADDS W31, W8, 0x1
	0x0323A100 CSET W0, NE
	0x0323A104 RET
	0x0323A108 MOV X8, X0
	0x0323A10C LDR X0, [X0 + 0x18]
	0x0323A110 MOVI D0, 0xFFFFFFFF00000000
	0x0323A114 STR D0, [X8 + 0x38]
	0x0323A118 CBZ X0, 0x323A128
	0x0323A11C LDR X8, [X0]
	0x0323A120 LDP X2, X1, [X8 + 0x1C8]
	0x0323A124 BR X2
	0x0323A128 RET
	0x0323A12C STR X30, [X31 - 0x20]!
	0x0323A130 STP X20, X19, [X31 + 0x10]
	0x0323A134 ADRP X19, 0x11A2000
	0x0323A138 ADRP X20, 0xEE8000
	0x0323A13C LDRB W8, [X19 + 0x400]
	0x0323A140 LDR X20, [X20 + 0x7B8]
	0x0323A144 TBNZ X8, 0x0, 0x323A15C
	0x0323A148 ADRP X0, 0xEE8000
	0x0323A14C LDR X0, [X0 + 0x7B8]
	0x0323A150 BL 0x1C16CF4
	0x0323A154 MOVZ W8, 0x1
	0x0323A158 STRB W8, [X19 + 0x400]
	0x0323A15C LDR X0, [X20]
	0x0323A160 BL 0x1C16F10
	0x0323A164 MOVN W8, 0x0
	0x0323A168 MOV X1, X31
	0x0323A16C MOV X19, X0
	0x0323A170 STR W8, [X0 + 0x24]
	0x0323A174 BL 0x33FD484
	0x0323A178 MOV X0, X19
	0x0323A17C LDP X20, X19, [X31 + 0x10]
	0x0323A180 LDR X30, [X31], #0x20
	0x0323A184 RET
	0x0323A188 MOVN W8, 0x0
	0x0323A18C MOV X1, X31
	0x0323A190 STR W8, [X0 + 0x24]
	0x0323A194 B 0x33FD484
	0x0323A198 MOVZ W0, 0x1
	0x0323A19C RET
	0x0323A1A0 STR X30, [X31 - 0x20]!
	0x0323A1A4 STP X20, X19, [X31 + 0x10]
	0x0323A1A8 ADRP X20, 0x11A2000
	0x0323A1AC LDRB W8, [X20 + 0x401]
	0x0323A1B0 MOV X19, X1
	0x0323A1B4 TBNZ X8, 0x0, 0x323A1CC
	0x0323A1B8 ADRP X0, 0xEE8000
	0x0323A1BC LDR X0, [X0 + 0x720]
	0x0323A1C0 BL 0x1C16CF4
	0x0323A1C4 MOVZ W8, 0x1
	0x0323A1C8 STRB W8, [X20 + 0x401]
	0x0323A1CC CBZ X19, 0x323A1EC
	0x0323A1D0 ADRP X8, 0xEE8000
	0x0323A1D4 LDR X8, [X8 + 0x720]
	0x0323A1D8 LDR X9, [X19]
	0x0323A1DC LDR X8, [X8]
	0x0323A1E0 CMP X9, X8
	0x0323A1E4 CSET W0, EQ
	0x0323A1E8 B 0x323A1F0
	0x0323A1EC MOV W0, W31
	0x0323A1F0 LDP X20, X19, [X31 + 0x10]
	0x0323A1F4 LDR X30, [X31], #0x20
	0x0323A1F8 RET
	0x0323A1FC MOVZ W0, 0x3D8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {37}
	006 Move TEMP, X3
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {54}
	010 Move TEMP, X2
	011 And TEMP, TEMP, -2147483648
	012 Compare TEMP, -2147483648
	013 JumpIfEqual {54}
	014 Move W8, [X1+24]
	015 Subtract W9, W8, W2
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Compare W3, 0
	018 JumpIfEqual {32}
	019 Move X9, [X0]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Add X10, X1, 32
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X5, [X9+712]
	025 Move X4, [X9+720]
	026 NotImplemented "Instruction CSEL not yet implemented."
	027 Add X1, X8, W2
	028 Move W2, W3
	029 Move X3, X31
	030 Move X30, [X31+32]
	031 CallNoReturn X5
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move W0, W31
	035 Move X30, [X31+32]
	036 Return X0
	037 Move X0, 0xEBF000
	038 Move X0, [X0+1320]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0xEE9000
	043 Move X0, [X0+776]
	044 Call 0x1C17D08
	045 Move X20, X0
	046 Move X0, 0xEE9000
	047 Move X0, [X0+736]
	048 Call 0x1C17D08
	049 Move X2, X0
	050 Move X0, X19
	051 Move X1, X20
	052 Move X3, X31
	053 Call ArgumentNullException..ctor, X0, X1, X2
	054 Move X8, 0xEE2000
	055 Move X9, 0xEC5000
	056 Move X8, [X8+1608]
	057 Move X9, [X9+304]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 Call 0x1C17D08
	061 Move X19, X0
	062 Move X0, 0xEC2000
	063 Move X0, [X0+1888]
	064 Call 0x1C17D08
	065 Call 0x1C17F10
	066 Move X20, X0
	067 Move X0, 0xEE2000
	068 Move X0, [X0+1648]
	069 Call 0x1C17D08
	070 Move X2, X0
	071 Move X0, X20
	072 Move X1, X19
	073 Move X3, X31
	074 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	075 Move X0, 0xEE9000
	076 Move X0, [X0+1888]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X20
	080 Call 0x1C17DEC
	081 Move X0, 0xEC2000
	082 Move X0, [X0+1888]
	083 Call 0x1C17D08
	084 Call 0x1C17F10
	085 Move X19, X0
	086 Move X0, 0xEE9000
	087 Move X0, [X0+776]
	088 Call 0x1C17D08
	089 Move X20, X0
	090 Move X0, 0xEE9000
	091 Move X0, [X0+224]
	092 Call 0x1C17D08
	093 Move X2, X0
	094 Move X0, X19
	095 Move X1, X20
	096 Move X3, X31
	097 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	098 Move X0, 0xEE9000
	099 Move X0, [X0+1888]
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X19
	103 Call 0x1C17DEC

Method: System.Int32 GetCharCount(System.Byte* bytes, System.Int32 count)

Disassembly:
	0x0323A200 RET
	0x0323A204 STR X30, [X31 - 0x10]!
	0x0323A208 CBZ X1, 0x323A238
	0x0323A20C LDR W8, [X1 + 0x18]
	0x0323A210 CBZ W8, 0x323A23C
	0x0323A214 LDRB W8, [X1 + 0x20]
	0x0323A218 STRH W8, [X0 + 0x20]
	0x0323A21C CBZ W8, 0x323A228
	0x0323A220 MOVI V0.2S, 0x1
	0x0323A224 STUR D0, [X0 + 0x24]
	0x0323A228 CMP W8, 0x0
	0x0323A22C CSET W0, NE
	0x0323A230 LDR X30, [X31], #0x10
	0x0323A234 RET
	0x0323A238 BL 0x1C16F20
	0x0323A23C BL 0x1C16F28
	0x0323A240 LDR W8, [X0 + 0x24]
	0x0323A244 SUBS W8, W8, 0x1
	0x0323A248 STR W8, [X0 + 0x24]
	0x0323A24C B.LT 0x323A258
	0x0323A250 LDRH W0, [X0 + 0x20]
	0x0323A254 RET
	0x0323A258 MOV W0, W31
	0x0323A25C RET
	0x0323A260 MOVN W8, 0x0
	0x0323A264 STR W8, [X0 + 0x24]
	0x0323A268 STR X31, [X0 + 0x10]
	0x0323A26C RET
	0x0323A270 STP X30, X19, [X31 - 0x10]!
	0x0323A274 CBZ X1, 0x323A298
	0x0323A278 LDR W8, [X1 + 0x18]
	0x0323A27C CMP W8, 0x1
	0x0323A280 B.NE 0x323A29C
	0x0323A284 LDRB W8, [X1 + 0x20]
	0x0323A288 CMP W8, 0x0
	0x0323A28C CSET W0, NE
	0x0323A290 LDP X30, X19, [X31], #0x10
	0x0323A294 RET
	0x0323A298 BL 0x1C16F20
	0x0323A29C ADRP X0, 0xEC1000
	0x0323A2A0 LDR X0, [X0 + 0x578]
	0x0323A2A4 BL 0x1C16D08
	0x0323A2A8 BL 0x1C16F10
	0x0323A2AC MOV X19, X0
	0x0323A2B0 ADRP X0, 0xEE8000
	0x0323A2B4 LDR X0, [X0 + 0x338]
	0x0323A2B8 BL 0x1C16D08
	0x0323A2BC MOV X1, X0
	0x0323A2C0 MOV X0, X19
	0x0323A2C4 MOV X2, X31
	0x0323A2C8 BL 0x3314A68
	0x0323A2CC ADRP X0, 0xEE8000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {18}
	006 Move TEMP, X2
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {35}
	010 Move X8, [X0]
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X3, X31
	014 Move X5, [X8+712]
	015 Move X4, [X8+720]
	016 Move X30, [X31+32]
	017 CallNoReturn X5
	018 Move X0, 0xEBF000
	019 Move X0, [X0+1320]
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X19, X0
	023 Move X0, 0xEE9000
	024 Move X0, [X0+776]
	025 Call 0x1C17D08
	026 Move X20, X0
	027 Move X0, 0xEE9000
	028 Move X0, [X0+736]
	029 Call 0x1C17D08
	030 Move X2, X0
	031 Move X0, X19
	032 Move X1, X20
	033 Move X3, X31
	034 Call ArgumentNullException..ctor, X0, X1, X2
	035 Move X0, 0xEC2000
	036 Move X0, [X0+1888]
	037 Call 0x1C17D08
	038 Call 0x1C17F10
	039 Move X19, X0
	040 Move X0, 0xEE2000
	041 Move X0, [X0+1608]
	042 Call 0x1C17D08
	043 Move X20, X0
	044 Move X0, 0xEE2000
	045 Move X0, [X0+1648]
	046 Call 0x1C17D08
	047 Move X2, X0
	048 Move X0, X19
	049 Move X1, X20
	050 Move X3, X31
	051 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	052 Move X0, 0xEE9000
	053 Move X0, [X0+1896]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X19
	057 Call 0x1C17DEC

Method: System.Int32 GetChars(System.Byte[] bytes, System.Int32 byteIndex, System.Int32 byteCount, System.Char[] chars, System.Int32 charIndex)

Disassembly:
	0x0323A2D0 LDR X0, [X0 + 0x7C0]
	0x0323A2D4 BL 0x1C16D08
	0x0323A2D8 MOV X1, X0
	0x0323A2DC MOV X0, X19
	0x0323A2E0 BL 0x1C16DEC
	0x0323A2E4 STP X30, X19, [X31 - 0x10]!
	0x0323A2E8 MOVZ W1, 0xFDE9
	0x0323A2EC MOV X2, X31
	0x0323A2F0 MOV X19, X0
	0x0323A2F4 BL 0x3241B10
	0x0323A2F8 STRH W31, [X19 + 0x38]
	0x0323A2FC LDP X30, X19, [X31], #0x10
	0x0323A300 RET
	0x0323A304 STR X30, [X31 - 0x20]!
	0x0323A308 STP X20, X19, [X31 + 0x10]
	0x0323A30C AND W20, W1, 0x1
	0x0323A310 MOVZ W1, 0xFDE9
	0x0323A314 MOV X2, X31
	0x0323A318 MOV X19, X0
	0x0323A31C BL 0x3241B10
	0x0323A320 STRB W20, [X19 + 0x38]
	0x0323A324 STRB W31, [X19 + 0x39]
	0x0323A328 LDP X20, X19, [X31 + 0x10]
	0x0323A32C LDR X30, [X31], #0x20
	0x0323A330 RET
	0x0323A334 STR X30, [X31 - 0x30]!
	0x0323A338 STP X22, X21, [X31 + 0x10]
	0x0323A33C STP X20, X19, [X31 + 0x20]
	0x0323A340 MOV W20, W2
	0x0323A344 AND W21, W2, 0x1
	0x0323A348 AND W22, W1, 0x1
	0x0323A34C MOVZ W1, 0xFDE9
	0x0323A350 MOV X2, X31
	0x0323A354 MOV X19, X0
	0x0323A358 BL 0x3241B10
	0x0323A35C STRB W22, [X19 + 0x38]
	0x0323A360 STRB W21, [X19 + 0x39]
	0x0323A364 TBZ X20, 0x0, 0x323A384
	0x0323A368 LDR X8, [X19]
	0x0323A36C MOV X0, X19
	0x0323A370 LDP X20, X19, [X31 + 0x20]
	0x0323A374 LDP X22, X21, [X31 + 0x10]
	0x0323A378 LDP X2, X1, [X8 + 0x188]
	0x0323A37C LDR X30, [X31], #0x30
	0x0323A380 BR X2
	0x0323A384 LDP X20, X19, [X31 + 0x20]
	0x0323A388 LDP X22, X21, [X31 + 0x10]
	0x0323A38C LDR X30, [X31], #0x30
	0x0323A390 RET
	0x0323A394 STP X30, X21, [X31 - 0x20]!
	0x0323A398 STP X20, X19, [X31 + 0x10]
	0x0323A39C ADRP X20, 0x11A2000
	0x0323A3A0 LDRB W8, [X20 + 0x402]
	0x0323A3A4 MOV X19, X0
	0x0323A3A8 TBNZ X8, 0x0, 0x323A3D8
	0x0323A3AC ADRP X0, 0xEE8000
	0x0323A3B0 LDR X0, [X0 + 0x648]
	0x0323A3B4 BL 0x1C16CF4
	0x0323A3B8 ADRP X0, 0xEE8000
	0x0323A3BC LDR X0, [X0 + 0x368]
	0x0323A3C0 BL 0x1C16CF4
	0x0323A3C4 ADRP X0, 0xEE8000
	0x0323A3C8 LDR X0, [X0 + 0x650]
	0x0323A3CC BL 0x1C16CF4
	0x0323A3D0 MOVZ W8, 0x1
	0x0323A3D4 STRB W8, [X20 + 0x402]
	0x0323A3D8 LDRB W8, [X19 + 0x39]
	0x0323A3DC CBZ W8, 0x323A3FC
	0x0323A3E0 MOV X0, X31
	0x0323A3E4 BL 0x33FFCD0
	0x0323A3E8 STR X0, [X19 + 0x28]
	0x0323A3EC MOV X0, X31
	0x0323A3F0 BL 0x33FD9EC
	0x0323A3F4 STR X0, [X19 + 0x30]
	0x0323A3F8 B 0x323A448
	0x0323A3FC ADRP X8, 0xEE8000
	0x0323A400 LDR X8, [X8 + 0x368]
	0x0323A404 LDR X0, [X8]
	0x0323A408 BL 0x1C16F10
	0x0323A40C ADRP X21, 0xEE8000
	0x0323A410 LDR X21, [X21 + 0x650]
	0x0323A414 MOV X20, X0
	0x0323A418 LDR X1, [X21]
	0x0323A41C BL 0x322F374
	0x0323A420 STR X20, [X19 + 0x28]
	0x0323A424 ADRP X8, 0xEE8000
	0x0323A428 LDR X8, [X8 + 0x648]
	0x0323A42C LDR X0, [X8]
	0x0323A430 BL 0x1C16F10
	0x0323A434 LDR X1, [X21]
	0x0323A438 MOV X2, X31
	0x0323A43C MOV X20, X0
	0x0323A440 BL 0x33FE644
	0x0323A444 STR X20, [X19 + 0x30]
	0x0323A448 LDP X20, X19, [X31 + 0x10]
	0x0323A44C LDP X30, X21, [X31], #0x20
	0x0323A450 RET
	0x0323A454 STR X30, [X31 - 0x20]!
	0x0323A458 STP X20, X19, [X31 + 0x10]
	0x0323A45C CBZ X1, 0x323A4BC
	0x0323A460 TBNZ X3, 0x1F, 0x323A504
	0x0323A464 TBNZ X2, 0x1F, 0x323A504
	0x0323A468 LDR W8, [X1 + 0x18]
	0x0323A46C SUB W9, W8, W2
	0x0323A470 CMP W9, W3
	0x0323A474 B.LT 0x323A570
	0x0323A478 CBZ W3, 0x323A4AC
	0x0323A47C LDR X9, [X0]
	0x0323A480 LDP X20, X19, [X31 + 0x10]
	0x0323A484 ADD X10, X1, 0x20
	0x0323A488 CMP W8, 0x0
	0x0323A48C LDR X5, [X9 + 0x228]
	0x0323A490 LDR X4, [X9 + 0x230]
	0x0323A494 CSEL X8, X31, X10, EQ
	0x0323A498 ADD X1, X8, W2, 0x1, SXTW
	0x0323A49C MOV W2, W3
	0x0323A4A0 MOV X3, X31
	0x0323A4A4 LDR X30, [X31], #0x20
	0x0323A4A8 BR X5
	0x0323A4AC LDP X20, X19, [X31 + 0x10]
	0x0323A4B0 MOV W0, W31
	0x0323A4B4 LDR X30, [X31], #0x20
	0x0323A4B8 RET
	0x0323A4BC ADRP X0, 0xEBE000
	0x0323A4C0 LDR X0, [X0 + 0x528]
	0x0323A4C4 BL 0x1C16D08
	0x0323A4C8 BL 0x1C16F10
	0x0323A4CC MOV X19, X0
	0x0323A4D0 ADRP X0, 0xEE8000
	0x0323A4D4 LDR X0, [X0 + 0x2D8]
	0x0323A4D8 BL 0x1C16D08
	0x0323A4DC MOV X20, X0
	0x0323A4E0 ADRP X0, 0xEE8000
	0x0323A4E4 LDR X0, [X0 + 0x2E0]
	0x0323A4E8 BL 0x1C16D08
	0x0323A4EC MOV X2, X0
	0x0323A4F0 MOV X0, X19
	0x0323A4F4 MOV X1, X20
	0x0323A4F8 MOV X3, X31
	0x0323A4FC BL 0x3315F7C
	0x0323A500 B 0x323A5B4
	0x0323A504 ADRP X8, 0xEE1000
	0x0323A508 ADRP X9, 0xEC4000
	0x0323A50C LDR X8, [X8 + 0x648]
	0x0323A510 LDR X9, [X9 + 0x130]
	0x0323A514 CMP W2, 0x0
	0x0323A518 CSEL X0, X9, X8, LT
	0x0323A51C BL 0x1C16D08
	0x0323A520 MOV X19, X0
	0x0323A524 ADRP X0, 0xEC1000
	0x0323A528 LDR X0, [X0 + 0x760]
	0x0323A52C BL 0x1C16D08
	0x0323A530 BL 0x1C16F10

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x11A3000
	011 Move W8, [X25+1017]
	012 Move W20, W5
	013 Move X23, X4
	014 Move W19, W3
	015 Move W21, W2
	016 Move X24, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xEE9000
	023 Move X0, [X0+712]
	024 Call 0x1C17CF4
	025 Move X0, 0xEE9000
	026 Move X0, [X0+720]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+1017], W8
	030 Compare X24, 0
	031 JumpIfEqual {106}
	032 Compare X23, 0
	033 JumpIfEqual {106}
	034 Move TEMP, X19
	035 And TEMP, TEMP, -2147483648
	036 Compare TEMP, -2147483648
	037 JumpIfEqual {127}
	038 Move TEMP, X21
	039 And TEMP, TEMP, -2147483648
	040 Compare TEMP, -2147483648
	041 JumpIfEqual {127}
	042 Move W8, [X24+24]
	043 Subtract W9, W8, W21
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move TEMP, X20
	046 And TEMP, TEMP, -2147483648
	047 Compare TEMP, -2147483648
	048 JumpIfEqual {95}
	049 Move W9, [X23+24]
	050 Subtract W25, W9, W20
	051 Compare W19, 0
	052 JumpIfEqual {84}
	053 Move X9, 0xEE9000
	054 Move X9, [X9+720]
	055 Move X26, 0xEE9000
	056 Move X26, [X26+712]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X1, [X9]
	059 Add X9, X24, 32
	060 Move X0, X23
	061 NotImplemented "Instruction CSEL not yet implemented."
	062 Call Span`1<Char>.op_Implicit, X0
	063 Move X2, [X26]
	064 Call MemoryMarshal.GetReference, X0
	065 Move X8, [X22]
	066 Add X1, X24, W21
	067 Add X3, X0, W20
	068 Move X0, X22
	069 Move X7, [X8+776]
	070 Move X6, [X8+784]
	071 Move W2, W19
	072 Move W4, W25
	073 Move X20, [X31+64]
	074 Move X19, [X31+72]
	075 Move X22, [X31+48]
	076 Move X21, [X31+56]
	077 Move X24, [X31+32]
	078 Move X23, [X31+40]
	079 Move X26, [X31+16]
	080 Move X25, [X31+24]
	081 Move X5, X31
	082 Move X30, [X31+80]
	083 CallNoReturn X7
	084 Move X20, [X31+64]
	085 Move X19, [X31+72]
	086 Move X22, [X31+48]
	087 Move X21, [X31+56]
	088 Move X24, [X31+32]
	089 Move X23, [X31+40]
	090 Move X26, [X31+16]
	091 Move X25, [X31+24]
	092 Move W0, W31
	093 Move X30, [X31+80]
	094 Return X0
	095 Move X0, 0xEC2000
	096 Move X0, [X0+1888]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X19, X0
	100 Move X0, 0xEE9000
	101 Move X0, [X0+792]
	102 Call 0x1C17D08
	103 Move X20, X0
	104 Move X0, 0xEE2000
	105 Move X0, [X0+1632]
	106 Move X8, 0xEE9000
	107 Move X9, 0xEE9000
	108 Move X8, [X8+728]
	109 Move X9, [X9+776]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction CSEL not yet implemented."
	112 Call 0x1C17D08
	113 Move X19, X0
	114 Move X0, 0xEBF000
	115 Move X0, [X0+1320]
	116 Call 0x1C17D08
	117 Call 0x1C17F10
	118 Move X20, X0
	119 Move X0, 0xEE9000
	120 Move X0, [X0+736]
	121 Call 0x1C17D08
	122 Move X2, X0
	123 Move X0, X20
	124 Move X1, X19
	125 Move X3, X31
	126 Call ArgumentNullException..ctor, X0, X1, X2
	127 Move X8, 0xEE9000
	128 Move X9, 0xEE9000
	129 Move X8, [X8+808]
	130 Move X9, [X9+768]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 NotImplemented "Instruction CSEL not yet implemented."
	133 Call 0x1C17D08
	134 Move X19, X0
	135 Move X0, 0xEC2000
	136 Move X0, [X0+1888]
	137 Call 0x1C17D08
	138 Call 0x1C17F10
	139 Move X20, X0
	140 Move X0, 0xEE2000
	141 Move X0, [X0+1648]
	142 Call 0x1C17D08
	143 Move X2, X0
	144 Move X0, X20
	145 Move X1, X19
	146 Move X3, X31
	147 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	148 Move X0, 0xEE9000
	149 Move X0, [X0+1904]
	150 Call 0x1C17D08
	151 Move X1, X0
	152 Move X0, X20
	153 Call 0x1C17DEC
	154 Move X0, 0xEC2000
	155 Move X0, [X0+1888]
	156 Call 0x1C17D08
	157 Call 0x1C17F10
	158 Move X19, X0
	159 Move X0, 0xEE9000
	160 Move X0, [X0+776]
	161 Call 0x1C17D08
	162 Move X20, X0
	163 Move X0, 0xEE9000
	164 Move X0, [X0+224]
	165 Call 0x1C17D08
	166 Move X2, X0
	167 Move X0, X19
	168 Move X1, X20
	169 Move X3, X31
	170 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	171 Move X0, 0xEE9000
	172 Move X0, [X0+1904]
	173 Call 0x1C17D08
	174 Move X1, X0
	175 Move X0, X19
	176 Call 0x1C17DEC

Method: System.Int32 GetChars(System.Byte* bytes, System.Int32 byteCount, System.Char* chars, System.Int32 charCount)

Disassembly:
	0x0323A534 MOV X20, X0
	0x0323A538 ADRP X0, 0xEE1000
	0x0323A53C LDR X0, [X0 + 0x670]
	0x0323A540 BL 0x1C16D08
	0x0323A544 MOV X2, X0
	0x0323A548 MOV X0, X20
	0x0323A54C MOV X1, X19
	0x0323A550 MOV X3, X31
	0x0323A554 BL 0x3311888
	0x0323A558 ADRP X0, 0xEE8000
	0x0323A55C LDR X0, [X0 + 0x7C8]
	0x0323A560 BL 0x1C16D08
	0x0323A564 MOV X1, X0
	0x0323A568 MOV X0, X20
	0x0323A56C BL 0x1C16DEC
	0x0323A570 ADRP X0, 0xEC1000
	0x0323A574 LDR X0, [X0 + 0x760]
	0x0323A578 BL 0x1C16D08
	0x0323A57C BL 0x1C16F10
	0x0323A580 MOV X19, X0
	0x0323A584 ADRP X0, 0xEE8000
	0x0323A588 LDR X0, [X0 + 0x2D8]
	0x0323A58C BL 0x1C16D08
	0x0323A590 MOV X20, X0
	0x0323A594 ADRP X0, 0xEE8000
	0x0323A598 LDR X0, [X0 + 0xE0]
	0x0323A59C BL 0x1C16D08
	0x0323A5A0 MOV X2, X0
	0x0323A5A4 MOV X0, X19
	0x0323A5A8 MOV X1, X20
	0x0323A5AC MOV X3, X31
	0x0323A5B0 BL 0x3311888
	0x0323A5B4 ADRP X0, 0xEE8000
	0x0323A5B8 LDR X0, [X0 + 0x7C8]
	0x0323A5BC BL 0x1C16D08
	0x0323A5C0 MOV X1, X0
	0x0323A5C4 MOV X0, X19
	0x0323A5C8 BL 0x1C16DEC
	0x0323A5CC STR X30, [X31 - 0x20]!
	0x0323A5D0 STP X20, X19, [X31 + 0x10]
	0x0323A5D4 CBZ X1, 0x323A610
	0x0323A5D8 MOV X20, X0
	0x0323A5DC MOV X0, X31
	0x0323A5E0 MOV X19, X1
	0x0323A5E4 BL 0x32C1424
	0x0323A5E8 LDR X8, [X20]
	0x0323A5EC LDR W2, [X19 + 0x10]
	0x0323A5F0 ADD X1, X19, W0, SXTW
	0x0323A5F4 MOV X0, X20
	0x0323A5F8 LDR X5, [X8 + 0x228]
	0x0323A5FC LDR X4, [X8 + 0x230]
	0x0323A600 LDP X20, X19, [X31 + 0x10]
	0x0323A604 MOV X3, X31
	0x0323A608 LDR X30, [X31], #0x20
	0x0323A60C BR X5
	0x0323A610 ADRP X0, 0xEBE000
	0x0323A614 LDR X0, [X0 + 0x528]
	0x0323A618 BL 0x1C16D08
	0x0323A61C BL 0x1C16F10
	0x0323A620 MOV X19, X0
	0x0323A624 ADRP X0, 0xEE2000
	0x0323A628 LDR X0, [X0 + 0xCC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {24}
	006 Compare X3, 0
	007 JumpIfEqual {24}
	008 Move TEMP, X2
	009 And TEMP, TEMP, -2147483648
	010 Compare TEMP, -2147483648
	011 JumpIfEqual {45}
	012 Move TEMP, X4
	013 And TEMP, TEMP, -2147483648
	014 Compare TEMP, -2147483648
	015 JumpIfEqual {45}
	016 Move X8, [X0]
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X5, X31
	020 Move X7, [X8+776]
	021 Move X6, [X8+784]
	022 Move X30, [X31+32]
	023 CallNoReturn X7
	024 Move X8, 0xEE9000
	025 Move X9, 0xEE9000
	026 Move X8, [X8+728]
	027 Move X9, [X9+776]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSEL not yet implemented."
	030 Call 0x1C17D08
	031 Move X19, X0
	032 Move X0, 0xEBF000
	033 Move X0, [X0+1320]
	034 Call 0x1C17D08
	035 Call 0x1C17F10
	036 Move X20, X0
	037 Move X0, 0xEE9000
	038 Move X0, [X0+736]
	039 Call 0x1C17D08
	040 Move X2, X0
	041 Move X0, X20
	042 Move X1, X19
	043 Move X3, X31
	044 Call ArgumentNullException..ctor, X0, X1, X2
	045 Move X8, 0xEE9000
	046 Move X9, 0xEE9000
	047 Move X8, [X8+808]
	048 Move X9, [X9+784]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 Call 0x1C17D08
	052 Move X19, X0
	053 Move X0, 0xEC2000
	054 Move X0, [X0+1888]
	055 Call 0x1C17D08
	056 Call 0x1C17F10
	057 Move X20, X0
	058 Move X0, 0xEE2000
	059 Move X0, [X0+1648]
	060 Call 0x1C17D08
	061 Move X2, X0
	062 Move X0, X20
	063 Move X1, X19
	064 Move X3, X31
	065 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	066 Move X0, 0xEE9000
	067 Move X0, [X0+1912]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X20
	071 Call 0x1C17DEC

Method: System.String GetString(System.Byte[] bytes, System.Int32 index, System.Int32 count)

Disassembly:
	0x0323A62C BL 0x1C16D08
	0x0323A630 MOV X1, X0
	0x0323A634 MOV X0, X19
	0x0323A638 MOV X2, X31
	0x0323A63C BL 0x330E100
	0x0323A640 ADRP X0, 0xEE8000
	0x0323A644 LDR X0, [X0 + 0x7D0]
	0x0323A648 BL 0x1C16D08
	0x0323A64C MOV X1, X0
	0x0323A650 MOV X0, X19
	0x0323A654 BL 0x1C16DEC
	0x0323A658 STR X30, [X31 - 0x20]!
	0x0323A65C STP X20, X19, [X31 + 0x10]
	0x0323A660 CBZ X1, 0x323A684
	0x0323A664 TBNZ X2, 0x1F, 0x323A6CC
	0x0323A668 LDR X8, [X0]
	0x0323A66C LDP X20, X19, [X31 + 0x10]
	0x0323A670 MOV X3, X31
	0x0323A674 LDR X5, [X8 + 0x228]
	0x0323A678 LDR X4, [X8 + 0x230]
	0x0323A67C LDR X30, [X31], #0x20
	0x0323A680 BR X5
	0x0323A684 ADRP X0, 0xEBE000
	0x0323A688 LDR X0, [X0 + 0x528]
	0x0323A68C BL 0x1C16D08
	0x0323A690 BL 0x1C16F10
	0x0323A694 MOV X19, X0
	0x0323A698 ADRP X0, 0xEE8000
	0x0323A69C LDR X0, [X0 + 0x2D8]
	0x0323A6A0 BL 0x1C16D08
	0x0323A6A4 MOV X20, X0
	0x0323A6A8 ADRP X0, 0xEE8000
	0x0323A6AC LDR X0, [X0 + 0x2E0]
	0x0323A6B0 BL 0x1C16D08
	0x0323A6B4 MOV X2, X0
	0x0323A6B8 MOV X0, X19
	0x0323A6BC MOV X1, X20
	0x0323A6C0 MOV X3, X31
	0x0323A6C4 BL 0x3315F7C
	0x0323A6C8 B 0x323A710
	0x0323A6CC ADRP X0, 0xEC1000
	0x0323A6D0 LDR X0, [X0 + 0x760]
	0x0323A6D4 BL 0x1C16D08
	0x0323A6D8 BL 0x1C16F10
	0x0323A6DC MOV X19, X0
	0x0323A6E0 ADRP X0, 0xEE1000
	0x0323A6E4 LDR X0, [X0 + 0x648]
	0x0323A6E8 BL 0x1C16D08
	0x0323A6EC MOV X20, X0
	0x0323A6F0 ADRP X0, 0xEE1000
	0x0323A6F4 LDR X0, [X0 + 0x670]
	0x0323A6F8 BL 0x1C16D08
	0x0323A6FC MOV X2, X0
	0x0323A700 MOV X0, X19
	0x0323A704 MOV X1, X20
	0x0323A708 MOV X3, X31
	0x0323A70C BL 0x3311888
	0x0323A710 ADRP X0, 0xEE8000
	0x0323A714 LDR X0, [X0 + 0x7D8]
	0x0323A718 BL 0x1C16D08
	0x0323A71C MOV X1, X0
	0x0323A720 MOV X0, X19
	0x0323A724 BL 0x1C16DEC
	0x0323A728 STP X30, X27, [X31 - 0x50]!
	0x0323A72C STP X26, X25, [X31 + 0x10]
	0x0323A730 STP X24, X23, [X31 + 0x20]
	0x0323A734 STP X22, X21, [X31 + 0x30]
	0x0323A738 STP X20, X19, [X31 + 0x40]
	0x0323A73C ADRP X25, 0x11A2000
	0x0323A740 LDRB W8, [X25 + 0x403]
	0x0323A744 MOV W19, W5
	0x0323A748 MOV X24, X4
	0x0323A74C MOV W20, W3
	0x0323A750 MOV W21, W2
	0x0323A754 MOV X22, X1
	0x0323A758 MOV X23, X0
	0x0323A75C TBNZ X8, 0x0, 0x323A780
	0x0323A760 ADRP X0, 0xEE7000
	0x0323A764 LDR X0, [X0 + 0x830]
	0x0323A768 BL 0x1C16CF4
	0x0323A76C ADRP X0, 0xEE8000
	0x0323A770 LDR X0, [X0 + 0x2F8]
	0x0323A774 BL 0x1C16CF4
	0x0323A778 MOVZ W8, 0x1
	0x0323A77C STRB W8, [X25 + 0x403]
	0x0323A780 CBZ X22, 0x323A850
	0x0323A784 CBZ X24, 0x323A850
	0x0323A788 TBNZ X20, 0x1F, 0x323A8A8
	0x0323A78C TBNZ X21, 0x1F, 0x323A8A8
	0x0323A790 LDR W8, [X22 + 0x10]
	0x0323A794 SUB W8, W8, W21
	0x0323A798 CMP W8, W20
	0x0323A79C B.LT 0x323A914
	0x0323A7A0 TBNZ X19, 0x1F, 0x323A820
	0x0323A7A4 LDR W8, [X24 + 0x18]
	0x0323A7A8 SUBS W25, W8, W19
	0x0323A7AC B.LT 0x323A820
	0x0323A7B0 ADRP X26, 0xEE8000
	0x0323A7B4 ADRP X27, 0xEE7000
	0x0323A7B8 LDR X26, [X26 + 0x2F8]
	0x0323A7BC LDR X27, [X27 + 0x830]
	0x0323A7C0 MOV X0, X31
	0x0323A7C4 BL 0x32C1424
	0x0323A7C8 LDR X1, [X26]
	0x0323A7CC MOV W26, W0
	0x0323A7D0 MOV X0, X24
	0x0323A7D4 BL 0x25FB4C0
	0x0323A7D8 LDR X2, [X27]
	0x0323A7DC BL 0x2218CF4
	0x0323A7E0 LDR X8, [X23]
	0x0323A7E4 ADD X3, X0, W19, UXTW

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x11A3000
	008 Move W8, [X23+1018]
	009 Move W20, W3
	010 Move W19, W2
	011 Move X22, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xEBC000
	018 Move X0, [X0+632]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+1018], W8
	022 Compare X22, 0
	023 JumpIfEqual {64}
	024 Move TEMP, X20
	025 And TEMP, TEMP, -2147483648
	026 Compare TEMP, -2147483648
	027 JumpIfEqual {81}
	028 Move TEMP, X19
	029 And TEMP, TEMP, -2147483648
	030 Compare TEMP, -2147483648
	031 JumpIfEqual {81}
	032 Move W8, [X22+24]
	033 Subtract W9, W8, W19
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Compare W20, 0
	036 JumpIfEqual {52}
	037 Add X9, X22, 32
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 Add X0, X8, W19
	041 Move W1, W20
	042 Move X2, X21
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X3, X31
	048 Move X30, [X31+48]
	049 Move X23, [X31+56]
	050 Call String.CreateStringFromEncoding, X0, X1, X2
	051 Return X0
	052 Move X8, 0xEBC000
	053 Move X8, [X8+632]
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X8, [X8]
	059 Move X8, [X8+184]
	060 Move X0, [X8]
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Return X0
	064 Move X0, 0xEBF000
	065 Move X0, [X0+1320]
	066 Call 0x1C17D08
	067 Call 0x1C17F10
	068 Move X19, X0
	069 Move X0, 0xEE9000
	070 Move X0, [X0+776]
	071 Call 0x1C17D08
	072 Move X20, X0
	073 Move X0, 0xEE9000
	074 Move X0, [X0+736]
	075 Call 0x1C17D08
	076 Move X2, X0
	077 Move X0, X19
	078 Move X1, X20
	079 Move X3, X31
	080 Call ArgumentNullException..ctor, X0, X1, X2
	081 Move X8, 0xEE2000
	082 Move X9, 0xEC5000
	083 Move X8, [X8+1608]
	084 Move X9, [X9+304]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction CSEL not yet implemented."
	087 Call 0x1C17D08
	088 Move X19, X0
	089 Move X0, 0xEC2000
	090 Move X0, [X0+1888]
	091 Call 0x1C17D08
	092 Call 0x1C17F10
	093 Move X20, X0
	094 Move X0, 0xEE2000
	095 Move X0, [X0+1648]
	096 Call 0x1C17D08
	097 Move X2, X0
	098 Move X0, X20
	099 Move X1, X19
	100 Move X3, X31
	101 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	102 Move X0, 0xEE9000
	103 Move X0, [X0+1920]
	104 Call 0x1C17D08
	105 Move X1, X0
	106 Move X0, X20
	107 Call 0x1C17DEC
	108 Move X0, 0xEC2000
	109 Move X0, [X0+1888]
	110 Call 0x1C17D08
	111 Call 0x1C17F10
	112 Move X19, X0
	113 Move X0, 0xEE9000
	114 Move X0, [X0+776]
	115 Call 0x1C17D08
	116 Move X20, X0
	117 Move X0, 0xEE9000
	118 Move X0, [X0+224]
	119 Call 0x1C17D08
	120 Move X2, X0
	121 Move X0, X19
	122 Move X1, X20
	123 Move X3, X31
	124 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	125 Move X0, 0xEE9000
	126 Move X0, [X0+1920]
	127 Call 0x1C17D08
	128 Move X1, X0
	129 Move X0, X19
	130 Call 0x1C17DEC

Method: System.Int32 GetByteCount(System.Char* chars, System.Int32 count, System.Text.EncoderNLS baseEncoder)

Disassembly:
	0x0323A7E8 MOV X0, X23
	0x0323A7EC MOV W2, W20
	0x0323A7F0 LDR X7, [X8 + 0x288]
	0x0323A7F4 LDR X6, [X8 + 0x290]
	0x0323A7F8 ADD X8, X22, W21, 0x1, SXTW
	0x0323A7FC ADD X1, X8, W26, SXTW
	0x0323A800 MOV W4, W25

ISIL:
	001 Move X8, [X0]
	002 Move X5, X3
	003 Move X3, X31
	004 Move W4, W31
	005 Move X7, [X8+648]
	006 Move X6, [X8+656]
	007 CallNoReturn X7

Method: System.Int32 GetBytes(System.Char* chars, System.Int32 charCount, System.Byte* bytes, System.Int32 byteCount, System.Text.EncoderNLS baseEncoder)

Disassembly:
	0x0323A804 LDP X20, X19, [X31 + 0x40]
	0x0323A808 LDP X22, X21, [X31 + 0x30]
	0x0323A80C LDP X24, X23, [X31 + 0x20]
	0x0323A810 LDP X26, X25, [X31 + 0x10]
	0x0323A814 MOV X5, X31
	0x0323A818 LDP X30, X27, [X31], #0x50
	0x0323A81C BR X7
	0x0323A820 ADRP X0, 0xEC1000
	0x0323A824 LDR X0, [X0 + 0x760]
	0x0323A828 BL 0x1C16D08
	0x0323A82C BL 0x1C16F10
	0x0323A830 MOV X19, X0
	0x0323A834 ADRP X0, 0xEE8000
	0x0323A838 LDR X0, [X0 + 0x300]
	0x0323A83C BL 0x1C16D08
	0x0323A840 MOV X20, X0
	0x0323A844 ADRP X0, 0xEE1000
	0x0323A848 LDR X0, [X0 + 0x660]
	0x0323A84C B 0x323A940
	0x0323A850 ADRP X8, 0xEE8000
	0x0323A854 ADRP X9, 0xEE2000
	0x0323A858 LDR X8, [X8 + 0x308]
	0x0323A85C LDR X9, [X9 + 0xCC0]
	0x0323A860 CMP X22, 0x0
	0x0323A864 CSEL X0, X9, X8, EQ
	0x0323A868 BL 0x1C16D08
	0x0323A86C MOV X19, X0
	0x0323A870 ADRP X0, 0xEBE000
	0x0323A874 LDR X0, [X0 + 0x528]
	0x0323A878 BL 0x1C16D08
	0x0323A87C BL 0x1C16F10
	0x0323A880 MOV X20, X0
	0x0323A884 ADRP X0, 0xEE8000
	0x0323A888 LDR X0, [X0 + 0x2E0]
	0x0323A88C BL 0x1C16D08
	0x0323A890 MOV X2, X0
	0x0323A894 MOV X0, X20
	0x0323A898 MOV X1, X19
	0x0323A89C MOV X3, X31
	0x0323A8A0 BL 0x3315F7C
	0x0323A8A4 B 0x323A8FC
	0x0323A8A8 ADRP X8, 0xEE8000
	0x0323A8AC ADRP X9, 0xEE8000
	0x0323A8B0 LDR X8, [X8 + 0x310]
	0x0323A8B4 LDR X9, [X9 + 0x318]
	0x0323A8B8 CMP W21, 0x0
	0x0323A8BC CSEL X0, X9, X8, LT
	0x0323A8C0 BL 0x1C16D08
	0x0323A8C4 MOV X19, X0
	0x0323A8C8 ADRP X0, 0xEC1000
	0x0323A8CC LDR X0, [X0 + 0x760]
	0x0323A8D0 BL 0x1C16D08
	0x0323A8D4 BL 0x1C16F10
	0x0323A8D8 MOV X20, X0
	0x0323A8DC ADRP X0, 0xEE1000
	0x0323A8E0 LDR X0, [X0 + 0x670]
	0x0323A8E4 BL 0x1C16D08
	0x0323A8E8 MOV X2, X0
	0x0323A8EC MOV X0, X20
	0x0323A8F0 MOV X1, X19
	0x0323A8F4 MOV X3, X31
	0x0323A8F8 BL 0x3311888
	0x0323A8FC ADRP X0, 0xEE8000
	0x0323A900 LDR X0, [X0 + 0x7E0]
	0x0323A904 BL 0x1C16D08
	0x0323A908 MOV X1, X0
	0x0323A90C MOV X0, X20
	0x0323A910 BL 0x1C16DEC
	0x0323A914 ADRP X0, 0xEC1000
	0x0323A918 LDR X0, [X0 + 0x760]
	0x0323A91C BL 0x1C16D08
	0x0323A920 BL 0x1C16F10
	0x0323A924 MOV X19, X0
	0x0323A928 ADRP X0, 0xEE2000
	0x0323A92C LDR X0, [X0 + 0xCC0]
	0x0323A930 BL 0x1C16D08
	0x0323A934 MOV X20, X0
	0x0323A938 ADRP X0, 0xEE8000
	0x0323A93C LDR X0, [X0 + 0x108]
	0x0323A940 BL 0x1C16D08
	0x0323A944 MOV X2, X0
	0x0323A948 MOV X0, X19
	0x0323A94C MOV X1, X20
	0x0323A950 MOV X3, X31
	0x0323A954 BL 0x3311888
	0x0323A958 ADRP X0, 0xEE8000
	0x0323A95C LDR X0, [X0 + 0x7E0]
	0x0323A960 BL 0x1C16D08
	0x0323A964 MOV X1, X0
	0x0323A968 MOV X0, X19
	0x0323A96C BL 0x1C16DEC
	0x0323A970 STR X30, [X31 - 0x50]!
	0x0323A974 STP X26, X25, [X31 + 0x10]
	0x0323A978 STP X24, X23, [X31 + 0x20]
	0x0323A97C STP X22, X21, [X31 + 0x30]
	0x0323A980 STP X20, X19, [X31 + 0x40]
	0x0323A984 ADRP X25, 0x11A2000
	0x0323A988 LDRB W8, [X25 + 0x404]
	0x0323A98C MOV W20, W5
	0x0323A990 MOV X23, X4
	0x0323A994 MOV W19, W3
	0x0323A998 MOV W21, W2
	0x0323A99C MOV X24, X1
	0x0323A9A0 MOV X22, X0
	0x0323A9A4 TBNZ X8, 0x0, 0x323A9C8
	0x0323A9A8 ADRP X0, 0xEE7000
	0x0323A9AC LDR X0, [X0 + 0x830]
	0x0323A9B0 BL 0x1C16CF4
	0x0323A9B4 ADRP X0, 0xEE8000
	0x0323A9B8 LDR X0, [X0 + 0x2F8]
	0x0323A9BC BL 0x1C16CF4
	0x0323A9C0 MOVZ W8, 0x1
	0x0323A9C4 STRB W8, [X25 + 0x404]
	0x0323A9C8 CBZ X24, 0x323AAB4
	0x0323A9CC CBZ X23, 0x323AAB4
	0x0323A9D0 TBNZ X19, 0x1F, 0x323AB0C
	0x0323A9D4 TBNZ X21, 0x1F, 0x323AB0C
	0x0323A9D8 LDR W8, [X24 + 0x18]
	0x0323A9DC SUB W9, W8, W21
	0x0323A9E0 CMP W9, W19
	0x0323A9E4 B.LT 0x323AB78
	0x0323A9E8 TBNZ X20, 0x1F, 0x323AA84
	0x0323A9EC LDR W9, [X23 + 0x18]
	0x0323A9F0 SUBS W25, W9, W20
	0x0323A9F4 B.LT 0x323AA84
	0x0323A9F8 CBZ W19, 0x323AA68
	0x0323A9FC ADRP X9, 0xEE8000
	0x0323AA00 LDR X9, [X9 + 0x2F8]
	0x0323AA04 ADRP X26, 0xEE7000
	0x0323AA08 LDR X26, [X26 + 0x830]
	0x0323AA0C CMP W8, 0x0
	0x0323AA10 LDR X1, [X9]
	0x0323AA14 ADD X9, X24, 0x20
	0x0323AA18 MOV X0, X23
	0x0323AA1C CSEL X24, X31, X9, EQ
	0x0323AA20 BL 0x25FB4C0
	0x0323AA24 LDR X2, [X26]
	0x0323AA28 BL 0x2218CF4
	0x0323AA2C LDR X8, [X22]
	0x0323AA30 ADD X1, X24, W21, 0x1, SXTW
	0x0323AA34 ADD X3, X0, W20, UXTW
	0x0323AA38 MOV X0, X22
	0x0323AA3C LDR X7, [X8 + 0x288]
	0x0323AA40 LDR X6, [X8 + 0x290]
	0x0323AA44 MOV W2, W19
	0x0323AA48 MOV W4, W25
	0x0323AA4C LDP X20, X19, [X31 + 0x40]
	0x0323AA50 LDP X22, X21, [X31 + 0x30]
	0x0323AA54 LDP X24, X23, [X31 + 0x20]
	0x0323AA58 LDP X26, X25, [X31 + 0x10]
	0x0323AA5C MOV X5, X31
	0x0323AA60 LDR X30, [X31], #0x50
	0x0323AA64 BR X7
	0x0323AA68 LDP X20, X19, [X31 + 0x40]
	0x0323AA6C LDP X22, X21, [X31 + 0x30]
	0x0323AA70 LDP X24, X23, [X31 + 0x20]
	0x0323AA74 LDP X26, X25, [X31 + 0x10]
	0x0323AA78 MOV W0, W31
	0x0323AA7C LDR X30, [X31], #0x50
	0x0323AA80 RET
	0x0323AA84 ADRP X0, 0xEC1000
	0x0323AA88 LDR X0, [X0 + 0x760]
	0x0323AA8C BL 0x1C16D08
	0x0323AA90 BL 0x1C16F10
	0x0323AA94 MOV X19, X0
	0x0323AA98 ADRP X0, 0xEE8000
	0x0323AA9C LDR X0, [X0 + 0x300]
	0x0323AAA0 BL 0x1C16D08
	0x0323AAA4 MOV X20, X0
	0x0323AAA8 ADRP X0, 0xEE1000
	0x0323AAAC LDR X0, [X0 + 0x660]
	0x0323AAB0 B 0x323ABA4
	0x0323AAB4 ADRP X8, 0xEE8000
	0x0323AAB8 ADRP X9, 0xEE8000
	0x0323AABC LDR X8, [X8 + 0x308]
	0x0323AAC0 LDR X9, [X9 + 0x2D8]
	0x0323AAC4 CMP X24, 0x0
	0x0323AAC8 CSEL X0, X9, X8, EQ
	0x0323AACC BL 0x1C16D08
	0x0323AAD0 MOV X19, X0
	0x0323AAD4 ADRP X0, 0xEBE000
	0x0323AAD8 LDR X0, [X0 + 0x528]
	0x0323AADC BL 0x1C16D08
	0x0323AAE0 BL 0x1C16F10
	0x0323AAE4 MOV X20, X0
	0x0323AAE8 ADRP X0, 0xEE8000
	0x0323AAEC LDR X0, [X0 + 0x2E0]
	0x0323AAF0 BL 0x1C16D08
	0x0323AAF4 MOV X2, X0
	0x0323AAF8 MOV X0, X20
	0x0323AAFC MOV X1, X19
	0x0323AB00 MOV X3, X31
	0x0323AB04 BL 0x3315F7C
	0x0323AB08 B 0x323AB60
	0x0323AB0C ADRP X8, 0xEE8000
	0x0323AB10 ADRP X9, 0xEE8000
	0x0323AB14 LDR X8, [X8 + 0x310]
	0x0323AB18 LDR X9, [X9 + 0x318]
	0x0323AB1C CMP W21, 0x0
	0x0323AB20 CSEL X0, X9, X8, LT
	0x0323AB24 BL 0x1C16D08
	0x0323AB28 MOV X19, X0
	0x0323AB2C ADRP X0, 0xEC1000
	0x0323AB30 LDR X0, [X0 + 0x760]
	0x0323AB34 BL 0x1C16D08
	0x0323AB38 BL 0x1C16F10
	0x0323AB3C MOV X20, X0
	0x0323AB40 ADRP X0, 0xEE1000
	0x0323AB44 LDR X0, [X0 + 0x670]
	0x0323AB48 BL 0x1C16D08
	0x0323AB4C MOV X2, X0
	0x0323AB50 MOV X0, X20
	0x0323AB54 MOV X1, X19
	0x0323AB58 MOV X3, X31
	0x0323AB5C BL 0x3311888
	0x0323AB60 ADRP X0, 0xEE8000
	0x0323AB64 LDR X0, [X0 + 0x7E8]
	0x0323AB68 BL 0x1C16D08
	0x0323AB6C MOV X1, X0
	0x0323AB70 MOV X0, X20
	0x0323AB74 BL 0x1C16DEC
	0x0323AB78 ADRP X0, 0xEC1000
	0x0323AB7C LDR X0, [X0 + 0x760]
	0x0323AB80 BL 0x1C16D08
	0x0323AB84 BL 0x1C16F10
	0x0323AB88 MOV X19, X0
	0x0323AB8C ADRP X0, 0xEE8000
	0x0323AB90 LDR X0, [X0 + 0x2D8]
	0x0323AB94 BL 0x1C16D08
	0x0323AB98 MOV X20, X0
	0x0323AB9C ADRP X0, 0xEE8000

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x11A3000
	013 Move W8, [X21+1019]
	014 Move X19, X5
	015 Move W24, W4
	016 Move X20, X3
	017 Move W23, W2
	018 Move X25, X1
	019 Move X22, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0xEE9000
	025 Move X0, [X0+1928]
	026 Call 0x1C17CF4
	027 Move X0, 0xEE9000
	028 Move X0, [X0+1936]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+1019], W8
	032 Compare X19, 0
	033 JumpIfEqual {39}
	034 Move X8, 0xEE9000
	035 Move X8, [X8+1928]
	036 Move X1, [X8]
	037 Move X8, [X19]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X8, 0xEE9000
	040 Move X8, [X8+1936]
	041 Move X0, [X8]
	042 Call 0x1C17F10
	043 Move X1, X22
	044 Move X2, X19
	045 Move X3, X20
	046 Move W4, W24
	047 Move X5, X25
	048 Move W6, W23
	049 Move X7, X31
	050 Move X21, X0
	051 Call EncodingByteBuffer..ctor, X0, X1, X2, X3, X4, X5, X6
	052 Compare X19, 0
	053 JumpIfEqual {85}
	054 Move W25, [X19+56]
	055 Move W24, [X19+60]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X8, [X22+56]
	058 Compare X8, 0
	059 JumpIfEqual {287}
	060 Move W10, [X8+24]
	061 Subtract W24, W24, 6
	062 NotImplemented "Instruction ASRV not yet implemented."
	063 And W9, W9, 63
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Compare X21, 0
	066 JumpIfEqual {287}
	067 Add X8, X8, W9
	068 Move W1, [X8+32]
	069 Move X0, X21
	070 Move X2, X31
	071 Call EncodingByteBuffer.AddByte, X0, X1
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {83}
	076 Move W8, [X21+64]
	077 Move X0, X22
	078 Move X1, X19
	079 Move X3, X31
	080 NotImplemented "Instruction CMP not yet implemented."
	081 NotImplemented "Instruction CSET not yet implemented."
	082 Call Encoding.ThrowBytesOverflow, X0, X1, X2
	083 Add W8, W24, 6
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move W25, W31
	086 Move TEMP, 0
	087 Not TEMP
	088 Move W24, TEMP
	089 Compare X21, 0
	090 JumpIfEqual {287}
	091 Move W26, 6
	092 Move W28, W24
	093 ShiftRight W28, 31
	094 And W28, W28, 0x7FFFFFFF
	095 Move X0, X21
	096 Move X1, X31
	097 Call EncodingByteBuffer.get_MoreData, X0
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {212}
	102 Move X0, X21
	103 Move X1, X31
	104 Call EncodingByteBuffer.GetNextChar, X0
	105 And W27, W0, 0xFFFF
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X8, [X22+72]
	108 Compare X8, 0
	109 JumpIfEqual {287}
	110 Move W9, [X8+24]
	111 And W27, W0, 0xFFFF
	112 Move W23, W0
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Add X8, X8, W23
	115 Move W8, [X8+32]
	116 Compare W8, 0
	117 JumpIfNotEqual {170}
	118 And W8, W23, 0xFFFF
	119 NotImplemented "Instruction CMP not yet implemented."
	120 NotImplemented "Instruction CSET not yet implemented."
	121 Xor W9, W28, 1
	122 Or W8, W8, W9
	123 Move TEMP, X8
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfEqual {136}
	127 Move W1, 43
	128 Move W2, 45
	129 Move X0, X21
	130 Move X3, X31
	131 Call EncodingByteBuffer.AddByte, X0, X1, X2
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfEqual {95}
	136 Move TEMP, X24
	137 And TEMP, TEMP, -2147483648
	138 Compare TEMP, -2147483648
	139 JumpIfNotEqual {149}
	140 Move W1, 43
	141 Move X0, X21
	142 Move X2, X31
	143 Call EncodingByteBuffer.AddByte, X0, X1
	144 Move TEMP, X0
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfNotEqual {256}
	148 Move W24, W31
	149 NotImplemented "Instruction BFM not yet implemented."
	150 Add W24, W24, 16
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X8, [X22+56]
	153 Compare X8, 0
	154 JumpIfEqual {287}
	155 Move W10, [X8+24]
	156 Subtract W24, W24, 6
	157 NotImplemented "Instruction ASRV not yet implemented."
	158 And W9, W9, 63
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Add X8, X8, W9
	161 Move W1, [X8+32]
	162 Move X0, X21
	163 Move X2, X31
	164 Call EncodingByteBuffer.AddByte, X0, X1
	165 Move TEMP, X0
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfEqual {151}
	169 Move W25, W27
	170 Move TEMP, X24
	171 And TEMP, TEMP, -2147483648
	172 Compare TEMP, -2147483648
	173 JumpIfEqual {204}
	174 Compare W24, 0
	175 JumpIfEqual {193}
	176 Move X8, [X22+56]
	177 Compare X8, 0
	178 JumpIfEqual {287}
	179 Move W10, [X8+24]
	180 Subtract W9, W26, W24
	181 NotImplemented "Instruction LSLV not yet implemented."
	182 And W9, W9, 63
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Add X8, X8, W9
	185 Move W1, [X8+32]
	186 Move X0, X21
	187 Move X2, X31
	188 Call EncodingByteBuffer.AddByte, X0, X1
	189 Move TEMP, X0
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfNotEqual {221}
	193 Move W1, 45
	194 Move X0, X21
	195 Move X2, X31
	196 Call EncodingByteBuffer.AddByte, X0, X1
	197 Move TEMP, X0
	198 And TEMP, TEMP, 1
	199 Compare TEMP, 1
	200 JumpIfNotEqual {284}
	201 Move TEMP, 0
	202 Not TEMP
	203 Move W24, TEMP
	204 Move X0, X21
	205 Move W1, W23
	206 Move X2, X31
	207 Call EncodingByteBuffer.AddByte, X0, X1
	208 Move TEMP, X0
	209 And TEMP, TEMP, 1
	210 Compare TEMP, 1
	211 JumpIfEqual {92}
	212 Move TEMP, X24
	213 And TEMP, TEMP, -2147483648
	214 Compare TEMP, -2147483648
	215 JumpIfNotEqual {221}
	216 Move X0, X21
	217 Move X1, X31
	218 Call EncodingByteBuffer.GetNextChar, X0
	219 Add W24, W24, 6
	220 Move W25, W27
	221 Compare X19, 0
	222 JumpIfEqual {226}
	223 Move W8, [X19+48]
	224 Compare W8, 0
	225 JumpIfEqual {256}
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Move X8, [X22+56]
	228 Compare X8, 0
	229 JumpIfEqual {287}
	230 Move W9, 6
	231 Move W10, [X8+24]
	232 Subtract W9, W9, W24
	233 NotImplemented "Instruction LSLV not yet implemented."
	234 And W9, W9, 63
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Add X8, X8, W9
	237 Move W1, [X8+32]
	238 Move X0, X21
	239 Move X2, X31
	240 Call EncodingByteBuffer.AddByte, X0, X1
	241 And W31, W0, 1
	242 NotImplemented "Instruction CSEL not yet implemented."
	243 Move W24, W31
	244 Move W1, 45
	245 Move X0, X21
	246 Move X2, X31
	247 Call EncodingByteBuffer.AddByte, X0, X1
	248 Move TEMP, X0
	249 And TEMP, TEMP, 1
	250 Compare TEMP, 1
	251 JumpIfNotEqual {258}
	252 Move W25, W31
	253 Move TEMP, 0
	254 Not TEMP
	255 Move W24, TEMP
	256 Compare X20, 0
	257 JumpIfNotEqual {263}
	258 Move X0, X21
	259 Move X1, X31
	260 Call EncodingByteBuffer.GetNextChar, X0
	261 Compare X20, 0
	262 JumpIfEqual {271}
	263 Compare X19, 0
	264 JumpIfEqual {271}
	265 Move X0, X21
	266 Move X1, X31
	267 Move [X19+56], W25
	268 Move [X19+60], W24
	269 Call EncodingByteBuffer.get_CharsUsed, X0
	270 Move [X19+52], W0
	271 Move W0, [X21+64]
	272 Move X20, [X31+80]
	273 Move X19, [X31+88]
	274 Move X22, [X31+64]
	275 Move X21, [X31+72]
	276 Move X24, [X31+48]
	277 Move X23, [X31+56]
	278 Move X26, [X31+32]
	279 Move X25, [X31+40]
	280 Move X28, [X31+16]
	281 Move X27, [X31+24]
	282 Move X30, [X31+96]
	283 Return X0
	284 Move W24, W31
	285 Compare X19, 0
	286 JumpIfNotEqual {223}
	287 Call 0x1C17F20
	288 Call 0x1C17F28
	289 Move X0, X19
	290 Call 0x1C181E0

Method: System.Int32 GetCharCount(System.Byte* bytes, System.Int32 count, System.Text.DecoderNLS baseDecoder)

Disassembly:
	0x0323ABA0 LDR X0, [X0 + 0xE0]
	0x0323ABA4 BL 0x1C16D08
	0x0323ABA8 MOV X2, X0
	0x0323ABAC MOV X0, X19
	0x0323ABB0 MOV X1, X20
	0x0323ABB4 MOV X3, X31
	0x0323ABB8 BL 0x3311888

ISIL:
	001 Move X8, [X0]
	002 Move X5, X3
	003 Move X3, X31
	004 Move W4, W31
	005 Move X7, [X8+776]
	006 Move X6, [X8+784]
	007 CallNoReturn X7

Method: System.Int32 GetChars(System.Byte* bytes, System.Int32 byteCount, System.Char* chars, System.Int32 charCount, System.Text.DecoderNLS baseDecoder)

Disassembly:
	0x0323ABBC ADRP X0, 0xEE8000
	0x0323ABC0 LDR X0, [X0 + 0x7E8]
	0x0323ABC4 BL 0x1C16D08
	0x0323ABC8 MOV X1, X0
	0x0323ABCC MOV X0, X19
	0x0323ABD0 BL 0x1C16DEC
	0x0323ABD4 STR X30, [X31 - 0x20]!
	0x0323ABD8 STP X20, X19, [X31 + 0x10]
	0x0323ABDC CBZ X1, 0x323AC08
	0x0323ABE0 CBZ X3, 0x323AC08
	0x0323ABE4 TBNZ X4, 0x1F, 0x323AC60
	0x0323ABE8 TBNZ X2, 0x1F, 0x323AC60
	0x0323ABEC LDR X8, [X0]
	0x0323ABF0 LDP X20, X19, [X31 + 0x10]
	0x0323ABF4 MOV X5, X31
	0x0323ABF8 LDR X7, [X8 + 0x288]
	0x0323ABFC LDR X6, [X8 + 0x290]
	0x0323AC00 LDR X30, [X31], #0x20
	0x0323AC04 BR X7
	0x0323AC08 ADRP X8, 0xEE8000
	0x0323AC0C ADRP X9, 0xEE8000
	0x0323AC10 LDR X8, [X8 + 0x2D8]
	0x0323AC14 LDR X9, [X9 + 0x308]
	0x0323AC18 CMP X3, 0x0
	0x0323AC1C CSEL X0, X9, X8, EQ
	0x0323AC20 BL 0x1C16D08
	0x0323AC24 MOV X19, X0
	0x0323AC28 ADRP X0, 0xEBE000
	0x0323AC2C LDR X0, [X0 + 0x528]
	0x0323AC30 BL 0x1C16D08
	0x0323AC34 BL 0x1C16F10
	0x0323AC38 MOV X20, X0
	0x0323AC3C ADRP X0, 0xEE8000
	0x0323AC40 LDR X0, [X0 + 0x2E0]
	0x0323AC44 BL 0x1C16D08
	0x0323AC48 MOV X2, X0
	0x0323AC4C MOV X0, X20
	0x0323AC50 MOV X1, X19
	0x0323AC54 MOV X3, X31
	0x0323AC58 BL 0x3315F7C
	0x0323AC5C B 0x323ACB4
	0x0323AC60 ADRP X8, 0xEE8000
	0x0323AC64 ADRP X9, 0xEE8000
	0x0323AC68 LDR X8, [X8 + 0x328]
	0x0323AC6C LDR X9, [X9 + 0x310]
	0x0323AC70 CMP W2, 0x0
	0x0323AC74 CSEL X0, X9, X8, LT
	0x0323AC78 BL 0x1C16D08
	0x0323AC7C MOV X19, X0
	0x0323AC80 ADRP X0, 0xEC1000
	0x0323AC84 LDR X0, [X0 + 0x760]
	0x0323AC88 BL 0x1C16D08
	0x0323AC8C BL 0x1C16F10
	0x0323AC90 MOV X20, X0
	0x0323AC94 ADRP X0, 0xEE1000
	0x0323AC98 LDR X0, [X0 + 0x670]
	0x0323AC9C BL 0x1C16D08
	0x0323ACA0 MOV X2, X0
	0x0323ACA4 MOV X0, X20
	0x0323ACA8 MOV X1, X19
	0x0323ACAC MOV X3, X31
	0x0323ACB0 BL 0x3311888
	0x0323ACB4 ADRP X0, 0xEE8000
	0x0323ACB8 LDR X0, [X0 + 0x7F0]
	0x0323ACBC BL 0x1C16D08
	0x0323ACC0 MOV X1, X0
	0x0323ACC4 MOV X0, X20
	0x0323ACC8 BL 0x1C16DEC
	0x0323ACCC STR X30, [X31 - 0x20]!
	0x0323ACD0 STP X20, X19, [X31 + 0x10]
	0x0323ACD4 CBZ X1, 0x323AD34
	0x0323ACD8 TBNZ X3, 0x1F, 0x323AD7C
	0x0323ACDC TBNZ X2, 0x1F, 0x323AD7C
	0x0323ACE0 LDR W8, [X1 + 0x18]
	0x0323ACE4 SUB W9, W8, W2
	0x0323ACE8 CMP W9, W3
	0x0323ACEC B.LT 0x323ADE8
	0x0323ACF0 CBZ W3, 0x323AD24
	0x0323ACF4 LDR X9, [X0]
	0x0323ACF8 LDP X20, X19, [X31 + 0x10]
	0x0323ACFC ADD X10, X1, 0x20
	0x0323AD00 CMP W8, 0x0
	0x0323AD04 LDR X5, [X9 + 0x2C8]
	0x0323AD08 LDR X4, [X9 + 0x2D0]
	0x0323AD0C CSEL X8, X31, X10, EQ
	0x0323AD10 ADD X1, X8, W2, SXTW
	0x0323AD14 MOV W2, W3
	0x0323AD18 MOV X3, X31
	0x0323AD1C LDR X30, [X31], #0x20
	0x0323AD20 BR X5
	0x0323AD24 LDP X20, X19, [X31 + 0x10]
	0x0323AD28 MOV W0, W31
	0x0323AD2C LDR X30, [X31], #0x20
	0x0323AD30 RET
	0x0323AD34 ADRP X0, 0xEBE000
	0x0323AD38 LDR X0, [X0 + 0x528]
	0x0323AD3C BL 0x1C16D08
	0x0323AD40 BL 0x1C16F10
	0x0323AD44 MOV X19, X0
	0x0323AD48 ADRP X0, 0xEE8000
	0x0323AD4C LDR X0, [X0 + 0x308]
	0x0323AD50 BL 0x1C16D08
	0x0323AD54 MOV X20, X0
	0x0323AD58 ADRP X0, 0xEE8000
	0x0323AD5C LDR X0, [X0 + 0x2E0]
	0x0323AD60 BL 0x1C16D08
	0x0323AD64 MOV X2, X0
	0x0323AD68 MOV X0, X19
	0x0323AD6C MOV X1, X20
	0x0323AD70 MOV X3, X31
	0x0323AD74 BL 0x3315F7C
	0x0323AD78 B 0x323AE2C
	0x0323AD7C ADRP X8, 0xEE1000
	0x0323AD80 ADRP X9, 0xEC4000
	0x0323AD84 LDR X8, [X8 + 0x648]
	0x0323AD88 LDR X9, [X9 + 0x130]
	0x0323AD8C CMP W2, 0x0
	0x0323AD90 CSEL X0, X9, X8, LT
	0x0323AD94 BL 0x1C16D08
	0x0323AD98 MOV X19, X0
	0x0323AD9C ADRP X0, 0xEC1000
	0x0323ADA0 LDR X0, [X0 + 0x760]
	0x0323ADA4 BL 0x1C16D08
	0x0323ADA8 BL 0x1C16F10
	0x0323ADAC MOV X20, X0
	0x0323ADB0 ADRP X0, 0xEE1000
	0x0323ADB4 LDR X0, [X0 + 0x670]
	0x0323ADB8 BL 0x1C16D08
	0x0323ADBC MOV X2, X0
	0x0323ADC0 MOV X0, X20
	0x0323ADC4 MOV X1, X19
	0x0323ADC8 MOV X3, X31
	0x0323ADCC BL 0x3311888
	0x0323ADD0 ADRP X0, 0xEE8000
	0x0323ADD4 LDR X0, [X0 + 0x7F8]
	0x0323ADD8 BL 0x1C16D08
	0x0323ADDC MOV X1, X0
	0x0323ADE0 MOV X0, X20
	0x0323ADE4 BL 0x1C16DEC
	0x0323ADE8 ADRP X0, 0xEC1000
	0x0323ADEC LDR X0, [X0 + 0x760]
	0x0323ADF0 BL 0x1C16D08
	0x0323ADF4 BL 0x1C16F10
	0x0323ADF8 MOV X19, X0
	0x0323ADFC ADRP X0, 0xEE8000
	0x0323AE00 LDR X0, [X0 + 0x308]
	0x0323AE04 BL 0x1C16D08
	0x0323AE08 MOV X20, X0
	0x0323AE0C ADRP X0, 0xEE8000
	0x0323AE10 LDR X0, [X0 + 0xE0]
	0x0323AE14 BL 0x1C16D08
	0x0323AE18 MOV X2, X0
	0x0323AE1C MOV X0, X19
	0x0323AE20 MOV X1, X20
	0x0323AE24 MOV X3, X31
	0x0323AE28 BL 0x3311888
	0x0323AE2C ADRP X0, 0xEE8000
	0x0323AE30 LDR X0, [X0 + 0x7F8]
	0x0323AE34 BL 0x1C16D08
	0x0323AE38 MOV X1, X0
	0x0323AE3C MOV X0, X19
	0x0323AE40 BL 0x1C16DEC
	0x0323AE44 STR X30, [X31 - 0x20]!
	0x0323AE48 STP X20, X19, [X31 + 0x10]
	0x0323AE4C CBZ X1, 0x323AE70
	0x0323AE50 TBNZ X2, 0x1F, 0x323AEB8
	0x0323AE54 LDR X8, [X0]
	0x0323AE58 LDP X20, X19, [X31 + 0x10]
	0x0323AE5C MOV X3, X31
	0x0323AE60 LDR X5, [X8 + 0x2C8]
	0x0323AE64 LDR X4, [X8 + 0x2D0]
	0x0323AE68 LDR X30, [X31], #0x20
	0x0323AE6C BR X5

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x11A3000
	011 Move W8, [X21+1020]
	012 Move X19, X5
	013 Move W24, W4
	014 Move X20, X3
	015 Move W23, W2
	016 Move X25, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xEE9000
	023 Move X0, [X0+1944]
	024 Call 0x1C17CF4
	025 Move X0, 0xEE9000
	026 Move X0, [X0+1952]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+1020], W8
	030 Compare X19, 0
	031 JumpIfEqual {37}
	032 Move X8, 0xEE9000
	033 Move X8, [X8+1944]
	034 Move X1, [X8]
	035 Move X8, [X19]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X8, 0xEE9000
	038 Move X8, [X8+1952]
	039 Move X0, [X8]
	040 Call 0x1C17F10
	041 Move X1, X22
	042 Move X2, X19
	043 Move X3, X20
	044 Move W4, W24
	045 Move X5, X25
	046 Move W6, W23
	047 Move X7, X31
	048 Move X21, X0
	049 Call EncodingCharBuffer..ctor, X0, X1, X2, X3, X4, X5, X6
	050 Compare X19, 0
	051 JumpIfEqual {73}
	052 Move W9, [X19+56]
	053 Move W23, [X19+48]
	054 Move W8, [X19+52]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CSET not yet implemented."
	057 Subtract W26, W8, 16
	058 Compare X21, 0
	059 JumpIfEqual {221}
	060 NotImplemented "Instruction ASRV not yet implemented."
	061 Move X0, X21
	062 Move X2, X31
	063 Call EncodingCharBuffer.AddChar, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {81}
	068 Move W2, 1
	069 Move X0, X22
	070 Move X1, X19
	071 Move X3, X31
	072 Call Encoding.ThrowCharsOverflow, X0, X1, X2
	073 Move W23, W31
	074 Move W24, W31
	075 Move TEMP, 0
	076 Not TEMP
	077 Move W8, TEMP
	078 Move W26, W8
	079 Compare X21, 0
	080 JumpIfEqual {221}
	081 Move W8, W24
	082 Move W25, W26
	083 Move W24, W8
	084 Move X0, X21
	085 Move X1, X31
	086 Call EncodingCharBuffer.get_MoreData, X0
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {189}
	091 Move X0, X21
	092 Move X1, X31
	093 Call EncodingCharBuffer.GetNextByte, X0
	094 NotImplemented "Instruction SXTB not yet implemented."
	095 Move TEMP, X25
	096 And TEMP, TEMP, -2147483648
	097 Compare TEMP, -2147483648
	098 JumpIfNotEqual {111}
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move TEMP, X1
	101 And TEMP, TEMP, -2147483648
	102 Compare TEMP, -2147483648
	103 JumpIfNotEqual {159}
	104 Move X0, X21
	105 Move X2, X31
	106 Call EncodingCharBuffer.Fallback, X0, X1
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfEqual {84}
	111 Move TEMP, X1
	112 And TEMP, TEMP, -2147483648
	113 Compare TEMP, -2147483648
	114 JumpIfEqual {127}
	115 Move X8, [X22+64]
	116 Compare X8, 0
	117 JumpIfEqual {221}
	118 Move W9, [X8+24]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Add X8, X8, W1
	121 NotImplemented "Instruction INVALID not yet implemented."
	122 Move TEMP, X8
	123 And TEMP, TEMP, -2147483648
	124 Compare TEMP, -2147483648
	125 JumpIfNotEqual {168}
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X0, X21
	128 Move X2, X31
	129 Call EncodingCharBuffer.Fallback, X0, X1
	130 Move TEMP, 0
	131 Not TEMP
	132 Move W25, TEMP
	133 Move TEMP, X0
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfEqual {84}
	137 Move W25, W31
	138 Move W8, 1
	139 Move W8, W31
	140 Move TEMP, 0
	141 Not TEMP
	142 Move W25, TEMP
	143 Move TEMP, X24
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {83}
	147 Move W1, 43
	148 Move X0, X21
	149 Move X2, X31
	150 Call EncodingCharBuffer.AddChar, X0, X1
	151 Move TEMP, 0
	152 Not TEMP
	153 Move W25, TEMP
	154 Move W8, 1
	155 Move TEMP, X0
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfEqual {83}
	159 And W1, W1, 255
	160 Move W26, W25
	161 Move X0, X21
	162 Move X2, X31
	163 Call EncodingCharBuffer.AddChar, X0, X1
	164 Move TEMP, X0
	165 And TEMP, TEMP, 1
	166 Compare TEMP, 1
	167 JumpIfEqual {81}
	168 And W8, W8, 255
	169 Add W26, W25, 6
	170 Move W24, W31
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Or W23, W8, W23
	173 Subtract W26, W25, 10
	174 NotImplemented "Instruction ASRV not yet implemented."
	175 Move W24, W31
	176 And W1, W8, 0xFFFF
	177 Move TEMP, X26
	178 And TEMP, TEMP, -2147483648
	179 Compare TEMP, -2147483648
	180 JumpIfEqual {188}
	181 Move W1, 1
	182 Move X0, X21
	183 Move X2, X31
	184 Call EncodingCharBuffer.AdjustBytes, X0, X1
	185 Add W25, W26, 16
	186 Compare X20, 0
	187 JumpIfNotEqual {191}
	188 Move W25, W26
	189 Compare X20, 0
	190 JumpIfEqual {207}
	191 Compare X19, 0
	192 JumpIfEqual {207}
	193 Move W8, [X19+40]
	194 Compare W8, 0
	195 JumpIfEqual {199}
	196 NotImplemented "Instruction MOVI not yet implemented."
	197 Move W8, W31
	198 Move [X19+48], D0
	199 And W8, W24, 1
	200 Move [X19+48], W23
	201 Move [X19+52], W25
	202 Move X0, X21
	203 Move X1, X31
	204 Move [X19+56], W8
	205 Call EncodingCharBuffer.get_BytesUsed, X0
	206 Move [X19+44], W0
	207 Move W0, [X21+40]
	208 Move X20, [X31+64]
	209 Move X19, [X31+72]
	210 Move X22, [X31+48]
	211 Move X21, [X31+56]
	212 Move X24, [X31+32]
	213 Move X23, [X31+40]
	214 Move X26, [X31+16]
	215 Move X25, [X31+24]
	216 Move X30, [X31+80]
	217 Return X0
	218 Move W24, 1
	219 Compare X20, 0
	220 JumpIfNotEqual {191}
	221 Call 0x1C17F20
	222 Move X0, X19
	223 Call 0x1C181E0
	224 Call 0x1C17F28

Method: System.Text.Decoder GetDecoder()

Disassembly:
	0x0323AE70 ADRP X0, 0xEBE000
	0x0323AE74 LDR X0, [X0 + 0x528]
	0x0323AE78 BL 0x1C16D08
	0x0323AE7C BL 0x1C16F10
	0x0323AE80 MOV X19, X0
	0x0323AE84 ADRP X0, 0xEE8000
	0x0323AE88 LDR X0, [X0 + 0x308]
	0x0323AE8C BL 0x1C16D08
	0x0323AE90 MOV X20, X0
	0x0323AE94 ADRP X0, 0xEE8000
	0x0323AE98 LDR X0, [X0 + 0x2E0]
	0x0323AE9C BL 0x1C16D08
	0x0323AEA0 MOV X2, X0
	0x0323AEA4 MOV X0, X19
	0x0323AEA8 MOV X1, X20
	0x0323AEAC MOV X3, X31
	0x0323AEB0 BL 0x3315F7C
	0x0323AEB4 B 0x323AEFC
	0x0323AEB8 ADRP X0, 0xEC1000
	0x0323AEBC LDR X0, [X0 + 0x760]
	0x0323AEC0 BL 0x1C16D08
	0x0323AEC4 BL 0x1C16F10
	0x0323AEC8 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x11A3000
	006 Move X21, 0xEE9000
	007 Move W8, [X20+1021]
	008 Move X21, [X21+1944]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEE9000
	015 Move X0, [X0+1944]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1021], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X2, X31
	023 Move X20, X0
	024 Call DecoderNLS..ctor, X0, X1
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.Text.Encoder GetEncoder()

Disassembly:
	0x0323AED4 BL 0x1C16D08
	0x0323AED8 MOV X20, X0
	0x0323AEDC ADRP X0, 0xEE1000
	0x0323AEE0 LDR X0, [X0 + 0x670]
	0x0323AEE4 BL 0x1C16D08
	0x0323AEE8 MOV X2, X0
	0x0323AEEC MOV X0, X19
	0x0323AEF0 MOV X1, X20
	0x0323AEF4 MOV X3, X31
	0x0323AEF8 BL 0x3311888
	0x0323AEFC ADRP X0, 0xEE8000
	0x0323AF00 LDR X0, [X0 + 0x800]
	0x0323AF04 BL 0x1C16D08
	0x0323AF08 MOV X1, X0
	0x0323AF0C MOV X0, X19
	0x0323AF10 BL 0x1C16DEC
	0x0323AF14 STR X30, [X31 - 0x50]!
	0x0323AF18 STP X26, X25, [X31 + 0x10]
	0x0323AF1C STP X24, X23, [X31 + 0x20]
	0x0323AF20 STP X22, X21, [X31 + 0x30]
	0x0323AF24 STP X20, X19, [X31 + 0x40]
	0x0323AF28 ADRP X25, 0x11A2000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x11A3000
	006 Move X21, 0xEE9000
	007 Move W8, [X20+1022]
	008 Move X21, [X21+1928]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEE9000
	015 Move X0, [X0+1928]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1022], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call EncoderNLS..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Int32 GetMaxByteCount(System.Int32 charCount)

Disassembly:
	0x0323AF30 MOV W20, W5
	0x0323AF34 MOV X23, X4
	0x0323AF38 MOV W19, W3
	0x0323AF3C MOV W21, W2
	0x0323AF40 MOV X24, X1
	0x0323AF44 MOV X22, X0
	0x0323AF48 TBNZ X8, 0x0, 0x323AF6C
	0x0323AF4C ADRP X0, 0xEE8000
	0x0323AF50 LDR X0, [X0 + 0x2C8]
	0x0323AF54 BL 0x1C16CF4
	0x0323AF58 ADRP X0, 0xEE8000
	0x0323AF5C LDR X0, [X0 + 0x2D0]
	0x0323AF60 BL 0x1C16CF4
	0x0323AF64 MOVZ W8, 0x1
	0x0323AF68 STRB W8, [X25 + 0x405]
	0x0323AF6C CBZ X24, 0x323B058
	0x0323AF70 CBZ X23, 0x323B058
	0x0323AF74 TBNZ X19, 0x1F, 0x323B0B0
	0x0323AF78 TBNZ X21, 0x1F, 0x323B0B0
	0x0323AF7C LDR W8, [X24 + 0x18]
	0x0323AF80 SUB W9, W8, W21
	0x0323AF84 CMP W9, W19
	0x0323AF88 B.LT 0x323B11C
	0x0323AF8C TBNZ X20, 0x1F, 0x323B028
	0x0323AF90 LDR W9, [X23 + 0x18]
	0x0323AF94 SUBS W25, W9, W20
	0x0323AF98 B.LT 0x323B028
	0x0323AF9C CBZ W19, 0x323B00C
	0x0323AFA0 ADRP X9, 0xEE8000
	0x0323AFA4 LDR X9, [X9 + 0x2D0]
	0x0323AFA8 ADRP X26, 0xEE8000
	0x0323AFAC LDR X26, [X26 + 0x2C8]
	0x0323AFB0 CMP W8, 0x0
	0x0323AFB4 LDR X1, [X9]
	0x0323AFB8 ADD X9, X24, 0x20
	0x0323AFBC MOV X0, X23
	0x0323AFC0 CSEL X24, X31, X9, EQ
	0x0323AFC4 BL 0x25FBC40
	0x0323AFC8 LDR X2, [X26]
	0x0323AFCC BL 0x2218CFC
	0x0323AFD0 LDR X8, [X22]
	0x0323AFD4 ADD X1, X24, W21, SXTW
	0x0323AFD8 ADD X3, X0, W20, 0x1, UXTW
	0x0323AFDC MOV X0, X22
	0x0323AFE0 LDR X7, [X8 + 0x308]
	0x0323AFE4 LDR X6, [X8 + 0x310]
	0x0323AFE8 MOV W2, W19
	0x0323AFEC MOV W4, W25

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move TEMP, X1
	005 And TEMP, TEMP, -2147483648
	006 Compare TEMP, -2147483648
	007 JumpIfEqual {20}
	008 Move W8, W1
	009 Move X8, X8
	010 ShiftRight X8, 63
	011 And X8, X8, 0x3FFFFFFF
	012 Add X8, X8, W1
	013 Or W9, W31, 0x7FFFFFFE
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Add W0, W8, 2
	018 Move X30, [X31+32]
	019 Return X0
	020 Move X0, 0xEC2000
	021 Move X0, [X0+1888]
	022 Call 0x1C17D08
	023 Call 0x1C17F10
	024 Move X19, X0
	025 Move X0, 0xEE9000
	026 Move X0, [X0+784]
	027 Call 0x1C17D08
	028 Move X20, X0
	029 Move X0, 0xEE2000
	030 Move X0, [X0+1648]
	031 Move X0, 0xEC2000
	032 Move X0, [X0+1888]
	033 Call 0x1C17D08
	034 Call 0x1C17F10
	035 Move X19, X0
	036 Move X0, 0xEE9000
	037 Move X0, [X0+784]
	038 Call 0x1C17D08
	039 Move X20, X0
	040 Move X0, 0xEE9000
	041 Move X0, [X0+1056]
	042 Call 0x1C17D08
	043 Move X2, X0
	044 Move X0, X19
	045 Move X1, X20
	046 Move X3, X31
	047 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	048 Move X0, 0xEE9000
	049 Move X0, [X0+1960]
	050 Call 0x1C17D08
	051 Move X1, X0
	052 Move X0, X19
	053 Call 0x1C17DEC

Method: System.Int32 GetMaxCharCount(System.Int32 byteCount)

Disassembly:
	0x0323AFF0 LDP X20, X19, [X31 + 0x40]
	0x0323AFF4 LDP X22, X21, [X31 + 0x30]
	0x0323AFF8 LDP X24, X23, [X31 + 0x20]
	0x0323AFFC LDP X26, X25, [X31 + 0x10]
	0x0323B000 MOV X5, X31
	0x0323B004 LDR X30, [X31], #0x50
	0x0323B008 BR X7
	0x0323B00C LDP X20, X19, [X31 + 0x40]
	0x0323B010 LDP X22, X21, [X31 + 0x30]
	0x0323B014 LDP X24, X23, [X31 + 0x20]
	0x0323B018 LDP X26, X25, [X31 + 0x10]
	0x0323B01C MOV W0, W31
	0x0323B020 LDR X30, [X31], #0x50
	0x0323B024 RET
	0x0323B028 ADRP X0, 0xEC0000
	0x0323B02C LDR X0, [X0 + 0x760]
	0x0323B030 BL 0x1C16D08
	0x0323B034 BL 0x1C16F10
	0x0323B038 MOV X19, X0
	0x0323B03C ADRP X0, 0xEE7000
	0x0323B040 LDR X0, [X0 + 0x318]
	0x0323B044 BL 0x1C16D08
	0x0323B048 MOV X20, X0
	0x0323B04C ADRP X0, 0xEE0000
	0x0323B050 LDR X0, [X0 + 0x660]
	0x0323B054 B 0x323B148
	0x0323B058 ADRP X8, 0xEE7000
	0x0323B05C ADRP X9, 0xEE7000
	0x0323B060 LDR X8, [X8 + 0x2D8]

ISIL:
	001 Move TEMP, X1
	002 And TEMP, TEMP, -2147483648
	003 Compare TEMP, -2147483648
	004 JumpIfEqual {8}
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSINC not yet implemented."
	007 Return X0
	008 Move [X31-32], X30
	009 Move [X31+16], X20
	010 Move [X31+24], X19
	011 Move X0, 0xEC1000
	012 Move X0, [X0+1888]
	013 Call 0x1C17D08
	014 Call 0x1C17F10
	015 Move X19, X0
	016 Move X0, 0xEE8000
	017 Move X0, [X0+808]
	018 Call 0x1C17D08
	019 Move X20, X0
	020 Move X0, 0xEE1000
	021 Move X0, [X0+1648]
	022 Call 0x1C17D08
	023 Move X2, X0
	024 Move X0, X19
	025 Move X1, X20
	026 Move X3, X31
	027 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	028 Move X0, 0xEE8000
	029 Move X0, [X0+1968]
	030 Call 0x1C17D08
	031 Move X1, X0
	032 Move X0, X19
	033 Call 0x1C17DEC

Method: System.Void .cctor()

Disassembly:
	0x0323B064 LDR X9, [X9 + 0x308]
	0x0323B068 CMP X24, 0x0
	0x0323B06C CSEL X0, X9, X8, EQ
	0x0323B070 BL 0x1C16D08
	0x0323B074 MOV X19, X0
	0x0323B078 ADRP X0, 0xEBD000
	0x0323B07C LDR X0, [X0 + 0x528]
	0x0323B080 BL 0x1C16D08
	0x0323B084 BL 0x1C16F10
	0x0323B088 MOV X20, X0
	0x0323B08C ADRP X0, 0xEE7000
	0x0323B090 LDR X0, [X0 + 0x2E0]
	0x0323B094 BL 0x1C16D08
	0x0323B098 MOV X2, X0
	0x0323B09C MOV X0, X20
	0x0323B0A0 MOV X1, X19
	0x0323B0A4 MOV X3, X31
	0x0323B0A8 BL 0x3315F7C
	0x0323B0AC B 0x323B104
	0x0323B0B0 ADRP X8, 0xEE7000
	0x0323B0B4 ADRP X9, 0xEE7000
	0x0323B0B8 LDR X8, [X8 + 0x328]
	0x0323B0BC LDR X9, [X9 + 0x300]
	0x0323B0C0 CMP W21, 0x0
	0x0323B0C4 CSEL X0, X9, X8, LT
	0x0323B0C8 BL 0x1C16D08
	0x0323B0CC MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x11A2000
	005 Move X20, 0xEE8000
	006 Move W8, [X19+1023]
	007 Move X20, [X20+1832]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xEE8000
	013 Move X0, [X0+1832]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1023], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move W1, 0xFDE8
	020 Move X2, X31
	021 Move X19, X0
	022 Call Encoding..ctor, X0, X1
	023 Move X0, X19
	024 Move [X19+80], W31
	025 Call UTF7Encoding.MakeTables, X0
	026 Move X8, [X20]
	027 Move X8, [X8+184]
	028 Move [X8], X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return 

