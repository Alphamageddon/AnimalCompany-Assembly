Type: System.Text.DecoderExceptionFallbackBuffer

Method: System.Boolean Fallback(System.Byte[] bytesUnknown, System.Int32 index)

Disassembly:
	0x033FE734 LDP X30, X23, [X31], #0x30
	0x033FE738 RET

ISIL:
	001 Move [X31-16], X30
	002 Call DecoderExceptionFallbackBuffer.Throw, X0, X1, X2

Method: System.Char GetNextChar()

Disassembly:
	0x033FE908 TBNZ X8, 0x0, 0x33FE920
	0x033FE90C ADRP X0, 0xD24000

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void Throw(System.Byte[] bytesUnknown, System.Int32 index)

Disassembly:
	0x033FE73C ADRP X0, 0xD24000
	0x033FE740 LDR X0, [X0 + 0x338]
	0x033FE744 BL 0x1C16D08
	0x033FE748 MOV X19, X0
	0x033FE74C ADRP X0, 0xD24000
	0x033FE750 LDR X0, [X0 + 0x340]
	0x033FE754 BL 0x1C16D08
	0x033FE758 MOV X1, X0
	0x033FE75C MOV X0, X19
	0x033FE760 MOV X2, X31
	0x033FE764 BL 0x32094D4
	0x033FE768 MOV X19, X0
	0x033FE76C ADRP X0, 0xCFD000
	0x033FE770 LDR X0, [X0 + 0x578]
	0x033FE774 BL 0x1C16D08
	0x033FE778 BL 0x1C16F10
	0x033FE77C MOV X1, X19
	0x033FE780 MOV X2, X31
	0x033FE784 MOV X20, X0
	0x033FE788 BL 0x3314A68
	0x033FE78C ADRP X0, 0xD2F000
	0x033FE790 LDR X0, [X0 + 0xC48]
	0x033FE794 BL 0x1C16D08
	0x033FE798 MOV X1, X0
	0x033FE79C MOV X0, X20
	0x033FE7A0 BL 0x1C16DEC
	0x033FE7A4 ADRP X0, 0xCFA000
	0x033FE7A8 LDR X0, [X0 + 0x528]
	0x033FE7AC BL 0x1C16D08
	0x033FE7B0 BL 0x1C16F10
	0x033FE7B4 MOV X19, X0
	0x033FE7B8 ADRP X0, 0xD24000
	0x033FE7BC LDR X0, [X0 + 0x340]
	0x033FE7C0 BL 0x1C16D08
	0x033FE7C4 MOV X1, X0
	0x033FE7C8 MOV X0, X19
	0x033FE7CC MOV X2, X31
	0x033FE7D0 BL 0x330E100
	0x033FE7D4 ADRP X0, 0xD2F000
	0x033FE7D8 LDR X0, [X0 + 0xC48]
	0x033FE7DC BL 0x1C16D08
	0x033FE7E0 MOV X1, X0
	0x033FE7E4 MOV X0, X19
	0x033FE7E8 BL 0x1C16DEC
	0x033FE7EC STP X30, X21, [X31 - 0x20]!
	0x033FE7F0 STP X20, X19, [X31 + 0x10]
	0x033FE7F4 ADRP X21, 0xFDF000
	0x033FE7F8 LDRB W8, [X21 + 0x4ED]
	0x033FE7FC MOV X20, X1
	0x033FE800 MOV X19, X0
	0x033FE804 TBNZ X8, 0x0, 0x33FE81C
	0x033FE808 ADRP X0, 0xD24000
	0x033FE80C LDR X0, [X0 + 0x350]
	0x033FE810 BL 0x1C16CF4
	0x033FE814 MOVZ W8, 0x1
	0x033FE818 STRB W8, [X21 + 0x4ED]
	0x033FE81C MOV X0, X19
	0x033FE820 MOV X1, X31
	0x033FE824 BL 0x33BDD8C
	0x033FE828 CBZ X20, 0x33FE854
	0x033FE82C ADRP X8, 0xD24000
	0x033FE830 LDR X8, [X8 + 0x350]
	0x033FE834 LDR X1, [X8]
	0x033FE838 MOV X0, X20
	0x033FE83C MOV X2, X31
	0x033FE840 BL 0x32A9F64
	0x033FE844 STR X0, [X19 + 0x10]
	0x033FE848 LDP X20, X19, [X31 + 0x10]
	0x033FE84C LDP X30, X21, [X31], #0x20
	0x033FE850 RET
	0x033FE854 BL 0x1C16F20
	0x033FE858 B 0x33FE85C
	0x033FE85C MOV X21, X0
	0x033FE860 CMP W1, 0x1
	0x033FE864 B.NE 0x33FE8E4
	0x033FE868 MOV X0, X21
	0x033FE86C BL 0x3EB1AD0
	0x033FE870 MOV X21, X0
	0x033FE874 ADRP X0, 0xCFB000
	0x033FE878 LDR X0, [X0 + 0xCC0]
	0x033FE87C BL 0x1C16D08
	0x033FE880 LDR X8, [X21]
	0x033FE884 LDR X1, [X8]
	0x033FE888 BL 0x1C17270
	0x033FE88C TBZ X0, 0x0, 0x33FE8B8
	0x033FE890 BL 0x3EB1AE0
	0x033FE894 CBZ X20, 0x33FE8D8
	0x033FE898 ADRP X0, 0xD24000
	0x033FE89C LDR X0, [X0 + 0x358]
	0x033FE8A0 BL 0x1C16D08
	0x033FE8A4 MOV X1, X0
	0x033FE8A8 MOV X0, X20
	0x033FE8AC MOV X2, X31
	0x033FE8B0 BL 0x32A9F64
	0x033FE8B4 B 0x33FE844
	0x033FE8B8 MOVZ W0, 0x8
	0x033FE8BC BL 0x3EB1AF0
	0x033FE8C0 LDR X8, [X21]
	0x033FE8C4 STR X8, [X0]
	0x033FE8C8 ADRP X1, 0xAB6000
	0x033FE8CC ADD X1, X1, 0xE58
	0x033FE8D0 MOV X2, X31
	0x033FE8D4 BL 0x3EB1B00
	0x033FE8D8 BL 0x1C16F20
	0x033FE8DC MOV X21, X0
	0x033FE8E0 BL 0x3EB1AE0
	0x033FE8E4 MOV X0, X21
	0x033FE8E8 BL 0x1D2C690
	0x033FE8EC BL 0x1990590
	0x033FE8F0 STP X30, X21, [X31 - 0x20]!
	0x033FE8F4 STP X20, X19, [X31 + 0x10]
	0x033FE8F8 ADRP X21, 0xFDF000
	0x033FE8FC LDRB W8, [X21 + 0x4EE]
	0x033FE900 MOV X19, X1
	0x033FE904 MOV X20, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xFE0000
	011 Move W8, [X21+1251]
	012 Move W19, W2
	013 Move X20, X1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xCF8000
	019 Move X0, [X0+3144]
	020 Call 0x1C17CF4
	021 Move X0, 0xCF6000
	022 Move X0, [X0+2288]
	023 Call 0x1C17CF4
	024 Move X0, 0xD23000
	025 Move X0, [X0+2984]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1251], W8
	029 Compare X20, 0
	030 JumpIfEqual {44}
	031 Move X8, 0xCF6000
	032 Move X8, [X8+2288]
	033 Move X0, [X8]
	034 Call 0x1C17F10
	035 Move W8, [X20+24]
	036 Move X2, X31
	037 Move X21, X0
	038 Add W1, W8, W8
	039 Call StringBuilder..ctor, X0, X1
	040 Move W8, [X20+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Compare X21, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17F20
	045 Move X23, 0xCF8000
	046 Move X24, 0xD23000
	047 Move X23, [X23+3144]
	048 Move X24, [X24+2984]
	049 Move X25, X31
	050 Add X22, X20, 32
	051 Move W1, 91
	052 Move X0, X21
	053 Move X2, X31
	054 Call StringBuilder.Append, X0, X1
	055 Move X0, [X23]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X31
	061 Call CultureInfo.get_InvariantCulture
	062 Move W8, [X20+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X1, [X24]
	065 Move X2, X0
	066 Add X0, X22, X25
	067 Move X3, X31
	068 Call Byte.ToString, X0, X1, X2
	069 Move X1, X0
	070 Move X0, X21
	071 Move X2, X31
	072 Call StringBuilder.Append, X0, X1
	073 Move W1, 93
	074 Move X0, X21
	075 Move X2, X31
	076 Call StringBuilder.Append, X0, X1
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Add X8, X25, 1
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Move X25, X8
	081 NotImplemented "Instruction CMP not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X0, 0xD30000
	084 Move X0, [X0+3032]
	085 Call 0x1C17D08
	086 Move X1, X0
	087 Move X0, X21
	088 Move X2, X31
	089 Call StringBuilder.Append, X0, X1
	090 Move [X31+12], W19
	091 Move X0, 0xCF6000
	092 Move X0, [X0+1880]
	093 Call 0x1C17D08
	094 Add X1, X31, 12
	095 Call 0x1C17E04
	096 Move X22, X0
	097 Move X0, 0xD30000
	098 Move X0, [X0+3040]
	099 Call 0x1C17D08
	100 Move X1, X21
	101 Move X2, X22
	102 Move X3, X31
	103 Call SR.Format, X0, X1, X2
	104 Move X21, X0
	105 Move X0, 0xD30000
	106 Move X0, [X0+3048]
	107 Call 0x1C17D08
	108 Call 0x1C17F10
	109 Move X1, X21
	110 Move X2, X20
	111 Move W3, W19
	112 Move X22, X0
	113 Call DecoderFallbackException..ctor, X0, X1, X2, X3
	114 Move X0, 0xD30000
	115 Move X0, [X0+3056]
	116 Call 0x1C17D08
	117 Move X1, X0
	118 Move X0, X22
	119 Call 0x1C17DEC
	120 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x033FE6C0 BL 0x331BBB4
	0x033FE6C4 TBZ X0, 0x0, 0x33FE708

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

