Type: System.Text.DecoderFallback

Method: System.Text.DecoderFallback get_ReplacementFallback()

Disassembly:
	0x033FBBB4 BL 0x1C16D08
	0x033FBBB8 MOV X1, X0
	0x033FBBBC MOV X0, X20
	0x033FBBC0 BL 0x1C16DEC
	0x033FBBC4 ADRP X0, 0xD00000
	0x033FBBC8 LDR X0, [X0 + 0x760]
	0x033FBBCC BL 0x1C16D08
	0x033FBBD0 BL 0x1C16F10
	0x033FBBD4 MOV X19, X0
	0x033FBBD8 ADRP X0, 0xD27000
	0x033FBBDC LDR X0, [X0 + 0x308]
	0x033FBBE0 BL 0x1C16D08
	0x033FBBE4 MOV X20, X0
	0x033FBBE8 ADRP X0, 0xD27000
	0x033FBBEC LDR X0, [X0 + 0xE0]
	0x033FBBF0 BL 0x1C16D08
	0x033FBBF4 MOV X2, X0
	0x033FBBF8 MOV X0, X19
	0x033FBBFC MOV X1, X20
	0x033FBC00 MOV X3, X31
	0x033FBC04 BL 0x3311888
	0x033FBC08 ADRP X0, 0xD32000
	0x033FBC0C LDR X0, [X0 + 0xB80]
	0x033FBC10 BL 0x1C16D08
	0x033FBC14 MOV X1, X0
	0x033FBC18 MOV X0, X19
	0x033FBC1C BL 0x1C16DEC
	0x033FBC20 STR X30, [X31 - 0x50]!
	0x033FBC24 STP X26, X25, [X31 + 0x10]
	0x033FBC28 STP X24, X23, [X31 + 0x20]
	0x033FBC2C STP X22, X21, [X31 + 0x30]
	0x033FBC30 STP X20, X19, [X31 + 0x40]
	0x033FBC34 ADRP X22, 0xFE2000
	0x033FBC38 LDRB W8, [X22 + 0x4D2]
	0x033FBC3C MOV X19, X3
	0x033FBC40 MOV W23, W2
	0x033FBC44 MOV X21, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xFE3000
	005 Move X20, 0xD28000
	006 Move W8, [X19+1253]
	007 Move X20, [X20+2392]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xD28000
	013 Move X0, [X0+2392]
	014 Call 0x1C17CF4
	015 Move X0, 0xD28000
	016 Move X0, [X0+1608]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+1253], W8
	020 Move X8, [X20]
	021 Move X8, [X8+184]
	022 Move X0, [X8]
	023 Compare X0, 0
	024 JumpIfNotEqual {41}
	025 Move X8, 0xD28000
	026 Move X8, [X8+1608]
	027 Move X0, [X8]
	028 Call 0x1C17F10
	029 Move X19, X0
	030 Call DecoderReplacementFallback..ctor, X0
	031 Move X8, [X20]
	032 Move X1, X19
	033 Move X2, X31
	034 Move X0, [X8+184]
	035 Call 0x1C25138
	036 Compare X0, 0
	037 JumpIfNotEqual {41}
	038 Move X8, [X20]
	039 Move X8, [X8+184]
	040 Move X0, [X8]
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Return X0

Method: System.Text.DecoderFallback get_ExceptionFallback()

Disassembly:
	0x033FE9EC LDR X8, [X0 + 0x10]
	0x033FE9F0 CBZ X8, 0x33FEA00
	0x033FE9F4 LDR W0, [X8 + 0x10]
	0x033FE9F8 LDR X30, [X31], #0x10
	0x033FE9FC RET
	0x033FEA00 BL 0x1C16F20
	0x033FEA04 STP X30, X21, [X31 - 0x20]!
	0x033FEA08 STP X20, X19, [X31 + 0x10]
	0x033FEA0C ADRP X21, 0xFDF000
	0x033FEA10 LDRB W8, [X21 + 0x4F1]
	0x033FEA14 MOV X20, X1
	0x033FEA18 MOV X19, X0
	0x033FEA1C TBNZ X8, 0x0, 0x33FEA34
	0x033FEA20 ADRP X0, 0xD24000
	0x033FEA24 LDR X0, [X0 + 0x648]
	0x033FEA28 BL 0x1C16CF4
	0x033FEA2C MOVZ W8, 0x1
	0x033FEA30 STRB W8, [X21 + 0x4F1]
	0x033FEA34 CBZ X20, 0x33FEA54
	0x033FEA38 ADRP X8, 0xD24000
	0x033FEA3C LDR X8, [X8 + 0x648]
	0x033FEA40 LDR X9, [X20]
	0x033FEA44 LDR X8, [X8]
	0x033FEA48 CMP X9, X8
	0x033FEA4C CSEL X8, X20, X31, EQ
	0x033FEA50 B.EQ 0x33FEA64
	0x033FEA54 LDP X20, X19, [X31 + 0x10]
	0x033FEA58 MOV W0, W31
	0x033FEA5C LDP X30, X21, [X31], #0x20
	0x033FEA60 RET
	0x033FEA64 CBZ X8, 0x33FEA80
	0x033FEA68 LDR X0, [X19 + 0x10]
	0x033FEA6C LDR X1, [X8 + 0x10]
	0x033FEA70 LDP X20, X19, [X31 + 0x10]
	0x033FEA74 MOV X2, X31
	0x033FEA78 LDP X30, X21, [X31], #0x20
	0x033FEA7C B 0x321BA08
	0x033FEA80 BL 0x1C16F20
	0x033FEA84 STR X30, [X31 - 0x10]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xFE0000
	005 Move X20, 0xD25000
	006 Move W8, [X19+1254]
	007 Move X20, [X20+2392]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xD30000
	013 Move X0, [X0+3024]
	014 Call 0x1C17CF4
	015 Move X0, 0xD25000
	016 Move X0, [X0+2392]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+1254], W8
	020 Move X8, [X20]
	021 Move X8, [X8+184]
	022 Move X0, [X8+8]
	023 Compare X0, 0
	024 JumpIfNotEqual {43}
	025 Move X8, 0xD30000
	026 Move X8, [X8+3024]
	027 Move X0, [X8]
	028 Call 0x1C17F10
	029 Move X1, X31
	030 Move X19, X0
	031 Call Object..ctor, X0
	032 Move X8, [X20]
	033 Move X1, X19
	034 Move X2, X31
	035 Move X8, [X8+184]
	036 Add X0, X8, 8
	037 Call 0x1C25138
	038 Compare X0, 0
	039 JumpIfNotEqual {43}
	040 Move X8, [X20]
	041 Move X8, [X8+184]
	042 Move X0, [X8+8]
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Return X0

Method: System.Text.DecoderFallbackBuffer CreateFallbackBuffer()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Int32 get_MaxCharCount()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void .ctor()

Disassembly:
	0x033FE198 STP X20, X19, [X31 + 0x10]
	0x033FE19C CBZ X1, 0x33FE1DC

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

