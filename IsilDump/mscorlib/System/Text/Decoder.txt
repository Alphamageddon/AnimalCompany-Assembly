Type: System.Text.Decoder

Method: System.Void .ctor()

Disassembly:
	0x033FDBCC STR X22, [X19]
	0x033FDBD0 MOVZ W0, 0x1

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Text.DecoderFallback get_Fallback()

Disassembly:
	0x033FDBD4 LDP X20, X19, [X31 + 0x30]
	0x033FDBD8 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Text.DecoderFallbackBuffer get_FallbackBuffer()

Disassembly:
	0x033FD534 ADD X11, X8, X11, 0x1F, ASR
	0x033FD538 LDRH W11, [X11 + 0x20]
	0x033FD53C CMP W10, W11
	0x033FD540 B.HI 0x33FD5CC
	0x033FD544 CMP W9, 0x7
	0x033FD548 B.LT 0x33FD590
	0x033FD54C MOV W11, W31
	0x033FD550 MOV W13, W9
	0x033FD554 MOV W12, W9
	0x033FD558 ADD W13, W11, W13, 0x1, LSR
	0x033FD55C AND W13, W13, 0xFFFE
	0x033FD560 CMP W13, W9
	0x033FD564 B.CS 0x33FD608
	0x033FD568 ADD X14, X8, W13, 0x1, UXTW
	0x033FD56C LDRH W14, [X14 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+24]
	005 Compare X0, 0
	006 JumpIfNotEqual {18}
	007 Move X0, [X19+16]
	008 Compare X0, 0
	009 JumpIfNotEqual {13}
	010 Call DecoderFallback.get_ReplacementFallback
	011 Compare X0, 0
	012 JumpIfEqual {21}
	013 Move X8, [X0]
	014 Move X9, [X8+376]
	015 Move X1, [X8+384]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move [X19+24], X0
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return X0
	021 Call 0x1C17F20

Method: System.Boolean get_InternalHasFallbackBuffer()

Disassembly:
	0x033FDBDC LDP X24, X23, [X31 + 0x10]
	0x033FDBE0 LDR X30, [X31], #0x40
	0x033FDBE4 RET
	0x033FDBE8 MOV W0, W31

ISIL:
	001 Move X8, [X0+24]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void Reset()

Disassembly:
	0x033FDBEC B 0x33FDBD4
	0x033FDBF0 ADRP X0, 0xCFE000
	0x033FDBF4 LDR X0, [X0 + 0x578]
	0x033FDBF8 BL 0x1C16D08
	0x033FDBFC BL 0x1C16F10
	0x033FDC00 MOV X19, X0
	0x033FDC04 ADRP X0, 0xD25000
	0x033FDC08 LDR X0, [X0 + 0x338]
	0x033FDC0C BL 0x1C16D08
	0x033FDC10 MOV X1, X0
	0x033FDC14 MOV X0, X19
	0x033FDC18 MOV X2, X31
	0x033FDC1C BL 0x3314A68
	0x033FDC20 ADRP X0, 0xD30000
	0x033FDC24 LDR X0, [X0 + 0xBF8]
	0x033FDC28 BL 0x1C16D08
	0x033FDC2C MOV X1, X0
	0x033FDC30 MOV X0, X19
	0x033FDC34 BL 0x1C16DEC
	0x033FDC38 BL 0x1C16F20
	0x033FDC3C STP X30, X23, [X31 - 0x30]!
	0x033FDC40 STP X22, X21, [X31 + 0x10]
	0x033FDC44 STP X20, X19, [X31 + 0x20]
	0x033FDC48 ADRP X22, 0xFE0000
	0x033FDC4C LDRB W8, [X22 + 0x4E8]
	0x033FDC50 MOV X21, X2
	0x033FDC54 MOV X20, X1
	0x033FDC58 MOV X19, X0
	0x033FDC5C TBNZ X8, 0x0, 0x33FDC74
	0x033FDC60 ADRP X0, 0xCF8000
	0x033FDC64 LDR X0, [X0 + 0x170]
	0x033FDC68 BL 0x1C16CF4
	0x033FDC6C MOVZ W8, 0x1
	0x033FDC70 STRB W8, [X22 + 0x4E8]
	0x033FDC74 CBZ X20, 0x33FDDA4
	0x033FDC78 LDR X8, [X19]
	0x033FDC7C LDR W9, [X19 + 0x10]
	0x033FDC80 LDR W10, [X20 + 0x18]
	0x033FDC84 MOV X0, X19
	0x033FDC88 LDP X11, X3, [X8 + 0x178]
	0x033FDC8C SUB W8, W21, W9
	0x033FDC90 SUB W2, W8, W10
	0x033FDC94 MOV X1, X20
	0x033FDC98 BLR X11
	0x033FDC9C TBZ X0, 0x0, 0x33FDD8C
	0x033FDCA0 LDR X8, [X19]
	0x033FDCA4 MOV X0, X19
	0x033FDCA8 LDP X9, X1, [X8 + 0x188]
	0x033FDCAC BLR X9
	0x033FDCB0 ANDS W31, W0, 0xFFFF
	0x033FDCB4 B.EQ 0x33FDD8C
	0x033FDCB8 ADRP X22, 0xCF8000
	0x033FDCBC LDR X22, [X22 + 0x170]
	0x033FDCC0 MOV W21, W0
	0x033FDCC4 MOV W20, W31
	0x033FDCC8 MOV W23, W31
	0x033FDCCC LDR X0, [X22]
	0x033FDCD0 LDR W8, [X0 + 0xE0]
	0x033FDCD4 CBNZ W8, 0x33FDCDC
	0x033FDCD8 BL 0x1C16DFC
	0x033FDCDC MOV W0, W21
	0x033FDCE0 MOV X1, X31
	0x033FDCE4 BL 0x331BBA4
	0x033FDCE8 TBZ X0, 0x0, 0x33FDD20
	0x033FDCEC LDR X0, [X22]
	0x033FDCF0 LDR W8, [X0 + 0xE0]
	0x033FDCF4 CBNZ W8, 0x33FDCFC
	0x033FDCF8 BL 0x1C16DFC
	0x033FDCFC MOV W0, W21
	0x033FDD00 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xFE1000
	006 Move X21, 0xCFF000
	007 Move W8, [X20+1242]
	008 Move X21, [X21+3272]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xCFF000
	015 Move X0, [X0+3272]
	016 Call 0x1C17CF4
	017 Move X0, 0xD00000
	018 Move X0, [X0+2264]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1242], W8
	022 Move X20, [X21]
	023 Move X8, [X20+56]
	024 Compare X8, 0
	025 JumpIfNotEqual {29}
	026 Move X0, X20
	027 Call 0x1C5D6E0
	028 Move X8, [X20+56]
	029 Move X0, [X8+16]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X8, [X20+56]
	041 Move X21, 0xD00000
	042 Move X0, [X8+16]
	043 Move W8, [X0+309]
	044 Move X21, [X21+2264]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move X8, [X0+184]
	051 Move X9, [X19]
	052 Move W4, 1
	053 Move X0, X19
	054 Move X20, [X8]
	055 Move X8, [X9+408]
	056 Move X5, [X9+416]
	057 Move W2, W31
	058 Move W3, W31
	059 Move X1, X20
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move X8, [X21]
	062 Move W1, W0
	063 Move X0, X8
	064 Call 0x1C17D6C
	065 Move X8, [X19]
	066 Move X4, X0
	067 Move W6, 1
	068 Move X0, X19
	069 Move X9, [X8+456]
	070 Move X7, [X8+464]
	071 Move X1, X20
	072 Move W2, W31
	073 Move W3, W31
	074 Move W5, W31
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X0, [X19+24]
	077 Compare X0, 0
	078 JumpIfEqual {87}
	079 Move X8, [X0]
	080 Move X20, [X31+16]
	081 Move X19, [X31+24]
	082 Move X2, [X8+408]
	083 Move X1, [X8+416]
	084 Move X30, [X31+32]
	085 Move X21, [X31+40]
	086 CallNoReturn X2
	087 Move X20, [X31+16]
	088 Move X19, [X31+24]
	089 Move X30, [X31+32]
	090 Move X21, [X31+40]
	091 Return 

Method: System.Int32 GetCharCount(System.Byte[] bytes, System.Int32 index, System.Int32 count)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Int32 GetCharCount(System.Byte[] bytes, System.Int32 index, System.Int32 count, System.Boolean flush)

Disassembly:
	0x033FDD04 BL 0x331BFEC
	0x033FDD08 TBZ X0, 0x0, 0x33FDD18
	0x033FDD0C TBNZ X23, 0x0, 0x33FDD44

ISIL:
	001 Move X8, [X0]
	002 Move X5, [X8+392]
	003 Move X4, [X8+400]
	004 CallNoReturn X5

Method: System.Int32 GetCharCount(System.Byte* bytes, System.Int32 count, System.Boolean flush)

Disassembly:
	0x033FDD10 MOVZ W23, 0x1
	0x033FDD14 B 0x33FDD20
	0x033FDD18 TBZ X23, 0x0, 0x33FDD44
	0x033FDD1C MOV W23, W31
	0x033FDD20 LDR X8, [X19]
	0x033FDD24 MOV X0, X19
	0x033FDD28 ADD W20, W20, 0x1
	0x033FDD2C LDP X9, X1, [X8 + 0x188]
	0x033FDD30 BLR X9
	0x033FDD34 MOV W21, W0
	0x033FDD38 ANDS W31, W0, 0xFFFF
	0x033FDD3C B.NE 0x33FDCCC
	0x033FDD40 TBZ X23, 0x0, 0x33FDD90
	0x033FDD44 ADRP X0, 0xCFE000
	0x033FDD48 LDR X0, [X0 + 0x578]
	0x033FDD4C BL 0x1C16D08
	0x033FDD50 BL 0x1C16F10
	0x033FDD54 MOV X19, X0
	0x033FDD58 ADRP X0, 0xD25000
	0x033FDD5C LDR X0, [X0 + 0x338]
	0x033FDD60 BL 0x1C16D08
	0x033FDD64 MOV X1, X0
	0x033FDD68 MOV X0, X19
	0x033FDD6C MOV X2, X31
	0x033FDD70 BL 0x3314A68
	0x033FDD74 ADRP X0, 0xD30000
	0x033FDD78 LDR X0, [X0 + 0xC00]
	0x033FDD7C BL 0x1C16D08
	0x033FDD80 MOV X1, X0
	0x033FDD84 MOV X0, X19
	0x033FDD88 BL 0x1C16DEC
	0x033FDD8C MOV W20, W31
	0x033FDD90 MOV W0, W20
	0x033FDD94 LDP X20, X19, [X31 + 0x20]
	0x033FDD98 LDP X22, X21, [X31 + 0x10]
	0x033FDD9C LDP X30, X23, [X31], #0x30
	0x033FDDA0 RET
	0x033FDDA4 BL 0x1C16F20
	0x033FDDA8 STR X30, [X31 - 0x50]!
	0x033FDDAC STP X26, X25, [X31 + 0x10]
	0x033FDDB0 STP X24, X23, [X31 + 0x20]
	0x033FDDB4 STP X22, X21, [X31 + 0x30]
	0x033FDDB8 STP X20, X19, [X31 + 0x40]
	0x033FDDBC ADRP X20, 0xFE0000
	0x033FDDC0 LDRB W8, [X20 + 0x4E9]
	0x033FDDC4 MOV X19, X1
	0x033FDDC8 TBNZ X8, 0x0, 0x33FDE04
	0x033FDDCC ADRP X0, 0xCF7000
	0x033FDDD0 LDR X0, [X0 + 0x9D8]
	0x033FDDD4 BL 0x1C16CF4
	0x033FDDD8 ADRP X0, 0xCF8000
	0x033FDDDC LDR X0, [X0 + 0xC48]
	0x033FDDE0 BL 0x1C16CF4
	0x033FDDE4 ADRP X0, 0xCF6000
	0x033FDDE8 LDR X0, [X0 + 0x8F0]
	0x033FDDEC BL 0x1C16CF4
	0x033FDDF0 ADRP X0, 0xD30000
	0x033FDDF4 LDR X0, [X0 + 0xC08]
	0x033FDDF8 BL 0x1C16CF4
	0x033FDDFC MOVZ W8, 0x1
	0x033FDE00 STRB W8, [X20 + 0x4E9]
	0x033FDE04 CBZ X19, 0x33FDE3C
	0x033FDE08 ADRP X8, 0xCF6000
	0x033FDE0C LDR X8, [X8 + 0x8F0]
	0x033FDE10 LDR X0, [X8]
	0x033FDE14 BL 0x1C16F10
	0x033FDE18 LDR W8, [X19 + 0x18]
	0x033FDE1C MOV X2, X31
	0x033FDE20 MOV X20, X0
	0x033FDE24 ADD W1, W8, W8, 0x1, LSL
	0x033FDE28 BL 0x3231B28
	0x033FDE2C LDR W8, [X19 + 0x18]
	0x033FDE30 CMP W8, 0x1
	0x033FDE34 B.LT 0x33FDF18
	0x033FDE38 CBNZ X20, 0x33FDE40
	0x033FDE3C BL 0x1C16F20
	0x033FDE40 ADRP X23, 0xCF8000
	0x033FDE44 ADRP X24, 0xCF7000
	0x033FDE48 ADRP X26, 0xD30000
	0x033FDE4C LDR X23, [X23 + 0xC48]
	0x033FDE50 LDR X24, [X24 + 0x9D8]
	0x033FDE54 LDR X26, [X26 + 0xC08]
	0x033FDE58 MOV X25, X31
	0x033FDE5C ADD X22, X19, 0x20
	0x033FDE60 MOV X0, X20
	0x033FDE64 MOV X1, X31
	0x033FDE68 BL 0x323260C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFE1000
	007 Move W8, [X22+1243]
	008 Move W19, W2
	009 Move X21, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xCF7000
	016 Move X0, [X0+1560]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1243], W8
	020 Compare X21, 0
	021 JumpIfEqual {58}
	022 Move TEMP, X19
	023 And TEMP, TEMP, -2147483648
	024 Compare TEMP, -2147483648
	025 JumpIfEqual {75}
	026 Move X8, 0xCF7000
	027 Move X8, [X8+1560]
	028 Move W1, W19
	029 Move X0, [X8]
	030 Call 0x1C17D6C
	031 Move X1, X0
	032 Compare W19, 0
	033 JumpIfEqual {45}
	034 Compare X1, 0
	035 JumpIfEqual {98}
	036 Move W9, [X1+24]
	037 Move X8, X31
	038 Move W10, W19
	039 Add X11, X1, 32
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W12, [X21]
	042 Move [X11], W12
	043 Add X8, X8, 1
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X8, [X20]
	046 Move X0, X20
	047 Move W3, W19
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X5, [X8+392]
	051 Move X4, [X8+400]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move W2, W31
	055 Move X30, [X31+48]
	056 CallNoReturn X5
	057 Call 0x1C17F28
	058 Move X0, 0xCFC000
	059 Move X0, [X0+1320]
	060 Call 0x1C17D08
	061 Call 0x1C17F10
	062 Move X19, X0
	063 Move X0, 0xD26000
	064 Move X0, [X0+776]
	065 Call 0x1C17D08
	066 Move X20, X0
	067 Move X0, 0xD26000
	068 Move X0, [X0+736]
	069 Call 0x1C17D08
	070 Move X2, X0
	071 Move X0, X19
	072 Move X1, X20
	073 Move X3, X31
	074 Call ArgumentNullException..ctor, X0, X1, X2
	075 Move X0, 0xCFF000
	076 Move X0, [X0+1888]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X19, X0
	080 Move X0, 0xD1F000
	081 Move X0, [X0+1608]
	082 Call 0x1C17D08
	083 Move X20, X0
	084 Move X0, 0xD1F000
	085 Move X0, [X0+1648]
	086 Call 0x1C17D08
	087 Move X2, X0
	088 Move X0, X19
	089 Move X1, X20
	090 Move X3, X31
	091 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	092 Move X0, 0xD31000
	093 Move X0, [X0+2992]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X19
	097 Call 0x1C17DEC
	098 Call 0x1C17F20

Method: System.Int32 GetChars(System.Byte[] bytes, System.Int32 byteIndex, System.Int32 byteCount, System.Char[] chars, System.Int32 charIndex)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Int32 GetChars(System.Byte[] bytes, System.Int32 byteIndex, System.Int32 byteCount, System.Char[] chars, System.Int32 charIndex, System.Boolean flush)

Disassembly:
	0x033FDE6C CMP W0, 0x1
	0x033FDE70 B.LT 0x33FDE84
	0x033FDE74 MOVZ W1, 0x20

ISIL:
	001 Move X8, [X0]
	002 Move X7, [X8+440]
	003 Move X6, [X8+448]
	004 CallNoReturn X7

Method: System.Int32 GetChars(System.Byte* bytes, System.Int32 byteCount, System.Char* chars, System.Int32 charCount, System.Boolean flush)

Disassembly:
	0x033FDE78 MOV X0, X20
	0x033FDE7C MOV X2, X31
	0x033FDE80 BL 0x3233D30
	0x033FDE84 LDR X0, [X23]
	0x033FDE88 LDR W8, [X0 + 0xE0]
	0x033FDE8C CBNZ W8, 0x33FDE94
	0x033FDE90 BL 0x1C16DFC
	0x033FDE94 MOV X0, X31
	0x033FDE98 BL 0x3338524
	0x033FDE9C LDR W8, [X19 + 0x18]
	0x033FDEA0 CMP X25, X8
	0x033FDEA4 B.CS 0x33FDF9C
	0x033FDEA8 MOV X21, X0
	0x033FDEAC LDRB W8, [X22, X25, LSL]
	0x033FDEB0 LDR X0, [X24]
	0x033FDEB4 ADD X1, X31, 0xC
	0x033FDEB8 STRB W8, [X31 + 0xC]
	0x033FDEBC BL 0x1C16E04
	0x033FDEC0 LDR X2, [X26]
	0x033FDEC4 MOV X3, X0
	0x033FDEC8 MOV X0, X20
	0x033FDECC MOV X1, X21
	0x033FDED0 MOV X4, X31
	0x033FDED4 BL 0x3234F08
	0x033FDED8 CMP X25, 0x12
	0x033FDEDC ADD X8, X25, 0x1
	0x033FDEE0 B.HI 0x33FDEF4
	0x033FDEE4 LDRSW X9, [X19 + 0x18]
	0x033FDEE8 MOV X25, X8
	0x033FDEEC CMP X8, X9
	0x033FDEF0 B.LT 0x33FDE60
	0x033FDEF4 CMP W8, 0x14
	0x033FDEF8 B.NE 0x33FDF18
	0x033FDEFC ADRP X0, 0xD30000
	0x033FDF00 LDR X0, [X0 + 0xBD8]
	0x033FDF04 BL 0x1C16D08
	0x033FDF08 MOV X1, X0
	0x033FDF0C MOV X0, X20
	0x033FDF10 MOV X2, X31
	0x033FDF14 BL 0x32333E0
	0x033FDF18 MOV X0, X20
	0x033FDF1C BL 0x19903C0
	0x033FDF20 LDR X8, [X20]
	0x033FDF24 MOV X0, X20
	0x033FDF28 LDP X9, X1, [X8 + 0x168]
	0x033FDF2C BLR X9
	0x033FDF30 MOV X19, X0
	0x033FDF34 ADRP X0, 0xD30000
	0x033FDF38 LDR X0, [X0 + 0xC10]
	0x033FDF3C BL 0x1C16D08
	0x033FDF40 MOV X1, X19
	0x033FDF44 MOV X2, X31
	0x033FDF48 BL 0x32094D4
	0x033FDF4C MOV X19, X0
	0x033FDF50 ADRP X0, 0xCFE000
	0x033FDF54 LDR X0, [X0 + 0x578]
	0x033FDF58 BL 0x1C16D08
	0x033FDF5C BL 0x1C16F10
	0x033FDF60 MOV X20, X0
	0x033FDF64 ADRP X0, 0xD30000
	0x033FDF68 LDR X0, [X0 + 0xC18]
	0x033FDF6C BL 0x1C16D08
	0x033FDF70 MOV X2, X0
	0x033FDF74 MOV X0, X20
	0x033FDF78 MOV X1, X19
	0x033FDF7C MOV X3, X31
	0x033FDF80 BL 0x330E16C
	0x033FDF84 ADRP X0, 0xD30000
	0x033FDF88 LDR X0, [X0 + 0xC20]
	0x033FDF8C BL 0x1C16D08
	0x033FDF90 MOV X1, X0
	0x033FDF94 MOV X0, X20
	0x033FDF98 BL 0x1C16DEC
	0x033FDF9C BL 0x1C16F28
	0x033FDFA0 LDR X0, [X0 + 0x18]
	0x033FDFA4 CBZ X0, 0x33FDFB4
	0x033FDFA8 LDR X8, [X0]
	0x033FDFAC LDP X2, X1, [X8 + 0x198]
	0x033FDFB0 BR X2
	0x033FDFB4 RET
	0x033FDFB8 LDR X8, [X0]
	0x033FDFBC MOV W4, W31
	0x033FDFC0 LDP X6, X5, [X8 + 0x198]
	0x033FDFC4 BR X6
	0x033FDFC8 STR X30, [X31 - 0x40]!
	0x033FDFCC STP X24, X23, [X31 + 0x10]
	0x033FDFD0 STP X22, X21, [X31 + 0x20]
	0x033FDFD4 STP X20, X19, [X31 + 0x30]
	0x033FDFD8 ADRP X24, 0xFE0000
	0x033FDFDC LDRB W8, [X24 + 0x4EA]
	0x033FDFE0 MOV W21, W4
	0x033FDFE4 MOV W19, W3
	0x033FDFE8 MOV W20, W2
	0x033FDFEC MOV X23, X1
	0x033FDFF0 MOV X22, X0
	0x033FDFF4 TBNZ X8, 0x0, 0x33FE018
	0x033FDFF8 ADRP X0, 0xD24000
	0x033FDFFC LDR X0, [X0 + 0x830]
	0x033FE000 BL 0x1C16CF4
	0x033FE004 ADRP X0, 0xD24000
	0x033FE008 LDR X0, [X0 + 0x2F8]
	0x033FE00C BL 0x1C16CF4
	0x033FE010 MOVZ W8, 0x1
	0x033FE014 STRB W8, [X24 + 0x4EA]
	0x033FE018 CBZ X23, 0x33FE084
	0x033FE01C TBNZ X19, 0x1F, 0x33FE0CC
	0x033FE020 TBNZ X20, 0x1F, 0x33FE0CC
	0x033FE024 LDR W8, [X23 + 0x18]
	0x033FE028 SUB W8, W8, W20
	0x033FE02C CMP W8, W19
	0x033FE030 B.LT 0x33FE138
	0x033FE034 ADRP X8, 0xD24000
	0x033FE038 LDR X8, [X8 + 0x2F8]
	0x033FE03C ADRP X24, 0xD23000
	0x033FE040 MOV X0, X23
	0x033FE044 LDR X1, [X8]
	0x033FE048 LDR X24, [X24 + 0x830]
	0x033FE04C BL 0x25FB4C0
	0x033FE050 LDR X2, [X24]
	0x033FE054 BL 0x2218CF4
	0x033FE058 LDR X8, [X22]
	0x033FE05C ADD X1, X0, W20, SXTW
	0x033FE060 AND W3, W21, 0x1
	0x033FE064 MOV X0, X22
	0x033FE068 LDP X5, X4, [X8 + 0x1A8]
	0x033FE06C MOV W2, W19
	0x033FE070 LDP X20, X19, [X31 + 0x30]
	0x033FE074 LDP X22, X21, [X31 + 0x20]
	0x033FE078 LDP X24, X23, [X31 + 0x10]
	0x033FE07C LDR X30, [X31], #0x40
	0x033FE080 BR X5
	0x033FE084 ADRP X0, 0xCFA000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xFE1000
	010 Move W8, [X25+1244]
	011 Move W22, W5
	012 Move W20, W4
	013 Move X19, X3
	014 Move W21, W2
	015 Move X24, X1
	016 Move X23, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xCF7000
	022 Move X0, [X0+1560]
	023 Call 0x1C17CF4
	024 Move X0, 0xD00000
	025 Move X0, [X0+2264]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X25+1244], W8
	029 Compare X19, 0
	030 JumpIfEqual {101}
	031 Compare X24, 0
	032 JumpIfEqual {103}
	033 Move TEMP, X20
	034 And TEMP, TEMP, -2147483648
	035 Compare TEMP, -2147483648
	036 JumpIfEqual {120}
	037 Move TEMP, X21
	038 And TEMP, TEMP, -2147483648
	039 Compare TEMP, -2147483648
	040 JumpIfEqual {120}
	041 Move X8, 0xCF7000
	042 Move X8, [X8+1560]
	043 Move W1, W21
	044 Move X0, [X8]
	045 Call 0x1C17D6C
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X25, X0
	048 Compare X25, 0
	049 JumpIfEqual {100}
	050 Move W9, [X25+24]
	051 Move X8, X31
	052 Move W10, W21
	053 Add X11, X25, 32
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move W12, [X24]
	056 Move [X11], W12
	057 Add X8, X8, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X8, 0xD00000
	060 Move X8, [X8+2264]
	061 Move W1, W20
	062 Move X0, [X8]
	063 Call 0x1C17D6C
	064 Move X8, [X23]
	065 Move X24, X0
	066 And W6, W22, 1
	067 Move X0, X23
	068 Move X9, [X8+456]
	069 Move X7, [X8+464]
	070 Move X1, X25
	071 Move W2, W31
	072 Move W3, W21
	073 Move X4, X24
	074 Move W5, W31
	075 NotImplemented "Instruction BLR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CSEL not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Compare X24, 0
	080 JumpIfEqual {100}
	081 Move W9, [X24+24]
	082 Move X8, X31
	083 Move W10, W0
	084 Add X11, X24, 32
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Add X8, X8, 1
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction STRH not yet implemented."
	090 Move X20, [X31+48]
	091 Move X19, [X31+56]
	092 Move X22, [X31+32]
	093 Move X21, [X31+40]
	094 Move X24, [X31+16]
	095 Move X23, [X31+24]
	096 Move X30, [X31+64]
	097 Move X25, [X31+72]
	098 Return X0
	099 Call 0x1C17F28
	100 Call 0x1C17F20
	101 Move X0, 0xD26000
	102 Move X0, [X0+728]
	103 Move X0, 0xD26000
	104 Move X0, [X0+776]
	105 Call 0x1C17D08
	106 Move X19, X0
	107 Move X0, 0xCFC000
	108 Move X0, [X0+1320]
	109 Call 0x1C17D08
	110 Call 0x1C17F10
	111 Move X20, X0
	112 Move X0, 0xD26000
	113 Move X0, [X0+736]
	114 Call 0x1C17D08
	115 Move X2, X0
	116 Move X0, X20
	117 Move X1, X19
	118 Move X3, X31
	119 Call ArgumentNullException..ctor, X0, X1, X2
	120 Move X8, 0xD25000
	121 Move X9, 0xD25000
	122 Move X8, [X8+784]
	123 Move X9, [X9+808]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 NotImplemented "Instruction CSEL not yet implemented."
	126 Call 0x1C17D08
	127 Move X19, X0
	128 Move X0, 0xCFE000
	129 Move X0, [X0+1888]
	130 Call 0x1C17D08
	131 Call 0x1C17F10
	132 Move X20, X0
	133 Move X0, 0xD1E000
	134 Move X0, [X0+1648]
	135 Call 0x1C17D08
	136 Move X2, X0
	137 Move X0, X20
	138 Move X1, X19
	139 Move X3, X31
	140 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	141 Move X0, 0xD30000
	142 Move X0, [X0+3000]
	143 Call 0x1C17D08
	144 Move X1, X0
	145 Move X0, X20
	146 Call 0x1C17DEC

Method: System.Int32 GetChars(System.ReadOnlySpan`1<System.Byte> bytes, System.Span`1<System.Char> chars, System.Boolean flush)

Disassembly:
	0x033FE088 LDR X0, [X0 + 0x528]
	0x033FE08C BL 0x1C16D08
	0x033FE090 BL 0x1C16F10
	0x033FE094 MOV X19, X0
	0x033FE098 ADRP X0, 0xD24000
	0x033FE09C LDR X0, [X0 + 0x308]
	0x033FE0A0 BL 0x1C16D08
	0x033FE0A4 MOV X20, X0
	0x033FE0A8 ADRP X0, 0xD24000
	0x033FE0AC LDR X0, [X0 + 0x2E0]
	0x033FE0B0 BL 0x1C16D08
	0x033FE0B4 MOV X2, X0
	0x033FE0B8 MOV X0, X19
	0x033FE0BC MOV X1, X20
	0x033FE0C0 MOV X3, X31
	0x033FE0C4 BL 0x3315F7C
	0x033FE0C8 B 0x33FE17C
	0x033FE0CC ADRP X8, 0xD1D000
	0x033FE0D0 ADRP X9, 0xD00000
	0x033FE0D4 LDR X8, [X8 + 0x648]
	0x033FE0D8 LDR X9, [X9 + 0x130]
	0x033FE0DC CMP W20, 0x0
	0x033FE0E0 CSEL X0, X9, X8, LT
	0x033FE0E4 BL 0x1C16D08
	0x033FE0E8 MOV X19, X0
	0x033FE0EC ADRP X0, 0xCFD000
	0x033FE0F0 LDR X0, [X0 + 0x760]
	0x033FE0F4 BL 0x1C16D08
	0x033FE0F8 BL 0x1C16F10
	0x033FE0FC MOV X20, X0
	0x033FE100 ADRP X0, 0xD1D000
	0x033FE104 LDR X0, [X0 + 0x670]
	0x033FE108 BL 0x1C16D08
	0x033FE10C MOV X2, X0
	0x033FE110 MOV X0, X20
	0x033FE114 MOV X1, X19
	0x033FE118 MOV X3, X31
	0x033FE11C BL 0x3311888
	0x033FE120 ADRP X0, 0xD2F000
	0x033FE124 LDR X0, [X0 + 0xC28]
	0x033FE128 BL 0x1C16D08
	0x033FE12C MOV X1, X0
	0x033FE130 MOV X0, X20
	0x033FE134 BL 0x1C16DEC
	0x033FE138 ADRP X0, 0xCFD000
	0x033FE13C LDR X0, [X0 + 0x760]
	0x033FE140 BL 0x1C16D08
	0x033FE144 BL 0x1C16F10
	0x033FE148 MOV X19, X0
	0x033FE14C ADRP X0, 0xD24000
	0x033FE150 LDR X0, [X0 + 0x308]
	0x033FE154 BL 0x1C16D08
	0x033FE158 MOV X20, X0
	0x033FE15C ADRP X0, 0xD24000
	0x033FE160 LDR X0, [X0 + 0xE0]
	0x033FE164 BL 0x1C16D08

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0xFE0000
	011 Move X25, 0xD25000
	012 Move W8, [X26+1245]
	013 Move X25, [X25+2736]
	014 Move W20, W5
	015 Move X19, X4
	016 Move X22, X3
	017 Move X21, X2
	018 Move X24, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xD25000
	025 Move X0, [X0+2736]
	026 Call 0x1C17CF4
	027 Move X0, 0xD25000
	028 Move X0, [X0+2744]
	029 Call 0x1C17CF4
	030 Move X0, 0xD25000
	031 Move X0, [X0+2752]
	032 Call 0x1C17CF4
	033 Move X0, 0xD25000
	034 Move X0, [X0+1416]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X26+1245], W8
	038 Move X0, [X25]
	039 Move X25, 0xD25000
	040 Move X8, [X0+56]
	041 Move X25, [X25+2744]
	042 Compare X8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C5D6E0
	045 Move X0, [X25]
	046 Move X8, [X0+56]
	047 Compare X8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C5D6E0
	050 Move X8, [X23]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CSINC not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X7, [X8+472]
	055 Move X6, [X8+480]
	056 NotImplemented "Instruction CSINC not yet implemented."
	057 And W5, W20, 1
	058 Move X0, X23
	059 Move W2, W21
	060 Move W4, W19
	061 Move X20, [X31+64]
	062 Move X19, [X31+72]
	063 Move X22, [X31+48]
	064 Move X21, [X31+56]
	065 Move X24, [X31+32]
	066 Move X23, [X31+40]
	067 Move X26, [X31+16]
	068 Move X25, [X31+24]
	069 Move X30, [X31+80]
	070 CallNoReturn X7

