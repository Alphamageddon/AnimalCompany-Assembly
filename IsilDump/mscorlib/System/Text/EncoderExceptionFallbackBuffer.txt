Type: System.Text.EncoderExceptionFallbackBuffer

Method: System.Void .ctor()

Disassembly:
	0x034006C4 LDP X22, X21, [X31 + 0x40]
	0x034006C8 LDP X24, X23, [X31 + 0x30]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean Fallback(System.Char charUnknown, System.Int32 index)

Disassembly:
	0x03400738 ADRP X22, 0xCF3000
	0x0340073C LDRB W8, [X20 + 0x509]
	0x03400740 LDR X21, [X21 + 0x988]
	0x03400744 LDR X22, [X22 + 0x9D0]
	0x03400748 MOV X19, X0
	0x0340074C TBNZ X8, 0x0, 0x34007A0
	0x03400750 ADRP X0, 0xCF3000
	0x03400754 LDR X0, [X0 + 0x758]
	0x03400758 BL 0x1C16CF4
	0x0340075C ADRP X0, 0xCF3000
	0x03400760 LDR X0, [X0 + 0x9D0]
	0x03400764 BL 0x1C16CF4
	0x03400768 ADRP X0, 0xD2D000
	0x0340076C LDR X0, [X0 + 0xCE8]
	0x03400770 BL 0x1C16CF4
	0x03400774 ADRP X0, 0xD2D000
	0x03400778 LDR X0, [X0 + 0xCF0]
	0x0340077C BL 0x1C16CF4
	0x03400780 ADRP X0, 0xCF3000
	0x03400784 LDR X0, [X0 + 0x838]
	0x03400788 BL 0x1C16CF4
	0x0340078C ADRP X0, 0xCF3000
	0x03400790 LDR X0, [X0 + 0x988]
	0x03400794 BL 0x1C16CF4
	0x03400798 MOVZ W8, 0x1
	0x0340079C STRB W8, [X20 + 0x509]
	0x034007A0 LDR X0, [X22]
	0x034007A4 LDR X21, [X21]
	0x034007A8 MOVZ W1, 0x4
	0x034007AC BL 0x1C16D6C
	0x034007B0 CBZ X0, 0x3400994
	0x034007B4 MOV X20, X0
	0x034007B8 CBZ X21, 0x34007D0
	0x034007BC LDR X8, [X20]
	0x034007C0 MOV X0, X21
	0x034007C4 LDR X1, [X8 + 0x40]
	0x034007C8 BL 0x1C16E00
	0x034007CC CBZ X0, 0x3400988
	0x034007D0 LDR W8, [X20 + 0x18]
	0x034007D4 CBZ W8, 0x3400984
	0x034007D8 ADRP X23, 0xD2D000
	0x034007DC LDR X23, [X23 + 0xCE8]
	0x034007E0 STR X21, [X20 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 And W8, W1, 0xFFFF
	007 Move [X31+12], W8
	008 Move X21, 0xCF4000
	009 Move X21, [X21+1880]
	010 Move W19, W2
	011 Move W20, W1
	012 Move X0, X21
	013 Call 0x1C17D08
	014 Add X1, X31, 12
	015 Call 0x1C17E04
	016 Move X22, X0
	017 Move X0, X21
	018 Move [X31+8], W19
	019 Call 0x1C17D08
	020 Add X1, X31, 8
	021 Call 0x1C17E04
	022 Move X21, X0
	023 Move X0, 0xD2E000
	024 Move X0, [X0+3208]
	025 Call 0x1C17D08
	026 Move X1, X22
	027 Move X2, X21
	028 Move X3, X31
	029 Call SR.Format, X0, X1, X2
	030 Move X21, X0
	031 Move X0, 0xD2E000
	032 Move X0, [X0+3216]
	033 Call 0x1C17D08
	034 Call 0x1C17F10
	035 Move X1, X21
	036 Move W2, W20
	037 Move W3, W19
	038 Move X22, X0
	039 Call EncoderFallbackException..ctor, X0, X1, X2, X3
	040 Move X0, 0xD2E000
	041 Move X0, [X0+3224]
	042 Call 0x1C17D08
	043 Move X1, X0
	044 Move X0, X22
	045 Call 0x1C17DEC

Method: System.Boolean Fallback(System.Char charUnknownHigh, System.Char charUnknownLow, System.Int32 index)

Disassembly:
	0x03400814 ADD X1, X31, 0xC
	0x03400818 STR X8, [X20 + 0x28]
	0x0340081C LDR W8, [X19 + 0x10]
	0x03400820 LDR X0, [X9]
	0x03400824 STR W8, [X31 + 0xC]
	0x03400828 BL 0x1C16E04
	0x0340082C MOV X21, X0
	0x03400830 CBZ X0, 0x3400848
	0x03400834 LDR X8, [X20]
	0x03400838 MOV X0, X21
	0x0340083C LDR X1, [X8 + 0x40]
	0x03400840 BL 0x1C16E00
	0x03400844 CBZ X0, 0x3400988
	0x03400848 LDR W8, [X20 + 0x18]
	0x0340084C CMP W8, 0x2
	0x03400850 B.LS 0x3400984
	0x03400854 ADRP X23, 0xCF3000
	0x03400858 LDR X23, [X23 + 0x838]
	0x0340085C STR X21, [X20 + 0x30]
	0x03400860 LDR X0, [X23]
	0x03400864 CBZ X0, 0x340087C
	0x03400868 LDR X8, [X20]
	0x0340086C LDR X1, [X8 + 0x40]
	0x03400870 BL 0x1C16E00
	0x03400874 CBZ X0, 0x3400988
	0x03400878 LDR W8, [X20 + 0x18]
	0x0340087C CMP W8, 0x3
	0x03400880 B.LS 0x3400984
	0x03400884 LDR X8, [X23]
	0x03400888 MOV X0, X20
	0x0340088C MOV X1, X31
	0x03400890 STR X8, [X20 + 0x38]
	0x03400894 BL 0x3227578
	0x03400898 LDR X8, [X22]
	0x0340089C MOV X21, X0
	0x034008A0 MOVZ W1, 0x4
	0x034008A4 MOV X0, X8
	0x034008A8 BL 0x1C16D6C
	0x034008AC CBZ X0, 0x3400994
	0x034008B0 MOV X20, X0
	0x034008B4 CBZ X21, 0x34008CC
	0x034008B8 LDR X8, [X20]
	0x034008BC MOV X0, X21
	0x034008C0 LDR X1, [X8 + 0x40]
	0x034008C4 BL 0x1C16E00
	0x034008C8 CBZ X0, 0x3400988
	0x034008CC LDR W8, [X20 + 0x18]
	0x034008D0 CBZ W8, 0x3400984
	0x034008D4 ADRP X22, 0xD2D000
	0x034008D8 LDR X22, [X22 + 0xCF0]
	0x034008DC STR X21, [X20 + 0x20]
	0x034008E0 LDR X0, [X22]
	0x034008E4 CBZ X0, 0x34008FC
	0x034008E8 LDR X8, [X20]
	0x034008EC LDR X1, [X8 + 0x40]
	0x034008F0 BL 0x1C16E00
	0x034008F4 CBZ X0, 0x3400988
	0x034008F8 LDR W8, [X20 + 0x18]
	0x034008FC CMP W8, 0x1
	0x03400900 B.LS 0x3400984
	0x03400904 LDR X9, [X22]
	0x03400908 STR X9, [X20 + 0x28]
	0x0340090C LDR X19, [X19 + 0x18]
	0x03400910 CBZ X19, 0x340092C
	0x03400914 LDR X8, [X20]
	0x03400918 MOV X0, X19
	0x0340091C LDR X1, [X8 + 0x40]
	0x03400920 BL 0x1C16E00
	0x03400924 CBZ X0, 0x3400988
	0x03400928 LDR W8, [X20 + 0x18]
	0x0340092C CMP W8, 0x2
	0x03400930 B.LS 0x3400984
	0x03400934 STR X19, [X20 + 0x30]
	0x03400938 LDR X0, [X23]
	0x0340093C CBZ X0, 0x3400954
	0x03400940 LDR X8, [X20]
	0x03400944 LDR X1, [X8 + 0x40]
	0x03400948 BL 0x1C16E00
	0x0340094C CBZ X0, 0x3400988
	0x03400950 LDR W8, [X20 + 0x18]
	0x03400954 CMP W8, 0x3
	0x03400958 B.LS 0x3400984
	0x0340095C LDR X8, [X23]
	0x03400960 MOV X0, X20
	0x03400964 MOV X1, X31
	0x03400968 STR X8, [X20 + 0x38]
	0x0340096C BL 0x3227578
	0x03400970 LDP X20, X19, [X31 + 0x30]
	0x03400974 LDP X22, X21, [X31 + 0x20]
	0x03400978 LDP X30, X23, [X31 + 0x10]
	0x0340097C ADD X31, X31, 0x40
	0x03400980 RET
	0x03400984 BL 0x1C16F28
	0x03400988 BL 0x1C16F44
	0x0340098C MOV X1, X31
	0x03400990 BL 0x1C16DEC
	0x03400994 BL 0x1C16F20
	0x03400998 MOV X1, X31
	0x0340099C B 0x33BDD8C
	0x034009A0 LDR X0, [X0 + 0x10]
	0x034009A4 RET
	0x034009A8 LDR X0, [X0 + 0x10]
	0x034009AC RET
	0x034009B0 STR X1, [X0 + 0x10]
	0x034009B4 RET
	0x034009B8 LDR W0, [X0 + 0x18]
	0x034009BC RET
	0x034009C0 STR W1, [X0 + 0x18]
	0x034009C4 RET
	0x034009C8 SUB X31, X31, 0x40
	0x034009CC STP X30, X23, [X31 + 0x10]
	0x034009D0 STP X22, X21, [X31 + 0x20]
	0x034009D4 STP X20, X19, [X31 + 0x30]
	0x034009D8 ADRP X20, 0xFDD000
	0x034009DC ADRP X21, 0xCF3000
	0x034009E0 ADRP X22, 0xCF3000
	0x034009E4 LDRB W8, [X20 + 0x50A]
	0x034009E8 LDR X21, [X21 + 0x988]
	0x034009EC LDR X22, [X22 + 0x9D0]
	0x034009F0 MOV X19, X0
	0x034009F4 TBNZ X8, 0x0, 0x3400A48
	0x034009F8 ADRP X0, 0xCF3000
	0x034009FC LDR X0, [X0 + 0x758]
	0x03400A00 BL 0x1C16CF4
	0x03400A04 ADRP X0, 0xCF3000
	0x03400A08 LDR X0, [X0 + 0x9D0]
	0x03400A0C BL 0x1C16CF4
	0x03400A10 ADRP X0, 0xD2D000
	0x03400A14 LDR X0, [X0 + 0xCE8]
	0x03400A18 BL 0x1C16CF4
	0x03400A1C ADRP X0, 0xD2D000
	0x03400A20 LDR X0, [X0 + 0xCF8]
	0x03400A24 BL 0x1C16CF4
	0x03400A28 ADRP X0, 0xCF3000
	0x03400A2C LDR X0, [X0 + 0x838]
	0x03400A30 BL 0x1C16CF4
	0x03400A34 ADRP X0, 0xCF3000
	0x03400A38 LDR X0, [X0 + 0x988]
	0x03400A3C BL 0x1C16CF4
	0x03400A40 MOVZ W8, 0x1
	0x03400A44 STRB W8, [X20 + 0x50A]
	0x03400A48 LDR X0, [X22]
	0x03400A4C LDR X21, [X21]
	0x03400A50 MOVZ W1, 0x4
	0x03400A54 BL 0x1C16D6C
	0x03400A58 CBZ X0, 0x3400C3C
	0x03400A5C MOV X20, X0
	0x03400A60 CBZ X21, 0x3400A78

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X0, 0xCF6000
	009 Move X0, [X0+368]
	010 Move W19, W3
	011 Move W20, W2
	012 Move W21, W1
	013 Call 0x1C17D08
	014 Move W8, [X0+224]
	015 Compare W8, 0
	016 JumpIfNotEqual {18}
	017 Call 0x1C17DFC
	018 Move W0, W21
	019 Move X1, X31
	020 Call Char.IsHighSurrogate, X0
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {85}
	025 Move X0, 0xCF6000
	026 Move X0, [X0+368]
	027 Call 0x1C17D08
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move W0, W20
	033 Move X1, X31
	034 Call Char.IsLowSurrogate, X0
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {116}
	039 Move X0, 0xCF6000
	040 Move X0, [X0+368]
	041 Call 0x1C17D08
	042 Call 0x19913D0
	043 Move W0, W21
	044 Move W1, W20
	045 Move X2, X31
	046 Call Char.ConvertToUtf32, X0, X1
	047 Move [X31+12], W0
	048 Move X22, 0xCF4000
	049 Move X22, [X22+1880]
	050 Move X0, X22
	051 Call 0x1C17D08
	052 Add X1, X31, 12
	053 Call 0x1C17E04
	054 Move X23, X0
	055 Move X0, X22
	056 Move [X31+8], W19
	057 Call 0x1C17D08
	058 Add X1, X31, 8
	059 Call 0x1C17E04
	060 Move X22, X0
	061 Move X0, 0xD2E000
	062 Move X0, [X0+3208]
	063 Call 0x1C17D08
	064 Move X1, X23
	065 Move X2, X22
	066 Move X3, X31
	067 Call SR.Format, X0, X1, X2
	068 Move X22, X0
	069 Move X0, 0xD2E000
	070 Move X0, [X0+3216]
	071 Call 0x1C17D08
	072 Call 0x1C17F10
	073 Move X1, X22
	074 Move W2, W21
	075 Move W3, W20
	076 Move W4, W19
	077 Move X23, X0
	078 Call EncoderFallbackException..ctor, X0, X1, X2, X3, X4
	079 Move X0, 0xD2E000
	080 Move X0, [X0+3232]
	081 Call 0x1C17D08
	082 Move X1, X0
	083 Move X0, X23
	084 Call 0x1C17DEC
	085 Move W8, 0xD800
	086 Move [X31+12], W8
	087 Move X19, 0xCF4000
	088 Move X19, [X19+1880]
	089 Move X0, X19
	090 Call 0x1C17D08
	091 Add X1, X31, 12
	092 Call 0x1C17E04
	093 Move X20, X0
	094 Move W8, 0xDBFF
	095 Move X0, X19
	096 Move [X31+8], W8
	097 Call 0x1C17D08
	098 Add X1, X31, 8
	099 Call 0x1C17E04
	100 Move X19, X0
	101 Move X0, 0xD23000
	102 Move X0, [X0+880]
	103 Call 0x1C17D08
	104 Move X1, X20
	105 Move X2, X19
	106 Move X3, X31
	107 Call SR.Format, X0, X1, X2
	108 Move X19, X0
	109 Move X0, 0xCFC000
	110 Move X0, [X0+1888]
	111 Call 0x1C17D08
	112 Call 0x1C17F10
	113 Move X20, X0
	114 Move X0, 0xD23000
	115 Move X0, [X0+888]
	116 Move W8, 0xDC00
	117 Move [X31+12], W8
	118 Move X19, 0xCF4000
	119 Move X19, [X19+1880]
	120 Move X0, X19
	121 Call 0x1C17D08
	122 Add X1, X31, 12
	123 Call 0x1C17E04
	124 Move X20, X0
	125 Move W8, 0xDFFF
	126 Move X0, X19
	127 Move [X31+8], W8
	128 Call 0x1C17D08
	129 Add X1, X31, 8
	130 Call 0x1C17E04
	131 Move X19, X0
	132 Move X0, 0xD23000
	133 Move X0, [X0+880]
	134 Call 0x1C17D08
	135 Move X1, X20
	136 Move X2, X19
	137 Move X3, X31
	138 Call SR.Format, X0, X1, X2
	139 Move X19, X0
	140 Move X0, 0xCFC000
	141 Move X0, [X0+1888]
	142 Call 0x1C17D08
	143 Call 0x1C17F10
	144 Move X20, X0
	145 Move X0, 0xD23000
	146 Move X0, [X0+896]
	147 Call 0x1C17D08
	148 Move X1, X0
	149 Move X0, X20
	150 Move X2, X19
	151 Move X3, X31
	152 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	153 Move X0, 0xD2E000
	154 Move X0, [X0+3232]
	155 Call 0x1C17D08
	156 Move X1, X0
	157 Move X0, X20
	158 Call 0x1C17DEC

Method: System.Char GetNextChar()

Disassembly:
	0x03400C54 RET
	0x03400C58 LDR W0, [X0 + 0x18]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean MovePrevious()

Disassembly:
	0x03400C5C RET
	0x03400C60 LDR W0, [X0 + 0x18]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Int32 get_Remaining()

Disassembly:
	0x03400C64 RET
	0x03400C68 STR W1, [X0 + 0x18]

ISIL:
	001 Move W0, W31
	002 Return X0

