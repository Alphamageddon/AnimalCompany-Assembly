Type: System.Text.EncodingNLS

Method: System.Void .ctor(System.Int32 codePage)

Disassembly:
	0x03230BF0 ADRP X0, 0xEF2000
	0x03230BF4 LDR X0, [X0 + 0x3E8]

ISIL:
	001 Move X2, X31
	002 Call Encoding..ctor, X0, X1
	003 Return 

Method: System.Int32 GetByteCount(System.Char[] chars, System.Int32 index, System.Int32 count)

Disassembly:
	0x03230BF8 BL 0x1C16CF4
	0x03230BFC MOVZ W8, 0x1
	0x03230C00 STRB W8, [X20 + 0x3BB]
	0x03230C04 LDR X0, [X21]
	0x03230C08 BL 0x1C16F10
	0x03230C0C MOV X1, X19
	0x03230C10 MOV X2, X31
	0x03230C14 MOV X20, X0
	0x03230C18 BL 0x33FCA64
	0x03230C1C MOV X0, X20
	0x03230C20 LDP X20, X19, [X31 + 0x10]
	0x03230C24 LDP X30, X21, [X31], #0x20
	0x03230C28 RET
	0x03230C2C STP X30, X21, [X31 - 0x20]!
	0x03230C30 STP X20, X19, [X31 + 0x10]
	0x03230C34 ADRP X20, 0x11AC000
	0x03230C38 ADRP X21, 0xEF2000
	0x03230C3C LDRB W8, [X20 + 0x3BC]
	0x03230C40 LDR X21, [X21 + 0x3F0]
	0x03230C44 MOV X19, X0
	0x03230C48 TBNZ X8, 0x0, 0x3230C60
	0x03230C4C ADRP X0, 0xEF2000
	0x03230C50 LDR X0, [X0 + 0x3F0]
	0x03230C54 BL 0x1C16CF4
	0x03230C58 MOVZ W8, 0x1
	0x03230C5C STRB W8, [X20 + 0x3BC]
	0x03230C60 LDR X0, [X21]
	0x03230C64 BL 0x1C16F10
	0x03230C68 MOV X1, X19
	0x03230C6C MOV X20, X0
	0x03230C70 BL 0x322EC5C
	0x03230C74 MOV X0, X20
	0x03230C78 LDP X20, X19, [X31 + 0x10]
	0x03230C7C LDP X30, X21, [X31], #0x20
	0x03230C80 RET
	0x03230C84 STP X30, X23, [X31 - 0x30]!
	0x03230C88 STP X22, X21, [X31 + 0x10]
	0x03230C8C STP X20, X19, [X31 + 0x20]
	0x03230C90 ADRP X23, 0x11AC000
	0x03230C94 LDRB W8, [X23 + 0x3BD]
	0x03230C98 MOV X19, X3
	0x03230C9C MOV X20, X2
	0x03230CA0 MOV W21, W1
	0x03230CA4 MOV X22, X0
	0x03230CA8 TBNZ X8, 0x0, 0x3230CC0
	0x03230CAC ADRP X0, 0xEF2000
	0x03230CB0 LDR X0, [X0 + 0x3F8]
	0x03230CB4 BL 0x1C16CF4
	0x03230CB8 MOVZ W8, 0x1
	0x03230CBC STRB W8, [X23 + 0x3BD]
	0x03230CC0 LDR X8, [X22]
	0x03230CC4 MOV X0, X22
	0x03230CC8 MOV W1, W21
	0x03230CCC LDP X9, X2, [X8 + 0x188]
	0x03230CD0 BLR X9
	0x03230CD4 CBZ X0, 0x3230D5C
	0x03230CD8 LDR X8, [X22]
	0x03230CDC MOV X0, X22
	0x03230CE0 MOV W1, W21
	0x03230CE4 LDP X9, X2, [X8 + 0x188]
	0x03230CE8 BLR X9
	0x03230CEC CBZ X0, 0x3230D74
	0x03230CF0 LDR X8, [X0]
	0x03230CF4 LDP X9, X1, [X8 + 0x1E8]
	0x03230CF8 BLR X9
	0x03230CFC CBZ X0, 0x3230D74
	0x03230D00 ADRP X9, 0xEF2000
	0x03230D04 LDR X9, [X9 + 0x3F8]
	0x03230D08 LDR X8, [X0]
	0x03230D0C MOV X21, X0
	0x03230D10 LDR X1, [X9]
	0x03230D14 LDRB W10, [X8 + 0x130]
	0x03230D18 LDRB W9, [X1 + 0x130]
	0x03230D1C CMP W10, W9
	0x03230D20 B.CC 0x3230D78
	0x03230D24 LDR X8, [X8 + 0xC8]
	0x03230D28 ADD X8, X8, X9, 0x3, LSL
	0x03230D2C LDUR X8, [X8 - 0x8]
	0x03230D30 CMP X8, X1
	0x03230D34 B.NE 0x3230D78
	0x03230D38 MOV X0, X21
	0x03230D3C MOV X1, X20
	0x03230D40 MOV X2, X31
	0x03230D44 BL 0x3243820
	0x03230D48 MOV X0, X21
	0x03230D4C MOV X1, X19
	0x03230D50 MOV X2, X31
	0x03230D54 BL 0x32438DC
	0x03230D58 B 0x3230D60
	0x03230D5C MOV X21, X31
	0x03230D60 MOV X0, X21
	0x03230D64 LDP X20, X19, [X31 + 0x20]
	0x03230D68 LDP X22, X21, [X31 + 0x10]
	0x03230D6C LDP X30, X23, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {37}
	006 Move TEMP, X3
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {54}
	010 Move TEMP, X2
	011 And TEMP, TEMP, -2147483648
	012 Compare TEMP, -2147483648
	013 JumpIfEqual {54}
	014 Move W8, [X1+24]
	015 Subtract W9, W8, W2
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Compare W3, 0
	018 JumpIfEqual {32}
	019 Move X9, [X0]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Add X10, X1, 32
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X5, [X9+552]
	025 Move X4, [X9+560]
	026 NotImplemented "Instruction CSEL not yet implemented."
	027 Add X1, X8, W2
	028 Move W2, W3
	029 Move X3, X31
	030 Move X30, [X31+32]
	031 CallNoReturn X5
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move W0, W31
	035 Move X30, [X31+32]
	036 Return X0
	037 Move X0, 0xEC9000
	038 Move X0, [X0+1320]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0xEF3000
	043 Move X0, [X0+728]
	044 Call 0x1C17D08
	045 Move X20, X0
	046 Move X0, 0xEF3000
	047 Move X0, [X0+736]
	048 Call 0x1C17D08
	049 Move X2, X0
	050 Move X0, X19
	051 Move X1, X20
	052 Move X3, X31
	053 Call ArgumentNullException..ctor, X0, X1, X2
	054 Move X8, 0xEEC000
	055 Move X9, 0xECF000
	056 Move X8, [X8+1608]
	057 Move X9, [X9+304]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 Call 0x1C17D08
	061 Move X19, X0
	062 Move X0, 0xECC000
	063 Move X0, [X0+1888]
	064 Call 0x1C17D08
	065 Call 0x1C17F10
	066 Move X20, X0
	067 Move X0, 0xEEC000
	068 Move X0, [X0+1648]
	069 Call 0x1C17D08
	070 Move X2, X0
	071 Move X0, X20
	072 Move X1, X19
	073 Move X3, X31
	074 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	075 Move X0, 0xEF3000
	076 Move X0, [X0+912]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X20
	080 Call 0x1C17DEC
	081 Move X0, 0xECC000
	082 Move X0, [X0+1888]
	083 Call 0x1C17D08
	084 Call 0x1C17F10
	085 Move X19, X0
	086 Move X0, 0xEF3000
	087 Move X0, [X0+728]
	088 Call 0x1C17D08
	089 Move X20, X0
	090 Move X0, 0xEF3000
	091 Move X0, [X0+224]
	092 Call 0x1C17D08
	093 Move X2, X0
	094 Move X0, X19
	095 Move X1, X20
	096 Move X3, X31
	097 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	098 Move X0, 0xEF3000
	099 Move X0, [X0+912]
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X19
	103 Call 0x1C17DEC

Method: System.Int32 GetByteCount(System.String s)

Disassembly:
	0x03230D70 RET
	0x03230D74 BL 0x1C16F20
	0x03230D78 MOV X0, X21
	0x03230D7C BL 0x1C171E0
	0x03230D80 STP X30, X21, [X31 - 0x20]!
	0x03230D84 STP X20, X19, [X31 + 0x10]
	0x03230D88 ADRP X21, 0x11AC000
	0x03230D8C ADRP X20, 0xEF2000
	0x03230D90 LDRB W8, [X21 + 0x3BE]
	0x03230D94 LDR X20, [X20 + 0x400]
	0x03230D98 MOV W19, W0
	0x03230D9C TBNZ X8, 0x0, 0x3230DB4
	0x03230DA0 ADRP X0, 0xEF2000
	0x03230DA4 LDR X0, [X0 + 0x400]
	0x03230DA8 BL 0x1C16CF4
	0x03230DAC MOVZ W8, 0x1
	0x03230DB0 STRB W8, [X21 + 0x3BE]
	0x03230DB4 LDR X0, [X20]
	0x03230DB8 LDR W8, [X0 + 0xE0]
	0x03230DBC CBNZ W8, 0x3230DC8
	0x03230DC0 BL 0x1C16DFC
	0x03230DC4 LDR X0, [X20]
	0x03230DC8 LDR X8, [X0 + 0xB8]
	0x03230DCC LDR X21, [X8 + 0x8]
	0x03230DD0 BL 0x1C16D44
	0x03230DD4 CBZ X21, 0x3230E44
	0x03230DD8 LDR X0, [X20]
	0x03230DDC LDR W8, [X0 + 0xE0]
	0x03230DE0 CBNZ W8, 0x3230DEC
	0x03230DE4 BL 0x1C16DFC
	0x03230DE8 LDR X0, [X20]
	0x03230DEC LDR X8, [X0 + 0xB8]
	0x03230DF0 LDR X20, [X8 + 0x8]
	0x03230DF4 BL 0x1C16D44
	0x03230DF8 CBZ X20, 0x3230E58

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {21}
	006 Move X20, X0
	007 Move X0, X31
	008 Move X19, X1
	009 Call RuntimeHelpers.get_OffsetToStringData
	010 Move X8, [X20]
	011 Move W2, [X19+16]
	012 Add X1, X19, W0
	013 Move X0, X20
	014 Move X5, [X8+552]
	015 Move X4, [X8+560]
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X3, X31
	019 Move X30, [X31+32]
	020 CallNoReturn X5
	021 Move X0, 0xEC9000
	022 Move X0, [X0+1320]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X19, X0
	026 Move X0, 0xEED000
	027 Move X0, [X0+3264]
	028 Call 0x1C17D08
	029 Move X1, X0
	030 Move X0, X19
	031 Move X2, X31
	032 Call ArgumentNullException..ctor, X0, X1
	033 Move X0, 0xEF3000
	034 Move X0, [X0+920]
	035 Call 0x1C17D08
	036 Move X1, X0
	037 Move X0, X19
	038 Call 0x1C17DEC

Method: System.Int32 GetByteCount(System.Char* chars, System.Int32 count)

Disassembly:
	0x03230DFC LDR W8, [X20 + 0x18]
	0x03230E00 CMP W8, 0x1
	0x03230E04 B.LT 0x3230E44
	0x03230E08 MOV W21, W31
	0x03230E0C CMP W21, W8
	0x03230E10 B.CS 0x3230E54
	0x03230E14 ADD X8, X20, W21, 0x3, SXTW
	0x03230E18 LDR X0, [X8 + 0x20]
	0x03230E1C CBZ X0, 0x3230E58
	0x03230E20 LDR X8, [X0]
	0x03230E24 MOV W1, W19
	0x03230E28 LDP X9, X2, [X8 + 0x188]
	0x03230E2C BLR X9
	0x03230E30 CBNZ X0, 0x3230E48
	0x03230E34 LDR W8, [X20 + 0x18]
	0x03230E38 ADD W21, W21, 0x1
	0x03230E3C CMP W21, W8
	0x03230E40 B.LT 0x3230E0C
	0x03230E44 MOV X0, X31
	0x03230E48 LDP X20, X19, [X31 + 0x10]
	0x03230E4C LDP X30, X21, [X31], #0x20
	0x03230E50 RET
	0x03230E54 BL 0x1C16F28
	0x03230E58 BL 0x1C16F20
	0x03230E5C STP X30, X21, [X31 - 0x20]!
	0x03230E60 STP X20, X19, [X31 + 0x10]
	0x03230E64 ADRP X21, 0x11AC000
	0x03230E68 ADRP X20, 0xEF2000
	0x03230E6C LDRB W8, [X21 + 0x3BF]
	0x03230E70 LDR X20, [X20 + 0x400]
	0x03230E74 MOV X19, X0
	0x03230E78 TBNZ X8, 0x0, 0x3230E90
	0x03230E7C ADRP X0, 0xEF2000
	0x03230E80 LDR X0, [X0 + 0x400]
	0x03230E84 BL 0x1C16CF4
	0x03230E88 MOVZ W8, 0x1
	0x03230E8C STRB W8, [X21 + 0x3BF]
	0x03230E90 LDR X0, [X20]
	0x03230E94 LDR W8, [X0 + 0xE0]
	0x03230E98 CBNZ W8, 0x3230EA4
	0x03230E9C BL 0x1C16DFC
	0x03230EA0 LDR X0, [X20]
	0x03230EA4 LDR X8, [X0 + 0xB8]
	0x03230EA8 LDR X21, [X8 + 0x8]
	0x03230EAC BL 0x1C16D44
	0x03230EB0 CBZ X21, 0x3230F20
	0x03230EB4 LDR X0, [X20]
	0x03230EB8 LDR W8, [X0 + 0xE0]
	0x03230EBC CBNZ W8, 0x3230EC8
	0x03230EC0 BL 0x1C16DFC
	0x03230EC4 LDR X0, [X20]
	0x03230EC8 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {18}
	006 Move TEMP, X2
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {35}
	010 Move X8, [X0]
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X3, X31
	014 Move X5, [X8+552]
	015 Move X4, [X8+560]
	016 Move X30, [X31+32]
	017 CallNoReturn X5
	018 Move X0, 0xEC9000
	019 Move X0, [X0+1320]
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X19, X0
	023 Move X0, 0xEF3000
	024 Move X0, [X0+728]
	025 Call 0x1C17D08
	026 Move X20, X0
	027 Move X0, 0xEF3000
	028 Move X0, [X0+736]
	029 Call 0x1C17D08
	030 Move X2, X0
	031 Move X0, X19
	032 Move X1, X20
	033 Move X3, X31
	034 Call ArgumentNullException..ctor, X0, X1, X2
	035 Move X0, 0xECC000
	036 Move X0, [X0+1888]
	037 Call 0x1C17D08
	038 Call 0x1C17F10
	039 Move X19, X0
	040 Move X0, 0xEEC000
	041 Move X0, [X0+1608]
	042 Call 0x1C17D08
	043 Move X20, X0
	044 Move X0, 0xEEC000
	045 Move X0, [X0+1648]
	046 Call 0x1C17D08
	047 Move X2, X0
	048 Move X0, X19
	049 Move X1, X20
	050 Move X3, X31
	051 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	052 Move X0, 0xEF3000
	053 Move X0, [X0+928]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X19
	057 Call 0x1C17DEC

Method: System.Int32 GetBytes(System.String s, System.Int32 charIndex, System.Int32 charCount, System.Byte[] bytes, System.Int32 byteIndex)

Disassembly:
	0x03230ECC LDR X20, [X8 + 0x8]
	0x03230ED0 BL 0x1C16D44
	0x03230ED4 CBZ X20, 0x3230F34
	0x03230ED8 LDR W8, [X20 + 0x18]
	0x03230EDC CMP W8, 0x1
	0x03230EE0 B.LT 0x3230F20
	0x03230EE4 MOV W21, W31
	0x03230EE8 CMP W21, W8
	0x03230EEC B.CS 0x3230F30
	0x03230EF0 ADD X8, X20, W21, 0x3, SXTW
	0x03230EF4 LDR X0, [X8 + 0x20]
	0x03230EF8 CBZ X0, 0x3230F34
	0x03230EFC LDR X8, [X0]
	0x03230F00 MOV X1, X19
	0x03230F04 LDP X9, X2, [X8 + 0x178]
	0x03230F08 BLR X9
	0x03230F0C CBNZ X0, 0x3230F24
	0x03230F10 LDR W8, [X20 + 0x18]
	0x03230F14 ADD W21, W21, 0x1
	0x03230F18 CMP W21, W8
	0x03230F1C B.LT 0x3230EE8
	0x03230F20 MOV X0, X31
	0x03230F24 LDP X20, X19, [X31 + 0x10]
	0x03230F28 LDP X30, X21, [X31], #0x20
	0x03230F2C RET
	0x03230F30 BL 0x1C16F28
	0x03230F34 BL 0x1C16F20
	0x03230F38 STP X30, X23, [X31 - 0x30]!
	0x03230F3C STP X22, X21, [X31 + 0x10]
	0x03230F40 STP X20, X19, [X31 + 0x20]
	0x03230F44 ADRP X23, 0x11AC000
	0x03230F48 ADRP X22, 0xEF2000
	0x03230F4C LDRB W8, [X23 + 0x3C0]
	0x03230F50 LDR X22, [X22 + 0x400]
	0x03230F54 MOV X19, X2
	0x03230F58 MOV X20, X1
	0x03230F5C MOV W21, W0
	0x03230F60 TBNZ X8, 0x0, 0x3230F78
	0x03230F64 ADRP X0, 0xEF2000
	0x03230F68 LDR X0, [X0 + 0x400]
	0x03230F6C BL 0x1C16CF4
	0x03230F70 MOVZ W8, 0x1
	0x03230F74 STRB W8, [X23 + 0x3C0]
	0x03230F78 LDR X0, [X22]
	0x03230F7C LDR W8, [X0 + 0xE0]
	0x03230F80 CBNZ W8, 0x3230F8C
	0x03230F84 BL 0x1C16DFC
	0x03230F88 LDR X0, [X22]
	0x03230F8C LDR X8, [X0 + 0xB8]
	0x03230F90 LDR X23, [X8 + 0x8]
	0x03230F94 BL 0x1C16D44
	0x03230F98 CBZ X23, 0x3231010
	0x03230F9C LDR X0, [X22]
	0x03230FA0 LDR W8, [X0 + 0xE0]
	0x03230FA4 CBNZ W8, 0x3230FB0
	0x03230FA8 BL 0x1C16DFC
	0x03230FAC LDR X0, [X22]
	0x03230FB0 LDR X8, [X0 + 0xB8]
	0x03230FB4 LDR X22, [X8 + 0x8]
	0x03230FB8 BL 0x1C16D44
	0x03230FBC CBZ X22, 0x3231028
	0x03230FC0 LDR W8, [X22 + 0x18]
	0x03230FC4 CMP W8, 0x1
	0x03230FC8 B.LT 0x3231010
	0x03230FCC MOV W23, W31
	0x03230FD0 CMP W23, W8
	0x03230FD4 B.CS 0x3231024
	0x03230FD8 ADD X8, X22, W23, 0x3, SXTW
	0x03230FDC LDR X0, [X8 + 0x20]
	0x03230FE0 CBZ X0, 0x3231028
	0x03230FE4 LDR X8, [X0]
	0x03230FE8 MOV W1, W21
	0x03230FEC MOV X2, X20
	0x03230FF0 MOV X3, X19
	0x03230FF4 LDP X9, X4, [X8 + 0x198]
	0x03230FF8 BLR X9
	0x03230FFC CBNZ X0, 0x3231014
	0x03231000 LDR W8, [X22 + 0x18]
	0x03231004 ADD W23, W23, 0x1
	0x03231008 CMP W23, W8
	0x0323100C B.LT 0x3230FD0
	0x03231010 MOV X0, X31
	0x03231014 LDP X20, X19, [X31 + 0x20]
	0x03231018 LDP X22, X21, [X31 + 0x10]
	0x0323101C LDP X30, X23, [X31], #0x30
	0x03231020 RET
	0x03231024 BL 0x1C16F28
	0x03231028 BL 0x1C16F20
	0x0323102C STP X30, X21, [X31 - 0x20]!
	0x03231030 STP X20, X19, [X31 + 0x10]
	0x03231034 ADRP X19, 0x11AB000
	0x03231038 ADRP X21, 0xEC8000
	0x0323103C ADRP X20, 0xEF1000
	0x03231040 LDRB W8, [X19 + 0x3C1]
	0x03231044 LDR X21, [X21 + 0xCC0]
	0x03231048 LDR X20, [X20 + 0x400]
	0x0323104C TBNZ X8, 0x0, 0x3231070
	0x03231050 ADRP X0, 0xEF1000
	0x03231054 LDR X0, [X0 + 0x400]
	0x03231058 BL 0x1C16CF4
	0x0323105C ADRP X0, 0xEC8000
	0x03231060 LDR X0, [X0 + 0xCC0]
	0x03231064 BL 0x1C16CF4
	0x03231068 MOVZ W8, 0x1
	0x0323106C STRB W8, [X19 + 0x3C1]
	0x03231070 LDR X0, [X21]
	0x03231074 BL 0x1C16F10
	0x03231078 MOV X1, X31
	0x0323107C MOV X19, X0
	0x03231080 BL 0x33BDD8C
	0x03231084 LDR X8, [X20]
	0x03231088 LDR X8, [X8 + 0xB8]
	0x0323108C STR X19, [X8]
	0x03231090 LDP X20, X19, [X31 + 0x10]
	0x03231094 LDP X30, X21, [X31], #0x20
	0x03231098 RET
	0x0323109C MOVZ W1, 0x6FAF
	0x032310A0 MOV X2, X31
	0x032310A4 B 0x3241B10
	0x032310A8 STR X30, [X31 - 0x30]!
	0x032310AC STP X22, X21, [X31 + 0x10]
	0x032310B0 STP X20, X19, [X31 + 0x20]
	0x032310B4 MOV X20, X2
	0x032310B8 MOV X21, X1
	0x032310BC MOVZ W1, 0x6FAF
	0x032310C0 MOV X2, X31
	0x032310C4 MOV X19, X3
	0x032310C8 MOV X22, X0
	0x032310CC BL 0x3241B10
	0x032310D0 MOV X0, X22
	0x032310D4 MOV X1, X21
	0x032310D8 MOV X2, X20
	0x032310DC MOV X3, X19
	0x032310E0 LDP X20, X19, [X31 + 0x20]
	0x032310E4 LDP X22, X21, [X31 + 0x10]
	0x032310E8 MOV X4, X31
	0x032310EC LDR X30, [X31], #0x30
	0x032310F0 B 0x3241CCC
	0x032310F4 STP X30, X23, [X31 - 0x30]!
	0x032310F8 STP X22, X21, [X31 + 0x10]
	0x032310FC STP X20, X19, [X31 + 0x20]
	0x03231100 ADRP X23, 0x11AB000
	0x03231104 LDRB W8, [X23 + 0x3C2]
	0x03231108 MOV X21, X3
	0x0323110C MOV X22, X2
	0x03231110 MOV X19, X1

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X25, 0x11AD000
	012 Move W8, [X25+951]
	013 Move W19, W5
	014 Move X24, X4
	015 Move W20, W3
	016 Move W21, W2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xEF2000
	024 Move X0, [X0+2096]
	025 Call 0x1C17CF4
	026 Move X0, 0xEF3000
	027 Move X0, [X0+760]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+951], W8
	031 Compare X22, 0
	032 JumpIfEqual {96}
	033 Compare X24, 0
	034 JumpIfEqual {96}
	035 Move TEMP, X20
	036 And TEMP, TEMP, -2147483648
	037 Compare TEMP, -2147483648
	038 JumpIfEqual {118}
	039 Move TEMP, X21
	040 And TEMP, TEMP, -2147483648
	041 Compare TEMP, -2147483648
	042 JumpIfEqual {118}
	043 Move W8, [X22+16]
	044 Subtract W8, W8, W21
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move TEMP, X19
	047 And TEMP, TEMP, -2147483648
	048 Compare TEMP, -2147483648
	049 JumpIfEqual {85}
	050 Move W8, [X24+24]
	051 Subtract W25, W8, W19
	052 Move X26, 0xEF3000
	053 Move X27, 0xEF2000
	054 Move X26, [X26+760]
	055 Move X27, [X27+2096]
	056 Move X0, X31
	057 Call RuntimeHelpers.get_OffsetToStringData
	058 Move X1, [X26]
	059 Move W26, W0
	060 Move X0, X24
	061 Call 0x25FC4C0, X0
	062 Move X2, [X27]
	063 Call 0x2219CF4, X0
	064 Move X8, [X23]
	065 Add X3, X0, W19
	066 Move X0, X23
	067 Move W2, W20
	068 Move X7, [X8+648]
	069 Move X6, [X8+656]
	070 Add X8, X22, W21
	071 Add X1, X8, W26
	072 Move W4, W25
	073 Move X20, [X31+64]
	074 Move X19, [X31+72]
	075 Move X22, [X31+48]
	076 Move X21, [X31+56]
	077 Move X24, [X31+32]
	078 Move X23, [X31+40]
	079 Move X26, [X31+16]
	080 Move X25, [X31+24]
	081 Move X5, X31
	082 Move X30, [X31+80]
	083 Move X27, [X31+88]
	084 CallNoReturn X7
	085 Move X0, 0xECC000
	086 Move X0, [X0+1888]
	087 Call 0x1C17D08
	088 Call 0x1C17F10
	089 Move X19, X0
	090 Move X0, 0xEF3000
	091 Move X0, [X0+768]
	092 Call 0x1C17D08
	093 Move X20, X0
	094 Move X0, 0xEEC000
	095 Move X0, [X0+1632]
	096 Move X8, 0xEF3000
	097 Move X9, 0xEED000
	098 Move X8, [X8+776]
	099 Call 0x3EB288C
	100 Return X0
	101 NotImplemented "Instruction CMP not yet implemented."
	102 NotImplemented "Instruction CSEL not yet implemented."
	103 Call 0x1C17D08
	104 Move X19, X0
	105 Move X0, 0xEC8000
	106 Move X0, [X0+1320]
	107 Call 0x1C17D08
	108 Call 0x1C17F10
	109 Move X20, X0
	110 Move X0, 0xEF2000
	111 Move X0, [X0+736]
	112 Call 0x1C17D08
	113 Move X2, X0
	114 Move X0, X20
	115 Move X1, X19
	116 Move X3, X31
	117 Call ArgumentNullException..ctor, X0, X1, X2
	118 Move X8, 0xEF2000
	119 Move X9, 0xEF2000
	120 Move X8, [X8+784]
	121 Move X9, [X9+792]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 NotImplemented "Instruction CSEL not yet implemented."
	124 Call 0x1C17D08
	125 Move X19, X0
	126 Move X0, 0xECB000
	127 Move X0, [X0+1888]
	128 Call 0x1C17D08
	129 Call 0x1C17F10
	130 Move X20, X0
	131 Move X0, 0xEEB000
	132 Move X0, [X0+1648]
	133 Call 0x1C17D08
	134 Move X2, X0
	135 Move X0, X20
	136 Move X1, X19
	137 Move X3, X31
	138 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	139 Move X0, 0xEF2000
	140 Move X0, [X0+936]
	141 Call 0x1C17D08
	142 Move X1, X0
	143 Move X0, X20
	144 Call 0x1C17DEC
	145 Move X0, 0xECB000
	146 Move X0, [X0+1888]
	147 Call 0x1C17D08
	148 Call 0x1C17F10
	149 Move X19, X0
	150 Move X0, 0xEEC000
	151 Move X0, [X0+3264]
	152 Call 0x1C17D08
	153 Move X20, X0
	154 Move X0, 0xEF2000
	155 Move X0, [X0+264]
	156 Call 0x1C17D08
	157 Move X2, X0
	158 Move X0, X19
	159 Move X1, X20
	160 Move X3, X31
	161 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	162 Move X0, 0xEF2000
	163 Move X0, [X0+936]
	164 Call 0x1C17D08
	165 Move X1, X0
	166 Move X0, X19
	167 Call 0x1C17DEC

Method: System.Int32 GetBytes(System.Char[] chars, System.Int32 charIndex, System.Int32 charCount, System.Byte[] bytes, System.Int32 byteIndex)

Disassembly:
	0x03231114 MOV X20, X0
	0x03231118 TBNZ X8, 0x0, 0x3231148
	0x0323111C ADRP X0, 0xEF1000
	0x03231120 LDR X0, [X0 + 0x408]
	0x03231124 BL 0x1C16CF4
	0x03231128 ADRP X0, 0xEF1000
	0x0323112C LDR X0, [X0 + 0x410]
	0x03231130 BL 0x1C16CF4
	0x03231134 ADRP X0, 0xEF1000
	0x03231138 LDR X0, [X0 + 0x418]
	0x0323113C BL 0x1C16CF4
	0x03231140 MOVZ W8, 0x1
	0x03231144 STRB W8, [X23 + 0x3C2]
	0x03231148 MOV X0, X20
	0x0323114C MOV X1, X19
	0x03231150 MOV X2, X22
	0x03231154 MOV X3, X21
	0x03231158 MOV X4, X31
	0x0323115C BL 0x32420C8
	0x03231160 CBZ X19, 0x32311D8
	0x03231164 ADRP X8, 0xEF1000
	0x03231168 LDR X8, [X8 + 0x410]
	0x0323116C ADRP X21, 0xEF1000
	0x03231170 ADRP X22, 0xEF1000
	0x03231174 MOVZ W2, 0x1
	0x03231178 LDR X1, [X8]
	0x0323117C LDR X21, [X21 + 0x408]
	0x03231180 LDR X22, [X22 + 0x418]
	0x03231184 MOV X0, X19
	0x03231188 MOV X3, X31
	0x0323118C BL 0x32A8F28
	0x03231190 LDR X8, [X20]
	0x03231194 MOV X0, X20
	0x03231198 LDR X9, [X8 + 0x328]
	0x0323119C LDR X1, [X8 + 0x330]
	0x032311A0 BLR X9
	0x032311A4 LDR X1, [X21]
	0x032311A8 MOV W2, W0
	0x032311AC MOV X0, X19
	0x032311B0 MOV X3, X31
	0x032311B4 BL 0x32A8F28
	0x032311B8 LDR X1, [X22]
	0x032311BC MOV X0, X19
	0x032311C0 LDP X20, X19, [X31 + 0x20]
	0x032311C4 LDP X22, X21, [X31 + 0x10]
	0x032311C8 MOV X2, X31
	0x032311CC MOV X3, X31
	0x032311D0 LDP X30, X23, [X31], #0x30
	0x032311D4 B 0x32A8BF0
	0x032311D8 BL 0x1C16F20
	0x032311DC STR X30, [X31 - 0x50]!
	0x032311E0 STP X26, X25, [X31 + 0x10]
	0x032311E4 STP X24, X23, [X31 + 0x20]
	0x032311E8 STP X22, X21, [X31 + 0x30]
	0x032311EC STP X20, X19, [X31 + 0x40]
	0x032311F0 ADRP X23, 0x11AB000
	0x032311F4 LDRB W8, [X23 + 0x3C3]
	0x032311F8 MOV X19, X3
	0x032311FC MOV W22, W2
	0x03231200 MOV X20, X1
	0x03231204 MOV X21, X0
	0x03231208 TBNZ X8, 0x0, 0x3231220
	0x0323120C ADRP X0, 0xEF1000
	0x03231210 LDR X0, [X0 + 0x368]
	0x03231214 BL 0x1C16CF4
	0x03231218 MOVZ W8, 0x1
	0x0323121C STRB W8, [X23 + 0x3C3]
	0x03231220 STR X31, [X31 + 0x8]
	0x03231224 CBZ X19, 0x3231250
	0x03231228 LDR X0, [X19 + 0x10]
	0x0323122C LDRH W24, [X19 + 0x20]
	0x03231230 CBZ X0, 0x32312B4
	0x03231234 ADRP X8, 0xEF1000
	0x03231238 LDR X8, [X8 + 0x368]
	0x0323123C LDR X9, [X0]
	0x03231240 LDR X8, [X8]
	0x03231244 CMP X9, X8
	0x03231248 B.NE 0x32312B4
	0x0323124C B 0x3231280
	0x03231250 LDR X0, [X21 + 0x28]
	0x03231254 CBZ X0, 0x3231270
	0x03231258 ADRP X8, 0xEF1000
	0x0323125C LDR X8, [X8 + 0x368]
	0x03231260 LDR X9, [X0]
	0x03231264 LDR X8, [X8]
	0x03231268 CMP X9, X8
	0x0323126C B.EQ 0x323127C
	0x03231270 MOV X23, X31
	0x03231274 ADD X22, X20, W22, 0x1, SXTW
	0x03231278 B 0x3231314
	0x0323127C MOV W24, W31
	0x03231280 LDP X9, X1, [X8 + 0x188]
	0x03231284 BLR X9
	0x03231288 CMP W0, 0x1
	0x0323128C B.NE 0x32312B4
	0x03231290 CMP W24, 0x0
	0x03231294 CINC W24, W22, NE
	0x03231298 MOV W0, W24
	0x0323129C LDP X20, X19, [X31 + 0x40]
	0x032312A0 LDP X22, X21, [X31 + 0x30]
	0x032312A4 LDP X24, X23, [X31 + 0x20]
	0x032312A8 LDP X26, X25, [X31 + 0x10]
	0x032312AC LDR X30, [X31], #0x50
	0x032312B0 RET
	0x032312B4 ADD X22, X20, W22, 0x1, SXTW
	0x032312B8 CBZ W24, 0x3231310
	0x032312BC CBZ X19, 0x32313D0
	0x032312C0 MOV X0, X19
	0x032312C4 MOV X1, X31
	0x032312C8 BL 0x33FBF24
	0x032312CC CBZ X0, 0x32313D0
	0x032312D0 MOV X1, X20
	0x032312D4 MOV X2, X22
	0x032312D8 MOV X3, X19
	0x032312DC MOV W4, W31
	0x032312E0 MOV X5, X31
	0x032312E4 MOV X23, X0
	0x032312E8 BL 0x33FBF60
	0x032312EC STR X20, [X31 + 0x8]
	0x032312F0 LDR X8, [X23]
	0x032312F4 ADD X2, X31, 0x8
	0x032312F8 MOV X0, X23
	0x032312FC MOV W1, W24
	0x03231300 LDP X9, X3, [X8 + 0x1D8]
	0x03231304 BLR X9
	0x03231308 LDR X26, [X31 + 0x8]
	0x0323130C B 0x3231318
	0x03231310 MOV X23, X31
	0x03231314 MOV X26, X20
	0x03231318 MOV W24, W31
	0x0323131C CBZ X23, 0x3231334
	0x03231320 MOV X0, X23
	0x03231324 MOV X1, X31
	0x03231328 BL 0x33FBF7C
	0x0323132C AND W25, W0, 0xFFFF
	0x03231330 B 0x3231338
	0x03231334 MOV W25, W31
	0x03231338 CMP X22, X26
	0x0323133C B.HI 0x3231344
	0x03231340 CBZ W25, 0x3231298
	0x03231344 CBNZ W25, 0x323134C
	0x03231348 LDRH W25, [X26], #0x2
	0x0323134C CMP W25, 0x100
	0x03231350 B.CS 0x323135C
	0x03231354 ADD W24, W24, 0x1
	0x03231358 B 0x323131C
	0x0323135C CBNZ X23, 0x32313AC
	0x03231360 CBZ X19, 0x3231374
	0x03231364 MOV X0, X19
	0x03231368 MOV X1, X31
	0x0323136C BL 0x33FBF24
	0x03231370 B 0x3231388
	0x03231374 LDR X0, [X21 + 0x28]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x11AC000
	011 Move W8, [X25+952]
	012 Move W20, W5
	013 Move X23, X4
	014 Move W19, W3
	015 Move W21, W2
	016 Move X24, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xEF1000
	023 Move X0, [X0+2096]
	024 Call 0x1C17CF4
	025 Move X0, 0xEF2000
	026 Move X0, [X0+760]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+952], W8
	030 Compare X24, 0
	031 JumpIfEqual {106}
	032 Compare X23, 0
	033 JumpIfEqual {106}
	034 Move TEMP, X19
	035 And TEMP, TEMP, -2147483648
	036 Compare TEMP, -2147483648
	037 JumpIfEqual {127}
	038 Move TEMP, X21
	039 And TEMP, TEMP, -2147483648
	040 Compare TEMP, -2147483648
	041 JumpIfEqual {127}
	042 Move W8, [X24+24]
	043 Subtract W9, W8, W21
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move TEMP, X20
	046 And TEMP, TEMP, -2147483648
	047 Compare TEMP, -2147483648
	048 JumpIfEqual {95}
	049 Move W9, [X23+24]
	050 Subtract W25, W9, W20
	051 Compare W19, 0
	052 JumpIfEqual {84}
	053 Move X9, 0xEF2000
	054 Move X9, [X9+760]
	055 Move X26, 0xEF1000
	056 Move X26, [X26+2096]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X1, [X9]
	059 Add X9, X24, 32
	060 Move X0, X23
	061 NotImplemented "Instruction CSEL not yet implemented."
	062 Call 0x25FC4C0, X0
	063 Move X2, [X26]
	064 Call 0x2219CF4, X0
	065 Move X8, [X22]
	066 Add X1, X24, W21
	067 Add X3, X0, W20
	068 Move X0, X22
	069 Move X7, [X8+648]
	070 Move X6, [X8+656]
	071 Move W2, W19
	072 Move W4, W25
	073 Move X20, [X31+64]
	074 Move X19, [X31+72]
	075 Move X22, [X31+48]
	076 Move X21, [X31+56]
	077 Move X24, [X31+32]
	078 Move X23, [X31+40]
	079 Move X26, [X31+16]
	080 Move X25, [X31+24]
	081 Move X5, X31
	082 Move X30, [X31+80]
	083 CallNoReturn X7
	084 Move X20, [X31+64]
	085 Move X19, [X31+72]
	086 Move X22, [X31+48]
	087 Move X21, [X31+56]
	088 Move X24, [X31+32]
	089 Move X23, [X31+40]
	090 Move X26, [X31+16]
	091 Move X25, [X31+24]
	092 Move W0, W31
	093 Move X30, [X31+80]
	094 Return X0
	095 Move X0, 0xECB000
	096 Move X0, [X0+1888]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X19, X0
	100 Move X0, 0xEF2000
	101 Move X0, [X0+768]
	102 Call 0x1C17D08
	103 Move X20, X0
	104 Move X0, 0xEEB000
	105 Move X0, [X0+1632]
	106 Move X8, 0xEF2000
	107 Move X9, 0xEF2000
	108 Move X8, [X8+776]
	109 Move X9, [X9+728]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction CSEL not yet implemented."
	112 Call 0x1C17D08
	113 Move X19, X0
	114 Move X0, 0xEC8000
	115 Move X0, [X0+1320]
	116 Call 0x1C17D08
	117 Call 0x1C17F10
	118 Move X20, X0
	119 Move X0, 0xEF2000
	120 Move X0, [X0+736]
	121 Call 0x1C17D08
	122 Move X2, X0
	123 Move X0, X20
	124 Move X1, X19
	125 Move X3, X31
	126 Call ArgumentNullException..ctor, X0, X1, X2
	127 Move X8, 0xEF2000
	128 Move X9, 0xEF2000
	129 Move X8, [X8+784]
	130 Move X9, [X9+792]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 NotImplemented "Instruction CSEL not yet implemented."
	133 Call 0x1C17D08
	134 Move X19, X0
	135 Move X0, 0xECB000
	136 Move X0, [X0+1888]
	137 Call 0x1C17D08
	138 Call 0x1C17F10
	139 Move X20, X0
	140 Move X0, 0xEEB000
	141 Move X0, [X0+1648]
	142 Call 0x1C17D08
	143 Move X2, X0
	144 Move X0, X20
	145 Move X1, X19
	146 Move X3, X31
	147 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	148 Move X0, 0xEF2000
	149 Move X0, [X0+944]
	150 Call 0x1C17D08
	151 Move X1, X0
	152 Move X0, X20
	153 Call 0x1C17DEC
	154 Move X0, 0xECB000
	155 Move X0, [X0+1888]
	156 Call 0x1C17D08
	157 Call 0x1C17F10
	158 Move X19, X0
	159 Move X0, 0xEF2000
	160 Move X0, [X0+728]
	161 Call 0x1C17D08
	162 Move X20, X0
	163 Move X0, 0xEF2000
	164 Move X0, [X0+224]
	165 Call 0x1C17D08
	166 Move X2, X0
	167 Move X0, X19
	168 Move X1, X20
	169 Move X3, X31
	170 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	171 Move X0, 0xEF2000
	172 Move X0, [X0+944]
	173 Call 0x1C17D08
	174 Move X1, X0
	175 Move X0, X19
	176 Call 0x1C17DEC

Method: System.Int32 GetBytes(System.Char* chars, System.Int32 charCount, System.Byte* bytes, System.Int32 byteCount)

Disassembly:
	0x03231378 CBZ X0, 0x32313D0
	0x0323137C LDR X8, [X0]
	0x03231380 LDP X9, X1, [X8 + 0x178]
	0x03231384 BLR X9
	0x03231388 MOV X23, X0
	0x0323138C CBZ X0, 0x32313D0
	0x03231390 MOV X0, X23
	0x03231394 MOV X1, X20
	0x03231398 MOV X2, X22
	0x0323139C MOV X3, X19
	0x032313A0 MOV W4, W31
	0x032313A4 MOV X5, X31
	0x032313A8 BL 0x33FBF60
	0x032313AC STR X26, [X31 + 0x8]
	0x032313B0 LDR X8, [X23]
	0x032313B4 ADD X2, X31, 0x8
	0x032313B8 MOV X0, X23
	0x032313BC MOV W1, W25
	0x032313C0 LDP X9, X3, [X8 + 0x1D8]
	0x032313C4 BLR X9
	0x032313C8 LDR X26, [X31 + 0x8]
	0x032313CC B 0x323131C
	0x032313D0 BL 0x1C16F20
	0x032313D4 STR X30, [X31 - 0x60]!
	0x032313D8 STP X28, X27, [X31 + 0x10]
	0x032313DC STP X26, X25, [X31 + 0x20]
	0x032313E0 STP X24, X23, [X31 + 0x30]
	0x032313E4 STP X22, X21, [X31 + 0x40]
	0x032313E8 STP X20, X19, [X31 + 0x50]
	0x032313EC ADRP X23, 0x11AB000
	0x032313F0 LDRB W8, [X23 + 0x3C4]
	0x032313F4 MOV X20, X5
	0x032313F8 MOV W24, W4
	0x032313FC MOV X19, X3
	0x03231400 MOV W25, W2
	0x03231404 MOV X21, X1
	0x03231408 MOV X22, X0
	0x0323140C TBNZ X8, 0x0, 0x3231424
	0x03231410 ADRP X0, 0xEF1000
	0x03231414 LDR X0, [X0 + 0x368]
	0x03231418 BL 0x1C16CF4
	0x0323141C MOVZ W8, 0x1
	0x03231420 STRB W8, [X23 + 0x3C4]
	0x03231424 STR X31, [X31 + 0x8]
	0x03231428 CBZ X20, 0x3231448
	0x0323142C LDR X27, [X20 + 0x10]
	0x03231430 LDRH W26, [X20 + 0x20]
	0x03231434 CBZ X27, 0x32314D8
	0x03231438 ADRP X8, 0xEF1000
	0x0323143C LDR X8, [X8 + 0x368]
	0x03231440 LDR X9, [X27]
	0x03231444 B 0x3231460
	0x03231448 LDR X27, [X22 + 0x28]
	0x0323144C CBZ X27, 0x32314D4
	0x03231450 ADRP X8, 0xEF1000
	0x03231454 LDR X8, [X8 + 0x368]
	0x03231458 LDR X9, [X27]
	0x0323145C MOV W26, W31
	0x03231460 LDR X8, [X8]
	0x03231464 CMP X9, X8
	0x03231468 B.NE 0x32314D8
	0x0323146C LDP X9, X1, [X8 + 0x188]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {24}
	006 Compare X3, 0
	007 JumpIfEqual {24}
	008 Move TEMP, X4
	009 And TEMP, TEMP, -2147483648
	010 Compare TEMP, -2147483648
	011 JumpIfEqual {45}
	012 Move TEMP, X2
	013 And TEMP, TEMP, -2147483648
	014 Compare TEMP, -2147483648
	015 JumpIfEqual {45}
	016 Move X8, [X0]
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X5, X31
	020 Move X7, [X8+648]
	021 Move X6, [X8+656]
	022 Move X30, [X31+32]
	023 CallNoReturn X7
	024 Move X8, 0xEF2000
	025 Move X9, 0xEF2000
	026 Move X8, [X8+728]
	027 Move X9, [X9+776]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSEL not yet implemented."
	030 Call 0x1C17D08
	031 Move X19, X0
	032 Move X0, 0xEC8000
	033 Move X0, [X0+1320]
	034 Call 0x1C17D08
	035 Call 0x1C17F10
	036 Move X20, X0
	037 Move X0, 0xEF2000
	038 Move X0, [X0+736]
	039 Call 0x1C17D08
	040 Move X2, X0
	041 Move X0, X20
	042 Move X1, X19
	043 Move X3, X31
	044 Call ArgumentNullException..ctor, X0, X1, X2
	045 Move X8, 0xEF2000
	046 Move X9, 0xEF2000
	047 Move X8, [X8+808]
	048 Move X9, [X9+784]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 Call 0x1C17D08
	052 Move X19, X0
	053 Move X0, 0xECB000
	054 Move X0, [X0+1888]
	055 Call 0x1C17D08
	056 Call 0x1C17F10
	057 Move X20, X0
	058 Move X0, 0xEEB000
	059 Move X0, [X0+1648]
	060 Call 0x1C17D08
	061 Move X2, X0
	062 Move X0, X20
	063 Move X1, X19
	064 Move X3, X31
	065 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	066 Move X0, 0xEF2000
	067 Move X0, [X0+952]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X20
	071 Call 0x1C17DEC

Method: System.Int32 GetCharCount(System.Byte[] bytes, System.Int32 index, System.Int32 count)

Disassembly:
	0x03231470 MOV X0, X27
	0x03231474 ADD X23, X21, W25, 0x1, SXTW
	0x03231478 BLR X9
	0x0323147C CMP W0, 0x1
	0x03231480 B.NE 0x32314DC
	0x03231484 LDR X0, [X27 + 0x10]
	0x03231488 CBZ X0, 0x3231728
	0x0323148C MOV W1, W31
	0x03231490 MOV X2, X31
	0x03231494 BL 0x3222A1C
	0x03231498 AND W8, W0, 0xFFFF
	0x0323149C CMP W8, 0xFF
	0x032314A0 B.HI 0x32314DC
	0x032314A4 MOV W27, W0
	0x032314A8 CBZ W26, 0x32316C8
	0x032314AC CBNZ W24, 0x32314C4
	0x032314B0 MOVZ W2, 0x1
	0x032314B4 MOV X0, X22
	0x032314B8 MOV X1, X20
	0x032314BC MOV X3, X31
	0x032314C0 BL 0x3245184
	0x032314C4 MOV X26, X19
	0x032314C8 STRB W27, [X26], #0x1
	0x032314CC SUB W24, W24, 0x1
	0x032314D0 B 0x32316CC
	0x032314D4 MOV W26, W31
	0x032314D8 ADD X23, X21, W25, 0x1, SXTW
	0x032314DC CBZ W26, 0x3231560
	0x032314E0 CBZ X20, 0x3231728
	0x032314E4 MOV X0, X20
	0x032314E8 MOV X1, X31
	0x032314EC BL 0x33FBF24
	0x032314F0 CBZ X0, 0x3231728
	0x032314F4 MOVZ W4, 0x1
	0x032314F8 MOV X1, X21
	0x032314FC MOV X2, X23
	0x03231500 MOV X3, X20
	0x03231504 MOV X5, X31
	0x03231508 MOV X25, X0
	0x0323150C BL 0x33FBF60
	0x03231510 STR X21, [X31 + 0x8]
	0x03231514 LDR X8, [X25]
	0x03231518 ADD X2, X31, 0x8
	0x0323151C MOV X0, X25
	0x03231520 MOV W1, W26
	0x03231524 LDP X9, X3, [X8 + 0x1D8]
	0x03231528 BLR X9
	0x0323152C LDR X8, [X25]
	0x03231530 LDR X27, [X31 + 0x8]
	0x03231534 MOV X0, X25
	0x03231538 LDP X9, X1, [X8 + 0x1B8]
	0x0323153C BLR X9
	0x03231540 CMP W0, W24
	0x03231544 B.LE 0x3231568
	0x03231548 MOVZ W2, 0x1
	0x0323154C MOV X0, X22
	0x03231550 MOV X1, X20
	0x03231554 MOV X3, X31
	0x03231558 BL 0x3245184
	0x0323155C B 0x3231568
	0x03231560 MOV X25, X31
	0x03231564 MOV X27, X21
	0x03231568 ADD X28, X19, W24, SXTW
	0x0323156C MOV X26, X19
	0x03231570 CBZ X25, 0x3231588
	0x03231574 MOV X0, X25
	0x03231578 MOV X1, X31
	0x0323157C BL 0x33FBF7C
	0x03231580 AND W24, W0, 0xFFFF
	0x03231584 B 0x323158C
	0x03231588 MOV W24, W31
	0x0323158C CMP X23, X27
	0x03231590 B.HI 0x3231598
	0x03231594 CBZ W24, 0x3231680
	0x03231598 CBNZ W24, 0x32315A0
	0x0323159C LDRH W24, [X27], #0x2
	0x032315A0 CMP W24, 0x100
	0x032315A4 B.CS 0x32315B8
	0x032315A8 CMP X28, X26
	0x032315AC B.LS 0x3231658
	0x032315B0 STRB W24, [X26], #0x1
	0x032315B4 B 0x3231570
	0x032315B8 CBNZ X25, 0x3231608
	0x032315BC CBZ X20, 0x32315D0
	0x032315C0 MOV X0, X20
	0x032315C4 MOV X1, X31
	0x032315C8 BL 0x33FBF24
	0x032315CC B 0x32315E4
	0x032315D0 LDR X0, [X22 + 0x28]
	0x032315D4 CBZ X0, 0x3231728
	0x032315D8 LDR X8, [X0]
	0x032315DC LDP X9, X1, [X8 + 0x178]
	0x032315E0 BLR X9
	0x032315E4 MOV X25, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {37}
	006 Move TEMP, X3
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {54}
	010 Move TEMP, X2
	011 And TEMP, TEMP, -2147483648
	012 Compare TEMP, -2147483648
	013 JumpIfEqual {54}
	014 Move W8, [X1+24]
	015 Subtract W9, W8, W2
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Compare W3, 0
	018 JumpIfEqual {32}
	019 Move X9, [X0]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Add X10, X1, 32
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X5, [X9+712]
	025 Move X4, [X9+720]
	026 NotImplemented "Instruction CSEL not yet implemented."
	027 Add X1, X8, W2
	028 Move W2, W3
	029 Move X3, X31
	030 Move X30, [X31+32]
	031 CallNoReturn X5
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move W0, W31
	035 Move X30, [X31+32]
	036 Return X0
	037 Move X0, 0xEC8000
	038 Move X0, [X0+1320]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0xEF2000
	043 Move X0, [X0+776]
	044 Call 0x1C17D08
	045 Move X20, X0
	046 Move X0, 0xEF2000
	047 Move X0, [X0+736]
	048 Call 0x1C17D08
	049 Move X2, X0
	050 Move X0, X19
	051 Move X1, X20
	052 Move X3, X31
	053 Call ArgumentNullException..ctor, X0, X1, X2
	054 Move X8, 0xEEB000
	055 Move X9, 0xECE000
	056 Move X8, [X8+1608]
	057 Move X9, [X9+304]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 Call 0x1C17D08
	061 Move X19, X0
	062 Move X0, 0xECB000
	063 Move X0, [X0+1888]
	064 Call 0x1C17D08
	065 Call 0x1C17F10
	066 Move X20, X0
	067 Move X0, 0xEEB000
	068 Move X0, [X0+1648]
	069 Call 0x1C17D08
	070 Move X2, X0
	071 Move X0, X20
	072 Move X1, X19
	073 Move X3, X31
	074 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	075 Move X0, 0xEF2000
	076 Move X0, [X0+960]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X20
	080 Call 0x1C17DEC
	081 Move X0, 0xECB000
	082 Move X0, [X0+1888]
	083 Call 0x1C17D08
	084 Call 0x1C17F10
	085 Move X19, X0
	086 Move X0, 0xEF2000
	087 Move X0, [X0+776]
	088 Call 0x1C17D08
	089 Move X20, X0
	090 Move X0, 0xEF2000
	091 Move X0, [X0+224]
	092 Call 0x1C17D08
	093 Move X2, X0
	094 Move X0, X19
	095 Move X1, X20
	096 Move X3, X31
	097 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	098 Move X0, 0xEF2000
	099 Move X0, [X0+960]
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X19
	103 Call 0x1C17DEC

Method: System.Int32 GetCharCount(System.Byte* bytes, System.Int32 count)

Disassembly:
	0x032315E8 CBZ X0, 0x3231728
	0x032315EC MOVZ W4, 0x1
	0x032315F0 MOV X0, X25
	0x032315F4 MOV X1, X21
	0x032315F8 MOV X2, X23
	0x032315FC MOV X3, X20
	0x03231600 MOV X5, X31
	0x03231604 BL 0x33FBF60
	0x03231608 STR X27, [X31 + 0x8]
	0x0323160C LDR X8, [X25]
	0x03231610 ADD X2, X31, 0x8
	0x03231614 MOV X0, X25
	0x03231618 MOV W1, W24
	0x0323161C LDP X9, X3, [X8 + 0x1D8]
	0x03231620 BLR X9
	0x03231624 LDR X8, [X25]
	0x03231628 LDR X27, [X31 + 0x8]
	0x0323162C MOV X0, X25
	0x03231630 LDP X9, X1, [X8 + 0x1B8]
	0x03231634 BLR X9
	0x03231638 SUB X8, X28, X26
	0x0323163C CMP X8, W0, SXTW
	0x03231640 B.GE 0x3231570
	0x03231644 MOV X0, X25
	0x03231648 MOV X1, X31
	0x0323164C SUB X27, X27, 0x2
	0x03231650 BL 0x33FFD90
	0x03231654 B 0x3231668
	0x03231658 CBZ X25, 0x3231664
	0x0323165C LDRB W8, [X25 + 0x2A]
	0x03231660 CBNZ W8, 0x3231668
	0x03231664 SUB X27, X27, 0x2
	0x03231668 CMP X27, X21
	0x0323166C CSET W2, EQ
	0x03231670 MOV X0, X22
	0x03231674 MOV X1, X20
	0x03231678 MOV X3, X31
	0x0323167C BL 0x3245184
	0x03231680 CBZ X20, 0x32316A8
	0x03231684 CBZ X25, 0x3231694
	0x03231688 LDRB W8, [X25 + 0x29]
	0x0323168C CBNZ W8, 0x3231694
	0x03231690 STRH W31, [X20 + 0x20]
	0x03231694 SUB X8, X27, X21
	0x03231698 CMP X8, 0x0
	0x0323169C CINC X8, X8, LT
	0x032316A0 UBFM X8, X8, 0x1, 0x3F
	0x032316A4 STR W8, [X20 + 0x34]
	0x032316A8 SUB W0, W26, W19
	0x032316AC LDP X20, X19, [X31 + 0x50]
	0x032316B0 LDP X22, X21, [X31 + 0x40]
	0x032316B4 LDP X24, X23, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {18}
	006 Move TEMP, X2
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {35}
	010 Move X8, [X0]
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X3, X31
	014 Move X5, [X8+712]
	015 Move X4, [X8+720]
	016 Move X30, [X31+32]
	017 CallNoReturn X5
	018 Move X0, 0xEC8000
	019 Move X0, [X0+1320]
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X19, X0
	023 Move X0, 0xEF2000
	024 Move X0, [X0+776]
	025 Call 0x1C17D08
	026 Move X20, X0
	027 Move X0, 0xEF2000
	028 Move X0, [X0+736]
	029 Call 0x1C17D08
	030 Move X2, X0
	031 Move X0, X19
	032 Move X1, X20
	033 Move X3, X31
	034 Call ArgumentNullException..ctor, X0, X1, X2
	035 Move X0, 0xECB000
	036 Move X0, [X0+1888]
	037 Call 0x1C17D08
	038 Call 0x1C17F10
	039 Move X19, X0
	040 Move X0, 0xEEB000
	041 Move X0, [X0+1608]
	042 Call 0x1C17D08
	043 Move X20, X0
	044 Move X0, 0xEEB000
	045 Move X0, [X0+1648]
	046 Call 0x1C17D08
	047 Move X2, X0
	048 Move X0, X19
	049 Move X1, X20
	050 Move X3, X31
	051 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	052 Move X0, 0xEF2000
	053 Move X0, [X0+968]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X19
	057 Call 0x1C17DEC

Method: System.Int32 GetChars(System.Byte[] bytes, System.Int32 byteIndex, System.Int32 byteCount, System.Char[] chars, System.Int32 charIndex)

Disassembly:
	0x032316B8 LDP X26, X25, [X31 + 0x20]
	0x032316BC LDP X28, X27, [X31 + 0x10]
	0x032316C0 LDR X30, [X31], #0x60
	0x032316C4 RET
	0x032316C8 MOV X26, X19
	0x032316CC CMP W24, W25
	0x032316D0 B.GE 0x32316F0
	0x032316D4 CMP W24, 0x1
	0x032316D8 CSET W2, LT
	0x032316DC MOV X0, X22
	0x032316E0 MOV X1, X20
	0x032316E4 MOV X3, X31
	0x032316E8 BL 0x3245184
	0x032316EC ADD X23, X21, W24, 0x1, SXTW
	0x032316F0 MOV X8, X21
	0x032316F4 CMP X23, X21
	0x032316F8 B.LS 0x3231718
	0x032316FC MOV X9, X8
	0x03231700 LDRH W9, [X8], #0x2
	0x03231704 CMP W9, 0x100
	0x03231708 CSEL W9, W9, W27, CC
	0x0323170C CMP X23, X8
	0x03231710 STRB W9, [X26], #0x1
	0x03231714 B.HI 0x32316FC
	0x03231718 CBZ X20, 0x32316A8
	0x0323171C STRH W31, [X20 + 0x20]
	0x03231720 SUB X8, X8, X21
	0x03231724 B 0x3231698
	0x03231728 BL 0x1C16F20
	0x0323172C MOV W0, W2
	0x03231730 RET
	0x03231734 STR X30, [X31 - 0x30]!
	0x03231738 STP X22, X21, [X31 + 0x10]
	0x0323173C STP X20, X19, [X31 + 0x20]
	0x03231740 MOV X19, X5
	0x03231744 MOV X20, X3
	0x03231748 MOV X21, X1
	0x0323174C CMP W4, W2
	0x03231750 B.GE 0x3231770
	0x03231754 CMP W4, 0x1
	0x03231758 CSET W2, LT
	0x0323175C MOV X1, X19
	0x03231760 MOV X3, X31
	0x03231764 MOV W22, W4
	0x03231768 BL 0x3245300
	0x0323176C MOV W2, W22
	0x03231770 ADD X8, X21, W2, SXTW
	0x03231774 CMP X8, X21
	0x03231778 B.LS 0x323179C
	0x0323177C SXTW X8, W2
	0x03231780 ADD X9, X21, 0x1
	0x03231784 LDRB W10, [X21]
	0x03231788 MOV X21, X9
	0x0323178C SUBS X8, X8, 0x1
	0x03231790 ADD X9, X9, 0x1
	0x03231794 STRH W10, [X20], #0x2
	0x03231798 B.NE 0x3231784
	0x0323179C CBZ X19, 0x32317A4
	0x032317A0 STR W2, [X19 + 0x2C]
	0x032317A4 LDP X20, X19, [X31 + 0x20]
	0x032317A8 LDP X22, X21, [X31 + 0x10]
	0x032317AC MOV W0, W2
	0x032317B0 LDR X30, [X31], #0x30
	0x032317B4 RET
	0x032317B8 STR X30, [X31 - 0x20]!
	0x032317BC STP X20, X19, [X31 + 0x10]
	0x032317C0 TBNZ X1, 0x1F, 0x323182C
	0x032317C4 MOV X20, X0
	0x032317C8 LDR X0, [X0 + 0x28]
	0x032317CC CBZ X0, 0x3231828
	0x032317D0 LDR X8, [X0]
	0x032317D4 MOV W10, W1
	0x032317D8 ADD X19, X10, 0x1
	0x032317DC LDP X9, X8, [X8 + 0x188]
	0x032317E0 MOV X1, X8
	0x032317E4 BLR X9
	0x032317E8 CMP W0, 0x2
	0x032317EC B.LT 0x323180C
	0x032317F0 LDR X0, [X20 + 0x28]
	0x032317F4 CBZ X0, 0x3231828
	0x032317F8 LDR X8, [X0]
	0x032317FC LDP X9, X1, [X8 + 0x188]
	0x03231800 BLR X9
	0x03231804 SXTW X8, W0
	0x03231808 MUL X19, X19, X8
	0x0323180C MOVZ W8, 0x80000000
	0x03231810 CMP X19, X8
	0x03231814 B.GE 0x323185C
	0x03231818 MOV W0, W19
	0x0323181C LDP X20, X19, [X31 + 0x10]
	0x03231820 LDR X30, [X31], #0x20
	0x03231824 RET
	0x03231828 BL 0x1C16F20
	0x0323182C ADRP X0, 0xECA000
	0x03231830 LDR X0, [X0 + 0x760]
	0x03231834 BL 0x1C16D08
	0x03231838 BL 0x1C16F10
	0x0323183C MOV X19, X0
	0x03231840 ADRP X0, 0xEF1000
	0x03231844 LDR X0, [X0 + 0x310]
	0x03231848 BL 0x1C16D08
	0x0323184C MOV X20, X0
	0x03231850 ADRP X0, 0xEEA000
	0x03231854 LDR X0, [X0 + 0x670]
	0x03231858 B 0x3231888
	0x0323185C ADRP X0, 0xECA000
	0x03231860 LDR X0, [X0 + 0x760]
	0x03231864 BL 0x1C16D08
	0x03231868 BL 0x1C16F10
	0x0323186C MOV X19, X0
	0x03231870 ADRP X0, 0xEF1000
	0x03231874 LDR X0, [X0 + 0x310]
	0x03231878 BL 0x1C16D08
	0x0323187C MOV X20, X0
	0x03231880 ADRP X0, 0xEF1000
	0x03231884 LDR X0, [X0 + 0x420]
	0x03231888 BL 0x1C16D08
	0x0323188C MOV X2, X0
	0x03231890 MOV X0, X19
	0x03231894 MOV X1, X20
	0x03231898 MOV X3, X31
	0x0323189C BL 0x3311888
	0x032318A0 ADRP X0, 0xEF1000
	0x032318A4 LDR X0, [X0 + 0x428]
	0x032318A8 BL 0x1C16D08
	0x032318AC MOV X1, X0
	0x032318B0 MOV X0, X19
	0x032318B4 BL 0x1C16DEC
	0x032318B8 STR X30, [X31 - 0x20]!
	0x032318BC STP X20, X19, [X31 + 0x10]
	0x032318C0 TBNZ X1, 0x1F, 0x3231928
	0x032318C4 MOV X20, X0
	0x032318C8 LDR X0, [X0 + 0x30]
	0x032318CC CBZ X0, 0x3231924
	0x032318D0 LDR X8, [X0]
	0x032318D4 MOV W19, W1
	0x032318D8 LDP X9, X8, [X8 + 0x188]
	0x032318DC MOV X1, X8
	0x032318E0 BLR X9
	0x032318E4 CMP W0, 0x2
	0x032318E8 B.LT 0x3231914
	0x032318EC LDR X0, [X20 + 0x30]
	0x032318F0 CBZ X0, 0x3231924
	0x032318F4 LDR X8, [X0]
	0x032318F8 LDP X9, X1, [X8 + 0x188]
	0x032318FC BLR X9
	0x03231900 SXTW X8, W0
	0x03231904 MUL X19, X8, X19
	0x03231908 MOVZ W8, 0x80000000
	0x0323190C CMP X19, X8
	0x03231910 B.GE 0x3231958
	0x03231914 MOV W0, W19
	0x03231918 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x11AC000
	011 Move W8, [X25+953]
	012 Move W20, W5
	013 Move X23, X4
	014 Move W19, W3
	015 Move W21, W2
	016 Move X24, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xEF2000
	023 Move X0, [X0+712]
	024 Call 0x1C17CF4
	025 Move X0, 0xEF2000
	026 Move X0, [X0+720]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+953], W8
	030 Compare X24, 0
	031 JumpIfEqual {106}
	032 Compare X23, 0
	033 JumpIfEqual {106}
	034 Move TEMP, X19
	035 And TEMP, TEMP, -2147483648
	036 Compare TEMP, -2147483648
	037 JumpIfEqual {127}
	038 Move TEMP, X21
	039 And TEMP, TEMP, -2147483648
	040 Compare TEMP, -2147483648
	041 JumpIfEqual {127}
	042 Move W8, [X24+24]
	043 Subtract W9, W8, W21
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move TEMP, X20
	046 And TEMP, TEMP, -2147483648
	047 Compare TEMP, -2147483648
	048 JumpIfEqual {95}
	049 Move W9, [X23+24]
	050 Subtract W25, W9, W20
	051 Compare W19, 0
	052 JumpIfEqual {84}
	053 Move X9, 0xEF2000
	054 Move X9, [X9+720]
	055 Move X26, 0xEF2000
	056 Move X26, [X26+712]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X1, [X9]
	059 Add X9, X24, 32
	060 Move X0, X23
	061 NotImplemented "Instruction CSEL not yet implemented."
	062 Call Span`1<Char>.op_Implicit, X0
	063 Move X2, [X26]
	064 Call MemoryMarshal.GetReference, X0
	065 Move X8, [X22]
	066 Add X1, X24, W21
	067 Add X3, X0, W20
	068 Move X0, X22
	069 Move X7, [X8+776]
	070 Move X6, [X8+784]
	071 Move W2, W19
	072 Move W4, W25
	073 Move X20, [X31+64]
	074 Move X19, [X31+72]
	075 Move X22, [X31+48]
	076 Move X21, [X31+56]
	077 Move X24, [X31+32]
	078 Move X23, [X31+40]
	079 Move X26, [X31+16]
	080 Move X25, [X31+24]
	081 Move X5, X31
	082 Move X30, [X31+80]
	083 CallNoReturn X7
	084 Move X20, [X31+64]
	085 Move X19, [X31+72]
	086 Move X22, [X31+48]
	087 Move X21, [X31+56]
	088 Move X24, [X31+32]
	089 Move X23, [X31+40]
	090 Move X26, [X31+16]
	091 Move X25, [X31+24]
	092 Move W0, W31
	093 Move X30, [X31+80]
	094 Return X0
	095 Move X0, 0xECB000
	096 Move X0, [X0+1888]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X19, X0
	100 Move X0, 0xEF2000
	101 Move X0, [X0+792]
	102 Call 0x1C17D08
	103 Move X20, X0
	104 Move X0, 0xEEB000
	105 Move X0, [X0+1632]
	106 Move X8, 0xEF2000
	107 Move X9, 0xEF2000
	108 Move X8, [X8+728]
	109 Move X9, [X9+776]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction CSEL not yet implemented."
	112 Call 0x1C17D08
	113 Move X19, X0
	114 Move X0, 0xEC8000
	115 Move X0, [X0+1320]
	116 Call 0x1C17D08
	117 Call 0x1C17F10
	118 Move X20, X0
	119 Move X0, 0xEF2000
	120 Move X0, [X0+736]
	121 Call 0x1C17D08
	122 Move X2, X0
	123 Move X0, X20
	124 Move X1, X19
	125 Move X3, X31
	126 Call ArgumentNullException..ctor, X0, X1, X2
	127 Move X8, 0xEF2000
	128 Move X9, 0xEF2000
	129 Move X8, [X8+808]
	130 Move X9, [X9+768]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 NotImplemented "Instruction CSEL not yet implemented."
	133 Call 0x1C17D08
	134 Move X19, X0
	135 Move X0, 0xECB000
	136 Move X0, [X0+1888]
	137 Call 0x1C17D08
	138 Call 0x1C17F10
	139 Move X20, X0
	140 Move X0, 0xEEB000
	141 Move X0, [X0+1648]
	142 Call 0x1C17D08
	143 Move X2, X0
	144 Move X0, X20
	145 Move X1, X19
	146 Move X3, X31
	147 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	148 Move X0, 0xEF2000
	149 Move X0, [X0+976]
	150 Call 0x1C17D08
	151 Move X1, X0
	152 Move X0, X20
	153 Call 0x1C17DEC
	154 Move X0, 0xECB000
	155 Move X0, [X0+1888]
	156 Call 0x1C17D08
	157 Call 0x1C17F10
	158 Move X19, X0
	159 Move X0, 0xEF2000
	160 Move X0, [X0+776]
	161 Call 0x1C17D08
	162 Move X20, X0
	163 Move X0, 0xEF2000
	164 Move X0, [X0+224]
	165 Call 0x1C17D08
	166 Move X2, X0
	167 Move X0, X19
	168 Move X1, X20
	169 Move X3, X31
	170 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	171 Move X0, 0xEF2000
	172 Move X0, [X0+976]
	173 Call 0x1C17D08
	174 Move X1, X0
	175 Move X0, X19
	176 Call 0x1C17DEC

Method: System.Int32 GetChars(System.Byte* bytes, System.Int32 byteCount, System.Char* chars, System.Int32 charCount)

Disassembly:
	0x0323191C LDR X30, [X31], #0x20
	0x03231920 RET
	0x03231924 BL 0x1C16F20
	0x03231928 ADRP X0, 0xECA000
	0x0323192C LDR X0, [X0 + 0x760]
	0x03231930 BL 0x1C16D08
	0x03231934 BL 0x1C16F10
	0x03231938 MOV X19, X0
	0x0323193C ADRP X0, 0xEF1000
	0x03231940 LDR X0, [X0 + 0x328]
	0x03231944 BL 0x1C16D08
	0x03231948 MOV X20, X0
	0x0323194C ADRP X0, 0xEEA000
	0x03231950 LDR X0, [X0 + 0x670]
	0x03231954 B 0x3231984
	0x03231958 ADRP X0, 0xECA000
	0x0323195C LDR X0, [X0 + 0x760]
	0x03231960 BL 0x1C16D08
	0x03231964 BL 0x1C16F10
	0x03231968 MOV X19, X0
	0x0323196C ADRP X0, 0xEF1000
	0x03231970 LDR X0, [X0 + 0x328]
	0x03231974 BL 0x1C16D08
	0x03231978 MOV X20, X0
	0x0323197C ADRP X0, 0xEF1000
	0x03231980 LDR X0, [X0 + 0x430]
	0x03231984 BL 0x1C16D08
	0x03231988 MOV X2, X0
	0x0323198C MOV X0, X19
	0x03231990 MOV X1, X20
	0x03231994 MOV X3, X31
	0x03231998 BL 0x3311888
	0x0323199C ADRP X0, 0xEF1000
	0x032319A0 LDR X0, [X0 + 0x438]
	0x032319A4 BL 0x1C16D08
	0x032319A8 MOV X1, X0
	0x032319AC MOV X0, X19
	0x032319B0 BL 0x1C16DEC
	0x032319B4 STR X30, [X31 - 0x20]!
	0x032319B8 STP X20, X19, [X31 + 0x10]
	0x032319BC ADRP X20, 0x11AB000
	0x032319C0 ADRP X19, 0xEF1000
	0x032319C4 LDRB W8, [X20 + 0x3C5]
	0x032319C8 LDR X19, [X19 + 0x440]
	0x032319CC TBNZ X8, 0x0, 0x32319E4
	0x032319D0 ADRP X0, 0xEF1000
	0x032319D4 LDR X0, [X0 + 0x440]
	0x032319D8 BL 0x1C16CF4
	0x032319DC MOVZ W8, 0x1
	0x032319E0 STRB W8, [X20 + 0x3C5]
	0x032319E4 LDR X0, [X19]
	0x032319E8 LDR W8, [X0 + 0xE0]
	0x032319EC CBNZ W8, 0x32319F8
	0x032319F0 BL 0x1C16DFC
	0x032319F4 LDR X0, [X19]
	0x032319F8 LDR X8, [X0 + 0xB8]
	0x032319FC LDP X20, X19, [X31 + 0x10]
	0x03231A00 LDR X0, [X8 + 0x8]
	0x03231A04 LDR X30, [X31], #0x20
	0x03231A08 RET
	0x03231A0C STR X30, [X31 - 0x30]!
	0x03231A10 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {24}
	006 Compare X3, 0
	007 JumpIfEqual {24}
	008 Move TEMP, X2
	009 And TEMP, TEMP, -2147483648
	010 Compare TEMP, -2147483648
	011 JumpIfEqual {45}
	012 Move TEMP, X4
	013 And TEMP, TEMP, -2147483648
	014 Compare TEMP, -2147483648
	015 JumpIfEqual {45}
	016 Move X8, [X0]
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X5, X31
	020 Move X7, [X8+776]
	021 Move X6, [X8+784]
	022 Move X30, [X31+32]
	023 CallNoReturn X7
	024 Move X8, 0xEF2000
	025 Move X9, 0xEF2000
	026 Move X8, [X8+728]
	027 Move X9, [X9+776]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSEL not yet implemented."
	030 Call 0x1C17D08
	031 Move X19, X0
	032 Move X0, 0xEC8000
	033 Move X0, [X0+1320]
	034 Call 0x1C17D08
	035 Call 0x1C17F10
	036 Move X20, X0
	037 Move X0, 0xEF2000
	038 Move X0, [X0+736]
	039 Call 0x1C17D08
	040 Move X2, X0
	041 Move X0, X20
	042 Move X1, X19
	043 Move X3, X31
	044 Call ArgumentNullException..ctor, X0, X1, X2
	045 Move X8, 0xEF2000
	046 Move X9, 0xEF2000
	047 Move X8, [X8+808]
	048 Move X9, [X9+784]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 Call 0x1C17D08
	052 Move X19, X0
	053 Move X0, 0xECB000
	054 Move X0, [X0+1888]
	055 Call 0x1C17D08
	056 Call 0x1C17F10
	057 Move X20, X0
	058 Move X0, 0xEEB000
	059 Move X0, [X0+1648]
	060 Call 0x1C17D08
	061 Move X2, X0
	062 Move X0, X20
	063 Move X1, X19
	064 Move X3, X31
	065 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	066 Move X0, 0xEF2000
	067 Move X0, [X0+984]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X20
	071 Call 0x1C17DEC

Method: System.String GetString(System.Byte[] bytes, System.Int32 index, System.Int32 count)

Disassembly:
	0x03231A14 STP X20, X19, [X31 + 0x20]
	0x03231A18 ADRP X19, 0x11AB000
	0x03231A1C ADRP X20, 0xEF1000
	0x03231A20 ADRP X22, 0xECB000
	0x03231A24 ADRP X21, 0xEF1000
	0x03231A28 LDRB W8, [X19 + 0x3C6]
	0x03231A2C LDR X20, [X20 + 0x440]
	0x03231A30 LDR X22, [X22 + 0x8D8]
	0x03231A34 LDR X21, [X21 + 0x448]
	0x03231A38 TBNZ X8, 0x0, 0x3231A68
	0x03231A3C ADRP X0, 0xECB000
	0x03231A40 LDR X0, [X0 + 0x8D8]
	0x03231A44 BL 0x1C16CF4
	0x03231A48 ADRP X0, 0xEF1000
	0x03231A4C LDR X0, [X0 + 0x440]
	0x03231A50 BL 0x1C16CF4
	0x03231A54 ADRP X0, 0xEF1000
	0x03231A58 LDR X0, [X0 + 0x448]
	0x03231A5C BL 0x1C16CF4
	0x03231A60 MOVZ W8, 0x1
	0x03231A64 STRB W8, [X19 + 0x3C6]
	0x03231A68 LDR X0, [X20]
	0x03231A6C BL 0x1C16F10
	0x03231A70 MOVZ W1, 0x6FAF
	0x03231A74 MOV X2, X31
	0x03231A78 MOV X19, X0
	0x03231A7C BL 0x3241B10
	0x03231A80 LDR X8, [X20]
	0x03231A84 MOVZ W1, 0x25C
	0x03231A88 LDR X8, [X8 + 0xB8]
	0x03231A8C STR X19, [X8]
	0x03231A90 LDR X0, [X22]
	0x03231A94 BL 0x1C16D6C
	0x03231A98 LDR X1, [X21]
	0x03231A9C MOV X2, X31
	0x03231AA0 MOV X19, X0
	0x03231AA4 BL 0x32C5BD8
	0x03231AA8 LDR X8, [X20]
	0x03231AAC LDP X22, X21, [X31 + 0x10]
	0x03231AB0 LDR X8, [X8 + 0xB8]
	0x03231AB4 STR X19, [X8 + 0x8]
	0x03231AB8 LDP X20, X19, [X31 + 0x20]
	0x03231ABC LDR X30, [X31], #0x30
	0x03231AC0 RET
	0x03231AC4 STP X30, X21, [X31 - 0x20]!
	0x03231AC8 STP X20, X19, [X31 + 0x10]
	0x03231ACC ADRP X21, 0x11AB000
	0x03231AD0 ADRP X20, 0xECB000
	0x03231AD4 LDRB W8, [X21 + 0x3C7]
	0x03231AD8 LDR X20, [X20 + 0x8D8]
	0x03231ADC MOV X19, X0
	0x03231AE0 TBNZ X8, 0x0, 0x3231AF8
	0x03231AE4 ADRP X0, 0xECB000
	0x03231AE8 LDR X0, [X0 + 0x8D8]
	0x03231AEC BL 0x1C16CF4
	0x03231AF0 MOVZ W8, 0x1
	0x03231AF4 STRB W8, [X21 + 0x3C7]
	0x03231AF8 MOV X0, X19
	0x03231AFC MOV X1, X31
	0x03231B00 BL 0x33BDD8C
	0x03231B04 MOVN W8, 0x80000000
	0x03231B08 STR W8, [X19 + 0x28]
	0x03231B0C LDR X0, [X20]
	0x03231B10 MOVZ W1, 0x10
	0x03231B14 BL 0x1C16D6C
	0x03231B18 STR X0, [X19 + 0x10]
	0x03231B1C LDP X20, X19, [X31 + 0x10]
	0x03231B20 LDP X30, X21, [X31], #0x20
	0x03231B24 RET
	0x03231B28 MOVN W2, 0x80000000
	0x03231B2C B 0x3231B30
	0x03231B30 STR X30, [X31 - 0x30]!
	0x03231B34 STP X22, X21, [X31 + 0x10]
	0x03231B38 STP X20, X19, [X31 + 0x20]
	0x03231B3C ADRP X22, 0x11AB000
	0x03231B40 LDRB W8, [X22 + 0x3C9]
	0x03231B44 MOV W20, W2
	0x03231B48 MOV W21, W1
	0x03231B4C MOV X19, X0
	0x03231B50 TBNZ X8, 0x0, 0x3231B74
	0x03231B54 ADRP X0, 0xECB000
	0x03231B58 LDR X0, [X0 + 0x8D8]
	0x03231B5C BL 0x1C16CF4
	0x03231B60 ADRP X0, 0xEC2000
	0x03231B64 LDR X0, [X0 + 0x5A8]
	0x03231B68 BL 0x1C16CF4
	0x03231B6C MOVZ W8, 0x1
	0x03231B70 STRB W8, [X22 + 0x3C9]
	0x03231B74 MOV X0, X19
	0x03231B78 MOV X1, X31
	0x03231B7C BL 0x33BDD8C
	0x03231B80 CMP W21, W20
	0x03231B84 B.GT 0x3231BF0
	0x03231B88 CMP W20, 0x0
	0x03231B8C B.LE 0x3231C20
	0x03231B90 TBNZ X21, 0x1F, 0x3231C7C
	0x03231B94 ADRP X22, 0xECB000
	0x03231B98 LDR X22, [X22 + 0x8D8]
	0x03231B9C CBNZ W21, 0x3231BCC
	0x03231BA0 ADRP X8, 0xEC2000
	0x03231BA4 LDR X8, [X8 + 0x5A8]
	0x03231BA8 LDR X0, [X8]
	0x03231BAC LDR W8, [X0 + 0xE0]
	0x03231BB0 CBNZ W8, 0x3231BB8
	0x03231BB4 BL 0x1C16DFC
	0x03231BB8 MOVZ W0, 0x10
	0x03231BBC MOV W1, W20
	0x03231BC0 MOV X2, X31
	0x03231BC4 BL 0x337EE94
	0x03231BC8 MOV W21, W0
	0x03231BCC STR W20, [X19 + 0x28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x11AC000
	008 Move W8, [X23+954]
	009 Move W20, W3
	010 Move W19, W2
	011 Move X22, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xEC5000
	018 Move X0, [X0+632]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+954], W8
	022 Compare X22, 0
	023 JumpIfEqual {64}
	024 Move TEMP, X20
	025 And TEMP, TEMP, -2147483648
	026 Compare TEMP, -2147483648
	027 JumpIfEqual {81}
	028 Move TEMP, X19
	029 And TEMP, TEMP, -2147483648
	030 Compare TEMP, -2147483648
	031 JumpIfEqual {81}
	032 Move W8, [X22+24]
	033 Subtract W9, W8, W19
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Compare W20, 0
	036 JumpIfEqual {52}
	037 Add X9, X22, 32
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 Add X0, X8, W19
	041 Move W1, W20
	042 Move X2, X21
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X3, X31
	048 Move X30, [X31+48]
	049 Move X23, [X31+56]
	050 Call String.CreateStringFromEncoding, X0, X1, X2
	051 Return X0
	052 Move X8, 0xEC5000
	053 Move X8, [X8+632]
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X8, [X8]
	059 Move X8, [X8+184]
	060 Move X0, [X8]
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Return X0
	064 Move X0, 0xEC8000
	065 Move X0, [X0+1320]
	066 Call 0x1C17D08
	067 Call 0x1C17F10
	068 Move X19, X0
	069 Move X0, 0xEF2000
	070 Move X0, [X0+776]
	071 Call 0x1C17D08
	072 Move X20, X0
	073 Move X0, 0xEF2000
	074 Move X0, [X0+736]
	075 Call 0x1C17D08
	076 Move X2, X0
	077 Move X0, X19
	078 Move X1, X20
	079 Move X3, X31
	080 Call ArgumentNullException..ctor, X0, X1, X2
	081 Move X8, 0xEEB000
	082 Move X9, 0xECE000
	083 Move X8, [X8+1608]
	084 Move X9, [X9+304]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction CSEL not yet implemented."
	087 Call 0x1C17D08
	088 Move X19, X0
	089 Move X0, 0xECB000
	090 Move X0, [X0+1888]
	091 Call 0x1C17D08
	092 Call 0x1C17F10
	093 Move X20, X0
	094 Move X0, 0xEEB000
	095 Move X0, [X0+1648]
	096 Call 0x1C17D08
	097 Move X2, X0
	098 Move X0, X20
	099 Move X1, X19
	100 Move X3, X31
	101 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	102 Move X0, 0xEF2000
	103 Move X0, [X0+992]
	104 Call 0x1C17D08
	105 Move X1, X0
	106 Move X0, X20
	107 Call 0x1C17DEC
	108 Move X0, 0xECB000
	109 Move X0, [X0+1888]
	110 Call 0x1C17D08
	111 Call 0x1C17F10
	112 Move X19, X0
	113 Move X0, 0xEF2000
	114 Move X0, [X0+776]
	115 Call 0x1C17D08
	116 Move X20, X0
	117 Move X0, 0xEF2000
	118 Move X0, [X0+224]
	119 Call 0x1C17D08
	120 Move X2, X0
	121 Move X0, X19
	122 Move X1, X20
	123 Move X3, X31
	124 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	125 Move X0, 0xEF2000
	126 Move X0, [X0+992]
	127 Call 0x1C17D08
	128 Move X1, X0
	129 Move X0, X19
	130 Call 0x1C17DEC

Method: System.Text.Decoder GetDecoder()

Disassembly:
	0x03231BD0 LDR X0, [X22]
	0x03231BD4 MOV W1, W21
	0x03231BD8 BL 0x1C16D6C
	0x03231BDC STR X0, [X19 + 0x10]
	0x03231BE0 LDP X20, X19, [X31 + 0x20]
	0x03231BE4 LDP X22, X21, [X31 + 0x10]
	0x03231BE8 LDR X30, [X31], #0x30
	0x03231BEC RET
	0x03231BF0 ADRP X0, 0xECA000
	0x03231BF4 LDR X0, [X0 + 0x760]
	0x03231BF8 BL 0x1C16D08
	0x03231BFC BL 0x1C16F10
	0x03231C00 MOV X19, X0
	0x03231C04 ADRP X0, 0xEEC000
	0x03231C08 LDR X0, [X0 + 0x58]
	0x03231C0C BL 0x1C16D08
	0x03231C10 MOV X20, X0
	0x03231C14 ADRP X0, 0xEF1000
	0x03231C18 LDR X0, [X0 + 0x450]
	0x03231C1C B 0x3231C4C
	0x03231C20 ADRP X0, 0xECA000
	0x03231C24 LDR X0, [X0 + 0x760]
	0x03231C28 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x11AC000
	006 Move X21, 0xEF2000
	007 Move W8, [X20+955]
	008 Move X21, [X21+1000]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEF2000
	015 Move X0, [X0+1000]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+955], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X2, X31
	023 Move X20, X0
	024 Call DecoderNLS..ctor, X0, X1
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.Text.Encoder GetEncoder()

Disassembly:
	0x03231C2C BL 0x1C16F10
	0x03231C30 MOV X19, X0
	0x03231C34 ADRP X0, 0xEF1000
	0x03231C38 LDR X0, [X0 + 0x458]
	0x03231C3C BL 0x1C16D08
	0x03231C40 MOV X20, X0
	0x03231C44 ADRP X0, 0xEF1000
	0x03231C48 LDR X0, [X0 + 0x460]
	0x03231C4C BL 0x1C16D08
	0x03231C50 MOV X2, X0
	0x03231C54 MOV X0, X19
	0x03231C58 MOV X1, X20
	0x03231C5C MOV X3, X31
	0x03231C60 BL 0x3311888
	0x03231C64 ADRP X0, 0xEF1000
	0x03231C68 LDR X0, [X0 + 0x468]
	0x03231C6C BL 0x1C16D08
	0x03231C70 MOV X1, X0
	0x03231C74 MOV X0, X19
	0x03231C78 BL 0x1C16DEC
	0x03231C7C ADRP X0, 0xEF1000
	0x03231C80 LDR X0, [X0 + 0x470]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x11AC000
	006 Move X21, 0xEF2000
	007 Move W8, [X20+956]
	008 Move X21, [X21+1008]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEF2000
	015 Move X0, [X0+1008]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+956], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call EncoderNLS..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

