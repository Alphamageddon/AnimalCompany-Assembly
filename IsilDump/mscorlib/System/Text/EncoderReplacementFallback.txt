Type: System.Text.EncoderReplacementFallback

Method: System.Void .ctor()

Disassembly:
	0x0323032C MOV X19, X0
	0x03230330 ADRP X0, 0xEF2000
	0x03230334 LDR X0, [X0 + 0x2D8]
	0x03230338 BL 0x1C16D08
	0x0323033C MOV X20, X0
	0x03230340 ADRP X0, 0xEF2000
	0x03230344 LDR X0, [X0 + 0xE0]
	0x03230348 BL 0x1C16D08
	0x0323034C MOV X2, X0
	0x03230350 MOV X0, X19
	0x03230354 MOV X1, X20
	0x03230358 MOV X3, X31
	0x0323035C BL 0x3311888
	0x03230360 ADRP X0, 0xEF2000
	0x03230364 LDR X0, [X0 + 0x3B0]
	0x03230368 BL 0x1C16D08
	0x0323036C MOV X1, X0
	0x03230370 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x11AD000
	006 Move X21, 0xEF2000
	007 Move W8, [X20+943]
	008 Move X21, [X21+2448]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEF2000
	015 Move X0, [X0+2448]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+943], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x0323051C B 0x32305D0
	0x03230520 ADRP X8, 0xEEB000
	0x03230524 ADRP X9, 0xECE000
	0x03230528 LDR X8, [X8 + 0x648]
	0x0323052C LDR X9, [X9 + 0x130]
	0x03230530 CMP W2, 0x0
	0x03230534 CSEL X0, X9, X8, LT
	0x03230538 BL 0x1C16D08
	0x0323053C MOV X19, X0
	0x03230540 ADRP X0, 0xECB000
	0x03230544 LDR X0, [X0 + 0x760]
	0x03230548 BL 0x1C16D08
	0x0323054C BL 0x1C16F10
	0x03230550 MOV X20, X0
	0x03230554 ADRP X0, 0xEEB000
	0x03230558 LDR X0, [X0 + 0x670]
	0x0323055C BL 0x1C16D08
	0x03230560 MOV X2, X0
	0x03230564 MOV X0, X20
	0x03230568 MOV X1, X19
	0x0323056C MOV X3, X31
	0x03230570 BL 0x3311888
	0x03230574 ADRP X0, 0xEF2000
	0x03230578 LDR X0, [X0 + 0x3C0]
	0x0323057C BL 0x1C16D08
	0x03230580 MOV X1, X0
	0x03230584 MOV X0, X20
	0x03230588 BL 0x1C16DEC
	0x0323058C ADRP X0, 0xECB000
	0x03230590 LDR X0, [X0 + 0x760]
	0x03230594 BL 0x1C16D08
	0x03230598 BL 0x1C16F10
	0x0323059C MOV X19, X0
	0x032305A0 ADRP X0, 0xEF2000
	0x032305A4 LDR X0, [X0 + 0x308]
	0x032305A8 BL 0x1C16D08
	0x032305AC MOV X20, X0
	0x032305B0 ADRP X0, 0xEF2000
	0x032305B4 LDR X0, [X0 + 0xE0]
	0x032305B8 BL 0x1C16D08
	0x032305BC MOV X2, X0
	0x032305C0 MOV X0, X19
	0x032305C4 MOV X1, X20
	0x032305C8 MOV X3, X31
	0x032305CC BL 0x3311888
	0x032305D0 ADRP X0, 0xEF2000
	0x032305D4 LDR X0, [X0 + 0x3C0]
	0x032305D8 BL 0x1C16D08
	0x032305DC MOV X1, X0
	0x032305E0 MOV X0, X19
	0x032305E4 BL 0x1C16DEC
	0x032305E8 STR X30, [X31 - 0x20]!
	0x032305EC STP X20, X19, [X31 + 0x10]
	0x032305F0 CBZ X1, 0x3230614
	0x032305F4 TBNZ X2, 0x1F, 0x323065C
	0x032305F8 LDR X8, [X0]
	0x032305FC LDP X20, X19, [X31 + 0x10]
	0x03230600 MOV X3, X31
	0x03230604 LDR X5, [X8 + 0x2C8]
	0x03230608 LDR X4, [X8 + 0x2D0]
	0x0323060C LDR X30, [X31], #0x20
	0x03230610 BR X5
	0x03230614 ADRP X0, 0xEC8000
	0x03230618 LDR X0, [X0 + 0x528]
	0x0323061C BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x11AD000
	006 Move W8, [X21+944]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xEF3000
	014 Move X0, [X0+848]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+944], W8
	018 Move X0, X19
	019 Move X1, X31
	020 Call EncoderFallback..ctor, X0
	021 Compare X20, 0
	022 JumpIfEqual {35}
	023 Move X8, 0xEF3000
	024 Move X8, [X8+848]
	025 Move X1, [X8]
	026 Move X0, X20
	027 Move X2, X31
	028 Call SerializationInfo.GetString, X0, X1
	029 Move [X19+16], X0
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 
	035 Call 0x1C17F20
	036 Move X21, X0
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, X21
	039 Call 0x3EB2AD0
	040 Move X21, X0
	041 Move X0, 0xECA000
	042 Move X0, [X0+3264]
	043 Call 0x1C17D08
	044 Move X8, [X21]
	045 Move X1, [X8]
	046 Call 0x1C18270
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {61}
	051 Call 0x3EB2AE0
	052 Compare X20, 0
	053 JumpIfEqual {69}
	054 Move X0, 0xEF3000
	055 Move X0, [X0+856]
	056 Call 0x1C17D08
	057 Move X1, X0
	058 Move X0, X20
	059 Move X2, X31
	060 Call SerializationInfo.GetString, X0, X1
	061 Move W0, 8
	062 Call 0x3EB2AF0
	063 Move X8, [X21]
	064 Move [X0], X8
	065 Move X1, 0xC85000
	066 Add X1, X1, 3672
	067 Move X2, X31
	068 Call 0x3EB2B00
	069 Call 0x1C17F20
	070 Move X21, X0
	071 Call 0x3EB2AE0
	072 Move X0, X21
	073 Call 0x1D2D690
	074 Call 0x1991590

Method: System.Void System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x03230620 BL 0x1C16F10
	0x03230624 MOV X19, X0
	0x03230628 ADRP X0, 0xEF2000
	0x0323062C LDR X0, [X0 + 0x308]
	0x03230630 BL 0x1C16D08
	0x03230634 MOV X20, X0
	0x03230638 ADRP X0, 0xEF2000
	0x0323063C LDR X0, [X0 + 0x2E0]
	0x03230640 BL 0x1C16D08
	0x03230644 MOV X2, X0
	0x03230648 MOV X0, X19
	0x0323064C MOV X1, X20
	0x03230650 MOV X3, X31
	0x03230654 BL 0x3315F7C
	0x03230658 B 0x32306A0
	0x0323065C ADRP X0, 0xECB000
	0x03230660 LDR X0, [X0 + 0x760]
	0x03230664 BL 0x1C16D08
	0x03230668 BL 0x1C16F10
	0x0323066C MOV X19, X0
	0x03230670 ADRP X0, 0xEEB000
	0x03230674 LDR X0, [X0 + 0x648]
	0x03230678 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x11AD000
	006 Move W8, [X21+945]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xEF3000
	014 Move X0, [X0+848]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+945], W8
	018 Compare X19, 0
	019 JumpIfEqual {32}
	020 Move X8, 0xEF3000
	021 Move X8, [X8+848]
	022 Move X2, [X20+16]
	023 Move X0, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X1, [X8]
	027 Move X3, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call SerializationInfo.AddValue, X0, X1, X2
	031 Return 
	032 Call 0x1C17F20

Method: System.Void .ctor(System.String replacement)

Disassembly:
	0x03230374 BL 0x1C16DEC
	0x03230378 STR X30, [X31 - 0x20]!
	0x0323037C STP X20, X19, [X31 + 0x10]
	0x03230380 CBZ X1, 0x32303AC
	0x03230384 CBZ X3, 0x32303AC
	0x03230388 TBNZ X4, 0x1F, 0x3230404
	0x0323038C TBNZ X2, 0x1F, 0x3230404
	0x03230390 LDR X8, [X0]
	0x03230394 LDP X20, X19, [X31 + 0x10]
	0x03230398 MOV X5, X31
	0x0323039C LDR X7, [X8 + 0x288]
	0x032303A0 LDR X6, [X8 + 0x290]
	0x032303A4 LDR X30, [X31], #0x20
	0x032303A8 BR X7
	0x032303AC ADRP X8, 0xEF2000
	0x032303B0 ADRP X9, 0xEF2000
	0x032303B4 LDR X8, [X8 + 0x2D8]
	0x032303B8 LDR X9, [X9 + 0x308]
	0x032303BC CMP X3, 0x0
	0x032303C0 CSEL X0, X9, X8, EQ
	0x032303C4 BL 0x1C16D08
	0x032303C8 MOV X19, X0
	0x032303CC ADRP X0, 0xEC8000
	0x032303D0 LDR X0, [X0 + 0x528]
	0x032303D4 BL 0x1C16D08
	0x032303D8 BL 0x1C16F10
	0x032303DC MOV X20, X0
	0x032303E0 ADRP X0, 0xEF2000
	0x032303E4 LDR X0, [X0 + 0x2E0]
	0x032303E8 BL 0x1C16D08
	0x032303EC MOV X2, X0
	0x032303F0 MOV X0, X20
	0x032303F4 MOV X1, X19
	0x032303F8 MOV X3, X31
	0x032303FC BL 0x3315F7C
	0x03230400 B 0x3230458
	0x03230404 ADRP X8, 0xEF2000
	0x03230408 ADRP X9, 0xEF2000
	0x0323040C LDR X8, [X8 + 0x328]
	0x03230410 LDR X9, [X9 + 0x310]
	0x03230414 CMP W2, 0x0
	0x03230418 CSEL X0, X9, X8, LT
	0x0323041C BL 0x1C16D08
	0x03230420 MOV X19, X0
	0x03230424 ADRP X0, 0xECB000
	0x03230428 LDR X0, [X0 + 0x760]
	0x0323042C BL 0x1C16D08
	0x03230430 BL 0x1C16F10
	0x03230434 MOV X20, X0
	0x03230438 ADRP X0, 0xEEB000
	0x0323043C LDR X0, [X0 + 0x670]
	0x03230440 BL 0x1C16D08
	0x03230444 MOV X2, X0
	0x03230448 MOV X0, X20
	0x0323044C MOV X1, X19
	0x03230450 MOV X3, X31
	0x03230454 BL 0x3311888
	0x03230458 ADRP X0, 0xEF2000
	0x0323045C LDR X0, [X0 + 0x3B8]
	0x03230460 BL 0x1C16D08
	0x03230464 MOV X1, X0
	0x03230468 MOV X0, X20
	0x0323046C BL 0x1C16DEC
	0x03230470 STR X30, [X31 - 0x20]!
	0x03230474 STP X20, X19, [X31 + 0x10]
	0x03230478 CBZ X1, 0x32304D8
	0x0323047C TBNZ X3, 0x1F, 0x3230520
	0x03230480 TBNZ X2, 0x1F, 0x3230520
	0x03230484 LDR W8, [X1 + 0x18]
	0x03230488 SUB W9, W8, W2
	0x0323048C CMP W9, W3
	0x03230490 B.LT 0x323058C
	0x03230494 CBZ W3, 0x32304C8
	0x03230498 LDR X9, [X0]
	0x0323049C LDP X20, X19, [X31 + 0x10]
	0x032304A0 ADD X10, X1, 0x20
	0x032304A4 CMP W8, 0x0
	0x032304A8 LDR X5, [X9 + 0x2C8]
	0x032304AC LDR X4, [X9 + 0x2D0]
	0x032304B0 CSEL X8, X31, X10, EQ
	0x032304B4 ADD X1, X8, W2, SXTW
	0x032304B8 MOV W2, W3
	0x032304BC MOV X3, X31
	0x032304C0 LDR X30, [X31], #0x20
	0x032304C4 BR X5
	0x032304C8 LDP X20, X19, [X31 + 0x10]
	0x032304CC MOV W0, W31
	0x032304D0 LDR X30, [X31], #0x20
	0x032304D4 RET
	0x032304D8 ADRP X0, 0xEC8000
	0x032304DC LDR X0, [X0 + 0x528]
	0x032304E0 BL 0x1C16D08
	0x032304E4 BL 0x1C16F10
	0x032304E8 MOV X19, X0
	0x032304EC ADRP X0, 0xEF2000
	0x032304F0 LDR X0, [X0 + 0x308]
	0x032304F4 BL 0x1C16D08
	0x032304F8 MOV X20, X0
	0x032304FC ADRP X0, 0xEF2000
	0x03230500 LDR X0, [X0 + 0x2E0]
	0x03230504 BL 0x1C16D08
	0x03230508 MOV X2, X0
	0x0323050C MOV X0, X19
	0x03230510 MOV X1, X20
	0x03230514 MOV X3, X31
	0x03230518 BL 0x3315F7C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x11AD000
	008 Move W8, [X21+946]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xEC6000
	016 Move X0, [X0+368]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+946], W8
	020 Move X0, X20
	021 Move X1, X31
	022 Call EncoderFallback..ctor, X0
	023 Compare X19, 0
	024 JumpIfEqual {111}
	025 Move W8, [X19+16]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X22, 0xEC6000
	028 Move X22, [X22+368]
	029 Move W23, W31
	030 Move W21, W31
	031 Move X0, [X22]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X19
	037 Move W1, W21
	038 Move X2, X31
	039 Call Char.IsSurrogate, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {65}
	044 Move X0, [X22]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X0, X19
	050 Move W1, W21
	051 Move X2, X31
	052 Call Char.IsHighSurrogate, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {69}
	057 Move TEMP, X23
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {85}
	061 Move W8, [X19+16]
	062 Add W21, W21, 1
	063 Move W23, 1
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move TEMP, X23
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {73}
	069 Move TEMP, X23
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {85}
	073 Move W8, [X19+16]
	074 Add W21, W21, 1
	075 Move W23, W31
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move [X20+16], X19
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X30, [X31+48]
	083 Move X23, [X31+56]
	084 Return 
	085 Move X0, 0xEF3000
	086 Move X0, [X0+824]
	087 Call 0x1C17D08
	088 Move X19, X0
	089 Move X0, 0xEF3000
	090 Move X0, [X0+832]
	091 Call 0x1C17D08
	092 Move X1, X0
	093 Move X0, X19
	094 Move X2, X31
	095 Call SR.Format, X0, X1
	096 Move X19, X0
	097 Move X0, 0xECC000
	098 Move X0, [X0+1400]
	099 Call 0x1C17D08
	100 Call 0x1C17F10
	101 Move X1, X19
	102 Move X2, X31
	103 Move X20, X0
	104 Call ArgumentException..ctor, X0, X1
	105 Move X0, 0xEF3000
	106 Move X0, [X0+840]
	107 Call 0x1C17D08
	108 Move X1, X0
	109 Move X0, X20
	110 Call 0x1C17DEC
	111 Move X0, 0xEC9000
	112 Move X0, [X0+1320]
	113 Call 0x1C17D08
	114 Call 0x1C17F10
	115 Move X19, X0
	116 Move X0, 0xEF3000
	117 Move X0, [X0+832]
	118 Call 0x1C17D08
	119 Move X1, X0
	120 Move X0, X19
	121 Move X2, X31
	122 Call ArgumentNullException..ctor, X0, X1
	123 Move X0, 0xEF3000
	124 Move X0, [X0+840]
	125 Call 0x1C17D08
	126 Move X1, X0
	127 Move X0, X19
	128 Call 0x1C17DEC

Method: System.String get_DefaultString()

Disassembly:
	0x0323067C MOV X20, X0
	0x03230680 ADRP X0, 0xEEB000

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Text.EncoderFallbackBuffer CreateFallbackBuffer()

Disassembly:
	0x03230684 LDR X0, [X0 + 0x670]
	0x03230688 BL 0x1C16D08
	0x0323068C MOV X2, X0
	0x03230690 MOV X0, X19
	0x03230694 MOV X1, X20
	0x03230698 MOV X3, X31
	0x0323069C BL 0x3311888
	0x032306A0 ADRP X0, 0xEF2000
	0x032306A4 LDR X0, [X0 + 0x3C8]
	0x032306A8 BL 0x1C16D08
	0x032306AC MOV X1, X0
	0x032306B0 MOV X0, X19
	0x032306B4 BL 0x1C16DEC
	0x032306B8 STR X30, [X31 - 0x50]!
	0x032306BC STP X26, X25, [X31 + 0x10]
	0x032306C0 STP X24, X23, [X31 + 0x20]
	0x032306C4 STP X22, X21, [X31 + 0x30]
	0x032306C8 STP X20, X19, [X31 + 0x40]
	0x032306CC ADRP X25, 0x11AC000
	0x032306D0 LDRB W8, [X25 + 0x3B9]
	0x032306D4 MOV W20, W5
	0x032306D8 MOV X23, X4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x11AD000
	006 Move X21, 0xEF3000
	007 Move W8, [X20+947]
	008 Move X21, [X21+864]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEF3000
	015 Move X0, [X0+864]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+947], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call EncoderReplacementFallbackBuffer..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Int32 get_MaxCharCount()

Disassembly:
	0x03230724 SUB W9, W8, W21
	0x03230728 CMP W9, W19
	0x0323072C B.LT 0x32308C0
	0x03230730 TBNZ X20, 0x1F, 0x32307CC
	0x03230734 LDR W9, [X23 + 0x18]
	0x03230738 SUBS W25, W9, W20
	0x0323073C B.LT 0x32307CC

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+16]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Boolean Equals(System.Object value)

Disassembly:
	0x03230740 CBZ W19, 0x32307B0
	0x03230744 ADRP X9, 0xEF2000
	0x03230748 LDR X9, [X9 + 0x2D0]
	0x0323074C ADRP X26, 0xEF2000
	0x03230750 LDR X26, [X26 + 0x2C8]
	0x03230754 CMP W8, 0x0
	0x03230758 LDR X1, [X9]
	0x0323075C ADD X9, X24, 0x20
	0x03230760 MOV X0, X23
	0x03230764 CSEL X24, X31, X9, EQ
	0x03230768 BL 0x25FBC40
	0x0323076C LDR X2, [X26]
	0x03230770 BL 0x2218CFC
	0x03230774 LDR X8, [X22]
	0x03230778 ADD X1, X24, W21, SXTW
	0x0323077C ADD X3, X0, W20, 0x1, UXTW
	0x03230780 MOV X0, X22
	0x03230784 LDR X7, [X8 + 0x308]
	0x03230788 LDR X6, [X8 + 0x310]
	0x0323078C MOV W2, W19
	0x03230790 MOV W4, W25
	0x03230794 LDP X20, X19, [X31 + 0x40]
	0x03230798 LDP X22, X21, [X31 + 0x30]
	0x0323079C LDP X24, X23, [X31 + 0x20]
	0x032307A0 LDP X26, X25, [X31 + 0x10]
	0x032307A4 MOV X5, X31
	0x032307A8 LDR X30, [X31], #0x50
	0x032307AC BR X7
	0x032307B0 LDP X20, X19, [X31 + 0x40]
	0x032307B4 LDP X22, X21, [X31 + 0x30]
	0x032307B8 LDP X24, X23, [X31 + 0x20]
	0x032307BC LDP X26, X25, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x11AD000
	006 Move W8, [X21+948]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xEF3000
	014 Move X0, [X0+872]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+948], W8
	018 Compare X20, 0
	019 JumpIfEqual {26}
	020 Move X8, 0xEF3000
	021 Move X8, [X8+872]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CSEL not yet implemented."
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move W0, W31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0
	032 Compare X8, 0
	033 JumpIfEqual {43}
	034 Move X0, [X19+16]
	035 Move X1, [X8+16]
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X2, X31
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call String.op_Equality, X0, X1
	042 Return X0
	043 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x032307C0 MOV W0, W31
	0x032307C4 LDR X30, [X31], #0x50
	0x032307C8 RET
	0x032307CC ADRP X0, 0xECB000
	0x032307D0 LDR X0, [X0 + 0x760]
	0x032307D4 BL 0x1C16D08
	0x032307D8 BL 0x1C16F10
	0x032307DC MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+344]
	007 Move X1, [X8+352]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

