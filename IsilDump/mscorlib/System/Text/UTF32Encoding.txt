Type: System.Text.UTF32Encoding

Method: System.Void .ctor()

Disassembly:
	0x03236C24 B.LT 0x3236D30
	0x03236C28 CBZ W20, 0x3236C58
	0x03236C2C ADD X9, X22, 0x20
	0x03236C30 CMP W8, 0x0
	0x03236C34 CSEL X8, X31, X9, EQ
	0x03236C38 ADD X0, X8, W19, SXTW
	0x03236C3C MOV W1, W20
	0x03236C40 MOV X2, X21
	0x03236C44 LDP X20, X19, [X31 + 0x20]
	0x03236C48 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W1, 0x2EE0
	004 Move X2, X31
	005 Move X19, X0
	006 Call Encoding..ctor, X0, X1
	007 Move W8, 1
	008 Move [X19+58], W31
	009 NotImplemented "Instruction STRH not yet implemented."
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return 

Method: System.Void .ctor(System.Boolean bigEndian, System.Boolean byteOrderMark)

Disassembly:
	0x03236CB8 MOV X3, X31
	0x03236CBC BL 0x3315F7C
	0x03236CC0 B 0x3236D74
	0x03236CC4 ADRP X8, 0xEE5000
	0x03236CC8 ADRP X9, 0xEC8000
	0x03236CCC LDR X8, [X8 + 0x648]
	0x03236CD0 LDR X9, [X9 + 0x130]
	0x03236CD4 CMP W19, 0x0
	0x03236CD8 CSEL X0, X9, X8, LT
	0x03236CDC BL 0x1C16D08
	0x03236CE0 MOV X19, X0
	0x03236CE4 ADRP X0, 0xEC5000
	0x03236CE8 LDR X0, [X0 + 0x760]
	0x03236CEC BL 0x1C16D08
	0x03236CF0 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 And W21, W1, 1
	006 Move W8, 0x2EE0
	007 And W20, W2, 1
	008 NotImplemented "Instruction CINC not yet implemented."
	009 Move X2, X31
	010 Move X19, X0
	011 Call Encoding..ctor, X0, X1
	012 Move [X19+58], W21
	013 Move [X19+56], W20
	014 Move [X19+57], W31
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 Move X21, [X31+40]
	019 Return 

Method: System.Void .ctor(System.Boolean bigEndian, System.Boolean byteOrderMark, System.Boolean throwOnInvalidCharacters)

Disassembly:
	0x03236C4C MOV X3, X31
	0x03236C50 LDP X30, X23, [X31], #0x30
	0x03236C54 B 0x322DAF4
	0x03236C58 ADRP X8, 0xEBF000
	0x03236C5C LDR X8, [X8 + 0x278]
	0x03236C60 LDP X20, X19, [X31 + 0x20]
	0x03236C64 LDP X22, X21, [X31 + 0x10]
	0x03236C68 LDR X8, [X8]
	0x03236C6C LDR X8, [X8 + 0xB8]
	0x03236C70 LDR X0, [X8]
	0x03236C74 LDP X30, X23, [X31], #0x30
	0x03236C78 RET
	0x03236C7C ADRP X0, 0xEC2000
	0x03236C80 LDR X0, [X0 + 0x528]
	0x03236C84 BL 0x1C16D08
	0x03236C88 BL 0x1C16F10
	0x03236C8C MOV X19, X0
	0x03236C90 ADRP X0, 0xEEC000
	0x03236C94 LDR X0, [X0 + 0x308]
	0x03236C98 BL 0x1C16D08
	0x03236C9C MOV X20, X0
	0x03236CA0 ADRP X0, 0xEEC000
	0x03236CA4 LDR X0, [X0 + 0x2E0]
	0x03236CA8 BL 0x1C16D08
	0x03236CAC MOV X2, X0
	0x03236CB0 MOV X0, X19
	0x03236CB4 MOV X1, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 And W23, W1, 1
	008 Move W8, 0x2EE0
	009 And W22, W2, 1
	010 NotImplemented "Instruction CINC not yet implemented."
	011 Move X2, X31
	012 Move W20, W3
	013 Move X19, X0
	014 And W21, W3, 1
	015 Call Encoding..ctor, X0, X1
	016 Move [X19+58], W23
	017 Move [X19+56], W22
	018 Move [X19+57], W21
	019 Move TEMP, X20
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {34}
	023 Move X8, [X19]
	024 Move X0, X19
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 Move X2, [X8+392]
	030 Move X1, [X8+400]
	031 Move X30, [X31+48]
	032 Move X23, [X31+56]
	033 CallNoReturn X2
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Move X23, [X31+56]
	040 Return 

Method: System.Void SetDefaultFallbacks()

Disassembly:
	0x03236CF4 MOV X20, X0
	0x03236CF8 ADRP X0, 0xEE5000
	0x03236CFC LDR X0, [X0 + 0x670]
	0x03236D00 BL 0x1C16D08
	0x03236D04 MOV X2, X0
	0x03236D08 MOV X0, X20
	0x03236D0C MOV X1, X19
	0x03236D10 MOV X3, X31
	0x03236D14 BL 0x3311888
	0x03236D18 ADRP X0, 0xEEC000
	0x03236D1C LDR X0, [X0 + 0x6A8]
	0x03236D20 BL 0x1C16D08
	0x03236D24 MOV X1, X0
	0x03236D28 MOV X0, X20
	0x03236D2C BL 0x1C16DEC
	0x03236D30 ADRP X0, 0xEC5000
	0x03236D34 LDR X0, [X0 + 0x760]
	0x03236D38 BL 0x1C16D08
	0x03236D3C BL 0x1C16F10
	0x03236D40 MOV X19, X0
	0x03236D44 ADRP X0, 0xEEC000
	0x03236D48 LDR X0, [X0 + 0x308]
	0x03236D4C BL 0x1C16D08
	0x03236D50 MOV X20, X0
	0x03236D54 ADRP X0, 0xEEC000
	0x03236D58 LDR X0, [X0 + 0xE0]
	0x03236D5C BL 0x1C16D08
	0x03236D60 MOV X2, X0
	0x03236D64 MOV X0, X19
	0x03236D68 MOV X1, X20
	0x03236D6C MOV X3, X31
	0x03236D70 BL 0x3311888
	0x03236D74 ADRP X0, 0xEEC000
	0x03236D78 LDR X0, [X0 + 0x6A8]
	0x03236D7C BL 0x1C16D08
	0x03236D80 MOV X1, X0
	0x03236D84 MOV X0, X19
	0x03236D88 BL 0x1C16DEC
	0x03236D8C STR X30, [X31 - 0x50]!
	0x03236D90 STP X26, X25, [X31 + 0x10]
	0x03236D94 STP X24, X23, [X31 + 0x20]
	0x03236D98 STP X22, X21, [X31 + 0x30]
	0x03236D9C STP X20, X19, [X31 + 0x40]
	0x03236DA0 ADRP X21, 0x11A6000
	0x03236DA4 LDRB W8, [X21 + 0x3EA]
	0x03236DA8 MOV X19, X3
	0x03236DAC MOV W22, W2
	0x03236DB0 MOV X20, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x11A7000
	006 Move W8, [X20+997]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0xEED000
	013 Move X0, [X0+1608]
	014 Call 0x1C17CF4
	015 Move X0, 0xEED000
	016 Move X0, [X0+872]
	017 Call 0x1C17CF4
	018 Move X0, 0xEED000
	019 Move X0, [X0+1616]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+997], W8
	023 Move W8, [X19+57]
	024 Compare W8, 0
	025 JumpIfEqual {32}
	026 Move X0, X31
	027 Call EncoderFallback.get_ExceptionFallback
	028 Move [X19+40], X0
	029 Move X0, X31
	030 Call DecoderFallback.get_ExceptionFallback
	031 Move [X19+48], X0
	032 Move X8, 0xEED000
	033 Move X8, [X8+872]
	034 Move X0, [X8]
	035 Call 0x1C17F10
	036 Move X21, 0xEED000
	037 Move X21, [X21+1616]
	038 Move X20, X0
	039 Move X1, [X21]
	040 Call EncoderReplacementFallback..ctor, X0, X1
	041 Move [X19+40], X20
	042 Move X8, 0xEED000
	043 Move X8, [X8+1608]
	044 Move X0, [X8]
	045 Call 0x1C17F10
	046 Move X1, [X21]
	047 Move X2, X31
	048 Move X20, X0
	049 Call DecoderReplacementFallback..ctor, X0, X1
	050 Move [X19+48], X20
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return 

Method: System.Int32 GetByteCount(System.Char[] chars, System.Int32 index, System.Int32 count)

Disassembly:
	0x03236DB4 MOV X23, X0
	0x03236DB8 TBNZ X8, 0x0, 0x3236DD0
	0x03236DBC ADRP X0, 0xEBF000
	0x03236DC0 LDR X0, [X0 + 0x170]
	0x03236DC4 BL 0x1C16CF4
	0x03236DC8 MOVZ W8, 0x1
	0x03236DCC STRB W8, [X21 + 0x3EA]
	0x03236DD0 STR X31, [X31 + 0x8]
	0x03236DD4 CBZ X19, 0x3236E94
	0x03236DD8 LDRH W24, [X19 + 0x20]
	0x03236DDC MOV X0, X19
	0x03236DE0 MOV X1, X31
	0x03236DE4 BL 0x33FBF24
	0x03236DE8 CBZ X0, 0x3236FF8
	0x03236DEC LDR X8, [X0]
	0x03236DF0 MOV X21, X0
	0x03236DF4 LDP X9, X1, [X8 + 0x1B8]
	0x03236DF8 BLR X9
	0x03236DFC CMP W0, 0x1
	0x03236E00 B.LT 0x3236EB4
	0x03236E04 LDR X8, [X23]
	0x03236E08 MOV X0, X23
	0x03236E0C LDP X9, X1, [X8 + 0x1B8]
	0x03236E10 BLR X9
	0x03236E14 MOV X20, X0
	0x03236E18 MOV X0, X19
	0x03236E1C BL 0x19903C0
	0x03236E20 LDR X19, [X19 + 0x10]
	0x03236E24 MOV X0, X19
	0x03236E28 BL 0x19903C0
	0x03236E2C MOV X0, X19
	0x03236E30 MOV X1, X31
	0x03236E34 BL 0x33BE520
	0x03236E38 MOV X19, X0
	0x03236E3C ADRP X0, 0xEEC000
	0x03236E40 LDR X0, [X0 + 0x6B0]
	0x03236E44 BL 0x1C16D08
	0x03236E48 MOV X1, X20
	0x03236E4C MOV X2, X19
	0x03236E50 MOV X3, X31
	0x03236E54 BL 0x320A264
	0x03236E58 MOV X19, X0
	0x03236E5C ADRP X0, 0xEC5000
	0x03236E60 LDR X0, [X0 + 0x578]
	0x03236E64 BL 0x1C16D08
	0x03236E68 BL 0x1C16F10
	0x03236E6C MOV X1, X19
	0x03236E70 MOV X2, X31
	0x03236E74 MOV X20, X0
	0x03236E78 BL 0x3314A68
	0x03236E7C ADRP X0, 0xEEC000
	0x03236E80 LDR X0, [X0 + 0x6B8]
	0x03236E84 BL 0x1C16D08
	0x03236E88 MOV X1, X0
	0x03236E8C MOV X0, X20
	0x03236E90 BL 0x1C16DEC
	0x03236E94 LDR X0, [X23 + 0x28]
	0x03236E98 CBZ X0, 0x3236FF8
	0x03236E9C LDR X8, [X0]
	0x03236EA0 LDP X9, X1, [X8 + 0x178]
	0x03236EA4 BLR X9
	0x03236EA8 CBZ X0, 0x3236FF8
	0x03236EAC MOV X21, X0
	0x03236EB0 MOV W24, W31
	0x03236EB4 ADRP X26, 0xEBF000
	0x03236EB8 LDR X26, [X26 + 0x170]
	0x03236EBC ADD X22, X20, W22, 0x1, SXTW
	0x03236EC0 MOV X0, X21
	0x03236EC4 MOV X1, X20
	0x03236EC8 MOV X2, X22
	0x03236ECC MOV X3, X19
	0x03236ED0 MOV W4, W31
	0x03236ED4 MOV X5, X31
	0x03236ED8 BL 0x33FBF60
	0x03236EDC MOV W23, W31
	0x03236EE0 MOV X0, X21
	0x03236EE4 MOV X1, X31
	0x03236EE8 BL 0x33FBF7C
	0x03236EEC ANDS W31, W0, 0xFFFF
	0x03236EF0 B.EQ 0x3236EFC
	0x03236EF4 MOV W25, W0
	0x03236EF8 B 0x3236F08
	0x03236EFC CMP X22, X20
	0x03236F00 B.LS 0x3236F88
	0x03236F04 LDRH W25, [X20], #0x2
	0x03236F08 LDR X0, [X26]
	0x03236F0C LDR W8, [X0 + 0xE0]
	0x03236F10 CBNZ W8, 0x3236F18
	0x03236F14 BL 0x1C16DFC
	0x03236F18 ANDS W31, W24, 0xFFFF
	0x03236F1C B.EQ 0x3236F3C
	0x03236F20 MOV W0, W25
	0x03236F24 MOV X1, X31
	0x03236F28 BL 0x331C0FC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {37}
	006 Move TEMP, X3
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {54}
	010 Move TEMP, X2
	011 And TEMP, TEMP, -2147483648
	012 Compare TEMP, -2147483648
	013 JumpIfEqual {54}
	014 Move W8, [X1+24]
	015 Subtract W9, W8, W2
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Compare W3, 0
	018 JumpIfEqual {32}
	019 Move X9, [X0]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Add X10, X1, 32
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X5, [X9+552]
	025 Move X4, [X9+560]
	026 NotImplemented "Instruction CSEL not yet implemented."
	027 Add X1, X8, W2
	028 Move W2, W3
	029 Move X3, X31
	030 Move X30, [X31+32]
	031 CallNoReturn X5
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move W0, W31
	035 Move X30, [X31+32]
	036 Return X0
	037 Move X0, 0xEC3000
	038 Move X0, [X0+1320]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0xEED000
	043 Move X0, [X0+728]
	044 Call 0x1C17D08
	045 Move X20, X0
	046 Move X0, 0xEED000
	047 Move X0, [X0+736]
	048 Call 0x1C17D08
	049 Move X2, X0
	050 Move X0, X19
	051 Move X1, X20
	052 Move X3, X31
	053 Call ArgumentNullException..ctor, X0, X1, X2
	054 Move X8, 0xEE6000
	055 Move X9, 0xEC9000
	056 Move X8, [X8+1608]
	057 Move X9, [X9+304]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 Call 0x1C17D08
	061 Move X19, X0
	062 Move X0, 0xEC6000
	063 Move X0, [X0+1888]
	064 Call 0x1C17D08
	065 Call 0x1C17F10
	066 Move X20, X0
	067 Move X0, 0xEE6000
	068 Move X0, [X0+1648]
	069 Call 0x1C17D08
	070 Move X2, X0
	071 Move X0, X20
	072 Move X1, X19
	073 Move X3, X31
	074 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	075 Move X0, 0xEED000
	076 Move X0, [X0+1624]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X20
	080 Call 0x1C17DEC
	081 Move X0, 0xEC6000
	082 Move X0, [X0+1888]
	083 Call 0x1C17D08
	084 Call 0x1C17F10
	085 Move X19, X0
	086 Move X0, 0xEED000
	087 Move X0, [X0+728]
	088 Call 0x1C17D08
	089 Move X20, X0
	090 Move X0, 0xEED000
	091 Move X0, [X0+224]
	092 Call 0x1C17D08
	093 Move X2, X0
	094 Move X0, X19
	095 Move X1, X20
	096 Move X3, X31
	097 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	098 Move X0, 0xEED000
	099 Move X0, [X0+1624]
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X19
	103 Call 0x1C17DEC

Method: System.Int32 GetByteCount(System.String s)

Disassembly:
	0x03236F2C TBNZ X0, 0x0, 0x3236FCC
	0x03236F30 SUB X8, X20, 0x2
	0x03236F34 STR X8, [X31 + 0x8]
	0x03236F38 B 0x3236FA8
	0x03236F3C MOV W0, W25
	0x03236F40 MOV X1, X31
	0x03236F44 BL 0x331BFEC
	0x03236F48 MOV W24, W25
	0x03236F4C TBNZ X0, 0x0, 0x3236EE0
	0x03236F50 LDR X0, [X26]
	0x03236F54 LDR W8, [X0 + 0xE0]
	0x03236F58 CBNZ W8, 0x3236F60
	0x03236F5C BL 0x1C16DFC
	0x03236F60 MOV W0, W25
	0x03236F64 MOV X1, X31
	0x03236F68 BL 0x331C0FC
	0x03236F6C TBZ X0, 0x0, 0x3236FCC
	0x03236F70 STR X20, [X31 + 0x8]
	0x03236F74 LDR X8, [X21]
	0x03236F78 ADD X2, X31, 0x8
	0x03236F7C MOV X0, X21
	0x03236F80 MOV W1, W25
	0x03236F84 B 0x3236FB8
	0x03236F88 ANDS W31, W24, 0xFFFF
	0x03236F8C CBZ X19, 0x3236FA0
	0x03236F90 B.EQ 0x3236FD8
	0x03236F94 LDRB W8, [X19 + 0x30]
	0x03236F98 CBNZ W8, 0x3236FA4
	0x03236F9C B 0x3236FD8
	0x03236FA0 B.EQ 0x3236FD8
	0x03236FA4 STR X20, [X31 + 0x8]
	0x03236FA8 LDR X8, [X21]
	0x03236FAC ADD X2, X31, 0x8
	0x03236FB0 MOV X0, X21
	0x03236FB4 MOV W1, W24

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {21}
	006 Move X20, X0
	007 Move X0, X31
	008 Move X19, X1
	009 Call RuntimeHelpers.get_OffsetToStringData
	010 Move X8, [X20]
	011 Move W2, [X19+16]
	012 Add X1, X19, W0
	013 Move X0, X20
	014 Move X5, [X8+552]
	015 Move X4, [X8+560]
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X3, X31
	019 Move X30, [X31+32]
	020 CallNoReturn X5
	021 Move X0, 0xEC3000
	022 Move X0, [X0+1320]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X19, X0
	026 Move X0, 0xEE7000
	027 Move X0, [X0+3264]
	028 Call 0x1C17D08
	029 Move X1, X0
	030 Move X0, X19
	031 Move X2, X31
	032 Call ArgumentNullException..ctor, X0, X1
	033 Move X0, 0xEED000
	034 Move X0, [X0+1632]
	035 Call 0x1C17D08
	036 Move X1, X0
	037 Move X0, X19
	038 Call 0x1C17DEC

Method: System.Int32 GetByteCount(System.Char* chars, System.Int32 count)

Disassembly:
	0x03236FB8 LDP X9, X3, [X8 + 0x1D8]
	0x03236FBC BLR X9
	0x03236FC0 LDR X20, [X31 + 0x8]
	0x03236FC4 MOV W24, W31
	0x03236FC8 B 0x3236EE0
	0x03236FCC MOV W24, W31
	0x03236FD0 ADD W23, W23, 0x4
	0x03236FD4 B 0x3236EE0
	0x03236FD8 TBNZ X23, 0x1F, 0x3236FFC
	0x03236FDC MOV W0, W23
	0x03236FE0 LDP X20, X19, [X31 + 0x40]
	0x03236FE4 LDP X22, X21, [X31 + 0x30]
	0x03236FE8 LDP X24, X23, [X31 + 0x20]
	0x03236FEC LDP X26, X25, [X31 + 0x10]
	0x03236FF0 LDR X30, [X31], #0x50
	0x03236FF4 RET
	0x03236FF8 BL 0x1C16F20
	0x03236FFC ADRP X0, 0xEC5000
	0x03237000 LDR X0, [X0 + 0x760]
	0x03237004 BL 0x1C16D08
	0x03237008 BL 0x1C16F10
	0x0323700C MOV X19, X0
	0x03237010 ADRP X0, 0xEE4000
	0x03237014 LDR X0, [X0 + 0x648]
	0x03237018 BL 0x1C16D08
	0x0323701C MOV X20, X0
	0x03237020 ADRP X0, 0xEEB000
	0x03237024 LDR X0, [X0 + 0x420]
	0x03237028 BL 0x1C16D08
	0x0323702C MOV X2, X0
	0x03237030 MOV X0, X19
	0x03237034 MOV X1, X20
	0x03237038 MOV X3, X31
	0x0323703C BL 0x3311888
	0x03237040 ADRP X0, 0xEEB000
	0x03237044 LDR X0, [X0 + 0x6B8]
	0x03237048 BL 0x1C16D08
	0x0323704C MOV X1, X0
	0x03237050 MOV X0, X19
	0x03237054 BL 0x1C16DEC
	0x03237058 SUB X31, X31, 0x80
	0x0323705C STP X29, X30, [X31 + 0x20]
	0x03237060 STP X28, X27, [X31 + 0x30]
	0x03237064 STP X26, X25, [X31 + 0x40]
	0x03237068 STP X24, X23, [X31 + 0x50]
	0x0323706C STP X22, X21, [X31 + 0x60]
	0x03237070 STP X20, X19, [X31 + 0x70]
	0x03237074 ADRP X20, 0x11A5000
	0x03237078 LDRB W8, [X20 + 0x3EB]
	0x0323707C MOV X19, X5
	0x03237080 MOV W26, W4
	0x03237084 MOV X27, X3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {18}
	006 Move TEMP, X2
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {35}
	010 Move X8, [X0]
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X3, X31
	014 Move X5, [X8+552]
	015 Move X4, [X8+560]
	016 Move X30, [X31+32]
	017 CallNoReturn X5
	018 Move X0, 0xEC3000
	019 Move X0, [X0+1320]
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X19, X0
	023 Move X0, 0xEED000
	024 Move X0, [X0+728]
	025 Call 0x1C17D08
	026 Move X20, X0
	027 Move X0, 0xEEC000
	028 Move X0, [X0+736]
	029 Call 0x1C17D08
	030 Move X2, X0
	031 Move X0, X19
	032 Move X1, X20
	033 Move X3, X31
	034 Call ArgumentNullException..ctor, X0, X1, X2
	035 Move X0, 0xEC5000
	036 Move X0, [X0+1888]
	037 Call 0x1C17D08
	038 Call 0x1C17F10
	039 Move X19, X0
	040 Move X0, 0xEE5000
	041 Move X0, [X0+1608]
	042 Call 0x1C17D08
	043 Move X20, X0
	044 Move X0, 0xEE5000
	045 Move X0, [X0+1648]
	046 Call 0x1C17D08
	047 Move X2, X0
	048 Move X0, X19
	049 Move X1, X20
	050 Move X3, X31
	051 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	052 Move X0, 0xEEC000
	053 Move X0, [X0+1640]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X19
	057 Call 0x1C17DEC

Method: System.Int32 GetBytes(System.String s, System.Int32 charIndex, System.Int32 charCount, System.Byte[] bytes, System.Int32 byteIndex)

Disassembly:
	0x03237088 MOV W24, W2
	0x0323708C MOV X28, X1
	0x03237090 MOV X22, X0
	0x03237094 TBNZ X8, 0x0, 0x32370AC
	0x03237098 ADRP X0, 0xEBE000
	0x0323709C LDR X0, [X0 + 0x170]
	0x032370A0 BL 0x1C16CF4
	0x032370A4 MOVZ W8, 0x1
	0x032370A8 STRB W8, [X20 + 0x3EB]
	0x032370AC STR X31, [X31 + 0x18]
	0x032370B0 CBZ X19, 0x323717C
	0x032370B4 LDRH W25, [X19 + 0x20]
	0x032370B8 MOV X0, X19
	0x032370BC MOV X1, X31
	0x032370C0 BL 0x33FBF24
	0x032370C4 LDRB W8, [X19 + 0x31]
	0x032370C8 MOV X23, X0
	0x032370CC CBZ W8, 0x3237198
	0x032370D0 CBZ X23, 0x3237418
	0x032370D4 LDR X8, [X23]
	0x032370D8 MOV X0, X23
	0x032370DC LDP X9, X1, [X8 + 0x1B8]
	0x032370E0 BLR X9
	0x032370E4 CMP W0, 0x1
	0x032370E8 B.LT 0x323719C
	0x032370EC LDR X8, [X22]
	0x032370F0 MOV X0, X22
	0x032370F4 LDP X9, X1, [X8 + 0x1B8]
	0x032370F8 BLR X9
	0x032370FC MOV X20, X0
	0x03237100 MOV X0, X19
	0x03237104 BL 0x19903C0
	0x03237108 LDR X19, [X19 + 0x10]
	0x0323710C MOV X0, X19
	0x03237110 BL 0x19903C0
	0x03237114 MOV X0, X19
	0x03237118 MOV X1, X31
	0x0323711C BL 0x33BE520
	0x03237120 MOV X19, X0
	0x03237124 ADRP X0, 0xEEB000
	0x03237128 LDR X0, [X0 + 0x6B0]
	0x0323712C BL 0x1C16D08
	0x03237130 MOV X1, X20
	0x03237134 MOV X2, X19
	0x03237138 MOV X3, X31
	0x0323713C BL 0x320A264
	0x03237140 MOV X19, X0
	0x03237144 ADRP X0, 0xEC4000
	0x03237148 LDR X0, [X0 + 0x578]
	0x0323714C BL 0x1C16D08
	0x03237150 BL 0x1C16F10
	0x03237154 MOV X1, X19
	0x03237158 MOV X2, X31
	0x0323715C MOV X20, X0
	0x03237160 BL 0x3314A68
	0x03237164 ADRP X0, 0xEEB000
	0x03237168 LDR X0, [X0 + 0x6C0]
	0x0323716C BL 0x1C16D08
	0x03237170 MOV X1, X0
	0x03237174 MOV X0, X20
	0x03237178 BL 0x1C16DEC
	0x0323717C LDR X0, [X22 + 0x28]
	0x03237180 CBZ X0, 0x3237418
	0x03237184 LDR X8, [X0]
	0x03237188 LDP X9, X1, [X8 + 0x178]
	0x0323718C BLR X9
	0x03237190 MOV X23, X0
	0x03237194 MOV W25, W31
	0x03237198 CBZ X23, 0x3237418
	0x0323719C ADRP X29, 0xEBE000
	0x032371A0 LDR X29, [X29 + 0x170]
	0x032371A4 ADD X24, X28, W24, 0x1, SXTW
	0x032371A8 MOVZ W4, 0x1
	0x032371AC MOV X0, X23
	0x032371B0 MOV X1, X28
	0x032371B4 MOV X2, X24
	0x032371B8 MOV X3, X19
	0x032371BC MOV X5, X31
	0x032371C0 ADD X20, X27, W26, SXTW
	0x032371C4 BL 0x33FBF60
	0x032371C8 MOVZ W21, 0x2400
	0x032371CC MOVK W21, 0xFCA00000
	0x032371D0 STP X28, X27, [X31 + 0x8]
	0x032371D4 MOV X0, X23
	0x032371D8 MOV X1, X31
	0x032371DC BL 0x33FBF7C
	0x032371E0 ANDS W31, W0, 0xFFFF
	0x032371E4 B.EQ 0x32371F0
	0x032371E8 MOV W26, W0
	0x032371EC B 0x32371FC
	0x032371F0 CMP X24, X28
	0x032371F4 B.LS 0x32372C4
	0x032371F8 LDRH W26, [X28], #0x2
	0x032371FC LDR X0, [X29]
	0x03237200 LDR W8, [X0 + 0xE0]
	0x03237204 CBNZ W8, 0x323720C
	0x03237208 BL 0x1C16DFC
	0x0323720C MOV W0, W26
	0x03237210 ANDS W31, W25, 0xFFFF
	0x03237214 B.EQ 0x3237270
	0x03237218 MOV X1, X31
	0x0323721C BL 0x331C0FC
	0x03237220 TBZ X0, 0x0, 0x32372B8
	0x03237224 ADD X8, X27, 0x3
	0x03237228 CMP X8, X20
	0x0323722C B.CS 0x323736C
	0x03237230 AND W8, W25, 0xFFFF
	0x03237234 LDRB W11, [X22 + 0x3A]
	0x03237238 UBFM W8, W8, 0x16, 0x15
	0x0323723C ADD W8, W8, W26, UXTH
	0x03237240 ADD W8, W8, W21
	0x03237244 UBFM W9, W8, 0x8, 0x1F
	0x03237248 UBFM W10, W8, 0x10, 0x1F
	0x0323724C MOV W25, W31
	0x03237250 CBZ W11, 0x32372DC
	0x03237254 STRB W9, [X27 + 0x2]
	0x03237258 ADD X9, X27, 0x4
	0x0323725C STRB W31, [X27]
	0x03237260 STRB W10, [X27 + 0x1]
	0x03237264 STRB W8, [X27 + 0x3]
	0x03237268 MOV X27, X9
	0x0323726C B 0x32371D4
	0x03237270 MOV X1, X31
	0x03237274 BL 0x331BFEC
	0x03237278 MOV W25, W26
	0x0323727C TBNZ X0, 0x0, 0x32371D4
	0x03237280 LDR X0, [X29]
	0x03237284 LDR W8, [X0 + 0xE0]
	0x03237288 CBNZ W8, 0x3237290
	0x0323728C BL 0x1C16DFC
	0x03237290 MOV W0, W26
	0x03237294 MOV X1, X31
	0x03237298 BL 0x331C0FC
	0x0323729C TBZ X0, 0x0, 0x32372F8
	0x032372A0 STR X28, [X31 + 0x18]
	0x032372A4 LDR X8, [X23]
	0x032372A8 ADD X2, X31, 0x18
	0x032372AC MOV X0, X23
	0x032372B0 MOV W1, W26
	0x032372B4 B 0x3237344
	0x032372B8 SUB X8, X28, 0x2
	0x032372BC STR X8, [X31 + 0x18]
	0x032372C0 B 0x3237334
	0x032372C4 ANDS W31, W25, 0xFFFF
	0x032372C8 CBZ X19, 0x323732C
	0x032372CC B.EQ 0x32373CC

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X25, 0x11A6000
	012 Move W8, [X25+998]
	013 Move W19, W5
	014 Move X24, X4
	015 Move W20, W3
	016 Move W21, W2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xEEB000
	024 Move X0, [X0+2096]
	025 Call 0x1C17CF4
	026 Move X0, 0xEEC000
	027 Move X0, [X0+760]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+998], W8
	031 Compare X22, 0
	032 JumpIfEqual {96}
	033 Compare X24, 0
	034 JumpIfEqual {96}
	035 Move TEMP, X20
	036 And TEMP, TEMP, -2147483648
	037 Compare TEMP, -2147483648
	038 JumpIfEqual {117}
	039 Move TEMP, X21
	040 And TEMP, TEMP, -2147483648
	041 Compare TEMP, -2147483648
	042 JumpIfEqual {117}
	043 Move W8, [X22+16]
	044 Subtract W8, W8, W21
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move TEMP, X19
	047 And TEMP, TEMP, -2147483648
	048 Compare TEMP, -2147483648
	049 JumpIfEqual {85}
	050 Move W8, [X24+24]
	051 Subtract W25, W8, W19
	052 Move X26, 0xEEC000
	053 Move X27, 0xEEB000
	054 Move X26, [X26+760]
	055 Move X27, [X27+2096]
	056 Move X0, X31
	057 Call RuntimeHelpers.get_OffsetToStringData
	058 Move X1, [X26]
	059 Move W26, W0
	060 Move X0, X24
	061 Call 0x25FC4C0, X0
	062 Move X2, [X27]
	063 Call 0x2219CF4, X0
	064 Move X8, [X23]
	065 Add X3, X0, W19
	066 Move X0, X23
	067 Move W2, W20
	068 Move X7, [X8+648]
	069 Move X6, [X8+656]
	070 Add X8, X22, W21
	071 Add X1, X8, W26
	072 Move W4, W25
	073 Move X20, [X31+64]
	074 Move X19, [X31+72]
	075 Move X22, [X31+48]
	076 Move X21, [X31+56]
	077 Move X24, [X31+32]
	078 Move X23, [X31+40]
	079 Move X26, [X31+16]
	080 Move X25, [X31+24]
	081 Move X5, X31
	082 Move X30, [X31+80]
	083 Move X27, [X31+88]
	084 CallNoReturn X7
	085 Move X0, 0xEC5000
	086 Move X0, [X0+1888]
	087 Call 0x1C17D08
	088 Call 0x1C17F10
	089 Move X19, X0
	090 Move X0, 0xEEC000
	091 Move X0, [X0+768]
	092 Call 0x1C17D08
	093 Move X20, X0
	094 Move X0, 0xEE5000
	095 Move X0, [X0+1632]
	096 Move X8, 0xEEC000
	097 Move X9, 0xEE6000
	098 Move X8, [X8+776]
	099 Move X9, [X9+3264]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 NotImplemented "Instruction CSEL not yet implemented."
	102 Call 0x1C17D08
	103 Move X19, X0
	104 Move X0, 0xEC2000
	105 Move X0, [X0+1320]
	106 Call 0x1C17D08
	107 Call 0x1C17F10
	108 Move X20, X0
	109 Move X0, 0xEEC000
	110 Move X0, [X0+736]
	111 Call 0x1C17D08
	112 Move X2, X0
	113 Move X0, X20
	114 Move X1, X19
	115 Move X3, X31
	116 Call ArgumentNullException..ctor, X0, X1, X2
	117 Move X8, 0xEEC000
	118 Move X9, 0xEEC000
	119 Move X8, [X8+784]
	120 Move X9, [X9+792]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 NotImplemented "Instruction CSEL not yet implemented."
	123 Call 0x1C17D08
	124 Move X19, X0
	125 Move X0, 0xEC5000
	126 Move X0, [X0+1888]
	127 Call 0x1C17D08
	128 Call 0x1C17F10
	129 Move X20, X0
	130 Move X0, 0xEE5000
	131 Move X0, [X0+1648]
	132 Call 0x1C17D08
	133 Move X2, X0
	134 Move X0, X20
	135 Move X1, X19
	136 Move X3, X31
	137 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	138 Move X0, 0xEEC000
	139 Move X0, [X0+1648]
	140 Call 0x1C17D08
	141 Move X1, X0
	142 Move X0, X20
	143 Call 0x1C17DEC
	144 Move X0, 0xEC5000
	145 Move X0, [X0+1888]
	146 Call 0x1C17D08
	147 Call 0x1C17F10
	148 Move X19, X0
	149 Move X0, 0xEE6000
	150 Move X0, [X0+3264]
	151 Call 0x1C17D08
	152 Move X20, X0
	153 Move X0, 0xEEC000
	154 Move X0, [X0+264]
	155 Call 0x1C17D08
	156 Move X2, X0
	157 Move X0, X19
	158 Move X1, X20
	159 Move X3, X31
	160 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	161 Move X0, 0xEEC000
	162 Move X0, [X0+1648]
	163 Call 0x1C17D08
	164 Move X1, X0
	165 Move X0, X19
	166 Call 0x1C17DEC

Method: System.Int32 GetBytes(System.Char[] chars, System.Int32 charIndex, System.Int32 charCount, System.Byte[] bytes, System.Int32 byteIndex)

Disassembly:
	0x032372D0 LDRB W8, [X19 + 0x30]
	0x032372D4 CBNZ W8, 0x3237330
	0x032372D8 B 0x32373CC
	0x032372DC STRB W8, [X27]
	0x032372E0 ADD X8, X27, 0x4
	0x032372E4 STRB W9, [X27 + 0x1]
	0x032372E8 STRB W10, [X27 + 0x2]
	0x032372EC STRB W31, [X27 + 0x3]
	0x032372F0 MOV X27, X8
	0x032372F4 B 0x32371D4
	0x032372F8 ADD X8, X27, 0x3
	0x032372FC CMP X8, X20
	0x03237300 B.CS 0x3237390
	0x03237304 LDRB W9, [X22 + 0x3A]
	0x03237308 UBFM W8, W26, 0x8, 0x1F
	0x0323730C MOV W25, W31
	0x03237310 CBZ W9, 0x3237358
	0x03237314 STRB W8, [X27 + 0x2]
	0x03237318 ADD X8, X27, 0x4
	0x0323731C STRH W31, [X27]
	0x03237320 STRB W26, [X27 + 0x3]
	0x03237324 MOV X27, X8
	0x03237328 B 0x32371D4
	0x0323732C B.EQ 0x32373E8
	0x03237330 STR X28, [X31 + 0x18]
	0x03237334 LDR X8, [X23]
	0x03237338 ADD X2, X31, 0x18
	0x0323733C MOV X0, X23
	0x03237340 MOV W1, W25
	0x03237344 LDP X9, X3, [X8 + 0x1D8]
	0x03237348 BLR X9
	0x0323734C LDR X28, [X31 + 0x18]
	0x03237350 MOV W25, W31
	0x03237354 B 0x32371D4
	0x03237358 STRB W26, [X27]
	0x0323735C STRB W8, [X27 + 0x1]
	0x03237360 STRH W31, [X27 + 0x2]
	0x03237364 ADD X27, X27, 0x4
	0x03237368 B 0x32371D4
	0x0323736C LDRB W8, [X23 + 0x2A]
	0x03237370 CBZ W8, 0x3237388
	0x03237374 LDR X8, [X23]
	0x03237378 MOV X0, X23
	0x0323737C LDP X9, X1, [X8 + 0x1A8]
	0x03237380 BLR X9
	0x03237384 B 0x3237398
	0x03237388 SUB X28, X28, 0x4
	0x0323738C B 0x32373A8
	0x03237390 LDRB W8, [X23 + 0x2A]
	0x03237394 CBZ W8, 0x3237410
	0x03237398 LDR X8, [X23]
	0x0323739C MOV X0, X23
	0x032373A0 LDP X9, X1, [X8 + 0x1A8]
	0x032373A4 BLR X9
	0x032373A8 LDR X8, [X31 + 0x10]
	0x032373AC MOV X0, X22
	0x032373B0 MOV X1, X19
	0x032373B4 MOV X3, X31
	0x032373B8 CMP X27, X8
	0x032373BC CSET W2, EQ
	0x032373C0 BL 0x3245184
	0x032373C4 CBZ X19, 0x32373E8
	0x032373C8 MOV W25, W31
	0x032373CC LDR X8, [X31 + 0x8]
	0x032373D0 STRH W25, [X19 + 0x20]
	0x032373D4 SUB X8, X28, X8
	0x032373D8 CMP X8, 0x0
	0x032373DC CINC X8, X8, LT
	0x032373E0 UBFM X8, X8, 0x1, 0x3F
	0x032373E4 STR W8, [X19 + 0x34]
	0x032373E8 LDR X8, [X31 + 0x10]
	0x032373EC LDP X20, X19, [X31 + 0x70]
	0x032373F0 LDP X22, X21, [X31 + 0x60]
	0x032373F4 LDP X24, X23, [X31 + 0x50]
	0x032373F8 SUB W0, W27, W8
	0x032373FC LDP X26, X25, [X31 + 0x40]
	0x03237400 LDP X28, X27, [X31 + 0x30]
	0x03237404 LDP X29, X30, [X31 + 0x20]
	0x03237408 ADD X31, X31, 0x80
	0x0323740C RET
	0x03237410 SUB X28, X28, 0x2
	0x03237414 B 0x32373A8
	0x03237418 BL 0x1C16F20
	0x0323741C AND W8, W1, 0xFFFF
	0x03237420 UBFM W8, W8, 0x16, 0x15
	0x03237424 MOVZ W9, 0x2400
	0x03237428 ADD W8, W8, W2, UXTH
	0x0323742C MOVK W9, 0xFCA00000
	0x03237430 ADD W0, W8, W9
	0x03237434 RET
	0x03237438 STP X29, X30, [X31 - 0x60]!
	0x0323743C STP X28, X27, [X31 + 0x10]
	0x03237440 STP X26, X25, [X31 + 0x20]
	0x03237444 STP X24, X23, [X31 + 0x30]
	0x03237448 STP X22, X21, [X31 + 0x40]
	0x0323744C STP X20, X19, [X31 + 0x50]
	0x03237450 ADRP X21, 0x11A5000
	0x03237454 LDRB W8, [X21 + 0x3EC]
	0x03237458 MOV X23, X3
	0x0323745C MOV W20, W2
	0x03237460 MOV X19, X1
	0x03237464 MOV X22, X0
	0x03237468 TBNZ X8, 0x0, 0x323748C
	0x0323746C ADRP X0, 0xEBC000
	0x03237470 LDR X0, [X0 + 0x618]
	0x03237474 BL 0x1C16CF4
	0x03237478 ADRP X0, 0xEEB000
	0x0323747C LDR X0, [X0 + 0x6C8]
	0x03237480 BL 0x1C16CF4
	0x03237484 MOVZ W8, 0x1
	0x03237488 STRB W8, [X21 + 0x3EC]
	0x0323748C CBZ X23, 0x32374C8
	0x03237490 ADRP X8, 0xEEB000
	0x03237494 LDR X8, [X8 + 0x6C8]
	0x03237498 LDR X1, [X8]
	0x0323749C LDR X8, [X23]
	0x032374A0 CMP X8, X1
	0x032374A4 B.NE 0x3237768
	0x032374A8 LDP W25, W24, [X23 + 0x30]
	0x032374AC MOV X0, X23
	0x032374B0 MOV X1, X31
	0x032374B4 ADD X26, X19, W20, SXTW
	0x032374B8 BL 0x33FC534
	0x032374BC MOV X20, X0
	0x032374C0 CBNZ X20, 0x32374F0
	0x032374C4 B 0x3237708
	0x032374C8 LDR X0, [X22 + 0x30]
	0x032374CC CBZ X0, 0x3237708
	0x032374D0 LDR X8, [X0]
	0x032374D4 ADD X26, X19, W20, SXTW
	0x032374D8 LDP X9, X1, [X8 + 0x178]
	0x032374DC BLR X9
	0x032374E0 MOV X20, X0
	0x032374E4 MOV W25, W31
	0x032374E8 MOV W24, W31
	0x032374EC CBZ X20, 0x3237708
	0x032374F0 ADRP X27, 0xEBC000
	0x032374F4 LDR X27, [X27 + 0x618]
	0x032374F8 MOV X0, X20
	0x032374FC MOV X1, X19
	0x03237500 MOV X2, X31
	0x03237504 MOV X3, X31
	0x03237508 BL 0x33FC570
	0x0323750C MOV W21, W31
	0x03237510 MOVZ W9, 0xD800
	0x03237514 TBNZ X21, 0x1F, 0x323762C
	0x03237518 CMP X26, X19
	0x0323751C B.LS 0x323762C
	0x03237520 LDRB W28, [X22 + 0x3A]
	0x03237524 CBZ W28, 0x3237538
	0x03237528 LDRB W8, [X19]
	0x0323752C BFM W8, W25, 0x18, 0x17
	0x03237530 MOV W25, W8

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x11A6000
	011 Move W8, [X25+999]
	012 Move W20, W5
	013 Move X23, X4
	014 Move W19, W3
	015 Move W21, W2
	016 Move X24, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xEEB000
	023 Move X0, [X0+2096]
	024 Call 0x1C17CF4
	025 Move X0, 0xEEC000
	026 Move X0, [X0+760]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+999], W8
	030 Compare X24, 0
	031 JumpIfEqual {106}
	032 Compare X23, 0
	033 JumpIfEqual {106}
	034 Move TEMP, X19
	035 And TEMP, TEMP, -2147483648
	036 Compare TEMP, -2147483648
	037 JumpIfEqual {127}
	038 Move TEMP, X21
	039 And TEMP, TEMP, -2147483648
	040 Compare TEMP, -2147483648
	041 JumpIfEqual {127}
	042 Move W8, [X24+24]
	043 Subtract W9, W8, W21
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move TEMP, X20
	046 And TEMP, TEMP, -2147483648
	047 Compare TEMP, -2147483648
	048 JumpIfEqual {95}
	049 Move W9, [X23+24]
	050 Subtract W25, W9, W20
	051 Compare W19, 0
	052 JumpIfEqual {84}
	053 Move X9, 0xEEC000
	054 Move X9, [X9+760]
	055 Move X26, 0xEEB000
	056 Move X26, [X26+2096]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X1, [X9]
	059 Add X9, X24, 32
	060 Move X0, X23
	061 NotImplemented "Instruction CSEL not yet implemented."
	062 Call 0x25FC4C0, X0
	063 Move X2, [X26]
	064 Call 0x2219CF4, X0
	065 Move X8, [X22]
	066 Add X1, X24, W21
	067 Add X3, X0, W20
	068 Move X0, X22
	069 Move X7, [X8+648]
	070 Move X6, [X8+656]
	071 Move W2, W19
	072 Move W4, W25
	073 Move X20, [X31+64]
	074 Move X19, [X31+72]
	075 Move X22, [X31+48]
	076 Move X21, [X31+56]
	077 Move X24, [X31+32]
	078 Move X23, [X31+40]
	079 Move X26, [X31+16]
	080 Move X25, [X31+24]
	081 Move X5, X31
	082 Move X30, [X31+80]
	083 CallNoReturn X7
	084 Move X20, [X31+64]
	085 Move X19, [X31+72]
	086 Move X22, [X31+48]
	087 Move X21, [X31+56]
	088 Move X24, [X31+32]
	089 Move X23, [X31+40]
	090 Move X26, [X31+16]
	091 Move X25, [X31+24]
	092 Move W0, W31
	093 Move X30, [X31+80]
	094 Return X0
	095 Move X0, 0xEC5000
	096 Move X0, [X0+1888]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X19, X0
	100 Move X0, 0xEEC000
	101 Move X0, [X0+768]
	102 Call 0x1C17D08
	103 Move X20, X0
	104 Move X0, 0xEE5000
	105 Move X0, [X0+1632]
	106 Move X8, 0xEEC000
	107 Move X9, 0xEEC000
	108 Move X8, [X8+776]
	109 Move X9, [X9+728]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction CSEL not yet implemented."
	112 Call 0x1C17D08
	113 Move X19, X0
	114 Move X0, 0xEC2000
	115 Move X0, [X0+1320]
	116 Call 0x1C17D08
	117 Call 0x1C17F10
	118 Move X20, X0
	119 Move X0, 0xEEC000
	120 Move X0, [X0+736]
	121 Call 0x1C17D08
	122 Move X2, X0
	123 Move X0, X20
	124 Move X1, X19
	125 Move X3, X31
	126 Call ArgumentNullException..ctor, X0, X1, X2
	127 Move X8, 0xEEC000
	128 Move X9, 0xEEC000
	129 Move X8, [X8+784]
	130 Move X9, [X9+792]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 NotImplemented "Instruction CSEL not yet implemented."
	133 Call 0x1C17D08
	134 Move X19, X0
	135 Move X0, 0xEC5000
	136 Move X0, [X0+1888]
	137 Call 0x1C17D08
	138 Call 0x1C17F10
	139 Move X20, X0
	140 Move X0, 0xEE5000
	141 Move X0, [X0+1648]
	142 Call 0x1C17D08
	143 Move X2, X0
	144 Move X0, X20
	145 Move X1, X19
	146 Move X3, X31
	147 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	148 Move X0, 0xEEC000
	149 Move X0, [X0+1656]
	150 Call 0x1C17D08
	151 Move X1, X0
	152 Move X0, X20
	153 Call 0x1C17DEC
	154 Move X0, 0xEC5000
	155 Move X0, [X0+1888]
	156 Call 0x1C17D08
	157 Call 0x1C17F10
	158 Move X19, X0
	159 Move X0, 0xEEC000
	160 Move X0, [X0+728]
	161 Call 0x1C17D08
	162 Move X20, X0
	163 Move X0, 0xEEC000
	164 Move X0, [X0+224]
	165 Call 0x1C17D08
	166 Move X2, X0
	167 Move X0, X19
	168 Move X1, X20
	169 Move X3, X31
	170 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	171 Move X0, 0xEEC000
	172 Move X0, [X0+1656]
	173 Call 0x1C17D08
	174 Move X1, X0
	175 Move X0, X19
	176 Call 0x1C17DEC

Method: System.Int32 GetBytes(System.Char* chars, System.Int32 charCount, System.Byte* bytes, System.Int32 byteCount)

Disassembly:
	0x03237534 B 0x3237540
	0x03237538 LDRB W8, [X19]
	0x0323753C EXTR W25, W8, W25, 0x8
	0x03237540 ADD W24, W24, 0x1
	0x03237544 CMP W24, 0x4
	0x03237548 ADD X19, X19, 0x1
	0x0323754C B.LT 0x3237514
	0x03237550 UBFM W29, W25, 0x10, 0x1F
	0x03237554 CMP W29, 0x10
	0x03237558 B.HI 0x3237580
	0x0323755C AND W8, W25, 0xFFFFF800
	0x03237560 CMP W8, W9
	0x03237564 B.EQ 0x3237580
	0x03237568 CMP W29, 0x0
	0x0323756C CINC W8, W21, NE
	0x03237570 MOV W25, W31
	0x03237574 MOV W24, W31
	0x03237578 ADD W21, W8, 0x1
	0x0323757C B 0x3237514
	0x03237580 LDR X0, [X27]
	0x03237584 MOVZ W1, 0x4
	0x03237588 BL 0x1C16D6C
	0x0323758C CBZ X0, 0x3237708
	0x03237590 LDR W8, [X0 + 0x18]
	0x03237594 MOV X1, X0
	0x03237598 CBZ W28, 0x32375D0
	0x0323759C CBZ W8, 0x3237704
	0x032375A0 UBFM W9, W25, 0x18, 0x1F
	0x032375A4 CMP W8, 0x1
	0x032375A8 STRB W9, [X1 + 0x20]
	0x032375AC B.EQ 0x3237704
	0x032375B0 CMP W8, 0x2
	0x032375B4 STRB W29, [X1 + 0x21]
	0x032375B8 B.LS 0x3237704
	0x032375BC UBFM W9, W25, 0x8, 0x1F
	0x032375C0 CMP W8, 0x3
	0x032375C4 STRB W9, [X1 + 0x22]
	0x032375C8 B.NE 0x3237600
	0x032375CC B 0x3237704
	0x032375D0 CBZ W8, 0x3237704
	0x032375D4 CMP W8, 0x1
	0x032375D8 STRB W25, [X1 + 0x20]
	0x032375DC B.EQ 0x3237704
	0x032375E0 UBFM W9, W25, 0x8, 0x1F
	0x032375E4 CMP W8, 0x2
	0x032375E8 STRB W9, [X1 + 0x21]
	0x032375EC B.LS 0x3237704
	0x032375F0 CMP W8, 0x3
	0x032375F4 STRB W29, [X1 + 0x22]
	0x032375F8 B.EQ 0x3237704
	0x032375FC UBFM W25, W25, 0x18, 0x1F
	0x03237600 STRB W25, [X1 + 0x23]
	0x03237604 LDR X8, [X20]
	0x03237608 MOV X0, X20
	0x0323760C MOV X2, X19
	0x03237610 LDP X9, X3, [X8 + 0x1B8]
	0x03237614 BLR X9
	0x03237618 MOV W25, W31
	0x0323761C MOV W24, W31
	0x03237620 ADD W21, W0, W21
	0x03237624 MOVZ W9, 0xD800
	0x03237628 B 0x3237514

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {24}
	006 Compare X3, 0
	007 JumpIfEqual {24}
	008 Move TEMP, X4
	009 And TEMP, TEMP, -2147483648
	010 Compare TEMP, -2147483648
	011 JumpIfEqual {45}
	012 Move TEMP, X2
	013 And TEMP, TEMP, -2147483648
	014 Compare TEMP, -2147483648
	015 JumpIfEqual {45}
	016 Move X8, [X0]
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X5, X31
	020 Move X7, [X8+648]
	021 Move X6, [X8+656]
	022 Move X30, [X31+32]
	023 CallNoReturn X7
	024 Move X8, 0xEEC000
	025 Move X9, 0xEEC000
	026 Move X8, [X8+728]
	027 Move X9, [X9+776]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSEL not yet implemented."
	030 Call 0x1C17D08
	031 Move X19, X0
	032 Move X0, 0xEC2000
	033 Move X0, [X0+1320]
	034 Call 0x1C17D08
	035 Call 0x1C17F10
	036 Move X20, X0
	037 Move X0, 0xEEC000
	038 Move X0, [X0+736]
	039 Call 0x1C17D08
	040 Move X2, X0
	041 Move X0, X20
	042 Move X1, X19
	043 Move X3, X31
	044 Call ArgumentNullException..ctor, X0, X1, X2
	045 Move X8, 0xEEC000
	046 Move X9, 0xEEC000
	047 Move X8, [X8+808]
	048 Move X9, [X9+784]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 Call 0x1C17D08
	052 Move X19, X0
	053 Move X0, 0xEC5000
	054 Move X0, [X0+1888]
	055 Call 0x1C17D08
	056 Call 0x1C17F10
	057 Move X20, X0
	058 Move X0, 0xEE5000
	059 Move X0, [X0+1648]
	060 Call 0x1C17D08
	061 Move X2, X0
	062 Move X0, X20
	063 Move X1, X19
	064 Move X3, X31
	065 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	066 Move X0, 0xEEC000
	067 Move X0, [X0+1664]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X20
	071 Call 0x1C17DEC

Method: System.Int32 GetCharCount(System.Byte[] bytes, System.Int32 index, System.Int32 count)

Disassembly:
	0x0323762C SUBS W26, W24, 0x1
	0x03237630 B.LT 0x32376E0
	0x03237634 CBZ X23, 0x3237640
	0x03237638 LDRB W8, [X23 + 0x28]
	0x0323763C CBZ W8, 0x32376E0
	0x03237640 LDR X0, [X27]
	0x03237644 MOV W1, W24
	0x03237648 BL 0x1C16D6C
	0x0323764C LDRB W8, [X22 + 0x3A]
	0x03237650 MOV X1, X0
	0x03237654 CBZ W8, 0x3237690
	0x03237658 CBZ X1, 0x3237708
	0x0323765C LDR W8, [X1 + 0x18]
	0x03237660 MOV W9, W24
	0x03237664 ADD X9, X9, 0x1
	0x03237668 CMP W26, W8
	0x0323766C B.CS 0x3237704
	0x03237670 ADD X10, X1, W26, UXTW
	0x03237674 SUB X9, X9, 0x1
	0x03237678 STRB W25, [X10 + 0x20]
	0x0323767C UBFM W25, W25, 0x8, 0x1F
	0x03237680 CMP X9, 0x1
	0x03237684 SUB W26, W26, 0x1
	0x03237688 B.GT 0x3237668
	0x0323768C B 0x32376C8
	0x03237690 CBZ X1, 0x3237708
	0x03237694 LDR W8, [X1 + 0x18]
	0x03237698 MOV W9, W24
	0x0323769C ADD X9, X9, 0x1
	0x032376A0 CMP W26, W8
	0x032376A4 B.CS 0x3237704
	0x032376A8 SUB X9, X9, 0x1
	0x032376AC UBFM W10, W25, 0x18, 0x1F
	0x032376B0 ADD X11, X1, W26, UXTW
	0x032376B4 UBFM W25, W25, 0x18, 0x17
	0x032376B8 CMP X9, 0x1
	0x032376BC SUB W26, W26, 0x1
	0x032376C0 STRB W10, [X11 + 0x20]
	0x032376C4 B.GT 0x32376A0
	0x032376C8 LDR X8, [X20]
	0x032376CC MOV X0, X20
	0x032376D0 MOV X2, X19
	0x032376D4 LDP X9, X3, [X8 + 0x1B8]
	0x032376D8 BLR X9
	0x032376DC ADD W21, W0, W21
	0x032376E0 TBNZ X21, 0x1F, 0x323770C
	0x032376E4 MOV W0, W21
	0x032376E8 LDP X20, X19, [X31 + 0x50]
	0x032376EC LDP X22, X21, [X31 + 0x40]
	0x032376F0 LDP X24, X23, [X31 + 0x30]
	0x032376F4 LDP X26, X25, [X31 + 0x20]
	0x032376F8 LDP X28, X27, [X31 + 0x10]
	0x032376FC LDP X29, X30, [X31], #0x60
	0x03237700 RET
	0x03237704 BL 0x1C16F28
	0x03237708 BL 0x1C16F20
	0x0323770C ADRP X0, 0xEC4000
	0x03237710 LDR X0, [X0 + 0x760]
	0x03237714 BL 0x1C16D08
	0x03237718 BL 0x1C16F10
	0x0323771C MOV X19, X0
	0x03237720 ADRP X0, 0xEE4000
	0x03237724 LDR X0, [X0 + 0x648]
	0x03237728 BL 0x1C16D08
	0x0323772C MOV X20, X0
	0x03237730 ADRP X0, 0xEEB000
	0x03237734 LDR X0, [X0 + 0x420]
	0x03237738 BL 0x1C16D08
	0x0323773C MOV X2, X0
	0x03237740 MOV X0, X19
	0x03237744 MOV X1, X20
	0x03237748 MOV X3, X31
	0x0323774C BL 0x3311888
	0x03237750 ADRP X0, 0xEEB000
	0x03237754 LDR X0, [X0 + 0x6D0]
	0x03237758 BL 0x1C16D08
	0x0323775C MOV X1, X0
	0x03237760 MOV X0, X19
	0x03237764 BL 0x1C16DEC
	0x03237768 MOV X0, X23
	0x0323776C BL 0x1C171E0
	0x03237770 SUB X31, X31, 0x80
	0x03237774 STP X29, X30, [X31 + 0x20]
	0x03237778 STP X28, X27, [X31 + 0x30]
	0x0323777C STP X26, X25, [X31 + 0x40]
	0x03237780 STP X24, X23, [X31 + 0x50]
	0x03237784 STP X22, X21, [X31 + 0x60]
	0x03237788 STP X20, X19, [X31 + 0x70]
	0x0323778C ADRP X20, 0x11A5000
	0x03237790 LDRB W8, [X20 + 0x3ED]
	0x03237794 MOV X19, X5
	0x03237798 MOV W26, W4
	0x0323779C MOV X28, X3
	0x032377A0 MOV W23, W2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {37}
	006 Move TEMP, X3
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {54}
	010 Move TEMP, X2
	011 And TEMP, TEMP, -2147483648
	012 Compare TEMP, -2147483648
	013 JumpIfEqual {54}
	014 Move W8, [X1+24]
	015 Subtract W9, W8, W2
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Compare W3, 0
	018 JumpIfEqual {32}
	019 Move X9, [X0]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Add X10, X1, 32
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X5, [X9+712]
	025 Move X4, [X9+720]
	026 NotImplemented "Instruction CSEL not yet implemented."
	027 Add X1, X8, W2
	028 Move W2, W3
	029 Move X3, X31
	030 Move X30, [X31+32]
	031 CallNoReturn X5
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move W0, W31
	035 Move X30, [X31+32]
	036 Return X0
	037 Move X0, 0xEC2000
	038 Move X0, [X0+1320]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0xEEC000
	043 Move X0, [X0+776]
	044 Call 0x1C17D08
	045 Move X20, X0
	046 Move X0, 0xEEC000
	047 Move X0, [X0+736]
	048 Call 0x1C17D08
	049 Move X2, X0
	050 Move X0, X19
	051 Move X1, X20
	052 Move X3, X31
	053 Call ArgumentNullException..ctor, X0, X1, X2
	054 Move X8, 0xEE5000
	055 Move X9, 0xEC8000
	056 Move X8, [X8+1608]
	057 Move X9, [X9+304]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 Call 0x1C17D08
	061 Move X19, X0
	062 Move X0, 0xEC5000
	063 Move X0, [X0+1888]
	064 Call 0x1C17D08
	065 Call 0x1C17F10
	066 Move X20, X0
	067 Move X0, 0xEE5000
	068 Move X0, [X0+1648]
	069 Call 0x1C17D08
	070 Move X2, X0
	071 Move X0, X20
	072 Move X1, X19
	073 Move X3, X31
	074 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	075 Move X0, 0xEEC000
	076 Move X0, [X0+1672]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X20
	080 Call 0x1C17DEC
	081 Move X0, 0xEC5000
	082 Move X0, [X0+1888]
	083 Call 0x1C17D08
	084 Call 0x1C17F10
	085 Move X19, X0
	086 Move X0, 0xEEC000
	087 Move X0, [X0+776]
	088 Call 0x1C17D08
	089 Move X20, X0
	090 Move X0, 0xEEC000
	091 Move X0, [X0+224]
	092 Call 0x1C17D08
	093 Move X2, X0
	094 Move X0, X19
	095 Move X1, X20
	096 Move X3, X31
	097 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	098 Move X0, 0xEEC000
	099 Move X0, [X0+1672]
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X19
	103 Call 0x1C17DEC

Method: System.Int32 GetCharCount(System.Byte* bytes, System.Int32 count)

Disassembly:
	0x032377A4 MOV X27, X1
	0x032377A8 MOV X22, X0
	0x032377AC TBNZ X8, 0x0, 0x32377D0
	0x032377B0 ADRP X0, 0xEBC000
	0x032377B4 LDR X0, [X0 + 0x618]
	0x032377B8 BL 0x1C16CF4
	0x032377BC ADRP X0, 0xEEB000
	0x032377C0 LDR X0, [X0 + 0x6C8]
	0x032377C4 BL 0x1C16CF4
	0x032377C8 MOVZ W8, 0x1
	0x032377CC STRB W8, [X20 + 0x3ED]
	0x032377D0 STR X31, [X31 + 0x18]
	0x032377D4 CBZ X19, 0x32377F0
	0x032377D8 ADRP X8, 0xEEB000
	0x032377DC LDR X8, [X8 + 0x6C8]
	0x032377E0 LDR X1, [X8]
	0x032377E4 LDR X8, [X19]
	0x032377E8 CMP X8, X1
	0x032377EC B.NE 0x3237B5C
	0x032377F0 CBZ X19, 0x3237810
	0x032377F4 LDP W29, W25, [X19 + 0x30]
	0x032377F8 MOV X0, X19
	0x032377FC MOV X1, X31
	0x03237800 BL 0x33FC534
	0x03237804 MOV X24, X0
	0x03237808 CBNZ X24, 0x3237834
	0x0323780C B 0x3237B58
	0x03237810 LDR X0, [X22 + 0x30]
	0x03237814 CBZ X0, 0x3237B58
	0x03237818 LDR X8, [X0]
	0x0323781C LDP X9, X1, [X8 + 0x178]
	0x03237820 BLR X9
	0x03237824 MOV X24, X0
	0x03237828 MOV W29, W31
	0x0323782C MOV W25, W31
	0x03237830 CBZ X24, 0x3237B58
	0x03237834 ADD X26, X28, W26, 0x1, SXTW
	0x03237838 MOV X0, X24
	0x0323783C MOV X1, X27
	0x03237840 MOV X2, X26
	0x03237844 MOV X3, X31
	0x03237848 ADD X20, X27, W23, SXTW
	0x0323784C BL 0x33FC570
	0x03237850 SUB X10, X26, 0x2
	0x03237854 MOVZ W11, 0xD800
	0x03237858 MOVZ W12, 0x3FF0000
	0x0323785C MOVN W13, 0x27FF
	0x03237860 STP X27, X28, [X31 + 0x8]
	0x03237864 MOV X23, X27
	0x03237868 CMP X20, X27
	0x0323786C B.LS 0x32379EC
	0x03237870 LDRB W21, [X22 + 0x3A]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {18}
	006 Move TEMP, X2
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {35}
	010 Move X8, [X0]
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X3, X31
	014 Move X5, [X8+712]
	015 Move X4, [X8+720]
	016 Move X30, [X31+32]
	017 CallNoReturn X5
	018 Move X0, 0xEC2000
	019 Move X0, [X0+1320]
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X19, X0
	023 Move X0, 0xEEC000
	024 Move X0, [X0+776]
	025 Call 0x1C17D08
	026 Move X20, X0
	027 Move X0, 0xEEC000
	028 Move X0, [X0+736]
	029 Call 0x1C17D08
	030 Move X2, X0
	031 Move X0, X19
	032 Move X1, X20
	033 Move X3, X31
	034 Call ArgumentNullException..ctor, X0, X1, X2
	035 Move X0, 0xEC5000
	036 Move X0, [X0+1888]
	037 Call 0x1C17D08
	038 Call 0x1C17F10
	039 Move X19, X0
	040 Move X0, 0xEE5000
	041 Move X0, [X0+1608]
	042 Call 0x1C17D08
	043 Move X20, X0
	044 Move X0, 0xEE5000
	045 Move X0, [X0+1648]
	046 Call 0x1C17D08
	047 Move X2, X0
	048 Move X0, X19
	049 Move X1, X20
	050 Move X3, X31
	051 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	052 Move X0, 0xEEC000
	053 Move X0, [X0+1680]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X19
	057 Call 0x1C17DEC

Method: System.Int32 GetChars(System.Byte[] bytes, System.Int32 byteIndex, System.Int32 byteCount, System.Char[] chars, System.Int32 charIndex)

Disassembly:
	0x03237874 CBZ W21, 0x3237888
	0x03237878 LDRB W8, [X23]
	0x0323787C BFM W8, W29, 0x18, 0x17
	0x03237880 MOV W29, W8
	0x03237884 B 0x3237890
	0x03237888 LDRB W8, [X23]
	0x0323788C EXTR W29, W8, W29, 0x8
	0x03237890 ADD W25, W25, 0x1
	0x03237894 CMP W25, 0x4
	0x03237898 ADD X27, X23, 0x1
	0x0323789C B.LT 0x3237864
	0x032378A0 UBFM W25, W29, 0x10, 0x1F
	0x032378A4 CMP W25, 0x10
	0x032378A8 B.HI 0x32378E4
	0x032378AC AND W8, W29, 0xFFFFF800
	0x032378B0 CMP W8, W11
	0x032378B4 B.EQ 0x32378E4
	0x032378B8 CMP W29, 0x10000
	0x032378BC B.CC 0x3237944
	0x032378C0 CMP X10, X28
	0x032378C4 B.LS 0x3237B2C
	0x032378C8 ADD W8, W29, W12
	0x032378CC MOVZ W9, 0xDC00
	0x032378D0 ADD W8, W13, W8, 0xA, LSR
	0x032378D4 BFM W9, W29, 0x0, 0x9
	0x032378D8 STRH W8, [X28], #0x2
	0x032378DC MOV W29, W9
	0x032378E0 B 0x323794C
	0x032378E4 STR X26, [X31]
	0x032378E8 ADRP X8, 0xEBC000
	0x032378EC LDR X8, [X8 + 0x618]
	0x032378F0 MOVZ W1, 0x4
	0x032378F4 MOV X26, X10
	0x032378F8 LDR X0, [X8]
	0x032378FC BL 0x1C16D6C
	0x03237900 CBZ X0, 0x3237B58
	0x03237904 LDR W8, [X0 + 0x18]
	0x03237908 MOV X1, X0
	0x0323790C CBZ W21, 0x3237964
	0x03237910 CBZ W8, 0x3237B54
	0x03237914 UBFM W9, W29, 0x18, 0x1F
	0x03237918 CMP W8, 0x1
	0x0323791C STRB W9, [X1 + 0x20]
	0x03237920 B.EQ 0x3237B54
	0x03237924 CMP W8, 0x2
	0x03237928 STRB W25, [X1 + 0x21]
	0x0323792C B.LS 0x3237B54
	0x03237930 UBFM W9, W29, 0x8, 0x1F
	0x03237934 CMP W8, 0x3
	0x03237938 STRB W9, [X1 + 0x22]
	0x0323793C B.NE 0x3237994
	0x03237940 B 0x3237B54
	0x03237944 CMP X26, X28
	0x03237948 B.LS 0x3237B2C
	0x0323794C ADD X8, X28, 0x2
	0x03237950 MOV W25, W31
	0x03237954 STRH W29, [X28]
	0x03237958 MOV X28, X8
	0x0323795C MOV W29, W31
	0x03237960 B 0x3237864
	0x03237964 CBZ W8, 0x3237B54
	0x03237968 CMP W8, 0x1
	0x0323796C STRB W29, [X1 + 0x20]
	0x03237970 B.EQ 0x3237B54
	0x03237974 UBFM W9, W29, 0x8, 0x1F
	0x03237978 CMP W8, 0x2
	0x0323797C STRB W9, [X1 + 0x21]
	0x03237980 B.LS 0x3237B54
	0x03237984 CMP W8, 0x3
	0x03237988 STRB W25, [X1 + 0x22]
	0x0323798C B.EQ 0x3237B54
	0x03237990 UBFM W29, W29, 0x18, 0x1F
	0x03237994 STRB W29, [X1 + 0x23]
	0x03237998 STR X28, [X31 + 0x18]
	0x0323799C LDR X8, [X24]
	0x032379A0 ADD X3, X31, 0x18
	0x032379A4 MOV X0, X24
	0x032379A8 MOV X2, X27
	0x032379AC LDP X9, X4, [X8 + 0x1A8]
	0x032379B0 BLR X9
	0x032379B4 LDR X28, [X31 + 0x18]
	0x032379B8 MOV X10, X26
	0x032379BC LDR X26, [X31]
	0x032379C0 MOV W29, W31
	0x032379C4 MOV W25, W31
	0x032379C8 MOVZ W11, 0xD800
	0x032379CC MOVZ W12, 0x3FF0000
	0x032379D0 MOVN W13, 0x27FF
	0x032379D4 TBNZ X0, 0x0, 0x3237864
	0x032379D8 MOV X0, X24
	0x032379DC MOV X1, X31
	0x032379E0 SUB X23, X23, 0x3
	0x032379E4 BL 0x33FC800
	0x032379E8 B 0x3237B30
	0x032379EC LDP X26, X21, [X31 + 0x8]
	0x032379F0 SUBS W20, W25, 0x1
	0x032379F4 B.LT 0x3237AEC
	0x032379F8 CBZ X19, 0x3237A04
	0x032379FC LDRB W8, [X19 + 0x28]
	0x03237A00 CBZ W8, 0x3237AF0
	0x03237A04 ADRP X8, 0xEBC000
	0x03237A08 LDR X8, [X8 + 0x618]
	0x03237A0C MOV W1, W25
	0x03237A10 LDR X0, [X8]
	0x03237A14 BL 0x1C16D6C
	0x03237A18 LDRB W8, [X22 + 0x3A]
	0x03237A1C MOV X1, X0
	0x03237A20 CBZ W8, 0x3237A5C
	0x03237A24 CBZ X1, 0x3237B58
	0x03237A28 LDR W8, [X1 + 0x18]
	0x03237A2C MOV W9, W25
	0x03237A30 ADD X9, X9, 0x1
	0x03237A34 CMP W20, W8
	0x03237A38 B.CS 0x3237B54
	0x03237A3C ADD X10, X1, W20, UXTW
	0x03237A40 SUB X9, X9, 0x1
	0x03237A44 STRB W29, [X10 + 0x20]
	0x03237A48 UBFM W29, W29, 0x8, 0x1F
	0x03237A4C CMP X9, 0x1
	0x03237A50 SUB W20, W20, 0x1
	0x03237A54 B.GT 0x3237A34
	0x03237A58 B 0x3237A94
	0x03237A5C CBZ X1, 0x3237B58
	0x03237A60 LDR W8, [X1 + 0x18]
	0x03237A64 MOV W9, W25
	0x03237A68 ADD X9, X9, 0x1
	0x03237A6C CMP W20, W8
	0x03237A70 B.CS 0x3237B54
	0x03237A74 SUB X9, X9, 0x1
	0x03237A78 UBFM W10, W29, 0x18, 0x1F
	0x03237A7C ADD X11, X1, W20, UXTW
	0x03237A80 UBFM W29, W29, 0x18, 0x17
	0x03237A84 CMP X9, 0x1
	0x03237A88 SUB W20, W20, 0x1
	0x03237A8C STRB W10, [X11 + 0x20]
	0x03237A90 B.GT 0x3237A6C
	0x03237A94 STR X28, [X31 + 0x18]
	0x03237A98 LDR X8, [X24]
	0x03237A9C ADD X3, X31, 0x18
	0x03237AA0 MOV X0, X24
	0x03237AA4 MOV X2, X23
	0x03237AA8 LDP X9, X4, [X8 + 0x1A8]
	0x03237AAC BLR X9
	0x03237AB0 LDR X28, [X31 + 0x18]
	0x03237AB4 TBZ X0, 0x0, 0x3237AC8
	0x03237AB8 MOV W29, W31
	0x03237ABC MOV W25, W31
	0x03237AC0 CBNZ X19, 0x3237AF0
	0x03237AC4 B 0x3237AFC
	0x03237AC8 MOV X0, X24
	0x03237ACC MOV X1, X31
	0x03237AD0 BL 0x33FC800
	0x03237AD4 CMP X28, X21

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x11A6000
	011 Move W8, [X25+1000]
	012 Move W20, W5
	013 Move X23, X4
	014 Move W19, W3
	015 Move W21, W2
	016 Move X24, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xEEC000
	023 Move X0, [X0+712]
	024 Call 0x1C17CF4
	025 Move X0, 0xEEC000
	026 Move X0, [X0+720]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+1000], W8
	030 Compare X24, 0
	031 JumpIfEqual {106}
	032 Compare X23, 0
	033 JumpIfEqual {106}
	034 Move TEMP, X19
	035 And TEMP, TEMP, -2147483648
	036 Compare TEMP, -2147483648
	037 JumpIfEqual {127}
	038 Move TEMP, X21
	039 And TEMP, TEMP, -2147483648
	040 Compare TEMP, -2147483648
	041 JumpIfEqual {127}
	042 Move W8, [X24+24]
	043 Subtract W9, W8, W21
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move TEMP, X20
	046 And TEMP, TEMP, -2147483648
	047 Compare TEMP, -2147483648
	048 JumpIfEqual {95}
	049 Move W9, [X23+24]
	050 Subtract W25, W9, W20
	051 Compare W19, 0
	052 JumpIfEqual {84}
	053 Move X9, 0xEEC000
	054 Move X9, [X9+720]
	055 Move X26, 0xEEC000
	056 Move X26, [X26+712]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X1, [X9]
	059 Add X9, X24, 32
	060 Move X0, X23
	061 NotImplemented "Instruction CSEL not yet implemented."
	062 Call Span`1<Char>.op_Implicit, X0
	063 Move X2, [X26]
	064 Call MemoryMarshal.GetReference, X0
	065 Move X8, [X22]
	066 Add X1, X24, W21
	067 Add X3, X0, W20
	068 Move X0, X22
	069 Move X7, [X8+776]
	070 Move X6, [X8+784]
	071 Move W2, W19
	072 Move W4, W25
	073 Move X20, [X31+64]
	074 Move X19, [X31+72]
	075 Move X22, [X31+48]
	076 Move X21, [X31+56]
	077 Move X24, [X31+32]
	078 Move X23, [X31+40]
	079 Move X26, [X31+16]
	080 Move X25, [X31+24]
	081 Move X5, X31
	082 Move X30, [X31+80]
	083 CallNoReturn X7
	084 Move X20, [X31+64]
	085 Move X19, [X31+72]
	086 Move X22, [X31+48]
	087 Move X21, [X31+56]
	088 Move X24, [X31+32]
	089 Move X23, [X31+40]
	090 Move X26, [X31+16]
	091 Move X25, [X31+24]
	092 Move W0, W31
	093 Move X30, [X31+80]
	094 Return X0
	095 Move X0, 0xEC5000
	096 Move X0, [X0+1888]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X19, X0
	100 Move X0, 0xEEC000
	101 Move X0, [X0+792]
	102 Call 0x1C17D08
	103 Move X20, X0
	104 Move X0, 0xEE5000
	105 Move X0, [X0+1632]
	106 Move X8, 0xEEC000
	107 Move X9, 0xEEC000
	108 Move X8, [X8+728]
	109 Move X9, [X9+776]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction CSEL not yet implemented."
	112 Call 0x1C17D08
	113 Move X19, X0
	114 Move X0, 0xEC2000
	115 Move X0, [X0+1320]
	116 Call 0x1C17D08
	117 Call 0x1C17F10
	118 Move X20, X0
	119 Move X0, 0xEEC000
	120 Move X0, [X0+736]
	121 Call 0x1C17D08
	122 Move X2, X0
	123 Move X0, X20
	124 Move X1, X19
	125 Move X3, X31
	126 Call ArgumentNullException..ctor, X0, X1, X2
	127 Move X8, 0xEEC000
	128 Move X9, 0xEEC000
	129 Move X8, [X8+808]
	130 Move X9, [X9+768]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 NotImplemented "Instruction CSEL not yet implemented."
	133 Call 0x1C17D08
	134 Move X19, X0
	135 Move X0, 0xEC5000
	136 Move X0, [X0+1888]
	137 Call 0x1C17D08
	138 Call 0x1C17F10
	139 Move X20, X0
	140 Move X0, 0xEE5000
	141 Move X0, [X0+1648]
	142 Call 0x1C17D08
	143 Move X2, X0
	144 Move X0, X20
	145 Move X1, X19
	146 Move X3, X31
	147 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	148 Move X0, 0xEEC000
	149 Move X0, [X0+1688]
	150 Call 0x1C17D08
	151 Move X1, X0
	152 Move X0, X20
	153 Call 0x1C17DEC
	154 Move X0, 0xEC5000
	155 Move X0, [X0+1888]
	156 Call 0x1C17D08
	157 Call 0x1C17F10
	158 Move X19, X0
	159 Move X0, 0xEEC000
	160 Move X0, [X0+776]
	161 Call 0x1C17D08
	162 Move X20, X0
	163 Move X0, 0xEEC000
	164 Move X0, [X0+224]
	165 Call 0x1C17D08
	166 Move X2, X0
	167 Move X0, X19
	168 Move X1, X20
	169 Move X3, X31
	170 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	171 Move X0, 0xEEC000
	172 Move X0, [X0+1688]
	173 Call 0x1C17D08
	174 Move X1, X0
	175 Move X0, X19
	176 Call 0x1C17DEC

Method: System.Int32 GetChars(System.Byte* bytes, System.Int32 byteCount, System.Char* chars, System.Int32 charCount)

Disassembly:
	0x03237AD8 CSET W2, EQ
	0x03237ADC MOV X0, X22
	0x03237AE0 MOV X1, X19
	0x03237AE4 MOV X3, X31
	0x03237AE8 BL 0x3245300
	0x03237AEC CBZ X19, 0x3237AFC
	0x03237AF0 SUB W8, W23, W26
	0x03237AF4 STP W29, W25, [X19 + 0x30]
	0x03237AF8 STR W8, [X19 + 0x2C]
	0x03237AFC SUB X8, X28, X21
	0x03237B00 CMP X8, 0x0
	0x03237B04 LDP X20, X19, [X31 + 0x70]
	0x03237B08 LDP X22, X21, [X31 + 0x60]
	0x03237B0C LDP X24, X23, [X31 + 0x50]
	0x03237B10 LDP X26, X25, [X31 + 0x40]
	0x03237B14 LDP X28, X27, [X31 + 0x30]
	0x03237B18 LDP X29, X30, [X31 + 0x20]
	0x03237B1C CINC X8, X8, LT
	0x03237B20 UBFM X0, X8, 0x1, 0x3F
	0x03237B24 ADD X31, X31, 0x80
	0x03237B28 RET
	0x03237B2C SUB X23, X23, 0x3
	0x03237B30 LDR X21, [X31 + 0x10]
	0x03237B34 MOV X0, X22
	0x03237B38 MOV X1, X19
	0x03237B3C MOV X3, X31
	0x03237B40 CMP X28, X21
	0x03237B44 CSET W2, EQ
	0x03237B48 BL 0x3245300
	0x03237B4C LDR X26, [X31 + 0x8]
	0x03237B50 B 0x3237AB8
	0x03237B54 BL 0x1C16F28
	0x03237B58 BL 0x1C16F20
	0x03237B5C MOV X0, X19
	0x03237B60 BL 0x1C171E0
	0x03237B64 MOVZ W8, 0x3FF0000
	0x03237B68 ADD W8, W1, W8
	0x03237B6C MOVN W9, 0x27FF
	0x03237B70 ADD W0, W9, W8, 0xA, LSR
	0x03237B74 RET
	0x03237B78 MOVN W0, 0x23FF
	0x03237B7C BFM W0, W1, 0x0, 0x9
	0x03237B80 RET
	0x03237B84 STP X30, X21, [X31 - 0x20]!
	0x03237B88 STP X20, X19, [X31 + 0x10]
	0x03237B8C ADRP X20, 0x11A5000
	0x03237B90 ADRP X21, 0xEEB000
	0x03237B94 LDRB W8, [X20 + 0x3EE]
	0x03237B98 LDR X21, [X21 + 0x6C8]
	0x03237B9C MOV X19, X0
	0x03237BA0 TBNZ X8, 0x0, 0x3237BB8
	0x03237BA4 ADRP X0, 0xEEB000
	0x03237BA8 LDR X0, [X0 + 0x6C8]
	0x03237BAC BL 0x1C16CF4
	0x03237BB0 MOVZ W8, 0x1
	0x03237BB4 STRB W8, [X20 + 0x3EE]
	0x03237BB8 LDR X0, [X21]
	0x03237BBC BL 0x1C16F10
	0x03237BC0 MOV X1, X19
	0x03237BC4 MOV X2, X31
	0x03237BC8 MOV X20, X0
	0x03237BCC BL 0x33FCA64

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {24}
	006 Compare X3, 0
	007 JumpIfEqual {24}
	008 Move TEMP, X2
	009 And TEMP, TEMP, -2147483648
	010 Compare TEMP, -2147483648
	011 JumpIfEqual {45}
	012 Move TEMP, X4
	013 And TEMP, TEMP, -2147483648
	014 Compare TEMP, -2147483648
	015 JumpIfEqual {45}
	016 Move X8, [X0]
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X5, X31
	020 Move X7, [X8+776]
	021 Move X6, [X8+784]
	022 Move X30, [X31+32]
	023 CallNoReturn X7
	024 Move X8, 0xEEC000
	025 Move X9, 0xEEC000
	026 Move X8, [X8+728]
	027 Move X9, [X9+776]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSEL not yet implemented."
	030 Call 0x1C17D08
	031 Move X19, X0
	032 Move X0, 0xEC2000
	033 Move X0, [X0+1320]
	034 Call 0x1C17D08
	035 Call 0x1C17F10
	036 Move X20, X0
	037 Move X0, 0xEEC000
	038 Move X0, [X0+736]
	039 Call 0x1C17D08
	040 Move X2, X0
	041 Move X0, X20
	042 Move X1, X19
	043 Move X3, X31
	044 Call ArgumentNullException..ctor, X0, X1, X2
	045 Move X8, 0xEEC000
	046 Move X9, 0xEEC000
	047 Move X8, [X8+808]
	048 Move X9, [X9+784]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 Call 0x1C17D08
	052 Move X19, X0
	053 Move X0, 0xEC5000
	054 Move X0, [X0+1888]
	055 Call 0x1C17D08
	056 Call 0x1C17F10
	057 Move X20, X0
	058 Move X0, 0xEE5000
	059 Move X0, [X0+1648]
	060 Call 0x1C17D08
	061 Move X2, X0
	062 Move X0, X20
	063 Move X1, X19
	064 Move X3, X31
	065 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	066 Move X0, 0xEEC000
	067 Move X0, [X0+1696]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X20
	071 Call 0x1C17DEC

Method: System.String GetString(System.Byte[] bytes, System.Int32 index, System.Int32 count)

Disassembly:
	0x03237BD0 MOV X0, X20
	0x03237BD4 LDP X20, X19, [X31 + 0x10]
	0x03237BD8 LDP X30, X21, [X31], #0x20
	0x03237BDC RET
	0x03237BE0 MOV X2, X31
	0x03237BE4 B 0x33FCA64
	0x03237BE8 STP X30, X21, [X31 - 0x20]!
	0x03237BEC STP X20, X19, [X31 + 0x10]
	0x03237BF0 ADRP X20, 0x11A5000
	0x03237BF4 ADRP X21, 0xEEB000
	0x03237BF8 LDRB W8, [X20 + 0x3EF]
	0x03237BFC LDR X21, [X21 + 0x3F0]
	0x03237C00 MOV X19, X0
	0x03237C04 TBNZ X8, 0x0, 0x3237C1C
	0x03237C08 ADRP X0, 0xEEB000
	0x03237C0C LDR X0, [X0 + 0x3F0]
	0x03237C10 BL 0x1C16CF4
	0x03237C14 MOVZ W8, 0x1
	0x03237C18 STRB W8, [X20 + 0x3EF]
	0x03237C1C LDR X0, [X21]
	0x03237C20 BL 0x1C16F10
	0x03237C24 MOV X1, X19
	0x03237C28 MOV X20, X0
	0x03237C2C BL 0x322EC5C
	0x03237C30 MOV X0, X20
	0x03237C34 LDP X20, X19, [X31 + 0x10]
	0x03237C38 LDP X30, X21, [X31], #0x20
	0x03237C3C RET
	0x03237C40 STR X30, [X31 - 0x20]!
	0x03237C44 STP X20, X19, [X31 + 0x10]
	0x03237C48 TBNZ X1, 0x1F, 0x3237CB4
	0x03237C4C MOV X19, X0
	0x03237C50 LDR X0, [X0 + 0x28]
	0x03237C54 CBZ X0, 0x3237CB0
	0x03237C58 LDR X8, [X0]
	0x03237C5C MOV W10, W1
	0x03237C60 ADD X20, X10, 0x1
	0x03237C64 LDP X9, X8, [X8 + 0x188]
	0x03237C68 MOV X1, X8
	0x03237C6C BLR X9
	0x03237C70 CMP W0, 0x2
	0x03237C74 B.LT 0x3237C94
	0x03237C78 LDR X0, [X19 + 0x28]
	0x03237C7C CBZ X0, 0x3237CB0
	0x03237C80 LDR X8, [X0]
	0x03237C84 LDP X9, X1, [X8 + 0x188]
	0x03237C88 BLR X9
	0x03237C8C SXTW X8, W0
	0x03237C90 MUL X20, X20, X8
	0x03237C94 UBFM X0, X20, 0x3E, 0x3D
	0x03237C98 MOVZ W8, 0x80000000
	0x03237C9C CMP X0, X8
	0x03237CA0 B.GE 0x3237CE4
	0x03237CA4 LDP X20, X19, [X31 + 0x10]
	0x03237CA8 LDR X30, [X31], #0x20
	0x03237CAC RET
	0x03237CB0 BL 0x1C16F20
	0x03237CB4 ADRP X0, 0xEC4000
	0x03237CB8 LDR X0, [X0 + 0x760]
	0x03237CBC BL 0x1C16D08
	0x03237CC0 BL 0x1C16F10
	0x03237CC4 MOV X19, X0
	0x03237CC8 ADRP X0, 0xEEB000
	0x03237CCC LDR X0, [X0 + 0x310]
	0x03237CD0 BL 0x1C16D08
	0x03237CD4 MOV X20, X0
	0x03237CD8 ADRP X0, 0xEE4000
	0x03237CDC LDR X0, [X0 + 0x670]
	0x03237CE0 B 0x3237D10
	0x03237CE4 ADRP X0, 0xEC4000
	0x03237CE8 LDR X0, [X0 + 0x760]
	0x03237CEC BL 0x1C16D08
	0x03237CF0 BL 0x1C16F10
	0x03237CF4 MOV X19, X0
	0x03237CF8 ADRP X0, 0xEEB000
	0x03237CFC LDR X0, [X0 + 0x310]
	0x03237D00 BL 0x1C16D08
	0x03237D04 MOV X20, X0
	0x03237D08 ADRP X0, 0xEEB000
	0x03237D0C LDR X0, [X0 + 0x420]
	0x03237D10 BL 0x1C16D08
	0x03237D14 MOV X2, X0
	0x03237D18 MOV X0, X19
	0x03237D1C MOV X1, X20
	0x03237D20 MOV X3, X31
	0x03237D24 BL 0x3311888
	0x03237D28 ADRP X0, 0xEEB000
	0x03237D2C LDR X0, [X0 + 0x6D8]
	0x03237D30 BL 0x1C16D08
	0x03237D34 MOV X1, X0
	0x03237D38 MOV X0, X19
	0x03237D3C BL 0x1C16DEC
	0x03237D40 STR X30, [X31 - 0x20]!
	0x03237D44 STP X20, X19, [X31 + 0x10]
	0x03237D48 TBNZ X1, 0x1F, 0x3237DB0
	0x03237D4C MOV X20, X0
	0x03237D50 LDR X0, [X0 + 0x30]
	0x03237D54 CBZ X0, 0x3237DAC
	0x03237D58 LDR X8, [X0]
	0x03237D5C UBFM W10, W1, 0x1, 0x1F
	0x03237D60 ADD W19, W10, 0x2
	0x03237D64 LDP X9, X8, [X8 + 0x188]
	0x03237D68 MOV X1, X8
	0x03237D6C BLR X9
	0x03237D70 CMP W0, 0x3
	0x03237D74 B.LT 0x3237D9C
	0x03237D78 LDR X0, [X20 + 0x30]
	0x03237D7C CBZ X0, 0x3237DAC
	0x03237D80 LDR X8, [X0]
	0x03237D84 LDP X9, X1, [X8 + 0x188]
	0x03237D88 BLR X9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x11A6000
	008 Move W8, [X23+1001]
	009 Move W20, W3
	010 Move W19, W2
	011 Move X22, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xEBF000
	018 Move X0, [X0+632]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+1001], W8
	022 Compare X22, 0
	023 JumpIfEqual {64}
	024 Move TEMP, X20
	025 And TEMP, TEMP, -2147483648
	026 Compare TEMP, -2147483648
	027 JumpIfEqual {81}
	028 Move TEMP, X19
	029 And TEMP, TEMP, -2147483648
	030 Compare TEMP, -2147483648
	031 JumpIfEqual {81}
	032 Move W8, [X22+24]
	033 Subtract W9, W8, W19
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Compare W20, 0
	036 JumpIfEqual {52}
	037 Add X9, X22, 32
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 Add X0, X8, W19
	041 Move W1, W20
	042 Move X2, X21
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X3, X31
	048 Move X30, [X31+48]
	049 Move X23, [X31+56]
	050 Call String.CreateStringFromEncoding, X0, X1, X2
	051 Return X0
	052 Move X8, 0xEBF000
	053 Move X8, [X8+632]
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X8, [X8]
	059 Move X8, [X8+184]
	060 Move X0, [X8]
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Return X0
	064 Move X0, 0xEC2000
	065 Move X0, [X0+1320]
	066 Call 0x1C17D08
	067 Call 0x1C17F10
	068 Move X19, X0
	069 Move X0, 0xEEC000
	070 Move X0, [X0+776]
	071 Call 0x1C17D08
	072 Move X20, X0
	073 Move X0, 0xEEC000
	074 Move X0, [X0+736]
	075 Call 0x1C17D08
	076 Move X2, X0
	077 Move X0, X19
	078 Move X1, X20
	079 Move X3, X31
	080 Call ArgumentNullException..ctor, X0, X1, X2
	081 Move X8, 0xEE5000
	082 Move X9, 0xEC8000
	083 Move X8, [X8+1608]
	084 Move X9, [X9+304]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction CSEL not yet implemented."
	087 Call 0x1C17D08
	088 Move X19, X0
	089 Move X0, 0xEC5000
	090 Move X0, [X0+1888]
	091 Call 0x1C17D08
	092 Call 0x1C17F10
	093 Move X20, X0
	094 Move X0, 0xEE5000
	095 Move X0, [X0+1648]
	096 Call 0x1C17D08
	097 Move X2, X0
	098 Move X0, X20
	099 Move X1, X19
	100 Move X3, X31
	101 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	102 Move X0, 0xEEC000
	103 Move X0, [X0+1704]
	104 Call 0x1C17D08
	105 Move X1, X0
	106 Move X0, X20
	107 Call 0x1C17DEC
	108 Move X0, 0xEC5000
	109 Move X0, [X0+1888]
	110 Call 0x1C17D08
	111 Call 0x1C17F10
	112 Move X19, X0
	113 Move X0, 0xEEC000
	114 Move X0, [X0+776]
	115 Call 0x1C17D08
	116 Move X20, X0
	117 Move X0, 0xEEC000
	118 Move X0, [X0+224]
	119 Call 0x1C17D08
	120 Move X2, X0
	121 Move X0, X19
	122 Move X1, X20
	123 Move X3, X31
	124 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	125 Move X0, 0xEEC000
	126 Move X0, [X0+1704]
	127 Call 0x1C17D08
	128 Move X1, X0
	129 Move X0, X19
	130 Call 0x1C17DEC

Method: System.Int32 GetByteCount(System.Char* chars, System.Int32 count, System.Text.EncoderNLS encoder)

Disassembly:
	0x03237D8C MUL W8, W0, W19
	0x03237D90 CMP W8, 0x0
	0x03237D94 CINC W8, W8, LT
	0x03237D98 SBFM W19, W8, 0x1, 0x1F
	0x03237D9C MOV W0, W19
	0x03237DA0 LDP X20, X19, [X31 + 0x10]
	0x03237DA4 LDR X30, [X31], #0x20
	0x03237DA8 RET
	0x03237DAC BL 0x1C16F20
	0x03237DB0 ADRP X0, 0xEC4000
	0x03237DB4 LDR X0, [X0 + 0x760]
	0x03237DB8 BL 0x1C16D08
	0x03237DBC BL 0x1C16F10
	0x03237DC0 MOV X19, X0
	0x03237DC4 ADRP X0, 0xEEB000
	0x03237DC8 LDR X0, [X0 + 0x328]
	0x03237DCC BL 0x1C16D08
	0x03237DD0 MOV X20, X0
	0x03237DD4 ADRP X0, 0xEE4000
	0x03237DD8 LDR X0, [X0 + 0x670]
	0x03237DDC BL 0x1C16D08
	0x03237DE0 MOV X2, X0
	0x03237DE4 MOV X0, X19
	0x03237DE8 MOV X1, X20
	0x03237DEC MOV X3, X31
	0x03237DF0 BL 0x3311888
	0x03237DF4 ADRP X0, 0xEEB000
	0x03237DF8 LDR X0, [X0 + 0x6E0]
	0x03237DFC BL 0x1C16D08
	0x03237E00 MOV X1, X0
	0x03237E04 MOV X0, X19
	0x03237E08 BL 0x1C16DEC
	0x03237E0C STR X30, [X31 - 0x20]!
	0x03237E10 STP X20, X19, [X31 + 0x10]
	0x03237E14 ADRP X20, 0x11A5000
	0x03237E18 LDRB W8, [X20 + 0x3F0]
	0x03237E1C MOV X19, X0
	0x03237E20 TBNZ X8, 0x0, 0x3237E44
	0x03237E24 ADRP X0, 0xEC4000
	0x03237E28 LDR X0, [X0 + 0xCC8]
	0x03237E2C BL 0x1C16CF4
	0x03237E30 ADRP X0, 0xEBC000
	0x03237E34 LDR X0, [X0 + 0x618]
	0x03237E38 BL 0x1C16CF4
	0x03237E3C MOVZ W8, 0x1
	0x03237E40 STRB W8, [X20 + 0x3F0]
	0x03237E44 LDRB W8, [X19 + 0x38]
	0x03237E48 CBZ W8, 0x3237E94
	0x03237E4C ADRP X8, 0xEBC000
	0x03237E50 LDR X8, [X8 + 0x618]
	0x03237E54 LDRB W19, [X19 + 0x3A]
	0x03237E58 MOVZ W1, 0x4
	0x03237E5C LDR X0, [X8]
	0x03237E60 BL 0x1C16D6C
	0x03237E64 CBZ X0, 0x3237F1C
	0x03237E68 LDR W8, [X0 + 0x18]
	0x03237E6C CBZ W19, 0x3237EF0
	0x03237E70 CMP W8, 0x2
	0x03237E74 B.LS 0x3237F18
	0x03237E78 MOVZ W9, 0xFE
	0x03237E7C CMP W8, 0x3
	0x03237E80 STRB W9, [X0 + 0x22]
	0x03237E84 B.EQ 0x3237F18
	0x03237E88 MOVZ W8, 0xFF
	0x03237E8C STRB W8, [X0 + 0x23]
	0x03237E90 B 0x3237F0C
	0x03237E94 ADRP X8, 0xEC4000
	0x03237E98 LDR X8, [X8 + 0xCC8]
	0x03237E9C LDR X19, [X8]
	0x03237EA0 LDR X8, [X19 + 0x38]
	0x03237EA4 CBNZ X8, 0x3237EB4
	0x03237EA8 MOV X0, X19
	0x03237EAC BL 0x1C5C6E0
	0x03237EB0 LDR X8, [X19 + 0x38]
	0x03237EB4 LDR X0, [X8 + 0x10]
	0x03237EB8 LDRB W8, [X0 + 0x135]
	0x03237EBC TBNZ X8, 0x0, 0x3237EC4
	0x03237EC0 BL 0x1C5C684
	0x03237EC4 LDR W8, [X0 + 0xE0]
	0x03237EC8 CBNZ W8, 0x3237ED0
	0x03237ECC BL 0x1C16DFC
	0x03237ED0 LDR X8, [X19 + 0x38]
	0x03237ED4 LDR X0, [X8 + 0x10]
	0x03237ED8 LDRB W8, [X0 + 0x135]
	0x03237EDC TBNZ X8, 0x0, 0x3237EE4
	0x03237EE0 BL 0x1C5C684
	0x03237EE4 LDR X8, [X0 + 0xB8]
	0x03237EE8 LDR X0, [X8]
	0x03237EEC B 0x3237F0C
	0x03237EF0 CBZ W8, 0x3237F18
	0x03237EF4 MOVZ W9, 0xFF
	0x03237EF8 CMP W8, 0x1
	0x03237EFC STRB W9, [X0 + 0x20]
	0x03237F00 B.EQ 0x3237F18
	0x03237F04 MOVZ W8, 0xFE
	0x03237F08 STRB W8, [X0 + 0x21]
	0x03237F0C LDP X20, X19, [X31 + 0x10]
	0x03237F10 LDR X30, [X31], #0x20
	0x03237F14 RET
	0x03237F18 BL 0x1C16F28
	0x03237F1C BL 0x1C16F20
	0x03237F20 STR X30, [X31 - 0x30]!
	0x03237F24 STP X22, X21, [X31 + 0x10]
	0x03237F28 STP X20, X19, [X31 + 0x20]
	0x03237F2C ADRP X22, 0x11A5000
	0x03237F30 ADRP X20, 0xEEB000
	0x03237F34 ADRP X21, 0xEBC000
	0x03237F38 LDRB W8, [X22 + 0x3F1]
	0x03237F3C LDR X20, [X20 + 0x6E8]
	0x03237F40 LDR X21, [X21 + 0x6C0]
	0x03237F44 MOV X19, X0
	0x03237F48 TBNZ X8, 0x0, 0x3237F90
	0x03237F4C ADRP X0, 0xEC4000
	0x03237F50 LDR X0, [X0 + 0xCC8]
	0x03237F54 BL 0x1C16CF4
	0x03237F58 ADRP X0, 0xEEB000
	0x03237F5C LDR X0, [X0 + 0x6F0]
	0x03237F60 BL 0x1C16CF4
	0x03237F64 ADRP X0, 0xEBC000
	0x03237F68 LDR X0, [X0 + 0x6C0]
	0x03237F6C BL 0x1C16CF4
	0x03237F70 ADRP X0, 0xEEB000
	0x03237F74 LDR X0, [X0 + 0x6E8]
	0x03237F78 BL 0x1C16CF4
	0x03237F7C ADRP X0, 0xEEB000
	0x03237F80 LDR X0, [X0 + 0x6F8]
	0x03237F84 BL 0x1C16CF4
	0x03237F88 MOVZ W8, 0x1
	0x03237F8C STRB W8, [X22 + 0x3F1]
	0x03237F90 MOV X0, X19
	0x03237F94 MOV X1, X31
	0x03237F98 BL 0x33BE520
	0x03237F9C LDR X8, [X21]
	0x03237FA0 LDR X21, [X20]
	0x03237FA4 MOV X20, X0
	0x03237FA8 LDR W9, [X8 + 0xE0]
	0x03237FAC CBNZ W9, 0x3237FB8
	0x03237FB0 MOV X0, X8
	0x03237FB4 BL 0x1C16DFC
	0x03237FB8 ADRP X22, 0xEEB000
	0x03237FBC LDR X22, [X22 + 0x6F0]
	0x03237FC0 MOV X0, X21
	0x03237FC4 MOV X1, X31
	0x03237FC8 BL 0x338C698
	0x03237FCC MOV X1, X0
	0x03237FD0 MOV X0, X20
	0x03237FD4 MOV X2, X31
	0x03237FD8 BL 0x3395F0C
	0x03237FDC TBZ X0, 0x0, 0x3237FF4
	0x03237FE0 LDR X8, [X19]
	0x03237FE4 MOV X0, X19
	0x03237FE8 LDP X9, X1, [X8 + 0x198]
	0x03237FEC BLR X9
	0x03237FF0 B 0x323808C
	0x03237FF4 LDRB W8, [X19 + 0x38]
	0x03237FF8 CBZ W8, 0x323802C
	0x03237FFC ADRP X20, 0xEEB000
	0x03238000 LDR X20, [X20 + 0x6F8]
	0x03238004 LDRB W19, [X19 + 0x3A]
	0x03238008 LDR X0, [X20]
	0x0323800C LDR W8, [X0 + 0xE0]
	0x03238010 CBNZ W8, 0x323801C
	0x03238014 BL 0x1C16DFC
	0x03238018 LDR X0, [X20]
	0x0323801C LDR X8, [X0 + 0xB8]
	0x03238020 CBZ W19, 0x3238088
	0x03238024 LDR X0, [X8 + 0x10]
	0x03238028 B 0x323808C
	0x0323802C ADRP X8, 0xEC3000
	0x03238030 LDR X8, [X8 + 0xCC8]
	0x03238034 LDR X19, [X8]
	0x03238038 LDR X8, [X19 + 0x38]
	0x0323803C CBNZ X8, 0x323804C
	0x03238040 MOV X0, X19
	0x03238044 BL 0x1C5C6E0
	0x03238048 LDR X8, [X19 + 0x38]
	0x0323804C LDR X0, [X8 + 0x10]
	0x03238050 LDRB W8, [X0 + 0x135]
	0x03238054 TBNZ X8, 0x0, 0x323805C

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x11A6000
	011 Move W8, [X21+1002]
	012 Move X19, X3
	013 Move W22, W2
	014 Move X20, X1
	015 Move X23, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xEBF000
	021 Move X0, [X0+368]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1002], W8
	025 Move [X31+8], X31
	026 Compare X19, 0
	027 JumpIfEqual {77}
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 Move X0, X19
	030 Move X1, X31
	031 Call Encoder.get_FallbackBuffer, X0
	032 Compare X0, 0
	033 JumpIfEqual {179}
	034 Move X8, [X0]
	035 Move X21, X0
	036 Move X9, [X8+440]
	037 Move X1, [X8+448]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, [X23]
	041 Move X0, X23
	042 Move X9, [X8+440]
	043 Move X1, [X8+448]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X20, X0
	046 Move X0, X19
	047 Call 0x19913C0
	048 Move X19, [X19+16]
	049 Move X0, X19
	050 Call 0x19913C0
	051 Move X0, X19
	052 Move X1, X31
	053 Call "il2cpp_vm_object_is_inst", X0
	054 Move X19, X0
	055 Move X0, 0xEEC000
	056 Move X0, [X0+1712]
	057 Call 0x1C17D08
	058 Move X1, X20
	059 Move X2, X19
	060 Move X3, X31
	061 Call SR.Format, X0, X1, X2
	062 Move X19, X0
	063 Move X0, 0xEC5000
	064 Move X0, [X0+1400]
	065 Call 0x1C17D08
	066 Call 0x1C17F10
	067 Move X1, X19
	068 Move X2, X31
	069 Move X20, X0
	070 Call ArgumentException..ctor, X0, X1
	071 Move X0, 0xEEC000
	072 Move X0, [X0+1720]
	073 Call 0x1C17D08
	074 Move X1, X0
	075 Move X0, X20
	076 Call 0x1C17DEC
	077 Move X0, [X23+40]
	078 Compare X0, 0
	079 JumpIfEqual {179}
	080 Move X8, [X0]
	081 Move X9, [X8+376]
	082 Move X1, [X8+384]
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Compare X0, 0
	085 JumpIfEqual {179}
	086 Move X21, X0
	087 Move W24, W31
	088 Move X26, 0xEBF000
	089 Move X26, [X26+368]
	090 Add X22, X20, W22
	091 Move X0, X21
	092 Move X1, X20
	093 Move X2, X22
	094 Move X3, X19
	095 Move W4, W31
	096 Move X5, X31
	097 Call EncoderFallbackBuffer.InternalInitialize, X0, X1, X2, X3, X4
	098 Move W23, W31
	099 Move X0, X21
	100 Move X1, X31
	101 Call EncoderFallbackBuffer.InternalGetNextChar, X0
	102 And W31, W0, 0xFFFF
	103 Move W25, W0
	104 NotImplemented "Instruction CMP not yet implemented."
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Move X0, [X26]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 And W31, W24, 0xFFFF
	112 Move W0, W25
	113 Move X1, X31
	114 Call Char.IsLowSurrogate, X0
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfEqual {162}
	119 Subtract X8, X20, 2
	120 Move [X31+8], X8
	121 Move W0, W25
	122 Move X1, X31
	123 Call Char.IsHighSurrogate, X0
	124 Move W24, W25
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfEqual {99}
	129 Move X0, [X26]
	130 Move W8, [X0+224]
	131 Compare W8, 0
	132 JumpIfNotEqual {134}
	133 Call 0x1C17DFC
	134 Move W0, W25
	135 Move X1, X31
	136 Call Char.IsLowSurrogate, X0
	137 Move TEMP, X0
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfNotEqual {162}
	141 Move [X31+8], X20
	142 Move X8, [X21]
	143 Add X2, X31, 8
	144 Move X0, X21
	145 Move W1, W25
	146 And W31, W24, 0xFFFF
	147 Compare X19, 0
	148 Invalid "Jump target not found in method."
	149 Move W8, [X19+48]
	150 Compare W8, 0
	151 JumpIfNotEqual {152}
	152 Move [X31+8], X20
	153 Move X8, [X21]
	154 Add X2, X31, 8
	155 Move X0, X21
	156 Move W1, W24
	157 Move X9, [X8+472]
	158 Move X3, [X8+480]
	159 NotImplemented "Instruction BLR not yet implemented."
	160 Move X20, [X31+8]
	161 Move W24, W31
	162 Move W24, W31
	163 Add W23, W23, 4
	164 Move TEMP, X23
	165 And TEMP, TEMP, -2147483648
	166 Compare TEMP, -2147483648
	167 JumpIfEqual {180}
	168 Move W0, W23
	169 Move X20, [X31+64]
	170 Move X19, [X31+72]
	171 Move X22, [X31+48]
	172 Move X21, [X31+56]
	173 Move X24, [X31+32]
	174 Move X23, [X31+40]
	175 Move X26, [X31+16]
	176 Move X25, [X31+24]
	177 Move X30, [X31+80]
	178 Return X0
	179 Call 0x1C17F20
	180 Move X0, 0xEC5000
	181 Move X0, [X0+1888]
	182 Call 0x1C17D08
	183 Call 0x1C17F10
	184 Move X19, X0
	185 Move X0, 0xEE4000
	186 Move X0, [X0+1608]
	187 Call 0x1C17D08
	188 Move X20, X0
	189 Move X0, 0xEEB000
	190 Move X0, [X0+1056]
	191 Call 0x1C17D08
	192 Move X2, X0
	193 Move X0, X19
	194 Move X1, X20
	195 Move X3, X31
	196 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	197 Move X0, 0xEEB000
	198 Move X0, [X0+1720]
	199 Call 0x1C17D08
	200 Move X1, X0
	201 Move X0, X19
	202 Call 0x1C17DEC

Method: System.Int32 GetBytes(System.Char* chars, System.Int32 charCount, System.Byte* bytes, System.Int32 byteCount, System.Text.EncoderNLS encoder)

Disassembly:
	0x03238058 BL 0x1C5C684
	0x0323805C LDR W8, [X0 + 0xE0]
	0x03238060 CBNZ W8, 0x3238068
	0x03238064 BL 0x1C16DFC
	0x03238068 LDR X8, [X19 + 0x38]
	0x0323806C LDR X0, [X8 + 0x10]
	0x03238070 LDRB W8, [X0 + 0x135]
	0x03238074 TBNZ X8, 0x0, 0x323807C
	0x03238078 BL 0x1C5C684
	0x0323807C LDR X8, [X0 + 0xB8]
	0x03238080 LDR X0, [X8]
	0x03238084 B 0x323808C
	0x03238088 LDR X0, [X8 + 0x18]
	0x0323808C LDR X1, [X22]
	0x03238090 LDP X20, X19, [X31 + 0x20]
	0x03238094 LDP X22, X21, [X31 + 0x10]
	0x03238098 LDR X30, [X31], #0x30
	0x0323809C B 0x25BEADC
	0x032380A0 STP X30, X21, [X31 - 0x20]!
	0x032380A4 STP X20, X19, [X31 + 0x10]
	0x032380A8 ADRP X21, 0x11A4000
	0x032380AC LDRB W8, [X21 + 0x3F2]
	0x032380B0 MOV X20, X1
	0x032380B4 MOV X19, X0
	0x032380B8 TBNZ X8, 0x0, 0x32380D0
	0x032380BC ADRP X0, 0xEEA000
	0x032380C0 LDR X0, [X0 + 0x6F8]
	0x032380C4 BL 0x1C16CF4
	0x032380C8 MOVZ W8, 0x1
	0x032380CC STRB W8, [X21 + 0x3F2]
	0x032380D0 CBZ X20, 0x3238150
	0x032380D4 ADRP X8, 0xEEA000
	0x032380D8 LDR X8, [X8 + 0x6F8]
	0x032380DC LDR X9, [X20]
	0x032380E0 LDR X8, [X8]
	0x032380E4 CMP X9, X8
	0x032380E8 CSEL X20, X20, X31, EQ
	0x032380EC B.NE 0x3238150
	0x032380F0 CBZ X20, 0x3238160
	0x032380F4 LDRB W8, [X19 + 0x38]
	0x032380F8 LDRB W9, [X20 + 0x38]
	0x032380FC CMP W8, W9
	0x03238100 B.NE 0x3238150
	0x03238104 LDRB W8, [X19 + 0x3A]
	0x03238108 LDRB W9, [X20 + 0x3A]
	0x0323810C CMP W8, W9
	0x03238110 B.NE 0x3238150
	0x03238114 LDR X0, [X19 + 0x28]
	0x03238118 CBZ X0, 0x3238160
	0x0323811C LDR X8, [X0]
	0x03238120 LDR X1, [X20 + 0x28]
	0x03238124 LDP X9, X2, [X8 + 0x138]
	0x03238128 BLR X9
	0x0323812C TBZ X0, 0x0, 0x3238150
	0x03238130 LDR X0, [X19 + 0x30]
	0x03238134 CBZ X0, 0x3238160
	0x03238138 LDR X8, [X0]
	0x0323813C LDR X1, [X20 + 0x30]
	0x03238140 LDP X20, X19, [X31 + 0x10]
	0x03238144 LDP X3, X2, [X8 + 0x138]
	0x03238148 LDP X30, X21, [X31], #0x20
	0x0323814C BR X3
	0x03238150 LDP X20, X19, [X31 + 0x10]
	0x03238154 MOV W0, W31
	0x03238158 LDP X30, X21, [X31], #0x20
	0x0323815C RET
	0x03238160 BL 0x1C16F20
	0x03238164 STP X30, X21, [X31 - 0x20]!
	0x03238168 STP X20, X19, [X31 + 0x10]
	0x0323816C MOV X19, X0
	0x03238170 LDR X0, [X0 + 0x28]
	0x03238174 CBZ X0, 0x32381DC
	0x03238178 LDR X8, [X0]
	0x0323817C LDP X9, X1, [X8 + 0x158]
	0x03238180 BLR X9
	0x03238184 LDR X8, [X19 + 0x30]
	0x03238188 CBZ X8, 0x32381DC
	0x0323818C LDR X9, [X8]
	0x03238190 MOV W20, W0
	0x03238194 MOV X0, X8
	0x03238198 LDP X10, X1, [X9 + 0x158]
	0x0323819C BLR X10
	0x032381A0 LDR X8, [X19]
	0x032381A4 MOV W21, W0
	0x032381A8 MOV X0, X19
	0x032381AC LDR X9, [X8 + 0x328]
	0x032381B0 LDR X1, [X8 + 0x330]
	0x032381B4 BLR X9
	0x032381B8 LDRB W8, [X19 + 0x38]
	0x032381BC LDRB W9, [X19 + 0x3A]
	0x032381C0 ADD W10, W21, W20
	0x032381C4 LDP X20, X19, [X31 + 0x10]
	0x032381C8 ADD W10, W10, W0
	0x032381CC ADD W8, W10, W8, 0x2, LSL
	0x032381D0 ADD W0, W8, W9, 0x3, LSL
	0x032381D4 LDP X30, X21, [X31], #0x20
	0x032381D8 RET
	0x032381DC BL 0x1C16F20
	0x032381E0 STR X30, [X31 - 0x30]!
	0x032381E4 STP X22, X21, [X31 + 0x10]
	0x032381E8 STP X20, X19, [X31 + 0x20]
	0x032381EC ADRP X19, 0x11A4000
	0x032381F0 ADRP X20, 0xEEA000
	0x032381F4 ADRP X21, 0xEBB000
	0x032381F8 LDRB W8, [X19 + 0x3F3]
	0x032381FC LDR X20, [X20 + 0x6F8]
	0x03238200 LDR X21, [X21 + 0x618]
	0x03238204 TBNZ X8, 0x0, 0x3238228
	0x03238208 ADRP X0, 0xEBB000
	0x0323820C LDR X0, [X0 + 0x618]
	0x03238210 BL 0x1C16CF4
	0x03238214 ADRP X0, 0xEEA000
	0x03238218 LDR X0, [X0 + 0x6F8]
	0x0323821C BL 0x1C16CF4
	0x03238220 MOVZ W8, 0x1
	0x03238224 STRB W8, [X19 + 0x3F3]
	0x03238228 LDR X0, [X20]
	0x0323822C BL 0x1C16F10
	0x03238230 MOVZ W1, 0x2EE0
	0x03238234 MOV X2, X31
	0x03238238 MOV X19, X0
	0x0323823C BL 0x3241B10
	0x03238240 MOVZ W22, 0x1
	0x03238244 STRB W31, [X19 + 0x3A]
	0x03238248 STRH W22, [X19 + 0x38]
	0x0323824C LDR X8, [X20]
	0x03238250 LDR X8, [X8 + 0xB8]
	0x03238254 STR X19, [X8]
	0x03238258 LDR X0, [X20]
	0x0323825C BL 0x1C16F10
	0x03238260 MOVZ W1, 0x2EE1
	0x03238264 MOV X2, X31
	0x03238268 MOV X19, X0
	0x0323826C BL 0x3241B10
	0x03238270 STRB W22, [X19 + 0x3A]
	0x03238274 STRH W22, [X19 + 0x38]
	0x03238278 LDR X8, [X20]
	0x0323827C MOVZ W1, 0x4
	0x03238280 LDR X8, [X8 + 0xB8]
	0x03238284 STR X19, [X8 + 0x8]
	0x03238288 LDR X0, [X21]
	0x0323828C BL 0x1C16D6C
	0x03238290 CBZ X0, 0x3238314
	0x03238294 LDR W8, [X0 + 0x18]
	0x03238298 CMP W8, 0x2
	0x0323829C B.LS 0x3238310
	0x032382A0 MOVZ W9, 0xFE
	0x032382A4 CMP W8, 0x3
	0x032382A8 STRB W9, [X0 + 0x22]
	0x032382AC B.EQ 0x3238310
	0x032382B0 MOVZ W8, 0xFF
	0x032382B4 STRB W8, [X0 + 0x23]
	0x032382B8 LDR X8, [X20]
	0x032382BC MOVZ W1, 0x4
	0x032382C0 LDR X8, [X8 + 0xB8]
	0x032382C4 STR X0, [X8 + 0x10]
	0x032382C8 LDR X0, [X21]
	0x032382CC BL 0x1C16D6C
	0x032382D0 CBZ X0, 0x3238314
	0x032382D4 LDR W8, [X0 + 0x18]
	0x032382D8 CBZ W8, 0x3238310
	0x032382DC MOVZ W9, 0xFF
	0x032382E0 CMP W8, 0x1
	0x032382E4 STRB W9, [X0 + 0x20]
	0x032382E8 B.EQ 0x3238310
	0x032382EC MOVZ W8, 0xFE
	0x032382F0 STRB W8, [X0 + 0x21]
	0x032382F4 LDR X8, [X20]
	0x032382F8 LDP X20, X19, [X31 + 0x20]
	0x032382FC LDP X22, X21, [X31 + 0x10]
	0x03238300 LDR X8, [X8 + 0xB8]
	0x03238304 STR X0, [X8 + 0x18]
	0x03238308 LDR X30, [X31], #0x30
	0x0323830C RET
	0x03238310 BL 0x1C16F28
	0x03238314 BL 0x1C16F20
	0x03238318 MOV X8, X0
	0x0323831C LDR X0, [X0 + 0x18]
	0x03238320 STR X31, [X8 + 0x30]
	0x03238324 CBZ X0, 0x3238334
	0x03238328 LDR X8, [X0]
	0x0323832C LDP X2, X1, [X8 + 0x198]
	0x03238330 BR X2
	0x03238334 RET
	0x03238338 LDR W8, [X0 + 0x34]
	0x0323833C CMP W8, 0x0
	0x03238340 CSET W0, NE
	0x03238344 RET
	0x03238348 STP X30, X19, [X31 - 0x10]!
	0x0323834C MOVZ W1, 0xFDE8
	0x03238350 MOV X2, X31
	0x03238354 MOV X19, X0
	0x03238358 BL 0x3241B10
	0x0323835C STRB W31, [X19 + 0x50]
	0x03238360 MOV X0, X19
	0x03238364 LDP X30, X19, [X31], #0x10
	0x03238368 B 0x323839C
	0x0323836C STR X30, [X31 - 0x20]!
	0x03238370 STP X20, X19, [X31 + 0x10]
	0x03238374 AND W20, W1, 0x1
	0x03238378 MOVZ W1, 0xFDE8
	0x0323837C MOV X2, X31
	0x03238380 MOV X19, X0
	0x03238384 BL 0x3241B10
	0x03238388 STRB W20, [X19 + 0x50]
	0x0323838C MOV X0, X19
	0x03238390 LDP X20, X19, [X31 + 0x10]
	0x03238394 LDR X30, [X31], #0x20
	0x03238398 B 0x323839C
	0x0323839C STR X30, [X31 - 0x50]!
	0x032383A0 STP X26, X25, [X31 + 0x10]
	0x032383A4 STP X24, X23, [X31 + 0x20]
	0x032383A8 STP X22, X21, [X31 + 0x30]
	0x032383AC STP X20, X19, [X31 + 0x40]
	0x032383B0 ADRP X20, 0x11A4000
	0x032383B4 ADRP X21, 0xEBB000
	0x032383B8 ADRP X25, 0xEEA000
	0x032383BC LDRB W8, [X20 + 0x3F4]
	0x032383C0 LDR X21, [X21 + 0x618]
	0x032383C4 LDR X25, [X25 + 0x700]
	0x032383C8 MOV X19, X0
	0x032383CC TBNZ X8, 0x0, 0x3238420
	0x032383D0 ADRP X0, 0xEBD000
	0x032383D4 LDR X0, [X0 + 0x9B8]
	0x032383D8 BL 0x1C16CF4
	0x032383DC ADRP X0, 0xEBB000
	0x032383E0 LDR X0, [X0 + 0x618]
	0x032383E4 BL 0x1C16CF4
	0x032383E8 ADRP X0, 0xEEA000
	0x032383EC LDR X0, [X0 + 0x708]
	0x032383F0 BL 0x1C16CF4
	0x032383F4 ADRP X0, 0xEEA000
	0x032383F8 LDR X0, [X0 + 0x700]
	0x032383FC BL 0x1C16CF4
	0x03238400 ADRP X0, 0xEEA000
	0x03238404 LDR X0, [X0 + 0x710]
	0x03238408 BL 0x1C16CF4
	0x0323840C ADRP X0, 0xEEA000
	0x03238410 LDR X0, [X0 + 0x718]
	0x03238414 BL 0x1C16CF4
	0x03238418 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X20, 0x11A5000
	015 Move W8, [X20+1003]
	016 Move X19, X5
	017 Move W26, W4
	018 Move X27, X3
	019 Move W24, W2
	020 Move X28, X1
	021 Move X22, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0xEBE000
	027 Move X0, [X0+368]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1003], W8
	031 Move [X31+24], X31
	032 Compare X19, 0
	033 JumpIfEqual {87}
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Move X0, X19
	036 Move X1, X31
	037 Call Encoder.get_FallbackBuffer, X0
	038 Move W8, [X19+49]
	039 Move X23, X0
	040 Compare W8, 0
	041 JumpIfEqual {96}
	042 Compare X23, 0
	043 JumpIfEqual {276}
	044 Move X8, [X23]
	045 Move X0, X23
	046 Move X9, [X8+440]
	047 Move X1, [X8+448]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X8, [X22]
	051 Move X0, X22
	052 Move X9, [X8+440]
	053 Move X1, [X8+448]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move X20, X0
	056 Move X0, X19
	057 Call 0x19913C0
	058 Move X19, [X19+16]
	059 Move X0, X19
	060 Call 0x19913C0
	061 Move X0, X19
	062 Move X1, X31
	063 Call "il2cpp_vm_object_is_inst", X0
	064 Move X19, X0
	065 Move X0, 0xEEB000
	066 Move X0, [X0+1712]
	067 Call 0x1C17D08
	068 Move X1, X20
	069 Move X2, X19
	070 Move X3, X31
	071 Call SR.Format, X0, X1, X2
	072 Move X19, X0
	073 Move X0, 0xEC4000
	074 Move X0, [X0+1400]
	075 Call 0x1C17D08
	076 Call 0x1C17F10
	077 Move X1, X19
	078 Move X2, X31
	079 Move X20, X0
	080 Call ArgumentException..ctor, X0, X1
	081 Move X0, 0xEEB000
	082 Move X0, [X0+1728]
	083 Call 0x1C17D08
	084 Move X1, X0
	085 Move X0, X20
	086 Call 0x1C17DEC
	087 Move X0, [X22+40]
	088 Compare X0, 0
	089 JumpIfEqual {276}
	090 Move X8, [X0]
	091 Move X9, [X8+376]
	092 Move X1, [X8+384]
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X23, X0
	095 Move W25, W31
	096 Compare X23, 0
	097 JumpIfEqual {276}
	098 Move X29, 0xEBE000
	099 Move X29, [X29+368]
	100 Add X24, X28, W24
	101 Move W4, 1
	102 Move X0, X23
	103 Move X1, X28
	104 Move X2, X24
	105 Move X3, X19
	106 Move X5, X31
	107 Add X20, X27, W26
	108 Call EncoderFallbackBuffer.InternalInitialize, X0, X1, X2, X3, X4
	109 Move W21, 0x2400
	110 NotImplemented "Instruction MOVK not yet implemented."
	111 Move [X31+8], X28
	112 Move [X31+16], X27
	113 Move X0, X23
	114 Move X1, X31
	115 Call EncoderFallbackBuffer.InternalGetNextChar, X0
	116 And W31, W0, 0xFFFF
	117 Move W26, W0
	118 NotImplemented "Instruction CMP not yet implemented."
	119 NotImplemented "Instruction LDRH not yet implemented."
	120 Move X0, [X29]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move W0, W26
	126 And W31, W25, 0xFFFF
	127 Move X1, X31
	128 Call Char.IsLowSurrogate, X0
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {181}
	133 Add X8, X27, 3
	134 NotImplemented "Instruction CMP not yet implemented."
	135 And W8, W25, 0xFFFF
	136 Move W11, [X22+58]
	137 Move W8, W8
	138 ShiftRight W8, 22
	139 And W8, W8, 0x1FFFFF
	140 Add W8, W8, W26
	141 Add W8, W8, W21
	142 Move W9, W8
	143 ShiftRight W9, 8
	144 And W9, W9, 0x7FFFFFFF
	145 Move W10, W8
	146 ShiftRight W10, 16
	147 And W10, W10, 0x7FFFFFFF
	148 Move W25, W31
	149 Compare W11, 0
	150 JumpIfEqual {189}
	151 Move [X27+2], W9
	152 Add X9, X27, 4
	153 Move [X27], W31
	154 Move [X27+1], W10
	155 Move [X27+3], W8
	156 Move X27, X9
	157 Move X1, X31
	158 Call Char.IsHighSurrogate, X0
	159 Move W25, W26
	160 Move TEMP, X0
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfEqual {113}
	164 Move X0, [X29]
	165 Move W8, [X0+224]
	166 Compare W8, 0
	167 JumpIfNotEqual {169}
	168 Call 0x1C17DFC
	169 Move W0, W26
	170 Move X1, X31
	171 Call Char.IsLowSurrogate, X0
	172 Move TEMP, X0
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfNotEqual {195}
	176 Move [X31+24], X28
	177 Move X8, [X23]
	178 Add X2, X31, 24
	179 Move X0, X23
	180 Move W1, W26
	181 Subtract X8, X28, 2
	182 Move [X31+24], X8
	183 And W31, W25, 0xFFFF
	184 Compare X19, 0
	185 Invalid "Jump target not found in method."
	186 Move W8, [X19+48]
	187 Compare W8, 0
	188 JumpIfNotEqual {209}
	189 Move [X27], W8
	190 Add X8, X27, 4
	191 Move [X27+1], W9
	192 Move [X27+2], W10
	193 Move [X27+3], W31
	194 Move X27, X8
	195 Add X8, X27, 3
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Move W9, [X22+58]
	198 Move W8, W26
	199 ShiftRight W8, 8
	200 And W8, W8, 0x7FFFFFFF
	201 Move W25, W31
	202 Compare W9, 0
	203 JumpIfEqual {219}
	204 Move [X27+2], W8
	205 Add X8, X27, 4
	206 NotImplemented "Instruction STRH not yet implemented."
	207 Move [X27+3], W26
	208 Move X27, X8
	209 Move [X31+24], X28
	210 Move X8, [X23]
	211 Add X2, X31, 24
	212 Move X0, X23
	213 Move W1, W25
	214 Move X9, [X8+472]
	215 Move X3, [X8+480]
	216 NotImplemented "Instruction BLR not yet implemented."
	217 Move X28, [X31+24]
	218 Move W25, W31
	219 Move [X27], W26
	220 Move [X27+1], W8
	221 NotImplemented "Instruction STRH not yet implemented."
	222 Add X27, X27, 4
	223 Move W8, [X23+42]
	224 Compare W8, 0
	225 JumpIfEqual {231}
	226 Move X8, [X23]
	227 Move X0, X23
	228 Move X9, [X8+424]
	229 Move X1, [X8+432]
	230 NotImplemented "Instruction BLR not yet implemented."
	231 Subtract X28, X28, 4
	232 Move W8, [X23+42]
	233 Compare W8, 0
	234 JumpIfEqual {275}
	235 Move X8, [X23]
	236 Move X0, X23
	237 Move X9, [X8+424]
	238 Move X1, [X8+432]
	239 NotImplemented "Instruction BLR not yet implemented."
	240 Move X8, [X31+16]
	241 Move X0, X22
	242 Move X1, X19
	243 Move X3, X31
	244 NotImplemented "Instruction CMP not yet implemented."
	245 NotImplemented "Instruction CSET not yet implemented."
	246 Call Encoding.ThrowBytesOverflow, X0, X1, X2
	247 Compare X19, 0
	248 JumpIfEqual {259}
	249 Move W25, W31
	250 Move X8, [X31+8]
	251 NotImplemented "Instruction STRH not yet implemented."
	252 Subtract X8, X28, X8
	253 NotImplemented "Instruction CMP not yet implemented."
	254 NotImplemented "Instruction CINC not yet implemented."
	255 Move X8, X8
	256 ShiftRight X8, 1
	257 And X8, X8, 0x7FFFFFFF
	258 Move [X19+52], W8
	259 Move X8, [X31+16]
	260 Move X20, [X31+112]
	261 Move X19, [X31+120]
	262 Move X22, [X31+96]
	263 Move X21, [X31+104]
	264 Move X24, [X31+80]
	265 Move X23, [X31+88]
	266 Subtract W0, W27, W8
	267 Move X26, [X31+64]
	268 Move X25, [X31+72]
	269 Move X28, [X31+48]
	270 Move X27, [X31+56]
	271 Move X29, [X31+32]
	272 Move X30, [X31+40]
	273 Add X31, X31, 128
	274 Return X0
	275 Subtract X28, X28, 2
	276 Call 0x1C17F20

Method: System.Int32 GetCharCount(System.Byte* bytes, System.Int32 count, System.Text.DecoderNLS baseDecoder)

Disassembly:
	0x03238438 CBZ X0, 0x3238600
	0x0323843C ADRP X26, 0xEEA000
	0x03238440 ADRP X24, 0xEBD000
	0x03238444 ADRP X23, 0xEEA000
	0x03238448 ADRP X22, 0xEEA000
	0x0323844C LDR X26, [X26 + 0x708]
	0x03238450 LDR X24, [X24 + 0x9B8]
	0x03238454 LDR X23, [X23 + 0x710]
	0x03238458 LDR X22, [X22 + 0x718]
	0x0323845C MOV X20, X31
	0x03238460 MOV W1, W20
	0x03238464 MOV X2, X31
	0x03238468 BL 0x3222A1C
	0x0323846C CBZ X21, 0x3238600
	0x03238470 LDR W8, [X21 + 0x18]
	0x03238474 CMP X20, X8
	0x03238478 B.CS 0x323861C
	0x0323847C ADD X8, X21, X20
	0x03238480 CMP X20, 0x3F
	0x03238484 STRB W0, [X8 + 0x20]
	0x03238488 B.EQ 0x32384A0
	0x0323848C LDR X0, [X25]
	0x03238490 LDR X21, [X19 + 0x38]
	0x03238494 ADD X20, X20, 0x1
	0x03238498 CBNZ X0, 0x3238460
	0x0323849C B 0x3238600
	0x032384A0 LDR X0, [X26]
	0x032384A4 MOVZ W1, 0x80
	0x032384A8 BL 0x1C16D6C
	0x032384AC STR X0, [X19 + 0x40]
	0x032384B0 CBZ X0, 0x3238600
	0x032384B4 MOV X8, X31
	0x032384B8 MOVZ W9, 0xFF
	0x032384BC LDR W10, [X0 + 0x18]
	0x032384C0 CMP X8, X10
	0x032384C4 B.CS 0x323861C
	0x032384C8 ADD X10, X0, X8
	0x032384CC CMP X8, 0x7F
	0x032384D0 STRB W9, [X10 + 0x20]
	0x032384D4 B.EQ 0x32384E8
	0x032384D8 LDR X0, [X19 + 0x40]
	0x032384DC ADD X8, X8, 0x1
	0x032384E0 CBNZ X0, 0x32384BC
	0x032384E4 B 0x3238600
	0x032384E8 MOV X8, X31
	0x032384EC LDR X9, [X19 + 0x38]
	0x032384F0 CBZ X9, 0x3238600
	0x032384F4 LDR W10, [X9 + 0x18]
	0x032384F8 CMP X8, X10
	0x032384FC B.CS 0x323861C
	0x03238500 LDR X10, [X19 + 0x40]
	0x03238504 CBZ X10, 0x3238600
	0x03238508 ADD X9, X9, X8
	0x0323850C LDRB W9, [X9 + 0x20]
	0x03238510 LDR W11, [X10 + 0x18]
	0x03238514 CMP W9, W11
	0x03238518 B.CS 0x323861C
	0x0323851C ADD X9, X10, X9
	0x03238520 STRB W8, [X9 + 0x20]
	0x03238524 ADD X8, X8, 0x1
	0x03238528 CMP X8, 0x40
	0x0323852C B.NE 0x32384EC
	0x03238530 LDR X0, [X24]
	0x03238534 MOVZ W1, 0x80
	0x03238538 BL 0x1C16D6C
	0x0323853C STR X0, [X19 + 0x48]
	0x03238540 MOV X20, X0
	0x03238544 LDR X0, [X23]
	0x03238548 CBZ X0, 0x3238600
	0x0323854C LDR W24, [X0 + 0x10]
	0x03238550 CMP W24, 0x1
	0x03238554 B.LT 0x32385A0
	0x03238558 MOV W21, W31
	0x0323855C MOVZ W25, 0x1
	0x03238560 MOV W1, W21
	0x03238564 MOV X2, X31
	0x03238568 BL 0x3222A1C
	0x0323856C CBZ X20, 0x3238600
	0x03238570 LDR W8, [X20 + 0x18]
	0x03238574 CMP W8, W0, UXTH
	0x03238578 B.LS 0x323861C
	0x0323857C ADD W21, W21, 0x1
	0x03238580 ADD X8, X20, W0, UXTH
	0x03238584 CMP W24, W21
	0x03238588 STRB W25, [X8 + 0x20]
	0x0323858C B.EQ 0x32385A0
	0x03238590 LDR X0, [X23]
	0x03238594 LDR X20, [X19 + 0x48]
	0x03238598 CBNZ X0, 0x3238560
	0x0323859C B 0x3238600
	0x032385A0 LDRB W8, [X19 + 0x50]
	0x032385A4 CBZ W8, 0x3238604
	0x032385A8 LDR X0, [X22]
	0x032385AC CBZ X0, 0x3238600
	0x032385B0 LDR W21, [X0 + 0x10]
	0x032385B4 CMP W21, 0x1
	0x032385B8 B.LT 0x3238604
	0x032385BC MOV W20, W31
	0x032385C0 MOVZ W23, 0x1
	0x032385C4 LDR X24, [X19 + 0x48]
	0x032385C8 MOV W1, W20
	0x032385CC MOV X2, X31
	0x032385D0 BL 0x3222A1C
	0x032385D4 CBZ X24, 0x3238600
	0x032385D8 LDR W8, [X24 + 0x18]
	0x032385DC CMP W8, W0, UXTH
	0x032385E0 B.LS 0x323861C
	0x032385E4 ADD W20, W20, 0x1
	0x032385E8 ADD X8, X24, W0, UXTH
	0x032385EC CMP W21, W20
	0x032385F0 STRB W23, [X8 + 0x20]
	0x032385F4 B.EQ 0x3238604
	0x032385F8 LDR X0, [X22]
	0x032385FC CBNZ X0, 0x32385C4
	0x03238600 BL 0x1C16F20
	0x03238604 LDP X20, X19, [X31 + 0x40]
	0x03238608 LDP X22, X21, [X31 + 0x30]
	0x0323860C LDP X24, X23, [X31 + 0x20]
	0x03238610 LDP X26, X25, [X31 + 0x10]
	0x03238614 LDR X30, [X31], #0x50
	0x03238618 RET
	0x0323861C BL 0x1C16F28
	0x03238620 STP X30, X23, [X31 - 0x30]!
	0x03238624 STP X22, X21, [X31 + 0x10]
	0x03238628 STP X20, X19, [X31 + 0x20]
	0x0323862C ADRP X20, 0x11A4000
	0x03238630 ADRP X23, 0xEBD000
	0x03238634 ADRP X21, 0xEEA000
	0x03238638 ADRP X22, 0xEEA000
	0x0323863C LDRB W8, [X20 + 0x3F5]
	0x03238640 LDR X23, [X23 + 0x278]
	0x03238644 LDR X21, [X21 + 0x368]
	0x03238648 LDR X22, [X22 + 0x720]
	0x0323864C MOV X19, X0
	0x03238650 TBNZ X8, 0x0, 0x3238680
	0x03238654 ADRP X0, 0xEEA000
	0x03238658 LDR X0, [X0 + 0x720]
	0x0323865C BL 0x1C16CF4
	0x03238660 ADRP X0, 0xEEA000
	0x03238664 LDR X0, [X0 + 0x368]
	0x03238668 BL 0x1C16CF4
	0x0323866C ADRP X0, 0xEBD000
	0x03238670 LDR X0, [X0 + 0x278]
	0x03238674 BL 0x1C16CF4
	0x03238678 MOVZ W8, 0x1
	0x0323867C STRB W8, [X20 + 0x3F5]
	0x03238680 LDR X8, [X23]
	0x03238684 LDR X0, [X21]
	0x03238688 LDR X8, [X8 + 0xB8]
	0x0323868C LDR X20, [X8]
	0x03238690 BL 0x1C16F10
	0x03238694 MOV X1, X20
	0x03238698 MOV X21, X0
	0x0323869C BL 0x322F374
	0x032386A0 STR X21, [X19 + 0x28]
	0x032386A4 LDR X0, [X22]
	0x032386A8 BL 0x1C16F10
	0x032386AC MOV X1, X31
	0x032386B0 MOV X20, X0
	0x032386B4 BL 0x33FD198
	0x032386B8 STR X20, [X19 + 0x30]
	0x032386BC LDP X20, X19, [X31 + 0x20]
	0x032386C0 LDP X22, X21, [X31 + 0x10]
	0x032386C4 LDP X30, X23, [X31], #0x30
	0x032386C8 RET
	0x032386CC MOV X1, X31
	0x032386D0 B 0x33FD198
	0x032386D4 STP X30, X21, [X31 - 0x20]!
	0x032386D8 STP X20, X19, [X31 + 0x10]
	0x032386DC ADRP X21, 0x11A4000
	0x032386E0 LDRB W8, [X21 + 0x3F6]
	0x032386E4 MOV X20, X1
	0x032386E8 MOV X19, X0
	0x032386EC TBNZ X8, 0x0, 0x3238704
	0x032386F0 ADRP X0, 0xEEA000
	0x032386F4 LDR X0, [X0 + 0x728]
	0x032386F8 BL 0x1C16CF4
	0x032386FC MOVZ W8, 0x1
	0x03238700 STRB W8, [X21 + 0x3F6]
	0x03238704 CBZ X20, 0x3238790
	0x03238708 ADRP X8, 0xEEA000
	0x0323870C LDR X8, [X8 + 0x728]
	0x03238710 LDR X9, [X20]
	0x03238714 LDR X8, [X8]
	0x03238718 LDRB W11, [X9 + 0x130]
	0x0323871C LDRB W10, [X8 + 0x130]
	0x03238720 CMP W11, W10
	0x03238724 B.CC 0x3238790
	0x03238728 LDR X9, [X9 + 0xC8]
	0x0323872C ADD X9, X9, X10, 0x3, LSL
	0x03238730 LDUR X9, [X9 - 0x8]
	0x03238734 CMP X9, X8
	0x03238738 CSEL X20, X20, X31, EQ
	0x0323873C B.NE 0x3238790
	0x03238740 CBZ X20, 0x32387A0
	0x03238744 LDRB W8, [X19 + 0x50]
	0x03238748 LDRB W9, [X20 + 0x50]
	0x0323874C CMP W8, W9
	0x03238750 B.NE 0x3238790
	0x03238754 LDR X0, [X19 + 0x28]
	0x03238758 CBZ X0, 0x32387A0
	0x0323875C LDR X8, [X0]
	0x03238760 LDR X1, [X20 + 0x28]
	0x03238764 LDP X9, X2, [X8 + 0x138]
	0x03238768 BLR X9
	0x0323876C TBZ X0, 0x0, 0x3238790

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0x11A5000
	014 Move W8, [X21+1004]
	015 Move X23, X3
	016 Move W20, W2
	017 Move X19, X1
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xEBC000
	024 Move X0, [X0+1560]
	025 Call 0x1C17CF4
	026 Move X0, 0xEEB000
	027 Move X0, [X0+1736]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+1004], W8
	031 Compare X23, 0
	032 JumpIfEqual {47}
	033 Move X8, 0xEEB000
	034 Move X8, [X8+1736]
	035 Move X1, [X8]
	036 Move X8, [X23]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W25, [X23+48]
	039 Move W24, [X23+52]
	040 Move X0, X23
	041 Move X1, X31
	042 Add X26, X19, W20
	043 Call Decoder.get_FallbackBuffer, X0
	044 Move X20, X0
	045 Compare X20, 0
	046 JumpIfNotEqual {60}
	047 Move X0, [X22+48]
	048 Compare X0, 0
	049 JumpIfEqual {214}
	050 Move X8, [X0]
	051 Add X26, X19, W20
	052 Move X9, [X8+376]
	053 Move X1, [X8+384]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move X20, X0
	056 Move W25, W31
	057 Move W24, W31
	058 Compare X20, 0
	059 JumpIfEqual {214}
	060 Move X27, 0xEBC000
	061 Move X27, [X27+1560]
	062 Move X0, X20
	063 Move X1, X19
	064 Move X2, X31
	065 Move X3, X31
	066 Call DecoderFallbackBuffer.InternalInitialize, X0, X1, X2
	067 Move W21, W31
	068 Move W9, 0xD800
	069 Move TEMP, X21
	070 And TEMP, TEMP, -2147483648
	071 Compare TEMP, -2147483648
	072 JumpIfEqual {144}
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move W28, [X22+58]
	075 Compare W28, 0
	076 JumpIfEqual {80}
	077 Move W8, [X19]
	078 NotImplemented "Instruction BFM not yet implemented."
	079 Move W25, W8
	080 Move W8, [X19]
	081 NotImplemented "Instruction EXTR not yet implemented."
	082 Add W24, W24, 1
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Add X19, X19, 1
	085 Move W29, W25
	086 ShiftRight W29, 16
	087 And W29, W29, 0x7FFFFFFF
	088 NotImplemented "Instruction CMP not yet implemented."
	089 And W8, W25, 0xFFFFF800
	090 NotImplemented "Instruction CMP not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 NotImplemented "Instruction CINC not yet implemented."
	093 Move W25, W31
	094 Move W24, W31
	095 Add W21, W8, 1
	096 Move X0, [X27]
	097 Move W1, 4
	098 Call 0x1C17D6C
	099 Compare X0, 0
	100 JumpIfEqual {214}
	101 Move W8, [X0+24]
	102 Move X1, X0
	103 Compare W28, 0
	104 JumpIfEqual {119}
	105 Compare W8, 0
	106 JumpIfEqual {213}
	107 Move W9, W25
	108 ShiftRight W9, 24
	109 And W9, W9, 0x7FFFFFFF
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move [X1+32], W9
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move [X1+33], W29
	114 Move W9, W25
	115 ShiftRight W9, 8
	116 And W9, W9, 0x7FFFFFFF
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move [X1+34], W9
	119 Compare W8, 0
	120 JumpIfEqual {213}
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move [X1+32], W25
	123 Move W9, W25
	124 ShiftRight W9, 8
	125 And W9, W9, 0x7FFFFFFF
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move [X1+33], W9
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move [X1+34], W29
	130 Move W25, W25
	131 ShiftRight W25, 24
	132 And W25, W25, 0x7FFFFFFF
	133 Move [X1+35], W25
	134 Move X8, [X20]
	135 Move X0, X20
	136 Move X2, X19
	137 Move X9, [X8+440]
	138 Move X3, [X8+448]
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Move W25, W31
	141 Move W24, W31
	142 Add W21, W0, W21
	143 Move W9, 0xD800
	144 Subtract W26, W24, 1
	145 Compare X23, 0
	146 JumpIfEqual {150}
	147 Move W8, [X23+40]
	148 Compare W8, 0
	149 JumpIfEqual {195}
	150 Move X0, [X27]
	151 Move W1, W24
	152 Call 0x1C17D6C
	153 Move W8, [X22+58]
	154 Move X1, X0
	155 Compare W8, 0
	156 JumpIfEqual {171}
	157 Compare X1, 0
	158 JumpIfEqual {214}
	159 Move W8, [X1+24]
	160 Move W9, W24
	161 Add X9, X9, 1
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Add X10, X1, W26
	164 Subtract X9, X9, 1
	165 Move [X10+32], W25
	166 Move W25, W25
	167 ShiftRight W25, 8
	168 And W25, W25, 0x7FFFFFFF
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Subtract W26, W26, 1
	171 Compare X1, 0
	172 JumpIfEqual {214}
	173 Move W8, [X1+24]
	174 Move W9, W24
	175 Add X9, X9, 1
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Subtract X9, X9, 1
	178 Move W10, W25
	179 ShiftRight W10, 24
	180 And W10, W10, 0x7FFFFFFF
	181 Add X11, X1, W26
	182 Move W25, W25
	183 ShiftRight W25, 24
	184 And W25, W25, 0x7FFFFF
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Subtract W26, W26, 1
	187 Move [X11+32], W10
	188 Move X8, [X20]
	189 Move X0, X20
	190 Move X2, X19
	191 Move X9, [X8+440]
	192 Move X3, [X8+448]
	193 NotImplemented "Instruction BLR not yet implemented."
	194 Add W21, W0, W21
	195 Move TEMP, X21
	196 And TEMP, TEMP, -2147483648
	197 Compare TEMP, -2147483648
	198 JumpIfEqual {215}
	199 Move W0, W21
	200 Move X20, [X31+80]
	201 Move X19, [X31+88]
	202 Move X22, [X31+64]
	203 Move X21, [X31+72]
	204 Move X24, [X31+48]
	205 Move X23, [X31+56]
	206 Move X26, [X31+32]
	207 Move X25, [X31+40]
	208 Move X28, [X31+16]
	209 Move X27, [X31+24]
	210 Move X29, [X31+96]
	211 Move X30, [X31+104]
	212 Return X0
	213 Call 0x1C17F28
	214 Call 0x1C17F20
	215 Move X0, 0xEC4000
	216 Move X0, [X0+1888]
	217 Call 0x1C17D08
	218 Call 0x1C17F10
	219 Move X19, X0
	220 Move X0, 0xEE4000
	221 Move X0, [X0+1608]
	222 Call 0x1C17D08
	223 Move X20, X0
	224 Move X0, 0xEEB000
	225 Move X0, [X0+1056]
	226 Call 0x1C17D08
	227 Move X2, X0
	228 Move X0, X19
	229 Move X1, X20
	230 Move X3, X31
	231 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	232 Move X0, 0xEEB000
	233 Move X0, [X0+1744]
	234 Call 0x1C17D08
	235 Move X1, X0
	236 Move X0, X19
	237 Call 0x1C17DEC
	238 Move X0, X23
	239 Call 0x1C181E0

Method: System.Int32 GetChars(System.Byte* bytes, System.Int32 byteCount, System.Char* chars, System.Int32 charCount, System.Text.DecoderNLS baseDecoder)

Disassembly:
	0x03238770 LDR X0, [X19 + 0x30]
	0x03238774 CBZ X0, 0x32387A0
	0x03238778 LDR X8, [X0]
	0x0323877C LDR X1, [X20 + 0x30]
	0x03238780 LDP X20, X19, [X31 + 0x10]
	0x03238784 LDP X3, X2, [X8 + 0x138]
	0x03238788 LDP X30, X21, [X31], #0x20
	0x0323878C BR X3
	0x03238790 LDP X20, X19, [X31 + 0x10]
	0x03238794 MOV W0, W31
	0x03238798 LDP X30, X21, [X31], #0x20
	0x0323879C RET
	0x032387A0 BL 0x1C16F20
	0x032387A4 STR X30, [X31 - 0x20]!
	0x032387A8 STP X20, X19, [X31 + 0x10]
	0x032387AC LDR X8, [X0]
	0x032387B0 MOV X20, X0
	0x032387B4 LDR X9, [X8 + 0x328]
	0x032387B8 LDR X1, [X8 + 0x330]
	0x032387BC BLR X9
	0x032387C0 LDR X8, [X20 + 0x28]
	0x032387C4 CBZ X8, 0x323880C
	0x032387C8 LDR X9, [X8]
	0x032387CC MOV W19, W0
	0x032387D0 MOV X0, X8
	0x032387D4 LDP X10, X1, [X9 + 0x158]
	0x032387D8 BLR X10
	0x032387DC LDR X8, [X20 + 0x30]
	0x032387E0 CBZ X8, 0x323880C
	0x032387E4 LDR X9, [X8]
	0x032387E8 MOV W20, W0
	0x032387EC MOV X0, X8
	0x032387F0 LDP X10, X1, [X9 + 0x158]
	0x032387F4 BLR X10
	0x032387F8 ADD W8, W20, W19
	0x032387FC LDP X20, X19, [X31 + 0x10]
	0x03238800 ADD W0, W8, W0
	0x03238804 LDR X30, [X31], #0x20
	0x03238808 RET
	0x0323880C BL 0x1C16F20
	0x03238810 STR X30, [X31 - 0x20]!
	0x03238814 STP X20, X19, [X31 + 0x10]
	0x03238818 CBZ X1, 0x3238878
	0x0323881C TBNZ X3, 0x1F, 0x32388C0
	0x03238820 TBNZ X2, 0x1F, 0x32388C0
	0x03238824 LDR W8, [X1 + 0x18]
	0x03238828 SUB W9, W8, W2
	0x0323882C CMP W9, W3
	0x03238830 B.LT 0x323892C
	0x03238834 CBZ W3, 0x3238868
	0x03238838 LDR X9, [X0]
	0x0323883C LDP X20, X19, [X31 + 0x10]
	0x03238840 ADD X10, X1, 0x20
	0x03238844 CMP W8, 0x0
	0x03238848 LDR X5, [X9 + 0x228]
	0x0323884C LDR X4, [X9 + 0x230]
	0x03238850 CSEL X8, X31, X10, EQ
	0x03238854 ADD X1, X8, W2, 0x1, SXTW
	0x03238858 MOV W2, W3
	0x0323885C MOV X3, X31
	0x03238860 LDR X30, [X31], #0x20
	0x03238864 BR X5
	0x03238868 LDP X20, X19, [X31 + 0x10]
	0x0323886C MOV W0, W31
	0x03238870 LDR X30, [X31], #0x20
	0x03238874 RET
	0x03238878 ADRP X0, 0xEC0000
	0x0323887C LDR X0, [X0 + 0x528]
	0x03238880 BL 0x1C16D08
	0x03238884 BL 0x1C16F10
	0x03238888 MOV X19, X0
	0x0323888C ADRP X0, 0xEEA000
	0x03238890 LDR X0, [X0 + 0x2D8]
	0x03238894 BL 0x1C16D08
	0x03238898 MOV X20, X0
	0x0323889C ADRP X0, 0xEEA000
	0x032388A0 LDR X0, [X0 + 0x2E0]
	0x032388A4 BL 0x1C16D08
	0x032388A8 MOV X2, X0
	0x032388AC MOV X0, X19
	0x032388B0 MOV X1, X20
	0x032388B4 MOV X3, X31
	0x032388B8 BL 0x3315F7C
	0x032388BC B 0x3238970
	0x032388C0 ADRP X8, 0xEE3000
	0x032388C4 ADRP X9, 0xEC6000
	0x032388C8 LDR X8, [X8 + 0x648]
	0x032388CC LDR X9, [X9 + 0x130]
	0x032388D0 CMP W2, 0x0
	0x032388D4 CSEL X0, X9, X8, LT
	0x032388D8 BL 0x1C16D08
	0x032388DC MOV X19, X0
	0x032388E0 ADRP X0, 0xEC3000
	0x032388E4 LDR X0, [X0 + 0x760]
	0x032388E8 BL 0x1C16D08
	0x032388EC BL 0x1C16F10
	0x032388F0 MOV X20, X0
	0x032388F4 ADRP X0, 0xEE3000
	0x032388F8 LDR X0, [X0 + 0x670]
	0x032388FC BL 0x1C16D08
	0x03238900 MOV X2, X0
	0x03238904 MOV X0, X20
	0x03238908 MOV X1, X19
	0x0323890C MOV X3, X31
	0x03238910 BL 0x3311888
	0x03238914 ADRP X0, 0xEEA000
	0x03238918 LDR X0, [X0 + 0x730]
	0x0323891C BL 0x1C16D08
	0x03238920 MOV X1, X0
	0x03238924 MOV X0, X20
	0x03238928 BL 0x1C16DEC
	0x0323892C ADRP X0, 0xEC3000
	0x03238930 LDR X0, [X0 + 0x760]
	0x03238934 BL 0x1C16D08
	0x03238938 BL 0x1C16F10
	0x0323893C MOV X19, X0
	0x03238940 ADRP X0, 0xEEA000
	0x03238944 LDR X0, [X0 + 0x2D8]
	0x03238948 BL 0x1C16D08
	0x0323894C MOV X20, X0
	0x03238950 ADRP X0, 0xEEA000
	0x03238954 LDR X0, [X0 + 0xE0]
	0x03238958 BL 0x1C16D08
	0x0323895C MOV X2, X0
	0x03238960 MOV X0, X19
	0x03238964 MOV X1, X20
	0x03238968 MOV X3, X31
	0x0323896C BL 0x3311888
	0x03238970 ADRP X0, 0xEEA000
	0x03238974 LDR X0, [X0 + 0x730]
	0x03238978 BL 0x1C16D08
	0x0323897C MOV X1, X0
	0x03238980 MOV X0, X19
	0x03238984 BL 0x1C16DEC
	0x03238988 STR X30, [X31 - 0x20]!
	0x0323898C STP X20, X19, [X31 + 0x10]
	0x03238990 CBZ X1, 0x32389CC
	0x03238994 MOV X20, X0
	0x03238998 MOV X0, X31
	0x0323899C MOV X19, X1
	0x032389A0 BL 0x32C1424
	0x032389A4 LDR X8, [X20]
	0x032389A8 LDR W2, [X19 + 0x10]
	0x032389AC ADD X1, X19, W0, SXTW
	0x032389B0 MOV X0, X20
	0x032389B4 LDR X5, [X8 + 0x228]
	0x032389B8 LDR X4, [X8 + 0x230]
	0x032389BC LDP X20, X19, [X31 + 0x10]
	0x032389C0 MOV X3, X31
	0x032389C4 LDR X30, [X31], #0x20
	0x032389C8 BR X5
	0x032389CC ADRP X0, 0xEC0000
	0x032389D0 LDR X0, [X0 + 0x528]
	0x032389D4 BL 0x1C16D08
	0x032389D8 BL 0x1C16F10
	0x032389DC MOV X19, X0
	0x032389E0 ADRP X0, 0xEE4000
	0x032389E4 LDR X0, [X0 + 0xCC0]
	0x032389E8 BL 0x1C16D08
	0x032389EC MOV X1, X0
	0x032389F0 MOV X0, X19
	0x032389F4 MOV X2, X31
	0x032389F8 BL 0x330E100
	0x032389FC ADRP X0, 0xEEA000
	0x03238A00 LDR X0, [X0 + 0x738]
	0x03238A04 BL 0x1C16D08
	0x03238A08 MOV X1, X0
	0x03238A0C MOV X0, X19
	0x03238A10 BL 0x1C16DEC
	0x03238A14 STR X30, [X31 - 0x20]!
	0x03238A18 STP X20, X19, [X31 + 0x10]
	0x03238A1C CBZ X1, 0x3238A40
	0x03238A20 TBNZ X2, 0x1F, 0x3238A88
	0x03238A24 LDR X8, [X0]
	0x03238A28 LDP X20, X19, [X31 + 0x10]
	0x03238A2C MOV X3, X31
	0x03238A30 LDR X5, [X8 + 0x228]
	0x03238A34 LDR X4, [X8 + 0x230]
	0x03238A38 LDR X30, [X31], #0x20
	0x03238A3C BR X5
	0x03238A40 ADRP X0, 0xEC0000
	0x03238A44 LDR X0, [X0 + 0x528]
	0x03238A48 BL 0x1C16D08
	0x03238A4C BL 0x1C16F10
	0x03238A50 MOV X19, X0
	0x03238A54 ADRP X0, 0xEEA000
	0x03238A58 LDR X0, [X0 + 0x2D8]
	0x03238A5C BL 0x1C16D08
	0x03238A60 MOV X20, X0
	0x03238A64 ADRP X0, 0xEEA000
	0x03238A68 LDR X0, [X0 + 0x2E0]
	0x03238A6C BL 0x1C16D08
	0x03238A70 MOV X2, X0
	0x03238A74 MOV X0, X19
	0x03238A78 MOV X1, X20
	0x03238A7C MOV X3, X31
	0x03238A80 BL 0x3315F7C
	0x03238A84 B 0x3238ACC
	0x03238A88 ADRP X0, 0xEC3000
	0x03238A8C LDR X0, [X0 + 0x760]
	0x03238A90 BL 0x1C16D08
	0x03238A94 BL 0x1C16F10
	0x03238A98 MOV X19, X0
	0x03238A9C ADRP X0, 0xEE3000
	0x03238AA0 LDR X0, [X0 + 0x648]
	0x03238AA4 BL 0x1C16D08
	0x03238AA8 MOV X20, X0
	0x03238AAC ADRP X0, 0xEE3000
	0x03238AB0 LDR X0, [X0 + 0x670]
	0x03238AB4 BL 0x1C16D08
	0x03238AB8 MOV X2, X0
	0x03238ABC MOV X0, X19
	0x03238AC0 MOV X1, X20
	0x03238AC4 MOV X3, X31
	0x03238AC8 BL 0x3311888
	0x03238ACC ADRP X0, 0xEEA000
	0x03238AD0 LDR X0, [X0 + 0x740]
	0x03238AD4 BL 0x1C16D08
	0x03238AD8 MOV X1, X0
	0x03238ADC MOV X0, X19
	0x03238AE0 BL 0x1C16DEC
	0x03238AE4 STP X30, X27, [X31 - 0x50]!
	0x03238AE8 STP X26, X25, [X31 + 0x10]
	0x03238AEC STP X24, X23, [X31 + 0x20]
	0x03238AF0 STP X22, X21, [X31 + 0x30]
	0x03238AF4 STP X20, X19, [X31 + 0x40]
	0x03238AF8 ADRP X25, 0x11A4000
	0x03238AFC LDRB W8, [X25 + 0x3F7]
	0x03238B00 MOV W19, W5
	0x03238B04 MOV X24, X4
	0x03238B08 MOV W20, W3
	0x03238B0C MOV W21, W2
	0x03238B10 MOV X22, X1
	0x03238B14 MOV X23, X0
	0x03238B18 TBNZ X8, 0x0, 0x3238B3C
	0x03238B1C ADRP X0, 0xEE9000
	0x03238B20 LDR X0, [X0 + 0x830]
	0x03238B24 BL 0x1C16CF4
	0x03238B28 ADRP X0, 0xEEA000
	0x03238B2C LDR X0, [X0 + 0x2F8]
	0x03238B30 BL 0x1C16CF4
	0x03238B34 MOVZ W8, 0x1
	0x03238B38 STRB W8, [X25 + 0x3F7]
	0x03238B3C CBZ X22, 0x3238C0C
	0x03238B40 CBZ X24, 0x3238C0C
	0x03238B44 TBNZ X20, 0x1F, 0x3238C64
	0x03238B48 TBNZ X21, 0x1F, 0x3238C64
	0x03238B4C LDR W8, [X22 + 0x10]
	0x03238B50 SUB W8, W8, W21
	0x03238B54 CMP W8, W20
	0x03238B58 B.LT 0x3238CD0
	0x03238B5C TBNZ X19, 0x1F, 0x3238BDC
	0x03238B60 LDR W8, [X24 + 0x18]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X20, 0x11A5000
	015 Move W8, [X20+1005]
	016 Move X19, X5
	017 Move W26, W4
	018 Move X28, X3
	019 Move W23, W2
	020 Move X27, X1
	021 Move X22, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0xEBC000
	027 Move X0, [X0+1560]
	028 Call 0x1C17CF4
	029 Move X0, 0xEEB000
	030 Move X0, [X0+1736]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+1005], W8
	034 Move [X31+24], X31
	035 Compare X19, 0
	036 JumpIfEqual {42}
	037 Move X8, 0xEEB000
	038 Move X8, [X8+1736]
	039 Move X1, [X8]
	040 Move X8, [X19]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Compare X19, 0
	043 JumpIfEqual {52}
	044 Move W29, [X19+48]
	045 Move W25, [X19+52]
	046 Move X0, X19
	047 Move X1, X31
	048 Call Decoder.get_FallbackBuffer, X0
	049 Move X24, X0
	050 Compare X24, 0
	051 JumpIfNotEqual {64}
	052 Move X0, [X22+48]
	053 Compare X0, 0
	054 JumpIfEqual {290}
	055 Move X8, [X0]
	056 Move X9, [X8+376]
	057 Move X1, [X8+384]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X24, X0
	060 Move W29, W31
	061 Move W25, W31
	062 Compare X24, 0
	063 JumpIfEqual {290}
	064 Add X26, X28, W26
	065 Move X0, X24
	066 Move X1, X27
	067 Move X2, X26
	068 Move X3, X31
	069 Add X20, X27, W23
	070 Call DecoderFallbackBuffer.InternalInitialize, X0, X1, X2
	071 Subtract X10, X26, 2
	072 Move W11, 0xD800
	073 Move W12, 0x3FF0000
	074 Move TEMP, 0x27FF
	075 Not TEMP
	076 Move W13, TEMP
	077 Move [X31+8], X27
	078 Move [X31+16], X28
	079 Move X23, X27
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move W21, [X22+58]
	082 Compare W21, 0
	083 JumpIfEqual {87}
	084 Move W8, [X23]
	085 NotImplemented "Instruction BFM not yet implemented."
	086 Move W29, W8
	087 Move W8, [X23]
	088 NotImplemented "Instruction EXTR not yet implemented."
	089 Add W25, W25, 1
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Add X27, X23, 1
	092 Move W25, W29
	093 ShiftRight W25, 16
	094 And W25, W25, 0x7FFFFFFF
	095 NotImplemented "Instruction CMP not yet implemented."
	096 And W8, W29, 0xFFFFF800
	097 NotImplemented "Instruction CMP not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Add W8, W29, W12
	101 Move W9, 0xDC00
	102 Add W8, W13, W8
	103 NotImplemented "Instruction BFM not yet implemented."
	104 NotImplemented "Instruction STRH not yet implemented."
	105 Move W29, W9
	106 Move [X31], X26
	107 Move X8, 0xEBC000
	108 Move X8, [X8+1560]
	109 Move W1, 4
	110 Move X26, X10
	111 Move X0, [X8]
	112 Call 0x1C17D6C
	113 Compare X0, 0
	114 JumpIfEqual {290}
	115 Move W8, [X0+24]
	116 Move X1, X0
	117 Compare W21, 0
	118 JumpIfEqual {139}
	119 Compare W8, 0
	120 JumpIfEqual {289}
	121 Move W9, W29
	122 ShiftRight W9, 24
	123 And W9, W9, 0x7FFFFFFF
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move [X1+32], W9
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move [X1+33], W25
	128 Move W9, W29
	129 ShiftRight W9, 8
	130 And W9, W9, 0x7FFFFFFF
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move [X1+34], W9
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Add X8, X28, 2
	135 Move W25, W31
	136 NotImplemented "Instruction STRH not yet implemented."
	137 Move X28, X8
	138 Move W29, W31
	139 Compare W8, 0
	140 JumpIfEqual {289}
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move [X1+32], W29
	143 Move W9, W29
	144 ShiftRight W9, 8
	145 And W9, W9, 0x7FFFFFFF
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move [X1+33], W9
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move [X1+34], W25
	150 Move W29, W29
	151 ShiftRight W29, 24
	152 And W29, W29, 0x7FFFFFFF
	153 Move [X1+35], W29
	154 Move [X31+24], X28
	155 Move X8, [X24]
	156 Add X3, X31, 24
	157 Move X0, X24
	158 Move X2, X27
	159 Move X9, [X8+424]
	160 Move X4, [X8+432]
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move X28, [X31+24]
	163 Move X10, X26
	164 Move X26, [X31]
	165 Move W29, W31
	166 Move W25, W31
	167 Move W11, 0xD800
	168 Move W12, 0x3FF0000
	169 Move TEMP, 0x27FF
	170 Not TEMP
	171 Move W13, TEMP
	172 Move TEMP, X0
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfEqual {79}
	176 Move X0, X24
	177 Move X1, X31
	178 Subtract X23, X23, 3
	179 Call DecoderFallbackBuffer.InternalReset, X0
	180 Move X26, [X31+8]
	181 Move X21, [X31+16]
	182 Subtract W20, W25, 1
	183 Compare X19, 0
	184 JumpIfEqual {188}
	185 Move W8, [X19+40]
	186 Compare W8, 0
	187 JumpIfEqual {256}
	188 Move X8, 0xEBC000
	189 Move X8, [X8+1560]
	190 Move W1, W25
	191 Move X0, [X8]
	192 Call 0x1C17D6C
	193 Move W8, [X22+58]
	194 Move X1, X0
	195 Compare W8, 0
	196 JumpIfEqual {211}
	197 Compare X1, 0
	198 JumpIfEqual {290}
	199 Move W8, [X1+24]
	200 Move W9, W25
	201 Add X9, X9, 1
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Add X10, X1, W20
	204 Subtract X9, X9, 1
	205 Move [X10+32], W29
	206 Move W29, W29
	207 ShiftRight W29, 8
	208 And W29, W29, 0x7FFFFFFF
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Subtract W20, W20, 1
	211 Compare X1, 0
	212 JumpIfEqual {290}
	213 Move W8, [X1+24]
	214 Move W9, W25
	215 Add X9, X9, 1
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Subtract X9, X9, 1
	218 Move W10, W29
	219 ShiftRight W10, 24
	220 And W10, W10, 0x7FFFFFFF
	221 Add X11, X1, W20
	222 Move W29, W29
	223 ShiftRight W29, 24
	224 And W29, W29, 0x7FFFFF
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Subtract W20, W20, 1
	227 Move [X11+32], W10
	228 Move [X31+24], X28
	229 Move X8, [X24]
	230 Add X3, X31, 24
	231 Move X0, X24
	232 Move X2, X23
	233 Move X9, [X8+424]
	234 Move X4, [X8+432]
	235 NotImplemented "Instruction BLR not yet implemented."
	236 Move X28, [X31+24]
	237 Move TEMP, X0
	238 And TEMP, TEMP, 1
	239 Compare TEMP, 1
	240 JumpIfNotEqual {245}
	241 Move W29, W31
	242 Move W25, W31
	243 Compare X19, 0
	244 JumpIfNotEqual {256}
	245 Move X0, X24
	246 Move X1, X31
	247 Call DecoderFallbackBuffer.InternalReset, X0
	248 NotImplemented "Instruction CMP not yet implemented."
	249 NotImplemented "Instruction CSET not yet implemented."
	250 Move X0, X22
	251 Move X1, X19
	252 Move X3, X31
	253 Call Encoding.ThrowCharsOverflow, X0, X1, X2
	254 Compare X19, 0
	255 JumpIfEqual {260}
	256 Subtract W8, W23, W26
	257 Move [X19+48], W29
	258 Move [X19+52], W25
	259 Move [X19+44], W8
	260 Subtract X8, X28, X21
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Move X20, [X31+112]
	263 Move X19, [X31+120]
	264 Move X22, [X31+96]
	265 Move X21, [X31+104]
	266 Move X24, [X31+80]
	267 Move X23, [X31+88]
	268 Move X26, [X31+64]
	269 Move X25, [X31+72]
	270 Move X28, [X31+48]
	271 Move X27, [X31+56]
	272 Move X29, [X31+32]
	273 Move X30, [X31+40]
	274 NotImplemented "Instruction CINC not yet implemented."
	275 Move X0, X8
	276 ShiftRight X0, 1
	277 And X0, X0, 0x7FFFFFFF
	278 Add X31, X31, 128
	279 Return X0
	280 Subtract X23, X23, 3
	281 Move X21, [X31+16]
	282 Move X0, X22
	283 Move X1, X19
	284 Move X3, X31
	285 NotImplemented "Instruction CMP not yet implemented."
	286 NotImplemented "Instruction CSET not yet implemented."
	287 Call Encoding.ThrowCharsOverflow, X0, X1, X2
	288 Move X26, [X31+8]
	289 Call 0x1C17F28
	290 Call 0x1C17F20
	291 Move X0, X19
	292 Call 0x1C181E0

Method: System.UInt32 GetSurrogate(System.Char cHigh, System.Char cLow)

Disassembly:
	0x0323841C STRB W8, [X20 + 0x3F4]
	0x03238420 LDR X0, [X21]
	0x03238424 MOVZ W1, 0x40
	0x03238428 BL 0x1C16D6C
	0x0323842C STR X0, [X19 + 0x38]
	0x03238430 MOV X21, X0
	0x03238434 LDR X0, [X25]

ISIL:
	001 And W8, W1, 0xFFFF
	002 Move W8, W8
	003 ShiftRight W8, 22
	004 And W8, W8, 0x1FFFFF
	005 Move W9, 0x2400
	006 Add W8, W8, W2
	007 NotImplemented "Instruction MOVK not yet implemented."
	008 Add W0, W8, W9
	009 Return X0

Method: System.Char GetHighSurrogate(System.UInt32 iChar)

Disassembly:
	0x03238B64 SUBS W25, W8, W19
	0x03238B68 B.LT 0x3238BDC
	0x03238B6C ADRP X26, 0xEEA000
	0x03238B70 ADRP X27, 0xEE9000
	0x03238B74 LDR X26, [X26 + 0x2F8]

ISIL:
	001 Move W8, 0x3FF0000
	002 Add W8, W1, W8
	003 Move TEMP, 0x27FF
	004 Not TEMP
	005 Move W9, TEMP
	006 Add W0, W9, W8
	007 Return X0

Method: System.Char GetLowSurrogate(System.UInt32 iChar)

Disassembly:
	0x03238B78 LDR X27, [X27 + 0x830]
	0x03238B7C MOV X0, X31
	0x03238B80 BL 0x32C1424

ISIL:
	001 Move TEMP, 0x23FF
	002 Not TEMP
	003 Move W0, TEMP
	004 NotImplemented "Instruction BFM not yet implemented."
	005 Return X0

Method: System.Text.Decoder GetDecoder()

Disassembly:
	0x03238B84 LDR X1, [X26]
	0x03238B88 MOV W26, W0
	0x03238B8C MOV X0, X24
	0x03238B90 BL 0x25FB4C0
	0x03238B94 LDR X2, [X27]
	0x03238B98 BL 0x2218CF4
	0x03238B9C LDR X8, [X23]
	0x03238BA0 ADD X3, X0, W19, UXTW
	0x03238BA4 MOV X0, X23
	0x03238BA8 MOV W2, W20
	0x03238BAC LDR X7, [X8 + 0x288]
	0x03238BB0 LDR X6, [X8 + 0x290]
	0x03238BB4 ADD X8, X22, W21, 0x1, SXTW
	0x03238BB8 ADD X1, X8, W26, SXTW
	0x03238BBC MOV W4, W25
	0x03238BC0 LDP X20, X19, [X31 + 0x40]
	0x03238BC4 LDP X22, X21, [X31 + 0x30]
	0x03238BC8 LDP X24, X23, [X31 + 0x20]
	0x03238BCC LDP X26, X25, [X31 + 0x10]
	0x03238BD0 MOV X5, X31
	0x03238BD4 LDP X30, X27, [X31], #0x50
	0x03238BD8 BR X7
	0x03238BDC ADRP X0, 0xEC3000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x11A5000
	006 Move X21, 0xEEB000
	007 Move W8, [X20+1006]
	008 Move X21, [X21+1736]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEEB000
	015 Move X0, [X0+1736]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1006], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X2, X31
	023 Move X20, X0
	024 Call DecoderNLS..ctor, X0, X1
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.Text.Encoder GetEncoder()

Disassembly:
	0x03238BE8 BL 0x1C16F10
	0x03238BEC MOV X19, X0
	0x03238BF0 ADRP X0, 0xEEA000
	0x03238BF4 LDR X0, [X0 + 0x300]
	0x03238BF8 BL 0x1C16D08
	0x03238BFC MOV X20, X0
	0x03238C00 ADRP X0, 0xEE3000
	0x03238C04 LDR X0, [X0 + 0x660]
	0x03238C08 B 0x3238CFC
	0x03238C0C ADRP X8, 0xEEA000
	0x03238C10 ADRP X9, 0xEE4000
	0x03238C14 LDR X8, [X8 + 0x308]
	0x03238C18 LDR X9, [X9 + 0xCC0]
	0x03238C1C CMP X22, 0x0
	0x03238C20 CSEL X0, X9, X8, EQ
	0x03238C24 BL 0x1C16D08
	0x03238C28 MOV X19, X0
	0x03238C2C ADRP X0, 0xEC0000
	0x03238C30 LDR X0, [X0 + 0x528]
	0x03238C34 BL 0x1C16D08
	0x03238C38 BL 0x1C16F10
	0x03238C3C MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x11A5000
	006 Move X21, 0xEEB000
	007 Move W8, [X20+1007]
	008 Move X21, [X21+1008]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEEB000
	015 Move X0, [X0+1008]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1007], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call EncoderNLS..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Int32 GetMaxByteCount(System.Int32 charCount)

Disassembly:
	0x03238C40 ADRP X0, 0xEEA000
	0x03238C44 LDR X0, [X0 + 0x2E0]
	0x03238C48 BL 0x1C16D08
	0x03238C4C MOV X2, X0
	0x03238C50 MOV X0, X20
	0x03238C54 MOV X1, X19
	0x03238C58 MOV X3, X31
	0x03238C5C BL 0x3315F7C
	0x03238C60 B 0x3238CB8
	0x03238C64 ADRP X8, 0xEEA000
	0x03238C68 ADRP X9, 0xEEA000
	0x03238C6C LDR X8, [X8 + 0x310]
	0x03238C70 LDR X9, [X9 + 0x318]
	0x03238C74 CMP W21, 0x0
	0x03238C78 CSEL X0, X9, X8, LT
	0x03238C7C BL 0x1C16D08
	0x03238C80 MOV X19, X0
	0x03238C84 ADRP X0, 0xEC3000
	0x03238C88 LDR X0, [X0 + 0x760]
	0x03238C8C BL 0x1C16D08
	0x03238C90 BL 0x1C16F10
	0x03238C94 MOV X20, X0
	0x03238C98 ADRP X0, 0xEE3000
	0x03238C9C LDR X0, [X0 + 0x670]
	0x03238CA0 BL 0x1C16D08
	0x03238CA4 MOV X2, X0
	0x03238CA8 MOV X0, X20
	0x03238CAC MOV X1, X19
	0x03238CB0 MOV X3, X31
	0x03238CB4 BL 0x3311888
	0x03238CB8 ADRP X0, 0xEEA000
	0x03238CBC LDR X0, [X0 + 0x748]
	0x03238CC0 BL 0x1C16D08
	0x03238CC4 MOV X1, X0
	0x03238CC8 MOV X0, X20
	0x03238CCC BL 0x1C16DEC
	0x03238CD0 ADRP X0, 0xEC3000
	0x03238CD4 LDR X0, [X0 + 0x760]
	0x03238CD8 BL 0x1C16D08
	0x03238CDC BL 0x1C16F10
	0x03238CE0 MOV X19, X0
	0x03238CE4 ADRP X0, 0xEE4000
	0x03238CE8 LDR X0, [X0 + 0xCC0]
	0x03238CEC BL 0x1C16D08
	0x03238CF0 MOV X20, X0
	0x03238CF4 ADRP X0, 0xEEA000
	0x03238CF8 LDR X0, [X0 + 0x108]
	0x03238CFC BL 0x1C16D08
	0x03238D00 MOV X2, X0
	0x03238D04 MOV X0, X19
	0x03238D08 MOV X1, X20
	0x03238D0C MOV X3, X31
	0x03238D10 BL 0x3311888
	0x03238D14 ADRP X0, 0xEEA000
	0x03238D18 LDR X0, [X0 + 0x748]
	0x03238D1C BL 0x1C16D08
	0x03238D20 MOV X1, X0
	0x03238D24 MOV X0, X19
	0x03238D28 BL 0x1C16DEC
	0x03238D2C STR X30, [X31 - 0x50]!
	0x03238D30 STP X26, X25, [X31 + 0x10]
	0x03238D34 STP X24, X23, [X31 + 0x20]
	0x03238D38 STP X22, X21, [X31 + 0x30]
	0x03238D3C STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move TEMP, X1
	005 And TEMP, TEMP, -2147483648
	006 Compare TEMP, -2147483648
	007 JumpIfEqual {39}
	008 Move X19, X0
	009 Move X0, [X0+40]
	010 Compare X0, 0
	011 JumpIfEqual {38}
	012 Move X8, [X0]
	013 Move W10, W1
	014 Add X20, X10, 1
	015 Move X9, [X8+392]
	016 Move X8, [X8+400]
	017 Move X1, X8
	018 NotImplemented "Instruction BLR not yet implemented."
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X0, [X19+40]
	021 Compare X0, 0
	022 JumpIfEqual {38}
	023 Move X8, [X0]
	024 Move X9, [X8+392]
	025 Move X1, [X8+400]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X8, W0
	028 Multiply X20, X20, X8
	029 Move X0, X20
	030 ShiftRight X0, 62
	031 And X0, X0, 0x1FFFFFFF
	032 Move W8, 0x80000000
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return X0
	038 Call 0x1C17F20
	039 Move X0, 0xEC4000
	040 Move X0, [X0+1888]
	041 Call 0x1C17D08
	042 Call 0x1C17F10
	043 Move X19, X0
	044 Move X0, 0xEEB000
	045 Move X0, [X0+784]
	046 Call 0x1C17D08
	047 Move X20, X0
	048 Move X0, 0xEE4000
	049 Move X0, [X0+1648]
	050 Move X0, 0xEC4000
	051 Move X0, [X0+1888]
	052 Call 0x1C17D08
	053 Call 0x1C17F10
	054 Move X19, X0
	055 Move X0, 0xEEB000
	056 Move X0, [X0+784]
	057 Call 0x1C17D08
	058 Move X20, X0
	059 Move X0, 0xEEB000
	060 Move X0, [X0+1056]
	061 Call 0x1C17D08
	062 Move X2, X0
	063 Move X0, X19
	064 Move X1, X20
	065 Move X3, X31
	066 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	067 Move X0, 0xEEB000
	068 Move X0, [X0+1752]
	069 Call 0x1C17D08
	070 Move X1, X0
	071 Move X0, X19
	072 Call 0x1C17DEC

Method: System.Int32 GetMaxCharCount(System.Int32 byteCount)

Disassembly:
	0x03238D40 ADRP X25, 0x11A4000
	0x03238D44 LDRB W8, [X25 + 0x3F8]
	0x03238D48 MOV W20, W5
	0x03238D4C MOV X23, X4
	0x03238D50 MOV W19, W3
	0x03238D54 MOV W21, W2
	0x03238D58 MOV X24, X1
	0x03238D5C MOV X22, X0
	0x03238D60 TBNZ X8, 0x0, 0x3238D84
	0x03238D64 ADRP X0, 0xEE9000
	0x03238D68 LDR X0, [X0 + 0x830]
	0x03238D6C BL 0x1C16CF4
	0x03238D70 ADRP X0, 0xEEA000
	0x03238D74 LDR X0, [X0 + 0x2F8]
	0x03238D78 BL 0x1C16CF4
	0x03238D7C MOVZ W8, 0x1
	0x03238D80 STRB W8, [X25 + 0x3F8]
	0x03238D84 CBZ X24, 0x3238E70
	0x03238D88 CBZ X23, 0x3238E70
	0x03238D8C TBNZ X19, 0x1F, 0x3238EC8
	0x03238D90 TBNZ X21, 0x1F, 0x3238EC8
	0x03238D94 LDR W8, [X24 + 0x18]
	0x03238D98 SUB W9, W8, W21
	0x03238D9C CMP W9, W19
	0x03238DA0 B.LT 0x3238F34
	0x03238DA4 TBNZ X20, 0x1F, 0x3238E40
	0x03238DA8 LDR W9, [X23 + 0x18]
	0x03238DAC SUBS W25, W9, W20
	0x03238DB0 B.LT 0x3238E40
	0x03238DB4 CBZ W19, 0x3238E24
	0x03238DB8 ADRP X9, 0xEEA000
	0x03238DBC LDR X9, [X9 + 0x2F8]
	0x03238DC0 ADRP X26, 0xEE9000
	0x03238DC4 LDR X26, [X26 + 0x830]
	0x03238DC8 CMP W8, 0x0
	0x03238DCC LDR X1, [X9]
	0x03238DD0 ADD X9, X24, 0x20
	0x03238DD4 MOV X0, X23
	0x03238DD8 CSEL X24, X31, X9, EQ
	0x03238DDC BL 0x25FB4C0
	0x03238DE0 LDR X2, [X26]
	0x03238DE4 BL 0x2218CF4
	0x03238DE8 LDR X8, [X22]
	0x03238DEC ADD X1, X24, W21, 0x1, SXTW
	0x03238DF0 ADD X3, X0, W20, UXTW
	0x03238DF4 MOV X0, X22
	0x03238DF8 LDR X7, [X8 + 0x288]
	0x03238DFC LDR X6, [X8 + 0x290]
	0x03238E00 MOV W2, W19
	0x03238E04 MOV W4, W25
	0x03238E08 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move TEMP, X1
	005 And TEMP, TEMP, -2147483648
	006 Compare TEMP, -2147483648
	007 JumpIfEqual {39}
	008 Move X20, X0
	009 Move X0, [X0+48]
	010 Compare X0, 0
	011 JumpIfEqual {38}
	012 Move X8, [X0]
	013 Move W10, W1
	014 ShiftRight W10, 1
	015 And W10, W10, 0x7FFFFFFF
	016 Add W19, W10, 2
	017 Move X9, [X8+392]
	018 Move X8, [X8+400]
	019 Move X1, X8
	020 NotImplemented "Instruction BLR not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X0, [X20+48]
	023 Compare X0, 0
	024 JumpIfEqual {38}
	025 Move X8, [X0]
	026 Move X9, [X8+392]
	027 Move X1, [X8+400]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Multiply W8, W0, W19
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CINC not yet implemented."
	032 NotImplemented "Instruction SBFM not yet implemented."
	033 Move W0, W19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return X0
	038 Call 0x1C17F20
	039 Move X0, 0xEC4000
	040 Move X0, [X0+1888]
	041 Call 0x1C17D08
	042 Call 0x1C17F10
	043 Move X19, X0
	044 Move X0, 0xEEB000
	045 Move X0, [X0+808]
	046 Call 0x1C17D08
	047 Move X20, X0
	048 Move X0, 0xEE4000
	049 Move X0, [X0+1648]
	050 Call 0x1C17D08
	051 Move X2, X0
	052 Move X0, X19
	053 Move X1, X20
	054 Move X3, X31
	055 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	056 Move X0, 0xEEB000
	057 Move X0, [X0+1760]
	058 Call 0x1C17D08
	059 Move X1, X0
	060 Move X0, X19
	061 Call 0x1C17DEC

Method: System.Byte[] GetPreamble()

Disassembly:
	0x03238E0C LDP X22, X21, [X31 + 0x30]
	0x03238E10 LDP X24, X23, [X31 + 0x20]
	0x03238E14 LDP X26, X25, [X31 + 0x10]
	0x03238E18 MOV X5, X31
	0x03238E1C LDR X30, [X31], #0x50
	0x03238E20 BR X7
	0x03238E24 LDP X20, X19, [X31 + 0x40]
	0x03238E28 LDP X22, X21, [X31 + 0x30]
	0x03238E2C LDP X24, X23, [X31 + 0x20]
	0x03238E30 LDP X26, X25, [X31 + 0x10]
	0x03238E34 MOV W0, W31
	0x03238E38 LDR X30, [X31], #0x50
	0x03238E3C RET
	0x03238E40 ADRP X0, 0xEC3000
	0x03238E44 LDR X0, [X0 + 0x760]
	0x03238E48 BL 0x1C16D08
	0x03238E4C BL 0x1C16F10
	0x03238E50 MOV X19, X0
	0x03238E54 ADRP X0, 0xEEA000
	0x03238E58 LDR X0, [X0 + 0x300]
	0x03238E5C BL 0x1C16D08
	0x03238E60 MOV X20, X0
	0x03238E64 ADRP X0, 0xEE3000
	0x03238E68 LDR X0, [X0 + 0x660]
	0x03238E6C B 0x3238F60
	0x03238E70 ADRP X8, 0xEEA000
	0x03238E74 ADRP X9, 0xEEA000
	0x03238E78 LDR X8, [X8 + 0x308]
	0x03238E7C LDR X9, [X9 + 0x2D8]
	0x03238E80 CMP X24, 0x0
	0x03238E84 CSEL X0, X9, X8, EQ
	0x03238E88 BL 0x1C16D08
	0x03238E8C MOV X19, X0
	0x03238E90 ADRP X0, 0xEC0000
	0x03238E94 LDR X0, [X0 + 0x528]
	0x03238E98 BL 0x1C16D08
	0x03238E9C BL 0x1C16F10
	0x03238EA0 MOV X20, X0
	0x03238EA4 ADRP X0, 0xEEA000
	0x03238EA8 LDR X0, [X0 + 0x2E0]
	0x03238EAC BL 0x1C16D08
	0x03238EB0 MOV X2, X0
	0x03238EB4 MOV X0, X20
	0x03238EB8 MOV X1, X19
	0x03238EBC MOV X3, X31
	0x03238EC0 BL 0x3315F7C
	0x03238EC4 B 0x3238F1C
	0x03238EC8 ADRP X8, 0xEEA000
	0x03238ECC ADRP X9, 0xEEA000
	0x03238ED0 LDR X8, [X8 + 0x310]
	0x03238ED4 LDR X9, [X9 + 0x318]
	0x03238ED8 CMP W21, 0x0
	0x03238EDC CSEL X0, X9, X8, LT
	0x03238EE0 BL 0x1C16D08
	0x03238EE4 MOV X19, X0
	0x03238EE8 ADRP X0, 0xEC3000
	0x03238EEC LDR X0, [X0 + 0x760]
	0x03238EF0 BL 0x1C16D08
	0x03238EF4 BL 0x1C16F10
	0x03238EF8 MOV X20, X0
	0x03238EFC ADRP X0, 0xEE3000
	0x03238F00 LDR X0, [X0 + 0x670]
	0x03238F04 BL 0x1C16D08
	0x03238F08 MOV X2, X0
	0x03238F0C MOV X0, X20
	0x03238F10 MOV X1, X19
	0x03238F14 MOV X3, X31
	0x03238F18 BL 0x3311888
	0x03238F1C ADRP X0, 0xEEA000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x11A5000
	005 Move W8, [X20+1008]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xEC4000
	012 Move X0, [X0+3272]
	013 Call 0x1C17CF4
	014 Move X0, 0xEBC000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1008], W8
	019 Move W8, [X19+56]
	020 Compare W8, 0
	021 JumpIfEqual {39}
	022 Move X8, 0xEBC000
	023 Move X8, [X8+1560]
	024 Move W19, [X19+58]
	025 Move W1, 4
	026 Move X0, [X8]
	027 Call 0x1C17D6C
	028 Compare X0, 0
	029 JumpIfEqual {81}
	030 Move W8, [X0+24]
	031 Compare W19, 0
	032 JumpIfEqual {69}
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W9, 254
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move [X0+34], W9
	037 Move W8, 255
	038 Move [X0+35], W8
	039 Move X8, 0xEC4000
	040 Move X8, [X8+3272]
	041 Move X19, [X8]
	042 Move X8, [X19+56]
	043 Compare X8, 0
	044 JumpIfNotEqual {48}
	045 Move X0, X19
	046 Call 0x1C5D6E0
	047 Move X8, [X19+56]
	048 Move X0, [X8+16]
	049 Move W8, [X0+309]
	050 Move TEMP, X8
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {55}
	054 Call 0x1C5D684
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X8, [X19+56]
	060 Move X0, [X8+16]
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Move X8, [X0+184]
	068 Move X0, [X8]
	069 Compare W8, 0
	070 JumpIfEqual {80}
	071 Move W9, 255
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move [X0+32], W9
	074 Move W8, 254
	075 Move [X0+33], W8
	076 Move X20, [X31+16]
	077 Move X19, [X31+24]
	078 Move X30, [X31+32]
	079 Return X0
	080 Call 0x1C17F28
	081 Call 0x1C17F20

Method: System.ReadOnlySpan`1<System.Byte> get_Preamble()

Disassembly:
	0x03238F20 LDR X0, [X0 + 0x750]
	0x03238F24 BL 0x1C16D08
	0x03238F28 MOV X1, X0
	0x03238F2C MOV X0, X20
	0x03238F30 BL 0x1C16DEC
	0x03238F34 ADRP X0, 0xEC3000
	0x03238F38 LDR X0, [X0 + 0x760]
	0x03238F3C BL 0x1C16D08
	0x03238F40 BL 0x1C16F10
	0x03238F44 MOV X19, X0
	0x03238F48 ADRP X0, 0xEEA000
	0x03238F4C LDR X0, [X0 + 0x2D8]
	0x03238F50 BL 0x1C16D08
	0x03238F54 MOV X20, X0
	0x03238F58 ADRP X0, 0xEEA000
	0x03238F5C LDR X0, [X0 + 0xE0]
	0x03238F60 BL 0x1C16D08
	0x03238F64 MOV X2, X0
	0x03238F68 MOV X0, X19
	0x03238F6C MOV X1, X20
	0x03238F70 MOV X3, X31
	0x03238F74 BL 0x3311888
	0x03238F78 ADRP X0, 0xEEA000
	0x03238F7C LDR X0, [X0 + 0x750]
	0x03238F80 BL 0x1C16D08
	0x03238F84 MOV X1, X0
	0x03238F88 MOV X0, X19
	0x03238F8C BL 0x1C16DEC
	0x03238F90 STR X30, [X31 - 0x20]!
	0x03238F94 STP X20, X19, [X31 + 0x10]
	0x03238F98 CBZ X1, 0x3238FC4
	0x03238F9C CBZ X3, 0x3238FC4
	0x03238FA0 TBNZ X4, 0x1F, 0x323901C
	0x03238FA4 TBNZ X2, 0x1F, 0x323901C
	0x03238FA8 LDR X8, [X0]
	0x03238FAC LDP X20, X19, [X31 + 0x10]
	0x03238FB0 MOV X5, X31
	0x03238FB4 LDR X7, [X8 + 0x288]
	0x03238FB8 LDR X6, [X8 + 0x290]
	0x03238FBC LDR X30, [X31], #0x20
	0x03238FC0 BR X7
	0x03238FC4 ADRP X8, 0xEEA000
	0x03238FC8 ADRP X9, 0xEEA000
	0x03238FCC LDR X8, [X8 + 0x2D8]
	0x03238FD0 LDR X9, [X9 + 0x308]
	0x03238FD4 CMP X3, 0x0
	0x03238FD8 CSEL X0, X9, X8, EQ
	0x03238FDC BL 0x1C16D08
	0x03238FE0 MOV X19, X0
	0x03238FE4 ADRP X0, 0xEC0000
	0x03238FE8 LDR X0, [X0 + 0x528]
	0x03238FEC BL 0x1C16D08
	0x03238FF0 BL 0x1C16F10
	0x03238FF4 MOV X20, X0
	0x03238FF8 ADRP X0, 0xEEA000
	0x03238FFC LDR X0, [X0 + 0x2E0]
	0x03239000 BL 0x1C16D08
	0x03239004 MOV X2, X0
	0x03239008 MOV X0, X20
	0x0323900C MOV X1, X19
	0x03239010 MOV X3, X31
	0x03239014 BL 0x3315F7C
	0x03239018 B 0x3239070
	0x0323901C ADRP X8, 0xEE9000
	0x03239020 ADRP X9, 0xEE9000
	0x03239024 LDR X8, [X8 + 0x328]
	0x03239028 LDR X9, [X9 + 0x310]
	0x0323902C CMP W2, 0x0
	0x03239030 CSEL X0, X9, X8, LT
	0x03239034 BL 0x1C16D08
	0x03239038 MOV X19, X0
	0x0323903C ADRP X0, 0xEC2000
	0x03239040 LDR X0, [X0 + 0x760]
	0x03239044 BL 0x1C16D08
	0x03239048 BL 0x1C16F10
	0x0323904C MOV X20, X0
	0x03239050 ADRP X0, 0xEE2000
	0x03239054 LDR X0, [X0 + 0x670]
	0x03239058 BL 0x1C16D08
	0x0323905C MOV X2, X0
	0x03239060 MOV X0, X20
	0x03239064 MOV X1, X19
	0x03239068 MOV X3, X31
	0x0323906C BL 0x3311888
	0x03239070 ADRP X0, 0xEE9000
	0x03239074 LDR X0, [X0 + 0x758]
	0x03239078 BL 0x1C16D08
	0x0323907C MOV X1, X0
	0x03239080 MOV X0, X20
	0x03239084 BL 0x1C16DEC
	0x03239088 STR X30, [X31 - 0x20]!
	0x0323908C STP X20, X19, [X31 + 0x10]
	0x03239090 CBZ X1, 0x32390F0
	0x03239094 TBNZ X3, 0x1F, 0x3239138
	0x03239098 TBNZ X2, 0x1F, 0x3239138
	0x0323909C LDR W8, [X1 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x11A5000
	007 Move X20, 0xEEB000
	008 Move X21, 0xEBC000
	009 Move W8, [X22+1009]
	010 Move X20, [X20+1768]
	011 Move X21, [X21+1728]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0xEC4000
	018 Move X0, [X0+3272]
	019 Call 0x1C17CF4
	020 Move X0, 0xEEB000
	021 Move X0, [X0+1776]
	022 Call 0x1C17CF4
	023 Move X0, 0xEBC000
	024 Move X0, [X0+1728]
	025 Call 0x1C17CF4
	026 Move X0, 0xEEB000
	027 Move X0, [X0+1768]
	028 Call 0x1C17CF4
	029 Move X0, 0xEEB000
	030 Move X0, [X0+1784]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+1009], W8
	034 Move X0, X19
	035 Move X1, X31
	036 Call "il2cpp_vm_object_is_inst", X0
	037 Move X8, [X21]
	038 Move X21, [X20]
	039 Move X20, X0
	040 Move W9, [X8+224]
	041 Compare W9, 0
	042 JumpIfNotEqual {45}
	043 Move X0, X8
	044 Call 0x1C17DFC
	045 Move X22, 0xEEB000
	046 Move X22, [X22+1776]
	047 Move X0, X21
	048 Move X1, X31
	049 Call Type.GetTypeFromHandle, X0
	050 Move X1, X0
	051 Move X0, X20
	052 Move X2, X31
	053 Call Type.op_Inequality, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {63}
	058 Move X8, [X19]
	059 Move X0, X19
	060 Move X9, [X8+408]
	061 Move X1, [X8+416]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move W8, [X19+56]
	064 Compare W8, 0
	065 JumpIfEqual {79}
	066 Move X20, 0xEEB000
	067 Move X20, [X20+1784]
	068 Move W19, [X19+58]
	069 Move X0, [X20]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {75}
	073 Call 0x1C17DFC
	074 Move X0, [X20]
	075 Move X8, [X0+184]
	076 Compare W19, 0
	077 JumpIfEqual {109}
	078 Move X0, [X8+16]
	079 Move X8, 0xEC3000
	080 Move X8, [X8+3272]
	081 Move X19, [X8]
	082 Move X8, [X19+56]
	083 Compare X8, 0
	084 JumpIfNotEqual {88}
	085 Move X0, X19
	086 Call 0x1C5D6E0
	087 Move X8, [X19+56]
	088 Move X0, [X8+16]
	089 Move W8, [X0+309]
	090 Move TEMP, X8
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {95}
	094 Call 0x1C5D684
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X8, [X19+56]
	100 Move X0, [X8+16]
	101 Move W8, [X0+309]
	102 Move TEMP, X8
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {107}
	106 Call 0x1C5D684
	107 Move X8, [X0+184]
	108 Move X0, [X8]
	109 Move X0, [X8+24]
	110 Move X1, [X22]
	111 Move X20, [X31+32]
	112 Move X19, [X31+40]
	113 Move X22, [X31+16]
	114 Move X21, [X31+24]
	115 Move X30, [X31+48]
	116 Call 0x25BFADC, X0
	117 Return X0

Method: System.Boolean Equals(System.Object value)

Disassembly:
	0x032390A0 SUB W9, W8, W2
	0x032390A4 CMP W9, W3
	0x032390A8 B.LT 0x32391A4
	0x032390AC CBZ W3, 0x32390E0
	0x032390B0 LDR X9, [X0]
	0x032390B4 LDP X20, X19, [X31 + 0x10]
	0x032390B8 ADD X10, X1, 0x20
	0x032390BC CMP W8, 0x0
	0x032390C0 LDR X5, [X9 + 0x2C8]
	0x032390C4 LDR X4, [X9 + 0x2D0]
	0x032390C8 CSEL X8, X31, X10, EQ
	0x032390CC ADD X1, X8, W2, SXTW
	0x032390D0 MOV W2, W3
	0x032390D4 MOV X3, X31
	0x032390D8 LDR X30, [X31], #0x20
	0x032390DC BR X5
	0x032390E0 LDP X20, X19, [X31 + 0x10]
	0x032390E4 MOV W0, W31
	0x032390E8 LDR X30, [X31], #0x20
	0x032390EC RET
	0x032390F0 ADRP X0, 0xEBF000
	0x032390F4 LDR X0, [X0 + 0x528]
	0x032390F8 BL 0x1C16D08
	0x032390FC BL 0x1C16F10
	0x03239100 MOV X19, X0
	0x03239104 ADRP X0, 0xEE9000
	0x03239108 LDR X0, [X0 + 0x308]
	0x0323910C BL 0x1C16D08
	0x03239110 MOV X20, X0
	0x03239114 ADRP X0, 0xEE9000
	0x03239118 LDR X0, [X0 + 0x2E0]
	0x0323911C BL 0x1C16D08
	0x03239120 MOV X2, X0
	0x03239124 MOV X0, X19
	0x03239128 MOV X1, X20
	0x0323912C MOV X3, X31
	0x03239130 BL 0x3315F7C
	0x03239134 B 0x32391E8
	0x03239138 ADRP X8, 0xEE2000
	0x0323913C ADRP X9, 0xEC5000
	0x03239140 LDR X8, [X8 + 0x648]
	0x03239144 LDR X9, [X9 + 0x130]
	0x03239148 CMP W2, 0x0
	0x0323914C CSEL X0, X9, X8, LT
	0x03239150 BL 0x1C16D08
	0x03239154 MOV X19, X0
	0x03239158 ADRP X0, 0xEC2000
	0x0323915C LDR X0, [X0 + 0x760]
	0x03239160 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x11A4000
	006 Move W8, [X21+1010]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xEEA000
	014 Move X0, [X0+1784]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1010], W8
	018 Compare X20, 0
	019 JumpIfEqual {58}
	020 Move X8, 0xEEA000
	021 Move X8, [X8+1784]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CSEL not yet implemented."
	026 Compare X20, 0
	027 JumpIfEqual {64}
	028 Move W8, [X19+56]
	029 Move W9, [X20+56]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W8, [X19+58]
	032 Move W9, [X20+58]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, [X19+40]
	035 Compare X0, 0
	036 JumpIfEqual {64}
	037 Move X8, [X0]
	038 Move X1, [X20+40]
	039 Move X9, [X8+312]
	040 Move X2, [X8+320]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {58}
	046 Move X0, [X19+48]
	047 Compare X0, 0
	048 JumpIfEqual {64}
	049 Move X8, [X0]
	050 Move X1, [X20+48]
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X3, [X8+312]
	054 Move X2, [X8+320]
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 CallNoReturn X3
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move W0, W31
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Return X0
	064 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x03239164 BL 0x1C16F10
	0x03239168 MOV X20, X0
	0x0323916C ADRP X0, 0xEE2000
	0x03239170 LDR X0, [X0 + 0x670]
	0x03239174 BL 0x1C16D08
	0x03239178 MOV X2, X0
	0x0323917C MOV X0, X20
	0x03239180 MOV X1, X19
	0x03239184 MOV X3, X31
	0x03239188 BL 0x3311888
	0x0323918C ADRP X0, 0xEE9000
	0x03239190 LDR X0, [X0 + 0x760]
	0x03239194 BL 0x1C16D08
	0x03239198 MOV X1, X0
	0x0323919C MOV X0, X20
	0x032391A0 BL 0x1C16DEC
	0x032391A4 ADRP X0, 0xEC2000
	0x032391A8 LDR X0, [X0 + 0x760]
	0x032391AC BL 0x1C16D08
	0x032391B0 BL 0x1C16F10
	0x032391B4 MOV X19, X0
	0x032391B8 ADRP X0, 0xEE9000
	0x032391BC LDR X0, [X0 + 0x308]
	0x032391C0 BL 0x1C16D08
	0x032391C4 MOV X20, X0
	0x032391C8 ADRP X0, 0xEE9000
	0x032391CC LDR X0, [X0 + 0xE0]
	0x032391D0 BL 0x1C16D08
	0x032391D4 MOV X2, X0
	0x032391D8 MOV X0, X19
	0x032391DC MOV X1, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+40]
	007 Compare X0, 0
	008 JumpIfEqual {39}
	009 Move X8, [X0]
	010 Move X9, [X8+344]
	011 Move X1, [X8+352]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move X8, [X19+48]
	014 Compare X8, 0
	015 JumpIfEqual {39}
	016 Move X9, [X8]
	017 Move W20, W0
	018 Move X0, X8
	019 Move X10, [X9+344]
	020 Move X1, [X9+352]
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move X8, [X19]
	023 Move W21, W0
	024 Move X0, X19
	025 Move X9, [X8+808]
	026 Move X1, [X8+816]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move W8, [X19+56]
	029 Move W9, [X19+58]
	030 Add W10, W21, W20
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Add W10, W10, W0
	034 Add W8, W10, W8
	035 Add W0, W8, W9
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0
	039 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x032391E0 MOV X3, X31
	0x032391E4 BL 0x3311888
	0x032391E8 ADRP X0, 0xEE9000
	0x032391EC LDR X0, [X0 + 0x760]
	0x032391F0 BL 0x1C16D08
	0x032391F4 MOV X1, X0
	0x032391F8 MOV X0, X19
	0x032391FC BL 0x1C16DEC
	0x03239200 STR X30, [X31 - 0x20]!
	0x03239204 STP X20, X19, [X31 + 0x10]
	0x03239208 CBZ X1, 0x323922C
	0x0323920C TBNZ X2, 0x1F, 0x3239274
	0x03239210 LDR X8, [X0]
	0x03239214 LDP X20, X19, [X31 + 0x10]
	0x03239218 MOV X3, X31
	0x0323921C LDR X5, [X8 + 0x2C8]
	0x03239220 LDR X4, [X8 + 0x2D0]
	0x03239224 LDR X30, [X31], #0x20
	0x03239228 BR X5
	0x0323922C ADRP X0, 0xEBF000
	0x03239230 LDR X0, [X0 + 0x528]
	0x03239234 BL 0x1C16D08
	0x03239238 BL 0x1C16F10
	0x0323923C MOV X19, X0
	0x03239240 ADRP X0, 0xEE9000
	0x03239244 LDR X0, [X0 + 0x308]
	0x03239248 BL 0x1C16D08
	0x0323924C MOV X20, X0
	0x03239250 ADRP X0, 0xEE9000
	0x03239254 LDR X0, [X0 + 0x2E0]
	0x03239258 BL 0x1C16D08
	0x0323925C MOV X2, X0
	0x03239260 MOV X0, X19
	0x03239264 MOV X1, X20
	0x03239268 MOV X3, X31
	0x0323926C BL 0x3315F7C
	0x03239270 B 0x32392B8
	0x03239274 ADRP X0, 0xEC2000
	0x03239278 LDR X0, [X0 + 0x760]
	0x0323927C BL 0x1C16D08
	0x03239280 BL 0x1C16F10
	0x03239284 MOV X19, X0
	0x03239288 ADRP X0, 0xEE2000
	0x0323928C LDR X0, [X0 + 0x648]
	0x03239290 BL 0x1C16D08
	0x03239294 MOV X20, X0
	0x03239298 ADRP X0, 0xEE2000
	0x0323929C LDR X0, [X0 + 0x670]
	0x032392A0 BL 0x1C16D08
	0x032392A4 MOV X2, X0
	0x032392A8 MOV X0, X19
	0x032392AC MOV X1, X20
	0x032392B0 MOV X3, X31
	0x032392B4 BL 0x3311888
	0x032392B8 ADRP X0, 0xEE9000
	0x032392BC LDR X0, [X0 + 0x768]
	0x032392C0 BL 0x1C16D08
	0x032392C4 MOV X1, X0
	0x032392C8 MOV X0, X19
	0x032392CC BL 0x1C16DEC
	0x032392D0 STR X30, [X31 - 0x50]!
	0x032392D4 STP X26, X25, [X31 + 0x10]
	0x032392D8 STP X24, X23, [X31 + 0x20]
	0x032392DC STP X22, X21, [X31 + 0x30]
	0x032392E0 STP X20, X19, [X31 + 0x40]
	0x032392E4 ADRP X25, 0x11A3000
	0x032392E8 LDRB W8, [X25 + 0x3F9]
	0x032392EC MOV W20, W5
	0x032392F0 MOV X23, X4
	0x032392F4 MOV W19, W3
	0x032392F8 MOV W21, W2
	0x032392FC MOV X24, X1
	0x03239300 MOV X22, X0
	0x03239304 TBNZ X8, 0x0, 0x3239328
	0x03239308 ADRP X0, 0xEE9000
	0x0323930C LDR X0, [X0 + 0x2C8]
	0x03239310 BL 0x1C16CF4
	0x03239314 ADRP X0, 0xEE9000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x11A4000
	007 Move X20, 0xEEA000
	008 Move X21, 0xEBB000
	009 Move W8, [X19+1011]
	010 Move X20, [X20+1784]
	011 Move X21, [X21+1560]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xEBB000
	017 Move X0, [X0+1560]
	018 Call 0x1C17CF4
	019 Move X0, 0xEEA000
	020 Move X0, [X0+1784]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X19+1011], W8
	024 Move X0, [X20]
	025 Call 0x1C17F10
	026 Move W1, 0x2EE0
	027 Move X2, X31
	028 Move X19, X0
	029 Call Encoding..ctor, X0, X1
	030 Move W22, 1
	031 Move [X19+58], W31
	032 NotImplemented "Instruction STRH not yet implemented."
	033 Move X8, [X20]
	034 Move X8, [X8+184]
	035 Move [X8], X19
	036 Move X0, [X20]
	037 Call 0x1C17F10
	038 Move W1, 0x2EE1
	039 Move X2, X31
	040 Move X19, X0
	041 Call Encoding..ctor, X0, X1
	042 Move [X19+58], W22
	043 NotImplemented "Instruction STRH not yet implemented."
	044 Move X8, [X20]
	045 Move W1, 4
	046 Move X8, [X8+184]
	047 Move [X8+8], X19
	048 Move X0, [X21]
	049 Call 0x1C17D6C
	050 Compare X0, 0
	051 JumpIfEqual {85}
	052 Move W8, [X0+24]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W9, 254
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move [X0+34], W9
	057 Move W8, 255
	058 Move [X0+35], W8
	059 Move X8, [X20]
	060 Move W1, 4
	061 Move X8, [X8+184]
	062 Move [X8+16], X0
	063 Move X0, [X21]
	064 Call 0x1C17D6C
	065 Compare X0, 0
	066 JumpIfEqual {85}
	067 Move W8, [X0+24]
	068 Compare W8, 0
	069 JumpIfEqual {84}
	070 Move W9, 255
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move [X0+32], W9
	073 Move W8, 254
	074 Move [X0+33], W8
	075 Move X8, [X20]
	076 Move X20, [X31+32]
	077 Move X19, [X31+40]
	078 Move X22, [X31+16]
	079 Move X21, [X31+24]
	080 Move X8, [X8+184]
	081 Move [X8+24], X0
	082 Move X30, [X31+48]
	083 Return 
	084 Call 0x1C17F28
	085 Call 0x1C17F20

