Type: System.Text.ValueStringBuilder

Method: System.Void .ctor(System.Span`1<System.Char> initialBuffer)

Disassembly:
	0x03241C88 STP X30, X19, [X31 - 0x10]!
	0x03241C8C LDR X8, [X0 + 0x28]
	0x03241C90 MOV X19, X0
	0x03241C94 CBZ X8, 0x3241CA0

ISIL:
	001 Move [X0], X31
	002 Move [X0+8], X1
	003 Move [X0+16], X2
	004 Move [X0+24], W31
	005 Return 

Method: System.Int32 get_Length()

Disassembly:
	0x03241C98 LDR X8, [X19 + 0x30]
	0x03241C9C CBNZ X8, 0x3241CB8

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Char get_Item(System.Int32 index)

Disassembly:
	0x03241CA0 LDR X8, [X19]
	0x03241CA4 MOVZ W9, 0x1
	0x03241CA8 STRB W9, [X19 + 0x20]
	0x03241CAC MOV X0, X19
	0x03241CB0 LDP X9, X1, [X8 + 0x188]
	0x03241CB4 BLR X9
	0x03241CB8 STR X31, [X19 + 0x18]
	0x03241CBC LDP X30, X19, [X31], #0x10
	0x03241CC0 RET

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+16]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X8, [X0+8]
	005 Add X0, X8, W1
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F28

Method: System.String ToString()

Disassembly:
	0x03241CC4 STR X31, [X0 + 0x18]
	0x03241CC8 RET
	0x03241CCC STP X30, X23, [X31 - 0x30]!
	0x03241CD0 STP X22, X21, [X31 + 0x10]
	0x03241CD4 STP X20, X19, [X31 + 0x20]
	0x03241CD8 ADRP X21, 0x119B000
	0x03241CDC LDRB W8, [X21 + 0x433]
	0x03241CE0 MOV X20, X1
	0x03241CE4 MOV X19, X0
	0x03241CE8 TBNZ X8, 0x0, 0x3241D90
	0x03241CEC ADRP X0, 0xEDB000
	0x03241CF0 LDR X0, [X0 + 0x248]
	0x03241CF4 BL 0x1C16CF4
	0x03241CF8 ADRP X0, 0xEB2000
	0x03241CFC LDR X0, [X0 + 0xB58]
	0x03241D00 BL 0x1C16CF4
	0x03241D04 ADRP X0, 0xEE1000
	0x03241D08 LDR X0, [X0 + 0x950]
	0x03241D0C BL 0x1C16CF4
	0x03241D10 ADRP X0, 0xEE1000
	0x03241D14 LDR X0, [X0 + 0x958]
	0x03241D18 BL 0x1C16CF4
	0x03241D1C ADRP X0, 0xEE1000
	0x03241D20 LDR X0, [X0 + 0x960]
	0x03241D24 BL 0x1C16CF4
	0x03241D28 ADRP X0, 0xEE1000
	0x03241D2C LDR X0, [X0 + 0x968]
	0x03241D30 BL 0x1C16CF4
	0x03241D34 ADRP X0, 0xED9000
	0x03241D38 LDR X0, [X0 + 0xD80]
	0x03241D3C BL 0x1C16CF4
	0x03241D40 ADRP X0, 0xEB2000
	0x03241D44 LDR X0, [X0 + 0x758]
	0x03241D48 BL 0x1C16CF4
	0x03241D4C ADRP X0, 0xEB2000
	0x03241D50 LDR X0, [X0 + 0x6C0]
	0x03241D54 BL 0x1C16CF4
	0x03241D58 ADRP X0, 0xEE1000
	0x03241D5C LDR X0, [X0 + 0x970]
	0x03241D60 BL 0x1C16CF4
	0x03241D64 ADRP X0, 0xEE1000
	0x03241D68 LDR X0, [X0 + 0x978]
	0x03241D6C BL 0x1C16CF4
	0x03241D70 ADRP X0, 0xEE1000
	0x03241D74 LDR X0, [X0 + 0x980]
	0x03241D78 BL 0x1C16CF4
	0x03241D7C ADRP X0, 0xEE1000
	0x03241D80 LDR X0, [X0 + 0x988]
	0x03241D84 BL 0x1C16CF4
	0x03241D88 MOVZ W8, 0x1
	0x03241D8C STRB W8, [X21 + 0x433]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x119C000
	007 Move X21, 0xEE1000
	008 Move W8, [X20+1061]
	009 Move X21, [X21+2128]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xEE1000
	016 Move X0, [X0+2128]
	017 Call 0x1C17CF4
	018 Move X0, 0xEE1000
	019 Move X0, [X0+2136]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1061], W8
	023 Move W20, [X19+24]
	024 Move W8, [X19+16]
	025 Move X21, [X21]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X0, X31
	028 Call ThrowHelper.ThrowArgumentOutOfRangeException
	029 Move X0, [X21+32]
	030 Move X22, 0xEE1000
	031 Move X21, [X19+8]
	032 Move W8, [X0+309]
	033 Move X22, [X22+2136]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Move X2, [X22]
	040 Move X0, X21
	041 Move X1, X20
	042 Call Span`1<Char>.op_Implicit, X0
	043 Move X2, X0
	044 Move X3, X1
	045 Move X0, X31
	046 Move X1, X2
	047 Move X2, X3
	048 Move X3, X31
	049 Call String.CreateString, X0, X1
	050 Move X20, X0
	051 Move X0, X19
	052 Move X1, X31
	053 Call 0x32559D4
	054 Move X0, X20
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Return X0

Method: System.Boolean TryCopyTo(System.Span`1<System.Char> destination, out System.Int32 charsWritten)

Disassembly:
	0x03241D90 CBZ X20, 0x3241FC8
	0x03241D94 ADRP X22, 0xEB2000
	0x03241D98 LDR X22, [X22 + 0x6C0]
	0x03241D9C ADRP X8, 0xED9000
	0x03241DA0 ADRP X23, 0xEE1000
	0x03241DA4 LDR X0, [X22]
	0x03241DA8 LDR X8, [X8 + 0xD80]
	0x03241DAC LDR W9, [X0 + 0xE0]
	0x03241DB0 LDR X21, [X8]
	0x03241DB4 LDR X23, [X23 + 0x980]
	0x03241DB8 CBNZ W9, 0x3241DC0
	0x03241DBC BL 0x1C16DFC
	0x03241DC0 MOV X0, X21
	0x03241DC4 MOV X1, X31
	0x03241DC8 BL 0x338C698
	0x03241DCC LDR X1, [X23]
	0x03241DD0 MOV X2, X0
	0x03241DD4 MOV X0, X20
	0x03241DD8 MOV X3, X31
	0x03241DDC BL 0x32A9678
	0x03241DE0 CBZ X0, 0x3242010
	0x03241DE4 ADRP X8, 0xEB2000
	0x03241DE8 LDR X8, [X8 + 0x758]
	0x03241DEC LDR X9, [X0]
	0x03241DF0 LDR X1, [X8]
	0x03241DF4 LDR X8, [X9 + 0x40]
	0x03241DF8 LDR X9, [X1 + 0x40]
	0x03241DFC CMP X8, X9
	0x03241E00 B.NE 0x3242014
	0x03241E04 ADRP X21, 0xEDB000
	0x03241E08 LDR X21, [X21 + 0x248]
	0x03241E0C BL 0x1C16E08
	0x03241E10 LDR W8, [X0]
	0x03241E14 STR X31, [X19 + 0x18]
	0x03241E18 STR W8, [X19 + 0x10]
	0x03241E1C LDR X0, [X22]
	0x03241E20 LDR X21, [X21]
	0x03241E24 LDR W8, [X0 + 0xE0]
	0x03241E28 CBNZ W8, 0x3241E30
	0x03241E2C BL 0x1C16DFC
	0x03241E30 MOV X0, X21
	0x03241E34 MOV X1, X31
	0x03241E38 BL 0x338C698
	0x03241E3C ADRP X8, 0xEE1000
	0x03241E40 LDR X8, [X8 + 0x978]
	0x03241E44 MOV X2, X0
	0x03241E48 LDR X1, [X8]
	0x03241E4C MOV X0, X20
	0x03241E50 MOV X3, X31
	0x03241E54 BL 0x32A9678
	0x03241E58 CBZ X0, 0x3242018
	0x03241E5C ADRP X8, 0xEB2000
	0x03241E60 LDR X8, [X8 + 0xB58]
	0x03241E64 LDR X9, [X0]
	0x03241E68 LDR X1, [X8]
	0x03241E6C LDR X8, [X9 + 0x40]
	0x03241E70 LDR X9, [X1 + 0x40]
	0x03241E74 CMP X8, X9

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x119C000
	011 Move X24, 0xEE1000
	012 Move W8, [X23+1062]
	013 Move X24, [X24+2128]
	014 Move X20, X3
	015 Move X21, X2
	016 Move X22, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xEE1000
	023 Move X0, [X0+2128]
	024 Call 0x1C17CF4
	025 Move X0, 0xEE2000
	026 Move X0, [X0+2320]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+1062], W8
	030 Move W23, [X19+24]
	031 Move W8, [X19+16]
	032 Move X24, [X24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X31
	035 Call ThrowHelper.ThrowArgumentOutOfRangeException
	036 Move X0, [X24+32]
	037 Move X25, 0xEE2000
	038 Move X24, [X19+8]
	039 Move W8, [X0+309]
	040 Move X25, [X25+2320]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {46}
	045 Call 0x1C5D684
	046 Move X3, [X25]
	047 Add X0, X31, 0
	048 Move X1, X22
	049 Move X2, X21
	050 Move [X31], X24
	051 Move [X31+8], X23
	052 Call Span`1<Char>.TryCopyTo, X0, X1
	053 Move W21, W0
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {59}
	058 Move W8, [X19+24]
	059 Move W8, W31
	060 Move X0, X19
	061 Move X1, X31
	062 Move [X20], W8
	063 Call 0x32559D4
	064 And W0, W21, 1
	065 Move X20, [X31+64]
	066 Move X19, [X31+72]
	067 Move X22, [X31+48]
	068 Move X21, [X31+56]
	069 Move X24, [X31+32]
	070 Move X23, [X31+40]
	071 Move X30, [X31+16]
	072 Move X25, [X31+24]
	073 Add X31, X31, 80
	074 Return X0

Method: System.Void Append(System.Char c)

Disassembly:
	0x03241E78 B.NE 0x324201C
	0x03241E7C BL 0x1C16E08
	0x03241E80 LDRB W8, [X0]
	0x03241E84 ADRP X9, 0xEE1000
	0x03241E88 LDR X9, [X9 + 0x960]
	0x03241E8C STRB W8, [X19 + 0x21]
	0x03241E90 LDR X0, [X9]
	0x03241E94 MOV X1, X31
	0x03241E98 BL 0x338C698
	0x03241E9C ADRP X8, 0xEE1000
	0x03241EA0 LDR X8, [X8 + 0x970]
	0x03241EA4 MOV X2, X0
	0x03241EA8 LDR X1, [X8]
	0x03241EAC MOV X0, X20
	0x03241EB0 MOV X3, X31
	0x03241EB4 BL 0x32A9678
	0x03241EB8 CBZ X0, 0x3241F18
	0x03241EBC ADRP X8, 0xEE1000
	0x03241EC0 LDR X8, [X8 + 0x968]
	0x03241EC4 LDR X9, [X0]
	0x03241EC8 LDR X1, [X8]
	0x03241ECC LDRB W10, [X9 + 0x130]
	0x03241ED0 LDRB W8, [X1 + 0x130]
	0x03241ED4 CMP W10, W8
	0x03241ED8 B.CC 0x3241FC0
	0x03241EDC LDR X10, [X9 + 0xC8]
	0x03241EE0 SUB X9, X8, 0x1
	0x03241EE4 LDR X10, [X10, X9, LSL #3]
	0x03241EE8 CMP X10, X1
	0x03241EEC B.NE 0x3241FC0
	0x03241EF0 STR X0, [X19 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x119C000
	006 Move W8, [X21+1063]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xEE2000
	014 Move X0, [X0+1416]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1063], W8
	018 NotImplemented "Instruction LDRSW not yet implemented."
	019 Move W9, [X20+16]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X9, [X20+8]
	023 Add W10, W8, 1
	024 NotImplemented "Instruction STRH not yet implemented."
	025 Move [X20+24], W10
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return 
	031 Move X0, X20
	032 Move W1, W19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Call 0x1C17F28

Method: System.Void Append(System.String s)

Disassembly:
	0x03241F74 SUB X9, X8, 0x1
	0x03241F78 LDR X10, [X10, X9, LSL #3]
	0x03241F7C CMP X10, X1
	0x03241F80 B.NE 0x3241FC4
	0x03241F84 STR X0, [X19 + 0x30]
	0x03241F88 LDR X10, [X0]
	0x03241F8C LDRB W11, [X10 + 0x130]
	0x03241F90 CMP W11, W8
	0x03241F94 B.CC 0x3241FA8
	0x03241F98 LDR X8, [X10 + 0xC8]
	0x03241F9C LDR X8, [X8, X9, LSL #3]
	0x03241FA0 CMP X8, X1
	0x03241FA4 B.EQ 0x3241FB0
	0x03241FA8 BL 0x1C171E0
	0x03241FAC STR X31, [X19 + 0x30]
	0x03241FB0 LDP X20, X19, [X31 + 0x20]
	0x03241FB4 LDP X22, X21, [X31 + 0x10]
	0x03241FB8 LDP X30, X23, [X31], #0x30
	0x03241FBC RET
	0x03241FC0 BL 0x1C171E0
	0x03241FC4 BL 0x1C171E0
	0x03241FC8 ADRP X0, 0xEB7000
	0x03241FCC LDR X0, [X0 + 0x528]
	0x03241FD0 BL 0x1C16D08
	0x03241FD4 BL 0x1C16F10
	0x03241FD8 MOV X19, X0
	0x03241FDC ADRP X0, 0xEDC000
	0x03241FE0 LDR X0, [X0 + 0x2D8]
	0x03241FE4 BL 0x1C16D08
	0x03241FE8 MOV X1, X0
	0x03241FEC MOV X0, X19
	0x03241FF0 MOV X2, X31
	0x03241FF4 BL 0x330E100
	0x03241FF8 ADRP X0, 0xEE1000
	0x03241FFC LDR X0, [X0 + 0x990]
	0x03242000 BL 0x1C16D08
	0x03242004 MOV X1, X0
	0x03242008 MOV X0, X19
	0x0324200C BL 0x1C16DEC
	0x03242010 BL 0x1C16F20
	0x03242014 BL 0x1C171E0
	0x03242018 BL 0x1C16F20
	0x0324201C BL 0x1C171E0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x119C000
	007 Move W8, [X21+1064]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEE2000
	015 Move X0, [X0+1416]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1064], W8
	019 Compare X20, 0
	020 JumpIfEqual {48}
	021 Move W8, [X20+16]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction LDRSW not yet implemented."
	024 Move W8, [X19+16]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X22, [X19+8]
	028 Move X0, X20
	029 Move W1, W31
	030 Move X2, X31
	031 Call String.get_Chars, X0, X1
	032 Add W8, W21, 1
	033 NotImplemented "Instruction STRH not yet implemented."
	034 Move [X19+24], W8
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return 
	041 Move X0, X19
	042 Move X1, X20
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Call 0x1C17F20
	049 Call 0x1C17F28

Method: System.Void AppendSlow(System.String s)

Disassembly:
	0x03242020 B 0x3242038
	0x03242024 B 0x3242038
	0x03242028 B 0x3242038
	0x0324202C B 0x3242038
	0x03242030 B 0x3242038
	0x03242034 B 0x3242038
	0x03242038 MOV X20, X0
	0x0324203C CMP W1, 0x1
	0x03242040 B.NE 0x32420BC
	0x03242044 MOV X0, X20
	0x03242048 BL 0x3EB1AD0
	0x0324204C MOV X20, X0
	0x03242050 ADRP X0, 0xEDB000
	0x03242054 LDR X0, [X0 + 0x2E0]
	0x03242058 BL 0x1C16D08
	0x0324205C LDR X8, [X20]
	0x03242060 LDR X1, [X8]
	0x03242064 BL 0x1C17270
	0x03242068 TBZ X0, 0x0, 0x3242094
	0x0324206C BL 0x3EB1AE0
	0x03242070 LDR X8, [X19]
	0x03242074 MOVZ W9, 0x101
	0x03242078 STRH W9, [X19 + 0x20]
	0x0324207C MOV X0, X19
	0x03242080 LDP X2, X1, [X8 + 0x188]
	0x03242084 LDP X20, X19, [X31 + 0x20]
	0x03242088 LDP X22, X21, [X31 + 0x10]
	0x0324208C LDP X30, X23, [X31], #0x30
	0x03242090 BR X2
	0x03242094 MOVZ W0, 0x8
	0x03242098 BL 0x3EB1AF0
	0x0324209C LDR X8, [X20]
	0x032420A0 STR X8, [X0]
	0x032420A4 ADRP X1, 0xC72000
	0x032420A8 ADD X1, X1, 0xE58
	0x032420AC MOV X2, X31
	0x032420B0 BL 0x3EB1B00
	0x032420B4 MOV X20, X0
	0x032420B8 BL 0x3EB1AE0
	0x032420BC MOV X0, X20
	0x032420C0 BL 0x1D2C690
	0x032420C4 BL 0x1990590
	0x032420C8 STR X30, [X31 - 0x50]!
	0x032420CC STP X26, X25, [X31 + 0x10]
	0x032420D0 STP X24, X23, [X31 + 0x20]
	0x032420D4 STP X22, X21, [X31 + 0x30]
	0x032420D8 STP X20, X19, [X31 + 0x40]
	0x032420DC ADRP X21, 0x119A000
	0x032420E0 LDRB W8, [X21 + 0x434]
	0x032420E4 MOV X19, X1
	0x032420E8 MOV X20, X0
	0x032420EC TBNZ X8, 0x0, 0x324214C
	0x032420F0 ADRP X0, 0xEE0000
	0x032420F4 LDR X0, [X0 + 0x970]
	0x032420F8 BL 0x1C16CF4
	0x032420FC ADRP X0, 0xEE0000
	0x03242100 LDR X0, [X0 + 0x978]
	0x03242104 BL 0x1C16CF4
	0x03242108 ADRP X0, 0xEE0000
	0x0324210C LDR X0, [X0 + 0x998]
	0x03242110 BL 0x1C16CF4
	0x03242114 ADRP X0, 0xEE0000
	0x03242118 LDR X0, [X0 + 0x9A0]
	0x0324211C BL 0x1C16CF4
	0x03242120 ADRP X0, 0xEE0000
	0x03242124 LDR X0, [X0 + 0x980]
	0x03242128 BL 0x1C16CF4
	0x0324212C ADRP X0, 0xEE0000
	0x03242130 LDR X0, [X0 + 0x988]
	0x03242134 BL 0x1C16CF4
	0x03242138 ADRP X0, 0xEE0000
	0x0324213C LDR X0, [X0 + 0x9A8]
	0x03242140 BL 0x1C16CF4
	0x03242144 MOVZ W8, 0x1
	0x03242148 STRB W8, [X21 + 0x434]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X21, 0x119B000
	010 Move W8, [X21+1065]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xEE1000
	018 Move X0, [X0+408]
	019 Call 0x1C17CF4
	020 Move X0, 0xEE1000
	021 Move X0, [X0+424]
	022 Call 0x1C17CF4
	023 Move X0, 0xEE1000
	024 Move X0, [X0+1416]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+1065], W8
	028 Compare X19, 0
	029 JumpIfEqual {88}
	030 Move W8, [X20+16]
	031 Move W1, [X19+16]
	032 NotImplemented "Instruction LDRSW not yet implemented."
	033 Subtract W8, W8, W1
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X0, X20
	036 Call ValueStringBuilder.Grow, X0, X1
	037 Move X22, 0x119B000
	038 Move X23, 0xEE1000
	039 Move W8, [X22+939]
	040 Move X23, [X23+424]
	041 Compare W8, 0
	042 JumpIfNotEqual {48}
	043 Move X0, 0xED9000
	044 Move X0, [X0+656]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X22+939], W8
	048 Move X0, X19
	049 Move X1, X31
	050 Call String.GetRawStringData, X0
	051 Move W8, [X19+16]
	052 Move X23, [X23]
	053 Move [X31], X0
	054 Move [X31+8], X8
	055 Move W22, [X20+16]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, X31
	058 Call ThrowHelper.ThrowArgumentOutOfRangeException
	059 Move W22, [X20+16]
	060 Move X0, [X23+32]
	061 Move X24, 0xEE1000
	062 Move X23, [X20+8]
	063 Move W8, [X0+309]
	064 Move X24, [X24+408]
	065 Move TEMP, X8
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {70}
	069 Call 0x1C5D684
	070 Move X3, [X24]
	071 Subtract W2, W22, W21
	072 Add X1, X23, X21
	073 Add X0, X31, 0
	074 Call ReadOnlySpan`1<Char>.CopyTo, X0, X1
	075 Move W8, [X20+24]
	076 Move W9, [X19+16]
	077 Move X22, [X31+48]
	078 Move X21, [X31+56]
	079 Move X24, [X31+32]
	080 Move X23, [X31+40]
	081 Move X30, [X31+16]
	082 Add W8, W9, W8
	083 Move [X20+24], W8
	084 Move X20, [X31+64]
	085 Move X19, [X31+72]
	086 Add X31, X31, 80
	087 Return 
	088 Call 0x1C17F20

Method: System.Void Append(System.Char c, System.Int32 count)

Disassembly:
	0x03242390 ADRP X0, 0xEB1000
	0x03242394 LDR X0, [X0 + 0x758]
	0x03242398 BL 0x1C16CF4
	0x0324239C ADRP X0, 0xEB1000
	0x032423A0 LDR X0, [X0 + 0x9D0]
	0x032423A4 BL 0x1C16CF4
	0x032423A8 ADRP X0, 0xEE0000
	0x032423AC LDR X0, [X0 + 0x6F8]
	0x032423B0 BL 0x1C16CF4
	0x032423B4 ADRP X0, 0xEE0000
	0x032423B8 LDR X0, [X0 + 0x9E8]
	0x032423BC BL 0x1C16CF4
	0x032423C0 MOVZ W8, 0x1
	0x032423C4 STRB W8, [X21 + 0x436]
	0x032423C8 LDR X0, [X19]
	0x032423CC STRB W31, [X31 + 0x14]
	0x032423D0 LDR W8, [X0 + 0xE0]
	0x032423D4 CBNZ W8, 0x32423DC
	0x032423D8 BL 0x1C16DFC
	0x032423DC MOV W0, W20
	0x032423E0 MOV X1, X31
	0x032423E4 BL 0x3230D80
	0x032423E8 MOV X21, X0
	0x032423EC STR X0, [X31 + 0x18]
	0x032423F0 CBNZ X0, 0x3242778
	0x032423F4 CMP W20, 0x10000
	0x032423F8 B.CS 0x3242790
	0x032423FC ADRP X23, 0xEE0000
	0x03242400 LDR X23, [X23 + 0x3F8]
	0x03242404 LDR X8, [X23]
	0x03242408 LDR X8, [X8 + 0xB8]
	0x0324240C LDR X19, [X8 + 0x40]
	0x03242410 BL 0x1C16D44
	0x03242414 CBZ X19, 0x3242450
	0x03242418 LDR X8, [X23]
	0x0324241C LDR X8, [X8 + 0xB8]
	0x03242420 LDR X19, [X8 + 0x40]
	0x03242424 BL 0x1C16D44
	0x03242428 CBZ X19, 0x3242894
	0x0324242C ADRP X8, 0xEE0000
	0x03242430 LDR X8, [X8 + 0x9C0]
	0x03242434 ADD X2, X31, 0x18
	0x03242438 MOV X0, X19
	0x0324243C MOV W1, W20
	0x03242440 LDR X3, [X8]
	0x03242444 BL 0x2A150AC
	0x03242448 LDR X8, [X31 + 0x18]
	0x0324244C CBNZ X8, 0x3242774
	0x03242450 BL 0x3242270
	0x03242454 MOV X19, X0
	0x03242458 STRB W31, [X31 + 0x14]
	0x0324245C ADD X1, X31, 0x14
	0x03242460 MOV X2, X31
	0x03242464 BL 0x33DE64C
	0x03242468 LDR X8, [X23]
	0x0324246C LDR X8, [X8 + 0xB8]
	0x03242470 LDR X21, [X8 + 0x40]
	0x03242474 BL 0x1C16D44
	0x03242478 CBZ X21, 0x3242488
	0x0324247C LDR X8, [X23]
	0x03242480 LDR X8, [X8 + 0xB8]
	0x03242484 B 0x32424BC
	0x03242488 ADRP X8, 0xEE0000
	0x0324248C LDR X8, [X8 + 0x9D0]
	0x03242490 LDR X0, [X8]
	0x03242494 BL 0x1C16F10
	0x03242498 ADRP X8, 0xEE0000
	0x0324249C LDR X8, [X8 + 0x9C8]
	0x032424A0 MOV X21, X0
	0x032424A4 LDR X1, [X8]
	0x032424A8 BL 0x2A12DD4
	0x032424AC BL 0x1C16D44
	0x032424B0 LDR X8, [X23]
	0x032424B4 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x119B000
	008 Move W8, [X22+1066]
	009 Move W19, W2
	010 Move W20, W1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xEE0000
	017 Move X0, [X0+2128]
	018 Call 0x1C17CF4
	019 Move X0, 0xEE1000
	020 Move X0, [X0+1416]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1066], W8
	024 Move W8, [X21+16]
	025 Move W22, [X21+24]
	026 Move X23, 0xEE0000
	027 Move X23, [X23+2128]
	028 Subtract W9, W8, W19
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X0, X21
	031 Move W1, W19
	032 Call ValueStringBuilder.Grow, X0, X1
	033 Move W22, [X21+24]
	034 Move W8, [X21+16]
	035 Move X23, [X23]
	036 Subtract W8, W8, W22
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, X31
	039 Call ThrowHelper.ThrowArgumentOutOfRangeException
	040 Move X0, [X23+32]
	041 Move X23, [X21+8]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X10, -41250816
	050 Move V0, [X10+121]
	051 Move X8, W22
	052 Move W9, W19
	053 Add X11, X9, 1
	054 Subtract X9, X9, 1
	055 Add X12, X23, X8
	056 Move W10, 2
	057 And X8, X11, 0
	058 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	059 Add X9, X12, 2
	060 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	061 NotImplemented "Instruction INVALID not yet implemented."
	062 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	063 Move W10, S3
	064 Move TEMP, X10
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {69}
	068 NotImplemented "Instruction STURH not yet implemented."
	069 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	070 Move TEMP, X10
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 Invalid "Jump target not found in method."
	074 NotImplemented "Instruction STRH not yet implemented."
	075 NotImplemented "Instruction INVALID not yet implemented."
	076 Subtract X8, X8, 2
	077 Add X9, X9, 4
	078 Move W8, [X21+24]
	079 Add W8, W8, W19
	080 Move [X21+24], W8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X30, [X31+48]
	086 Move X23, [X31+56]
	087 Return 

Method: System.Void Append(System.Char* value, System.Int32 length)

Disassembly:
	0x032424B8 STR X21, [X8 + 0x40]
	0x032424BC LDR X21, [X8 + 0x40]
	0x032424C0 BL 0x1C16D44
	0x032424C4 CBZ X21, 0x32428A0
	0x032424C8 ADRP X8, 0xEE0000
	0x032424CC LDR X8, [X8 + 0x9C0]
	0x032424D0 LDR X3, [X8]
	0x032424D4 ADD X2, X31, 0x18
	0x032424D8 MOV X0, X21
	0x032424DC MOV W1, W20
	0x032424E0 BL 0x2A150AC
	0x032424E4 TBZ X0, 0x0, 0x32424F8
	0x032424E8 LDR X21, [X31 + 0x18]
	0x032424EC MOV X20, X31
	0x032424F0 MOVZ W22, 0xB
	0x032424F4 B 0x3242750
	0x032424F8 CMP W20, 0x4B1
	0x032424FC B.LE 0x3242538
	0x03242500 MOVZ W8, 0x4E9F
	0x03242504 CMP W20, W8
	0x03242508 B.LE 0x324255C
	0x0324250C MOVZ W8, 0x6FAF
	0x03242510 CMP W20, W8
	0x03242514 B.EQ 0x3242704
	0x03242518 MOVZ W8, 0xFDE8
	0x0324251C CMP W20, W8
	0x03242520 B.EQ 0x32426D0
	0x03242524 MOVZ W8, 0xFDE9
	0x03242528 CMP W20, W8
	0x0324252C B.NE 0x3242594
	0x03242530 BL 0x3241948
	0x03242534 B 0x3242710
	0x03242538 CMP W20, 0x3
	0x0324253C B.LE 0x3242588
	0x03242540 CMP W20, 0x4B0
	0x03242544 B.EQ 0x3242604
	0x03242548 CMP W20, 0x4B1
	0x0324254C B.EQ 0x32425FC
	0x03242550 CMP W20, 0x2A
	0x03242554 B.NE 0x3242594
	0x03242558 B 0x32428A8
	0x0324255C MOVZ W8, 0x2EE0
	0x03242560 CMP W20, W8
	0x03242564 B.EQ 0x324270C
	0x03242568 MOVZ W8, 0x2EE1
	0x0324256C CMP W20, W8
	0x03242570 B.EQ 0x32426D8
	0x03242574 MOVZ W8, 0x4E9F
	0x03242578 CMP W20, W8
	0x0324257C B.NE 0x3242594
	0x03242580 BL 0x3242EC8
	0x03242584 B 0x3242710
	0x03242588 CBNZ W20, 0x32428A8
	0x0324258C BL 0x3242BB4
	0x03242590 B 0x3242710
	0x03242594 ADRP X8, 0xEE0000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x119B000
	008 Move W8, [X22+1067]
	009 Move W19, W2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xEE0000
	017 Move X0, [X0+2128]
	018 Call 0x1C17CF4
	019 Move X0, 0xEE1000
	020 Move X0, [X0+1416]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1067], W8
	024 Move W8, [X21+16]
	025 Move W22, [X21+24]
	026 Move X23, 0xEE0000
	027 Move X23, [X23+2128]
	028 Subtract W9, W8, W19
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X0, X21
	031 Move W1, W19
	032 Call ValueStringBuilder.Grow, X0, X1
	033 Move W22, [X21+24]
	034 Move W8, [X21+16]
	035 Move X23, [X23]
	036 Subtract W8, W8, W22
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, X31
	039 Call ThrowHelper.ThrowArgumentOutOfRangeException
	040 Move X0, [X23+32]
	041 Move X23, [X21+8]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Add X8, X23, W22
	050 Move W9, W19
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Subtract X9, X9, 1
	053 NotImplemented "Instruction STRH not yet implemented."
	054 Move W8, [X21+24]
	055 Add W8, W8, W19
	056 Move [X21+24], W8
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Return 

Method: System.Span`1<System.Char> AppendSpan(System.Int32 length)

Disassembly:
	0x03242598 LDR X8, [X8 + 0x9E0]
	0x0324259C LDR X0, [X8]
	0x032425A0 LDR W8, [X0 + 0xE0]
	0x032425A4 CBNZ W8, 0x32425AC
	0x032425A8 BL 0x1C16DFC
	0x032425AC MOV W0, W20
	0x032425B0 MOV X1, X31
	0x032425B4 BL 0x3346B0C
	0x032425B8 CBZ X0, 0x32428E0
	0x032425BC MOVZ W8, 0x2EE0
	0x032425C0 CMP W20, W8
	0x032425C4 B.EQ 0x324260C
	0x032425C8 MOVZ W8, 0x2EE1
	0x032425CC CMP W20, W8
	0x032425D0 B.NE 0x3242614
	0x032425D4 ADRP X8, 0xEE0000
	0x032425D8 LDR X8, [X8 + 0x6F8]
	0x032425DC LDR X0, [X8]
	0x032425E0 BL 0x1C16F10
	0x032425E4 MOV X21, X0
	0x032425E8 MOVZ W1, 0x1
	0x032425EC MOVZ W2, 0x1
	0x032425F0 MOV X3, X31
	0x032425F4 BL 0x3235CB8
	0x032425F8 B 0x32426FC
	0x032425FC BL 0x3242CD8
	0x03242600 B 0x3242710
	0x03242604 BL 0x3242C30
	0x03242608 B 0x3242710
	0x0324260C BL 0x3242E20
	0x03242610 B 0x3242710
	0x03242614 ADRP X8, 0xEB1000
	0x03242618 LDR X8, [X8 + 0x9D0]
	0x0324261C LDR X0, [X8]
	0x03242620 MOVZ W1, 0x1
	0x03242624 BL 0x1C16D6C
	0x03242628 ADRP X8, 0xEB1000
	0x0324262C LDR X8, [X8 + 0x758]
	0x03242630 MOV X21, X0
	0x03242634 STR W20, [X31 + 0x10]
	0x03242638 LDR X0, [X8]
	0x0324263C ADD X1, X31, 0x10
	0x03242640 BL 0x1C16E04
	0x03242644 CBZ X21, 0x3242918
	0x03242648 MOV X22, X0
	0x0324264C CBZ X0, 0x3242664
	0x03242650 LDR X8, [X21]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x119B000
	007 Move W8, [X21+1068]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xEE0000
	015 Move X0, [X0+2128]
	016 Call 0x1C17CF4
	017 Move X0, 0xEE1000
	018 Move X0, [X0+1416]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1068], W8
	022 Move W8, [X20+16]
	023 NotImplemented "Instruction LDRSW not yet implemented."
	024 Move X22, 0xEE0000
	025 Move X22, [X22+2128]
	026 Subtract W9, W8, W19
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X0, X20
	029 Move W1, W19
	030 Call ValueStringBuilder.Grow, X0, X1
	031 Move W8, [X20+16]
	032 Add W9, W21, W19
	033 Move [X20+24], W9
	034 Move X22, [X22]
	035 Subtract W8, W8, W21
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, X31
	038 Call ThrowHelper.ThrowArgumentOutOfRangeException
	039 Move X0, [X22+32]
	040 Move X20, [X20+8]
	041 Move W8, [X0+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {47}
	046 Call 0x1C5D684
	047 Add X0, X20, X21
	048 Move W1, W19
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Return X0

Method: System.Void GrowAndAppend(System.Char c)

Disassembly:
	0x03241EF4 LDR X10, [X0]
	0x03241EF8 LDRB W11, [X10 + 0x130]
	0x03241EFC CMP W11, W8
	0x03241F00 B.CC 0x3241F14
	0x03241F04 LDR X8, [X10 + 0xC8]
	0x03241F08 LDR X8, [X8, X9, LSL #3]
	0x03241F0C CMP X8, X1
	0x03241F10 B.EQ 0x3241F1C
	0x03241F14 BL 0x1C171E0
	0x03241F18 STR X31, [X19 + 0x28]
	0x03241F1C ADRP X8, 0xEE1000
	0x03241F20 LDR X8, [X8 + 0x950]
	0x03241F24 LDR X0, [X8]
	0x03241F28 MOV X1, X31
	0x03241F2C BL 0x338C698
	0x03241F30 ADRP X8, 0xEE1000
	0x03241F34 LDR X8, [X8 + 0x988]
	0x03241F38 MOV X2, X0
	0x03241F3C LDR X1, [X8]
	0x03241F40 MOV X0, X20
	0x03241F44 MOV X3, X31
	0x03241F48 BL 0x32A9678
	0x03241F4C CBZ X0, 0x3241FAC
	0x03241F50 ADRP X8, 0xEE1000
	0x03241F54 LDR X8, [X8 + 0x958]
	0x03241F58 LDR X9, [X0]
	0x03241F5C LDR X1, [X8]
	0x03241F60 LDRB W10, [X9 + 0x130]
	0x03241F64 LDRB W8, [X1 + 0x130]
	0x03241F68 CMP W10, W8
	0x03241F6C B.CC 0x3241FC4
	0x03241F70 LDR X10, [X9 + 0xC8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xEE2000
	008 Move X21, [X21+1416]
	009 Move W19, W1
	010 Move X20, X0
	011 Move W22, 1
	012 Move X23, 0x119C000
	013 Move W1, 1
	014 Move X0, X20
	015 Call ValueStringBuilder.Grow, X0, X1
	016 Move W8, [X23+1250]
	017 Compare W8, 0
	018 JumpIfNotEqual {22}
	019 Move X0, X21
	020 Call 0x1C17CF4
	021 Move [X23+1250], W22
	022 NotImplemented "Instruction LDRSW not yet implemented."
	023 Move W9, [X20+16]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X9, [X20+8]
	027 Add W10, W8, 1
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 NotImplemented "Instruction STRH not yet implemented."
	031 Move [X20+24], W10
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X30, [X31+48]
	035 Move X23, [X31+56]
	036 Return 
	037 Call 0x1C17F28

Method: System.Void Grow(System.Int32 requiredAdditionalCapacity)

Disassembly:
	0x0324214C CBZ X19, 0x3242228
	0x03242150 ADRP X8, 0xEE0000
	0x03242154 LDR X8, [X8 + 0x978]
	0x03242158 ADRP X21, 0xEE0000
	0x0324215C ADRP X22, 0xEE0000
	0x03242160 ADRP X23, 0xEE0000
	0x03242164 LDR X21, [X21 + 0x970]
	0x03242168 LDR X22, [X22 + 0x988]
	0x0324216C LDR X23, [X23 + 0x980]
	0x03242170 LDRB W2, [X20 + 0x21]
	0x03242174 LDR X1, [X8]
	0x03242178 ADRP X24, 0xEE0000
	0x0324217C ADRP X25, 0xEE0000
	0x03242180 ADRP X26, 0xEE0000
	0x03242184 LDR X24, [X24 + 0x9A8]
	0x03242188 LDR X25, [X25 + 0x9A0]
	0x0324218C LDR X26, [X26 + 0x998]
	0x03242190 MOV X0, X19
	0x03242194 MOV X3, X31
	0x03242198 BL 0x32A8CA8
	0x0324219C LDR X2, [X20 + 0x28]
	0x032421A0 LDR X1, [X21]
	0x032421A4 MOV X0, X19
	0x032421A8 MOV X3, X31
	0x032421AC BL 0x32A8BF0
	0x032421B0 LDR X2, [X20 + 0x30]
	0x032421B4 LDR X1, [X22]
	0x032421B8 MOV X0, X19
	0x032421BC MOV X3, X31
	0x032421C0 BL 0x32A8BF0
	0x032421C4 LDR W2, [X20 + 0x10]
	0x032421C8 LDR X1, [X23]
	0x032421CC MOV X0, X19
	0x032421D0 MOV X3, X31
	0x032421D4 BL 0x32A8F28
	0x032421D8 LDR X1, [X24]
	0x032421DC MOV X0, X19
	0x032421E0 MOV X2, X31
	0x032421E4 MOV X3, X31
	0x032421E8 BL 0x32A8BF0
	0x032421EC LDR W2, [X20 + 0x10]
	0x032421F0 LDR X1, [X25]
	0x032421F4 MOV X0, X19
	0x032421F8 MOV X3, X31
	0x032421FC BL 0x32A8F28
	0x03242200 LDR X1, [X26]
	0x03242204 MOV X0, X19
	0x03242208 LDP X20, X19, [X31 + 0x40]
	0x0324220C LDP X22, X21, [X31 + 0x30]
	0x03242210 LDP X24, X23, [X31 + 0x20]
	0x03242214 LDP X26, X25, [X31 + 0x10]
	0x03242218 MOV X2, X31
	0x0324221C MOV X3, X31
	0x03242220 LDR X30, [X31], #0x50
	0x03242224 B 0x32A8BF0
	0x03242228 ADRP X0, 0xEB6000
	0x0324222C LDR X0, [X0 + 0x528]
	0x03242230 BL 0x1C16D08
	0x03242234 BL 0x1C16F10
	0x03242238 MOV X19, X0
	0x0324223C ADRP X0, 0xEDB000
	0x03242240 LDR X0, [X0 + 0x2D8]
	0x03242244 BL 0x1C16D08
	0x03242248 MOV X1, X0
	0x0324224C MOV X0, X19
	0x03242250 MOV X2, X31
	0x03242254 BL 0x330E100
	0x03242258 ADRP X0, 0xEE0000
	0x0324225C LDR X0, [X0 + 0x9B0]
	0x03242260 BL 0x1C16D08
	0x03242264 MOV X1, X0
	0x03242268 MOV X0, X19
	0x0324226C BL 0x1C16DEC
	0x03242270 STR X30, [X31 - 0x20]!
	0x03242274 STP X20, X19, [X31 + 0x10]
	0x03242278 ADRP X19, 0x119A000
	0x0324227C ADRP X20, 0xEE0000
	0x03242280 LDRB W8, [X19 + 0x435]
	0x03242284 LDR X20, [X20 + 0x3F8]
	0x03242288 TBNZ X8, 0x0, 0x32422AC
	0x0324228C ADRP X0, 0xEE0000
	0x03242290 LDR X0, [X0 + 0x3F8]
	0x03242294 BL 0x1C16CF4
	0x03242298 ADRP X0, 0xEB7000
	0x0324229C LDR X0, [X0 + 0xCC0]
	0x032422A0 BL 0x1C16CF4
	0x032422A4 MOVZ W8, 0x1
	0x032422A8 STRB W8, [X19 + 0x435]
	0x032422AC LDR X8, [X20]
	0x032422B0 LDR X8, [X8 + 0xB8]
	0x032422B4 LDR X0, [X8 + 0x48]
	0x032422B8 CBNZ X0, 0x32422FC
	0x032422BC ADRP X8, 0xEB7000
	0x032422C0 LDR X8, [X8 + 0xCC0]
	0x032422C4 LDR X0, [X8]
	0x032422C8 BL 0x1C16F10
	0x032422CC MOV X1, X31
	0x032422D0 MOV X19, X0
	0x032422D4 BL 0x33BDD8C
	0x032422D8 LDR X8, [X20]
	0x032422DC MOV X1, X19
	0x032422E0 MOV X2, X31
	0x032422E4 LDR X8, [X8 + 0xB8]
	0x032422E8 ADD X0, X8, 0x48
	0x032422EC BL 0x1C24138
	0x032422F0 LDR X8, [X20]
	0x032422F4 LDR X8, [X8 + 0xB8]
	0x032422F8 LDR X0, [X8 + 0x48]
	0x032422FC LDP X20, X19, [X31 + 0x10]
	0x03242300 LDR X30, [X31], #0x20
	0x03242304 RET
	0x03242308 SUB X31, X31, 0x50
	0x0324230C STP X30, X23, [X31 + 0x20]
	0x03242310 STP X22, X21, [X31 + 0x30]
	0x03242314 STP X20, X19, [X31 + 0x40]
	0x03242318 ADRP X21, 0x119A000
	0x0324231C ADRP X19, 0xEE0000
	0x03242320 LDRB W8, [X21 + 0x436]
	0x03242324 LDR X19, [X19 + 0x400]
	0x03242328 MOV W20, W0
	0x0324232C TBNZ X8, 0x0, 0x32423C8
	0x03242330 ADRP X0, 0xEE0000
	0x03242334 LDR X0, [X0 + 0x9B8]
	0x03242338 BL 0x1C16CF4
	0x0324233C ADRP X0, 0xEE0000
	0x03242340 LDR X0, [X0 + 0x9C0]
	0x03242344 BL 0x1C16CF4
	0x03242348 ADRP X0, 0xEE0000
	0x0324234C LDR X0, [X0 + 0x9C8]
	0x03242350 BL 0x1C16CF4
	0x03242354 ADRP X0, 0xEE0000
	0x03242358 LDR X0, [X0 + 0x9D0]
	0x0324235C BL 0x1C16CF4
	0x03242360 ADRP X0, 0xEE0000
	0x03242364 LDR X0, [X0 + 0x9D8]
	0x03242368 BL 0x1C16CF4
	0x0324236C ADRP X0, 0xEE0000
	0x03242370 LDR X0, [X0 + 0x400]
	0x03242374 BL 0x1C16CF4
	0x03242378 ADRP X0, 0xEE0000
	0x0324237C LDR X0, [X0 + 0x9E0]
	0x03242380 BL 0x1C16CF4
	0x03242384 ADRP X0, 0xEE0000
	0x03242388 LDR X0, [X0 + 0x3F8]
	0x0324238C BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x119B000
	010 Move X22, 0xEDD000
	011 Move W8, [X21+1069]
	012 Move X22, [X22+3424]
	013 Move W20, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0xEDD000
	020 Move X0, [X0+3416]
	021 Call 0x1C17CF4
	022 Move X0, 0xEDD000
	023 Move X0, [X0+3424]
	024 Call 0x1C17CF4
	025 Move X0, 0xEB2000
	026 Move X0, [X0+1448]
	027 Call 0x1C17CF4
	028 Move X0, 0xEE1000
	029 Move X0, [X0+2328]
	030 Call 0x1C17CF4
	031 Move X0, 0xEE1000
	032 Move X0, [X0+1416]
	033 Call 0x1C17CF4
	034 Move X0, 0xEE1000
	035 Move X0, [X0+720]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+1069], W8
	039 Move X0, [X22]
	040 Move X23, 0xEDD000
	041 Move W8, [X0+224]
	042 Move X23, [X23+3416]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X21, [X23]
	047 Move X0, [X21+32]
	048 Move W8, [X0+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {54}
	053 Call 0x1C5D684
	054 Move X8, [X0+192]
	055 Move X0, [X8+8]
	056 Move W8, [X0+309]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {62}
	061 Call 0x1C5D684
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, [X21+32]
	067 Move W8, [X0+309]
	068 Move TEMP, X8
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {73}
	072 Call 0x1C5D684
	073 Move X8, [X0+192]
	074 Move X21, 0xEB2000
	075 Move X0, [X8+8]
	076 Move W8, [X0+309]
	077 Move X21, [X21+1448]
	078 Move TEMP, X8
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {83}
	082 Call 0x1C5D684
	083 Move X8, [X0+184]
	084 Move X0, [X21]
	085 Move W24, [X19+24]
	086 Move W25, [X19+16]
	087 Move X21, [X8]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Add W0, W24, W20
	093 Move W1, W25
	094 ShiftRight W1, 31
	095 And W1, W1, 0x3FFFFFFF
	096 Move X2, X31
	097 Call Math.Max, X0, X1
	098 Compare X21, 0
	099 JumpIfEqual {197}
	100 Move X8, [X21]
	101 Move X24, 0xEE1000
	102 Move X25, 0xEE1000
	103 Move W1, W0
	104 Move X9, [X8+376]
	105 Move X2, [X8+384]
	106 Move X24, [X24+720]
	107 Move X25, [X25+2328]
	108 Move X0, X21
	109 Add X20, X19, 8
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move X1, [X24]
	112 Move X21, X0
	113 Call Span`1<Char>.op_Implicit, X0
	114 Move X3, [X25]
	115 Move X2, X0
	116 Move X4, X1
	117 Move X0, X20
	118 Move X1, X2
	119 Move X2, X4
	120 Call Span`1<Char>.CopyTo, X0, X1
	121 Move X20, [X19]
	122 Move [X19], X21
	123 Move X1, [X24]
	124 Move X0, X21
	125 Call Span`1<Char>.op_Implicit, X0
	126 Move [X19+8], X0
	127 Move [X19+16], X1
	128 Compare X20, 0
	129 JumpIfEqual {188}
	130 Move X0, [X22]
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {135}
	134 Call 0x1C17DFC
	135 Move X19, [X23]
	136 Move X0, [X19+32]
	137 Move W8, [X0+309]
	138 Move TEMP, X8
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfEqual {143}
	142 Call 0x1C5D684
	143 Move X8, [X0+192]
	144 Move X0, [X8+8]
	145 Move W8, [X0+309]
	146 Move TEMP, X8
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfEqual {151}
	150 Call 0x1C5D684
	151 Move W8, [X0+224]
	152 Compare W8, 0
	153 JumpIfNotEqual {155}
	154 Call 0x1C17DFC
	155 Move X0, [X19+32]
	156 Move W8, [X0+309]
	157 Move TEMP, X8
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfEqual {162}
	161 Call 0x1C5D684
	162 Move X8, [X0+192]
	163 Move X0, [X8+8]
	164 Move W8, [X0+309]
	165 Move TEMP, X8
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfEqual {170}
	169 Call 0x1C5D684
	170 Move X8, [X0+184]
	171 Move X0, [X8]
	172 Compare X0, 0
	173 JumpIfEqual {197}
	174 Move X8, [X0]
	175 Move X1, X20
	176 Move X20, [X31+48]
	177 Move X19, [X31+56]
	178 Move X22, [X31+32]
	179 Move X21, [X31+40]
	180 Move X4, [X8+392]
	181 Move X3, [X8+400]
	182 Move X24, [X31+16]
	183 Move X23, [X31+24]
	184 Move W2, W31
	185 Move X30, [X31+64]
	186 Move X25, [X31+72]
	187 CallNoReturn X4
	188 Move X20, [X31+48]
	189 Move X19, [X31+56]
	190 Move X22, [X31+32]
	191 Move X21, [X31+40]
	192 Move X24, [X31+16]
	193 Move X23, [X31+24]
	194 Move X30, [X31+64]
	195 Move X25, [X31+72]
	196 Return 
	197 Call 0x1C17F20

Method: System.Void Dispose()

Disassembly:
	0x03242654 LDR X1, [X8 + 0x40]
	0x03242658 MOV X0, X22
	0x0324265C BL 0x1C16E00
	0x03242660 CBZ X0, 0x3242994
	0x03242664 LDR W8, [X21 + 0x18]
	0x03242668 CBZ W8, 0x324291C
	0x0324266C STR X22, [X21 + 0x20]
	0x03242670 ADRP X8, 0xEE0000
	0x03242674 LDR X8, [X8 + 0x9D8]
	0x03242678 LDR X0, [X8]
	0x0324267C LDR W8, [X0 + 0xE0]
	0x03242680 CBNZ W8, 0x3242688
	0x03242684 BL 0x1C16DFC
	0x03242688 ADRP X8, 0xEE0000
	0x0324268C LDR X8, [X8 + 0x9E8]
	0x03242690 LDR X0, [X8]
	0x03242694 MOV X1, X21
	0x03242698 BL 0x3243008
	0x0324269C CBZ X0, 0x3242920
	0x032426A0 LDR X8, [X0]
	0x032426A4 LDR X1, [X23]
	0x032426A8 LDRB W10, [X8 + 0x130]
	0x032426AC LDRB W9, [X1 + 0x130]
	0x032426B0 CMP W10, W9
	0x032426B4 B.CC 0x32426CC
	0x032426B8 LDR X8, [X8 + 0xC8]
	0x032426BC ADD X8, X8, X9, 0x3, LSL
	0x032426C0 LDUR X8, [X8 - 0x8]
	0x032426C4 CMP X8, X1
	0x032426C8 B.EQ 0x3242710
	0x032426CC BL 0x1C171E0
	0x032426D0 BL 0x3242D80
	0x032426D4 B 0x3242710
	0x032426D8 ADRP X8, 0xEE0000
	0x032426DC LDR X8, [X8 + 0x6F8]
	0x032426E0 LDR X0, [X8]
	0x032426E4 BL 0x1C16F10
	0x032426E8 MOV X21, X0
	0x032426EC MOVZ W1, 0x1
	0x032426F0 MOVZ W2, 0x1
	0x032426F4 MOV X3, X31
	0x032426F8 BL 0x3235CB8
	0x032426FC STR X21, [X31 + 0x18]
	0x03242700 B 0x3242714
	0x03242704 BL 0x3242F68
	0x03242708 B 0x3242710
	0x0324270C BL 0x3242E20
	0x03242710 STR X0, [X31 + 0x18]
	0x03242714 LDR X8, [X23]
	0x03242718 LDR X8, [X8 + 0xB8]
	0x0324271C LDR X21, [X8 + 0x40]
	0x03242720 BL 0x1C16D44
	0x03242724 CBZ X21, 0x32428A4
	0x03242728 ADRP X8, 0xEE0000
	0x0324272C LDR X2, [X31 + 0x18]
	0x03242730 LDR X8, [X8 + 0x9B8]
	0x03242734 LDR X3, [X8]
	0x03242738 MOV X0, X21
	0x0324273C MOV W1, W20
	0x03242740 BL 0x2A1368C
	0x03242744 MOV X20, X31
	0x03242748 MOV X21, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x119B000
	005 Move W8, [X19+1070]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xEDD000
	012 Move X0, [X0+3416]
	013 Call 0x1C17CF4
	014 Move X0, 0xEDD000
	015 Move X0, [X0+3424]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+1070], W8
	019 Move X19, [X20]
	020 NotImplemented "Instruction MOVI not yet implemented."
	021 Move [X20], V0
	022 Move [X20+8], V0
	023 Compare X19, 0
	024 JumpIfEqual {82}
	025 Move X8, 0xEDD000
	026 Move X8, [X8+3424]
	027 Move X20, 0xEDD000
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Move X20, [X20+3416]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X20, [X20]
	035 Move X0, [X20+32]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X0+192]
	043 Move X0, [X8+8]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, [X20+32]
	055 Move W8, [X0+309]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {61}
	060 Call 0x1C5D684
	061 Move X8, [X0+192]
	062 Move X0, [X8+8]
	063 Move W8, [X0+309]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {69}
	068 Call 0x1C5D684
	069 Move X8, [X0+184]
	070 Move X0, [X8]
	071 Compare X0, 0
	072 JumpIfEqual {86}
	073 Move X8, [X0]
	074 Move X1, X19
	075 Move X20, [X31+16]
	076 Move X19, [X31+24]
	077 Move W2, W31
	078 Move X4, [X8+392]
	079 Move X3, [X8+400]
	080 Move X30, [X31+32]
	081 CallNoReturn X4
	082 Move X20, [X31+16]
	083 Move X19, [X31+24]
	084 Move X30, [X31+32]
	085 Return 
	086 Call 0x1C17F20

