Type: System.Text.DecoderFallbackBuffer

Method: System.Boolean Fallback(System.Byte[] bytesUnknown, System.Int32 index)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Char GetNextChar()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void Reset()

Disassembly:
	0x033FEA88 LDR X0, [X0 + 0x10]
	0x033FEA8C CBZ X0, 0x33FEAA0
	0x033FEA90 LDR X8, [X0]
	0x033FEA94 LDP X2, X1, [X8 + 0x158]
	0x033FEA98 LDR X30, [X31], #0x10
	0x033FEA9C BR X2
	0x033FEAA0 BL 0x1C16F20
	0x033FEAA4 STR X30, [X31 - 0x10]!
	0x033FEAA8 LDR W8, [X0 + 0x28]
	0x033FEAAC CMP W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X8, [X19]
	005 Move X0, X19
	006 Move X9, [X8+392]
	007 Move X1, [X8+400]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 And W31, W0, 0xFFFF
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return 

Method: System.Void InternalReset()

Disassembly:
	0x033FD800 BL 0x1C16DFC
	0x033FD804 MOV X0, X31
	0x033FD808 BL 0x3338524
	0x033FD80C LDR W8, [X20 + 0x18]

ISIL:
	001 Move X8, [X0]
	002 Move [X0+16], X31
	003 Move X2, [X8+408]
	004 Move X1, [X8+416]
	005 CallNoReturn X2

Method: System.Void InternalInitialize(System.Byte* byteStart, System.Char* charEnd)

Disassembly:
	0x033FD570 CMP W10, W14
	0x033FD574 B.EQ 0x33FD5D8

ISIL:
	001 Move [X0+16], X1
	002 Move [X0+24], X2
	003 Return 

Method: System.Boolean InternalFallback(System.Byte[] bytes, System.Byte* pBytes, ref System.Char* chars)

Disassembly:
	0x033FEAB0 B.GE 0x33FEADC
	0x033FEAB4 LDR X8, [X0 + 0x20]
	0x033FEAB8 CBZ X8, 0x33FEAE0
	0x033FEABC LDR W8, [X8 + 0x10]
	0x033FEAC0 CBZ W8, 0x33FEACC
	0x033FEAC4 MOVN W9, 0x0
	0x033FEAC8 STP W8, W9, [X0 + 0x28]
	0x033FEACC CMP W8, 0x0
	0x033FEAD0 CSET W0, NE
	0x033FEAD4 LDR X30, [X31], #0x10
	0x033FEAD8 RET
	0x033FEADC BL 0x33FDDA8
	0x033FEAE0 BL 0x1C16F20
	0x033FEAE4 STR X30, [X31 - 0x10]!
	0x033FEAE8 LDP W8, W9, [X0 + 0x28]
	0x033FEAEC SUBS W8, W8, 0x1
	0x033FEAF0 ADD W1, W9, 0x1
	0x033FEAF4 STP W8, W1, [X0 + 0x28]
	0x033FEAF8 B.MI 0x33FEB10
	0x033FEAFC MOVN W9, 0x80000000
	0x033FEB00 CMP W8, W9
	0x033FEB04 B.NE 0x33FEB1C
	0x033FEB08 MOVN W8, 0x0
	0x033FEB0C STR W8, [X0 + 0x28]
	0x033FEB10 MOV W0, W31
	0x033FEB14 LDR X30, [X31], #0x10
	0x033FEB18 RET
	0x033FEB1C LDR X0, [X0 + 0x20]
	0x033FEB20 CBZ X0, 0x33FEB30
	0x033FEB24 MOV X2, X31
	0x033FEB28 LDR X30, [X31], #0x10
	0x033FEB2C B 0x3222A1C
	0x033FEB30 BL 0x1C16F20
	0x033FEB34 MOVI V0.2D, 0xFFFFFFFFFFFFFFFF
	0x033FEB38 STR D0, [X0 + 0x28]
	0x033FEB3C STR X31, [X0 + 0x10]
	0x033FEB40 RET
	0x033FEB44 STR X30, [X31 - 0x10]!
	0x033FEB48 LDR X8, [X0 + 0x20]
	0x033FEB4C CBZ X8, 0x33FEB5C
	0x033FEB50 LDR W0, [X8 + 0x10]
	0x033FEB54 LDR X30, [X31], #0x10
	0x033FEB58 RET
	0x033FEB5C BL 0x1C16F20
	0x033FEB60 MOV X1, X31
	0x033FEB64 B 0x33BDD8C
	0x033FEB68 LDR X0, [X0 + 0x10]
	0x033FEB6C RET
	0x033FEB70 STR X30, [X31 - 0x30]!
	0x033FEB74 STP X22, X21, [X31 + 0x10]
	0x033FEB78 STP X20, X19, [X31 + 0x20]
	0x033FEB7C ADRP X20, 0xFDF000
	0x033FEB80 ADRP X22, 0xCFE000
	0x033FEB84 ADRP X21, 0xCF5000
	0x033FEB88 LDRB W8, [X20 + 0x4F2]
	0x033FEB8C LDR X22, [X22 + 0x8D8]
	0x033FEB90 LDR X21, [X21 + 0x618]
	0x033FEB94 MOV X19, X0
	0x033FEB98 TBNZ X8, 0x0, 0x33FEBBC
	0x033FEB9C ADRP X0, 0xCF5000
	0x033FEBA0 LDR X0, [X0 + 0x618]
	0x033FEBA4 BL 0x1C16CF4
	0x033FEBA8 ADRP X0, 0xCFE000
	0x033FEBAC LDR X0, [X0 + 0x8D8]
	0x033FEBB0 BL 0x1C16CF4
	0x033FEBB4 MOVZ W8, 0x1
	0x033FEBB8 STRB W8, [X20 + 0x4F2]
	0x033FEBBC LDR X0, [X22]
	0x033FEBC0 MOV W1, W31
	0x033FEBC4 BL 0x1C16D6C
	0x033FEBC8 LDR X8, [X19]
	0x033FEBCC MOV X20, X0
	0x033FEBD0 MOVZ W4, 0x1
	0x033FEBD4 MOV X0, X19
	0x033FEBD8 LDP X9, X5, [X8 + 0x188]
	0x033FEBDC MOV X1, X20
	0x033FEBE0 MOV W2, W31
	0x033FEBE4 MOV W3, W31
	0x033FEBE8 BLR X9
	0x033FEBEC LDR X8, [X21]
	0x033FEBF0 MOV W1, W0
	0x033FEBF4 MOV X0, X8
	0x033FEBF8 BL 0x1C16D6C
	0x033FEBFC LDR X8, [X19]
	0x033FEC00 MOV X4, X0
	0x033FEC04 MOVZ W6, 0x1
	0x033FEC08 MOV X0, X19
	0x033FEC0C LDP X9, X7, [X8 + 0x1A8]
	0x033FEC10 MOV X1, X20
	0x033FEC14 MOV W2, W31
	0x033FEC18 MOV W3, W31
	0x033FEC1C MOV W5, W31
	0x033FEC20 BLR X9
	0x033FEC24 LDR X0, [X19 + 0x18]
	0x033FEC28 CBZ X0, 0x33FEC44
	0x033FEC2C LDR X8, [X0]
	0x033FEC30 LDP X20, X19, [X31 + 0x20]
	0x033FEC34 LDP X22, X21, [X31 + 0x10]
	0x033FEC38 LDP X2, X1, [X8 + 0x1C8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xFE0000
	009 Move W8, [X23+1255]
	010 Move X19, X3
	011 Move X22, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xCF8000
	019 Move X0, [X0+368]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+1255], W8
	023 Compare X21, 0
	024 JumpIfEqual {127}
	025 Move X8, [X20]
	026 Move W9, [X20+16]
	027 Move W10, [X21+24]
	028 Move X0, X20
	029 Move X11, [X8+376]
	030 Move X3, [X8+384]
	031 Subtract W8, W22, W9
	032 Subtract W2, W8, W10
	033 Move X1, X21
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {99}
	039 Move X8, [X20]
	040 Move X22, [X19]
	041 Move X0, X20
	042 Move X9, [X8+392]
	043 Move X1, [X8+400]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 And W31, W0, 0xFFFF
	046 Move X23, 0xCF8000
	047 Move X23, [X23+368]
	048 Move W21, W0
	049 Move W24, W31
	050 Move X0, [X23]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move W0, W21
	056 Move X1, X31
	057 Call Char.IsSurrogate, X0
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {84}
	062 Move X0, [X23]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move W0, W21
	068 Move X1, X31
	069 Call Char.IsHighSurrogate, X0
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {79}
	074 Move TEMP, X24
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {109}
	078 Move W24, 1
	079 Move TEMP, X24
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {109}
	083 Move W24, W31
	084 Move X8, [X20+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction STRH not yet implemented."
	087 Move X8, [X20]
	088 Move X0, X20
	089 Move X9, [X8+392]
	090 Move X1, [X8+400]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move W21, W0
	093 And W31, W0, 0xFFFF
	094 Move TEMP, X24
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {109}
	098 Move [X19], X22
	099 Move W0, 1
	100 Move X20, [X31+48]
	101 Move X19, [X31+56]
	102 Move X22, [X31+32]
	103 Move X21, [X31+40]
	104 Move X24, [X31+16]
	105 Move X23, [X31+24]
	106 Move X30, [X31+64]
	107 Return X0
	108 Move W0, W31
	109 Move X0, 0xCFE000
	110 Move X0, [X0+1400]
	111 Call 0x1C17D08
	112 Call 0x1C17F10
	113 Move X19, X0
	114 Move X0, 0xD25000
	115 Move X0, [X0+824]
	116 Call 0x1C17D08
	117 Move X1, X0
	118 Move X0, X19
	119 Move X2, X31
	120 Call ArgumentException..ctor, X0, X1
	121 Move X0, 0xD30000
	122 Move X0, [X0+3064]
	123 Call 0x1C17D08
	124 Move X1, X0
	125 Move X0, X19
	126 Call 0x1C17DEC
	127 Call 0x1C17F20

Method: System.Int32 InternalFallback(System.Byte[] bytes, System.Byte* pBytes)

Disassembly:
	0x033FEC3C LDR X30, [X31], #0x30
	0x033FEC40 BR X2
	0x033FEC44 LDP X20, X19, [X31 + 0x20]
	0x033FEC48 LDP X22, X21, [X31 + 0x10]
	0x033FEC4C LDR X30, [X31], #0x30
	0x033FEC50 RET
	0x033FEC54 STP X30, X23, [X31 - 0x30]!
	0x033FEC58 STP X22, X21, [X31 + 0x10]
	0x033FEC5C STP X20, X19, [X31 + 0x20]
	0x033FEC60 ADRP X23, 0xFDF000
	0x033FEC64 LDRB W8, [X23 + 0x4F3]
	0x033FEC68 MOV W20, W3
	0x033FEC6C MOV W19, W2
	0x033FEC70 MOV X22, X1
	0x033FEC74 MOV X21, X0
	0x033FEC78 TBNZ X8, 0x0, 0x33FEC90
	0x033FEC7C ADRP X0, 0xCFE000
	0x033FEC80 LDR X0, [X0 + 0x8D8]
	0x033FEC84 BL 0x1C16CF4
	0x033FEC88 MOVZ W8, 0x1
	0x033FEC8C STRB W8, [X23 + 0x4F3]
	0x033FEC90 CBZ X22, 0x33FED10
	0x033FEC94 TBNZ X19, 0x1F, 0x33FED58
	0x033FEC98 ADRP X8, 0xCFE000
	0x033FEC9C LDR X8, [X8 + 0x8D8]
	0x033FECA0 MOV W1, W19
	0x033FECA4 LDR X0, [X8]
	0x033FECA8 BL 0x1C16D6C
	0x033FECAC MOV X1, X0
	0x033FECB0 CBZ W19, 0x33FECE4
	0x033FECB4 CBZ X1, 0x33FEDB4
	0x033FECB8 LDR W9, [X1 + 0x18]
	0x033FECBC MOV X8, X31
	0x033FECC0 MOV W10, W19
	0x033FECC4 ADD X11, X1, 0x20
	0x033FECC8 CMP X8, X9
	0x033FECCC B.CS 0x33FED0C
	0x033FECD0 LDRH W12, [X22], #0x2
	0x033FECD4 STRH W12, [X11, X8, LSL #1]
	0x033FECD8 ADD X8, X8, 0x1
	0x033FECDC CMP X10, X8
	0x033FECE0 B.NE 0x33FECC8
	0x033FECE4 LDR X8, [X21]
	0x033FECE8 AND W4, W20, 0x1
	0x033FECEC MOV X0, X21
	0x033FECF0 MOV W3, W19
	0x033FECF4 LDP X6, X5, [X8 + 0x188]
	0x033FECF8 LDP X20, X19, [X31 + 0x20]
	0x033FECFC LDP X22, X21, [X31 + 0x10]
	0x033FED00 MOV W2, W31
	0x033FED04 LDP X30, X23, [X31], #0x30
	0x033FED08 BR X6
	0x033FED0C BL 0x1C16F28
	0x033FED10 ADRP X0, 0xCFA000
	0x033FED14 LDR X0, [X0 + 0x528]
	0x033FED18 BL 0x1C16D08
	0x033FED1C BL 0x1C16F10
	0x033FED20 MOV X19, X0
	0x033FED24 ADRP X0, 0xD24000
	0x033FED28 LDR X0, [X0 + 0x2D8]
	0x033FED2C BL 0x1C16D08
	0x033FED30 MOV X20, X0
	0x033FED34 ADRP X0, 0xD24000
	0x033FED38 LDR X0, [X0 + 0x2E0]
	0x033FED3C BL 0x1C16D08
	0x033FED40 MOV X2, X0
	0x033FED44 MOV X0, X19
	0x033FED48 MOV X1, X20
	0x033FED4C MOV X3, X31
	0x033FED50 BL 0x3315F7C
	0x033FED54 B 0x33FED9C
	0x033FED58 ADRP X0, 0xCFD000
	0x033FED5C LDR X0, [X0 + 0x760]
	0x033FED60 BL 0x1C16D08
	0x033FED64 BL 0x1C16F10
	0x033FED68 MOV X19, X0
	0x033FED6C ADRP X0, 0xD1D000
	0x033FED70 LDR X0, [X0 + 0x648]
	0x033FED74 BL 0x1C16D08
	0x033FED78 MOV X20, X0
	0x033FED7C ADRP X0, 0xD1D000
	0x033FED80 LDR X0, [X0 + 0x670]
	0x033FED84 BL 0x1C16D08
	0x033FED88 MOV X2, X0
	0x033FED8C MOV X0, X19
	0x033FED90 MOV X1, X20
	0x033FED94 MOV X3, X31
	0x033FED98 BL 0x3311888
	0x033FED9C ADRP X0, 0xD2F000
	0x033FEDA0 LDR X0, [X0 + 0xC58]
	0x033FEDA4 BL 0x1C16D08

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xFE0000
	008 Move W8, [X22+1256]
	009 Move X21, X2
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCF8000
	017 Move X0, [X0+368]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1256], W8
	021 Compare X20, 0
	022 JumpIfEqual {121}
	023 Move X8, [X19]
	024 Move W9, [X19+16]
	025 Move W10, [X20+24]
	026 Move X0, X19
	027 Move X11, [X8+376]
	028 Move X3, [X8+384]
	029 Subtract W8, W21, W9
	030 Subtract W2, W8, W10
	031 Move X1, X20
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {112}
	037 Move X8, [X19]
	038 Move X0, X19
	039 Move X9, [X8+392]
	040 Move X1, [X8+400]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 And W31, W0, 0xFFFF
	043 Move X22, 0xCF8000
	044 Move X22, [X22+368]
	045 Move W21, W0
	046 Move W20, W31
	047 Move W23, W31
	048 Move X0, [X22]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move W0, W21
	054 Move X1, X31
	055 Call Char.IsSurrogate, X0
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {82}
	060 Move X0, [X22]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move W0, W21
	066 Move X1, X31
	067 Call Char.IsHighSurrogate, X0
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {77}
	072 Move TEMP, X23
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {94}
	076 Move W23, 1
	077 Move TEMP, X23
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {94}
	081 Move W23, W31
	082 Move X8, [X19]
	083 Move X0, X19
	084 Add W20, W20, 1
	085 Move X9, [X8+392]
	086 Move X1, [X8+400]
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move W21, W0
	089 And W31, W0, 0xFFFF
	090 Move TEMP, X23
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {113}
	094 Move X0, 0xCFE000
	095 Move X0, [X0+1400]
	096 Call 0x1C17D08
	097 Call 0x1C17F10
	098 Move X19, X0
	099 Move X0, 0xD25000
	100 Move X0, [X0+824]
	101 Call 0x1C17D08
	102 Move X1, X0
	103 Move X0, X19
	104 Move X2, X31
	105 Call ArgumentException..ctor, X0, X1
	106 Move X0, 0xD30000
	107 Move X0, [X0+3072]
	108 Call 0x1C17D08
	109 Move X1, X0
	110 Move X0, X19
	111 Call 0x1C17DEC
	112 Move W20, W31
	113 Move W0, W20
	114 Move X20, [X31+32]
	115 Move X19, [X31+40]
	116 Move X22, [X31+16]
	117 Move X21, [X31+24]
	118 Move X30, [X31+48]
	119 Move X23, [X31+56]
	120 Return X0
	121 Call 0x1C17F20

Method: System.Void ThrowLastBytesRecursive(System.Byte[] bytesUnknown)

Disassembly:
	0x033FEDA8 MOV X1, X0
	0x033FEDAC MOV X0, X19
	0x033FEDB0 BL 0x1C16DEC
	0x033FEDB4 BL 0x1C16F20
	0x033FEDB8 STP X30, X25, [X31 - 0x40]!
	0x033FEDBC STP X24, X23, [X31 + 0x10]
	0x033FEDC0 STP X22, X21, [X31 + 0x20]
	0x033FEDC4 STP X20, X19, [X31 + 0x30]
	0x033FEDC8 ADRP X25, 0xFDF000
	0x033FEDCC LDRB W8, [X25 + 0x4F4]
	0x033FEDD0 MOV W22, W5
	0x033FEDD4 MOV W20, W4
	0x033FEDD8 MOV X19, X3
	0x033FEDDC MOV W21, W2
	0x033FEDE0 MOV X24, X1
	0x033FEDE4 MOV X23, X0
	0x033FEDE8 TBNZ X8, 0x0, 0x33FEE0C
	0x033FEDEC ADRP X0, 0xCF5000
	0x033FEDF0 LDR X0, [X0 + 0x618]
	0x033FEDF4 BL 0x1C16CF4
	0x033FEDF8 ADRP X0, 0xCFE000
	0x033FEDFC LDR X0, [X0 + 0x8D8]
	0x033FEE00 BL 0x1C16CF4
	0x033FEE04 MOVZ W8, 0x1
	0x033FEE08 STRB W8, [X25 + 0x4F4]
	0x033FEE0C CBZ X19, 0x33FEF08
	0x033FEE10 CBZ X24, 0x33FEF14
	0x033FEE14 TBNZ X20, 0x1F, 0x33FEF5C
	0x033FEE18 TBNZ X21, 0x1F, 0x33FEF5C
	0x033FEE1C ADRP X8, 0xCFE000
	0x033FEE20 LDR X8, [X8 + 0x8D8]
	0x033FEE24 MOV W1, W21
	0x033FEE28 LDR X0, [X8]
	0x033FEE2C BL 0x1C16D6C
	0x033FEE30 CMP W21, 0x1
	0x033FEE34 MOV X25, X0
	0x033FEE38 B.LT 0x33FEE6C
	0x033FEE3C CBZ X25, 0x33FEF04
	0x033FEE40 LDR W9, [X25 + 0x18]
	0x033FEE44 MOV X8, X31
	0x033FEE48 MOV W10, W21
	0x033FEE4C ADD X11, X25, 0x20
	0x033FEE50 CMP X8, X9
	0x033FEE54 B.CS 0x33FEF00
	0x033FEE58 LDRH W12, [X24], #0x2
	0x033FEE5C STRH W12, [X11, X8, LSL #1]
	0x033FEE60 ADD X8, X8, 0x1
	0x033FEE64 CMP X10, X8
	0x033FEE68 B.NE 0x33FEE50
	0x033FEE6C ADRP X8, 0xCF5000
	0x033FEE70 LDR X8, [X8 + 0x618]
	0x033FEE74 MOV W1, W20
	0x033FEE78 LDR X0, [X8]
	0x033FEE7C BL 0x1C16D6C
	0x033FEE80 LDR X8, [X23]
	0x033FEE84 MOV X24, X0
	0x033FEE88 AND W6, W22, 0x1
	0x033FEE8C MOV X0, X23
	0x033FEE90 LDP X9, X7, [X8 + 0x1A8]
	0x033FEE94 MOV X1, X25
	0x033FEE98 MOV W2, W31
	0x033FEE9C MOV W3, W21
	0x033FEEA0 MOV X4, X24
	0x033FEEA4 MOV W5, W31
	0x033FEEA8 BLR X9
	0x033FEEAC CMP W0, W20
	0x033FEEB0 CSEL W0, W0, W20, LT
	0x033FEEB4 CMP W0, 0x1
	0x033FEEB8 B.LT 0x33FEEEC
	0x033FEEBC CBZ X24, 0x33FEF04
	0x033FEEC0 MOV X8, X31
	0x033FEEC4 MOV W9, W0
	0x033FEEC8 ADD X10, X24, 0x20
	0x033FEECC LDR W11, [X24 + 0x18]
	0x033FEED0 CMP X8, X11
	0x033FEED4 B.CS 0x33FEF00
	0x033FEED8 LDRB W11, [X10, X8, LSL]
	0x033FEEDC STRB W11, [X19, X8, LSL]
	0x033FEEE0 ADD X8, X8, 0x1
	0x033FEEE4 CMP X9, X8
	0x033FEEE8 B.NE 0x33FEECC
	0x033FEEEC LDP X20, X19, [X31 + 0x30]
	0x033FEEF0 LDP X22, X21, [X31 + 0x20]
	0x033FEEF4 LDP X24, X23, [X31 + 0x10]
	0x033FEEF8 LDP X30, X25, [X31], #0x40
	0x033FEEFC RET
	0x033FEF00 BL 0x1C16F28
	0x033FEF04 BL 0x1C16F20
	0x033FEF08 ADRP X0, 0xD24000
	0x033FEF0C LDR X0, [X0 + 0x308]
	0x033FEF10 B 0x33FEF1C
	0x033FEF14 ADRP X0, 0xD24000
	0x033FEF18 LDR X0, [X0 + 0x2D8]
	0x033FEF1C BL 0x1C16D08
	0x033FEF20 MOV X19, X0
	0x033FEF24 ADRP X0, 0xCFA000
	0x033FEF28 LDR X0, [X0 + 0x528]
	0x033FEF2C BL 0x1C16D08
	0x033FEF30 BL 0x1C16F10
	0x033FEF34 MOV X20, X0
	0x033FEF38 ADRP X0, 0xD24000
	0x033FEF3C LDR X0, [X0 + 0x2E0]
	0x033FEF40 BL 0x1C16D08
	0x033FEF44 MOV X2, X0
	0x033FEF48 MOV X0, X20
	0x033FEF4C MOV X1, X19
	0x033FEF50 MOV X3, X31
	0x033FEF54 BL 0x3315F7C
	0x033FEF58 B 0x33FEFB0
	0x033FEF5C ADRP X8, 0xD24000
	0x033FEF60 ADRP X9, 0xD24000
	0x033FEF64 LDR X8, [X8 + 0x328]
	0x033FEF68 LDR X9, [X9 + 0x310]
	0x033FEF6C CMP W21, 0x0
	0x033FEF70 CSEL X0, X9, X8, LT
	0x033FEF74 BL 0x1C16D08
	0x033FEF78 MOV X19, X0
	0x033FEF7C ADRP X0, 0xCFD000
	0x033FEF80 LDR X0, [X0 + 0x760]
	0x033FEF84 BL 0x1C16D08
	0x033FEF88 BL 0x1C16F10
	0x033FEF8C MOV X20, X0
	0x033FEF90 ADRP X0, 0xD1D000
	0x033FEF94 LDR X0, [X0 + 0x670]
	0x033FEF98 BL 0x1C16D08
	0x033FEF9C MOV X2, X0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xFE0000
	011 Move W8, [X20+1257]
	012 Move X19, X1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xCF7000
	018 Move X0, [X0+2520]
	019 Call 0x1C17CF4
	020 Move X0, 0xCF8000
	021 Move X0, [X0+3144]
	022 Call 0x1C17CF4
	023 Move X0, 0xCF6000
	024 Move X0, [X0+2288]
	025 Call 0x1C17CF4
	026 Move X0, 0xD30000
	027 Move X0, [X0+3080]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1257], W8
	031 Compare X19, 0
	032 JumpIfEqual {46}
	033 Move X8, 0xCF6000
	034 Move X8, [X8+2288]
	035 Move X0, [X8]
	036 Call 0x1C17F10
	037 Move W8, [X19+24]
	038 Move X2, X31
	039 Move X20, X0
	040 Add W1, W8, W8
	041 Call StringBuilder..ctor, X0, X1
	042 Move W8, [X19+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Compare X20, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17F20
	047 Move X23, 0xCF8000
	048 Move X24, 0xCF7000
	049 Move X26, 0xD30000
	050 Move X23, [X23+3144]
	051 Move X24, [X24+2520]
	052 Move X26, [X26+3080]
	053 Move X25, X31
	054 Add X22, X19, 32
	055 Move X0, X20
	056 Move X1, X31
	057 Call StringBuilder.get_Length, X0
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move W1, 32
	060 Move X0, X20
	061 Move X2, X31
	062 Call StringBuilder.Append, X0, X1
	063 Move X0, [X23]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, X31
	069 Call CultureInfo.get_InvariantCulture
	070 Move W8, [X19+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X21, X0
	073 Move W8, [X22]
	074 Move X0, [X24]
	075 Add X1, X31, 12
	076 Move [X31+12], W8
	077 Call 0x1C17E04
	078 Move X2, [X26]
	079 Move X3, X0
	080 Move X0, X20
	081 Move X1, X21
	082 Move X4, X31
	083 Call StringBuilder.AppendFormat, X0, X1, X2, X3
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Add X8, X25, 1
	086 NotImplemented "Instruction LDRSW not yet implemented."
	087 Move X25, X8
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X0, 0xD30000
	091 Move X0, [X0+3032]
	092 Call 0x1C17D08
	093 Move X1, X0
	094 Move X0, X20
	095 Move X2, X31
	096 Call StringBuilder.Append, X0, X1
	097 Move X0, X20
	098 Call 0x19913C0
	099 Move X8, [X20]
	100 Move X0, X20
	101 Move X9, [X8+360]
	102 Move X1, [X8+368]
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move X19, X0
	105 Move X0, 0xD30000
	106 Move X0, [X0+3088]
	107 Call 0x1C17D08
	108 Move X1, X19
	109 Move X2, X31
	110 Call SR.Format, X0, X1
	111 Move X19, X0
	112 Move X0, 0xCFE000
	113 Move X0, [X0+1400]
	114 Call 0x1C17D08
	115 Call 0x1C17F10
	116 Move X20, X0
	117 Move X0, 0xD30000
	118 Move X0, [X0+3096]
	119 Call 0x1C17D08
	120 Move X2, X0
	121 Move X0, X20
	122 Move X1, X19
	123 Move X3, X31
	124 Call ArgumentException..ctor, X0, X1, X2
	125 Move X0, 0xD30000
	126 Move X0, [X0+3104]
	127 Call 0x1C17D08
	128 Move X1, X0
	129 Move X0, X20
	130 Call 0x1C17DEC
	131 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x033FE484 LDR X0, [X0 + 0x670]
	0x033FE488 BL 0x1C16D08

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

