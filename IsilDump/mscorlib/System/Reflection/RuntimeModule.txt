Type: System.Reflection.RuntimeModule

Method: System.Reflection.Assembly get_Assembly()

Disassembly:
	0x032DE150 LDP X20, X19, [X31 + 0x50]
	0x032DE154 LDP X22, X21, [X31 + 0x40]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.String get_ScopeName()

Disassembly:
	0x032DE158 LDP X24, X23, [X31 + 0x30]
	0x032DE15C LDP X26, X25, [X31 + 0x20]

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Guid get_ModuleVersionId()

Disassembly:
	0x032DE160 LDR X30, [X31 + 0x10]
	0x032DE164 ADD X31, X31, 0x60
	0x032DE168 RET
	0x032DE16C BL 0x1C16F20

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+536]
	003 Move X1, [X8+544]
	004 CallNoReturn X2

Method: System.Boolean IsResource()

Disassembly:
	0x032DE170 BL 0x1C16F28
	0x032DE174 BL 0x1C16F44

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Object[] GetCustomAttributes(System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x032DE178 MOV X1, X31
	0x032DE17C BL 0x1C16DEC
	0x032DE180 STR X30, [X31 - 0x30]!
	0x032DE184 STP X22, X21, [X31 + 0x10]
	0x032DE188 STP X20, X19, [X31 + 0x20]
	0x032DE18C ADRP X21, 0x10FE000
	0x032DE190 ADRP X22, 0xE48000
	0x032DE194 LDRB W8, [X21 + 0x97E]
	0x032DE198 LDR X22, [X22 + 0x4F8]
	0x032DE19C MOV X19, X1
	0x032DE1A0 MOV X20, X0
	0x032DE1A4 TBNZ X8, 0x0, 0x32DE1BC
	0x032DE1A8 ADRP X0, 0xE48000
	0x032DE1AC LDR X0, [X0 + 0x4F8]
	0x032DE1B0 BL 0x1C16CF4
	0x032DE1B4 MOVZ W8, 0x1
	0x032DE1B8 STRB W8, [X21 + 0x97E]
	0x032DE1BC LDR X0, [X22]
	0x032DE1C0 BL 0x1C16F10
	0x032DE1C4 MOV X1, X20
	0x032DE1C8 MOV X2, X19
	0x032DE1CC MOV X21, X0
	0x032DE1D0 BL 0x32DD4A8
	0x032DE1D4 MOV X0, X21
	0x032DE1D8 LDP X20, X19, [X31 + 0x20]
	0x032DE1DC LDP X22, X21, [X31 + 0x10]
	0x032DE1E0 LDR X30, [X31], #0x30
	0x032DE1E4 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x10FF000
	008 Move X23, 0xE49000
	009 Move W8, [X22+2418]
	010 Move X23, [X23+992]
	011 Move W21, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xE49000
	019 Move X0, [X0+992]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2418], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 And W2, W21, 1
	029 Move X0, X20
	030 Move X1, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X3, X31
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Call MonoCustomAttrs.GetCustomAttributes, X0, X1, X2
	039 Return X0

Method: System.Boolean IsDefined(System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x032DE1E8 B 0x1C9443C
	0x032DE1EC MOV W0, W31
	0x032DE1F0 RET
	0x032DE1F4 B 0x32DE1F8
	0x032DE1F8 STR X30, [X31 - 0x10]!
	0x032DE1FC BL 0x32DE214
	0x032DE200 CBZ X0, 0x32DE210
	0x032DE204 MOV X1, X31
	0x032DE208 LDR X30, [X31], #0x10
	0x032DE20C B 0x33B83B4
	0x032DE210 BL 0x1C16F20
	0x032DE214 STR X30, [X31 - 0x20]!
	0x032DE218 STP X20, X19, [X31 + 0x10]
	0x032DE21C ADRP X20, 0x10FE000
	0x032DE220 LDRB W8, [X20 + 0x980]
	0x032DE224 MOV X19, X0
	0x032DE228 TBNZ X8, 0x0, 0x32DE240
	0x032DE22C ADRP X0, 0xE3E000
	0x032DE230 LDR X0, [X0 + 0x4E8]
	0x032DE234 BL 0x1C16CF4
	0x032DE238 MOVZ W8, 0x1
	0x032DE23C STRB W8, [X20 + 0x980]
	0x032DE240 LDR X8, [X19]
	0x032DE244 MOV X0, X19
	0x032DE248 LDP X9, X1, [X8 + 0x1B8]
	0x032DE24C BLR X9
	0x032DE250 CBZ X0, 0x32DE288
	0x032DE254 ADRP X9, 0xE3E000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x10FF000
	008 Move X23, 0xE49000
	009 Move W8, [X22+2419]
	010 Move X23, [X23+992]
	011 Move W21, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xE49000
	019 Move X0, [X0+992]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2419], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 And W2, W21, 1
	029 Move X0, X20
	030 Move X1, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X3, X31
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Call MonoCustomAttrs.IsDefined, X0, X1, X2
	039 Return X0

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x032DE258 LDR X9, [X9 + 0x4E8]
	0x032DE25C LDR X8, [X0]
	0x032DE260 LDR X1, [X9]
	0x032DE264 LDRB W10, [X8 + 0x130]
	0x032DE268 LDRB W9, [X1 + 0x130]
	0x032DE26C CMP W10, W9
	0x032DE270 B.CC 0x32DE294
	0x032DE274 LDR X8, [X8 + 0xC8]
	0x032DE278 ADD X8, X8, X9, 0x3, LSL
	0x032DE27C LDUR X8, [X8 - 0x8]
	0x032DE280 CMP X8, X1
	0x032DE284 B.NE 0x32DE294
	0x032DE288 LDP X20, X19, [X31 + 0x10]
	0x032DE28C LDR X30, [X31], #0x20
	0x032DE290 RET
	0x032DE294 BL 0x1C171E0
	0x032DE298 STR X30, [X31 - 0x20]!
	0x032DE29C STP X20, X19, [X31 + 0x10]
	0x032DE2A0 ADRP X20, 0x10FE000
	0x032DE2A4 LDRB W8, [X20 + 0x981]
	0x032DE2A8 MOV X19, X0
	0x032DE2AC TBNZ X8, 0x0, 0x32DE2C4
	0x032DE2B0 ADRP X0, 0xE3E000
	0x032DE2B4 LDR X0, [X0 + 0x4E8]
	0x032DE2B8 BL 0x1C16CF4
	0x032DE2BC MOVZ W8, 0x1
	0x032DE2C0 STRB W8, [X20 + 0x981]
	0x032DE2C4 LDR X8, [X19]
	0x032DE2C8 MOV X0, X19
	0x032DE2CC LDP X9, X1, [X8 + 0x1C8]
	0x032DE2D0 BLR X9
	0x032DE2D4 CBZ X0, 0x32DE30C
	0x032DE2D8 ADRP X9, 0xE3E000
	0x032DE2DC LDR X9, [X9 + 0x4E8]
	0x032DE2E0 LDR X8, [X0]
	0x032DE2E4 LDR X1, [X9]
	0x032DE2E8 LDRB W10, [X8 + 0x130]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {27}
	007 Move X8, [X0]
	008 Move X19, X1
	009 Move X20, X0
	010 Move X9, [X8+456]
	011 Move X1, [X8+464]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move X21, X0
	014 Move X0, X20
	015 Call RuntimeModule.GetRuntimeAssembly, X0
	016 Move X3, X0
	017 Move X0, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move W1, 5
	021 Move X2, X21
	022 Move X4, X31
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call UnitySerializationHolder.GetUnitySerializationInfo, X0, X1, X2, X3
	026 Return 
	027 Move X0, 0xE1B000
	028 Move X0, [X0+1320]
	029 Call 0x1C17D08
	030 Call 0x1C17F10
	031 Move X19, X0
	032 Move X0, 0xE40000
	033 Move X0, [X0+728]
	034 Call 0x1C17D08
	035 Move X1, X0
	036 Move X0, X19
	037 Move X2, X31
	038 Call ArgumentNullException..ctor, X0, X1
	039 Move X0, 0xE49000
	040 Move X0, [X0+1624]
	041 Call 0x1C17D08
	042 Move X1, X0
	043 Move X0, X19
	044 Call 0x1C17DEC

Method: System.Reflection.RuntimeAssembly GetRuntimeAssembly()

Disassembly:
	0x032DE2EC LDRB W9, [X1 + 0x130]
	0x032DE2F0 CMP W10, W9
	0x032DE2F4 B.CC 0x32DE318
	0x032DE2F8 LDR X8, [X8 + 0xC8]
	0x032DE2FC ADD X8, X8, X9, 0x3, LSL
	0x032DE300 LDUR X8, [X8 - 0x8]
	0x032DE304 CMP X8, X1
	0x032DE308 B.NE 0x32DE318
	0x032DE30C LDP X20, X19, [X31 + 0x10]
	0x032DE310 LDR X30, [X31], #0x20
	0x032DE314 RET
	0x032DE318 BL 0x1C171E0
	0x032DE31C MOV W1, W31
	0x032DE320 B 0x32DE324
	0x032DE324 STR X30, [X31 - 0x30]!
	0x032DE328 STP X22, X21, [X31 + 0x10]
	0x032DE32C STP X20, X19, [X31 + 0x20]
	0x032DE330 ADRP X21, 0x10FE000
	0x032DE334 LDRB W8, [X21 + 0x982]
	0x032DE338 MOV W19, W1
	0x032DE33C MOV X20, X0
	0x032DE340 TBNZ X8, 0x0, 0x32DE37C
	0x032DE344 ADRP X0, 0xE15000
	0x032DE348 LDR X0, [X0 + 0x8F0]
	0x032DE34C BL 0x1C16CF4
	0x032DE350 ADRP X0, 0xE15000
	0x032DE354 LDR X0, [X0 + 0xDD8]
	0x032DE358 BL 0x1C16CF4
	0x032DE35C ADRP X0, 0xE48000
	0x032DE360 LDR X0, [X0 + 0x6D0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10FF000
	005 Move W8, [X20+2420]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE44000
	012 Move X0, [X0+2768]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2420], W8
	016 Move X0, [X19+24]
	017 Compare X0, 0
	018 JumpIfEqual {30}
	019 Move X9, 0xE44000
	020 Move X9, [X9+2768]
	021 Move X8, [X0]
	022 Move X1, [X9]
	023 Move W10, [X8+304]
	024 Move W9, [X1+304]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, [X8+200]
	027 Add X8, X8, X9
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return X0
	034 Call 0x1C181E0

Method: System.Guid GetModuleVersionId()

Disassembly:
	0x032DE364 BL 0x1C16CF4
	0x032DE368 ADRP X0, 0xE15000
	0x032DE36C LDR X0, [X0 + 0x848]
	0x032DE370 BL 0x1C16CF4
	0x032DE374 MOVZ W8, 0x1
	0x032DE378 STRB W8, [X21 + 0x982]
	0x032DE37C LDR X8, [X20]
	0x032DE380 MOV X0, X20
	0x032DE384 LDR X9, [X8 + 0x248]
	0x032DE388 LDR X1, [X8 + 0x250]
	0x032DE38C BLR X9
	0x032DE390 CBZ X0, 0x32DE490
	0x032DE394 LDR X8, [X0]
	0x032DE398 ADRP X21, 0xE15000
	0x032DE39C AND W1, W19, 0x1
	0x032DE3A0 LDR X9, [X8 + 0x918]
	0x032DE3A4 LDR X2, [X8 + 0x920]
	0x032DE3A8 LDR X21, [X21 + 0x8F0]
	0x032DE3AC BLR X9
	0x032DE3B0 LDR X8, [X21]
	0x032DE3B4 MOV X22, X0
	0x032DE3B8 MOV X0, X8
	0x032DE3BC BL 0x1C16F10
	0x032DE3C0 MOV X1, X22
	0x032DE3C4 MOV X2, X31
	0x032DE3C8 MOV X21, X0
	0x032DE3CC BL 0x3231CF8
	0x032DE3D0 CBZ X21, 0x32DE490
	0x032DE3D4 ADRP X8, 0xE15000
	0x032DE3D8 LDR X8, [X8 + 0xDD8]
	0x032DE3DC MOV X0, X21
	0x032DE3E0 MOV X2, X31

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x10FF000
	007 Move X21, 0xE16000
	008 Move W8, [X20+2421]
	009 Move X21, [X21+1560]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xE16000
	016 Move X0, [X0+1560]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2421], W8
	020 Move X0, [X21]
	021 Move W1, 16
	022 Call 0x1C17D6C
	023 Move X8, [X19+16]
	024 Move X19, X0
	025 Move X1, X19
	026 Move X0, X8
	027 Call 0x1C17D14
	028 Add X0, X31, 0
	029 Move X1, X19
	030 Move X2, X31
	031 Move [X31], X31
	032 Move [X31+8], X31
	033 Call Guid..ctor, X0, X1
	034 Move X0, [X31]
	035 Move X1, [X31+8]
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X30, [X31+16]
	039 Move X21, [X31+24]
	040 Add X31, X31, 48
	041 Return X0

Method: System.Void GetGuidInternal(System.IntPtr module, System.Byte[] guid)

Disassembly:
	0x032DE3E4 LDR X1, [X8]

ISIL:
	001 Call 0x1C17D14
	002 Return 

Method: System.Void .ctor()

Disassembly:
	0x032DE3E8 BL 0x32333E0
	0x032DE3EC LDR X8, [X20]
	0x032DE3F0 MOV X0, X20
	0x032DE3F4 LDP X9, X1, [X8 + 0x1A8]
	0x032DE3F8 BLR X9
	0x032DE3FC MOV X1, X0
	0x032DE400 MOV X0, X21
	0x032DE404 MOV X2, X31
	0x032DE408 BL 0x32333E0
	0x032DE40C LDR X8, [X20]
	0x032DE410 MOV X0, X20
	0x032DE414 LDR X9, [X8 + 0x258]
	0x032DE418 LDR X1, [X8 + 0x260]
	0x032DE41C BLR X9
	0x032DE420 CBZ X0, 0x32DE490
	0x032DE424 LDR X8, [X0 + 0x18]
	0x032DE428 MOV X20, X0
	0x032DE42C CBZ X8, 0x32DE474
	0x032DE430 ADRP X8, 0xE48000
	0x032DE434 LDR X8, [X8 + 0x6D0]
	0x032DE438 ADRP X22, 0xE15000
	0x032DE43C MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x10FF000
	006 Move X21, 0xE48000
	007 Move W8, [X20+2422]
	008 Move X21, [X21+3584]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE48000
	015 Move X0, [X0+3584]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2422], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Module..ctor, X0
	031 Return 

