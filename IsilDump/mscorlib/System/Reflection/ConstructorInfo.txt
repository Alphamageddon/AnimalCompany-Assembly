Type: System.Reflection.ConstructorInfo

Method: System.Void .ctor()

Disassembly:
	0x032CD7D0 STR W8, [X31 + 0x1C]
	0x032CD7D4 BL 0x1C16E04

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Reflection.MemberTypes get_MemberType()

Disassembly:
	0x032CD7E0 MOV X1, X22
	0x032CD7E4 STP X31, X31, [X31]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Object Invoke(System.Object[] parameters)

Disassembly:
	0x032CD7E8 BL 0x32CD938
	0x032CD7EC CBZ X21, 0x32CD924
	0x032CD7F0 LDR W8, [X21 + 0x18]
	0x032CD7F4 CBZ W8, 0x32CD928
	0x032CD7F8 LDR V0, [X31]
	0x032CD7FC ADRP X8, 0xE58000
	0x032CD800 LDR X8, [X8 + 0xCA0]
	0x032CD804 MOV X1, X31

ISIL:
	001 Move X8, [X0]
	002 Move X3, X1
	003 Move W1, 512
	004 Move X2, X31
	005 Move X6, [X8+936]
	006 Move X5, [X8+944]
	007 Move X4, X31
	008 CallNoReturn X6

Method: System.Object Invoke(System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x032CD808 STR V0, [X21 + 0x2]
	0x032CD80C LDR X0, [X8]

ISIL:
	001 Move X2, X31
	002 Call Object.Equals, X0, X1
	003 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x032CD818 MOV X20, X0
	0x032CD81C MOVZ W1, 0x1

ISIL:
	001 Move X1, X31
	002 Call Object.GetHashCode, X0
	003 Return X0

Method: System.Boolean op_Equality(System.Reflection.ConstructorInfo left, System.Reflection.ConstructorInfo right)

Disassembly:
	0x032CD828 LDR X8, [X23]
	0x032CD82C MOV X22, X0
	0x032CD830 MOV X1, X31
	0x032CD834 MOV X0, X8
	0x032CD838 BL 0x338C698
	0x032CD83C CBZ X22, 0x32CD924
	0x032CD840 MOV X23, X0
	0x032CD844 CBZ X0, 0x32CD85C
	0x032CD848 LDR X8, [X22]
	0x032CD84C MOV X0, X23
	0x032CD850 LDR X1, [X8 + 0x40]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, W31
	003 Compare X0, 0
	004 JumpIfEqual {12}
	005 Compare X1, 0
	006 JumpIfEqual {12}
	007 Move X8, [X0]
	008 Move X3, [X8+312]
	009 Move X2, [X8+320]
	010 CallNoReturn X3
	011 Move W8, 1
	012 Move W0, W8
	013 Return X0

Method: System.Boolean op_Inequality(System.Reflection.ConstructorInfo left, System.Reflection.ConstructorInfo right)

Disassembly:
	0x032CD854 BL 0x1C16E00
	0x032CD858 CBZ X0, 0x32CD92C
	0x032CD85C LDR W8, [X22 + 0x18]
	0x032CD860 CBZ W8, 0x32CD928
	0x032CD864 STR X23, [X22 + 0x20]
	0x032CD868 CBZ X20, 0x32CD924
	0x032CD86C MOV X0, X20
	0x032CD870 MOV X1, X22
	0x032CD874 MOV X2, X31
	0x032CD878 BL 0x3397418
	0x032CD87C LDR X8, [X27]
	0x032CD880 MOV X22, X0
	0x032CD884 LDR W9, [X8 + 0xE0]
	0x032CD888 CBNZ W9, 0x32CD898
	0x032CD88C MOV X0, X8
	0x032CD890 BL 0x1C16DFC
	0x032CD894 LDR X8, [X27]
	0x032CD898 LDR X8, [X8 + 0xB8]
	0x032CD89C LDR X23, [X8]
	0x032CD8A0 ADRP X8, 0xE58000
	0x032CD8A4 LDR X8, [X8 + 0xC80]
	0x032CD8A8 LDR X0, [X8]
	0x032CD8AC BL 0x1C16F10
	0x032CD8B0 MOV X1, X22
	0x032CD8B4 MOV X2, X21
	0x032CD8B8 MOV X3, X23
	0x032CD8BC MOV X4, X31
	0x032CD8C0 MOV X20, X0
	0x032CD8C4 BL 0x32D744C
	0x032CD8C8 CBZ X19, 0x32CD924
	0x032CD8CC CBZ X20, 0x32CD8E4
	0x032CD8D0 LDR X8, [X19]
	0x032CD8D4 MOV X0, X20
	0x032CD8D8 LDR X1, [X8 + 0x40]
	0x032CD8DC BL 0x1C16E00
	0x032CD8E0 CBZ X0, 0x32CD92C
	0x032CD8E4 LDR W8, [X19 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1110000
	007 Move X22, 0xE51000
	008 Move W8, [X21+2272]
	009 Move X22, [X22+2424]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE51000
	017 Move X0, [X0+2424]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2272], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move W8, 1
	028 Compare X20, 0
	029 JumpIfEqual {40}
	030 Compare X19, 0
	031 JumpIfEqual {40}
	032 Move X8, [X20]
	033 Move X0, X20
	034 Move X1, X19
	035 Move X9, [X8+312]
	036 Move X2, [X8+320]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Xor W8, W0, 1
	039 Move W8, W31
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 And W0, W8, 1
	045 Move X30, [X31+48]
	046 Return X0

Method: System.Void .cctor()

Disassembly:
	0x032CD8E8 CMP W26, W8
	0x032CD8EC B.CS 0x32CD928
	0x032CD8F0 ADD X8, X19, W26, 0x3, UXTW
	0x032CD8F4 STR X20, [X8 + 0x20]
	0x032CD8F8 B 0x32CD900
	0x032CD8FC MOV X19, X31
	0x032CD900 MOV X0, X19
	0x032CD904 LDP X20, X19, [X31 + 0x70]
	0x032CD908 LDP X22, X21, [X31 + 0x60]
	0x032CD90C LDP X24, X23, [X31 + 0x50]
	0x032CD910 LDP X26, X25, [X31 + 0x40]
	0x032CD914 LDP X28, X27, [X31 + 0x30]
	0x032CD918 LDP X29, X30, [X31 + 0x20]
	0x032CD91C ADD X31, X31, 0x80
	0x032CD920 RET
	0x032CD924 BL 0x1C16F20
	0x032CD928 BL 0x1C16F28
	0x032CD92C BL 0x1C16F44
	0x032CD930 MOV X1, X31
	0x032CD934 BL 0x1C16DEC
	0x032CD938 SUB X31, X31, 0x70
	0x032CD93C STR X30, [X31 + 0x10]
	0x032CD940 STP X28, X27, [X31 + 0x20]
	0x032CD944 STP X26, X25, [X31 + 0x30]
	0x032CD948 STP X24, X23, [X31 + 0x40]
	0x032CD94C STP X22, X21, [X31 + 0x50]
	0x032CD950 STP X20, X19, [X31 + 0x60]
	0x032CD954 ADRP X22, 0x110F000
	0x032CD958 ADRP X26, 0xE26000
	0x032CD95C LDRB W8, [X22 + 0x91A]
	0x032CD960 LDR X26, [X26 + 0x6C0]
	0x032CD964 MOV X20, X2
	0x032CD968 MOV X21, X1
	0x032CD96C MOV X19, X0
	0x032CD970 TBNZ X8, 0x0, 0x32CD9C4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1110000
	007 Move X21, 0xE59000
	008 Move X20, 0xE51000
	009 Move X19, 0xE59000
	010 Move W8, [X22+2273]
	011 Move X21, [X21+3056]
	012 Move X20, [X20+2424]
	013 Move X19, [X19+3064]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xE51000
	019 Move X0, [X0+2424]
	020 Call 0x1C17CF4
	021 Move X0, 0xE59000
	022 Move X0, [X0+3056]
	023 Call 0x1C17CF4
	024 Move X0, 0xE59000
	025 Move X0, [X0+3064]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+2273], W8
	029 Move X8, [X20]
	030 Move X9, [X21]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X8, [X8+184]
	034 Move [X8], X9
	035 Move X8, [X20]
	036 Move X9, [X19]
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X8, [X8+184]
	040 Move [X8+8], X9
	041 Move X30, [X31+48]
	042 Return 

