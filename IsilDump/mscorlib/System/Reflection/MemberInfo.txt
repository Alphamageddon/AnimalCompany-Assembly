Type: System.Reflection.MemberInfo

Method: System.Void .ctor()

Disassembly:
	0x032CDA60 MOV X2, X31
	0x032CDA64 BL 0x33A0EDC

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Reflection.MemberTypes get_MemberType()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.String get_Name()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Type get_DeclaringType()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Type get_ReflectedType()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Reflection.Module get_Module()

Disassembly:
	0x032CEFD0 B.LT 0x32CF038
	0x032CEFD4 MOV X0, X19
	0x032CEFD8 MOV X2, X31
	0x032CEFDC BL 0x3222A1C
	0x032CEFE0 AND W8, W0, 0xFFFF
	0x032CEFE4 CMP W8, 0x2A
	0x032CEFE8 B.NE 0x32CF038
	0x032CEFEC LDR W8, [X19 + 0x10]
	0x032CEFF0 MOV X0, X19
	0x032CEFF4 MOV W1, W31
	0x032CEFF8 MOV X3, X31
	0x032CEFFC SUB W2, W8, 0x1
	0x032CF000 BL 0x3228DE4
	0x032CF004 CBZ X20, 0x32CF0A8
	0x032CF008 LDR X8, [X20]
	0x032CF00C MOV X19, X0
	0x032CF010 MOV X0, X20
	0x032CF014 LDP X9, X1, [X8 + 0x1A8]
	0x032CF018 BLR X9
	0x032CF01C CBZ X0, 0x32CF0A8
	0x032CF020 MOV X1, X19
	0x032CF024 LDP X20, X19, [X31 + 0x10]
	0x032CF028 MOVZ W2, 0x4
	0x032CF02C MOV X3, X31
	0x032CF030 LDP X30, X21, [X31], #0x20
	0x032CF034 B 0x3226FBC
	0x032CF038 CBZ X20, 0x32CF0A8
	0x032CF03C LDR X8, [X20]
	0x032CF040 MOV X0, X20
	0x032CF044 LDP X9, X1, [X8 + 0x1A8]
	0x032CF048 BLR X9
	0x032CF04C CBZ X0, 0x32CF0A8
	0x032CF050 MOV X1, X19
	0x032CF054 LDP X20, X19, [X31 + 0x10]
	0x032CF058 MOV X2, X31
	0x032CF05C LDP X30, X21, [X31], #0x20
	0x032CF060 B 0x322693C
	0x032CF064 ADRP X0, 0xE56000
	0x032CF068 LDR X0, [X0 + 0xDD0]
	0x032CF06C BL 0x1C16D08
	0x032CF070 BL 0x1C16F10
	0x032CF074 MOV X19, X0
	0x032CF078 ADRP X0, 0xE56000
	0x032CF07C LDR X0, [X0 + 0xDD8]
	0x032CF080 BL 0x1C16D08
	0x032CF084 MOV X1, X0
	0x032CF088 MOV X0, X19
	0x032CF08C BL 0x32CDE64
	0x032CF090 ADRP X0, 0xE56000
	0x032CF094 LDR X0, [X0 + 0xDE0]
	0x032CF098 BL 0x1C16D08
	0x032CF09C MOV X1, X0
	0x032CF0A0 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x110F000
	006 Move X21, 0xE26000
	007 Move W8, [X20+2281]
	008 Move X21, [X21+1728]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE26000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2281], W8
	019 Move X0, [X21]
	020 Compare X19, 0
	021 JumpIfEqual {32}
	022 Move X8, [X19]
	023 Move W9, [X0+304]
	024 Move W10, [X8+304]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X19, X31
	027 Move X8, [X8+200]
	028 Add X8, X8, X9
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X19
	037 Move X1, X31
	038 Move X2, X31
	039 Call Type.op_Inequality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {55}
	044 Compare X19, 0
	045 JumpIfEqual {64}
	046 Move X8, [X19]
	047 Move X0, X19
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X2, [X8+776]
	051 Move X1, [X8+784]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 CallNoReturn X2
	055 Move X0, X31
	056 Call NotImplemented.get_ByDesign
	057 Move X19, X0
	058 Move X0, 0xE57000
	059 Move X0, [X0+3344]
	060 Call 0x1C17D08
	061 Move X1, X0
	062 Move X0, X19
	063 Call 0x1C17DEC
	064 Call 0x1C17F20

Method: System.Boolean IsDefined(System.Type attributeType, System.Boolean inherit)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Object[] GetCustomAttributes(System.Boolean inherit)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Object[] GetCustomAttributes(System.Type attributeType, System.Boolean inherit)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Collections.Generic.IEnumerable`1<System.Reflection.CustomAttributeData> get_CustomAttributes()

Disassembly:
	0x032CF0A4 BL 0x1C16DEC
	0x032CF0A8 BL 0x1C16F20
	0x032CF0AC STP X30, X21, [X31 - 0x20]!
	0x032CF0B0 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+552]
	003 Move X1, [X8+560]
	004 CallNoReturn X2

Method: System.Collections.Generic.IList`1<System.Reflection.CustomAttributeData> GetCustomAttributesData()

Disassembly:
	0x032CF0B4 ADRP X21, 0x110D000
	0x032CF0B8 LDRB W8, [X21 + 0x8F3]
	0x032CF0BC MOV X20, X1
	0x032CF0C0 MOV X19, X0
	0x032CF0C4 TBNZ X8, 0x0, 0x32CF0DC
	0x032CF0C8 ADRP X0, 0xE26000
	0x032CF0CC LDR X0, [X0 + 0x278]
	0x032CF0D0 BL 0x1C16CF4
	0x032CF0D4 MOVZ W8, 0x1
	0x032CF0D8 STRB W8, [X21 + 0x8F3]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, X31
	004 Call NotImplemented.get_ByDesign
	005 Move X19, X0
	006 Move X0, 0xE57000
	007 Move X0, [X0+3352]
	008 Call 0x1C17D08
	009 Move X1, X0
	010 Move X0, X19
	011 Call 0x1C17DEC

Method: System.Int32 get_MetadataToken()

Disassembly:
	0x032CF0DC CBZ X20, 0x32CF1C4
	0x032CF0E0 ADRP X8, 0xE26000
	0x032CF0E4 LDR X8, [X8 + 0x278]
	0x032CF0E8 LDR X9, [X20]
	0x032CF0EC LDR X8, [X8]
	0x032CF0F0 CMP X9, X8
	0x032CF0F4 B.NE 0x32CF1C4
	0x032CF0F8 LDR W8, [X20 + 0x10]
	0x032CF0FC SUBS W1, W8, 0x1
	0x032CF100 B.LT 0x32CF16C
	0x032CF104 MOV X0, X20
	0x032CF108 MOV X2, X31
	0x032CF10C BL 0x3222A1C
	0x032CF110 AND W8, W0, 0xFFFF

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xE25000
	004 Move X0, [X0+1456]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call InvalidOperationException..ctor, X0
	010 Move X0, 0xE57000
	011 Move X0, [X0+3360]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x032CDBA0 BL 0x1C16F10
	0x032CDBA4 MOV X19, X0

ISIL:
	001 Move X2, X31
	002 Call Object.Equals, X0, X1
	003 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x032CDBB0 BL 0x1C16D08
	0x032CDBB4 MOV X1, X0

ISIL:
	001 Move X1, X31
	002 Call Object.GetHashCode, X0
	003 Return X0

Method: System.Boolean op_Equality(System.Reflection.MemberInfo left, System.Reflection.MemberInfo right)

Disassembly:
	0x032BF96C MOV X0, X20
	0x032BF970 MOV W2, W21
	0x032BF974 MOV X3, X31
	0x032BF978 BL 0x33E7AB4
	0x032BF97C CMP W0, W21
	0x032BF980 B.EQ 0x32BF9D8
	0x032BF984 LDR W21, [X20]
	0x032BF988 TBZ X21, 0x0, 0x32BF968
	0x032BF98C ADRP X0, 0xE5D000
	0x032BF990 LDR X0, [X0 + 0x4B8]
	0x032BF994 BL 0x1C16D08
	0x032BF998 BL 0x1C16F10
	0x032BF99C MOV X19, X0
	0x032BF9A0 ADRP X0, 0xE66000
	0x032BF9A4 LDR X0, [X0 + 0x660]
	0x032BF9A8 BL 0x1C16D08
	0x032BF9AC MOV X2, X0
	0x032BF9B0 MOV X0, X19
	0x032BF9B4 MOV X1, X31
	0x032BF9B8 MOV X3, X31
	0x032BF9BC BL 0x338C410
	0x032BF9C0 ADRP X0, 0xE66000
	0x032BF9C4 LDR X0, [X0 + 0x668]
	0x032BF9C8 BL 0x1C16D08
	0x032BF9CC MOV X1, X0
	0x032BF9D0 MOV X0, X19
	0x032BF9D4 BL 0x1C16DEC
	0x032BF9D8 MOVZ W8, 0x1
	0x032BF9DC STRB W8, [X19]
	0x032BF9E0 LDP X20, X19, [X31 + 0x10]
	0x032BF9E4 LDP X30, X21, [X31], #0x20
	0x032BF9E8 RET
	0x032BF9EC ADRP X0, 0xE34000
	0x032BF9F0 LDR X0, [X0 + 0x5B0]
	0x032BF9F4 BL 0x1C16D08
	0x032BF9F8 BL 0x1C16F10
	0x032BF9FC MOV X1, X31
	0x032BFA00 MOV X19, X0
	0x032BFA04 BL 0x337DEC0
	0x032BFA08 B 0x32BF9C0
	0x032BFA0C STP X30, X21, [X31 - 0x20]!
	0x032BFA10 STP X20, X19, [X31 + 0x10]
	0x032BFA14 ADRP X20, 0x111D000
	0x032BFA18 ADRP X21, 0xE66000
	0x032BFA1C LDRB W8, [X20 + 0x862]
	0x032BFA20 LDR X21, [X21 + 0x648]
	0x032BFA24 MOV X19, X0
	0x032BFA28 TBNZ X8, 0x0, 0x32BFA40
	0x032BFA2C ADRP X0, 0xE66000
	0x032BFA30 LDR X0, [X0 + 0x648]
	0x032BFA34 BL 0x1C16CF4
	0x032BFA38 MOVZ W8, 0x1
	0x032BFA3C STRB W8, [X20 + 0x862]
	0x032BFA40 LDR X0, [X21]
	0x032BFA44 LDR X20, [X19 + 0x20]
	0x032BFA48 LDR W8, [X0 + 0xE0]
	0x032BFA4C CBNZ W8, 0x32BFA58
	0x032BFA50 BL 0x1C16DFC
	0x032BFA54 LDR X0, [X21]
	0x032BFA58 LDR X8, [X0 + 0xB8]
	0x032BFA5C MOV X0, X20
	0x032BFA60 MOV X2, X31
	0x032BFA64 LDR X1, [X8]
	0x032BFA68 BL 0x33D5390
	0x032BFA6C TBNZ X0, 0x0, 0x32BFA84
	0x032BFA70 MOV X0, X19
	0x032BFA74 LDP X20, X19, [X31 + 0x10]
	0x032BFA78 MOV W1, W31
	0x032BFA7C LDP X30, X21, [X31], #0x20
	0x032BFA80 B 0x32C0428
	0x032BFA84 ADRP X0, 0xE66000
	0x032BFA88 LDR X0, [X0 + 0x648]
	0x032BFA8C BL 0x1C16D08
	0x032BFA90 BL 0x19903D0
	0x032BFA94 BL 0x32BF8DC
	0x032BFA98 MOV X19, X0
	0x032BFA9C ADRP X0, 0xE66000
	0x032BFAA0 LDR X0, [X0 + 0x670]
	0x032BFAA4 BL 0x1C16D08
	0x032BFAA8 MOV X1, X0
	0x032BFAAC MOV X0, X19
	0x032BFAB0 BL 0x1C16DEC
	0x032BFAB4 MOV W1, W31
	0x032BFAB8 B 0x32C0428
	0x032BFABC STP X30, X19, [X31 - 0x10]!
	0x032BFAC0 ADRP X19, 0x111D000
	0x032BFAC4 LDRB W8, [X19 + 0x864]
	0x032BFAC8 TBNZ X8, 0x0, 0x32BFAE0
	0x032BFACC ADRP X0, 0xE66000
	0x032BFAD0 LDR X0, [X0 + 0x648]
	0x032BFAD4 BL 0x1C16CF4
	0x032BFAD8 MOVZ W8, 0x1
	0x032BFADC STRB W8, [X19 + 0x864]
	0x032BFAE0 ADRP X19, 0xE66000
	0x032BFAE4 LDR X19, [X19 + 0x648]
	0x032BFAE8 MOV X0, X31
	0x032BFAEC BL 0x33D5234
	0x032BFAF0 CMP W0, 0x4
	0x032BFAF4 B.NE 0x32BFB08
	0x032BFAF8 MOVN W0, 0x0
	0x032BFAFC MOV X1, X31
	0x032BFB00 BL 0x33D53B4
	0x032BFB04 B 0x32BFB14
	0x032BFB08 MOVN X0, 0x0
	0x032BFB0C MOV X1, X31
	0x032BFB10 BL 0x33D53B0
	0x032BFB14 LDR X8, [X19]
	0x032BFB18 LDR X8, [X8 + 0xB8]
	0x032BFB1C STR X0, [X8]
	0x032BFB20 LDP X30, X19, [X31], #0x10
	0x032BFB24 RET
	0x032BFB28 B 0x32BF4F0
	0x032BFB2C MOV X4, X31
	0x032BFB30 B 0x338CA74
	0x032BFB34 STR X30, [X31 - 0x40]!
	0x032BFB38 STP X24, X23, [X31 + 0x10]
	0x032BFB3C STP X22, X21, [X31 + 0x20]
	0x032BFB40 STP X20, X19, [X31 + 0x30]
	0x032BFB44 ADRP X20, 0x111D000
	0x032BFB48 LDRB W8, [X20 + 0x865]
	0x032BFB4C MOV X19, X0
	0x032BFB50 TBNZ X8, 0x0, 0x32BFBA4
	0x032BFB54 ADRP X0, 0xE36000
	0x032BFB58 LDR X0, [X0 + 0xC48]
	0x032BFB5C BL 0x1C16CF4
	0x032BFB60 ADRP X0, 0xE66000
	0x032BFB64 LDR X0, [X0 + 0x628]
	0x032BFB68 BL 0x1C16CF4
	0x032BFB6C ADRP X0, 0xE38000
	0x032BFB70 LDR X0, [X0 + 0x928]
	0x032BFB74 BL 0x1C16CF4
	0x032BFB78 ADRP X0, 0xE66000
	0x032BFB7C LDR X0, [X0 + 0x630]
	0x032BFB80 BL 0x1C16CF4
	0x032BFB84 ADRP X0, 0xE66000
	0x032BFB88 LDR X0, [X0 + 0x638]
	0x032BFB8C BL 0x1C16CF4
	0x032BFB90 ADRP X0, 0xE35000
	0x032BFB94 LDR X0, [X0 + 0x608]
	0x032BFB98 BL 0x1C16CF4
	0x032BFB9C MOVZ W8, 0x1
	0x032BFBA0 STRB W8, [X20 + 0x865]
	0x032BFBA4 LDR X8, [X19]
	0x032BFBA8 MOV X0, X19
	0x032BFBAC LDP X9, X1, [X8 + 0x188]
	0x032BFBB0 BLR X9
	0x032BFBB4 MOV X21, X0
	0x032BFBB8 MOV X0, X19
	0x032BFBBC MOV X1, X31
	0x032BFBC0 BL 0x33B32AC
	0x032BFBC4 CBZ X0, 0x32BFD10
	0x032BFBC8 LDR X8, [X0]
	0x032BFBCC ADRP X20, 0xE36000
	0x032BFBD0 LDR X20, [X20 + 0xC48]
	0x032BFBD4 ADRP X24, 0xE66000
	0x032BFBD8 LDP X9, X1, [X8 + 0x168]
	0x032BFBDC ADRP X23, 0xE66000
	0x032BFBE0 ADRP X22, 0xE35000
	0x032BFBE4 LDR X24, [X24 + 0x630]
	0x032BFBE8 LDR X23, [X23 + 0x638]
	0x032BFBEC LDR X22, [X22 + 0x608]
	0x032BFBF0 BLR X9
	0x032BFBF4 LDR W9, [X19 + 0x60]
	0x032BFBF8 LDR X8, [X20]
	0x032BFBFC MOV X20, X0
	0x032BFC00 STR W9, [X31 + 0xC]
	0x032BFC04 LDR W9, [X8 + 0xE0]
	0x032BFC08 CBNZ W9, 0x32BFC14
	0x032BFC0C MOV X0, X8
	0x032BFC10 BL 0x1C16DFC
	0x032BFC14 MOV X0, X31
	0x032BFC18 BL 0x3338524
	0x032BFC1C LDR X1, [X24]
	0x032BFC20 MOV X2, X0
	0x032BFC24 ADD X0, X31, 0xC
	0x032BFC28 MOV X3, X31
	0x032BFC2C BL 0x337B8BC
	0x032BFC30 LDR X1, [X23]
	0x032BFC34 LDR X3, [X22]
	0x032BFC38 MOV X2, X0
	0x032BFC3C MOV X0, X20
	0x032BFC40 MOV X4, X31
	0x032BFC44 BL 0x32277C4
	0x032BFC48 MOV X20, X0
	0x032BFC4C CBZ X21, 0x32BFC7C
	0x032BFC50 LDR W8, [X21 + 0x10]
	0x032BFC54 CMP W8, 0x1
	0x032BFC58 B.LT 0x32BFC7C
	0x032BFC5C ADRP X8, 0xE38000
	0x032BFC60 LDR X8, [X8 + 0x928]
	0x032BFC64 MOV X0, X20
	0x032BFC68 MOV X2, X21
	0x032BFC6C MOV X3, X31
	0x032BFC70 LDR X1, [X8]
	0x032BFC74 BL 0x32274B8
	0x032BFC78 MOV X20, X0
	0x032BFC7C LDR X0, [X19 + 0x28]
	0x032BFC80 CBZ X0, 0x32BFCB0
	0x032BFC84 LDR X8, [X0]
	0x032BFC88 ADRP X21, 0xE66000
	0x032BFC8C LDP X9, X1, [X8 + 0x168]
	0x032BFC90 LDR X21, [X21 + 0x628]
	0x032BFC94 BLR X9
	0x032BFC98 LDR X1, [X21]
	0x032BFC9C MOV X2, X0
	0x032BFCA0 MOV X0, X20
	0x032BFCA4 MOV X3, X31
	0x032BFCA8 BL 0x32274B8
	0x032BFCAC MOV X20, X0
	0x032BFCB0 LDR X8, [X19]
	0x032BFCB4 MOV X0, X19
	0x032BFCB8 LDP X9, X1, [X8 + 0x1B8]
	0x032BFCBC BLR X9
	0x032BFCC0 CBZ X0, 0x32BFCF8
	0x032BFCC4 MOV X0, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x111E000
	008 Move W8, [X21+2282]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0xE67000
	016 Move X0, [X0+1552]
	017 Call 0x1C17CF4
	018 Move X0, 0xE5E000
	019 Move X0, [X0+936]
	020 Call 0x1C17CF4
	021 Move X0, 0xE65000
	022 Move X0, [X0+3448]
	023 Call 0x1C17CF4
	024 Move X0, 0xE5E000
	025 Move X0, [X0+1008]
	026 Call 0x1C17CF4
	027 Move X0, 0xE35000
	028 Move X0, [X0+1728]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2282], W8
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W0, W31
	034 Compare X20, 0
	035 JumpIfEqual {219}
	036 Compare X19, 0
	037 JumpIfEqual {219}
	038 Move X23, 0xE35000
	039 Move X23, [X23+1728]
	040 Move X8, [X20]
	041 Move X0, [X23]
	042 Move W10, [X8+304]
	043 Move W9, [X0+304]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X21, X31
	046 Move X8, [X8+200]
	047 Add X8, X8, X9
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X21
	056 Move X1, X31
	057 Move X2, X31
	058 Call Type.op_Inequality, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {102}
	063 Move X8, [X19]
	064 Move X0, [X23]
	065 Move W10, [X8+304]
	066 Move W9, [X0+304]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X22, X31
	069 Move X8, [X8+200]
	070 Add X8, X8, X9
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CSEL not yet implemented."
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X0, X22
	079 Move X1, X31
	080 Move X2, X31
	081 Call Type.op_Inequality, X0, X1
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {102}
	086 Move X0, [X23]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move X0, X21
	092 Move X1, X22
	093 Move X20, [X31+32]
	094 Move X19, [X31+40]
	095 Move X22, [X31+16]
	096 Move X21, [X31+24]
	097 Move X2, X31
	098 Move X30, [X31+48]
	099 Move X23, [X31+56]
	100 Call Type.op_Equality, X0, X1
	101 Return X0
	102 Move X22, 0xE65000
	103 Move X22, [X22+3448]
	104 Move X9, [X20]
	105 Move X8, [X22]
	106 Move W11, [X9+304]
	107 Move W10, [X8+304]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X21, X31
	110 Move X9, [X9+200]
	111 Add X9, X9, X10
	112 NotImplemented "Instruction LDUR not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 NotImplemented "Instruction CSEL not yet implemented."
	115 Move X0, X21
	116 Move X1, X31
	117 Call MethodBase.op_Equality, X0, X1
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfEqual {140}
	122 Move X9, [X19]
	123 Move X8, [X22]
	124 Move W11, [X9+304]
	125 Move W10, [X8+304]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X22, X31
	128 Move X9, [X9+200]
	129 Add X9, X9, X10
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 NotImplemented "Instruction CSEL not yet implemented."
	133 Move X0, X22
	134 Move X1, X31
	135 Call MethodBase.op_Equality, X0, X1
	136 Move TEMP, X0
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfNotEqual {226}
	140 Move X9, 0xE5E000
	141 Move X9, [X9+936]
	142 Move X8, [X20]
	143 Move X10, [X9]
	144 Move W9, [X8+304]
	145 Move W11, [X10+304]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move X12, [X8+200]
	148 Add X12, X12, X11
	149 NotImplemented "Instruction LDUR not yet implemented."
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Compare X20, 0
	152 JumpIfEqual {162}
	153 Move X12, [X19]
	154 Move W13, [X12+304]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move X12, [X12+200]
	157 Add X11, X12, X11
	158 NotImplemented "Instruction LDUR not yet implemented."
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Compare X19, 0
	161 JumpIfNotEqual {205}
	162 Move X10, 0xE67000
	163 Move X10, [X10+1552]
	164 Move X10, [X10]
	165 Move W11, [X10+304]
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X10, 0xE5E000
	168 Move X10, [X10+1008]
	169 Move X10, [X10]
	170 Move W11, [X10+304]
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move W0, W31
	173 Move X12, [X8+200]
	174 Add X12, X12, X11
	175 NotImplemented "Instruction LDUR not yet implemented."
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Compare X20, 0
	178 JumpIfEqual {167}
	179 Move X12, [X19]
	180 Move W13, [X12+304]
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X12, [X12+200]
	183 Add X11, X12, X11
	184 NotImplemented "Instruction LDUR not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Compare X19, 0
	187 JumpIfNotEqual {205}
	188 Move X8, [X8+200]
	189 Move W0, W31
	190 Add X8, X8, X11
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Compare X20, 0
	194 JumpIfEqual {219}
	195 Move X8, [X19]
	196 Move W9, [X8+304]
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move X8, [X8+200]
	199 Move W0, W31
	200 Add X8, X8, X11
	201 NotImplemented "Instruction LDUR not yet implemented."
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Compare X19, 0
	204 JumpIfEqual {219}
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move X8, [X20]
	207 Move X0, X20
	208 Move X1, X19
	209 Move X20, [X31+32]
	210 Move X19, [X31+40]
	211 Move X3, [X8+312]
	212 Move X2, [X8+320]
	213 Move X22, [X31+16]
	214 Move X21, [X31+24]
	215 Move X30, [X31+48]
	216 Move X23, [X31+56]
	217 CallNoReturn X3
	218 Move W0, 1
	219 Move X20, [X31+32]
	220 Move X19, [X31+40]
	221 Move X22, [X31+16]
	222 Move X21, [X31+24]
	223 Move X30, [X31+48]
	224 Move X23, [X31+56]
	225 Return X0
	226 Move X0, X21
	227 Move X1, X22
	228 Move X20, [X31+32]
	229 Move X19, [X31+40]
	230 Move X22, [X31+16]
	231 Move X21, [X31+24]
	232 Move X30, [X31+48]
	233 Move X23, [X31+56]
	234 Call MethodBase.op_Equality, X0, X1
	235 Return X0

Method: System.Boolean op_Inequality(System.Reflection.MemberInfo left, System.Reflection.MemberInfo right)

Disassembly:
	0x032BFCC8 BL 0x33C1548
	0x032BFCCC LDR X8, [X19]
	0x032BFCD0 MOV X21, X0
	0x032BFCD4 MOV X0, X19
	0x032BFCD8 LDP X9, X1, [X8 + 0x1B8]
	0x032BFCDC BLR X9

ISIL:
	001 Move [X31-16], X30
	002 Call MemberInfo.op_Equality, X0, X1
	003 NotImplemented "Instruction ORN not yet implemented."
	004 And W0, W8, 1
	005 Move X30, [X31+16]
	006 Return X0

