Type: System.Reflection.MethodInfo

Method: System.Void .ctor()

Disassembly:
	0x032CFBB0 MOV X4, X31
	0x032CFBB4 LDR X9, [X8 + 0x2F8]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Reflection.MemberTypes get_MemberType()

Disassembly:
	0x032CFBB8 LDR X7, [X8 + 0x300]
	0x032CFBBC MOV X6, X31

ISIL:
	001 Move W0, 8
	002 Return X0

Method: System.Reflection.ParameterInfo get_ReturnParameter()

Disassembly:
	0x032CFBC0 BR X9
	0x032CFBC4 MOV X2, X31
	0x032CFBC8 B 0x33CB4A4
	0x032CFBCC MOV X1, X31
	0x032CFBD0 B 0x33CB4E0
	0x032CFBD4 STP X30, X21, [X31 - 0x20]!
	0x032CFBD8 STP X20, X19, [X31 + 0x10]
	0x032CFBDC MOV X19, X2
	0x032CFBE0 MOV X20, X1
	0x032CFBE4 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, X31
	004 Call NotImplemented.get_ByDesign
	005 Move X19, X0
	006 Move X0, 0xE57000
	007 Move X0, [X0+3416]
	008 Call 0x1C17D08
	009 Move X1, X0
	010 Move X0, X19
	011 Call 0x1C17DEC

Method: System.Type get_ReturnType()

Disassembly:
	0x032CFBE8 MOV X2, X31
	0x032CFBEC MOV X21, X0
	0x032CFBF0 BL 0x338C8D8
	0x032CFBF4 STP X20, X19, [X21 + 0x90]
	0x032CFBF8 LDP X20, X19, [X31 + 0x10]
	0x032CFBFC MOVZ W8, 0x1602
	0x032CFC00 MOVK W8, 0x80130000
	0x032CFC04 STR W8, [X21 + 0x60]
	0x032CFC08 LDP X30, X21, [X31], #0x20
	0x032CFC0C RET

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, X31
	004 Call NotImplemented.get_ByDesign
	005 Move X19, X0
	006 Move X0, 0xE57000
	007 Move X0, [X0+3424]
	008 Call 0x1C17D08
	009 Move X1, X0
	010 Move X0, X19
	011 Call 0x1C17DEC

Method: System.Type[] GetGenericArguments()

Disassembly:
	0x032CFC10 STP X30, X25, [X31 - 0x40]!
	0x032CFC14 STP X24, X23, [X31 + 0x10]
	0x032CFC18 STP X22, X21, [X31 + 0x20]
	0x032CFC1C STP X20, X19, [X31 + 0x30]
	0x032CFC20 ADRP X25, 0x110D000
	0x032CFC24 ADRP X23, 0xE56000
	0x032CFC28 ADRP X24, 0xE24000
	0x032CFC2C LDRB W8, [X25 + 0x8FB]
	0x032CFC30 LDR X23, [X23 + 0xE70]
	0x032CFC34 LDR X24, [X24 + 0x6C0]
	0x032CFC38 MOV X21, X3
	0x032CFC3C MOV X22, X2
	0x032CFC40 MOV X20, X1
	0x032CFC44 MOV X19, X0
	0x032CFC48 TBNZ X8, 0x0, 0x32CFC84
	0x032CFC4C ADRP X0, 0xE56000
	0x032CFC50 LDR X0, [X0 + 0xE70]
	0x032CFC54 BL 0x1C16CF4
	0x032CFC58 ADRP X0, 0xE56000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xE25000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xE57000
	009 Move X0, [X0+3368]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xE57000
	016 Move X0, [X0+3432]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Reflection.MethodInfo GetGenericMethodDefinition()

Disassembly:
	0x032CFC5C LDR X0, [X0 + 0x8C8]
	0x032CFC60 BL 0x1C16CF4
	0x032CFC64 ADRP X0, 0xE24000
	0x032CFC68 LDR X0, [X0 + 0x6C0]
	0x032CFC6C BL 0x1C16CF4
	0x032CFC70 ADRP X0, 0xE56000
	0x032CFC74 LDR X0, [X0 + 0xE78]
	0x032CFC78 BL 0x1C16CF4
	0x032CFC7C MOVZ W8, 0x1
	0x032CFC80 STRB W8, [X25 + 0x8FB]
	0x032CFC84 MOV X0, X19
	0x032CFC88 MOV X1, X20
	0x032CFC8C MOV X2, X22
	0x032CFC90 MOV X3, X21
	0x032CFC94 MOV X4, X31
	0x032CFC98 BL 0x338CA74
	0x032CFC9C LDR X0, [X24]
	0x032CFCA0 LDR X21, [X23]
	0x032CFCA4 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xE25000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xE57000
	009 Move X0, [X0+3368]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xE57000
	016 Move X0, [X0+3440]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Reflection.MethodInfo MakeGenericMethod(System.Type[] typeArguments)

Disassembly:
	0x032CFCA8 CBNZ W8, 0x32CFCB0
	0x032CFCAC BL 0x1C16DFC
	0x032CFCB0 MOV X0, X21
	0x032CFCB4 MOV X1, X31
	0x032CFCB8 BL 0x338C698
	0x032CFCBC CBZ X20, 0x32CFD38
	0x032CFCC0 ADRP X8, 0xE56000
	0x032CFCC4 LDR X8, [X8 + 0xE78]
	0x032CFCC8 MOV X2, X0
	0x032CFCCC MOV X0, X20
	0x032CFCD0 MOV X3, X31
	0x032CFCD4 LDR X1, [X8]
	0x032CFCD8 BL 0x32A9678
	0x032CFCDC CBZ X0, 0x32CFD20
	0x032CFCE0 ADRP X22, 0xE56000
	0x032CFCE4 LDR X22, [X22 + 0x8C8]
	0x032CFCE8 MOV X20, X0
	0x032CFCEC LDR X21, [X22]
	0x032CFCF0 MOV X1, X21

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xE25000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xE57000
	009 Move X0, [X0+3368]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xE57000
	016 Move X0, [X0+3448]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Delegate CreateDelegate(System.Type delegateType, System.Object target)

Disassembly:
	0x032CFCF4 BL 0x1C16E00
	0x032CFCF8 CBZ X0, 0x32CFD3C
	0x032CFCFC STR X0, [X19 + 0x98]
	0x032CFD00 LDR X19, [X22]
	0x032CFD04 MOV X0, X20
	0x032CFD08 MOV X1, X19
	0x032CFD0C BL 0x1C16E00
	0x032CFD10 CBNZ X0, 0x32CFD24
	0x032CFD14 MOV X0, X20
	0x032CFD18 MOV X1, X19
	0x032CFD1C BL 0x1C171E0
	0x032CFD20 STR X31, [X19 + 0x98]
	0x032CFD24 LDP X20, X19, [X31 + 0x30]
	0x032CFD28 LDP X22, X21, [X31 + 0x20]
	0x032CFD2C LDP X24, X23, [X31 + 0x10]
	0x032CFD30 LDP X30, X25, [X31], #0x40
	0x032CFD34 RET
	0x032CFD38 BL 0x1C16F20
	0x032CFD3C MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xE25000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xE57000
	009 Move X0, [X0+3368]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xE57000
	016 Move X0, [X0+3456]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x032CFD40 MOV X1, X21
	0x032CFD44 BL 0x1C171E0

ISIL:
	001 Move X2, X31
	002 Call Object.Equals, X0, X1
	003 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x032CFD48 STP X30, X25, [X31 - 0x40]!
	0x032CFD4C STP X24, X23, [X31 + 0x10]

ISIL:
	001 Move X1, X31
	002 Call Object.GetHashCode, X0
	003 Return X0

Method: System.Boolean op_Equality(System.Reflection.MethodInfo left, System.Reflection.MethodInfo right)

Disassembly:
	0x032C3354 CBNZ W8, 0x32C335C
	0x032C3358 BL 0x1C16DFC
	0x032C335C MOV X0, X21
	0x032C3360 MOV X1, X31
	0x032C3364 BL 0x338C698
	0x032C3368 CBZ X19, 0x32C339C
	0x032C336C ADRP X8, 0xE62000
	0x032C3370 LDR X8, [X8 + 0x830]
	0x032C3374 MOV X3, X0
	0x032C3378 MOV X0, X19
	0x032C337C MOV X2, X20

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, W31
	003 Compare X0, 0
	004 JumpIfEqual {12}
	005 Compare X1, 0
	006 JumpIfEqual {12}
	007 Move X8, [X0]
	008 Move X3, [X8+312]
	009 Move X2, [X8+320]
	010 CallNoReturn X3
	011 Move W8, 1
	012 Move W0, W8
	013 Return X0

Method: System.Boolean op_Inequality(System.Reflection.MethodInfo left, System.Reflection.MethodInfo right)

Disassembly:
	0x032CF528 LDR X0, [X0 + 0x528]
	0x032CF52C BL 0x1C16D08
	0x032CF530 BL 0x1C16F10
	0x032CF534 MOV X19, X0
	0x032CF538 ADRP X0, 0xE56000
	0x032CF53C LDR X0, [X0 + 0xE10]
	0x032CF540 BL 0x1C16D08
	0x032CF544 MOV X1, X0
	0x032CF548 MOV X0, X19
	0x032CF54C MOV X2, X31
	0x032CF550 BL 0x330E100
	0x032CF554 ADRP X0, 0xE56000
	0x032CF558 LDR X0, [X0 + 0xE18]
	0x032CF55C BL 0x1C16D08
	0x032CF560 MOV X1, X0

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, 1
	003 Compare X0, 0
	004 JumpIfEqual {15}
	005 Compare X1, 0
	006 JumpIfEqual {15}
	007 Move [X31-16], X30
	008 Move X8, [X0]
	009 Move X9, [X8+312]
	010 Move X2, [X8+320]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Xor W8, W0, 1
	013 Move X30, [X31+16]
	014 Move W8, W31
	015 And W0, W8, 1
	016 Return X0

Method: System.Int32 get_GenericParameterCount()

Disassembly:
	0x032CFD50 STP X22, X21, [X31 + 0x20]
	0x032CFD54 STP X20, X19, [X31 + 0x30]
	0x032CFD58 ADRP X25, 0x110D000
	0x032CFD5C ADRP X23, 0xE56000
	0x032CFD60 ADRP X24, 0xE24000
	0x032CFD64 LDRB W8, [X25 + 0x8FC]
	0x032CFD68 LDR X23, [X23 + 0x188]
	0x032CFD6C LDR X24, [X24 + 0x6C0]
	0x032CFD70 MOV X21, X3
	0x032CFD74 MOV X22, X2

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+760]
	004 Move X1, [X8+768]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 Compare X0, 0
	007 JumpIfEqual {11}
	008 Move W0, [X0+24]
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

