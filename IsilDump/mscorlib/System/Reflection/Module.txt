Type: System.Reflection.Module

Method: System.Void .ctor()

Disassembly:
	0x032CFE14 MOV X3, X0
	0x032CFE18 LDR X1, [X8]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Reflection.Assembly get_Assembly()

Disassembly:
	0x032CFE1C LDR X21, [X21 + 0xE70]
	0x032CFE20 LDR X22, [X22 + 0xE78]
	0x032CFE24 MOV X0, X19
	0x032CFE28 MOV X2, X31
	0x032CFE2C MOV X4, X31
	0x032CFE30 BL 0x32A89BC
	0x032CFE34 LDR X0, [X21]
	0x032CFE38 LDR X20, [X20 + 0x98]
	0x032CFE3C MOV X1, X31
	0x032CFE40 BL 0x338C698

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, X31
	004 Call NotImplemented.get_ByDesign
	005 Move X19, X0
	006 Move X0, 0xE57000
	007 Move X0, [X0+3480]
	008 Call 0x1C17D08
	009 Move X1, X0
	010 Move X0, X19
	011 Call 0x1C17DEC

Method: System.Guid get_ModuleVersionId()

Disassembly:
	0x032CFE44 LDR X1, [X22]
	0x032CFE48 MOV X3, X0
	0x032CFE4C MOV X0, X19
	0x032CFE50 MOV X2, X20
	0x032CFE54 LDP X20, X19, [X31 + 0x30]
	0x032CFE58 LDP X22, X21, [X31 + 0x20]
	0x032CFE5C LDP X24, X23, [X31 + 0x10]
	0x032CFE60 MOV X4, X31
	0x032CFE64 LDP X30, X25, [X31], #0x40
	0x032CFE68 B 0x32A89BC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, X31
	004 Call NotImplemented.get_ByDesign
	005 Move X19, X0
	006 Move X0, 0xE57000
	007 Move X0, [X0+3488]
	008 Call 0x1C17D08
	009 Move X1, X0
	010 Move X0, X19
	011 Call 0x1C17DEC

Method: System.String get_ScopeName()

Disassembly:
	0x032CFE6C BL 0x1C16F20
	0x032CFE70 LDR X0, [X0 + 0x98]
	0x032CFE74 RET
	0x032CFE78 MOVZ W1, 0x1
	0x032CFE7C B 0x32CFE80
	0x032CFE80 STR X30, [X31 - 0x40]!
	0x032CFE84 STP X24, X23, [X31 + 0x10]
	0x032CFE88 STP X22, X21, [X31 + 0x20]
	0x032CFE8C STP X20, X19, [X31 + 0x30]
	0x032CFE90 ADRP X21, 0x110D000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, X31
	004 Call NotImplemented.get_ByDesign
	005 Move X19, X0
	006 Move X0, 0xE57000
	007 Move X0, [X0+3496]
	008 Call 0x1C17D08
	009 Move X1, X0
	010 Move X0, X19
	011 Call 0x1C17DEC

Method: System.Boolean IsResource()

Disassembly:
	0x032CFE94 LDRB W8, [X21 + 0x8FD]
	0x032CFE98 MOV W19, W1
	0x032CFE9C MOV X20, X0
	0x032CFEA0 TBNZ X8, 0x0, 0x32CFEB8
	0x032CFEA4 ADRP X0, 0xE24000
	0x032CFEA8 LDR X0, [X0 + 0x8F0]
	0x032CFEAC BL 0x1C16CF4
	0x032CFEB0 MOVZ W8, 0x1
	0x032CFEB4 STRB W8, [X21 + 0x8FD]
	0x032CFEB8 MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, X31
	004 Call NotImplemented.get_ByDesign
	005 Move X19, X0
	006 Move X0, 0xE57000
	007 Move X0, [X0+3504]
	008 Call 0x1C17D08
	009 Move X1, X0
	010 Move X0, X19
	011 Call 0x1C17DEC

Method: System.Boolean IsDefined(System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x032CFEBC MOV X1, X31
	0x032CFEC0 TBZ X19, 0x0, 0x32CFECC
	0x032CFEC4 BL 0x33B3134
	0x032CFEC8 B 0x32CFED0
	0x032CFECC BL 0x33B342C
	0x032CFED0 LDR X22, [X20 + 0x98]
	0x032CFED4 MOV X21, X0
	0x032CFED8 CBZ X22, 0x32CFF9C
	0x032CFEDC LDR X8, [X22 + 0x18]
	0x032CFEE0 CBZ X8, 0x32CFF9C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, X31
	004 Call NotImplemented.get_ByDesign
	005 Move X19, X0
	006 Move X0, 0xE57000
	007 Move X0, [X0+3512]
	008 Call 0x1C17D08
	009 Move X1, X0
	010 Move X0, X19
	011 Call 0x1C17DEC

Method: System.Object[] GetCustomAttributes(System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x032CFEE4 ADRP X8, 0xE24000
	0x032CFEE8 LDR X8, [X8 + 0x8F0]
	0x032CFEEC LDR X0, [X8]
	0x032CFEF0 BL 0x1C16F10
	0x032CFEF4 MOV X1, X21
	0x032CFEF8 MOV X2, X31
	0x032CFEFC MOV X20, X0
	0x032CFF00 BL 0x3231CF8
	0x032CFF04 LDR X8, [X22 + 0x18]
	0x032CFF08 CMP W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, X31
	004 Call NotImplemented.get_ByDesign
	005 Move X19, X0
	006 Move X0, 0xE57000
	007 Move X0, [X0+3520]
	008 Call 0x1C17D08
	009 Move X1, X0
	010 Move X0, X19
	011 Call 0x1C17DEC

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x032CFF0C B.LT 0x32CFF78
	0x032CFF10 MOV X23, X31
	0x032CFF14 AND X8, X8, 0x0
	0x032CFF18 ADD X24, X22, 0x20
	0x032CFF1C CMP X23, W8, UXTW
	0x032CFF20 B.CS 0x32CFFB4
	0x032CFF24 LDR X21, [X24, X23, LSL #3]
	0x032CFF28 CBZ X21, 0x32CFF6C
	0x032CFF2C CBZ X20, 0x32CFFB8
	0x032CFF30 MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, X31
	004 Call NotImplemented.get_ByDesign
	005 Move X19, X0
	006 Move X0, 0xE57000
	007 Move X0, [X0+3528]
	008 Call 0x1C17D08
	009 Move X1, X0
	010 Move X0, X19
	011 Call 0x1C17DEC

Method: System.Boolean Equals(System.Object o)

Disassembly:
	0x032CFF34 MOV X1, X31
	0x032CFF38 BL 0x3233888

ISIL:
	001 Move X2, X31
	002 Call Object.Equals, X0, X1
	003 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x032CFF3C LDR X8, [X21]
	0x032CFF40 TBZ X19, 0x0, 0x32CFF4C

ISIL:
	001 Move X1, X31
	002 Call Object.GetHashCode, X0
	003 Return X0

Method: System.Boolean op_Equality(System.Reflection.Module left, System.Reflection.Module right)

Disassembly:
	0x032CFF44 LDP X9, X1, [X8 + 0x188]
	0x032CFF48 B 0x32CFF50
	0x032CFF4C LDP X9, X1, [X8 + 0x168]
	0x032CFF50 MOV X0, X21
	0x032CFF54 BLR X9
	0x032CFF58 MOV X1, X0
	0x032CFF5C MOV X0, X20
	0x032CFF60 MOV X2, X31
	0x032CFF64 BL 0x32333E0
	0x032CFF68 LDR W8, [X22 + 0x18]
	0x032CFF6C ADD X23, X23, 0x1

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, W31
	003 Compare X0, 0
	004 JumpIfEqual {12}
	005 Compare X1, 0
	006 JumpIfEqual {12}
	007 Move X8, [X0]
	008 Move X3, [X8+312]
	009 Move X2, [X8+320]
	010 CallNoReturn X3
	011 Move W8, 1
	012 Move W0, W8
	013 Return X0

Method: System.String ToString()

Disassembly:
	0x032CFF70 CMP X23, W8, SXTW
	0x032CFF74 B.LT 0x32CFF1C
	0x032CFF78 CBZ X20, 0x32CFFB8

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+456]
	003 Move X1, [X8+464]
	004 CallNoReturn X2

Method: System.Boolean FilterTypeNameImpl(System.Type cls, System.Object filterCriteria)

Disassembly:
	0x032CFF7C LDR X8, [X20]
	0x032CFF80 MOV X0, X20
	0x032CFF84 LDP X20, X19, [X31 + 0x30]
	0x032CFF88 LDP X22, X21, [X31 + 0x20]
	0x032CFF8C LDP X2, X1, [X8 + 0x168]
	0x032CFF90 LDP X24, X23, [X31 + 0x10]
	0x032CFF94 LDR X30, [X31], #0x40
	0x032CFF98 BR X2
	0x032CFF9C MOV X0, X21
	0x032CFFA0 LDP X20, X19, [X31 + 0x30]
	0x032CFFA4 LDP X22, X21, [X31 + 0x20]
	0x032CFFA8 LDP X24, X23, [X31 + 0x10]
	0x032CFFAC LDR X30, [X31], #0x40
	0x032CFFB0 RET
	0x032CFFB4 BL 0x1C16F28
	0x032CFFB8 BL 0x1C16F20
	0x032CFFBC MOV W1, W31
	0x032CFFC0 B 0x32CFE80
	0x032CFFC4 STR X30, [X31 - 0x30]!
	0x032CFFC8 STP X22, X21, [X31 + 0x10]
	0x032CFFCC STP X20, X19, [X31 + 0x20]
	0x032CFFD0 MOV W19, W2
	0x032CFFD4 MOV X20, X1
	0x032CFFD8 MOV X21, X0
	0x032CFFDC AND W22, W3, 0x1
	0x032CFFE0 BL 0x32D0398
	0x032CFFE4 STR X20, [X21 + 0x18]
	0x032CFFE8 STR W19, [X21 + 0x20]
	0x032CFFEC STRB W22, [X21 + 0x24]
	0x032CFFF0 LDP X20, X19, [X31 + 0x20]
	0x032CFFF4 LDP X22, X21, [X31 + 0x10]
	0x032CFFF8 LDR X30, [X31], #0x30
	0x032CFFFC RET
	0x032D0000 STR X30, [X31 - 0x20]!
	0x032D0004 STP X20, X19, [X31 + 0x10]
	0x032D0008 MOV X19, X1
	0x032D000C MOV X20, X0
	0x032D0010 BL 0x32D0398
	0x032D0014 STR X19, [X20 + 0x18]
	0x032D0018 LDP X20, X19, [X31 + 0x10]
	0x032D001C LDR X30, [X31], #0x20
	0x032D0020 RET
	0x032D0024 MOVZ W0, 0x1
	0x032D0028 RET
	0x032D002C MOV W0, W31
	0x032D0030 RET
	0x032D0034 MOV W0, W31
	0x032D0038 RET
	0x032D003C LDRB W8, [X0 + 0x24]
	0x032D0040 CMP W8, 0x0
	0x032D0044 CSET W0, EQ
	0x032D0048 RET
	0x032D004C LDRB W0, [X0 + 0x24]
	0x032D0050 RET
	0x032D0054 LDR W0, [X0 + 0x20]
	0x032D0058 RET
	0x032D005C STR X30, [X31 - 0x20]!
	0x032D0060 STP X20, X19, [X31 + 0x10]
	0x032D0064 ADRP X20, 0x110C000
	0x032D0068 LDRB W8, [X20 + 0x8FE]
	0x032D006C MOV X19, X0
	0x032D0070 TBNZ X8, 0x0, 0x32D00AC
	0x032D0074 ADRP X0, 0xE55000
	0x032D0078 LDR X0, [X0 + 0xE88]
	0x032D007C BL 0x1C16CF4
	0x032D0080 ADRP X0, 0xE54000
	0x032D0084 LDR X0, [X0 + 0xC90]
	0x032D0088 BL 0x1C16CF4
	0x032D008C ADRP X0, 0xE23000
	0x032D0090 LDR X0, [X0 + 0xEC8]
	0x032D0094 BL 0x1C16CF4
	0x032D0098 ADRP X0, 0xE23000
	0x032D009C LDR X0, [X0 + 0x848]
	0x032D00A0 BL 0x1C16CF4
	0x032D00A4 MOVZ W8, 0x1
	0x032D00A8 STRB W8, [X20 + 0x8FE]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x110E000
	006 Move W8, [X21+2290]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE27000
	014 Move X0, [X0+632]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2290], W8
	018 Compare X19, 0
	019 JumpIfEqual {74}
	020 Move X8, 0xE27000
	021 Move X8, [X8+632]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W8, [X19+16]
	026 Subtract W1, W8, 1
	027 Move X0, X19
	028 Move X2, X31
	029 Call String.get_Chars, X0, X1
	030 And W8, W0, 0xFFFF
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W8, [X19+16]
	033 Move X0, X19
	034 Move W1, W31
	035 Move X3, X31
	036 Subtract W2, W8, 1
	037 Call String.Substring, X0, X1, X2
	038 Compare X20, 0
	039 JumpIfEqual {91}
	040 Move X8, [X20]
	041 Move X19, X0
	042 Move X0, X20
	043 Move X9, [X8+424]
	044 Move X1, [X8+432]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Compare X0, 0
	047 JumpIfEqual {91}
	048 Move X1, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move W2, 4
	052 Move X3, X31
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Call String.StartsWith, X0, X1, X2
	056 Return X0
	057 Compare X20, 0
	058 JumpIfEqual {91}
	059 Move X8, [X20]
	060 Move X0, X20
	061 Move X9, [X8+424]
	062 Move X1, [X8+432]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Compare X0, 0
	065 JumpIfEqual {91}
	066 Move X1, X19
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X2, X31
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Call String.Equals, X0, X1
	073 Return X0
	074 Move X0, 0xE56000
	075 Move X0, [X0+3536]
	076 Call 0x1C17D08
	077 Call 0x1C17F10
	078 Move X19, X0
	079 Move X0, 0xE56000
	080 Move X0, [X0+3544]
	081 Call 0x1C17D08
	082 Move X1, X0
	083 Move X0, X19
	084 Call InvalidFilterCriteriaException..ctor, X0, X1
	085 Move X0, 0xE56000
	086 Move X0, [X0+3552]
	087 Call 0x1C17D08
	088 Move X1, X0
	089 Move X0, X19
	090 Call 0x1C17DEC
	091 Call 0x1C17F20

Method: System.Boolean FilterTypeNameIgnoreCaseImpl(System.Type cls, System.Object filterCriteria)

Disassembly:
	0x032D00AC LDRB W8, [X19 + 0x24]
	0x032D00B0 CBZ W8, 0x32D00CC
	0x032D00B4 LDR W8, [X19 + 0x20]
	0x032D00B8 SUBS W2, W8, 0x1
	0x032D00BC B.NE 0x32D00E4
	0x032D00C0 ADRP X8, 0xE55000
	0x032D00C4 LDR X8, [X8 + 0xE88]
	0x032D00C8 B 0x32D00D4
	0x032D00CC ADRP X8, 0xE54000
	0x032D00D0 LDR X8, [X8 + 0xC90]
	0x032D00D4 LDR X0, [X8]
	0x032D00D8 LDP X20, X19, [X31 + 0x10]
	0x032D00DC LDR X30, [X31], #0x20
	0x032D00E0 RET
	0x032D00E4 MOVZ W1, 0x2C
	0x032D00E8 MOV X0, X31
	0x032D00EC MOV X3, X31
	0x032D00F0 BL 0x322EAF4
	0x032D00F4 ADRP X8, 0xE23000
	0x032D00F8 LDR X8, [X8 + 0xEC8]
	0x032D00FC ADRP X9, 0xE23000
	0x032D0100 LDR X9, [X9 + 0x848]
	0x032D0104 LDP X20, X19, [X31 + 0x10]
	0x032D0108 LDR X8, [X8]
	0x032D010C MOV X1, X0
	0x032D0110 LDR X2, [X9]
	0x032D0114 MOV X3, X31
	0x032D0118 MOV X0, X8
	0x032D011C LDR X30, [X31], #0x20
	0x032D0120 B 0x32274B8
	0x032D0124 STR X30, [X31 - 0x20]!
	0x032D0128 STP X20, X19, [X31 + 0x10]
	0x032D012C MOV X19, X1
	0x032D0130 MOV X20, X0
	0x032D0134 BL 0x32D0398
	0x032D0138 STR X19, [X20 + 0x18]
	0x032D013C LDP X20, X19, [X31 + 0x10]
	0x032D0140 LDR X30, [X31], #0x20
	0x032D0144 RET
	0x032D0148 MOV W0, W31
	0x032D014C RET
	0x032D0150 MOVZ W0, 0x1
	0x032D0154 RET
	0x032D0158 MOV W0, W31
	0x032D015C RET
	0x032D0160 MOV W0, W31
	0x032D0164 RET
	0x032D0168 MOV W0, W31
	0x032D016C RET
	0x032D0170 STP X30, X19, [X31 - 0x10]!
	0x032D0174 ADRP X0, 0xE2B000
	0x032D0178 LDR X0, [X0 + 0x578]
	0x032D017C BL 0x1C16D08
	0x032D0180 BL 0x1C16F10
	0x032D0184 MOV X19, X0
	0x032D0188 ADRP X0, 0xE55000
	0x032D018C LDR X0, [X0 + 0xE90]
	0x032D0190 BL 0x1C16D08
	0x032D0194 MOV X1, X0
	0x032D0198 MOV X0, X19
	0x032D019C MOV X2, X31
	0x032D01A0 BL 0x3314A68
	0x032D01A4 ADRP X0, 0xE55000
	0x032D01A8 LDR X0, [X0 + 0xE98]
	0x032D01AC BL 0x1C16D08
	0x032D01B0 MOV X1, X0
	0x032D01B4 MOV X0, X19
	0x032D01B8 BL 0x1C16DEC
	0x032D01BC STR X30, [X31 - 0x20]!
	0x032D01C0 STP X20, X19, [X31 + 0x10]
	0x032D01C4 ADRP X19, 0x110C000
	0x032D01C8 ADRP X20, 0xE2C000
	0x032D01CC LDRB W8, [X19 + 0x8FF]
	0x032D01D0 LDR X20, [X20 + 0x720]
	0x032D01D4 TBNZ X8, 0x0, 0x32D01EC
	0x032D01D8 ADRP X0, 0xE2C000
	0x032D01DC LDR X0, [X0 + 0x720]
	0x032D01E0 BL 0x1C16CF4
	0x032D01E4 MOVZ W8, 0x1
	0x032D01E8 STRB W8, [X19 + 0x8FF]
	0x032D01EC LDR X0, [X20]
	0x032D01F0 LDP X20, X19, [X31 + 0x10]
	0x032D01F4 LDR X30, [X31], #0x20
	0x032D01F8 RET
	0x032D01FC STP X30, X25, [X31 - 0x40]!
	0x032D0200 STP X24, X23, [X31 + 0x10]
	0x032D0204 STP X22, X21, [X31 + 0x20]
	0x032D0208 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x110D000
	006 Move W8, [X21+2291]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE26000
	014 Move X0, [X0+632]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2291], W8
	018 Compare X20, 0
	019 JumpIfEqual {79}
	020 Move X8, 0xE26000
	021 Move X8, [X8+632]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W8, [X20+16]
	026 Subtract W1, W8, 1
	027 Move X0, X20
	028 Move X2, X31
	029 Call String.get_Chars, X0, X1
	030 And W8, W0, 0xFFFF
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W8, [X20+16]
	033 Move X0, X20
	034 Move W1, W31
	035 Move X3, X31
	036 Subtract W2, W8, 1
	037 Call String.Substring, X0, X1, X2
	038 Compare X19, 0
	039 JumpIfEqual {96}
	040 Move X8, [X19]
	041 Move X20, X0
	042 Move X0, X19
	043 Move X9, [X8+424]
	044 Move X1, [X8+432]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Compare X0, 0
	047 JumpIfEqual {96}
	048 Compare X20, 0
	049 JumpIfEqual {96}
	050 Move W8, [X0+16]
	051 Move W4, [X20+16]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W0, W31
	054 Compare X19, 0
	055 JumpIfEqual {96}
	056 Move X8, [X19]
	057 Move X0, X19
	058 Move X9, [X8+424]
	059 Move X1, [X8+432]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move X1, X0
	062 Move W2, 5
	063 Move X0, X20
	064 Move X3, X31
	065 Call String.Compare, X0, X1, X2
	066 NotImplemented "Instruction CMP not yet implemented."
	067 NotImplemented "Instruction CSET not yet implemented."
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Return X0
	073 Move W5, 5
	074 Move W1, W31
	075 Move X2, X20
	076 Move W3, W31
	077 Move X6, X31
	078 Call String.Compare, X0, X1, X2, X3, X4, X5
	079 Move X0, 0xE56000
	080 Move X0, [X0+3536]
	081 Call 0x1C17D08
	082 Call 0x1C17F10
	083 Move X19, X0
	084 Move X0, 0xE56000
	085 Move X0, [X0+3544]
	086 Call 0x1C17D08
	087 Move X1, X0
	088 Move X0, X19
	089 Call InvalidFilterCriteriaException..ctor, X0, X1
	090 Move X0, 0xE56000
	091 Move X0, [X0+3560]
	092 Call 0x1C17D08
	093 Move X1, X0
	094 Move X0, X19
	095 Call 0x1C17DEC
	096 Call 0x1C17F20

Method: System.Guid GetModuleVersionId()

Disassembly:
	0x032D020C ADRP X22, 0x110C000
	0x032D0210 ADRP X24, 0xE23000
	0x032D0214 LDRB W8, [X22 + 0x900]
	0x032D0218 LDR X24, [X24 + 0x6C0]
	0x032D021C MOV X21, X2
	0x032D0220 MOV X20, X1
	0x032D0224 MOV X19, X0
	0x032D0228 TBNZ X8, 0x0, 0x32D024C
	0x032D022C ADRP X0, 0xE2B000
	0x032D0230 LDR X0, [X0 + 0xC60]
	0x032D0234 BL 0x1C16CF4
	0x032D0238 ADRP X0, 0xE23000
	0x032D023C LDR X0, [X0 + 0x6C0]
	0x032D0240 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xE2D000
	004 Move X0, [X0+1880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotImplementedException..ctor, X0
	010 Move X0, 0xE56000
	011 Move X0, [X0+3568]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Void .cctor()

Disassembly:
	0x032D0244 MOVZ W8, 0x1
	0x032D0248 STRB W8, [X22 + 0x900]
	0x032D024C MOV X0, X19
	0x032D0250 BL 0x32D0398
	0x032D0254 LDR X0, [X24]
	0x032D0258 LDR W8, [X0 + 0xE0]
	0x032D025C CBNZ W8, 0x32D0264
	0x032D0260 BL 0x1C16DFC
	0x032D0264 MOV X0, X20
	0x032D0268 MOV X1, X31
	0x032D026C MOV X2, X31
	0x032D0270 BL 0x3395194
	0x032D0274 TBNZ X0, 0x0, 0x32D0368
	0x032D0278 CBZ X21, 0x32D031C
	0x032D027C MOV X0, X21
	0x032D0280 MOV X1, X31
	0x032D0284 BL 0x33A01F0
	0x032D0288 CBZ X0, 0x32D0388
	0x032D028C ADRP X8, 0xE2B000
	0x032D0290 LDR X8, [X8 + 0xC60]
	0x032D0294 MOV X22, X0
	0x032D0298 LDR X23, [X8]
	0x032D029C MOV X1, X23
	0x032D02A0 BL 0x1C16E00
	0x032D02A4 CBZ X0, 0x32D038C
	0x032D02A8 LDR X8, [X0 + 0x18]
	0x032D02AC MOV X21, X0
	0x032D02B0 CMP W8, 0x1
	0x032D02B4 B.LT 0x32D0304
	0x032D02B8 MOV X23, X31
	0x032D02BC AND X8, X8, 0x0
	0x032D02C0 ADD X25, X21, 0x20
	0x032D02C4 CMP X23, W8, UXTW
	0x032D02C8 B.CS 0x32D0364
	0x032D02CC LDR X0, [X24]
	0x032D02D0 LDR X22, [X25, X23, LSL #3]
	0x032D02D4 LDR W8, [X0 + 0xE0]
	0x032D02D8 CBNZ W8, 0x32D02E0
	0x032D02DC BL 0x1C16DFC
	0x032D02E0 MOV X0, X22
	0x032D02E4 MOV X1, X31
	0x032D02E8 MOV X2, X31
	0x032D02EC BL 0x3395194
	0x032D02F0 TBNZ X0, 0x0, 0x32D031C
	0x032D02F4 LDR W8, [X21 + 0x18]
	0x032D02F8 ADD X23, X23, 0x1
	0x032D02FC CMP X23, W8, SXTW
	0x032D0300 B.LT 0x32D02C4
	0x032D0304 STP X20, X21, [X19 + 0x18]
	0x032D0308 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x110D000
	008 Move X22, 0xE56000
	009 Move X19, 0xE56000
	010 Move X20, 0xE56000
	011 Move X21, 0xE56000
	012 Move W8, [X23+2292]
	013 Move X22, [X22+3576]
	014 Move X19, [X19+3552]
	015 Move X20, [X20+3584]
	016 Move X21, [X21+3560]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0xE56000
	022 Move X0, [X0+3560]
	023 Call 0x1C17CF4
	024 Move X0, 0xE56000
	025 Move X0, [X0+3552]
	026 Call 0x1C17CF4
	027 Move X0, 0xE56000
	028 Move X0, [X0+3584]
	029 Call 0x1C17CF4
	030 Move X0, 0xE56000
	031 Move X0, [X0+3576]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+2292], W8
	035 Move X0, [X22]
	036 Call 0x1C17F10
	037 Move X2, [X19]
	038 Move X1, X31
	039 Move X19, X0
	040 Call TypeFilter..ctor, X0, X1, X2
	041 Move X8, [X20]
	042 Move X8, [X8+184]
	043 Move [X8], X19
	044 Move X0, [X22]
	045 Call 0x1C17F10
	046 Move X2, [X21]
	047 Move X1, X31
	048 Move X19, X0
	049 Call TypeFilter..ctor, X0, X1, X2
	050 Move X8, [X20]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X8, [X8+184]
	054 Move [X8+8], X19
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X30, [X31+48]
	058 Move X23, [X31+56]
	059 Return 

