Type: System.Reflection.RuntimeFieldInfo

Method: System.Reflection.BindingFlags get_BindingFlags()

Disassembly:
	0x032DAA10 MOV X2, X31
	0x032DAA14 LDR X1, [X8]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Reflection.Module get_Module()

Disassembly:
	0x032DAA18 LDR X23, [X23 + 0x608]

ISIL:
No ISIL was generated
Method: System.RuntimeType GetDeclaringTypeInternal()

Disassembly:
	0x032DAA38 MOV X22, X0
	0x032DAA3C MOV X0, X20
	0x032DAA40 LDR X9, [X8 + 0x278]
	0x032DAA44 LDR X1, [X8 + 0x280]
	0x032DAA48 BLR X9
	0x032DAA4C MOV W2, W0
	0x032DAA50 AND W3, W19, 0x1
	0x032DAA54 MOV X0, X21
	0x032DAA58 MOV X1, X22
	0x032DAA5C BL 0x32DAA90
	0x032DAA60 LDR X1, [X23]
	0x032DAA64 MOV X0, X21
	0x032DAA68 MOV X2, X31
	0x032DAA6C BL 0x32333E0
	0x032DAA70 LDR X8, [X21]
	0x032DAA74 MOV X0, X21
	0x032DAA78 LDP X20, X19, [X31 + 0x20]
	0x032DAA7C LDP X22, X21, [X31 + 0x10]
	0x032DAA80 LDP X2, X1, [X8 + 0x168]
	0x032DAA84 LDP X30, X23, [X31], #0x30
	0x032DAA88 BR X2
	0x032DAA8C BL 0x1C16F20
	0x032DAA90 STP X29, X30, [X31 - 0x60]!
	0x032DAA94 STP X28, X27, [X31 + 0x10]
	0x032DAA98 STP X26, X25, [X31 + 0x20]
	0x032DAA9C STP X24, X23, [X31 + 0x30]
	0x032DAAA0 STP X22, X21, [X31 + 0x40]
	0x032DAAA4 STP X20, X19, [X31 + 0x50]
	0x032DAAA8 ADRP X23, 0x1102000
	0x032DAAAC LDRB W8, [X23 + 0x977]
	0x032DAAB0 MOV W21, W3
	0x032DAAB4 MOV W20, W2
	0x032DAAB8 MOV X22, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1103000
	005 Move W8, [X20+2384]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE43000
	012 Move X0, [X0+1256]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2384], W8
	016 Move X8, [X19]
	017 Move X0, X19
	018 Move X9, [X8+440]
	019 Move X1, [X8+448]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Compare X0, 0
	022 JumpIfEqual {34}
	023 Move X9, 0xE43000
	024 Move X9, [X9+1256]
	025 Move X8, [X0]
	026 Move X1, [X9]
	027 Move W10, [X8+304]
	028 Move W9, [X1+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X8+200]
	031 Add X8, X8, X9
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return X0
	038 Call 0x1C181E0

Method: System.RuntimeType get_ReflectedTypeInternal()

Disassembly:
	0x032DAABC MOV X19, X0
	0x032DAAC0 TBNZ X8, 0x0, 0x32DAAFC
	0x032DAAC4 ADRP X0, 0xE22000
	0x032DAAC8 LDR X0, [X0 + 0x8D8]
	0x032DAACC BL 0x1C16CF4
	0x032DAAD0 ADRP X0, 0xE19000
	0x032DAAD4 LDR X0, [X0 + 0x838]
	0x032DAAD8 BL 0x1C16CF4
	0x032DAADC ADRP X0, 0xE4B000
	0x032DAAE0 LDR X0, [X0 + 0xD40]
	0x032DAAE4 BL 0x1C16CF4
	0x032DAAE8 ADRP X0, 0xE44000
	0x032DAAEC LDR X0, [X0 + 0x5F8]
	0x032DAAF0 BL 0x1C16CF4
	0x032DAAF4 MOVZ W8, 0x1
	0x032DAAF8 STRB W8, [X23 + 0x977]
	0x032DAAFC CBZ X22, 0x32DAC7C
	0x032DAB00 LDR X8, [X22 + 0x18]
	0x032DAB04 ADRP X25, 0xE19000
	0x032DAB08 LDR X25, [X25 + 0x838]
	0x032DAB0C CMP W8, 0x1
	0x032DAB10 B.LT 0x32DAC0C
	0x032DAB14 ADRP X27, 0xE22000
	0x032DAB18 ADRP X28, 0xE4B000
	0x032DAB1C LDR X27, [X27 + 0x8D8]
	0x032DAB20 LDR X28, [X28 + 0xD40]
	0x032DAB24 MOV W26, W31
	0x032DAB28 MOVZ W29, 0x26
	0x032DAB2C CBZ W26, 0x32DAB48
	0x032DAB30 CBZ X19, 0x32DAC7C
	0x032DAB34 LDR X1, [X25]
	0x032DAB38 MOV X0, X19
	0x032DAB3C MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1103000
	005 Move W8, [X20+2385]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE43000
	012 Move X0, [X0+1256]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2385], W8
	016 Move X8, [X19]
	017 Move X0, X19
	018 Move X9, [X8+456]
	019 Move X1, [X8+464]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Compare X0, 0
	022 JumpIfEqual {34}
	023 Move X9, 0xE43000
	024 Move X9, [X9+1256]
	025 Move X8, [X0]
	026 Move X1, [X9]
	027 Move W10, [X8+304]
	028 Move W9, [X1+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X8+200]
	031 Add X8, X8, X9
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return X0
	038 Call 0x1C181E0

Method: System.Reflection.RuntimeModule GetRuntimeModule()

Disassembly:
	0x032DAA1C BL 0x32333E0
	0x032DAA20 LDR X8, [X20]
	0x032DAA24 MOV X0, X20
	0x032DAA28 LDR X9, [X8 + 0x398]
	0x032DAA2C LDR X1, [X8 + 0x3A0]
	0x032DAA30 BLR X9
	0x032DAA34 LDR X8, [X20]

ISIL:
	001 Move [X31-16], X30
	002 Call RuntimeFieldInfo.GetDeclaringTypeInternal, X0
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call RuntimeType.GetRuntimeModule, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x032DAB40 BL 0x32333E0
	0x032DAB44 LDR W8, [X22 + 0x18]
	0x032DAB48 CMP W26, W8
	0x032DAB4C B.CS 0x32DAC80
	0x032DAB50 ADD X8, X22, W26, 0x3, SXTW
	0x032DAB54 LDR X0, [X8 + 0x20]
	0x032DAB58 CBZ X0, 0x32DAC7C
	0x032DAB5C LDR X8, [X0]
	0x032DAB60 LDP X9, X1, [X8 + 0x1D8]
	0x032DAB64 BLR X9
	0x032DAB68 CBZ X0, 0x32DAC7C
	0x032DAB6C LDR X8, [X0]
	0x032DAB70 AND W1, W21, 0x1
	0x032DAB74 MOV X24, X0
	0x032DAB78 LDR X9, [X8 + 0x918]
	0x032DAB7C LDR X2, [X8 + 0x920]
	0x032DAB80 BLR X9
	0x032DAB84 MOV X23, X0
	0x032DAB88 MOV X0, X24
	0x032DAB8C MOV X1, X31
	0x032DAB90 BL 0x3396C08
	0x032DAB94 TBZ X0, 0x0, 0x32DABE8
	0x032DAB98 TBNZ X21, 0x0, 0x32DABE8
	0x032DAB9C LDR X0, [X27]
	0x032DABA0 MOVZ W1, 0x1
	0x032DABA4 BL 0x1C16D6C
	0x032DABA8 CBZ X0, 0x32DAC7C
	0x032DABAC LDR W8, [X0 + 0x18]
	0x032DABB0 MOV X1, X0
	0x032DABB4 CBZ W8, 0x32DAC80
	0x032DABB8 STRH W29, [X1 + 0x20]
	0x032DABBC CBZ X23, 0x32DAC7C
	0x032DABC0 MOV X0, X23
	0x032DABC4 MOV X2, X31
	0x032DABC8 BL 0x322BC58
	0x032DABCC CBZ X19, 0x32DAC7C
	0x032DABD0 MOV X1, X0
	0x032DABD4 MOV X0, X19
	0x032DABD8 MOV X2, X31
	0x032DABDC BL 0x32333E0
	0x032DABE0 LDR X23, [X28]
	0x032DABE4 B 0x32DABEC
	0x032DABE8 CBZ X19, 0x32DAC7C
	0x032DABEC MOV X0, X19
	0x032DABF0 MOV X1, X23

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {36}
	008 Move X8, [X0]
	009 Move X19, X1
	010 Move X20, X0
	011 Move X9, [X8+424]
	012 Move X1, [X8+432]
	013 NotImplemented "Instruction BLR not yet implemented."
	014 Move X21, X0
	015 Move X0, X20
	016 Call RuntimeFieldInfo.get_ReflectedTypeInternal, X0
	017 Move X8, [X20]
	018 Move X22, X0
	019 Move X0, X20
	020 Move X9, [X8+360]
	021 Move X1, [X8+368]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move X3, X0
	024 Move X0, X19
	025 Move X1, X21
	026 Move X2, X22
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move W4, 4
	032 Move X5, X31
	033 Move X30, [X31+48]
	034 Call MemberInfoSerializationHolder.GetSerializationInfo, X0, X1, X2, X3, X4
	035 Return 
	036 Move X0, 0xE1F000
	037 Move X0, [X0+1320]
	038 Call 0x1C17D08
	039 Call 0x1C17F10
	040 Move X19, X0
	041 Move X0, 0xE44000
	042 Move X0, [X0+728]
	043 Call 0x1C17D08
	044 Move X1, X0
	045 Move X0, X19
	046 Move X2, X31
	047 Call ArgumentNullException..ctor, X0, X1
	048 Move X0, 0xE4D000
	049 Move X0, [X0+1152]
	050 Call 0x1C17D08
	051 Move X1, X0
	052 Move X0, X19
	053 Call 0x1C17DEC

Method: System.Object UnsafeGetValue(System.Object obj)

Disassembly:
	0x032DABF4 MOV X2, X31

ISIL:
	001 Call 0x1C952C8
	002 Return X0

Method: System.Void CheckConsistency(System.Object target)

Disassembly:
	0x032DABF8 BL 0x32333E0
	0x032DABFC LDR X8, [X22 + 0x18]
	0x032DAC00 ADD W26, W26, 0x1
	0x032DAC04 CMP W26, W8
	0x032DAC08 B.LT 0x32DAB2C
	0x032DAC0C TBNZ X20, 0x1, 0x32DAC2C
	0x032DAC10 LDP X20, X19, [X31 + 0x50]
	0x032DAC14 LDP X22, X21, [X31 + 0x40]
	0x032DAC18 LDP X24, X23, [X31 + 0x30]
	0x032DAC1C LDP X26, X25, [X31 + 0x20]
	0x032DAC20 LDP X28, X27, [X31 + 0x10]
	0x032DAC24 LDP X29, X30, [X31], #0x60
	0x032DAC28 RET
	0x032DAC2C CBZ X8, 0x32DAC48
	0x032DAC30 CBZ X19, 0x32DAC7C
	0x032DAC34 LDR X1, [X25]
	0x032DAC38 MOV X0, X19
	0x032DAC3C MOV X2, X31
	0x032DAC40 BL 0x32333E0
	0x032DAC44 B 0x32DAC4C
	0x032DAC48 CBZ X19, 0x32DAC7C
	0x032DAC4C ADRP X8, 0xE44000
	0x032DAC50 LDR X8, [X8 + 0x5F8]
	0x032DAC54 MOV X0, X19
	0x032DAC58 LDP X20, X19, [X31 + 0x50]
	0x032DAC5C LDP X22, X21, [X31 + 0x40]
	0x032DAC60 LDR X1, [X8]
	0x032DAC64 LDP X24, X23, [X31 + 0x30]
	0x032DAC68 LDP X26, X25, [X31 + 0x20]
	0x032DAC6C LDP X28, X27, [X31 + 0x10]
	0x032DAC70 MOV X2, X31
	0x032DAC74 LDP X29, X30, [X31], #0x60
	0x032DAC78 B 0x32333E0
	0x032DAC7C BL 0x1C16F20
	0x032DAC80 BL 0x1C16F28
	0x032DAC84 MOV X8, X0
	0x032DAC88 MOV X0, X1
	0x032DAC8C MOV X1, X2
	0x032DAC90 MOV X2, X8
	0x032DAC94 MOV X3, X31
	0x032DAC98 B 0x33C4FAC
	0x032DAC9C STP X30, X21, [X31 - 0x20]!
	0x032DACA0 STP X20, X19, [X31 + 0x10]
	0x032DACA4 ADRP X20, 0x1102000
	0x032DACA8 LDRB W8, [X20 + 0x95B]
	0x032DACAC MOV X19, X0
	0x032DACB0 TBNZ X8, 0x0, 0x32DACC8
	0x032DACB4 ADRP X0, 0xE19000
	0x032DACB8 LDR X0, [X0 + 0xDD8]
	0x032DACBC BL 0x1C16CF4
	0x032DACC0 MOVZ W8, 0x1
	0x032DACC4 STRB W8, [X20 + 0x95B]
	0x032DACC8 LDR X8, [X19]
	0x032DACCC MOV X0, X19
	0x032DACD0 LDR X9, [X8 + 0x3B8]
	0x032DACD4 LDR X1, [X8 + 0x3C0]
	0x032DACD8 BLR X9
	0x032DACDC CBZ X0, 0x32DAD28
	0x032DACE0 ADRP X21, 0xE19000
	0x032DACE4 LDR X21, [X21 + 0xDD8]
	0x032DACE8 MOV X1, X31
	0x032DACEC BL 0x33982D4
	0x032DACF0 LDR X8, [X19]
	0x032DACF4 MOV X20, X0
	0x032DACF8 MOV X0, X19
	0x032DACFC MOV W1, W31
	0x032DAD00 LDR X9, [X8 + 0x378]
	0x032DAD04 LDR X2, [X8 + 0x380]
	0x032DAD08 BLR X9
	0x032DAD0C LDR X1, [X21]
	0x032DAD10 MOV X2, X0
	0x032DAD14 MOV X0, X20
	0x032DAD18 LDP X20, X19, [X31 + 0x10]
	0x032DAD1C MOV X3, X31
	0x032DAD20 LDP X30, X21, [X31], #0x20
	0x032DAD24 B 0x32274B8
	0x032DAD28 BL 0x1C16F20
	0x032DAD2C STP X30, X25, [X31 - 0x40]!
	0x032DAD30 STP X24, X23, [X31 + 0x10]
	0x032DAD34 STP X22, X21, [X31 + 0x20]
	0x032DAD38 STP X20, X19, [X31 + 0x30]
	0x032DAD3C CBZ X1, 0x32DAE04
	0x032DAD40 LDR X8, [X0]
	0x032DAD44 MOV X19, X1
	0x032DAD48 MOV X21, X0
	0x032DAD4C LDP X9, X1, [X8 + 0x1A8]
	0x032DAD50 BLR X9
	0x032DAD54 MOV X20, X0
	0x032DAD58 MOV X0, X21
	0x032DAD5C BL 0x32DA8AC
	0x032DAD60 LDR X8, [X21]
	0x032DAD64 MOV X22, X0
	0x032DAD68 MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X0]
	008 Move X19, X1
	009 Move X20, X0
	010 Move X9, [X8+584]
	011 Move X8, [X8+592]
	012 Move X1, X8
	013 NotImplemented "Instruction BLR not yet implemented."
	014 Move TEMP, X0
	015 And TEMP, TEMP, 16
	016 Compare TEMP, 16
	017 JumpIfEqual {34}
	018 Move X8, [X20]
	019 Move X0, X20
	020 Move X9, [X8+440]
	021 Move X1, [X8+448]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Compare X0, 0
	024 JumpIfEqual {41}
	025 Move X8, [X0]
	026 Move X1, X19
	027 Move X9, [X8+2152]
	028 Move X2, [X8+2160]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {42}
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Move X23, [X31+56]
	040 Return 
	041 Call 0x1C17F20
	042 Compare X19, 0
	043 JumpIfNotEqual {58}
	044 Move X0, 0xE4D000
	045 Move X0, [X0+1160]
	046 Call 0x1C17D08
	047 Move X1, X31
	048 Call Environment.GetResourceString, X0
	049 Move X19, X0
	050 Move X0, 0xE4D000
	051 Move X0, [X0+1168]
	052 Call 0x1C17D08
	053 Call 0x1C17F10
	054 Move X1, X19
	055 Move X2, X31
	056 Move X20, X0
	057 Call TargetException..ctor, X0, X1
	058 Move X0, 0xE1C000
	059 Move X0, [X0+3144]
	060 Call 0x1C17D08
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X0, X31
	066 Call CultureInfo.get_CurrentUICulture
	067 Move X21, X0
	068 Move X0, 0xE4D000
	069 Move X0, [X0+1176]
	070 Call 0x1C17D08
	071 Move X1, X31
	072 Call Environment.GetResourceString, X0
	073 Move X8, [X20]
	074 Move X22, X0
	075 Move X0, X20
	076 Move X9, [X8+424]
	077 Move X1, [X8+432]
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move X8, [X20]
	080 Move X23, X0
	081 Move X0, X20
	082 Move X9, [X8+440]
	083 Move X1, [X8+448]
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move X20, X0
	086 Move X0, X19
	087 Move X1, X31
	088 Call "il2cpp_vm_object_is_inst", X0
	089 Move X4, X0
	090 Move X0, X21
	091 Move X1, X22
	092 Move X2, X23
	093 Move X3, X20
	094 Move X5, X31
	095 Call String.Format, X0, X1, X2, X3, X4
	096 Move X19, X0
	097 Move X0, 0xE22000
	098 Move X0, [X0+1400]
	099 Call 0x1C17D08
	100 Call 0x1C17F10
	101 Move X1, X19
	102 Move X2, X31
	103 Move X20, X0
	104 Call ArgumentException..ctor, X0, X1
	105 Move X0, 0xE4D000
	106 Move X0, [X0+1184]
	107 Call 0x1C17D08
	108 Move X1, X0
	109 Move X0, X20
	110 Call 0x1C17DEC

Method: System.Void UnsafeSetValue(System.Object obj, System.Object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Globalization.CultureInfo culture)

Disassembly:
	0x032DAD6C LDP X9, X1, [X8 + 0x168]
	0x032DAD70 BLR X9
	0x032DAD74 MOV X23, X0
	0x032DAD78 MOV X0, X21
	0x032DAD7C BL 0x32DAE4C
	0x032DAD80 LDR X8, [X21]
	0x032DAD84 MOV X24, X0
	0x032DAD88 MOV X0, X21
	0x032DAD8C LDR X9, [X8 + 0x2D8]
	0x032DAD90 LDR X1, [X8 + 0x2E0]
	0x032DAD94 BLR X9
	0x032DAD98 LDR X8, [X21]
	0x032DAD9C MOV W25, W0
	0x032DADA0 MOV X0, X21
	0x032DADA4 LDR X9, [X8 + 0x2E8]
	0x032DADA8 LDR X1, [X8 + 0x2F0]
	0x032DADAC BLR X9
	0x032DADB0 MOV X6, X31
	0x032DADB4 TBZ X25, 0x0, 0x32DADD4
	0x032DADB8 TBNZ X0, 0x0, 0x32DADD4
	0x032DADBC LDR X8, [X21]
	0x032DADC0 MOV X0, X21
	0x032DADC4 LDR X9, [X8 + 0x2F8]
	0x032DADC8 LDR X1, [X8 + 0x300]
	0x032DADCC BLR X9

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X31+12], W31
	007 Move X8, [X0]
	008 Move X21, X1
	009 Move X19, X2
	010 Move X20, X0
	011 Move X9, [X8+584]
	012 Move X8, [X8+592]
	013 Move X1, X8
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move W4, W0
	016 Add X6, X31, 12
	017 Move X0, X20
	018 Move X1, X21
	019 Move X2, X19
	020 Move X3, X31
	021 Move X5, X31
	022 Move X7, X31
	023 Call RuntimeFieldHandle.SetValue, X0, X1, X2, X3, X4, X5, X6
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X30, [X31+16]
	027 Move X21, [X31+24]
	028 Add X31, X31, 48
	029 Return 

Method: System.Void SetValueDirect(System.TypedReference obj, System.Object value)

Disassembly:
	0x032DADD0 MOV X6, X0
	0x032DADD4 MOV X0, X19
	0x032DADD8 MOV X1, X20
	0x032DADDC MOV X2, X22
	0x032DADE0 MOV X3, X23
	0x032DADE4 MOV X4, X24
	0x032DADE8 LDP X20, X19, [X31 + 0x30]
	0x032DADEC LDP X22, X21, [X31 + 0x20]
	0x032DADF0 LDP X24, X23, [X31 + 0x10]
	0x032DADF4 MOVZ W5, 0x8
	0x032DADF8 MOV X7, X31
	0x032DADFC LDP X30, X25, [X31], #0x40
	0x032DAE00 B 0x32D45F0
	0x032DAE04 ADRP X0, 0xE1E000
	0x032DAE08 LDR X0, [X0 + 0x528]
	0x032DAE0C BL 0x1C16D08
	0x032DAE10 BL 0x1C16F10
	0x032DAE14 MOV X19, X0
	0x032DAE18 ADRP X0, 0xE43000
	0x032DAE1C LDR X0, [X0 + 0x2D8]
	0x032DAE20 BL 0x1C16D08
	0x032DAE24 MOV X1, X0
	0x032DAE28 MOV X0, X19
	0x032DAE2C MOV X2, X31
	0x032DAE30 BL 0x330E100
	0x032DAE34 ADRP X0, 0xE4C000
	0x032DAE38 LDR X0, [X0 + 0x500]
	0x032DAE3C BL 0x1C16D08
	0x032DAE40 MOV X1, X0
	0x032DAE44 MOV X0, X19
	0x032DAE48 BL 0x1C16DEC
	0x032DAE4C STP X30, X21, [X31 - 0x20]!
	0x032DAE50 STP X20, X19, [X31 + 0x10]
	0x032DAE54 ADRP X20, 0x1102000
	0x032DAE58 LDRB W8, [X20 + 0x95D]
	0x032DAE5C MOV X19, X0
	0x032DAE60 TBNZ X8, 0x0, 0x32DAE78
	0x032DAE64 ADRP X0, 0xE19000
	0x032DAE68 LDR X0, [X0 + 0xDD8]
	0x032DAE6C BL 0x1C16CF4
	0x032DAE70 MOVZ W8, 0x1
	0x032DAE74 STRB W8, [X20 + 0x95D]
	0x032DAE78 LDR X8, [X19]
	0x032DAE7C MOV X0, X19
	0x032DAE80 LDR X9, [X8 + 0x3B8]
	0x032DAE84 LDR X1, [X8 + 0x3C0]
	0x032DAE88 BLR X9
	0x032DAE8C CBZ X0, 0x32DAEE4
	0x032DAE90 LDR X8, [X0]
	0x032DAE94 ADRP X21, 0xE19000
	0x032DAE98 MOVZ W1, 0x1
	0x032DAE9C LDR X9, [X8 + 0x918]
	0x032DAEA0 LDR X2, [X8 + 0x920]
	0x032DAEA4 LDR X21, [X21 + 0xDD8]
	0x032DAEA8 BLR X9
	0x032DAEAC LDR X8, [X19]
	0x032DAEB0 MOV X20, X0
	0x032DAEB4 MOVZ W1, 0x1
	0x032DAEB8 MOV X0, X19
	0x032DAEBC LDR X9, [X8 + 0x378]
	0x032DAEC0 LDR X2, [X8 + 0x380]
	0x032DAEC4 BLR X9
	0x032DAEC8 LDR X1, [X21]
	0x032DAECC MOV X2, X0
	0x032DAED0 MOV X0, X20
	0x032DAED4 LDP X20, X19, [X31 + 0x10]
	0x032DAED8 MOV X3, X31
	0x032DAEDC LDP X30, X21, [X31], #0x20
	0x032DAEE0 B 0x32274B8
	0x032DAEE4 BL 0x1C16F20
	0x032DAEE8 MOV X1, X31
	0x032DAEEC MOV W2, W31
	0x032DAEF0 B 0x1C71B28
	0x032DAEF4 AND W2, W2, 0x1
	0x032DAEF8 B 0x1C71B28
	0x032DAEFC MOV W2, W31
	0x032DAF00 B 0x1C71B28
	0x032DAF04 MOVZ W2, 0x1
	0x032DAF08 B 0x1C71B28
	0x032DAF0C MOV X1, X31
	0x032DAF10 B 0x32CEBB0
	0x032DAF14 B 0x1C72118
	0x032DAF18 AND W1, W1, 0x1
	0x032DAF1C B 0x1C71FE4
	0x032DAF20 B 0x1C718C4
	0x032DAF24 MOV W1, W31
	0x032DAF28 B 0x1C71FE4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1103000
	008 Move W8, [X22+2386]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE43000
	017 Move X0, [X0+1256]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2386], W8
	021 Move X0, X20
	022 Move X1, X31
	023 Call TypedReference.get_IsNull, X0
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {80}
	028 Move X8, [X21]
	029 Move X23, 0xE43000
	030 Move X0, X21
	031 Move X9, [X8+600]
	032 Move X1, [X8+608]
	033 Move X23, [X23+1256]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X8, [X21]
	036 Move X22, X0
	037 Move X0, X21
	038 Move X9, [X8+440]
	039 Move X1, [X8+448]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X1, [X23]
	042 Move X4, X0
	043 Compare X22, 0
	044 JumpIfEqual {53}
	045 Move X8, [X22]
	046 Move W9, [X1+304]
	047 Move W10, [X8+304]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X8, [X8+200]
	050 Add X8, X8, X9
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Compare X4, 0
	054 JumpIfEqual {63}
	055 Move X8, [X4]
	056 Move W9, [X1+304]
	057 Move W10, [X8+304]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X8, [X8+200]
	060 Add X8, X8, X9
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, X21
	064 Move X1, X22
	065 Move X2, X20
	066 Move X3, X19
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X5, X31
	072 Move X30, [X31+48]
	073 Move X23, [X31+56]
	074 Call RuntimeFieldHandle.SetValueDirect, X0, X1, X2, X3, X4
	075 Return 
	076 Move X0, X22
	077 Call 0x1C181E0
	078 Move X0, X4
	079 Call 0x1C181E0
	080 Move X0, 0xE4D000
	081 Move X0, [X0+1192]
	082 Call 0x1C17D08
	083 Move X1, X31
	084 Call Environment.GetResourceString, X0
	085 Move X19, X0
	086 Move X0, 0xE22000
	087 Move X0, [X0+1400]
	088 Call 0x1C17D08
	089 Call 0x1C17F10
	090 Move X1, X19
	091 Move X2, X31
	092 Move X20, X0
	093 Call ArgumentException..ctor, X0, X1
	094 Move X0, 0xE4D000
	095 Move X0, [X0+1200]
	096 Call 0x1C17D08
	097 Move X1, X0
	098 Move X0, X20
	099 Call 0x1C17DEC

Method: System.Reflection.FieldAttributes get_Attributes()

Disassembly:
	0x032DAF2C B 0x32DA738
	0x032DAF30 SUB X31, X31, 0x30

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.RuntimeFieldHandle get_FieldHandle()

Disassembly:
	0x032DAF34 STR X30, [X31 + 0x20]
	0x032DAF38 LDR X0, [X0 + 0x10]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Type ResolveType()

Disassembly:
	0x032DAF3C MOVI V0.2D, 0x0

ISIL:
	001 Call 0x1C17CAC
	002 Return X0

Method: System.Type get_FieldType()

Disassembly:
	0x032DAF40 ADD X1, X31, 0x0
	0x032DAF44 STP V0, V0, [X31]
	0x032DAF48 BL 0x1C841C8
	0x032DAF4C LDR X0, [X31 + 0x8]
	0x032DAF50 LDR X30, [X31 + 0x20]
	0x032DAF54 ADD X31, X31, 0x30
	0x032DAF58 RET
	0x032DAF5C B 0x1C718C4
	0x032DAF60 SUB X31, X31, 0x30
	0x032DAF64 STR X30, [X31 + 0x20]
	0x032DAF68 LDR X0, [X0 + 0x10]
	0x032DAF6C MOVI V0.2D, 0x0
	0x032DAF70 ADD X1, X31, 0x0
	0x032DAF74 STP V0, V0, [X31]
	0x032DAF78 BL 0x1C841C8
	0x032DAF7C LDR W0, [X31 + 0x14]
	0x032DAF80 LDR X30, [X31 + 0x20]
	0x032DAF84 ADD X31, X31, 0x30
	0x032DAF88 RET
	0x032DAF8C STR X30, [X31 - 0x20]!
	0x032DAF90 STP X20, X19, [X31 + 0x10]
	0x032DAF94 ADRP X20, 0x1102000
	0x032DAF98 LDRB W8, [X20 + 0x95E]
	0x032DAF9C MOV X19, X0
	0x032DAFA0 TBNZ X8, 0x0, 0x32DAFB8
	0x032DAFA4 ADRP X0, 0xE4C000
	0x032DAFA8 LDR X0, [X0 + 0x508]
	0x032DAFAC BL 0x1C16CF4
	0x032DAFB0 MOVZ W8, 0x1
	0x032DAFB4 STRB W8, [X20 + 0x95E]
	0x032DAFB8 LDR X0, [X19 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1103000
	006 Move X20, 0xE1A000
	007 Move W8, [X21+2387]
	008 Move X20, [X20+1728]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE1A000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2387], W8
	019 Move X0, [X20]
	020 Move X20, [X19+40]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Type.op_Equality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {36}
	033 Move X0, X19
	034 Call 0x1C17CAC
	035 Move [X19+40], X0
	036 Move X0, [X19+40]
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0

Method: System.Type GetParentType(System.Boolean declaring)

Disassembly:
	0x032DAFBC MOV X1, X19
	0x032DAFC0 BL 0x1C8422C

ISIL:
	001 And W1, W1, 1
	002 Call 0x1C952D0
	003 Return X0

Method: System.Type get_ReflectedType()

Disassembly:
	0x032DAFC4 CBZ X0, 0x32DB018
	0x032DAFC8 LDR X1, [X0 + 0x18]

ISIL:
	001 Move W1, W31
	002 Call 0x1C952D0
	003 Return X0

Method: System.Type get_DeclaringType()

Disassembly:
	0x032DAFCC MOV X19, X0
	0x032DAFD0 CBZ X1, 0x32DB008

ISIL:
	001 Move W1, 1
	002 Call 0x1C952D0
	003 Return X0

Method: System.String get_Name()

Disassembly:
	0x032DAFD4 ADRP X8, 0xE4C000
	0x032DAFD8 LDR X8, [X8 + 0x508]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Boolean IsDefined(System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x032DAFDC LDR X0, [X8]
	0x032DAFE0 BL 0x1C16D6C
	0x032DAFE4 LDR W4, [X19 + 0x18]
	0x032DAFE8 MOV X20, X0
	0x032DAFEC MOV X0, X19
	0x032DAFF0 MOV W1, W31
	0x032DAFF4 MOV X2, X20
	0x032DAFF8 MOV W3, W31
	0x032DAFFC MOV X5, X31
	0x032DB000 BL 0x33A2960
	0x032DB004 MOV X19, X20
	0x032DB008 MOV X0, X19
	0x032DB00C LDP X20, X19, [X31 + 0x10]
	0x032DB010 LDR X30, [X31], #0x20
	0x032DB014 RET
	0x032DB018 BL 0x1C16F20
	0x032DB01C MOV X1, X0
	0x032DB020 LDR X0, [X0 + 0x10]
	0x032DB024 B 0x1C8422C
	0x032DB028 STR X30, [X31 - 0x10]!
	0x032DB02C MOV X1, X0
	0x032DB030 LDR X0, [X0 + 0x10]
	0x032DB034 BL 0x1C8422C
	0x032DB038 CBZ X0, 0x32DB048
	0x032DB03C LDR W0, [X0 + 0x18]
	0x032DB040 LDR X30, [X31], #0x10
	0x032DB044 RET
	0x032DB048 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1103000
	008 Move X23, 0xE4D000
	009 Move W8, [X22+2388]
	010 Move X23, [X23+992]
	011 Move W21, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xE4C000
	019 Move X0, [X0+992]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2388], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 And W2, W21, 1
	029 Move X0, X20
	030 Move X1, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X3, X31
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Call MonoCustomAttrs.IsDefined, X0, X1, X2
	039 Return X0

Method: System.Object[] GetCustomAttributes(System.Boolean inherit)

Disassembly:
	0x032DB04C B 0x1C718C8
	0x032DB050 SUB X31, X31, 0x50
	0x032DB054 STP X30, X25, [X31 + 0x10]
	0x032DB058 STP X24, X23, [X31 + 0x20]
	0x032DB05C STP X22, X21, [X31 + 0x30]
	0x032DB060 STP X20, X19, [X31 + 0x40]
	0x032DB064 ADRP X25, 0x1101000
	0x032DB068 LDRB W8, [X25 + 0x95F]
	0x032DB06C MOV X23, X5
	0x032DB070 MOV X20, X4
	0x032DB074 MOV X24, X3
	0x032DB078 MOV W22, W2
	0x032DB07C MOV X19, X1
	0x032DB080 MOV X21, X0
	0x032DB084 TBNZ X8, 0x0, 0x32DB09C
	0x032DB088 ADRP X0, 0xE18000
	0x032DB08C LDR X0, [X0 + 0x6C0]
	0x032DB090 BL 0x1C16CF4
	0x032DB094 MOVZ W8, 0x1
	0x032DB098 STRB W8, [X25 + 0x95F]
	0x032DB09C MOV X0, X21
	0x032DB0A0 MOV X1, X31
	0x032DB0A4 STR X31, [X31 + 0x8]
	0x032DB0A8 BL 0x32CE414
	0x032DB0AC TBNZ X0, 0x0, 0x32DB0DC
	0x032DB0B0 LDR X8, [X21]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1102000
	007 Move X22, 0xE4C000
	008 Move W8, [X21+2389]
	009 Move X22, [X22+992]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE4C000
	017 Move X0, [X0+992]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2389], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 And W1, W20, 1
	027 Move X0, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call MonoCustomAttrs.GetCustomAttributes, X0, X1
	035 Return X0

Method: System.Object[] GetCustomAttributes(System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x032DB0B4 MOV X0, X21
	0x032DB0B8 LDP X9, X1, [X8 + 0x1B8]
	0x032DB0BC BLR X9
	0x032DB0C0 CBZ X0, 0x32DB1E0
	0x032DB0C4 LDR X8, [X0]
	0x032DB0C8 MOV X1, X19
	0x032DB0CC LDR X9, [X8 + 0x868]
	0x032DB0D0 LDR X2, [X8 + 0x870]
	0x032DB0D4 BLR X9
	0x032DB0D8 TBZ X0, 0x0, 0x32DB1E4
	0x032DB0DC CBNZ X24, 0x32DB104
	0x032DB0E0 ADRP X8, 0xE18000
	0x032DB0E4 LDR X8, [X8 + 0x6C0]
	0x032DB0E8 LDR X0, [X8]
	0x032DB0EC LDR W8, [X0 + 0xE0]
	0x032DB0F0 CBNZ W8, 0x32DB0F8
	0x032DB0F4 BL 0x1C16DFC
	0x032DB0F8 MOV X0, X31
	0x032DB0FC BL 0x33981F8
	0x032DB100 MOV X24, X0
	0x032DB104 LDR X8, [X21]
	0x032DB108 MOV X0, X21
	0x032DB10C LDR X9, [X8 + 0x358]
	0x032DB110 LDR X1, [X8 + 0x360]
	0x032DB114 BLR X9
	0x032DB118 MOV X2, X0
	0x032DB11C MOV X0, X24
	0x032DB120 MOV X1, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1102000
	008 Move X23, 0xE4C000
	009 Move W8, [X22+2390]
	010 Move X23, [X23+992]
	011 Move W21, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xE4C000
	019 Move X0, [X0+992]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2390], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 And W2, W21, 1
	029 Move X0, X20
	030 Move X1, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X3, X31
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Call MonoCustomAttrs.GetCustomAttributes, X0, X1, X2
	039 Return X0

Method: System.Int32 GetFieldOffset()

Disassembly:
	0x032DB124 MOV X3, X23

ISIL:
	001 Call 0x1C95174
	002 Return X0

Method: System.Object GetValueInternal(System.Object obj)

Disassembly:
	0x032DB128 MOV W4, W22

ISIL:
	001 Call 0x1C952C8
	002 Return X0

Method: System.Object GetValue(System.Object obj)

Disassembly:
	0x032DB12C BL 0x32DB334
	0x032DB130 LDR X8, [X21]
	0x032DB134 MOV X0, X21
	0x032DB138 LDR X9, [X8 + 0x308]
	0x032DB13C LDR X1, [X8 + 0x310]
	0x032DB140 BLR X9
	0x032DB144 TBNZ X0, 0x0, 0x32DB198
	0x032DB148 TBNZ X22, 0x19, 0x32DB164
	0x032DB14C ADD X3, X31, 0x8
	0x032DB150 MOV X0, X21
	0x032DB154 MOV X1, X19
	0x032DB158 MOV X2, X20
	0x032DB15C BL 0x1C718C8
	0x032DB160 B 0x32DB178
	0x032DB164 ADD X3, X31, 0x8
	0x032DB168 MOV X0, X21
	0x032DB16C MOV X1, X19
	0x032DB170 MOV X2, X20
	0x032DB174 BL 0x1C718C8
	0x032DB178 LDR X19, [X31 + 0x8]
	0x032DB17C CBNZ X19, 0x32DB1C8
	0x032DB180 LDP X20, X19, [X31 + 0x40]
	0x032DB184 LDP X22, X21, [X31 + 0x30]
	0x032DB188 LDP X24, X23, [X31 + 0x20]
	0x032DB18C LDP X30, X25, [X31 + 0x10]
	0x032DB190 ADD X31, X31, 0x50
	0x032DB194 RET
	0x032DB198 ADRP X0, 0xE18000
	0x032DB19C LDR X0, [X0 + 0x5B0]
	0x032DB1A0 BL 0x1C16D08
	0x032DB1A4 BL 0x1C16F10
	0x032DB1A8 MOV X19, X0
	0x032DB1AC ADRP X0, 0xE4B000
	0x032DB1B0 LDR X0, [X0 + 0x510]
	0x032DB1B4 BL 0x1C16D08
	0x032DB1B8 MOV X1, X0
	0x032DB1BC MOV X0, X19
	0x032DB1C0 MOV X2, X31
	0x032DB1C4 BL 0x337DF1C
	0x032DB1C8 ADRP X0, 0xE4B000
	0x032DB1CC LDR X0, [X0 + 0x518]
	0x032DB1D0 BL 0x1C16D08
	0x032DB1D4 MOV X1, X0
	0x032DB1D8 MOV X0, X19
	0x032DB1DC BL 0x1C16DEC
	0x032DB1E0 BL 0x1C16F20
	0x032DB1E4 ADRP X0, 0xE4B000
	0x032DB1E8 LDR X0, [X0 + 0x490]
	0x032DB1EC BL 0x1C16D08
	0x032DB1F0 BL 0x1C16F10
	0x032DB1F4 MOV X20, X0
	0x032DB1F8 CBNZ X19, 0x32DB208
	0x032DB1FC ADRP X0, 0xE4B000
	0x032DB200 LDR X0, [X0 + 0x520]
	0x032DB204 B 0x32DB210
	0x032DB208 ADRP X0, 0xE4B000
	0x032DB20C LDR X0, [X0 + 0x528]
	0x032DB210 BL 0x1C16D08
	0x032DB214 MOV X1, X0
	0x032DB218 MOV X0, X20
	0x032DB21C MOV X2, X31
	0x032DB220 BL 0x32D2788
	0x032DB224 ADRP X0, 0xE4B000
	0x032DB228 LDR X0, [X0 + 0x518]
	0x032DB22C BL 0x1C16D08
	0x032DB230 MOV X1, X0
	0x032DB234 MOV X0, X20
	0x032DB238 BL 0x1C16DEC
	0x032DB23C CMP W1, 0x1
	0x032DB240 MOV X19, X0
	0x032DB244 B.NE 0x32DB328
	0x032DB248 MOV X0, X19
	0x032DB24C BL 0x3EB1AD0
	0x032DB250 MOV X19, X0
	0x032DB254 ADRP X0, 0xE41000
	0x032DB258 LDR X0, [X0 + 0xBB8]
	0x032DB25C BL 0x1C16D08
	0x032DB260 LDR X8, [X19]
	0x032DB264 LDR X1, [X8]
	0x032DB268 BL 0x1C17270
	0x032DB26C TBZ X0, 0x0, 0x32DB280
	0x032DB270 LDR X19, [X19]
	0x032DB274 BL 0x3EB1AE0
	0x032DB278 MOV X0, X19
	0x032DB27C BL 0x1C16F18
	0x032DB280 ADRP X0, 0xE4B000
	0x032DB284 LDR X0, [X0 + 0x530]
	0x032DB288 BL 0x1C16D08
	0x032DB28C LDR X8, [X19]
	0x032DB290 LDR X1, [X8]
	0x032DB294 BL 0x1C17270
	0x032DB298 TBNZ X0, 0x0, 0x32DB270
	0x032DB29C ADRP X0, 0xE18000
	0x032DB2A0 LDR X0, [X0 + 0x858]
	0x032DB2A4 BL 0x1C16D08
	0x032DB2A8 LDR X8, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X1
	006 Move X1, X31
	007 Move X20, X0
	008 Call FieldInfo.get_IsStatic, X0
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {36}
	013 Compare X19, 0
	014 JumpIfEqual {53}
	015 Move X8, [X20]
	016 Move X0, X20
	017 Move X9, [X8+440]
	018 Move X1, [X8+448]
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move X21, X0
	021 Move X0, X19
	022 Move X1, X31
	023 Call "il2cpp_vm_object_is_inst", X0
	024 Compare X21, 0
	025 JumpIfEqual {71}
	026 Move X8, [X21]
	027 Move X1, X0
	028 Move X0, X21
	029 Move X9, [X8+680]
	030 Move X2, [X8+688]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {72}
	036 Move X0, X20
	037 Move X1, X31
	038 Call FieldInfo.get_IsLiteral, X0
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {45}
	043 Move X0, X20
	044 Call RuntimeFieldInfo.CheckGeneric, X0
	045 Move X0, X20
	046 Move X1, X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Call 0x1C952C8
	052 Return X0
	053 Move X0, 0xE4C000
	054 Move X0, [X0+1168]
	055 Call 0x1C17D08
	056 Call 0x1C17F10
	057 Move X19, X0
	058 Move X0, 0xE4C000
	059 Move X0, [X0+1208]
	060 Call 0x1C17D08
	061 Move X1, X0
	062 Move X0, X19
	063 Move X2, X31
	064 Call TargetException..ctor, X0, X1
	065 Move X0, 0xE4C000
	066 Move X0, [X0+1216]
	067 Call 0x1C17D08
	068 Move X1, X0
	069 Move X0, X19
	070 Call 0x1C17DEC
	071 Call 0x1C17F20
	072 Move X8, [X20]
	073 Move X0, X20
	074 Move X9, [X8+424]
	075 Move X1, [X8+432]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move X8, [X20]
	078 Move X21, X0
	079 Move X0, X20
	080 Move X9, [X8+440]
	081 Move X1, [X8+448]
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move X20, X0
	084 Move X0, X19
	085 Move X1, X31
	086 Call "il2cpp_vm_object_is_inst", X0
	087 Move X19, X0
	088 Move X0, 0xE4C000
	089 Move X0, [X0+1224]
	090 Call 0x1C17D08
	091 Move X1, X21
	092 Move X2, X20
	093 Move X3, X19
	094 Move X4, X31
	095 Call String.Format, X0, X1, X2, X3
	096 Move X19, X0
	097 Move X0, 0xE21000
	098 Move X0, [X0+1400]
	099 Call 0x1C17D08
	100 Call 0x1C17F10
	101 Move X20, X0
	102 Move X0, 0xE24000
	103 Move X0, [X0+2216]
	104 Call 0x1C17D08
	105 Move X2, X0
	106 Move X0, X20
	107 Move X1, X19
	108 Move X3, X31
	109 Call ArgumentException..ctor, X0, X1, X2
	110 Move X0, 0xE4C000
	111 Move X0, [X0+1216]
	112 Call 0x1C17D08
	113 Move X1, X0
	114 Move X0, X20
	115 Call 0x1C17DEC

Method: System.String ToString()

Disassembly:
	0x032DB328 MOV X0, X19
	0x032DB32C BL 0x1D2C690
	0x032DB330 BL 0x1990590
	0x032DB334 SUB X31, X31, 0x70
	0x032DB338 STP X29, X30, [X31 + 0x10]
	0x032DB33C STP X28, X27, [X31 + 0x20]
	0x032DB340 STP X26, X25, [X31 + 0x30]
	0x032DB344 STP X24, X23, [X31 + 0x40]
	0x032DB348 STP X22, X21, [X31 + 0x50]
	0x032DB34C STP X20, X19, [X31 + 0x60]
	0x032DB350 ADRP X24, 0x1101000
	0x032DB354 LDRB W8, [X24 + 0x960]
	0x032DB358 MOV X20, X3
	0x032DB35C MOV X21, X2
	0x032DB360 MOV X22, X1
	0x032DB364 MOV X23, X0
	0x032DB368 STR W4, [X31 + 0xC]
	0x032DB36C TBNZ X8, 0x0, 0x32DB39C
	0x032DB370 ADRP X0, 0xE4B000
	0x032DB374 LDR X0, [X0 + 0x538]
	0x032DB378 BL 0x1C16CF4
	0x032DB37C ADRP X0, 0xE41000
	0x032DB380 LDR X0, [X0 + 0x4E8]
	0x032DB384 BL 0x1C16CF4
	0x032DB388 ADRP X0, 0xE18000
	0x032DB38C LDR X0, [X0 + 0x6C0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1102000
	006 Move X20, 0xE26000
	007 Move W8, [X21+2391]
	008 Move X20, [X20+360]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE26000
	015 Move X0, [X0+360]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2391], W8
	019 Move X8, [X19]
	020 Move X0, X19
	021 Move X9, [X8+600]
	022 Move X1, [X8+608]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move X8, [X20]
	025 Move X2, [X19+32]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X0
	029 Move X0, X8
	030 Move X3, X31
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call String.Format, X0, X1, X2
	034 Return X0

Method: System.Void SetValueInternal(System.Reflection.FieldInfo fi, System.Object obj, System.Object value)

Disassembly:
	0x032DB390 BL 0x1C16CF4

ISIL:
	001 Call 0x1C952F0
	002 Return 

Method: System.Void SetValue(System.Object obj, System.Object val, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Globalization.CultureInfo culture)

Disassembly:
	0x032DB394 MOVZ W8, 0x1
	0x032DB398 STRB W8, [X24 + 0x960]
	0x032DB39C CBZ X21, 0x32DB534
	0x032DB3A0 LDR X8, [X21 + 0x18]
	0x032DB3A4 CBZ X22, 0x32DB50C
	0x032DB3A8 LDR W9, [X22 + 0x18]
	0x032DB3AC CMP W8, W9
	0x032DB3B0 B.NE 0x32DB5AC
	0x032DB3B4 CMP W8, 0x1
	0x032DB3B8 B.LT 0x32DB510
	0x032DB3BC ADRP X26, 0xE18000
	0x032DB3C0 ADRP X19, 0xE4B000
	0x032DB3C4 LDR X26, [X26 + 0x6C0]
	0x032DB3C8 LDR X19, [X19 + 0x538]
	0x032DB3CC MOV W9, W31
	0x032DB3D0 CMP W9, W8
	0x032DB3D4 B.CS 0x32DB530
	0x032DB3D8 SXTW X29, W9
	0x032DB3DC ADD X27, X22, X29, 0x3, LSL
	0x032DB3E0 LDR X24, [X27 + 0x20]!
	0x032DB3E4 LDR W8, [X21 + 0x18]
	0x032DB3E8 CMP W29, W8
	0x032DB3EC B.CS 0x32DB530
	0x032DB3F0 LDR X0, [X26]
	0x032DB3F4 ADD X8, X21, X29, 0x3, LSL
	0x032DB3F8 LDR X25, [X8 + 0x20]
	0x032DB3FC LDR W9, [X0 + 0xE0]
	0x032DB400 CBNZ W9, 0x32DB408
	0x032DB404 BL 0x1C16DFC
	0x032DB408 CBZ X25, 0x32DB534
	0x032DB40C LDR X8, [X26]
	0x032DB410 LDR X8, [X8 + 0xB8]
	0x032DB414 LDR X9, [X8 + 0x18]
	0x032DB418 LDR X8, [X25]
	0x032DB41C CMP X24, X9
	0x032DB420 B.EQ 0x32DB484
	0x032DB424 LDP X9, X1, [X8 + 0x1D8]
	0x032DB428 MOV X0, X25
	0x032DB42C BLR X9
	0x032DB430 CBZ X0, 0x32DB534
	0x032DB434 ADRP X9, 0xE41000
	0x032DB438 LDR X8, [X0]
	0x032DB43C LDR X9, [X9 + 0x4E8]
	0x032DB440 LDRB W10, [X8 + 0x130]
	0x032DB444 LDR X1, [X9]
	0x032DB448 LDRB W9, [X1 + 0x130]
	0x032DB44C CMP W10, W9
	0x032DB450 B.CC 0x32DB538
	0x032DB454 LDR X8, [X8 + 0xC8]
	0x032DB458 ADD X8, X8, X9, 0x3, LSL
	0x032DB45C LDUR X8, [X8 - 0x8]
	0x032DB460 CMP X8, X1
	0x032DB464 B.NE 0x32DB538
	0x032DB468 LDR W4, [X31 + 0xC]
	0x032DB46C MOV X1, X24
	0x032DB470 MOV X2, X23
	0x032DB474 MOV X3, X20
	0x032DB478 MOV X5, X31
	0x032DB47C BL 0x33BBDBC
	0x032DB480 B 0x32DB4D0
	0x032DB484 LDP X9, X1, [X8 + 0x1F8]
	0x032DB488 MOV X0, X25
	0x032DB48C BLR X9
	0x032DB490 LDR X8, [X19]
	0x032DB494 MOV X24, X0
	0x032DB498 LDR W9, [X8 + 0xE0]
	0x032DB49C CBNZ W9, 0x32DB4B0
	0x032DB4A0 MOV X0, X8
	0x032DB4A4 MOV X28, X19
	0x032DB4A8 BL 0x1C16DFC
	0x032DB4AC LDR X8, [X19]
	0x032DB4B0 LDR X8, [X8 + 0xB8]
	0x032DB4B4 LDR X8, [X8]
	0x032DB4B8 CMP X24, X8
	0x032DB4BC B.EQ 0x32DB548
	0x032DB4C0 LDR X8, [X25]
	0x032DB4C4 MOV X0, X25
	0x032DB4C8 LDP X9, X1, [X8 + 0x1F8]
	0x032DB4CC BLR X9
	0x032DB4D0 MOV X24, X0
	0x032DB4D4 CBZ X0, 0x32DB4EC
	0x032DB4D8 LDR X8, [X22]
	0x032DB4DC MOV X0, X24
	0x032DB4E0 LDR X1, [X8 + 0x40]
	0x032DB4E4 BL 0x1C16E00
	0x032DB4E8 CBZ X0, 0x32DB53C
	0x032DB4EC LDR W8, [X22 + 0x18]
	0x032DB4F0 CMP W29, W8
	0x032DB4F4 B.CS 0x32DB530
	0x032DB4F8 ADD W9, W29, 0x1
	0x032DB4FC CMP W9, W8
	0x032DB500 STR X24, [X27]
	0x032DB504 B.LT 0x32DB3D0
	0x032DB508 B 0x32DB510
	0x032DB50C CBNZ X8, 0x32DB5AC
	0x032DB510 LDP X20, X19, [X31 + 0x60]
	0x032DB514 LDP X22, X21, [X31 + 0x50]
	0x032DB518 LDP X24, X23, [X31 + 0x40]
	0x032DB51C LDP X26, X25, [X31 + 0x30]
	0x032DB520 LDP X28, X27, [X31 + 0x20]
	0x032DB524 LDP X29, X30, [X31 + 0x10]
	0x032DB528 ADD X31, X31, 0x70
	0x032DB52C RET
	0x032DB530 BL 0x1C16F28
	0x032DB534 BL 0x1C16F20
	0x032DB538 BL 0x1C171E0
	0x032DB53C BL 0x1C16F44
	0x032DB540 MOV X1, X31
	0x032DB544 BL 0x1C16DEC
	0x032DB548 ADRP X0, 0xE4B000
	0x032DB54C LDR X0, [X0 + 0x540]
	0x032DB550 BL 0x1C16D08
	0x032DB554 MOV X1, X31
	0x032DB558 BL 0x33BDD84
	0x032DB55C MOV X19, X0
	0x032DB560 ADRP X0, 0xE20000
	0x032DB564 LDR X0, [X0 + 0x578]
	0x032DB568 BL 0x1C16D08
	0x032DB56C BL 0x1C16F10
	0x032DB570 MOV X20, X0
	0x032DB574 ADRP X0, 0xE46000
	0x032DB578 LDR X0, [X0 + 0xC80]
	0x032DB57C BL 0x1C16D08
	0x032DB580 MOV X2, X0
	0x032DB584 MOV X0, X20
	0x032DB588 MOV X1, X19
	0x032DB58C MOV X3, X31
	0x032DB590 BL 0x330E16C
	0x032DB594 ADRP X0, 0xE4B000
	0x032DB598 LDR X0, [X0 + 0x548]
	0x032DB59C BL 0x1C16D08
	0x032DB5A0 MOV X1, X0
	0x032DB5A4 MOV X0, X20
	0x032DB5A8 BL 0x1C16DEC
	0x032DB5AC ADRP X0, 0xE4B000
	0x032DB5B0 LDR X0, [X0 + 0x550]
	0x032DB5B4 BL 0x1C16D08
	0x032DB5B8 BL 0x1C16F10
	0x032DB5BC MOV X1, X31
	0x032DB5C0 MOV X19, X0
	0x032DB5C4 BL 0x32D2874
	0x032DB5C8 ADRP X0, 0xE4B000
	0x032DB5CC LDR X0, [X0 + 0x548]
	0x032DB5D0 BL 0x1C16D08
	0x032DB5D4 MOV X1, X0
	0x032DB5D8 MOV X0, X19
	0x032DB5DC BL 0x1C16DEC
	0x032DB5E0 LDR X0, [X0 + 0x10]
	0x032DB5E4 RET
	0x032DB5E8 LDR X0, [X0 + 0x10]
	0x032DB5EC B 0x1C2B380
	0x032DB5F0 SUB X31, X31, 0x30
	0x032DB5F4 STR X30, [X31 + 0x20]
	0x032DB5F8 LDR X0, [X0 + 0x10]
	0x032DB5FC MOVI V0.2D, 0x0
	0x032DB600 ADD X1, X31, 0x0
	0x032DB604 STP V0, V0, [X31]
	0x032DB608 BL 0x1C841C8
	0x032DB60C LDR W0, [X31 + 0x18]
	0x032DB610 LDR X30, [X31 + 0x20]
	0x032DB614 ADD X31, X31, 0x30
	0x032DB618 RET
	0x032DB61C LDR X0, [X0 + 0x20]
	0x032DB620 RET
	0x032DB624 SUB X31, X31, 0x30
	0x032DB628 STR X30, [X31 + 0x20]
	0x032DB62C LDR X0, [X0 + 0x10]
	0x032DB630 MOVI V0.2D, 0x0
	0x032DB634 ADD X1, X31, 0x0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x1102000
	010 Move W8, [X25+2392]
	011 Move X21, X5
	012 Move X24, X4
	013 Move W22, W3
	014 Move X23, X2
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xE42000
	022 Move X0, [X0+1256]
	023 Call 0x1C17CF4
	024 Move X0, 0xE19000
	025 Move X0, [X0+1728]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X25+2392], W8
	029 Move X0, X20
	030 Move X1, X31
	031 Call FieldInfo.get_IsStatic, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {59}
	036 Compare X19, 0
	037 JumpIfEqual {134}
	038 Move X8, [X20]
	039 Move X0, X20
	040 Move X9, [X8+440]
	041 Move X1, [X8+448]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X25, X0
	044 Move X0, X19
	045 Move X1, X31
	046 Call "il2cpp_vm_object_is_inst", X0
	047 Compare X25, 0
	048 JumpIfEqual {121}
	049 Move X8, [X25]
	050 Move X1, X0
	051 Move X0, X25
	052 Move X9, [X8+680]
	053 Move X2, [X8+688]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {152}
	059 Move X0, X20
	060 Move X1, X31
	061 Call FieldInfo.get_IsLiteral, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {122}
	066 Compare X24, 0
	067 JumpIfNotEqual {78}
	068 Move X8, 0xE19000
	069 Move X8, [X8+1728]
	070 Move X0, [X8]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X0, X31
	076 Call Type.get_DefaultBinder
	077 Move X24, X0
	078 Move X0, X20
	079 Call RuntimeFieldInfo.CheckGeneric, X0
	080 Compare X23, 0
	081 JumpIfEqual {107}
	082 Move X8, [X20]
	083 Move X0, X20
	084 Move X9, [X8+600]
	085 Move X1, [X8+608]
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Compare X0, 0
	088 JumpIfEqual {121}
	089 Move X9, 0xE42000
	090 Move X9, [X9+1256]
	091 Move X8, [X0]
	092 Move X1, [X9]
	093 Move W10, [X8+304]
	094 Move W9, [X1+304]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X8, [X8+200]
	097 Add X8, X8, X9
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X1, X23
	101 Move X2, X24
	102 Move X3, X21
	103 Move W4, W22
	104 Move X5, X31
	105 Call RuntimeType.CheckValue, X0, X1, X2, X3, X4
	106 Move X2, X0
	107 Move X2, X31
	108 Move X0, X20
	109 Move X1, X19
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X24, [X31+16]
	115 Move X23, [X31+24]
	116 Move X30, [X31+64]
	117 Move X25, [X31+72]
	118 Call 0x1C952F0
	119 Return 
	120 Call 0x1C181E0
	121 Call 0x1C17F20
	122 Move X0, 0xE4C000
	123 Move X0, [X0+1248]
	124 Call 0x1C17D08
	125 Call 0x1C17F10
	126 Move X19, X0
	127 Move X0, 0xE4C000
	128 Move X0, [X0+1256]
	129 Call 0x1C17D08
	130 Move X1, X0
	131 Move X0, X19
	132 Move X2, X31
	133 Call FieldAccessException..ctor, X0, X1
	134 Move X0, 0xE4C000
	135 Move X0, [X0+1168]
	136 Call 0x1C17D08
	137 Call 0x1C17F10
	138 Move X19, X0
	139 Move X0, 0xE4C000
	140 Move X0, [X0+1208]
	141 Call 0x1C17D08
	142 Move X1, X0
	143 Move X0, X19
	144 Move X2, X31
	145 Call TargetException..ctor, X0, X1
	146 Move X0, 0xE4C000
	147 Move X0, [X0+1264]
	148 Call 0x1C17D08
	149 Move X1, X0
	150 Move X0, X19
	151 Call 0x1C17DEC
	152 Move X8, [X20]
	153 Move X0, X20
	154 Move X9, [X8+424]
	155 Move X1, [X8+432]
	156 NotImplemented "Instruction BLR not yet implemented."
	157 Move X8, [X20]
	158 Move X21, X0
	159 Move X0, X20
	160 Move X9, [X8+440]
	161 Move X1, [X8+448]
	162 NotImplemented "Instruction BLR not yet implemented."
	163 Move X20, X0
	164 Move X0, X19
	165 Move X1, X31
	166 Call "il2cpp_vm_object_is_inst", X0
	167 Move X19, X0
	168 Move X0, 0xE4C000
	169 Move X0, [X0+1224]
	170 Call 0x1C17D08
	171 Move X1, X21
	172 Move X2, X20
	173 Move X3, X19
	174 Move X4, X31
	175 Call String.Format, X0, X1, X2, X3
	176 Move X19, X0
	177 Move X0, 0xE21000
	178 Move X0, [X0+1400]
	179 Call 0x1C17D08
	180 Call 0x1C17F10
	181 Move X20, X0
	182 Move X0, 0xE24000
	183 Move X0, [X0+2216]
	184 Call 0x1C17D08
	185 Move X2, X0
	186 Move X0, X20
	187 Move X1, X19
	188 Move X3, X31
	189 Call ArgumentException..ctor, X0, X1, X2
	190 Move X0, 0xE4C000
	191 Move X0, [X0+1264]
	192 Call 0x1C17D08
	193 Move X1, X0
	194 Move X0, X20
	195 Call 0x1C17DEC

Method: System.Object GetRawConstantValue()

Disassembly:
	0x032DB638 STP V0, V0, [X31]

ISIL:
	001 Call 0x1C95184
	002 Return X0

Method: System.Collections.Generic.IList`1<System.Reflection.CustomAttributeData> GetCustomAttributesData()

Disassembly:
	0x032DB63C BL 0x1C841C8

ISIL:
	001 Call CustomAttributeData.GetCustomAttributes, X0
	002 Return X0

Method: System.Void CheckGeneric()

Disassembly:
	0x032DB2AC LDR X1, [X8]
	0x032DB2B0 BL 0x1C17270
	0x032DB2B4 TBNZ X0, 0x0, 0x32DB270
	0x032DB2B8 ADRP X0, 0xE18000
	0x032DB2BC LDR X0, [X0 + 0x7D0]
	0x032DB2C0 BL 0x1C16D08
	0x032DB2C4 LDR X8, [X19]
	0x032DB2C8 LDR X1, [X8]
	0x032DB2CC BL 0x1C17270
	0x032DB2D0 TBZ X0, 0x0, 0x32DB300
	0x032DB2D4 LDR X19, [X19]
	0x032DB2D8 BL 0x3EB1AE0
	0x032DB2DC ADRP X0, 0xE48000
	0x032DB2E0 LDR X0, [X0 + 0xF60]
	0x032DB2E4 BL 0x1C16D08
	0x032DB2E8 BL 0x1C16F10
	0x032DB2EC MOV X1, X19
	0x032DB2F0 MOV X2, X31
	0x032DB2F4 MOV X20, X0
	0x032DB2F8 BL 0x32D27DC
	0x032DB2FC B 0x32DB224
	0x032DB300 MOVZ W0, 0x8
	0x032DB304 BL 0x3EB1AF0
	0x032DB308 LDR X8, [X19]
	0x032DB30C STR X8, [X0]
	0x032DB310 ADRP X1, 0xBD9000
	0x032DB314 ADD X1, X1, 0xE58
	0x032DB318 MOV X2, X31
	0x032DB31C BL 0x3EB1B00
	0x032DB320 MOV X19, X0
	0x032DB324 BL 0x3EB1AE0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X9, [X8+440]
	005 Move X1, [X8+448]
	006 NotImplemented "Instruction BLR not yet implemented."
	007 Compare X0, 0
	008 JumpIfEqual {20}
	009 Move X8, [X0]
	010 Move X9, [X8+648]
	011 Move X1, [X8+656]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {21}
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return 
	020 Call 0x1C17F20
	021 Move X0, 0xE19000
	022 Move X0, [X0+1456]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X19, X0
	026 Move X0, 0xE4C000
	027 Move X0, [X0+1232]
	028 Call 0x1C17D08
	029 Move X1, X0
	030 Move X0, X19
	031 Move X2, X31
	032 Call InvalidOperationException..ctor, X0, X1
	033 Move X0, 0xE4C000
	034 Move X0, [X0+1240]
	035 Call 0x1C17D08
	036 Move X1, X0
	037 Move X0, X19
	038 Call 0x1C17DEC

Method: System.Int32 get_MetadataToken()

Disassembly:
	0x032DB640 LDR X0, [X31]

ISIL:
	001 Call 0x1C728C4
	002 Return X0

Method: System.Int32 get_metadata_token(System.Reflection.RuntimeFieldInfo monoField)

Disassembly:
	0x032DB644 LDR X30, [X31 + 0x20]

ISIL:
	001 Call 0x1C728C4
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x032DB648 ADD X31, X31, 0x30
	0x032DB64C RET

ISIL:
	001 Move X1, X31
	002 Call FieldInfo..ctor, X0
	003 Return 

