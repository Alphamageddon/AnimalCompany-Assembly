Type: System.Reflection.Assembly

Method: System.String get_CodeBase()

Disassembly:
	0x032D66C8 LDR X8, [X8 + 0xC48]
	0x032D66CC MOV W20, W0
	0x032D66D0 LDR X0, [X8]
	0x032D66D4 BL 0x1C16F10
	0x032D66D8 MOV W1, W20
	0x032D66DC MOV X2, X31
	0x032D66E0 MOV X21, X0
	0x032D66E4 BL 0x3347D04
	0x032D66E8 STR X21, [X19 + 0x30]
	0x032D66EC LDP X20, X19, [X31 + 0x30]
	0x032D66F0 LDP X22, X21, [X31 + 0x20]
	0x032D66F4 LDP X24, X23, [X31 + 0x10]
	0x032D66F8 LDR X30, [X31], #0x40
	0x032D66FC RET

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xE27000
	004 Move X0, [X0+1880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotImplementedException..ctor, X0
	010 Move X0, 0xE51000
	011 Move X0, [X0+520]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.String get_FullName()

Disassembly:
	0x032D6700 BL 0x1C171E0
	0x032D6704 BL 0x1C16F20
	0x032D6708 LDR X0, [X0 + 0x10]
	0x032D670C RET
	0x032D6710 LDR X0, [X0 + 0x30]
	0x032D6714 RET
	0x032D6718 LDR W0, [X0 + 0x38]
	0x032D671C RET
	0x032D6720 STR X30, [X31 - 0x40]!
	0x032D6724 STP X24, X23, [X31 + 0x10]
	0x032D6728 STP X22, X21, [X31 + 0x20]
	0x032D672C STP X20, X19, [X31 + 0x30]
	0x032D6730 ADRP X20, 0x1106000
	0x032D6734 LDRB W8, [X20 + 0x92C]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xE27000
	004 Move X0, [X0+1880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotImplementedException..ctor, X0
	010 Move X0, 0xE51000
	011 Move X0, [X0+528]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.IntPtr get_MonoAssembly()

Disassembly:
	0x032D6738 MOV X19, X0
	0x032D673C TBNZ X8, 0x0, 0x32D67D8
	0x032D6740 ADRP X0, 0xE1F000
	0x032D6744 LDR X0, [X0 + 0x170]
	0x032D6748 BL 0x1C16CF4
	0x032D674C ADRP X0, 0xE1F000
	0x032D6750 LDR X0, [X0 + 0xC48]
	0x032D6754 BL 0x1C16CF4
	0x032D6758 ADRP X0, 0xE1D000
	0x032D675C LDR X0, [X0 + 0x8F0]
	0x032D6760 BL 0x1C16CF4
	0x032D6764 ADRP X0, 0xE1F000
	0x032D6768 LDR X0, [X0 + 0x278]
	0x032D676C BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xE27000
	004 Move X0, [X0+1880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotImplementedException..ctor, X0
	010 Move X0, 0xE51000
	011 Move X0, [X0+536]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.String get_Location()

Disassembly:
	0x032D6770 ADRP X0, 0xE50000
	0x032D6774 LDR X0, [X0 + 0x340]
	0x032D6778 BL 0x1C16CF4
	0x032D677C ADRP X0, 0xE50000
	0x032D6780 LDR X0, [X0 + 0x348]
	0x032D6784 BL 0x1C16CF4
	0x032D6788 ADRP X0, 0xE50000
	0x032D678C LDR X0, [X0 + 0x350]
	0x032D6790 BL 0x1C16CF4
	0x032D6794 ADRP X0, 0xE50000
	0x032D6798 LDR X0, [X0 + 0x358]
	0x032D679C BL 0x1C16CF4
	0x032D67A0 ADRP X0, 0xE50000
	0x032D67A4 LDR X0, [X0 + 0x360]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xE27000
	004 Move X0, [X0+1880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotImplementedException..ctor, X0
	010 Move X0, 0xE51000
	011 Move X0, [X0+544]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x032D67A8 BL 0x1C16CF4
	0x032D67AC ADRP X0, 0xE50000
	0x032D67B0 LDR X0, [X0 + 0x368]
	0x032D67B4 BL 0x1C16CF4
	0x032D67B8 ADRP X0, 0xE28000
	0x032D67BC LDR X0, [X0 + 0xCD8]
	0x032D67C0 BL 0x1C16CF4
	0x032D67C4 ADRP X0, 0xE50000
	0x032D67C8 LDR X0, [X0 + 0x370]
	0x032D67CC BL 0x1C16CF4
	0x032D67D0 MOVZ W8, 0x1
	0x032D67D4 STRB W8, [X20 + 0x92C]
	0x032D67D8 LDR X8, [X19 + 0x10]
	0x032D67DC CBZ X8, 0x32D6868

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xE27000
	004 Move X0, [X0+1880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotImplementedException..ctor, X0
	010 Move X0, 0xE51000
	011 Move X0, [X0+552]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Boolean IsDefined(System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x032D67E0 ADRP X8, 0xE1D000
	0x032D67E4 LDR X8, [X8 + 0x8F0]
	0x032D67E8 LDR X0, [X8]
	0x032D67EC BL 0x1C16F10
	0x032D67F0 MOV X1, X31
	0x032D67F4 MOV X20, X0
	0x032D67F8 BL 0x3231AC4
	0x032D67FC LDR X0, [X19 + 0x10]
	0x032D6800 CBZ X0, 0x32D6A8C
	0x032D6804 ADRP X21, 0xE1F000
	0x032D6808 LDR X21, [X21 + 0x170]
	0x032D680C MOV W1, W31
	0x032D6810 MOV X2, X31
	0x032D6814 BL 0x3222A1C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xE27000
	004 Move X0, [X0+1880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotImplementedException..ctor, X0
	010 Move X0, 0xE51000
	011 Move X0, [X0+560]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object[] GetCustomAttributes(System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x032D6818 LDR X8, [X21]
	0x032D681C MOV W21, W0
	0x032D6820 LDR W9, [X8 + 0xE0]
	0x032D6824 CBNZ W9, 0x32D6830
	0x032D6828 MOV X0, X8
	0x032D682C BL 0x1C16DFC
	0x032D6830 MOV W0, W21
	0x032D6834 MOV X1, X31
	0x032D6838 BL 0x3317FCC
	0x032D683C LDR X1, [X19 + 0x10]
	0x032D6840 TBZ X0, 0x0, 0x32D6890
	0x032D6844 ADRP X8, 0xE28000
	0x032D6848 LDR X8, [X8 + 0xCD8]
	0x032D684C MOV X3, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xE27000
	004 Move X0, [X0+1880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotImplementedException..ctor, X0
	010 Move X0, 0xE51000
	011 Move X0, [X0+568]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Type[] GetTypes(System.Boolean exportedOnly)

Disassembly:
	0x032D6850 LDR X0, [X8]
	0x032D6854 MOV X2, X0

ISIL:
	001 And W1, W1, 1
	002 Call 0x1C726D4
	003 Return X0

Method: System.Type[] GetTypes()

Disassembly:
	0x032D6858 BL 0x32274B8
	0x032D685C CBZ X20, 0x32D6A8C
	0x032D6860 MOV X1, X0
	0x032D6864 B 0x32D6894
	0x032D6868 ADRP X8, 0xE1F000

ISIL:
	001 Move X8, [X0]
	002 Move W1, W31
	003 Move X3, [X8+536]
	004 Move X2, [X8+544]
	005 CallNoReturn X3

Method: System.Type GetType(System.String name)

Disassembly:
	0x032D686C LDR X8, [X8 + 0x278]
	0x032D6870 LDP X20, X19, [X31 + 0x30]
	0x032D6874 LDP X22, X21, [X31 + 0x20]
	0x032D6878 LDP X24, X23, [X31 + 0x10]
	0x032D687C LDR X8, [X8]
	0x032D6880 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move X8, [X0]
	002 Move W2, W31
	003 Move W3, W31
	004 Move X5, [X8+632]
	005 Move X4, [X8+640]
	006 CallNoReturn X5

Method: System.Type InternalGetType(System.Reflection.Module module, System.String name, System.Boolean throwOnError, System.Boolean ignoreCase)

Disassembly:
	0x032D6884 LDR X0, [X8]
	0x032D6888 LDR X30, [X31], #0x40
	0x032D688C RET

ISIL:
	001 And W3, W3, 1
	002 And W4, W4, 1
	003 Call 0x1C7251C
	004 Return X0

Method: System.Reflection.AssemblyName GetName(System.Boolean copiedName)

Disassembly:
	0x032D6890 CBZ X20, 0x32D6A8C
	0x032D6894 MOV X0, X20
	0x032D6898 MOV X2, X31
	0x032D689C BL 0x32333E0
	0x032D68A0 LDR X0, [X19 + 0x60]
	0x032D68A4 MOV X1, X31
	0x032D68A8 MOV X2, X31
	0x032D68AC BL 0x339D0E0
	0x032D68B0 TBZ X0, 0x0, 0x32D68F0
	0x032D68B4 ADRP X8, 0xE50000
	0x032D68B8 LDR X8, [X8 + 0x370]
	0x032D68BC MOV X0, X20
	0x032D68C0 MOV X2, X31
	0x032D68C4 LDR X1, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xE27000
	004 Move X0, [X0+1880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotImplementedException..ctor, X0
	010 Move X0, 0xE51000
	011 Move X0, [X0+576]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Reflection.AssemblyName GetName()

Disassembly:
	0x032D68C8 BL 0x32333E0
	0x032D68CC LDR X0, [X19 + 0x60]
	0x032D68D0 CBZ X0, 0x32D6A8C
	0x032D68D4 LDR X8, [X0]
	0x032D68D8 LDP X9, X1, [X8 + 0x168]

ISIL:
	001 Move X8, [X0]
	002 Move W1, W31
	003 Move X3, [X8+584]
	004 Move X2, [X8+592]
	005 CallNoReturn X3

Method: System.String ToString()

Disassembly:
	0x032D68DC BLR X9
	0x032D68E0 MOV X1, X0

ISIL:
	001 Move X1, X31
	002 Call Object.ToString, X0
	003 Return X0

Method: System.Reflection.Assembly GetAssembly(System.Type type)

Disassembly:
	0x032D68E4 MOV X0, X20
	0x032D68E8 MOV X2, X31
	0x032D68EC BL 0x32333E0
	0x032D68F0 LDR X8, [X19 + 0x30]
	0x032D68F4 CBZ X8, 0x32D6998
	0x032D68F8 ADRP X8, 0xE50000
	0x032D68FC LDR X8, [X8 + 0x340]
	0x032D6900 MOV X0, X20
	0x032D6904 MOV X2, X31
	0x032D6908 LDR X1, [X8]
	0x032D690C BL 0x32333E0
	0x032D6910 LDR X0, [X19 + 0x30]
	0x032D6914 CBZ X0, 0x32D6A8C
	0x032D6918 LDR X8, [X0]
	0x032D691C LDP X9, X1, [X8 + 0x198]
	0x032D6920 BLR X9
	0x032D6924 ADRP X8, 0xE1F000
	0x032D6928 LDR X8, [X8 + 0xC48]
	0x032D692C MOV W21, W0
	0x032D6930 LDR X8, [X8]
	0x032D6934 LDR W9, [X8 + 0xE0]
	0x032D6938 CBNZ W9, 0x32D6944
	0x032D693C MOV X0, X8
	0x032D6940 BL 0x1C16DFC
	0x032D6944 MOV X0, X31
	0x032D6948 BL 0x3338524
	0x032D694C CBZ X0, 0x32D6A8C
	0x032D6950 LDR X8, [X0]
	0x032D6954 LDP X9, X1, [X8 + 0x198]
	0x032D6958 BLR X9
	0x032D695C CMP W21, W0
	0x032D6960 B.NE 0x32D6974
	0x032D6964 ADRP X8, 0xE50000
	0x032D6968 LDR X8, [X8 + 0x360]
	0x032D696C LDR X1, [X8]
	0x032D6970 B 0x32D698C
	0x032D6974 LDR X0, [X19 + 0x30]
	0x032D6978 CBZ X0, 0x32D6A8C
	0x032D697C LDR X8, [X0]
	0x032D6980 LDP X9, X1, [X8 + 0x1A8]
	0x032D6984 BLR X9
	0x032D6988 MOV X1, X0
	0x032D698C MOV X0, X20
	0x032D6990 MOV X2, X31
	0x032D6994 BL 0x32333E0
	0x032D6998 MOV X0, X19
	0x032D699C BL 0x32D6A90
	0x032D69A0 CBZ X0, 0x32D6A3C
	0x032D69A4 LDR X8, [X0 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1107000
	006 Move X21, 0xE1E000
	007 Move W8, [X20+2344]
	008 Move X21, [X21+1728]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE1E000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2344], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X1, X31
	026 Move X2, X31
	027 Call Type.op_Inequality, X0, X1
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {43}
	032 Compare X19, 0
	033 JumpIfEqual {61}
	034 Move X8, [X19]
	035 Move X0, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X2, [X8+760]
	039 Move X1, [X8+768]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 CallNoReturn X2
	043 Move X0, 0xE23000
	044 Move X0, [X0+1320]
	045 Call 0x1C17D08
	046 Call 0x1C17F10
	047 Move X19, X0
	048 Move X0, 0xE26000
	049 Move X0, [X0+1512]
	050 Call 0x1C17D08
	051 Move X1, X0
	052 Move X0, X19
	053 Move X2, X31
	054 Call ArgumentNullException..ctor, X0, X1
	055 Move X0, 0xE51000
	056 Move X0, [X0+584]
	057 Call 0x1C17D08
	058 Move X1, X0
	059 Move X0, X19
	060 Call 0x1C17DEC
	061 Call 0x1C17F20

Method: System.Reflection.Assembly Load(System.String assemblyString)

Disassembly:
	0x032D69A8 MOV X21, X0
	0x032D69AC CBZ X8, 0x32D6A24
	0x032D69B0 ADRP X8, 0xE50000
	0x032D69B4 LDR X8, [X8 + 0x358]
	0x032D69B8 MOV X0, X20
	0x032D69BC MOV X2, X31
	0x032D69C0 LDR X1, [X8]
	0x032D69C4 BL 0x32333E0
	0x032D69C8 LDR X8, [X21 + 0x18]
	0x032D69CC CMP W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, X31
	005 Call AppDomain.get_CurrentDomain
	006 Compare X0, 0
	007 JumpIfEqual {14}
	008 Move X1, X19
	009 Move X2, X31
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Call AppDomain.Load, X0, X1
	013 Return X0
	014 Call 0x1C17F20

Method: System.Reflection.Assembly ReflectionOnlyLoad(System.String assemblyString)

Disassembly:
	0x032D69D0 B.LT 0x32D6A3C
	0x032D69D4 ADRP X24, 0xE50000
	0x032D69D8 LDR X24, [X24 + 0x350]
	0x032D69DC MOV X22, X31
	0x032D69E0 AND X8, X8, 0x0
	0x032D69E4 ADD X23, X21, 0x20
	0x032D69E8 CMP X22, W8, UXTW
	0x032D69EC B.CS 0x32D6A88
	0x032D69F0 LDR X1, [X24]
	0x032D69F4 ADD X0, X23, X22
	0x032D69F8 MOV X2, X31
	0x032D69FC BL 0x3319C4C
	0x032D6A00 MOV X1, X0
	0x032D6A04 MOV X0, X20
	0x032D6A08 MOV X2, X31
	0x032D6A0C BL 0x32333E0
	0x032D6A10 LDR W8, [X21 + 0x18]
	0x032D6A14 ADD X22, X22, 0x1

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move W8, 1
	006 Move X0, X31
	007 Move [X31+12], W8
	008 Call AppDomain.get_CurrentDomain
	009 Compare X0, 0
	010 JumpIfEqual {21}
	011 Add X4, X31, 12
	012 Move W3, 1
	013 Move X1, X19
	014 Move X2, X31
	015 Move X5, X31
	016 Call AppDomain.Load, X0, X1, X2, X3, X4
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Add X31, X31, 32
	020 Return X0
	021 Call 0x1C17F20

Method: System.Reflection.Assembly load_with_partial_name(System.String name, System.Security.Policy.Evidence e)

Disassembly:
	0x032D6A18 CMP X22, W8, SXTW

ISIL:
	001 Call 0x1C7249C
	002 Return X0

Method: System.Reflection.Assembly LoadWithPartialName(System.String partialName, System.Security.Policy.Evidence securityEvidence)

Disassembly:
	0x032D6A1C B.LT 0x32D69E8
	0x032D6A20 B 0x32D6A3C

ISIL:
	001 Move W2, 1

Method: System.Reflection.Assembly LoadWithPartialName(System.String partialName, System.Security.Policy.Evidence securityEvidence, System.Boolean oldBehavior)

Disassembly:
	0x032D6A24 ADRP X8, 0xE50000
	0x032D6A28 LDR X8, [X8 + 0x348]
	0x032D6A2C MOV X0, X20
	0x032D6A30 MOV X2, X31
	0x032D6A34 LDR X1, [X8]
	0x032D6A38 BL 0x32333E0
	0x032D6A3C LDRB W8, [X19 + 0x39]
	0x032D6A40 TBNZ X8, 0x0, 0x32D6A4C
	0x032D6A44 CBNZ X20, 0x32D6A68
	0x032D6A48 B 0x32D6A8C
	0x032D6A4C CBZ X20, 0x32D6A8C
	0x032D6A50 ADRP X8, 0xE50000
	0x032D6A54 LDR X8, [X8 + 0x368]
	0x032D6A58 MOV X0, X20
	0x032D6A5C MOV X2, X31
	0x032D6A60 LDR X1, [X8]
	0x032D6A64 BL 0x32333E0
	0x032D6A68 LDR X8, [X20]
	0x032D6A6C MOV X0, X20
	0x032D6A70 LDP X20, X19, [X31 + 0x30]
	0x032D6A74 LDP X22, X21, [X31 + 0x20]
	0x032D6A78 LDP X2, X1, [X8 + 0x168]
	0x032D6A7C LDP X24, X23, [X31 + 0x10]
	0x032D6A80 LDR X30, [X31], #0x40
	0x032D6A84 BR X2
	0x032D6A88 BL 0x1C16F28

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move TEMP, X2
	004 And TEMP, TEMP, 1
	005 Compare TEMP, 1
	006 JumpIfNotEqual {13}
	007 Compare X0, 0
	008 JumpIfEqual {20}
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call 0x1C7249C
	012 Return X0
	013 Move X0, 0xE27000
	014 Move X0, [X0+1880]
	015 Call 0x1C17D08
	016 Call 0x1C17F10
	017 Move X1, X31
	018 Move X19, X0
	019 Call NotImplementedException..ctor, X0
	020 Move X0, 0xE29000
	021 Move X0, [X0+2584]
	022 Call 0x1C17D08
	023 Call 0x1C17F10
	024 Move X1, X31
	025 Move X19, X0
	026 Call NullReferenceException..ctor, X0
	027 Move X0, 0xE51000
	028 Move X0, [X0+592]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X19
	032 Call 0x1C17DEC

Method: System.Reflection.Module[] GetModulesInternal()

Disassembly:
	0x032D6A8C BL 0x1C16F20
	0x032D6A90 STR X30, [X31 - 0x20]!
	0x032D6A94 STP X20, X19, [X31 + 0x10]
	0x032D6A98 ADRP X20, 0x1106000
	0x032D6A9C LDRB W8, [X20 + 0x92E]
	0x032D6AA0 MOV X19, X0
	0x032D6AA4 TBNZ X8, 0x0, 0x32D6ABC
	0x032D6AA8 ADRP X0, 0xE4C000
	0x032D6AAC LDR X0, [X0 + 0xA50]
	0x032D6AB0 BL 0x1C16CF4
	0x032D6AB4 MOVZ W8, 0x1
	0x032D6AB8 STRB W8, [X20 + 0x92E]
	0x032D6ABC LDR X0, [X19 + 0x50]
	0x032D6AC0 CBZ X0, 0x32D6AD0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xE27000
	004 Move X0, [X0+1880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotImplementedException..ctor, X0
	010 Move X0, 0xE51000
	011 Move X0, [X0+600]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Reflection.Assembly GetExecutingAssembly()

Disassembly:
	0x032D6AC4 LDP X20, X19, [X31 + 0x10]
	0x032D6AC8 LDR X30, [X31], #0x20
	0x032D6ACC RET
	0x032D6AD0 LDR X8, [X19 + 0x48]
	0x032D6AD4 CBZ X8, 0x32D6AFC
	0x032D6AD8 LDR X8, [X8 + 0x18]
	0x032D6ADC CBZ X8, 0x32D6B04
	0x032D6AE0 MOV X0, X19
	0x032D6AE4 BL 0x32D6CD4
	0x032D6AE8 TBZ X0, 0x0, 0x32D6B2C
	0x032D6AEC MOV X0, X19
	0x032D6AF0 LDP X20, X19, [X31 + 0x10]
	0x032D6AF4 LDR X30, [X31], #0x20
	0x032D6AF8 B 0x32D6D58
	0x032D6AFC MOV X0, X31
	0x032D6B00 B 0x32D6AC4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1107000
	005 Move X20, 0xE51000
	006 Move W8, [X19+2345]
	007 Move X20, [X20+608]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE51000
	013 Move X0, [X0+608]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2345], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Call 0x1C17CE0
	022 Return X0

Method: System.Reflection.Assembly GetCallingAssembly()

Disassembly:
	0x032D6B04 ADRP X19, 0xE4C000

ISIL:
	001 Call 0x1C72488
	002 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x032D6B08 LDR X19, [X19 + 0xA50]
	0x032D6B0C LDR X0, [X19]

ISIL:
	001 Move X1, X31
	002 Call Object.GetHashCode, X0
	003 Return X0

Method: System.Boolean Equals(System.Object o)

Disassembly:
	0x032D6B10 LDR W8, [X0 + 0xE0]
	0x032D6B14 CBNZ W8, 0x32D6B20

ISIL:
	001 Move X2, X31
	002 Call Object.Equals, X0, X1
	003 Return X0

Method: System.Exception CreateNIE()

Disassembly:
	0x032D6B18 BL 0x1C16DFC
	0x032D6B1C LDR X0, [X19]
	0x032D6B20 LDR X8, [X0 + 0xB8]
	0x032D6B24 LDR X0, [X8]
	0x032D6B28 B 0x32D6AC4
	0x032D6B2C ADRP X0, 0xE4B000
	0x032D6B30 LDR X0, [X0 + 0x690]
	0x032D6B34 BL 0x1C16D08
	0x032D6B38 BL 0x1C16F10
	0x032D6B3C MOV X19, X0
	0x032D6B40 ADRP X0, 0xE50000
	0x032D6B44 LDR X0, [X0 + 0x378]
	0x032D6B48 BL 0x1C16D08
	0x032D6B4C MOV X1, X0
	0x032D6B50 MOV X0, X19
	0x032D6B54 MOV X2, X31
	0x032D6B58 BL 0x324A9B4
	0x032D6B5C ADRP X0, 0xE50000
	0x032D6B60 LDR X0, [X0 + 0x380]
	0x032D6B64 BL 0x1C16D08
	0x032D6B68 MOV X1, X0
	0x032D6B6C MOV X0, X19
	0x032D6B70 BL 0x1C16DEC
	0x032D6B74 LDR X0, [X0 + 0x60]
	0x032D6B78 RET
	0x032D6B7C STR X30, [X31 - 0x20]!
	0x032D6B80 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1107000
	006 Move X21, 0xE27000
	007 Move X19, 0xE51000
	008 Move W8, [X20+2346]
	009 Move X21, [X21+1880]
	010 Move X19, [X19+616]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xE27000
	016 Move X0, [X0+1880]
	017 Call 0x1C17CF4
	018 Move X0, 0xE51000
	019 Move X0, [X0+616]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2346], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, [X19]
	026 Move X2, X31
	027 Move X19, X0
	028 Call NotImplementedException..ctor, X0, X1
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return X0

Method: System.Boolean get_IsFullyTrusted()

Disassembly:
	0x032D6B84 MOV X20, X1
	0x032D6B88 MOV X19, X0

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Type GetType(System.String name, System.Boolean throwOnError, System.Boolean ignoreCase)

Disassembly:
	0x032D6B8C STR X1, [X0 + 0x60]
	0x032D6B90 MOV X0, X1
	0x032D6B94 MOV X1, X31
	0x032D6B98 MOV X2, X31
	0x032D6B9C BL 0x339C580
	0x032D6BA0 TBZ X0, 0x0, 0x32D6BAC
	0x032D6BA4 STP X31, X31, [X19 + 0x20]
	0x032D6BA8 B 0x32D6BB8
	0x032D6BAC CBZ X20, 0x32D6BC4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Call Assembly.CreateNIE
	004 Move X19, X0
	005 Move X0, 0xE51000
	006 Move X0, [X0+624]
	007 Call 0x1C17D08
	008 Move X1, X0
	009 Move X0, X19
	010 Call 0x1C17DEC

Method: System.Reflection.Module GetModule(System.String name)

Disassembly:
	0x032D6BB0 LDR V0, [X20 + 0x1]
	0x032D6BB4 STR V0, [X19 + 0x2]
	0x032D6BB8 LDP X20, X19, [X31 + 0x10]
	0x032D6BBC LDR X30, [X31], #0x20
	0x032D6BC0 RET
	0x032D6BC4 BL 0x1C16F20
	0x032D6BC8 STP X30, X19, [X31 - 0x10]!
	0x032D6BCC MOV X19, X0
	0x032D6BD0 BL 0x32D6720

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Call Assembly.CreateNIE
	004 Move X19, X0
	005 Move X0, 0xE51000
	006 Move X0, [X0+632]
	007 Call 0x1C17D08
	008 Move X1, X0
	009 Move X0, X19
	010 Call 0x1C17DEC

Method: System.Reflection.Module[] GetModules(System.Boolean getResourceModules)

Disassembly:
	0x032D6BD4 CBZ X0, 0x32D6BE0
	0x032D6BD8 LDP X30, X19, [X31], #0x10
	0x032D6BDC RET
	0x032D6BE0 MOV X0, X19
	0x032D6BE4 MOV X1, X31
	0x032D6BE8 LDP X30, X19, [X31], #0x10
	0x032D6BEC B 0x33CB4E8
	0x032D6BF0 STR X30, [X31 - 0x20]!
	0x032D6BF4 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Call Assembly.CreateNIE
	004 Move X19, X0
	005 Move X0, 0xE51000
	006 Move X0, [X0+640]
	007 Call 0x1C17D08
	008 Move X1, X0
	009 Move X0, X19
	010 Call 0x1C17DEC

Method: System.Boolean op_Equality(System.Reflection.Assembly left, System.Reflection.Assembly right)

Disassembly:
	0x032D6BF8 ADRP X20, 0x1106000
	0x032D6BFC LDRB W8, [X20 + 0x92D]
	0x032D6C00 MOV X19, X0
	0x032D6C04 TBNZ X8, 0x0, 0x32D6C1C
	0x032D6C08 ADRP X0, 0xE4C000
	0x032D6C0C LDR X0, [X0 + 0xA50]
	0x032D6C10 BL 0x1C16CF4
	0x032D6C14 MOVZ W8, 0x1
	0x032D6C18 STRB W8, [X20 + 0x92D]
	0x032D6C1C LDR X0, [X19 + 0x50]
	0x032D6C20 CBZ X0, 0x32D6C30
	0x032D6C24 LDP X20, X19, [X31 + 0x10]
	0x032D6C28 LDR X30, [X31], #0x20
	0x032D6C2C RET
	0x032D6C30 LDR X8, [X19 + 0x48]
	0x032D6C34 CBZ X8, 0x32D6C5C
	0x032D6C38 LDR X8, [X8 + 0x18]
	0x032D6C3C CBZ X8, 0x32D6C64
	0x032D6C40 MOV X0, X19
	0x032D6C44 BL 0x32D6CD4

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Xor W8, W8, W9
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {16}
	012 Move W0, W31
	013 Move W0, 1
	014 Move X30, [X31+16]
	015 Return X0
	016 Compare X0, 0
	017 JumpIfEqual {23}
	018 Move X8, [X0]
	019 Move X3, [X8+312]
	020 Move X2, [X8+320]
	021 Move X30, [X31+16]
	022 CallNoReturn X3
	023 Call 0x1C17F20

Method: System.Boolean op_Inequality(System.Reflection.Assembly left, System.Reflection.Assembly right)

Disassembly:
	0x032D6C48 TBZ X0, 0x0, 0x32D6C8C
	0x032D6C4C MOV X0, X19
	0x032D6C50 BL 0x32D6D58
	0x032D6C54 STR X0, [X19 + 0x50]
	0x032D6C58 B 0x32D6C24
	0x032D6C5C MOV X0, X31
	0x032D6C60 B 0x32D6C24
	0x032D6C64 ADRP X19, 0xE4C000
	0x032D6C68 LDR X19, [X19 + 0xA50]
	0x032D6C6C LDR X0, [X19]
	0x032D6C70 LDR W8, [X0 + 0xE0]
	0x032D6C74 CBNZ W8, 0x32D6C80
	0x032D6C78 BL 0x1C16DFC
	0x032D6C7C LDR X0, [X19]
	0x032D6C80 LDR X8, [X0 + 0xB8]
	0x032D6C84 LDR X0, [X8]
	0x032D6C88 B 0x32D6C24
	0x032D6C8C ADRP X0, 0xE4B000
	0x032D6C90 LDR X0, [X0 + 0x690]
	0x032D6C94 BL 0x1C16D08
	0x032D6C98 BL 0x1C16F10
	0x032D6C9C MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Xor W8, W8, W9
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {14}
	012 Move W8, 1
	013 Move W8, W31
	014 Compare X0, 0
	015 JumpIfEqual {24}
	016 Move X8, [X0]
	017 Move X9, [X8+312]
	018 Move X2, [X8+320]
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Xor W8, W0, 1
	021 And W0, W8, 1
	022 Move X30, [X31+16]
	023 Return X0
	024 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x032D6CA0 ADRP X0, 0xE50000
	0x032D6CA4 LDR X0, [X0 + 0x378]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

