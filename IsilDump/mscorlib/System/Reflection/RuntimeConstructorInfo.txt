Type: System.Reflection.RuntimeConstructorInfo

Method: System.Reflection.Module get_Module()

Disassembly:
	0x032DD6B4 BL 0x1C16CF4

ISIL:
No ISIL was generated
Method: System.Reflection.RuntimeModule GetRuntimeModule()

Disassembly:
	0x032DD6B8 ADRP X0, 0xE49000
	0x032DD6BC LDR X0, [X0 + 0x688]
	0x032DD6C0 BL 0x1C16CF4
	0x032DD6C4 ADRP X0, 0xE48000
	0x032DD6C8 LDR X0, [X0 + 0x140]
	0x032DD6CC BL 0x1C16CF4
	0x032DD6D0 ADRP X0, 0xE3E000
	0x032DD6D4 LDR X0, [X0 + 0x5F0]
	0x032DD6D8 BL 0x1C16CF4
	0x032DD6DC ADRP X0, 0xE49000
	0x032DD6E0 LDR X0, [X0 + 0x690]
	0x032DD6E4 BL 0x1C16CF4
	0x032DD6E8 ADRP X0, 0xE49000
	0x032DD6EC LDR X0, [X0 + 0x698]
	0x032DD6F0 BL 0x1C16CF4
	0x032DD6F4 ADRP X0, 0xE16000
	0x032DD6F8 LDR X0, [X0 + 0x6C0]
	0x032DD6FC BL 0x1C16CF4
	0x032DD700 MOVZ W8, 0x1
	0x032DD704 STRB W8, [X20 + 0x978]
	0x032DD708 LDR X0, [X23]
	0x032DD70C LDR X20, [X19 + 0x18]
	0x032DD710 LDR X21, [X21]
	0x032DD714 LDR W8, [X0 + 0xE0]
	0x032DD718 CBNZ W8, 0x32DD720
	0x032DD71C BL 0x1C16DFC
	0x032DD720 MOV X0, X21
	0x032DD724 MOV X1, X31
	0x032DD728 BL 0x338C698
	0x032DD72C MOV X1, X0
	0x032DD730 MOV X0, X20
	0x032DD734 MOV X2, X31
	0x032DD738 BL 0x3395194
	0x032DD73C TBNZ X0, 0x0, 0x32DD780

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1100000
	005 Move W8, [X20+2408]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE40000
	012 Move X0, [X0+1256]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2408], W8
	016 Move X8, [X19]
	017 Move X0, X19
	018 Move X9, [X8+440]
	019 Move X1, [X8+448]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Compare X0, 0
	022 JumpIfEqual {34}
	023 Move X9, 0xE40000
	024 Move X9, [X9+1256]
	025 Move X8, [X0]
	026 Move X1, [X9]
	027 Move W10, [X8+304]
	028 Move W9, [X1+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X8+200]
	031 Add X8, X8, X9
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+32]
	038 Call RuntimeTypeHandle.GetModule, X0
	039 Return X0
	040 Call 0x1C181E0

Method: System.Reflection.BindingFlags get_BindingFlags()

Disassembly:
	0x032DD740 ADRP X8, 0xE49000
	0x032DD744 LDR X0, [X23]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.RuntimeType get_ReflectedTypeInternal()

Disassembly:
	0x032DD748 LDR X20, [X19 + 0x18]
	0x032DD74C LDR X8, [X8 + 0x690]
	0x032DD750 LDR W9, [X0 + 0xE0]
	0x032DD754 LDR X21, [X8]
	0x032DD758 CBNZ W9, 0x32DD760
	0x032DD75C BL 0x1C16DFC
	0x032DD760 MOV X0, X21
	0x032DD764 MOV X1, X31
	0x032DD768 BL 0x338C698
	0x032DD76C MOV X1, X0
	0x032DD770 MOV X0, X20
	0x032DD774 MOV X2, X31
	0x032DD778 BL 0x3395194
	0x032DD77C TBZ X0, 0x0, 0x32DD818
	0x032DD780 ADRP X8, 0xE49000
	0x032DD784 LDR X0, [X23]
	0x032DD788 LDR X8, [X8 + 0x688]
	0x032DD78C LDR W9, [X0 + 0xE0]
	0x032DD790 LDR X20, [X8]
	0x032DD794 CBNZ W9, 0x32DD79C
	0x032DD798 BL 0x1C16DFC
	0x032DD79C MOV X0, X20
	0x032DD7A0 MOV X1, X31
	0x032DD7A4 BL 0x338C698
	0x032DD7A8 LDR X8, [X19]
	0x032DD7AC MOV X1, X0
	0x032DD7B0 MOV X0, X19
	0x032DD7B4 MOV W2, W31
	0x032DD7B8 LDR X9, [X8 + 0x218]
	0x032DD7BC LDR X3, [X8 + 0x220]
	0x032DD7C0 BLR X9
	0x032DD7C4 CBZ X0, 0x32DD948
	0x032DD7C8 ADRP X8, 0xE49000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1100000
	005 Move W8, [X20+2409]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE40000
	012 Move X0, [X0+1256]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2409], W8
	016 Move X8, [X19]
	017 Move X0, X19
	018 Move X9, [X8+456]
	019 Move X1, [X8+464]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Compare X0, 0
	022 JumpIfEqual {34}
	023 Move X9, 0xE40000
	024 Move X9, [X9+1256]
	025 Move X8, [X0]
	026 Move X1, [X9]
	027 Move W10, [X8+304]
	028 Move W9, [X1+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X8+200]
	031 Add X8, X8, X9
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return X0
	038 Call 0x1C181E0

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x032DD7CC LDR X8, [X8 + 0x680]
	0x032DD7D0 MOV X20, X0
	0x032DD7D4 LDR X21, [X8]
	0x032DD7D8 MOV X1, X21
	0x032DD7DC BL 0x1C16E00
	0x032DD7E0 CBZ X0, 0x32DD94C
	0x032DD7E4 LDR X8, [X0 + 0x18]
	0x032DD7E8 CBZ X8, 0x32DD920
	0x032DD7EC CBZ W8, 0x32DD958
	0x032DD7F0 LDR X8, [X0 + 0x20]
	0x032DD7F4 CBZ X8, 0x32DD948
	0x032DD7F8 ADRP X10, 0xE3E000
	0x032DD7FC LDP X9, X8, [X8 + 0x10]
	0x032DD800 LDR X10, [X10 + 0x5F0]
	0x032DD804 ADD X1, X31, 0x8
	0x032DD808 STP X9, X8, [X31 + 0x8]
	0x032DD80C LDR X0, [X10]
	0x032DD810 BL 0x1C16E04
	0x032DD814 B 0x32DD924
	0x032DD818 ADRP X8, 0xE47000
	0x032DD81C LDR X0, [X23]
	0x032DD820 LDR X20, [X19 + 0x18]
	0x032DD824 LDR X8, [X8 + 0xF38]
	0x032DD828 LDR W9, [X0 + 0xE0]
	0x032DD82C LDR X21, [X8]
	0x032DD830 CBNZ W9, 0x32DD838
	0x032DD834 BL 0x1C16DFC
	0x032DD838 MOV X0, X21
	0x032DD83C MOV X1, X31
	0x032DD840 BL 0x338C698
	0x032DD844 MOV X1, X0
	0x032DD848 MOV X0, X20
	0x032DD84C MOV X2, X31
	0x032DD850 BL 0x3395194
	0x032DD854 TBNZ X0, 0x0, 0x32DD898
	0x032DD858 ADRP X8, 0xE49000
	0x032DD85C LDR X0, [X23]
	0x032DD860 LDR X20, [X19 + 0x18]
	0x032DD864 LDR X8, [X8 + 0x698]
	0x032DD868 LDR W9, [X0 + 0xE0]
	0x032DD86C LDR X21, [X8]
	0x032DD870 CBNZ W9, 0x32DD878
	0x032DD874 BL 0x1C16DFC
	0x032DD878 MOV X0, X21
	0x032DD87C MOV X1, X31
	0x032DD880 BL 0x338C698
	0x032DD884 MOV X1, X0
	0x032DD888 MOV X0, X20
	0x032DD88C MOV X2, X31
	0x032DD890 BL 0x3395194
	0x032DD894 TBZ X0, 0x0, 0x32DD920
	0x032DD898 ADRP X8, 0xE49000
	0x032DD89C LDR X0, [X23]
	0x032DD8A0 LDR X8, [X8 + 0x678]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X1, 0
	008 JumpIfEqual {47}
	009 Move X8, [X0]
	010 Move X19, X1
	011 Move X20, X0
	012 Move X9, [X8+424]
	013 Move X1, [X8+432]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move X21, X0
	016 Move X0, X20
	017 Call RuntimeConstructorInfo.get_ReflectedTypeInternal, X0
	018 Move X8, [X20]
	019 Move X22, X0
	020 Move X0, X20
	021 Move X9, [X8+360]
	022 Move X1, [X8+368]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move X8, [X20]
	025 Move X23, X0
	026 Move W1, 1
	027 Move X0, X20
	028 Move X9, [X8+888]
	029 Move X2, [X8+896]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X4, X0
	032 Move X0, X19
	033 Move X1, X21
	034 Move X2, X22
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move W5, 1
	040 Move X3, X23
	041 Move X6, X31
	042 Move X7, X31
	043 Move X30, [X31+48]
	044 Move X23, [X31+56]
	045 Call MemberInfoSerializationHolder.GetSerializationInfo, X0, X1, X2, X3, X4, X5, X6
	046 Return 
	047 Move X0, 0xE1C000
	048 Move X0, [X0+1320]
	049 Call 0x1C17D08
	050 Call 0x1C17F10
	051 Move X19, X0
	052 Move X0, 0xE41000
	053 Move X0, [X0+728]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X19
	057 Move X2, X31
	058 Call ArgumentNullException..ctor, X0, X1
	059 Move X0, 0xE4A000
	060 Move X0, [X0+1536]
	061 Call 0x1C17D08
	062 Move X1, X0
	063 Move X0, X19
	064 Call 0x1C17DEC

Method: System.String SerializationToString()

Disassembly:
	0x032DD8A4 LDR W9, [X0 + 0xE0]
	0x032DD8A8 LDR X20, [X8]
	0x032DD8AC CBNZ W9, 0x32DD8B4
	0x032DD8B0 BL 0x1C16DFC
	0x032DD8B4 MOV X0, X20

ISIL:
	001 Move X8, [X0]
	002 Move W1, 1
	003 Move X3, [X8+888]
	004 Move X2, [X8+896]
	005 CallNoReturn X3

Method: System.Void SerializationInvoke(System.Object target, System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x032DD8B8 MOV X1, X31
	0x032DD8BC BL 0x338C698
	0x032DD8C0 LDR X8, [X19]
	0x032DD8C4 MOV X1, X0
	0x032DD8C8 MOV X0, X19
	0x032DD8CC MOV W2, W31
	0x032DD8D0 LDR X9, [X8 + 0x218]
	0x032DD8D4 LDR X3, [X8 + 0x220]
	0x032DD8D8 BLR X9
	0x032DD8DC CBZ X0, 0x32DD948
	0x032DD8E0 ADRP X8, 0xE49000
	0x032DD8E4 LDR X8, [X8 + 0x670]
	0x032DD8E8 MOV X20, X0
	0x032DD8EC LDR X21, [X8]
	0x032DD8F0 MOV X1, X21
	0x032DD8F4 BL 0x1C16E00
	0x032DD8F8 CBZ X0, 0x32DD94C
	0x032DD8FC LDR X8, [X0 + 0x18]
	0x032DD900 CBZ X8, 0x32DD920
	0x032DD904 CBZ W8, 0x32DD958
	0x032DD908 LDR X0, [X0 + 0x20]
	0x032DD90C CBZ X0, 0x32DD948
	0x032DD910 LDR X8, [X0]
	0x032DD914 LDP X9, X1, [X8 + 0x178]
	0x032DD918 BLR X9
	0x032DD91C B 0x32DD924
	0x032DD920 LDR X0, [X19 + 0x20]
	0x032DD924 LDR X8, [X22 + 0x28]
	0x032DD928 LDR X9, [X31 + 0x18]
	0x032DD92C CMP X8, X9
	0x032DD930 B.NE 0x32DD95C
	0x032DD934 LDP X20, X19, [X31 + 0x40]
	0x032DD938 LDP X22, X21, [X31 + 0x30]
	0x032DD93C LDP X30, X23, [X31 + 0x20]
	0x032DD940 ADD X31, X31, 0x50
	0x032DD944 RET
	0x032DD948 BL 0x1C16F20
	0x032DD94C MOV X0, X20
	0x032DD950 MOV X1, X21
	0x032DD954 BL 0x1C171E0
	0x032DD958 BL 0x1C16F28
	0x032DD95C BL 0x3EB1B20
	0x032DD960 STR X30, [X31 - 0x30]!
	0x032DD964 STP X22, X21, [X31 + 0x10]
	0x032DD968 STP X20, X19, [X31 + 0x20]
	0x032DD96C ADRP X21, 0x10FF000
	0x032DD970 ADRP X22, 0xE49000
	0x032DD974 LDRB W8, [X21 + 0x979]
	0x032DD978 LDR X22, [X22 + 0x3E0]
	0x032DD97C MOV X19, X1
	0x032DD980 MOV X20, X0
	0x032DD984 TBNZ X8, 0x0, 0x32DD99C
	0x032DD988 ADRP X0, 0xE49000
	0x032DD98C LDR X0, [X0 + 0x3E0]
	0x032DD990 BL 0x1C16CF4
	0x032DD994 MOVZ W8, 0x1
	0x032DD998 STRB W8, [X21 + 0x979]
	0x032DD99C LDR X0, [X22]
	0x032DD9A0 LDR W8, [X0 + 0xE0]
	0x032DD9A4 CBNZ W8, 0x32DD9AC
	0x032DD9A8 BL 0x1C16DFC
	0x032DD9AC MOV X0, X20
	0x032DD9B0 MOV X1, X19
	0x032DD9B4 LDP X20, X19, [X31 + 0x20]
	0x032DD9B8 LDP X22, X21, [X31 + 0x10]
	0x032DD9BC MOV W2, W31
	0x032DD9C0 MOV X3, X31
	0x032DD9C4 LDR X30, [X31], #0x30
	0x032DD9C8 B 0x33C7388
	0x032DD9CC STP X30, X23, [X31 - 0x30]!

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x1100000
	011 Move X25, 0xE17000
	012 Move W8, [X21+2410]
	013 Move X25, [X25+2512]
	014 Move X22, X4
	015 Move X23, X3
	016 Move X24, X2
	017 Move X19, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xE17000
	024 Move X0, [X0+2512]
	025 Call 0x1C17CF4
	026 Move X0, 0xE48000
	027 Move X0, [X0+3960]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+2410], W8
	031 Move X0, [X25]
	032 Move W1, 2
	033 Call 0x1C17D6C
	034 Compare X0, 0
	035 JumpIfEqual {87}
	036 Move X21, X0
	037 Compare X24, 0
	038 JumpIfEqual {45}
	039 Move X8, [X21]
	040 Move X0, X24
	041 Move X1, [X8+64]
	042 Call 0x1C17E00
	043 Compare X0, 0
	044 JumpIfEqual {84}
	045 Move W8, [X21+24]
	046 Compare W8, 0
	047 JumpIfEqual {83}
	048 Move X8, 0xE48000
	049 Move X8, [X8+3960]
	050 Move [X21+32], X24
	051 Add X1, X31, 0
	052 Move [X31], X23
	053 Move [X31+8], X22
	054 Move X0, [X8]
	055 Call 0x1C17E04
	056 Move X22, X0
	057 Compare X0, 0
	058 JumpIfEqual {65}
	059 Move X8, [X21]
	060 Move X0, X22
	061 Move X1, [X8+64]
	062 Call 0x1C17E00
	063 Compare X0, 0
	064 JumpIfEqual {84}
	065 Move W8, [X21+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, X20
	068 Move X1, X19
	069 Move X2, X21
	070 Move X3, X31
	071 Move [X21+40], X22
	072 Call MethodBase.Invoke, X0, X1, X2
	073 Move X20, [X31+64]
	074 Move X19, [X31+72]
	075 Move X22, [X31+48]
	076 Move X21, [X31+56]
	077 Move X24, [X31+32]
	078 Move X23, [X31+40]
	079 Move X30, [X31+16]
	080 Move X25, [X31+24]
	081 Add X31, X31, 80
	082 Return 
	083 Call 0x1C17F28
	084 Call 0x1C17F44
	085 Move X1, X31
	086 Call 0x1C17DEC
	087 Call 0x1C17F20

Method: System.Reflection.MethodImplAttributes GetMethodImplementationFlags()

Disassembly:
	0x032DD9D0 STP X22, X21, [X31 + 0x10]
	0x032DD9D4 STP X20, X19, [X31 + 0x20]
	0x032DD9D8 ADRP X22, 0x10FF000
	0x032DD9DC ADRP X23, 0xE49000
	0x032DD9E0 LDRB W8, [X22 + 0x97B]
	0x032DD9E4 LDR X23, [X23 + 0x3E0]
	0x032DD9E8 MOV W21, W2
	0x032DD9EC MOV X19, X1
	0x032DD9F0 MOV X20, X0
	0x032DD9F4 TBNZ X8, 0x0, 0x32DDA0C
	0x032DD9F8 ADRP X0, 0xE49000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X0, [X0+16]
	004 NotImplemented "Instruction MOVI not yet implemented."
	005 Add X1, X31, 0
	006 Move [X31], V0
	007 Move [X31+8], V0
	008 Call 0x1C851C8
	009 Move W0, [X31+20]
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return X0

Method: System.Reflection.ParameterInfo[] GetParameters()

Disassembly:
	0x032DD9FC LDR X0, [X0 + 0x3E0]
	0x032DDA00 BL 0x1C16CF4
	0x032DDA04 MOVZ W8, 0x1

ISIL:
	001 Move X1, X0
	002 Move X0, [X0+16]
	003 Call 0x1C8522C
	004 Return X0

Method: System.Reflection.ParameterInfo[] GetParametersInternal()

Disassembly:
	0x032DDA08 STRB W8, [X22 + 0x97B]
	0x032DDA0C LDR X0, [X23]
	0x032DDA10 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move X1, X0
	002 Move X0, [X0+16]
	003 Call 0x1C8522C
	004 Return X0

Method: System.Int32 GetParametersCount()

Disassembly:
	0x032DDA14 CBNZ W8, 0x32DDA1C
	0x032DDA18 BL 0x1C16DFC
	0x032DDA1C AND W2, W21, 0x1
	0x032DDA20 MOV X0, X20
	0x032DDA24 MOV X1, X19
	0x032DDA28 LDP X20, X19, [X31 + 0x20]
	0x032DDA2C LDP X22, X21, [X31 + 0x10]
	0x032DDA30 MOV X3, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X1, X0
	003 Move X0, [X0+16]
	004 Call 0x1C8522C
	005 Compare X0, 0
	006 JumpIfEqual {8}
	007 Move W0, [X0+24]
	008 Move X30, [X31+16]
	009 Return X0

Method: System.Object InternalInvoke(System.Object obj, System.Object[] parameters, out System.Exception exc)

Disassembly:
	0x032DDA34 LDP X30, X23, [X31], #0x30

ISIL:
	001 Call 0x1C95170
	002 Return X0

Method: System.Object Invoke(System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture)

Disassembly:
	0x032DDA38 B 0x33C9FDC
	0x032DDA3C STR X30, [X31 - 0x30]!
	0x032DDA40 STP X22, X21, [X31 + 0x10]
	0x032DDA44 STP X20, X19, [X31 + 0x20]
	0x032DDA48 ADRP X20, 0x10FF000
	0x032DDA4C LDRB W8, [X20 + 0x97C]
	0x032DDA50 MOV X19, X0
	0x032DDA54 TBNZ X8, 0x0, 0x32DDA90
	0x032DDA58 ADRP X0, 0xE49000
	0x032DDA5C LDR X0, [X0 + 0x6A0]
	0x032DDA60 BL 0x1C16CF4
	0x032DDA64 ADRP X0, 0xE16000
	0x032DDA68 LDR X0, [X0 + 0x9D0]
	0x032DDA6C BL 0x1C16CF4
	0x032DDA70 ADRP X0, 0xE49000
	0x032DDA74 LDR X0, [X0 + 0x6A8]
	0x032DDA78 BL 0x1C16CF4
	0x032DDA7C ADRP X0, 0xE49000
	0x032DDA80 LDR X0, [X0 + 0x6B0]
	0x032DDA84 BL 0x1C16CF4
	0x032DDA88 MOVZ W8, 0x1
	0x032DDA8C STRB W8, [X20 + 0x97C]
	0x032DDA90 MOV X0, X19
	0x032DDA94 MOV X1, X31
	0x032DDA98 BL 0x32CF440
	0x032DDA9C MOV W20, W0
	0x032DDAA0 MOV X0, X19
	0x032DDAA4 MOV X1, X31
	0x032DDAA8 BL 0x32CF478
	0x032DDAAC ANDS W8, W20, 0x1
	0x032DDAB0 MOVZ W9, 0x1
	0x032DDAB4 CINC W9, W9, NE
	0x032DDAB8 ANDS W31, W0, 0x1
	0x032DDABC MOV X0, X19
	0x032DDAC0 MOV X1, X31
	0x032DDAC4 CSEL W20, W9, W8, NE
	0x032DDAC8 BL 0x32CF45C
	0x032DDACC LDR X8, [X19 + 0x40]
	0x032DDAD0 AND W9, W0, 0x1
	0x032DDAD4 ADD W1, W20, W9
	0x032DDAD8 CBZ X8, 0x32DDAE4
	0x032DDADC ADD W1, W1, 0x1
	0x032DDAE0 B 0x32DDAE8
	0x032DDAE4 CBZ W1, 0x32DDC64
	0x032DDAE8 ADRP X8, 0xE16000
	0x032DDAEC LDR X8, [X8 + 0x9D0]
	0x032DDAF0 LDR X0, [X8]
	0x032DDAF4 BL 0x1C16D6C
	0x032DDAF8 MOV X20, X0
	0x032DDAFC MOV X0, X19
	0x032DDB00 MOV X1, X31
	0x032DDB04 BL 0x32CF440
	0x032DDB08 TBZ X0, 0x0, 0x32DDB58
	0x032DDB0C ADRP X8, 0xE49000
	0x032DDB10 LDR X8, [X8 + 0x6A0]
	0x032DDB14 LDR X0, [X8]
	0x032DDB18 BL 0x1C16F10
	0x032DDB1C MOV X1, X31
	0x032DDB20 MOV X21, X0
	0x032DDB24 BL 0x32BFE1C
	0x032DDB28 CBZ X20, 0x32DDC7C
	0x032DDB2C CBZ X21, 0x32DDB44
	0x032DDB30 LDR X8, [X20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, X5
	009 Move X20, X4
	010 Move X21, X3
	011 Move W22, W2
	012 Move X23, X1
	013 Move X24, X0
	014 Compare X1, 0
	015 JumpIfEqual {39}
	016 Move X8, [X24]
	017 Move X0, X24
	018 Move X9, [X8+440]
	019 Move X1, [X8+448]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Compare X0, 0
	022 JumpIfEqual {58}
	023 Move X8, [X0]
	024 Move X1, X23
	025 Move X9, [X8+2152]
	026 Move X2, [X8+2160]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {45}
	032 Move X0, 0xE4A000
	033 Move X0, [X0+1168]
	034 Call 0x1C17D08
	035 Call 0x1C17F10
	036 Move X19, X0
	037 Move X0, 0xE4A000
	038 Move X0, [X0+1544]
	039 Move X0, X24
	040 Call MethodBase.get_IsStatic, X0
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {59}
	045 Move X0, X24
	046 Move X1, X23
	047 Move W2, W22
	048 Move X3, X21
	049 Move X4, X20
	050 Move X5, X19
	051 Move X20, [X31+48]
	052 Move X19, [X31+56]
	053 Move X22, [X31+32]
	054 Move X21, [X31+40]
	055 Move X24, [X31+16]
	056 Move X23, [X31+24]
	057 Move X30, [X31+64]
	058 Call 0x1C17F20
	059 Move X0, 0xE4A000
	060 Move X0, [X0+1168]
	061 Call 0x1C17D08
	062 Call 0x1C17F10
	063 Move X19, X0
	064 Move X0, 0xE4A000
	065 Move X0, [X0+1552]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X19
	069 Move X2, X31
	070 Call TargetException..ctor, X0, X1
	071 Move X0, 0xE4A000
	072 Move X0, [X0+1560]
	073 Call 0x1C17D08
	074 Move X1, X0
	075 Move X0, X19
	076 Call 0x1C17DEC

Method: System.Object DoInvoke(System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture)

Disassembly:
	0x032DDB34 MOV X0, X21
	0x032DDB38 LDR X1, [X8 + 0x40]
	0x032DDB3C BL 0x1C16E00
	0x032DDB40 CBZ X0, 0x32DDC84
	0x032DDB44 LDR W8, [X20 + 0x18]
	0x032DDB48 CBZ W8, 0x32DDC80
	0x032DDB4C MOVZ W22, 0x1
	0x032DDB50 STR X21, [X20 + 0x20]
	0x032DDB54 B 0x32DDB5C
	0x032DDB58 MOV W22, W31
	0x032DDB5C MOV X0, X19
	0x032DDB60 MOV X1, X31
	0x032DDB64 BL 0x32CF478
	0x032DDB68 TBZ X0, 0x0, 0x32DDBBC
	0x032DDB6C ADRP X8, 0xE49000
	0x032DDB70 LDR X8, [X8 + 0x6B0]
	0x032DDB74 LDR X0, [X8]
	0x032DDB78 BL 0x1C16F10
	0x032DDB7C MOV X1, X31
	0x032DDB80 MOV X21, X0
	0x032DDB84 BL 0x32BFE24
	0x032DDB88 CBZ X20, 0x32DDC7C
	0x032DDB8C CBZ X21, 0x32DDBA4
	0x032DDB90 LDR X8, [X20]
	0x032DDB94 MOV X0, X21
	0x032DDB98 LDR X1, [X8 + 0x40]
	0x032DDB9C BL 0x1C16E00
	0x032DDBA0 CBZ X0, 0x32DDC84
	0x032DDBA4 LDR W8, [X20 + 0x18]
	0x032DDBA8 CMP W22, W8
	0x032DDBAC B.CS 0x32DDC80
	0x032DDBB0 ADD X8, X20, W22, 0x3, UXTW
	0x032DDBB4 ADD W22, W22, 0x1
	0x032DDBB8 STR X21, [X8 + 0x20]
	0x032DDBBC MOV X0, X19
	0x032DDBC0 MOV X1, X31
	0x032DDBC4 BL 0x32CF45C
	0x032DDBC8 TBZ X0, 0x0, 0x32DDC1C
	0x032DDBCC ADRP X8, 0xE49000
	0x032DDBD0 LDR X8, [X8 + 0x6A8]
	0x032DDBD4 LDR X0, [X8]
	0x032DDBD8 BL 0x1C16F10
	0x032DDBDC MOV X1, X31
	0x032DDBE0 MOV X21, X0
	0x032DDBE4 BL 0x32BFE2C
	0x032DDBE8 CBZ X20, 0x32DDC7C
	0x032DDBEC CBZ X21, 0x32DDC04
	0x032DDBF0 LDR X8, [X20]
	0x032DDBF4 MOV X0, X21
	0x032DDBF8 LDR X1, [X8 + 0x40]
	0x032DDBFC BL 0x1C16E00
	0x032DDC00 CBZ X0, 0x32DDC84
	0x032DDC04 LDR W8, [X20 + 0x18]
	0x032DDC08 CMP W22, W8
	0x032DDC0C B.CS 0x32DDC80
	0x032DDC10 ADD X8, X20, W22, 0x3, UXTW
	0x032DDC14 ADD W22, W22, 0x1
	0x032DDC18 STR X21, [X8 + 0x20]
	0x032DDC1C LDR X0, [X19 + 0x40]
	0x032DDC20 CBZ X0, 0x32DDC68
	0x032DDC24 MOV X1, X31
	0x032DDC28 BL 0x32C2738
	0x032DDC2C CBZ X20, 0x32DDC7C
	0x032DDC30 MOV X19, X0
	0x032DDC34 CBZ X0, 0x32DDC4C
	0x032DDC38 LDR X8, [X20]
	0x032DDC3C MOV X0, X19
	0x032DDC40 LDR X1, [X8 + 0x40]
	0x032DDC44 BL 0x1C16E00
	0x032DDC48 CBZ X0, 0x32DDC84
	0x032DDC4C LDR W8, [X20 + 0x18]
	0x032DDC50 CMP W22, W8
	0x032DDC54 B.CS 0x32DDC80
	0x032DDC58 ADD X8, X20, W22, 0x3, UXTW
	0x032DDC5C STR X19, [X8 + 0x20]
	0x032DDC60 B 0x32DDC68
	0x032DDC64 MOV X20, X31
	0x032DDC68 MOV X0, X20
	0x032DDC6C LDP X20, X19, [X31 + 0x20]
	0x032DDC70 LDP X22, X21, [X31 + 0x10]
	0x032DDC74 LDR X30, [X31], #0x30
	0x032DDC78 RET
	0x032DDC7C BL 0x1C16F20
	0x032DDC80 BL 0x1C16F28
	0x032DDC84 BL 0x1C16F44
	0x032DDC88 MOV X1, X31
	0x032DDC8C BL 0x1C16DEC
	0x032DDC90 SUB X31, X31, 0x60
	0x032DDC94 STR X30, [X31 + 0x10]
	0x032DDC98 STP X26, X25, [X31 + 0x20]
	0x032DDC9C STP X24, X23, [X31 + 0x30]
	0x032DDCA0 STP X22, X21, [X31 + 0x40]
	0x032DDCA4 STP X20, X19, [X31 + 0x50]
	0x032DDCA8 ADRP X19, 0x10FF000
	0x032DDCAC LDRB W8, [X19 + 0x97D]
	0x032DDCB0 MOV X20, X0
	0x032DDCB4 TBNZ X8, 0x0, 0x32DDD50
	0x032DDCB8 ADRP X0, 0xE48000
	0x032DDCBC LDR X0, [X0 + 0xC78]
	0x032DDCC0 BL 0x1C16CF4
	0x032DDCC4 ADRP X0, 0xE48000
	0x032DDCC8 LDR X0, [X0 + 0xC80]
	0x032DDCCC BL 0x1C16CF4
	0x032DDCD0 ADRP X0, 0xE48000
	0x032DDCD4 LDR X0, [X0 + 0xC88]
	0x032DDCD8 BL 0x1C16CF4
	0x032DDCDC ADRP X0, 0xE48000
	0x032DDCE0 LDR X0, [X0 + 0xC90]
	0x032DDCE4 BL 0x1C16CF4
	0x032DDCE8 ADRP X0, 0xE49000
	0x032DDCEC LDR X0, [X0 + 0x6B8]
	0x032DDCF0 BL 0x1C16CF4
	0x032DDCF4 ADRP X0, 0xE48000
	0x032DDCF8 LDR X0, [X0 + 0xCA0]
	0x032DDCFC BL 0x1C16CF4
	0x032DDD00 ADRP X0, 0xE49000
	0x032DDD04 LDR X0, [X0 + 0x6C0]
	0x032DDD08 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x1100000
	010 Move W8, [X25+2411]
	011 Move X23, X5
	012 Move X20, X4
	013 Move X24, X3
	014 Move W22, W2
	015 Move X21, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xE17000
	022 Move X0, [X0+1728]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X25+2411], W8
	026 Compare X24, 0
	027 JumpIfNotEqual {38}
	028 Move X8, 0xE17000
	029 Move X8, [X8+1728]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X31
	036 Call Type.get_DefaultBinder
	037 Move X24, X0
	038 Move X0, [X19+16]
	039 Move X1, X19
	040 Call 0x1C8522C
	041 Move X2, X0
	042 Move X0, X24
	043 Move X1, X20
	044 Move X3, X23
	045 Move W4, W22
	046 Call RuntimeMethodInfo.ConvertValues, X0, X1, X2, X3, X4
	047 Compare X21, 0
	048 JumpIfNotEqual {64}
	049 Move X8, [X19]
	050 Move X0, X19
	051 Move X9, [X8+440]
	052 Move X1, [X8+448]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Compare X0, 0
	055 JumpIfEqual {94}
	056 Move X8, [X0]
	057 Move X9, [X8+648]
	058 Move X1, [X8+656]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {107}
	064 Move TEMP, X22
	065 And TEMP, TEMP, 512
	066 Compare TEMP, 512
	067 JumpIfNotEqual {81}
	068 Move X8, [X19]
	069 Move X0, X19
	070 Move X9, [X8+440]
	071 Move X1, [X8+448]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Compare X0, 0
	074 JumpIfEqual {94}
	075 Move X1, X31
	076 Call Type.get_IsAbstract, X0
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {95}
	081 And W31, W22, 0x2000000
	082 Move X0, X19
	083 Move X1, X21
	084 Move X2, X20
	085 Move X20, [X31+48]
	086 Move X19, [X31+56]
	087 Move X22, [X31+32]
	088 Move X21, [X31+40]
	089 Move X24, [X31+16]
	090 Move X23, [X31+24]
	091 NotImplemented "Instruction CSET not yet implemented."
	092 Move X30, [X31+64]
	093 Move X25, [X31+72]
	094 Call 0x1C17F20
	095 Move X8, [X19]
	096 Move X0, X19
	097 Move X9, [X8+440]
	098 Move X1, [X8+448]
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move X19, X0
	101 Move X0, 0xE4A000
	102 Move X0, [X0+1568]
	103 Call 0x1C17D08
	104 Move X1, X19
	105 Move X2, X31
	106 Call String.Format, X0, X1
	107 Move X8, [X19]
	108 Move X0, X19
	109 Move X9, [X8+440]
	110 Move X1, [X8+448]
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Move X20, X0
	113 Move X0, 0xE4A000
	114 Move X0, [X0+1576]
	115 Call 0x1C17D08
	116 Move X19, X0
	117 Compare X20, 0
	118 JumpIfEqual {125}
	119 Move X8, [X20]
	120 Move X0, X20
	121 Move X9, [X8+360]
	122 Move X1, [X8+368]
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move X20, X0
	125 Move X0, 0xE4A000
	126 Move X0, [X0+1584]
	127 Call 0x1C17D08
	128 Move X2, X0
	129 Move X0, X19
	130 Move X1, X20
	131 Move X3, X31
	132 Call String.Concat, X0, X1, X2
	133 Move X19, X0
	134 Move X0, 0xE4A000
	135 Move X0, [X0+1592]
	136 Call 0x1C17D08
	137 Call 0x1C17F10
	138 Move X1, X19
	139 Move X2, X31
	140 Move X20, X0
	141 Call MemberAccessException..ctor, X0, X1
	142 Move X0, 0xE4A000
	143 Move X0, [X0+1600]
	144 Call 0x1C17D08
	145 Move X1, X0
	146 Move X0, X20
	147 Call 0x1C17DEC

Method: System.Object InternalInvoke(System.Object obj, System.Object[] parameters, System.Boolean wrapExceptions)

Disassembly:
	0x032DDD0C ADRP X0, 0xE49000
	0x032DDD10 LDR X0, [X0 + 0x6C8]
	0x032DDD14 BL 0x1C16CF4
	0x032DDD18 ADRP X0, 0xE1E000
	0x032DDD1C LDR X0, [X0 + 0xC60]
	0x032DDD20 BL 0x1C16CF4
	0x032DDD24 ADRP X0, 0xE16000
	0x032DDD28 LDR X0, [X0 + 0x6C0]
	0x032DDD2C BL 0x1C16CF4
	0x032DDD30 ADRP X0, 0xE48000
	0x032DDD34 LDR X0, [X0 + 0xCB0]
	0x032DDD38 BL 0x1C16CF4
	0x032DDD3C ADRP X0, 0xE48000
	0x032DDD40 LDR X0, [X0 + 0xCB8]
	0x032DDD44 BL 0x1C16CF4
	0x032DDD48 MOVZ W8, 0x1
	0x032DDD4C STRB W8, [X19 + 0x97D]
	0x032DDD50 MOV X0, X20
	0x032DDD54 MOV X1, X31
	0x032DDD58 BL 0x32CF440
	0x032DDD5C MOV W19, W0
	0x032DDD60 MOV X0, X20
	0x032DDD64 MOV X1, X31
	0x032DDD68 BL 0x32CF478
	0x032DDD6C ANDS W8, W19, 0x1
	0x032DDD70 MOVZ W9, 0x1
	0x032DDD74 CINC W9, W9, NE
	0x032DDD78 ANDS W31, W0, 0x1
	0x032DDD7C MOV X0, X20
	0x032DDD80 MOV X1, X31
	0x032DDD84 CSEL W19, W9, W8, NE
	0x032DDD88 BL 0x32CF45C
	0x032DDD8C LDR X8, [X20 + 0x40]
	0x032DDD90 AND W9, W0, 0x1
	0x032DDD94 ADD W1, W19, W9
	0x032DDD98 CBZ X8, 0x32DDDA4
	0x032DDD9C ADD W1, W1, 0x1
	0x032DDDA0 B 0x32DDDA8
	0x032DDDA4 CBZ W1, 0x32DE148
	0x032DDDA8 ADRP X8, 0xE48000
	0x032DDDAC LDR X8, [X8 + 0xC78]
	0x032DDDB0 ADRP X23, 0xE16000
	0x032DDDB4 ADRP X24, 0xE48000
	0x032DDDB8 LDR X0, [X8]
	0x032DDDBC LDR X23, [X23 + 0x6C0]
	0x032DDDC0 LDR X24, [X24 + 0xC80]
	0x032DDDC4 BL 0x1C16D6C
	0x032DDDC8 MOV X19, X0
	0x032DDDCC MOV X0, X20
	0x032DDDD0 MOV X1, X31
	0x032DDDD4 BL 0x32CF440
	0x032DDDD8 TBZ X0, 0x0, 0x32DDE68
	0x032DDDDC ADRP X8, 0xE49000
	0x032DDDE0 LDR X0, [X23]
	0x032DDDE4 LDR X8, [X8 + 0x6B8]
	0x032DDDE8 LDR W9, [X0 + 0xE0]
	0x032DDDEC LDR X21, [X8]
	0x032DDDF0 CBNZ W9, 0x32DDDF8
	0x032DDDF4 BL 0x1C16DFC
	0x032DDDF8 MOV X0, X21
	0x032DDDFC MOV X1, X31
	0x032DDE00 BL 0x338C698
	0x032DDE04 CBZ X0, 0x32DE16C
	0x032DDE08 LDR X8, [X23]
	0x032DDE0C MOV X2, X31
	0x032DDE10 LDR X8, [X8 + 0xB8]
	0x032DDE14 LDR X1, [X8 + 0x10]
	0x032DDE18 BL 0x3397418
	0x032DDE1C LDR X8, [X24]
	0x032DDE20 MOV X22, X0
	0x032DDE24 MOV X0, X8
	0x032DDE28 BL 0x1C16F10
	0x032DDE2C MOV X1, X22
	0x032DDE30 MOV X21, X0
	0x032DDE34 BL 0x32D7338
	0x032DDE38 CBZ X19, 0x32DE16C
	0x032DDE3C CBZ X21, 0x32DDE54
	0x032DDE40 LDR X8, [X19]
	0x032DDE44 MOV X0, X21
	0x032DDE48 LDR X1, [X8 + 0x40]
	0x032DDE4C BL 0x1C16E00
	0x032DDE50 CBZ X0, 0x32DE174
	0x032DDE54 LDR W8, [X19 + 0x18]
	0x032DDE58 CBZ W8, 0x32DE170
	0x032DDE5C MOVZ W25, 0x1
	0x032DDE60 STR X21, [X19 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move [X31+8], X31
	006 Move TEMP, X3
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfNotEqual {13}
	010 Add X3, X31, 8
	011 Move X1, X19
	012 Call 0x1C95170
	013 Add X3, X31, 8
	014 Move X1, X19
	015 Call 0x1C95170
	016 Move X8, [X31+8]
	017 Compare X8, 0
	018 JumpIfNotEqual {25}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 NotImplemented "Instruction CSEL not yet implemented."
	023 Move X30, [X31+32]
	024 Return X0
	025 Move X0, 0xE4A000
	026 Move X0, [X0+1608]
	027 Move X19, X8
	028 Call 0x1C17D08
	029 Move X1, X0
	030 Move X0, X19
	031 Call 0x1C17DEC
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X19, X0
	034 Move X0, X19
	035 Call 0x3EB2AD0
	036 Move X19, X0
	037 Move X0, 0xE4A000
	038 Move X0, [X0+1328]
	039 Call 0x1C17D08
	040 Move X8, [X19]
	041 Move X1, [X8]
	042 Call 0x1C18270
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {51}
	047 Move X19, [X19]
	048 Call 0x3EB2AE0
	049 Move X0, X19
	050 Call 0x1C17F18
	051 Move X0, 0xE17000
	052 Move X0, [X0+2136]
	053 Call 0x1C17D08
	054 Move X8, [X19]
	055 Move X1, [X8]
	056 Call 0x1C18270
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {47}
	061 Move X0, 0xE17000
	062 Move X0, [X0+2000]
	063 Call 0x1C17D08
	064 Move X8, [X19]
	065 Move X1, [X8]
	066 Call 0x1C18270
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {87}
	071 Move X19, [X19]
	072 Call 0x3EB2AE0
	073 Move X0, 0xE47000
	074 Move X0, [X0+3936]
	075 Call 0x1C17D08
	076 Call 0x1C17F10
	077 Move X1, X19
	078 Move X2, X31
	079 Move X20, X0
	080 Call TargetInvocationException..ctor, X0, X1
	081 Move X0, 0xE4A000
	082 Move X0, [X0+1608]
	083 Call 0x1C17D08
	084 Move X1, X0
	085 Move X0, X20
	086 Call 0x1C17DEC
	087 Move W0, 8
	088 Call 0x3EB2AF0
	089 Move X8, [X19]
	090 Move [X0], X8
	091 Move X1, 0xBD8000
	092 Add X1, X1, 3672
	093 Move X2, X31
	094 Call 0x3EB2B00
	095 Move X19, X0
	096 Call 0x3EB2AE0
	097 Move X0, X19
	098 Call 0x1D2D690
	099 Call 0x1991590

Method: System.Object Invoke(System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture)

Disassembly:
	0x032DDE64 B 0x32DDE6C
	0x032DDE68 MOV W25, W31
	0x032DDE6C MOV X0, X20
	0x032DDE70 MOV X1, X31
	0x032DDE74 BL 0x32CF478
	0x032DDE78 TBZ X0, 0x0, 0x32DDF0C

ISIL:
	001 Move X5, X4
	002 Move X4, X3
	003 Move X3, X2
	004 Move W2, W1
	005 Move X1, X31
	006 Call RuntimeConstructorInfo.DoInvoke, X0, X1, X2, X3, X4, X5
	007 Return X0

Method: System.RuntimeMethodHandle get_MethodHandle()

Disassembly:
	0x032DDE7C ADRP X8, 0xE49000
	0x032DDE80 LDR X0, [X23]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Reflection.MethodAttributes get_Attributes()

Disassembly:
	0x032DDE84 LDR X8, [X8 + 0x6C8]
	0x032DDE88 LDR W9, [X0 + 0xE0]

ISIL:
	001 Move X0, [X0+16]
	002 Call 0x1C2C380
	003 Return X0

Method: System.Reflection.CallingConventions get_CallingConvention()

Disassembly:
	0x032DDE8C LDR X21, [X8]
	0x032DDE90 CBNZ W9, 0x32DDE98
	0x032DDE94 BL 0x1C16DFC
	0x032DDE98 MOV X0, X21
	0x032DDE9C MOV X1, X31
	0x032DDEA0 BL 0x338C698
	0x032DDEA4 CBZ X0, 0x32DE16C
	0x032DDEA8 LDR X8, [X23]
	0x032DDEAC MOV X2, X31
	0x032DDEB0 LDR X8, [X8 + 0xB8]
	0x032DDEB4 LDR X1, [X8 + 0x10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X0, [X0+16]
	004 NotImplemented "Instruction MOVI not yet implemented."
	005 Add X1, X31, 0
	006 Move [X31], V0
	007 Move [X31+8], V0
	008 Call 0x1C851C8
	009 Move W0, [X31+24]
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return X0

Method: System.Boolean get_ContainsGenericParameters()

Disassembly:
	0x032DDEB8 BL 0x3397418
	0x032DDEBC LDR X8, [X24]
	0x032DDEC0 MOV X22, X0
	0x032DDEC4 MOV X0, X8
	0x032DDEC8 BL 0x1C16F10
	0x032DDECC MOV X1, X22
	0x032DDED0 MOV X21, X0
	0x032DDED4 BL 0x32D7338
	0x032DDED8 CBZ X19, 0x32DE16C
	0x032DDEDC CBZ X21, 0x32DDEF4
	0x032DDEE0 LDR X8, [X19]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+440]
	004 Move X1, [X8+448]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 Compare X0, 0
	007 JumpIfEqual {13}
	008 Move X8, [X0]
	009 Move X2, [X8+648]
	010 Move X1, [X8+656]
	011 Move X30, [X31+16]
	012 CallNoReturn X2
	013 Call 0x1C17F20

Method: System.Type get_ReflectedType()

Disassembly:
	0x032DDEE4 MOV X0, X21
	0x032DDEE8 LDR X1, [X8 + 0x40]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Type get_DeclaringType()

Disassembly:
	0x032DDEEC BL 0x1C16E00
	0x032DDEF0 CBZ X0, 0x32DE174
	0x032DDEF4 LDR W8, [X19 + 0x18]
	0x032DDEF8 CMP W25, W8
	0x032DDEFC B.CS 0x32DE170
	0x032DDF00 ADD X8, X19, W25, 0x3, UXTW
	0x032DDF04 ADD W25, W25, 0x1
	0x032DDF08 STR X21, [X8 + 0x20]
	0x032DDF0C MOV X0, X20
	0x032DDF10 MOV X1, X31
	0x032DDF14 BL 0x32CF45C

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X0, [X0+16]
	004 NotImplemented "Instruction MOVI not yet implemented."
	005 Add X1, X31, 0
	006 Move [X31], V0
	007 Move [X31+8], V0
	008 Call 0x1C851C8
	009 Move X0, [X31]
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return X0

Method: System.String get_Name()

Disassembly:
	0x032DDF18 TBZ X0, 0x0, 0x32DDFAC
	0x032DDF1C ADRP X8, 0xE49000
	0x032DDF20 LDR X0, [X23]
	0x032DDF24 LDR X8, [X8 + 0x6C0]
	0x032DDF28 LDR W9, [X0 + 0xE0]

ISIL:
	001 Move X8, [X0+24]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move X0, X8
	005 Return X0
	006 Call 0x1C73118
	007 Return X0

Method: System.Boolean IsDefined(System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x032DDF2C LDR X21, [X8]
	0x032DDF30 CBNZ W9, 0x32DDF38
	0x032DDF34 BL 0x1C16DFC
	0x032DDF38 MOV X0, X21
	0x032DDF3C MOV X1, X31
	0x032DDF40 BL 0x338C698
	0x032DDF44 CBZ X0, 0x32DE16C
	0x032DDF48 LDR X8, [X23]
	0x032DDF4C MOV X2, X31
	0x032DDF50 LDR X8, [X8 + 0xB8]
	0x032DDF54 LDR X1, [X8 + 0x10]
	0x032DDF58 BL 0x3397418
	0x032DDF5C LDR X8, [X24]
	0x032DDF60 MOV X22, X0
	0x032DDF64 MOV X0, X8
	0x032DDF68 BL 0x1C16F10
	0x032DDF6C MOV X1, X22
	0x032DDF70 MOV X21, X0
	0x032DDF74 BL 0x32D7338
	0x032DDF78 CBZ X19, 0x32DE16C
	0x032DDF7C CBZ X21, 0x32DDF94
	0x032DDF80 LDR X8, [X19]
	0x032DDF84 MOV X0, X21
	0x032DDF88 LDR X1, [X8 + 0x40]
	0x032DDF8C BL 0x1C16E00
	0x032DDF90 CBZ X0, 0x32DE174
	0x032DDF94 LDR W8, [X19 + 0x18]
	0x032DDF98 CMP W25, W8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1100000
	008 Move X23, 0xE4A000
	009 Move W8, [X22+2412]
	010 Move X23, [X23+992]
	011 Move W21, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xE4A000
	019 Move X0, [X0+992]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2412], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 And W2, W21, 1
	029 Move X0, X20
	030 Move X1, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X3, X31
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Call MonoCustomAttrs.IsDefined, X0, X1, X2
	039 Return X0

Method: System.Object[] GetCustomAttributes(System.Boolean inherit)

Disassembly:
	0x032DDF9C B.CS 0x32DE170
	0x032DDFA0 ADD X8, X19, W25, 0x3, UXTW
	0x032DDFA4 ADD W25, W25, 0x1
	0x032DDFA8 STR X21, [X8 + 0x20]
	0x032DDFAC LDR X8, [X20 + 0x40]
	0x032DDFB0 CBZ X8, 0x32DE14C
	0x032DDFB4 ADRP X8, 0xE48000
	0x032DDFB8 LDR X8, [X8 + 0xC88]
	0x032DDFBC ADRP X26, 0xE48000
	0x032DDFC0 MOVZ W1, 0x1
	0x032DDFC4 LDR X0, [X8]
	0x032DDFC8 LDR X26, [X26 + 0xCB0]
	0x032DDFCC BL 0x1C16D6C
	0x032DDFD0 LDR X8, [X23]
	0x032DDFD4 LDR X22, [X26]
	0x032DDFD8 MOV X21, X0
	0x032DDFDC LDR W9, [X8 + 0xE0]
	0x032DDFE0 CBNZ W9, 0x32DDFEC
	0x032DDFE4 MOV X0, X8
	0x032DDFE8 BL 0x1C16DFC
	0x032DDFEC MOV X0, X22
	0x032DDFF0 MOV X1, X31
	0x032DDFF4 BL 0x338C698
	0x032DDFF8 LDR X8, [X20 + 0x40]
	0x032DDFFC CBZ X8, 0x32DE16C
	0x032DE000 ADRP X9, 0xE47000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1100000
	007 Move X22, 0xE4A000
	008 Move W8, [X21+2413]
	009 Move X22, [X22+992]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE4A000
	017 Move X0, [X0+992]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2413], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 And W1, W20, 1
	027 Move X0, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call MonoCustomAttrs.GetCustomAttributes, X0, X1
	035 Return X0

Method: System.Object[] GetCustomAttributes(System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x032DE004 LDR X9, [X9 + 0xCB8]
	0x032DE008 MOV X20, X0
	0x032DE00C LDR W8, [X8 + 0x30]
	0x032DE010 ADD X1, X31, 0x1C
	0x032DE014 LDR X0, [X9]
	0x032DE018 STR W8, [X31 + 0x1C]
	0x032DE01C BL 0x1C16E04
	0x032DE020 MOV X2, X0
	0x032DE024 ADD X0, X31, 0x0
	0x032DE028 MOV X1, X20
	0x032DE02C MOV X3, X31
	0x032DE030 STP X31, X31, [X31]
	0x032DE034 BL 0x32CD938
	0x032DE038 CBZ X21, 0x32DE16C
	0x032DE03C LDR W8, [X21 + 0x18]
	0x032DE040 CBZ W8, 0x32DE170
	0x032DE044 LDR V0, [X31]
	0x032DE048 ADRP X8, 0xE47000
	0x032DE04C LDR X8, [X8 + 0xCA0]
	0x032DE050 ADRP X20, 0xE1D000
	0x032DE054 STR V0, [X21 + 0x2]
	0x032DE058 MOV X1, X31
	0x032DE05C LDR X0, [X8]
	0x032DE060 LDR X20, [X20 + 0xC60]
	0x032DE064 BL 0x338C698
	0x032DE068 LDR X8, [X20]
	0x032DE06C MOV X20, X0
	0x032DE070 MOVZ W1, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x10FF000
	008 Move X23, 0xE49000
	009 Move W8, [X22+2414]
	010 Move X23, [X23+992]
	011 Move W21, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xE49000
	019 Move X0, [X0+992]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2414], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 And W2, W21, 1
	029 Move X0, X20
	030 Move X1, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X3, X31
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Call MonoCustomAttrs.GetCustomAttributes, X0, X1, X2
	039 Return X0

Method: System.String ToString()

Disassembly:
	0x032DE074 MOV X0, X8
	0x032DE078 BL 0x1C16D6C
	0x032DE07C LDR X8, [X26]
	0x032DE080 MOV X22, X0
	0x032DE084 MOV X1, X31
	0x032DE088 MOV X0, X8
	0x032DE08C BL 0x338C698
	0x032DE090 CBZ X22, 0x32DE16C
	0x032DE094 MOV X23, X0
	0x032DE098 CBZ X0, 0x32DE0B0
	0x032DE09C LDR X8, [X22]
	0x032DE0A0 MOV X0, X23
	0x032DE0A4 LDR X1, [X8 + 0x40]
	0x032DE0A8 BL 0x1C16E00
	0x032DE0AC CBZ X0, 0x32DE174
	0x032DE0B0 LDR W8, [X22 + 0x18]
	0x032DE0B4 CBZ W8, 0x32DE170
	0x032DE0B8 STR X23, [X22 + 0x20]
	0x032DE0BC CBZ X20, 0x32DE16C
	0x032DE0C0 ADRP X23, 0xE47000
	0x032DE0C4 LDR X23, [X23 + 0xC90]
	0x032DE0C8 MOV X0, X20
	0x032DE0CC MOV X1, X22
	0x032DE0D0 MOV X2, X31
	0x032DE0D4 BL 0x3397418
	0x032DE0D8 LDR X8, [X23]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10FF000
	006 Move X20, 0xE49000
	007 Move W8, [X21+2415]
	008 Move X20, [X20+1616]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE49000
	015 Move X0, [X0+1616]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2415], W8
	019 Move X8, [X19]
	020 Move X0, X19
	021 Move W1, W31
	022 Move X9, [X8+888]
	023 Move X2, [X8+896]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X8, [X20]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X0
	029 Move X2, X31
	030 Move X0, X8
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call String.Concat, X0, X1
	034 Return X0

Method: System.Collections.Generic.IList`1<System.Reflection.CustomAttributeData> GetCustomAttributesData()

Disassembly:
	0x032DE0DC MOV X22, X0

ISIL:
	001 Call CustomAttributeData.GetCustomAttributes, X0
	002 Return X0

Method: System.Int32 get_core_clr_security_level()

Disassembly:
	0x032DE0E0 LDR W9, [X8 + 0xE0]
	0x032DE0E4 CBNZ W9, 0x32DE0F4

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean get_IsSecurityCritical()

Disassembly:
	0x032DE0E8 MOV X0, X8
	0x032DE0EC BL 0x1C16DFC

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Int32 get_MetadataToken()

Disassembly:
	0x032DE0F0 LDR X8, [X23]

ISIL:
	001 Call 0x1C728C4
	002 Return X0

Method: System.Int32 get_metadata_token(System.Reflection.RuntimeConstructorInfo method)

Disassembly:
	0x032DE0F4 LDR X8, [X8 + 0xB8]

ISIL:
	001 Call 0x1C728C4
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x032DE0F8 LDR X0, [X24]
	0x032DE0FC LDR X23, [X8]
	0x032DE100 BL 0x1C16F10
	0x032DE104 MOV X1, X31
	0x032DE108 MOV X20, X0
	0x032DE10C BL 0x33BDD8C
	0x032DE110 STP X22, X21, [X20 + 0x10]
	0x032DE114 STR X23, [X20 + 0x20]
	0x032DE118 CBZ X19, 0x32DE16C
	0x032DE11C LDR X8, [X19]
	0x032DE120 MOV X0, X20
	0x032DE124 LDR X1, [X8 + 0x40]
	0x032DE128 BL 0x1C16E00
	0x032DE12C CBZ X0, 0x32DE174
	0x032DE130 LDR W8, [X19 + 0x18]
	0x032DE134 CMP W25, W8
	0x032DE138 B.CS 0x32DE170
	0x032DE13C ADD X8, X19, W25, 0x3, UXTW
	0x032DE140 STR X20, [X8 + 0x20]
	0x032DE144 B 0x32DE14C
	0x032DE148 MOV X19, X31
	0x032DE14C MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x10FF000
	006 Move X21, 0xE40000
	007 Move W8, [X20+2416]
	008 Move X21, [X21+2424]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE40000
	015 Move X0, [X0+2424]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2416], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call ConstructorInfo..ctor, X0
	031 Return 

