Type: System.Reflection.RuntimeParameterInfo

Method: System.Void .ctor(System.String name, System.Type type, System.Int32 position, System.Int32 attrs, System.Object defaultValue, System.Reflection.MemberInfo member, System.Runtime.InteropServices.MarshalAsAttribute marshalAs)

Disassembly:
	0x032DE440 MOV X2, X31
	0x032DE444 LDR X1, [X8]
	0x032DE448 LDR X22, [X22 + 0x848]
	0x032DE44C BL 0x32333E0
	0x032DE450 AND W3, W19, 0x1
	0x032DE454 MOV X0, X21
	0x032DE458 MOV X1, X20
	0x032DE45C MOV W2, W31
	0x032DE460 BL 0x32DAA90
	0x032DE464 LDR X1, [X22]
	0x032DE468 MOV X0, X21
	0x032DE46C MOV X2, X31
	0x032DE470 BL 0x32333E0
	0x032DE474 LDR X8, [X21]
	0x032DE478 MOV X0, X21
	0x032DE47C LDP X20, X19, [X31 + 0x20]
	0x032DE480 LDP X22, X21, [X31 + 0x10]
	0x032DE484 LDP X2, X1, [X8 + 0x168]
	0x032DE488 LDR X30, [X31], #0x30
	0x032DE48C BR X2
	0x032DE490 BL 0x1C16F20
	0x032DE494 STP X30, X23, [X31 - 0x30]!
	0x032DE498 STP X22, X21, [X31 + 0x10]
	0x032DE49C STP X20, X19, [X31 + 0x20]
	0x032DE4A0 CBZ X1, 0x32DE518
	0x032DE4A4 LDR X8, [X0]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, X1
	011 Move X1, X31
	012 Move X19, X7
	013 Move X20, X6
	014 Move X21, X5
	015 Move W22, W4
	016 Move W23, W3
	017 Move X24, X2
	018 Move X26, X0
	019 Call ParameterInfo..ctor, X0
	020 Move [X26+56], W23
	021 Move [X26+16], W22
	022 Move [X26+24], X24
	023 Move [X26+32], X21
	024 Move [X26+40], X20
	025 Move [X26+48], X25
	026 Move [X26+64], X19
	027 Move X20, [X31+64]
	028 Move X19, [X31+72]
	029 Move X22, [X31+48]
	030 Move X21, [X31+56]
	031 Move X24, [X31+32]
	032 Move X23, [X31+40]
	033 Move X26, [X31+16]
	034 Move X25, [X31+24]
	035 Move X30, [X31+80]
	036 Return 

Method: System.Void FormatParameters(System.Text.StringBuilder sb, System.Reflection.ParameterInfo[] p, System.Reflection.CallingConventions callingConvention, System.Boolean serialization)

Disassembly:
	0x032DBA90 MOV X19, X0
	0x032DBA94 MOVZ W21, 0x1
	0x032DBA98 CBZ X19, 0x32DBAB0
	0x032DBA9C LDR X8, [X20]
	0x032DBAA0 MOV X0, X19
	0x032DBAA4 LDR X1, [X8 + 0x40]
	0x032DBAA8 BL 0x1C16E00
	0x032DBAAC CBZ X0, 0x32DBAE4
	0x032DBAB0 LDR W8, [X20 + 0x18]
	0x032DBAB4 CMP W21, W8
	0x032DBAB8 B.CS 0x32DBAE0
	0x032DBABC ADD X8, X20, W21, 0x3, UXTW
	0x032DBAC0 STR X19, [X8 + 0x20]
	0x032DBAC4 MOV X0, X20
	0x032DBAC8 LDP X20, X19, [X31 + 0x40]
	0x032DBACC LDP X22, X21, [X31 + 0x30]
	0x032DBAD0 LDP X30, X23, [X31 + 0x20]
	0x032DBAD4 ADD X31, X31, 0x50
	0x032DBAD8 RET
	0x032DBADC BL 0x1C16F20
	0x032DBAE0 BL 0x1C16F28
	0x032DBAE4 BL 0x1C16F44
	0x032DBAE8 MOV X1, X31
	0x032DBAEC BL 0x1C16DEC
	0x032DBAF0 STP X29, X30, [X31 - 0x60]!
	0x032DBAF4 STP X28, X27, [X31 + 0x10]
	0x032DBAF8 STP X26, X25, [X31 + 0x20]
	0x032DBAFC STP X24, X23, [X31 + 0x30]
	0x032DBB00 STP X22, X21, [X31 + 0x40]
	0x032DBB04 STP X20, X19, [X31 + 0x50]
	0x032DBB08 SUB X31, X31, 0x3B0
	0x032DBB0C ADRP X20, 0x1101000
	0x032DBB10 LDRB W8, [X20 + 0x966]
	0x032DBB14 MOV X19, X0
	0x032DBB18 TBNZ X8, 0x0, 0x32DBBFC
	0x032DBB1C ADRP X0, 0xE18000
	0x032DBB20 LDR X0, [X0 + 0xB58]
	0x032DBB24 BL 0x1C16CF4
	0x032DBB28 ADRP X0, 0xE4B000
	0x032DBB2C LDR X0, [X0 + 0x568]
	0x032DBB30 BL 0x1C16CF4
	0x032DBB34 ADRP X0, 0xE4B000
	0x032DBB38 LDR X0, [X0 + 0x570]
	0x032DBB3C BL 0x1C16CF4
	0x032DBB40 ADRP X0, 0xE4A000
	0x032DBB44 LDR X0, [X0 + 0xC80]
	0x032DBB48 BL 0x1C16CF4
	0x032DBB4C ADRP X0, 0xE4B000
	0x032DBB50 LDR X0, [X0 + 0x578]
	0x032DBB54 BL 0x1C16CF4
	0x032DBB58 ADRP X0, 0xE4A000
	0x032DBB5C LDR X0, [X0 + 0xC88]
	0x032DBB60 BL 0x1C16CF4
	0x032DBB64 ADRP X0, 0xE4B000
	0x032DBB68 LDR X0, [X0 + 0x580]
	0x032DBB6C BL 0x1C16CF4
	0x032DBB70 ADRP X0, 0xE40000
	0x032DBB74 LDR X0, [X0 + 0xB60]
	0x032DBB78 BL 0x1C16CF4
	0x032DBB7C ADRP X0, 0xE20000
	0x032DBB80 LDR X0, [X0 + 0xC60]
	0x032DBB84 BL 0x1C16CF4
	0x032DBB88 ADRP X0, 0xE18000
	0x032DBB8C LDR X0, [X0 + 0x6C0]
	0x032DBB90 BL 0x1C16CF4
	0x032DBB94 ADRP X0, 0xE4B000
	0x032DBB98 LDR X0, [X0 + 0x588]
	0x032DBB9C BL 0x1C16CF4
	0x032DBBA0 ADRP X0, 0xE4B000
	0x032DBBA4 LDR X0, [X0 + 0x590]
	0x032DBBA8 BL 0x1C16CF4
	0x032DBBAC ADRP X0, 0xE4B000
	0x032DBBB0 LDR X0, [X0 + 0x598]
	0x032DBBB4 BL 0x1C16CF4
	0x032DBBB8 ADRP X0, 0xE4B000
	0x032DBBBC LDR X0, [X0 + 0x5A0]
	0x032DBBC0 BL 0x1C16CF4
	0x032DBBC4 ADRP X0, 0xE4B000
	0x032DBBC8 LDR X0, [X0 + 0x5A8]
	0x032DBBCC BL 0x1C16CF4
	0x032DBBD0 ADRP X0, 0xE4B000
	0x032DBBD4 LDR X0, [X0 + 0x5B0]
	0x032DBBD8 BL 0x1C16CF4
	0x032DBBDC ADRP X0, 0xE4B000
	0x032DBBE0 LDR X0, [X0 + 0x5B8]
	0x032DBBE4 BL 0x1C16CF4
	0x032DBBE8 ADRP X0, 0xE4B000
	0x032DBBEC LDR X0, [X0 + 0x5C0]
	0x032DBBF0 BL 0x1C16CF4
	0x032DBBF4 MOVZ W8, 0x1
	0x032DBBF8 STRB W8, [X20 + 0x966]
	0x032DBBFC STR X31, [X31 + 0x3A8]
	0x032DBC00 STR X31, [X31 + 0x3A0]
	0x032DBC04 LDR X8, [X19]
	0x032DBC08 MOV X0, X19
	0x032DBC0C LDR X9, [X8 + 0x258]
	0x032DBC10 LDR X1, [X8 + 0x260]
	0x032DBC14 BLR X9
	0x032DBC18 MOV X21, X31
	0x032DBC1C TBZ X0, 0xD, 0x32DC1F0
	0x032DBC20 ADRP X21, 0xE4A000
	0x032DBC24 ADRP X23, 0xE40000
	0x032DBC28 ADRP X20, 0xE18000
	0x032DBC2C LDR X21, [X21 + 0xC88]
	0x032DBC30 LDR X23, [X23 + 0xB60]
	0x032DBC34 LDR X20, [X20 + 0x6C0]
	0x032DBC38 ADD X1, X31, 0x39C
	0x032DBC3C ADD X2, X31, 0x3A8
	0x032DBC40 ADD X3, X31, 0x3A0
	0x032DBC44 MOV X0, X19
	0x032DBC48 STR X31, [X31 + 0x3A0]
	0x032DBC4C STR W31, [X31 + 0x39C]
	0x032DBC50 BL 0x1C72228
	0x032DBC54 LDR W28, [X31 + 0x39C]
	0x032DBC58 AND W8, W28, 0x700
	0x032DBC5C CMP W8, 0x200
	0x032DBC60 B.LS 0x32DBC84
	0x032DBC64 CMP W8, 0x300
	0x032DBC68 B.EQ 0x32DBC94
	0x032DBC6C CMP W8, 0x400
	0x032DBC70 B.EQ 0x32DBC9C
	0x032DBC74 CMP W8, 0x500
	0x032DBC78 B.NE 0x32DBCA4
	0x032DBC7C MOVZ W27, 0x5
	0x032DBC80 B 0x32DBCA8

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X23, 0x1102000
	014 Move W8, [X23+2423]
	015 Move W21, W3
	016 Move W20, W2
	017 Move X22, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0xE22000
	024 Move X0, [X0+2264]
	025 Call 0x1C17CF4
	026 Move X0, 0xE19000
	027 Move X0, [X0+2104]
	028 Call 0x1C17CF4
	029 Move X0, 0xE4B000
	030 Move X0, [X0+3392]
	031 Call 0x1C17CF4
	032 Move X0, 0xE44000
	033 Move X0, [X0+1528]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+2423], W8
	037 Compare X22, 0
	038 JumpIfEqual {164}
	039 Move X8, [X22+24]
	040 Move X25, 0xE19000
	041 Move X25, [X25+2104]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X27, 0xE22000
	044 Move X28, 0xE4B000
	045 Move X27, [X27+2264]
	046 Move X28, [X28+3392]
	047 Move W26, W31
	048 Move W29, 38
	049 Compare W26, 0
	050 JumpIfEqual {58}
	051 Compare X19, 0
	052 JumpIfEqual {164}
	053 Move X1, [X25]
	054 Move X0, X19
	055 Move X2, X31
	056 Call StringBuilder.Append, X0, X1
	057 Move W8, [X22+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add X8, X22, W26
	060 Move X0, [X8+32]
	061 Compare X0, 0
	062 JumpIfEqual {164}
	063 Move X8, [X0]
	064 Move X9, [X8+472]
	065 Move X1, [X8+480]
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Compare X0, 0
	068 JumpIfEqual {164}
	069 Move X8, [X0]
	070 And W1, W21, 1
	071 Move X24, X0
	072 Move X9, [X8+2328]
	073 Move X2, [X8+2336]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X23, X0
	076 Move X0, X24
	077 Move X1, X31
	078 Call Type.get_IsByRef, X0
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {109}
	083 Move TEMP, X21
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {109}
	087 Move X0, [X27]
	088 Move W1, 1
	089 Call 0x1C17D6C
	090 Compare X0, 0
	091 JumpIfEqual {164}
	092 Move W8, [X0+24]
	093 Move X1, X0
	094 Compare W8, 0
	095 JumpIfEqual {165}
	096 NotImplemented "Instruction STRH not yet implemented."
	097 Compare X23, 0
	098 JumpIfEqual {164}
	099 Move X0, X23
	100 Move X2, X31
	101 Call String.TrimEnd, X0, X1
	102 Compare X19, 0
	103 JumpIfEqual {164}
	104 Move X1, X0
	105 Move X0, X19
	106 Move X2, X31
	107 Call StringBuilder.Append, X0, X1
	108 Move X23, [X28]
	109 Compare X19, 0
	110 JumpIfEqual {164}
	111 Move X0, X19
	112 Move X1, X23
	113 Move X2, X31
	114 Call StringBuilder.Append, X0, X1
	115 Move X8, [X22+24]
	116 Add W26, W26, 1
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move TEMP, X20
	119 And TEMP, TEMP, 2
	120 Compare TEMP, 2
	121 JumpIfEqual {135}
	122 Move X20, [X31+80]
	123 Move X19, [X31+88]
	124 Move X22, [X31+64]
	125 Move X21, [X31+72]
	126 Move X24, [X31+48]
	127 Move X23, [X31+56]
	128 Move X26, [X31+32]
	129 Move X25, [X31+40]
	130 Move X28, [X31+16]
	131 Move X27, [X31+24]
	132 Move X29, [X31+96]
	133 Move X30, [X31+104]
	134 Return 
	135 Compare X8, 0
	136 JumpIfEqual {143}
	137 Compare X19, 0
	138 JumpIfEqual {164}
	139 Move X1, [X25]
	140 Move X0, X19
	141 Move X2, X31
	142 Call StringBuilder.Append, X0, X1
	143 Compare X19, 0
	144 JumpIfEqual {164}
	145 Move X8, 0xE44000
	146 Move X8, [X8+1528]
	147 Move X0, X19
	148 Move X20, [X31+80]
	149 Move X19, [X31+88]
	150 Move X22, [X31+64]
	151 Move X21, [X31+72]
	152 Move X1, [X8]
	153 Move X24, [X31+48]
	154 Move X23, [X31+56]
	155 Move X26, [X31+32]
	156 Move X25, [X31+40]
	157 Move X28, [X31+16]
	158 Move X27, [X31+24]
	159 Move X2, X31
	160 Move X29, [X31+96]
	161 Move X30, [X31+104]
	162 Call StringBuilder.Append, X0, X1
	163 Return 
	164 Call 0x1C17F20
	165 Call 0x1C17F28

Method: System.Void .ctor(System.Reflection.ParameterInfo pinfo, System.Reflection.MemberInfo member)

Disassembly:
	0x032DE4A8 MOV X19, X1
	0x032DE4AC MOV X20, X0
	0x032DE4B0 LDP X9, X1, [X8 + 0x1A8]
	0x032DE4B4 BLR X9
	0x032DE4B8 MOV X21, X0
	0x032DE4BC MOV X0, X20
	0x032DE4C0 BL 0x32DE298
	0x032DE4C4 LDR X8, [X20]
	0x032DE4C8 MOV X22, X0
	0x032DE4CC MOV X0, X20
	0x032DE4D0 LDP X9, X1, [X8 + 0x168]
	0x032DE4D4 BLR X9
	0x032DE4D8 MOV X23, X0
	0x032DE4DC MOVZ W1, 0x1
	0x032DE4E0 MOV X0, X20
	0x032DE4E4 BL 0x32DE324
	0x032DE4E8 MOV X4, X0
	0x032DE4EC MOV X0, X19
	0x032DE4F0 MOV X1, X21
	0x032DE4F4 MOV X2, X22
	0x032DE4F8 LDP X20, X19, [X31 + 0x20]
	0x032DE4FC LDP X22, X21, [X31 + 0x10]
	0x032DE500 MOVZ W5, 0x10
	0x032DE504 MOV X3, X23
	0x032DE508 MOV X6, X31
	0x032DE50C MOV X7, X31
	0x032DE510 LDP X30, X23, [X31], #0x30
	0x032DE514 B 0x32D45F0
	0x032DE518 ADRP X0, 0xE1A000
	0x032DE51C LDR X0, [X0 + 0x528]
	0x032DE520 BL 0x1C16D08
	0x032DE524 BL 0x1C16F10
	0x032DE528 MOV X19, X0
	0x032DE52C ADRP X0, 0xE3F000
	0x032DE530 LDR X0, [X0 + 0x2D8]
	0x032DE534 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X21, X2
	008 Move X19, X0
	009 Call ParameterInfo..ctor, X0
	010 Compare X20, 0
	011 JumpIfEqual {45}
	012 Move X8, [X20]
	013 Move X0, X20
	014 Move X9, [X8+472]
	015 Move X1, [X8+480]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move [X19+24], X0
	018 Move [X19+40], X21
	019 Move X8, [X20]
	020 Move X0, X20
	021 Move X9, [X8+456]
	022 Move X1, [X8+464]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move [X19+48], X0
	025 Move X8, [X20]
	026 Move X0, X20
	027 Move X9, [X8+488]
	028 Move X1, [X8+496]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move [X19+56], W0
	031 Move X8, [X20]
	032 Move X0, X20
	033 Move X9, [X8+424]
	034 Move X1, [X8+432]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X1, X20
	037 Move [X19+16], W0
	038 Call RuntimeParameterInfo.GetDefaultValueImpl, X0, X1
	039 Move [X19+32], X0
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return 
	045 Call 0x1C17F20

Method: System.Void .ctor(System.Type type, System.Reflection.MemberInfo member, System.Runtime.InteropServices.MarshalAsAttribute marshalAs)

Disassembly:
	0x032DE5FC MOVZ W2, 0x4
	0x032DE600 MOV X0, X19
	0x032DE604 BL 0x1C9443C
	0x032DE608 LDR W8, [X19 + 0x50]
	0x032DE60C ORR W8, W8, 0x4
	0x032DE610 STR W8, [X19 + 0x50]
	0x032DE614 LDR X0, [X19 + 0x40]
	0x032DE618 MOV X1, X31
	0x032DE61C MOV X2, X31
	0x032DE620 LDP X30, X19, [X31], #0x10
	0x032DE624 B 0x32CE528
	0x032DE628 STP X30, X19, [X31 - 0x10]!
	0x032DE62C LDR W8, [X0 + 0x50]
	0x032DE630 MOV X19, X0
	0x032DE634 ORN W8, W31, W8, 0x0
	0x032DE638 ANDS W31, W8, 0x6
	0x032DE63C B.EQ 0x32DE65C
	0x032DE640 ADD X1, X19, 0x20
	0x032DE644 MOVZ W2, 0x6
	0x032DE648 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X1
	007 Move X1, X31
	008 Move X19, X3
	009 Move X20, X2
	010 Move X22, X0
	011 Call ParameterInfo..ctor, X0
	012 Move TEMP, 0
	013 Not TEMP
	014 Move W8, TEMP
	015 Move W9, 8
	016 Move [X22+24], X21
	017 Move [X22+40], X20
	018 Move [X22+48], X31
	019 Move [X22+56], W8
	020 Move [X22+16], W9
	021 Move [X22+64], X19
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X22, [X31+16]
	025 Move X21, [X31+24]
	026 Move X30, [X31+48]
	027 Return 

Method: System.Object get_DefaultValue()

Disassembly:
	0x032DE64C BL 0x1C9443C
	0x032DE650 LDR W8, [X19 + 0x50]
	0x032DE654 ORR W8, W8, 0x6
	0x032DE658 STR W8, [X19 + 0x50]
	0x032DE65C LDR X0, [X19 + 0x38]
	0x032DE660 MOV X1, X31
	0x032DE664 MOV X2, X31
	0x032DE668 BL 0x32CE528
	0x032DE66C TBZ X0, 0x0, 0x32DE688
	0x032DE670 LDR X0, [X19 + 0x38]
	0x032DE674 CBZ X0, 0x32DE6D0
	0x032DE678 LDR X8, [X0]
	0x032DE67C LDR X2, [X8 + 0x3B8]
	0x032DE680 LDR X1, [X8 + 0x3C0]
	0x032DE684 B 0x32DE6C8
	0x032DE688 LDR X0, [X19 + 0x40]
	0x032DE68C CBZ X0, 0x32DE6D0
	0x032DE690 LDR X8, [X0]
	0x032DE694 LDR X9, [X8 + 0x358]
	0x032DE698 LDR X1, [X8 + 0x360]
	0x032DE69C BLR X9
	0x032DE6A0 CBZ X0, 0x32DE6D0
	0x032DE6A4 LDR X8, [X0 + 0x18]
	0x032DE6A8 CBZ W8, 0x32DE6D4
	0x032DE6AC MOV X9, INVALID
	0x032DE6B0 ADD X8, X9, X8, 0x20, LSL
	0x032DE6B4 ADD X8, X0, X8, 0x1D, ASR
	0x032DE6B8 LDR X0, [X8 + 0x20]
	0x032DE6BC CBZ X0, 0x32DE6D0
	0x032DE6C0 LDR X8, [X0]
	0x032DE6C4 LDP X2, X1, [X8 + 0x1D8]
	0x032DE6C8 LDP X30, X19, [X31], #0x10
	0x032DE6CC BR X2
	0x032DE6D0 BL 0x1C16F20
	0x032DE6D4 BL 0x1C16F28
	0x032DE6D8 STP X30, X19, [X31 - 0x10]!
	0x032DE6DC LDRB W8, [X0 + 0x50]
	0x032DE6E0 MOV X19, X0
	0x032DE6E4 TBNZ X8, 0x3, 0x32DE704
	0x032DE6E8 ADD X1, X19, 0x20
	0x032DE6EC MOVZ W2, 0x8
	0x032DE6F0 MOV X0, X19
	0x032DE6F4 BL 0x1C9443C
	0x032DE6F8 LDR W8, [X19 + 0x50]
	0x032DE6FC ORR W8, W8, 0x8
	0x032DE700 STR W8, [X19 + 0x50]
	0x032DE704 LDR X0, [X19 + 0x20]
	0x032DE708 LDP X30, X19, [X31], #0x10
	0x032DE70C RET
	0x032DE710 STP X30, X19, [X31 - 0x10]!
	0x032DE714 LDRB W8, [X0 + 0x50]
	0x032DE718 MOV X19, X0
	0x032DE71C TBNZ X8, 0x4, 0x32DE73C
	0x032DE720 ADD X1, X19, 0x20
	0x032DE724 MOVZ W2, 0x10
	0x032DE728 MOV X0, X19
	0x032DE72C BL 0x1C9443C
	0x032DE730 LDR W8, [X19 + 0x50]
	0x032DE734 ORR W8, W8, 0x10
	0x032DE738 STR W8, [X19 + 0x50]
	0x032DE73C LDR X0, [X19 + 0x28]
	0x032DE740 LDP X30, X19, [X31], #0x10
	0x032DE744 RET
	0x032DE748 STP X30, X19, [X31 - 0x10]!
	0x032DE74C LDRB W8, [X0 + 0x50]
	0x032DE750 MOV X19, X0
	0x032DE754 TBNZ X8, 0x5, 0x32DE774
	0x032DE758 ADD X1, X19, 0x20
	0x032DE75C MOVZ W2, 0x20
	0x032DE760 MOV X0, X19
	0x032DE764 BL 0x1C9443C
	0x032DE768 LDR W8, [X19 + 0x50]
	0x032DE76C ORR W8, W8, 0x20
	0x032DE770 STR W8, [X19 + 0x50]
	0x032DE774 LDR X0, [X19 + 0x30]
	0x032DE778 LDP X30, X19, [X31], #0x10
	0x032DE77C RET
	0x032DE780 STR X30, [X31 - 0x20]!
	0x032DE784 STP X20, X19, [X31 + 0x10]
	0x032DE788 LDRB W8, [X0 + 0x50]
	0x032DE78C MOV X19, X0
	0x032DE790 MOV W20, W1
	0x032DE794 TBNZ X8, 0x1, 0x32DE7B4
	0x032DE798 ADD X1, X19, 0x20
	0x032DE79C MOVZ W2, 0x2
	0x032DE7A0 MOV X0, X19
	0x032DE7A4 BL 0x1C9443C
	0x032DE7A8 LDR W8, [X19 + 0x50]
	0x032DE7AC ORR W8, W8, 0x2
	0x032DE7B0 STR W8, [X19 + 0x50]
	0x032DE7B4 LDR X0, [X19 + 0x38]
	0x032DE7B8 MOV X1, X31
	0x032DE7BC MOV X2, X31
	0x032DE7C0 BL 0x32CE528
	0x032DE7C4 MOV W8, W0
	0x032DE7C8 MOV X0, X31
	0x032DE7CC TBZ X8, 0x0, 0x32DE7F4
	0x032DE7D0 TBNZ X20, 0x0, 0x32DE7F0
	0x032DE7D4 LDR X0, [X19 + 0x38]
	0x032DE7D8 CBZ X0, 0x32DE800
	0x032DE7DC MOV X1, X31
	0x032DE7E0 BL 0x32CE454
	0x032DE7E4 MOV W8, W0
	0x032DE7E8 MOV X0, X31
	0x032DE7EC TBZ X8, 0x0, 0x32DE7F4
	0x032DE7F0 LDR X0, [X19 + 0x38]
	0x032DE7F4 LDP X20, X19, [X31 + 0x10]
	0x032DE7F8 LDR X30, [X31], #0x20
	0x032DE7FC RET
	0x032DE800 BL 0x1C16F20
	0x032DE804 STR X30, [X31 - 0x50]!
	0x032DE808 STP X26, X25, [X31 + 0x10]
	0x032DE80C STP X24, X23, [X31 + 0x20]
	0x032DE810 STP X22, X21, [X31 + 0x30]
	0x032DE814 STP X20, X19, [X31 + 0x40]
	0x032DE818 ADRP X20, 0x10FE000
	0x032DE81C LDRB W8, [X20 + 0x983]
	0x032DE820 MOV X19, X0
	0x032DE824 TBNZ X8, 0x0, 0x32DE848
	0x032DE828 ADRP X0, 0xE48000
	0x032DE82C LDR X0, [X0 + 0x6E0]
	0x032DE830 BL 0x1C16CF4
	0x032DE834 ADRP X0, 0xE48000
	0x032DE838 LDR X0, [X0 + 0x508]
	0x032DE83C BL 0x1C16CF4
	0x032DE840 MOVZ W8, 0x1
	0x032DE844 STRB W8, [X20 + 0x983]
	0x032DE848 LDR W8, [X19 + 0x50]
	0x032DE84C ORN W8, W31, W8, 0x0
	0x032DE850 ANDS W31, W8, 0x6
	0x032DE854 B.EQ 0x32DE874
	0x032DE858 ADD X1, X19, 0x20
	0x032DE85C MOVZ W2, 0x6
	0x032DE860 MOV X0, X19
	0x032DE864 BL 0x1C9443C
	0x032DE868 LDR W8, [X19 + 0x50]
	0x032DE86C ORR W8, W8, 0x6
	0x032DE870 STR W8, [X19 + 0x50]
	0x032DE874 LDR X0, [X19 + 0x38]
	0x032DE878 MOV X1, X31
	0x032DE87C MOV X2, X31
	0x032DE880 BL 0x32CE528
	0x032DE884 TBZ X0, 0x0, 0x32DE8B0
	0x032DE888 LDR X0, [X19 + 0x38]
	0x032DE88C CBZ X0, 0x32DE9B8
	0x032DE890 LDR X8, [X0]
	0x032DE894 LDR X9, [X8 + 0x358]
	0x032DE898 LDR X1, [X8 + 0x360]
	0x032DE89C BLR X9
	0x032DE8A0 CBZ X0, 0x32DE9B8
	0x032DE8A4 LDR W22, [X0 + 0x18]
	0x032DE8A8 MOV X20, X0
	0x032DE8AC B 0x32DE8EC
	0x032DE8B0 LDR X0, [X19 + 0x40]
	0x032DE8B4 MOV X1, X31
	0x032DE8B8 MOV X2, X31
	0x032DE8BC BL 0x32CE528
	0x032DE8C0 TBZ X0, 0x0, 0x32DE974
	0x032DE8C4 LDR X0, [X19 + 0x40]
	0x032DE8C8 CBZ X0, 0x32DE9B8
	0x032DE8CC LDR X8, [X0]
	0x032DE8D0 LDR X9, [X8 + 0x358]
	0x032DE8D4 LDR X1, [X8 + 0x360]
	0x032DE8D8 BLR X9
	0x032DE8DC CBZ X0, 0x32DE9B8
	0x032DE8E0 LDR W8, [X0 + 0x18]
	0x032DE8E4 MOV X20, X0
	0x032DE8E8 SUB W22, W8, 0x1
	0x032DE8EC ADRP X8, 0xE48000
	0x032DE8F0 LDR X8, [X8 + 0x508]
	0x032DE8F4 MOV W1, W22
	0x032DE8F8 LDR X0, [X8]
	0x032DE8FC BL 0x1C16D6C
	0x032DE900 CMP W22, 0x1
	0x032DE904 MOV X21, X0
	0x032DE908 B.LT 0x32DE998
	0x032DE90C MOV X23, X31
	0x032DE910 MOV W24, W22
	0x032DE914 ADD X25, X21, 0x20
	0x032DE918 ADD X26, X20, 0x20
	0x032DE91C LDR W8, [X20 + 0x18]
	0x032DE920 CMP X23, X8
	0x032DE924 B.CS 0x32DE9B4
	0x032DE928 LDR X0, [X26, X23, LSL #3]
	0x032DE92C MOV X1, X19
	0x032DE930 BL 0x32DE180
	0x032DE934 CBZ X21, 0x32DE9B8
	0x032DE938 MOV X22, X0
	0x032DE93C CBZ X0, 0x32DE954
	0x032DE940 LDR X8, [X21]
	0x032DE944 MOV X0, X22
	0x032DE948 LDR X1, [X8 + 0x40]
	0x032DE94C BL 0x1C16E00
	0x032DE950 CBZ X0, 0x32DE9BC
	0x032DE954 LDR W8, [X21 + 0x18]
	0x032DE958 CMP X23, X8
	0x032DE95C B.CS 0x32DE9B4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X22+40]
	010 Move X20, 0x10FF000
	011 Move X21, 0xE48000
	012 Move X23, 0xE16000
	013 Move [X31+24], X8
	014 Move W8, [X20+2424]
	015 Move X21, [X21+320]
	016 Move X23, [X23+1728]
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {54}
	022 Move X0, 0xE49000
	023 Move X0, [X0+1648]
	024 Call 0x1C17CF4
	025 Move X0, 0xE49000
	026 Move X0, [X0+1656]
	027 Call 0x1C17CF4
	028 Move X0, 0xE47000
	029 Move X0, [X0+3896]
	030 Call 0x1C17CF4
	031 Move X0, 0xE49000
	032 Move X0, [X0+1664]
	033 Call 0x1C17CF4
	034 Move X0, 0xE49000
	035 Move X0, [X0+1672]
	036 Call 0x1C17CF4
	037 Move X0, 0xE48000
	038 Move X0, [X0+320]
	039 Call 0x1C17CF4
	040 Move X0, 0xE3E000
	041 Move X0, [X0+1520]
	042 Call 0x1C17CF4
	043 Move X0, 0xE49000
	044 Move X0, [X0+1680]
	045 Call 0x1C17CF4
	046 Move X0, 0xE49000
	047 Move X0, [X0+1688]
	048 Call 0x1C17CF4
	049 Move X0, 0xE16000
	050 Move X0, [X0+1728]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X20+2424], W8
	054 Move X0, [X23]
	055 Move X20, [X19+24]
	056 Move X21, [X21]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X21
	062 Move X1, X31
	063 Call Type.GetTypeFromHandle, X0
	064 Move X1, X0
	065 Move X0, X20
	066 Move X2, X31
	067 Call Type.op_Equality, X0, X1
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {92}
	072 Move X8, 0xE49000
	073 Move X0, [X23]
	074 Move X20, [X19+24]
	075 Move X8, [X8+1680]
	076 Move W9, [X0+224]
	077 Move X21, [X8]
	078 Compare W9, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, X21
	082 Move X1, X31
	083 Call Type.GetTypeFromHandle, X0
	084 Move X1, X0
	085 Move X0, X20
	086 Move X2, X31
	087 Call Type.op_Equality, X0, X1
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {137}
	092 Move X8, 0xE49000
	093 Move X0, [X23]
	094 Move X8, [X8+1672]
	095 Move W9, [X0+224]
	096 Move X20, [X8]
	097 Compare W9, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move X0, X20
	101 Move X1, X31
	102 Call Type.GetTypeFromHandle, X0
	103 Move X8, [X19]
	104 Move X1, X0
	105 Move X0, X19
	106 Move W2, W31
	107 Move X9, [X8+536]
	108 Move X3, [X8+544]
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Compare X0, 0
	111 JumpIfEqual {229}
	112 Move X8, 0xE49000
	113 Move X8, [X8+1664]
	114 Move X20, X0
	115 Move X21, [X8]
	116 Move X1, X21
	117 Call 0x1C17E00
	118 Compare X0, 0
	119 JumpIfEqual {230}
	120 Move X8, [X0+24]
	121 Compare X8, 0
	122 JumpIfEqual {217}
	123 Compare W8, 0
	124 JumpIfEqual {233}
	125 Move X8, [X0+32]
	126 Compare X8, 0
	127 JumpIfEqual {229}
	128 Move X10, 0xE3E000
	129 Move X9, [X8+16]
	130 Move X8, [X8+24]
	131 Move X10, [X10+1520]
	132 Add X1, X31, 8
	133 Move [X31+8], X9
	134 Move [X31+16], X8
	135 Move X0, [X10]
	136 Call 0x1C17E04
	137 Move X8, 0xE47000
	138 Move X0, [X23]
	139 Move X20, [X19+24]
	140 Move X8, [X8+3896]
	141 Move W9, [X0+224]
	142 Move X21, [X8]
	143 Compare W9, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Move X0, X21
	147 Move X1, X31
	148 Call Type.GetTypeFromHandle, X0
	149 Move X1, X0
	150 Move X0, X20
	151 Move X2, X31
	152 Call Type.op_Equality, X0, X1
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfEqual {177}
	157 Move X8, 0xE49000
	158 Move X0, [X23]
	159 Move X20, [X19+24]
	160 Move X8, [X8+1688]
	161 Move W9, [X0+224]
	162 Move X21, [X8]
	163 Compare W9, 0
	164 JumpIfNotEqual {166}
	165 Call 0x1C17DFC
	166 Move X0, X21
	167 Move X1, X31
	168 Call Type.GetTypeFromHandle, X0
	169 Move X1, X0
	170 Move X0, X20
	171 Move X2, X31
	172 Call Type.op_Equality, X0, X1
	173 Move TEMP, X0
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfNotEqual {217}
	177 Move X8, 0xE49000
	178 Move X0, [X23]
	179 Move X8, [X8+1656]
	180 Move W9, [X0+224]
	181 Move X20, [X8]
	182 Compare W9, 0
	183 JumpIfNotEqual {185}
	184 Call 0x1C17DFC
	185 Move X0, X20
	186 Move X1, X31
	187 Call Type.GetTypeFromHandle, X0
	188 Move X8, [X19]
	189 Move X1, X0
	190 Move X0, X19
	191 Move W2, W31
	192 Move X9, [X8+536]
	193 Move X3, [X8+544]
	194 NotImplemented "Instruction BLR not yet implemented."
	195 Compare X0, 0
	196 JumpIfEqual {229}
	197 Move X8, 0xE49000
	198 Move X8, [X8+1648]
	199 Move X20, X0
	200 Move X21, [X8]
	201 Move X1, X21
	202 Call 0x1C17E00
	203 Compare X0, 0
	204 JumpIfEqual {230}
	205 Move X8, [X0+24]
	206 Compare X8, 0
	207 JumpIfEqual {217}
	208 Compare W8, 0
	209 JumpIfEqual {233}
	210 Move X0, [X0+32]
	211 Compare X0, 0
	212 JumpIfEqual {229}
	213 Move X8, [X0]
	214 Move X9, [X8+376]
	215 Move X1, [X8+384]
	216 NotImplemented "Instruction BLR not yet implemented."
	217 Move X0, [X19+32]
	218 Move X8, [X22+40]
	219 Move X9, [X31+24]
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move X20, [X31+64]
	222 Move X19, [X31+72]
	223 Move X22, [X31+48]
	224 Move X21, [X31+56]
	225 Move X30, [X31+32]
	226 Move X23, [X31+40]
	227 Add X31, X31, 80
	228 Return X0
	229 Call 0x1C17F20
	230 Move X0, X20
	231 Move X1, X21
	232 Call 0x1C181E0
	233 Call 0x1C17F28
	234 Call 0x3EB2B20

Method: System.Object[] GetCustomAttributes(System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x032DE960 STR X22, [X25, X23, LSL #3]
	0x032DE964 ADD X23, X23, 0x1
	0x032DE968 CMP X24, X23
	0x032DE96C B.NE 0x32DE91C
	0x032DE970 B 0x32DE998
	0x032DE974 ADRP X19, 0xE48000
	0x032DE978 LDR X19, [X19 + 0x6E0]
	0x032DE97C LDR X0, [X19]
	0x032DE980 LDR W8, [X0 + 0xE0]
	0x032DE984 CBNZ W8, 0x32DE990
	0x032DE988 BL 0x1C16DFC
	0x032DE98C LDR X0, [X19]
	0x032DE990 LDR X8, [X0 + 0xB8]
	0x032DE994 LDR X21, [X8]
	0x032DE998 MOV X0, X21
	0x032DE99C LDP X20, X19, [X31 + 0x40]
	0x032DE9A0 LDP X22, X21, [X31 + 0x30]
	0x032DE9A4 LDP X24, X23, [X31 + 0x20]
	0x032DE9A8 LDP X26, X25, [X31 + 0x10]
	0x032DE9AC LDR X30, [X31], #0x50
	0x032DE9B0 RET
	0x032DE9B4 BL 0x1C16F28
	0x032DE9B8 BL 0x1C16F20
	0x032DE9BC BL 0x1C16F44
	0x032DE9C0 MOV X1, X31
	0x032DE9C4 BL 0x1C16DEC
	0x032DE9C8 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10FF000
	007 Move X22, 0xE49000
	008 Move W8, [X21+2425]
	009 Move X22, [X22+992]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE49000
	017 Move X0, [X0+992]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2425], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move W2, W31
	033 Move X3, X31
	034 Move X30, [X31+48]
	035 Call MonoCustomAttrs.GetCustomAttributes, X0, X1, X2
	036 Return X0

Method: System.Object GetDefaultValueImpl(System.Reflection.ParameterInfo pinfo)

Disassembly:
	0x032DE538 MOV X1, X0
	0x032DE53C MOV X0, X19
	0x032DE540 MOV X2, X31
	0x032DE544 BL 0x330E100
	0x032DE548 ADRP X0, 0xE48000
	0x032DE54C LDR X0, [X0 + 0x6D8]
	0x032DE550 BL 0x1C16D08
	0x032DE554 MOV X1, X0
	0x032DE558 MOV X0, X19
	0x032DE55C BL 0x1C16DEC
	0x032DE560 MOVZ W1, 0x1
	0x032DE564 B 0x32DE324
	0x032DE568 STR X30, [X31 - 0x20]!
	0x032DE56C STP X20, X19, [X31 + 0x10]
	0x032DE570 LDR W8, [X0 + 0x50]
	0x032DE574 BICS W31, W1, W8, 0x0
	0x032DE578 B.EQ 0x32DE59C
	0x032DE57C MOV W20, W1
	0x032DE580 ADD X1, X0, 0x20
	0x032DE584 MOV W2, W20
	0x032DE588 MOV X19, X0
	0x032DE58C BL 0x1C9443C
	0x032DE590 LDR W8, [X19 + 0x50]
	0x032DE594 ORR W8, W8, W20, 0x0
	0x032DE598 STR W8, [X19 + 0x50]
	0x032DE59C LDP X20, X19, [X31 + 0x10]
	0x032DE5A0 LDR X30, [X31], #0x20
	0x032DE5A4 RET
	0x032DE5A8 STP X30, X19, [X31 - 0x10]!
	0x032DE5AC LDRB W8, [X0 + 0x50]
	0x032DE5B0 MOV X19, X0
	0x032DE5B4 TBNZ X8, 0x1, 0x32DE5D4
	0x032DE5B8 ADD X1, X19, 0x20
	0x032DE5BC MOVZ W2, 0x2
	0x032DE5C0 MOV X0, X19
	0x032DE5C4 BL 0x1C9443C
	0x032DE5C8 LDR W8, [X19 + 0x50]
	0x032DE5CC ORR W8, W8, 0x2
	0x032DE5D0 STR W8, [X19 + 0x50]
	0x032DE5D4 LDR X0, [X19 + 0x38]
	0x032DE5D8 MOV X1, X31
	0x032DE5DC MOV X2, X31
	0x032DE5E0 LDP X30, X19, [X31], #0x10
	0x032DE5E4 B 0x32CE528
	0x032DE5E8 STP X30, X19, [X31 - 0x10]!
	0x032DE5EC LDRB W8, [X0 + 0x50]
	0x032DE5F0 MOV X19, X0
	0x032DE5F4 TBNZ X8, 0x2, 0x32DE614
	0x032DE5F8 ADD X1, X19, 0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x10FF000
	007 Move X20, 0xE49000
	008 Move X21, 0xE16000
	009 Move W8, [X22+2426]
	010 Move X20, [X20+1632]
	011 Move X21, [X21+1728]
	012 Move X19, X1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xE49000
	018 Move X0, [X0+1632]
	019 Call 0x1C17CF4
	020 Move X0, 0xE16000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move X0, 0xE49000
	024 Move X0, [X0+1640]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+2426], W8
	028 Move X0, [X21]
	029 Move X20, [X20]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Move X1, X31
	036 Call Type.GetTypeFromHandle, X0
	037 Compare X0, 0
	038 JumpIfEqual {59}
	039 Move X9, 0xE49000
	040 Move X8, [X0]
	041 Move X9, [X9+1640]
	042 Move W2, 36
	043 Move X3, [X8+1664]
	044 Move X1, [X9]
	045 Move X9, [X8+1656]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Compare X0, 0
	048 JumpIfEqual {59}
	049 Move X8, [X0]
	050 Move X1, X19
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X3, [X8+712]
	056 Move X2, [X8+720]
	057 Move X30, [X31+48]
	058 CallNoReturn X3
	059 Call 0x1C17F20

Method: System.Boolean IsDefined(System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x032DE9CC STP X20, X19, [X31 + 0x10]
	0x032DE9D0 LDRB W8, [X0 + 0x50]
	0x032DE9D4 MOV X19, X0
	0x032DE9D8 MOV W20, W1
	0x032DE9DC TBNZ X8, 0x2, 0x32DE9FC
	0x032DE9E0 ADD X1, X19, 0x20
	0x032DE9E4 MOVZ W2, 0x4
	0x032DE9E8 MOV X0, X19
	0x032DE9EC BL 0x1C9443C
	0x032DE9F0 LDR W8, [X19 + 0x50]
	0x032DE9F4 ORR W8, W8, 0x4
	0x032DE9F8 STR W8, [X19 + 0x50]
	0x032DE9FC LDR X0, [X19 + 0x40]
	0x032DEA00 MOV X1, X31
	0x032DEA04 MOV X2, X31
	0x032DEA08 BL 0x32CE528
	0x032DEA0C MOV W8, W0
	0x032DEA10 MOV X0, X31
	0x032DEA14 TBZ X8, 0x0, 0x32DEA3C
	0x032DEA18 TBNZ X20, 0x0, 0x32DEA38
	0x032DEA1C LDR X0, [X19 + 0x40]
	0x032DEA20 CBZ X0, 0x32DEA48
	0x032DEA24 MOV X1, X31
	0x032DEA28 BL 0x32CE454
	0x032DEA2C MOV W8, W0
	0x032DEA30 MOV X0, X31
	0x032DEA34 TBZ X8, 0x0, 0x32DEA3C
	0x032DEA38 LDR X0, [X19 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x10FF000
	008 Move X23, 0xE49000
	009 Move W8, [X22+2427]
	010 Move X23, [X23+992]
	011 Move W21, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xE49000
	019 Move X0, [X0+992]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2427], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 And W2, W21, 1
	029 Move X0, X20
	030 Move X1, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X3, X31
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Call MonoCustomAttrs.IsDefined, X0, X1, X2
	039 Return X0

Method: System.Object[] GetPseudoCustomAttributes()

Disassembly:
	0x032DEA3C LDP X20, X19, [X31 + 0x10]
	0x032DEA40 LDR X30, [X31], #0x20
	0x032DEA44 RET
	0x032DEA48 BL 0x1C16F20
	0x032DEA4C STR X30, [X31 - 0x30]!
	0x032DEA50 STP X22, X21, [X31 + 0x10]
	0x032DEA54 STP X20, X19, [X31 + 0x20]
	0x032DEA58 ADRP X21, 0x10FE000
	0x032DEA5C ADRP X22, 0xE48000
	0x032DEA60 LDRB W8, [X21 + 0x984]
	0x032DEA64 LDR X22, [X22 + 0x3E0]
	0x032DEA68 MOV X19, X1
	0x032DEA6C MOV X20, X0
	0x032DEA70 TBNZ X8, 0x0, 0x32DEA88
	0x032DEA74 ADRP X0, 0xE48000
	0x032DEA78 LDR X0, [X0 + 0x3E0]
	0x032DEA7C BL 0x1C16CF4
	0x032DEA80 MOVZ W8, 0x1
	0x032DEA84 STRB W8, [X21 + 0x984]
	0x032DEA88 LDR X0, [X22]
	0x032DEA8C LDR W8, [X0 + 0xE0]
	0x032DEA90 CBNZ W8, 0x32DEA98
	0x032DEA94 BL 0x1C16DFC
	0x032DEA98 MOV X0, X20
	0x032DEA9C MOV X1, X19
	0x032DEAA0 LDP X20, X19, [X31 + 0x20]
	0x032DEAA4 LDP X22, X21, [X31 + 0x10]
	0x032DEAA8 MOV W2, W31
	0x032DEAAC MOV X3, X31
	0x032DEAB0 LDR X30, [X31], #0x30
	0x032DEAB4 B 0x33C9FDC
	0x032DEAB8 STP X30, X21, [X31 - 0x20]!
	0x032DEABC STP X20, X19, [X31 + 0x10]
	0x032DEAC0 ADRP X20, 0x10FE000
	0x032DEAC4 ADRP X21, 0xE48000
	0x032DEAC8 LDRB W8, [X20 + 0x985]
	0x032DEACC LDR X21, [X21 + 0x3E0]
	0x032DEAD0 MOV X19, X0
	0x032DEAD4 TBNZ X8, 0x0, 0x32DEAEC
	0x032DEAD8 ADRP X0, 0xE48000
	0x032DEADC LDR X0, [X0 + 0x3E0]
	0x032DEAE0 BL 0x1C16CF4
	0x032DEAE4 MOVZ W8, 0x1
	0x032DEAE8 STRB W8, [X20 + 0x985]
	0x032DEAEC LDR X0, [X21]
	0x032DEAF0 LDR W8, [X0 + 0xE0]
	0x032DEAF4 CBNZ W8, 0x32DEAFC
	0x032DEAF8 BL 0x1C16DFC
	0x032DEAFC MOV X0, X19
	0x032DEB00 LDP X20, X19, [X31 + 0x10]
	0x032DEB04 MOV W1, W31
	0x032DEB08 MOV X2, X31
	0x032DEB0C LDP X30, X21, [X31], #0x20
	0x032DEB10 B 0x33C82AC
	0x032DEB14 STR X30, [X31 - 0x30]!
	0x032DEB18 STP X22, X21, [X31 + 0x10]
	0x032DEB1C STP X20, X19, [X31 + 0x20]
	0x032DEB20 ADRP X21, 0x10FE000
	0x032DEB24 ADRP X22, 0xE48000
	0x032DEB28 LDRB W8, [X21 + 0x986]
	0x032DEB2C LDR X22, [X22 + 0x3E0]
	0x032DEB30 MOV X19, X1
	0x032DEB34 MOV X20, X0
	0x032DEB38 TBNZ X8, 0x0, 0x32DEB50
	0x032DEB3C ADRP X0, 0xE48000
	0x032DEB40 LDR X0, [X0 + 0x3E0]
	0x032DEB44 BL 0x1C16CF4
	0x032DEB48 MOVZ W8, 0x1
	0x032DEB4C STRB W8, [X21 + 0x986]
	0x032DEB50 LDR X0, [X22]
	0x032DEB54 LDR W8, [X0 + 0xE0]
	0x032DEB58 CBNZ W8, 0x32DEB60
	0x032DEB5C BL 0x1C16DFC
	0x032DEB60 MOV X0, X20
	0x032DEB64 MOV X1, X19
	0x032DEB68 LDP X20, X19, [X31 + 0x20]
	0x032DEB6C LDP X22, X21, [X31 + 0x10]
	0x032DEB70 MOV W2, W31
	0x032DEB74 MOV X3, X31
	0x032DEB78 LDR X30, [X31], #0x30
	0x032DEB7C B 0x33C7388
	0x032DEB80 LDR X8, [X0]
	0x032DEB84 MOV X4, X2
	0x032DEB88 MOV W2, W31
	0x032DEB8C MOV X3, X31
	0x032DEB90 LDR X7, [X8 + 0x2D8]
	0x032DEB94 LDR X6, [X8 + 0x2E0]
	0x032DEB98 MOV X5, X31
	0x032DEB9C BR X7
	0x032DEBA0 STP X30, X25, [X31 - 0x40]!
	0x032DEBA4 STP X24, X23, [X31 + 0x10]
	0x032DEBA8 STP X22, X21, [X31 + 0x20]
	0x032DEBAC STP X20, X19, [X31 + 0x30]
	0x032DEBB0 LDR X8, [X0]
	0x032DEBB4 MOV W21, W2
	0x032DEBB8 MOV X22, X1
	0x032DEBBC MOVZ W1, 0x1
	0x032DEBC0 LDR X9, [X8 + 0x298]
	0x032DEBC4 LDR X2, [X8 + 0x2A0]
	0x032DEBC8 MOV X19, X5
	0x032DEBCC MOV X23, X4
	0x032DEBD0 MOV X20, X3
	0x032DEBD4 MOV X25, X0
	0x032DEBD8 BLR X9
	0x032DEBDC MOV X1, X31
	0x032DEBE0 MOV X2, X31
	0x032DEBE4 MOV X24, X0
	0x032DEBE8 BL 0x32C2354
	0x032DEBEC TBNZ X0, 0x0, 0x32DEC6C
	0x032DEBF0 CBZ X23, 0x32DEC2C
	0x032DEBF4 LDR X8, [X23 + 0x18]
	0x032DEBF8 CBZ X8, 0x32DEC2C
	0x032DEBFC CBZ X24, 0x32DECF0
	0x032DEC00 LDR X8, [X24]
	0x032DEC04 LDR X9, [X8 + 0x328]
	0x032DEC08 LDR X6, [X8 + 0x330]
	0x032DEC0C MOV X0, X24
	0x032DEC10 MOV X1, X22
	0x032DEC14 MOV W2, W21
	0x032DEC18 MOV X3, X20
	0x032DEC1C MOV X4, X23
	0x032DEC20 MOV X5, X19
	0x032DEC24 BLR X9
	0x032DEC28 B 0x32DEC58
	0x032DEC2C CBZ X24, 0x32DECEC
	0x032DEC30 LDR X8, [X24]
	0x032DEC34 LDR X9, [X8 + 0x328]
	0x032DEC38 LDR X6, [X8 + 0x330]
	0x032DEC3C MOV X0, X24
	0x032DEC40 MOV X1, X22
	0x032DEC44 MOV W2, W21
	0x032DEC48 MOV X3, X20
	0x032DEC4C MOV X4, X31
	0x032DEC50 MOV X5, X19
	0x032DEC54 BLR X9
	0x032DEC58 LDP X20, X19, [X31 + 0x30]
	0x032DEC5C LDP X22, X21, [X31 + 0x20]
	0x032DEC60 LDP X24, X23, [X31 + 0x10]
	0x032DEC64 LDP X30, X25, [X31], #0x40
	0x032DEC68 RET
	0x032DEC6C LDR X8, [X25]
	0x032DEC70 MOV X0, X25
	0x032DEC74 LDP X9, X1, [X8 + 0x1A8]
	0x032DEC78 BLR X9
	0x032DEC7C MOV X19, X0
	0x032DEC80 ADRP X0, 0xE48000
	0x032DEC84 LDR X0, [X0 + 0x6E8]
	0x032DEC88 BL 0x1C16D08
	0x032DEC8C MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x10FF000
	007 Move W8, [X20+2428]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0xE49000
	014 Move X0, [X0+1696]
	015 Call 0x1C17CF4
	016 Move X0, 0xE16000
	017 Move X0, [X0+2512]
	018 Call 0x1C17CF4
	019 Move X0, 0xE49000
	020 Move X0, [X0+1704]
	021 Call 0x1C17CF4
	022 Move X0, 0xE49000
	023 Move X0, [X0+1712]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+2428], W8
	027 Move X0, X19
	028 Move X1, X31
	029 Call ParameterInfo.get_IsIn, X0
	030 Move W20, W0
	031 Move X0, X19
	032 Move X1, X31
	033 Call ParameterInfo.get_IsOut, X0
	034 And W8, W20, 1
	035 Move W9, 1
	036 NotImplemented "Instruction CINC not yet implemented."
	037 And W31, W0, 1
	038 Move X0, X19
	039 Move X1, X31
	040 NotImplemented "Instruction CSEL not yet implemented."
	041 Call ParameterInfo.get_IsOptional, X0
	042 Move X8, [X19+64]
	043 And W9, W0, 1
	044 Add W1, W20, W9
	045 Compare X8, 0
	046 JumpIfEqual {48}
	047 Add W1, W1, 1
	048 Compare W1, 0
	049 JumpIfEqual {163}
	050 Move X8, 0xE16000
	051 Move X8, [X8+2512]
	052 Move X0, [X8]
	053 Call 0x1C17D6C
	054 Move X20, X0
	055 Move X0, X19
	056 Move X1, X31
	057 Call ParameterInfo.get_IsIn, X0
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {84}
	062 Move X8, 0xE49000
	063 Move X8, [X8+1696]
	064 Move X0, [X8]
	065 Call 0x1C17F10
	066 Move X1, X31
	067 Move X21, X0
	068 Call InAttribute..ctor, X0
	069 Compare X20, 0
	070 JumpIfEqual {171}
	071 Compare X21, 0
	072 JumpIfEqual {79}
	073 Move X8, [X20]
	074 Move X0, X21
	075 Move X1, [X8+64]
	076 Call 0x1C17E00
	077 Compare X0, 0
	078 JumpIfEqual {173}
	079 Move W8, [X20+24]
	080 Compare W8, 0
	081 JumpIfEqual {172}
	082 Move W22, 1
	083 Move [X20+32], X21
	084 Move W22, W31
	085 Move X0, X19
	086 Move X1, X31
	087 Call ParameterInfo.get_IsOut, X0
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {114}
	092 Move X8, 0xE49000
	093 Move X8, [X8+1712]
	094 Move X0, [X8]
	095 Call 0x1C17F10
	096 Move X1, X31
	097 Move X21, X0
	098 Call OutAttribute..ctor, X0
	099 Compare X20, 0
	100 JumpIfEqual {171}
	101 Compare X21, 0
	102 JumpIfEqual {109}
	103 Move X8, [X20]
	104 Move X0, X21
	105 Move X1, [X8+64]
	106 Call 0x1C17E00
	107 Compare X0, 0
	108 JumpIfEqual {173}
	109 Move W8, [X20+24]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Add X8, X20, W22
	112 Add W22, W22, 1
	113 Move [X8+32], X21
	114 Move X0, X19
	115 Move X1, X31
	116 Call ParameterInfo.get_IsOptional, X0
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfNotEqual {143}
	121 Move X8, 0xE49000
	122 Move X8, [X8+1704]
	123 Move X0, [X8]
	124 Call 0x1C17F10
	125 Move X1, X31
	126 Move X21, X0
	127 Call OptionalAttribute..ctor, X0
	128 Compare X20, 0
	129 JumpIfEqual {171}
	130 Compare X21, 0
	131 JumpIfEqual {138}
	132 Move X8, [X20]
	133 Move X0, X21
	134 Move X1, [X8+64]
	135 Call 0x1C17E00
	136 Compare X0, 0
	137 JumpIfEqual {173}
	138 Move W8, [X20+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Add X8, X20, W22
	141 Add W22, W22, 1
	142 Move [X8+32], X21
	143 Move X0, [X19+64]
	144 Compare X0, 0
	145 JumpIfEqual {164}
	146 Move X1, X31
	147 Call MarshalAsAttribute.Copy, X0
	148 Compare X20, 0
	149 JumpIfEqual {171}
	150 Move X19, X0
	151 Compare X0, 0
	152 JumpIfEqual {159}
	153 Move X8, [X20]
	154 Move X0, X19
	155 Move X1, [X8+64]
	156 Call 0x1C17E00
	157 Compare X0, 0
	158 JumpIfEqual {173}
	159 Move W8, [X20+24]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Add X8, X20, W22
	162 Move [X8+32], X19
	163 Move X20, X31
	164 Move X0, X20
	165 Move X20, [X31+32]
	166 Move X19, [X31+40]
	167 Move X22, [X31+16]
	168 Move X21, [X31+24]
	169 Move X30, [X31+48]
	170 Return X0
	171 Call 0x1C17F20
	172 Call 0x1C17F28
	173 Call 0x1C17F44
	174 Move X1, X31
	175 Call 0x1C17DEC

Method: System.Reflection.CustomAttributeData[] GetPseudoCustomAttributesData()

Disassembly:
	0x032DEC90 ADRP X0, 0xE1D000
	0x032DEC94 LDR X0, [X0 + 0x9B0]
	0x032DEC98 BL 0x1C16D08
	0x032DEC9C MOV X2, X0
	0x032DECA0 MOV X0, X20
	0x032DECA4 MOV X1, X19
	0x032DECA8 MOV X3, X31
	0x032DECAC BL 0x32274B8
	0x032DECB0 MOV X19, X0
	0x032DECB4 ADRP X0, 0xE1D000
	0x032DECB8 LDR X0, [X0 + 0x578]
	0x032DECBC BL 0x1C16D08
	0x032DECC0 BL 0x1C16F10
	0x032DECC4 MOV X1, X19
	0x032DECC8 MOV X2, X31
	0x032DECCC MOV X20, X0
	0x032DECD0 BL 0x3314A68
	0x032DECD4 ADRP X0, 0xE48000
	0x032DECD8 LDR X0, [X0 + 0x6F0]
	0x032DECDC BL 0x1C16D08
	0x032DECE0 MOV X1, X0
	0x032DECE4 MOV X0, X20
	0x032DECE8 BL 0x1C16DEC
	0x032DECEC BL 0x1C16F20
	0x032DECF0 BL 0x1C16F20
	0x032DECF4 B 0x32DED00
	0x032DECF8 B 0x32DED00
	0x032DECFC B 0x32DED00
	0x032DED00 MOV X19, X0
	0x032DED04 CMP W1, 0x1
	0x032DED08 B.NE 0x32DED88
	0x032DED0C MOV X0, X19
	0x032DED10 BL 0x3EB1AD0
	0x032DED14 MOV X19, X0
	0x032DED18 ADRP X0, 0xE43000
	0x032DED1C LDR X0, [X0 + 0x690]
	0x032DED20 BL 0x1C16D08
	0x032DED24 LDR X8, [X19]
	0x032DED28 LDR X1, [X8]
	0x032DED2C BL 0x1C17270
	0x032DED30 TBZ X0, 0x0, 0x32DED60
	0x032DED34 LDR X19, [X19]
	0x032DED38 BL 0x3EB1AE0
	0x032DED3C ADRP X0, 0xE45000
	0x032DED40 LDR X0, [X0 + 0xF60]
	0x032DED44 BL 0x1C16D08
	0x032DED48 BL 0x1C16F10
	0x032DED4C MOV X1, X19
	0x032DED50 MOV X2, X31
	0x032DED54 MOV X20, X0
	0x032DED58 BL 0x32D27DC
	0x032DED5C B 0x32DECD4
	0x032DED60 MOVZ W0, 0x8
	0x032DED64 BL 0x3EB1AF0
	0x032DED68 LDR X8, [X19]
	0x032DED6C STR X8, [X0]
	0x032DED70 ADRP X1, 0xBD6000
	0x032DED74 ADD X1, X1, 0xE58
	0x032DED78 MOV X2, X31
	0x032DED7C BL 0x3EB1B00
	0x032DED80 MOV X19, X0
	0x032DED84 BL 0x3EB1AE0
	0x032DED88 MOV X0, X19
	0x032DED8C BL 0x1D2C690
	0x032DED90 BL 0x1990590
	0x032DED94 STP X30, X27, [X31 - 0x50]!
	0x032DED98 STP X26, X25, [X31 + 0x10]
	0x032DED9C STP X24, X23, [X31 + 0x20]
	0x032DEDA0 STP X22, X21, [X31 + 0x30]
	0x032DEDA4 STP X20, X19, [X31 + 0x40]
	0x032DEDA8 ADRP X24, 0x10FE000
	0x032DEDAC LDRB W8, [X24 + 0x987]
	0x032DEDB0 MOV X19, X6
	0x032DEDB4 MOV X26, X5
	0x032DEDB8 MOV X20, X4
	0x032DEDBC MOV W21, W3
	0x032DEDC0 MOV X23, X2
	0x032DEDC4 MOV X22, X1
	0x032DEDC8 MOV X25, X0
	0x032DEDCC TBNZ X8, 0x0, 0x32DEDE4
	0x032DEDD0 ADRP X0, 0xE15000
	0x032DEDD4 LDR X0, [X0 + 0x9D0]
	0x032DEDD8 BL 0x1C16CF4
	0x032DEDDC MOVZ W8, 0x1
	0x032DEDE0 STRB W8, [X24 + 0x987]
	0x032DEDE4 LDR X8, [X25]
	0x032DEDE8 MOVZ W1, 0x1
	0x032DEDEC MOV X0, X25
	0x032DEDF0 LDR X9, [X8 + 0x2B8]
	0x032DEDF4 LDR X2, [X8 + 0x2C0]
	0x032DEDF8 BLR X9
	0x032DEDFC MOV X1, X31
	0x032DEE00 MOV X2, X31
	0x032DEE04 MOV X24, X0
	0x032DEE08 BL 0x32C2354
	0x032DEE0C TBNZ X0, 0x0, 0x32DEF00
	0x032DEE10 ADRP X8, 0xE15000
	0x032DEE14 LDR X8, [X8 + 0x9D0]
	0x032DEE18 CBZ X26, 0x32DEE80
	0x032DEE1C LDR X27, [X26 + 0x18]
	0x032DEE20 CBZ X27, 0x32DEE80
	0x032DEE24 LDR X0, [X8]
	0x032DEE28 ADD W1, W27, 0x1
	0x032DEE2C BL 0x1C16D6C
	0x032DEE30 MOV X25, X0
	0x032DEE34 MOV X0, X26
	0x032DEE38 MOV X1, X25
	0x032DEE3C MOV W2, W31
	0x032DEE40 MOV X3, X31
	0x032DEE44 BL 0x339FC34
	0x032DEE48 CBZ X25, 0x32DEEFC
	0x032DEE4C CBZ X23, 0x32DEE64
	0x032DEE50 LDR X8, [X25]
	0x032DEE54 MOV X0, X23
	0x032DEE58 LDR X1, [X8 + 0x40]
	0x032DEE5C BL 0x1C16E00
	0x032DEE60 CBZ X0, 0x32DEF84
	0x032DEE64 LDR W8, [X25 + 0x18]
	0x032DEE68 CMP W27, W8
	0x032DEE6C B.CS 0x32DEF80
	0x032DEE70 UBFM X8, X27, 0x20, 0x1F
	0x032DEE74 ADD X8, X25, X8, 0x1D, ASR
	0x032DEE78 ADD X8, X8, 0x20
	0x032DEE7C B 0x32DEEB8
	0x032DEE80 LDR X0, [X8]
	0x032DEE84 MOVZ W1, 0x1
	0x032DEE88 BL 0x1C16D6C
	0x032DEE8C CBZ X0, 0x32DEEFC
	0x032DEE90 MOV X25, X0
	0x032DEE94 CBZ X23, 0x32DEEAC
	0x032DEE98 LDR X8, [X25]
	0x032DEE9C MOV X0, X23
	0x032DEEA0 LDR X1, [X8 + 0x40]
	0x032DEEA4 BL 0x1C16E00
	0x032DEEA8 CBZ X0, 0x32DEF84
	0x032DEEAC LDR W8, [X25 + 0x18]
	0x032DEEB0 CBZ W8, 0x32DEF80
	0x032DEEB4 ADD X8, X25, 0x20
	0x032DEEB8 STR X23, [X8]
	0x032DEEBC CBZ X24, 0x32DEEFC
	0x032DEEC0 LDR X8, [X24]
	0x032DEEC4 MOV X0, X24
	0x032DEEC8 MOV X1, X22
	0x032DEECC MOV W2, W21
	0x032DEED0 LDR X7, [X8 + 0x328]
	0x032DEED4 LDR X6, [X8 + 0x330]
	0x032DEED8 MOV X3, X20
	0x032DEEDC MOV X4, X25
	0x032DEEE0 MOV X5, X19
	0x032DEEE4 LDP X20, X19, [X31 + 0x40]
	0x032DEEE8 LDP X22, X21, [X31 + 0x30]
	0x032DEEEC LDP X24, X23, [X31 + 0x20]
	0x032DEEF0 LDP X26, X25, [X31 + 0x10]
	0x032DEEF4 LDP X30, X27, [X31], #0x50
	0x032DEEF8 BR X7
	0x032DEEFC BL 0x1C16F20
	0x032DEF00 LDR X8, [X25]
	0x032DEF04 MOV X0, X25
	0x032DEF08 LDP X9, X1, [X8 + 0x1A8]
	0x032DEF0C BLR X9
	0x032DEF10 MOV X19, X0
	0x032DEF14 ADRP X0, 0xE48000
	0x032DEF18 LDR X0, [X0 + 0x6F8]
	0x032DEF1C BL 0x1C16D08
	0x032DEF20 MOV X20, X0
	0x032DEF24 ADRP X0, 0xE1D000
	0x032DEF28 LDR X0, [X0 + 0x9B0]
	0x032DEF2C BL 0x1C16D08
	0x032DEF30 MOV X2, X0
	0x032DEF34 MOV X0, X20
	0x032DEF38 MOV X1, X19
	0x032DEF3C MOV X3, X31
	0x032DEF40 BL 0x32274B8
	0x032DEF44 MOV X19, X0
	0x032DEF48 ADRP X0, 0xE1D000
	0x032DEF4C LDR X0, [X0 + 0x578]
	0x032DEF50 BL 0x1C16D08
	0x032DEF54 BL 0x1C16F10
	0x032DEF58 MOV X1, X19
	0x032DEF5C MOV X2, X31
	0x032DEF60 MOV X20, X0
	0x032DEF64 BL 0x3314A68
	0x032DEF68 ADRP X0, 0xE48000
	0x032DEF6C LDR X0, [X0 + 0x700]
	0x032DEF70 BL 0x1C16D08
	0x032DEF74 MOV X1, X0
	0x032DEF78 MOV X0, X20
	0x032DEF7C BL 0x1C16DEC
	0x032DEF80 BL 0x1C16F28
	0x032DEF84 BL 0x1C16F44
	0x032DEF88 MOV X1, X31
	0x032DEF8C BL 0x1C16DEC
	0x032DEF90 B 0x32D76D0
	0x032DEF94 B 0x1C718C4
	0x032DEF98 B 0x1C718C4
	0x032DEF9C B 0x1C943D8
	0x032DEFA0 STR X30, [X31 - 0x20]!
	0x032DEFA4 STP X20, X19, [X31 + 0x10]
	0x032DEFA8 MOV X19, X1
	0x032DEFAC MOV X1, X31
	0x032DEFB0 MOV X2, X31
	0x032DEFB4 MOV X20, X0
	0x032DEFB8 BL 0x33BE5B0
	0x032DEFBC TBNZ X0, 0x0, 0x32DEFF0
	0x032DEFC0 MOV X0, X20
	0x032DEFC4 MOV X1, X19
	0x032DEFC8 BL 0x1C943D8
	0x032DEFCC MOV X1, X31
	0x032DEFD0 MOV X2, X31
	0x032DEFD4 MOV X19, X0
	0x032DEFD8 BL 0x32CE31C
	0x032DEFDC TBNZ X0, 0x0, 0x32DF010
	0x032DEFE0 MOV X0, X19
	0x032DEFE4 LDP X20, X19, [X31 + 0x10]
	0x032DEFE8 LDR X30, [X31], #0x20
	0x032DEFEC RET
	0x032DEFF0 ADRP X0, 0xE1D000
	0x032DEFF4 LDR X0, [X0 + 0x578]
	0x032DEFF8 BL 0x1C16D08
	0x032DEFFC BL 0x1C16F10
	0x032DF000 MOV X19, X0
	0x032DF004 ADRP X0, 0xE46000
	0x032DF008 LDR X0, [X0 + 0xC10]
	0x032DF00C B 0x32DF02C
	0x032DF010 ADRP X0, 0xE1C000
	0x032DF014 LDR X0, [X0 + 0x578]
	0x032DF018 BL 0x1C16D08
	0x032DF01C BL 0x1C16F10
	0x032DF020 MOV X19, X0
	0x032DF024 ADRP X0, 0xE47000
	0x032DF028 LDR X0, [X0 + 0x708]
	0x032DF02C BL 0x1C16D08
	0x032DF030 MOV X1, X0
	0x032DF034 MOV X0, X19
	0x032DF038 MOV X2, X31
	0x032DF03C BL 0x3314A68
	0x032DF040 ADRP X0, 0xE47000
	0x032DF044 LDR X0, [X0 + 0x710]
	0x032DF048 BL 0x1C16D08
	0x032DF04C MOV X1, X0
	0x032DF050 MOV X0, X19
	0x032DF054 BL 0x1C16DEC
	0x032DF058 MOV X1, X31
	0x032DF05C B 0x32CFB38
	0x032DF060 STR X30, [X31 - 0x30]!
	0x032DF064 STP X22, X21, [X31 + 0x10]
	0x032DF068 STP X20, X19, [X31 + 0x20]
	0x032DF06C LDR X8, [X2 + 0x8]
	0x032DF070 STP X1, X2, [X0 + 0x20]
	0x032DF074 MOV X19, X0
	0x032DF078 MOV X20, X2
	0x032DF07C STR X8, [X0 + 0x10]
	0x032DF080 LDRB W22, [X2 + 0x52]
	0x032DF084 STR X0, [X0 + 0x40]
	0x032DF088 MOV X0, X2
	0x032DF08C MOV X21, X1
	0x032DF090 BL 0x1C16D84
	0x032DF094 TBZ X0, 0x0, 0x32DF0AC
	0x032DF098 CMP W22, 0x1
	0x032DF09C B.NE 0x32DF0B4
	0x032DF0A0 ADRP X8, 0xFFFFFFFFFE8D8000
	0x032DF0A4 ADD X8, X8, 0xE4
	0x032DF0A8 B 0x32DF128
	0x032DF0AC CBZ W22, 0x32DF0C8
	0x032DF0B0 CBZ X21, 0x32DF148
	0x032DF0B4 LDR X8, [X19 + 0x10]
	0x032DF0B8 LDR X9, [X19 + 0x20]
	0x032DF0BC STR X8, [X19 + 0x18]
	0x032DF0C0 STR X9, [X19 + 0x40]
	0x032DF0C4 B 0x32DF12C
	0x032DF0C8 LDRB W8, [X19 + 0x70]
	0x032DF0CC CBZ W8, 0x32DF0F8
	0x032DF0D0 MOV X0, X20
	0x032DF0D4 BL 0x1C16D7C
	0x032DF0D8 MOV W21, W0
	0x032DF0DC MOV X0, X20
	0x032DF0E0 BL 0x1C17238
	0x032DF0E4 TBZ X21, 0x0, 0x32DF104
	0x032DF0E8 TBZ X0, 0x0, 0x32DF114
	0x032DF0EC ADRP X8, 0xFFFFFFFFFE8D8000
	0x032DF0F0 ADD X8, X8, 0x1E0
	0x032DF0F4 B 0x32DF128
	0x032DF0F8 ADRP X8, 0xFFFFFFFFFE8D8000
	0x032DF0FC ADD X8, X8, 0xC4
	0x032DF100 B 0x32DF128
	0x032DF104 TBZ X0, 0x0, 0x32DF120
	0x032DF108 ADRP X8, 0xFFFFFFFFFE8D8000
	0x032DF10C ADD X8, X8, 0x120
	0x032DF110 B 0x32DF128
	0x032DF114 ADRP X8, 0xFFFFFFFFFE8D8000
	0x032DF118 ADD X8, X8, 0x1A4
	0x032DF11C B 0x32DF128
	0x032DF120 ADRP X8, 0xFFFFFFFFFE8D8000
	0x032DF124 ADD X8, X8, 0xF4
	0x032DF128 STR X8, [X19 + 0x18]
	0x032DF12C ADRP X8, 0xFFFFFFFFFE8D8000
	0x032DF130 ADD X8, X8, 0x74
	0x032DF134 STR X8, [X19 + 0x38]
	0x032DF138 LDP X20, X19, [X31 + 0x20]
	0x032DF13C LDP X22, X21, [X31 + 0x10]
	0x032DF140 LDR X30, [X31], #0x30
	0x032DF144 RET
	0x032DF148 ADRP X1, 0xFFFFFFFFFD83C000
	0x032DF14C ADD X1, X1, 0xEE3
	0x032DF150 MOV X0, X31
	0x032DF154 BL 0x1C16F3C
	0x032DF158 MOV X1, X31
	0x032DF15C BL 0x1C16DEC
	0x032DF160 LDR X8, [X0 + 0x40]
	0x032DF164 LDR X3, [X0 + 0x18]
	0x032DF168 LDR X2, [X0 + 0x28]
	0x032DF16C MOV X0, X8
	0x032DF170 BR X3
	0x032DF174 STR X30, [X31 - 0x40]!
	0x032DF178 STP X24, X23, [X31 + 0x10]
	0x032DF17C STP X22, X21, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X19, 0x10FF000
	012 Move W8, [X19+2429]
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {56}
	018 Move X0, 0xE48000
	019 Move X0, [X0+3192]
	020 Call 0x1C17CF4
	021 Move X0, 0xE48000
	022 Move X0, [X0+3200]
	023 Call 0x1C17CF4
	024 Move X0, 0xE48000
	025 Move X0, [X0+3208]
	026 Call 0x1C17CF4
	027 Move X0, 0xE48000
	028 Move X0, [X0+3216]
	029 Call 0x1C17CF4
	030 Move X0, 0xE49000
	031 Move X0, [X0+1720]
	032 Call 0x1C17CF4
	033 Move X0, 0xE48000
	034 Move X0, [X0+3232]
	035 Call 0x1C17CF4
	036 Move X0, 0xE49000
	037 Move X0, [X0+1728]
	038 Call 0x1C17CF4
	039 Move X0, 0xE49000
	040 Move X0, [X0+1736]
	041 Call 0x1C17CF4
	042 Move X0, 0xE1E000
	043 Move X0, [X0+3168]
	044 Call 0x1C17CF4
	045 Move X0, 0xE16000
	046 Move X0, [X0+1728]
	047 Call 0x1C17CF4
	048 Move X0, 0xE48000
	049 Move X0, [X0+3248]
	050 Call 0x1C17CF4
	051 Move X0, 0xE48000
	052 Move X0, [X0+3256]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X19+2429], W8
	056 Move X0, X20
	057 Move X1, X31
	058 Call ParameterInfo.get_IsIn, X0
	059 Move W19, W0
	060 Move X0, X20
	061 Move X1, X31
	062 Call ParameterInfo.get_IsOut, X0
	063 And W8, W19, 1
	064 Move W9, 1
	065 NotImplemented "Instruction CINC not yet implemented."
	066 And W31, W0, 1
	067 Move X0, X20
	068 Move X1, X31
	069 NotImplemented "Instruction CSEL not yet implemented."
	070 Call ParameterInfo.get_IsOptional, X0
	071 Move X8, [X20+64]
	072 And W9, W0, 1
	073 Add W1, W19, W9
	074 Compare X8, 0
	075 JumpIfEqual {77}
	076 Add W1, W1, 1
	077 Compare W1, 0
	078 JumpIfEqual {346}
	079 Move X8, 0xE48000
	080 Move X8, [X8+3192]
	081 Move X23, 0xE16000
	082 Move X24, 0xE48000
	083 Move X0, [X8]
	084 Move X23, [X23+1728]
	085 Move X24, [X24+3200]
	086 Call 0x1C17D6C
	087 Move X19, X0
	088 Move X0, X20
	089 Move X1, X31
	090 Call ParameterInfo.get_IsIn, X0
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {135}
	095 Move X8, 0xE49000
	096 Move X0, [X23]
	097 Move X8, [X8+1720]
	098 Move W9, [X0+224]
	099 Move X21, [X8]
	100 Compare W9, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Move X0, X21
	104 Move X1, X31
	105 Call Type.GetTypeFromHandle, X0
	106 Compare X0, 0
	107 JumpIfEqual {359}
	108 Move X8, [X23]
	109 Move X2, X31
	110 Move X8, [X8+184]
	111 Move X1, [X8+16]
	112 Call Type.GetConstructor, X0, X1
	113 Move X8, [X24]
	114 Move X22, X0
	115 Move X0, X8
	116 Call 0x1C17F10
	117 Move X1, X22
	118 Move X21, X0
	119 Call CustomAttributeData..ctor, X0, X1
	120 Compare X19, 0
	121 JumpIfEqual {359}
	122 Compare X21, 0
	123 JumpIfEqual {130}
	124 Move X8, [X19]
	125 Move X0, X21
	126 Move X1, [X8+64]
	127 Call 0x1C17E00
	128 Compare X0, 0
	129 JumpIfEqual {361}
	130 Move W8, [X19+24]
	131 Compare W8, 0
	132 JumpIfEqual {360}
	133 Move W25, 1
	134 Move [X19+32], X21
	135 Move W25, W31
	136 Move X0, X20
	137 Move X1, X31
	138 Call ParameterInfo.get_IsOut, X0
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfNotEqual {183}
	143 Move X8, 0xE49000
	144 Move X0, [X23]
	145 Move X8, [X8+1736]
	146 Move W9, [X0+224]
	147 Move X21, [X8]
	148 Compare W9, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1C17DFC
	151 Move X0, X21
	152 Move X1, X31
	153 Call Type.GetTypeFromHandle, X0
	154 Compare X0, 0
	155 JumpIfEqual {359}
	156 Move X8, [X23]
	157 Move X2, X31
	158 Move X8, [X8+184]
	159 Move X1, [X8+16]
	160 Call Type.GetConstructor, X0, X1
	161 Move X8, [X24]
	162 Move X22, X0
	163 Move X0, X8
	164 Call 0x1C17F10
	165 Move X1, X22
	166 Move X21, X0
	167 Call CustomAttributeData..ctor, X0, X1
	168 Compare X19, 0
	169 JumpIfEqual {359}
	170 Compare X21, 0
	171 JumpIfEqual {178}
	172 Move X8, [X19]
	173 Move X0, X21
	174 Move X1, [X8+64]
	175 Call 0x1C17E00
	176 Compare X0, 0
	177 JumpIfEqual {361}
	178 Move W8, [X19+24]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Add X8, X19, W25
	181 Add W25, W25, 1
	182 Move [X8+32], X21
	183 Move X0, X20
	184 Move X1, X31
	185 Call ParameterInfo.get_IsOptional, X0
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {230}
	190 Move X8, 0xE49000
	191 Move X0, [X23]
	192 Move X8, [X8+1728]
	193 Move W9, [X0+224]
	194 Move X21, [X8]
	195 Compare W9, 0
	196 JumpIfNotEqual {198}
	197 Call 0x1C17DFC
	198 Move X0, X21
	199 Move X1, X31
	200 Call Type.GetTypeFromHandle, X0
	201 Compare X0, 0
	202 JumpIfEqual {359}
	203 Move X8, [X23]
	204 Move X2, X31
	205 Move X8, [X8+184]
	206 Move X1, [X8+16]
	207 Call Type.GetConstructor, X0, X1
	208 Move X8, [X24]
	209 Move X22, X0
	210 Move X0, X8
	211 Call 0x1C17F10
	212 Move X1, X22
	213 Move X21, X0
	214 Call CustomAttributeData..ctor, X0, X1
	215 Compare X19, 0
	216 JumpIfEqual {359}
	217 Compare X21, 0
	218 JumpIfEqual {225}
	219 Move X8, [X19]
	220 Move X0, X21
	221 Move X1, [X8+64]
	222 Call 0x1C17E00
	223 Compare X0, 0
	224 JumpIfEqual {361}
	225 Move W8, [X19+24]
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Add X8, X19, W25
	228 Add W25, W25, 1
	229 Move [X8+32], X21
	230 Move X8, [X20+64]
	231 Compare X8, 0
	232 JumpIfEqual {347}
	233 Move X8, 0xE48000
	234 Move X8, [X8+3208]
	235 Move X26, 0xE48000
	236 Move W1, 1
	237 Move X0, [X8]
	238 Move X26, [X26+3248]
	239 Call 0x1C17D6C
	240 Move X8, [X23]
	241 Move X22, [X26]
	242 Move X21, X0
	243 Move W9, [X8+224]
	244 Compare W9, 0
	245 JumpIfNotEqual {248}
	246 Move X0, X8
	247 Call 0x1C17DFC
	248 Move X0, X22
	249 Move X1, X31
	250 Call Type.GetTypeFromHandle, X0
	251 Move X8, [X20+64]
	252 Compare X8, 0
	253 JumpIfEqual {359}
	254 Move X9, 0xE47000
	255 Move X9, [X9+3256]
	256 Move X20, X0
	257 Move W8, [X8+48]
	258 Add X1, X31, 28
	259 Move X0, [X9]
	260 Move [X31+28], W8
	261 Call 0x1C17E04
	262 Move X2, X0
	263 Add X0, X31, 0
	264 Move X1, X20
	265 Move X3, X31
	266 Move [X31], X31
	267 Move [X31+8], X31
	268 Call CustomAttributeTypedArgument..ctor, X0, X1, X2
	269 Compare X21, 0
	270 JumpIfEqual {359}
	271 Move W8, [X21+24]
	272 Compare W8, 0
	273 JumpIfEqual {360}
	274 Move V0, [X31]
	275 Move X8, 0xE47000
	276 Move X8, [X8+3232]
	277 Move X20, 0xE1D000
	278 Move [X21+2], V0
	279 Move X1, X31
	280 Move X0, [X8]
	281 Move X20, [X20+3168]
	282 Call Type.GetTypeFromHandle, X0
	283 Move X8, [X20]
	284 Move X20, X0
	285 Move W1, 1
	286 Move X0, X8
	287 Call 0x1C17D6C
	288 Move X8, [X26]
	289 Move X22, X0
	290 Move X1, X31
	291 Move X0, X8
	292 Call Type.GetTypeFromHandle, X0
	293 Compare X22, 0
	294 JumpIfEqual {359}
	295 Move X23, X0
	296 Compare X0, 0
	297 JumpIfEqual {304}
	298 Move X8, [X22]
	299 Move X0, X23
	300 Move X1, [X8+64]
	301 Call 0x1C17E00
	302 Compare X0, 0
	303 JumpIfEqual {361}
	304 Move W8, [X22+24]
	305 Compare W8, 0
	306 JumpIfEqual {360}
	307 Move [X22+32], X23
	308 Compare X20, 0
	309 JumpIfEqual {359}
	310 Move X23, 0xE47000
	311 Move X23, [X23+3216]
	312 Move X0, X20
	313 Move X1, X22
	314 Move X2, X31
	315 Call Type.GetConstructor, X0, X1
	316 Move X8, [X23]
	317 Move X22, X0
	318 Move W9, [X8+224]
	319 Compare W9, 0
	320 JumpIfNotEqual {324}
	321 Move X0, X8
	322 Call 0x1C17DFC
	323 Move X8, [X23]
	324 Move X8, [X8+184]
	325 Move X0, [X24]
	326 Move X23, [X8]
	327 Call 0x1C17F10
	328 Move X1, X31
	329 Move X20, X0
	330 Call Object..ctor, X0
	331 Move [X20+16], X22
	332 Move [X20+24], X21
	333 Move [X20+32], X23
	334 Compare X19, 0
	335 JumpIfEqual {359}
	336 Move X8, [X19]
	337 Move X0, X20
	338 Move X1, [X8+64]
	339 Call 0x1C17E00
	340 Compare X0, 0
	341 JumpIfEqual {361}
	342 Move W8, [X19+24]
	343 NotImplemented "Instruction CMP not yet implemented."
	344 Add X8, X19, W25
	345 Move [X8+32], X20
	346 Move X19, X31
	347 Move X0, X19
	348 Move X20, [X31+80]
	349 Move X19, [X31+88]
	350 Move X22, [X31+64]
	351 Move X21, [X31+72]
	352 Move X24, [X31+48]
	353 Move X23, [X31+56]
	354 Move X26, [X31+32]
	355 Move X25, [X31+40]
	356 Move X30, [X31+16]
	357 Add X31, X31, 96
	358 Return X0
	359 Call 0x1C17F20
	360 Call 0x1C17F28
	361 Call 0x1C17F44
	362 Move X1, X31
	363 Call 0x1C17DEC

Method: System.Reflection.ParameterInfo New(System.Reflection.ParameterInfo pinfo, System.Reflection.MemberInfo member)

Disassembly:
	0x032DF180 STP X20, X19, [X31 + 0x30]
	0x032DF184 ADRP X22, 0x10FD000
	0x032DF188 ADRP X23, 0xE46000
	0x032DF18C ADRP X21, 0xE14000
	0x032DF190 LDRB W8, [X22 + 0x988]
	0x032DF194 LDR X23, [X23 + 0x118]
	0x032DF198 LDR X21, [X21 + 0x6C0]
	0x032DF19C MOV X20, X1
	0x032DF1A0 MOV X19, X0
	0x032DF1A4 TBNZ X8, 0x0, 0x32DF204
	0x032DF1A8 ADRP X0, 0xE46000
	0x032DF1AC LDR X0, [X0 + 0x118]
	0x032DF1B0 BL 0x1C16CF4
	0x032DF1B4 ADRP X0, 0xE14000
	0x032DF1B8 LDR X0, [X0 + 0x618]
	0x032DF1BC BL 0x1C16CF4
	0x032DF1C0 ADRP X0, 0xE14000
	0x032DF1C4 LDR X0, [X0 + 0x6C0]
	0x032DF1C8 BL 0x1C16CF4
	0x032DF1CC ADRP X0, 0xE47000
	0x032DF1D0 LDR X0, [X0 + 0x718]
	0x032DF1D4 BL 0x1C16CF4
	0x032DF1D8 ADRP X0, 0xE47000
	0x032DF1DC LDR X0, [X0 + 0x720]
	0x032DF1E0 BL 0x1C16CF4
	0x032DF1E4 ADRP X0, 0xE47000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10FE000
	007 Move X22, 0xE48000
	008 Move W8, [X21+2430]
	009 Move X22, [X22+1272]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE48000
	017 Move X0, [X0+1272]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2430], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X1, X20
	024 Move X2, X19
	025 Move X21, X0
	026 Call RuntimeParameterInfo..ctor, X0, X1, X2
	027 Move X0, X21
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: System.Reflection.ParameterInfo New(System.Type type, System.Reflection.MemberInfo member, System.Runtime.InteropServices.MarshalAsAttribute marshalAs)

Disassembly:
	0x032DB790 MOV X0, X20
	0x032DB794 MOV X1, X19
	0x032DB798 LDP X20, X19, [X31 + 0x20]
	0x032DB79C LDP X22, X21, [X31 + 0x10]
	0x032DB7A0 MOV X3, X31
	0x032DB7A4 LDP X30, X23, [X31], #0x30
	0x032DB7A8 B 0x33C7388
	0x032DB7AC B 0x1C72228
	0x032DB7B0 SUB X31, X31, 0x50
	0x032DB7B4 STR X30, [X31 + 0x20]
	0x032DB7B8 STP X22, X21, [X31 + 0x30]
	0x032DB7BC STP X20, X19, [X31 + 0x40]
	0x032DB7C0 ADRP X19, 0x1101000
	0x032DB7C4 LDRB W8, [X19 + 0x964]
	0x032DB7C8 MOV X20, X0
	0x032DB7CC TBNZ X8, 0x0, 0x32DB7F0
	0x032DB7D0 ADRP X0, 0xE18000
	0x032DB7D4 LDR X0, [X0 + 0x9D0]
	0x032DB7D8 BL 0x1C16CF4
	0x032DB7DC ADRP X0, 0xE4B000
	0x032DB7E0 LDR X0, [X0 + 0x558]
	0x032DB7E4 BL 0x1C16CF4
	0x032DB7E8 MOVZ W8, 0x1
	0x032DB7EC STRB W8, [X19 + 0x964]
	0x032DB7F0 ADRP X19, 0xE18000
	0x032DB7F4 LDR X19, [X19 + 0x9D0]
	0x032DB7F8 LDR X0, [X20 + 0x10]
	0x032DB7FC MOVI V0.2D, 0x0
	0x032DB800 ADD X1, X31, 0x0
	0x032DB804 STP V0, V0, [X31]
	0x032DB808 BL 0x1C841C8
	0x032DB80C LDP W22, W21, [X31 + 0x10]
	0x032DB810 TBNZ X22, 0xD, 0x32DB820

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1102000
	008 Move X23, 0xE4C000
	009 Move W8, [X22+2431]
	010 Move X23, [X23+1272]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xE4C000
	019 Move X0, [X0+1272]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2431], W8
	023 Move X0, [X23]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X22, X0
	027 Call ParameterInfo..ctor, X0
	028 Move TEMP, 0
	029 Not TEMP
	030 Move W8, TEMP
	031 Move W9, 8
	032 Move [X22+24], X21
	033 Move [X22+40], X20
	034 Move [X22+48], X31
	035 Move [X22+56], W8
	036 Move [X22+16], W9
	037 Move [X22+64], X19
	038 Move X0, X22
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Move X23, [X31+56]
	045 Return X0

