Type: System.Reflection.RuntimeAssembly

Method: System.Void .ctor()

Disassembly:
	0x032D9B00 LDR X9, [X9 + 0x4E8]
	0x032D9B04 LDR X8, [X0]
	0x032D9B08 LDR X1, [X9]
	0x032D9B0C LDRB W10, [X8 + 0x130]
	0x032D9B10 LDRB W9, [X1 + 0x130]
	0x032D9B14 CMP W10, W9
	0x032D9B18 B.CC 0x32D9B3C
	0x032D9B1C LDR X8, [X8 + 0xC8]
	0x032D9B20 ADD X8, X8, X9, 0x3, LSL
	0x032D9B24 LDUR X8, [X8 - 0x8]
	0x032D9B28 CMP X8, X1
	0x032D9B2C B.NE 0x32D9B3C
	0x032D9B30 LDP X20, X19, [X31 + 0x10]
	0x032D9B34 LDR X30, [X31], #0x20
	0x032D9B38 RET
	0x032D9B3C BL 0x1C171E0
	0x032D9B40 STR X30, [X31 - 0x30]!
	0x032D9B44 STP X22, X21, [X31 + 0x10]
	0x032D9B48 STP X20, X19, [X31 + 0x20]
	0x032D9B4C CBZ X1, 0x32D9BAC
	0x032D9B50 LDR X8, [X0]
	0x032D9B54 MOV X19, X1
	0x032D9B58 MOV X20, X0
	0x032D9B5C LDP X9, X1, [X8 + 0x1A8]
	0x032D9B60 BLR X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1104000
	006 Move X20, 0xE4E000
	007 Move W8, [X21+2369]
	008 Move X20, [X20+1064]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE4E000
	015 Move X0, [X0+1064]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2369], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call Object..ctor, X0
	022 Move X0, [X20]
	023 Call 0x1C17F10
	024 Move X1, X31
	025 Move X20, X0
	026 Call Object..ctor, X0
	027 Move [X19+32], X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return 

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x032D9B64 MOV X21, X0
	0x032D9B68 MOV X0, X20
	0x032D9B6C BL 0x32D9ABC
	0x032D9B70 LDR X8, [X20]
	0x032D9B74 MOV X22, X0
	0x032D9B78 MOV X0, X20
	0x032D9B7C LDP X9, X1, [X8 + 0x168]
	0x032D9B80 BLR X9
	0x032D9B84 MOV X3, X0
	0x032D9B88 MOV X0, X19
	0x032D9B8C MOV X1, X21
	0x032D9B90 MOV X2, X22
	0x032D9B94 LDP X20, X19, [X31 + 0x20]
	0x032D9B98 LDP X22, X21, [X31 + 0x10]
	0x032D9B9C MOVZ W4, 0x4
	0x032D9BA0 MOV X5, X31
	0x032D9BA4 LDR X30, [X31], #0x30
	0x032D9BA8 B 0x32D45E0
	0x032D9BAC ADRP X0, 0xE1F000
	0x032D9BB0 LDR X0, [X0 + 0x528]
	0x032D9BB4 BL 0x1C16D08
	0x032D9BB8 BL 0x1C16F10
	0x032D9BBC MOV X19, X0
	0x032D9BC0 ADRP X0, 0xE44000
	0x032D9BC4 LDR X0, [X0 + 0x2D8]
	0x032D9BC8 BL 0x1C16D08
	0x032D9BCC MOV X1, X0
	0x032D9BD0 MOV X0, X19
	0x032D9BD4 MOV X2, X31
	0x032D9BD8 BL 0x330E100
	0x032D9BDC ADRP X0, 0xE4D000
	0x032D9BE0 LDR X0, [X0 + 0x480]
	0x032D9BE4 BL 0x1C16D08
	0x032D9BE8 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {22}
	006 Move X8, [X0]
	007 Move X20, X1
	008 Move X19, X0
	009 Move X9, [X8+440]
	010 Move X1, [X8+448]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Move X2, X0
	013 Move X0, X20
	014 Move X3, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move W1, 6
	018 Move X4, X31
	019 Move X30, [X31+32]
	020 Call UnitySerializationHolder.GetUnitySerializationInfo, X0, X1, X2, X3
	021 Return 
	022 Move X0, 0xE20000
	023 Move X0, [X0+1320]
	024 Call 0x1C17D08
	025 Call 0x1C17F10
	026 Move X19, X0
	027 Move X0, 0xE45000
	028 Move X0, [X0+728]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X19
	032 Move X2, X31
	033 Call ArgumentNullException..ctor, X0, X1
	034 Move X0, 0xE4E000
	035 Move X0, [X0+1072]
	036 Call 0x1C17D08
	037 Move X1, X0
	038 Move X0, X19
	039 Call 0x1C17DEC

Method: System.Reflection.RuntimeAssembly LoadWithPartialNameInternal(System.String partialName, System.Security.Policy.Evidence securityEvidence, ref System.Threading.StackCrawlMark stackMark)

Disassembly:
	0x032D9BEC MOV X0, X19
	0x032D9BF0 BL 0x1C16DEC
	0x032D9BF4 B 0x1C942C8
	0x032D9BF8 STP X30, X23, [X31 - 0x30]!
	0x032D9BFC STP X22, X21, [X31 + 0x10]
	0x032D9C00 STP X20, X19, [X31 + 0x20]
	0x032D9C04 LDR X8, [X0]
	0x032D9C08 MOV X19, X1
	0x032D9C0C MOV X20, X0
	0x032D9C10 LDR X9, [X8 + 0x248]
	0x032D9C14 LDR X8, [X8 + 0x250]
	0x032D9C18 MOV X1, X8
	0x032D9C1C BLR X9
	0x032D9C20 TBNZ X0, 0x4, 0x32D9C50
	0x032D9C24 LDR X8, [X20]
	0x032D9C28 MOV X0, X20
	0x032D9C2C LDP X9, X1, [X8 + 0x1B8]
	0x032D9C30 BLR X9
	0x032D9C34 CBZ X0, 0x32D9C60
	0x032D9C38 LDR X8, [X0]
	0x032D9C3C MOV X1, X19
	0x032D9C40 LDR X9, [X8 + 0x868]
	0x032D9C44 LDR X2, [X8 + 0x870]
	0x032D9C48 BLR X9
	0x032D9C4C TBZ X0, 0x0, 0x32D9C64
	0x032D9C50 LDP X20, X19, [X31 + 0x20]
	0x032D9C54 LDP X22, X21, [X31 + 0x10]
	0x032D9C58 LDP X30, X23, [X31], #0x30
	0x032D9C5C RET
	0x032D9C60 BL 0x1C16F20
	0x032D9C64 CBNZ X19, 0x32D9CA4
	0x032D9C68 ADRP X0, 0xE4D000
	0x032D9C6C LDR X0, [X0 + 0x488]
	0x032D9C70 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1104000
	006 Move W8, [X21+2370]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE49000
	014 Move X0, [X0+2768]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2370], W8
	018 Move W2, 1
	019 Move X0, X20
	020 Move X1, X19
	021 Call Assembly.LoadWithPartialName, X0, X1, X2
	022 Compare X0, 0
	023 JumpIfEqual {35}
	024 Move X9, 0xE49000
	025 Move X9, [X9+2768]
	026 Move X8, [X0]
	027 Move X1, [X9]
	028 Move W10, [X8+304]
	029 Move W9, [X1+304]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, [X8+200]
	032 Add X8, X8, X9
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return X0
	040 Call 0x1C181E0

Method: System.Reflection.RuntimeAssembly LoadWithPartialNameInternal(System.Reflection.AssemblyName an, System.Security.Policy.Evidence securityEvidence, ref System.Threading.StackCrawlMark stackMark)

Disassembly:
	0x032D9C74 MOV X1, X31
	0x032D9C78 BL 0x33BDD84
	0x032D9C7C MOV X19, X0
	0x032D9C80 ADRP X0, 0xE4D000
	0x032D9C84 LDR X0, [X0 + 0x490]
	0x032D9C88 BL 0x1C16D08
	0x032D9C8C BL 0x1C16F10
	0x032D9C90 MOV X1, X19
	0x032D9C94 MOV X2, X31
	0x032D9C98 MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {15}
	005 Move X8, [X0]
	006 Move X19, X1
	007 Move X9, [X8+360]
	008 Move X1, [X8+368]
	009 NotImplemented "Instruction BLR not yet implemented."
	010 Move X1, X19
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Call RuntimeAssembly.LoadWithPartialNameInternal, X0, X1, X2
	014 Return X0
	015 Call 0x1C17F20

Method: System.Reflection.AssemblyName GetName(System.Boolean copiedName)

Disassembly:
	0x032D9C9C BL 0x32D2788
	0x032D9CA0 B 0x32D9D54

ISIL:
	001 Move W1, 1
	002 Call AssemblyName.Create, X0, X1
	003 Return X0

Method: System.Type GetType(System.String name, System.Boolean throwOnError, System.Boolean ignoreCase)

Disassembly:
	0x032D9CA4 ADRP X0, 0xE1C000
	0x032D9CA8 LDR X0, [X0 + 0xC48]
	0x032D9CAC BL 0x1C16D08
	0x032D9CB0 LDR W8, [X0 + 0xE0]
	0x032D9CB4 CBNZ W8, 0x32D9CBC
	0x032D9CB8 BL 0x1C16DFC
	0x032D9CBC MOV X0, X31
	0x032D9CC0 BL 0x334734C
	0x032D9CC4 MOV X21, X0
	0x032D9CC8 ADRP X0, 0xE4D000
	0x032D9CCC LDR X0, [X0 + 0x498]
	0x032D9CD0 BL 0x1C16D08
	0x032D9CD4 MOV X1, X31
	0x032D9CD8 BL 0x33BDD84
	0x032D9CDC LDR X8, [X20]
	0x032D9CE0 MOV X22, X0
	0x032D9CE4 MOV X0, X20
	0x032D9CE8 LDP X9, X1, [X8 + 0x1A8]
	0x032D9CEC BLR X9
	0x032D9CF0 LDR X8, [X20]
	0x032D9CF4 MOV X23, X0
	0x032D9CF8 MOV X0, X20
	0x032D9CFC LDP X9, X1, [X8 + 0x1B8]
	0x032D9D00 BLR X9
	0x032D9D04 MOV X20, X0
	0x032D9D08 MOV X0, X19
	0x032D9D0C MOV X1, X31
	0x032D9D10 BL 0x33BE520
	0x032D9D14 MOV X4, X0
	0x032D9D18 MOV X0, X21
	0x032D9D1C MOV X1, X22
	0x032D9D20 MOV X2, X23
	0x032D9D24 MOV X3, X20
	0x032D9D28 MOV X5, X31
	0x032D9D2C BL 0x3227DB0
	0x032D9D30 MOV X19, X0
	0x032D9D34 ADRP X0, 0xE22000
	0x032D9D38 LDR X0, [X0 + 0x578]
	0x032D9D3C BL 0x1C16D08
	0x032D9D40 BL 0x1C16F10
	0x032D9D44 MOV X1, X19
	0x032D9D48 MOV X2, X31
	0x032D9D4C MOV X20, X0
	0x032D9D50 BL 0x3314A68
	0x032D9D54 ADRP X0, 0xE4D000
	0x032D9D58 LDR X0, [X0 + 0x4A0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {20}
	006 Move W9, [X1+16]
	007 Move X8, X1
	008 Compare W9, 0
	009 JumpIfEqual {28}
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 And W9, W2, 1
	013 And W4, W3, 1
	014 Move X1, X31
	015 Move X2, X8
	016 Move W3, W9
	017 Move X30, [X31+32]
	018 Call 0x1C7251C
	019 Return X0
	020 Move X0, 0xE20000
	021 Move X0, [X0+1320]
	022 Call 0x1C17D08
	023 Call 0x1C17F10
	024 Move X1, X31
	025 Move X2, X31
	026 Move X19, X0
	027 Call ArgumentNullException..ctor, X0, X1
	028 Move X0, 0xE23000
	029 Move X0, [X0+1400]
	030 Call 0x1C17D08
	031 Call 0x1C17F10
	032 Move X19, X0
	033 Move X0, 0xE23000
	034 Move X0, [X0+1416]
	035 Call 0x1C17D08
	036 Move X20, X0
	037 Move X0, 0xE4E000
	038 Move X0, [X0+1080]
	039 Call 0x1C17D08
	040 Move X2, X0
	041 Move X0, X19
	042 Move X1, X20
	043 Move X3, X31
	044 Call ArgumentException..ctor, X0, X1, X2
	045 Move X0, 0xE4E000
	046 Move X0, [X0+1088]
	047 Call 0x1C17D08
	048 Move X1, X0
	049 Move X0, X19
	050 Call 0x1C17DEC

Method: System.Reflection.Module GetModule(System.String name)

Disassembly:
	0x032D9D5C BL 0x1C16D08
	0x032D9D60 MOV X1, X0
	0x032D9D64 MOV X0, X20
	0x032D9D68 BL 0x1C16DEC
	0x032D9D6C SUB X31, X31, 0x30
	0x032D9D70 STP X30, X21, [X31 + 0x10]
	0x032D9D74 STP X20, X19, [X31 + 0x20]
	0x032D9D78 STRB W31, [X31 + 0xC]
	0x032D9D7C LDR X8, [X0]
	0x032D9D80 MOV X21, X1
	0x032D9D84 MOV X19, X2
	0x032D9D88 MOV X20, X0
	0x032D9D8C LDR X9, [X8 + 0x248]
	0x032D9D90 LDR X8, [X8 + 0x250]
	0x032D9D94 MOV X1, X8
	0x032D9D98 BLR X9
	0x032D9D9C MOV W4, W0
	0x032D9DA0 ADD X6, X31, 0xC
	0x032D9DA4 MOV X0, X20
	0x032D9DA8 MOV X1, X21
	0x032D9DAC MOV X2, X19
	0x032D9DB0 MOV X3, X31
	0x032D9DB4 MOV X5, X31
	0x032D9DB8 MOV X7, X31
	0x032D9DBC BL 0x33CB94C
	0x032D9DC0 LDP X20, X19, [X31 + 0x20]
	0x032D9DC4 LDP X30, X21, [X31 + 0x10]
	0x032D9DC8 ADD X31, X31, 0x30
	0x032D9DCC RET
	0x032D9DD0 STP X30, X23, [X31 - 0x30]!
	0x032D9DD4 STP X22, X21, [X31 + 0x10]
	0x032D9DD8 STP X20, X19, [X31 + 0x20]
	0x032D9DDC ADRP X22, 0x1103000
	0x032D9DE0 LDRB W8, [X22 + 0x952]
	0x032D9DE4 MOV X19, X2
	0x032D9DE8 MOV X20, X1
	0x032D9DEC MOV X21, X0
	0x032D9DF0 TBNZ X8, 0x0, 0x32D9E08
	0x032D9DF4 ADRP X0, 0xE43000
	0x032D9DF8 LDR X0, [X0 + 0x4E8]
	0x032D9DFC BL 0x1C16CF4
	0x032D9E00 MOVZ W8, 0x1
	0x032D9E04 STRB W8, [X22 + 0x952]
	0x032D9E08 MOV X0, X20
	0x032D9E0C MOV X1, X31
	0x032D9E10 BL 0x33BE60C
	0x032D9E14 TBNZ X0, 0x0, 0x32D9EDC
	0x032D9E18 LDR X8, [X21]
	0x032D9E1C ADRP X23, 0xE43000
	0x032D9E20 MOV X0, X21
	0x032D9E24 LDR X9, [X8 + 0x258]
	0x032D9E28 LDR X1, [X8 + 0x260]
	0x032D9E2C LDR X23, [X23 + 0x4E8]
	0x032D9E30 BLR X9
	0x032D9E34 LDR X8, [X21]
	0x032D9E38 MOV X22, X0
	0x032D9E3C MOV X0, X21
	0x032D9E40 LDP X9, X1, [X8 + 0x1B8]
	0x032D9E44 BLR X9
	0x032D9E48 LDR X1, [X23]
	0x032D9E4C MOV X4, X0
	0x032D9E50 CBZ X22, 0x32D9E7C
	0x032D9E54 LDR X8, [X22]
	0x032D9E58 LDRB W9, [X1 + 0x130]
	0x032D9E5C LDRB W10, [X8 + 0x130]
	0x032D9E60 CMP W10, W9
	0x032D9E64 B.CC 0x32D9ECC
	0x032D9E68 LDR X8, [X8 + 0xC8]
	0x032D9E6C ADD X8, X8, X9, 0x3, LSL
	0x032D9E70 LDUR X8, [X8 - 0x8]
	0x032D9E74 CMP X8, X1
	0x032D9E78 B.NE 0x32D9ECC
	0x032D9E7C CBZ X4, 0x32D9EA8
	0x032D9E80 LDR X8, [X4]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {53}
	008 Move W8, [X1+16]
	009 Move X19, X1
	010 Compare W8, 0
	011 JumpIfEqual {65}
	012 Move X8, [X0]
	013 Move W1, 1
	014 Move X9, [X8+664]
	015 Move X2, [X8+672]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Compare X0, 0
	018 JumpIfEqual {51}
	019 Move W8, [X0+24]
	020 Move X20, X0
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W22, W31
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Add X8, X20, W22
	025 Move X21, [X8+32]
	026 Compare X21, 0
	027 JumpIfEqual {51}
	028 Move X8, [X21]
	029 Move X0, X21
	030 Move X9, [X8+456]
	031 Move X1, [X8+464]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move X1, X19
	034 Move X2, X31
	035 Call String.op_Equality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {44}
	040 Move W8, [X20+24]
	041 Add W22, W22, 1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X31
	044 Move X0, X21
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Return X0
	051 Call 0x1C17F20
	052 Call 0x1C17F28
	053 Move X0, 0xE20000
	054 Move X0, [X0+1320]
	055 Call 0x1C17D08
	056 Call 0x1C17F10
	057 Move X19, X0
	058 Move X0, 0xE23000
	059 Move X0, [X0+1416]
	060 Call 0x1C17D08
	061 Move X1, X0
	062 Move X0, X19
	063 Move X2, X31
	064 Call ArgumentNullException..ctor, X0, X1
	065 Move X0, 0xE23000
	066 Move X0, [X0+1400]
	067 Call 0x1C17D08
	068 Call 0x1C17F10
	069 Move X19, X0
	070 Move X0, 0xE4E000
	071 Move X0, [X0+1096]
	072 Call 0x1C17D08
	073 Move X1, X0
	074 Move X0, X19
	075 Move X2, X31
	076 Call ArgumentException..ctor, X0, X1
	077 Move X0, 0xE4E000
	078 Move X0, [X0+1104]
	079 Call 0x1C17D08
	080 Move X1, X0
	081 Move X0, X19
	082 Call 0x1C17DEC

Method: System.Reflection.Module[] GetModules(System.Boolean getResourceModules)

Disassembly:
	0x032D9E84 LDRB W9, [X1 + 0x130]
	0x032D9E88 LDRB W10, [X8 + 0x130]
	0x032D9E8C CMP W10, W9
	0x032D9E90 B.CC 0x32D9ED4
	0x032D9E94 LDR X8, [X8 + 0xC8]
	0x032D9E98 ADD X8, X8, X9, 0x3, LSL
	0x032D9E9C LDUR X8, [X8 - 0x8]
	0x032D9EA0 CMP X8, X1
	0x032D9EA4 B.NE 0x32D9ED4
	0x032D9EA8 MOV X0, X21
	0x032D9EAC MOV X1, X22
	0x032D9EB0 MOV X2, X20
	0x032D9EB4 MOV X3, X19
	0x032D9EB8 LDP X20, X19, [X31 + 0x20]
	0x032D9EBC LDP X22, X21, [X31 + 0x10]
	0x032D9EC0 MOV X5, X31
	0x032D9EC4 LDP X30, X23, [X31], #0x30
	0x032D9EC8 B 0x33CB950
	0x032D9ECC MOV X0, X22
	0x032D9ED0 BL 0x1C171E0
	0x032D9ED4 MOV X0, X4
	0x032D9ED8 BL 0x1C171E0
	0x032D9EDC ADRP X0, 0xE4D000
	0x032D9EE0 LDR X0, [X0 + 0x4A8]
	0x032D9EE4 BL 0x1C16D08
	0x032D9EE8 MOV X1, X31
	0x032D9EEC BL 0x33BDD84
	0x032D9EF0 MOV X19, X0
	0x032D9EF4 ADRP X0, 0xE22000
	0x032D9EF8 LDR X0, [X0 + 0x578]
	0x032D9EFC BL 0x1C16D08
	0x032D9F00 BL 0x1C16F10
	0x032D9F04 MOV X1, X19
	0x032D9F08 MOV X2, X31
	0x032D9F0C MOV X20, X0
	0x032D9F10 BL 0x3314A68
	0x032D9F14 ADRP X0, 0xE4D000
	0x032D9F18 LDR X0, [X0 + 0x4B0]
	0x032D9F1C BL 0x1C16D08
	0x032D9F20 MOV X1, X0
	0x032D9F24 MOV X0, X20
	0x032D9F28 BL 0x1C16DEC
	0x032D9F2C LDR W0, [X0 + 0x30]
	0x032D9F30 RET
	0x032D9F34 LDR X0, [X0 + 0x18]
	0x032D9F38 RET
	0x032D9F3C B 0x1C16CAC
	0x032D9F40 STP X30, X21, [X31 - 0x20]!
	0x032D9F44 STP X20, X19, [X31 + 0x10]
	0x032D9F48 ADRP X21, 0x1103000
	0x032D9F4C ADRP X20, 0xE1A000
	0x032D9F50 LDRB W8, [X21 + 0x953]
	0x032D9F54 LDR X20, [X20 + 0x6C0]
	0x032D9F58 MOV X19, X0
	0x032D9F5C TBNZ X8, 0x0, 0x32D9F74
	0x032D9F60 ADRP X0, 0xE1A000
	0x032D9F64 LDR X0, [X0 + 0x6C0]
	0x032D9F68 BL 0x1C16CF4
	0x032D9F6C MOVZ W8, 0x1
	0x032D9F70 STRB W8, [X21 + 0x953]
	0x032D9F74 LDR X0, [X20]
	0x032D9F78 LDR X20, [X19 + 0x28]
	0x032D9F7C LDR W8, [X0 + 0xE0]
	0x032D9F80 CBNZ W8, 0x32D9F88
	0x032D9F84 BL 0x1C16DFC
	0x032D9F88 MOV X0, X20
	0x032D9F8C MOV X1, X31
	0x032D9F90 MOV X2, X31
	0x032D9F94 BL 0x3395194
	0x032D9F98 TBZ X0, 0x0, 0x32D9FAC
	0x032D9F9C MOV X0, X19
	0x032D9FA0 BL 0x1C16CAC
	0x032D9FA4 STR X0, [X19 + 0x28]
	0x032D9FA8 B 0x32D9FB0
	0x032D9FAC LDR X0, [X19 + 0x28]
	0x032D9FB0 LDP X20, X19, [X31 + 0x10]
	0x032D9FB4 LDP X30, X21, [X31], #0x20
	0x032D9FB8 RET
	0x032D9FBC AND W1, W1, 0x1
	0x032D9FC0 B 0x1C942D0
	0x032D9FC4 MOV W1, W31
	0x032D9FC8 B 0x1C942D0
	0x032D9FCC MOVZ W1, 0x1
	0x032D9FD0 B 0x1C942D0
	0x032D9FD4 LDR X0, [X0 + 0x20]
	0x032D9FD8 RET
	0x032D9FDC STP X30, X23, [X31 - 0x30]!
	0x032D9FE0 STP X22, X21, [X31 + 0x10]
	0x032D9FE4 STP X20, X19, [X31 + 0x20]
	0x032D9FE8 ADRP X22, 0x1103000
	0x032D9FEC ADRP X23, 0xE4D000
	0x032D9FF0 LDRB W8, [X22 + 0x954]
	0x032D9FF4 LDR X23, [X23 + 0x3E0]
	0x032D9FF8 MOV W21, W2
	0x032D9FFC MOV X19, X1
	0x032DA000 MOV X20, X0
	0x032DA004 TBNZ X8, 0x0, 0x32DA01C
	0x032DA008 ADRP X0, 0xE4C000
	0x032DA00C LDR X0, [X0 + 0x3E0]
	0x032DA010 BL 0x1C16CF4
	0x032DA014 MOVZ W8, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1104000
	009 Move W8, [X21+2371]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0xE4E000
	017 Move X0, [X0+1112]
	018 Call 0x1C17CF4
	019 Move X0, 0xE4E000
	020 Move X0, [X0+1120]
	021 Call 0x1C17CF4
	022 Move X0, 0xE4E000
	023 Move X0, [X0+1128]
	024 Call 0x1C17CF4
	025 Move X0, 0xE4E000
	026 Move X0, [X0+1136]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+2371], W8
	030 Move X8, [X19]
	031 Move X0, X19
	032 Move X9, [X8+616]
	033 Move X1, [X8+624]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X19, X0
	036 Move TEMP, X20
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {49}
	040 Move X0, X19
	041 Move X20, [X31+48]
	042 Move X19, [X31+56]
	043 Move X22, [X31+32]
	044 Move X21, [X31+40]
	045 Move X24, [X31+16]
	046 Move X23, [X31+24]
	047 Move X30, [X31+64]
	048 Return X0
	049 Compare X19, 0
	050 JumpIfEqual {120}
	051 Move X8, 0xE4E000
	052 Move X8, [X8+1136]
	053 Move X0, [X8]
	054 Call 0x1C17F10
	055 Move X8, 0xE4E000
	056 Move W1, [X19+24]
	057 Move X8, [X8+1128]
	058 Move X20, X0
	059 Move X2, [X8]
	060 Call List`1<Object>..ctor, X0, X1
	061 Move W8, [X19+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X24, 0xE4E000
	064 Move X24, [X24+1112]
	065 Move X22, X31
	066 Add X23, X19, 32
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X21, [X23]
	069 Compare X21, 0
	070 JumpIfEqual {120}
	071 Move X8, [X21]
	072 Move X0, X21
	073 Move X9, [X8+472]
	074 Move X1, [X8+480]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {102}
	080 Compare X20, 0
	081 JumpIfEqual {120}
	082 Move W10, [X20+28]
	083 Move X8, [X20+16]
	084 Move X9, [X24]
	085 Add W10, W10, 1
	086 Move [X20+28], W10
	087 Compare X8, 0
	088 JumpIfEqual {120}
	089 NotImplemented "Instruction LDRSW not yet implemented."
	090 Move W11, [X8+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Add W9, W10, 1
	093 Add X8, X8, X10
	094 Move [X20+24], W9
	095 Move [X8+32], X21
	096 Move X8, [X9+32]
	097 Move X0, X20
	098 Move X1, X21
	099 Move X8, [X8+192]
	100 Move X2, [X8+112]
	101 Call List`1<Object>.AddWithResize, X0, X1
	102 Move W8, [X19+24]
	103 Add X22, X22, 1
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Compare X20, 0
	106 JumpIfEqual {120}
	107 Move X8, 0xE4E000
	108 Move X8, [X8+1120]
	109 Move X0, X20
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X1, [X8]
	115 Move X24, [X31+16]
	116 Move X23, [X31+24]
	117 Move X30, [X31+64]
	118 Call List`1<Object>.ToArray, X0
	119 Return X0
	120 Call 0x1C17F20
	121 Call 0x1C17F28

Method: System.Byte[] GetAotId()

Disassembly:
	0x032DA018 STRB W8, [X22 + 0x954]
	0x032DA01C LDR X0, [X23]
	0x032DA020 LDR W8, [X0 + 0xE0]
	0x032DA024 CBNZ W8, 0x32DA02C
	0x032DA028 BL 0x1C16DFC
	0x032DA02C AND W2, W21, 0x1
	0x032DA030 MOV X0, X20
	0x032DA034 MOV X1, X19
	0x032DA038 LDP X20, X19, [X31 + 0x20]
	0x032DA03C LDP X22, X21, [X31 + 0x10]
	0x032DA040 MOV X3, X31
	0x032DA044 LDP X30, X23, [X31], #0x30
	0x032DA048 B 0x33C9FDC
	0x032DA04C STR X30, [X31 - 0x30]!
	0x032DA050 STP X22, X21, [X31 + 0x10]
	0x032DA054 STP X20, X19, [X31 + 0x20]
	0x032DA058 ADRP X21, 0x1102000
	0x032DA05C ADRP X22, 0xE4C000
	0x032DA060 LDRB W8, [X21 + 0x955]
	0x032DA064 LDR X22, [X22 + 0x3E0]
	0x032DA068 MOV W20, W1
	0x032DA06C MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1103000
	005 Move X20, 0xE1A000
	006 Move W8, [X19+2372]
	007 Move X20, [X20+1560]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE1A000
	013 Move X0, [X0+1560]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2372], W8
	017 Move X0, [X20]
	018 Move W1, 16
	019 Call 0x1C17D6C
	020 Move X19, X0
	021 Call 0x1C25408
	022 And W31, W0, 1
	023 NotImplemented "Instruction CSEL not yet implemented."
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return X0

Method: System.String get_code_base(System.Reflection.Assembly a, System.Boolean escaped)

Disassembly:
	0x032DA074 ADRP X0, 0xE4C000
	0x032DA078 LDR X0, [X0 + 0x3E0]

ISIL:
	001 And W1, W1, 1
	002 Call 0x1C85888
	003 Return X0

Method: System.String get_location()

Disassembly:
	0x032DA07C BL 0x1C16CF4

ISIL:
	001 Call 0x1C85A80
	002 Return X0

Method: System.String get_fullname(System.Reflection.Assembly a)

Disassembly:
	0x032DA080 MOVZ W8, 0x1

ISIL:
	001 Call 0x1C85A0C
	002 Return X0

Method: System.Boolean GetAotIdInternal(System.Byte[] aotid)

Disassembly:
	0x032DA070 TBNZ X8, 0x0, 0x32DA088

ISIL:
	001 Call 0x1C25408
	002 Return X0

Method: System.String GetCodeBase(System.Reflection.Assembly a, System.Boolean escaped)

Disassembly:
	0x032DA084 STRB W8, [X21 + 0x955]
	0x032DA088 LDR X0, [X22]

ISIL:
	001 And W1, W1, 1
	002 Call 0x1C85888
	003 Return X0

Method: System.String get_CodeBase()

Disassembly:
	0x032DA08C LDR W8, [X0 + 0xE0]
	0x032DA090 CBNZ W8, 0x32DA098

ISIL:
	001 Move W1, W31
	002 Call 0x1C85888
	003 Return X0

Method: System.String get_FullName()

Disassembly:
	0x032DA094 BL 0x1C16DFC

ISIL:
	001 Call 0x1C85A0C
	002 Return X0

Method: System.IntPtr get_MonoAssembly()

Disassembly:
	0x032DA098 AND W1, W20, 0x1
	0x032DA09C MOV X0, X19

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.String get_Location()

Disassembly:
	0x032DA0A0 LDP X20, X19, [X31 + 0x20]
	0x032DA0A4 LDP X22, X21, [X31 + 0x10]
	0x032DA0A8 MOV X2, X31
	0x032DA0AC LDR X30, [X31], #0x30
	0x032DA0B0 B 0x33C82AC
	0x032DA0B4 STP X30, X23, [X31 - 0x30]!
	0x032DA0B8 STP X22, X21, [X31 + 0x10]
	0x032DA0BC STP X20, X19, [X31 + 0x20]
	0x032DA0C0 ADRP X22, 0x1102000
	0x032DA0C4 ADRP X23, 0xE4C000
	0x032DA0C8 LDRB W8, [X22 + 0x956]
	0x032DA0CC LDR X23, [X23 + 0x3E0]
	0x032DA0D0 MOV W21, W2
	0x032DA0D4 MOV X19, X1
	0x032DA0D8 MOV X20, X0
	0x032DA0DC TBNZ X8, 0x0, 0x32DA0F4
	0x032DA0E0 ADRP X0, 0xE4C000
	0x032DA0E4 LDR X0, [X0 + 0x3E0]
	0x032DA0E8 BL 0x1C16CF4
	0x032DA0EC MOVZ W8, 0x1
	0x032DA0F0 STRB W8, [X22 + 0x956]
	0x032DA0F4 LDR X0, [X23]
	0x032DA0F8 LDR W8, [X0 + 0xE0]
	0x032DA0FC CBNZ W8, 0x32DA104
	0x032DA100 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1103000
	005 Move W8, [X20+2373]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE1C000
	012 Move X0, [X0+632]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2373], W8
	016 Move W8, [X19+80]
	017 Compare W8, 0
	018 JumpIfEqual {28}
	019 Move X8, 0xE1C000
	020 Move X8, [X8+632]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X8, [X8]
	024 Move X8, [X8+184]
	025 Move X0, [X8]
	026 Move X30, [X31+32]
	027 Return X0
	028 Move X0, X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Call 0x1C85A80
	033 Return X0

Method: System.IntPtr GetManifestResourceInternal(System.String name, out System.Int32 size, out System.Reflection.Module module)

Disassembly:
	0x032DA104 AND W2, W21, 0x1

ISIL:
	001 Call 0x1C8558C
	002 Return X0

Method: System.Boolean IsDefined(System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x032DA108 MOV X0, X20
	0x032DA10C MOV X1, X19
	0x032DA110 LDP X20, X19, [X31 + 0x20]
	0x032DA114 LDP X22, X21, [X31 + 0x10]
	0x032DA118 MOV X3, X31
	0x032DA11C LDP X30, X23, [X31], #0x30
	0x032DA120 B 0x33C7388
	0x032DA124 B 0x1C94174
	0x032DA128 B 0x1C942C8
	0x032DA12C STP X30, X21, [X31 - 0x20]!
	0x032DA130 STP X20, X19, [X31 + 0x10]
	0x032DA134 MOV X19, X1
	0x032DA138 MOV X1, X31
	0x032DA13C MOV X20, X0
	0x032DA140 BL 0x32CCE50
	0x032DA144 TBNZ X0, 0x0, 0x32DA18C
	0x032DA148 CBZ X19, 0x32DA1B8
	0x032DA14C LDR X8, [X20]
	0x032DA150 MOV X0, X20
	0x032DA154 LDP X9, X1, [X8 + 0x1B8]
	0x032DA158 BLR X9
	0x032DA15C MOV X21, X0
	0x032DA160 MOV X0, X19
	0x032DA164 MOV X1, X31
	0x032DA168 BL 0x33BE520
	0x032DA16C CBZ X21, 0x32DA200
	0x032DA170 LDR X8, [X21]
	0x032DA174 MOV X1, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1103000
	008 Move X23, 0xE4D000
	009 Move W8, [X22+2374]
	010 Move X23, [X23+992]
	011 Move W21, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xE4D000
	019 Move X0, [X0+992]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2374], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 And W2, W21, 1
	029 Move X0, X20
	030 Move X1, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X3, X31
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Call MonoCustomAttrs.IsDefined, X0, X1, X2
	039 Return X0

Method: System.Object[] GetCustomAttributes(System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x032DA178 MOV X0, X21
	0x032DA17C LDR X9, [X8 + 0x2A8]
	0x032DA180 LDR X2, [X8 + 0x2B0]
	0x032DA184 BLR X9
	0x032DA188 TBZ X0, 0x0, 0x32DA204
	0x032DA18C MOV X0, X20
	0x032DA190 MOV X1, X31
	0x032DA194 BL 0x32CCE10
	0x032DA198 TBNZ X0, 0x0, 0x32DA1A4
	0x032DA19C MOV X0, X20
	0x032DA1A0 BL 0x32DA2AC
	0x032DA1A4 MOV X0, X20
	0x032DA1A8 MOV X1, X19
	0x032DA1AC LDP X20, X19, [X31 + 0x10]
	0x032DA1B0 LDP X30, X21, [X31], #0x20
	0x032DA1B4 B 0x1C942C8
	0x032DA1B8 ADRP X0, 0xE4C000
	0x032DA1BC LDR X0, [X0 + 0x490]
	0x032DA1C0 BL 0x1C16D08
	0x032DA1C4 BL 0x1C16F10
	0x032DA1C8 MOV X19, X0
	0x032DA1CC ADRP X0, 0xE4C000
	0x032DA1D0 LDR X0, [X0 + 0x4B8]
	0x032DA1D4 BL 0x1C16D08
	0x032DA1D8 MOV X1, X0
	0x032DA1DC MOV X0, X19
	0x032DA1E0 MOV X2, X31
	0x032DA1E4 BL 0x32D2788

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1103000
	008 Move X23, 0xE4D000
	009 Move W8, [X22+2375]
	010 Move X23, [X23+992]
	011 Move W21, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xE4D000
	019 Move X0, [X0+992]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2375], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 And W2, W21, 1
	029 Move X0, X20
	030 Move X1, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X3, X31
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Call MonoCustomAttrs.GetCustomAttributes, X0, X1, X2
	039 Return X0

Method: System.Reflection.Module[] GetModulesInternal()

Disassembly:
	0x032DA1E8 ADRP X0, 0xE4C000

ISIL:
	001 Call 0x1C85844
	002 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x032DA1EC LDR X0, [X0 + 0x4C0]
	0x032DA1F0 BL 0x1C16D08

ISIL:
	001 Move X1, X31
	002 Call Object.GetHashCode, X0
	003 Return X0

Method: System.Boolean Equals(System.Object o)

Disassembly:
	0x032DA1F4 MOV X1, X0
	0x032DA1F8 MOV X0, X19
	0x032DA1FC BL 0x1C16DEC
	0x032DA200 BL 0x1C16F20
	0x032DA204 LDR X8, [X20]
	0x032DA208 MOV X0, X20
	0x032DA20C LDP X9, X1, [X8 + 0x1A8]
	0x032DA210 BLR X9
	0x032DA214 LDR X8, [X20]
	0x032DA218 MOV X21, X0
	0x032DA21C MOV X0, X20
	0x032DA220 LDP X9, X1, [X8 + 0x1B8]
	0x032DA224 BLR X9
	0x032DA228 MOV X20, X0
	0x032DA22C MOV X0, X19
	0x032DA230 MOV X1, X31
	0x032DA234 BL 0x33BE520
	0x032DA238 MOV X19, X0
	0x032DA23C ADRP X0, 0xE4C000
	0x032DA240 LDR X0, [X0 + 0x4C8]
	0x032DA244 BL 0x1C16D08
	0x032DA248 MOV X1, X21
	0x032DA24C MOV X2, X20
	0x032DA250 MOV X3, X19
	0x032DA254 MOV X4, X31
	0x032DA258 BL 0x3227C18
	0x032DA25C MOV X19, X0
	0x032DA260 ADRP X0, 0xE21000
	0x032DA264 LDR X0, [X0 + 0x578]
	0x032DA268 BL 0x1C16D08
	0x032DA26C BL 0x1C16F10
	0x032DA270 MOV X20, X0
	0x032DA274 ADRP X0, 0xE24000
	0x032DA278 LDR X0, [X0 + 0x8A8]
	0x032DA27C BL 0x1C16D08
	0x032DA280 MOV X2, X0
	0x032DA284 MOV X0, X20
	0x032DA288 MOV X1, X19
	0x032DA28C MOV X3, X31
	0x032DA290 BL 0x330E16C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1103000
	006 Move W8, [X21+2376]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE48000
	014 Move X0, [X0+2768]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2376], W8
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Compare X19, 0
	020 JumpIfEqual {32}
	021 Move X8, 0xE48000
	022 Move X8, [X8+2768]
	023 Move X9, [X19]
	024 Move X8, [X8]
	025 Move W11, [X9+304]
	026 Move W10, [X8+304]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X9, [X9+200]
	029 Add X9, X9, X10
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W0, W31
	033 Move W0, 1
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0
	039 Move X0, [X19+16]
	040 Move X1, [X20+16]
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X2, X31
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Call IntPtr.op_Equality, X0, X1
	047 Return X0

Method: System.String ToString()

Disassembly:
	0x032DA294 ADRP X0, 0xE4C000
	0x032DA298 LDR X0, [X0 + 0x4C0]
	0x032DA29C BL 0x1C16D08
	0x032DA2A0 MOV X1, X0
	0x032DA2A4 MOV X0, X20
	0x032DA2A8 BL 0x1C16DEC
	0x032DA2AC STP X30, X19, [X31 - 0x10]!
	0x032DA2B0 LDR X8, [X0]
	0x032DA2B4 LDP X9, X1, [X8 + 0x1B8]
	0x032DA2B8 BLR X9
	0x032DA2BC CBZ X0, 0x32DA2DC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+88]
	005 Compare X0, 0
	006 JumpIfNotEqual {13}
	007 Move X8, [X19]
	008 Move X0, X19
	009 Move X9, [X8+440]
	010 Move X1, [X8+448]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Move [X19+88], X0
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return X0

