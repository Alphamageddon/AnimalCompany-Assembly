Type: System.Reflection.TypeInfo

Method: System.Void .ctor()

Disassembly:
	0x032D38FC STR X8, [X0]
	0x032D3900 ADRP X1, 0xBE1000
	0x032D3904 ADD X1, X1, 0xE58
	0x032D3908 MOV X2, X31
	0x032D390C BL 0x3EB1B00
	0x032D3910 MOV X20, X0
	0x032D3914 BL 0x3EB1AE0
	0x032D3918 MOV X0, X20
	0x032D391C BL 0x1D2C690
	0x032D3920 BL 0x1990590
	0x032D3924 SUB X31, X31, 0x80
	0x032D3928 STP X29, X30, [X31 + 0x20]
	0x032D392C STP X28, X27, [X31 + 0x30]
	0x032D3930 STP X26, X25, [X31 + 0x40]
	0x032D3934 STP X24, X23, [X31 + 0x50]
	0x032D3938 STP X22, X21, [X31 + 0x60]
	0x032D393C STP X20, X19, [X31 + 0x70]
	0x032D3940 ADRP X21, 0x1109000
	0x032D3944 ADRP X27, 0xE20000
	0x032D3948 LDRB W8, [X21 + 0x91F]
	0x032D394C LDR X27, [X27 + 0x6C0]
	0x032D3950 MOV W20, W1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x110A000
	006 Move X21, 0xE21000
	007 Move W8, [X20+2322]
	008 Move X21, [X21+1728]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE21000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2322], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Type..ctor, X0
	031 Return 

Method: System.Reflection.TypeInfo System.Reflection.IReflectableType.GetTypeInfo()

Disassembly:
	0x032D3FA4 LDR W8, [X0 + 0xE0]

ISIL:
	001 Return X0

Method: System.Collections.Generic.IEnumerable`1<System.Reflection.PropertyInfo> get_DeclaredProperties()

Disassembly:
	0x032D3FA8 CBNZ W8, 0x32D3FB0
	0x032D3FAC BL 0x1C16DFC
	0x032D3FB0 MOV X0, X31
	0x032D3FB4 BL 0x33387A0
	0x032D3FB8 ADRP X9, 0xE24000

ISIL:
	001 Move X8, [X0]
	002 Move W1, 62
	003 Move X3, [X8+2024]
	004 Move X2, [X8+2032]
	005 CallNoReturn X3

