Type: System.Reflection.CustomAttributeNamedArgument

Method: System.Void .ctor(System.Type attributeType, System.String memberName, System.Boolean isField, System.Reflection.CustomAttributeTypedArgument typedValue)

Disassembly:
	0x032D3FBC LDR X8, [X20]
	0x032D3FC0 LDR X9, [X9 + 0x110]
	0x032D3FC4 CMP W23, 0x0
	0x032D3FC8 ADRP X10, 0xE53000
	0x032D3FCC MOV X24, X0
	0x032D3FD0 CSEL X9, X9, X28, EQ
	0x032D3FD4 LDR X25, [X9]
	0x032D3FD8 LDRH W9, [X8 + 0x12E]
	0x032D3FDC LDR X10, [X10 + 0x110]
	0x032D3FE0 LDR X1, [X10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 And W8, W3, 1
	004 Move X19, X0
	005 Move [X0], X4
	006 Move [X0+8], X5
	007 Move [X0+16], W8
	008 Move [X0+24], X2
	009 Move [X0+32], X1
	010 Call 0x1C17D44
	011 Move [X19+40], X31
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return 

Method: System.Void .ctor(System.Reflection.MemberInfo memberInfo, System.Object value)

Disassembly:
	0x032D3FE4 CBZ X9, 0x32D4008
	0x032D3FE8 LDR X10, [X8 + 0xB0]
	0x032D3FEC ADD X10, X10, 0x8
	0x032D3FF0 LDUR X11, [X10 - 0x8]
	0x032D3FF4 CMP X11, X1
	0x032D3FF8 B.EQ 0x32D4018
	0x032D3FFC SUBS X9, X9, 0x1
	0x032D4000 ADD X10, X10, 0x10
	0x032D4004 B.NE 0x32D3FF0
	0x032D4008 MOV X0, X20
	0x032D400C MOV W2, W31
	0x032D4010 BL 0x1C5C788
	0x032D4014 B 0x32D4024
	0x032D4018 LDRSW X9, [X10]
	0x032D401C ADD X8, X8, X9, 0x4, LSL
	0x032D4020 ADD X0, X8, 0x138
	0x032D4024 LDP X8, X2, [X0]
	0x032D4028 MOV X0, X20
	0x032D402C MOV W1, W23
	0x032D4030 BLR X8
	0x032D4034 LDR X8, [X27]
	0x032D4038 STP X0, X1, [X31 + 0x10]
	0x032D403C LDR X26, [X29]
	0x032D4040 LDR W9, [X8 + 0xE0]
	0x032D4044 CBNZ W9, 0x32D4050
	0x032D4048 MOV X0, X8
	0x032D404C BL 0x1C16DFC
	0x032D4050 MOV X0, X26
	0x032D4054 MOV X1, X31
	0x032D4058 BL 0x338C698
	0x032D405C MOV X1, X0
	0x032D4060 MOV X0, X21
	0x032D4064 MOV X2, X31
	0x032D4068 BL 0x3395F0C
	0x032D406C AND W1, W0, 0x1
	0x032D4070 ADD X0, X31, 0x10
	0x032D4074 BL 0x32D3924
	0x032D4078 MOV X2, X0
	0x032D407C MOV X0, X24
	0x032D4080 MOV X1, X25
	0x032D4084 MOV X3, X31
	0x032D4088 BL 0x3227D04
	0x032D408C MOV X1, X0
	0x032D4090 MOV X0, X22
	0x032D4094 MOV X2, X31
	0x032D4098 BL 0x321B938
	0x032D409C MOV X22, X0
	0x032D40A0 ADD W23, W23, 0x1
	0x032D40A4 B 0x32D3F30
	0x032D40A8 ADRP X8, 0xE52000
	0x032D40AC LDR X8, [X8 + 0x158]
	0x032D40B0 LDR X1, [X8]
	0x032D40B4 MOV X0, X22
	0x032D40B8 MOV X2, X31
	0x032D40BC BL 0x321B938
	0x032D40C0 LDP X20, X19, [X31 + 0x70]
	0x032D40C4 LDP X22, X21, [X31 + 0x60]
	0x032D40C8 LDP X24, X23, [X31 + 0x50]
	0x032D40CC LDP X26, X25, [X31 + 0x40]
	0x032D40D0 LDP X28, X27, [X31 + 0x30]
	0x032D40D4 LDP X29, X30, [X31 + 0x20]
	0x032D40D8 ADD X31, X31, 0x80
	0x032D40DC RET
	0x032D40E0 BL 0x1C16F20
	0x032D40E4 BL 0x1C16F20
	0x032D40E8 BL 0x1C16F20
	0x032D40EC BL 0x1C171E0
	0x032D40F0 BL 0x1C16F20
	0x032D40F4 BL 0x1C16F20
	0x032D40F8 BL 0x1C16F20
	0x032D40FC BL 0x1C16F20
	0x032D4100 BL 0x1C16F20
	0x032D4104 BL 0x1C16F20
	0x032D4108 B 0x32D41E8
	0x032D410C B 0x32D41E8
	0x032D4110 B 0x32D41E8
	0x032D4114 B 0x32D41E8
	0x032D4118 B 0x32D41E8
	0x032D411C B 0x32D41E8
	0x032D4120 B 0x32D41E8
	0x032D4124 B 0x32D41E8
	0x032D4128 B 0x32D41E8
	0x032D412C B 0x32D41E8
	0x032D4130 B 0x32D41E8
	0x032D4134 B 0x32D41E8
	0x032D4138 B 0x32D41E8
	0x032D413C B 0x32D41E8
	0x032D4140 B 0x32D41E8
	0x032D4144 B 0x32D41E8
	0x032D4148 B 0x32D41E8
	0x032D414C B 0x32D41E8
	0x032D4150 B 0x32D41E8
	0x032D4154 B 0x32D41E8
	0x032D4158 B 0x32D41E8
	0x032D415C B 0x32D41E8
	0x032D4160 B 0x32D41E8
	0x032D4164 B 0x32D41E8
	0x032D4168 B 0x32D41E8
	0x032D416C B 0x32D41E8
	0x032D4170 B 0x32D41E8
	0x032D4174 B 0x32D41E8
	0x032D4178 B 0x32D41E8
	0x032D417C B 0x32D41E8
	0x032D4180 B 0x32D41E8
	0x032D4184 B 0x32D41E8
	0x032D4188 B 0x32D41E8
	0x032D418C B 0x32D41E8
	0x032D4190 B 0x32D41E8
	0x032D4194 B 0x32D41E8
	0x032D4198 B 0x32D41E8
	0x032D419C B 0x32D41E8
	0x032D41A0 B 0x32D41E8
	0x032D41A4 B 0x32D41E8
	0x032D41A8 B 0x32D41E8
	0x032D41AC B 0x32D41E8
	0x032D41B0 B 0x32D41E8
	0x032D41B4 B 0x32D41E8
	0x032D41B8 B 0x32D41E8
	0x032D41BC B 0x32D41E8
	0x032D41C0 B 0x32D41E8
	0x032D41C4 B 0x32D41E8
	0x032D41C8 B 0x32D41E8
	0x032D41CC B 0x32D41E8
	0x032D41D0 B 0x32D41E8
	0x032D41D4 B 0x32D41E8
	0x032D41D8 B 0x32D41E8
	0x032D41DC B 0x32D41E8
	0x032D41E0 B 0x32D41E8
	0x032D41E4 B 0x32D41E8
	0x032D41E8 MOV X20, X0
	0x032D41EC CMP W1, 0x1
	0x032D41F0 B.NE 0x32D4260
	0x032D41F4 MOV X0, X20
	0x032D41F8 BL 0x3EB1AD0
	0x032D41FC MOV X20, X0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x110A000
	009 Move W8, [X22+2323]
	010 Move X21, X2
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xE53000
	018 Move X0, [X0+200]
	019 Call 0x1C17CF4
	020 Move X0, 0xE49000
	021 Move X0, [X0+936]
	022 Call 0x1C17CF4
	023 Move X0, 0xE49000
	024 Move X0, [X0+1008]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+2323], W8
	028 Move X0, X20
	029 Move X1, X31
	030 Call MemberInfo.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {131}
	035 Compare X20, 0
	036 JumpIfEqual {119}
	037 Move X9, 0xE49000
	038 Move X9, [X9+936]
	039 Move X8, [X20]
	040 Move X10, 0xE49000
	041 Move X11, [X9]
	042 Move W9, [X8+304]
	043 Move W12, [X11+304]
	044 Move X10, [X10+1008]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X22, X31
	047 Move X13, [X8+200]
	048 Add X12, X13, X12
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSEL not yet implemented."
	052 Move X10, [X10]
	053 Move W11, [X10+304]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X0, X31
	056 Compare X22, 0
	057 JumpIfEqual {69}
	058 Move X8, [X22]
	059 Move X0, X22
	060 Move X9, [X8+600]
	061 Move X1, [X8+608]
	062 Move X8, [X8+200]
	063 Add X8, X8, X11
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction CSEL not yet implemented."
	067 Compare X22, 0
	068 JumpIfNotEqual {58}
	069 Compare X0, 0
	070 JumpIfEqual {119}
	071 Move X8, [X0]
	072 Move X9, [X8+584]
	073 Move X1, [X8+592]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X23, X0
	076 Call 0x1C17D44
	077 Move [X19+40], X20
	078 Move X8, [X20]
	079 Move X0, X20
	080 Move X9, [X8+440]
	081 Move X1, [X8+448]
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move [X19+32], X0
	084 Compare X21, 0
	085 JumpIfEqual {91}
	086 Move X8, 0xE53000
	087 Move X8, [X8+200]
	088 Move X9, [X21]
	089 Move X8, [X8]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Add X0, X31, 0
	092 Move X1, X23
	093 Move X2, X21
	094 Move [X31], X31
	095 Move [X31+8], X31
	096 Call CustomAttributeTypedArgument..ctor, X0, X1, X2
	097 Move V0, [X31]
	098 Move X0, X21
	099 Call 0x1C17E08
	100 Move V0, [X0]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 NotImplemented "Instruction CSET not yet implemented."
	103 Move [X19], V0
	104 Move [X19+16], W8
	105 Move X8, [X20]
	106 Move X0, X20
	107 Move X9, [X8+424]
	108 Move X1, [X8+432]
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move [X19+24], X0
	111 Move X20, [X31+48]
	112 Move X19, [X31+56]
	113 Move X22, [X31+32]
	114 Move X21, [X31+40]
	115 Move X30, [X31+16]
	116 Move X23, [X31+24]
	117 Add X31, X31, 64
	118 Return 
	119 Move X0, 0xE28000
	120 Move X0, [X0+1400]
	121 Call 0x1C17D08
	122 Call 0x1C17F10
	123 Move X19, X0
	124 Move X0, 0xE53000
	125 Move X0, [X0+208]
	126 Call 0x1C17D08
	127 Move X1, X0
	128 Move X0, X19
	129 Move X2, X31
	130 Call ArgumentException..ctor, X0, X1
	131 Move X0, 0xE25000
	132 Move X0, [X0+1320]
	133 Call 0x1C17D08
	134 Call 0x1C17F10
	135 Move X19, X0
	136 Move X0, 0xE53000
	137 Move X0, [X0+216]
	138 Call 0x1C17D08
	139 Move X1, X0
	140 Move X0, X19
	141 Move X2, X31
	142 Call ArgumentNullException..ctor, X0, X1
	143 Move X0, 0xE53000
	144 Move X0, [X0+224]
	145 Call 0x1C17D08
	146 Move X1, X0
	147 Move X0, X19
	148 Call 0x1C17DEC

Method: System.Void .ctor(System.Reflection.MemberInfo memberInfo, System.Reflection.CustomAttributeTypedArgument typedArgument)

Disassembly:
	0x032D4200 ADRP X0, 0xE4D000
	0x032D4204 LDR X0, [X0 + 0xFC8]
	0x032D4208 BL 0x1C16D08
	0x032D420C LDR X8, [X20]
	0x032D4210 LDR X1, [X8]
	0x032D4214 BL 0x1C17270
	0x032D4218 TBZ X0, 0x0, 0x32D4238
	0x032D421C BL 0x3EB1AE0
	0x032D4220 LDR V0, [X19]
	0x032D4224 ADRP X0, 0xE52000
	0x032D4228 STR V0, [X31]
	0x032D422C LDR X0, [X0 + 0xC8]
	0x032D4230 BL 0x1C16D08
	0x032D4234 B 0x32D3A94
	0x032D4238 MOVZ W0, 0x8
	0x032D423C BL 0x3EB1AF0
	0x032D4240 LDR X8, [X20]
	0x032D4244 STR X8, [X0]
	0x032D4248 ADRP X1, 0xBE0000
	0x032D424C ADD X1, X1, 0xE58
	0x032D4250 MOV X2, X31
	0x032D4254 BL 0x3EB1B00
	0x032D4258 MOV X20, X0
	0x032D425C BL 0x3EB1AE0
	0x032D4260 MOV X0, X20
	0x032D4264 BL 0x1D2C690
	0x032D4268 BL 0x1990590
	0x032D426C STR X30, [X31 - 0x20]!
	0x032D4270 STP X20, X19, [X31 + 0x10]
	0x032D4274 CBZ X1, 0x32D42A8
	0x032D4278 MOV X19, X0
	0x032D427C MOV X0, X1
	0x032D4280 MOV X20, X1
	0x032D4284 BL 0x32D42F0
	0x032D4288 STR X0, [X19 + 0x8]
	0x032D428C MOV X0, X20
	0x032D4290 MOV X1, X31
	0x032D4294 BL 0x33BE520
	0x032D4298 STR X0, [X19]
	0x032D429C LDP X20, X19, [X31 + 0x10]
	0x032D42A0 LDR X30, [X31], #0x20
	0x032D42A4 RET
	0x032D42A8 ADRP X0, 0xE24000
	0x032D42AC LDR X0, [X0 + 0x528]
	0x032D42B0 BL 0x1C16D08
	0x032D42B4 BL 0x1C16F10
	0x032D42B8 MOV X19, X0
	0x032D42BC ADRP X0, 0xE29000
	0x032D42C0 LDR X0, [X0 + 0xEC8]
	0x032D42C4 BL 0x1C16D08
	0x032D42C8 MOV X1, X0
	0x032D42CC MOV X0, X19
	0x032D42D0 MOV X2, X31
	0x032D42D4 BL 0x330E100
	0x032D42D8 ADRP X0, 0xE52000
	0x032D42DC LDR X0, [X0 + 0x160]
	0x032D42E0 BL 0x1C16D08
	0x032D42E4 MOV X1, X0
	0x032D42E8 MOV X0, X19
	0x032D42EC BL 0x1C16DEC
	0x032D42F0 STR X30, [X31 - 0x20]!
	0x032D42F4 STP X20, X19, [X31 + 0x10]
	0x032D42F8 ADRP X20, 0x1108000
	0x032D42FC LDRB W8, [X20 + 0x920]
	0x032D4300 MOV X19, X0
	0x032D4304 TBNZ X8, 0x0, 0x32D431C
	0x032D4308 ADRP X0, 0xE1F000
	0x032D430C LDR X0, [X0 + 0xDF8]
	0x032D4310 BL 0x1C16CF4
	0x032D4314 MOVZ W8, 0x1
	0x032D4318 STRB W8, [X20 + 0x920]
	0x032D431C CBZ X19, 0x32D439C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1109000
	008 Move W8, [X23+2324]
	009 Move X21, X3
	010 Move X22, X2
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xE49000
	018 Move X0, [X0+936]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+2324], W8
	022 Move X0, X20
	023 Move X1, X31
	024 Call MemberInfo.op_Equality, X0, X1
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {68}
	029 Call 0x1C17D44
	030 Move [X19+40], X20
	031 Compare X20, 0
	032 JumpIfEqual {86}
	033 Move X8, [X20]
	034 Move X23, 0xE49000
	035 Move X0, X20
	036 Move X9, [X8+440]
	037 Move X1, [X8+448]
	038 Move X23, [X23+936]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move [X19+32], X0
	041 Move [X19], X22
	042 Move [X19+8], X21
	043 Move X9, [X20]
	044 Move X8, [X23]
	045 Move W11, [X9+304]
	046 Move W10, [X8+304]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W8, W31
	049 Move X9, [X9+200]
	050 Add X9, X9, X10
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CSET not yet implemented."
	054 Move [X19+16], W8
	055 Move X8, [X20]
	056 Move X0, X20
	057 Move X9, [X8+424]
	058 Move X1, [X8+432]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move [X19+24], X0
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Move X23, [X31+56]
	067 Return 
	068 Move X0, 0xE25000
	069 Move X0, [X0+1320]
	070 Call 0x1C17D08
	071 Call 0x1C17F10
	072 Move X19, X0
	073 Move X0, 0xE53000
	074 Move X0, [X0+216]
	075 Call 0x1C17D08
	076 Move X1, X0
	077 Move X0, X19
	078 Move X2, X31
	079 Call ArgumentNullException..ctor, X0, X1
	080 Move X0, 0xE53000
	081 Move X0, [X0+232]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X19
	085 Call 0x1C17DEC
	086 Call 0x1C17F20

Method: System.Reflection.CustomAttributeTypedArgument get_TypedValue()

Disassembly:
	0x032D4320 MOV X0, X19
	0x032D4324 MOV X1, X31
	0x032D4328 BL 0x33BE520

ISIL:
	001 Move X8, [X0]
	002 Move X1, [X0+8]
	003 Move X0, X8
	004 Return X0

Method: System.Boolean get_IsField()

Disassembly:
	0x032D432C CBZ X0, 0x32D439C
	0x032D4330 LDR X8, [X0]

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.String get_MemberName()

Disassembly:
	0x032D4334 LDR X9, [X8 + 0x588]
	0x032D4338 LDR X1, [X8 + 0x590]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Reflection.MemberInfo get_MemberInfo()

Disassembly:
	0x032D433C BLR X9
	0x032D4340 TBZ X0, 0x0, 0x32D438C
	0x032D4344 ADRP X9, 0xE1F000
	0x032D4348 LDR X9, [X9 + 0xDF8]
	0x032D434C LDR X8, [X19]
	0x032D4350 LDR X1, [X9]
	0x032D4354 LDRB W10, [X8 + 0x130]
	0x032D4358 LDRB W9, [X1 + 0x130]
	0x032D435C CMP W10, W9
	0x032D4360 B.CC 0x32D43A0
	0x032D4364 LDR X8, [X8 + 0xC8]
	0x032D4368 ADD X8, X8, X9, 0x3, LSL
	0x032D436C LDUR X8, [X8 - 0x8]
	0x032D4370 CMP X8, X1
	0x032D4374 B.NE 0x32D43A0
	0x032D4378 MOV X0, X19
	0x032D437C LDP X20, X19, [X31 + 0x10]
	0x032D4380 MOV X1, X31
	0x032D4384 LDR X30, [X31], #0x20
	0x032D4388 B 0x33B1614
	0x032D438C MOV X0, X19
	0x032D4390 LDP X20, X19, [X31 + 0x10]
	0x032D4394 LDR X30, [X31], #0x20
	0x032D4398 RET
	0x032D439C BL 0x1C16F20
	0x032D43A0 MOV X0, X19
	0x032D43A4 BL 0x1C171E0
	0x032D43A8 LDR X0, [X0]
	0x032D43AC RET
	0x032D43B0 LDR X0, [X0 + 0x8]
	0x032D43B4 RET
	0x032D43B8 SUB X31, X31, 0x40
	0x032D43BC STR X30, [X31 + 0x10]
	0x032D43C0 STP X22, X21, [X31 + 0x20]
	0x032D43C4 STP X20, X19, [X31 + 0x30]
	0x032D43C8 ADRP X22, 0x1108000
	0x032D43CC ADRP X21, 0xE52000
	0x032D43D0 LDRB W8, [X22 + 0x91B]
	0x032D43D4 LDR X21, [X21 + 0xC8]
	0x032D43D8 MOV X19, X1
	0x032D43DC MOV X20, X0
	0x032D43E0 TBNZ X8, 0x0, 0x32D43F8
	0x032D43E4 ADRP X0, 0xE52000
	0x032D43E8 LDR X0, [X0 + 0xC8]
	0x032D43EC BL 0x1C16CF4
	0x032D43F0 MOVZ W8, 0x1
	0x032D43F4 STRB W8, [X22 + 0x91B]
	0x032D43F8 LDR V0, [X20]
	0x032D43FC LDR X0, [X21]
	0x032D4400 ADD X1, X31, 0x0
	0x032D4404 STR V0, [X31]
	0x032D4408 BL 0x1C16E04
	0x032D440C CMP X0, X19
	0x032D4410 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, [X0+40]
	005 Move X19, X0
	006 Call 0x1C17D44
	007 Move X0, X20
	008 Move X1, X31
	009 Call MemberInfo.op_Equality, X0, X1
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {38}
	014 Move X0, [X19+32]
	015 Compare X0, 0
	016 JumpIfEqual {43}
	017 Move W8, [X19+16]
	018 Move X1, [X19+24]
	019 Compare W8, 0
	020 JumpIfEqual {26}
	021 Move X8, [X0]
	022 Move W2, 20
	023 Move X9, [X8+1656]
	024 Move X3, [X8+1664]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move W2, 20
	027 Move X3, X31
	028 Call Type.GetProperty, X0, X1, X2
	029 Move X1, X31
	030 Move X20, X0
	031 Call MemberInfo.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {44}
	036 Call 0x1C17D44
	037 Move [X19+40], X20
	038 Move X0, X20
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return X0
	043 Call 0x1C17F20
	044 Move X0, 0xE4E000
	045 Move X0, [X0+4024]
	046 Call 0x1C17D08
	047 Call 0x19913D0
	048 Move X0, X31
	049 Call 0x32D6678
	050 Move X19, [X19+32]
	051 Move X20, X0
	052 Call 0x19913C0
	053 Move X0, X20
	054 Move X1, X19
	055 Move X2, X31
	056 Call ReflectionExecutionDomainCallbacks.CreateMissingMetadataException, X0, X1
	057 Move X19, X0
	058 Move X0, 0xE53000
	059 Move X0, [X0+240]
	060 Call 0x1C17D08
	061 Move X1, X0
	062 Move X0, X19
	063 Call 0x1C17DEC

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x032D4414 LDP X22, X21, [X31 + 0x20]
	0x032D4418 LDR X30, [X31 + 0x10]
	0x032D441C CSET W0, EQ
	0x032D4420 ADD X31, X31, 0x40
	0x032D4424 RET
	0x032D4428 SUB X31, X31, 0x30
	0x032D442C STP X30, X21, [X31 + 0x10]
	0x032D4430 STP X20, X19, [X31 + 0x20]
	0x032D4434 ADRP X21, 0x1108000
	0x032D4438 ADRP X20, 0xE52000
	0x032D443C LDRB W8, [X21 + 0x91C]
	0x032D4440 LDR X20, [X20 + 0xC8]
	0x032D4444 MOV X19, X0
	0x032D4448 TBNZ X8, 0x0, 0x32D4460
	0x032D444C ADRP X0, 0xE52000
	0x032D4450 LDR X0, [X0 + 0xC8]
	0x032D4454 BL 0x1C16CF4
	0x032D4458 MOVZ W8, 0x1
	0x032D445C STRB W8, [X21 + 0x91C]
	0x032D4460 LDR V0, [X19]
	0x032D4464 LDR X0, [X20]
	0x032D4468 ADD X1, X31, 0x0
	0x032D446C STR V0, [X31]
	0x032D4470 BL 0x1C16E04
	0x032D4474 MOV X1, X31
	0x032D4478 BL 0x33D55D8
	0x032D447C LDP X20, X19, [X31 + 0x20]
	0x032D4480 LDP X30, X21, [X31 + 0x10]
	0x032D4484 ADD X31, X31, 0x30
	0x032D4488 RET

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0x1109000
	008 Move X21, 0xE53000
	009 Move W8, [X22+2325]
	010 Move X21, [X21+248]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xE53000
	018 Move X0, [X0+248]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+2325], W8
	022 Move V1, [X20+16]
	023 Move V0, [X20+32]
	024 Move V2, [X20]
	025 Move X0, [X21]
	026 Add X1, X31, 0
	027 Move [X31+16], V1
	028 Move [X31+24], V0
	029 Move [X31], V2
	030 Call 0x1C17E04
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X20, [X31+80]
	033 Move X19, [X31+88]
	034 Move X22, [X31+64]
	035 Move X21, [X31+72]
	036 Move X30, [X31+48]
	037 NotImplemented "Instruction CSET not yet implemented."
	038 Add X31, X31, 96
	039 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x032D448C SUB X31, X31, 0x50
	0x032D4490 STP X1, X30, [X31 + 0x18]
	0x032D4494 STP X22, X21, [X31 + 0x30]
	0x032D4498 STP X20, X19, [X31 + 0x40]
	0x032D449C ADRP X22, 0x1108000
	0x032D44A0 STR X0, [X31 + 0x10]
	0x032D44A4 ADRP X21, 0xE52000
	0x032D44A8 LDRB W8, [X22 + 0x91D]
	0x032D44AC LDR X21, [X21 + 0xC8]
	0x032D44B0 MOV X19, X3
	0x032D44B4 MOV X20, X2
	0x032D44B8 TBNZ X8, 0x0, 0x32D44D0
	0x032D44BC ADRP X0, 0xE52000
	0x032D44C0 LDR X0, [X0 + 0xC8]
	0x032D44C4 BL 0x1C16CF4
	0x032D44C8 MOVZ W8, 0x1
	0x032D44CC STRB W8, [X22 + 0x91D]
	0x032D44D0 LDR X0, [X21]
	0x032D44D4 ADD X1, X31, 0x0
	0x032D44D8 STP X20, X19, [X31]
	0x032D44DC BL 0x1C16E04
	0x032D44E0 MOV X1, X0
	0x032D44E4 ADD X0, X31, 0x10
	0x032D44E8 BL 0x32D43B8
	0x032D44EC LDP X20, X19, [X31 + 0x40]
	0x032D44F0 LDP X22, X21, [X31 + 0x30]
	0x032D44F4 LDR X30, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0x1109000
	007 Move X20, 0xE53000
	008 Move W8, [X21+2326]
	009 Move X20, [X20+248]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xE53000
	016 Move X0, [X0+248]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2326], W8
	020 Move V1, [X19+16]
	021 Move V0, [X19+32]
	022 Move V2, [X19]
	023 Move X0, [X20]
	024 Add X1, X31, 0
	025 Move [X31+16], V1
	026 Move [X31+24], V0
	027 Move [X31], V2
	028 Call 0x1C17E04
	029 Move X1, X31
	030 Call ValueType.GetHashCode, X0
	031 Move X20, [X31+64]
	032 Move X19, [X31+72]
	033 Move X30, [X31+48]
	034 Move X21, [X31+56]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Boolean op_Equality(System.Reflection.CustomAttributeNamedArgument left, System.Reflection.CustomAttributeNamedArgument right)

Disassembly:
	0x032D44F8 AND W0, W0, 0x1
	0x032D44FC ADD X31, X31, 0x50
	0x032D4500 RET
	0x032D4504 SUB X31, X31, 0x50
	0x032D4508 STP X1, X30, [X31 + 0x18]
	0x032D450C STP X22, X21, [X31 + 0x30]
	0x032D4510 STP X20, X19, [X31 + 0x40]
	0x032D4514 ADRP X22, 0x1108000
	0x032D4518 STR X0, [X31 + 0x10]
	0x032D451C ADRP X21, 0xE52000
	0x032D4520 LDRB W8, [X22 + 0x91E]
	0x032D4524 LDR X21, [X21 + 0xC8]
	0x032D4528 MOV X19, X3
	0x032D452C MOV X20, X2
	0x032D4530 TBNZ X8, 0x0, 0x32D4548
	0x032D4534 ADRP X0, 0xE52000
	0x032D4538 LDR X0, [X0 + 0xC8]
	0x032D453C BL 0x1C16CF4
	0x032D4540 MOVZ W8, 0x1
	0x032D4544 STRB W8, [X22 + 0x91E]
	0x032D4548 LDR X0, [X21]
	0x032D454C ADD X1, X31, 0x0
	0x032D4550 STP X20, X19, [X31]
	0x032D4554 BL 0x1C16E04
	0x032D4558 MOV X1, X0
	0x032D455C ADD X0, X31, 0x10
	0x032D4560 BL 0x32D43B8
	0x032D4564 LDP X20, X19, [X31 + 0x40]
	0x032D4568 LDP X22, X21, [X31 + 0x30]
	0x032D456C LDR X30, [X31 + 0x20]
	0x032D4570 ORN W8, W31, W0, 0x0
	0x032D4574 AND W0, W8, 0x1

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0x1109000
	008 Move X21, 0xE53000
	009 Move W8, [X22+2327]
	010 Move X21, [X21+248]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xE53000
	018 Move X0, [X0+248]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+2327], W8
	022 Move V1, [X20+16]
	023 Move V0, [X20+32]
	024 Move V2, [X20]
	025 Move X0, [X21]
	026 Add X1, X31, 0
	027 Move [X31+16], V1
	028 Move [X31+24], V0
	029 Move [X31], V2
	030 Call 0x1C17E04
	031 Move X1, X0
	032 Move X0, X19
	033 Call CustomAttributeNamedArgument.Equals, X0, X1
	034 Move X20, [X31+80]
	035 Move X19, [X31+88]
	036 Move X22, [X31+64]
	037 Move X21, [X31+72]
	038 Move X30, [X31+48]
	039 And W0, W0, 1
	040 Add X31, X31, 96
	041 Return X0

Method: System.Boolean op_Inequality(System.Reflection.CustomAttributeNamedArgument left, System.Reflection.CustomAttributeNamedArgument right)

Disassembly:
	0x032D4578 ADD X31, X31, 0x50
	0x032D457C RET
	0x032D4580 MOV W1, W31
	0x032D4584 B 0x32D3924
	0x032D4588 MOV X1, X31
	0x032D458C B 0x3398838
	0x032D4590 MOV X2, X31
	0x032D4594 B 0x33A8148
	0x032D4598 MOV X2, X31
	0x032D459C B 0x33A7D48
	0x032D45A0 AND W2, W2, 0x1
	0x032D45A4 MOV X3, X31
	0x032D45A8 B 0x33A7D50
	0x032D45AC MOV X1, X31
	0x032D45B0 B 0x33A8010
	0x032D45B4 MOV X1, X31
	0x032D45B8 B 0x33A7824
	0x032D45BC MOV X2, X31
	0x032D45C0 B 0x33A7DDC
	0x032D45C4 MOV X2, X31
	0x032D45C8 B 0x33A7528
	0x032D45CC AND W2, W2, 0x1
	0x032D45D0 MOV X3, X31
	0x032D45D4 B 0x33A7530
	0x032D45D8 MOV X2, X31
	0x032D45DC B 0x33A7A6C
	0x032D45E0 MOV W5, W4
	0x032D45E4 MOV X4, X31
	0x032D45E8 MOV X6, X31
	0x032D45EC B 0x32D45F0
	0x032D45F0 SUB X31, X31, 0x70
	0x032D45F4 STP X29, X30, [X31 + 0x10]
	0x032D45F8 STP X28, X27, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0x1109000
	008 Move X21, 0xE53000
	009 Move W8, [X22+2328]
	010 Move X21, [X21+248]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xE53000
	018 Move X0, [X0+248]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+2328], W8
	022 Move V1, [X20+16]
	023 Move V0, [X20+32]
	024 Move V2, [X20]
	025 Move X0, [X21]
	026 Add X1, X31, 0
	027 Move [X31+16], V1
	028 Move [X31+24], V0
	029 Move [X31], V2
	030 Call 0x1C17E04
	031 Move X1, X0
	032 Move X0, X19
	033 Call CustomAttributeNamedArgument.Equals, X0, X1
	034 Move X20, [X31+80]
	035 Move X19, [X31+88]
	036 Move X22, [X31+64]
	037 Move X21, [X31+72]
	038 Move X30, [X31+48]
	039 NotImplemented "Instruction ORN not yet implemented."
	040 And W0, W8, 1
	041 Add X31, X31, 96
	042 Return X0

Method: System.String ToString()

Disassembly:
	0x032D45FC STP X26, X25, [X31 + 0x30]
	0x032D4600 STP X24, X23, [X31 + 0x40]
	0x032D4604 STP X22, X21, [X31 + 0x50]
	0x032D4608 STP X20, X19, [X31 + 0x60]
	0x032D460C ADRP X19, 0x1108000
	0x032D4610 LDRB W8, [X19 + 0x921]
	0x032D4614 MOV X23, X6
	0x032D4618 MOV W21, W5
	0x032D461C MOV X24, X4
	0x032D4620 MOV X22, X3
	0x032D4624 MOV X25, X2
	0x032D4628 MOV X26, X1
	0x032D462C MOV X20, X0
	0x032D4630 TBNZ X8, 0x0, 0x32D46C0
	0x032D4634 ADRP X0, 0xE52000
	0x032D4638 LDR X0, [X0 + 0x168]
	0x032D463C BL 0x1C16CF4
	0x032D4640 ADRP X0, 0xE47000
	0x032D4644 LDR X0, [X0 + 0xB60]
	0x032D4648 BL 0x1C16CF4
	0x032D464C ADRP X0, 0xE51000
	0x032D4650 LDR X0, [X0 + 0x188]
	0x032D4654 BL 0x1C16CF4
	0x032D4658 ADRP X0, 0xE1F000
	0x032D465C LDR X0, [X0 + 0x6C0]
	0x032D4660 BL 0x1C16CF4
	0x032D4664 ADRP X0, 0xE52000
	0x032D4668 LDR X0, [X0 + 0x170]
	0x032D466C BL 0x1C16CF4
	0x032D4670 ADRP X0, 0xE52000
	0x032D4674 LDR X0, [X0 + 0x178]
	0x032D4678 BL 0x1C16CF4
	0x032D467C ADRP X0, 0xE24000
	0x032D4680 LDR X0, [X0 + 0x170]
	0x032D4684 BL 0x1C16CF4
	0x032D4688 ADRP X0, 0xE52000
	0x032D468C LDR X0, [X0 + 0x180]
	0x032D4690 BL 0x1C16CF4
	0x032D4694 ADRP X0, 0xE52000
	0x032D4698 LDR X0, [X0 + 0x188]
	0x032D469C BL 0x1C16CF4
	0x032D46A0 ADRP X0, 0xE52000
	0x032D46A4 LDR X0, [X0 + 0x190]
	0x032D46A8 BL 0x1C16CF4
	0x032D46AC ADRP X0, 0xE52000
	0x032D46B0 LDR X0, [X0 + 0x198]
	0x032D46B4 BL 0x1C16CF4
	0x032D46B8 MOVZ W8, 0x1
	0x032D46BC STRB W8, [X19 + 0x921]
	0x032D46C0 CBZ X20, 0x32D48B8
	0x032D46C4 CBZ X25, 0x32D48B4
	0x032D46C8 LDR X8, [X25]
	0x032D46CC MOV X0, X25
	0x032D46D0 LDR X9, [X8 + 0x308]
	0x032D46D4 LDR X1, [X8 + 0x310]
	0x032D46D8 BLR X9
	0x032D46DC CBZ X0, 0x32D48B4
	0x032D46E0 LDR X8, [X0]
	0x032D46E4 MOV X19, X26
	0x032D46E8 STR X23, [X31 + 0x8]
	0x032D46EC LDP X9, X1, [X8 + 0x1A8]
	0x032D46F0 BLR X9
	0x032D46F4 CBZ X0, 0x32D48B4
	0x032D46F8 ADRP X27, 0xE52000
	0x032D46FC ADRP X28, 0xE1F000
	0x032D4700 ADRP X29, 0xE47000
	0x032D4704 ADRP X23, 0xE24000
	0x032D4708 LDR X27, [X27 + 0x168]
	0x032D470C LDR X28, [X28 + 0x6C0]
	0x032D4710 LDR X29, [X29 + 0xB60]
	0x032D4714 LDR X23, [X23 + 0x170]
	0x032D4718 LDR X8, [X0]
	0x032D471C LDP X9, X1, [X8 + 0x1B8]
	0x032D4720 BLR X9
	0x032D4724 LDR X8, [X25]
	0x032D4728 MOV X26, X0
	0x032D472C MOV X0, X25
	0x032D4730 LDR X9, [X8 + 0x2E8]
	0x032D4734 LDR X1, [X8 + 0x2F0]
	0x032D4738 BLR X9
	0x032D473C LDR X8, [X28]
	0x032D4740 LDR X27, [X27]
	0x032D4744 MOV X25, X0
	0x032D4748 LDR W9, [X8 + 0xE0]
	0x032D474C CBNZ W9, 0x32D4758
	0x032D4750 MOV X0, X8
	0x032D4754 BL 0x1C16DFC
	0x032D4758 MOV X0, X27
	0x032D475C MOV X1, X31
	0x032D4760 BL 0x338C698
	0x032D4764 MOV X1, X0
	0x032D4768 MOV X0, X20
	0x032D476C MOV X2, X31
	0x032D4770 BL 0x32A8510
	0x032D4774 LDR X0, [X29]
	0x032D4778 MOV X1, X31
	0x032D477C BL 0x338C698
	0x032D4780 LDR X1, [X23]
	0x032D4784 MOV X3, X0
	0x032D4788 MOV X0, X20
	0x032D478C MOV X2, X19
	0x032D4790 MOV X4, X31
	0x032D4794 BL 0x32A89BC
	0x032D4798 LDR X0, [X29]
	0x032D479C MOV X1, X31
	0x032D47A0 BL 0x338C698
	0x032D47A4 ADRP X8, 0xE52000
	0x032D47A8 LDR X8, [X8 + 0x180]
	0x032D47AC MOV X3, X0
	0x032D47B0 MOV X0, X20
	0x032D47B4 MOV X2, X26
	0x032D47B8 LDR X1, [X8]
	0x032D47BC MOV X4, X31
	0x032D47C0 BL 0x32A89BC
	0x032D47C4 LDR X0, [X29]
	0x032D47C8 MOV X1, X31
	0x032D47CC BL 0x338C698
	0x032D47D0 ADRP X8, 0xE52000
	0x032D47D4 LDR X8, [X8 + 0x188]
	0x032D47D8 MOV X3, X0
	0x032D47DC MOV X0, X20
	0x032D47E0 MOV X2, X25
	0x032D47E4 LDR X1, [X8]
	0x032D47E8 MOV X4, X31
	0x032D47EC BL 0x32A89BC
	0x032D47F0 LDR X0, [X29]
	0x032D47F4 MOV X1, X31
	0x032D47F8 BL 0x338C698
	0x032D47FC ADRP X8, 0xE52000
	0x032D4800 LDR X8, [X8 + 0x198]
	0x032D4804 MOV X3, X0
	0x032D4808 MOV X0, X20
	0x032D480C MOV X2, X22
	0x032D4810 LDR X1, [X8]
	0x032D4814 MOV X4, X31
	0x032D4818 BL 0x32A89BC
	0x032D481C LDR X0, [X29]
	0x032D4820 MOV X1, X31
	0x032D4824 BL 0x338C698
	0x032D4828 ADRP X8, 0xE52000
	0x032D482C LDR X8, [X8 + 0x170]
	0x032D4830 MOV X3, X0
	0x032D4834 MOV X0, X20
	0x032D4838 MOV X2, X24
	0x032D483C LDR X1, [X8]
	0x032D4840 MOV X4, X31
	0x032D4844 BL 0x32A89BC
	0x032D4848 ADRP X8, 0xE52000
	0x032D484C LDR X8, [X8 + 0x178]
	0x032D4850 MOV X0, X20
	0x032D4854 MOV W2, W21
	0x032D4858 MOV X3, X31
	0x032D485C LDR X1, [X8]
	0x032D4860 BL 0x32A8F28
	0x032D4864 ADRP X8, 0xE51000
	0x032D4868 LDR X8, [X8 + 0x188]
	0x032D486C MOV X1, X31
	0x032D4870 LDR X0, [X8]
	0x032D4874 BL 0x338C698
	0x032D4878 ADRP X8, 0xE52000
	0x032D487C LDR X8, [X8 + 0x190]
	0x032D4880 MOV X3, X0
	0x032D4884 MOV X0, X20
	0x032D4888 LDR X2, [X31 + 0x8]
	0x032D488C LDR X1, [X8]
	0x032D4890 LDP X20, X19, [X31 + 0x60]
	0x032D4894 LDP X22, X21, [X31 + 0x50]
	0x032D4898 LDP X24, X23, [X31 + 0x40]
	0x032D489C LDP X26, X25, [X31 + 0x30]
	0x032D48A0 LDP X28, X27, [X31 + 0x20]
	0x032D48A4 LDP X29, X30, [X31 + 0x10]
	0x032D48A8 MOV X4, X31
	0x032D48AC ADD X31, X31, 0x70
	0x032D48B0 B 0x32A89BC
	0x032D48B4 BL 0x1C16F20
	0x032D48B8 ADRP X0, 0xE24000
	0x032D48BC LDR X0, [X0 + 0x528]
	0x032D48C0 BL 0x1C16D08
	0x032D48C4 BL 0x1C16F10
	0x032D48C8 MOV X19, X0
	0x032D48CC ADRP X0, 0xE49000
	0x032D48D0 LDR X0, [X0 + 0x2D8]
	0x032D48D4 BL 0x1C16D08
	0x032D48D8 MOV X1, X0
	0x032D48DC MOV X0, X19
	0x032D48E0 MOV X2, X31
	0x032D48E4 BL 0x330E100
	0x032D48E8 ADRP X0, 0xE52000
	0x032D48EC LDR X0, [X0 + 0x1A0]
	0x032D48F0 BL 0x1C16D08
	0x032D48F4 MOV X1, X0
	0x032D48F8 MOV X0, X19
	0x032D48FC BL 0x1C16DEC
	0x032D4900 STP X30, X25, [X31 - 0x40]!
	0x032D4904 STP X24, X23, [X31 + 0x10]
	0x032D4908 STP X22, X21, [X31 + 0x20]
	0x032D490C STP X20, X19, [X31 + 0x30]
	0x032D4910 ADRP X21, 0x1108000
	0x032D4914 LDRB W8, [X21 + 0x922]
	0x032D4918 MOV X19, X1
	0x032D491C MOV X20, X0
	0x032D4920 TBNZ X8, 0x0, 0x32D49B0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X20, 0x1109000
	008 Move X21, 0xE20000
	009 Move W8, [X20+2329]
	010 Move X21, [X21+1728]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0xE22000
	017 Move X0, [X0+3144]
	018 Call 0x1C17CF4
	019 Move X0, 0xE53000
	020 Move X0, [X0+248]
	021 Call 0x1C17CF4
	022 Move X0, 0xE49000
	023 Move X0, [X0+936]
	024 Call 0x1C17CF4
	025 Move X0, 0xE49000
	026 Move X0, [X0+1008]
	027 Call 0x1C17CF4
	028 Move X0, 0xE2A000
	029 Move X0, [X0+2408]
	030 Call 0x1C17CF4
	031 Move X0, 0xE20000
	032 Move X0, [X0+1728]
	033 Call 0x1C17CF4
	034 Move X0, 0xE53000
	035 Move X0, [X0+256]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+2329], W8
	039 Move X0, [X21]
	040 Move X20, [X19+32]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X20
	046 Move X1, X31
	047 Move X2, X31
	048 Call Type.op_Equality, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {66}
	053 Move X8, 0xE53000
	054 Move V2, [X19+16]
	055 Move V0, [X19+32]
	056 Move V1, [X19]
	057 Move X8, [X8+248]
	058 Move [X31+16], V2
	059 Move [X31+24], V0
	060 Move [X31], V1
	061 Move X0, [X8]
	062 Add X1, X31, 0
	063 Call 0x1C17E04
	064 Move X1, X31
	065 Call ValueType.ToString, X0
	066 Move X20, [X19+40]
	067 Call 0x1C17D44
	068 Move X0, X20
	069 Move X1, X31
	070 Call MemberInfo.op_Equality, X0, X1
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {76}
	075 Move W20, 1
	076 Move W8, [X19+16]
	077 Move X20, [X19+40]
	078 Compare W8, 0
	079 JumpIfEqual {98}
	080 Call 0x1C17D44
	081 Compare X20, 0
	082 JumpIfEqual {168}
	083 Move X9, 0xE49000
	084 Move X9, [X9+936]
	085 Move X8, [X20]
	086 Move X1, [X9]
	087 Move W10, [X8+304]
	088 Move W9, [X1+304]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X10, [X8+200]
	091 Add X9, X10, X9
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X1, [X8+608]
	095 Move X9, [X8+600]
	096 Move X0, X20
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Call 0x1C17D44
	099 Compare X20, 0
	100 JumpIfEqual {169}
	101 Move X9, 0xE49000
	102 Move X9, [X9+1008]
	103 Move X8, [X20]
	104 Move X1, [X9]
	105 Move W10, [X8+304]
	106 Move W9, [X1+304]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X10, [X8+200]
	109 Add X9, X10, X9
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X1, [X8+592]
	113 Move X9, [X8+584]
	114 Move X0, X20
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move X8, 0xE2A000
	117 Move X20, X0
	118 Move X0, [X21]
	119 Move X8, [X8+2408]
	120 Move W9, [X0+224]
	121 Move X21, [X8]
	122 Compare W9, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move X0, X21
	126 Move X1, X31
	127 Call Type.GetTypeFromHandle, X0
	128 Move X1, X0
	129 Move X0, X20
	130 Move X2, X31
	131 Call Type.op_Inequality, X0, X1
	132 Move W20, W0
	133 Move X8, 0xE22000
	134 Move X8, [X8+3144]
	135 Move X0, [X8]
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1C17DFC
	140 Move X0, X31
	141 Call CultureInfo.get_CurrentCulture
	142 Move V0, [X19]
	143 Move X22, [X19+24]
	144 Move X21, X0
	145 Move [X31+3], V0
	146 And W1, W20, 1
	147 Add X0, X31, 48
	148 Call CustomAttributeTypedArgument.ToString, X0, X1
	149 Move X8, 0xE53000
	150 Move X8, [X8+256]
	151 Move X3, X0
	152 Move X1, [X8]
	153 Move X0, X21
	154 Move X2, X22
	155 Move X4, X31
	156 Call String.Format, X0, X1, X2, X3
	157 Move X20, [X31+96]
	158 Move X19, [X31+104]
	159 Move X22, [X31+80]
	160 Move X21, [X31+88]
	161 Move X30, [X31+64]
	162 Add X31, X31, 112
	163 Return X0
	164 Move X0, X20
	165 Call 0x1C181E0
	166 Move X0, X20
	167 Call 0x1C181E0
	168 Call 0x1C17F20
	169 Call 0x1C17F20
	170 Move X20, X0
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move X0, X20
	173 Call 0x3EB2AD0
	174 Move X20, X0
	175 Move X0, 0xE4E000
	176 Move X0, [X0+4040]
	177 Call 0x1C17D08
	178 Move X8, [X20]
	179 Move X1, [X8]
	180 Call 0x1C18270
	181 Move TEMP, X0
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfNotEqual {195}
	185 Call 0x3EB2AE0
	186 Move V1, [X19+16]
	187 Move V0, [X19+32]
	188 Move V2, [X19]
	189 Move X0, 0xE53000
	190 Move [X31+16], V1
	191 Move [X31+24], V0
	192 Move [X31], V2
	193 Move X0, [X0+248]
	194 Call 0x1C17D08
	195 Move W0, 8
	196 Call 0x3EB2AF0
	197 Move X8, [X20]
	198 Move [X0], X8
	199 Move X1, 0xBE1000
	200 Add X1, X1, 3672
	201 Move X2, X31
	202 Call 0x3EB2B00
	203 Move X20, X0
	204 Call 0x3EB2AE0
	205 Move X0, X20
	206 Call 0x1D2D690
	207 Call 0x1991590

