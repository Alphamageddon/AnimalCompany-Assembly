Type: System.Reflection.SignatureTypeExtensions

Method: System.Boolean MatchesParameterTypeExactly(System.Type pattern, System.Reflection.ParameterInfo parameter)

Disassembly:
	0x032D2BF8 LDR X3, [X8 + 0x660]
	0x032D2BFC LDR X30, [X31], #0x10
	0x032D2C00 BR X4
	0x032D2C04 BL 0x1C16F20
	0x032D2C08 STP X30, X27, [X31 - 0x50]!
	0x032D2C0C STP X26, X25, [X31 + 0x10]
	0x032D2C10 STP X24, X23, [X31 + 0x20]
	0x032D2C14 STP X22, X21, [X31 + 0x30]
	0x032D2C18 STP X20, X19, [X31 + 0x40]
	0x032D2C1C ADRP X26, 0x110A000
	0x032D2C20 ADRP X27, 0xE21000
	0x032D2C24 LDRB W8, [X26 + 0x911]
	0x032D2C28 LDR X27, [X27 + 0x6C0]
	0x032D2C2C MOV X19, X6
	0x032D2C30 MOV X20, X5
	0x032D2C34 MOV X22, X4
	0x032D2C38 MOV X23, X3
	0x032D2C3C MOV W21, W2
	0x032D2C40 MOV X24, X1
	0x032D2C44 MOV X25, X0
	0x032D2C48 TBNZ X8, 0x0, 0x32D2C60
	0x032D2C4C ADRP X0, 0xE21000
	0x032D2C50 LDR X0, [X0 + 0x6C0]
	0x032D2C54 BL 0x1C16CF4
	0x032D2C58 MOVZ W8, 0x1
	0x032D2C5C STRB W8, [X26 + 0x911]
	0x032D2C60 LDR X0, [X27]
	0x032D2C64 LDR W8, [X0 + 0xE0]
	0x032D2C68 CBNZ W8, 0x32D2C70
	0x032D2C6C BL 0x1C16DFC
	0x032D2C70 MOV X0, X22
	0x032D2C74 MOV X1, X31
	0x032D2C78 MOV X2, X31
	0x032D2C7C BL 0x3395194
	0x032D2C80 LDR X8, [X25 + 0x18]
	0x032D2C84 CBZ X8, 0x32D2CF8
	0x032D2C88 CMP X20, 0x0
	0x032D2C8C CSET W9, NE
	0x032D2C90 ORN W9, W9, W0, 0x0
	0x032D2C94 TBNZ X9, 0x0, 0x32D2CC0
	0x032D2C98 MOV X1, X24
	0x032D2C9C MOV W2, W21
	0x032D2CA0 LDP X20, X19, [X31 + 0x40]
	0x032D2CA4 LDP X22, X21, [X31 + 0x30]
	0x032D2CA8 LDP X24, X23, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x110B000
	006 Move W8, [X21+2315]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE55000
	014 Move X0, [X0+176]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2315], W8
	018 Compare X19, 0
	019 JumpIfEqual {27}
	020 Move X8, 0xE55000
	021 Move X8, [X8+176]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X21, X31
	028 Compare X20, 0
	029 JumpIfEqual {57}
	030 Move X8, [X20]
	031 Move X0, X20
	032 Move X9, [X8+472]
	033 Move X1, [X8+480]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X1, X0
	036 Compare X21, 0
	037 JumpIfEqual {43}
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X0, X21
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 NotImplemented "Instruction CSET not yet implemented."
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return X0
	050 Move X9, [X9+200]
	051 Add X9, X9, X10
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CSEL not yet implemented."
	055 Compare X20, 0
	056 JumpIfNotEqual {30}
	057 Call 0x1C17F20

Method: System.Boolean MatchesExactly(System.Reflection.SignatureType pattern, System.Type actual)

Disassembly:
	0x032D2CAC LDP X26, X25, [X31 + 0x10]
	0x032D2CB0 MOV X0, X8
	0x032D2CB4 MOV X3, X31
	0x032D2CB8 LDP X30, X27, [X31], #0x50
	0x032D2CBC B 0x3397828
	0x032D2CC0 MOV X1, X24
	0x032D2CC4 MOV W2, W21
	0x032D2CC8 MOV X3, X23
	0x032D2CCC MOV X4, X22
	0x032D2CD0 MOV X5, X20
	0x032D2CD4 MOV X6, X19
	0x032D2CD8 LDP X20, X19, [X31 + 0x40]
	0x032D2CDC LDP X22, X21, [X31 + 0x30]
	0x032D2CE0 LDP X24, X23, [X31 + 0x20]
	0x032D2CE4 LDP X26, X25, [X31 + 0x10]
	0x032D2CE8 MOV X0, X8
	0x032D2CEC MOV X7, X31
	0x032D2CF0 LDP X30, X27, [X31], #0x50
	0x032D2CF4 B 0x33979C4
	0x032D2CF8 BL 0x1C16F20
	0x032D2CFC STR X30, [X31 - 0x10]!
	0x032D2D00 LDR X0, [X0 + 0x18]
	0x032D2D04 CBZ X0, 0x32D2D1C
	0x032D2D08 LDR X8, [X0]
	0x032D2D0C LDR X3, [X8 + 0x7E8]
	0x032D2D10 LDR X2, [X8 + 0x7F0]
	0x032D2D14 LDR X30, [X31], #0x10
	0x032D2D18 BR X3
	0x032D2D1C BL 0x1C16F20
	0x032D2D20 STR X30, [X31 - 0x10]!
	0x032D2D24 LDR X0, [X0 + 0x18]
	0x032D2D28 CBZ X0, 0x32D2D40
	0x032D2D2C LDR X8, [X0]
	0x032D2D30 LDR X4, [X8 + 0x768]
	0x032D2D34 LDR X3, [X8 + 0x770]
	0x032D2D38 LDR X30, [X31], #0x10
	0x032D2D3C BR X4
	0x032D2D40 BL 0x1C16F20
	0x032D2D44 STR X30, [X31 - 0x10]!
	0x032D2D48 LDR X0, [X0 + 0x18]
	0x032D2D4C CBZ X0, 0x32D2D64
	0x032D2D50 LDR X8, [X0]
	0x032D2D54 LDR X5, [X8 + 0x6B8]
	0x032D2D58 LDR X4, [X8 + 0x6C0]
	0x032D2D5C LDR X30, [X31], #0x10
	0x032D2D60 BR X5
	0x032D2D64 BL 0x1C16F20
	0x032D2D68 STR X30, [X31 - 0x10]!
	0x032D2D6C LDR X0, [X0 + 0x18]
	0x032D2D70 CBZ X0, 0x32D2D88
	0x032D2D74 LDR X8, [X0]
	0x032D2D78 LDR X3, [X8 + 0x6C8]
	0x032D2D7C LDR X2, [X8 + 0x6D0]
	0x032D2D80 LDR X30, [X31], #0x10
	0x032D2D84 BR X3
	0x032D2D88 BL 0x1C16F20
	0x032D2D8C STR X30, [X31 - 0x10]!
	0x032D2D90 LDR X0, [X0 + 0x18]
	0x032D2D94 CBZ X0, 0x32D2DA4
	0x032D2D98 MOV X1, X31
	0x032D2D9C LDR X30, [X31], #0x10
	0x032D2DA0 B 0x339702C
	0x032D2DA4 BL 0x1C16F20
	0x032D2DA8 STR X30, [X31 - 0x10]!
	0x032D2DAC LDR X0, [X0 + 0x18]
	0x032D2DB0 CBZ X0, 0x32D2DC8
	0x032D2DB4 LDR X8, [X0]
	0x032D2DB8 LDR X2, [X8 + 0x3E8]
	0x032D2DBC LDR X1, [X8 + 0x3F0]
	0x032D2DC0 LDR X30, [X31], #0x10
	0x032D2DC4 BR X2
	0x032D2DC8 BL 0x1C16F20
	0x032D2DCC STR X30, [X31 - 0x10]!
	0x032D2DD0 LDR X0, [X0 + 0x18]
	0x032D2DD4 CBZ X0, 0x32D2DE4
	0x032D2DD8 MOV X1, X31
	0x032D2DDC LDR X30, [X31], #0x10
	0x032D2DE0 B 0x3396BF8
	0x032D2DE4 BL 0x1C16F20
	0x032D2DE8 STR X30, [X31 - 0x10]!
	0x032D2DEC LDR X0, [X0 + 0x18]
	0x032D2DF0 CBZ X0, 0x32D2E00
	0x032D2DF4 MOV X1, X31
	0x032D2DF8 LDR X30, [X31], #0x10
	0x032D2DFC B 0x3397374
	0x032D2E00 BL 0x1C16F20
	0x032D2E04 STR X30, [X31 - 0x10]!
	0x032D2E08 LDR X0, [X0 + 0x18]
	0x032D2E0C CBZ X0, 0x32D2E1C
	0x032D2E10 MOV X1, X31
	0x032D2E14 LDR X30, [X31], #0x10
	0x032D2E18 B 0x3396C08
	0x032D2E1C BL 0x1C16F20
	0x032D2E20 STR X30, [X31 - 0x10]!
	0x032D2E24 LDR X0, [X0 + 0x18]
	0x032D2E28 CBZ X0, 0x32D2E40
	0x032D2E2C LDR X8, [X0]
	0x032D2E30 LDR X2, [X8 + 0x3B8]
	0x032D2E34 LDR X1, [X8 + 0x3C0]
	0x032D2E38 LDR X30, [X31], #0x10
	0x032D2E3C BR X2
	0x032D2E40 BL 0x1C16F20
	0x032D2E44 STR X30, [X31 - 0x10]!
	0x032D2E48 LDR X0, [X0 + 0x18]
	0x032D2E4C CBZ X0, 0x32D2E5C
	0x032D2E50 MOV X1, X31
	0x032D2E54 LDR X30, [X31], #0x10
	0x032D2E58 B 0x3396C18
	0x032D2E5C BL 0x1C16F20
	0x032D2E60 STR X30, [X31 - 0x10]!
	0x032D2E64 LDR X0, [X0 + 0x18]
	0x032D2E68 CBZ X0, 0x32D2E78
	0x032D2E6C MOV X1, X31
	0x032D2E70 LDR X30, [X31], #0x10
	0x032D2E74 B 0x33970C4
	0x032D2E78 BL 0x1C16F20
	0x032D2E7C STR X30, [X31 - 0x10]!
	0x032D2E80 LDR X0, [X0 + 0x18]
	0x032D2E84 CBZ X0, 0x32D2E94
	0x032D2E88 MOV X1, X31
	0x032D2E8C LDR X30, [X31], #0x10
	0x032D2E90 B 0x3397198
	0x032D2E94 BL 0x1C16F20
	0x032D2E98 STR X30, [X31 - 0x10]!
	0x032D2E9C LDR X0, [X0 + 0x18]
	0x032D2EA0 CBZ X0, 0x32D2EB8
	0x032D2EA4 LDR X8, [X0]
	0x032D2EA8 LDR X2, [X8 + 0x398]
	0x032D2EAC LDR X1, [X8 + 0x3A0]
	0x032D2EB0 LDR X30, [X31], #0x10
	0x032D2EB4 BR X2
	0x032D2EB8 BL 0x1C16F20
	0x032D2EBC STR X30, [X31 - 0x10]!
	0x032D2EC0 LDR X0, [X0 + 0x18]
	0x032D2EC4 CBZ X0, 0x32D2EDC
	0x032D2EC8 LDR X8, [X0]
	0x032D2ECC LDR X2, [X8 + 0x428]
	0x032D2ED0 LDR X1, [X8 + 0x430]
	0x032D2ED4 LDR X30, [X31], #0x10
	0x032D2ED8 BR X2
	0x032D2EDC BL 0x1C16F20
	0x032D2EE0 STR X30, [X31 - 0x10]!
	0x032D2EE4 LDR X0, [X0 + 0x18]
	0x032D2EE8 CBZ X0, 0x32D2EF8
	0x032D2EEC MOV X1, X31
	0x032D2EF0 LDR X30, [X31], #0x10
	0x032D2EF4 B 0x3396018
	0x032D2EF8 BL 0x1C16F20
	0x032D2EFC STR X30, [X31 - 0x10]!
	0x032D2F00 LDR X0, [X0 + 0x18]
	0x032D2F04 CBZ X0, 0x32D2F1C
	0x032D2F08 LDR X8, [X0]
	0x032D2F0C LDR X2, [X8 + 0x328]
	0x032D2F10 LDR X1, [X8 + 0x330]
	0x032D2F14 LDR X30, [X31], #0x10
	0x032D2F18 BR X2
	0x032D2F1C BL 0x1C16F20
	0x032D2F20 STR X30, [X31 - 0x10]!
	0x032D2F24 LDR X0, [X0 + 0x18]
	0x032D2F28 CBZ X0, 0x32D2F40
	0x032D2F2C LDR X8, [X0]
	0x032D2F30 AND W1, W1, 0x1
	0x032D2F34 LDP X3, X2, [X8 + 0x1F8]
	0x032D2F38 LDR X30, [X31], #0x10
	0x032D2F3C BR X3
	0x032D2F40 BL 0x1C16F20
	0x032D2F44 STR X30, [X31 - 0x10]!
	0x032D2F48 LDR X0, [X0 + 0x18]
	0x032D2F4C CBZ X0, 0x32D2F68
	0x032D2F50 LDR X8, [X0]
	0x032D2F54 AND W2, W2, 0x1
	0x032D2F58 LDR X4, [X8 + 0x208]
	0x032D2F5C LDR X3, [X8 + 0x210]
	0x032D2F60 LDR X30, [X31], #0x10
	0x032D2F64 BR X4
	0x032D2F68 BL 0x1C16F20
	0x032D2F6C STR X30, [X31 - 0x10]!
	0x032D2F70 LDR X0, [X0 + 0x18]
	0x032D2F74 CBZ X0, 0x32D2F8C
	0x032D2F78 LDR X8, [X0]
	0x032D2F7C AND W2, W2, 0x1
	0x032D2F80 LDP X4, X3, [X8 + 0x1E8]
	0x032D2F84 LDR X30, [X31], #0x10
	0x032D2F88 BR X4
	0x032D2F8C BL 0x1C16F20
	0x032D2F90 LDR X8, [X0 + 0x40]
	0x032D2F94 LDR X4, [X0 + 0x18]
	0x032D2F98 LDR X3, [X0 + 0x28]
	0x032D2F9C MOV X0, X8
	0x032D2FA0 BR X4
	0x032D2FA4 RET
	0x032D2FA8 LDR X8, [X0]
	0x032D2FAC MOVZ W1, 0x3E
	0x032D2FB0 LDR X3, [X8 + 0x7E8]
	0x032D2FB4 LDR X2, [X8 + 0x7F0]
	0x032D2FB8 BR X3
	0x032D2FBC STP X30, X19, [X31 - 0x10]!
	0x032D2FC0 AND W8, W3, 0x1
	0x032D2FC4 MOV X19, X0
	0x032D2FC8 STP X4, X5, [X0]
	0x032D2FCC STRB W8, [X0 + 0x10]
	0x032D2FD0 STP X2, X1, [X0 + 0x18]
	0x032D2FD4 BL 0x1C16D44
	0x032D2FD8 STR X31, [X19 + 0x28]
	0x032D2FDC LDP X30, X19, [X31], #0x10
	0x032D2FE0 RET
	0x032D2FE4 SUB X31, X31, 0x40
	0x032D2FE8 STP X30, X23, [X31 + 0x10]
	0x032D2FEC STP X22, X21, [X31 + 0x20]
	0x032D2FF0 STP X20, X19, [X31 + 0x30]
	0x032D2FF4 ADRP X22, 0x110A000
	0x032D2FF8 LDRB W8, [X22 + 0x913]
	0x032D2FFC MOV X21, X2
	0x032D3000 MOV X20, X1
	0x032D3004 MOV X19, X0
	0x032D3008 TBNZ X8, 0x0, 0x32D3038
	0x032D300C ADRP X0, 0xE53000
	0x032D3010 LDR X0, [X0 + 0xC8]
	0x032D3014 BL 0x1C16CF4
	0x032D3018 ADRP X0, 0xE49000
	0x032D301C LDR X0, [X0 + 0x3A8]
	0x032D3020 BL 0x1C16CF4
	0x032D3024 ADRP X0, 0xE49000
	0x032D3028 LDR X0, [X0 + 0x3F0]
	0x032D302C BL 0x1C16CF4
	0x032D3030 MOVZ W8, 0x1
	0x032D3034 STRB W8, [X22 + 0x913]
	0x032D3038 MOV X0, X20
	0x032D303C MOV X1, X31
	0x032D3040 BL 0x32BE96C
	0x032D3044 TBNZ X0, 0x0, 0x32D31B8
	0x032D3048 CBZ X20, 0x32D3184
	0x032D304C ADRP X9, 0xE49000
	0x032D3050 LDR X9, [X9 + 0x3A8]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X19, 0xE55000
	013 Move X20, 0xE22000
	014 Move X19, [X19+176]
	015 Move X20, [X20+1728]
	016 Move X21, X1
	017 Move X22, X0
	018 Move X24, 0x110B000
	019 Move W25, 1
	020 Move W8, [X24+2316]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, X19
	026 Call 0x1C17CF4
	027 Move X0, X20
	028 Call 0x1C17CF4
	029 Move [X24+2316], W25
	030 Compare X22, 0
	031 JumpIfEqual {291}
	032 Move X8, [X22]
	033 Move X0, X22
	034 Move X9, [X8+1000]
	035 Move X1, [X8+1008]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {52}
	041 Compare X21, 0
	042 JumpIfEqual {291}
	043 Move X8, [X21]
	044 Move X0, X21
	045 Move X9, [X8+1000]
	046 Move X1, [X8+1008]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {116}
	052 Move X8, [X22]
	053 Move X0, X22
	054 Move X9, [X8+1016]
	055 Move X1, [X8+1024]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {84}
	061 Compare X21, 0
	062 JumpIfEqual {291}
	063 Move X8, [X21]
	064 Move X0, X21
	065 Move X9, [X8+1016]
	066 Move X1, [X8+1024]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {277}
	072 Move X8, [X22]
	073 Move X0, X22
	074 Move X9, [X8+1080]
	075 Move X1, [X8+1088]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move X8, [X21]
	078 Move W23, W0
	079 Move X0, X21
	080 Move X9, [X8+1080]
	081 Move X1, [X8+1088]
	082 NotImplemented "Instruction BLR not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X0, X22
	085 Move X1, X31
	086 Call Type.get_IsByRef, X0
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {100}
	091 Compare X21, 0
	092 JumpIfEqual {291}
	093 Move X0, X21
	094 Move X1, X31
	095 Call Type.get_IsByRef, X0
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {116}
	100 Move X0, X22
	101 Move X1, X31
	102 Call Type.get_IsPointer, X0
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {128}
	107 Compare X21, 0
	108 JumpIfEqual {291}
	109 Move X0, X21
	110 Move X1, X31
	111 Call Type.get_IsPointer, X0
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {277}
	116 Move X8, [X22]
	117 Move X0, X22
	118 Move X9, [X8+2376]
	119 Move X1, [X8+2384]
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move X8, [X21]
	122 Move X22, X0
	123 Move X0, X21
	124 Move X9, [X8+1064]
	125 Move X1, [X8+1072]
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move X21, X0
	128 Move X8, [X22]
	129 Move X0, X22
	130 Move X9, [X8+920]
	131 Move X1, [X8+928]
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Move TEMP, X0
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfNotEqual {244}
	137 Compare X21, 0
	138 JumpIfEqual {291}
	139 Move X8, [X21]
	140 Move X0, X21
	141 Move X9, [X8+920]
	142 Move X1, [X8+928]
	143 NotImplemented "Instruction BLR not yet implemented."
	144 Move TEMP, X0
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfNotEqual {277}
	148 Move X8, [X22]
	149 Move X0, X22
	150 Move X9, [X8+1096]
	151 Move X1, [X8+1104]
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Move X8, [X21]
	154 Move X23, X0
	155 Move X0, X21
	156 Move X9, [X8+1096]
	157 Move X1, [X8+1104]
	158 NotImplemented "Instruction BLR not yet implemented."
	159 Move X8, [X20]
	160 Move X24, X0
	161 Move W9, [X8+224]
	162 Compare W9, 0
	163 JumpIfNotEqual {166}
	164 Move X0, X8
	165 Call 0x1C17DFC
	166 Move X0, X23
	167 Move X1, X24
	168 Move X2, X31
	169 Call Type.op_Equality, X0, X1
	170 Move TEMP, X0
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfNotEqual {277}
	174 Move X8, [X22]
	175 Move X0, X22
	176 Move X9, [X8+1112]
	177 Move X1, [X8+1120]
	178 NotImplemented "Instruction BLR not yet implemented."
	179 Move X8, [X21]
	180 Move X22, X0
	181 Move X0, X21
	182 Move X9, [X8+1112]
	183 Move X1, [X8+1120]
	184 NotImplemented "Instruction BLR not yet implemented."
	185 Compare X22, 0
	186 JumpIfEqual {291}
	187 Move X21, X0
	188 Compare X0, 0
	189 JumpIfEqual {291}
	190 Move X8, [X22+24]
	191 Move W9, [X21+24]
	192 NotImplemented "Instruction CMP not yet implemented."
	193 NotImplemented "Instruction CMP not yet implemented."
	194 And X8, X8, 0
	195 Compare X8, 0
	196 JumpIfEqual {243}
	197 Move X25, X31
	198 Subtract X26, X8, 1
	199 Add X27, X21, 32
	200 Add X28, X22, 32
	201 Move X23, [X28]
	202 Compare X23, 0
	203 JumpIfEqual {209}
	204 Move X9, [X23]
	205 Move X8, [X19]
	206 Move W11, [X9+304]
	207 Move W10, [X8+304]
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move X0, X31
	210 Move X9, [X9+200]
	211 Add X9, X9, X10
	212 NotImplemented "Instruction LDUR not yet implemented."
	213 NotImplemented "Instruction CMP not yet implemented."
	214 NotImplemented "Instruction CSEL not yet implemented."
	215 Move W8, [X21+24]
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move X24, [X27]
	218 Compare X0, 0
	219 JumpIfEqual {226}
	220 Move X1, X24
	221 Call SignatureTypeExtensions.MatchesExactly, X0, X1
	222 Move TEMP, X0
	223 And TEMP, TEMP, 1
	224 Compare TEMP, 1
	225 JumpIfEqual {239}
	226 Move X0, [X20]
	227 Move W8, [X0+224]
	228 Compare W8, 0
	229 JumpIfNotEqual {231}
	230 Call 0x1C17DFC
	231 Move X0, X23
	232 Move X1, X24
	233 Move X2, X31
	234 Call Type.op_Inequality, X0, X1
	235 Move TEMP, X0
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfEqual {277}
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Move W8, [X22+24]
	241 Add X25, X25, 1
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Call 0x1C17F28
	244 Move X8, [X22]
	245 Move X0, X22
	246 Move X9, [X8+952]
	247 Move X1, [X8+960]
	248 NotImplemented "Instruction BLR not yet implemented."
	249 Move TEMP, X0
	250 And TEMP, TEMP, 1
	251 Compare TEMP, 1
	252 JumpIfNotEqual {277}
	253 Compare X21, 0
	254 JumpIfEqual {291}
	255 Move X8, [X21]
	256 Move X0, X21
	257 Move X9, [X8+952]
	258 Move X1, [X8+960]
	259 NotImplemented "Instruction BLR not yet implemented."
	260 Move TEMP, X0
	261 And TEMP, TEMP, 1
	262 Compare TEMP, 1
	263 JumpIfNotEqual {277}
	264 Move X8, [X22]
	265 Move X0, X22
	266 Move X9, [X8+1144]
	267 Move X1, [X8+1152]
	268 NotImplemented "Instruction BLR not yet implemented."
	269 Move X8, [X21]
	270 Move W19, W0
	271 Move X0, X21
	272 Move X9, [X8+1144]
	273 Move X1, [X8+1152]
	274 NotImplemented "Instruction BLR not yet implemented."
	275 NotImplemented "Instruction CMP not yet implemented."
	276 NotImplemented "Instruction CSET not yet implemented."
	277 Move W0, W31
	278 Move X20, [X31+80]
	279 Move X19, [X31+88]
	280 Move X22, [X31+64]
	281 Move X21, [X31+72]
	282 Move X24, [X31+48]
	283 Move X23, [X31+56]
	284 Move X26, [X31+32]
	285 Move X25, [X31+40]
	286 Move X28, [X31+16]
	287 Move X27, [X31+24]
	288 Move X30, [X31+96]
	289 Return X0
	290 Move W0, 1
	291 Call 0x1C17F20

Method: System.Type TryResolveAgainstGenericMethod(System.Reflection.SignatureType signatureType, System.Reflection.MethodInfo genericMethod)

Disassembly:
	0x032D3054 LDR X8, [X20]
	0x032D3058 ADRP X10, 0xE49000
	0x032D305C LDR X11, [X9]
	0x032D3060 LDRB W9, [X8 + 0x130]
	0x032D3064 LDRB W12, [X11 + 0x130]
	0x032D3068 LDR X10, [X10 + 0x3F0]
	0x032D306C CMP W9, W12
	0x032D3070 B.CS 0x32D307C
	0x032D3074 MOV X22, X31
	0x032D3078 B 0x32D3090
	0x032D307C LDR X13, [X8 + 0xC8]
	0x032D3080 ADD X12, X13, X12, 0x3, LSL
	0x032D3084 LDUR X12, [X12 - 0x8]
	0x032D3088 CMP X12, X11

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {16}
	005 Move X8, [X1]
	006 Move X19, X0
	007 Move X0, X1
	008 Move X9, [X8+760]
	009 Move X8, [X8+768]
	010 Move X1, X8
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Move X1, X0
	013 Move X0, X19
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Call 0x1C17F20

Method: System.Type TryResolve(System.Reflection.SignatureType signatureType, System.Type[] genericMethodParameters)

Disassembly:
	0x032D308C CSEL X22, X20, X31, EQ
	0x032D3090 LDR X10, [X10]
	0x032D3094 LDRB W11, [X10 + 0x130]
	0x032D3098 CMP W9, W11
	0x032D309C B.CS 0x32D30BC
	0x032D30A0 MOV X0, X31
	0x032D30A4 CBZ X22, 0x32D30D4
	0x032D30A8 LDR X8, [X22]
	0x032D30AC MOV X0, X22
	0x032D30B0 LDR X9, [X8 + 0x258]
	0x032D30B4 LDR X1, [X8 + 0x260]
	0x032D30B8 B 0x32D30E4
	0x032D30BC LDR X8, [X8 + 0xC8]
	0x032D30C0 ADD X8, X8, X11, 0x3, LSL
	0x032D30C4 LDUR X8, [X8 - 0x8]
	0x032D30C8 CMP X8, X10
	0x032D30CC CSEL X0, X20, X31, EQ
	0x032D30D0 CBNZ X22, 0x32D30A8
	0x032D30D4 CBZ X0, 0x32D3184
	0x032D30D8 LDR X8, [X0]
	0x032D30DC LDR X9, [X8 + 0x248]
	0x032D30E0 LDR X1, [X8 + 0x250]
	0x032D30E4 BLR X9
	0x032D30E8 MOV X23, X0
	0x032D30EC BL 0x1C16D44
	0x032D30F0 STR X20, [X19 + 0x28]
	0x032D30F4 LDR X8, [X20]
	0x032D30F8 MOV X0, X20
	0x032D30FC LDP X9, X1, [X8 + 0x1B8]
	0x032D3100 BLR X9
	0x032D3104 STR X0, [X19 + 0x20]
	0x032D3108 CBZ X21, 0x32D3124
	0x032D310C ADRP X8, 0xE53000
	0x032D3110 LDR X8, [X8 + 0xC8]
	0x032D3114 LDR X9, [X21]
	0x032D3118 LDR X8, [X8]
	0x032D311C CMP X9, X8
	0x032D3120 B.EQ 0x32D3140
	0x032D3124 ADD X0, X31, 0x0
	0x032D3128 MOV X1, X23
	0x032D312C MOV X2, X21
	0x032D3130 STP X31, X31, [X31]
	0x032D3134 BL 0x32CD938
	0x032D3138 LDR V0, [X31]
	0x032D313C B 0x32D314C
	0x032D3140 MOV X0, X21
	0x032D3144 BL 0x1C16E08
	0x032D3148 LDR V0, [X0]
	0x032D314C CMP X22, 0x0
	0x032D3150 CSET W8, NE
	0x032D3154 STR V0, [X19]
	0x032D3158 STRB W8, [X19 + 0x10]
	0x032D315C LDR X8, [X20]
	0x032D3160 MOV X0, X20
	0x032D3164 LDP X9, X1, [X8 + 0x1A8]
	0x032D3168 BLR X9
	0x032D316C STR X0, [X19 + 0x18]
	0x032D3170 LDP X20, X19, [X31 + 0x30]
	0x032D3174 LDP X22, X21, [X31 + 0x20]
	0x032D3178 LDP X30, X23, [X31 + 0x10]
	0x032D317C ADD X31, X31, 0x40
	0x032D3180 RET
	0x032D3184 ADRP X0, 0xE28000
	0x032D3188 LDR X0, [X0 + 0x578]
	0x032D318C BL 0x1C16D08
	0x032D3190 BL 0x1C16F10
	0x032D3194 MOV X19, X0
	0x032D3198 ADRP X0, 0xE53000
	0x032D319C LDR X0, [X0 + 0xD0]
	0x032D31A0 BL 0x1C16D08
	0x032D31A4 MOV X1, X0
	0x032D31A8 MOV X0, X19
	0x032D31AC MOV X2, X31
	0x032D31B0 BL 0x3314A68
	0x032D31B4 B 0x32D31E8
	0x032D31B8 ADRP X0, 0xE25000
	0x032D31BC LDR X0, [X0 + 0x528]
	0x032D31C0 BL 0x1C16D08
	0x032D31C4 BL 0x1C16F10
	0x032D31C8 MOV X19, X0
	0x032D31CC ADRP X0, 0xE53000
	0x032D31D0 LDR X0, [X0 + 0xD8]
	0x032D31D4 BL 0x1C16D08
	0x032D31D8 MOV X1, X0
	0x032D31DC MOV X0, X19
	0x032D31E0 MOV X2, X31
	0x032D31E4 BL 0x330E100
	0x032D31E8 ADRP X0, 0xE53000
	0x032D31EC LDR X0, [X0 + 0xE0]
	0x032D31F0 BL 0x1C16D08
	0x032D31F4 MOV X1, X0
	0x032D31F8 MOV X0, X19
	0x032D31FC BL 0x1C16DEC
	0x032D3200 STP X30, X23, [X31 - 0x30]!
	0x032D3204 STP X22, X21, [X31 + 0x10]
	0x032D3208 STP X20, X19, [X31 + 0x20]
	0x032D320C ADRP X23, 0x1109000
	0x032D3210 LDRB W8, [X23 + 0x914]
	0x032D3214 MOV X21, X3
	0x032D3218 MOV X22, X2
	0x032D321C MOV X20, X1
	0x032D3220 MOV X19, X0
	0x032D3224 TBNZ X8, 0x0, 0x32D323C
	0x032D3228 ADRP X0, 0xE49000
	0x032D322C LDR X0, [X0 + 0x3A8]
	0x032D3230 BL 0x1C16CF4
	0x032D3234 MOVZ W8, 0x1
	0x032D3238 STRB W8, [X23 + 0x914]
	0x032D323C MOV X0, X20
	0x032D3240 MOV X1, X31
	0x032D3244 BL 0x32BE96C
	0x032D3248 TBNZ X0, 0x0, 0x32D32D4
	0x032D324C BL 0x1C16D44
	0x032D3250 STR X20, [X19 + 0x28]
	0x032D3254 CBZ X20, 0x32D331C
	0x032D3258 LDR X8, [X20]
	0x032D325C ADRP X23, 0xE49000
	0x032D3260 MOV X0, X20
	0x032D3264 LDP X9, X1, [X8 + 0x1B8]
	0x032D3268 LDR X23, [X23 + 0x3A8]
	0x032D326C BLR X9
	0x032D3270 STR X0, [X19 + 0x20]
	0x032D3274 STP X22, X21, [X19]
	0x032D3278 LDR X9, [X20]
	0x032D327C LDR X8, [X23]
	0x032D3280 LDRB W11, [X9 + 0x130]
	0x032D3284 LDRB W10, [X8 + 0x130]
	0x032D3288 CMP W11, W10
	0x032D328C B.CS 0x32D3298
	0x032D3290 MOV W8, W31
	0x032D3294 B 0x32D32AC
	0x032D3298 LDR X9, [X9 + 0xC8]
	0x032D329C ADD X9, X9, X10, 0x3, LSL
	0x032D32A0 LDUR X9, [X9 - 0x8]
	0x032D32A4 CMP X9, X8
	0x032D32A8 CSET W8, EQ
	0x032D32AC STRB W8, [X19 + 0x10]
	0x032D32B0 LDR X8, [X20]
	0x032D32B4 MOV X0, X20
	0x032D32B8 LDP X9, X1, [X8 + 0x1A8]
	0x032D32BC BLR X9
	0x032D32C0 STR X0, [X19 + 0x18]
	0x032D32C4 LDP X20, X19, [X31 + 0x20]
	0x032D32C8 LDP X22, X21, [X31 + 0x10]
	0x032D32CC LDP X30, X23, [X31], #0x30
	0x032D32D0 RET
	0x032D32D4 ADRP X0, 0xE25000
	0x032D32D8 LDR X0, [X0 + 0x528]
	0x032D32DC BL 0x1C16D08
	0x032D32E0 BL 0x1C16F10
	0x032D32E4 MOV X19, X0
	0x032D32E8 ADRP X0, 0xE53000
	0x032D32EC LDR X0, [X0 + 0xD8]
	0x032D32F0 BL 0x1C16D08
	0x032D32F4 MOV X1, X0
	0x032D32F8 MOV X0, X19
	0x032D32FC MOV X2, X31
	0x032D3300 BL 0x330E100
	0x032D3304 ADRP X0, 0xE53000
	0x032D3308 LDR X0, [X0 + 0xE8]
	0x032D330C BL 0x1C16D08
	0x032D3310 MOV X1, X0
	0x032D3314 MOV X0, X19
	0x032D3318 BL 0x1C16DEC
	0x032D331C BL 0x1C16F20
	0x032D3320 LDP X8, X1, [X0]
	0x032D3324 MOV X0, X8
	0x032D3328 RET
	0x032D332C LDRB W0, [X0 + 0x10]
	0x032D3330 RET
	0x032D3334 LDR X0, [X0 + 0x18]
	0x032D3338 RET
	0x032D333C STR X30, [X31 - 0x20]!
	0x032D3340 STP X20, X19, [X31 + 0x10]
	0x032D3344 LDR X20, [X0 + 0x28]
	0x032D3348 MOV X19, X0
	0x032D334C BL 0x1C16D44
	0x032D3350 MOV X0, X20
	0x032D3354 MOV X1, X31
	0x032D3358 BL 0x32BE96C
	0x032D335C TBZ X0, 0x0, 0x32D33B0
	0x032D3360 LDR X0, [X19 + 0x20]
	0x032D3364 CBZ X0, 0x32D33C0
	0x032D3368 LDRB W8, [X19 + 0x10]
	0x032D336C LDR X1, [X19 + 0x18]
	0x032D3370 CBZ W8, 0x32D338C
	0x032D3374 LDR X8, [X0]
	0x032D3378 MOVZ W2, 0x14
	0x032D337C LDR X9, [X8 + 0x678]
	0x032D3380 LDR X3, [X8 + 0x680]
	0x032D3384 BLR X9
	0x032D3388 B 0x32D3398
	0x032D338C MOVZ W2, 0x14
	0x032D3390 MOV X3, X31
	0x032D3394 BL 0x3397828
	0x032D3398 MOV X1, X31
	0x032D339C MOV X20, X0
	0x032D33A0 BL 0x32BE96C
	0x032D33A4 TBNZ X0, 0x0, 0x32D33C4
	0x032D33A8 BL 0x1C16D44
	0x032D33AC STR X20, [X19 + 0x28]
	0x032D33B0 MOV X0, X20
	0x032D33B4 LDP X20, X19, [X31 + 0x10]
	0x032D33B8 LDR X30, [X31], #0x20
	0x032D33BC RET
	0x032D33C0 BL 0x1C16F20
	0x032D33C4 ADRP X0, 0xE4E000
	0x032D33C8 LDR X0, [X0 + 0xFB8]
	0x032D33CC BL 0x1C16D08
	0x032D33D0 BL 0x19903D0
	0x032D33D4 MOV X0, X31
	0x032D33D8 BL 0x32D5678
	0x032D33DC LDR X19, [X19 + 0x20]
	0x032D33E0 MOV X20, X0
	0x032D33E4 BL 0x19903C0
	0x032D33E8 MOV X0, X20
	0x032D33EC MOV X1, X19
	0x032D33F0 MOV X2, X31
	0x032D33F4 BL 0x3225378
	0x032D33F8 MOV X19, X0
	0x032D33FC ADRP X0, 0xE53000
	0x032D3400 LDR X0, [X0 + 0xF0]
	0x032D3404 BL 0x1C16D08
	0x032D3408 MOV X1, X0
	0x032D340C MOV X0, X19
	0x032D3410 BL 0x1C16DEC
	0x032D3414 SUB X31, X31, 0x60
	0x032D3418 STR X30, [X31 + 0x30]
	0x032D341C STP X22, X21, [X31 + 0x40]
	0x032D3420 STP X20, X19, [X31 + 0x50]
	0x032D3424 ADRP X22, 0x1109000
	0x032D3428 ADRP X21, 0xE53000
	0x032D342C LDRB W8, [X22 + 0x915]
	0x032D3430 LDR X21, [X21 + 0xF8]
	0x032D3434 MOV X19, X1
	0x032D3438 MOV X20, X0
	0x032D343C TBNZ X8, 0x0, 0x32D3454
	0x032D3440 ADRP X0, 0xE53000
	0x032D3444 LDR X0, [X0 + 0xF8]
	0x032D3448 BL 0x1C16CF4
	0x032D344C MOVZ W8, 0x1

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0x110A000
	014 Move W8, [X21+2317]
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xE54000
	022 Move X0, [X0+176]
	023 Call 0x1C17CF4
	024 Move X0, 0xE29000
	025 Move X0, [X0+3168]
	026 Call 0x1C17CF4
	027 Move X0, 0xE21000
	028 Move X0, [X0+1728]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2317], W8
	032 Compare X20, 0
	033 JumpIfEqual {309}
	034 Move X8, [X20]
	035 Move X0, X20
	036 Move X9, [X8+1000]
	037 Move X1, [X8+1008]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X8, [X20]
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {64}
	044 Move X9, [X8+2376]
	045 Move X1, [X8+2384]
	046 Move X0, X20
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X1, X19
	049 Call SignatureTypeExtensions.TryResolve, X0, X1
	050 Compare X0, 0
	051 JumpIfEqual {296}
	052 Move X20, [X31+80]
	053 Move X19, [X31+88]
	054 Move X22, [X31+64]
	055 Move X21, [X31+72]
	056 Move X24, [X31+48]
	057 Move X23, [X31+56]
	058 Move X26, [X31+32]
	059 Move X25, [X31+40]
	060 Move X28, [X31+16]
	061 Move X27, [X31+24]
	062 Move X29, [X31+96]
	063 Move X30, [X31+104]
	064 Move X9, [X8+1016]
	065 Move X1, [X8+1024]
	066 Move X0, X20
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {103}
	072 Move X8, [X20]
	073 Move X0, X20
	074 Move X9, [X8+2376]
	075 Move X1, [X8+2384]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move X1, X19
	078 Call SignatureTypeExtensions.TryResolve, X0, X1
	079 Compare X0, 0
	080 JumpIfEqual {296}
	081 Move X8, [X20]
	082 Move X19, X0
	083 Move X0, X20
	084 Move X9, [X8+1080]
	085 Move X1, [X8+1088]
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move W1, W0
	088 Move X0, X19
	089 Move X20, [X31+80]
	090 Move X19, [X31+88]
	091 Move X22, [X31+64]
	092 Move X21, [X31+72]
	093 Move X24, [X31+48]
	094 Move X23, [X31+56]
	095 Move X26, [X31+32]
	096 Move X25, [X31+40]
	097 Move X28, [X31+16]
	098 Move X27, [X31+24]
	099 Move X29, [X31+96]
	100 Move X30, [X31+104]
	101 Call SignatureTypeExtensions.TryMakeArrayType, X0, X1
	102 Return X0
	103 Move X0, X20
	104 Move X1, X31
	105 Call Type.get_IsByRef, X0
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {133}
	110 Move X8, [X20]
	111 Move X0, X20
	112 Move X9, [X8+2376]
	113 Move X1, [X8+2384]
	114 NotImplemented "Instruction BLR not yet implemented."
	115 Move X1, X19
	116 Call SignatureTypeExtensions.TryResolve, X0, X1
	117 Compare X0, 0
	118 JumpIfEqual {296}
	119 Move X20, [X31+80]
	120 Move X19, [X31+88]
	121 Move X22, [X31+64]
	122 Move X21, [X31+72]
	123 Move X24, [X31+48]
	124 Move X23, [X31+56]
	125 Move X26, [X31+32]
	126 Move X25, [X31+40]
	127 Move X28, [X31+16]
	128 Move X27, [X31+24]
	129 Move X29, [X31+96]
	130 Move X30, [X31+104]
	131 Call SignatureTypeExtensions.TryMakeByRefType, X0
	132 Return X0
	133 Move X0, X20
	134 Move X1, X31
	135 Call Type.get_IsPointer, X0
	136 Move X8, [X20]
	137 Move TEMP, X0
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfNotEqual {163}
	141 Move X9, [X8+2376]
	142 Move X1, [X8+2384]
	143 Move X0, X20
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Move X1, X19
	146 Call SignatureTypeExtensions.TryResolve, X0, X1
	147 Compare X0, 0
	148 JumpIfEqual {296}
	149 Move X20, [X31+80]
	150 Move X19, [X31+88]
	151 Move X22, [X31+64]
	152 Move X21, [X31+72]
	153 Move X24, [X31+48]
	154 Move X23, [X31+56]
	155 Move X26, [X31+32]
	156 Move X25, [X31+40]
	157 Move X28, [X31+16]
	158 Move X27, [X31+24]
	159 Move X29, [X31+96]
	160 Move X30, [X31+104]
	161 Call SignatureTypeExtensions.TryMakePointerType, X0
	162 Return X0
	163 Move X9, [X8+920]
	164 Move X1, [X8+928]
	165 Move X0, X20
	166 NotImplemented "Instruction BLR not yet implemented."
	167 Move X8, [X20]
	168 Move TEMP, X0
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfNotEqual {256}
	172 Move X9, [X8+1112]
	173 Move X1, [X8+1120]
	174 Move X0, X20
	175 NotImplemented "Instruction BLR not yet implemented."
	176 Compare X0, 0
	177 JumpIfEqual {309}
	178 Move X8, 0xE29000
	179 Move X23, [X0+24]
	180 Move X8, [X8+3168]
	181 Move X21, X0
	182 Move W1, W23
	183 Move X0, [X8]
	184 Call 0x1C17D6C
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X22, X0
	187 Move X28, 0xE54000
	188 Move X29, 0xE21000
	189 Move X28, [X28+176]
	190 Move X29, [X29+1728]
	191 Move X24, X31
	192 And X25, X23, 0
	193 Add X26, X21, 32
	194 Add X27, X22, 32
	195 Move W8, [X21+24]
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Move X23, [X26]
	198 Compare X23, 0
	199 JumpIfEqual {219}
	200 Move X9, [X23]
	201 Move X8, [X28]
	202 Move W11, [X9+304]
	203 Move W10, [X8+304]
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move X9, [X9+200]
	206 Add X9, X9, X10
	207 NotImplemented "Instruction LDUR not yet implemented."
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Compare X22, 0
	210 JumpIfEqual {309}
	211 Compare X23, 0
	212 JumpIfEqual {221}
	213 Move X8, [X22]
	214 Move X0, X23
	215 Move X1, [X8+64]
	216 Call 0x1C17E00
	217 Compare X0, 0
	218 JumpIfNotEqual {221}
	219 Compare X22, 0
	220 JumpIfEqual {309}
	221 Move W8, [X22+24]
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move [X27], X23
	224 Add X24, X24, 1
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move X0, X23
	227 Move X1, X19
	228 Call SignatureTypeExtensions.TryResolve, X0, X1
	229 Compare X22, 0
	230 JumpIfEqual {309}
	231 Move X23, X0
	232 Compare X0, 0
	233 JumpIfEqual {240}
	234 Move X8, [X22]
	235 Move X0, X23
	236 Move X1, [X8+64]
	237 Call 0x1C17E00
	238 Compare X0, 0
	239 JumpIfEqual {311}
	240 Move W8, [X22+24]
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move [X27], X23
	243 Move X0, [X29]
	244 Move W8, [X0+224]
	245 Compare W8, 0
	246 JumpIfNotEqual {248}
	247 Call 0x1C17DFC
	248 Move X0, X23
	249 Move X1, X31
	250 Move X2, X31
	251 Call Type.op_Equality, X0, X1
	252 Move TEMP, X0
	253 And TEMP, TEMP, 1
	254 Compare TEMP, 1
	255 JumpIfNotEqual {224}
	256 Move X9, [X8+952]
	257 Move X1, [X8+960]
	258 Move X0, X20
	259 NotImplemented "Instruction BLR not yet implemented."
	260 Move TEMP, X0
	261 And TEMP, TEMP, 1
	262 Compare TEMP, 1
	263 JumpIfNotEqual {295}
	264 Move X8, [X20]
	265 Move X0, X20
	266 Move X9, [X8+1144]
	267 Move X1, [X8+1152]
	268 NotImplemented "Instruction BLR not yet implemented."
	269 Compare X19, 0
	270 JumpIfEqual {309}
	271 Move W8, [X19+24]
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Add X8, X19, W0
	274 Move X0, [X8+32]
	275 Move X8, [X20]
	276 Move X0, X20
	277 Move X9, [X8+1096]
	278 Move X1, [X8+1104]
	279 NotImplemented "Instruction BLR not yet implemented."
	280 Move X1, X22
	281 Move X20, [X31+80]
	282 Move X19, [X31+88]
	283 Move X22, [X31+64]
	284 Move X21, [X31+72]
	285 Move X24, [X31+48]
	286 Move X23, [X31+56]
	287 Move X26, [X31+32]
	288 Move X25, [X31+40]
	289 Move X28, [X31+16]
	290 Move X27, [X31+24]
	291 Move X29, [X31+96]
	292 Move X30, [X31+104]
	293 Call SignatureTypeExtensions.TryMakeGenericType, X0, X1
	294 Return X0
	295 Move X0, X31
	296 Move X20, [X31+80]
	297 Move X19, [X31+88]
	298 Move X22, [X31+64]
	299 Move X21, [X31+72]
	300 Move X24, [X31+48]
	301 Move X23, [X31+56]
	302 Move X26, [X31+32]
	303 Move X25, [X31+40]
	304 Move X28, [X31+16]
	305 Move X27, [X31+24]
	306 Move X29, [X31+96]
	307 Move X30, [X31+104]
	308 Return X0
	309 Call 0x1C17F20
	310 Call 0x1C17F28
	311 Call 0x1C17F44
	312 Move X1, X31
	313 Call 0x1C17DEC

Method: System.Type TryMakeArrayType(System.Type type)

Disassembly:
	0x032D3450 STRB W8, [X22 + 0x915]
	0x032D3454 LDP V1, V0, [X20 + 0x10]
	0x032D3458 LDR V2, [X20]
	0x032D345C LDR X0, [X21]
	0x032D3460 ADD X1, X31, 0x0
	0x032D3464 STP V1, V0, [X31 + 0x10]
	0x032D3468 STR V2, [X31]
	0x032D346C BL 0x1C16E04
	0x032D3470 CMP X0, X19
	0x032D3474 LDP X20, X19, [X31 + 0x50]
	0x032D3478 LDP X22, X21, [X31 + 0x40]
	0x032D347C LDR X30, [X31 + 0x30]
	0x032D3480 CSET W0, EQ
	0x032D3484 ADD X31, X31, 0x60
	0x032D3488 RET
	0x032D348C SUB X31, X31, 0x50
	0x032D3490 STP X30, X21, [X31 + 0x30]
	0x032D3494 STP X20, X19, [X31 + 0x40]
	0x032D3498 ADRP X21, 0x1109000
	0x032D349C ADRP X20, 0xE53000
	0x032D34A0 LDRB W8, [X21 + 0x916]
	0x032D34A4 LDR X20, [X20 + 0xF8]
	0x032D34A8 MOV X19, X0
	0x032D34AC TBNZ X8, 0x0, 0x32D34C4
	0x032D34B0 ADRP X0, 0xE53000
	0x032D34B4 LDR X0, [X0 + 0xF8]
	0x032D34B8 BL 0x1C16CF4
	0x032D34BC MOVZ W8, 0x1
	0x032D34C0 STRB W8, [X21 + 0x916]
	0x032D34C4 LDP V1, V0, [X19 + 0x10]
	0x032D34C8 LDR V2, [X19]
	0x032D34CC LDR X0, [X20]
	0x032D34D0 ADD X1, X31, 0x0
	0x032D34D4 STP V1, V0, [X31 + 0x10]
	0x032D34D8 STR V2, [X31]
	0x032D34DC BL 0x1C16E04
	0x032D34E0 MOV X1, X31
	0x032D34E4 BL 0x33D55D8
	0x032D34E8 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {12}
	005 Move X8, [X0]
	006 Move X1, [X8+2224]
	007 Move X9, [X8+2216]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0
	012 Call 0x1C17F20
	013 Move X19, X0
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X0, X19
	016 Call 0x3EB2AD0
	017 Move X19, X0
	018 Move X0, 0xE27000
	019 Move X0, [X0+3264]
	020 Call 0x1C17D08
	021 Move X8, [X19]
	022 Move X1, [X8]
	023 Call 0x1C18270
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {30}
	028 Call 0x3EB2AE0
	029 Move X0, X31
	030 Move W0, 8
	031 Call 0x3EB2AF0
	032 Move X8, [X19]
	033 Move [X0], X8
	034 Move X1, 0xBE2000
	035 Add X1, X1, 3672
	036 Move X2, X31
	037 Call 0x3EB2B00
	038 Move X19, X0
	039 Call 0x3EB2AE0
	040 Move X0, X19
	041 Call 0x1D2D690
	042 Call 0x1991590

Method: System.Type TryMakeArrayType(System.Type type, System.Int32 rank)

Disassembly:
	0x032D34EC LDP X30, X21, [X31 + 0x30]
	0x032D34F0 ADD X31, X31, 0x50
	0x032D34F4 RET
	0x032D34F8 SUB X31, X31, 0x60
	0x032D34FC STR X30, [X31 + 0x30]
	0x032D3500 STP X22, X21, [X31 + 0x40]
	0x032D3504 STP X20, X19, [X31 + 0x50]
	0x032D3508 ADRP X22, 0x1109000
	0x032D350C ADRP X21, 0xE53000
	0x032D3510 LDRB W8, [X22 + 0x917]
	0x032D3514 LDR X21, [X21 + 0xF8]
	0x032D3518 MOV X20, X1
	0x032D351C MOV X19, X0
	0x032D3520 TBNZ X8, 0x0, 0x32D3538
	0x032D3524 ADRP X0, 0xE53000
	0x032D3528 LDR X0, [X0 + 0xF8]
	0x032D352C BL 0x1C16CF4
	0x032D3530 MOVZ W8, 0x1
	0x032D3534 STRB W8, [X22 + 0x917]
	0x032D3538 LDP V1, V0, [X20 + 0x10]
	0x032D353C LDR V2, [X20]
	0x032D3540 LDR X0, [X21]
	0x032D3544 ADD X1, X31, 0x0
	0x032D3548 STP V1, V0, [X31 + 0x10]
	0x032D354C STR V2, [X31]
	0x032D3550 BL 0x1C16E04
	0x032D3554 MOV X1, X0
	0x032D3558 MOV X0, X19
	0x032D355C BL 0x32D3414
	0x032D3560 LDP X20, X19, [X31 + 0x50]
	0x032D3564 LDP X22, X21, [X31 + 0x40]
	0x032D3568 LDR X30, [X31 + 0x30]
	0x032D356C AND W0, W0, 0x1
	0x032D3570 ADD X31, X31, 0x60
	0x032D3574 RET
	0x032D3578 SUB X31, X31, 0x60
	0x032D357C STR X30, [X31 + 0x30]
	0x032D3580 STP X22, X21, [X31 + 0x40]
	0x032D3584 STP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {12}
	005 Move X8, [X0]
	006 Move X9, [X8+2232]
	007 Move X2, [X8+2240]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0
	012 Call 0x1C17F20
	013 Move X19, X0
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X0, X19
	016 Call 0x3EB2AD0
	017 Move X19, X0
	018 Move X0, 0xE27000
	019 Move X0, [X0+3264]
	020 Call 0x1C17D08
	021 Move X8, [X19]
	022 Move X1, [X8]
	023 Call 0x1C18270
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {30}
	028 Call 0x3EB2AE0
	029 Move X0, X31
	030 Move W0, 8
	031 Call 0x3EB2AF0
	032 Move X8, [X19]
	033 Move [X0], X8
	034 Move X1, 0xBE2000
	035 Add X1, X1, 3672
	036 Move X2, X31
	037 Call 0x3EB2B00
	038 Move X19, X0
	039 Call 0x3EB2AE0
	040 Move X0, X19
	041 Call 0x1D2D690
	042 Call 0x1991590

Method: System.Type TryMakeByRefType(System.Type type)

Disassembly:
	0x032D3588 ADRP X22, 0x1109000
	0x032D358C ADRP X21, 0xE53000
	0x032D3590 LDRB W8, [X22 + 0x918]
	0x032D3594 LDR X21, [X21 + 0xF8]
	0x032D3598 MOV X20, X1
	0x032D359C MOV X19, X0
	0x032D35A0 TBNZ X8, 0x0, 0x32D35B8
	0x032D35A4 ADRP X0, 0xE53000
	0x032D35A8 LDR X0, [X0 + 0xF8]
	0x032D35AC BL 0x1C16CF4
	0x032D35B0 MOVZ W8, 0x1
	0x032D35B4 STRB W8, [X22 + 0x918]
	0x032D35B8 LDP V1, V0, [X20 + 0x10]
	0x032D35BC LDR V2, [X20]
	0x032D35C0 LDR X0, [X21]
	0x032D35C4 ADD X1, X31, 0x0
	0x032D35C8 STP V1, V0, [X31 + 0x10]
	0x032D35CC STR V2, [X31]
	0x032D35D0 BL 0x1C16E04
	0x032D35D4 MOV X1, X0
	0x032D35D8 MOV X0, X19
	0x032D35DC BL 0x32D3414
	0x032D35E0 LDP X20, X19, [X31 + 0x50]
	0x032D35E4 LDP X22, X21, [X31 + 0x40]
	0x032D35E8 LDR X30, [X31 + 0x30]
	0x032D35EC ORN W8, W31, W0, 0x0
	0x032D35F0 AND W0, W8, 0x1
	0x032D35F4 ADD X31, X31, 0x60
	0x032D35F8 RET
	0x032D35FC SUB X31, X31, 0x70
	0x032D3600 STR X30, [X31 + 0x40]
	0x032D3604 STP X22, X21, [X31 + 0x50]
	0x032D3608 STP X20, X19, [X31 + 0x60]
	0x032D360C ADRP X20, 0x1109000
	0x032D3610 ADRP X21, 0xE20000
	0x032D3614 LDRB W8, [X20 + 0x919]
	0x032D3618 LDR X21, [X21 + 0x6C0]
	0x032D361C MOV X19, X0
	0x032D3620 TBNZ X8, 0x0, 0x32D3680

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {12}
	005 Move X8, [X0]
	006 Move X1, [X8+2256]
	007 Move X9, [X8+2248]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0
	012 Call 0x1C17F20
	013 Move X19, X0
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X0, X19
	016 Call 0x3EB2AD0
	017 Move X19, X0
	018 Move X0, 0xE27000
	019 Move X0, [X0+3264]
	020 Call 0x1C17D08
	021 Move X8, [X19]
	022 Move X1, [X8]
	023 Call 0x1C18270
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {30}
	028 Call 0x3EB2AE0
	029 Move X0, X31
	030 Move W0, 8
	031 Call 0x3EB2AF0
	032 Move X8, [X19]
	033 Move [X0], X8
	034 Move X1, 0xBE2000
	035 Add X1, X1, 3672
	036 Move X2, X31
	037 Call 0x3EB2B00
	038 Move X19, X0
	039 Call 0x3EB2AE0
	040 Move X0, X19
	041 Call 0x1D2D690
	042 Call 0x1991590

Method: System.Type TryMakePointerType(System.Type type)

Disassembly:
	0x032D3624 ADRP X0, 0xE22000
	0x032D3628 LDR X0, [X0 + 0xC48]
	0x032D362C BL 0x1C16CF4
	0x032D3630 ADRP X0, 0xE53000
	0x032D3634 LDR X0, [X0 + 0xF8]
	0x032D3638 BL 0x1C16CF4
	0x032D363C ADRP X0, 0xE49000
	0x032D3640 LDR X0, [X0 + 0x3A8]
	0x032D3644 BL 0x1C16CF4
	0x032D3648 ADRP X0, 0xE49000
	0x032D364C LDR X0, [X0 + 0x3F0]
	0x032D3650 BL 0x1C16CF4
	0x032D3654 ADRP X0, 0xE2A000
	0x032D3658 LDR X0, [X0 + 0x968]
	0x032D365C BL 0x1C16CF4
	0x032D3660 ADRP X0, 0xE20000
	0x032D3664 LDR X0, [X0 + 0x6C0]
	0x032D3668 BL 0x1C16CF4
	0x032D366C ADRP X0, 0xE53000
	0x032D3670 LDR X0, [X0 + 0x100]
	0x032D3674 BL 0x1C16CF4
	0x032D3678 MOVZ W8, 0x1
	0x032D367C STRB W8, [X20 + 0x919]
	0x032D3680 LDR X0, [X21]
	0x032D3684 LDR X20, [X19 + 0x20]
	0x032D3688 LDR W8, [X0 + 0xE0]
	0x032D368C CBNZ W8, 0x32D3694
	0x032D3690 BL 0x1C16DFC
	0x032D3694 MOV X0, X20
	0x032D3698 MOV X1, X31
	0x032D369C MOV X2, X31
	0x032D36A0 BL 0x3395194
	0x032D36A4 TBZ X0, 0x0, 0x32D36D8
	0x032D36A8 ADRP X8, 0xE53000
	0x032D36AC LDP V2, V0, [X19 + 0x10]
	0x032D36B0 LDR V1, [X19]
	0x032D36B4 LDR X8, [X8 + 0xF8]
	0x032D36B8 STP V2, V0, [X31 + 0x10]
	0x032D36BC STR V1, [X31]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {12}
	005 Move X8, [X0]
	006 Move X1, [X8+2288]
	007 Move X9, [X8+2280]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0
	012 Call 0x1C17F20
	013 Move X19, X0
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X0, X19
	016 Call 0x3EB2AD0
	017 Move X19, X0
	018 Move X0, 0xE27000
	019 Move X0, [X0+3264]
	020 Call 0x1C17D08
	021 Move X8, [X19]
	022 Move X1, [X8]
	023 Call 0x1C18270
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {30}
	028 Call 0x3EB2AE0
	029 Move X0, X31
	030 Move W0, 8
	031 Call 0x3EB2AF0
	032 Move X8, [X19]
	033 Move [X0], X8
	034 Move X1, 0xBE2000
	035 Add X1, X1, 3672
	036 Move X2, X31
	037 Call 0x3EB2B00
	038 Move X19, X0
	039 Call 0x3EB2AE0
	040 Move X0, X19
	041 Call 0x1D2D690
	042 Call 0x1991590

Method: System.Type TryMakeGenericType(System.Type type, System.Type[] instantiation)

Disassembly:
	0x032D36C0 LDR X0, [X8]
	0x032D36C4 ADD X1, X31, 0x0
	0x032D36C8 BL 0x1C16E04
	0x032D36CC MOV X1, X31
	0x032D36D0 BL 0x33D5650
	0x032D36D4 B 0x32D383C
	0x032D36D8 LDR X20, [X19 + 0x28]
	0x032D36DC BL 0x1C16D44
	0x032D36E0 MOV X0, X20
	0x032D36E4 MOV X1, X31
	0x032D36E8 BL 0x32BE96C
	0x032D36EC TBZ X0, 0x0, 0x32D36F8
	0x032D36F0 MOVZ W20, 0x1
	0x032D36F4 B 0x32D37E0
	0x032D36F8 LDRB W8, [X19 + 0x10]
	0x032D36FC LDR X20, [X19 + 0x28]
	0x032D3700 CBZ W8, 0x32D3754
	0x032D3704 BL 0x1C16D44
	0x032D3708 CBZ X20, 0x32D3860
	0x032D370C ADRP X9, 0xE49000
	0x032D3710 LDR X9, [X9 + 0x3A8]
	0x032D3714 LDR X8, [X20]
	0x032D3718 LDR X1, [X9]
	0x032D371C LDRB W10, [X8 + 0x130]
	0x032D3720 LDRB W9, [X1 + 0x130]
	0x032D3724 CMP W10, W9
	0x032D3728 B.CC 0x32D3850
	0x032D372C LDR X10, [X8 + 0xC8]
	0x032D3730 ADD X9, X10, X9, 0x3, LSL
	0x032D3734 LDUR X9, [X9 - 0x8]
	0x032D3738 CMP X9, X1
	0x032D373C B.NE 0x32D3850
	0x032D3740 LDR X1, [X8 + 0x260]
	0x032D3744 LDR X9, [X8 + 0x258]
	0x032D3748 MOV X0, X20
	0x032D374C BLR X9
	0x032D3750 B 0x32D37A0
	0x032D3754 BL 0x1C16D44
	0x032D3758 CBZ X20, 0x32D3864

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {12}
	005 Move X8, [X0]
	006 Move X9, [X8+2264]
	007 Move X2, [X8+2272]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0
	012 Call 0x1C17F20
	013 Move X19, X0
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X0, X19
	016 Call 0x3EB2AD0
	017 Move X19, X0
	018 Move X0, 0xE27000
	019 Move X0, [X0+3264]
	020 Call 0x1C17D08
	021 Move X8, [X19]
	022 Move X1, [X8]
	023 Call 0x1C18270
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {30}
	028 Call 0x3EB2AE0
	029 Move X0, X31
	030 Move W0, 8
	031 Call 0x3EB2AF0
	032 Move X8, [X19]
	033 Move [X0], X8
	034 Move X1, 0xBE2000
	035 Add X1, X1, 3672
	036 Move X2, X31
	037 Call 0x3EB2B00
	038 Move X19, X0
	039 Call 0x3EB2AE0
	040 Move X0, X19
	041 Call 0x1D2D690
	042 Call 0x1991590

