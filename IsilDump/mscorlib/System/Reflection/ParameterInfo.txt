Type: System.Reflection.ParameterInfo

Method: System.Void .ctor()

Disassembly:
	0x032D0410 MOV W0, W31
	0x032D0414 RET

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Reflection.ParameterAttributes get_Attributes()

Disassembly:
	0x032D0418 MOV W0, W31
	0x032D041C RET

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Reflection.MemberInfo get_Member()

Disassembly:
	0x032D0420 MOV W0, W31
	0x032D0424 RET

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.String get_Name()

Disassembly:
	0x032D0428 MOVZ W0, 0x1
	0x032D042C RET

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Type get_ParameterType()

Disassembly:
	0x032D0430 MOV W0, W31
	0x032D0434 RET

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Int32 get_Position()

Disassembly:
	0x032D0438 MOV W0, W31
	0x032D043C RET

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Boolean get_IsIn()

Disassembly:
	0x032D0440 STP X30, X21, [X31 - 0x20]!
	0x032D0444 STP X20, X19, [X31 + 0x10]
	0x032D0448 LDR X8, [X0 + 0x20]
	0x032D044C CBZ X8, 0x32D0498
	0x032D0450 MOV X19, X0
	0x032D0454 MOV X20, X31
	0x032D0458 LDR W21, [X8 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+424]
	004 Move X1, [X8+432]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 And W0, W0, 1
	007 Move X30, [X31+16]
	008 Return X0

Method: System.Boolean get_IsOptional()

Disassembly:
	0x032D045C CMP W20, W21
	0x032D0460 B.GE 0x32D049C
	0x032D0464 CMP W20, W21
	0x032D0468 B.CS 0x32D04B0
	0x032D046C ADD X8, X8, X20, 0x3, LSL
	0x032D0470 LDR X0, [X8 + 0x20]
	0x032D0474 CBZ X0, 0x32D0498

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+424]
	004 Move X1, [X8+432]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 Move W0, W0
	007 ShiftRight W0, 4
	008 And W0, W0, 15
	009 Move X30, [X31+16]
	010 Return X0

Method: System.Boolean get_IsOut()

Disassembly:
	0x032D0478 LDR X8, [X0]
	0x032D047C LDR X9, [X8 + 0x288]
	0x032D0480 LDR X1, [X8 + 0x290]
	0x032D0484 BLR X9
	0x032D0488 TBNZ X0, 0x0, 0x32D049C
	0x032D048C LDR X8, [X19 + 0x20]
	0x032D0490 ADD X20, X20, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+424]
	004 Move X1, [X8+432]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 Move W0, W0
	007 ShiftRight W0, 1
	008 And W0, W0, 1
	009 Move X30, [X31+16]
	010 Return X0

Method: System.Object get_DefaultValue()

Disassembly:
	0x032D0494 CBNZ X8, 0x32D0458
	0x032D0498 BL 0x1C16F20
	0x032D049C CMP W20, W21
	0x032D04A0 LDP X20, X19, [X31 + 0x10]
	0x032D04A4 CSET W0, LT
	0x032D04A8 LDP X30, X21, [X31], #0x20
	0x032D04AC RET
	0x032D04B0 BL 0x1C16F28
	0x032D04B4 MOV X0, X31
	0x032D04B8 RET

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, X31
	004 Call NotImplemented.get_ByDesign
	005 Move X19, X0
	006 Move X0, 0xE56000
	007 Move X0, [X0+3592]
	008 Call 0x1C17D08
	009 Move X1, X0
	010 Move X0, X19
	011 Call 0x1C17DEC

Method: System.Boolean IsDefined(System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x032D04BC STP X30, X19, [X31 - 0x10]!
	0x032D04C0 ADRP X0, 0xE2B000
	0x032D04C4 LDR X0, [X0 + 0x578]
	0x032D04C8 BL 0x1C16D08
	0x032D04CC BL 0x1C16F10
	0x032D04D0 MOV X19, X0
	0x032D04D4 ADRP X0, 0xE55000
	0x032D04D8 LDR X0, [X0 + 0xE90]
	0x032D04DC BL 0x1C16D08
	0x032D04E0 MOV X1, X0
	0x032D04E4 MOV X0, X19
	0x032D04E8 MOV X2, X31
	0x032D04EC BL 0x3314A68
	0x032D04F0 ADRP X0, 0xE55000
	0x032D04F4 LDR X0, [X0 + 0xEB8]
	0x032D04F8 BL 0x1C16D08
	0x032D04FC MOV X1, X0
	0x032D0500 MOV X0, X19
	0x032D0504 BL 0x1C16DEC
	0x032D0508 LDR X0, [X0 + 0x18]
	0x032D050C RET
	0x032D0510 LDR X8, [X0]
	0x032D0514 LDR X2, [X8 + 0x458]
	0x032D0518 LDR X1, [X8 + 0x460]
	0x032D051C BR X2
	0x032D0520 STR X30, [X31 - 0x20]!
	0x032D0524 STP X20, X19, [X31 + 0x10]
	0x032D0528 ADRP X20, 0x110C000
	0x032D052C LDRB W8, [X20 + 0x901]
	0x032D0530 MOV X19, X0
	0x032D0534 TBNZ X8, 0x0, 0x32D054C
	0x032D0538 ADRP X0, 0xE2B000
	0x032D053C LDR X0, [X0 + 0xC60]
	0x032D0540 BL 0x1C16CF4
	0x032D0544 MOVZ W8, 0x1
	0x032D0548 STRB W8, [X20 + 0x901]
	0x032D054C LDR X0, [X19 + 0x20]
	0x032D0550 CBZ X0, 0x32D0588
	0x032D0554 MOV X1, X31
	0x032D0558 BL 0x33A01F0
	0x032D055C CBZ X0, 0x32D057C
	0x032D0560 ADRP X8, 0xE2B000
	0x032D0564 LDR X8, [X8 + 0xC60]
	0x032D0568 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x110D000
	006 Move X21, 0xE24000
	007 Move W8, [X20+2293]
	008 Move X21, [X21+1728]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE24000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2293], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X1, X31
	026 Move X2, X31
	027 Call Type.op_Equality, X0, X1
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {38}
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move W0, W31
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0
	038 Move X0, 0xE29000
	039 Move X0, [X0+1320]
	040 Call 0x1C17D08
	041 Call 0x1C17F10
	042 Move X19, X0
	043 Move X0, 0xE56000
	044 Move X0, [X0+3600]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Move X2, X31
	049 Call ArgumentNullException..ctor, X0, X1
	050 Move X0, 0xE56000
	051 Move X0, [X0+3608]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X19
	055 Call 0x1C17DEC

Method: System.Object[] GetCustomAttributes(System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x032D056C LDR X20, [X8]
	0x032D0570 MOV X1, X20
	0x032D0574 BL 0x1C16E00
	0x032D0578 CBZ X0, 0x32D058C
	0x032D057C LDP X20, X19, [X31 + 0x10]
	0x032D0580 LDR X30, [X31], #0x20
	0x032D0584 RET
	0x032D0588 BL 0x1C16F20
	0x032D058C MOV X0, X19
	0x032D0590 MOV X1, X20
	0x032D0594 BL 0x1C171E0
	0x032D0598 STP X30, X19, [X31 - 0x10]!
	0x032D059C ADRP X0, 0xE23000
	0x032D05A0 LDR X0, [X0 + 0x5B0]
	0x032D05A4 BL 0x1C16D08
	0x032D05A8 BL 0x1C16F10
	0x032D05AC MOV X19, X0
	0x032D05B0 ADRP X0, 0xE55000
	0x032D05B4 LDR X0, [X0 + 0xEC0]
	0x032D05B8 BL 0x1C16D08
	0x032D05BC MOV X1, X0
	0x032D05C0 MOV X0, X19
	0x032D05C4 MOV X2, X31
	0x032D05C8 BL 0x337DF1C
	0x032D05CC ADRP X0, 0xE55000
	0x032D05D0 LDR X0, [X0 + 0xEC8]
	0x032D05D4 BL 0x1C16D08
	0x032D05D8 MOV X1, X0
	0x032D05DC MOV X0, X19
	0x032D05E0 BL 0x1C16DEC
	0x032D05E4 STR X30, [X31 - 0x10]!
	0x032D05E8 LDR X0, [X0 + 0x18]
	0x032D05EC CBZ X0, 0x32D0600
	0x032D05F0 LDR X8, [X0]
	0x032D05F4 LDP X2, X1, [X8 + 0x1A8]
	0x032D05F8 LDR X30, [X31], #0x10
	0x032D05FC BR X2
	0x032D0600 BL 0x1C16F20
	0x032D0604 STR X30, [X31 - 0x10]!
	0x032D0608 LDR X0, [X0 + 0x18]
	0x032D060C CBZ X0, 0x32D0624
	0x032D0610 LDR X8, [X0]
	0x032D0614 LDR X2, [X8 + 0x2C8]
	0x032D0618 LDR X1, [X8 + 0x2D0]
	0x032D061C LDR X30, [X31], #0x10
	0x032D0620 BR X2
	0x032D0624 BL 0x1C16F20
	0x032D0628 STP X30, X21, [X31 - 0x20]!
	0x032D062C STP X20, X19, [X31 + 0x10]
	0x032D0630 ADRP X20, 0x110C000
	0x032D0634 ADRP X21, 0xE23000
	0x032D0638 LDRB W8, [X20 + 0x902]
	0x032D063C LDR X21, [X21 + 0x8F0]
	0x032D0640 MOV X19, X0
	0x032D0644 TBNZ X8, 0x0, 0x32D065C
	0x032D0648 ADRP X0, 0xE23000
	0x032D064C LDR X0, [X0 + 0x8F0]
	0x032D0650 BL 0x1C16CF4
	0x032D0654 MOVZ W8, 0x1
	0x032D0658 STRB W8, [X20 + 0x902]
	0x032D065C LDR X0, [X21]
	0x032D0660 BL 0x1C16F10
	0x032D0664 MOV X1, X31
	0x032D0668 MOV X20, X0
	0x032D066C BL 0x3231AC4
	0x032D0670 LDR X0, [X19 + 0x18]
	0x032D0674 CBZ X0, 0x32D071C
	0x032D0678 LDR X8, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x110D000
	006 Move X21, 0xE24000
	007 Move W8, [X20+2294]
	008 Move X21, [X21+1728]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xE24000
	015 Move X0, [X0+2504]
	016 Call 0x1C17CF4
	017 Move X0, 0xE24000
	018 Move X0, [X0+1728]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2294], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Move X1, X31
	029 Move X2, X31
	030 Call Type.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {70}
	035 Move X8, 0xE24000
	036 Move X8, [X8+2504]
	037 Move X19, [X8]
	038 Move X8, [X19+56]
	039 Compare X8, 0
	040 JumpIfNotEqual {44}
	041 Move X0, X19
	042 Call 0x1C5D6E0
	043 Move X8, [X19+56]
	044 Move X0, [X8+16]
	045 Move W8, [X0+309]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {51}
	050 Call 0x1C5D684
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X8, [X19+56]
	056 Move X0, [X8+16]
	057 Move W8, [X0+309]
	058 Move TEMP, X8
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {63}
	062 Call 0x1C5D684
	063 Move X8, [X0+184]
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X0, [X8]
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Return X0
	070 Move X0, 0xE29000
	071 Move X0, [X0+1320]
	072 Call 0x1C17D08
	073 Call 0x1C17F10
	074 Move X19, X0
	075 Move X0, 0xE56000
	076 Move X0, [X0+3600]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X19
	080 Move X2, X31
	081 Call ArgumentNullException..ctor, X0, X1
	082 Move X0, 0xE56000
	083 Move X0, [X0+3616]
	084 Call 0x1C17D08
	085 Move X1, X0
	086 Move X0, X19
	087 Call 0x1C17DEC

Method: System.Object GetRealObject(System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x032D067C LDP X9, X1, [X8 + 0x168]
	0x032D0680 BLR X9
	0x032D0684 CBZ X20, 0x32D071C
	0x032D0688 MOV X1, X0
	0x032D068C MOV X0, X20
	0x032D0690 MOV X2, X31
	0x032D0694 BL 0x32333E0
	0x032D0698 MOVZ W1, 0x5B
	0x032D069C MOV X0, X20
	0x032D06A0 MOV X2, X31
	0x032D06A4 BL 0x3233D30
	0x032D06A8 LDR X8, [X19 + 0x20]
	0x032D06AC CBZ X8, 0x32D071C
	0x032D06B0 MOV X21, X31
	0x032D06B4 LDR W9, [X8 + 0x18]
	0x032D06B8 CMP W21, W9
	0x032D06BC B.GE 0x32D0720
	0x032D06C0 CBZ W21, 0x32D06DC
	0x032D06C4 MOVZ W1, 0x2C
	0x032D06C8 MOV X0, X20
	0x032D06CC MOV X2, X31
	0x032D06D0 BL 0x3233D30
	0x032D06D4 LDR X8, [X19 + 0x20]
	0x032D06D8 CBZ X8, 0x32D071C
	0x032D06DC LDR W9, [X8 + 0x18]
	0x032D06E0 CMP W21, W9
	0x032D06E4 B.CS 0x32D0748
	0x032D06E8 ADD X8, X8, X21, 0x3, LSL
	0x032D06EC LDR X0, [X8 + 0x20]
	0x032D06F0 CBZ X0, 0x32D071C
	0x032D06F4 LDR X8, [X0]
	0x032D06F8 LDP X9, X1, [X8 + 0x168]
	0x032D06FC BLR X9
	0x032D0700 MOV X1, X0
	0x032D0704 MOV X0, X20
	0x032D0708 MOV X2, X31
	0x032D070C BL 0x32333E0
	0x032D0710 LDR X8, [X19 + 0x20]
	0x032D0714 ADD X21, X21, 0x1
	0x032D0718 CBNZ X8, 0x32D06B4
	0x032D071C BL 0x1C16F20
	0x032D0720 MOVZ W1, 0x5D
	0x032D0724 MOV X0, X20
	0x032D0728 MOV X2, X31
	0x032D072C BL 0x3233D30
	0x032D0730 LDR X8, [X20]
	0x032D0734 MOV X0, X20
	0x032D0738 LDP X20, X19, [X31 + 0x10]
	0x032D073C LDP X2, X1, [X8 + 0x168]
	0x032D0740 LDP X30, X21, [X31], #0x20
	0x032D0744 BR X2
	0x032D0748 BL 0x1C16F28
	0x032D074C MOV W0, W31
	0x032D0750 RET
	0x032D0754 MOVZ W0, 0x1
	0x032D0758 RET
	0x032D075C MOV W0, W31
	0x032D0760 RET
	0x032D0764 MOV W0, W31
	0x032D0768 RET
	0x032D076C MOV W0, W31
	0x032D0770 RET
	0x032D0774 STR X30, [X31 - 0x10]!
	0x032D0778 LDR X0, [X0 + 0x18]
	0x032D077C CBZ X0, 0x32D0794
	0x032D0780 LDR X8, [X0]
	0x032D0784 LDR X2, [X8 + 0x288]
	0x032D0788 LDR X1, [X8 + 0x290]
	0x032D078C LDR X30, [X31], #0x10
	0x032D0790 BR X2
	0x032D0794 BL 0x1C16F20
	0x032D0798 LDR X0, [X0 + 0x18]
	0x032D079C RET
	0x032D07A0 STP X30, X19, [X31 - 0x10]!
	0x032D07A4 ADRP X0, 0xE23000
	0x032D07A8 LDR X0, [X0 + 0x5B0]
	0x032D07AC BL 0x1C16D08
	0x032D07B0 BL 0x1C16F10
	0x032D07B4 MOV X19, X0
	0x032D07B8 ADRP X0, 0xE55000
	0x032D07BC LDR X0, [X0 + 0xED0]
	0x032D07C0 BL 0x1C16D08
	0x032D07C4 MOV X1, X0
	0x032D07C8 MOV X0, X19
	0x032D07CC MOV X2, X31
	0x032D07D0 BL 0x337DF1C
	0x032D07D4 ADRP X0, 0xE55000
	0x032D07D8 LDR X0, [X0 + 0xED8]
	0x032D07DC BL 0x1C16D08
	0x032D07E0 MOV X1, X0
	0x032D07E4 MOV X0, X19
	0x032D07E8 BL 0x1C16DEC
	0x032D07EC STR X30, [X31 - 0x20]!
	0x032D07F0 STP X20, X19, [X31 + 0x10]
	0x032D07F4 ADRP X19, 0x110C000
	0x032D07F8 ADRP X20, 0xE4D000
	0x032D07FC LDRB W8, [X19 + 0x903]
	0x032D0800 LDR X20, [X20 + 0x970]
	0x032D0804 TBNZ X8, 0x0, 0x32D081C
	0x032D0808 ADRP X0, 0xE4D000
	0x032D080C LDR X0, [X0 + 0x970]
	0x032D0810 BL 0x1C16CF4
	0x032D0814 MOVZ W8, 0x1
	0x032D0818 STRB W8, [X19 + 0x903]
	0x032D081C LDR X19, [X20]
	0x032D0820 LDR X8, [X19 + 0x38]
	0x032D0824 CBNZ X8, 0x32D0834
	0x032D0828 MOV X0, X19
	0x032D082C BL 0x1C5C6E0
	0x032D0830 LDR X8, [X19 + 0x38]
	0x032D0834 LDR X0, [X8 + 0x10]
	0x032D0838 LDRB W8, [X0 + 0x135]
	0x032D083C TBNZ X8, 0x0, 0x32D0844
	0x032D0840 BL 0x1C5C684
	0x032D0844 LDR W8, [X0 + 0xE0]
	0x032D0848 CBNZ W8, 0x32D0850
	0x032D084C BL 0x1C16DFC
	0x032D0850 LDR X8, [X19 + 0x38]
	0x032D0854 LDR X0, [X8 + 0x10]
	0x032D0858 LDRB W8, [X0 + 0x135]
	0x032D085C TBNZ X8, 0x0, 0x32D0864
	0x032D0860 BL 0x1C5C684
	0x032D0864 LDR X8, [X0 + 0xB8]
	0x032D0868 LDP X20, X19, [X31 + 0x10]
	0x032D086C LDR X0, [X8]
	0x032D0870 LDR X30, [X31], #0x20
	0x032D0874 RET
	0x032D0878 STR X30, [X31 - 0x20]!
	0x032D087C STP X20, X19, [X31 + 0x10]
	0x032D0880 ADRP X19, 0x110C000
	0x032D0884 ADRP X20, 0xE4D000
	0x032D0888 LDRB W8, [X19 + 0x904]
	0x032D088C LDR X20, [X20 + 0x970]
	0x032D0890 TBNZ X8, 0x0, 0x32D08A8
	0x032D0894 ADRP X0, 0xE4D000
	0x032D0898 LDR X0, [X0 + 0x970]
	0x032D089C BL 0x1C16CF4
	0x032D08A0 MOVZ W8, 0x1
	0x032D08A4 STRB W8, [X19 + 0x904]
	0x032D08A8 LDR X19, [X20]
	0x032D08AC LDR X8, [X19 + 0x38]
	0x032D08B0 CBNZ X8, 0x32D08C0
	0x032D08B4 MOV X0, X19
	0x032D08B8 BL 0x1C5C6E0
	0x032D08BC LDR X8, [X19 + 0x38]
	0x032D08C0 LDR X0, [X8 + 0x10]
	0x032D08C4 LDRB W8, [X0 + 0x135]
	0x032D08C8 TBNZ X8, 0x0, 0x32D08D0
	0x032D08CC BL 0x1C5C684
	0x032D08D0 LDR W8, [X0 + 0xE0]
	0x032D08D4 CBNZ W8, 0x32D08DC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x110D000
	005 Move W8, [X20+2295]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0xE54000
	012 Move X0, [X0+3448]
	013 Call 0x1C17CF4
	014 Move X0, 0xE55000
	015 Move X0, [X0+632]
	016 Call 0x1C17CF4
	017 Move X0, 0xE4D000
	018 Move X0, [X0+1008]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2295], W8
	022 Move X0, [X19+40]
	023 Move X1, X31
	024 Call MemberInfo.op_Equality, X0, X1
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {131}
	029 Move X0, [X19+40]
	030 Compare X0, 0
	031 JumpIfEqual {122}
	032 Move X8, [X0]
	033 Move X9, [X8+408]
	034 Move X1, [X8+416]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W8, [X19+56]
	040 Add W31, W8, 1
	041 Move X0, [X19+40]
	042 Compare X0, 0
	043 JumpIfEqual {122}
	044 Move X9, 0xE54000
	045 Move X9, [X9+3448]
	046 Move X8, [X0]
	047 Move X1, [X9]
	048 Move W10, [X8+304]
	049 Move W9, [X1+304]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X10, [X8+200]
	052 Add X9, X10, X9
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X9, [X8+920]
	056 Move X1, [X8+928]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Compare X0, 0
	059 JumpIfEqual {123}
	060 NotImplemented "Instruction LDRSW not yet implemented."
	061 Move X0, [X19+40]
	062 Compare X0, 0
	063 JumpIfEqual {122}
	064 Move X9, 0xE4D000
	065 Move X9, [X9+1008]
	066 Move X8, [X0]
	067 Move X1, [X9]
	068 Move W10, [X8+304]
	069 Move W9, [X1+304]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X10, [X8+200]
	072 Add X9, X10, X9
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X9, [X8+600]
	076 Move X1, [X8+608]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Compare X0, 0
	079 JumpIfEqual {123}
	080 Move W8, [X19+56]
	081 Move TEMP, X8
	082 And TEMP, TEMP, -2147483648
	083 Compare TEMP, -2147483648
	084 JumpIfEqual {123}
	085 Move W9, [X0+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Add X8, X0, X8
	089 Move X0, [X8+32]
	090 Move X20, [X31+16]
	091 Move X19, [X31+24]
	092 Move X30, [X31+32]
	093 Return X0
	094 Move X0, [X19+40]
	095 Compare X0, 0
	096 JumpIfEqual {122}
	097 Move X8, [X0]
	098 Move X9, [X8+408]
	099 Move X1, [X8+416]
	100 NotImplemented "Instruction BLR not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X0, [X19+40]
	103 Compare X0, 0
	104 JumpIfEqual {122}
	105 Move X9, 0xE55000
	106 Move X9, [X9+632]
	107 Move X8, [X0]
	108 Move X1, [X9]
	109 Move W10, [X8+304]
	110 Move W9, [X1+304]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X10, [X8+200]
	113 Add X9, X10, X9
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X2, [X8+936]
	117 Move X1, [X8+944]
	118 Move X20, [X31+16]
	119 Move X19, [X31+24]
	120 Move X30, [X31+32]
	121 CallNoReturn X2
	122 Call 0x1C17F20
	123 Move X0, 0xE4E000
	124 Move X0, [X0+736]
	125 Call 0x1C17D08
	126 Call 0x1C17F10
	127 Move X19, X0
	128 Move X0, 0xE56000
	129 Move X0, [X0+3624]
	130 Call 0x1C181E0
	131 Move X0, 0xE4E000
	132 Move X0, [X0+736]
	133 Call 0x1C17D08
	134 Call 0x1C17F10
	135 Move X19, X0
	136 Move X0, 0xE56000
	137 Move X0, [X0+3632]
	138 Call 0x1C17F28
	139 Move X0, 0xE4E000
	140 Move X0, [X0+736]
	141 Call 0x1C17D08
	142 Call 0x1C17F10
	143 Move X19, X0
	144 Move X0, 0xE56000
	145 Move X0, [X0+3640]
	146 Call 0x1C17D08
	147 Move X1, X0
	148 Move X0, X19
	149 Move X2, X31
	150 Call SerializationException..ctor, X0, X1
	151 Move X0, 0xE56000
	152 Move X0, [X0+3648]
	153 Call 0x1C17D08
	154 Move X1, X0
	155 Move X0, X19
	156 Call 0x1C17DEC

Method: System.String ToString()

Disassembly:
	0x032D08D8 BL 0x1C16DFC
	0x032D08DC LDR X8, [X19 + 0x38]
	0x032D08E0 LDR X0, [X8 + 0x10]
	0x032D08E4 LDRB W8, [X0 + 0x135]
	0x032D08E8 TBNZ X8, 0x0, 0x32D08F0
	0x032D08EC BL 0x1C5C684
	0x032D08F0 LDR X8, [X0 + 0xB8]
	0x032D08F4 LDP X20, X19, [X31 + 0x10]
	0x032D08F8 LDR X0, [X8]
	0x032D08FC LDR X30, [X31], #0x20
	0x032D0900 RET
	0x032D0904 STP X30, X19, [X31 - 0x10]!
	0x032D0908 ADRP X0, 0xE23000
	0x032D090C LDR X0, [X0 + 0x5B0]
	0x032D0910 BL 0x1C16D08
	0x032D0914 BL 0x1C16F10
	0x032D0918 MOV X19, X0
	0x032D091C ADRP X0, 0xE55000
	0x032D0920 LDR X0, [X0 + 0xEC0]
	0x032D0924 BL 0x1C16D08
	0x032D0928 MOV X1, X0
	0x032D092C MOV X0, X19
	0x032D0930 MOV X2, X31
	0x032D0934 BL 0x337DF1C
	0x032D0938 ADRP X0, 0xE55000
	0x032D093C LDR X0, [X0 + 0xEE0]
	0x032D0940 BL 0x1C16D08
	0x032D0944 MOV X1, X0
	0x032D0948 MOV X0, X19
	0x032D094C BL 0x1C16DEC
	0x032D0950 STR X30, [X31 - 0x20]!
	0x032D0954 STP X20, X19, [X31 + 0x10]
	0x032D0958 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x110D000
	006 Move W8, [X20+2296]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE24000
	013 Move X0, [X0+3544]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2296], W8
	017 Move X8, [X19]
	018 Move X0, X19
	019 Move X9, [X8+472]
	020 Move X1, [X8+480]
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Compare X0, 0
	023 JumpIfEqual {44}
	024 Move X21, 0xE24000
	025 Move X21, [X21+3544]
	026 Move X1, X31
	027 Call Type.FormatTypeName, X0
	028 Move X8, [X19]
	029 Move X20, X0
	030 Move X0, X19
	031 Move X9, [X8+456]
	032 Move X1, [X8+464]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X1, [X21]
	035 Move X2, X0
	036 Move X0, X20
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X3, X31
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Call String.Concat, X0, X1, X2
	043 Return X0
	044 Call 0x1C17F20

