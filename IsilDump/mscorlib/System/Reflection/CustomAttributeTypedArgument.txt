Type: System.Reflection.CustomAttributeTypedArgument

Method: System.Void .ctor(System.Object value)

Disassembly:
	0x032D526C CBZ X0, 0x32D53C4
	0x032D5270 LDR X1, [X19 + 0x28]
	0x032D5274 B 0x32D5294
	0x032D5278 CBZ X22, 0x32D53C4
	0x032D527C LDR X8, [X22]
	0x032D5280 MOV X0, X22
	0x032D5284 LDP X9, X1, [X8 + 0x168]
	0x032D5288 BLR X9
	0x032D528C CBZ X0, 0x32D53C4
	0x032D5290 LDR X1, [X19 + 0x20]
	0x032D5294 MOV X2, X31
	0x032D5298 BL 0x322693C
	0x032D529C TBNZ X0, 0x0, 0x32D5320
	0x032D52A0 LDR W8, [X21 + 0x18]
	0x032D52A4 ADD X25, X25, 0x1
	0x032D52A8 ADD X24, X24, 0x8
	0x032D52AC CMP X25, W8, SXTW
	0x032D52B0 B.LT 0x32D511C
	0x032D52B4 ADRP X0, 0xE1E000
	0x032D52B8 LDR X0, [X0 + 0x9D0]
	0x032D52BC BL 0x1C16D08
	0x032D52C0 MOVZ W1, 0x1
	0x032D52C4 BL 0x1C16D6C
	0x032D52C8 LDR X19, [X19 + 0x10]
	0x032D52CC MOV X20, X0
	0x032D52D0 BL 0x19903C0
	0x032D52D4 MOV X0, X20
	0x032D52D8 MOV X1, X19
	0x032D52DC BL 0x19980B4
	0x032D52E0 MOV X0, X20
	0x032D52E4 MOV X1, X31
	0x032D52E8 MOV X2, X19
	0x032D52EC BL 0x1993444

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {19}
	006 Move X19, X0
	007 Move X0, X1
	008 Move X20, X1
	009 Call CustomAttributeTypedArgument.CanonicalizeValue, X0
	010 Move [X19+8], X0
	011 Move X0, X20
	012 Move X1, X31
	013 Call "il2cpp_vm_object_is_inst", X0
	014 Move [X19], X0
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 Return 
	019 Move X0, 0xE24000
	020 Move X0, [X0+1320]
	021 Call 0x1C17D08
	022 Call 0x1C17F10
	023 Move X19, X0
	024 Move X0, 0xE29000
	025 Move X0, [X0+3784]
	026 Call 0x1C17D08
	027 Move X1, X0
	028 Move X0, X19
	029 Move X2, X31
	030 Call ArgumentNullException..ctor, X0, X1
	031 Move X0, 0xE52000
	032 Move X0, [X0+352]
	033 Call 0x1C17D08
	034 Move X1, X0
	035 Move X0, X19
	036 Call 0x1C17DEC

Method: System.Void .ctor(System.Type argumentType, System.Object value)

Disassembly:
	0x032CE938 CMP W22, W8
	0x032CE93C B.CS 0x32CE9B0
	0x032CE940 LDR X0, [X24, X22, LSL #3]
	0x032CE944 CBZ X0, 0x32CE9AC
	0x032CE948 LDR X8, [X0]
	0x032CE94C LDP X9, X1, [X8 + 0x1D8]
	0x032CE950 BLR X9
	0x032CE954 CBZ X20, 0x32CE9AC
	0x032CE958 MOV X21, X0
	0x032CE95C CBZ X0, 0x32CE974
	0x032CE960 LDR X8, [X20]
	0x032CE964 MOV X0, X21
	0x032CE968 LDR X1, [X8 + 0x40]
	0x032CE96C BL 0x1C16E00
	0x032CE970 CBZ X0, 0x32CE9B4
	0x032CE974 LDR W8, [X20 + 0x18]
	0x032CE978 CMP W22, W8
	0x032CE97C B.CS 0x32CE9B0
	0x032CE980 STR X21, [X23, X22, LSL #3]
	0x032CE984 LDR W8, [X19 + 0x18]
	0x032CE988 ADD X22, X22, 0x1
	0x032CE98C CMP W22, W8
	0x032CE990 B.LT 0x32CE938
	0x032CE994 MOV X0, X20
	0x032CE998 LDP X20, X19, [X31 + 0x30]
	0x032CE99C LDP X22, X21, [X31 + 0x20]
	0x032CE9A0 LDP X24, X23, [X31 + 0x10]
	0x032CE9A4 LDR X30, [X31], #0x40
	0x032CE9A8 RET
	0x032CE9AC BL 0x1C16F20
	0x032CE9B0 BL 0x1C16F28
	0x032CE9B4 BL 0x1C16F44
	0x032CE9B8 MOV X1, X31
	0x032CE9BC BL 0x1C16DEC
	0x032CE9C0 LDR X8, [X0]
	0x032CE9C4 LDR X2, [X8 + 0x248]
	0x032CE9C8 LDR X1, [X8 + 0x250]
	0x032CE9CC BR X2
	0x032CE9D0 STR X30, [X31 - 0x30]!
	0x032CE9D4 STP X22, X21, [X31 + 0x10]
	0x032CE9D8 STP X20, X19, [X31 + 0x20]
	0x032CE9DC ADRP X19, 0x110E000
	0x032CE9E0 LDRB W8, [X19 + 0x8EF]
	0x032CE9E4 STR X0, [X31 + 0x8]
	0x032CE9E8 TBNZ X8, 0x0, 0x32CEA00
	0x032CE9EC ADRP X0, 0xE25000
	0x032CE9F0 LDR X0, [X0 + 0x6C0]
	0x032CE9F4 BL 0x1C16CF4
	0x032CE9F8 MOVZ W8, 0x1
	0x032CE9FC STRB W8, [X19 + 0x8EF]
	0x032CEA00 ADD X0, X31, 0x8
	0x032CEA04 MOV X1, X31
	0x032CEA08 BL 0x33CBED8
	0x032CEA0C TBNZ X0, 0x0, 0x32CEAAC
	0x032CEA10 LDR X0, [X31 + 0x8]
	0x032CEA14 MOV X1, X31
	0x032CEA18 MOV X2, X31
	0x032CEA1C BL 0x32DAF04
	0x032CEA20 MOV X1, X31
	0x032CEA24 MOV X19, X0
	0x032CEA28 BL 0x32CE12C
	0x032CEA2C TBNZ X0, 0x0, 0x32CEAC4
	0x032CEA30 CBZ X19, 0x32CEAA8
	0x032CEA34 LDR X8, [X19]
	0x032CEA38 ADRP X20, 0xE25000
	0x032CEA3C MOV X0, X19
	0x032CEA40 LDP X9, X1, [X8 + 0x1B8]
	0x032CEA44 LDR X20, [X20 + 0x6C0]
	0x032CEA48 BLR X9
	0x032CEA4C LDR X8, [X20]
	0x032CEA50 MOV X20, X0
	0x032CEA54 LDR W9, [X8 + 0xE0]
	0x032CEA58 CBNZ W9, 0x32CEA64
	0x032CEA5C MOV X0, X8
	0x032CEA60 BL 0x1C16DFC
	0x032CEA64 MOV X0, X20
	0x032CEA68 MOV X1, X31
	0x032CEA6C MOV X2, X31
	0x032CEA70 BL 0x3395F0C
	0x032CEA74 TBZ X0, 0x0, 0x32CEA94
	0x032CEA78 CBZ X20, 0x32CEAA8
	0x032CEA7C LDR X8, [X20]
	0x032CEA80 MOV X0, X20
	0x032CEA84 LDR X9, [X8 + 0x3C8]
	0x032CEA88 LDR X1, [X8 + 0x3D0]
	0x032CEA8C BLR X9
	0x032CEA90 TBNZ X0, 0x0, 0x32CEB0C
	0x032CEA94 MOV X0, X19
	0x032CEA98 LDP X20, X19, [X31 + 0x20]
	0x032CEA9C LDP X22, X21, [X31 + 0x10]
	0x032CEAA0 LDR X30, [X31], #0x30
	0x032CEAA4 RET
	0x032CEAA8 BL 0x1C16F20
	0x032CEAAC ADRP X0, 0xE57000
	0x032CEAB0 LDR X0, [X0 + 0xC10]
	0x032CEAB4 BL 0x1C16D08
	0x032CEAB8 MOV X1, X31
	0x032CEABC BL 0x33BDD84
	0x032CEAC0 B 0x32CEB74
	0x032CEAC4 ADRP X0, 0xE2D000
	0x032CEAC8 LDR X0, [X0 + 0x578]
	0x032CEACC BL 0x1C16D08
	0x032CEAD0 BL 0x1C16F10
	0x032CEAD4 MOV X19, X0
	0x032CEAD8 ADRP X0, 0xE57000
	0x032CEADC LDR X0, [X0 + 0xC10]
	0x032CEAE0 BL 0x1C16D08
	0x032CEAE4 MOV X1, X0
	0x032CEAE8 MOV X0, X19
	0x032CEAEC MOV X2, X31
	0x032CEAF0 BL 0x3314A68
	0x032CEAF4 ADRP X0, 0xE57000
	0x032CEAF8 LDR X0, [X0 + 0xD48]
	0x032CEAFC BL 0x1C16D08
	0x032CEB00 MOV X1, X0
	0x032CEB04 MOV X0, X19
	0x032CEB08 BL 0x1C16DEC
	0x032CEB0C ADRP X0, 0xE27000
	0x032CEB10 LDR X0, [X0 + 0xC48]
	0x032CEB14 BL 0x1C16D08
	0x032CEB18 BL 0x19903D0
	0x032CEB1C MOV X0, X31
	0x032CEB20 BL 0x33387A0
	0x032CEB24 MOV X21, X0
	0x032CEB28 ADRP X0, 0xE57000
	0x032CEB2C LDR X0, [X0 + 0xD50]
	0x032CEB30 BL 0x1C16D08
	0x032CEB34 MOV X1, X31
	0x032CEB38 BL 0x33BDD84
	0x032CEB3C MOV X22, X0
	0x032CEB40 MOV X0, X20
	0x032CEB44 BL 0x19903C0
	0x032CEB48 LDR X8, [X20]
	0x032CEB4C MOV X0, X20
	0x032CEB50 LDR X9, [X8 + 0x448]
	0x032CEB54 LDR X1, [X8 + 0x450]
	0x032CEB58 BLR X9
	0x032CEB5C MOV X3, X0
	0x032CEB60 MOV X0, X21
	0x032CEB64 MOV X1, X22
	0x032CEB68 MOV X2, X19
	0x032CEB6C MOV X4, X31
	0x032CEB70 BL 0x3227D58
	0x032CEB74 MOV X19, X0
	0x032CEB78 ADRP X0, 0xE2D000
	0x032CEB7C LDR X0, [X0 + 0x578]
	0x032CEB80 BL 0x1C16D08
	0x032CEB84 BL 0x1C16F10
	0x032CEB88 MOV X1, X19
	0x032CEB8C MOV X2, X31
	0x032CEB90 MOV X20, X0
	0x032CEB94 BL 0x3314A68
	0x032CEB98 ADRP X0, 0xE57000
	0x032CEB9C LDR X0, [X0 + 0xD48]
	0x032CEBA0 BL 0x1C16D08
	0x032CEBA4 MOV X1, X0
	0x032CEBA8 MOV X0, X20
	0x032CEBAC BL 0x1C16DEC
	0x032CEBB0 MOV X1, X31
	0x032CEBB4 B 0x33BDD8C
	0x032CEBB8 MOVZ W0, 0x8
	0x032CEBBC RET
	0x032CEBC0 STP X30, X19, [X31 - 0x10]!
	0x032CEBC4 MOV X0, X31
	0x032CEBC8 BL 0x3396C4C
	0x032CEBCC MOV X19, X0
	0x032CEBD0 ADRP X0, 0xE57000
	0x032CEBD4 LDR X0, [X0 + 0xD58]
	0x032CEBD8 BL 0x1C16D08
	0x032CEBDC MOV X1, X0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X22, 0x110F000
	014 Move X26, 0xE26000
	015 Move W8, [X22+2330]
	016 Move X26, [X26+1728]
	017 Move X20, X2
	018 Move X21, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {44}
	024 Move X0, 0xE58000
	025 Move X0, [X0+3208]
	026 Call 0x1C17CF4
	027 Move X0, 0xE58000
	028 Move X0, [X0+3264]
	029 Call 0x1C17CF4
	030 Move X0, 0xE58000
	031 Move X0, [X0+3272]
	032 Call 0x1C17CF4
	033 Move X0, 0xE26000
	034 Move X0, [X0+3824]
	035 Call 0x1C17CF4
	036 Move X0, 0xE30000
	037 Move X0, [X0+2408]
	038 Call 0x1C17CF4
	039 Move X0, 0xE26000
	040 Move X0, [X0+1728]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X22+2330], W8
	044 Move X0, [X26]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X0, X21
	050 Move X1, X31
	051 Move X2, X31
	052 Call Type.op_Equality, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {175}
	057 Compare X20, 0
	058 JumpIfEqual {159}
	059 Move X22, 0xE26000
	060 Move X22, [X22+3824]
	061 Move X0, X20
	062 Call CustomAttributeTypedArgument.CanonicalizeValue, X0
	063 Move [X19], X21
	064 Move [X19+8], X0
	065 Move X9, [X20]
	066 Move X8, [X22]
	067 Move W11, [X9+304]
	068 Move W10, [X8+304]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X9, [X9+200]
	071 Add X9, X9, X10
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction CSEL not yet implemented."
	075 Compare X20, 0
	076 JumpIfEqual {193}
	077 Move X0, X20
	078 Move X1, X31
	079 Call "il2cpp_vm_object_is_inst", X0
	080 Compare X0, 0
	081 JumpIfEqual {193}
	082 Move X8, [X0]
	083 Move X9, [X8+1064]
	084 Move X1, [X8+1072]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X21, X0
	087 Move X0, X20
	088 Move W1, W31
	089 Move X2, X31
	090 Call Array.GetLength, X0, X1
	091 Move X8, 0xE58000
	092 Move X8, [X8+3208]
	093 Move W1, W0
	094 Move X8, [X8]
	095 Move X0, X8
	096 Call 0x1C17D6C
	097 Compare X0, 0
	098 JumpIfEqual {193}
	099 Move W8, [X0+24]
	100 Move X22, X0
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X28, 0xE30000
	103 Move X28, [X28+2408]
	104 Move X23, X31
	105 Add X27, X22, 32
	106 Move X0, X20
	107 Move W1, W23
	108 Move X2, X31
	109 Call Array.GetValue, X0, X1
	110 Move X8, [X26]
	111 Move X25, [X28]
	112 Move X24, X0
	113 Move W9, [X8+224]
	114 Compare W9, 0
	115 JumpIfNotEqual {118}
	116 Move X0, X8
	117 Call 0x1C17DFC
	118 Move X0, X25
	119 Move X1, X31
	120 Call Type.GetTypeFromHandle, X0
	121 Move X1, X0
	122 Move X0, X21
	123 Move X2, X31
	124 Call Type.op_Equality, X0, X1
	125 Move X1, X21
	126 Compare X24, 0
	127 JumpIfEqual {137}
	128 Move X1, X21
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {137}
	133 Move X0, X24
	134 Move X1, X31
	135 Call "il2cpp_vm_object_is_inst", X0
	136 Move X1, X0
	137 Add X0, X31, 0
	138 Move X2, X24
	139 Move [X31], X31
	140 Move [X31+8], X31
	141 Call CustomAttributeTypedArgument..ctor, X0, X1, X2
	142 Move W8, [X22+24]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move V0, [X31]
	145 Move [X27], V0
	146 Add X23, X23, 1
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X8, 0xE58000
	149 Move X8, [X8+3272]
	150 Move X0, [X8]
	151 Call 0x1C17F10
	152 Move X8, 0xE58000
	153 Move X8, [X8+3264]
	154 Move X1, X22
	155 Move X20, X0
	156 Move X2, [X8]
	157 Call ReadOnlyCollection`1<CustomAttributeTypedArgument>..ctor, X0, X1
	158 Move [X19+8], X20
	159 Move [X19], X21
	160 Move [X19+8], X31
	161 Move X20, [X31+96]
	162 Move X19, [X31+104]
	163 Move X22, [X31+80]
	164 Move X21, [X31+88]
	165 Move X24, [X31+64]
	166 Move X23, [X31+72]
	167 Move X26, [X31+48]
	168 Move X25, [X31+56]
	169 Move X28, [X31+32]
	170 Move X27, [X31+40]
	171 Move X30, [X31+16]
	172 Add X31, X31, 112
	173 Return 
	174 Call 0x1C17F28
	175 Move X0, 0xE2B000
	176 Move X0, [X0+1320]
	177 Call 0x1C17D08
	178 Call 0x1C17F10
	179 Move X19, X0
	180 Move X0, 0xE58000
	181 Move X0, [X0+3280]
	182 Call 0x1C17D08
	183 Move X1, X0
	184 Move X0, X19
	185 Move X2, X31
	186 Call ArgumentNullException..ctor, X0, X1
	187 Move X0, 0xE58000
	188 Move X0, [X0+3288]
	189 Call 0x1C17D08
	190 Move X1, X0
	191 Move X0, X19
	192 Call 0x1C17DEC
	193 Call 0x1C17F20

Method: System.Type get_ArgumentType()

Disassembly:
	0x032D53A8 MOV X0, X22
	0x032D53AC LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.Object get_Value()

Disassembly:
	0x032D53B0 LDP X22, X21, [X31 + 0x30]
	0x032D53B4 LDP X24, X23, [X31 + 0x20]

ISIL:
	001 Move X0, [X0+8]
	002 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x032D53B8 LDP X26, X25, [X31 + 0x10]
	0x032D53BC LDR X30, [X31], #0x50
	0x032D53C0 RET
	0x032D53C4 BL 0x1C16F20
	0x032D53C8 BL 0x1C16F28
	0x032D53CC BL 0x1C171E0
	0x032D53D0 ADRP X0, 0xE50000
	0x032D53D4 LDR X0, [X0 + 0xE30]
	0x032D53D8 BL 0x1C16D08
	0x032D53DC MOV X1, X31
	0x032D53E0 BL 0x33BDD84
	0x032D53E4 MOV X19, X0
	0x032D53E8 ADRP X0, 0xE48000
	0x032D53EC LDR X0, [X0 + 0x2E0]
	0x032D53F0 BL 0x1C16D08
	0x032D53F4 BL 0x1C16F10
	0x032D53F8 MOV X1, X19
	0x032D53FC MOV X2, X31
	0x032D5400 MOV X20, X0
	0x032D5404 BL 0x329F100
	0x032D5408 ADRP X0, 0xE51000
	0x032D540C LDR X0, [X0 + 0x1F0]
	0x032D5410 BL 0x1C16D08
	0x032D5414 MOV X1, X0
	0x032D5418 MOV X0, X20
	0x032D541C BL 0x1C16DEC
	0x032D5420 MOV X0, X22
	0x032D5424 BL 0x1C171E0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0x1108000
	008 Move X21, 0xE52000
	009 Move W8, [X22+2331]
	010 Move X21, [X21+200]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xE52000
	018 Move X0, [X0+200]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+2331], W8
	022 Move V0, [X20]
	023 Move X0, [X21]
	024 Add X1, X31, 0
	025 Move [X31], V0
	026 Call 0x1C17E04
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X20, [X31+48]
	029 Move X19, [X31+56]
	030 Move X22, [X31+32]
	031 Move X21, [X31+40]
	032 Move X30, [X31+16]
	033 NotImplemented "Instruction CSET not yet implemented."
	034 Add X31, X31, 64
	035 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x032D5428 ADRP X0, 0xE51000
	0x032D542C LDR X0, [X0 + 0x1F8]
	0x032D5430 B 0x32D53D8
	0x032D5434 ADRP X0, 0xE51000
	0x032D5438 LDR X0, [X0 + 0x200]
	0x032D543C BL 0x1C16D08
	0x032D5440 MOV X1, X31
	0x032D5444 BL 0x33BDD84
	0x032D5448 MOV X19, X0
	0x032D544C ADRP X0, 0xE26000
	0x032D5450 LDR X0, [X0 + 0x578]
	0x032D5454 BL 0x1C16D08
	0x032D5458 BL 0x1C16F10
	0x032D545C MOV X1, X19
	0x032D5460 MOV X2, X31
	0x032D5464 MOV X20, X0
	0x032D5468 BL 0x3314A68
	0x032D546C B 0x32D5408
	0x032D5470 STR X30, [X31 - 0x20]!
	0x032D5474 STP X20, X19, [X31 + 0x10]
	0x032D5478 ADRP X19, 0x1107000
	0x032D547C LDRB W8, [X19 + 0x4E4]
	0x032D5480 MOV X20, X0
	0x032D5484 CBNZ W8, 0x32D54A8
	0x032D5488 ADRP X0, 0xE4D000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1108000
	007 Move X20, 0xE52000
	008 Move W8, [X21+2332]
	009 Move X20, [X20+200]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xE52000
	016 Move X0, [X0+200]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2332], W8
	020 Move V0, [X19]
	021 Move X0, [X20]
	022 Add X1, X31, 0
	023 Move [X31], V0
	024 Call 0x1C17E04
	025 Move X1, X31
	026 Call ValueType.GetHashCode, X0
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X30, [X31+16]
	030 Move X21, [X31+24]
	031 Add X31, X31, 48
	032 Return X0

Method: System.Boolean op_Equality(System.Reflection.CustomAttributeTypedArgument left, System.Reflection.CustomAttributeTypedArgument right)

Disassembly:
	0x032D548C LDR X0, [X0 + 0xEA8]
	0x032D5490 BL 0x1C16CF4
	0x032D5494 ADRP X0, 0xE1F000
	0x032D5498 LDR X0, [X0 + 0x7B8]
	0x032D549C BL 0x1C16CF4
	0x032D54A0 MOVZ W8, 0x1
	0x032D54A4 STRB W8, [X19 + 0x4E4]
	0x032D54A8 LDR X19, [X20]
	0x032D54AC CBZ X19, 0x32D552C
	0x032D54B0 ADRP X9, 0xE1F000
	0x032D54B4 LDR X9, [X9 + 0x7B8]
	0x032D54B8 LDR X8, [X19]
	0x032D54BC LDR X9, [X9]
	0x032D54C0 LDRB W11, [X8 + 0x130]
	0x032D54C4 LDRB W10, [X9 + 0x130]
	0x032D54C8 CMP W11, W10
	0x032D54CC B.CC 0x32D54E4
	0x032D54D0 LDR X11, [X8 + 0xC8]
	0x032D54D4 ADD X10, X11, X10, 0x3, LSL
	0x032D54D8 LDUR X10, [X10 - 0x8]
	0x032D54DC CMP X10, X9
	0x032D54E0 B.EQ 0x32D5564
	0x032D54E4 ADRP X10, 0xE4D000
	0x032D54E8 LDRH W20, [X20 + 0x8]
	0x032D54EC LDR X10, [X10 + 0xEA8]
	0x032D54F0 LDRH W9, [X8 + 0x12E]
	0x032D54F4 LDR X1, [X10]
	0x032D54F8 CBZ X9, 0x32D551C
	0x032D54FC LDR X10, [X8 + 0xB0]
	0x032D5500 ADD X10, X10, 0x8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+24], X1
	003 Move [X31+32], X30
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X22, 0x1108000
	009 Move [X31+16], X0
	010 Move X21, 0xE52000
	011 Move W8, [X22+2333]
	012 Move X21, [X21+200]
	013 Move X19, X3
	014 Move X20, X2
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xE52000
	020 Move X0, [X0+200]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2333], W8
	024 Move X0, [X21]
	025 Add X1, X31, 0
	026 Move [X31], X20
	027 Move [X31+8], X19
	028 Call 0x1C17E04
	029 Move X1, X0
	030 Add X0, X31, 16
	031 Call CustomAttributeTypedArgument.Equals, X0, X1
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X22, [X31+48]
	035 Move X21, [X31+56]
	036 Move X30, [X31+32]
	037 And W0, W0, 1
	038 Add X31, X31, 80
	039 Return X0

Method: System.Boolean op_Inequality(System.Reflection.CustomAttributeTypedArgument left, System.Reflection.CustomAttributeTypedArgument right)

Disassembly:
	0x032D5504 LDUR X11, [X10 - 0x8]
	0x032D5508 CMP X11, X1
	0x032D550C B.EQ 0x32D5534
	0x032D5510 SUBS X9, X9, 0x1
	0x032D5514 ADD X10, X10, 0x10
	0x032D5518 B.NE 0x32D5504
	0x032D551C MOV X0, X19
	0x032D5520 MOV W2, W31
	0x032D5524 BL 0x1C5C788
	0x032D5528 B 0x32D5540
	0x032D552C MOVZ W0, 0x1
	0x032D5530 B 0x32D5558
	0x032D5534 LDRSW X9, [X10]
	0x032D5538 ADD X8, X8, X9, 0x4, LSL
	0x032D553C ADD X0, X8, 0x138
	0x032D5540 LDP X8, X2, [X0]
	0x032D5544 MOV X0, X19
	0x032D5548 MOV W1, W20
	0x032D554C BLR X8
	0x032D5550 CMP W0, 0x0
	0x032D5554 CSET W0, NE
	0x032D5558 LDP X20, X19, [X31 + 0x10]
	0x032D555C LDR X30, [X31], #0x20
	0x032D5560 RET
	0x032D5564 MOV X0, X19
	0x032D5568 LDP X20, X19, [X31 + 0x10]
	0x032D556C MOV X1, X31
	0x032D5570 LDR X30, [X31], #0x20
	0x032D5574 B 0x33ED11C
	0x032D5578 STR X30, [X31 - 0x20]!
	0x032D557C STP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+24], X1
	003 Move [X31+32], X30
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X22, 0x1108000
	009 Move [X31+16], X0
	010 Move X21, 0xE52000
	011 Move W8, [X22+2334]
	012 Move X21, [X21+200]
	013 Move X19, X3
	014 Move X20, X2
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xE52000
	020 Move X0, [X0+200]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2334], W8
	024 Move X0, [X21]
	025 Add X1, X31, 0
	026 Move [X31], X20
	027 Move [X31+8], X19
	028 Call 0x1C17E04
	029 Move X1, X0
	030 Add X0, X31, 16
	031 Call CustomAttributeTypedArgument.Equals, X0, X1
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X22, [X31+48]
	035 Move X21, [X31+56]
	036 Move X30, [X31+32]
	037 NotImplemented "Instruction ORN not yet implemented."
	038 And W0, W8, 1
	039 Add X31, X31, 80
	040 Return X0

Method: System.String ToString()

Disassembly:
	0x032D5580 ADRP X19, 0x1107000
	0x032D5584 LDRB W8, [X19 + 0x4E6]

ISIL:
	001 Move W1, W31
	002 Call CustomAttributeTypedArgument.ToString, X0, X1
	003 Return X0

Method: System.String ToString(System.Boolean typed)

Disassembly:
	0x032D4924 ADRP X0, 0xE50000
	0x032D4928 LDR X0, [X0 + 0xB70]
	0x032D492C BL 0x1C16CF4
	0x032D4930 ADRP X0, 0xE48000
	0x032D4934 LDR X0, [X0 + 0x4E8]
	0x032D4938 BL 0x1C16CF4
	0x032D493C ADRP X0, 0xE47000
	0x032D4940 LDR X0, [X0 + 0xB60]
	0x032D4944 BL 0x1C16CF4
	0x032D4948 ADRP X0, 0xE21000
	0x032D494C LDR X0, [X0 + 0x278]
	0x032D4950 BL 0x1C16CF4
	0x032D4954 ADRP X0, 0xE1F000
	0x032D4958 LDR X0, [X0 + 0x6C0]
	0x032D495C BL 0x1C16CF4
	0x032D4960 ADRP X0, 0xE52000
	0x032D4964 LDR X0, [X0 + 0x170]
	0x032D4968 BL 0x1C16CF4
	0x032D496C ADRP X0, 0xE52000
	0x032D4970 LDR X0, [X0 + 0x178]
	0x032D4974 BL 0x1C16CF4
	0x032D4978 ADRP X0, 0xE24000
	0x032D497C LDR X0, [X0 + 0x170]
	0x032D4980 BL 0x1C16CF4
	0x032D4984 ADRP X0, 0xE52000
	0x032D4988 LDR X0, [X0 + 0x180]
	0x032D498C BL 0x1C16CF4
	0x032D4990 ADRP X0, 0xE52000
	0x032D4994 LDR X0, [X0 + 0x188]
	0x032D4998 BL 0x1C16CF4
	0x032D499C ADRP X0, 0xE52000
	0x032D49A0 LDR X0, [X0 + 0x198]
	0x032D49A4 BL 0x1C16CF4
	0x032D49A8 MOVZ W8, 0x1
	0x032D49AC STRB W8, [X21 + 0x922]
	0x032D49B0 MOV X0, X20
	0x032D49B4 MOV X1, X31
	0x032D49B8 BL 0x33BDD8C
	0x032D49BC CBZ X19, 0x32D4BCC
	0x032D49C0 ADRP X8, 0xE52000
	0x032D49C4 LDR X8, [X8 + 0x180]
	0x032D49C8 ADRP X21, 0xE52000
	0x032D49CC MOV X0, X19
	0x032D49D0 MOV X2, X31
	0x032D49D4 LDR X1, [X8]
	0x032D49D8 LDR X21, [X21 + 0x188]
	0x032D49DC BL 0x32A9F64
	0x032D49E0 LDR X1, [X21]
	0x032D49E4 MOV X22, X0
	0x032D49E8 MOV X0, X19
	0x032D49EC MOV X2, X31
	0x032D49F0 BL 0x32A9F64
	0x032D49F4 CBZ X22, 0x32D4B7C
	0x032D49F8 CMP X0, 0x0
	0x032D49FC MOV X21, X0
	0x032D4A00 CSEL X22, X31, X22, EQ
	0x032D4A04 CBZ X0, 0x32D4B7C
	0x032D4A08 ADRP X8, 0xE50000
	0x032D4A0C LDR X8, [X8 + 0xB70]
	0x032D4A10 LDR X0, [X8]
	0x032D4A14 LDR W8, [X0 + 0xE0]
	0x032D4A18 CBNZ W8, 0x32D4A20
	0x032D4A1C BL 0x1C16DFC
	0x032D4A20 MOV X0, X22
	0x032D4A24 MOV X1, X31
	0x032D4A28 BL 0x32A24E4
	0x032D4A2C CBZ X0, 0x32D4C14
	0x032D4A30 LDR X8, [X0]
	0x032D4A34 ADRP X25, 0xE24000
	0x032D4A38 LDR X25, [X25 + 0x170]
	0x032D4A3C ADRP X24, 0xE52000
	0x032D4A40 LDR X9, [X8 + 0x278]
	0x032D4A44 LDR X4, [X8 + 0x280]
	0x032D4A48 ADRP X22, 0xE47000
	0x032D4A4C ADRP X23, 0xE1F000
	0x032D4A50 LDR X24, [X24 + 0x198]
	0x032D4A54 LDR X22, [X22 + 0xB60]
	0x032D4A58 LDR X23, [X23 + 0x6C0]
	0x032D4A5C MOVZ W2, 0x1
	0x032D4A60 MOV X1, X21
	0x032D4A64 MOV W3, W31
	0x032D4A68 BLR X9
	0x032D4A6C CBZ X0, 0x32D4A90
	0x032D4A70 ADRP X8, 0xE48000
	0x032D4A74 LDR X8, [X8 + 0x4E8]
	0x032D4A78 LDR X9, [X0]
	0x032D4A7C LDR X8, [X8]
	0x032D4A80 LDRB W11, [X9 + 0x130]
	0x032D4A84 LDRB W10, [X8 + 0x130]
	0x032D4A88 CMP W11, W10
	0x032D4A8C B.CS 0x32D4A98
	0x032D4A90 MOV X8, X31
	0x032D4A94 B 0x32D4AAC
	0x032D4A98 LDR X9, [X9 + 0xC8]
	0x032D4A9C ADD X9, X9, X10, 0x3, LSL
	0x032D4AA0 LDUR X9, [X9 - 0x8]
	0x032D4AA4 CMP X9, X8
	0x032D4AA8 CSEL X8, X0, X31, EQ
	0x032D4AAC STR X8, [X20 + 0x18]
	0x032D4AB0 LDR X1, [X25]
	0x032D4AB4 ADRP X25, 0xE52000
	0x032D4AB8 LDR X25, [X25 + 0x170]
	0x032D4ABC MOV X0, X19
	0x032D4AC0 MOV X2, X31
	0x032D4AC4 BL 0x32A9F64
	0x032D4AC8 STR X0, [X20 + 0x10]
	0x032D4ACC LDR X1, [X24]
	0x032D4AD0 MOV X0, X19
	0x032D4AD4 MOV X2, X31
	0x032D4AD8 BL 0x32A9F64
	0x032D4ADC STR X0, [X20 + 0x20]
	0x032D4AE0 LDR X0, [X23]
	0x032D4AE4 LDR X21, [X22]
	0x032D4AE8 LDR W8, [X0 + 0xE0]
	0x032D4AEC CBNZ W8, 0x32D4AF4
	0x032D4AF0 BL 0x1C16DFC
	0x032D4AF4 MOV X0, X21
	0x032D4AF8 MOV X1, X31
	0x032D4AFC BL 0x338C698
	0x032D4B00 LDR X1, [X25]
	0x032D4B04 MOV X2, X0
	0x032D4B08 MOV X0, X19
	0x032D4B0C MOV X3, X31
	0x032D4B10 BL 0x32A9880
	0x032D4B14 CBZ X0, 0x32D4B44
	0x032D4B18 ADRP X8, 0xE21000
	0x032D4B1C LDR X8, [X8 + 0x278]
	0x032D4B20 LDR X1, [X8]
	0x032D4B24 LDR X8, [X0]
	0x032D4B28 CMP X8, X1
	0x032D4B2C B.NE 0x32D4B40
	0x032D4B30 STR X0, [X20 + 0x28]
	0x032D4B34 LDR X8, [X0]
	0x032D4B38 CMP X8, X1
	0x032D4B3C B.EQ 0x32D4B48
	0x032D4B40 BL 0x1C171E0
	0x032D4B44 STR X31, [X20 + 0x28]
	0x032D4B48 ADRP X8, 0xE52000
	0x032D4B4C LDR X8, [X8 + 0x178]
	0x032D4B50 MOV X0, X19
	0x032D4B54 MOV X2, X31
	0x032D4B58 LDR X1, [X8]
	0x032D4B5C BL 0x32A9B08
	0x032D4B60 STR W0, [X20 + 0x30]
	0x032D4B64 STR X19, [X20 + 0x38]
	0x032D4B68 LDP X20, X19, [X31 + 0x30]
	0x032D4B6C LDP X22, X21, [X31 + 0x20]
	0x032D4B70 LDP X24, X23, [X31 + 0x10]
	0x032D4B74 LDP X30, X25, [X31], #0x40
	0x032D4B78 RET
	0x032D4B7C ADRP X0, 0xE51000
	0x032D4B80 LDR X0, [X0 + 0xE30]
	0x032D4B84 BL 0x1C16D08
	0x032D4B88 MOV X1, X31
	0x032D4B8C BL 0x33BDD84
	0x032D4B90 MOV X19, X0
	0x032D4B94 ADRP X0, 0xE49000
	0x032D4B98 LDR X0, [X0 + 0x2E0]
	0x032D4B9C BL 0x1C16D08
	0x032D4BA0 BL 0x1C16F10
	0x032D4BA4 MOV X1, X19
	0x032D4BA8 MOV X2, X31
	0x032D4BAC MOV X20, X0
	0x032D4BB0 BL 0x329F100
	0x032D4BB4 ADRP X0, 0xE52000
	0x032D4BB8 LDR X0, [X0 + 0x1A8]
	0x032D4BBC BL 0x1C16D08
	0x032D4BC0 MOV X1, X0
	0x032D4BC4 MOV X0, X20
	0x032D4BC8 BL 0x1C16DEC
	0x032D4BCC ADRP X0, 0xE24000
	0x032D4BD0 LDR X0, [X0 + 0x528]
	0x032D4BD4 BL 0x1C16D08
	0x032D4BD8 BL 0x1C16F10
	0x032D4BDC MOV X19, X0
	0x032D4BE0 ADRP X0, 0xE49000
	0x032D4BE4 LDR X0, [X0 + 0x2D8]
	0x032D4BE8 BL 0x1C16D08
	0x032D4BEC MOV X1, X0
	0x032D4BF0 MOV X0, X19
	0x032D4BF4 MOV X2, X31
	0x032D4BF8 BL 0x330E100
	0x032D4BFC ADRP X0, 0xE52000
	0x032D4C00 LDR X0, [X0 + 0x1A8]
	0x032D4C04 BL 0x1C16D08
	0x032D4C08 MOV X1, X0
	0x032D4C0C MOV X0, X19
	0x032D4C10 BL 0x1C16DEC
	0x032D4C14 BL 0x1C16F20
	0x032D4C18 STR X30, [X31 - 0x20]!
	0x032D4C1C STP X20, X19, [X31 + 0x10]
	0x032D4C20 ADRP X0, 0xE4F000
	0x032D4C24 LDR X0, [X0 + 0x258]
	0x032D4C28 BL 0x1C16D08
	0x032D4C2C MOV X1, X31
	0x032D4C30 BL 0x33BDD84
	0x032D4C34 MOV X19, X0
	0x032D4C38 ADRP X0, 0xE1F000
	0x032D4C3C LDR X0, [X0 + 0xB40]
	0x032D4C40 BL 0x1C16D08
	0x032D4C44 BL 0x1C16F10
	0x032D4C48 MOV X1, X19
	0x032D4C4C MOV X2, X31
	0x032D4C50 MOV X20, X0
	0x032D4C54 BL 0x3379A44
	0x032D4C58 ADRP X0, 0xE52000
	0x032D4C5C LDR X0, [X0 + 0x1B0]
	0x032D4C60 BL 0x1C16D08
	0x032D4C64 MOV X1, X0
	0x032D4C68 MOV X0, X20
	0x032D4C6C BL 0x1C16DEC
	0x032D4C70 STR X30, [X31 - 0x50]!
	0x032D4C74 STP X26, X25, [X31 + 0x10]
	0x032D4C78 STP X24, X23, [X31 + 0x20]
	0x032D4C7C STP X22, X21, [X31 + 0x30]
	0x032D4C80 STP X20, X19, [X31 + 0x40]
	0x032D4C84 ADRP X20, 0x1108000
	0x032D4C88 LDRB W8, [X20 + 0x923]
	0x032D4C8C MOV X19, X0
	0x032D4C90 TBNZ X8, 0x0, 0x32D4D38
	0x032D4C94 ADRP X0, 0xE52000
	0x032D4C98 LDR X0, [X0 + 0x1B8]
	0x032D4C9C BL 0x1C16CF4
	0x032D4CA0 ADRP X0, 0xE52000
	0x032D4CA4 LDR X0, [X0 + 0x1C0]
	0x032D4CA8 BL 0x1C16CF4
	0x032D4CAC ADRP X0, 0xE50000
	0x032D4CB0 LDR X0, [X0 + 0xB80]
	0x032D4CB4 BL 0x1C16CF4
	0x032D4CB8 ADRP X0, 0xE52000
	0x032D4CBC LDR X0, [X0 + 0x1C8]
	0x032D4CC0 BL 0x1C16CF4
	0x032D4CC4 ADRP X0, 0xE52000
	0x032D4CC8 LDR X0, [X0 + 0x1D0]
	0x032D4CCC BL 0x1C16CF4
	0x032D4CD0 ADRP X0, 0xE52000
	0x032D4CD4 LDR X0, [X0 + 0x1D8]
	0x032D4CD8 BL 0x1C16CF4
	0x032D4CDC ADRP X0, 0xE50000
	0x032D4CE0 LDR X0, [X0 + 0x9A0]
	0x032D4CE4 BL 0x1C16CF4
	0x032D4CE8 ADRP X0, 0xE52000
	0x032D4CEC LDR X0, [X0 + 0x1E0]
	0x032D4CF0 BL 0x1C16CF4
	0x032D4CF4 ADRP X0, 0xE48000
	0x032D4CF8 LDR X0, [X0 + 0x4E8]
	0x032D4CFC BL 0x1C16CF4
	0x032D4D00 ADRP X0, 0xE51000
	0x032D4D04 LDR X0, [X0 + 0x188]
	0x032D4D08 BL 0x1C16CF4
	0x032D4D0C ADRP X0, 0xE27000
	0x032D4D10 LDR X0, [X0 + 0xC60]
	0x032D4D14 BL 0x1C16CF4
	0x032D4D18 ADRP X0, 0xE1F000
	0x032D4D1C LDR X0, [X0 + 0x6C0]
	0x032D4D20 BL 0x1C16CF4
	0x032D4D24 ADRP X0, 0xE52000
	0x032D4D28 LDR X0, [X0 + 0x190]
	0x032D4D2C BL 0x1C16CF4
	0x032D4D30 MOVZ W8, 0x1
	0x032D4D34 STRB W8, [X20 + 0x923]
	0x032D4D38 LDR X8, [X19 + 0x10]
	0x032D4D3C CBZ X8, 0x32D53D0
	0x032D4D40 ADRP X8, 0xE48000
	0x032D4D44 LDR X8, [X8 + 0x4E8]
	0x032D4D48 LDR X20, [X19 + 0x18]
	0x032D4D4C LDR X0, [X8]
	0x032D4D50 LDR W8, [X0 + 0xE0]
	0x032D4D54 CBNZ W8, 0x32D4D5C
	0x032D4D58 BL 0x1C16DFC
	0x032D4D5C MOV X0, X20
	0x032D4D60 MOV X1, X31
	0x032D4D64 MOV X2, X31
	0x032D4D68 BL 0x33A6674
	0x032D4D6C TBNZ X0, 0x0, 0x32D53D0
	0x032D4D70 LDR W8, [X19 + 0x30]
	0x032D4D74 CMP W8, 0x8
	0x032D4D78 B.HI 0x32D4E94
	0x032D4D7C ADRP X9, 0xFFFFFFFFFD8C2000
	0x032D4D80 ADD X9, X9, 0x5F4
	0x032D4D84 ADR X10, 0x10
	0x032D4D88 LDRH W11, [X9, X8, LSL #1]
	0x032D4D8C ADD X10, X10, X11, 0x2, LSL
	0x032D4D90 BR X10
	0x032D4D94 LDR X8, [X19 + 0x20]
	0x032D4D98 CBZ X8, 0x32D5428
	0x032D4D9C LDR X0, [X19 + 0x18]
	0x032D4DA0 CBZ X0, 0x32D53C4
	0x032D4DA4 LDR X8, [X0]
	0x032D4DA8 LDR X1, [X19 + 0x10]
	0x032D4DAC MOVZ W3, 0x3C
	0x032D4DB0 MOVZ W2, 0x1
	0x032D4DB4 LDR X9, [X8 + 0x6B8]
	0x032D4DB8 LDR X4, [X8 + 0x6C0]
	0x032D4DBC MOVK W3, 0x40000
	0x032D4DC0 BLR X9
	0x032D4DC4 ADRP X8, 0xE52000
	0x032D4DC8 LDR X8, [X8 + 0x1B8]
	0x032D4DCC LDR X1, [X8]
	0x032D4DD0 BL 0x1C16E00
	0x032D4DD4 CBZ X0, 0x32D53C4
	0x032D4DD8 LDR X8, [X0 + 0x18]
	0x032D4DDC MOV X20, X0
	0x032D4DE0 CMP W8, 0x1
	0x032D4DE4 B.EQ 0x32D4EEC
	0x032D4DE8 CMP W8, 0x2
	0x032D4DEC B.LT 0x32D52B4
	0x032D4DF0 ADRP X23, 0xE52000
	0x032D4DF4 LDR X23, [X23 + 0x1D8]
	0x032D4DF8 MOV X21, X31
	0x032D4DFC AND X8, X8, 0x0
	0x032D4E00 ADD X22, X20, 0x20
	0x032D4E04 CMP X21, W8, UXTW
	0x032D4E08 B.CS 0x32D53C8
	0x032D4E0C LDR X8, [X19 + 0x28]
	0x032D4E10 LDR X0, [X22, X21, LSL #3]
	0x032D4E14 CBZ X8, 0x32D4E5C
	0x032D4E18 CBZ X0, 0x32D53C4
	0x032D4E1C LDR X8, [X0]
	0x032D4E20 LDR X1, [X23]
	0x032D4E24 LDRB W10, [X8 + 0x130]
	0x032D4E28 LDRB W9, [X1 + 0x130]
	0x032D4E2C CMP W10, W9
	0x032D4E30 B.CC 0x32D53CC
	0x032D4E34 LDR X8, [X8 + 0xC8]
	0x032D4E38 ADD X8, X8, X9, 0x3, LSL
	0x032D4E3C LDUR X8, [X8 - 0x8]
	0x032D4E40 CMP X8, X1
	0x032D4E44 B.NE 0x32D53CC
	0x032D4E48 MOV X1, X31
	0x032D4E4C BL 0x32DC8A4
	0x032D4E50 CBZ X0, 0x32D53C4
	0x032D4E54 LDR X1, [X19 + 0x28]
	0x032D4E58 B 0x32D4E74
	0x032D4E5C CBZ X0, 0x32D53C4
	0x032D4E60 LDR X8, [X0]
	0x032D4E64 LDP X9, X1, [X8 + 0x168]
	0x032D4E68 BLR X9
	0x032D4E6C CBZ X0, 0x32D53C4
	0x032D4E70 LDR X1, [X19 + 0x20]
	0x032D4E74 MOV X2, X31
	0x032D4E78 BL 0x322693C
	0x032D4E7C TBNZ X0, 0x0, 0x32D50E8
	0x032D4E80 LDR W8, [X20 + 0x18]
	0x032D4E84 ADD X21, X21, 0x1
	0x032D4E88 CMP X21, W8, SXTW
	0x032D4E8C B.LT 0x32D4E04
	0x032D4E90 B 0x32D52B4
	0x032D4E94 CMP W8, 0x10
	0x032D4E98 B.NE 0x32D5434
	0x032D4E9C LDR X0, [X19 + 0x18]
	0x032D4EA0 CBZ X0, 0x32D53C4
	0x032D4EA4 LDR X8, [X0]
	0x032D4EA8 LDR X1, [X19 + 0x10]
	0x032D4EAC MOVZ W3, 0x3C
	0x032D4EB0 MOVZ W2, 0x10
	0x032D4EB4 LDR X9, [X8 + 0x6B8]
	0x032D4EB8 LDR X4, [X8 + 0x6C0]
	0x032D4EBC MOVK W3, 0x40000
	0x032D4EC0 BLR X9
	0x032D4EC4 ADRP X8, 0xE52000
	0x032D4EC8 LDR X8, [X8 + 0x1D0]
	0x032D4ECC LDR X1, [X8]
	0x032D4ED0 BL 0x1C16E00
	0x032D4ED4 CBZ X0, 0x32D53C4
	0x032D4ED8 LDR X8, [X0 + 0x18]
	0x032D4EDC MOV X20, X0
	0x032D4EE0 CBZ X8, 0x32D52B4
	0x032D4EE4 CMP W8, 0x1
	0x032D4EE8 B.NE 0x32D5040
	0x032D4EEC LDR X0, [X20 + 0x20]
	0x032D4EF0 B 0x32D53AC
	0x032D4EF4 LDR X0, [X19 + 0x18]
	0x032D4EF8 CBZ X0, 0x32D53C4
	0x032D4EFC LDR X8, [X0]
	0x032D4F00 LDR X1, [X19 + 0x10]
	0x032D4F04 MOVZ W3, 0x3C
	0x032D4F08 MOVZ W2, 0x2
	0x032D4F0C LDR X9, [X8 + 0x6B8]
	0x032D4F10 LDR X4, [X8 + 0x6C0]
	0x032D4F14 MOVK W3, 0x40000
	0x032D4F18 BLR X9
	0x032D4F1C ADRP X8, 0xE52000
	0x032D4F20 LDR X8, [X8 + 0x1C0]
	0x032D4F24 B 0x32D4F58
	0x032D4F28 LDR X0, [X19 + 0x18]
	0x032D4F2C CBZ X0, 0x32D53C4
	0x032D4F30 LDR X8, [X0]
	0x032D4F34 LDR X1, [X19 + 0x10]
	0x032D4F38 MOVZ W3, 0x3C
	0x032D4F3C MOVZ W2, 0x4
	0x032D4F40 LDR X9, [X8 + 0x6B8]
	0x032D4F44 LDR X4, [X8 + 0x6C0]
	0x032D4F48 MOVK W3, 0x40000
	0x032D4F4C BLR X9
	0x032D4F50 ADRP X8, 0xE50000
	0x032D4F54 LDR X8, [X8 + 0xB80]
	0x032D4F58 LDR X1, [X8]
	0x032D4F5C BL 0x1C16E00
	0x032D4F60 CBZ X0, 0x32D53C4
	0x032D4F64 LDR X8, [X0 + 0x18]
	0x032D4F68 CBZ X8, 0x32D52B4
	0x032D4F6C CBZ W8, 0x32D53C8
	0x032D4F70 LDR X0, [X0 + 0x20]
	0x032D4F74 B 0x32D53AC
	0x032D4F78 LDR X8, [X19 + 0x20]
	0x032D4F7C CBZ X8, 0x32D5428
	0x032D4F80 ADRP X23, 0xE1F000
	0x032D4F84 LDR X23, [X23 + 0x6C0]
	0x032D4F88 ADRP X8, 0xE51000
	0x032D4F8C LDR X20, [X19 + 0x38]
	0x032D4F90 LDR X0, [X23]
	0x032D4F94 LDR X8, [X8 + 0x188]
	0x032D4F98 LDR W9, [X0 + 0xE0]
	0x032D4F9C LDR X21, [X8]
	0x032D4FA0 CBNZ W9, 0x32D4FA8
	0x032D4FA4 BL 0x1C16DFC
	0x032D4FA8 MOV X0, X21
	0x032D4FAC MOV X1, X31
	0x032D4FB0 BL 0x338C698
	0x032D4FB4 CBZ X20, 0x32D53C4
	0x032D4FB8 ADRP X8, 0xE52000
	0x032D4FBC LDR X8, [X8 + 0x190]
	0x032D4FC0 MOV X2, X0
	0x032D4FC4 MOV X0, X20
	0x032D4FC8 MOV X3, X31
	0x032D4FCC LDR X1, [X8]
	0x032D4FD0 BL 0x32A9880
	0x032D4FD4 ADRP X8, 0xE27000
	0x032D4FD8 LDR X8, [X8 + 0xC60]
	0x032D4FDC LDR X1, [X8]
	0x032D4FE0 BL 0x1C16E00
	0x032D4FE4 LDR X8, [X19 + 0x18]
	0x032D4FE8 CBZ X8, 0x32D53C4
	0x032D4FEC LDR X9, [X8]
	0x032D4FF0 LDR X1, [X19 + 0x10]
	0x032D4FF4 MOVZ W3, 0x3C
	0x032D4FF8 MOV X20, X0
	0x032D4FFC LDR X10, [X9 + 0x6B8]
	0x032D5000 LDR X4, [X9 + 0x6C0]
	0x032D5004 MOVZ W2, 0x8
	0x032D5008 MOVK W3, 0x40000
	0x032D500C MOV X0, X8
	0x032D5010 BLR X10
	0x032D5014 ADRP X8, 0xE51000
	0x032D5018 LDR X8, [X8 + 0x1C8]
	0x032D501C LDR X1, [X8]
	0x032D5020 BL 0x1C16E00
	0x032D5024 CBZ X0, 0x32D53C4
	0x032D5028 LDR X8, [X0 + 0x18]
	0x032D502C MOV X21, X0
	0x032D5030 CMP W8, 0x1
	0x032D5034 B.NE 0x32D5100
	0x032D5038 ADD X24, X21, 0x20
	0x032D503C B 0x32D5318
	0x032D5040 CMP W8, 0x2
	0x032D5044 B.LT 0x32D52B4
	0x032D5048 ADRP X23, 0xE51000
	0x032D504C LDR X23, [X23 + 0x1E0]
	0x032D5050 MOV X21, X31
	0x032D5054 ADD X22, X20, 0x20
	0x032D5058 CMP X21, W8, UXTW
	0x032D505C B.CS 0x32D53C8
	0x032D5060 LDR X8, [X19 + 0x28]
	0x032D5064 LDR X0, [X22, X21, LSL #3]
	0x032D5068 CBZ X8, 0x32D50B0
	0x032D506C CBZ X0, 0x32D53C4
	0x032D5070 LDR X8, [X0]
	0x032D5074 LDR X1, [X23]
	0x032D5078 LDRB W10, [X8 + 0x130]
	0x032D507C LDRB W9, [X1 + 0x130]
	0x032D5080 CMP W10, W9
	0x032D5084 B.CC 0x32D53CC
	0x032D5088 LDR X8, [X8 + 0xC8]
	0x032D508C ADD X8, X8, X9, 0x3, LSL
	0x032D5090 LDUR X8, [X8 - 0x8]
	0x032D5094 CMP X8, X1
	0x032D5098 B.NE 0x32D53CC
	0x032D509C MOV X1, X31
	0x032D50A0 BL 0x32DE560
	0x032D50A4 CBZ X0, 0x32D53C4
	0x032D50A8 LDR X1, [X19 + 0x28]
	0x032D50AC B 0x32D50C8
	0x032D50B0 CBZ X0, 0x32D53C4
	0x032D50B4 LDR X8, [X0]
	0x032D50B8 LDP X9, X1, [X8 + 0x168]
	0x032D50BC BLR X9
	0x032D50C0 CBZ X0, 0x32D53C4
	0x032D50C4 LDR X1, [X19 + 0x20]
	0x032D50C8 MOV X2, X31
	0x032D50CC BL 0x322693C
	0x032D50D0 TBNZ X0, 0x0, 0x32D50E8
	0x032D50D4 LDR W8, [X20 + 0x18]
	0x032D50D8 ADD X21, X21, 0x1
	0x032D50DC CMP X21, W8, SXTW
	0x032D50E0 B.LT 0x32D5058
	0x032D50E4 B 0x32D52B4
	0x032D50E8 LDR W8, [X20 + 0x18]
	0x032D50EC CMP W21, W8
	0x032D50F0 B.CS 0x32D53C8
	0x032D50F4 ADD X8, X20, 0x20
	0x032D50F8 LDR X0, [X8, X21, LSL #3]
	0x032D50FC B 0x32D53AC
	0x032D5100 CMP W8, 0x2
	0x032D5104 B.LT 0x32D52B4
	0x032D5108 ADRP X26, 0xE4F000
	0x032D510C LDR X26, [X26 + 0x9A0]
	0x032D5110 MOV X25, X31
	0x032D5114 AND X8, X8, 0x0
	0x032D5118 ADD X24, X21, 0x20
	0x032D511C CMP X25, W8, UXTW
	0x032D5120 B.CS 0x32D53C8
	0x032D5124 LDR X8, [X19 + 0x28]
	0x032D5128 LDR X0, [X24]
	0x032D512C CBZ X8, 0x32D5174
	0x032D5130 CBZ X0, 0x32D53C4
	0x032D5134 LDR X8, [X0]
	0x032D5138 LDR X1, [X26]
	0x032D513C LDRB W10, [X8 + 0x130]
	0x032D5140 LDRB W9, [X1 + 0x130]
	0x032D5144 CMP W10, W9
	0x032D5148 B.CC 0x32D53CC
	0x032D514C LDR X8, [X8 + 0xC8]
	0x032D5150 ADD X8, X8, X9, 0x3, LSL
	0x032D5154 LDUR X8, [X8 - 0x8]
	0x032D5158 CMP X8, X1
	0x032D515C B.NE 0x32D53CC
	0x032D5160 MOV X1, X31
	0x032D5164 BL 0x32DAE4C
	0x032D5168 CBZ X0, 0x32D53C4
	0x032D516C LDR X1, [X19 + 0x28]
	0x032D5170 B 0x32D518C
	0x032D5174 CBZ X0, 0x32D53C4
	0x032D5178 LDR X8, [X0]
	0x032D517C LDP X9, X1, [X8 + 0x168]
	0x032D5180 BLR X9
	0x032D5184 CBZ X0, 0x32D53C4
	0x032D5188 LDR X1, [X19 + 0x20]
	0x032D518C MOV X2, X31
	0x032D5190 BL 0x322693C
	0x032D5194 TBNZ X0, 0x0, 0x32D530C
	0x032D5198 CBZ X20, 0x32D52A0
	0x032D519C LDR W8, [X21 + 0x18]
	0x032D51A0 CMP X25, X8
	0x032D51A4 B.CS 0x32D53C8
	0x032D51A8 LDR X0, [X24]
	0x032D51AC CBZ X0, 0x32D53C4
	0x032D51B0 LDR X8, [X0]
	0x032D51B4 LDR X9, [X8 + 0x2D8]
	0x032D51B8 LDR X1, [X8 + 0x2E0]
	0x032D51BC BLR X9
	0x032D51C0 TBZ X0, 0x0, 0x32D52A0
	0x032D51C4 LDR W8, [X21 + 0x18]
	0x032D51C8 CMP X25, X8
	0x032D51CC B.CS 0x32D53C8
	0x032D51D0 LDR X0, [X24]
	0x032D51D4 CBZ X0, 0x32D53C4
	0x032D51D8 LDR X8, [X0]
	0x032D51DC LDR X9, [X8 + 0x2F8]
	0x032D51E0 LDR X1, [X8 + 0x300]
	0x032D51E4 BLR X9
	0x032D51E8 CBZ X0, 0x32D53C4
	0x032D51EC LDR W8, [X0 + 0x18]
	0x032D51F0 LDR W9, [X20 + 0x18]
	0x032D51F4 CMP W8, W9
	0x032D51F8 B.NE 0x32D52A0
	0x032D51FC LDR W8, [X21 + 0x18]
	0x032D5200 CMP X25, X8
	0x032D5204 B.CS 0x32D53C8
	0x032D5208 LDR X0, [X24]
	0x032D520C CBZ X0, 0x32D53C4
	0x032D5210 LDR X8, [X0]
	0x032D5214 MOV X1, X20
	0x032D5218 LDR X9, [X8 + 0x3D8]
	0x032D521C LDR X2, [X8 + 0x3E0]
	0x032D5220 BLR X9
	0x032D5224 LDR X8, [X19 + 0x28]
	0x032D5228 MOV X22, X0
	0x032D522C CBZ X8, 0x32D5278
	0x032D5230 CBZ X22, 0x32D53C4
	0x032D5234 LDR X8, [X22]
	0x032D5238 LDR X1, [X26]
	0x032D523C LDRB W10, [X8 + 0x130]
	0x032D5240 LDRB W9, [X1 + 0x130]
	0x032D5244 CMP W10, W9
	0x032D5248 B.CC 0x32D5420
	0x032D524C LDR X8, [X8 + 0xC8]
	0x032D5250 ADD X8, X8, X9, 0x3, LSL
	0x032D5254 LDUR X8, [X8 - 0x8]
	0x032D5258 CMP X8, X1
	0x032D525C B.NE 0x32D5420
	0x032D5260 MOV X0, X22
	0x032D5264 MOV X1, X31
	0x032D5268 BL 0x32DAE4C

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X21, 0x1109000
	015 Move X27, 0xE20000
	016 Move W8, [X21+2335]
	017 Move X27, [X27+1728]
	018 Move W20, W1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {86}
	024 Move X0, 0xE47000
	025 Move X0, [X0+3440]
	026 Call 0x1C17CF4
	027 Move X0, 0xE22000
	028 Move X0, [X0+3144]
	029 Call 0x1C17CF4
	030 Move X0, 0xE53000
	031 Move X0, [X0+200]
	032 Call 0x1C17CF4
	033 Move X0, 0xE53000
	034 Move X0, [X0+264]
	035 Call 0x1C17CF4
	036 Move X0, 0xE53000
	037 Move X0, [X0+272]
	038 Call 0x1C17CF4
	039 Move X0, 0xE20000
	040 Move X0, [X0+1880]
	041 Call 0x1C17CF4
	042 Move X0, 0xE2A000
	043 Move X0, [X0+2408]
	044 Call 0x1C17CF4
	045 Move X0, 0xE48000
	046 Move X0, [X0+2912]
	047 Call 0x1C17CF4
	048 Move X0, 0xE53000
	049 Move X0, [X0+280]
	050 Call 0x1C17CF4
	051 Move X0, 0xE20000
	052 Move X0, [X0+1728]
	053 Call 0x1C17CF4
	054 Move X0, 0xE53000
	055 Move X0, [X0+288]
	056 Call 0x1C17CF4
	057 Move X0, 0xE53000
	058 Move X0, [X0+296]
	059 Call 0x1C17CF4
	060 Move X0, 0xE24000
	061 Move X0, [X0+272]
	062 Call 0x1C17CF4
	063 Move X0, 0xE53000
	064 Move X0, [X0+304]
	065 Call 0x1C17CF4
	066 Move X0, 0xE20000
	067 Move X0, [X0+2096]
	068 Call 0x1C17CF4
	069 Move X0, 0xE53000
	070 Move X0, [X0+312]
	071 Call 0x1C17CF4
	072 Move X0, 0xE53000
	073 Move X0, [X0+320]
	074 Call 0x1C17CF4
	075 Move X0, 0xE53000
	076 Move X0, [X0+328]
	077 Call 0x1C17CF4
	078 Move X0, 0xE53000
	079 Move X0, [X0+336]
	080 Call 0x1C17CF4
	081 Move X0, 0xE53000
	082 Move X0, [X0+344]
	083 Call 0x1C17CF4
	084 Move W8, 1
	085 Move [X21+2335], W8
	086 Move X0, [X27]
	087 Move [X31+16], X31
	088 Move [X31+24], X31
	089 Move X21, [X19]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move X0, X21
	095 Move X1, X31
	096 Move X2, X31
	097 Call Type.op_Equality, X0, X1
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {111}
	102 Move X8, 0xE53000
	103 Move X8, [X8+200]
	104 Move V0, [X19]
	105 Move X0, [X8]
	106 Move [X31], V0
	107 Add X1, X31, 0
	108 Call 0x1C17E04
	109 Move X1, X31
	110 Call ValueType.ToString, X0
	111 Move X0, [X19]
	112 Compare X0, 0
	113 JumpIfEqual {542}
	114 Move X8, [X0]
	115 Move X1, [X8+1424]
	116 Move X9, [X8+1416]
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfNotEqual {151}
	122 Move X8, 0xE22000
	123 Move X8, [X8+3144]
	124 Move X0, [X8]
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Move X0, X31
	130 Call CultureInfo.get_CurrentCulture
	131 Move X8, 0xE24000
	132 Move X9, 0xE53000
	133 Move X21, X0
	134 Move X0, [X19]
	135 Move X8, [X8+272]
	136 Move X9, [X9+288]
	137 And W31, W20, 1
	138 NotImplemented "Instruction CSEL not yet implemented."
	139 Compare X0, 0
	140 JumpIfEqual {543}
	141 Move X20, [X8]
	142 Move X22, [X19+8]
	143 Move X1, X31
	144 Call Type.get_FullNameOrDefault, X0
	145 Move X3, X0
	146 Move X0, X21
	147 Move X1, X20
	148 Move X2, X22
	149 Move X4, X31
	150 Call String.Format, X0, X1, X2, X3
	151 Move X8, [X19+8]
	152 Compare X8, 0
	153 JumpIfEqual {189}
	154 Move X8, 0xE48000
	155 Move X0, [X27]
	156 Move X21, [X19]
	157 Move X8, [X8+2912]
	158 Move W9, [X0+224]
	159 Move X22, [X8]
	160 Compare W9, 0
	161 JumpIfNotEqual {163}
	162 Call 0x1C17DFC
	163 Move X0, X22
	164 Move X1, X31
	165 Call Type.GetTypeFromHandle, X0
	166 Move X1, X0
	167 Move X0, X21
	168 Move X2, X31
	169 Call Type.op_Equality, X0, X1
	170 Move TEMP, X0
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfNotEqual {216}
	174 Move X8, 0xE22000
	175 Move X8, [X8+3144]
	176 Move X0, [X8]
	177 Move W8, [X0+224]
	178 Compare W8, 0
	179 JumpIfNotEqual {181}
	180 Call 0x1C17DFC
	181 Move X0, X31
	182 Call CultureInfo.get_CurrentCulture
	183 Move X8, 0xE53000
	184 Move X2, [X19+8]
	185 Move X8, [X8+304]
	186 Move X1, [X8]
	187 Move X3, X31
	188 Call String.Format, X0, X1, X2
	189 Move X8, 0xE22000
	190 Move X8, [X8+3144]
	191 Move X0, [X8]
	192 Move W8, [X0+224]
	193 Compare W8, 0
	194 JumpIfNotEqual {196}
	195 Call 0x1C17DFC
	196 Move X0, X31
	197 Call CultureInfo.get_CurrentCulture
	198 Move X8, 0xE20000
	199 Move X9, 0xE53000
	200 Move X21, X0
	201 Move X0, [X19]
	202 Move X8, [X8+2096]
	203 Move X9, [X9+296]
	204 And W31, W20, 1
	205 NotImplemented "Instruction CSEL not yet implemented."
	206 Compare X0, 0
	207 JumpIfEqual {544}
	208 Move X20, [X8]
	209 Move X1, X31
	210 Call Type.get_NameOrDefault, X0
	211 Move X2, X0
	212 Move X0, X21
	213 Move X1, X20
	214 Move X3, X31
	215 Call String.Format, X0, X1, X2
	216 Move X8, 0xE47000
	217 Move X0, [X27]
	218 Move X21, [X19]
	219 Move X8, [X8+3440]
	220 Move W9, [X0+224]
	221 Move X22, [X8]
	222 Compare W9, 0
	223 JumpIfNotEqual {225}
	224 Call 0x1C17DFC
	225 Move X0, X22
	226 Move X1, X31
	227 Call Type.GetTypeFromHandle, X0
	228 Move X1, X0
	229 Move X0, X21
	230 Move X2, X31
	231 Call Type.op_Equality, X0, X1
	232 Move TEMP, X0
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfNotEqual {251}
	236 Move X8, 0xE22000
	237 Move X8, [X8+3144]
	238 Move X0, [X8]
	239 Move W8, [X0+224]
	240 Compare W8, 0
	241 JumpIfNotEqual {243}
	242 Call 0x1C17DFC
	243 Move X0, X31
	244 Call CultureInfo.get_CurrentCulture
	245 Move X8, 0xE53000
	246 Move X2, [X19+8]
	247 Move X8, [X8+312]
	248 Move X1, [X8]
	249 Move X3, X31
	250 Call String.Format, X0, X1, X2
	251 Move X8, 0xE53000
	252 Move X0, [X27]
	253 Move X21, [X19]
	254 Move X8, [X8+280]
	255 Move W9, [X0+224]
	256 Move X22, [X8]
	257 Compare W9, 0
	258 JumpIfNotEqual {260}
	259 Call 0x1C17DFC
	260 Move X0, X22
	261 Move X1, X31
	262 Call Type.GetTypeFromHandle, X0
	263 Move X1, X0
	264 Move X0, X21
	265 Move X2, X31
	266 Call Type.op_Equality, X0, X1
	267 Move TEMP, X0
	268 And TEMP, TEMP, 1
	269 Compare TEMP, 1
	270 JumpIfNotEqual {302}
	271 Move X8, 0xE22000
	272 Move X8, [X8+3144]
	273 Move X0, [X8]
	274 Move W8, [X0+224]
	275 Compare W8, 0
	276 JumpIfNotEqual {278}
	277 Call 0x1C17DFC
	278 Move X0, X31
	279 Call CultureInfo.get_CurrentCulture
	280 Move X20, X0
	281 Move X0, [X19+8]
	282 Compare X0, 0
	283 JumpIfEqual {547}
	284 Move X8, [X0]
	285 Move X1, [X27]
	286 Move W10, [X8+304]
	287 Move W9, [X1+304]
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Move X8, [X8+200]
	290 Add X8, X8, X9
	291 NotImplemented "Instruction LDUR not yet implemented."
	292 NotImplemented "Instruction CMP not yet implemented."
	293 Move X1, X31
	294 Call Type.get_FullNameOrDefault, X0
	295 Move X8, 0xE53000
	296 Move X8, [X8+320]
	297 Move X2, X0
	298 Move X1, [X8]
	299 Move X0, X20
	300 Move X3, X31
	301 Call String.Format, X0, X1, X2
	302 Move X0, [X19]
	303 Compare X0, 0
	304 JumpIfEqual {546}
	305 Move X1, X31
	306 Call Type.get_IsArray, X0
	307 Move TEMP, X0
	308 And TEMP, TEMP, 1
	309 Compare TEMP, 1
	310 JumpIfNotEqual {352}
	311 Move X8, 0xE53000
	312 Move X0, [X19+8]
	313 Move X8, [X8+272]
	314 Move X1, [X8]
	315 Call 0x1C17E00
	316 Move X20, X0
	317 Move X0, [X19]
	318 Compare X0, 0
	319 JumpIfEqual {548}
	320 Move X8, [X0]
	321 Move X1, [X8+1072]
	322 Move X9, [X8+1064]
	323 NotImplemented "Instruction BLR not yet implemented."
	324 Move X8, 0xE22000
	325 Move X8, [X8+3144]
	326 Move X21, X0
	327 Move X0, [X8]
	328 Move W8, [X0+224]
	329 Compare W8, 0
	330 JumpIfNotEqual {332}
	331 Call 0x1C17DFC
	332 Move X0, X31
	333 Call CultureInfo.get_CurrentCulture
	334 Compare X21, 0
	335 JumpIfEqual {550}
	336 Move X8, [X21]
	337 Move X22, X0
	338 Move X1, [X8+1424]
	339 Move X9, [X8+1416]
	340 Move X0, X21
	341 NotImplemented "Instruction BLR not yet implemented."
	342 Move X8, 0xE53000
	343 Move X8, [X8+328]
	344 Move X23, [X8]
	345 Move TEMP, X0
	346 And TEMP, TEMP, 1
	347 Compare TEMP, 1
	348 JumpIfNotEqual {381}
	349 Move X0, X21
	350 Move X1, X31
	351 Call Type.get_FullNameOrDefault, X0
	352 Move X8, 0xE22000
	353 Move X8, [X8+3144]
	354 Move X0, [X8]
	355 Move W8, [X0+224]
	356 Compare W8, 0
	357 JumpIfNotEqual {359}
	358 Call 0x1C17DFC
	359 Move X0, X31
	360 Call CultureInfo.get_CurrentCulture
	361 Move X8, 0xE24000
	362 Move X9, 0xE53000
	363 Move X21, X0
	364 Move X0, [X19]
	365 Move X8, [X8+272]
	366 Move X9, [X9+288]
	367 And W31, W20, 1
	368 NotImplemented "Instruction CSEL not yet implemented."
	369 Compare X0, 0
	370 JumpIfEqual {549}
	371 Move X20, [X8]
	372 Move X22, [X19+8]
	373 Move X1, X31
	374 Call Type.get_NameOrDefault, X0
	375 Move X3, X0
	376 Move X0, X21
	377 Move X1, X20
	378 Move X2, X22
	379 Move X4, X31
	380 Call String.Format, X0, X1, X2, X3
	381 Move X0, X21
	382 Move X1, X31
	383 Call Type.get_NameOrDefault, X0
	384 Move X24, X0
	385 Compare X20, 0
	386 JumpIfEqual {551}
	387 Move X10, 0xE53000
	388 Move X8, [X20]
	389 Move X10, [X10+264]
	390 NotImplemented "Instruction LDRH not yet implemented."
	391 Move X1, [X10]
	392 Compare X9, 0
	393 JumpIfEqual {400}
	394 Move X10, [X8+176]
	395 Add X10, X10, 8
	396 NotImplemented "Instruction LDUR not yet implemented."
	397 NotImplemented "Instruction CMP not yet implemented."
	398 Subtract X9, X9, 1
	399 Add X10, X10, 16
	400 Move X0, X20
	401 Move W2, W31
	402 Call 0x1C5D788
	403 NotImplemented "Instruction LDRSW not yet implemented."
	404 Add X8, X8, X9
	405 Add X0, X8, 312
	406 Move X8, [X0]
	407 Move X1, [X0+8]
	408 Move X0, X20
	409 NotImplemented "Instruction BLR not yet implemented."
	410 Move X8, 0xE20000
	411 Move X8, [X8+1880]
	412 Move [X31], W0
	413 Move X8, [X8]
	414 Add X1, X31, 0
	415 Move X0, X8
	416 Call 0x1C17E04
	417 Move X3, X0
	418 Move X0, X22
	419 Move X1, X23
	420 Move X2, X24
	421 Move X4, X31
	422 Call String.Format, X0, X1, X2, X3
	423 Move X28, 0xE53000
	424 Move X29, 0xE2A000
	425 Move X28, [X28+336]
	426 Move X29, [X29+2408]
	427 Move X22, X0
	428 Move W23, W31
	429 Move X8, [X20]
	430 Move X10, 0xE53000
	431 NotImplemented "Instruction LDRH not yet implemented."
	432 Move X10, [X10+264]
	433 Move X1, [X10]
	434 Compare X9, 0
	435 JumpIfEqual {442}
	436 Move X10, [X8+176]
	437 Add X10, X10, 8
	438 NotImplemented "Instruction LDUR not yet implemented."
	439 NotImplemented "Instruction CMP not yet implemented."
	440 Subtract X9, X9, 1
	441 Add X10, X10, 16
	442 Move X0, X20
	443 Move W2, W31
	444 Call 0x1C5D788
	445 NotImplemented "Instruction LDRSW not yet implemented."
	446 Add X8, X8, X9
	447 Add X0, X8, 312
	448 Move X8, [X0]
	449 Move X1, [X0+8]
	450 Move X0, X20
	451 NotImplemented "Instruction BLR not yet implemented."
	452 NotImplemented "Instruction CMP not yet implemented."
	453 Move X8, 0xE22000
	454 Move X8, [X8+3144]
	455 Move X0, [X8]
	456 Move W8, [X0+224]
	457 Compare W8, 0
	458 JumpIfNotEqual {460}
	459 Call 0x1C17DFC
	460 Move X0, X31
	461 Call CultureInfo.get_CurrentCulture
	462 Move X9, 0xE24000
	463 Move X8, [X20]
	464 Move X9, [X9+272]
	465 NotImplemented "Instruction CMP not yet implemented."
	466 Move X10, 0xE53000
	467 Move X24, X0
	468 NotImplemented "Instruction CSEL not yet implemented."
	469 Move X25, [X9]
	470 NotImplemented "Instruction LDRH not yet implemented."
	471 Move X10, [X10+272]
	472 Move X1, [X10]
	473 Compare X9, 0
	474 JumpIfEqual {481}
	475 Move X10, [X8+176]
	476 Add X10, X10, 8
	477 NotImplemented "Instruction LDUR not yet implemented."
	478 NotImplemented "Instruction CMP not yet implemented."
	479 Subtract X9, X9, 1
	480 Add X10, X10, 16
	481 Move X0, X20
	482 Move W2, W31
	483 Call 0x1C5D788
	484 NotImplemented "Instruction LDRSW not yet implemented."
	485 Add X8, X8, X9
	486 Add X0, X8, 312
	487 Move X8, [X0]
	488 Move X2, [X0+8]
	489 Move X0, X20
	490 Move W1, W23
	491 NotImplemented "Instruction BLR not yet implemented."
	492 Move X8, [X27]
	493 Move [X31+16], X0
	494 Move [X31+24], X1
	495 Move X26, [X29]
	496 Move W9, [X8+224]
	497 Compare W9, 0
	498 JumpIfNotEqual {501}
	499 Move X0, X8
	500 Call 0x1C17DFC
	501 Move X0, X26
	502 Move X1, X31
	503 Call Type.GetTypeFromHandle, X0
	504 Move X1, X0
	505 Move X0, X21
	506 Move X2, X31
	507 Call Type.op_Inequality, X0, X1
	508 And W1, W0, 1
	509 Add X0, X31, 16
	510 Call CustomAttributeTypedArgument.ToString, X0, X1
	511 Move X2, X0
	512 Move X0, X24
	513 Move X1, X25
	514 Move X3, X31
	515 Call String.Format, X0, X1, X2
	516 Move X1, X0
	517 Move X0, X22
	518 Move X2, X31
	519 Call String.Concat, X0, X1
	520 Move X22, X0
	521 Add W23, W23, 1
	522 Move X8, 0xE52000
	523 Move X8, [X8+344]
	524 Move X1, [X8]
	525 Move X0, X22
	526 Move X2, X31
	527 Call String.Concat, X0, X1
	528 Move X20, [X31+112]
	529 Move X19, [X31+120]
	530 Move X22, [X31+96]
	531 Move X21, [X31+104]
	532 Move X24, [X31+80]
	533 Move X23, [X31+88]
	534 Move X26, [X31+64]
	535 Move X25, [X31+72]
	536 Move X28, [X31+48]
	537 Move X27, [X31+56]
	538 Move X29, [X31+32]
	539 Move X30, [X31+40]
	540 Add X31, X31, 128
	541 Return X0
	542 Call 0x1C17F20
	543 Call 0x1C17F20
	544 Call 0x1C17F20
	545 Call 0x1C181E0
	546 Call 0x1C17F20
	547 Call 0x1C17F20
	548 Call 0x1C17F20
	549 Call 0x1C17F20
	550 Call 0x1C17F20
	551 Call 0x1C17F20
	552 Move X20, X0
	553 NotImplemented "Instruction CMP not yet implemented."
	554 Move X0, X20
	555 Call 0x3EB2AD0
	556 Move X20, X0
	557 Move X0, 0xE4D000
	558 Move X0, [X0+4040]
	559 Call 0x1C17D08
	560 Move X8, [X20]
	561 Move X1, [X8]
	562 Call 0x1C18270
	563 Move TEMP, X0
	564 And TEMP, TEMP, 1
	565 Compare TEMP, 1
	566 JumpIfNotEqual {573}
	567 Call 0x3EB2AE0
	568 Move V0, [X19]
	569 Move X0, 0xE52000
	570 Move [X31], V0
	571 Move X0, [X0+200]
	572 Call 0x1C17D08
	573 Move W0, 8
	574 Call 0x3EB2AF0
	575 Move X8, [X20]
	576 Move [X0], X8
	577 Move X1, 0xBE0000
	578 Add X1, X1, 3672
	579 Move X2, X31
	580 Call 0x3EB2B00
	581 Move X20, X0
	582 Call 0x3EB2AE0
	583 Move X0, X20
	584 Call 0x1D2D690
	585 Call 0x1991590

Method: System.Object CanonicalizeValue(System.Object value)

Disassembly:
	0x032D52F0 ADRP X0, 0xE51000
	0x032D52F4 LDR X0, [X0 + 0x1E8]
	0x032D52F8 BL 0x1C16D08
	0x032D52FC MOV X1, X20
	0x032D5300 MOV X2, X31
	0x032D5304 BL 0x33BFB40
	0x032D5308 B 0x32D53E4
	0x032D530C LDR W8, [X21 + 0x18]
	0x032D5310 CMP W25, W8
	0x032D5314 B.CS 0x32D53C8
	0x032D5318 LDR X22, [X24]
	0x032D531C CBZ X22, 0x32D52B4
	0x032D5320 LDR X8, [X22]
	0x032D5324 MOV X0, X22
	0x032D5328 LDR X9, [X8 + 0x2E8]
	0x032D532C LDR X1, [X8 + 0x2F0]
	0x032D5330 BLR X9
	0x032D5334 CBZ X20, 0x32D53A8
	0x032D5338 MOV W8, W0
	0x032D533C MOV X0, X22
	0x032D5340 TBZ X8, 0x0, 0x32D53AC
	0x032D5344 LDR W8, [X20 + 0x18]
	0x032D5348 CBZ W8, 0x32D53C8
	0x032D534C LDR X0, [X23]
	0x032D5350 LDR X19, [X20 + 0x20]
	0x032D5354 LDR W8, [X0 + 0xE0]
	0x032D5358 CBNZ W8, 0x32D5360
	0x032D535C BL 0x1C16DFC
	0x032D5360 MOV X0, X19
	0x032D5364 MOV X1, X31
	0x032D5368 MOV X2, X31
	0x032D536C BL 0x3395194
	0x032D5370 MOV W8, W0
	0x032D5374 MOV X0, X31
	0x032D5378 TBNZ X8, 0x0, 0x32D53AC
	0x032D537C LDR X8, [X22]
	0x032D5380 MOV X0, X22
	0x032D5384 MOV X1, X20
	0x032D5388 LDP X20, X19, [X31 + 0x40]
	0x032D538C LDR X3, [X8 + 0x3D8]
	0x032D5390 LDR X2, [X8 + 0x3E0]
	0x032D5394 LDP X22, X21, [X31 + 0x30]
	0x032D5398 LDP X24, X23, [X31 + 0x20]
	0x032D539C LDP X26, X25, [X31 + 0x10]
	0x032D53A0 LDR X30, [X31], #0x50
	0x032D53A4 BR X3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1108000
	005 Move W8, [X20+2336]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE1F000
	012 Move X0, [X0+3576]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2336], W8
	016 Compare X19, 0
	017 JumpIfEqual {54}
	018 Move X0, X19
	019 Move X1, X31
	020 Call "il2cpp_vm_object_is_inst", X0
	021 Compare X0, 0
	022 JumpIfEqual {54}
	023 Move X8, [X0]
	024 Move X9, [X8+1416]
	025 Move X1, [X8+1424]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {49}
	031 Move X9, 0xE1F000
	032 Move X9, [X9+3576]
	033 Move X8, [X19]
	034 Move X1, [X9]
	035 Move W10, [X8+304]
	036 Move W9, [X1+304]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X8, [X8+200]
	039 Add X8, X8, X9
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X0, X19
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X1, X31
	046 Move X30, [X31+32]
	047 Call Enum.GetValue, X0
	048 Return X0
	049 Move X0, X19
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Return X0
	054 Call 0x1C17F20
	055 Move X0, X19
	056 Call 0x1C181E0

