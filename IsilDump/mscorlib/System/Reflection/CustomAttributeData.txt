Type: System.Reflection.CustomAttributeData

Method: System.Void .ctor()

Disassembly:
	0x032D8290 MOV X0, X21
	0x032D8294 BLR X8

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .ctor(System.Reflection.ConstructorInfo ctorInfo, System.Reflection.Assembly assembly, System.IntPtr data, System.UInt32 data_length)

Disassembly:
	0x032D8298 CMP W20, W0
	0x032D829C B.GE 0x32D8460
	0x032D82A0 LDR X22, [X23 + 0x20]
	0x032D82A4 CBZ X22, 0x32D843C
	0x032D82A8 MOV W21, W31
	0x032D82AC LDR X8, [X22]
	0x032D82B0 LDR X1, [X24]
	0x032D82B4 LDRH W9, [X8 + 0x12E]
	0x032D82B8 CBZ X9, 0x32D82DC
	0x032D82BC LDR X10, [X8 + 0xB0]
	0x032D82C0 ADD X10, X10, 0x8
	0x032D82C4 LDUR X11, [X10 - 0x8]
	0x032D82C8 CMP X11, X1
	0x032D82CC B.EQ 0x32D82EC
	0x032D82D0 SUBS X9, X9, 0x1
	0x032D82D4 ADD X10, X10, 0x10
	0x032D82D8 B.NE 0x32D82C4
	0x032D82DC MOV X0, X22
	0x032D82E0 MOV W2, W31
	0x032D82E4 BL 0x1C5C788
	0x032D82E8 B 0x32D82F8
	0x032D82EC LDRSW X9, [X10]
	0x032D82F0 ADD X8, X8, X9, 0x4, LSL
	0x032D82F4 ADD X0, X8, 0x138
	0x032D82F8 LDP X8, X1, [X0]
	0x032D82FC MOV X0, X22
	0x032D8300 BLR X8
	0x032D8304 CMP W21, W0
	0x032D8308 B.GE 0x32D8440
	0x032D830C LDR X22, [X19 + 0x20]
	0x032D8310 CBZ X22, 0x32D843C
	0x032D8314 LDR X8, [X22]
	0x032D8318 LDR X1, [X25]
	0x032D831C LDRH W9, [X8 + 0x12E]
	0x032D8320 CBZ X9, 0x32D8344
	0x032D8324 LDR X10, [X8 + 0xB0]
	0x032D8328 ADD X10, X10, 0x8
	0x032D832C LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x1105000
	010 Move X24, 0xE4F000
	011 Move W8, [X25+2356]
	012 Move X24, [X24+936]
	013 Move W19, W4
	014 Move X20, X3
	015 Move X21, X2
	016 Move X23, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xE4F000
	023 Move X0, [X0+936]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+2356], W8
	027 Move X0, X22
	028 Move X1, X31
	029 Call Object..ctor, X0
	030 Move [X22+16], X23
	031 Move X0, [X24]
	032 Call 0x1C17F10
	033 Move X1, X31
	034 Move X23, X0
	035 Call Object..ctor, X0
	036 Move [X22+40], X23
	037 Compare X23, 0
	038 JumpIfEqual {51}
	039 Move [X23+16], X21
	040 Move [X23+24], X20
	041 Move [X23+32], W19
	042 Move X20, [X31+48]
	043 Move X19, [X31+56]
	044 Move X22, [X31+32]
	045 Move X21, [X31+40]
	046 Move X24, [X31+16]
	047 Move X23, [X31+24]
	048 Move X30, [X31+64]
	049 Move X25, [X31+72]
	050 Return 
	051 Call 0x1C17F20

Method: System.Void .ctor(System.Reflection.ConstructorInfo ctorInfo)

Disassembly:
	0x032D8338 SUBS X9, X9, 0x1
	0x032D833C ADD X10, X10, 0x10
	0x032D8340 B.NE 0x32D832C
	0x032D8344 MOV X0, X22
	0x032D8348 MOV W2, W31
	0x032D834C BL 0x1C5C788
	0x032D8350 B 0x32D8360
	0x032D8354 LDRSW X9, [X10]
	0x032D8358 ADD X8, X8, X9, 0x4, LSL
	0x032D835C ADD X0, X8, 0x138
	0x032D8360 LDP X9, X2, [X0]
	0x032D8364 ADD X8, X31, 0x30
	0x032D8368 MOV X0, X22
	0x032D836C MOV W1, W20
	0x032D8370 BLR X9
	0x032D8374 LDP V0, V1, [X31 + 0x30]
	0x032D8378 LDR V2, [X31 + 0x5]
	0x032D837C STP V0, V1, [X31 + 0x60]
	0x032D8380 STR V2, [X31 + 0x8]
	0x032D8384 LDR X22, [X23 + 0x20]
	0x032D8388 CBZ X22, 0x32D843C
	0x032D838C LDR X8, [X22]
	0x032D8390 LDR X1, [X25]
	0x032D8394 LDRH W9, [X8 + 0x12E]
	0x032D8398 CBZ X9, 0x32D83BC
	0x032D839C LDR X10, [X8 + 0xB0]
	0x032D83A0 ADD X10, X10, 0x8
	0x032D83A4 LDUR X11, [X10 - 0x8]
	0x032D83A8 CMP X11, X1
	0x032D83AC B.EQ 0x32D83CC
	0x032D83B0 SUBS X9, X9, 0x1
	0x032D83B4 ADD X10, X10, 0x10
	0x032D83B8 B.NE 0x32D83A4
	0x032D83BC MOV X0, X22
	0x032D83C0 MOV W2, W31
	0x032D83C4 BL 0x1C5C788
	0x032D83C8 B 0x32D83D8
	0x032D83CC LDRSW X9, [X10]
	0x032D83D0 ADD X8, X8, X9, 0x4, LSL
	0x032D83D4 ADD X0, X8, 0x138
	0x032D83D8 LDP X9, X2, [X0]
	0x032D83DC ADD X8, X31, 0x0
	0x032D83E0 MOV X0, X22
	0x032D83E4 MOV W1, W21
	0x032D83E8 BLR X9
	0x032D83EC LDP V1, V0, [X31 + 0x10]
	0x032D83F0 LDR V2, [X31]
	0x032D83F4 LDR X0, [X26]
	0x032D83F8 ADD X1, X31, 0x0
	0x032D83FC STP V1, V0, [X31 + 0x40]
	0x032D8400 STP V0, V2, [X31 + 0x20]
	0x032D8404 STP V2, V1, [X31]
	0x032D8408 BL 0x1C16E04
	0x032D840C MOV X1, X0
	0x032D8410 ADD X0, X31, 0x60
	0x032D8414 MOV X2, X31
	0x032D8418 BL 0x32D3414
	0x032D841C TBNZ X0, 0x0, 0x32D8430
	0x032D8420 LDR X22, [X23 + 0x20]
	0x032D8424 ADD W21, W21, 0x1
	0x032D8428 CBNZ X22, 0x32D82AC
	0x032D842C B 0x32D843C
	0x032D8430 LDR X21, [X19 + 0x20]
	0x032D8434 ADD W20, W20, 0x1
	0x032D8438 CBNZ X21, 0x32D8240
	0x032D843C BL 0x1C16F20
	0x032D8440 MOV W0, W31
	0x032D8444 LDP X20, X19, [X31 + 0xE0]
	0x032D8448 LDP X22, X21, [X31 + 0xD0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1105000
	007 Move X22, 0xE4F000
	008 Move W8, [X21+2357]
	009 Move X22, [X22+944]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xE4F000
	017 Move X0, [X0+952]
	018 Call 0x1C17CF4
	019 Move X0, 0xE4F000
	020 Move X0, [X0+944]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2357], W8
	024 Move X21, [X22]
	025 Move X8, [X21+56]
	026 Compare X8, 0
	027 JumpIfNotEqual {31}
	028 Move X0, X21
	029 Call 0x1C5D6E0
	030 Move X8, [X21+56]
	031 Move X0, [X8+16]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X8, [X21+56]
	043 Move X21, 0xE4F000
	044 Move X0, [X8+16]
	045 Move W8, [X0+309]
	046 Move X21, [X21+952]
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {52}
	051 Call 0x1C5D684
	052 Move X21, [X21]
	053 Move X9, [X0+184]
	054 Move X8, [X21+56]
	055 Move X22, [X9]
	056 Compare X8, 0
	057 JumpIfNotEqual {61}
	058 Move X0, X21
	059 Call 0x1C5D6E0
	060 Move X8, [X21+56]
	061 Move X0, [X8+16]
	062 Move W8, [X0+309]
	063 Move TEMP, X8
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {68}
	067 Call 0x1C5D684
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X8, [X21+56]
	073 Move X0, [X8+16]
	074 Move W8, [X0+309]
	075 Move TEMP, X8
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {80}
	079 Call 0x1C5D684
	080 Move X8, [X0+184]
	081 Move X0, X19
	082 Move X1, X31
	083 Move X21, [X8]
	084 Call Object..ctor, X0
	085 Move [X19+16], X20
	086 Move [X19+24], X22
	087 Move [X19+32], X21
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X22, [X31+16]
	091 Move X21, [X31+24]
	092 Move X30, [X31+48]
	093 Return 

Method: System.Void .ctor(System.Reflection.ConstructorInfo ctorInfo, System.Collections.Generic.IList`1<System.Reflection.CustomAttributeTypedArgument> ctorArgs, System.Collections.Generic.IList`1<System.Reflection.CustomAttributeNamedArgument> namedArgs)

Disassembly:
	0x032D844C LDP X24, X23, [X31 + 0xC0]
	0x032D8450 LDP X26, X25, [X31 + 0xB0]
	0x032D8454 LDR X30, [X31 + 0xA0]
	0x032D8458 ADD X31, X31, 0xF0
	0x032D845C RET
	0x032D8460 MOVZ W0, 0x1
	0x032D8464 B 0x32D8444
	0x032D8468 SUB X31, X31, 0xB0
	0x032D846C STR X30, [X31 + 0x70]
	0x032D8470 STP X24, X23, [X31 + 0x80]
	0x032D8474 STP X22, X21, [X31 + 0x90]
	0x032D8478 STP X20, X19, [X31 + 0xA0]
	0x032D847C ADRP X21, 0x1104000
	0x032D8480 ADRP X20, 0xE45000
	0x032D8484 LDRB W8, [X21 + 0x93E]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X1
	007 Move X1, X31
	008 Move X19, X3
	009 Move X20, X2
	010 Move X22, X0
	011 Call Object..ctor, X0
	012 Move [X22+16], X21
	013 Move [X22+24], X20
	014 Move [X22+32], X19
	015 Move X20, [X31+32]
	016 Move X19, [X31+40]
	017 Move X22, [X31+16]
	018 Move X21, [X31+24]
	019 Move X30, [X31+48]
	020 Return 

Method: System.Void ResolveArgumentsInternal(System.Reflection.ConstructorInfo ctor, System.Reflection.Assembly assembly, System.IntPtr data, System.UInt32 data_length, out System.Object[] ctorArgs, out System.Object[] namedArgs)

Disassembly:
	0x032D8488 LDR X20, [X20 + 0x978]

ISIL:
	001 Call 0x1C726E4
	002 Return 

Method: System.Void ResolveArguments()

Disassembly:
	0x032D848C MOV X19, X0
	0x032D8490 TBNZ X8, 0x0, 0x32D84D8
	0x032D8494 ADRP X0, 0xE45000
	0x032D8498 LDR X0, [X0 + 0x978]
	0x032D849C BL 0x1C16CF4
	0x032D84A0 ADRP X0, 0xE4E000
	0x032D84A4 LDR X0, [X0 + 0x3E8]
	0x032D84A8 BL 0x1C16CF4
	0x032D84AC ADRP X0, 0xE4E000
	0x032D84B0 LDR X0, [X0 + 0x108]
	0x032D84B4 BL 0x1C16CF4
	0x032D84B8 ADRP X0, 0xE4E000
	0x032D84BC LDR X0, [X0 + 0x3F0]
	0x032D84C0 BL 0x1C16CF4
	0x032D84C4 ADRP X0, 0xE4E000
	0x032D84C8 LDR X0, [X0 + 0x110]
	0x032D84CC BL 0x1C16CF4
	0x032D84D0 MOVZ W8, 0x1
	0x032D84D4 STRB W8, [X21 + 0x93E]
	0x032D84D8 LDR X0, [X20]
	0x032D84DC MOVI V0.2D, 0x0
	0x032D84E0 STP X31, X31, [X31 + 0x60]
	0x032D84E4 STP V0, V0, [X31 + 0x40]
	0x032D84E8 STR V0, [X31 + 0x3]
	0x032D84EC LDR W8, [X0 + 0xE0]
	0x032D84F0 LDR X20, [X19 + 0x10]
	0x032D84F4 CBNZ W8, 0x32D84FC
	0x032D84F8 BL 0x1C16DFC
	0x032D84FC MOV X0, X20
	0x032D8500 MOV X1, X31
	0x032D8504 MOV X2, X31
	0x032D8508 BL 0x32CC828
	0x032D850C TBZ X0, 0x0, 0x32D8518
	0x032D8510 MOVZ W20, 0xD
	0x032D8514 B 0x32D8530
	0x032D8518 LDR X0, [X19 + 0x10]
	0x032D851C CBZ X0, 0x32D8754
	0x032D8520 LDR X8, [X0]
	0x032D8524 LDP X9, X1, [X8 + 0x158]
	0x032D8528 BLR X9
	0x032D852C UBFM W20, W0, 0x10, 0xF
	0x032D8530 LDR X22, [X19 + 0x18]
	0x032D8534 CBZ X22, 0x32D8644
	0x032D8538 ADRP X23, 0xE4E000
	0x032D853C ADRP X24, 0xE4E000
	0x032D8540 LDR X23, [X23 + 0x108]
	0x032D8544 LDR X24, [X24 + 0x110]
	0x032D8548 MOV W21, W31
	0x032D854C LDR X8, [X22]
	0x032D8550 LDR X1, [X23]
	0x032D8554 LDRH W9, [X8 + 0x12E]
	0x032D8558 CBZ X9, 0x32D857C
	0x032D855C LDR X10, [X8 + 0xB0]
	0x032D8560 ADD X10, X10, 0x8
	0x032D8564 LDUR X11, [X10 - 0x8]
	0x032D8568 CMP X11, X1
	0x032D856C B.EQ 0x32D858C
	0x032D8570 SUBS X9, X9, 0x1
	0x032D8574 ADD X10, X10, 0x10
	0x032D8578 B.NE 0x32D8564
	0x032D857C MOV X0, X22
	0x032D8580 MOV W2, W31
	0x032D8584 BL 0x1C5C788
	0x032D8588 B 0x32D8598
	0x032D858C LDRSW X9, [X10]
	0x032D8590 ADD X8, X8, X9, 0x4, LSL
	0x032D8594 ADD X0, X8, 0x138
	0x032D8598 LDP X8, X1, [X0]
	0x032D859C MOV X0, X22
	0x032D85A0 BLR X8
	0x032D85A4 CMP W21, W0
	0x032D85A8 B.GE 0x32D8644
	0x032D85AC LDR X22, [X19 + 0x18]
	0x032D85B0 CBZ X22, 0x32D8754
	0x032D85B4 LDR X8, [X22]
	0x032D85B8 LDR X1, [X24]
	0x032D85BC LDRH W9, [X8 + 0x12E]
	0x032D85C0 CBZ X9, 0x32D85E4
	0x032D85C4 LDR X10, [X8 + 0xB0]
	0x032D85C8 ADD X10, X10, 0x8
	0x032D85CC LDUR X11, [X10 - 0x8]
	0x032D85D0 CMP X11, X1
	0x032D85D4 B.EQ 0x32D85F4
	0x032D85D8 SUBS X9, X9, 0x1
	0x032D85DC ADD X10, X10, 0x10
	0x032D85E0 B.NE 0x32D85CC
	0x032D85E4 MOV X0, X22
	0x032D85E8 MOV W2, W31
	0x032D85EC BL 0x1C5C788
	0x032D85F0 B 0x32D8600
	0x032D85F4 LDRSW X9, [X10]
	0x032D85F8 ADD X8, X8, X9, 0x4, LSL
	0x032D85FC ADD X0, X8, 0x138
	0x032D8600 LDP X8, X2, [X0]
	0x032D8604 MOV X0, X22
	0x032D8608 MOV W1, W21
	0x032D860C BLR X8
	0x032D8610 STP X0, X1, [X31 + 0x60]
	0x032D8614 ADD X0, X31, 0x60
	0x032D8618 MOV X1, X31
	0x032D861C BL 0x32D4428
	0x032D8620 ADD W8, W0, 0x7
	0x032D8624 UBFM W9, W21, 0x1E, 0x2
	0x032D8628 LDR X22, [X19 + 0x18]
	0x032D862C LSLV W8, W8, W9
	0x032D8630 EOR W8, W8, W20, 0x0
	0x032D8634 ADD W20, W8, W20
	0x032D8638 ADD W21, W21, 0x1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1105000
	007 Move W8, [X20+2358]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0xE4F000
	014 Move X0, [X0+960]
	015 Call 0x1C17CF4
	016 Move X0, 0xE4F000
	017 Move X0, [X0+968]
	018 Call 0x1C17CF4
	019 Move X0, 0xE4F000
	020 Move X0, [X0+952]
	021 Call 0x1C17CF4
	022 Move X0, 0xE4F000
	023 Move X0, [X0+944]
	024 Call 0x1C17CF4
	025 Move X0, 0xE4F000
	026 Move X0, [X0+976]
	027 Call 0x1C17CF4
	028 Move X0, 0xE4F000
	029 Move X0, [X0+984]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+2358], W8
	033 Move [X31], X31
	034 Move [X31+8], X31
	035 Move X8, [X19+40]
	036 Compare X8, 0
	037 JumpIfEqual {130}
	038 Move X0, [X19+16]
	039 Move X1, [X8+16]
	040 Move X2, [X8+24]
	041 Move W3, [X8+32]
	042 Move X21, 0xE4F000
	043 Move X21, [X21+968]
	044 Add X4, X31, 8
	045 Add X5, X31, 0
	046 Call 0x1C726E4
	047 Move X0, [X31+8]
	048 Compare X0, 0
	049 JumpIfEqual {54}
	050 Move X8, 0xE4F000
	051 Move X8, [X8+984]
	052 Move X1, [X8]
	053 Call CustomAttributeData.UnboxValues, X0
	054 Move X8, 0xE4F000
	055 Move X8, [X8+944]
	056 Move X20, [X8]
	057 Move X8, [X20+56]
	058 Compare X8, 0
	059 JumpIfNotEqual {63}
	060 Move X0, X20
	061 Call 0x1C5D6E0
	062 Move X8, [X20+56]
	063 Move X0, [X8+16]
	064 Move W8, [X0+309]
	065 Move TEMP, X8
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {70}
	069 Call 0x1C5D684
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X8, [X20+56]
	075 Move X0, [X8+16]
	076 Move W8, [X0+309]
	077 Move TEMP, X8
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {82}
	081 Call 0x1C5D684
	082 Move X8, [X0+184]
	083 Move X0, [X8]
	084 Move X1, [X21]
	085 Move X21, 0xE4F000
	086 Move X21, [X21+960]
	087 Call Array.AsReadOnly, X0
	088 Move [X19+24], X0
	089 Move X0, [X31]
	090 Compare X0, 0
	091 JumpIfEqual {96}
	092 Move X8, 0xE4F000
	093 Move X8, [X8+976]
	094 Move X1, [X8]
	095 Call 0x21A94DC, X0
	096 Move X8, 0xE4F000
	097 Move X8, [X8+952]
	098 Move X20, [X8]
	099 Move X8, [X20+56]
	100 Compare X8, 0
	101 JumpIfNotEqual {105}
	102 Move X0, X20
	103 Call 0x1C5D6E0
	104 Move X8, [X20+56]
	105 Move X0, [X8+16]
	106 Move W8, [X0+309]
	107 Move TEMP, X8
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfEqual {112}
	111 Call 0x1C5D684
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Move X8, [X20+56]
	117 Move X0, [X8+16]
	118 Move W8, [X0+309]
	119 Move TEMP, X8
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfEqual {124}
	123 Call 0x1C5D684
	124 Move X8, [X0+184]
	125 Move X0, [X8]
	126 Move X1, [X21]
	127 Call 0x22CA7D4, X0
	128 Move [X19+32], X0
	129 Move [X19+40], X31
	130 Move X20, [X31+32]
	131 Move X19, [X31+40]
	132 Move X30, [X31+16]
	133 Move X21, [X31+24]
	134 Add X31, X31, 48
	135 Return 

Method: System.Reflection.ConstructorInfo get_Constructor()

Disassembly:
	0x032D863C CBNZ X22, 0x32D854C
	0x032D8640 B 0x32D8754

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Collections.Generic.IList`1<System.Reflection.CustomAttributeTypedArgument> get_ConstructorArguments()

Disassembly:
	0x032D8644 LDR X22, [X19 + 0x20]
	0x032D8648 CBZ X22, 0x32D8758
	0x032D864C ADRP X23, 0xE4E000
	0x032D8650 ADRP X24, 0xE4E000
	0x032D8654 LDR X23, [X23 + 0x3E8]
	0x032D8658 LDR X24, [X24 + 0x3F0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call CustomAttributeData.ResolveArguments, X0
	005 Move X0, [X19+24]
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return X0

Method: System.Collections.Generic.IList`1<System.Reflection.CustomAttributeNamedArgument> get_NamedArguments()

Disassembly:
	0x032D865C MOV W21, W31
	0x032D8660 LDR X8, [X22]
	0x032D8664 LDR X1, [X23]
	0x032D8668 LDRH W9, [X8 + 0x12E]
	0x032D866C CBZ X9, 0x32D8690
	0x032D8670 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call CustomAttributeData.ResolveArguments, X0
	005 Move X0, [X19+32]
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return X0

Method: System.Collections.Generic.IList`1<System.Reflection.CustomAttributeData> GetCustomAttributes(System.Reflection.Assembly target)

Disassembly:
	0x032D8674 ADD X10, X10, 0x8
	0x032D8678 LDUR X11, [X10 - 0x8]
	0x032D867C CMP X11, X1
	0x032D8680 B.EQ 0x32D86A0
	0x032D8684 SUBS X9, X9, 0x1
	0x032D8688 ADD X10, X10, 0x10
	0x032D868C B.NE 0x32D8678
	0x032D8690 MOV X0, X22
	0x032D8694 MOV W2, W31
	0x032D8698 BL 0x1C5C788
	0x032D869C B 0x32D86AC
	0x032D86A0 LDRSW X9, [X10]
	0x032D86A4 ADD X8, X8, X9, 0x4, LSL
	0x032D86A8 ADD X0, X8, 0x138
	0x032D86AC LDP X8, X1, [X0]
	0x032D86B0 MOV X0, X22
	0x032D86B4 BLR X8
	0x032D86B8 CMP W21, W0
	0x032D86BC B.GE 0x32D8758
	0x032D86C0 LDR X22, [X19 + 0x20]
	0x032D86C4 CBZ X22, 0x32D8754
	0x032D86C8 LDR X8, [X22]
	0x032D86CC LDR X1, [X24]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1105000
	006 Move X21, 0xE4F000
	007 Move W8, [X20+2359]
	008 Move X21, [X21+992]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE4F000
	015 Move X0, [X0+992]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2359], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W1, W31
	028 Move X2, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call MonoCustomAttrs.GetCustomAttributesData, X0, X1
	032 Return X0

Method: System.Collections.Generic.IList`1<System.Reflection.CustomAttributeData> GetCustomAttributes(System.Reflection.MemberInfo target)

Disassembly:
	0x032D86D0 LDRH W9, [X8 + 0x12E]
	0x032D86D4 CBZ X9, 0x32D86F8
	0x032D86D8 LDR X10, [X8 + 0xB0]
	0x032D86DC ADD X10, X10, 0x8
	0x032D86E0 LDUR X11, [X10 - 0x8]
	0x032D86E4 CMP X11, X1
	0x032D86E8 B.EQ 0x32D8708
	0x032D86EC SUBS X9, X9, 0x1
	0x032D86F0 ADD X10, X10, 0x10
	0x032D86F4 B.NE 0x32D86E0
	0x032D86F8 MOV X0, X22
	0x032D86FC MOV W2, W31
	0x032D8700 BL 0x1C5C788
	0x032D8704 B 0x32D8714
	0x032D8708 LDRSW X9, [X10]
	0x032D870C ADD X8, X8, X9, 0x4, LSL
	0x032D8710 ADD X0, X8, 0x138
	0x032D8714 LDP X9, X2, [X0]
	0x032D8718 ADD X8, X31, 0x0
	0x032D871C MOV X0, X22
	0x032D8720 MOV W1, W21
	0x032D8724 BLR X9
	0x032D8728 LDP V0, V1, [X31]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1105000
	006 Move X21, 0xE4F000
	007 Move W8, [X20+2360]
	008 Move X21, [X21+992]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE4F000
	015 Move X0, [X0+992]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2360], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W1, W31
	028 Move X2, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call MonoCustomAttrs.GetCustomAttributesData, X0, X1
	032 Return X0

Method: System.Collections.Generic.IList`1<System.Reflection.CustomAttributeData> GetCustomAttributesInternal(System.RuntimeType target)

Disassembly:
	0x032D872C LDR V2, [X31 + 0x2]
	0x032D8730 ADD X0, X31, 0x30
	0x032D8734 MOV X1, X31
	0x032D8738 STP V0, V1, [X31 + 0x30]
	0x032D873C STR V2, [X31 + 0x5]
	0x032D8740 BL 0x32D348C
	0x032D8744 LDR X22, [X19 + 0x20]
	0x032D8748 ADD W20, W20, W0, 0x5, LSL
	0x032D874C ADD W21, W21, 0x1
	0x032D8750 CBNZ X22, 0x32D8660
	0x032D8754 BL 0x1C16F20
	0x032D8758 MOV W0, W20
	0x032D875C LDP X20, X19, [X31 + 0xA0]
	0x032D8760 LDP X22, X21, [X31 + 0x90]
	0x032D8764 LDP X24, X23, [X31 + 0x80]
	0x032D8768 LDR X30, [X31 + 0x70]
	0x032D876C ADD X31, X31, 0xB0
	0x032D8770 RET
	0x032D8774 MOV X1, X31
	0x032D8778 B 0x33BDD8C
	0x032D877C SUB X31, X31, 0x40
	0x032D8780 STR X30, [X31 + 0x10]
	0x032D8784 STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1105000
	006 Move X21, 0xE4F000
	007 Move W8, [X20+2361]
	008 Move X21, [X21+992]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE4F000
	015 Move X0, [X0+992]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2361], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W1, W31
	028 Move X2, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call MonoCustomAttrs.GetCustomAttributesData, X0, X1
	032 Return X0

Method: System.Collections.Generic.IList`1<System.Reflection.CustomAttributeData> GetCustomAttributes(System.Reflection.Module target)

Disassembly:
	0x032D8788 STP X20, X19, [X31 + 0x30]
	0x032D878C ADRP X20, 0x1104000
	0x032D8790 ADRP X22, 0xE1B000
	0x032D8794 ADRP X21, 0xE4E000
	0x032D8798 LDRB W8, [X20 + 0x93F]
	0x032D879C LDR X22, [X22 + 0x9D0]
	0x032D87A0 LDR X21, [X21 + 0x400]
	0x032D87A4 MOV X19, X0
	0x032D87A8 TBNZ X8, 0x0, 0x32D8808
	0x032D87AC ADRP X0, 0xE4E000
	0x032D87B0 LDR X0, [X0 + 0x400]
	0x032D87B4 BL 0x1C16CF4
	0x032D87B8 ADRP X0, 0xE1B000
	0x032D87BC LDR X0, [X0 + 0x758]
	0x032D87C0 BL 0x1C16CF4
	0x032D87C4 ADRP X0, 0xE1B000
	0x032D87C8 LDR X0, [X0 + 0x9D0]
	0x032D87CC BL 0x1C16CF4
	0x032D87D0 ADRP X0, 0xE1B000
	0x032D87D4 LDR X0, [X0 + 0x6C0]
	0x032D87D8 BL 0x1C16CF4
	0x032D87DC ADRP X0, 0xE4E000
	0x032D87E0 LDR X0, [X0 + 0x408]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1105000
	006 Move X21, 0xE4F000
	007 Move W8, [X20+2362]
	008 Move X21, [X21+992]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE4F000
	015 Move X0, [X0+992]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2362], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W1, W31
	028 Move X2, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call MonoCustomAttrs.GetCustomAttributesData, X0, X1
	032 Return X0

Method: System.Collections.Generic.IList`1<System.Reflection.CustomAttributeData> GetCustomAttributes(System.Reflection.ParameterInfo target)

Disassembly:
	0x032D87E4 BL 0x1C16CF4
	0x032D87E8 ADRP X0, 0xE4E000
	0x032D87EC LDR X0, [X0 + 0x410]
	0x032D87F0 BL 0x1C16CF4
	0x032D87F4 ADRP X0, 0xE4E000
	0x032D87F8 LDR X0, [X0 + 0x418]
	0x032D87FC BL 0x1C16CF4
	0x032D8800 MOVZ W8, 0x1
	0x032D8804 STRB W8, [X20 + 0x93F]
	0x032D8808 LDR X0, [X22]
	0x032D880C MOVZ W1, 0x5
	0x032D8810 BL 0x1C16D6C
	0x032D8814 MOV X20, X0
	0x032D8818 LDR W8, [X19 + 0x1C]
	0x032D881C LDR X0, [X21]
	0x032D8820 ADD X1, X31, 0x1C
	0x032D8824 STR W8, [X31 + 0x1C]
	0x032D8828 BL 0x1C16E04
	0x032D882C CBZ X20, 0x32D8A3C
	0x032D8830 MOV X21, X0
	0x032D8834 CBZ X0, 0x32D884C
	0x032D8838 LDR X8, [X20]
	0x032D883C MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1105000
	006 Move X21, 0xE4F000
	007 Move W8, [X20+2363]
	008 Move X21, [X21+992]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE4F000
	015 Move X0, [X0+992]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2363], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W1, W31
	028 Move X2, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call MonoCustomAttrs.GetCustomAttributesData, X0, X1
	032 Return X0

Method: System.Type get_AttributeType()

Disassembly:
	0x032D8840 LDR X1, [X8 + 0x40]
	0x032D8844 BL 0x1C16E00
	0x032D8848 CBZ X0, 0x32D8A30
	0x032D884C LDR W8, [X20 + 0x18]
	0x032D8850 CBZ W8, 0x32D8A2C
	0x032D8854 ADRP X22, 0xE1B000
	0x032D8858 LDR X22, [X22 + 0x758]
	0x032D885C STR X21, [X20 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+440]
	007 Move X1, [X8+448]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x032D8860 LDR W8, [X19 + 0x20]
	0x032D8864 ADD X1, X31, 0x18
	0x032D8868 LDR X0, [X22]
	0x032D886C STR W8, [X31 + 0x18]
	0x032D8870 BL 0x1C16E04
	0x032D8874 MOV X21, X0
	0x032D8878 CBZ X0, 0x32D8890
	0x032D887C LDR X8, [X20]
	0x032D8880 MOV X0, X21
	0x032D8884 LDR X1, [X8 + 0x40]
	0x032D8888 BL 0x1C16E00
	0x032D888C CBZ X0, 0x32D8A30
	0x032D8890 LDR W8, [X20 + 0x18]
	0x032D8894 CMP W8, 0x1
	0x032D8898 B.LS 0x32D8A2C
	0x032D889C STR X21, [X20 + 0x28]
	0x032D88A0 LDR W8, [X19 + 0x24]
	0x032D88A4 LDR X0, [X22]
	0x032D88A8 ADD X1, X31, 0xC
	0x032D88AC STR W8, [X31 + 0xC]
	0x032D88B0 BL 0x1C16E04
	0x032D88B4 MOV X21, X0
	0x032D88B8 CBZ X0, 0x32D88D0
	0x032D88BC LDR X8, [X20]
	0x032D88C0 MOV X0, X21
	0x032D88C4 LDR X1, [X8 + 0x40]
	0x032D88C8 BL 0x1C16E00
	0x032D88CC CBZ X0, 0x32D8A30
	0x032D88D0 LDR W8, [X20 + 0x18]
	0x032D88D4 CMP W8, 0x2
	0x032D88D8 B.LS 0x32D8A2C
	0x032D88DC STR X21, [X20 + 0x30]
	0x032D88E0 LDR W8, [X19 + 0x28]
	0x032D88E4 LDR X0, [X22]
	0x032D88E8 ADD X1, X31, 0x8
	0x032D88EC STR W8, [X31 + 0x8]
	0x032D88F0 BL 0x1C16E04
	0x032D88F4 MOV X21, X0
	0x032D88F8 CBZ X0, 0x32D8910
	0x032D88FC LDR X8, [X20]
	0x032D8900 MOV X0, X21
	0x032D8904 LDR X1, [X8 + 0x40]
	0x032D8908 BL 0x1C16E00
	0x032D890C CBZ X0, 0x32D8A30
	0x032D8910 LDR W8, [X20 + 0x18]
	0x032D8914 CMP W8, 0x3
	0x032D8918 B.LS 0x32D8A2C
	0x032D891C STR X21, [X20 + 0x38]
	0x032D8920 LDR W8, [X19 + 0x2C]
	0x032D8924 LDR X0, [X22]
	0x032D8928 ADD X1, X31, 0x4
	0x032D892C STR W8, [X31 + 0x4]
	0x032D8930 BL 0x1C16E04
	0x032D8934 MOV X21, X0
	0x032D8938 CBZ X0, 0x32D8950
	0x032D893C LDR X8, [X20]
	0x032D8940 MOV X0, X21
	0x032D8944 LDR X1, [X8 + 0x40]
	0x032D8948 BL 0x1C16E00
	0x032D894C CBZ X0, 0x32D8A30
	0x032D8950 LDR W8, [X20 + 0x18]
	0x032D8954 CMP W8, 0x4
	0x032D8958 B.LS 0x32D8A2C
	0x032D895C ADRP X8, 0xE4E000
	0x032D8960 LDR X8, [X8 + 0x410]
	0x032D8964 STR X21, [X20 + 0x40]
	0x032D8968 ADRP X21, 0xE1B000
	0x032D896C MOV X1, X20
	0x032D8970 LDR X0, [X8]
	0x032D8974 LDR X21, [X21 + 0x6C0]
	0x032D8978 MOV X2, X31
	0x032D897C BL 0x3227C5C
	0x032D8980 LDR X8, [X21]
	0x032D8984 LDR X21, [X19 + 0x10]
	0x032D8988 MOV X20, X0
	0x032D898C LDR W9, [X8 + 0xE0]
	0x032D8990 CBNZ W9, 0x32D899C
	0x032D8994 MOV X0, X8
	0x032D8998 BL 0x1C16DFC
	0x032D899C MOV X0, X21
	0x032D89A0 MOV X1, X31
	0x032D89A4 MOV X2, X31
	0x032D89A8 BL 0x3395F0C
	0x032D89AC TBZ X0, 0x0, 0x32D89D0
	0x032D89B0 ADRP X8, 0xE4E000
	0x032D89B4 LDR X2, [X19 + 0x10]
	0x032D89B8 LDR X8, [X8 + 0x408]
	0x032D89BC MOV X1, X20
	0x032D89C0 MOV X3, X31
	0x032D89C4 LDR X0, [X8]
	0x032D89C8 BL 0x3227BD4
	0x032D89CC MOV X20, X0
	0x032D89D0 LDR W8, [X19 + 0x1C]
	0x032D89D4 CMP W8, 0x1
	0x032D89D8 B.NE 0x32D8A14
	0x032D89DC LDR W8, [X19 + 0x18]
	0x032D89E0 LDR X0, [X22]
	0x032D89E4 ADD X1, X31, 0x1C
	0x032D89E8 STR W8, [X31 + 0x1C]
	0x032D89EC BL 0x1C16E04
	0x032D89F0 ADRP X8, 0xE4E000
	0x032D89F4 LDR X8, [X8 + 0x418]
	0x032D89F8 MOV X2, X0
	0x032D89FC MOV X1, X20
	0x032D8A00 MOV X3, X31
	0x032D8A04 LDR X8, [X8]
	0x032D8A08 MOV X0, X8
	0x032D8A0C BL 0x3227BD4
	0x032D8A10 MOV X20, X0
	0x032D8A14 MOV X0, X20
	0x032D8A18 LDP X20, X19, [X31 + 0x30]
	0x032D8A1C LDP X22, X21, [X31 + 0x20]
	0x032D8A20 LDR X30, [X31 + 0x10]
	0x032D8A24 ADD X31, X31, 0x40
	0x032D8A28 RET
	0x032D8A2C BL 0x1C16F28
	0x032D8A30 BL 0x1C16F44
	0x032D8A34 MOV X1, X31
	0x032D8A38 BL 0x1C16DEC
	0x032D8A3C BL 0x1C16F20
	0x032D8A40 MOV X1, X31
	0x032D8A44 B 0x33BDD8C
	0x032D8A48 STR X30, [X31 - 0x20]!
	0x032D8A4C STP X20, X19, [X31 + 0x10]
	0x032D8A50 ADRP X19, 0x1104000
	0x032D8A54 LDRB W8, [X19 + 0x940]
	0x032D8A58 MOV X20, X0
	0x032D8A5C TBNZ X8, 0x0, 0x32D8A8C
	0x032D8A60 ADRP X0, 0xE20000
	0x032D8A64 LDR X0, [X0 + 0x658]
	0x032D8A68 BL 0x1C16CF4
	0x032D8A6C ADRP X0, 0xE21000
	0x032D8A70 LDR X0, [X0 + 0xC98]
	0x032D8A74 BL 0x1C16CF4
	0x032D8A78 ADRP X0, 0xE4E000
	0x032D8A7C LDR X0, [X0 + 0x420]
	0x032D8A80 BL 0x1C16CF4
	0x032D8A84 MOVZ W8, 0x1
	0x032D8A88 STRB W8, [X19 + 0x940]
	0x032D8A8C ADRP X9, 0xE20000
	0x032D8A90 LDRB W10, [X20 + 0x18]
	0x032D8A94 LDR X19, [X20 + 0x10]
	0x032D8A98 LDRH W8, [X20 + 0x1A]
	0x032D8A9C LDR X9, [X9 + 0x658]
	0x032D8AA0 CBZ W10, 0x32D8AC4
	0x032D8AA4 LDR X0, [X9]
	0x032D8AA8 ADRP X20, 0xE4E000
	0x032D8AAC LDR X20, [X20 + 0x420]
	0x032D8AB0 ADD X1, X31, 0xC
	0x032D8AB4 STRH W8, [X31 + 0xC]
	0x032D8AB8 BL 0x1C16E04
	0x032D8ABC LDR X8, [X20]
	0x032D8AC0 B 0x32D8AE0
	0x032D8AC4 LDR X0, [X9]
	0x032D8AC8 ADD X1, X31, 0x8
	0x032D8ACC STRH W8, [X31 + 0x8]
	0x032D8AD0 BL 0x1C16E04
	0x032D8AD4 ADRP X8, 0xE21000
	0x032D8AD8 LDR X8, [X8 + 0xC98]
	0x032D8ADC LDR X8, [X8]
	0x032D8AE0 MOV X2, X0
	0x032D8AE4 MOV X0, X8
	0x032D8AE8 MOV X1, X19
	0x032D8AEC MOV X3, X31
	0x032D8AF0 BL 0x3227BD4
	0x032D8AF4 LDP X20, X19, [X31 + 0x10]
	0x032D8AF8 LDR X30, [X31], #0x20
	0x032D8AFC RET
	0x032D8B00 STP X30, X21, [X31 - 0x20]!
	0x032D8B04 STP X20, X19, [X31 + 0x10]
	0x032D8B08 ADRP X21, 0x1104000
	0x032D8B0C ADRP X20, 0xE4E000
	0x032D8B10 LDRB W8, [X21 + 0x941]
	0x032D8B14 LDR X20, [X20 + 0x428]
	0x032D8B18 MOV X19, X0
	0x032D8B1C TBNZ X8, 0x0, 0x32D8B34
	0x032D8B20 ADRP X0, 0xE4E000
	0x032D8B24 LDR X0, [X0 + 0x428]
	0x032D8B28 BL 0x1C16CF4
	0x032D8B2C MOVZ W8, 0x1
	0x032D8B30 STRB W8, [X21 + 0x941]
	0x032D8B34 MOV X0, X19
	0x032D8B38 MOV X1, X31
	0x032D8B3C BL 0x33BDD8C
	0x032D8B40 LDR X0, [X20]
	0x032D8B44 BL 0x1C16F10
	0x032D8B48 MOV X1, X31
	0x032D8B4C MOV X20, X0
	0x032D8B50 BL 0x33BDD8C
	0x032D8B54 STR X20, [X19 + 0x20]
	0x032D8B58 LDP X20, X19, [X31 + 0x10]
	0x032D8B5C LDP X30, X21, [X31], #0x20
	0x032D8B60 RET
	0x032D8B64 STR X30, [X31 - 0x20]!
	0x032D8B68 STP X20, X19, [X31 + 0x10]
	0x032D8B6C CBZ X1, 0x32D8BA4
	0x032D8B70 LDR X8, [X0]
	0x032D8B74 MOV X20, X1
	0x032D8B78 MOV X19, X0
	0x032D8B7C LDP X9, X1, [X8 + 0x1B8]
	0x032D8B80 BLR X9
	0x032D8B84 MOV X2, X0
	0x032D8B88 MOV X0, X20
	0x032D8B8C MOV X3, X19
	0x032D8B90 LDP X20, X19, [X31 + 0x10]
	0x032D8B94 MOVZ W1, 0x6
	0x032D8B98 MOV X4, X31
	0x032D8B9C LDR X30, [X31], #0x20
	0x032D8BA0 B 0x33BF534
	0x032D8BA4 ADRP X0, 0xE20000
	0x032D8BA8 LDR X0, [X0 + 0x528]
	0x032D8BAC BL 0x1C16D08
	0x032D8BB0 BL 0x1C16F10
	0x032D8BB4 MOV X19, X0
	0x032D8BB8 ADRP X0, 0xE45000
	0x032D8BBC LDR X0, [X0 + 0x2D8]
	0x032D8BC0 BL 0x1C16D08
	0x032D8BC4 MOV X1, X0
	0x032D8BC8 MOV X0, X19
	0x032D8BCC MOV X2, X31
	0x032D8BD0 BL 0x330E100
	0x032D8BD4 ADRP X0, 0xE4E000
	0x032D8BD8 LDR X0, [X0 + 0x430]
	0x032D8BDC BL 0x1C16D08
	0x032D8BE0 MOV X1, X0
	0x032D8BE4 MOV X0, X19
	0x032D8BE8 BL 0x1C16DEC
	0x032D8BEC STP X30, X21, [X31 - 0x20]!
	0x032D8BF0 STP X20, X19, [X31 + 0x10]
	0x032D8BF4 ADRP X21, 0x1104000
	0x032D8BF8 LDRB W8, [X21 + 0x942]
	0x032D8BFC MOV X19, X1
	0x032D8C00 MOV X20, X0
	0x032D8C04 TBNZ X8, 0x0, 0x32D8C1C
	0x032D8C08 ADRP X0, 0xE49000
	0x032D8C0C LDR X0, [X0 + 0xAD0]
	0x032D8C10 BL 0x1C16CF4
	0x032D8C14 MOVZ W8, 0x1
	0x032D8C18 STRB W8, [X21 + 0x942]
	0x032D8C1C MOVZ W2, 0x1
	0x032D8C20 MOV X0, X20
	0x032D8C24 MOV X1, X19
	0x032D8C28 BL 0x32D5A24
	0x032D8C2C CBZ X0, 0x32D8C64
	0x032D8C30 ADRP X9, 0xE49000
	0x032D8C34 LDR X9, [X9 + 0xAD0]
	0x032D8C38 LDR X8, [X0]
	0x032D8C3C LDR X1, [X9]
	0x032D8C40 LDRB W10, [X8 + 0x130]
	0x032D8C44 LDRB W9, [X1 + 0x130]
	0x032D8C48 CMP W10, W9
	0x032D8C4C B.CC 0x32D8C70
	0x032D8C50 LDR X8, [X8 + 0xC8]
	0x032D8C54 ADD X8, X8, X9, 0x3, LSL
	0x032D8C58 LDUR X8, [X8 - 0x8]
	0x032D8C5C CMP X8, X1
	0x032D8C60 B.NE 0x32D8C70
	0x032D8C64 LDP X20, X19, [X31 + 0x10]
	0x032D8C68 LDP X30, X21, [X31], #0x20
	0x032D8C6C RET
	0x032D8C70 BL 0x1C171E0
	0x032D8C74 STP X30, X19, [X31 - 0x10]!
	0x032D8C78 CBZ X0, 0x32D8C98
	0x032D8C7C LDR X8, [X0]
	0x032D8C80 MOV X19, X1
	0x032D8C84 LDP X9, X1, [X8 + 0x168]
	0x032D8C88 BLR X9
	0x032D8C8C MOV X1, X19
	0x032D8C90 LDP X30, X19, [X31], #0x10
	0x032D8C94 B 0x32D8BEC
	0x032D8C98 BL 0x1C16F20
	0x032D8C9C MOVZ W1, 0x1
	0x032D8CA0 B 0x32D71C8
	0x032D8CA4 STR X30, [X31 - 0x20]!
	0x032D8CA8 STP X20, X19, [X31 + 0x10]
	0x032D8CAC CBZ X1, 0x32D8CDC
	0x032D8CB0 LDR W9, [X1 + 0x10]
	0x032D8CB4 MOV X8, X1
	0x032D8CB8 CBZ W9, 0x32D8D00
	0x032D8CBC LDP X20, X19, [X31 + 0x10]
	0x032D8CC0 AND W9, W2, 0x1
	0x032D8CC4 AND W4, W3, 0x1
	0x032D8CC8 MOV X1, X31
	0x032D8CCC MOV X2, X8
	0x032D8CD0 MOV W3, W9
	0x032D8CD4 LDR X30, [X31], #0x20
	0x032D8CD8 B 0x1C7151C
	0x032D8CDC ADRP X0, 0xE20000
	0x032D8CE0 LDR X0, [X0 + 0x528]
	0x032D8CE4 BL 0x1C16D08
	0x032D8CE8 BL 0x1C16F10
	0x032D8CEC MOV X1, X31
	0x032D8CF0 MOV X2, X31
	0x032D8CF4 MOV X19, X0
	0x032D8CF8 BL 0x330E100
	0x032D8CFC B 0x32D8D44
	0x032D8D00 ADRP X0, 0xE23000
	0x032D8D04 LDR X0, [X0 + 0x578]
	0x032D8D08 BL 0x1C16D08
	0x032D8D0C BL 0x1C16F10
	0x032D8D10 MOV X19, X0
	0x032D8D14 ADRP X0, 0xE23000
	0x032D8D18 LDR X0, [X0 + 0x588]
	0x032D8D1C BL 0x1C16D08
	0x032D8D20 MOV X20, X0
	0x032D8D24 ADRP X0, 0xE4E000
	0x032D8D28 LDR X0, [X0 + 0x438]
	0x032D8D2C BL 0x1C16D08
	0x032D8D30 MOV X2, X0
	0x032D8D34 MOV X0, X19
	0x032D8D38 MOV X1, X20
	0x032D8D3C MOV X3, X31
	0x032D8D40 BL 0x330E16C
	0x032D8D44 ADRP X0, 0xE4E000
	0x032D8D48 LDR X0, [X0 + 0x440]
	0x032D8D4C BL 0x1C16D08
	0x032D8D50 MOV X1, X0
	0x032D8D54 MOV X0, X19
	0x032D8D58 BL 0x1C16DEC
	0x032D8D5C STR X30, [X31 - 0x30]!
	0x032D8D60 STP X22, X21, [X31 + 0x10]
	0x032D8D64 STP X20, X19, [X31 + 0x20]
	0x032D8D68 CBZ X1, 0x32D8E08
	0x032D8D6C LDR W8, [X1 + 0x10]
	0x032D8D70 MOV X19, X1
	0x032D8D74 CBZ W8, 0x32D8E3C
	0x032D8D78 LDR X8, [X0]
	0x032D8D7C MOVZ W1, 0x1
	0x032D8D80 LDR X9, [X8 + 0x298]
	0x032D8D84 LDR X2, [X8 + 0x2A0]
	0x032D8D88 BLR X9
	0x032D8D8C CBZ X0, 0x32D8E00
	0x032D8D90 LDR W8, [X0 + 0x18]
	0x032D8D94 MOV X20, X0
	0x032D8D98 CMP W8, 0x1
	0x032D8D9C B.LT 0x32D8DE8
	0x032D8DA0 MOV W22, W31
	0x032D8DA4 CMP W22, W8
	0x032D8DA8 B.CS 0x32D8E04
	0x032D8DAC ADD X8, X20, W22, 0x3, SXTW
	0x032D8DB0 LDR X21, [X8 + 0x20]
	0x032D8DB4 CBZ X21, 0x32D8E00
	0x032D8DB8 LDR X8, [X21]
	0x032D8DBC MOV X0, X21
	0x032D8DC0 LDP X9, X1, [X8 + 0x1C8]
	0x032D8DC4 BLR X9
	0x032D8DC8 MOV X1, X19
	0x032D8DCC MOV X2, X31
	0x032D8DD0 BL 0x321BA08
	0x032D8DD4 TBNZ X0, 0x0, 0x32D8DEC
	0x032D8DD8 LDR W8, [X20 + 0x18]
	0x032D8DDC ADD W22, W22, 0x1
	0x032D8DE0 CMP W22, W8

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X21, 0x1105000
	015 Move X19, 0xE1C000
	016 Move W8, [X21+2364]
	017 Move X19, [X19+2288]
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {55}
	023 Move X0, 0xE1C000
	024 Move X0, [X0+2504]
	025 Call 0x1C17CF4
	026 Move X0, 0xE4F000
	027 Move X0, [X0+1000]
	028 Call 0x1C17CF4
	029 Move X0, 0xE4F000
	030 Move X0, [X0+264]
	031 Call 0x1C17CF4
	032 Move X0, 0xE4F000
	033 Move X0, [X0+1008]
	034 Call 0x1C17CF4
	035 Move X0, 0xE4F000
	036 Move X0, [X0+272]
	037 Call 0x1C17CF4
	038 Move X0, 0xE1C000
	039 Move X0, [X0+2288]
	040 Call 0x1C17CF4
	041 Move X0, 0xE1C000
	042 Move X0, [X0+2104]
	043 Call 0x1C17CF4
	044 Move X0, 0xE27000
	045 Move X0, [X0+784]
	046 Call 0x1C17CF4
	047 Move X0, 0xE1C000
	048 Move X0, [X0+3784]
	049 Call 0x1C17CF4
	050 Move X0, 0xE4F000
	051 Move X0, [X0+1016]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X21+2364], W8
	055 NotImplemented "Instruction MOVI not yet implemented."
	056 Move X0, X20
	057 Move [X31+96], X31
	058 Move [X31+104], X31
	059 Move [X31+64], V0
	060 Move [X31+72], V0
	061 Move [X31+3], V0
	062 Call CustomAttributeData.ResolveArguments, X0
	063 Move X0, [X19]
	064 Call 0x1C17F10
	065 Move X1, X31
	066 Move X19, X0
	067 Call StringBuilder..ctor, X0
	068 Move X0, [X20+16]
	069 Compare X0, 0
	070 JumpIfEqual {331}
	071 Move X8, [X0]
	072 Move X9, [X8+440]
	073 Move X1, [X8+448]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Compare X0, 0
	076 JumpIfEqual {331}
	077 Move X8, [X0]
	078 Move X21, 0xE1C000
	079 Move X22, 0xE27000
	080 Move X9, [X8+744]
	081 Move X1, [X8+752]
	082 Move X21, [X21+3784]
	083 Move X22, [X22+784]
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move X8, [X21]
	086 Move X2, [X22]
	087 Move X1, X0
	088 Move X3, X31
	089 Move X0, X8
	090 Call String.Concat, X0, X1, X2
	091 Compare X19, 0
	092 JumpIfEqual {331}
	093 Move X1, X0
	094 Move X0, X19
	095 Move X2, X31
	096 Call StringBuilder.Append, X0, X1
	097 Move X22, [X20+24]
	098 Compare X22, 0
	099 JumpIfEqual {331}
	100 Move X28, 0xE4F000
	101 Move X29, 0xE4F000
	102 Move X24, 0xE1C000
	103 Move X25, 0xE4F000
	104 Move X27, 0xE4F000
	105 Move X26, 0xE1C000
	106 Move X23, 0xE4F000
	107 Move X28, [X28+264]
	108 Move X29, [X29+272]
	109 Move X24, [X24+2104]
	110 Move X25, [X25+1000]
	111 Move X27, [X27+1008]
	112 Move X26, [X26+2504]
	113 Move X23, [X23+1016]
	114 Move W21, W31
	115 Move X8, [X22]
	116 Move X1, [X28]
	117 NotImplemented "Instruction LDRH not yet implemented."
	118 Compare X9, 0
	119 JumpIfEqual {126}
	120 Move X10, [X8+176]
	121 Add X10, X10, 8
	122 NotImplemented "Instruction LDUR not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Subtract X9, X9, 1
	125 Add X10, X10, 16
	126 Move X0, X22
	127 Move W2, W31
	128 Call 0x1C5D788
	129 NotImplemented "Instruction LDRSW not yet implemented."
	130 Add X8, X8, X9
	131 Add X0, X8, 312
	132 Move X8, [X0]
	133 Move X1, [X0+8]
	134 Move X0, X22
	135 NotImplemented "Instruction BLR not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X22, [X20+24]
	138 Compare X22, 0
	139 JumpIfEqual {331}
	140 Move X8, [X22]
	141 Move X1, [X29]
	142 NotImplemented "Instruction LDRH not yet implemented."
	143 Compare X9, 0
	144 JumpIfEqual {151}
	145 Move X10, [X8+176]
	146 Add X10, X10, 8
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Subtract X9, X9, 1
	150 Add X10, X10, 16
	151 Move X0, X22
	152 Move W2, W31
	153 Call 0x1C5D788
	154 NotImplemented "Instruction LDRSW not yet implemented."
	155 Add X8, X8, X9
	156 Add X0, X8, 312
	157 Move X8, [X0]
	158 Move X2, [X0+8]
	159 Move X0, X22
	160 Move W1, W21
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move [X31+96], X0
	163 Move [X31+104], X1
	164 Add X0, X31, 96
	165 Move X1, X31
	166 Call CustomAttributeTypedArgument.ToString, X0
	167 Move X1, X0
	168 Move X0, X19
	169 Move X2, X31
	170 Call StringBuilder.Append, X0, X1
	171 Move X22, [X20+24]
	172 Compare X22, 0
	173 JumpIfEqual {331}
	174 Move X8, [X22]
	175 Move X1, [X28]
	176 NotImplemented "Instruction LDRH not yet implemented."
	177 Compare X9, 0
	178 JumpIfEqual {185}
	179 Move X10, [X8+176]
	180 Add X10, X10, 8
	181 NotImplemented "Instruction LDUR not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Subtract X9, X9, 1
	184 Add X10, X10, 16
	185 Move X0, X22
	186 Move W2, W31
	187 Call 0x1C5D788
	188 NotImplemented "Instruction LDRSW not yet implemented."
	189 Add X8, X8, X9
	190 Add X0, X8, 312
	191 Move X8, [X0]
	192 Move X1, [X0+8]
	193 Move X0, X22
	194 NotImplemented "Instruction BLR not yet implemented."
	195 Add W21, W21, 1
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Move X1, [X24]
	198 Move X0, X19
	199 Move X2, X31
	200 Call StringBuilder.Append, X0, X1
	201 Move X22, [X20+24]
	202 Compare X22, 0
	203 JumpIfNotEqual {115}
	204 Move X21, [X20+32]
	205 Compare X21, 0
	206 JumpIfEqual {331}
	207 Move X8, [X21]
	208 Move X1, [X25]
	209 NotImplemented "Instruction LDRH not yet implemented."
	210 Compare X9, 0
	211 JumpIfEqual {218}
	212 Move X10, [X8+176]
	213 Add X10, X10, 8
	214 NotImplemented "Instruction LDUR not yet implemented."
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Subtract X9, X9, 1
	217 Add X10, X10, 16
	218 Move X0, X21
	219 Move W2, W31
	220 Call 0x1C5D788
	221 NotImplemented "Instruction LDRSW not yet implemented."
	222 Add X8, X8, X9
	223 Add X0, X8, 312
	224 Move X8, [X0]
	225 Move X1, [X0+8]
	226 Move X0, X21
	227 NotImplemented "Instruction BLR not yet implemented."
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move X1, [X24]
	230 Move X0, X19
	231 Move X2, X31
	232 Call StringBuilder.Append, X0, X1
	233 Move X22, [X20+32]
	234 Compare X22, 0
	235 JumpIfEqual {331}
	236 Move W21, W31
	237 Move X8, [X22]
	238 Move X1, [X25]
	239 NotImplemented "Instruction LDRH not yet implemented."
	240 Compare X9, 0
	241 JumpIfEqual {248}
	242 Move X10, [X8+176]
	243 Add X10, X10, 8
	244 NotImplemented "Instruction LDUR not yet implemented."
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Subtract X9, X9, 1
	247 Add X10, X10, 16
	248 Move X0, X22
	249 Move W2, W31
	250 Call 0x1C5D788
	251 NotImplemented "Instruction LDRSW not yet implemented."
	252 Add X8, X8, X9
	253 Add X0, X8, 312
	254 Move X8, [X0]
	255 Move X1, [X0+8]
	256 Move X0, X22
	257 NotImplemented "Instruction BLR not yet implemented."
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Move X22, [X20+32]
	260 Compare X22, 0
	261 JumpIfEqual {331}
	262 Move X8, [X22]
	263 Move X1, [X27]
	264 NotImplemented "Instruction LDRH not yet implemented."
	265 Compare X9, 0
	266 JumpIfEqual {273}
	267 Move X10, [X8+176]
	268 Add X10, X10, 8
	269 NotImplemented "Instruction LDUR not yet implemented."
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Subtract X9, X9, 1
	272 Add X10, X10, 16
	273 Move X0, X22
	274 Move W2, W31
	275 Call 0x1C5D788
	276 NotImplemented "Instruction LDRSW not yet implemented."
	277 Add X8, X8, X9
	278 Add X0, X8, 312
	279 Move X9, [X0]
	280 Move X2, [X0+8]
	281 Add X8, X31, 0
	282 Move X0, X22
	283 Move W1, W21
	284 NotImplemented "Instruction BLR not yet implemented."
	285 Move V0, [X31]
	286 Move V1, [X31+16]
	287 Move V2, [X31+2]
	288 Add X0, X31, 48
	289 Move X1, X31
	290 Move [X31+48], V0
	291 Move [X31+56], V1
	292 Move [X31+5], V2
	293 Call CustomAttributeNamedArgument.ToString, X0
	294 Move X1, X0
	295 Move X0, X19
	296 Move X2, X31
	297 Call StringBuilder.Append, X0, X1
	298 Move X22, [X20+32]
	299 Compare X22, 0
	300 JumpIfEqual {331}
	301 Move X8, [X22]
	302 Move X1, [X25]
	303 NotImplemented "Instruction LDRH not yet implemented."
	304 Compare X9, 0
	305 JumpIfEqual {312}
	306 Move X10, [X8+176]
	307 Add X10, X10, 8
	308 NotImplemented "Instruction LDUR not yet implemented."
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Subtract X9, X9, 1
	311 Add X10, X10, 16
	312 Move X0, X22
	313 Move W2, W31
	314 Call 0x1C5D788
	315 NotImplemented "Instruction LDRSW not yet implemented."
	316 Add X8, X8, X9
	317 Add X0, X8, 312
	318 Move X8, [X0]
	319 Move X1, [X0+8]
	320 Move X0, X22
	321 NotImplemented "Instruction BLR not yet implemented."
	322 Add W21, W21, 1
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Move X1, [X24]
	325 Move X0, X19
	326 Move X2, X31
	327 Call StringBuilder.Append, X0, X1
	328 Move X22, [X20+32]
	329 Compare X22, 0
	330 JumpIfNotEqual {237}
	331 Call 0x1C17F20
	332 Move X20, [X26]
	333 Move X8, [X20+56]
	334 Compare X8, 0
	335 JumpIfNotEqual {339}
	336 Move X0, X20
	337 Call 0x1C5D6E0
	338 Move X8, [X20+56]
	339 Move X0, [X8+16]
	340 Move W8, [X0+309]
	341 Move TEMP, X8
	342 And TEMP, TEMP, 1
	343 Compare TEMP, 1
	344 JumpIfEqual {346}
	345 Call 0x1C5D684
	346 Move W8, [X0+224]
	347 Compare W8, 0
	348 JumpIfNotEqual {350}
	349 Call 0x1C17DFC
	350 Move X8, [X20+56]
	351 Move X0, [X8+16]
	352 Move W8, [X0+309]
	353 Move TEMP, X8
	354 And TEMP, TEMP, 1
	355 Compare TEMP, 1
	356 JumpIfEqual {358}
	357 Call 0x1C5D684
	358 Move X8, [X0+184]
	359 Move X1, [X23]
	360 Move X0, X19
	361 Move X3, X31
	362 Move X2, [X8]
	363 Call StringBuilder.AppendFormat, X0, X1, X2
	364 Move X8, [X19]
	365 Move X0, X19
	366 Move X9, [X8+360]
	367 Move X1, [X8+368]
	368 NotImplemented "Instruction BLR not yet implemented."
	369 Move X20, [X31+192]
	370 Move X19, [X31+200]
	371 Move X22, [X31+176]
	372 Move X21, [X31+184]
	373 Move X24, [X31+160]
	374 Move X23, [X31+168]
	375 Move X26, [X31+144]
	376 Move X25, [X31+152]
	377 Move X28, [X31+128]
	378 Move X27, [X31+136]
	379 Move X29, [X31+112]
	380 Move X30, [X31+120]
	381 Add X31, X31, 208
	382 Return X0

Method: T[] UnboxValues(System.Object[] values)

Disassembly:
	0x021A94DC MOV X1, X20
	0x021A94E0 MOV X2, X19
	0x021A94E4 BLR X8
	0x021A94E8 LDR X8, [X26]
	0x021A94EC MOV X25, X0
	0x021A94F0 LDR X1, [X8 + 0x3A0]
	0x021A94F4 LDR X9, [X8 + 0x398]
	0x021A94F8 MOV X0, X26
	0x021A94FC BLR X9
	0x021A9500 MOV X1, X0
	0x021A9504 CBZ X25, 0x21A9618
	0x021A9508 MOV X0, X25
	0x021A950C MOV X2, X31
	0x021A9510 BL 0x3D9C6C8
	0x021A9514 LDR X8, [X26]
	0x021A9518 LDR X1, [X8 + 0x3A0]
	0x021A951C LDR X9, [X8 + 0x398]
	0x021A9520 MOV X0, X26
	0x021A9524 BLR X9
	0x021A9528 CBZ X0, 0x21A9620
	0x021A952C LDR X8, [X0]
	0x021A9530 LDP X9, X2, [X8 + 0x198]
	0x021A9534 MOV X1, X25
	0x021A9538 BLR X9
	0x021A953C LDR X8, [X26]
	0x021A9540 LDR X1, [X8 + 0x280]
	0x021A9544 LDR X9, [X8 + 0x278]
	0x021A9548 MOV X0, X26
	0x021A954C BLR X9
	0x021A9550 CBZ X0, 0x21A9628
	0x021A9554 MOV X1, X31
	0x021A9558 BL 0x3DAFB5C
	0x021A955C CBZ X0, 0x21A957C
	0x021A9560 MOV X0, X22
	0x021A9564 MOV X1, X26
	0x021A9568 MOV X2, X31
	0x021A956C BL 0x3D8D728
	0x021A9570 MOV X26, X31
	0x021A9574 MOVZ W28, 0x4
	0x021A9578 B 0x21A959C
	0x021A957C MOV X0, X25
	0x021A9580 MOV X1, X31
	0x021A9584 BL 0x3D9C10C
	0x021A9588 ANDS W31, W0, 0x1
	0x021A958C MOVZ W8, 0xA
	0x021A9590 MOVZ W9, 0x4
	0x021A9594 MOV X26, X31
	0x021A9598 CSEL W28, W9, W8, NE
	0x021A959C LDR X8, [X25]
	0x021A95A0 ADRP X10, 0x1F4A000
	0x021A95A4 LDRH W9, [X8 + 0x12E]
	0x021A95A8 LDR X10, [X10 + 0xE00]
	0x021A95AC LDR X1, [X10]
	0x021A95B0 CBZ X9, 0x21A95D4
	0x021A95B4 LDR X10, [X8 + 0xB0]
	0x021A95B8 ADD X10, X10, 0x8
	0x021A95BC LDUR X11, [X10 - 0x8]
	0x021A95C0 CMP X11, X1
	0x021A95C4 B.EQ 0x21A95E4
	0x021A95C8 SUBS X9, X9, 0x1
	0x021A95CC ADD X10, X10, 0x10
	0x021A95D0 B.NE 0x21A95BC
	0x021A95D4 MOV X0, X25
	0x021A95D8 MOV W2, W31
	0x021A95DC BL 0x1C5C788
	0x021A95E0 B 0x21A95F0
	0x021A95E4 LDRSW X9, [X10]
	0x021A95E8 ADD X8, X8, X9, 0x4, LSL
	0x021A95EC ADD X0, X8, 0x138
	0x021A95F0 LDP X8, X1, [X0]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X8, [X1+56]
	011 Move X19, X1
	012 Move X20, X0
	013 Compare X8, 0
	014 JumpIfNotEqual {17}
	015 Move X0, X19
	016 Call 0x1C5D6E0
	017 Compare X20, 0
	018 JumpIfEqual {85}
	019 Move X8, [X19+56]
	020 Move X0, [X8]
	021 Move W8, [X0+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {27}
	026 Call 0x1C5D684
	027 Move W1, [X20+24]
	028 Call 0x1C17D6C
	029 Move W8, [X20+24]
	030 Move X21, X0
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X23, X31
	033 Add X24, X21, 32
	034 Add X25, X20, 32
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Compare X21, 0
	037 JumpIfEqual {85}
	038 Move X8, [X19+56]
	039 Move X22, [X25]
	040 Move X1, [X8+8]
	041 Move W8, [X1+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {49}
	046 Move X0, X1
	047 Call 0x1C5D684
	048 Move X1, X0
	049 Compare X22, 0
	050 JumpIfEqual {85}
	051 Move X8, [X22]
	052 Move X9, [X1+64]
	053 Move X0, X22
	054 Move X8, [X8+64]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Call 0x1C17E08
	057 Move V1, [X0+16]
	058 Move V0, [X0+32]
	059 Move V2, [X0]
	060 Move [X31+16], V1
	061 Move [X31+24], V0
	062 Move [X31], V2
	063 Move W8, [X21+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move V1, [X31+16]
	066 Move V0, [X31+32]
	067 Move V2, [X31]
	068 Add X23, X23, 1
	069 Move [X24+16], V1
	070 Move [X24+24], V0
	071 Move [X24+48], V2
	072 Move W8, [X20+24]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X0, X21
	075 Move X20, [X31+96]
	076 Move X19, [X31+104]
	077 Move X22, [X31+80]
	078 Move X21, [X31+88]
	079 Move X24, [X31+64]
	080 Move X23, [X31+72]
	081 Move X30, [X31+48]
	082 Move X25, [X31+56]
	083 Add X31, X31, 112
	084 Return X0
	085 Call 0x1C17F20
	086 Call 0x1C17F28
	087 Call 0x1C181E0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x032D8DE4 B.LT 0x32D8DA4
	0x032D8DE8 MOV X21, X31
	0x032D8DEC MOV X0, X21
	0x032D8DF0 LDP X20, X19, [X31 + 0x20]
	0x032D8DF4 LDP X22, X21, [X31 + 0x10]
	0x032D8DF8 LDR X30, [X31], #0x30
	0x032D8DFC RET
	0x032D8E00 BL 0x1C16F20
	0x032D8E04 BL 0x1C16F28
	0x032D8E08 ADRP X0, 0xE20000
	0x032D8E0C LDR X0, [X0 + 0x528]
	0x032D8E10 BL 0x1C16D08
	0x032D8E14 BL 0x1C16F10
	0x032D8E18 MOV X19, X0
	0x032D8E1C ADRP X0, 0xE23000
	0x032D8E20 LDR X0, [X0 + 0x588]
	0x032D8E24 BL 0x1C16D08
	0x032D8E28 MOV X1, X0
	0x032D8E2C MOV X0, X19
	0x032D8E30 MOV X2, X31
	0x032D8E34 BL 0x330E100
	0x032D8E38 B 0x32D8E6C
	0x032D8E3C ADRP X0, 0xE23000
	0x032D8E40 LDR X0, [X0 + 0x578]
	0x032D8E44 BL 0x1C16D08
	0x032D8E48 BL 0x1C16F10
	0x032D8E4C MOV X19, X0
	0x032D8E50 ADRP X0, 0xE4E000
	0x032D8E54 LDR X0, [X0 + 0x448]
	0x032D8E58 BL 0x1C16D08
	0x032D8E5C MOV X1, X0
	0x032D8E60 MOV X0, X19
	0x032D8E64 MOV X2, X31
	0x032D8E68 BL 0x3314A68
	0x032D8E6C ADRP X0, 0xE4E000
	0x032D8E70 LDR X0, [X0 + 0x450]
	0x032D8E74 BL 0x1C16D08
	0x032D8E78 MOV X1, X0
	0x032D8E7C MOV X0, X19
	0x032D8E80 BL 0x1C16DEC
	0x032D8E84 STR X30, [X31 - 0x40]!
	0x032D8E88 STP X24, X23, [X31 + 0x10]
	0x032D8E8C STP X22, X21, [X31 + 0x20]
	0x032D8E90 STP X20, X19, [X31 + 0x30]
	0x032D8E94 ADRP X21, 0x1104000
	0x032D8E98 LDRB W8, [X21 + 0x943]
	0x032D8E9C MOV W20, W1
	0x032D8EA0 MOV X19, X0
	0x032D8EA4 TBNZ X8, 0x0, 0x32D8EE0
	0x032D8EA8 ADRP X0, 0xE4E000
	0x032D8EAC LDR X0, [X0 + 0x458]
	0x032D8EB0 BL 0x1C16CF4
	0x032D8EB4 ADRP X0, 0xE4E000
	0x032D8EB8 LDR X0, [X0 + 0x460]
	0x032D8EBC BL 0x1C16CF4
	0x032D8EC0 ADRP X0, 0xE4E000
	0x032D8EC4 LDR X0, [X0 + 0x468]
	0x032D8EC8 BL 0x1C16CF4
	0x032D8ECC ADRP X0, 0xE4E000
	0x032D8ED0 LDR X0, [X0 + 0x470]
	0x032D8ED4 BL 0x1C16CF4
	0x032D8ED8 MOVZ W8, 0x1
	0x032D8EDC STRB W8, [X21 + 0x943]
	0x032D8EE0 LDR X8, [X19]
	0x032D8EE4 MOV X0, X19
	0x032D8EE8 LDR X9, [X8 + 0x268]
	0x032D8EEC LDR X1, [X8 + 0x270]
	0x032D8EF0 BLR X9
	0x032D8EF4 MOV X19, X0
	0x032D8EF8 TBZ X20, 0x0, 0x32D8F14
	0x032D8EFC MOV X0, X19
	0x032D8F00 LDP X20, X19, [X31 + 0x30]
	0x032D8F04 LDP X22, X21, [X31 + 0x20]
	0x032D8F08 LDP X24, X23, [X31 + 0x10]
	0x032D8F0C LDR X30, [X31], #0x40
	0x032D8F10 RET
	0x032D8F14 CBZ X19, 0x32D9010
	0x032D8F18 ADRP X8, 0xE4E000
	0x032D8F1C LDR X8, [X8 + 0x470]
	0x032D8F20 LDR X0, [X8]
	0x032D8F24 BL 0x1C16F10
	0x032D8F28 ADRP X8, 0xE4E000
	0x032D8F2C LDR W1, [X19 + 0x18]
	0x032D8F30 LDR X8, [X8 + 0x468]
	0x032D8F34 MOV X20, X0
	0x032D8F38 LDR X2, [X8]
	0x032D8F3C BL 0x301B830
	0x032D8F40 LDR W8, [X19 + 0x18]
	0x032D8F44 CMP W8, 0x1
	0x032D8F48 B.LT 0x32D8FE8
	0x032D8F4C ADRP X24, 0xE4E000
	0x032D8F50 LDR X24, [X24 + 0x458]
	0x032D8F54 MOV X22, X31
	0x032D8F58 ADD X23, X19, 0x20
	0x032D8F5C CMP W22, W8
	0x032D8F60 B.CS 0x32D9014
	0x032D8F64 LDR X21, [X23, X22, LSL #3]
	0x032D8F68 CBZ X21, 0x32D9010
	0x032D8F6C LDR X8, [X21]
	0x032D8F70 MOV X0, X21
	0x032D8F74 LDP X9, X1, [X8 + 0x1D8]
	0x032D8F78 BLR X9
	0x032D8F7C TBNZ X0, 0x0, 0x32D8FD8
	0x032D8F80 CBZ X20, 0x32D9010
	0x032D8F84 LDR W10, [X20 + 0x1C]
	0x032D8F88 LDR X8, [X20 + 0x10]
	0x032D8F8C LDR X9, [X24]
	0x032D8F90 ADD W10, W10, 0x1
	0x032D8F94 STR W10, [X20 + 0x1C]
	0x032D8F98 CBZ X8, 0x32D9010
	0x032D8F9C LDRSW X10, [X20 + 0x18]
	0x032D8FA0 LDR W11, [X8 + 0x18]
	0x032D8FA4 CMP W10, W11
	0x032D8FA8 B.CS 0x32D8FC0
	0x032D8FAC ADD W9, W10, 0x1
	0x032D8FB0 ADD X8, X8, X10, 0x3, LSL
	0x032D8FB4 STR W9, [X20 + 0x18]
	0x032D8FB8 STR X21, [X8 + 0x20]
	0x032D8FBC B 0x32D8FD8
	0x032D8FC0 LDR X8, [X9 + 0x20]
	0x032D8FC4 MOV X0, X20
	0x032D8FC8 MOV X1, X21
	0x032D8FCC LDR X8, [X8 + 0xC0]
	0x032D8FD0 LDR X2, [X8 + 0x70]
	0x032D8FD4 BL 0x301BF90
	0x032D8FD8 LDR W8, [X19 + 0x18]
	0x032D8FDC ADD X22, X22, 0x1
	0x032D8FE0 CMP W22, W8
	0x032D8FE4 B.LT 0x32D8F5C
	0x032D8FE8 CBZ X20, 0x32D9010
	0x032D8FEC ADRP X8, 0xE4E000
	0x032D8FF0 LDR X8, [X8 + 0x460]
	0x032D8FF4 MOV X0, X20
	0x032D8FF8 LDP X20, X19, [X31 + 0x30]
	0x032D8FFC LDP X22, X21, [X31 + 0x20]
	0x032D9000 LDR X1, [X8]
	0x032D9004 LDP X24, X23, [X31 + 0x10]
	0x032D9008 LDR X30, [X31], #0x40
	0x032D900C B 0x301DDC4
	0x032D9010 BL 0x1C16F20
	0x032D9014 BL 0x1C16F28
	0x032D9018 STR X30, [X31 - 0x20]!
	0x032D901C STP X20, X19, [X31 + 0x10]
	0x032D9020 ADRP X19, 0x1103000
	0x032D9024 ADRP X20, 0xE1A000
	0x032D9028 LDRB W8, [X19 + 0x944]
	0x032D902C LDR X20, [X20 + 0x618]
	0x032D9030 TBNZ X8, 0x0, 0x32D9048
	0x032D9034 ADRP X0, 0xE1A000
	0x032D9038 LDR X0, [X0 + 0x618]
	0x032D903C BL 0x1C16CF4
	0x032D9040 MOVZ W8, 0x1
	0x032D9044 STRB W8, [X19 + 0x944]
	0x032D9048 LDR X0, [X20]
	0x032D904C MOVZ W1, 0x10
	0x032D9050 BL 0x1C16D6C
	0x032D9054 MOV X19, X0
	0x032D9058 BL 0x1C24408
	0x032D905C ANDS W31, W0, 0x1
	0x032D9060 CSEL X0, X19, X31, NE
	0x032D9064 LDP X20, X19, [X31 + 0x10]
	0x032D9068 LDR X30, [X31], #0x20
	0x032D906C RET
	0x032D9070 B 0x1C24408
	0x032D9074 AND W1, W1, 0x1
	0x032D9078 B 0x1C84888
	0x032D907C B 0x1C84A80
	0x032D9080 B 0x1C84A0C
	0x032D9084 AND W1, W1, 0x1
	0x032D9088 B 0x1C84888
	0x032D908C MOV W1, W31
	0x032D9090 B 0x1C84888
	0x032D9094 B 0x1C84A0C
	0x032D9098 LDR X0, [X0 + 0x10]
	0x032D909C RET
	0x032D90A0 STR X30, [X31 - 0x20]!
	0x032D90A4 STP X20, X19, [X31 + 0x10]
	0x032D90A8 ADRP X20, 0x1103000
	0x032D90AC LDRB W8, [X20 + 0x945]
	0x032D90B0 MOV X19, X0
	0x032D90B4 TBNZ X8, 0x0, 0x32D90CC
	0x032D90B8 ADRP X0, 0xE1C000
	0x032D90BC LDR X0, [X0 + 0x278]
	0x032D90C0 BL 0x1C16CF4
	0x032D90C4 MOVZ W8, 0x1
	0x032D90C8 STRB W8, [X20 + 0x945]
	0x032D90CC LDRB W8, [X19 + 0x50]
	0x032D90D0 CBZ W8, 0x32D90F4
	0x032D90D4 ADRP X8, 0xE1C000
	0x032D90D8 LDR X8, [X8 + 0x278]
	0x032D90DC LDP X20, X19, [X31 + 0x10]
	0x032D90E0 LDR X8, [X8]
	0x032D90E4 LDR X8, [X8 + 0xB8]
	0x032D90E8 LDR X0, [X8]
	0x032D90EC LDR X30, [X31], #0x20
	0x032D90F0 RET
	0x032D90F4 MOV X0, X19
	0x032D90F8 LDP X20, X19, [X31 + 0x10]
	0x032D90FC LDR X30, [X31], #0x20
	0x032D9100 B 0x1C84A80
	0x032D9104 B 0x1C8458C
	0x032D9108 STP X30, X23, [X31 - 0x30]!
	0x032D910C STP X22, X21, [X31 + 0x10]
	0x032D9110 STP X20, X19, [X31 + 0x20]
	0x032D9114 ADRP X22, 0x1103000
	0x032D9118 ADRP X23, 0xE4D000
	0x032D911C LDRB W8, [X22 + 0x946]
	0x032D9120 LDR X23, [X23 + 0x3E0]
	0x032D9124 MOV W21, W2
	0x032D9128 MOV X19, X1
	0x032D912C MOV X20, X0
	0x032D9130 TBNZ X8, 0x0, 0x32D9148
	0x032D9134 ADRP X0, 0xE4D000
	0x032D9138 LDR X0, [X0 + 0x3E0]
	0x032D913C BL 0x1C16CF4
	0x032D9140 MOVZ W8, 0x1
	0x032D9144 STRB W8, [X22 + 0x946]
	0x032D9148 LDR X0, [X23]
	0x032D914C LDR W8, [X0 + 0xE0]
	0x032D9150 CBNZ W8, 0x32D9158
	0x032D9154 BL 0x1C16DFC
	0x032D9158 AND W2, W21, 0x1
	0x032D915C MOV X0, X20
	0x032D9160 MOV X1, X19
	0x032D9164 LDP X20, X19, [X31 + 0x20]
	0x032D9168 LDP X22, X21, [X31 + 0x10]
	0x032D916C MOV X3, X31
	0x032D9170 LDP X30, X23, [X31], #0x30
	0x032D9174 B 0x33C9FDC
	0x032D9178 STP X30, X23, [X31 - 0x30]!
	0x032D917C STP X22, X21, [X31 + 0x10]
	0x032D9180 STP X20, X19, [X31 + 0x20]
	0x032D9184 ADRP X22, 0x1103000
	0x032D9188 ADRP X23, 0xE4D000
	0x032D918C LDRB W8, [X22 + 0x947]
	0x032D9190 LDR X23, [X23 + 0x3E0]
	0x032D9194 MOV W21, W2
	0x032D9198 MOV X19, X1
	0x032D919C MOV X20, X0
	0x032D91A0 TBNZ X8, 0x0, 0x32D91B8
	0x032D91A4 ADRP X0, 0xE4D000
	0x032D91A8 LDR X0, [X0 + 0x3E0]
	0x032D91AC BL 0x1C16CF4
	0x032D91B0 MOVZ W8, 0x1
	0x032D91B4 STRB W8, [X22 + 0x947]
	0x032D91B8 LDR X0, [X23]
	0x032D91BC LDR W8, [X0 + 0xE0]
	0x032D91C0 CBNZ W8, 0x32D91C8
	0x032D91C4 BL 0x1C16DFC
	0x032D91C8 AND W2, W21, 0x1
	0x032D91CC MOV X0, X20
	0x032D91D0 MOV X1, X19
	0x032D91D4 LDP X20, X19, [X31 + 0x20]
	0x032D91D8 LDP X22, X21, [X31 + 0x10]
	0x032D91DC MOV X3, X31
	0x032D91E0 LDP X30, X23, [X31], #0x30
	0x032D91E4 B 0x33C7388
	0x032D91E8 B 0x1C84844
	0x032D91EC MOV X1, X31
	0x032D91F0 B 0x33CB4E0
	0x032D91F4 STP X30, X21, [X31 - 0x20]!
	0x032D91F8 STP X20, X19, [X31 + 0x10]
	0x032D91FC ADRP X21, 0x1103000
	0x032D9200 LDRB W8, [X21 + 0x948]
	0x032D9204 MOV X19, X1
	0x032D9208 MOV X20, X0
	0x032D920C TBNZ X8, 0x0, 0x32D9224
	0x032D9210 ADRP X0, 0xE48000
	0x032D9214 LDR X0, [X0 + 0xAD0]
	0x032D9218 BL 0x1C16CF4
	0x032D921C MOVZ W8, 0x1
	0x032D9220 STRB W8, [X21 + 0x948]
	0x032D9224 CMP X20, X19
	0x032D9228 B.EQ 0x32D926C
	0x032D922C CBZ X19, 0x32D9264
	0x032D9230 ADRP X8, 0xE48000
	0x032D9234 LDR X8, [X8 + 0xAD0]
	0x032D9238 LDR X9, [X19]
	0x032D923C LDR X8, [X8]
	0x032D9240 LDRB W11, [X9 + 0x130]
	0x032D9244 LDRB W10, [X8 + 0x130]
	0x032D9248 CMP W11, W10
	0x032D924C B.CC 0x32D9264
	0x032D9250 LDR X9, [X9 + 0xC8]
	0x032D9254 ADD X9, X9, X10, 0x3, LSL
	0x032D9258 LDUR X9, [X9 - 0x8]
	0x032D925C CMP X9, X8
	0x032D9260 B.EQ 0x32D927C
	0x032D9264 MOV W0, W31
	0x032D9268 B 0x32D9270
	0x032D926C MOVZ W0, 0x1
	0x032D9270 LDP X20, X19, [X31 + 0x10]
	0x032D9274 LDP X30, X21, [X31], #0x20
	0x032D9278 RET
	0x032D927C LDR X0, [X19 + 0x10]
	0x032D9280 LDR X1, [X20 + 0x10]
	0x032D9284 LDP X20, X19, [X31 + 0x10]
	0x032D9288 MOV X2, X31
	0x032D928C LDP X30, X21, [X31], #0x20
	0x032D9290 B 0x33BE5B0
	0x032D9294 STP X30, X19, [X31 - 0x10]!
	0x032D9298 MOV X19, X0
	0x032D929C LDR X0, [X0 + 0x58]
	0x032D92A0 CBNZ X0, 0x32D92B8
	0x032D92A4 LDR X8, [X19]
	0x032D92A8 MOV X0, X19
	0x032D92AC LDP X9, X1, [X8 + 0x1B8]
	0x032D92B0 BLR X9
	0x032D92B4 STR X0, [X19 + 0x58]
	0x032D92B8 LDP X30, X19, [X31], #0x10
	0x032D92BC RET
	0x032D92C0 B 0x1C84AF0
	0x032D92C4 SUB X31, X31, 0x50
	0x032D92C8 STP X30, X19, [X31 + 0x40]
	0x032D92CC MOVI V0.2D, 0x0
	0x032D92D0 ADD X1, X31, 0x0
	0x032D92D4 MOV X19, X8
	0x032D92D8 STP V0, V0, [X31 + 0x20]
	0x032D92DC STP V0, V0, [X31]
	0x032D92E0 BL 0x1C84AF0
	0x032D92E4 LDP V1, V0, [X31 + 0x20]
	0x032D92E8 LDP V3, V2, [X31]
	0x032D92EC STP V1, V0, [X19 + 0x20]
	0x032D92F0 STP V3, V2, [X19]
	0x032D92F4 LDP X30, X19, [X31 + 0x40]
	0x032D92F8 ADD X31, X31, 0x50
	0x032D92FC RET
	0x032D9300 B 0x32D9304
	0x032D9304 STR X30, [X31 - 0x10]!
	0x032D9308 BL 0x32D94A8
	0x032D930C CBZ X0, 0x32D931C
	0x032D9310 MOV X1, X31
	0x032D9314 LDR X30, [X31], #0x10
	0x032D9318 B 0x33B83B4
	0x032D931C BL 0x1C16F20
	0x032D9320 B 0x32D9324
	0x032D9324 SUB X31, X31, 0x70
	0x032D9328 STP X30, X23, [X31 + 0x40]
	0x032D932C STP X22, X21, [X31 + 0x50]
	0x032D9330 STP X20, X19, [X31 + 0x60]
	0x032D9334 ADRP X20, 0x1103000
	0x032D9338 LDRB W8, [X20 + 0x94B]
	0x032D933C MOV X19, X0
	0x032D9340 TBNZ X8, 0x0, 0x32D9364
	0x032D9344 ADRP X0, 0xE43000
	0x032D9348 LDR X0, [X0 + 0x4E8]
	0x032D934C BL 0x1C16CF4
	0x032D9350 ADRP X0, 0xE1A000
	0x032D9354 LDR X0, [X0 + 0x6C0]
	0x032D9358 BL 0x1C16CF4
	0x032D935C MOVZ W8, 0x1
	0x032D9360 STRB W8, [X20 + 0x94B]
	0x032D9364 MOVI V0.2D, 0x0
	0x032D9368 ADD X1, X31, 0x0
	0x032D936C MOV X0, X19
	0x032D9370 STP V0, V0, [X31 + 0x20]
	0x032D9374 STP V0, V0, [X31]
	0x032D9378 BL 0x1C84AF0
	0x032D937C LDP X20, X21, [X31 + 0x18]
	0x032D9380 LDR X22, [X31 + 0x28]
	0x032D9384 MOV X1, X31
	0x032D9388 MOV X2, X31
	0x032D938C MOV X0, X20
	0x032D9390 BL 0x32C2354
	0x032D9394 ANDS W31, W0, 0x1
	0x032D9398 CSEL X20, X21, X20, NE
	0x032D939C MOV X0, X20
	0x032D93A0 MOV X1, X31
	0x032D93A4 MOV X2, X31
	0x032D93A8 BL 0x32C2354
	0x032D93AC ANDS W31, W0, 0x1
	0x032D93B0 CSEL X21, X22, X20, NE
	0x032D93B4 MOV X0, X21
	0x032D93B8 MOV X1, X31
	0x032D93BC MOV X2, X31
	0x032D93C0 BL 0x32CE528
	0x032D93C4 TBZ X0, 0x0, 0x32D93E0
	0x032D93C8 CBZ X21, 0x32D94A4
	0x032D93CC MOV X0, X21
	0x032D93D0 MOV X1, X31
	0x032D93D4 BL 0x32CE454
	0x032D93D8 AND W20, W0, 0x1
	0x032D93DC B 0x32D93E4
	0x032D93E0 MOV W20, W31
	0x032D93E4 ADRP X23, 0xE1A000
	0x032D93E8 LDR X23, [X23 + 0x6C0]
	0x032D93EC MOV X0, X19
	0x032D93F0 BL 0x32D94A8
	0x032D93F4 LDR X8, [X19]
	0x032D93F8 MOV X22, X0
	0x032D93FC MOV X0, X19
	0x032D9400 LDP X9, X1, [X8 + 0x1C8]
	0x032D9404 BLR X9
	0x032D9408 LDR X8, [X23]
	0x032D940C MOV X19, X0
	0x032D9410 LDR W9, [X8 + 0xE0]
	0x032D9414 CBNZ W9, 0x32D9420
	0x032D9418 MOV X0, X8
	0x032D941C BL 0x1C16DFC
	0x032D9420 MOV X0, X22
	0x032D9424 MOV X1, X19
	0x032D9428 MOV X2, X31
	0x032D942C BL 0x3395F0C
	0x032D9430 MOV W19, W0
	0x032D9434 MOV X0, X21
	0x032D9438 MOV X1, X31
	0x032D943C MOV X2, X31
	0x032D9440 BL 0x32CE528
	0x032D9444 TBZ X0, 0x0, 0x32D9460
	0x032D9448 CBZ X21, 0x32D94A4
	0x032D944C MOV X0, X21
	0x032D9450 MOV X1, X31
	0x032D9454 BL 0x32CE414
	0x032D9458 MOV W21, W0
	0x032D945C B 0x32D9464
	0x032D9460 MOV W21, W31
	0x032D9464 ADRP X8, 0xE43000

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+160], X30
	003 Move [X31+176], X26
	004 Move [X31+184], X25
	005 Move [X31+192], X24
	006 Move [X31+200], X23
	007 Move [X31+208], X22
	008 Move [X31+216], X21
	009 Move [X31+224], X20
	010 Move [X31+232], X19
	011 Move X21, 0x1105000
	012 Move W8, [X21+2365]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {45}
	019 Move X0, 0xE46000
	020 Move X0, [X0+2424]
	021 Call 0x1C17CF4
	022 Move X0, 0xE4E000
	023 Move X0, [X0+3200]
	024 Call 0x1C17CF4
	025 Move X0, 0xE4F000
	026 Move X0, [X0+248]
	027 Call 0x1C17CF4
	028 Move X0, 0xE4F000
	029 Move X0, [X0+200]
	030 Call 0x1C17CF4
	031 Move X0, 0xE4F000
	032 Move X0, [X0+1000]
	033 Call 0x1C17CF4
	034 Move X0, 0xE4F000
	035 Move X0, [X0+264]
	036 Call 0x1C17CF4
	037 Move X0, 0xE4F000
	038 Move X0, [X0+1008]
	039 Call 0x1C17CF4
	040 Move X0, 0xE4F000
	041 Move X0, [X0+272]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+2365], W8
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+144], X31
	047 Move [X31+152], X31
	048 Move [X31+112], V0
	049 Move [X31+120], V0
	050 Move [X31+6], V0
	051 Compare X20, 0
	052 JumpIfEqual {431}
	053 Move X8, 0xE4E000
	054 Move X8, [X8+3200]
	055 Move X9, [X20]
	056 Move X8, [X8]
	057 Move W11, [X9+304]
	058 Move W10, [X8+304]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X9, [X9+200]
	061 Add X9, X9, X10
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction CSEL not yet implemented."
	065 Compare X23, 0
	066 JumpIfEqual {430}
	067 Move X8, 0xE46000
	068 Move X8, [X8+2424]
	069 Move X20, [X23+16]
	070 Move X21, [X19+16]
	071 Move X0, [X8]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X20
	077 Move X1, X21
	078 Move X2, X31
	079 Call ConstructorInfo.op_Inequality, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {431}
	084 Move X20, [X23+24]
	085 Compare X20, 0
	086 JumpIfEqual {430}
	087 Move X22, 0xE4F000
	088 Move X8, [X20]
	089 Move X22, [X22+264]
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Move X1, [X22]
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move X0, X20
	101 Move W2, W31
	102 Call 0x1C5D788
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Add X8, X8, X9
	105 Add X0, X8, 312
	106 Move X8, [X0]
	107 Move X1, [X0+8]
	108 Move X0, X20
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move X21, [X19+24]
	111 Compare X21, 0
	112 JumpIfEqual {430}
	113 Move X8, [X21]
	114 Move X1, [X22]
	115 Move W20, W0
	116 NotImplemented "Instruction LDRH not yet implemented."
	117 Compare X9, 0
	118 JumpIfEqual {125}
	119 Move X10, [X8+176]
	120 Add X10, X10, 8
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Subtract X9, X9, 1
	124 Add X10, X10, 16
	125 Move X0, X21
	126 Move W2, W31
	127 Call 0x1C5D788
	128 NotImplemented "Instruction LDRSW not yet implemented."
	129 Add X8, X8, X9
	130 Add X0, X8, 312
	131 Move X8, [X0]
	132 Move X1, [X0+8]
	133 Move X0, X21
	134 NotImplemented "Instruction BLR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X20, [X23+32]
	137 Compare X20, 0
	138 JumpIfEqual {430}
	139 Move X24, 0xE4F000
	140 Move X8, [X20]
	141 Move X24, [X24+1000]
	142 NotImplemented "Instruction LDRH not yet implemented."
	143 Move X1, [X24]
	144 Compare X9, 0
	145 JumpIfEqual {152}
	146 Move X10, [X8+176]
	147 Add X10, X10, 8
	148 NotImplemented "Instruction LDUR not yet implemented."
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Subtract X9, X9, 1
	151 Add X10, X10, 16
	152 Move X0, X20
	153 Move W2, W31
	154 Call 0x1C5D788
	155 NotImplemented "Instruction LDRSW not yet implemented."
	156 Add X8, X8, X9
	157 Add X0, X8, 312
	158 Move X8, [X0]
	159 Move X1, [X0+8]
	160 Move X0, X20
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move X21, [X19+32]
	163 Compare X21, 0
	164 JumpIfEqual {430}
	165 Move X8, [X21]
	166 Move X1, [X24]
	167 Move W20, W0
	168 NotImplemented "Instruction LDRH not yet implemented."
	169 Compare X9, 0
	170 JumpIfEqual {177}
	171 Move X10, [X8+176]
	172 Add X10, X10, 8
	173 NotImplemented "Instruction LDUR not yet implemented."
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Subtract X9, X9, 1
	176 Add X10, X10, 16
	177 Move X0, X21
	178 Move W2, W31
	179 Call 0x1C5D788
	180 NotImplemented "Instruction LDRSW not yet implemented."
	181 Add X8, X8, X9
	182 Add X0, X8, 312
	183 Move X8, [X0]
	184 Move X1, [X0+8]
	185 Move X0, X21
	186 NotImplemented "Instruction BLR not yet implemented."
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move X21, [X19+24]
	189 Compare X21, 0
	190 JumpIfEqual {430}
	191 Move X25, 0xE4E000
	192 Move X26, 0xE4E000
	193 Move X25, [X25+272]
	194 Move X26, [X26+200]
	195 Move W20, W31
	196 Move X8, [X21]
	197 Move X1, [X22]
	198 NotImplemented "Instruction LDRH not yet implemented."
	199 Compare X9, 0
	200 JumpIfEqual {207}
	201 Move X10, [X8+176]
	202 Add X10, X10, 8
	203 NotImplemented "Instruction LDUR not yet implemented."
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Subtract X9, X9, 1
	206 Add X10, X10, 16
	207 Move X0, X21
	208 Move W2, W31
	209 Call 0x1C5D788
	210 NotImplemented "Instruction LDRSW not yet implemented."
	211 Add X8, X8, X9
	212 Add X0, X8, 312
	213 Move X8, [X0]
	214 Move X1, [X0+8]
	215 Move X0, X21
	216 NotImplemented "Instruction BLR not yet implemented."
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move X21, [X19+24]
	219 Compare X21, 0
	220 JumpIfEqual {430}
	221 Move X8, [X21]
	222 Move X1, [X25]
	223 NotImplemented "Instruction LDRH not yet implemented."
	224 Compare X9, 0
	225 JumpIfEqual {232}
	226 Move X10, [X8+176]
	227 Add X10, X10, 8
	228 NotImplemented "Instruction LDUR not yet implemented."
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Subtract X9, X9, 1
	231 Add X10, X10, 16
	232 Move X0, X21
	233 Move W2, W31
	234 Call 0x1C5D788
	235 NotImplemented "Instruction LDRSW not yet implemented."
	236 Add X8, X8, X9
	237 Add X0, X8, 312
	238 Move X8, [X0]
	239 Move X2, [X0+8]
	240 Move X0, X21
	241 Move W1, W20
	242 NotImplemented "Instruction BLR not yet implemented."
	243 Move [X31+144], X0
	244 Move [X31+152], X1
	245 Move X21, [X23+24]
	246 Compare X21, 0
	247 JumpIfEqual {430}
	248 Move X8, [X21]
	249 Move X1, [X25]
	250 NotImplemented "Instruction LDRH not yet implemented."
	251 Compare X9, 0
	252 JumpIfEqual {259}
	253 Move X10, [X8+176]
	254 Add X10, X10, 8
	255 NotImplemented "Instruction LDUR not yet implemented."
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Subtract X9, X9, 1
	258 Add X10, X10, 16
	259 Move X0, X21
	260 Move W2, W31
	261 Call 0x1C5D788
	262 NotImplemented "Instruction LDRSW not yet implemented."
	263 Add X8, X8, X9
	264 Add X0, X8, 312
	265 Move X8, [X0]
	266 Move X2, [X0+8]
	267 Move X0, X21
	268 Move W1, W20
	269 NotImplemented "Instruction BLR not yet implemented."
	270 Move X8, [X26]
	271 Move [X31+48], X0
	272 Move [X31+56], X1
	273 Add X1, X31, 48
	274 Move X0, X8
	275 Call 0x1C17E04
	276 Move X1, X0
	277 Add X0, X31, 144
	278 Move X2, X31
	279 Call CustomAttributeTypedArgument.Equals, X0, X1
	280 Move TEMP, X0
	281 And TEMP, TEMP, 1
	282 Compare TEMP, 1
	283 JumpIfEqual {431}
	284 Move X21, [X19+24]
	285 Add W20, W20, 1
	286 Compare X21, 0
	287 JumpIfNotEqual {196}
	288 Move X21, [X19+32]
	289 Compare X21, 0
	290 JumpIfEqual {430}
	291 Move X25, 0xE4E000
	292 Move X26, 0xE4E000
	293 Move X25, [X25+1008]
	294 Move X26, [X26+248]
	295 Move W20, W31
	296 Move X8, [X21]
	297 Move X1, [X24]
	298 NotImplemented "Instruction LDRH not yet implemented."
	299 Compare X9, 0
	300 JumpIfEqual {307}
	301 Move X10, [X8+176]
	302 Add X10, X10, 8
	303 NotImplemented "Instruction LDUR not yet implemented."
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Subtract X9, X9, 1
	306 Add X10, X10, 16
	307 Move X0, X21
	308 Move W2, W31
	309 Call 0x1C5D788
	310 NotImplemented "Instruction LDRSW not yet implemented."
	311 Add X8, X8, X9
	312 Add X0, X8, 312
	313 Move X8, [X0]
	314 Move X1, [X0+8]
	315 Move X0, X21
	316 NotImplemented "Instruction BLR not yet implemented."
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X22, [X23+32]
	319 Compare X22, 0
	320 JumpIfEqual {430}
	321 Move W21, W31
	322 Move X8, [X22]
	323 Move X1, [X24]
	324 NotImplemented "Instruction LDRH not yet implemented."
	325 Compare X9, 0
	326 JumpIfEqual {333}
	327 Move X10, [X8+176]
	328 Add X10, X10, 8
	329 NotImplemented "Instruction LDUR not yet implemented."
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Subtract X9, X9, 1
	332 Add X10, X10, 16
	333 Move X0, X22
	334 Move W2, W31
	335 Call 0x1C5D788
	336 NotImplemented "Instruction LDRSW not yet implemented."
	337 Add X8, X8, X9
	338 Add X0, X8, 312
	339 Move X8, [X0]
	340 Move X1, [X0+8]
	341 Move X0, X22
	342 NotImplemented "Instruction BLR not yet implemented."
	343 NotImplemented "Instruction CMP not yet implemented."
	344 Move X22, [X19+32]
	345 Compare X22, 0
	346 JumpIfEqual {430}
	347 Move X8, [X22]
	348 Move X1, [X25]
	349 NotImplemented "Instruction LDRH not yet implemented."
	350 Compare X9, 0
	351 JumpIfEqual {358}
	352 Move X10, [X8+176]
	353 Add X10, X10, 8
	354 NotImplemented "Instruction LDUR not yet implemented."
	355 NotImplemented "Instruction CMP not yet implemented."
	356 Subtract X9, X9, 1
	357 Add X10, X10, 16
	358 Move X0, X22
	359 Move W2, W31
	360 Call 0x1C5D788
	361 NotImplemented "Instruction LDRSW not yet implemented."
	362 Add X8, X8, X9
	363 Add X0, X8, 312
	364 Move X9, [X0]
	365 Move X2, [X0+8]
	366 Add X8, X31, 48
	367 Move X0, X22
	368 Move W1, W20
	369 NotImplemented "Instruction BLR not yet implemented."
	370 Move V0, [X31+48]
	371 Move V1, [X31+64]
	372 Move V2, [X31+5]
	373 Move [X31+96], V0
	374 Move [X31+104], V1
	375 Move [X31+8], V2
	376 Move X22, [X23+32]
	377 Compare X22, 0
	378 JumpIfEqual {430}
	379 Move X8, [X22]
	380 Move X1, [X25]
	381 NotImplemented "Instruction LDRH not yet implemented."
	382 Compare X9, 0
	383 JumpIfEqual {390}
	384 Move X10, [X8+176]
	385 Add X10, X10, 8
	386 NotImplemented "Instruction LDUR not yet implemented."
	387 NotImplemented "Instruction CMP not yet implemented."
	388 Subtract X9, X9, 1
	389 Add X10, X10, 16
	390 Move X0, X22
	391 Move W2, W31
	392 Call 0x1C5D788
	393 NotImplemented "Instruction LDRSW not yet implemented."
	394 Add X8, X8, X9
	395 Add X0, X8, 312
	396 Move X9, [X0]
	397 Move X2, [X0+8]
	398 Add X8, X31, 0
	399 Move X0, X22
	400 Move W1, W21
	401 NotImplemented "Instruction BLR not yet implemented."
	402 Move V1, [X31+16]
	403 Move V0, [X31+32]
	404 Move V2, [X31]
	405 Move X0, [X26]
	406 Add X1, X31, 0
	407 Move [X31+64], V1
	408 Move [X31+72], V0
	409 Move [X31+32], V0
	410 Move [X31+40], V2
	411 Move [X31], V2
	412 Move [X31+8], V1
	413 Call 0x1C17E04
	414 Move X1, X0
	415 Add X0, X31, 96
	416 Move X2, X31
	417 Call CustomAttributeNamedArgument.Equals, X0, X1
	418 Move TEMP, X0
	419 And TEMP, TEMP, 1
	420 Compare TEMP, 1
	421 JumpIfEqual {426}
	422 Move X22, [X23+32]
	423 Add W21, W21, 1
	424 Compare X22, 0
	425 JumpIfNotEqual {322}
	426 Move X21, [X19+32]
	427 Add W20, W20, 1
	428 Compare X21, 0
	429 JumpIfNotEqual {296}
	430 Call 0x1C17F20
	431 Move W0, W31
	432 Move X20, [X31+224]
	433 Move X19, [X31+232]
	434 Move X22, [X31+208]
	435 Move X21, [X31+216]
	436 Move X24, [X31+192]
	437 Move X23, [X31+200]
	438 Move X26, [X31+176]
	439 Move X25, [X31+184]
	440 Move X30, [X31+160]
	441 Add X31, X31, 240
	442 Return X0
	443 Move W0, 1

Method: System.Int32 GetHashCode()

Disassembly:
	0x032D9468 LDR X8, [X8 + 0x4E8]
	0x032D946C LDR X0, [X8]
	0x032D9470 LDR W8, [X0 + 0xE0]
	0x032D9474 CBNZ W8, 0x32D947C
	0x032D9478 BL 0x1C16DFC
	0x032D947C AND W1, W19, 0x1
	0x032D9480 AND W2, W21, 0x1
	0x032D9484 MOV W0, W20
	0x032D9488 MOV X3, X31
	0x032D948C BL 0x33B44E8
	0x032D9490 LDP X20, X19, [X31 + 0x60]
	0x032D9494 LDP X22, X21, [X31 + 0x50]
	0x032D9498 LDP X30, X23, [X31 + 0x40]
	0x032D949C ADD X31, X31, 0x70
	0x032D94A0 RET
	0x032D94A4 BL 0x1C16F20
	0x032D94A8 STR X30, [X31 - 0x20]!
	0x032D94AC STP X20, X19, [X31 + 0x10]
	0x032D94B0 ADRP X20, 0x1103000
	0x032D94B4 LDRB W8, [X20 + 0x949]
	0x032D94B8 MOV X19, X0
	0x032D94BC TBNZ X8, 0x0, 0x32D94D4
	0x032D94C0 ADRP X0, 0xE43000
	0x032D94C4 LDR X0, [X0 + 0x4E8]
	0x032D94C8 BL 0x1C16CF4
	0x032D94CC MOVZ W8, 0x1
	0x032D94D0 STRB W8, [X20 + 0x949]
	0x032D94D4 LDR X8, [X19]
	0x032D94D8 MOV X0, X19
	0x032D94DC LDP X9, X1, [X8 + 0x1B8]
	0x032D94E0 BLR X9
	0x032D94E4 CBZ X0, 0x32D951C
	0x032D94E8 ADRP X9, 0xE43000
	0x032D94EC LDR X9, [X9 + 0x4E8]
	0x032D94F0 LDR X8, [X0]
	0x032D94F4 LDR X1, [X9]
	0x032D94F8 LDRB W10, [X8 + 0x130]
	0x032D94FC LDRB W9, [X1 + 0x130]
	0x032D9500 CMP W10, W9
	0x032D9504 B.CC 0x32D9528
	0x032D9508 LDR X8, [X8 + 0xC8]
	0x032D950C ADD X8, X8, X9, 0x3, LSL
	0x032D9510 LDUR X8, [X8 - 0x8]
	0x032D9514 CMP X8, X1
	0x032D9518 B.NE 0x32D9528
	0x032D951C LDP X20, X19, [X31 + 0x10]
	0x032D9520 LDR X30, [X31], #0x20
	0x032D9524 RET
	0x032D9528 BL 0x1C171E0
	0x032D952C STR X30, [X31 - 0x20]!
	0x032D9530 STP X20, X19, [X31 + 0x10]
	0x032D9534 ADRP X20, 0x1103000
	0x032D9538 LDRB W8, [X20 + 0x94A]
	0x032D953C MOV X19, X0
	0x032D9540 TBNZ X8, 0x0, 0x32D9558
	0x032D9544 ADRP X0, 0xE43000
	0x032D9548 LDR X0, [X0 + 0x4E8]
	0x032D954C BL 0x1C16CF4
	0x032D9550 MOVZ W8, 0x1
	0x032D9554 STRB W8, [X20 + 0x94A]
	0x032D9558 LDR X8, [X19]
	0x032D955C MOV X0, X19
	0x032D9560 LDP X9, X1, [X8 + 0x1C8]
	0x032D9564 BLR X9
	0x032D9568 CBZ X0, 0x32D95A0
	0x032D956C ADRP X9, 0xE43000
	0x032D9570 LDR X9, [X9 + 0x4E8]
	0x032D9574 LDR X8, [X0]
	0x032D9578 LDR X1, [X9]
	0x032D957C LDRB W10, [X8 + 0x130]
	0x032D9580 LDRB W9, [X1 + 0x130]
	0x032D9584 CMP W10, W9
	0x032D9588 B.CC 0x32D95AC
	0x032D958C LDR X8, [X8 + 0xC8]
	0x032D9590 ADD X8, X8, X9, 0x3, LSL
	0x032D9594 LDUR X8, [X8 - 0x8]
	0x032D9598 CMP X8, X1
	0x032D959C B.NE 0x32D95AC
	0x032D95A0 LDP X20, X19, [X31 + 0x10]
	0x032D95A4 LDR X30, [X31], #0x20
	0x032D95A8 RET
	0x032D95AC BL 0x1C171E0
	0x032D95B0 STP X30, X21, [X31 - 0x20]!
	0x032D95B4 STP X20, X19, [X31 + 0x10]
	0x032D95B8 CBZ X1, 0x32D9600
	0x032D95BC LDR X8, [X0]
	0x032D95C0 MOV X19, X1
	0x032D95C4 MOV X20, X0
	0x032D95C8 LDP X9, X1, [X8 + 0x1A8]
	0x032D95CC BLR X9
	0x032D95D0 MOV X21, X0
	0x032D95D4 MOV X0, X20
	0x032D95D8 BL 0x32D952C
	0x032D95DC MOV X2, X0
	0x032D95E0 MOV X0, X19
	0x032D95E4 LDP X20, X19, [X31 + 0x10]
	0x032D95E8 MOVZ W4, 0x2
	0x032D95EC MOV X1, X21
	0x032D95F0 MOV X3, X31
	0x032D95F4 MOV X5, X31
	0x032D95F8 LDP X30, X21, [X31], #0x20
	0x032D95FC B 0x32D45E0
	0x032D9600 ADRP X0, 0xE1F000
	0x032D9604 LDR X0, [X0 + 0x528]
	0x032D9608 BL 0x1C16D08
	0x032D960C BL 0x1C16F10
	0x032D9610 MOV X19, X0
	0x032D9614 ADRP X0, 0xE44000
	0x032D9618 LDR X0, [X0 + 0x2D8]
	0x032D961C BL 0x1C16D08
	0x032D9620 MOV X1, X0
	0x032D9624 MOV X0, X19
	0x032D9628 MOV X2, X31
	0x032D962C BL 0x330E100
	0x032D9630 ADRP X0, 0xE4D000
	0x032D9634 LDR X0, [X0 + 0x478]
	0x032D9638 BL 0x1C16D08
	0x032D963C MOV X1, X0
	0x032D9640 MOV X0, X19
	0x032D9644 BL 0x1C16DEC
	0x032D9648 SUB X31, X31, 0x60
	0x032D964C STR X30, [X31 + 0x40]
	0x032D9650 STP X20, X19, [X31 + 0x50]
	0x032D9654 MOV W20, W1
	0x032D9658 MOVI V0.2D, 0x0
	0x032D965C ADD X1, X31, 0x0
	0x032D9660 STP V0, V0, [X31 + 0x20]
	0x032D9664 STP V0, V0, [X31]
	0x032D9668 BL 0x1C84AF0
	0x032D966C LDR X19, [X31 + 0x18]
	0x032D9670 TBNZ X20, 0x0, 0x32D96A0
	0x032D9674 MOV X0, X19
	0x032D9678 MOV X1, X31
	0x032D967C MOV X2, X31
	0x032D9680 BL 0x32CE528
	0x032D9684 TBZ X0, 0x0, 0x32D969C
	0x032D9688 CBZ X19, 0x32D96B4
	0x032D968C MOV X0, X19
	0x032D9690 MOV X1, X31
	0x032D9694 BL 0x32CE454
	0x032D9698 TBNZ X0, 0x0, 0x32D96A0
	0x032D969C MOV X19, X31
	0x032D96A0 MOV X0, X19
	0x032D96A4 LDP X20, X19, [X31 + 0x50]
	0x032D96A8 LDR X30, [X31 + 0x40]
	0x032D96AC ADD X31, X31, 0x60
	0x032D96B0 RET
	0x032D96B4 BL 0x1C16F20
	0x032D96B8 SUB X31, X31, 0x60
	0x032D96BC STR X30, [X31 + 0x40]
	0x032D96C0 STP X20, X19, [X31 + 0x50]
	0x032D96C4 MOV W20, W1
	0x032D96C8 MOVI V0.2D, 0x0
	0x032D96CC ADD X1, X31, 0x0
	0x032D96D0 STP V0, V0, [X31 + 0x20]
	0x032D96D4 STP V0, V0, [X31]
	0x032D96D8 BL 0x1C84AF0
	0x032D96DC LDR X19, [X31 + 0x28]
	0x032D96E0 TBNZ X20, 0x0, 0x32D9710
	0x032D96E4 MOV X0, X19
	0x032D96E8 MOV X1, X31
	0x032D96EC MOV X2, X31
	0x032D96F0 BL 0x32CE528
	0x032D96F4 TBZ X0, 0x0, 0x32D970C
	0x032D96F8 CBZ X19, 0x32D9724
	0x032D96FC MOV X0, X19
	0x032D9700 MOV X1, X31
	0x032D9704 BL 0x32CE454
	0x032D9708 TBNZ X0, 0x0, 0x32D9710
	0x032D970C MOV X19, X31
	0x032D9710 MOV X0, X19
	0x032D9714 LDP X20, X19, [X31 + 0x50]
	0x032D9718 LDR X30, [X31 + 0x40]
	0x032D971C ADD X31, X31, 0x60
	0x032D9720 RET
	0x032D9724 BL 0x1C16F20
	0x032D9728 SUB X31, X31, 0x60
	0x032D972C STR X30, [X31 + 0x40]
	0x032D9730 STP X20, X19, [X31 + 0x50]
	0x032D9734 MOV W20, W1
	0x032D9738 MOVI V0.2D, 0x0
	0x032D973C ADD X1, X31, 0x0
	0x032D9740 STP V0, V0, [X31 + 0x20]
	0x032D9744 STP V0, V0, [X31]
	0x032D9748 BL 0x1C84AF0
	0x032D974C LDR X19, [X31 + 0x20]
	0x032D9750 TBNZ X20, 0x0, 0x32D9780
	0x032D9754 MOV X0, X19
	0x032D9758 MOV X1, X31
	0x032D975C MOV X2, X31
	0x032D9760 BL 0x32CE528
	0x032D9764 TBZ X0, 0x0, 0x32D977C
	0x032D9768 CBZ X19, 0x32D9794
	0x032D976C MOV X0, X19
	0x032D9770 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+128], X24
	004 Move [X31+136], X23
	005 Move [X31+144], X22
	006 Move [X31+152], X21
	007 Move [X31+160], X20
	008 Move [X31+168], X19
	009 Move X21, 0x1104000
	010 Move X20, 0xE45000
	011 Move W8, [X21+2366]
	012 Move X20, [X20+2424]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0xE45000
	019 Move X0, [X0+2424]
	020 Call 0x1C17CF4
	021 Move X0, 0xE4E000
	022 Move X0, [X0+1000]
	023 Call 0x1C17CF4
	024 Move X0, 0xE4E000
	025 Move X0, [X0+264]
	026 Call 0x1C17CF4
	027 Move X0, 0xE4E000
	028 Move X0, [X0+1008]
	029 Call 0x1C17CF4
	030 Move X0, 0xE4E000
	031 Move X0, [X0+272]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+2366], W8
	035 Move X0, [X20]
	036 NotImplemented "Instruction MOVI not yet implemented."
	037 Move [X31+96], X31
	038 Move [X31+104], X31
	039 Move [X31+64], V0
	040 Move [X31+72], V0
	041 Move [X31+3], V0
	042 Move W8, [X0+224]
	043 Move X20, [X19+16]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X20
	048 Move X1, X31
	049 Move X2, X31
	050 Call ConstructorInfo.op_Equality, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {56}
	055 Move W20, 13
	056 Move X0, [X19+16]
	057 Compare X0, 0
	058 JumpIfEqual {207}
	059 Move X8, [X0]
	060 Move X9, [X8+344]
	061 Move X1, [X8+352]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move W20, W0
	064 ShiftRight W20, 16
	065 And W20, W20, 0x7FFF
	066 Move X22, [X19+24]
	067 Compare X22, 0
	068 JumpIfEqual {137}
	069 Move X23, 0xE4E000
	070 Move X24, 0xE4E000
	071 Move X23, [X23+264]
	072 Move X24, [X24+272]
	073 Move W21, W31
	074 Move X8, [X22]
	075 Move X1, [X23]
	076 NotImplemented "Instruction LDRH not yet implemented."
	077 Compare X9, 0
	078 JumpIfEqual {85}
	079 Move X10, [X8+176]
	080 Add X10, X10, 8
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Subtract X9, X9, 1
	084 Add X10, X10, 16
	085 Move X0, X22
	086 Move W2, W31
	087 Call 0x1C5D788
	088 NotImplemented "Instruction LDRSW not yet implemented."
	089 Add X8, X8, X9
	090 Add X0, X8, 312
	091 Move X8, [X0]
	092 Move X1, [X0+8]
	093 Move X0, X22
	094 NotImplemented "Instruction BLR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X22, [X19+24]
	097 Compare X22, 0
	098 JumpIfEqual {207}
	099 Move X8, [X22]
	100 Move X1, [X24]
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 Compare X9, 0
	103 JumpIfEqual {110}
	104 Move X10, [X8+176]
	105 Add X10, X10, 8
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Subtract X9, X9, 1
	109 Add X10, X10, 16
	110 Move X0, X22
	111 Move W2, W31
	112 Call 0x1C5D788
	113 NotImplemented "Instruction LDRSW not yet implemented."
	114 Add X8, X8, X9
	115 Add X0, X8, 312
	116 Move X8, [X0]
	117 Move X2, [X0+8]
	118 Move X0, X22
	119 Move W1, W21
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move [X31+96], X0
	122 Move [X31+104], X1
	123 Add X0, X31, 96
	124 Move X1, X31
	125 Call CustomAttributeTypedArgument.GetHashCode, X0
	126 Add W8, W0, 7
	127 Move W9, W21
	128 ShiftRight W9, 30
	129 And W9, W9, 3
	130 Move X22, [X19+24]
	131 NotImplemented "Instruction LSLV not yet implemented."
	132 Xor W8, W8, W20
	133 Add W20, W8, W20
	134 Add W21, W21, 1
	135 Compare X22, 0
	136 JumpIfNotEqual {74}
	137 Move X22, [X19+32]
	138 Compare X22, 0
	139 JumpIfEqual {208}
	140 Move X23, 0xE4E000
	141 Move X24, 0xE4E000
	142 Move X23, [X23+1000]
	143 Move X24, [X24+1008]
	144 Move W21, W31
	145 Move X8, [X22]
	146 Move X1, [X23]
	147 NotImplemented "Instruction LDRH not yet implemented."
	148 Compare X9, 0
	149 JumpIfEqual {156}
	150 Move X10, [X8+176]
	151 Add X10, X10, 8
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Subtract X9, X9, 1
	155 Add X10, X10, 16
	156 Move X0, X22
	157 Move W2, W31
	158 Call 0x1C5D788
	159 NotImplemented "Instruction LDRSW not yet implemented."
	160 Add X8, X8, X9
	161 Add X0, X8, 312
	162 Move X8, [X0]
	163 Move X1, [X0+8]
	164 Move X0, X22
	165 NotImplemented "Instruction BLR not yet implemented."
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X22, [X19+32]
	168 Compare X22, 0
	169 JumpIfEqual {207}
	170 Move X8, [X22]
	171 Move X1, [X24]
	172 NotImplemented "Instruction LDRH not yet implemented."
	173 Compare X9, 0
	174 JumpIfEqual {181}
	175 Move X10, [X8+176]
	176 Add X10, X10, 8
	177 NotImplemented "Instruction LDUR not yet implemented."
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Subtract X9, X9, 1
	180 Add X10, X10, 16
	181 Move X0, X22
	182 Move W2, W31
	183 Call 0x1C5D788
	184 NotImplemented "Instruction LDRSW not yet implemented."
	185 Add X8, X8, X9
	186 Add X0, X8, 312
	187 Move X9, [X0]
	188 Move X2, [X0+8]
	189 Add X8, X31, 0
	190 Move X0, X22
	191 Move W1, W21
	192 NotImplemented "Instruction BLR not yet implemented."
	193 Move V0, [X31]
	194 Move V1, [X31+16]
	195 Move V2, [X31+2]
	196 Add X0, X31, 48
	197 Move X1, X31
	198 Move [X31+48], V0
	199 Move [X31+56], V1
	200 Move [X31+5], V2
	201 Call CustomAttributeNamedArgument.GetHashCode, X0
	202 Move X22, [X19+32]
	203 Add W20, W20, W0
	204 Add W21, W21, 1
	205 Compare X22, 0
	206 JumpIfNotEqual {145}
	207 Call 0x1C17F20
	208 Move W0, W20
	209 Move X20, [X31+160]
	210 Move X19, [X31+168]
	211 Move X22, [X31+144]
	212 Move X21, [X31+152]
	213 Move X24, [X31+128]
	214 Move X23, [X31+136]
	215 Move X30, [X31+112]
	216 Add X31, X31, 176
	217 Return X0

