Type: System.Reflection.TypeFilter

Method: System.Void .ctor(System.Object object, System.IntPtr method)

Disassembly:
	0x032D030C LDP X22, X21, [X31 + 0x20]
	0x032D0310 LDP X24, X23, [X31 + 0x10]
	0x032D0314 LDP X30, X25, [X31], #0x40
	0x032D0318 RET
	0x032D031C ADRP X0, 0xE28000
	0x032D0320 LDR X0, [X0 + 0x528]
	0x032D0324 BL 0x1C16D08
	0x032D0328 BL 0x1C16F10
	0x032D032C MOV X19, X0
	0x032D0330 ADRP X0, 0xE55000
	0x032D0334 LDR X0, [X0 + 0xEA0]
	0x032D0338 BL 0x1C16D08
	0x032D033C MOV X1, X0
	0x032D0340 MOV X0, X19
	0x032D0344 MOV X2, X31
	0x032D0348 BL 0x330E100
	0x032D034C ADRP X0, 0xE55000
	0x032D0350 LDR X0, [X0 + 0xEA8]
	0x032D0354 BL 0x1C16D08
	0x032D0358 MOV X1, X0
	0x032D035C MOV X0, X19
	0x032D0360 BL 0x1C16DEC
	0x032D0364 BL 0x1C16F28
	0x032D0368 ADRP X0, 0xE28000
	0x032D036C LDR X0, [X0 + 0x528]
	0x032D0370 BL 0x1C16D08
	0x032D0374 BL 0x1C16F10
	0x032D0378 MOV X19, X0
	0x032D037C ADRP X0, 0xE55000
	0x032D0380 LDR X0, [X0 + 0xEB0]
	0x032D0384 B 0x32D0338
	0x032D0388 BL 0x1C16F20
	0x032D038C MOV X0, X22
	0x032D0390 MOV X1, X23
	0x032D0394 BL 0x1C171E0
	0x032D0398 STP X30, X21, [X31 - 0x20]!
	0x032D039C STP X20, X19, [X31 + 0x10]
	0x032D03A0 ADRP X20, 0x110C000
	0x032D03A4 ADRP X21, 0xE23000
	0x032D03A8 LDRB W8, [X20 + 0x90A]
	0x032D03AC LDR X21, [X21 + 0x6C0]
	0x032D03B0 MOV X19, X0
	0x032D03B4 TBNZ X8, 0x0, 0x32D03CC
	0x032D03B8 ADRP X0, 0xE23000
	0x032D03BC LDR X0, [X0 + 0x6C0]
	0x032D03C0 BL 0x1C16CF4
	0x032D03C4 MOVZ W8, 0x1
	0x032D03C8 STRB W8, [X20 + 0x90A]
	0x032D03CC LDR X0, [X21]
	0x032D03D0 LDR W8, [X0 + 0xE0]
	0x032D03D4 CBNZ W8, 0x32D03DC
	0x032D03D8 BL 0x1C16DFC
	0x032D03DC MOV X0, X19
	0x032D03E0 LDP X20, X19, [X31 + 0x10]
	0x032D03E4 MOV X1, X31
	0x032D03E8 LDP X30, X21, [X31], #0x20
	0x032D03EC B 0x3396B58
	0x032D03F0 MOV W0, W31
	0x032D03F4 RET
	0x032D03F8 MOV W0, W31
	0x032D03FC RET
	0x032D0400 MOV W0, W31
	0x032D0404 RET
	0x032D0408 MOV W0, W31
	0x032D040C RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+8]
	007 Move [X0+32], X1
	008 Move [X0+40], X2
	009 Move X19, X0
	010 Move X20, X2
	011 Move [X0+16], X8
	012 Move W22, [X2+82]
	013 Move [X0+64], X0
	014 Move X0, X2
	015 Move X21, X1
	016 Call 0x1C17D84
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {24}
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X8, -24219648
	023 Add X8, X8, 2784
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W8, [X19+112]
	026 Compare W8, 0
	027 JumpIfEqual {49}
	028 Move X0, X20
	029 Call 0x1C17D7C
	030 Move W21, W0
	031 Move X0, X20
	032 Call 0x1C18238
	033 Move TEMP, X21
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {51}
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {57}
	041 Move X8, -24219648
	042 Add X8, X8, 3068
	043 Compare X21, 0
	044 JumpIfEqual {71}
	045 Move X8, [X19+16]
	046 Move X9, [X19+32]
	047 Move [X19+24], X8
	048 Move [X19+64], X9
	049 Move X8, -24219648
	050 Add X8, X8, 2748
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {59}
	055 Move X8, -24219648
	056 Add X8, X8, 2852
	057 Move X8, -24219648
	058 Add X8, X8, 2992
	059 Move X8, -24219648
	060 Add X8, X8, 2804
	061 Move [X19+24], X8
	062 Move X8, -24219648
	063 Add X8, X8, 2648
	064 Move [X19+56], X8
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X30, [X31+48]
	070 Return 
	071 Move X1, -41631744
	072 Add X1, X1, 3811
	073 Move X0, X31
	074 Call 0x1C17F3C
	075 Move X1, X31
	076 Call 0x1C17DEC

Method: System.Boolean Invoke(System.Type m, System.Object filterCriteria)

Disassembly:
	0x032D3F90 CMP W23, W0
	0x032D3F94 B.GE 0x32D40A8
	0x032D3F98 ADRP X8, 0xE22000
	0x032D3F9C LDR X8, [X8 + 0xC48]
	0x032D3FA0 LDR X0, [X8]

ISIL:
	001 Move X8, [X0+64]
	002 Move X4, [X0+24]
	003 Move X3, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X4

