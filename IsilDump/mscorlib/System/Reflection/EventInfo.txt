Type: System.Reflection.EventInfo

Method: System.Void .ctor()

Disassembly:
	0x032CDA58 MOV X0, X20
	0x032CDA5C MOV W1, W31

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Reflection.MemberTypes get_MemberType()

Disassembly:
	0x032CDA68 ADRP X8, 0xE58000
	0x032CDA6C LDR X8, [X8 + 0xC88]

ISIL:
	001 Move W0, 2
	002 Return X0

Method: System.Reflection.MethodInfo GetAddMethod(System.Boolean nonPublic)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Reflection.MethodInfo GetRemoveMethod(System.Boolean nonPublic)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Reflection.MethodInfo GetRaiseMethod(System.Boolean nonPublic)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Type get_EventHandlerType()

Disassembly:
	0x032CDA70 MOV W1, W0
	0x032CDA74 LDR X8, [X8]
	0x032CDA78 MOV X0, X8
	0x032CDA7C BL 0x1C16D6C
	0x032CDA80 CBZ X0, 0x32CDBDC
	0x032CDA84 LDR W8, [X0 + 0x18]
	0x032CDA88 MOV X22, X0
	0x032CDA8C CMP W8, 0x1
	0x032CDA90 B.LT 0x32CDB3C
	0x032CDA94 ADRP X28, 0xE30000
	0x032CDA98 LDR X28, [X28 + 0x968]
	0x032CDA9C MOV X23, X31
	0x032CDAA0 ADD X27, X22, 0x20
	0x032CDAA4 MOV X0, X20
	0x032CDAA8 MOV W1, W23
	0x032CDAAC MOV X2, X31
	0x032CDAB0 BL 0x3395BDC
	0x032CDAB4 LDR X8, [X26]
	0x032CDAB8 LDR X25, [X28]
	0x032CDABC MOV X24, X0
	0x032CDAC0 LDR W9, [X8 + 0xE0]
	0x032CDAC4 CBNZ W9, 0x32CDAD0
	0x032CDAC8 MOV X0, X8
	0x032CDACC BL 0x1C16DFC
	0x032CDAD0 MOV X0, X25
	0x032CDAD4 MOV X1, X31
	0x032CDAD8 BL 0x338C698
	0x032CDADC MOV X1, X0
	0x032CDAE0 MOV X0, X21
	0x032CDAE4 MOV X2, X31
	0x032CDAE8 BL 0x3395194
	0x032CDAEC MOV X1, X21
	0x032CDAF0 CBZ X24, 0x32CDB0C
	0x032CDAF4 MOV X1, X21
	0x032CDAF8 TBZ X0, 0x0, 0x32CDB0C
	0x032CDAFC MOV X0, X24
	0x032CDB00 MOV X1, X31
	0x032CDB04 BL 0x33BE520
	0x032CDB08 MOV X1, X0
	0x032CDB0C ADD X0, X31, 0x0
	0x032CDB10 MOV X2, X24
	0x032CDB14 STP X31, X31, [X31]
	0x032CDB18 BL 0x32CD938
	0x032CDB1C LDR W8, [X22 + 0x18]
	0x032CDB20 CMP X23, X8
	0x032CDB24 B.CS 0x32CDB90
	0x032CDB28 LDR V0, [X31]
	0x032CDB2C STR V0, [X27, X23, LSL]
	0x032CDB30 ADD X23, X23, 0x1
	0x032CDB34 CMP X23, W8, SXTW
	0x032CDB38 B.LT 0x32CDAA4
	0x032CDB3C ADRP X8, 0xE58000
	0x032CDB40 LDR X8, [X8 + 0xCC8]
	0x032CDB44 LDR X0, [X8]
	0x032CDB48 BL 0x1C16F10
	0x032CDB4C ADRP X8, 0xE58000
	0x032CDB50 LDR X8, [X8 + 0xCC0]
	0x032CDB54 MOV X1, X22
	0x032CDB58 MOV X20, X0
	0x032CDB5C LDR X2, [X8]
	0x032CDB60 BL 0x252C030
	0x032CDB64 STR X20, [X19 + 0x8]
	0x032CDB68 B 0x32CDB70
	0x032CDB6C STP X21, X31, [X19]
	0x032CDB70 LDP X20, X19, [X31 + 0x60]
	0x032CDB74 LDP X22, X21, [X31 + 0x50]
	0x032CDB78 LDP X24, X23, [X31 + 0x40]
	0x032CDB7C LDP X26, X25, [X31 + 0x30]
	0x032CDB80 LDP X28, X27, [X31 + 0x20]
	0x032CDB84 LDR X30, [X31 + 0x10]
	0x032CDB88 ADD X31, X31, 0x70
	0x032CDB8C RET
	0x032CDB90 BL 0x1C16F28
	0x032CDB94 ADRP X0, 0xE2B000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1110000
	007 Move W8, [X20+2275]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xE59000
	014 Move X0, [X0+3080]
	015 Call 0x1C17CF4
	016 Move X0, 0xE27000
	017 Move X0, [X0+1728]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2275], W8
	021 Move X8, [X19]
	022 Move W1, 1
	023 Move X0, X19
	024 Move X9, [X8+584]
	025 Move X2, [X8+592]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Compare X0, 0
	028 JumpIfEqual {86}
	029 Move X8, [X0]
	030 Move X19, 0xE59000
	031 Move X20, 0xE27000
	032 Move X9, [X8+856]
	033 Move X1, [X8+864]
	034 Move X19, [X19+3080]
	035 Move X20, [X20+1728]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X8, [X20]
	038 Move X20, [X19]
	039 Move X19, X0
	040 Move W9, [X8+224]
	041 Compare W9, 0
	042 JumpIfNotEqual {45}
	043 Move X0, X8
	044 Call 0x1C17DFC
	045 Move X0, X20
	046 Move X1, X31
	047 Call Type.GetTypeFromHandle, X0
	048 Compare X19, 0
	049 JumpIfEqual {86}
	050 Move W8, [X19+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X20, X0
	053 Move W22, W31
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Add X8, X19, W22
	056 Move X0, [X8+32]
	057 Compare X0, 0
	058 JumpIfEqual {86}
	059 Move X8, [X0]
	060 Move X9, [X8+472]
	061 Move X1, [X8+480]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Compare X0, 0
	064 JumpIfEqual {86}
	065 Move X8, [X0]
	066 Move X1, X20
	067 Move X21, X0
	068 Move X9, [X8+664]
	069 Move X2, [X8+672]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {79}
	075 Move W8, [X19+24]
	076 Add W22, W22, 1
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X21, X31
	079 Move X0, X21
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X22, [X31+16]
	083 Move X21, [X31+24]
	084 Move X30, [X31+48]
	085 Return X0
	086 Call 0x1C17F20
	087 Call 0x1C17F28

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x032CDB98 LDR X0, [X0 + 0x528]
	0x032CDB9C BL 0x1C16D08

ISIL:
	001 Move X2, X31
	002 Call Object.Equals, X0, X1
	003 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x032CDBA8 ADRP X0, 0xE58000
	0x032CDBAC LDR X0, [X0 + 0xCD0]

ISIL:
	001 Move X1, X31
	002 Call Object.GetHashCode, X0
	003 Return X0

Method: System.Boolean op_Equality(System.Reflection.EventInfo left, System.Reflection.EventInfo right)

Disassembly:
	0x032CDBB8 MOV X0, X19
	0x032CDBBC MOV X2, X31
	0x032CDBC0 BL 0x330E100
	0x032CDBC4 ADRP X0, 0xE58000
	0x032CDBC8 LDR X0, [X0 + 0xCD8]
	0x032CDBCC BL 0x1C16D08
	0x032CDBD0 MOV X1, X0
	0x032CDBD4 MOV X0, X19
	0x032CDBD8 BL 0x1C16DEC
	0x032CDBDC BL 0x1C16F20
	0x032CDBE0 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, W31
	003 Compare X0, 0
	004 JumpIfEqual {12}
	005 Compare X1, 0
	006 JumpIfEqual {12}
	007 Move X8, [X0]
	008 Move X3, [X8+312]
	009 Move X2, [X8+320]
	010 CallNoReturn X3
	011 Move W8, 1
	012 Move W0, W8
	013 Return X0

Method: System.Boolean op_Inequality(System.Reflection.EventInfo left, System.Reflection.EventInfo right)

Disassembly:
	0x032CDBE4 STP X20, X19, [X31 + 0x10]
	0x032CDBE8 ADRP X20, 0x110F000
	0x032CDBEC ADRP X21, 0xE26000
	0x032CDBF0 LDRB W8, [X20 + 0x8E7]
	0x032CDBF4 LDR X21, [X21 + 0x6C0]
	0x032CDBF8 MOV X19, X0
	0x032CDBFC TBNZ X8, 0x0, 0x32CDC2C
	0x032CDC00 ADRP X0, 0xE58000
	0x032CDC04 LDR X0, [X0 + 0xCE0]
	0x032CDC08 BL 0x1C16CF4
	0x032CDC0C ADRP X0, 0xE58000
	0x032CDC10 LDR X0, [X0 + 0xCE8]
	0x032CDC14 BL 0x1C16CF4
	0x032CDC18 ADRP X0, 0xE26000
	0x032CDC1C LDR X0, [X0 + 0x6C0]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, 1
	003 Compare X0, 0
	004 JumpIfEqual {15}
	005 Compare X1, 0
	006 JumpIfEqual {15}
	007 Move [X31-16], X30
	008 Move X8, [X0]
	009 Move X9, [X8+312]
	010 Move X2, [X8+320]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Xor W8, W0, 1
	013 Move X30, [X31+16]
	014 Move W8, W31
	015 And W0, W8, 1
	016 Return X0

Method: System.Reflection.EventInfo internal_from_handle_type(System.IntPtr event_handle, System.IntPtr type_handle)

Disassembly:
	0x032CDC20 BL 0x1C16CF4

ISIL:
	001 Call 0x1C72818
	002 Return X0

Method: System.Reflection.EventInfo GetEventFromHandle(Mono.RuntimeEventHandle handle, System.RuntimeTypeHandle reflectedType)

Disassembly:
	0x032CDC24 MOVZ W8, 0x1
	0x032CDC28 STRB W8, [X20 + 0x8E7]
	0x032CDC2C LDR X0, [X21]
	0x032CDC30 LDR W8, [X0 + 0xE0]
	0x032CDC34 CBNZ W8, 0x32CDC3C
	0x032CDC38 BL 0x1C16DFC
	0x032CDC3C MOV X0, X19
	0x032CDC40 MOV X1, X31
	0x032CDC44 MOV X2, X31
	0x032CDC48 BL 0x3395194
	0x032CDC4C TBNZ X0, 0x0, 0x32CDCF8
	0x032CDC50 ADRP X21, 0xE58000
	0x032CDC54 LDR X21, [X21 + 0xCE0]
	0x032CDC58 MOV X0, X19
	0x032CDC5C LDR X1, [X21]
	0x032CDC60 BL 0x1C16E00
	0x032CDC64 CBZ X0, 0x32CDCAC
	0x032CDC68 LDR X8, [X0]
	0x032CDC6C LDR X1, [X21]
	0x032CDC70 MOV X20, X0
	0x032CDC74 LDRH W9, [X8 + 0x12E]
	0x032CDC78 CBZ X9, 0x32CDC9C
	0x032CDC7C LDR X10, [X8 + 0xB0]
	0x032CDC80 ADD X10, X10, 0x8
	0x032CDC84 LDUR X11, [X10 - 0x8]
	0x032CDC88 CMP X11, X1
	0x032CDC8C B.EQ 0x32CDCD8
	0x032CDC90 SUBS X9, X9, 0x1
	0x032CDC94 ADD X10, X10, 0x10
	0x032CDC98 B.NE 0x32CDC84
	0x032CDC9C MOV X0, X20
	0x032CDCA0 MOV W2, W31
	0x032CDCA4 BL 0x1C5C788
	0x032CDCA8 B 0x32CDCE4
	0x032CDCAC ADRP X8, 0xE58000
	0x032CDCB0 LDR X8, [X8 + 0xCE8]
	0x032CDCB4 LDR X0, [X8]
	0x032CDCB8 BL 0x1C16F10
	0x032CDCBC MOV X1, X19
	0x032CDCC0 MOV X20, X0
	0x032CDCC4 BL 0x32CDD40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X2, X31
	007 Move X20, X0
	008 Call IntPtr.op_Equality, X0, X1
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {22}
	013 Move X0, X20
	014 Move X1, X19
	015 Call 0x1C72818
	016 Compare X0, 0
	017 JumpIfEqual {29}
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return X0
	022 Move X0, 0xE2F000
	023 Move X0, [X0+1400]
	024 Call 0x1C17D08
	025 Call 0x1C17F10
	026 Move X19, X0
	027 Move X0, 0xE59000
	028 Move X0, [X0+3088]
	029 Move X0, 0xE2F000
	030 Move X0, [X0+1400]
	031 Call 0x1C17D08
	032 Call 0x1C17F10
	033 Move X19, X0
	034 Move X0, 0xE59000
	035 Move X0, [X0+3096]
	036 Call 0x1C17D08
	037 Move X1, X0
	038 Move X0, X19
	039 Move X2, X31
	040 Call ArgumentException..ctor, X0, X1
	041 Move X0, 0xE59000
	042 Move X0, [X0+3104]
	043 Call 0x1C17D08
	044 Move X1, X0
	045 Move X0, X19
	046 Call 0x1C17DEC

