Type: System.Reflection.RuntimeMethodInfo

Method: System.Reflection.BindingFlags get_BindingFlags()

Disassembly:
	0x032DB814 TBNZ X21, 0x7, 0x32DB85C
	0x032DB818 MOV X19, X31

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Reflection.Module get_Module()

Disassembly:
	0x032DB81C B 0x32DB8F4

ISIL:
No ISIL was generated
Method: System.RuntimeType get_ReflectedTypeInternal()

Disassembly:
	0x032DB8AC STR X21, [X19 + 0x20]
	0x032DB8B0 TBZ X22, 0xD, 0x32DB8F4
	0x032DB8B4 MOV X0, X20
	0x032DB8B8 MOV X1, X31
	0x032DB8BC BL 0x32BFE5C
	0x032DB8C0 MOV X20, X0
	0x032DB8C4 MOVZ W21, 0x1
	0x032DB8C8 CBZ X20, 0x32DB8E0
	0x032DB8CC LDR X8, [X19]
	0x032DB8D0 MOV X0, X20
	0x032DB8D4 LDR X1, [X8 + 0x40]
	0x032DB8D8 BL 0x1C16E00
	0x032DB8DC CBZ X0, 0x32DB914
	0x032DB8E0 LDR W8, [X19 + 0x18]
	0x032DB8E4 CMP W21, W8
	0x032DB8E8 B.CS 0x32DB90C
	0x032DB8EC ADD X8, X19, W21, 0x3, UXTW
	0x032DB8F0 STR X20, [X8 + 0x20]
	0x032DB8F4 MOV X0, X19
	0x032DB8F8 LDP X20, X19, [X31 + 0x40]
	0x032DB8FC LDP X22, X21, [X31 + 0x30]
	0x032DB900 LDR X30, [X31 + 0x20]
	0x032DB904 ADD X31, X31, 0x50
	0x032DB908 RET
	0x032DB90C BL 0x1C16F28
	0x032DB910 BL 0x1C16F20
	0x032DB914 BL 0x1C16F44
	0x032DB918 MOV X1, X31
	0x032DB91C BL 0x1C16DEC
	0x032DB920 SUB X31, X31, 0x50
	0x032DB924 STP X30, X23, [X31 + 0x20]
	0x032DB928 STP X22, X21, [X31 + 0x30]
	0x032DB92C STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1102000
	005 Move W8, [X20+2393]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE42000
	012 Move X0, [X0+1256]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2393], W8
	016 Move X8, [X19]
	017 Move X0, X19
	018 Move X9, [X8+456]
	019 Move X1, [X8+464]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Compare X0, 0
	022 JumpIfEqual {34}
	023 Move X9, 0xE42000
	024 Move X9, [X9+1256]
	025 Move X8, [X0]
	026 Move X1, [X9]
	027 Move W10, [X8+304]
	028 Move W9, [X1+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X8+200]
	031 Add X8, X8, X9
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return X0
	038 Call 0x1C181E0

Method: System.String FormatNameAndSig(System.Boolean serialization)

Disassembly:
	0x032DB930 ADRP X20, 0x1101000
	0x032DB934 LDRB W8, [X20 + 0x965]
	0x032DB938 MOV X19, X0
	0x032DB93C TBNZ X8, 0x0, 0x32DB978
	0x032DB940 ADRP X0, 0xE4A000
	0x032DB944 LDR X0, [X0 + 0xC78]
	0x032DB948 BL 0x1C16CF4
	0x032DB94C ADRP X0, 0xE4A000
	0x032DB950 LDR X0, [X0 + 0xC80]
	0x032DB954 BL 0x1C16CF4
	0x032DB958 ADRP X0, 0xE4B000
	0x032DB95C LDR X0, [X0 + 0x560]
	0x032DB960 BL 0x1C16CF4
	0x032DB964 ADRP X0, 0xE18000
	0x032DB968 LDR X0, [X0 + 0x6C0]
	0x032DB96C BL 0x1C16CF4
	0x032DB970 MOVZ W8, 0x1
	0x032DB974 STRB W8, [X20 + 0x965]
	0x032DB978 ADRP X20, 0xE4A000
	0x032DB97C LDR X20, [X20 + 0xC78]
	0x032DB980 LDR X0, [X19 + 0x10]
	0x032DB984 MOVI V0.2D, 0x0
	0x032DB988 ADD X1, X31, 0x0
	0x032DB98C STP V0, V0, [X31]
	0x032DB990 BL 0x1C841C8
	0x032DB994 LDP W23, W21, [X31 + 0x10]
	0x032DB998 TBNZ X23, 0xD, 0x32DB9A8
	0x032DB99C TBNZ X21, 0x7, 0x32DB9E0
	0x032DB9A0 MOV X20, X31
	0x032DB9A4 B 0x32DBAC4
	0x032DB9A8 LDR X0, [X20]
	0x032DB9AC ANDS W31, W21, 0x80
	0x032DB9B0 MOVZ W8, 0x1
	0x032DB9B4 CINC W1, W8, NE
	0x032DB9B8 BL 0x1C16D6C
	0x032DB9BC MOV X20, X0
	0x032DB9C0 TBNZ X21, 0x7, 0x32DB9F0
	0x032DB9C4 MOV X0, X19
	0x032DB9C8 BL 0x32DBAF0
	0x032DB9CC CBZ X20, 0x32DBADC
	0x032DB9D0 MOV X19, X0
	0x032DB9D4 MOV W21, W31
	0x032DB9D8 CBNZ X19, 0x32DBA9C
	0x032DB9DC B 0x32DBAB0
	0x032DB9E0 LDR X0, [X20]
	0x032DB9E4 UBFM W1, W21, 0x7, 0x7
	0x032DB9E8 BL 0x1C16D6C
	0x032DB9EC MOV X20, X0
	0x032DB9F0 ADRP X22, 0xE18000
	0x032DB9F4 LDR X22, [X22 + 0x6C0]
	0x032DB9F8 ADRP X8, 0xE4B000
	0x032DB9FC LDR X0, [X22]
	0x032DBA00 LDR X8, [X8 + 0x560]
	0x032DBA04 LDR W9, [X0 + 0xE0]
	0x032DBA08 LDR X21, [X8]
	0x032DBA0C CBNZ W9, 0x32DBA14
	0x032DBA10 BL 0x1C16DFC
	0x032DBA14 MOV X0, X21
	0x032DBA18 MOV X1, X31
	0x032DBA1C BL 0x338C698
	0x032DBA20 CBZ X0, 0x32DBADC
	0x032DBA24 LDR X8, [X22]
	0x032DBA28 MOV X2, X31
	0x032DBA2C LDR X8, [X8 + 0xB8]
	0x032DBA30 LDR X1, [X8 + 0x10]
	0x032DBA34 BL 0x3397418
	0x032DBA38 ADRP X8, 0xE4A000
	0x032DBA3C LDR X8, [X8 + 0xC80]
	0x032DBA40 MOV X22, X0
	0x032DBA44 LDR X8, [X8]
	0x032DBA48 MOV X0, X8
	0x032DBA4C BL 0x1C16F10
	0x032DBA50 MOV X1, X22
	0x032DBA54 MOV X21, X0
	0x032DBA58 BL 0x32D7338
	0x032DBA5C CBZ X20, 0x32DBADC
	0x032DBA60 CBZ X21, 0x32DBA78
	0x032DBA64 LDR X8, [X20]
	0x032DBA68 MOV X0, X21
	0x032DBA6C LDR X1, [X8 + 0x40]
	0x032DBA70 BL 0x1C16E00
	0x032DBA74 CBZ X0, 0x32DBAE4
	0x032DBA78 LDR W8, [X20 + 0x18]
	0x032DBA7C CBZ W8, 0x32DBAE0
	0x032DBA80 STR X21, [X20 + 0x20]
	0x032DBA84 TBZ X23, 0xD, 0x32DBAC4
	0x032DBA88 MOV X0, X19
	0x032DBA8C BL 0x32DBAF0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1102000
	008 Move X21, 0xE19000
	009 Move W8, [X22+2394]
	010 Move X21, [X21+2288]
	011 Move W19, W1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xE19000
	018 Move X0, [X0+2288]
	019 Call 0x1C17CF4
	020 Move X0, 0xE24000
	021 Move X0, [X0+784]
	022 Call 0x1C17CF4
	023 Move X0, 0xE1A000
	024 Move X0, [X0+1544]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+2394], W8
	028 Move X8, [X20]
	029 Move X0, X20
	030 Move X9, [X8+424]
	031 Move X1, [X8+432]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move X8, [X21]
	034 Move X22, X0
	035 Move X0, X8
	036 Call 0x1C17F10
	037 Move X1, X22
	038 Move X2, X31
	039 Move X21, X0
	040 Call StringBuilder..ctor, X0, X1
	041 Move X8, [X20]
	042 Move X0, X20
	043 Move X9, [X8+728]
	044 Move X1, [X8+736]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {62}
	050 And W31, W19, 1
	051 Move W8, 259
	052 NotImplemented "Instruction CSEL not yet implemented."
	053 Move X0, X20
	054 Move X2, X31
	055 Call RuntimeMethodHandle.ConstructInstantiation, X0, X1
	056 Compare X21, 0
	057 JumpIfEqual {103}
	058 Move X1, X0
	059 Move X0, X21
	060 Move X2, X31
	061 Call StringBuilder.Append, X0, X1
	062 Compare X21, 0
	063 JumpIfEqual {103}
	064 Move X8, 0xE24000
	065 Move X8, [X8+784]
	066 Move X23, 0xE1A000
	067 Move X0, X21
	068 Move X2, X31
	069 Move X1, [X8]
	070 Move X23, [X23+1544]
	071 Call StringBuilder.Append, X0, X1
	072 Move X8, [X20]
	073 Move X0, X20
	074 Move X9, [X8+920]
	075 Move X1, [X8+928]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move X8, [X20]
	078 Move X22, X0
	079 Move X0, X20
	080 Move X9, [X8+632]
	081 Move X1, [X8+640]
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move W2, W0
	084 And W3, W19, 1
	085 Move X0, X21
	086 Move X1, X22
	087 Call RuntimeParameterInfo.FormatParameters, X0, X1, X2, X3
	088 Move X1, [X23]
	089 Move X0, X21
	090 Move X2, X31
	091 Call StringBuilder.Append, X0, X1
	092 Move X8, [X21]
	093 Move X0, X21
	094 Move X20, [X31+32]
	095 Move X19, [X31+40]
	096 Move X22, [X31+16]
	097 Move X21, [X31+24]
	098 Move X2, [X8+360]
	099 Move X1, [X8+368]
	100 Move X30, [X31+48]
	101 Move X23, [X31+56]
	102 CallNoReturn X2
	103 Call 0x1C17F20

Method: System.Delegate CreateDelegate(System.Type delegateType, System.Object target)

Disassembly:
	0x032DBC84 CMP W8, 0x100
	0x032DBC88 MOVZ W8, 0x1
	0x032DBC8C CINC W27, W8, NE
	0x032DBC90 B 0x32DBCA8
	0x032DBC94 MOVZ W27, 0x3
	0x032DBC98 B 0x32DBCA8

ISIL:
	001 Move X8, X0
	002 Move X0, X1
	003 Move X1, X2
	004 Move X2, X8
	005 Move X3, X31
	006 Call Delegate.CreateDelegate, X0, X1, X2
	007 Return X0

Method: System.String ToString()

Disassembly:
	0x032DBC9C MOVZ W27, 0x4
	0x032DBCA0 B 0x32DBCA8
	0x032DBCA4 MOVZ W27, 0x2
	0x032DBCA8 LDR X8, [X19]
	0x032DBCAC AND W9, W28, 0x30
	0x032DBCB0 CMP W9, 0x10
	0x032DBCB4 CSET W26, EQ
	0x032DBCB8 LDR X9, [X8 + 0x268]
	0x032DBCBC LDR X1, [X8 + 0x270]
	0x032DBCC0 AND W8, W28, 0x3000
	0x032DBCC4 CMP W8, 0x1000
	0x032DBCC8 MOV X0, X19
	0x032DBCCC CSET W25, EQ
	0x032DBCD0 BLR X9
	0x032DBCD4 LDR X8, [X21]
	0x032DBCD8 MOV W22, W0
	0x032DBCDC MOVZ W1, 0x1
	0x032DBCE0 MOV X0, X8
	0x032DBCE4 BL 0x1C16D6C
	0x032DBCE8 LDR X8, [X20]
	0x032DBCEC LDR X20, [X23]
	0x032DBCF0 MOV X19, X0
	0x032DBCF4 LDR W9, [X8 + 0xE0]
	0x032DBCF8 CBNZ W9, 0x32DBD04
	0x032DBCFC MOV X0, X8
	0x032DBD00 BL 0x1C16DFC
	0x032DBD04 MOV X0, X20
	0x032DBD08 MOV X1, X31
	0x032DBD0C BL 0x338C698
	0x032DBD10 LDR X2, [X31 + 0x3A0]
	0x032DBD14 MOV X1, X0
	0x032DBD18 ADD X0, X31, 0x380
	0x032DBD1C MOV X3, X31
	0x032DBD20 STR X31, [X31 + 0x388]
	0x032DBD24 STR X31, [X31 + 0x380]
	0x032DBD28 BL 0x32CD938

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1102000
	006 Move W8, [X20+2395]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE19000
	013 Move X0, [X0+3544]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2395], W8
	017 Move X8, [X19]
	018 Move X0, X19
	019 Move X9, [X8+952]
	020 Move X1, [X8+960]
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Compare X0, 0
	023 JumpIfEqual {45}
	024 Move X21, 0xE19000
	025 Move X21, [X21+3544]
	026 Move X1, X31
	027 Call Type.FormatTypeName, X0
	028 Move X8, [X19]
	029 Move X20, X0
	030 Move X0, X19
	031 Move W1, W31
	032 Move X9, [X8+888]
	033 Move X2, [X8+896]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X1, [X21]
	036 Move X2, X0
	037 Move X0, X20
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X3, X31
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Call String.Concat, X0, X1, X2
	044 Return X0
	045 Call 0x1C17F20

Method: System.Reflection.RuntimeModule GetRuntimeModule()

Disassembly:
	0x032DB820 LDR X0, [X19]
	0x032DB824 ANDS W31, W21, 0x80
	0x032DB828 MOVZ W8, 0x1
	0x032DB82C CINC W1, W8, NE
	0x032DB830 BL 0x1C16D6C
	0x032DB834 MOV X19, X0
	0x032DB838 TBNZ X21, 0x7, 0x32DB86C
	0x032DB83C MOV X0, X20
	0x032DB840 MOV X1, X31
	0x032DB844 BL 0x32BFE5C
	0x032DB848 CBZ X19, 0x32DB910
	0x032DB84C MOV X20, X0
	0x032DB850 MOV W21, W31
	0x032DB854 CBNZ X20, 0x32DB8CC
	0x032DB858 B 0x32DB8E0
	0x032DB85C LDR X0, [X19]
	0x032DB860 UBFM W1, W21, 0x7, 0x7
	0x032DB864 BL 0x1C16D6C
	0x032DB868 MOV X19, X0
	0x032DB86C ADRP X8, 0xE4B000
	0x032DB870 LDR X8, [X8 + 0x558]
	0x032DB874 LDR X0, [X8]
	0x032DB878 BL 0x1C16F10
	0x032DB87C MOV X1, X31
	0x032DB880 MOV X21, X0
	0x032DB884 BL 0x32BFE14
	0x032DB888 CBZ X19, 0x32DB910
	0x032DB88C CBZ X21, 0x32DB8A4
	0x032DB890 LDR X8, [X19]
	0x032DB894 MOV X0, X21
	0x032DB898 LDR X1, [X8 + 0x40]
	0x032DB89C BL 0x1C16E00
	0x032DB8A0 CBZ X0, 0x32DB914
	0x032DB8A4 LDR W8, [X19 + 0x18]
	0x032DB8A8 CBZ W8, 0x32DB90C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1102000
	005 Move W8, [X20+2396]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE42000
	012 Move X0, [X0+1256]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2396], W8
	016 Move X8, [X19]
	017 Move X0, X19
	018 Move X9, [X8+440]
	019 Move X1, [X8+448]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Compare X0, 0
	022 JumpIfEqual {41}
	023 Move X9, 0xE42000
	024 Move X9, [X9+1256]
	025 Move X8, [X0]
	026 Move X1, [X9]
	027 Move W10, [X8+304]
	028 Move W9, [X1+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X8+200]
	031 Add X8, X8, X9
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+32]
	038 Call RuntimeType.GetRuntimeModule, X0
	039 Return X0
	040 Call 0x1C181E0
	041 Call 0x1C17F20

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x032DBD2C CBZ X19, 0x32DC218
	0x032DBD30 LDR W8, [X19 + 0x18]
	0x032DBD34 CBZ W8, 0x32DC214
	0x032DBD38 LDR V0, [X31 + 0x38]
	0x032DBD3C ADRP X8, 0xE4B000
	0x032DBD40 MOV X1, X31
	0x032DBD44 STR V0, [X19 + 0x2]
	0x032DBD48 LDR X8, [X8 + 0x580]
	0x032DBD4C LDR X0, [X8]
	0x032DBD50 BL 0x338C698
	0x032DBD54 ADRP X8, 0xE4B000
	0x032DBD58 LDR X8, [X8 + 0x578]
	0x032DBD5C MOV X21, X0
	0x032DBD60 MOVZ W1, 0x8
	0x032DBD64 LDR X8, [X8]
	0x032DBD68 MOV X0, X8
	0x032DBD6C BL 0x1C16D6C
	0x032DBD70 CBZ X21, 0x32DC218
	0x032DBD74 ADRP X8, 0xE4B000
	0x032DBD78 LDR X8, [X8 + 0x588]
	0x032DBD7C MOV X20, X0
	0x032DBD80 MOV X0, X21
	0x032DBD84 MOV X2, X31
	0x032DBD88 LDR X1, [X8]
	0x032DBD8C BL 0x339756C
	0x032DBD90 LDR X2, [X31 + 0x3A8]
	0x032DBD94 MOV X1, X0
	0x032DBD98 MOVI V0.2D, 0x0
	0x032DBD9C ADD X0, X31, 0x350
	0x032DBDA0 MOV X3, X31
	0x032DBDA4 STP V0, V0, [X31 + 0x360]
	0x032DBDA8 STR V0, [X31 + 0x35]
	0x032DBDAC BL 0x32D2FE4
	0x032DBDB0 CBZ X20, 0x32DC218
	0x032DBDB4 LDP V0, V1, [X31 + 0x350]
	0x032DBDB8 LDR V2, [X31 + 0x37]
	0x032DBDBC STP V0, V1, [X31 + 0x320]
	0x032DBDC0 STR V2, [X31 + 0x34]
	0x032DBDC4 LDR W8, [X20 + 0x18]
	0x032DBDC8 CBZ W8, 0x32DC214
	0x032DBDCC LDP V2, V0, [X31 + 0x330]
	0x032DBDD0 LDR V1, [X31 + 0x32]
	0x032DBDD4 ADRP X9, 0xFFFFFFFFFD8BB000
	0x032DBDD8 AND X8, X28, 0x7
	0x032DBDDC ADD X9, X9, 0x608
	0x032DBDE0 LDR W29, [X9, X8, LSL #2]
	0x032DBDE4 STP V2, V0, [X20 + 0x30]
	0x032DBDE8 STR V1, [X20 + 0x2]
	0x032DBDEC ADRP X8, 0xE4B000
	0x032DBDF0 LDR X8, [X8 + 0x5A0]
	0x032DBDF4 MOV X0, X21
	0x032DBDF8 MOV X2, X31
	0x032DBDFC LDR X1, [X8]
	0x032DBE00 BL 0x339756C
	0x032DBE04 ADRP X8, 0xE4B000
	0x032DBE08 LDR X8, [X8 + 0x570]
	0x032DBE0C MOV X23, X0
	0x032DBE10 ADD X1, X31, 0x31C
	0x032DBE14 STR W29, [X31 + 0x31C]
	0x032DBE18 LDR X0, [X8]
	0x032DBE1C BL 0x1C16E04
	0x032DBE20 MOV X2, X0
	0x032DBE24 MOVI V0.2D, 0x0
	0x032DBE28 ADD X0, X31, 0x2E0
	0x032DBE2C MOV X1, X23
	0x032DBE30 MOV X3, X31
	0x032DBE34 STP V0, V0, [X31 + 0x2F0]
	0x032DBE38 STR V0, [X31 + 0x2E]
	0x032DBE3C BL 0x32D2FE4
	0x032DBE40 LDP V1, V0, [X31 + 0x2F0]
	0x032DBE44 LDR V2, [X31 + 0x2E]
	0x032DBE48 STP V1, V0, [X31 + 0x2C0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Compare X1, 0
	010 JumpIfEqual {73}
	011 Move X8, [X0]
	012 Move X19, X1
	013 Move X21, X0
	014 Move X9, [X8+424]
	015 Move X1, [X8+432]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move X20, X0
	018 Move X0, X21
	019 Call RuntimeMethodInfo.get_ReflectedTypeInternal, X0
	020 Move X8, [X21]
	021 Move X22, X0
	022 Move X0, X21
	023 Move X9, [X8+360]
	024 Move X1, [X8+368]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move X23, X0
	027 Move X0, X21
	028 Call RuntimeMethodInfo.SerializationToString, X0
	029 Move X8, [X21]
	030 Move X24, X0
	031 Move X0, X21
	032 Move X9, [X8+728]
	033 Move X1, [X8+736]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X8, [X21]
	036 Move W25, W0
	037 Move X0, X21
	038 Move X9, [X8+744]
	039 Move X1, [X8+752]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X6, X31
	042 Move TEMP, X25
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {56}
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {56}
	050 Move X8, [X21]
	051 Move X0, X21
	052 Move X9, [X8+760]
	053 Move X1, [X8+768]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move X6, X0
	056 Move X0, X19
	057 Move X1, X20
	058 Move X2, X22
	059 Move X3, X23
	060 Move X4, X24
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move X22, [X31+32]
	064 Move X21, [X31+40]
	065 Move X24, [X31+16]
	066 Move X23, [X31+24]
	067 Move W5, 8
	068 Move X7, X31
	069 Move X30, [X31+64]
	070 Move X25, [X31+72]
	071 Call MemberInfoSerializationHolder.GetSerializationInfo, X0, X1, X2, X3, X4, X5, X6
	072 Return 
	073 Move X0, 0xE1E000
	074 Move X0, [X0+1320]
	075 Call 0x1C17D08
	076 Call 0x1C17F10
	077 Move X19, X0
	078 Move X0, 0xE43000
	079 Move X0, [X0+728]
	080 Call 0x1C17D08
	081 Move X1, X0
	082 Move X0, X19
	083 Move X2, X31
	084 Call ArgumentNullException..ctor, X0, X1
	085 Move X0, 0xE4C000
	086 Move X0, [X0+1280]
	087 Call 0x1C17D08
	088 Move X1, X0
	089 Move X0, X19
	090 Call 0x1C17DEC

Method: System.String SerializationToString()

Disassembly:
	0x032DBE4C STR V2, [X31 + 0x2B]
	0x032DBE50 LDR W8, [X20 + 0x18]
	0x032DBE54 CMP W8, 0x1
	0x032DBE58 B.LS 0x32DC214
	0x032DBE5C LDP V1, V0, [X31 + 0x2C0]
	0x032DBE60 LDR V2, [X31 + 0x2B]
	0x032DBE64 ADRP X8, 0xE4B000
	0x032DBE68 MOV X0, X21
	0x032DBE6C STP V1, V0, [X20 + 0x60]
	0x032DBE70 STR V2, [X20 + 0x5]
	0x032DBE74 LDR X8, [X8 + 0x5B8]
	0x032DBE78 MOV X2, X31
	0x032DBE7C AND W24, W28, 0x1
	0x032DBE80 LDR X1, [X8]
	0x032DBE84 BL 0x339756C
	0x032DBE88 ADRP X29, 0xE18000
	0x032DBE8C LDR X29, [X29 + 0xB58]
	0x032DBE90 MOV X23, X0
	0x032DBE94 ADD X1, X31, 0x2AC
	0x032DBE98 STRB W24, [X31 + 0x2AC]
	0x032DBE9C LDR X0, [X29]
	0x032DBEA0 BL 0x1C16E04
	0x032DBEA4 MOV X2, X0
	0x032DBEA8 MOVI V0.2D, 0x0
	0x032DBEAC ADD X0, X31, 0x270
	0x032DBEB0 MOV X1, X23
	0x032DBEB4 MOV X3, X31
	0x032DBEB8 STP V0, V0, [X31 + 0x280]
	0x032DBEBC STR V0, [X31 + 0x27]
	0x032DBEC0 BL 0x32D2FE4
	0x032DBEC4 LDP V1, V0, [X31 + 0x280]
	0x032DBEC8 LDR V2, [X31 + 0x27]
	0x032DBECC STP V1, V0, [X31 + 0x250]
	0x032DBED0 STR V2, [X31 + 0x24]
	0x032DBED4 LDR W8, [X20 + 0x18]
	0x032DBED8 CMP W8, 0x2
	0x032DBEDC B.LS 0x32DC214
	0x032DBEE0 LDP V1, V0, [X31 + 0x250]
	0x032DBEE4 LDR V2, [X31 + 0x24]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1102000
	006 Move W8, [X20+2397]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE19000
	013 Move X0, [X0+3544]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2397], W8
	017 Move X8, [X19]
	018 Move X0, X19
	019 Move X9, [X8+952]
	020 Move X1, [X8+960]
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Compare X0, 0
	023 JumpIfEqual {48}
	024 Move X8, [X0]
	025 Move X21, 0xE19000
	026 Move W1, 1
	027 Move X9, [X8+2328]
	028 Move X2, [X8+2336]
	029 Move X21, [X21+3544]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X8, [X19]
	032 Move X20, X0
	033 Move W1, 1
	034 Move X0, X19
	035 Move X9, [X8+888]
	036 Move X2, [X8+896]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X1, [X21]
	039 Move X2, X0
	040 Move X0, X20
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X3, X31
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Call String.Concat, X0, X1, X2
	047 Return X0
	048 Call 0x1C17F20

Method: System.Reflection.MethodBase GetMethodFromHandleNoGenericCheck(System.RuntimeMethodHandle handle)

Disassembly:
	0x032DBEE8 ADRP X8, 0xE4B000
	0x032DBEEC MOV X0, X21
	0x032DBEF0 STP V1, V0, [X20 + 0x90]

ISIL:
	001 Move X1, X31
	002 Move W2, W31
	003 Call 0x1C72B28
	004 Return X0

Method: System.Reflection.MethodBase GetMethodFromHandleNoGenericCheck(System.RuntimeMethodHandle handle, System.RuntimeTypeHandle reflectedType)

Disassembly:
	0x032DBEFC MOV X2, X31
	0x032DBF00 UBFM W24, W28, 0x6, 0x6

ISIL:
	001 Move W2, W31
	002 Call 0x1C72B28
	003 Return X0

Method: System.Reflection.MethodBase GetMethodFromHandleInternalType(System.IntPtr method_handle, System.IntPtr type_handle)

Disassembly:
	0x032DBF04 LDR X1, [X8]
	0x032DBF08 BL 0x339756C

ISIL:
	001 Move W2, 1
	002 Call 0x1C72B28
	003 Return X0

Method: System.Reflection.MethodBase GetMethodFromHandleInternalType_native(System.IntPtr method_handle, System.IntPtr type_handle, System.Boolean genericCheck)

Disassembly:
	0x032DBEF4 STR V2, [X20 + 0x8]
	0x032DBEF8 LDR X8, [X8 + 0x590]

ISIL:
	001 And W2, W2, 1
	002 Call 0x1C72B28
	003 Return X0

Method: System.Void .ctor()

Disassembly:
	0x032DBF0C MOV X23, X0
	0x032DBF10 LDR X0, [X29]

ISIL:
	001 Move X1, X31
	002 Call MethodInfo..ctor, X0
	003 Return 

Method: System.String get_name(System.Reflection.MethodBase method)

Disassembly:
	0x032DBF14 ADD X1, X31, 0x23C

ISIL:
	001 Call 0x1C73118
	002 Return X0

Method: System.Reflection.RuntimeMethodInfo get_base_method(System.Reflection.RuntimeMethodInfo method, System.Boolean definition)

Disassembly:
	0x032DBF18 STRB W24, [X31 + 0x23C]
	0x032DBF1C BL 0x1C16E04

ISIL:
	001 And W1, W1, 1
	002 Call 0x1C72FE4
	003 Return X0

Method: System.Int32 get_metadata_token(System.Reflection.RuntimeMethodInfo method)

Disassembly:
	0x032DBF20 MOV X2, X0

ISIL:
	001 Call 0x1C728C4
	002 Return X0

Method: System.Reflection.MethodInfo GetBaseMethod()

Disassembly:
	0x032DBF24 MOVI V0.2D, 0x0
	0x032DBF28 ADD X0, X31, 0x200

ISIL:
	001 Move W1, W31
	002 Call 0x1C72FE4
	003 Return X0

Method: System.Reflection.ParameterInfo get_ReturnParameter()

Disassembly:
	0x032DBF2C MOV X1, X23

ISIL:
	001 Call MonoMethodInfo.GetReturnParameterInfo, X0
	002 Return X0

Method: System.Type get_ReturnType()

Disassembly:
	0x032DBF30 MOV X3, X31
	0x032DBF34 STP V0, V0, [X31 + 0x210]
	0x032DBF38 STR V0, [X31 + 0x20]
	0x032DBF3C BL 0x32D2FE4
	0x032DBF40 LDP V1, V0, [X31 + 0x210]
	0x032DBF44 LDR V2, [X31 + 0x20]
	0x032DBF48 STP V1, V0, [X31 + 0x1E0]
	0x032DBF4C STR V2, [X31 + 0x1D]
	0x032DBF50 LDR W8, [X20 + 0x18]
	0x032DBF54 CMP W8, 0x3
	0x032DBF58 B.LS 0x32DC214

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X0, [X0+16]
	004 NotImplemented "Instruction MOVI not yet implemented."
	005 Add X1, X31, 0
	006 Move [X31], V0
	007 Move [X31+8], V0
	008 Call 0x1C851C8
	009 Move X0, [X31+8]
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return X0

Method: System.Int32 get_MetadataToken()

Disassembly:
	0x032DBF5C LDP V1, V0, [X31 + 0x1E0]

ISIL:
	001 Call 0x1C728C4
	002 Return X0

Method: System.Reflection.MethodImplAttributes GetMethodImplementationFlags()

Disassembly:
	0x032DBF60 LDR V2, [X31 + 0x1D]
	0x032DBF64 ADRP X8, 0xE4B000
	0x032DBF68 MOV X0, X21
	0x032DBF6C STP V1, V0, [X20 + 0xC0]
	0x032DBF70 STR V2, [X20 + 0xB]
	0x032DBF74 LDR X8, [X8 + 0x5B0]
	0x032DBF78 MOV X2, X31
	0x032DBF7C UBFM W23, W22, 0x7, 0x7
	0x032DBF80 LDR X1, [X8]
	0x032DBF84 BL 0x339756C
	0x032DBF88 MOV X22, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X0, [X0+16]
	004 NotImplemented "Instruction MOVI not yet implemented."
	005 Add X1, X31, 0
	006 Move [X31], V0
	007 Move [X31+8], V0
	008 Call 0x1C851C8
	009 Move W0, [X31+20]
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return X0

Method: System.Reflection.ParameterInfo[] GetParameters()

Disassembly:
	0x032DBF8C LDR X0, [X29]
	0x032DBF90 ADD X1, X31, 0x1CC
	0x032DBF94 STRB W23, [X31 + 0x1CC]
	0x032DBF98 BL 0x1C16E04
	0x032DBF9C MOV X2, X0
	0x032DBFA0 MOVI V0.2D, 0x0
	0x032DBFA4 ADD X0, X31, 0x190
	0x032DBFA8 MOV X1, X22
	0x032DBFAC MOV X3, X31
	0x032DBFB0 STP V0, V0, [X31 + 0x1A0]
	0x032DBFB4 STR V0, [X31 + 0x19]
	0x032DBFB8 BL 0x32D2FE4
	0x032DBFBC LDP V1, V0, [X31 + 0x1A0]
	0x032DBFC0 LDR V2, [X31 + 0x19]
	0x032DBFC4 STP V1, V0, [X31 + 0x170]
	0x032DBFC8 STR V2, [X31 + 0x16]
	0x032DBFCC LDR W8, [X20 + 0x18]
	0x032DBFD0 CMP W8, 0x4
	0x032DBFD4 B.LS 0x32DC214
	0x032DBFD8 LDP V1, V0, [X31 + 0x170]
	0x032DBFDC LDR V2, [X31 + 0x16]
	0x032DBFE0 ADRP X8, 0xE4B000
	0x032DBFE4 MOV X0, X21
	0x032DBFE8 STP V1, V0, [X20 + 0xF0]
	0x032DBFEC STR V2, [X20 + 0xE]
	0x032DBFF0 LDR X8, [X8 + 0x5C0]
	0x032DBFF4 MOV X2, X31
	0x032DBFF8 LDR X1, [X8]
	0x032DBFFC BL 0x339756C
	0x032DC000 ADRP X8, 0xE4A000
	0x032DC004 LDR X8, [X8 + 0x568]
	0x032DC008 MOV X22, X0
	0x032DC00C ADD X1, X31, 0x15C
	0x032DC010 STR W27, [X31 + 0x15C]
	0x032DC014 LDR X0, [X8]
	0x032DC018 BL 0x1C16E04

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1102000
	005 Move W8, [X20+2398]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE4C000
	012 Move X0, [X0+1288]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2398], W8
	016 Move X0, [X19+16]
	017 Move X1, X19
	018 Call 0x1C8522C
	019 Compare X0, 0
	020 JumpIfEqual {43}
	021 Move X1, [X0+24]
	022 Move X19, X0
	023 Compare X1, 0
	024 JumpIfEqual {38}
	025 Move X8, 0xE4C000
	026 Move X8, [X8+1288]
	027 Move X0, [X8]
	028 Call 0x1C17D6C
	029 Move W4, [X19+24]
	030 Move X20, X0
	031 Move X0, X19
	032 Move W1, W31
	033 Move X2, X20
	034 Move W3, W31
	035 Move X5, X31
	036 Call Array.FastCopy, X0, X1, X2, X3, X4
	037 Move X19, X20
	038 Move X0, X19
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return X0
	043 Call 0x1C17F20

Method: System.Reflection.ParameterInfo[] GetParametersInternal()

Disassembly:
	0x032DC01C MOV X2, X0
	0x032DC020 MOVI V0.2D, 0x0
	0x032DC024 ADD X0, X31, 0x120

ISIL:
	001 Move X1, X0
	002 Move X0, [X0+16]
	003 Call 0x1C8522C
	004 Return X0

Method: System.Int32 GetParametersCount()

Disassembly:
	0x032DC028 MOV X1, X22
	0x032DC02C MOV X3, X31
	0x032DC030 STP V0, V0, [X31 + 0x130]
	0x032DC034 STR V0, [X31 + 0x12]
	0x032DC038 BL 0x32D2FE4
	0x032DC03C LDP V1, V0, [X31 + 0x130]
	0x032DC040 LDR V2, [X31 + 0x12]
	0x032DC044 STP V1, V0, [X31 + 0x100]
	0x032DC048 STR V2, [X31 + 0xF]

ISIL:
	001 Move [X31-16], X30
	002 Move X1, X0
	003 Move X0, [X0+16]
	004 Call 0x1C8522C
	005 Compare X0, 0
	006 JumpIfEqual {10}
	007 Move W0, [X0+24]
	008 Move X30, [X31+16]
	009 Return X0
	010 Call 0x1C17F20

Method: System.Object InternalInvoke(System.Object obj, System.Object[] parameters, out System.Exception exc)

Disassembly:
	0x032DC04C LDR W8, [X20 + 0x18]

ISIL:
	001 Call 0x1C728C8
	002 Return X0

Method: System.Object Invoke(System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture)

Disassembly:
	0x032DC050 CMP W8, 0x5
	0x032DC054 B.LS 0x32DC214
	0x032DC058 LDP V1, V0, [X31 + 0x100]
	0x032DC05C LDR V2, [X31 + 0xF]
	0x032DC060 ADRP X8, 0xE4A000
	0x032DC064 MOV X0, X21
	0x032DC068 STP V1, V0, [X20 + 0x120]
	0x032DC06C STR V2, [X20 + 0x11]
	0x032DC070 LDR X8, [X8 + 0x5A8]
	0x032DC074 MOV X2, X31
	0x032DC078 LDR X1, [X8]
	0x032DC07C BL 0x339756C
	0x032DC080 MOV X22, X0
	0x032DC084 LDR X0, [X29]
	0x032DC088 ADD X1, X31, 0xEC
	0x032DC08C STRB W26, [X31 + 0xEC]
	0x032DC090 BL 0x1C16E04
	0x032DC094 MOV X2, X0
	0x032DC098 MOVI V0.2D, 0x0
	0x032DC09C ADD X0, X31, 0xB0
	0x032DC0A0 MOV X1, X22
	0x032DC0A4 MOV X3, X31
	0x032DC0A8 STP V0, V0, [X31 + 0xC0]
	0x032DC0AC STR V0, [X31 + 0xB]
	0x032DC0B0 BL 0x32D2FE4
	0x032DC0B4 LDP V1, V0, [X31 + 0xC0]
	0x032DC0B8 LDR V2, [X31 + 0xB]
	0x032DC0BC STP V1, V0, [X31 + 0x90]
	0x032DC0C0 STR V2, [X31 + 0x8]
	0x032DC0C4 LDR W8, [X20 + 0x18]
	0x032DC0C8 CMP W8, 0x6
	0x032DC0CC B.LS 0x32DC214
	0x032DC0D0 LDP V1, V0, [X31 + 0x90]
	0x032DC0D4 LDR V2, [X31 + 0x8]
	0x032DC0D8 ADRP X8, 0xE4A000
	0x032DC0DC MOV X0, X21
	0x032DC0E0 STP V1, V0, [X20 + 0x150]
	0x032DC0E4 STR V2, [X20 + 0x14]
	0x032DC0E8 LDR X8, [X8 + 0x598]
	0x032DC0EC MOV X2, X31
	0x032DC0F0 LDR X1, [X8]
	0x032DC0F4 BL 0x339756C
	0x032DC0F8 MOV X22, X0
	0x032DC0FC LDR X0, [X29]
	0x032DC100 ADD X1, X31, 0x7C
	0x032DC104 STRB W25, [X31 + 0x7C]
	0x032DC108 BL 0x1C16E04
	0x032DC10C MOV X2, X0
	0x032DC110 MOVI V0.2D, 0x0
	0x032DC114 ADD X0, X31, 0x40
	0x032DC118 MOV X1, X22
	0x032DC11C MOV X3, X31
	0x032DC120 STP V0, V0, [X31 + 0x50]
	0x032DC124 STR V0, [X31 + 0x4]
	0x032DC128 BL 0x32D2FE4
	0x032DC12C LDP V1, V0, [X31 + 0x50]
	0x032DC130 LDR V2, [X31 + 0x4]
	0x032DC134 STP V1, V0, [X31 + 0x20]
	0x032DC138 STR V2, [X31 + 0x1]
	0x032DC13C LDR W8, [X20 + 0x18]
	0x032DC140 CMP W8, 0x7
	0x032DC144 B.LS 0x32DC214
	0x032DC148 LDP V1, V0, [X31 + 0x20]
	0x032DC14C LDR V2, [X31 + 0x1]
	0x032DC150 ADRP X8, 0xE1F000
	0x032DC154 MOVZ W1, 0x1
	0x032DC158 STP V1, V0, [X20 + 0x180]
	0x032DC15C STR V2, [X20 + 0x17]
	0x032DC160 LDR X8, [X8 + 0xC60]
	0x032DC164 LDR X0, [X8]
	0x032DC168 BL 0x1C16D6C
	0x032DC16C ADRP X8, 0xE3F000
	0x032DC170 LDR X8, [X8 + 0xB60]
	0x032DC174 MOV X22, X0
	0x032DC178 MOV X1, X31
	0x032DC17C LDR X8, [X8]
	0x032DC180 MOV X0, X8
	0x032DC184 BL 0x338C698
	0x032DC188 CBZ X22, 0x32DC218
	0x032DC18C MOV X23, X0
	0x032DC190 CBZ X0, 0x32DC1A8
	0x032DC194 LDR X8, [X22]
	0x032DC198 MOV X0, X23
	0x032DC19C LDR X1, [X8 + 0x40]
	0x032DC1A0 BL 0x1C16E00
	0x032DC1A4 CBZ X0, 0x32DC21C
	0x032DC1A8 LDR W8, [X22 + 0x18]
	0x032DC1AC CBZ W8, 0x32DC214
	0x032DC1B0 MOV X0, X21
	0x032DC1B4 MOV X1, X22
	0x032DC1B8 MOV X2, X31
	0x032DC1BC STR X23, [X22 + 0x20]
	0x032DC1C0 BL 0x3397418
	0x032DC1C4 ADRP X8, 0xE49000
	0x032DC1C8 LDR X8, [X8 + 0xC80]
	0x032DC1CC MOV X22, X0
	0x032DC1D0 LDR X8, [X8]
	0x032DC1D4 MOV X0, X8
	0x032DC1D8 BL 0x1C16F10
	0x032DC1DC MOV X1, X31
	0x032DC1E0 MOV X21, X0
	0x032DC1E4 BL 0x33BDD8C
	0x032DC1E8 STP X22, X19, [X21 + 0x10]
	0x032DC1EC STR X20, [X21 + 0x20]
	0x032DC1F0 MOV X0, X21
	0x032DC1F4 ADD X31, X31, 0x3B0
	0x032DC1F8 LDP X20, X19, [X31 + 0x50]
	0x032DC1FC LDP X22, X21, [X31 + 0x40]
	0x032DC200 LDP X24, X23, [X31 + 0x30]
	0x032DC204 LDP X26, X25, [X31 + 0x20]
	0x032DC208 LDP X28, X27, [X31 + 0x10]
	0x032DC20C LDP X29, X30, [X31], #0x60
	0x032DC210 RET
	0x032DC214 BL 0x1C16F28
	0x032DC218 BL 0x1C16F20
	0x032DC21C BL 0x1C16F44
	0x032DC220 MOV X1, X31
	0x032DC224 BL 0x1C16DEC
	0x032DC228 STR X30, [X31 - 0x50]!
	0x032DC22C STP X26, X25, [X31 + 0x10]
	0x032DC230 STP X24, X23, [X31 + 0x20]
	0x032DC234 STP X22, X21, [X31 + 0x30]
	0x032DC238 STP X20, X19, [X31 + 0x40]
	0x032DC23C ADRP X21, 0x1100000
	0x032DC240 LDRB W8, [X21 + 0x967]
	0x032DC244 MOV X19, X1
	0x032DC248 MOV X20, X0
	0x032DC24C TBNZ X8, 0x0, 0x32DC270
	0x032DC250 ADRP X0, 0xE40000
	0x032DC254 LDR X0, [X0 + 0x4E8]
	0x032DC258 BL 0x1C16CF4
	0x032DC25C ADRP X0, 0xE17000
	0x032DC260 LDR X0, [X0 + 0x6C0]
	0x032DC264 BL 0x1C16CF4
	0x032DC268 MOVZ W8, 0x1
	0x032DC26C STRB W8, [X21 + 0x967]
	0x032DC270 CBZ X19, 0x32DC3D8
	0x032DC274 LDR X8, [X20]
	0x032DC278 MOV X0, X20
	0x032DC27C LDR X9, [X8 + 0x2E8]
	0x032DC280 LDR X1, [X8 + 0x2F0]
	0x032DC284 BLR X9
	0x032DC288 TBZ X0, 0x0, 0x32DC40C
	0x032DC28C LDR X8, [X20]
	0x032DC290 MOV X0, X20
	0x032DC294 LDR X9, [X8 + 0x2F8]
	0x032DC298 LDR X1, [X8 + 0x300]
	0x032DC29C BLR X9
	0x032DC2A0 CBZ X0, 0x32DC440
	0x032DC2A4 LDR X8, [X0 + 0x18]
	0x032DC2A8 LDR W9, [X19 + 0x18]
	0x032DC2AC CMP W8, W9
	0x032DC2B0 B.NE 0x32DC444
	0x032DC2B4 CMP W8, 0x1
	0x032DC2B8 B.LT 0x32DC364
	0x032DC2BC ADRP X24, 0xE17000
	0x032DC2C0 ADRP X25, 0xE40000
	0x032DC2C4 LDR X24, [X24 + 0x6C0]
	0x032DC2C8 LDR X25, [X25 + 0x4E8]
	0x032DC2CC MOV X23, X31
	0x032DC2D0 MOV W22, W31
	0x032DC2D4 AND X8, X8, 0x0
	0x032DC2D8 ADD X26, X19, 0x20
	0x032DC2DC CMP X23, W8, UXTW
	0x032DC2E0 B.CS 0x32DC3A0
	0x032DC2E4 LDR X0, [X24]
	0x032DC2E8 LDR X21, [X26, X23, LSL #3]
	0x032DC2EC LDR W8, [X0 + 0xE0]
	0x032DC2F0 CBNZ W8, 0x32DC2F8
	0x032DC2F4 BL 0x1C16DFC
	0x032DC2F8 MOV X0, X21
	0x032DC2FC MOV X1, X31
	0x032DC300 MOV X2, X31
	0x032DC304 BL 0x3395194
	0x032DC308 TBNZ X0, 0x0, 0x32DC3A4
	0x032DC30C CBZ X21, 0x32DC328
	0x032DC310 LDR X9, [X21]
	0x032DC314 LDR X8, [X25]
	0x032DC318 LDRB W11, [X9 + 0x130]
	0x032DC31C LDRB W10, [X8 + 0x130]
	0x032DC320 CMP W11, W10
	0x032DC324 B.CS 0x32DC330
	0x032DC328 MOV X9, X31
	0x032DC32C B 0x32DC344
	0x032DC330 LDR X9, [X9 + 0xC8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x1101000
	011 Move W8, [X25+2399]
	012 Move X23, X5
	013 Move X20, X4
	014 Move X24, X3
	015 Move W22, W2
	016 Move X19, X1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xE18000
	023 Move X0, [X0+1728]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+2399], W8
	027 Move X0, X21
	028 Move X1, X31
	029 Move [X31+8], X31
	030 Call MethodBase.get_IsStatic, X0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {51}
	035 Move X8, [X21]
	036 Move X0, X21
	037 Move X9, [X8+440]
	038 Move X1, [X8+448]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Compare X0, 0
	041 JumpIfEqual {128}
	042 Move X8, [X0]
	043 Move X1, X19
	044 Move X9, [X8+2152]
	045 Move X2, [X8+2160]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {129}
	051 Compare X24, 0
	052 JumpIfNotEqual {63}
	053 Move X8, 0xE18000
	054 Move X8, [X8+1728]
	055 Move X0, [X8]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X31
	061 Call Type.get_DefaultBinder
	062 Move X24, X0
	063 Move X8, [X21]
	064 Move X0, X21
	065 Move X9, [X8+856]
	066 Move X1, [X8+864]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X2, X0
	069 Move X0, X24
	070 Move X1, X20
	071 Move X3, X23
	072 Move W4, W22
	073 Call RuntimeMethodInfo.ConvertValues, X0, X1, X2, X3, X4
	074 Move X8, [X21]
	075 Move X0, X21
	076 Move X9, [X8+776]
	077 Move X1, [X8+784]
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {110}
	083 Move TEMP, X22
	084 And TEMP, TEMP, 0x2000000
	085 Compare TEMP, 0x2000000
	086 JumpIfEqual {92}
	087 Add X3, X31, 8
	088 Move X0, X21
	089 Move X1, X19
	090 Move X2, X20
	091 Call 0x1C728C8
	092 Add X3, X31, 8
	093 Move X0, X21
	094 Move X1, X19
	095 Move X2, X20
	096 Call 0x1C728C8
	097 Move X19, [X31+8]
	098 Compare X19, 0
	099 JumpIfNotEqual {122}
	100 Move X20, [X31+64]
	101 Move X19, [X31+72]
	102 Move X22, [X31+48]
	103 Move X21, [X31+56]
	104 Move X24, [X31+32]
	105 Move X23, [X31+40]
	106 Move X30, [X31+16]
	107 Move X25, [X31+24]
	108 Add X31, X31, 80
	109 Return X0
	110 Move X0, 0xE18000
	111 Move X0, [X0+1456]
	112 Call 0x1C17D08
	113 Call 0x1C17F10
	114 Move X19, X0
	115 Move X0, 0xE4B000
	116 Move X0, [X0+1296]
	117 Call 0x1C17D08
	118 Move X1, X0
	119 Move X0, X19
	120 Move X2, X31
	121 Call InvalidOperationException..ctor, X0, X1
	122 Move X0, 0xE4B000
	123 Move X0, [X0+1304]
	124 Call 0x1C17D08
	125 Move X1, X0
	126 Move X0, X19
	127 Call 0x1C17DEC
	128 Call 0x1C17F20
	129 Move X0, 0xE4B000
	130 Move X0, [X0+1168]
	131 Call 0x1C17D08
	132 Call 0x1C17F10
	133 Move X20, X0
	134 Compare X19, 0
	135 JumpIfNotEqual {138}
	136 Move X0, 0xE4B000
	137 Move X0, [X0+1312]
	138 Move X0, 0xE4B000
	139 Move X0, [X0+1320]
	140 Call 0x1C17D08
	141 Move X1, X0
	142 Move X0, X20
	143 Move X2, X31
	144 Call TargetException..ctor, X0, X1
	145 Move X0, 0xE4B000
	146 Move X0, [X0+1304]
	147 Call 0x1C17D08
	148 Move X1, X0
	149 Move X0, X20
	150 Call 0x1C17DEC
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X19, X0
	153 Move X0, X19
	154 Call 0x3EB2AD0
	155 Move X19, X0
	156 Move X0, 0xE41000
	157 Move X0, [X0+3000]
	158 Call 0x1C17D08
	159 Move X8, [X19]
	160 Move X1, [X8]
	161 Call 0x1C18270
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfNotEqual {170}
	166 Move X19, [X19]
	167 Call 0x3EB2AE0
	168 Move X0, X19
	169 Call 0x1C17F18
	170 Move X0, 0xE4B000
	171 Move X0, [X0+1328]
	172 Call 0x1C17D08
	173 Move X8, [X19]
	174 Move X1, [X8]
	175 Call 0x1C18270
	176 Move TEMP, X0
	177 And TEMP, TEMP, 1
	178 Compare TEMP, 1
	179 JumpIfEqual {166}
	180 Move X0, 0xE18000
	181 Move X0, [X0+2136]
	182 Call 0x1C17D08
	183 Move X8, [X19]
	184 Move X1, [X8]
	185 Call 0x1C18270
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfEqual {166}
	190 Move X0, 0xE18000
	191 Move X0, [X0+2000]
	192 Call 0x1C17D08
	193 Move X8, [X19]
	194 Move X1, [X8]
	195 Call 0x1C18270
	196 Move TEMP, X0
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfNotEqual {210}
	200 Move X19, [X19]
	201 Call 0x3EB2AE0
	202 Move X0, 0xE48000
	203 Move X0, [X0+3936]
	204 Call 0x1C17D08
	205 Call 0x1C17F10
	206 Move X1, X19
	207 Move X2, X31
	208 Move X20, X0
	209 Call TargetInvocationException..ctor, X0, X1
	210 Move W0, 8
	211 Call 0x3EB2AF0
	212 Move X8, [X19]
	213 Move [X0], X8
	214 Move X1, 0xBD9000
	215 Add X1, X1, 3672
	216 Move X2, X31
	217 Call 0x3EB2B00
	218 Move X19, X0
	219 Call 0x3EB2AE0
	220 Move X0, X19
	221 Call 0x1D2D690
	222 Call 0x1991590

Method: System.Void ConvertValues(System.Reflection.Binder binder, System.Object[] args, System.Reflection.ParameterInfo[] pinfo, System.Globalization.CultureInfo culture, System.Reflection.BindingFlags invokeAttr)

Disassembly:
	0x032DC334 ADD X9, X9, X10, 0x3, LSL
	0x032DC338 LDUR X9, [X9 - 0x8]
	0x032DC33C CMP X9, X8
	0x032DC340 CSEL X9, X21, X31, EQ
	0x032DC344 LDR W8, [X19 + 0x18]
	0x032DC348 CMP X9, 0x0
	0x032DC34C CSET W9, EQ
	0x032DC350 ADD X23, X23, 0x1
	0x032DC354 CMP X23, W8, SXTW
	0x032DC358 ORR W22, W22, W9, 0x0
	0x032DC35C B.LT 0x32DC2DC
	0x032DC360 TBNZ X22, 0x0, 0x32DC534
	0x032DC364 MOV X0, X20
	0x032DC368 MOV X1, X19
	0x032DC36C BL 0x1C71CC0
	0x032DC370 MOV X1, X31
	0x032DC374 MOV X2, X31
	0x032DC378 MOV X21, X0
	0x032DC37C BL 0x32C2354
	0x032DC380 TBNZ X0, 0x0, 0x32DC478
	0x032DC384 MOV X0, X21
	0x032DC388 LDP X20, X19, [X31 + 0x40]
	0x032DC38C LDP X22, X21, [X31 + 0x30]
	0x032DC390 LDP X24, X23, [X31 + 0x20]
	0x032DC394 LDP X26, X25, [X31 + 0x10]
	0x032DC398 LDR X30, [X31], #0x50
	0x032DC39C RET
	0x032DC3A0 BL 0x1C16F28
	0x032DC3A4 ADRP X0, 0xE1C000
	0x032DC3A8 LDR X0, [X0 + 0x528]
	0x032DC3AC BL 0x1C16D08
	0x032DC3B0 BL 0x1C16F10
	0x032DC3B4 MOV X1, X31
	0x032DC3B8 MOV X19, X0
	0x032DC3BC BL 0x3315F20
	0x032DC3C0 ADRP X0, 0xE4A000
	0x032DC3C4 LDR X0, [X0 + 0x5C8]
	0x032DC3C8 BL 0x1C16D08
	0x032DC3CC MOV X1, X0
	0x032DC3D0 MOV X0, X19
	0x032DC3D4 BL 0x1C16DEC
	0x032DC3D8 ADRP X0, 0xE1C000
	0x032DC3DC LDR X0, [X0 + 0x528]
	0x032DC3E0 BL 0x1C16D08
	0x032DC3E4 BL 0x1C16F10
	0x032DC3E8 MOV X19, X0
	0x032DC3EC ADRP X0, 0xE4A000
	0x032DC3F0 LDR X0, [X0 + 0x5D0]
	0x032DC3F4 BL 0x1C16D08
	0x032DC3F8 MOV X1, X0
	0x032DC3FC MOV X0, X19
	0x032DC400 MOV X2, X31
	0x032DC404 BL 0x330E100
	0x032DC408 B 0x32DC3C0
	0x032DC40C ADRP X0, 0xE17000
	0x032DC410 LDR X0, [X0 + 0x5B0]
	0x032DC414 BL 0x1C16D08
	0x032DC418 BL 0x1C16F10
	0x032DC41C MOV X19, X0
	0x032DC420 ADRP X0, 0xE4A000
	0x032DC424 LDR X0, [X0 + 0x5D8]
	0x032DC428 BL 0x1C16D08
	0x032DC42C MOV X1, X0
	0x032DC430 MOV X0, X19
	0x032DC434 MOV X2, X31
	0x032DC438 BL 0x337DF1C
	0x032DC43C B 0x32DC3C0
	0x032DC440 BL 0x1C16F20
	0x032DC444 ADRP X0, 0xE1F000
	0x032DC448 LDR X0, [X0 + 0x578]
	0x032DC44C BL 0x1C16D08
	0x032DC450 BL 0x1C16F10
	0x032DC454 MOV X19, X0
	0x032DC458 ADRP X0, 0xE4A000
	0x032DC45C LDR X0, [X0 + 0x5E0]
	0x032DC460 BL 0x1C16D08
	0x032DC464 MOV X1, X0
	0x032DC468 MOV X0, X19
	0x032DC46C MOV X2, X31
	0x032DC470 BL 0x3314A68
	0x032DC474 B 0x32DC3C0
	0x032DC478 LDR X8, [X20]
	0x032DC47C MOV X0, X20
	0x032DC480 LDR X9, [X8 + 0x2F8]
	0x032DC484 LDR X1, [X8 + 0x300]
	0x032DC488 BLR X9
	0x032DC48C MOV X20, X0
	0x032DC490 BL 0x19903C0
	0x032DC494 LDR X8, [X20 + 0x18]
	0x032DC498 ADRP X20, 0xE17000
	0x032DC49C STR W8, [X31 + 0xC]
	0x032DC4A0 LDR X20, [X20 + 0x758]
	0x032DC4A4 MOV X0, X20
	0x032DC4A8 BL 0x1C16D08
	0x032DC4AC ADD X1, X31, 0xC
	0x032DC4B0 BL 0x1C16E04
	0x032DC4B4 MOV X21, X0
	0x032DC4B8 MOV X0, X19
	0x032DC4BC BL 0x19903C0
	0x032DC4C0 LDR X8, [X19 + 0x18]
	0x032DC4C4 MOV X0, X20
	0x032DC4C8 STR W8, [X31 + 0x8]
	0x032DC4CC BL 0x1C16D08
	0x032DC4D0 ADD X1, X31, 0x8
	0x032DC4D4 BL 0x1C16E04
	0x032DC4D8 MOV X19, X0
	0x032DC4DC ADRP X0, 0xE4A000
	0x032DC4E0 LDR X0, [X0 + 0x5E8]
	0x032DC4E4 BL 0x1C16D08
	0x032DC4E8 MOV X1, X21
	0x032DC4EC MOV X2, X19
	0x032DC4F0 MOV X3, X31
	0x032DC4F4 BL 0x3227BD4
	0x032DC4F8 MOV X19, X0
	0x032DC4FC ADRP X0, 0xE1F000
	0x032DC500 LDR X0, [X0 + 0x578]
	0x032DC504 BL 0x1C16D08
	0x032DC508 BL 0x1C16F10
	0x032DC50C MOV X1, X19
	0x032DC510 MOV X2, X31
	0x032DC514 MOV X20, X0
	0x032DC518 BL 0x3314A68
	0x032DC51C ADRP X0, 0xE4A000
	0x032DC520 LDR X0, [X0 + 0x5C8]
	0x032DC524 BL 0x1C16D08
	0x032DC528 MOV X1, X0
	0x032DC52C MOV X0, X20
	0x032DC530 BL 0x1C16DEC
	0x032DC534 ADRP X0, 0xE17000
	0x032DC538 LDR X0, [X0 + 0xB40]
	0x032DC53C BL 0x1C16D08
	0x032DC540 BL 0x1C16F10
	0x032DC544 MOV X19, X0
	0x032DC548 ADRP X0, 0xE4A000
	0x032DC54C LDR X0, [X0 + 0x5F0]
	0x032DC550 BL 0x1C16D08
	0x032DC554 MOV X1, X0
	0x032DC558 MOV X0, X19
	0x032DC55C MOV X2, X31
	0x032DC560 BL 0x3379A44
	0x032DC564 B 0x32DC3C0
	0x032DC568 B 0x1C71CC0
	0x032DC56C B 0x1C7212C
	0x032DC570 B 0x1C71C64
	0x032DC574 STP X30, X19, [X31 - 0x10]!
	0x032DC578 BL 0x1C71C64
	0x032DC57C MOV X1, X31
	0x032DC580 MOV X2, X31
	0x032DC584 MOV X19, X0
	0x032DC588 BL 0x32C2354
	0x032DC58C TBNZ X0, 0x0, 0x32DC59C
	0x032DC590 MOV X0, X19
	0x032DC594 LDP X30, X19, [X31], #0x10
	0x032DC598 RET
	0x032DC59C ADRP X0, 0xE17000
	0x032DC5A0 LDR X0, [X0 + 0x5B0]
	0x032DC5A4 BL 0x1C16D08
	0x032DC5A8 BL 0x1C16F10
	0x032DC5AC MOV X1, X31
	0x032DC5B0 MOV X19, X0
	0x032DC5B4 BL 0x337DEC0
	0x032DC5B8 ADRP X0, 0xE4A000
	0x032DC5BC LDR X0, [X0 + 0x5F8]
	0x032DC5C0 BL 0x1C16D08
	0x032DC5C4 MOV X1, X0
	0x032DC5C8 MOV X0, X19
	0x032DC5CC BL 0x1C16DEC
	0x032DC5D0 B 0x1C718B4
	0x032DC5D4 B 0x1C71874
	0x032DC5D8 STP X30, X21, [X31 - 0x20]!
	0x032DC5DC STP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X24, 0x1101000
	015 Move W8, [X24+2400]
	016 Move X20, X3
	017 Move X21, X2
	018 Move X22, X1
	019 Move X23, X0
	020 Move [X31+12], W4
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {36}
	025 Move X0, 0xE4B000
	026 Move X0, [X0+1336]
	027 Call 0x1C17CF4
	028 Move X0, 0xE41000
	029 Move X0, [X0+1256]
	030 Call 0x1C17CF4
	031 Move X0, 0xE18000
	032 Move X0, [X0+1728]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X24+2400], W8
	036 Compare X21, 0
	037 JumpIfEqual {145}
	038 Move X8, [X21+24]
	039 Compare X22, 0
	040 JumpIfEqual {128}
	041 Move W9, [X22+24]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X26, 0xE18000
	045 Move X19, 0xE4B000
	046 Move X26, [X26+1728]
	047 Move X19, [X19+1336]
	048 Move W9, W31
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X29, W9
	051 Add X27, X22, X29
	052 Add X27, X27, 32
	053 Move X24, [X27]
	054 Move W8, [X21+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X0, [X26]
	057 Add X8, X21, X29
	058 Move X25, [X8+32]
	059 Move W9, [X0+224]
	060 Compare W9, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Compare X25, 0
	064 JumpIfEqual {145}
	065 Move X8, [X26]
	066 Move X8, [X8+184]
	067 Move X9, [X8+24]
	068 Move X8, [X25]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X9, [X8+472]
	071 Move X1, [X8+480]
	072 Move X0, X25
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Compare X0, 0
	075 JumpIfEqual {145}
	076 Move X9, 0xE41000
	077 Move X8, [X0]
	078 Move X9, [X9+1256]
	079 Move W10, [X8+304]
	080 Move X1, [X9]
	081 Move W9, [X1+304]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X8, [X8+200]
	084 Add X8, X8, X9
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move W4, [X31+12]
	088 Move X1, X24
	089 Move X2, X23
	090 Move X3, X20
	091 Move X5, X31
	092 Call RuntimeType.CheckValue, X0, X1, X2, X3, X4
	093 Move X9, [X8+504]
	094 Move X1, [X8+512]
	095 Move X0, X25
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X8, [X19]
	098 Move X24, X0
	099 Move W9, [X8+224]
	100 Compare W9, 0
	101 JumpIfNotEqual {106}
	102 Move X0, X8
	103 Move X28, X19
	104 Call 0x1C17DFC
	105 Move X8, [X19]
	106 Move X8, [X8+184]
	107 Move X8, [X8]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X8, [X25]
	110 Move X0, X25
	111 Move X9, [X8+504]
	112 Move X1, [X8+512]
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Move X24, X0
	115 Compare X0, 0
	116 JumpIfEqual {123}
	117 Move X8, [X22]
	118 Move X0, X24
	119 Move X1, [X8+64]
	120 Call 0x1C17E00
	121 Compare X0, 0
	122 JumpIfEqual {147}
	123 Move W8, [X22+24]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Add W9, W29, 1
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move [X27], X24
	128 Compare X8, 0
	129 JumpIfNotEqual {175}
	130 Move X20, [X31+96]
	131 Move X19, [X31+104]
	132 Move X22, [X31+80]
	133 Move X21, [X31+88]
	134 Move X24, [X31+64]
	135 Move X23, [X31+72]
	136 Move X26, [X31+48]
	137 Move X25, [X31+56]
	138 Move X28, [X31+32]
	139 Move X27, [X31+40]
	140 Move X29, [X31+16]
	141 Move X30, [X31+24]
	142 Add X31, X31, 112
	143 Return 
	144 Call 0x1C17F28
	145 Call 0x1C17F20
	146 Call 0x1C181E0
	147 Call 0x1C17F44
	148 Move X1, X31
	149 Call 0x1C17DEC
	150 Move X0, 0xE4B000
	151 Move X0, [X0+1344]
	152 Call 0x1C17D08
	153 Move X1, X31
	154 Call Environment.GetResourceString, X0
	155 Move X19, X0
	156 Move X0, 0xE20000
	157 Move X0, [X0+1400]
	158 Call 0x1C17D08
	159 Call 0x1C17F10
	160 Move X20, X0
	161 Move X0, 0xE46000
	162 Move X0, [X0+3200]
	163 Call 0x1C17D08
	164 Move X2, X0
	165 Move X0, X20
	166 Move X1, X19
	167 Move X3, X31
	168 Call ArgumentException..ctor, X0, X1, X2
	169 Move X0, 0xE4B000
	170 Move X0, [X0+1352]
	171 Call 0x1C17D08
	172 Move X1, X0
	173 Move X0, X20
	174 Call 0x1C17DEC
	175 Move X0, 0xE4B000
	176 Move X0, [X0+1360]
	177 Call 0x1C17D08
	178 Call 0x1C17F10
	179 Move X1, X31
	180 Move X19, X0
	181 Call TargetParameterCountException..ctor, X0
	182 Move X0, 0xE4B000
	183 Move X0, [X0+1352]
	184 Call 0x1C17D08
	185 Move X1, X0
	186 Move X0, X19
	187 Call 0x1C17DEC

Method: System.RuntimeMethodHandle get_MethodHandle()

Disassembly:
	0x032DC5E0 LDR X8, [X0]
	0x032DC5E4 MOV X19, X0

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Reflection.MethodAttributes get_Attributes()

Disassembly:
	0x032DC5E8 LDR X9, [X8 + 0x2D8]
	0x032DC5EC LDR X1, [X8 + 0x2E0]

ISIL:
	001 Move X0, [X0+16]
	002 Call 0x1C2C380
	003 Return X0

Method: System.Reflection.CallingConventions get_CallingConvention()

Disassembly:
	0x032DC5F0 BLR X9
	0x032DC5F4 TBZ X0, 0x0, 0x32DC65C
	0x032DC5F8 LDR X8, [X19]
	0x032DC5FC MOV X0, X19
	0x032DC600 LDR X9, [X8 + 0x2F8]
	0x032DC604 LDR X1, [X8 + 0x300]
	0x032DC608 BLR X9
	0x032DC60C CBZ X0, 0x32DC698
	0x032DC610 LDR W8, [X0 + 0x18]
	0x032DC614 MOV X20, X0
	0x032DC618 CMP W8, 0x1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X0, [X0+16]
	004 NotImplemented "Instruction MOVI not yet implemented."
	005 Add X1, X31, 0
	006 Move [X31], V0
	007 Move [X31+8], V0
	008 Call 0x1C851C8
	009 Move W0, [X31+24]
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return X0

Method: System.Type get_ReflectedType()

Disassembly:
	0x032DC61C B.LT 0x32DC65C
	0x032DC620 MOV W21, W31

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Type get_DeclaringType()

Disassembly:
	0x032DC624 CMP W21, W8
	0x032DC628 B.CS 0x32DC69C
	0x032DC62C ADD X8, X20, W21, 0x3, SXTW
	0x032DC630 LDR X0, [X8 + 0x20]
	0x032DC634 CBZ X0, 0x32DC698
	0x032DC638 LDR X8, [X0]
	0x032DC63C LDR X9, [X8 + 0x288]
	0x032DC640 LDR X1, [X8 + 0x290]
	0x032DC644 BLR X9
	0x032DC648 TBNZ X0, 0x0, 0x32DC688
	0x032DC64C LDR W8, [X20 + 0x18]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X0, [X0+16]
	004 NotImplemented "Instruction MOVI not yet implemented."
	005 Add X1, X31, 0
	006 Move [X31], V0
	007 Move [X31+8], V0
	008 Call 0x1C851C8
	009 Move X0, [X31]
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return X0

Method: System.String get_Name()

Disassembly:
	0x032DC650 ADD W21, W21, 0x1
	0x032DC654 CMP W21, W8
	0x032DC658 B.LT 0x32DC624
	0x032DC65C LDR X8, [X19]
	0x032DC660 MOV X0, X19

ISIL:
	001 Move X8, [X0+24]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move X0, X8
	005 Return X0
	006 Call 0x1C73118
	007 Return X0

Method: System.Boolean IsDefined(System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x032DC664 LDP X9, X1, [X8 + 0x1B8]
	0x032DC668 BLR X9
	0x032DC66C CBZ X0, 0x32DC698
	0x032DC670 LDR X8, [X0]
	0x032DC674 LDP X20, X19, [X31 + 0x10]
	0x032DC678 LDR X2, [X8 + 0x288]
	0x032DC67C LDR X1, [X8 + 0x290]
	0x032DC680 LDP X30, X21, [X31], #0x20
	0x032DC684 BR X2
	0x032DC688 LDP X20, X19, [X31 + 0x10]
	0x032DC68C MOVZ W0, 0x1
	0x032DC690 LDP X30, X21, [X31], #0x20
	0x032DC694 RET
	0x032DC698 BL 0x1C16F20
	0x032DC69C BL 0x1C16F28
	0x032DC6A0 B 0x32D76D0
	0x032DC6A4 MOVZ W0, 0x1
	0x032DC6A8 RET
	0x032DC6AC MOVZ W0, 0x1
	0x032DC6B0 RET
	0x032DC6B4 B 0x32DC6B8
	0x032DC6B8 STR X30, [X31 - 0x20]!
	0x032DC6BC STP X20, X19, [X31 + 0x10]
	0x032DC6C0 ADRP X20, 0x1100000
	0x032DC6C4 LDRB W8, [X20 + 0x968]
	0x032DC6C8 MOV X19, X0
	0x032DC6CC TBNZ X8, 0x0, 0x32DC6E4
	0x032DC6D0 ADRP X0, 0xE40000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1101000
	008 Move X23, 0xE4B000
	009 Move W8, [X22+2401]
	010 Move X23, [X23+992]
	011 Move W21, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xE4B000
	019 Move X0, [X0+992]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2401], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 And W2, W21, 1
	029 Move X0, X20
	030 Move X1, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X3, X31
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Call MonoCustomAttrs.IsDefined, X0, X1, X2
	039 Return X0

Method: System.Object[] GetCustomAttributes(System.Boolean inherit)

Disassembly:
	0x032DC6D4 LDR X0, [X0 + 0x4E8]
	0x032DC6D8 BL 0x1C16CF4
	0x032DC6DC MOVZ W8, 0x1
	0x032DC6E0 STRB W8, [X20 + 0x968]
	0x032DC6E4 LDR X8, [X19]
	0x032DC6E8 MOV X0, X19
	0x032DC6EC LDP X9, X1, [X8 + 0x1B8]
	0x032DC6F0 BLR X9
	0x032DC6F4 CBZ X0, 0x32DC72C
	0x032DC6F8 ADRP X9, 0xE40000
	0x032DC6FC LDR X9, [X9 + 0x4E8]
	0x032DC700 LDR X8, [X0]
	0x032DC704 LDR X1, [X9]
	0x032DC708 LDRB W10, [X8 + 0x130]
	0x032DC70C LDRB W9, [X1 + 0x130]
	0x032DC710 CMP W10, W9
	0x032DC714 B.CC 0x32DC73C
	0x032DC718 LDR X8, [X8 + 0xC8]
	0x032DC71C ADD X8, X8, X9, 0x3, LSL
	0x032DC720 LDUR X8, [X8 - 0x8]
	0x032DC724 CMP X8, X1
	0x032DC728 B.NE 0x32DC73C
	0x032DC72C LDP X20, X19, [X31 + 0x10]
	0x032DC730 MOV X1, X31
	0x032DC734 LDR X30, [X31], #0x20
	0x032DC738 B 0x33CC51C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1101000
	007 Move X22, 0xE4B000
	008 Move W8, [X21+2402]
	009 Move X22, [X22+992]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE4B000
	017 Move X0, [X0+992]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2402], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 And W1, W20, 1
	027 Move X0, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call MonoCustomAttrs.GetCustomAttributes, X0, X1
	035 Return X0

Method: System.Object[] GetCustomAttributes(System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x032DC73C BL 0x1C171E0
	0x032DC740 MOV W0, W31
	0x032DC744 RET
	0x032DC748 STR X30, [X31 - 0x20]!
	0x032DC74C STP X20, X19, [X31 + 0x10]
	0x032DC750 ADRP X20, 0x1100000
	0x032DC754 LDRB W8, [X20 + 0x969]
	0x032DC758 MOV X19, X0
	0x032DC75C TBNZ X8, 0x0, 0x32DC774
	0x032DC760 ADRP X0, 0xE40000
	0x032DC764 LDR X0, [X0 + 0x4E8]
	0x032DC768 BL 0x1C16CF4
	0x032DC76C MOVZ W8, 0x1
	0x032DC770 STRB W8, [X20 + 0x969]
	0x032DC774 LDR X8, [X19]
	0x032DC778 MOV X0, X19
	0x032DC77C LDP X9, X1, [X8 + 0x1C8]
	0x032DC780 BLR X9
	0x032DC784 CBZ X0, 0x32DC7BC
	0x032DC788 ADRP X9, 0xE40000
	0x032DC78C LDR X9, [X9 + 0x4E8]
	0x032DC790 LDR X8, [X0]
	0x032DC794 LDR X1, [X9]
	0x032DC798 LDRB W10, [X8 + 0x130]
	0x032DC79C LDRB W9, [X1 + 0x130]
	0x032DC7A0 CMP W10, W9
	0x032DC7A4 B.CC 0x32DC7C8
	0x032DC7A8 LDR X8, [X8 + 0xC8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1101000
	008 Move X23, 0xE4B000
	009 Move W8, [X22+2403]
	010 Move X23, [X23+992]
	011 Move W21, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xE4B000
	019 Move X0, [X0+992]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2403], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 And W2, W21, 1
	029 Move X0, X20
	030 Move X1, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X3, X31
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Call MonoCustomAttrs.GetCustomAttributes, X0, X1, X2
	039 Return X0

Method: System.Void GetPInvoke(out System.Reflection.PInvokeAttributes flags, out System.String entryPoint, out System.String dllName)

Disassembly:
	0x032DC7AC ADD X8, X8, X9, 0x3, LSL

ISIL:
	001 Call 0x1C73228
	002 Return 

Method: System.Object[] GetPseudoCustomAttributes()

Disassembly:
	0x032DC7B0 LDUR X8, [X8 - 0x8]
	0x032DC7B4 CMP X8, X1
	0x032DC7B8 B.NE 0x32DC7C8
	0x032DC7BC LDP X20, X19, [X31 + 0x10]
	0x032DC7C0 LDR X30, [X31], #0x20
	0x032DC7C4 RET
	0x032DC7C8 BL 0x1C171E0
	0x032DC7CC STP X30, X23, [X31 - 0x30]!
	0x032DC7D0 STP X22, X21, [X31 + 0x10]
	0x032DC7D4 STP X20, X19, [X31 + 0x20]
	0x032DC7D8 CBZ X1, 0x32DC85C
	0x032DC7DC LDR X8, [X0]
	0x032DC7E0 MOV X19, X1
	0x032DC7E4 MOV X20, X0
	0x032DC7E8 LDP X9, X1, [X8 + 0x1A8]
	0x032DC7EC BLR X9
	0x032DC7F0 MOV X21, X0
	0x032DC7F4 MOV X0, X20
	0x032DC7F8 BL 0x32DC748
	0x032DC7FC LDR X8, [X20]
	0x032DC800 MOV X22, X0
	0x032DC804 MOV X0, X20
	0x032DC808 LDP X9, X1, [X8 + 0x168]
	0x032DC80C BLR X9
	0x032DC810 LDR X8, [X20]
	0x032DC814 MOV X23, X0
	0x032DC818 MOVZ W1, 0x1
	0x032DC81C MOV X0, X20
	0x032DC820 LDR X9, [X8 + 0x378]
	0x032DC824 LDR X2, [X8 + 0x380]
	0x032DC828 BLR X9
	0x032DC82C MOV X4, X0
	0x032DC830 MOV X0, X19
	0x032DC834 MOV X1, X21
	0x032DC838 MOV X2, X22
	0x032DC83C LDP X20, X19, [X31 + 0x20]
	0x032DC840 LDP X22, X21, [X31 + 0x10]
	0x032DC844 MOVZ W5, 0x1
	0x032DC848 MOV X3, X23
	0x032DC84C MOV X6, X31
	0x032DC850 MOV X7, X31
	0x032DC854 LDP X30, X23, [X31], #0x30
	0x032DC858 B 0x32D45F0
	0x032DC85C ADRP X0, 0xE1C000
	0x032DC860 LDR X0, [X0 + 0x528]
	0x032DC864 BL 0x1C16D08
	0x032DC868 BL 0x1C16F10
	0x032DC86C MOV X19, X0
	0x032DC870 ADRP X0, 0xE41000
	0x032DC874 LDR X0, [X0 + 0x2D8]
	0x032DC878 BL 0x1C16D08
	0x032DC87C MOV X1, X0
	0x032DC880 MOV X0, X19
	0x032DC884 MOV X2, X31
	0x032DC888 BL 0x330E100
	0x032DC88C ADRP X0, 0xE4A000
	0x032DC890 LDR X0, [X0 + 0x600]
	0x032DC894 BL 0x1C16D08
	0x032DC898 MOV X1, X0
	0x032DC89C MOV X0, X19
	0x032DC8A0 BL 0x1C16DEC
	0x032DC8A4 LDR X8, [X0]
	0x032DC8A8 MOVZ W1, 0x1
	0x032DC8AC LDR X3, [X8 + 0x378]
	0x032DC8B0 LDR X2, [X8 + 0x380]
	0x032DC8B4 BR X3
	0x032DC8B8 SUB X31, X31, 0x50
	0x032DC8BC STP X30, X25, [X31 + 0x10]
	0x032DC8C0 STP X24, X23, [X31 + 0x20]
	0x032DC8C4 STP X22, X21, [X31 + 0x30]
	0x032DC8C8 STP X20, X19, [X31 + 0x40]
	0x032DC8CC ADRP X21, 0x1100000
	0x032DC8D0 ADRP X25, 0xE17000
	0x032DC8D4 LDRB W8, [X21 + 0x96A]
	0x032DC8D8 LDR X25, [X25 + 0x9D0]
	0x032DC8DC MOV X22, X4
	0x032DC8E0 MOV X23, X3
	0x032DC8E4 MOV X24, X2
	0x032DC8E8 MOV X19, X1
	0x032DC8EC MOV X20, X0
	0x032DC8F0 TBNZ X8, 0x0, 0x32DC914
	0x032DC8F4 ADRP X0, 0xE17000
	0x032DC8F8 LDR X0, [X0 + 0x9D0]
	0x032DC8FC BL 0x1C16CF4
	0x032DC900 ADRP X0, 0xE48000
	0x032DC904 LDR X0, [X0 + 0xF78]
	0x032DC908 BL 0x1C16CF4
	0x032DC90C MOVZ W8, 0x1
	0x032DC910 STRB W8, [X21 + 0x96A]
	0x032DC914 LDR X0, [X25]
	0x032DC918 MOVZ W1, 0x2
	0x032DC91C BL 0x1C16D6C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X19, 0x1101000
	008 Move W8, [X19+2404]
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xE18000
	015 Move X0, [X0+2512]
	016 Call 0x1C17CF4
	017 Move X0, 0xE4B000
	018 Move X0, [X0+1368]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+2404], W8
	022 Move X19, 0xE18000
	023 Move X19, [X19+2512]
	024 Move X0, [X20+16]
	025 NotImplemented "Instruction MOVI not yet implemented."
	026 Add X1, X31, 0
	027 Move [X31], V0
	028 Move [X31+8], V0
	029 Call 0x1C851C8
	030 Move W22, [X31+16]
	031 Move W21, [X31+20]
	032 Move TEMP, X22
	033 And TEMP, TEMP, 0x2000
	034 Compare TEMP, 0x2000
	035 JumpIfEqual {41}
	036 Move TEMP, X21
	037 And TEMP, TEMP, 128
	038 Compare TEMP, 128
	039 JumpIfEqual {60}
	040 Move X19, X31
	041 Move X0, [X19]
	042 And W31, W21, 128
	043 Move W8, 1
	044 NotImplemented "Instruction CINC not yet implemented."
	045 Call 0x1C17D6C
	046 Move X19, X0
	047 Move TEMP, X21
	048 And TEMP, TEMP, 128
	049 Compare TEMP, 128
	050 JumpIfEqual {66}
	051 Move X0, X20
	052 Move X1, X31
	053 Call DllImportAttribute.GetCustomAttribute, X0
	054 Compare X19, 0
	055 JumpIfEqual {117}
	056 Move X20, X0
	057 Move W21, W31
	058 Compare X20, 0
	059 JumpIfNotEqual {98}
	060 Move X0, [X19]
	061 Move W1, W21
	062 ShiftRight W1, 7
	063 And W1, W1, 127
	064 Call 0x1C17D6C
	065 Move X19, X0
	066 Move X8, 0xE4B000
	067 Move X8, [X8+1368]
	068 Move X0, [X8]
	069 Call 0x1C17F10
	070 Move X1, X31
	071 Move X21, X0
	072 Call PreserveSigAttribute..ctor, X0
	073 Compare X19, 0
	074 JumpIfEqual {117}
	075 Compare X21, 0
	076 JumpIfEqual {83}
	077 Move X8, [X19]
	078 Move X0, X21
	079 Move X1, [X8+64]
	080 Call 0x1C17E00
	081 Compare X0, 0
	082 JumpIfEqual {118}
	083 Move W8, [X19+24]
	084 Compare W8, 0
	085 JumpIfEqual {116}
	086 Move [X19+32], X21
	087 Move TEMP, X22
	088 And TEMP, TEMP, 0x2000
	089 Compare TEMP, 0x2000
	090 JumpIfNotEqual {108}
	091 Move X0, X20
	092 Move X1, X31
	093 Call DllImportAttribute.GetCustomAttribute, X0
	094 Move X20, X0
	095 Move W21, 1
	096 Compare X20, 0
	097 JumpIfEqual {104}
	098 Move X8, [X19]
	099 Move X0, X20
	100 Move X1, [X8+64]
	101 Call 0x1C17E00
	102 Compare X0, 0
	103 JumpIfEqual {118}
	104 Move W8, [X19+24]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Add X8, X19, W21
	107 Move [X8+32], X20
	108 Move X0, X19
	109 Move X20, [X31+64]
	110 Move X19, [X31+72]
	111 Move X22, [X31+48]
	112 Move X21, [X31+56]
	113 Move X30, [X31+32]
	114 Add X31, X31, 80
	115 Return X0
	116 Call 0x1C17F28
	117 Call 0x1C17F20
	118 Call 0x1C17F44
	119 Move X1, X31
	120 Call 0x1C17DEC

Method: System.Reflection.CustomAttributeData[] GetPseudoCustomAttributesData()

Disassembly:
	0x032DC920 CBZ X0, 0x32DC9CC
	0x032DC924 MOV X21, X0
	0x032DC928 CBZ X24, 0x32DC940
	0x032DC92C LDR X8, [X21]
	0x032DC930 MOV X0, X24
	0x032DC934 LDR X1, [X8 + 0x40]
	0x032DC938 BL 0x1C16E00
	0x032DC93C CBZ X0, 0x32DC9C0
	0x032DC940 LDR W8, [X21 + 0x18]
	0x032DC944 CBZ W8, 0x32DC9BC
	0x032DC948 ADRP X8, 0xE48000
	0x032DC94C LDR X8, [X8 + 0xF78]
	0x032DC950 STR X24, [X21 + 0x20]
	0x032DC954 ADD X1, X31, 0x0
	0x032DC958 STP X23, X22, [X31]
	0x032DC95C LDR X0, [X8]
	0x032DC960 BL 0x1C16E04
	0x032DC964 MOV X22, X0
	0x032DC968 CBZ X0, 0x32DC980
	0x032DC96C LDR X8, [X21]
	0x032DC970 MOV X0, X22
	0x032DC974 LDR X1, [X8 + 0x40]
	0x032DC978 BL 0x1C16E00
	0x032DC97C CBZ X0, 0x32DC9C0
	0x032DC980 LDR W8, [X21 + 0x18]
	0x032DC984 CMP W8, 0x1
	0x032DC988 B.LS 0x32DC9BC
	0x032DC98C MOV X0, X20
	0x032DC990 MOV X1, X19
	0x032DC994 MOV X2, X21
	0x032DC998 MOV X3, X31
	0x032DC99C STR X22, [X21 + 0x28]
	0x032DC9A0 BL 0x32CE4E0
	0x032DC9A4 LDP X20, X19, [X31 + 0x40]
	0x032DC9A8 LDP X22, X21, [X31 + 0x30]
	0x032DC9AC LDP X24, X23, [X31 + 0x20]
	0x032DC9B0 LDP X30, X25, [X31 + 0x10]
	0x032DC9B4 ADD X31, X31, 0x50
	0x032DC9B8 RET
	0x032DC9BC BL 0x1C16F28
	0x032DC9C0 BL 0x1C16F44
	0x032DC9C4 MOV X1, X31
	0x032DC9C8 BL 0x1C16DEC
	0x032DC9CC BL 0x1C16F20
	0x032DC9D0 SUB X31, X31, 0x30
	0x032DC9D4 STR X30, [X31 + 0x20]
	0x032DC9D8 LDR X0, [X0 + 0x10]
	0x032DC9DC MOVI V0.2D, 0x0
	0x032DC9E0 ADD X1, X31, 0x0
	0x032DC9E4 STP V0, V0, [X31]
	0x032DC9E8 BL 0x1C841C8
	0x032DC9EC LDR W0, [X31 + 0x14]
	0x032DC9F0 LDR X30, [X31 + 0x20]
	0x032DC9F4 ADD X31, X31, 0x30
	0x032DC9F8 RET
	0x032DC9FC MOV X1, X0
	0x032DCA00 LDR X0, [X0 + 0x10]
	0x032DCA04 B 0x1C8422C
	0x032DCA08 MOV X1, X0
	0x032DCA0C LDR X0, [X0 + 0x10]
	0x032DCA10 B 0x1C8422C
	0x032DCA14 STR X30, [X31 - 0x10]!
	0x032DCA18 MOV X1, X0
	0x032DCA1C LDR X0, [X0 + 0x10]
	0x032DCA20 BL 0x1C8422C
	0x032DCA24 CBZ X0, 0x32DCA2C
	0x032DCA28 LDR W0, [X0 + 0x18]
	0x032DCA2C LDR X30, [X31], #0x10
	0x032DCA30 RET
	0x032DCA34 B 0x1C94170
	0x032DCA38 STR X30, [X31 - 0x40]!
	0x032DCA3C STP X24, X23, [X31 + 0x10]
	0x032DCA40 STP X22, X21, [X31 + 0x20]
	0x032DCA44 STP X20, X19, [X31 + 0x30]
	0x032DCA48 MOV X19, X5
	0x032DCA4C MOV X20, X4
	0x032DCA50 MOV X21, X3
	0x032DCA54 MOV W22, W2
	0x032DCA58 MOV X23, X1
	0x032DCA5C MOV X24, X0
	0x032DCA60 CBZ X1, 0x32DCAB0
	0x032DCA64 LDR X8, [X24]
	0x032DCA68 MOV X0, X24
	0x032DCA6C LDP X9, X1, [X8 + 0x1B8]
	0x032DCA70 BLR X9
	0x032DCA74 CBZ X0, 0x32DCAE8
	0x032DCA78 LDR X8, [X0]
	0x032DCA7C MOV X1, X23
	0x032DCA80 LDR X9, [X8 + 0x868]
	0x032DCA84 LDR X2, [X8 + 0x870]
	0x032DCA88 BLR X9
	0x032DCA8C TBNZ X0, 0x0, 0x32DCABC
	0x032DCA90 ADRP X0, 0xE4A000
	0x032DCA94 LDR X0, [X0 + 0x490]
	0x032DCA98 BL 0x1C16D08
	0x032DCA9C BL 0x1C16F10
	0x032DCAA0 MOV X19, X0
	0x032DCAA4 ADRP X0, 0xE4A000
	0x032DCAA8 LDR X0, [X0 + 0x608]
	0x032DCAAC B 0x32DCB08
	0x032DCAB0 MOV X0, X24
	0x032DCAB4 BL 0x32CE414
	0x032DCAB8 TBZ X0, 0x0, 0x32DCAEC
	0x032DCABC MOV X0, X24
	0x032DCAC0 MOV X1, X23
	0x032DCAC4 MOV W2, W22
	0x032DCAC8 MOV X3, X21
	0x032DCACC MOV X4, X20
	0x032DCAD0 MOV X5, X19
	0x032DCAD4 LDP X20, X19, [X31 + 0x30]
	0x032DCAD8 LDP X22, X21, [X31 + 0x20]
	0x032DCADC LDP X24, X23, [X31 + 0x10]
	0x032DCAE0 LDR X30, [X31], #0x40
	0x032DCAE4 B 0x32DCB34
	0x032DCAE8 BL 0x1C16F20
	0x032DCAEC ADRP X0, 0xE4A000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X20, 0x1101000
	009 Move W8, [X20+2405]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xE4A000
	016 Move X0, [X0+3192]
	017 Call 0x1C17CF4
	018 Move X0, 0xE4A000
	019 Move X0, [X0+3200]
	020 Call 0x1C17CF4
	021 Move X0, 0xE4B000
	022 Move X0, [X0+1376]
	023 Call 0x1C17CF4
	024 Move X0, 0xE18000
	025 Move X0, [X0+1728]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+2405], W8
	029 Move X20, 0xE4A000
	030 Move X20, [X20+3192]
	031 Move X0, [X19+16]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Add X1, X31, 0
	034 Move [X31], V0
	035 Move [X31+8], V0
	036 Call 0x1C851C8
	037 Move W23, [X31+16]
	038 Move W21, [X31+20]
	039 Move TEMP, X23
	040 And TEMP, TEMP, 0x2000
	041 Compare TEMP, 0x2000
	042 JumpIfEqual {48}
	043 Move TEMP, X21
	044 And TEMP, TEMP, 128
	045 Compare TEMP, 128
	046 JumpIfEqual {66}
	047 Move X20, X31
	048 Move X0, [X20]
	049 And W31, W21, 128
	050 Move W8, 1
	051 NotImplemented "Instruction CINC not yet implemented."
	052 Call 0x1C17D6C
	053 Move X20, X0
	054 Move TEMP, X21
	055 And TEMP, TEMP, 128
	056 Compare TEMP, 128
	057 JumpIfEqual {72}
	058 Move X0, X19
	059 Call RuntimeMethodInfo.GetDllImportAttributeData, X0
	060 Compare X20, 0
	061 JumpIfEqual {144}
	062 Move X19, X0
	063 Move W21, W31
	064 Compare X19, 0
	065 JumpIfNotEqual {125}
	066 Move X0, [X20]
	067 Move W1, W21
	068 ShiftRight W1, 7
	069 And W1, W1, 127
	070 Call 0x1C17D6C
	071 Move X20, X0
	072 Move X22, 0xE18000
	073 Move X22, [X22+1728]
	074 Move X8, 0xE4B000
	075 Move X0, [X22]
	076 Move X8, [X8+1376]
	077 Move W9, [X0+224]
	078 Move X21, [X8]
	079 Compare W9, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move X0, X21
	083 Move X1, X31
	084 Call Type.GetTypeFromHandle, X0
	085 Compare X0, 0
	086 JumpIfEqual {144}
	087 Move X8, [X22]
	088 Move X2, X31
	089 Move X8, [X8+184]
	090 Move X1, [X8+16]
	091 Call Type.GetConstructor, X0, X1
	092 Move X8, 0xE4A000
	093 Move X8, [X8+3200]
	094 Move X22, X0
	095 Move X8, [X8]
	096 Move X0, X8
	097 Call 0x1C17F10
	098 Move X1, X22
	099 Move X21, X0
	100 Call CustomAttributeData..ctor, X0, X1
	101 Compare X20, 0
	102 JumpIfEqual {144}
	103 Compare X21, 0
	104 JumpIfEqual {111}
	105 Move X8, [X20]
	106 Move X0, X21
	107 Move X1, [X8+64]
	108 Call 0x1C17E00
	109 Compare X0, 0
	110 JumpIfEqual {146}
	111 Move W8, [X20+24]
	112 Compare W8, 0
	113 JumpIfEqual {145}
	114 Move [X20+32], X21
	115 Move TEMP, X23
	116 And TEMP, TEMP, 0x2000
	117 Compare TEMP, 0x2000
	118 JumpIfNotEqual {135}
	119 Move X0, X19
	120 Call RuntimeMethodInfo.GetDllImportAttributeData, X0
	121 Move X19, X0
	122 Move W21, 1
	123 Compare X19, 0
	124 JumpIfEqual {131}
	125 Move X8, [X20]
	126 Move X0, X19
	127 Move X1, [X8+64]
	128 Call 0x1C17E00
	129 Compare X0, 0
	130 JumpIfEqual {146}
	131 Move W8, [X20+24]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Add X8, X20, W21
	134 Move [X8+32], X19
	135 Move X0, X20
	136 Move X20, [X31+64]
	137 Move X19, [X31+72]
	138 Move X22, [X31+48]
	139 Move X21, [X31+56]
	140 Move X30, [X31+32]
	141 Move X23, [X31+40]
	142 Add X31, X31, 80
	143 Return X0
	144 Call 0x1C17F20
	145 Call 0x1C17F28
	146 Call 0x1C17F44
	147 Move X1, X31
	148 Call 0x1C17DEC

Method: System.Reflection.CustomAttributeData GetDllImportAttributeData()

Disassembly:
	0x032DCAF0 LDR X0, [X0 + 0x490]
	0x032DCAF4 BL 0x1C16D08
	0x032DCAF8 BL 0x1C16F10
	0x032DCAFC MOV X19, X0
	0x032DCB00 ADRP X0, 0xE4A000
	0x032DCB04 LDR X0, [X0 + 0x610]
	0x032DCB08 BL 0x1C16D08
	0x032DCB0C MOV X1, X0
	0x032DCB10 MOV X0, X19
	0x032DCB14 MOV X2, X31
	0x032DCB18 BL 0x32D2788
	0x032DCB1C ADRP X0, 0xE4A000
	0x032DCB20 LDR X0, [X0 + 0x618]
	0x032DCB24 BL 0x1C16D08
	0x032DCB28 MOV X1, X0
	0x032DCB2C MOV X0, X19
	0x032DCB30 BL 0x1C16DEC
	0x032DCB34 STP X30, X25, [X31 - 0x40]!
	0x032DCB38 STP X24, X23, [X31 + 0x10]
	0x032DCB3C STP X22, X21, [X31 + 0x20]
	0x032DCB40 STP X20, X19, [X31 + 0x30]
	0x032DCB44 ADRP X25, 0x1100000
	0x032DCB48 LDRB W8, [X25 + 0x96B]
	0x032DCB4C MOV X23, X5
	0x032DCB50 MOV X20, X4
	0x032DCB54 MOV X24, X3
	0x032DCB58 MOV W22, W2
	0x032DCB5C MOV X21, X1
	0x032DCB60 MOV X19, X0
	0x032DCB64 TBNZ X8, 0x0, 0x32DCB7C
	0x032DCB68 ADRP X0, 0xE17000
	0x032DCB6C LDR X0, [X0 + 0x6C0]
	0x032DCB70 BL 0x1C16CF4
	0x032DCB74 MOVZ W8, 0x1
	0x032DCB78 STRB W8, [X25 + 0x96B]
	0x032DCB7C CBNZ X24, 0x32DCBA4
	0x032DCB80 ADRP X8, 0xE17000
	0x032DCB84 LDR X8, [X8 + 0x6C0]
	0x032DCB88 LDR X0, [X8]
	0x032DCB8C LDR W8, [X0 + 0xE0]
	0x032DCB90 CBNZ W8, 0x32DCB98
	0x032DCB94 BL 0x1C16DFC
	0x032DCB98 MOV X0, X31
	0x032DCB9C BL 0x33981F8
	0x032DCBA0 MOV X24, X0
	0x032DCBA4 LDR X0, [X19 + 0x10]
	0x032DCBA8 MOV X1, X19
	0x032DCBAC BL 0x1C8422C
	0x032DCBB0 MOV X2, X0
	0x032DCBB4 MOV X0, X24
	0x032DCBB8 MOV X1, X20
	0x032DCBBC MOV X3, X23
	0x032DCBC0 MOV W4, W22
	0x032DCBC4 BL 0x32DB334
	0x032DCBC8 CBNZ X21, 0x32DCBF4
	0x032DCBCC LDR X8, [X19]
	0x032DCBD0 MOV X0, X19
	0x032DCBD4 LDP X9, X1, [X8 + 0x1B8]
	0x032DCBD8 BLR X9
	0x032DCBDC CBZ X0, 0x32DCC40
	0x032DCBE0 LDR X8, [X0]
	0x032DCBE4 LDR X9, [X8 + 0x288]
	0x032DCBE8 LDR X1, [X8 + 0x290]
	0x032DCBEC BLR X9
	0x032DCBF0 TBNZ X0, 0x0, 0x32DCC74
	0x032DCBF4 TBZ X22, 0x9, 0x32DCC18
	0x032DCBF8 LDR X8, [X19]
	0x032DCBFC MOV X0, X19
	0x032DCC00 LDP X9, X1, [X8 + 0x1B8]
	0x032DCC04 BLR X9
	0x032DCC08 CBZ X0, 0x32DCC40
	0x032DCC0C MOV X1, X31
	0x032DCC10 BL 0x339703C
	0x032DCC14 TBNZ X0, 0x0, 0x32DCC44
	0x032DCC18 ANDS W31, W22, 0x2000000
	0x032DCC1C MOV X0, X19
	0x032DCC20 MOV X1, X21
	0x032DCC24 MOV X2, X20
	0x032DCC28 LDP X20, X19, [X31 + 0x30]
	0x032DCC2C LDP X22, X21, [X31 + 0x20]
	0x032DCC30 LDP X24, X23, [X31 + 0x10]
	0x032DCC34 CSET W3, EQ
	0x032DCC38 LDP X30, X25, [X31], #0x40
	0x032DCC3C B 0x32DCD0C
	0x032DCC40 BL 0x1C16F20
	0x032DCC44 LDR X8, [X19]
	0x032DCC48 MOV X0, X19
	0x032DCC4C LDP X9, X1, [X8 + 0x1B8]
	0x032DCC50 BLR X9
	0x032DCC54 MOV X19, X0
	0x032DCC58 ADRP X0, 0xE4A000
	0x032DCC5C LDR X0, [X0 + 0x620]
	0x032DCC60 BL 0x1C16D08
	0x032DCC64 MOV X1, X19
	0x032DCC68 MOV X2, X31
	0x032DCC6C BL 0x321EFD0
	0x032DCC70 B 0x32DCCD0
	0x032DCC74 LDR X8, [X19]
	0x032DCC78 MOV X0, X19
	0x032DCC7C LDP X9, X1, [X8 + 0x1B8]
	0x032DCC80 BLR X9
	0x032DCC84 MOV X20, X0
	0x032DCC88 ADRP X0, 0xE4A000
	0x032DCC8C LDR X0, [X0 + 0x628]
	0x032DCC90 BL 0x1C16D08
	0x032DCC94 MOV X19, X0
	0x032DCC98 CBZ X20, 0x32DCCB0
	0x032DCC9C LDR X8, [X20]
	0x032DCCA0 MOV X0, X20
	0x032DCCA4 LDP X9, X1, [X8 + 0x168]
	0x032DCCA8 BLR X9
	0x032DCCAC MOV X20, X0
	0x032DCCB0 ADRP X0, 0xE4A000
	0x032DCCB4 LDR X0, [X0 + 0x630]
	0x032DCCB8 BL 0x1C16D08
	0x032DCCBC MOV X2, X0
	0x032DCCC0 MOV X0, X19
	0x032DCCC4 MOV X1, X20
	0x032DCCC8 MOV X3, X31
	0x032DCCCC BL 0x32274B8
	0x032DCCD0 MOV X19, X0
	0x032DCCD4 ADRP X0, 0xE4A000
	0x032DCCD8 LDR X0, [X0 + 0x638]
	0x032DCCDC BL 0x1C16D08
	0x032DCCE0 BL 0x1C16F10
	0x032DCCE4 MOV X1, X19
	0x032DCCE8 MOV X2, X31
	0x032DCCEC MOV X20, X0
	0x032DCCF0 BL 0x337F664
	0x032DCCF4 ADRP X0, 0xE4A000
	0x032DCCF8 LDR X0, [X0 + 0x640]
	0x032DCCFC BL 0x1C16D08
	0x032DCD00 MOV X1, X0
	0x032DCD04 MOV X0, X20
	0x032DCD08 BL 0x1C16DEC
	0x032DCD0C STR X30, [X31 - 0x20]!
	0x032DCD10 STP X20, X19, [X31 + 0x10]
	0x032DCD14 MOV X19, X1
	0x032DCD18 STR X31, [X31 + 0x8]
	0x032DCD1C TBZ X3, 0x0, 0x32DCD30
	0x032DCD20 ADD X3, X31, 0x8
	0x032DCD24 MOV X1, X19
	0x032DCD28 BL 0x1C94170
	0x032DCD2C B 0x32DCD3C
	0x032DCD30 ADD X3, X31, 0x8
	0x032DCD34 MOV X1, X19
	0x032DCD38 BL 0x1C94170
	0x032DCD3C LDR X8, [X31 + 0x8]
	0x032DCD40 CBNZ X8, 0x32DCD58
	0x032DCD44 CMP X19, 0x0
	0x032DCD48 LDP X20, X19, [X31 + 0x10]
	0x032DCD4C CSEL X0, X0, X31, EQ
	0x032DCD50 LDR X30, [X31], #0x20
	0x032DCD54 RET
	0x032DCD58 ADRP X0, 0xE4A000
	0x032DCD5C LDR X0, [X0 + 0x648]
	0x032DCD60 MOV X19, X8
	0x032DCD64 BL 0x1C16D08
	0x032DCD68 MOV X1, X0
	0x032DCD6C MOV X0, X19
	0x032DCD70 BL 0x1C16DEC
	0x032DCD74 CMP W1, 0x1
	0x032DCD78 MOV X19, X0
	0x032DCD7C B.NE 0x32DCE58
	0x032DCD80 MOV X0, X19
	0x032DCD84 BL 0x3EB1AD0
	0x032DCD88 MOV X19, X0
	0x032DCD8C ADRP X0, 0xE4A000
	0x032DCD90 LDR X0, [X0 + 0x530]
	0x032DCD94 BL 0x1C16D08
	0x032DCD98 LDR X8, [X19]
	0x032DCD9C LDR X1, [X8]
	0x032DCDA0 BL 0x1C17270
	0x032DCDA4 TBZ X0, 0x0, 0x32DCDB8
	0x032DCDA8 LDR X19, [X19]
	0x032DCDAC BL 0x3EB1AE0
	0x032DCDB0 MOV X0, X19
	0x032DCDB4 BL 0x1C16F18
	0x032DCDB8 ADRP X0, 0xE17000
	0x032DCDBC LDR X0, [X0 + 0x858]
	0x032DCDC0 BL 0x1C16D08
	0x032DCDC4 LDR X8, [X19]
	0x032DCDC8 LDR X1, [X8]
	0x032DCDCC BL 0x1C17270
	0x032DCDD0 TBNZ X0, 0x0, 0x32DCDA8
	0x032DCDD4 ADRP X0, 0xE17000
	0x032DCDD8 LDR X0, [X0 + 0x7D0]
	0x032DCDDC BL 0x1C16D08
	0x032DCDE0 LDR X8, [X19]
	0x032DCDE4 LDR X1, [X8]
	0x032DCDE8 BL 0x1C17270
	0x032DCDEC TBZ X0, 0x0, 0x32DCE30
	0x032DCDF0 LDR X19, [X19]
	0x032DCDF4 BL 0x3EB1AE0
	0x032DCDF8 ADRP X0, 0xE47000
	0x032DCDFC LDR X0, [X0 + 0xF60]
	0x032DCE00 BL 0x1C16D08
	0x032DCE04 BL 0x1C16F10
	0x032DCE08 MOV X1, X19
	0x032DCE0C MOV X2, X31
	0x032DCE10 MOV X20, X0
	0x032DCE14 BL 0x32D27DC
	0x032DCE18 ADRP X0, 0xE4A000
	0x032DCE1C LDR X0, [X0 + 0x648]
	0x032DCE20 BL 0x1C16D08
	0x032DCE24 MOV X1, X0
	0x032DCE28 MOV X0, X20
	0x032DCE2C BL 0x1C16DEC
	0x032DCE30 MOVZ W0, 0x8
	0x032DCE34 BL 0x3EB1AF0
	0x032DCE38 LDR X8, [X19]
	0x032DCE3C STR X8, [X0]
	0x032DCE40 ADRP X1, 0xBD8000
	0x032DCE44 ADD X1, X1, 0xE58
	0x032DCE48 MOV X2, X31
	0x032DCE4C BL 0x3EB1B00
	0x032DCE50 MOV X19, X0
	0x032DCE54 BL 0x3EB1AE0
	0x032DCE58 MOV X0, X19
	0x032DCE5C BL 0x1D2C690
	0x032DCE60 BL 0x1990590
	0x032DCE64 MOV X5, X4
	0x032DCE68 MOV X4, X3
	0x032DCE6C MOV X3, X2
	0x032DCE70 MOV W2, W1
	0x032DCE74 MOV X1, X31
	0x032DCE78 B 0x32DCB34
	0x032DCE7C LDR X0, [X0 + 0x10]
	0x032DCE80 RET
	0x032DCE84 LDR X0, [X0 + 0x10]
	0x032DCE88 B 0x1C2B380
	0x032DCE8C SUB X31, X31, 0x30
	0x032DCE90 STR X30, [X31 + 0x20]
	0x032DCE94 LDR X0, [X0 + 0x10]
	0x032DCE98 MOVI V0.2D, 0x0
	0x032DCE9C ADD X1, X31, 0x0
	0x032DCEA0 STP V0, V0, [X31]
	0x032DCEA4 BL 0x1C841C8
	0x032DCEA8 LDR W0, [X31 + 0x18]
	0x032DCEAC LDR X30, [X31 + 0x20]
	0x032DCEB0 ADD X31, X31, 0x30
	0x032DCEB4 RET
	0x032DCEB8 STR X30, [X31 - 0x10]!
	0x032DCEBC LDR X8, [X0]
	0x032DCEC0 LDP X9, X1, [X8 + 0x1B8]
	0x032DCEC4 BLR X9
	0x032DCEC8 CBZ X0, 0x32DCEE0
	0x032DCECC LDR X8, [X0]
	0x032DCED0 LDR X2, [X8 + 0x288]
	0x032DCED4 LDR X1, [X8 + 0x290]
	0x032DCED8 LDR X30, [X31], #0x10
	0x032DCEDC BR X2
	0x032DCEE0 BL 0x1C16F20
	0x032DCEE4 LDR X0, [X0 + 0x20]
	0x032DCEE8 RET
	0x032DCEEC SUB X31, X31, 0x30
	0x032DCEF0 STR X30, [X31 + 0x20]
	0x032DCEF4 LDR X0, [X0 + 0x10]
	0x032DCEF8 MOVI V0.2D, 0x0
	0x032DCEFC ADD X1, X31, 0x0
	0x032DCF00 STP V0, V0, [X31]
	0x032DCF04 BL 0x1C841C8
	0x032DCF08 LDR X0, [X31]
	0x032DCF0C LDR X30, [X31 + 0x20]
	0x032DCF10 ADD X31, X31, 0x30
	0x032DCF14 RET
	0x032DCF18 LDR X8, [X0 + 0x18]
	0x032DCF1C CBZ X8, 0x32DCF28
	0x032DCF20 MOV X0, X8
	0x032DCF24 RET
	0x032DCF28 B 0x1C72118
	0x032DCF2C STP X30, X23, [X31 - 0x30]!
	0x032DCF30 STP X22, X21, [X31 + 0x10]
	0x032DCF34 STP X20, X19, [X31 + 0x20]
	0x032DCF38 ADRP X22, 0x1100000
	0x032DCF3C ADRP X23, 0xE4A000
	0x032DCF40 LDRB W8, [X22 + 0x96C]
	0x032DCF44 LDR X23, [X23 + 0x3E0]
	0x032DCF48 MOV W21, W2
	0x032DCF4C MOV X19, X1
	0x032DCF50 MOV X20, X0
	0x032DCF54 TBNZ X8, 0x0, 0x32DCF6C
	0x032DCF58 ADRP X0, 0xE4A000
	0x032DCF5C LDR X0, [X0 + 0x3E0]
	0x032DCF60 BL 0x1C16CF4
	0x032DCF64 MOVZ W8, 0x1
	0x032DCF68 STRB W8, [X22 + 0x96C]
	0x032DCF6C LDR X0, [X23]
	0x032DCF70 LDR W8, [X0 + 0xE0]
	0x032DCF74 CBNZ W8, 0x32DCF7C
	0x032DCF78 BL 0x1C16DFC
	0x032DCF7C AND W2, W21, 0x1
	0x032DCF80 MOV X0, X20
	0x032DCF84 MOV X1, X19
	0x032DCF88 LDP X20, X19, [X31 + 0x20]
	0x032DCF8C LDP X22, X21, [X31 + 0x10]
	0x032DCF90 MOV X3, X31
	0x032DCF94 LDP X30, X23, [X31], #0x30
	0x032DCF98 B 0x33C9FDC
	0x032DCF9C STR X30, [X31 - 0x30]!
	0x032DCFA0 STP X22, X21, [X31 + 0x10]
	0x032DCFA4 STP X20, X19, [X31 + 0x20]
	0x032DCFA8 ADRP X21, 0x1100000
	0x032DCFAC ADRP X22, 0xE4A000
	0x032DCFB0 LDRB W8, [X21 + 0x96D]
	0x032DCFB4 LDR X22, [X22 + 0x3E0]
	0x032DCFB8 MOV W20, W1
	0x032DCFBC MOV X19, X0
	0x032DCFC0 TBNZ X8, 0x0, 0x32DCFD8
	0x032DCFC4 ADRP X0, 0xE4A000
	0x032DCFC8 LDR X0, [X0 + 0x3E0]
	0x032DCFCC BL 0x1C16CF4
	0x032DCFD0 MOVZ W8, 0x1
	0x032DCFD4 STRB W8, [X21 + 0x96D]
	0x032DCFD8 LDR X0, [X22]
	0x032DCFDC LDR W8, [X0 + 0xE0]
	0x032DCFE0 CBNZ W8, 0x32DCFE8
	0x032DCFE4 BL 0x1C16DFC
	0x032DCFE8 AND W1, W20, 0x1
	0x032DCFEC MOV X0, X19
	0x032DCFF0 LDP X20, X19, [X31 + 0x20]
	0x032DCFF4 LDP X22, X21, [X31 + 0x10]
	0x032DCFF8 MOV X2, X31
	0x032DCFFC LDR X30, [X31], #0x30
	0x032DD000 B 0x33C82AC
	0x032DD004 STP X30, X23, [X31 - 0x30]!
	0x032DD008 STP X22, X21, [X31 + 0x10]
	0x032DD00C STP X20, X19, [X31 + 0x20]
	0x032DD010 ADRP X22, 0x10FF000
	0x032DD014 ADRP X23, 0xE49000
	0x032DD018 LDRB W8, [X22 + 0x96E]
	0x032DD01C LDR X23, [X23 + 0x3E0]
	0x032DD020 MOV W21, W2
	0x032DD024 MOV X19, X1
	0x032DD028 MOV X20, X0
	0x032DD02C TBNZ X8, 0x0, 0x32DD044
	0x032DD030 ADRP X0, 0xE49000
	0x032DD034 LDR X0, [X0 + 0x3E0]
	0x032DD038 BL 0x1C16CF4
	0x032DD03C MOVZ W8, 0x1
	0x032DD040 STRB W8, [X22 + 0x96E]
	0x032DD044 LDR X0, [X23]
	0x032DD048 LDR W8, [X0 + 0xE0]
	0x032DD04C CBNZ W8, 0x32DD054
	0x032DD050 BL 0x1C16DFC
	0x032DD054 AND W2, W21, 0x1
	0x032DD058 MOV X0, X20
	0x032DD05C MOV X1, X19
	0x032DD060 LDP X20, X19, [X31 + 0x20]
	0x032DD064 LDP X22, X21, [X31 + 0x10]
	0x032DD068 MOV X3, X31
	0x032DD06C LDP X30, X23, [X31], #0x30
	0x032DD070 B 0x33C7388
	0x032DD074 STP X30, X21, [X31 - 0x20]!
	0x032DD078 STP X20, X19, [X31 + 0x10]
	0x032DD07C ADRP X21, 0x10FF000
	0x032DD080 ADRP X20, 0xE49000
	0x032DD084 LDRB W8, [X21 + 0x96F]
	0x032DD088 LDR X20, [X20 + 0x650]
	0x032DD08C MOV X19, X0
	0x032DD090 TBNZ X8, 0x0, 0x32DD0A8
	0x032DD094 ADRP X0, 0xE49000
	0x032DD098 LDR X0, [X0 + 0x650]
	0x032DD09C BL 0x1C16CF4
	0x032DD0A0 MOVZ W8, 0x1
	0x032DD0A4 STRB W8, [X21 + 0x96F]
	0x032DD0A8 LDR X8, [X19]
	0x032DD0AC MOV X0, X19
	0x032DD0B0 MOV W1, W31
	0x032DD0B4 LDR X9, [X8 + 0x378]
	0x032DD0B8 LDR X2, [X8 + 0x380]
	0x032DD0BC BLR X9
	0x032DD0C0 LDR X8, [X20]
	0x032DD0C4 LDP X20, X19, [X31 + 0x10]
	0x032DD0C8 MOV X1, X0
	0x032DD0CC MOV X2, X31
	0x032DD0D0 MOV X0, X8
	0x032DD0D4 LDP X30, X21, [X31], #0x20
	0x032DD0D8 B 0x321B938
	0x032DD0DC B 0x32D76D0
	0x032DD0E0 MOVZ W0, 0x1
	0x032DD0E4 RET
	0x032DD0E8 MOVZ W0, 0x1
	0x032DD0EC RET
	0x032DD0F0 B 0x1C718C4
	0x032DD0F4 B 0x1C718C4
	0x032DD0F8 STP X30, X21, [X31 - 0x20]!
	0x032DD0FC STP X20, X19, [X31 + 0x10]
	0x032DD100 ADRP X20, 0x10FF000
	0x032DD104 ADRP X21, 0xE40000
	0x032DD108 LDRB W8, [X20 + 0x970]
	0x032DD10C LDR X21, [X21 + 0x978]
	0x032DD110 MOV X19, X0
	0x032DD114 TBNZ X8, 0x0, 0x32DD12C
	0x032DD118 ADRP X0, 0xE40000
	0x032DD11C LDR X0, [X0 + 0x978]
	0x032DD120 BL 0x1C16CF4
	0x032DD124 MOVZ W8, 0x1
	0x032DD128 STRB W8, [X20 + 0x970]
	0x032DD12C LDR X0, [X21]
	0x032DD130 LDR W8, [X0 + 0xE0]
	0x032DD134 CBNZ W8, 0x32DD13C
	0x032DD138 BL 0x1C16DFC
	0x032DD13C MOV X0, X19
	0x032DD140 LDP X20, X19, [X31 + 0x10]
	0x032DD144 MOV X1, X31
	0x032DD148 LDP X30, X21, [X31], #0x20
	0x032DD14C B 0x32CC7D0
	0x032DD150 LDR X0, [X0 + 0x18]
	0x032DD154 RET
	0x032DD158 LDR X0, [X0 + 0x30]
	0x032DD15C RET
	0x032DD160 LDR X8, [X0]
	0x032DD164 LDR X2, [X8 + 0x218]
	0x032DD168 LDR X1, [X8 + 0x220]
	0x032DD16C BR X2
	0x032DD170 LDRB W0, [X0 + 0x38]
	0x032DD174 RET
	0x032DD178 STP X30, X23, [X31 - 0x30]!
	0x032DD17C STP X22, X21, [X31 + 0x10]
	0x032DD180 STP X20, X19, [X31 + 0x20]
	0x032DD184 ADRP X22, 0x10FF000
	0x032DD188 ADRP X23, 0xE49000
	0x032DD18C LDRB W8, [X22 + 0x972]
	0x032DD190 LDR X23, [X23 + 0x3E0]
	0x032DD194 MOV W21, W2
	0x032DD198 MOV X19, X1
	0x032DD19C MOV X20, X0
	0x032DD1A0 TBNZ X8, 0x0, 0x32DD1B8
	0x032DD1A4 ADRP X0, 0xE49000
	0x032DD1A8 LDR X0, [X0 + 0x3E0]
	0x032DD1AC BL 0x1C16CF4
	0x032DD1B0 MOVZ W8, 0x1
	0x032DD1B4 STRB W8, [X22 + 0x972]
	0x032DD1B8 LDR X0, [X23]
	0x032DD1BC LDR W8, [X0 + 0xE0]
	0x032DD1C0 CBNZ W8, 0x32DD1C8
	0x032DD1C4 BL 0x1C16DFC
	0x032DD1C8 AND W2, W21, 0x1
	0x032DD1CC MOV X0, X20
	0x032DD1D0 MOV X1, X19
	0x032DD1D4 LDP X20, X19, [X31 + 0x20]
	0x032DD1D8 LDP X22, X21, [X31 + 0x10]
	0x032DD1DC MOV X3, X31
	0x032DD1E0 LDP X30, X23, [X31], #0x30
	0x032DD1E4 B 0x33C7388
	0x032DD1E8 STP X30, X23, [X31 - 0x30]!
	0x032DD1EC STP X22, X21, [X31 + 0x10]
	0x032DD1F0 STP X20, X19, [X31 + 0x20]
	0x032DD1F4 ADRP X22, 0x10FF000
	0x032DD1F8 ADRP X23, 0xE49000
	0x032DD1FC LDRB W8, [X22 + 0x973]
	0x032DD200 LDR X23, [X23 + 0x3E0]
	0x032DD204 MOV W21, W2
	0x032DD208 MOV X19, X1
	0x032DD20C MOV X20, X0
	0x032DD210 TBNZ X8, 0x0, 0x32DD228
	0x032DD214 ADRP X0, 0xE49000
	0x032DD218 LDR X0, [X0 + 0x3E0]
	0x032DD21C BL 0x1C16CF4
	0x032DD220 MOVZ W8, 0x1
	0x032DD224 STRB W8, [X22 + 0x973]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 944
	014 Move X20, 0x1101000
	015 Move W8, [X20+2406]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {77}
	021 Move X0, 0xE18000
	022 Move X0, [X0+2904]
	023 Call 0x1C17CF4
	024 Move X0, 0xE4B000
	025 Move X0, [X0+1384]
	026 Call 0x1C17CF4
	027 Move X0, 0xE4B000
	028 Move X0, [X0+1392]
	029 Call 0x1C17CF4
	030 Move X0, 0xE4A000
	031 Move X0, [X0+3200]
	032 Call 0x1C17CF4
	033 Move X0, 0xE4B000
	034 Move X0, [X0+1400]
	035 Call 0x1C17CF4
	036 Move X0, 0xE4A000
	037 Move X0, [X0+3208]
	038 Call 0x1C17CF4
	039 Move X0, 0xE4B000
	040 Move X0, [X0+1408]
	041 Call 0x1C17CF4
	042 Move X0, 0xE40000
	043 Move X0, [X0+2912]
	044 Call 0x1C17CF4
	045 Move X0, 0xE20000
	046 Move X0, [X0+3168]
	047 Call 0x1C17CF4
	048 Move X0, 0xE18000
	049 Move X0, [X0+1728]
	050 Call 0x1C17CF4
	051 Move X0, 0xE4B000
	052 Move X0, [X0+1416]
	053 Call 0x1C17CF4
	054 Move X0, 0xE4B000
	055 Move X0, [X0+1424]
	056 Call 0x1C17CF4
	057 Move X0, 0xE4B000
	058 Move X0, [X0+1432]
	059 Call 0x1C17CF4
	060 Move X0, 0xE4B000
	061 Move X0, [X0+1440]
	062 Call 0x1C17CF4
	063 Move X0, 0xE4B000
	064 Move X0, [X0+1448]
	065 Call 0x1C17CF4
	066 Move X0, 0xE4B000
	067 Move X0, [X0+1456]
	068 Call 0x1C17CF4
	069 Move X0, 0xE4B000
	070 Move X0, [X0+1464]
	071 Call 0x1C17CF4
	072 Move X0, 0xE4B000
	073 Move X0, [X0+1472]
	074 Call 0x1C17CF4
	075 Move W8, 1
	076 Move [X20+2406], W8
	077 Move [X31+936], X31
	078 Move [X31+928], X31
	079 Move X8, [X19]
	080 Move X0, X19
	081 Move X9, [X8+600]
	082 Move X1, [X8+608]
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move X21, X31
	085 Move TEMP, X0
	086 And TEMP, TEMP, 0x2000
	087 Compare TEMP, 0x2000
	088 JumpIfNotEqual {501}
	089 Move X21, 0xE4A000
	090 Move X23, 0xE40000
	091 Move X20, 0xE18000
	092 Move X21, [X21+3208]
	093 Move X23, [X23+2912]
	094 Move X20, [X20+1728]
	095 Add X1, X31, 924
	096 Add X2, X31, 936
	097 Add X3, X31, 928
	098 Move X0, X19
	099 Move [X31+928], X31
	100 Move [X31+924], W31
	101 Call 0x1C73228
	102 Move W28, [X31+924]
	103 And W8, W28, 1792
	104 NotImplemented "Instruction CMP not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move W27, 5
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move W8, 1
	111 NotImplemented "Instruction CINC not yet implemented."
	112 Move W27, 3
	113 Move W27, 4
	114 Move W27, 2
	115 Move X8, [X19]
	116 And W9, W28, 48
	117 NotImplemented "Instruction CMP not yet implemented."
	118 NotImplemented "Instruction CSET not yet implemented."
	119 Move X9, [X8+616]
	120 Move X1, [X8+624]
	121 And W8, W28, 0x3000
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X0, X19
	124 NotImplemented "Instruction CSET not yet implemented."
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Move X8, [X21]
	127 Move W22, W0
	128 Move W1, 1
	129 Move X0, X8
	130 Call 0x1C17D6C
	131 Move X8, [X20]
	132 Move X20, [X23]
	133 Move X19, X0
	134 Move W9, [X8+224]
	135 Compare W9, 0
	136 JumpIfNotEqual {139}
	137 Move X0, X8
	138 Call 0x1C17DFC
	139 Move X0, X20
	140 Move X1, X31
	141 Call Type.GetTypeFromHandle, X0
	142 Move X2, [X31+928]
	143 Move X1, X0
	144 Add X0, X31, 896
	145 Move X3, X31
	146 Move [X31+904], X31
	147 Move [X31+896], X31
	148 Call CustomAttributeTypedArgument..ctor, X0, X1, X2
	149 Compare X19, 0
	150 JumpIfEqual {517}
	151 Move W8, [X19+24]
	152 Compare W8, 0
	153 JumpIfEqual {516}
	154 Move V0, [X31+56]
	155 Move X8, 0xE4B000
	156 Move X1, X31
	157 Move [X19+2], V0
	158 Move X8, [X8+1408]
	159 Move X0, [X8]
	160 Call Type.GetTypeFromHandle, X0
	161 Move X8, 0xE4B000
	162 Move X8, [X8+1400]
	163 Move X21, X0
	164 Move W1, 8
	165 Move X8, [X8]
	166 Move X0, X8
	167 Call 0x1C17D6C
	168 Compare X21, 0
	169 JumpIfEqual {517}
	170 Move X8, 0xE4B000
	171 Move X8, [X8+1416]
	172 Move X20, X0
	173 Move X0, X21
	174 Move X2, X31
	175 Move X1, [X8]
	176 Call Type.GetField, X0, X1
	177 Move X2, [X31+936]
	178 Move X1, X0
	179 NotImplemented "Instruction MOVI not yet implemented."
	180 Add X0, X31, 848
	181 Move X3, X31
	182 Move [X31+864], V0
	183 Move [X31+872], V0
	184 Move [X31+53], V0
	185 Call CustomAttributeNamedArgument..ctor, X0, X1, X2
	186 Compare X20, 0
	187 JumpIfEqual {517}
	188 Move V0, [X31+848]
	189 Move V1, [X31+864]
	190 Move V2, [X31+55]
	191 Move [X31+800], V0
	192 Move [X31+808], V1
	193 Move [X31+52], V2
	194 Move W8, [X20+24]
	195 Compare W8, 0
	196 JumpIfEqual {516}
	197 Move V2, [X31+816]
	198 Move V0, [X31+832]
	199 Move V1, [X31+50]
	200 Move X9, -41177088
	201 And X8, X28, 7
	202 Add X9, X9, 1544
	203 Move W29, [X9]
	204 Move [X20+48], V2
	205 Move [X20+56], V0
	206 Move [X20+2], V1
	207 Move X8, 0xE4B000
	208 Move X8, [X8+1440]
	209 Move X0, X21
	210 Move X2, X31
	211 Move X1, [X8]
	212 Call Type.GetField, X0, X1
	213 Move X8, 0xE4B000
	214 Move X8, [X8+1392]
	215 Move X23, X0
	216 Add X1, X31, 796
	217 Move [X31+796], W29
	218 Move X0, [X8]
	219 Call 0x1C17E04
	220 Move X2, X0
	221 NotImplemented "Instruction MOVI not yet implemented."
	222 Add X0, X31, 736
	223 Move X1, X23
	224 Move X3, X31
	225 Move [X31+752], V0
	226 Move [X31+760], V0
	227 Move [X31+46], V0
	228 Call CustomAttributeNamedArgument..ctor, X0, X1, X2
	229 Move V1, [X31+752]
	230 Move V0, [X31+768]
	231 Move V2, [X31+46]
	232 Move [X31+704], V1
	233 Move [X31+712], V0
	234 Move [X31+43], V2
	235 Move W8, [X20+24]
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move V1, [X31+704]
	238 Move V0, [X31+720]
	239 Move V2, [X31+43]
	240 Move X8, 0xE4B000
	241 Move X0, X21
	242 Move [X20+96], V1
	243 Move [X20+104], V0
	244 Move [X20+5], V2
	245 Move X8, [X8+1464]
	246 Move X2, X31
	247 And W24, W28, 1
	248 Move X1, [X8]
	249 Call Type.GetField, X0, X1
	250 Move X29, 0xE18000
	251 Move X29, [X29+2904]
	252 Move X23, X0
	253 Add X1, X31, 684
	254 Move [X31+684], W24
	255 Move X0, [X29]
	256 Call 0x1C17E04
	257 Move X2, X0
	258 NotImplemented "Instruction MOVI not yet implemented."
	259 Add X0, X31, 624
	260 Move X1, X23
	261 Move X3, X31
	262 Move [X31+640], V0
	263 Move [X31+648], V0
	264 Move [X31+39], V0
	265 Call CustomAttributeNamedArgument..ctor, X0, X1, X2
	266 Move V1, [X31+640]
	267 Move V0, [X31+656]
	268 Move V2, [X31+39]
	269 Move [X31+592], V1
	270 Move [X31+600], V0
	271 Move [X31+36], V2
	272 Move W8, [X20+24]
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Move V1, [X31+592]
	275 Move V0, [X31+608]
	276 Move V2, [X31+36]
	277 Move X8, 0xE4B000
	278 Move X0, X21
	279 Move [X20+144], V1
	280 Move [X20+152], V0
	281 Move [X20+8], V2
	282 Move X8, [X8+1424]
	283 Move X2, X31
	284 Move W24, W28
	285 ShiftRight W24, 6
	286 And W24, W24, 63
	287 Move X1, [X8]
	288 Call Type.GetField, X0, X1
	289 Move X23, X0
	290 Move X0, [X29]
	291 Add X1, X31, 572
	292 Move [X31+572], W24
	293 Call 0x1C17E04
	294 Move X2, X0
	295 NotImplemented "Instruction MOVI not yet implemented."
	296 Add X0, X31, 512
	297 Move X1, X23
	298 Move X3, X31
	299 Move [X31+528], V0
	300 Move [X31+536], V0
	301 Move [X31+32], V0
	302 Call CustomAttributeNamedArgument..ctor, X0, X1, X2
	303 Move V1, [X31+528]
	304 Move V0, [X31+544]
	305 Move V2, [X31+32]
	306 Move [X31+480], V1
	307 Move [X31+488], V0
	308 Move [X31+29], V2
	309 Move W8, [X20+24]
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Move V1, [X31+480]
	312 Move V0, [X31+496]
	313 Move V2, [X31+29]
	314 Move X8, 0xE4B000
	315 Move X0, X21
	316 Move [X20+192], V1
	317 Move [X20+200], V0
	318 Move [X20+11], V2
	319 Move X8, [X8+1456]
	320 Move X2, X31
	321 Move W23, W22
	322 ShiftRight W23, 7
	323 And W23, W23, 127
	324 Move X1, [X8]
	325 Call Type.GetField, X0, X1
	326 Move X22, X0
	327 Move X0, [X29]
	328 Add X1, X31, 460
	329 Move [X31+460], W23
	330 Call 0x1C17E04
	331 Move X2, X0
	332 NotImplemented "Instruction MOVI not yet implemented."
	333 Add X0, X31, 400
	334 Move X1, X22
	335 Move X3, X31
	336 Move [X31+416], V0
	337 Move [X31+424], V0
	338 Move [X31+25], V0
	339 Call CustomAttributeNamedArgument..ctor, X0, X1, X2
	340 Move V1, [X31+416]
	341 Move V0, [X31+432]
	342 Move V2, [X31+25]
	343 Move [X31+368], V1
	344 Move [X31+376], V0
	345 Move [X31+22], V2
	346 Move W8, [X20+24]
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Move V1, [X31+368]
	349 Move V0, [X31+384]
	350 Move V2, [X31+22]
	351 Move X8, 0xE4B000
	352 Move X0, X21
	353 Move [X20+240], V1
	354 Move [X20+248], V0
	355 Move [X20+14], V2
	356 Move X8, [X8+1472]
	357 Move X2, X31
	358 Move X1, [X8]
	359 Call Type.GetField, X0, X1
	360 Move X8, 0xE4A000
	361 Move X8, [X8+1384]
	362 Move X22, X0
	363 Add X1, X31, 348
	364 Move [X31+348], W27
	365 Move X0, [X8]
	366 Call 0x1C17E04
	367 Move X2, X0
	368 NotImplemented "Instruction MOVI not yet implemented."
	369 Add X0, X31, 288
	370 Move X1, X22
	371 Move X3, X31
	372 Move [X31+304], V0
	373 Move [X31+312], V0
	374 Move [X31+18], V0
	375 Call CustomAttributeNamedArgument..ctor, X0, X1, X2
	376 Move V1, [X31+304]
	377 Move V0, [X31+320]
	378 Move V2, [X31+18]
	379 Move [X31+256], V1
	380 Move [X31+264], V0
	381 Move [X31+15], V2
	382 Move W8, [X20+24]
	383 NotImplemented "Instruction CMP not yet implemented."
	384 Move V1, [X31+256]
	385 Move V0, [X31+272]
	386 Move V2, [X31+15]
	387 Move X8, 0xE4A000
	388 Move X0, X21
	389 Move [X20+288], V1
	390 Move [X20+296], V0
	391 Move [X20+17], V2
	392 Move X8, [X8+1448]
	393 Move X2, X31
	394 Move X1, [X8]
	395 Call Type.GetField, X0, X1
	396 Move X22, X0
	397 Move X0, [X29]
	398 Add X1, X31, 236
	399 Move [X31+236], W26
	400 Call 0x1C17E04
	401 Move X2, X0
	402 NotImplemented "Instruction MOVI not yet implemented."
	403 Add X0, X31, 176
	404 Move X1, X22
	405 Move X3, X31
	406 Move [X31+192], V0
	407 Move [X31+200], V0
	408 Move [X31+11], V0
	409 Call CustomAttributeNamedArgument..ctor, X0, X1, X2
	410 Move V1, [X31+192]
	411 Move V0, [X31+208]
	412 Move V2, [X31+11]
	413 Move [X31+144], V1
	414 Move [X31+152], V0
	415 Move [X31+8], V2
	416 Move W8, [X20+24]
	417 NotImplemented "Instruction CMP not yet implemented."
	418 Move V1, [X31+144]
	419 Move V0, [X31+160]
	420 Move V2, [X31+8]
	421 Move X8, 0xE4A000
	422 Move X0, X21
	423 Move [X20+336], V1
	424 Move [X20+344], V0
	425 Move [X20+20], V2
	426 Move X8, [X8+1432]
	427 Move X2, X31
	428 Move X1, [X8]
	429 Call Type.GetField, X0, X1
	430 Move X22, X0
	431 Move X0, [X29]
	432 Add X1, X31, 124
	433 Move [X31+124], W25
	434 Call 0x1C17E04
	435 Move X2, X0
	436 NotImplemented "Instruction MOVI not yet implemented."
	437 Add X0, X31, 64
	438 Move X1, X22
	439 Move X3, X31
	440 Move [X31+80], V0
	441 Move [X31+88], V0
	442 Move [X31+4], V0
	443 Call CustomAttributeNamedArgument..ctor, X0, X1, X2
	444 Move V1, [X31+80]
	445 Move V0, [X31+96]
	446 Move V2, [X31+4]
	447 Move [X31+32], V1
	448 Move [X31+40], V0
	449 Move [X31+1], V2
	450 Move W8, [X20+24]
	451 NotImplemented "Instruction CMP not yet implemented."
	452 Move V1, [X31+32]
	453 Move V0, [X31+48]
	454 Move V2, [X31+1]
	455 Move X8, 0xE1F000
	456 Move W1, 1
	457 Move [X20+384], V1
	458 Move [X20+392], V0
	459 Move [X20+23], V2
	460 Move X8, [X8+3168]
	461 Move X0, [X8]
	462 Call 0x1C17D6C
	463 Move X8, 0xE3F000
	464 Move X8, [X8+2912]
	465 Move X22, X0
	466 Move X1, X31
	467 Move X8, [X8]
	468 Move X0, X8
	469 Call Type.GetTypeFromHandle, X0
	470 Compare X22, 0
	471 JumpIfEqual {517}
	472 Move X23, X0
	473 Compare X0, 0
	474 JumpIfEqual {481}
	475 Move X8, [X22]
	476 Move X0, X23
	477 Move X1, [X8+64]
	478 Call 0x1C17E00
	479 Compare X0, 0
	480 JumpIfEqual {518}
	481 Move W8, [X22+24]
	482 Compare W8, 0
	483 JumpIfEqual {516}
	484 Move X0, X21
	485 Move X1, X22
	486 Move X2, X31
	487 Move [X22+32], X23
	488 Call Type.GetConstructor, X0, X1
	489 Move X8, 0xE49000
	490 Move X8, [X8+3200]
	491 Move X22, X0
	492 Move X8, [X8]
	493 Move X0, X8
	494 Call 0x1C17F10
	495 Move X1, X31
	496 Move X21, X0
	497 Call Object..ctor, X0
	498 Move [X21+16], X22
	499 Move [X21+24], X19
	500 Move [X21+32], X20
	501 Move X0, X21
	502 Add X31, X31, 944
	503 Move X20, [X31+80]
	504 Move X19, [X31+88]
	505 Move X22, [X31+64]
	506 Move X21, [X31+72]
	507 Move X24, [X31+48]
	508 Move X23, [X31+56]
	509 Move X26, [X31+32]
	510 Move X25, [X31+40]
	511 Move X28, [X31+16]
	512 Move X27, [X31+24]
	513 Move X29, [X31+96]
	514 Move X30, [X31+104]
	515 Return X0
	516 Call 0x1C17F28
	517 Call 0x1C17F20
	518 Call 0x1C17F44
	519 Move X1, X31
	520 Call 0x1C17DEC

Method: System.Reflection.MethodInfo MakeGenericMethod(System.Type[] methodInstantiation)

Disassembly:
	0x032DD228 LDR X0, [X23]
	0x032DD22C LDR W8, [X0 + 0xE0]
	0x032DD230 CBNZ W8, 0x32DD238
	0x032DD234 BL 0x1C16DFC
	0x032DD238 AND W2, W21, 0x1
	0x032DD23C MOV X0, X20
	0x032DD240 MOV X1, X19
	0x032DD244 LDP X20, X19, [X31 + 0x20]
	0x032DD248 LDP X22, X21, [X31 + 0x10]
	0x032DD24C MOV X3, X31
	0x032DD250 LDP X30, X23, [X31], #0x30
	0x032DD254 B 0x33C9FDC
	0x032DD258 STP X30, X21, [X31 - 0x20]!
	0x032DD25C STP X20, X19, [X31 + 0x10]
	0x032DD260 CBZ X1, 0x32DD2A4
	0x032DD264 LDR X8, [X0]
	0x032DD268 MOV X19, X1
	0x032DD26C MOV X20, X0
	0x032DD270 LDP X9, X1, [X8 + 0x1C8]
	0x032DD274 BLR X9
	0x032DD278 MOV X21, X0
	0x032DD27C MOV X0, X20
	0x032DD280 BL 0x32DD2EC
	0x032DD284 MOV X3, X0
	0x032DD288 MOV X0, X19
	0x032DD28C LDP X20, X19, [X31 + 0x10]
	0x032DD290 MOVZ W1, 0x5
	0x032DD294 MOV X2, X21
	0x032DD298 MOV X4, X31
	0x032DD29C LDP X30, X21, [X31], #0x20
	0x032DD2A0 B 0x33BF534
	0x032DD2A4 ADRP X0, 0xE1B000
	0x032DD2A8 LDR X0, [X0 + 0x528]
	0x032DD2AC BL 0x1C16D08
	0x032DD2B0 BL 0x1C16F10
	0x032DD2B4 MOV X19, X0
	0x032DD2B8 ADRP X0, 0xE40000
	0x032DD2BC LDR X0, [X0 + 0x2D8]
	0x032DD2C0 BL 0x1C16D08
	0x032DD2C4 MOV X1, X0
	0x032DD2C8 MOV X0, X19
	0x032DD2CC MOV X2, X31
	0x032DD2D0 BL 0x330E100
	0x032DD2D4 ADRP X0, 0xE49000
	0x032DD2D8 LDR X0, [X0 + 0x658]
	0x032DD2DC BL 0x1C16D08
	0x032DD2E0 MOV X1, X0
	0x032DD2E4 MOV X0, X19
	0x032DD2E8 BL 0x1C16DEC
	0x032DD2EC STR X30, [X31 - 0x20]!
	0x032DD2F0 STP X20, X19, [X31 + 0x10]
	0x032DD2F4 ADRP X20, 0x10FF000
	0x032DD2F8 LDRB W8, [X20 + 0x974]
	0x032DD2FC MOV X19, X0
	0x032DD300 TBNZ X8, 0x0, 0x32DD318
	0x032DD304 ADRP X0, 0xE44000
	0x032DD308 LDR X0, [X0 + 0xAD0]
	0x032DD30C BL 0x1C16CF4
	0x032DD310 MOVZ W8, 0x1
	0x032DD314 STRB W8, [X20 + 0x974]
	0x032DD318 LDR X0, [X19 + 0x18]
	0x032DD31C CBZ X0, 0x32DD354
	0x032DD320 ADRP X9, 0xE44000
	0x032DD324 LDR X9, [X9 + 0xAD0]
	0x032DD328 LDR X8, [X0]
	0x032DD32C LDR X1, [X9]
	0x032DD330 LDRB W10, [X8 + 0x130]
	0x032DD334 LDRB W9, [X1 + 0x130]
	0x032DD338 CMP W10, W9
	0x032DD33C B.CC 0x32DD360
	0x032DD340 LDR X8, [X8 + 0xC8]
	0x032DD344 ADD X8, X8, X9, 0x3, LSL
	0x032DD348 LDUR X8, [X8 - 0x8]
	0x032DD34C CMP X8, X1
	0x032DD350 B.NE 0x32DD360
	0x032DD354 LDP X20, X19, [X31 + 0x10]
	0x032DD358 LDR X30, [X31], #0x20
	0x032DD35C RET
	0x032DD360 BL 0x1C171E0
	0x032DD364 SUB X31, X31, 0x30
	0x032DD368 STP X30, X21, [X31 + 0x10]
	0x032DD36C STP X20, X19, [X31 + 0x20]
	0x032DD370 ADRP X20, 0x10FF000
	0x032DD374 ADRP X21, 0xE16000
	0x032DD378 LDRB W8, [X20 + 0x975]
	0x032DD37C LDR X21, [X21 + 0x618]
	0x032DD380 MOV X19, X0
	0x032DD384 TBNZ X8, 0x0, 0x32DD39C
	0x032DD388 ADRP X0, 0xE16000
	0x032DD38C LDR X0, [X0 + 0x618]
	0x032DD390 BL 0x1C16CF4
	0x032DD394 MOVZ W8, 0x1
	0x032DD398 STRB W8, [X20 + 0x975]
	0x032DD39C LDR X0, [X21]
	0x032DD3A0 MOVZ W1, 0x10
	0x032DD3A4 BL 0x1C16D6C
	0x032DD3A8 LDR X8, [X19 + 0x10]
	0x032DD3AC MOV X19, X0
	0x032DD3B0 MOV X1, X19
	0x032DD3B4 MOV X0, X8
	0x032DD3B8 BL 0x1C16D14
	0x032DD3BC ADD X0, X31, 0x0
	0x032DD3C0 MOV X1, X19
	0x032DD3C4 MOV X2, X31
	0x032DD3C8 STP X31, X31, [X31]
	0x032DD3CC BL 0x3376898
	0x032DD3D0 LDP X0, X1, [X31]
	0x032DD3D4 LDP X20, X19, [X31 + 0x20]
	0x032DD3D8 LDP X30, X21, [X31 + 0x10]
	0x032DD3DC ADD X31, X31, 0x30
	0x032DD3E0 RET
	0x032DD3E4 B 0x1C16D14
	0x032DD3E8 STP X30, X21, [X31 - 0x20]!
	0x032DD3EC STP X20, X19, [X31 + 0x10]
	0x032DD3F0 ADRP X20, 0x10FF000
	0x032DD3F4 ADRP X21, 0xE48000
	0x032DD3F8 LDRB W8, [X20 + 0x976]
	0x032DD3FC LDR X21, [X21 + 0xE00]
	0x032DD400 MOV X19, X0
	0x032DD404 TBNZ X8, 0x0, 0x32DD41C
	0x032DD408 ADRP X0, 0xE48000
	0x032DD40C LDR X0, [X0 + 0xE00]
	0x032DD410 BL 0x1C16CF4
	0x032DD414 MOVZ W8, 0x1
	0x032DD418 STRB W8, [X20 + 0x976]
	0x032DD41C LDR X0, [X21]
	0x032DD420 LDR W8, [X0 + 0xE0]
	0x032DD424 CBNZ W8, 0x32DD42C
	0x032DD428 BL 0x1C16DFC
	0x032DD42C MOV X0, X19
	0x032DD430 LDP X20, X19, [X31 + 0x10]
	0x032DD434 MOV X1, X31
	0x032DD438 LDP X30, X21, [X31], #0x20
	0x032DD43C B 0x32CEE14
	0x032DD440 STR X30, [X31 - 0x50]!
	0x032DD444 STP X26, X25, [X31 + 0x10]
	0x032DD448 STP X24, X23, [X31 + 0x20]
	0x032DD44C STP X22, X21, [X31 + 0x30]
	0x032DD450 STP X20, X19, [X31 + 0x40]
	0x032DD454 MOV X25, X1
	0x032DD458 MOV X1, X31
	0x032DD45C MOV X19, X7
	0x032DD460 MOV X20, X6
	0x032DD464 MOV X21, X5
	0x032DD468 MOV W22, W4
	0x032DD46C MOV W23, W3
	0x032DD470 MOV X24, X2
	0x032DD474 MOV X26, X0
	0x032DD478 BL 0x32CF410
	0x032DD47C STR W23, [X26 + 0x38]
	0x032DD480 STR W22, [X26 + 0x10]
	0x032DD484 STP X24, X21, [X26 + 0x18]
	0x032DD488 STP X20, X25, [X26 + 0x28]
	0x032DD48C STR X19, [X26 + 0x40]
	0x032DD490 LDP X20, X19, [X31 + 0x40]
	0x032DD494 LDP X22, X21, [X31 + 0x30]
	0x032DD498 LDP X24, X23, [X31 + 0x20]
	0x032DD49C LDP X26, X25, [X31 + 0x10]
	0x032DD4A0 LDR X30, [X31], #0x50
	0x032DD4A4 RET
	0x032DD4A8 STP X30, X21, [X31 - 0x20]!
	0x032DD4AC STP X20, X19, [X31 + 0x10]
	0x032DD4B0 MOV X20, X1
	0x032DD4B4 MOV X1, X31
	0x032DD4B8 MOV X21, X2
	0x032DD4BC MOV X19, X0
	0x032DD4C0 BL 0x32CF410
	0x032DD4C4 CBZ X20, 0x32DD534
	0x032DD4C8 LDR X8, [X20]
	0x032DD4CC MOV X0, X20
	0x032DD4D0 LDP X9, X1, [X8 + 0x1D8]
	0x032DD4D4 BLR X9
	0x032DD4D8 STR X0, [X19 + 0x18]
	0x032DD4DC STR X21, [X19 + 0x28]
	0x032DD4E0 LDR X8, [X20]
	0x032DD4E4 MOV X0, X20
	0x032DD4E8 LDP X9, X1, [X8 + 0x1C8]
	0x032DD4EC BLR X9
	0x032DD4F0 STR X0, [X19 + 0x30]
	0x032DD4F4 LDR X8, [X20]
	0x032DD4F8 MOV X0, X20
	0x032DD4FC LDP X9, X1, [X8 + 0x1E8]
	0x032DD500 BLR X9
	0x032DD504 STR W0, [X19 + 0x38]
	0x032DD508 LDR X8, [X20]
	0x032DD50C MOV X0, X20
	0x032DD510 LDP X9, X1, [X8 + 0x1A8]
	0x032DD514 BLR X9
	0x032DD518 MOV X1, X20
	0x032DD51C STR W0, [X19 + 0x10]
	0x032DD520 BL 0x32DD538
	0x032DD524 STR X0, [X19 + 0x20]
	0x032DD528 LDP X20, X19, [X31 + 0x10]
	0x032DD52C LDP X30, X21, [X31], #0x20
	0x032DD530 RET
	0x032DD534 BL 0x1C16F20
	0x032DD538 STR X30, [X31 - 0x30]!
	0x032DD53C STP X22, X21, [X31 + 0x10]
	0x032DD540 STP X20, X19, [X31 + 0x20]
	0x032DD544 ADRP X22, 0x10FF000
	0x032DD548 ADRP X20, 0xE49000
	0x032DD54C ADRP X21, 0xE16000
	0x032DD550 LDRB W8, [X22 + 0x97A]
	0x032DD554 LDR X20, [X20 + 0x660]
	0x032DD558 LDR X21, [X21 + 0x6C0]
	0x032DD55C MOV X19, X1
	0x032DD560 TBNZ X8, 0x0, 0x32DD590
	0x032DD564 ADRP X0, 0xE49000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x1100000
	011 Move W8, [X21+2407]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xE40000
	019 Move X0, [X0+1256]
	020 Call 0x1C17CF4
	021 Move X0, 0xE17000
	022 Move X0, [X0+1728]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2407], W8
	026 Compare X19, 0
	027 JumpIfEqual {130}
	028 Move X8, [X20]
	029 Move X0, X20
	030 Move X9, [X8+744]
	031 Move X1, [X8+752]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {142}
	037 Move X8, [X20]
	038 Move X0, X20
	039 Move X9, [X8+760]
	040 Move X1, [X8+768]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Compare X0, 0
	043 JumpIfEqual {154}
	044 Move X8, [X0+24]
	045 Move W9, [X19+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X24, 0xE17000
	049 Move X25, 0xE40000
	050 Move X24, [X24+1728]
	051 Move X25, [X25+1256]
	052 Move X23, X31
	053 Move W22, W31
	054 And X8, X8, 0
	055 Add X26, X19, 32
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, [X24]
	058 Move X21, [X26]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X21
	064 Move X1, X31
	065 Move X2, X31
	066 Call Type.op_Equality, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {117}
	071 Compare X21, 0
	072 JumpIfEqual {78}
	073 Move X9, [X21]
	074 Move X8, [X25]
	075 Move W11, [X9+304]
	076 Move W10, [X8+304]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X9, X31
	079 Move X9, [X9+200]
	080 Add X9, X9, X10
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 NotImplemented "Instruction CSEL not yet implemented."
	084 Move W8, [X19+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction CSET not yet implemented."
	087 Add X23, X23, 1
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Or W22, W22, W9
	090 Move TEMP, X22
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {214}
	094 Move X0, X20
	095 Move X1, X19
	096 Call 0x1C72CC0
	097 Move X1, X31
	098 Move X2, X31
	099 Move X21, X0
	100 Call MethodInfo.op_Equality, X0, X1
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {167}
	105 Move X0, X21
	106 Move X20, [X31+64]
	107 Move X19, [X31+72]
	108 Move X22, [X31+48]
	109 Move X21, [X31+56]
	110 Move X24, [X31+32]
	111 Move X23, [X31+40]
	112 Move X26, [X31+16]
	113 Move X25, [X31+24]
	114 Move X30, [X31+80]
	115 Return X0
	116 Call 0x1C17F28
	117 Move X0, 0xE1C000
	118 Move X0, [X0+1320]
	119 Call 0x1C17D08
	120 Call 0x1C17F10
	121 Move X1, X31
	122 Move X19, X0
	123 Call ArgumentNullException..ctor, X0
	124 Move X0, 0xE4A000
	125 Move X0, [X0+1480]
	126 Call 0x1C17D08
	127 Move X1, X0
	128 Move X0, X19
	129 Call 0x1C17DEC
	130 Move X0, 0xE1C000
	131 Move X0, [X0+1320]
	132 Call 0x1C17D08
	133 Call 0x1C17F10
	134 Move X19, X0
	135 Move X0, 0xE4A000
	136 Move X0, [X0+1488]
	137 Call 0x1C17D08
	138 Move X1, X0
	139 Move X0, X19
	140 Move X2, X31
	141 Call ArgumentNullException..ctor, X0, X1
	142 Move X0, 0xE17000
	143 Move X0, [X0+1456]
	144 Call 0x1C17D08
	145 Call 0x1C17F10
	146 Move X19, X0
	147 Move X0, 0xE4A000
	148 Move X0, [X0+1496]
	149 Call 0x1C17D08
	150 Move X1, X0
	151 Move X0, X19
	152 Move X2, X31
	153 Call InvalidOperationException..ctor, X0, X1
	154 Call 0x1C17F20
	155 Move X0, 0xE1F000
	156 Move X0, [X0+1400]
	157 Call 0x1C17D08
	158 Call 0x1C17F10
	159 Move X19, X0
	160 Move X0, 0xE4A000
	161 Move X0, [X0+1504]
	162 Call 0x1C17D08
	163 Move X1, X0
	164 Move X0, X19
	165 Move X2, X31
	166 Call ArgumentException..ctor, X0, X1
	167 Move X8, [X20]
	168 Move X0, X20
	169 Move X9, [X8+760]
	170 Move X1, [X8+768]
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Move X20, X0
	173 Call 0x19913C0
	174 Move X8, [X20+24]
	175 Move X20, 0xE17000
	176 Move [X31+12], W8
	177 Move X20, [X20+1880]
	178 Move X0, X20
	179 Call 0x1C17D08
	180 Add X1, X31, 12
	181 Call 0x1C17E04
	182 Move X21, X0
	183 Move X0, X19
	184 Call 0x19913C0
	185 Move X8, [X19+24]
	186 Move X0, X20
	187 Move [X31+8], W8
	188 Call 0x1C17D08
	189 Add X1, X31, 8
	190 Call 0x1C17E04
	191 Move X19, X0
	192 Move X0, 0xE4A000
	193 Move X0, [X0+1512]
	194 Call 0x1C17D08
	195 Move X1, X21
	196 Move X2, X19
	197 Move X3, X31
	198 Call String.Format, X0, X1, X2
	199 Move X19, X0
	200 Move X0, 0xE1F000
	201 Move X0, [X0+1400]
	202 Call 0x1C17D08
	203 Call 0x1C17F10
	204 Move X1, X19
	205 Move X2, X31
	206 Move X20, X0
	207 Call ArgumentException..ctor, X0, X1
	208 Move X0, 0xE4A000
	209 Move X0, [X0+1480]
	210 Call 0x1C17D08
	211 Move X1, X0
	212 Move X0, X20
	213 Call 0x1C17DEC
	214 Move X0, 0xE17000
	215 Move X0, [X0+2880]
	216 Call 0x1C17D08
	217 Call 0x1C17F10
	218 Move X19, X0
	219 Move X0, 0xE4A000
	220 Move X0, [X0+1520]
	221 Call 0x1C17D08
	222 Move X1, X0
	223 Move X0, X19
	224 Move X2, X31
	225 Call NotSupportedException..ctor, X0, X1

Method: System.Reflection.MethodInfo MakeGenericMethod_impl(System.Type[] types)

Disassembly:
	0x032DD568 LDR X0, [X0 + 0x660]

ISIL:
	001 Call 0x1C72CC0
	002 Return X0

Method: System.Type[] GetGenericArguments()

Disassembly:
	0x032DD56C BL 0x1C16CF4

ISIL:
	001 Call 0x1C7312C
	002 Return X0

Method: System.Reflection.MethodInfo GetGenericMethodDefinition_impl()

Disassembly:
	0x032DD570 ADRP X0, 0xE16000

ISIL:
	001 Call 0x1C72C64
	002 Return X0

Method: System.Reflection.MethodInfo GetGenericMethodDefinition()

Disassembly:
	0x032DD574 LDR X0, [X0 + 0x6C0]
	0x032DD578 BL 0x1C16CF4
	0x032DD57C ADRP X0, 0xE49000
	0x032DD580 LDR X0, [X0 + 0x668]
	0x032DD584 BL 0x1C16CF4
	0x032DD588 MOVZ W8, 0x1
	0x032DD58C STRB W8, [X22 + 0x97A]
	0x032DD590 LDR X0, [X21]
	0x032DD594 LDR X20, [X20]
	0x032DD598 LDR W8, [X0 + 0xE0]
	0x032DD59C CBNZ W8, 0x32DD5A4
	0x032DD5A0 BL 0x1C16DFC
	0x032DD5A4 MOV X0, X20
	0x032DD5A8 MOV X1, X31
	0x032DD5AC BL 0x338C698
	0x032DD5B0 CBZ X0, 0x32DD5F8
	0x032DD5B4 ADRP X9, 0xE49000
	0x032DD5B8 LDR X8, [X0]
	0x032DD5BC LDR X9, [X9 + 0x668]
	0x032DD5C0 MOVZ W2, 0x24
	0x032DD5C4 LDR X3, [X8 + 0x680]
	0x032DD5C8 LDR X1, [X9]
	0x032DD5CC LDR X9, [X8 + 0x678]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Call 0x1C72C64
	004 Move X1, X31
	005 Move X2, X31
	006 Move X19, X0
	007 Call MethodInfo.op_Equality, X0, X1
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {16}
	012 Move X0, X19
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return X0
	016 Move X0, 0xE17000
	017 Move X0, [X0+1456]
	018 Call 0x1C17D08
	019 Call 0x1C17F10
	020 Move X1, X31
	021 Move X19, X0
	022 Call InvalidOperationException..ctor, X0
	023 Move X0, 0xE4A000
	024 Move X0, [X0+1528]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X19
	028 Call 0x1C17DEC

Method: System.Boolean get_IsGenericMethodDefinition()

Disassembly:
	0x032DD5D0 BLR X9

ISIL:
	001 Call 0x1C728B4
	002 Return X0

Method: System.Boolean get_IsGenericMethod()

Disassembly:
	0x032DD5D4 CBZ X0, 0x32DD5F8

ISIL:
	001 Call 0x1C72874
	002 Return X0

Method: System.Boolean get_ContainsGenericParameters()

Disassembly:
	0x032DD5D8 LDR X8, [X0]
	0x032DD5DC MOV X1, X19
	0x032DD5E0 LDP X20, X19, [X31 + 0x20]
	0x032DD5E4 LDP X22, X21, [X31 + 0x10]
	0x032DD5E8 LDR X3, [X8 + 0x2C8]
	0x032DD5EC LDR X2, [X8 + 0x2D0]
	0x032DD5F0 LDR X30, [X31], #0x30
	0x032DD5F4 BR X3
	0x032DD5F8 BL 0x1C16F20
	0x032DD5FC STR X30, [X31 - 0x30]!
	0x032DD600 STP X22, X21, [X31 + 0x10]
	0x032DD604 STP X20, X19, [X31 + 0x20]
	0x032DD608 MOV X21, X1
	0x032DD60C MOV X1, X31
	0x032DD610 MOV X19, X3
	0x032DD614 MOV X20, X2
	0x032DD618 MOV X22, X0
	0x032DD61C BL 0x32CF410
	0x032DD620 MOVN W8, 0x0
	0x032DD624 MOVZ W9, 0x8
	0x032DD628 STR X21, [X22 + 0x18]
	0x032DD62C STP X20, X31, [X22 + 0x28]
	0x032DD630 STR W8, [X22 + 0x38]
	0x032DD634 STR W9, [X22 + 0x10]
	0x032DD638 STR X19, [X22 + 0x40]
	0x032DD63C LDP X20, X19, [X31 + 0x20]
	0x032DD640 LDP X22, X21, [X31 + 0x10]
	0x032DD644 LDR X30, [X31], #0x30
	0x032DD648 RET
	0x032DD64C SUB X31, X31, 0x50
	0x032DD650 STP X30, X23, [X31 + 0x20]
	0x032DD654 STP X22, X21, [X31 + 0x30]
	0x032DD658 STP X20, X19, [X31 + 0x40]
	0x032DD65C MRS X22, 0xC000
	0x032DD660 LDR X8, [X22 + 0x28]
	0x032DD664 ADRP X20, 0x10FF000
	0x032DD668 ADRP X21, 0xE48000
	0x032DD66C ADRP X23, 0xE16000
	0x032DD670 STR X8, [X31 + 0x18]
	0x032DD674 LDRB W8, [X20 + 0x978]
	0x032DD678 LDR X21, [X21 + 0x140]
	0x032DD67C LDR X23, [X23 + 0x6C0]
	0x032DD680 MOV X19, X0
	0x032DD684 TBNZ X8, 0x0, 0x32DD708
	0x032DD688 ADRP X0, 0xE49000
	0x032DD68C LDR X0, [X0 + 0x670]
	0x032DD690 BL 0x1C16CF4
	0x032DD694 ADRP X0, 0xE49000
	0x032DD698 LDR X0, [X0 + 0x678]
	0x032DD69C BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0]
	006 Move X19, X0
	007 Move X9, [X8+728]
	008 Move X1, [X8+736]
	009 NotImplemented "Instruction BLR not yet implemented."
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {41}
	014 Move X8, [X19]
	015 Move X0, X19
	016 Move X9, [X8+760]
	017 Move X1, [X8+768]
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Compare X0, 0
	020 JumpIfEqual {62}
	021 Move W8, [X0+24]
	022 Move X20, X0
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W21, W31
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Add X8, X20, W21
	027 Move X0, [X8+32]
	028 Compare X0, 0
	029 JumpIfEqual {62}
	030 Move X8, [X0]
	031 Move X9, [X8+648]
	032 Move X1, [X8+656]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {56}
	038 Move W8, [X20+24]
	039 Add W21, W21, 1
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X8, [X19]
	042 Move X0, X19
	043 Move X9, [X8+440]
	044 Move X1, [X8+448]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Compare X0, 0
	047 JumpIfEqual {62}
	048 Move X8, [X0]
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X2, [X8+648]
	052 Move X1, [X8+656]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 CallNoReturn X2
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move W0, 1
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Return X0
	062 Call 0x1C17F20
	063 Call 0x1C17F28

Method: System.Collections.Generic.IList`1<System.Reflection.CustomAttributeData> GetCustomAttributesData()

Disassembly:
	0x032DD6A0 ADRP X0, 0xE47000

ISIL:
	001 Call CustomAttributeData.GetCustomAttributes, X0
	002 Return X0

Method: System.Int32 get_core_clr_security_level()

Disassembly:
	0x032DD6A4 LDR X0, [X0 + 0xF38]
	0x032DD6A8 BL 0x1C16CF4

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean get_IsSecurityCritical()

Disassembly:
	0x032DD6AC ADRP X0, 0xE49000
	0x032DD6B0 LDR X0, [X0 + 0x680]

ISIL:
	001 Move W0, 1
	002 Return X0

