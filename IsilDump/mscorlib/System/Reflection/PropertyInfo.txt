Type: System.Reflection.PropertyInfo

Method: System.Void .ctor()

Disassembly:
	0x032D0B38 BR X2
	0x032D0B3C MOVZ W0, 0x20

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Reflection.MemberTypes get_MemberType()

Disassembly:
	0x032D0B40 RET
	0x032D0B44 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move W0, 16
	002 Return X0

Method: System.Type get_PropertyType()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Reflection.ParameterInfo[] GetIndexParameters()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean get_CanRead()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean get_CanWrite()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Reflection.MethodInfo get_GetMethod()

Disassembly:
	0x032D0B48 STP X20, X19, [X31 + 0x10]
	0x032D0B4C ADRP X20, 0x110C000
	0x032D0B50 ADRP X21, 0xE55000
	0x032D0B54 LDRB W8, [X20 + 0x906]
	0x032D0B58 LDR X21, [X21 + 0xEF8]

ISIL:
	001 Move X8, [X0]
	002 Move W1, 1
	003 Move X3, [X8+664]
	004 Move X2, [X8+672]
	005 CallNoReturn X3

Method: System.Reflection.MethodInfo GetGetMethod(System.Boolean nonPublic)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Reflection.MethodInfo get_SetMethod()

Disassembly:
	0x032D0B5C MOV X19, X0
	0x032D0B60 TBNZ X8, 0x0, 0x32D0B78
	0x032D0B64 ADRP X0, 0xE55000
	0x032D0B68 LDR X0, [X0 + 0xEF8]
	0x032D0B6C BL 0x1C16CF4

ISIL:
	001 Move X8, [X0]
	002 Move W1, 1
	003 Move X3, [X8+696]
	004 Move X2, [X8+704]
	005 CallNoReturn X3

Method: System.Reflection.MethodInfo GetSetMethod(System.Boolean nonPublic)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Object GetValue(System.Object obj)

Disassembly:
	0x032D0B70 MOVZ W8, 0x1
	0x032D0B74 STRB W8, [X20 + 0x906]
	0x032D0B78 LDR X0, [X21]
	0x032D0B7C BL 0x1C16F10
	0x032D0B80 MOV X20, X0

ISIL:
	001 Move X8, [X0]
	002 Move X2, X31
	003 Move X4, [X8+712]
	004 Move X3, [X8+720]
	005 CallNoReturn X4

Method: System.Object GetValue(System.Object obj, System.Object[] index)

Disassembly:
	0x032D0B84 BL 0x32D0398
	0x032D0B88 MOVZ W8, 0x1
	0x032D0B8C STR X19, [X20 + 0x18]
	0x032D0B90 STR W8, [X20 + 0x20]
	0x032D0B94 STRB W31, [X20 + 0x24]
	0x032D0B98 MOV X0, X20
	0x032D0B9C LDP X20, X19, [X31 + 0x10]
	0x032D0BA0 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move X8, [X0]
	002 Move X4, X2
	003 Move W2, W31
	004 Move X3, X31
	005 Move X7, [X8+728]
	006 Move X6, [X8+736]
	007 Move X5, X31
	008 CallNoReturn X7

Method: System.Object GetValue(System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] index, System.Globalization.CultureInfo culture)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void SetValue(System.Object obj, System.Object value, System.Object[] index)

Disassembly:
	0x032D0BA4 RET
	0x032D0BA8 STP X30, X21, [X31 - 0x20]!
	0x032D0BAC STP X20, X19, [X31 + 0x10]
	0x032D0BB0 ADRP X21, 0x110C000
	0x032D0BB4 LDRB W8, [X21 + 0x907]
	0x032D0BB8 MOV W19, W1
	0x032D0BBC MOV X20, X0
	0x032D0BC0 TBNZ X8, 0x0, 0x32D0BD8

ISIL:
	001 Move X8, [X0]
	002 Move X5, X3
	003 Move W3, W31
	004 Move X4, X31
	005 Move X9, [X8+760]
	006 Move X7, [X8+768]
	007 Move X6, X31
	008 CallNoReturn X9

Method: System.Void SetValue(System.Object obj, System.Object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] index, System.Globalization.CultureInfo culture)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x032D0BC4 ADRP X0, 0xE55000
	0x032D0BC8 LDR X0, [X0 + 0xEF8]

ISIL:
	001 Move X2, X31
	002 Call Object.Equals, X0, X1
	003 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x032D0BCC BL 0x1C16CF4
	0x032D0BD0 MOVZ W8, 0x1

ISIL:
	001 Move X1, X31
	002 Call Object.GetHashCode, X0
	003 Return X0

Method: System.Boolean op_Equality(System.Reflection.PropertyInfo left, System.Reflection.PropertyInfo right)

Disassembly:
	0x032CF31C STP X1, X2, [X0 + 0x20]
	0x032CF320 MOV X19, X0
	0x032CF324 MOV X20, X2
	0x032CF328 STR X8, [X0 + 0x10]
	0x032CF32C LDRB W22, [X2 + 0x52]
	0x032CF330 STR X0, [X0 + 0x40]
	0x032CF334 MOV X0, X2
	0x032CF338 MOV X21, X1
	0x032CF33C BL 0x1C16D84
	0x032CF340 TBZ X0, 0x0, 0x32CF358
	0x032CF344 CMP W22, 0x2

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, W31
	003 Compare X0, 0
	004 JumpIfEqual {12}
	005 Compare X1, 0
	006 JumpIfEqual {12}
	007 Move X8, [X0]
	008 Move X3, [X8+312]
	009 Move X2, [X8+320]
	010 CallNoReturn X3
	011 Move W8, 1
	012 Move W0, W8
	013 Return X0

Method: System.Boolean op_Inequality(System.Reflection.PropertyInfo left, System.Reflection.PropertyInfo right)

Disassembly:
	0x032CF2E0 LDR X2, [X21]
	0x032CF2E4 MOV X1, X31
	0x032CF2E8 MOV X19, X0
	0x032CF2EC BL 0x32CF30C
	0x032CF2F0 LDR X8, [X20]
	0x032CF2F4 LDP X22, X21, [X31 + 0x10]
	0x032CF2F8 LDR X8, [X8 + 0xB8]
	0x032CF2FC STR X19, [X8 + 0x8]
	0x032CF300 LDP X20, X19, [X31 + 0x20]
	0x032CF304 LDP X30, X23, [X31], #0x30
	0x032CF308 RET
	0x032CF30C STR X30, [X31 - 0x30]!
	0x032CF310 STP X22, X21, [X31 + 0x10]
	0x032CF314 STP X20, X19, [X31 + 0x20]
	0x032CF318 LDR X8, [X2 + 0x8]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, 1
	003 Compare X0, 0
	004 JumpIfEqual {15}
	005 Compare X1, 0
	006 JumpIfEqual {15}
	007 Move [X31-16], X30
	008 Move X8, [X0]
	009 Move X9, [X8+312]
	010 Move X2, [X8+320]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Xor W8, W0, 1
	013 Move X30, [X31+16]
	014 Move W8, W31
	015 And W0, W8, 1
	016 Return X0

