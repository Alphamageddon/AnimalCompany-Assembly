Type: System.Reflection.SignatureConstructedGenericType

Method: System.Void .ctor(System.Type genericTypeDefinition, System.Type[] typeArguments)

Disassembly:
	0x032D11FC LDR X0, [X0 + 0xF18]
	0x032D1200 BL 0x1C16D08
	0x032D1204 MOV X1, X0
	0x032D1208 MOV X0, X19
	0x032D120C MOV X2, X31
	0x032D1210 BL 0x3379A44
	0x032D1214 ADRP X0, 0xE54000
	0x032D1218 LDR X0, [X0 + 0xFA0]
	0x032D121C BL 0x1C16D08
	0x032D1220 MOV X1, X0
	0x032D1224 MOV X0, X19
	0x032D1228 BL 0x1C16DEC
	0x032D122C STP X30, X19, [X31 - 0x10]!
	0x032D1230 ADRP X0, 0xE22000
	0x032D1234 LDR X0, [X0 + 0xB40]
	0x032D1238 BL 0x1C16D08
	0x032D123C BL 0x1C16F10
	0x032D1240 MOV X19, X0
	0x032D1244 ADRP X0, 0xE54000
	0x032D1248 LDR X0, [X0 + 0xF18]
	0x032D124C BL 0x1C16D08
	0x032D1250 MOV X1, X0
	0x032D1254 MOV X0, X19
	0x032D1258 MOV X2, X31
	0x032D125C BL 0x3379A44
	0x032D1260 ADRP X0, 0xE54000
	0x032D1264 LDR X0, [X0 + 0xFA8]
	0x032D1268 BL 0x1C16D08
	0x032D126C MOV X1, X0
	0x032D1270 MOV X0, X19
	0x032D1274 BL 0x1C16DEC
	0x032D1278 STP X30, X19, [X31 - 0x10]!
	0x032D127C ADRP X0, 0xE22000
	0x032D1280 LDR X0, [X0 + 0xB40]
	0x032D1284 BL 0x1C16D08
	0x032D1288 BL 0x1C16F10
	0x032D128C MOV X19, X0
	0x032D1290 ADRP X0, 0xE54000
	0x032D1294 LDR X0, [X0 + 0xF18]
	0x032D1298 BL 0x1C16D08
	0x032D129C MOV X1, X0
	0x032D12A0 MOV X0, X19
	0x032D12A4 MOV X2, X31
	0x032D12A8 BL 0x3379A44
	0x032D12AC ADRP X0, 0xE54000
	0x032D12B0 LDR X0, [X0 + 0xFB0]
	0x032D12B4 BL 0x1C16D08
	0x032D12B8 MOV X1, X0
	0x032D12BC MOV X0, X19
	0x032D12C0 BL 0x1C16DEC
	0x032D12C4 STP X30, X19, [X31 - 0x10]!
	0x032D12C8 ADRP X0, 0xE22000
	0x032D12CC LDR X0, [X0 + 0xB40]
	0x032D12D0 BL 0x1C16D08
	0x032D12D4 BL 0x1C16F10
	0x032D12D8 MOV X19, X0
	0x032D12DC ADRP X0, 0xE54000
	0x032D12E0 LDR X0, [X0 + 0xF18]
	0x032D12E4 BL 0x1C16D08
	0x032D12E8 MOV X1, X0
	0x032D12EC MOV X0, X19
	0x032D12F0 MOV X2, X31
	0x032D12F4 BL 0x3379A44
	0x032D12F8 ADRP X0, 0xE54000
	0x032D12FC LDR X0, [X0 + 0xFB8]
	0x032D1300 BL 0x1C16D08
	0x032D1304 MOV X1, X0
	0x032D1308 MOV X0, X19
	0x032D130C BL 0x1C16DEC
	0x032D1310 STP X30, X19, [X31 - 0x10]!
	0x032D1314 ADRP X0, 0xE22000
	0x032D1318 LDR X0, [X0 + 0xB40]
	0x032D131C BL 0x1C16D08
	0x032D1320 BL 0x1C16F10
	0x032D1324 MOV X19, X0
	0x032D1328 ADRP X0, 0xE54000
	0x032D132C LDR X0, [X0 + 0xF18]
	0x032D1330 BL 0x1C16D08
	0x032D1334 MOV X1, X0
	0x032D1338 MOV X0, X19
	0x032D133C MOV X2, X31
	0x032D1340 BL 0x3379A44
	0x032D1344 ADRP X0, 0xE54000
	0x032D1348 LDR X0, [X0 + 0xFC0]
	0x032D134C BL 0x1C16D08
	0x032D1350 MOV X1, X0
	0x032D1354 MOV X0, X19
	0x032D1358 BL 0x1C16DEC
	0x032D135C STP X30, X19, [X31 - 0x10]!
	0x032D1360 ADRP X0, 0xE22000
	0x032D1364 LDR X0, [X0 + 0xB40]
	0x032D1368 BL 0x1C16D08
	0x032D136C BL 0x1C16F10
	0x032D1370 MOV X19, X0
	0x032D1374 ADRP X0, 0xE54000
	0x032D1378 LDR X0, [X0 + 0xF18]
	0x032D137C BL 0x1C16D08
	0x032D1380 MOV X1, X0
	0x032D1384 MOV X0, X19
	0x032D1388 MOV X2, X31
	0x032D138C BL 0x3379A44
	0x032D1390 ADRP X0, 0xE54000
	0x032D1394 LDR X0, [X0 + 0xFC8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x110C000
	010 Move X24, 0xE23000
	011 Move W8, [X22+2304]
	012 Move X24, [X24+1728]
	013 Move X21, X2
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0xE2B000
	021 Move X0, [X0+3168]
	022 Call 0x1C17CF4
	023 Move X0, 0xE23000
	024 Move X0, [X0+1728]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+2304], W8
	028 Move X0, X19
	029 Call SignatureType..ctor, X0
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X20
	036 Move X1, X31
	037 Move X2, X31
	038 Call Type.op_Equality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {112}
	043 Compare X21, 0
	044 JumpIfEqual {93}
	045 Move X0, X21
	046 Move X1, X31
	047 Call Array.Clone, X0
	048 Compare X0, 0
	049 JumpIfEqual {119}
	050 Move X8, 0xE2B000
	051 Move X8, [X8+3168]
	052 Move X22, X0
	053 Move X23, [X8]
	054 Move X1, X23
	055 Call 0x1C17E00
	056 Compare X0, 0
	057 JumpIfEqual {120}
	058 Move X8, [X0+24]
	059 Move X21, X0
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X23, X31
	062 And X8, X8, 0
	063 Add X25, X21, 32
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X0, [X24]
	066 Move X22, [X25]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X0, X22
	072 Move X1, X31
	073 Move X2, X31
	074 Call Type.op_Equality, X0, X1
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {93}
	079 Move W8, [X21+24]
	080 Add X23, X23, 1
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move [X19+24], X20
	083 Move [X19+32], X21
	084 Move X20, [X31+48]
	085 Move X19, [X31+56]
	086 Move X22, [X31+32]
	087 Move X21, [X31+40]
	088 Move X24, [X31+16]
	089 Move X23, [X31+24]
	090 Move X30, [X31+64]
	091 Move X25, [X31+72]
	092 Return 
	093 Move X0, 0xE28000
	094 Move X0, [X0+1320]
	095 Call 0x1C17D08
	096 Call 0x1C17F10
	097 Move X19, X0
	098 Move X0, 0xE55000
	099 Move X0, [X0+3744]
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X19
	103 Move X2, X31
	104 Call ArgumentNullException..ctor, X0, X1
	105 Move X0, 0xE55000
	106 Move X0, [X0+3752]
	107 Call 0x1C17D08
	108 Move X1, X0
	109 Move X0, X19
	110 Call 0x1C17DEC
	111 Call 0x1C17F28
	112 Move X0, 0xE28000
	113 Move X0, [X0+1320]
	114 Call 0x1C17D08
	115 Call 0x1C17F10
	116 Move X19, X0
	117 Move X0, 0xE55000
	118 Move X0, [X0+3760]
	119 Call 0x1C17F20
	120 Move X0, X22
	121 Move X1, X23
	122 Call 0x1C181E0

Method: System.Boolean get_IsGenericTypeDefinition()

Disassembly:
	0x032D13F0 BL 0x1C16DEC
	0x032D13F4 STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean HasElementTypeImpl()

Disassembly:
	0x032D13F8 ADRP X0, 0xE22000
	0x032D13FC LDR X0, [X0 + 0xB40]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean IsArrayImpl()

Disassembly:
	0x032D1400 BL 0x1C16D08
	0x032D1404 BL 0x1C16F10

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean IsByRefImpl()

Disassembly:
	0x032D1408 MOV X19, X0
	0x032D140C ADRP X0, 0xE54000

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean IsPointerImpl()

Disassembly:
	0x032D1410 LDR X0, [X0 + 0xF18]
	0x032D1414 BL 0x1C16D08

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_IsSZArray()

Disassembly:
	0x032D1418 MOV X1, X0
	0x032D141C MOV X0, X19

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_IsVariableBoundArray()

Disassembly:
	0x032D1420 MOV X2, X31
	0x032D1424 BL 0x3379A44

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_IsConstructedGenericType()

Disassembly:
	0x032D1428 ADRP X0, 0xE54000
	0x032D142C LDR X0, [X0 + 0xFD8]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean get_IsGenericParameter()

Disassembly:
	0x032D1430 BL 0x1C16D08
	0x032D1434 MOV X1, X0

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_IsGenericMethodParameter()

Disassembly:
	0x032D1438 MOV X0, X19
	0x032D143C BL 0x1C16DEC

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_ContainsGenericParameters()

Disassembly:
	0x032D1440 STP X30, X19, [X31 - 0x10]!
	0x032D1444 ADRP X0, 0xE22000
	0x032D1448 LDR X0, [X0 + 0xB40]
	0x032D144C BL 0x1C16D08
	0x032D1450 BL 0x1C16F10
	0x032D1454 MOV X19, X0
	0x032D1458 ADRP X0, 0xE54000
	0x032D145C LDR X0, [X0 + 0xF18]
	0x032D1460 BL 0x1C16D08
	0x032D1464 MOV X1, X0
	0x032D1468 MOV X0, X19
	0x032D146C MOV X2, X31
	0x032D1470 BL 0x3379A44
	0x032D1474 ADRP X0, 0xE54000
	0x032D1478 LDR X0, [X0 + 0xFE0]
	0x032D147C BL 0x1C16D08
	0x032D1480 MOV X1, X0
	0x032D1484 MOV X0, X19
	0x032D1488 BL 0x1C16DEC
	0x032D148C STP X30, X19, [X31 - 0x10]!
	0x032D1490 ADRP X0, 0xE22000
	0x032D1494 LDR X0, [X0 + 0xB40]
	0x032D1498 BL 0x1C16D08
	0x032D149C BL 0x1C16F10
	0x032D14A0 MOV X19, X0
	0x032D14A4 ADRP X0, 0xE54000
	0x032D14A8 LDR X0, [X0 + 0xF18]
	0x032D14AC BL 0x1C16D08
	0x032D14B0 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0+32]
	006 Compare X8, 0
	007 JumpIfEqual {29}
	008 Move X19, X0
	009 Move X20, X31
	010 Move W21, [X8+24]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Add X8, X8, X20
	014 Move X0, [X8+32]
	015 Compare X0, 0
	016 JumpIfEqual {29}
	017 Move X8, [X0]
	018 Move X9, [X8+648]
	019 Move X1, [X8+656]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X8, [X19+32]
	026 Add X20, X20, 1
	027 Compare X8, 0
	028 JumpIfNotEqual {10}
	029 Call 0x1C17F20
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 NotImplemented "Instruction CSET not yet implemented."
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0
	037 Call 0x1C17F28

Method: System.Reflection.SignatureType get_ElementType()

Disassembly:
	0x032D14B4 MOV X0, X19
	0x032D14B8 MOV X2, X31

ISIL:
	001 Move X0, X31
	002 Return X0

Method: System.Int32 GetArrayRank()

Disassembly:
	0x032D14BC BL 0x3379A44
	0x032D14C0 ADRP X0, 0xE54000
	0x032D14C4 LDR X0, [X0 + 0xFE8]
	0x032D14C8 BL 0x1C16D08
	0x032D14CC MOV X1, X0
	0x032D14D0 MOV X0, X19
	0x032D14D4 BL 0x1C16DEC
	0x032D14D8 STP X30, X19, [X31 - 0x10]!
	0x032D14DC ADRP X0, 0xE22000
	0x032D14E0 LDR X0, [X0 + 0xB40]
	0x032D14E4 BL 0x1C16D08
	0x032D14E8 BL 0x1C16F10
	0x032D14EC MOV X19, X0
	0x032D14F0 ADRP X0, 0xE54000
	0x032D14F4 LDR X0, [X0 + 0xF18]
	0x032D14F8 BL 0x1C16D08
	0x032D14FC MOV X1, X0
	0x032D1500 MOV X0, X19
	0x032D1504 MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xE2B000
	004 Move X0, [X0+1400]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xE55000
	009 Move X0, [X0+3728]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call ArgumentException..ctor, X0, X1
	015 Move X0, 0xE55000
	016 Move X0, [X0+3768]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Type GetGenericTypeDefinition()

Disassembly:
	0x032D1508 BL 0x3379A44
	0x032D150C ADRP X0, 0xE54000

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Type[] GetGenericArguments()

Disassembly:
	0x032D1510 LDR X0, [X0 + 0xFF0]
	0x032D1514 BL 0x1C16D08
	0x032D1518 MOV X1, X0
	0x032D151C MOV X0, X19

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+1112]
	003 Move X1, [X8+1120]
	004 CallNoReturn X2

Method: System.Type[] get_GenericTypeArguments()

Disassembly:
	0x032D1520 BL 0x1C16DEC
	0x032D1524 STP X30, X19, [X31 - 0x10]!
	0x032D1528 ADRP X0, 0xE22000
	0x032D152C LDR X0, [X0 + 0xB40]
	0x032D1530 BL 0x1C16D08
	0x032D1534 BL 0x1C16F10
	0x032D1538 MOV X19, X0
	0x032D153C ADRP X0, 0xE54000
	0x032D1540 LDR X0, [X0 + 0xF18]
	0x032D1544 BL 0x1C16D08
	0x032D1548 MOV X1, X0
	0x032D154C MOV X0, X19
	0x032D1550 MOV X2, X31
	0x032D1554 BL 0x3379A44
	0x032D1558 ADRP X0, 0xE54000
	0x032D155C LDR X0, [X0 + 0xFF8]
	0x032D1560 BL 0x1C16D08
	0x032D1564 MOV X1, X0
	0x032D1568 MOV X0, X19
	0x032D156C BL 0x1C16DEC
	0x032D1570 STP X30, X19, [X31 - 0x10]!
	0x032D1574 ADRP X0, 0xE22000
	0x032D1578 LDR X0, [X0 + 0xB40]
	0x032D157C BL 0x1C16D08
	0x032D1580 BL 0x1C16F10
	0x032D1584 MOV X19, X0
	0x032D1588 ADRP X0, 0xE54000
	0x032D158C LDR X0, [X0 + 0xF18]
	0x032D1590 BL 0x1C16D08
	0x032D1594 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x110C000
	005 Move W8, [X20+2305]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE2B000
	012 Move X0, [X0+3168]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2305], W8
	016 Move X0, [X19+32]
	017 Compare X0, 0
	018 JumpIfEqual {35}
	019 Move X1, X31
	020 Call Array.Clone, X0
	021 Compare X0, 0
	022 JumpIfEqual {31}
	023 Move X8, 0xE2B000
	024 Move X8, [X8+3168]
	025 Move X19, X0
	026 Move X20, [X8]
	027 Move X1, X20
	028 Call 0x1C17E00
	029 Compare X0, 0
	030 JumpIfEqual {36}
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0
	035 Call 0x1C17F20
	036 Move X0, X19
	037 Move X1, X20
	038 Call 0x1C181E0

Method: System.Int32 get_GenericParameterPosition()

Disassembly:
	0x032D1598 MOV X0, X19
	0x032D159C MOV X2, X31
	0x032D15A0 BL 0x3379A44
	0x032D15A4 ADRP X0, 0xE55000
	0x032D15A8 LDR X0, [X0]
	0x032D15AC BL 0x1C16D08
	0x032D15B0 MOV X1, X0
	0x032D15B4 MOV X0, X19
	0x032D15B8 BL 0x1C16DEC
	0x032D15BC STP X30, X19, [X31 - 0x10]!
	0x032D15C0 ADRP X0, 0xE22000
	0x032D15C4 LDR X0, [X0 + 0xB40]
	0x032D15C8 BL 0x1C16D08
	0x032D15CC BL 0x1C16F10
	0x032D15D0 MOV X19, X0
	0x032D15D4 ADRP X0, 0xE54000
	0x032D15D8 LDR X0, [X0 + 0xF18]
	0x032D15DC BL 0x1C16D08
	0x032D15E0 MOV X1, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xE23000
	004 Move X0, [X0+1456]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xE55000
	009 Move X0, [X0+3776]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call InvalidOperationException..ctor, X0, X1
	015 Move X0, 0xE55000
	016 Move X0, [X0+3784]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.String get_Name()

Disassembly:
	0x032D15E4 MOV X0, X19
	0x032D15E8 MOV X2, X31
	0x032D15EC BL 0x3379A44
	0x032D15F0 ADRP X0, 0xE55000
	0x032D15F4 LDR X0, [X0 + 0x8]
	0x032D15F8 BL 0x1C16D08
	0x032D15FC MOV X1, X0
	0x032D1600 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+424]
	007 Move X1, [X8+432]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.String get_Namespace()

Disassembly:
	0x032D1604 BL 0x1C16DEC
	0x032D1608 STP X30, X19, [X31 - 0x10]!
	0x032D160C ADRP X0, 0xE22000
	0x032D1610 LDR X0, [X0 + 0xB40]
	0x032D1614 BL 0x1C16D08
	0x032D1618 BL 0x1C16F10
	0x032D161C MOV X19, X0
	0x032D1620 ADRP X0, 0xE54000
	0x032D1624 LDR X0, [X0 + 0xF18]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+712]
	007 Move X1, [X8+720]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x032D1628 BL 0x1C16D08
	0x032D162C MOV X1, X0
	0x032D1630 MOV X0, X19
	0x032D1634 MOV X2, X31
	0x032D1638 BL 0x3379A44
	0x032D163C ADRP X0, 0xE55000
	0x032D1640 LDR X0, [X0 + 0x10]
	0x032D1644 BL 0x1C16D08
	0x032D1648 MOV X1, X0
	0x032D164C MOV X0, X19
	0x032D1650 BL 0x1C16DEC
	0x032D1654 STP X30, X19, [X31 - 0x10]!
	0x032D1658 ADRP X0, 0xE22000
	0x032D165C LDR X0, [X0 + 0xB40]
	0x032D1660 BL 0x1C16D08
	0x032D1664 BL 0x1C16F10
	0x032D1668 MOV X19, X0
	0x032D166C ADRP X0, 0xE54000
	0x032D1670 LDR X0, [X0 + 0xF18]
	0x032D1674 BL 0x1C16D08
	0x032D1678 MOV X1, X0
	0x032D167C MOV X0, X19
	0x032D1680 MOV X2, X31
	0x032D1684 BL 0x3379A44
	0x032D1688 ADRP X0, 0xE55000
	0x032D168C LDR X0, [X0 + 0x18]
	0x032D1690 BL 0x1C16D08
	0x032D1694 MOV X1, X0
	0x032D1698 MOV X0, X19
	0x032D169C BL 0x1C16DEC
	0x032D16A0 STP X30, X19, [X31 - 0x10]!
	0x032D16A4 ADRP X0, 0xE22000
	0x032D16A8 LDR X0, [X0 + 0xB40]
	0x032D16AC BL 0x1C16D08
	0x032D16B0 BL 0x1C16F10
	0x032D16B4 MOV X19, X0
	0x032D16B8 ADRP X0, 0xE54000
	0x032D16BC LDR X0, [X0 + 0xF18]
	0x032D16C0 BL 0x1C16D08
	0x032D16C4 MOV X1, X0
	0x032D16C8 MOV X0, X19
	0x032D16CC MOV X2, X31
	0x032D16D0 BL 0x3379A44
	0x032D16D4 ADRP X0, 0xE55000
	0x032D16D8 LDR X0, [X0 + 0x20]
	0x032D16DC BL 0x1C16D08
	0x032D16E0 MOV X1, X0
	0x032D16E4 MOV X0, X19
	0x032D16E8 BL 0x1C16DEC
	0x032D16EC STP X30, X19, [X31 - 0x10]!
	0x032D16F0 ADRP X0, 0xE22000
	0x032D16F4 LDR X0, [X0 + 0xB40]
	0x032D16F8 BL 0x1C16D08
	0x032D16FC BL 0x1C16F10
	0x032D1700 MOV X19, X0
	0x032D1704 ADRP X0, 0xE54000
	0x032D1708 LDR X0, [X0 + 0xF18]
	0x032D170C BL 0x1C16D08
	0x032D1710 MOV X1, X0
	0x032D1714 MOV X0, X19
	0x032D1718 MOV X2, X31
	0x032D171C BL 0x3379A44
	0x032D1720 ADRP X0, 0xE55000
	0x032D1724 LDR X0, [X0 + 0x28]
	0x032D1728 BL 0x1C16D08
	0x032D172C MOV X1, X0
	0x032D1730 MOV X0, X19
	0x032D1734 BL 0x1C16DEC
	0x032D1738 STP X30, X19, [X31 - 0x10]!
	0x032D173C ADRP X0, 0xE22000
	0x032D1740 LDR X0, [X0 + 0xB40]
	0x032D1744 BL 0x1C16D08
	0x032D1748 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x110C000
	006 Move X21, 0xE23000
	007 Move W8, [X20+2306]
	008 Move X21, [X21+2288]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE23000
	015 Move X0, [X0+2288]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2306], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call StringBuilder..ctor, X0
	024 Move X0, [X19+24]
	025 Compare X0, 0
	026 JumpIfEqual {74}
	027 Move X8, [X0]
	028 Move X9, [X8+360]
	029 Move X1, [X8+368]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Compare X20, 0
	032 JumpIfEqual {74}
	033 Move X1, X0
	034 Move X0, X20
	035 Move X2, X31
	036 Call StringBuilder.Append, X0, X1
	037 Move W1, 91
	038 Move X0, X20
	039 Move X2, X31
	040 Call StringBuilder.Append, X0, X1
	041 Move X8, [X19+32]
	042 Compare X8, 0
	043 JumpIfEqual {74}
	044 Move X21, X31
	045 Move W9, [X8+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Compare W21, 0
	048 JumpIfEqual {56}
	049 Move W1, 44
	050 Move X0, X20
	051 Move X2, X31
	052 Call StringBuilder.Append, X0, X1
	053 Move X8, [X19+32]
	054 Compare X8, 0
	055 JumpIfEqual {74}
	056 Move W9, [X8+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add X8, X8, X21
	059 Move X0, [X8+32]
	060 Compare X0, 0
	061 JumpIfEqual {74}
	062 Move X8, [X0]
	063 Move X9, [X8+360]
	064 Move X1, [X8+368]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X1, X0
	067 Move X0, X20
	068 Move X2, X31
	069 Call StringBuilder.Append, X0, X1
	070 Move X8, [X19+32]
	071 Add X21, X21, 1
	072 Compare X8, 0
	073 JumpIfNotEqual {45}
	074 Call 0x1C17F20
	075 Move W1, 93
	076 Move X0, X20
	077 Move X2, X31
	078 Call StringBuilder.Append, X0, X1
	079 Move X8, [X20]
	080 Move X0, X20
	081 Move X20, [X31+16]
	082 Move X19, [X31+24]
	083 Move X2, [X8+360]
	084 Move X1, [X8+368]
	085 Move X30, [X31+32]
	086 Move X21, [X31+40]
	087 CallNoReturn X2
	088 Call 0x1C17F28

