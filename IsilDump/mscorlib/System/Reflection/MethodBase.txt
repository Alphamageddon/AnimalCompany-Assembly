Type: System.Reflection.MethodBase

Method: System.Void .ctor()

Disassembly:
	0x032CD7D8 MOV X2, X0
	0x032CD7DC ADD X0, X31, 0x0

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Reflection.ParameterInfo[] GetParameters()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Reflection.MethodAttributes get_Attributes()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Reflection.MethodImplAttributes GetMethodImplementationFlags()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Reflection.CallingConventions get_CallingConvention()

Disassembly:
	0x032CF348 B.NE 0x32CF394
	0x032CF34C ADRP X8, 0xFFFFFFFFFE8E7000

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean get_IsAbstract()

Disassembly:
	0x032CF350 ADD X8, X8, 0xAE0
	0x032CF354 B 0x32CF3D8
	0x032CF358 CMP W22, 0x1
	0x032CF35C B.NE 0x32CF390
	0x032CF360 LDRB W8, [X19 + 0x70]
	0x032CF364 CBZ W8, 0x32CF3A8
	0x032CF368 MOV X0, X20
	0x032CF36C BL 0x1C16D7C

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+600]
	004 Move X1, [X8+608]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 Move W0, W0
	007 ShiftRight W0, 10
	008 And W0, W0, 1023
	009 Move X30, [X31+16]
	010 Return X0

Method: System.Boolean get_IsConstructor()

Disassembly:
	0x032CF370 MOV W21, W0
	0x032CF374 MOV X0, X20
	0x032CF378 BL 0x1C17238
	0x032CF37C TBZ X21, 0x0, 0x32CF3B4
	0x032CF380 TBZ X0, 0x0, 0x32CF3C4
	0x032CF384 ADRP X8, 0xFFFFFFFFFE8E7000
	0x032CF388 ADD X8, X8, 0xBFC
	0x032CF38C B 0x32CF3D8
	0x032CF390 CBZ X21, 0x32CF3F8
	0x032CF394 LDR X8, [X19 + 0x10]
	0x032CF398 LDR X9, [X19 + 0x20]
	0x032CF39C STR X8, [X19 + 0x18]
	0x032CF3A0 STR X9, [X19 + 0x40]
	0x032CF3A4 B 0x32CF3DC
	0x032CF3A8 ADRP X8, 0xFFFFFFFFFE8E7000
	0x032CF3AC ADD X8, X8, 0xABC
	0x032CF3B0 B 0x32CF3D8
	0x032CF3B4 TBZ X0, 0x0, 0x32CF3D0
	0x032CF3B8 ADRP X8, 0xFFFFFFFFFE8E7000
	0x032CF3BC ADD X8, X8, 0xB24
	0x032CF3C0 B 0x32CF3D8
	0x032CF3C4 ADRP X8, 0xFFFFFFFFFE8E7000
	0x032CF3C8 ADD X8, X8, 0xBB0
	0x032CF3CC B 0x32CF3D8
	0x032CF3D0 ADRP X8, 0xFFFFFFFFFE8E7000
	0x032CF3D4 ADD X8, X8, 0xAF4
	0x032CF3D8 STR X8, [X19 + 0x18]
	0x032CF3DC ADRP X8, 0xFFFFFFFFFE8E7000
	0x032CF3E0 ADD X8, X8, 0xA58
	0x032CF3E4 STR X8, [X19 + 0x38]
	0x032CF3E8 LDP X20, X19, [X31 + 0x20]
	0x032CF3EC LDP X22, X21, [X31 + 0x10]
	0x032CF3F0 LDR X30, [X31], #0x30
	0x032CF3F4 RET
	0x032CF3F8 ADRP X1, 0xFFFFFFFFFD84C000
	0x032CF3FC ADD X1, X1, 0xEE3
	0x032CF400 MOV X0, X31
	0x032CF404 BL 0x1C16F3C
	0x032CF408 MOV X1, X31
	0x032CF40C BL 0x1C16DEC
	0x032CF410 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x110E000
	005 Move W8, [X20+2283]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE4F000
	012 Move X0, [X0+2424]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2283], W8
	016 Compare X19, 0
	017 JumpIfEqual {45}
	018 Move X9, 0xE4F000
	019 Move X9, [X9+2424]
	020 Move X8, [X19]
	021 Move X9, [X9]
	022 Move W11, [X8+304]
	023 Move W10, [X9+304]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X11, [X8+200]
	026 Add X10, X11, X10
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X9, [X8+600]
	030 Move X1, [X8+608]
	031 Move X0, X19
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move TEMP, X0
	034 And TEMP, TEMP, 16
	035 Compare TEMP, 16
	036 JumpIfEqual {45}
	037 Move X8, [X19]
	038 Move X0, X19
	039 Move X9, [X8+600]
	040 Move X1, [X8+608]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move W0, W0
	043 ShiftRight W0, 12
	044 And W0, W0, 4095
	045 Move W0, W31
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Return X0

Method: System.Boolean get_IsStatic()

Disassembly:
	0x032CF414 B 0x33BDD8C
	0x032CF418 LDR W0, [X0 + 0x10]
	0x032CF41C RET
	0x032CF420 LDR X0, [X0 + 0x28]
	0x032CF424 RET
	0x032CF428 LDR X0, [X0 + 0x30]
	0x032CF42C RET
	0x032CF430 LDR X0, [X0 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+600]
	004 Move X1, [X8+608]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 Move W0, W0
	007 ShiftRight W0, 4
	008 And W0, W0, 15
	009 Move X30, [X31+16]
	010 Return X0

Method: System.Boolean get_IsVirtual()

Disassembly:
	0x032CF434 RET
	0x032CF438 LDR W0, [X0 + 0x38]
	0x032CF43C RET
	0x032CF440 STR X30, [X31 - 0x10]!
	0x032CF444 LDR X8, [X0]
	0x032CF448 LDP X9, X1, [X8 + 0x1A8]
	0x032CF44C BLR X9
	0x032CF450 AND W0, W0, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+600]
	004 Move X1, [X8+608]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 Move W0, W0
	007 ShiftRight W0, 6
	008 And W0, W0, 63
	009 Move X30, [X31+16]
	010 Return X0

Method: System.Boolean get_IsPublic()

Disassembly:
	0x032CF454 LDR X30, [X31], #0x10
	0x032CF458 RET
	0x032CF45C STR X30, [X31 - 0x10]!
	0x032CF460 LDR X8, [X0]
	0x032CF464 LDP X9, X1, [X8 + 0x1A8]
	0x032CF468 BLR X9
	0x032CF46C UBFM W0, W0, 0x4, 0x4
	0x032CF470 LDR X30, [X31], #0x10
	0x032CF474 RET
	0x032CF478 STR X30, [X31 - 0x10]!

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+600]
	004 Move X1, [X8+608]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 And W8, W0, 7
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Move X30, [X31+16]
	010 Return X0

Method: System.Boolean get_IsGenericMethod()

Disassembly:
	0x032CF47C LDR X8, [X0]
	0x032CF480 LDP X9, X1, [X8 + 0x1A8]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_IsGenericMethodDefinition()

Disassembly:
	0x032CF484 BLR X9
	0x032CF488 UBFM W0, W0, 0x1, 0x1

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Type[] GetGenericArguments()

Disassembly:
	0x032CF48C LDR X30, [X31], #0x10
	0x032CF490 RET
	0x032CF494 STP X30, X19, [X31 - 0x10]!
	0x032CF498 MOV X0, X31
	0x032CF49C BL 0x3396C4C
	0x032CF4A0 MOV X19, X0
	0x032CF4A4 ADRP X0, 0xE56000
	0x032CF4A8 LDR X0, [X0 + 0xE08]
	0x032CF4AC BL 0x1C16D08
	0x032CF4B0 MOV X1, X0
	0x032CF4B4 MOV X0, X19
	0x032CF4B8 BL 0x1C16DEC
	0x032CF4BC STP X30, X21, [X31 - 0x20]!
	0x032CF4C0 STP X20, X19, [X31 + 0x10]
	0x032CF4C4 ADRP X20, 0x110D000
	0x032CF4C8 ADRP X21, 0xE24000
	0x032CF4CC LDRB W8, [X20 + 0x8F5]
	0x032CF4D0 LDR X21, [X21 + 0x6C0]
	0x032CF4D4 MOV X19, X1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xE25000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xE57000
	009 Move X0, [X0+3368]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xE57000
	016 Move X0, [X0+3376]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Boolean get_ContainsGenericParameters()

Disassembly:
	0x032CF4D8 TBNZ X8, 0x0, 0x32CF4F0
	0x032CF4DC ADRP X0, 0xE24000

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Object Invoke(System.Object obj, System.Object[] parameters)

Disassembly:
	0x032CF4E0 LDR X0, [X0 + 0x6C0]
	0x032CF4E4 BL 0x1C16CF4
	0x032CF4E8 MOVZ W8, 0x1
	0x032CF4EC STRB W8, [X20 + 0x8F5]
	0x032CF4F0 LDR X0, [X21]
	0x032CF4F4 LDR W8, [X0 + 0xE0]
	0x032CF4F8 CBNZ W8, 0x32CF500
	0x032CF4FC BL 0x1C16DFC

ISIL:
	001 Move X8, [X0]
	002 Move X4, X2
	003 Move W2, W31
	004 Move X3, X31
	005 Move X7, [X8+808]
	006 Move X6, [X8+816]
	007 Move X5, X31
	008 CallNoReturn X7

Method: System.Object Invoke(System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.RuntimeMethodHandle get_MethodHandle()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean get_IsSecurityCritical()

Disassembly:
	0x032CF500 MOV X0, X19
	0x032CF504 MOV X1, X31
	0x032CF508 MOV X2, X31
	0x032CF50C BL 0x3395194
	0x032CF510 TBNZ X0, 0x0, 0x32CF524
	0x032CF514 LDP X20, X19, [X31 + 0x10]
	0x032CF518 MOV W0, W31
	0x032CF51C LDP X30, X21, [X31], #0x20
	0x032CF520 RET
	0x032CF524 ADRP X0, 0xE29000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, X31
	004 Call NotImplemented.get_ByDesign
	005 Move X19, X0
	006 Move X0, 0xE57000
	007 Move X0, [X0+3384]
	008 Call 0x1C17D08
	009 Move X1, X0
	010 Move X0, X19
	011 Call 0x1C17DEC

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x032CD810 BL 0x338C698
	0x032CD814 LDR X8, [X29]

ISIL:
	001 Move X2, X31
	002 Call Object.Equals, X0, X1
	003 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x032CD820 MOV X0, X8
	0x032CD824 BL 0x1C16D6C

ISIL:
	001 Move X1, X31
	002 Call Object.GetHashCode, X0
	003 Return X0

Method: System.Boolean op_Equality(System.Reflection.MethodBase left, System.Reflection.MethodBase right)

Disassembly:
	0x032CF12C SUB W2, W8, 0x1
	0x032CF130 BL 0x3228DE4
	0x032CF134 CBZ X19, 0x32CF208
	0x032CF138 LDR X8, [X19]
	0x032CF13C MOV X20, X0
	0x032CF140 MOV X0, X19
	0x032CF144 LDP X9, X1, [X8 + 0x1A8]
	0x032CF148 BLR X9
	0x032CF14C CBZ X0, 0x32CF208
	0x032CF150 CBZ X20, 0x32CF208
	0x032CF154 LDR W8, [X0 + 0x10]
	0x032CF158 LDR W4, [X20 + 0x10]
	0x032CF15C CMP W8, W4
	0x032CF160 B.GE 0x32CF1A8
	0x032CF164 MOV W0, W31
	0x032CF168 B 0x32CF19C
	0x032CF16C CBZ X19, 0x32CF208
	0x032CF170 LDR X8, [X19]
	0x032CF174 MOV X0, X19
	0x032CF178 LDP X9, X1, [X8 + 0x1A8]
	0x032CF17C BLR X9
	0x032CF180 MOV X1, X0
	0x032CF184 MOVZ W2, 0x5
	0x032CF188 MOV X0, X20
	0x032CF18C MOV X3, X31
	0x032CF190 BL 0x322590C
	0x032CF194 CMP W0, 0x0
	0x032CF198 CSET W0, EQ
	0x032CF19C LDP X20, X19, [X31 + 0x10]
	0x032CF1A0 LDP X30, X21, [X31], #0x20
	0x032CF1A4 RET
	0x032CF1A8 MOVZ W5, 0x5
	0x032CF1AC MOV W1, W31
	0x032CF1B0 MOV X2, X20
	0x032CF1B4 MOV W3, W31
	0x032CF1B8 MOV X6, X31
	0x032CF1BC BL 0x3225DC8
	0x032CF1C0 B 0x32CF194
	0x032CF1C4 ADRP X0, 0xE56000
	0x032CF1C8 LDR X0, [X0 + 0xDD0]
	0x032CF1CC BL 0x1C16D08
	0x032CF1D0 BL 0x1C16F10
	0x032CF1D4 MOV X19, X0
	0x032CF1D8 ADRP X0, 0xE56000
	0x032CF1DC LDR X0, [X0 + 0xDD8]
	0x032CF1E0 BL 0x1C16D08
	0x032CF1E4 MOV X1, X0
	0x032CF1E8 MOV X0, X19
	0x032CF1EC BL 0x32CDE64
	0x032CF1F0 ADRP X0, 0xE56000
	0x032CF1F4 LDR X0, [X0 + 0xDE8]
	0x032CF1F8 BL 0x1C16D08
	0x032CF1FC MOV X1, X0
	0x032CF200 MOV X0, X19
	0x032CF204 BL 0x1C16DEC
	0x032CF208 BL 0x1C16F20
	0x032CF20C STP X30, X19, [X31 - 0x10]!
	0x032CF210 ADRP X0, 0xE2D000
	0x032CF214 LDR X0, [X0 + 0x758]
	0x032CF218 BL 0x1C16D08
	0x032CF21C BL 0x1C16F10
	0x032CF220 MOV X1, X31
	0x032CF224 MOV X19, X0
	0x032CF228 BL 0x3380288
	0x032CF22C ADRP X0, 0xE56000
	0x032CF230 LDR X0, [X0 + 0xDF0]
	0x032CF234 BL 0x1C16D08
	0x032CF238 MOV X1, X0
	0x032CF23C MOV X0, X19
	0x032CF240 BL 0x1C16DEC
	0x032CF244 STP X30, X23, [X31 - 0x30]!
	0x032CF248 STP X22, X21, [X31 + 0x10]
	0x032CF24C STP X20, X19, [X31 + 0x20]
	0x032CF250 ADRP X23, 0x110D000
	0x032CF254 ADRP X22, 0xE56000
	0x032CF258 ADRP X19, 0xE56000
	0x032CF25C ADRP X20, 0xE56000
	0x032CF260 ADRP X21, 0xE56000
	0x032CF264 LDRB W8, [X23 + 0x8F4]
	0x032CF268 LDR X22, [X22 + 0xDF8]
	0x032CF26C LDR X19, [X19 + 0xDE0]
	0x032CF270 LDR X20, [X20 + 0xE00]
	0x032CF274 LDR X21, [X21 + 0xDE8]
	0x032CF278 TBNZ X8, 0x0, 0x32CF2B4
	0x032CF27C ADRP X0, 0xE56000
	0x032CF280 LDR X0, [X0 + 0xDE8]
	0x032CF284 BL 0x1C16CF4
	0x032CF288 ADRP X0, 0xE56000
	0x032CF28C LDR X0, [X0 + 0xDE0]
	0x032CF290 BL 0x1C16CF4
	0x032CF294 ADRP X0, 0xE56000
	0x032CF298 LDR X0, [X0 + 0xE00]
	0x032CF29C BL 0x1C16CF4
	0x032CF2A0 ADRP X0, 0xE56000
	0x032CF2A4 LDR X0, [X0 + 0xDF8]
	0x032CF2A8 BL 0x1C16CF4
	0x032CF2AC MOVZ W8, 0x1
	0x032CF2B0 STRB W8, [X23 + 0x8F4]
	0x032CF2B4 LDR X0, [X22]
	0x032CF2B8 BL 0x1C16F10
	0x032CF2BC LDR X2, [X19]
	0x032CF2C0 MOV X1, X31
	0x032CF2C4 MOV X19, X0
	0x032CF2C8 BL 0x32CF30C
	0x032CF2CC LDR X8, [X20]
	0x032CF2D0 LDR X8, [X8 + 0xB8]
	0x032CF2D4 STR X19, [X8]
	0x032CF2D8 LDR X0, [X22]
	0x032CF2DC BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x110E000
	006 Move W8, [X21+2284]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xE4F000
	014 Move X0, [X0+2424]
	015 Call 0x1C17CF4
	016 Move X0, 0xE56000
	017 Move X0, [X0+632]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2284], W8
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W0, W31
	023 Compare X20, 0
	024 JumpIfEqual {117}
	025 Compare X19, 0
	026 JumpIfEqual {117}
	027 Move X9, 0xE56000
	028 Move X9, [X9+632]
	029 Move X8, [X20]
	030 Move X10, [X9]
	031 Move W9, [X8+304]
	032 Move W11, [X10+304]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X12, [X8+200]
	035 Add X12, X12, X11
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Compare X20, 0
	039 JumpIfEqual {50}
	040 Move X12, [X19]
	041 Move W13, [X12+304]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X12, [X12+200]
	044 Add X11, X12, X11
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Compare X19, 0
	048 JumpIfEqual {50}
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X21, 0xE4F000
	051 Move X21, [X21+2424]
	052 Move X0, [X21]
	053 Move W10, [X0+304]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X20, X31
	056 Move X8, [X8+200]
	057 Add X8, X8, X10
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CSEL not yet implemented."
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X0, X20
	066 Move X1, X31
	067 Call ConstructorInfo.op_Inequality, X0, X1
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {116}
	072 Move X8, [X19]
	073 Move X0, [X21]
	074 Move W10, [X8+304]
	075 Move W9, [X0+304]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X19, X31
	078 Move X8, [X8+200]
	079 Add X8, X8, X9
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 NotImplemented "Instruction CSEL not yet implemented."
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X0, X19
	088 Move X1, X31
	089 Call ConstructorInfo.op_Inequality, X0, X1
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {116}
	094 Move X0, [X21]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move W0, W31
	101 Compare X20, 0
	102 JumpIfEqual {117}
	103 Compare X19, 0
	104 JumpIfEqual {117}
	105 Move X8, [X20]
	106 Move X0, X20
	107 Move X1, X19
	108 Move X20, [X31+16]
	109 Move X19, [X31+24]
	110 Move X3, [X8+312]
	111 Move X2, [X8+320]
	112 Move X30, [X31+32]
	113 Move X21, [X31+40]
	114 CallNoReturn X3
	115 Move W0, 1
	116 Move W0, W31
	117 Move X20, [X31+16]
	118 Move X19, [X31+24]
	119 Move X30, [X31+32]
	120 Move X21, [X31+40]
	121 Return X0

Method: System.Boolean op_Inequality(System.Reflection.MethodBase left, System.Reflection.MethodBase right)

Disassembly:
	0x032CF114 CMP W8, 0x2A
	0x032CF118 B.NE 0x32CF16C
	0x032CF11C LDR W8, [X20 + 0x10]
	0x032CF120 MOV X0, X20
	0x032CF124 MOV W1, W31
	0x032CF128 MOV X3, X31

ISIL:
	001 Move [X31-16], X30
	002 Call MethodBase.op_Equality, X0, X1
	003 NotImplemented "Instruction ORN not yet implemented."
	004 And W0, W8, 1
	005 Move X30, [X31+16]
	006 Return X0

Method: System.Reflection.ParameterInfo[] GetParametersInternal()

Disassembly:
	0x032CF564 MOV X0, X19
	0x032CF568 BL 0x1C16DEC
	0x032CF56C STP X30, X21, [X31 - 0x20]!
	0x032CF570 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+584]
	003 Move X1, [X8+592]
	004 CallNoReturn X2

Method: System.Int32 GetParametersCount()

Disassembly:
	0x032CF574 ADRP X20, 0x110D000
	0x032CF578 ADRP X21, 0xE24000
	0x032CF57C LDRB W8, [X20 + 0x8F6]
	0x032CF580 LDR X21, [X21 + 0x6C0]
	0x032CF584 MOV X19, X1
	0x032CF588 TBNZ X8, 0x0, 0x32CF5AC
	0x032CF58C ADRP X0, 0xE24000
	0x032CF590 LDR X0, [X0 + 0x9C8]
	0x032CF594 BL 0x1C16CF4
	0x032CF598 ADRP X0, 0xE24000

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+856]
	004 Move X1, [X8+864]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 Compare X0, 0
	007 JumpIfEqual {11}
	008 Move W0, [X0+24]
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

Method: System.String FormatNameAndSig(System.Boolean serialization)

Disassembly:
	0x032CF59C LDR X0, [X0 + 0x6C0]
	0x032CF5A0 BL 0x1C16CF4
	0x032CF5A4 MOVZ W8, 0x1
	0x032CF5A8 STRB W8, [X20 + 0x8F6]
	0x032CF5AC LDR X0, [X21]
	0x032CF5B0 LDR W8, [X0 + 0xE0]
	0x032CF5B4 CBNZ W8, 0x32CF5BC
	0x032CF5B8 BL 0x1C16DFC
	0x032CF5BC MOV X0, X19
	0x032CF5C0 MOV X1, X31
	0x032CF5C4 MOV X2, X31
	0x032CF5C8 BL 0x3395194
	0x032CF5CC TBNZ X0, 0x0, 0x32CF634
	0x032CF5D0 ADRP X8, 0xE24000
	0x032CF5D4 LDR X8, [X8 + 0x9C8]
	0x032CF5D8 LDR X19, [X8]
	0x032CF5DC LDR X8, [X19 + 0x38]
	0x032CF5E0 CBNZ X8, 0x32CF5F0
	0x032CF5E4 MOV X0, X19
	0x032CF5E8 BL 0x1C5C6E0
	0x032CF5EC LDR X8, [X19 + 0x38]
	0x032CF5F0 LDR X0, [X8 + 0x10]
	0x032CF5F4 LDRB W8, [X0 + 0x135]
	0x032CF5F8 TBNZ X8, 0x0, 0x32CF600
	0x032CF5FC BL 0x1C5C684
	0x032CF600 LDR W8, [X0 + 0xE0]
	0x032CF604 CBNZ W8, 0x32CF60C
	0x032CF608 BL 0x1C16DFC
	0x032CF60C LDR X8, [X19 + 0x38]
	0x032CF610 LDR X0, [X8 + 0x10]
	0x032CF614 LDRB W8, [X0 + 0x135]
	0x032CF618 TBNZ X8, 0x0, 0x32CF620
	0x032CF61C BL 0x1C5C684
	0x032CF620 LDR X8, [X0 + 0xB8]
	0x032CF624 LDP X20, X19, [X31 + 0x10]
	0x032CF628 LDR X0, [X8]
	0x032CF62C LDP X30, X21, [X31], #0x20
	0x032CF630 RET
	0x032CF634 ADRP X0, 0xE29000
	0x032CF638 LDR X0, [X0 + 0x528]
	0x032CF63C BL 0x1C16D08
	0x032CF640 BL 0x1C16F10
	0x032CF644 MOV X19, X0
	0x032CF648 ADRP X0, 0xE56000
	0x032CF64C LDR X0, [X0 + 0xE10]
	0x032CF650 BL 0x1C16D08
	0x032CF654 MOV X1, X0
	0x032CF658 MOV X0, X19
	0x032CF65C MOV X2, X31
	0x032CF660 BL 0x330E100
	0x032CF664 ADRP X0, 0xE56000
	0x032CF668 LDR X0, [X0 + 0xE20]
	0x032CF66C BL 0x1C16D08
	0x032CF670 MOV X1, X0
	0x032CF674 MOV X0, X19
	0x032CF678 BL 0x1C16DEC
	0x032CF67C STR X30, [X31 - 0x20]!
	0x032CF680 STP X20, X19, [X31 + 0x10]
	0x032CF684 ADRP X20, 0x110D000
	0x032CF688 LDRB W8, [X20 + 0x8F7]
	0x032CF68C MOV X19, X0
	0x032CF690 TBNZ X8, 0x0, 0x32CF6C0
	0x032CF694 ADRP X0, 0xE54000
	0x032CF698 LDR X0, [X0 + 0xD78]
	0x032CF69C BL 0x1C16CF4
	0x032CF6A0 ADRP X0, 0xE55000
	0x032CF6A4 LDR X0, [X0 + 0x278]
	0x032CF6A8 BL 0x1C16CF4
	0x032CF6AC ADRP X0, 0xE4D000
	0x032CF6B0 LDR X0, [X0 + 0x3F0]
	0x032CF6B4 BL 0x1C16CF4
	0x032CF6B8 MOVZ W8, 0x1
	0x032CF6BC STRB W8, [X20 + 0x8F7]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x110E000
	008 Move X21, 0xE25000
	009 Move W8, [X22+2285]
	010 Move X21, [X21+2288]
	011 Move W19, W1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xE25000
	018 Move X0, [X0+2288]
	019 Call 0x1C17CF4
	020 Move X0, 0xE30000
	021 Move X0, [X0+784]
	022 Call 0x1C17CF4
	023 Move X0, 0xE26000
	024 Move X0, [X0+1544]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+2285], W8
	028 Move X8, [X20]
	029 Move X0, X20
	030 Move X9, [X8+424]
	031 Move X1, [X8+432]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move X8, [X21]
	034 Move X22, X0
	035 Move X0, X8
	036 Call 0x1C17F10
	037 Move X1, X22
	038 Move X2, X31
	039 Move X21, X0
	040 Call StringBuilder..ctor, X0, X1
	041 Compare X21, 0
	042 JumpIfEqual {85}
	043 Move X8, 0xE30000
	044 Move X8, [X8+784]
	045 Move X23, 0xE26000
	046 Move X0, X21
	047 Move X2, X31
	048 Move X1, [X8]
	049 Move X23, [X23+1544]
	050 Call StringBuilder.Append, X0, X1
	051 Move X8, [X20]
	052 Move X0, X20
	053 Move X9, [X8+904]
	054 Move X1, [X8+912]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X8, [X20]
	057 Move X22, X0
	058 Move X0, X20
	059 Move X9, [X8+632]
	060 Move X1, [X8+640]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move W1, W0
	063 And W2, W19, 1
	064 Move X0, X22
	065 Call MethodBase.ConstructParameters, X0, X1, X2
	066 Move X1, X0
	067 Move X0, X21
	068 Move X2, X31
	069 Call StringBuilder.Append, X0, X1
	070 Move X1, [X23]
	071 Move X0, X21
	072 Move X2, X31
	073 Call StringBuilder.Append, X0, X1
	074 Move X8, [X21]
	075 Move X0, X21
	076 Move X20, [X31+32]
	077 Move X19, [X31+40]
	078 Move X22, [X31+16]
	079 Move X21, [X31+24]
	080 Move X2, [X8+360]
	081 Move X1, [X8+368]
	082 Move X30, [X31+48]
	083 Move X23, [X31+56]
	084 CallNoReturn X2
	085 Call 0x1C17F20

Method: System.Type[] GetParameterTypes()

Disassembly:
	0x032CF8B8 MOV X2, X31
	0x032CF8BC BL 0x329F100
	0x032CF8C0 ADRP X0, 0xE56000
	0x032CF8C4 LDR X0, [X0 + 0xE40]
	0x032CF8C8 BL 0x1C16D08
	0x032CF8CC MOV X1, X0
	0x032CF8D0 MOV X0, X19
	0x032CF8D4 BL 0x1C16DEC
	0x032CF8D8 STP X30, X21, [X31 - 0x20]!
	0x032CF8DC STP X20, X19, [X31 + 0x10]
	0x032CF8E0 ADRP X20, 0x110D000
	0x032CF8E4 LDRB W8, [X20 + 0x8F8]
	0x032CF8E8 MOV X19, X0
	0x032CF8EC TBNZ X8, 0x0, 0x32CF904
	0x032CF8F0 ADRP X0, 0xE24000
	0x032CF8F4 LDR X0, [X0 + 0xDD8]
	0x032CF8F8 BL 0x1C16CF4
	0x032CF8FC MOVZ W8, 0x1
	0x032CF900 STRB W8, [X20 + 0x8F8]
	0x032CF904 LDR X8, [X19]
	0x032CF908 MOV X0, X19
	0x032CF90C LDP X9, X1, [X8 + 0x1D8]
	0x032CF910 BLR X9
	0x032CF914 CBZ X0, 0x32CF958
	0x032CF918 ADRP X21, 0xE24000
	0x032CF91C LDR X21, [X21 + 0xDD8]
	0x032CF920 MOV X1, X31
	0x032CF924 BL 0x33982D4
	0x032CF928 LDR X8, [X19]
	0x032CF92C MOV X20, X0
	0x032CF930 MOV X0, X19
	0x032CF934 LDP X9, X1, [X8 + 0x1C8]
	0x032CF938 BLR X9
	0x032CF93C LDR X1, [X21]
	0x032CF940 MOV X2, X0
	0x032CF944 MOV X0, X20
	0x032CF948 LDP X20, X19, [X31 + 0x10]
	0x032CF94C MOV X3, X31
	0x032CF950 LDP X30, X21, [X31], #0x20
	0x032CF954 B 0x32274B8
	0x032CF958 BL 0x1C16F20
	0x032CF95C STP X30, X21, [X31 - 0x20]!
	0x032CF960 STP X20, X19, [X31 + 0x10]
	0x032CF964 MOV X20, X1
	0x032CF968 MOV X1, X31
	0x032CF96C MOV X19, X2
	0x032CF970 MOV X21, X0
	0x032CF974 BL 0x33BDD8C
	0x032CF978 STP X20, X19, [X21 + 0x10]
	0x032CF97C LDP X20, X19, [X31 + 0x10]
	0x032CF980 LDP X30, X21, [X31], #0x20
	0x032CF984 RET
	0x032CF988 STR X30, [X31 - 0x30]!
	0x032CF98C STP X22, X21, [X31 + 0x10]
	0x032CF990 STP X20, X19, [X31 + 0x20]
	0x032CF994 ADRP X21, 0x110D000
	0x032CF998 ADRP X22, 0xE24000
	0x032CF99C LDRB W8, [X21 + 0x8FA]
	0x032CF9A0 LDR X22, [X22 + 0x6C0]
	0x032CF9A4 MOV X19, X1
	0x032CF9A8 MOV X20, X0
	0x032CF9AC TBNZ X8, 0x0, 0x32CF9D0
	0x032CF9B0 ADRP X0, 0xE56000
	0x032CF9B4 LDR X0, [X0 + 0xE48]
	0x032CF9B8 BL 0x1C16CF4
	0x032CF9BC ADRP X0, 0xE24000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x110E000
	009 Move W8, [X20+2286]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xE2D000
	016 Move X0, [X0+3168]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2286], W8
	020 Move X8, [X19]
	021 Move X0, X19
	022 Move X9, [X8+920]
	023 Move X1, [X8+928]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Compare X0, 0
	026 JumpIfEqual {73}
	027 Move X8, 0xE2D000
	028 Move X8, [X8+3168]
	029 Move X19, X0
	030 Move W1, [X19+24]
	031 Move X0, [X8]
	032 Call 0x1C17D6C
	033 Move W8, [X19+24]
	034 Move X20, X0
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X22, X31
	037 Add X23, X20, 32
	038 Add X24, X19, 32
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X0, [X24]
	041 Compare X0, 0
	042 JumpIfEqual {73}
	043 Move X8, [X0]
	044 Move X9, [X8+472]
	045 Move X1, [X8+480]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Compare X20, 0
	048 JumpIfEqual {73}
	049 Move X21, X0
	050 Compare X0, 0
	051 JumpIfEqual {58}
	052 Move X8, [X20]
	053 Move X0, X21
	054 Move X1, [X8+64]
	055 Call 0x1C17E00
	056 Compare X0, 0
	057 JumpIfEqual {75}
	058 Move W8, [X20+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move [X23], X21
	061 Move W8, [X19+24]
	062 Add X22, X22, 1
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X0, X20
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 Return X0
	073 Call 0x1C17F20
	074 Call 0x1C17F28
	075 Call 0x1C17F44
	076 Move X1, X31
	077 Call 0x1C17DEC

Method: System.Reflection.ParameterInfo[] GetParametersNoCopy()

Disassembly:
	0x032CF9C0 LDR X0, [X0 + 0x6C0]
	0x032CF9C4 BL 0x1C16CF4
	0x032CF9C8 MOVZ W8, 0x1
	0x032CF9CC STRB W8, [X21 + 0x8FA]

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+584]
	003 Move X1, [X8+592]
	004 CallNoReturn X2

Method: System.Reflection.MethodBase GetMethodFromHandle(System.RuntimeMethodHandle handle)

Disassembly:
	0x032CF9D0 LDR X0, [X22]
	0x032CF9D4 LDR W8, [X0 + 0xE0]
	0x032CF9D8 CBNZ W8, 0x32CF9E0
	0x032CF9DC BL 0x1C16DFC
	0x032CF9E0 MOV X0, X19
	0x032CF9E4 MOV X1, X31
	0x032CF9E8 MOV X2, X31
	0x032CF9EC BL 0x3395194
	0x032CF9F0 TBNZ X0, 0x0, 0x32CFA4C
	0x032CF9F4 CBZ X19, 0x32CFA80
	0x032CF9F8 MOV X0, X19
	0x032CF9FC MOV X1, X31
	0x032CFA00 BL 0x3396C18
	0x032CFA04 TBZ X0, 0x0, 0x32CFA84
	0x032CFA08 MOV X0, X19
	0x032CFA0C MOV X1, X31
	0x032CFA10 BL 0x3395E80
	0x032CFA14 TBZ X0, 0x0, 0x32CFAA4
	0x032CFA18 ADRP X8, 0xE56000
	0x032CFA1C LDR X8, [X8 + 0xE48]
	0x032CFA20 LDR X0, [X8]
	0x032CFA24 BL 0x1C16F10
	0x032CFA28 MOV X1, X31
	0x032CFA2C MOV X21, X0
	0x032CFA30 BL 0x33BDD8C
	0x032CFA34 STP X20, X19, [X21 + 0x10]
	0x032CFA38 MOV X0, X21
	0x032CFA3C LDP X20, X19, [X31 + 0x20]
	0x032CFA40 LDP X22, X21, [X31 + 0x10]
	0x032CFA44 LDR X30, [X31], #0x30
	0x032CFA48 RET
	0x032CFA4C ADRP X0, 0xE29000
	0x032CFA50 LDR X0, [X0 + 0x528]
	0x032CFA54 BL 0x1C16D08
	0x032CFA58 BL 0x1C16F10
	0x032CFA5C MOV X19, X0
	0x032CFA60 ADRP X0, 0xE2C000
	0x032CFA64 LDR X0, [X0 + 0x5E8]
	0x032CFA68 BL 0x1C16D08
	0x032CFA6C MOV X1, X0
	0x032CFA70 MOV X0, X19
	0x032CFA74 MOV X2, X31
	0x032CFA78 BL 0x330E100
	0x032CFA7C B 0x32CFAE8
	0x032CFA80 BL 0x1C16F20
	0x032CFA84 ADRP X0, 0xE2C000
	0x032CFA88 LDR X0, [X0 + 0x578]
	0x032CFA8C BL 0x1C16D08
	0x032CFA90 BL 0x1C16F10
	0x032CFA94 MOV X19, X0
	0x032CFA98 ADRP X0, 0xE56000
	0x032CFA9C LDR X0, [X0 + 0xE50]
	0x032CFAA0 B 0x32CFAC0
	0x032CFAA4 ADRP X0, 0xE2C000
	0x032CFAA8 LDR X0, [X0 + 0x578]
	0x032CFAAC BL 0x1C16D08
	0x032CFAB0 BL 0x1C16F10
	0x032CFAB4 MOV X19, X0
	0x032CFAB8 ADRP X0, 0xE56000
	0x032CFABC LDR X0, [X0 + 0xE58]
	0x032CFAC0 BL 0x1C16D08
	0x032CFAC4 MOV X20, X0
	0x032CFAC8 ADRP X0, 0xE53000
	0x032CFACC LDR X0, [X0 + 0x240]
	0x032CFAD0 BL 0x1C16D08
	0x032CFAD4 MOV X2, X0
	0x032CFAD8 MOV X0, X19
	0x032CFADC MOV X1, X20
	0x032CFAE0 MOV X3, X31
	0x032CFAE4 BL 0x330E16C
	0x032CFAE8 ADRP X0, 0xE56000
	0x032CFAEC LDR X0, [X0 + 0xE60]
	0x032CFAF0 BL 0x1C16D08
	0x032CFAF4 MOV X1, X0
	0x032CFAF8 MOV X0, X19
	0x032CFAFC BL 0x1C16DEC
	0x032CFB00 STP X30, X19, [X31 - 0x10]!
	0x032CFB04 ADRP X0, 0xE4F000
	0x032CFB08 LDR X0, [X0 + 0xC50]
	0x032CFB0C BL 0x1C16D08
	0x032CFB10 BL 0x1C16F10
	0x032CFB14 MOV X1, X31
	0x032CFB18 MOV X19, X0
	0x032CFB1C BL 0x338E344
	0x032CFB20 ADRP X0, 0xE56000
	0x032CFB24 LDR X0, [X0 + 0xE68]
	0x032CFB28 BL 0x1C16D08
	0x032CFB2C MOV X1, X0
	0x032CFB30 MOV X0, X19
	0x032CFB34 BL 0x1C16DEC
	0x032CFB38 MOV X1, X31
	0x032CFB3C B 0x33BDD8C
	0x032CFB40 MOVZ W0, 0x10
	0x032CFB44 RET
	0x032CFB48 LDR X8, [X0]
	0x032CFB4C MOVZ W1, 0x1
	0x032CFB50 LDR X3, [X8 + 0x298]
	0x032CFB54 LDR X2, [X8 + 0x2A0]
	0x032CFB58 BR X3
	0x032CFB5C LDR X8, [X0]
	0x032CFB60 MOVZ W1, 0x1
	0x032CFB64 LDR X3, [X8 + 0x2B8]
	0x032CFB68 LDR X2, [X8 + 0x2C0]
	0x032CFB6C BR X3
	0x032CFB70 LDR X8, [X0]
	0x032CFB74 MOV X2, X31
	0x032CFB78 LDR X4, [X8 + 0x2C8]
	0x032CFB7C LDR X3, [X8 + 0x2D0]
	0x032CFB80 BR X4
	0x032CFB84 LDR X8, [X0]
	0x032CFB88 MOV X4, X2
	0x032CFB8C MOV W2, W31
	0x032CFB90 MOV X3, X31
	0x032CFB94 LDR X7, [X8 + 0x2D8]
	0x032CFB98 LDR X6, [X8 + 0x2E0]
	0x032CFB9C MOV X5, X31
	0x032CFBA0 BR X7
	0x032CFBA4 LDR X8, [X0]
	0x032CFBA8 MOV X5, X3
	0x032CFBAC MOV W3, W31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x110E000
	007 Move W8, [X19+2287]
	008 Move [X31+8], X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE25000
	014 Move X0, [X0+1728]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X19+2287], W8
	018 Add X0, X31, 8
	019 Move X1, X31
	020 Call RuntimeMethodHandle.IsNullHandle, X0
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {79}
	025 Move X0, [X31+8]
	026 Move X1, X31
	027 Move X2, X31
	028 Call RuntimeMethodInfo.GetMethodFromHandleInternalType, X0, X1
	029 Move X1, X31
	030 Move X19, X0
	031 Call MethodBase.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {84}
	036 Compare X19, 0
	037 JumpIfEqual {78}
	038 Move X8, [X19]
	039 Move X20, 0xE25000
	040 Move X0, X19
	041 Move X9, [X8+440]
	042 Move X1, [X8+448]
	043 Move X20, [X20+1728]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X8, [X20]
	046 Move X20, X0
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Move X0, X20
	053 Move X1, X31
	054 Move X2, X31
	055 Call Type.op_Inequality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {71}
	060 Compare X20, 0
	061 JumpIfEqual {78}
	062 Move X8, [X20]
	063 Move X0, X20
	064 Move X9, [X8+968]
	065 Move X1, [X8+976]
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {102}
	071 Move X0, X19
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Return X0
	078 Call 0x1C17F20
	079 Move X0, 0xE57000
	080 Move X0, [X0+3088]
	081 Call 0x1C17D08
	082 Move X1, X31
	083 Call Environment.GetResourceString, X0
	084 Move X0, 0xE2D000
	085 Move X0, [X0+1400]
	086 Call 0x1C17D08
	087 Call 0x1C17F10
	088 Move X19, X0
	089 Move X0, 0xE57000
	090 Move X0, [X0+3088]
	091 Call 0x1C17D08
	092 Move X1, X0
	093 Move X0, X19
	094 Move X2, X31
	095 Call ArgumentException..ctor, X0, X1
	096 Move X0, 0xE57000
	097 Move X0, [X0+3400]
	098 Call 0x1C17D08
	099 Move X1, X0
	100 Move X0, X19
	101 Call 0x1C17DEC
	102 Move X0, 0xE27000
	103 Move X0, [X0+3144]
	104 Call 0x1C17D08
	105 Call 0x19913D0
	106 Move X0, X31
	107 Call CultureInfo.get_CurrentCulture
	108 Move X21, X0
	109 Move X0, 0xE57000
	110 Move X0, [X0+3408]
	111 Call 0x1C17D08
	112 Move X1, X31
	113 Call Environment.GetResourceString, X0
	114 Move X22, X0
	115 Move X0, X20
	116 Call 0x19913C0
	117 Move X8, [X20]
	118 Move X0, X20
	119 Move X9, [X8+1096]
	120 Move X1, [X8+1104]
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move X3, X0
	123 Move X0, X21
	124 Move X1, X22
	125 Move X2, X19
	126 Move X4, X31
	127 Call String.Format, X0, X1, X2, X3
	128 Move X19, X0
	129 Move X0, 0xE2D000
	130 Move X0, [X0+1400]
	131 Call 0x1C17D08
	132 Call 0x1C17F10
	133 Move X1, X19
	134 Move X2, X31
	135 Move X20, X0
	136 Call ArgumentException..ctor, X0, X1
	137 Move X0, 0xE57000
	138 Move X0, [X0+3400]
	139 Call 0x1C17D08
	140 Move X1, X0
	141 Move X0, X20
	142 Call 0x1C17DEC

Method: System.String ConstructParameters(System.Type[] parameterTypes, System.Reflection.CallingConventions callingConvention, System.Boolean serialization)

Disassembly:
	0x032CF6C0 LDR X0, [X19 + 0x28]
	0x032CF6C4 MOV X1, X31
	0x032CF6C8 BL 0x32BE96C
	0x032CF6CC TBNZ X0, 0x0, 0x32CF86C
	0x032CF6D0 LDR X0, [X19 + 0x28]
	0x032CF6D4 CBZ X0, 0x32CF844
	0x032CF6D8 LDR X8, [X0]
	0x032CF6DC LDP X9, X1, [X8 + 0x198]
	0x032CF6E0 BLR X9
	0x032CF6E4 CMP W0, 0x1
	0x032CF6E8 B.EQ 0x32CF6FC
	0x032CF6EC CMP W0, 0x10
	0x032CF6F0 B.EQ 0x32CF75C
	0x032CF6F4 CMP W0, 0x8
	0x032CF6F8 B.NE 0x32CF890
	0x032CF6FC LDR W8, [X19 + 0x38]
	0x032CF700 ADDS W31, W8, 0x1
	0x032CF704 B.EQ 0x32CF7D8
	0x032CF708 LDR X0, [X19 + 0x28]
	0x032CF70C CBZ X0, 0x32CF844
	0x032CF710 ADRP X9, 0xE54000
	0x032CF714 LDR X9, [X9 + 0xD78]
	0x032CF718 LDR X8, [X0]
	0x032CF71C LDR X1, [X9]
	0x032CF720 LDRB W10, [X8 + 0x130]
	0x032CF724 LDRB W9, [X1 + 0x130]
	0x032CF728 CMP W10, W9
	0x032CF72C B.CC 0x32CF868
	0x032CF730 LDR X10, [X8 + 0xC8]
	0x032CF734 ADD X9, X10, X9, 0x3, LSL
	0x032CF738 LDUR X9, [X9 - 0x8]
	0x032CF73C CMP X9, X1
	0x032CF740 B.NE 0x32CF868
	0x032CF744 LDR X9, [X8 + 0x398]
	0x032CF748 LDR X1, [X8 + 0x3A0]
	0x032CF74C BLR X9
	0x032CF750 CBZ X0, 0x32CF848
	0x032CF754 LDRSW X8, [X19 + 0x38]
	0x032CF758 B 0x32CF7B0
	0x032CF75C LDR X0, [X19 + 0x28]
	0x032CF760 CBZ X0, 0x32CF844
	0x032CF764 ADRP X9, 0xE4D000
	0x032CF768 LDR X9, [X9 + 0x3F0]
	0x032CF76C LDR X8, [X0]
	0x032CF770 LDR X1, [X9]
	0x032CF774 LDRB W10, [X8 + 0x130]
	0x032CF778 LDRB W9, [X1 + 0x130]
	0x032CF77C CMP W10, W9
	0x032CF780 B.CC 0x32CF868
	0x032CF784 LDR X10, [X8 + 0xC8]
	0x032CF788 ADD X9, X10, X9, 0x3, LSL
	0x032CF78C LDUR X9, [X9 - 0x8]
	0x032CF790 CMP X9, X1
	0x032CF794 B.NE 0x32CF868
	0x032CF798 LDR X9, [X8 + 0x258]
	0x032CF79C LDR X1, [X8 + 0x260]
	0x032CF7A0 BLR X9
	0x032CF7A4 CBZ X0, 0x32CF848
	0x032CF7A8 LDR W8, [X19 + 0x38]
	0x032CF7AC TBNZ X8, 0x1F, 0x32CF848
	0x032CF7B0 LDR W9, [X0 + 0x18]
	0x032CF7B4 CMP W8, W9
	0x032CF7B8 B.GE 0x32CF848
	0x032CF7BC CMP W8, W9
	0x032CF7C0 B.CS 0x32CF88C
	0x032CF7C4 ADD X8, X0, X8, 0x3, LSL
	0x032CF7C8 LDR X0, [X8 + 0x20]
	0x032CF7CC LDP X20, X19, [X31 + 0x10]
	0x032CF7D0 LDR X30, [X31], #0x20
	0x032CF7D4 RET
	0x032CF7D8 LDR X0, [X19 + 0x28]
	0x032CF7DC CBZ X0, 0x32CF844
	0x032CF7E0 LDR X8, [X0]
	0x032CF7E4 LDP X9, X1, [X8 + 0x198]
	0x032CF7E8 BLR X9
	0x032CF7EC CMP W0, 0x8
	0x032CF7F0 B.NE 0x32CF848
	0x032CF7F4 LDR X0, [X19 + 0x28]
	0x032CF7F8 CBZ X0, 0x32CF844
	0x032CF7FC ADRP X9, 0xE55000
	0x032CF800 LDR X9, [X9 + 0x278]
	0x032CF804 LDR X8, [X0]
	0x032CF808 LDR X1, [X9]
	0x032CF80C LDRB W10, [X8 + 0x130]
	0x032CF810 LDRB W9, [X1 + 0x130]
	0x032CF814 CMP W10, W9
	0x032CF818 B.CC 0x32CF868
	0x032CF81C LDR X10, [X8 + 0xC8]
	0x032CF820 ADD X9, X10, X9, 0x3, LSL
	0x032CF824 LDUR X9, [X9 - 0x8]
	0x032CF828 CMP X9, X1
	0x032CF82C B.NE 0x32CF868
	0x032CF830 LDR X2, [X8 + 0x3A8]
	0x032CF834 LDR X1, [X8 + 0x3B0]
	0x032CF838 LDP X20, X19, [X31 + 0x10]
	0x032CF83C LDR X30, [X31], #0x20
	0x032CF840 BR X2
	0x032CF844 BL 0x1C16F20
	0x032CF848 ADRP X0, 0xE4E000
	0x032CF84C LDR X0, [X0 + 0x2E0]
	0x032CF850 BL 0x1C16D08
	0x032CF854 BL 0x1C16F10
	0x032CF858 MOV X19, X0
	0x032CF85C ADRP X0, 0xE56000
	0x032CF860 LDR X0, [X0 + 0xE28]
	0x032CF864 B 0x32CF8AC
	0x032CF868 BL 0x1C171E0
	0x032CF86C ADRP X0, 0xE4E000
	0x032CF870 LDR X0, [X0 + 0x2E0]
	0x032CF874 BL 0x1C16D08
	0x032CF878 BL 0x1C16F10
	0x032CF87C MOV X19, X0
	0x032CF880 ADRP X0, 0xE56000
	0x032CF884 LDR X0, [X0 + 0xE30]
	0x032CF888 B 0x32CF8AC
	0x032CF88C BL 0x1C16F28
	0x032CF890 ADRP X0, 0xE4E000
	0x032CF894 LDR X0, [X0 + 0x2E0]
	0x032CF898 BL 0x1C16D08
	0x032CF89C BL 0x1C16F10
	0x032CF8A0 MOV X19, X0
	0x032CF8A4 ADRP X0, 0xE56000
	0x032CF8A8 LDR X0, [X0 + 0xE38]
	0x032CF8AC BL 0x1C16D08
	0x032CF8B0 MOV X1, X0
	0x032CF8B4 MOV X0, X19

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0x110E000
	014 Move X23, 0xE25000
	015 Move W8, [X22+2288]
	016 Move X23, [X23+2288]
	017 Move W20, W2
	018 Move W19, W1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {44}
	024 Move X0, 0xE2E000
	025 Move X0, [X0+2264]
	026 Call 0x1C17CF4
	027 Move X0, 0xE25000
	028 Move X0, [X0+2288]
	029 Call 0x1C17CF4
	030 Move X0, 0xE25000
	031 Move X0, [X0+2104]
	032 Call 0x1C17CF4
	033 Move X0, 0xE57000
	034 Move X0, [X0+3392]
	035 Call 0x1C17CF4
	036 Move X0, 0xE25000
	037 Move X0, [X0+2440]
	038 Call 0x1C17CF4
	039 Move X0, 0xE50000
	040 Move X0, [X0+1528]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X22+2288], W8
	044 Move X0, [X23]
	045 Call 0x1C17F10
	046 Move X1, X31
	047 Move X22, X0
	048 Call StringBuilder..ctor, X0
	049 Compare X21, 0
	050 JumpIfEqual {154}
	051 Move X9, 0xE25000
	052 Move W8, [X21+24]
	053 Move X9, [X9+2440]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X1, [X9]
	056 Move X26, 0xE25000
	057 Move X27, 0xE2E000
	058 Move X28, 0xE57000
	059 Move X26, [X26+2104]
	060 Move X27, [X27+2264]
	061 Move X28, [X28+3392]
	062 Move W25, W31
	063 Move W29, 38
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Compare X22, 0
	066 JumpIfEqual {154}
	067 Add X8, X21, W25
	068 Move X24, [X8+32]
	069 Move X0, X22
	070 Move X2, X31
	071 Call StringBuilder.Append, X0, X1
	072 Compare X24, 0
	073 JumpIfEqual {154}
	074 Move X8, [X24]
	075 And W1, W20, 1
	076 Move X0, X24
	077 Move X9, [X8+2328]
	078 Move X2, [X8+2336]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X23, X0
	081 Move X0, X24
	082 Move X1, X31
	083 Call Type.get_IsByRef, X0
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {112}
	088 Move TEMP, X20
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {112}
	092 Move X0, [X27]
	093 Move W1, 1
	094 Call 0x1C17D6C
	095 Compare X0, 0
	096 JumpIfEqual {154}
	097 Move W8, [X0+24]
	098 Move X1, X0
	099 Compare W8, 0
	100 JumpIfEqual {155}
	101 NotImplemented "Instruction STRH not yet implemented."
	102 Compare X23, 0
	103 JumpIfEqual {154}
	104 Move X0, X23
	105 Move X2, X31
	106 Call String.TrimEnd, X0, X1
	107 Move X1, X0
	108 Move X0, X22
	109 Move X2, X31
	110 Call StringBuilder.Append, X0, X1
	111 Move X23, [X28]
	112 Move X0, X22
	113 Move X1, X23
	114 Move X2, X31
	115 Call StringBuilder.Append, X0, X1
	116 Move W8, [X21+24]
	117 Move X1, [X26]
	118 Add W25, W25, 1
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move TEMP, X19
	121 And TEMP, TEMP, 2
	122 Compare TEMP, 2
	123 JumpIfEqual {126}
	124 Compare X22, 0
	125 JumpIfNotEqual {137}
	126 Compare X22, 0
	127 JumpIfEqual {154}
	128 Move X0, X22
	129 Move X2, X31
	130 Call StringBuilder.Append, X0, X1
	131 Move X8, 0xE50000
	132 Move X8, [X8+1528]
	133 Move X0, X22
	134 Move X2, X31
	135 Move X1, [X8]
	136 Call StringBuilder.Append, X0, X1
	137 Move X8, [X22]
	138 Move X0, X22
	139 Move X20, [X31+80]
	140 Move X19, [X31+88]
	141 Move X22, [X31+64]
	142 Move X21, [X31+72]
	143 Move X2, [X8+360]
	144 Move X1, [X8+368]
	145 Move X24, [X31+48]
	146 Move X23, [X31+56]
	147 Move X26, [X31+32]
	148 Move X25, [X31+40]
	149 Move X28, [X31+16]
	150 Move X27, [X31+24]
	151 Move X29, [X31+96]
	152 Move X30, [X31+104]
	153 CallNoReturn X2
	154 Call 0x1C17F20
	155 Call 0x1C17F28

