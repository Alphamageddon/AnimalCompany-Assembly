Type: System.Reflection.SignatureHasElementType

Method: System.Void .ctor(System.Reflection.SignatureType elementType)

Disassembly:
	0x032D1000 ADRP X0, 0xE54000
	0x032D1004 LDR X0, [X0 + 0xF68]
	0x032D1008 BL 0x1C16D08
	0x032D100C MOV X1, X0
	0x032D1010 MOV X0, X19
	0x032D1014 BL 0x1C16DEC
	0x032D1018 STP X30, X19, [X31 - 0x10]!
	0x032D101C ADRP X0, 0xE22000
	0x032D1020 LDR X0, [X0 + 0xB40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X20, X0
	006 Call SignatureType..ctor, X0
	007 Move [X20+24], X19
	008 Move X20, [X31+16]
	009 Move X19, [X31+24]
	010 Move X30, [X31+32]
	011 Return 

Method: System.Boolean get_IsGenericTypeDefinition()

Disassembly:
	0x032D174C MOV X19, X0
	0x032D1750 ADRP X0, 0xE54000

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean HasElementTypeImpl()

Disassembly:
	0x032D1754 LDR X0, [X0 + 0xF18]
	0x032D1758 BL 0x1C16D08

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean IsArrayImpl()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean IsByRefImpl()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean IsPointerImpl()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean get_IsSZArray()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean get_IsVariableBoundArray()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean get_IsConstructedGenericType()

Disassembly:
	0x032D175C MOV X1, X0
	0x032D1760 MOV X0, X19

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_IsGenericParameter()

Disassembly:
	0x032D1764 MOV X2, X31
	0x032D1768 BL 0x3379A44

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_IsGenericMethodParameter()

Disassembly:
	0x032D176C ADRP X0, 0xE55000
	0x032D1770 LDR X0, [X0 + 0x30]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_ContainsGenericParameters()

Disassembly:
	0x032D1774 BL 0x1C16D08
	0x032D1778 MOV X1, X0
	0x032D177C MOV X0, X19
	0x032D1780 BL 0x1C16DEC
	0x032D1784 STP X30, X19, [X31 - 0x10]!
	0x032D1788 ADRP X0, 0xE22000
	0x032D178C LDR X0, [X0 + 0xB40]
	0x032D1790 BL 0x1C16D08
	0x032D1794 BL 0x1C16F10

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+648]
	007 Move X1, [X8+656]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Reflection.SignatureType get_ElementType()

Disassembly:
	0x032D1798 MOV X19, X0
	0x032D179C ADRP X0, 0xE54000

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Int32 GetArrayRank()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Type GetGenericTypeDefinition()

Disassembly:
	0x032D17A0 LDR X0, [X0 + 0xF18]
	0x032D17A4 BL 0x1C16D08
	0x032D17A8 MOV X1, X0
	0x032D17AC MOV X0, X19
	0x032D17B0 MOV X2, X31
	0x032D17B4 BL 0x3379A44
	0x032D17B8 ADRP X0, 0xE55000
	0x032D17BC LDR X0, [X0 + 0x38]
	0x032D17C0 BL 0x1C16D08
	0x032D17C4 MOV X1, X0
	0x032D17C8 MOV X0, X19
	0x032D17CC BL 0x1C16DEC
	0x032D17D0 STP X30, X19, [X31 - 0x10]!
	0x032D17D4 ADRP X0, 0xE22000
	0x032D17D8 LDR X0, [X0 + 0xB40]
	0x032D17DC BL 0x1C16D08
	0x032D17E0 BL 0x1C16F10
	0x032D17E4 MOV X19, X0
	0x032D17E8 ADRP X0, 0xE54000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xE23000
	004 Move X0, [X0+1456]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xE55000
	009 Move X0, [X0+3792]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call InvalidOperationException..ctor, X0, X1
	015 Move X0, 0xE55000
	016 Move X0, [X0+3800]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Type[] GetGenericArguments()

Disassembly:
	0x032D17EC LDR X0, [X0 + 0xF18]
	0x032D17F0 BL 0x1C16D08
	0x032D17F4 MOV X1, X0
	0x032D17F8 MOV X0, X19
	0x032D17FC MOV X2, X31
	0x032D1800 BL 0x3379A44
	0x032D1804 ADRP X0, 0xE55000
	0x032D1808 LDR X0, [X0 + 0x40]
	0x032D180C BL 0x1C16D08
	0x032D1810 MOV X1, X0
	0x032D1814 MOV X0, X19
	0x032D1818 BL 0x1C16DEC
	0x032D181C STP X30, X19, [X31 - 0x10]!
	0x032D1820 ADRP X0, 0xE22000
	0x032D1824 LDR X0, [X0 + 0xB40]
	0x032D1828 BL 0x1C16D08
	0x032D182C BL 0x1C16F10
	0x032D1830 MOV X19, X0
	0x032D1834 ADRP X0, 0xE54000
	0x032D1838 LDR X0, [X0 + 0xF18]
	0x032D183C BL 0x1C16D08
	0x032D1840 MOV X1, X0
	0x032D1844 MOV X0, X19
	0x032D1848 MOV X2, X31
	0x032D184C BL 0x3379A44
	0x032D1850 ADRP X0, 0xE55000
	0x032D1854 LDR X0, [X0 + 0x48]
	0x032D1858 BL 0x1C16D08
	0x032D185C MOV X1, X0
	0x032D1860 MOV X0, X19
	0x032D1864 BL 0x1C16DEC
	0x032D1868 STP X30, X19, [X31 - 0x10]!
	0x032D186C ADRP X0, 0xE22000
	0x032D1870 LDR X0, [X0 + 0xB40]
	0x032D1874 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x110C000
	005 Move X20, 0xE4D000
	006 Move W8, [X19+2307]
	007 Move X20, [X20+2416]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE4D000
	013 Move X0, [X0+2416]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2307], W8
	017 Move X19, [X20]
	018 Move X8, [X19+56]
	019 Compare X8, 0
	020 JumpIfNotEqual {24}
	021 Move X0, X19
	022 Call 0x1C5D6E0
	023 Move X8, [X19+56]
	024 Move X0, [X8+16]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X8, [X19+56]
	036 Move X0, [X8+16]
	037 Move W8, [X0+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {43}
	042 Call 0x1C5D684
	043 Move X8, [X0+184]
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X0, [X8]
	047 Move X30, [X31+32]
	048 Return X0

Method: System.Type[] get_GenericTypeArguments()

Disassembly:
	0x032D1878 BL 0x1C16F10
	0x032D187C MOV X19, X0
	0x032D1880 ADRP X0, 0xE54000
	0x032D1884 LDR X0, [X0 + 0xF18]
	0x032D1888 BL 0x1C16D08
	0x032D188C MOV X1, X0
	0x032D1890 MOV X0, X19
	0x032D1894 MOV X2, X31
	0x032D1898 BL 0x3379A44
	0x032D189C ADRP X0, 0xE55000
	0x032D18A0 LDR X0, [X0 + 0x50]
	0x032D18A4 BL 0x1C16D08
	0x032D18A8 MOV X1, X0
	0x032D18AC MOV X0, X19
	0x032D18B0 BL 0x1C16DEC
	0x032D18B4 STP X30, X19, [X31 - 0x10]!
	0x032D18B8 ADRP X0, 0xE22000
	0x032D18BC LDR X0, [X0 + 0xB40]
	0x032D18C0 BL 0x1C16D08
	0x032D18C4 BL 0x1C16F10
	0x032D18C8 MOV X19, X0
	0x032D18CC ADRP X0, 0xE54000
	0x032D18D0 LDR X0, [X0 + 0xF18]
	0x032D18D4 BL 0x1C16D08
	0x032D18D8 MOV X1, X0
	0x032D18DC MOV X0, X19
	0x032D18E0 MOV X2, X31
	0x032D18E4 BL 0x3379A44
	0x032D18E8 ADRP X0, 0xE55000
	0x032D18EC LDR X0, [X0 + 0x58]
	0x032D18F0 BL 0x1C16D08
	0x032D18F4 MOV X1, X0
	0x032D18F8 MOV X0, X19
	0x032D18FC BL 0x1C16DEC
	0x032D1900 STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x110C000
	005 Move X20, 0xE4D000
	006 Move W8, [X19+2308]
	007 Move X20, [X20+2416]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE4D000
	013 Move X0, [X0+2416]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2308], W8
	017 Move X19, [X20]
	018 Move X8, [X19+56]
	019 Compare X8, 0
	020 JumpIfNotEqual {24}
	021 Move X0, X19
	022 Call 0x1C5D6E0
	023 Move X8, [X19+56]
	024 Move X0, [X8+16]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X8, [X19+56]
	036 Move X0, [X8+16]
	037 Move W8, [X0+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {43}
	042 Call 0x1C5D684
	043 Move X8, [X0+184]
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X0, [X8]
	047 Move X30, [X31+32]
	048 Return X0

Method: System.Int32 get_GenericParameterPosition()

Disassembly:
	0x032D1904 ADRP X0, 0xE22000
	0x032D1908 LDR X0, [X0 + 0xB40]
	0x032D190C BL 0x1C16D08
	0x032D1910 BL 0x1C16F10
	0x032D1914 MOV X19, X0
	0x032D1918 ADRP X0, 0xE54000
	0x032D191C LDR X0, [X0 + 0xF18]
	0x032D1920 BL 0x1C16D08
	0x032D1924 MOV X1, X0
	0x032D1928 MOV X0, X19
	0x032D192C MOV X2, X31
	0x032D1930 BL 0x3379A44
	0x032D1934 ADRP X0, 0xE55000
	0x032D1938 LDR X0, [X0 + 0x60]
	0x032D193C BL 0x1C16D08
	0x032D1940 MOV X1, X0
	0x032D1944 MOV X0, X19
	0x032D1948 BL 0x1C16DEC
	0x032D194C STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xE23000
	004 Move X0, [X0+1456]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xE55000
	009 Move X0, [X0+3776]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call InvalidOperationException..ctor, X0, X1
	015 Move X0, 0xE55000
	016 Move X0, [X0+3808]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.String get_Name()

Disassembly:
	0x032D1950 ADRP X0, 0xE22000
	0x032D1954 LDR X0, [X0 + 0xB40]
	0x032D1958 BL 0x1C16D08
	0x032D195C BL 0x1C16F10
	0x032D1960 MOV X19, X0
	0x032D1964 ADRP X0, 0xE54000
	0x032D1968 LDR X0, [X0 + 0xF18]
	0x032D196C BL 0x1C16D08
	0x032D1970 MOV X1, X0
	0x032D1974 MOV X0, X19
	0x032D1978 MOV X2, X31
	0x032D197C BL 0x3379A44
	0x032D1980 ADRP X0, 0xE55000
	0x032D1984 LDR X0, [X0 + 0x68]
	0x032D1988 BL 0x1C16D08
	0x032D198C MOV X1, X0
	0x032D1990 MOV X0, X19
	0x032D1994 BL 0x1C16DEC
	0x032D1998 STP X30, X19, [X31 - 0x10]!
	0x032D199C ADRP X0, 0xE22000
	0x032D19A0 LDR X0, [X0 + 0xB40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+24]
	006 Compare X0, 0
	007 JumpIfEqual {26}
	008 Move X8, [X0]
	009 Move X9, [X8+424]
	010 Move X1, [X8+432]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Move X8, [X19]
	013 Move X20, X0
	014 Move X0, X19
	015 Move X9, [X8+2392]
	016 Move X1, [X8+2400]
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Move X1, X0
	019 Move X0, X20
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X2, X31
	023 Move X30, [X31+32]
	024 Call String.Concat, X0, X1
	025 Return X0
	026 Call 0x1C17F20

Method: System.String get_Namespace()

Disassembly:
	0x032D19A4 BL 0x1C16D08
	0x032D19A8 BL 0x1C16F10
	0x032D19AC MOV X19, X0
	0x032D19B0 ADRP X0, 0xE54000
	0x032D19B4 LDR X0, [X0 + 0xF18]
	0x032D19B8 BL 0x1C16D08
	0x032D19BC MOV X1, X0
	0x032D19C0 MOV X0, X19
	0x032D19C4 MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+712]
	007 Move X1, [X8+720]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x032D19C8 BL 0x3379A44
	0x032D19CC ADRP X0, 0xE55000
	0x032D19D0 LDR X0, [X0 + 0x70]
	0x032D19D4 BL 0x1C16D08
	0x032D19D8 MOV X1, X0
	0x032D19DC MOV X0, X19
	0x032D19E0 BL 0x1C16DEC
	0x032D19E4 STP X30, X19, [X31 - 0x10]!
	0x032D19E8 ADRP X0, 0xE22000
	0x032D19EC LDR X0, [X0 + 0xB40]
	0x032D19F0 BL 0x1C16D08
	0x032D19F4 BL 0x1C16F10
	0x032D19F8 MOV X19, X0
	0x032D19FC ADRP X0, 0xE54000
	0x032D1A00 LDR X0, [X0 + 0xF18]
	0x032D1A04 BL 0x1C16D08
	0x032D1A08 MOV X1, X0
	0x032D1A0C MOV X0, X19
	0x032D1A10 MOV X2, X31
	0x032D1A14 BL 0x3379A44
	0x032D1A18 ADRP X0, 0xE55000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+24]
	006 Compare X0, 0
	007 JumpIfEqual {26}
	008 Move X8, [X0]
	009 Move X9, [X8+360]
	010 Move X1, [X8+368]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Move X8, [X19]
	013 Move X20, X0
	014 Move X0, X19
	015 Move X9, [X8+2392]
	016 Move X1, [X8+2400]
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Move X1, X0
	019 Move X0, X20
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X2, X31
	023 Move X30, [X31+32]
	024 Call String.Concat, X0, X1
	025 Return X0
	026 Call 0x1C17F20

Method: System.String get_Suffix()

Disassembly:
	

ISIL:
No ISIL was generated
