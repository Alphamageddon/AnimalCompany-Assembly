Type: System.Reflection.RuntimePropertyInfo

Method: System.Void get_property_info(System.Reflection.RuntimePropertyInfo prop, ref System.Reflection.MonoPropertyInfo info, System.Reflection.PInfo req_info)

Disassembly:
	0x032DF1E8 LDR X0, [X0 + 0x728]

ISIL:
	001 Call 0x1C9543C
	002 Return 

Method: System.Reflection.BindingFlags get_BindingFlags()

Disassembly:
	0x032DF1EC BL 0x1C16CF4
	0x032DF1F0 ADRP X0, 0xE47000

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Reflection.Module get_Module()

Disassembly:
	0x032DF1F4 LDR X0, [X0 + 0x730]

ISIL:
No ISIL was generated
Method: System.RuntimeType GetDeclaringTypeInternal()

Disassembly:
	0x032DF214 LDR X21, [X23]
	0x032DF218 LDR W8, [X0 + 0xE0]
	0x032DF21C CBNZ W8, 0x32DF224
	0x032DF220 BL 0x1C16DFC
	0x032DF224 MOV X0, X21
	0x032DF228 MOV X1, X31
	0x032DF22C BL 0x338C698
	0x032DF230 CBZ X20, 0x32DF350
	0x032DF234 ADRP X8, 0xE47000
	0x032DF238 LDR X8, [X8 + 0x728]
	0x032DF23C ADRP X24, 0xE14000
	0x032DF240 MOV X2, X0
	0x032DF244 MOV X0, X20
	0x032DF248 LDR X1, [X8]
	0x032DF24C LDR X24, [X24 + 0x618]
	0x032DF250 MOV X3, X31
	0x032DF254 BL 0x32A9678
	0x032DF258 CBZ X0, 0x32DF294
	0x032DF25C LDR X22, [X24]
	0x032DF260 MOV X21, X0
	0x032DF264 MOV X1, X22
	0x032DF268 BL 0x1C16E00
	0x032DF26C CBZ X0, 0x32DF288
	0x032DF270 STR X0, [X19 + 0x10]
	0x032DF274 LDR X22, [X24]
	0x032DF278 MOV X0, X21
	0x032DF27C MOV X1, X22
	0x032DF280 BL 0x1C16E00
	0x032DF284 CBNZ X0, 0x32DF298
	0x032DF288 MOV X0, X21
	0x032DF28C MOV X1, X22
	0x032DF290 BL 0x1C171E0
	0x032DF294 STR X31, [X19 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10FE000
	005 Move W8, [X20+2432]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE3E000
	012 Move X0, [X0+1256]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2432], W8
	016 Move X8, [X19]
	017 Move X0, X19
	018 Move X9, [X8+440]
	019 Move X1, [X8+448]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Compare X0, 0
	022 JumpIfEqual {34}
	023 Move X9, 0xE3E000
	024 Move X9, [X9+1256]
	025 Move X8, [X0]
	026 Move X1, [X9]
	027 Move W10, [X8+304]
	028 Move W9, [X1+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X8+200]
	031 Add X8, X8, X9
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return X0
	038 Call 0x1C181E0

Method: System.RuntimeType get_ReflectedTypeInternal()

Disassembly:
	0x032DF298 ADRP X8, 0xE47000
	0x032DF29C LDR X8, [X8 + 0x730]
	0x032DF2A0 ADRP X21, 0xE47000
	0x032DF2A4 ADRP X22, 0xE47000
	0x032DF2A8 MOV X0, X20
	0x032DF2AC LDR X1, [X8]
	0x032DF2B0 LDR X21, [X21 + 0x720]
	0x032DF2B4 LDR X22, [X22 + 0x718]
	0x032DF2B8 MOV X2, X31
	0x032DF2BC BL 0x32A9F64
	0x032DF2C0 STR X0, [X19 + 0x18]
	0x032DF2C4 LDR X1, [X21]
	0x032DF2C8 MOV X0, X20
	0x032DF2CC MOV X2, X31
	0x032DF2D0 BL 0x32A9988
	0x032DF2D4 AND W8, W0, 0x1
	0x032DF2D8 STRB W8, [X19 + 0x20]
	0x032DF2DC LDR X0, [X23]
	0x032DF2E0 MOV X1, X31
	0x032DF2E4 BL 0x338C698
	0x032DF2E8 LDR X1, [X22]
	0x032DF2EC MOV X2, X0
	0x032DF2F0 MOV X0, X20
	0x032DF2F4 MOV X3, X31
	0x032DF2F8 BL 0x32A9678
	0x032DF2FC CBZ X0, 0x32DF338
	0x032DF300 LDR X21, [X24]
	0x032DF304 MOV X20, X0
	0x032DF308 MOV X1, X21
	0x032DF30C BL 0x1C16E00
	0x032DF310 CBZ X0, 0x32DF354
	0x032DF314 STR X0, [X19 + 0x28]
	0x032DF318 LDR X19, [X24]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10FE000
	005 Move W8, [X20+2433]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xE3E000
	012 Move X0, [X0+1256]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2433], W8
	016 Move X8, [X19]
	017 Move X0, X19
	018 Move X9, [X8+456]
	019 Move X1, [X8+464]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Compare X0, 0
	022 JumpIfEqual {34}
	023 Move X9, 0xE3E000
	024 Move X9, [X9+1256]
	025 Move X8, [X0]
	026 Move X1, [X9]
	027 Move W10, [X8+304]
	028 Move W9, [X1+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X8+200]
	031 Add X8, X8, X9
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return X0
	038 Call 0x1C181E0

Method: System.Reflection.RuntimeModule GetRuntimeModule()

Disassembly:
	0x032DF1F8 BL 0x1C16CF4
	0x032DF1FC MOVZ W8, 0x1
	0x032DF200 STRB W8, [X22 + 0x988]
	0x032DF204 MOV X0, X19
	0x032DF208 MOV X1, X31
	0x032DF20C BL 0x33BDD8C
	0x032DF210 LDR X0, [X21]

ISIL:
	001 Move [X31-16], X30
	002 Call RuntimePropertyInfo.GetDeclaringTypeInternal, X0
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call RuntimeType.GetRuntimeModule, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x032DF31C MOV X0, X20
	0x032DF320 MOV X1, X19

ISIL:
	001 Move W1, W31

Method: System.String FormatNameAndSig(System.Boolean serialization)

Disassembly:
	0x032DF324 BL 0x1C16E00
	0x032DF328 CBNZ X0, 0x32DF33C
	0x032DF32C MOV X0, X20
	0x032DF330 MOV X1, X19
	0x032DF334 BL 0x1C171E0
	0x032DF338 STR X31, [X19 + 0x28]
	0x032DF33C LDP X20, X19, [X31 + 0x30]
	0x032DF340 LDP X22, X21, [X31 + 0x20]
	0x032DF344 LDP X24, X23, [X31 + 0x10]
	0x032DF348 LDR X30, [X31], #0x40
	0x032DF34C RET
	0x032DF350 BL 0x1C16F20
	0x032DF354 MOV X0, X20
	0x032DF358 MOV X1, X21
	0x032DF35C BL 0x1C171E0
	0x032DF360 STP X30, X25, [X31 - 0x40]!
	0x032DF364 STP X24, X23, [X31 + 0x10]
	0x032DF368 STP X22, X21, [X31 + 0x20]
	0x032DF36C STP X20, X19, [X31 + 0x30]
	0x032DF370 ADRP X22, 0x10FD000
	0x032DF374 ADRP X23, 0xE46000
	0x032DF378 ADRP X21, 0xE14000
	0x032DF37C LDRB W8, [X22 + 0x989]
	0x032DF380 LDR X23, [X23 + 0x118]
	0x032DF384 LDR X21, [X21 + 0x6C0]
	0x032DF388 MOV X19, X1
	0x032DF38C MOV X20, X0
	0x032DF390 TBNZ X8, 0x0, 0x32DF3E4
	0x032DF394 ADRP X0, 0xE46000
	0x032DF398 LDR X0, [X0 + 0x118]
	0x032DF39C BL 0x1C16CF4
	0x032DF3A0 ADRP X0, 0xE14000
	0x032DF3A4 LDR X0, [X0 + 0x6C0]
	0x032DF3A8 BL 0x1C16CF4
	0x032DF3AC ADRP X0, 0xE47000
	0x032DF3B0 LDR X0, [X0 + 0x718]
	0x032DF3B4 BL 0x1C16CF4
	0x032DF3B8 ADRP X0, 0xE47000
	0x032DF3BC LDR X0, [X0 + 0x720]
	0x032DF3C0 BL 0x1C16CF4
	0x032DF3C4 ADRP X0, 0xE47000
	0x032DF3C8 LDR X0, [X0 + 0x728]
	0x032DF3CC BL 0x1C16CF4
	0x032DF3D0 ADRP X0, 0xE47000
	0x032DF3D4 LDR X0, [X0 + 0x730]
	0x032DF3D8 BL 0x1C16CF4
	0x032DF3DC MOVZ W8, 0x1
	0x032DF3E0 STRB W8, [X22 + 0x989]
	0x032DF3E4 LDR X0, [X21]
	0x032DF3E8 LDR X21, [X20 + 0x10]
	0x032DF3EC LDR X22, [X23]
	0x032DF3F0 LDR W8, [X0 + 0xE0]
	0x032DF3F4 CBNZ W8, 0x32DF3FC
	0x032DF3F8 BL 0x1C16DFC
	0x032DF3FC MOV X0, X22
	0x032DF400 MOV X1, X31
	0x032DF404 BL 0x338C698
	0x032DF408 CBZ X19, 0x32DF4A4
	0x032DF40C ADRP X8, 0xE47000
	0x032DF410 LDR X8, [X8 + 0x728]
	0x032DF414 ADRP X22, 0xE47000
	0x032DF418 ADRP X24, 0xE47000
	0x032DF41C ADRP X25, 0xE47000
	0x032DF420 LDR X1, [X8]
	0x032DF424 LDR X22, [X22 + 0x730]
	0x032DF428 LDR X24, [X24 + 0x720]
	0x032DF42C LDR X25, [X25 + 0x718]
	0x032DF430 MOV X3, X0
	0x032DF434 MOV X0, X19
	0x032DF438 MOV X2, X21
	0x032DF43C MOV X4, X31
	0x032DF440 BL 0x32A89BC
	0x032DF444 LDR X2, [X20 + 0x18]
	0x032DF448 LDR X1, [X22]
	0x032DF44C MOV X0, X19
	0x032DF450 MOV X3, X31
	0x032DF454 BL 0x32A8BF0
	0x032DF458 LDRB W2, [X20 + 0x20]
	0x032DF45C LDR X1, [X24]
	0x032DF460 MOV X0, X19
	0x032DF464 MOV X3, X31
	0x032DF468 BL 0x32A8CA8
	0x032DF46C LDR X0, [X23]
	0x032DF470 LDR X20, [X20 + 0x28]
	0x032DF474 MOV X1, X31
	0x032DF478 BL 0x338C698
	0x032DF47C LDR X1, [X25]
	0x032DF480 MOV X3, X0
	0x032DF484 MOV X0, X19
	0x032DF488 MOV X2, X20
	0x032DF48C LDP X20, X19, [X31 + 0x30]
	0x032DF490 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10FE000
	007 Move W8, [X21+2434]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xE15000
	015 Move X0, [X0+2288]
	016 Call 0x1C17CF4
	017 Move X0, 0xE15000
	018 Move X0, [X0+3544]
	019 Call 0x1C17CF4
	020 Move X0, 0xE48000
	021 Move X0, [X0+1744]
	022 Call 0x1C17CF4
	023 Move X0, 0xE15000
	024 Move X0, [X0+2120]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2434], W8
	028 Move X8, [X20]
	029 Move X0, X20
	030 Move X9, [X8+584]
	031 Move X1, [X8+592]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Compare X0, 0
	034 JumpIfEqual {105}
	035 Move X8, [X0]
	036 Move X21, 0xE15000
	037 And W1, W19, 1
	038 Move X9, [X8+2328]
	039 Move X2, [X8+2336]
	040 Move X21, [X21+2288]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move X8, [X21]
	043 Move X22, X0
	044 Move X0, X8
	045 Call 0x1C17F10
	046 Move X1, X22
	047 Move X2, X31
	048 Move X21, X0
	049 Call StringBuilder..ctor, X0, X1
	050 Compare X21, 0
	051 JumpIfEqual {105}
	052 Move X8, 0xE15000
	053 Move X8, [X8+3544]
	054 Move X0, X21
	055 Move X2, X31
	056 Move X1, [X8]
	057 Call StringBuilder.Append, X0, X1
	058 Move X8, [X20]
	059 Move X0, X20
	060 Move X9, [X8+424]
	061 Move X1, [X8+432]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X1, X0
	064 Move X0, X21
	065 Move X2, X31
	066 Call StringBuilder.Append, X0, X1
	067 Move X8, [X20]
	068 Move X0, X20
	069 Move X9, [X8+600]
	070 Move X1, [X8+608]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Compare X0, 0
	073 JumpIfEqual {105}
	074 Move X8, [X0+24]
	075 Move X20, X0
	076 Compare X8, 0
	077 JumpIfEqual {95}
	078 Move X8, 0xE48000
	079 Move X8, [X8+1744]
	080 Move X22, 0xE15000
	081 Move X0, X21
	082 Move X2, X31
	083 Move X1, [X8]
	084 Move X22, [X22+2120]
	085 Call StringBuilder.Append, X0, X1
	086 And W3, W19, 1
	087 Move X0, X21
	088 Move X1, X20
	089 Move W2, W31
	090 Call RuntimeParameterInfo.FormatParameters, X0, X1, X2, X3
	091 Move X1, [X22]
	092 Move X0, X21
	093 Move X2, X31
	094 Call StringBuilder.Append, X0, X1
	095 Move X8, [X21]
	096 Move X0, X21
	097 Move X20, [X31+32]
	098 Move X19, [X31+40]
	099 Move X22, [X31+16]
	100 Move X21, [X31+24]
	101 Move X2, [X8+360]
	102 Move X1, [X8+368]
	103 Move X30, [X31+48]
	104 CallNoReturn X2
	105 Call 0x1C17F20

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x032DF494 LDP X24, X23, [X31 + 0x10]
	0x032DF498 MOV X4, X31
	0x032DF49C LDP X30, X25, [X31], #0x40
	0x032DF4A0 B 0x32A89BC
	0x032DF4A4 BL 0x1C16F20
	0x032DF4A8 RET
	0x032DF4AC STP X30, X19, [X31 - 0x10]!
	0x032DF4B0 ADRP X0, 0xE3F000
	0x032DF4B4 LDR X0, [X0 + 0xC50]
	0x032DF4B8 BL 0x1C16D08
	0x032DF4BC BL 0x1C16F10
	0x032DF4C0 MOV X1, X31
	0x032DF4C4 MOV X19, X0
	0x032DF4C8 BL 0x338E344
	0x032DF4CC ADRP X0, 0xE47000
	0x032DF4D0 LDR X0, [X0 + 0x738]
	0x032DF4D4 BL 0x1C16D08
	0x032DF4D8 MOV X1, X0
	0x032DF4DC MOV X0, X19
	0x032DF4E0 BL 0x1C16DEC
	0x032DF4E4 STP X30, X19, [X31 - 0x10]!
	0x032DF4E8 ADRP X0, 0xE3F000
	0x032DF4EC LDR X0, [X0 + 0xC50]
	0x032DF4F0 BL 0x1C16D08
	0x032DF4F4 BL 0x1C16F10
	0x032DF4F8 MOV X1, X31
	0x032DF4FC MOV X19, X0
	0x032DF500 BL 0x338E344
	0x032DF504 ADRP X0, 0xE47000
	0x032DF508 LDR X0, [X0 + 0x740]
	0x032DF50C BL 0x1C16D08
	0x032DF510 MOV X1, X0
	0x032DF514 MOV X0, X19
	0x032DF518 BL 0x1C16DEC
	0x032DF51C STP X30, X19, [X31 - 0x10]!
	0x032DF520 ADRP X0, 0xE3F000
	0x032DF524 LDR X0, [X0 + 0xC50]
	0x032DF528 BL 0x1C16D08
	0x032DF52C BL 0x1C16F10
	0x032DF530 MOV X1, X31
	0x032DF534 MOV X19, X0
	0x032DF538 BL 0x338E344
	0x032DF53C ADRP X0, 0xE47000
	0x032DF540 LDR X0, [X0 + 0x748]
	0x032DF544 BL 0x1C16D08
	0x032DF548 MOV X1, X0
	0x032DF54C MOV X0, X19
	0x032DF550 BL 0x1C16DEC
	0x032DF554 STP X30, X19, [X31 - 0x10]!
	0x032DF558 ADRP X0, 0xE3F000
	0x032DF55C LDR X0, [X0 + 0xC50]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X1, 0
	008 JumpIfEqual {44}
	009 Move X8, [X0]
	010 Move X19, X1
	011 Move X20, X0
	012 Move X9, [X8+424]
	013 Move X1, [X8+432]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move X21, X0
	016 Move X0, X20
	017 Call RuntimePropertyInfo.get_ReflectedTypeInternal, X0
	018 Move X8, [X20]
	019 Move X22, X0
	020 Move X0, X20
	021 Move X9, [X8+360]
	022 Move X1, [X8+368]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move X23, X0
	025 Move W1, 1
	026 Move X0, X20
	027 Call RuntimePropertyInfo.FormatNameAndSig, X0, X1
	028 Move X4, X0
	029 Move X0, X19
	030 Move X1, X21
	031 Move X2, X22
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move W5, 16
	037 Move X3, X23
	038 Move X6, X31
	039 Move X7, X31
	040 Move X30, [X31+48]
	041 Move X23, [X31+56]
	042 Call MemberInfoSerializationHolder.GetSerializationInfo, X0, X1, X2, X3, X4, X5, X6
	043 Return 
	044 Move X0, 0xE1A000
	045 Move X0, [X0+1320]
	046 Call 0x1C17D08
	047 Call 0x1C17F10
	048 Move X19, X0
	049 Move X0, 0xE3F000
	050 Move X0, [X0+728]
	051 Call 0x1C17D08
	052 Move X1, X0
	053 Move X0, X19
	054 Move X2, X31
	055 Call ArgumentNullException..ctor, X0, X1
	056 Move X0, 0xE48000
	057 Move X0, [X0+1752]
	058 Call 0x1C17D08
	059 Move X1, X0
	060 Move X0, X19
	061 Call 0x1C17DEC

Method: System.String SerializationToString()

Disassembly:
	0x032DF560 BL 0x1C16D08
	0x032DF564 BL 0x1C16F10

ISIL:
	001 Move W1, 1
	002 Call RuntimePropertyInfo.FormatNameAndSig, X0, X1
	003 Return X0

Method: System.Void CachePropertyInfo(System.Reflection.PInfo flags)

Disassembly:
	0x032DF568 MOV X1, X31
	0x032DF56C MOV X19, X0
	0x032DF570 BL 0x338E344
	0x032DF574 ADRP X0, 0xE47000
	0x032DF578 LDR X0, [X0 + 0x750]
	0x032DF57C BL 0x1C16D08
	0x032DF580 MOV X1, X0
	0x032DF584 MOV X0, X19
	0x032DF588 BL 0x1C16DEC
	0x032DF58C STP X30, X19, [X31 - 0x10]!
	0x032DF590 ADRP X0, 0xE3F000
	0x032DF594 LDR X0, [X0 + 0xC50]
	0x032DF598 BL 0x1C16D08
	0x032DF59C BL 0x1C16F10
	0x032DF5A0 MOV X1, X31
	0x032DF5A4 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+80]
	005 NotImplemented "Instruction BICS not yet implemented."
	006 Move W20, W1
	007 Add X1, X0, 32
	008 Move W2, W20
	009 Move X19, X0
	010 Call 0x1C9543C
	011 Move W8, [X19+80]
	012 Or W8, W8, W20
	013 Move [X19+80], W8
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Return 

Method: System.Boolean get_CanRead()

Disassembly:
	0x032DF5A8 BL 0x338E344
	0x032DF5AC ADRP X0, 0xE47000
	0x032DF5B0 LDR X0, [X0 + 0x758]
	0x032DF5B4 BL 0x1C16D08
	0x032DF5B8 MOV X1, X0
	0x032DF5BC MOV X0, X19
	0x032DF5C0 BL 0x1C16DEC
	0x032DF5C4 STP X30, X19, [X31 - 0x10]!
	0x032DF5C8 ADRP X0, 0xE3F000
	0x032DF5CC LDR X0, [X0 + 0xC50]
	0x032DF5D0 BL 0x1C16D08
	0x032DF5D4 BL 0x1C16F10
	0x032DF5D8 MOV X1, X31
	0x032DF5DC MOV X19, X0
	0x032DF5E0 BL 0x338E344
	0x032DF5E4 ADRP X0, 0xE47000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+80]
	004 Move X19, X0
	005 Move TEMP, X8
	006 And TEMP, TEMP, 2
	007 Compare TEMP, 2
	008 JumpIfEqual {16}
	009 Add X1, X19, 32
	010 Move W2, 2
	011 Move X0, X19
	012 Call 0x1C9543C
	013 Move W8, [X19+80]
	014 Or W8, W8, 2
	015 Move [X19+80], W8
	016 Move X0, [X19+56]
	017 Move X1, X31
	018 Move X2, X31
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Call MethodInfo.op_Inequality, X0, X1
	022 Return X0

Method: System.Boolean get_CanWrite()

Disassembly:
	0x032DF5E8 LDR X0, [X0 + 0x760]
	0x032DF5EC BL 0x1C16D08
	0x032DF5F0 MOV X1, X0
	0x032DF5F4 MOV X0, X19
	0x032DF5F8 BL 0x1C16DEC
	0x032DF5FC STP X30, X19, [X31 - 0x10]!
	0x032DF600 ADRP X0, 0xE3F000
	0x032DF604 LDR X0, [X0 + 0xC50]
	0x032DF608 BL 0x1C16D08
	0x032DF60C BL 0x1C16F10
	0x032DF610 MOV X1, X31
	0x032DF614 MOV X19, X0
	0x032DF618 BL 0x338E344
	0x032DF61C ADRP X0, 0xE47000
	0x032DF620 LDR X0, [X0 + 0x768]
	0x032DF624 BL 0x1C16D08

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+80]
	004 Move X19, X0
	005 Move TEMP, X8
	006 And TEMP, TEMP, 4
	007 Compare TEMP, 4
	008 JumpIfEqual {16}
	009 Add X1, X19, 32
	010 Move W2, 4
	011 Move X0, X19
	012 Call 0x1C9543C
	013 Move W8, [X19+80]
	014 Or W8, W8, 4
	015 Move [X19+80], W8
	016 Move X0, [X19+64]
	017 Move X1, X31
	018 Move X2, X31
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Call MethodInfo.op_Inequality, X0, X1
	022 Return X0

Method: System.Type get_PropertyType()

Disassembly:
	0x032DF628 MOV X1, X0
	0x032DF62C MOV X0, X19
	0x032DF630 BL 0x1C16DEC
	0x032DF634 STP X30, X19, [X31 - 0x10]!
	0x032DF638 ADRP X0, 0xE3F000
	0x032DF63C LDR X0, [X0 + 0xC50]
	0x032DF640 BL 0x1C16D08
	0x032DF644 BL 0x1C16F10
	0x032DF648 MOV X1, X31
	0x032DF64C MOV X19, X0
	0x032DF650 BL 0x338E344
	0x032DF654 ADRP X0, 0xE47000
	0x032DF658 LDR X0, [X0 + 0x770]
	0x032DF65C BL 0x1C16D08
	0x032DF660 MOV X1, X0
	0x032DF664 MOV X0, X19
	0x032DF668 BL 0x1C16DEC
	0x032DF66C STP X30, X19, [X31 - 0x10]!
	0x032DF670 ADRP X0, 0xE3F000
	0x032DF674 LDR X0, [X0 + 0xC50]
	0x032DF678 BL 0x1C16D08
	0x032DF67C BL 0x1C16F10
	0x032DF680 MOV X1, X31
	0x032DF684 MOV X19, X0
	0x032DF688 BL 0x338E344
	0x032DF68C ADRP X0, 0xE47000
	0x032DF690 LDR X0, [X0 + 0x778]
	0x032DF694 BL 0x1C16D08
	0x032DF698 MOV X1, X0
	0x032DF69C MOV X0, X19
	0x032DF6A0 BL 0x1C16DEC
	0x032DF6A4 STP X30, X19, [X31 - 0x10]!
	0x032DF6A8 ADRP X0, 0xE3F000
	0x032DF6AC LDR X0, [X0 + 0xC50]
	0x032DF6B0 BL 0x1C16D08
	0x032DF6B4 BL 0x1C16F10
	0x032DF6B8 MOV X1, X31
	0x032DF6BC MOV X19, X0
	0x032DF6C0 BL 0x338E344
	0x032DF6C4 ADRP X0, 0xE47000
	0x032DF6C8 LDR X0, [X0 + 0x780]
	0x032DF6CC BL 0x1C16D08
	0x032DF6D0 MOV X1, X0
	0x032DF6D4 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+80]
	004 Move X19, X0
	005 NotImplemented "Instruction ORN not yet implemented."
	006 And W31, W8, 6
	007 Add X1, X19, 32
	008 Move W2, 6
	009 Move X0, X19
	010 Call 0x1C9543C
	011 Move W8, [X19+80]
	012 Or W8, W8, 6
	013 Move [X19+80], W8
	014 Move X0, [X19+56]
	015 Move X1, X31
	016 Move X2, X31
	017 Call MethodInfo.op_Inequality, X0, X1
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {28}
	022 Move X0, [X19+56]
	023 Compare X0, 0
	024 JumpIfEqual {52}
	025 Move X8, [X0]
	026 Move X2, [X8+952]
	027 Move X1, [X8+960]
	028 Move X0, [X19+64]
	029 Compare X0, 0
	030 JumpIfEqual {52}
	031 Move X8, [X0]
	032 Move X9, [X8+856]
	033 Move X1, [X8+864]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Compare X0, 0
	036 JumpIfEqual {52}
	037 Move X8, [X0+24]
	038 Compare W8, 0
	039 JumpIfEqual {53}
	040 Move X9, INVALID
	041 Add X8, X9, X8
	042 Add X8, X0, X8
	043 Move X0, [X8+32]
	044 Compare X0, 0
	045 JumpIfEqual {52}
	046 Move X8, [X0]
	047 Move X2, [X8+472]
	048 Move X1, [X8+480]
	049 Move X30, [X31+16]
	050 Move X19, [X31+24]
	051 CallNoReturn X2
	052 Call 0x1C17F20
	053 Call 0x1C17F28

Method: System.Type get_ReflectedType()

Disassembly:
	0x032DF6D8 BL 0x1C16DEC
	0x032DF6DC STP X30, X19, [X31 - 0x10]!
	0x032DF6E0 ADRP X0, 0xE3F000
	0x032DF6E4 LDR X0, [X0 + 0xC50]
	0x032DF6E8 BL 0x1C16D08
	0x032DF6EC BL 0x1C16F10
	0x032DF6F0 MOV X1, X31
	0x032DF6F4 MOV X19, X0
	0x032DF6F8 BL 0x338E344
	0x032DF6FC ADRP X0, 0xE47000
	0x032DF700 LDR X0, [X0 + 0x788]
	0x032DF704 BL 0x1C16D08
	0x032DF708 MOV X1, X0
	0x032DF70C MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+80]
	004 Move X19, X0
	005 Move TEMP, X8
	006 And TEMP, TEMP, 8
	007 Compare TEMP, 8
	008 JumpIfEqual {16}
	009 Add X1, X19, 32
	010 Move W2, 8
	011 Move X0, X19
	012 Call 0x1C9543C
	013 Move W8, [X19+80]
	014 Or W8, W8, 8
	015 Move [X19+80], W8
	016 Move X0, [X19+32]
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return X0

Method: System.Type get_DeclaringType()

Disassembly:
	0x032DF710 BL 0x1C16DEC
	0x032DF714 STP X30, X19, [X31 - 0x10]!
	0x032DF718 ADRP X0, 0xE3F000
	0x032DF71C LDR X0, [X0 + 0xC50]
	0x032DF720 BL 0x1C16D08
	0x032DF724 BL 0x1C16F10
	0x032DF728 MOV X1, X31
	0x032DF72C MOV X19, X0
	0x032DF730 BL 0x338E344
	0x032DF734 ADRP X0, 0xE47000
	0x032DF738 LDR X0, [X0 + 0x790]
	0x032DF73C BL 0x1C16D08
	0x032DF740 MOV X1, X0
	0x032DF744 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+80]
	004 Move X19, X0
	005 Move TEMP, X8
	006 And TEMP, TEMP, 16
	007 Compare TEMP, 16
	008 JumpIfEqual {16}
	009 Add X1, X19, 32
	010 Move W2, 16
	011 Move X0, X19
	012 Call 0x1C9543C
	013 Move W8, [X19+80]
	014 Or W8, W8, 16
	015 Move [X19+80], W8
	016 Move X0, [X19+40]
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return X0

Method: System.String get_Name()

Disassembly:
	0x032DF748 BL 0x1C16DEC
	0x032DF74C STP X30, X19, [X31 - 0x10]!
	0x032DF750 ADRP X0, 0xE3F000
	0x032DF754 LDR X0, [X0 + 0xC50]
	0x032DF758 BL 0x1C16D08
	0x032DF75C BL 0x1C16F10
	0x032DF760 MOV X1, X31
	0x032DF764 MOV X19, X0
	0x032DF768 BL 0x338E344
	0x032DF76C ADRP X0, 0xE47000
	0x032DF770 LDR X0, [X0 + 0x798]
	0x032DF774 BL 0x1C16D08
	0x032DF778 MOV X1, X0
	0x032DF77C MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+80]
	004 Move X19, X0
	005 Move TEMP, X8
	006 And TEMP, TEMP, 32
	007 Compare TEMP, 32
	008 JumpIfEqual {16}
	009 Add X1, X19, 32
	010 Move W2, 32
	011 Move X0, X19
	012 Call 0x1C9543C
	013 Move W8, [X19+80]
	014 Or W8, W8, 32
	015 Move [X19+80], W8
	016 Move X0, [X19+48]
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return X0

Method: System.Reflection.MethodInfo GetGetMethod(System.Boolean nonPublic)

Disassembly:
	0x032DF780 BL 0x1C16DEC
	0x032DF784 STP X30, X19, [X31 - 0x10]!
	0x032DF788 ADRP X0, 0xE3F000
	0x032DF78C LDR X0, [X0 + 0xC50]
	0x032DF790 BL 0x1C16D08
	0x032DF794 BL 0x1C16F10
	0x032DF798 MOV X1, X31
	0x032DF79C MOV X19, X0
	0x032DF7A0 BL 0x338E344
	0x032DF7A4 ADRP X0, 0xE47000
	0x032DF7A8 LDR X0, [X0 + 0x7A0]
	0x032DF7AC BL 0x1C16D08
	0x032DF7B0 MOV X1, X0
	0x032DF7B4 MOV X0, X19
	0x032DF7B8 BL 0x1C16DEC
	0x032DF7BC STP X30, X19, [X31 - 0x10]!
	0x032DF7C0 ADRP X0, 0xE3F000
	0x032DF7C4 LDR X0, [X0 + 0xC50]
	0x032DF7C8 BL 0x1C16D08
	0x032DF7CC BL 0x1C16F10
	0x032DF7D0 MOV X1, X31
	0x032DF7D4 MOV X19, X0
	0x032DF7D8 BL 0x338E344
	0x032DF7DC ADRP X0, 0xE47000
	0x032DF7E0 LDR X0, [X0 + 0x7A8]
	0x032DF7E4 BL 0x1C16D08
	0x032DF7E8 MOV X1, X0
	0x032DF7EC MOV X0, X19
	0x032DF7F0 BL 0x1C16DEC
	0x032DF7F4 STP X30, X19, [X31 - 0x10]!
	0x032DF7F8 ADRP X0, 0xE3F000
	0x032DF7FC LDR X0, [X0 + 0xC50]
	0x032DF800 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+80]
	005 Move X19, X0
	006 Move W20, W1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 2
	009 Compare TEMP, 2
	010 JumpIfEqual {18}
	011 Add X1, X19, 32
	012 Move W2, 2
	013 Move X0, X19
	014 Call 0x1C9543C
	015 Move W8, [X19+80]
	016 Or W8, W8, 2
	017 Move [X19+80], W8
	018 Move X0, [X19+56]
	019 Move X1, X31
	020 Move X2, X31
	021 Call MethodInfo.op_Inequality, X0, X1
	022 Move W8, W0
	023 Move X0, X31
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {44}
	028 Move TEMP, X20
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {43}
	032 Move X0, [X19+56]
	033 Compare X0, 0
	034 JumpIfEqual {48}
	035 Move X1, X31
	036 Call MethodBase.get_IsPublic, X0
	037 Move W8, W0
	038 Move X0, X31
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {44}
	043 Move X0, [X19+56]
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return X0
	048 Call 0x1C17F20

Method: System.Reflection.ParameterInfo[] GetIndexParameters()

Disassembly:
	0x032DF804 BL 0x1C16F10
	0x032DF808 MOV X1, X31
	0x032DF80C MOV X19, X0
	0x032DF810 BL 0x338E344
	0x032DF814 ADRP X0, 0xE47000
	0x032DF818 LDR X0, [X0 + 0x7B0]
	0x032DF81C BL 0x1C16D08
	0x032DF820 MOV X1, X0
	0x032DF824 MOV X0, X19
	0x032DF828 BL 0x1C16DEC
	0x032DF82C STP X30, X19, [X31 - 0x10]!
	0x032DF830 ADRP X0, 0xE3F000
	0x032DF834 LDR X0, [X0 + 0xC50]
	0x032DF838 BL 0x1C16D08
	0x032DF83C BL 0x1C16F10
	0x032DF840 MOV X1, X31
	0x032DF844 MOV X19, X0
	0x032DF848 BL 0x338E344
	0x032DF84C ADRP X0, 0xE47000
	0x032DF850 LDR X0, [X0 + 0x7B8]
	0x032DF854 BL 0x1C16D08
	0x032DF858 MOV X1, X0
	0x032DF85C MOV X0, X19
	0x032DF860 BL 0x1C16DEC
	0x032DF864 STP X30, X19, [X31 - 0x10]!
	0x032DF868 ADRP X0, 0xE3F000
	0x032DF86C LDR X0, [X0 + 0xC50]
	0x032DF870 BL 0x1C16D08
	0x032DF874 BL 0x1C16F10
	0x032DF878 MOV X1, X31
	0x032DF87C MOV X19, X0
	0x032DF880 BL 0x338E344
	0x032DF884 ADRP X0, 0xE47000
	0x032DF888 LDR X0, [X0 + 0x7C0]
	0x032DF88C BL 0x1C16D08
	0x032DF890 MOV X1, X0
	0x032DF894 MOV X0, X19
	0x032DF898 BL 0x1C16DEC
	0x032DF89C STP X30, X19, [X31 - 0x10]!
	0x032DF8A0 ADRP X0, 0xE3F000
	0x032DF8A4 LDR X0, [X0 + 0xC50]
	0x032DF8A8 BL 0x1C16D08
	0x032DF8AC BL 0x1C16F10
	0x032DF8B0 MOV X1, X31
	0x032DF8B4 MOV X19, X0
	0x032DF8B8 BL 0x338E344
	0x032DF8BC ADRP X0, 0xE47000
	0x032DF8C0 LDR X0, [X0 + 0x7C8]
	0x032DF8C4 BL 0x1C16D08
	0x032DF8C8 MOV X1, X0
	0x032DF8CC MOV X0, X19
	0x032DF8D0 BL 0x1C16DEC
	0x032DF8D4 STP X30, X19, [X31 - 0x10]!
	0x032DF8D8 ADRP X0, 0xE3F000
	0x032DF8DC LDR X0, [X0 + 0xC50]
	0x032DF8E0 BL 0x1C16D08
	0x032DF8E4 BL 0x1C16F10
	0x032DF8E8 MOV X1, X31
	0x032DF8EC MOV X19, X0
	0x032DF8F0 BL 0x338E344
	0x032DF8F4 ADRP X0, 0xE47000
	0x032DF8F8 LDR X0, [X0 + 0x7D0]
	0x032DF8FC BL 0x1C16D08
	0x032DF900 MOV X1, X0
	0x032DF904 MOV X0, X19
	0x032DF908 BL 0x1C16DEC
	0x032DF90C STP X30, X19, [X31 - 0x10]!
	0x032DF910 ADRP X0, 0xE3F000
	0x032DF914 LDR X0, [X0 + 0xC50]
	0x032DF918 BL 0x1C16D08
	0x032DF91C BL 0x1C16F10
	0x032DF920 MOV X1, X31
	0x032DF924 MOV X19, X0
	0x032DF928 BL 0x338E344
	0x032DF92C ADRP X0, 0xE47000
	0x032DF930 LDR X0, [X0 + 0x7D8]
	0x032DF934 BL 0x1C16D08
	0x032DF938 MOV X1, X0
	0x032DF93C MOV X0, X19
	0x032DF940 BL 0x1C16DEC
	0x032DF944 STP X30, X19, [X31 - 0x10]!
	0x032DF948 ADRP X0, 0xE3F000
	0x032DF94C LDR X0, [X0 + 0xC50]
	0x032DF950 BL 0x1C16D08
	0x032DF954 BL 0x1C16F10
	0x032DF958 MOV X1, X31
	0x032DF95C MOV X19, X0
	0x032DF960 BL 0x338E344
	0x032DF964 ADRP X0, 0xE47000
	0x032DF968 LDR X0, [X0 + 0x7E0]
	0x032DF96C BL 0x1C16D08
	0x032DF970 MOV X1, X0
	0x032DF974 MOV X0, X19
	0x032DF978 BL 0x1C16DEC
	0x032DF97C STP X30, X19, [X31 - 0x10]!
	0x032DF980 ADRP X0, 0xE3F000
	0x032DF984 LDR X0, [X0 + 0xC50]
	0x032DF988 BL 0x1C16D08
	0x032DF98C BL 0x1C16F10
	0x032DF990 MOV X1, X31
	0x032DF994 MOV X19, X0
	0x032DF998 BL 0x338E344
	0x032DF99C ADRP X0, 0xE47000
	0x032DF9A0 LDR X0, [X0 + 0x7E8]
	0x032DF9A4 BL 0x1C16D08
	0x032DF9A8 MOV X1, X0
	0x032DF9AC MOV X0, X19
	0x032DF9B0 BL 0x1C16DEC
	0x032DF9B4 STP X30, X19, [X31 - 0x10]!
	0x032DF9B8 ADRP X0, 0xE3F000
	0x032DF9BC LDR X0, [X0 + 0xC50]
	0x032DF9C0 BL 0x1C16D08
	0x032DF9C4 BL 0x1C16F10

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x10FE000
	011 Move W8, [X20+2435]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xE48000
	018 Move X0, [X0+1760]
	019 Call 0x1C17CF4
	020 Move X0, 0xE48000
	021 Move X0, [X0+1288]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2435], W8
	025 Move W8, [X19+80]
	026 NotImplemented "Instruction ORN not yet implemented."
	027 And W31, W8, 6
	028 Add X1, X19, 32
	029 Move W2, 6
	030 Move X0, X19
	031 Call 0x1C9543C
	032 Move W8, [X19+80]
	033 Or W8, W8, 6
	034 Move [X19+80], W8
	035 Move X0, [X19+56]
	036 Move X1, X31
	037 Move X2, X31
	038 Call MethodInfo.op_Inequality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {54}
	043 Move X0, [X19+56]
	044 Compare X0, 0
	045 JumpIfEqual {128}
	046 Move X8, [X0]
	047 Move X9, [X8+856]
	048 Move X1, [X8+864]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Compare X0, 0
	051 JumpIfEqual {128}
	052 Move W22, [X0+24]
	053 Move X20, X0
	054 Move X0, [X19+64]
	055 Move X1, X31
	056 Move X2, X31
	057 Call MethodInfo.op_Inequality, X0, X1
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {106}
	062 Move X0, [X19+64]
	063 Compare X0, 0
	064 JumpIfEqual {128}
	065 Move X8, [X0]
	066 Move X9, [X8+856]
	067 Move X1, [X8+864]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Compare X0, 0
	070 JumpIfEqual {128}
	071 Move W8, [X0+24]
	072 Move X20, X0
	073 Subtract W22, W8, 1
	074 Move X8, 0xE48000
	075 Move X8, [X8+1288]
	076 Move W1, W22
	077 Move X0, [X8]
	078 Call 0x1C17D6C
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X21, X0
	081 Move X23, X31
	082 Move W24, W22
	083 Add X25, X21, 32
	084 Add X26, X20, 32
	085 Move W8, [X20+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X0, [X26]
	088 Move X1, X19
	089 Call RuntimeParameterInfo.New, X0, X1
	090 Compare X21, 0
	091 JumpIfEqual {128}
	092 Move X22, X0
	093 Compare X0, 0
	094 JumpIfEqual {101}
	095 Move X8, [X21]
	096 Move X0, X22
	097 Move X1, [X8+64]
	098 Call 0x1C17E00
	099 Compare X0, 0
	100 JumpIfEqual {129}
	101 Move W8, [X21+24]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move [X25], X22
	104 Add X23, X23, 1
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X19, 0xE48000
	107 Move X19, [X19+1760]
	108 Move X0, [X19]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {114}
	112 Call 0x1C17DFC
	113 Move X0, [X19]
	114 Move X8, [X0+184]
	115 Move X21, [X8]
	116 Move X0, X21
	117 Move X20, [X31+64]
	118 Move X19, [X31+72]
	119 Move X22, [X31+48]
	120 Move X21, [X31+56]
	121 Move X24, [X31+32]
	122 Move X23, [X31+40]
	123 Move X26, [X31+16]
	124 Move X25, [X31+24]
	125 Move X30, [X31+80]
	126 Return X0
	127 Call 0x1C17F28
	128 Call 0x1C17F20
	129 Call 0x1C17F44
	130 Move X1, X31
	131 Call 0x1C17DEC

Method: System.Reflection.MethodInfo GetSetMethod(System.Boolean nonPublic)

Disassembly:
	0x032DF9C8 MOV X1, X31
	0x032DF9CC MOV X19, X0
	0x032DF9D0 BL 0x338E344
	0x032DF9D4 ADRP X0, 0xE47000
	0x032DF9D8 LDR X0, [X0 + 0x7F0]
	0x032DF9DC BL 0x1C16D08
	0x032DF9E0 MOV X1, X0
	0x032DF9E4 MOV X0, X19
	0x032DF9E8 BL 0x1C16DEC
	0x032DF9EC STP X30, X19, [X31 - 0x10]!
	0x032DF9F0 ADRP X0, 0xE3F000
	0x032DF9F4 LDR X0, [X0 + 0xC50]
	0x032DF9F8 BL 0x1C16D08
	0x032DF9FC BL 0x1C16F10
	0x032DFA00 MOV X1, X31
	0x032DFA04 MOV X19, X0
	0x032DFA08 BL 0x338E344
	0x032DFA0C ADRP X0, 0xE47000
	0x032DFA10 LDR X0, [X0 + 0x7F8]
	0x032DFA14 BL 0x1C16D08
	0x032DFA18 MOV X1, X0
	0x032DFA1C MOV X0, X19
	0x032DFA20 BL 0x1C16DEC
	0x032DFA24 STP X30, X19, [X31 - 0x10]!
	0x032DFA28 ADRP X0, 0xE3F000
	0x032DFA2C LDR X0, [X0 + 0xC50]
	0x032DFA30 BL 0x1C16D08
	0x032DFA34 BL 0x1C16F10
	0x032DFA38 MOV X1, X31
	0x032DFA3C MOV X19, X0
	0x032DFA40 BL 0x338E344
	0x032DFA44 ADRP X0, 0xE47000
	0x032DFA48 LDR X0, [X0 + 0x800]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+80]
	005 Move X19, X0
	006 Move W20, W1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 4
	009 Compare TEMP, 4
	010 JumpIfEqual {18}
	011 Add X1, X19, 32
	012 Move W2, 4
	013 Move X0, X19
	014 Call 0x1C9543C
	015 Move W8, [X19+80]
	016 Or W8, W8, 4
	017 Move [X19+80], W8
	018 Move X0, [X19+64]
	019 Move X1, X31
	020 Move X2, X31
	021 Call MethodInfo.op_Inequality, X0, X1
	022 Move W8, W0
	023 Move X0, X31
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {44}
	028 Move TEMP, X20
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {43}
	032 Move X0, [X19+64]
	033 Compare X0, 0
	034 JumpIfEqual {48}
	035 Move X1, X31
	036 Call MethodBase.get_IsPublic, X0
	037 Move W8, W0
	038 Move X0, X31
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {44}
	043 Move X0, [X19+64]
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return X0
	048 Call 0x1C17F20

Method: System.Boolean IsDefined(System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x032DFA4C BL 0x1C16D08
	0x032DFA50 MOV X1, X0
	0x032DFA54 MOV X0, X19
	0x032DFA58 BL 0x1C16DEC
	0x032DFA5C STP X30, X19, [X31 - 0x10]!
	0x032DFA60 ADRP X0, 0xE3F000
	0x032DFA64 LDR X0, [X0 + 0xC50]
	0x032DFA68 BL 0x1C16D08
	0x032DFA6C BL 0x1C16F10
	0x032DFA70 MOV X1, X31
	0x032DFA74 MOV X19, X0
	0x032DFA78 BL 0x338E344
	0x032DFA7C ADRP X0, 0xE47000
	0x032DFA80 LDR X0, [X0 + 0x808]
	0x032DFA84 BL 0x1C16D08
	0x032DFA88 MOV X1, X0
	0x032DFA8C MOV X0, X19
	0x032DFA90 BL 0x1C16DEC
	0x032DFA94 STP X30, X19, [X31 - 0x10]!
	0x032DFA98 ADRP X0, 0xE3F000
	0x032DFA9C LDR X0, [X0 + 0xC50]
	0x032DFAA0 BL 0x1C16D08
	0x032DFAA4 BL 0x1C16F10
	0x032DFAA8 MOV X1, X31
	0x032DFAAC MOV X19, X0
	0x032DFAB0 BL 0x338E344
	0x032DFAB4 ADRP X0, 0xE47000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10FE000
	007 Move X22, 0xE48000
	008 Move W8, [X21+2436]
	009 Move X22, [X22+992]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE48000
	017 Move X0, [X0+992]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2436], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move W2, W31
	033 Move X3, X31
	034 Move X30, [X31+48]
	035 Call MonoCustomAttrs.IsDefined, X0, X1, X2
	036 Return X0

Method: System.Object[] GetCustomAttributes(System.Boolean inherit)

Disassembly:
	0x032DFAB8 LDR X0, [X0 + 0x810]
	0x032DFABC BL 0x1C16D08
	0x032DFAC0 MOV X1, X0
	0x032DFAC4 MOV X0, X19
	0x032DFAC8 BL 0x1C16DEC
	0x032DFACC STP X30, X19, [X31 - 0x10]!
	0x032DFAD0 ADRP X0, 0xE3F000
	0x032DFAD4 LDR X0, [X0 + 0xC50]
	0x032DFAD8 BL 0x1C16D08
	0x032DFADC BL 0x1C16F10
	0x032DFAE0 MOV X1, X31
	0x032DFAE4 MOV X19, X0
	0x032DFAE8 BL 0x338E344
	0x032DFAEC ADRP X0, 0xE47000
	0x032DFAF0 LDR X0, [X0 + 0x818]
	0x032DFAF4 BL 0x1C16D08
	0x032DFAF8 MOV X1, X0
	0x032DFAFC MOV X0, X19
	0x032DFB00 BL 0x1C16DEC
	0x032DFB04 STP X30, X19, [X31 - 0x10]!
	0x032DFB08 ADRP X0, 0xE3F000
	0x032DFB0C LDR X0, [X0 + 0xC50]
	0x032DFB10 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x10FE000
	006 Move X21, 0xE48000
	007 Move W8, [X20+2437]
	008 Move X21, [X21+992]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE48000
	015 Move X0, [X0+992]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2437], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W1, W31
	028 Move X2, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call MonoCustomAttrs.GetCustomAttributes, X0, X1
	032 Return X0

Method: System.Object[] GetCustomAttributes(System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x032DFB14 BL 0x1C16F10
	0x032DFB18 MOV X1, X31
	0x032DFB1C MOV X19, X0
	0x032DFB20 BL 0x338E344
	0x032DFB24 ADRP X0, 0xE47000
	0x032DFB28 LDR X0, [X0 + 0x820]
	0x032DFB2C BL 0x1C16D08
	0x032DFB30 MOV X1, X0
	0x032DFB34 MOV X0, X19
	0x032DFB38 BL 0x1C16DEC
	0x032DFB3C STP X30, X19, [X31 - 0x10]!
	0x032DFB40 ADRP X0, 0xE3F000
	0x032DFB44 LDR X0, [X0 + 0xC50]
	0x032DFB48 BL 0x1C16D08
	0x032DFB4C BL 0x1C16F10
	0x032DFB50 MOV X1, X31
	0x032DFB54 MOV X19, X0
	0x032DFB58 BL 0x338E344
	0x032DFB5C ADRP X0, 0xE47000
	0x032DFB60 LDR X0, [X0 + 0x828]
	0x032DFB64 BL 0x1C16D08
	0x032DFB68 MOV X1, X0
	0x032DFB6C MOV X0, X19
	0x032DFB70 BL 0x1C16DEC
	0x032DFB74 STP X30, X19, [X31 - 0x10]!
	0x032DFB78 ADRP X0, 0xE3F000
	0x032DFB7C LDR X0, [X0 + 0xC50]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10FE000
	007 Move X22, 0xE48000
	008 Move W8, [X21+2438]
	009 Move X22, [X22+992]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE48000
	017 Move X0, [X0+992]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2438], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move W2, W31
	033 Move X3, X31
	034 Move X30, [X31+48]
	035 Call MonoCustomAttrs.GetCustomAttributes, X0, X1, X2
	036 Return X0

Method: System.Object GetterAdapterFrame(System.Reflection.RuntimePropertyInfo/Getter`2<T, R> getter, System.Object obj)

Disassembly:
	0x022545D4 CBZ X0, 0x2254624
	0x022545D8 LDR X8, [X0]
	0x022545DC LDP V0, V1, [X31 + 0x20]
	0x022545E0 LDP V2, V3, [X31]
	0x022545E4 ADD X1, X31, 0x60
	0x022545E8 LDR X9, [X8 + 0x1B8]
	0x022545EC STP V0, V1, [X31 + 0x60]
	0x022545F0 STP V2, V3, [X31 + 0x40]
	0x022545F4 LDR X3, [X8 + 0x1C0]
	0x022545F8 ADD X2, X31, 0x40
	0x022545FC BLR X9
	0x02254600 TBNZ X0, 0x0, 0x225460C
	0x02254604 LDP V1, V0, [X19]
	0x02254608 STP V1, V0, [X20]
	0x0225460C LDP X20, X19, [X31 + 0x90]
	0x02254610 LDP X30, X21, [X31 + 0x80]
	0x02254614 ORN W8, W31, W0, 0x0
	0x02254618 AND W0, W8, 0x1
	0x0225461C ADD X31, X31, 0xA0
	0x02254620 RET
	0x02254624 BL 0x1C16F20
	0x02254628 STP X29, X30, [X31 - 0x50]!
	0x0225462C STP X26, X25, [X31 + 0x10]
	0x02254630 STP X24, X23, [X31 + 0x20]
	0x02254634 STP X22, X21, [X31 + 0x30]
	0x02254638 STP X20, X19, [X31 + 0x40]
	0x0225463C ADD X29, X31, 0x0
	0x02254640 SUB X31, X31, 0x20
	0x02254644 MRS X26, 0xC000
	0x02254648 LDR X8, [X26 + 0x28]
	0x0225464C MOV X19, X2
	0x02254650 MOV X20, X1
	0x02254654 MOV X21, X0
	0x02254658 STUR X8, [X29 - 0x8]
	0x0225465C LDR X8, [X2 + 0x38]
	0x02254660 CBNZ X8, 0x2254670
	0x02254664 MOV X0, X19
	0x02254668 BL 0x1C5C6E0
	0x0225466C LDR X8, [X19 + 0x38]
	0x02254670 LDR X9, [X8 + 0x20]
	0x02254674 LDR W22, [X9 + 0xFC]
	0x02254678 ADD X9, X31, 0x0
	0x0225467C ADD X10, X22, 0xF
	0x02254680 AND X10, X10, 0x1FFFFFFFF
	0x02254684 SUB X23, X9, X10
	0x02254688 ADD X31, X23, 0x0
	0x0225468C ADD X9, X31, 0x0
	0x02254690 SUB X25, X9, X10
	0x02254694 ADD X31, X25, 0x0
	0x02254698 LDR X0, [X8]
	0x0225469C LDR X8, [X0]
	0x022546A0 BLR X8
	0x022546A4 MOV X24, X0
	0x022546A8 MOV X0, X23
	0x022546AC MOV X1, X21
	0x022546B0 MOV X2, X22
	0x022546B4 BL 0x3EB1AC0
	0x022546B8 MOV X0, X25
	0x022546BC MOV X1, X20
	0x022546C0 MOV X2, X22
	0x022546C4 BL 0x3EB1AC0
	0x022546C8 CBZ X24, 0x2254760
	0x022546CC LDR X8, [X24]
	0x022546D0 STP X23, X25, [X29 - 0x20]
	0x022546D4 SUB X3, X29, 0x20
	0x022546D8 SUB X4, X29, 0xC
	0x022546DC LDR X1, [X8 + 0x1C0]
	0x022546E0 MOV X2, X24
	0x022546E4 LDP X0, X8, [X1 + 0x8]

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Add X29, X31, 0
	010 Subtract X31, X31, 32
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X24+40]
	013 Move X19, X2
	014 Move X22, X1
	015 Move X20, X0
	016 Move [X29-8], X8
	017 Move X8, [X2+56]
	018 Compare X8, 0
	019 JumpIfNotEqual {23}
	020 Move X0, X19
	021 Call 0x1C5D6E0
	022 Move X8, [X19+56]
	023 Move X1, [X8+8]
	024 Add X10, X31, 0
	025 Move W9, [X1+252]
	026 Add X9, X9, 15
	027 And X9, X9, 0x1FFFFFFFF
	028 Subtract X23, X10, X9
	029 Add X31, X23, 0
	030 Move X8, [X8+24]
	031 Add X9, X31, 0
	032 Move W8, [X8+252]
	033 Add X8, X8, 15
	034 And X8, X8, 0x1FFFFFFFF
	035 Subtract X21, X9, X8
	036 Add X31, X21, 0
	037 Move W8, [X1+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {45}
	042 Move X0, X1
	043 Call 0x1C5D684
	044 Move X1, X0
	045 Move X0, X22
	046 Move X2, X23
	047 Call 0x1C17E10
	048 Compare X20, 0
	049 JumpIfEqual {85}
	050 Move X8, [X19+56]
	051 Move X9, [X8+8]
	052 Move X1, [X8+16]
	053 Move W9, [X9+40]
	054 Move X8, [X1]
	055 Move TEMP, X9
	056 And TEMP, TEMP, -2147483648
	057 Compare TEMP, -2147483648
	058 JumpIfEqual {60}
	059 Move X0, [X0]
	060 Move [X29-24], X0
	061 Move [X29-16], X21
	062 Move X9, [X1+16]
	063 Subtract X3, X29, 24
	064 Move X0, X8
	065 Move X2, X20
	066 Move X4, X21
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X8, [X19+56]
	069 Move X1, X21
	070 Move X0, [X8+24]
	071 Call 0x1C17E04
	072 Move X8, [X24+40]
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Add X31, X29, 0
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X22, [X31+32]
	079 Move X21, [X31+40]
	080 Move X24, [X31+16]
	081 Move X23, [X31+24]
	082 Move X29, [X31+64]
	083 Move X30, [X31+72]
	084 Return X0
	085 Call 0x1C17F20
	086 Call 0x3EB2B20

Method: System.Object StaticGetterAdapterFrame(System.Reflection.RuntimePropertyInfo/StaticGetter`1<R> getter, System.Object obj)

Disassembly:
	0x022546E8 BLR X8
	0x022546EC LDURB W8, [X29 - 0xC]
	0x022546F0 CBZ W8, 0x22546FC
	0x022546F4 MOV W0, W31
	0x022546F8 B 0x2254734
	0x022546FC MOV X0, X23
	0x02254700 MOV X1, X20
	0x02254704 MOV X2, X22
	0x02254708 BL 0x3EB1AC0
	0x0225470C MOV X0, X21
	0x02254710 MOV X1, X23
	0x02254714 MOV X2, X22
	0x02254718 BL 0x3EB1AC0
	0x0225471C LDR X8, [X19 + 0x38]
	0x02254720 LDR X0, [X8 + 0x20]
	0x02254724 LDRB W8, [X0 + 0x135]
	0x02254728 TBNZ X8, 0x0, 0x2254730
	0x0225472C BL 0x1C5C684
	0x02254730 MOVZ W0, 0x1
	0x02254734 LDR X8, [X26 + 0x28]
	0x02254738 LDUR X9, [X29 - 0x8]
	0x0225473C CMP X8, X9
	0x02254740 B.NE 0x2254764
	0x02254744 ADD X31, X29, 0x0
	0x02254748 LDP X20, X19, [X31 + 0x40]
	0x0225474C LDP X22, X21, [X31 + 0x30]
	0x02254750 LDP X24, X23, [X31 + 0x20]
	0x02254754 LDP X26, X25, [X31 + 0x10]
	0x02254758 LDP X29, X30, [X31], #0x50
	0x0225475C RET
	0x02254760 BL 0x1C16F20
	0x02254764 BL 0x3EB1B20
	0x02254768 STR X30, [X31 - 0x30]!
	0x0225476C STP X22, X21, [X31 + 0x10]
	0x02254770 STP X20, X19, [X31 + 0x20]
	0x02254774 LDR X8, [X3 + 0x38]
	0x02254778 MOV X21, X3
	0x0225477C MOV W20, W2
	0x02254780 MOV X19, X1
	0x02254784 CBNZ X8, 0x22547B0
	0x02254788 ADRP X0, 0x1EC8000
	0x0225478C LDR X0, [X0 + 0x4F0]
	0x02254790 BL 0x1C16CF4
	0x02254794 ADRP X0, 0x1EC7000
	0x02254798 LDR X0, [X0 + 0x850]
	0x0225479C BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X29
	002 Move [X31-40], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Add X29, X31, 0
	008 Subtract X31, X31, 16
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X22+40]
	011 Move X19, X2
	012 Move X20, X0
	013 Move [X29-8], X8
	014 Move X8, [X2+56]
	015 Compare X8, 0
	016 JumpIfNotEqual {20}
	017 Move X0, X19
	018 Call 0x1C5D6E0
	019 Move X8, [X19+56]
	020 Move X9, [X8+16]
	021 Add X10, X31, 0
	022 Move W9, [X9+252]
	023 Add X9, X9, 15
	024 And X9, X9, 0x1FFFFFFFF
	025 Subtract X21, X10, X9
	026 Add X31, X21, 0
	027 Compare X20, 0
	028 JumpIfEqual {52}
	029 Move X1, [X8+8]
	030 Subtract X3, X29, 16
	031 Move X2, X20
	032 Move X4, X21
	033 Move X0, [X1]
	034 Move [X29-16], X21
	035 Move X8, [X1+16]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X8, [X19+56]
	038 Move X1, X21
	039 Move X0, [X8+16]
	040 Call 0x1C17E04
	041 Move X8, [X22+40]
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add X31, X29, 0
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X29, [X31+48]
	050 Move X30, [X31+56]
	051 Return X0
	052 Call 0x1C17F20
	053 Call 0x3EB2B20

Method: System.Object GetValue(System.Object obj, System.Object[] index)

Disassembly:
	0x032DFB80 BL 0x1C16D08
	0x032DFB84 BL 0x1C16F10
	0x032DFB88 MOV X1, X31
	0x032DFB8C MOV X19, X0
	0x032DFB90 BL 0x338E344
	0x032DFB94 ADRP X0, 0xE47000
	0x032DFB98 LDR X0, [X0 + 0x830]
	0x032DFB9C BL 0x1C16D08

ISIL:
	001 Move X8, [X0]
	002 Move X4, X2
	003 Move W2, W31
	004 Move X3, X31
	005 Move X7, [X8+728]
	006 Move X6, [X8+736]
	007 Move X5, X31
	008 CallNoReturn X7

Method: System.Object GetValue(System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] index, System.Globalization.CultureInfo culture)

Disassembly:
	0x032DFBA0 MOV X1, X0
	0x032DFBA4 MOV X0, X19
	0x032DFBA8 BL 0x1C16DEC
	0x032DFBAC STP X30, X19, [X31 - 0x10]!
	0x032DFBB0 ADRP X0, 0xE3F000
	0x032DFBB4 LDR X0, [X0 + 0xC50]
	0x032DFBB8 BL 0x1C16D08
	0x032DFBBC BL 0x1C16F10
	0x032DFBC0 MOV X1, X31
	0x032DFBC4 MOV X19, X0
	0x032DFBC8 BL 0x338E344
	0x032DFBCC ADRP X0, 0xE47000
	0x032DFBD0 LDR X0, [X0 + 0x838]
	0x032DFBD4 BL 0x1C16D08
	0x032DFBD8 MOV X1, X0
	0x032DFBDC MOV X0, X19
	0x032DFBE0 BL 0x1C16DEC
	0x032DFBE4 STP X30, X19, [X31 - 0x10]!
	0x032DFBE8 ADRP X0, 0xE3F000
	0x032DFBEC LDR X0, [X0 + 0xC50]
	0x032DFBF0 BL 0x1C16D08
	0x032DFBF4 BL 0x1C16F10
	0x032DFBF8 MOV X1, X31
	0x032DFBFC MOV X19, X0
	0x032DFC00 BL 0x338E344
	0x032DFC04 ADRP X0, 0xE47000
	0x032DFC08 LDR X0, [X0 + 0x840]
	0x032DFC0C BL 0x1C16D08
	0x032DFC10 MOV X1, X0
	0x032DFC14 MOV X0, X19
	0x032DFC18 BL 0x1C16DEC
	0x032DFC1C STP X30, X19, [X31 - 0x10]!
	0x032DFC20 ADRP X0, 0xE3F000
	0x032DFC24 LDR X0, [X0 + 0xC50]
	0x032DFC28 BL 0x1C16D08
	0x032DFC2C BL 0x1C16F10
	0x032DFC30 MOV X1, X31
	0x032DFC34 MOV X19, X0
	0x032DFC38 BL 0x338E344
	0x032DFC3C ADRP X0, 0xE47000
	0x032DFC40 LDR X0, [X0 + 0x848]
	0x032DFC44 BL 0x1C16D08
	0x032DFC48 MOV X1, X0
	0x032DFC4C MOV X0, X19
	0x032DFC50 BL 0x1C16DEC
	0x032DFC54 STP X30, X19, [X31 - 0x10]!
	0x032DFC58 ADRP X0, 0xE3F000
	0x032DFC5C LDR X0, [X0 + 0xC50]
	0x032DFC60 BL 0x1C16D08
	0x032DFC64 BL 0x1C16F10
	0x032DFC68 MOV X1, X31
	0x032DFC6C MOV X19, X0
	0x032DFC70 BL 0x338E344
	0x032DFC74 ADRP X0, 0xE47000
	0x032DFC78 LDR X0, [X0 + 0x850]
	0x032DFC7C BL 0x1C16D08
	0x032DFC80 MOV X1, X0
	0x032DFC84 MOV X0, X19
	0x032DFC88 BL 0x1C16DEC
	0x032DFC8C STP X30, X19, [X31 - 0x10]!
	0x032DFC90 ADRP X0, 0xE3F000
	0x032DFC94 LDR X0, [X0 + 0xC50]
	0x032DFC98 BL 0x1C16D08
	0x032DFC9C BL 0x1C16F10
	0x032DFCA0 MOV X1, X31
	0x032DFCA4 MOV X19, X0
	0x032DFCA8 BL 0x338E344
	0x032DFCAC ADRP X0, 0xE47000
	0x032DFCB0 LDR X0, [X0 + 0x858]
	0x032DFCB4 BL 0x1C16D08
	0x032DFCB8 MOV X1, X0
	0x032DFCBC MOV X0, X19
	0x032DFCC0 BL 0x1C16DEC
	0x032DFCC4 STP X30, X19, [X31 - 0x10]!
	0x032DFCC8 ADRP X0, 0xE3F000
	0x032DFCCC LDR X0, [X0 + 0xC50]
	0x032DFCD0 BL 0x1C16D08
	0x032DFCD4 BL 0x1C16F10
	0x032DFCD8 MOV X1, X31
	0x032DFCDC MOV X19, X0
	0x032DFCE0 BL 0x338E344
	0x032DFCE4 ADRP X0, 0xE47000
	0x032DFCE8 LDR X0, [X0 + 0x860]
	0x032DFCEC BL 0x1C16D08
	0x032DFCF0 MOV X1, X0
	0x032DFCF4 MOV X0, X19
	0x032DFCF8 BL 0x1C16DEC
	0x032DFCFC STP X30, X19, [X31 - 0x10]!
	0x032DFD00 ADRP X0, 0xE3F000
	0x032DFD04 LDR X0, [X0 + 0xC50]
	0x032DFD08 BL 0x1C16D08
	0x032DFD0C BL 0x1C16F10
	0x032DFD10 MOV X1, X31
	0x032DFD14 MOV X19, X0
	0x032DFD18 BL 0x338E344
	0x032DFD1C ADRP X0, 0xE47000
	0x032DFD20 LDR X0, [X0 + 0x868]
	0x032DFD24 BL 0x1C16D08
	0x032DFD28 MOV X1, X0
	0x032DFD2C MOV X0, X19
	0x032DFD30 BL 0x1C16DEC
	0x032DFD34 STP X30, X19, [X31 - 0x10]!
	0x032DFD38 ADRP X0, 0xE3F000
	0x032DFD3C LDR X0, [X0 + 0xC50]
	0x032DFD40 BL 0x1C16D08
	0x032DFD44 BL 0x1C16F10
	0x032DFD48 MOV X1, X31
	0x032DFD4C MOV X19, X0
	0x032DFD50 BL 0x338E344
	0x032DFD54 ADRP X0, 0xE47000
	0x032DFD58 LDR X0, [X0 + 0x870]
	0x032DFD5C BL 0x1C16D08
	0x032DFD60 MOV X1, X0
	0x032DFD64 MOV X0, X19
	0x032DFD68 BL 0x1C16DEC
	0x032DFD6C STP X30, X19, [X31 - 0x10]!
	0x032DFD70 ADRP X0, 0xE3F000
	0x032DFD74 LDR X0, [X0 + 0xC50]
	0x032DFD78 BL 0x1C16D08
	0x032DFD7C BL 0x1C16F10
	0x032DFD80 MOV X1, X31
	0x032DFD84 MOV X19, X0
	0x032DFD88 BL 0x338E344
	0x032DFD8C ADRP X0, 0xE47000
	0x032DFD90 LDR X0, [X0 + 0x878]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X8, [X0]
	010 Move W21, W2
	011 Move X22, X1
	012 Move W1, 1
	013 Move X9, [X8+664]
	014 Move X2, [X8+672]
	015 Move X19, X5
	016 Move X23, X4
	017 Move X20, X3
	018 Move X25, X0
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move X1, X31
	021 Move X2, X31
	022 Move X24, X0
	023 Call MethodInfo.op_Equality, X0, X1
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {66}
	028 Compare X23, 0
	029 JumpIfEqual {45}
	030 Move X8, [X23+24]
	031 Compare X8, 0
	032 JumpIfEqual {45}
	033 Compare X24, 0
	034 JumpIfEqual {100}
	035 Move X8, [X24]
	036 Move X9, [X8+808]
	037 Move X6, [X8+816]
	038 Move X0, X24
	039 Move X1, X22
	040 Move W2, W21
	041 Move X3, X20
	042 Move X4, X23
	043 Move X5, X19
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Compare X24, 0
	046 JumpIfEqual {99}
	047 Move X8, [X24]
	048 Move X9, [X8+808]
	049 Move X6, [X8+816]
	050 Move X0, X24
	051 Move X1, X22
	052 Move W2, W21
	053 Move X3, X20
	054 Move X4, X31
	055 Move X5, X19
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X20, [X31+48]
	058 Move X19, [X31+56]
	059 Move X22, [X31+32]
	060 Move X21, [X31+40]
	061 Move X24, [X31+16]
	062 Move X23, [X31+24]
	063 Move X30, [X31+64]
	064 Move X25, [X31+72]
	065 Return X0
	066 Move X8, [X25]
	067 Move X0, X25
	068 Move X9, [X8+424]
	069 Move X1, [X8+432]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X19, X0
	072 Move X0, 0xE48000
	073 Move X0, [X0+1768]
	074 Call 0x1C17D08
	075 Move X20, X0
	076 Move X0, 0xE1D000
	077 Move X0, [X0+2480]
	078 Call 0x1C17D08
	079 Move X2, X0
	080 Move X0, X20
	081 Move X1, X19
	082 Move X3, X31
	083 Call String.Concat, X0, X1, X2
	084 Move X19, X0
	085 Move X0, 0xE1D000
	086 Move X0, [X0+1400]
	087 Call 0x1C17D08
	088 Call 0x1C17F10
	089 Move X1, X19
	090 Move X2, X31
	091 Move X20, X0
	092 Call ArgumentException..ctor, X0, X1
	093 Move X0, 0xE48000
	094 Move X0, [X0+1776]
	095 Call 0x1C17D08
	096 Move X1, X0
	097 Move X0, X20
	098 Call 0x1C17DEC
	099 Call 0x1C17F20
	100 Call 0x1C17F20
	101 Move X19, X0
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X0, X19
	104 Call 0x3EB2AD0
	105 Move X19, X0
	106 Move X0, 0xE43000
	107 Move X0, [X0+1680]
	108 Call 0x1C17D08
	109 Move X8, [X19]
	110 Move X1, [X8]
	111 Call 0x1C18270
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {126}
	116 Move X19, [X19]
	117 Call 0x3EB2AE0
	118 Move X0, 0xE45000
	119 Move X0, [X0+3936]
	120 Call 0x1C17D08
	121 Call 0x1C17F10
	122 Move X1, X19
	123 Move X2, X31
	124 Move X20, X0
	125 Call TargetInvocationException..ctor, X0, X1
	126 Move W0, 8
	127 Call 0x3EB2AF0
	128 Move X8, [X19]
	129 Move [X0], X8
	130 Move X1, 0xBD6000
	131 Add X1, X1, 3672
	132 Move X2, X31
	133 Call 0x3EB2B00
	134 Move X19, X0
	135 Call 0x3EB2AE0
	136 Move X0, X19
	137 Call 0x1D2D690
	138 Call 0x1991590

Method: System.Void SetValue(System.Object obj, System.Object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] index, System.Globalization.CultureInfo culture)

Disassembly:
	0x032DFD94 BL 0x1C16D08
	0x032DFD98 MOV X1, X0
	0x032DFD9C MOV X0, X19
	0x032DFDA0 BL 0x1C16DEC
	0x032DFDA4 STP X30, X19, [X31 - 0x10]!
	0x032DFDA8 ADRP X0, 0xE3F000
	0x032DFDAC LDR X0, [X0 + 0xC50]
	0x032DFDB0 BL 0x1C16D08
	0x032DFDB4 BL 0x1C16F10
	0x032DFDB8 MOV X1, X31
	0x032DFDBC MOV X19, X0
	0x032DFDC0 BL 0x338E344
	0x032DFDC4 ADRP X0, 0xE47000
	0x032DFDC8 LDR X0, [X0 + 0x880]
	0x032DFDCC BL 0x1C16D08
	0x032DFDD0 MOV X1, X0
	0x032DFDD4 MOV X0, X19
	0x032DFDD8 BL 0x1C16DEC
	0x032DFDDC STP X30, X19, [X31 - 0x10]!
	0x032DFDE0 ADRP X0, 0xE3F000
	0x032DFDE4 LDR X0, [X0 + 0xC50]
	0x032DFDE8 BL 0x1C16D08
	0x032DFDEC BL 0x1C16F10
	0x032DFDF0 MOV X1, X31
	0x032DFDF4 MOV X19, X0
	0x032DFDF8 BL 0x338E344
	0x032DFDFC ADRP X0, 0xE47000
	0x032DFE00 LDR X0, [X0 + 0x888]
	0x032DFE04 BL 0x1C16D08
	0x032DFE08 MOV X1, X0
	0x032DFE0C MOV X0, X19
	0x032DFE10 BL 0x1C16DEC
	0x032DFE14 STP X30, X19, [X31 - 0x10]!
	0x032DFE18 ADRP X0, 0xE3F000
	0x032DFE1C LDR X0, [X0 + 0xC50]
	0x032DFE20 BL 0x1C16D08
	0x032DFE24 BL 0x1C16F10
	0x032DFE28 MOV X1, X31
	0x032DFE2C MOV X19, X0
	0x032DFE30 BL 0x338E344
	0x032DFE34 ADRP X0, 0xE47000
	0x032DFE38 LDR X0, [X0 + 0x890]
	0x032DFE3C BL 0x1C16D08
	0x032DFE40 MOV X1, X0
	0x032DFE44 MOV X0, X19
	0x032DFE48 BL 0x1C16DEC
	0x032DFE4C STP X30, X19, [X31 - 0x10]!
	0x032DFE50 ADRP X0, 0xE3F000
	0x032DFE54 LDR X0, [X0 + 0xC50]
	0x032DFE58 BL 0x1C16D08
	0x032DFE5C BL 0x1C16F10
	0x032DFE60 MOV X1, X31
	0x032DFE64 MOV X19, X0
	0x032DFE68 BL 0x338E344
	0x032DFE6C ADRP X0, 0xE47000
	0x032DFE70 LDR X0, [X0 + 0x898]
	0x032DFE74 BL 0x1C16D08
	0x032DFE78 MOV X1, X0
	0x032DFE7C MOV X0, X19
	0x032DFE80 BL 0x1C16DEC
	0x032DFE84 STP X30, X19, [X31 - 0x10]!
	0x032DFE88 ADRP X0, 0xE3F000
	0x032DFE8C LDR X0, [X0 + 0xC50]
	0x032DFE90 BL 0x1C16D08
	0x032DFE94 BL 0x1C16F10
	0x032DFE98 MOV X1, X31
	0x032DFE9C MOV X19, X0
	0x032DFEA0 BL 0x338E344
	0x032DFEA4 ADRP X0, 0xE47000
	0x032DFEA8 LDR X0, [X0 + 0x8A0]
	0x032DFEAC BL 0x1C16D08
	0x032DFEB0 MOV X1, X0
	0x032DFEB4 MOV X0, X19
	0x032DFEB8 BL 0x1C16DEC
	0x032DFEBC STP X30, X19, [X31 - 0x10]!
	0x032DFEC0 ADRP X0, 0xE3F000
	0x032DFEC4 LDR X0, [X0 + 0xC50]
	0x032DFEC8 BL 0x1C16D08
	0x032DFECC BL 0x1C16F10
	0x032DFED0 MOV X1, X31
	0x032DFED4 MOV X19, X0
	0x032DFED8 BL 0x338E344
	0x032DFEDC ADRP X0, 0xE47000
	0x032DFEE0 LDR X0, [X0 + 0x8A8]
	0x032DFEE4 BL 0x1C16D08
	0x032DFEE8 MOV X1, X0
	0x032DFEEC MOV X0, X19
	0x032DFEF0 BL 0x1C16DEC
	0x032DFEF4 STP X30, X19, [X31 - 0x10]!
	0x032DFEF8 ADRP X0, 0xE3F000
	0x032DFEFC LDR X0, [X0 + 0xC50]
	0x032DFF00 BL 0x1C16D08
	0x032DFF04 BL 0x1C16F10
	0x032DFF08 MOV X1, X31
	0x032DFF0C MOV X19, X0
	0x032DFF10 BL 0x338E344
	0x032DFF14 ADRP X0, 0xE47000
	0x032DFF18 LDR X0, [X0 + 0x8B0]
	0x032DFF1C BL 0x1C16D08
	0x032DFF20 MOV X1, X0
	0x032DFF24 MOV X0, X19
	0x032DFF28 BL 0x1C16DEC
	0x032DFF2C STP X30, X19, [X31 - 0x10]!
	0x032DFF30 ADRP X0, 0xE3F000
	0x032DFF34 LDR X0, [X0 + 0xC50]
	0x032DFF38 BL 0x1C16D08
	0x032DFF3C BL 0x1C16F10
	0x032DFF40 MOV X1, X31
	0x032DFF44 MOV X19, X0
	0x032DFF48 BL 0x338E344
	0x032DFF4C ADRP X0, 0xE47000
	0x032DFF50 LDR X0, [X0 + 0x8B8]
	0x032DFF54 BL 0x1C16D08
	0x032DFF58 MOV X1, X0
	0x032DFF5C MOV X0, X19
	0x032DFF60 BL 0x1C16DEC
	0x032DFF64 STP X30, X19, [X31 - 0x10]!
	0x032DFF68 ADRP X0, 0xE3F000
	0x032DFF6C LDR X0, [X0 + 0xC50]
	0x032DFF70 BL 0x1C16D08
	0x032DFF74 BL 0x1C16F10
	0x032DFF78 MOV X1, X31
	0x032DFF7C MOV X19, X0
	0x032DFF80 BL 0x338E344
	0x032DFF84 ADRP X0, 0xE47000
	0x032DFF88 LDR X0, [X0 + 0x8C0]
	0x032DFF8C BL 0x1C16D08

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X24, 0x10FE000
	012 Move W8, [X24+2439]
	013 Move X19, X6
	014 Move X26, X5
	015 Move X20, X4
	016 Move W21, W3
	017 Move X23, X2
	018 Move X22, X1
	019 Move X25, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0xE15000
	025 Move X0, [X0+2512]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+2439], W8
	029 Move X8, [X25]
	030 Move W1, 1
	031 Move X0, X25
	032 Move X9, [X8+696]
	033 Move X2, [X8+704]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X1, X31
	036 Move X2, X31
	037 Move X24, X0
	038 Call MethodInfo.op_Equality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {118}
	043 Move X8, 0xE15000
	044 Move X8, [X8+2512]
	045 Compare X26, 0
	046 JumpIfEqual {76}
	047 Move X27, [X26+24]
	048 Compare X27, 0
	049 JumpIfEqual {76}
	050 Move X0, [X8]
	051 Add W1, W27, 1
	052 Call 0x1C17D6C
	053 Move X25, X0
	054 Move X0, X26
	055 Move X1, X25
	056 Move W2, W31
	057 Move X3, X31
	058 Call Array.CopyTo, X0, X1, X2
	059 Compare X25, 0
	060 JumpIfEqual {117}
	061 Compare X23, 0
	062 JumpIfEqual {69}
	063 Move X8, [X25]
	064 Move X0, X23
	065 Move X1, [X8+64]
	066 Call 0x1C17E00
	067 Compare X0, 0
	068 JumpIfEqual {152}
	069 Move W8, [X25+24]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, X27
	072 ShiftRight X8, 32
	073 And X8, X8, 0x7FFFFFFF
	074 Add X8, X25, X8
	075 Add X8, X8, 32
	076 Move X0, [X8]
	077 Move W1, 1
	078 Call 0x1C17D6C
	079 Compare X0, 0
	080 JumpIfEqual {117}
	081 Move X25, X0
	082 Compare X23, 0
	083 JumpIfEqual {90}
	084 Move X8, [X25]
	085 Move X0, X23
	086 Move X1, [X8+64]
	087 Call 0x1C17E00
	088 Compare X0, 0
	089 JumpIfEqual {152}
	090 Move W8, [X25+24]
	091 Compare W8, 0
	092 JumpIfEqual {151}
	093 Add X8, X25, 32
	094 Move [X8], X23
	095 Compare X24, 0
	096 JumpIfEqual {117}
	097 Move X8, [X24]
	098 Move X0, X24
	099 Move X1, X22
	100 Move W2, W21
	101 Move X7, [X8+808]
	102 Move X6, [X8+816]
	103 Move X3, X20
	104 Move X4, X25
	105 Move X5, X19
	106 Move X20, [X31+64]
	107 Move X19, [X31+72]
	108 Move X22, [X31+48]
	109 Move X21, [X31+56]
	110 Move X24, [X31+32]
	111 Move X23, [X31+40]
	112 Move X26, [X31+16]
	113 Move X25, [X31+24]
	114 Move X30, [X31+80]
	115 Move X27, [X31+88]
	116 CallNoReturn X7
	117 Call 0x1C17F20
	118 Move X8, [X25]
	119 Move X0, X25
	120 Move X9, [X8+424]
	121 Move X1, [X8+432]
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Move X19, X0
	124 Move X0, 0xE48000
	125 Move X0, [X0+1784]
	126 Call 0x1C17D08
	127 Move X20, X0
	128 Move X0, 0xE1D000
	129 Move X0, [X0+2480]
	130 Call 0x1C17D08
	131 Move X2, X0
	132 Move X0, X20
	133 Move X1, X19
	134 Move X3, X31
	135 Call String.Concat, X0, X1, X2
	136 Move X19, X0
	137 Move X0, 0xE1D000
	138 Move X0, [X0+1400]
	139 Call 0x1C17D08
	140 Call 0x1C17F10
	141 Move X1, X19
	142 Move X2, X31
	143 Move X20, X0
	144 Call ArgumentException..ctor, X0, X1
	145 Move X0, 0xE48000
	146 Move X0, [X0+1792]
	147 Call 0x1C17D08
	148 Move X1, X0
	149 Move X0, X20
	150 Call 0x1C17DEC
	151 Call 0x1C17F28
	152 Call 0x1C17F44
	153 Move X1, X31
	154 Call 0x1C17DEC

Method: System.Collections.Generic.IList`1<System.Reflection.CustomAttributeData> GetCustomAttributesData()

Disassembly:
	0x032DFF90 MOV X1, X0

ISIL:
	001 Call CustomAttributeData.GetCustomAttributes, X0
	002 Return X0

Method: System.Int32 get_MetadataToken()

Disassembly:
	0x032DFF94 MOV X0, X19

ISIL:
	001 Call 0x1C728C4
	002 Return X0

Method: System.Int32 get_metadata_token(System.Reflection.RuntimePropertyInfo monoProperty)

Disassembly:
	0x032DFF98 BL 0x1C16DEC

ISIL:
	001 Call 0x1C728C4
	002 Return X0

Method: System.Reflection.PropertyInfo internal_from_handle_type(System.IntPtr event_handle, System.IntPtr type_handle)

Disassembly:
	0x032DFF9C STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Call 0x1C953D8
	002 Return X0

Method: System.Reflection.PropertyInfo GetPropertyFromHandle(Mono.RuntimePropertyHandle handle, System.RuntimeTypeHandle reflectedType)

Disassembly:
	0x032DFFA0 ADRP X0, 0xE3F000
	0x032DFFA4 LDR X0, [X0 + 0xC50]
	0x032DFFA8 BL 0x1C16D08
	0x032DFFAC BL 0x1C16F10
	0x032DFFB0 MOV X1, X31
	0x032DFFB4 MOV X19, X0
	0x032DFFB8 BL 0x338E344
	0x032DFFBC ADRP X0, 0xE47000
	0x032DFFC0 LDR X0, [X0 + 0x8C8]
	0x032DFFC4 BL 0x1C16D08
	0x032DFFC8 MOV X1, X0
	0x032DFFCC MOV X0, X19
	0x032DFFD0 BL 0x1C16DEC
	0x032DFFD4 STP X30, X19, [X31 - 0x10]!
	0x032DFFD8 ADRP X0, 0xE3F000
	0x032DFFDC LDR X0, [X0 + 0xC50]
	0x032DFFE0 BL 0x1C16D08
	0x032DFFE4 BL 0x1C16F10
	0x032DFFE8 MOV X1, X31
	0x032DFFEC MOV X19, X0
	0x032DFFF0 BL 0x338E344
	0x032DFFF4 ADRP X0, 0xE47000
	0x032DFFF8 LDR X0, [X0 + 0x8D0]
	0x032DFFFC BL 0x1C16D08
	0x032E0000 MOV X1, X0
	0x032E0004 MOV X0, X19
	0x032E0008 BL 0x1C16DEC
	0x032E000C STP X30, X19, [X31 - 0x10]!
	0x032E0010 ADRP X0, 0xE3E000
	0x032E0014 LDR X0, [X0 + 0xC50]
	0x032E0018 BL 0x1C16D08
	0x032E001C BL 0x1C16F10
	0x032E0020 MOV X1, X31
	0x032E0024 MOV X19, X0
	0x032E0028 BL 0x338E344
	0x032E002C ADRP X0, 0xE46000
	0x032E0030 LDR X0, [X0 + 0x8D8]
	0x032E0034 BL 0x1C16D08
	0x032E0038 MOV X1, X0
	0x032E003C MOV X0, X19
	0x032E0040 BL 0x1C16DEC
	0x032E0044 STP X30, X19, [X31 - 0x10]!
	0x032E0048 ADRP X0, 0xE3E000
	0x032E004C LDR X0, [X0 + 0xC50]
	0x032E0050 BL 0x1C16D08
	0x032E0054 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X2, X31
	007 Move X20, X0
	008 Call IntPtr.op_Equality, X0, X1
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {29}
	013 Move X0, X20
	014 Move X1, X19
	015 Call 0x1C953D8
	016 Move X1, X31
	017 Move X2, X31
	018 Move X19, X0
	019 Call PropertyInfo.op_Equality, X0, X1
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {36}
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return X0
	029 Move X0, 0xE1D000
	030 Move X0, [X0+1400]
	031 Call 0x1C17D08
	032 Call 0x1C17F10
	033 Move X19, X0
	034 Move X0, 0xE46000
	035 Move X0, [X0+3088]
	036 Move X0, 0xE1C000
	037 Move X0, [X0+1400]
	038 Call 0x1C17D08
	039 Call 0x1C17F10
	040 Move X19, X0
	041 Move X0, 0xE47000
	042 Move X0, [X0+1800]
	043 Call 0x1C17D08
	044 Move X1, X0
	045 Move X0, X19
	046 Move X2, X31
	047 Call ArgumentException..ctor, X0, X1
	048 Move X0, 0xE47000
	049 Move X0, [X0+1808]
	050 Call 0x1C17D08
	051 Move X1, X0
	052 Move X0, X19
	053 Call 0x1C17DEC

Method: System.Void .ctor()

Disassembly:
	0x032E0058 MOV X1, X31
	0x032E005C MOV X19, X0

ISIL:
	001 Move X1, X31
	002 Call PropertyInfo..ctor, X0
	003 Return 

