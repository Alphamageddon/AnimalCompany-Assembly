Type: System.TimeZoneInfo

Method: System.Void .ctor(System.Byte[] data, System.String id, System.Boolean dstDisabled)

Disassembly:
	0x03308D44 BL 0x3EB1B00
	0x03308D48 MOV X19, X0
	0x03308D4C BL 0x3EB1AE0
	0x03308D50 MOV X0, X19
	0x03308D54 BL 0x1D2C690
	0x03308D58 BL 0x1990590
	0x03308D5C STP X30, X23, [X31 - 0x30]!
	0x03308D60 STP X22, X21, [X31 + 0x10]
	0x03308D64 STP X20, X19, [X31 + 0x20]
	0x03308D68 ADRP X21, 0x10D4000
	0x03308D6C ADRP X23, 0xE1F000
	0x03308D70 LDRB W8, [X21 + 0xB04]
	0x03308D74 LDR X23, [X23 + 0xA38]
	0x03308D78 MOV X19, X1
	0x03308D7C MOV X20, X0
	0x03308D80 TBNZ X8, 0x0, 0x3308DBC
	0x03308D84 ADRP X0, 0xE12000
	0x03308D88 LDR X0, [X0 + 0x1D0]
	0x03308D8C BL 0x1C16CF4
	0x03308D90 ADRP X0, 0xE1F000
	0x03308D94 LDR X0, [X0 + 0xA38]
	0x03308D98 BL 0x1C16CF4
	0x03308D9C ADRP X0, 0xE1F000
	0x03308DA0 LDR X0, [X0 + 0xAB0]
	0x03308DA4 BL 0x1C16CF4
	0x03308DA8 ADRP X0, 0xE1F000
	0x03308DAC LDR X0, [X0 + 0xAB8]
	0x03308DB0 BL 0x1C16CF4
	0x03308DB4 MOVZ W8, 0x1
	0x03308DB8 STRB W8, [X21 + 0xB04]
	0x03308DBC STR X31, [X20]
	0x03308DC0 STR X31, [X19]
	0x03308DC4 LDR X0, [X23]
	0x03308DC8 LDR W8, [X0 + 0xE0]
	0x03308DCC CBNZ W8, 0x3308DD4
	0x03308DD0 BL 0x1C16DFC
	0x03308DD4 BL 0x3308F14
	0x03308DD8 CBZ X0, 0x3308E68
	0x03308DDC LDR W8, [X0 + 0x10]
	0x03308DE0 MOV X21, X0
	0x03308DE4 CBZ W8, 0x3308E9C
	0x03308DE8 MOV X0, X21
	0x03308DEC MOV W1, W31
	0x03308DF0 MOV X2, X31
	0x03308DF4 BL 0x3222A1C
	0x03308DF8 AND W8, W0, 0xFFFF
	0x03308DFC CMP W8, 0x2F
	0x03308E00 B.EQ 0x3308E50
	0x03308E04 STR X21, [X19]
	0x03308E08 LDR X0, [X23]
	0x03308E0C LDR W8, [X0 + 0xE0]
	0x03308E10 CBNZ W8, 0x3308E18
	0x03308E14 BL 0x1C16DFC
	0x03308E18 BL 0x330913C
	0x03308E1C ADRP X8, 0xE12000
	0x03308E20 LDR X8, [X8 + 0x1D0]
	0x03308E24 MOV X22, X0
	0x03308E28 LDR X8, [X8]
	0x03308E2C LDR W9, [X8 + 0xE0]
	0x03308E30 CBNZ W9, 0x3308E3C
	0x03308E34 MOV X0, X8
	0x03308E38 BL 0x1C16DFC
	0x03308E3C MOV X0, X22
	0x03308E40 MOV X1, X21
	0x03308E44 MOV X2, X31
	0x03308E48 BL 0x32FCE04
	0x03308E4C MOV X21, X0
	0x03308E50 LDR X0, [X23]
	0x03308E54 LDR W8, [X0 + 0xE0]
	0x03308E58 CBNZ W8, 0x3308E60
	0x03308E5C BL 0x1C16DFC
	0x03308E60 MOV X0, X21
	0x03308E64 B 0x3308EFC
	0x03308E68 LDR X0, [X23]
	0x03308E6C LDR W8, [X0 + 0xE0]
	0x03308E70 CBNZ W8, 0x3308E78
	0x03308E74 BL 0x1C16DFC
	0x03308E78 ADRP X8, 0xE1F000
	0x03308E7C LDR X8, [X8 + 0xAB0]
	0x03308E80 MOV X1, X20
	0x03308E84 MOV X2, X19
	0x03308E88 LDR X0, [X8]
	0x03308E8C BL 0x3308FAC
	0x03308E90 TBZ X0, 0x0, 0x3308EB0
	0x03308E94 MOVZ W0, 0x1
	0x03308E98 B 0x3308EA0
	0x03308E9C MOV W0, W31
	0x03308EA0 LDP X20, X19, [X31 + 0x20]
	0x03308EA4 LDP X22, X21, [X31 + 0x10]
	0x03308EA8 LDP X30, X23, [X31], #0x30
	0x03308EAC RET
	0x03308EB0 LDR X0, [X23]
	0x03308EB4 LDR W8, [X0 + 0xE0]
	0x03308EB8 CBNZ W8, 0x3308EC0
	0x03308EBC BL 0x1C16DFC
	0x03308EC0 BL 0x330913C
	0x03308EC4 ADRP X8, 0xE12000
	0x03308EC8 LDR X8, [X8 + 0x1D0]
	0x03308ECC MOV X21, X0
	0x03308ED0 LDR X8, [X8]
	0x03308ED4 LDR W9, [X8 + 0xE0]
	0x03308ED8 CBNZ W9, 0x3308EE4
	0x03308EDC MOV X0, X8
	0x03308EE0 BL 0x1C16DFC
	0x03308EE4 ADRP X8, 0xE1F000
	0x03308EE8 LDR X8, [X8 + 0xAB8]
	0x03308EEC MOV X0, X21
	0x03308EF0 MOV X2, X31
	0x03308EF4 LDR X1, [X8]
	0x03308EF8 BL 0x32FCE04
	0x03308EFC MOV X1, X20
	0x03308F00 MOV X2, X19
	0x03308F04 LDP X20, X19, [X31 + 0x20]
	0x03308F08 LDP X22, X21, [X31 + 0x10]
	0x03308F0C LDP X30, X23, [X31], #0x30
	0x03308F10 B 0x3308FAC
	0x03308F14 STR X30, [X31 - 0x20]!
	0x03308F18 STP X20, X19, [X31 + 0x10]
	0x03308F1C ADRP X19, 0x10D4000
	0x03308F20 ADRP X20, 0xE1F000
	0x03308F24 LDRB W8, [X19 + 0xB05]
	0x03308F28 LDR X20, [X20 + 0xAC0]
	0x03308F2C TBNZ X8, 0x0, 0x3308F44
	0x03308F30 ADRP X0, 0xE1F000
	0x03308F34 LDR X0, [X0 + 0xAC0]
	0x03308F38 BL 0x1C16CF4
	0x03308F3C MOVZ W8, 0x1
	0x03308F40 STRB W8, [X19 + 0xB05]
	0x03308F44 LDR X0, [X20]
	0x03308F48 MOV X1, X31
	0x03308F4C BL 0x33C19D0
	0x03308F50 MOV X1, X31
	0x03308F54 MOV X19, X0
	0x03308F58 BL 0x32277A8
	0x03308F5C TBNZ X0, 0x0, 0x3308F98
	0x03308F60 CBZ X19, 0x3308FA8
	0x03308F64 MOV X0, X19
	0x03308F68 MOV W1, W31
	0x03308F6C MOV X2, X31
	0x03308F70 BL 0x3222A1C
	0x03308F74 AND W8, W0, 0xFFFF
	0x03308F78 CMP W8, 0x3A
	0x03308F7C B.NE 0x3308F98
	0x03308F80 MOV X0, X19
	0x03308F84 LDP X20, X19, [X31 + 0x10]
	0x03308F88 MOVZ W1, 0x1
	0x03308F8C MOV X2, X31
	0x03308F90 LDR X30, [X31], #0x20
	0x03308F94 B 0x322B484
	0x03308F98 MOV X0, X19
	0x03308F9C LDP X20, X19, [X31 + 0x10]
	0x03308FA0 LDR X30, [X31], #0x20
	0x03308FA4 RET
	0x03308FA8 BL 0x1C16F20
	0x03308FAC STR X30, [X31 - 0x30]!
	0x03308FB0 STP X22, X21, [X31 + 0x10]
	0x03308FB4 STP X20, X19, [X31 + 0x20]
	0x03308FB8 ADRP X22, 0x10D4000
	0x03308FBC LDRB W8, [X22 + 0xB06]
	0x03308FC0 MOV X19, X2
	0x03308FC4 MOV X20, X1
	0x03308FC8 MOV X21, X0
	0x03308FCC TBNZ X8, 0x0, 0x3308FE4
	0x03308FD0 ADRP X0, 0xE1F000
	0x03308FD4 LDR X0, [X0 + 0xA38]
	0x03308FD8 BL 0x1C16CF4
	0x03308FDC MOVZ W8, 0x1
	0x03308FE0 STRB W8, [X22 + 0xB06]
	0x03308FE4 MOV X0, X21
	0x03308FE8 MOV X1, X31
	0x03308FEC BL 0x32E57A8
	0x03308FF0 TBZ X0, 0x0, 0x33090F4
	0x03308FF4 MOV X0, X21
	0x03308FF8 MOV X1, X31
	0x03308FFC BL 0x32ED764
	0x03309000 STR X0, [X20]
	0x03309004 LDR X0, [X19]
	0x03309008 MOV X1, X31
	0x0330900C BL 0x32277A8
	0x03309010 TBZ X0, 0x0, 0x3309064
	0x03309014 ADRP X22, 0xE1E000
	0x03309018 LDR X22, [X22 + 0xA38]
	0x0330901C LDR X0, [X22]
	0x03309020 LDR W8, [X0 + 0xE0]
	0x03309024 CBNZ W8, 0x330902C
	0x03309028 BL 0x1C16DFC
	0x0330902C MOV X0, X21
	0x03309030 BL 0x33092AC
	0x03309034 STR X0, [X19]
	0x03309038 MOV X1, X31
	0x0330903C BL 0x32277A8
	0x03309040 TBZ X0, 0x0, 0x3309064
	0x03309044 LDR X0, [X22]
	0x03309048 LDR X20, [X20]
	0x0330904C LDR W8, [X0 + 0xE0]
	0x03309050 CBNZ W8, 0x3309058
	0x03309054 BL 0x1C16DFC
	0x03309058 MOV X0, X20
	0x0330905C BL 0x33093B8
	0x03309060 STR X0, [X19]
	0x03309064 MOVZ W0, 0x1
	0x03309068 B 0x33090F8
	0x0330906C B 0x3309084
	0x03309070 B 0x3309084
	0x03309074 B 0x3309084
	0x03309078 B 0x3309084
	0x0330907C B 0x3309084
	0x03309080 B 0x3309084
	0x03309084 MOV X19, X0
	0x03309088 CMP W1, 0x1
	0x0330908C B.NE 0x3309130
	0x03309090 MOV X0, X19
	0x03309094 BL 0x3EB1AD0
	0x03309098 MOV X19, X0
	0x0330909C ADRP X0, 0xE18000
	0x033090A0 LDR X0, [X0 + 0x7A8]
	0x033090A4 BL 0x1C16D08
	0x033090A8 LDR X8, [X19]
	0x033090AC LDR X1, [X8]
	0x033090B0 BL 0x1C17270
	0x033090B4 TBNZ X0, 0x0, 0x33090F0
	0x033090B8 ADRP X0, 0xE18000
	0x033090BC LDR X0, [X0 + 0x690]
	0x033090C0 BL 0x1C16D08
	0x033090C4 LDR X8, [X19]
	0x033090C8 LDR X1, [X8]
	0x033090CC BL 0x1C17270
	0x033090D0 TBNZ X0, 0x0, 0x33090F0
	0x033090D4 ADRP X0, 0xE18000
	0x033090D8 LDR X0, [X0 + 0x7B8]
	0x033090DC BL 0x1C16D08
	0x033090E0 LDR X8, [X19]
	0x033090E4 LDR X1, [X8]
	0x033090E8 BL 0x1C17270
	0x033090EC TBZ X0, 0x0, 0x3309108
	0x033090F0 BL 0x3EB1AE0
	0x033090F4 MOV W0, W31
	0x033090F8 LDP X20, X19, [X31 + 0x20]
	0x033090FC LDP X22, X21, [X31 + 0x10]
	0x03309100 LDR X30, [X31], #0x30
	0x03309104 RET
	0x03309108 MOVZ W0, 0x8
	0x0330910C BL 0x3EB1AF0
	0x03309110 LDR X8, [X19]
	0x03309114 STR X8, [X0]
	0x03309118 ADRP X1, 0xBAB000
	0x0330911C ADD X1, X1, 0xE58
	0x03309120 MOV X2, X31
	0x03309124 BL 0x3EB1B00
	0x03309128 MOV X19, X0
	0x0330912C BL 0x3EB1AE0
	0x03309130 MOV X0, X19
	0x03309134 BL 0x1D2C690
	0x03309138 BL 0x1990590
	0x0330913C STR X30, [X31 - 0x20]!
	0x03309140 STP X20, X19, [X31 + 0x10]
	0x03309144 ADRP X19, 0x10D3000
	0x03309148 ADRP X20, 0xE1E000
	0x0330914C LDRB W8, [X19 + 0xB0E]
	0x03309150 LDR X20, [X20 + 0xA38]
	0x03309154 TBNZ X8, 0x0, 0x330919C
	0x03309158 ADRP X0, 0xDEC000
	0x0330915C LDR X0, [X0 + 0x170]
	0x03309160 BL 0x1C16CF4
	0x03309164 ADRP X0, 0xE11000
	0x03309168 LDR X0, [X0 + 0x1D0]
	0x0330916C BL 0x1C16CF4
	0x03309170 ADRP X0, 0xE1E000
	0x03309174 LDR X0, [X0 + 0xA38]
	0x03309178 BL 0x1C16CF4
	0x0330917C ADRP X0, 0xE1E000
	0x03309180 LDR X0, [X0 + 0xAC8]
	0x03309184 BL 0x1C16CF4
	0x03309188 ADRP X0, 0xE1E000
	0x0330918C LDR X0, [X0 + 0xAD0]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X20, 0x10D5000
	015 Move X29, 0xE20000
	016 Move W8, [X20+2818]
	017 Move X29, [X29+2616]
	018 Move W23, W3
	019 Move X21, X2
	020 Move X22, X1
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {40}
	026 Move X0, 0xDED000
	027 Move X0, [X0+2544]
	028 Call 0x1C17CF4
	029 Move X0, 0xDEE000
	030 Move X0, [X0+1392]
	031 Call 0x1C17CF4
	032 Move X0, 0xE20000
	033 Move X0, [X0+2616]
	034 Call 0x1C17CF4
	035 Move X0, 0xE20000
	036 Move X0, [X0+2624]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+2818], W8
	040 Move X20, 0xE20000
	041 Move X24, 0xDEE000
	042 Move X20, [X20+2624]
	043 Move X24, [X24+1392]
	044 NotImplemented "Instruction MOVI not yet implemented."
	045 Move X0, X19
	046 Move X1, X31
	047 Move [X31+80], X31
	048 Move [X31+88], X31
	049 Move [X31+64], X31
	050 Move [X31+72], X31
	051 Move [X31+48], X31
	052 Move [X31+56], X31
	053 Move [X31+96], V0
	054 Move [X31+104], V0
	055 Move [X31+40], X31
	056 Call Object..ctor, X0
	057 Move X0, [X29]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Add X8, X31, 40
	063 Add X1, X31, 96
	064 Add X2, X31, 88
	065 Add X3, X31, 80
	066 Add X4, X31, 72
	067 Add X5, X31, 64
	068 Add X6, X31, 56
	069 Add X7, X31, 48
	070 Move X0, X22
	071 Move [X31], X8
	072 Call TimeZoneInfo.TZif_ParseRaw, X0, X1, X2, X3, X4, X5, X6, X7, X8
	073 Move X8, [X20]
	074 Move [X19+16], X21
	075 Move [X19+24], X8
	076 Move X0, [X24]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {82}
	080 Call 0x1C17DFC
	081 Move X0, [X24]
	082 Move X8, [X0+184]
	083 Move X8, [X8]
	084 Move [X19+48], X8
	085 Move X8, 0xDED000
	086 Move X8, [X8+2544]
	087 Move X0, [X8]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move X0, X31
	093 Call DateTime.get_UtcNow
	094 Move X21, [X31+88]
	095 Compare X21, 0
	096 JumpIfEqual {309}
	097 Move X8, [X21+24]
	098 Move [X31+20], W23
	099 Move X23, [X31+72]
	100 Move X22, [X31+80]
	101 Move X24, [X31+64]
	102 Add X20, X19, 40
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Add X9, X19, 32
	105 Move [X31+24], X9
	106 Move X25, X0
	107 Move W9, W31
	108 Move X27, X29
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X8, 0xDED000
	111 Move X8, [X8+2544]
	112 Move X28, W9
	113 Move X0, [X8]
	114 Add X8, X21, X28
	115 Move X26, [X8+32]
	116 Move W9, [X0+224]
	117 Compare W9, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1C17DFC
	120 Move X0, X26
	121 Move X1, X25
	122 Move X2, X31
	123 Call DateTime.op_LessThanOrEqual, X0, X1
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {173}
	128 Compare X22, 0
	129 JumpIfEqual {309}
	130 Move W8, [X22+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Compare X23, 0
	133 JumpIfEqual {309}
	134 Add X8, X22, X28
	135 Move W8, [X8+32]
	136 Move W9, [X23+24]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Add X9, X23, W8
	139 Move W10, [X9+40]
	140 Move W9, W8
	141 Compare W10, 0
	142 JumpIfEqual {151}
	143 Move X0, [X29]
	144 Add X8, X23, X9
	145 Move W26, [X8+41]
	146 Move W9, [X0+224]
	147 Compare W9, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Move X29, X20
	151 Add X9, X23, X9
	152 Move X10, [X9+32]
	153 Move [X19+48], X10
	154 Move W10, [X23+24]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move X0, [X29]
	157 Move W26, [X9+41]
	158 Move W8, [X0+224]
	159 Compare W8, 0
	160 JumpIfNotEqual {162}
	161 Call 0x1C17DFC
	162 Move X29, [X31+24]
	163 Move X0, X24
	164 Move W1, W26
	165 Call TimeZoneInfo.TZif_GetZoneAbbreviation, X0, X1
	166 Move [X29], X0
	167 Move X8, [X21+24]
	168 Add W9, W28, 1
	169 Move X29, X27
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Compare X8, 0
	172 JumpIfNotEqual {213}
	173 Move X8, [X21+24]
	174 Compare X8, 0
	175 JumpIfNotEqual {213}
	176 Compare X23, 0
	177 JumpIfEqual {309}
	178 Move X8, [X23+24]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X26, X31
	181 And X8, X8, 0
	182 Add X27, X23, 41
	183 NotImplemented "Instruction CMP not yet implemented."
	184 NotImplemented "Instruction LDURB not yet implemented."
	185 Compare W8, 0
	186 JumpIfEqual {194}
	187 Move X0, [X29]
	188 Move W25, [X27]
	189 Move W8, [X0+224]
	190 Compare W8, 0
	191 JumpIfNotEqual {193}
	192 Call 0x1C17DFC
	193 Move X28, X20
	194 NotImplemented "Instruction LDUR not yet implemented."
	195 Move [X19+48], X8
	196 Move W8, [X23+24]
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move X0, [X29]
	199 Move W25, [X27]
	200 Move W8, [X0+224]
	201 Compare W8, 0
	202 JumpIfNotEqual {204}
	203 Call 0x1C17DFC
	204 Move X28, [X31+24]
	205 Move X0, X24
	206 Move W1, W25
	207 Call TimeZoneInfo.TZif_GetZoneAbbreviation, X0, X1
	208 Move [X28], X0
	209 Move W8, [X23+24]
	210 Add X26, X26, 1
	211 Add X27, X27, 16
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Move X8, [X19+32]
	214 Move X26, 0xDED000
	215 Add X25, X19, 48
	216 Move [X19+24], X8
	217 Move X26, [X26+1392]
	218 Move X0, [X26]
	219 Move W8, [X0+224]
	220 Compare W8, 0
	221 JumpIfNotEqual {223}
	222 Call 0x1C17DFC
	223 Move X24, [X25]
	224 Move X8, 0x5A0B
	225 NotImplemented "Instruction MOVK not yet implemented."
	226 Move X9, 4096
	227 NotImplemented "Instruction MOVK not yet implemented."
	228 NotImplemented "Instruction MOVK not yet implemented."
	229 NotImplemented "Instruction MOVK not yet implemented."
	230 NotImplemented "Instruction MOVK not yet implemented."
	231 NotImplemented "Instruction MADD not yet implemented."
	232 Move X9, 0xF611
	233 Move W20, [X31+20]
	234 NotImplemented "Instruction MOVK not yet implemented."
	235 NotImplemented "Instruction EXTR not yet implemented."
	236 NotImplemented "Instruction MOVK not yet implemented."
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move X0, [X26]
	239 Move W8, [X0+224]
	240 Compare W8, 0
	241 JumpIfNotEqual {243}
	242 Call 0x1C17DFC
	243 Move X0, X25
	244 Move X1, X31
	245 Call TimeSpan.get_Hours, X0
	246 Move W24, W0
	247 Move X0, X25
	248 Move X1, X31
	249 Call TimeSpan.get_Minutes, X0
	250 Move W2, W0
	251 Add X0, X31, 32
	252 Move W1, W24
	253 Move W3, W31
	254 Move X4, X31
	255 Move [X31+32], X31
	256 Call TimeSpan..ctor, X0, X1, X2, X3
	257 Move X24, [X31+32]
	258 Move [X25], X24
	259 Move TEMP, X20
	260 And TEMP, TEMP, 1
	261 Compare TEMP, 1
	262 JumpIfEqual {282}
	263 Move X0, [X29]
	264 Move X25, [X31+48]
	265 Move X26, [X31+56]
	266 Move X20, [X31+40]
	267 Add X27, X19, 64
	268 Move W8, [X0+224]
	269 Compare W8, 0
	270 JumpIfNotEqual {272}
	271 Call 0x1C17DFC
	272 Move X0, X27
	273 Move X1, X24
	274 Move X2, X21
	275 Move X3, X22
	276 Move X4, X23
	277 Move X5, X26
	278 Move X6, X25
	279 Move X7, X20
	280 Call TimeZoneInfo.TZif_GenerateAdjustmentRules, X0, X1, X2, X3, X4, X5, X6, X7
	281 Move X24, [X19+48]
	282 Move X0, [X29]
	283 Move X21, [X19+16]
	284 Move X20, [X19+64]
	285 Move W8, [X0+224]
	286 Compare W8, 0
	287 JumpIfNotEqual {289}
	288 Call 0x1C17DFC
	289 Add X3, X19, 56
	290 Move X0, X21
	291 Move X1, X24
	292 Move X2, X20
	293 Call TimeZoneInfo.ValidateTimeZoneInfo, X0, X1, X2, X3
	294 Move X20, [X31+208]
	295 Move X19, [X31+216]
	296 Move X22, [X31+192]
	297 Move X21, [X31+200]
	298 Move X24, [X31+176]
	299 Move X23, [X31+184]
	300 Move X26, [X31+160]
	301 Move X25, [X31+168]
	302 Move X28, [X31+144]
	303 Move X27, [X31+152]
	304 Move X29, [X31+128]
	305 Move X30, [X31+136]
	306 Add X31, X31, 224
	307 Return 
	308 Call 0x1C17F28
	309 Call 0x1C17F20

Method: System.TimeZoneInfo GetLocalTimeZone(System.TimeZoneInfo/CachedData cachedData)

Disassembly:
	0x03309BAC MOV X21, X1
	0x03309BB0 CMP W21, 0x1
	0x03309BB4 B.NE 0x3309BCC
	0x03309BB8 BL 0x3EB1AD0
	0x03309BBC LDR X25, [X0]
	0x03309BC0 BL 0x3EB1AE0
	0x03309BC4 MOV W21, W31
	0x03309BC8 B 0x3309AEC
	0x03309BCC MOV X19, X0
	0x03309BD0 MOV X25, X31
	0x03309BD4 MOV X0, X24
	0x03309BD8 MOV X1, X31
	0x03309BDC MOV X2, X31
	0x03309BE0 BL 0x33C5D2C
	0x03309BE4 TBZ X0, 0x0, 0x3309C04
	0x03309BE8 LDR X0, [X26]
	0x03309BEC LDR W8, [X0 + 0xE0]
	0x03309BF0 CBNZ W8, 0x3309BF8
	0x03309BF4 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x10D4000
	005 Move X20, 0xE1F000
	006 Move W8, [X19+2819]
	007 Move X20, [X20+2616]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE1F000
	013 Move X0, [X0+2616]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2819], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]

Method: System.Boolean TryGetLocalTzFile(out System.Byte[] rawData, out System.String id)

Disassembly:
	0x03309D5C STP X20, X19, [X31 + 0x30]
	0x03309D60 ADRP X19, 0x10D3000
	0x03309D64 ADRP X23, 0xE18000
	0x03309D68 LDRB W8, [X19 + 0xB0B]
	0x03309D6C LDR X23, [X23 + 0x670]
	0x03309D70 MOV X20, X2
	0x03309D74 MOV X21, X1
	0x03309D78 MOV X22, X0
	0x03309D7C TBNZ X8, 0x0, 0x3309DA0
	0x03309D80 ADRP X0, 0xE18000
	0x03309D84 LDR X0, [X0 + 0x670]
	0x03309D88 BL 0x1C16CF4
	0x03309D8C ADRP X0, 0xDEA000
	0x03309D90 LDR X0, [X0 + 0xE00]
	0x03309D94 BL 0x1C16CF4
	0x03309D98 MOVZ W8, 0x1
	0x03309D9C STRB W8, [X19 + 0xB0B]
	0x03309DA0 LDR X0, [X23]
	0x03309DA4 BL 0x1C16F10
	0x03309DA8 MOV X19, X0
	0x03309DAC MOVZ W2, 0x3
	0x03309DB0 MOVZ W3, 0x1
	0x03309DB4 MOVZ W4, 0x1
	0x03309DB8 MOVZ W5, 0x1
	0x03309DBC MOV X1, X22
	0x03309DC0 MOV X6, X31
	0x03309DC4 BL 0x32F89E8
	0x03309DC8 ADRP X24, 0xDEA000
	0x03309DCC LDR X24, [X24 + 0xE00]
	0x03309DD0 CBZ X19, 0x3309F6C
	0x03309DD4 LDR X8, [X19]
	0x03309DD8 LDP X9, X1, [X8 + 0x1E8]
	0x03309DDC MOV X0, X19
	0x03309DE0 BLR X9
	0x03309DE4 CBZ X20, 0x3309F70
	0x03309DE8 LDR X22, [X20 + 0x18]
	0x03309DEC CMP X0, W22, SXTW
	0x03309DF0 B.NE 0x3309E9C
	0x03309DF4 CMP W22, 0x1
	0x03309DF8 B.LT 0x3309EC0
	0x03309DFC MOV W23, W31
	0x03309E00 LDR X8, [X19]
	0x03309E04 LDR X9, [X8 + 0x358]
	0x03309E08 LDR X4, [X8 + 0x360]
	0x03309E0C MOV X0, X19
	0x03309E10 MOV X1, X21
	0x03309E14 MOV W2, W23
	0x03309E18 MOV W3, W22
	0x03309E1C BLR X9
	0x03309E20 CBZ W0, 0x3309F48
	0x03309E24 ADD W8, W0, W23
	0x03309E28 CMP W23, W8
	0x03309E2C B.GE 0x3309E7C
	0x03309E30 CBZ X21, 0x3309F7C
	0x03309E34 LDR W9, [X21 + 0x18]
	0x03309E38 MOV W10, W0
	0x03309E3C CMP W23, W9
	0x03309E40 B.CS 0x3309F44
	0x03309E44 LDR W12, [X20 + 0x18]
	0x03309E48 SXTW X11, W23
	0x03309E4C CMP W11, W12
	0x03309E50 B.CS 0x3309F40
	0x03309E54 ADD X12, X21, X11
	0x03309E58 ADD X13, X20, X11
	0x03309E5C LDRB W12, [X12 + 0x20]
	0x03309E60 LDRB W13, [X13 + 0x20]
	0x03309E64 CMP W12, W13
	0x03309E68 B.NE 0x3309EAC
	0x03309E6C SUBS W10, W10, 0x1
	0x03309E70 ADD W23, W11, 0x1
	0x03309E74 B.NE 0x3309E3C
	0x03309E78 MOV W23, W8
	0x03309E7C SUB W22, W22, W0
	0x03309E80 CMP W22, 0x0
	0x03309E84 B.GT 0x3309E00
	0x03309E88 MOV X20, X31
	0x03309E8C MOVZ W21, 0x1
	0x03309E90 MOVZ W22, 0x1
	0x03309E94 CBNZ X19, 0x3309ECC
	0x03309E98 B 0x3309F24
	0x03309E9C MOV W22, W31
	0x03309EA0 MOV W21, W31
	0x03309EA4 MOV X20, X31
	0x03309EA8 B 0x3309ECC
	0x03309EAC MOV X20, X31
	0x03309EB0 MOV W22, W31
	0x03309EB4 MOVZ W21, 0x1
	0x03309EB8 CBNZ X19, 0x3309ECC
	0x03309EBC B 0x3309F24
	0x03309EC0 MOV X20, X31
	0x03309EC4 MOVZ W22, 0x1
	0x03309EC8 MOVZ W21, 0x1
	0x03309ECC LDR X8, [X19]
	0x03309ED0 LDR X1, [X24]
	0x03309ED4 LDRH W9, [X8 + 0x12E]
	0x03309ED8 CBZ X9, 0x3309EFC
	0x03309EDC LDR X10, [X8 + 0xB0]
	0x03309EE0 ADD X10, X10, 0x8
	0x03309EE4 LDUR X11, [X10 - 0x8]
	0x03309EE8 CMP X11, X1
	0x03309EEC B.EQ 0x3309F0C
	0x03309EF0 SUBS X9, X9, 0x1
	0x03309EF4 ADD X10, X10, 0x10
	0x03309EF8 B.NE 0x3309EE4
	0x03309EFC MOV X0, X19
	0x03309F00 MOV W2, W31
	0x03309F04 BL 0x1C5C788
	0x03309F08 B 0x3309F18
	0x03309F0C LDRSW X9, [X10]
	0x03309F10 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x10D4000
	008 Move X23, 0xE1F000
	009 Move W8, [X21+2820]
	010 Move X23, [X23+2616]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xE12000
	018 Move X0, [X0+464]
	019 Call 0x1C17CF4
	020 Move X0, 0xE1F000
	021 Move X0, [X0+2616]
	022 Call 0x1C17CF4
	023 Move X0, 0xE1F000
	024 Move X0, [X0+2736]
	025 Call 0x1C17CF4
	026 Move X0, 0xE1F000
	027 Move X0, [X0+2744]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+2820], W8
	031 Move [X20], X31
	032 Move [X19], X31
	033 Move X0, [X23]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Call TimeZoneInfo.GetTzEnvironmentVariable
	039 Compare X0, 0
	040 JumpIfEqual {78}
	041 Move W8, [X0+16]
	042 Move X21, X0
	043 Compare W8, 0
	044 JumpIfEqual {94}
	045 Move X0, X21
	046 Move W1, W31
	047 Move X2, X31
	048 Call String.get_Chars, X0, X1
	049 And W8, W0, 0xFFFF
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move [X19], X21
	052 Move X0, [X23]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Call TimeZoneInfo.GetTimeZoneDirectory
	058 Move X8, 0xE12000
	059 Move X8, [X8+464]
	060 Move X22, X0
	061 Move X8, [X8]
	062 Move W9, [X8+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X8
	066 Call 0x1C17DFC
	067 Move X0, X22
	068 Move X1, X21
	069 Move X2, X31
	070 Call Path.Combine, X0, X1
	071 Move X21, X0
	072 Move X0, [X23]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, X21
	078 Move X0, [X23]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X8, 0xE1F000
	084 Move X8, [X8+2736]
	085 Move X1, X20
	086 Move X2, X19
	087 Move X0, [X8]
	088 Call TimeZoneInfo.TryLoadTzFile, X0, X1, X2
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {102}
	093 Move W0, 1
	094 Move W0, W31
	095 Move X20, [X31+32]
	096 Move X19, [X31+40]
	097 Move X22, [X31+16]
	098 Move X21, [X31+24]
	099 Move X30, [X31+48]
	100 Move X23, [X31+56]
	101 Return X0
	102 Move X0, [X23]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Call TimeZoneInfo.GetTimeZoneDirectory
	108 Move X8, 0xE12000
	109 Move X8, [X8+464]
	110 Move X21, X0
	111 Move X8, [X8]
	112 Move W9, [X8+224]
	113 Compare W9, 0
	114 JumpIfNotEqual {117}
	115 Move X0, X8
	116 Call 0x1C17DFC
	117 Move X8, 0xE1F000
	118 Move X8, [X8+2744]
	119 Move X0, X21
	120 Move X2, X31
	121 Move X1, [X8]
	122 Call Path.Combine, X0, X1
	123 Move X1, X20
	124 Move X2, X19
	125 Move X20, [X31+32]
	126 Move X19, [X31+40]
	127 Move X22, [X31+16]
	128 Move X21, [X31+24]
	129 Move X30, [X31+48]
	130 Move X23, [X31+56]
	131 Call TimeZoneInfo.TryLoadTzFile, X0, X1, X2
	132 Return X0

Method: System.String GetTzEnvironmentVariable()

Disassembly:
	0x03309F14 ADD X0, X8, 0x138
	0x03309F18 LDP X8, X1, [X0]
	0x03309F1C MOV X0, X19
	0x03309F20 BLR X8
	0x03309F24 CBNZ X20, 0x3309F74
	0x03309F28 AND W0, W21, W22, 0x0
	0x03309F2C LDP X20, X19, [X31 + 0x30]
	0x03309F30 LDP X22, X21, [X31 + 0x20]
	0x03309F34 LDP X24, X23, [X31 + 0x10]
	0x03309F38 LDR X30, [X31], #0x40
	0x03309F3C RET
	0x03309F40 BL 0x1C16F28
	0x03309F44 BL 0x1C16F28
	0x03309F48 MOV X0, X31
	0x03309F4C BL 0x32E180C
	0x03309F50 MOV X20, X0
	0x03309F54 ADRP X0, 0xE1E000
	0x03309F58 LDR X0, [X0 + 0xB08]
	0x03309F5C BL 0x1C16D08
	0x03309F60 MOV X1, X0
	0x03309F64 MOV X0, X20
	0x03309F68 BL 0x1C16DEC
	0x03309F6C BL 0x1C16F20
	0x03309F70 BL 0x1C16F20
	0x03309F74 MOV X0, X20
	0x03309F78 BL 0x1C16F18
	0x03309F7C BL 0x1C16F20
	0x03309F80 B 0x3309FAC
	0x03309F84 B 0x3309FAC
	0x03309F88 B 0x3309FAC
	0x03309F8C B 0x3309FAC
	0x03309F90 B 0x3309FAC
	0x03309F94 B 0x3309FAC
	0x03309F98 B 0x3309F9C
	0x03309F9C MOV X22, X1
	0x03309FA0 MOV X21, X0
	0x03309FA4 B 0x330A040
	0x03309FA8 B 0x3309FAC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x10D4000
	005 Move X20, 0xE1F000
	006 Move W8, [X19+2821]
	007 Move X20, [X20+2752]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE1F000
	013 Move X0, [X0+2752]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2821], W8
	017 Move X0, [X20]
	018 Move X1, X31
	019 Call Environment.GetEnvironmentVariable, X0
	020 Move X1, X31
	021 Move X19, X0
	022 Call String.IsNullOrEmpty, X0
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {43}
	027 Compare X19, 0
	028 JumpIfEqual {48}
	029 Move X0, X19
	030 Move W1, W31
	031 Move X2, X31
	032 Call String.get_Chars, X0, X1
	033 And W8, W0, 0xFFFF
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X0, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move W1, 1
	039 Move X2, X31
	040 Move X30, [X31+32]
	041 Call String.Substring, X0, X1
	042 Return X0
	043 Move X0, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return X0
	048 Call 0x1C17F20

Method: System.Boolean TryLoadTzFile(System.String tzFilePath, ref System.Byte[] rawData, ref System.String id)

Disassembly:
	0x03309FAC MOV X22, X1
	0x03309FB0 MOV X21, X0
	0x03309FB4 CMP W22, 0x1
	0x03309FB8 B.NE 0x3309FDC
	0x03309FBC MOV X0, X21
	0x03309FC0 BL 0x3EB1AD0
	0x03309FC4 LDR X20, [X0]
	0x03309FC8 BL 0x3EB1AE0
	0x03309FCC MOV W21, W31
	0x03309FD0 MOV W22, W31
	0x03309FD4 CBNZ X19, 0x3309ECC
	0x03309FD8 B 0x3309F24
	0x03309FDC MOV X20, X31
	0x03309FE0 CBZ X19, 0x330A03C
	0x03309FE4 LDR X8, [X19]
	0x03309FE8 LDR X1, [X24]
	0x03309FEC LDRH W9, [X8 + 0x12E]
	0x03309FF0 CBZ X9, 0x330A014
	0x03309FF4 LDR X10, [X8 + 0xB0]
	0x03309FF8 ADD X10, X10, 0x8
	0x03309FFC LDUR X11, [X10 - 0x8]
	0x0330A000 CMP X11, X1
	0x0330A004 B.EQ 0x330A024
	0x0330A008 SUBS X9, X9, 0x1
	0x0330A00C ADD X10, X10, 0x10
	0x0330A010 B.NE 0x3309FFC
	0x0330A014 MOV X0, X19
	0x0330A018 MOV W2, W31
	0x0330A01C BL 0x1C5C788
	0x0330A020 B 0x330A030
	0x0330A024 LDRSW X9, [X10]
	0x0330A028 ADD X8, X8, X9, 0x4, LSL
	0x0330A02C ADD X0, X8, 0x138
	0x0330A030 LDP X8, X1, [X0]
	0x0330A034 MOV X0, X19
	0x0330A038 BLR X8
	0x0330A03C CBNZ X20, 0x330A0B4
	0x0330A040 CMP W22, 0x1
	0x0330A044 B.NE 0x330A0F4
	0x0330A048 MOV X0, X21
	0x0330A04C BL 0x3EB1AD0
	0x0330A050 MOV X19, X0
	0x0330A054 ADRP X0, 0xE17000
	0x0330A058 LDR X0, [X0 + 0x7A8]
	0x0330A05C BL 0x1C16D08
	0x0330A060 LDR X8, [X19]
	0x0330A064 LDR X1, [X8]
	0x0330A068 BL 0x1C17270
	0x0330A06C TBNZ X0, 0x0, 0x330A0A8
	0x0330A070 ADRP X0, 0xE17000
	0x0330A074 LDR X0, [X0 + 0x690]
	0x0330A078 BL 0x1C16D08
	0x0330A07C LDR X8, [X19]
	0x0330A080 LDR X1, [X8]
	0x0330A084 BL 0x1C17270
	0x0330A088 TBNZ X0, 0x0, 0x330A0A8
	0x0330A08C ADRP X0, 0xE17000
	0x0330A090 LDR X0, [X0 + 0x7B8]
	0x0330A094 BL 0x1C16D08
	0x0330A098 LDR X8, [X19]
	0x0330A09C LDR X1, [X8]
	0x0330A0A0 BL 0x1C17270
	0x0330A0A4 TBZ X0, 0x0, 0x330A0BC
	0x0330A0A8 BL 0x3EB1AE0
	0x0330A0AC MOV W0, W31
	0x0330A0B0 B 0x3309F2C
	0x0330A0B4 MOV X0, X20
	0x0330A0B8 BL 0x1C16F18
	0x0330A0BC MOVZ W0, 0x8
	0x0330A0C0 BL 0x3EB1AF0
	0x0330A0C4 LDR X8, [X19]
	0x0330A0C8 STR X8, [X0]
	0x0330A0CC ADRP X1, 0xBAA000
	0x0330A0D0 ADD X1, X1, 0xE58
	0x0330A0D4 MOV X2, X31
	0x0330A0D8 BL 0x3EB1B00
	0x0330A0DC MOV X22, X1
	0x0330A0E0 MOV X21, X0
	0x0330A0E4 CBNZ X19, 0x3309FE4
	0x0330A0E8 B 0x330A03C
	0x0330A0EC MOV X21, X0
	0x0330A0F0 BL 0x3EB1AE0
	0x0330A0F4 MOV X0, X21
	0x0330A0F8 BL 0x1D2C690
	0x0330A0FC BL 0x1990590
	0x0330A100 STP X30, X23, [X31 - 0x30]!
	0x0330A104 STP X22, X21, [X31 + 0x10]
	0x0330A108 STP X20, X19, [X31 + 0x20]
	0x0330A10C ADRP X21, 0x10D2000
	0x0330A110 LDRB W8, [X21 + 0xB0D]
	0x0330A114 MOV X19, X1
	0x0330A118 MOV X20, X0
	0x0330A11C TBNZ X8, 0x0, 0x330A134
	0x0330A120 ADRP X0, 0xE1D000
	0x0330A124 LDR X0, [X0 + 0xA38]
	0x0330A128 BL 0x1C16CF4
	0x0330A12C MOVZ W8, 0x1
	0x0330A130 STRB W8, [X21 + 0xB0D]
	0x0330A134 CBZ X20, 0x330A250
	0x0330A138 ADRP X23, 0xE1D000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x10D4000
	007 Move W8, [X22+2822]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xE1F000
	016 Move X0, [X0+2616]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2822], W8
	020 Move X0, X21
	021 Move X1, X31
	022 Call File.Exists, X0
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {100}
	027 Move X0, X21
	028 Move X1, X31
	029 Call File.ReadAllBytes, X0
	030 Move [X20], X0
	031 Move X0, [X19]
	032 Move X1, X31
	033 Call String.IsNullOrEmpty, X0
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {63}
	038 Move X22, 0xE1E000
	039 Move X22, [X22+2616]
	040 Move X0, [X22]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X21
	046 Call TimeZoneInfo.FindTimeZoneIdUsingReadLink, X0
	047 Move [X19], X0
	048 Move X1, X31
	049 Call String.IsNullOrEmpty, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {63}
	054 Move X0, [X22]
	055 Move X20, [X20]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X20
	061 Call TimeZoneInfo.FindTimeZoneId, X0
	062 Move [X19], X0
	063 Move W0, 1
	064 Move X19, X0
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X0, X19
	067 Call 0x3EB2AD0
	068 Move X19, X0
	069 Move X0, 0xE18000
	070 Move X0, [X0+1960]
	071 Call 0x1C17D08
	072 Move X8, [X19]
	073 Move X1, [X8]
	074 Call 0x1C18270
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {99}
	079 Move X0, 0xE18000
	080 Move X0, [X0+1680]
	081 Call 0x1C17D08
	082 Move X8, [X19]
	083 Move X1, [X8]
	084 Call 0x1C18270
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfEqual {99}
	089 Move X0, 0xE18000
	090 Move X0, [X0+1976]
	091 Call 0x1C17D08
	092 Move X8, [X19]
	093 Move X1, [X8]
	094 Call 0x1C18270
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {107}
	099 Call 0x3EB2AE0
	100 Move W0, W31
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move X30, [X31+48]
	106 Return X0
	107 Move W0, 8
	108 Call 0x3EB2AF0
	109 Move X8, [X19]
	110 Move [X0], X8
	111 Move X1, 0xBAB000
	112 Add X1, X1, 3672
	113 Move X2, X31
	114 Call 0x3EB2B00
	115 Move X19, X0
	116 Call 0x3EB2AE0
	117 Move X0, X19
	118 Call 0x1D2D690
	119 Call 0x1991590

Method: System.String FindTimeZoneIdUsingReadLink(System.String tzFilePath)

Disassembly:
	0x0330A2AC STP X29, X30, [X31 + 0x30]
	0x0330A2B0 STP X28, X27, [X31 + 0x40]
	0x0330A2B4 STP X26, X25, [X31 + 0x50]
	0x0330A2B8 STP X24, X23, [X31 + 0x60]
	0x0330A2BC STP X22, X21, [X31 + 0x70]
	0x0330A2C0 STP X20, X19, [X31 + 0x80]
	0x0330A2C4 ADRP X22, 0x10D2000
	0x0330A2C8 ADRP X21, 0xE1D000
	0x0330A2CC ADRP X19, 0xE1D000
	0x0330A2D0 ADRP X20, 0xDEA000
	0x0330A2D4 LDRB W8, [X22 + 0xB4F]
	0x0330A2D8 LDR X21, [X21 + 0xA60]
	0x0330A2DC LDR X19, [X19 + 0xA58]
	0x0330A2E0 LDR X20, [X20 + 0x9F0]
	0x0330A2E4 TBNZ X8, 0x0, 0x330A3BC
	0x0330A2E8 ADRP X0, 0xDEB000
	0x0330A2EC LDR X0, [X0 + 0x170]
	0x0330A2F0 BL 0x1C16CF4
	0x0330A2F4 ADRP X0, 0xE1D000
	0x0330A2F8 LDR X0, [X0 + 0xB10]
	0x0330A2FC BL 0x1C16CF4
	0x0330A300 ADRP X0, 0xDEA000
	0x0330A304 LDR X0, [X0 + 0x9F0]
	0x0330A308 BL 0x1C16CF4
	0x0330A30C ADRP X0, 0xE1D000
	0x0330A310 LDR X0, [X0 + 0xB18]
	0x0330A314 BL 0x1C16CF4
	0x0330A318 ADRP X0, 0xE1D000
	0x0330A31C LDR X0, [X0 + 0xB20]
	0x0330A320 BL 0x1C16CF4
	0x0330A324 ADRP X0, 0xE1D000
	0x0330A328 LDR X0, [X0 + 0xA50]
	0x0330A32C BL 0x1C16CF4
	0x0330A330 ADRP X0, 0xE1D000
	0x0330A334 LDR X0, [X0 + 0xA58]
	0x0330A338 BL 0x1C16CF4
	0x0330A33C ADRP X0, 0xE1D000
	0x0330A340 LDR X0, [X0 + 0xB28]
	0x0330A344 BL 0x1C16CF4
	0x0330A348 ADRP X0, 0xE1D000
	0x0330A34C LDR X0, [X0 + 0xA60]
	0x0330A350 BL 0x1C16CF4
	0x0330A354 ADRP X0, 0xDEB000
	0x0330A358 LDR X0, [X0 + 0x570]
	0x0330A35C BL 0x1C16CF4
	0x0330A360 ADRP X0, 0xE1D000
	0x0330A364 LDR X0, [X0 + 0xA38]
	0x0330A368 BL 0x1C16CF4
	0x0330A36C ADRP X0, 0xE1D000
	0x0330A370 LDR X0, [X0 + 0xB30]
	0x0330A374 BL 0x1C16CF4
	0x0330A378 ADRP X0, 0xE1D000
	0x0330A37C LDR X0, [X0 + 0xB38]
	0x0330A380 BL 0x1C16CF4
	0x0330A384 ADRP X0, 0xE1D000
	0x0330A388 LDR X0, [X0 + 0xB40]
	0x0330A38C BL 0x1C16CF4
	0x0330A390 ADRP X0, 0xE1D000
	0x0330A394 LDR X0, [X0 + 0xB48]
	0x0330A398 BL 0x1C16CF4
	0x0330A39C ADRP X0, 0xE1D000
	0x0330A3A0 LDR X0, [X0 + 0xA40]
	0x0330A3A4 BL 0x1C16CF4
	0x0330A3A8 ADRP X0, 0xE1D000
	0x0330A3AC LDR X0, [X0 + 0xB50]
	0x0330A3B0 BL 0x1C16CF4
	0x0330A3B4 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x10D3000
	006 Move X21, 0xE15000
	007 Move W8, [X20+2823]
	008 Move X21, [X21+3448]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xE11000
	015 Move X0, [X0+464]
	016 Call 0x1C17CF4
	017 Move X0, 0xE15000
	018 Move X0, [X0+3448]
	019 Call 0x1C17CF4
	020 Move X0, 0xE1E000
	021 Move X0, [X0+2616]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2823], W8
	025 Move X0, [X21]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X1, X31
	032 Call Sys.ReadLink, X0
	033 Compare X0, 0
	034 JumpIfEqual {80}
	035 Move X8, 0xE11000
	036 Move X8, [X8+464]
	037 Move X20, X0
	038 Move X21, 0xE1E000
	039 Move X0, [X8]
	040 Move W8, [X0+224]
	041 Move X21, [X21+2616]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X19
	046 Move X1, X20
	047 Move X2, X31
	048 Call Path.Combine, X0, X1
	049 Move X8, [X21]
	050 Move X19, X0
	051 Move W9, [X8+224]
	052 Compare W9, 0
	053 JumpIfNotEqual {56}
	054 Move X0, X8
	055 Call 0x1C17DFC
	056 Call TimeZoneInfo.GetTimeZoneDirectory
	057 Compare X19, 0
	058 JumpIfEqual {86}
	059 Move X20, X0
	060 Move W2, 4
	061 Move X0, X19
	062 Move X1, X20
	063 Move X3, X31
	064 Call String.StartsWith, X0, X1, X2
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {80}
	069 Compare X20, 0
	070 JumpIfEqual {86}
	071 Move W1, [X20+16]
	072 Move X0, X19
	073 Move X20, [X31+16]
	074 Move X19, [X31+24]
	075 Move X2, X31
	076 Move X30, [X31+32]
	077 Move X21, [X31+40]
	078 Call String.Substring, X0, X1
	079 Return X0
	080 Move X20, [X31+16]
	081 Move X19, [X31+24]
	082 Move X0, X31
	083 Move X30, [X31+32]
	084 Move X21, [X31+40]
	085 Return X0
	086 Call 0x1C17F20

Method: System.String GetDirectoryEntryFullPath(ref Interop/Sys/DirectoryEntry dirent, System.String currentPath)

Disassembly:
	0x0330A624 BL 0x1C16DFC
	0x0330A628 LDR X0, [X25]
	0x0330A62C ADRP X9, 0xE1D000
	0x0330A630 LDR X8, [X0 + 0xB8]
	0x0330A634 LDR X9, [X9 + 0xB10]
	0x0330A638 LDR X24, [X8]
	0x0330A63C LDR X0, [X9]
	0x0330A640 BL 0x1C16F10
	0x0330A644 ADRP X8, 0xE1D000
	0x0330A648 LDR X8, [X8 + 0xB30]
	0x0330A64C MOV X1, X24
	0x0330A650 MOV X3, X31
	0x0330A654 MOV X23, X0
	0x0330A658 LDR X2, [X8]
	0x0330A65C BL 0x295A080
	0x0330A660 LDR X8, [X25]
	0x0330A664 LDR X8, [X8 + 0xB8]
	0x0330A668 STR X23, [X8 + 0x30]
	0x0330A66C CBZ X19, 0x330A71C
	0x0330A670 ADRP X8, 0xE1D000
	0x0330A674 LDR X8, [X8 + 0xB20]
	0x0330A678 MOV X0, X19
	0x0330A67C MOV X1, X23
	0x0330A680 LDR X2, [X8]
	0x0330A684 BL 0x301DD30
	0x0330A688 B 0x330A6A0
	0x0330A68C CMP W9, 0x1
	0x0330A690 B.LS 0x330A768
	0x0330A694 LDR X20, [X8 + 0x28]
	0x0330A698 CBNZ X29, 0x330A5A8
	0x0330A69C CBZ X19, 0x330A71C
	0x0330A6A0 ADRP X8, 0xE1D000
	0x0330A6A4 LDR X23, [X31 + 0x10]
	0x0330A6A8 LDR X8, [X8 + 0xA50]
	0x0330A6AC MOV X0, X19
	0x0330A6B0 LDR X1, [X8]
	0x0330A6B4 BL 0x301DDC4
	0x0330A6B8 LDR X8, [X26]
	0x0330A6BC MOV X19, X0
	0x0330A6C0 LDR W9, [X8 + 0xE0]
	0x0330A6C4 CBNZ W9, 0x330A6D0
	0x0330A6C8 MOV X0, X8
	0x0330A6CC BL 0x1C16DFC
	0x0330A6D0 ADRP X8, 0xE1D000
	0x0330A6D4 LDR X8, [X8 + 0xA40]
	0x0330A6D8 CMP X29, 0x0
	0x0330A6DC CSET W6, EQ
	0x0330A6E0 MOV X1, X23
	0x0330A6E4 LDR X0, [X8]
	0x0330A6E8 MOV X2, X21
	0x0330A6EC MOV X3, X22
	0x0330A6F0 MOV X4, X20
	0x0330A6F4 MOV X5, X19
	0x0330A6F8 BL 0x330F534
	0x0330A6FC LDP X20, X19, [X31 + 0x80]
	0x0330A700 LDP X22, X21, [X31 + 0x70]
	0x0330A704 LDP X24, X23, [X31 + 0x60]
	0x0330A708 LDP X26, X25, [X31 + 0x50]
	0x0330A70C LDP X28, X27, [X31 + 0x40]
	0x0330A710 LDP X29, X30, [X31 + 0x30]
	0x0330A714 ADD X31, X31, 0x90
	0x0330A718 RET
	0x0330A71C BL 0x1C16F20
	0x0330A720 ADRP X0, 0xDE9000
	0x0330A724 LDR X0, [X0 + 0xB40]
	0x0330A728 BL 0x1C16D08
	0x0330A72C BL 0x1C16F10
	0x0330A730 MOV X19, X0
	0x0330A734 ADRP X0, 0xE1D000
	0x0330A738 LDR X0, [X0 + 0xB58]
	0x0330A73C BL 0x1C16D08
	0x0330A740 MOV X1, X0
	0x0330A744 MOV X0, X19
	0x0330A748 MOV X2, X31
	0x0330A74C BL 0x3379A44
	0x0330A750 ADRP X0, 0xE1D000
	0x0330A754 LDR X0, [X0 + 0xB60]
	0x0330A758 BL 0x1C16D08
	0x0330A75C MOV X1, X0
	0x0330A760 MOV X0, X19
	0x0330A764 BL 0x1C16DEC
	0x0330A768 BL 0x1C16F28
	0x0330A76C STP X30, X21, [X31 - 0x20]!
	0x0330A770 STP X20, X19, [X31 + 0x10]
	0x0330A774 ADRP X21, 0x10D2000
	0x0330A778 ADRP X20, 0xDEB000
	0x0330A77C LDRB W8, [X21 + 0xBCA]
	0x0330A780 LDR X20, [X20 + 0x170]
	0x0330A784 MOV X19, X0
	0x0330A788 TBNZ X8, 0x0, 0x330A7A0
	0x0330A78C ADRP X0, 0xDEB000

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Add X29, X31, 0
	010 Subtract X31, X31, 16
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X23+40]
	013 Move X21, 0x10D3000
	014 Move X19, X1
	015 Move X20, X0
	016 Move [X29-8], X8
	017 Move W8, [X21+2824]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0xE11000
	023 Move X0, [X0+464]
	024 Call 0x1C17CF4
	025 Move X0, 0xE19000
	026 Move X0, [X0+40]
	027 Call 0x1C17CF4
	028 Move X0, 0xE19000
	029 Move X0, [X0+1256]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+2824], W8
	033 Subtract X21, X31, 512
	034 Add X31, X21, 0
	035 Move W2, 512
	036 Move X0, X21
	037 Move W1, W31
	038 Call 0x3EB2B10
	039 Move W2, 256
	040 Move X0, X20
	041 Move X1, X21
	042 Move X3, X31
	043 Call DirectoryEntry.GetName, X0, X1
	044 Move X20, X1
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X21, X0
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X0, X31
	054 Move X22, 0x10D3000
	055 Move W8, [X22+939]
	056 Compare W8, 0
	057 JumpIfNotEqual {63}
	058 Move X0, 0xE11000
	059 Move X0, [X0+656]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X22+939], W8
	063 Move X24, 0xE11000
	064 Move X24, [X24+464]
	065 Compare X19, 0
	066 JumpIfEqual {72}
	067 Move X0, X19
	068 Move X1, X31
	069 Call String.GetRawStringData, X0
	070 Move W19, [X19+16]
	071 Move X22, X0
	072 Move X22, X31
	073 Move X0, [X24]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X0, X22
	079 Move X1, X19
	080 Move X2, X21
	081 Move X3, X20
	082 Move X4, X31
	083 Call Path.Join, X0, X1
	084 Move X8, [X23+40]
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Add X31, X29, 0
	088 Move X20, [X31+48]
	089 Move X19, [X31+56]
	090 Move X22, [X31+32]
	091 Move X21, [X31+40]
	092 Move X24, [X31+16]
	093 Move X23, [X31+24]
	094 Move X29, [X31+64]
	095 Move X30, [X31+72]
	096 Return X0
	097 Call 0x3EB2B20

Method: System.Void EnumerateFilesRecursively(System.String path, System.Predicate`1<System.String> condition)

Disassembly:
	0x0330A790 LDR X0, [X0 + 0x170]
	0x0330A794 BL 0x1C16CF4
	0x0330A798 MOVZ W8, 0x1
	0x0330A79C STRB W8, [X21 + 0xBCA]
	0x0330A7A0 LDR X0, [X20]
	0x0330A7A4 LDRH W19, [X19]
	0x0330A7A8 LDR W8, [X0 + 0xE0]
	0x0330A7AC CBNZ W8, 0x330A7B4
	0x0330A7B0 BL 0x1C16DFC
	0x0330A7B4 MOV W0, W19
	0x0330A7B8 LDP X20, X19, [X31 + 0x10]
	0x0330A7BC MOV X1, X31
	0x0330A7C0 LDP X30, X21, [X31], #0x20
	0x0330A7C4 B 0x322DBBC
	0x0330A7C8 STR X30, [X31 - 0x30]!
	0x0330A7CC STP X22, X21, [X31 + 0x10]
	0x0330A7D0 STP X20, X19, [X31 + 0x20]
	0x0330A7D4 ADRP X22, 0x10D2000
	0x0330A7D8 ADRP X21, 0xE1D000
	0x0330A7DC LDRB W8, [X22 + 0xB0F]
	0x0330A7E0 LDR X21, [X21 + 0xA38]
	0x0330A7E4 MOV X19, X1
	0x0330A7E8 MOV X20, X0
	0x0330A7EC TBNZ X8, 0x0, 0x330A804
	0x0330A7F0 ADRP X0, 0xE1D000
	0x0330A7F4 LDR X0, [X0 + 0xA38]
	0x0330A7F8 BL 0x1C16CF4
	0x0330A7FC MOVZ W8, 0x1
	0x0330A800 STRB W8, [X22 + 0xB0F]
	0x0330A804 LDR X0, [X21]
	0x0330A808 STRB W31, [X31 + 0xC]
	0x0330A80C LDR W8, [X0 + 0xE0]
	0x0330A810 CBNZ W8, 0x330A818
	0x0330A814 BL 0x1C16DFC
	0x0330A818 BL 0x330A840
	0x0330A81C MOV X1, X0
	0x0330A820 ADD X2, X31, 0xC
	0x0330A824 MOV X0, X20
	0x0330A828 MOV X3, X19
	0x0330A82C BL 0x330A8C0
	0x0330A830 LDP X20, X19, [X31 + 0x20]
	0x0330A834 LDP X22, X21, [X31 + 0x10]
	0x0330A838 LDR X30, [X31], #0x30
	0x0330A83C RET
	0x0330A840 STR X30, [X31 - 0x20]!
	0x0330A844 STP X20, X19, [X31 + 0x10]
	0x0330A848 ADRP X20, 0x10D2000
	0x0330A84C ADRP X19, 0xE1D000
	0x0330A850 LDRB W8, [X20 + 0xB2F]
	0x0330A854 LDR X19, [X19 + 0xA38]
	0x0330A858 TBNZ X8, 0x0, 0x330A870
	0x0330A85C ADRP X0, 0xE1D000
	0x0330A860 LDR X0, [X0 + 0xA38]
	0x0330A864 BL 0x1C16CF4
	0x0330A868 MOVZ W8, 0x1
	0x0330A86C STRB W8, [X20 + 0xB2F]
	0x0330A870 LDR X0, [X19]
	0x0330A874 LDR W8, [X0 + 0xE0]
	0x0330A878 CBNZ W8, 0x330A884
	0x0330A87C BL 0x1C16DFC
	0x0330A880 LDR X0, [X19]
	0x0330A884 LDR X8, [X0 + 0xB8]
	0x0330A888 LDR X19, [X8 + 0x8]
	0x0330A88C CBZ X19, 0x330A8BC
	0x0330A890 LDR X20, [X19 + 0x10]
	0x0330A894 BL 0x1C16D44
	0x0330A898 CBZ X20, 0x330A8AC
	0x0330A89C MOV X0, X20
	0x0330A8A0 LDP X20, X19, [X31 + 0x10]
	0x0330A8A4 LDR X30, [X31], #0x20
	0x0330A8A8 RET
	0x0330A8AC MOV X0, X19
	0x0330A8B0 LDP X20, X19, [X31 + 0x10]
	0x0330A8B4 LDR X30, [X31], #0x20
	0x0330A8B8 B 0x3313E58
	0x0330A8BC BL 0x1C16F20
	0x0330A8C0 SUB X31, X31, 0x70
	0x0330A8C4 STR X30, [X31 + 0x10]
	0x0330A8C8 STP X28, X27, [X31 + 0x20]
	0x0330A8CC STP X26, X25, [X31 + 0x30]
	0x0330A8D0 STP X24, X23, [X31 + 0x40]
	0x0330A8D4 STP X22, X21, [X31 + 0x50]
	0x0330A8D8 STP X20, X19, [X31 + 0x60]
	0x0330A8DC ADRP X19, 0x10D2000
	0x0330A8E0 LDRB W8, [X19 + 0xB46]
	0x0330A8E4 MOV X21, X3
	0x0330A8E8 MOV X20, X2
	0x0330A8EC MOV X22, X1
	0x0330A8F0 MOV X23, X0
	0x0330A8F4 TBNZ X8, 0x0, 0x330A924
	0x0330A8F8 ADRP X0, 0xDEA000
	0x0330A8FC LDR X0, [X0 + 0x9F0]
	0x0330A900 BL 0x1C16CF4
	0x0330A904 ADRP X0, 0xDEB000
	0x0330A908 LDR X0, [X0 + 0x570]
	0x0330A90C BL 0x1C16CF4
	0x0330A910 ADRP X0, 0xE1D000
	0x0330A914 LDR X0, [X0 + 0xA38]
	0x0330A918 BL 0x1C16CF4
	0x0330A91C MOVZ W8, 0x1
	0x0330A920 STRB W8, [X19 + 0xB46]
	0x0330A924 STR X31, [X31 + 0x18]
	0x0330A928 STR X31, [X31 + 0x8]
	0x0330A92C STRB W31, [X20]
	0x0330A930 STRB W31, [X21]
	0x0330A934 CBZ X22, 0x330AB8C
	0x0330A938 ADRP X27, 0xE1D000
	0x0330A93C LDR X27, [X27 + 0xA38]
	0x0330A940 ADRP X25, 0xDEA000
	0x0330A944 LDR X19, [X22 + 0x30]
	0x0330A948 LDR X0, [X27]
	0x0330A94C LDR W8, [X0 + 0xE0]
	0x0330A950 LDR X25, [X25 + 0x9F0]
	0x0330A954 CBNZ W8, 0x330A960
	0x0330A958 BL 0x1C16DFC
	0x0330A95C LDR X0, [X27]
	0x0330A960 LDR X8, [X25]
	0x0330A964 LDR X9, [X0 + 0xB8]
	0x0330A968 LDR W10, [X8 + 0xE0]
	0x0330A96C LDR X24, [X9 + 0x10]
	0x0330A970 CBNZ W10, 0x330A97C
	0x0330A974 MOV X0, X8
	0x0330A978 BL 0x1C16DFC
	0x0330A97C MOV X0, X23
	0x0330A980 MOV X1, X24
	0x0330A984 MOV X2, X31
	0x0330A988 BL 0x3363220
	0x0330A98C TBZ X0, 0x0, 0x330A9CC
	0x0330A990 LDR X0, [X25]
	0x0330A994 LDR W8, [X0 + 0xE0]
	0x0330A998 CBNZ W8, 0x330A9A4
	0x0330A99C BL 0x1C16DFC
	0x0330A9A0 LDR X0, [X25]
	0x0330A9A4 LDR X8, [X0 + 0xB8]
	0x0330A9A8 ADD X3, X31, 0x18
	0x0330A9AC MOV X0, X22
	0x0330A9B0 MOV W2, W31
	0x0330A9B4 LDR X1, [X8 + 0x18]
	0x0330A9B8 BL 0x330FDF4
	0x0330A9BC MOV X24, X0
	0x0330A9C0 MOVZ W25, 0x270F
	0x0330A9C4 CBNZ X24, 0x330AAA0
	0x0330A9C8 B 0x330AB68
	0x0330A9CC LDR X0, [X27]
	0x0330A9D0 LDR W8, [X0 + 0xE0]
	0x0330A9D4 CBNZ W8, 0x330A9E0
	0x0330A9D8 BL 0x1C16DFC
	0x0330A9DC LDR X0, [X27]
	0x0330A9E0 LDR X8, [X25]
	0x0330A9E4 LDR X9, [X0 + 0xB8]
	0x0330A9E8 LDR W10, [X8 + 0xE0]
	0x0330A9EC LDR X24, [X9 + 0x18]
	0x0330A9F0 CBNZ W10, 0x330A9FC
	0x0330A9F4 MOV X0, X8
	0x0330A9F8 BL 0x1C16DFC
	0x0330A9FC MOV X0, X23
	0x0330AA00 MOV X1, X24
	0x0330AA04 MOV X2, X31
	0x0330AA08 BL 0x3363148
	0x0330AA0C TBZ X0, 0x0, 0x330AA4C
	0x0330AA10 LDR X0, [X25]
	0x0330AA14 LDR W8, [X0 + 0xE0]
	0x0330AA18 CBNZ W8, 0x330AA24
	0x0330AA1C BL 0x1C16DFC
	0x0330AA20 LDR X0, [X25]
	0x0330AA24 LDR X8, [X0 + 0xB8]
	0x0330AA28 ADD X3, X31, 0x18
	0x0330AA2C MOV X0, X22
	0x0330AA30 MOV W2, W31
	0x0330AA34 LDR X1, [X8 + 0x10]
	0x0330AA38 BL 0x330FDF4
	0x0330AA3C MOV X24, X0
	0x0330AA40 MOVZ W25, 0x1
	0x0330AA44 CBNZ X24, 0x330AAA0
	0x0330AA48 B 0x330AB68
	0x0330AA4C ADD X3, X31, 0x18
	0x0330AA50 MOVZ W2, 0x1
	0x0330AA54 MOV X0, X22
	0x0330AA58 MOV X1, X23
	0x0330AA5C BL 0x330FDF4
	0x0330AA60 LDR X8, [X25]
	0x0330AA64 MOV X24, X0
	0x0330AA68 LDR W9, [X8 + 0xE0]
	0x0330AA6C CBNZ W9, 0x330AA78
	0x0330AA70 MOV X0, X8
	0x0330AA74 BL 0x1C16DFC
	0x0330AA78 MOV X0, X23
	0x0330AA7C MOV X1, X19
	0x0330AA80 MOV X2, X31
	0x0330AA84 BL 0x3362E18
	0x0330AA88 STR X0, [X31 + 0x8]
	0x0330AA8C ADD X0, X31, 0x8
	0x0330AA90 MOV X1, X31
	0x0330AA94 BL 0x3361868
	0x0330AA98 MOV W25, W0
	0x0330AA9C CBZ X24, 0x330AB68
	0x0330AAA0 ADRP X28, 0xDEB000
	0x0330AAA4 LDR X28, [X28 + 0x570]
	0x0330AAA8 LDR X26, [X24 + 0x58]
	0x0330AAAC LDR X0, [X28]
	0x0330AAB0 LDR W8, [X0 + 0xE0]
	0x0330AAB4 CBNZ W8, 0x330AABC
	0x0330AAB8 BL 0x1C16DFC
	0x0330AABC MOV X0, X19
	0x0330AAC0 MOV X1, X26
	0x0330AAC4 MOV X2, X31
	0x0330AAC8 BL 0x3394C70
	0x0330AACC MOV X19, X0
	0x0330AAD0 MOV X0, X24
	0x0330AAD4 BL 0x330E1AC
	0x0330AAD8 TBZ X0, 0x0, 0x330AB68
	0x0330AADC LDR X0, [X27]
	0x0330AAE0 LDR X27, [X22 + 0x30]
	0x0330AAE4 LDR X26, [X31 + 0x18]
	0x0330AAE8 LDR W8, [X0 + 0xE0]
	0x0330AAEC CBNZ W8, 0x330AAF4
	0x0330AAF0 BL 0x1C16DFC
	0x0330AAF4 MOV X0, X23
	0x0330AAF8 MOV W1, W25
	0x0330AAFC MOV X2, X27
	0x0330AB00 MOV X3, X24
	0x0330AB04 MOV X4, X26
	0x0330AB08 MOV X5, X21
	0x0330AB0C MOV X6, X22
	0x0330AB10 BL 0x3310FAC
	0x0330AB14 AND W8, W0, 0x1
	0x0330AB18 STRB W8, [X20]
	0x0330AB1C TBZ X0, 0x0, 0x330AB2C
	0x0330AB20 LDR X0, [X28]
	0x0330AB24 ADD X8, X24, 0x20
	0x0330AB28 B 0x330AB44
	0x0330AB2C LDR X0, [X28]
	0x0330AB30 LDR W8, [X0 + 0xE0]
	0x0330AB34 CBNZ W8, 0x330AB40
	0x0330AB38 BL 0x1C16DFC
	0x0330AB3C LDR X0, [X28]
	0x0330AB40 LDR X8, [X0 + 0xB8]
	0x0330AB44 LDR W9, [X0 + 0xE0]
	0x0330AB48 LDR X20, [X8]
	0x0330AB4C CBNZ W9, 0x330AB54
	0x0330AB50 BL 0x1C16DFC
	0x0330AB54 MOV X0, X19
	0x0330AB58 MOV X1, X20
	0x0330AB5C MOV X2, X31
	0x0330AB60 BL 0x3394C70
	0x0330AB64 MOV X19, X0
	0x0330AB68 MOV X0, X19
	0x0330AB6C LDP X20, X19, [X31 + 0x60]
	0x0330AB70 LDP X22, X21, [X31 + 0x50]
	0x0330AB74 LDP X24, X23, [X31 + 0x40]
	0x0330AB78 LDP X26, X25, [X31 + 0x30]
	0x0330AB7C LDP X28, X27, [X31 + 0x20]
	0x0330AB80 LDR X30, [X31 + 0x10]
	0x0330AB84 ADD X31, X31, 0x70
	0x0330AB88 RET
	0x0330AB8C BL 0x1C16F20
	0x0330AB90 SUB X31, X31, 0x130
	0x0330AB94 STP X29, X30, [X31 + 0xD0]
	0x0330AB98 STP X28, X27, [X31 + 0xE0]
	0x0330AB9C STP X26, X25, [X31 + 0xF0]
	0x0330ABA0 STP X24, X23, [X31 + 0x100]
	0x0330ABA4 STP X22, X21, [X31 + 0x110]
	0x0330ABA8 STP X20, X19, [X31 + 0x120]
	0x0330ABAC ADRP X22, 0x10D2000
	0x0330ABB0 LDRB W8, [X22 + 0xB11]
	0x0330ABB4 MOV X23, X5
	0x0330ABB8 MOV X25, X4
	0x0330ABBC MOV X24, X3
	0x0330ABC0 MOV X20, X2
	0x0330ABC4 MOV X21, X1
	0x0330ABC8 MOV X19, X0
	0x0330ABCC ADD X26, X31, 0xB0
	0x0330ABD0 TBNZ X8, 0x0, 0x330AC18
	0x0330ABD4 ADRP X0, 0xDEA000
	0x0330ABD8 LDR X0, [X0 + 0x9F0]
	0x0330ABDC BL 0x1C16CF4
	0x0330ABE0 ADRP X0, 0xE1D000
	0x0330ABE4 LDR X0, [X0 + 0xB68]
	0x0330ABE8 BL 0x1C16CF4
	0x0330ABEC ADRP X0, 0xE1D000
	0x0330ABF0 LDR X0, [X0 + 0xB28]
	0x0330ABF4 BL 0x1C16CF4
	0x0330ABF8 ADRP X0, 0xDEB000
	0x0330ABFC LDR X0, [X0 + 0x570]
	0x0330AC00 BL 0x1C16CF4
	0x0330AC04 ADRP X0, 0xE1D000
	0x0330AC08 LDR X0, [X0 + 0xA38]
	0x0330AC0C BL 0x1C16CF4
	0x0330AC10 MOVZ W8, 0x1
	0x0330AC14 STRB W8, [X22 + 0xB11]
	0x0330AC18 STP X31, X31, [X31 + 0xC0]
	0x0330AC1C STR X31, [X31 + 0xB8]
	0x0330AC20 STUR W31, [X26 + 0x3]
	0x0330AC24 STR W31, [X31 + 0xB0]
	0x0330AC28 STP X31, X31, [X31 + 0xA0]
	0x0330AC2C STR X31, [X31 + 0x98]
	0x0330AC30 CBZ X24, 0x330B27C
	0x0330AC34 LDR W8, [X19]
	0x0330AC38 LDR W9, [X24 + 0x18]
	0x0330AC3C CMP W8, W9
	0x0330AC40 B.GE 0x330ACA0
	0x0330AC44 ADRP X27, 0xDEA000
	0x0330AC48 LDR X27, [X27 + 0x9F0]
	0x0330AC4C CMP W8, W9
	0x0330AC50 B.CS 0x330B278
	0x0330AC54 LDR X0, [X27]
	0x0330AC58 ADD X8, X24, W8, 0x3, SXTW
	0x0330AC5C LDR X22, [X8 + 0x20]
	0x0330AC60 LDR W9, [X0 + 0xE0]
	0x0330AC64 CBNZ W9, 0x330AC70
	0x0330AC68 BL 0x1C16DFC
	0x0330AC6C LDR X0, [X27]
	0x0330AC70 LDR X8, [X0 + 0xB8]
	0x0330AC74 MOV X0, X22
	0x0330AC78 MOV X2, X31
	0x0330AC7C LDR X1, [X8 + 0x10]
	0x0330AC80 BL 0x3363078
	0x0330AC84 TBZ X0, 0x0, 0x330ACA0
	0x0330AC88 LDR W8, [X19]
	0x0330AC8C ADD W8, W8, 0x1
	0x0330AC90 STR W8, [X19]
	0x0330AC94 LDR W9, [X24 + 0x18]
	0x0330AC98 CMP W8, W9
	0x0330AC9C B.LT 0x330AC4C
	0x0330ACA0 CBZ X20, 0x330B27C
	0x0330ACA4 LDR W10, [X20 + 0x18]
	0x0330ACA8 LDR W8, [X19]
	0x0330ACAC LDR W9, [X24 + 0x18]
	0x0330ACB0 CBNZ W10, 0x330AD38
	0x0330ACB4 CMP W8, W9
	0x0330ACB8 B.GE 0x330AD38
	0x0330ACBC ADRP X25, 0xE1D000
	0x0330ACC0 LDR X25, [X25 + 0xA38]
	0x0330ACC4 LDR X0, [X25]
	0x0330ACC8 LDR W8, [X0 + 0xE0]
	0x0330ACCC CBNZ W8, 0x330ACD4
	0x0330ACD0 BL 0x1C16DFC
	0x0330ACD4 MOV X0, X23
	0x0330ACD8 BL 0x330B280
	0x0330ACDC LDRSW X8, [X19]
	0x0330ACE0 LDR W9, [X24 + 0x18]
	0x0330ACE4 CMP W8, W9
	0x0330ACE8 B.CS 0x330B278
	0x0330ACEC ADD X8, X24, X8, 0x3, LSL
	0x0330ACF0 LDR X8, [X8 + 0x20]
	0x0330ACF4 MOV X23, X1
	0x0330ACF8 MOV X1, X21
	0x0330ACFC STR X8, [X31 + 0xC8]
	0x0330AD00 BL 0x330B330
	0x0330AD04 ADRP X24, 0xDEB000
	0x0330AD08 LDR X24, [X24 + 0x570]
	0x0330AD0C MOV X22, X0
	0x0330AD10 LDR X8, [X24]
	0x0330AD14 LDR W9, [X8 + 0xE0]
	0x0330AD18 TBNZ X23, 0x0, 0x330AE10
	0x0330AD1C CBNZ W9, 0x330AD2C
	0x0330AD20 MOV X0, X8
	0x0330AD24 BL 0x1C16DFC
	0x0330AD28 LDR X8, [X24]
	0x0330AD2C LDR X8, [X8 + 0xB8]
	0x0330AD30 LDR X23, [X8]
	0x0330AD34 B 0x330AE30
	0x0330AD38 SXTW X8, W8
	0x0330AD3C SUB W10, W8, 0x1
	0x0330AD40 CMP W10, W9
	0x0330AD44 B.CS 0x330B278

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+176], X29
	003 Move [X31+184], X30
	004 Move [X31+192], X28
	005 Move [X31+200], X27
	006 Move [X31+208], X26
	007 Move [X31+216], X25
	008 Move [X31+224], X24
	009 Move [X31+232], X23
	010 Move [X31+240], X22
	011 Move [X31+248], X21
	012 Move [X31+256], X20
	013 Move [X31+264], X19
	014 Move X20, 0x10D3000
	015 Move X26, 0xE15000
	016 Move W8, [X20+2825]
	017 Move X26, [X26+3448]
	018 Move X19, X1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {56}
	024 Move X0, 0xE15000
	025 Move X0, [X0+3408]
	026 Call 0x1C17CF4
	027 Move X0, 0xE15000
	028 Move X0, [X0+3432]
	029 Call 0x1C17CF4
	030 Move X0, 0xDEB000
	031 Move X0, [X0+440]
	032 Call 0x1C17CF4
	033 Move X0, 0xE1E000
	034 Move X0, [X0+2808]
	035 Call 0x1C17CF4
	036 Move X0, 0xDEB000
	037 Move X0, [X0+448]
	038 Call 0x1C17CF4
	039 Move X0, 0xDEB000
	040 Move X0, [X0+456]
	041 Call 0x1C17CF4
	042 Move X0, 0xE12000
	043 Move X0, [X0+2904]
	044 Call 0x1C17CF4
	045 Move X0, 0xDEB000
	046 Move X0, [X0+464]
	047 Call 0x1C17CF4
	048 Move X0, 0xE15000
	049 Move X0, [X0+3448]
	050 Call 0x1C17CF4
	051 Move X0, 0xE1E000
	052 Move X0, [X0+2616]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X20+2825], W8
	056 Move X0, [X26]
	057 NotImplemented "Instruction MOVI not yet implemented."
	058 Move [X31+152], X31
	059 Move [X31+160], X31
	060 Move [X31+112], V0
	061 Move [X31+120], V0
	062 Move [X31+80], V0
	063 Move [X31+88], V0
	064 Move [X31+48], V0
	065 Move [X31+56], V0
	066 Move [X31+2], V0
	067 Move X20, 0xE15000
	068 Move W8, [X0+224]
	069 Move X20, [X20+3432]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, X31
	074 Call Sys.GetReadDirRBufferSize
	075 Move X8, [X20]
	076 Add X9, X31, 168
	077 Move [X31+168], X31
	078 Move [X31+16], X31
	079 Move [X31+24], X9
	080 Move W9, [X8+224]
	081 Move W20, W0
	082 Compare W9, 0
	083 JumpIfNotEqual {86}
	084 Move X0, X8
	085 Call 0x1C17DFC
	086 Move X8, 0xE15000
	087 Move X8, [X8+3408]
	088 Move X22, [X8]
	089 Move X0, [X22+32]
	090 Move W8, [X0+309]
	091 Move TEMP, X8
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfEqual {96}
	095 Call 0x1C5D684
	096 Move X8, [X0+192]
	097 Move X0, [X8+8]
	098 Move W8, [X0+309]
	099 Move TEMP, X8
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {104}
	103 Call 0x1C5D684
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Move X0, [X22+32]
	109 Move W8, [X0+309]
	110 Move TEMP, X8
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfEqual {115}
	114 Call 0x1C5D684
	115 Move X8, [X0+192]
	116 Move X0, [X8+8]
	117 Move W8, [X0+309]
	118 Move TEMP, X8
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfEqual {123}
	122 Call 0x1C5D684
	123 Move X8, [X0+184]
	124 Move X0, [X8]
	125 Compare X0, 0
	126 JumpIfEqual {349}
	127 Move X8, [X0]
	128 Move X9, [X8+376]
	129 Move X2, [X8+384]
	130 Move W1, W20
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move [X31+168], X0
	133 Compare X0, 0
	134 JumpIfEqual {139}
	135 Move W8, [X0+24]
	136 Add X9, X0, 32
	137 NotImplemented "Instruction CMP not yet implemented."
	138 NotImplemented "Instruction CSEL not yet implemented."
	139 Move X22, X31
	140 Move X27, 0xE1E000
	141 Move X29, 0xE12000
	142 Move X28, 0xE1E000
	143 Move X27, [X27+2616]
	144 Move X29, [X29+2904]
	145 Move X28, [X28+2808]
	146 Move X23, X31
	147 Move X0, [X26]
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {152}
	151 Call 0x1C17DFC
	152 Move X0, X21
	153 Move X1, X31
	154 Call Sys.OpenDir, X0
	155 Move X24, X0
	156 Move X1, X31
	157 Move X2, X31
	158 Call IntPtr.op_Equality, X0, X1
	159 Move TEMP, X0
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfEqual {327}
	163 Move X0, [X26]
	164 Move W8, [X0+224]
	165 Compare W8, 0
	166 JumpIfNotEqual {168}
	167 Call 0x1C17DFC
	168 Add X3, X31, 152
	169 Move X0, X24
	170 Move X1, X22
	171 Move W2, W20
	172 Move X4, X31
	173 Call Sys.ReadDirR, X0, X1, X2, X3
	174 Compare W0, 0
	175 JumpIfNotEqual {254}
	176 Move X0, [X27]
	177 Move W8, [X0+224]
	178 Compare W8, 0
	179 JumpIfNotEqual {181}
	180 Call 0x1C17DFC
	181 Add X0, X31, 152
	182 Move X1, X21
	183 Call TimeZoneInfo.GetDirectoryEntryFullPath, X0, X1
	184 Move X25, X0
	185 Compare X0, 0
	186 JumpIfEqual {163}
	187 Move W8, [X31+164]
	188 Compare W8, 0
	189 JumpIfEqual {192}
	190 NotImplemented "Instruction CMP not yet implemented."
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move X0, [X26]
	193 Move W8, [X0+224]
	194 Compare W8, 0
	195 JumpIfNotEqual {197}
	196 Call 0x1C17DFC
	197 Add X1, X31, 32
	198 Move X0, X25
	199 Move X2, X31
	200 Call Sys.Stat, X0, X1
	201 Move TEMP, X0
	202 And TEMP, TEMP, -2147483648
	203 Compare TEMP, -2147483648
	204 JumpIfEqual {208}
	205 Move W8, [X31+36]
	206 And W8, W8, 0xF000
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Compare X19, 0
	209 JumpIfEqual {294}
	210 Move X0, [X19+64]
	211 Move X8, [X19+24]
	212 Move X2, [X19+40]
	213 Move X1, X25
	214 NotImplemented "Instruction BLR not yet implemented."
	215 Move TEMP, X0
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfNotEqual {163}
	219 Compare X23, 0
	220 JumpIfNotEqual {232}
	221 Move X8, 0xDEB000
	222 Move X8, [X8+464]
	223 Move X0, [X8]
	224 Call 0x1C17F10
	225 Move X8, 0xDEB000
	226 Move X8, [X8+448]
	227 Move X23, X0
	228 Move X1, [X8]
	229 Call List`1<Object>..ctor, X0
	230 Compare X23, 0
	231 JumpIfEqual {296}
	232 Move X9, 0xDEB000
	233 Move W10, [X23+28]
	234 Move X8, [X23+16]
	235 Move X9, [X9+440]
	236 Add W10, W10, 1
	237 Move X9, [X9]
	238 Move [X23+28], W10
	239 Compare X8, 0
	240 JumpIfEqual {295}
	241 NotImplemented "Instruction LDRSW not yet implemented."
	242 Move W11, [X8+24]
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Add W9, W10, 1
	245 Add X8, X8, X10
	246 Move [X23+24], W9
	247 Move [X8+32], X25
	248 Move X8, [X9+32]
	249 Move X8, [X8+192]
	250 Move X2, [X8+112]
	251 Move X0, X23
	252 Move X1, X25
	253 Call List`1<Object>.AddWithResize, X0, X1
	254 Move X25, X31
	255 Move W21, 18
	256 Move X25, X31
	257 Move W21, 17
	258 Move X0, X24
	259 Move X1, X31
	260 Move X2, X31
	261 Call IntPtr.op_Inequality, X0, X1
	262 Move TEMP, X0
	263 And TEMP, TEMP, 1
	264 Compare TEMP, 1
	265 JumpIfNotEqual {274}
	266 Move X0, [X26]
	267 Move W8, [X0+224]
	268 Compare W8, 0
	269 JumpIfNotEqual {271}
	270 Call 0x1C17DFC
	271 Move X0, X24
	272 Move X1, X31
	273 Call Sys.CloseDir, X0
	274 Compare X25, 0
	275 JumpIfNotEqual {347}
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Compare W21, 0
	278 JumpIfNotEqual {371}
	279 Compare X23, 0
	280 JumpIfEqual {371}
	281 Move W8, [X23+24]
	282 Compare W8, 0
	283 JumpIfEqual {371}
	284 Move X2, [X29]
	285 Subtract W1, W8, 1
	286 Move X0, X23
	287 Call List`1<Object>.get_Item, X0, X1
	288 Move W8, [X23+24]
	289 Move X2, [X28]
	290 Move X21, X0
	291 Subtract W1, W8, 1
	292 Move X0, X23
	293 Call List`1<Object>.RemoveAt, X0, X1
	294 Call 0x1C17F20
	295 Call 0x1C17F20
	296 Call 0x1C17F20
	297 Move X21, X1
	298 Move X23, X31
	299 Move X21, X1
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Call 0x3EB2AD0
	302 Move X25, [X0]
	303 Call 0x3EB2AE0
	304 Move W21, W31
	305 Move X19, X0
	306 Move X25, X31
	307 Move X0, X24
	308 Move X1, X31
	309 Move X2, X31
	310 Call IntPtr.op_Inequality, X0, X1
	311 Move TEMP, X0
	312 And TEMP, TEMP, 1
	313 Compare TEMP, 1
	314 JumpIfNotEqual {323}
	315 Move X0, [X26]
	316 Move W8, [X0+224]
	317 Compare W8, 0
	318 JumpIfNotEqual {320}
	319 Call 0x1C17DFC
	320 Move X0, X24
	321 Move X1, X31
	322 Call Sys.CloseDir, X0
	323 Compare X25, 0
	324 JumpIfEqual {356}
	325 Move X0, X25
	326 Call 0x1C17F18
	327 Move X0, 0xE15000
	328 Move X0, [X0+3448]
	329 Call 0x1C17D08
	330 Move W8, [X0+224]
	331 Compare W8, 0
	332 JumpIfNotEqual {334}
	333 Call 0x1C17DFC
	334 Move X0, X31
	335 Call Sys.GetLastErrorInfo
	336 Move W2, 1
	337 Move X1, X21
	338 Move X3, X31
	339 Call Interop.GetExceptionForIoErrno, X0, X1, X2
	340 Move X19, X0
	341 Move X0, 0xE1E000
	342 Move X0, [X0+2816]
	343 Call 0x1C17D08
	344 Move X1, X0
	345 Move X0, X19
	346 Call 0x1C17DEC
	347 Move X0, X25
	348 Call 0x1C17F18
	349 Call 0x1C17F20
	350 Move X21, X1
	351 Move X19, X0
	352 Move X21, X1
	353 Move X19, X0
	354 Move X21, X1
	355 Move X19, X0
	356 NotImplemented "Instruction CMP not yet implemented."
	357 Move X0, X19
	358 Call 0x3EB2AD0
	359 Move X20, [X0]
	360 Call 0x3EB2AE0
	361 Compare X20, 0
	362 JumpIfEqual {371}
	363 Move X0, X20
	364 Call 0x1C17F18
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Move X0, X19
	367 Call 0x3EB2AD0
	368 Move X8, [X0]
	369 Move [X31+16], X8
	370 Call 0x3EB2AE0
	371 Add X0, X31, 16
	372 Call 0x1BB8474
	373 Move X20, [X31+256]
	374 Move X19, [X31+264]
	375 Move X22, [X31+240]
	376 Move X21, [X31+248]
	377 Move X24, [X31+224]
	378 Move X23, [X31+232]
	379 Move X26, [X31+208]
	380 Move X25, [X31+216]
	381 Move X28, [X31+192]
	382 Move X27, [X31+200]
	383 Move X29, [X31+176]
	384 Move X30, [X31+184]
	385 Add X31, X31, 272
	386 Return 
	387 Compare X20, 0
	388 JumpIfEqual {352}
	389 Move X0, X20
	390 Call 0x1C17F18
	391 Move X19, X0
	392 Add X0, X31, 16
	393 Call 0x1BB8474
	394 Move X0, X19
	395 Call 0x1D2D690
	396 Call 0x1991590

Method: System.String FindTimeZoneId(System.Byte[] rawData)

Disassembly:
	0x0330A3B8 STRB W8, [X22 + 0xB4F]
	0x0330A3BC LDR X0, [X21]
	0x0330A3C0 STP X31, X31, [X31 + 0x20]
	0x0330A3C4 STRB W31, [X31 + 0x1C]
	0x0330A3C8 STR X31, [X31 + 0x10]
	0x0330A3CC BL 0x1C16F10
	0x0330A3D0 LDR X1, [X19]
	0x0330A3D4 MOV X19, X0
	0x0330A3D8 BL 0x301B7C4
	0x0330A3DC LDR X0, [X20]
	0x0330A3E0 LDR W8, [X0 + 0xE0]
	0x0330A3E4 CBNZ W8, 0x330A3EC
	0x0330A3E8 BL 0x1C16DFC
	0x0330A3EC ADRP X27, 0xDEB000
	0x0330A3F0 ADRP X28, 0xDEB000
	0x0330A3F4 ADRP X25, 0xE1D000
	0x0330A3F8 ADRP X22, 0xE1D000
	0x0330A3FC ADRP X23, 0xE1D000
	0x0330A400 ADRP X26, 0xE1D000
	0x0330A404 ADRP X24, 0xE1D000
	0x0330A408 LDR X27, [X27 + 0x570]
	0x0330A40C LDR X28, [X28 + 0x170]
	0x0330A410 LDR X25, [X25 + 0xB40]
	0x0330A414 LDR X22, [X22 + 0xB50]
	0x0330A418 LDR X23, [X23 + 0xB48]
	0x0330A41C LDR X26, [X26 + 0xA38]
	0x0330A420 LDR X24, [X24 + 0xB18]
	0x0330A424 MOV X0, X31
	0x0330A428 BL 0x33616A4
	0x0330A42C STR X0, [X31]
	0x0330A430 ADD X0, X31, 0x0
	0x0330A434 MOV X1, X31
	0x0330A438 BL 0x3361868
	0x0330A43C MOV W21, W0
	0x0330A440 MOVZ W20, 0x7F6
	0x0330A444 SUB W20, W20, 0x1
	0x0330A448 ADD X1, X31, 0x28
	0x0330A44C ADD X2, X31, 0x20
	0x0330A450 ADD X3, X31, 0x1C
	0x0330A454 MOV W0, W20
	0x0330A458 MOV X4, X31
	0x0330A45C BL 0x335E8B4
	0x0330A460 TBZ X0, 0x0, 0x330A720
	0x0330A464 LDR X8, [X31 + 0x28]
	0x0330A468 CBZ X8, 0x330A71C
	0x0330A46C LDR W9, [X8 + 0x18]
	0x0330A470 CMP W9, 0x3
	0x0330A474 B.LS 0x330A768
	0x0330A478 LDR X29, [X8 + 0x38]
	0x0330A47C CBNZ X29, 0x330A490
	0x0330A480 CMP W20, 0x7B3
	0x0330A484 B.HI 0x330A444
	0x0330A488 MOV X20, X31
	0x0330A48C B 0x330A4A8
	0x0330A490 LDR X8, [X31 + 0x20]
	0x0330A494 CBZ X8, 0x330A71C
	0x0330A498 LDR W9, [X8 + 0x18]
	0x0330A49C CMP W9, 0x1
	0x0330A4A0 B.LS 0x330A768
	0x0330A4A4 LDR X20, [X8 + 0x28]
	0x0330A4A8 ADD X1, X31, 0x28
	0x0330A4AC ADD X2, X31, 0x20
	0x0330A4B0 ADD X3, X31, 0x1C
	0x0330A4B4 MOV W0, W21
	0x0330A4B8 MOV X4, X31
	0x0330A4BC BL 0x335E8B4
	0x0330A4C0 TBZ X0, 0x0, 0x330A720
	0x0330A4C4 LDR X8, [X31 + 0x28]
	0x0330A4C8 CBZ X8, 0x330A71C
	0x0330A4CC LDR W9, [X8 + 0x18]
	0x0330A4D0 CMP W9, 0x2
	0x0330A4D4 B.LS 0x330A768
	0x0330A4D8 LDR X0, [X27]
	0x0330A4DC LDR X21, [X8 + 0x30]
	0x0330A4E0 LDR W9, [X0 + 0xE0]
	0x0330A4E4 CBNZ W9, 0x330A4EC
	0x0330A4E8 BL 0x1C16DFC
	0x0330A4EC MOV X0, X21
	0x0330A4F0 MOV X1, X31
	0x0330A4F4 BL 0x339481C
	0x0330A4F8 LDR X8, [X27]
	0x0330A4FC STR X0, [X31 + 0x10]
	0x0330A500 MOV X2, X31
	0x0330A504 LDR X8, [X8 + 0xB8]
	0x0330A508 LDR X1, [X8]
	0x0330A50C BL 0x3394D14
	0x0330A510 ANDS W31, W0, 0x1
	0x0330A514 LDR X0, [X28]
	0x0330A518 MOVZ W8, 0x2D
	0x0330A51C MOVZ W9, 0x2B
	0x0330A520 CSEL W8, W9, W8, NE
	0x0330A524 STRH W8, [X31 + 0xC]
	0x0330A528 LDR W8, [X0 + 0xE0]
	0x0330A52C CBNZ W8, 0x330A534
	0x0330A530 BL 0x1C16DFC
	0x0330A534 ADD X0, X31, 0xC
	0x0330A538 BL 0x330A76C
	0x0330A53C LDR X8, [X27]
	0x0330A540 MOV X21, X0
	0x0330A544 LDR W9, [X8 + 0xE0]
	0x0330A548 CBNZ W9, 0x330A554
	0x0330A54C MOV X0, X8
	0x0330A550 BL 0x1C16DFC
	0x0330A554 LDR X1, [X25]
	0x0330A558 ADD X0, X31, 0x10
	0x0330A55C MOV X2, X31
	0x0330A560 BL 0x33949D4
	0x0330A564 LDR X8, [X22]
	0x0330A568 LDR X3, [X23]
	0x0330A56C MOV X2, X0
	0x0330A570 MOV X1, X21
	0x0330A574 MOV X0, X8
	0x0330A578 MOV X4, X31
	0x0330A57C BL 0x32277C4
	0x0330A580 LDR X8, [X31 + 0x20]
	0x0330A584 CBZ X8, 0x330A71C
	0x0330A588 ADRP X25, 0xE1D000
	0x0330A58C LDR W9, [X8 + 0x18]
	0x0330A590 LDR X25, [X25 + 0xB38]
	0x0330A594 CBZ W9, 0x330A768
	0x0330A598 LDR X22, [X8 + 0x20]
	0x0330A59C MOV X21, X0
	0x0330A5A0 CBZ X20, 0x330A68C
	0x0330A5A4 CBZ X29, 0x330A69C
	0x0330A5A8 MOVZ W23, 0x7B3
	0x0330A5AC LDR X0, [X26]
	0x0330A5B0 LDR W8, [X0 + 0xE0]
	0x0330A5B4 CBNZ W8, 0x330A5BC
	0x0330A5B8 BL 0x1C16DFC
	0x0330A5BC ADD X1, X31, 0x28
	0x0330A5C0 ADD X2, X31, 0x20
	0x0330A5C4 MOV W0, W23
	0x0330A5C8 BL 0x33119D0
	0x0330A5CC CBZ X0, 0x330A71C
	0x0330A5D0 LDR W8, [X0 + 0x18]
	0x0330A5D4 MOV X1, X0
	0x0330A5D8 CMP W8, 0x1
	0x0330A5DC B.LT 0x330A5F0
	0x0330A5E0 CBZ X19, 0x330A71C
	0x0330A5E4 LDR X2, [X24]
	0x0330A5E8 MOV X0, X19
	0x0330A5EC BL 0x301C194
	0x0330A5F0 ADD W23, W23, 0x1
	0x0330A5F4 CMP W23, 0x7F6
	0x0330A5F8 B.NE 0x330A5AC
	0x0330A5FC LDR X0, [X25]
	0x0330A600 LDR W8, [X0 + 0xE0]
	0x0330A604 CBNZ W8, 0x330A610
	0x0330A608 BL 0x1C16DFC
	0x0330A60C LDR X0, [X25]
	0x0330A610 LDR X8, [X0 + 0xB8]
	0x0330A614 LDR X23, [X8 + 0x30]
	0x0330A618 CBNZ X23, 0x330A66C
	0x0330A61C LDR W8, [X0 + 0xE0]
	0x0330A620 CBNZ W8, 0x330A62C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x10D3000
	009 Move X21, 0xE1E000
	010 Move W8, [X19+2826]
	011 Move X21, [X21+2776]
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {46}
	017 Move X0, 0xDEA000
	018 Move X0, [X0+1560]
	019 Call 0x1C17CF4
	020 Move X0, 0xE11000
	021 Move X0, [X0+464]
	022 Call 0x1C17CF4
	023 Move X0, 0xE1E000
	024 Move X0, [X0+2784]
	025 Call 0x1C17CF4
	026 Move X0, 0xE1E000
	027 Move X0, [X0+2616]
	028 Call 0x1C17CF4
	029 Move X0, 0xE1E000
	030 Move X0, [X0+2792]
	031 Call 0x1C17CF4
	032 Move X0, 0xE1E000
	033 Move X0, [X0+2776]
	034 Call 0x1C17CF4
	035 Move X0, 0xE1E000
	036 Move X0, [X0+2624]
	037 Call 0x1C17CF4
	038 Move X0, 0xE1E000
	039 Move X0, [X0+2744]
	040 Call 0x1C17CF4
	041 Move X0, 0xE1E000
	042 Move X0, [X0+2800]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X19+2826], W8
	046 Move X0, [X21]
	047 Call 0x1C17F10
	048 Move X1, X31
	049 Move X19, X0
	050 Call Object..ctor, X0
	051 Compare X19, 0
	052 JumpIfEqual {127}
	053 Move X8, 0xE1E000
	054 Move X8, [X8+2624]
	055 Move [X19+40], X20
	056 Move X22, 0xE1E000
	057 Move X24, 0xE11000
	058 Move X8, [X8]
	059 Move X22, [X22+2616]
	060 Move [X19+48], X8
	061 Move X0, [X22]
	062 Move W8, [X0+224]
	063 Move X24, [X24+464]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X23, 0xE1E000
	068 Move X21, 0xE1E000
	069 Move X23, [X23+2744]
	070 Move X21, [X21+2800]
	071 Call TimeZoneInfo.GetTimeZoneDirectory
	072 Move [X19+56], X0
	073 Move X20, X0
	074 Move X0, [X24]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X1, [X23]
	080 Move X0, X20
	081 Move X2, X31
	082 Call Path.Combine, X0, X1
	083 Move [X19+16], X0
	084 Move X0, [X19+56]
	085 Move X1, [X21]
	086 Move X2, X31
	087 Call Path.Combine, X0, X1
	088 Move X8, [X19+40]
	089 Move [X19+24], X0
	090 Compare X8, 0
	091 JumpIfEqual {127}
	092 Move X9, 0xDEA000
	093 Move X9, [X9+1560]
	094 Move W1, [X8+24]
	095 Move X21, 0xE1E000
	096 Move X0, [X9]
	097 Move X21, [X21+2784]
	098 Call 0x1C17D6C
	099 Move [X19+32], X0
	100 Move X20, [X19+56]
	101 Move X0, [X21]
	102 Call 0x1C17F10
	103 Move X8, 0xE1E000
	104 Move X8, [X8+2792]
	105 Move X21, X0
	106 Move X2, [X8]
	107 Move X1, X19
	108 Move X3, X31
	109 Call Predicate`1<Object>..ctor, X0, X1, X2
	110 Move X0, [X22]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Move X0, X20
	116 Move X1, X21
	117 Call TimeZoneInfo.EnumerateFilesRecursively, X0, X1
	118 Move X0, [X19+48]
	119 Move X20, [X31+48]
	120 Move X19, [X31+56]
	121 Move X22, [X31+32]
	122 Move X21, [X31+40]
	123 Move X24, [X31+16]
	124 Move X23, [X31+24]
	125 Move X30, [X31+64]
	126 Return X0
	127 Call 0x1C17F20
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X20, X0
	130 Move X0, X20
	131 Call 0x3EB2AD0
	132 Move X20, X0
	133 Move X0, 0xE18000
	134 Move X0, [X0+1960]
	135 Call 0x1C17D08
	136 Move X8, [X20]
	137 Move X1, [X8]
	138 Call 0x1C18270
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfEqual {163}
	143 Move X0, 0xE18000
	144 Move X0, [X0+1680]
	145 Call 0x1C17D08
	146 Move X8, [X20]
	147 Move X1, [X8]
	148 Call 0x1C18270
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfEqual {163}
	153 Move X0, 0xE18000
	154 Move X0, [X0+1976]
	155 Call 0x1C17D08
	156 Move X8, [X20]
	157 Move X1, [X8]
	158 Call 0x1C18270
	159 Move TEMP, X0
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfNotEqual {164}
	163 Call 0x3EB2AE0
	164 Move W0, 8
	165 Call 0x3EB2AF0
	166 Move X8, [X20]
	167 Move [X0], X8
	168 Move X1, 0xBAB000
	169 Add X1, X1, 3672
	170 Move X2, X31
	171 Call 0x3EB2B00
	172 Move X20, X0
	173 Call 0x3EB2AE0
	174 Move X0, X20
	175 Call 0x1D2D690
	176 Call 0x1991590

Method: System.Boolean CompareTimeZoneFile(System.String filePath, System.Byte[] buffer, System.Byte[] rawData)

Disassembly:
	0x0330AD50 LDR X22, [X11 + 0x20]
	0x0330AD54 CMP W8, W9
	0x0330AD58 B.GE 0x330AEE0
	0x0330AD5C CBZ X25, 0x330B27C
	0x0330AD60 LDR W11, [X25 + 0x18]
	0x0330AD64 CMP W10, W11
	0x0330AD68 B.CS 0x330B278
	0x0330AD6C CBZ X23, 0x330B27C
	0x0330AD70 ADD X10, X25, X10
	0x0330AD74 LDRB W10, [X10 + 0x20]
	0x0330AD78 LDR W11, [X23 + 0x18]
	0x0330AD7C CMP W10, W11
	0x0330AD80 B.CS 0x330B278
	0x0330AD84 CMP W8, W9
	0x0330AD88 B.CS 0x330B278
	0x0330AD8C ADD X8, X24, X8, 0x3, LSL
	0x0330AD90 ADRP X27, 0xE1D000
	0x0330AD94 LDR X8, [X8 + 0x20]
	0x0330AD98 LDR X27, [X27 + 0xA38]
	0x0330AD9C ADD X9, X23, X10, 0x4, LSL
	0x0330ADA0 LDP X23, X24, [X9 + 0x20]
	0x0330ADA4 STR X8, [X31 + 0xB8]
	0x0330ADA8 LDR X0, [X27]
	0x0330ADAC LDR W8, [X0 + 0xE0]
	0x0330ADB0 CBNZ W8, 0x330ADB8
	0x0330ADB4 BL 0x1C16DFC
	0x0330ADB8 MOV X0, X23
	0x0330ADBC MOV X1, X21
	0x0330ADC0 BL 0x330B330
	0x0330ADC4 ADRP X25, 0xDEB000
	0x0330ADC8 LDR X25, [X25 + 0x570]
	0x0330ADCC MOV X23, X0
	0x0330ADD0 LDR X8, [X25]
	0x0330ADD4 LDR W9, [X8 + 0xE0]
	0x0330ADD8 TBNZ X24, 0x0, 0x330AFFC
	0x0330ADDC CBNZ W9, 0x330ADEC
	0x0330ADE0 MOV X0, X8
	0x0330ADE4 BL 0x1C16DFC
	0x0330ADE8 LDR X8, [X25]
	0x0330ADEC LDR X8, [X8 + 0xB8]
	0x0330ADF0 MOV W28, W31
	0x0330ADF4 MOV X25, X31
	0x0330ADF8 MOV X24, X23
	0x0330ADFC LDR X8, [X8]
	0x0330AE00 STUR W31, [X26 + 0x3]
	0x0330AE04 STR W31, [X31 + 0xB0]
	0x0330AE08 MOV X23, X8
	0x0330AE0C B 0x330B068
	0x0330AE10 CBNZ W9, 0x330AE20
	0x0330AE14 MOV X0, X8
	0x0330AE18 BL 0x1C16DFC
	0x0330AE1C LDR X8, [X24]
	0x0330AE20 LDR X8, [X8 + 0xB8]
	0x0330AE24 MOV X23, X22
	0x0330AE28 LDR X8, [X8]
	0x0330AE2C MOV X22, X8
	0x0330AE30 ADRP X24, 0xDEA000
	0x0330AE34 LDR X24, [X24 + 0x9F0]
	0x0330AE38 LDR X0, [X24]
	0x0330AE3C LDR W8, [X0 + 0xE0]
	0x0330AE40 CBNZ W8, 0x330AE4C
	0x0330AE44 BL 0x1C16DFC
	0x0330AE48 LDR X0, [X24]
	0x0330AE4C LDR X8, [X0 + 0xB8]
	0x0330AE50 ADD X0, X31, 0xC8
	0x0330AE54 MOVN X1, 0x0
	0x0330AE58 MOV X2, X31
	0x0330AE5C LDR X24, [X8 + 0x10]
	0x0330AE60 BL 0x335FCCC
	0x0330AE64 MOV X1, X0
	0x0330AE68 ADD X3, X31, 0x80
	0x0330AE6C ADD X4, X31, 0x68
	0x0330AE70 MOVZ W6, 0x1
	0x0330AE74 MOV X0, X24
	0x0330AE78 MOV X2, X23
	0x0330AE7C MOV X5, X22
	0x0330AE80 STP X31, X31, [X31 + 0x88]
	0x0330AE84 STP X31, X31, [X31 + 0x78]
	0x0330AE88 STP X31, X31, [X31 + 0x68]
	0x0330AE8C BL 0x330B420
	0x0330AE90 LDR X8, [X25]
	0x0330AE94 STR X0, [X31 + 0xC0]
	0x0330AE98 MOV X22, X0
	0x0330AE9C LDR W9, [X8 + 0xE0]
	0x0330AEA0 CBNZ W9, 0x330AEAC
	0x0330AEA4 MOV X0, X8
	0x0330AEA8 BL 0x1C16DFC
	0x0330AEAC MOV X0, X21
	0x0330AEB0 MOV X1, X22
	0x0330AEB4 BL 0x330B4E8
	0x0330AEB8 TBNZ X0, 0x0, 0x330B1F0
	0x0330AEBC LDR X0, [X25]
	0x0330AEC0 LDR W8, [X0 + 0xE0]
	0x0330AEC4 CBNZ W8, 0x330AECC
	0x0330AEC8 BL 0x1C16DFC
	0x0330AECC ADD X1, X31, 0xC0
	0x0330AED0 MOV X0, X21
	0x0330AED4 BL 0x330B55C
	0x0330AED8 LDR X22, [X31 + 0xC0]
	0x0330AEDC B 0x330B1F0
	0x0330AEE0 LDR X24, [X31 + 0x130]
	0x0330AEE4 MOV X1, X31
	0x0330AEE8 MOV X0, X24
	0x0330AEEC BL 0x32277A8
	0x0330AEF0 TBZ X0, 0x0, 0x330AF84
	0x0330AEF4 CBZ X25, 0x330B27C
	0x0330AEF8 LDR W8, [X19]
	0x0330AEFC LDR W9, [X25 + 0x18]
	0x0330AF00 SUB W8, W8, 0x1
	0x0330AF04 CMP W8, W9
	0x0330AF08 B.CS 0x330B278
	0x0330AF0C CBZ X23, 0x330B27C
	0x0330AF10 ADD X8, X25, W8, SXTW
	0x0330AF14 LDRB W8, [X8 + 0x20]
	0x0330AF18 LDR W9, [X23 + 0x18]
	0x0330AF1C CMP W8, W9
	0x0330AF20 B.CS 0x330B278
	0x0330AF24 ADRP X25, 0xE1D000
	0x0330AF28 LDR X25, [X25 + 0xA38]
	0x0330AF2C ADD X8, X23, X8, 0x4, LSL
	0x0330AF30 LDP X23, X24, [X8 + 0x20]
	0x0330AF34 LDR X0, [X25]
	0x0330AF38 LDR W9, [X0 + 0xE0]
	0x0330AF3C CBNZ W9, 0x330AF44
	0x0330AF40 BL 0x1C16DFC
	0x0330AF44 MOV X0, X23
	0x0330AF48 MOV X1, X21
	0x0330AF4C BL 0x330B330
	0x0330AF50 ADRP X26, 0xDEB000
	0x0330AF54 LDR X26, [X26 + 0x570]
	0x0330AF58 MOV X23, X0
	0x0330AF5C LDR X8, [X26]
	0x0330AF60 LDR W9, [X8 + 0xE0]
	0x0330AF64 TBNZ X24, 0x0, 0x330B134
	0x0330AF68 CBNZ W9, 0x330AF78
	0x0330AF6C MOV X0, X8
	0x0330AF70 BL 0x1C16DFC
	0x0330AF74 LDR X8, [X26]
	0x0330AF78 LDR X8, [X8 + 0xB8]
	0x0330AF7C LDR X24, [X8]
	0x0330AF80 B 0x330B154
	0x0330AF84 ADRP X23, 0xE1D000
	0x0330AF88 LDR X23, [X23 + 0xA38]
	0x0330AF8C LDR X0, [X23]
	0x0330AF90 LDR W8, [X0 + 0xE0]
	0x0330AF94 CBNZ W8, 0x330AF9C
	0x0330AF98 BL 0x1C16DFC
	0x0330AF9C MOV X0, X24
	0x0330AFA0 MOV X1, X22
	0x0330AFA4 MOV X2, X21
	0x0330AFA8 BL 0x330B7FC
	0x0330AFAC STR X0, [X31 + 0xA0]
	0x0330AFB0 CBZ X0, 0x330B24C
	0x0330AFB4 MOV X22, X0
	0x0330AFB8 LDR X0, [X23]
	0x0330AFBC LDR W8, [X0 + 0xE0]
	0x0330AFC0 CBNZ W8, 0x330AFC8
	0x0330AFC4 BL 0x1C16DFC
	0x0330AFC8 MOV X0, X21
	0x0330AFCC MOV X1, X22
	0x0330AFD0 BL 0x330B4E8
	0x0330AFD4 TBNZ X0, 0x0, 0x330B1F0
	0x0330AFD8 LDR X0, [X23]
	0x0330AFDC LDR W8, [X0 + 0xE0]
	0x0330AFE0 CBNZ W8, 0x330AFE8
	0x0330AFE4 BL 0x1C16DFC
	0x0330AFE8 ADD X1, X31, 0xA0
	0x0330AFEC MOV X0, X21
	0x0330AFF0 BL 0x330B55C
	0x0330AFF4 LDR X22, [X31 + 0xA0]
	0x0330AFF8 B 0x330B1F0
	0x0330AFFC CBNZ W9, 0x330B00C
	0x0330B000 MOV X0, X8
	0x0330B004 BL 0x1C16DFC
	0x0330B008 LDR X8, [X25]
	0x0330B00C ADRP X25, 0xDE9000
	0x0330B010 LDR X25, [X25 + 0x9F0]
	0x0330B014 LDR X8, [X8 + 0xB8]
	0x0330B018 LDR X0, [X25]
	0x0330B01C LDR X24, [X8]
	0x0330B020 LDR W9, [X0 + 0xE0]
	0x0330B024 CBNZ W9, 0x330B030
	0x0330B028 BL 0x1C16DFC
	0x0330B02C LDR X0, [X25]
	0x0330B030 LDR X8, [X0 + 0xB8]
	0x0330B034 FMOV D0, 2
	0x0330B038 MOV X1, X31
	0x0330B03C ADD X0, X8, 0x10
	0x0330B040 BL 0x335FF68
	0x0330B044 MOVZ W1, 0x1
	0x0330B048 MOVZ W2, 0x1
	0x0330B04C MOVZ W3, 0x1
	0x0330B050 MOV W4, W31
	0x0330B054 MOV X25, X0
	0x0330B058 STR W31, [X31 + 0xB0]
	0x0330B05C STUR W31, [X26 + 0x3]
	0x0330B060 MOVZ W28, 0x1
	0x0330B064 BL 0x33135A0
	0x0330B068 ADRP X8, 0xDE9000
	0x0330B06C LDR X8, [X8 + 0x9F0]
	0x0330B070 LDR X0, [X8]
	0x0330B074 LDR W8, [X0 + 0xE0]
	0x0330B078 CBNZ W8, 0x330B080
	0x0330B07C BL 0x1C16DFC
	0x0330B080 ADD X0, X31, 0xB8
	0x0330B084 MOVN X1, 0x0
	0x0330B088 MOV X2, X31
	0x0330B08C BL 0x335FCCC
	0x0330B090 LDR W8, [X31 + 0xB0]
	0x0330B094 LDUR W9, [X26 + 0x3]
	0x0330B098 MOV X1, X0
	0x0330B09C ADD X3, X31, 0x50
	0x0330B0A0 ADD X4, X31, 0x38
	0x0330B0A4 MOVZ W6, 0x1
	0x0330B0A8 MOV X0, X22
	0x0330B0AC MOV X2, X23
	0x0330B0B0 MOV X5, X24
	0x0330B0B4 STP X31, X31, [X31 + 0x40]
	0x0330B0B8 STR X31, [X31 + 0x38]
	0x0330B0BC STR X25, [X31 + 0x50]
	0x0330B0C0 STRB W28, [X31 + 0x58]
	0x0330B0C4 STRB W28, [X31 + 0x59]
	0x0330B0C8 STRB W28, [X31 + 0x5A]
	0x0330B0CC STRB W31, [X31 + 0x5B]
	0x0330B0D0 STR W31, [X31 + 0x5C]
	0x0330B0D4 STRB W28, [X31 + 0x60]
	0x0330B0D8 STUR W8, [X31 + 0x61]
	0x0330B0DC STR W9, [X31 + 0x64]
	0x0330B0E0 BL 0x330B420
	0x0330B0E4 LDR X8, [X27]
	0x0330B0E8 STR X0, [X31 + 0xA8]
	0x0330B0EC MOV X22, X0
	0x0330B0F0 LDR W9, [X8 + 0xE0]
	0x0330B0F4 CBNZ W9, 0x330B100
	0x0330B0F8 MOV X0, X8
	0x0330B0FC BL 0x1C16DFC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x10D3000
	009 Move X23, 0xE18000
	010 Move W8, [X19+2827]
	011 Move X23, [X23+1648]
	012 Move X20, X2
	013 Move X21, X1
	014 Move X22, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xE18000
	020 Move X0, [X0+1648]
	021 Call 0x1C17CF4
	022 Move X0, 0xDEA000
	023 Move X0, [X0+3584]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+2827], W8
	027 Move X0, [X23]
	028 Call 0x1C17F10
	029 Move X19, X0
	030 Move W2, 3
	031 Move W3, 1
	032 Move W4, 1
	033 Move W5, 1
	034 Move X1, X22
	035 Move X6, X31
	036 Call FileStream..ctor, X0, X1, X2, X3, X4, X5
	037 Move X24, 0xDEA000
	038 Move X24, [X24+3584]
	039 Compare X19, 0
	040 JumpIfEqual {141}
	041 Move X8, [X19]
	042 Move X9, [X8+488]
	043 Move X1, [X8+496]
	044 Move X0, X19
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Compare X20, 0
	047 JumpIfEqual {142}
	048 Move X22, [X20+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W23, W31
	052 Move X8, [X19]
	053 Move X9, [X8+856]
	054 Move X4, [X8+864]
	055 Move X0, X19
	056 Move X1, X21
	057 Move W2, W23
	058 Move W3, W22
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Compare W0, 0
	061 JumpIfEqual {132}
	062 Add W8, W0, W23
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Compare X21, 0
	065 JumpIfEqual {145}
	066 Move W9, [X21+24]
	067 Move W10, W0
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W12, [X20+24]
	070 Move X11, W23
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Add X12, X21, X11
	073 Add X13, X20, X11
	074 Move W12, [X12+32]
	075 Move W13, [X13+32]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract W10, W10, 1
	078 Add W23, W11, 1
	079 Move W23, W8
	080 Subtract W22, W22, W0
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X20, X31
	083 Move W21, 1
	084 Move W22, 1
	085 Compare X19, 0
	086 JumpIfNotEqual {98}
	087 Move W22, W31
	088 Move W21, W31
	089 Move X20, X31
	090 Move X20, X31
	091 Move W22, W31
	092 Move W21, 1
	093 Compare X19, 0
	094 JumpIfNotEqual {98}
	095 Move X20, X31
	096 Move W22, 1
	097 Move W21, 1
	098 Move X8, [X19]
	099 Move X1, [X24]
	100 NotImplemented "Instruction LDRH not yet implemented."
	101 Compare X9, 0
	102 JumpIfEqual {109}
	103 Move X10, [X8+176]
	104 Add X10, X10, 8
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Subtract X9, X9, 1
	108 Add X10, X10, 16
	109 Move X0, X19
	110 Move W2, W31
	111 Call 0x1C5D788
	112 NotImplemented "Instruction LDRSW not yet implemented."
	113 Add X8, X8, X9
	114 Add X0, X8, 312
	115 Move X8, [X0]
	116 Move X1, [X0+8]
	117 Move X0, X19
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Compare X20, 0
	120 JumpIfNotEqual {143}
	121 And W0, W21, W22
	122 Move X20, [X31+48]
	123 Move X19, [X31+56]
	124 Move X22, [X31+32]
	125 Move X21, [X31+40]
	126 Move X24, [X31+16]
	127 Move X23, [X31+24]
	128 Move X30, [X31+64]
	129 Return X0
	130 Call 0x1C17F28
	131 Call 0x1C17F28
	132 Move X0, X31
	133 Call Error.GetEndOfFile
	134 Move X20, X0
	135 Move X0, 0xE1E000
	136 Move X0, [X0+2824]
	137 Call 0x1C17D08
	138 Move X1, X0
	139 Move X0, X20
	140 Call 0x1C17DEC
	141 Call 0x1C17F20
	142 Call 0x1C17F20
	143 Move X0, X20
	144 Call 0x1C17F18
	145 Call 0x1C17F20
	146 Move X22, X1
	147 Move X21, X0
	148 Move X22, X1
	149 Move X21, X0
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X0, X21
	152 Call 0x3EB2AD0
	153 Move X20, [X0]
	154 Call 0x3EB2AE0
	155 Move W21, W31
	156 Move W22, W31
	157 Compare X19, 0
	158 JumpIfNotEqual {98}
	159 Move X20, X31
	160 Compare X19, 0
	161 JumpIfEqual {183}
	162 Move X8, [X19]
	163 Move X1, [X24]
	164 NotImplemented "Instruction LDRH not yet implemented."
	165 Compare X9, 0
	166 JumpIfEqual {173}
	167 Move X10, [X8+176]
	168 Add X10, X10, 8
	169 NotImplemented "Instruction LDUR not yet implemented."
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Subtract X9, X9, 1
	172 Add X10, X10, 16
	173 Move X0, X19
	174 Move W2, W31
	175 Call 0x1C5D788
	176 NotImplemented "Instruction LDRSW not yet implemented."
	177 Add X8, X8, X9
	178 Add X0, X8, 312
	179 Move X8, [X0]
	180 Move X1, [X0+8]
	181 Move X0, X19
	182 NotImplemented "Instruction BLR not yet implemented."
	183 Compare X20, 0
	184 JumpIfNotEqual {221}
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X0, X21
	187 Call 0x3EB2AD0
	188 Move X19, X0
	189 Move X0, 0xE17000
	190 Move X0, [X0+1960]
	191 Call 0x1C17D08
	192 Move X8, [X19]
	193 Move X1, [X8]
	194 Call 0x1C18270
	195 Move TEMP, X0
	196 And TEMP, TEMP, 1
	197 Compare TEMP, 1
	198 JumpIfEqual {219}
	199 Move X0, 0xE17000
	200 Move X0, [X0+1680]
	201 Call 0x1C17D08
	202 Move X8, [X19]
	203 Move X1, [X8]
	204 Call 0x1C18270
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfEqual {219}
	209 Move X0, 0xE17000
	210 Move X0, [X0+1976]
	211 Call 0x1C17D08
	212 Move X8, [X19]
	213 Move X1, [X8]
	214 Call 0x1C18270
	215 Move TEMP, X0
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfNotEqual {223}
	219 Call 0x3EB2AE0
	220 Move W0, W31
	221 Move X0, X20
	222 Call 0x1C17F18
	223 Move W0, 8
	224 Call 0x3EB2AF0
	225 Move X8, [X19]
	226 Move [X0], X8
	227 Move X1, 0xBAA000
	228 Add X1, X1, 3672
	229 Move X2, X31
	230 Call 0x3EB2B00
	231 Move X22, X1
	232 Move X21, X0
	233 Compare X19, 0
	234 JumpIfNotEqual {162}
	235 Move X21, X0
	236 Call 0x3EB2AE0
	237 Move X0, X21
	238 Call 0x1D2D690
	239 Call 0x1991590

Method: System.TimeZoneInfo GetLocalTimeZoneFromTzFile()

Disassembly:
	0x03309BF8 MOV X0, X24
	0x03309BFC MOV X1, X31
	0x03309C00 BL 0x32099FC
	0x03309C04 CBZ X25, 0x3309CB8
	0x03309C08 MOV X0, X25
	0x03309C0C BL 0x1C16F18
	0x03309C10 ADRP X0, 0xE15000
	0x03309C14 LDR X0, [X0 + 0xD78]
	0x03309C18 BL 0x1C16D08
	0x03309C1C LDR W8, [X0 + 0xE0]
	0x03309C20 CBNZ W8, 0x3309C28
	0x03309C24 BL 0x1C16DFC
	0x03309C28 MOV X0, X31
	0x03309C2C BL 0x3209954
	0x03309C30 MOVZ W2, 0x1
	0x03309C34 MOV X1, X21
	0x03309C38 MOV X3, X31
	0x03309C3C BL 0x3208FE8
	0x03309C40 MOV X19, X0
	0x03309C44 ADRP X0, 0xE1E000
	0x03309C48 LDR X0, [X0 + 0xB00]
	0x03309C4C BL 0x1C16D08
	0x03309C50 MOV X1, X0
	0x03309C54 MOV X0, X19
	0x03309C58 BL 0x1C16DEC
	0x03309C5C MOV X0, X25
	0x03309C60 BL 0x1C16F18
	0x03309C64 BL 0x1C16F20
	0x03309C68 MOV X21, X1
	0x03309C6C MOV X19, X0
	0x03309C70 B 0x3309BD4
	0x03309C74 B 0x3309C80
	0x03309C78 B 0x3309C80
	0x03309C7C B 0x3309C80
	0x03309C80 MOV X21, X1
	0x03309C84 MOV X19, X0
	0x03309C88 B 0x3309CDC
	0x03309C8C B 0x3309CB0
	0x03309C90 B 0x3309CB0
	0x03309C94 B 0x3309CB0
	0x03309C98 B 0x3309CB0
	0x03309C9C B 0x3309CB0
	0x03309CA0 B 0x3309CB0
	0x03309CA4 B 0x3309CB0
	0x03309CA8 B 0x3309CB0
	0x03309CAC B 0x3309CB0
	0x03309CB0 MOV X21, X1
	0x03309CB4 MOV X19, X0
	0x03309CB8 CMP W21, 0x1
	0x03309CBC B.NE 0x3309CDC
	0x03309CC0 MOV X0, X19
	0x03309CC4 BL 0x3EB1AD0
	0x03309CC8 LDR X20, [X0]
	0x03309CCC BL 0x3EB1AE0
	0x03309CD0 CBZ X20, 0x3309CF8
	0x03309CD4 MOV X0, X20
	0x03309CD8 BL 0x1C16F18
	0x03309CDC CMP W21, 0x1
	0x03309CE0 B.NE 0x3309D34
	0x03309CE4 MOV X0, X19
	0x03309CE8 BL 0x3EB1AD0
	0x03309CEC LDR X8, [X0]
	0x03309CF0 STR X8, [X31 + 0x10]
	0x03309CF4 BL 0x3EB1AE0
	0x03309CF8 ADD X0, X31, 0x10
	0x03309CFC BL 0x1BB7474
	0x03309D00 LDP X20, X19, [X31 + 0x100]
	0x03309D04 LDP X22, X21, [X31 + 0xF0]
	0x03309D08 LDP X24, X23, [X31 + 0xE0]
	0x03309D0C LDP X26, X25, [X31 + 0xD0]
	0x03309D10 LDP X28, X27, [X31 + 0xC0]
	0x03309D14 LDP X29, X30, [X31 + 0xB0]
	0x03309D18 ADD X31, X31, 0x110
	0x03309D1C RET
	0x03309D20 B 0x3309C80
	0x03309D24 CBZ X20, 0x3309C80
	0x03309D28 MOV X0, X20
	0x03309D2C BL 0x1C16F18
	0x03309D30 MOV X19, X0
	0x03309D34 ADD X0, X31, 0x10
	0x03309D38 BL 0x1BB7474
	0x03309D3C MOV X0, X19
	0x03309D40 BL 0x1D2C690
	0x03309D44 BL 0x1990590
	0x03309D48 MOV X1, X31
	0x03309D4C B 0x33BDD8C
	0x03309D50 STR X30, [X31 - 0x40]!
	0x03309D54 STP X24, X23, [X31 + 0x10]
	0x03309D58 STP X22, X21, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x10D4000
	007 Move X21, 0xE1F000
	008 Move W8, [X19+2828]
	009 Move X21, [X21+2616]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xE1F000
	015 Move X0, [X0+2616]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+2828], W8
	019 Move X0, [X21]
	020 Move [X31], X31
	021 Move [X31+8], X31
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X31, 8
	027 Add X1, X31, 0
	028 Call TimeZoneInfo.TryGetLocalTzFile, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {45}
	033 Move X0, [X21]
	034 Move X20, [X31]
	035 Move X19, [X31+8]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X20
	042 Call TimeZoneInfo.GetTimeZoneFromTzData, X0, X1
	043 Compare X0, 0
	044 JumpIfNotEqual {75}
	045 Move X0, [X21]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Call TimeZoneInfo.CreateLocalUnity
	051 Compare X0, 0
	052 JumpIfNotEqual {75}
	053 Move X0, [X21]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X19, 0x10D4000
	059 Move W8, [X19+3190]
	060 Compare W8, 0
	061 JumpIfNotEqual {67}
	062 Move X0, 0xE1F000
	063 Move X0, [X0+2616]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X19+3190], W8
	067 Move X0, [X21]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {73}
	071 Call 0x1C17DFC
	072 Move X0, [X21]
	073 Move X8, [X0+184]
	074 Move X0, [X8]
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X30, [X31+16]
	078 Move X21, [X31+24]
	079 Add X31, X31, 48
	080 Return X0
	081 Move X19, X0
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X0, X19
	084 Call 0x3EB2AD0
	085 Move X19, X0
	086 Move X0, 0xDF1000
	087 Move X0, [X0+3264]
	088 Call 0x1C17D08
	089 Move X8, [X19]
	090 Move X1, [X8]
	091 Call 0x1C18270
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {97}
	096 Call 0x3EB2AE0
	097 Move W0, 8
	098 Call 0x3EB2AF0
	099 Move X8, [X19]
	100 Move [X0], X8
	101 Move X1, 0xBAC000
	102 Add X1, X1, 3672
	103 Move X2, X31
	104 Call 0x3EB2B00
	105 Move X19, X0
	106 Call 0x3EB2AE0
	107 Move X0, X19
	108 Call 0x1D2D690
	109 Call 0x1991590

Method: System.TimeZoneInfo GetTimeZoneFromTzData(System.Byte[] rawData, System.String id)

Disassembly:
	0x0330B100 MOV X0, X21
	0x0330B104 MOV X1, X22
	0x0330B108 BL 0x330B4E8
	0x0330B10C TBNZ X0, 0x0, 0x330B1F0
	0x0330B110 LDR X0, [X27]
	0x0330B114 LDR W8, [X0 + 0xE0]
	0x0330B118 CBNZ W8, 0x330B120
	0x0330B11C BL 0x1C16DFC
	0x0330B120 ADD X1, X31, 0xA8
	0x0330B124 MOV X0, X21
	0x0330B128 BL 0x330B55C
	0x0330B12C LDR X22, [X31 + 0xA8]
	0x0330B130 B 0x330B1F0
	0x0330B134 CBNZ W9, 0x330B144
	0x0330B138 MOV X0, X8
	0x0330B13C BL 0x1C16DFC
	0x0330B140 LDR X8, [X26]
	0x0330B144 LDR X8, [X8 + 0xB8]
	0x0330B148 MOV X24, X23
	0x0330B14C LDR X8, [X8]
	0x0330B150 MOV X23, X8
	0x0330B154 ADRP X26, 0xDE9000
	0x0330B158 LDR X26, [X26 + 0x9F0]
	0x0330B15C LDR X0, [X26]
	0x0330B160 LDR W8, [X0 + 0xE0]
	0x0330B164 CBNZ W8, 0x330B170
	0x0330B168 BL 0x1C16DFC
	0x0330B16C LDR X0, [X26]
	0x0330B170 LDR X8, [X0 + 0xB8]
	0x0330B174 ADD X3, X31, 0x20
	0x0330B178 ADD X4, X31, 0x8
	0x0330B17C MOVZ W6, 0x1
	0x0330B180 LDR X1, [X8 + 0x18]
	0x0330B184 MOV X0, X22
	0x0330B188 MOV X2, X24
	0x0330B18C MOV X5, X23
	0x0330B190 STP X31, X31, [X31 + 0x20]
	0x0330B194 STR X31, [X31 + 0x30]
	0x0330B198 STP X31, X31, [X31 + 0x10]
	0x0330B19C STR X31, [X31 + 0x8]
	0x0330B1A0 BL 0x330B420
	0x0330B1A4 LDR X8, [X25]
	0x0330B1A8 STR X0, [X31 + 0x98]
	0x0330B1AC MOV X22, X0
	0x0330B1B0 LDR W9, [X8 + 0xE0]
	0x0330B1B4 CBNZ W9, 0x330B1C0
	0x0330B1B8 MOV X0, X8
	0x0330B1BC BL 0x1C16DFC
	0x0330B1C0 MOV X0, X21
	0x0330B1C4 MOV X1, X22
	0x0330B1C8 BL 0x330B4E8
	0x0330B1CC TBNZ X0, 0x0, 0x330B1F0
	0x0330B1D0 LDR X0, [X25]
	0x0330B1D4 LDR W8, [X0 + 0xE0]
	0x0330B1D8 CBNZ W8, 0x330B1E0
	0x0330B1DC BL 0x1C16DFC
	0x0330B1E0 ADD X1, X31, 0x98
	0x0330B1E4 MOV X0, X21
	0x0330B1E8 BL 0x330B55C
	0x0330B1EC LDR X22, [X31 + 0x98]
	0x0330B1F0 ADRP X9, 0xE1C000
	0x0330B1F4 LDR X9, [X9 + 0xB68]
	0x0330B1F8 LDR W10, [X20 + 0x1C]
	0x0330B1FC LDR X8, [X20 + 0x10]
	0x0330B200 LDR X9, [X9]
	0x0330B204 ADD W10, W10, 0x1
	0x0330B208 STR W10, [X20 + 0x1C]
	0x0330B20C CBZ X8, 0x330B27C
	0x0330B210 LDRSW X10, [X20 + 0x18]
	0x0330B214 LDR W11, [X8 + 0x18]
	0x0330B218 CMP W10, W11
	0x0330B21C B.CS 0x330B234
	0x0330B220 ADD W9, W10, 0x1
	0x0330B224 ADD X8, X8, X10, 0x3, LSL
	0x0330B228 STR W9, [X20 + 0x18]
	0x0330B22C STR X22, [X8 + 0x20]
	0x0330B230 B 0x330B24C
	0x0330B234 LDR X8, [X9 + 0x20]
	0x0330B238 MOV X0, X20
	0x0330B23C MOV X1, X22
	0x0330B240 LDR X8, [X8 + 0xC0]
	0x0330B244 LDR X2, [X8 + 0x70]
	0x0330B248 BL 0x301BF90
	0x0330B24C LDR W8, [X19]
	0x0330B250 LDP X22, X21, [X31 + 0x110]
	0x0330B254 LDP X24, X23, [X31 + 0x100]
	0x0330B258 LDP X26, X25, [X31 + 0xF0]
	0x0330B25C ADD W8, W8, 0x1
	0x0330B260 STR W8, [X19]
	0x0330B264 LDP X20, X19, [X31 + 0x120]
	0x0330B268 LDP X28, X27, [X31 + 0xE0]
	0x0330B26C LDP X29, X30, [X31 + 0xD0]
	0x0330B270 ADD X31, X31, 0x130
	0x0330B274 RET
	0x0330B278 BL 0x1C16F28
	0x0330B27C BL 0x1C16F20
	0x0330B280 STP X30, X19, [X31 - 0x10]!
	0x0330B284 CBZ X0, 0x330B2E4
	0x0330B288 LDR X8, [X0 + 0x18]
	0x0330B28C CMP W8, 0x1
	0x0330B290 B.LT 0x330B2BC
	0x0330B294 MOV W9, W31
	0x0330B298 CMP W8, W9
	0x0330B29C B.EQ 0x330B2E0
	0x0330B2A0 SXTW X9, W9
	0x0330B2A4 ADD X10, X0, X9, 0x4, LSL

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x10D2000
	008 Move W8, [X21+2829]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xE1D000
	016 Move X0, [X0+2616]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2829], W8
	020 Compare X20, 0
	021 JumpIfEqual {99}
	022 Move X23, 0xE1D000
	023 Move X23, [X23+2616]
	024 Move X0, [X23]
	025 Call 0x1C17F10
	026 Move X22, X0
	027 Move X1, X20
	028 Move X2, X19
	029 Move W3, W31
	030 Call TimeZoneInfo..ctor, X0, X1, X2, X3
	031 Move X21, X1
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X22, X0
	034 Move X0, X22
	035 Call 0x3EB2AD0
	036 Move X22, X0
	037 Move X0, 0xDF1000
	038 Move X0, [X0+1400]
	039 Call 0x1C17D08
	040 Move X8, [X22]
	041 Move X1, [X8]
	042 Call 0x1C18270
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {57}
	047 Move X0, 0xE1D000
	048 Move X0, [X0+2664]
	049 Call 0x1C17D08
	050 Move X8, [X22]
	051 Move X1, [X8]
	052 Call 0x1C18270
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {65}
	057 Call 0x3EB2AE0
	058 Move X0, [X23]
	059 Call 0x1C17F10
	060 Move X22, X0
	061 Move W3, 1
	062 Move X1, X20
	063 Move X2, X19
	064 Call TimeZoneInfo..ctor, X0, X1, X2, X3
	065 Move W0, 8
	066 Call 0x3EB2AF0
	067 Move X8, [X22]
	068 Move [X0], X8
	069 Move X1, 0xBAA000
	070 Add X1, X1, 3672
	071 Move X2, X31
	072 Call 0x3EB2B00
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X22, X0
	075 Move X0, X22
	076 Call 0x3EB2AD0
	077 Move X19, X0
	078 Move X0, 0xDF1000
	079 Move X0, [X0+1400]
	080 Call 0x1C17D08
	081 Move X8, [X19]
	082 Move X1, [X8]
	083 Call 0x1C18270
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfEqual {98}
	088 Move X0, 0xE1D000
	089 Move X0, [X0+2664]
	090 Call 0x1C17D08
	091 Move X8, [X19]
	092 Move X1, [X8]
	093 Call 0x1C18270
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {108}
	098 Call 0x3EB2AE0
	099 Move X22, X31
	100 Move X0, X22
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move X30, [X31+48]
	106 Move X23, [X31+56]
	107 Return X0
	108 Move W0, 8
	109 Call 0x3EB2AF0
	110 Move X8, [X19]
	111 Move [X0], X8
	112 Move X1, 0xBAA000
	113 Add X1, X1, 3672
	114 Move X2, X31
	115 Call 0x3EB2B00
	116 Move X22, X0
	117 Call 0x3EB2AE0
	118 Move X22, X0
	119 Call 0x3EB2AE0
	120 Move X0, X22
	121 Call 0x1D2D690
	122 Call 0x1991590

Method: System.String GetTimeZoneDirectory()

Disassembly:
	0x0330A13C LDR X23, [X23 + 0xA38]
	0x0330A140 LDR X0, [X23]
	0x0330A144 BL 0x1C16F10
	0x0330A148 MOV X22, X0
	0x0330A14C MOV X1, X20
	0x0330A150 MOV X2, X19
	0x0330A154 MOV W3, W31
	0x0330A158 BL 0x3307D44
	0x0330A15C B 0x330A254
	0x0330A160 MOV X21, X1
	0x0330A164 CMP W21, 0x1
	0x0330A168 MOV X22, X0
	0x0330A16C B.NE 0x330A29C
	0x0330A170 MOV X0, X22
	0x0330A174 BL 0x3EB1AD0
	0x0330A178 MOV X22, X0
	0x0330A17C ADRP X0, 0xDF1000
	0x0330A180 LDR X0, [X0 + 0x578]
	0x0330A184 BL 0x1C16D08
	0x0330A188 LDR X8, [X22]
	0x0330A18C LDR X1, [X8]
	0x0330A190 BL 0x1C17270
	0x0330A194 TBNZ X0, 0x0, 0x330A1B4
	0x0330A198 ADRP X0, 0xE1D000
	0x0330A19C LDR X0, [X0 + 0xA68]
	0x0330A1A0 BL 0x1C16D08
	0x0330A1A4 LDR X8, [X22]
	0x0330A1A8 LDR X1, [X8]
	0x0330A1AC BL 0x1C17270
	0x0330A1B0 TBZ X0, 0x0, 0x330A1D8
	0x0330A1B4 BL 0x3EB1AE0
	0x0330A1B8 LDR X0, [X23]
	0x0330A1BC BL 0x1C16F10
	0x0330A1C0 MOV X22, X0
	0x0330A1C4 MOVZ W3, 0x1
	0x0330A1C8 MOV X1, X20
	0x0330A1CC MOV X2, X19
	0x0330A1D0 BL 0x3307D44
	0x0330A1D4 B 0x330A254
	0x0330A1D8 MOVZ W0, 0x8
	0x0330A1DC BL 0x3EB1AF0
	0x0330A1E0 LDR X8, [X22]
	0x0330A1E4 STR X8, [X0]
	0x0330A1E8 ADRP X1, 0xBAA000
	0x0330A1EC ADD X1, X1, 0xE58
	0x0330A1F0 MOV X2, X31
	0x0330A1F4 BL 0x3EB1B00
	0x0330A1F8 B 0x330A288
	0x0330A1FC CMP W1, W21
	0x0330A200 MOV X22, X0
	0x0330A204 B.NE 0x330A29C
	0x0330A208 MOV X0, X22
	0x0330A20C BL 0x3EB1AD0
	0x0330A210 MOV X19, X0
	0x0330A214 ADRP X0, 0xDF1000
	0x0330A218 LDR X0, [X0 + 0x578]
	0x0330A21C BL 0x1C16D08
	0x0330A220 LDR X8, [X19]
	0x0330A224 LDR X1, [X8]
	0x0330A228 BL 0x1C17270
	0x0330A22C TBNZ X0, 0x0, 0x330A24C
	0x0330A230 ADRP X0, 0xE1D000
	0x0330A234 LDR X0, [X0 + 0xA68]
	0x0330A238 BL 0x1C16D08
	0x0330A23C LDR X8, [X19]
	0x0330A240 LDR X1, [X8]
	0x0330A244 BL 0x1C17270
	0x0330A248 TBZ X0, 0x0, 0x330A268
	0x0330A24C BL 0x3EB1AE0
	0x0330A250 MOV X22, X31
	0x0330A254 MOV X0, X22
	0x0330A258 LDP X20, X19, [X31 + 0x20]
	0x0330A25C LDP X22, X21, [X31 + 0x10]
	0x0330A260 LDP X30, X23, [X31], #0x30
	0x0330A264 RET
	0x0330A268 MOVZ W0, 0x8
	0x0330A26C BL 0x3EB1AF0
	0x0330A270 LDR X8, [X19]
	0x0330A274 STR X8, [X0]
	0x0330A278 ADRP X1, 0xBAA000
	0x0330A27C ADD X1, X1, 0xE58
	0x0330A280 MOV X2, X31
	0x0330A284 BL 0x3EB1B00
	0x0330A288 MOV X22, X0
	0x0330A28C BL 0x3EB1AE0
	0x0330A290 B 0x330A29C
	0x0330A294 MOV X22, X0
	0x0330A298 BL 0x3EB1AE0
	0x0330A29C MOV X0, X22
	0x0330A2A0 BL 0x1D2C690
	0x0330A2A4 BL 0x1990590
	0x0330A2A8 SUB X31, X31, 0x90

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x10D3000
	005 Move X20, 0xE1E000
	006 Move W8, [X19+2830]
	007 Move X20, [X20+2616]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {29}
	012 Move X0, 0xDEC000
	013 Move X0, [X0+368]
	014 Call 0x1C17CF4
	015 Move X0, 0xE11000
	016 Move X0, [X0+464]
	017 Call 0x1C17CF4
	018 Move X0, 0xE1E000
	019 Move X0, [X0+2616]
	020 Call 0x1C17CF4
	021 Move X0, 0xE1E000
	022 Move X0, [X0+2760]
	023 Call 0x1C17CF4
	024 Move X0, 0xE1E000
	025 Move X0, [X0+2768]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+2830], W8
	029 Move X0, [X20]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X19, 0x10D3000
	035 Move W8, [X19+3191]
	036 Compare W8, 0
	037 JumpIfNotEqual {43}
	038 Move X0, 0xDEC000
	039 Move X0, [X0+632]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X19+3191], W8
	043 Move X8, 0xDEC000
	044 Move X8, [X8+632]
	045 Move X1, X31
	046 Move X8, [X8]
	047 Move X8, [X8+184]
	048 Move X19, [X8]
	049 Move X0, X19
	050 Call String.IsNullOrEmpty, X0
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {107}
	055 Move X8, 0xE1E000
	056 Move X8, [X8+2760]
	057 Move X1, X31
	058 Move X0, [X8]
	059 Call Environment.GetEnvironmentVariable, X0
	060 Compare X0, 0
	061 JumpIfEqual {104}
	062 Move X20, 0xE11000
	063 Move X20, [X20+464]
	064 Move X19, X0
	065 Move X0, [X20]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X20]
	071 Move X8, [X0+184]
	072 Move X0, X19
	073 Move X2, X31
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Call String.EndsWith, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {107}
	080 Move X0, [X20]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X8, 0xDEC000
	086 Move X8, [X8+368]
	087 Move X0, [X8]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move X8, [X20]
	093 Move X8, [X8+184]
	094 Add X0, X8, 10
	095 Call Char.ToString, X0
	096 Move X1, X0
	097 Move X0, X19
	098 Move X20, [X31+16]
	099 Move X19, [X31+24]
	100 Move X2, X31
	101 Move X30, [X31+32]
	102 Call String.Concat, X0, X1
	103 Return X0
	104 Move X8, 0xE1E000
	105 Move X8, [X8+2768]
	106 Move X19, [X8]
	107 Move X0, X19
	108 Move X20, [X31+16]
	109 Move X19, [X31+24]
	110 Move X30, [X31+32]
	111 Return X0

Method: System.TimeSpan GetDateTimeNowUtcOffsetFromUtc(System.DateTime time, out System.Boolean isAmbiguousLocalDst)

Disassembly:
	0x0330B7C8 STR X31, [X8 + 0x10]
	0x0330B7CC MOVZ W23, 0x1
	0x0330B7D0 BL 0x33135A0
	0x0330B7D4 STR X21, [X22]
	0x0330B7D8 STRB W20, [X22 + 0x8]
	0x0330B7DC STRB W23, [X22 + 0x9]
	0x0330B7E0 STRB W19, [X22 + 0xA]
	0x0330B7E4 STR W31, [X22 + 0xC]
	0x0330B7E8 STRB W23, [X22 + 0x10]
	0x0330B7EC LDP X20, X19, [X31 + 0x20]
	0x0330B7F0 LDP X22, X21, [X31 + 0x10]
	0x0330B7F4 LDP X30, X23, [X31], #0x30
	0x0330B7F8 RET
	0x0330B7FC SUB X31, X31, 0x160
	0x0330B800 STR X29, [X31 + 0x110]
	0x0330B804 STP X30, X25, [X31 + 0x120]
	0x0330B808 STP X24, X23, [X31 + 0x130]
	0x0330B80C STP X22, X21, [X31 + 0x140]
	0x0330B810 STP X20, X19, [X31 + 0x150]
	0x0330B814 ADRP X22, 0x10D1000
	0x0330B818 ADRP X23, 0xE1C000
	0x0330B81C LDRB W8, [X22 + 0xB13]
	0x0330B820 LDR X23, [X23 + 0xA38]
	0x0330B824 MOV X21, X2
	0x0330B828 MOV X19, X1
	0x0330B82C MOV X20, X0
	0x0330B830 TBNZ X8, 0x0, 0x330B878
	0x0330B834 ADRP X0, 0xDE9000
	0x0330B838 LDR X0, [X0 + 0x9F0]
	0x0330B83C BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x10D2000
	007 Move X21, 0xE1D000
	008 Move W8, [X22+2831]
	009 Move X21, [X21+2616]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE1D000
	017 Move X0, [X0+2616]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2831], W8
	021 Move X0, [X21]
	022 Move [X31+12], W31
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Call TimeZoneInfo.get_Local
	028 Move X1, X0
	029 Add X2, X31, 12
	030 Move X0, X20
	031 Move X3, X19
	032 Call TimeZoneInfo.GetUtcOffsetFromUtc, X0, X1, X2, X3
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return X0

Method: System.Void TZif_GenerateAdjustmentRules(out System.TimeZoneInfo/AdjustmentRule[] rules, System.TimeSpan baseUtcOffset, System.DateTime[] dts, System.Byte[] typeOfLocalTime, System.TimeZoneInfo/TZifType[] transitionType, System.Boolean[] StandardTime, System.Boolean[] GmtTime, System.String futureTransitionsPosixFormat)

Disassembly:
	0x0330971C CBZ X19, 0x3309738
	0x03309720 MOV X0, X19
	0x03309724 MOV X1, X31
	0x03309728 BL 0x3225708
	0x0330972C LDR W19, [X19 + 0x10]
	0x03309730 MOV X22, X0
	0x03309734 B 0x330973C
	0x03309738 MOV X22, X31
	0x0330973C LDR X0, [X24]
	0x03309740 LDR W8, [X0 + 0xE0]
	0x03309744 CBNZ W8, 0x330974C
	0x03309748 BL 0x1C16DFC
	0x0330974C MOV X0, X22
	0x03309750 MOV X1, X19
	0x03309754 MOV X2, X21
	0x03309758 MOV X3, X20
	0x0330975C MOV X4, X31
	0x03309760 BL 0x32FEA44
	0x03309764 LDR X8, [X23 + 0x28]
	0x03309768 LDUR X9, [X29 - 0x8]
	0x0330976C CMP X8, X9
	0x03309770 B.NE 0x330978C
	0x03309774 ADD X31, X29, 0x0
	0x03309778 LDP X20, X19, [X31 + 0x30]
	0x0330977C LDP X22, X21, [X31 + 0x20]
	0x03309780 LDP X24, X23, [X31 + 0x10]
	0x03309784 LDP X29, X30, [X31], #0x40
	0x03309788 RET
	0x0330978C BL 0x3EB1B20
	0x03309790 SUB X31, X31, 0x110
	0x03309794 STP X29, X30, [X31 + 0xB0]
	0x03309798 STP X28, X27, [X31 + 0xC0]
	0x0330979C STP X26, X25, [X31 + 0xD0]
	0x033097A0 STP X24, X23, [X31 + 0xE0]
	0x033097A4 STP X22, X21, [X31 + 0xF0]
	0x033097A8 STP X20, X19, [X31 + 0x100]
	0x033097AC ADRP X20, 0x10D3000
	0x033097B0 ADRP X26, 0xE15000
	0x033097B4 LDRB W8, [X20 + 0xB09]
	0x033097B8 LDR X26, [X26 + 0xD78]
	0x033097BC MOV X19, X1
	0x033097C0 MOV X21, X0
	0x033097C4 TBNZ X8, 0x0, 0x3309848
	0x033097C8 ADRP X0, 0xE15000
	0x033097CC LDR X0, [X0 + 0xD50]
	0x033097D0 BL 0x1C16CF4
	0x033097D4 ADRP X0, 0xE15000
	0x033097D8 LDR X0, [X0 + 0xD68]
	0x033097DC BL 0x1C16CF4
	0x033097E0 ADRP X0, 0xDEB000
	0x033097E4 LDR X0, [X0 + 0x1B8]
	0x033097E8 BL 0x1C16CF4
	0x033097EC ADRP X0, 0xE1E000
	0x033097F0 LDR X0, [X0 + 0xAF8]
	0x033097F4 BL 0x1C16CF4
	0x033097F8 ADRP X0, 0xDEB000
	0x033097FC LDR X0, [X0 + 0x1C0]
	0x03309800 BL 0x1C16CF4
	0x03309804 ADRP X0, 0xDEB000
	0x03309808 LDR X0, [X0 + 0x1C8]
	0x0330980C BL 0x1C16CF4
	0x03309810 ADRP X0, 0xE12000
	0x03309814 LDR X0, [X0 + 0xB58]
	0x03309818 BL 0x1C16CF4
	0x0330981C ADRP X0, 0xDEB000
	0x03309820 LDR X0, [X0 + 0x1D0]
	0x03309824 BL 0x1C16CF4
	0x03309828 ADRP X0, 0xE15000
	0x0330982C LDR X0, [X0 + 0xD78]
	0x03309830 BL 0x1C16CF4
	0x03309834 ADRP X0, 0xE1E000
	0x03309838 LDR X0, [X0 + 0xA38]
	0x0330983C BL 0x1C16CF4
	0x03309840 MOVZ W8, 0x1
	0x03309844 STRB W8, [X20 + 0xB09]
	0x03309848 LDR X0, [X26]
	0x0330984C MOVI V0.2D, 0x0
	0x03309850 STP X31, X31, [X31 + 0x98]
	0x03309854 STP V0, V0, [X31 + 0x70]
	0x03309858 STP V0, V0, [X31 + 0x50]
	0x0330985C STP V0, V0, [X31 + 0x30]
	0x03309860 STR V0, [X31 + 0x2]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X25, 0x10D4000
	012 Move W8, [X25+2832]
	013 Move X20, X7
	014 Move X21, X4
	015 Move X22, X3
	016 Move X23, X2
	017 Move X24, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0xE1F000
	024 Move X0, [X0+2640]
	025 Call 0x1C17CF4
	026 Move X0, 0xE1F000
	027 Move X0, [X0+2648]
	028 Call 0x1C17CF4
	029 Move X0, 0xE1F000
	030 Move X0, [X0+2656]
	031 Call 0x1C17CF4
	032 Move X0, 0xE1F000
	033 Move X0, [X0+2616]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X25+2832], W8
	037 Move [X19], X31
	038 Compare X23, 0
	039 JumpIfEqual {101}
	040 Move X8, [X23+24]
	041 Compare X8, 0
	042 JumpIfEqual {90}
	043 Move X8, 0xE1F000
	044 Move X8, [X8+2656]
	045 Move X25, 0xE1F000
	046 Move X0, [X8]
	047 Move X25, [X25+2648]
	048 Move [X31+28], W31
	049 Call 0x1C17F10
	050 Move X1, [X25]
	051 Move X25, X0
	052 Call List`1<Object>..ctor, X0
	053 Move W8, [X23+24]
	054 Move TEMP, X8
	055 And TEMP, TEMP, -2147483648
	056 Compare TEMP, -2147483648
	057 JumpIfEqual {76}
	058 Move X26, 0xE1F000
	059 Move X26, [X26+2616]
	060 Move X0, [X26]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Add X0, X31, 28
	066 Move X1, X24
	067 Move X2, X25
	068 Move X3, X23
	069 Move X4, X22
	070 Move X5, X21
	071 Move [X31], X20
	072 Call TimeZoneInfo.TZif_GenerateAdjustmentRule, X0, X1, X2, X3, X4, X5, X6, X7, X8
	073 Move W8, [X31+28]
	074 Move W9, [X23+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Compare X25, 0
	077 JumpIfEqual {101}
	078 Move X8, 0xE1F000
	079 Move X8, [X8+2640]
	080 Move X0, X25
	081 Move X1, [X8]
	082 Call List`1<Object>.ToArray, X0
	083 Move [X19], X0
	084 Compare X0, 0
	085 JumpIfEqual {90}
	086 Move X8, [X0+24]
	087 Compare X8, 0
	088 JumpIfNotEqual {90}
	089 Move [X19], X31
	090 Move X20, [X31+80]
	091 Move X19, [X31+88]
	092 Move X22, [X31+64]
	093 Move X21, [X31+72]
	094 Move X24, [X31+48]
	095 Move X23, [X31+56]
	096 Move X26, [X31+32]
	097 Move X25, [X31+40]
	098 Move X30, [X31+16]
	099 Add X31, X31, 96
	100 Return 
	101 Call 0x1C17F20

Method: System.Void TZif_GenerateAdjustmentRule(ref System.Int32 index, System.TimeSpan timeZoneBaseUtcOffset, System.Collections.Generic.List`1<System.TimeZoneInfo/AdjustmentRule> rulesList, System.DateTime[] dts, System.Byte[] typeOfLocalTime, System.TimeZoneInfo/TZifType[] transitionTypes, System.Boolean[] StandardTime, System.Boolean[] GmtTime, System.String futureTransitionsPosixFormat)

Disassembly:
	0x0330BB90 LDR X28, [X28 + 0xA38]
	0x0330BB94 MOV X20, X7
	0x0330BB98 MOV X24, X6
	0x0330BB9C MOV X25, X5
	0x0330BBA0 MOV X26, X4
	0x0330BBA4 MOV X27, X3
	0x0330BBA8 MOV X19, X2
	0x0330BBAC MOV X21, X1
	0x0330BBB0 MOV X22, X0
	0x0330BBB4 TBNZ X8, 0x0, 0x330BBCC
	0x0330BBB8 ADRP X0, 0xE1C000
	0x0330BBBC LDR X0, [X0 + 0xA38]
	0x0330BBC0 BL 0x1C16CF4
	0x0330BBC4 MOVZ W8, 0x1
	0x0330BBC8 STRB W8, [X29 + 0xB18]
	0x0330BBCC STR X31, [X21]
	0x0330BBD0 STR X31, [X19]
	0x0330BBD4 STR X31, [X27]
	0x0330BBD8 STR X31, [X26]
	0x0330BBDC STR X31, [X25]
	0x0330BBE0 STR X31, [X24]
	0x0330BBE4 STR X31, [X20]
	0x0330BBE8 STR X31, [X23]
	0x0330BBEC LDR X0, [X28]
	0x0330BBF0 STR W31, [X31 + 0xC]
	0x0330BBF4 LDR W8, [X0 + 0xE0]
	0x0330BBF8 CBNZ W8, 0x330BC00
	0x0330BBFC BL 0x1C16DFC
	0x0330BC00 ADD X1, X31, 0xC
	0x0330BC04 MOV X0, X22
	0x0330BC08 BL 0x330C84C
	0x0330BC0C STR X0, [X21]
	0x0330BC10 ADD X1, X31, 0xC
	0x0330BC14 MOV X0, X22
	0x0330BC18 BL 0x330CA80
	0x0330BC1C STR X0, [X19]
	0x0330BC20 ADD X1, X31, 0xC
	0x0330BC24 MOV X0, X22
	0x0330BC28 BL 0x330C84C
	0x0330BC2C MOV X1, X31
	0x0330BC30 STR X0, [X27]
	0x0330BC34 BL 0x32277A8
	0x0330BC38 TBNZ X0, 0x0, 0x330BD10
	0x0330BC3C LDR X0, [X28]
	0x0330BC40 LDR W8, [X0 + 0xE0]
	0x0330BC44 CBNZ W8, 0x330BC4C
	0x0330BC48 BL 0x1C16DFC
	0x0330BC4C ADD X1, X31, 0xC
	0x0330BC50 MOV X0, X22
	0x0330BC54 BL 0x330CA80
	0x0330BC58 STR X0, [X26]
	0x0330BC5C CBZ X22, 0x330BD5C
	0x0330BC60 LDR W26, [X31 + 0xC]
	0x0330BC64 LDR W8, [X22 + 0x10]
	0x0330BC68 CMP W26, W8
	0x0330BC6C B.GE 0x330BD10
	0x0330BC70 MOV X0, X22
	0x0330BC74 MOV W1, W26
	0x0330BC78 MOV X2, X31
	0x0330BC7C BL 0x3222A1C
	0x0330BC80 AND W8, W0, 0xFFFF
	0x0330BC84 CMP W8, 0x2C
	0x0330BC88 B.NE 0x330BD10
	0x0330BC8C LDR X0, [X28]
	0x0330BC90 ADD W8, W26, 0x1
	0x0330BC94 STR W8, [X31 + 0xC]
	0x0330BC98 LDR W8, [X0 + 0xE0]
	0x0330BC9C CBNZ W8, 0x330BCA4
	0x0330BCA0 BL 0x1C16DFC
	0x0330BCA4 ADD X1, X31, 0xC
	0x0330BCA8 MOV X0, X22
	0x0330BCAC MOV X2, X25
	0x0330BCB0 MOV X3, X24
	0x0330BCB4 BL 0x330CB8C
	0x0330BCB8 LDR W24, [X31 + 0xC]
	0x0330BCBC LDR W8, [X22 + 0x10]
	0x0330BCC0 CMP W24, W8
	0x0330BCC4 B.GE 0x330BD10
	0x0330BCC8 MOV X0, X22
	0x0330BCCC MOV W1, W24
	0x0330BCD0 MOV X2, X31
	0x0330BCD4 BL 0x3222A1C
	0x0330BCD8 AND W8, W0, 0xFFFF
	0x0330BCDC CMP W8, 0x2C
	0x0330BCE0 B.NE 0x330BD10
	0x0330BCE4 LDR X0, [X28]
	0x0330BCE8 ADD W8, W24, 0x1
	0x0330BCEC STR W8, [X31 + 0xC]
	0x0330BCF0 LDR W8, [X0 + 0xE0]
	0x0330BCF4 CBNZ W8, 0x330BCFC
	0x0330BCF8 BL 0x1C16DFC
	0x0330BCFC ADD X1, X31, 0xC
	0x0330BD00 MOV X0, X22
	0x0330BD04 MOV X2, X20
	0x0330BD08 MOV X3, X23
	0x0330BD0C BL 0x330CB8C
	0x0330BD10 LDR X0, [X21]
	0x0330BD14 MOV X1, X31
	0x0330BD18 BL 0x32277A8
	0x0330BD1C TBZ X0, 0x0, 0x330BD28
	0x0330BD20 MOV W8, W31
	0x0330BD24 B 0x330BD38
	0x0330BD28 LDR X0, [X19]
	0x0330BD2C MOV X1, X31
	0x0330BD30 BL 0x32277A8
	0x0330BD34 EOR W8, W0, 0x1
	0x0330BD38 LDP X20, X19, [X31 + 0x60]
	0x0330BD3C LDP X22, X21, [X31 + 0x50]
	0x0330BD40 LDP X24, X23, [X31 + 0x40]
	0x0330BD44 LDP X26, X25, [X31 + 0x30]
	0x0330BD48 LDP X28, X27, [X31 + 0x20]
	0x0330BD4C LDP X29, X30, [X31 + 0x10]
	0x0330BD50 AND W0, W8, 0x1
	0x0330BD54 ADD X31, X31, 0x70
	0x0330BD58 RET
	0x0330BD5C BL 0x1C16F20
	0x0330BD60 SUB X31, X31, 0x50
	0x0330BD64 STP X30, X21, [X31 + 0x30]
	0x0330BD68 STP X20, X19, [X31 + 0x40]
	0x0330BD6C ADRP X20, 0x10D1000
	0x0330BD70 LDRB W8, [X20 + 0xB14]
	0x0330BD74 MOV X19, X0
	0x0330BD78 TBNZ X8, 0x0, 0x330BDCC
	0x0330BD7C ADRP X0, 0xDEA000
	0x0330BD80 LDR X0, [X0 + 0xC48]
	0x0330BD84 BL 0x1C16CF4
	0x0330BD88 ADRP X0, 0xE1C000
	0x0330BD8C LDR X0, [X0 + 0xB98]
	0x0330BD90 BL 0x1C16CF4
	0x0330BD94 ADRP X0, 0xE1C000
	0x0330BD98 LDR X0, [X0 + 0xB88]
	0x0330BD9C BL 0x1C16CF4
	0x0330BDA0 ADRP X0, 0xE1C000
	0x0330BDA4 LDR X0, [X0 + 0xB90]
	0x0330BDA8 BL 0x1C16CF4
	0x0330BDAC ADRP X0, 0xDEA000
	0x0330BDB0 LDR X0, [X0 + 0x570]
	0x0330BDB4 BL 0x1C16CF4
	0x0330BDB8 ADRP X0, 0xE15000
	0x0330BDBC LDR X0, [X0 + 0x3B8]
	0x0330BDC0 BL 0x1C16CF4
	0x0330BDC4 MOVZ W8, 0x1
	0x0330BDC8 STRB W8, [X20 + 0xB14]
	0x0330BDCC MOV X0, X19
	0x0330BDD0 MOV X1, X31
	0x0330BDD4 STR W31, [X31 + 0x1C]
	0x0330BDD8 STP X31, X31, [X31 + 0x8]
	0x0330BDDC STP X31, X31, [X31 + 0x20]
	0x0330BDE0 BL 0x32277A8
	0x0330BDE4 TBNZ X0, 0x0, 0x330BF5C
	0x0330BDE8 CBZ X19, 0x330BF70
	0x0330BDEC MOV X0, X19
	0x0330BDF0 MOV W1, W31
	0x0330BDF4 MOV X2, X31
	0x0330BDF8 BL 0x3222A1C
	0x0330BDFC AND W8, W0, 0xFFFF
	0x0330BE00 MOV W20, W0
	0x0330BE04 CMP W8, 0x2D
	0x0330BE08 B.EQ 0x330BE28
	0x0330BE0C MOV X0, X19
	0x0330BE10 MOV W1, W31
	0x0330BE14 MOV X2, X31
	0x0330BE18 BL 0x3222A1C
	0x0330BE1C AND W8, W0, 0xFFFF
	0x0330BE20 CMP W8, 0x2B
	0x0330BE24 B.NE 0x330BE3C
	0x0330BE28 MOVZ W1, 0x1
	0x0330BE2C MOV X0, X19
	0x0330BE30 MOV X2, X31
	0x0330BE34 BL 0x322B484
	0x0330BE38 MOV X19, X0
	0x0330BE3C ADD X1, X31, 0x1C
	0x0330BE40 MOV X0, X19
	0x0330BE44 MOV X2, X31
	0x0330BE48 BL 0x337BDF4
	0x0330BE4C TBZ X0, 0x0, 0x330BE74
	0x0330BE50 LDR W1, [X31 + 0x1C]
	0x0330BE54 ADD X0, X31, 0x0
	0x0330BE58 MOV W2, W31
	0x0330BE5C MOV W3, W31
	0x0330BE60 MOV X4, X31
	0x0330BE64 STR X31, [X31]
	0x0330BE68 BL 0x3393ED0
	0x0330BE6C LDR X1, [X31]
	0x0330BE70 B 0x330BEDC
	0x0330BE74 ADRP X8, 0xDEA000
	0x0330BE78 LDR X8, [X8 + 0xC48]
	0x0330BE7C LDR X0, [X8]
	0x0330BE80 LDR W8, [X0 + 0xE0]
	0x0330BE84 CBNZ W8, 0x330BE8C
	0x0330BE88 BL 0x1C16DFC
	0x0330BE8C MOV X0, X31
	0x0330BE90 BL 0x3338524
	0x0330BE94 ADRP X8, 0xDEA000
	0x0330BE98 LDR X8, [X8 + 0x570]
	0x0330BE9C MOV X21, X0
	0x0330BEA0 LDR X8, [X8]
	0x0330BEA4 LDR W9, [X8 + 0xE0]
	0x0330BEA8 CBNZ W9, 0x330BEB4
	0x0330BEAC MOV X0, X8
	0x0330BEB0 BL 0x1C16DFC
	0x0330BEB4 ADRP X8, 0xE15000
	0x0330BEB8 LDR X8, [X8 + 0x3B8]
	0x0330BEBC ADD X3, X31, 0x10
	0x0330BEC0 MOV X0, X19
	0x0330BEC4 MOV X2, X21
	0x0330BEC8 LDR X1, [X8]
	0x0330BECC MOV X4, X31
	0x0330BED0 BL 0x339489C
	0x0330BED4 TBZ X0, 0x0, 0x330BEF0
	0x0330BED8 LDR X1, [X31 + 0x10]
	0x0330BEDC ADRP X8, 0xE1C000
	0x0330BEE0 LDR X8, [X8 + 0xB98]
	0x0330BEE4 ADD X0, X31, 0x20
	0x0330BEE8 LDR X2, [X8]
	0x0330BEEC BL 0x243B364
	0x0330BEF0 AND W8, W20, 0xFFFF
	0x0330BEF4 CMP W8, 0x2D
	0x0330BEF8 B.NE 0x330BF5C
	0x0330BEFC LDRB W8, [X31 + 0x20]
	0x0330BF00 CBZ W8, 0x330BF5C
	0x0330BF04 ADRP X8, 0xE1C000
	0x0330BF08 LDR X8, [X8 + 0xB90]
	0x0330BF0C ADD X0, X31, 0x20
	0x0330BF10 LDR X1, [X8]
	0x0330BF14 BL 0x243B37C
	0x0330BF18 ADRP X8, 0xDEA000
	0x0330BF1C LDR X8, [X8 + 0x570]
	0x0330BF20 STR X0, [X31 + 0x8]
	0x0330BF24 LDR X8, [X8]
	0x0330BF28 LDR W9, [X8 + 0xE0]
	0x0330BF2C CBNZ W9, 0x330BF38
	0x0330BF30 MOV X0, X8
	0x0330BF34 BL 0x1C16DFC
	0x0330BF38 ADD X0, X31, 0x8
	0x0330BF3C MOV X1, X31
	0x0330BF40 BL 0x33946A4
	0x0330BF44 ADRP X8, 0xE1C000
	0x0330BF48 LDR X8, [X8 + 0xB98]
	0x0330BF4C MOV X1, X0
	0x0330BF50 ADD X0, X31, 0x20
	0x0330BF54 LDR X2, [X8]
	0x0330BF58 BL 0x243B364
	0x0330BF5C LDP X0, X1, [X31 + 0x20]
	0x0330BF60 LDP X20, X19, [X31 + 0x40]
	0x0330BF64 LDP X30, X21, [X31 + 0x30]
	0x0330BF68 ADD X31, X31, 0x50
	0x0330BF6C RET
	0x0330BF70 BL 0x1C16F20
	0x0330BF74 SUB X31, X31, 0x50
	0x0330BF78 STR X30, [X31 + 0x10]
	0x0330BF7C STP X24, X23, [X31 + 0x20]
	0x0330BF80 STP X22, X21, [X31 + 0x30]
	0x0330BF84 STP X20, X19, [X31 + 0x40]
	0x0330BF88 ADRP X22, 0x10D1000
	0x0330BF8C LDRB W9, [X22 + 0xB16]
	0x0330BF90 MOV X20, X1
	0x0330BF94 MOV X21, X0
	0x0330BF98 MOV X19, X8
	0x0330BF9C TBNZ X9, 0x0, 0x330BFB4
	0x0330BFA0 ADRP X0, 0xE1C000
	0x0330BFA4 LDR X0, [X0 + 0xA38]
	0x0330BFA8 BL 0x1C16CF4
	0x0330BFAC MOVZ W8, 0x1
	0x0330BFB0 STRB W8, [X22 + 0xB16]
	0x0330BFB4 MOV X0, X21
	0x0330BFB8 MOV X1, X31
	0x0330BFBC STR X31, [X31 + 0x18]
	0x0330BFC0 STR X31, [X31 + 0x8]
	0x0330BFC4 STR W31, [X31 + 0x4]
	0x0330BFC8 BL 0x32277A8
	0x0330BFCC TBZ X0, 0x0, 0x330BFDC
	0x0330BFD0 STP X31, X31, [X19]
	0x0330BFD4 STR X31, [X19 + 0x10]
	0x0330BFD8 B 0x330C114
	0x0330BFDC CBZ X21, 0x330C12C
	0x0330BFE0 MOV X0, X21
	0x0330BFE4 MOV W1, W31
	0x0330BFE8 MOV X2, X31
	0x0330BFEC BL 0x3222A1C
	0x0330BFF0 AND W8, W0, 0xFFFF
	0x0330BFF4 CMP W8, 0x4D
	0x0330BFF8 B.NE 0x330C084
	0x0330BFFC ADRP X22, 0xE1C000
	0x0330C000 LDR X22, [X22 + 0xA38]
	0x0330C004 LDR X0, [X22]
	0x0330C008 LDR W8, [X0 + 0xE0]
	0x0330C00C CBNZ W8, 0x330C014
	0x0330C010 BL 0x1C16DFC
	0x0330C014 ADD X1, X31, 0x1C
	0x0330C018 ADD X2, X31, 0x18
	0x0330C01C ADD X3, X31, 0xC
	0x0330C020 MOV X0, X21
	0x0330C024 BL 0x330C420
	0x0330C028 TBZ X0, 0x0, 0x330C130
	0x0330C02C LDR X0, [X22]
	0x0330C030 LDR W8, [X0 + 0xE0]
	0x0330C034 CBNZ W8, 0x330C03C
	0x0330C038 BL 0x1C16DFC
	0x0330C03C MOV X0, X20
	0x0330C040 BL 0x330C1CC
	0x0330C044 LDP W21, W20, [X31 + 0x18]
	0x0330C048 LDR W22, [X31 + 0xC]
	0x0330C04C MOVZ W3, 0x1
	0x0330C050 MOV X23, X0
	0x0330C054 MOV W1, W20
	0x0330C058 MOV W2, W21
	0x0330C05C MOV W4, W22
	0x0330C060 MOVZ W24, 0x1
	0x0330C064 BL 0x33135A0
	0x0330C068 STR X23, [X19]
	0x0330C06C STRB W20, [X19 + 0x8]
	0x0330C070 STRB W21, [X19 + 0x9]
	0x0330C074 STRH W24, [X19 + 0xA]
	0x0330C078 STR W22, [X19 + 0xC]
	0x0330C07C STRB W31, [X19 + 0x10]
	0x0330C080 B 0x330C10C
	0x0330C084 MOV X0, X21
	0x0330C088 MOV W1, W31
	0x0330C08C MOV X2, X31
	0x0330C090 BL 0x3222A1C
	0x0330C094 AND W8, W0, 0xFFFF
	0x0330C098 CMP W8, 0x4A
	0x0330C09C B.NE 0x330C184
	0x0330C0A0 ADRP X8, 0xE1B000
	0x0330C0A4 LDR X8, [X8 + 0xA38]
	0x0330C0A8 LDR X0, [X8]
	0x0330C0AC LDR W8, [X0 + 0xE0]
	0x0330C0B0 CBNZ W8, 0x330C0B8
	0x0330C0B4 BL 0x1C16DFC
	0x0330C0B8 ADD X1, X31, 0x8
	0x0330C0BC ADD X2, X31, 0x4
	0x0330C0C0 MOV X0, X21
	0x0330C0C4 BL 0x330C684
	0x0330C0C8 MOV X0, X20
	0x0330C0CC BL 0x330C1CC
	0x0330C0D0 LDP W21, W20, [X31 + 0x4]
	0x0330C0D4 MOVZ W2, 0x1
	0x0330C0D8 MOV W4, W31
	0x0330C0DC MOV X22, X0
	0x0330C0E0 MOV W1, W20
	0x0330C0E4 MOV W3, W21
	0x0330C0E8 MOVZ W23, 0x1
	0x0330C0EC BL 0x33135A0
	0x0330C0F0 STR X22, [X19]
	0x0330C0F4 STRB W20, [X19 + 0x8]
	0x0330C0F8 STRB W23, [X19 + 0x9]
	0x0330C0FC STRB W21, [X19 + 0xA]
	0x0330C100 STRB W31, [X19 + 0xB]
	0x0330C104 STR W31, [X19 + 0xC]
	0x0330C108 STRB W23, [X19 + 0x10]
	0x0330C10C STUR W31, [X19 + 0x11]
	0x0330C110 STR W31, [X19 + 0x14]
	0x0330C114 LDP X20, X19, [X31 + 0x40]
	0x0330C118 LDP X22, X21, [X31 + 0x30]
	0x0330C11C LDP X24, X23, [X31 + 0x20]
	0x0330C120 LDR X30, [X31 + 0x10]
	0x0330C124 ADD X31, X31, 0x50
	0x0330C128 RET
	0x0330C12C BL 0x1C16F20
	0x0330C130 ADRP X0, 0xE1B000
	0x0330C134 LDR X0, [X0 + 0xBA0]
	0x0330C138 BL 0x1C16D08
	0x0330C13C MOV X1, X21
	0x0330C140 MOV X2, X31
	0x0330C144 BL 0x32094D4
	0x0330C148 MOV X19, X0
	0x0330C14C ADRP X0, 0xE1B000
	0x0330C150 LDR X0, [X0 + 0xA68]
	0x0330C154 BL 0x1C16D08
	0x0330C158 BL 0x1C16F10
	0x0330C15C MOV X1, X19
	0x0330C160 MOV X2, X31
	0x0330C164 MOV X20, X0
	0x0330C168 BL 0x337E04C
	0x0330C16C ADRP X0, 0xE1B000
	0x0330C170 LDR X0, [X0 + 0xBA8]
	0x0330C174 BL 0x1C16D08
	0x0330C178 MOV X1, X0
	0x0330C17C MOV X0, X20
	0x0330C180 BL 0x1C16DEC
	0x0330C184 ADRP X0, 0xE1B000
	0x0330C188 LDR X0, [X0 + 0xA68]
	0x0330C18C BL 0x1C16D08
	0x0330C190 BL 0x1C16F10
	0x0330C194 MOV X19, X0
	0x0330C198 ADRP X0, 0xE1B000
	0x0330C19C LDR X0, [X0 + 0xBB0]
	0x0330C1A0 BL 0x1C16D08
	0x0330C1A4 MOV X1, X0
	0x0330C1A8 MOV X0, X19
	0x0330C1AC MOV X2, X31
	0x0330C1B0 BL 0x337E04C
	0x0330C1B4 ADRP X0, 0xE1B000
	0x0330C1B8 LDR X0, [X0 + 0xBA8]
	0x0330C1BC BL 0x1C16D08
	0x0330C1C0 MOV X1, X0
	0x0330C1C4 MOV X0, X19
	0x0330C1C8 BL 0x1C16DEC
	0x0330C1CC SUB X31, X31, 0x60
	0x0330C1D0 STR X30, [X31 + 0x20]
	0x0330C1D4 STP X24, X23, [X31 + 0x30]
	0x0330C1D8 STP X22, X21, [X31 + 0x40]
	0x0330C1DC STP X20, X19, [X31 + 0x50]
	0x0330C1E0 ADRP X21, 0x10D0000
	0x0330C1E4 ADRP X20, 0xE1B000
	0x0330C1E8 LDRB W8, [X21 + 0xB15]
	0x0330C1EC LDR X20, [X20 + 0xA38]
	0x0330C1F0 MOV X19, X0
	0x0330C1F4 TBNZ X8, 0x0, 0x330C248
	0x0330C1F8 ADRP X0, 0xDE8000
	0x0330C1FC LDR X0, [X0 + 0x9F0]
	0x0330C200 BL 0x1C16CF4
	0x0330C204 ADRP X0, 0xE1B000
	0x0330C208 LDR X0, [X0 + 0xB98]
	0x0330C20C BL 0x1C16CF4
	0x0330C210 ADRP X0, 0xE1B000
	0x0330C214 LDR X0, [X0 + 0xB88]
	0x0330C218 BL 0x1C16CF4
	0x0330C21C ADRP X0, 0xE1B000
	0x0330C220 LDR X0, [X0 + 0xB90]
	0x0330C224 BL 0x1C16CF4
	0x0330C228 ADRP X0, 0xDE9000
	0x0330C22C LDR X0, [X0 + 0x570]
	0x0330C230 BL 0x1C16CF4
	0x0330C234 ADRP X0, 0xE1B000
	0x0330C238 LDR X0, [X0 + 0xA38]
	0x0330C23C BL 0x1C16CF4
	0x0330C240 MOVZ W8, 0x1
	0x0330C244 STRB W8, [X21 + 0xB15]
	0x0330C248 LDR X0, [X20]
	0x0330C24C STR X31, [X31 + 0x28]
	0x0330C250 STR X31, [X31 + 0x8]
	0x0330C254 LDR W8, [X0 + 0xE0]
	0x0330C258 CBNZ W8, 0x330C260
	0x0330C25C BL 0x1C16DFC
	0x0330C260 ADRP X21, 0xDE8000
	0x0330C264 LDR X21, [X21 + 0x9F0]
	0x0330C268 MOV X0, X19
	0x0330C26C BL 0x330BD60
	0x0330C270 ANDS W31, W0, 0xFF
	0x0330C274 STP X0, X1, [X31 + 0x10]
	0x0330C278 B.EQ 0x330C3D0
	0x0330C27C ADRP X22, 0xE1B000

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+208], X29
	003 Move [X31+216], X30
	004 Move [X31+224], X28
	005 Move [X31+232], X27
	006 Move [X31+240], X26
	007 Move [X31+248], X25
	008 Move [X31+256], X24
	009 Move [X31+264], X23
	010 Move [X31+272], X22
	011 Move [X31+280], X21
	012 Move [X31+288], X20
	013 Move [X31+296], X19
	014 Move X22, 0x10D2000
	015 Move W8, [X22+2833]
	016 Move X23, X5
	017 Move X25, X4
	018 Move X24, X3
	019 Move X20, X2
	020 Move X21, X1
	021 Move X19, X0
	022 Add X26, X31, 176
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {44}
	027 Move X0, 0xDEA000
	028 Move X0, [X0+2544]
	029 Call 0x1C17CF4
	030 Move X0, 0xE1D000
	031 Move X0, [X0+2920]
	032 Call 0x1C17CF4
	033 Move X0, 0xE1D000
	034 Move X0, [X0+2856]
	035 Call 0x1C17CF4
	036 Move X0, 0xDEB000
	037 Move X0, [X0+1392]
	038 Call 0x1C17CF4
	039 Move X0, 0xE1D000
	040 Move X0, [X0+2616]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X22+2833], W8
	044 Move [X31+192], X31
	045 Move [X31+200], X31
	046 Move [X31+184], X31
	047 Move [X26+3], W31
	048 Move [X31+176], W31
	049 Move [X31+160], X31
	050 Move [X31+168], X31
	051 Move [X31+152], X31
	052 Compare X24, 0
	053 JumpIfEqual {512}
	054 Move W8, [X19]
	055 Move W9, [X24+24]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X27, 0xDEA000
	058 Move X27, [X27+2544]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X0, [X27]
	061 Add X8, X24, W8
	062 Move X22, [X8+32]
	063 Move W9, [X0+224]
	064 Compare W9, 0
	065 JumpIfNotEqual {68}
	066 Call 0x1C17DFC
	067 Move X0, [X27]
	068 Move X8, [X0+184]
	069 Move X0, X22
	070 Move X2, X31
	071 Move X1, [X8+16]
	072 Call DateTime.op_Equality, X0, X1
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {82}
	077 Move W8, [X19]
	078 Add W8, W8, 1
	079 Move [X19], W8
	080 Move W9, [X24+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Compare X20, 0
	083 JumpIfEqual {512}
	084 Move W10, [X20+24]
	085 Move W8, [X19]
	086 Move W9, [X24+24]
	087 Compare W10, 0
	088 JumpIfNotEqual {124}
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X25, 0xE1D000
	091 Move X25, [X25+2616]
	092 Move X0, [X25]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move X0, X23
	098 Call TimeZoneInfo.TZif_GetEarlyDateTransitionType, X0
	099 NotImplemented "Instruction LDRSW not yet implemented."
	100 Move W9, [X24+24]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Add X8, X24, X8
	103 Move X8, [X8+32]
	104 Move X23, X1
	105 Move X1, X21
	106 Move [X31+200], X8
	107 Call TimeZoneInfo.TZif_CalculateTransitionOffsetFromBase, X0, X1
	108 Move X24, 0xDEB000
	109 Move X24, [X24+1392]
	110 Move X22, X0
	111 Move X8, [X24]
	112 Move W9, [X8+224]
	113 Move TEMP, X23
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfEqual {180}
	117 Compare W9, 0
	118 JumpIfNotEqual {122}
	119 Move X0, X8
	120 Call 0x1C17DFC
	121 Move X8, [X24]
	122 Move X8, [X8+184]
	123 Move X23, [X8]
	124 Move X8, W8
	125 Subtract W10, W8, 1
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X10, W10
	128 Add X11, X24, X10
	129 Move X22, [X11+32]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Compare X25, 0
	132 JumpIfEqual {512}
	133 Move W11, [X25+24]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Compare X23, 0
	136 JumpIfEqual {512}
	137 Add X10, X25, X10
	138 Move W10, [X10+32]
	139 Move W11, [X23+24]
	140 NotImplemented "Instruction CMP not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Add X8, X24, X8
	143 Move X27, 0xE1D000
	144 Move X8, [X8+32]
	145 Move X27, [X27+2616]
	146 Add X9, X23, X10
	147 Move X23, [X9+32]
	148 Move X24, [X9+40]
	149 Move [X31+184], X8
	150 Move X0, [X27]
	151 Move W8, [X0+224]
	152 Compare W8, 0
	153 JumpIfNotEqual {155}
	154 Call 0x1C17DFC
	155 Move X0, X23
	156 Move X1, X21
	157 Call TimeZoneInfo.TZif_CalculateTransitionOffsetFromBase, X0, X1
	158 Move X25, 0xDEB000
	159 Move X25, [X25+1392]
	160 Move X23, X0
	161 Move X8, [X25]
	162 Move W9, [X8+224]
	163 Move TEMP, X24
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfEqual {328}
	167 Compare W9, 0
	168 JumpIfNotEqual {172}
	169 Move X0, X8
	170 Call 0x1C17DFC
	171 Move X8, [X25]
	172 Move X8, [X8+184]
	173 Move W28, W31
	174 Move X25, X31
	175 Move X24, X23
	176 Move X8, [X8]
	177 Move [X26+3], W31
	178 Move [X31+176], W31
	179 Move X23, X8
	180 Compare W9, 0
	181 JumpIfNotEqual {185}
	182 Move X0, X8
	183 Call 0x1C17DFC
	184 Move X8, [X24]
	185 Move X8, [X8+184]
	186 Move X23, X22
	187 Move X8, [X8]
	188 Move X22, X8
	189 Move X24, 0xDEA000
	190 Move X24, [X24+2544]
	191 Move X0, [X24]
	192 Move W8, [X0+224]
	193 Compare W8, 0
	194 JumpIfNotEqual {197}
	195 Call 0x1C17DFC
	196 Move X0, [X24]
	197 Move X8, [X0+184]
	198 Add X0, X31, 200
	199 Move TEMP, 0
	200 Not TEMP
	201 Move X1, TEMP
	202 Move X2, X31
	203 Move X24, [X8+16]
	204 Call DateTime.AddTicks, X0, X1
	205 Move X1, X0
	206 Add X3, X31, 128
	207 Add X4, X31, 104
	208 Move W6, 1
	209 Move X0, X24
	210 Move X2, X23
	211 Move X5, X22
	212 Move [X31+136], X31
	213 Move [X31+144], X31
	214 Move [X31+120], X31
	215 Move [X31+128], X31
	216 Move [X31+104], X31
	217 Move [X31+112], X31
	218 Call AdjustmentRule.CreateAdjustmentRule, X0, X1, X2, X3, X4, X5, X6
	219 Move X8, [X25]
	220 Move [X31+192], X0
	221 Move X22, X0
	222 Move W9, [X8+224]
	223 Compare W9, 0
	224 JumpIfNotEqual {227}
	225 Move X0, X8
	226 Call 0x1C17DFC
	227 Move X0, X21
	228 Move X1, X22
	229 Call TimeZoneInfo.IsValidAdjustmentRuleOffest, X0, X1
	230 Move TEMP, X0
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfEqual {472}
	234 Move X0, [X25]
	235 Move W8, [X0+224]
	236 Compare W8, 0
	237 JumpIfNotEqual {239}
	238 Call 0x1C17DFC
	239 Add X1, X31, 192
	240 Move X0, X21
	241 Call TimeZoneInfo.NormalizeAdjustmentRuleOffset, X0, X1
	242 Move X22, [X31+192]
	243 Move X24, [X31+304]
	244 Move X1, X31
	245 Move X0, X24
	246 Call String.IsNullOrEmpty, X0
	247 Move TEMP, X0
	248 And TEMP, TEMP, 1
	249 Compare TEMP, 1
	250 JumpIfNotEqual {292}
	251 Compare X25, 0
	252 JumpIfEqual {512}
	253 Move W8, [X19]
	254 Move W9, [X25+24]
	255 Subtract W8, W8, 1
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Compare X23, 0
	258 JumpIfEqual {512}
	259 Add X8, X25, W8
	260 Move W8, [X8+32]
	261 Move W9, [X23+24]
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Move X25, 0xE1D000
	264 Move X25, [X25+2616]
	265 Add X8, X23, X8
	266 Move X23, [X8+32]
	267 Move X24, [X8+40]
	268 Move X0, [X25]
	269 Move W9, [X0+224]
	270 Compare W9, 0
	271 JumpIfNotEqual {273}
	272 Call 0x1C17DFC
	273 Move X0, X23
	274 Move X1, X21
	275 Call TimeZoneInfo.TZif_CalculateTransitionOffsetFromBase, X0, X1
	276 Move X26, 0xDEB000
	277 Move X26, [X26+1392]
	278 Move X23, X0
	279 Move X8, [X26]
	280 Move W9, [X8+224]
	281 Move TEMP, X24
	282 And TEMP, TEMP, 1
	283 Compare TEMP, 1
	284 JumpIfEqual {416}
	285 Compare W9, 0
	286 JumpIfNotEqual {290}
	287 Move X0, X8
	288 Call 0x1C17DFC
	289 Move X8, [X26]
	290 Move X8, [X8+184]
	291 Move X24, [X8]
	292 Move X23, 0xE1D000
	293 Move X23, [X23+2616]
	294 Move X0, [X23]
	295 Move W8, [X0+224]
	296 Compare W8, 0
	297 JumpIfNotEqual {299}
	298 Call 0x1C17DFC
	299 Move X0, X24
	300 Move X1, X22
	301 Move X2, X21
	302 Call TimeZoneInfo.TZif_CreateAdjustmentRuleForPosixFormat, X0, X1, X2
	303 Move [X31+160], X0
	304 Compare X0, 0
	305 JumpIfEqual {494}
	306 Move X22, X0
	307 Move X0, [X23]
	308 Move W8, [X0+224]
	309 Compare W8, 0
	310 JumpIfNotEqual {312}
	311 Call 0x1C17DFC
	312 Move X0, X21
	313 Move X1, X22
	314 Call TimeZoneInfo.IsValidAdjustmentRuleOffest, X0, X1
	315 Move TEMP, X0
	316 And TEMP, TEMP, 1
	317 Compare TEMP, 1
	318 JumpIfEqual {472}
	319 Move X0, [X23]
	320 Move W8, [X0+224]
	321 Compare W8, 0
	322 JumpIfNotEqual {324}
	323 Call 0x1C17DFC
	324 Add X1, X31, 160
	325 Move X0, X21
	326 Call TimeZoneInfo.NormalizeAdjustmentRuleOffset, X0, X1
	327 Move X22, [X31+160]
	328 Compare W9, 0
	329 JumpIfNotEqual {333}
	330 Move X0, X8
	331 Call 0x1C17DFC
	332 Move X8, [X25]
	333 Move X25, 0xDE9000
	334 Move X25, [X25+2544]
	335 Move X8, [X8+184]
	336 Move X0, [X25]
	337 Move X24, [X8]
	338 Move W9, [X0+224]
	339 Compare W9, 0
	340 JumpIfNotEqual {343}
	341 Call 0x1C17DFC
	342 Move X0, [X25]
	343 Move X8, [X0+184]
	344 Move D0, 2
	345 Move X1, X31
	346 Add X0, X8, 16
	347 Call DateTime.AddMilliseconds, X0, V0
	348 Move W1, 1
	349 Move W2, 1
	350 Move W3, 1
	351 Move W4, W31
	352 Move X25, X0
	353 Move [X31+176], W31
	354 Move [X26+3], W31
	355 Move W28, 1
	356 Call TransitionTime.ValidateTransitionTime, X0, X1, X2, X3, X4
	357 Move X8, 0xDE9000
	358 Move X8, [X8+2544]
	359 Move X0, [X8]
	360 Move W8, [X0+224]
	361 Compare W8, 0
	362 JumpIfNotEqual {364}
	363 Call 0x1C17DFC
	364 Add X0, X31, 184
	365 Move TEMP, 0
	366 Not TEMP
	367 Move X1, TEMP
	368 Move X2, X31
	369 Call DateTime.AddTicks, X0, X1
	370 Move W8, [X31+176]
	371 NotImplemented "Instruction LDUR not yet implemented."
	372 Move X1, X0
	373 Add X3, X31, 80
	374 Add X4, X31, 56
	375 Move W6, 1
	376 Move X0, X22
	377 Move X2, X23
	378 Move X5, X24
	379 Move [X31+64], X31
	380 Move [X31+72], X31
	381 Move [X31+56], X31
	382 Move [X31+80], X25
	383 Move [X31+88], W28
	384 Move [X31+89], W28
	385 Move [X31+90], W28
	386 Move [X31+91], W31
	387 Move [X31+92], W31
	388 Move [X31+96], W28
	389 Move [X31+97], W8
	390 Move [X31+100], W9
	391 Call AdjustmentRule.CreateAdjustmentRule, X0, X1, X2, X3, X4, X5, X6
	392 Move X8, [X27]
	393 Move [X31+168], X0
	394 Move X22, X0
	395 Move W9, [X8+224]
	396 Compare W9, 0
	397 JumpIfNotEqual {400}
	398 Move X0, X8
	399 Call 0x1C17DFC
	400 Move X0, X21
	401 Move X1, X22
	402 Call TimeZoneInfo.IsValidAdjustmentRuleOffest, X0, X1
	403 Move TEMP, X0
	404 And TEMP, TEMP, 1
	405 Compare TEMP, 1
	406 JumpIfEqual {472}
	407 Move X0, [X27]
	408 Move W8, [X0+224]
	409 Compare W8, 0
	410 JumpIfNotEqual {412}
	411 Call 0x1C17DFC
	412 Add X1, X31, 168
	413 Move X0, X21
	414 Call TimeZoneInfo.NormalizeAdjustmentRuleOffset, X0, X1
	415 Move X22, [X31+168]
	416 Compare W9, 0
	417 JumpIfNotEqual {421}
	418 Move X0, X8
	419 Call 0x1C17DFC
	420 Move X8, [X26]
	421 Move X8, [X8+184]
	422 Move X24, X23
	423 Move X8, [X8]
	424 Move X23, X8
	425 Move X26, 0xDE9000
	426 Move X26, [X26+2544]
	427 Move X0, [X26]
	428 Move W8, [X0+224]
	429 Compare W8, 0
	430 JumpIfNotEqual {433}
	431 Call 0x1C17DFC
	432 Move X0, [X26]
	433 Move X8, [X0+184]
	434 Add X3, X31, 32
	435 Add X4, X31, 8
	436 Move W6, 1
	437 Move X1, [X8+24]
	438 Move X0, X22
	439 Move X2, X24
	440 Move X5, X23
	441 Move [X31+32], X31
	442 Move [X31+40], X31
	443 Move [X31+48], X31
	444 Move [X31+16], X31
	445 Move [X31+24], X31
	446 Move [X31+8], X31
	447 Call AdjustmentRule.CreateAdjustmentRule, X0, X1, X2, X3, X4, X5, X6
	448 Move X8, [X25]
	449 Move [X31+152], X0
	450 Move X22, X0
	451 Move W9, [X8+224]
	452 Compare W9, 0
	453 JumpIfNotEqual {456}
	454 Move X0, X8
	455 Call 0x1C17DFC
	456 Move X0, X21
	457 Move X1, X22
	458 Call TimeZoneInfo.IsValidAdjustmentRuleOffest, X0, X1
	459 Move TEMP, X0
	460 And TEMP, TEMP, 1
	461 Compare TEMP, 1
	462 JumpIfEqual {472}
	463 Move X0, [X25]
	464 Move W8, [X0+224]
	465 Compare W8, 0
	466 JumpIfNotEqual {468}
	467 Call 0x1C17DFC
	468 Add X1, X31, 152
	469 Move X0, X21
	470 Call TimeZoneInfo.NormalizeAdjustmentRuleOffset, X0, X1
	471 Move X22, [X31+152]
	472 Move X9, 0xE1C000
	473 Move X9, [X9+2920]
	474 Move W10, [X20+28]
	475 Move X8, [X20+16]
	476 Move X9, [X9]
	477 Add W10, W10, 1
	478 Move [X20+28], W10
	479 Compare X8, 0
	480 JumpIfEqual {512}
	481 NotImplemented "Instruction LDRSW not yet implemented."
	482 Move W11, [X8+24]
	483 NotImplemented "Instruction CMP not yet implemented."
	484 Add W9, W10, 1
	485 Add X8, X8, X10
	486 Move [X20+24], W9
	487 Move [X8+32], X22
	488 Move X8, [X9+32]
	489 Move X0, X20
	490 Move X1, X22
	491 Move X8, [X8+192]
	492 Move X2, [X8+112]
	493 Call List`1<Object>.AddWithResize, X0, X1
	494 Move W8, [X19]
	495 Move X22, [X31+272]
	496 Move X21, [X31+280]
	497 Move X24, [X31+256]
	498 Move X23, [X31+264]
	499 Move X26, [X31+240]
	500 Move X25, [X31+248]
	501 Add W8, W8, 1
	502 Move [X19], W8
	503 Move X20, [X31+288]
	504 Move X19, [X31+296]
	505 Move X28, [X31+224]
	506 Move X27, [X31+232]
	507 Move X29, [X31+208]
	508 Move X30, [X31+216]
	509 Add X31, X31, 304
	510 Return 
	511 Call 0x1C17F28
	512 Call 0x1C17F20

Method: System.TimeSpan TZif_CalculateTransitionOffsetFromBase(System.TimeSpan transitionOffset, System.TimeSpan timeZoneBaseUtcOffset)

Disassembly:
	0x0330C330 LDR X1, [X22]
	0x0330C334 ADD X0, X31, 0x10
	0x0330C338 BL 0x243B37C
	0x0330C33C LDR X8, [X23]
	0x0330C340 MOV X2, X31
	0x0330C344 LDR X8, [X8 + 0xB8]
	0x0330C348 LDR X1, [X8]
	0x0330C34C BL 0x3394CF0
	0x0330C350 LDR X8, [X21]
	0x0330C354 MOV W19, W0
	0x0330C358 LDR W9, [X8 + 0xE0]
	0x0330C35C CBNZ W9, 0x330C368
	0x0330C360 MOV X0, X8
	0x0330C364 BL 0x1C16DFC
	0x0330C368 ANDS W31, W19, 0x1
	0x0330C36C MOVZ W8, 0x1
	0x0330C370 CINC W3, W8, NE
	0x0330C374 ADD X0, X31, 0x28
	0x0330C378 MOVZ W1, 0x1
	0x0330C37C MOVZ W2, 0x1
	0x0330C380 MOV W4, W31
	0x0330C384 MOV W5, W31
	0x0330C388 MOV W6, W31
	0x0330C38C MOV X7, X31
	0x0330C390 BL 0x335F2FC
	0x0330C394 LDR X1, [X22]
	0x0330C398 LDR X19, [X31 + 0x28]
	0x0330C39C ADD X0, X31, 0x10
	0x0330C3A0 BL 0x243B37C
	0x0330C3A4 LDR X8, [X21]
	0x0330C3A8 MOV X20, X0
	0x0330C3AC LDR W9, [X8 + 0xE0]
	0x0330C3B0 CBNZ W9, 0x330C3BC
	0x0330C3B4 MOV X0, X8
	0x0330C3B8 BL 0x1C16DFC
	0x0330C3BC MOV X0, X19
	0x0330C3C0 MOV X1, X20
	0x0330C3C4 MOV X2, X31
	0x0330C3C8 BL 0x3362E18
	0x0330C3CC B 0x330C408
	0x0330C3D0 LDR X0, [X21]
	0x0330C3D4 LDR W8, [X0 + 0xE0]
	0x0330C3D8 CBNZ W8, 0x330C3E0
	0x0330C3DC BL 0x1C16DFC
	0x0330C3E0 ADD X0, X31, 0x28
	0x0330C3E4 MOVZ W1, 0x1
	0x0330C3E8 MOVZ W2, 0x1
	0x0330C3EC MOVZ W3, 0x1
	0x0330C3F0 MOVZ W4, 0x2
	0x0330C3F4 MOV W5, W31
	0x0330C3F8 MOV W6, W31
	0x0330C3FC MOV X7, X31
	0x0330C400 BL 0x335F2FC
	0x0330C404 LDR X0, [X31 + 0x28]
	0x0330C408 LDP X20, X19, [X31 + 0x50]
	0x0330C40C LDP X22, X21, [X31 + 0x40]
	0x0330C410 LDP X24, X23, [X31 + 0x30]
	0x0330C414 LDR X30, [X31 + 0x20]
	0x0330C418 ADD X31, X31, 0x60
	0x0330C41C RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x10D1000
	007 Move X21, 0xDEA000
	008 Move W8, [X22+2834]
	009 Move X21, [X21+1392]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDEA000
	017 Move X0, [X0+1392]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2834], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X19
	028 Move X2, X31
	029 Call TimeSpan.op_Subtraction, X0, X1
	030 Move X8, 0x5A0B
	031 NotImplemented "Instruction MOVK not yet implemented."
	032 Move X9, 4096
	033 NotImplemented "Instruction MOVK not yet implemented."
	034 NotImplemented "Instruction MOVK not yet implemented."
	035 NotImplemented "Instruction MOVK not yet implemented."
	036 NotImplemented "Instruction MOVK not yet implemented."
	037 NotImplemented "Instruction MADD not yet implemented."
	038 Move X9, 0xF611
	039 NotImplemented "Instruction MOVK not yet implemented."
	040 NotImplemented "Instruction EXTR not yet implemented."
	041 NotImplemented "Instruction MOVK not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move [X31+8], X0
	044 Move X0, [X21]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Add X0, X31, 8
	050 Move X1, X31
	051 Call TimeSpan.get_Hours, X0
	052 Move W19, W0
	053 Add X0, X31, 8
	054 Move X1, X31
	055 Call TimeSpan.get_Minutes, X0
	056 Move W2, W0
	057 Add X0, X31, 8
	058 Move W1, W19
	059 Move W3, W31
	060 Move X4, X31
	061 Call TimeSpan..ctor, X0, X1, X2, X3
	062 Move X0, [X31+8]
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Return X0

Method: System.TimeZoneInfo/TZifType TZif_GetEarlyDateTransitionType(System.TimeZoneInfo/TZifType[] transitionTypes)

Disassembly:
	0x0330C280 LDR X22, [X22 + 0xB90]
	0x0330C284 ADRP X23, 0xDE9000
	0x0330C288 ADRP X24, 0xE1B000
	0x0330C28C ADD X0, X31, 0x10
	0x0330C290 LDR X1, [X22]
	0x0330C294 LDR X23, [X23 + 0x570]
	0x0330C298 LDR X24, [X24 + 0xB98]
	0x0330C29C BL 0x243B37C
	0x0330C2A0 LDR X8, [X23]
	0x0330C2A4 STR X0, [X31 + 0x8]
	0x0330C2A8 LDR W9, [X8 + 0xE0]
	0x0330C2AC CBNZ W9, 0x330C2B8
	0x0330C2B0 MOV X0, X8
	0x0330C2B4 BL 0x1C16DFC
	0x0330C2B8 ADD X0, X31, 0x8
	0x0330C2BC MOV X1, X31
	0x0330C2C0 BL 0x33940AC
	0x0330C2C4 LDR X1, [X22]
	0x0330C2C8 MOV W19, W0
	0x0330C2CC ADD X0, X31, 0x10
	0x0330C2D0 BL 0x243B37C
	0x0330C2D4 STR X0, [X31 + 0x8]
	0x0330C2D8 ADD X0, X31, 0x8
	0x0330C2DC MOV X1, X31
	0x0330C2E0 BL 0x339413C
	0x0330C2E4 LDR X1, [X22]
	0x0330C2E8 MOV W20, W0
	0x0330C2EC ADD X0, X31, 0x10
	0x0330C2F0 BL 0x243B37C
	0x0330C2F4 STR X0, [X31 + 0x8]
	0x0330C2F8 ADD X0, X31, 0x8
	0x0330C2FC MOV X1, X31
	0x0330C300 BL 0x3394184
	0x0330C304 MOV W3, W0
	0x0330C308 ADD X0, X31, 0x0
	0x0330C30C MOV W1, W19
	0x0330C310 MOV W2, W20
	0x0330C314 MOV X4, X31
	0x0330C318 STR X31, [X31]
	0x0330C31C BL 0x3393ED0
	0x0330C320 LDR X1, [X31]
	0x0330C324 LDR X2, [X24]
	0x0330C328 ADD X0, X31, 0x10
	0x0330C32C BL 0x243B364

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {30}
	005 Move X8, [X0+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W9, W31
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X9, W9
	010 Add X10, X0, X9
	011 Move X1, [X10+40]
	012 Move TEMP, X1
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfNotEqual {24}
	016 Add W9, W9, 1
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Compare X8, 0
	019 JumpIfEqual {31}
	020 Compare W8, 0
	021 JumpIfEqual {29}
	022 Move X1, [X0+40]
	023 Add X8, X0, 32
	024 Add X8, X10, 32
	025 Move X0, [X8]
	026 Move X30, [X31+16]
	027 Move X19, [X31+24]
	028 Return X0
	029 Call 0x1C17F28
	030 Call 0x1C17F20
	031 Move X0, 0xE1C000
	032 Move X0, [X0+2664]
	033 Call 0x1C17D08
	034 Call 0x1C17F10
	035 Move X19, X0
	036 Move X0, 0xE1C000
	037 Move X0, [X0+2928]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X19
	041 Move X2, X31
	042 Call InvalidTimeZoneException..ctor, X0, X1
	043 Move X0, 0xE1C000
	044 Move X0, [X0+2936]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Call 0x1C17DEC

Method: System.TimeZoneInfo/AdjustmentRule TZif_CreateAdjustmentRuleForPosixFormat(System.String posixFormat, System.DateTime startTransitionDate, System.TimeSpan timeZoneBaseUtcOffset)

Disassembly:
	0x0330C7FC ADRP X0, 0xE1B000
	0x0330C800 LDR X0, [X0 + 0xA68]
	0x0330C804 BL 0x1C16D08
	0x0330C808 BL 0x1C16F10
	0x0330C80C MOV X19, X0
	0x0330C810 ADRP X0, 0xE1B000
	0x0330C814 LDR X0, [X0 + 0xBC0]
	0x0330C818 BL 0x1C16D08
	0x0330C81C MOV X1, X0
	0x0330C820 MOV X0, X19
	0x0330C824 MOV X2, X31
	0x0330C828 BL 0x337E04C
	0x0330C82C ADRP X0, 0xE1B000
	0x0330C830 LDR X0, [X0 + 0xBC8]
	0x0330C834 BL 0x1C16D08
	0x0330C838 MOV X1, X0
	0x0330C83C MOV X0, X19
	0x0330C840 BL 0x1C16DEC
	0x0330C844 BL 0x1C16F20
	0x0330C848 BL 0x1C16F28
	0x0330C84C STR X30, [X31 - 0x40]!
	0x0330C850 STP X24, X23, [X31 + 0x10]
	0x0330C854 STP X22, X21, [X31 + 0x20]
	0x0330C858 STP X20, X19, [X31 + 0x30]
	0x0330C85C ADRP X21, 0x10D0000
	0x0330C860 LDRB W8, [X21 + 0xB19]
	0x0330C864 MOV X19, X1
	0x0330C868 MOV X20, X0
	0x0330C86C TBNZ X8, 0x0, 0x330C8B4
	0x0330C870 ADRP X0, 0xE11000
	0x0330C874 LDR X0, [X0 + 0x648]
	0x0330C878 BL 0x1C16CF4
	0x0330C87C ADRP X0, 0xE1B000
	0x0330C880 LDR X0, [X0 + 0xA38]
	0x0330C884 BL 0x1C16CF4
	0x0330C888 ADRP X0, 0xE1B000
	0x0330C88C LDR X0, [X0 + 0xBD0]
	0x0330C890 BL 0x1C16CF4
	0x0330C894 ADRP X0, 0xE1B000
	0x0330C898 LDR X0, [X0 + 0xBD8]
	0x0330C89C BL 0x1C16CF4
	0x0330C8A0 ADRP X0, 0xE1B000
	0x0330C8A4 LDR X0, [X0 + 0xB38]
	0x0330C8A8 BL 0x1C16CF4
	0x0330C8AC MOVZ W8, 0x1
	0x0330C8B0 STRB W8, [X21 + 0xB19]
	0x0330C8B4 CBZ X20, 0x330CA7C
	0x0330C8B8 LDR W1, [X19]
	0x0330C8BC LDR W8, [X20 + 0x10]
	0x0330C8C0 ADRP X24, 0xE1B000
	0x0330C8C4 ADRP X23, 0xE1B000
	0x0330C8C8 LDR X24, [X24 + 0xB38]
	0x0330C8CC LDR X23, [X23 + 0xA38]
	0x0330C8D0 CMP W1, W8
	0x0330C8D4 B.GE 0x330C9DC
	0x0330C8D8 MOV X0, X20
	0x0330C8DC MOV X2, X31
	0x0330C8E0 BL 0x3222A1C
	0x0330C8E4 AND W8, W0, 0xFFFF
	0x0330C8E8 CMP W8, 0x3C
	0x0330C8EC B.NE 0x330C9DC
	0x0330C8F0 LDR W8, [X19]
	0x0330C8F4 ADD W8, W8, 0x1
	0x0330C8F8 STR W8, [X19]
	0x0330C8FC LDR X0, [X24]
	0x0330C900 LDR W8, [X0 + 0xE0]
	0x0330C904 CBNZ W8, 0x330C910
	0x0330C908 BL 0x1C16DFC
	0x0330C90C LDR X0, [X24]
	0x0330C910 LDR X8, [X0 + 0xB8]
	0x0330C914 LDR X21, [X8 + 0x8]
	0x0330C918 CBNZ X21, 0x330C96C
	0x0330C91C LDR W8, [X0 + 0xE0]
	0x0330C920 CBNZ W8, 0x330C92C
	0x0330C924 BL 0x1C16DFC
	0x0330C928 LDR X0, [X24]
	0x0330C92C ADRP X9, 0xE11000
	0x0330C930 LDR X8, [X0 + 0xB8]
	0x0330C934 LDR X9, [X9 + 0x648]
	0x0330C938 LDR X22, [X8]
	0x0330C93C LDR X0, [X9]
	0x0330C940 BL 0x1C16F10
	0x0330C944 ADRP X8, 0xE1B000
	0x0330C948 LDR X8, [X8 + 0xBD8]
	0x0330C94C MOV X1, X22
	0x0330C950 MOV X3, X31
	0x0330C954 MOV X21, X0
	0x0330C958 LDR X2, [X8]
	0x0330C95C BL 0x2D2BA94
	0x0330C960 LDR X8, [X24]
	0x0330C964 LDR X8, [X8 + 0xB8]
	0x0330C968 STR X21, [X8 + 0x8]
	0x0330C96C LDR X0, [X23]
	0x0330C970 LDR W8, [X0 + 0xE0]
	0x0330C974 CBNZ W8, 0x330C97C
	0x0330C978 BL 0x1C16DFC
	0x0330C97C MOV X0, X20
	0x0330C980 MOV X1, X19
	0x0330C984 MOV X2, X21
	0x0330C988 BL 0x330CC68
	0x0330C98C LDR W1, [X19]
	0x0330C990 LDR W8, [X20 + 0x10]
	0x0330C994 MOV X21, X0
	0x0330C998 CMP W1, W8
	0x0330C99C B.GE 0x330C9C4
	0x0330C9A0 MOV X0, X20
	0x0330C9A4 MOV X2, X31
	0x0330C9A8 BL 0x3222A1C
	0x0330C9AC AND W8, W0, 0xFFFF
	0x0330C9B0 CMP W8, 0x3E
	0x0330C9B4 B.NE 0x330C9C4
	0x0330C9B8 LDR W8, [X19]
	0x0330C9BC ADD W8, W8, 0x1
	0x0330C9C0 STR W8, [X19]
	0x0330C9C4 MOV X0, X21
	0x0330C9C8 LDP X20, X19, [X31 + 0x30]
	0x0330C9CC LDP X22, X21, [X31 + 0x20]
	0x0330C9D0 LDP X24, X23, [X31 + 0x10]
	0x0330C9D4 LDR X30, [X31], #0x40
	0x0330C9D8 RET
	0x0330C9DC LDR X0, [X24]
	0x0330C9E0 LDR W8, [X0 + 0xE0]
	0x0330C9E4 CBNZ W8, 0x330C9F0
	0x0330C9E8 BL 0x1C16DFC
	0x0330C9EC LDR X0, [X24]
	0x0330C9F0 LDR X8, [X0 + 0xB8]
	0x0330C9F4 LDR X21, [X8 + 0x10]
	0x0330C9F8 CBNZ X21, 0x330CA4C
	0x0330C9FC LDR W8, [X0 + 0xE0]
	0x0330CA00 CBNZ W8, 0x330CA0C
	0x0330CA04 BL 0x1C16DFC
	0x0330CA08 LDR X0, [X24]
	0x0330CA0C ADRP X9, 0xE11000
	0x0330CA10 LDR X8, [X0 + 0xB8]
	0x0330CA14 LDR X9, [X9 + 0x648]
	0x0330CA18 LDR X22, [X8]
	0x0330CA1C LDR X0, [X9]
	0x0330CA20 BL 0x1C16F10
	0x0330CA24 ADRP X8, 0xE1B000
	0x0330CA28 LDR X8, [X8 + 0xBD0]
	0x0330CA2C MOV X1, X22
	0x0330CA30 MOV X3, X31
	0x0330CA34 MOV X21, X0
	0x0330CA38 LDR X2, [X8]
	0x0330CA3C BL 0x2D2BA94
	0x0330CA40 LDR X8, [X24]
	0x0330CA44 LDR X8, [X8 + 0xB8]
	0x0330CA48 STR X21, [X8 + 0x10]
	0x0330CA4C LDR X0, [X23]
	0x0330CA50 LDR W8, [X0 + 0xE0]
	0x0330CA54 CBNZ W8, 0x330CA5C
	0x0330CA58 BL 0x1C16DFC
	0x0330CA5C MOV X0, X20
	0x0330CA60 MOV X1, X19
	0x0330CA64 MOV X2, X21
	0x0330CA68 LDP X20, X19, [X31 + 0x30]
	0x0330CA6C LDP X22, X21, [X31 + 0x20]
	0x0330CA70 LDP X24, X23, [X31 + 0x10]
	0x0330CA74 LDR X30, [X31], #0x40
	0x0330CA78 B 0x330CC68
	0x0330CA7C BL 0x1C16F20
	0x0330CA80 STR X30, [X31 - 0x40]!
	0x0330CA84 STP X24, X23, [X31 + 0x10]
	0x0330CA88 STP X22, X21, [X31 + 0x20]
	0x0330CA8C STP X20, X19, [X31 + 0x30]
	0x0330CA90 ADRP X21, 0x10D0000
	0x0330CA94 ADRP X23, 0xE1B000
	0x0330CA98 LDRB W8, [X21 + 0xB1A]
	0x0330CA9C LDR X23, [X23 + 0xB38]
	0x0330CAA0 MOV X19, X1
	0x0330CAA4 MOV X20, X0
	0x0330CAA8 TBNZ X8, 0x0, 0x330CAE4
	0x0330CAAC ADRP X0, 0xE11000
	0x0330CAB0 LDR X0, [X0 + 0x648]
	0x0330CAB4 BL 0x1C16CF4
	0x0330CAB8 ADRP X0, 0xE1B000
	0x0330CABC LDR X0, [X0 + 0xA38]
	0x0330CAC0 BL 0x1C16CF4
	0x0330CAC4 ADRP X0, 0xE1B000
	0x0330CAC8 LDR X0, [X0 + 0xBE0]
	0x0330CACC BL 0x1C16CF4
	0x0330CAD0 ADRP X0, 0xE1B000
	0x0330CAD4 LDR X0, [X0 + 0xB38]
	0x0330CAD8 BL 0x1C16CF4
	0x0330CADC MOVZ W8, 0x1
	0x0330CAE0 STRB W8, [X21 + 0xB1A]
	0x0330CAE4 LDR X0, [X23]
	0x0330CAE8 LDR W8, [X0 + 0xE0]
	0x0330CAEC CBNZ W8, 0x330CAF8
	0x0330CAF0 BL 0x1C16DFC
	0x0330CAF4 LDR X0, [X23]
	0x0330CAF8 LDR X8, [X0 + 0xB8]
	0x0330CAFC ADRP X24, 0xE1B000
	0x0330CB00 LDR X21, [X8 + 0x18]
	0x0330CB04 LDR X24, [X24 + 0xA38]
	0x0330CB08 CBNZ X21, 0x330CB5C
	0x0330CB0C LDR W8, [X0 + 0xE0]
	0x0330CB10 CBNZ W8, 0x330CB1C
	0x0330CB14 BL 0x1C16DFC
	0x0330CB18 LDR X0, [X23]
	0x0330CB1C ADRP X9, 0xE11000
	0x0330CB20 LDR X8, [X0 + 0xB8]
	0x0330CB24 LDR X9, [X9 + 0x648]
	0x0330CB28 LDR X22, [X8]
	0x0330CB2C LDR X0, [X9]
	0x0330CB30 BL 0x1C16F10
	0x0330CB34 ADRP X8, 0xE1B000
	0x0330CB38 LDR X8, [X8 + 0xBE0]
	0x0330CB3C MOV X1, X22
	0x0330CB40 MOV X3, X31
	0x0330CB44 MOV X21, X0
	0x0330CB48 LDR X2, [X8]
	0x0330CB4C BL 0x2D2BA94
	0x0330CB50 LDR X8, [X23]
	0x0330CB54 LDR X8, [X8 + 0xB8]
	0x0330CB58 STR X21, [X8 + 0x18]
	0x0330CB5C LDR X0, [X24]
	0x0330CB60 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 352
	002 Move [X31+272], X29
	003 Move [X31+288], X30
	004 Move [X31+296], X25
	005 Move [X31+304], X24
	006 Move [X31+312], X23
	007 Move [X31+320], X22
	008 Move [X31+328], X21
	009 Move [X31+336], X20
	010 Move [X31+344], X19
	011 Move X22, 0x10D1000
	012 Move X23, 0xE1C000
	013 Move W8, [X22+2835]
	014 Move X23, [X23+2616]
	015 Move X21, X2
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {39}
	022 Move X0, 0xDE9000
	023 Move X0, [X0+2544]
	024 Call 0x1C17CF4
	025 Move X0, 0xE1C000
	026 Move X0, [X0+2952]
	027 Call 0x1C17CF4
	028 Move X0, 0xE1C000
	029 Move X0, [X0+2960]
	030 Call 0x1C17CF4
	031 Move X0, 0xDEA000
	032 Move X0, [X0+1392]
	033 Call 0x1C17CF4
	034 Move X0, 0xE1C000
	035 Move X0, [X0+2616]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X22+2835], W8
	039 Move X0, [X23]
	040 Move [X31+280], X31
	041 Move [X31+256], X31
	042 Move [X31+264], X31
	043 Move [X31+240], X31
	044 Move [X31+248], X31
	045 Move [X31+224], X31
	046 Move [X31+232], X31
	047 Move [X31+208], X31
	048 Move [X31+216], X31
	049 Move [X31+192], X31
	050 Move [X31+200], X31
	051 Move [X31+176], X31
	052 Move [X31+184], X31
	053 Move [X31+160], X31
	054 Move [X31+168], X31
	055 Move [X31+144], X31
	056 Move [X31+152], X31
	057 Move [X31+120], X31
	058 Move [X31+128], X31
	059 Move [X31+136], X31
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Add X8, X31, 216
	065 Add X1, X31, 280
	066 Add X2, X31, 264
	067 Add X3, X31, 256
	068 Add X4, X31, 248
	069 Add X5, X31, 240
	070 Add X6, X31, 232
	071 Add X7, X31, 224
	072 Move X0, X20
	073 Move [X31], X8
	074 Call TimeZoneInfo.TZif_ParsePosixFormat, X0, X1, X2, X3, X4, X5, X6, X7, X8
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {157}
	079 Move X0, [X23]
	080 Move X20, [X31+264]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X0, X20
	086 Call TimeZoneInfo.TZif_ParseOffsetString, X0
	087 And W31, W0, 255
	088 Move [X31+200], X0
	089 Move [X31+208], X1
	090 Move X25, 0xE1C000
	091 Move X25, [X25+2960]
	092 Add X0, X31, 200
	093 Move X1, [X25]
	094 Call Nullable`1<TimeSpan>.get_Value, X0
	095 Move X24, 0xDEA000
	096 Move X24, [X24+1392]
	097 Move [X31+192], X0
	098 Move X8, [X24]
	099 Move W9, [X8+224]
	100 Compare W9, 0
	101 JumpIfNotEqual {104}
	102 Move X0, X8
	103 Call 0x1C17DFC
	104 Add X0, X31, 192
	105 Move X1, X31
	106 Call TimeSpan.Negate, X0
	107 Move X8, [X23]
	108 Move X20, X0
	109 Move W9, [X8+224]
	110 Compare W9, 0
	111 JumpIfNotEqual {114}
	112 Move X0, X8
	113 Call 0x1C17DFC
	114 Move X0, X20
	115 Move X1, X21
	116 Call TimeZoneInfo.TZif_CalculateTransitionOffsetFromBase, X0, X1
	117 Move X8, [X31+256]
	118 Move X20, X0
	119 Move X1, X31
	120 Move X0, X8
	121 Call String.IsNullOrEmpty, X0
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {158}
	126 Move X21, 0xDE9000
	127 Move X21, [X21+2544]
	128 Move X0, [X21]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {134}
	132 Call 0x1C17DFC
	133 Move X0, [X21]
	134 Move X8, [X24]
	135 Move X9, [X0+184]
	136 Move W10, [X8+224]
	137 Move X21, [X9+24]
	138 Compare W10, 0
	139 JumpIfNotEqual {143}
	140 Move X0, X8
	141 Call 0x1C17DFC
	142 Move X8, [X24]
	143 Move X8, [X8+184]
	144 Add X3, X31, 40
	145 Add X4, X31, 16
	146 Move W6, 1
	147 Move X2, [X8]
	148 Move X0, X19
	149 Move X1, X21
	150 Move X5, X20
	151 Move [X31+40], X31
	152 Move [X31+48], X31
	153 Move [X31+56], X31
	154 Move [X31+24], X31
	155 Move [X31+32], X31
	156 Move [X31+16], X31
	157 Move X0, X31
	158 Move X0, [X23]
	159 Move X22, [X31+248]
	160 Move W8, [X0+224]
	161 Compare W8, 0
	162 JumpIfNotEqual {164}
	163 Call 0x1C17DFC
	164 Move X0, X22
	165 Call TimeZoneInfo.TZif_ParseOffsetString, X0
	166 And W31, W0, 255
	167 Move [X31+176], X0
	168 Move [X31+184], X1
	169 Move X1, [X25]
	170 Add X0, X31, 176
	171 Call Nullable`1<TimeSpan>.get_Value, X0
	172 Move X8, [X24]
	173 Move [X31+192], X0
	174 Move W9, [X8+224]
	175 Compare W9, 0
	176 JumpIfNotEqual {179}
	177 Move X0, X8
	178 Call 0x1C17DFC
	179 Add X0, X31, 192
	180 Move X1, X31
	181 Call TimeSpan.Negate, X0
	182 Move X8, [X23]
	183 Move [X31+168], X0
	184 Move X22, X0
	185 Move W9, [X8+224]
	186 Compare W9, 0
	187 JumpIfNotEqual {190}
	188 Move X0, X8
	189 Call 0x1C17DFC
	190 Move X0, X22
	191 Move X1, X21
	192 Call TimeZoneInfo.TZif_CalculateTransitionOffsetFromBase, X0, X1
	193 Move X1, X20
	194 Move [X31+168], X0
	195 Call TimeZoneInfo.TZif_CalculateTransitionOffsetFromBase, X0, X1
	196 Move [X31+168], X0
	197 Move X0, [X24]
	198 Move W8, [X0+224]
	199 Compare W8, 0
	200 JumpIfNotEqual {202}
	201 Call 0x1C17DFC
	202 Add X0, X31, 168
	203 Move W1, 1
	204 Move W2, W31
	205 Move W3, W31
	206 Move X4, X31
	207 Call TimeSpan..ctor, X0, X1, X2, X3
	208 Move X0, [X23]
	209 Move X22, [X31+232]
	210 Move X21, [X31+240]
	211 Move W8, [X0+224]
	212 Compare W8, 0
	213 JumpIfNotEqual {215}
	214 Call 0x1C17DFC
	215 Add X8, X31, 144
	216 Move X0, X21
	217 Move X1, X22
	218 Call TimeZoneInfo.TZif_CreateTransitionTimeFromPosixRule, X0, X1
	219 Move X1, [X31+216]
	220 Move X0, [X31+224]
	221 Add X8, X31, 120
	222 Call TimeZoneInfo.TZif_CreateTransitionTimeFromPosixRule, X0, X1
	223 Move X21, 0xDE9000
	224 Move X21, [X21+2544]
	225 Move X0, [X21]
	226 Move W8, [X0+224]
	227 Compare W8, 0
	228 JumpIfNotEqual {231}
	229 Call 0x1C17DFC
	230 Move X0, [X21]
	231 Move X8, [X0+184]
	232 Move X9, [X31+160]
	233 Move X2, [X31+168]
	234 Move V0, [X31+9]
	235 NotImplemented "Instruction LDUR not yet implemented."
	236 Move X10, [X31+136]
	237 Move X1, [X8+24]
	238 Move [X31+6], V0
	239 Move [X31+112], X9
	240 Move [X31+4], V1
	241 Move [X31+80], X10
	242 Add X3, X31, 96
	243 Add X4, X31, 64
	244 Move X0, X19
	245 Move X5, X20
	246 Move W6, W31
	247 Call AdjustmentRule.CreateAdjustmentRule, X0, X1, X2, X3, X4, X5, X6
	248 Move X20, [X31+336]
	249 Move X19, [X31+344]
	250 Move X22, [X31+320]
	251 Move X21, [X31+328]
	252 Move X24, [X31+304]
	253 Move X23, [X31+312]
	254 Move X30, [X31+288]
	255 Move X25, [X31+296]
	256 Move X29, [X31+272]
	257 Add X31, X31, 352
	258 Return X0

Method: System.Nullable`1<System.TimeSpan> TZif_ParseOffsetString(System.String offset)

Disassembly:
	0x0330CD60 STRB W8, [X21 + 0xB1C]
	0x0330CD64 LDR X0, [X23]
	0x0330CD68 LDR W8, [X0 + 0xE0]
	0x0330CD6C CBNZ W8, 0x330CD78
	0x0330CD70 BL 0x1C16DFC
	0x0330CD74 LDR X0, [X23]
	0x0330CD78 LDR X8, [X0 + 0xB8]
	0x0330CD7C ADRP X24, 0xE1B000
	0x0330CD80 LDR X21, [X8 + 0x20]
	0x0330CD84 LDR X24, [X24 + 0xA38]
	0x0330CD88 CBNZ X21, 0x330CDDC
	0x0330CD8C LDR W8, [X0 + 0xE0]
	0x0330CD90 CBNZ W8, 0x330CD9C
	0x0330CD94 BL 0x1C16DFC
	0x0330CD98 LDR X0, [X23]
	0x0330CD9C ADRP X9, 0xE11000
	0x0330CDA0 LDR X8, [X0 + 0xB8]
	0x0330CDA4 LDR X9, [X9 + 0x648]
	0x0330CDA8 LDR X22, [X8]
	0x0330CDAC LDR X0, [X9]
	0x0330CDB0 BL 0x1C16F10
	0x0330CDB4 ADRP X8, 0xE1B000
	0x0330CDB8 LDR X8, [X8 + 0xBE8]
	0x0330CDBC MOV X1, X22
	0x0330CDC0 MOV X3, X31
	0x0330CDC4 MOV X21, X0
	0x0330CDC8 LDR X2, [X8]
	0x0330CDCC BL 0x2D2BA94
	0x0330CDD0 LDR X8, [X23]
	0x0330CDD4 LDR X8, [X8 + 0xB8]
	0x0330CDD8 STR X21, [X8 + 0x20]
	0x0330CDDC LDR X0, [X24]
	0x0330CDE0 LDR W8, [X0 + 0xE0]
	0x0330CDE4 CBNZ W8, 0x330CDEC
	0x0330CDE8 BL 0x1C16DFC
	0x0330CDEC MOV X0, X20
	0x0330CDF0 MOV X1, X19
	0x0330CDF4 MOV X2, X21
	0x0330CDF8 LDP X20, X19, [X31 + 0x30]
	0x0330CDFC LDP X22, X21, [X31 + 0x20]
	0x0330CE00 LDP X24, X23, [X31 + 0x10]
	0x0330CE04 LDR X30, [X31], #0x40
	0x0330CE08 B 0x330CC68
	0x0330CE0C STR X30, [X31 - 0x40]!
	0x0330CE10 STP X24, X23, [X31 + 0x10]
	0x0330CE14 STP X22, X21, [X31 + 0x20]
	0x0330CE18 STP X20, X19, [X31 + 0x30]
	0x0330CE1C ADRP X21, 0x10D0000
	0x0330CE20 ADRP X23, 0xE1B000
	0x0330CE24 LDRB W8, [X21 + 0xB1D]
	0x0330CE28 LDR X23, [X23 + 0xB38]
	0x0330CE2C MOV X19, X1
	0x0330CE30 MOV X20, X0
	0x0330CE34 TBNZ X8, 0x0, 0x330CE70
	0x0330CE38 ADRP X0, 0xE11000
	0x0330CE3C LDR X0, [X0 + 0x648]
	0x0330CE40 BL 0x1C16CF4
	0x0330CE44 ADRP X0, 0xE1B000
	0x0330CE48 LDR X0, [X0 + 0xA38]
	0x0330CE4C BL 0x1C16CF4
	0x0330CE50 ADRP X0, 0xE1B000
	0x0330CE54 LDR X0, [X0 + 0xBF0]
	0x0330CE58 BL 0x1C16CF4
	0x0330CE5C ADRP X0, 0xE1B000
	0x0330CE60 LDR X0, [X0 + 0xB38]
	0x0330CE64 BL 0x1C16CF4
	0x0330CE68 MOVZ W8, 0x1
	0x0330CE6C STRB W8, [X21 + 0xB1D]
	0x0330CE70 LDR X0, [X23]
	0x0330CE74 LDR W8, [X0 + 0xE0]
	0x0330CE78 CBNZ W8, 0x330CE84
	0x0330CE7C BL 0x1C16DFC
	0x0330CE80 LDR X0, [X23]
	0x0330CE84 LDR X8, [X0 + 0xB8]
	0x0330CE88 ADRP X24, 0xE1B000
	0x0330CE8C LDR X21, [X8 + 0x28]
	0x0330CE90 LDR X24, [X24 + 0xA38]
	0x0330CE94 CBNZ X21, 0x330CEE8
	0x0330CE98 LDR W8, [X0 + 0xE0]
	0x0330CE9C CBNZ W8, 0x330CEA8
	0x0330CEA0 BL 0x1C16DFC
	0x0330CEA4 LDR X0, [X23]
	0x0330CEA8 ADRP X9, 0xE11000
	0x0330CEAC LDR X8, [X0 + 0xB8]
	0x0330CEB0 LDR X9, [X9 + 0x648]
	0x0330CEB4 LDR X22, [X8]
	0x0330CEB8 LDR X0, [X9]
	0x0330CEBC BL 0x1C16F10
	0x0330CEC0 ADRP X8, 0xE1B000
	0x0330CEC4 LDR X8, [X8 + 0xBF0]
	0x0330CEC8 MOV X1, X22
	0x0330CECC MOV X3, X31
	0x0330CED0 MOV X21, X0
	0x0330CED4 LDR X2, [X8]
	0x0330CED8 BL 0x2D2BA94
	0x0330CEDC LDR X8, [X23]
	0x0330CEE0 LDR X8, [X8 + 0xB8]
	0x0330CEE4 STR X21, [X8 + 0x28]
	0x0330CEE8 LDR X0, [X24]
	0x0330CEEC LDR W8, [X0 + 0xE0]
	0x0330CEF0 CBNZ W8, 0x330CEF8
	0x0330CEF4 BL 0x1C16DFC
	0x0330CEF8 MOV X0, X20
	0x0330CEFC MOV X1, X19
	0x0330CF00 MOV X2, X21
	0x0330CF04 LDP X20, X19, [X31 + 0x30]
	0x0330CF08 LDP X22, X21, [X31 + 0x20]
	0x0330CF0C LDP X24, X23, [X31 + 0x10]
	0x0330CF10 LDR X30, [X31], #0x40
	0x0330CF14 B 0x330CC68
	0x0330CF18 STR X30, [X31 - 0x10]!
	0x0330CF1C CBZ X0, 0x330CF40
	0x0330CF20 LDR W8, [X0 + 0x18]
	0x0330CF24 CMP W8, W1
	0x0330CF28 B.LS 0x330CF44
	0x0330CF2C ADD X8, X0, W1, SXTW
	0x0330CF30 LDR W8, [X8 + 0x20]
	0x0330CF34 REV W0, W8
	0x0330CF38 LDR X30, [X31], #0x10
	0x0330CF3C RET
	0x0330CF40 BL 0x1C16F20
	0x0330CF44 BL 0x1C16F28
	0x0330CF48 STR X30, [X31 - 0x10]!
	0x0330CF4C CBZ X0, 0x330CF70
	0x0330CF50 LDR W8, [X0 + 0x18]
	0x0330CF54 CMP W8, W1
	0x0330CF58 B.LS 0x330CF74
	0x0330CF5C ADD X8, X0, W1, SXTW
	0x0330CF60 LDR X8, [X8 + 0x20]
	0x0330CF64 REV X0, X8
	0x0330CF68 LDR X30, [X31], #0x10
	0x0330CF6C RET
	0x0330CF70 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X20, 0x10D1000
	007 Move W8, [X20+2836]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0xDEA000
	014 Move X0, [X0+3144]
	015 Call 0x1C17CF4
	016 Move X0, 0xE1C000
	017 Move X0, [X0+2968]
	018 Call 0x1C17CF4
	019 Move X0, 0xE1C000
	020 Move X0, [X0+2952]
	021 Call 0x1C17CF4
	022 Move X0, 0xE1C000
	023 Move X0, [X0+2960]
	024 Call 0x1C17CF4
	025 Move X0, 0xDEA000
	026 Move X0, [X0+1392]
	027 Call 0x1C17CF4
	028 Move X0, 0xE15000
	029 Move X0, [X0+952]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+2836], W8
	033 Move X0, X19
	034 Move X1, X31
	035 Move [X31+28], W31
	036 Move [X31+8], X31
	037 Move [X31+16], X31
	038 Move [X31+32], X31
	039 Move [X31+40], X31
	040 Call String.IsNullOrEmpty, X0
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {145}
	045 Compare X19, 0
	046 JumpIfEqual {153}
	047 Move X0, X19
	048 Move W1, W31
	049 Move X2, X31
	050 Call String.get_Chars, X0, X1
	051 And W8, W0, 0xFFFF
	052 Move W20, W0
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X0, X19
	055 Move W1, W31
	056 Move X2, X31
	057 Call String.get_Chars, X0, X1
	058 And W8, W0, 0xFFFF
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W1, 1
	061 Move X0, X19
	062 Move X2, X31
	063 Call String.Substring, X0, X1
	064 Move X19, X0
	065 Add X1, X31, 28
	066 Move X0, X19
	067 Move X2, X31
	068 Call Int32.TryParse, X0, X1
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {81}
	073 Move W1, [X31+28]
	074 Add X0, X31, 0
	075 Move W2, W31
	076 Move W3, W31
	077 Move X4, X31
	078 Move [X31], X31
	079 Call TimeSpan..ctor, X0, X1, X2, X3
	080 Move X1, [X31]
	081 Move X8, 0xDEA000
	082 Move X8, [X8+3144]
	083 Move X0, [X8]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move X0, X31
	089 Call CultureInfo.get_InvariantCulture
	090 Move X8, 0xDEA000
	091 Move X8, [X8+1392]
	092 Move X21, X0
	093 Move X8, [X8]
	094 Move W9, [X8+224]
	095 Compare W9, 0
	096 JumpIfNotEqual {99}
	097 Move X0, X8
	098 Call 0x1C17DFC
	099 Move X8, 0xE15000
	100 Move X8, [X8+952]
	101 Add X3, X31, 16
	102 Move X0, X19
	103 Move X2, X21
	104 Move X1, [X8]
	105 Move X4, X31
	106 Call TimeSpan.TryParseExact, X0, X1, X2, X3
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {117}
	111 Move X1, [X31+16]
	112 Move X8, 0xE1C000
	113 Move X8, [X8+2968]
	114 Add X0, X31, 32
	115 Move X2, [X8]
	116 Call Nullable`1<TimeSpan>..ctor, X0, X1
	117 And W8, W20, 0xFFFF
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move W8, [X31+32]
	120 Compare W8, 0
	121 JumpIfEqual {145}
	122 Move X8, 0xE1C000
	123 Move X8, [X8+2960]
	124 Add X0, X31, 32
	125 Move X1, [X8]
	126 Call Nullable`1<TimeSpan>.get_Value, X0
	127 Move X8, 0xDEA000
	128 Move X8, [X8+1392]
	129 Move [X31+8], X0
	130 Move X8, [X8]
	131 Move W9, [X8+224]
	132 Compare W9, 0
	133 JumpIfNotEqual {136}
	134 Move X0, X8
	135 Call 0x1C17DFC
	136 Add X0, X31, 8
	137 Move X1, X31
	138 Call TimeSpan.Negate, X0
	139 Move X8, 0xE1C000
	140 Move X8, [X8+2968]
	141 Move X1, X0
	142 Add X0, X31, 32
	143 Move X2, [X8]
	144 Call Nullable`1<TimeSpan>..ctor, X0, X1
	145 Move X0, [X31+32]
	146 Move X1, [X31+40]
	147 Move X20, [X31+64]
	148 Move X19, [X31+72]
	149 Move X30, [X31+48]
	150 Move X21, [X31+56]
	151 Add X31, X31, 80
	152 Return X0
	153 Call 0x1C17F20

Method: System.DateTime ParseTimeOfDay(System.String time)

Disassembly:
	0x0330D1CC MOV X0, X20
	0x0330D1D0 BL 0x330CF18
	0x0330D1D4 STR W0, [X19 + 0xC]
	0x0330D1D8 ADD W1, W21, 0x1C
	0x0330D1DC MOV X0, X20
	0x0330D1E0 BL 0x330CF18
	0x0330D1E4 STR W0, [X19 + 0x10]
	0x0330D1E8 ADD W1, W21, 0x20
	0x0330D1EC MOV X0, X20
	0x0330D1F0 BL 0x330CF18
	0x0330D1F4 STR W0, [X19 + 0x14]
	0x0330D1F8 ADD W1, W21, 0x24
	0x0330D1FC MOV X0, X20
	0x0330D200 BL 0x330CF18
	0x0330D204 STR W0, [X19 + 0x18]
	0x0330D208 ADD W1, W21, 0x28
	0x0330D20C MOV X0, X20
	0x0330D210 BL 0x330CF18
	0x0330D214 STR W0, [X19 + 0x1C]
	0x0330D218 LDP X20, X19, [X31 + 0x20]
	0x0330D21C LDP X22, X21, [X31 + 0x10]
	0x0330D220 LDR X30, [X31], #0x30
	0x0330D224 RET
	0x0330D228 ADRP X0, 0xDEE000
	0x0330D22C LDR X0, [X0 + 0x578]
	0x0330D230 BL 0x1C16D08
	0x0330D234 BL 0x1C16F10
	0x0330D238 MOV X19, X0
	0x0330D23C ADRP X0, 0xE1A000
	0x0330D240 LDR X0, [X0 + 0xBF8]
	0x0330D244 B 0x330D264
	0x0330D248 ADRP X0, 0xDEE000
	0x0330D24C LDR X0, [X0 + 0x578]
	0x0330D250 BL 0x1C16D08
	0x0330D254 BL 0x1C16F10
	0x0330D258 MOV X19, X0
	0x0330D25C ADRP X0, 0xE1A000
	0x0330D260 LDR X0, [X0 + 0xC00]
	0x0330D264 BL 0x1C16D08
	0x0330D268 MOV X20, X0
	0x0330D26C ADRP X0, 0xDF2000
	0x0330D270 LDR X0, [X0 + 0x690]
	0x0330D274 BL 0x1C16D08
	0x0330D278 MOV X2, X0
	0x0330D27C MOV X0, X19
	0x0330D280 MOV X1, X20
	0x0330D284 BL 0x330E16C
	0x0330D288 ADRP X0, 0xE1A000
	0x0330D28C LDR X0, [X0 + 0xC08]
	0x0330D290 BL 0x1C16D08
	0x0330D294 MOV X1, X0
	0x0330D298 MOV X0, X19
	0x0330D29C BL 0x1C16DEC
	0x0330D2A0 BL 0x1C16F28
	0x0330D2A4 STR X30, [X31 - 0x30]!
	0x0330D2A8 STP X22, X21, [X31 + 0x10]
	0x0330D2AC STP X20, X19, [X31 + 0x20]
	0x0330D2B0 ADRP X22, 0x10CF000
	0x0330D2B4 LDRB W8, [X22 + 0xB52]
	0x0330D2B8 MOV W21, W2
	0x0330D2BC MOV X19, X1
	0x0330D2C0 MOV X20, X0
	0x0330D2C4 TBNZ X8, 0x0, 0x330D2DC
	0x0330D2C8 ADRP X0, 0xE1A000
	0x0330D2CC LDR X0, [X0 + 0xA38]
	0x0330D2D0 BL 0x1C16CF4
	0x0330D2D4 MOVZ W8, 0x1
	0x0330D2D8 STRB W8, [X22 + 0xB52]
	0x0330D2DC CBZ X19, 0x330D384
	0x0330D2E0 LDR W8, [X19 + 0x18]
	0x0330D2E4 ADD W9, W21, 0x6
	0x0330D2E8 CMP W9, W8
	0x0330D2EC B.GT 0x330D384
	0x0330D2F0 ADRP X8, 0xE1A000
	0x0330D2F4 LDR X8, [X8 + 0xA38]
	0x0330D2F8 LDR X0, [X8]
	0x0330D2FC LDR W8, [X0 + 0xE0]
	0x0330D300 CBNZ W8, 0x330D308
	0x0330D304 BL 0x1C16DFC
	0x0330D308 MOV X0, X19
	0x0330D30C MOV W1, W21
	0x0330D310 BL 0x330CF18
	0x0330D314 MOV W3, W0
	0x0330D318 ADD X0, X31, 0x8
	0x0330D31C MOV W1, W31
	0x0330D320 MOV W2, W31
	0x0330D324 MOV X4, X31
	0x0330D328 STR X31, [X31 + 0x8]
	0x0330D32C BL 0x3393ED0
	0x0330D330 LDR X8, [X31 + 0x8]
	0x0330D334 ADD W9, W21, 0x4
	0x0330D338 STR X8, [X20]
	0x0330D33C LDR W8, [X19 + 0x18]
	0x0330D340 CMP W9, W8
	0x0330D344 B.CS 0x330D3DC
	0x0330D348 ADD X9, X19, W9, SXTW
	0x0330D34C LDRB W10, [X9 + 0x20]
	0x0330D350 ADD W9, W21, 0x5
	0x0330D354 CMP W10, 0x0
	0x0330D358 CSET W10, NE
	0x0330D35C CMP W9, W8
	0x0330D360 STRB W10, [X20 + 0x8]
	0x0330D364 B.CS 0x330D3DC
	0x0330D368 ADD X8, X19, W9, SXTW
	0x0330D36C LDRB W8, [X8 + 0x20]
	0x0330D370 LDP X22, X21, [X31 + 0x10]
	0x0330D374 STRB W8, [X20 + 0x9]
	0x0330D378 LDP X20, X19, [X31 + 0x20]
	0x0330D37C LDR X30, [X31], #0x30
	0x0330D380 RET
	0x0330D384 ADRP X0, 0xDEE000
	0x0330D388 LDR X0, [X0 + 0x578]
	0x0330D38C BL 0x1C16D08
	0x0330D390 BL 0x1C16F10
	0x0330D394 MOV X19, X0
	0x0330D398 ADRP X0, 0xE1A000
	0x0330D39C LDR X0, [X0 + 0xC10]
	0x0330D3A0 BL 0x1C16D08
	0x0330D3A4 MOV X20, X0
	0x0330D3A8 ADRP X0, 0xDF2000
	0x0330D3AC LDR X0, [X0 + 0x690]
	0x0330D3B0 BL 0x1C16D08
	0x0330D3B4 MOV X2, X0
	0x0330D3B8 MOV X0, X19
	0x0330D3BC MOV X1, X20
	0x0330D3C0 BL 0x330E16C
	0x0330D3C4 ADRP X0, 0xE1A000
	0x0330D3C8 LDR X0, [X0 + 0xC18]
	0x0330D3CC BL 0x1C16D08
	0x0330D3D0 MOV X1, X0
	0x0330D3D4 MOV X0, X19
	0x0330D3D8 BL 0x1C16DEC
	0x0330D3DC BL 0x1C16F28
	0x0330D3E0 STR X30, [X31 - 0x20]!
	0x0330D3E4 STP X20, X19, [X31 + 0x10]
	0x0330D3E8 ADRP X20, 0x10CF000
	0x0330D3EC LDRB W8, [X20 + 0xB21]
	0x0330D3F0 MOV X19, X0
	0x0330D3F4 TBNZ X8, 0x0, 0x330D40C
	0x0330D3F8 ADRP X0, 0xDE8000
	0x0330D3FC LDR X0, [X0 + 0x278]
	0x0330D400 BL 0x1C16CF4
	0x0330D404 MOVZ W8, 0x1
	0x0330D408 STRB W8, [X20 + 0xB21]
	0x0330D40C LDR X0, [X19 + 0x18]
	0x0330D410 CBNZ X0, 0x330D428
	0x0330D414 ADRP X8, 0xDE8000
	0x0330D418 LDR X8, [X8 + 0x278]
	0x0330D41C LDR X8, [X8]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X21, 0x10D0000
	010 Move X20, 0xE1B000
	011 Move W8, [X21+2837]
	012 Move X20, [X20+2616]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {38}
	018 Move X0, 0xDE8000
	019 Move X0, [X0+2544]
	020 Call 0x1C17CF4
	021 Move X0, 0xE1B000
	022 Move X0, [X0+2968]
	023 Call 0x1C17CF4
	024 Move X0, 0xE1B000
	025 Move X0, [X0+2952]
	026 Call 0x1C17CF4
	027 Move X0, 0xE1B000
	028 Move X0, [X0+2960]
	029 Call 0x1C17CF4
	030 Move X0, 0xDE9000
	031 Move X0, [X0+1392]
	032 Call 0x1C17CF4
	033 Move X0, 0xE1B000
	034 Move X0, [X0+2616]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+2837], W8
	038 Move X0, [X20]
	039 Move [X31+40], X31
	040 Move [X31+8], X31
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X21, 0xDE8000
	046 Move X21, [X21+2544]
	047 Move X0, X19
	048 Call TimeZoneInfo.TZif_ParseOffsetString, X0
	049 And W31, W0, 255
	050 Move [X31+16], X0
	051 Move [X31+24], X1
	052 Move X22, 0xE1B000
	053 Move X22, [X22+2960]
	054 Move X23, 0xDE9000
	055 Move X24, 0xE1B000
	056 Add X0, X31, 16
	057 Move X1, [X22]
	058 Move X23, [X23+1392]
	059 Move X24, [X24+2968]
	060 Call Nullable`1<TimeSpan>.get_Value, X0
	061 Move X8, [X23]
	062 Move [X31+8], X0
	063 Move W9, [X8+224]
	064 Compare W9, 0
	065 JumpIfNotEqual {68}
	066 Move X0, X8
	067 Call 0x1C17DFC
	068 Add X0, X31, 8
	069 Move X1, X31
	070 Call TimeSpan.get_Hours, X0
	071 Move X1, [X22]
	072 Move W19, W0
	073 Add X0, X31, 16
	074 Call Nullable`1<TimeSpan>.get_Value, X0
	075 Move [X31+8], X0
	076 Add X0, X31, 8
	077 Move X1, X31
	078 Call TimeSpan.get_Minutes, X0
	079 Move X1, [X22]
	080 Move W20, W0
	081 Add X0, X31, 16
	082 Call Nullable`1<TimeSpan>.get_Value, X0
	083 Move [X31+8], X0
	084 Add X0, X31, 8
	085 Move X1, X31
	086 Call TimeSpan.get_Seconds, X0
	087 Move W3, W0
	088 Add X0, X31, 0
	089 Move W1, W19
	090 Move W2, W20
	091 Move X4, X31
	092 Move [X31], X31
	093 Call TimeSpan..ctor, X0, X1, X2, X3
	094 Move X1, [X31]
	095 Move X2, [X24]
	096 Add X0, X31, 16
	097 Call Nullable`1<TimeSpan>..ctor, X0, X1
	098 Move X1, [X22]
	099 Add X0, X31, 16
	100 Call Nullable`1<TimeSpan>.get_Value, X0
	101 Move X8, [X23]
	102 Move X2, X31
	103 Move X8, [X8+184]
	104 Move X1, [X8]
	105 Call TimeSpan.op_LessThan, X0, X1
	106 Move X8, [X21]
	107 Move W19, W0
	108 Move W9, [X8+224]
	109 Compare W9, 0
	110 JumpIfNotEqual {113}
	111 Move X0, X8
	112 Call 0x1C17DFC
	113 And W31, W19, 1
	114 Move W8, 1
	115 NotImplemented "Instruction CINC not yet implemented."
	116 Add X0, X31, 40
	117 Move W1, 1
	118 Move W2, 1
	119 Move W4, W31
	120 Move W5, W31
	121 Move W6, W31
	122 Move X7, X31
	123 Call DateTime..ctor, X0, X1, X2, X3, X4, X5, X6
	124 Move X1, [X22]
	125 Move X19, [X31+40]
	126 Add X0, X31, 16
	127 Call Nullable`1<TimeSpan>.get_Value, X0
	128 Move X8, [X21]
	129 Move X20, X0
	130 Move W9, [X8+224]
	131 Compare W9, 0
	132 JumpIfNotEqual {135}
	133 Move X0, X8
	134 Call 0x1C17DFC
	135 Move X0, X19
	136 Move X1, X20
	137 Move X2, X31
	138 Call DateTime.op_Addition, X0, X1
	139 Move X0, [X21]
	140 Move W8, [X0+224]
	141 Compare W8, 0
	142 JumpIfNotEqual {144}
	143 Call 0x1C17DFC
	144 Add X0, X31, 40
	145 Move W1, 1
	146 Move W2, 1
	147 Move W3, 1
	148 Move W4, 2
	149 Move W5, W31
	150 Move W6, W31
	151 Move X7, X31
	152 Call DateTime..ctor, X0, X1, X2, X3, X4, X5, X6
	153 Move X0, [X31+40]
	154 Move X20, [X31+80]
	155 Move X19, [X31+88]
	156 Move X22, [X31+64]
	157 Move X21, [X31+72]
	158 Move X24, [X31+48]
	159 Move X23, [X31+56]
	160 Move X30, [X31+32]
	161 Add X31, X31, 96
	162 Return X0

Method: System.TimeZoneInfo/TransitionTime TZif_CreateTransitionTimeFromPosixRule(System.String date, System.String time)

Disassembly:
	0x0330CF74 BL 0x1C16F28
	0x0330CF78 STP X30, X23, [X31 - 0x30]!
	0x0330CF7C STP X22, X21, [X31 + 0x10]
	0x0330CF80 STP X20, X19, [X31 + 0x20]
	0x0330CF84 ADRP X22, 0x10D0000
	0x0330CF88 ADRP X23, 0xE1B000
	0x0330CF8C LDRB W8, [X22 + 0xB1E]
	0x0330CF90 LDR X23, [X23 + 0xA38]
	0x0330CF94 MOV W21, W2
	0x0330CF98 MOV W19, W1
	0x0330CF9C MOV X20, X0
	0x0330CFA0 TBNZ X8, 0x0, 0x330CFB8
	0x0330CFA4 ADRP X0, 0xE1B000
	0x0330CFA8 LDR X0, [X0 + 0xA38]
	0x0330CFAC BL 0x1C16CF4
	0x0330CFB0 MOVZ W8, 0x1
	0x0330CFB4 STRB W8, [X22 + 0xB1E]
	0x0330CFB8 LDR X0, [X23]
	0x0330CFBC LDR W8, [X0 + 0xE0]
	0x0330CFC0 CBNZ W8, 0x330CFC8
	0x0330CFC4 BL 0x1C16DFC
	0x0330CFC8 MOV X0, X20
	0x0330CFCC MOV W1, W19
	0x0330CFD0 ANDS W31, W21, 0xFF
	0x0330CFD4 B.EQ 0x330CFE8
	0x0330CFD8 LDP X20, X19, [X31 + 0x20]
	0x0330CFDC LDP X22, X21, [X31 + 0x10]
	0x0330CFE0 LDP X30, X23, [X31], #0x30
	0x0330CFE4 B 0x330CF48
	0x0330CFE8 BL 0x330CF18
	0x0330CFEC LDP X20, X19, [X31 + 0x20]
	0x0330CFF0 LDP X22, X21, [X31 + 0x10]
	0x0330CFF4 SXTW X0, W0
	0x0330CFF8 LDP X30, X23, [X31], #0x30
	0x0330CFFC RET
	0x0330D000 SUB X31, X31, 0x30
	0x0330D004 STR X30, [X31 + 0x10]
	0x0330D008 STP X20, X19, [X31 + 0x20]
	0x0330D00C ADRP X20, 0x10CF000
	0x0330D010 LDRB W8, [X20 + 0xB1F]
	0x0330D014 MOV X19, X0
	0x0330D018 TBNZ X8, 0x0, 0x330D03C
	0x0330D01C ADRP X0, 0xDE8000
	0x0330D020 LDR X0, [X0 + 0xA58]
	0x0330D024 BL 0x1C16CF4
	0x0330D028 ADRP X0, 0xDE7000
	0x0330D02C LDR X0, [X0 + 0x9F0]
	0x0330D030 BL 0x1C16CF4
	0x0330D034 MOVZ W8, 0x1
	0x0330D038 STRB W8, [X20 + 0xB1F]
	0x0330D03C MOVN X8, 0xF6FF
	0x0330D040 MOVK X8, 0x886E0000
	0x0330D044 MOVK X8, 0xFFF1
	0x0330D048 CMP X19, X8
	0x0330D04C B.GE 0x330D078
	0x0330D050 ADRP X19, 0xDE7000
	0x0330D054 LDR X19, [X19 + 0x9F0]
	0x0330D058 LDR X0, [X19]
	0x0330D05C LDR W8, [X0 + 0xE0]
	0x0330D060 CBNZ W8, 0x330D06C
	0x0330D064 BL 0x1C16DFC
	0x0330D068 LDR X0, [X19]
	0x0330D06C LDR X8, [X0 + 0xB8]
	0x0330D070 LDR X0, [X8 + 0x10]
	0x0330D074 B 0x330D0E8
	0x0330D078 MOVZ X8, 0x417F
	0x0330D07C MOVK X8, 0xFFF40000
	0x0330D080 MOVK X8, 0x3A
	0x0330D084 CMP X19, X8
	0x0330D088 B.LE 0x330D0B4
	0x0330D08C ADRP X19, 0xDE7000
	0x0330D090 LDR X19, [X19 + 0x9F0]
	0x0330D094 LDR X0, [X19]
	0x0330D098 LDR W8, [X0 + 0xE0]
	0x0330D09C CBNZ W8, 0x330D0A8
	0x0330D0A0 BL 0x1C16DFC
	0x0330D0A4 LDR X0, [X19]
	0x0330D0A8 LDR X8, [X0 + 0xB8]
	0x0330D0AC LDR X0, [X8 + 0x18]
	0x0330D0B0 B 0x330D0E8
	0x0330D0B4 ADRP X8, 0xDE8000
	0x0330D0B8 LDR X8, [X8 + 0xA58]
	0x0330D0BC LDR X0, [X8]
	0x0330D0C0 LDR W8, [X0 + 0xE0]
	0x0330D0C4 CBNZ W8, 0x330D0CC
	0x0330D0C8 BL 0x1C16DFC
	0x0330D0CC MOV X0, X19
	0x0330D0D0 MOV X1, X31
	0x0330D0D4 BL 0x3364710
	0x0330D0D8 STP X0, X1, [X31]
	0x0330D0DC ADD X0, X31, 0x0
	0x0330D0E0 MOV X1, X31
	0x0330D0E4 BL 0x3364200
	0x0330D0E8 LDP X20, X19, [X31 + 0x20]
	0x0330D0EC LDR X30, [X31 + 0x10]
	0x0330D0F0 ADD X31, X31, 0x30
	0x0330D0F4 RET
	0x0330D0F8 STR X30, [X31 - 0x30]!
	0x0330D0FC STP X22, X21, [X31 + 0x10]
	0x0330D100 STP X20, X19, [X31 + 0x20]
	0x0330D104 ADRP X22, 0x10CF000
	0x0330D108 LDRB W8, [X22 + 0xB53]
	0x0330D10C MOV W21, W2
	0x0330D110 MOV X20, X1
	0x0330D114 MOV X19, X0
	0x0330D118 TBNZ X8, 0x0, 0x330D130
	0x0330D11C ADRP X0, 0xE1A000
	0x0330D120 LDR X0, [X0 + 0xA38]
	0x0330D124 BL 0x1C16CF4
	0x0330D128 MOVZ W8, 0x1
	0x0330D12C STRB W8, [X22 + 0xB53]
	0x0330D130 CBZ X20, 0x330D228
	0x0330D134 LDR W8, [X20 + 0x18]
	0x0330D138 CMP W8, 0x2B
	0x0330D13C B.LE 0x330D228
	0x0330D140 ADRP X22, 0xE1A000
	0x0330D144 LDR X22, [X22 + 0xA38]
	0x0330D148 LDR X0, [X22]
	0x0330D14C LDR W8, [X0 + 0xE0]
	0x0330D150 CBNZ W8, 0x330D158
	0x0330D154 BL 0x1C16DFC
	0x0330D158 MOV X0, X20
	0x0330D15C MOV W1, W21
	0x0330D160 BL 0x330CF18
	0x0330D164 MOVZ W8, 0x6966
	0x0330D168 MOVK W8, 0x545A0000
	0x0330D16C CMP W0, W8
	0x0330D170 STR W0, [X19]
	0x0330D174 B.NE 0x330D248
	0x0330D178 LDR W9, [X20 + 0x18]
	0x0330D17C ADD W8, W21, 0x4
	0x0330D180 CMP W8, W9
	0x0330D184 B.CS 0x330D2A0
	0x0330D188 ADD X8, X20, W8, SXTW
	0x0330D18C LDRB W8, [X8 + 0x20]
	0x0330D190 CMP W8, 0x33
	0x0330D194 CSET W9, EQ
	0x0330D198 UBFM W9, W9, 0x1F, 0x1E
	0x0330D19C CMP W8, 0x32
	0x0330D1A0 CSINC W8, W9, W31, NE
	0x0330D1A4 STRB W8, [X19 + 0x4]
	0x0330D1A8 LDR X0, [X22]
	0x0330D1AC LDR W8, [X0 + 0xE0]
	0x0330D1B0 CBNZ W8, 0x330D1B8
	0x0330D1B4 BL 0x1C16DFC
	0x0330D1B8 ADD W1, W21, 0x14
	0x0330D1BC MOV X0, X20
	0x0330D1C0 BL 0x330CF18
	0x0330D1C4 STR W0, [X19 + 0x8]
	0x0330D1C8 ADD W1, W21, 0x18

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X22, 0x10D1000
	010 Move W9, [X22+2838]
	011 Move X20, X1
	012 Move X21, X0
	013 Move X19, X8
	014 Move TEMP, X9
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xE1C000
	019 Move X0, [X0+2616]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2838], W8
	023 Move X0, X21
	024 Move X1, X31
	025 Move [X31+24], X31
	026 Move [X31+8], X31
	027 Move [X31+4], W31
	028 Call String.IsNullOrEmpty, X0
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {36}
	033 Move [X19], X31
	034 Move [X19+8], X31
	035 Move [X19+16], X31
	036 Compare X21, 0
	037 JumpIfEqual {129}
	038 Move X0, X21
	039 Move W1, W31
	040 Move X2, X31
	041 Call String.get_Chars, X0, X1
	042 And W8, W0, 0xFFFF
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X22, 0xE1C000
	045 Move X22, [X22+2616]
	046 Move X0, [X22]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Add X1, X31, 28
	052 Add X2, X31, 24
	053 Add X3, X31, 12
	054 Move X0, X21
	055 Call TimeZoneInfo.TZif_ParseMDateRule, X0, X1, X2, X3
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {130}
	060 Move X0, [X22]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X0, X20
	066 Call TimeZoneInfo.ParseTimeOfDay, X0
	067 Move W21, [X31+24]
	068 Move W20, [X31+28]
	069 Move W22, [X31+12]
	070 Move W3, 1
	071 Move X23, X0
	072 Move W1, W20
	073 Move W2, W21
	074 Move W4, W22
	075 Move W24, 1
	076 Call TransitionTime.ValidateTransitionTime, X0, X1, X2, X3, X4
	077 Move [X19], X23
	078 Move [X19+8], W20
	079 Move [X19+9], W21
	080 NotImplemented "Instruction STRH not yet implemented."
	081 Move [X19+12], W22
	082 Move [X19+16], W31
	083 Move X0, X21
	084 Move W1, W31
	085 Move X2, X31
	086 Call String.get_Chars, X0, X1
	087 And W8, W0, 0xFFFF
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X8, 0xE1B000
	090 Move X8, [X8+2616]
	091 Move X0, [X8]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Add X1, X31, 8
	097 Add X2, X31, 4
	098 Move X0, X21
	099 Call TimeZoneInfo.TZif_ParseJulianDay, X0, X1, X2
	100 Move X0, X20
	101 Call TimeZoneInfo.ParseTimeOfDay, X0
	102 Move W21, [X31+4]
	103 Move W20, [X31+8]
	104 Move W2, 1
	105 Move W4, W31
	106 Move X22, X0
	107 Move W1, W20
	108 Move W3, W21
	109 Move W23, 1
	110 Call TransitionTime.ValidateTransitionTime, X0, X1, X2, X3, X4
	111 Move [X19], X22
	112 Move [X19+8], W20
	113 Move [X19+9], W23
	114 Move [X19+10], W21
	115 Move [X19+11], W31
	116 Move [X19+12], W31
	117 Move [X19+16], W23
	118 Move [X19+17], W31
	119 Move [X19+20], W31
	120 Move X20, [X31+64]
	121 Move X19, [X31+72]
	122 Move X22, [X31+48]
	123 Move X21, [X31+56]
	124 Move X24, [X31+32]
	125 Move X23, [X31+40]
	126 Move X30, [X31+16]
	127 Add X31, X31, 80
	128 Return X0
	129 Call 0x1C17F20
	130 Move X0, 0xE1B000
	131 Move X0, [X0+2976]
	132 Call 0x1C17D08
	133 Move X1, X21
	134 Move X2, X31
	135 Call SR.Format, X0, X1
	136 Move X19, X0
	137 Move X0, 0xE1B000
	138 Move X0, [X0+2664]
	139 Call 0x1C17D08
	140 Call 0x1C17F10
	141 Move X1, X19
	142 Move X2, X31
	143 Move X20, X0
	144 Call InvalidTimeZoneException..ctor, X0, X1
	145 Move X0, 0xE1B000
	146 Move X0, [X0+2984]
	147 Call 0x1C17D08
	148 Move X1, X0
	149 Move X0, X20
	150 Call 0x1C17DEC
	151 Move X0, 0xE1B000
	152 Move X0, [X0+2664]
	153 Call 0x1C17D08
	154 Call 0x1C17F10
	155 Move X19, X0
	156 Move X0, 0xE1B000
	157 Move X0, [X0+2992]
	158 Call 0x1C17D08
	159 Move X1, X0
	160 Move X0, X19
	161 Move X2, X31
	162 Call InvalidTimeZoneException..ctor, X0, X1
	163 Move X0, 0xE1B000
	164 Move X0, [X0+2984]
	165 Call 0x1C17D08
	166 Move X1, X0
	167 Move X0, X19
	168 Call 0x1C17DEC

Method: System.Void TZif_ParseJulianDay(System.String date, out System.Int32 month, out System.Int32 day)

Disassembly:
	0x0330D684 STP X22, X21, [X31 + 0x20]
	0x0330D688 STP X20, X19, [X31 + 0x30]
	0x0330D68C ADRP X23, 0x10CF000
	0x0330D690 STR X1, [X31 + 0x8]
	0x0330D694 ADRP X22, 0xDE7000
	0x0330D698 LDRB W8, [X23 + 0xB28]
	0x0330D69C LDR X22, [X22 + 0x9F0]
	0x0330D6A0 MOV X21, X3
	0x0330D6A4 MOV W20, W2
	0x0330D6A8 MOV X19, X0
	0x0330D6AC TBNZ X8, 0x0, 0x330D6D0
	0x0330D6B0 ADRP X0, 0xDE7000
	0x0330D6B4 LDR X0, [X0 + 0x9F0]
	0x0330D6B8 BL 0x1C16CF4
	0x0330D6BC ADRP X0, 0xE1A000
	0x0330D6C0 LDR X0, [X0 + 0xA38]
	0x0330D6C4 BL 0x1C16CF4
	0x0330D6C8 MOVZ W8, 0x1
	0x0330D6CC STRB W8, [X23 + 0xB28]
	0x0330D6D0 LDR X0, [X22]
	0x0330D6D4 LDR W8, [X0 + 0xE0]
	0x0330D6D8 CBNZ W8, 0x330D6E0
	0x0330D6DC BL 0x1C16DFC
	0x0330D6E0 ADD X0, X31, 0x8
	0x0330D6E4 MOV X1, X31
	0x0330D6E8 BL 0x336139C
	0x0330D6EC CMP W0, 0x2
	0x0330D6F0 B.NE 0x330D760
	0x0330D6F4 CBZ X21, 0x330D810
	0x0330D6F8 MOV X0, X21
	0x0330D6FC MOV X1, X19
	0x0330D700 BL 0x330D960
	0x0330D704 CMP W0, 0x2
	0x0330D708 B.EQ 0x330D7A4
	0x0330D70C LDR X22, [X31 + 0x8]
	0x0330D710 LDR X23, [X21 + 0x10]
	0x0330D714 BL 0x1C16D44
	0x0330D718 CBNZ X23, 0x330D728
	0x0330D71C MOV X0, X21
	0x0330D720 BL 0x3313E58
	0x0330D724 MOV X23, X0
	0x0330D728 ADRP X21, 0xE1A000
	0x0330D72C LDR X21, [X21 + 0xA38]
	0x0330D730 LDR X0, [X21]
	0x0330D734 LDR W8, [X0 + 0xE0]
	0x0330D738 CBNZ W8, 0x330D744
	0x0330D73C BL 0x1C16DFC
	0x0330D740 LDR X0, [X21]
	0x0330D744 LDR X8, [X0 + 0xB8]
	0x0330D748 MOV X0, X22
	0x0330D74C MOV X1, X23
	0x0330D750 MOV W3, W20
	0x0330D754 LDR X2, [X8]
	0x0330D758 BL 0x330D9EC
	0x0330D75C B 0x330D7F4
	0x0330D760 LDR X0, [X22]
	0x0330D764 LDR W8, [X0 + 0xE0]
	0x0330D768 CBNZ W8, 0x330D770
	0x0330D76C BL 0x1C16DFC
	0x0330D770 ADD X0, X31, 0x8
	0x0330D774 MOV X1, X31
	0x0330D778 BL 0x336139C
	0x0330D77C CMP W0, 0x1
	0x0330D780 B.NE 0x330D7A4
	0x0330D784 CBZ X21, 0x330D810
	0x0330D788 MOV X0, X21
	0x0330D78C MOV X1, X19
	0x0330D790 BL 0x330D960
	0x0330D794 CMP W0, 0x1
	0x0330D798 B.NE 0x330D7D4
	0x0330D79C LDR X0, [X19 + 0x30]
	0x0330D7A0 B 0x330D7FC
	0x0330D7A4 ADRP X8, 0xE1A000
	0x0330D7A8 LDR X8, [X8 + 0xA38]
	0x0330D7AC LDR X21, [X31 + 0x8]
	0x0330D7B0 LDR X0, [X8]
	0x0330D7B4 LDR W8, [X0 + 0xE0]
	0x0330D7B8 CBNZ W8, 0x330D7C0
	0x0330D7BC BL 0x1C16DFC
	0x0330D7C0 MOV X0, X21
	0x0330D7C4 MOV X1, X19
	0x0330D7C8 MOV W2, W20
	0x0330D7CC BL 0x330DAE4
	0x0330D7D0 B 0x330D7FC
	0x0330D7D4 ADRP X8, 0xE1A000
	0x0330D7D8 LDR X8, [X8 + 0xA38]
	0x0330D7DC LDR X20, [X31 + 0x8]
	0x0330D7E0 LDR X0, [X8]
	0x0330D7E4 LDR W8, [X0 + 0xE0]
	0x0330D7E8 CBNZ W8, 0x330D7F0
	0x0330D7EC BL 0x1C16DFC
	0x0330D7F0 MOV X0, X20
	0x0330D7F4 MOV X1, X19
	0x0330D7F8 BL 0x330DA74
	0x0330D7FC LDP X20, X19, [X31 + 0x30]
	0x0330D800 LDP X22, X21, [X31 + 0x20]
	0x0330D804 LDP X30, X23, [X31 + 0x10]
	0x0330D808 ADD X31, X31, 0x40
	0x0330D80C RET
	0x0330D810 BL 0x1C16F20
	0x0330D814 STR X30, [X31 - 0x30]!
	0x0330D818 STP X22, X21, [X31 + 0x10]
	0x0330D81C STP X20, X19, [X31 + 0x20]
	0x0330D820 ADRP X22, 0x10CF000
	0x0330D824 ADRP X21, 0xE1A000
	0x0330D828 LDRB W8, [X22 + 0xB26]
	0x0330D82C LDR X21, [X21 + 0xA38]
	0x0330D830 MOV W19, W1
	0x0330D834 MOV X20, X0
	0x0330D838 TBNZ X8, 0x0, 0x330D850
	0x0330D83C ADRP X0, 0xE1A000
	0x0330D840 LDR X0, [X0 + 0xA38]
	0x0330D844 BL 0x1C16CF4
	0x0330D848 MOVZ W8, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x10D0000
	010 Move W8, [X22+2839]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xE1B000
	019 Move X0, [X0+3000]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2839], W8
	023 Move [X19], W31
	024 Move [X20], W31
	025 Compare X21, 0
	026 JumpIfEqual {120}
	027 Move W8, [X21+16]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move W1, 1
	030 Move X0, X21
	031 Move X2, X31
	032 Call String.get_Chars, X0, X1
	033 And W8, W0, 0xFFFF
	034 Subtract W8, W8, 48
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X24, 0xE1B000
	037 Move X24, [X24+3000]
	038 Move W23, W31
	039 Move W22, 2
	040 Move W25, 10
	041 Subtract W1, W22, 1
	042 Move X0, X21
	043 Move X2, X31
	044 Call String.get_Chars, X0, X1
	045 Move W8, [X21+16]
	046 Multiply W9, W23, W25
	047 Add W9, W9, W0
	048 Subtract W23, W9, 48
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, X21
	051 Move W1, W22
	052 Move X2, X31
	053 Call String.get_Chars, X0, X1
	054 And W8, W0, 0xFFFF
	055 Subtract W8, W8, 48
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Add W22, W22, 1
	058 Move X0, [X24]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {64}
	062 Call 0x1C17DFC
	063 Move X0, [X24]
	064 Compare W23, 0
	065 JumpIfEqual {102}
	066 Move X8, [X0+184]
	067 Move X8, [X8]
	068 Compare X8, 0
	069 JumpIfEqual {120}
	070 Move X9, [X8+24]
	071 Compare W9, 0
	072 JumpIfEqual {121}
	073 Move X10, INVALID
	074 Add X10, X10, X9
	075 Add X10, X8, X10
	076 Move W10, [X10+32]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move W10, 1
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Add X11, X8, W10
	081 Move W11, [X11+32]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Add W10, W10, 1
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move W10, W9
	086 Subtract W11, W10, 1
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move [X20], W10
	089 Add X8, X8, W11
	090 Move W8, [X8+32]
	091 Move X22, [X31+32]
	092 Move X21, [X31+40]
	093 Subtract W8, W23, W8
	094 Move [X19], W8
	095 Move X20, [X31+48]
	096 Move X19, [X31+56]
	097 Move X24, [X31+16]
	098 Move X23, [X31+24]
	099 Move X30, [X31+64]
	100 Move X25, [X31+72]
	101 Return 
	102 Move X0, 0xE1B000
	103 Move X0, [X0+2664]
	104 Call 0x1C17D08
	105 Call 0x1C17F10
	106 Move X19, X0
	107 Move X0, 0xE1B000
	108 Move X0, [X0+3008]
	109 Call 0x1C17D08
	110 Move X1, X0
	111 Move X0, X19
	112 Move X2, X31
	113 Call InvalidTimeZoneException..ctor, X0, X1
	114 Move X0, 0xE1B000
	115 Move X0, [X0+3016]
	116 Call 0x1C17D08
	117 Move X1, X0
	118 Move X0, X19
	119 Call 0x1C17DEC
	120 Call 0x1C17F20
	121 Call 0x1C17F28

Method: System.Boolean TZif_ParseMDateRule(System.String dateRule, out System.Int32 month, out System.Int32 week, out System.DayOfWeek dayOfWeek)

Disassembly:
	0x0330D420 LDR X8, [X8 + 0xB8]
	0x0330D424 LDR X0, [X8]
	0x0330D428 LDP X20, X19, [X31 + 0x10]
	0x0330D42C LDR X30, [X31], #0x20
	0x0330D430 RET
	0x0330D434 STR X30, [X31 - 0x20]!
	0x0330D438 STP X20, X19, [X31 + 0x10]
	0x0330D43C ADRP X20, 0x10CF000
	0x0330D440 LDRB W8, [X20 + 0xB22]
	0x0330D444 MOV X19, X0
	0x0330D448 TBNZ X8, 0x0, 0x330D460
	0x0330D44C ADRP X0, 0xDE8000
	0x0330D450 LDR X0, [X0 + 0x278]
	0x0330D454 BL 0x1C16CF4
	0x0330D458 MOVZ W8, 0x1
	0x0330D45C STRB W8, [X20 + 0xB22]
	0x0330D460 LDR X0, [X19 + 0x20]
	0x0330D464 CBNZ X0, 0x330D47C
	0x0330D468 ADRP X8, 0xDE8000
	0x0330D46C LDR X8, [X8 + 0x278]
	0x0330D470 LDR X8, [X8]
	0x0330D474 LDR X8, [X8 + 0xB8]
	0x0330D478 LDR X0, [X8]
	0x0330D47C LDP X20, X19, [X31 + 0x10]
	0x0330D480 LDR X30, [X31], #0x20
	0x0330D484 RET
	0x0330D488 STR X30, [X31 - 0x20]!
	0x0330D48C STP X20, X19, [X31 + 0x10]
	0x0330D490 ADRP X20, 0x10CF000
	0x0330D494 LDRB W8, [X20 + 0xB23]
	0x0330D498 MOV X19, X0
	0x0330D49C TBNZ X8, 0x0, 0x330D4B4
	0x0330D4A0 ADRP X0, 0xDE8000
	0x0330D4A4 LDR X0, [X0 + 0x278]
	0x0330D4A8 BL 0x1C16CF4
	0x0330D4AC MOVZ W8, 0x1
	0x0330D4B0 STRB W8, [X20 + 0xB23]
	0x0330D4B4 LDR X0, [X19 + 0x28]
	0x0330D4B8 CBNZ X0, 0x330D4D0
	0x0330D4BC ADRP X8, 0xDE8000
	0x0330D4C0 LDR X8, [X8 + 0x278]
	0x0330D4C4 LDR X8, [X8]
	0x0330D4C8 LDR X8, [X8 + 0xB8]
	0x0330D4CC LDR X0, [X8]
	0x0330D4D0 LDP X20, X19, [X31 + 0x10]
	0x0330D4D4 LDR X30, [X31], #0x20
	0x0330D4D8 RET
	0x0330D4DC LDR X0, [X0 + 0x30]
	0x0330D4E0 RET
	0x0330D4E4 STR X30, [X31 - 0x30]!
	0x0330D4E8 STP X22, X21, [X31 + 0x10]
	0x0330D4EC STP X20, X19, [X31 + 0x20]
	0x0330D4F0 ADRP X22, 0x10CF000
	0x0330D4F4 LDRB W8, [X22 + 0xB24]
	0x0330D4F8 MOV X21, X2
	0x0330D4FC MOV X19, X1
	0x0330D500 MOV X20, X0
	0x0330D504 STR X2, [X31 + 0x8]
	0x0330D508 TBNZ X8, 0x0, 0x330D52C
	0x0330D50C ADRP X0, 0xDE9000
	0x0330D510 LDR X0, [X0 + 0xEF8]
	0x0330D514 BL 0x1C16CF4
	0x0330D518 ADRP X0, 0xDE9000
	0x0330D51C LDR X0, [X0 + 0xF00]
	0x0330D520 BL 0x1C16CF4
	0x0330D524 MOVZ W8, 0x1
	0x0330D528 STRB W8, [X22 + 0xB24]
	0x0330D52C ANDS W31, W21, 0xFF
	0x0330D530 B.EQ 0x330D594
	0x0330D534 ADRP X21, 0xDE9000
	0x0330D538 LDR X21, [X21 + 0xF00]
	0x0330D53C ADD X0, X31, 0x8
	0x0330D540 LDR X1, [X21]
	0x0330D544 BL 0x2434214
	0x0330D548 CMP W0, 0x1
	0x0330D54C B.LT 0x330D594
	0x0330D550 LDR X1, [X21]
	0x0330D554 ADD X0, X31, 0x8
	0x0330D558 BL 0x2434214
	0x0330D55C LDR X22, [X20 + 0x40]
	0x0330D560 CBZ X22, 0x330D604
	0x0330D564 LDR W8, [X22 + 0x18]
	0x0330D568 CMP W0, W8
	0x0330D56C B.GE 0x330D594
	0x0330D570 LDR X1, [X21]
	0x0330D574 ADD X0, X31, 0x8
	0x0330D578 BL 0x2434214
	0x0330D57C LDR W9, [X22 + 0x18]
	0x0330D580 SUB W8, W0, 0x1
	0x0330D584 CMP W8, W9
	0x0330D588 B.CS 0x330D600
	0x0330D58C ADD X8, X22, W8, 0x3, SXTW
	0x0330D590 B 0x330D5E8
	0x0330D594 LDR X8, [X20 + 0x40]
	0x0330D598 CBZ X8, 0x330D604
	0x0330D59C LDR X9, [X8 + 0x18]
	0x0330D5A0 CMP W9, 0x2
	0x0330D5A4 B.LT 0x330D5EC
	0x0330D5A8 MOV X10, X31
	0x0330D5AC ADD X11, X10, 0x1
	0x0330D5B0 CMP W11, W9
	0x0330D5B4 B.CS 0x330D600
	0x0330D5B8 ADD X11, X8, W11, 0x3, SXTW
	0x0330D5BC LDR X11, [X11 + 0x20]
	0x0330D5C0 CMP X11, X19
	0x0330D5C4 B.EQ 0x330D5DC
	0x0330D5C8 ADD X10, X10, 0x1
	0x0330D5CC ADD W11, W10, 0x1
	0x0330D5D0 CMP W11, W9
	0x0330D5D4 B.LT 0x330D5AC
	0x0330D5D8 B 0x330D5EC
	0x0330D5DC CMP W10, W9
	0x0330D5E0 B.CS 0x330D600
	0x0330D5E4 ADD X8, X8, X10, 0x3, LSL
	0x0330D5E8 LDR X19, [X8 + 0x20]
	0x0330D5EC MOV X0, X19
	0x0330D5F0 LDP X20, X19, [X31 + 0x20]
	0x0330D5F4 LDP X22, X21, [X31 + 0x10]
	0x0330D5F8 LDR X30, [X31], #0x30
	0x0330D5FC RET
	0x0330D600 BL 0x1C16F28
	0x0330D604 BL 0x1C16F20
	0x0330D608 STR X30, [X31 - 0x30]!
	0x0330D60C STP X22, X21, [X31 + 0x10]
	0x0330D610 STP X20, X19, [X31 + 0x20]
	0x0330D614 ADRP X22, 0x10CF000
	0x0330D618 ADRP X21, 0xE1A000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move [X31+12], W31
	013 Compare X0, 0
	014 JumpIfEqual {143}
	015 Move X20, X2
	016 Move X21, X1
	017 Move W1, W31
	018 Move X2, X31
	019 Move X19, X3
	020 Move X22, X0
	021 Call String.get_Chars, X0, X1
	022 And W8, W0, 0xFFFF
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W1, 46
	025 Move X0, X22
	026 Move X2, X31
	027 Call String.IndexOf, X0, X1
	028 Subtract W27, W0, 1
	029 Add W24, W0, 1
	030 Move W25, W0
	031 Move W1, 46
	032 Move X0, X22
	033 Move W2, W24
	034 Move X3, X31
	035 Call String.IndexOf, X0, X1, X2
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X26, 0x10CD000
	038 Move W8, [X26+1889]
	039 Move W23, W0
	040 Compare W8, 0
	041 JumpIfNotEqual {47}
	042 Move X0, 0xE0E000
	043 Move X0, [X0+656]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X26+1889], W8
	047 Move W8, [X22+16]
	048 Compare W8, 0
	049 JumpIfEqual {52}
	050 Subtract W8, W8, 1
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W0, 24
	053 Move X1, X31
	054 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0
	055 Move X0, X22
	056 Move X1, X31
	057 Call String.GetRawStringData, X0
	058 Add X0, X0, 2
	059 Move W1, W27
	060 Move X2, X21
	061 Move X3, X31
	062 Call Int32.TryParse, X0, X1
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {126}
	067 Move W8, [X26+1889]
	068 NotImplemented "Instruction ORN not yet implemented."
	069 Compare W8, 0
	070 JumpIfNotEqual {76}
	071 Move X0, 0xE0E000
	072 Move X0, [X0+656]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X26+1889], W8
	076 Move W8, [X22+16]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Add W25, W23, W27
	079 Subtract W8, W8, W24
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move W0, 24
	082 Move X1, X31
	083 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0
	084 Move X0, X22
	085 Move X1, X31
	086 Call String.GetRawStringData, X0
	087 Add X0, X0, W24
	088 Move W1, W25
	089 Move X2, X20
	090 Move X3, X31
	091 Call Int32.TryParse, X0, X1
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {126}
	096 Move X24, 0x10D0000
	097 Move W8, [X24+940]
	098 Compare W8, 0
	099 JumpIfNotEqual {105}
	100 Move X0, 0xE0E000
	101 Move X0, [X0+656]
	102 Call 0x1C17CF4
	103 Move W8, 1
	104 Move [X24+940], W8
	105 Move W8, [X22+16]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Add W23, W23, 1
	108 Move W0, 24
	109 Move X1, X31
	110 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0
	111 Move X0, X22
	112 Move X1, X31
	113 Call String.GetRawStringData, X0
	114 Move W8, [X22+16]
	115 Add X0, X0, W23
	116 Add X2, X31, 12
	117 Move X3, X31
	118 Subtract W1, W8, W23
	119 Call Int32.TryParse, X0, X1
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {126}
	124 Move W8, [X31+12]
	125 Move W0, 1
	126 Move W8, W31
	127 Move W0, W31
	128 Move [X21], W31
	129 Move [X20], W31
	130 Move [X19], W8
	131 Move X20, [X31+80]
	132 Move X19, [X31+88]
	133 Move X22, [X31+64]
	134 Move X21, [X31+72]
	135 Move X24, [X31+48]
	136 Move X23, [X31+56]
	137 Move X26, [X31+32]
	138 Move X25, [X31+40]
	139 Move X30, [X31+16]
	140 Move X27, [X31+24]
	141 Add X31, X31, 96
	142 Return X0
	143 Call 0x1C17F20

Method: System.Boolean TZif_ParsePosixFormat(System.String posixFormat, out System.String standardName, out System.String standardOffset, out System.String daylightSavingsName, out System.String daylightSavingsOffset, out System.String start, out System.String startTime, out System.String end, out System.String endTime)

Disassembly:
	0x0330CB64 CBNZ W8, 0x330CB6C
	0x0330CB68 BL 0x1C16DFC
	0x0330CB6C MOV X0, X20
	0x0330CB70 MOV X1, X19
	0x0330CB74 MOV X2, X21
	0x0330CB78 LDP X20, X19, [X31 + 0x30]
	0x0330CB7C LDP X22, X21, [X31 + 0x20]
	0x0330CB80 LDP X24, X23, [X31 + 0x10]
	0x0330CB84 LDR X30, [X31], #0x40
	0x0330CB88 B 0x330CC68
	0x0330CB8C STR X30, [X31 - 0x40]!
	0x0330CB90 STP X24, X23, [X31 + 0x10]
	0x0330CB94 STP X22, X21, [X31 + 0x20]
	0x0330CB98 STP X20, X19, [X31 + 0x30]
	0x0330CB9C ADRP X24, 0x10D0000
	0x0330CBA0 ADRP X23, 0xE1B000
	0x0330CBA4 LDRB W8, [X24 + 0xB1B]
	0x0330CBA8 LDR X23, [X23 + 0xA38]
	0x0330CBAC MOV X19, X3
	0x0330CBB0 MOV X22, X2
	0x0330CBB4 MOV X20, X1
	0x0330CBB8 MOV X21, X0
	0x0330CBBC TBNZ X8, 0x0, 0x330CBD4
	0x0330CBC0 ADRP X0, 0xE1B000
	0x0330CBC4 LDR X0, [X0 + 0xA38]
	0x0330CBC8 BL 0x1C16CF4
	0x0330CBCC MOVZ W8, 0x1
	0x0330CBD0 STRB W8, [X24 + 0xB1B]
	0x0330CBD4 STR X31, [X19]
	0x0330CBD8 LDR X0, [X23]
	0x0330CBDC LDR W8, [X0 + 0xE0]
	0x0330CBE0 CBNZ W8, 0x330CBE8
	0x0330CBE4 BL 0x1C16DFC
	0x0330CBE8 MOV X0, X21
	0x0330CBEC MOV X1, X20
	0x0330CBF0 BL 0x330CD00
	0x0330CBF4 STR X0, [X22]
	0x0330CBF8 CBZ X21, 0x330CC64
	0x0330CBFC LDR W1, [X20]
	0x0330CC00 LDR W8, [X21 + 0x10]
	0x0330CC04 CMP W1, W8
	0x0330CC08 B.GE 0x330CC50
	0x0330CC0C MOV X0, X21
	0x0330CC10 MOV X2, X31
	0x0330CC14 BL 0x3222A1C
	0x0330CC18 AND W8, W0, 0xFFFF
	0x0330CC1C CMP W8, 0x2F
	0x0330CC20 B.NE 0x330CC50
	0x0330CC24 LDR W8, [X20]
	0x0330CC28 ADD W8, W8, 0x1
	0x0330CC2C STR W8, [X20]
	0x0330CC30 LDR X0, [X23]
	0x0330CC34 LDR W8, [X0 + 0xE0]
	0x0330CC38 CBNZ W8, 0x330CC40
	0x0330CC3C BL 0x1C16DFC
	0x0330CC40 MOV X0, X21
	0x0330CC44 MOV X1, X20
	0x0330CC48 BL 0x330CE0C
	0x0330CC4C STR X0, [X19]
	0x0330CC50 LDP X20, X19, [X31 + 0x30]
	0x0330CC54 LDP X22, X21, [X31 + 0x20]
	0x0330CC58 LDP X24, X23, [X31 + 0x10]
	0x0330CC5C LDR X30, [X31], #0x40
	0x0330CC60 RET
	0x0330CC64 BL 0x1C16F20
	0x0330CC68 STR X30, [X31 - 0x30]!
	0x0330CC6C STP X22, X21, [X31 + 0x10]
	0x0330CC70 STP X20, X19, [X31 + 0x20]
	0x0330CC74 CBZ X0, 0x330CCFC
	0x0330CC78 LDR W20, [X1]
	0x0330CC7C LDR W8, [X0 + 0x10]
	0x0330CC80 MOV X22, X1
	0x0330CC84 MOV X19, X0
	0x0330CC88 MOV W1, W20
	0x0330CC8C CMP W20, W8
	0x0330CC90 B.GE 0x330CCDC
	0x0330CC94 MOV X21, X2
	0x0330CC98 MOV W1, W20
	0x0330CC9C MOV X0, X19
	0x0330CCA0 MOV X2, X31
	0x0330CCA4 BL 0x3222A1C
	0x0330CCA8 CBZ X21, 0x330CCFC
	0x0330CCAC MOV W1, W0
	0x0330CCB0 LDR X8, [X21 + 0x18]
	0x0330CCB4 LDR X0, [X21 + 0x40]
	0x0330CCB8 LDR X2, [X21 + 0x28]
	0x0330CCBC BLR X8
	0x0330CCC0 LDR W1, [X22]
	0x0330CCC4 TBNZ X0, 0x0, 0x330CCDC
	0x0330CCC8 ADD W1, W1, 0x1
	0x0330CCCC STR W1, [X22]
	0x0330CCD0 LDR W8, [X19 + 0x10]
	0x0330CCD4 CMP W1, W8
	0x0330CCD8 B.LT 0x330CC9C
	0x0330CCDC SUB W2, W1, W20
	0x0330CCE0 MOV X0, X19
	0x0330CCE4 MOV W1, W20
	0x0330CCE8 LDP X20, X19, [X31 + 0x20]
	0x0330CCEC LDP X22, X21, [X31 + 0x10]
	0x0330CCF0 MOV X3, X31
	0x0330CCF4 LDR X30, [X31], #0x30
	0x0330CCF8 B 0x3228DE4
	0x0330CCFC BL 0x1C16F20
	0x0330CD00 STR X30, [X31 - 0x40]!
	0x0330CD04 STP X24, X23, [X31 + 0x10]
	0x0330CD08 STP X22, X21, [X31 + 0x20]
	0x0330CD0C STP X20, X19, [X31 + 0x30]
	0x0330CD10 ADRP X21, 0x10D0000
	0x0330CD14 ADRP X23, 0xE1B000
	0x0330CD18 LDRB W8, [X21 + 0xB1C]
	0x0330CD1C LDR X23, [X23 + 0xB38]
	0x0330CD20 MOV X19, X1
	0x0330CD24 MOV X20, X0
	0x0330CD28 TBNZ X8, 0x0, 0x330CD64
	0x0330CD2C ADRP X0, 0xE11000
	0x0330CD30 LDR X0, [X0 + 0x648]
	0x0330CD34 BL 0x1C16CF4
	0x0330CD38 ADRP X0, 0xE1B000
	0x0330CD3C LDR X0, [X0 + 0xA38]
	0x0330CD40 BL 0x1C16CF4
	0x0330CD44 ADRP X0, 0xE1B000
	0x0330CD48 LDR X0, [X0 + 0xBE8]
	0x0330CD4C BL 0x1C16CF4
	0x0330CD50 ADRP X0, 0xE1B000
	0x0330CD54 LDR X0, [X0 + 0xB38]
	0x0330CD58 BL 0x1C16CF4
	0x0330CD5C MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X29, 0x10D1000
	015 Move X28, 0xE1C000
	016 Move W8, [X29+2840]
	017 Move X23, [X31+112]
	018 Move X28, [X28+2616]
	019 Move X20, X7
	020 Move X24, X6
	021 Move X25, X5
	022 Move X26, X4
	023 Move X27, X3
	024 Move X19, X2
	025 Move X21, X1
	026 Move X22, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {36}
	031 Move X0, 0xE1C000
	032 Move X0, [X0+2616]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X29+2840], W8
	036 Move [X21], X31
	037 Move [X19], X31
	038 Move [X27], X31
	039 Move [X26], X31
	040 Move [X25], X31
	041 Move [X24], X31
	042 Move [X20], X31
	043 Move [X23], X31
	044 Move X0, [X28]
	045 Move [X31+12], W31
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Add X1, X31, 12
	051 Move X0, X22
	052 Call TimeZoneInfo.TZif_ParsePosixName, X0, X1
	053 Move [X21], X0
	054 Add X1, X31, 12
	055 Move X0, X22
	056 Call TimeZoneInfo.TZif_ParsePosixOffset, X0, X1
	057 Move [X19], X0
	058 Add X1, X31, 12
	059 Move X0, X22
	060 Call TimeZoneInfo.TZif_ParsePosixName, X0, X1
	061 Move X1, X31
	062 Move [X27], X0
	063 Call String.IsNullOrEmpty, X0
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {121}
	068 Move X0, [X28]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Add X1, X31, 12
	074 Move X0, X22
	075 Call TimeZoneInfo.TZif_ParsePosixOffset, X0, X1
	076 Move [X26], X0
	077 Compare X22, 0
	078 JumpIfEqual {148}
	079 Move W26, [X31+12]
	080 Move W8, [X22+16]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X0, X22
	083 Move W1, W26
	084 Move X2, X31
	085 Call String.get_Chars, X0, X1
	086 And W8, W0, 0xFFFF
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, [X28]
	089 Add W8, W26, 1
	090 Move [X31+12], W8
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Add X1, X31, 12
	096 Move X0, X22
	097 Move X2, X25
	098 Move X3, X24
	099 Call TimeZoneInfo.TZif_ParsePosixDateTime, X0, X1, X2, X3
	100 Move W24, [X31+12]
	101 Move W8, [X22+16]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X0, X22
	104 Move W1, W24
	105 Move X2, X31
	106 Call String.get_Chars, X0, X1
	107 And W8, W0, 0xFFFF
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X0, [X28]
	110 Add W8, W24, 1
	111 Move [X31+12], W8
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Add X1, X31, 12
	117 Move X0, X22
	118 Move X2, X20
	119 Move X3, X23
	120 Call TimeZoneInfo.TZif_ParsePosixDateTime, X0, X1, X2, X3
	121 Move X0, [X21]
	122 Move X1, X31
	123 Call String.IsNullOrEmpty, X0
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {129}
	128 Move W8, W31
	129 Move X0, [X19]
	130 Move X1, X31
	131 Call String.IsNullOrEmpty, X0
	132 Xor W8, W0, 1
	133 Move X20, [X31+96]
	134 Move X19, [X31+104]
	135 Move X22, [X31+80]
	136 Move X21, [X31+88]
	137 Move X24, [X31+64]
	138 Move X23, [X31+72]
	139 Move X26, [X31+48]
	140 Move X25, [X31+56]
	141 Move X28, [X31+32]
	142 Move X27, [X31+40]
	143 Move X29, [X31+16]
	144 Move X30, [X31+24]
	145 And W0, W8, 1
	146 Add X31, X31, 112
	147 Return X0
	148 Call 0x1C17F20

Method: System.String TZif_ParsePosixName(System.String posixFormat, ref System.Int32 index)

Disassembly:
	0x0330D84C STRB W8, [X22 + 0xB26]
	0x0330D850 LDR X0, [X21]
	0x0330D854 LDR W8, [X0 + 0xE0]
	0x0330D858 CBNZ W8, 0x330D864
	0x0330D85C BL 0x1C16DFC
	0x0330D860 LDR X0, [X21]
	0x0330D864 LDR X8, [X0 + 0xB8]
	0x0330D868 LDR X21, [X8 + 0x8]
	0x0330D86C CBZ X21, 0x330D8AC
	0x0330D870 LDR X22, [X21 + 0x10]
	0x0330D874 BL 0x1C16D44
	0x0330D878 CBNZ X22, 0x330D88C
	0x0330D87C MOV X0, X21
	0x0330D880 BL 0x3313E58
	0x0330D884 MOV X22, X0
	0x0330D888 CBZ X0, 0x330D8AC
	0x0330D88C MOV X0, X22
	0x0330D890 MOV X1, X20
	0x0330D894 MOV W2, W19
	0x0330D898 MOV X3, X21
	0x0330D89C LDP X20, X19, [X31 + 0x20]
	0x0330D8A0 LDP X22, X21, [X31 + 0x10]
	0x0330D8A4 LDR X30, [X31], #0x30
	0x0330D8A8 B 0x330D67C
	0x0330D8AC BL 0x1C16F20
	0x0330D8B0 STR X30, [X31 - 0x20]!
	0x0330D8B4 STP X20, X19, [X31 + 0x10]
	0x0330D8B8 LDR X20, [X0 + 0x10]
	0x0330D8BC MOV X19, X0
	0x0330D8C0 BL 0x1C16D44
	0x0330D8C4 CBZ X20, 0x330D8D8
	0x0330D8C8 MOV X0, X20
	0x0330D8CC LDP X20, X19, [X31 + 0x10]
	0x0330D8D0 LDR X30, [X31], #0x20
	0x0330D8D4 RET
	0x0330D8D8 MOV X0, X19
	0x0330D8DC LDP X20, X19, [X31 + 0x10]
	0x0330D8E0 LDR X30, [X31], #0x20
	0x0330D8E4 B 0x3313E58
	0x0330D8E8 STP X30, X23, [X31 - 0x30]!
	0x0330D8EC STP X22, X21, [X31 + 0x10]
	0x0330D8F0 STP X20, X19, [X31 + 0x20]
	0x0330D8F4 ADRP X23, 0x10CF000
	0x0330D8F8 ADRP X22, 0xE1A000
	0x0330D8FC LDRB W8, [X23 + 0xB27]
	0x0330D900 LDR X22, [X22 + 0xA38]
	0x0330D904 MOV W19, W2
	0x0330D908 MOV X20, X1
	0x0330D90C MOV X21, X0
	0x0330D910 TBNZ X8, 0x0, 0x330D928
	0x0330D914 ADRP X0, 0xE1A000
	0x0330D918 LDR X0, [X0 + 0xA38]
	0x0330D91C BL 0x1C16CF4
	0x0330D920 MOVZ W8, 0x1
	0x0330D924 STRB W8, [X23 + 0xB27]
	0x0330D928 LDR X0, [X22]
	0x0330D92C LDR W8, [X0 + 0xE0]
	0x0330D930 CBNZ W8, 0x330D93C
	0x0330D934 BL 0x1C16DFC
	0x0330D938 LDR X0, [X22]
	0x0330D93C LDR X8, [X0 + 0xB8]
	0x0330D940 MOV X0, X21
	0x0330D944 MOV X1, X20
	0x0330D948 MOV W2, W19
	0x0330D94C LDR X3, [X8 + 0x8]
	0x0330D950 LDP X20, X19, [X31 + 0x20]
	0x0330D954 LDP X22, X21, [X31 + 0x10]
	0x0330D958 LDP X30, X23, [X31], #0x30
	0x0330D95C B 0x330D67C
	0x0330D960 STR X30, [X31 - 0x30]!
	0x0330D964 STP X22, X21, [X31 + 0x10]
	0x0330D968 STP X20, X19, [X31 + 0x20]
	0x0330D96C ADRP X22, 0x10CF000
	0x0330D970 ADRP X21, 0xE1A000
	0x0330D974 LDRB W8, [X22 + 0xB65]
	0x0330D978 LDR X21, [X21 + 0xA38]
	0x0330D97C MOV X19, X1
	0x0330D980 MOV X20, X0
	0x0330D984 TBNZ X8, 0x0, 0x330D99C
	0x0330D988 ADRP X0, 0xE1A000
	0x0330D98C LDR X0, [X0 + 0xA38]
	0x0330D990 BL 0x1C16CF4
	0x0330D994 MOVZ W8, 0x1
	0x0330D998 STRB W8, [X22 + 0xB65]
	0x0330D99C LDR X0, [X21]
	0x0330D9A0 LDR W8, [X0 + 0xE0]
	0x0330D9A4 CBNZ W8, 0x330D9B0
	0x0330D9A8 BL 0x1C16DFC
	0x0330D9AC LDR X0, [X21]
	0x0330D9B0 LDR X8, [X0 + 0xB8]
	0x0330D9B4 LDR X8, [X8]
	0x0330D9B8 CMP X19, X8
	0x0330D9BC B.EQ 0x330D9D8
	0x0330D9C0 LDR X8, [X20 + 0x10]
	0x0330D9C4 CMP X19, X8
	0x0330D9C8 CSET W19, EQ
	0x0330D9CC BL 0x1C16D44
	0x0330D9D0 UBFM W0, W19, 0x1F, 0x1E
	0x0330D9D4 B 0x330D9DC
	0x0330D9D8 MOVZ W0, 0x1
	0x0330D9DC LDP X20, X19, [X31 + 0x20]
	0x0330D9E0 LDP X22, X21, [X31 + 0x10]
	0x0330D9E4 LDR X30, [X31], #0x30
	0x0330D9E8 RET
	0x0330D9EC STR X30, [X31 - 0x40]!
	0x0330D9F0 STP X24, X23, [X31 + 0x10]
	0x0330D9F4 STP X22, X21, [X31 + 0x20]
	0x0330D9F8 STP X20, X19, [X31 + 0x30]
	0x0330D9FC ADRP X24, 0x10CF000
	0x0330DA00 ADRP X23, 0xE1A000
	0x0330DA04 LDRB W8, [X24 + 0xB29]
	0x0330DA08 LDR X23, [X23 + 0xA38]
	0x0330DA0C MOV W19, W3
	0x0330DA10 MOV X20, X2
	0x0330DA14 MOV X21, X1
	0x0330DA18 MOV X22, X0
	0x0330DA1C TBNZ X8, 0x0, 0x330DA34
	0x0330DA20 ADRP X0, 0xE1A000
	0x0330DA24 LDR X0, [X0 + 0xA38]
	0x0330DA28 BL 0x1C16CF4
	0x0330DA2C MOVZ W8, 0x1
	0x0330DA30 STRB W8, [X24 + 0xB29]
	0x0330DA34 LDR X0, [X23]
	0x0330DA38 LDR W8, [X0 + 0xE0]
	0x0330DA3C CBNZ W8, 0x330DA48
	0x0330DA40 BL 0x1C16DFC
	0x0330DA44 LDR X0, [X23]
	0x0330DA48 LDR X8, [X0 + 0xB8]
	0x0330DA4C MOV X0, X22
	0x0330DA50 MOV X1, X21
	0x0330DA54 MOV X2, X20
	0x0330DA58 LDR X4, [X8 + 0x8]
	0x0330DA5C MOV W3, W19
	0x0330DA60 LDP X20, X19, [X31 + 0x30]
	0x0330DA64 LDP X22, X21, [X31 + 0x20]
	0x0330DA68 LDP X24, X23, [X31 + 0x10]
	0x0330DA6C LDR X30, [X31], #0x40
	0x0330DA70 B 0x330DC94
	0x0330DA74 STR X30, [X31 - 0x30]!
	0x0330DA78 STP X22, X21, [X31 + 0x10]
	0x0330DA7C STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x10D0000
	009 Move W8, [X21+2841]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0xE11000
	017 Move X0, [X0+1608]
	018 Call 0x1C17CF4
	019 Move X0, 0xE1B000
	020 Move X0, [X0+2616]
	021 Call 0x1C17CF4
	022 Move X0, 0xE1B000
	023 Move X0, [X0+3024]
	024 Call 0x1C17CF4
	025 Move X0, 0xE1B000
	026 Move X0, [X0+3032]
	027 Call 0x1C17CF4
	028 Move X0, 0xE1B000
	029 Move X0, [X0+2872]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+2841], W8
	033 Compare X20, 0
	034 JumpIfEqual {159}
	035 Move W1, [X19]
	036 Move W8, [X20+16]
	037 Move X24, 0xE1B000
	038 Move X23, 0xE1B000
	039 Move X24, [X24+2872]
	040 Move X23, [X23+2616]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X0, X20
	043 Move X2, X31
	044 Call String.get_Chars, X0, X1
	045 And W8, W0, 0xFFFF
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W8, [X19]
	048 Add W8, W8, 1
	049 Move [X19], W8
	050 Move X0, [X24]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Move X8, [X0+184]
	057 Move X21, [X8+8]
	058 Compare X21, 0
	059 JumpIfNotEqual {81}
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X24]
	065 Move X9, 0xE11000
	066 Move X8, [X0+184]
	067 Move X9, [X9+1608]
	068 Move X22, [X8]
	069 Move X0, [X9]
	070 Call 0x1C17F10
	071 Move X8, 0xE1B000
	072 Move X8, [X8+3032]
	073 Move X1, X22
	074 Move X3, X31
	075 Move X21, X0
	076 Move X2, [X8]
	077 Call Func`2<Char, Boolean>..ctor, X0, X1, X2
	078 Move X8, [X24]
	079 Move X8, [X8+184]
	080 Move [X8+8], X21
	081 Move X0, [X23]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X0, X20
	087 Move X1, X19
	088 Move X2, X21
	089 Call TimeZoneInfo.TZif_ParsePosixString, X0, X1, X2
	090 Move W1, [X19]
	091 Move W8, [X20+16]
	092 Move X21, X0
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X0, X20
	095 Move X2, X31
	096 Call String.get_Chars, X0, X1
	097 And W8, W0, 0xFFFF
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move W8, [X19]
	100 Add W8, W8, 1
	101 Move [X19], W8
	102 Move X0, X21
	103 Move X20, [X31+48]
	104 Move X19, [X31+56]
	105 Move X22, [X31+32]
	106 Move X21, [X31+40]
	107 Move X24, [X31+16]
	108 Move X23, [X31+24]
	109 Move X30, [X31+64]
	110 Return X0
	111 Move X0, [X24]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {117}
	115 Call 0x1C17DFC
	116 Move X0, [X24]
	117 Move X8, [X0+184]
	118 Move X21, [X8+16]
	119 Compare X21, 0
	120 JumpIfNotEqual {142}
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {126}
	124 Call 0x1C17DFC
	125 Move X0, [X24]
	126 Move X9, 0xE11000
	127 Move X8, [X0+184]
	128 Move X9, [X9+1608]
	129 Move X22, [X8]
	130 Move X0, [X9]
	131 Call 0x1C17F10
	132 Move X8, 0xE1B000
	133 Move X8, [X8+3024]
	134 Move X1, X22
	135 Move X3, X31
	136 Move X21, X0
	137 Move X2, [X8]
	138 Call Func`2<Char, Boolean>..ctor, X0, X1, X2
	139 Move X8, [X24]
	140 Move X8, [X8+184]
	141 Move [X8+16], X21
	142 Move X0, [X23]
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {147}
	146 Call 0x1C17DFC
	147 Move X0, X20
	148 Move X1, X19
	149 Move X2, X21
	150 Move X20, [X31+48]
	151 Move X19, [X31+56]
	152 Move X22, [X31+32]
	153 Move X21, [X31+40]
	154 Move X24, [X31+16]
	155 Move X23, [X31+24]
	156 Move X30, [X31+64]
	157 Call TimeZoneInfo.TZif_ParsePosixString, X0, X1, X2
	158 Return X0
	159 Call 0x1C17F20

Method: System.String TZif_ParsePosixOffset(System.String posixFormat, ref System.Int32 index)

Disassembly:
	0x0330DA80 ADRP X22, 0x10CF000
	0x0330DA84 ADRP X21, 0xE1A000
	0x0330DA88 LDRB W8, [X22 + 0xB44]
	0x0330DA8C LDR X21, [X21 + 0xA38]
	0x0330DA90 MOV X19, X1
	0x0330DA94 MOV X20, X0
	0x0330DA98 TBNZ X8, 0x0, 0x330DAB0
	0x0330DA9C ADRP X0, 0xE1A000
	0x0330DAA0 LDR X0, [X0 + 0xA38]
	0x0330DAA4 BL 0x1C16CF4
	0x0330DAA8 MOVZ W8, 0x1
	0x0330DAAC STRB W8, [X22 + 0xB44]
	0x0330DAB0 LDR X0, [X21]
	0x0330DAB4 STRB W31, [X31 + 0xC]
	0x0330DAB8 LDR W8, [X0 + 0xE0]
	0x0330DABC CBNZ W8, 0x330DAC4
	0x0330DAC0 BL 0x1C16DFC
	0x0330DAC4 ADD X2, X31, 0xC
	0x0330DAC8 MOV X0, X20
	0x0330DACC MOV X1, X19
	0x0330DAD0 BL 0x3310304
	0x0330DAD4 LDP X20, X19, [X31 + 0x20]
	0x0330DAD8 LDP X22, X21, [X31 + 0x10]
	0x0330DADC LDR X30, [X31], #0x30
	0x0330DAE0 RET
	0x0330DAE4 SUB X31, X31, 0xA0
	0x0330DAE8 STP X30, X23, [X31 + 0x70]
	0x0330DAEC STP X22, X21, [X31 + 0x80]
	0x0330DAF0 STP X20, X19, [X31 + 0x90]
	0x0330DAF4 ADRP X19, 0x10CF000
	0x0330DAF8 LDRB W8, [X19 + 0xB43]
	0x0330DAFC MOV X21, X1
	0x0330DB00 MOV X20, X0
	0x0330DB04 STR X0, [X31 + 0x68]
	0x0330DB08 TBNZ X8, 0x0, 0x330DB38
	0x0330DB0C ADRP X0, 0xDE7000
	0x0330DB10 LDR X0, [X0 + 0x9F0]
	0x0330DB14 BL 0x1C16CF4
	0x0330DB18 ADRP X0, 0xDE8000
	0x0330DB1C LDR X0, [X0 + 0x570]
	0x0330DB20 BL 0x1C16CF4
	0x0330DB24 ADRP X0, 0xE1A000
	0x0330DB28 LDR X0, [X0 + 0xA38]
	0x0330DB2C BL 0x1C16CF4
	0x0330DB30 MOVZ W8, 0x1
	0x0330DB34 STRB W8, [X19 + 0xB43]
	0x0330DB38 STR X31, [X31 + 0x60]
	0x0330DB3C CBZ X21, 0x330DC90
	0x0330DB40 LDR X19, [X21 + 0x30]
	0x0330DB44 ADD X3, X31, 0x60
	0x0330DB48 MOV X0, X21
	0x0330DB4C MOV X1, X20
	0x0330DB50 MOV W2, W31
	0x0330DB54 BL 0x330FDF4
	0x0330DB58 CBZ X0, 0x330DC78
	0x0330DB5C ADRP X23, 0xDE8000
	0x0330DB60 LDR X23, [X23 + 0x570]
	0x0330DB64 MOV X20, X0
	0x0330DB68 LDR X22, [X20 + 0x58]
	0x0330DB6C LDR X0, [X23]
	0x0330DB70 LDR W8, [X0 + 0xE0]
	0x0330DB74 CBNZ W8, 0x330DB7C
	0x0330DB78 BL 0x1C16DFC
	0x0330DB7C MOV X0, X19
	0x0330DB80 MOV X1, X22
	0x0330DB84 MOV X2, X31
	0x0330DB88 BL 0x3394C70

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x10D0000
	009 Move X23, 0xE1B000
	010 Move W8, [X21+2842]
	011 Move X23, [X23+2872]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0xE11000
	019 Move X0, [X0+1608]
	020 Call 0x1C17CF4
	021 Move X0, 0xE1B000
	022 Move X0, [X0+2616]
	023 Call 0x1C17CF4
	024 Move X0, 0xE1B000
	025 Move X0, [X0+3040]
	026 Call 0x1C17CF4
	027 Move X0, 0xE1B000
	028 Move X0, [X0+2872]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2842], W8
	032 Move X0, [X23]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X23]
	038 Move X8, [X0+184]
	039 Move X24, 0xE1B000
	040 Move X21, [X8+24]
	041 Move X24, [X24+2616]
	042 Compare X21, 0
	043 JumpIfNotEqual {65}
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Call 0x1C17DFC
	048 Move X0, [X23]
	049 Move X9, 0xE11000
	050 Move X8, [X0+184]
	051 Move X9, [X9+1608]
	052 Move X22, [X8]
	053 Move X0, [X9]
	054 Call 0x1C17F10
	055 Move X8, 0xE1B000
	056 Move X8, [X8+3040]
	057 Move X1, X22
	058 Move X3, X31
	059 Move X21, X0
	060 Move X2, [X8]
	061 Call Func`2<Char, Boolean>..ctor, X0, X1, X2
	062 Move X8, [X23]
	063 Move X8, [X8+184]
	064 Move [X8+24], X21
	065 Move X0, [X24]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X20
	071 Move X1, X19
	072 Move X2, X21
	073 Move X20, [X31+48]
	074 Move X19, [X31+56]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X24, [X31+16]
	078 Move X23, [X31+24]
	079 Move X30, [X31+64]
	080 Call TimeZoneInfo.TZif_ParsePosixString, X0, X1, X2
	081 Return X0

Method: System.Void TZif_ParsePosixDateTime(System.String posixFormat, ref System.Int32 index, out System.String date, out System.String time)

Disassembly:
	0x0330DB8C MOV X19, X0
	0x0330DB90 MOV X0, X20
	0x0330DB94 BL 0x330E1AC
	0x0330DB98 TBZ X0, 0x0, 0x330DC78
	0x0330DB9C ADRP X8, 0xDE7000
	0x0330DBA0 LDR X8, [X8 + 0x9F0]
	0x0330DBA4 LDR X0, [X8]
	0x0330DBA8 LDR W8, [X0 + 0xE0]
	0x0330DBAC CBNZ W8, 0x330DBB4
	0x0330DBB0 BL 0x1C16DFC
	0x0330DBB4 ADD X0, X31, 0x68
	0x0330DBB8 MOV X1, X31
	0x0330DBBC BL 0x3361868
	0x0330DBC0 LDR X3, [X31 + 0x60]
	0x0330DBC4 MOV W1, W0
	0x0330DBC8 ADD X8, X31, 0x20
	0x0330DBCC MOV X0, X21
	0x0330DBD0 MOV X2, X20
	0x0330DBD4 BL 0x330E314
	0x0330DBD8 ADRP X9, 0xE1A000
	0x0330DBDC LDR X8, [X31 + 0x30]
	0x0330DBE0 LDR V0, [X31 + 0x2]
	0x0330DBE4 LDR X9, [X9 + 0xA38]
	0x0330DBE8 LDR X21, [X31 + 0x68]
	0x0330DBEC STR X8, [X31 + 0x50]
	0x0330DBF0 STR V0, [X31 + 0x4]
	0x0330DBF4 LDR X0, [X9]
	0x0330DBF8 STR V0, [X31 + 0x2]
	0x0330DBFC STR X8, [X31 + 0x30]
	0x0330DC00 LDR W8, [X0 + 0xE0]
	0x0330DC04 CBNZ W8, 0x330DC0C
	0x0330DC08 BL 0x1C16DFC
	0x0330DC0C LDR V0, [X31 + 0x2]
	0x0330DC10 LDR X8, [X31 + 0x30]
	0x0330DC14 ADD X2, X31, 0x0
	0x0330DC18 MOV X0, X21
	0x0330DC1C MOV X1, X20
	0x0330DC20 STR V0, [X31]
	0x0330DC24 STR X8, [X31 + 0x10]
	0x0330DC28 BL 0x330E81C
	0x0330DC2C TBZ X0, 0x0, 0x330DC3C
	0x0330DC30 LDR X0, [X23]
	0x0330DC34 ADD X8, X20, 0x20
	0x0330DC38 B 0x330DC54
	0x0330DC3C LDR X0, [X23]
	0x0330DC40 LDR W8, [X0 + 0xE0]
	0x0330DC44 CBNZ W8, 0x330DC50
	0x0330DC48 BL 0x1C16DFC
	0x0330DC4C LDR X0, [X23]
	0x0330DC50 LDR X8, [X0 + 0xB8]
	0x0330DC54 LDR W9, [X0 + 0xE0]
	0x0330DC58 LDR X20, [X8]
	0x0330DC5C CBNZ W9, 0x330DC64
	0x0330DC60 BL 0x1C16DFC
	0x0330DC64 MOV X0, X19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x10D0000
	009 Move X23, 0xE1B000
	010 Move W8, [X24+2843]
	011 Move X23, [X23+2616]
	012 Move X19, X3
	013 Move X22, X2
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xE1B000
	021 Move X0, [X0+2616]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+2843], W8
	025 Move [X19], X31
	026 Move X0, [X23]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X21
	032 Move X1, X20
	033 Call TimeZoneInfo.TZif_ParsePosixDate, X0, X1
	034 Move [X22], X0
	035 Compare X21, 0
	036 JumpIfEqual {65}
	037 Move W1, [X20]
	038 Move W8, [X21+16]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X0, X21
	041 Move X2, X31
	042 Call String.get_Chars, X0, X1
	043 And W8, W0, 0xFFFF
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W8, [X20]
	046 Add W8, W8, 1
	047 Move [X20], W8
	048 Move X0, [X23]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X21
	054 Move X1, X20
	055 Call TimeZoneInfo.TZif_ParsePosixTime, X0, X1
	056 Move [X19], X0
	057 Move X20, [X31+48]
	058 Move X19, [X31+56]
	059 Move X22, [X31+32]
	060 Move X21, [X31+40]
	061 Move X24, [X31+16]
	062 Move X23, [X31+24]
	063 Move X30, [X31+64]
	064 Return 
	065 Call 0x1C17F20

Method: System.String TZif_ParsePosixDate(System.String posixFormat, ref System.Int32 index)

Disassembly:
	0x0330DD00 STR X31, [X31 + 0x80]
	0x0330DD04 CBZ X24, 0x330E024
	0x0330DD08 CBZ X19, 0x330E044
	0x0330DD0C CBZ X20, 0x330E088
	0x0330DD10 ADRP X27, 0xDE7000
	0x0330DD14 LDR X27, [X27 + 0x9F0]
	0x0330DD18 MOV X0, X20
	0x0330DD1C MOV X1, X24
	0x0330DD20 BL 0x330D960
	0x0330DD24 MOV W21, W0
	0x0330DD28 TBNZ X23, 0x1, 0x330DD70
	0x0330DD2C LDR X0, [X27]
	0x0330DD30 LDR W8, [X0 + 0xE0]
	0x0330DD34 CBNZ W8, 0x330DD3C
	0x0330DD38 BL 0x1C16DFC
	0x0330DD3C ADD X0, X31, 0x98
	0x0330DD40 MOV X1, X31
	0x0330DD44 BL 0x336139C
	0x0330DD48 CBZ W0, 0x330DD70
	0x0330DD4C LDR X0, [X27]
	0x0330DD50 LDR W8, [X0 + 0xE0]
	0x0330DD54 CBNZ W8, 0x330DD5C
	0x0330DD58 BL 0x1C16DFC
	0x0330DD5C ADD X0, X31, 0x98
	0x0330DD60 MOV X1, X31
	0x0330DD64 BL 0x336139C
	0x0330DD68 CMP W0, W21
	0x0330DD6C B.NE 0x330E08C
	0x0330DD70 LDR X1, [X31 + 0x98]
	0x0330DD74 ADRP X28, 0xDE8000
	0x0330DD78 LDR X28, [X28 + 0x570]
	0x0330DD7C ADD X3, X31, 0x90
	0x0330DD80 MOV X0, X24
	0x0330DD84 MOV W2, W31
	0x0330DD88 BL 0x330FDF4
	0x0330DD8C LDR X22, [X24 + 0x30]
	0x0330DD90 CBZ X0, 0x330DEFC
	0x0330DD94 MOV X25, X0
	0x0330DD98 LDR X0, [X28]
	0x0330DD9C LDR X26, [X25 + 0x58]
	0x0330DDA0 LDR W8, [X0 + 0xE0]
	0x0330DDA4 CBNZ W8, 0x330DDAC
	0x0330DDA8 BL 0x1C16DFC
	0x0330DDAC MOV X0, X22
	0x0330DDB0 MOV X1, X26
	0x0330DDB4 MOV X2, X31
	0x0330DDB8 BL 0x3394C70
	0x0330DDBC MOV X22, X0
	0x0330DDC0 MOV X0, X25
	0x0330DDC4 BL 0x330E1AC
	0x0330DDC8 TBZ X0, 0x0, 0x330DEFC
	0x0330DDCC LDR X0, [X27]
	0x0330DDD0 LDR W8, [X0 + 0xE0]
	0x0330DDD4 CBNZ W8, 0x330DDDC
	0x0330DDD8 BL 0x1C16DFC
	0x0330DDDC ADD X0, X31, 0x98
	0x0330DDE0 MOV X1, X31
	0x0330DDE4 BL 0x3361868
	0x0330DDE8 LDR X3, [X31 + 0x90]
	0x0330DDEC MOV W1, W0
	0x0330DDF0 ADD X8, X31, 0x40
	0x0330DDF4 MOV X0, X24
	0x0330DDF8 MOV X2, X25
	0x0330DDFC BL 0x330E314
	0x0330DE00 LDR V0, [X31 + 0x4]
	0x0330DE04 LDR X8, [X31 + 0x50]
	0x0330DE08 STR V0, [X31 + 0x6]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x10D0000
	009 Move X23, 0xE1B000
	010 Move W8, [X21+2844]
	011 Move X23, [X23+2872]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0xE11000
	019 Move X0, [X0+1608]
	020 Call 0x1C17CF4
	021 Move X0, 0xE1B000
	022 Move X0, [X0+2616]
	023 Call 0x1C17CF4
	024 Move X0, 0xE1B000
	025 Move X0, [X0+3048]
	026 Call 0x1C17CF4
	027 Move X0, 0xE1B000
	028 Move X0, [X0+2872]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2844], W8
	032 Move X0, [X23]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X23]
	038 Move X8, [X0+184]
	039 Move X24, 0xE1B000
	040 Move X21, [X8+32]
	041 Move X24, [X24+2616]
	042 Compare X21, 0
	043 JumpIfNotEqual {65}
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Call 0x1C17DFC
	048 Move X0, [X23]
	049 Move X9, 0xE11000
	050 Move X8, [X0+184]
	051 Move X9, [X9+1608]
	052 Move X22, [X8]
	053 Move X0, [X9]
	054 Call 0x1C17F10
	055 Move X8, 0xE1B000
	056 Move X8, [X8+3048]
	057 Move X1, X22
	058 Move X3, X31
	059 Move X21, X0
	060 Move X2, [X8]
	061 Call Func`2<Char, Boolean>..ctor, X0, X1, X2
	062 Move X8, [X23]
	063 Move X8, [X8+184]
	064 Move [X8+32], X21
	065 Move X0, [X24]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X20
	071 Move X1, X19
	072 Move X2, X21
	073 Move X20, [X31+48]
	074 Move X19, [X31+56]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X24, [X31+16]
	078 Move X23, [X31+24]
	079 Move X30, [X31+64]
	080 Call TimeZoneInfo.TZif_ParsePosixString, X0, X1, X2
	081 Return X0

Method: System.String TZif_ParsePosixTime(System.String posixFormat, ref System.Int32 index)

Disassembly:
	0x0330DE0C STR X8, [X31 + 0x70]
	0x0330DE10 TBNZ X23, 0x1, 0x330DE64
	0x0330DE14 ADRP X9, 0xE1A000
	0x0330DE18 LDR V0, [X31 + 0x6]
	0x0330DE1C LDR X8, [X31 + 0x70]
	0x0330DE20 LDR X9, [X9 + 0xA38]
	0x0330DE24 LDR X23, [X31 + 0x98]
	0x0330DE28 STR V0, [X31 + 0x4]
	0x0330DE2C STR X8, [X31 + 0x50]
	0x0330DE30 LDR X0, [X9]
	0x0330DE34 LDR W8, [X0 + 0xE0]
	0x0330DE38 CBNZ W8, 0x330DE40
	0x0330DE3C BL 0x1C16DFC
	0x0330DE40 LDR V0, [X31 + 0x4]
	0x0330DE44 LDR X8, [X31 + 0x50]
	0x0330DE48 ADD X2, X31, 0x20
	0x0330DE4C MOV X0, X23
	0x0330DE50 MOV X1, X25
	0x0330DE54 STR V0, [X31 + 0x2]
	0x0330DE58 STR X8, [X31 + 0x30]
	0x0330DE5C BL 0x330E450
	0x0330DE60 TBNZ X0, 0x0, 0x330E0BC
	0x0330DE64 ADRP X9, 0xE1A000
	0x0330DE68 LDR V0, [X31 + 0x6]
	0x0330DE6C LDR X8, [X31 + 0x70]
	0x0330DE70 LDR X9, [X9 + 0xA38]
	0x0330DE74 LDR X23, [X31 + 0x98]
	0x0330DE78 STR V0, [X31 + 0x4]
	0x0330DE7C STR X8, [X31 + 0x50]
	0x0330DE80 LDR X0, [X9]
	0x0330DE84 LDR W8, [X0 + 0xE0]
	0x0330DE88 CBNZ W8, 0x330DE90
	0x0330DE8C BL 0x1C16DFC
	0x0330DE90 LDR V0, [X31 + 0x4]
	0x0330DE94 LDR X8, [X31 + 0x50]
	0x0330DE98 ADD X2, X31, 0x0
	0x0330DE9C MOV X0, X23
	0x0330DEA0 MOV X1, X25
	0x0330DEA4 STR V0, [X31]
	0x0330DEA8 STR X8, [X31 + 0x10]
	0x0330DEAC BL 0x330E81C
	0x0330DEB0 TBZ X0, 0x0, 0x330DEC0
	0x0330DEB4 LDR X0, [X28]
	0x0330DEB8 ADD X8, X25, 0x20
	0x0330DEBC B 0x330DED8
	0x0330DEC0 LDR X0, [X28]
	0x0330DEC4 LDR W8, [X0 + 0xE0]
	0x0330DEC8 CBNZ W8, 0x330DED4
	0x0330DECC BL 0x1C16DFC
	0x0330DED0 LDR X0, [X28]
	0x0330DED4 LDR X8, [X0 + 0xB8]
	0x0330DED8 LDR W9, [X0 + 0xE0]
	0x0330DEDC LDR X23, [X8]
	0x0330DEE0 CBNZ W9, 0x330DEE8
	0x0330DEE4 BL 0x1C16DFC
	0x0330DEE8 MOV X0, X22
	0x0330DEEC MOV X1, X23
	0x0330DEF0 MOV X2, X31
	0x0330DEF4 BL 0x3394C70
	0x0330DEF8 MOV X22, X0
	0x0330DEFC MOV X0, X20
	0x0330DF00 MOV X1, X19
	0x0330DF04 BL 0x330D960
	0x0330DF08 LDR X8, [X27]
	0x0330DF0C MOV W20, W0
	0x0330DF10 LDR W9, [X8 + 0xE0]
	0x0330DF14 CBNZ W9, 0x330DF20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x10D0000
	009 Move X23, 0xE1B000
	010 Move W8, [X21+2845]
	011 Move X23, [X23+2872]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0xE11000
	019 Move X0, [X0+1608]
	020 Call 0x1C17CF4
	021 Move X0, 0xE1B000
	022 Move X0, [X0+2616]
	023 Call 0x1C17CF4
	024 Move X0, 0xE1B000
	025 Move X0, [X0+3056]
	026 Call 0x1C17CF4
	027 Move X0, 0xE1B000
	028 Move X0, [X0+2872]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2845], W8
	032 Move X0, [X23]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X23]
	038 Move X8, [X0+184]
	039 Move X24, 0xE1B000
	040 Move X21, [X8+40]
	041 Move X24, [X24+2616]
	042 Compare X21, 0
	043 JumpIfNotEqual {65}
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Call 0x1C17DFC
	048 Move X0, [X23]
	049 Move X9, 0xE11000
	050 Move X8, [X0+184]
	051 Move X9, [X9+1608]
	052 Move X22, [X8]
	053 Move X0, [X9]
	054 Call 0x1C17F10
	055 Move X8, 0xE1B000
	056 Move X8, [X8+3056]
	057 Move X1, X22
	058 Move X3, X31
	059 Move X21, X0
	060 Move X2, [X8]
	061 Call Func`2<Char, Boolean>..ctor, X0, X1, X2
	062 Move X8, [X23]
	063 Move X8, [X8+184]
	064 Move [X8+40], X21
	065 Move X0, [X24]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X20
	071 Move X1, X19
	072 Move X2, X21
	073 Move X20, [X31+48]
	074 Move X19, [X31+56]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X24, [X31+16]
	078 Move X23, [X31+24]
	079 Move X30, [X31+64]
	080 Call TimeZoneInfo.TZif_ParsePosixString, X0, X1, X2
	081 Return X0

Method: System.String TZif_ParsePosixString(System.String posixFormat, ref System.Int32 index, System.Func`2<System.Char, System.Boolean> breakCondition)

Disassembly:
	0x0330DC68 MOV X1, X20
	0x0330DC6C MOV X2, X31
	0x0330DC70 BL 0x3394C70
	0x0330DC74 MOV X19, X0
	0x0330DC78 MOV X0, X19
	0x0330DC7C LDP X20, X19, [X31 + 0x90]
	0x0330DC80 LDP X22, X21, [X31 + 0x80]
	0x0330DC84 LDP X30, X23, [X31 + 0x70]
	0x0330DC88 ADD X31, X31, 0xA0
	0x0330DC8C RET
	0x0330DC90 BL 0x1C16F20
	0x0330DC94 SUB X31, X31, 0x100
	0x0330DC98 STP X0, X30, [X31 + 0x98]
	0x0330DC9C STP X28, X27, [X31 + 0xB0]
	0x0330DCA0 STP X26, X25, [X31 + 0xC0]
	0x0330DCA4 STP X24, X23, [X31 + 0xD0]
	0x0330DCA8 STP X22, X21, [X31 + 0xE0]
	0x0330DCAC STP X20, X19, [X31 + 0xF0]
	0x0330DCB0 ADRP X21, 0x10CF000
	0x0330DCB4 LDRB W8, [X21 + 0xB2A]
	0x0330DCB8 MOV X20, X4
	0x0330DCBC MOV W23, W3
	0x0330DCC0 MOV X19, X2
	0x0330DCC4 MOV X24, X1
	0x0330DCC8 TBNZ X8, 0x0, 0x330DCF8
	0x0330DCCC ADRP X0, 0xDE7000
	0x0330DCD0 LDR X0, [X0 + 0x9F0]
	0x0330DCD4 BL 0x1C16CF4
	0x0330DCD8 ADRP X0, 0xDE8000
	0x0330DCDC LDR X0, [X0 + 0x570]
	0x0330DCE0 BL 0x1C16CF4
	0x0330DCE4 ADRP X0, 0xE1A000
	0x0330DCE8 LDR X0, [X0 + 0xA38]
	0x0330DCEC BL 0x1C16CF4
	0x0330DCF0 MOVZ W8, 0x1
	0x0330DCF4 STRB W8, [X21 + 0xB2A]
	0x0330DCF8 STR X31, [X31 + 0x90]
	0x0330DCFC STRB W31, [X31 + 0x8C]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X0, 0
	007 JumpIfEqual {46}
	008 Move W20, [X1]
	009 Move W8, [X0+16]
	010 Move X22, X1
	011 Move X19, X0
	012 Move W1, W20
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X21, X2
	015 Move W1, W20
	016 Move X0, X19
	017 Move X2, X31
	018 Call String.get_Chars, X0, X1
	019 Compare X21, 0
	020 JumpIfEqual {46}
	021 Move W1, W0
	022 Move X8, [X21+24]
	023 Move X0, [X21+64]
	024 Move X2, [X21+40]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move W1, [X22]
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {35}
	031 Add W1, W1, 1
	032 Move [X22], W1
	033 Move W8, [X19+16]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Subtract W2, W1, W20
	036 Move X0, X19
	037 Move W1, W20
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X3, X31
	043 Move X30, [X31+48]
	044 Call String.Substring, X0, X1, X2
	045 Return X0
	046 Call 0x1C17F20

Method: System.String TZif_GetZoneAbbreviation(System.String zoneAbbreviations, System.Int32 index)

Disassembly:
	0x033096B8 CMP W20, 0x2
	0x033096BC MOV X21, X0
	0x033096C0 B.EQ 0x33096D4
	0x033096C4 CMP W20, 0x1
	0x033096C8 B.NE 0x33096F4
	0x033096CC LDRH W8, [X21]
	0x033096D0 B 0x33096E4
	0x033096D4 LDRH W8, [X21]
	0x033096D8 CMP W8, 0x2E
	0x033096DC B.NE 0x33096F4
	0x033096E0 LDRH W8, [X21 + 0x2]
	0x033096E4 CMP W8, 0x2E
	0x033096E8 B.NE 0x33096F4
	0x033096EC MOV X0, X31
	0x033096F0 B 0x3309764
	0x033096F4 ADRP X22, 0x10D3000
	0x033096F8 LDRB W8, [X22 + 0x3AB]
	0x033096FC CBNZ W8, 0x3309714
	0x03309700 ADRP X0, 0xE11000
	0x03309704 LDR X0, [X0 + 0x290]
	0x03309708 BL 0x1C16CF4
	0x0330970C MOVZ W8, 0x1
	0x03309710 STRB W8, [X22 + 0x3AB]
	0x03309714 ADRP X24, 0xE11000
	0x03309718 LDR X24, [X24 + 0x1D0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {30}
	006 Move W19, W1
	007 Move W1, W31
	008 Move W2, W19
	009 Move X3, X31
	010 Move X20, X0
	011 Call String.IndexOf, X0, X1, X2
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Subtract W2, W0, W19
	014 Move X0, X20
	015 Move W1, W19
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X3, X31
	019 Move X30, [X31+32]
	020 Call String.Substring, X0, X1, X2
	021 Return X0
	022 Move X0, X20
	023 Move W1, W19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, X31
	027 Move X30, [X31+32]
	028 Call String.Substring, X0, X1
	029 Return X0
	030 Call 0x1C17F20

Method: System.Int32 TZif_ToInt32(System.Byte[] value, System.Int32 startIndex)

Disassembly:
	0x0330DF18 MOV X0, X8
	0x0330DF1C BL 0x1C16DFC
	0x0330DF20 ADD X0, X31, 0x98
	0x0330DF24 MOV X1, X31
	0x0330DF28 BL 0x336139C
	0x0330DF2C CMP W21, W20
	0x0330DF30 B.NE 0x330DF48
	0x0330DF34 CBZ W21, 0x330DF48
	0x0330DF38 CBZ W0, 0x330DF48
	0x0330DF3C LDR X8, [X31 + 0x98]
	0x0330DF40 STR X8, [X31 + 0xA8]
	0x0330DF44 B 0x330E004

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {11}
	004 Move W8, [X0+24]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Add X8, X0, W1
	007 Move W8, [X8+32]
	008 NotImplemented "Instruction REV not yet implemented."
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20
	012 Call 0x1C17F28

Method: System.Int64 TZif_ToInt64(System.Byte[] value, System.Int32 startIndex)

Disassembly:
	0x0330DF48 LDR X0, [X27]
	0x0330DF4C LDR W8, [X0 + 0xE0]
	0x0330DF50 CBNZ W8, 0x330DF58
	0x0330DF54 BL 0x1C16DFC
	0x0330DF58 ADD X0, X31, 0x98
	0x0330DF5C MOV X1, X31
	0x0330DF60 BL 0x3361708
	0x0330DF64 LDR X8, [X28]
	0x0330DF68 MOV X21, X0
	0x0330DF6C LDR W9, [X8 + 0xE0]
	0x0330DF70 CBNZ W9, 0x330DF7C
	0x0330DF74 MOV X0, X8

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {11}
	004 Move W8, [X0+24]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Add X8, X0, W1
	007 Move X8, [X8+32]
	008 NotImplemented "Instruction REV not yet implemented."
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20
	012 Call 0x1C17F28

Method: System.Int64 TZif_ToUnixTime(System.Byte[] value, System.Int32 startIndex, System.TimeZoneInfo/TZVersion version)

Disassembly:
	0x0330DF78 BL 0x1C16DFC
	0x0330DF7C ADRP X8, 0xE1A000
	0x0330DF80 LDR X8, [X8 + 0xA38]
	0x0330DF84 LDR X0, [X8]
	0x0330DF88 LDR W8, [X0 + 0xE0]
	0x0330DF8C CBNZ W8, 0x330DF94
	0x0330DF90 BL 0x1C16DFC
	0x0330DF94 SUB X0, X21, X22
	0x0330DF98 ADD X2, X31, 0x8C
	0x0330DF9C MOV X1, X19
	0x0330DFA0 BL 0x330EBFC
	0x0330DFA4 LDR X8, [X27]
	0x0330DFA8 STR X0, [X31 + 0x80]
	0x0330DFAC LDR W9, [X8 + 0xE0]
	0x0330DFB0 CBNZ W9, 0x330DFBC
	0x0330DFB4 MOV X0, X8
	0x0330DFB8 BL 0x1C16DFC
	0x0330DFBC ADD X0, X31, 0x80
	0x0330DFC0 MOV X1, X31
	0x0330DFC4 BL 0x3361708
	0x0330DFC8 CMP W20, 0x2
	0x0330DFCC MOV X1, X0
	0x0330DFD0 B.NE 0x330DFF0
	0x0330DFD4 LDRB W3, [X31 + 0x8C]
	0x0330DFD8 ADD X0, X31, 0xA8
	0x0330DFDC MOVZ W2, 0x2
	0x0330DFE0 MOV X4, X31
	0x0330DFE4 STR X31, [X31 + 0xA8]
	0x0330DFE8 BL 0x335F024
	0x0330DFEC B 0x330E004
	0x0330DFF0 ADD X0, X31, 0xA8
	0x0330DFF4 MOV W2, W20
	0x0330DFF8 MOV X3, X31
	0x0330DFFC STR X31, [X31 + 0xA8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x10D0000
	008 Move X23, 0xE1B000
	009 Move W8, [X22+2846]
	010 Move X23, [X23+2616]
	011 Move W21, W2
	012 Move W19, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xE1B000
	019 Move X0, [X0+2616]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2846], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move W1, W19
	030 And W31, W21, 255
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 Move X23, [X31+56]
	037 Call TimeZoneInfo.TZif_ToInt64, X0, X1
	038 Return X0
	039 Call TimeZoneInfo.TZif_ToInt32, X0, X1
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X0, W0
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Return X0

Method: System.DateTime TZif_UnixTimeToDateTime(System.Int64 unixTime)

Disassembly:
	0x0330E000 BL 0x335EF44
	0x0330E004 LDP X30, X0, [X31 + 0xA0]
	0x0330E008 LDP X20, X19, [X31 + 0xF0]
	0x0330E00C LDP X22, X21, [X31 + 0xE0]
	0x0330E010 LDP X24, X23, [X31 + 0xD0]
	0x0330E014 LDP X26, X25, [X31 + 0xC0]
	0x0330E018 LDP X28, X27, [X31 + 0xB0]
	0x0330E01C ADD X31, X31, 0x100
	0x0330E020 RET
	0x0330E024 ADRP X0, 0xDEA000
	0x0330E028 LDR X0, [X0 + 0x528]
	0x0330E02C BL 0x1C16D08
	0x0330E030 BL 0x1C16F10
	0x0330E034 MOV X19, X0
	0x0330E038 ADRP X0, 0xE19000
	0x0330E03C LDR X0, [X0 + 0xC20]
	0x0330E040 B 0x330E060
	0x0330E044 ADRP X0, 0xDEA000
	0x0330E048 LDR X0, [X0 + 0x528]
	0x0330E04C BL 0x1C16D08
	0x0330E050 BL 0x1C16F10
	0x0330E054 MOV X19, X0
	0x0330E058 ADRP X0, 0xE19000
	0x0330E05C LDR X0, [X0 + 0xC28]
	0x0330E060 BL 0x1C16D08
	0x0330E064 MOV X1, X0
	0x0330E068 MOV X0, X19
	0x0330E06C BL 0x330E100
	0x0330E070 ADRP X0, 0xE19000
	0x0330E074 LDR X0, [X0 + 0xC30]
	0x0330E078 BL 0x1C16D08
	0x0330E07C MOV X1, X0
	0x0330E080 MOV X0, X19
	0x0330E084 BL 0x1C16DEC
	0x0330E088 BL 0x1C16F20
	0x0330E08C ADRP X0, 0xDED000
	0x0330E090 LDR X0, [X0 + 0x578]
	0x0330E094 BL 0x1C16D08
	0x0330E098 BL 0x1C16F10
	0x0330E09C MOV X19, X0
	0x0330E0A0 ADRP X0, 0xE19000
	0x0330E0A4 LDR X0, [X0 + 0xC38]
	0x0330E0A8 BL 0x1C16D08
	0x0330E0AC MOV X20, X0
	0x0330E0B0 ADRP X0, 0xE19000
	0x0330E0B4 LDR X0, [X0 + 0xC20]
	0x0330E0B8 B 0x330E0E8
	0x0330E0BC ADRP X0, 0xDED000
	0x0330E0C0 LDR X0, [X0 + 0x578]
	0x0330E0C4 BL 0x1C16D08
	0x0330E0C8 BL 0x1C16F10
	0x0330E0CC MOV X19, X0
	0x0330E0D0 ADRP X0, 0xE19000
	0x0330E0D4 LDR X0, [X0 + 0xC40]
	0x0330E0D8 BL 0x1C16D08
	0x0330E0DC MOV X20, X0
	0x0330E0E0 ADRP X0, 0xE19000
	0x0330E0E4 LDR X0, [X0 + 0xC48]
	0x0330E0E8 BL 0x1C16D08
	0x0330E0EC MOV X2, X0
	0x0330E0F0 MOV X0, X19
	0x0330E0F4 MOV X1, X20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x10CF000
	006 Move W8, [X20+2847]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xDE8000
	013 Move X0, [X0+2648]
	014 Call 0x1C17CF4
	015 Move X0, 0xDE7000
	016 Move X0, [X0+2544]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2847], W8
	020 Move TEMP, 0xF6FF
	021 Not TEMP
	022 Move X8, TEMP
	023 NotImplemented "Instruction MOVK not yet implemented."
	024 NotImplemented "Instruction MOVK not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X19, 0xDE7000
	027 Move X19, [X19+2544]
	028 Move X0, [X19]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X19]
	034 Move X8, [X0+184]
	035 Move X0, [X8+16]
	036 Move X8, 0x417F
	037 NotImplemented "Instruction MOVK not yet implemented."
	038 NotImplemented "Instruction MOVK not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X19, 0xDE7000
	041 Move X19, [X19+2544]
	042 Move X0, [X19]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move X0, [X19]
	048 Move X8, [X0+184]
	049 Move X0, [X8+24]
	050 Move X8, 0xDE8000
	051 Move X8, [X8+2648]
	052 Move X0, [X8]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X0, X19
	058 Move X1, X31
	059 Call DateTimeOffset.FromUnixTimeSeconds, X0
	060 Move [X31], X0
	061 Move [X31+8], X1
	062 Add X0, X31, 0
	063 Move X1, X31
	064 Call DateTimeOffset.get_UtcDateTime, X0
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X30, [X31+16]
	068 Add X31, X31, 48
	069 Return X0

Method: System.Void TZif_ParseRaw(System.Byte[] data, out System.TimeZoneInfo/TZifHead t, out System.DateTime[] dts, out System.Byte[] typeOfLocalTime, out System.TimeZoneInfo/TZifType[] transitionType, out System.String zoneAbbreviations, out System.Boolean[] StandardTime, out System.Boolean[] GmtTime, out System.String futureTransitionsPosixFormat)

Disassembly:
	0x03309190 BL 0x1C16CF4
	0x03309194 MOVZ W8, 0x1
	0x03309198 STRB W8, [X19 + 0xB0E]
	0x0330919C LDR X0, [X20]
	0x033091A0 LDR W8, [X0 + 0xE0]
	0x033091A4 CBNZ W8, 0x33091AC
	0x033091A8 BL 0x1C16DFC
	0x033091AC ADRP X19, 0x10D3000
	0x033091B0 LDRB W8, [X19 + 0xC77]
	0x033091B4 CBNZ W8, 0x33091CC
	0x033091B8 ADRP X0, 0xDEC000
	0x033091BC LDR X0, [X0 + 0x278]
	0x033091C0 BL 0x1C16CF4
	0x033091C4 MOVZ W8, 0x1
	0x033091C8 STRB W8, [X19 + 0xC77]
	0x033091CC ADRP X8, 0xDEC000
	0x033091D0 LDR X8, [X8 + 0x278]
	0x033091D4 MOV X1, X31
	0x033091D8 LDR X8, [X8]
	0x033091DC LDR X8, [X8 + 0xB8]
	0x033091E0 LDR X19, [X8]
	0x033091E4 MOV X0, X19
	0x033091E8 BL 0x32277A8
	0x033091EC TBZ X0, 0x0, 0x330929C
	0x033091F0 ADRP X8, 0xE1E000
	0x033091F4 LDR X8, [X8 + 0xAC8]
	0x033091F8 MOV X1, X31
	0x033091FC LDR X0, [X8]
	0x03309200 BL 0x33C19D0
	0x03309204 CBZ X0, 0x3309290
	0x03309208 ADRP X20, 0xE11000
	0x0330920C LDR X20, [X20 + 0x1D0]
	0x03309210 MOV X19, X0
	0x03309214 LDR X0, [X20]
	0x03309218 LDR W8, [X0 + 0xE0]
	0x0330921C CBNZ W8, 0x3309228
	0x03309220 BL 0x1C16DFC
	0x03309224 LDR X0, [X20]
	0x03309228 LDR X8, [X0 + 0xB8]
	0x0330922C MOV X0, X19
	0x03309230 MOV X2, X31
	0x03309234 LDRH W1, [X8 + 0xA]
	0x03309238 BL 0x3226848
	0x0330923C TBNZ X0, 0x0, 0x330929C
	0x03309240 LDR X0, [X20]
	0x03309244 LDR W8, [X0 + 0xE0]
	0x03309248 CBNZ W8, 0x3309250
	0x0330924C BL 0x1C16DFC
	0x03309250 ADRP X8, 0xDEC000
	0x03309254 LDR X8, [X8 + 0x170]
	0x03309258 LDR X0, [X8]
	0x0330925C LDR W8, [X0 + 0xE0]
	0x03309260 CBNZ W8, 0x3309268
	0x03309264 BL 0x1C16DFC
	0x03309268 LDR X8, [X20]
	0x0330926C LDR X8, [X8 + 0xB8]
	0x03309270 ADD X0, X8, 0xA
	0x03309274 BL 0x330A76C
	0x03309278 MOV X1, X0
	0x0330927C MOV X0, X19
	0x03309280 LDP X20, X19, [X31 + 0x10]
	0x03309284 MOV X2, X31
	0x03309288 LDR X30, [X31], #0x20
	0x0330928C B 0x321B938
	0x03309290 ADRP X8, 0xE1E000
	0x03309294 LDR X8, [X8 + 0xAD0]
	0x03309298 LDR X19, [X8]
	0x0330929C MOV X0, X19
	0x033092A0 LDP X20, X19, [X31 + 0x10]
	0x033092A4 LDR X30, [X31], #0x20
	0x033092A8 RET
	0x033092AC STP X30, X21, [X31 - 0x20]!
	0x033092B0 STP X20, X19, [X31 + 0x10]
	0x033092B4 ADRP X20, 0x10D3000
	0x033092B8 ADRP X21, 0xE15000
	0x033092BC LDRB W8, [X20 + 0xB07]
	0x033092C0 LDR X21, [X21 + 0xD78]
	0x033092C4 MOV X19, X0
	0x033092C8 TBNZ X8, 0x0, 0x33092F8
	0x033092CC ADRP X0, 0xE11000
	0x033092D0 LDR X0, [X0 + 0x1D0]
	0x033092D4 BL 0x1C16CF4
	0x033092D8 ADRP X0, 0xE15000
	0x033092DC LDR X0, [X0 + 0xD78]
	0x033092E0 BL 0x1C16CF4
	0x033092E4 ADRP X0, 0xE1E000
	0x033092E8 LDR X0, [X0 + 0xA38]
	0x033092EC BL 0x1C16CF4
	0x033092F0 MOVZ W8, 0x1
	0x033092F4 STRB W8, [X20 + 0xB07]
	0x033092F8 LDR X0, [X21]
	0x033092FC LDR W8, [X0 + 0xE0]
	0x03309300 CBNZ W8, 0x3309308
	0x03309304 BL 0x1C16DFC
	0x03309308 MOV X0, X19
	0x0330930C MOV X1, X31
	0x03309310 BL 0x3209A64
	0x03309314 CBZ X0, 0x33093A4
	0x03309318 ADRP X8, 0xE11000
	0x0330931C LDR X8, [X8 + 0x1D0]
	0x03309320 MOV X20, X0
	0x03309324 ADRP X21, 0xE1E000
	0x03309328 LDR X0, [X8]
	0x0330932C LDR W8, [X0 + 0xE0]
	0x03309330 LDR X21, [X21 + 0xA38]
	0x03309334 CBNZ W8, 0x330933C
	0x03309338 BL 0x1C16DFC
	0x0330933C MOV X0, X19
	0x03309340 MOV X1, X20
	0x03309344 MOV X2, X31
	0x03309348 BL 0x32FCE04
	0x0330934C LDR X8, [X21]
	0x03309350 MOV X19, X0
	0x03309354 LDR W9, [X8 + 0xE0]
	0x03309358 CBNZ W9, 0x3309364
	0x0330935C MOV X0, X8
	0x03309360 BL 0x1C16DFC
	0x03309364 BL 0x330913C
	0x03309368 CBZ X19, 0x33093B4
	0x0330936C MOV X20, X0
	0x03309370 MOVZ W2, 0x4
	0x03309374 MOV X0, X19
	0x03309378 MOV X1, X20
	0x0330937C MOV X3, X31
	0x03309380 BL 0x3226FBC
	0x03309384 TBZ X0, 0x0, 0x33093A4
	0x03309388 CBZ X20, 0x33093B4
	0x0330938C LDR W1, [X20 + 0x10]
	0x03309390 MOV X0, X19
	0x03309394 LDP X20, X19, [X31 + 0x10]
	0x03309398 MOV X2, X31
	0x0330939C LDP X30, X21, [X31], #0x20
	0x033093A0 B 0x322B484
	0x033093A4 LDP X20, X19, [X31 + 0x10]
	0x033093A8 MOV X0, X31
	0x033093AC LDP X30, X21, [X31], #0x20
	0x033093B0 RET
	0x033093B4 BL 0x1C16F20
	0x033093B8 STR X30, [X31 - 0x40]!
	0x033093BC STP X24, X23, [X31 + 0x10]
	0x033093C0 STP X22, X21, [X31 + 0x20]
	0x033093C4 STP X20, X19, [X31 + 0x30]
	0x033093C8 ADRP X19, 0x10D3000
	0x033093CC ADRP X21, 0xE1E000
	0x033093D0 LDRB W8, [X19 + 0xB0A]
	0x033093D4 LDR X21, [X21 + 0xAD8]
	0x033093D8 MOV X20, X0
	0x033093DC TBNZ X8, 0x0, 0x3309454
	0x033093E0 ADRP X0, 0xDEA000
	0x033093E4 LDR X0, [X0 + 0x618]
	0x033093E8 BL 0x1C16CF4
	0x033093EC ADRP X0, 0xE11000
	0x033093F0 LDR X0, [X0 + 0x1D0]
	0x033093F4 BL 0x1C16CF4
	0x033093F8 ADRP X0, 0xE1E000
	0x033093FC LDR X0, [X0 + 0xAE0]
	0x03309400 BL 0x1C16CF4
	0x03309404 ADRP X0, 0xE1E000
	0x03309408 LDR X0, [X0 + 0xA38]
	0x0330940C BL 0x1C16CF4
	0x03309410 ADRP X0, 0xE1E000
	0x03309414 LDR X0, [X0 + 0xAE8]
	0x03309418 BL 0x1C16CF4
	0x0330941C ADRP X0, 0xE1E000
	0x03309420 LDR X0, [X0 + 0xAD8]
	0x03309424 BL 0x1C16CF4
	0x03309428 ADRP X0, 0xE1E000
	0x0330942C LDR X0, [X0 + 0xA40]
	0x03309430 BL 0x1C16CF4
	0x03309434 ADRP X0, 0xE1E000
	0x03309438 LDR X0, [X0 + 0xAB8]
	0x0330943C BL 0x1C16CF4
	0x03309440 ADRP X0, 0xE1E000
	0x03309444 LDR X0, [X0 + 0xAF0]
	0x03309448 BL 0x1C16CF4
	0x0330944C MOVZ W8, 0x1
	0x03309450 STRB W8, [X19 + 0xB0A]
	0x03309454 LDR X0, [X21]
	0x03309458 BL 0x1C16F10
	0x0330945C MOV X1, X31
	0x03309460 MOV X19, X0
	0x03309464 BL 0x33BDD8C
	0x03309468 CBZ X19, 0x3309578
	0x0330946C ADRP X8, 0xE1E000
	0x03309470 LDR X8, [X8 + 0xA40]
	0x03309474 STR X20, [X19 + 0x28]
	0x03309478 ADRP X22, 0xE1E000
	0x0330947C ADRP X24, 0xE11000
	0x03309480 LDR X8, [X8]
	0x03309484 LDR X22, [X22 + 0xA38]
	0x03309488 STR X8, [X19 + 0x30]
	0x0330948C LDR X0, [X22]
	0x03309490 LDR W8, [X0 + 0xE0]
	0x03309494 LDR X24, [X24 + 0x1D0]
	0x03309498 CBNZ W8, 0x33094A0
	0x0330949C BL 0x1C16DFC
	0x033094A0 ADRP X23, 0xE1E000
	0x033094A4 ADRP X21, 0xE1E000
	0x033094A8 LDR X23, [X23 + 0xAB8]
	0x033094AC LDR X21, [X21 + 0xAF0]
	0x033094B0 BL 0x330913C
	0x033094B4 STR X0, [X19 + 0x38]
	0x033094B8 MOV X20, X0
	0x033094BC LDR X0, [X24]
	0x033094C0 LDR W8, [X0 + 0xE0]
	0x033094C4 CBNZ W8, 0x33094CC
	0x033094C8 BL 0x1C16DFC
	0x033094CC LDR X1, [X23]
	0x033094D0 MOV X0, X20
	0x033094D4 MOV X2, X31
	0x033094D8 BL 0x32FCE04
	0x033094DC STR X0, [X19 + 0x10]
	0x033094E0 LDR X0, [X19 + 0x38]
	0x033094E4 LDR X1, [X21]
	0x033094E8 MOV X2, X31
	0x033094EC BL 0x32FCE04
	0x033094F0 LDR X8, [X19 + 0x28]
	0x033094F4 STR X0, [X19 + 0x18]
	0x033094F8 CBZ X8, 0x3309578
	0x033094FC ADRP X9, 0xDEA000
	0x03309500 LDR X9, [X9 + 0x618]
	0x03309504 LDR W1, [X8 + 0x18]
	0x03309508 ADRP X21, 0xE1E000
	0x0330950C LDR X0, [X9]
	0x03309510 LDR X21, [X21 + 0xAE0]
	0x03309514 BL 0x1C16D6C
	0x03309518 STR X0, [X19 + 0x20]
	0x0330951C LDR X20, [X19 + 0x38]
	0x03309520 LDR X0, [X21]
	0x03309524 BL 0x1C16F10
	0x03309528 ADRP X8, 0xE1E000
	0x0330952C LDR X8, [X8 + 0xAE8]
	0x03309530 MOV X21, X0
	0x03309534 LDR X2, [X8]
	0x03309538 MOV X1, X19
	0x0330953C MOV X3, X31
	0x03309540 BL 0x24AD1FC
	0x03309544 LDR X0, [X22]
	0x03309548 LDR W8, [X0 + 0xE0]
	0x0330954C CBNZ W8, 0x3309554
	0x03309550 BL 0x1C16DFC
	0x03309554 MOV X0, X20
	0x03309558 MOV X1, X21
	0x0330955C BL 0x3309790
	0x03309560 LDR X0, [X19 + 0x30]
	0x03309564 LDP X20, X19, [X31 + 0x30]
	0x03309568 LDP X22, X21, [X31 + 0x20]
	0x0330956C LDP X24, X23, [X31 + 0x10]
	0x03309570 LDR X30, [X31], #0x40
	0x03309574 RET
	0x03309578 BL 0x1C16F20
	0x0330957C CMP W1, 0x1
	0x03309580 MOV X20, X0
	0x03309584 B.NE 0x3309618
	0x03309588 MOV X0, X20
	0x0330958C BL 0x3EB1AD0
	0x03309590 MOV X20, X0
	0x03309594 ADRP X0, 0xE18000
	0x03309598 LDR X0, [X0 + 0x7A8]
	0x0330959C BL 0x1C16D08
	0x033095A0 LDR X8, [X20]
	0x033095A4 LDR X1, [X8]
	0x033095A8 BL 0x1C17270
	0x033095AC TBNZ X0, 0x0, 0x33095E8
	0x033095B0 ADRP X0, 0xE18000
	0x033095B4 LDR X0, [X0 + 0x690]
	0x033095B8 BL 0x1C16D08
	0x033095BC LDR X8, [X20]
	0x033095C0 LDR X1, [X8]
	0x033095C4 BL 0x1C17270
	0x033095C8 TBNZ X0, 0x0, 0x33095E8
	0x033095CC ADRP X0, 0xE18000
	0x033095D0 LDR X0, [X0 + 0x7B8]
	0x033095D4 BL 0x1C16D08
	0x033095D8 LDR X8, [X20]
	0x033095DC LDR X1, [X8]
	0x033095E0 BL 0x1C17270
	0x033095E4 TBZ X0, 0x0, 0x33095F0
	0x033095E8 BL 0x3EB1AE0
	0x033095EC B 0x3309560
	0x033095F0 MOVZ W0, 0x8
	0x033095F4 BL 0x3EB1AF0
	0x033095F8 LDR X8, [X20]
	0x033095FC STR X8, [X0]
	0x03309600 ADRP X1, 0xBAB000
	0x03309604 ADD X1, X1, 0xE58
	0x03309608 MOV X2, X31
	0x0330960C BL 0x3EB1B00
	0x03309610 MOV X20, X0
	0x03309614 BL 0x3EB1AE0
	0x03309618 MOV X0, X20
	0x0330961C BL 0x1D2C690
	0x03309620 BL 0x1990590
	0x03309624 STP X29, X30, [X31 - 0x40]!
	0x03309628 STP X24, X23, [X31 + 0x10]
	0x0330962C STP X22, X21, [X31 + 0x20]
	0x03309630 STP X20, X19, [X31 + 0x30]
	0x03309634 ADD X29, X31, 0x0
	0x03309638 SUB X31, X31, 0x10
	0x0330963C MRS X23, 0xC000
	0x03309640 LDR X8, [X23 + 0x28]
	0x03309644 ADRP X21, 0x10D3000
	0x03309648 MOV X19, X1
	0x0330964C MOV X20, X0
	0x03309650 STUR X8, [X29 - 0x8]
	0x03309654 LDRB W8, [X21 + 0xB08]
	0x03309658 TBNZ X8, 0x0, 0x3309688
	0x0330965C ADRP X0, 0xE11000
	0x03309660 LDR X0, [X0 + 0x1D0]
	0x03309664 BL 0x1C16CF4
	0x03309668 ADRP X0, 0xE19000
	0x0330966C LDR X0, [X0 + 0x28]
	0x03309670 BL 0x1C16CF4
	0x03309674 ADRP X0, 0xE19000
	0x03309678 LDR X0, [X0 + 0x4E8]
	0x0330967C BL 0x1C16CF4
	0x03309680 MOVZ W8, 0x1
	0x03309684 STRB W8, [X21 + 0xB08]
	0x03309688 SUB X21, X31, 0x200
	0x0330968C ADD X31, X21, 0x0
	0x03309690 MOVZ W2, 0x200
	0x03309694 MOV X0, X21
	0x03309698 MOV W1, W31
	0x0330969C BL 0x3EB1B10
	0x033096A0 MOVZ W2, 0x100
	0x033096A4 MOV X0, X20
	0x033096A8 MOV X1, X21
	0x033096AC MOV X3, X31
	0x033096B0 BL 0x320A034
	0x033096B4 MOV X20, X1

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move [X31+24], X5
	015 Move X21, 0x10D4000
	016 Move X23, 0xDED000
	017 Move W8, [X21+2848]
	018 Move X22, [X31+160]
	019 Move X23, [X23+632]
	020 Move X26, X7
	021 Move X29, X6
	022 Move X24, X4
	023 Move X25, X3
	024 Move X27, X2
	025 Move X20, X1
	026 Move X19, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {51}
	031 Move X0, 0xDED000
	032 Move X0, [X0+2488]
	033 Call 0x1C17CF4
	034 Move X0, 0xDEB000
	035 Move X0, [X0+1560]
	036 Call 0x1C17CF4
	037 Move X0, 0xE1D000
	038 Move X0, [X0+112]
	039 Call 0x1C17CF4
	040 Move X0, 0xDED000
	041 Move X0, [X0+632]
	042 Call 0x1C17CF4
	043 Move X0, 0xE1F000
	044 Move X0, [X0+2632]
	045 Call 0x1C17CF4
	046 Move X0, 0xE1F000
	047 Move X0, [X0+2616]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X21+2848], W8
	051 Move [X27], X31
	052 Move [X25], X31
	053 Move [X24], X31
	054 Move X8, [X23]
	055 Move X23, 0xE1D000
	056 Move X21, 0xE1F000
	057 Move X28, 0xDED000
	058 Move X8, [X8+184]
	059 Move X23, [X23+112]
	060 NotImplemented "Instruction MOVI not yet implemented."
	061 Add X0, X31, 32
	062 Move X8, [X8]
	063 Move X21, [X21+2632]
	064 Move X28, [X28+2488]
	065 Move X9, [X31+24]
	066 Move X1, X19
	067 Move W2, W31
	068 Move [X31+8], X29
	069 Move [X31+16], X26
	070 Move [X9], X8
	071 Move [X29], X31
	072 Move [X26], X31
	073 Move [X31], X22
	074 Move [X22], X31
	075 Move [X31+32], V0
	076 Move [X31+40], V0
	077 Call TZifHead..ctor, X0, X1, X2
	078 Move V0, [X31+32]
	079 Move V1, [X31+48]
	080 Move [X20], V0
	081 Move [X20+8], V1
	082 Move W8, [X20+4]
	083 Compare W8, 0
	084 JumpIfEqual {113}
	085 Move W9, [X20+16]
	086 Move W8, [X20+20]
	087 Move W12, [X20+24]
	088 Move W13, [X20+28]
	089 Move W11, [X20+8]
	090 Move W10, [X20+12]
	091 Move W14, 6
	092 Add W8, W8, W8
	093 NotImplemented "Instruction MADD not yet implemented."
	094 Add W8, W8, W9
	095 Add W8, W8, W10
	096 Add W8, W8, W11
	097 Move X22, X21
	098 Add W21, W8, W13
	099 Add W2, W21, 44
	100 NotImplemented "Instruction MOVI not yet implemented."
	101 Add X0, X31, 32
	102 Move X1, X19
	103 Move [X31+32], V0
	104 Move [X31+40], V0
	105 Call TZifHead..ctor, X0, X1, X2
	106 Move V1, [X31+32]
	107 Move V0, [X31+48]
	108 Add W26, W21, 88
	109 Move X21, X22
	110 Move W29, 8
	111 Move [X20], V1
	112 Move [X20+8], V0
	113 Move W26, 44
	114 Move W29, 4
	115 Move W1, [X20+20]
	116 Move X0, [X23]
	117 Call 0x1C17D6C
	118 Move [X27], X0
	119 Move X8, 0xDEB000
	120 Move W1, [X20+20]
	121 Move X8, [X8+1560]
	122 Move X0, [X8]
	123 Call 0x1C17D6C
	124 Move [X25], X0
	125 Move W1, [X20+24]
	126 Move X0, [X21]
	127 Call 0x1C17D6C
	128 Move [X24], X0
	129 Move X8, 0xDED000
	130 Move X8, [X8+632]
	131 Move X9, [X31+24]
	132 Move X8, [X8]
	133 Move X8, [X8+184]
	134 Move X8, [X8]
	135 Move [X9], X8
	136 Move W1, [X20+24]
	137 Move X0, [X28]
	138 Call 0x1C17D6C
	139 Move X8, [X31+8]
	140 Move [X8], X0
	141 Move W1, [X20+24]
	142 Move X0, [X28]
	143 Call 0x1C17D6C
	144 Move X8, [X31+16]
	145 Move [X8], X0
	146 Move W8, [X20+20]
	147 Compare W8, 0
	148 JumpIfEqual {201}
	149 Move X23, 0xE1F000
	150 Move X23, [X23+2616]
	151 Move X22, X31
	152 Move W21, 1
	153 Move X0, [X23]
	154 Move W28, [X20+4]
	155 Move W8, [X0+224]
	156 Compare W8, 0
	157 JumpIfNotEqual {159}
	158 Call 0x1C17DFC
	159 Move X0, X19
	160 Move W1, W26
	161 Move W2, W28
	162 Call TimeZoneInfo.TZif_ToUnixTime, X0, X1, X2
	163 Move X28, [X27]
	164 Call TimeZoneInfo.TZif_UnixTimeToDateTime, X0
	165 Compare X28, 0
	166 JumpIfEqual {354}
	167 Move W8, [X28+24]
	168 Subtract W9, W21, 1
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Add X8, X28, X22
	171 Move [X8+32], X0
	172 Move W8, [X20+20]
	173 Move X22, W21
	174 Add W26, W26, W29
	175 Add W21, W21, 1
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Compare W8, 0
	178 JumpIfEqual {201}
	179 Compare X19, 0
	180 JumpIfEqual {354}
	181 Move X9, X31
	182 Move W10, [X19+24]
	183 Move X8, X9
	184 Add W9, W26, W8
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X10, [X25]
	187 Compare X10, 0
	188 JumpIfEqual {354}
	189 Move W11, [X10+24]
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Add X9, X19, W9
	192 Move W9, [X9+32]
	193 Add X10, X10, X8
	194 Move [X10+32], W9
	195 Move W10, [X20+20]
	196 Add W9, W8, 1
	197 Move X9, W9
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Add W8, W8, W26
	200 Add W26, W8, 1
	201 Move W8, [X20+24]
	202 Compare W8, 0
	203 JumpIfEqual {226}
	204 Move X22, X31
	205 Move W21, 1
	206 Move X23, [X24]
	207 Add X0, X31, 32
	208 Move X1, X19
	209 Move W2, W26
	210 Move [X31+32], X31
	211 Move [X31+40], X31
	212 Call TZifType..ctor, X0, X1, X2
	213 Compare X23, 0
	214 JumpIfEqual {354}
	215 Move W8, [X23+24]
	216 Subtract W9, W21, 1
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move V0, [X31+2]
	219 Add X8, X23, X22
	220 Move X22, W21
	221 Add W26, W26, 6
	222 Move [X8+2], V0
	223 Move W8, [X20+24]
	224 Add W21, W21, 1
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move X0, X31
	227 Call Encoding.get_UTF8
	228 Compare X0, 0
	229 JumpIfEqual {354}
	230 Move X8, [X0]
	231 Move W3, [X20+28]
	232 Move X1, X19
	233 Move W2, W26
	234 Move X9, [X8+904]
	235 Move X4, [X8+912]
	236 Move X24, X0
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Move X8, [X31+24]
	239 Add W11, W29, 4
	240 Move [X8], X0
	241 Move W8, [X20+28]
	242 Move W10, [X20+12]
	243 Move W9, [X20+16]
	244 Add W8, W8, W26
	245 NotImplemented "Instruction MADD not yet implemented."
	246 Compare W10, 0
	247 JumpIfEqual {280}
	248 Move W11, [X20+24]
	249 Move X21, [X31]
	250 Move X1, [X31+8]
	251 Move X0, [X31+16]
	252 Add X15, X19, W8
	253 Move X9, X31
	254 Move X12, X31
	255 Move X13, W8
	256 Move W14, W8
	257 Add X15, X15, 32
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Compare X19, 0
	260 JumpIfEqual {354}
	261 Move X16, [X19+24]
	262 Add X17, X13, X9
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Add X17, X14, X9
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Move X16, [X1]
	267 Compare X16, 0
	268 JumpIfEqual {354}
	269 Move W17, [X16+24]
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Move W17, [X15]
	272 Add X9, X9, 1
	273 Add X16, X16, X12
	274 Move X12, W9
	275 NotImplemented "Instruction CMP not yet implemented."
	276 NotImplemented "Instruction CSET not yet implemented."
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Move [X16+32], W17
	279 Add W8, W8, W9
	280 Move X21, [X31]
	281 Move X0, [X31+16]
	282 Move W10, [X20+8]
	283 Compare W10, 0
	284 JumpIfEqual {315}
	285 Move W11, [X20+24]
	286 Move W13, W8
	287 Add X15, X19, W8
	288 Move X9, X31
	289 Move X12, X31
	290 Move X13, W13
	291 Move W14, W8
	292 Add X15, X15, 32
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Compare X19, 0
	295 JumpIfEqual {354}
	296 Move X16, [X19+24]
	297 Add X17, X13, X9
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Add X17, X14, X9
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Move X16, [X0]
	302 Compare X16, 0
	303 JumpIfEqual {354}
	304 Move W17, [X16+24]
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Move W17, [X15]
	307 Add X9, X9, 1
	308 Add X16, X16, X12
	309 Move X12, W9
	310 NotImplemented "Instruction CMP not yet implemented."
	311 NotImplemented "Instruction CSET not yet implemented."
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Move [X16+32], W17
	314 Add W8, W8, W9
	315 Move W9, [X20+4]
	316 Compare W9, 0
	317 JumpIfEqual {339}
	318 Compare X19, 0
	319 JumpIfEqual {354}
	320 Move X9, [X19+24]
	321 NotImplemented "Instruction CMP not yet implemented."
	322 Add X10, X19, W8
	323 Move W10, [X10+32]
	324 NotImplemented "Instruction CMP not yet implemented."
	325 Subtract W10, W9, 1
	326 Add X10, X19, W10
	327 Move W10, [X10+32]
	328 NotImplemented "Instruction CMP not yet implemented."
	329 Move X10, [X24]
	330 Add W2, W8, 1
	331 Subtract W8, W9, W8
	332 Subtract W3, W8, 2
	333 Move X11, [X10+904]
	334 Move X4, [X10+912]
	335 Move X0, X24
	336 Move X1, X19
	337 NotImplemented "Instruction BLR not yet implemented."
	338 Move [X21], X0
	339 Move X20, [X31+144]
	340 Move X19, [X31+152]
	341 Move X22, [X31+128]
	342 Move X21, [X31+136]
	343 Move X24, [X31+112]
	344 Move X23, [X31+120]
	345 Move X26, [X31+96]
	346 Move X25, [X31+104]
	347 Move X28, [X31+80]
	348 Move X27, [X31+88]
	349 Move X29, [X31+64]
	350 Move X30, [X31+72]
	351 Add X31, X31, 160
	352 Return 
	353 Call 0x1C17F28
	354 Call 0x1C17F20

Method: System.String get_DisplayName()

Disassembly:
	0x0330E3E0 LDR X8, [X31 + 0x50]
	0x0330E3E4 ADD X1, X31, 0x20
	0x0330E3E8 MOV W0, W22
	0x0330E3EC STR V0, [X31 + 0x2]
	0x0330E3F0 STR X8, [X31 + 0x30]
	0x0330E3F4 BL 0x3310384
	0x0330E3F8 LDR V0, [X21 + 0x4]
	0x0330E3FC LDR X8, [X21 + 0x50]
	0x0330E400 MOV X24, X0
	0x0330E404 ADD X1, X31, 0x0
	0x0330E408 MOV W0, W22
	0x0330E40C STR V0, [X31]
	0x0330E410 STR X8, [X31 + 0x10]
	0x0330E414 BL 0x3310384
	0x0330E418 MOV X2, X0
	0x0330E41C STP X31, X31, [X19]
	0x0330E420 STR X31, [X19 + 0x10]
	0x0330E424 MOV X0, X19
	0x0330E428 MOV X1, X24
	0x0330E42C MOV X3, X20
	0x0330E430 LDP X20, X19, [X31 + 0x90]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10CF000
	005 Move W8, [X20+2849]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xDE8000
	012 Move X0, [X0+632]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2849], W8
	016 Move X0, [X19+24]
	017 Compare X0, 0
	018 JumpIfNotEqual {24}
	019 Move X8, 0xDE8000
	020 Move X8, [X8+632]
	021 Move X8, [X8]
	022 Move X8, [X8+184]
	023 Move X0, [X8]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return X0

Method: System.String get_StandardName()

Disassembly:
	0x0330E434 LDP X22, X21, [X31 + 0x80]
	0x0330E438 LDP X24, X23, [X31 + 0x70]
	0x0330E43C LDR X30, [X31 + 0x60]
	0x0330E440 MOV X4, X31
	0x0330E444 ADD X31, X31, 0xA0
	0x0330E448 B 0x332B02C
	0x0330E44C BL 0x1C16F20
	0x0330E450 SUB X31, X31, 0x40
	0x0330E454 STP X30, X23, [X31 + 0x10]
	0x0330E458 STP X22, X21, [X31 + 0x20]
	0x0330E45C STP X20, X19, [X31 + 0x30]
	0x0330E460 ADRP X22, 0x10CE000
	0x0330E464 LDRB W8, [X22 + 0xB42]
	0x0330E468 MOV X21, X2
	0x0330E46C MOV X20, X1
	0x0330E470 MOV X19, X0
	0x0330E474 TBNZ X8, 0x0, 0x330E498
	0x0330E478 ADRP X0, 0xDE6000
	0x0330E47C LDR X0, [X0 + 0x9F0]
	0x0330E480 BL 0x1C16CF4
	0x0330E484 ADRP X0, 0xDE7000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10CF000
	005 Move W8, [X20+2850]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xDE8000
	012 Move X0, [X0+632]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2850], W8
	016 Move X0, [X19+32]
	017 Compare X0, 0
	018 JumpIfNotEqual {24}
	019 Move X8, 0xDE8000
	020 Move X8, [X8+632]
	021 Move X8, [X8]
	022 Move X8, [X8+184]
	023 Move X0, [X8]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return X0

Method: System.String get_DaylightName()

Disassembly:
	0x0330E488 LDR X0, [X0 + 0x570]
	0x0330E48C BL 0x1C16CF4
	0x0330E490 MOVZ W8, 0x1
	0x0330E494 STRB W8, [X22 + 0xB42]
	0x0330E498 STP X31, X31, [X31]
	0x0330E49C CBZ X20, 0x330E4D8
	0x0330E4A0 ADRP X23, 0xDE7000
	0x0330E4A4 LDR X23, [X23 + 0x570]
	0x0330E4A8 LDR X22, [X20 + 0x20]
	0x0330E4AC LDR X0, [X23]
	0x0330E4B0 LDR W8, [X0 + 0xE0]
	0x0330E4B4 CBNZ W8, 0x330E4C0
	0x0330E4B8 BL 0x1C16DFC
	0x0330E4BC LDR X0, [X23]
	0x0330E4C0 LDR X8, [X0 + 0xB8]
	0x0330E4C4 MOV X0, X22
	0x0330E4C8 MOV X2, X31
	0x0330E4CC LDR X1, [X8]
	0x0330E4D0 BL 0x3394CD8
	0x0330E4D4 TBZ X0, 0x0, 0x330E4F4
	0x0330E4D8 MOV W0, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10CF000
	005 Move W8, [X20+2851]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xDE8000
	012 Move X0, [X0+632]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2851], W8
	016 Move X0, [X19+40]
	017 Compare X0, 0
	018 JumpIfNotEqual {24}
	019 Move X8, 0xDE8000
	020 Move X8, [X8+632]
	021 Move X8, [X8]
	022 Move X8, [X8+184]
	023 Move X0, [X8]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return X0

Method: System.TimeSpan get_BaseUtcOffset()

Disassembly:
	0x0330E4DC LDP X20, X19, [X31 + 0x30]
	0x0330E4E0 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.TimeZoneInfo/AdjustmentRule GetPreviousAdjustmentRule(System.TimeZoneInfo/AdjustmentRule rule, System.Nullable`1<System.Int32> ruleIndex)

Disassembly:
	0x0330E4E4 LDP X30, X23, [X31 + 0x10]
	0x0330E4E8 AND W0, W0, 0x1
	0x0330E4EC ADD X31, X31, 0x40
	0x0330E4F0 RET
	0x0330E4F4 LDR X0, [X23]
	0x0330E4F8 LDR X22, [X20 + 0x20]
	0x0330E4FC LDR W8, [X0 + 0xE0]
	0x0330E500 CBNZ W8, 0x330E50C
	0x0330E504 BL 0x1C16DFC
	0x0330E508 LDR X0, [X23]
	0x0330E50C LDR X8, [X0 + 0xB8]
	0x0330E510 MOV X0, X22
	0x0330E514 MOV X2, X31
	0x0330E518 LDR X1, [X8]
	0x0330E51C BL 0x3394CF0
	0x0330E520 TBZ X0, 0x0, 0x330E568
	0x0330E524 MOV X0, X20
	0x0330E528 BL 0x3310768
	0x0330E52C TBNZ X0, 0x0, 0x330E4D8
	0x0330E530 ADRP X8, 0xDE6000
	0x0330E534 LDR X21, [X21 + 0x8]
	0x0330E538 LDR X8, [X8 + 0x9F0]
	0x0330E53C STR X21, [X31 + 0x8]
	0x0330E540 LDR X0, [X8]
	0x0330E544 LDR X20, [X20 + 0x20]
	0x0330E548 LDR W8, [X0 + 0xE0]
	0x0330E54C CBNZ W8, 0x330E554
	0x0330E550 BL 0x1C16DFC
	0x0330E554 MOV X0, X21
	0x0330E558 MOV X1, X20
	0x0330E55C MOV X2, X31
	0x0330E560 BL 0x3362F18
	0x0330E564 B 0x330E5A8
	0x0330E568 MOV X0, X20
	0x0330E56C BL 0x3310650
	0x0330E570 TBNZ X0, 0x0, 0x330E4D8
	0x0330E574 ADRP X8, 0xDE6000
	0x0330E578 LDR X21, [X21]
	0x0330E57C LDR X8, [X8 + 0x9F0]
	0x0330E580 STR X21, [X31 + 0x8]
	0x0330E584 LDR X0, [X8]
	0x0330E588 LDR X20, [X20 + 0x20]
	0x0330E58C LDR W8, [X0 + 0xE0]
	0x0330E590 CBNZ W8, 0x330E598
	0x0330E594 BL 0x1C16DFC
	0x0330E598 MOV X0, X21
	0x0330E59C MOV X1, X20
	0x0330E5A0 MOV X2, X31
	0x0330E5A4 BL 0x3362E18
	0x0330E5A8 ADRP X22, 0xDE6000
	0x0330E5AC LDR X22, [X22 + 0x9F0]
	0x0330E5B0 MOV X20, X0
	0x0330E5B4 STR X20, [X31]
	0x0330E5B8 LDR X0, [X22]
	0x0330E5BC LDR W8, [X0 + 0xE0]
	0x0330E5C0 CBNZ W8, 0x330E5C8
	0x0330E5C4 BL 0x1C16DFC
	0x0330E5C8 MOV X0, X19
	0x0330E5CC MOV X1, X21
	0x0330E5D0 MOV X2, X31
	0x0330E5D4 BL 0x336328C
	0x0330E5D8 TBZ X0, 0x0, 0x330E600
	0x0330E5DC LDR X0, [X22]
	0x0330E5E0 LDR W8, [X0 + 0xE0]
	0x0330E5E4 CBNZ W8, 0x330E5EC
	0x0330E5E8 BL 0x1C16DFC
	0x0330E5EC MOV X0, X19
	0x0330E5F0 MOV X1, X20
	0x0330E5F4 MOV X2, X31
	0x0330E5F8 BL 0x3363148
	0x0330E5FC TBNZ X0, 0x0, 0x330E6A4
	0x0330E600 LDR X0, [X22]
	0x0330E604 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x10CF000
	007 Move W8, [X22+2852]
	008 Move X21, X2
	009 Move X19, X1
	010 Move X20, X0
	011 Move [X31+8], X2
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xDE9000
	017 Move X0, [X0+3832]
	018 Call 0x1C17CF4
	019 Move X0, 0xDE9000
	020 Move X0, [X0+3840]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2852], W8
	024 And W31, W21, 255
	025 Move X21, 0xDE9000
	026 Move X21, [X21+3840]
	027 Add X0, X31, 8
	028 Move X1, [X21]
	029 Call Nullable`1<Int32>.get_Value, X0
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X1, [X21]
	032 Add X0, X31, 8
	033 Call Nullable`1<Int32>.get_Value, X0
	034 Move X22, [X20+64]
	035 Compare X22, 0
	036 JumpIfEqual {71}
	037 Move W8, [X22+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X1, [X21]
	040 Add X0, X31, 8
	041 Call Nullable`1<Int32>.get_Value, X0
	042 Move W9, [X22+24]
	043 Subtract W8, W0, 1
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add X8, X22, W8
	046 Move X8, [X20+64]
	047 Compare X8, 0
	048 JumpIfEqual {71}
	049 Move X9, [X8+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X10, X31
	052 Add X11, X10, 1
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Add X11, X8, W11
	055 Move X11, [X11+32]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Add X10, X10, 1
	058 Add W11, W10, 1
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add X8, X8, X10
	062 Move X19, [X8+32]
	063 Move X0, X19
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Return X0
	070 Call 0x1C17F28
	071 Call 0x1C17F20

Method: System.TimeSpan GetUtcOffset(System.DateTime dateTime)

Disassembly:
	0x0330E608 CBNZ W8, 0x330E610
	0x0330E60C BL 0x1C16DFC
	0x0330E610 ADD X0, X31, 0x8
	0x0330E614 MOV X1, X31
	0x0330E618 BL 0x3361868
	0x0330E61C MOV W20, W0
	0x0330E620 ADD X0, X31, 0x0
	0x0330E624 MOV X1, X31
	0x0330E628 BL 0x3361868
	0x0330E62C CMP W20, W0
	0x0330E630 B.EQ 0x330E4D8
	0x0330E634 LDR X0, [X22]
	0x0330E638 LDR W8, [X0 + 0xE0]
	0x0330E63C CBNZ W8, 0x330E644
	0x0330E640 BL 0x1C16DFC
	0x0330E644 ADD X0, X31, 0x8
	0x0330E648 MOVZ W1, 0x1
	0x0330E64C MOV X2, X31
	0x0330E650 BL 0x3360604
	0x0330E654 MOV X21, X0
	0x0330E658 ADD X0, X31, 0x0
	0x0330E65C MOVZ W1, 0x1
	0x0330E660 MOV X2, X31
	0x0330E664 BL 0x3360604
	0x0330E668 MOV X20, X0
	0x0330E66C MOV X0, X19
	0x0330E670 MOV X1, X21
	0x0330E674 MOV X2, X31
	0x0330E678 BL 0x336328C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x10CF000
	007 Move X21, 0xE1A000
	008 Move W8, [X22+2853]
	009 Move X21, [X21+2616]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE1A000
	017 Move X0, [X0+2616]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2853], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X21]
	027 Move X8, [X0+184]
	028 Move X0, X20
	029 Move X1, X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X3, [X8+8]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move W2, 2
	036 Move X30, [X31+48]

Method: System.TimeSpan GetLocalUtcOffset(System.DateTime dateTime, System.TimeZoneInfoOptions flags)

Disassembly:
	0x0330E814 BL 0x1D2C690
	0x0330E818 BL 0x1990590
	0x0330E81C SUB X31, X31, 0xA0
	0x0330E820 STP X30, X27, [X31 + 0x50]
	0x0330E824 STP X26, X25, [X31 + 0x60]
	0x0330E828 STP X24, X23, [X31 + 0x70]
	0x0330E82C STP X22, X21, [X31 + 0x80]
	0x0330E830 STP X20, X19, [X31 + 0x90]
	0x0330E834 ADRP X21, 0x10CE000
	0x0330E838 LDRB W8, [X21 + 0xB3C]
	0x0330E83C MOV X20, X2
	0x0330E840 MOV X19, X1
	0x0330E844 STR X0, [X31 + 0x48]
	0x0330E848 TBNZ X8, 0x0, 0x330E878
	0x0330E84C ADRP X0, 0xDE6000
	0x0330E850 LDR X0, [X0 + 0x9F0]
	0x0330E854 BL 0x1C16CF4
	0x0330E858 ADRP X0, 0xDE7000
	0x0330E85C LDR X0, [X0 + 0x570]
	0x0330E860 BL 0x1C16CF4
	0x0330E864 ADRP X0, 0xE19000
	0x0330E868 LDR X0, [X0 + 0xA38]
	0x0330E86C BL 0x1C16CF4
	0x0330E870 MOVZ W8, 0x1
	0x0330E874 STRB W8, [X21 + 0xB3C]
	0x0330E878 STR X31, [X31 + 0x40]
	0x0330E87C CBZ X19, 0x330E90C
	0x0330E880 ADRP X24, 0xDE6000
	0x0330E884 LDR X24, [X24 + 0x9F0]
	0x0330E888 LDR X0, [X24]
	0x0330E88C LDR W8, [X0 + 0xE0]
	0x0330E890 CBNZ W8, 0x330E898
	0x0330E894 BL 0x1C16DFC
	0x0330E898 ADRP X25, 0xE19000
	0x0330E89C LDR X25, [X25 + 0xA38]
	0x0330E8A0 ADD X0, X31, 0x48
	0x0330E8A4 MOV X1, X31
	0x0330E8A8 BL 0x336139C
	0x0330E8AC CMP W0, 0x2

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x10CF000
	007 Move X21, 0xE1A000
	008 Move W8, [X22+2854]
	009 Move X21, [X21+2616]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE1A000
	017 Move X0, [X0+2616]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2854], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X21]
	027 Move X8, [X0+184]
	028 Move X21, [X8+8]
	029 Compare X21, 0
	030 JumpIfEqual {51}
	031 Move X22, [X21+16]
	032 Call 0x1C17D44
	033 Compare X22, 0
	034 JumpIfNotEqual {40}
	035 Move X0, X21
	036 Call CachedData.CreateLocal, X0
	037 Move X22, X0
	038 Compare X0, 0
	039 JumpIfEqual {51}
	040 Move X0, X22
	041 Move X1, X20
	042 Move W2, W19
	043 Move X3, X21
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Call TimeZoneInfo.GetUtcOffset, X0, X1, X2, X3
	050 Return X0
	051 Call 0x1C17F20

Method: System.TimeSpan GetUtcOffset(System.DateTime dateTime, System.TimeZoneInfoOptions flags)

Disassembly:
	0x0330E8E8 MOVZ W3, 0x1
	0x0330E8EC MOV W4, W31
	0x0330E8F0 MOV W5, W31
	0x0330E8F4 MOV W6, W31
	0x0330E8F8 MOV X7, X31
	0x0330E8FC STR X31, [X31 + 0x20]
	0x0330E900 BL 0x335F2FC
	0x0330E904 LDR X21, [X31 + 0x20]
	0x0330E908 B 0x330E9D4
	0x0330E90C MOV W0, W31
	0x0330E910 B 0x330EBDC
	0x0330E914 ADRP X26, 0xDE7000
	0x0330E918 LDR X26, [X26 + 0x570]
	0x0330E91C MOV X27, X19
	0x0330E920 LDR X21, [X27 + 0x20]!
	0x0330E924 LDR X0, [X26]
	0x0330E928 LDR W8, [X0 + 0xE0]
	0x0330E92C CBNZ W8, 0x330E938
	0x0330E930 BL 0x1C16DFC
	0x0330E934 LDR X0, [X26]
	0x0330E938 LDR X8, [X0 + 0xB8]
	0x0330E93C MOV X0, X21
	0x0330E940 MOV X2, X31
	0x0330E944 LDR X1, [X8]
	0x0330E948 BL 0x3394D08
	0x0330E94C MOV W22, W0
	0x0330E950 MOV X0, X19
	0x0330E954 BL 0x3310650
	0x0330E958 TBZ X0, 0x0, 0x330E9E8
	0x0330E95C LDR X0, [X24]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x10CF000
	008 Move X22, 0xE1A000
	009 Move W8, [X23+2855]
	010 Move X22, [X22+2616]
	011 Move W19, W2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xE1A000
	019 Move X0, [X0+2616]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+2855], W8
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X22]
	029 Move X8, [X0+184]
	030 Move X0, X21
	031 Move X1, X20
	032 Move W2, W19
	033 Move X3, [X8+8]
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Move X23, [X31+56]
	040 Call TimeZoneInfo.GetUtcOffset, X0, X1, X2, X3
	041 Return X0

Method: System.TimeSpan GetUtcOffset(System.DateTime dateTime, System.TimeZoneInfoOptions flags, System.TimeZoneInfo/CachedData cachedData)

Disassembly:
	0x0330E67C TBZ X0, 0x0, 0x330E6F8
	0x0330E680 LDR X0, [X22]
	0x0330E684 LDR W8, [X0 + 0xE0]
	0x0330E688 CBNZ W8, 0x330E690
	0x0330E68C BL 0x1C16DFC
	0x0330E690 MOV X0, X19
	0x0330E694 MOV X1, X20
	0x0330E698 MOV X2, X31
	0x0330E69C BL 0x3363148
	0x0330E6A0 TBZ X0, 0x0, 0x330E6F8
	0x0330E6A4 MOVZ W0, 0x1
	0x0330E6A8 B 0x330E4DC
	0x0330E6AC B 0x330E6C0
	0x0330E6B0 B 0x330E6C0
	0x0330E6B4 B 0x330E6C0
	0x0330E6B8 B 0x330E6C0
	0x0330E6BC B 0x330E6C0
	0x0330E6C0 MOV X20, X0
	0x0330E6C4 CMP W1, 0x1
	0x0330E6C8 B.NE 0x330E810
	0x0330E6CC MOV X0, X20
	0x0330E6D0 BL 0x3EB1AD0
	0x0330E6D4 MOV X20, X0
	0x0330E6D8 ADRP X0, 0xDED000
	0x0330E6DC LDR X0, [X0 + 0x760]
	0x0330E6E0 BL 0x1C16D08
	0x0330E6E4 LDR X8, [X20]
	0x0330E6E8 LDR X1, [X8]
	0x0330E6EC BL 0x1C17270
	0x0330E6F0 TBZ X0, 0x0, 0x330E768
	0x0330E6F4 BL 0x3EB1AE0
	0x0330E6F8 LDR X0, [X22]
	0x0330E6FC LDR W8, [X0 + 0xE0]
	0x0330E700 CBNZ W8, 0x330E708
	0x0330E704 BL 0x1C16DFC
	0x0330E708 ADD X0, X31, 0x8
	0x0330E70C MOVN W1, 0x0
	0x0330E710 MOV X2, X31
	0x0330E714 BL 0x3360604
	0x0330E718 MOV X21, X0
	0x0330E71C ADD X0, X31, 0x0
	0x0330E720 MOVN W1, 0x0
	0x0330E724 MOV X2, X31
	0x0330E728 BL 0x3360604
	0x0330E72C MOV X20, X0
	0x0330E730 MOV X0, X19
	0x0330E734 MOV X1, X21
	0x0330E738 MOV X2, X31
	0x0330E73C BL 0x336328C
	0x0330E740 TBZ X0, 0x0, 0x330E4D8
	0x0330E744 LDR X0, [X22]
	0x0330E748 LDR W8, [X0 + 0xE0]
	0x0330E74C CBNZ W8, 0x330E754
	0x0330E750 BL 0x1C16DFC
	0x0330E754 MOV X0, X19
	0x0330E758 MOV X1, X20
	0x0330E75C MOV X2, X31
	0x0330E760 BL 0x3363148
	0x0330E764 B 0x330E4DC
	0x0330E768 MOVZ W0, 0x8
	0x0330E76C BL 0x3EB1AF0
	0x0330E770 LDR X8, [X20]
	0x0330E774 STR X8, [X0]
	0x0330E778 ADRP X1, 0xBA6000
	0x0330E77C ADD X1, X1, 0xE58
	0x0330E780 MOV X2, X31
	0x0330E784 BL 0x3EB1B00
	0x0330E788 B 0x330E808
	0x0330E78C MOV X20, X0
	0x0330E790 BL 0x3EB1AE0
	0x0330E794 B 0x330E810
	0x0330E798 B 0x330E7AC
	0x0330E79C B 0x330E7AC
	0x0330E7A0 B 0x330E7AC
	0x0330E7A4 B 0x330E7AC
	0x0330E7A8 B 0x330E7AC
	0x0330E7AC MOV X20, X0
	0x0330E7B0 CMP W1, 0x1
	0x0330E7B4 B.NE 0x330E810
	0x0330E7B8 MOV X0, X20
	0x0330E7BC BL 0x3EB1AD0
	0x0330E7C0 MOV X19, X0
	0x0330E7C4 ADRP X0, 0xDED000
	0x0330E7C8 LDR X0, [X0 + 0x760]
	0x0330E7CC BL 0x1C16D08
	0x0330E7D0 LDR X8, [X19]
	0x0330E7D4 LDR X1, [X8]
	0x0330E7D8 BL 0x1C17270
	0x0330E7DC TBZ X0, 0x0, 0x330E7E8
	0x0330E7E0 BL 0x3EB1AE0
	0x0330E7E4 B 0x330E4D8
	0x0330E7E8 MOVZ W0, 0x8
	0x0330E7EC BL 0x3EB1AF0
	0x0330E7F0 LDR X8, [X19]
	0x0330E7F4 STR X8, [X0]
	0x0330E7F8 ADRP X1, 0xBA6000
	0x0330E7FC ADD X1, X1, 0xE58
	0x0330E800 MOV X2, X31
	0x0330E804 BL 0x3EB1B00
	0x0330E808 MOV X20, X0
	0x0330E80C BL 0x3EB1AE0
	0x0330E810 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x10CF000
	009 Move [X31+8], X1
	010 Move X22, 0xDE7000
	011 Move W8, [X23+2856]
	012 Move X22, [X22+2544]
	013 Move X21, X3
	014 Move W20, W2
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0xDE7000
	021 Move X0, [X0+2544]
	022 Call 0x1C17CF4
	023 Move X0, 0xE1A000
	024 Move X0, [X0+2616]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+2856], W8
	028 Move X0, [X22]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Add X0, X31, 8
	034 Move X1, X31
	035 Call DateTime.get_Kind, X0
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Compare X21, 0
	038 JumpIfEqual {112}
	039 Move X0, X21
	040 Move X1, X19
	041 Call CachedData.GetCorrespondingKind, X0, X1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X22, [X31+8]
	044 Move X23, [X21+16]
	045 Call 0x1C17D44
	046 Compare X23, 0
	047 JumpIfNotEqual {51}
	048 Move X0, X21
	049 Call CachedData.CreateLocal, X0
	050 Move X23, X0
	051 Move X21, 0xE1A000
	052 Move X21, [X21+2616]
	053 Move X0, [X21]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {59}
	057 Call 0x1C17DFC
	058 Move X0, [X21]
	059 Move X8, [X0+184]
	060 Move X0, X22
	061 Move X1, X23
	062 Move W3, W20
	063 Move X2, [X8]
	064 Call TimeZoneInfo.ConvertTime, X0, X1, X2, X3
	065 Move X0, [X22]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Add X0, X31, 8
	071 Move X1, X31
	072 Call DateTime.get_Kind, X0
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Compare X21, 0
	075 JumpIfEqual {112}
	076 Move X0, X21
	077 Move X1, X19
	078 Call CachedData.GetCorrespondingKind, X0, X1
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, [X19+48]
	081 Move X8, 0xE1A000
	082 Move X8, [X8+2616]
	083 Move X21, [X31+8]
	084 Move X0, [X8]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X0, X21
	090 Move X1, X19
	091 Move W2, W20
	092 Call TimeZoneInfo.GetUtcOffset, X0, X1, X2
	093 Move X8, 0xE1A000
	094 Move X8, [X8+2616]
	095 Move X20, [X31+8]
	096 Move X0, [X8]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move X0, X20
	102 Move X1, X19
	103 Call TimeZoneInfo.GetUtcOffsetFromUtc, X0, X1
	104 Move X20, [X31+48]
	105 Move X19, [X31+56]
	106 Move X22, [X31+32]
	107 Move X21, [X31+40]
	108 Move X30, [X31+16]
	109 Move X23, [X31+24]
	110 Add X31, X31, 64
	111 Return X0
	112 Call 0x1C17F20

Method: System.DateTime ConvertTime(System.DateTime dateTime, System.TimeZoneInfo sourceTimeZone, System.TimeZoneInfo destinationTimeZone, System.TimeZoneInfoOptions flags)

Disassembly:
	0x0330E9EC MOV X8, X27
	0x0330E9F0 TBNZ X22, 0x0, 0x330EA0C
	0x0330E9F4 LDR X0, [X26]
	0x0330E9F8 LDR W8, [X0 + 0xE0]
	0x0330E9FC CBNZ W8, 0x330EA08
	0x0330EA00 BL 0x1C16DFC
	0x0330EA04 LDR X0, [X26]
	0x0330EA08 LDR X8, [X0 + 0xB8]
	0x0330EA0C LDR X0, [X24]
	0x0330EA10 LDR X23, [X8]
	0x0330EA14 LDR W9, [X0 + 0xE0]
	0x0330EA18 CBNZ W9, 0x330EA20
	0x0330EA1C BL 0x1C16DFC
	0x0330EA20 MOV X0, X21
	0x0330EA24 MOV X1, X23
	0x0330EA28 MOV X2, X31
	0x0330EA2C BL 0x3362E18
	0x0330EA30 MOV X21, X0
	0x0330EA34 MOV X0, X19
	0x0330EA38 BL 0x3310768
	0x0330EA3C TBZ X0, 0x0, 0x330EAA4
	0x0330EA40 LDR X0, [X24]
	0x0330EA44 ADD X22, X20, 0x8
	0x0330EA48 LDR W8, [X0 + 0xE0]
	0x0330EA4C CBNZ W8, 0x330EA54
	0x0330EA50 BL 0x1C16DFC
	0x0330EA54 MOV X0, X22
	0x0330EA58 MOV X1, X31
	0x0330EA5C BL 0x3361868
	0x0330EA60 ADD W1, W0, 0x1
	0x0330EA64 ADD X0, X31, 0x20
	0x0330EA68 MOVZ W2, 0x1
	0x0330EA6C MOVZ W3, 0x1
	0x0330EA70 MOV W4, W31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x10CF000
	009 Move X23, 0xE1A000
	010 Move W8, [X24+2857]
	011 Move X23, [X23+2616]
	012 Move W19, W3
	013 Move X20, X2
	014 Move X21, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xE1A000
	021 Move X0, [X0+2616]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+2857], W8
	025 Move X0, [X23]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X23]
	031 Move X8, [X0+184]
	032 Move X0, X22
	033 Move X1, X21
	034 Move X2, X20
	035 Move X4, [X8+8]
	036 Move W3, W19
	037 Move X20, [X31+48]
	038 Move X19, [X31+56]
	039 Move X22, [X31+32]
	040 Move X21, [X31+40]
	041 Move X24, [X31+16]
	042 Move X23, [X31+24]
	043 Move X30, [X31+64]
	044 Call TimeZoneInfo.ConvertTime, X0, X1, X2, X3, X4
	045 Return X0

Method: System.DateTime ConvertTime(System.DateTime dateTime, System.TimeZoneInfo sourceTimeZone, System.TimeZoneInfo destinationTimeZone, System.TimeZoneInfoOptions flags, System.TimeZoneInfo/CachedData cachedData)

Disassembly:
	0x0330EC94 BL 0x1C16DFC
	0x0330EC98 LDR X8, [X23]
	0x0330EC9C ADRP X24, 0xE19000
	0x0330ECA0 LDR X8, [X8 + 0xB8]
	0x0330ECA4 LDR X24, [X24 + 0xA38]
	0x0330ECA8 CMP X22, X19
	0x0330ECAC B.GE 0x330ECB8
	0x0330ECB0 LDR X22, [X8 + 0x18]
	0x0330ECB4 B 0x330ED04
	0x0330ECB8 ADD X0, X8, 0x10
	0x0330ECBC MOV X1, X31
	0x0330ECC0 BL 0x3361708
	0x0330ECC4 CMP X0, X19
	0x0330ECC8 B.LE 0x330ECEC
	0x0330ECCC LDR X0, [X23]
	0x0330ECD0 LDR W8, [X0 + 0xE0]
	0x0330ECD4 CBNZ W8, 0x330ECE0
	0x0330ECD8 BL 0x1C16DFC
	0x0330ECDC LDR X0, [X23]
	0x0330ECE0 LDR X8, [X0 + 0xB8]
	0x0330ECE4 LDR X22, [X8 + 0x10]
	0x0330ECE8 B 0x330ED04
	0x0330ECEC ADD X0, X31, 0x8
	0x0330ECF0 MOV X1, X19
	0x0330ECF4 MOV X2, X31
	0x0330ECF8 STR X31, [X31 + 0x8]
	0x0330ECFC BL 0x335EEB0
	0x0330ED00 LDR X22, [X31 + 0x8]
	0x0330ED04 LDR X0, [X24]
	0x0330ED08 ADRP X24, 0xDE7000
	0x0330ED0C LDR W8, [X0 + 0xE0]
	0x0330ED10 LDR X24, [X24 + 0x570]
	0x0330ED14 CBNZ W8, 0x330ED1C
	0x0330ED18 BL 0x1C16DFC
	0x0330ED1C MOV X0, X22
	0x0330ED20 MOV X1, X21
	0x0330ED24 MOV X2, X20
	0x0330ED28 BL 0x3310304
	0x0330ED2C LDR X8, [X24]
	0x0330ED30 MOV X20, X0
	0x0330ED34 LDR W9, [X8 + 0xE0]
	0x0330ED38 CBNZ W9, 0x330ED44
	0x0330ED3C MOV X0, X8
	0x0330ED40 BL 0x1C16DFC
	0x0330ED44 LDR X0, [X23]
	0x0330ED48 LDR W8, [X0 + 0xE0]
	0x0330ED4C CBNZ W8, 0x330ED58
	0x0330ED50 BL 0x1C16DFC
	0x0330ED54 LDR X0, [X23]
	0x0330ED58 LDR X8, [X0 + 0xB8]
	0x0330ED5C MOV X1, X31
	0x0330ED60 ADD X19, X20, X19
	0x0330ED64 ADD X0, X8, 0x18
	0x0330ED68 BL 0x3361708
	0x0330ED6C LDR X8, [X23]
	0x0330ED70 MOV X20, X0
	0x0330ED74 LDR W9, [X8 + 0xE0]
	0x0330ED78 CBNZ W9, 0x330ED88
	0x0330ED7C MOV X0, X8
	0x0330ED80 BL 0x1C16DFC
	0x0330ED84 LDR X8, [X23]
	0x0330ED88 LDR X8, [X8 + 0xB8]
	0x0330ED8C CMP X19, X20
	0x0330ED90 B.LE 0x330ED9C
	0x0330ED94 LDR X0, [X8 + 0x18]
	0x0330ED98 B 0x330EDCC
	0x0330ED9C ADD X0, X8, 0x10
	0x0330EDA0 MOV X1, X31
	0x0330EDA4 BL 0x3361708
	0x0330EDA8 CMP X19, X0
	0x0330EDAC B.GE 0x330EDD4
	0x0330EDB0 LDR X0, [X23]
	0x0330EDB4 LDR W8, [X0 + 0xE0]
	0x0330EDB8 CBNZ W8, 0x330EDC4
	0x0330EDBC BL 0x1C16DFC
	0x0330EDC0 LDR X0, [X23]
	0x0330EDC4 LDR X8, [X0 + 0xB8]
	0x0330EDC8 LDR X0, [X8 + 0x10]
	0x0330EDCC STR X0, [X31 + 0x18]
	0x0330EDD0 B 0x330EDEC
	0x0330EDD4 ADD X0, X31, 0x18
	0x0330EDD8 MOV X1, X19
	0x0330EDDC MOV X2, X31
	0x0330EDE0 STR X31, [X31 + 0x18]
	0x0330EDE4 BL 0x335EEB0
	0x0330EDE8 LDR X0, [X31 + 0x18]
	0x0330EDEC LDP X20, X19, [X31 + 0x40]
	0x0330EDF0 LDP X22, X21, [X31 + 0x30]
	0x0330EDF4 LDP X24, X23, [X31 + 0x20]
	0x0330EDF8 LDR X30, [X31 + 0x10]
	0x0330EDFC ADD X31, X31, 0x50
	0x0330EE00 RET
	0x0330EE04 SUB X31, X31, 0x40
	0x0330EE08 STP X30, X23, [X31 + 0x10]
	0x0330EE0C STP X22, X21, [X31 + 0x20]
	0x0330EE10 STP X20, X19, [X31 + 0x30]
	0x0330EE14 ADRP X20, 0x10CE000
	0x0330EE18 STR X0, [X31 + 0x8]
	0x0330EE1C ADRP X21, 0xDE6000
	0x0330EE20 LDRB W8, [X20 + 0xB2B]
	0x0330EE24 LDR X21, [X21 + 0x9F0]
	0x0330EE28 MOV W19, W1
	0x0330EE2C TBNZ X8, 0x0, 0x330EE50
	0x0330EE30 ADRP X0, 0xDE6000
	0x0330EE34 LDR X0, [X0 + 0x9F0]
	0x0330EE38 BL 0x1C16CF4
	0x0330EE3C ADRP X0, 0xE19000
	0x0330EE40 LDR X0, [X0 + 0xA38]
	0x0330EE44 BL 0x1C16CF4
	0x0330EE48 MOVZ W8, 0x1
	0x0330EE4C STRB W8, [X20 + 0xB2B]
	0x0330EE50 LDR X0, [X21]
	0x0330EE54 LDR W8, [X0 + 0xE0]
	0x0330EE58 CBNZ W8, 0x330EE60
	0x0330EE5C BL 0x1C16DFC
	0x0330EE60 ADD X0, X31, 0x8
	0x0330EE64 MOV X1, X31
	0x0330EE68 BL 0x336139C
	0x0330EE6C CMP W0, 0x1
	0x0330EE70 B.NE 0x330EE7C
	0x0330EE74 LDR X0, [X31 + 0x8]
	0x0330EE78 B 0x330EEE0
	0x0330EE7C ADRP X23, 0xE19000
	0x0330EE80 LDR X23, [X23 + 0xA38]
	0x0330EE84 LDR X0, [X23]
	0x0330EE88 LDR W8, [X0 + 0xE0]
	0x0330EE8C CBNZ W8, 0x330EE98
	0x0330EE90 BL 0x1C16DFC
	0x0330EE94 LDR X0, [X23]
	0x0330EE98 LDR X8, [X0 + 0xB8]
	0x0330EE9C LDR X20, [X8 + 0x8]
	0x0330EEA0 CBZ X20, 0x330EEF4
	0x0330EEA4 LDR X21, [X31 + 0x8]
	0x0330EEA8 LDR X22, [X20 + 0x10]
	0x0330EEAC BL 0x1C16D44
	0x0330EEB0 CBNZ X22, 0x330EEC0
	0x0330EEB4 MOV X0, X20
	0x0330EEB8 BL 0x3313E58
	0x0330EEBC MOV X22, X0
	0x0330EEC0 LDR X8, [X23]
	0x0330EEC4 MOV X0, X21
	0x0330EEC8 MOV X1, X22
	0x0330EECC MOV W3, W19
	0x0330EED0 LDR X8, [X8 + 0xB8]
	0x0330EED4 MOV X4, X20
	0x0330EED8 LDR X2, [X8]
	0x0330EEDC BL 0x330DC94
	0x0330EEE0 LDP X20, X19, [X31 + 0x30]
	0x0330EEE4 LDP X22, X21, [X31 + 0x20]
	0x0330EEE8 LDP X30, X23, [X31 + 0x10]
	0x0330EEEC ADD X31, X31, 0x40
	0x0330EEF0 RET
	0x0330EEF4 BL 0x1C16F20
	0x0330EEF8 STR X30, [X31 - 0x20]!
	0x0330EEFC STP X20, X19, [X31 + 0x10]
	0x0330EF00 CBZ X1, 0x330EF38
	0x0330EF04 MOV X19, X1
	0x0330EF08 MOV X20, X0
	0x0330EF0C LDR X0, [X0 + 0x10]
	0x0330EF10 LDR X1, [X1 + 0x10]
	0x0330EF14 MOVZ W2, 0x5
	0x0330EF18 MOV X3, X31
	0x0330EF1C BL 0x3226C60
	0x0330EF20 TBZ X0, 0x0, 0x330EF38
	0x0330EF24 MOV X0, X20
	0x0330EF28 MOV X1, X19
	0x0330EF2C LDP X20, X19, [X31 + 0x10]
	0x0330EF30 LDR X30, [X31], #0x20
	0x0330EF34 B 0x330EF48
	0x0330EF38 LDP X20, X19, [X31 + 0x10]
	0x0330EF3C MOV W0, W31
	0x0330EF40 LDR X30, [X31], #0x20
	0x0330EF44 RET
	0x0330EF48 STP X30, X23, [X31 - 0x30]!
	0x0330EF4C STP X22, X21, [X31 + 0x10]
	0x0330EF50 STP X20, X19, [X31 + 0x20]
	0x0330EF54 ADRP X21, 0x10CE000
	0x0330EF58 LDRB W8, [X21 + 0xB2E]
	0x0330EF5C MOV X19, X1
	0x0330EF60 MOV X20, X0
	0x0330EF64 TBNZ X8, 0x0, 0x330EF7C
	0x0330EF68 ADRP X0, 0xDE7000
	0x0330EF6C LDR X0, [X0 + 0x570]
	0x0330EF70 BL 0x1C16CF4
	0x0330EF74 MOVZ W8, 0x1
	0x0330EF78 STRB W8, [X21 + 0xB2E]
	0x0330EF7C CBZ X19, 0x330F060
	0x0330EF80 ADRP X8, 0xDE7000
	0x0330EF84 LDR X8, [X8 + 0x570]
	0x0330EF88 LDR X21, [X20 + 0x30]
	0x0330EF8C LDR X22, [X19 + 0x30]
	0x0330EF90 LDR X0, [X8]
	0x0330EF94 LDR W8, [X0 + 0xE0]
	0x0330EF98 CBNZ W8, 0x330EFA0
	0x0330EF9C BL 0x1C16DFC
	0x0330EFA0 MOV X0, X21
	0x0330EFA4 MOV X1, X22
	0x0330EFA8 MOV X2, X31
	0x0330EFAC BL 0x3394CE4
	0x0330EFB0 TBNZ X0, 0x0, 0x330F048
	0x0330EFB4 LDRB W8, [X20 + 0x38]
	0x0330EFB8 LDRB W9, [X19 + 0x38]
	0x0330EFBC CMP W8, W9
	0x0330EFC0 B.NE 0x330F048
	0x0330EFC4 LDR X20, [X20 + 0x40]
	0x0330EFC8 LDR X19, [X19 + 0x40]
	0x0330EFCC ORR X8, X20, X19, 0x0
	0x0330EFD0 CBNZ X8, 0x330EFDC
	0x0330EFD4 MOVZ W0, 0x1
	0x0330EFD8 B 0x330F04C
	0x0330EFDC MOV W0, W31
	0x0330EFE0 CBZ X20, 0x330F04C
	0x0330EFE4 CBZ X19, 0x330F04C
	0x0330EFE8 LDR W8, [X20 + 0x18]
	0x0330EFEC LDR W9, [X19 + 0x18]
	0x0330EFF0 CMP W8, W9
	0x0330EFF4 B.NE 0x330F048
	0x0330EFF8 CMP W8, 0x1
	0x0330EFFC B.LT 0x330EFD4
	0x0330F000 MOV X21, X31
	0x0330F004 ADD X22, X19, 0x20
	0x0330F008 ADD X23, X20, 0x20
	0x0330F00C CMP W21, W8
	0x0330F010 B.CS 0x330F0A4
	0x0330F014 LDR W8, [X19 + 0x18]
	0x0330F018 CMP W21, W8
	0x0330F01C B.CS 0x330F0A4
	0x0330F020 LDR X0, [X23, X21, LSL #3]
	0x0330F024 CBZ X0, 0x330F0A8
	0x0330F028 LDR X1, [X22, X21, LSL #3]
	0x0330F02C BL 0x330F1B0
	0x0330F030 TBZ X0, 0x0, 0x330F04C
	0x0330F034 LDR W8, [X20 + 0x18]
	0x0330F038 ADD X21, X21, 0x1
	0x0330F03C CMP W21, W8
	0x0330F040 B.LT 0x330F00C
	0x0330F044 B 0x330F04C
	0x0330F048 MOV W0, W31
	0x0330F04C LDP X20, X19, [X31 + 0x20]
	0x0330F050 LDP X22, X21, [X31 + 0x10]
	0x0330F054 AND W0, W0, 0x1
	0x0330F058 LDP X30, X23, [X31], #0x30
	0x0330F05C RET
	0x0330F060 ADRP X0, 0xDE9000
	0x0330F064 LDR X0, [X0 + 0x528]
	0x0330F068 BL 0x1C16D08
	0x0330F06C BL 0x1C16F10
	0x0330F070 MOV X19, X0
	0x0330F074 ADRP X0, 0xE0E000
	0x0330F078 LDR X0, [X0 + 0x928]
	0x0330F07C BL 0x1C16D08
	0x0330F080 MOV X1, X0
	0x0330F084 MOV X0, X19
	0x0330F088 BL 0x330E100
	0x0330F08C ADRP X0, 0xE18000
	0x0330F090 LDR X0, [X0 + 0xC58]
	0x0330F094 BL 0x1C16D08
	0x0330F098 MOV X1, X0
	0x0330F09C MOV X0, X19
	0x0330F0A0 BL 0x1C16DEC
	0x0330F0A4 BL 0x1C16F28
	0x0330F0A8 BL 0x1C16F20
	0x0330F0AC STP X30, X21, [X31 - 0x20]!
	0x0330F0B0 STP X20, X19, [X31 + 0x10]
	0x0330F0B4 ADRP X21, 0x10CD000
	0x0330F0B8 LDRB W8, [X21 + 0xB2C]
	0x0330F0BC MOV X20, X1
	0x0330F0C0 MOV X19, X0
	0x0330F0C4 TBNZ X8, 0x0, 0x330F0DC
	0x0330F0C8 ADRP X0, 0xE18000
	0x0330F0CC LDR X0, [X0 + 0xA38]
	0x0330F0D0 BL 0x1C16CF4
	0x0330F0D4 MOVZ W8, 0x1
	0x0330F0D8 STRB W8, [X21 + 0xB2C]
	0x0330F0DC CBZ X20, 0x330F0FC
	0x0330F0E0 ADRP X8, 0xE18000
	0x0330F0E4 LDR X8, [X8 + 0xA38]
	0x0330F0E8 LDR X9, [X20]
	0x0330F0EC LDR X8, [X8]
	0x0330F0F0 CMP X9, X8
	0x0330F0F4 CSEL X1, X20, X31, EQ
	0x0330F0F8 B 0x330F100
	0x0330F0FC MOV X1, X31

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+152], X0
	003 Move [X31+160], X30
	004 Move [X31+176], X28
	005 Move [X31+184], X27
	006 Move [X31+192], X26
	007 Move [X31+200], X25
	008 Move [X31+208], X24
	009 Move [X31+216], X23
	010 Move [X31+224], X22
	011 Move [X31+232], X21
	012 Move [X31+240], X20
	013 Move [X31+248], X19
	014 Move X21, 0x10CF000
	015 Move W8, [X21+2858]
	016 Move X20, X4
	017 Move W23, W3
	018 Move X19, X2
	019 Move X24, X1
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0xDE7000
	025 Move X0, [X0+2544]
	026 Call 0x1C17CF4
	027 Move X0, 0xDE8000
	028 Move X0, [X0+1392]
	029 Call 0x1C17CF4
	030 Move X0, 0xE1A000
	031 Move X0, [X0+2616]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+2858], W8
	035 Move [X31+144], X31
	036 Move [X31+140], W31
	037 Move [X31+128], X31
	038 Compare X24, 0
	039 JumpIfEqual {273}
	040 Compare X19, 0
	041 JumpIfEqual {280}
	042 Compare X20, 0
	043 JumpIfEqual {297}
	044 Move X27, 0xDE7000
	045 Move X27, [X27+2544]
	046 Move X0, X20
	047 Move X1, X24
	048 Call CachedData.GetCorrespondingKind, X0, X1
	049 Move W21, W0
	050 Move TEMP, X23
	051 And TEMP, TEMP, 2
	052 Compare TEMP, 2
	053 JumpIfEqual {73}
	054 Move X0, [X27]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Add X0, X31, 152
	060 Move X1, X31
	061 Call DateTime.get_Kind, X0
	062 Compare W0, 0
	063 JumpIfEqual {73}
	064 Move X0, [X27]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Add X0, X31, 152
	070 Move X1, X31
	071 Call DateTime.get_Kind, X0
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X1, [X31+152]
	074 Move X28, 0xDE8000
	075 Move X28, [X28+1392]
	076 Add X3, X31, 144
	077 Move X0, X24
	078 Move W2, W31
	079 Call TimeZoneInfo.GetAdjustmentRuleForTime, X0, X1, X2, X3
	080 Move X22, [X24+48]
	081 Compare X0, 0
	082 JumpIfEqual {190}
	083 Move X25, X0
	084 Move X0, [X28]
	085 Move X26, [X25+88]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, X22
	091 Move X1, X26
	092 Move X2, X31
	093 Call TimeSpan.op_Addition, X0, X1
	094 Move X22, X0
	095 Move X0, X25
	096 Call AdjustmentRule.get_HasDaylightSaving, X0
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {190}
	101 Move X0, [X27]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Add X0, X31, 152
	107 Move X1, X31
	108 Call DateTime.get_Year, X0
	109 Move X3, [X31+144]
	110 Move W1, W0
	111 Add X8, X31, 64
	112 Move X0, X24
	113 Move X2, X25
	114 Call TimeZoneInfo.GetDaylightTime, X0, X1, X2, X3
	115 Move V0, [X31+4]
	116 Move X8, [X31+80]
	117 Move [X31+6], V0
	118 Move [X31+112], X8
	119 Move TEMP, X23
	120 And TEMP, TEMP, 2
	121 Compare TEMP, 2
	122 JumpIfEqual {147}
	123 Move X9, 0xE1A000
	124 Move V0, [X31+6]
	125 Move X8, [X31+112]
	126 Move X9, [X9+2616]
	127 Move X23, [X31+152]
	128 Move [X31+4], V0
	129 Move [X31+80], X8
	130 Move X0, [X9]
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {135}
	134 Call 0x1C17DFC
	135 Move V0, [X31+4]
	136 Move X8, [X31+80]
	137 Add X2, X31, 32
	138 Move X0, X23
	139 Move X1, X25
	140 Move [X31+2], V0
	141 Move [X31+48], X8
	142 Call TimeZoneInfo.GetIsInvalidTime, X0, X1, X2
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfEqual {309}
	147 Move X9, 0xE1A000
	148 Move V0, [X31+6]
	149 Move X8, [X31+112]
	150 Move X9, [X9+2616]
	151 Move X23, [X31+152]
	152 Move [X31+4], V0
	153 Move [X31+80], X8
	154 Move X0, [X9]
	155 Move W8, [X0+224]
	156 Compare W8, 0
	157 JumpIfNotEqual {159}
	158 Call 0x1C17DFC
	159 Move V0, [X31+4]
	160 Move X8, [X31+80]
	161 Add X2, X31, 0
	162 Move X0, X23
	163 Move X1, X25
	164 Move [X31], V0
	165 Move [X31+16], X8
	166 Call TimeZoneInfo.GetIsDaylightSavings, X0, X1, X2, X3
	167 Move TEMP, X0
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfNotEqual {173}
	171 Move X0, [X28]
	172 Add X8, X25, 32
	173 Move X0, [X28]
	174 Move W8, [X0+224]
	175 Compare W8, 0
	176 JumpIfNotEqual {179}
	177 Call 0x1C17DFC
	178 Move X0, [X28]
	179 Move X8, [X0+184]
	180 Move W9, [X0+224]
	181 Move X23, [X8]
	182 Compare W9, 0
	183 JumpIfNotEqual {185}
	184 Call 0x1C17DFC
	185 Move X0, X22
	186 Move X1, X23
	187 Move X2, X31
	188 Call TimeSpan.op_Addition, X0, X1
	189 Move X22, X0
	190 Move X0, X20
	191 Move X1, X19
	192 Call CachedData.GetCorrespondingKind, X0, X1
	193 Move X8, [X27]
	194 Move W20, W0
	195 Move W9, [X8+224]
	196 Compare W9, 0
	197 JumpIfNotEqual {200}
	198 Move X0, X8
	199 Call 0x1C17DFC
	200 Add X0, X31, 152
	201 Move X1, X31
	202 Call DateTime.get_Kind, X0
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Compare W21, 0
	205 JumpIfEqual {210}
	206 Compare W0, 0
	207 JumpIfEqual {210}
	208 Move X8, [X31+152]
	209 Move [X31+168], X8
	210 Move X0, [X27]
	211 Move W8, [X0+224]
	212 Compare W8, 0
	213 JumpIfNotEqual {215}
	214 Call 0x1C17DFC
	215 Add X0, X31, 152
	216 Move X1, X31
	217 Call DateTime.get_Ticks, X0
	218 Move X8, [X28]
	219 Move X21, X0
	220 Move W9, [X8+224]
	221 Compare W9, 0
	222 JumpIfNotEqual {225}
	223 Move X0, X8
	224 Call 0x1C17DFC
	225 Move X8, 0xE1A000
	226 Move X8, [X8+2616]
	227 Move X0, [X8]
	228 Move W8, [X0+224]
	229 Compare W8, 0
	230 JumpIfNotEqual {232}
	231 Call 0x1C17DFC
	232 Subtract X0, X21, X22
	233 Add X2, X31, 140
	234 Move X1, X19
	235 Call TimeZoneInfo.ConvertUtcToTimeZone, X0, X1, X2
	236 Move X8, [X27]
	237 Move [X31+128], X0
	238 Move W9, [X8+224]
	239 Compare W9, 0
	240 JumpIfNotEqual {243}
	241 Move X0, X8
	242 Call 0x1C17DFC
	243 Add X0, X31, 128
	244 Move X1, X31
	245 Call DateTime.get_Ticks, X0
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move X1, X0
	248 Move W3, [X31+140]
	249 Add X0, X31, 168
	250 Move W2, 2
	251 Move X4, X31
	252 Move [X31+168], X31
	253 Call DateTime..ctor, X0, X1, X2, X3
	254 Add X0, X31, 168
	255 Move W2, W20
	256 Move X3, X31
	257 Move [X31+168], X31
	258 Call DateTime..ctor, X0, X1, X2
	259 Move X30, [X31+160]
	260 Move X0, [X31+168]
	261 Move X20, [X31+240]
	262 Move X19, [X31+248]
	263 Move X22, [X31+224]
	264 Move X21, [X31+232]
	265 Move X24, [X31+208]
	266 Move X23, [X31+216]
	267 Move X26, [X31+192]
	268 Move X25, [X31+200]
	269 Move X28, [X31+176]
	270 Move X27, [X31+184]
	271 Add X31, X31, 256
	272 Return X0
	273 Move X0, 0xDEA000
	274 Move X0, [X0+1320]
	275 Call 0x1C17D08
	276 Call 0x1C17F10
	277 Move X19, X0
	278 Move X0, 0xE19000
	279 Move X0, [X0+3104]
	280 Move X0, 0xDEA000
	281 Move X0, [X0+1320]
	282 Call 0x1C17D08
	283 Call 0x1C17F10
	284 Move X19, X0
	285 Move X0, 0xE19000
	286 Move X0, [X0+3112]
	287 Call 0x1C17D08
	288 Move X1, X0
	289 Move X0, X19
	290 Call ArgumentNullException..ctor, X0, X1
	291 Move X0, 0xE19000
	292 Move X0, [X0+3120]
	293 Call 0x1C17D08
	294 Move X1, X0
	295 Move X0, X19
	296 Call 0x1C17DEC
	297 Call 0x1C17F20
	298 Move X0, 0xDED000
	299 Move X0, [X0+1400]
	300 Call 0x1C17D08
	301 Call 0x1C17F10
	302 Move X19, X0
	303 Move X0, 0xE19000
	304 Move X0, [X0+3128]
	305 Call 0x1C17D08
	306 Move X20, X0
	307 Move X0, 0xE19000
	308 Move X0, [X0+3104]
	309 Move X0, 0xDED000
	310 Move X0, [X0+1400]
	311 Call 0x1C17D08
	312 Call 0x1C17F10
	313 Move X19, X0
	314 Move X0, 0xE19000
	315 Move X0, [X0+3136]
	316 Call 0x1C17D08
	317 Move X20, X0
	318 Move X0, 0xE19000
	319 Move X0, [X0+3144]
	320 Call 0x1C17D08
	321 Move X2, X0
	322 Move X0, X19
	323 Move X1, X20
	324 Call ArgumentException..ctor, X0, X1, X2

Method: System.DateTime ConvertTimeToUtc(System.DateTime dateTime, System.TimeZoneInfoOptions flags)

Disassembly:
	0x0330FE04 STP X22, X21, [X31 + 0x50]
	0x0330FE08 STP X20, X19, [X31 + 0x60]
	0x0330FE0C ADRP X23, 0x10CD000
	0x0330FE10 LDRB W8, [X23 + 0xB37]
	0x0330FE14 MOV X19, X3
	0x0330FE18 MOV W20, W2
	0x0330FE1C MOV X22, X1
	0x0330FE20 MOV X21, X0
	0x0330FE24 STR X1, [X31 + 0x18]
	0x0330FE28 TBNZ X8, 0x0, 0x330FE4C
	0x0330FE2C ADRP X0, 0xDE5000
	0x0330FE30 LDR X0, [X0 + 0x9F0]
	0x0330FE34 BL 0x1C16CF4
	0x0330FE38 ADRP X0, 0xDE5000
	0x0330FE3C LDR X0, [X0 + 0x470]
	0x0330FE40 BL 0x1C16CF4
	0x0330FE44 MOVZ W8, 0x1
	0x0330FE48 STRB W8, [X23 + 0xB37]
	0x0330FE4C STR X31, [X31 + 0x10]
	0x0330FE50 LDR X8, [X21 + 0x40]
	0x0330FE54 CBZ X8, 0x330FF50
	0x0330FE58 LDR X8, [X8 + 0x18]
	0x0330FE5C CBZ X8, 0x330FF50
	0x0330FE60 ADRP X8, 0xDE5000
	0x0330FE64 LDR X8, [X8 + 0x9F0]
	0x0330FE68 TBZ X20, 0x0, 0x330FE9C
	0x0330FE6C LDR X0, [X8]
	0x0330FE70 LDR X23, [X21 + 0x30]
	0x0330FE74 LDR W8, [X0 + 0xE0]
	0x0330FE78 CBNZ W8, 0x330FE80
	0x0330FE7C BL 0x1C16DFC
	0x0330FE80 MOV X0, X22
	0x0330FE84 MOV X1, X23
	0x0330FE88 MOV X2, X31
	0x0330FE8C BL 0x3362E18
	0x0330FE90 STR X0, [X31 + 0x10]
	0x0330FE94 ADD X0, X31, 0x10
	0x0330FE98 B 0x330FEB0
	0x0330FE9C LDR X0, [X8]
	0x0330FEA0 LDR W8, [X0 + 0xE0]
	0x0330FEA4 CBNZ W8, 0x330FEAC
	0x0330FEA8 BL 0x1C16DFC
	0x0330FEAC ADD X0, X31, 0x18
	0x0330FEB0 MOV X1, X31
	0x0330FEB4 BL 0x3360EE4
	0x0330FEB8 LDR X8, [X21 + 0x40]
	0x0330FEBC CBZ X8, 0x330FFA4
	0x0330FEC0 LDR W8, [X8 + 0x18]
	0x0330FEC4 SUBS W25, W8, 0x1
	0x0330FEC8 B.MI 0x330FF50
	0x0330FECC MOV X22, X0
	0x0330FED0 MOV W26, W31
	0x0330FED4 LDR X8, [X21 + 0x40]
	0x0330FED8 CBZ X8, 0x330FFA4
	0x0330FEDC LDR W9, [X8 + 0x18]
	0x0330FEE0 SUB W10, W25, W26
	0x0330FEE4 ADD W24, W26, W10, 0x1, ASR
	0x0330FEE8 CMP W24, W9
	0x0330FEEC B.CS 0x330FFA0
	0x0330FEF0 ADD X10, X8, W24, 0x3, SXTW
	0x0330FEF4 LDR X23, [X10 + 0x20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x10CE000
	009 Move [X31+8], X0
	010 Move X21, 0xDE6000
	011 Move W8, [X20+2859]
	012 Move X21, [X21+2544]
	013 Move W19, W1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xDE6000
	019 Move X0, [X0+2544]
	020 Call 0x1C17CF4
	021 Move X0, 0xE19000
	022 Move X0, [X0+2616]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+2859], W8
	026 Move X0, [X21]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Add X0, X31, 8
	032 Move X1, X31
	033 Call DateTime.get_Kind, X0
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X0, [X31+8]
	036 Move X23, 0xE19000
	037 Move X23, [X23+2616]
	038 Move X0, [X23]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X23]
	044 Move X8, [X0+184]
	045 Move X20, [X8+8]
	046 Compare X20, 0
	047 JumpIfEqual {72}
	048 Move X21, [X31+8]
	049 Move X22, [X20+16]
	050 Call 0x1C17D44
	051 Compare X22, 0
	052 JumpIfNotEqual {56}
	053 Move X0, X20
	054 Call CachedData.CreateLocal, X0
	055 Move X22, X0
	056 Move X8, [X23]
	057 Move X0, X21
	058 Move X1, X22
	059 Move W3, W19
	060 Move X8, [X8+184]
	061 Move X4, X20
	062 Move X2, [X8]
	063 Call TimeZoneInfo.ConvertTime, X0, X1, X2, X3, X4
	064 Move X20, [X31+48]
	065 Move X19, [X31+56]
	066 Move X22, [X31+32]
	067 Move X21, [X31+40]
	068 Move X30, [X31+16]
	069 Move X23, [X31+24]
	070 Add X31, X31, 64
	071 Return X0
	072 Call 0x1C17F20

Method: System.Boolean Equals(System.TimeZoneInfo other)

Disassembly:
	0x0330FEF8 SUBS W27, W24, 0x1
	0x0330FEFC MOV X2, X23
	0x0330FF00 B.LT 0x330FF14
	0x0330FF04 CMP W27, W9
	0x0330FF08 B.CS 0x330FFA0
	0x0330FF0C ADD X8, X8, W27, 0x3, UXTW
	0x0330FF10 LDR X2, [X8 + 0x20]
	0x0330FF14 LDR X3, [X31 + 0x18]
	0x0330FF18 AND W5, W20, 0x1
	0x0330FF1C MOV X0, X21
	0x0330FF20 MOV X1, X23
	0x0330FF24 MOV X4, X22
	0x0330FF28 BL 0x330FFA8
	0x0330FF2C CBZ W0, 0x330FF78
	0x0330FF30 TBZ X0, 0x1F, 0x330FF44
	0x0330FF34 ADD W26, W24, 0x1
	0x0330FF38 CMP W25, W26
	0x0330FF3C B.GE 0x330FED4
	0x0330FF40 B 0x330FF50
	0x0330FF44 CMP W27, W26

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {22}
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, [X0+16]
	009 Move X1, [X1+16]
	010 Move W2, 5
	011 Move X3, X31
	012 Call String.Equals, X0, X1, X2
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {22}
	017 Move X0, X20
	018 Move X1, X19
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move W0, W31
	025 Move X30, [X31+32]
	026 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x033100AC BL 0x1C16DFC
	0x033100B0 ADD X0, X31, 0x8
	0x033100B4 MOV X1, X31
	0x033100B8 BL 0x336139C
	0x033100BC CMP W0, 0x1
	0x033100C0 B.NE 0x331010C
	0x033100C4 TBNZ X23, 0x0, 0x33100E4
	0x033100C8 LDR X2, [X20 + 0x20]
	0x033100CC LDR X3, [X20 + 0x58]
	0x033100D0 MOVZ W4, 0x1
	0x033100D4 MOV X0, X22
	0x033100D8 MOV X1, X19
	0x033100DC BL 0x331015C
	0x033100E0 MOV X19, X0
	0x033100E4 LDR X0, [X26]
	0x033100E8 LDR X20, [X20 + 0x18]
	0x033100EC LDR W8, [X0 + 0xE0]
	0x033100F0 CBNZ W8, 0x33100F8
	0x033100F4 BL 0x1C16DFC
	0x033100F8 MOV X0, X19
	0x033100FC MOV X1, X20
	0x03310100 B 0x3310128
	0x03310104 MOVZ W0, 0x1
	0x03310108 B 0x3310138
	0x0331010C LDR X0, [X26]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10CD000
	006 Move W8, [X21+2860]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xE18000
	014 Move X0, [X0+2616]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2860], W8
	018 Compare X20, 0
	019 JumpIfEqual {26}
	020 Move X8, 0xE18000
	021 Move X8, [X8+2616]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CSEL not yet implemented."
	026 Move X1, X31
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call TimeZoneInfo.Equals, X0, X1
	033 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03310110 LDR X19, [X20 + 0x18]
	0x03310114 LDR W8, [X0 + 0xE0]
	0x03310118 CBNZ W8, 0x3310120
	0x0331011C BL 0x1C16DFC
	0x03310120 MOV X0, X21
	0x03310124 MOV X1, X19
	0x03310128 MOV X2, X31
	0x0331012C BL 0x33631B4
	0x03310130 AND W8, W0, 0x1
	0x03310134 SUB W0, W8, 0x1
	0x03310138 LDP X20, X19, [X31 + 0x40]
	0x0331013C LDP X22, X21, [X31 + 0x30]
	0x03310140 LDP X24, X23, [X31 + 0x20]
	0x03310144 LDP X26, X25, [X31 + 0x10]
	0x03310148 LDR X30, [X31], #0x50
	0x0331014C RET
	0x03310150 BL 0x1C16F20
	0x03310154 MOVZ W4, 0x1
	0x03310158 B 0x331015C
	0x0331015C SUB X31, X31, 0x50
	0x03310160 STP X1, X30, [X31 + 0x8]
	0x03310164 STP X24, X23, [X31 + 0x20]
	0x03310168 STP X22, X21, [X31 + 0x30]
	0x0331016C STP X20, X19, [X31 + 0x40]
	0x03310170 ADRP X23, 0x10CC000
	0x03310174 ADRP X24, 0xDE5000
	0x03310178 LDRB W8, [X23 + 0xB39]
	0x0331017C LDR X24, [X24 + 0x570]
	0x03310180 MOV W19, W4
	0x03310184 MOV X20, X3
	0x03310188 MOV X21, X2
	0x0331018C MOV X22, X0
	0x03310190 TBNZ X8, 0x0, 0x33101B4
	0x03310194 ADRP X0, 0xDE4000
	0x03310198 LDR X0, [X0 + 0x9F0]
	0x0331019C BL 0x1C16CF4
	0x033101A0 ADRP X0, 0xDE5000
	0x033101A4 LDR X0, [X0 + 0x570]
	0x033101A8 BL 0x1C16CF4
	0x033101AC MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10CD000
	006 Move X20, 0xDF1000
	007 Move W8, [X21+2861]
	008 Move X20, [X20+752]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDF1000
	015 Move X0, [X0+752]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2861], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X21, 0x10CD000
	025 Move W8, [X21+2342]
	026 Compare W8, 0
	027 JumpIfNotEqual {33}
	028 Move X0, 0xDF1000
	029 Move X0, [X0+752]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+2342], W8
	033 Move X0, [X20]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X20]
	039 Move X8, [X0+184]
	040 Move X0, [X8+24]
	041 Compare X0, 0
	042 JumpIfEqual {52}
	043 Move X8, [X0]
	044 Move X1, [X19+16]
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X3, [X8+504]
	048 Move X2, [X8+512]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 CallNoReturn X3
	052 Call 0x1C17F20

Method: System.Boolean HasSameRules(System.TimeZoneInfo other)

Disassembly:
	0x0330FF48 MOV W25, W27
	0x0330FF4C B.GE 0x330FED4
	0x0330FF50 MOV X23, X31
	0x0330FF54 STR X31, [X19]
	0x0330FF58 MOV X0, X23
	0x0330FF5C LDP X20, X19, [X31 + 0x60]
	0x0330FF60 LDP X22, X21, [X31 + 0x50]
	0x0330FF64 LDP X24, X23, [X31 + 0x40]
	0x0330FF68 LDP X26, X25, [X31 + 0x30]
	0x0330FF6C LDP X30, X27, [X31 + 0x20]
	0x0330FF70 ADD X31, X31, 0x70
	0x0330FF74 RET
	0x0330FF78 ADRP X8, 0xDE5000
	0x0330FF7C LDR X8, [X8 + 0x470]
	0x0330FF80 ADD X0, X31, 0x8
	0x0330FF84 MOV W1, W24
	0x0330FF88 STR X31, [X31 + 0x8]
	0x0330FF8C LDR X2, [X8]
	0x0330FF90 BL 0x24341FC
	0x0330FF94 LDR X8, [X31 + 0x8]
	0x0330FF98 STR X8, [X19]
	0x0330FF9C B 0x330FF58
	0x0330FFA0 BL 0x1C16F28
	0x0330FFA4 BL 0x1C16F20
	0x0330FFA8 STR X30, [X31 - 0x50]!
	0x0330FFAC STP X26, X25, [X31 + 0x10]
	0x0330FFB0 STP X24, X23, [X31 + 0x20]
	0x0330FFB4 STP X22, X21, [X31 + 0x30]
	0x0330FFB8 STP X20, X19, [X31 + 0x40]
	0x0330FFBC ADRP X25, 0x10CD000
	0x0330FFC0 LDRB W8, [X25 + 0xB38]
	0x0330FFC4 MOV W23, W5
	0x0330FFC8 MOV X21, X4
	0x0330FFCC MOV X19, X3
	0x0330FFD0 MOV X24, X2
	0x0330FFD4 MOV X20, X1
	0x0330FFD8 MOV X22, X0
	0x0330FFDC TBNZ X8, 0x0, 0x330FFF4
	0x0330FFE0 ADRP X0, 0xDE5000
	0x0330FFE4 LDR X0, [X0 + 0x9F0]
	0x0330FFE8 BL 0x1C16CF4
	0x0330FFEC MOVZ W8, 0x1
	0x0330FFF0 STRB W8, [X25 + 0xB38]
	0x0330FFF4 CBZ X20, 0x3310150
	0x0330FFF8 ADRP X26, 0xDE5000
	0x0330FFFC LDR X26, [X26 + 0x9F0]
	0x03310000 LDR X8, [X20 + 0x10]
	0x03310004 LDR X0, [X26]
	0x03310008 STR X8, [X31 + 0x8]
	0x0331000C LDR W8, [X0 + 0xE0]
	0x03310010 CBNZ W8, 0x3310018
	0x03310014 BL 0x1C16DFC
	0x03310018 ADD X0, X31, 0x8
	0x0331001C MOV X1, X31
	0x03310020 BL 0x336139C
	0x03310024 CMP W0, 0x1
	0x03310028 B.NE 0x3310070
	0x0331002C MOV X25, X19
	0x03310030 TBNZ X23, 0x0, 0x3310054
	0x03310034 CBZ X24, 0x3310150
	0x03310038 LDR X2, [X24 + 0x20]
	0x0331003C LDR X3, [X24 + 0x58]
	0x03310040 MOVZ W4, 0x1
	0x03310044 MOV X0, X22
	0x03310048 MOV X1, X19
	0x0331004C BL 0x331015C
	0x03310050 MOV X25, X0
	0x03310054 LDR X0, [X26]
	0x03310058 LDR X24, [X20 + 0x10]
	0x0331005C LDR W8, [X0 + 0xE0]
	0x03310060 CBNZ W8, 0x3310068
	0x03310064 BL 0x1C16DFC
	0x03310068 MOV X0, X25
	0x0331006C B 0x3310088
	0x03310070 LDR X0, [X26]
	0x03310074 LDR X24, [X20 + 0x10]
	0x03310078 LDR W8, [X0 + 0xE0]
	0x0331007C CBNZ W8, 0x3310084
	0x03310080 BL 0x1C16DFC
	0x03310084 MOV X0, X21
	0x03310088 MOV X1, X24
	0x0331008C MOV X2, X31
	0x03310090 BL 0x336328C
	0x03310094 TBZ X0, 0x0, 0x3310104
	0x03310098 LDR X8, [X20 + 0x18]
	0x0331009C LDR X0, [X26]
	0x033100A0 STR X8, [X31 + 0x8]
	0x033100A4 LDR W8, [X0 + 0xE0]
	0x033100A8 CBNZ W8, 0x33100B0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x10CE000
	008 Move W8, [X21+2862]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xDE7000
	016 Move X0, [X0+1392]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2862], W8
	020 Compare X19, 0
	021 JumpIfEqual {84}
	022 Move X8, 0xDE7000
	023 Move X8, [X8+1392]
	024 Move X21, [X20+48]
	025 Move X22, [X19+48]
	026 Move X0, [X8]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X21
	032 Move X1, X22
	033 Move X2, X31
	034 Call TimeSpan.op_Inequality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {75}
	039 Move W8, [X20+56]
	040 Move W9, [X19+56]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X20, [X20+64]
	043 Move X19, [X19+64]
	044 Or X8, X20, X19
	045 Compare X8, 0
	046 JumpIfNotEqual {48}
	047 Move W0, 1
	048 Move W0, W31
	049 Compare X20, 0
	050 JumpIfEqual {76}
	051 Compare X19, 0
	052 JumpIfEqual {76}
	053 Move W8, [X20+24]
	054 Move W9, [X19+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X21, X31
	058 Add X22, X19, 32
	059 Add X23, X20, 32
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W8, [X19+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, [X23]
	064 Compare X0, 0
	065 JumpIfEqual {102}
	066 Move X1, [X22]
	067 Call AdjustmentRule.Equals, X0, X1
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {76}
	072 Move W8, [X20+24]
	073 Add X21, X21, 1
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move W0, W31
	076 Move X20, [X31+32]
	077 Move X19, [X31+40]
	078 Move X22, [X31+16]
	079 Move X21, [X31+24]
	080 And W0, W0, 1
	081 Move X30, [X31+48]
	082 Move X23, [X31+56]
	083 Return X0
	084 Move X0, 0xDE9000
	085 Move X0, [X0+1320]
	086 Call 0x1C17D08
	087 Call 0x1C17F10
	088 Move X19, X0
	089 Move X0, 0xE0E000
	090 Move X0, [X0+2344]
	091 Call 0x1C17D08
	092 Move X1, X0
	093 Move X0, X19
	094 Call ArgumentNullException..ctor, X0, X1
	095 Move X0, 0xE18000
	096 Move X0, [X0+3160]
	097 Call 0x1C17D08
	098 Move X1, X0
	099 Move X0, X19
	100 Call 0x1C17DEC
	101 Call 0x1C17F28
	102 Call 0x1C17F20

Method: System.TimeZoneInfo get_Local()

Disassembly:
	0x0330B840 ADRP X0, 0xE1C000
	0x0330B844 LDR X0, [X0 + 0xB88]
	0x0330B848 BL 0x1C16CF4
	0x0330B84C ADRP X0, 0xE1C000
	0x0330B850 LDR X0, [X0 + 0xB90]
	0x0330B854 BL 0x1C16CF4
	0x0330B858 ADRP X0, 0xDEA000
	0x0330B85C LDR X0, [X0 + 0x570]
	0x0330B860 BL 0x1C16CF4
	0x0330B864 ADRP X0, 0xE1C000
	0x0330B868 LDR X0, [X0 + 0xA38]
	0x0330B86C BL 0x1C16CF4
	0x0330B870 MOVZ W8, 0x1
	0x0330B874 STRB W8, [X22 + 0xB13]
	0x0330B878 LDR X0, [X23]
	0x0330B87C STR X31, [X31 + 0x118]
	0x0330B880 STP X31, X31, [X31 + 0x100]
	0x0330B884 STP X31, X31, [X31 + 0xF0]
	0x0330B888 STP X31, X31, [X31 + 0xE0]
	0x0330B88C STP X31, X31, [X31 + 0xD0]
	0x0330B890 STP X31, X31, [X31 + 0xC0]
	0x0330B894 STP X31, X31, [X31 + 0xB0]
	0x0330B898 STP X31, X31, [X31 + 0xA0]
	0x0330B89C STP X31, X31, [X31 + 0x90]
	0x0330B8A0 STP X31, X31, [X31 + 0x78]
	0x0330B8A4 STR X31, [X31 + 0x88]
	0x0330B8A8 LDR W8, [X0 + 0xE0]
	0x0330B8AC CBNZ W8, 0x330B8B4
	0x0330B8B0 BL 0x1C16DFC
	0x0330B8B4 ADD X8, X31, 0xD8
	0x0330B8B8 ADD X1, X31, 0x118
	0x0330B8BC ADD X2, X31, 0x108

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10D2000
	005 Move X19, 0xE1D000
	006 Move W8, [X20+2863]
	007 Move X19, [X19+2616]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE1D000
	013 Move X0, [X0+2616]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2863], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X19, [X8+8]
	025 Compare X19, 0
	026 JumpIfEqual {42}
	027 Move X20, [X19+16]
	028 Call 0x1C17D44
	029 Compare X20, 0
	030 JumpIfEqual {36}
	031 Move X0, X20
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0
	036 Move X0, X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Call CachedData.CreateLocal, X0
	041 Return X0
	042 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x03310314 ADRP X23, 0x10CC000
	0x03310318 ADRP X22, 0xE17000
	0x0331031C LDRB W8, [X23 + 0xB45]
	0x03310320 LDR X22, [X22 + 0xA38]
	0x03310324 MOV X19, X2
	0x03310328 MOV X20, X1
	0x0331032C MOV X21, X0
	0x03310330 TBNZ X8, 0x0, 0x3310348
	0x03310334 ADRP X0, 0xE17000
	0x03310338 LDR X0, [X0 + 0xA38]
	0x0331033C BL 0x1C16CF4
	0x03310340 MOVZ W8, 0x1
	0x03310344 STRB W8, [X23 + 0xB45]
	0x03310348 LDR X0, [X22]
	0x0331034C STRB W31, [X31 + 0xC]
	0x03310350 LDR W8, [X0 + 0xE0]
	0x03310354 CBNZ W8, 0x331035C
	0x03310358 BL 0x1C16DFC
	0x0331035C ADD X3, X31, 0xC
	0x03310360 MOV X0, X21
	0x03310364 MOV X1, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10CD000
	005 Move W8, [X20+2849]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xDE6000
	012 Move X0, [X0+632]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2849], W8
	016 Move X0, [X19+24]
	017 Compare X0, 0
	018 JumpIfNotEqual {24}
	019 Move X8, 0xDE6000
	020 Move X8, [X8+632]
	021 Move X8, [X8]
	022 Move X8, [X8+184]
	023 Move X0, [X8]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return X0

Method: System.TimeZoneInfo get_Utc()

Disassembly:
	0x03310368 MOV X2, X19
	0x0331036C BL 0x330A8C0
	0x03310370 LDP X20, X19, [X31 + 0x30]
	0x03310374 LDP X22, X21, [X31 + 0x20]
	0x03310378 LDP X30, X23, [X31 + 0x10]
	0x0331037C ADD X31, X31, 0x40
	0x03310380 RET
	0x03310384 SUB X31, X31, 0x60
	0x03310388 STR X30, [X31 + 0x10]
	0x0331038C STP X26, X25, [X31 + 0x20]
	0x03310390 STP X24, X23, [X31 + 0x30]
	0x03310394 STP X22, X21, [X31 + 0x40]
	0x03310398 STP X20, X19, [X31 + 0x50]
	0x0331039C ADRP X21, 0x10CC000
	0x033103A0 LDRB W8, [X21 + 0xB47]
	0x033103A4 MOV X20, X1
	0x033103A8 MOV W19, W0
	0x033103AC TBNZ X8, 0x0, 0x33103C4
	0x033103B0 ADRP X0, 0xDE4000
	0x033103B4 LDR X0, [X0 + 0x9F0]
	0x033103B8 BL 0x1C16CF4
	0x033103BC MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x10CD000
	005 Move X19, 0xE18000
	006 Move W8, [X20+2864]
	007 Move X19, [X19+2616]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE18000
	013 Move X0, [X0+2616]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2864], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void .ctor(System.String id, System.TimeSpan baseUtcOffset, System.String displayName, System.String standardDisplayName, System.String daylightDisplayName, System.TimeZoneInfo/AdjustmentRule[] adjustmentRules, System.Boolean disableDaylightSavingTime)

Disassembly:
	0x033103C0 STRB W8, [X21 + 0xB47]
	0x033103C4 STR X31, [X31 + 0x18]
	0x033103C8 LDR X8, [X20]
	0x033103CC ADRP X26, 0xDE4000
	0x033103D0 STR X8, [X31 + 0x8]
	0x033103D4 LDRB W8, [X20 + 0x10]
	0x033103D8 LDR X26, [X26 + 0x9F0]
	0x033103DC CBZ W8, 0x3310490
	0x033103E0 LDR X0, [X26]
	0x033103E4 LDRB W21, [X20 + 0x8]
	0x033103E8 LDR W8, [X0 + 0xE0]
	0x033103EC CBNZ W8, 0x33103F4
	0x033103F0 BL 0x1C16DFC
	0x033103F4 MOV W0, W19
	0x033103F8 MOV W1, W21
	0x033103FC MOV X2, X31
	0x03310400 BL 0x3360470
	0x03310404 LDR X8, [X26]
	0x03310408 LDRB W9, [X20 + 0xA]
	0x0331040C LDRB W20, [X20 + 0x8]
	0x03310410 LDR W10, [X8 + 0xE0]
	0x03310414 CMP W0, W9
	0x03310418 CSEL W21, W0, W9, LT
	0x0331041C CBNZ W10, 0x3310428
	0x03310420 MOV X0, X8
	0x03310424 BL 0x1C16DFC
	0x03310428 ADD X0, X31, 0x8
	0x0331042C MOV X1, X31
	0x03310430 BL 0x33612B4
	0x03310434 MOV W22, W0
	0x03310438 ADD X0, X31, 0x8
	0x0331043C MOV X1, X31
	0x03310440 BL 0x33614A4
	0x03310444 MOV W23, W0
	0x03310448 ADD X0, X31, 0x8
	0x0331044C MOV X1, X31
	0x03310450 BL 0x3361760
	0x03310454 MOV W24, W0
	0x03310458 ADD X0, X31, 0x8
	0x0331045C MOV X1, X31
	0x03310460 BL 0x3361410
	0x03310464 MOV W7, W0
	0x03310468 ADD X0, X31, 0x18
	0x0331046C MOV W1, W19
	0x03310470 MOV W2, W20
	0x03310474 MOV W3, W21
	0x03310478 MOV W4, W22
	0x0331047C MOV W5, W23
	0x03310480 MOV W6, W24
	0x03310484 STR X31, [X31]
	0x03310488 BL 0x335F594
	0x0331048C B 0x3310634
	0x03310490 LDR X0, [X26]
	0x03310494 LDRB W22, [X20 + 0x9]
	0x03310498 LDRB W21, [X20 + 0x8]
	0x0331049C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X28, 0x10CD000
	013 Move X27, 0xE18000
	014 Move W8, [X28+2865]
	015 Move X27, [X27+2616]
	016 Move W20, W7
	017 Move X19, X6
	018 Move X22, X5
	019 Move X23, X4
	020 Move X24, X3
	021 Move X25, X2
	022 Move X26, X1
	023 Move X21, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0xE18000
	029 Move X0, [X0+2616]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X28+2865], W8
	033 Move X0, X21
	034 Move X1, X31
	035 Move [X31+12], W31
	036 Call Object..ctor, X0
	037 Move X0, [X27]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Add X3, X31, 12
	043 Move X0, X26
	044 Move X1, X25
	045 Move X2, X19
	046 Call TimeZoneInfo.ValidateTimeZoneInfo, X0, X1, X2, X3
	047 And W31, W20, 1
	048 NotImplemented "Instruction CSEL not yet implemented."
	049 Move [X21+16], X26
	050 Move [X21+24], X24
	051 Move [X21+32], X23
	052 Move [X21+40], X8
	053 Move [X21+48], X25
	054 Move W8, [X31+12]
	055 Xor W9, W20, 1
	056 Move [X21+64], X19
	057 Move X20, [X31+80]
	058 Move X19, [X31+88]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CSET not yet implemented."
	061 And W8, W8, W9
	062 Move [X21+56], W8
	063 Move X22, [X31+64]
	064 Move X21, [X31+72]
	065 Move X24, [X31+48]
	066 Move X23, [X31+56]
	067 Move X26, [X31+32]
	068 Move X25, [X31+40]
	069 Move X28, [X31+16]
	070 Move X27, [X31+24]
	071 Move X30, [X31+96]
	072 Return 

Method: System.TimeZoneInfo CreateCustomTimeZone(System.String id, System.TimeSpan baseUtcOffset, System.String displayName, System.String standardDisplayName)

Disassembly:
	0x033104A0 CBNZ W8, 0x33104A8
	0x033104A4 BL 0x1C16DFC
	0x033104A8 CMP W22, 0x4
	0x033104AC B.LS 0x3310570
	0x033104B0 MOV W0, W19
	0x033104B4 MOV W1, W21
	0x033104B8 MOV X2, X31
	0x033104BC BL 0x3360470
	0x033104C0 LDRB W21, [X20 + 0x8]
	0x033104C4 MOV W22, W0
	0x033104C8 ADD X0, X31, 0x8
	0x033104CC MOV X1, X31
	0x033104D0 BL 0x33612B4
	0x033104D4 MOV W23, W0
	0x033104D8 ADD X0, X31, 0x8
	0x033104DC MOV X1, X31
	0x033104E0 BL 0x33614A4
	0x033104E4 MOV W24, W0
	0x033104E8 ADD X0, X31, 0x8
	0x033104EC MOV X1, X31
	0x033104F0 BL 0x3361760
	0x033104F4 MOV W25, W0
	0x033104F8 ADD X0, X31, 0x8
	0x033104FC MOV X1, X31
	0x03310500 BL 0x3361410
	0x03310504 MOV W7, W0
	0x03310508 ADD X0, X31, 0x18
	0x0331050C MOV W1, W19
	0x03310510 MOV W2, W21
	0x03310514 MOV W3, W22
	0x03310518 MOV W4, W23
	0x0331051C MOV W5, W24
	0x03310520 MOV W6, W25
	0x03310524 STR X31, [X31]
	0x03310528 BL 0x335F594
	0x0331052C ADD X0, X31, 0x18
	0x03310530 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X23, 0x10CD000
	010 Move X24, 0xE18000
	011 Move W8, [X23+2866]
	012 Move X24, [X24+2616]
	013 Move X19, X3
	014 Move X20, X2
	015 Move X21, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xE18000
	022 Move X0, [X0+2616]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+2866], W8
	026 Move X0, [X24]
	027 Call 0x1C17F10
	028 Move X1, X22
	029 Move X2, X21
	030 Move X3, X20
	031 Move X4, X19
	032 Move X5, X19
	033 Move X6, X31
	034 Move W7, W31
	035 Move X23, X0
	036 Call TimeZoneInfo..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	037 Move X0, X23
	038 Move X20, [X31+64]
	039 Move X19, [X31+72]
	040 Move X22, [X31+48]
	041 Move X21, [X31+56]
	042 Move X24, [X31+32]
	043 Move X23, [X31+40]
	044 Move X30, [X31+16]
	045 Add X31, X31, 80
	046 Return X0

Method: System.TimeZoneInfo CreateCustomTimeZone(System.String id, System.TimeSpan baseUtcOffset, System.String displayName, System.String standardDisplayName, System.String daylightDisplayName, System.TimeZoneInfo/AdjustmentRule[] adjustmentRules, System.Boolean disableDaylightSavingTime)

Disassembly:
	0x03310534 BL 0x33611C0
	0x03310538 LDR W8, [X20 + 0xC]
	0x0331053C SUB W8, W0, W8
	0x03310540 ADD W9, W8, 0x7
	0x03310544 CMP W8, 0x0
	0x03310548 CSEL W19, W8, W9, GE
	0x0331054C CMP W19, 0x1
	0x03310550 B.LT 0x3310634
	0x03310554 LDR X0, [X26]
	0x03310558 LDR W8, [X0 + 0xE0]
	0x0331055C CBNZ W8, 0x3310564
	0x03310560 BL 0x1C16DFC
	0x03310564 SUB W8, W31, W19
	0x03310568 SCVTF D0, W8
	0x0331056C B 0x3310624
	0x03310570 ADD X0, X31, 0x8
	0x03310574 MOV X1, X31
	0x03310578 BL 0x33612B4
	0x0331057C MOV W22, W0
	0x03310580 ADD X0, X31, 0x8
	0x03310584 MOV X1, X31
	0x03310588 BL 0x33614A4
	0x0331058C MOV W23, W0
	0x03310590 ADD X0, X31, 0x8
	0x03310594 MOV X1, X31
	0x03310598 BL 0x3361760
	0x0331059C MOV W24, W0
	0x033105A0 ADD X0, X31, 0x8
	0x033105A4 MOV X1, X31
	0x033105A8 BL 0x3361410
	0x033105AC MOV W7, W0
	0x033105B0 ADD X0, X31, 0x18
	0x033105B4 MOVZ W3, 0x1
	0x033105B8 MOV W1, W19
	0x033105BC MOV W2, W21
	0x033105C0 MOV W4, W22
	0x033105C4 MOV W5, W23
	0x033105C8 MOV W6, W24
	0x033105CC STR X31, [X31]
	0x033105D0 BL 0x335F594
	0x033105D4 ADD X0, X31, 0x18
	0x033105D8 MOV X1, X31
	0x033105DC BL 0x33611C0
	0x033105E0 LDR W8, [X20 + 0xC]
	0x033105E4 LDRB W9, [X20 + 0x9]
	0x033105E8 SUB W8, W8, W0
	0x033105EC UBFM W10, W9, 0x1D, 0x1C
	0x033105F0 ADD W11, W8, 0x7
	0x033105F4 CMP W8, 0x0
	0x033105F8 CSEL W8, W8, W11, GE
	0x033105FC SUB W9, W10, W9
	0x03310600 ADD W8, W9, W8
	0x03310604 SUB W19, W8, 0x7
	0x03310608 CMP W19, 0x1
	0x0331060C B.LT 0x3310634
	0x03310610 LDR X0, [X26]
	0x03310614 LDR W8, [X0 + 0xE0]
	0x03310618 CBNZ W8, 0x3310620
	0x0331061C BL 0x1C16DFC
	0x03310620 SCVTF D0, W19
	0x03310624 ADD X0, X31, 0x18
	0x03310628 MOV X1, X31
	0x0331062C BL 0x335FEFC
	0x03310630 STR X0, [X31 + 0x18]
	0x03310634 LDP X30, X0, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X26, 0x10CD000
	013 Move W8, [X26+2867]
	014 Move W22, W6
	015 Move X25, X5
	016 Move X19, X4
	017 Move X20, X3
	018 Move X21, X2
	019 Move X23, X1
	020 Move X24, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xE18000
	026 Move X0, [X0+3168]
	027 Call 0x1C17CF4
	028 Move X0, 0xE18000
	029 Move X0, [X0+2616]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+2867], W8
	033 Compare X25, 0
	034 JumpIfEqual {60}
	035 Move TEMP, X22
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {60}
	039 Move X8, [X25+24]
	040 Compare X8, 0
	041 JumpIfEqual {60}
	042 Move X0, X25
	043 Move X1, X31
	044 Call Array.Clone, X0
	045 Compare X0, 0
	046 JumpIfEqual {59}
	047 Move X8, 0xE18000
	048 Move X8, [X8+3168]
	049 Move X26, X0
	050 Move X27, [X8]
	051 Move X1, X27
	052 Call 0x1C17E00
	053 Move X25, X0
	054 Compare X0, 0
	055 JumpIfNotEqual {60}
	056 Move X0, X26
	057 Move X1, X27
	058 Call 0x1C181E0
	059 Move X25, X31
	060 Move X8, 0xE18000
	061 Move X8, [X8+2616]
	062 Move X0, [X8]
	063 Call 0x1C17F10
	064 And W7, W22, 1
	065 Move X1, X24
	066 Move X2, X23
	067 Move X3, X21
	068 Move X4, X20
	069 Move X5, X19
	070 Move X6, X25
	071 Move X26, X0
	072 Call TimeZoneInfo..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	073 Move X0, X26
	074 Move X20, [X31+80]
	075 Move X19, [X31+88]
	076 Move X22, [X31+64]
	077 Move X21, [X31+72]
	078 Move X24, [X31+48]
	079 Move X23, [X31+56]
	080 Move X26, [X31+32]
	081 Move X25, [X31+40]
	082 Move X30, [X31+16]
	083 Move X27, [X31+24]
	084 Add X31, X31, 96
	085 Return X0

Method: System.Void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object sender)

Disassembly:
	0x03310638 LDP X20, X19, [X31 + 0x50]
	0x0331063C LDP X22, X21, [X31 + 0x40]
	0x03310640 LDP X24, X23, [X31 + 0x30]
	0x03310644 LDP X26, X25, [X31 + 0x20]
	0x03310648 ADD X31, X31, 0x60
	0x0331064C RET
	0x03310650 STR X30, [X31 - 0x20]!
	0x03310654 STP X20, X19, [X31 + 0x10]
	0x03310658 ADRP X20, 0x10CC000
	0x0331065C LDRB W8, [X20 + 0xB59]
	0x03310660 MOV X19, X0
	0x03310664 TBNZ X8, 0x0, 0x331067C
	0x03310668 ADRP X0, 0xDE4000
	0x0331066C LDR X0, [X0 + 0x9F0]
	0x03310670 BL 0x1C16CF4
	0x03310674 MOVZ W8, 0x1
	0x03310678 STRB W8, [X20 + 0xB59]
	0x0331067C LDRB W8, [X19 + 0x60]
	0x03310680 CBNZ W8, 0x331071C
	0x03310684 LDRB W8, [X19 + 0x30]
	0x03310688 CMP W8, 0x1
	0x0331068C B.NE 0x331071C
	0x03310690 LDRB W8, [X19 + 0x32]
	0x03310694 CMP W8, 0x1
	0x03310698 B.NE 0x331071C
	0x0331069C ADRP X20, 0xDE4000
	0x033106A0 LDR X8, [X19 + 0x28]
	0x033106A4 LDR X20, [X20 + 0x9F0]
	0x033106A8 STR X8, [X31 + 0x8]
	0x033106AC LDR X0, [X20]
	0x033106B0 LDR W8, [X0 + 0xE0]
	0x033106B4 CBNZ W8, 0x33106BC
	0x033106B8 BL 0x1C16DFC
	0x033106BC ADD X0, X31, 0x8
	0x033106C0 MOV X1, X31
	0x033106C4 BL 0x33612B4
	0x033106C8 CBNZ W0, 0x331071C
	0x033106CC LDR X8, [X19 + 0x28]
	0x033106D0 LDR X0, [X20]
	0x033106D4 STR X8, [X31 + 0x8]
	0x033106D8 LDR W8, [X0 + 0xE0]
	0x033106DC CBNZ W8, 0x33106E4
	0x033106E0 BL 0x1C16DFC
	0x033106E4 ADD X0, X31, 0x8
	0x033106E8 MOV X1, X31
	0x033106EC BL 0x33614A4
	0x033106F0 CBNZ W0, 0x331071C
	0x033106F4 LDR X8, [X19 + 0x28]
	0x033106F8 LDR X0, [X20]
	0x033106FC STR X8, [X31 + 0x8]
	0x03310700 LDR W8, [X0 + 0xE0]
	0x03310704 CBNZ W8, 0x331070C
	0x03310708 BL 0x1C16DFC
	0x0331070C ADD X0, X31, 0x8
	0x03310710 MOV X1, X31
	0x03310714 BL 0x3361760
	0x03310718 CBZ W0, 0x331072C
	0x0331071C MOV W0, W31
	0x03310720 LDP X20, X19, [X31 + 0x10]
	0x03310724 LDR X30, [X31], #0x20
	0x03310728 RET
	0x0331072C LDR X0, [X20]
	0x03310730 ADD X20, X19, 0x10
	0x03310734 LDR W8, [X0 + 0xE0]
	0x03310738 CBNZ W8, 0x3310740
	0x0331073C BL 0x1C16DFC
	0x03310740 MOV X0, X20
	0x03310744 MOV X1, X31
	0x03310748 BL 0x3361868
	0x0331074C MOV W20, W0
	0x03310750 ADD X0, X19, 0x18
	0x03310754 MOV X1, X31
	0x03310758 BL 0x3361868
	0x0331075C CMP W20, W0
	0x03310760 CSET W0, EQ
	0x03310764 B 0x3310720
	0x03310768 STR X30, [X31 - 0x20]!
	0x0331076C STP X20, X19, [X31 + 0x10]
	0x03310770 ADRP X20, 0x10CC000
	0x03310774 LDRB W8, [X20 + 0xB5A]
	0x03310778 MOV X19, X0
	0x0331077C TBNZ X8, 0x0, 0x3310794
	0x03310780 ADRP X0, 0xDE4000
	0x03310784 LDR X0, [X0 + 0x9F0]
	0x03310788 BL 0x1C16CF4
	0x0331078C MOVZ W8, 0x1
	0x03310790 STRB W8, [X20 + 0xB5A]
	0x03310794 LDRB W8, [X19 + 0x60]
	0x03310798 CBNZ W8, 0x3310834
	0x0331079C LDRB W8, [X19 + 0x48]
	0x033107A0 CMP W8, 0x1
	0x033107A4 B.NE 0x3310834
	0x033107A8 LDRB W8, [X19 + 0x4A]
	0x033107AC CMP W8, 0x1
	0x033107B0 B.NE 0x3310834
	0x033107B4 ADRP X20, 0xDE4000
	0x033107B8 LDR X8, [X19 + 0x40]
	0x033107BC LDR X20, [X20 + 0x9F0]
	0x033107C0 STR X8, [X31 + 0x8]
	0x033107C4 LDR X0, [X20]
	0x033107C8 LDR W8, [X0 + 0xE0]
	0x033107CC CBNZ W8, 0x33107D4
	0x033107D0 BL 0x1C16DFC
	0x033107D4 ADD X0, X31, 0x8
	0x033107D8 MOV X1, X31
	0x033107DC BL 0x33612B4
	0x033107E0 CBNZ W0, 0x3310834
	0x033107E4 LDR X8, [X19 + 0x40]
	0x033107E8 LDR X0, [X20]
	0x033107EC STR X8, [X31 + 0x8]
	0x033107F0 LDR W8, [X0 + 0xE0]
	0x033107F4 CBNZ W8, 0x33107FC
	0x033107F8 BL 0x1C16DFC
	0x033107FC ADD X0, X31, 0x8
	0x03310800 MOV X1, X31
	0x03310804 BL 0x33614A4
	0x03310808 CBNZ W0, 0x3310834

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10CD000
	007 Move X20, 0xE18000
	008 Move W8, [X21+2868]
	009 Move X20, [X20+2616]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xE18000
	016 Move X0, [X0+2616]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2868], W8
	020 Move X0, [X20]
	021 Move [X31+12], W31
	022 Move X20, [X19+16]
	023 Move X21, [X19+48]
	024 Move W8, [X0+224]
	025 Move X22, [X19+64]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Add X3, X31, 12
	030 Move X0, X20
	031 Move X1, X21
	032 Move X2, X22
	033 Call TimeZoneInfo.ValidateTimeZoneInfo, X0, X1, X2, X3
	034 Move W8, [X31+12]
	035 Move W9, [X19+56]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Return 
	043 Move X0, 0xE18000
	044 Move X0, [X0+3176]
	045 Call 0x1C17D08
	046 Move X19, X0
	047 Move X0, 0xE18000
	048 Move X0, [X0+3184]
	049 Call 0x1C17D08
	050 Move X1, X0
	051 Move X0, X19
	052 Move X2, X31
	053 Call SR.Format, X0, X1
	054 Move X19, X0
	055 Move X0, 0xE0E000
	056 Move X0, [X0+736]
	057 Call 0x1C17D08
	058 Call 0x1C17F10
	059 Move X20, X0
	060 Move X1, X19
	061 Move X2, X31
	062 Call SerializationException..ctor, X0, X1
	063 Move X0, 0xE18000
	064 Move X0, [X0+3192]
	065 Call 0x1C17D08
	066 Move X1, X0
	067 Move X0, X20
	068 Call 0x1C17DEC
	069 Move X19, X0
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X0, X19
	072 Call 0x3EB2AD0
	073 Move X19, X0
	074 Move X0, 0xDEC000
	075 Move X0, [X0+1400]
	076 Call 0x1C17D08
	077 Move X8, [X19]
	078 Move X1, [X8]
	079 Call 0x1C18270
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {105}
	084 Move X19, [X19]
	085 Call 0x3EB2AE0
	086 Move X0, 0xE0E000
	087 Move X0, [X0+736]
	088 Call 0x1C17D08
	089 Call 0x1C17F10
	090 Move X20, X0
	091 Move X0, 0xE18000
	092 Move X0, [X0+3200]
	093 Call 0x1C17D08
	094 Move X1, X0
	095 Move X0, X20
	096 Move X2, X19
	097 Move X3, X31
	098 Call SerializationException..ctor, X0, X1, X2
	099 Move X0, 0xE18000
	100 Move X0, [X0+3192]
	101 Call 0x1C17D08
	102 Move X1, X0
	103 Move X0, X20
	104 Call 0x1C17DEC
	105 Move X0, 0xE18000
	106 Move X0, [X0+2664]
	107 Call 0x1C17D08
	108 Move X8, [X19]
	109 Move X1, [X8]
	110 Call 0x1C18270
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfEqual {84}
	115 Move W0, 8
	116 Call 0x3EB2AF0
	117 Move X8, [X19]
	118 Move [X0], X8
	119 Move X1, 0xBA5000
	120 Add X1, X1, 3672
	121 Move X2, X31
	122 Call 0x3EB2B00
	123 Move X19, X0
	124 Call 0x3EB2AE0
	125 Move X0, X19
	126 Call 0x1D2D690
	127 Call 0x1991590

Method: System.Void System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x0331080C LDR X8, [X19 + 0x40]
	0x03310810 LDR X0, [X20]
	0x03310814 STR X8, [X31 + 0x8]
	0x03310818 LDR W8, [X0 + 0xE0]
	0x0331081C CBNZ W8, 0x3310824
	0x03310820 BL 0x1C16DFC
	0x03310824 ADD X0, X31, 0x8
	0x03310828 MOV X1, X31
	0x0331082C BL 0x3361760
	0x03310830 CBZ W0, 0x3310844
	0x03310834 MOV W0, W31
	0x03310838 LDP X20, X19, [X31 + 0x10]
	0x0331083C LDR X30, [X31], #0x20
	0x03310840 RET
	0x03310844 LDR X0, [X20]
	0x03310848 ADD X20, X19, 0x10
	0x0331084C LDR W8, [X0 + 0xE0]
	0x03310850 CBNZ W8, 0x3310858
	0x03310854 BL 0x1C16DFC
	0x03310858 MOV X0, X20
	0x0331085C MOV X1, X31
	0x03310860 BL 0x3361868
	0x03310864 MOV W20, W0
	0x03310868 ADD X0, X19, 0x18
	0x0331086C MOV X1, X31
	0x03310870 BL 0x3361868
	0x03310874 CMP W20, W0
	0x03310878 CSET W0, EQ
	0x0331087C B 0x3310838
	0x03310880 SUB X31, X31, 0x40
	0x03310884 STP X30, X0, [X31 + 0x10]
	0x03310888 STP X22, X21, [X31 + 0x20]
	0x0331088C STP X20, X19, [X31 + 0x30]
	0x03310890 ADRP X21, 0x10CC000
	0x03310894 LDRB W8, [X21 + 0xB40]
	0x03310898 MOV X19, X4
	0x0331089C MOV W20, W3
	0x033108A0 STP X2, X1, [X31]
	0x033108A4 TBNZ X8, 0x0, 0x33108BC
	0x033108A8 ADRP X0, 0xDE4000
	0x033108AC LDR X0, [X0 + 0x9F0]
	0x033108B0 BL 0x1C16CF4
	0x033108B4 MOVZ W8, 0x1
	0x033108B8 STRB W8, [X21 + 0xB40]
	0x033108BC ADRP X22, 0xDE4000
	0x033108C0 LDR X22, [X22 + 0x9F0]
	0x033108C4 TBNZ X20, 0x0, 0x3310974
	0x033108C8 CBZ X19, 0x3310AA4
	0x033108CC LDRB W8, [X19 + 0x60]
	0x033108D0 CBNZ W8, 0x3310974
	0x033108D4 LDR X0, [X22]
	0x033108D8 LDR W8, [X0 + 0xE0]
	0x033108DC CBNZ W8, 0x33108E4
	0x033108E0 BL 0x1C16DFC
	0x033108E4 ADD X0, X31, 0x18
	0x033108E8 MOV X1, X31
	0x033108EC BL 0x3361868
	0x033108F0 MOV W20, W0
	0x033108F4 ADD X0, X31, 0x0
	0x033108F8 MOV X1, X31
	0x033108FC BL 0x3361868
	0x03310900 SUBS W21, W20, W0
	0x03310904 B.EQ 0x331092C
	0x03310908 LDR X0, [X22]
	0x0331090C LDR W8, [X0 + 0xE0]
	0x03310910 CBNZ W8, 0x3310918
	0x03310914 BL 0x1C16DFC
	0x03310918 ADD X0, X31, 0x0
	0x0331091C MOV W1, W21
	0x03310920 MOV X2, X31
	0x03310924 BL 0x3360604
	0x03310928 STR X0, [X31]
	0x0331092C LDR X0, [X22]
	0x03310930 LDR W8, [X0 + 0xE0]
	0x03310934 CBNZ W8, 0x331093C
	0x03310938 BL 0x1C16DFC
	0x0331093C ADD X0, X31, 0x8
	0x03310940 MOV X1, X31
	0x03310944 BL 0x3361868
	0x03310948 SUBS W20, W20, W0
	0x0331094C B.EQ 0x3310974
	0x03310950 LDR X0, [X22]
	0x03310954 LDR W8, [X0 + 0xE0]
	0x03310958 CBNZ W8, 0x3310960
	0x0331095C BL 0x1C16DFC
	0x03310960 ADD X0, X31, 0x8
	0x03310964 MOV W1, W20
	0x03310968 MOV X2, X31
	0x0331096C BL 0x3360604
	0x03310970 STR X0, [X31 + 0x8]
	0x03310974 LDR X0, [X22]
	0x03310978 LDR X20, [X31 + 0x18]
	0x0331097C LDR X21, [X31]
	0x03310980 LDR W8, [X0 + 0xE0]
	0x03310984 CBNZ W8, 0x331098C
	0x03310988 BL 0x1C16DFC
	0x0331098C MOV X0, X20
	0x03310990 MOV X1, X21
	0x03310994 MOV X2, X31
	0x03310998 BL 0x3363220
	0x0331099C TBZ X0, 0x0, 0x33109D0
	0x033109A0 LDR X0, [X22]
	0x033109A4 LDP X20, X19, [X31]
	0x033109A8 LDR W8, [X0 + 0xE0]
	0x033109AC CBNZ W8, 0x33109B4
	0x033109B0 BL 0x1C16DFC
	0x033109B4 MOV X0, X19
	0x033109B8 MOV X1, X20
	0x033109BC MOV X2, X31
	0x033109C0 BL 0x3363148
	0x033109C4 TBZ X0, 0x0, 0x3310A30
	0x033109C8 MOVZ W0, 0x1
	0x033109CC B 0x3310A8C
	0x033109D0 CBZ X19, 0x3310AA4
	0x033109D4 LDR X0, [X22]
	0x033109D8 LDRB W21, [X19 + 0x60]
	0x033109DC LDR X19, [X31 + 0x8]
	0x033109E0 LDR X20, [X31 + 0x18]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x10CD000
	013 Move W8, [X21+2869]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {46}
	020 Move X0, 0xDE6000
	021 Move X0, [X0+1392]
	022 Call 0x1C17CF4
	023 Move X0, 0xE18000
	024 Move X0, [X0+3208]
	025 Call 0x1C17CF4
	026 Move X0, 0xE18000
	027 Move X0, [X0+3216]
	028 Call 0x1C17CF4
	029 Move X0, 0xE18000
	030 Move X0, [X0+3224]
	031 Call 0x1C17CF4
	032 Move X0, 0xE18000
	033 Move X0, [X0+3232]
	034 Call 0x1C17CF4
	035 Move X0, 0xDEF000
	036 Move X0, [X0+952]
	037 Call 0x1C17CF4
	038 Move X0, 0xE18000
	039 Move X0, [X0+3184]
	040 Call 0x1C17CF4
	041 Move X0, 0xE18000
	042 Move X0, [X0+3240]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X21+2869], W8
	046 Compare X19, 0
	047 JumpIfEqual {116}
	048 Move X8, 0xDEF000
	049 Move X8, [X8+952]
	050 Move X21, 0xE18000
	051 Move X22, 0xE18000
	052 Move X23, 0xE18000
	053 Move X24, 0xDE6000
	054 Move X21, [X21+3240]
	055 Move X22, [X22+3224]
	056 Move X23, [X23+3208]
	057 Move X24, [X24+1392]
	058 Move X2, [X20+16]
	059 Move X1, [X8]
	060 Move X25, 0xE18000
	061 Move X26, 0xE18000
	062 Move X27, 0xE18000
	063 Move X25, [X25+3216]
	064 Move X26, [X26+3232]
	065 Move X27, [X27+3184]
	066 Move X0, X19
	067 Move X3, X31
	068 Call SerializationInfo.AddValue, X0, X1, X2
	069 Move X2, [X20+24]
	070 Move X1, [X21]
	071 Move X0, X19
	072 Move X3, X31
	073 Call SerializationInfo.AddValue, X0, X1, X2
	074 Move X2, [X20+32]
	075 Move X1, [X22]
	076 Move X0, X19
	077 Move X3, X31
	078 Call SerializationInfo.AddValue, X0, X1, X2
	079 Move X2, [X20+40]
	080 Move X1, [X23]
	081 Move X0, X19
	082 Move X3, X31
	083 Call SerializationInfo.AddValue, X0, X1, X2
	084 Move X8, [X20+48]
	085 Move X0, [X24]
	086 Add X1, X31, 8
	087 Move [X31+8], X8
	088 Call 0x1C17E04
	089 Move X1, [X25]
	090 Move X2, X0
	091 Move X0, X19
	092 Move X3, X31
	093 Call SerializationInfo.AddValue, X0, X1, X2
	094 Move X2, [X20+64]
	095 Move X1, [X26]
	096 Move X0, X19
	097 Move X3, X31
	098 Call SerializationInfo.AddValue, X0, X1, X2
	099 Move W2, [X20+56]
	100 Move X1, [X27]
	101 Move X0, X19
	102 Move X3, X31
	103 Call SerializationInfo.AddValue, X0, X1, X2
	104 Move X20, [X31+80]
	105 Move X19, [X31+88]
	106 Move X22, [X31+64]
	107 Move X21, [X31+72]
	108 Move X24, [X31+48]
	109 Move X23, [X31+56]
	110 Move X26, [X31+32]
	111 Move X25, [X31+40]
	112 Move X30, [X31+16]
	113 Move X27, [X31+24]
	114 Add X31, X31, 96
	115 Return 
	116 Move X0, 0xDE9000
	117 Move X0, [X0+1320]
	118 Call 0x1C17D08
	119 Call 0x1C17F10
	120 Move X19, X0
	121 Move X0, 0xE0E000
	122 Move X0, [X0+728]
	123 Call 0x1C17D08
	124 Move X1, X0
	125 Move X0, X19
	126 Call ArgumentNullException..ctor, X0, X1
	127 Move X0, 0xE18000
	128 Move X0, [X0+3248]
	129 Call 0x1C17D08
	130 Move X1, X0
	131 Move X0, X19
	132 Call 0x1C17DEC

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x033109E4 LDR W8, [X0 + 0xE0]
	0x033109E8 CBNZ W8, 0x33109F0
	0x033109EC BL 0x1C16DFC
	0x033109F0 MOV X0, X19
	0x033109F4 MOV X1, X20
	0x033109F8 MOV X2, X31
	0x033109FC BL 0x336328C
	0x03310A00 CBZ W21, 0x3310A5C
	0x03310A04 TBZ X0, 0x0, 0x3310A88
	0x03310A08 LDR X0, [X22]
	0x03310A0C LDP X20, X19, [X31]
	0x03310A10 LDR W8, [X0 + 0xE0]
	0x03310A14 CBNZ W8, 0x3310A1C
	0x03310A18 BL 0x1C16DFC
	0x03310A1C MOV X0, X19
	0x03310A20 MOV X1, X20
	0x03310A24 MOV X2, X31
	0x03310A28 BL 0x33631B4
	0x03310A2C B 0x3310A8C
	0x03310A30 LDR X0, [X22]
	0x03310A34 LDR X19, [X31 + 0x8]
	0x03310A38 LDR X20, [X31 + 0x18]
	0x03310A3C LDR W8, [X0 + 0xE0]
	0x03310A40 CBNZ W8, 0x3310A48
	0x03310A44 BL 0x1C16DFC
	0x03310A48 MOV X0, X19
	0x03310A4C MOV X1, X20
	0x03310A50 MOV X2, X31
	0x03310A54 BL 0x336328C
	0x03310A58 B 0x3310A8C
	0x03310A5C TBZ X0, 0x0, 0x3310A88
	0x03310A60 LDR X0, [X22]
	0x03310A64 LDP X20, X19, [X31]
	0x03310A68 LDR W8, [X0 + 0xE0]
	0x03310A6C CBNZ W8, 0x3310A74
	0x03310A70 BL 0x1C16DFC
	0x03310A74 MOV X0, X19
	0x03310A78 MOV X1, X20
	0x03310A7C MOV X2, X31
	0x03310A80 BL 0x3363148
	0x03310A84 B 0x3310A8C
	0x03310A88 MOV W0, W31
	0x03310A8C LDP X20, X19, [X31 + 0x30]
	0x03310A90 LDP X22, X21, [X31 + 0x20]
	0x03310A94 LDR X30, [X31 + 0x10]
	0x03310A98 AND W0, W0, 0x1
	0x03310A9C ADD X31, X31, 0x40
	0x03310AA0 RET
	0x03310AA4 BL 0x1C16F20
	0x03310AA8 SUB X31, X31, 0x40
	0x03310AAC STP X30, X23, [X31 + 0x10]
	0x03310AB0 STP X22, X21, [X31 + 0x20]
	0x03310AB4 STP X20, X19, [X31 + 0x30]
	0x03310AB8 ADRP X22, 0x10CC000
	0x03310ABC LDRB W8, [X22 + 0xB41]
	0x03310AC0 MOV X21, X2
	0x03310AC4 MOV X20, X1
	0x03310AC8 MOV X19, X0
	0x03310ACC TBNZ X8, 0x0, 0x3310AF0
	0x03310AD0 ADRP X0, 0xDE4000
	0x03310AD4 LDR X0, [X0 + 0x9F0]
	0x03310AD8 BL 0x1C16CF4
	0x03310ADC ADRP X0, 0xDE5000
	0x03310AE0 LDR X0, [X0 + 0x570]
	0x03310AE4 BL 0x1C16CF4
	0x03310AE8 MOVZ W8, 0x1
	0x03310AEC STRB W8, [X22 + 0xB41]
	0x03310AF0 STP X31, X31, [X31]
	0x03310AF4 CBZ X20, 0x3310B30
	0x03310AF8 ADRP X23, 0xDE5000
	0x03310AFC LDR X23, [X23 + 0x570]
	0x03310B00 LDR X22, [X20 + 0x20]
	0x03310B04 LDR X0, [X23]
	0x03310B08 LDR W8, [X0 + 0xE0]
	0x03310B0C CBNZ W8, 0x3310B18
	0x03310B10 BL 0x1C16DFC
	0x03310B14 LDR X0, [X23]
	0x03310B18 LDR X8, [X0 + 0xB8]
	0x03310B1C MOV X0, X22
	0x03310B20 MOV X2, X31
	0x03310B24 LDR X1, [X8]
	0x03310B28 BL 0x3394CD8
	0x03310B2C TBZ X0, 0x0, 0x3310B4C
	0x03310B30 MOV W0, W31
	0x03310B34 LDP X20, X19, [X31 + 0x30]
	0x03310B38 LDP X22, X21, [X31 + 0x20]
	0x03310B3C LDP X30, X23, [X31 + 0x10]
	0x03310B40 AND W0, W0, 0x1
	0x03310B44 ADD X31, X31, 0x40
	0x03310B48 RET
	0x03310B4C LDR X0, [X23]
	0x03310B50 LDR X22, [X20 + 0x20]
	0x03310B54 LDR W8, [X0 + 0xE0]
	0x03310B58 CBNZ W8, 0x3310B64
	0x03310B5C BL 0x1C16DFC
	0x03310B60 LDR X0, [X23]
	0x03310B64 LDR X8, [X0 + 0xB8]
	0x03310B68 MOV X0, X22
	0x03310B6C MOV X2, X31
	0x03310B70 LDR X1, [X8]
	0x03310B74 BL 0x3394D08
	0x03310B78 TBZ X0, 0x0, 0x3310BC0
	0x03310B7C MOV X0, X20
	0x03310B80 BL 0x3310768
	0x03310B84 TBNZ X0, 0x0, 0x3310B30
	0x03310B88 ADRP X8, 0xDE4000
	0x03310B8C LDR X21, [X21 + 0x8]
	0x03310B90 LDR X8, [X8 + 0x9F0]
	0x03310B94 STR X21, [X31 + 0x8]
	0x03310B98 LDR X0, [X8]
	0x03310B9C LDR X20, [X20 + 0x20]
	0x03310BA0 LDR W8, [X0 + 0xE0]
	0x03310BA4 CBNZ W8, 0x3310BAC
	0x03310BA8 BL 0x1C16DFC
	0x03310BAC MOV X0, X21
	0x03310BB0 MOV X1, X20
	0x03310BB4 MOV X2, X31
	0x03310BB8 BL 0x3362F18
	0x03310BBC B 0x3310C00
	0x03310BC0 MOV X0, X20
	0x03310BC4 BL 0x3310650
	0x03310BC8 TBNZ X0, 0x0, 0x3310B30
	0x03310BCC ADRP X8, 0xDE4000
	0x03310BD0 LDR X21, [X21]
	0x03310BD4 LDR X8, [X8 + 0x9F0]
	0x03310BD8 STR X21, [X31 + 0x8]
	0x03310BDC LDR X0, [X8]
	0x03310BE0 LDR X20, [X20 + 0x20]
	0x03310BE4 LDR W8, [X0 + 0xE0]
	0x03310BE8 CBNZ W8, 0x3310BF0
	0x03310BEC BL 0x1C16DFC
	0x03310BF0 MOV X0, X21
	0x03310BF4 MOV X1, X20
	0x03310BF8 MOV X2, X31
	0x03310BFC BL 0x3362E18
	0x03310C00 ADRP X22, 0xDE4000
	0x03310C04 LDR X22, [X22 + 0x9F0]
	0x03310C08 MOV X20, X0
	0x03310C0C STR X20, [X31]
	0x03310C10 LDR X0, [X22]
	0x03310C14 LDR W8, [X0 + 0xE0]
	0x03310C18 CBNZ W8, 0x3310C20
	0x03310C1C BL 0x1C16DFC
	0x03310C20 MOV X0, X19
	0x03310C24 MOV X1, X20
	0x03310C28 MOV X2, X31
	0x03310C2C BL 0x336328C
	0x03310C30 TBZ X0, 0x0, 0x3310C58
	0x03310C34 LDR X0, [X22]
	0x03310C38 LDR W8, [X0 + 0xE0]
	0x03310C3C CBNZ W8, 0x3310C44
	0x03310C40 BL 0x1C16DFC
	0x03310C44 MOV X0, X19
	0x03310C48 MOV X1, X21
	0x03310C4C MOV X2, X31
	0x03310C50 BL 0x3363148
	0x03310C54 TBNZ X0, 0x0, 0x3310CF8
	0x03310C58 LDR X0, [X22]
	0x03310C5C LDR W8, [X0 + 0xE0]
	0x03310C60 CBNZ W8, 0x3310C68
	0x03310C64 BL 0x1C16DFC
	0x03310C68 ADD X0, X31, 0x8
	0x03310C6C MOV X1, X31
	0x03310C70 BL 0x3361868
	0x03310C74 MOV W20, W0
	0x03310C78 ADD X0, X31, 0x0
	0x03310C7C MOV X1, X31
	0x03310C80 BL 0x3361868
	0x03310C84 CMP W20, W0
	0x03310C88 B.EQ 0x3310B30
	0x03310C8C LDR X0, [X22]
	0x03310C90 LDR W8, [X0 + 0xE0]
	0x03310C94 CBNZ W8, 0x3310C9C
	0x03310C98 BL 0x1C16DFC
	0x03310C9C ADD X0, X31, 0x8
	0x03310CA0 MOVZ W1, 0x1
	0x03310CA4 MOV X2, X31
	0x03310CA8 BL 0x3360604
	0x03310CAC MOV X20, X0
	0x03310CB0 ADD X0, X31, 0x0
	0x03310CB4 MOVZ W1, 0x1
	0x03310CB8 MOV X2, X31
	0x03310CBC BL 0x3360604
	0x03310CC0 MOV X1, X0
	0x03310CC4 MOV X0, X19
	0x03310CC8 MOV X2, X31
	0x03310CCC BL 0x336328C
	0x03310CD0 TBZ X0, 0x0, 0x3310D4C
	0x03310CD4 LDR X0, [X22]
	0x03310CD8 LDR W8, [X0 + 0xE0]
	0x03310CDC CBNZ W8, 0x3310CE4
	0x03310CE0 BL 0x1C16DFC
	0x03310CE4 MOV X0, X19
	0x03310CE8 MOV X1, X20
	0x03310CEC MOV X2, X31
	0x03310CF0 BL 0x3363148
	0x03310CF4 TBZ X0, 0x0, 0x3310D4C
	0x03310CF8 MOVZ W0, 0x1
	0x03310CFC B 0x3310B34
	0x03310D00 B 0x3310D14
	0x03310D04 B 0x3310D14
	0x03310D08 B 0x3310D14
	0x03310D0C B 0x3310D14
	0x03310D10 B 0x3310D14
	0x03310D14 MOV X20, X0
	0x03310D18 CMP W1, 0x1
	0x03310D1C B.NE 0x3310E60
	0x03310D20 MOV X0, X20
	0x03310D24 BL 0x3EB1AD0
	0x03310D28 MOV X20, X0
	0x03310D2C ADRP X0, 0xDEB000
	0x03310D30 LDR X0, [X0 + 0x760]
	0x03310D34 BL 0x1C16D08
	0x03310D38 LDR X8, [X20]
	0x03310D3C LDR X1, [X8]
	0x03310D40 BL 0x1C17270
	0x03310D44 TBZ X0, 0x0, 0x3310DB8
	0x03310D48 BL 0x3EB1AE0
	0x03310D4C LDR X0, [X22]
	0x03310D50 LDR W8, [X0 + 0xE0]
	0x03310D54 CBNZ W8, 0x3310D5C
	0x03310D58 BL 0x1C16DFC
	0x03310D5C ADD X0, X31, 0x8
	0x03310D60 MOVN W1, 0x0
	0x03310D64 MOV X2, X31
	0x03310D68 BL 0x3360604
	0x03310D6C MOV X20, X0
	0x03310D70 ADD X0, X31, 0x0
	0x03310D74 MOVN W1, 0x0
	0x03310D78 MOV X2, X31
	0x03310D7C BL 0x3360604
	0x03310D80 MOV X1, X0
	0x03310D84 MOV X0, X19
	0x03310D88 MOV X2, X31
	0x03310D8C BL 0x336328C
	0x03310D90 TBZ X0, 0x0, 0x3310B30
	0x03310D94 LDR X0, [X22]
	0x03310D98 LDR W8, [X0 + 0xE0]
	0x03310D9C CBNZ W8, 0x3310DA4
	0x03310DA0 BL 0x1C16DFC
	0x03310DA4 MOV X0, X19
	0x03310DA8 MOV X1, X20
	0x03310DAC MOV X2, X31
	0x03310DB0 BL 0x3363148
	0x03310DB4 B 0x3310B34
	0x03310DB8 MOVZ W0, 0x8
	0x03310DBC BL 0x3EB1AF0
	0x03310DC0 LDR X8, [X20]
	0x03310DC4 STR X8, [X0]
	0x03310DC8 ADRP X1, 0xBA4000
	0x03310DCC ADD X1, X1, 0xE58
	0x03310DD0 MOV X2, X31
	0x03310DD4 BL 0x3EB1B00
	0x03310DD8 B 0x3310E58
	0x03310DDC MOV X20, X0
	0x03310DE0 BL 0x3EB1AE0
	0x03310DE4 B 0x3310E60
	0x03310DE8 B 0x3310DFC
	0x03310DEC B 0x3310DFC
	0x03310DF0 B 0x3310DFC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x10CD000
	009 Move W8, [X21+2870]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {66}
	016 Move X0, 0xE18000
	017 Move X0, [X0+3256]
	018 Call 0x1C17CF4
	019 Move X0, 0xE18000
	020 Move X0, [X0+3168]
	021 Call 0x1C17CF4
	022 Move X0, 0xE0D000
	023 Move X0, [X0+584]
	024 Call 0x1C17CF4
	025 Move X0, 0xDE4000
	026 Move X0, [X0+2904]
	027 Call 0x1C17CF4
	028 Move X0, 0xE0C000
	029 Move X0, [X0+2912]
	030 Call 0x1C17CF4
	031 Move X0, 0xDE6000
	032 Move X0, [X0+632]
	033 Call 0x1C17CF4
	034 Move X0, 0xE16000
	035 Move X0, [X0+384]
	036 Call 0x1C17CF4
	037 Move X0, 0xDE6000
	038 Move X0, [X0+1392]
	039 Call 0x1C17CF4
	040 Move X0, 0xDE4000
	041 Move X0, [X0+1728]
	042 Call 0x1C17CF4
	043 Move X0, 0xE18000
	044 Move X0, [X0+3208]
	045 Call 0x1C17CF4
	046 Move X0, 0xE18000
	047 Move X0, [X0+3216]
	048 Call 0x1C17CF4
	049 Move X0, 0xE18000
	050 Move X0, [X0+3224]
	051 Call 0x1C17CF4
	052 Move X0, 0xE18000
	053 Move X0, [X0+3232]
	054 Call 0x1C17CF4
	055 Move X0, 0xDEF000
	056 Move X0, [X0+952]
	057 Call 0x1C17CF4
	058 Move X0, 0xE18000
	059 Move X0, [X0+3184]
	060 Call 0x1C17CF4
	061 Move X0, 0xE18000
	062 Move X0, [X0+3240]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X21+2870], W8
	066 Move X0, X19
	067 Move X1, X31
	068 Call Object..ctor, X0
	069 Compare X20, 0
	070 JumpIfEqual {250}
	071 Move X8, 0xDE4000
	072 Move X8, [X8+1728]
	073 Move X23, 0xE0C000
	074 Move X24, 0xDEF000
	075 Move X0, [X8]
	076 Move X23, [X23+2912]
	077 Move W8, [X0+224]
	078 Move X21, [X23]
	079 Move X24, [X24+952]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X22, 0xDE6000
	084 Move X22, [X22+632]
	085 Move X0, X21
	086 Move X1, X31
	087 Call Type.GetTypeFromHandle, X0
	088 Move X1, [X24]
	089 Move X2, X0
	090 Move X0, X20
	091 Move X3, X31
	092 Call SerializationInfo.GetValue, X0, X1, X2
	093 Compare X0, 0
	094 JumpIfEqual {101}
	095 Move X1, [X22]
	096 Move X8, [X0]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move [X19+16], X0
	099 Move X8, [X0]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move [X19+16], X31
	102 Move X0, [X23]
	103 Move X21, 0xE18000
	104 Move X21, [X21+3240]
	105 Move X1, X31
	106 Call Type.GetTypeFromHandle, X0
	107 Move X1, [X21]
	108 Move X2, X0
	109 Move X0, X20
	110 Move X3, X31
	111 Call SerializationInfo.GetValue, X0, X1, X2
	112 Compare X0, 0
	113 JumpIfEqual {120}
	114 Move X1, [X22]
	115 Move X8, [X0]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move [X19+24], X0
	118 Move X8, [X0]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move [X19+24], X31
	121 Move X0, [X23]
	122 Move X21, 0xE18000
	123 Move X21, [X21+3224]
	124 Move X1, X31
	125 Call Type.GetTypeFromHandle, X0
	126 Move X1, [X21]
	127 Move X2, X0
	128 Move X0, X20
	129 Move X3, X31
	130 Call SerializationInfo.GetValue, X0, X1, X2
	131 Compare X0, 0
	132 JumpIfEqual {139}
	133 Move X1, [X22]
	134 Move X8, [X0]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move [X19+32], X0
	137 Move X8, [X0]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move [X19+32], X31
	140 Move X0, [X23]
	141 Move X21, 0xE18000
	142 Move X21, [X21+3208]
	143 Move X1, X31
	144 Call Type.GetTypeFromHandle, X0
	145 Move X1, [X21]
	146 Move X2, X0
	147 Move X0, X20
	148 Move X3, X31
	149 Call SerializationInfo.GetValue, X0, X1, X2
	150 Compare X0, 0
	151 JumpIfEqual {158}
	152 Move X1, [X22]
	153 Move X8, [X0]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move [X19+40], X0
	156 Move X8, [X0]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move [X19+40], X31
	159 Move X8, 0xE16000
	160 Move X8, [X8+384]
	161 Move X21, 0xE18000
	162 Move X1, X31
	163 Move X0, [X8]
	164 Move X21, [X21+3216]
	165 Call Type.GetTypeFromHandle, X0
	166 Move X1, [X21]
	167 Move X2, X0
	168 Move X0, X20
	169 Move X3, X31
	170 Call SerializationInfo.GetValue, X0, X1, X2
	171 Compare X0, 0
	172 JumpIfEqual {249}
	173 Move X8, 0xDE6000
	174 Move X8, [X8+1392]
	175 Move X9, [X0]
	176 Move X1, [X8]
	177 Move X8, [X9+64]
	178 Move X9, [X1+64]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X21, 0xE18000
	181 Move X22, 0xE18000
	182 Move X21, [X21+3256]
	183 Move X22, [X22+3232]
	184 Call 0x1C17E08
	185 Move X8, [X0]
	186 Move X1, X31
	187 Move [X19+48], X8
	188 Move X0, [X21]
	189 Call Type.GetTypeFromHandle, X0
	190 Move X1, [X22]
	191 Move X2, X0
	192 Move X0, X20
	193 Move X3, X31
	194 Call SerializationInfo.GetValue, X0, X1, X2
	195 Compare X0, 0
	196 JumpIfEqual {215}
	197 Move X23, 0xE18000
	198 Move X23, [X23+3168]
	199 Move X21, X0
	200 Move X22, [X23]
	201 Move X1, X22
	202 Call 0x1C17E00
	203 Compare X0, 0
	204 JumpIfEqual {212}
	205 Move [X19+64], X0
	206 Move X22, [X23]
	207 Move X0, X21
	208 Move X1, X22
	209 Call 0x1C17E00
	210 Compare X0, 0
	211 JumpIfNotEqual {216}
	212 Move X0, X21
	213 Move X1, X22
	214 Call 0x1C181E0
	215 Move [X19+64], X31
	216 Move X8, 0xE0D000
	217 Move X8, [X8+584]
	218 Move X21, 0xE18000
	219 Move X1, X31
	220 Move X0, [X8]
	221 Move X21, [X21+3184]
	222 Call Type.GetTypeFromHandle, X0
	223 Move X1, [X21]
	224 Move X2, X0
	225 Move X0, X20
	226 Move X3, X31
	227 Call SerializationInfo.GetValue, X0, X1, X2
	228 Compare X0, 0
	229 JumpIfEqual {249}
	230 Move X8, 0xDE4000
	231 Move X8, [X8+2904]
	232 Move X9, [X0]
	233 Move X1, [X8]
	234 Move X8, [X9+64]
	235 Move X9, [X1+64]
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Call 0x1C17E08
	238 Move W8, [X0]
	239 Move X22, [X31+32]
	240 Move X21, [X31+40]
	241 Move X24, [X31+16]
	242 Move X23, [X31+24]
	243 Move [X19+56], W8
	244 Move X20, [X31+48]
	245 Move X19, [X31+56]
	246 Move X30, [X31+64]
	247 Return 
	248 Call 0x1C181E0
	249 Call 0x1C17F20
	250 Move X0, 0xDE9000
	251 Move X0, [X0+1320]
	252 Call 0x1C17D08
	253 Call 0x1C17F10
	254 Move X19, X0
	255 Move X0, 0xE0E000
	256 Move X0, [X0+728]
	257 Call 0x1C17D08
	258 Move X1, X0
	259 Move X0, X19
	260 Call ArgumentNullException..ctor, X0, X1
	261 Move X0, 0xE18000
	262 Move X0, [X0+3264]
	263 Call 0x1C17D08
	264 Move X1, X0
	265 Move X0, X19
	266 Call 0x1C17DEC

Method: System.TimeZoneInfo/AdjustmentRule GetAdjustmentRuleForTime(System.DateTime dateTime, out System.Nullable`1<System.Int32> ruleIndex)

Disassembly:
	0x0330F1A0 LDP X3, X2, [X8 + 0x1F8]
	0x0330F1A4 LDP X30, X21, [X31], #0x20
	0x0330F1A8 BR X3

ISIL:
	001 Move X3, X2
	002 Move W2, W31
	003 Call TimeZoneInfo.GetAdjustmentRuleForTime, X0, X1, X2, X3
	004 Return X0

Method: System.TimeZoneInfo/AdjustmentRule GetAdjustmentRuleForTime(System.DateTime dateTime, System.Boolean dateTimeisUtc, out System.Nullable`1<System.Int32> ruleIndex)

Disassembly:
	0x03310DF4 B 0x3310DFC
	0x03310DF8 B 0x3310DFC
	0x03310DFC MOV X20, X0
	0x03310E00 CMP W1, 0x1
	0x03310E04 B.NE 0x3310E60
	0x03310E08 MOV X0, X20
	0x03310E0C BL 0x3EB1AD0
	0x03310E10 MOV X19, X0
	0x03310E14 ADRP X0, 0xDEB000
	0x03310E18 LDR X0, [X0 + 0x760]
	0x03310E1C BL 0x1C16D08
	0x03310E20 LDR X8, [X19]
	0x03310E24 LDR X1, [X8]
	0x03310E28 BL 0x1C17270
	0x03310E2C TBZ X0, 0x0, 0x3310E38
	0x03310E30 BL 0x3EB1AE0
	0x03310E34 B 0x3310B30
	0x03310E38 MOVZ W0, 0x8
	0x03310E3C BL 0x3EB1AF0
	0x03310E40 LDR X8, [X19]
	0x03310E44 STR X8, [X0]
	0x03310E48 ADRP X1, 0xBA4000
	0x03310E4C ADD X1, X1, 0xE58
	0x03310E50 MOV X2, X31
	0x03310E54 BL 0x3EB1B00
	0x03310E58 MOV X20, X0
	0x03310E5C BL 0x3EB1AE0
	0x03310E60 MOV X0, X20
	0x03310E64 BL 0x1D2C690
	0x03310E68 BL 0x1990590
	0x03310E6C STP X30, X23, [X31 - 0x30]!
	0x03310E70 STP X22, X21, [X31 + 0x10]
	0x03310E74 STP X20, X19, [X31 + 0x20]
	0x03310E78 ADRP X23, 0x10CC000
	0x03310E7C LDRB W8, [X23 + 0xB3D]
	0x03310E80 MOV X21, X3
	0x03310E84 MOV X20, X2
	0x03310E88 MOV X19, X1
	0x03310E8C MOV X22, X0
	0x03310E90 TBNZ X8, 0x0, 0x3310EA8
	0x03310E94 ADRP X0, 0xDE5000
	0x03310E98 LDR X0, [X0 + 0x570]
	0x03310E9C BL 0x1C16CF4
	0x03310EA0 MOVZ W8, 0x1
	0x03310EA4 STRB W8, [X23 + 0xB3D]
	0x03310EA8 CBZ X20, 0x3310F30
	0x03310EAC ADRP X23, 0xDE5000
	0x03310EB0 LDRB W8, [X20 + 0x60]
	0x03310EB4 LDR X23, [X23 + 0x570]
	0x03310EB8 CBZ W8, 0x3310F00
	0x03310EBC MOV X0, X22
	0x03310EC0 MOV X1, X20
	0x03310EC4 MOV X2, X21
	0x03310EC8 BL 0x330D4E4
	0x03310ECC CBZ X0, 0x3310F30
	0x03310ED0 MOV X20, X0
	0x03310ED4 LDR X0, [X23]
	0x03310ED8 LDR X21, [X20 + 0x58]
	0x03310EDC LDR W8, [X0 + 0xE0]
	0x03310EE0 CBNZ W8, 0x3310EE8
	0x03310EE4 BL 0x1C16DFC
	0x03310EE8 MOV X0, X19
	0x03310EEC MOV X1, X21
	0x03310EF0 MOV X2, X31
	0x03310EF4 BL 0x3394C70
	0x03310EF8 LDR X1, [X20 + 0x20]
	0x03310EFC B 0x3310F1C
	0x03310F00 LDR X0, [X23]
	0x03310F04 LDR X20, [X20 + 0x58]
	0x03310F08 LDR W8, [X0 + 0xE0]
	0x03310F0C CBNZ W8, 0x3310F14
	0x03310F10 BL 0x1C16DFC
	0x03310F14 MOV X0, X19
	0x03310F18 MOV X1, X20
	0x03310F1C LDP X20, X19, [X31 + 0x20]
	0x03310F20 LDP X22, X21, [X31 + 0x10]
	0x03310F24 MOV X2, X31
	0x03310F28 LDP X30, X23, [X31], #0x30
	0x03310F2C B 0x3394C70
	0x03310F30 BL 0x1C16F20
	0x03310F34 STP X30, X21, [X31 - 0x20]!
	0x03310F38 STP X20, X19, [X31 + 0x10]
	0x03310F3C ADRP X21, 0x10CC000
	0x03310F40 LDRB W8, [X21 + 0xB3E]
	0x03310F44 MOV X19, X2
	0x03310F48 MOV X20, X1
	0x03310F4C TBNZ X8, 0x0, 0x3310F64
	0x03310F50 ADRP X0, 0xDE5000
	0x03310F54 LDR X0, [X0 + 0x570]
	0x03310F58 BL 0x1C16CF4
	0x03310F5C MOVZ W8, 0x1
	0x03310F60 STRB W8, [X21 + 0xB3E]
	0x03310F64 CBZ X19, 0x3310FA8
	0x03310F68 ADRP X8, 0xDE5000
	0x03310F6C LDR X8, [X8 + 0x570]
	0x03310F70 LDR X21, [X19 + 0x58]
	0x03310F74 LDR X0, [X8]
	0x03310F78 LDR W8, [X0 + 0xE0]
	0x03310F7C CBNZ W8, 0x3310F84
	0x03310F80 BL 0x1C16DFC
	0x03310F84 MOV X0, X20
	0x03310F88 MOV X1, X21
	0x03310F8C MOV X2, X31
	0x03310F90 BL 0x3394C70
	0x03310F94 LDR X1, [X19 + 0x20]
	0x03310F98 LDP X20, X19, [X31 + 0x10]
	0x03310F9C MOV X2, X31
	0x03310FA0 LDP X30, X21, [X31], #0x20
	0x03310FA4 B 0x3394C70

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X23, 0x10CD000
	013 Move W8, [X23+2871]
	014 Move X19, X3
	015 Move W20, W2
	016 Move X22, X1
	017 Move X21, X0
	018 Move [X31+24], X1
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xDE5000
	024 Move X0, [X0+2544]
	025 Call 0x1C17CF4
	026 Move X0, 0xDE5000
	027 Move X0, [X0+1136]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+2871], W8
	031 Move [X31+16], X31
	032 Move X8, [X21+64]
	033 Compare X8, 0
	034 JumpIfEqual {101}
	035 Move X8, [X8+24]
	036 Compare X8, 0
	037 JumpIfEqual {101}
	038 Move X8, 0xDE5000
	039 Move X8, [X8+2544]
	040 Move TEMP, X20
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {56}
	044 Move X0, [X8]
	045 Move X23, [X21+48]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X22
	051 Move X1, X23
	052 Move X2, X31
	053 Call DateTime.op_Addition, X0, X1
	054 Move [X31+16], X0
	055 Add X0, X31, 16
	056 Move X0, [X8]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Add X0, X31, 24
	062 Move X1, X31
	063 Call DateTime.get_Date, X0
	064 Move X8, [X21+64]
	065 Compare X8, 0
	066 JumpIfEqual {126}
	067 Move W8, [X8+24]
	068 Subtract W25, W8, 1
	069 Move X22, X0
	070 Move W26, W31
	071 Move X8, [X21+64]
	072 Compare X8, 0
	073 JumpIfEqual {126}
	074 Move W9, [X8+24]
	075 Subtract W10, W25, W26
	076 Add W24, W26, W10
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Add X10, X8, W24
	079 Move X23, [X10+32]
	080 Subtract W27, W24, 1
	081 Move X2, X23
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Add X8, X8, W27
	084 Move X2, [X8+32]
	085 Move X3, [X31+24]
	086 And W5, W20, 1
	087 Move X0, X21
	088 Move X1, X23
	089 Move X4, X22
	090 Call TimeZoneInfo.CompareAdjustmentRuleToDateTime, X0, X1, X2, X3, X4, X5
	091 Compare W0, 0
	092 JumpIfEqual {116}
	093 Move TEMP, X0
	094 And TEMP, TEMP, -2147483648
	095 Compare TEMP, -2147483648
	096 JumpIfNotEqual {99}
	097 Add W26, W24, 1
	098 NotImplemented "Instruction CMP not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move W25, W27
	101 Move X23, X31
	102 Move [X19], X31
	103 Move X0, X23
	104 Move X20, [X31+96]
	105 Move X19, [X31+104]
	106 Move X22, [X31+80]
	107 Move X21, [X31+88]
	108 Move X24, [X31+64]
	109 Move X23, [X31+72]
	110 Move X26, [X31+48]
	111 Move X25, [X31+56]
	112 Move X30, [X31+32]
	113 Move X27, [X31+40]
	114 Add X31, X31, 112
	115 Return X0
	116 Move X8, 0xDE5000
	117 Move X8, [X8+1136]
	118 Add X0, X31, 8
	119 Move W1, W24
	120 Move [X31+8], X31
	121 Move X2, [X8]
	122 Call Nullable`1<Int32>..ctor, X0, X1
	123 Move X8, [X31+8]
	124 Move [X19], X8
	125 Call 0x1C17F28
	126 Call 0x1C17F20

Method: System.Int32 CompareAdjustmentRuleToDateTime(System.TimeZoneInfo/AdjustmentRule rule, System.TimeZoneInfo/AdjustmentRule previousRule, System.DateTime dateTime, System.DateTime dateOnly, System.Boolean dateTimeisUtc)

Disassembly:
	0x03310FA8 BL 0x1C16F20
	0x03310FAC SUB X31, X31, 0xC0
	0x03310FB0 STP X29, X30, [X31 + 0x60]
	0x03310FB4 STP X28, X27, [X31 + 0x70]
	0x03310FB8 STP X26, X25, [X31 + 0x80]
	0x03310FBC STP X24, X23, [X31 + 0x90]
	0x03310FC0 STP X22, X21, [X31 + 0xA0]
	0x03310FC4 STP X20, X19, [X31 + 0xB0]
	0x03310FC8 ADRP X26, 0x10CC000
	0x03310FCC LDRB W8, [X26 + 0xB3F]
	0x03310FD0 MOV X23, X6
	0x03310FD4 MOV X19, X5
	0x03310FD8 MOV X24, X4
	0x03310FDC MOV X21, X3
	0x03310FE0 MOV X22, X2
	0x03310FE4 MOV W25, W1
	0x03310FE8 MOV X20, X0
	0x03310FEC TBNZ X8, 0x0, 0x331101C
	0x03310FF0 ADRP X0, 0xDE4000
	0x03310FF4 LDR X0, [X0 + 0x9F0]
	0x03310FF8 BL 0x1C16CF4
	0x03310FFC ADRP X0, 0xDE5000
	0x03311000 LDR X0, [X0 + 0x570]
	0x03311004 BL 0x1C16CF4
	0x03311008 ADRP X0, 0xE16000
	0x0331100C LDR X0, [X0 + 0xA38]
	0x03311010 BL 0x1C16CF4
	0x03311014 MOVZ W8, 0x1
	0x03311018 STRB W8, [X26 + 0xB3F]
	0x0331101C STP X31, X31, [X31 + 0x40]
	0x03311020 STR X31, [X31 + 0x50]
	0x03311024 STP X31, X31, [X31 + 0x30]
	0x03311028 STP X31, X31, [X31 + 0x20]
	0x0331102C STR X31, [X31 + 0x18]
	0x03311030 STRB W31, [X19]
	0x03311034 CBZ X21, 0x3311424
	0x03311038 CBZ X23, 0x3311688
	0x0331103C ADD X8, X31, 0x0
	0x03311040 MOV X0, X23
	0x03311044 MOV W1, W25
	0x03311048 MOV X2, X21
	0x0331104C MOV X3, X24
	0x03311050 BL 0x330E314
	0x03311054 LDR V0, [X31]
	0x03311058 LDR X8, [X31 + 0x10]
	0x0331105C MOV X0, X23
	0x03311060 MOV X1, X22
	0x03311064 MOV X2, X21
	0x03311068 MOV X3, X24
	0x0331106C STR V0, [X31 + 0x4]
	0x03311070 STR X8, [X31 + 0x50]
	0x03311074 BL 0x3310E6C
	0x03311078 MOV X24, X0
	0x0331107C MOV X0, X21
	0x03311080 BL 0x3310650
	0x03311084 TBZ X0, 0x0, 0x3311184
	0x03311088 ADRP X26, 0xDE3000
	0x0331108C LDR X26, [X26 + 0x9F0]
	0x03311090 LDR X0, [X26]
	0x03311094 LDR W8, [X0 + 0xE0]
	0x03311098 CBNZ W8, 0x33110A0
	0x0331109C BL 0x1C16DFC
	0x033110A0 ADD X0, X31, 0x40
	0x033110A4 MOV X1, X31
	0x033110A8 BL 0x3361868
	0x033110AC LDR X8, [X26]
	0x033110B0 MOV W25, W0
	0x033110B4 MOV X1, X31
	0x033110B8 LDR X8, [X8 + 0xB8]
	0x033110BC ADD X0, X8, 0x10
	0x033110C0 BL 0x3361868
	0x033110C4 CMP W25, W0
	0x033110C8 B.LE 0x3311184
	0x033110CC LDR X0, [X26]
	0x033110D0 LDR W8, [X0 + 0xE0]
	0x033110D4 CBNZ W8, 0x33110DC
	0x033110D8 BL 0x1C16DFC
	0x033110DC ADD X0, X31, 0x40
	0x033110E0 MOV X1, X31
	0x033110E4 BL 0x3361868
	0x033110E8 SUB W1, W0, 0x1
	0x033110EC ADD X0, X31, 0x0
	0x033110F0 MOVZ W2, 0xC
	0x033110F4 MOVZ W3, 0x1F
	0x033110F8 MOV X4, X31
	0x033110FC STR X31, [X31]
	0x03311100 BL 0x335F0C4
	0x03311104 LDR X1, [X31]
	0x03311108 ADD X3, X31, 0x28
	0x0331110C MOV X0, X23
	0x03311110 MOV W2, W31
	0x03311114 BL 0x330FDF4
	0x03311118 CBZ X0, 0x33114D4
	0x0331111C MOV X25, X0
	0x03311120 BL 0x3310768
	0x03311124 TBZ X0, 0x0, 0x33114D4
	0x03311128 LDR X0, [X26]
	0x0331112C LDR W8, [X0 + 0xE0]
	0x03311130 CBNZ W8, 0x3311138
	0x03311134 BL 0x1C16DFC
	0x03311138 ADD X0, X31, 0x40
	0x0331113C MOV X1, X31
	0x03311140 BL 0x3361868
	0x03311144 LDR X3, [X31 + 0x28]
	0x03311148 SUB W1, W0, 0x1
	0x0331114C ADD X8, X31, 0x0
	0x03311150 MOV X0, X23

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x10CD000
	011 Move W8, [X25+2872]
	012 Move W23, W5
	013 Move X21, X4
	014 Move X19, X3
	015 Move X24, X2
	016 Move X20, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xDE5000
	023 Move X0, [X0+2544]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+2872], W8
	027 Compare X20, 0
	028 JumpIfEqual {130}
	029 Move X26, 0xDE5000
	030 Move X26, [X26+2544]
	031 Move X8, [X20+16]
	032 Move X0, [X26]
	033 Move [X31+8], X8
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Add X0, X31, 8
	039 Move X1, X31
	040 Call DateTime.get_Kind, X0
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X25, X19
	043 Move TEMP, X23
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {56}
	047 Compare X24, 0
	048 JumpIfEqual {130}
	049 Move X2, [X24+32]
	050 Move X3, [X24+88]
	051 Move W4, 1
	052 Move X0, X22
	053 Move X1, X19
	054 Call TimeZoneInfo.ConvertToFromUtc, X0, X1, X2, X3, X4
	055 Move X25, X0
	056 Move X0, [X26]
	057 Move X24, [X20+16]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X25
	063 Move X0, [X26]
	064 Move X24, [X20+16]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X0, X21
	070 Move X1, X24
	071 Move X2, X31
	072 Call DateTime.op_GreaterThanOrEqual, X0, X1
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {107}
	077 Move X8, [X20+24]
	078 Move X0, [X26]
	079 Move [X31+8], X8
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Add X0, X31, 8
	085 Move X1, X31
	086 Call DateTime.get_Kind, X0
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move TEMP, X23
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {99}
	092 Move X2, [X20+32]
	093 Move X3, [X20+88]
	094 Move W4, 1
	095 Move X0, X22
	096 Move X1, X19
	097 Call TimeZoneInfo.ConvertToFromUtc, X0, X1, X2, X3, X4
	098 Move X19, X0
	099 Move X0, [X26]
	100 Move X20, [X20+24]
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 Move X0, X19
	106 Move X1, X20
	107 Move W0, 1
	108 Move X0, [X26]
	109 Move X19, [X20+24]
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Move X0, X21
	115 Move X1, X19
	116 Move X2, X31
	117 Call DateTime.op_LessThanOrEqual, X0, X1
	118 And W8, W0, 1
	119 Subtract W0, W8, 1
	120 Move X20, [X31+64]
	121 Move X19, [X31+72]
	122 Move X22, [X31+48]
	123 Move X21, [X31+56]
	124 Move X24, [X31+32]
	125 Move X23, [X31+40]
	126 Move X26, [X31+16]
	127 Move X25, [X31+24]
	128 Move X30, [X31+80]
	129 Return X0
	130 Call 0x1C17F20

Method: System.DateTime ConvertToUtc(System.DateTime dateTime, System.TimeSpan daylightDelta, System.TimeSpan baseUtcOffsetDelta)

Disassembly:
	0x03311154 MOV X2, X25
	0x03311158 BL 0x330E314

ISIL:
	001 Move W4, 1

Method: System.DateTime ConvertFromUtc(System.DateTime dateTime, System.TimeSpan daylightDelta, System.TimeSpan baseUtcOffsetDelta)

Disassembly:
	0x033112FC MOV X0, X22
	0x03311300 MOV X1, X26

ISIL:
	001 Move W4, W31
	002 Call TimeZoneInfo.ConvertToFromUtc, X0, X1, X2, X3, X4
	003 Return X0

Method: System.DateTime ConvertToFromUtc(System.DateTime dateTime, System.TimeSpan daylightDelta, System.TimeSpan baseUtcOffsetDelta, System.Boolean convertToUtc)

Disassembly:
	0x0331115C LDR X0, [X31]
	0x03311160 MOV X1, X22
	0x03311164 MOV X2, X31
	0x03311168 BL 0x3362F18
	0x0331116C LDR X1, [X25 + 0x58]
	0x03311170 MOV X2, X31
	0x03311174 BL 0x3362F18
	0x03311178 MOV X24, X0
	0x0331117C MOVZ W25, 0x1
	0x03311180 B 0x33111B8
	0x03311184 ADRP X8, 0xDE3000
	0x03311188 LDR X8, [X8 + 0x9F0]
	0x0331118C LDR X25, [X31 + 0x40]
	0x03311190 LDR X0, [X8]
	0x03311194 LDR W8, [X0 + 0xE0]
	0x03311198 CBNZ W8, 0x33111A0
	0x0331119C BL 0x1C16DFC
	0x033111A0 MOV X0, X25
	0x033111A4 MOV X1, X24
	0x033111A8 MOV X2, X31
	0x033111AC BL 0x3362F18
	0x033111B0 MOV X24, X0
	0x033111B4 MOV W25, W31
	0x033111B8 ADRP X28, 0xDE4000
	0x033111BC LDR X28, [X28 + 0x570]
	0x033111C0 MOV X1, X22
	0x033111C4 MOV X2, X21
	0x033111C8 BL 0x3310F34
	0x033111CC MOV X26, X0
	0x033111D0 MOV X0, X21
	0x033111D4 BL 0x3310768
	0x033111D8 TBZ X0, 0x0, 0x33112E0
	0x033111DC ADRP X29, 0xDE3000
	0x033111E0 LDR X29, [X29 + 0x9F0]
	0x033111E4 ADD X9, X31, 0x40
	0x033111E8 ORR X27, X9, 0xF
	0x033111EC LDR X0, [X29]
	0x033111F0 LDR W8, [X0 + 0xE0]
	0x033111F4 CBNZ W8, 0x33111FC
	0x033111F8 BL 0x1C16DFC
	0x033111FC MOV X0, X27
	0x03311200 MOV X1, X31
	0x03311204 BL 0x3361868
	0x03311208 LDR X8, [X29]
	0x0331120C MOV W28, W0
	0x03311210 MOV X1, X31
	0x03311214 LDR X8, [X8 + 0xB8]
	0x03311218 ADD X0, X8, 0x18
	0x0331121C BL 0x3361868
	0x03311220 CMP W28, W0
	0x03311224 ADRP X28, 0xDE4000
	0x03311228 LDR X28, [X28 + 0x570]
	0x0331122C B.GE 0x33112E0
	0x03311230 LDR X0, [X29]
	0x03311234 LDR W8, [X0 + 0xE0]
	0x03311238 CBNZ W8, 0x3311240
	0x0331123C BL 0x1C16DFC
	0x03311240 MOV X0, X27
	0x03311244 MOV X1, X31
	0x03311248 BL 0x3361868
	0x0331124C ADD W1, W0, 0x1
	0x03311250 ADD X0, X31, 0x0
	0x03311254 MOVZ W2, 0x1
	0x03311258 MOVZ W3, 0x1
	0x0331125C MOV X4, X31
	0x03311260 STR X31, [X31]
	0x03311264 BL 0x335F0C4
	0x03311268 LDR X1, [X31]
	0x0331126C ADD X3, X31, 0x20
	0x03311270 MOV X0, X23
	0x03311274 MOV W2, W31
	0x03311278 BL 0x330FDF4
	0x0331127C CBZ X0, 0x3311520
	0x03311280 MOV X28, X0
	0x03311284 BL 0x3310650
	0x03311288 TBZ X0, 0x0, 0x3311520
	0x0331128C MOV X0, X28
	0x03311290 BL 0x3310768
	0x03311294 LDR X8, [X29]
	0x03311298 MOV W25, W0
	0x0331129C LDR W9, [X8 + 0xE0]
	0x033112A0 CBNZ W9, 0x33112AC
	0x033112A4 MOV X0, X8
	0x033112A8 BL 0x1C16DFC
	0x033112AC MOV X0, X27
	0x033112B0 MOV X1, X31
	0x033112B4 BL 0x3361868
	0x033112B8 TBZ X25, 0x0, 0x3311604
	0x033112BC ADD W1, W0, 0x1
	0x033112C0 ADD X0, X31, 0x0
	0x033112C4 MOVZ W2, 0xC
	0x033112C8 MOVZ W3, 0x1F
	0x033112CC MOV X4, X31
	0x033112D0 STR X31, [X31]
	0x033112D4 BL 0x335F0C4
	0x033112D8 LDR X0, [X31]
	0x033112DC B 0x3311620
	0x033112E0 ADRP X8, 0xDE3000
	0x033112E4 LDR X8, [X8 + 0x9F0]
	0x033112E8 LDR X22, [X31 + 0x48]
	0x033112EC LDR X0, [X8]
	0x033112F0 LDR W8, [X0 + 0xE0]
	0x033112F4 CBNZ W8, 0x33112FC
	0x033112F8 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+8], X1
	003 Move [X31+16], X30
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x10CC000
	011 Move X24, 0xDE5000
	012 Move W8, [X23+2873]
	013 Move X24, [X24+1392]
	014 Move W19, W4
	015 Move X20, X3
	016 Move X21, X2
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xDE4000
	023 Move X0, [X0+2544]
	024 Call 0x1C17CF4
	025 Move X0, 0xDE5000
	026 Move X0, [X0+1392]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+2873], W8
	030 Move X0, [X24]
	031 Move X22, [X22+48]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X23, 0xDE4000
	037 Move X23, [X23+2544]
	038 Move X0, X22
	039 Move X1, X21
	040 Move X2, X31
	041 Call TimeSpan.op_Addition, X0, X1
	042 Move X1, X20
	043 Move X2, X31
	044 Call TimeSpan.op_Addition, X0, X1
	045 Move [X31], X0
	046 Move TEMP, X19
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {59}
	050 Move X0, [X24]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Add X0, X31, 0
	056 Move X1, X31
	057 Call TimeSpan.Negate, X0
	058 Move [X31], X0
	059 Move X0, [X23]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Add X0, X31, 8
	065 Move X1, X31
	066 Call DateTime.get_Ticks, X0
	067 Move X8, [X24]
	068 Move X19, X0
	069 Move W9, [X8+224]
	070 Compare W9, 0
	071 JumpIfNotEqual {74}
	072 Move X0, X8
	073 Call 0x1C17DFC
	074 Move X8, [X23]
	075 Move X9, [X31]
	076 Move X1, X31
	077 Move X8, [X8+184]
	078 Add X19, X9, X19
	079 Add X0, X8, 24
	080 Call DateTime.get_Ticks, X0
	081 Move X8, [X23]
	082 Move X20, X0
	083 Move W9, [X8+224]
	084 Compare W9, 0
	085 JumpIfNotEqual {89}
	086 Move X0, X8
	087 Call 0x1C17DFC
	088 Move X8, [X23]
	089 Move X8, [X8+184]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X0, [X8+24]
	092 Add X0, X8, 16
	093 Move X1, X31
	094 Call DateTime.get_Ticks, X0
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X0, [X23]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {102}
	100 Call 0x1C17DFC
	101 Move X0, [X23]
	102 Move X8, [X0+184]
	103 Move X0, [X8+16]
	104 Move [X31+24], X0
	105 Add X0, X31, 24
	106 Move X1, X19
	107 Move X2, X31
	108 Move [X31+24], X31
	109 Call DateTime..ctor, X0, X1
	110 Move X0, [X31+24]
	111 Move X20, [X31+64]
	112 Move X19, [X31+72]
	113 Move X22, [X31+48]
	114 Move X21, [X31+56]
	115 Move X24, [X31+32]
	116 Move X23, [X31+40]
	117 Move X30, [X31+16]
	118 Add X31, X31, 80
	119 Return X0

Method: System.DateTime ConvertUtcToTimeZone(System.Int64 ticks, System.TimeZoneInfo destinationTimeZone, out System.Boolean isAmbiguousLocalDst)

Disassembly:
	0x0330FBFC B.EQ 0x330FC08
	0x0330FC00 B 0x330FDA8
	0x0330FC04 STR X31, [X19 + 0x20]
	0x0330FC08 LDR X0, [X23]
	0x0330FC0C ADRP X21, 0xE18000
	0x0330FC10 LDR X21, [X21 + 0xC88]
	0x0330FC14 MOV X1, X31
	0x0330FC18 BL 0x338C698
	0x0330FC1C LDR X1, [X21]
	0x0330FC20 MOV X2, X0
	0x0330FC24 MOV X0, X20
	0x0330FC28 MOV X3, X31
	0x0330FC2C BL 0x32A9678
	0x0330FC30 CBZ X0, 0x330FC58
	0x0330FC34 LDR X1, [X22]
	0x0330FC38 LDR X8, [X0]
	0x0330FC3C CMP X8, X1
	0x0330FC40 B.NE 0x330FDA8
	0x0330FC44 STR X0, [X19 + 0x28]
	0x0330FC48 LDR X8, [X0]
	0x0330FC4C CMP X8, X1
	0x0330FC50 B.EQ 0x330FC5C
	0x0330FC54 B 0x330FDA8
	0x0330FC58 STR X31, [X19 + 0x28]
	0x0330FC5C ADRP X8, 0xE16000
	0x0330FC60 LDR X8, [X8 + 0x180]
	0x0330FC64 ADRP X21, 0xE18000
	0x0330FC68 MOV X1, X31
	0x0330FC6C LDR X0, [X8]
	0x0330FC70 LDR X21, [X21 + 0xC90]
	0x0330FC74 BL 0x338C698
	0x0330FC78 LDR X1, [X21]
	0x0330FC7C MOV X2, X0
	0x0330FC80 MOV X0, X20
	0x0330FC84 MOV X3, X31
	0x0330FC88 BL 0x32A9678
	0x0330FC8C CBZ X0, 0x330FDAC
	0x0330FC90 ADRP X8, 0xDE6000
	0x0330FC94 LDR X8, [X8 + 0x570]
	0x0330FC98 LDR X9, [X0]
	0x0330FC9C LDR X1, [X8]
	0x0330FCA0 LDR X8, [X9 + 0x40]
	0x0330FCA4 LDR X9, [X1 + 0x40]
	0x0330FCA8 CMP X8, X9
	0x0330FCAC B.NE 0x330FDA8
	0x0330FCB0 ADRP X21, 0xE18000
	0x0330FCB4 ADRP X22, 0xE18000
	0x0330FCB8 LDR X21, [X21 + 0xCB8]
	0x0330FCBC LDR X22, [X22 + 0xCA0]
	0x0330FCC0 BL 0x1C16E08
	0x0330FCC4 LDR X8, [X0]
	0x0330FCC8 MOV X1, X31
	0x0330FCCC STR X8, [X19 + 0x30]
	0x0330FCD0 LDR X0, [X21]
	0x0330FCD4 BL 0x338C698
	0x0330FCD8 LDR X1, [X22]
	0x0330FCDC MOV X2, X0
	0x0330FCE0 MOV X0, X20
	0x0330FCE4 MOV X3, X31
	0x0330FCE8 BL 0x32A9678
	0x0330FCEC CBZ X0, 0x330FD30
	0x0330FCF0 ADRP X23, 0xE18000
	0x0330FCF4 LDR X23, [X23 + 0xC60]
	0x0330FCF8 MOV X21, X0
	0x0330FCFC LDR X22, [X23]
	0x0330FD00 MOV X1, X22
	0x0330FD04 BL 0x1C16E00
	0x0330FD08 CBZ X0, 0x330FD24
	0x0330FD0C STR X0, [X19 + 0x40]
	0x0330FD10 LDR X22, [X23]
	0x0330FD14 MOV X0, X21
	0x0330FD18 MOV X1, X22
	0x0330FD1C BL 0x1C16E00
	0x0330FD20 CBNZ X0, 0x330FD34
	0x0330FD24 MOV X0, X21
	0x0330FD28 MOV X1, X22
	0x0330FD2C BL 0x1C171E0
	0x0330FD30 STR X31, [X19 + 0x40]
	0x0330FD34 ADRP X8, 0xE0D000
	0x0330FD38 LDR X8, [X8 + 0x248]
	0x0330FD3C ADRP X21, 0xE18000
	0x0330FD40 MOV X1, X31
	0x0330FD44 LDR X0, [X8]
	0x0330FD48 LDR X21, [X21 + 0xC70]
	0x0330FD4C BL 0x338C698
	0x0330FD50 LDR X1, [X21]
	0x0330FD54 MOV X2, X0
	0x0330FD58 MOV X0, X20
	0x0330FD5C MOV X3, X31
	0x0330FD60 BL 0x32A9678
	0x0330FD64 CBZ X0, 0x330FDAC
	0x0330FD68 ADRP X8, 0xDE4000
	0x0330FD6C LDR X8, [X8 + 0xB58]
	0x0330FD70 LDR X9, [X0]
	0x0330FD74 LDR X1, [X8]
	0x0330FD78 LDR X8, [X9 + 0x40]
	0x0330FD7C LDR X9, [X1 + 0x40]
	0x0330FD80 CMP X8, X9
	0x0330FD84 B.NE 0x330FDA8
	0x0330FD88 BL 0x1C16E08
	0x0330FD8C LDRB W8, [X0]
	0x0330FD90 LDP X22, X21, [X31 + 0x20]
	0x0330FD94 LDP X24, X23, [X31 + 0x10]
	0x0330FD98 STRB W8, [X19 + 0x38]
	0x0330FD9C LDP X20, X19, [X31 + 0x30]
	0x0330FDA0 LDR X30, [X31], #0x40
	0x0330FDA4 RET
	0x0330FDA8 BL 0x1C171E0
	0x0330FDAC BL 0x1C16F20
	0x0330FDB0 ADRP X0, 0xDE9000
	0x0330FDB4 LDR X0, [X0 + 0x528]
	0x0330FDB8 BL 0x1C16D08
	0x0330FDBC BL 0x1C16F10
	0x0330FDC0 MOV X19, X0
	0x0330FDC4 ADRP X0, 0xE0E000
	0x0330FDC8 LDR X0, [X0 + 0x2D8]
	0x0330FDCC BL 0x1C16D08
	0x0330FDD0 MOV X1, X0
	0x0330FDD4 MOV X0, X19
	0x0330FDD8 BL 0x330E100
	0x0330FDDC ADRP X0, 0xE18000
	0x0330FDE0 LDR X0, [X0 + 0xCC0]
	0x0330FDE4 BL 0x1C16D08
	0x0330FDE8 MOV X1, X0
	0x0330FDEC MOV X0, X19
	0x0330FDF0 BL 0x1C16DEC
	0x0330FDF4 SUB X31, X31, 0x70
	0x0330FDF8 STP X30, X27, [X31 + 0x20]
	0x0330FDFC STP X26, X25, [X31 + 0x30]
	0x0330FE00 STP X24, X23, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X22, 0x10CE000
	010 Move X23, 0xDE6000
	011 Move W8, [X22+2874]
	012 Move X23, [X23+2544]
	013 Move X20, X2
	014 Move X21, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xDE6000
	021 Move X0, [X0+2544]
	022 Call 0x1C17CF4
	023 Move X0, 0xDE7000
	024 Move X0, [X0+1392]
	025 Call 0x1C17CF4
	026 Move X0, 0xE19000
	027 Move X0, [X0+2616]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+2874], W8
	031 Move X0, [X23]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X23]
	037 Move X8, [X0+184]
	038 Move X1, X31
	039 Add X0, X8, 24
	040 Call DateTime.get_Ticks, X0
	041 Move X8, [X23]
	042 Move X22, X0
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {49}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move X8, [X23]
	049 Move X24, 0xE19000
	050 Move X8, [X8+184]
	051 Move X24, [X24+2616]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X22, [X8+24]
	054 Add X0, X8, 16
	055 Move X1, X31
	056 Call DateTime.get_Ticks, X0
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X0, [X23]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {64}
	062 Call 0x1C17DFC
	063 Move X0, [X23]
	064 Move X8, [X0+184]
	065 Move X22, [X8+16]
	066 Add X0, X31, 8
	067 Move X1, X19
	068 Move X2, X31
	069 Move [X31+8], X31
	070 Call DateTime..ctor, X0, X1
	071 Move X22, [X31+8]
	072 Move X0, [X24]
	073 Move X24, 0xDE7000
	074 Move W8, [X0+224]
	075 Move X24, [X24+1392]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X0, X22
	080 Move X1, X21
	081 Move X2, X20
	082 Call TimeZoneInfo.GetUtcOffsetFromUtc, X0, X1, X2
	083 Move X8, [X24]
	084 Move X20, X0
	085 Move W9, [X8+224]
	086 Compare W9, 0
	087 JumpIfNotEqual {90}
	088 Move X0, X8
	089 Call 0x1C17DFC
	090 Move X0, [X23]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {96}
	094 Call 0x1C17DFC
	095 Move X0, [X23]
	096 Move X8, [X0+184]
	097 Move X1, X31
	098 Add X19, X20, X19
	099 Add X0, X8, 24
	100 Call DateTime.get_Ticks, X0
	101 Move X8, [X23]
	102 Move X20, X0
	103 Move W9, [X8+224]
	104 Compare W9, 0
	105 JumpIfNotEqual {109}
	106 Move X0, X8
	107 Call 0x1C17DFC
	108 Move X8, [X23]
	109 Move X8, [X8+184]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X0, [X8+24]
	112 Add X0, X8, 16
	113 Move X1, X31
	114 Call DateTime.get_Ticks, X0
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X0, [X23]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {122}
	120 Call 0x1C17DFC
	121 Move X0, [X23]
	122 Move X8, [X0+184]
	123 Move X0, [X8+16]
	124 Move [X31+24], X0
	125 Add X0, X31, 24
	126 Move X1, X19
	127 Move X2, X31
	128 Move [X31+24], X31
	129 Call DateTime..ctor, X0, X1
	130 Move X0, [X31+24]
	131 Move X20, [X31+64]
	132 Move X19, [X31+72]
	133 Move X22, [X31+48]
	134 Move X21, [X31+56]
	135 Move X24, [X31+32]
	136 Move X23, [X31+40]
	137 Move X30, [X31+16]
	138 Add X31, X31, 80
	139 Return X0

Method: System.Globalization.DaylightTimeStruct GetDaylightTime(System.Int32 year, System.TimeZoneInfo/AdjustmentRule rule, System.Nullable`1<System.Int32> ruleIndex)

Disassembly:
	0x0330F314 STR X30, [X31 - 0x20]!
	0x0330F318 STP X20, X19, [X31 + 0x10]
	0x0330F31C ADRP X20, 0x10CD000
	0x0330F320 LDRB W8, [X20 + 0xB21]
	0x0330F324 MOV X19, X0
	0x0330F328 TBNZ X8, 0x0, 0x330F340
	0x0330F32C ADRP X0, 0xDE6000
	0x0330F330 LDR X0, [X0 + 0x278]
	0x0330F334 BL 0x1C16CF4
	0x0330F338 MOVZ W8, 0x1
	0x0330F33C STRB W8, [X20 + 0xB21]
	0x0330F340 LDR X0, [X19 + 0x18]
	0x0330F344 CBNZ X0, 0x330F35C
	0x0330F348 ADRP X8, 0xDE6000
	0x0330F34C LDR X8, [X8 + 0x278]
	0x0330F350 LDR X8, [X8]
	0x0330F354 LDR X8, [X8 + 0xB8]
	0x0330F358 LDR X0, [X8]
	0x0330F35C LDP X20, X19, [X31 + 0x10]
	0x0330F360 LDR X30, [X31], #0x20
	0x0330F364 RET
	0x0330F368 STR X30, [X31 - 0x20]!
	0x0330F36C STP X20, X19, [X31 + 0x10]
	0x0330F370 ADRP X20, 0x10CD000
	0x0330F374 ADRP X19, 0xE18000
	0x0330F378 LDRB W8, [X20 + 0xB30]
	0x0330F37C LDR X19, [X19 + 0xA38]
	0x0330F380 TBNZ X8, 0x0, 0x330F398
	0x0330F384 ADRP X0, 0xE18000
	0x0330F388 LDR X0, [X0 + 0xA38]
	0x0330F38C BL 0x1C16CF4
	0x0330F390 MOVZ W8, 0x1
	0x0330F394 STRB W8, [X20 + 0xB30]
	0x0330F398 LDR X0, [X19]
	0x0330F39C LDR W8, [X0 + 0xE0]
	0x0330F3A0 CBNZ W8, 0x330F3AC
	0x0330F3A4 BL 0x1C16DFC
	0x0330F3A8 LDR X0, [X19]
	0x0330F3AC LDR X8, [X0 + 0xB8]
	0x0330F3B0 LDP X20, X19, [X31 + 0x10]
	0x0330F3B4 LDR X0, [X8]
	0x0330F3B8 LDR X30, [X31], #0x20
	0x0330F3BC RET
	0x0330F3C0 STR X30, [X31 - 0x60]!
	0x0330F3C4 STP X28, X27, [X31 + 0x10]
	0x0330F3C8 STP X26, X25, [X31 + 0x20]
	0x0330F3CC STP X24, X23, [X31 + 0x30]
	0x0330F3D0 STP X22, X21, [X31 + 0x40]
	0x0330F3D4 STP X20, X19, [X31 + 0x50]
	0x0330F3D8 ADRP X28, 0x10CD000
	0x0330F3DC ADRP X27, 0xE18000
	0x0330F3E0 LDRB W8, [X28 + 0xB31]
	0x0330F3E4 LDR X27, [X27 + 0xA38]
	0x0330F3E8 MOV W20, W7
	0x0330F3EC MOV X19, X6
	0x0330F3F0 MOV X22, X5
	0x0330F3F4 MOV X23, X4
	0x0330F3F8 MOV X24, X3
	0x0330F3FC MOV X25, X2
	0x0330F400 MOV X26, X1
	0x0330F404 MOV X21, X0
	0x0330F408 TBNZ X8, 0x0, 0x330F420
	0x0330F40C ADRP X0, 0xE18000
	0x0330F410 LDR X0, [X0 + 0xA38]
	0x0330F414 BL 0x1C16CF4
	0x0330F418 MOVZ W8, 0x1
	0x0330F41C STRB W8, [X28 + 0xB31]
	0x0330F420 MOV X0, X21
	0x0330F424 MOV X1, X31
	0x0330F428 STRB W31, [X31 + 0xC]
	0x0330F42C BL 0x33BDD8C
	0x0330F430 LDR X0, [X27]
	0x0330F434 LDR W8, [X0 + 0xE0]
	0x0330F438 CBNZ W8, 0x330F440
	0x0330F43C BL 0x1C16DFC
	0x0330F440 ADD X3, X31, 0xC
	0x0330F444 MOV X0, X26
	0x0330F448 MOV X1, X25
	0x0330F44C MOV X2, X19

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+112], X24
	004 Move [X31+120], X23
	005 Move [X31+128], X22
	006 Move [X31+136], X21
	007 Move [X31+144], X20
	008 Move [X31+152], X19
	009 Move X20, 0x10CE000
	010 Move W9, [X20+2875]
	011 Move X24, X3
	012 Move X21, X2
	013 Move W22, W1
	014 Move X23, X0
	015 Move X19, X8
	016 Move TEMP, X9
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xE19000
	021 Move X0, [X0+2616]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2875], W8
	025 Compare X21, 0
	026 JumpIfEqual {94}
	027 Move W8, [X21+96]
	028 Move X20, [X21+32]
	029 Compare W8, 0
	030 JumpIfEqual {50}
	031 Move X0, X23
	032 Move X1, X21
	033 Move X2, X24
	034 Call TimeZoneInfo.GetPreviousAdjustmentRule, X0, X1, X2
	035 Compare X0, 0
	036 JumpIfEqual {94}
	037 Move X1, [X21+16]
	038 Move X2, [X0+32]
	039 Move X3, [X0+88]
	040 Move X0, X23
	041 Move W4, W31
	042 Call TimeZoneInfo.ConvertToFromUtc, X0, X1, X2, X3, X4
	043 Move X1, [X21+24]
	044 Move X2, [X21+32]
	045 Move X3, [X21+88]
	046 Move X24, X0
	047 Move X0, X23
	048 Move W4, W31
	049 Call TimeZoneInfo.ConvertToFromUtc, X0, X1, X2, X3, X4
	050 Move X9, 0xE19000
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 Move X8, [X21+56]
	053 Move X9, [X9+2616]
	054 Move [X31+4], V0
	055 Move [X31+80], X8
	056 Move X0, [X9]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move V0, [X31+4]
	062 Move X8, [X31+80]
	063 Add X1, X31, 32
	064 Move W0, W22
	065 Move [X31+2], V0
	066 Move [X31+48], X8
	067 Call TimeZoneInfo.TransitionTimeToDateTime, X0, X1
	068 Move V0, [X21+4]
	069 Move X8, [X21+80]
	070 Move X24, X0
	071 Add X1, X31, 0
	072 Move W0, W22
	073 Move [X31], V0
	074 Move [X31+16], X8
	075 Call TimeZoneInfo.TransitionTimeToDateTime, X0, X1
	076 Move X2, X0
	077 Move [X19], X31
	078 Move [X19+8], X31
	079 Move [X19+16], X31
	080 Move X0, X19
	081 Move X1, X24
	082 Move X3, X20
	083 Move X20, [X31+144]
	084 Move X19, [X31+152]
	085 Move X22, [X31+128]
	086 Move X21, [X31+136]
	087 Move X24, [X31+112]
	088 Move X23, [X31+120]
	089 Move X30, [X31+96]
	090 Move X4, X31
	091 Add X31, X31, 160
	092 Call DaylightTimeStruct..ctor, X0, X1, X2, X3
	093 Return X0
	094 Call 0x1C17F20

Method: System.Boolean GetIsDaylightSavings(System.DateTime time, System.TimeZoneInfo/AdjustmentRule rule, System.Globalization.DaylightTimeStruct daylightTime, System.TimeZoneInfoOptions flags)

Disassembly:
	0x0330F81C STP X22, X21, [X31 + 0x40]
	0x0330F820 STP X20, X19, [X31 + 0x50]
	0x0330F824 ADRP X21, 0x10CD000
	0x0330F828 LDRB W8, [X21 + 0xB35]
	0x0330F82C MOV X19, X1
	0x0330F830 MOV X20, X0
	0x0330F834 TBNZ X8, 0x0, 0x330F8A0
	0x0330F838 ADRP X0, 0xDE6000
	0x0330F83C LDR X0, [X0 + 0x570]
	0x0330F840 BL 0x1C16CF4
	0x0330F844 ADRP X0, 0xE18000
	0x0330F848 LDR X0, [X0 + 0xC88]
	0x0330F84C BL 0x1C16CF4
	0x0330F850 ADRP X0, 0xE18000
	0x0330F854 LDR X0, [X0 + 0xC90]
	0x0330F858 BL 0x1C16CF4
	0x0330F85C ADRP X0, 0xE18000
	0x0330F860 LDR X0, [X0 + 0xC98]
	0x0330F864 BL 0x1C16CF4
	0x0330F868 ADRP X0, 0xE18000
	0x0330F86C LDR X0, [X0 + 0xCA0]
	0x0330F870 BL 0x1C16CF4
	0x0330F874 ADRP X0, 0xDEF000
	0x0330F878 LDR X0, [X0 + 0x3B8]
	0x0330F87C BL 0x1C16CF4
	0x0330F880 ADRP X0, 0xE18000
	0x0330F884 LDR X0, [X0 + 0xC70]
	0x0330F888 BL 0x1C16CF4
	0x0330F88C ADRP X0, 0xE18000
	0x0330F890 LDR X0, [X0 + 0xCA8]
	0x0330F894 BL 0x1C16CF4
	0x0330F898 MOVZ W8, 0x1
	0x0330F89C STRB W8, [X21 + 0xB35]
	0x0330F8A0 CBZ X19, 0x330F9A0
	0x0330F8A4 ADRP X8, 0xDEF000
	0x0330F8A8 LDR X8, [X8 + 0x3B8]
	0x0330F8AC ADRP X21, 0xE18000
	0x0330F8B0 ADRP X22, 0xE18000
	0x0330F8B4 ADRP X23, 0xE18000
	0x0330F8B8 ADRP X24, 0xDE6000
	0x0330F8BC LDR X21, [X21 + 0xCA8]
	0x0330F8C0 LDR X22, [X22 + 0xC98]
	0x0330F8C4 LDR X23, [X23 + 0xC88]
	0x0330F8C8 LDR X24, [X24 + 0x570]
	0x0330F8CC LDR X2, [X20 + 0x10]
	0x0330F8D0 LDR X1, [X8]
	0x0330F8D4 ADRP X25, 0xE18000
	0x0330F8D8 ADRP X26, 0xE18000
	0x0330F8DC ADRP X27, 0xE18000
	0x0330F8E0 LDR X25, [X25 + 0xC90]
	0x0330F8E4 LDR X26, [X26 + 0xCA0]
	0x0330F8E8 LDR X27, [X27 + 0xC70]
	0x0330F8EC MOV X0, X19
	0x0330F8F0 MOV X3, X31
	0x0330F8F4 BL 0x32A8BF0
	0x0330F8F8 LDR X2, [X20 + 0x18]
	0x0330F8FC LDR X1, [X21]
	0x0330F900 MOV X0, X19
	0x0330F904 MOV X3, X31
	0x0330F908 BL 0x32A8BF0
	0x0330F90C LDR X2, [X20 + 0x20]
	0x0330F910 LDR X1, [X22]
	0x0330F914 MOV X0, X19
	0x0330F918 MOV X3, X31
	0x0330F91C BL 0x32A8BF0
	0x0330F920 LDR X2, [X20 + 0x28]
	0x0330F924 LDR X1, [X23]
	0x0330F928 MOV X0, X19
	0x0330F92C MOV X3, X31
	0x0330F930 BL 0x32A8BF0
	0x0330F934 LDR X8, [X20 + 0x30]
	0x0330F938 LDR X0, [X24]
	0x0330F93C ADD X1, X31, 0x8
	0x0330F940 STR X8, [X31 + 0x8]
	0x0330F944 BL 0x1C16E04
	0x0330F948 LDR X1, [X25]
	0x0330F94C MOV X2, X0
	0x0330F950 MOV X0, X19
	0x0330F954 MOV X3, X31
	0x0330F958 BL 0x32A8BF0
	0x0330F95C LDR X2, [X20 + 0x40]
	0x0330F960 LDR X1, [X26]
	0x0330F964 MOV X0, X19
	0x0330F968 MOV X3, X31
	0x0330F96C BL 0x32A8BF0
	0x0330F970 LDRB W2, [X20 + 0x38]
	0x0330F974 LDR X1, [X27]
	0x0330F978 MOV X0, X19
	0x0330F97C MOV X3, X31
	0x0330F980 BL 0x32A8CA8
	0x0330F984 LDP X20, X19, [X31 + 0x50]
	0x0330F988 LDP X22, X21, [X31 + 0x40]
	0x0330F98C LDP X24, X23, [X31 + 0x30]
	0x0330F990 LDP X26, X25, [X31 + 0x20]
	0x0330F994 LDP X30, X27, [X31 + 0x10]
	0x0330F998 ADD X31, X31, 0x60
	0x0330F99C RET
	0x0330F9A0 ADRP X0, 0xDE9000
	0x0330F9A4 LDR X0, [X0 + 0x528]
	0x0330F9A8 BL 0x1C16D08
	0x0330F9AC BL 0x1C16F10
	0x0330F9B0 MOV X19, X0
	0x0330F9B4 ADRP X0, 0xE0E000
	0x0330F9B8 LDR X0, [X0 + 0x2D8]
	0x0330F9BC BL 0x1C16D08
	0x0330F9C0 MOV X1, X0
	0x0330F9C4 MOV X0, X19
	0x0330F9C8 BL 0x330E100
	0x0330F9CC ADRP X0, 0xE18000
	0x0330F9D0 LDR X0, [X0 + 0xCB0]
	0x0330F9D4 BL 0x1C16D08
	0x0330F9D8 MOV X1, X0
	0x0330F9DC MOV X0, X19
	0x0330F9E0 BL 0x1C16DEC
	0x0330F9E4 STR X30, [X31 - 0x40]!
	0x0330F9E8 STP X24, X23, [X31 + 0x10]
	0x0330F9EC STP X22, X21, [X31 + 0x20]
	0x0330F9F0 STP X20, X19, [X31 + 0x30]
	0x0330F9F4 ADRP X21, 0x10CD000
	0x0330F9F8 LDRB W8, [X21 + 0xB36]
	0x0330F9FC MOV X20, X1
	0x0330FA00 MOV X19, X0
	0x0330FA04 TBNZ X8, 0x0, 0x330FAD0
	0x0330FA08 ADRP X0, 0xE18000
	0x0330FA0C LDR X0, [X0 + 0xCB8]
	0x0330FA10 BL 0x1C16CF4
	0x0330FA14 ADRP X0, 0xE18000
	0x0330FA18 LDR X0, [X0 + 0xC60]
	0x0330FA1C BL 0x1C16CF4
	0x0330FA20 ADRP X0, 0xE0D000
	0x0330FA24 LDR X0, [X0 + 0x248]
	0x0330FA28 BL 0x1C16CF4
	0x0330FA2C ADRP X0, 0xDE4000
	0x0330FA30 LDR X0, [X0 + 0xB58]
	0x0330FA34 BL 0x1C16CF4
	0x0330FA38 ADRP X0, 0xE0C000
	0x0330FA3C LDR X0, [X0 + 0xB60]
	0x0330FA40 BL 0x1C16CF4
	0x0330FA44 ADRP X0, 0xDE6000
	0x0330FA48 LDR X0, [X0 + 0x278]
	0x0330FA4C BL 0x1C16CF4
	0x0330FA50 ADRP X0, 0xE16000
	0x0330FA54 LDR X0, [X0 + 0x180]
	0x0330FA58 BL 0x1C16CF4
	0x0330FA5C ADRP X0, 0xDE6000
	0x0330FA60 LDR X0, [X0 + 0x570]
	0x0330FA64 BL 0x1C16CF4
	0x0330FA68 ADRP X0, 0xDE4000
	0x0330FA6C LDR X0, [X0 + 0x6C0]
	0x0330FA70 BL 0x1C16CF4
	0x0330FA74 ADRP X0, 0xE18000
	0x0330FA78 LDR X0, [X0 + 0xC88]
	0x0330FA7C BL 0x1C16CF4
	0x0330FA80 ADRP X0, 0xE18000
	0x0330FA84 LDR X0, [X0 + 0xC90]
	0x0330FA88 BL 0x1C16CF4
	0x0330FA8C ADRP X0, 0xE18000
	0x0330FA90 LDR X0, [X0 + 0xC98]
	0x0330FA94 BL 0x1C16CF4
	0x0330FA98 ADRP X0, 0xE18000
	0x0330FA9C LDR X0, [X0 + 0xCA0]
	0x0330FAA0 BL 0x1C16CF4
	0x0330FAA4 ADRP X0, 0xDEF000
	0x0330FAA8 LDR X0, [X0 + 0x3B8]
	0x0330FAAC BL 0x1C16CF4
	0x0330FAB0 ADRP X0, 0xE18000
	0x0330FAB4 LDR X0, [X0 + 0xC70]
	0x0330FAB8 BL 0x1C16CF4
	0x0330FABC ADRP X0, 0xE18000
	0x0330FAC0 LDR X0, [X0 + 0xCA8]
	0x0330FAC4 BL 0x1C16CF4
	0x0330FAC8 MOVZ W8, 0x1
	0x0330FACC STRB W8, [X21 + 0xB36]
	0x0330FAD0 MOV X0, X19
	0x0330FAD4 MOV X1, X31
	0x0330FAD8 BL 0x33BDD8C
	0x0330FADC CBZ X20, 0x330FDB0
	0x0330FAE0 ADRP X8, 0xDE4000
	0x0330FAE4 LDR X8, [X8 + 0x6C0]
	0x0330FAE8 ADRP X23, 0xE0C000
	0x0330FAEC ADRP X24, 0xDEF000
	0x0330FAF0 LDR X0, [X8]
	0x0330FAF4 LDR X23, [X23 + 0xB60]
	0x0330FAF8 LDR W8, [X0 + 0xE0]
	0x0330FAFC LDR X21, [X23]
	0x0330FB00 LDR X24, [X24 + 0x3B8]
	0x0330FB04 CBNZ W8, 0x330FB0C
	0x0330FB08 BL 0x1C16DFC
	0x0330FB0C ADRP X22, 0xDE6000
	0x0330FB10 LDR X22, [X22 + 0x278]
	0x0330FB14 MOV X0, X21
	0x0330FB18 MOV X1, X31
	0x0330FB1C BL 0x338C698
	0x0330FB20 LDR X1, [X24]
	0x0330FB24 MOV X2, X0
	0x0330FB28 MOV X0, X20
	0x0330FB2C MOV X3, X31
	0x0330FB30 BL 0x32A9678
	0x0330FB34 CBZ X0, 0x330FB5C
	0x0330FB38 LDR X1, [X22]
	0x0330FB3C LDR X8, [X0]
	0x0330FB40 CMP X8, X1
	0x0330FB44 B.NE 0x330FDA8
	0x0330FB48 STR X0, [X19 + 0x10]
	0x0330FB4C LDR X8, [X0]
	0x0330FB50 CMP X8, X1
	0x0330FB54 B.EQ 0x330FB60
	0x0330FB58 B 0x330FDA8
	0x0330FB5C STR X31, [X19 + 0x10]
	0x0330FB60 LDR X0, [X23]
	0x0330FB64 ADRP X21, 0xE18000
	0x0330FB68 LDR X21, [X21 + 0xCA8]
	0x0330FB6C MOV X1, X31
	0x0330FB70 BL 0x338C698
	0x0330FB74 LDR X1, [X21]
	0x0330FB78 MOV X2, X0
	0x0330FB7C MOV X0, X20
	0x0330FB80 MOV X3, X31
	0x0330FB84 BL 0x32A9678
	0x0330FB88 CBZ X0, 0x330FBB0
	0x0330FB8C LDR X1, [X22]
	0x0330FB90 LDR X8, [X0]
	0x0330FB94 CMP X8, X1
	0x0330FB98 B.NE 0x330FDA8
	0x0330FB9C STR X0, [X19 + 0x18]
	0x0330FBA0 LDR X8, [X0]
	0x0330FBA4 CMP X8, X1
	0x0330FBA8 B.EQ 0x330FBB4
	0x0330FBAC B 0x330FDA8
	0x0330FBB0 STR X31, [X19 + 0x18]
	0x0330FBB4 LDR X0, [X23]
	0x0330FBB8 ADRP X21, 0xE18000
	0x0330FBBC LDR X21, [X21 + 0xC98]
	0x0330FBC0 MOV X1, X31
	0x0330FBC4 BL 0x338C698
	0x0330FBC8 LDR X1, [X21]
	0x0330FBCC MOV X2, X0
	0x0330FBD0 MOV X0, X20
	0x0330FBD4 MOV X3, X31
	0x0330FBD8 BL 0x32A9678
	0x0330FBDC CBZ X0, 0x330FC04
	0x0330FBE0 LDR X1, [X22]
	0x0330FBE4 LDR X8, [X0]
	0x0330FBE8 CMP X8, X1
	0x0330FBEC B.NE 0x330FDA8
	0x0330FBF0 STR X0, [X19 + 0x20]
	0x0330FBF4 LDR X8, [X0]
	0x0330FBF8 CMP X8, X1

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+88], X27
	004 Move [X31+96], X26
	005 Move [X31+104], X25
	006 Move [X31+112], X24
	007 Move [X31+120], X23
	008 Move [X31+128], X22
	009 Move [X31+136], X21
	010 Move [X31+144], X20
	011 Move [X31+152], X19
	012 Move X21, 0x10CE000
	013 Move W8, [X21+2876]
	014 Move X20, X2
	015 Move X19, X1
	016 Move [X31+72], X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xDE6000
	022 Move X0, [X0+2544]
	023 Call 0x1C17CF4
	024 Move X0, 0xDE7000
	025 Move X0, [X0+1392]
	026 Call 0x1C17CF4
	027 Move X0, 0xE19000
	028 Move X0, [X0+2616]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2876], W8
	032 Move [X31+64], X31
	033 Compare X19, 0
	034 JumpIfEqual {73}
	035 Move X24, 0xDE6000
	036 Move X24, [X24+2544]
	037 Move X0, [X24]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X25, 0xE19000
	043 Move X25, [X25+2616]
	044 Add X0, X31, 72
	045 Move X1, X31
	046 Call DateTime.get_Kind, X0
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X0, X19
	049 Call AdjustmentRule.IsStartDateMarkerForBeginningOfYear, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {116}
	054 Move X0, [X24]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, X20
	060 Move X1, X31
	061 Call DateTime.get_Year, X0
	062 Move W1, W0
	063 Add X0, X31, 32
	064 Move W2, 1
	065 Move W3, 1
	066 Move W4, W31
	067 Move W5, W31
	068 Move W6, W31
	069 Move X7, X31
	070 Move [X31+32], X31
	071 Call DateTime..ctor, X0, X1, X2, X3, X4, X5, X6
	072 Move X21, [X31+32]
	073 Move W0, W31
	074 Move X26, 0xDE7000
	075 Move X26, [X26+1392]
	076 Move X27, X19
	077 Add X27, X27, 32
	078 Move X21, [X27]
	079 Move X0, [X26]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {85}
	083 Call 0x1C17DFC
	084 Move X0, [X26]
	085 Move X8, [X0+184]
	086 Move X0, X21
	087 Move X2, X31
	088 Move X1, [X8]
	089 Call TimeSpan.op_GreaterThan, X0, X1
	090 Move W22, W0
	091 Move X0, X19
	092 Call AdjustmentRule.IsStartDateMarkerForBeginningOfYear, X0
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {135}
	097 Move X0, [X24]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X0, X20
	103 Move X1, X31
	104 Call DateTime.get_Year, X0
	105 Move W1, W0
	106 Add X0, X31, 32
	107 Move W2, 1
	108 Move W3, 1
	109 Move W4, W31
	110 Move W5, W31
	111 Move W6, W31
	112 Move X7, X31
	113 Move [X31+32], X31
	114 Call DateTime..ctor, X0, X1, X2, X3, X4, X5, X6
	115 Move X21, [X31+32]
	116 Move X0, [X24]
	117 Move X21, [X20]
	118 Move X22, [X20+16]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Move X0, X21
	124 Move X1, X22
	125 Move X2, X31
	126 Call DateTime.op_Addition, X0, X1
	127 Move X21, X0
	128 Move X0, X19
	129 Call AdjustmentRule.IsEndDateMarkerForEndOfYear, X0
	130 Move TEMP, X0
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfEqual {165}
	134 Move X22, [X20+8]
	135 Move X21, [X20]
	136 Move X8, X27
	137 Move TEMP, X22
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfEqual {148}
	141 Move X0, [X26]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {147}
	145 Call 0x1C17DFC
	146 Move X0, [X26]
	147 Move X8, [X0+184]
	148 Move X0, [X24]
	149 Move X23, [X8]
	150 Move W9, [X0+224]
	151 Compare W9, 0
	152 JumpIfNotEqual {154}
	153 Call 0x1C17DFC
	154 Move X0, X21
	155 Move X1, X23
	156 Move X2, X31
	157 Call DateTime.op_Addition, X0, X1
	158 Move X21, X0
	159 Move X0, X19
	160 Call AdjustmentRule.IsEndDateMarkerForEndOfYear, X0
	161 Move TEMP, X0
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfNotEqual {192}
	165 Move X0, [X24]
	166 Add X22, X20, 8
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {171}
	170 Call 0x1C17DFC
	171 Move X0, X22
	172 Move X1, X31
	173 Call DateTime.get_Year, X0
	174 Add W1, W0, 1
	175 Add X0, X31, 32
	176 Move W2, 1
	177 Move W3, 1
	178 Move W4, W31
	179 Move W5, W31
	180 Move W6, W31
	181 Move X7, X31
	182 Move [X31+32], X31
	183 Call DateTime..ctor, X0, X1, X2, X3, X4, X5, X6
	184 Move X8, [X31+32]
	185 Add X0, X31, 64
	186 Move TEMP, 0
	187 Not TEMP
	188 Move X1, TEMP
	189 Move X2, X31
	190 Move [X31+64], X8
	191 Call DateTime.AddTicks, X0, X1
	192 Move X23, [X20+8]
	193 Move TEMP, X22
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfNotEqual {207}
	197 Move X0, [X26]
	198 Move X22, [X27]
	199 Move W8, [X0+224]
	200 Compare W8, 0
	201 JumpIfNotEqual {203}
	202 Call 0x1C17DFC
	203 Move X0, X22
	204 Move X1, X31
	205 Call TimeSpan.op_UnaryNegation, X0
	206 Move X22, X0
	207 Move X0, [X26]
	208 Move W8, [X0+224]
	209 Compare W8, 0
	210 JumpIfNotEqual {213}
	211 Call 0x1C17DFC
	212 Move X0, [X26]
	213 Move X8, [X0+184]
	214 Move X22, [X8]
	215 Move X0, [X24]
	216 Move W8, [X0+224]
	217 Compare W8, 0
	218 JumpIfNotEqual {220}
	219 Call 0x1C17DFC
	220 Move X0, X23
	221 Move X1, X22
	222 Move X2, X31
	223 Call DateTime.op_Addition, X0, X1
	224 Move X22, X0
	225 Move X0, [X25]
	226 Move X23, [X31+72]
	227 Move W8, [X0+224]
	228 Compare W8, 0
	229 JumpIfNotEqual {231}
	230 Call 0x1C17DFC
	231 Move X0, X21
	232 Move X1, X23
	233 Move X2, X22
	234 Move W3, W31
	235 Move X4, X19
	236 Call TimeZoneInfo.CheckIsDst, X0, X1, X2, X3, X4
	237 Move W8, W0
	238 Move W0, W31
	239 Move TEMP, X8
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfNotEqual {283}
	243 Move X0, [X24]
	244 Move W8, [X0+224]
	245 Compare W8, 0
	246 JumpIfNotEqual {248}
	247 Call 0x1C17DFC
	248 Add X0, X31, 72
	249 Move X1, X31
	250 Call DateTime.get_Kind, X0
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move X8, [X20+16]
	253 Move V0, [X20]
	254 Move X0, [X25]
	255 Move X20, [X31+72]
	256 Move [X31+48], X8
	257 Move [X31+2], V0
	258 Move W8, [X0+224]
	259 Compare W8, 0
	260 JumpIfNotEqual {262}
	261 Call 0x1C17DFC
	262 Move V0, [X31+2]
	263 Move X8, [X31+48]
	264 Add X2, X31, 0
	265 Move X0, X20
	266 Move X1, X19
	267 Move [X31], V0
	268 Move [X31+16], X8
	269 Call TimeZoneInfo.GetIsAmbiguousTime, X0, X1, X2
	270 Move TEMP, X0
	271 And TEMP, TEMP, 1
	272 Compare TEMP, 1
	273 JumpIfNotEqual {282}
	274 Move X0, [X24]
	275 Move W8, [X0+224]
	276 Compare W8, 0
	277 JumpIfNotEqual {279}
	278 Call 0x1C17DFC
	279 Add X0, X31, 72
	280 Move X1, X31
	281 Call DateTime.IsAmbiguousDaylightSavingTime, X0
	282 Move W0, 1
	283 Move X20, [X31+144]
	284 Move X19, [X31+152]
	285 Move X22, [X31+128]
	286 Move X21, [X31+136]
	287 Move X24, [X31+112]
	288 Move X23, [X31+120]
	289 Move X26, [X31+96]
	290 Move X25, [X31+104]
	291 Move X30, [X31+80]
	292 Move X27, [X31+88]
	293 And W0, W0, 1
	294 Add X31, X31, 160
	295 Return X0

Method: System.TimeSpan GetDaylightSavingsStartOffsetFromUtc(System.TimeSpan baseUtcOffset, System.TimeZoneInfo/AdjustmentRule rule, System.Nullable`1<System.Int32> ruleIndex)

Disassembly:
	0x03311E6C ADD W10, W10, 0x1
	0x03311E70 STR W10, [X19 + 0x1C]
	0x03311E74 CBZ X8, 0x331226C
	0x03311E78 LDRSW X10, [X19 + 0x18]
	0x03311E7C LDR W11, [X8 + 0x18]
	0x03311E80 MOV X1, X0
	0x03311E84 STR X29, [X31 + 0x10]
	0x03311E88 CMP W10, W11
	0x03311E8C B.CS 0x3312028
	0x03311E90 ADD W9, W10, 0x1
	0x03311E94 ADD X8, X8, X10, 0x3, LSL
	0x03311E98 STR W9, [X19 + 0x18]
	0x03311E9C STR X1, [X8 + 0x20]
	0x03311EA0 B 0x331203C
	0x03311EA4 ADD X0, X31, 0xD8
	0x03311EA8 MOVZ W1, 0x1
	0x03311EAC MOVZ W2, 0x1
	0x03311EB0 MOVZ W3, 0x1
	0x03311EB4 MOV X4, X31
	0x03311EB8 STR X31, [X31 + 0xD8]
	0x03311EBC MOVZ W28, 0x1
	0x03311EC0 BL 0x335F0C4
	0x03311EC4 LDR X8, [X31 + 0xD8]
	0x03311EC8 LDR X0, [X23]
	0x03311ECC STR X8, [X31 + 0xE8]
	0x03311ED0 LDR W8, [X0 + 0xE0]
	0x03311ED4 CBNZ W8, 0x3311EDC
	0x03311ED8 BL 0x1C16DFC
	0x03311EDC ADD X0, X31, 0x120
	0x03311EE0 MOV X1, X31
	0x03311EE4 BL 0x33617E8
	0x03311EE8 MOV X1, X0
	0x03311EEC ADD X0, X31, 0xE8
	0x03311EF0 MOV X2, X31
	0x03311EF4 BL 0x335FC68
	0x03311EF8 MOV X21, X0
	0x03311EFC ADD X0, X31, 0x120
	0x03311F00 MOV X1, X31
	0x03311F04 BL 0x336152C
	0x03311F08 MOV W22, W0
	0x03311F0C ADD X0, X31, 0x120
	0x03311F10 MOV X1, X31
	0x03311F14 BL 0x3361168
	0x03311F18 MOV W23, W0
	0x03311F1C MOVZ W2, 0x1
	0x03311F20 MOV X0, X21
	0x03311F24 MOV W1, W22
	0x03311F28 MOV W3, W23
	0x03311F2C MOV W4, W31
	0x03311F30 BL 0x33135A0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x10CC000
	008 Move W8, [X23+2877]
	009 Move X21, X3
	010 Move X20, X2
	011 Move X19, X1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xDE5000
	018 Move X0, [X0+1392]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+2877], W8
	022 Compare X20, 0
	023 JumpIfEqual {64}
	024 Move X23, 0xDE5000
	025 Move W8, [X20+96]
	026 Move X23, [X23+1392]
	027 Compare W8, 0
	028 JumpIfEqual {47}
	029 Move X0, X22
	030 Move X1, X20
	031 Move X2, X21
	032 Call TimeZoneInfo.GetPreviousAdjustmentRule, X0, X1, X2
	033 Compare X0, 0
	034 JumpIfEqual {64}
	035 Move X20, X0
	036 Move X0, [X23]
	037 Move X21, [X20+88]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X19
	043 Move X1, X21
	044 Move X2, X31
	045 Call TimeSpan.op_Addition, X0, X1
	046 Move X1, [X20+32]
	047 Move X0, [X23]
	048 Move X20, [X20+88]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X19
	054 Move X1, X20
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X2, X31
	060 Move X30, [X31+48]
	061 Move X23, [X31+56]
	062 Call TimeSpan.op_Addition, X0, X1
	063 Return X0
	064 Call 0x1C17F20

Method: System.TimeSpan GetDaylightSavingsEndOffsetFromUtc(System.TimeSpan baseUtcOffset, System.TimeZoneInfo/AdjustmentRule rule)

Disassembly:
	0x03311F34 ADD X0, X31, 0xD0
	0x03311F38 MOVZ W1, 0x1
	0x03311F3C MOVZ W2, 0x1
	0x03311F40 MOVZ W3, 0x1
	0x03311F44 MOV X4, X31
	0x03311F48 STR X31, [X31 + 0xD0]
	0x03311F4C BL 0x335F0C4
	0x03311F50 LDR X8, [X31 + 0xD0]
	0x03311F54 ADD X0, X31, 0x118
	0x03311F58 MOV X1, X31
	0x03311F5C STR X8, [X31 + 0xE8]
	0x03311F60 BL 0x33617E8
	0x03311F64 MOV X1, X0
	0x03311F68 ADD X0, X31, 0xE8
	0x03311F6C MOV X2, X31
	0x03311F70 BL 0x335FC68
	0x03311F74 MOV X24, X0
	0x03311F78 ADD X0, X31, 0x118
	0x03311F7C MOV X1, X31
	0x03311F80 BL 0x336152C
	0x03311F84 MOV W25, W0
	0x03311F88 ADD X0, X31, 0x118
	0x03311F8C MOV X1, X31
	0x03311F90 BL 0x3361168
	0x03311F94 MOV W26, W0
	0x03311F98 MOVZ W2, 0x1
	0x03311F9C MOV X0, X24
	0x03311FA0 MOV W1, W25
	0x03311FA4 MOV W3, W26
	0x03311FA8 MOV W4, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10CC000
	006 Move W8, [X21+2878]
	007 Move X19, X2
	008 Move X20, X1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xDE5000
	014 Move X0, [X0+1392]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2878], W8
	018 Compare X19, 0
	019 JumpIfEqual {40}
	020 Move X8, 0xDE5000
	021 Move X8, [X8+1392]
	022 Move X21, [X19+88]
	023 Move X0, [X8]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X21
	030 Move X2, X31
	031 Call TimeSpan.op_Addition, X0, X1
	032 Move X1, [X19+32]
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X2, X31
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Call TimeSpan.op_Addition, X0, X1
	039 Return X0
	040 Call 0x1C17F20

Method: System.Boolean GetIsDaylightSavingsFromUtc(System.DateTime time, System.Int32 year, System.TimeSpan utc, System.TimeZoneInfo/AdjustmentRule rule, System.Nullable`1<System.Int32> ruleIndex, out System.Boolean isAmbiguousLocalDst, System.TimeZoneInfo zone)

Disassembly:
	0x03311FAC BL 0x33135A0
	0x03311FB0 LDP X1, X0, [X31 + 0x108]
	0x03311FB4 ADD X3, X31, 0xB8
	0x03311FB8 ADD X4, X31, 0xA0
	0x03311FBC MOV X2, X29
	0x03311FC0 STR X21, [X31 + 0xB8]
	0x03311FC4 STRB W22, [X31 + 0xC0]
	0x03311FC8 STRB W28, [X31 + 0xC1]
	0x03311FCC STRB W23, [X31 + 0xC2]
	0x03311FD0 STRB W31, [X31 + 0xC3]
	0x03311FD4 STR W31, [X31 + 0xC4]
	0x03311FD8 STRB W28, [X31 + 0xC8]
	0x03311FDC STUR W31, [X27 + 0x29]
	0x03311FE0 STR W31, [X31 + 0xCC]
	0x03311FE4 STR X24, [X31 + 0xA0]
	0x03311FE8 STRB W25, [X31 + 0xA8]
	0x03311FEC STRB W28, [X31 + 0xA9]
	0x03311FF0 STRB W26, [X31 + 0xAA]
	0x03311FF4 STRB W31, [X31 + 0xAB]
	0x03311FF8 STR W31, [X31 + 0xAC]
	0x03311FFC STRB W28, [X31 + 0xB0]
	0x03312000 STR W31, [X31 + 0xB4]
	0x03312004 STUR W31, [X27 + 0x11]
	0x03312008 BL 0x3312274
	0x0331200C CBZ X19, 0x331226C
	0x03312010 ADRP X9, 0xE15000
	0x03312014 LDR X9, [X9 + 0xB68]
	0x03312018 LDR W10, [X19 + 0x1C]
	0x0331201C LDR X8, [X19 + 0x10]
	0x03312020 LDR X9, [X9]
	0x03312024 B 0x3312200
	0x03312028 LDR X8, [X9 + 0x20]
	0x0331202C MOV X0, X19
	0x03312030 LDR X8, [X8 + 0xC0]
	0x03312034 LDR X2, [X8 + 0x70]
	0x03312038 BL 0x301BF90
	0x0331203C ADD X0, X31, 0x58
	0x03312040 MOVZ W1, 0x1
	0x03312044 MOVZ W2, 0x1
	0x03312048 MOVZ W3, 0x1
	0x0331204C MOV X4, X31
	0x03312050 STR X31, [X31 + 0x58]
	0x03312054 MOVZ W29, 0x1
	0x03312058 BL 0x335F0C4
	0x0331205C LDR X8, [X31 + 0x58]
	0x03312060 ADD X0, X31, 0x118
	0x03312064 MOV X1, X31
	0x03312068 STR X8, [X31 + 0xE8]
	0x0331206C BL 0x33617E8
	0x03312070 MOV X1, X0
	0x03312074 ADD X0, X31, 0xE8
	0x03312078 MOV X2, X31
	0x0331207C BL 0x335FC68
	0x03312080 MOV X21, X0
	0x03312084 ADD X0, X31, 0x118
	0x03312088 MOV X1, X31
	0x0331208C BL 0x336152C
	0x03312090 MOV W22, W0
	0x03312094 ADD X0, X31, 0x118
	0x03312098 MOV X1, X31
	0x0331209C BL 0x3361168
	0x033120A0 MOV W23, W0
	0x033120A4 MOVZ W2, 0x1
	0x033120A8 MOV X0, X21
	0x033120AC MOV W1, W22
	0x033120B0 MOV W3, W23
	0x033120B4 MOV W4, W31
	0x033120B8 BL 0x33135A0
	0x033120BC ADD X0, X31, 0x50
	0x033120C0 MOVZ W1, 0x1
	0x033120C4 MOVZ W2, 0x1
	0x033120C8 MOVZ W3, 0x1
	0x033120CC MOV X4, X31
	0x033120D0 STR X31, [X31 + 0x50]
	0x033120D4 BL 0x335F0C4
	0x033120D8 LDR X8, [X31 + 0x50]
	0x033120DC ADD X0, X31, 0x100
	0x033120E0 MOV X1, X31
	0x033120E4 STR X8, [X31 + 0xE8]
	0x033120E8 BL 0x33617E8
	0x033120EC MOV X1, X0
	0x033120F0 ADD X0, X31, 0xE8
	0x033120F4 MOV X2, X31
	0x033120F8 BL 0x335FC68
	0x033120FC MOV X24, X0
	0x03312100 ADD X0, X31, 0x100
	0x03312104 MOV X1, X31
	0x03312108 BL 0x336152C
	0x0331210C MOV W25, W0
	0x03312110 ADD X0, X31, 0x100
	0x03312114 MOV X1, X31
	0x03312118 BL 0x3361168
	0x0331211C MOV W26, W0
	0x03312120 MOVZ W2, 0x1
	0x03312124 MOV X0, X24
	0x03312128 MOV W1, W25
	0x0331212C MOV W3, W26
	0x03312130 MOV W4, W31
	0x03312134 BL 0x33135A0
	0x03312138 ADD X0, X31, 0x120
	0x0331213C MOV X1, X31
	0x03312140 BL 0x3361868
	0x03312144 MOV W27, W0
	0x03312148 ADD X0, X31, 0x120
	0x0331214C MOV X1, X31
	0x03312150 BL 0x336152C
	0x03312154 MOV W28, W0
	0x03312158 ADD X0, X31, 0x120
	0x0331215C MOV X1, X31
	0x03312160 BL 0x3361168
	0x03312164 MOV W3, W0
	0x03312168 ADD X0, X31, 0x48
	0x0331216C MOV W1, W27
	0x03312170 MOV W2, W28
	0x03312174 MOV X4, X31
	0x03312178 STR X31, [X31 + 0x48]
	0x0331217C BL 0x335F0C4
	0x03312180 LDR X8, [X31 + 0x48]
	0x03312184 ADD X0, X31, 0xE8
	0x03312188 FMOV D0, 1
	0x0331218C MOV X1, X31
	0x03312190 STR X8, [X31 + 0xE8]
	0x03312194 BL 0x335FEFC
	0x03312198 LDR X1, [X31 + 0x108]
	0x0331219C LDR X2, [X31 + 0x10]
	0x033121A0 ADD X3, X31, 0x30
	0x033121A4 ADD X4, X31, 0x18
	0x033121A8 STR X21, [X31 + 0x30]
	0x033121AC STRB W22, [X31 + 0x38]
	0x033121B0 STRB W29, [X31 + 0x39]
	0x033121B4 STRB W23, [X31 + 0x3A]
	0x033121B8 STRB W31, [X31 + 0x3B]
	0x033121BC STR W31, [X31 + 0x3C]
	0x033121C0 STRB W29, [X31 + 0x40]
	0x033121C4 STUR W31, [X31 + 0x41]
	0x033121C8 STR W31, [X31 + 0x44]
	0x033121CC STR X24, [X31 + 0x18]
	0x033121D0 STRB W25, [X31 + 0x20]
	0x033121D4 STRB W29, [X31 + 0x21]
	0x033121D8 STRB W26, [X31 + 0x22]
	0x033121DC STRB W31, [X31 + 0x23]
	0x033121E0 STR W31, [X31 + 0x24]
	0x033121E4 STRB W29, [X31 + 0x28]
	0x033121E8 STUR W31, [X31 + 0x29]
	0x033121EC STR W31, [X31 + 0x2C]
	0x033121F0 BL 0x3312274
	0x033121F4 LDR W10, [X19 + 0x1C]
	0x033121F8 LDR X8, [X19 + 0x10]
	0x033121FC LDR X9, [X20]
	0x03312200 ADD W10, W10, 0x1
	0x03312204 STR W10, [X19 + 0x1C]
	0x03312208 CBZ X8, 0x331226C
	0x0331220C LDRSW X10, [X19 + 0x18]
	0x03312210 LDR W11, [X8 + 0x18]
	0x03312214 MOV X1, X0
	0x03312218 CMP W10, W11
	0x0331221C B.CS 0x3312234
	0x03312220 ADD W9, W10, 0x1
	0x03312224 ADD X8, X8, X10, 0x3, LSL
	0x03312228 STR W9, [X19 + 0x18]
	0x0331222C STR X1, [X8 + 0x20]
	0x03312230 B 0x3312248
	0x03312234 LDR X8, [X9 + 0x20]
	0x03312238 MOV X0, X19
	0x0331223C LDR X8, [X8 + 0xC0]
	0x03312240 LDR X2, [X8 + 0x70]
	0x03312244 BL 0x301BF90
	0x03312248 MOV X0, X19
	0x0331224C LDP X20, X19, [X31 + 0x180]
	0x03312250 LDP X22, X21, [X31 + 0x170]
	0x03312254 LDP X24, X23, [X31 + 0x160]
	0x03312258 LDP X26, X25, [X31 + 0x150]
	0x0331225C LDP X28, X27, [X31 + 0x140]
	0x03312260 LDP X29, X30, [X31 + 0x130]
	0x03312264 ADD X31, X31, 0x190
	0x03312268 RET
	0x0331226C BL 0x1C16F20
	0x03312270 BL 0x1C16F28
	0x03312274 SUB X31, X31, 0xD0
	0x03312278 STP X30, X25, [X31 + 0x90]
	0x0331227C STP X24, X23, [X31 + 0xA0]
	0x03312280 STP X22, X21, [X31 + 0xB0]
	0x03312284 STP X20, X19, [X31 + 0xC0]
	0x03312288 ADRP X25, 0x10CA000
	0x0331228C ADRP X24, 0xDE3000
	0x03312290 LDRB W8, [X25 + 0xB57]
	0x03312294 LDR X24, [X24 + 0x570]
	0x03312298 MOV X22, X4
	0x0331229C MOV X23, X3
	0x033122A0 MOV X19, X2
	0x033122A4 MOV X20, X1
	0x033122A8 MOV X21, X0
	0x033122AC TBNZ X8, 0x0, 0x33122D0
	0x033122B0 ADRP X0, 0xE15000
	0x033122B4 LDR X0, [X0 + 0xB80]
	0x033122B8 BL 0x1C16CF4
	0x033122BC ADRP X0, 0xDE3000
	0x033122C0 LDR X0, [X0 + 0x570]
	0x033122C4 BL 0x1C16CF4
	0x033122C8 MOVZ W8, 0x1
	0x033122CC STRB W8, [X25 + 0xB57]
	0x033122D0 LDR X8, [X23 + 0x10]
	0x033122D4 LDR V0, [X23]
	0x033122D8 LDR X0, [X24]
	0x033122DC ADRP X23, 0xE15000
	0x033122E0 STR X8, [X31 + 0x80]
	0x033122E4 STR V0, [X31 + 0x7]
	0x033122E8 LDR X8, [X22 + 0x10]
	0x033122EC LDR V0, [X22]
	0x033122F0 STR X8, [X31 + 0x60]
	0x033122F4 STR V0, [X31 + 0x5]
	0x033122F8 LDR W8, [X0 + 0xE0]
	0x033122FC LDR X23, [X23 + 0xB80]
	0x03312300 CBNZ W8, 0x331230C
	0x03312304 BL 0x1C16DFC
	0x03312308 LDR X0, [X24]
	0x0331230C LDR X8, [X0 + 0xB8]
	0x03312310 LDR X0, [X23]
	0x03312314 LDR X22, [X8]
	0x03312318 BL 0x1C16F10
	0x0331231C LDR V0, [X31 + 0x7]
	0x03312320 LDR X8, [X31 + 0x80]
	0x03312324 LDR V1, [X31 + 0x5]
	0x03312328 LDR X9, [X31 + 0x60]
	0x0331232C ADD X4, X31, 0x30
	0x03312330 ADD X5, X31, 0x10
	0x03312334 MOV X1, X21
	0x03312338 MOV X2, X20
	0x0331233C MOV X3, X19
	0x03312340 MOV X6, X22
	0x03312344 MOV W7, W31
	0x03312348 MOV X23, X0
	0x0331234C STR V0, [X31 + 0x3]
	0x03312350 STR X8, [X31 + 0x40]
	0x03312354 STR V1, [X31 + 0x1]
	0x03312358 STR X9, [X31 + 0x20]
	0x0331235C BL 0x33126DC
	0x03312360 MOV X0, X23
	0x03312364 LDP X20, X19, [X31 + 0xC0]
	0x03312368 LDP X22, X21, [X31 + 0xB0]
	0x0331236C LDP X24, X23, [X31 + 0xA0]
	0x03312370 LDP X30, X25, [X31 + 0x90]
	0x03312374 ADD X31, X31, 0xD0
	0x03312378 RET
	0x0331237C SUB X31, X31, 0x40
	0x03312380 STR X30, [X31 + 0x10]
	0x03312384 STP X22, X21, [X31 + 0x20]
	0x03312388 STP X20, X19, [X31 + 0x30]
	0x0331238C ADRP X20, 0x10CA000
	0x03312390 ADRP X19, 0xDE3000
	0x03312394 LDRB W8, [X20 + 0xB50]
	0x03312398 LDR X19, [X19 + 0x570]
	0x0331239C TBNZ X8, 0x0, 0x33123D8
	0x033123A0 ADRP X0, 0xE15000
	0x033123A4 LDR X0, [X0 + 0xCC8]
	0x033123A8 BL 0x1C16CF4
	0x033123AC ADRP X0, 0xDE3000
	0x033123B0 LDR X0, [X0 + 0x570]
	0x033123B4 BL 0x1C16CF4
	0x033123B8 ADRP X0, 0xE15000
	0x033123BC LDR X0, [X0 + 0xA38]
	0x033123C0 BL 0x1C16CF4
	0x033123C4 ADRP X0, 0xE15000
	0x033123C8 LDR X0, [X0 + 0xCD0]
	0x033123CC BL 0x1C16CF4
	0x033123D0 MOVZ W8, 0x1
	0x033123D4 STRB W8, [X20 + 0xB50]
	0x033123D8 LDR X0, [X19]
	0x033123DC ADRP X22, 0xE15000
	0x033123E0 ADRP X20, 0xE15000
	0x033123E4 ADRP X21, 0xE15000
	0x033123E8 LDR W8, [X0 + 0xE0]
	0x033123EC LDR X22, [X22 + 0xCD0]
	0x033123F0 LDR X20, [X20 + 0xA38]
	0x033123F4 LDR X21, [X21 + 0xCC8]
	0x033123F8 CBNZ W8, 0x3312404
	0x033123FC BL 0x1C16DFC
	0x03312400 LDR X0, [X19]
	0x03312404 LDR X8, [X0 + 0xB8]
	0x03312408 LDR X0, [X22]
	0x0331240C LDR X1, [X8]
	0x03312410 MOV X2, X0
	0x03312414 MOV X3, X0
	0x03312418 BL 0x330F4A0
	0x0331241C LDR X8, [X20]
	0x03312420 LDR X8, [X8 + 0xB8]
	0x03312424 STR X0, [X8]
	0x03312428 LDR X0, [X21]
	0x0331242C BL 0x1C16F10
	0x03312430 MOV X1, X31
	0x03312434 MOV X19, X0
	0x03312438 BL 0x33BDD8C
	0x0331243C LDR X8, [X20]
	0x03312440 ADD X0, X31, 0x18
	0x03312444 MOVZ W1, 0x270F
	0x03312448 MOVZ W2, 0xC
	0x0331244C LDR X8, [X8 + 0xB8]
	0x03312450 MOVZ W3, 0x1F
	0x03312454 MOV X4, X31
	0x03312458 STR X19, [X8 + 0x8]
	0x0331245C STR X31, [X31 + 0x18]
	0x03312460 BL 0x335F0C4
	0x03312464 LDR X8, [X20]
	0x03312468 LDR X9, [X31 + 0x18]
	0x0331246C ADD X0, X31, 0x8
	0x03312470 MOVZ W1, 0x1
	0x03312474 LDR X8, [X8 + 0xB8]
	0x03312478 MOVZ W2, 0x1
	0x0331247C MOVZ W3, 0x2
	0x03312480 MOV X4, X31
	0x03312484 STR X9, [X8 + 0x10]
	0x03312488 STR X31, [X31 + 0x8]
	0x0331248C BL 0x335F0C4
	0x03312490 LDR X8, [X20]
	0x03312494 LDR X9, [X31 + 0x8]
	0x03312498 FMOV D0, 8.000000001396984
	0x0331249C MOV X0, X31
	0x033124A0 LDR X8, [X8 + 0xB8]
	0x033124A4 STR X9, [X8 + 0x18]
	0x033124A8 BL 0x3394580
	0x033124AC LDR X8, [X20]
	0x033124B0 MOV X1, X31
	0x033124B4 LDR X9, [X8 + 0xB8]
	0x033124B8 STR X0, [X9 + 0x20]
	0x033124BC LDR X8, [X8 + 0xB8]
	0x033124C0 LDR X0, [X8 + 0x20]
	0x033124C4 BL 0x3394B5C
	0x033124C8 LDR X8, [X20]
	0x033124CC LDP X20, X19, [X31 + 0x30]
	0x033124D0 LDP X22, X21, [X31 + 0x20]
	0x033124D4 LDR X30, [X31 + 0x10]
	0x033124D8 LDR X8, [X8 + 0xB8]
	0x033124DC STR X0, [X8 + 0x28]
	0x033124E0 ADD X31, X31, 0x40
	0x033124E4 RET
	0x033124E8 MOV X1, X31
	0x033124EC B 0x33BDD8C
	0x033124F0 STR X30, [X31 - 0x20]!
	0x033124F4 STP X20, X19, [X31 + 0x10]
	0x033124F8 ADRP X19, 0x10CA000
	0x033124FC ADRP X20, 0xE15000
	0x03312500 LDRB W8, [X19 + 0xB51]
	0x03312504 LDR X20, [X20 + 0xCD8]
	0x03312508 TBNZ X8, 0x0, 0x3312520
	0x0331250C ADRP X0, 0xE15000
	0x03312510 LDR X0, [X0 + 0xCD8]
	0x03312514 BL 0x1C16CF4
	0x03312518 MOVZ W8, 0x1
	0x0331251C STRB W8, [X19 + 0xB51]
	0x03312520 LDR X0, [X20]
	0x03312524 BL 0x1C16D9C
	0x03312528 LDR X0, [X0 + 0x10]
	0x0331252C RET
	0x03312530 LDR X0, [X0 + 0x18]
	0x03312534 RET
	0x03312538 LDR X0, [X0 + 0x20]
	0x0331253C RET
	0x03312540 LDR X9, [X0 + 0x38]
	0x03312544 LDUR V0, [X0 + 0x28]
	0x03312548 STR X9, [X8 + 0x10]
	0x0331254C STR V0, [X8]
	0x03312550 RET
	0x03312554 LDR X9, [X0 + 0x50]
	0x03312558 LDR V0, [X0 + 0x4]
	0x0331255C STR X9, [X8 + 0x10]
	0x03312560 STR V0, [X8]
	0x03312564 RET
	0x03312568 LDR X0, [X0 + 0x58]
	0x0331256C RET
	0x03312570 LDRB W0, [X0 + 0x60]
	0x03312574 RET
	0x03312578 SUB X31, X31, 0x30
	0x0331257C STR X30, [X31 + 0x20]
	0x03312580 LDR X8, [X1 + 0x10]
	0x03312584 LDR V0, [X1]
	0x03312588 ADD X1, X31, 0x0
	0x0331258C STR X8, [X31 + 0x10]
	0x03312590 STR V0, [X31]
	0x03312594 BL 0x33125AC
	0x03312598 LDR X30, [X31 + 0x20]
	0x0331259C ORN W8, W31, W0, 0x0
	0x033125A0 AND W0, W8, 0x1
	0x033125A4 ADD X31, X31, 0x30
	0x033125A8 RET
	0x033125AC STR X30, [X31 - 0x30]!
	0x033125B0 STP X22, X21, [X31 + 0x10]
	0x033125B4 STP X20, X19, [X31 + 0x20]
	0x033125B8 ADRP X21, 0x10CA000
	0x033125BC LDRB W8, [X21 + 0xB60]
	0x033125C0 MOV X19, X1
	0x033125C4 MOV X20, X0
	0x033125C8 TBNZ X8, 0x0, 0x33125E0
	0x033125CC ADRP X0, 0xDE2000
	0x033125D0 LDR X0, [X0 + 0x9F0]
	0x033125D4 BL 0x1C16CF4
	0x033125D8 MOVZ W8, 0x1
	0x033125DC STRB W8, [X21 + 0xB60]
	0x033125E0 LDRB W8, [X19 + 0x10]
	0x033125E4 LDRB W9, [X20 + 0x10]
	0x033125E8 AND W8, W8, 0x1
	0x033125EC CMP W9, W8
	0x033125F0 B.NE 0x331265C
	0x033125F4 ADRP X8, 0xDE2000
	0x033125F8 LDR X8, [X8 + 0x9F0]
	0x033125FC LDR X21, [X20]
	0x03312600 LDR X22, [X19]
	0x03312604 LDR X0, [X8]
	0x03312608 LDR W8, [X0 + 0xE0]
	0x0331260C CBNZ W8, 0x3312614
	0x03312610 BL 0x1C16DFC
	0x03312614 MOV X0, X21
	0x03312618 MOV X1, X22
	0x0331261C MOV X2, X31
	0x03312620 BL 0x3363078
	0x03312624 TBZ X0, 0x0, 0x331265C
	0x03312628 LDRB W8, [X20 + 0x8]
	0x0331262C LDRB W9, [X19 + 0x8]
	0x03312630 CMP W8, W9
	0x03312634 B.NE 0x331265C
	0x03312638 LDRB W8, [X19 + 0x10]
	0x0331263C TBNZ X8, 0x0, 0x3312670
	0x03312640 LDRB W8, [X20 + 0x9]
	0x03312644 LDRB W9, [X19 + 0x9]
	0x03312648 CMP W8, W9
	0x0331264C B.NE 0x331265C
	0x03312650 LDR W8, [X20 + 0xC]
	0x03312654 LDR W9, [X19 + 0xC]
	0x03312658 B 0x3312678
	0x0331265C MOV W0, W31
	0x03312660 LDP X20, X19, [X31 + 0x20]
	0x03312664 LDP X22, X21, [X31 + 0x10]
	0x03312668 LDR X30, [X31], #0x30
	0x0331266C RET
	0x03312670 LDRB W8, [X20 + 0xA]
	0x03312674 LDRB W9, [X19 + 0xA]
	0x03312678 CMP W8, W9
	0x0331267C CSET W0, EQ
	0x03312680 B 0x3312660
	0x03312684 STP X30, X21, [X31 - 0x20]!
	0x03312688 STP X20, X19, [X31 + 0x10]
	0x0331268C ADRP X20, 0x10CA000
	0x03312690 ADRP X21, 0xDE2000
	0x03312694 LDRB W8, [X20 + 0xB56]
	0x03312698 LDR X21, [X21 + 0x9F0]
	0x0331269C MOV X19, X0
	0x033126A0 TBNZ X8, 0x0, 0x33126B8
	0x033126A4 ADRP X0, 0xDE2000
	0x033126A8 LDR X0, [X0 + 0x9F0]
	0x033126AC BL 0x1C16CF4
	0x033126B0 MOVZ W8, 0x1
	0x033126B4 STRB W8, [X20 + 0xB56]
	0x033126B8 LDR X0, [X21]
	0x033126BC LDR W8, [X0 + 0xE0]
	0x033126C0 CBNZ W8, 0x33126C8
	0x033126C4 BL 0x1C16DFC
	0x033126C8 ADD X0, X19, 0x10
	0x033126CC LDP X20, X19, [X31 + 0x10]
	0x033126D0 MOV X1, X31
	0x033126D4 LDP X30, X21, [X31], #0x20
	0x033126D8 B 0x3361258
	0x033126DC SUB X31, X31, 0x90
	0x033126E0 STR X30, [X31 + 0x40]
	0x033126E4 STP X26, X25, [X31 + 0x50]
	0x033126E8 STP X24, X23, [X31 + 0x60]
	0x033126EC STP X22, X21, [X31 + 0x70]
	0x033126F0 STP X20, X19, [X31 + 0x80]
	0x033126F4 MOV X25, X1
	0x033126F8 MOV X1, X31
	0x033126FC MOV W19, W7
	0x03312700 MOV X20, X6
	0x03312704 MOV X21, X5
	0x03312708 MOV X22, X4
	0x0331270C MOV X23, X3
	0x03312710 MOV X24, X2
	0x03312714 MOV X26, X0
	0x03312718 BL 0x33BDD8C
	0x0331271C LDR X8, [X22 + 0x10]
	0x03312720 LDR V0, [X22]
	0x03312724 AND W19, W19, 0x1
	0x03312728 ADD X3, X31, 0x20
	0x0331272C STR X8, [X31 + 0x30]
	0x03312730 STR V0, [X31 + 0x2]
	0x03312734 LDR X8, [X21 + 0x10]
	0x03312738 LDR V0, [X21]
	0x0331273C ADD X4, X31, 0x0
	0x03312740 MOV X0, X25
	0x03312744 MOV X1, X24
	0x03312748 MOV X2, X23
	0x0331274C MOV W5, W19
	0x03312750 STR X8, [X31 + 0x10]
	0x03312754 STR V0, [X31]
	0x03312758 BL 0x33127A4
	0x0331275C STP X25, X24, [X26 + 0x10]
	0x03312760 STR X23, [X26 + 0x20]
	0x03312764 LDR X8, [X22 + 0x10]
	0x03312768 LDR V0, [X22]
	0x0331276C LDP X24, X23, [X31 + 0x60]
	0x03312770 LDR X30, [X31 + 0x40]
	0x03312774 STR X8, [X26 + 0x38]
	0x03312778 STUR V0, [X26 + 0x28]
	0x0331277C LDR V0, [X21]
	0x03312780 LDR X8, [X21 + 0x10]
	0x03312784 STRB W19, [X26 + 0x60]
	0x03312788 LDP X22, X21, [X31 + 0x70]
	0x0331278C STR V0, [X26 + 0x4]
	0x03312790 STP X8, X20, [X26 + 0x50]
	0x03312794 LDP X20, X19, [X31 + 0x80]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X26, 0x10CC000
	015 Move W8, [X26+2879]
	016 Move X23, X6
	017 Move X19, X5
	018 Move X24, X4
	019 Move X21, X3
	020 Move X22, X2
	021 Move W25, W1
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {38}
	027 Move X0, 0xDE4000
	028 Move X0, [X0+2544]
	029 Call 0x1C17CF4
	030 Move X0, 0xDE5000
	031 Move X0, [X0+1392]
	032 Call 0x1C17CF4
	033 Move X0, 0xE16000
	034 Move X0, [X0+2616]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X26+2879], W8
	038 Move [X31+64], X31
	039 Move [X31+72], X31
	040 Move [X31+80], X31
	041 Move [X31+48], X31
	042 Move [X31+56], X31
	043 Move [X31+32], X31
	044 Move [X31+40], X31
	045 Move [X31+24], X31
	046 Move [X19], W31
	047 Compare X21, 0
	048 JumpIfEqual {334}
	049 Compare X23, 0
	050 JumpIfEqual {506}
	051 Add X8, X31, 0
	052 Move X0, X23
	053 Move W1, W25
	054 Move X2, X21
	055 Move X3, X24
	056 Call TimeZoneInfo.GetDaylightTime, X0, X1, X2, X3
	057 Move V0, [X31]
	058 Move X8, [X31+16]
	059 Move X0, X23
	060 Move X1, X22
	061 Move X2, X21
	062 Move X3, X24
	063 Move [X31+4], V0
	064 Move [X31+80], X8
	065 Call TimeZoneInfo.GetDaylightSavingsStartOffsetFromUtc, X0, X1, X2, X3
	066 Move X24, X0
	067 Move X0, X21
	068 Call AdjustmentRule.IsStartDateMarkerForBeginningOfYear, X0
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {141}
	073 Move X26, 0xDE3000
	074 Move X26, [X26+2544]
	075 Move X0, [X26]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Add X0, X31, 64
	081 Move X1, X31
	082 Call DateTime.get_Year, X0
	083 Move X8, [X26]
	084 Move W25, W0
	085 Move X1, X31
	086 Move X8, [X8+184]
	087 Add X0, X8, 16
	088 Call DateTime.get_Year, X0
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X0, [X26]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Add X0, X31, 64
	096 Move X1, X31
	097 Call DateTime.get_Year, X0
	098 Subtract W1, W0, 1
	099 Add X0, X31, 0
	100 Move W2, 12
	101 Move W3, 31
	102 Move X4, X31
	103 Move [X31], X31
	104 Call DateTime..ctor, X0, X1, X2, X3
	105 Move X1, [X31]
	106 Add X3, X31, 40
	107 Move X0, X23
	108 Move W2, W31
	109 Call TimeZoneInfo.GetAdjustmentRuleForTime, X0, X1, X2, X3
	110 Compare X0, 0
	111 JumpIfEqual {381}
	112 Move X25, X0
	113 Call AdjustmentRule.IsEndDateMarkerForEndOfYear, X0
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {381}
	118 Move X0, [X26]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Add X0, X31, 64
	124 Move X1, X31
	125 Call DateTime.get_Year, X0
	126 Move X3, [X31+40]
	127 Subtract W1, W0, 1
	128 Add X8, X31, 0
	129 Move X0, X23
	130 Move X2, X25
	131 Call TimeZoneInfo.GetDaylightTime, X0, X1, X2, X3
	132 Move X0, [X31]
	133 Move X1, X22
	134 Move X2, X31
	135 Call DateTime.op_Subtraction, X0, X1
	136 Move X1, [X25+88]
	137 Move X2, X31
	138 Call DateTime.op_Subtraction, X0, X1
	139 Move X24, X0
	140 Move W25, 1
	141 Move X8, 0xDE3000
	142 Move X8, [X8+2544]
	143 Move X25, [X31+64]
	144 Move X0, [X8]
	145 Move W8, [X0+224]
	146 Compare W8, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1C17DFC
	149 Move X0, X25
	150 Move X1, X24
	151 Move X2, X31
	152 Call DateTime.op_Subtraction, X0, X1
	153 Move X24, X0
	154 Move W25, W31
	155 Move X28, 0xDE4000
	156 Move X28, [X28+1392]
	157 Move X1, X22
	158 Move X2, X21
	159 Call TimeZoneInfo.GetDaylightSavingsEndOffsetFromUtc, X0, X1, X2
	160 Move X26, X0
	161 Move X0, X21
	162 Call AdjustmentRule.IsEndDateMarkerForEndOfYear, X0
	163 Move TEMP, X0
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfNotEqual {240}
	167 Move X29, 0xDE3000
	168 Move X29, [X29+2544]
	169 Add X9, X31, 64
	170 Or X27, X9, 15
	171 Move X0, [X29]
	172 Move W8, [X0+224]
	173 Compare W8, 0
	174 JumpIfNotEqual {176}
	175 Call 0x1C17DFC
	176 Move X0, X27
	177 Move X1, X31
	178 Call DateTime.get_Year, X0
	179 Move X8, [X29]
	180 Move W28, W0
	181 Move X1, X31
	182 Move X8, [X8+184]
	183 Add X0, X8, 24
	184 Call DateTime.get_Year, X0
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X28, 0xDE4000
	187 Move X28, [X28+1392]
	188 Move X0, [X29]
	189 Move W8, [X0+224]
	190 Compare W8, 0
	191 JumpIfNotEqual {193}
	192 Call 0x1C17DFC
	193 Move X0, X27
	194 Move X1, X31
	195 Call DateTime.get_Year, X0
	196 Add W1, W0, 1
	197 Add X0, X31, 0
	198 Move W2, 1
	199 Move W3, 1
	200 Move X4, X31
	201 Move [X31], X31
	202 Call DateTime..ctor, X0, X1, X2, X3
	203 Move X1, [X31]
	204 Add X3, X31, 32
	205 Move X0, X23
	206 Move W2, W31
	207 Call TimeZoneInfo.GetAdjustmentRuleForTime, X0, X1, X2, X3
	208 Compare X0, 0
	209 JumpIfEqual {400}
	210 Move X28, X0
	211 Call AdjustmentRule.IsStartDateMarkerForBeginningOfYear, X0
	212 Move TEMP, X0
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfNotEqual {400}
	216 Move X0, X28
	217 Call AdjustmentRule.IsEndDateMarkerForEndOfYear, X0
	218 Move X8, [X29]
	219 Move W25, W0
	220 Move W9, [X8+224]
	221 Compare W9, 0
	222 JumpIfNotEqual {225}
	223 Move X0, X8
	224 Call 0x1C17DFC
	225 Move X0, X27
	226 Move X1, X31
	227 Call DateTime.get_Year, X0
	228 Move TEMP, X25
	229 And TEMP, TEMP, 1
	230 Compare TEMP, 1
	231 JumpIfNotEqual {468}
	232 Add W1, W0, 1
	233 Add X0, X31, 0
	234 Move W2, 12
	235 Move W3, 31
	236 Move X4, X31
	237 Move [X31], X31
	238 Call DateTime..ctor, X0, X1, X2, X3
	239 Move X0, [X31]
	240 Move X8, 0xDE3000
	241 Move X8, [X8+2544]
	242 Move X22, [X31+72]
	243 Move X0, [X8]
	244 Move W8, [X0+224]
	245 Compare W8, 0
	246 JumpIfNotEqual {248}
	247 Call 0x1C17DFC
	248 Move X0, X22
	249 Move X1, X26
	250 Move X2, X31
	251 Call DateTime.op_Subtraction, X0, X1
	252 Move X22, X0
	253 Move X0, [X28]
	254 Move W8, [X0+224]
	255 Compare W8, 0
	256 JumpIfNotEqual {258}
	257 Call 0x1C17DFC
	258 Move X23, [X31+80]
	259 Move X26, 0xE16000
	260 Move X8, 0xDE3000
	261 Move X26, [X26+2616]
	262 Move X8, [X8+2544]
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Move X0, [X8]
	265 Move W8, [X0+224]
	266 Compare W8, 0
	267 JumpIfNotEqual {269}
	268 Call 0x1C17DFC
	269 Move X0, X22
	270 Move X1, X23
	271 Move X2, X31
	272 Call DateTime.op_Subtraction, X0, X1
	273 Move [X31+56], X0
	274 Move X0, X22
	275 Move X0, [X8]
	276 Move [X31+56], X24
	277 Move W8, [X0+224]
	278 Compare W8, 0
	279 JumpIfNotEqual {281}
	280 Call 0x1C17DFC
	281 Move X0, X24
	282 Move X1, X23
	283 Move X2, X31
	284 Call DateTime.op_Subtraction, X0, X1
	285 Move X8, [X26]
	286 Move [X31+48], X0
	287 Move W9, [X8+224]
	288 Compare W9, 0
	289 JumpIfNotEqual {292}
	290 Move X0, X8
	291 Call 0x1C17DFC
	292 Move X0, X24
	293 Move X1, X20
	294 Move X2, X22
	295 Move W3, W25
	296 Move X4, X21
	297 Call TimeZoneInfo.CheckIsDst, X0, X1, X2, X3, X4
	298 Move TEMP, X0
	299 And TEMP, TEMP, 1
	300 Compare TEMP, 1
	301 JumpIfNotEqual {334}
	302 Move X22, 0xDE3000
	303 Move X22, [X22+2544]
	304 Move X21, [X31+56]
	305 Move X0, [X22]
	306 Move W8, [X0+224]
	307 Compare W8, 0
	308 JumpIfNotEqual {310}
	309 Call 0x1C17DFC
	310 Move X0, X20
	311 Move X1, X21
	312 Move X2, X31
	313 Call DateTime.op_GreaterThanOrEqual, X0, X1
	314 Move TEMP, X0
	315 And TEMP, TEMP, 1
	316 Compare TEMP, 1
	317 JumpIfNotEqual {335}
	318 Move X0, [X22]
	319 Move X21, [X31+48]
	320 Move W8, [X0+224]
	321 Compare W8, 0
	322 JumpIfNotEqual {324}
	323 Call 0x1C17DFC
	324 Move X0, X20
	325 Move X1, X21
	326 Move X2, X31
	327 Call DateTime.op_LessThan, X0, X1
	328 And W8, W0, 1
	329 Move [X19], W8
	330 Move TEMP, X0
	331 And TEMP, TEMP, 1
	332 Compare TEMP, 1
	333 JumpIfNotEqual {336}
	334 Move W8, W31
	335 Move [X19], W31
	336 Move X0, [X22]
	337 Move W8, [X0+224]
	338 Compare W8, 0
	339 JumpIfNotEqual {341}
	340 Call 0x1C17DFC
	341 Add X0, X31, 56
	342 Move X1, X31
	343 Call DateTime.get_Year, X0
	344 Move W21, W0
	345 Add X0, X31, 48
	346 Move X1, X31
	347 Call DateTime.get_Year, X0
	348 NotImplemented "Instruction CMP not yet implemented."
	349 Move X0, [X22]
	350 Move W8, [X0+224]
	351 Compare W8, 0
	352 JumpIfNotEqual {354}
	353 Call 0x1C17DFC
	354 Add X0, X31, 56
	355 Move W1, 1
	356 Move X2, X31
	357 Call DateTime.AddYears, X0, X1
	358 Add X0, X31, 48
	359 Move W1, 1
	360 Move X2, X31
	361 Call DateTime.AddYears, X0, X1
	362 Move X1, [X31+56]
	363 Move X0, X20
	364 Move X2, X31
	365 Call DateTime.op_GreaterThanOrEqual, X0, X1
	366 Move TEMP, X0
	367 And TEMP, TEMP, 1
	368 Compare TEMP, 1
	369 JumpIfNotEqual {428}
	370 Move X0, [X22]
	371 Move X21, [X31+48]
	372 Move W8, [X0+224]
	373 Compare W8, 0
	374 JumpIfNotEqual {376}
	375 Call 0x1C17DFC
	376 Move X0, X20
	377 Move X1, X21
	378 Move X2, X31
	379 Call DateTime.op_LessThan, X0, X1
	380 And W8, W0, 1
	381 Move X0, [X26]
	382 Move W8, [X0+224]
	383 Compare W8, 0
	384 JumpIfNotEqual {386}
	385 Call 0x1C17DFC
	386 Add X0, X31, 64
	387 Move X1, X31
	388 Call DateTime.get_Year, X0
	389 Move W1, W0
	390 Add X0, X31, 0
	391 Move W2, 1
	392 Move W3, 1
	393 Move W4, W31
	394 Move W5, W31
	395 Move W6, W31
	396 Move X7, X31
	397 Move [X31], X31
	398 Call DateTime..ctor, X0, X1, X2, X3, X4, X5, X6
	399 Move X0, [X31]
	400 Move X0, [X29]
	401 Move X28, 0xDE4000
	402 Move W8, [X0+224]
	403 Move X28, [X28+1392]
	404 Compare W8, 0
	405 JumpIfNotEqual {407}
	406 Call 0x1C17DFC
	407 Move X0, X27
	408 Move X1, X31
	409 Call DateTime.get_Year, X0
	410 Add W1, W0, 1
	411 Add X0, X31, 0
	412 Move W2, 1
	413 Move W3, 1
	414 Move W4, W31
	415 Move W5, W31
	416 Move W6, W31
	417 Move X7, X31
	418 Move [X31], X31
	419 Call DateTime..ctor, X0, X1, X2, X3, X4, X5, X6
	420 Move X8, [X31]
	421 Add X0, X31, 24
	422 Move TEMP, 0
	423 Not TEMP
	424 Move X1, TEMP
	425 Move X2, X31
	426 Move [X31+24], X8
	427 Call DateTime.AddTicks, X0, X1
	428 Move W8, W31
	429 Move [X19], W8
	430 Compare W8, 0
	431 JumpIfNotEqual {490}
	432 Move X0, [X22]
	433 Move W8, [X0+224]
	434 Compare W8, 0
	435 JumpIfNotEqual {437}
	436 Call 0x1C17DFC
	437 Add X0, X31, 56
	438 Move TEMP, 0
	439 Not TEMP
	440 Move W1, TEMP
	441 Move X2, X31
	442 Call DateTime.AddYears, X0, X1
	443 Add X0, X31, 48
	444 Move TEMP, 0
	445 Not TEMP
	446 Move W1, TEMP
	447 Move X2, X31
	448 Call DateTime.AddYears, X0, X1
	449 Move X1, [X31+56]
	450 Move X0, X20
	451 Move X2, X31
	452 Call DateTime.op_GreaterThanOrEqual, X0, X1
	453 Move TEMP, X0
	454 And TEMP, TEMP, 1
	455 Compare TEMP, 1
	456 JumpIfNotEqual {488}
	457 Move X0, [X22]
	458 Move X21, [X31+48]
	459 Move W8, [X0+224]
	460 Compare W8, 0
	461 JumpIfNotEqual {463}
	462 Call 0x1C17DFC
	463 Move X0, X20
	464 Move X1, X21
	465 Move X2, X31
	466 Call DateTime.op_LessThan, X0, X1
	467 And W8, W0, 1
	468 Move X3, [X31+32]
	469 Add W1, W0, 1
	470 Add X8, X31, 0
	471 Move X0, X23
	472 Move X2, X28
	473 Call TimeZoneInfo.GetDaylightTime, X0, X1, X2, X3
	474 Move X0, [X31+8]
	475 Move X1, X22
	476 Move X2, X31
	477 Call DateTime.op_Subtraction, X0, X1
	478 Move X1, [X28+88]
	479 Move X2, X31
	480 Call DateTime.op_Subtraction, X0, X1
	481 Move X1, [X28+32]
	482 Move X2, X31
	483 Call DateTime.op_Subtraction, X0, X1
	484 Move X28, 0xDE4000
	485 Move X28, [X28+1392]
	486 Move X22, X0
	487 Move W25, 1
	488 Move W8, W31
	489 Move [X19], W8
	490 Move W8, 1
	491 Move X20, [X31+176]
	492 Move X19, [X31+184]
	493 Move X22, [X31+160]
	494 Move X21, [X31+168]
	495 Move X24, [X31+144]
	496 Move X23, [X31+152]
	497 Move X26, [X31+128]
	498 Move X25, [X31+136]
	499 Move X28, [X31+112]
	500 Move X27, [X31+120]
	501 Move X29, [X31+96]
	502 Move X30, [X31+104]
	503 Move W0, W8
	504 Add X31, X31, 192
	505 Return X0
	506 Call 0x1C17F20
	507 Move X21, X0
	508 NotImplemented "Instruction CMP not yet implemented."
	509 Move X0, X21
	510 Call 0x3EB2AD0
	511 Move X19, X0
	512 Move X0, 0xDEA000
	513 Move X0, [X0+1888]
	514 Call 0x1C17D08
	515 Move X8, [X19]
	516 Move X1, [X8]
	517 Call 0x1C18270
	518 Move TEMP, X0
	519 And TEMP, TEMP, 1
	520 Compare TEMP, 1
	521 JumpIfNotEqual {523}
	522 Call 0x3EB2AE0
	523 Move W0, 8
	524 Call 0x3EB2AF0
	525 Move X8, [X19]
	526 Move [X0], X8
	527 Move X1, 0xBA3000
	528 Add X1, X1, 3672
	529 Move X2, X31
	530 Call 0x3EB2B00
	531 Move X21, X0
	532 Call 0x3EB2AE0
	533 Move X21, X0
	534 NotImplemented "Instruction CMP not yet implemented."
	535 Move X0, X21
	536 Call 0x3EB2AD0
	537 Move X21, X0
	538 Move X0, 0xDEA000
	539 Move X0, [X0+1888]
	540 Call 0x1C17D08
	541 Move X8, [X21]
	542 Move X1, [X8]
	543 Call 0x1C18270
	544 Move TEMP, X0
	545 And TEMP, TEMP, 1
	546 Compare TEMP, 1
	547 JumpIfNotEqual {552}
	548 Call 0x3EB2AE0
	549 Move W8, [X19]
	550 Compare W8, 0
	551 JumpIfNotEqual {490}
	552 Move W0, 8
	553 Call 0x3EB2AF0
	554 Move X8, [X21]
	555 Move [X0], X8
	556 Move X1, 0xBA3000
	557 Add X1, X1, 3672
	558 Move X2, X31
	559 Call 0x3EB2B00
	560 Move X21, X0
	561 Call 0x3EB2AE0
	562 Move X0, X21
	563 Call 0x1D2D690
	564 Call 0x1991590

Method: System.Boolean CheckIsDst(System.DateTime startTime, System.DateTime time, System.DateTime endTime, System.Boolean ignoreYearAdjustment, System.TimeZoneInfo/AdjustmentRule rule)

Disassembly:
	0x03311880 LDR X30, [X31], #0x30
	0x03311884 B 0x3394D08
	0x03311888 STR X30, [X31 - 0x20]!
	0x0331188C STP X20, X19, [X31 + 0x10]
	0x03311890 MOV X19, X1
	0x03311894 MOV X1, X2
	0x03311898 MOV X2, X31
	0x0331189C MOV X20, X0
	0x033118A0 BL 0x338C8D8
	0x033118A4 MOVZ W8, 0x1502
	0x033118A8 MOVK W8, 0x80130000
	0x033118AC STR X19, [X20 + 0x90]
	0x033118B0 STR W8, [X20 + 0x60]
	0x033118B4 LDP X20, X19, [X31 + 0x10]
	0x033118B8 LDR X30, [X31], #0x20
	0x033118BC RET
	0x033118C0 STR X30, [X31 - 0x30]!
	0x033118C4 STP X22, X21, [X31 + 0x10]
	0x033118C8 STP X20, X19, [X31 + 0x20]
	0x033118CC ADRP X21, 0x10CB000
	0x033118D0 LDRB W8, [X21 + 0xB4A]
	0x033118D4 MOV X20, X1
	0x033118D8 MOV X19, X0
	0x033118DC TBNZ X8, 0x0, 0x33118F4
	0x033118E0 ADRP X0, 0xDE4000
	0x033118E4 LDR X0, [X0 + 0x570]
	0x033118E8 BL 0x1C16CF4
	0x033118EC MOVZ W8, 0x1
	0x033118F0 STRB W8, [X21 + 0xB4A]
	0x033118F4 CBZ X20, 0x3311984
	0x033118F8 ADRP X22, 0xDE4000
	0x033118FC LDR X22, [X22 + 0x570]
	0x03311900 LDR X21, [X20 + 0x58]
	0x03311904 LDR X0, [X22]
	0x03311908 LDR W8, [X0 + 0xE0]
	0x0331190C CBNZ W8, 0x3311914
	0x03311910 BL 0x1C16DFC
	0x03311914 MOV X0, X19
	0x03311918 MOV X1, X21
	0x0331191C MOV X2, X31
	0x03311920 BL 0x3394C70
	0x03311924 MOV X19, X0
	0x03311928 MOV X0, X20
	0x0331192C BL 0x330E1AC
	0x03311930 TBZ X0, 0x0, 0x3311940
	0x03311934 LDR X0, [X22]
	0x03311938 ADD X8, X20, 0x20
	0x0331193C B 0x3311958
	0x03311940 LDR X0, [X22]
	0x03311944 LDR W8, [X0 + 0xE0]
	0x03311948 CBNZ W8, 0x3311954
	0x0331194C BL 0x1C16DFC
	0x03311950 LDR X0, [X22]
	0x03311954 LDR X8, [X0 + 0xB8]
	0x03311958 LDR W9, [X0 + 0xE0]
	0x0331195C LDR X20, [X8]
	0x03311960 CBNZ W9, 0x3311968
	0x03311964 BL 0x1C16DFC
	0x03311968 MOV X0, X19
	0x0331196C MOV X1, X20
	0x03311970 LDP X20, X19, [X31 + 0x20]
	0x03311974 LDP X22, X21, [X31 + 0x10]
	0x03311978 MOV X2, X31
	0x0331197C LDR X30, [X31], #0x30
	0x03311980 B 0x3394C70
	0x03311984 BL 0x1C16F20
	0x03311988 STR X30, [X31 - 0x20]!
	0x0331198C STP X20, X19, [X31 + 0x10]
	0x03311990 ADRP X19, 0x10CB000
	0x03311994 ADRP X20, 0xDE4000
	0x03311998 LDRB W8, [X19 + 0xB4D]
	0x0331199C LDR X20, [X20 + 0x278]
	0x033119A0 TBNZ X8, 0x0, 0x33119B8
	0x033119A4 ADRP X0, 0xDE4000
	0x033119A8 LDR X0, [X0 + 0x278]
	0x033119AC BL 0x1C16CF4
	0x033119B0 MOVZ W8, 0x1
	0x033119B4 STRB W8, [X19 + 0xB4D]
	0x033119B8 LDR X8, [X20]
	0x033119BC LDP X20, X19, [X31 + 0x10]
	0x033119C0 LDR X8, [X8 + 0xB8]
	0x033119C4 LDR X0, [X8]
	0x033119C8 LDR X30, [X31], #0x20
	0x033119CC RET
	0x033119D0 SUB X31, X31, 0x190
	0x033119D4 STP X29, X30, [X31 + 0x130]
	0x033119D8 STP X28, X27, [X31 + 0x140]
	0x033119DC STP X26, X25, [X31 + 0x150]
	0x033119E0 STP X24, X23, [X31 + 0x160]
	0x033119E4 STP X22, X21, [X31 + 0x170]
	0x033119E8 STP X20, X19, [X31 + 0x180]
	0x033119EC ADRP X24, 0x10CB000
	0x033119F0 ADRP X23, 0xE16000
	0x033119F4 ADRP X19, 0xE16000
	0x033119F8 LDRB W8, [X24 + 0xB4E]
	0x033119FC LDR X23, [X23 + 0xA60]
	0x03311A00 LDR X19, [X19 + 0xA58]
	0x03311A04 MOV X20, X2
	0x03311A08 MOV X22, X1
	0x03311A0C MOV W21, W0
	0x03311A10 TBNZ X8, 0x0, 0x3311A58
	0x03311A14 ADRP X0, 0xDE3000
	0x03311A18 LDR X0, [X0 + 0x9F0]
	0x03311A1C BL 0x1C16CF4
	0x03311A20 ADRP X0, 0xE16000
	0x03311A24 LDR X0, [X0 + 0xB68]
	0x03311A28 BL 0x1C16CF4
	0x03311A2C ADRP X0, 0xE16000
	0x03311A30 LDR X0, [X0 + 0xA58]
	0x03311A34 BL 0x1C16CF4
	0x03311A38 ADRP X0, 0xE16000
	0x03311A3C LDR X0, [X0 + 0xA60]
	0x03311A40 BL 0x1C16CF4
	0x03311A44 ADRP X0, 0xDE4000
	0x03311A48 LDR X0, [X0 + 0x570]
	0x03311A4C BL 0x1C16CF4
	0x03311A50 MOVZ W8, 0x1
	0x03311A54 STRB W8, [X24 + 0xB4E]
	0x03311A58 LDR X0, [X23]
	0x03311A5C STRB W31, [X31 + 0x12C]
	0x03311A60 STP X31, X31, [X31 + 0x118]
	0x03311A64 STP X31, X31, [X31 + 0x108]
	0x03311A68 STP X31, X31, [X31 + 0xF8]
	0x03311A6C STR W31, [X31 + 0xF4]
	0x03311A70 STR X31, [X31 + 0xE8]
	0x03311A74 BL 0x1C16F10
	0x03311A78 LDR X1, [X19]
	0x03311A7C MOV X19, X0
	0x03311A80 BL 0x301B7C4
	0x03311A84 ADD X3, X31, 0x12C
	0x03311A88 MOV W0, W21
	0x03311A8C MOV X1, X22
	0x03311A90 MOV X2, X20
	0x03311A94 MOV X4, X31
	0x03311A98 BL 0x335E8B4
	0x03311A9C TBZ X0, 0x0, 0x3312248
	0x03311AA0 LDR X8, [X22]
	0x03311AA4 CBZ X8, 0x331226C

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X0
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x10CC000
	009 Move W8, [X21+2880]
	010 Move X19, X4
	011 Move W20, W3
	012 Move [X31], X2
	013 Move [X31+8], X1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xDE4000
	019 Move X0, [X0+2544]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2880], W8
	023 Move X22, 0xDE4000
	024 Move X22, [X22+2544]
	025 Move TEMP, X20
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {76}
	029 Compare X19, 0
	030 JumpIfEqual {173}
	031 Move W8, [X19+96]
	032 Compare W8, 0
	033 JumpIfNotEqual {76}
	034 Move X0, [X22]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Add X0, X31, 24
	040 Move X1, X31
	041 Call DateTime.get_Year, X0
	042 Move W20, W0
	043 Add X0, X31, 0
	044 Move X1, X31
	045 Call DateTime.get_Year, X0
	046 Subtract W21, W20, W0
	047 Move X0, [X22]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Add X0, X31, 0
	053 Move W1, W21
	054 Move X2, X31
	055 Call DateTime.AddYears, X0, X1
	056 Move [X31], X0
	057 Move X0, [X22]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Add X0, X31, 8
	063 Move X1, X31
	064 Call DateTime.get_Year, X0
	065 Subtract W20, W20, W0
	066 Move X0, [X22]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Add X0, X31, 8
	072 Move W1, W20
	073 Move X2, X31
	074 Call DateTime.AddYears, X0, X1
	075 Move [X31+8], X0
	076 Move X0, [X22]
	077 Move X20, [X31+24]
	078 Move X21, [X31]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X0, X20
	084 Move X1, X21
	085 Move X2, X31
	086 Call DateTime.op_GreaterThan, X0, X1
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {107}
	091 Move X0, [X22]
	092 Move X20, [X31]
	093 Move X19, [X31+8]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move X0, X19
	099 Move X1, X20
	100 Move X2, X31
	101 Call DateTime.op_LessThan, X0, X1
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {138}
	106 Move W0, 1
	107 Compare X19, 0
	108 JumpIfEqual {173}
	109 Move X0, [X22]
	110 Move W21, [X19+96]
	111 Move X19, [X31+8]
	112 Move X20, [X31+24]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Move X0, X19
	118 Move X1, X20
	119 Move X2, X31
	120 Call DateTime.op_GreaterThanOrEqual, X0, X1
	121 Compare W21, 0
	122 JumpIfEqual {149}
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfNotEqual {164}
	127 Move X0, [X22]
	128 Move X20, [X31]
	129 Move X19, [X31+8]
	130 Move W8, [X0+224]
	131 Compare W8, 0
	132 JumpIfNotEqual {134}
	133 Call 0x1C17DFC
	134 Move X0, X19
	135 Move X1, X20
	136 Move X2, X31
	137 Call DateTime.op_LessThanOrEqual, X0, X1
	138 Move X0, [X22]
	139 Move X19, [X31+8]
	140 Move X20, [X31+24]
	141 Move W8, [X0+224]
	142 Compare W8, 0
	143 JumpIfNotEqual {145}
	144 Call 0x1C17DFC
	145 Move X0, X19
	146 Move X1, X20
	147 Move X2, X31
	148 Call DateTime.op_GreaterThanOrEqual, X0, X1
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfNotEqual {164}
	153 Move X0, [X22]
	154 Move X20, [X31]
	155 Move X19, [X31+8]
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X0, X19
	161 Move X1, X20
	162 Move X2, X31
	163 Call DateTime.op_LessThan, X0, X1
	164 Move W0, W31
	165 Move X20, [X31+48]
	166 Move X19, [X31+56]
	167 Move X22, [X31+32]
	168 Move X21, [X31+40]
	169 Move X30, [X31+16]
	170 And W0, W0, 1
	171 Add X31, X31, 64
	172 Return X0
	173 Call 0x1C17F20

Method: System.Boolean GetIsAmbiguousTime(System.DateTime time, System.TimeZoneInfo/AdjustmentRule rule, System.Globalization.DaylightTimeStruct daylightTime)

Disassembly:
	0x03311AA8 LDR W9, [X8 + 0x18]
	0x03311AAC CBZ W9, 0x3312270
	0x03311AB0 ADRP X23, 0xDE3000
	0x03311AB4 LDR X23, [X23 + 0x9F0]
	0x03311AB8 LDR X20, [X8 + 0x20]
	0x03311ABC LDR X0, [X23]
	0x03311AC0 LDR W9, [X0 + 0xE0]
	0x03311AC4 CBNZ W9, 0x3311ACC
	0x03311AC8 BL 0x1C16DFC
	0x03311ACC ADD X0, X31, 0x120
	0x03311AD0 MOV X1, X20
	0x03311AD4 MOV X2, X31
	0x03311AD8 BL 0x335EEB0
	0x03311ADC LDR X8, [X22]
	0x03311AE0 CBZ X8, 0x331226C
	0x03311AE4 LDR W9, [X8 + 0x18]
	0x03311AE8 CMP W9, 0x1
	0x03311AEC B.LS 0x3312270
	0x03311AF0 LDR X1, [X8 + 0x28]
	0x03311AF4 ADD X0, X31, 0x118
	0x03311AF8 MOV X2, X31
	0x03311AFC BL 0x335EEB0
	0x03311B00 LDR X8, [X22]
	0x03311B04 CBZ X8, 0x331226C
	0x03311B08 LDR W9, [X8 + 0x18]
	0x03311B0C CMP W9, 0x3
	0x03311B10 B.LS 0x3312270
	0x03311B14 ADRP X24, 0xDE4000
	0x03311B18 LDR X24, [X24 + 0x570]
	0x03311B1C LDR X29, [X8 + 0x38]
	0x03311B20 LDR X0, [X24]
	0x03311B24 LDR W9, [X0 + 0xE0]
	0x03311B28 CBNZ W9, 0x3311B38
	0x03311B2C BL 0x1C16DFC
	0x03311B30 LDR X8, [X22]
	0x03311B34 CBZ X8, 0x331226C
	0x03311B38 LDR W9, [X8 + 0x18]
	0x03311B3C CMP W9, 0x3
	0x03311B40 B.LS 0x3312270
	0x03311B44 LDR X8, [X8 + 0x38]
	0x03311B48 CBZ X8, 0x3312248
	0x03311B4C LDR X0, [X23]
	0x03311B50 LDR W8, [X0 + 0xE0]
	0x03311B54 CBNZ W8, 0x3311B5C
	0x03311B58 BL 0x1C16DFC
	0x03311B5C ADD X0, X31, 0x120
	0x03311B60 MOV X1, X31
	0x03311B64 BL 0x33617E8
	0x03311B68 STR X0, [X31 + 0xF8]
	0x03311B6C ADD X0, X31, 0x118
	0x03311B70 MOV X1, X31
	0x03311B74 BL 0x33617E8
	0x03311B78 LDR X8, [X24]
	0x03311B7C MOV X22, X0
	0x03311B80 LDR W9, [X8 + 0xE0]
	0x03311B84 CBNZ W9, 0x3311B90
	0x03311B88 MOV X0, X8
	0x03311B8C BL 0x1C16DFC
	0x03311B90 ADD X0, X31, 0xF8
	0x03311B94 MOV X1, X22
	0x03311B98 MOV X2, X31
	0x03311B9C BL 0x3394564
	0x03311BA0 TBZ X0, 0x0, 0x3311C24
	0x03311BA4 LDR X0, [X23]
	0x03311BA8 LDR W8, [X0 + 0xE0]
	0x03311BAC CBNZ W8, 0x3311BB4
	0x03311BB0 BL 0x1C16DFC
	0x03311BB4 ADD X0, X31, 0x120
	0x03311BB8 MOV X1, X31
	0x03311BBC BL 0x336152C
	0x03311BC0 STR W0, [X31 + 0xF4]
	0x03311BC4 ADD X0, X31, 0x118
	0x03311BC8 MOV X1, X31
	0x03311BCC BL 0x336152C
	0x03311BD0 MOV W1, W0
	0x03311BD4 ADD X0, X31, 0xF4
	0x03311BD8 MOV X2, X31
	0x03311BDC BL 0x337B6C8
	0x03311BE0 TBZ X0, 0x0, 0x3311C24
	0x03311BE4 LDR X0, [X23]
	0x03311BE8 LDR W8, [X0 + 0xE0]
	0x03311BEC CBNZ W8, 0x3311BF4
	0x03311BF0 BL 0x1C16DFC
	0x03311BF4 ADD X0, X31, 0x120
	0x03311BF8 MOV X1, X31
	0x03311BFC BL 0x3361168
	0x03311C00 STR W0, [X31 + 0xF4]
	0x03311C04 ADD X0, X31, 0x118
	0x03311C08 MOV X1, X31
	0x03311C0C BL 0x3361168
	0x03311C10 MOV W1, W0
	0x03311C14 ADD X0, X31, 0xF4
	0x03311C18 MOV X2, X31
	0x03311C1C BL 0x337B6C8
	0x03311C20 TBNZ X0, 0x0, 0x3312248
	0x03311C24 LDR X0, [X23]
	0x03311C28 LDR W8, [X0 + 0xE0]
	0x03311C2C CBNZ W8, 0x3311C34
	0x03311C30 BL 0x1C16DFC
	0x03311C34 ADD X0, X31, 0x110
	0x03311C38 MOVZ W2, 0x1
	0x03311C3C MOVZ W3, 0x1
	0x03311C40 MOV W1, W21
	0x03311C44 MOV W4, W31
	0x03311C48 MOV W5, W31
	0x03311C4C MOV W6, W31
	0x03311C50 MOV W7, W31
	0x03311C54 ADD X27, X31, 0xA0
	0x03311C58 STR X31, [X31]
	0x03311C5C BL 0x335F594
	0x03311C60 MOVZ W1, 0xC
	0x03311C64 MOV W0, W21
	0x03311C68 MOV X2, X31
	0x03311C6C BL 0x3360470
	0x03311C70 MOV W3, W0
	0x03311C74 ADD X0, X31, 0x108
	0x03311C78 MOVZ W2, 0xC
	0x03311C7C MOV W1, W21
	0x03311C80 MOV X4, X31
	0x03311C84 BL 0x335F0C4
	0x03311C88 MOVZ W1, 0xC
	0x03311C8C MOV W0, W21
	0x03311C90 MOV X2, X31
	0x03311C94 BL 0x3360470
	0x03311C98 MOV W3, W0
	0x03311C9C ADD X0, X31, 0x100
	0x03311CA0 MOVZ W2, 0xC
	0x03311CA4 MOVZ W4, 0x17
	0x03311CA8 MOVZ W5, 0x3B
	0x03311CAC MOVZ W6, 0x3B
	0x03311CB0 MOVZ W7, 0x3E7
	0x03311CB4 MOV W1, W21
	0x03311CB8 STR X31, [X31]
	0x03311CBC BL 0x335F594
	0x03311CC0 LDRB W8, [X31 + 0x12C]
	0x03311CC4 CBZ W8, 0x3311EA4
	0x03311CC8 ADD X0, X31, 0xD8
	0x03311CCC MOVZ W1, 0x1
	0x03311CD0 MOVZ W2, 0x1
	0x03311CD4 MOVZ W3, 0x1
	0x03311CD8 MOV X4, X31
	0x03311CDC STR X31, [X31 + 0xD8]
	0x03311CE0 MOVZ W28, 0x1
	0x03311CE4 BL 0x335F0C4
	0x03311CE8 LDR X22, [X31 + 0xD8]
	0x03311CEC MOVZ W1, 0x1
	0x03311CF0 MOVZ W2, 0x1
	0x03311CF4 MOVZ W3, 0x1
	0x03311CF8 MOV X0, X22
	0x03311CFC MOV W4, W31
	0x03311D00 STR W31, [X31 + 0xE0]
	0x03311D04 STUR W31, [X27 + 0x43]
	0x03311D08 BL 0x33135A0
	0x03311D0C ADD X0, X31, 0xD0
	0x03311D10 MOVZ W1, 0x1
	0x03311D14 MOVZ W2, 0x1
	0x03311D18 MOVZ W3, 0x1
	0x03311D1C MOV X4, X31
	0x03311D20 STR X31, [X31 + 0xD0]
	0x03311D24 BL 0x335F0C4
	0x03311D28 LDR X8, [X31 + 0xD0]
	0x03311D2C LDR X0, [X23]
	0x03311D30 STR X8, [X31 + 0xE8]
	0x03311D34 LDR W8, [X0 + 0xE0]
	0x03311D38 CBNZ W8, 0x3311D40
	0x03311D3C BL 0x1C16DFC
	0x03311D40 ADD X0, X31, 0x120
	0x03311D44 MOV X1, X31
	0x03311D48 BL 0x33617E8
	0x03311D4C MOV X1, X0
	0x03311D50 ADD X0, X31, 0xE8
	0x03311D54 MOV X2, X31
	0x03311D58 BL 0x335FC68
	0x03311D5C MOV X23, X0
	0x03311D60 ADD X0, X31, 0x120
	0x03311D64 MOV X1, X31
	0x03311D68 BL 0x336152C
	0x03311D6C MOV W24, W0
	0x03311D70 ADD X0, X31, 0x120
	0x03311D74 MOV X1, X31
	0x03311D78 BL 0x3361168
	0x03311D7C MOV W25, W0
	0x03311D80 MOVZ W2, 0x1
	0x03311D84 MOV X0, X23
	0x03311D88 MOV W1, W24
	0x03311D8C MOV W3, W25
	0x03311D90 MOV W4, W31
	0x03311D94 BL 0x33135A0
	0x03311D98 ADD X0, X31, 0x98
	0x03311D9C MOVZ W2, 0x1
	0x03311DA0 MOVZ W3, 0x1
	0x03311DA4 MOV W1, W21
	0x03311DA8 MOV X4, X31
	0x03311DAC STR X31, [X31 + 0x98]
	0x03311DB0 BL 0x335F0C4
	0x03311DB4 ADD X0, X31, 0x120
	0x03311DB8 MOV X1, X31
	0x03311DBC BL 0x3361868
	0x03311DC0 MOV W21, W0
	0x03311DC4 ADD X0, X31, 0x120
	0x03311DC8 MOV X1, X31
	0x03311DCC BL 0x336152C
	0x03311DD0 MOV W26, W0
	0x03311DD4 ADD X0, X31, 0x120
	0x03311DD8 MOV X1, X31
	0x03311DDC BL 0x3361168
	0x03311DE0 MOV W3, W0
	0x03311DE4 ADD X0, X31, 0x90
	0x03311DE8 MOV W1, W21
	0x03311DEC MOV W2, W26
	0x03311DF0 MOV X4, X31
	0x03311DF4 STR X31, [X31 + 0x90]
	0x03311DF8 BL 0x335F0C4
	0x03311DFC LDP X1, X0, [X31 + 0x90]
	0x03311E00 LDR W9, [X31 + 0xE0]
	0x03311E04 LDUR W10, [X27 + 0x43]
	0x03311E08 MOVZ W8, 0x101
	0x03311E0C MOVK W8, 0x10000
	0x03311E10 ADD X3, X31, 0x78
	0x03311E14 ADD X4, X31, 0x60
	0x03311E18 MOV X2, X29
	0x03311E1C STR X23, [X31 + 0x60]
	0x03311E20 STRB W28, [X31 + 0x88]
	0x03311E24 STRB W24, [X31 + 0x68]
	0x03311E28 STRB W28, [X31 + 0x69]
	0x03311E2C STRB W25, [X31 + 0x6A]
	0x03311E30 STRB W31, [X31 + 0x6B]
	0x03311E34 STR W31, [X31 + 0x6C]
	0x03311E38 STRB W28, [X31 + 0x70]
	0x03311E3C STUR W31, [X31 + 0x71]
	0x03311E40 STP X22, X8, [X31 + 0x78]
	0x03311E44 STUR W9, [X31 + 0x89]
	0x03311E48 STR W10, [X31 + 0x8C]
	0x03311E4C STR W31, [X31 + 0x74]
	0x03311E50 BL 0x3312274
	0x03311E54 CBZ X19, 0x331226C
	0x03311E58 ADRP X20, 0xE16000
	0x03311E5C LDR X20, [X20 + 0xB68]
	0x03311E60 LDR W10, [X19 + 0x1C]
	0x03311E64 LDR X8, [X19 + 0x10]
	0x03311E68 LDR X9, [X20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x10CC000
	009 Move W8, [X22+2881]
	010 Move X21, X2
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xDE4000
	018 Move X0, [X0+2544]
	019 Call 0x1C17CF4
	020 Move X0, 0xDE5000
	021 Move X0, [X0+1392]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2881], W8
	025 Move [X31], X31
	026 Move [X31+8], X31
	027 Compare X20, 0
	028 JumpIfEqual {47}
	029 Move X23, 0xDE5000
	030 Move X23, [X23+1392]
	031 Move X22, [X20+32]
	032 Move X0, [X23]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X23]
	038 Move X8, [X0+184]
	039 Move X0, X22
	040 Move X2, X31
	041 Move X1, [X8]
	042 Call TimeSpan.op_Equality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {57}
	047 Move W0, W31
	048 Move X20, [X31+48]
	049 Move X19, [X31+56]
	050 Move X22, [X31+32]
	051 Move X21, [X31+40]
	052 Move X30, [X31+16]
	053 Move X23, [X31+24]
	054 And W0, W0, 1
	055 Add X31, X31, 64
	056 Return X0
	057 Move X0, [X23]
	058 Move X22, [X20+32]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {64}
	062 Call 0x1C17DFC
	063 Move X0, [X23]
	064 Move X8, [X0+184]
	065 Move X0, X22
	066 Move X2, X31
	067 Move X1, [X8]
	068 Call TimeSpan.op_GreaterThan, X0, X1
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {93}
	073 Move X0, X20
	074 Call AdjustmentRule.IsEndDateMarkerForEndOfYear, X0
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {47}
	079 Move X8, 0xDE4000
	080 Move X21, [X21+8]
	081 Move X8, [X8+2544]
	082 Move [X31+8], X21
	083 Move X0, [X8]
	084 Move X20, [X20+32]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X0, X21
	090 Move X1, X20
	091 Move X2, X31
	092 Call DateTime.op_Subtraction, X0, X1
	093 Move X0, X20
	094 Call AdjustmentRule.IsStartDateMarkerForBeginningOfYear, X0
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {47}
	099 Move X8, 0xDE4000
	100 Move X21, [X21]
	101 Move X8, [X8+2544]
	102 Move [X31+8], X21
	103 Move X0, [X8]
	104 Move X20, [X20+32]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move X0, X21
	110 Move X1, X20
	111 Move X2, X31
	112 Call DateTime.op_Addition, X0, X1
	113 Move X22, 0xDE4000
	114 Move X22, [X22+2544]
	115 Move X20, X0
	116 Move [X31], X20
	117 Move X0, [X22]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move X0, X19
	123 Move X1, X20
	124 Move X2, X31
	125 Call DateTime.op_GreaterThanOrEqual, X0, X1
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfNotEqual {143}
	130 Move X0, [X22]
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {135}
	134 Call 0x1C17DFC
	135 Move X0, X19
	136 Move X1, X21
	137 Move X2, X31
	138 Call DateTime.op_LessThan, X0, X1
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfEqual {191}
	143 Move X0, [X22]
	144 Move W8, [X0+224]
	145 Compare W8, 0
	146 JumpIfNotEqual {148}
	147 Call 0x1C17DFC
	148 Add X0, X31, 8
	149 Move X1, X31
	150 Call DateTime.get_Year, X0
	151 Move W20, W0
	152 Add X0, X31, 0
	153 Move X1, X31
	154 Call DateTime.get_Year, X0
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move X0, [X22]
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {161}
	160 Call 0x1C17DFC
	161 Add X0, X31, 8
	162 Move W1, 1
	163 Move X2, X31
	164 Call DateTime.AddYears, X0, X1
	165 Move X20, X0
	166 Add X0, X31, 0
	167 Move W1, 1
	168 Move X2, X31
	169 Call DateTime.AddYears, X0, X1
	170 Move X1, X0
	171 Move X0, X19
	172 Move X2, X31
	173 Call DateTime.op_GreaterThanOrEqual, X0, X1
	174 Move TEMP, X0
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfNotEqual {208}
	178 Move X0, [X22]
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {183}
	182 Call 0x1C17DFC
	183 Move X0, X19
	184 Move X1, X20
	185 Move X2, X31
	186 Call DateTime.op_LessThan, X0, X1
	187 Move TEMP, X0
	188 And TEMP, TEMP, 1
	189 Compare TEMP, 1
	190 JumpIfNotEqual {208}
	191 Move W0, 1
	192 Move X20, X0
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move X0, X20
	195 Call 0x3EB2AD0
	196 Move X20, X0
	197 Move X0, 0xDEB000
	198 Move X0, [X0+1888]
	199 Call 0x1C17D08
	200 Move X8, [X20]
	201 Move X1, [X8]
	202 Call 0x1C18270
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {243}
	207 Call 0x3EB2AE0
	208 Move X0, [X22]
	209 Move W8, [X0+224]
	210 Compare W8, 0
	211 JumpIfNotEqual {213}
	212 Call 0x1C17DFC
	213 Add X0, X31, 8
	214 Move TEMP, 0
	215 Not TEMP
	216 Move W1, TEMP
	217 Move X2, X31
	218 Call DateTime.AddYears, X0, X1
	219 Move X20, X0
	220 Add X0, X31, 0
	221 Move TEMP, 0
	222 Not TEMP
	223 Move W1, TEMP
	224 Move X2, X31
	225 Call DateTime.AddYears, X0, X1
	226 Move X1, X0
	227 Move X0, X19
	228 Move X2, X31
	229 Call DateTime.op_GreaterThanOrEqual, X0, X1
	230 Move TEMP, X0
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfNotEqual {47}
	234 Move X0, [X22]
	235 Move W8, [X0+224]
	236 Compare W8, 0
	237 JumpIfNotEqual {239}
	238 Call 0x1C17DFC
	239 Move X0, X19
	240 Move X1, X20
	241 Move X2, X31
	242 Call DateTime.op_LessThan, X0, X1
	243 Move W0, 8
	244 Call 0x3EB2AF0
	245 Move X8, [X20]
	246 Move [X0], X8
	247 Move X1, 0xBA4000
	248 Add X1, X1, 3672
	249 Move X2, X31
	250 Call 0x3EB2B00
	251 Move X20, X0
	252 Call 0x3EB2AE0
	253 Move X20, X0
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Move X0, X20
	256 Call 0x3EB2AD0
	257 Move X19, X0
	258 Move X0, 0xDEB000
	259 Move X0, [X0+1888]
	260 Call 0x1C17D08
	261 Move X8, [X19]
	262 Move X1, [X8]
	263 Call 0x1C18270
	264 Move TEMP, X0
	265 And TEMP, TEMP, 1
	266 Compare TEMP, 1
	267 JumpIfNotEqual {269}
	268 Call 0x3EB2AE0
	269 Move W0, 8
	270 Call 0x3EB2AF0
	271 Move X8, [X19]
	272 Move [X0], X8
	273 Move X1, 0xBA4000
	274 Add X1, X1, 3672
	275 Move X2, X31
	276 Call 0x3EB2B00
	277 Move X20, X0
	278 Call 0x3EB2AE0
	279 Move X0, X20
	280 Call 0x1D2D690
	281 Call 0x1991590

Method: System.Boolean GetIsInvalidTime(System.DateTime time, System.TimeZoneInfo/AdjustmentRule rule, System.Globalization.DaylightTimeStruct daylightTime)

Disassembly:
	0x0330F450 BL 0x3308864
	0x0330F454 ANDS W31, W20, 0x1
	0x0330F458 CSEL X8, X31, X22, NE
	0x0330F45C STP X26, X24, [X21 + 0x10]
	0x0330F460 STR X23, [X21 + 0x20]
	0x0330F464 STP X8, X25, [X21 + 0x28]
	0x0330F468 LDRB W8, [X31 + 0xC]
	0x0330F46C EOR W9, W20, 0x1
	0x0330F470 STR X19, [X21 + 0x40]
	0x0330F474 LDP X20, X19, [X31 + 0x50]
	0x0330F478 CMP W8, 0x0
	0x0330F47C CSET W8, NE
	0x0330F480 AND W8, W8, W9, 0x0
	0x0330F484 STRB W8, [X21 + 0x38]
	0x0330F488 LDP X22, X21, [X31 + 0x40]
	0x0330F48C LDP X24, X23, [X31 + 0x30]
	0x0330F490 LDP X26, X25, [X31 + 0x20]
	0x0330F494 LDP X28, X27, [X31 + 0x10]
	0x0330F498 LDR X30, [X31], #0x60
	0x0330F49C RET
	0x0330F4A0 SUB X31, X31, 0x50
	0x0330F4A4 STR X30, [X31 + 0x10]
	0x0330F4A8 STP X24, X23, [X31 + 0x20]
	0x0330F4AC STP X22, X21, [X31 + 0x30]
	0x0330F4B0 STP X20, X19, [X31 + 0x40]
	0x0330F4B4 ADRP X23, 0x10CD000
	0x0330F4B8 ADRP X24, 0xE18000
	0x0330F4BC LDRB W8, [X23 + 0xB32]
	0x0330F4C0 LDR X24, [X24 + 0xA38]
	0x0330F4C4 MOV X19, X3
	0x0330F4C8 MOV X20, X2
	0x0330F4CC MOV X21, X1
	0x0330F4D0 MOV X22, X0
	0x0330F4D4 TBNZ X8, 0x0, 0x330F4EC
	0x0330F4D8 ADRP X0, 0xE18000
	0x0330F4DC LDR X0, [X0 + 0xA38]
	0x0330F4E0 BL 0x1C16CF4
	0x0330F4E4 MOVZ W8, 0x1
	0x0330F4E8 STRB W8, [X23 + 0xB32]
	0x0330F4EC LDR X0, [X24]
	0x0330F4F0 BL 0x1C16F10
	0x0330F4F4 MOV X1, X22
	0x0330F4F8 MOV X2, X21
	0x0330F4FC MOV X3, X20
	0x0330F500 MOV X4, X19
	0x0330F504 MOV X5, X19
	0x0330F508 MOV X6, X31
	0x0330F50C MOV W7, W31
	0x0330F510 MOV X23, X0
	0x0330F514 BL 0x330F3C0
	0x0330F518 MOV X0, X23
	0x0330F51C LDP X20, X19, [X31 + 0x40]
	0x0330F520 LDP X22, X21, [X31 + 0x30]
	0x0330F524 LDP X24, X23, [X31 + 0x20]
	0x0330F528 LDR X30, [X31 + 0x10]
	0x0330F52C ADD X31, X31, 0x50
	0x0330F530 RET
	0x0330F534 SUB X31, X31, 0x60
	0x0330F538 STP X30, X27, [X31 + 0x10]
	0x0330F53C STP X26, X25, [X31 + 0x20]
	0x0330F540 STP X24, X23, [X31 + 0x30]
	0x0330F544 STP X22, X21, [X31 + 0x40]
	0x0330F548 STP X20, X19, [X31 + 0x50]
	0x0330F54C ADRP X26, 0x10CD000
	0x0330F550 LDRB W8, [X26 + 0xB33]
	0x0330F554 MOV W22, W6
	0x0330F558 MOV X25, X5
	0x0330F55C MOV X19, X4
	0x0330F560 MOV X20, X3
	0x0330F564 MOV X21, X2
	0x0330F568 MOV X23, X1
	0x0330F56C MOV X24, X0
	0x0330F570 TBNZ X8, 0x0, 0x330F594
	0x0330F574 ADRP X0, 0xE18000
	0x0330F578 LDR X0, [X0 + 0xC60]
	0x0330F57C BL 0x1C16CF4
	0x0330F580 ADRP X0, 0xE18000
	0x0330F584 LDR X0, [X0 + 0xA38]
	0x0330F588 BL 0x1C16CF4
	0x0330F58C MOVZ W8, 0x1
	0x0330F590 STRB W8, [X26 + 0xB33]
	0x0330F594 CBZ X25, 0x330F5E4
	0x0330F598 TBNZ X22, 0x0, 0x330F5E4
	0x0330F59C LDR X8, [X25 + 0x18]
	0x0330F5A0 CBZ X8, 0x330F5E4
	0x0330F5A4 MOV X0, X25
	0x0330F5A8 MOV X1, X31
	0x0330F5AC BL 0x33A01F0
	0x0330F5B0 CBZ X0, 0x330F5E0
	0x0330F5B4 ADRP X8, 0xE18000
	0x0330F5B8 LDR X8, [X8 + 0xC60]
	0x0330F5BC MOV X26, X0
	0x0330F5C0 LDR X27, [X8]
	0x0330F5C4 MOV X1, X27
	0x0330F5C8 BL 0x1C16E00
	0x0330F5CC MOV X25, X0
	0x0330F5D0 CBNZ X0, 0x330F5E4
	0x0330F5D4 MOV X0, X26
	0x0330F5D8 MOV X1, X27
	0x0330F5DC BL 0x1C171E0
	0x0330F5E0 MOV X25, X31
	0x0330F5E4 ADRP X8, 0xE18000
	0x0330F5E8 LDR X8, [X8 + 0xA38]
	0x0330F5EC LDR X0, [X8]
	0x0330F5F0 BL 0x1C16F10
	0x0330F5F4 AND W7, W22, 0x1
	0x0330F5F8 MOV X1, X24
	0x0330F5FC MOV X2, X23
	0x0330F600 MOV X3, X21
	0x0330F604 MOV X4, X20
	0x0330F608 MOV X5, X19
	0x0330F60C MOV X6, X25
	0x0330F610 MOV X26, X0
	0x0330F614 BL 0x330F3C0
	0x0330F618 MOV X0, X26
	0x0330F61C LDP X20, X19, [X31 + 0x50]
	0x0330F620 LDP X22, X21, [X31 + 0x40]
	0x0330F624 LDP X24, X23, [X31 + 0x30]
	0x0330F628 LDP X26, X25, [X31 + 0x20]
	0x0330F62C LDP X30, X27, [X31 + 0x10]
	0x0330F630 ADD X31, X31, 0x60
	0x0330F634 RET
	0x0330F638 STR X30, [X31 - 0x30]!
	0x0330F63C STP X22, X21, [X31 + 0x10]
	0x0330F640 STP X20, X19, [X31 + 0x20]
	0x0330F644 ADRP X21, 0x10CD000
	0x0330F648 ADRP X20, 0xE18000
	0x0330F64C LDRB W8, [X21 + 0xB34]
	0x0330F650 LDR X20, [X20 + 0xA38]
	0x0330F654 MOV X19, X0
	0x0330F658 TBNZ X8, 0x0, 0x330F670
	0x0330F65C ADRP X0, 0xE18000
	0x0330F660 LDR X0, [X0 + 0xA38]
	0x0330F664 BL 0x1C16CF4
	0x0330F668 MOVZ W8, 0x1
	0x0330F66C STRB W8, [X21 + 0xB34]
	0x0330F670 LDR X0, [X20]
	0x0330F674 STRB W31, [X31 + 0xC]
	0x0330F678 LDR X20, [X19 + 0x10]
	0x0330F67C LDR X21, [X19 + 0x30]
	0x0330F680 LDR W8, [X0 + 0xE0]
	0x0330F684 LDR X22, [X19 + 0x40]
	0x0330F688 CBNZ W8, 0x330F690
	0x0330F68C BL 0x1C16DFC
	0x0330F690 ADD X3, X31, 0xC
	0x0330F694 MOV X0, X20
	0x0330F698 MOV X1, X21
	0x0330F69C MOV X2, X22
	0x0330F6A0 BL 0x3308864
	0x0330F6A4 LDRB W8, [X31 + 0xC]
	0x0330F6A8 LDRB W9, [X19 + 0x38]
	0x0330F6AC CMP W8, W9
	0x0330F6B0 B.NE 0x330F6C4
	0x0330F6B4 LDP X20, X19, [X31 + 0x20]
	0x0330F6B8 LDP X22, X21, [X31 + 0x10]
	0x0330F6BC LDR X30, [X31], #0x30
	0x0330F6C0 RET
	0x0330F6C4 ADRP X0, 0xE18000
	0x0330F6C8 LDR X0, [X0 + 0xC68]
	0x0330F6CC BL 0x1C16D08
	0x0330F6D0 MOV X19, X0
	0x0330F6D4 ADRP X0, 0xE18000
	0x0330F6D8 LDR X0, [X0 + 0xC70]
	0x0330F6DC BL 0x1C16D08
	0x0330F6E0 MOV X1, X0
	0x0330F6E4 MOV X0, X19
	0x0330F6E8 MOV X2, X31
	0x0330F6EC BL 0x32094D4
	0x0330F6F0 MOV X19, X0
	0x0330F6F4 ADRP X0, 0xE0E000
	0x0330F6F8 LDR X0, [X0 + 0x2E0]
	0x0330F6FC BL 0x1C16D08
	0x0330F700 BL 0x1C16F10
	0x0330F704 MOV X20, X0
	0x0330F708 MOV X1, X19
	0x0330F70C MOV X2, X31
	0x0330F710 BL 0x329F100
	0x0330F714 ADRP X0, 0xE18000
	0x0330F718 LDR X0, [X0 + 0xC78]
	0x0330F71C BL 0x1C16D08
	0x0330F720 MOV X1, X0
	0x0330F724 MOV X0, X20
	0x0330F728 BL 0x1C16DEC
	0x0330F72C B 0x330F734
	0x0330F730 B 0x330F734
	0x0330F734 MOV X19, X0
	0x0330F738 CMP W1, 0x1
	0x0330F73C B.NE 0x330F800
	0x0330F740 MOV X0, X19
	0x0330F744 BL 0x3EB1AD0
	0x0330F748 MOV X19, X0
	0x0330F74C ADRP X0, 0xDEC000
	0x0330F750 LDR X0, [X0 + 0x578]
	0x0330F754 BL 0x1C16D08
	0x0330F758 LDR X8, [X19]
	0x0330F75C LDR X1, [X8]
	0x0330F760 BL 0x1C17270
	0x0330F764 TBZ X0, 0x0, 0x330F7BC
	0x0330F768 LDR X19, [X19]
	0x0330F76C BL 0x3EB1AE0
	0x0330F770 ADRP X0, 0xE0E000
	0x0330F774 LDR X0, [X0 + 0x2E0]
	0x0330F778 BL 0x1C16D08
	0x0330F77C BL 0x1C16F10
	0x0330F780 MOV X20, X0
	0x0330F784 ADRP X0, 0xE18000
	0x0330F788 LDR X0, [X0 + 0xC80]
	0x0330F78C BL 0x1C16D08
	0x0330F790 MOV X1, X0
	0x0330F794 MOV X0, X20
	0x0330F798 MOV X2, X19
	0x0330F79C MOV X3, X31
	0x0330F7A0 BL 0x329F124
	0x0330F7A4 ADRP X0, 0xE18000
	0x0330F7A8 LDR X0, [X0 + 0xC78]
	0x0330F7AC BL 0x1C16D08
	0x0330F7B0 MOV X1, X0
	0x0330F7B4 MOV X0, X20
	0x0330F7B8 BL 0x1C16DEC
	0x0330F7BC ADRP X0, 0xE18000
	0x0330F7C0 LDR X0, [X0 + 0xA68]
	0x0330F7C4 BL 0x1C16D08
	0x0330F7C8 LDR X8, [X19]
	0x0330F7CC LDR X1, [X8]
	0x0330F7D0 BL 0x1C17270
	0x0330F7D4 TBNZ X0, 0x0, 0x330F768
	0x0330F7D8 MOVZ W0, 0x8
	0x0330F7DC BL 0x3EB1AF0
	0x0330F7E0 LDR X8, [X19]
	0x0330F7E4 STR X8, [X0]
	0x0330F7E8 ADRP X1, 0xBA5000
	0x0330F7EC ADD X1, X1, 0xE58
	0x0330F7F0 MOV X2, X31
	0x0330F7F4 BL 0x3EB1B00
	0x0330F7F8 MOV X19, X0
	0x0330F7FC BL 0x3EB1AE0
	0x0330F800 MOV X0, X19
	0x0330F804 BL 0x1D2C690
	0x0330F808 BL 0x1990590
	0x0330F80C SUB X31, X31, 0x60
	0x0330F810 STP X30, X27, [X31 + 0x10]
	0x0330F814 STP X26, X25, [X31 + 0x20]
	0x0330F818 STP X24, X23, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x10CE000
	009 Move W8, [X22+2882]
	010 Move X21, X2
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xDE6000
	018 Move X0, [X0+2544]
	019 Call 0x1C17CF4
	020 Move X0, 0xDE7000
	021 Move X0, [X0+1392]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2882], W8
	025 Move [X31], X31
	026 Move [X31+8], X31
	027 Compare X20, 0
	028 JumpIfEqual {47}
	029 Move X23, 0xDE7000
	030 Move X23, [X23+1392]
	031 Move X22, [X20+32]
	032 Move X0, [X23]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X23]
	038 Move X8, [X0+184]
	039 Move X0, X22
	040 Move X2, X31
	041 Move X1, [X8]
	042 Call TimeSpan.op_Equality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {57}
	047 Move W0, W31
	048 Move X20, [X31+48]
	049 Move X19, [X31+56]
	050 Move X22, [X31+32]
	051 Move X21, [X31+40]
	052 Move X30, [X31+16]
	053 Move X23, [X31+24]
	054 And W0, W0, 1
	055 Add X31, X31, 64
	056 Return X0
	057 Move X0, [X23]
	058 Move X22, [X20+32]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {64}
	062 Call 0x1C17DFC
	063 Move X0, [X23]
	064 Move X8, [X0+184]
	065 Move X0, X22
	066 Move X2, X31
	067 Move X1, [X8]
	068 Call TimeSpan.op_LessThan, X0, X1
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {93}
	073 Move X0, X20
	074 Call AdjustmentRule.IsEndDateMarkerForEndOfYear, X0
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {47}
	079 Move X8, 0xDE6000
	080 Move X21, [X21+8]
	081 Move X8, [X8+2544]
	082 Move [X31+8], X21
	083 Move X0, [X8]
	084 Move X20, [X20+32]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X0, X21
	090 Move X1, X20
	091 Move X2, X31
	092 Call DateTime.op_Subtraction, X0, X1
	093 Move X0, X20
	094 Call AdjustmentRule.IsStartDateMarkerForBeginningOfYear, X0
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {47}
	099 Move X8, 0xDE6000
	100 Move X21, [X21]
	101 Move X8, [X8+2544]
	102 Move [X31+8], X21
	103 Move X0, [X8]
	104 Move X20, [X20+32]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move X0, X21
	110 Move X1, X20
	111 Move X2, X31
	112 Call DateTime.op_Addition, X0, X1
	113 Move X22, 0xDE6000
	114 Move X22, [X22+2544]
	115 Move X20, X0
	116 Move [X31], X20
	117 Move X0, [X22]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move X0, X19
	123 Move X1, X21
	124 Move X2, X31
	125 Call DateTime.op_GreaterThanOrEqual, X0, X1
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfNotEqual {143}
	130 Move X0, [X22]
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {135}
	134 Call 0x1C17DFC
	135 Move X0, X19
	136 Move X1, X20
	137 Move X2, X31
	138 Call DateTime.op_LessThan, X0, X1
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfEqual {192}
	143 Move X0, [X22]
	144 Move W8, [X0+224]
	145 Compare W8, 0
	146 JumpIfNotEqual {148}
	147 Call 0x1C17DFC
	148 Add X0, X31, 8
	149 Move X1, X31
	150 Call DateTime.get_Year, X0
	151 Move W20, W0
	152 Add X0, X31, 0
	153 Move X1, X31
	154 Call DateTime.get_Year, X0
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move X0, [X22]
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {161}
	160 Call 0x1C17DFC
	161 Add X0, X31, 8
	162 Move W1, 1
	163 Move X2, X31
	164 Call DateTime.AddYears, X0, X1
	165 Move X21, X0
	166 Add X0, X31, 0
	167 Move W1, 1
	168 Move X2, X31
	169 Call DateTime.AddYears, X0, X1
	170 Move X20, X0
	171 Move X0, X19
	172 Move X1, X21
	173 Move X2, X31
	174 Call DateTime.op_GreaterThanOrEqual, X0, X1
	175 Move TEMP, X0
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfNotEqual {209}
	179 Move X0, [X22]
	180 Move W8, [X0+224]
	181 Compare W8, 0
	182 JumpIfNotEqual {184}
	183 Call 0x1C17DFC
	184 Move X0, X19
	185 Move X1, X20
	186 Move X2, X31
	187 Call DateTime.op_LessThan, X0, X1
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfNotEqual {209}
	192 Move W0, 1
	193 Move X20, X0
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X0, X20
	196 Call 0x3EB2AD0
	197 Move X20, X0
	198 Move X0, 0xDED000
	199 Move X0, [X0+1888]
	200 Call 0x1C17D08
	201 Move X8, [X20]
	202 Move X1, [X8]
	203 Call 0x1C18270
	204 Move TEMP, X0
	205 And TEMP, TEMP, 1
	206 Compare TEMP, 1
	207 JumpIfNotEqual {245}
	208 Call 0x3EB2AE0
	209 Move X0, [X22]
	210 Move W8, [X0+224]
	211 Compare W8, 0
	212 JumpIfNotEqual {214}
	213 Call 0x1C17DFC
	214 Add X0, X31, 8
	215 Move TEMP, 0
	216 Not TEMP
	217 Move W1, TEMP
	218 Move X2, X31
	219 Call DateTime.AddYears, X0, X1
	220 Move X21, X0
	221 Add X0, X31, 0
	222 Move TEMP, 0
	223 Not TEMP
	224 Move W1, TEMP
	225 Move X2, X31
	226 Call DateTime.AddYears, X0, X1
	227 Move X20, X0
	228 Move X0, X19
	229 Move X1, X21
	230 Move X2, X31
	231 Call DateTime.op_GreaterThanOrEqual, X0, X1
	232 Move TEMP, X0
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfNotEqual {47}
	236 Move X0, [X22]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {241}
	240 Call 0x1C17DFC
	241 Move X0, X19
	242 Move X1, X20
	243 Move X2, X31
	244 Call DateTime.op_LessThan, X0, X1
	245 Move W0, 8
	246 Call 0x3EB2AF0
	247 Move X8, [X20]
	248 Move [X0], X8
	249 Move X1, 0xBA6000
	250 Add X1, X1, 3672
	251 Move X2, X31
	252 Call 0x3EB2B00
	253 Move X20, X0
	254 Call 0x3EB2AE0
	255 Move X20, X0
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Move X0, X20
	258 Call 0x3EB2AD0
	259 Move X19, X0
	260 Move X0, 0xDED000
	261 Move X0, [X0+1888]
	262 Call 0x1C17D08
	263 Move X8, [X19]
	264 Move X1, [X8]
	265 Call 0x1C18270
	266 Move TEMP, X0
	267 And TEMP, TEMP, 1
	268 Compare TEMP, 1
	269 JumpIfNotEqual {271}
	270 Call 0x3EB2AE0
	271 Move W0, 8
	272 Call 0x3EB2AF0
	273 Move X8, [X19]
	274 Move [X0], X8
	275 Move X1, 0xBA6000
	276 Add X1, X1, 3672
	277 Move X2, X31
	278 Call 0x3EB2B00
	279 Move X20, X0
	280 Call 0x3EB2AE0
	281 Move X0, X20
	282 Call 0x1D2D690
	283 Call 0x1991590

Method: System.TimeSpan GetUtcOffset(System.DateTime time, System.TimeZoneInfo zone, System.TimeZoneInfoOptions flags)

Disassembly:
	0x0330EAE4 LDR X0, [X26]
	0x0330EAE8 LDR X8, [X0 + 0xB8]
	0x0330EAEC LDR X22, [X8]
	0x0330EAF0 LDR X0, [X24]
	0x0330EAF4 LDR W8, [X0 + 0xE0]
	0x0330EAF8 CBNZ W8, 0x330EB00
	0x0330EAFC BL 0x1C16DFC
	0x0330EB00 MOV X0, X23
	0x0330EB04 MOV X1, X22
	0x0330EB08 MOV X2, X31
	0x0330EB0C BL 0x3362E18
	0x0330EB10 MOV X22, X0
	0x0330EB14 LDR X0, [X25]
	0x0330EB18 LDR X23, [X31 + 0x48]
	0x0330EB1C LDR W8, [X0 + 0xE0]
	0x0330EB20 CBNZ W8, 0x330EB28
	0x0330EB24 BL 0x1C16DFC
	0x0330EB28 MOV X0, X21
	0x0330EB2C MOV X1, X23
	0x0330EB30 MOV X2, X22
	0x0330EB34 MOV W3, W31
	0x0330EB38 MOV X4, X19
	0x0330EB3C BL 0x3310880
	0x0330EB40 MOV W8, W0
	0x0330EB44 MOV W0, W31
	0x0330EB48 TBZ X8, 0x0, 0x330EBDC
	0x0330EB4C LDR X0, [X24]
	0x0330EB50 LDR W8, [X0 + 0xE0]
	0x0330EB54 CBNZ W8, 0x330EB5C
	0x0330EB58 BL 0x1C16DFC
	0x0330EB5C ADD X0, X31, 0x48
	0x0330EB60 MOV X1, X31
	0x0330EB64 BL 0x336139C
	0x0330EB68 CMP W0, 0x2
	0x0330EB6C B.NE 0x330EBD8
	0x0330EB70 LDR X8, [X20 + 0x10]
	0x0330EB74 LDR V0, [X20]
	0x0330EB78 LDR X0, [X25]
	0x0330EB7C LDR X20, [X31 + 0x48]
	0x0330EB80 STR X8, [X31 + 0x30]
	0x0330EB84 STR V0, [X31 + 0x2]
	0x0330EB88 LDR W8, [X0 + 0xE0]
	0x0330EB8C CBNZ W8, 0x330EB94
	0x0330EB90 BL 0x1C16DFC
	0x0330EB94 LDR V0, [X31 + 0x2]
	0x0330EB98 LDR X8, [X31 + 0x30]
	0x0330EB9C ADD X2, X31, 0x0
	0x0330EBA0 MOV X0, X20
	0x0330EBA4 MOV X1, X19
	0x0330EBA8 STR V0, [X31]
	0x0330EBAC STR X8, [X31 + 0x10]
	0x0330EBB0 BL 0x3310AA8
	0x0330EBB4 TBZ X0, 0x0, 0x330EBD8
	0x0330EBB8 LDR X0, [X24]
	0x0330EBBC LDR W8, [X0 + 0xE0]
	0x0330EBC0 CBNZ W8, 0x330EBC8
	0x0330EBC4 BL 0x1C16DFC
	0x0330EBC8 ADD X0, X31, 0x48
	0x0330EBCC MOV X1, X31
	0x0330EBD0 BL 0x336133C
	0x0330EBD4 B 0x330EBDC
	0x0330EBD8 MOVZ W0, 0x1
	0x0330EBDC LDP X20, X19, [X31 + 0x90]
	0x0330EBE0 LDP X22, X21, [X31 + 0x80]
	0x0330EBE4 LDP X24, X23, [X31 + 0x70]
	0x0330EBE8 LDP X26, X25, [X31 + 0x60]
	0x0330EBEC LDP X30, X27, [X31 + 0x50]
	0x0330EBF0 AND W0, W0, 0x1
	0x0330EBF4 ADD X31, X31, 0xA0
	0x0330EBF8 RET
	0x0330EBFC SUB X31, X31, 0x50
	0x0330EC00 STR X30, [X31 + 0x10]
	0x0330EC04 STP X24, X23, [X31 + 0x20]
	0x0330EC08 STP X22, X21, [X31 + 0x30]
	0x0330EC0C STP X20, X19, [X31 + 0x40]
	0x0330EC10 ADRP X22, 0x10CE000
	0x0330EC14 ADRP X23, 0xDE6000
	0x0330EC18 LDRB W8, [X22 + 0xB3A]
	0x0330EC1C LDR X23, [X23 + 0x9F0]
	0x0330EC20 MOV X20, X2
	0x0330EC24 MOV X21, X1
	0x0330EC28 MOV X19, X0
	0x0330EC2C TBNZ X8, 0x0, 0x330EC5C
	0x0330EC30 ADRP X0, 0xDE6000
	0x0330EC34 LDR X0, [X0 + 0x9F0]
	0x0330EC38 BL 0x1C16CF4
	0x0330EC3C ADRP X0, 0xDE7000
	0x0330EC40 LDR X0, [X0 + 0x570]
	0x0330EC44 BL 0x1C16CF4
	0x0330EC48 ADRP X0, 0xE19000
	0x0330EC4C LDR X0, [X0 + 0xA38]
	0x0330EC50 BL 0x1C16CF4
	0x0330EC54 MOVZ W8, 0x1
	0x0330EC58 STRB W8, [X22 + 0xB3A]
	0x0330EC5C LDR X0, [X23]
	0x0330EC60 LDR W8, [X0 + 0xE0]
	0x0330EC64 CBNZ W8, 0x330EC70
	0x0330EC68 BL 0x1C16DFC
	0x0330EC6C LDR X0, [X23]
	0x0330EC70 LDR X8, [X0 + 0xB8]
	0x0330EC74 MOV X1, X31
	0x0330EC78 ADD X0, X8, 0x18
	0x0330EC7C BL 0x3361708
	0x0330EC80 LDR X8, [X23]
	0x0330EC84 MOV X22, X0
	0x0330EC88 LDR W9, [X8 + 0xE0]
	0x0330EC8C CBNZ W9, 0x330EC9C
	0x0330EC90 MOV X0, X8

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+112], X30
	003 Move [X31+120], X23
	004 Move [X31+128], X22
	005 Move [X31+136], X21
	006 Move [X31+144], X20
	007 Move [X31+152], X19
	008 Move X19, 0x10CF000
	009 Move W8, [X19+2883]
	010 Move X21, X1
	011 Move X20, X0
	012 Move [X31+104], X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xDE7000
	018 Move X0, [X0+2544]
	019 Call 0x1C17CF4
	020 Move X0, 0xDE8000
	021 Move X0, [X0+1392]
	022 Call 0x1C17CF4
	023 Move X0, 0xE1A000
	024 Move X0, [X0+2616]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X19+2883], W8
	028 Move [X31+96], X31
	029 Compare X21, 0
	030 JumpIfEqual {129}
	031 Move X19, [X21+48]
	032 Add X3, X31, 96
	033 Move X0, X21
	034 Move X1, X20
	035 Move W2, W31
	036 Call TimeZoneInfo.GetAdjustmentRuleForTime, X0, X1, X2, X3
	037 Compare X0, 0
	038 JumpIfEqual {120}
	039 Move X23, 0xDE8000
	040 Move X23, [X23+1392]
	041 Move X20, X0
	042 Move X22, [X20+88]
	043 Move X0, [X23]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X19
	049 Move X1, X22
	050 Move X2, X31
	051 Call TimeSpan.op_Addition, X0, X1
	052 Move X19, X0
	053 Move X0, X20
	054 Call AdjustmentRule.get_HasDaylightSaving, X0
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {120}
	059 Move X8, 0xDE7000
	060 Move X8, [X8+2544]
	061 Move X0, [X8]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Add X0, X31, 104
	067 Move X1, X31
	068 Call DateTime.get_Year, X0
	069 Move X3, [X31+96]
	070 Move W1, W0
	071 Add X8, X31, 32
	072 Move X0, X21
	073 Move X2, X20
	074 Call TimeZoneInfo.GetDaylightTime, X0, X1, X2, X3
	075 Move X9, 0xE1A000
	076 Move X8, [X31+48]
	077 Move V0, [X31+2]
	078 Move X9, [X9+2616]
	079 Move X21, [X31+104]
	080 Move [X31+80], X8
	081 Move [X31+4], V0
	082 Move X0, [X9]
	083 Move [X31+2], V0
	084 Move [X31+48], X8
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move V0, [X31+2]
	090 Move X8, [X31+48]
	091 Add X2, X31, 0
	092 Move X0, X21
	093 Move X1, X20
	094 Move [X31], V0
	095 Move [X31+16], X8
	096 Call TimeZoneInfo.GetIsDaylightSavings, X0, X1, X2, X3
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {103}
	101 Move X0, [X23]
	102 Add X8, X20, 32
	103 Move X0, [X23]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {109}
	107 Call 0x1C17DFC
	108 Move X0, [X23]
	109 Move X8, [X0+184]
	110 Move W9, [X0+224]
	111 Move X20, [X8]
	112 Compare W9, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Move X0, X19
	116 Move X1, X20
	117 Move X2, X31
	118 Call TimeSpan.op_Addition, X0, X1
	119 Move X19, X0
	120 Move X0, X19
	121 Move X20, [X31+144]
	122 Move X19, [X31+152]
	123 Move X22, [X31+128]
	124 Move X21, [X31+136]
	125 Move X30, [X31+112]
	126 Move X23, [X31+120]
	127 Add X31, X31, 160
	128 Return X0
	129 Call 0x1C17F20

Method: System.TimeSpan GetUtcOffsetFromUtc(System.DateTime time, System.TimeZoneInfo zone)

Disassembly:
	0x0330EA74 MOV W5, W31
	0x0330EA78 MOV W6, W31
	0x0330EA7C MOV X7, X31
	0x0330EA80 STR X31, [X31 + 0x20]
	0x0330EA84 BL 0x335F2FC
	0x0330EA88 LDR X8, [X31 + 0x20]
	0x0330EA8C ADD X0, X31, 0x40
	0x0330EA90 MOVN X1, 0x0
	0x0330EA94 MOV X2, X31
	0x0330EA98 STR X8, [X31 + 0x40]
	0x0330EA9C BL 0x335FCCC
	0x0330EAA0 B 0x330EB10
	0x0330EAA4 LDR X23, [X20 + 0x8]
	0x0330EAA8 TBZ X22, 0x0, 0x330EAD4
	0x0330EAAC LDR X0, [X26]
	0x0330EAB0 LDR X22, [X27]
	0x0330EAB4 LDR W8, [X0 + 0xE0]
	0x0330EAB8 CBNZ W8, 0x330EAC0
	0x0330EABC BL 0x1C16DFC
	0x0330EAC0 MOV X0, X22
	0x0330EAC4 MOV X1, X31
	0x0330EAC8 BL 0x3394B5C
	0x0330EACC MOV X22, X0
	0x0330EAD0 B 0x330EAF0
	0x0330EAD4 LDR X0, [X26]
	0x0330EAD8 LDR W8, [X0 + 0xE0]
	0x0330EADC CBNZ W8, 0x330EAE8
	0x0330EAE0 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x10CF000
	007 Move X21, 0xE1A000
	008 Move W8, [X22+2884]
	009 Move X21, [X21+2616]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE1A000
	017 Move X0, [X0+2616]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2884], W8
	021 Move X0, [X21]
	022 Move [X31+12], W31
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Add X2, X31, 12
	028 Move X0, X20
	029 Move X1, X19
	030 Call TimeZoneInfo.GetUtcOffsetFromUtc, X0, X1, X2
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 Return X0

Method: System.TimeSpan GetUtcOffsetFromUtc(System.DateTime time, System.TimeZoneInfo zone, out System.Boolean isDaylightSavings)

Disassembly:
	0x03311304 MOV X2, X31
	0x03311308 BL 0x3362F18
	0x0331130C MOV X22, X0
	0x03311310 LDR X0, [X28]
	0x03311314 LDR W8, [X0 + 0xE0]
	0x03311318 CBNZ W8, 0x3311320
	0x0331131C BL 0x1C16DFC
	0x03311320 LDR X23, [X31 + 0x50]
	0x03311324 ADRP X26, 0xE16000
	0x03311328 ADRP X8, 0xDE3000
	0x0331132C LDR X26, [X26 + 0xA38]
	0x03311330 LDR X8, [X8 + 0x9F0]
	0x03311334 CMP X23, 0x1
	0x03311338 B.LT 0x3311368
	0x0331133C LDR X0, [X8]
	0x03311340 LDR W8, [X0 + 0xE0]
	0x03311344 CBNZ W8, 0x331134C
	0x03311348 BL 0x1C16DFC
	0x0331134C MOV X0, X22
	0x03311350 MOV X1, X23
	0x03311354 MOV X2, X31
	0x03311358 BL 0x3362F18
	0x0331135C STR X0, [X31 + 0x38]
	0x03311360 MOV X0, X22
	0x03311364 B 0x331138C
	0x03311368 LDR X0, [X8]
	0x0331136C STR X24, [X31 + 0x38]
	0x03311370 LDR W8, [X0 + 0xE0]
	0x03311374 CBNZ W8, 0x331137C
	0x03311378 BL 0x1C16DFC
	0x0331137C MOV X0, X24
	0x03311380 MOV X1, X23

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x10CC000
	009 Move X22, 0xE17000
	010 Move W8, [X23+2885]
	011 Move X22, [X22+2616]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xE17000
	020 Move X0, [X0+2616]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+2885], W8
	024 Move X0, [X22]
	025 Move [X31+12], W31
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Add X3, X31, 12
	031 Move X0, X21
	032 Move X1, X20
	033 Move X2, X19
	034 Call TimeZoneInfo.GetUtcOffsetFromUtc, X0, X1, X2, X3
	035 Move X20, [X31+48]
	036 Move X19, [X31+56]
	037 Move X22, [X31+32]
	038 Move X21, [X31+40]
	039 Move X30, [X31+16]
	040 Move X23, [X31+24]
	041 Add X31, X31, 64
	042 Return X0

Method: System.TimeSpan GetUtcOffsetFromUtc(System.DateTime time, System.TimeZoneInfo zone, out System.Boolean isDaylightSavings, out System.Boolean isAmbiguousLocalDst)

Disassembly:
	0x0330B8C0 ADD X3, X31, 0x100
	0x0330B8C4 ADD X4, X31, 0xF8
	0x0330B8C8 ADD X5, X31, 0xF0
	0x0330B8CC ADD X6, X31, 0xE8
	0x0330B8D0 ADD X7, X31, 0xE0
	0x0330B8D4 MOV X0, X20
	0x0330B8D8 STR X8, [X31]
	0x0330B8DC BL 0x330BB64
	0x0330B8E0 TBZ X0, 0x0, 0x330B9F8
	0x0330B8E4 LDR X0, [X23]
	0x0330B8E8 LDR X20, [X31 + 0x108]
	0x0330B8EC LDR W8, [X0 + 0xE0]
	0x0330B8F0 CBNZ W8, 0x330B8F8
	0x0330B8F4 BL 0x1C16DFC
	0x0330B8F8 MOV X0, X20
	0x0330B8FC BL 0x330BD60
	0x0330B900 ANDS W31, W0, 0xFF
	0x0330B904 STP X0, X1, [X31 + 0xC8]
	0x0330B908 B.EQ 0x330B9F8
	0x0330B90C ADRP X25, 0xE1C000
	0x0330B910 LDR X25, [X25 + 0xB90]
	0x0330B914 ADD X0, X31, 0xC8
	0x0330B918 LDR X1, [X25]
	0x0330B91C BL 0x243B37C
	0x0330B920 ADRP X24, 0xDEA000
	0x0330B924 LDR X24, [X24 + 0x570]
	0x0330B928 STR X0, [X31 + 0xC0]
	0x0330B92C LDR X8, [X24]
	0x0330B930 LDR W9, [X8 + 0xE0]
	0x0330B934 CBNZ W9, 0x330B940
	0x0330B938 MOV X0, X8
	0x0330B93C BL 0x1C16DFC
	0x0330B940 ADD X0, X31, 0xC0
	0x0330B944 MOV X1, X31
	0x0330B948 BL 0x33946A4
	0x0330B94C LDR X8, [X23]
	0x0330B950 MOV X20, X0
	0x0330B954 LDR W9, [X8 + 0xE0]
	0x0330B958 CBNZ W9, 0x330B964
	0x0330B95C MOV X0, X8
	0x0330B960 BL 0x1C16DFC
	0x0330B964 MOV X0, X20
	0x0330B968 MOV X1, X21
	0x0330B96C BL 0x330B330
	0x0330B970 LDR X8, [X31 + 0x100]
	0x0330B974 MOV X20, X0
	0x0330B978 MOV X1, X31
	0x0330B97C MOV X0, X8
	0x0330B980 BL 0x32277A8
	0x0330B984 TBZ X0, 0x0, 0x330BA00
	0x0330B988 ADRP X21, 0xDE9000
	0x0330B98C LDR X21, [X21 + 0x9F0]
	0x0330B990 LDR X0, [X21]
	0x0330B994 LDR W8, [X0 + 0xE0]
	0x0330B998 CBNZ W8, 0x330B9A4
	0x0330B99C BL 0x1C16DFC
	0x0330B9A0 LDR X0, [X21]
	0x0330B9A4 LDR X8, [X24]
	0x0330B9A8 LDR X9, [X0 + 0xB8]
	0x0330B9AC LDR W10, [X8 + 0xE0]
	0x0330B9B0 LDR X21, [X9 + 0x18]
	0x0330B9B4 CBNZ W10, 0x330B9C4
	0x0330B9B8 MOV X0, X8
	0x0330B9BC BL 0x1C16DFC
	0x0330B9C0 LDR X8, [X24]
	0x0330B9C4 LDR X8, [X8 + 0xB8]
	0x0330B9C8 ADD X3, X31, 0x28
	0x0330B9CC ADD X4, X31, 0x10
	0x0330B9D0 MOVZ W6, 0x1
	0x0330B9D4 LDR X2, [X8]
	0x0330B9D8 MOV X0, X19
	0x0330B9DC MOV X1, X21
	0x0330B9E0 MOV X5, X20
	0x0330B9E4 STP X31, X31, [X31 + 0x28]
	0x0330B9E8 STR X31, [X31 + 0x38]
	0x0330B9EC STP X31, X31, [X31 + 0x18]
	0x0330B9F0 STR X31, [X31 + 0x10]
	0x0330B9F4 B 0x330BB44
	0x0330B9F8 MOV X0, X31
	0x0330B9FC B 0x330BB48
	0x0330BA00 LDR X0, [X23]
	0x0330BA04 LDR X22, [X31 + 0xF8]
	0x0330BA08 LDR W8, [X0 + 0xE0]
	0x0330BA0C CBNZ W8, 0x330BA14
	0x0330BA10 BL 0x1C16DFC
	0x0330BA14 MOV X0, X22
	0x0330BA18 BL 0x330BD60
	0x0330BA1C ANDS W31, W0, 0xFF
	0x0330BA20 STP X0, X1, [X31 + 0xB0]
	0x0330BA24 B.EQ 0x330BA94
	0x0330BA28 LDR X1, [X25]
	0x0330BA2C ADD X0, X31, 0xB0
	0x0330BA30 BL 0x243B37C
	0x0330BA34 LDR X8, [X24]
	0x0330BA38 STR X0, [X31 + 0xC0]
	0x0330BA3C LDR W9, [X8 + 0xE0]
	0x0330BA40 CBNZ W9, 0x330BA4C
	0x0330BA44 MOV X0, X8
	0x0330BA48 BL 0x1C16DFC
	0x0330BA4C ADD X0, X31, 0xC0
	0x0330BA50 MOV X1, X31
	0x0330BA54 BL 0x33946A4
	0x0330BA58 LDR X8, [X23]
	0x0330BA5C STR X0, [X31 + 0xA8]
	0x0330BA60 MOV X22, X0
	0x0330BA64 LDR W9, [X8 + 0xE0]
	0x0330BA68 CBNZ W9, 0x330BA74
	0x0330BA6C MOV X0, X8
	0x0330BA70 BL 0x1C16DFC
	0x0330BA74 MOV X0, X22
	0x0330BA78 MOV X1, X21
	0x0330BA7C BL 0x330B330
	0x0330BA80 MOV X1, X20
	0x0330BA84 STR X0, [X31 + 0xA8]
	0x0330BA88 BL 0x330B330
	0x0330BA8C STR X0, [X31 + 0xA8]
	0x0330BA90 B 0x330BABC
	0x0330BA94 LDR X0, [X24]
	0x0330BA98 LDR W8, [X0 + 0xE0]
	0x0330BA9C CBNZ W8, 0x330BAA4
	0x0330BAA0 BL 0x1C16DFC
	0x0330BAA4 ADD X0, X31, 0xA8
	0x0330BAA8 MOVZ W1, 0x1
	0x0330BAAC MOV W2, W31
	0x0330BAB0 MOV W3, W31
	0x0330BAB4 MOV X4, X31
	0x0330BAB8 BL 0x3393ED0
	0x0330BABC LDR X0, [X23]
	0x0330BAC0 LDP X22, X21, [X31 + 0xE8]
	0x0330BAC4 LDR W8, [X0 + 0xE0]
	0x0330BAC8 CBNZ W8, 0x330BAD0
	0x0330BACC BL 0x1C16DFC
	0x0330BAD0 ADD X8, X31, 0x90
	0x0330BAD4 MOV X0, X21
	0x0330BAD8 MOV X1, X22
	0x0330BADC BL 0x330BF74
	0x0330BAE0 LDP X1, X0, [X31 + 0xD8]
	0x0330BAE4 ADD X8, X31, 0x78
	0x0330BAE8 BL 0x330BF74
	0x0330BAEC ADRP X21, 0xDE9000
	0x0330BAF0 LDR X21, [X21 + 0x9F0]
	0x0330BAF4 LDR X0, [X21]
	0x0330BAF8 LDR W8, [X0 + 0xE0]
	0x0330BAFC CBNZ W8, 0x330BB08
	0x0330BB00 BL 0x1C16DFC
	0x0330BB04 LDR X0, [X21]
	0x0330BB08 LDR X8, [X0 + 0xB8]
	0x0330BB0C LDP X9, X2, [X31 + 0xA0]
	0x0330BB10 LDR V0, [X31 + 0x9]
	0x0330BB14 LDUR V1, [X31 + 0x78]
	0x0330BB18 LDR X10, [X31 + 0x88]
	0x0330BB1C LDR X1, [X8 + 0x18]
	0x0330BB20 STR V0, [X31 + 0x6]
	0x0330BB24 STR X9, [X31 + 0x70]
	0x0330BB28 STR V1, [X31 + 0x4]
	0x0330BB2C STR X10, [X31 + 0x50]
	0x0330BB30 ADD X3, X31, 0x60
	0x0330BB34 ADD X4, X31, 0x40
	0x0330BB38 MOV X0, X19
	0x0330BB3C MOV X5, X20
	0x0330BB40 MOV W6, W31
	0x0330BB44 BL 0x330B420
	0x0330BB48 LDP X20, X19, [X31 + 0x150]
	0x0330BB4C LDP X22, X21, [X31 + 0x140]
	0x0330BB50 LDP X24, X23, [X31 + 0x130]
	0x0330BB54 LDP X30, X25, [X31 + 0x120]
	0x0330BB58 LDR X29, [X31 + 0x110]
	0x0330BB5C ADD X31, X31, 0x160
	0x0330BB60 RET
	0x0330BB64 SUB X31, X31, 0x70
	0x0330BB68 STP X29, X30, [X31 + 0x10]
	0x0330BB6C STP X28, X27, [X31 + 0x20]
	0x0330BB70 STP X26, X25, [X31 + 0x30]
	0x0330BB74 STP X24, X23, [X31 + 0x40]
	0x0330BB78 STP X22, X21, [X31 + 0x50]
	0x0330BB7C STP X20, X19, [X31 + 0x60]
	0x0330BB80 ADRP X29, 0x10D1000
	0x0330BB84 ADRP X28, 0xE1C000
	0x0330BB88 LDRB W8, [X29 + 0xB18]
	0x0330BB8C LDR X23, [X31 + 0x70]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X19, 0x10D2000
	014 Move W8, [X19+2886]
	015 Move X21, X3
	016 Move X20, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0xDEA000
	024 Move X0, [X0+2544]
	025 Call 0x1C17CF4
	026 Move X0, 0xDEB000
	027 Move X0, [X0+1392]
	028 Call 0x1C17CF4
	029 Move X0, 0xE1D000
	030 Move X0, [X0+2616]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X19+2886], W8
	034 Move [X31+24], X31
	035 Move [X31+8], X31
	036 Move [X20], W31
	037 Move [X21], W31
	038 Compare X22, 0
	039 JumpIfEqual {217}
	040 Move X27, 0xE1D000
	041 Move X27, [X27+2616]
	042 Move X25, 0xDEA000
	043 Move X19, [X22+48]
	044 Move X0, [X27]
	045 Move W8, [X0+224]
	046 Move X25, [X25+2544]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X27]
	051 Move X8, [X25]
	052 Move X9, [X0+184]
	053 Move W10, [X8+224]
	054 Move X24, [X9+16]
	055 Compare W10, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Move X0, X23
	060 Move X1, X24
	061 Move X2, X31
	062 Call DateTime.op_GreaterThan, X0, X1
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {83}
	067 Move X0, [X25]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {73}
	071 Call 0x1C17DFC
	072 Move X0, [X25]
	073 Move X8, [X0+184]
	074 Add X3, X31, 24
	075 Move X0, X22
	076 Move W2, W31
	077 Move X1, [X8+24]
	078 Call TimeZoneInfo.GetAdjustmentRuleForTime, X0, X1, X2, X3
	079 Move X24, X0
	080 Move W25, 0x270F
	081 Compare X24, 0
	082 JumpIfNotEqual {144}
	083 Move X0, [X27]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {89}
	087 Call 0x1C17DFC
	088 Move X0, [X27]
	089 Move X8, [X25]
	090 Move X9, [X0+184]
	091 Move W10, [X8+224]
	092 Move X24, [X9+24]
	093 Compare W10, 0
	094 JumpIfNotEqual {97}
	095 Move X0, X8
	096 Call 0x1C17DFC
	097 Move X0, X23
	098 Move X1, X24
	099 Move X2, X31
	100 Call DateTime.op_LessThan, X0, X1
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {121}
	105 Move X0, [X25]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {111}
	109 Call 0x1C17DFC
	110 Move X0, [X25]
	111 Move X8, [X0+184]
	112 Add X3, X31, 24
	113 Move X0, X22
	114 Move W2, W31
	115 Move X1, [X8+16]
	116 Call TimeZoneInfo.GetAdjustmentRuleForTime, X0, X1, X2, X3
	117 Move X24, X0
	118 Move W25, 1
	119 Compare X24, 0
	120 JumpIfNotEqual {144}
	121 Add X3, X31, 24
	122 Move W2, 1
	123 Move X0, X22
	124 Move X1, X23
	125 Call TimeZoneInfo.GetAdjustmentRuleForTime, X0, X1, X2, X3
	126 Move X8, [X25]
	127 Move X24, X0
	128 Move W9, [X8+224]
	129 Compare W9, 0
	130 JumpIfNotEqual {133}
	131 Move X0, X8
	132 Call 0x1C17DFC
	133 Move X0, X23
	134 Move X1, X19
	135 Move X2, X31
	136 Call DateTime.op_Addition, X0, X1
	137 Move [X31+8], X0
	138 Add X0, X31, 8
	139 Move X1, X31
	140 Call DateTime.get_Year, X0
	141 Move W25, W0
	142 Compare X24, 0
	143 JumpIfEqual {203}
	144 Move X28, 0xDEB000
	145 Move X28, [X28+1392]
	146 Move X26, [X24+88]
	147 Move X0, [X28]
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {152}
	151 Call 0x1C17DFC
	152 Move X0, X19
	153 Move X1, X26
	154 Move X2, X31
	155 Call TimeSpan.op_Addition, X0, X1
	156 Move X19, X0
	157 Move X0, X24
	158 Call AdjustmentRule.get_HasDaylightSaving, X0
	159 Move TEMP, X0
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfNotEqual {203}
	163 Move X0, [X27]
	164 Move X27, [X22+48]
	165 Move X26, [X31+24]
	166 Move W8, [X0+224]
	167 Compare W8, 0
	168 JumpIfNotEqual {170}
	169 Call 0x1C17DFC
	170 Move X0, X23
	171 Move W1, W25
	172 Move X2, X27
	173 Move X3, X24
	174 Move X4, X26
	175 Move X5, X21
	176 Move X6, X22
	177 Call TimeZoneInfo.GetIsDaylightSavingsFromUtc, X0, X1, X2, X3, X4, X5, X6
	178 And W8, W0, 1
	179 Move [X20], W8
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfNotEqual {186}
	184 Move X0, [X28]
	185 Add X8, X24, 32
	186 Move X0, [X28]
	187 Move W8, [X0+224]
	188 Compare W8, 0
	189 JumpIfNotEqual {192}
	190 Call 0x1C17DFC
	191 Move X0, [X28]
	192 Move X8, [X0+184]
	193 Move W9, [X0+224]
	194 Move X20, [X8]
	195 Compare W9, 0
	196 JumpIfNotEqual {198}
	197 Call 0x1C17DFC
	198 Move X0, X19
	199 Move X1, X20
	200 Move X2, X31
	201 Call TimeSpan.op_Addition, X0, X1
	202 Move X19, X0
	203 Move X0, X19
	204 Move X20, [X31+96]
	205 Move X19, [X31+104]
	206 Move X22, [X31+80]
	207 Move X21, [X31+88]
	208 Move X24, [X31+64]
	209 Move X23, [X31+72]
	210 Move X26, [X31+48]
	211 Move X25, [X31+56]
	212 Move X28, [X31+32]
	213 Move X27, [X31+40]
	214 Move X30, [X31+16]
	215 Add X31, X31, 112
	216 Return X0
	217 Call 0x1C17F20

Method: System.DateTime TransitionTimeToDateTime(System.Int32 year, System.TimeZoneInfo/TransitionTime transitionTime)

Disassembly:
	0x03311384 MOV X2, X31
	0x03311388 BL 0x3362F18
	0x0331138C LDR X8, [X26]
	0x03311390 STR X0, [X31 + 0x30]
	0x03311394 LDR W9, [X8 + 0xE0]
	0x03311398 CBNZ W9, 0x33113A4
	0x0331139C MOV X0, X8
	0x033113A0 BL 0x1C16DFC
	0x033113A4 MOV X0, X24
	0x033113A8 MOV X1, X20
	0x033113AC MOV X2, X22
	0x033113B0 MOV W3, W25
	0x033113B4 MOV X4, X21
	0x033113B8 BL 0x3310880
	0x033113BC TBZ X0, 0x0, 0x3311424
	0x033113C0 ADRP X22, 0xDE3000
	0x033113C4 LDR X22, [X22 + 0x9F0]
	0x033113C8 LDR X21, [X31 + 0x38]
	0x033113CC LDR X0, [X22]
	0x033113D0 LDR W8, [X0 + 0xE0]
	0x033113D4 CBNZ W8, 0x33113DC
	0x033113D8 BL 0x1C16DFC
	0x033113DC MOV X0, X20
	0x033113E0 MOV X1, X21
	0x033113E4 MOV X2, X31
	0x033113E8 BL 0x336328C
	0x033113EC TBZ X0, 0x0, 0x331142C
	0x033113F0 LDR X0, [X22]
	0x033113F4 LDR X21, [X31 + 0x30]
	0x033113F8 LDR W8, [X0 + 0xE0]
	0x033113FC CBNZ W8, 0x3311404
	0x03311400 BL 0x1C16DFC
	0x03311404 MOV X0, X20
	0x03311408 MOV X1, X21
	0x0331140C MOV X2, X31
	0x03311410 BL 0x3363148
	0x03311414 AND W8, W0, 0x1
	0x03311418 STRB W8, [X19]
	0x0331141C TBZ X0, 0x0, 0x3311430
	0x03311420 B 0x3311660
	0x03311424 MOV W8, W31
	0x03311428 B 0x3311664
	0x0331142C STRB W31, [X19]
	0x03311430 LDR X0, [X22]
	0x03311434 LDR W8, [X0 + 0xE0]
	0x03311438 CBNZ W8, 0x3311440
	0x0331143C BL 0x1C16DFC
	0x03311440 ADD X0, X31, 0x38
	0x03311444 MOV X1, X31
	0x03311448 BL 0x3361868
	0x0331144C MOV W21, W0
	0x03311450 ADD X0, X31, 0x30
	0x03311454 MOV X1, X31
	0x03311458 BL 0x3361868
	0x0331145C CMP W21, W0
	0x03311460 B.EQ 0x3311660
	0x03311464 LDR X0, [X22]
	0x03311468 LDR W8, [X0 + 0xE0]
	0x0331146C CBNZ W8, 0x3311474
	0x03311470 BL 0x1C16DFC
	0x03311474 ADD X0, X31, 0x38
	0x03311478 MOVZ W1, 0x1
	0x0331147C MOV X2, X31
	0x03311480 BL 0x3360604
	0x03311484 ADD X0, X31, 0x30
	0x03311488 MOVZ W1, 0x1
	0x0331148C MOV X2, X31
	0x03311490 BL 0x3360604
	0x03311494 LDR X1, [X31 + 0x38]
	0x03311498 MOV X0, X20
	0x0331149C MOV X2, X31
	0x033114A0 BL 0x336328C
	0x033114A4 TBZ X0, 0x0, 0x3311588
	0x033114A8 LDR X0, [X22]
	0x033114AC LDR X21, [X31 + 0x30]
	0x033114B0 LDR W8, [X0 + 0xE0]
	0x033114B4 CBNZ W8, 0x33114BC
	0x033114B8 BL 0x1C16DFC
	0x033114BC MOV X0, X20
	0x033114C0 MOV X1, X21
	0x033114C4 MOV X2, X31
	0x033114C8 BL 0x3363148
	0x033114CC AND W8, W0, 0x1
	0x033114D0 B 0x331158C
	0x033114D4 LDR X0, [X26]
	0x033114D8 LDR W8, [X0 + 0xE0]
	0x033114DC CBNZ W8, 0x33114E4
	0x033114E0 BL 0x1C16DFC
	0x033114E4 ADD X0, X31, 0x40
	0x033114E8 MOV X1, X31
	0x033114EC BL 0x3361868
	0x033114F0 MOV W1, W0
	0x033114F4 ADD X0, X31, 0x0
	0x033114F8 MOVZ W2, 0x1
	0x033114FC MOVZ W3, 0x1
	0x03311500 MOV W4, W31
	0x03311504 MOV W5, W31
	0x03311508 MOV W6, W31
	0x0331150C MOV X7, X31
	0x03311510 STR X31, [X31]
	0x03311514 BL 0x335F2FC
	0x03311518 LDR X0, [X31]
	0x0331151C B 0x33111A4
	0x03311520 LDR X0, [X29]
	0x03311524 ADRP X28, 0xDE4000
	0x03311528 LDR W8, [X0 + 0xE0]
	0x0331152C LDR X28, [X28 + 0x570]
	0x03311530 CBNZ W8, 0x3311538
	0x03311534 BL 0x1C16DFC
	0x03311538 MOV X0, X27
	0x0331153C MOV X1, X31
	0x03311540 BL 0x3361868
	0x03311544 ADD W1, W0, 0x1
	0x03311548 ADD X0, X31, 0x0
	0x0331154C MOVZ W2, 0x1
	0x03311550 MOVZ W3, 0x1
	0x03311554 MOV W4, W31
	0x03311558 MOV W5, W31
	0x0331155C MOV W6, W31
	0x03311560 MOV X7, X31
	0x03311564 STR X31, [X31]
	0x03311568 BL 0x335F2FC
	0x0331156C LDR X8, [X31]
	0x03311570 ADD X0, X31, 0x18
	0x03311574 MOVN X1, 0x0
	0x03311578 MOV X2, X31
	0x0331157C STR X8, [X31 + 0x18]
	0x03311580 BL 0x335FCCC
	0x03311584 B 0x3311300
	0x03311588 MOV W8, W31
	0x0331158C STRB W8, [X19]
	0x03311590 CBNZ W8, 0x3311660
	0x03311594 LDR X0, [X22]
	0x03311598 LDR W8, [X0 + 0xE0]
	0x0331159C CBNZ W8, 0x33115A4
	0x033115A0 BL 0x1C16DFC
	0x033115A4 ADD X0, X31, 0x38
	0x033115A8 MOVN W1, 0x0
	0x033115AC MOV X2, X31
	0x033115B0 BL 0x3360604
	0x033115B4 ADD X0, X31, 0x30
	0x033115B8 MOVN W1, 0x0
	0x033115BC MOV X2, X31
	0x033115C0 BL 0x3360604
	0x033115C4 LDR X1, [X31 + 0x38]
	0x033115C8 MOV X0, X20
	0x033115CC MOV X2, X31
	0x033115D0 BL 0x336328C
	0x033115D4 TBZ X0, 0x0, 0x3311658
	0x033115D8 LDR X0, [X22]
	0x033115DC LDR X21, [X31 + 0x30]
	0x033115E0 LDR W8, [X0 + 0xE0]
	0x033115E4 CBNZ W8, 0x33115EC
	0x033115E8 BL 0x1C16DFC
	0x033115EC MOV X0, X20
	0x033115F0 MOV X1, X21
	0x033115F4 MOV X2, X31
	0x033115F8 BL 0x3363148
	0x033115FC AND W8, W0, 0x1
	0x03311600 B 0x331165C
	0x03311604 LDR X3, [X31 + 0x20]
	0x03311608 ADD W1, W0, 0x1
	0x0331160C ADD X8, X31, 0x0
	0x03311610 MOV X0, X23
	0x03311614 MOV X2, X28
	0x03311618 BL 0x330E314
	0x0331161C LDR X0, [X31 + 0x8]
	0x03311620 MOV X1, X22
	0x03311624 MOV X2, X31
	0x03311628 BL 0x3362F18
	0x0331162C LDR X1, [X28 + 0x58]
	0x03311630 MOV X2, X31
	0x03311634 BL 0x3362F18
	0x03311638 LDR X1, [X28 + 0x20]
	0x0331163C MOV X2, X31
	0x03311640 BL 0x3362F18
	0x03311644 ADRP X28, 0xDE4000
	0x03311648 LDR X28, [X28 + 0x570]
	0x0331164C MOV X22, X0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X21, 0x10CC000
	012 Move W8, [X21+2887]
	013 Move X20, X1
	014 Move W19, W0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xDE4000
	020 Move X0, [X0+2544]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2887], W8
	024 Move [X31+24], X31
	025 Move X8, [X20]
	026 Move X26, 0xDE4000
	027 Move [X31+8], X8
	028 Move W8, [X20+16]
	029 Move X26, [X26+2544]
	030 Compare W8, 0
	031 JumpIfEqual {77}
	032 Move X0, [X26]
	033 Move W21, [X20+8]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move W0, W19
	039 Move W1, W21
	040 Move X2, X31
	041 Call DateTime.DaysInMonth, X0, X1
	042 Move X8, [X26]
	043 Move W9, [X20+10]
	044 Move W20, [X20+8]
	045 Move W10, [X8+224]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CSEL not yet implemented."
	048 Compare W10, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Add X0, X31, 8
	053 Move X1, X31
	054 Call DateTime.get_Hour, X0
	055 Move W22, W0
	056 Add X0, X31, 8
	057 Move X1, X31
	058 Call DateTime.get_Minute, X0
	059 Move W23, W0
	060 Add X0, X31, 8
	061 Move X1, X31
	062 Call DateTime.get_Second, X0
	063 Move W24, W0
	064 Add X0, X31, 8
	065 Move X1, X31
	066 Call DateTime.get_Millisecond, X0
	067 Move W7, W0
	068 Add X0, X31, 24
	069 Move W1, W19
	070 Move W2, W20
	071 Move W3, W21
	072 Move W4, W22
	073 Move W5, W23
	074 Move W6, W24
	075 Move [X31], X31
	076 Call DateTime..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	077 Move X0, [X26]
	078 Move W22, [X20+9]
	079 Move W21, [X20+8]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move W0, W19
	086 Move W1, W21
	087 Move X2, X31
	088 Call DateTime.DaysInMonth, X0, X1
	089 Move W21, [X20+8]
	090 Move W22, W0
	091 Add X0, X31, 8
	092 Move X1, X31
	093 Call DateTime.get_Hour, X0
	094 Move W23, W0
	095 Add X0, X31, 8
	096 Move X1, X31
	097 Call DateTime.get_Minute, X0
	098 Move W24, W0
	099 Add X0, X31, 8
	100 Move X1, X31
	101 Call DateTime.get_Second, X0
	102 Move W25, W0
	103 Add X0, X31, 8
	104 Move X1, X31
	105 Call DateTime.get_Millisecond, X0
	106 Move W7, W0
	107 Add X0, X31, 24
	108 Move W1, W19
	109 Move W2, W21
	110 Move W3, W22
	111 Move W4, W23
	112 Move W5, W24
	113 Move W6, W25
	114 Move [X31], X31
	115 Call DateTime..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	116 Add X0, X31, 24
	117 Move X1, X31
	118 Call DateTime.get_DayOfWeek, X0
	119 Move W8, [X20+12]
	120 Subtract W8, W0, W8
	121 Add W9, W8, 7
	122 NotImplemented "Instruction CMP not yet implemented."
	123 NotImplemented "Instruction CSEL not yet implemented."
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X0, [X26]
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {130}
	129 Call 0x1C17DFC
	130 Subtract W8, W31, W19
	131 NotImplemented "Instruction SCVTF not yet implemented."
	132 Add X0, X31, 8
	133 Move X1, X31
	134 Call DateTime.get_Hour, X0
	135 Move W22, W0
	136 Add X0, X31, 8
	137 Move X1, X31
	138 Call DateTime.get_Minute, X0
	139 Move W23, W0
	140 Add X0, X31, 8
	141 Move X1, X31
	142 Call DateTime.get_Second, X0
	143 Move W24, W0
	144 Add X0, X31, 8
	145 Move X1, X31
	146 Call DateTime.get_Millisecond, X0
	147 Move W7, W0
	148 Add X0, X31, 24
	149 Move W3, 1
	150 Move W1, W19
	151 Move W2, W21
	152 Move W4, W22
	153 Move W5, W23
	154 Move W6, W24
	155 Move [X31], X31
	156 Call DateTime..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	157 Add X0, X31, 24
	158 Move X1, X31
	159 Call DateTime.get_DayOfWeek, X0
	160 Move W8, [X20+12]
	161 Move W9, [X20+9]
	162 Subtract W8, W8, W0
	163 Move W10, W9
	164 ShiftRight W10, 29
	165 And W10, W10, 0xFFFFFFF
	166 Add W11, W8, 7
	167 NotImplemented "Instruction CMP not yet implemented."
	168 NotImplemented "Instruction CSEL not yet implemented."
	169 Subtract W9, W10, W9
	170 Add W8, W9, W8
	171 Subtract W19, W8, 7
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X0, [X26]
	174 Move W8, [X0+224]
	175 Compare W8, 0
	176 JumpIfNotEqual {178}
	177 Call 0x1C17DFC
	178 NotImplemented "Instruction SCVTF not yet implemented."
	179 Add X0, X31, 24
	180 Move X1, X31
	181 Call DateTime.AddDays, X0, V0
	182 Move [X31+24], X0
	183 Move X30, [X31+16]
	184 Move X0, [X31+24]
	185 Move X20, [X31+80]
	186 Move X19, [X31+88]
	187 Move X22, [X31+64]
	188 Move X21, [X31+72]
	189 Move X24, [X31+48]
	190 Move X23, [X31+56]
	191 Move X26, [X31+32]
	192 Move X25, [X31+40]
	193 Add X31, X31, 96
	194 Return X0

Method: System.Void ValidateTimeZoneInfo(System.String id, System.TimeSpan baseUtcOffset, System.TimeZoneInfo/AdjustmentRule[] adjustmentRules, out System.Boolean adjustmentRulesSupportDst)

Disassembly:
	0x03309864 ADRP X20, 0xE15000
	0x03309868 LDR W8, [X0 + 0xE0]
	0x0330986C LDR X20, [X20 + 0xD68]
	0x03309870 CBNZ W8, 0x3309878
	0x03309874 BL 0x1C16DFC
	0x03309878 MOV X0, X31
	0x0330987C BL 0x32099F4
	0x03309880 LDR X8, [X20]
	0x03309884 ADD X9, X31, 0xA8
	0x03309888 STR X31, [X31 + 0xA8]
	0x0330988C STP X31, X9, [X31 + 0x10]
	0x03309890 LDR W9, [X8 + 0xE0]
	0x03309894 MOV W20, W0
	0x03309898 CBNZ W9, 0x33098A4
	0x0330989C MOV X0, X8
	0x033098A0 BL 0x1C16DFC
	0x033098A4 ADRP X8, 0xE15000
	0x033098A8 LDR X8, [X8 + 0xD50]
	0x033098AC LDR X22, [X8]
	0x033098B0 LDR X0, [X22 + 0x20]
	0x033098B4 LDRB W8, [X0 + 0x135]
	0x033098B8 TBNZ X8, 0x0, 0x33098C0
	0x033098BC BL 0x1C5C684
	0x033098C0 LDR X8, [X0 + 0xC0]
	0x033098C4 LDR X0, [X8 + 0x8]
	0x033098C8 LDRB W8, [X0 + 0x135]
	0x033098CC TBNZ X8, 0x0, 0x33098D4
	0x033098D0 BL 0x1C5C684
	0x033098D4 LDR W8, [X0 + 0xE0]
	0x033098D8 CBNZ W8, 0x33098E0
	0x033098DC BL 0x1C16DFC
	0x033098E0 LDR X0, [X22 + 0x20]
	0x033098E4 LDRB W8, [X0 + 0x135]
	0x033098E8 TBNZ X8, 0x0, 0x33098F0
	0x033098EC BL 0x1C5C684
	0x033098F0 LDR X8, [X0 + 0xC0]
	0x033098F4 LDR X0, [X8 + 0x8]
	0x033098F8 LDRB W8, [X0 + 0x135]
	0x033098FC TBNZ X8, 0x0, 0x3309904
	0x03309900 BL 0x1C5C684
	0x03309904 LDR X8, [X0 + 0xB8]
	0x03309908 LDR X0, [X8]
	0x0330990C CBZ X0, 0x3309C64
	0x03309910 LDR X8, [X0]
	0x03309914 LDP X9, X2, [X8 + 0x178]
	0x03309918 MOV W1, W20
	0x0330991C BLR X9
	0x03309920 STR X0, [X31 + 0xA8]
	0x03309924 CBZ X0, 0x330993C
	0x03309928 LDR W8, [X0 + 0x18]
	0x0330992C ADD X9, X0, 0x20
	0x03309930 CMP W8, 0x0
	0x03309934 CSEL X22, X31, X9, EQ
	0x03309938 B 0x3309940
	0x0330993C MOV X22, X31
	0x03309940 ADRP X27, 0xE1E000
	0x03309944 ADRP X29, 0xE12000
	0x03309948 ADRP X28, 0xE1E000
	0x0330994C LDR X27, [X27 + 0xA38]
	0x03309950 LDR X29, [X29 + 0xB58]
	0x03309954 LDR X28, [X28 + 0xAF8]
	0x03309958 MOV X23, X31
	0x0330995C LDR X0, [X26]
	0x03309960 LDR W8, [X0 + 0xE0]
	0x03309964 CBNZ W8, 0x330996C
	0x03309968 BL 0x1C16DFC
	0x0330996C MOV X0, X21
	0x03309970 MOV X1, X31
	0x03309974 BL 0x32099C0
	0x03309978 MOV X24, X0
	0x0330997C MOV X1, X31
	0x03309980 MOV X2, X31
	0x03309984 BL 0x33BE5B0
	0x03309988 TBNZ X0, 0x0, 0x3309C10
	0x0330998C LDR X0, [X26]
	0x03309990 LDR W8, [X0 + 0xE0]
	0x03309994 CBNZ W8, 0x330999C
	0x03309998 BL 0x1C16DFC
	0x0330999C ADD X3, X31, 0x98
	0x033099A0 MOV X0, X24
	0x033099A4 MOV X1, X22
	0x033099A8 MOV W2, W20
	0x033099AC MOV X4, X31
	0x033099B0 BL 0x32099F8
	0x033099B4 CBNZ W0, 0x3309AD8
	0x033099B8 LDR X0, [X27]
	0x033099BC LDR W8, [X0 + 0xE0]
	0x033099C0 CBNZ W8, 0x33099C8
	0x033099C4 BL 0x1C16DFC
	0x033099C8 ADD X0, X31, 0x98
	0x033099CC MOV X1, X21
	0x033099D0 BL 0x3309624
	0x033099D4 MOV X25, X0
	0x033099D8 CBZ X0, 0x330998C
	0x033099DC LDR W8, [X31 + 0xA4]
	0x033099E0 CBZ W8, 0x33099F8
	0x033099E4 CMP W8, 0xA
	0x033099E8 B.EQ 0x33099F8
	0x033099EC CMP W8, 0x4
	0x033099F0 B.NE 0x3309A2C
	0x033099F4 B 0x3309A4C
	0x033099F8 LDR X0, [X26]
	0x033099FC LDR W8, [X0 + 0xE0]
	0x03309A00 CBNZ W8, 0x3309A08
	0x03309A04 BL 0x1C16DFC
	0x03309A08 ADD X1, X31, 0x20
	0x03309A0C MOV X0, X25
	0x03309A10 MOV X2, X31
	0x03309A14 BL 0x3209C7C
	0x03309A18 TBNZ X0, 0x1F, 0x3309A2C
	0x03309A1C LDR W8, [X31 + 0x24]
	0x03309A20 AND W8, W8, 0xF000
	0x03309A24 CMP W8, 0x4000
	0x03309A28 B.EQ 0x3309A4C
	0x03309A2C CBZ X19, 0x3309B64
	0x03309A30 LDR X0, [X19 + 0x40]
	0x03309A34 LDR X8, [X19 + 0x18]
	0x03309A38 LDR X2, [X19 + 0x28]
	0x03309A3C MOV X1, X25
	0x03309A40 BLR X8
	0x03309A44 TBZ X0, 0x0, 0x330998C
	0x03309A48 B 0x3309AE4
	0x03309A4C CBNZ X23, 0x3309A78
	0x03309A50 ADRP X8, 0xDEB000
	0x03309A54 LDR X8, [X8 + 0x1D0]
	0x03309A58 LDR X0, [X8]
	0x03309A5C BL 0x1C16F10
	0x03309A60 ADRP X8, 0xDEB000
	0x03309A64 LDR X8, [X8 + 0x1C0]
	0x03309A68 MOV X23, X0
	0x03309A6C LDR X1, [X8]
	0x03309A70 BL 0x301B7C4
	0x03309A74 CBZ X23, 0x3309B74
	0x03309A78 ADRP X9, 0xDEB000
	0x03309A7C LDR W10, [X23 + 0x1C]
	0x03309A80 LDR X8, [X23 + 0x10]
	0x03309A84 LDR X9, [X9 + 0x1B8]
	0x03309A88 ADD W10, W10, 0x1
	0x03309A8C LDR X9, [X9]
	0x03309A90 STR W10, [X23 + 0x1C]
	0x03309A94 CBZ X8, 0x3309B6C
	0x03309A98 LDRSW X10, [X23 + 0x18]
	0x03309A9C LDR W11, [X8 + 0x18]
	0x03309AA0 CMP W10, W11
	0x03309AA4 B.CS 0x3309ABC
	0x03309AA8 ADD W9, W10, 0x1
	0x03309AAC ADD X8, X8, X10, 0x3, LSL
	0x03309AB0 STR W9, [X23 + 0x18]
	0x03309AB4 STR X25, [X8 + 0x20]
	0x03309AB8 B 0x330998C
	0x03309ABC LDR X8, [X9 + 0x20]
	0x03309AC0 LDR X8, [X8 + 0xC0]
	0x03309AC4 LDR X2, [X8 + 0x70]
	0x03309AC8 MOV X0, X23
	0x03309ACC MOV X1, X25
	0x03309AD0 BL 0x301BF90
	0x03309AD4 B 0x330998C
	0x03309AD8 MOV X25, X31
	0x03309ADC MOVZ W21, 0x12
	0x03309AE0 B 0x3309AEC
	0x03309AE4 MOV X25, X31
	0x03309AE8 MOVZ W21, 0x11
	0x03309AEC MOV X0, X24
	0x03309AF0 MOV X1, X31
	0x03309AF4 MOV X2, X31
	0x03309AF8 BL 0x33C5D2C
	0x03309AFC TBZ X0, 0x0, 0x3309B1C
	0x03309B00 LDR X0, [X26]
	0x03309B04 LDR W8, [X0 + 0xE0]
	0x03309B08 CBNZ W8, 0x3309B10
	0x03309B0C BL 0x1C16DFC
	0x03309B10 MOV X0, X24
	0x03309B14 MOV X1, X31
	0x03309B18 BL 0x32099FC
	0x03309B1C CBNZ X25, 0x3309C5C
	0x03309B20 CMP W21, 0x12
	0x03309B24 B.EQ 0x3309B2C
	0x03309B28 CBNZ W21, 0x3309CF8
	0x03309B2C CBZ X23, 0x3309CF8
	0x03309B30 LDR W8, [X23 + 0x18]
	0x03309B34 CBZ W8, 0x3309CF8
	0x03309B38 LDR X2, [X29]
	0x03309B3C SUB W1, W8, 0x1
	0x03309B40 MOV X0, X23
	0x03309B44 BL 0x301BCCC
	0x03309B48 LDR W8, [X23 + 0x18]
	0x03309B4C LDR X2, [X28]
	0x03309B50 MOV X21, X0
	0x03309B54 SUB W1, W8, 0x1
	0x03309B58 MOV X0, X23
	0x03309B5C BL 0x301DA48
	0x03309B60 B 0x330995C
	0x03309B64 BL 0x1C16F20
	0x03309B68 B 0x3309C68
	0x03309B6C BL 0x1C16F20
	0x03309B70 B 0x3309C68
	0x03309B74 BL 0x1C16F20
	0x03309B78 B 0x3309C68
	0x03309B7C B 0x3309BAC
	0x03309B80 MOV X21, X1
	0x03309B84 MOV X23, X31
	0x03309B88 B 0x3309BB0
	0x03309B8C B 0x3309BAC
	0x03309B90 B 0x3309BAC
	0x03309B94 B 0x3309BAC
	0x03309B98 B 0x3309BAC
	0x03309B9C B 0x3309BAC
	0x03309BA0 B 0x3309BAC
	0x03309BA4 B 0x3309BAC
	0x03309BA8 B 0x3309BAC

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X23, 0x10D4000
	012 Move W8, [X23+2888]
	013 Move X21, X3
	014 Move X19, X2
	015 Move X20, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xDEC000
	022 Move X0, [X0+2544]
	023 Call 0x1C17CF4
	024 Move X0, 0xDED000
	025 Move X0, [X0+1392]
	026 Call 0x1C17CF4
	027 Move X0, 0xE1F000
	028 Move X0, [X0+2616]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X23+2888], W8
	032 Compare X22, 0
	033 JumpIfEqual {166}
	034 Move W8, [X22+16]
	035 Compare W8, 0
	036 JumpIfEqual {177}
	037 Move X24, 0xE1F000
	038 Move X24, [X24+2616]
	039 Move X0, [X24]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X20
	045 Call TimeZoneInfo.UtcOffsetOutOfRange, X0
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {202}
	050 Move X8, 0xDED000
	051 Move X8, [X8+1392]
	052 Move X0, [X8]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X8, 0x5A0B
	058 NotImplemented "Instruction MOVK not yet implemented."
	059 Move X9, 4096
	060 NotImplemented "Instruction MOVK not yet implemented."
	061 NotImplemented "Instruction MOVK not yet implemented."
	062 NotImplemented "Instruction MOVK not yet implemented."
	063 NotImplemented "Instruction MOVK not yet implemented."
	064 NotImplemented "Instruction MADD not yet implemented."
	065 Move X9, 0xF611
	066 NotImplemented "Instruction MOVK not yet implemented."
	067 NotImplemented "Instruction EXTR not yet implemented."
	068 NotImplemented "Instruction MOVK not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move [X21], W31
	071 Compare X19, 0
	072 JumpIfEqual {122}
	073 Move X8, [X19+24]
	074 Compare X8, 0
	075 JumpIfEqual {122}
	076 Move W8, 1
	077 Move [X21], W8
	078 Move W8, [X19+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X27, 0xDEC000
	081 Move X27, [X27+2544]
	082 Move X25, X31
	083 Move X23, X31
	084 Add X26, X19, 32
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X21, [X26]
	087 Compare X21, 0
	088 JumpIfEqual {134}
	089 Move X0, [X24]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move X0, X20
	095 Move X1, X21
	096 Call TimeZoneInfo.IsValidAdjustmentRuleOffest, X0, X1
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {141}
	101 Compare X23, 0
	102 JumpIfEqual {118}
	103 Move X0, [X27]
	104 Move X22, [X21+16]
	105 Move X23, [X23+24]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move X0, X22
	111 Move X1, X23
	112 Move X2, X31
	113 Call DateTime.op_LessThanOrEqual, X0, X1
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfEqual {148}
	118 Move W8, [X19+24]
	119 Add X25, X25, 1
	120 Move X23, X21
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X20, [X31+64]
	123 Move X19, [X31+72]
	124 Move X22, [X31+48]
	125 Move X21, [X31+56]
	126 Move X24, [X31+32]
	127 Move X23, [X31+40]
	128 Move X26, [X31+16]
	129 Move X25, [X31+24]
	130 Move X30, [X31+80]
	131 Move X27, [X31+88]
	132 Return 
	133 Call 0x1C17F28
	134 Move X0, 0xE1F000
	135 Move X0, [X0+2664]
	136 Call 0x1C17D08
	137 Call 0x1C17F10
	138 Move X19, X0
	139 Move X0, 0xE1F000
	140 Move X0, [X0+2672]
	141 Move X0, 0xE1F000
	142 Move X0, [X0+2664]
	143 Call 0x1C17D08
	144 Call 0x1C17F10
	145 Move X19, X0
	146 Move X0, 0xE1F000
	147 Move X0, [X0+2680]
	148 Move X0, 0xE1F000
	149 Move X0, [X0+2664]
	150 Call 0x1C17D08
	151 Call 0x1C17F10
	152 Move X19, X0
	153 Move X0, 0xE1F000
	154 Move X0, [X0+2688]
	155 Call 0x1C17D08
	156 Move X1, X0
	157 Move X0, X19
	158 Move X2, X31
	159 Call InvalidTimeZoneException..ctor, X0, X1
	160 Move X0, 0xE1F000
	161 Move X0, [X0+2696]
	162 Call 0x1C17D08
	163 Move X1, X0
	164 Move X0, X19
	165 Call 0x1C17DEC
	166 Move X0, 0xDF0000
	167 Move X0, [X0+1320]
	168 Call 0x1C17D08
	169 Call 0x1C17F10
	170 Move X19, X0
	171 Move X0, 0xDED000
	172 Move X0, [X0+3088]
	173 Call 0x1C17D08
	174 Move X1, X0
	175 Move X0, X19
	176 Call ArgumentNullException..ctor, X0, X1
	177 Move X0, 0xE1F000
	178 Move X0, [X0+2704]
	179 Call 0x1C17D08
	180 Move X1, X22
	181 Move X2, X31
	182 Call SR.Format, X0, X1
	183 Move X19, X0
	184 Move X0, 0xDF3000
	185 Move X0, [X0+1400]
	186 Call 0x1C17D08
	187 Call 0x1C17F10
	188 Move X20, X0
	189 Move X0, 0xDED000
	190 Move X0, [X0+3088]
	191 Call 0x1C17D08
	192 Move X2, X0
	193 Move X0, X20
	194 Move X1, X19
	195 Call ArgumentException..ctor, X0, X1, X2
	196 Move X0, 0xE1F000
	197 Move X0, [X0+2696]
	198 Call 0x1C17D08
	199 Move X1, X0
	200 Move X0, X20
	201 Call 0x1C17DEC
	202 Move X0, 0xDF3000
	203 Move X0, [X0+1888]
	204 Call 0x1C17D08
	205 Call 0x1C17F10
	206 Move X19, X0
	207 Move X0, 0xE1F000
	208 Move X0, [X0+2712]
	209 Call 0x1C17D08
	210 Move X20, X0
	211 Move X0, 0xE1F000
	212 Move X0, [X0+2720]
	213 Call 0x1C17D08
	214 Move X2, X0
	215 Move X0, X19
	216 Move X1, X20
	217 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	218 Move X0, 0xDF3000
	219 Move X0, [X0+1400]
	220 Call 0x1C17D08
	221 Call 0x1C17F10
	222 Move X19, X0
	223 Move X0, 0xE1F000
	224 Move X0, [X0+2728]
	225 Call 0x1C17D08
	226 Move X20, X0
	227 Move X0, 0xE1F000
	228 Move X0, [X0+2712]
	229 Call 0x1C17D08
	230 Move X2, X0
	231 Move X0, X19
	232 Move X1, X20
	233 Call ArgumentException..ctor, X0, X1, X2

Method: System.Boolean UtcOffsetOutOfRange(System.TimeSpan offset)

Disassembly:
	0x03312798 LDP X26, X25, [X31 + 0x50]
	0x0331279C ADD X31, X31, 0x90
	0x033127A0 RET
	0x033127A4 SUB X31, X31, 0x70
	0x033127A8 STP X30, X23, [X31 + 0x40]
	0x033127AC STP X22, X21, [X31 + 0x50]
	0x033127B0 STP X20, X19, [X31 + 0x60]
	0x033127B4 ADRP X23, 0x10CA000
	0x033127B8 STP X1, X0, [X31 + 0x30]
	0x033127BC STR X2, [X31 + 0x28]
	0x033127C0 ADRP X22, 0xDE2000
	0x033127C4 LDRB W8, [X23 + 0xB5B]
	0x033127C8 LDR X22, [X22 + 0x9F0]
	0x033127CC MOV W19, W5
	0x033127D0 MOV X21, X4
	0x033127D4 MOV X20, X3
	0x033127D8 TBNZ X8, 0x0, 0x33127FC
	0x033127DC ADRP X0, 0xDE2000
	0x033127E0 LDR X0, [X0 + 0x9F0]
	0x033127E4 BL 0x1C16CF4
	0x033127E8 ADRP X0, 0xDE3000
	0x033127EC LDR X0, [X0 + 0x570]
	0x033127F0 BL 0x1C16CF4
	0x033127F4 MOVZ W8, 0x1
	0x033127F8 STRB W8, [X23 + 0xB5B]
	0x033127FC LDR X0, [X22]
	0x03312800 LDR W8, [X0 + 0xE0]
	0x03312804 CBNZ W8, 0x331280C
	0x03312808 BL 0x1C16DFC
	0x0331280C ADD X0, X31, 0x38
	0x03312810 MOV X1, X31
	0x03312814 BL 0x336139C
	0x03312818 CBZ W0, 0x3312840
	0x0331281C LDR X0, [X22]
	0x03312820 LDR W8, [X0 + 0xE0]
	0x03312824 CBNZ W8, 0x331282C
	0x03312828 BL 0x1C16DFC
	0x0331282C ADD X0, X31, 0x38
	0x03312830 MOV X1, X31
	0x03312834 BL 0x336139C
	0x03312838 CMP W0, 0x1
	0x0331283C B.NE 0x3312BC4
	0x03312840 LDR X0, [X22]
	0x03312844 LDR W8, [X0 + 0xE0]
	0x03312848 CBNZ W8, 0x3312850
	0x0331284C BL 0x1C16DFC
	0x03312850 ADD X0, X31, 0x30
	0x03312854 MOV X1, X31
	0x03312858 BL 0x336139C
	0x0331285C CBZ W0, 0x3312884
	0x03312860 LDR X0, [X22]
	0x03312864 LDR W8, [X0 + 0xE0]
	0x03312868 CBNZ W8, 0x3312870
	0x0331286C BL 0x1C16DFC
	0x03312870 ADD X0, X31, 0x30
	0x03312874 MOV X1, X31
	0x03312878 BL 0x336139C
	0x0331287C CMP W0, 0x1
	0x03312880 B.NE 0x3312BE4
	0x03312884 LDR X8, [X21 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x10CB000
	007 Move X21, 0xE16000
	008 Move W8, [X20+2889]
	009 Move X21, [X21+2616]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xDE4000
	016 Move X0, [X0+1392]
	017 Call 0x1C17CF4
	018 Move X0, 0xE16000
	019 Move X0, [X0+2616]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2889], W8
	023 Move X0, [X21]
	024 Move X22, 0xDE4000
	025 Move W8, [X0+224]
	026 Move X22, [X22+1392]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X21]
	031 Move X8, [X22]
	032 Move X9, [X0+184]
	033 Move W10, [X8+224]
	034 Move X20, [X9+40]
	035 Compare W10, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Move X0, X19
	040 Move X1, X20
	041 Move X2, X31
	042 Call TimeSpan.op_LessThan, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {54}
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move W0, 1
	052 Move X30, [X31+48]
	053 Return X0
	054 Move X0, [X21]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move X0, [X21]
	060 Move X8, [X22]
	061 Move X9, [X0+184]
	062 Move W10, [X8+224]
	063 Move X20, [X9+32]
	064 Compare W10, 0
	065 JumpIfNotEqual {68}
	066 Move X0, X8
	067 Call 0x1C17DFC
	068 Move X0, X19
	069 Move X1, X20
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X2, X31
	075 Move X30, [X31+48]
	076 Call TimeSpan.op_GreaterThan, X0, X1
	077 Return X0

Method: System.TimeSpan GetUtcOffset(System.TimeSpan baseUtcOffset, System.TimeZoneInfo/AdjustmentRule adjustmentRule)

Disassembly:
	0x033128C0 MOV X1, X20
	0x033128C4 MOV X2, X31
	0x033128C8 BL 0x3363220
	0x033128CC TBNZ X0, 0x0, 0x3312B74
	0x033128D0 ADRP X20, 0xDE3000
	0x033128D4 LDR X20, [X20 + 0x570]
	0x033128D8 LDR X0, [X20]
	0x033128DC LDR W8, [X0 + 0xE0]
	0x033128E0 CBNZ W8, 0x33128E8
	0x033128E4 BL 0x1C16DFC
	0x033128E8 ADD X0, X31, 0x28
	0x033128EC MOV X1, X31
	0x033128F0 BL 0x33941E8
	0x033128F4 FMOV D1, -16.000000001629815
	0x033128F8 FCMP D0, D1
	0x033128FC B.MI 0x3312AC8
	0x03312900 LDR X0, [X20]
	0x03312904 LDR W8, [X0 + 0xE0]
	0x03312908 CBNZ W8, 0x3312910
	0x0331290C BL 0x1C16DFC
	0x03312910 ADD X0, X31, 0x28
	0x03312914 MOV X1, X31
	0x03312918 BL 0x33941E8
	0x0331291C FMOV D1, 8.000000001396984
	0x03312920 FCMP D0, D1
	0x03312924 B.GT 0x3312AC8
	0x03312928 LDR X0, [X20]
	0x0331292C LDR W8, [X0 + 0xE0]
	0x03312930 CBNZ W8, 0x3312938
	0x03312934 BL 0x1C16DFC
	0x03312938 LDR X8, [X31 + 0x28]
	0x0331293C MOVZ X9, 0x5A0B
	0x03312940 MOVK X9, 0x60F80000
	0x03312944 MOVZ X10, 0x1000
	0x03312948 MOVK X9, 0x26E
	0x0331294C MOVK X10, 0x84F60000
	0x03312950 MOVK X9, 0x97CD0000
	0x03312954 MOVK X10, 0x728
	0x03312958 MADD X8, X8, X9, X10
	0x0331295C MOVZ X9, 0xF611
	0x03312960 MOVK X9, 0x28840000
	0x03312964 EXTR X8, X8, X8, 0x9
	0x03312968 MOVK X9, 0x7
	0x0331296C CMP X8, X9
	0x03312970 B.CS 0x3312B94
	0x03312974 LDR X0, [X22]
	0x03312978 LDR X19, [X31 + 0x38]
	0x0331297C LDR W8, [X0 + 0xE0]
	0x03312980 CBNZ W8, 0x331298C
	0x03312984 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10CB000
	007 Move W8, [X21+2890]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDE4000
	015 Move X0, [X0+1392]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2890], W8
	019 Compare X20, 0
	020 JumpIfEqual {64}
	021 Move X22, 0xDE4000
	022 Move X22, [X22+1392]
	023 Move X21, [X20+88]
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Move X1, X21
	031 Move X2, X31
	032 Call TimeSpan.op_Addition, X0, X1
	033 Move X19, X0
	034 Move X0, X20
	035 Call AdjustmentRule.get_HasDaylightSaving, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {42}
	040 Move X0, [X22]
	041 Add X8, X20, 32
	042 Move X0, [X22]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move X0, [X22]
	048 Move X8, [X0+184]
	049 Move W9, [X0+224]
	050 Move X20, [X8]
	051 Compare W9, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X19
	055 Move X1, X20
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X2, X31
	061 Move X30, [X31+48]
	062 Call TimeSpan.op_Addition, X0, X1
	063 Return X0
	064 Call 0x1C17F20

Method: System.Boolean IsValidAdjustmentRuleOffest(System.TimeSpan baseUtcOffset, System.TimeZoneInfo/AdjustmentRule adjustmentRule)

Disassembly:
	0x0330C4E8 MOV X0, X22
	0x0330C4EC MOV X1, X31
	0x0330C4F0 BL 0x3225708
	0x0330C4F4 ADD X0, X0, 0x2
	0x0330C4F8 MOV W1, W27
	0x0330C4FC MOV X2, X21
	0x0330C500 MOV X3, X31
	0x0330C504 BL 0x337C048
	0x0330C508 TBZ X0, 0x0, 0x330C5E8
	0x0330C50C LDRB W8, [X26 + 0x761]
	0x0330C510 ORN W27, W31, W25, 0x0
	0x0330C514 CBNZ W8, 0x330C52C
	0x0330C518 ADRP X0, 0xE0E000
	0x0330C51C LDR X0, [X0 + 0x290]
	0x0330C520 BL 0x1C16CF4
	0x0330C524 MOVZ W8, 0x1
	0x0330C528 STRB W8, [X26 + 0x761]
	0x0330C52C LDR W8, [X22 + 0x10]
	0x0330C530 CMP W8, W25
	0x0330C534 ADD W25, W23, W27
	0x0330C538 B.LS 0x330C548
	0x0330C53C SUB W8, W8, W24
	0x0330C540 CMP W8, W25
	0x0330C544 B.CS 0x330C554
	0x0330C548 MOVZ W0, 0x18
	0x0330C54C MOV X1, X31
	0x0330C550 BL 0x339D764
	0x0330C554 MOV X0, X22
	0x0330C558 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10D1000
	007 Move X22, 0xE1C000
	008 Move W8, [X21+2891]
	009 Move X22, [X22+2616]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xE1C000
	017 Move X0, [X0+2616]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2891], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X19
	028 Call TimeZoneInfo.GetUtcOffset, X0, X1
	029 Call TimeZoneInfo.UtcOffsetOutOfRange, X0
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 NotImplemented "Instruction ORN not yet implemented."
	035 And W0, W8, 1
	036 Move X30, [X31+48]
	037 Return X0

Method: System.Void NormalizeAdjustmentRuleOffset(System.TimeSpan baseUtcOffset, ref System.TimeZoneInfo/AdjustmentRule adjustmentRule)

Disassembly:
	0x0330C55C BL 0x3225708
	0x0330C560 ADD X0, X0, W24, 0x1, SXTW
	0x0330C564 MOV W1, W25
	0x0330C568 MOV X2, X20
	0x0330C56C MOV X3, X31
	0x0330C570 BL 0x337C048
	0x0330C574 TBZ X0, 0x0, 0x330C5E8
	0x0330C578 ADRP X24, 0x10D0000
	0x0330C57C LDRB W8, [X24 + 0x3AC]
	0x0330C580 CBNZ W8, 0x330C598
	0x0330C584 ADRP X0, 0xE0E000
	0x0330C588 LDR X0, [X0 + 0x290]
	0x0330C58C BL 0x1C16CF4
	0x0330C590 MOVZ W8, 0x1
	0x0330C594 STRB W8, [X24 + 0x3AC]
	0x0330C598 LDR W8, [X22 + 0x10]
	0x0330C59C CMP W8, W23
	0x0330C5A0 ADD W23, W23, 0x1
	0x0330C5A4 B.HI 0x330C5B4
	0x0330C5A8 MOVZ W0, 0x18
	0x0330C5AC MOV X1, X31
	0x0330C5B0 BL 0x339D764
	0x0330C5B4 MOV X0, X22
	0x0330C5B8 MOV X1, X31
	0x0330C5BC BL 0x3225708
	0x0330C5C0 LDR W8, [X22 + 0x10]
	0x0330C5C4 ADD X0, X0, W23, 0x1, SXTW
	0x0330C5C8 ADD X2, X31, 0xC
	0x0330C5CC MOV X3, X31
	0x0330C5D0 SUB W1, W8, W23
	0x0330C5D4 BL 0x337C048
	0x0330C5D8 TBZ X0, 0x0, 0x330C5E8
	0x0330C5DC LDR W8, [X31 + 0xC]
	0x0330C5E0 MOVZ W0, 0x1
	0x0330C5E4 B 0x330C5F8
	0x0330C5E8 MOV W8, W31
	0x0330C5EC MOV W0, W31
	0x0330C5F0 STR W31, [X21]
	0x0330C5F4 STR W31, [X20]
	0x0330C5F8 STR W8, [X19]
	0x0330C5FC LDP X20, X19, [X31 + 0x50]
	0x0330C600 LDP X22, X21, [X31 + 0x40]
	0x0330C604 LDP X24, X23, [X31 + 0x30]
	0x0330C608 LDP X26, X25, [X31 + 0x20]
	0x0330C60C LDP X30, X27, [X31 + 0x10]
	0x0330C610 ADD X31, X31, 0x60
	0x0330C614 RET
	0x0330C618 BL 0x1C16F20
	0x0330C61C STR X30, [X31 - 0x40]!
	0x0330C620 STP X24, X23, [X31 + 0x10]
	0x0330C624 STP X22, X21, [X31 + 0x20]
	0x0330C628 STP X20, X19, [X31 + 0x30]
	0x0330C62C MOV W19, W3
	0x0330C630 MOVZ W3, 0x1
	0x0330C634 MOV W4, W19
	0x0330C638 MOV W20, W2
	0x0330C63C MOV W21, W1
	0x0330C640 MOV X22, X0
	0x0330C644 MOV X23, X8
	0x0330C648 STP X31, X31, [X8]
	0x0330C64C STR X31, [X8 + 0x10]
	0x0330C650 MOVZ W24, 0x1
	0x0330C654 BL 0x33135A0
	0x0330C658 STR X22, [X23]
	0x0330C65C STRB W21, [X23 + 0x8]
	0x0330C660 STRB W20, [X23 + 0x9]
	0x0330C664 STRB W24, [X23 + 0xA]
	0x0330C668 STR W19, [X23 + 0xC]
	0x0330C66C STRB W31, [X23 + 0x10]
	0x0330C670 LDP X20, X19, [X31 + 0x30]
	0x0330C674 LDP X22, X21, [X31 + 0x20]
	0x0330C678 LDP X24, X23, [X31 + 0x10]
	0x0330C67C LDR X30, [X31], #0x40
	0x0330C680 RET
	0x0330C684 STP X30, X25, [X31 - 0x40]!
	0x0330C688 STP X24, X23, [X31 + 0x10]
	0x0330C68C STP X22, X21, [X31 + 0x20]
	0x0330C690 STP X20, X19, [X31 + 0x30]
	0x0330C694 ADRP X22, 0x10D0000
	0x0330C698 LDRB W8, [X22 + 0xB17]
	0x0330C69C MOV X19, X2
	0x0330C6A0 MOV X20, X1
	0x0330C6A4 MOV X21, X0
	0x0330C6A8 TBNZ X8, 0x0, 0x330C6C0
	0x0330C6AC ADRP X0, 0xE1B000
	0x0330C6B0 LDR X0, [X0 + 0xBB8]
	0x0330C6B4 BL 0x1C16CF4
	0x0330C6B8 MOVZ W8, 0x1
	0x0330C6BC STRB W8, [X22 + 0xB17]
	0x0330C6C0 STR W31, [X19]
	0x0330C6C4 STR W31, [X20]
	0x0330C6C8 CBZ X21, 0x330C844
	0x0330C6CC LDR W8, [X21 + 0x10]
	0x0330C6D0 CMP W8, 0x2
	0x0330C6D4 B.LT 0x330C7FC
	0x0330C6D8 MOVZ W1, 0x1
	0x0330C6DC MOV X0, X21
	0x0330C6E0 MOV X2, X31
	0x0330C6E4 BL 0x3222A1C
	0x0330C6E8 AND W8, W0, 0xFFFF
	0x0330C6EC SUB W8, W8, 0x30
	0x0330C6F0 CMP W8, 0x9
	0x0330C6F4 B.HI 0x330C7FC
	0x0330C6F8 ADRP X24, 0xE1B000
	0x0330C6FC LDR X24, [X24 + 0xBB8]
	0x0330C700 MOV W23, W31
	0x0330C704 MOVZ W22, 0x2
	0x0330C708 MOVZ W25, 0xA
	0x0330C70C SUB W1, W22, 0x1
	0x0330C710 MOV X0, X21
	0x0330C714 MOV X2, X31
	0x0330C718 BL 0x3222A1C
	0x0330C71C LDR W8, [X21 + 0x10]
	0x0330C720 MUL W9, W23, W25
	0x0330C724 ADD W9, W9, W0, UXTH
	0x0330C728 SUB W23, W9, 0x30
	0x0330C72C CMP W22, W8
	0x0330C730 B.GE 0x330C758
	0x0330C734 MOV X0, X21
	0x0330C738 MOV W1, W22
	0x0330C73C MOV X2, X31
	0x0330C740 BL 0x3222A1C
	0x0330C744 AND W8, W0, 0xFFFF
	0x0330C748 SUB W8, W8, 0x30
	0x0330C74C CMP W8, 0xA
	0x0330C750 ADD W22, W22, 0x1
	0x0330C754 B.CC 0x330C70C
	0x0330C758 LDR X0, [X24]
	0x0330C75C LDR W8, [X0 + 0xE0]
	0x0330C760 CBNZ W8, 0x330C76C
	0x0330C764 BL 0x1C16DFC
	0x0330C768 LDR X0, [X24]
	0x0330C76C CBZ W23, 0x330C7FC
	0x0330C770 LDR X8, [X0 + 0xB8]
	0x0330C774 LDR X8, [X8]
	0x0330C778 CBZ X8, 0x330C844
	0x0330C77C LDR X9, [X8 + 0x18]
	0x0330C780 CBZ W9, 0x330C848
	0x0330C784 MOV X10, INVALID
	0x0330C788 ADD X10, X10, X9, 0x20, LSL
	0x0330C78C ADD X10, X8, X10, 0x1E, ASR
	0x0330C790 LDR W10, [X10 + 0x20]
	0x0330C794 CMP W23, W10
	0x0330C798 B.GT 0x330C7FC

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+144], X24
	004 Move [X31+152], X23
	005 Move [X31+160], X22
	006 Move [X31+168], X21
	007 Move [X31+176], X20
	008 Move [X31+184], X19
	009 Move X21, 0x10D1000
	010 Move X23, 0xE1C000
	011 Move W8, [X21+2892]
	012 Move X23, [X23+2616]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xDEA000
	020 Move X0, [X0+1392]
	021 Call 0x1C17CF4
	022 Move X0, 0xE1C000
	023 Move X0, [X0+2616]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+2892], W8
	027 Move X0, [X23]
	028 Move X24, 0xDEA000
	029 Move X21, [X19]
	030 Move W8, [X0+224]
	031 Move X24, [X24+1392]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X20
	036 Move X1, X21
	037 Call TimeZoneInfo.GetUtcOffset, X0, X1
	038 Move X8, [X24]
	039 Move X20, X0
	040 Move W9, [X8+224]
	041 Compare W9, 0
	042 JumpIfNotEqual {46}
	043 Move X0, X8
	044 Call 0x1C17DFC
	045 Move X8, [X24]
	046 Move X9, [X23]
	047 Move X8, [X8+184]
	048 Move X0, X20
	049 Move X2, X31
	050 Move X9, [X9+184]
	051 Move X21, [X8]
	052 Move X1, [X9+32]
	053 Call TimeSpan.op_GreaterThan, X0, X1
	054 Move X8, [X23]
	055 Move W22, W0
	056 Move W9, [X8+224]
	057 Compare W9, 0
	058 JumpIfNotEqual {62}
	059 Move X0, X8
	060 Call 0x1C17DFC
	061 Move X8, [X23]
	062 Move X8, [X8+184]
	063 Move TEMP, X22
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {72}
	067 Move X0, [X24]
	068 Move X21, [X8+32]
	069 Move W9, [X0+224]
	070 Compare W9, 0
	071 JumpIfNotEqual {100}
	072 Move X0, [X24]
	073 Move X22, [X8+40]
	074 Move W9, [X0+224]
	075 Compare W9, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X0, X20
	079 Move X1, X22
	080 Move X2, X31
	081 Call TimeSpan.op_LessThan, X0, X1
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {105}
	086 Move X0, [X23]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {92}
	090 Call 0x1C17DFC
	091 Move X0, [X23]
	092 Move X8, [X24]
	093 Move X9, [X0+184]
	094 Move W10, [X8+224]
	095 Move X21, [X9+40]
	096 Compare W10, 0
	097 JumpIfNotEqual {100}
	098 Move X0, X8
	099 Call 0x1C17DFC
	100 Move X0, X21
	101 Move X1, X20
	102 Move X2, X31
	103 Call TimeSpan.op_Subtraction, X0, X1
	104 Move X21, X0
	105 Move X0, [X24]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {111}
	109 Call 0x1C17DFC
	110 Move X0, [X24]
	111 Move X8, [X0+184]
	112 Move X0, X21
	113 Move X2, X31
	114 Move X1, [X8]
	115 Call TimeSpan.op_Inequality, X0, X1
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {164}
	120 Move X8, [X19]
	121 Compare X8, 0
	122 JumpIfEqual {173}
	123 NotImplemented "Instruction LDUR not yet implemented."
	124 Move X9, [X8+56]
	125 Move X20, [X8+16]
	126 Move X22, [X8+24]
	127 Move X23, [X8+32]
	128 Move [X31+6], V0
	129 Move [X31+112], X9
	130 Move X9, [X8+80]
	131 Move V0, [X8+4]
	132 Move X0, [X24]
	133 Move [X31+80], X9
	134 Move [X31+4], V0
	135 Move W9, [X0+224]
	136 Move X24, [X8+88]
	137 Compare W9, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1C17DFC
	140 Move X0, X24
	141 Move X1, X21
	142 Move X2, X31
	143 Call TimeSpan.op_Addition, X0, X1
	144 Move X8, [X19]
	145 Compare X8, 0
	146 JumpIfEqual {173}
	147 Move W6, [X8+96]
	148 Move V0, [X31+6]
	149 Move X8, [X31+112]
	150 Move V1, [X31+4]
	151 Move X9, [X31+80]
	152 Move X5, X0
	153 Add X3, X31, 32
	154 Add X4, X31, 0
	155 Move X0, X20
	156 Move X1, X22
	157 Move X2, X23
	158 Move [X31+2], V0
	159 Move [X31+48], X8
	160 Move [X31], V1
	161 Move [X31+16], X9
	162 Call AdjustmentRule.CreateAdjustmentRule, X0, X1, X2, X3, X4, X5, X6
	163 Move [X19], X0
	164 Move X20, [X31+176]
	165 Move X19, [X31+184]
	166 Move X22, [X31+160]
	167 Move X21, [X31+168]
	168 Move X24, [X31+144]
	169 Move X23, [X31+152]
	170 Move X30, [X31+128]
	171 Add X31, X31, 192
	172 Return 
	173 Call 0x1C17F20

Method: System.String GetTimeZoneDirectoryUnity()

Disassembly:
	0x03312988 LDR X0, [X22]
	0x0331298C LDR X8, [X0 + 0xB8]
	0x03312990 MOV X0, X19
	0x03312994 MOV X2, X31
	0x03312998 LDR X1, [X8 + 0x10]
	0x0331299C BL 0x33630E0
	0x033129A0 TBZ X0, 0x0, 0x3312A14
	0x033129A4 LDR X0, [X22]
	0x033129A8 LDR W8, [X0 + 0xE0]
	0x033129AC CBNZ W8, 0x33129B4
	0x033129B0 BL 0x1C16DFC
	0x033129B4 ADD X0, X31, 0x38
	0x033129B8 MOV X1, X31
	0x033129BC BL 0x336139C
	0x033129C0 CBNZ W0, 0x3312A14
	0x033129C4 LDR X0, [X22]
	0x033129C8 LDR W8, [X0 + 0xE0]
	0x033129CC CBNZ W8, 0x33129D4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x10CB000
	005 Move X20, 0xDE4000
	006 Move W8, [X19+2893]
	007 Move X20, [X20+632]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDE4000
	013 Move X0, [X0+632]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2893], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move X0, [X8]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Collections.Generic.List`1<System.TimeZoneInfo/AdjustmentRule> CreateAdjustmentRule(System.Int32 year, out System.Int64[] data, out System.String[] names)

Disassembly:
	0x033129D0 BL 0x1C16DFC
	0x033129D4 ADD X0, X31, 0x38
	0x033129D8 MOV X1, X31
	0x033129DC BL 0x33617E8
	0x033129E0 LDR X8, [X20]
	0x033129E4 MOV X19, X0
	0x033129E8 LDR W9, [X8 + 0xE0]
	0x033129EC CBNZ W9, 0x33129FC
	0x033129F0 MOV X0, X8
	0x033129F4 BL 0x1C16DFC
	0x033129F8 LDR X8, [X20]
	0x033129FC LDR X8, [X8 + 0xB8]
	0x03312A00 MOV X0, X19
	0x03312A04 MOV X2, X31
	0x03312A08 LDR X1, [X8]
	0x03312A0C BL 0x3394CE4
	0x03312A10 TBNZ X0, 0x0, 0x3312C04
	0x03312A14 LDR X0, [X22]
	0x03312A18 LDR X19, [X31 + 0x30]
	0x03312A1C LDR W8, [X0 + 0xE0]
	0x03312A20 CBNZ W8, 0x3312A2C
	0x03312A24 BL 0x1C16DFC
	0x03312A28 LDR X0, [X22]
	0x03312A2C LDR X8, [X0 + 0xB8]
	0x03312A30 MOV X0, X19
	0x03312A34 MOV X2, X31
	0x03312A38 LDR X1, [X8 + 0x18]
	0x03312A3C BL 0x33630E0
	0x03312A40 TBZ X0, 0x0, 0x3312AB4
	0x03312A44 LDR X0, [X22]
	0x03312A48 LDR W8, [X0 + 0xE0]
	0x03312A4C CBNZ W8, 0x3312A54
	0x03312A50 BL 0x1C16DFC
	0x03312A54 ADD X0, X31, 0x30
	0x03312A58 MOV X1, X31
	0x03312A5C BL 0x336139C
	0x03312A60 CBNZ W0, 0x3312AB4
	0x03312A64 LDR X0, [X22]
	0x03312A68 LDR W8, [X0 + 0xE0]
	0x03312A6C CBNZ W8, 0x3312A74
	0x03312A70 BL 0x1C16DFC
	0x03312A74 ADD X0, X31, 0x30
	0x03312A78 MOV X1, X31
	0x03312A7C BL 0x33617E8
	0x03312A80 LDR X8, [X20]
	0x03312A84 MOV X19, X0
	0x03312A88 LDR W9, [X8 + 0xE0]
	0x03312A8C CBNZ W9, 0x3312A9C
	0x03312A90 MOV X0, X8
	0x03312A94 BL 0x1C16DFC
	0x03312A98 LDR X8, [X20]
	0x03312A9C LDR X8, [X8 + 0xB8]
	0x03312AA0 MOV X0, X19
	0x03312AA4 MOV X2, X31
	0x03312AA8 LDR X1, [X8]
	0x03312AAC BL 0x3394CE4
	0x03312AB0 TBNZ X0, 0x0, 0x3312C34
	0x03312AB4 LDP X20, X19, [X31 + 0x60]
	0x03312AB8 LDP X22, X21, [X31 + 0x50]
	0x03312ABC LDP X30, X23, [X31 + 0x40]
	0x03312AC0 ADD X31, X31, 0x70
	0x03312AC4 RET
	0x03312AC8 LDR X8, [X31 + 0x28]
	0x03312ACC ADRP X0, 0xDE3000
	0x03312AD0 STR X8, [X31 + 0x8]
	0x03312AD4 LDR X0, [X0 + 0x570]
	0x03312AD8 BL 0x1C16D08
	0x03312ADC ADD X1, X31, 0x8
	0x03312AE0 BL 0x1C16E04
	0x03312AE4 MOV X19, X0
	0x03312AE8 ADRP X0, 0xDE9000
	0x03312AEC LDR X0, [X0 + 0x760]
	0x03312AF0 BL 0x1C16D08
	0x03312AF4 BL 0x1C16F10
	0x03312AF8 MOV X20, X0
	0x03312AFC ADRP X0, 0xE15000
	0x03312B00 LDR X0, [X0 + 0xCE0]
	0x03312B04 BL 0x1C16D08
	0x03312B08 MOV X21, X0
	0x03312B0C ADRP X0, 0xE15000
	0x03312B10 LDR X0, [X0 + 0xAA0]
	0x03312B14 BL 0x1C16D08
	0x03312B18 MOV X3, X0
	0x03312B1C MOV X0, X20
	0x03312B20 MOV X1, X21
	0x03312B24 MOV X2, X19
	0x03312B28 BL 0x3312C8C
	0x03312B2C ADRP X0, 0xE15000
	0x03312B30 LDR X0, [X0 + 0xCE8]
	0x03312B34 BL 0x1C16D08
	0x03312B38 MOV X1, X0
	0x03312B3C MOV X0, X20
	0x03312B40 BL 0x1C16DEC
	0x03312B44 ADRP X0, 0xDE9000
	0x03312B48 LDR X0, [X0 + 0x578]
	0x03312B4C BL 0x1C16D08
	0x03312B50 BL 0x1C16F10
	0x03312B54 MOV X19, X0
	0x03312B58 ADRP X0, 0xE15000
	0x03312B5C LDR X0, [X0 + 0xCF0]
	0x03312B60 BL 0x1C16D08
	0x03312B64 MOV X20, X0
	0x03312B68 ADRP X0, 0xE15000
	0x03312B6C LDR X0, [X0 + 0xCF8]
	0x03312B70 B 0x3312C60
	0x03312B74 ADRP X0, 0xDE9000
	0x03312B78 LDR X0, [X0 + 0x578]
	0x03312B7C BL 0x1C16D08
	0x03312B80 BL 0x1C16F10
	0x03312B84 MOV X19, X0
	0x03312B88 ADRP X0, 0xE15000
	0x03312B8C LDR X0, [X0 + 0xD00]
	0x03312B90 B 0x3312C20
	0x03312B94 ADRP X0, 0xDE9000
	0x03312B98 LDR X0, [X0 + 0x578]
	0x03312B9C BL 0x1C16D08
	0x03312BA0 BL 0x1C16F10
	0x03312BA4 MOV X19, X0
	0x03312BA8 ADRP X0, 0xE15000
	0x03312BAC LDR X0, [X0 + 0xAA8]
	0x03312BB0 BL 0x1C16D08
	0x03312BB4 MOV X20, X0
	0x03312BB8 ADRP X0, 0xE15000
	0x03312BBC LDR X0, [X0 + 0xCE0]
	0x03312BC0 B 0x3312C60
	0x03312BC4 ADRP X0, 0xDE9000
	0x03312BC8 LDR X0, [X0 + 0x578]
	0x03312BCC BL 0x1C16D08
	0x03312BD0 BL 0x1C16F10
	0x03312BD4 MOV X19, X0
	0x03312BD8 ADRP X0, 0xE15000
	0x03312BDC LDR X0, [X0 + 0xD08]
	0x03312BE0 B 0x3312C20
	0x03312BE4 ADRP X0, 0xDE9000
	0x03312BE8 LDR X0, [X0 + 0x578]
	0x03312BEC BL 0x1C16D08
	0x03312BF0 BL 0x1C16F10
	0x03312BF4 MOV X19, X0
	0x03312BF8 ADRP X0, 0xE15000
	0x03312BFC LDR X0, [X0 + 0xD08]
	0x03312C00 B 0x3312C50
	0x03312C04 ADRP X0, 0xDE9000
	0x03312C08 LDR X0, [X0 + 0x578]
	0x03312C0C BL 0x1C16D08
	0x03312C10 BL 0x1C16F10
	0x03312C14 MOV X19, X0
	0x03312C18 ADRP X0, 0xE15000
	0x03312C1C LDR X0, [X0 + 0xD10]
	0x03312C20 BL 0x1C16D08
	0x03312C24 MOV X20, X0
	0x03312C28 ADRP X0, 0xE15000
	0x03312C2C LDR X0, [X0 + 0xD18]
	0x03312C30 B 0x3312C60
	0x03312C34 ADRP X0, 0xDE9000
	0x03312C38 LDR X0, [X0 + 0x578]
	0x03312C3C BL 0x1C16D08
	0x03312C40 BL 0x1C16F10
	0x03312C44 MOV X19, X0
	0x03312C48 ADRP X0, 0xE15000
	0x03312C4C LDR X0, [X0 + 0xD10]
	0x03312C50 BL 0x1C16D08
	0x03312C54 MOV X20, X0
	0x03312C58 ADRP X0, 0xE15000
	0x03312C5C LDR X0, [X0 + 0xD20]
	0x03312C60 BL 0x1C16D08
	0x03312C64 MOV X2, X0
	0x03312C68 MOV X0, X19
	0x03312C6C MOV X1, X20
	0x03312C70 BL 0x330E16C
	0x03312C74 ADRP X0, 0xE15000
	0x03312C78 LDR X0, [X0 + 0xCE8]
	0x03312C7C BL 0x1C16D08
	0x03312C80 MOV X1, X0
	0x03312C84 MOV X0, X19
	0x03312C88 BL 0x1C16DEC
	0x03312C8C STP X30, X21, [X31 - 0x20]!
	0x03312C90 STP X20, X19, [X31 + 0x10]
	0x03312C94 MOV X19, X2
	0x03312C98 MOV X20, X1
	0x03312C9C MOV X1, X3
	0x03312CA0 MOV X2, X31
	0x03312CA4 MOV X21, X0
	0x03312CA8 BL 0x338C8D8
	0x03312CAC STP X20, X19, [X21 + 0x90]
	0x03312CB0 LDP X20, X19, [X31 + 0x10]
	0x03312CB4 MOVZ W8, 0x1502
	0x03312CB8 MOVK W8, 0x80130000
	0x03312CBC STR W8, [X21 + 0x60]
	0x03312CC0 LDP X30, X21, [X31], #0x20
	0x03312CC4 RET
	0x03312CC8 SUB X31, X31, 0x60
	0x03312CCC STR X30, [X31 + 0x40]
	0x03312CD0 STP X20, X19, [X31 + 0x50]
	0x03312CD4 LDUR V0, [X0 + 0x28]
	0x03312CD8 LDR X9, [X0 + 0x38]
	0x03312CDC LDP X8, X1, [X0 + 0x10]
	0x03312CE0 LDR X2, [X0 + 0x20]
	0x03312CE4 STR V0, [X31 + 0x2]
	0x03312CE8 STR X9, [X31 + 0x30]
	0x03312CEC LDR X9, [X0 + 0x50]
	0x03312CF0 LDR V0, [X0 + 0x4]
	0x03312CF4 STR X9, [X31 + 0x10]
	0x03312CF8 STR V0, [X31]
	0x03312CFC LDRB W5, [X0 + 0x60]
	0x03312D00 ADD X3, X31, 0x20
	0x03312D04 ADD X4, X31, 0x0
	0x03312D08 MOV X0, X8
	0x03312D0C BL 0x33127A4
	0x03312D10 LDP X20, X19, [X31 + 0x50]
	0x03312D14 LDR X30, [X31 + 0x40]
	0x03312D18 ADD X31, X31, 0x60
	0x03312D1C RET
	0x03312D20 CMP W1, 0x1
	0x03312D24 MOV X19, X0
	0x03312D28 B.NE 0x3312DD0
	0x03312D2C MOV X0, X19
	0x03312D30 BL 0x3EB1AD0
	0x03312D34 MOV X19, X0
	0x03312D38 ADRP X0, 0xDE9000
	0x03312D3C LDR X0, [X0 + 0x578]
	0x03312D40 BL 0x1C16D08
	0x03312D44 LDR X8, [X19]
	0x03312D48 LDR X1, [X8]
	0x03312D4C BL 0x1C17270
	0x03312D50 TBZ X0, 0x0, 0x3312DA8
	0x03312D54 LDR X19, [X19]
	0x03312D58 BL 0x3EB1AE0
	0x03312D5C ADRP X0, 0xE0B000
	0x03312D60 LDR X0, [X0 + 0x2E0]
	0x03312D64 BL 0x1C16D08
	0x03312D68 BL 0x1C16F10
	0x03312D6C MOV X20, X0
	0x03312D70 ADRP X0, 0xE15000
	0x03312D74 LDR X0, [X0 + 0xC80]
	0x03312D78 BL 0x1C16D08
	0x03312D7C MOV X1, X0
	0x03312D80 MOV X0, X20
	0x03312D84 MOV X2, X19
	0x03312D88 MOV X3, X31
	0x03312D8C BL 0x329F124
	0x03312D90 ADRP X0, 0xE15000
	0x03312D94 LDR X0, [X0 + 0xD28]
	0x03312D98 BL 0x1C16D08
	0x03312D9C MOV X1, X0
	0x03312DA0 MOV X0, X20
	0x03312DA4 BL 0x1C16DEC
	0x03312DA8 MOVZ W0, 0x8
	0x03312DAC BL 0x3EB1AF0
	0x03312DB0 LDR X8, [X19]
	0x03312DB4 STR X8, [X0]
	0x03312DB8 ADRP X1, 0xBA2000
	0x03312DBC ADD X1, X1, 0xE58
	0x03312DC0 MOV X2, X31
	0x03312DC4 BL 0x3EB1B00
	0x03312DC8 MOV X19, X0
	0x03312DCC BL 0x3EB1AE0
	0x03312DD0 MOV X0, X19
	0x03312DD4 BL 0x1D2C690
	0x03312DD8 BL 0x1990590
	0x03312DDC SUB X31, X31, 0xB0
	0x03312DE0 STR X30, [X31 + 0x50]
	0x03312DE4 STP X28, X27, [X31 + 0x60]
	0x03312DE8 STP X26, X25, [X31 + 0x70]
	0x03312DEC STP X24, X23, [X31 + 0x80]
	0x03312DF0 STP X22, X21, [X31 + 0x90]
	0x03312DF4 STP X20, X19, [X31 + 0xA0]
	0x03312DF8 ADRP X21, 0x10CA000
	0x03312DFC LDRB W8, [X21 + 0xB5C]
	0x03312E00 MOV X19, X1
	0x03312E04 MOV X20, X0
	0x03312E08 TBNZ X8, 0x0, 0x3312E80
	0x03312E0C ADRP X0, 0xDE3000
	0x03312E10 LDR X0, [X0 + 0x570]
	0x03312E14 BL 0x1C16CF4
	0x03312E18 ADRP X0, 0xE15000
	0x03312E1C LDR X0, [X0 + 0xD30]
	0x03312E20 BL 0x1C16CF4
	0x03312E24 ADRP X0, 0xE15000
	0x03312E28 LDR X0, [X0 + 0xD38]
	0x03312E2C BL 0x1C16CF4
	0x03312E30 ADRP X0, 0xE15000
	0x03312E34 LDR X0, [X0 + 0xD40]
	0x03312E38 BL 0x1C16CF4
	0x03312E3C ADRP X0, 0xE15000
	0x03312E40 LDR X0, [X0 + 0xD48]
	0x03312E44 BL 0x1C16CF4
	0x03312E48 ADRP X0, 0xE15000
	0x03312E4C LDR X0, [X0 + 0xD50]
	0x03312E50 BL 0x1C16CF4
	0x03312E54 ADRP X0, 0xE15000
	0x03312E58 LDR X0, [X0 + 0xD58]
	0x03312E5C BL 0x1C16CF4
	0x03312E60 ADRP X0, 0xE15000
	0x03312E64 LDR X0, [X0 + 0xD60]
	0x03312E68 BL 0x1C16CF4
	0x03312E6C ADRP X0, 0xE15000
	0x03312E70 LDR X0, [X0 + 0xD68]
	0x03312E74 BL 0x1C16CF4
	0x03312E78 MOVZ W8, 0x1
	0x03312E7C STRB W8, [X21 + 0xB5C]
	0x03312E80 CBZ X19, 0x3312FD8
	0x03312E84 ADRP X8, 0xE15000
	0x03312E88 LDR X8, [X8 + 0xD60]
	0x03312E8C ADRP X26, 0xE15000
	0x03312E90 ADRP X22, 0xDE3000
	0x03312E94 ADRP X27, 0xE15000
	0x03312E98 ADRP X25, 0xE15000
	0x03312E9C ADRP X28, 0xE15000
	0x03312EA0 LDR X26, [X26 + 0xD68]
	0x03312EA4 LDR X22, [X22 + 0x570]
	0x03312EA8 LDR X27, [X27 + 0xD40]
	0x03312EAC LDR X25, [X25 + 0xD30]
	0x03312EB0 LDR X28, [X28 + 0xD38]
	0x03312EB4 LDR X2, [X20 + 0x10]
	0x03312EB8 LDR X1, [X8]
	0x03312EBC ADRP X24, 0xE15000
	0x03312EC0 ADRP X23, 0xE15000
	0x03312EC4 ADRP X21, 0xE15000
	0x03312EC8 LDR X24, [X24 + 0xD50]
	0x03312ECC LDR X23, [X23 + 0xD48]
	0x03312ED0 LDR X21, [X21 + 0xD58]
	0x03312ED4 MOV X0, X19
	0x03312ED8 MOV X3, X31
	0x03312EDC BL 0x32A9280
	0x03312EE0 LDR X2, [X20 + 0x18]
	0x03312EE4 LDR X1, [X26]
	0x03312EE8 MOV X0, X19
	0x03312EEC MOV X3, X31
	0x03312EF0 BL 0x32A9280
	0x03312EF4 LDR X8, [X20 + 0x20]
	0x03312EF8 LDR X0, [X22]
	0x03312EFC ADD X1, X31, 0x58
	0x03312F00 STR X8, [X31 + 0x58]
	0x03312F04 BL 0x1C16E04
	0x03312F08 LDR X1, [X27]
	0x03312F0C MOV X2, X0
	0x03312F10 MOV X0, X19
	0x03312F14 MOV X3, X31
	0x03312F18 BL 0x32A8BF0
	0x03312F1C LDR X8, [X20 + 0x38]
	0x03312F20 LDUR V0, [X20 + 0x28]
	0x03312F24 LDR X0, [X25]
	0x03312F28 ADD X1, X31, 0x30
	0x03312F2C STR X8, [X31 + 0x40]
	0x03312F30 STR V0, [X31 + 0x3]
	0x03312F34 BL 0x1C16E04
	0x03312F38 LDR X1, [X28]
	0x03312F3C MOV X2, X0
	0x03312F40 MOV X0, X19
	0x03312F44 MOV X3, X31
	0x03312F48 BL 0x32A8BF0
	0x03312F4C LDR X8, [X20 + 0x50]
	0x03312F50 LDR V0, [X20 + 0x4]
	0x03312F54 LDR X0, [X25]
	0x03312F58 ADD X1, X31, 0x10
	0x03312F5C STR X8, [X31 + 0x20]
	0x03312F60 STR V0, [X31 + 0x1]
	0x03312F64 BL 0x1C16E04
	0x03312F68 LDR X1, [X24]
	0x03312F6C MOV X2, X0
	0x03312F70 MOV X0, X19
	0x03312F74 MOV X3, X31
	0x03312F78 BL 0x32A8BF0
	0x03312F7C LDR X8, [X20 + 0x58]
	0x03312F80 LDR X0, [X22]
	0x03312F84 ADD X1, X31, 0x8
	0x03312F88 STR X8, [X31 + 0x8]
	0x03312F8C BL 0x1C16E04
	0x03312F90 LDR X1, [X23]
	0x03312F94 MOV X2, X0
	0x03312F98 MOV X0, X19
	0x03312F9C MOV X3, X31
	0x03312FA0 BL 0x32A8BF0
	0x03312FA4 LDRB W2, [X20 + 0x60]
	0x03312FA8 LDR X1, [X21]
	0x03312FAC MOV X0, X19
	0x03312FB0 MOV X3, X31
	0x03312FB4 BL 0x32A8CA8
	0x03312FB8 LDP X20, X19, [X31 + 0xA0]
	0x03312FBC LDP X22, X21, [X31 + 0x90]
	0x03312FC0 LDP X24, X23, [X31 + 0x80]
	0x03312FC4 LDP X26, X25, [X31 + 0x70]
	0x03312FC8 LDP X28, X27, [X31 + 0x60]
	0x03312FCC LDR X30, [X31 + 0x50]
	0x03312FD0 ADD X31, X31, 0xB0
	0x03312FD4 RET
	0x03312FD8 ADRP X0, 0xDE6000
	0x03312FDC LDR X0, [X0 + 0x528]
	0x03312FE0 BL 0x1C16D08
	0x03312FE4 BL 0x1C16F10
	0x03312FE8 MOV X19, X0
	0x03312FEC ADRP X0, 0xE0B000
	0x03312FF0 LDR X0, [X0 + 0x2D8]
	0x03312FF4 BL 0x1C16D08
	0x03312FF8 MOV X1, X0
	0x03312FFC MOV X0, X19
	0x03313000 BL 0x330E100
	0x03313004 ADRP X0, 0xE14000
	0x03313008 LDR X0, [X0 + 0xD70]
	0x0331300C BL 0x1C16D08
	0x03313010 MOV X1, X0
	0x03313014 MOV X0, X19
	0x03313018 BL 0x1C16DEC
	0x0331301C STR X30, [X31 - 0x50]!
	0x03313020 STP X26, X25, [X31 + 0x10]
	0x03313024 STP X24, X23, [X31 + 0x20]
	0x03313028 STP X22, X21, [X31 + 0x30]
	0x0331302C STP X20, X19, [X31 + 0x40]
	0x03313030 ADRP X21, 0x10C9000
	0x03313034 LDRB W8, [X21 + 0xB5D]
	0x03313038 MOV X20, X1
	0x0331303C MOV X19, X0
	0x03313040 TBNZ X8, 0x0, 0x331310C
	0x03313044 ADRP X0, 0xE09000
	0x03313048 LDR X0, [X0 + 0x248]
	0x0331304C BL 0x1C16CF4
	0x03313050 ADRP X0, 0xDE0000
	0x03313054 LDR X0, [X0 + 0xB58]
	0x03313058 BL 0x1C16CF4
	0x0331305C ADRP X0, 0xE11000
	0x03313060 LDR X0, [X0 + 0xF38]
	0x03313064 BL 0x1C16CF4
	0x03313068 ADRP X0, 0xDE1000
	0x0331306C LDR X0, [X0 + 0x9F0]
	0x03313070 BL 0x1C16CF4
	0x03313074 ADRP X0, 0xE12000
	0x03313078 LDR X0, [X0 + 0x180]
	0x0331307C BL 0x1C16CF4
	0x03313080 ADRP X0, 0xDE2000
	0x03313084 LDR X0, [X0 + 0x570]
	0x03313088 BL 0x1C16CF4
	0x0331308C ADRP X0, 0xE14000
	0x03313090 LDR X0, [X0 + 0xD78]
	0x03313094 BL 0x1C16CF4
	0x03313098 ADRP X0, 0xE14000
	0x0331309C LDR X0, [X0 + 0xD30]
	0x033130A0 BL 0x1C16CF4
	0x033130A4 ADRP X0, 0xDE0000
	0x033130A8 LDR X0, [X0 + 0x6C0]
	0x033130AC BL 0x1C16CF4
	0x033130B0 ADRP X0, 0xE14000
	0x033130B4 LDR X0, [X0 + 0xD38]
	0x033130B8 BL 0x1C16CF4
	0x033130BC ADRP X0, 0xE14000
	0x033130C0 LDR X0, [X0 + 0xD40]
	0x033130C4 BL 0x1C16CF4
	0x033130C8 ADRP X0, 0xE14000
	0x033130CC LDR X0, [X0 + 0xD48]
	0x033130D0 BL 0x1C16CF4
	0x033130D4 ADRP X0, 0xE14000
	0x033130D8 LDR X0, [X0 + 0xD50]
	0x033130DC BL 0x1C16CF4
	0x033130E0 ADRP X0, 0xE14000
	0x033130E4 LDR X0, [X0 + 0xD58]
	0x033130E8 BL 0x1C16CF4
	0x033130EC ADRP X0, 0xE14000
	0x033130F0 LDR X0, [X0 + 0xD60]
	0x033130F4 BL 0x1C16CF4
	0x033130F8 ADRP X0, 0xE14000
	0x033130FC LDR X0, [X0 + 0xD68]
	0x03313100 BL 0x1C16CF4
	0x03313104 MOVZ W8, 0x1
	0x03313108 STRB W8, [X21 + 0xB5D]
	0x0331310C MOV X0, X19
	0x03313110 MOV X1, X31
	0x03313114 BL 0x33BDD8C
	0x03313118 CBZ X20, 0x33133EC
	0x0331311C ADRP X22, 0xDE0000
	0x03313120 LDR X22, [X22 + 0x6C0]
	0x03313124 ADRP X23, 0xE11000
	0x03313128 ADRP X24, 0xE14000
	0x0331312C LDR X0, [X22]
	0x03313130 LDR X23, [X23 + 0xF38]
	0x03313134 LDR W8, [X0 + 0xE0]
	0x03313138 LDR X21, [X23]
	0x0331313C LDR X24, [X24 + 0xD60]
	0x03313140 CBNZ W8, 0x3313148
	0x03313144 BL 0x1C16DFC
	0x03313148 MOV X0, X21
	0x0331314C MOV X1, X31
	0x03313150 BL 0x338C698
	0x03313154 LDR X1, [X24]
	0x03313158 MOV X2, X0
	0x0331315C MOV X0, X20
	0x03313160 MOV X3, X31
	0x03313164 BL 0x32A9678
	0x03313168 CBZ X0, 0x33133E8
	0x0331316C ADRP X21, 0xDE1000
	0x03313170 LDR X21, [X21 + 0x9F0]
	0x03313174 LDR X8, [X0]
	0x03313178 LDR X1, [X21]
	0x0331317C LDR X8, [X8 + 0x40]
	0x03313180 LDR X9, [X1 + 0x40]
	0x03313184 CMP X8, X9
	0x03313188 B.NE 0x33133E4
	0x0331318C ADRP X24, 0xE14000
	0x03313190 LDR X24, [X24 + 0xD68]
	0x03313194 BL 0x1C16E08
	0x03313198 LDR X8, [X0]
	0x0331319C MOV X1, X31
	0x033131A0 STR X8, [X19 + 0x10]
	0x033131A4 LDR X0, [X23]
	0x033131A8 BL 0x338C698
	0x033131AC LDR X1, [X24]
	0x033131B0 MOV X2, X0
	0x033131B4 MOV X0, X20
	0x033131B8 MOV X3, X31
	0x033131BC BL 0x32A9678
	0x033131C0 CBZ X0, 0x33133E8
	0x033131C4 LDR X8, [X0]
	0x033131C8 LDR X1, [X21]
	0x033131CC LDR X8, [X8 + 0x40]
	0x033131D0 LDR X9, [X1 + 0x40]
	0x033131D4 CMP X8, X9
	0x033131D8 B.NE 0x33133E4
	0x033131DC ADRP X21, 0xE12000
	0x033131E0 ADRP X23, 0xE14000
	0x033131E4 LDR X21, [X21 + 0x180]
	0x033131E8 LDR X23, [X23 + 0xD40]
	0x033131EC BL 0x1C16E08
	0x033131F0 LDR X8, [X0]
	0x033131F4 MOV X1, X31
	0x033131F8 STR X8, [X19 + 0x18]
	0x033131FC LDR X0, [X21]
	0x03313200 BL 0x338C698
	0x03313204 LDR X1, [X23]
	0x03313208 MOV X2, X0
	0x0331320C MOV X0, X20
	0x03313210 MOV X3, X31
	0x03313214 BL 0x32A9678
	0x03313218 CBZ X0, 0x33133E8
	0x0331321C ADRP X23, 0xDE2000
	0x03313220 LDR X23, [X23 + 0x570]
	0x03313224 LDR X8, [X0]
	0x03313228 LDR X1, [X23]
	0x0331322C LDR X8, [X8 + 0x40]
	0x03313230 LDR X9, [X1 + 0x40]
	0x03313234 CMP X8, X9
	0x03313238 B.NE 0x33133E4
	0x0331323C ADRP X24, 0xE14000
	0x03313240 ADRP X25, 0xE14000
	0x03313244 LDR X24, [X24 + 0xD78]
	0x03313248 LDR X25, [X25 + 0xD38]
	0x0331324C BL 0x1C16E08
	0x03313250 LDR X8, [X0]
	0x03313254 MOV X1, X31
	0x03313258 STR X8, [X19 + 0x20]
	0x0331325C LDR X0, [X24]
	0x03313260 BL 0x338C698
	0x03313264 LDR X1, [X25]
	0x03313268 MOV X2, X0
	0x0331326C MOV X0, X20
	0x03313270 MOV X3, X31

ISIL:
	001 Subtract X31, X31, 400
	002 Move [X31+304], X29
	003 Move [X31+312], X30
	004 Move [X31+320], X28
	005 Move [X31+328], X27
	006 Move [X31+336], X26
	007 Move [X31+344], X25
	008 Move [X31+352], X24
	009 Move [X31+360], X23
	010 Move [X31+368], X22
	011 Move [X31+376], X21
	012 Move [X31+384], X20
	013 Move [X31+392], X19
	014 Move X24, 0x10CB000
	015 Move X23, 0xE16000
	016 Move X19, 0xE16000
	017 Move W8, [X24+2894]
	018 Move X23, [X23+2656]
	019 Move X19, [X19+2648]
	020 Move X20, X2
	021 Move X22, X1
	022 Move W21, W0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {44}
	027 Move X0, 0xDE3000
	028 Move X0, [X0+2544]
	029 Call 0x1C17CF4
	030 Move X0, 0xE16000
	031 Move X0, [X0+2920]
	032 Call 0x1C17CF4
	033 Move X0, 0xE16000
	034 Move X0, [X0+2648]
	035 Call 0x1C17CF4
	036 Move X0, 0xE16000
	037 Move X0, [X0+2656]
	038 Call 0x1C17CF4
	039 Move X0, 0xDE4000
	040 Move X0, [X0+1392]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X24+2894], W8
	044 Move X0, [X23]
	045 Move [X31+300], W31
	046 Move [X31+280], X31
	047 Move [X31+288], X31
	048 Move [X31+264], X31
	049 Move [X31+272], X31
	050 Move [X31+248], X31
	051 Move [X31+256], X31
	052 Move [X31+244], W31
	053 Move [X31+232], X31
	054 Call 0x1C17F10
	055 Move X1, [X19]
	056 Move X19, X0
	057 Call List`1<Object>..ctor, X0
	058 Add X3, X31, 300
	059 Move W0, W21
	060 Move X1, X22
	061 Move X2, X20
	062 Move X4, X31
	063 Call CurrentSystemTimeZone.GetTimeZoneData, X0, X1, X2, X3
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {582}
	068 Move X8, [X22]
	069 Compare X8, 0
	070 JumpIfEqual {597}
	071 Move W9, [X8+24]
	072 Compare W9, 0
	073 JumpIfEqual {598}
	074 Move X23, 0xDE3000
	075 Move X23, [X23+2544]
	076 Move X20, [X8+32]
	077 Move X0, [X23]
	078 Move W9, [X0+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Add X0, X31, 288
	083 Move X1, X20
	084 Move X2, X31
	085 Call DateTime..ctor, X0, X1
	086 Move X8, [X22]
	087 Compare X8, 0
	088 JumpIfEqual {597}
	089 Move W9, [X8+24]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X1, [X8+40]
	092 Add X0, X31, 280
	093 Move X2, X31
	094 Call DateTime..ctor, X0, X1
	095 Move X8, [X22]
	096 Compare X8, 0
	097 JumpIfEqual {597}
	098 Move W9, [X8+24]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X24, 0xDE4000
	101 Move X24, [X24+1392]
	102 Move X29, [X8+56]
	103 Move X0, [X24]
	104 Move W9, [X0+224]
	105 Compare W9, 0
	106 JumpIfNotEqual {111}
	107 Call 0x1C17DFC
	108 Move X8, [X22]
	109 Compare X8, 0
	110 JumpIfEqual {597}
	111 Move W9, [X8+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X8, [X8+56]
	114 Compare X8, 0
	115 JumpIfEqual {582}
	116 Move X0, [X23]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {121}
	120 Call 0x1C17DFC
	121 Add X0, X31, 288
	122 Move X1, X31
	123 Call DateTime.get_TimeOfDay, X0
	124 Move [X31+248], X0
	125 Add X0, X31, 280
	126 Move X1, X31
	127 Call DateTime.get_TimeOfDay, X0
	128 Move X8, [X24]
	129 Move X22, X0
	130 Move W9, [X8+224]
	131 Compare W9, 0
	132 JumpIfNotEqual {135}
	133 Move X0, X8
	134 Call 0x1C17DFC
	135 Add X0, X31, 248
	136 Move X1, X22
	137 Move X2, X31
	138 Call TimeSpan.Equals, X0, X1
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfNotEqual {183}
	143 Move X0, [X23]
	144 Move W8, [X0+224]
	145 Compare W8, 0
	146 JumpIfNotEqual {148}
	147 Call 0x1C17DFC
	148 Add X0, X31, 288
	149 Move X1, X31
	150 Call DateTime.get_Month, X0
	151 Move [X31+244], W0
	152 Add X0, X31, 280
	153 Move X1, X31
	154 Call DateTime.get_Month, X0
	155 Move W1, W0
	156 Add X0, X31, 244
	157 Move X2, X31
	158 Call Int32.Equals, X0, X1
	159 Move TEMP, X0
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfNotEqual {183}
	163 Move X0, [X23]
	164 Move W8, [X0+224]
	165 Compare W8, 0
	166 JumpIfNotEqual {168}
	167 Call 0x1C17DFC
	168 Add X0, X31, 288
	169 Move X1, X31
	170 Call DateTime.get_Day, X0
	171 Move [X31+244], W0
	172 Add X0, X31, 280
	173 Move X1, X31
	174 Call DateTime.get_Day, X0
	175 Move W1, W0
	176 Add X0, X31, 244
	177 Move X2, X31
	178 Call Int32.Equals, X0, X1
	179 Move TEMP, X0
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfEqual {582}
	183 Move X0, [X23]
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {188}
	187 Call 0x1C17DFC
	188 Add X0, X31, 272
	189 Move W2, 1
	190 Move W3, 1
	191 Move W1, W21
	192 Move W4, W31
	193 Move W5, W31
	194 Move W6, W31
	195 Move W7, W31
	196 Add X27, X31, 160
	197 Move [X31], X31
	198 Call DateTime..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	199 Move W1, 12
	200 Move W0, W21
	201 Move X2, X31
	202 Call DateTime.DaysInMonth, X0, X1
	203 Move W3, W0
	204 Add X0, X31, 264
	205 Move W2, 12
	206 Move W1, W21
	207 Move X4, X31
	208 Call DateTime..ctor, X0, X1, X2, X3
	209 Move W1, 12
	210 Move W0, W21
	211 Move X2, X31
	212 Call DateTime.DaysInMonth, X0, X1
	213 Move W3, W0
	214 Add X0, X31, 256
	215 Move W2, 12
	216 Move W4, 23
	217 Move W5, 59
	218 Move W6, 59
	219 Move W7, 999
	220 Move W1, W21
	221 Move [X31], X31
	222 Call DateTime..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	223 Move W8, [X31+300]
	224 Compare W8, 0
	225 JumpIfEqual {348}
	226 Add X0, X31, 216
	227 Move W1, 1
	228 Move W2, 1
	229 Move W3, 1
	230 Move X4, X31
	231 Move [X31+216], X31
	232 Move W28, 1
	233 Call DateTime..ctor, X0, X1, X2, X3
	234 Move X22, [X31+216]
	235 Move W1, 1
	236 Move W2, 1
	237 Move W3, 1
	238 Move X0, X22
	239 Move W4, W31
	240 Move [X31+224], W31
	241 Move [X27+67], W31
	242 Call TransitionTime.ValidateTransitionTime, X0, X1, X2, X3, X4
	243 Add X0, X31, 208
	244 Move W1, 1
	245 Move W2, 1
	246 Move W3, 1
	247 Move X4, X31
	248 Move [X31+208], X31
	249 Call DateTime..ctor, X0, X1, X2, X3
	250 Move X8, [X31+208]
	251 Move X0, [X23]
	252 Move [X31+232], X8
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 Add X0, X31, 288
	258 Move X1, X31
	259 Call DateTime.get_TimeOfDay, X0
	260 Move X1, X0
	261 Add X0, X31, 232
	262 Move X2, X31
	263 Call DateTime.Add, X0, X1
	264 Move X23, X0
	265 Add X0, X31, 288
	266 Move X1, X31
	267 Call DateTime.get_Month, X0
	268 Move W24, W0
	269 Add X0, X31, 288
	270 Move X1, X31
	271 Call DateTime.get_Day, X0
	272 Move W25, W0
	273 Move W2, 1
	274 Move X0, X23
	275 Move W1, W24
	276 Move W3, W25
	277 Move W4, W31
	278 Call TransitionTime.ValidateTransitionTime, X0, X1, X2, X3, X4
	279 Add X0, X31, 152
	280 Move W2, 1
	281 Move W3, 1
	282 Move W1, W21
	283 Move X4, X31
	284 Move [X31+152], X31
	285 Call DateTime..ctor, X0, X1, X2, X3
	286 Add X0, X31, 288
	287 Move X1, X31
	288 Call DateTime.get_Year, X0
	289 Move W21, W0
	290 Add X0, X31, 288
	291 Move X1, X31
	292 Call DateTime.get_Month, X0
	293 Move W26, W0
	294 Add X0, X31, 288
	295 Move X1, X31
	296 Call DateTime.get_Day, X0
	297 Move W3, W0
	298 Add X0, X31, 144
	299 Move W1, W21
	300 Move W2, W26
	301 Move X4, X31
	302 Move [X31+144], X31
	303 Call DateTime..ctor, X0, X1, X2, X3
	304 Move X1, [X31+144]
	305 Move X0, [X31+152]
	306 Move W9, [X31+224]
	307 NotImplemented "Instruction LDUR not yet implemented."
	308 Move W8, 257
	309 NotImplemented "Instruction MOVK not yet implemented."
	310 Add X3, X31, 120
	311 Add X4, X31, 96
	312 Move X2, X29
	313 Move [X31+96], X23
	314 Move [X31+136], W28
	315 Move [X31+104], W24
	316 Move [X31+105], W28
	317 Move [X31+106], W25
	318 Move [X31+107], W31
	319 Move [X31+108], W31
	320 Move [X31+112], W28
	321 Move [X31+113], W31
	322 Move [X31+120], X22
	323 Move [X31+128], X8
	324 Move [X31+137], W9
	325 Move [X31+140], W10
	326 Move [X31+116], W31
	327 Call AdjustmentRule.CreateAdjustmentRule, X0, X1, X2, X3, X4
	328 Compare X19, 0
	329 JumpIfEqual {597}
	330 Move X20, 0xE16000
	331 Move X20, [X20+2920]
	332 Move W10, [X19+28]
	333 Move X8, [X19+16]
	334 Move X9, [X20]
	335 Add W10, W10, 1
	336 Move [X19+28], W10
	337 Compare X8, 0
	338 JumpIfEqual {597}
	339 NotImplemented "Instruction LDRSW not yet implemented."
	340 Move W11, [X8+24]
	341 Move X1, X0
	342 Move [X31+16], X29
	343 NotImplemented "Instruction CMP not yet implemented."
	344 Add W9, W10, 1
	345 Add X8, X8, X10
	346 Move [X19+24], W9
	347 Move [X8+32], X1
	348 Add X0, X31, 216
	349 Move W1, 1
	350 Move W2, 1
	351 Move W3, 1
	352 Move X4, X31
	353 Move [X31+216], X31
	354 Move W28, 1
	355 Call DateTime..ctor, X0, X1, X2, X3
	356 Move X8, [X31+216]
	357 Move X0, [X23]
	358 Move [X31+232], X8
	359 Move W8, [X0+224]
	360 Compare W8, 0
	361 JumpIfNotEqual {363}
	362 Call 0x1C17DFC
	363 Add X0, X31, 288
	364 Move X1, X31
	365 Call DateTime.get_TimeOfDay, X0
	366 Move X1, X0
	367 Add X0, X31, 232
	368 Move X2, X31
	369 Call DateTime.Add, X0, X1
	370 Move X21, X0
	371 Add X0, X31, 288
	372 Move X1, X31
	373 Call DateTime.get_Month, X0
	374 Move W22, W0
	375 Add X0, X31, 288
	376 Move X1, X31
	377 Call DateTime.get_Day, X0
	378 Move W23, W0
	379 Move W2, 1
	380 Move X0, X21
	381 Move W1, W22
	382 Move W3, W23
	383 Move W4, W31
	384 Call TransitionTime.ValidateTransitionTime, X0, X1, X2, X3, X4
	385 Add X0, X31, 208
	386 Move W1, 1
	387 Move W2, 1
	388 Move W3, 1
	389 Move X4, X31
	390 Move [X31+208], X31
	391 Call DateTime..ctor, X0, X1, X2, X3
	392 Move X8, [X31+208]
	393 Add X0, X31, 280
	394 Move X1, X31
	395 Move [X31+232], X8
	396 Call DateTime.get_TimeOfDay, X0
	397 Move X1, X0
	398 Add X0, X31, 232
	399 Move X2, X31
	400 Call DateTime.Add, X0, X1
	401 Move X24, X0
	402 Add X0, X31, 280
	403 Move X1, X31
	404 Call DateTime.get_Month, X0
	405 Move W25, W0
	406 Add X0, X31, 280
	407 Move X1, X31
	408 Call DateTime.get_Day, X0
	409 Move W26, W0
	410 Move W2, 1
	411 Move X0, X24
	412 Move W1, W25
	413 Move W3, W26
	414 Move W4, W31
	415 Call TransitionTime.ValidateTransitionTime, X0, X1, X2, X3, X4
	416 Move X1, [X31+264]
	417 Move X0, [X31+272]
	418 Add X3, X31, 184
	419 Add X4, X31, 160
	420 Move X2, X29
	421 Move [X31+184], X21
	422 Move [X31+192], W22
	423 Move [X31+193], W28
	424 Move [X31+194], W23
	425 Move [X31+195], W31
	426 Move [X31+196], W31
	427 Move [X31+200], W28
	428 Move [X27+41], W31
	429 Move [X31+204], W31
	430 Move [X31+160], X24
	431 Move [X31+168], W25
	432 Move [X31+169], W28
	433 Move [X31+170], W26
	434 Move [X31+171], W31
	435 Move [X31+172], W31
	436 Move [X31+176], W28
	437 Move [X31+180], W31
	438 Move [X27+17], W31
	439 Call AdjustmentRule.CreateAdjustmentRule, X0, X1, X2, X3, X4
	440 Compare X19, 0
	441 JumpIfEqual {597}
	442 Move X9, 0xE15000
	443 Move X9, [X9+2920]
	444 Move W10, [X19+28]
	445 Move X8, [X19+16]
	446 Move X9, [X9]
	447 Move X8, [X9+32]
	448 Move X0, X19
	449 Move X8, [X8+192]
	450 Move X2, [X8+112]
	451 Call List`1<Object>.AddWithResize, X0, X1
	452 Add X0, X31, 88
	453 Move W1, 1
	454 Move W2, 1
	455 Move W3, 1
	456 Move X4, X31
	457 Move [X31+88], X31
	458 Move W29, 1
	459 Call DateTime..ctor, X0, X1, X2, X3
	460 Move X8, [X31+88]
	461 Add X0, X31, 280
	462 Move X1, X31
	463 Move [X31+232], X8
	464 Call DateTime.get_TimeOfDay, X0
	465 Move X1, X0
	466 Add X0, X31, 232
	467 Move X2, X31
	468 Call DateTime.Add, X0, X1
	469 Move X21, X0
	470 Add X0, X31, 280
	471 Move X1, X31
	472 Call DateTime.get_Month, X0
	473 Move W22, W0
	474 Add X0, X31, 280
	475 Move X1, X31
	476 Call DateTime.get_Day, X0
	477 Move W23, W0
	478 Move W2, 1
	479 Move X0, X21
	480 Move W1, W22
	481 Move W3, W23
	482 Move W4, W31
	483 Call TransitionTime.ValidateTransitionTime, X0, X1, X2, X3, X4
	484 Add X0, X31, 80
	485 Move W1, 1
	486 Move W2, 1
	487 Move W3, 1
	488 Move X4, X31
	489 Move [X31+80], X31
	490 Call DateTime..ctor, X0, X1, X2, X3
	491 Move X8, [X31+80]
	492 Add X0, X31, 256
	493 Move X1, X31
	494 Move [X31+232], X8
	495 Call DateTime.get_TimeOfDay, X0
	496 Move X1, X0
	497 Add X0, X31, 232
	498 Move X2, X31
	499 Call DateTime.Add, X0, X1
	500 Move X24, X0
	501 Add X0, X31, 256
	502 Move X1, X31
	503 Call DateTime.get_Month, X0
	504 Move W25, W0
	505 Add X0, X31, 256
	506 Move X1, X31
	507 Call DateTime.get_Day, X0
	508 Move W26, W0
	509 Move W2, 1
	510 Move X0, X24
	511 Move W1, W25
	512 Move W3, W26
	513 Move W4, W31
	514 Call TransitionTime.ValidateTransitionTime, X0, X1, X2, X3, X4
	515 Add X0, X31, 288
	516 Move X1, X31
	517 Call DateTime.get_Year, X0
	518 Move W27, W0
	519 Add X0, X31, 288
	520 Move X1, X31
	521 Call DateTime.get_Month, X0
	522 Move W28, W0
	523 Add X0, X31, 288
	524 Move X1, X31
	525 Call DateTime.get_Day, X0
	526 Move W3, W0
	527 Add X0, X31, 72
	528 Move W1, W27
	529 Move W2, W28
	530 Move X4, X31
	531 Move [X31+72], X31
	532 Call DateTime..ctor, X0, X1, X2, X3
	533 Move X8, [X31+72]
	534 Add X0, X31, 232
	535 Move D0, 1
	536 Move X1, X31
	537 Move [X31+232], X8
	538 Call DateTime.AddDays, X0, V0
	539 Move X1, [X31+264]
	540 Move X2, [X31+16]
	541 Add X3, X31, 48
	542 Add X4, X31, 24
	543 Move [X31+48], X21
	544 Move [X31+56], W22
	545 Move [X31+57], W29
	546 Move [X31+58], W23
	547 Move [X31+59], W31
	548 Move [X31+60], W31
	549 Move [X31+64], W29
	550 Move [X31+65], W31
	551 Move [X31+68], W31
	552 Move [X31+24], X24
	553 Move [X31+32], W25
	554 Move [X31+33], W29
	555 Move [X31+34], W26
	556 Move [X31+35], W31
	557 Move [X31+36], W31
	558 Move [X31+40], W29
	559 Move [X31+41], W31
	560 Move [X31+44], W31
	561 Call AdjustmentRule.CreateAdjustmentRule, X0, X1, X2, X3, X4
	562 Move W10, [X19+28]
	563 Move X8, [X19+16]
	564 Move X9, [X20]
	565 Add W10, W10, 1
	566 Move [X19+28], W10
	567 Compare X8, 0
	568 JumpIfEqual {597}
	569 NotImplemented "Instruction LDRSW not yet implemented."
	570 Move W11, [X8+24]
	571 Move X1, X0
	572 NotImplemented "Instruction CMP not yet implemented."
	573 Add W9, W10, 1
	574 Add X8, X8, X10
	575 Move [X19+24], W9
	576 Move [X8+32], X1
	577 Move X8, [X9+32]
	578 Move X0, X19
	579 Move X8, [X8+192]
	580 Move X2, [X8+112]
	581 Call List`1<Object>.AddWithResize, X0, X1
	582 Move X0, X19
	583 Move X20, [X31+384]
	584 Move X19, [X31+392]
	585 Move X22, [X31+368]
	586 Move X21, [X31+376]
	587 Move X24, [X31+352]
	588 Move X23, [X31+360]
	589 Move X26, [X31+336]
	590 Move X25, [X31+344]
	591 Move X28, [X31+320]
	592 Move X27, [X31+328]
	593 Move X29, [X31+304]
	594 Move X30, [X31+312]
	595 Add X31, X31, 400
	596 Return X0
	597 Call 0x1C17F20
	598 Call 0x1C17F28

Method: System.TimeZoneInfo CreateLocalUnity()

Disassembly:
	0x0330B2A8 LDR X1, [X10 + 0x28]
	0x0330B2AC TBZ X1, 0x0, 0x330B2D0
	0x0330B2B0 ADD W9, W9, 0x1
	0x0330B2B4 CMP W8, W9
	0x0330B2B8 B.NE 0x330B298
	0x0330B2BC CBZ X8, 0x330B2E8
	0x0330B2C0 CBZ W8, 0x330B2E0
	0x0330B2C4 LDR X1, [X0 + 0x28]
	0x0330B2C8 ADD X8, X0, 0x20
	0x0330B2CC B 0x330B2D4
	0x0330B2D0 ADD X8, X10, 0x20
	0x0330B2D4 LDR X0, [X8]
	0x0330B2D8 LDP X30, X19, [X31], #0x10
	0x0330B2DC RET
	0x0330B2E0 BL 0x1C16F28
	0x0330B2E4 BL 0x1C16F20
	0x0330B2E8 ADRP X0, 0xE1C000
	0x0330B2EC LDR X0, [X0 + 0xA68]
	0x0330B2F0 BL 0x1C16D08
	0x0330B2F4 BL 0x1C16F10
	0x0330B2F8 MOV X19, X0
	0x0330B2FC ADRP X0, 0xE1C000
	0x0330B300 LDR X0, [X0 + 0xB70]
	0x0330B304 BL 0x1C16D08
	0x0330B308 MOV X1, X0
	0x0330B30C MOV X0, X19
	0x0330B310 MOV X2, X31
	0x0330B314 BL 0x337E04C
	0x0330B318 ADRP X0, 0xE1C000
	0x0330B31C LDR X0, [X0 + 0xB78]
	0x0330B320 BL 0x1C16D08
	0x0330B324 MOV X1, X0
	0x0330B328 MOV X0, X19
	0x0330B32C BL 0x1C16DEC
	0x0330B330 STR X30, [X31 - 0x30]!
	0x0330B334 STP X22, X21, [X31 + 0x10]
	0x0330B338 STP X20, X19, [X31 + 0x20]
	0x0330B33C ADRP X22, 0x10D1000
	0x0330B340 ADRP X21, 0xDEA000
	0x0330B344 LDRB W8, [X22 + 0xB12]
	0x0330B348 LDR X21, [X21 + 0x570]
	0x0330B34C MOV X19, X1
	0x0330B350 MOV X20, X0
	0x0330B354 TBNZ X8, 0x0, 0x330B36C
	0x0330B358 ADRP X0, 0xDEA000
	0x0330B35C LDR X0, [X0 + 0x570]
	0x0330B360 BL 0x1C16CF4
	0x0330B364 MOVZ W8, 0x1
	0x0330B368 STRB W8, [X22 + 0xB12]
	0x0330B36C LDR X0, [X21]
	0x0330B370 LDR W8, [X0 + 0xE0]
	0x0330B374 CBNZ W8, 0x330B37C
	0x0330B378 BL 0x1C16DFC
	0x0330B37C MOV X0, X20
	0x0330B380 MOV X1, X19
	0x0330B384 MOV X2, X31
	0x0330B388 BL 0x3394C08
	0x0330B38C MOVZ X8, 0x5A0B
	0x0330B390 MOVK X8, 0x60F80000
	0x0330B394 MOVZ X9, 0x1000
	0x0330B398 MOVK X8, 0x26E
	0x0330B39C MOVK X9, 0x84F60000
	0x0330B3A0 MOVK X8, 0x97CD0000
	0x0330B3A4 MOVK X9, 0x728
	0x0330B3A8 MADD X8, X0, X8, X9
	0x0330B3AC MOVZ X9, 0xF611
	0x0330B3B0 MOVK X9, 0x28840000
	0x0330B3B4 EXTR X8, X8, X8, 0x9
	0x0330B3B8 MOVK X9, 0x7
	0x0330B3BC CMP X8, X9
	0x0330B3C0 STR X0, [X31 + 0x8]
	0x0330B3C4 B.CC 0x330B410
	0x0330B3C8 LDR X0, [X21]
	0x0330B3CC LDR W8, [X0 + 0xE0]
	0x0330B3D0 CBNZ W8, 0x330B3D8
	0x0330B3D4 BL 0x1C16DFC
	0x0330B3D8 ADD X0, X31, 0x8
	0x0330B3DC MOV X1, X31
	0x0330B3E0 BL 0x33940AC
	0x0330B3E4 MOV W19, W0
	0x0330B3E8 ADD X0, X31, 0x8
	0x0330B3EC MOV X1, X31
	0x0330B3F0 BL 0x339413C
	0x0330B3F4 MOV W2, W0
	0x0330B3F8 ADD X0, X31, 0x8
	0x0330B3FC MOV W1, W19
	0x0330B400 MOV W3, W31
	0x0330B404 MOV X4, X31
	0x0330B408 BL 0x3393ED0
	0x0330B40C LDR X0, [X31 + 0x8]
	0x0330B410 LDP X20, X19, [X31 + 0x20]
	0x0330B414 LDP X22, X21, [X31 + 0x10]
	0x0330B418 LDR X30, [X31], #0x30
	0x0330B41C RET
	0x0330B420 SUB X31, X31, 0xA0
	0x0330B424 STP X30, X27, [X31 + 0x50]
	0x0330B428 STP X26, X25, [X31 + 0x60]
	0x0330B42C STP X24, X23, [X31 + 0x70]
	0x0330B430 STP X22, X21, [X31 + 0x80]
	0x0330B434 STP X20, X19, [X31 + 0x90]
	0x0330B438 ADRP X27, 0x10D1000
	0x0330B43C ADRP X26, 0xE1C000
	0x0330B440 LDRB W8, [X27 + 0xB58]
	0x0330B444 LDR X26, [X26 + 0xB80]
	0x0330B448 MOV W23, W6
	0x0330B44C MOV X19, X5
	0x0330B450 MOV X24, X4
	0x0330B454 MOV X25, X3
	0x0330B458 MOV X20, X2
	0x0330B45C MOV X21, X1
	0x0330B460 MOV X22, X0
	0x0330B464 TBNZ X8, 0x0, 0x330B47C
	0x0330B468 ADRP X0, 0xE1C000
	0x0330B46C LDR X0, [X0 + 0xB80]
	0x0330B470 BL 0x1C16CF4
	0x0330B474 MOVZ W8, 0x1
	0x0330B478 STRB W8, [X27 + 0xB58]
	0x0330B47C LDR X8, [X25 + 0x10]
	0x0330B480 LDR V0, [X25]
	0x0330B484 LDR X0, [X26]
	0x0330B488 STR X8, [X31 + 0x40]
	0x0330B48C STR V0, [X31 + 0x3]
	0x0330B490 LDR X8, [X24 + 0x10]
	0x0330B494 LDR V0, [X24]
	0x0330B498 STR X8, [X31 + 0x20]
	0x0330B49C STR V0, [X31 + 0x1]
	0x0330B4A0 BL 0x1C16F10
	0x0330B4A4 AND W7, W23, 0x1
	0x0330B4A8 ADD X4, X31, 0x30
	0x0330B4AC ADD X5, X31, 0x10
	0x0330B4B0 MOV X1, X22
	0x0330B4B4 MOV X2, X21
	0x0330B4B8 MOV X3, X20
	0x0330B4BC MOV X6, X19
	0x0330B4C0 MOV X24, X0
	0x0330B4C4 BL 0x33126DC
	0x0330B4C8 MOV X0, X24
	0x0330B4CC LDP X20, X19, [X31 + 0x90]
	0x0330B4D0 LDP X22, X21, [X31 + 0x80]
	0x0330B4D4 LDP X24, X23, [X31 + 0x70]
	0x0330B4D8 LDP X26, X25, [X31 + 0x60]
	0x0330B4DC LDP X30, X27, [X31 + 0x50]
	0x0330B4E0 ADD X31, X31, 0xA0
	0x0330B4E4 RET
	0x0330B4E8 STR X30, [X31 - 0x30]!
	0x0330B4EC STP X22, X21, [X31 + 0x10]
	0x0330B4F0 STP X20, X19, [X31 + 0x20]
	0x0330B4F4 ADRP X21, 0x10D1000
	0x0330B4F8 ADRP X22, 0xE1C000
	0x0330B4FC LDRB W8, [X21 + 0xB4B]
	0x0330B500 LDR X22, [X22 + 0xA38]
	0x0330B504 MOV X19, X1
	0x0330B508 MOV X20, X0
	0x0330B50C TBNZ X8, 0x0, 0x330B524
	0x0330B510 ADRP X0, 0xE1C000
	0x0330B514 LDR X0, [X0 + 0xA38]
	0x0330B518 BL 0x1C16CF4
	0x0330B51C MOVZ W8, 0x1
	0x0330B520 STRB W8, [X21 + 0xB4B]
	0x0330B524 LDR X0, [X22]
	0x0330B528 LDR W8, [X0 + 0xE0]
	0x0330B52C CBNZ W8, 0x330B534
	0x0330B530 BL 0x1C16DFC
	0x0330B534 MOV X0, X20
	0x0330B538 MOV X1, X19
	0x0330B53C BL 0x33118C0
	0x0330B540 BL 0x3311798
	0x0330B544 LDP X20, X19, [X31 + 0x20]
	0x0330B548 LDP X22, X21, [X31 + 0x10]
	0x0330B54C ORN W8, W31, W0, 0x0
	0x0330B550 AND W0, W8, 0x1
	0x0330B554 LDR X30, [X31], #0x30
	0x0330B558 RET
	0x0330B55C SUB X31, X31, 0xC0
	0x0330B560 STR X30, [X31 + 0x80]
	0x0330B564 STP X24, X23, [X31 + 0x90]
	0x0330B568 STP X22, X21, [X31 + 0xA0]
	0x0330B56C STP X20, X19, [X31 + 0xB0]
	0x0330B570 ADRP X21, 0x10D1000
	0x0330B574 ADRP X23, 0xE1C000
	0x0330B578 LDRB W8, [X21 + 0xB4C]
	0x0330B57C LDR X23, [X23 + 0xA38]
	0x0330B580 MOV X19, X1
	0x0330B584 MOV X20, X0
	0x0330B588 TBNZ X8, 0x0, 0x330B5AC
	0x0330B58C ADRP X0, 0xDEA000
	0x0330B590 LDR X0, [X0 + 0x570]
	0x0330B594 BL 0x1C16CF4
	0x0330B598 ADRP X0, 0xE1C000
	0x0330B59C LDR X0, [X0 + 0xA38]
	0x0330B5A0 BL 0x1C16CF4
	0x0330B5A4 MOVZ W8, 0x1
	0x0330B5A8 STRB W8, [X21 + 0xB4C]
	0x0330B5AC LDR X0, [X23]
	0x0330B5B0 ADRP X24, 0xDEA000
	0x0330B5B4 LDR X21, [X19]
	0x0330B5B8 LDR W8, [X0 + 0xE0]
	0x0330B5BC LDR X24, [X24 + 0x570]
	0x0330B5C0 CBNZ W8, 0x330B5C8
	0x0330B5C4 BL 0x1C16DFC
	0x0330B5C8 MOV X0, X20
	0x0330B5CC MOV X1, X21
	0x0330B5D0 BL 0x33118C0
	0x0330B5D4 LDR X8, [X24]
	0x0330B5D8 MOV X20, X0
	0x0330B5DC LDR W9, [X8 + 0xE0]
	0x0330B5E0 CBNZ W9, 0x330B5F0
	0x0330B5E4 MOV X0, X8
	0x0330B5E8 BL 0x1C16DFC
	0x0330B5EC LDR X8, [X24]
	0x0330B5F0 LDR X9, [X23]
	0x0330B5F4 LDR X8, [X8 + 0xB8]
	0x0330B5F8 MOV X0, X20
	0x0330B5FC MOV X2, X31
	0x0330B600 LDR X9, [X9 + 0xB8]
	0x0330B604 LDR X21, [X8]
	0x0330B608 LDR X1, [X9 + 0x20]
	0x0330B60C BL 0x3394D08
	0x0330B610 LDR X8, [X23]
	0x0330B614 MOV W22, W0
	0x0330B618 LDR W9, [X8 + 0xE0]
	0x0330B61C CBNZ W9, 0x330B62C
	0x0330B620 MOV X0, X8
	0x0330B624 BL 0x1C16DFC
	0x0330B628 LDR X8, [X23]
	0x0330B62C LDR X8, [X8 + 0xB8]
	0x0330B630 TBZ X22, 0x0, 0x330B648
	0x0330B634 LDR X0, [X24]
	0x0330B638 LDR X21, [X8 + 0x20]
	0x0330B63C LDR W9, [X0 + 0xE0]
	0x0330B640 CBNZ W9, 0x330B6A0
	0x0330B644 B 0x330B69C
	0x0330B648 LDR X0, [X24]
	0x0330B64C LDR X22, [X8 + 0x28]
	0x0330B650 LDR W9, [X0 + 0xE0]
	0x0330B654 CBNZ W9, 0x330B65C
	0x0330B658 BL 0x1C16DFC
	0x0330B65C MOV X0, X20
	0x0330B660 MOV X1, X22
	0x0330B664 MOV X2, X31
	0x0330B668 BL 0x3394CF0
	0x0330B66C TBZ X0, 0x0, 0x330B6B4
	0x0330B670 LDR X0, [X23]
	0x0330B674 LDR W8, [X0 + 0xE0]
	0x0330B678 CBNZ W8, 0x330B684
	0x0330B67C BL 0x1C16DFC
	0x0330B680 LDR X0, [X23]
	0x0330B684 LDR X8, [X24]
	0x0330B688 LDR X9, [X0 + 0xB8]
	0x0330B68C LDR W10, [X8 + 0xE0]
	0x0330B690 LDR X21, [X9 + 0x28]
	0x0330B694 CBNZ W10, 0x330B6A0
	0x0330B698 MOV X0, X8
	0x0330B69C BL 0x1C16DFC
	0x0330B6A0 MOV X0, X21
	0x0330B6A4 MOV X1, X20
	0x0330B6A8 MOV X2, X31
	0x0330B6AC BL 0x3394C08
	0x0330B6B0 MOV X21, X0
	0x0330B6B4 LDR X0, [X24]
	0x0330B6B8 LDR W8, [X0 + 0xE0]
	0x0330B6BC CBNZ W8, 0x330B6C8
	0x0330B6C0 BL 0x1C16DFC
	0x0330B6C4 LDR X0, [X24]
	0x0330B6C8 LDR X8, [X0 + 0xB8]
	0x0330B6CC MOV X0, X21
	0x0330B6D0 MOV X2, X31
	0x0330B6D4 LDR X1, [X8]
	0x0330B6D8 BL 0x3394CE4
	0x0330B6DC TBZ X0, 0x0, 0x330B780
	0x0330B6E0 LDR X8, [X19]
	0x0330B6E4 CBZ X8, 0x330B798
	0x0330B6E8 LDUR V0, [X8 + 0x28]
	0x0330B6EC LDR X9, [X8 + 0x38]
	0x0330B6F0 LDP X20, X22, [X8 + 0x10]
	0x0330B6F4 LDR X23, [X8 + 0x20]
	0x0330B6F8 STR V0, [X31 + 0x6]
	0x0330B6FC STR X9, [X31 + 0x70]
	0x0330B700 LDR X9, [X8 + 0x50]
	0x0330B704 LDR V0, [X8 + 0x4]
	0x0330B708 LDR X0, [X24]
	0x0330B70C STR X9, [X31 + 0x50]
	0x0330B710 STR V0, [X31 + 0x4]
	0x0330B714 LDR W9, [X0 + 0xE0]
	0x0330B718 LDR X24, [X8 + 0x58]
	0x0330B71C CBNZ W9, 0x330B724
	0x0330B720 BL 0x1C16DFC
	0x0330B724 MOV X0, X24
	0x0330B728 MOV X1, X21
	0x0330B72C MOV X2, X31
	0x0330B730 BL 0x3394C70
	0x0330B734 LDR X8, [X19]
	0x0330B738 CBZ X8, 0x330B798
	0x0330B73C LDRB W6, [X8 + 0x60]
	0x0330B740 LDR V0, [X31 + 0x6]
	0x0330B744 LDR X8, [X31 + 0x70]
	0x0330B748 LDR V1, [X31 + 0x4]
	0x0330B74C LDR X9, [X31 + 0x50]
	0x0330B750 MOV X5, X0
	0x0330B754 ADD X3, X31, 0x20
	0x0330B758 ADD X4, X31, 0x0
	0x0330B75C MOV X0, X20
	0x0330B760 MOV X1, X22
	0x0330B764 MOV X2, X23
	0x0330B768 STR V0, [X31 + 0x2]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X22, 0x10D2000
	015 Move X21, 0xE1D000
	016 Move X19, 0xE1D000
	017 Move X20, 0xDEA000
	018 Move W8, [X22+2895]
	019 Move X21, [X21+2656]
	020 Move X19, [X19+2648]
	021 Move X20, [X20+2544]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {79}
	026 Move X0, 0xDEB000
	027 Move X0, [X0+368]
	028 Call 0x1C17CF4
	029 Move X0, 0xE1D000
	030 Move X0, [X0+2832]
	031 Call 0x1C17CF4
	032 Move X0, 0xDEA000
	033 Move X0, [X0+2544]
	034 Call 0x1C17CF4
	035 Move X0, 0xE1D000
	036 Move X0, [X0+2840]
	037 Call 0x1C17CF4
	038 Move X0, 0xE1D000
	039 Move X0, [X0+2848]
	040 Call 0x1C17CF4
	041 Move X0, 0xE1D000
	042 Move X0, [X0+2640]
	043 Call 0x1C17CF4
	044 Move X0, 0xE1D000
	045 Move X0, [X0+2648]
	046 Call 0x1C17CF4
	047 Move X0, 0xE1D000
	048 Move X0, [X0+2856]
	049 Call 0x1C17CF4
	050 Move X0, 0xE1D000
	051 Move X0, [X0+2656]
	052 Call 0x1C17CF4
	053 Move X0, 0xDEB000
	054 Move X0, [X0+1392]
	055 Call 0x1C17CF4
	056 Move X0, 0xE1D000
	057 Move X0, [X0+2616]
	058 Call 0x1C17CF4
	059 Move X0, 0xE1D000
	060 Move X0, [X0+2864]
	061 Call 0x1C17CF4
	062 Move X0, 0xE1D000
	063 Move X0, [X0+2872]
	064 Call 0x1C17CF4
	065 Move X0, 0xE1D000
	066 Move X0, [X0+2880]
	067 Call 0x1C17CF4
	068 Move X0, 0xE1D000
	069 Move X0, [X0+2888]
	070 Call 0x1C17CF4
	071 Move X0, 0xE1D000
	072 Move X0, [X0+2624]
	073 Call 0x1C17CF4
	074 Move X0, 0xE1D000
	075 Move X0, [X0+2896]
	076 Call 0x1C17CF4
	077 Move W8, 1
	078 Move [X22+2895], W8
	079 Move X0, [X21]
	080 Move [X31+32], X31
	081 Move [X31+40], X31
	082 Move [X31+28], W31
	083 Move [X31+16], X31
	084 Call 0x1C17F10
	085 Move X1, [X19]
	086 Move X19, X0
	087 Call List`1<Object>..ctor, X0
	088 Move X0, [X20]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Move X27, 0xDEB000
	094 Move X28, 0xDEB000
	095 Move X25, 0xE1D000
	096 Move X22, 0xE1D000
	097 Move X23, 0xE1D000
	098 Move X26, 0xE1D000
	099 Move X24, 0xE1D000
	100 Move X27, [X27+1392]
	101 Move X28, [X28+368]
	102 Move X25, [X25+2880]
	103 Move X22, [X22+2896]
	104 Move X23, [X23+2888]
	105 Move X26, [X26+2616]
	106 Move X24, [X24+2840]
	107 Move X0, X31
	108 Call DateTime.get_UtcNow
	109 Move [X31], X0
	110 Add X0, X31, 0
	111 Move X1, X31
	112 Call DateTime.get_Year, X0
	113 Move W21, W0
	114 Move W20, 2038
	115 Subtract W20, W20, 1
	116 Add X1, X31, 40
	117 Add X2, X31, 32
	118 Add X3, X31, 28
	119 Move W0, W20
	120 Move X4, X31
	121 Call CurrentSystemTimeZone.GetTimeZoneData, X0, X1, X2, X3
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {322}
	126 Move X8, [X31+40]
	127 Compare X8, 0
	128 JumpIfEqual {321}
	129 Move W9, [X8+24]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X29, [X8+56]
	132 Compare X29, 0
	133 JumpIfNotEqual {136}
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X20, X31
	136 Move X8, [X31+32]
	137 Compare X8, 0
	138 JumpIfEqual {321}
	139 Move W9, [X8+24]
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move X20, [X8+40]
	142 Add X1, X31, 40
	143 Add X2, X31, 32
	144 Add X3, X31, 28
	145 Move W0, W21
	146 Move X4, X31
	147 Call CurrentSystemTimeZone.GetTimeZoneData, X0, X1, X2, X3
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {322}
	152 Move X8, [X31+40]
	153 Compare X8, 0
	154 JumpIfEqual {321}
	155 Move W9, [X8+24]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move X0, [X27]
	158 Move X21, [X8+48]
	159 Move W9, [X0+224]
	160 Compare W9, 0
	161 JumpIfNotEqual {163}
	162 Call 0x1C17DFC
	163 Move X0, X21
	164 Move X1, X31
	165 Call TimeSpan.FromTicks, X0
	166 Move X8, [X27]
	167 Move [X31+16], X0
	168 Move X2, X31
	169 Move X8, [X8+184]
	170 Move X1, [X8]
	171 Call TimeSpan.op_GreaterThanOrEqual, X0, X1
	172 And W31, W0, 1
	173 Move X0, [X28]
	174 Move W8, 45
	175 Move W9, 43
	176 NotImplemented "Instruction CSEL not yet implemented."
	177 NotImplemented "Instruction STRH not yet implemented."
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1C17DFC
	182 Add X0, X31, 12
	183 Call Char.ToString, X0
	184 Move X8, [X27]
	185 Move X21, X0
	186 Move W9, [X8+224]
	187 Compare W9, 0
	188 JumpIfNotEqual {191}
	189 Move X0, X8
	190 Call 0x1C17DFC
	191 Move X1, [X25]
	192 Add X0, X31, 16
	193 Move X2, X31
	194 Call TimeSpan.ToString, X0, X1
	195 Move X8, [X22]
	196 Move X3, [X23]
	197 Move X2, X0
	198 Move X1, X21
	199 Move X0, X8
	200 Move X4, X31
	201 Call String.Concat, X0, X1, X2, X3
	202 Move X8, [X31+32]
	203 Compare X8, 0
	204 JumpIfEqual {321}
	205 Move X25, 0xE1D000
	206 Move W9, [X8+24]
	207 Move X25, [X25+2872]
	208 Compare W9, 0
	209 JumpIfEqual {340}
	210 Move X22, [X8+32]
	211 Move X21, X0
	212 Compare X20, 0
	213 JumpIfEqual {277}
	214 Compare X29, 0
	215 JumpIfEqual {281}
	216 Move W23, 1971
	217 Move X0, [X26]
	218 Move W8, [X0+224]
	219 Compare W8, 0
	220 JumpIfNotEqual {222}
	221 Call 0x1C17DFC
	222 Add X1, X31, 40
	223 Add X2, X31, 32
	224 Move W0, W23
	225 Call TimeZoneInfo.CreateAdjustmentRule, X0, X1, X2
	226 Compare X0, 0
	227 JumpIfEqual {321}
	228 Move W8, [X0+24]
	229 Move X1, X0
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Compare X19, 0
	232 JumpIfEqual {321}
	233 Move X2, [X24]
	234 Move X0, X19
	235 Call List`1<Object>.AddRange, X0, X1
	236 Add W23, W23, 1
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move X0, [X25]
	239 Move W8, [X0+224]
	240 Compare W8, 0
	241 JumpIfNotEqual {244}
	242 Call 0x1C17DFC
	243 Move X0, [X25]
	244 Move X8, [X0+184]
	245 Move X23, [X8+48]
	246 Compare X23, 0
	247 JumpIfNotEqual {269}
	248 Move W8, [X0+224]
	249 Compare W8, 0
	250 JumpIfNotEqual {253}
	251 Call 0x1C17DFC
	252 Move X0, [X25]
	253 Move X9, 0xE1D000
	254 Move X8, [X0+184]
	255 Move X9, [X9+2832]
	256 Move X24, [X8]
	257 Move X0, [X9]
	258 Call 0x1C17F10
	259 Move X8, 0xE1D000
	260 Move X8, [X8+2864]
	261 Move X1, X24
	262 Move X3, X31
	263 Move X23, X0
	264 Move X2, [X8]
	265 Call Comparison`1<Object>..ctor, X0, X1, X2
	266 Move X8, [X25]
	267 Move X8, [X8+184]
	268 Move [X8+48], X23
	269 Compare X19, 0
	270 JumpIfEqual {321}
	271 Move X8, 0xE1D000
	272 Move X8, [X8+2848]
	273 Move X0, X19
	274 Move X1, X23
	275 Move X2, [X8]
	276 Call List`1<Object>.Sort, X0, X1
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Move X20, [X8+40]
	279 Compare X29, 0
	280 JumpIfNotEqual {216}
	281 Compare X19, 0
	282 JumpIfEqual {321}
	283 Move X8, 0xE1D000
	284 Move X23, [X31+16]
	285 Move X8, [X8+2640]
	286 Move X0, X19
	287 Move X1, [X8]
	288 Call List`1<Object>.ToArray, X0
	289 Move X8, [X26]
	290 Move X19, X0
	291 Move W9, [X8+224]
	292 Compare W9, 0
	293 JumpIfNotEqual {296}
	294 Move X0, X8
	295 Call 0x1C17DFC
	296 Move X8, 0xE1D000
	297 Move X8, [X8+2624]
	298 NotImplemented "Instruction CMP not yet implemented."
	299 NotImplemented "Instruction CSET not yet implemented."
	300 Move X1, X23
	301 Move X0, [X8]
	302 Move X2, X21
	303 Move X3, X22
	304 Move X4, X20
	305 Move X5, X19
	306 Call TimeZoneInfo.CreateCustomTimeZone, X0, X1, X2, X3, X4, X5, X6
	307 Move X20, [X31+128]
	308 Move X19, [X31+136]
	309 Move X22, [X31+112]
	310 Move X21, [X31+120]
	311 Move X24, [X31+96]
	312 Move X23, [X31+104]
	313 Move X26, [X31+80]
	314 Move X25, [X31+88]
	315 Move X28, [X31+64]
	316 Move X27, [X31+72]
	317 Move X29, [X31+48]
	318 Move X30, [X31+56]
	319 Add X31, X31, 144
	320 Return X0
	321 Call 0x1C17F20
	322 Move X0, 0xDE9000
	323 Move X0, [X0+2880]
	324 Call 0x1C17D08
	325 Call 0x1C17F10
	326 Move X19, X0
	327 Move X0, 0xE1D000
	328 Move X0, [X0+2904]
	329 Call 0x1C17D08
	330 Move X1, X0
	331 Move X0, X19
	332 Move X2, X31
	333 Call NotSupportedException..ctor, X0, X1
	334 Move X0, 0xE1D000
	335 Move X0, [X0+2912]
	336 Call 0x1C17D08
	337 Move X1, X0
	338 Move X0, X19
	339 Call 0x1C17DEC
	340 Call 0x1C17F28

Method: System.Void .cctor()

Disassembly:
	0x0331337C MOV X0, X21
	0x03313380 MOV X1, X31
	0x03313384 BL 0x338C698
	0x03313388 LDR X1, [X22]
	0x0331338C MOV X2, X0
	0x03313390 MOV X0, X20
	0x03313394 MOV X3, X31
	0x03313398 BL 0x32A9880
	0x0331339C CBZ X0, 0x33133CC
	0x033133A0 ADRP X8, 0xDE0000
	0x033133A4 LDR X8, [X8 + 0xB58]
	0x033133A8 LDR X9, [X0]
	0x033133AC LDR X1, [X8]
	0x033133B0 LDR X8, [X9 + 0x40]
	0x033133B4 LDR X9, [X1 + 0x40]
	0x033133B8 CMP X8, X9
	0x033133BC B.NE 0x33133E4
	0x033133C0 BL 0x1C16E08
	0x033133C4 LDRB W8, [X0]
	0x033133C8 STRB W8, [X19 + 0x60]
	0x033133CC LDP X20, X19, [X31 + 0x40]
	0x033133D0 LDP X22, X21, [X31 + 0x30]
	0x033133D4 LDP X24, X23, [X31 + 0x20]
	0x033133D8 LDP X26, X25, [X31 + 0x10]
	0x033133DC LDR X30, [X31], #0x50
	0x033133E0 RET
	0x033133E4 BL 0x1C171E0
	0x033133E8 BL 0x1C16F20
	0x033133EC ADRP X0, 0xDE5000
	0x033133F0 LDR X0, [X0 + 0x528]
	0x033133F4 BL 0x1C16D08
	0x033133F8 BL 0x1C16F10
	0x033133FC MOV X19, X0
	0x03313400 ADRP X0, 0xE0A000
	0x03313404 LDR X0, [X0 + 0x2D8]
	0x03313408 BL 0x1C16D08
	0x0331340C MOV X1, X0
	0x03313410 MOV X0, X19
	0x03313414 BL 0x330E100
	0x03313418 ADRP X0, 0xE14000
	0x0331341C LDR X0, [X0 + 0xD80]
	0x03313420 BL 0x1C16D08
	0x03313424 MOV X1, X0
	0x03313428 MOV X0, X19
	0x0331342C BL 0x1C16DEC
	0x03313430 STR X30, [X31 - 0x20]!
	0x03313434 STP X20, X19, [X31 + 0x10]
	0x03313438 ADRP X19, 0x10C9000
	0x0331343C ADRP X20, 0xE14000
	0x03313440 LDRB W8, [X19 + 0xB5E]
	0x03313444 LDR X20, [X20 + 0xD88]
	0x03313448 TBNZ X8, 0x0, 0x3313460
	0x0331344C ADRP X0, 0xE14000
	0x03313450 LDR X0, [X0 + 0xD88]
	0x03313454 BL 0x1C16CF4
	0x03313458 MOVZ W8, 0x1
	0x0331345C STRB W8, [X19 + 0xB5E]
	0x03313460 LDR X0, [X20]
	0x03313464 BL 0x1C16D9C
	0x03313468 LDR X0, [X0]
	0x0331346C RET
	0x03313470 LDRB W0, [X0 + 0x8]
	0x03313474 RET
	0x03313478 LDRB W0, [X0 + 0x9]
	0x0331347C RET
	0x03313480 LDRB W0, [X0 + 0xA]
	0x03313484 RET
	0x03313488 LDR W0, [X0 + 0xC]
	0x0331348C RET
	0x03313490 LDRB W0, [X0 + 0x10]
	0x03313494 RET
	0x03313498 SUB X31, X31, 0x40
	0x0331349C STP X30, X21, [X31 + 0x20]
	0x033134A0 STP X20, X19, [X31 + 0x30]
	0x033134A4 ADRP X21, 0x10C9000
	0x033134A8 LDRB W8, [X21 + 0xB5F]
	0x033134AC MOV X20, X1
	0x033134B0 MOV X19, X0
	0x033134B4 TBNZ X8, 0x0, 0x33134CC
	0x033134B8 ADRP X0, 0xE14000
	0x033134BC LDR X0, [X0 + 0xD30]
	0x033134C0 BL 0x1C16CF4
	0x033134C4 MOVZ W8, 0x1
	0x033134C8 STRB W8, [X21 + 0xB5F]
	0x033134CC CBZ X20, 0x33134E8
	0x033134D0 ADRP X8, 0xE14000
	0x033134D4 LDR X8, [X8 + 0xD30]
	0x033134D8 LDR X9, [X20]
	0x033134DC LDR X8, [X8]
	0x033134E0 CMP X9, X8
	0x033134E4 B.EQ 0x33134F0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X20, 0x10CA000
	008 Move X19, 0xDE3000
	009 Move W8, [X20+2896]
	010 Move X19, [X19+1392]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xE15000
	016 Move X0, [X0+3272]
	017 Call 0x1C17CF4
	018 Move X0, 0xDE3000
	019 Move X0, [X0+1392]
	020 Call 0x1C17CF4
	021 Move X0, 0xE15000
	022 Move X0, [X0+2616]
	023 Call 0x1C17CF4
	024 Move X0, 0xE15000
	025 Move X0, [X0+3280]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+2896], W8
	029 Move X0, [X19]
	030 Move X22, 0xE15000
	031 Move X20, 0xE15000
	032 Move X21, 0xE15000
	033 Move W8, [X0+224]
	034 Move X22, [X22+3280]
	035 Move X20, [X20+2616]
	036 Move X21, [X21+3272]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X19]
	041 Move X8, [X0+184]
	042 Move X0, [X22]
	043 Move X1, [X8]
	044 Move X2, X0
	045 Move X3, X0
	046 Call TimeZoneInfo.CreateCustomTimeZone, X0, X1, X2, X3
	047 Move X8, [X20]
	048 Move X8, [X8+184]
	049 Move [X8], X0
	050 Move X0, [X21]
	051 Call 0x1C17F10
	052 Move X1, X31
	053 Move X19, X0
	054 Call Object..ctor, X0
	055 Move X8, [X20]
	056 Add X0, X31, 24
	057 Move W1, 0x270F
	058 Move W2, 12
	059 Move X8, [X8+184]
	060 Move W3, 31
	061 Move X4, X31
	062 Move [X8+8], X19
	063 Move [X31+24], X31
	064 Call DateTime..ctor, X0, X1, X2, X3
	065 Move X8, [X20]
	066 Move X9, [X31+24]
	067 Add X0, X31, 8
	068 Move W1, 1
	069 Move X8, [X8+184]
	070 Move W2, 1
	071 Move W3, 2
	072 Move X4, X31
	073 Move [X8+16], X9
	074 Move [X31+8], X31
	075 Call DateTime..ctor, X0, X1, X2, X3
	076 Move X8, [X20]
	077 Move X9, [X31+8]
	078 Move D0, 8.000000001396984
	079 Move X0, X31
	080 Move X8, [X8+184]
	081 Move [X8+24], X9
	082 Call TimeSpan.FromHours, V0
	083 Move X8, [X20]
	084 Move X1, X31
	085 Move X9, [X8+184]
	086 Move [X9+32], X0
	087 Move X8, [X8+184]
	088 Move X0, [X8+32]
	089 Call TimeSpan.op_UnaryNegation, X0
	090 Move X8, [X20]
	091 Move X20, [X31+48]
	092 Move X19, [X31+56]
	093 Move X22, [X31+32]
	094 Move X21, [X31+40]
	095 Move X30, [X31+16]
	096 Move X8, [X8+184]
	097 Move [X8+40], X0
	098 Add X31, X31, 64
	099 Return 

Method: System.Void .ctor()

Disassembly:
	0x033134F0 MOV X0, X20
	0x033134F4 BL 0x1C16E08
	0x033134F8 LDR V0, [X0]
	0x033134FC LDR X8, [X0 + 0x10]
	0x03313500 ADD X1, X31, 0x0
	0x03313504 MOV X0, X19
	0x03313508 STR V0, [X31]
	0x0331350C STR X8, [X31 + 0x10]
	0x03313510 BL 0x33125AC
	0x03313514 LDP X20, X19, [X31 + 0x30]
	0x03313518 LDP X30, X21, [X31 + 0x20]
	0x0331351C AND W0, W0, 0x1
	0x03313520 ADD X31, X31, 0x40
	0x03313524 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x10CA000
	005 Move X20, 0xE15000
	006 Move W8, [X19+2897]
	007 Move X20, [X20+3288]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xE15000
	013 Move X0, [X0+3288]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2897], W8
	017 Move X0, [X20]
	018 Call 0x1C17D9C

