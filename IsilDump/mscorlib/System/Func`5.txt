Type: System.Func`5

Method: System.Void .ctor(System.Object object, System.IntPtr method)

Disassembly:
	0x02D42148 LDR X8, [X8 + 0xE98]
	0x02D4214C ADRP X9, 0x13DC000
	0x02D42150 LDR X9, [X9 + 0xEA8]
	0x02D42154 MOV X2, X0
	0x02D42158 LDR X1, [X8]
	0x02D4215C LDR X3, [X9]
	0x02D42160 MOV X0, X20
	0x02D42164 MOV X4, X31
	0x02D42168 BL 0x32277C4
	0x02D4216C ADRP X8, 0x13B9000
	0x02D42170 LDR X8, [X8 + 0x8B0]
	0x02D42174 MOV X20, X0
	0x02D42178 LDR X0, [X8]
	0x02D4217C LDR W8, [X0 + 0xE0]
	0x02D42180 CBNZ W8, 0x2D42188
	0x02D42184 BL 0x1C16DFC
	0x02D42188 MOV X0, X20
	0x02D4218C MOV X1, X31
	0x02D42190 BL 0x1E3E884
	0x02D42194 ADD X0, X31, 0x8
	0x02D42198 BL 0x1A1835C
	0x02D4219C AND W0, W19, 0x1
	0x02D421A0 LDP X20, X19, [X31 + 0x40]
	0x02D421A4 LDP X30, X21, [X31 + 0x30]
	0x02D421A8 ADD X31, X31, 0x50
	0x02D421AC RET
	0x02D421B0 BL 0x1C16F20
	0x02D421B4 B 0x2D421D4
	0x02D421B8 B 0x2D421D4
	0x02D421BC B 0x2D421D4
	0x02D421C0 B 0x2D421D4
	0x02D421C4 B 0x2D421D4
	0x02D421C8 B 0x2D421D4
	0x02D421CC B 0x2D421D4
	0x02D421D0 B 0x2D421D4
	0x02D421D4 MOV X20, X0
	0x02D421D8 CMP W1, 0x1
	0x02D421DC B.NE 0x2D421FC
	0x02D421E0 MOV X0, X20
	0x02D421E4 BL 0x3EB1AD0
	0x02D421E8 LDR X8, [X0]
	0x02D421EC STR X8, [X31 + 0x8]
	0x02D421F0 BL 0x3EB1AE0
	0x02D421F4 B 0x2D42194
	0x02D421F8 MOV X20, X0
	0x02D421FC ADD X0, X31, 0x8
	0x02D42200 BL 0x1A1835C
	0x02D42204 MOV X0, X20
	0x02D42208 BL 0x1D2C690
	0x02D4220C BL 0x1990590
	0x02D42210 SUB X31, X31, 0x30
	0x02D42214 STP X30, X21, [X31 + 0x10]
	0x02D42218 STP X20, X19, [X31 + 0x20]
	0x02D4221C ADRP X20, 0x1699000
	0x02D42220 LDRB W8, [X20 + 0x853]
	0x02D42224 MOV X19, X0
	0x02D42228 TBNZ X8, 0x0, 0x2D42240
	0x02D4222C ADRP X0, 0x13B1000
	0x02D42230 LDR X0, [X0 + 0x598]
	0x02D42234 BL 0x1C16CF4
	0x02D42238 MOVZ W8, 0x1
	0x02D4223C STRB W8, [X20 + 0x853]
	0x02D42240 LDR X0, [X19 + 0x20]
	0x02D42244 LDRB W8, [X0 + 0x135]
	0x02D42248 TBNZ X8, 0x0, 0x2D42250

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+8]
	007 Move [X0+32], X1
	008 Move [X0+40], X2
	009 Move X19, X0
	010 Move X20, X2
	011 Move [X0+16], X8
	012 Move W22, [X2+82]
	013 Move [X0+64], X0
	014 Move X0, X2
	015 Move X21, X1
	016 Call 0x1C17D84
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {24}
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X8, -20094976
	023 Add X8, X8, 2624
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W8, [X19+112]
	026 Compare W8, 0
	027 JumpIfEqual {49}
	028 Move X0, X20
	029 Call 0x1C17D7C
	030 Move W21, W0
	031 Move X0, X20
	032 Call 0x1C18238
	033 Move TEMP, X21
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {51}
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {57}
	041 Move X8, -20094976
	042 Add X8, X8, 2972
	043 Compare X21, 0
	044 JumpIfEqual {71}
	045 Move X8, [X19+16]
	046 Move X9, [X19+32]
	047 Move [X19+24], X8
	048 Move [X19+64], X9
	049 Move X8, -20094976
	050 Add X8, X8, 2580
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {59}
	055 Move X8, -20094976
	056 Add X8, X8, 2708
	057 Move X8, -20094976
	058 Add X8, X8, 2872
	059 Move X8, -20094976
	060 Add X8, X8, 2652
	061 Move [X19+24], X8
	062 Move X8, -20094976
	063 Add X8, X8, 2460
	064 Move [X19+56], X8
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X30, [X31+48]
	070 Return 
	071 Move X1, -35807232
	072 Add X1, X1, 3811
	073 Move X0, X31
	074 Call 0x1C17F3C
	075 Move X1, X31
	076 Call 0x1C17DEC

Method: TResult Invoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4)

Disassembly:
	0x02D4224C BL 0x1C5C684
	0x02D42250 LDR X8, [X0 + 0xC0]
	0x02D42254 ADRP X21, 0x13B1000
	0x02D42258 LDR X0, [X8 + 0x20]
	0x02D4225C LDRB W8, [X0 + 0x135]

ISIL:
	001 Move X8, [X0+64]
	002 Move X6, [X0+24]
	003 Move X5, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X6

