Type: System.MonoCustomAttrs

Method: System.Boolean IsUserCattrProvider(System.Object obj)

Disassembly:
	0x033C7BB8 CBZ W8, 0x33C7D50
	0x033C7BBC STR X20, [X19 + 0x20]
	0x033C7BC0 B 0x33C7C80
	0x033C7BC4 CBZ X22, 0x33C7900
	0x033C7BC8 LDR W1, [X22 + 0x18]
	0x033C7BCC MOV X0, X19
	0x033C7BD0 MOV X2, X31
	0x033C7BD4 BL 0x33A2DF8
	0x033C7BD8 ADRP X8, 0xD2C000
	0x033C7BDC LDR X8, [X8 + 0x9D0]
	0x033C7BE0 LDR X1, [X8]
	0x033C7BE4 BL 0x1C16E00
	0x033C7BE8 ADRP X8, 0xD65000
	0x033C7BEC LDR X8, [X8 + 0x900]
	0x033C7BF0 MOV X19, X0
	0x033C7BF4 MOV X0, X22
	0x033C7BF8 B 0x33C7C70
	0x033C7BFC MOV X0, X19
	0x033C7C00 MOV W1, W31
	0x033C7C04 MOV X2, X31
	0x033C7C08 BL 0x33A2DF8
	0x033C7C0C CBZ X0, 0x33C7CA4
	0x033C7C10 ADRP X8, 0xD2C000
	0x033C7C14 LDR X8, [X8 + 0x9D0]
	0x033C7C18 MOV X20, X0
	0x033C7C1C LDR X21, [X8]
	0x033C7C20 MOV X1, X21
	0x033C7C24 BL 0x1C16E00
	0x033C7C28 MOV X19, X0
	0x033C7C2C CBNZ X0, 0x33C7C80
	0x033C7C30 MOV X0, X20
	0x033C7C34 MOV X1, X21
	0x033C7C38 BL 0x1C171E0
	0x033C7C3C CBZ X21, 0x33C7900
	0x033C7C40 LDR W1, [X21 + 0x18]
	0x033C7C44 MOV X0, X19
	0x033C7C48 MOV X2, X31
	0x033C7C4C BL 0x33A2DF8
	0x033C7C50 ADRP X8, 0xD2C000
	0x033C7C54 LDR X8, [X8 + 0x9D0]
	0x033C7C58 LDR X1, [X8]
	0x033C7C5C BL 0x1C16E00
	0x033C7C60 ADRP X8, 0xD65000
	0x033C7C64 LDR X8, [X8 + 0x900]
	0x033C7C68 MOV X19, X0
	0x033C7C6C MOV X0, X21
	0x033C7C70 LDR X3, [X8]
	0x033C7C74 MOV X1, X19
	0x033C7C78 MOV W2, W31
	0x033C7C7C BL 0x301C538
	0x033C7C80 MOV X0, X19
	0x033C7C84 LDP X20, X19, [X31 + 0x60]
	0x033C7C88 LDP X22, X21, [X31 + 0x50]
	0x033C7C8C LDP X24, X23, [X31 + 0x40]
	0x033C7C90 LDP X26, X25, [X31 + 0x30]
	0x033C7C94 LDP X28, X27, [X31 + 0x20]
	0x033C7C98 LDP X29, X30, [X31 + 0x10]
	0x033C7C9C ADD X31, X31, 0x70
	0x033C7CA0 RET
	0x033C7CA4 MOV X19, X31
	0x033C7CA8 B 0x33C7C80
	0x033C7CAC ADRP X0, 0xD65000
	0x033C7CB0 LDR X0, [X0 + 0x918]
	0x033C7CB4 BL 0x1C16D08
	0x033C7CB8 BL 0x1C16F10
	0x033C7CBC MOV X19, X0
	0x033C7CC0 ADRP X0, 0xD65000
	0x033C7CC4 LDR X0, [X0 + 0x920]
	0x033C7CC8 BL 0x1C16D08
	0x033C7CCC MOV X1, X0
	0x033C7CD0 MOV X0, X19
	0x033C7CD4 MOV X2, X31
	0x033C7CD8 BL 0x32CC9D4
	0x033C7CDC ADRP X0, 0xD65000
	0x033C7CE0 LDR X0, [X0 + 0x928]
	0x033C7CE4 BL 0x1C16D08
	0x033C7CE8 MOV X1, X0
	0x033C7CEC MOV X0, X19
	0x033C7CF0 BL 0x1C16DEC
	0x033C7CF4 ADRP X0, 0xD31000
	0x033C7CF8 LDR X0, [X0 + 0x528]
	0x033C7CFC BL 0x1C16D08
	0x033C7D00 BL 0x1C16F10
	0x033C7D04 MOV X19, X0
	0x033C7D08 ADRP X0, 0xD37000
	0x033C7D0C LDR X0, [X0 + 0x8A8]
	0x033C7D10 B 0x33C7D30
	0x033C7D14 ADRP X0, 0xD31000
	0x033C7D18 LDR X0, [X0 + 0x528]
	0x033C7D1C BL 0x1C16D08
	0x033C7D20 BL 0x1C16F10
	0x033C7D24 MOV X19, X0
	0x033C7D28 ADRP X0, 0xD5E000
	0x033C7D2C LDR X0, [X0 + 0xE10]
	0x033C7D30 BL 0x1C16D08
	0x033C7D34 MOV X1, X0
	0x033C7D38 MOV X0, X19
	0x033C7D3C MOV X2, X31
	0x033C7D40 BL 0x330E100
	0x033C7D44 B 0x33C7CDC
	0x033C7D48 LDR W8, [X20 + 0x18]
	0x033C7D4C CBNZ W8, 0x33C7900
	0x033C7D50 BL 0x1C16F28
	0x033C7D54 MOV X0, X21
	0x033C7D58 MOV X1, X22
	0x033C7D5C BL 0x1C171E0
	0x033C7D60 BL 0x1C16F44
	0x033C7D64 MOV X1, X31
	0x033C7D68 BL 0x1C16DEC
	0x033C7D6C STR X30, [X31 - 0x30]!
	0x033C7D70 STP X22, X21, [X31 + 0x10]
	0x033C7D74 STP X20, X19, [X31 + 0x20]
	0x033C7D78 ADRP X20, 0x1016000
	0x033C7D7C LDRB W8, [X20 + 0x28A]
	0x033C7D80 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1017000
	006 Move W8, [X20+636]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0xD54000
	013 Move X0, [X0+3456]
	014 Call 0x1C17CF4
	015 Move X0, 0xD60000
	016 Move X0, [X0+992]
	017 Call 0x1C17CF4
	018 Move X0, 0xD56000
	019 Move X0, [X0+1256]
	020 Call 0x1C17CF4
	021 Move X0, 0xD2D000
	022 Move X0, [X0+1728]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+636], W8
	026 Move X20, 0xD2D000
	027 Move X20, [X20+1728]
	028 Compare X19, 0
	029 JumpIfEqual {51}
	030 Move X9, [X19]
	031 Move X8, [X20]
	032 Move W11, [X9+304]
	033 Move W10, [X8+304]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X12, [X9+200]
	036 Add X13, X12, X10
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X13, 0xD56000
	040 Move X13, [X13+1256]
	041 Move X13, [X13]
	042 Move W14, [X13+304]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add X11, X12, X14
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X9, [X9+200]
	048 Add X9, X9, X10
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X21, 0xD60000
	052 Move X21, [X21+992]
	053 Move X0, [X21]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {59}
	057 Call 0x1C17DFC
	058 Move X0, [X21]
	059 Move X8, [X0+184]
	060 Move X1, X31
	061 Move X2, X31
	062 Move X0, [X8]
	063 Call Assembly.op_Equality, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {95}
	068 Move X8, 0xD54000
	069 Move X0, [X20]
	070 Move X8, [X8+3456]
	071 Move W9, [X0+224]
	072 Move X20, [X8]
	073 Compare W9, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X20
	077 Move X1, X31
	078 Call Type.GetTypeFromHandle, X0
	079 Compare X0, 0
	080 JumpIfEqual {130}
	081 Move X8, [X0]
	082 Move X9, [X8+760]
	083 Move X1, [X8+768]
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move X8, [X21]
	086 Move X20, X0
	087 Move W9, [X8+224]
	088 Compare W9, 0
	089 JumpIfNotEqual {93}
	090 Move X0, X8
	091 Call 0x1C17DFC
	092 Move X8, [X21]
	093 Move X8, [X8+184]
	094 Move [X8], X20
	095 Compare X19, 0
	096 JumpIfEqual {130}
	097 Move X0, X19
	098 Call 0x1C26764
	099 Compare X0, 0
	100 JumpIfEqual {130}
	101 Move X8, [X0]
	102 Move X9, [X8+760]
	103 Move X1, [X8+768]
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move X8, [X21]
	106 Move X19, X0
	107 Move W9, [X8+224]
	108 Compare W9, 0
	109 JumpIfNotEqual {113}
	110 Move X0, X8
	111 Call 0x1C17DFC
	112 Move X8, [X21]
	113 Move X8, [X8+184]
	114 Move X0, X19
	115 Move X20, [X31+16]
	116 Move X19, [X31+24]
	117 Move X2, X31
	118 Move X1, [X8]
	119 Move X30, [X31+32]
	120 Move X21, [X31+40]
	121 Call Assembly.op_Inequality, X0, X1
	122 Return X0
	123 Move W0, 1
	124 Move X20, [X31+16]
	125 Move X19, [X31+24]
	126 Move X30, [X31+32]
	127 Move X21, [X31+40]
	128 Return X0
	129 Move W0, W31
	130 Call 0x1C17F20

Method: System.Attribute[] GetCustomAttributesInternal(System.Reflection.ICustomAttributeProvider obj, System.Type attributeType, System.Boolean pseudoAttrs)

Disassembly:
	0x033C7D84 TBNZ X8, 0x0, 0x33C7DE4
	0x033C7D88 ADRP X0, 0xD5D000

ISIL:
	001 And W2, W2, 1
	002 Call 0x1C3AE0C
	003 Return X0

Method: System.Object[] GetPseudoCustomAttributes(System.Reflection.ICustomAttributeProvider obj, System.Type attributeType)

Disassembly:
	0x033C7D8C LDR X0, [X0 + 0x278]
	0x033C7D90 BL 0x1C16CF4
	0x033C7D94 ADRP X0, 0xD5F000
	0x033C7D98 LDR X0, [X0 + 0x3E0]
	0x033C7D9C BL 0x1C16CF4
	0x033C7DA0 ADRP X0, 0xD65000
	0x033C7DA4 LDR X0, [X0 + 0xD0]
	0x033C7DA8 BL 0x1C16CF4
	0x033C7DAC ADRP X0, 0xD5D000
	0x033C7DB0 LDR X0, [X0 + 0x9A0]
	0x033C7DB4 BL 0x1C16CF4
	0x033C7DB8 ADRP X0, 0xD5F000
	0x033C7DBC LDR X0, [X0 + 0x4F8]
	0x033C7DC0 BL 0x1C16CF4
	0x033C7DC4 ADRP X0, 0xD5F000
	0x033C7DC8 LDR X0, [X0 + 0x1E0]
	0x033C7DCC BL 0x1C16CF4
	0x033C7DD0 ADRP X0, 0xD2C000
	0x033C7DD4 LDR X0, [X0 + 0x6C0]
	0x033C7DD8 BL 0x1C16CF4
	0x033C7DDC MOVZ W8, 0x1
	0x033C7DE0 STRB W8, [X20 + 0x28A]
	0x033C7DE4 CBZ X19, 0x33C7F44
	0x033C7DE8 ADRP X9, 0xD2C000
	0x033C7DEC LDR X9, [X9 + 0x6C0]
	0x033C7DF0 LDR X8, [X19]
	0x033C7DF4 LDR X10, [X9]
	0x033C7DF8 LDRB W9, [X8 + 0x130]
	0x033C7DFC LDRB W11, [X10 + 0x130]
	0x033C7E00 CMP W9, W11
	0x033C7E04 B.CC 0x33C7E1C
	0x033C7E08 LDR X12, [X8 + 0xC8]
	0x033C7E0C ADD X11, X12, X11, 0x3, LSL
	0x033C7E10 LDUR X11, [X11 - 0x8]
	0x033C7E14 CMP X11, X10
	0x033C7E18 B.EQ 0x33C7F94
	0x033C7E1C ADRP X20, 0xD5F000
	0x033C7E20 LDR X20, [X20 + 0x1E0]
	0x033C7E24 LDR X1, [X20]
	0x033C7E28 LDRB W10, [X1 + 0x130]
	0x033C7E2C CMP W9, W10
	0x033C7E30 B.CC 0x33C7E48
	0x033C7E34 LDR X11, [X8 + 0xC8]
	0x033C7E38 ADD X11, X11, X10, 0x3, LSL
	0x033C7E3C LDUR X11, [X11 - 0x8]
	0x033C7E40 CMP X11, X1
	0x033C7E44 B.EQ 0x33C7FB0
	0x033C7E48 ADRP X20, 0xD65000
	0x033C7E4C LDR X20, [X20 + 0xD0]
	0x033C7E50 LDR X10, [X20]
	0x033C7E54 CMP X8, X10
	0x033C7E58 B.EQ 0x33C7F58
	0x033C7E5C ADRP X22, 0xD5D000
	0x033C7E60 LDR X22, [X22 + 0x9A0]
	0x033C7E64 LDR X11, [X22]
	0x033C7E68 LDRB W12, [X11 + 0x130]
	0x033C7E6C CMP W9, W12
	0x033C7E70 B.CC 0x33C7E88
	0x033C7E74 LDR X10, [X8 + 0xC8]
	0x033C7E78 ADD X12, X10, X12, 0x3, LSL
	0x033C7E7C LDUR X12, [X12 - 0x8]
	0x033C7E80 CMP X12, X11
	0x033C7E84 B.EQ 0x33C8008
	0x033C7E88 MOV X20, X31
	0x033C7E8C ADRP X10, 0xD5F000
	0x033C7E90 LDR X10, [X10 + 0x4F8]
	0x033C7E94 LDR X10, [X10]
	0x033C7E98 LDRB W11, [X10 + 0x130]
	0x033C7E9C CMP W9, W11
	0x033C7EA0 B.CC 0x33C7EB8
	0x033C7EA4 LDR X9, [X8 + 0xC8]
	0x033C7EA8 ADD X9, X9, X11, 0x3, LSL
	0x033C7EAC LDUR X9, [X9 - 0x8]
	0x033C7EB0 CMP X9, X10
	0x033C7EB4 B.EQ 0x33C8038
	0x033C7EB8 MOV X0, X20
	0x033C7EBC MOV X1, X31
	0x033C7EC0 MOV X2, X31
	0x033C7EC4 BL 0x32C2354
	0x033C7EC8 MOV W8, W0
	0x033C7ECC MOV X0, X31
	0x033C7ED0 TBNZ X8, 0x0, 0x33C7F48
	0x033C7ED4 CBZ X20, 0x33C8118
	0x033C7ED8 MOV X0, X20
	0x033C7EDC MOV X1, X31
	0x033C7EE0 BL 0x32CE434
	0x033C7EE4 MOV W8, W0
	0x033C7EE8 MOV X0, X31
	0x033C7EEC TBZ X8, 0x0, 0x33C7F48
	0x033C7EF0 LDR X8, [X20]
	0x033C7EF4 LDR X1, [X22]
	0x033C7EF8 LDRB W10, [X8 + 0x130]
	0x033C7EFC LDRB W9, [X1 + 0x130]
	0x033C7F00 CMP W10, W9
	0x033C7F04 B.CC 0x33C811C
	0x033C7F08 LDR X8, [X8 + 0xC8]
	0x033C7F0C ADD X8, X8, X9, 0x3, LSL
	0x033C7F10 LDUR X8, [X8 - 0x8]
	0x033C7F14 CMP X8, X1
	0x033C7F18 B.NE 0x33C811C
	0x033C7F1C MOV X0, X20
	0x033C7F20 MOV X1, X31
	0x033C7F24 BL 0x32DAF24
	0x033C7F28 MOV X1, X20
	0x033C7F2C MOV X2, X31
	0x033C7F30 MOV X19, X0
	0x033C7F34 BL 0x32C2354
	0x033C7F38 ANDS W31, W0, 0x1
	0x033C7F3C CSEL X0, X31, X19, NE
	0x033C7F40 B 0x33C7F48
	0x033C7F44 MOV X0, X31
	0x033C7F48 LDP X20, X19, [X31 + 0x20]
	0x033C7F4C LDP X22, X21, [X31 + 0x10]
	0x033C7F50 LDR X30, [X31], #0x30
	0x033C7F54 RET
	0x033C7F58 ADRP X8, 0xD5F000
	0x033C7F5C LDR X8, [X8 + 0x3E0]
	0x033C7F60 LDR X0, [X8]
	0x033C7F64 LDR W8, [X0 + 0xE0]
	0x033C7F68 CBNZ W8, 0x33C7F80
	0x033C7F6C BL 0x1C16DFC
	0x033C7F70 LDR X1, [X20]
	0x033C7F74 LDR X8, [X19]
	0x033C7F78 CMP X8, X1
	0x033C7F7C B.NE 0x33C8110
	0x033C7F80 MOV X0, X19
	0x033C7F84 LDP X20, X19, [X31 + 0x20]
	0x033C7F88 LDP X22, X21, [X31 + 0x10]
	0x033C7F8C LDR X30, [X31], #0x30
	0x033C7F90 B 0x33CA55C
	0x033C7F94 LDR X2, [X8 + 0x818]
	0x033C7F98 LDR X1, [X8 + 0x820]
	0x033C7F9C MOV X0, X19
	0x033C7FA0 LDP X20, X19, [X31 + 0x20]
	0x033C7FA4 LDP X22, X21, [X31 + 0x10]
	0x033C7FA8 LDR X30, [X31], #0x30
	0x033C7FAC BR X2
	0x033C7FB0 ADRP X11, 0xD5F000
	0x033C7FB4 LDR X11, [X11 + 0x3E0]
	0x033C7FB8 LDR X0, [X11]
	0x033C7FBC LDR W11, [X0 + 0xE0]
	0x033C7FC0 CBNZ W11, 0x33C7FD8
	0x033C7FC4 BL 0x1C16DFC
	0x033C7FC8 LDR X8, [X19]
	0x033C7FCC LDR X1, [X20]
	0x033C7FD0 LDRB W9, [X8 + 0x130]
	0x033C7FD4 LDRB W10, [X1 + 0x130]
	0x033C7FD8 CMP W9, W10
	0x033C7FDC B.CC 0x33C8110
	0x033C7FE0 LDR X8, [X8 + 0xC8]
	0x033C7FE4 ADD X8, X8, W10, 0x3, UXTW
	0x033C7FE8 LDUR X8, [X8 - 0x8]
	0x033C7FEC CMP X8, X1
	0x033C7FF0 B.NE 0x33C8110
	0x033C7FF4 MOV X0, X19
	0x033C7FF8 LDP X20, X19, [X31 + 0x20]
	0x033C7FFC LDP X22, X21, [X31 + 0x10]
	0x033C8000 LDR X30, [X31], #0x30
	0x033C8004 B 0x33CA274
	0x033C8008 ADRP X11, 0xD5C000
	0x033C800C LDR X11, [X11 + 0x278]
	0x033C8010 LDR X1, [X11]
	0x033C8014 LDRB W11, [X1 + 0x130]
	0x033C8018 CMP W9, W11
	0x033C801C B.CC 0x33C8110
	0x033C8020 ADD X10, X10, X11, 0x3, LSL
	0x033C8024 LDUR X10, [X10 - 0x8]
	0x033C8028 CMP X10, X1
	0x033C802C B.NE 0x33C8110
	0x033C8030 MOV X20, X19
	0x033C8034 B 0x33C7E8C
	0x033C8038 LDP X9, X1, [X8 + 0x1B8]
	0x033C803C MOV X0, X19
	0x033C8040 BLR X9
	0x033C8044 CBZ X0, 0x33C7EB8
	0x033C8048 ADRP X8, 0xD5C000
	0x033C804C LDR X8, [X8 + 0x278]
	0x033C8050 LDR X9, [X0]
	0x033C8054 MOV X21, X0
	0x033C8058 LDR X10, [X8]
	0x033C805C LDRB W8, [X9 + 0x130]
	0x033C8060 LDRB W11, [X10 + 0x130]
	0x033C8064 CMP W8, W11
	0x033C8068 B.CC 0x33C7EB8
	0x033C806C LDR X9, [X9 + 0xC8]
	0x033C8070 ADD X11, X9, X11, 0x3, LSL
	0x033C8074 LDUR X11, [X11 - 0x8]
	0x033C8078 CMP X11, X10
	0x033C807C B.NE 0x33C7EB8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1017000
	006 Move W8, [X21+637]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {36}
	013 Move X0, 0xD2D000
	014 Move X0, [X0+2504]
	015 Call 0x1C17CF4
	016 Move X0, 0xD60000
	017 Move X0, [X0+992]
	018 Call 0x1C17CF4
	019 Move X0, 0xD2D000
	020 Move X0, [X0+2512]
	021 Call 0x1C17CF4
	022 Move X0, 0xD5E000
	023 Move X0, [X0+2992]
	024 Call 0x1C17CF4
	025 Move X0, 0xD5E000
	026 Move X0, [X0+2464]
	027 Call 0x1C17CF4
	028 Move X0, 0xD60000
	029 Move X0, [X0+1272]
	030 Call 0x1C17CF4
	031 Move X0, 0xD2D000
	032 Move X0, [X0+1728]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+637], W8
	036 Move X21, 0xD2D000
	037 Move X21, [X21+1728]
	038 Compare X20, 0
	039 JumpIfEqual {96}
	040 Move X9, 0xD5E000
	041 Move X9, [X9+2464]
	042 Move X8, [X20]
	043 Move X10, [X9]
	044 Move W9, [X8+304]
	045 Move W11, [X10+304]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X12, [X8+200]
	048 Add X11, X12, X11
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X10, 0xD5E000
	052 Move X10, [X10+2992]
	053 Move X10, [X10]
	054 Move W11, [X10+304]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X12, [X8+200]
	057 Add X11, X12, X11
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X10, 0xD60000
	061 Move X10, [X10+1272]
	062 Move X10, [X10]
	063 Move W11, [X10+304]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X12, [X8+200]
	066 Add X11, X12, X11
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X10, [X21]
	070 Move W11, [X10+304]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X8, [X8+200]
	073 Add X8, X8, X11
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X20, X31
	077 Move X0, X20
	078 Move X1, X31
	079 Call RuntimeMethodInfo.GetPseudoCustomAttributes, X0
	080 Move X0, X20
	081 Move X1, X31
	082 Call FieldInfo.GetPseudoCustomAttributes, X0
	083 Move X0, X20
	084 Move X1, X31
	085 Call RuntimeParameterInfo.GetPseudoCustomAttributes, X0
	086 Move X8, 0xD60000
	087 Move X8, [X8+992]
	088 Move X0, [X8]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Move X0, X20
	094 Call MonoCustomAttrs.GetPseudoCustomAttributes, X0
	095 Move X20, X0
	096 Move X0, [X21]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move X0, X19
	102 Move X1, X31
	103 Move X2, X31
	104 Call Type.op_Inequality, X0, X1
	105 Compare X20, 0
	106 JumpIfEqual {165}
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {165}
	111 Move W8, [X20+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X21, X31
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Add X8, X20, X21
	116 Move X0, [X8+32]
	117 Compare X0, 0
	118 JumpIfEqual {198}
	119 Call 0x1C26764
	120 Compare X19, 0
	121 JumpIfEqual {198}
	122 Move X8, [X19]
	123 Move X1, X0
	124 Move X0, X19
	125 Move X9, [X8+680]
	126 Move X2, [X8+688]
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move TEMP, X0
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfEqual {171}
	132 Move W8, [X20+24]
	133 Add X21, X21, 1
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X8, 0xD2D000
	136 Move X8, [X8+2504]
	137 Move X19, [X8]
	138 Move X8, [X19+56]
	139 Compare X8, 0
	140 JumpIfNotEqual {144}
	141 Move X0, X19
	142 Call 0x1C5D6E0
	143 Move X8, [X19+56]
	144 Move X0, [X8+16]
	145 Move W8, [X0+309]
	146 Move TEMP, X8
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfEqual {151}
	150 Call 0x1C5D684
	151 Move W8, [X0+224]
	152 Compare W8, 0
	153 JumpIfNotEqual {155}
	154 Call 0x1C17DFC
	155 Move X8, [X19+56]
	156 Move X0, [X8+16]
	157 Move W8, [X0+309]
	158 Move TEMP, X8
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfEqual {163}
	162 Call 0x1C5D684
	163 Move X8, [X0+184]
	164 Move X20, [X8]
	165 Move X0, X20
	166 Move X20, [X31+16]
	167 Move X19, [X31+24]
	168 Move X30, [X31+32]
	169 Move X21, [X31+40]
	170 Return X0
	171 Move W8, [X20+24]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X8, 0xD2C000
	174 Move X8, [X8+2512]
	175 Move W1, 1
	176 Move X0, [X8]
	177 Call 0x1C17D6C
	178 Move W8, [X20+24]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X19, X0
	181 Compare X0, 0
	182 JumpIfEqual {198}
	183 Add X8, X20, X21
	184 Move X20, [X8+32]
	185 Compare X20, 0
	186 JumpIfEqual {193}
	187 Move X8, [X19]
	188 Move X0, X20
	189 Move X1, [X8+64]
	190 Call 0x1C17E00
	191 Compare X0, 0
	192 JumpIfEqual {200}
	193 Move W8, [X19+24]
	194 Compare W8, 0
	195 JumpIfEqual {199}
	196 Move [X19+32], X20
	197 Move X20, X19
	198 Call 0x1C17F20
	199 Call 0x1C17F28
	200 Call 0x1C17F44
	201 Move X1, X31
	202 Call 0x1C17DEC

Method: System.Object[] GetPseudoCustomAttributes(System.Type type)

Disassembly:
	0x033C8080 LDR X1, [X22]
	0x033C8084 LDRB W10, [X1 + 0x130]
	0x033C8088 CMP W8, W10
	0x033C808C B.CC 0x33C8124
	0x033C8090 ADD X8, X9, X10, 0x3, LSL
	0x033C8094 LDUR X8, [X8 - 0x8]
	0x033C8098 CMP X8, X1
	0x033C809C B.NE 0x33C8124
	0x033C80A0 MOV X0, X21
	0x033C80A4 MOV X1, X31
	0x033C80A8 BL 0x32DAF24
	0x033C80AC MOV X1, X21
	0x033C80B0 MOV X2, X31
	0x033C80B4 MOV X20, X0
	0x033C80B8 BL 0x32C2354
	0x033C80BC MOV W8, W0
	0x033C80C0 MOV X0, X31
	0x033C80C4 TBNZ X8, 0x0, 0x33C7F48
	0x033C80C8 CBZ X20, 0x33C8118
	0x033C80CC LDR X8, [X20]
	0x033C80D0 MOV X0, X20
	0x033C80D4 LDR X9, [X8 + 0x248]
	0x033C80D8 LDR X1, [X8 + 0x250]
	0x033C80DC BLR X9
	0x033C80E0 LDR X8, [X19]
	0x033C80E4 MOV X20, X0
	0x033C80E8 MOV X0, X19
	0x033C80EC LDP X9, X1, [X8 + 0x1E8]
	0x033C80F0 BLR X9
	0x033C80F4 CBZ X20, 0x33C8118
	0x033C80F8 LDR W8, [X20 + 0x18]
	0x033C80FC CMP W0, W8
	0x033C8100 B.CS 0x33C812C
	0x033C8104 ADD X8, X20, W0, 0x3, SXTW
	0x033C8108 LDR X0, [X8 + 0x20]
	0x033C810C B 0x33C7F48
	0x033C8110 MOV X0, X19
	0x033C8114 BL 0x1C171E0
	0x033C8118 BL 0x1C16F20
	0x033C811C MOV X0, X20
	0x033C8120 BL 0x1C171E0
	0x033C8124 MOV X0, X21
	0x033C8128 BL 0x1C171E0
	0x033C812C BL 0x1C16F28
	0x033C8130 SUB X31, X31, 0x30
	0x033C8134 STP X30, X21, [X31 + 0x10]
	0x033C8138 STP X20, X19, [X31 + 0x20]
	0x033C813C ADRP X20, 0x1015000
	0x033C8140 ADRP X21, 0xD5E000
	0x033C8144 LDRB W8, [X20 + 0x28C]
	0x033C8148 LDR X21, [X21 + 0x3E0]
	0x033C814C MOV X19, X0
	0x033C8150 TBNZ X8, 0x0, 0x33C8198
	0x033C8154 ADRP X0, 0xD64000
	0x033C8158 LDR X0, [X0 + 0x930]
	0x033C815C BL 0x1C16CF4
	0x033C8160 ADRP X0, 0xD64000
	0x033C8164 LDR X0, [X0 + 0x938]
	0x033C8168 BL 0x1C16CF4
	0x033C816C ADRP X0, 0xD64000
	0x033C8170 LDR X0, [X0 + 0x940]
	0x033C8174 BL 0x1C16CF4
	0x033C8178 ADRP X0, 0xD64000
	0x033C817C LDR X0, [X0 + 0x948]
	0x033C8180 BL 0x1C16CF4
	0x033C8184 ADRP X0, 0xD5E000
	0x033C8188 LDR X0, [X0 + 0x3E0]
	0x033C818C BL 0x1C16CF4
	0x033C8190 MOVZ W8, 0x1
	0x033C8194 STRB W8, [X20 + 0x28C]
	0x033C8198 LDR X0, [X21]
	0x033C819C STR X31, [X31 + 0x8]
	0x033C81A0 LDR W8, [X0 + 0xE0]
	0x033C81A4 CBNZ W8, 0x33C81B0
	0x033C81A8 BL 0x1C16DFC
	0x033C81AC LDR X0, [X21]
	0x033C81B0 BL 0x1C16D0C
	0x033C81B4 LDR X8, [X0]
	0x033C81B8 CBNZ X8, 0x33C8204
	0x033C81BC ADRP X8, 0xD64000
	0x033C81C0 LDR X8, [X8 + 0x948]
	0x033C81C4 LDR X0, [X8]
	0x033C81C8 BL 0x1C16F10
	0x033C81CC ADRP X8, 0xD64000
	0x033C81D0 LDR X8, [X8 + 0x938]
	0x033C81D4 MOV X20, X0
	0x033C81D8 LDR X1, [X8]
	0x033C81DC BL 0x2AA4804
	0x033C81E0 LDR X0, [X21]
	0x033C81E4 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1016000
	006 Move W8, [X20+638]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0xD65000
	013 Move X0, [X0+2248]
	014 Call 0x1C17CF4
	015 Move X0, 0xD2C000
	016 Move X0, [X0+2512]
	017 Call 0x1C17CF4
	018 Move X0, 0xD65000
	019 Move X0, [X0+2256]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+638], W8
	023 Compare X19, 0
	024 JumpIfEqual {112}
	025 Move X0, X19
	026 Move X1, X31
	027 Call Type.get_Attributes, X0
	028 Move W20, W0
	029 Move TEMP, X0
	030 And TEMP, TEMP, 4096
	031 Compare TEMP, 4096
	032 JumpIfEqual {38}
	033 Move TEMP, X20
	034 And TEMP, TEMP, 0x2000
	035 Compare TEMP, 0x2000
	036 JumpIfEqual {51}
	037 Move X19, X31
	038 Move X8, 0xD2C000
	039 Move X8, [X8+2512]
	040 And W31, W20, 0x2000
	041 Move X0, [X8]
	042 Move W8, 1
	043 NotImplemented "Instruction CINC not yet implemented."
	044 Call 0x1C17D6C
	045 Move X19, X0
	046 Move TEMP, X20
	047 And TEMP, TEMP, 0x2000
	048 Compare TEMP, 0x2000
	049 JumpIfEqual {59}
	050 Move W21, W31
	051 Move X8, 0xD2C000
	052 Move X8, [X8+2512]
	053 Move W1, W20
	054 ShiftRight W1, 13
	055 And W1, W1, 0x1FFF
	056 Move X0, [X8]
	057 Call 0x1C17D6C
	058 Move X19, X0
	059 Move X8, 0xD65000
	060 Move X8, [X8+2256]
	061 Move X0, [X8]
	062 Call 0x1C17F10
	063 Move X1, X31
	064 Move X21, X0
	065 Call SerializableAttribute..ctor, X0
	066 Compare X19, 0
	067 JumpIfEqual {112}
	068 Compare X21, 0
	069 JumpIfEqual {76}
	070 Move X8, [X19]
	071 Move X0, X21
	072 Move X1, [X8+64]
	073 Call 0x1C17E00
	074 Compare X0, 0
	075 JumpIfEqual {114}
	076 Move W8, [X19+24]
	077 Compare W8, 0
	078 JumpIfEqual {113}
	079 Move [X19+32], X21
	080 Move TEMP, X20
	081 And TEMP, TEMP, 4096
	082 Compare TEMP, 4096
	083 JumpIfNotEqual {106}
	084 Move W21, 1
	085 Move X8, 0xD65000
	086 Move X8, [X8+2248]
	087 Move X0, [X8]
	088 Call 0x1C17F10
	089 Move X1, X31
	090 Move X20, X0
	091 Call ComImportAttribute..ctor, X0
	092 Compare X19, 0
	093 JumpIfEqual {112}
	094 Compare X20, 0
	095 JumpIfEqual {102}
	096 Move X8, [X19]
	097 Move X0, X20
	098 Move X1, [X8+64]
	099 Call 0x1C17E00
	100 Compare X0, 0
	101 JumpIfEqual {114}
	102 Move W8, [X19+24]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Add X8, X19, W21
	105 Move [X8+32], X20
	106 Move X0, X19
	107 Move X20, [X31+16]
	108 Move X19, [X31+24]
	109 Move X30, [X31+32]
	110 Move X21, [X31+40]
	111 Return X0
	112 Call 0x1C17F20
	113 Call 0x1C17F28
	114 Call 0x1C17F44
	115 Move X1, X31
	116 Call 0x1C17DEC

Method: System.Object[] GetCustomAttributesBase(System.Reflection.ICustomAttributeProvider obj, System.Type attributeType, System.Boolean inheritedOnly)

Disassembly:
	0x033C81E8 CBNZ W8, 0x33C81F4
	0x033C81EC BL 0x1C16DFC
	0x033C81F0 LDR X0, [X21]
	0x033C81F4 BL 0x1C16D0C
	0x033C81F8 STR X20, [X0]
	0x033C81FC LDR X0, [X21]
	0x033C8200 BL 0x1C16D0C
	0x033C8204 LDR X0, [X21]
	0x033C8208 LDR W8, [X0 + 0xE0]
	0x033C820C CBNZ W8, 0x33C8218
	0x033C8210 BL 0x1C16DFC
	0x033C8214 LDR X0, [X21]
	0x033C8218 BL 0x1C16D0C
	0x033C821C LDR X0, [X0]
	0x033C8220 CBZ X0, 0x33C829C
	0x033C8224 ADRP X8, 0xD64000
	0x033C8228 LDR X8, [X8 + 0x930]
	0x033C822C ADD X2, X31, 0x8
	0x033C8230 MOV X1, X19
	0x033C8234 LDR X3, [X8]
	0x033C8238 BL 0x2AA6B2C
	0x033C823C TBNZ X0, 0x0, 0x33C8288
	0x033C8240 LDR X0, [X21]
	0x033C8244 LDR W8, [X0 + 0xE0]
	0x033C8248 CBNZ W8, 0x33C8250
	0x033C824C BL 0x1C16DFC
	0x033C8250 MOV X0, X19
	0x033C8254 BL 0x33CA76C
	0x033C8258 LDR X8, [X21]
	0x033C825C STR X0, [X31 + 0x8]
	0x033C8260 MOV X0, X8
	0x033C8264 BL 0x1C16D0C
	0x033C8268 LDR X0, [X0]
	0x033C826C CBZ X0, 0x33C829C
	0x033C8270 ADRP X8, 0xD64000
	0x033C8274 LDR X2, [X31 + 0x8]
	0x033C8278 LDR X8, [X8 + 0x940]
	0x033C827C MOV X1, X19
	0x033C8280 LDR X3, [X8]
	0x033C8284 BL 0x2AA5084
	0x033C8288 LDR X0, [X31 + 0x8]
	0x033C828C LDP X20, X19, [X31 + 0x20]
	0x033C8290 LDP X30, X21, [X31 + 0x10]
	0x033C8294 ADD X31, X31, 0x30
	0x033C8298 RET
	0x033C829C BL 0x1C16F20
	0x033C82A0 STR X1, [X0 + 0x10]
	0x033C82A4 STR W2, [X0 + 0x18]
	0x033C82A8 RET
	0x033C82AC STP X30, X21, [X31 - 0x20]!
	0x033C82B0 STP X20, X19, [X31 + 0x10]
	0x033C82B4 ADRP X21, 0x1015000
	0x033C82B8 LDRB W8, [X21 + 0x281]
	0x033C82BC MOV W20, W1
	0x033C82C0 MOV X19, X0
	0x033C82C4 TBNZ X8, 0x0, 0x33C8300
	0x033C82C8 ADRP X0, 0xD64000
	0x033C82CC LDR X0, [X0 + 0x910]
	0x033C82D0 BL 0x1C16CF4
	0x033C82D4 ADRP X0, 0xD5E000
	0x033C82D8 LDR X0, [X0 + 0x3E0]
	0x033C82DC BL 0x1C16CF4
	0x033C82E0 ADRP X0, 0xD2B000
	0x033C82E4 LDR X0, [X0 + 0x9D0]
	0x033C82E8 BL 0x1C16CF4
	0x033C82EC ADRP X0, 0xD2B000
	0x033C82F0 LDR X0, [X0 + 0x6C0]
	0x033C82F4 BL 0x1C16CF4
	0x033C82F8 MOVZ W8, 0x1
	0x033C82FC STRB W8, [X21 + 0x281]
	0x033C8300 CBZ X19, 0x33C83D0
	0x033C8304 TBZ X20, 0x0, 0x33C8370
	0x033C8308 ADRP X8, 0xD2B000
	0x033C830C LDR X8, [X8 + 0x6C0]
	0x033C8310 LDR X0, [X8]
	0x033C8314 ADRP X8, 0xD64000
	0x033C8318 LDR X8, [X8 + 0x910]
	0x033C831C LDR W9, [X0 + 0xE0]
	0x033C8320 LDR X20, [X8]
	0x033C8324 CBNZ W9, 0x33C832C
	0x033C8328 BL 0x1C16DFC
	0x033C832C MOV X0, X20
	0x033C8330 MOV X1, X31
	0x033C8334 BL 0x338C698
	0x033C8338 ADRP X8, 0xD5E000
	0x033C833C LDR X8, [X8 + 0x3E0]
	0x033C8340 MOV X20, X0
	0x033C8344 LDR X8, [X8]
	0x033C8348 LDR W9, [X8 + 0xE0]
	0x033C834C CBNZ W9, 0x33C8358
	0x033C8350 MOV X0, X8
	0x033C8354 BL 0x1C16DFC
	0x033C8358 MOV X0, X19
	0x033C835C MOV X1, X20
	0x033C8360 LDP X20, X19, [X31 + 0x10]
	0x033C8364 MOVZ W2, 0x1
	0x033C8368 LDP X30, X21, [X31], #0x20
	0x033C836C B 0x33C7388
	0x033C8370 ADRP X8, 0xD5E000
	0x033C8374 LDR X8, [X8 + 0x3E0]
	0x033C8378 LDR X0, [X8]
	0x033C837C LDR W8, [X0 + 0xE0]
	0x033C8380 CBNZ W8, 0x33C8388
	0x033C8384 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1016000
	008 Move X23, 0xD5F000
	009 Move W8, [X22+639]
	010 Move X23, [X23+992]
	011 Move W21, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xD64000
	019 Move X0, [X0+3344]
	020 Call 0x1C17CF4
	021 Move X0, 0xD5C000
	022 Move X0, [X0+3440]
	023 Call 0x1C17CF4
	024 Move X0, 0xD5F000
	025 Move X0, [X0+992]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+639], W8
	029 Move X0, [X23]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Call MonoCustomAttrs.IsUserCattrProvider, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {58}
	040 Compare X20, 0
	041 JumpIfEqual {123}
	042 Move X10, 0xD5C000
	043 Move X8, [X20]
	044 Move X10, [X10+3440]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move X1, [X10]
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move X0, X20
	056 Move W2, W31
	057 Call 0x1C5D788
	058 Move X0, [X23]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X20
	064 Move X1, X19
	065 Move W2, W31
	066 Call 0x1C3AE0C
	067 NotImplemented "Instruction LDRSW not yet implemented."
	068 Add X8, X8, X9
	069 Add X0, X8, 312
	070 Move X8, [X0]
	071 Move X3, [X0+8]
	072 Move W2, 1
	073 Move X0, X20
	074 Move X1, X19
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X22, X0
	077 Move TEMP, X21
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {115}
	081 Move X0, [X23]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X0, X20
	087 Move X1, X19
	088 Call MonoCustomAttrs.GetPseudoCustomAttributes, X0, X1
	089 Compare X0, 0
	090 JumpIfEqual {115}
	091 Compare X22, 0
	092 JumpIfEqual {123}
	093 Move X8, 0xD64000
	094 Move X8, [X8+3344]
	095 Move W9, [X22+24]
	096 Move W10, [X0+24]
	097 Move X19, X0
	098 Move X0, [X8]
	099 Add W1, W10, W9
	100 Call 0x1C17D6C
	101 Move W2, [X22+24]
	102 Move X20, X0
	103 Move X0, X22
	104 Move X1, X20
	105 Move X3, X31
	106 Call Array.Copy, X0, X1, X2
	107 Move W3, [X22+24]
	108 Move W4, [X19+24]
	109 Move X0, X19
	110 Move W1, W31
	111 Move X2, X20
	112 Move X5, X31
	113 Call Array.Copy, X0, X1, X2, X3, X4
	114 Move X22, X20
	115 Move X0, X22
	116 Move X20, [X31+32]
	117 Move X19, [X31+40]
	118 Move X22, [X31+16]
	119 Move X21, [X31+24]
	120 Move X30, [X31+48]
	121 Move X23, [X31+56]
	122 Return X0
	123 Call 0x1C17F20

Method: System.Object[] GetCustomAttributes(System.Reflection.ICustomAttributeProvider obj, System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x033C8388 MOV X0, X19
	0x033C838C MOV X1, X31
	0x033C8390 MOV W2, W31
	0x033C8394 BL 0x33C71E8
	0x033C8398 CBZ X0, 0x33C8418
	0x033C839C MOV X1, X31
	0x033C83A0 BL 0x33A01F0
	0x033C83A4 CBZ X0, 0x33C83C4
	0x033C83A8 ADRP X8, 0xD2B000
	0x033C83AC LDR X8, [X8 + 0x9D0]
	0x033C83B0 MOV X19, X0
	0x033C83B4 LDR X20, [X8]
	0x033C83B8 MOV X1, X20
	0x033C83BC BL 0x1C16E00
	0x033C83C0 CBZ X0, 0x33C841C
	0x033C83C4 LDP X20, X19, [X31 + 0x10]
	0x033C83C8 LDP X30, X21, [X31], #0x20
	0x033C83CC RET
	0x033C83D0 ADRP X0, 0xD30000
	0x033C83D4 LDR X0, [X0 + 0x528]
	0x033C83D8 BL 0x1C16D08
	0x033C83DC BL 0x1C16F10
	0x033C83E0 MOV X19, X0
	0x033C83E4 ADRP X0, 0xD36000
	0x033C83E8 LDR X0, [X0 + 0x8A8]
	0x033C83EC BL 0x1C16D08
	0x033C83F0 MOV X1, X0
	0x033C83F4 MOV X0, X19
	0x033C83F8 MOV X2, X31
	0x033C83FC BL 0x330E100
	0x033C8400 ADRP X0, 0xD64000
	0x033C8404 LDR X0, [X0 + 0x950]
	0x033C8408 BL 0x1C16D08
	0x033C840C MOV X1, X0
	0x033C8410 MOV X0, X19
	0x033C8414 BL 0x1C16DEC
	0x033C8418 BL 0x1C16F20
	0x033C841C MOV X0, X19
	0x033C8420 MOV X1, X20
	0x033C8424 BL 0x1C171E0
	0x033C8428 B 0x1C39E7C
	0x033C842C STP X30, X21, [X31 - 0x20]!
	0x033C8430 STP X20, X19, [X31 + 0x10]
	0x033C8434 ADRP X21, 0x1015000
	0x033C8438 LDRB W8, [X21 + 0x282]
	0x033C843C MOV W20, W1
	0x033C8440 MOV X19, X0
	0x033C8444 TBNZ X8, 0x0, 0x33C8474
	0x033C8448 ADRP X0, 0xD64000
	0x033C844C LDR X0, [X0 + 0x910]
	0x033C8450 BL 0x1C16CF4
	0x033C8454 ADRP X0, 0xD5E000
	0x033C8458 LDR X0, [X0 + 0x3E0]
	0x033C845C BL 0x1C16CF4
	0x033C8460 ADRP X0, 0xD2B000
	0x033C8464 LDR X0, [X0 + 0x6C0]
	0x033C8468 BL 0x1C16CF4
	0x033C846C MOVZ W8, 0x1
	0x033C8470 STRB W8, [X21 + 0x282]
	0x033C8474 CBZ X19, 0x33C8514
	0x033C8478 TBZ X20, 0x0, 0x33C84E4
	0x033C847C ADRP X8, 0xD2B000
	0x033C8480 LDR X8, [X8 + 0x6C0]
	0x033C8484 LDR X0, [X8]
	0x033C8488 ADRP X8, 0xD64000
	0x033C848C LDR X8, [X8 + 0x910]
	0x033C8490 LDR W9, [X0 + 0xE0]
	0x033C8494 LDR X20, [X8]
	0x033C8498 CBNZ W9, 0x33C84A0
	0x033C849C BL 0x1C16DFC
	0x033C84A0 MOV X0, X20
	0x033C84A4 MOV X1, X31
	0x033C84A8 BL 0x338C698
	0x033C84AC ADRP X8, 0xD5E000
	0x033C84B0 LDR X8, [X8 + 0x3E0]
	0x033C84B4 MOV X20, X0
	0x033C84B8 LDR X8, [X8]
	0x033C84BC LDR W9, [X8 + 0xE0]
	0x033C84C0 CBNZ W9, 0x33C84CC
	0x033C84C4 MOV X0, X8
	0x033C84C8 BL 0x1C16DFC
	0x033C84CC MOV X0, X19
	0x033C84D0 MOV X1, X20
	0x033C84D4 LDP X20, X19, [X31 + 0x10]
	0x033C84D8 MOVZ W2, 0x1
	0x033C84DC LDP X30, X21, [X31], #0x20
	0x033C84E0 B 0x33C8718
	0x033C84E4 ADRP X8, 0xD5E000
	0x033C84E8 LDR X8, [X8 + 0x3E0]
	0x033C84EC LDR X0, [X8]
	0x033C84F0 LDR W8, [X0 + 0xE0]
	0x033C84F4 CBNZ W8, 0x33C84FC
	0x033C84F8 BL 0x1C16DFC
	0x033C84FC MOV X0, X19
	0x033C8500 LDP X20, X19, [X31 + 0x10]
	0x033C8504 MOV X1, X31
	0x033C8508 MOV W2, W31
	0x033C850C LDP X30, X21, [X31], #0x20
	0x033C8510 B 0x33C855C
	0x033C8514 ADRP X0, 0xD30000
	0x033C8518 LDR X0, [X0 + 0x528]
	0x033C851C BL 0x1C16D08
	0x033C8520 BL 0x1C16F10
	0x033C8524 MOV X19, X0
	0x033C8528 ADRP X0, 0xD36000
	0x033C852C LDR X0, [X0 + 0x8A8]
	0x033C8530 BL 0x1C16D08
	0x033C8534 MOV X1, X0
	0x033C8538 MOV X0, X19
	0x033C853C MOV X2, X31
	0x033C8540 BL 0x330E100
	0x033C8544 ADRP X0, 0xD64000
	0x033C8548 LDR X0, [X0 + 0x958]
	0x033C854C BL 0x1C16D08
	0x033C8550 MOV X1, X0
	0x033C8554 MOV X0, X19
	0x033C8558 BL 0x1C16DEC
	0x033C855C STR X30, [X31 - 0x40]!
	0x033C8560 STP X24, X23, [X31 + 0x10]
	0x033C8564 STP X22, X21, [X31 + 0x20]
	0x033C8568 STP X20, X19, [X31 + 0x30]
	0x033C856C ADRP X22, 0x1015000
	0x033C8570 ADRP X23, 0xD5E000
	0x033C8574 LDRB W8, [X22 + 0x284]
	0x033C8578 LDR X23, [X23 + 0x3E0]
	0x033C857C MOV W21, W2
	0x033C8580 MOV X19, X1
	0x033C8584 MOV X20, X0
	0x033C8588 TBNZ X8, 0x0, 0x33C85C4
	0x033C858C ADRP X0, 0xD64000
	0x033C8590 LDR X0, [X0 + 0x960]
	0x033C8594 BL 0x1C16CF4
	0x033C8598 ADRP X0, 0xD64000
	0x033C859C LDR X0, [X0 + 0x968]
	0x033C85A0 BL 0x1C16CF4
	0x033C85A4 ADRP X0, 0xD5D000
	0x033C85A8 LDR X0, [X0 + 0xC78]
	0x033C85AC BL 0x1C16CF4
	0x033C85B0 ADRP X0, 0xD5E000
	0x033C85B4 LDR X0, [X0 + 0x3E0]
	0x033C85B8 BL 0x1C16CF4
	0x033C85BC MOVZ W8, 0x1
	0x033C85C0 STRB W8, [X22 + 0x284]
	0x033C85C4 LDR X0, [X23]
	0x033C85C8 LDR W8, [X0 + 0xE0]
	0x033C85CC CBNZ W8, 0x33C85D4
	0x033C85D0 BL 0x1C16DFC
	0x033C85D4 MOV X0, X20
	0x033C85D8 BL 0x33C6BB8
	0x033C85DC TBZ X0, 0x0, 0x33C863C
	0x033C85E0 ADRP X8, 0xD64000
	0x033C85E4 LDR X8, [X8 + 0x968]
	0x033C85E8 LDR X22, [X8]
	0x033C85EC LDR X8, [X22 + 0x38]
	0x033C85F0 CBNZ X8, 0x33C8600
	0x033C85F4 MOV X0, X22
	0x033C85F8 BL 0x1C5C6E0
	0x033C85FC LDR X8, [X22 + 0x38]
	0x033C8600 LDR X0, [X8 + 0x10]
	0x033C8604 LDRB W8, [X0 + 0x135]
	0x033C8608 TBNZ X8, 0x0, 0x33C8610
	0x033C860C BL 0x1C5C684
	0x033C8610 LDR W8, [X0 + 0xE0]
	0x033C8614 CBNZ W8, 0x33C861C
	0x033C8618 BL 0x1C16DFC
	0x033C861C LDR X8, [X22 + 0x38]
	0x033C8620 LDR X0, [X8 + 0x10]
	0x033C8624 LDRB W8, [X0 + 0x135]
	0x033C8628 TBNZ X8, 0x0, 0x33C8630
	0x033C862C BL 0x1C5C684
	0x033C8630 LDR X8, [X0 + 0xB8]
	0x033C8634 LDR X22, [X8]
	0x033C8638 B 0x33C8658
	0x033C863C LDR X0, [X23]
	0x033C8640 LDR W8, [X0 + 0xE0]
	0x033C8644 CBNZ W8, 0x33C864C
	0x033C8648 BL 0x1C16DFC
	0x033C864C MOV X0, X20
	0x033C8650 BL 0x1C39E7C
	0x033C8654 MOV X22, X0
	0x033C8658 ADRP X24, 0xD64000
	0x033C865C LDR X24, [X24 + 0x960]
	0x033C8660 TBNZ X21, 0x0, 0x33C86EC
	0x033C8664 LDR X0, [X23]
	0x033C8668 LDR W8, [X0 + 0xE0]
	0x033C866C CBNZ W8, 0x33C8674
	0x033C8670 BL 0x1C16DFC
	0x033C8674 MOV X0, X20
	0x033C8678 MOV X1, X19
	0x033C867C BL 0x33C9AB4
	0x033C8680 CBZ X0, 0x33C86EC
	0x033C8684 CBZ X22, 0x33C8714
	0x033C8688 LDR X8, [X22 + 0x18]
	0x033C868C MOV X19, X0
	0x033C8690 CBZ X8, 0x33C8708
	0x033C8694 ADRP X9, 0xD5D000
	0x033C8698 LDR X9, [X9 + 0xC78]
	0x033C869C LDR W10, [X19 + 0x18]
	0x033C86A0 LDR X0, [X9]
	0x033C86A4 ADD W1, W10, W8
	0x033C86A8 BL 0x1C16D6C
	0x033C86AC LDR W2, [X22 + 0x18]
	0x033C86B0 MOV X20, X0
	0x033C86B4 MOV X0, X22
	0x033C86B8 MOV X1, X20
	0x033C86BC MOV X3, X31
	0x033C86C0 BL 0x33A0C7C
	0x033C86C4 LDR W3, [X22 + 0x18]
	0x033C86C8 LDR W4, [X19 + 0x18]
	0x033C86CC MOV X0, X19
	0x033C86D0 MOV W1, W31
	0x033C86D4 MOV X2, X20
	0x033C86D8 MOV X5, X31
	0x033C86DC BL 0x339FCE8
	0x033C86E0 LDR X1, [X24]
	0x033C86E4 MOV X0, X20
	0x033C86E8 B 0x33C86F4
	0x033C86EC LDR X1, [X24]
	0x033C86F0 MOV X0, X22
	0x033C86F4 LDP X20, X19, [X31 + 0x30]
	0x033C86F8 LDP X22, X21, [X31 + 0x20]
	0x033C86FC LDP X24, X23, [X31 + 0x10]
	0x033C8700 LDR X30, [X31], #0x40
	0x033C8704 B 0x22C990C
	0x033C8708 LDR X1, [X24]
	0x033C870C MOV X0, X19
	0x033C8710 B 0x33C86F4
	0x033C8714 BL 0x1C16F20
	0x033C8718 SUB X31, X31, 0x70
	0x033C871C STP X29, X30, [X31 + 0x10]
	0x033C8720 STP X28, X27, [X31 + 0x20]
	0x033C8724 STP X26, X25, [X31 + 0x30]
	0x033C8728 STP X24, X23, [X31 + 0x40]
	0x033C872C STP X22, X21, [X31 + 0x50]
	0x033C8730 STP X20, X19, [X31 + 0x60]
	0x033C8734 ADRP X20, 0x1015000
	0x033C8738 LDRB W8, [X20 + 0x283]
	0x033C873C MOV W22, W2
	0x033C8740 MOV X19, X1
	0x033C8744 MOV X27, X0
	0x033C8748 TBNZ X8, 0x0, 0x33C8850
	0x033C874C ADRP X0, 0xD64000
	0x033C8750 LDR X0, [X0 + 0x968]
	0x033C8754 BL 0x1C16CF4
	0x033C8758 ADRP X0, 0xD64000
	0x033C875C LDR X0, [X0 + 0x8D8]
	0x033C8760 BL 0x1C16CF4
	0x033C8764 ADRP X0, 0xD5D000
	0x033C8768 LDR X0, [X0 + 0xC78]
	0x033C876C BL 0x1C16CF4
	0x033C8770 ADRP X0, 0xD64000
	0x033C8774 LDR X0, [X0 + 0x8E0]
	0x033C8778 BL 0x1C16CF4
	0x033C877C ADRP X0, 0xD64000
	0x033C8780 LDR X0, [X0 + 0x8E8]
	0x033C8784 BL 0x1C16CF4
	0x033C8788 ADRP X0, 0xD64000
	0x033C878C LDR X0, [X0 + 0x8F0]
	0x033C8790 BL 0x1C16CF4
	0x033C8794 ADRP X0, 0xD64000
	0x033C8798 LDR X0, [X0 + 0x8F8]
	0x033C879C BL 0x1C16CF4
	0x033C87A0 ADRP X0, 0xD64000
	0x033C87A4 LDR X0, [X0 + 0x970]
	0x033C87A8 BL 0x1C16CF4
	0x033C87AC ADRP X0, 0xD2B000
	0x033C87B0 LDR X0, [X0 + 0xE00]
	0x033C87B4 BL 0x1C16CF4
	0x033C87B8 ADRP X0, 0xD64000
	0x033C87BC LDR X0, [X0 + 0x978]
	0x033C87C0 BL 0x1C16CF4
	0x033C87C4 ADRP X0, 0xD64000
	0x033C87C8 LDR X0, [X0 + 0x980]
	0x033C87CC BL 0x1C16CF4
	0x033C87D0 ADRP X0, 0xD2B000
	0x033C87D4 LDR X0, [X0 + 0xE18]
	0x033C87D8 BL 0x1C16CF4
	0x033C87DC ADRP X0, 0xD64000
	0x033C87E0 LDR X0, [X0 + 0x988]
	0x033C87E4 BL 0x1C16CF4
	0x033C87E8 ADRP X0, 0xD64000
	0x033C87EC LDR X0, [X0 + 0x990]
	0x033C87F0 BL 0x1C16CF4
	0x033C87F4 ADRP X0, 0xD64000
	0x033C87F8 LDR X0, [X0 + 0x998]
	0x033C87FC BL 0x1C16CF4
	0x033C8800 ADRP X0, 0xD64000
	0x033C8804 LDR X0, [X0 + 0x9A0]
	0x033C8808 BL 0x1C16CF4
	0x033C880C ADRP X0, 0xD64000
	0x033C8810 LDR X0, [X0 + 0x9A8]
	0x033C8814 BL 0x1C16CF4
	0x033C8818 ADRP X0, 0xD2B000
	0x033C881C LDR X0, [X0 + 0x5A8]
	0x033C8820 BL 0x1C16CF4
	0x033C8824 ADRP X0, 0xD64000
	0x033C8828 LDR X0, [X0 + 0x910]
	0x033C882C BL 0x1C16CF4
	0x033C8830 ADRP X0, 0xD5E000
	0x033C8834 LDR X0, [X0 + 0x3E0]
	0x033C8838 BL 0x1C16CF4
	0x033C883C ADRP X0, 0xD2B000
	0x033C8840 LDR X0, [X0 + 0x6C0]
	0x033C8844 BL 0x1C16CF4
	0x033C8848 MOVZ W8, 0x1
	0x033C884C STRB W8, [X20 + 0x283]
	0x033C8850 STR X31, [X31 + 0x8]
	0x033C8854 CBZ X27, 0x33C97F8
	0x033C8858 ADRP X8, 0xD2B000
	0x033C885C LDR X8, [X8 + 0x6C0]
	0x033C8860 LDR X0, [X8]
	0x033C8864 LDR W8, [X0 + 0xE0]
	0x033C8868 CBNZ W8, 0x33C8870
	0x033C886C BL 0x1C16DFC
	0x033C8870 MOV X0, X19
	0x033C8874 MOV X1, X31
	0x033C8878 MOV X2, X31
	0x033C887C BL 0x3395194
	0x033C8880 TBNZ X0, 0x0, 0x33C9818
	0x033C8884 ADRP X8, 0xD2B000
	0x033C8888 LDR X8, [X8 + 0x6C0]
	0x033C888C ADRP X24, 0xD5E000
	0x033C8890 LDR X0, [X8]
	0x033C8894 ADRP X8, 0xD64000
	0x033C8898 LDR X8, [X8 + 0x910]
	0x033C889C LDR W9, [X0 + 0xE0]
	0x033C88A0 LDR X21, [X8]
	0x033C88A4 LDR X24, [X24 + 0x3E0]
	0x033C88A8 CBNZ W9, 0x33C88B0
	0x033C88AC BL 0x1C16DFC
	0x033C88B0 MOV X0, X21
	0x033C88B4 MOV X1, X31
	0x033C88B8 BL 0x338C698
	0x033C88BC MOV X1, X0
	0x033C88C0 MOV X0, X19
	0x033C88C4 MOV X2, X31
	0x033C88C8 BL 0x3395194
	0x033C88CC LDR X8, [X24]
	0x033C88D0 ANDS W31, W0, 0x1
	0x033C88D4 CSEL X19, X31, X19, NE
	0x033C88D8 LDR W9, [X8 + 0xE0]
	0x033C88DC CBNZ W9, 0x33C88E8
	0x033C88E0 MOV X0, X8
	0x033C88E4 BL 0x1C16DFC
	0x033C88E8 ADRP X23, 0xD64000
	0x033C88EC LDR X23, [X23 + 0x970]
	0x033C88F0 MOV X0, X27
	0x033C88F4 MOV X1, X19
	0x033C88F8 MOV W2, W31
	0x033C88FC BL 0x33C855C
	0x033C8900 MOV X21, X0
	0x033C8904 TBZ X22, 0x0, 0x33C8930
	0x033C8908 LDR X0, [X24]
	0x033C890C LDR W8, [X0 + 0xE0]
	0x033C8910 CBNZ W8, 0x33C8918
	0x033C8914 BL 0x1C16DFC
	0x033C8918 MOV X0, X27
	0x033C891C BL 0x33C7D6C
	0x033C8920 CMP X0, 0x0
	0x033C8924 CSET W8, NE
	0x033C8928 AND W20, W8, W22, 0x0
	0x033C892C B 0x33C89E0
	0x033C8930 CBZ X21, 0x33C9798
	0x033C8934 LDR X8, [X21]
	0x033C8938 LDR X1, [X23]
	0x033C893C LDRH W9, [X8 + 0x12E]
	0x033C8940 CBZ X9, 0x33C8964
	0x033C8944 LDR X10, [X8 + 0xB0]
	0x033C8948 ADD X10, X10, 0x8
	0x033C894C LDUR X11, [X10 - 0x8]
	0x033C8950 CMP X11, X1
	0x033C8954 B.EQ 0x33C8974
	0x033C8958 SUBS X9, X9, 0x1
	0x033C895C ADD X10, X10, 0x10
	0x033C8960 B.NE 0x33C894C
	0x033C8964 MOV X0, X21
	0x033C8968 MOV W2, W31
	0x033C896C BL 0x1C5C788
	0x033C8970 B 0x33C8980
	0x033C8974 LDRSW X9, [X10]
	0x033C8978 ADD X8, X8, X9, 0x4, LSL
	0x033C897C ADD X0, X8, 0x138
	0x033C8980 LDP X8, X1, [X0]
	0x033C8984 MOV X0, X21
	0x033C8988 BLR X8
	0x033C898C CMP W0, 0x1
	0x033C8990 B.NE 0x33C89DC
	0x033C8994 ADRP X20, 0xD64000
	0x033C8998 LDR X8, [X21]
	0x033C899C LDR X20, [X20 + 0x988]
	0x033C89A0 LDRH W9, [X8 + 0x12E]
	0x033C89A4 LDR X1, [X20]
	0x033C89A8 CBZ X9, 0x33C89CC
	0x033C89AC LDR X10, [X8 + 0xB0]
	0x033C89B0 ADD X10, X10, 0x8
	0x033C89B4 LDUR X11, [X10 - 0x8]
	0x033C89B8 CMP X11, X1
	0x033C89BC B.EQ 0x33C90C8
	0x033C89C0 SUBS X9, X9, 0x1
	0x033C89C4 ADD X10, X10, 0x10
	0x033C89C8 B.NE 0x33C89B4
	0x033C89CC MOV X0, X21
	0x033C89D0 MOV W2, W31
	0x033C89D4 BL 0x1C5C788
	0x033C89D8 B 0x33C90D4
	0x033C89DC MOV W20, W31
	0x033C89E0 ADRP X8, 0xD2B000
	0x033C89E4 LDR X8, [X8 + 0x6C0]
	0x033C89E8 LDR X0, [X8]
	0x033C89EC LDR W8, [X0 + 0xE0]
	0x033C89F0 CBNZ W8, 0x33C89F8
	0x033C89F4 BL 0x1C16DFC
	0x033C89F8 MOV X0, X19
	0x033C89FC MOV X1, X31
	0x033C8A00 MOV X2, X31
	0x033C8A04 BL 0x3395F0C
	0x033C8A08 TBZ X0, 0x0, 0x33C8A24
	0x033C8A0C CBZ X19, 0x33C9798
	0x033C8A10 MOV X0, X19
	0x033C8A14 MOV X1, X31
	0x033C8A18 BL 0x339705C
	0x033C8A1C AND W8, W0, 0x1
	0x033C8A20 B 0x33C8A28
	0x033C8A24 MOV W8, W31
	0x033C8A28 ANDS W31, W8, W20, 0x0
	0x033C8A2C B.EQ 0x33C8A5C
	0x033C8A30 LDR X0, [X24]
	0x033C8A34 LDR W8, [X0 + 0xE0]
	0x033C8A38 CBNZ W8, 0x33C8A40
	0x033C8A3C BL 0x1C16DFC
	0x033C8A40 MOV X0, X19
	0x033C8A44 BL 0x33C8130
	0x033C8A48 CBZ X0, 0x33C9798
	0x033C8A4C LDRB W8, [X0 + 0x15]
	0x033C8A50 CMP W8, 0x0
	0x033C8A54 CSET W8, NE
	0x033C8A58 AND W20, W20, W8, 0x0
	0x033C8A5C CBZ X21, 0x33C9798
	0x033C8A60 LDR X8, [X21]
	0x033C8A64 ADRP X22, 0xD2B000
	0x033C8A68 LDR X1, [X23]
	0x033C8A6C LDRH W9, [X8 + 0x12E]
	0x033C8A70 LDR X22, [X22 + 0x5A8]
	0x033C8A74 CBZ X9, 0x33C8A98
	0x033C8A78 LDR X10, [X8 + 0xB0]
	0x033C8A7C ADD X10, X10, 0x8
	0x033C8A80 LDUR X11, [X10 - 0x8]
	0x033C8A84 CMP X11, X1
	0x033C8A88 B.EQ 0x33C8AA8
	0x033C8A8C SUBS X9, X9, 0x1
	0x033C8A90 ADD X10, X10, 0x10
	0x033C8A94 B.NE 0x33C8A80
	0x033C8A98 MOV X0, X21
	0x033C8A9C MOV W2, W31
	0x033C8AA0 BL 0x1C5C788
	0x033C8AA4 B 0x33C8AB4
	0x033C8AA8 LDRSW X9, [X10]
	0x033C8AAC ADD X8, X8, X9, 0x4, LSL
	0x033C8AB0 ADD X0, X8, 0x138
	0x033C8AB4 LDP X8, X1, [X0]
	0x033C8AB8 MOV X0, X21
	0x033C8ABC BLR X8
	0x033C8AC0 LDR X8, [X22]
	0x033C8AC4 MOV W22, W0
	0x033C8AC8 LDR W9, [X8 + 0xE0]
	0x033C8ACC CBNZ W9, 0x33C8AD8
	0x033C8AD0 MOV X0, X8
	0x033C8AD4 BL 0x1C16DFC
	0x033C8AD8 MOVZ W1, 0x10
	0x033C8ADC MOV W0, W22
	0x033C8AE0 MOV X2, X31
	0x033C8AE4 BL 0x337EDF0
	0x033C8AE8 MOV W24, W0
	0x033C8AEC TBZ X20, 0x0, 0x33C8FCC
	0x033C8AF0 ADRP X8, 0xD64000
	0x033C8AF4 LDR X8, [X8 + 0x8F8]
	0x033C8AF8 LDR X0, [X8]
	0x033C8AFC BL 0x1C16F10
	0x033C8B00 ADRP X8, 0xD64000
	0x033C8B04 LDR X8, [X8 + 0x8F0]
	0x033C8B08 MOV W1, W24
	0x033C8B0C MOV X22, X0
	0x033C8B10 LDR X2, [X8]
	0x033C8B14 BL 0x2AA481C
	0x033C8B18 ADRP X8, 0xD64000
	0x033C8B1C LDR X8, [X8 + 0x9A8]
	0x033C8B20 LDR X0, [X8]
	0x033C8B24 BL 0x1C16F10
	0x033C8B28 ADRP X8, 0xD64000
	0x033C8B2C LDR X8, [X8 + 0x9A0]
	0x033C8B30 MOV W1, W24
	0x033C8B34 MOV X23, X0
	0x033C8B38 LDR X2, [X8]
	0x033C8B3C BL 0x301B830
	0x033C8B40 ADRP X20, 0xD2B000
	0x033C8B44 ADRP X26, 0xD64000
	0x033C8B48 ADRP X25, 0xD64000
	0x033C8B4C LDR X20, [X20 + 0xE18]
	0x033C8B50 LDR X26, [X26 + 0x980]
	0x033C8B54 LDR X25, [X25 + 0x8E8]
	0x033C8B58 MOV W24, W31
	0x033C8B5C LDR X8, [X21]
	0x033C8B60 ADRP X10, 0xD64000
	0x033C8B64 LDRH W9, [X8 + 0x12E]
	0x033C8B68 LDR X10, [X10 + 0x978]
	0x033C8B6C STR X27, [X31]
	0x033C8B70 LDR X1, [X10]
	0x033C8B74 CBZ X9, 0x33C8B98
	0x033C8B78 LDR X10, [X8 + 0xB0]
	0x033C8B7C ADD X10, X10, 0x8
	0x033C8B80 LDUR X11, [X10 - 0x8]
	0x033C8B84 CMP X11, X1
	0x033C8B88 B.EQ 0x33C8BA8
	0x033C8B8C SUBS X9, X9, 0x1
	0x033C8B90 ADD X10, X10, 0x10
	0x033C8B94 B.NE 0x33C8B80
	0x033C8B98 MOV X0, X21
	0x033C8B9C MOV W2, W31
	0x033C8BA0 BL 0x1C5C788
	0x033C8BA4 B 0x33C8BB4
	0x033C8BA8 LDRSW X9, [X10]
	0x033C8BAC ADD X8, X8, X9, 0x4, LSL
	0x033C8BB0 ADD X0, X8, 0x138
	0x033C8BB4 LDP X8, X1, [X0]
	0x033C8BB8 MOV X0, X21
	0x033C8BBC BLR X8
	0x033C8BC0 MOV X21, X0
	0x033C8BC4 CBZ X0, 0x33C8F5C
	0x033C8BC8 LDR X8, [X21]
	0x033C8BCC LDR X1, [X20]
	0x033C8BD0 LDRH W9, [X8 + 0x12E]
	0x033C8BD4 CBZ X9, 0x33C8BF8
	0x033C8BD8 LDR X10, [X8 + 0xB0]
	0x033C8BDC ADD X10, X10, 0x8
	0x033C8BE0 LDUR X11, [X10 - 0x8]
	0x033C8BE4 CMP X11, X1
	0x033C8BE8 B.EQ 0x33C8C08
	0x033C8BEC SUBS X9, X9, 0x1
	0x033C8BF0 ADD X10, X10, 0x10
	0x033C8BF4 B.NE 0x33C8BE0
	0x033C8BF8 MOV X0, X21
	0x033C8BFC MOV W2, W31
	0x033C8C00 BL 0x1C5C788
	0x033C8C04 B 0x33C8C14
	0x033C8C08 LDRSW X9, [X10]
	0x033C8C0C ADD X8, X8, X9, 0x4, LSL
	0x033C8C10 ADD X0, X8, 0x138
	0x033C8C14 LDP X8, X1, [X0]
	0x033C8C18 MOV X0, X21
	0x033C8C1C BLR X8
	0x033C8C20 TBZ X0, 0x0, 0x33C8E04
	0x033C8C24 LDR X8, [X21]
	0x033C8C28 LDR X1, [X26]
	0x033C8C2C LDRH W9, [X8 + 0x12E]
	0x033C8C30 CBZ X9, 0x33C8C54
	0x033C8C34 LDR X10, [X8 + 0xB0]
	0x033C8C38 ADD X10, X10, 0x8
	0x033C8C3C LDUR X11, [X10 - 0x8]
	0x033C8C40 CMP X11, X1
	0x033C8C44 B.EQ 0x33C8C64
	0x033C8C48 SUBS X9, X9, 0x1
	0x033C8C4C ADD X10, X10, 0x10
	0x033C8C50 B.NE 0x33C8C3C
	0x033C8C54 MOV X0, X21
	0x033C8C58 MOV W2, W31
	0x033C8C5C BL 0x1C5C788
	0x033C8C60 B 0x33C8C70
	0x033C8C64 LDRSW X9, [X10]
	0x033C8C68 ADD X8, X8, X9, 0x4, LSL
	0x033C8C6C ADD X0, X8, 0x138
	0x033C8C70 LDP X8, X1, [X0]
	0x033C8C74 MOV X0, X21
	0x033C8C78 BLR X8
	0x033C8C7C MOV X28, X0
	0x033C8C80 CBZ X0, 0x33C8ED8
	0x033C8C84 MOV X0, X28
	0x033C8C88 MOV X1, X31
	0x033C8C8C BL 0x32D7840
	0x033C8C90 ADRP X8, 0xD2B000
	0x033C8C94 LDR X8, [X8 + 0x6C0]
	0x033C8C98 MOV X27, X0
	0x033C8C9C LDR X0, [X8]
	0x033C8CA0 LDR W8, [X0 + 0xE0]
	0x033C8CA4 CBNZ W8, 0x33C8CAC
	0x033C8CA8 BL 0x1C16DFC
	0x033C8CAC MOV X0, X19
	0x033C8CB0 MOV X1, X31
	0x033C8CB4 MOV X2, X31
	0x033C8CB8 BL 0x3395F0C
	0x033C8CBC TBZ X0, 0x0, 0x33C8CE0
	0x033C8CC0 CBZ X19, 0x33C8F2C
	0x033C8CC4 LDR X8, [X19]
	0x033C8CC8 LDR X9, [X8 + 0x2A8]
	0x033C8CCC LDR X2, [X8 + 0x2B0]
	0x033C8CD0 MOV X0, X19
	0x033C8CD4 MOV X1, X27
	0x033C8CD8 BLR X9
	0x033C8CDC TBZ X0, 0x0, 0x33C8BC8
	0x033C8CE0 CBZ X22, 0x33C8F24
	0x033C8CE4 LDR X3, [X25]
	0x033C8CE8 ADD X2, X31, 0x8
	0x033C8CEC MOV X0, X22
	0x033C8CF0 MOV X1, X27
	0x033C8CF4 BL 0x2AA6B2C
	0x033C8CF8 TBZ X0, 0x0, 0x33C8D1C
	0x033C8CFC LDR X8, [X31 + 0x8]
	0x033C8D00 CBZ X8, 0x33C8F4C
	0x033C8D04 LDR X29, [X8 + 0x10]
	0x033C8D08 CBZ W24, 0x33C8D44
	0x033C8D0C CBZ X29, 0x33C8F34
	0x033C8D10 LDRB W8, [X29 + 0x15]
	0x033C8D14 CBNZ W8, 0x33C8D48
	0x033C8D18 B 0x33C8DC4
	0x033C8D1C ADRP X8, 0xD5E000
	0x033C8D20 LDR X8, [X8 + 0x3E0]
	0x033C8D24 LDR X0, [X8]
	0x033C8D28 LDR W8, [X0 + 0xE0]
	0x033C8D2C CBNZ W8, 0x33C8D34
	0x033C8D30 BL 0x1C16DFC
	0x033C8D34 MOV X0, X27
	0x033C8D38 BL 0x33C8130
	0x033C8D3C MOV X29, X0
	0x033C8D40 CBNZ W24, 0x33C8D0C
	0x033C8D44 CBZ X29, 0x33C8F54
	0x033C8D48 LDRB W8, [X29 + 0x14]
	0x033C8D4C CBNZ W8, 0x33C8D64
	0x033C8D50 LDR X8, [X31 + 0x8]
	0x033C8D54 CBZ X8, 0x33C8D64
	0x033C8D58 LDR W8, [X8 + 0x18]
	0x033C8D5C CMP W8, W24
	0x033C8D60 B.NE 0x33C8DC4
	0x033C8D64 CBZ X23, 0x33C8F44
	0x033C8D68 ADRP X9, 0xD64000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x1016000
	015 Move W8, [X20+640]
	016 Move W22, W2
	017 Move X19, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {73}
	023 Move X0, 0xD65000
	024 Move X0, [X0+2264]
	025 Call 0x1C17CF4
	026 Move X0, 0xD64000
	027 Move X0, [X0+3344]
	028 Call 0x1C17CF4
	029 Move X0, 0xD65000
	030 Move X0, [X0+2272]
	031 Call 0x1C17CF4
	032 Move X0, 0xD65000
	033 Move X0, [X0+2280]
	034 Call 0x1C17CF4
	035 Move X0, 0xD65000
	036 Move X0, [X0+2288]
	037 Call 0x1C17CF4
	038 Move X0, 0xD65000
	039 Move X0, [X0+2296]
	040 Call 0x1C17CF4
	041 Move X0, 0xD34000
	042 Move X0, [X0+3864]
	043 Call 0x1C17CF4
	044 Move X0, 0xD65000
	045 Move X0, [X0+2304]
	046 Call 0x1C17CF4
	047 Move X0, 0xD65000
	048 Move X0, [X0+2312]
	049 Call 0x1C17CF4
	050 Move X0, 0xD31000
	051 Move X0, [X0+1840]
	052 Call 0x1C17CF4
	053 Move X0, 0xD31000
	054 Move X0, [X0+1856]
	055 Call 0x1C17CF4
	056 Move X0, 0xD2C000
	057 Move X0, [X0+1448]
	058 Call 0x1C17CF4
	059 Move X0, 0xD65000
	060 Move X0, [X0+2320]
	061 Call 0x1C17CF4
	062 Move X0, 0xD5F000
	063 Move X0, [X0+992]
	064 Call 0x1C17CF4
	065 Move X0, 0xD2C000
	066 Move X0, [X0+2512]
	067 Call 0x1C17CF4
	068 Move X0, 0xD2C000
	069 Move X0, [X0+1728]
	070 Call 0x1C17CF4
	071 Move W8, 1
	072 Move [X20+640], W8
	073 Move [X31+8], X31
	074 Compare X23, 0
	075 JumpIfEqual {701}
	076 Move X8, 0xD2C000
	077 Move X8, [X8+1728]
	078 Move X0, [X8]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X0, X19
	084 Move X1, X31
	085 Move X2, X31
	086 Call Type.op_Equality, X0, X1
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {708}
	091 Move X8, 0xD2C000
	092 Move X8, [X8+1728]
	093 Move X24, 0xD5F000
	094 Move X0, [X8]
	095 Move X8, 0xD65000
	096 Move X8, [X8+2320]
	097 Move W9, [X0+224]
	098 Move X20, [X8]
	099 Move X24, [X24+992]
	100 Compare W9, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Move X0, X20
	104 Move X1, X31
	105 Call Type.GetTypeFromHandle, X0
	106 Move X1, X0
	107 Move X0, X19
	108 Move X2, X31
	109 Call Type.op_Equality, X0, X1
	110 Move X8, [X24]
	111 And W31, W0, 1
	112 NotImplemented "Instruction CSEL not yet implemented."
	113 Move W9, [X8+224]
	114 Compare W9, 0
	115 JumpIfNotEqual {118}
	116 Move X0, X8
	117 Call 0x1C17DFC
	118 Move X0, X23
	119 Move X1, X19
	120 Move W2, W31
	121 Call MonoCustomAttrs.GetCustomAttributesBase, X0, X1, X2
	122 Move X20, X0
	123 Move TEMP, X22
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfNotEqual {136}
	127 Move X0, [X24]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Move X0, X23
	133 Call MonoCustomAttrs.GetBase, X0
	134 NotImplemented "Instruction CMP not yet implemented."
	135 NotImplemented "Instruction CSET not yet implemented."
	136 Compare X20, 0
	137 JumpIfEqual {412}
	138 Move W8, [X20+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X8, [X20+32]
	141 Compare X8, 0
	142 JumpIfEqual {683}
	143 Move X8, 0xD2C000
	144 Move X8, [X8+1728]
	145 Move X0, [X8]
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Move X0, X19
	151 Move X1, X31
	152 Move X2, X31
	153 Call Type.op_Inequality, X0, X1
	154 Move W8, [X20+24]
	155 Compare W8, 0
	156 JumpIfEqual {723}
	157 Move W21, W0
	158 Move X0, [X20+32]
	159 Compare X0, 0
	160 JumpIfEqual {412}
	161 Call 0x1C26764
	162 Move X3, X0
	163 Move TEMP, X21
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfNotEqual {586}
	167 Compare X19, 0
	168 JumpIfEqual {412}
	169 Move X8, [X19]
	170 Move X0, X19
	171 Move X1, X3
	172 Move X9, [X8+680]
	173 Move X2, [X8+688]
	174 NotImplemented "Instruction BLR not yet implemented."
	175 Move TEMP, X0
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfNotEqual {631}
	179 Move W1, 1
	180 Move X0, X19
	181 Move W21, W31
	182 Move X8, 0xD2C000
	183 Move X8, [X8+1728]
	184 Move X0, [X8]
	185 Move W8, [X0+224]
	186 Compare W8, 0
	187 JumpIfNotEqual {189}
	188 Call 0x1C17DFC
	189 Move X0, X19
	190 Move X1, X31
	191 Move X2, X31
	192 Call Type.op_Inequality, X0, X1
	193 Move TEMP, X0
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfNotEqual {203}
	197 Compare X19, 0
	198 JumpIfEqual {412}
	199 Move X0, X19
	200 Move X1, X31
	201 Call Type.get_IsSealed, X0
	202 And W8, W0, 1
	203 Move W8, W31
	204 And W31, W8, W21
	205 Move X0, [X24]
	206 Move W8, [X0+224]
	207 Compare W8, 0
	208 JumpIfNotEqual {210}
	209 Call 0x1C17DFC
	210 Move X0, X19
	211 Call MonoCustomAttrs.RetrieveAttributeUsage, X0
	212 Compare X0, 0
	213 JumpIfEqual {412}
	214 Move W8, [X0+21]
	215 NotImplemented "Instruction CMP not yet implemented."
	216 NotImplemented "Instruction CSET not yet implemented."
	217 And W21, W21, W8
	218 Compare X20, 0
	219 JumpIfEqual {412}
	220 Move X8, 0xD2C000
	221 Move X8, [X8+1448]
	222 Move X0, [X8]
	223 Move W8, [X0+224]
	224 Compare W8, 0
	225 JumpIfNotEqual {227}
	226 Call 0x1C17DFC
	227 Move W0, [X20+24]
	228 Move W1, 16
	229 Move X2, X31
	230 Call Math.Max, X0, X1
	231 Move W24, W0
	232 Move TEMP, X21
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfNotEqual {413}
	236 Move [X31], X23
	237 Move X8, 0xD65000
	238 Move X8, [X8+2296]
	239 Move X0, [X8]
	240 Call 0x1C17F10
	241 Move X8, 0xD65000
	242 Move X8, [X8+2288]
	243 Move W1, W24
	244 Move X23, X0
	245 Move X2, [X8]
	246 Call Dictionary`2<Object, Object>..ctor, X0, X1
	247 Move X8, 0xD31000
	248 Move X8, [X8+1856]
	249 Move X0, [X8]
	250 Call 0x1C17F10
	251 Move X8, 0xD65000
	252 Move X8, [X8+2312]
	253 Move W1, W24
	254 Move X22, X0
	255 Move X2, [X8]
	256 Call List`1<Object>..ctor, X0, X1
	257 Move X28, 0xD65000
	258 Move X21, 0xD34000
	259 Move X28, [X28+2280]
	260 Move X21, [X21+3864]
	261 Move W29, W31
	262 Move W8, [X20+24]
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Move W27, W31
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Add X8, X20, W27
	267 Move X25, [X8+32]
	268 Compare X25, 0
	269 JumpIfEqual {683}
	270 Move X0, X25
	271 Call 0x1C26764
	272 Move X8, 0xD2C000
	273 Move X8, [X8+1728]
	274 Move X24, X0
	275 Move X8, [X8]
	276 Move W9, [X8+224]
	277 Compare W9, 0
	278 JumpIfNotEqual {281}
	279 Move X0, X8
	280 Call 0x1C17DFC
	281 Move X0, X19
	282 Move X1, X31
	283 Move X2, X31
	284 Call Type.op_Inequality, X0, X1
	285 Move TEMP, X0
	286 And TEMP, TEMP, 1
	287 Compare TEMP, 1
	288 JumpIfNotEqual {301}
	289 Compare X19, 0
	290 JumpIfEqual {412}
	291 Move X8, [X19]
	292 Move X0, X19
	293 Move X1, X24
	294 Move X9, [X8+680]
	295 Move X2, [X8+688]
	296 NotImplemented "Instruction BLR not yet implemented."
	297 Move TEMP, X0
	298 And TEMP, TEMP, 1
	299 Compare TEMP, 1
	300 JumpIfNotEqual {383}
	301 Compare X23, 0
	302 JumpIfEqual {412}
	303 Move X3, [X28]
	304 Add X2, X31, 8
	305 Move X0, X23
	306 Move X1, X24
	307 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	308 Move TEMP, X0
	309 And TEMP, TEMP, 1
	310 Compare TEMP, 1
	311 JumpIfNotEqual {320}
	312 Move X8, [X31+8]
	313 Compare X8, 0
	314 JumpIfEqual {412}
	315 Move X26, [X8+16]
	316 Compare W29, 0
	317 JumpIfNotEqual {332}
	318 Compare X26, 0
	319 JumpIfNotEqual {337}
	320 Move X8, 0xD5F000
	321 Move X8, [X8+992]
	322 Move X0, [X8]
	323 Move W8, [X0+224]
	324 Compare W8, 0
	325 JumpIfNotEqual {327}
	326 Call 0x1C17DFC
	327 Move X0, X24
	328 Call MonoCustomAttrs.RetrieveAttributeUsage, X0
	329 Move X26, X0
	330 Compare W29, 0
	331 JumpIfEqual {318}
	332 Compare X26, 0
	333 JumpIfEqual {412}
	334 Move W8, [X26+21]
	335 Compare W8, 0
	336 JumpIfEqual {367}
	337 Move W8, [X26+20]
	338 Compare W8, 0
	339 JumpIfNotEqual {345}
	340 Move X8, [X31+8]
	341 Compare X8, 0
	342 JumpIfEqual {345}
	343 Move W8, [X8+24]
	344 NotImplemented "Instruction CMP not yet implemented."
	345 Compare X22, 0
	346 JumpIfEqual {412}
	347 Move W10, [X22+28]
	348 Move X8, [X22+16]
	349 Move X9, [X21]
	350 Add W10, W10, 1
	351 Move [X22+28], W10
	352 Compare X8, 0
	353 JumpIfEqual {412}
	354 NotImplemented "Instruction LDRSW not yet implemented."
	355 Move W11, [X8+24]
	356 NotImplemented "Instruction CMP not yet implemented."
	357 Add W9, W10, 1
	358 Add X8, X8, X10
	359 Move [X22+24], W9
	360 Move [X8+32], X25
	361 Move X8, [X9+32]
	362 Move X0, X22
	363 Move X1, X25
	364 Move X8, [X8+192]
	365 Move X2, [X8+112]
	366 Call List`1<Object>.AddWithResize, X0, X1
	367 Move X8, [X31+8]
	368 Compare X8, 0
	369 JumpIfNotEqual {383}
	370 Move X8, 0xD65000
	371 Move X8, [X8+2264]
	372 Move X0, [X8]
	373 Call 0x1C17F10
	374 Move [X0+16], X26
	375 Move [X0+24], W29
	376 Move X8, 0xD65000
	377 Move X8, [X8+2272]
	378 Move X2, X0
	379 Move X0, X23
	380 Move X1, X24
	381 Move X3, [X8]
	382 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	383 Move W8, [X20+24]
	384 Add W27, W27, 1
	385 NotImplemented "Instruction CMP not yet implemented."
	386 Move X24, 0xD5F000
	387 Move X24, [X24+992]
	388 Move X0, [X24]
	389 Move W8, [X0+224]
	390 Compare W8, 0
	391 JumpIfNotEqual {393}
	392 Call 0x1C17DFC
	393 Move X0, [X31]
	394 Call MonoCustomAttrs.GetBase, X0
	395 Compare X0, 0
	396 JumpIfEqual {448}
	397 Move X20, X0
	398 Move X0, [X24]
	399 Move W8, [X0+224]
	400 Compare W8, 0
	401 JumpIfNotEqual {403}
	402 Call 0x1C17DFC
	403 Move W2, 1
	404 Move X0, X20
	405 Move X1, X19
	406 Add W29, W29, 1
	407 Move [X31], X20
	408 Call MonoCustomAttrs.GetCustomAttributesBase, X0, X1, X2
	409 Move X20, X0
	410 Compare X0, 0
	411 JumpIfNotEqual {262}
	412 Call 0x1C17F20
	413 Move X8, 0xD2C000
	414 Move X8, [X8+1728]
	415 Move X0, [X8]
	416 Move W8, [X0+224]
	417 Compare W8, 0
	418 JumpIfNotEqual {420}
	419 Call 0x1C17DFC
	420 Move X0, X19
	421 Move X1, X31
	422 Move X2, X31
	423 Call Type.op_Equality, X0, X1
	424 Move TEMP, X0
	425 And TEMP, TEMP, 1
	426 Compare TEMP, 1
	427 JumpIfNotEqual {479}
	428 Move W1, [X20+24]
	429 NotImplemented "Instruction CMP not yet implemented."
	430 Move X8, X31
	431 Add X9, X20, 32
	432 NotImplemented "Instruction CMP not yet implemented."
	433 Move X10, [X9]
	434 Compare X10, 0
	435 JumpIfEqual {683}
	436 Add X8, X8, 1
	437 NotImplemented "Instruction CMP not yet implemented."
	438 Move X8, 0xD64000
	439 Move X8, [X8+3344]
	440 Move X0, [X8]
	441 Call 0x1C17D6C
	442 Move X19, X0
	443 Move X0, X20
	444 Move X1, X19
	445 Move W2, W31
	446 Move X3, X31
	447 Call Array.CopyTo, X0, X1, X2
	448 Move X8, 0xD2C000
	449 Move X8, [X8+1728]
	450 Move X0, [X8]
	451 Move W8, [X0+224]
	452 Compare W8, 0
	453 JumpIfNotEqual {455}
	454 Call 0x1C17DFC
	455 Move X0, X19
	456 Move X1, X31
	457 Move X2, X31
	458 Call Type.op_Equality, X0, X1
	459 Move TEMP, X0
	460 And TEMP, TEMP, 1
	461 Compare TEMP, 1
	462 JumpIfEqual {472}
	463 Compare X19, 0
	464 JumpIfEqual {412}
	465 Move X0, X19
	466 Move X1, X31
	467 Call Type.get_IsValueType, X0
	468 Move TEMP, X0
	469 And TEMP, TEMP, 1
	470 Compare TEMP, 1
	471 JumpIfNotEqual {617}
	472 Compare X22, 0
	473 JumpIfEqual {412}
	474 Move X8, 0xD64000
	475 Move W1, [X22+24]
	476 Move X8, [X8+3344]
	477 Move X0, [X8]
	478 Call 0x1C17D6C
	479 Move X8, 0xD31000
	480 Move X8, [X8+1856]
	481 Move X0, [X8]
	482 Call 0x1C17F10
	483 Move X8, 0xD65000
	484 Move X8, [X8+2312]
	485 Move W1, W24
	486 Move X21, X0
	487 Move X2, [X8]
	488 Call List`1<Object>..ctor, X0, X1
	489 Move W8, [X20+24]
	490 NotImplemented "Instruction CMP not yet implemented."
	491 Move X26, 0xD34000
	492 Move X26, [X26+3864]
	493 Move X24, X31
	494 Add X25, X20, 32
	495 NotImplemented "Instruction CMP not yet implemented."
	496 Move X22, [X25]
	497 Compare X22, 0
	498 JumpIfEqual {683}
	499 Move X0, X22
	500 Call 0x1C26764
	501 Move X8, 0xD2C000
	502 Move X8, [X8+1728]
	503 Move X23, X0
	504 Move X8, [X8]
	505 Move W9, [X8+224]
	506 Compare W9, 0
	507 JumpIfNotEqual {510}
	508 Move X0, X8
	509 Call 0x1C17DFC
	510 Move X0, X19
	511 Move X1, X31
	512 Move X2, X31
	513 Call Type.op_Inequality, X0, X1
	514 Move TEMP, X0
	515 And TEMP, TEMP, 1
	516 Compare TEMP, 1
	517 JumpIfNotEqual {530}
	518 Compare X19, 0
	519 JumpIfEqual {412}
	520 Move X8, [X19]
	521 Move X0, X19
	522 Move X1, X23
	523 Move X9, [X8+680]
	524 Move X2, [X8+688]
	525 NotImplemented "Instruction BLR not yet implemented."
	526 Move TEMP, X0
	527 And TEMP, TEMP, 1
	528 Compare TEMP, 1
	529 JumpIfNotEqual {552}
	530 Compare X21, 0
	531 JumpIfEqual {412}
	532 Move W10, [X21+28]
	533 Move X8, [X21+16]
	534 Move X9, [X26]
	535 Add W10, W10, 1
	536 Move [X21+28], W10
	537 Compare X8, 0
	538 JumpIfEqual {412}
	539 NotImplemented "Instruction LDRSW not yet implemented."
	540 Move W11, [X8+24]
	541 NotImplemented "Instruction CMP not yet implemented."
	542 Add W9, W10, 1
	543 Add X8, X8, X10
	544 Move [X21+24], W9
	545 Move [X8+32], X22
	546 Move X8, [X9+32]
	547 Move X0, X21
	548 Move X1, X22
	549 Move X8, [X8+192]
	550 Move X2, [X8+112]
	551 Call List`1<Object>.AddWithResize, X0, X1
	552 Move W8, [X20+24]
	553 Add X24, X24, 1
	554 NotImplemented "Instruction CMP not yet implemented."
	555 Move X8, 0xD2C000
	556 Move X8, [X8+1728]
	557 Move X0, [X8]
	558 Move W8, [X0+224]
	559 Compare W8, 0
	560 JumpIfNotEqual {562}
	561 Call 0x1C17DFC
	562 Move X0, X19
	563 Move X1, X31
	564 Move X2, X31
	565 Call Type.op_Equality, X0, X1
	566 Move TEMP, X0
	567 And TEMP, TEMP, 1
	568 Compare TEMP, 1
	569 JumpIfEqual {579}
	570 Compare X19, 0
	571 JumpIfEqual {412}
	572 Move X0, X19
	573 Move X1, X31
	574 Call Type.get_IsValueType, X0
	575 Move TEMP, X0
	576 And TEMP, TEMP, 1
	577 Compare TEMP, 1
	578 JumpIfNotEqual {649}
	579 Compare X21, 0
	580 JumpIfEqual {412}
	581 Move X8, 0xD64000
	582 Move W1, [X21+24]
	583 Move X8, [X8+3344]
	584 Move X0, [X8]
	585 Call 0x1C17D6C
	586 Move W1, 1
	587 Move X0, X3
	588 Move X2, X31
	589 Call Array.CreateInstance, X0, X1
	590 Compare X0, 0
	591 JumpIfEqual {720}
	592 Move X8, 0xD2C000
	593 Move X8, [X8+2512]
	594 Move X21, X0
	595 Move X22, [X8]
	596 Move X1, X22
	597 Call 0x1C17E00
	598 Compare X0, 0
	599 JumpIfEqual {724}
	600 Move W8, [X20+24]
	601 Compare W8, 0
	602 JumpIfEqual {723}
	603 Move X20, [X20+32]
	604 Move X19, X0
	605 Compare X20, 0
	606 JumpIfEqual {613}
	607 Move X8, [X19]
	608 Move X0, X20
	609 Move X1, [X8+64]
	610 Call 0x1C17E00
	611 Compare X0, 0
	612 JumpIfEqual {727}
	613 Move W8, [X19+24]
	614 Compare W8, 0
	615 JumpIfEqual {723}
	616 Move [X19+32], X20
	617 Compare X22, 0
	618 JumpIfEqual {412}
	619 Move W1, [X22+24]
	620 Move X0, X19
	621 Move X2, X31
	622 Call Array.CreateInstance, X0, X1
	623 Move X8, 0xD2C000
	624 Move X8, [X8+2512]
	625 Move X1, [X8]
	626 Call 0x1C17E00
	627 Move X8, 0xD65000
	628 Move X8, [X8+2304]
	629 Move X19, X0
	630 Move X0, X22
	631 Move X0, X19
	632 Move W1, W31
	633 Move X2, X31
	634 Call Array.CreateInstance, X0, X1
	635 Compare X0, 0
	636 JumpIfEqual {682}
	637 Move X8, 0xD2C000
	638 Move X8, [X8+2512]
	639 Move X20, X0
	640 Move X21, [X8]
	641 Move X1, X21
	642 Call 0x1C17E00
	643 Move X19, X0
	644 Compare X0, 0
	645 JumpIfNotEqual {667}
	646 Move X0, X20
	647 Move X1, X21
	648 Call 0x1C181E0
	649 Compare X21, 0
	650 JumpIfEqual {412}
	651 Move W1, [X21+24]
	652 Move X0, X19
	653 Move X2, X31
	654 Call Array.CreateInstance, X0, X1
	655 Move X8, 0xD2C000
	656 Move X8, [X8+2512]
	657 Move X1, [X8]
	658 Call 0x1C17E00
	659 Move X8, 0xD65000
	660 Move X8, [X8+2304]
	661 Move X19, X0
	662 Move X0, X21
	663 Move X3, [X8]
	664 Move X1, X19
	665 Move W2, W31
	666 Call List`1<Object>.CopyTo, X0, X1, X2
	667 Move X0, X19
	668 Move X20, [X31+96]
	669 Move X19, [X31+104]
	670 Move X22, [X31+80]
	671 Move X21, [X31+88]
	672 Move X24, [X31+64]
	673 Move X23, [X31+72]
	674 Move X26, [X31+48]
	675 Move X25, [X31+56]
	676 Move X28, [X31+32]
	677 Move X27, [X31+40]
	678 Move X29, [X31+16]
	679 Move X30, [X31+24]
	680 Add X31, X31, 112
	681 Return X0
	682 Move X19, X31
	683 Move X0, 0xD65000
	684 Move X0, [X0+2328]
	685 Call 0x1C17D08
	686 Call 0x1C17F10
	687 Move X19, X0
	688 Move X0, 0xD65000
	689 Move X0, [X0+2336]
	690 Call 0x1C17D08
	691 Move X1, X0
	692 Move X0, X19
	693 Move X2, X31
	694 Call CustomAttributeFormatException..ctor, X0, X1
	695 Move X0, 0xD65000
	696 Move X0, [X0+2344]
	697 Call 0x1C17D08
	698 Move X1, X0
	699 Move X0, X19
	700 Call 0x1C17DEC
	701 Move X0, 0xD31000
	702 Move X0, [X0+1320]
	703 Call 0x1C17D08
	704 Call 0x1C17F10
	705 Move X19, X0
	706 Move X0, 0xD37000
	707 Move X0, [X0+2216]
	708 Move X0, 0xD31000
	709 Move X0, [X0+1320]
	710 Call 0x1C17D08
	711 Call 0x1C17F10
	712 Move X19, X0
	713 Move X0, 0xD5E000
	714 Move X0, [X0+3600]
	715 Call 0x1C17D08
	716 Move X1, X0
	717 Move X0, X19
	718 Move X2, X31
	719 Call ArgumentNullException..ctor, X0, X1
	720 Move W8, [X20+24]
	721 Compare W8, 0
	722 JumpIfNotEqual {412}
	723 Call 0x1C17F28
	724 Move X0, X21
	725 Move X1, X22
	726 Call 0x1C181E0
	727 Call 0x1C17F44
	728 Move X1, X31
	729 Call 0x1C17DEC

Method: System.Object[] GetCustomAttributes(System.Reflection.ICustomAttributeProvider obj, System.Boolean inherit)

Disassembly:
	0x033C92AC MOV X0, X20
	0x033C92B0 MOV X2, X31
	0x033C92B4 BL 0x32CC9D4
	0x033C92B8 ADRP X0, 0xD63000
	0x033C92BC LDR X0, [X0 + 0x9B8]
	0x033C92C0 BL 0x1C16D08
	0x033C92C4 MOV X1, X0
	0x033C92C8 MOV X0, X20
	0x033C92CC BL 0x1C16DEC
	0x033C92D0 MOV X20, X31
	0x033C92D4 MOVZ W22, 0x1A
	0x033C92D8 CBZ X19, 0x33C9650
	0x033C92DC ADRP X10, 0xD2A000
	0x033C92E0 LDR X8, [X19]
	0x033C92E4 LDR X10, [X10 + 0xE00]
	0x033C92E8 LDRH W9, [X8 + 0x12E]
	0x033C92EC LDR X1, [X10]
	0x033C92F0 CBZ X9, 0x33C9314
	0x033C92F4 LDR X10, [X8 + 0xB0]
	0x033C92F8 ADD X10, X10, 0x8
	0x033C92FC LDUR X11, [X10 - 0x8]
	0x033C9300 CMP X11, X1
	0x033C9304 B.EQ 0x33C9638
	0x033C9308 SUBS X9, X9, 0x1
	0x033C930C ADD X10, X10, 0x10
	0x033C9310 B.NE 0x33C92FC
	0x033C9314 MOV X0, X19
	0x033C9318 MOV W2, W31
	0x033C931C BL 0x1C5C788
	0x033C9320 B 0x33C9644
	0x033C9324 LDRSW X9, [X10]
	0x033C9328 ADD X8, X8, X9, 0x4, LSL
	0x033C932C ADD X0, X8, 0x138
	0x033C9330 LDP X8, X1, [X0]
	0x033C9334 MOV X0, X21
	0x033C9338 BLR X8
	0x033C933C MOV X21, X0
	0x033C9340 CBZ X0, 0x33C9898
	0x033C9344 ADRP X23, 0xD2A000
	0x033C9348 ADRP X24, 0xD63000
	0x033C934C ADRP X25, 0xD63000
	0x033C9350 LDR X23, [X23 + 0xE18]
	0x033C9354 LDR X24, [X24 + 0x980]
	0x033C9358 LDR X25, [X25 + 0x990]
	0x033C935C LDR X8, [X21]
	0x033C9360 LDR X1, [X23]
	0x033C9364 LDRH W9, [X8 + 0x12E]
	0x033C9368 CBZ X9, 0x33C938C
	0x033C936C LDR X10, [X8 + 0xB0]
	0x033C9370 ADD X10, X10, 0x8
	0x033C9374 LDUR X11, [X10 - 0x8]
	0x033C9378 CMP X11, X1
	0x033C937C B.EQ 0x33C939C
	0x033C9380 SUBS X9, X9, 0x1
	0x033C9384 ADD X10, X10, 0x10
	0x033C9388 B.NE 0x33C9374
	0x033C938C MOV X0, X21
	0x033C9390 MOV W2, W31
	0x033C9394 BL 0x1C5C788
	0x033C9398 B 0x33C93A8
	0x033C939C LDRSW X9, [X10]
	0x033C93A0 ADD X8, X8, X9, 0x4, LSL
	0x033C93A4 ADD X0, X8, 0x138
	0x033C93A8 LDP X8, X1, [X0]
	0x033C93AC MOV X0, X21
	0x033C93B0 BLR X8
	0x033C93B4 TBZ X0, 0x0, 0x33C94A0
	0x033C93B8 LDR X8, [X21]
	0x033C93BC LDR X1, [X24]
	0x033C93C0 LDRH W9, [X8 + 0x12E]
	0x033C93C4 CBZ X9, 0x33C93E8
	0x033C93C8 LDR X10, [X8 + 0xB0]
	0x033C93CC ADD X10, X10, 0x8
	0x033C93D0 LDUR X11, [X10 - 0x8]
	0x033C93D4 CMP X11, X1
	0x033C93D8 B.EQ 0x33C93F8
	0x033C93DC SUBS X9, X9, 0x1
	0x033C93E0 ADD X10, X10, 0x10
	0x033C93E4 B.NE 0x33C93D0
	0x033C93E8 MOV X0, X21
	0x033C93EC MOV W2, W31
	0x033C93F0 BL 0x1C5C788
	0x033C93F4 B 0x33C9404
	0x033C93F8 LDRSW X9, [X10]
	0x033C93FC ADD X8, X8, X9, 0x4, LSL
	0x033C9400 ADD X0, X8, 0x138
	0x033C9404 LDP X8, X1, [X0]
	0x033C9408 MOV X0, X21
	0x033C940C BLR X8
	0x033C9410 MOV X22, X0
	0x033C9414 CBZ X0, 0x33C97A4
	0x033C9418 MOV X0, X22
	0x033C941C MOV X1, X31
	0x033C9420 BL 0x32D7840
	0x033C9424 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1015000
	006 Move W8, [X21+641]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0xD64000
	014 Move X0, [X0+2320]
	015 Call 0x1C17CF4
	016 Move X0, 0xD5E000
	017 Move X0, [X0+992]
	018 Call 0x1C17CF4
	019 Move X0, 0xD2B000
	020 Move X0, [X0+2512]
	021 Call 0x1C17CF4
	022 Move X0, 0xD2B000
	023 Move X0, [X0+1728]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+641], W8
	027 Compare X19, 0
	028 JumpIfEqual {94}
	029 Move TEMP, X20
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {64}
	033 Move X8, 0xD2B000
	034 Move X8, [X8+1728]
	035 Move X0, [X8]
	036 Move X8, 0xD64000
	037 Move X8, [X8+2320]
	038 Move W9, [X0+224]
	039 Move X20, [X8]
	040 Compare W9, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X20
	044 Move X1, X31
	045 Call Type.GetTypeFromHandle, X0
	046 Move X8, 0xD5E000
	047 Move X8, [X8+992]
	048 Move X20, X0
	049 Move X8, [X8]
	050 Move W9, [X8+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {55}
	053 Move X0, X8
	054 Call 0x1C17DFC
	055 Move X0, X19
	056 Move X1, X20
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move W2, 1
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Call MonoCustomAttrs.GetCustomAttributes, X0, X1, X2
	063 Return X0
	064 Move X8, 0xD5E000
	065 Move X8, [X8+992]
	066 Move X0, [X8]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X0, X19
	072 Move X1, X31
	073 Move W2, W31
	074 Call MonoCustomAttrs.GetCustomAttributesBase, X0, X1, X2
	075 Compare X0, 0
	076 JumpIfEqual {112}
	077 Move X1, X31
	078 Call Array.Clone, X0
	079 Compare X0, 0
	080 JumpIfEqual {89}
	081 Move X8, 0xD2B000
	082 Move X8, [X8+2512]
	083 Move X19, X0
	084 Move X20, [X8]
	085 Move X1, X20
	086 Call 0x1C17E00
	087 Compare X0, 0
	088 JumpIfEqual {113}
	089 Move X20, [X31+16]
	090 Move X19, [X31+24]
	091 Move X30, [X31+32]
	092 Move X21, [X31+40]
	093 Return X0
	094 Move X0, 0xD30000
	095 Move X0, [X0+1320]
	096 Call 0x1C17D08
	097 Call 0x1C17F10
	098 Move X19, X0
	099 Move X0, 0xD36000
	100 Move X0, [X0+2216]
	101 Call 0x1C17D08
	102 Move X1, X0
	103 Move X0, X19
	104 Move X2, X31
	105 Call ArgumentNullException..ctor, X0, X1
	106 Move X0, 0xD64000
	107 Move X0, [X0+2384]
	108 Call 0x1C17D08
	109 Move X1, X0
	110 Move X0, X19
	111 Call 0x1C17DEC
	112 Call 0x1C17F20
	113 Move X0, X19
	114 Move X1, X20
	115 Call 0x1C181E0

Method: System.Reflection.CustomAttributeData[] GetCustomAttributesDataInternal(System.Reflection.ICustomAttributeProvider obj)

Disassembly:
	0x033C9428 CBZ X19, 0x33C97EC

ISIL:
	001 Call 0x1C3AE7C
	002 Return X0

Method: System.Collections.Generic.IList`1<System.Reflection.CustomAttributeData> GetCustomAttributesData(System.Reflection.ICustomAttributeProvider obj, System.Boolean inherit = False)

Disassembly:
	0x033C942C LDR X8, [X19]
	0x033C9430 LDR X9, [X8 + 0x2A8]
	0x033C9434 LDR X2, [X8 + 0x2B0]
	0x033C9438 MOV X0, X19
	0x033C943C BLR X9
	0x033C9440 TBZ X0, 0x0, 0x33C935C
	0x033C9444 CBZ X20, 0x33C97F0
	0x033C9448 LDR W10, [X20 + 0x1C]
	0x033C944C LDR X8, [X20 + 0x10]
	0x033C9450 LDR X9, [X25]
	0x033C9454 ADD W10, W10, 0x1
	0x033C9458 STR W10, [X20 + 0x1C]
	0x033C945C CBZ X8, 0x33C97F4
	0x033C9460 LDRSW X10, [X20 + 0x18]
	0x033C9464 LDR W11, [X8 + 0x18]
	0x033C9468 CMP W10, W11
	0x033C946C B.CS 0x33C9484
	0x033C9470 ADD W9, W10, 0x1
	0x033C9474 ADD X8, X8, X10, 0x3, LSL
	0x033C9478 STR W9, [X20 + 0x18]
	0x033C947C STR X22, [X8 + 0x20]
	0x033C9480 B 0x33C935C
	0x033C9484 LDR X8, [X9 + 0x20]
	0x033C9488 LDR X8, [X8 + 0xC0]
	0x033C948C LDR X2, [X8 + 0x70]
	0x033C9490 MOV X0, X20
	0x033C9494 MOV X1, X22
	0x033C9498 BL 0x301BF90
	0x033C949C B 0x33C935C
	0x033C94A0 MOV X19, X31
	0x033C94A4 CBZ X21, 0x33C9754
	0x033C94A8 ADRP X10, 0xD2A000
	0x033C94AC LDR X8, [X21]
	0x033C94B0 LDR X10, [X10 + 0xE00]
	0x033C94B4 LDRH W9, [X8 + 0x12E]
	0x033C94B8 LDR X1, [X10]
	0x033C94BC CBZ X9, 0x33C94E0
	0x033C94C0 LDR X10, [X8 + 0xB0]
	0x033C94C4 ADD X10, X10, 0x8
	0x033C94C8 LDUR X11, [X10 - 0x8]
	0x033C94CC CMP X11, X1
	0x033C94D0 B.EQ 0x33C973C
	0x033C94D4 SUBS X9, X9, 0x1
	0x033C94D8 ADD X10, X10, 0x10
	0x033C94DC B.NE 0x33C94C8
	0x033C94E0 MOV X0, X21
	0x033C94E4 MOV W2, W31
	0x033C94E8 BL 0x1C5C788
	0x033C94EC B 0x33C9748
	0x033C94F0 LDRSW X9, [X10]
	0x033C94F4 ADD X8, X8, X9, 0x4, LSL
	0x033C94F8 ADD X0, X8, 0x138
	0x033C94FC LDP X8, X2, [X0]
	0x033C9500 MOV X0, X21
	0x033C9504 MOV W1, W31
	0x033C9508 BLR X8
	0x033C950C CBZ X0, 0x33C9798
	0x033C9510 MOV X1, X31
	0x033C9514 BL 0x32D7840
	0x033C9518 CBZ X19, 0x33C9798
	0x033C951C LDR X8, [X19]
	0x033C9520 MOV X1, X0
	0x033C9524 MOV X0, X19
	0x033C9528 LDR X9, [X8 + 0x2A8]
	0x033C952C LDR X2, [X8 + 0x2B0]
	0x033C9530 BLR X9
	0x033C9534 TBZ X0, 0x0, 0x33C9590
	0x033C9538 ADRP X8, 0xD5C000
	0x033C953C LDR X8, [X8 + 0xC78]
	0x033C9540 MOVZ W1, 0x1
	0x033C9544 LDR X0, [X8]
	0x033C9548 BL 0x1C16D6C
	0x033C954C LDR X8, [X21]
	0x033C9550 LDR X1, [X20]
	0x033C9554 MOV X19, X0
	0x033C9558 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1015000
	006 Move W8, [X21+642]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xD64000
	014 Move X0, [X0+2320]
	015 Call 0x1C17CF4
	016 Move X0, 0xD5E000
	017 Move X0, [X0+992]
	018 Call 0x1C17CF4
	019 Move X0, 0xD2B000
	020 Move X0, [X0+1728]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+642], W8
	024 Compare X19, 0
	025 JumpIfEqual {75}
	026 Move TEMP, X20
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {61}
	030 Move X8, 0xD2B000
	031 Move X8, [X8+1728]
	032 Move X0, [X8]
	033 Move X8, 0xD64000
	034 Move X8, [X8+2320]
	035 Move W9, [X0+224]
	036 Move X20, [X8]
	037 Compare W9, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X20
	041 Move X1, X31
	042 Call Type.GetTypeFromHandle, X0
	043 Move X8, 0xD5E000
	044 Move X8, [X8+992]
	045 Move X20, X0
	046 Move X8, [X8]
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Move X0, X19
	053 Move X1, X20
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move W2, 1
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Call MonoCustomAttrs.GetCustomAttributesData, X0, X1, X2
	060 Return X0
	061 Move X8, 0xD5E000
	062 Move X8, [X8+992]
	063 Move X0, [X8]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, X19
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X1, X31
	072 Move W2, W31
	073 Move X30, [X31+32]
	074 Move X21, [X31+40]
	075 Move X0, 0xD30000
	076 Move X0, [X0+1320]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X19, X0
	080 Move X0, 0xD36000
	081 Move X0, [X0+2216]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X19
	085 Move X2, X31
	086 Call ArgumentNullException..ctor, X0, X1
	087 Move X0, 0xD64000
	088 Move X0, [X0+2392]
	089 Call 0x1C17D08
	090 Move X1, X0
	091 Move X0, X19
	092 Call 0x1C17DEC

Method: System.Collections.Generic.IList`1<System.Reflection.CustomAttributeData> GetCustomAttributesData(System.Reflection.ICustomAttributeProvider obj, System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x033C9718 ADD W9, W9, 0x5
	0x033C971C ADD X8, X8, W9, 0x4, SXTW
	0x033C9720 ADD X0, X8, 0x138
	0x033C9724 LDP X8, X3, [X0]
	0x033C9728 MOV X0, X21
	0x033C972C MOV X1, X19
	0x033C9730 MOV W2, W31
	0x033C9734 BLR X8
	0x033C9738 B 0x33C9774
	0x033C973C LDRSW X9, [X10]
	0x033C9740 ADD X8, X8, X9, 0x4, LSL
	0x033C9744 ADD X0, X8, 0x138
	0x033C9748 LDP X8, X1, [X0]
	0x033C974C MOV X0, X21
	0x033C9750 BLR X8
	0x033C9754 CBNZ X19, 0x33C98A4
	0x033C9758 CBZ X20, 0x33C9798
	0x033C975C ADRP X8, 0xD63000
	0x033C9760 LDR X8, [X8 + 0x998]
	0x033C9764 MOV X0, X20
	0x033C9768 LDR X1, [X8]
	0x033C976C BL 0x301DDC4
	0x033C9770 MOV X19, X0
	0x033C9774 MOV X0, X19
	0x033C9778 LDP X20, X19, [X31 + 0x60]
	0x033C977C LDP X22, X21, [X31 + 0x50]
	0x033C9780 LDP X24, X23, [X31 + 0x40]
	0x033C9784 LDP X26, X25, [X31 + 0x30]
	0x033C9788 LDP X28, X27, [X31 + 0x20]
	0x033C978C LDP X29, X30, [X31 + 0x10]
	0x033C9790 ADD X31, X31, 0x70
	0x033C9794 RET
	0x033C9798 BL 0x1C16F20
	0x033C979C MOV X0, X27
	0x033C97A0 BL 0x1C16F18
	0x033C97A4 ADRP X0, 0xD63000
	0x033C97A8 LDR X0, [X0 + 0x918]
	0x033C97AC BL 0x1C16D08
	0x033C97B0 BL 0x1C16F10
	0x033C97B4 MOV X19, X0
	0x033C97B8 ADRP X0, 0xD63000
	0x033C97BC LDR X0, [X0 + 0x9B0]
	0x033C97C0 BL 0x1C16D08
	0x033C97C4 MOV X1, X0
	0x033C97C8 MOV X0, X19
	0x033C97CC MOV X2, X31
	0x033C97D0 BL 0x32CC9D4
	0x033C97D4 ADRP X0, 0xD63000
	0x033C97D8 LDR X0, [X0 + 0x9B8]
	0x033C97DC BL 0x1C16D08
	0x033C97E0 MOV X1, X0
	0x033C97E4 MOV X0, X19
	0x033C97E8 BL 0x1C16DEC
	0x033C97EC BL 0x1C16F20
	0x033C97F0 BL 0x1C16F20
	0x033C97F4 BL 0x1C16F20
	0x033C97F8 ADRP X0, 0xD2F000
	0x033C97FC LDR X0, [X0 + 0x528]
	0x033C9800 BL 0x1C16D08
	0x033C9804 BL 0x1C16F10
	0x033C9808 MOV X19, X0
	0x033C980C ADRP X0, 0xD35000
	0x033C9810 LDR X0, [X0 + 0x8A8]
	0x033C9814 B 0x33C9834
	0x033C9818 ADRP X0, 0xD2F000
	0x033C981C LDR X0, [X0 + 0x528]
	0x033C9820 BL 0x1C16D08
	0x033C9824 BL 0x1C16F10
	0x033C9828 MOV X19, X0
	0x033C982C ADRP X0, 0xD5C000
	0x033C9830 LDR X0, [X0 + 0xE10]
	0x033C9834 BL 0x1C16D08
	0x033C9838 MOV X1, X0
	0x033C983C MOV X0, X19
	0x033C9840 MOV X2, X31
	0x033C9844 BL 0x330E100
	0x033C9848 ADRP X0, 0xD63000
	0x033C984C LDR X0, [X0 + 0x9B8]
	0x033C9850 BL 0x1C16D08
	0x033C9854 MOV X1, X0
	0x033C9858 MOV X0, X19
	0x033C985C BL 0x1C16DEC
	0x033C9860 ADRP X0, 0xD63000
	0x033C9864 LDR X0, [X0 + 0x918]
	0x033C9868 BL 0x1C16D08
	0x033C986C BL 0x1C16F10
	0x033C9870 MOV X19, X0
	0x033C9874 ADRP X0, 0xD63000
	0x033C9878 LDR X0, [X0 + 0x9B0]
	0x033C987C BL 0x1C16D08
	0x033C9880 MOV X1, X0
	0x033C9884 MOV X0, X19
	0x033C9888 MOV X2, X31
	0x033C988C BL 0x32CC9D4
	0x033C9890 B 0x33C9848
	0x033C9894 BL 0x1C16F20
	0x033C9898 BL 0x1C16F20
	0x033C989C MOV X0, X20
	0x033C98A0 BL 0x1C16F18
	0x033C98A4 MOV X0, X19
	0x033C98A8 BL 0x1C16F18
	0x033C98AC BL 0x1C16F28
	0x033C98B0 BL 0x1C16F44
	0x033C98B4 MOV X1, X31
	0x033C98B8 BL 0x1C16DEC
	0x033C98BC MOV X22, X0
	0x033C98C0 MOV X27, X31
	0x033C98C4 B 0x33C98CC
	0x033C98C8 MOV X22, X0
	0x033C98CC CBZ X21, 0x33C9930
	0x033C98D0 LDR X8, [X21]
	0x033C98D4 ADRP X10, 0xD2A000
	0x033C98D8 LDRH W9, [X8 + 0x12E]
	0x033C98DC LDR X10, [X10 + 0xE00]
	0x033C98E0 LDR X1, [X10]
	0x033C98E4 CBZ X9, 0x33C9908
	0x033C98E8 LDR X10, [X8 + 0xB0]
	0x033C98EC ADD X10, X10, 0x8
	0x033C98F0 LDUR X11, [X10 - 0x8]
	0x033C98F4 CMP X11, X1
	0x033C98F8 B.EQ 0x33C9918
	0x033C98FC SUBS X9, X9, 0x1
	0x033C9900 ADD X10, X10, 0x10
	0x033C9904 B.NE 0x33C98F0
	0x033C9908 MOV X0, X21
	0x033C990C MOV W2, W31
	0x033C9910 BL 0x1C5C788
	0x033C9914 B 0x33C9924
	0x033C9918 LDRSW X9, [X10]
	0x033C991C ADD X8, X8, X9, 0x4, LSL
	0x033C9920 ADD X0, X8, 0x138
	0x033C9924 LDP X8, X1, [X0]
	0x033C9928 MOV X0, X21
	0x033C992C BLR X8
	0x033C9930 CBNZ X27, 0x33C993C
	0x033C9934 MOV X0, X22
	0x033C9938 BL 0x1D2C690
	0x033C993C MOV X0, X27
	0x033C9940 BL 0x1C16F18
	0x033C9944 B 0x33C9970
	0x033C9948 B 0x33C9A0C
	0x033C994C B 0x33C9970
	0x033C9950 B 0x33C9970
	0x033C9954 B 0x33C9970
	0x033C9958 B 0x33C9970
	0x033C995C B 0x33C9970
	0x033C9960 B 0x33C9970
	0x033C9964 B 0x33C9A0C
	0x033C9968 B 0x33C9970
	0x033C996C B 0x33C9A0C
	0x033C9970 MOV X22, X0
	0x033C9974 CMP W1, 0x1
	0x033C9978 B.NE 0x33C9990
	0x033C997C MOV X0, X22
	0x033C9980 BL 0x3EB1AD0
	0x033C9984 LDR X19, [X0]
	0x033C9988 BL 0x3EB1AE0
	0x033C998C B 0x33C94A4
	0x033C9990 MOV X19, X31
	0x033C9994 B 0x33C999C
	0x033C9998 MOV X22, X0
	0x033C999C CBZ X21, 0x33C9A00
	0x033C99A0 ADRP X10, 0xD2A000
	0x033C99A4 LDR X8, [X21]
	0x033C99A8 LDR X10, [X10 + 0xE00]
	0x033C99AC LDRH W9, [X8 + 0x12E]
	0x033C99B0 LDR X1, [X10]
	0x033C99B4 CBZ X9, 0x33C99D8
	0x033C99B8 LDR X10, [X8 + 0xB0]
	0x033C99BC ADD X10, X10, 0x8
	0x033C99C0 LDUR X11, [X10 - 0x8]
	0x033C99C4 CMP X11, X1
	0x033C99C8 B.EQ 0x33C99E8
	0x033C99CC SUBS X9, X9, 0x1
	0x033C99D0 ADD X10, X10, 0x10
	0x033C99D4 B.NE 0x33C99C0
	0x033C99D8 MOV X0, X21
	0x033C99DC MOV W2, W31
	0x033C99E0 BL 0x1C5C788
	0x033C99E4 B 0x33C99F4
	0x033C99E8 LDRSW X9, [X10]
	0x033C99EC ADD X8, X8, X9, 0x4, LSL
	0x033C99F0 ADD X0, X8, 0x138
	0x033C99F4 LDP X8, X1, [X0]
	0x033C99F8 MOV X0, X21
	0x033C99FC BLR X8
	0x033C9A00 CBZ X19, 0x33C9934
	0x033C9A04 MOV X0, X19
	0x033C9A08 BL 0x1C16F18
	0x033C9A0C MOV X22, X0
	0x033C9A10 CMP W1, 0x1
	0x033C9A14 B.NE 0x33C9A34
	0x033C9A18 MOV X0, X22
	0x033C9A1C BL 0x3EB1AD0
	0x033C9A20 LDR X20, [X0]
	0x033C9A24 BL 0x3EB1AE0
	0x033C9A28 MOV W22, W31
	0x033C9A2C CBNZ X19, 0x33C92DC
	0x033C9A30 B 0x33C9650
	0x033C9A34 MOV X20, X31
	0x033C9A38 B 0x33C9A40
	0x033C9A3C MOV X22, X0
	0x033C9A40 CBZ X19, 0x33C9AA4
	0x033C9A44 ADRP X10, 0xD2A000
	0x033C9A48 LDR X8, [X19]
	0x033C9A4C LDR X10, [X10 + 0xE00]
	0x033C9A50 LDRH W9, [X8 + 0x12E]
	0x033C9A54 LDR X1, [X10]
	0x033C9A58 CBZ X9, 0x33C9A7C
	0x033C9A5C LDR X10, [X8 + 0xB0]
	0x033C9A60 ADD X10, X10, 0x8
	0x033C9A64 LDUR X11, [X10 - 0x8]
	0x033C9A68 CMP X11, X1
	0x033C9A6C B.EQ 0x33C9A8C
	0x033C9A70 SUBS X9, X9, 0x1
	0x033C9A74 ADD X10, X10, 0x10
	0x033C9A78 B.NE 0x33C9A64
	0x033C9A7C MOV X0, X19
	0x033C9A80 MOV W2, W31
	0x033C9A84 BL 0x1C5C788
	0x033C9A88 B 0x33C9A98
	0x033C9A8C LDRSW X9, [X10]
	0x033C9A90 ADD X8, X8, X9, 0x4, LSL
	0x033C9A94 ADD X0, X8, 0x138
	0x033C9A98 LDP X8, X1, [X0]
	0x033C9A9C MOV X0, X19
	0x033C9AA0 BLR X8
	0x033C9AA4 CBZ X20, 0x33C9934
	0x033C9AA8 MOV X0, X20
	0x033C9AAC BL 0x1C16F18
	0x033C9AB0 BL 0x1990590
	0x033C9AB4 STP X30, X21, [X31 - 0x20]!
	0x033C9AB8 STP X20, X19, [X31 + 0x10]
	0x033C9ABC ADRP X21, 0x1014000
	0x033C9AC0 LDRB W8, [X21 + 0x285]
	0x033C9AC4 MOV X19, X1
	0x033C9AC8 MOV X20, X0
	0x033C9ACC TBNZ X8, 0x0, 0x33C9B2C
	0x033C9AD0 ADRP X0, 0xD63000
	0x033C9AD4 LDR X0, [X0 + 0x968]
	0x033C9AD8 BL 0x1C16CF4
	0x033C9ADC ADRP X0, 0xD5C000
	0x033C9AE0 LDR X0, [X0 + 0xC78]
	0x033C9AE4 BL 0x1C16CF4
	0x033C9AE8 ADRP X0, 0xD5D000
	0x033C9AEC LDR X0, [X0 + 0x3E0]
	0x033C9AF0 BL 0x1C16CF4
	0x033C9AF4 ADRP X0, 0xD5B000
	0x033C9AF8 LDR X0, [X0 + 0xBB0]
	0x033C9AFC BL 0x1C16CF4
	0x033C9B00 ADRP X0, 0xD5B000
	0x033C9B04 LDR X0, [X0 + 0x9A0]
	0x033C9B08 BL 0x1C16CF4
	0x033C9B0C ADRP X0, 0xD5D000
	0x033C9B10 LDR X0, [X0 + 0x4F8]
	0x033C9B14 BL 0x1C16CF4
	0x033C9B18 ADRP X0, 0xD2A000
	0x033C9B1C LDR X0, [X0 + 0x6C0]
	0x033C9B20 BL 0x1C16CF4
	0x033C9B24 MOVZ W8, 0x1
	0x033C9B28 STRB W8, [X21 + 0x285]
	0x033C9B2C ADRP X21, 0xD2A000
	0x033C9B30 LDR X21, [X21 + 0x6C0]
	0x033C9B34 CBZ X20, 0x33C9C44
	0x033C9B38 ADRP X9, 0xD5B000
	0x033C9B3C LDR X9, [X9 + 0x9A0]
	0x033C9B40 LDR X8, [X20]
	0x033C9B44 LDR X10, [X9]
	0x033C9B48 LDRB W9, [X8 + 0x130]
	0x033C9B4C LDRB W11, [X10 + 0x130]
	0x033C9B50 CMP W9, W11
	0x033C9B54 B.CC 0x33C9B6C
	0x033C9B58 LDR X12, [X8 + 0xC8]
	0x033C9B5C ADD X11, X12, X11, 0x3, LSL
	0x033C9B60 LDUR X11, [X11 - 0x8]
	0x033C9B64 CMP X11, X10
	0x033C9B68 B.EQ 0x33C9BF0
	0x033C9B6C ADRP X10, 0xD5B000
	0x033C9B70 LDR X10, [X10 + 0xBB0]
	0x033C9B74 LDR X10, [X10]
	0x033C9B78 LDRB W11, [X10 + 0x130]
	0x033C9B7C CMP W9, W11
	0x033C9B80 B.CC 0x33C9B98
	0x033C9B84 LDR X12, [X8 + 0xC8]
	0x033C9B88 ADD X11, X12, X11, 0x3, LSL
	0x033C9B8C LDUR X11, [X11 - 0x8]
	0x033C9B90 CMP X11, X10
	0x033C9B94 B.EQ 0x33C9C00
	0x033C9B98 ADRP X10, 0xD5D000
	0x033C9B9C LDR X10, [X10 + 0x4F8]
	0x033C9BA0 LDR X10, [X10]
	0x033C9BA4 LDRB W11, [X10 + 0x130]
	0x033C9BA8 CMP W9, W11
	0x033C9BAC B.CC 0x33C9BC4
	0x033C9BB0 LDR X12, [X8 + 0xC8]
	0x033C9BB4 ADD X11, X12, X11, 0x3, LSL
	0x033C9BB8 LDUR X11, [X11 - 0x8]
	0x033C9BBC CMP X11, X10
	0x033C9BC0 B.EQ 0x33C9C10
	0x033C9BC4 LDR X10, [X21]
	0x033C9BC8 LDRB W11, [X10 + 0x130]
	0x033C9BCC CMP W9, W11
	0x033C9BD0 B.CC 0x33C9BE8
	0x033C9BD4 LDR X8, [X8 + 0xC8]
	0x033C9BD8 ADD X8, X8, X11, 0x3, LSL
	0x033C9BDC LDUR X8, [X8 - 0x8]
	0x033C9BE0 CMP X8, X10
	0x033C9BE4 B.EQ 0x33C9C20
	0x033C9BE8 MOV X20, X31
	0x033C9BEC B 0x33C9C44
	0x033C9BF0 MOV X0, X20
	0x033C9BF4 MOV X1, X31
	0x033C9BF8 BL 0x32DB920
	0x033C9BFC B 0x33C9C40
	0x033C9C00 MOV X0, X20
	0x033C9C04 MOV X1, X31
	0x033C9C08 BL 0x32CD3AC
	0x033C9C0C B 0x33C9C40
	0x033C9C10 MOV X0, X20
	0x033C9C14 MOV X1, X31
	0x033C9C18 BL 0x32DDC90
	0x033C9C1C B 0x33C9C40
	0x033C9C20 ADRP X8, 0xD5D000
	0x033C9C24 LDR X8, [X8 + 0x3E0]
	0x033C9C28 LDR X0, [X8]
	0x033C9C2C LDR W8, [X0 + 0xE0]
	0x033C9C30 CBNZ W8, 0x33C9C38
	0x033C9C34 BL 0x1C16DFC
	0x033C9C38 MOV X0, X20
	0x033C9C3C BL 0x33C9DAC
	0x033C9C40 MOV X20, X0
	0x033C9C44 LDR X0, [X21]
	0x033C9C48 LDR W8, [X0 + 0xE0]
	0x033C9C4C CBNZ W8, 0x33C9C54
	0x033C9C50 BL 0x1C16DFC
	0x033C9C54 MOV X0, X19
	0x033C9C58 MOV X1, X31
	0x033C9C5C MOV X2, X31
	0x033C9C60 BL 0x3395F0C
	0x033C9C64 CBZ X20, 0x33C9D20
	0x033C9C68 TBZ X0, 0x0, 0x33C9D20
	0x033C9C6C LDR W8, [X20 + 0x18]
	0x033C9C70 CMP W8, 0x1
	0x033C9C74 B.LT 0x33C9CC8
	0x033C9C78 MOV X21, X31
	0x033C9C7C CMP W21, W8
	0x033C9C80 B.CS 0x33C9D9C
	0x033C9C84 ADD X8, X20, X21, 0x3, LSL
	0x033C9C88 LDR X0, [X8 + 0x20]
	0x033C9C8C CBZ X0, 0x33C9D98
	0x033C9C90 MOV X1, X31
	0x033C9C94 BL 0x32D7840
	0x033C9C98 CBZ X19, 0x33C9D98
	0x033C9C9C LDR X8, [X19]
	0x033C9CA0 MOV X1, X0
	0x033C9CA4 MOV X0, X19
	0x033C9CA8 LDR X9, [X8 + 0x2A8]
	0x033C9CAC LDR X2, [X8 + 0x2B0]
	0x033C9CB0 BLR X9
	0x033C9CB4 TBNZ X0, 0x0, 0x33C9D30
	0x033C9CB8 LDR W8, [X20 + 0x18]
	0x033C9CBC ADD X21, X21, 0x1
	0x033C9CC0 CMP W21, W8
	0x033C9CC4 B.LT 0x33C9C7C
	0x033C9CC8 ADRP X8, 0xD63000
	0x033C9CCC LDR X8, [X8 + 0x968]
	0x033C9CD0 LDR X19, [X8]
	0x033C9CD4 LDR X8, [X19 + 0x38]
	0x033C9CD8 CBNZ X8, 0x33C9CE8
	0x033C9CDC MOV X0, X19
	0x033C9CE0 BL 0x1C5C6E0
	0x033C9CE4 LDR X8, [X19 + 0x38]
	0x033C9CE8 LDR X0, [X8 + 0x10]
	0x033C9CEC LDRB W8, [X0 + 0x135]
	0x033C9CF0 TBNZ X8, 0x0, 0x33C9CF8
	0x033C9CF4 BL 0x1C5C684
	0x033C9CF8 LDR W8, [X0 + 0xE0]
	0x033C9CFC CBNZ W8, 0x33C9D04
	0x033C9D00 BL 0x1C16DFC
	0x033C9D04 LDR X8, [X19 + 0x38]
	0x033C9D08 LDR X0, [X8 + 0x10]
	0x033C9D0C LDRB W8, [X0 + 0x135]
	0x033C9D10 TBNZ X8, 0x0, 0x33C9D18
	0x033C9D14 BL 0x1C5C684
	0x033C9D18 LDR X8, [X0 + 0xB8]
	0x033C9D1C LDR X20, [X8]
	0x033C9D20 MOV X0, X20
	0x033C9D24 LDP X20, X19, [X31 + 0x10]
	0x033C9D28 LDP X30, X21, [X31], #0x20
	0x033C9D2C RET
	0x033C9D30 LDR W8, [X20 + 0x18]
	0x033C9D34 CMP W8, 0x1
	0x033C9D38 B.EQ 0x33C9D20
	0x033C9D3C ADRP X8, 0xD5C000
	0x033C9D40 LDR X8, [X8 + 0xC78]
	0x033C9D44 MOVZ W1, 0x1
	0x033C9D48 LDR X0, [X8]
	0x033C9D4C BL 0x1C16D6C
	0x033C9D50 LDR W8, [X20 + 0x18]
	0x033C9D54 CMP W21, W8
	0x033C9D58 B.CS 0x33C9D9C
	0x033C9D5C MOV X19, X0
	0x033C9D60 CBZ X0, 0x33C9D98
	0x033C9D64 ADD X8, X20, X21, 0x3, LSL
	0x033C9D68 LDR X20, [X8 + 0x20]
	0x033C9D6C CBZ X20, 0x33C9D84
	0x033C9D70 LDR X8, [X19]
	0x033C9D74 MOV X0, X20
	0x033C9D78 LDR X1, [X8 + 0x40]
	0x033C9D7C BL 0x1C16E00
	0x033C9D80 CBZ X0, 0x33C9DA0
	0x033C9D84 LDR W8, [X19 + 0x18]
	0x033C9D88 CBZ W8, 0x33C9D9C
	0x033C9D8C STR X20, [X19 + 0x20]
	0x033C9D90 MOV X20, X19
	0x033C9D94 B 0x33C9D20
	0x033C9D98 BL 0x1C16F20
	0x033C9D9C BL 0x1C16F28
	0x033C9DA0 BL 0x1C16F44
	0x033C9DA4 MOV X1, X31
	0x033C9DA8 BL 0x1C16DEC
	0x033C9DAC STR X30, [X31 - 0x30]!
	0x033C9DB0 STP X22, X21, [X31 + 0x10]
	0x033C9DB4 STP X20, X19, [X31 + 0x20]
	0x033C9DB8 ADRP X20, 0x1014000
	0x033C9DBC LDRB W8, [X20 + 0x286]
	0x033C9DC0 MOV X19, X0
	0x033C9DC4 TBNZ X8, 0x0, 0x33C9E0C
	0x033C9DC8 ADRP X0, 0xD63000
	0x033C9DCC LDR X0, [X0 + 0x9C0]
	0x033C9DD0 BL 0x1C16CF4
	0x033C9DD4 ADRP X0, 0xD5C000
	0x033C9DD8 LDR X0, [X0 + 0xC78]
	0x033C9DDC BL 0x1C16CF4
	0x033C9DE0 ADRP X0, 0xD5C000
	0x033C9DE4 LDR X0, [X0 + 0xC80]
	0x033C9DE8 BL 0x1C16CF4
	0x033C9DEC ADRP X0, 0xD63000
	0x033C9DF0 LDR X0, [X0 + 0x9C8]
	0x033C9DF4 BL 0x1C16CF4
	0x033C9DF8 ADRP X0, 0xD2A000
	0x033C9DFC LDR X0, [X0 + 0x6C0]
	0x033C9E00 BL 0x1C16CF4
	0x033C9E04 MOVZ W8, 0x1
	0x033C9E08 STRB W8, [X20 + 0x286]
	0x033C9E0C CBZ X19, 0x33C9FC8
	0x033C9E10 MOV X0, X19
	0x033C9E14 MOV X1, X31
	0x033C9E18 BL 0x339702C
	0x033C9E1C MOV W20, W0
	0x033C9E20 TBNZ X0, 0xC, 0x33C9E30
	0x033C9E24 TBNZ X20, 0xD, 0x33C9E5C
	0x033C9E28 MOV X19, X31
	0x033C9E2C B 0x33C9FB4
	0x033C9E30 ADRP X8, 0xD5C000
	0x033C9E34 LDR X8, [X8 + 0xC78]
	0x033C9E38 ANDS W31, W20, 0x2000
	0x033C9E3C LDR X0, [X8]
	0x033C9E40 MOVZ W8, 0x1
	0x033C9E44 CINC W1, W8, NE
	0x033C9E48 BL 0x1C16D6C
	0x033C9E4C MOV X19, X0
	0x033C9E50 TBNZ X20, 0xD, 0x33C9E74
	0x033C9E54 MOV W22, W31
	0x033C9E58 B 0x33C9F14
	0x033C9E5C ADRP X8, 0xD5C000
	0x033C9E60 LDR X8, [X8 + 0xC78]
	0x033C9E64 UBFM W1, W20, 0xD, 0xD
	0x033C9E68 LDR X0, [X8]
	0x033C9E6C BL 0x1C16D6C
	0x033C9E70 MOV X19, X0
	0x033C9E74 ADRP X22, 0xD2A000
	0x033C9E78 LDR X22, [X22 + 0x6C0]
	0x033C9E7C ADRP X8, 0xD63000
	0x033C9E80 LDR X0, [X22]
	0x033C9E84 LDR X8, [X8 + 0x9C8]
	0x033C9E88 LDR W9, [X0 + 0xE0]
	0x033C9E8C LDR X21, [X8]
	0x033C9E90 CBNZ W9, 0x33C9E98
	0x033C9E94 BL 0x1C16DFC
	0x033C9E98 MOV X0, X21
	0x033C9E9C MOV X1, X31
	0x033C9EA0 BL 0x338C698
	0x033C9EA4 CBZ X0, 0x33C9FC8
	0x033C9EA8 LDR X8, [X22]
	0x033C9EAC MOV X2, X31
	0x033C9EB0 LDR X8, [X8 + 0xB8]
	0x033C9EB4 LDR X1, [X8 + 0x10]
	0x033C9EB8 BL 0x3397418
	0x033C9EBC ADRP X8, 0xD5C000
	0x033C9EC0 LDR X8, [X8 + 0xC80]
	0x033C9EC4 MOV X22, X0
	0x033C9EC8 LDR X8, [X8]
	0x033C9ECC MOV X0, X8
	0x033C9ED0 BL 0x1C16F10
	0x033C9ED4 MOV X1, X22
	0x033C9ED8 MOV X2, X31
	0x033C9EDC MOV X21, X0
	0x033C9EE0 BL 0x32D7338
	0x033C9EE4 CBZ X19, 0x33C9FC8
	0x033C9EE8 CBZ X21, 0x33C9F00
	0x033C9EEC LDR X8, [X19]
	0x033C9EF0 MOV X0, X21
	0x033C9EF4 LDR X1, [X8 + 0x40]
	0x033C9EF8 BL 0x1C16E00
	0x033C9EFC CBZ X0, 0x33C9FD0
	0x033C9F00 LDR W8, [X19 + 0x18]
	0x033C9F04 CBZ W8, 0x33C9FCC
	0x033C9F08 STR X21, [X19 + 0x20]
	0x033C9F0C TBZ X20, 0xC, 0x33C9FB4
	0x033C9F10 MOVZ W22, 0x1
	0x033C9F14 ADRP X21, 0xD2A000
	0x033C9F18 LDR X21, [X21 + 0x6C0]
	0x033C9F1C ADRP X8, 0xD63000
	0x033C9F20 LDR X0, [X21]
	0x033C9F24 LDR X8, [X8 + 0x9C0]
	0x033C9F28 LDR W9, [X0 + 0xE0]
	0x033C9F2C LDR X20, [X8]
	0x033C9F30 CBNZ W9, 0x33C9F38
	0x033C9F34 BL 0x1C16DFC
	0x033C9F38 MOV X0, X20
	0x033C9F3C MOV X1, X31
	0x033C9F40 BL 0x338C698
	0x033C9F44 CBZ X0, 0x33C9FC8
	0x033C9F48 LDR X8, [X21]
	0x033C9F4C MOV X2, X31
	0x033C9F50 LDR X8, [X8 + 0xB8]
	0x033C9F54 LDR X1, [X8 + 0x10]
	0x033C9F58 BL 0x3397418
	0x033C9F5C ADRP X8, 0xD5C000
	0x033C9F60 LDR X8, [X8 + 0xC80]
	0x033C9F64 MOV X21, X0
	0x033C9F68 LDR X8, [X8]
	0x033C9F6C MOV X0, X8
	0x033C9F70 BL 0x1C16F10
	0x033C9F74 MOV X1, X21
	0x033C9F78 MOV X2, X31
	0x033C9F7C MOV X20, X0
	0x033C9F80 BL 0x32D7338
	0x033C9F84 CBZ X19, 0x33C9FC8
	0x033C9F88 CBZ X20, 0x33C9FA0
	0x033C9F8C LDR X8, [X19]
	0x033C9F90 MOV X0, X20
	0x033C9F94 LDR X1, [X8 + 0x40]
	0x033C9F98 BL 0x1C16E00
	0x033C9F9C CBZ X0, 0x33C9FD0
	0x033C9FA0 LDR W8, [X19 + 0x18]
	0x033C9FA4 CMP W22, W8
	0x033C9FA8 B.CS 0x33C9FCC
	0x033C9FAC ADD X8, X19, W22, 0x3, UXTW
	0x033C9FB0 STR X20, [X8 + 0x20]
	0x033C9FB4 MOV X0, X19
	0x033C9FB8 LDP X20, X19, [X31 + 0x20]
	0x033C9FBC LDP X22, X21, [X31 + 0x10]
	0x033C9FC0 LDR X30, [X31], #0x30
	0x033C9FC4 RET
	0x033C9FC8 BL 0x1C16F20
	0x033C9FCC BL 0x1C16F28
	0x033C9FD0 BL 0x1C16F44
	0x033C9FD4 MOV X1, X31
	0x033C9FD8 BL 0x1C16DEC
	0x033C9FDC STR X30, [X31 - 0x50]!
	0x033C9FE0 STP X26, X25, [X31 + 0x10]
	0x033C9FE4 STP X24, X23, [X31 + 0x20]
	0x033C9FE8 STP X22, X21, [X31 + 0x30]
	0x033C9FEC STP X20, X19, [X31 + 0x40]
	0x033C9FF0 ADRP X22, 0x1014000
	0x033C9FF4 ADRP X23, 0xD2A000
	0x033C9FF8 LDRB W8, [X22 + 0x287]
	0x033C9FFC LDR X23, [X23 + 0x6C0]
	0x033CA000 MOV W20, W2
	0x033CA004 MOV X19, X1
	0x033CA008 MOV X21, X0
	0x033CA00C TBNZ X8, 0x0, 0x33CA03C
	0x033CA010 ADRP X0, 0xD59000
	0x033CA014 LDR X0, [X0 + 0xD70]
	0x033CA018 BL 0x1C16CF4
	0x033CA01C ADRP X0, 0xD5C000
	0x033CA020 LDR X0, [X0 + 0x3E0]
	0x033CA024 BL 0x1C16CF4
	0x033CA028 ADRP X0, 0xD29000
	0x033CA02C LDR X0, [X0 + 0x6C0]
	0x033CA030 BL 0x1C16CF4
	0x033CA034 MOVZ W8, 0x1
	0x033CA038 STRB W8, [X22 + 0x287]
	0x033CA03C LDR X0, [X23]
	0x033CA040 LDR W8, [X0 + 0xE0]
	0x033CA044 CBNZ W8, 0x33CA04C
	0x033CA048 BL 0x1C16DFC
	0x033CA04C MOV X0, X19
	0x033CA050 MOV X1, X31
	0x033CA054 MOV X2, X31
	0x033CA058 BL 0x3395194
	0x033CA05C TBNZ X0, 0x0, 0x33CA228
	0x033CA060 ADRP X24, 0xD5C000
	0x033CA064 LDR X24, [X24 + 0x3E0]
	0x033CA068 MOV X22, X31
	0x033CA06C LDR X0, [X24]
	0x033CA070 LDR W8, [X0 + 0xE0]
	0x033CA074 CBNZ W8, 0x33CA07C
	0x033CA078 BL 0x1C16DFC
	0x033CA07C MOV X0, X21
	0x033CA080 BL 0x33C6BB8
	0x033CA084 TBNZ X0, 0x0, 0x33CA194
	0x033CA088 LDR X0, [X24]
	0x033CA08C LDR W8, [X0 + 0xE0]
	0x033CA090 CBNZ W8, 0x33CA098
	0x033CA094 BL 0x1C16DFC
	0x033CA098 MOV X0, X21
	0x033CA09C MOV X1, X19
	0x033CA0A0 BL 0x1C39E54
	0x033CA0A4 TBNZ X0, 0x0, 0x33CA178
	0x033CA0A8 LDR X0, [X24]
	0x033CA0AC LDR W8, [X0 + 0xE0]
	0x033CA0B0 CBNZ W8, 0x33CA0B8
	0x033CA0B4 BL 0x1C16DFC
	0x033CA0B8 MOV X0, X21
	0x033CA0BC MOV X1, X19
	0x033CA0C0 BL 0x33C6D8C
	0x033CA0C4 CBZ X0, 0x33CA124
	0x033CA0C8 LDR W8, [X0 + 0x18]
	0x033CA0CC MOV X23, X0
	0x033CA0D0 CMP W8, 0x1
	0x033CA0D4 B.LT 0x33CA124
	0x033CA0D8 MOV X25, X31
	0x033CA0DC ADD X26, X23, 0x20
	0x033CA0E0 CMP W25, W8
	0x033CA0E4 B.CS 0x33CA224
	0x033CA0E8 LDR X0, [X26, X25, LSL #3]
	0x033CA0EC CBZ X0, 0x33CA220
	0x033CA0F0 BL 0x1C25764
	0x033CA0F4 CBZ X19, 0x33CA220
	0x033CA0F8 LDR X8, [X19]
	0x033CA0FC MOV X1, X0
	0x033CA100 MOV X0, X19
	0x033CA104 LDR X9, [X8 + 0x2A8]
	0x033CA108 LDR X2, [X8 + 0x2B0]
	0x033CA10C BLR X9
	0x033CA110 TBNZ X0, 0x0, 0x33CA178
	0x033CA114 LDR W8, [X23 + 0x18]
	0x033CA118 ADD X25, X25, 0x1
	0x033CA11C CMP W25, W8
	0x033CA120 B.LT 0x33CA0E0
	0x033CA124 CBNZ X22, 0x33CA154
	0x033CA128 TBZ X20, 0x0, 0x33CA1E0
	0x033CA12C LDR X0, [X24]
	0x033CA130 LDR W8, [X0 + 0xE0]
	0x033CA134 CBNZ W8, 0x33CA13C
	0x033CA138 BL 0x1C16DFC
	0x033CA13C MOV X0, X19
	0x033CA140 BL 0x33C8130
	0x033CA144 CBZ X0, 0x33CA220
	0x033CA148 LDRB W8, [X0 + 0x15]
	0x033CA14C MOV X22, X0
	0x033CA150 CBZ W8, 0x33CA1E0
	0x033CA154 LDR X0, [X24]
	0x033CA158 LDR W8, [X0 + 0xE0]
	0x033CA15C CBNZ W8, 0x33CA164
	0x033CA160 BL 0x1C16DFC
	0x033CA164 MOV X0, X21
	0x033CA168 BL 0x33C7D6C
	0x033CA16C MOV X21, X0
	0x033CA170 CBNZ X0, 0x33CA06C
	0x033CA174 B 0x33CA17C
	0x033CA178 MOVZ W0, 0x1
	0x033CA17C LDP X20, X19, [X31 + 0x40]
	0x033CA180 LDP X22, X21, [X31 + 0x30]
	0x033CA184 LDP X24, X23, [X31 + 0x20]
	0x033CA188 LDP X26, X25, [X31 + 0x10]
	0x033CA18C LDR X30, [X31], #0x50
	0x033CA190 RET
	0x033CA194 CBZ X21, 0x33CA220
	0x033CA198 ADRP X10, 0xD59000
	0x033CA19C LDR X8, [X21]
	0x033CA1A0 LDR X10, [X10 + 0xD70]
	0x033CA1A4 LDRH W9, [X8 + 0x12E]
	0x033CA1A8 LDR X1, [X10]
	0x033CA1AC CBZ X9, 0x33CA1D0
	0x033CA1B0 LDR X10, [X8 + 0xB0]
	0x033CA1B4 ADD X10, X10, 0x8
	0x033CA1B8 LDUR X11, [X10 - 0x8]
	0x033CA1BC CMP X11, X1
	0x033CA1C0 B.EQ 0x33CA1E8
	0x033CA1C4 SUBS X9, X9, 0x1
	0x033CA1C8 ADD X10, X10, 0x10
	0x033CA1CC B.NE 0x33CA1B8
	0x033CA1D0 MOVZ W2, 0x1
	0x033CA1D4 MOV X0, X21
	0x033CA1D8 BL 0x1C5C788
	0x033CA1DC B 0x33CA1F8
	0x033CA1E0 MOV W0, W31
	0x033CA1E4 B 0x33CA17C
	0x033CA1E8 LDR W9, [X10]
	0x033CA1EC ADD W9, W9, 0x1
	0x033CA1F0 ADD X8, X8, W9, 0x4, SXTW
	0x033CA1F4 ADD X0, X8, 0x138
	0x033CA1F8 LDP X4, X3, [X0]
	0x033CA1FC AND W2, W20, 0x1
	0x033CA200 MOV X0, X21
	0x033CA204 MOV X1, X19
	0x033CA208 LDP X20, X19, [X31 + 0x40]
	0x033CA20C LDP X22, X21, [X31 + 0x30]
	0x033CA210 LDP X24, X23, [X31 + 0x20]
	0x033CA214 LDP X26, X25, [X31 + 0x10]
	0x033CA218 LDR X30, [X31], #0x50
	0x033CA21C BR X4
	0x033CA220 BL 0x1C16F20
	0x033CA224 BL 0x1C16F28
	0x033CA228 ADRP X0, 0xD2E000
	0x033CA22C LDR X0, [X0 + 0x528]
	0x033CA230 BL 0x1C16D08
	0x033CA234 BL 0x1C16F10
	0x033CA238 MOV X19, X0
	0x033CA23C ADRP X0, 0xD5B000
	0x033CA240 LDR X0, [X0 + 0xE10]
	0x033CA244 BL 0x1C16D08
	0x033CA248 MOV X1, X0
	0x033CA24C MOV X0, X19
	0x033CA250 MOV X2, X31
	0x033CA254 BL 0x330E100
	0x033CA258 ADRP X0, 0xD62000
	0x033CA25C LDR X0, [X0 + 0x9D0]
	0x033CA260 BL 0x1C16D08
	0x033CA264 MOV X1, X0
	0x033CA268 MOV X0, X19
	0x033CA26C BL 0x1C16DEC
	0x033CA270 B 0x1C39E54
	0x033CA274 STR X30, [X31 - 0x40]!
	0x033CA278 STP X24, X23, [X31 + 0x10]
	0x033CA27C STP X22, X21, [X31 + 0x20]
	0x033CA280 STP X20, X19, [X31 + 0x30]
	0x033CA284 ADRP X20, 0x1013000
	0x033CA288 LDRB W8, [X20 + 0x288]
	0x033CA28C MOV X19, X0
	0x033CA290 TBNZ X8, 0x0, 0x33CA2B4
	0x033CA294 ADRP X0, 0xD5A000
	0x033CA298 LDR X0, [X0 + 0x9A0]
	0x033CA29C BL 0x1C16CF4
	0x033CA2A0 ADRP X0, 0xD31000
	0x033CA2A4 LDR X0, [X0 + 0xC60]
	0x033CA2A8 BL 0x1C16CF4
	0x033CA2AC MOVZ W8, 0x1
	0x033CA2B0 STRB W8, [X20 + 0x288]
	0x033CA2B4 CBZ X19, 0x33CA540
	0x033CA2B8 LDR X8, [X19]
	0x033CA2BC MOVZ W1, 0x1
	0x033CA2C0 MOV X0, X19
	0x033CA2C4 LDR X9, [X8 + 0x298]
	0x033CA2C8 LDR X2, [X8 + 0x2A0]
	0x033CA2CC BLR X9
	0x033CA2D0 MOV X1, X31
	0x033CA2D4 MOV X2, X31
	0x033CA2D8 MOV X21, X0
	0x033CA2DC BL 0x32C2354
	0x033CA2E0 TBNZ X0, 0x0, 0x33CA2F8
	0x033CA2E4 CBZ X21, 0x33CA540
	0x033CA2E8 MOV X0, X21
	0x033CA2EC MOV X1, X31
	0x033CA2F0 BL 0x32CE434
	0x033CA2F4 TBNZ X0, 0x0, 0x33CA314
	0x033CA2F8 LDR X8, [X19]
	0x033CA2FC MOVZ W1, 0x1
	0x033CA300 MOV X0, X19
	0x033CA304 LDR X9, [X8 + 0x2B8]
	0x033CA308 LDR X2, [X8 + 0x2C0]
	0x033CA30C BLR X9
	0x033CA310 MOV X21, X0
	0x033CA314 MOV X0, X21
	0x033CA318 MOV X1, X31
	0x033CA31C MOV X2, X31
	0x033CA320 BL 0x32C2354
	0x033CA324 TBNZ X0, 0x0, 0x33CA4C0
	0x033CA328 CBZ X21, 0x33CA540
	0x033CA32C MOV X0, X21
	0x033CA330 MOV X1, X31
	0x033CA334 BL 0x32CE434
	0x033CA338 TBZ X0, 0x0, 0x33CA4C0
	0x033CA33C ADRP X9, 0xD5A000
	0x033CA340 LDR X9, [X9 + 0x9A0]
	0x033CA344 LDR X8, [X21]
	0x033CA348 LDR X1, [X9]
	0x033CA34C LDRB W10, [X8 + 0x130]
	0x033CA350 LDRB W9, [X1 + 0x130]
	0x033CA354 CMP W10, W9
	0x033CA358 B.CC 0x33CA548
	0x033CA35C LDR X8, [X8 + 0xC8]
	0x033CA360 ADD X8, X8, X9, 0x3, LSL
	0x033CA364 LDUR X8, [X8 - 0x8]
	0x033CA368 CMP X8, X1
	0x033CA36C B.NE 0x33CA548
	0x033CA370 MOV X0, X21
	0x033CA374 MOV X1, X31
	0x033CA378 BL 0x32DAF24
	0x033CA37C MOV X1, X31
	0x033CA380 MOV X2, X31
	0x033CA384 MOV X20, X0
	0x033CA388 BL 0x32CE528
	0x033CA38C TBZ X0, 0x0, 0x33CA4C0
	0x033CA390 MOV X0, X20
	0x033CA394 MOV X1, X21
	0x033CA398 MOV X2, X31
	0x033CA39C BL 0x32CE528
	0x033CA3A0 TBZ X0, 0x0, 0x33CA4C0
	0x033CA3A4 LDR X8, [X19]
	0x033CA3A8 MOV X0, X19
	0x033CA3AC LDR X9, [X8 + 0x258]
	0x033CA3B0 LDR X1, [X8 + 0x260]
	0x033CA3B4 BLR X9
	0x033CA3B8 CBZ X0, 0x33CA4D8
	0x033CA3BC LDR X1, [X0 + 0x18]
	0x033CA3C0 MOV X22, X0
	0x033CA3C4 CBZ X1, 0x33CA4D8
	0x033CA3C8 ADRP X8, 0xD31000
	0x033CA3CC LDR X8, [X8 + 0xC60]
	0x033CA3D0 LDR X0, [X8]
	0x033CA3D4 BL 0x1C16D6C
	0x033CA3D8 CBZ X0, 0x33CA540
	0x033CA3DC LDR W8, [X0 + 0x18]
	0x033CA3E0 MOV X21, X0
	0x033CA3E4 CMP W8, 0x1
	0x033CA3E8 B.LT 0x33CA454
	0x033CA3EC MOV W8, W31
	0x033CA3F0 LDR W9, [X22 + 0x18]
	0x033CA3F4 CMP W8, W9
	0x033CA3F8 B.CS 0x33CA544
	0x033CA3FC SXTW X24, W8
	0x033CA400 ADD X8, X22, X24, 0x3, LSL
	0x033CA404 LDR X0, [X8 + 0x20]
	0x033CA408 CBZ X0, 0x33CA540
	0x033CA40C LDR X8, [X0]
	0x033CA410 LDP X9, X1, [X8 + 0x1D8]
	0x033CA414 BLR X9
	0x033CA418 MOV X23, X0
	0x033CA41C CBZ X0, 0x33CA434
	0x033CA420 LDR X8, [X21]
	0x033CA424 MOV X0, X23
	0x033CA428 LDR X1, [X8 + 0x40]
	0x033CA42C BL 0x1C16E00
	0x033CA430 CBZ X0, 0x33CA550
	0x033CA434 LDR X9, [X21 + 0x18]
	0x033CA438 CMP W24, W9
	0x033CA43C B.CS 0x33CA544
	0x033CA440 ADD W8, W24, 0x1
	0x033CA444 ADD X10, X21, X24, 0x3, LSL
	0x033CA448 CMP W8, W9
	0x033CA44C STR X23, [X10 + 0x20]
	0x033CA450 B.LT 0x33CA3F0
	0x033CA454 CBZ X20, 0x33CA540
	0x033CA458 LDR X8, [X20]
	0x033CA45C MOV X0, X20
	0x033CA460 LDP X9, X1, [X8 + 0x1B8]
	0x033CA464 BLR X9
	0x033CA468 LDR X8, [X19]
	0x033CA46C MOV X20, X0
	0x033CA470 MOV X0, X19
	0x033CA474 LDP X9, X1, [X8 + 0x1A8]
	0x033CA478 BLR X9
	0x033CA47C LDR X8, [X19]
	0x033CA480 MOV X22, X0
	0x033CA484 MOV X0, X19
	0x033CA488 LDR X9, [X8 + 0x248]
	0x033CA48C LDR X1, [X8 + 0x250]
	0x033CA490 BLR X9
	0x033CA494 CBZ X20, 0x33CA540
	0x033CA498 MOV X2, X0
	0x033CA49C MOV X0, X20
	0x033CA4A0 MOV X1, X22
	0x033CA4A4 MOV X3, X21
	0x033CA4A8 LDP X20, X19, [X31 + 0x30]
	0x033CA4AC LDP X22, X21, [X31 + 0x20]
	0x033CA4B0 LDP X24, X23, [X31 + 0x10]
	0x033CA4B4 MOV X4, X31
	0x033CA4B8 LDR X30, [X31], #0x40
	0x033CA4BC B 0x3397994
	0x033CA4C0 LDP X20, X19, [X31 + 0x30]
	0x033CA4C4 LDP X22, X21, [X31 + 0x20]
	0x033CA4C8 LDP X24, X23, [X31 + 0x10]
	0x033CA4CC MOV X0, X31
	0x033CA4D0 LDR X30, [X31], #0x40
	0x033CA4D4 RET
	0x033CA4D8 CBZ X20, 0x33CA540
	0x033CA4DC LDR X8, [X20]
	0x033CA4E0 MOV X0, X20
	0x033CA4E4 LDP X9, X1, [X8 + 0x1B8]
	0x033CA4E8 BLR X9
	0x033CA4EC LDR X8, [X19]
	0x033CA4F0 MOV X20, X0
	0x033CA4F4 MOV X0, X19
	0x033CA4F8 LDP X9, X1, [X8 + 0x1A8]
	0x033CA4FC BLR X9
	0x033CA500 LDR X8, [X19]
	0x033CA504 MOV X21, X0
	0x033CA508 MOV X0, X19
	0x033CA50C LDR X9, [X8 + 0x248]
	0x033CA510 LDR X1, [X8 + 0x250]
	0x033CA514 BLR X9
	0x033CA518 CBZ X20, 0x33CA540
	0x033CA51C MOV X2, X0
	0x033CA520 MOV X0, X20
	0x033CA524 MOV X1, X21
	0x033CA528 LDP X20, X19, [X31 + 0x30]
	0x033CA52C LDP X22, X21, [X31 + 0x20]
	0x033CA530 LDP X24, X23, [X31 + 0x10]
	0x033CA534 MOV X3, X31
	0x033CA538 LDR X30, [X31], #0x40
	0x033CA53C B 0x339789C
	0x033CA540 BL 0x1C16F20
	0x033CA544 BL 0x1C16F28
	0x033CA548 MOV X0, X21
	0x033CA54C BL 0x1C171E0
	0x033CA550 BL 0x1C16F44
	0x033CA554 MOV X1, X31
	0x033CA558 BL 0x1C16DEC
	0x033CA55C STP X30, X23, [X31 - 0x30]!
	0x033CA560 STP X22, X21, [X31 + 0x10]
	0x033CA564 STP X20, X19, [X31 + 0x20]
	0x033CA568 ADRP X20, 0x1013000
	0x033CA56C LDRB W8, [X20 + 0x289]
	0x033CA570 MOV X19, X0
	0x033CA574 TBNZ X8, 0x0, 0x33CA58C
	0x033CA578 ADRP X0, 0xD5A000
	0x033CA57C LDR X0, [X0 + 0x9A0]
	0x033CA580 BL 0x1C16CF4
	0x033CA584 MOVZ W8, 0x1
	0x033CA588 STRB W8, [X20 + 0x289]
	0x033CA58C CBZ X19, 0x33CA760
	0x033CA590 LDR X8, [X19]
	0x033CA594 MOVZ W1, 0x1
	0x033CA598 MOV X0, X19
	0x033CA59C LDR X9, [X8 + 0x248]
	0x033CA5A0 LDR X2, [X8 + 0x250]
	0x033CA5A4 BLR X9
	0x033CA5A8 MOV X1, X31
	0x033CA5AC MOV X2, X31
	0x033CA5B0 MOV X20, X0
	0x033CA5B4 BL 0x32C2354
	0x033CA5B8 TBNZ X0, 0x0, 0x33CA5D0
	0x033CA5BC CBZ X20, 0x33CA760
	0x033CA5C0 MOV X0, X20
	0x033CA5C4 MOV X1, X31
	0x033CA5C8 BL 0x32CE434
	0x033CA5CC TBNZ X0, 0x0, 0x33CA5EC
	0x033CA5D0 LDR X8, [X19]
	0x033CA5D4 MOVZ W1, 0x1
	0x033CA5D8 MOV X0, X19
	0x033CA5DC LDR X9, [X8 + 0x268]
	0x033CA5E0 LDR X2, [X8 + 0x270]
	0x033CA5E4 BLR X9
	0x033CA5E8 MOV X20, X0
	0x033CA5EC MOV X0, X20
	0x033CA5F0 MOV X1, X31
	0x033CA5F4 MOV X2, X31
	0x033CA5F8 BL 0x32C2354
	0x033CA5FC TBNZ X0, 0x0, 0x33CA614
	0x033CA600 CBZ X20, 0x33CA760
	0x033CA604 MOV X0, X20
	0x033CA608 MOV X1, X31
	0x033CA60C BL 0x32CE434
	0x033CA610 TBNZ X0, 0x0, 0x33CA630
	0x033CA614 LDR X8, [X19]
	0x033CA618 MOVZ W1, 0x1
	0x033CA61C MOV X0, X19
	0x033CA620 LDR X9, [X8 + 0x258]
	0x033CA624 LDR X2, [X8 + 0x260]
	0x033CA628 BLR X9
	0x033CA62C MOV X20, X0
	0x033CA630 MOV X0, X20
	0x033CA634 MOV X1, X31
	0x033CA638 MOV X2, X31
	0x033CA63C BL 0x32C2354
	0x033CA640 TBNZ X0, 0x0, 0x33CA74C
	0x033CA644 CBZ X20, 0x33CA760
	0x033CA648 MOV X0, X20
	0x033CA64C MOV X1, X31
	0x033CA650 BL 0x32CE434
	0x033CA654 TBZ X0, 0x0, 0x33CA74C
	0x033CA658 ADRP X9, 0xD5A000
	0x033CA65C LDR X9, [X9 + 0x9A0]
	0x033CA660 LDR X8, [X20]
	0x033CA664 LDR X1, [X9]
	0x033CA668 LDRB W10, [X8 + 0x130]
	0x033CA66C LDRB W9, [X1 + 0x130]
	0x033CA670 CMP W10, W9
	0x033CA674 B.CC 0x33CA764
	0x033CA678 LDR X8, [X8 + 0xC8]
	0x033CA67C ADD X8, X8, X9, 0x3, LSL
	0x033CA680 LDUR X8, [X8 - 0x8]
	0x033CA684 CMP X8, X1
	0x033CA688 B.NE 0x33CA764
	0x033CA68C MOV X0, X20
	0x033CA690 MOV X1, X31
	0x033CA694 BL 0x32DAF24
	0x033CA698 MOV X1, X31
	0x033CA69C MOV X2, X31
	0x033CA6A0 MOV X21, X0
	0x033CA6A4 BL 0x32CE528
	0x033CA6A8 TBZ X0, 0x0, 0x33CA74C
	0x033CA6AC MOV X0, X21
	0x033CA6B0 MOV X1, X20
	0x033CA6B4 MOV X2, X31
	0x033CA6B8 BL 0x32CE528
	0x033CA6BC TBZ X0, 0x0, 0x33CA74C
	0x033CA6C0 MOV X0, X20
	0x033CA6C4 MOV X1, X31
	0x033CA6C8 BL 0x32CE454
	0x033CA6CC ANDS W31, W0, 0x1
	0x033CA6D0 MOVZ W8, 0x20
	0x033CA6D4 MOVZ W9, 0x10
	0x033CA6D8 MOV X0, X20
	0x033CA6DC MOV X1, X31
	0x033CA6E0 CSEL W22, W9, W8, NE
	0x033CA6E4 BL 0x32CE414
	0x033CA6E8 ANDS W31, W0, 0x1
	0x033CA6EC MOVZ W8, 0x4
	0x033CA6F0 MOVZ W9, 0x8
	0x033CA6F4 CSEL W23, W9, W8, NE
	0x033CA6F8 CBZ X21, 0x33CA760
	0x033CA6FC LDR X8, [X21]
	0x033CA700 MOV X0, X21
	0x033CA704 LDP X9, X1, [X8 + 0x1B8]
	0x033CA708 BLR X9
	0x033CA70C LDR X8, [X19]
	0x033CA710 MOV X20, X0
	0x033CA714 MOV X0, X19
	0x033CA718 LDP X9, X1, [X8 + 0x1A8]
	0x033CA71C BLR X9
	0x033CA720 CBZ X20, 0x33CA760
	0x033CA724 LDR X8, [X20]
	0x033CA728 MOV X1, X0
	0x033CA72C ORR W2, W23, W22, 0x0
	0x033CA730 MOV X0, X20
	0x033CA734 LDR X4, [X8 + 0x658]
	0x033CA738 LDR X3, [X8 + 0x660]
	0x033CA73C LDP X20, X19, [X31 + 0x20]
	0x033CA740 LDP X22, X21, [X31 + 0x10]
	0x033CA744 LDP X30, X23, [X31], #0x30
	0x033CA748 BR X4
	0x033CA74C LDP X20, X19, [X31 + 0x20]
	0x033CA750 LDP X22, X21, [X31 + 0x10]
	0x033CA754 MOV X0, X31
	0x033CA758 LDP X30, X23, [X31], #0x30
	0x033CA75C RET
	0x033CA760 BL 0x1C16F20
	0x033CA764 MOV X0, X20
	0x033CA768 BL 0x1C171E0
	0x033CA76C STR X30, [X31 - 0x30]!
	0x033CA770 STP X22, X21, [X31 + 0x10]
	0x033CA774 STP X20, X19, [X31 + 0x20]
	0x033CA778 ADRP X20, 0x1013000
	0x033CA77C ADRP X22, 0xD62000
	0x033CA780 ADRP X21, 0xD29000
	0x033CA784 LDRB W8, [X20 + 0x28B]
	0x033CA788 LDR X22, [X22 + 0x9D8]
	0x033CA78C LDR X21, [X21 + 0x6C0]
	0x033CA790 MOV X19, X0
	0x033CA794 TBNZ X8, 0x0, 0x33CA7D0
	0x033CA798 ADRP X0, 0xD62000
	0x033CA79C LDR X0, [X0 + 0x9D8]
	0x033CA7A0 BL 0x1C16CF4
	0x033CA7A4 ADRP X0, 0xD5D000
	0x033CA7A8 LDR X0, [X0 + 0xF90]
	0x033CA7AC BL 0x1C16CF4
	0x033CA7B0 ADRP X0, 0xD5C000
	0x033CA7B4 LDR X0, [X0 + 0x3E0]
	0x033CA7B8 BL 0x1C16CF4
	0x033CA7BC ADRP X0, 0xD29000
	0x033CA7C0 LDR X0, [X0 + 0x6C0]
	0x033CA7C4 BL 0x1C16CF4
	0x033CA7C8 MOVZ W8, 0x1
	0x033CA7CC STRB W8, [X20 + 0x28B]
	0x033CA7D0 LDR X0, [X21]
	0x033CA7D4 LDR X20, [X22]
	0x033CA7D8 LDR W8, [X0 + 0xE0]
	0x033CA7DC CBNZ W8, 0x33CA7E4
	0x033CA7E0 BL 0x1C16DFC
	0x033CA7E4 MOV X0, X20
	0x033CA7E8 MOV X1, X31
	0x033CA7EC BL 0x338C698
	0x033CA7F0 MOV X1, X0
	0x033CA7F4 MOV X0, X19
	0x033CA7F8 MOV X2, X31
	0x033CA7FC BL 0x3395194
	0x033CA800 TBZ X0, 0x0, 0x33CA82C
	0x033CA804 ADRP X8, 0xD5D000
	0x033CA808 LDR X8, [X8 + 0xF90]
	0x033CA80C LDR X0, [X8]
	0x033CA810 BL 0x1C16F10
	0x033CA814 MOVZ W1, 0x4
	0x033CA818 MOV X2, X31
	0x033CA81C MOV X19, X0
	0x033CA820 BL 0x33166B0
	0x033CA824 MOV X0, X19
	0x033CA828 B 0x33CA950
	0x033CA82C LDR X0, [X21]
	0x033CA830 LDR X20, [X22]
	0x033CA834 LDR W8, [X0 + 0xE0]
	0x033CA838 CBNZ W8, 0x33CA840
	0x033CA83C BL 0x1C16DFC
	0x033CA840 MOV X0, X20
	0x033CA844 MOV X1, X31
	0x033CA848 BL 0x338C698
	0x033CA84C ADRP X22, 0xD5C000
	0x033CA850 LDR X22, [X22 + 0x3E0]
	0x033CA854 MOV X20, X0
	0x033CA858 LDR X8, [X22]
	0x033CA85C LDR W9, [X8 + 0xE0]
	0x033CA860 CBNZ W9, 0x33CA86C
	0x033CA864 MOV X0, X8
	0x033CA868 BL 0x1C16DFC
	0x033CA86C MOV X0, X19
	0x033CA870 MOV X1, X20
	0x033CA874 MOV W2, W31
	0x033CA878 BL 0x33C7388
	0x033CA87C CBZ X0, 0x33CA960
	0x033CA880 LDR X8, [X0 + 0x18]
	0x033CA884 CBZ X8, 0x33CA8B8
	0x033CA888 CMP W8, 0x2
	0x033CA88C B.GE 0x33CA964
	0x033CA890 CBZ W8, 0x33CA9AC
	0x033CA894 LDR X0, [X0 + 0x20]
	0x033CA898 CBZ X0, 0x33CA950
	0x033CA89C ADRP X8, 0xD5D000
	0x033CA8A0 LDR X8, [X8 + 0xF90]
	0x033CA8A4 LDR X1, [X8]
	0x033CA8A8 LDR X8, [X0]
	0x033CA8AC CMP X8, X1
	0x033CA8B0 B.EQ 0x33CA950
	0x033CA8B4 BL 0x1C171E0
	0x033CA8B8 CBZ X19, 0x33CA960
	0x033CA8BC LDR X8, [X19]
	0x033CA8C0 MOV X0, X19
	0x033CA8C4 LDR X9, [X8 + 0x818]
	0x033CA8C8 LDR X1, [X8 + 0x820]
	0x033CA8CC BLR X9
	0x033CA8D0 LDR X8, [X21]
	0x033CA8D4 MOV X20, X0
	0x033CA8D8 LDR W9, [X8 + 0xE0]
	0x033CA8DC CBNZ W9, 0x33CA8E8
	0x033CA8E0 MOV X0, X8
	0x033CA8E4 BL 0x1C16DFC
	0x033CA8E8 MOV X0, X20
	0x033CA8EC MOV X1, X31
	0x033CA8F0 MOV X2, X31
	0x033CA8F4 BL 0x3395F0C
	0x033CA8F8 TBZ X0, 0x0, 0x33CA934
	0x033CA8FC LDR X8, [X19]
	0x033CA900 MOV X0, X19
	0x033CA904 LDR X9, [X8 + 0x818]
	0x033CA908 LDR X1, [X8 + 0x820]
	0x033CA90C BLR X9
	0x033CA910 LDR X8, [X22]
	0x033CA914 MOV X19, X0
	0x033CA918 LDR W9, [X8 + 0xE0]
	0x033CA91C CBNZ W9, 0x33CA928
	0x033CA920 MOV X0, X8
	0x033CA924 BL 0x1C16DFC
	0x033CA928 MOV X0, X19
	0x033CA92C BL 0x33C8130
	0x033CA930 CBNZ X0, 0x33CA950
	0x033CA934 LDR X0, [X22]
	0x033CA938 LDR W8, [X0 + 0xE0]
	0x033CA93C CBNZ W8, 0x33CA948
	0x033CA940 BL 0x1C16DFC
	0x033CA944 LDR X0, [X22]
	0x033CA948 LDR X8, [X0 + 0xB8]
	0x033CA94C LDR X0, [X8 + 0x8]
	0x033CA950 LDP X20, X19, [X31 + 0x20]
	0x033CA954 LDP X22, X21, [X31 + 0x10]
	0x033CA958 LDR X30, [X31], #0x30
	0x033CA95C RET
	0x033CA960 BL 0x1C16F20
	0x033CA964 ADRP X0, 0xD56000
	0x033CA968 LDR X0, [X0 + 0xC08]
	0x033CA96C BL 0x1C16D08
	0x033CA970 BL 0x1C16F10
	0x033CA974 MOV X19, X0
	0x033CA978 ADRP X0, 0xD62000
	0x033CA97C LDR X0, [X0 + 0x9E0]
	0x033CA980 BL 0x1C16D08
	0x033CA984 MOV X1, X0
	0x033CA988 MOV X0, X19
	0x033CA98C MOV X2, X31
	0x033CA990 BL 0x33674A0
	0x033CA994 ADRP X0, 0xD62000
	0x033CA998 LDR X0, [X0 + 0x9E8]
	0x033CA99C BL 0x1C16D08
	0x033CA9A0 MOV X1, X0
	0x033CA9A4 MOV X0, X19
	0x033CA9A8 BL 0x1C16DEC
	0x033CA9AC BL 0x1C16F28
	0x033CA9B0 STP X30, X21, [X31 - 0x20]!
	0x033CA9B4 STP X20, X19, [X31 + 0x10]
	0x033CA9B8 ADRP X19, 0x1013000
	0x033CA9BC ADRP X21, 0xD5D000
	0x033CA9C0 ADRP X20, 0xD5C000
	0x033CA9C4 LDRB W8, [X19 + 0x28D]
	0x033CA9C8 LDR X21, [X21 + 0xF90]
	0x033CA9CC LDR X20, [X20 + 0x3E0]
	0x033CA9D0 TBNZ X8, 0x0, 0x33CA9F4
	0x033CA9D4 ADRP X0, 0xD5D000
	0x033CA9D8 LDR X0, [X0 + 0xF90]
	0x033CA9DC BL 0x1C16CF4
	0x033CA9E0 ADRP X0, 0xD5C000
	0x033CA9E4 LDR X0, [X0 + 0x3E0]
	0x033CA9E8 BL 0x1C16CF4
	0x033CA9EC MOVZ W8, 0x1
	0x033CA9F0 STRB W8, [X19 + 0x28D]
	0x033CA9F4 LDR X0, [X21]
	0x033CA9F8 BL 0x1C16F10
	0x033CA9FC MOVZ W1, 0x7FFF
	0x033CAA00 MOV X2, X31
	0x033CAA04 MOV X19, X0
	0x033CAA08 BL 0x33166B0
	0x033CAA0C LDR X8, [X20]
	0x033CAA10 LDR X8, [X8 + 0xB8]
	0x033CAA14 STR X19, [X8 + 0x8]
	0x033CAA18 LDP X20, X19, [X31 + 0x10]
	0x033CAA1C LDP X30, X21, [X31], #0x20
	0x033CAA20 RET
	0x033CAA24 LDR X0, [X0 + 0x10]
	0x033CAA28 RET
	0x033CAA2C LDR W0, [X0 + 0x18]
	0x033CAA30 RET
	0x033CAA34 RET
	0x033CAA38 B 0x33C5D3C
	0x033CAA3C STR X30, [X31 - 0x30]!
	0x033CAA40 STP X22, X21, [X31 + 0x10]
	0x033CAA44 STP X20, X19, [X31 + 0x20]
	0x033CAA48 LDR X8, [X0 + 0x78]
	0x033CAA4C MOV X19, X0
	0x033CAA50 MOV X20, X1
	0x033CAA54 CBZ X8, 0x33CAAB8
	0x033CAA58 LDR W9, [X8 + 0x18]
	0x033CAA5C MOV X21, X31
	0x033CAA60 CMP W9, 0x1
	0x033CAA64 CSINC W22, W9, W31, GT
	0x033CAA68 LDR W9, [X8 + 0x18]
	0x033CAA6C CMP W21, W9
	0x033CAA70 B.CS 0x33CAAD0
	0x033CAA74 ADD X8, X8, X21, 0x3, LSL
	0x033CAA78 LDR X0, [X8 + 0x20]
	0x033CAA7C CBZ X0, 0x33CAAA4
	0x033CAA80 LDR X8, [X0]
	0x033CAA84 MOV X1, X20
	0x033CAA88 LDP X9, X2, [X8 + 0x198]
	0x033CAA8C BLR X9
	0x033CAA90 ADD X21, X21, 0x1
	0x033CAA94 CMP W22, W21
	0x033CAA98 B.EQ 0x33CAAA8
	0x033CAA9C LDR X8, [X19 + 0x78]
	0x033CAAA0 CBNZ X8, 0x33CAA68
	0x033CAAA4 BL 0x1C16F20
	0x033CAAA8 LDP X20, X19, [X31 + 0x20]
	0x033CAAAC LDP X22, X21, [X31 + 0x10]
	0x033CAAB0 LDR X30, [X31], #0x30

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x1015000
	015 Move W8, [X20+643]
	016 Move W22, W2
	017 Move X19, X1
	018 Move X27, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {88}
	023 Move X0, 0xD64000
	024 Move X0, [X0+2408]
	025 Call 0x1C17CF4
	026 Move X0, 0xD64000
	027 Move X0, [X0+2264]
	028 Call 0x1C17CF4
	029 Move X0, 0xD5D000
	030 Move X0, [X0+3192]
	031 Call 0x1C17CF4
	032 Move X0, 0xD64000
	033 Move X0, [X0+2272]
	034 Call 0x1C17CF4
	035 Move X0, 0xD64000
	036 Move X0, [X0+2280]
	037 Call 0x1C17CF4
	038 Move X0, 0xD64000
	039 Move X0, [X0+2288]
	040 Call 0x1C17CF4
	041 Move X0, 0xD64000
	042 Move X0, [X0+2296]
	043 Call 0x1C17CF4
	044 Move X0, 0xD64000
	045 Move X0, [X0+2416]
	046 Call 0x1C17CF4
	047 Move X0, 0xD2B000
	048 Move X0, [X0+3584]
	049 Call 0x1C17CF4
	050 Move X0, 0xD64000
	051 Move X0, [X0+2424]
	052 Call 0x1C17CF4
	053 Move X0, 0xD64000
	054 Move X0, [X0+2432]
	055 Call 0x1C17CF4
	056 Move X0, 0xD2B000
	057 Move X0, [X0+3608]
	058 Call 0x1C17CF4
	059 Move X0, 0xD64000
	060 Move X0, [X0+2440]
	061 Call 0x1C17CF4
	062 Move X0, 0xD64000
	063 Move X0, [X0+2448]
	064 Call 0x1C17CF4
	065 Move X0, 0xD64000
	066 Move X0, [X0+2456]
	067 Call 0x1C17CF4
	068 Move X0, 0xD64000
	069 Move X0, [X0+2464]
	070 Call 0x1C17CF4
	071 Move X0, 0xD64000
	072 Move X0, [X0+2472]
	073 Call 0x1C17CF4
	074 Move X0, 0xD2B000
	075 Move X0, [X0+1448]
	076 Call 0x1C17CF4
	077 Move X0, 0xD64000
	078 Move X0, [X0+2320]
	079 Call 0x1C17CF4
	080 Move X0, 0xD5E000
	081 Move X0, [X0+992]
	082 Call 0x1C17CF4
	083 Move X0, 0xD2B000
	084 Move X0, [X0+1728]
	085 Call 0x1C17CF4
	086 Move W8, 1
	087 Move [X20+643], W8
	088 Move [X31+8], X31
	089 Compare X27, 0
	090 JumpIfEqual {1137}
	091 Move X8, 0xD2B000
	092 Move X8, [X8+1728]
	093 Move X0, [X8]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move X0, X19
	099 Move X1, X31
	100 Move X2, X31
	101 Call Type.op_Equality, X0, X1
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {1144}
	106 Move X8, 0xD2B000
	107 Move X8, [X8+1728]
	108 Move X24, 0xD5E000
	109 Move X0, [X8]
	110 Move X8, 0xD64000
	111 Move X8, [X8+2320]
	112 Move W9, [X0+224]
	113 Move X21, [X8]
	114 Move X24, [X24+992]
	115 Compare W9, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1C17DFC
	118 Move X0, X21
	119 Move X1, X31
	120 Call Type.GetTypeFromHandle, X0
	121 Move X1, X0
	122 Move X0, X19
	123 Move X2, X31
	124 Call Type.op_Equality, X0, X1
	125 Move X8, [X24]
	126 And W31, W0, 1
	127 NotImplemented "Instruction CSEL not yet implemented."
	128 Move W9, [X8+224]
	129 Compare W9, 0
	130 JumpIfNotEqual {133}
	131 Move X0, X8
	132 Call 0x1C17DFC
	133 Move X23, 0xD64000
	134 Move X23, [X23+2416]
	135 Move X0, X27
	136 Move X1, X19
	137 Move W2, W31
	138 Call MonoCustomAttrs.GetCustomAttributesDataBase, X0, X1, X2
	139 Move X21, X0
	140 Move TEMP, X22
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfNotEqual {154}
	144 Move X0, [X24]
	145 Move W8, [X0+224]
	146 Compare W8, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1C17DFC
	149 Move X0, X27
	150 Call MonoCustomAttrs.GetBase, X0
	151 NotImplemented "Instruction CMP not yet implemented."
	152 NotImplemented "Instruction CSET not yet implemented."
	153 And W20, W8, W22
	154 Compare X21, 0
	155 JumpIfEqual {1113}
	156 Move X8, [X21]
	157 Move X1, [X23]
	158 NotImplemented "Instruction LDRH not yet implemented."
	159 Compare X9, 0
	160 JumpIfEqual {167}
	161 Move X10, [X8+176]
	162 Add X10, X10, 8
	163 NotImplemented "Instruction LDUR not yet implemented."
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Subtract X9, X9, 1
	166 Add X10, X10, 16
	167 Move X0, X21
	168 Move W2, W31
	169 Call 0x1C5D788
	170 NotImplemented "Instruction LDRSW not yet implemented."
	171 Add X8, X8, X9
	172 Add X0, X8, 312
	173 Move X8, [X0]
	174 Move X1, [X0+8]
	175 Move X0, X21
	176 NotImplemented "Instruction BLR not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X20, 0xD64000
	179 Move X8, [X21]
	180 Move X20, [X20+2440]
	181 NotImplemented "Instruction LDRH not yet implemented."
	182 Move X1, [X20]
	183 Compare X9, 0
	184 JumpIfEqual {191}
	185 Move X10, [X8+176]
	186 Add X10, X10, 8
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract X9, X9, 1
	190 Add X10, X10, 16
	191 Move X0, X21
	192 Move W2, W31
	193 Call 0x1C5D788
	194 Move W20, W31
	195 Move X8, 0xD2B000
	196 Move X8, [X8+1728]
	197 Move X0, [X8]
	198 Move W8, [X0+224]
	199 Compare W8, 0
	200 JumpIfNotEqual {202}
	201 Call 0x1C17DFC
	202 Move X0, X19
	203 Move X1, X31
	204 Move X2, X31
	205 Call Type.op_Inequality, X0, X1
	206 Move TEMP, X0
	207 And TEMP, TEMP, 1
	208 Compare TEMP, 1
	209 JumpIfNotEqual {216}
	210 Compare X19, 0
	211 JumpIfEqual {1113}
	212 Move X0, X19
	213 Move X1, X31
	214 Call Type.get_IsSealed, X0
	215 And W8, W0, 1
	216 Move W8, W31
	217 And W31, W8, W20
	218 Move X0, [X24]
	219 Move W8, [X0+224]
	220 Compare W8, 0
	221 JumpIfNotEqual {223}
	222 Call 0x1C17DFC
	223 Move X0, X19
	224 Call MonoCustomAttrs.RetrieveAttributeUsage, X0
	225 Compare X0, 0
	226 JumpIfEqual {1113}
	227 Move W8, [X0+21]
	228 NotImplemented "Instruction CMP not yet implemented."
	229 NotImplemented "Instruction CSET not yet implemented."
	230 And W20, W20, W8
	231 Compare X21, 0
	232 JumpIfEqual {1113}
	233 Move X8, [X21]
	234 Move X22, 0xD2B000
	235 Move X1, [X23]
	236 NotImplemented "Instruction LDRH not yet implemented."
	237 Move X22, [X22+1448]
	238 Compare X9, 0
	239 JumpIfEqual {246}
	240 Move X10, [X8+176]
	241 Add X10, X10, 8
	242 NotImplemented "Instruction LDUR not yet implemented."
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Subtract X9, X9, 1
	245 Add X10, X10, 16
	246 Move X0, X21
	247 Move W2, W31
	248 Call 0x1C5D788
	249 NotImplemented "Instruction LDRSW not yet implemented."
	250 Add X8, X8, X9
	251 Add X0, X8, 312
	252 Move X8, [X0]
	253 Move X1, [X0+8]
	254 Move X0, X21
	255 NotImplemented "Instruction BLR not yet implemented."
	256 Move X8, [X22]
	257 Move W22, W0
	258 Move W9, [X8+224]
	259 Compare W9, 0
	260 JumpIfNotEqual {263}
	261 Move X0, X8
	262 Call 0x1C17DFC
	263 Move W1, 16
	264 Move W0, W22
	265 Move X2, X31
	266 Call Math.Max, X0, X1
	267 Move W24, W0
	268 Move TEMP, X20
	269 And TEMP, TEMP, 1
	270 Compare TEMP, 1
	271 JumpIfNotEqual {580}
	272 Move X8, 0xD64000
	273 Move X8, [X8+2296]
	274 Move X0, [X8]
	275 Call 0x1C17F10
	276 Move X8, 0xD64000
	277 Move X8, [X8+2288]
	278 Move W1, W24
	279 Move X22, X0
	280 Move X2, [X8]
	281 Call Dictionary`2<Object, Object>..ctor, X0, X1
	282 Move X8, 0xD64000
	283 Move X8, [X8+2472]
	284 Move X0, [X8]
	285 Call 0x1C17F10
	286 Move X8, 0xD64000
	287 Move X8, [X8+2464]
	288 Move W1, W24
	289 Move X23, X0
	290 Move X2, [X8]
	291 Call List`1<Object>..ctor, X0, X1
	292 Move X20, 0xD2B000
	293 Move X26, 0xD64000
	294 Move X25, 0xD64000
	295 Move X20, [X20+3608]
	296 Move X26, [X26+2432]
	297 Move X25, [X25+2280]
	298 Move W24, W31
	299 Move X8, [X21]
	300 Move X10, 0xD64000
	301 NotImplemented "Instruction LDRH not yet implemented."
	302 Move X10, [X10+2424]
	303 Move [X31], X27
	304 Move X1, [X10]
	305 Compare X9, 0
	306 JumpIfEqual {313}
	307 Move X10, [X8+176]
	308 Add X10, X10, 8
	309 NotImplemented "Instruction LDUR not yet implemented."
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Subtract X9, X9, 1
	312 Add X10, X10, 16
	313 Move X0, X21
	314 Move W2, W31
	315 Call 0x1C5D788
	316 NotImplemented "Instruction LDRSW not yet implemented."
	317 Add X8, X8, X9
	318 Add X0, X8, 312
	319 Move X8, [X0]
	320 Move X1, [X0+8]
	321 Move X0, X21
	322 NotImplemented "Instruction BLR not yet implemented."
	323 Move X21, X0
	324 Compare X0, 0
	325 JumpIfEqual {572}
	326 Move X8, [X21]
	327 Move X1, [X20]
	328 NotImplemented "Instruction LDRH not yet implemented."
	329 Compare X9, 0
	330 JumpIfEqual {337}
	331 Move X10, [X8+176]
	332 Add X10, X10, 8
	333 NotImplemented "Instruction LDUR not yet implemented."
	334 NotImplemented "Instruction CMP not yet implemented."
	335 Subtract X9, X9, 1
	336 Add X10, X10, 16
	337 Move X0, X21
	338 Move W2, W31
	339 Call 0x1C5D788
	340 NotImplemented "Instruction LDRSW not yet implemented."
	341 Add X8, X8, X9
	342 Add X0, X8, 312
	343 Move X8, [X0]
	344 Move X1, [X0+8]
	345 Move X0, X21
	346 NotImplemented "Instruction BLR not yet implemented."
	347 Move TEMP, X0
	348 And TEMP, TEMP, 1
	349 Compare TEMP, 1
	350 JumpIfNotEqual {490}
	351 Move X8, [X21]
	352 Move X1, [X26]
	353 NotImplemented "Instruction LDRH not yet implemented."
	354 Compare X9, 0
	355 JumpIfEqual {362}
	356 Move X10, [X8+176]
	357 Add X10, X10, 8
	358 NotImplemented "Instruction LDUR not yet implemented."
	359 NotImplemented "Instruction CMP not yet implemented."
	360 Subtract X9, X9, 1
	361 Add X10, X10, 16
	362 Move X0, X21
	363 Move W2, W31
	364 Call 0x1C5D788
	365 NotImplemented "Instruction LDRSW not yet implemented."
	366 Add X8, X8, X9
	367 Add X0, X8, 312
	368 Move X8, [X0]
	369 Move X1, [X0+8]
	370 Move X0, X21
	371 NotImplemented "Instruction BLR not yet implemented."
	372 Move X28, X0
	373 Compare X0, 0
	374 JumpIfEqual {547}
	375 Move X0, X28
	376 Move X1, X31
	377 Call CustomAttributeData.get_AttributeType, X0
	378 Move X8, 0xD2B000
	379 Move X8, [X8+1728]
	380 Move X27, X0
	381 Move X0, [X8]
	382 Move W8, [X0+224]
	383 Compare W8, 0
	384 JumpIfNotEqual {386}
	385 Call 0x1C17DFC
	386 Move X0, X19
	387 Move X1, X31
	388 Move X2, X31
	389 Call Type.op_Inequality, X0, X1
	390 Move TEMP, X0
	391 And TEMP, TEMP, 1
	392 Compare TEMP, 1
	393 JumpIfNotEqual {406}
	394 Compare X19, 0
	395 JumpIfEqual {566}
	396 Move X8, [X19]
	397 Move X9, [X8+680]
	398 Move X2, [X8+688]
	399 Move X0, X19
	400 Move X1, X27
	401 NotImplemented "Instruction BLR not yet implemented."
	402 Move TEMP, X0
	403 And TEMP, TEMP, 1
	404 Compare TEMP, 1
	405 JumpIfNotEqual {326}
	406 Compare X22, 0
	407 JumpIfEqual {565}
	408 Move X3, [X25]
	409 Add X2, X31, 8
	410 Move X0, X22
	411 Move X1, X27
	412 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	413 Move TEMP, X0
	414 And TEMP, TEMP, 1
	415 Compare TEMP, 1
	416 JumpIfNotEqual {428}
	417 Move X8, [X31+8]
	418 Compare X8, 0
	419 JumpIfEqual {570}
	420 Move X29, [X8+16]
	421 Compare W24, 0
	422 JumpIfEqual {440}
	423 Compare X29, 0
	424 JumpIfEqual {567}
	425 Move W8, [X29+21]
	426 Compare W8, 0
	427 JumpIfNotEqual {442}
	428 Move X8, 0xD5E000
	429 Move X8, [X8+992]
	430 Move X0, [X8]
	431 Move W8, [X0+224]
	432 Compare W8, 0
	433 JumpIfNotEqual {435}
	434 Call 0x1C17DFC
	435 Move X0, X27
	436 Call MonoCustomAttrs.RetrieveAttributeUsage, X0
	437 Move X29, X0
	438 Compare W24, 0
	439 JumpIfNotEqual {423}
	440 Compare X29, 0
	441 JumpIfEqual {571}
	442 Move W8, [X29+20]
	443 Compare W8, 0
	444 JumpIfNotEqual {450}
	445 Move X8, [X31+8]
	446 Compare X8, 0
	447 JumpIfEqual {450}
	448 Move W8, [X8+24]
	449 NotImplemented "Instruction CMP not yet implemented."
	450 Compare X23, 0
	451 JumpIfEqual {569}
	452 Move X9, 0xD64000
	453 Move W10, [X23+28]
	454 Move X8, [X23+16]
	455 Move X9, [X9+2448]
	456 Add W10, W10, 1
	457 Move X9, [X9]
	458 Move [X23+28], W10
	459 Compare X8, 0
	460 JumpIfEqual {568}
	461 NotImplemented "Instruction LDRSW not yet implemented."
	462 Move W11, [X8+24]
	463 NotImplemented "Instruction CMP not yet implemented."
	464 Add W9, W10, 1
	465 Add X8, X8, X10
	466 Move [X23+24], W9
	467 Move [X8+32], X28
	468 Move X8, [X9+32]
	469 Move X8, [X8+192]
	470 Move X2, [X8+112]
	471 Move X0, X23
	472 Move X1, X28
	473 Call List`1<Object>.AddWithResize, X0, X1
	474 Move X8, [X31+8]
	475 Compare X8, 0
	476 JumpIfNotEqual {326}
	477 Move X8, 0xD64000
	478 Move X8, [X8+2264]
	479 Move X0, [X8]
	480 Call 0x1C17F10
	481 Move [X0+16], X29
	482 Move [X0+24], W24
	483 Move X8, 0xD64000
	484 Move X8, [X8+2272]
	485 Move X2, X0
	486 Move X3, [X8]
	487 Move X0, X22
	488 Move X1, X27
	489 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	490 Move X27, X31
	491 Move W28, 45
	492 Compare X21, 0
	493 JumpIfEqual {517}
	494 Move X8, [X21]
	495 Move X10, 0xD2B000
	496 NotImplemented "Instruction LDRH not yet implemented."
	497 Move X10, [X10+3584]
	498 Move X1, [X10]
	499 Compare X9, 0
	500 JumpIfEqual {507}
	501 Move X10, [X8+176]
	502 Add X10, X10, 8
	503 NotImplemented "Instruction LDUR not yet implemented."
	504 NotImplemented "Instruction CMP not yet implemented."
	505 Subtract X9, X9, 1
	506 Add X10, X10, 16
	507 Move X0, X21
	508 Move W2, W31
	509 Call 0x1C5D788
	510 NotImplemented "Instruction LDRSW not yet implemented."
	511 Add X8, X8, X9
	512 Add X0, X8, 312
	513 Move X8, [X0]
	514 Move X1, [X0+8]
	515 Move X0, X21
	516 NotImplemented "Instruction BLR not yet implemented."
	517 Compare X27, 0
	518 JumpIfNotEqual {1114}
	519 NotImplemented "Instruction CMP not yet implemented."
	520 Compare W28, 0
	521 Invalid "Jump target not found in method."
	522 Move X21, 0xD5E000
	523 Move X21, [X21+992]
	524 Move X0, [X21]
	525 Move W8, [X0+224]
	526 Compare W8, 0
	527 JumpIfNotEqual {529}
	528 Call 0x1C17DFC
	529 Move X0, [X31]
	530 Call MonoCustomAttrs.GetBase, X0
	531 Compare X0, 0
	532 JumpIfEqual {612}
	533 Move X27, X0
	534 Move X0, [X21]
	535 Move W8, [X0+224]
	536 Compare W8, 0
	537 JumpIfNotEqual {539}
	538 Call 0x1C17DFC
	539 Move W2, 1
	540 Move X0, X27
	541 Move X1, X19
	542 Add W24, W24, 1
	543 Call MonoCustomAttrs.GetCustomAttributesDataBase, X0, X1, X2
	544 Move X21, X0
	545 Compare X0, 0
	546 JumpIfNotEqual {299}
	547 Move X0, 0xD64000
	548 Move X0, [X0+2328]
	549 Call 0x1C17D08
	550 Call 0x1C17F10
	551 Move X27, X0
	552 Move X0, 0xD64000
	553 Move X0, [X0+2480]
	554 Call 0x1C17D08
	555 Move X1, X0
	556 Move X0, X27
	557 Move X2, X31
	558 Call CustomAttributeFormatException..ctor, X0, X1
	559 Move X0, 0xD64000
	560 Move X0, [X0+2488]
	561 Call 0x1C17D08
	562 Move X1, X0
	563 Move X0, X27
	564 Call 0x1C17DEC
	565 Call 0x1C17F20
	566 Call 0x1C17F20
	567 Call 0x1C17F20
	568 Call 0x1C17F20
	569 Call 0x1C17F20
	570 Call 0x1C17F20
	571 Call 0x1C17F20
	572 Call 0x1C17F20
	573 NotImplemented "Instruction CMP not yet implemented."
	574 Call 0x3EB2AD0
	575 Move X27, [X0]
	576 Call 0x3EB2AE0
	577 Move W28, W31
	578 Compare X21, 0
	579 JumpIfNotEqual {494}
	580 Move X8, 0xD2B000
	581 Move X8, [X8+1728]
	582 Move X0, [X8]
	583 Move W8, [X0+224]
	584 Compare W8, 0
	585 JumpIfNotEqual {587}
	586 Call 0x1C17DFC
	587 Move X0, X19
	588 Move X1, X31
	589 Move X2, X31
	590 Call Type.op_Equality, X0, X1
	591 Move TEMP, X0
	592 And TEMP, TEMP, 1
	593 Compare TEMP, 1
	594 JumpIfNotEqual {617}
	595 Move X10, 0xD64000
	596 Move X8, [X21]
	597 Call 0x3EB28A4
	598 Return X0
	599 NotImplemented "Instruction LDRH not yet implemented."
	600 Move X1, [X10]
	601 Compare X9, 0
	602 JumpIfEqual {609}
	603 Move X10, [X8+176]
	604 Add X10, X10, 8
	605 NotImplemented "Instruction LDUR not yet implemented."
	606 NotImplemented "Instruction CMP not yet implemented."
	607 Subtract X9, X9, 1
	608 Add X10, X10, 16
	609 Move X0, X21
	610 Move W2, W31
	611 Call 0x1C5D788
	612 Compare X23, 0
	613 JumpIfEqual {1113}
	614 Move X8, 0xD63000
	615 Move X8, [X8+2456]
	616 Move X0, X23
	617 Move X8, 0xD63000
	618 Move X8, [X8+2472]
	619 Move X0, [X8]
	620 Call 0x1C17F10
	621 Move X8, 0xD63000
	622 Move X8, [X8+2464]
	623 Move W1, W24
	624 Move X20, X0
	625 Move X2, [X8]
	626 Call List`1<Object>..ctor, X0, X1
	627 Move X10, 0xD63000
	628 Move X8, [X21]
	629 Move X10, [X10+2424]
	630 NotImplemented "Instruction LDRH not yet implemented."
	631 Move X1, [X10]
	632 Compare X9, 0
	633 JumpIfEqual {640}
	634 Move X10, [X8+176]
	635 Add X10, X10, 8
	636 NotImplemented "Instruction LDUR not yet implemented."
	637 NotImplemented "Instruction CMP not yet implemented."
	638 Subtract X9, X9, 1
	639 Add X10, X10, 16
	640 Move X0, X21
	641 Move W2, W31
	642 Call 0x1C5D788
	643 NotImplemented "Instruction LDRSW not yet implemented."
	644 Add X8, X8, X9
	645 Add X0, X8, 312
	646 Move X8, [X0]
	647 Move X2, [X0+8]
	648 Move X0, X21
	649 Move W1, W31
	650 NotImplemented "Instruction BLR not yet implemented."
	651 Compare X0, 0
	652 JumpIfEqual {1162}
	653 Move X8, 0xD2A000
	654 Move X8, [X8+1728]
	655 Move X0, [X8]
	656 Move W8, [X0+224]
	657 Compare W8, 0
	658 JumpIfNotEqual {660}
	659 Call 0x1C17DFC
	660 Move X0, X19
	661 Move X1, X31
	662 Move X2, X31
	663 Call Type.op_Inequality, X0, X1
	664 Move TEMP, X0
	665 And TEMP, TEMP, 1
	666 Compare TEMP, 1
	667 JumpIfNotEqual {682}
	668 Move X8, [X21]
	669 Move X1, [X20]
	670 NotImplemented "Instruction LDRH not yet implemented."
	671 Compare X9, 0
	672 JumpIfEqual {679}
	673 Move X10, [X8+176]
	674 Add X10, X10, 8
	675 NotImplemented "Instruction LDUR not yet implemented."
	676 NotImplemented "Instruction CMP not yet implemented."
	677 Subtract X9, X9, 1
	678 Add X10, X10, 16
	679 Move X0, X21
	680 Move W2, W31
	681 Call 0x1C5D788
	682 Move X8, 0xD5C000
	683 Move X8, [X8+3192]
	684 Move W1, 1
	685 Move X0, [X8]
	686 Call 0x1C17D6C
	687 Move X8, [X21]
	688 Move X1, [X20]
	689 Move X19, X0
	690 NotImplemented "Instruction LDRH not yet implemented."
	691 Compare X9, 0
	692 JumpIfEqual {961}
	693 Move X10, [X8+176]
	694 Add X10, X10, 8
	695 NotImplemented "Instruction LDUR not yet implemented."
	696 NotImplemented "Instruction CMP not yet implemented."
	697 Subtract X9, X9, 1
	698 Add X10, X10, 16
	699 NotImplemented "Instruction LDRSW not yet implemented."
	700 Add X8, X8, X9
	701 Add X0, X8, 312
	702 Move X8, [X0]
	703 Move X1, [X0+8]
	704 Move X0, X21
	705 NotImplemented "Instruction BLR not yet implemented."
	706 Move X19, X0
	707 Compare X0, 0
	708 JumpIfEqual {1174}
	709 Move X20, 0xD2A000
	710 Move X22, 0xD63000
	711 Move X20, [X20+3608]
	712 Move X22, [X22+2432]
	713 Move X8, [X19]
	714 Move X1, [X20]
	715 NotImplemented "Instruction LDRH not yet implemented."
	716 Compare X9, 0
	717 JumpIfEqual {724}
	718 Move X10, [X8+176]
	719 Add X10, X10, 8
	720 NotImplemented "Instruction LDUR not yet implemented."
	721 NotImplemented "Instruction CMP not yet implemented."
	722 Subtract X9, X9, 1
	723 Add X10, X10, 16
	724 Move X0, X19
	725 Move W2, W31
	726 Call 0x1C5D788
	727 NotImplemented "Instruction LDRSW not yet implemented."
	728 Add X8, X8, X9
	729 Add X0, X8, 312
	730 Move X8, [X0]
	731 Move X1, [X0+8]
	732 Move X0, X19
	733 NotImplemented "Instruction BLR not yet implemented."
	734 Move TEMP, X0
	735 And TEMP, TEMP, 1
	736 Compare TEMP, 1
	737 JumpIfNotEqual {779}
	738 Move X8, [X19]
	739 Move X1, [X22]
	740 NotImplemented "Instruction LDRH not yet implemented."
	741 Compare X9, 0
	742 JumpIfEqual {749}
	743 Move X10, [X8+176]
	744 Add X10, X10, 8
	745 NotImplemented "Instruction LDUR not yet implemented."
	746 NotImplemented "Instruction CMP not yet implemented."
	747 Subtract X9, X9, 1
	748 Add X10, X10, 16
	749 Move X0, X19
	750 Move W2, W31
	751 Call 0x1C5D788
	752 NotImplemented "Instruction LDRSW not yet implemented."
	753 Add X8, X8, X9
	754 Add X0, X8, 312
	755 Move X8, [X0]
	756 Move X1, [X0+8]
	757 Move X0, X19
	758 NotImplemented "Instruction BLR not yet implemented."
	759 Compare X0, 0
	760 JumpIfNotEqual {713}
	761 Move X0, 0xD63000
	762 Move X0, [X0+2328]
	763 Call 0x1C17D08
	764 Call 0x1C17F10
	765 Move X20, X0
	766 Move X0, 0xD63000
	767 Move X0, [X0+2480]
	768 Call 0x1C17D08
	769 Move X1, X0
	770 Move X0, X20
	771 Move X2, X31
	772 Call CustomAttributeFormatException..ctor, X0, X1
	773 Move X0, 0xD63000
	774 Move X0, [X0+2488]
	775 Call 0x1C17D08
	776 Move X1, X0
	777 Move X0, X20
	778 Call 0x1C17DEC
	779 Move X20, X31
	780 Move W22, 26
	781 Compare X19, 0
	782 JumpIfEqual {1024}
	783 Move X10, 0xD2A000
	784 Move X8, [X19]
	785 Move X10, [X10+3584]
	786 NotImplemented "Instruction LDRH not yet implemented."
	787 Move X1, [X10]
	788 Compare X9, 0
	789 JumpIfEqual {796}
	790 Move X10, [X8+176]
	791 Add X10, X10, 8
	792 NotImplemented "Instruction LDUR not yet implemented."
	793 NotImplemented "Instruction CMP not yet implemented."
	794 Subtract X9, X9, 1
	795 Add X10, X10, 16
	796 Move X0, X19
	797 Move W2, W31
	798 Call 0x1C5D788
	799 NotImplemented "Instruction LDRSW not yet implemented."
	800 Add X8, X8, X9
	801 Add X0, X8, 312
	802 Move X8, [X0]
	803 Move X1, [X0+8]
	804 Move X0, X21
	805 NotImplemented "Instruction BLR not yet implemented."
	806 Move X21, X0
	807 Compare X0, 0
	808 JumpIfEqual {1175}
	809 Move X23, 0xD2A000
	810 Move X24, 0xD63000
	811 Move X25, 0xD63000
	812 Move X23, [X23+3608]
	813 Move X24, [X24+2432]
	814 Move X25, [X25+2448]
	815 Move X8, [X21]
	816 Move X1, [X23]
	817 NotImplemented "Instruction LDRH not yet implemented."
	818 Compare X9, 0
	819 JumpIfEqual {826}
	820 Move X10, [X8+176]
	821 Add X10, X10, 8
	822 NotImplemented "Instruction LDUR not yet implemented."
	823 NotImplemented "Instruction CMP not yet implemented."
	824 Subtract X9, X9, 1
	825 Add X10, X10, 16
	826 Move X0, X21
	827 Move W2, W31
	828 Call 0x1C5D788
	829 NotImplemented "Instruction LDRSW not yet implemented."
	830 Add X8, X8, X9
	831 Add X0, X8, 312
	832 Move X8, [X0]
	833 Move X1, [X0+8]
	834 Move X0, X21
	835 NotImplemented "Instruction BLR not yet implemented."
	836 Move TEMP, X0
	837 And TEMP, TEMP, 1
	838 Compare TEMP, 1
	839 JumpIfNotEqual {901}
	840 Move X8, [X21]
	841 Move X1, [X24]
	842 NotImplemented "Instruction LDRH not yet implemented."
	843 Compare X9, 0
	844 JumpIfEqual {851}
	845 Move X10, [X8+176]
	846 Add X10, X10, 8
	847 NotImplemented "Instruction LDUR not yet implemented."
	848 NotImplemented "Instruction CMP not yet implemented."
	849 Subtract X9, X9, 1
	850 Add X10, X10, 16
	851 Move X0, X21
	852 Move W2, W31
	853 Call 0x1C5D788
	854 NotImplemented "Instruction LDRSW not yet implemented."
	855 Add X8, X8, X9
	856 Add X0, X8, 312
	857 Move X8, [X0]
	858 Move X1, [X0+8]
	859 Move X0, X21
	860 NotImplemented "Instruction BLR not yet implemented."
	861 Move X22, X0
	862 Compare X0, 0
	863 JumpIfEqual {1116}
	864 Move X0, X22
	865 Move X1, X31
	866 Call CustomAttributeData.get_AttributeType, X0
	867 Move X1, X0
	868 Compare X19, 0
	869 JumpIfEqual {1134}
	870 Move X8, [X19]
	871 Move X9, [X8+680]
	872 Move X2, [X8+688]
	873 Move X0, X19
	874 NotImplemented "Instruction BLR not yet implemented."
	875 Move TEMP, X0
	876 And TEMP, TEMP, 1
	877 Compare TEMP, 1
	878 JumpIfNotEqual {815}
	879 Compare X20, 0
	880 JumpIfEqual {1135}
	881 Move W10, [X20+28]
	882 Move X8, [X20+16]
	883 Move X9, [X25]
	884 Add W10, W10, 1
	885 Move [X20+28], W10
	886 Compare X8, 0
	887 JumpIfEqual {1136}
	888 NotImplemented "Instruction LDRSW not yet implemented."
	889 Move W11, [X8+24]
	890 NotImplemented "Instruction CMP not yet implemented."
	891 Add W9, W10, 1
	892 Add X8, X8, X10
	893 Move [X20+24], W9
	894 Move [X8+32], X22
	895 Move X8, [X9+32]
	896 Move X8, [X8+192]
	897 Move X2, [X8+112]
	898 Move X0, X20
	899 Move X1, X22
	900 Call List`1<Object>.AddWithResize, X0, X1
	901 Move X19, X31
	902 Compare X21, 0
	903 JumpIfEqual {1088}
	904 Move X10, 0xD2A000
	905 Move X8, [X21]
	906 Move X10, [X10+3584]
	907 NotImplemented "Instruction LDRH not yet implemented."
	908 Move X1, [X10]
	909 Compare X9, 0
	910 JumpIfEqual {917}
	911 Move X10, [X8+176]
	912 Add X10, X10, 8
	913 NotImplemented "Instruction LDUR not yet implemented."
	914 NotImplemented "Instruction CMP not yet implemented."
	915 Subtract X9, X9, 1
	916 Add X10, X10, 16
	917 Move X0, X21
	918 Move W2, W31
	919 Call 0x1C5D788
	920 NotImplemented "Instruction LDRSW not yet implemented."
	921 Add X8, X8, X9
	922 Add X0, X8, 312
	923 Move X8, [X0]
	924 Move X2, [X0+8]
	925 Move X0, X21
	926 Move W1, W31
	927 NotImplemented "Instruction BLR not yet implemented."
	928 Compare X0, 0
	929 JumpIfEqual {1113}
	930 Move X1, X31
	931 Call CustomAttributeData.get_AttributeType, X0
	932 Compare X19, 0
	933 JumpIfEqual {1113}
	934 Move X8, [X19]
	935 Move X1, X0
	936 Move X0, X19
	937 Move X9, [X8+680]
	938 Move X2, [X8+688]
	939 NotImplemented "Instruction BLR not yet implemented."
	940 Move TEMP, X0
	941 And TEMP, TEMP, 1
	942 Compare TEMP, 1
	943 JumpIfNotEqual {964}
	944 Move X8, 0xD5C000
	945 Move X8, [X8+3192]
	946 Move W1, 1
	947 Move X0, [X8]
	948 Call 0x1C17D6C
	949 Move X8, [X21]
	950 Move X1, [X20]
	951 Move X19, X0
	952 NotImplemented "Instruction LDRH not yet implemented."
	953 Compare X9, 0
	954 JumpIfEqual {961}
	955 Move X10, [X8+176]
	956 Add X10, X10, 8
	957 NotImplemented "Instruction LDUR not yet implemented."
	958 NotImplemented "Instruction CMP not yet implemented."
	959 Subtract X9, X9, 1
	960 Add X10, X10, 16
	961 Move X0, X21
	962 Move W2, W31
	963 Call 0x1C5D788
	964 Move X8, 0xD63000
	965 Move X8, [X8+2408]
	966 Move X19, [X8]
	967 Move X8, [X19+56]
	968 Compare X8, 0
	969 JumpIfNotEqual {973}
	970 Move X0, X19
	971 Call 0x1C5D6E0
	972 Move X8, [X19+56]
	973 Move X0, [X8+16]
	974 Move W8, [X0+309]
	975 Move TEMP, X8
	976 And TEMP, TEMP, 1
	977 Compare TEMP, 1
	978 JumpIfEqual {980}
	979 Call 0x1C5D684
	980 Move W8, [X0+224]
	981 Compare W8, 0
	982 JumpIfNotEqual {984}
	983 Call 0x1C17DFC
	984 Move X8, [X19+56]
	985 Move X0, [X8+16]
	986 Move W8, [X0+309]
	987 Move TEMP, X8
	988 And TEMP, TEMP, 1
	989 Compare TEMP, 1
	990 JumpIfEqual {992}
	991 Call 0x1C5D684
	992 Move X8, [X0+184]
	993 Move X19, [X8]
	994 NotImplemented "Instruction LDRSW not yet implemented."
	995 Add X8, X8, X9
	996 Add X0, X8, 312
	997 Move X8, [X0]
	998 Move X2, [X0+8]
	999 Move X0, X21
	1000 Move W1, W31
	1001 NotImplemented "Instruction BLR not yet implemented."
	1002 Compare X19, 0
	1003 JumpIfEqual {1113}
	1004 Move X20, X0
	1005 Compare X0, 0
	1006 JumpIfEqual {1013}
	1007 Move X8, [X19]
	1008 Move X0, X20
	1009 Move X1, [X8+64]
	1010 Call 0x1C17E00
	1011 Compare X0, 0
	1012 JumpIfEqual {1181}
	1013 Move W8, [X19+24]
	1014 Compare W8, 0
	1015 JumpIfEqual {1180}
	1016 Move [X19+32], X20
	1017 NotImplemented "Instruction LDRSW not yet implemented."
	1018 Add X8, X8, X9
	1019 Add X0, X8, 312
	1020 Move X8, [X0]
	1021 Move X1, [X0+8]
	1022 Move X0, X19
	1023 NotImplemented "Instruction BLR not yet implemented."
	1024 Compare X20, 0
	1025 JumpIfNotEqual {1176}
	1026 NotImplemented "Instruction CMP not yet implemented."
	1027 Compare W22, 0
	1028 JumpIfNotEqual {1098}
	1029 Move X8, [X21]
	1030 Move X1, [X23]
	1031 NotImplemented "Instruction LDRH not yet implemented."
	1032 Compare X9, 0
	1033 JumpIfEqual {1040}
	1034 Move X10, [X8+176]
	1035 Add X10, X10, 8
	1036 NotImplemented "Instruction LDUR not yet implemented."
	1037 NotImplemented "Instruction CMP not yet implemented."
	1038 Subtract X9, X9, 1
	1039 Add X10, X10, 16
	1040 Move X0, X21
	1041 Move W2, W31
	1042 Call 0x1C5D788
	1043 NotImplemented "Instruction LDRSW not yet implemented."
	1044 Add X8, X8, X9
	1045 Add X0, X8, 312
	1046 Move X8, [X0]
	1047 Move X1, [X0+8]
	1048 Move X0, X21
	1049 NotImplemented "Instruction BLR not yet implemented."
	1050 Move X8, 0xD5C000
	1051 Move X8, [X8+3192]
	1052 Move W1, W0
	1053 Move X8, [X8]
	1054 Move X0, X8
	1055 Call 0x1C17D6C
	1056 Move X8, [X21]
	1057 Move X1, [X23]
	1058 Move X19, X0
	1059 NotImplemented "Instruction LDRH not yet implemented."
	1060 Compare X9, 0
	1061 JumpIfEqual {1068}
	1062 Move X10, [X8+176]
	1063 Add X10, X10, 8
	1064 NotImplemented "Instruction LDUR not yet implemented."
	1065 NotImplemented "Instruction CMP not yet implemented."
	1066 Subtract X9, X9, 1
	1067 Add X10, X10, 16
	1068 Move W2, 5
	1069 Move X0, X21
	1070 Call 0x1C5D788
	1071 Move W9, [X10]
	1072 Add W9, W9, 5
	1073 Add X8, X8, W9
	1074 Add X0, X8, 312
	1075 Move X8, [X0]
	1076 Move X3, [X0+8]
	1077 Move X0, X21
	1078 Move X1, X19
	1079 Move W2, W31
	1080 NotImplemented "Instruction BLR not yet implemented."
	1081 NotImplemented "Instruction LDRSW not yet implemented."
	1082 Add X8, X8, X9
	1083 Add X0, X8, 312
	1084 Move X8, [X0]
	1085 Move X1, [X0+8]
	1086 Move X0, X21
	1087 NotImplemented "Instruction BLR not yet implemented."
	1088 Compare X19, 0
	1089 JumpIfNotEqual {1178}
	1090 Compare X20, 0
	1091 JumpIfEqual {1113}
	1092 Move X8, 0xD63000
	1093 Move X8, [X8+2456]
	1094 Move X0, X20
	1095 Move X1, [X8]
	1096 Call List`1<Object>.ToArray, X0
	1097 Move X19, X0
	1098 Move X0, X19
	1099 Move X20, [X31+96]
	1100 Move X19, [X31+104]
	1101 Move X22, [X31+80]
	1102 Move X21, [X31+88]
	1103 Move X24, [X31+64]
	1104 Move X23, [X31+72]
	1105 Move X26, [X31+48]
	1106 Move X25, [X31+56]
	1107 Move X28, [X31+32]
	1108 Move X27, [X31+40]
	1109 Move X29, [X31+16]
	1110 Move X30, [X31+24]
	1111 Add X31, X31, 112
	1112 Return X0
	1113 Call 0x1C17F20
	1114 Move X0, X27
	1115 Call 0x1C17F18
	1116 Move X0, 0xD63000
	1117 Move X0, [X0+2328]
	1118 Call 0x1C17D08
	1119 Call 0x1C17F10
	1120 Move X19, X0
	1121 Move X0, 0xD63000
	1122 Move X0, [X0+2480]
	1123 Call 0x1C17D08
	1124 Move X1, X0
	1125 Move X0, X19
	1126 Move X2, X31
	1127 Call CustomAttributeFormatException..ctor, X0, X1
	1128 Move X0, 0xD63000
	1129 Move X0, [X0+2488]
	1130 Call 0x1C17D08
	1131 Move X1, X0
	1132 Move X0, X19
	1133 Call 0x1C17DEC
	1134 Call 0x1C17F20
	1135 Call 0x1C17F20
	1136 Call 0x1C17F20
	1137 Move X0, 0xD2F000
	1138 Move X0, [X0+1320]
	1139 Call 0x1C17D08
	1140 Call 0x1C17F10
	1141 Move X19, X0
	1142 Move X0, 0xD35000
	1143 Move X0, [X0+2216]
	1144 Move X0, 0xD2F000
	1145 Move X0, [X0+1320]
	1146 Call 0x1C17D08
	1147 Call 0x1C17F10
	1148 Move X19, X0
	1149 Move X0, 0xD5C000
	1150 Move X0, [X0+3600]
	1151 Call 0x1C17D08
	1152 Move X1, X0
	1153 Move X0, X19
	1154 Move X2, X31
	1155 Call ArgumentNullException..ctor, X0, X1
	1156 Move X0, 0xD63000
	1157 Move X0, [X0+2488]
	1158 Call 0x1C17D08
	1159 Move X1, X0
	1160 Move X0, X19
	1161 Call 0x1C17DEC
	1162 Move X0, 0xD63000
	1163 Move X0, [X0+2328]
	1164 Call 0x1C17D08
	1165 Call 0x1C17F10
	1166 Move X19, X0
	1167 Move X0, 0xD63000
	1168 Move X0, [X0+2480]
	1169 Call 0x1C17D08
	1170 Move X1, X0
	1171 Move X0, X19
	1172 Move X2, X31
	1173 Call CustomAttributeFormatException..ctor, X0, X1
	1174 Call 0x1C17F20
	1175 Call 0x1C17F20
	1176 Move X0, X20
	1177 Call 0x1C17F18
	1178 Move X0, X19
	1179 Call 0x1C17F18
	1180 Call 0x1C17F28
	1181 Call 0x1C17F44
	1182 Move X1, X31
	1183 Call 0x1C17DEC
	1184 Move X22, X0
	1185 Move X27, X31
	1186 Move X22, X0
	1187 Compare X21, 0
	1188 JumpIfEqual {1212}
	1189 Move X8, [X21]
	1190 Move X10, 0xD2A000
	1191 NotImplemented "Instruction LDRH not yet implemented."
	1192 Move X10, [X10+3584]
	1193 Move X1, [X10]
	1194 Compare X9, 0
	1195 JumpIfEqual {1202}
	1196 Move X10, [X8+176]
	1197 Add X10, X10, 8
	1198 NotImplemented "Instruction LDUR not yet implemented."
	1199 NotImplemented "Instruction CMP not yet implemented."
	1200 Subtract X9, X9, 1
	1201 Add X10, X10, 16
	1202 Move X0, X21
	1203 Move W2, W31
	1204 Call 0x1C5D788
	1205 NotImplemented "Instruction LDRSW not yet implemented."
	1206 Add X8, X8, X9
	1207 Add X0, X8, 312
	1208 Move X8, [X0]
	1209 Move X1, [X0+8]
	1210 Move X0, X21
	1211 NotImplemented "Instruction BLR not yet implemented."
	1212 Compare X27, 0
	1213 JumpIfNotEqual {1216}
	1214 Move X0, X22
	1215 Call 0x1D2D690
	1216 Move X0, X27
	1217 Call 0x1C17F18
	1218 Move X22, X0
	1219 NotImplemented "Instruction CMP not yet implemented."
	1220 Move X0, X22
	1221 Call 0x3EB2AD0
	1222 Move X19, [X0]
	1223 Call 0x3EB2AE0
	1224 Move X19, X31
	1225 Move X22, X0
	1226 Compare X21, 0
	1227 JumpIfEqual {1251}
	1228 Move X10, 0xD2A000
	1229 Move X8, [X21]
	1230 Move X10, [X10+3584]
	1231 NotImplemented "Instruction LDRH not yet implemented."
	1232 Move X1, [X10]
	1233 Compare X9, 0
	1234 JumpIfEqual {1241}
	1235 Move X10, [X8+176]
	1236 Add X10, X10, 8
	1237 NotImplemented "Instruction LDUR not yet implemented."
	1238 NotImplemented "Instruction CMP not yet implemented."
	1239 Subtract X9, X9, 1
	1240 Add X10, X10, 16
	1241 Move X0, X21
	1242 Move W2, W31
	1243 Call 0x1C5D788
	1244 NotImplemented "Instruction LDRSW not yet implemented."
	1245 Add X8, X8, X9
	1246 Add X0, X8, 312
	1247 Move X8, [X0]
	1248 Move X1, [X0+8]
	1249 Move X0, X21
	1250 NotImplemented "Instruction BLR not yet implemented."
	1251 Compare X19, 0
	1252 JumpIfEqual {1214}
	1253 Move X0, X19
	1254 Call 0x1C17F18
	1255 Move X22, X0
	1256 NotImplemented "Instruction CMP not yet implemented."
	1257 Move X0, X22
	1258 Call 0x3EB2AD0
	1259 Move X20, [X0]
	1260 Call 0x3EB2AE0
	1261 Move W22, W31
	1262 Compare X19, 0
	1263 JumpIfNotEqual {783}
	1264 Move X20, X31
	1265 Move X22, X0
	1266 Compare X19, 0
	1267 JumpIfEqual {1291}
	1268 Move X10, 0xD2A000
	1269 Move X8, [X19]
	1270 Move X10, [X10+3584]
	1271 NotImplemented "Instruction LDRH not yet implemented."
	1272 Move X1, [X10]
	1273 Compare X9, 0
	1274 JumpIfEqual {1281}
	1275 Move X10, [X8+176]
	1276 Add X10, X10, 8
	1277 NotImplemented "Instruction LDUR not yet implemented."
	1278 NotImplemented "Instruction CMP not yet implemented."
	1279 Subtract X9, X9, 1
	1280 Add X10, X10, 16
	1281 Move X0, X19
	1282 Move W2, W31
	1283 Call 0x1C5D788
	1284 NotImplemented "Instruction LDRSW not yet implemented."
	1285 Add X8, X8, X9
	1286 Add X0, X8, 312
	1287 Move X8, [X0]
	1288 Move X1, [X0+8]
	1289 Move X0, X19
	1290 NotImplemented "Instruction BLR not yet implemented."
	1291 Compare X20, 0
	1292 JumpIfEqual {1214}
	1293 Move X0, X20
	1294 Call 0x1C17F18
	1295 Call 0x1991590

Method: System.Collections.Generic.IList`1<System.Reflection.CustomAttributeData> GetCustomAttributesDataBase(System.Reflection.ICustomAttributeProvider obj, System.Type attributeType, System.Boolean inheritedOnly)

Disassembly:
	0x033C955C CBZ X9, 0x33C9580
	0x033C9560 LDR X10, [X8 + 0xB0]
	0x033C9564 ADD X10, X10, 0x8
	0x033C9568 LDUR X11, [X10 - 0x8]
	0x033C956C CMP X11, X1
	0x033C9570 B.EQ 0x33C95EC
	0x033C9574 SUBS X9, X9, 0x1
	0x033C9578 ADD X10, X10, 0x10
	0x033C957C B.NE 0x33C9568
	0x033C9580 MOV X0, X21
	0x033C9584 MOV W2, W31
	0x033C9588 BL 0x1C5C788
	0x033C958C B 0x33C95F8
	0x033C9590 ADRP X8, 0xD63000
	0x033C9594 LDR X8, [X8 + 0x968]
	0x033C9598 LDR X19, [X8]
	0x033C959C LDR X8, [X19 + 0x38]
	0x033C95A0 CBNZ X8, 0x33C95B0
	0x033C95A4 MOV X0, X19
	0x033C95A8 BL 0x1C5C6E0
	0x033C95AC LDR X8, [X19 + 0x38]
	0x033C95B0 LDR X0, [X8 + 0x10]
	0x033C95B4 LDRB W8, [X0 + 0x135]
	0x033C95B8 TBNZ X8, 0x0, 0x33C95C0
	0x033C95BC BL 0x1C5C684
	0x033C95C0 LDR W8, [X0 + 0xE0]
	0x033C95C4 CBNZ W8, 0x33C95CC
	0x033C95C8 BL 0x1C16DFC
	0x033C95CC LDR X8, [X19 + 0x38]
	0x033C95D0 LDR X0, [X8 + 0x10]
	0x033C95D4 LDRB W8, [X0 + 0x135]
	0x033C95D8 TBNZ X8, 0x0, 0x33C95E0
	0x033C95DC BL 0x1C5C684
	0x033C95E0 LDR X8, [X0 + 0xB8]
	0x033C95E4 LDR X19, [X8]
	0x033C95E8 B 0x33C9774
	0x033C95EC LDRSW X9, [X10]
	0x033C95F0 ADD X8, X8, X9, 0x4, LSL
	0x033C95F4 ADD X0, X8, 0x138
	0x033C95F8 LDP X8, X2, [X0]
	0x033C95FC MOV X0, X21
	0x033C9600 MOV W1, W31
	0x033C9604 BLR X8
	0x033C9608 CBZ X19, 0x33C9798
	0x033C960C MOV X20, X0
	0x033C9610 CBZ X0, 0x33C9628
	0x033C9614 LDR X8, [X19]
	0x033C9618 MOV X0, X20
	0x033C961C LDR X1, [X8 + 0x40]
	0x033C9620 BL 0x1C16E00
	0x033C9624 CBZ X0, 0x33C98B0
	0x033C9628 LDR W8, [X19 + 0x18]
	0x033C962C CBZ W8, 0x33C98AC
	0x033C9630 STR X20, [X19 + 0x20]
	0x033C9634 B 0x33C9774
	0x033C9638 LDRSW X9, [X10]
	0x033C963C ADD X8, X8, X9, 0x4, LSL
	0x033C9640 ADD X0, X8, 0x138
	0x033C9644 LDP X8, X1, [X0]
	0x033C9648 MOV X0, X19
	0x033C964C BLR X8
	0x033C9650 CBNZ X20, 0x33C989C
	0x033C9654 CMP W22, 0x1A
	0x033C9658 B.EQ 0x33C9660
	0x033C965C CBNZ W22, 0x33C9774
	0x033C9660 LDR X8, [X21]
	0x033C9664 LDR X1, [X23]
	0x033C9668 LDRH W9, [X8 + 0x12E]
	0x033C966C CBZ X9, 0x33C9690
	0x033C9670 LDR X10, [X8 + 0xB0]
	0x033C9674 ADD X10, X10, 0x8
	0x033C9678 LDUR X11, [X10 - 0x8]
	0x033C967C CMP X11, X1
	0x033C9680 B.EQ 0x33C96A0
	0x033C9684 SUBS X9, X9, 0x1
	0x033C9688 ADD X10, X10, 0x10
	0x033C968C B.NE 0x33C9678
	0x033C9690 MOV X0, X21
	0x033C9694 MOV W2, W31
	0x033C9698 BL 0x1C5C788
	0x033C969C B 0x33C96AC
	0x033C96A0 LDRSW X9, [X10]
	0x033C96A4 ADD X8, X8, X9, 0x4, LSL
	0x033C96A8 ADD X0, X8, 0x138
	0x033C96AC LDP X8, X1, [X0]
	0x033C96B0 MOV X0, X21
	0x033C96B4 BLR X8
	0x033C96B8 ADRP X8, 0xD5C000
	0x033C96BC LDR X8, [X8 + 0xC78]
	0x033C96C0 MOV W1, W0
	0x033C96C4 LDR X8, [X8]
	0x033C96C8 MOV X0, X8
	0x033C96CC BL 0x1C16D6C
	0x033C96D0 LDR X8, [X21]
	0x033C96D4 LDR X1, [X23]
	0x033C96D8 MOV X19, X0
	0x033C96DC LDRH W9, [X8 + 0x12E]
	0x033C96E0 CBZ X9, 0x33C9704
	0x033C96E4 LDR X10, [X8 + 0xB0]
	0x033C96E8 ADD X10, X10, 0x8
	0x033C96EC LDUR X11, [X10 - 0x8]
	0x033C96F0 CMP X11, X1
	0x033C96F4 B.EQ 0x33C9714
	0x033C96F8 SUBS X9, X9, 0x1
	0x033C96FC ADD X10, X10, 0x10
	0x033C9700 B.NE 0x33C96EC
	0x033C9704 MOVZ W2, 0x5
	0x033C9708 MOV X0, X21
	0x033C970C BL 0x1C5C788
	0x033C9710 B 0x33C9724
	0x033C9714 LDR W9, [X10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1015000
	009 Move X23, 0xD5E000
	010 Move W8, [X22+644]
	011 Move X23, [X23+992]
	012 Move W21, W2
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0xD64000
	020 Move X0, [X0+2400]
	021 Call 0x1C17CF4
	022 Move X0, 0xD64000
	023 Move X0, [X0+2408]
	024 Call 0x1C17CF4
	025 Move X0, 0xD5D000
	026 Move X0, [X0+3192]
	027 Call 0x1C17CF4
	028 Move X0, 0xD5E000
	029 Move X0, [X0+992]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+644], W8
	033 Move X0, [X23]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X20
	039 Call MonoCustomAttrs.IsUserCattrProvider, X0
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {74}
	044 Move X8, 0xD64000
	045 Move X8, [X8+2408]
	046 Move X22, [X8]
	047 Move X8, [X22+56]
	048 Compare X8, 0
	049 JumpIfNotEqual {53}
	050 Move X0, X22
	051 Call 0x1C5D6E0
	052 Move X8, [X22+56]
	053 Move X0, [X8+16]
	054 Move W8, [X0+309]
	055 Move TEMP, X8
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {60}
	059 Call 0x1C5D684
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X8, [X22+56]
	065 Move X0, [X8+16]
	066 Move W8, [X0+309]
	067 Move TEMP, X8
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {72}
	071 Call 0x1C5D684
	072 Move X8, [X0+184]
	073 Move X22, [X8]
	074 Move X0, [X23]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X0, X20
	080 Call 0x1C3AE7C
	081 Move X22, X0
	082 Move X24, 0xD64000
	083 Move X24, [X24+2400]
	084 Move TEMP, X21
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfEqual {125}
	088 Move X0, [X23]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Move X0, X20
	094 Move X1, X19
	095 Call MonoCustomAttrs.GetPseudoCustomAttributesData, X0, X1
	096 Compare X0, 0
	097 JumpIfEqual {125}
	098 Compare X22, 0
	099 JumpIfEqual {138}
	100 Move X8, [X22+24]
	101 Move X19, X0
	102 Compare X8, 0
	103 JumpIfEqual {136}
	104 Move X9, 0xD5D000
	105 Move X9, [X9+3192]
	106 Move W10, [X19+24]
	107 Move X0, [X9]
	108 Add W1, W10, W8
	109 Call 0x1C17D6C
	110 Move W2, [X22+24]
	111 Move X20, X0
	112 Move X0, X22
	113 Move X1, X20
	114 Move X3, X31
	115 Call Array.Copy, X0, X1, X2
	116 Move W3, [X22+24]
	117 Move W4, [X19+24]
	118 Move X0, X19
	119 Move W1, W31
	120 Move X2, X20
	121 Move X5, X31
	122 Call Array.Copy, X0, X1, X2, X3, X4
	123 Move X1, [X24]
	124 Move X0, X20
	125 Move X1, [X24]
	126 Move X0, X22
	127 Move X20, [X31+48]
	128 Move X19, [X31+56]
	129 Move X22, [X31+32]
	130 Move X21, [X31+40]
	131 Move X24, [X31+16]
	132 Move X23, [X31+24]
	133 Move X30, [X31+64]
	134 Call Array.AsReadOnly, X0
	135 Return X0
	136 Move X1, [X24]
	137 Move X0, X19
	138 Call 0x1C17F20

Method: System.Reflection.CustomAttributeData[] GetPseudoCustomAttributesData(System.Reflection.ICustomAttributeProvider obj, System.Type attributeType)

Disassembly:
	0x033CAAB4 RET
	0x033CAAB8 MOV X0, X19
	0x033CAABC MOV X1, X20
	0x033CAAC0 LDP X20, X19, [X31 + 0x20]
	0x033CAAC4 LDP X22, X21, [X31 + 0x10]
	0x033CAAC8 LDR X30, [X31], #0x30
	0x033CAACC B 0x33C5758
	0x033CAAD0 BL 0x1C16F28
	0x033CAAD4 STR X30, [X31 - 0x30]!
	0x033CAAD8 STP X22, X21, [X31 + 0x10]
	0x033CAADC STP X20, X19, [X31 + 0x20]
	0x033CAAE0 ADRP X21, 0x1013000
	0x033CAAE4 LDRB W8, [X21 + 0x28E]
	0x033CAAE8 MOV X19, X1
	0x033CAAEC MOV X20, X0
	0x033CAAF0 TBNZ X8, 0x0, 0x33CAB08
	0x033CAAF4 ADRP X0, 0xD62000
	0x033CAAF8 LDR X0, [X0 + 0x9F0]
	0x033CAAFC BL 0x1C16CF4
	0x033CAB00 MOVZ W8, 0x1
	0x033CAB04 STRB W8, [X21 + 0x28E]
	0x033CAB08 MOV X0, X20
	0x033CAB0C MOV X1, X19
	0x033CAB10 BL 0x33C5A28
	0x033CAB14 TBZ X0, 0x0, 0x33CAB54
	0x033CAB18 CBZ X19, 0x33CAB54
	0x033CAB1C ADRP X8, 0xD62000
	0x033CAB20 LDR X8, [X8 + 0x9F0]
	0x033CAB24 LDR X9, [X19]
	0x033CAB28 LDR X8, [X8]
	0x033CAB2C LDRB W11, [X9 + 0x130]
	0x033CAB30 LDRB W10, [X8 + 0x130]
	0x033CAB34 CMP W11, W10
	0x033CAB38 B.CC 0x33CAB54
	0x033CAB3C LDR X9, [X9 + 0xC8]
	0x033CAB40 ADD X9, X9, X10, 0x3, LSL
	0x033CAB44 LDUR X9, [X9 - 0x8]
	0x033CAB48 CMP X9, X8
	0x033CAB4C CSEL X9, X19, X31, EQ
	0x033CAB50 B.EQ 0x33CAB6C
	0x033CAB54 MOV W8, W31
	0x033CAB58 LDP X20, X19, [X31 + 0x20]
	0x033CAB5C LDP X22, X21, [X31 + 0x10]
	0x033CAB60 AND W0, W8, 0x1
	0x033CAB64 LDR X30, [X31], #0x30
	0x033CAB68 RET
	0x033CAB6C LDR X8, [X20 + 0x78]
	0x033CAB70 CBZ X8, 0x33CAC0C
	0x033CAB74 CBZ X9, 0x33CAC20
	0x033CAB78 LDR X10, [X19 + 0x78]
	0x033CAB7C CBZ X10, 0x33CAB54
	0x033CAB80 LDR X9, [X8 + 0x18]
	0x033CAB84 LDR W10, [X10 + 0x18]
	0x033CAB88 CMP W9, W10
	0x033CAB8C B.NE 0x33CAB54
	0x033CAB90 CMP W9, 0x0
	0x033CAB94 CSET W21, GT
	0x033CAB98 CMP W9, 0x1
	0x033CAB9C B.LT 0x33CAC04
	0x033CABA0 MOV W10, W31
	0x033CABA4 CMP W10, W9
	0x033CABA8 B.CS 0x33CAC2C
	0x033CABAC LDR X9, [X19 + 0x78]
	0x033CABB0 CBZ X9, 0x33CAC20
	0x033CABB4 LDR W11, [X9 + 0x18]
	0x033CABB8 SXTW X22, W10
	0x033CABBC CMP W22, W11
	0x033CABC0 B.CS 0x33CAC2C
	0x033CABC4 ADD X8, X8, X22, 0x3, LSL
	0x033CABC8 LDR X0, [X8 + 0x20]
	0x033CABCC CBZ X0, 0x33CAC20
	0x033CABD0 LDR X8, [X0]
	0x033CABD4 ADD X9, X9, X22, 0x3, LSL
	0x033CABD8 LDR X1, [X9 + 0x20]
	0x033CABDC LDP X9, X2, [X8 + 0x138]
	0x033CABE0 BLR X9
	0x033CABE4 TBZ X0, 0x0, 0x33CAC04
	0x033CABE8 LDR X8, [X20 + 0x78]
	0x033CABEC CBZ X8, 0x33CAC20
	0x033CABF0 LDR W9, [X8 + 0x18]
	0x033CABF4 ADD W10, W22, 0x1
	0x033CABF8 CMP W10, W9
	0x033CABFC CSET W21, LT
	0x033CAC00 B.LT 0x33CABA4
	0x033CAC04 EOR W8, W21, 0x1
	0x033CAC08 B 0x33CAB58
	0x033CAC0C CBZ X9, 0x33CAC20
	0x033CAC10 LDR X8, [X9 + 0x78]
	0x033CAC14 CBZ X8, 0x33CAC24
	0x033CAC18 LDR X8, [X19 + 0x78]
	0x033CAC1C CBNZ X8, 0x33CAB54
	0x033CAC20 BL 0x1C16F20
	0x033CAC24 MOVZ W8, 0x1
	0x033CAC28 B 0x33CAB58
	0x033CAC2C BL 0x1C16F28
	0x033CAC30 B 0x33C5BDC
	0x033CAC34 STR X30, [X31 - 0x10]!
	0x033CAC38 LDR X8, [X0 + 0x78]
	0x033CAC3C CBZ X8, 0x33CAC6C
	0x033CAC40 LDR X9, [X8 + 0x18]
	0x033CAC44 CBZ W9, 0x33CAC74
	0x033CAC48 MOV X10, INVALID
	0x033CAC4C ADD X9, X10, X9, 0x20, LSL
	0x033CAC50 ADD X8, X8, X9, 0x1D, ASR
	0x033CAC54 LDR X0, [X8 + 0x20]
	0x033CAC58 CBZ X0, 0x33CAC78
	0x033CAC5C LDR X8, [X0]
	0x033CAC60 LDP X2, X1, [X8 + 0x1B8]
	0x033CAC64 LDR X30, [X31], #0x10
	0x033CAC68 BR X2
	0x033CAC6C LDR X30, [X31], #0x10
	0x033CAC70 B 0x33C5C54
	0x033CAC74 BL 0x1C16F28
	0x033CAC78 BL 0x1C16F20
	0x033CAC7C STP X30, X21, [X31 - 0x20]!
	0x033CAC80 STP X20, X19, [X31 + 0x10]
	0x033CAC84 ADRP X20, 0x1013000
	0x033CAC88 LDRB W8, [X20 + 0x28F]
	0x033CAC8C MOV X19, X0
	0x033CAC90 TBNZ X8, 0x0, 0x33CACA8
	0x033CAC94 ADRP X0, 0xD62000
	0x033CAC98 LDR X0, [X0 + 0x858]
	0x033CAC9C BL 0x1C16CF4
	0x033CACA0 MOVZ W8, 0x1
	0x033CACA4 STRB W8, [X20 + 0x28F]
	0x033CACA8 ADRP X20, 0xD62000
	0x033CACAC LDR X0, [X19 + 0x78]
	0x033CACB0 LDR X20, [X20 + 0x858]
	0x033CACB4 CBZ X0, 0x33CACE8
	0x033CACB8 MOV X1, X31
	0x033CACBC BL 0x33A01F0
	0x033CACC0 CBZ X0, 0x33CAD20
	0x033CACC4 LDR X21, [X20]
	0x033CACC8 MOV X19, X0
	0x033CACCC MOV X1, X21
	0x033CACD0 BL 0x1C16E00
	0x033CACD4 MOV X20, X0
	0x033CACD8 CBNZ X0, 0x33CAD24
	0x033CACDC MOV X0, X19
	0x033CACE0 MOV X1, X21
	0x033CACE4 BL 0x1C171E0
	0x033CACE8 LDR X0, [X20]
	0x033CACEC MOVZ W1, 0x1
	0x033CACF0 BL 0x1C16D6C
	0x033CACF4 CBZ X0, 0x33CAD34
	0x033CACF8 LDR X8, [X0]
	0x033CACFC MOV X20, X0
	0x033CAD00 MOV X0, X19
	0x033CAD04 LDR X1, [X8 + 0x40]
	0x033CAD08 BL 0x1C16E00
	0x033CAD0C CBZ X0, 0x33CAD38
	0x033CAD10 LDR W8, [X20 + 0x18]
	0x033CAD14 CBZ W8, 0x33CAD44
	0x033CAD18 STR X19, [X20 + 0x20]
	0x033CAD1C B 0x33CAD24
	0x033CAD20 MOV X20, X31
	0x033CAD24 MOV X0, X20
	0x033CAD28 LDP X20, X19, [X31 + 0x10]
	0x033CAD2C LDP X30, X21, [X31], #0x20
	0x033CAD30 RET
	0x033CAD34 BL 0x1C16F20
	0x033CAD38 BL 0x1C16F44
	0x033CAD3C MOV X1, X31
	0x033CAD40 BL 0x1C16DEC
	0x033CAD44 BL 0x1C16F28
	0x033CAD48 STR X30, [X31 - 0x30]!
	0x033CAD4C STP X22, X21, [X31 + 0x10]
	0x033CAD50 STP X20, X19, [X31 + 0x20]
	0x033CAD54 ADRP X19, 0x1013000
	0x033CAD58 LDRB W8, [X19 + 0x290]
	0x033CAD5C MOV X20, X1
	0x033CAD60 MOV X21, X0
	0x033CAD64 TBNZ X8, 0x0, 0x33CAD88
	0x033CAD68 ADRP X0, 0xD62000
	0x033CAD6C LDR X0, [X0 + 0x858]
	0x033CAD70 BL 0x1C16CF4
	0x033CAD74 ADRP X0, 0xD62000
	0x033CAD78 LDR X0, [X0 + 0x9F0]
	0x033CAD7C BL 0x1C16CF4
	0x033CAD80 MOVZ W8, 0x1
	0x033CAD84 STRB W8, [X19 + 0x290]
	0x033CAD88 CBZ X20, 0x33CAE44
	0x033CAD8C ADRP X9, 0xD62000
	0x033CAD90 LDR X9, [X9 + 0x9F0]
	0x033CAD94 LDR X8, [X20]
	0x033CAD98 LDR X1, [X9]
	0x033CAD9C LDRB W10, [X8 + 0x130]
	0x033CADA0 LDRB W9, [X1 + 0x130]
	0x033CADA4 CMP W10, W9
	0x033CADA8 B.CC 0x33CAF98

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1014000
	006 Move W8, [X21+645]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {36}
	013 Move X0, 0xD63000
	014 Move X0, [X0+2408]
	015 Call 0x1C17CF4
	016 Move X0, 0xD5C000
	017 Move X0, [X0+3192]
	018 Call 0x1C17CF4
	019 Move X0, 0xD5D000
	020 Move X0, [X0+992]
	021 Call 0x1C17CF4
	022 Move X0, 0xD5B000
	023 Move X0, [X0+2992]
	024 Call 0x1C17CF4
	025 Move X0, 0xD5B000
	026 Move X0, [X0+2464]
	027 Call 0x1C17CF4
	028 Move X0, 0xD5D000
	029 Move X0, [X0+1272]
	030 Call 0x1C17CF4
	031 Move X0, 0xD2A000
	032 Move X0, [X0+1728]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+645], W8
	036 Move X21, 0xD2A000
	037 Move X21, [X21+1728]
	038 Compare X20, 0
	039 JumpIfEqual {96}
	040 Move X9, 0xD5B000
	041 Move X9, [X9+2464]
	042 Move X8, [X20]
	043 Move X10, [X9]
	044 Move W9, [X8+304]
	045 Move W11, [X10+304]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X12, [X8+200]
	048 Add X11, X12, X11
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X10, 0xD5B000
	052 Move X10, [X10+2992]
	053 Move X10, [X10]
	054 Move W11, [X10+304]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X12, [X8+200]
	057 Add X11, X12, X11
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X10, 0xD5D000
	061 Move X10, [X10+1272]
	062 Move X10, [X10]
	063 Move W11, [X10+304]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X12, [X8+200]
	066 Add X11, X12, X11
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X10, [X21]
	070 Move W11, [X10+304]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X8, [X8+200]
	073 Add X8, X8, X11
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X20, X31
	077 Move X0, X20
	078 Move X1, X31
	079 Call RuntimeMethodInfo.GetPseudoCustomAttributesData, X0
	080 Move X0, X20
	081 Move X1, X31
	082 Call FieldInfo.GetPseudoCustomAttributesData, X0
	083 Move X0, X20
	084 Move X1, X31
	085 Call RuntimeParameterInfo.GetPseudoCustomAttributesData, X0
	086 Move X8, 0xD5D000
	087 Move X8, [X8+992]
	088 Move X0, [X8]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Move X0, X20
	094 Call MonoCustomAttrs.GetPseudoCustomAttributesData, X0
	095 Move X20, X0
	096 Move X0, [X21]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move X0, X19
	102 Move X1, X31
	103 Move X2, X31
	104 Call Type.op_Inequality, X0, X1
	105 Compare X20, 0
	106 JumpIfEqual {166}
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {166}
	111 Move W8, [X20+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X21, X31
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Add X8, X20, X21
	116 Move X0, [X8+32]
	117 Compare X0, 0
	118 JumpIfEqual {199}
	119 Move X1, X31
	120 Call CustomAttributeData.get_AttributeType, X0
	121 Compare X19, 0
	122 JumpIfEqual {199}
	123 Move X8, [X19]
	124 Move X1, X0
	125 Move X0, X19
	126 Move X9, [X8+680]
	127 Move X2, [X8+688]
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {172}
	133 Move W8, [X20+24]
	134 Add X21, X21, 1
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X8, 0xD63000
	137 Move X8, [X8+2408]
	138 Move X19, [X8]
	139 Move X8, [X19+56]
	140 Compare X8, 0
	141 JumpIfNotEqual {145}
	142 Move X0, X19
	143 Call 0x1C5D6E0
	144 Move X8, [X19+56]
	145 Move X0, [X8+16]
	146 Move W8, [X0+309]
	147 Move TEMP, X8
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfEqual {152}
	151 Call 0x1C5D684
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {156}
	155 Call 0x1C17DFC
	156 Move X8, [X19+56]
	157 Move X0, [X8+16]
	158 Move W8, [X0+309]
	159 Move TEMP, X8
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfEqual {164}
	163 Call 0x1C5D684
	164 Move X8, [X0+184]
	165 Move X20, [X8]
	166 Move X0, X20
	167 Move X20, [X31+16]
	168 Move X19, [X31+24]
	169 Move X30, [X31+32]
	170 Move X21, [X31+40]
	171 Return X0
	172 Move W8, [X20+24]
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X8, 0xD5C000
	175 Move X8, [X8+3192]
	176 Move W1, 1
	177 Move X0, [X8]
	178 Call 0x1C17D6C
	179 Move W8, [X20+24]
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X19, X0
	182 Compare X0, 0
	183 JumpIfEqual {199}
	184 Add X8, X20, X21
	185 Move X20, [X8+32]
	186 Compare X20, 0
	187 JumpIfEqual {194}
	188 Move X8, [X19]
	189 Move X0, X20
	190 Move X1, [X8+64]
	191 Call 0x1C17E00
	192 Compare X0, 0
	193 JumpIfEqual {201}
	194 Move W8, [X19+24]
	195 Compare W8, 0
	196 JumpIfEqual {200}
	197 Move [X19+32], X20
	198 Move X20, X19
	199 Call 0x1C17F20
	200 Call 0x1C17F28
	201 Call 0x1C17F44
	202 Move X1, X31
	203 Call 0x1C17DEC

Method: System.Reflection.CustomAttributeData[] GetPseudoCustomAttributesData(System.Type type)

Disassembly:
	0x033CADAC LDR X8, [X8 + 0xC8]
	0x033CADB0 ADD X8, X8, X9, 0x3, LSL
	0x033CADB4 LDUR X8, [X8 - 0x8]
	0x033CADB8 CMP X8, X1
	0x033CADBC B.NE 0x33CAF98
	0x033CADC0 ADRP X19, 0xD62000
	0x033CADC4 LDR X19, [X19 + 0x858]
	0x033CADC8 MOV X0, X21
	0x033CADCC BL 0x1C877F8
	0x033CADD0 LDR X10, [X21 + 0x78]
	0x033CADD4 LDR X9, [X20 + 0x78]
	0x033CADD8 LDR X8, [X19]
	0x033CADDC MOV X19, X0
	0x033CADE0 CBZ X10, 0x33CAE4C
	0x033CADE4 LDR W10, [X10 + 0x18]
	0x033CADE8 CBZ X9, 0x33CAEB4
	0x033CADEC LDR W9, [X9 + 0x18]
	0x033CADF0 MOV X0, X8
	0x033CADF4 ADD W1, W9, W10
	0x033CADF8 BL 0x1C16D6C
	0x033CADFC CBZ X19, 0x33CAF94
	0x033CAE00 STR X0, [X19 + 0x78]
	0x033CAE04 MOV X2, X0
	0x033CAE08 LDR X0, [X21 + 0x78]
	0x033CAE0C CBZ X0, 0x33CAF94
	0x033CAE10 LDR W4, [X0 + 0x18]
	0x033CAE14 MOV W1, W31
	0x033CAE18 MOV W3, W31
	0x033CAE1C MOV X5, X31
	0x033CAE20 BL 0x339FCE8
	0x033CAE24 LDR X8, [X21 + 0x78]
	0x033CAE28 CBZ X8, 0x33CAF94
	0x033CAE2C LDR X0, [X20 + 0x78]
	0x033CAE30 CBZ X0, 0x33CAF94
	0x033CAE34 LDR X2, [X19 + 0x78]
	0x033CAE38 LDR W3, [X8 + 0x18]
	0x033CAE3C LDR W4, [X0 + 0x18]
	0x033CAE40 B 0x33CAEA4
	0x033CAE44 MOV X19, X21
	0x033CAE48 B 0x33CAF80
	0x033CAE4C CBZ X9, 0x33CAF20
	0x033CAE50 LDR W9, [X9 + 0x18]
	0x033CAE54 MOV X0, X8
	0x033CAE58 ADD W1, W9, 0x1
	0x033CAE5C BL 0x1C16D6C
	0x033CAE60 CBZ X19, 0x33CAF94
	0x033CAE64 MOV X22, X0
	0x033CAE68 STR X0, [X19 + 0x78]
	0x033CAE6C CBZ X0, 0x33CAF94
	0x033CAE70 LDR X8, [X22]
	0x033CAE74 MOV X0, X21
	0x033CAE78 LDR X1, [X8 + 0x40]
	0x033CAE7C BL 0x1C16E00
	0x033CAE80 CBZ X0, 0x33CAFA0
	0x033CAE84 LDR W8, [X22 + 0x18]
	0x033CAE88 CBZ W8, 0x33CAFAC
	0x033CAE8C STR X21, [X22 + 0x20]
	0x033CAE90 LDR X0, [X20 + 0x78]
	0x033CAE94 CBZ X0, 0x33CAF94
	0x033CAE98 LDR X2, [X19 + 0x78]
	0x033CAE9C LDR W4, [X0 + 0x18]
	0x033CAEA0 MOVZ W3, 0x1
	0x033CAEA4 MOV W1, W31
	0x033CAEA8 MOV X5, X31
	0x033CAEAC BL 0x339FCE8
	0x033CAEB0 B 0x33CAF80
	0x033CAEB4 ADD W1, W10, 0x1
	0x033CAEB8 MOV X0, X8
	0x033CAEBC BL 0x1C16D6C
	0x033CAEC0 CBZ X19, 0x33CAF94
	0x033CAEC4 STR X0, [X19 + 0x78]
	0x033CAEC8 MOV X2, X0
	0x033CAECC LDR X0, [X21 + 0x78]
	0x033CAED0 CBZ X0, 0x33CAF94
	0x033CAED4 LDR W4, [X0 + 0x18]
	0x033CAED8 MOV W1, W31
	0x033CAEDC MOV W3, W31
	0x033CAEE0 MOV X5, X31
	0x033CAEE4 BL 0x339FCE8
	0x033CAEE8 LDR X21, [X19 + 0x78]
	0x033CAEEC CBZ X21, 0x33CAF94
	0x033CAEF0 LDR X8, [X21]
	0x033CAEF4 MOV X0, X20
	0x033CAEF8 LDR X1, [X8 + 0x40]
	0x033CAEFC BL 0x1C16E00
	0x033CAF00 CBZ X0, 0x33CAFA0
	0x033CAF04 LDR X8, [X21 + 0x18]
	0x033CAF08 CBZ W8, 0x33CAFAC
	0x033CAF0C MOV X9, INVALID
	0x033CAF10 ADD X8, X9, X8, 0x20, LSL
	0x033CAF14 ADD X8, X21, X8, 0x1D, ASR
	0x033CAF18 STR X20, [X8 + 0x20]
	0x033CAF1C B 0x33CAF80
	0x033CAF20 MOVZ W1, 0x2
	0x033CAF24 MOV X0, X8
	0x033CAF28 BL 0x1C16D6C
	0x033CAF2C CBZ X0, 0x33CAF94
	0x033CAF30 LDR X8, [X0]
	0x033CAF34 MOV X22, X0
	0x033CAF38 MOV X0, X21
	0x033CAF3C LDR X1, [X8 + 0x40]
	0x033CAF40 BL 0x1C16E00
	0x033CAF44 CBZ X0, 0x33CAFA0
	0x033CAF48 LDR W8, [X22 + 0x18]
	0x033CAF4C CBZ W8, 0x33CAFAC
	0x033CAF50 LDR X8, [X22]
	0x033CAF54 STR X21, [X22 + 0x20]
	0x033CAF58 MOV X0, X20
	0x033CAF5C LDR X1, [X8 + 0x40]
	0x033CAF60 BL 0x1C16E00
	0x033CAF64 CBZ X0, 0x33CAFA0
	0x033CAF68 LDR W8, [X22 + 0x18]
	0x033CAF6C CMP W8, 0x1
	0x033CAF70 B.LS 0x33CAFAC
	0x033CAF74 STR X20, [X22 + 0x28]
	0x033CAF78 CBZ X19, 0x33CAF94
	0x033CAF7C STR X22, [X19 + 0x78]
	0x033CAF80 MOV X0, X19
	0x033CAF84 LDP X20, X19, [X31 + 0x20]
	0x033CAF88 LDP X22, X21, [X31 + 0x10]
	0x033CAF8C LDR X30, [X31], #0x30
	0x033CAF90 RET
	0x033CAF94 BL 0x1C16F20
	0x033CAF98 MOV X0, X20
	0x033CAF9C BL 0x1C171E0
	0x033CAFA0 BL 0x1C16F44
	0x033CAFA4 MOV X1, X31
	0x033CAFA8 BL 0x1C16DEC
	0x033CAFAC BL 0x1C16F28
	0x033CAFB0 STP X30, X23, [X31 - 0x30]!
	0x033CAFB4 STP X22, X21, [X31 + 0x10]
	0x033CAFB8 STP X20, X19, [X31 + 0x20]
	0x033CAFBC CBZ X1, 0x33CB0D8
	0x033CAFC0 MOV X19, X2
	0x033CAFC4 CBZ X2, 0x33CB0D8
	0x033CAFC8 LDR W8, [X1 + 0x18]
	0x033CAFCC LDR X9, [X19 + 0x18]
	0x033CAFD0 MOV X20, X1
	0x033CAFD4 CMP W8, W9
	0x033CAFD8 B.GE 0x33CAFF0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1014000
	007 Move W8, [X20+646]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0xD63000
	014 Move X0, [X0+2496]
	015 Call 0x1C17CF4
	016 Move X0, 0xD5C000
	017 Move X0, [X0+3192]
	018 Call 0x1C17CF4
	019 Move X0, 0xD5C000
	020 Move X0, [X0+3200]
	021 Call 0x1C17CF4
	022 Move X0, 0xD63000
	023 Move X0, [X0+2504]
	024 Call 0x1C17CF4
	025 Move X0, 0xD2A000
	026 Move X0, [X0+1728]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+646], W8
	030 Compare X19, 0
	031 JumpIfEqual {166}
	032 Move X0, X19
	033 Move X1, X31
	034 Call Type.get_Attributes, X0
	035 Move W20, W0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 4096
	038 Compare TEMP, 4096
	039 JumpIfEqual {45}
	040 Move TEMP, X20
	041 And TEMP, TEMP, 0x2000
	042 Compare TEMP, 0x2000
	043 JumpIfEqual {58}
	044 Move X19, X31
	045 Move X8, 0xD5C000
	046 Move X8, [X8+3192]
	047 And W31, W20, 0x2000
	048 Move X0, [X8]
	049 Move W8, 1
	050 NotImplemented "Instruction CINC not yet implemented."
	051 Call 0x1C17D6C
	052 Move X19, X0
	053 Move TEMP, X20
	054 And TEMP, TEMP, 0x2000
	055 Compare TEMP, 0x2000
	056 JumpIfEqual {66}
	057 Move W22, W31
	058 Move X8, 0xD5C000
	059 Move X8, [X8+3192]
	060 Move W1, W20
	061 ShiftRight W1, 13
	062 And W1, W1, 0x1FFF
	063 Move X0, [X8]
	064 Call 0x1C17D6C
	065 Move X19, X0
	066 Move X22, 0xD2A000
	067 Move X22, [X22+1728]
	068 Move X8, 0xD63000
	069 Move X0, [X22]
	070 Move X8, [X8+2504]
	071 Move W9, [X0+224]
	072 Move X21, [X8]
	073 Compare W9, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X21
	077 Move X1, X31
	078 Call Type.GetTypeFromHandle, X0
	079 Compare X0, 0
	080 JumpIfEqual {166}
	081 Move X8, [X22]
	082 Move X2, X31
	083 Move X8, [X8+184]
	084 Move X1, [X8+16]
	085 Call Type.GetConstructor, X0, X1
	086 Move X8, 0xD5C000
	087 Move X8, [X8+3200]
	088 Move X22, X0
	089 Move X8, [X8]
	090 Move X0, X8
	091 Call 0x1C17F10
	092 Move X1, X22
	093 Move X2, X31
	094 Move X21, X0
	095 Call CustomAttributeData..ctor, X0, X1
	096 Compare X19, 0
	097 JumpIfEqual {166}
	098 Compare X21, 0
	099 JumpIfEqual {106}
	100 Move X8, [X19]
	101 Move X0, X21
	102 Move X1, [X8+64]
	103 Call 0x1C17E00
	104 Compare X0, 0
	105 JumpIfEqual {168}
	106 Move W8, [X19+24]
	107 Compare W8, 0
	108 JumpIfEqual {167}
	109 Move [X19+32], X21
	110 Move TEMP, X20
	111 And TEMP, TEMP, 4096
	112 Compare TEMP, 4096
	113 JumpIfNotEqual {159}
	114 Move W22, 1
	115 Move X21, 0xD2A000
	116 Move X21, [X21+1728]
	117 Move X8, 0xD63000
	118 Move X0, [X21]
	119 Move X8, [X8+2496]
	120 Move W9, [X0+224]
	121 Move X20, [X8]
	122 Compare W9, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move X0, X20
	126 Move X1, X31
	127 Call Type.GetTypeFromHandle, X0
	128 Compare X0, 0
	129 JumpIfEqual {166}
	130 Move X8, [X21]
	131 Move X2, X31
	132 Move X8, [X8+184]
	133 Move X1, [X8+16]
	134 Call Type.GetConstructor, X0, X1
	135 Move X8, 0xD5C000
	136 Move X8, [X8+3200]
	137 Move X21, X0
	138 Move X8, [X8]
	139 Move X0, X8
	140 Call 0x1C17F10
	141 Move X1, X21
	142 Move X2, X31
	143 Move X20, X0
	144 Call CustomAttributeData..ctor, X0, X1
	145 Compare X19, 0
	146 JumpIfEqual {166}
	147 Compare X20, 0
	148 JumpIfEqual {155}
	149 Move X8, [X19]
	150 Move X0, X20
	151 Move X1, [X8+64]
	152 Call 0x1C17E00
	153 Compare X0, 0
	154 JumpIfEqual {168}
	155 Move W8, [X19+24]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Add X8, X19, W22
	158 Move [X8+32], X20
	159 Move X0, X19
	160 Move X20, [X31+32]
	161 Move X19, [X31+40]
	162 Move X22, [X31+16]
	163 Move X21, [X31+24]
	164 Move X30, [X31+48]
	165 Return X0
	166 Call 0x1C17F20
	167 Call 0x1C17F28
	168 Call 0x1C17F44
	169 Move X1, X31
	170 Call 0x1C17DEC

Method: System.Boolean IsDefined(System.Reflection.ICustomAttributeProvider obj, System.Type attributeType, System.Boolean inherit)

Disassembly:
	0x033CAFDC MOVN W0, 0x0
	0x033CAFE0 LDP X20, X19, [X31 + 0x20]
	0x033CAFE4 LDP X22, X21, [X31 + 0x10]
	0x033CAFE8 LDP X30, X23, [X31], #0x30
	0x033CAFEC RET
	0x033CAFF0 B.NE 0x33CB050
	0x033CAFF4 CMP W8, 0x1
	0x033CAFF8 B.LT 0x33CB048
	0x033CAFFC MOV X21, X31
	0x033CB000 ADD X22, X19, 0x20
	0x033CB004 ADD X23, X20, 0x20
	0x033CB008 CMP W21, W8
	0x033CB00C B.CS 0x33CB0CC
	0x033CB010 LDR W8, [X19 + 0x18]
	0x033CB014 CMP W21, W8
	0x033CB018 B.CS 0x33CB0CC
	0x033CB01C LDR X0, [X23, X21, LSL #3]
	0x033CB020 CBZ X0, 0x33CB0D8
	0x033CB024 LDR X8, [X0]
	0x033CB028 LDR X1, [X22, X21, LSL #3]
	0x033CB02C LDP X9, X2, [X8 + 0x138]
	0x033CB030 BLR X9
	0x033CB034 TBZ X0, 0x0, 0x33CAFDC
	0x033CB038 LDR W8, [X20 + 0x18]
	0x033CB03C ADD X21, X21, 0x1
	0x033CB040 CMP W21, W8
	0x033CB044 B.LT 0x33CB008
	0x033CB048 MOV W0, W31
	0x033CB04C B 0x33CAFE0
	0x033CB050 SUBS W21, W8, W9
	0x033CB054 B.MI 0x33CAFDC
	0x033CB058 CBZ W9, 0x33CB0CC
	0x033CB05C MOV W22, W31
	0x033CB060 LDR W8, [X20 + 0x18]
	0x033CB064 CMP W21, W8
	0x033CB068 B.CS 0x33CB0CC
	0x033CB06C ADD X8, X19, W22, 0x3, SXTW
	0x033CB070 LDR X0, [X8 + 0x20]
	0x033CB074 CBZ X0, 0x33CB0D8
	0x033CB078 LDR X8, [X0]
	0x033CB07C ADD X9, X20, W21, 0x3, SXTW
	0x033CB080 LDR X1, [X9 + 0x20]
	0x033CB084 LDP X9, X2, [X8 + 0x138]
	0x033CB088 BLR X9
	0x033CB08C TBZ X0, 0x0, 0x33CB0B4
	0x033CB090 LDR W8, [X19 + 0x18]
	0x033CB094 SUB W9, W8, 0x1
	0x033CB098 CMP W22, W9
	0x033CB09C B.EQ 0x33CB0D0
	0x033CB0A0 ADD W22, W22, 0x1
	0x033CB0A4 CMP W22, W8
	0x033CB0A8 ADD W21, W21, 0x1
	0x033CB0AC B.CC 0x33CB060
	0x033CB0B0 B 0x33CB0CC
	0x033CB0B4 ORN W8, W31, W22, 0x0
	0x033CB0B8 ADDS W21, W21, W8
	0x033CB0BC B.MI 0x33CAFDC
	0x033CB0C0 LDR W8, [X19 + 0x18]
	0x033CB0C4 MOV W22, W31
	0x033CB0C8 CBNZ W8, 0x33CB060
	0x033CB0CC BL 0x1C16F28
	0x033CB0D0 SUB W0, W21, W22
	0x033CB0D4 B 0x33CAFE0
	0x033CB0D8 BL 0x1C16F20
	0x033CB0DC STR X30, [X31 - 0x30]!
	0x033CB0E0 STP X22, X21, [X31 + 0x10]
	0x033CB0E4 STP X20, X19, [X31 + 0x20]
	0x033CB0E8 ADRP X21, 0x1012000
	0x033CB0EC LDRB W8, [X21 + 0x291]
	0x033CB0F0 MOV X20, X1
	0x033CB0F4 MOV X19, X0
	0x033CB0F8 TBNZ X8, 0x0, 0x33CB128
	0x033CB0FC ADRP X0, 0xD61000
	0x033CB100 LDR X0, [X0 + 0x9F8]
	0x033CB104 BL 0x1C16CF4
	0x033CB108 ADRP X0, 0xD61000
	0x033CB10C LDR X0, [X0 + 0x858]
	0x033CB110 BL 0x1C16CF4
	0x033CB114 ADRP X0, 0xD61000
	0x033CB118 LDR X0, [X0 + 0x9F0]
	0x033CB11C BL 0x1C16CF4
	0x033CB120 MOVZ W8, 0x1
	0x033CB124 STRB W8, [X21 + 0x291]
	0x033CB128 CBZ X20, 0x33CB364
	0x033CB12C ADRP X9, 0xD61000
	0x033CB130 LDR X9, [X9 + 0x9F0]
	0x033CB134 LDR X8, [X20]
	0x033CB138 LDR X1, [X9]
	0x033CB13C LDRB W10, [X8 + 0x130]
	0x033CB140 LDRB W9, [X1 + 0x130]
	0x033CB144 CMP W10, W9
	0x033CB148 B.CC 0x33CB37C
	0x033CB14C LDR X8, [X8 + 0xC8]
	0x033CB150 ADD X8, X8, X9, 0x3, LSL
	0x033CB154 LDUR X8, [X8 - 0x8]
	0x033CB158 CMP X8, X1
	0x033CB15C B.NE 0x33CB37C
	0x033CB160 LDR X0, [X19 + 0x78]
	0x033CB164 LDR X21, [X20 + 0x78]
	0x033CB168 CBZ X0, 0x33CB18C
	0x033CB16C CBZ X21, 0x33CB1DC
	0x033CB170 LDR X8, [X0]
	0x033CB174 MOV X1, X21
	0x033CB178 LDP X9, X2, [X8 + 0x138]
	0x033CB17C BLR X9
	0x033CB180 TBZ X0, 0x0, 0x33CB22C
	0x033CB184 MOV X19, X31
	0x033CB188 B 0x33CB364
	0x033CB18C CBZ X21, 0x33CB2D0
	0x033CB190 LDR X8, [X21 + 0x18]
	0x033CB194 CMP W8, 0x1
	0x033CB198 B.LT 0x33CB364
	0x033CB19C MOV X20, X31
	0x033CB1A0 AND X8, X8, 0x0
	0x033CB1A4 ADD X22, X21, 0x20
	0x033CB1A8 CMP X20, W8, UXTW
	0x033CB1AC B.CS 0x33CB378
	0x033CB1B0 LDR X8, [X19]
	0x033CB1B4 LDR X1, [X22, X20, LSL #3]
	0x033CB1B8 MOV X0, X19
	0x033CB1BC LDP X9, X2, [X8 + 0x138]
	0x033CB1C0 BLR X9
	0x033CB1C4 TBNZ X0, 0x0, 0x33CB184
	0x033CB1C8 LDR W8, [X21 + 0x18]
	0x033CB1CC ADD X20, X20, 0x1
	0x033CB1D0 CMP X20, W8, SXTW
	0x033CB1D4 B.LT 0x33CB1A8
	0x033CB1D8 B 0x33CB364
	0x033CB1DC ADRP X8, 0xD61000
	0x033CB1E0 LDR X8, [X8 + 0x9F8]
	0x033CB1E4 MOV X1, X20
	0x033CB1E8 LDR X2, [X8]
	0x033CB1EC BL 0x20F7838
	0x033CB1F0 ADDS W31, W0, 0x1
	0x033CB1F4 B.EQ 0x33CB364
	0x033CB1F8 LDR X8, [X19 + 0x78]
	0x033CB1FC CBZ X8, 0x33CB384
	0x033CB200 LDR W9, [X8 + 0x18]
	0x033CB204 CMP W9, 0x1
	0x033CB208 B.LE 0x33CB388
	0x033CB20C MOV W20, W0
	0x033CB210 CMP W9, 0x2
	0x033CB214 B.NE 0x33CB2F0
	0x033CB218 CMP W20, 0x0
	0x033CB21C CSET W9, EQ
	0x033CB220 ADD X8, X8, W9, 0x3, UXTW
	0x033CB224 LDR X19, [X8 + 0x20]
	0x033CB228 B 0x33CB364
	0x033CB22C LDR X1, [X19 + 0x78]
	0x033CB230 LDR X2, [X20 + 0x78]
	0x033CB234 BL 0x33CAFB0
	0x033CB238 ADDS W31, W0, 0x1
	0x033CB23C B.EQ 0x33CB364
	0x033CB240 MOV W21, W0
	0x033CB244 MOV X0, X19
	0x033CB248 BL 0x1C877F8
	0x033CB24C LDR X8, [X19 + 0x78]
	0x033CB250 CBZ X8, 0x33CB384
	0x033CB254 LDR X9, [X20 + 0x78]
	0x033CB258 CBZ X9, 0x33CB384
	0x033CB25C ADRP X10, 0xD61000
	0x033CB260 LDR X10, [X10 + 0x858]
	0x033CB264 LDR W8, [X8 + 0x18]
	0x033CB268 LDR W9, [X9 + 0x18]
	0x033CB26C MOV X22, X0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x1014000
	011 Move X23, 0xD2A000
	012 Move W8, [X22+647]
	013 Move X23, [X23+1728]
	014 Move W20, W2
	015 Move X19, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xD59000
	022 Move X0, [X0+3440]
	023 Call 0x1C17CF4
	024 Move X0, 0xD5C000
	025 Move X0, [X0+992]
	026 Call 0x1C17CF4
	027 Move X0, 0xD29000
	028 Move X0, [X0+1728]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+647], W8
	032 Move X0, [X23]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X19
	038 Move X1, X31
	039 Move X2, X31
	040 Call Type.op_Equality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {186}
	045 Move X24, 0xD5C000
	046 Move X24, [X24+992]
	047 Move X22, X31
	048 Move X0, [X24]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X21
	054 Call MonoCustomAttrs.IsUserCattrProvider, X0
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {146}
	059 Move X0, [X24]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X21
	065 Move X1, X19
	066 Call 0x1C3AE54
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {135}
	071 Move X0, [X24]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X21
	077 Move X1, X19
	078 Call MonoCustomAttrs.GetPseudoCustomAttributes, X0, X1
	079 Compare X0, 0
	080 JumpIfEqual {106}
	081 Move W8, [X0+24]
	082 Move X23, X0
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X25, X31
	085 Add X26, X23, 32
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X0, [X26]
	088 Compare X0, 0
	089 JumpIfEqual {184}
	090 Call 0x1C26764
	091 Compare X19, 0
	092 JumpIfEqual {184}
	093 Move X8, [X19]
	094 Move X1, X0
	095 Move X0, X19
	096 Move X9, [X8+680]
	097 Move X2, [X8+688]
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {135}
	103 Move W8, [X23+24]
	104 Add X25, X25, 1
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Compare X22, 0
	107 JumpIfNotEqual {125}
	108 Move TEMP, X20
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {164}
	112 Move X0, [X24]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Move X0, X19
	118 Call MonoCustomAttrs.RetrieveAttributeUsage, X0
	119 Compare X0, 0
	120 JumpIfEqual {184}
	121 Move W8, [X0+21]
	122 Move X22, X0
	123 Compare W8, 0
	124 JumpIfEqual {164}
	125 Move X0, [X24]
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {130}
	129 Call 0x1C17DFC
	130 Move X0, X21
	131 Call MonoCustomAttrs.GetBase, X0
	132 Move X21, X0
	133 Compare X0, 0
	134 JumpIfNotEqual {48}
	135 Move W0, 1
	136 Move X20, [X31+64]
	137 Move X19, [X31+72]
	138 Move X22, [X31+48]
	139 Move X21, [X31+56]
	140 Move X24, [X31+32]
	141 Move X23, [X31+40]
	142 Move X26, [X31+16]
	143 Move X25, [X31+24]
	144 Move X30, [X31+80]
	145 Return X0
	146 Compare X21, 0
	147 JumpIfEqual {184}
	148 Move X10, 0xD59000
	149 Move X8, [X21]
	150 Move X10, [X10+3440]
	151 NotImplemented "Instruction LDRH not yet implemented."
	152 Move X1, [X10]
	153 Compare X9, 0
	154 JumpIfEqual {161}
	155 Move X10, [X8+176]
	156 Add X10, X10, 8
	157 NotImplemented "Instruction LDUR not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Subtract X9, X9, 1
	160 Add X10, X10, 16
	161 Move W2, 1
	162 Move X0, X21
	163 Call 0x1C5D788
	164 Move W0, W31
	165 Move W9, [X10]
	166 Add W9, W9, 1
	167 Add X8, X8, W9
	168 Add X0, X8, 312
	169 Move X4, [X0]
	170 Move X3, [X0+8]
	171 And W2, W20, 1
	172 Move X0, X21
	173 Move X1, X19
	174 Move X20, [X31+64]
	175 Move X19, [X31+72]
	176 Move X22, [X31+48]
	177 Move X21, [X31+56]
	178 Move X24, [X31+32]
	179 Move X23, [X31+40]
	180 Move X26, [X31+16]
	181 Move X25, [X31+24]
	182 Move X30, [X31+80]
	183 CallNoReturn X4
	184 Call 0x1C17F20
	185 Call 0x1C17F28
	186 Move X0, 0xD2E000
	187 Move X0, [X0+1320]
	188 Call 0x1C17D08
	189 Call 0x1C17F10
	190 Move X19, X0
	191 Move X0, 0xD5B000
	192 Move X0, [X0+3600]
	193 Call 0x1C17D08
	194 Move X1, X0
	195 Move X0, X19
	196 Move X2, X31
	197 Call ArgumentNullException..ctor, X0, X1
	198 Move X0, 0xD62000
	199 Move X0, [X0+2512]
	200 Call 0x1C17D08
	201 Move X1, X0
	202 Move X0, X19
	203 Call 0x1C17DEC

Method: System.Boolean IsDefinedInternal(System.Reflection.ICustomAttributeProvider obj, System.Type AttributeType)

Disassembly:
	0x033CB270 LDR X0, [X10]

ISIL:
	001 Call 0x1C3AE54
	002 Return X0

Method: System.Reflection.PropertyInfo GetBasePropertyDefinition(System.Reflection.RuntimePropertyInfo property)

Disassembly:
	0x033CB274 SUB W1, W8, W9
	0x033CB278 BL 0x1C16D6C
	0x033CB27C CBZ X22, 0x33CB384
	0x033CB280 STR X0, [X22 + 0x78]
	0x033CB284 MOV X1, X0
	0x033CB288 LDR X0, [X19 + 0x78]
	0x033CB28C MOV W2, W21
	0x033CB290 MOV X3, X31
	0x033CB294 BL 0x33A0C7C
	0x033CB298 LDR X8, [X20 + 0x78]
	0x033CB29C CBZ X8, 0x33CB384
	0x033CB2A0 LDR X0, [X19 + 0x78]
	0x033CB2A4 CBZ X0, 0x33CB384
	0x033CB2A8 LDR W8, [X8 + 0x18]
	0x033CB2AC LDR W9, [X0 + 0x18]
	0x033CB2B0 LDR X2, [X22 + 0x78]
	0x033CB2B4 MOV W3, W21
	0x033CB2B8 ADD W1, W21, W8
	0x033CB2BC SUB W4, W9, W1
	0x033CB2C0 MOV X5, X31
	0x033CB2C4 BL 0x339FCE8
	0x033CB2C8 MOV X19, X22
	0x033CB2CC B 0x33CB364
	0x033CB2D0 LDR X8, [X19]
	0x033CB2D4 MOV X0, X19
	0x033CB2D8 MOV X1, X20
	0x033CB2DC LDP X9, X2, [X8 + 0x138]
	0x033CB2E0 BLR X9
	0x033CB2E4 ANDS W31, W0, 0x1
	0x033CB2E8 CSEL X0, X31, X19, NE
	0x033CB2EC B 0x33CB368
	0x033CB2F0 MOV X0, X19
	0x033CB2F4 BL 0x1C877F8
	0x033CB2F8 LDR X8, [X19 + 0x78]
	0x033CB2FC CBZ X8, 0x33CB384
	0x033CB300 ADRP X9, 0xD61000
	0x033CB304 LDR X9, [X9 + 0x858]
	0x033CB308 LDR W8, [X8 + 0x18]
	0x033CB30C MOV X21, X0
	0x033CB310 LDR X0, [X9]
	0x033CB314 SUB W1, W8, 0x1
	0x033CB318 BL 0x1C16D6C
	0x033CB31C CBZ X21, 0x33CB384
	0x033CB320 STR X0, [X21 + 0x78]
	0x033CB324 MOV X1, X0
	0x033CB328 LDR X0, [X19 + 0x78]
	0x033CB32C MOV W2, W20
	0x033CB330 MOV X3, X31
	0x033CB334 BL 0x33A0C7C
	0x033CB338 LDR X0, [X19 + 0x78]
	0x033CB33C CBZ X0, 0x33CB384
	0x033CB340 LDR W8, [X0 + 0x18]
	0x033CB344 LDR X2, [X21 + 0x78]
	0x033CB348 ORN W9, W31, W20, 0x0
	0x033CB34C ADD W1, W20, 0x1
	0x033CB350 ADD W4, W8, W9
	0x033CB354 MOV W3, W20
	0x033CB358 MOV X5, X31
	0x033CB35C BL 0x339FCE8
	0x033CB360 MOV X19, X21
	0x033CB364 MOV X0, X19
	0x033CB368 LDP X20, X19, [X31 + 0x20]
	0x033CB36C LDP X22, X21, [X31 + 0x10]
	0x033CB370 LDR X30, [X31], #0x30
	0x033CB374 RET
	0x033CB378 BL 0x1C16F28
	0x033CB37C MOV X0, X20
	0x033CB380 BL 0x1C171E0
	0x033CB384 BL 0x1C16F20
	0x033CB388 ADRP X0, 0xD28000
	0x033CB38C LDR X0, [X0 + 0x5B0]
	0x033CB390 BL 0x1C16D08
	0x033CB394 BL 0x1C16F10
	0x033CB398 MOV X1, X31
	0x033CB39C MOV X19, X0
	0x033CB3A0 BL 0x337DEC0
	0x033CB3A4 ADRP X0, 0xD61000
	0x033CB3A8 LDR X0, [X0 + 0xA00]
	0x033CB3AC BL 0x1C16D08
	0x033CB3B0 MOV X1, X0
	0x033CB3B4 MOV X0, X19
	0x033CB3B8 BL 0x1C16DEC
	0x033CB3BC RET
	0x033CB3C0 STR X30, [X31 - 0x20]!
	0x033CB3C4 STP X20, X19, [X31 + 0x10]
	0x033CB3C8 ADRP X20, 0x1012000
	0x033CB3CC ADRP X19, 0xD61000
	0x033CB3D0 LDRB W8, [X20 + 0x292]
	0x033CB3D4 LDR X19, [X19 + 0x7A8]
	0x033CB3D8 TBNZ X8, 0x0, 0x33CB3F0
	0x033CB3DC ADRP X0, 0xD61000
	0x033CB3E0 LDR X0, [X0 + 0x7A8]
	0x033CB3E4 BL 0x1C16CF4
	0x033CB3E8 MOVZ W8, 0x1
	0x033CB3EC STRB W8, [X20 + 0x292]
	0x033CB3F0 LDR X0, [X19]
	0x033CB3F4 LDR W8, [X0 + 0xE0]
	0x033CB3F8 CBNZ W8, 0x33CB404
	0x033CB3FC BL 0x1C16DFC
	0x033CB400 LDR X0, [X19]
	0x033CB404 LDR X8, [X0 + 0xB8]
	0x033CB408 LDP X20, X19, [X31 + 0x10]
	0x033CB40C LDR X0, [X8]
	0x033CB410 LDR W1, [X8 + 0x8]
	0x033CB414 LDR X30, [X31], #0x20
	0x033CB418 RET
	0x033CB41C RET
	0x033CB420 SUB X31, X31, 0x30
	0x033CB424 STR X30, [X31 + 0x10]
	0x033CB428 STP X20, X19, [X31 + 0x20]
	0x033CB42C ADRP X20, 0x1012000
	0x033CB430 ADRP X19, 0xD61000
	0x033CB434 LDRB W8, [X20 + 0x293]
	0x033CB438 LDR X19, [X19 + 0x7A8]
	0x033CB43C TBNZ X8, 0x0, 0x33CB454
	0x033CB440 ADRP X0, 0xD61000
	0x033CB444 LDR X0, [X0 + 0x7A8]
	0x033CB448 BL 0x1C16CF4
	0x033CB44C MOVZ W8, 0x1
	0x033CB450 STRB W8, [X20 + 0x293]
	0x033CB454 ADD X0, X31, 0x0
	0x033CB458 MOV W1, W31
	0x033CB45C MOV W2, W31
	0x033CB460 MOV W3, W31
	0x033CB464 MOV W4, W31
	0x033CB468 MOV W5, W31
	0x033CB46C MOV X6, X31
	0x033CB470 STR W31, [X31 + 0x8]
	0x033CB474 STR X31, [X31]
	0x033CB478 BL 0x339D33C
	0x033CB47C LDR X8, [X19]
	0x033CB480 LDR W9, [X31 + 0x8]
	0x033CB484 LDR X10, [X31]
	0x033CB488 LDP X20, X19, [X31 + 0x20]
	0x033CB48C LDR X8, [X8 + 0xB8]
	0x033CB490 LDR X30, [X31 + 0x10]
	0x033CB494 STR W9, [X8 + 0x8]
	0x033CB498 STR X10, [X8]
	0x033CB49C ADD X31, X31, 0x30
	0x033CB4A0 RET
	0x033CB4A4 CMP X0, X1
	0x033CB4A8 CSET W0, EQ
	0x033CB4AC RET
	0x033CB4B0 CMP X0, X1
	0x033CB4B4 B.EQ 0x33CB4D0
	0x033CB4B8 MOV W8, W31
	0x033CB4BC CBZ X0, 0x33CB4D4
	0x033CB4C0 CBZ X1, 0x33CB4D4
	0x033CB4C4 LDR X8, [X0]
	0x033CB4C8 LDP X3, X2, [X8 + 0x138]
	0x033CB4CC BR X3
	0x033CB4D0 MOVZ W8, 0x1
	0x033CB4D4 MOV W0, W8
	0x033CB4D8 RET
	0x033CB4DC RET
	0x033CB4E0 B 0x1C2575C
	0x033CB4E4 B 0x1C2575C
	0x033CB4E8 STR X30, [X31 - 0x10]!
	0x033CB4EC BL 0x1C25764
	0x033CB4F0 CBZ X0, 0x33CB504
	0x033CB4F4 LDR X8, [X0]
	0x033CB4F8 LDP X2, X1, [X8 + 0x168]
	0x033CB4FC LDR X30, [X31], #0x10
	0x033CB500 BR X2
	0x033CB504 BL 0x1C16F20
	0x033CB508 CMP X0, X1
	0x033CB50C CSET W0, EQ
	0x033CB510 RET
	0x033CB514 RET
	0x033CB518 RET
	0x033CB51C STR X1, [X0]
	0x033CB520 RET
	0x033CB524 STR X30, [X31 - 0x30]!
	0x033CB528 STP X22, X21, [X31 + 0x10]
	0x033CB52C STP X20, X19, [X31 + 0x20]
	0x033CB530 ADRP X21, 0x1012000
	0x033CB534 LDRB W8, [X21 + 0x294]
	0x033CB538 MOV X20, X1
	0x033CB53C MOV X19, X0
	0x033CB540 TBNZ X8, 0x0, 0x33CB57C
	0x033CB544 ADRP X0, 0xD61000
	0x033CB548 LDR X0, [X0 + 0xA08]
	0x033CB54C BL 0x1C16CF4
	0x033CB550 ADRP X0, 0xD59000
	0x033CB554 LDR X0, [X0 + 0xBB0]
	0x033CB558 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x1013000
	009 Move W8, [X20+648]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xD5A000
	016 Move X0, [X0+2464]
	017 Call 0x1C17CF4
	018 Move X0, 0xD31000
	019 Move X0, [X0+3168]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+648], W8
	023 Compare X19, 0
	024 JumpIfEqual {227}
	025 Move X8, [X19]
	026 Move W1, 1
	027 Move X0, X19
	028 Move X9, [X8+664]
	029 Move X2, [X8+672]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X1, X31
	032 Move X2, X31
	033 Move X21, X0
	034 Call MethodInfo.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {48}
	039 Compare X21, 0
	040 JumpIfEqual {227}
	041 Move X0, X21
	042 Move X1, X31
	043 Call MethodBase.get_IsVirtual, X0
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {55}
	048 Move X8, [X19]
	049 Move W1, 1
	050 Move X0, X19
	051 Move X9, [X8+696]
	052 Move X2, [X8+704]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X21, X0
	055 Move X0, X21
	056 Move X1, X31
	057 Move X2, X31
	058 Call MethodInfo.op_Equality, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {184}
	063 Compare X21, 0
	064 JumpIfEqual {227}
	065 Move X0, X21
	066 Move X1, X31
	067 Call MethodBase.get_IsVirtual, X0
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {184}
	072 Move X9, 0xD5A000
	073 Move X9, [X9+2464]
	074 Move X8, [X21]
	075 Move X1, [X9]
	076 Move W10, [X8+304]
	077 Move W9, [X1+304]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X8, [X8+200]
	080 Add X8, X8, X9
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X0, X21
	084 Move X1, X31
	085 Call RuntimeMethodInfo.GetBaseMethod, X0
	086 Move X1, X31
	087 Move X2, X31
	088 Move X20, X0
	089 Call MethodInfo.op_Inequality, X0, X1
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {184}
	094 Move X0, X20
	095 Move X1, X21
	096 Move X2, X31
	097 Call MethodInfo.op_Inequality, X0, X1
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {184}
	102 Move X8, [X19]
	103 Move X0, X19
	104 Move X9, [X8+600]
	105 Move X1, [X8+608]
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Compare X0, 0
	108 JumpIfEqual {193}
	109 Move X1, [X0+24]
	110 Move X22, X0
	111 Compare X1, 0
	112 JumpIfEqual {193}
	113 Move X8, 0xD31000
	114 Move X8, [X8+3168]
	115 Move X0, [X8]
	116 Call 0x1C17D6C
	117 Compare X0, 0
	118 JumpIfEqual {227}
	119 Move W8, [X0+24]
	120 Move X21, X0
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move W8, W31
	123 Move W9, [X22+24]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X24, W8
	126 Add X8, X22, X24
	127 Move X0, [X8+32]
	128 Compare X0, 0
	129 JumpIfEqual {227}
	130 Move X8, [X0]
	131 Move X9, [X8+472]
	132 Move X1, [X8+480]
	133 NotImplemented "Instruction BLR not yet implemented."
	134 Move X23, X0
	135 Compare X0, 0
	136 JumpIfEqual {143}
	137 Move X8, [X21]
	138 Move X0, X23
	139 Move X1, [X8+64]
	140 Call 0x1C17E00
	141 Compare X0, 0
	142 JumpIfEqual {231}
	143 Move X9, [X21+24]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Add W8, W24, 1
	146 Add X10, X21, X24
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move [X10+32], X23
	149 Compare X20, 0
	150 JumpIfEqual {227}
	151 Move X8, [X20]
	152 Move X0, X20
	153 Move X9, [X8+440]
	154 Move X1, [X8+448]
	155 NotImplemented "Instruction BLR not yet implemented."
	156 Move X8, [X19]
	157 Move X20, X0
	158 Move X0, X19
	159 Move X9, [X8+424]
	160 Move X1, [X8+432]
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move X8, [X19]
	163 Move X22, X0
	164 Move X0, X19
	165 Move X9, [X8+584]
	166 Move X1, [X8+592]
	167 NotImplemented "Instruction BLR not yet implemented."
	168 Compare X20, 0
	169 JumpIfEqual {227}
	170 Move X2, X0
	171 Move X0, X20
	172 Move X1, X22
	173 Move X3, X21
	174 Move X20, [X31+48]
	175 Move X19, [X31+56]
	176 Move X22, [X31+32]
	177 Move X21, [X31+40]
	178 Move X24, [X31+16]
	179 Move X23, [X31+24]
	180 Move X4, X31
	181 Move X30, [X31+64]
	182 Call Type.GetProperty, X0, X1, X2, X3
	183 Return X0
	184 Move X20, [X31+48]
	185 Move X19, [X31+56]
	186 Move X22, [X31+32]
	187 Move X21, [X31+40]
	188 Move X24, [X31+16]
	189 Move X23, [X31+24]
	190 Move X0, X31
	191 Move X30, [X31+64]
	192 Return X0
	193 Compare X20, 0
	194 JumpIfEqual {227}
	195 Move X8, [X20]
	196 Move X0, X20
	197 Move X9, [X8+440]
	198 Move X1, [X8+448]
	199 NotImplemented "Instruction BLR not yet implemented."
	200 Move X8, [X19]
	201 Move X20, X0
	202 Move X0, X19
	203 Move X9, [X8+424]
	204 Move X1, [X8+432]
	205 NotImplemented "Instruction BLR not yet implemented."
	206 Move X8, [X19]
	207 Move X21, X0
	208 Move X0, X19
	209 Move X9, [X8+584]
	210 Move X1, [X8+592]
	211 NotImplemented "Instruction BLR not yet implemented."
	212 Compare X20, 0
	213 JumpIfEqual {227}
	214 Move X2, X0
	215 Move X0, X20
	216 Move X1, X21
	217 Move X20, [X31+48]
	218 Move X19, [X31+56]
	219 Move X22, [X31+32]
	220 Move X21, [X31+40]
	221 Move X24, [X31+16]
	222 Move X23, [X31+24]
	223 Move X3, X31
	224 Move X30, [X31+64]
	225 Call Type.GetProperty, X0, X1, X2
	226 Return X0
	227 Call 0x1C17F20
	228 Call 0x1C17F28
	229 Move X0, X21
	230 Call 0x1C181E0
	231 Call 0x1C17F44
	232 Move X1, X31
	233 Call 0x1C17DEC

Method: System.Reflection.EventInfo GetBaseEventDefinition(System.Reflection.RuntimeEventInfo evt)

Disassembly:
	0x033CB55C ADRP X0, 0xD28000
	0x033CB560 LDR X0, [X0 + 0x6C0]
	0x033CB564 BL 0x1C16CF4
	0x033CB568 ADRP X0, 0xD61000
	0x033CB56C LDR X0, [X0 + 0xA10]
	0x033CB570 BL 0x1C16CF4
	0x033CB574 MOVZ W8, 0x1
	0x033CB578 STRB W8, [X21 + 0x294]
	0x033CB57C CBZ X20, 0x33CB62C
	0x033CB580 ADRP X8, 0xD28000
	0x033CB584 LDR X8, [X8 + 0x6C0]
	0x033CB588 ADRP X22, 0xD61000
	0x033CB58C LDR X0, [X8]
	0x033CB590 ADRP X8, 0xD61000
	0x033CB594 LDR X8, [X8 + 0xA08]
	0x033CB598 LDR W9, [X0 + 0xE0]
	0x033CB59C LDR X21, [X8]
	0x033CB5A0 LDR X22, [X22 + 0xA10]
	0x033CB5A4 CBNZ W9, 0x33CB5AC
	0x033CB5A8 BL 0x1C16DFC
	0x033CB5AC MOV X0, X21
	0x033CB5B0 MOV X1, X31
	0x033CB5B4 BL 0x338C698
	0x033CB5B8 LDR X1, [X22]
	0x033CB5BC MOV X2, X0
	0x033CB5C0 MOV X0, X20
	0x033CB5C4 MOV X3, X31
	0x033CB5C8 BL 0x32A9678
	0x033CB5CC CBZ X0, 0x33CB660
	0x033CB5D0 ADRP X9, 0xD59000
	0x033CB5D4 LDR X9, [X9 + 0xBB0]
	0x033CB5D8 LDR X8, [X0]
	0x033CB5DC LDR X1, [X9]
	0x033CB5E0 LDRB W10, [X8 + 0x130]
	0x033CB5E4 LDRB W9, [X1 + 0x130]
	0x033CB5E8 CMP W10, W9
	0x033CB5EC B.CC 0x33CB628
	0x033CB5F0 LDR X10, [X8 + 0xC8]
	0x033CB5F4 ADD X9, X10, X9, 0x3, LSL
	0x033CB5F8 LDUR X9, [X9 - 0x8]
	0x033CB5FC CMP X9, X1
	0x033CB600 B.NE 0x33CB628
	0x033CB604 LDR X9, [X8 + 0x2B8]
	0x033CB608 LDR X1, [X8 + 0x2C0]
	0x033CB60C BLR X9
	0x033CB610 STR X0, [X19]
	0x033CB614 CBZ X0, 0x33CB664
	0x033CB618 LDP X20, X19, [X31 + 0x20]
	0x033CB61C LDP X22, X21, [X31 + 0x10]
	0x033CB620 LDR X30, [X31], #0x30
	0x033CB624 RET
	0x033CB628 BL 0x1C171E0
	0x033CB62C ADRP X0, 0xD2D000
	0x033CB630 LDR X0, [X0 + 0x528]
	0x033CB634 BL 0x1C16D08
	0x033CB638 BL 0x1C16F10
	0x033CB63C MOV X19, X0
	0x033CB640 ADRP X0, 0xD52000
	0x033CB644 LDR X0, [X0 + 0x2D8]
	0x033CB648 BL 0x1C16D08
	0x033CB64C MOV X1, X0
	0x033CB650 MOV X0, X19
	0x033CB654 MOV X2, X31
	0x033CB658 BL 0x330E100
	0x033CB65C B 0x33CB694
	0x033CB660 BL 0x1C16F20
	0x033CB664 ADRP X0, 0xD52000
	0x033CB668 LDR X0, [X0 + 0x2E0]
	0x033CB66C BL 0x1C16D08
	0x033CB670 BL 0x1C16F10
	0x033CB674 MOV X19, X0
	0x033CB678 ADRP X0, 0xD61000
	0x033CB67C LDR X0, [X0 + 0xA18]
	0x033CB680 BL 0x1C16D08
	0x033CB684 MOV X1, X0
	0x033CB688 MOV X0, X19
	0x033CB68C MOV X2, X31
	0x033CB690 BL 0x329F100
	0x033CB694 ADRP X0, 0xD61000
	0x033CB698 LDR X0, [X0 + 0xA20]
	0x033CB69C BL 0x1C16D08
	0x033CB6A0 MOV X1, X0
	0x033CB6A4 MOV X0, X19
	0x033CB6A8 BL 0x1C16DEC
	0x033CB6AC LDR X0, [X0]
	0x033CB6B0 RET
	0x033CB6B4 STR X30, [X31 - 0x30]!
	0x033CB6B8 STP X22, X21, [X31 + 0x10]
	0x033CB6BC STP X20, X19, [X31 + 0x20]
	0x033CB6C0 ADRP X21, 0x1012000
	0x033CB6C4 LDRB W8, [X21 + 0x295]
	0x033CB6C8 MOV X19, X1
	0x033CB6CC MOV X20, X0
	0x033CB6D0 TBNZ X8, 0x0, 0x33CB70C
	0x033CB6D4 ADRP X0, 0xD61000
	0x033CB6D8 LDR X0, [X0 + 0xA08]
	0x033CB6DC BL 0x1C16CF4
	0x033CB6E0 ADRP X0, 0xD59000
	0x033CB6E4 LDR X0, [X0 + 0xBB0]
	0x033CB6E8 BL 0x1C16CF4
	0x033CB6EC ADRP X0, 0xD28000
	0x033CB6F0 LDR X0, [X0 + 0x6C0]
	0x033CB6F4 BL 0x1C16CF4
	0x033CB6F8 ADRP X0, 0xD61000
	0x033CB6FC LDR X0, [X0 + 0xA10]
	0x033CB700 BL 0x1C16CF4
	0x033CB704 MOVZ W8, 0x1
	0x033CB708 STRB W8, [X21 + 0x295]
	0x033CB70C CBZ X19, 0x33CB7C8
	0x033CB710 LDR X0, [X20]
	0x033CB714 CBZ X0, 0x33CB7FC
	0x033CB718 ADRP X20, 0xD61000
	0x033CB71C ADRP X21, 0xD28000
	0x033CB720 ADRP X22, 0xD61000
	0x033CB724 LDR X20, [X20 + 0xA08]
	0x033CB728 LDR X21, [X21 + 0x6C0]
	0x033CB72C LDR X22, [X22 + 0xA10]
	0x033CB730 MOV X1, X31
	0x033CB734 BL 0x32CD038
	0x033CB738 LDR X8, [X21]
	0x033CB73C LDR X21, [X20]
	0x033CB740 MOV X20, X0
	0x033CB744 LDR W9, [X8 + 0xE0]
	0x033CB748 CBNZ W9, 0x33CB754
	0x033CB74C MOV X0, X8
	0x033CB750 BL 0x1C16DFC
	0x033CB754 MOV X0, X21
	0x033CB758 MOV X1, X31
	0x033CB75C BL 0x338C698
	0x033CB760 LDR X1, [X22]
	0x033CB764 MOV X3, X0
	0x033CB768 CBZ X20, 0x33CB7A0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x1013000
	008 Move W8, [X20+649]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD5A000
	015 Move X0, [X0+2464]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+649], W8
	019 Compare X19, 0
	020 JumpIfEqual {172}
	021 Move X8, [X19]
	022 Move W1, 1
	023 Move X0, X19
	024 Move X9, [X8+584]
	025 Move X2, [X8+592]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X1, X31
	028 Move X2, X31
	029 Move X20, X0
	030 Call MethodInfo.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {44}
	035 Compare X20, 0
	036 JumpIfEqual {172}
	037 Move X0, X20
	038 Move X1, X31
	039 Call MethodBase.get_IsVirtual, X0
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {51}
	044 Move X8, [X19]
	045 Move W1, 1
	046 Move X0, X19
	047 Move X9, [X8+616]
	048 Move X2, [X8+624]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X20, X0
	051 Move X0, X20
	052 Move X1, X31
	053 Move X2, X31
	054 Call MethodInfo.op_Equality, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {68}
	059 Compare X20, 0
	060 JumpIfEqual {172}
	061 Move X0, X20
	062 Move X1, X31
	063 Call MethodBase.get_IsVirtual, X0
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {75}
	068 Move X8, [X19]
	069 Move W1, 1
	070 Move X0, X19
	071 Move X9, [X8+600]
	072 Move X2, [X8+608]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X20, X0
	075 Move X0, X20
	076 Move X1, X31
	077 Move X2, X31
	078 Call MethodInfo.op_Equality, X0, X1
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {164}
	083 Compare X20, 0
	084 JumpIfEqual {172}
	085 Move X0, X20
	086 Move X1, X31
	087 Call MethodBase.get_IsVirtual, X0
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {164}
	092 Move X9, 0xD5A000
	093 Move X9, [X9+2464]
	094 Move X8, [X20]
	095 Move X1, [X9]
	096 Move W10, [X8+304]
	097 Move W9, [X1+304]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X8, [X8+200]
	100 Add X8, X8, X9
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X0, X20
	104 Move X1, X31
	105 Call RuntimeMethodInfo.GetBaseMethod, X0
	106 Move X1, X31
	107 Move X2, X31
	108 Move X21, X0
	109 Call MethodInfo.op_Inequality, X0, X1
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {164}
	114 Move X0, X21
	115 Move X1, X20
	116 Move X2, X31
	117 Call MethodInfo.op_Inequality, X0, X1
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfNotEqual {164}
	122 Move X0, X20
	123 Move X1, X31
	124 Call MethodBase.get_IsPublic, X0
	125 And W31, W0, 1
	126 Move W8, 32
	127 Move W9, 16
	128 Move X0, X20
	129 Move X1, X31
	130 NotImplemented "Instruction CSEL not yet implemented."
	131 Call MethodBase.get_IsStatic, X0
	132 And W31, W0, 1
	133 Move W8, 4
	134 Move W9, 8
	135 NotImplemented "Instruction CSEL not yet implemented."
	136 Compare X21, 0
	137 JumpIfEqual {172}
	138 Move X8, [X21]
	139 Move X0, X21
	140 Move X9, [X8+440]
	141 Move X1, [X8+448]
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X8, [X19]
	144 Move X20, X0
	145 Move X0, X19
	146 Move X9, [X8+424]
	147 Move X1, [X8+432]
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Compare X20, 0
	150 JumpIfEqual {172}
	151 Move X8, [X20]
	152 Move X1, X0
	153 Or W2, W23, W22
	154 Move X0, X20
	155 Move X4, [X8+1624]
	156 Move X3, [X8+1632]
	157 Move X20, [X31+32]
	158 Move X19, [X31+40]
	159 Move X22, [X31+16]
	160 Move X21, [X31+24]
	161 Move X30, [X31+48]
	162 Move X23, [X31+56]
	163 CallNoReturn X4
	164 Move X20, [X31+32]
	165 Move X19, [X31+40]
	166 Move X22, [X31+16]
	167 Move X21, [X31+24]
	168 Move X0, X31
	169 Move X30, [X31+48]
	170 Move X23, [X31+56]
	171 Return X0
	172 Call 0x1C17F20
	173 Move X0, X20
	174 Call 0x1C181E0

Method: System.Reflection.ICustomAttributeProvider GetBase(System.Reflection.ICustomAttributeProvider obj)

Disassembly:
	0x033C8D6C LDR W10, [X23 + 0x1C]
	0x033C8D70 LDR X8, [X23 + 0x10]
	0x033C8D74 LDR X9, [X9 + 0x990]
	0x033C8D78 ADD W10, W10, 0x1
	0x033C8D7C LDR X9, [X9]
	0x033C8D80 STR W10, [X23 + 0x1C]
	0x033C8D84 CBZ X8, 0x33C8F3C
	0x033C8D88 LDRSW X10, [X23 + 0x18]
	0x033C8D8C LDR W11, [X8 + 0x18]
	0x033C8D90 CMP W10, W11
	0x033C8D94 B.CS 0x33C8DAC
	0x033C8D98 ADD W9, W10, 0x1
	0x033C8D9C ADD X8, X8, X10, 0x3, LSL
	0x033C8DA0 STR W9, [X23 + 0x18]
	0x033C8DA4 STR X28, [X8 + 0x20]
	0x033C8DA8 B 0x33C8DC4
	0x033C8DAC LDR X8, [X9 + 0x20]
	0x033C8DB0 LDR X8, [X8 + 0xC0]
	0x033C8DB4 LDR X2, [X8 + 0x70]
	0x033C8DB8 MOV X0, X23
	0x033C8DBC MOV X1, X28
	0x033C8DC0 BL 0x301BF90
	0x033C8DC4 LDR X8, [X31 + 0x8]
	0x033C8DC8 CBNZ X8, 0x33C8BC8
	0x033C8DCC ADRP X8, 0xD64000
	0x033C8DD0 LDR X8, [X8 + 0x8D8]
	0x033C8DD4 LDR X0, [X8]
	0x033C8DD8 BL 0x1C16F10
	0x033C8DDC STR X29, [X0 + 0x10]
	0x033C8DE0 STR W24, [X0 + 0x18]
	0x033C8DE4 ADRP X8, 0xD64000
	0x033C8DE8 LDR X8, [X8 + 0x8E0]
	0x033C8DEC MOV X2, X0
	0x033C8DF0 LDR X3, [X8]
	0x033C8DF4 MOV X0, X22
	0x033C8DF8 MOV X1, X27
	0x033C8DFC BL 0x2AA5098
	0x033C8E00 B 0x33C8BC8
	0x033C8E04 MOV X27, X31
	0x033C8E08 MOVZ W28, 0x2D
	0x033C8E0C CBZ X21, 0x33C8E70
	0x033C8E10 LDR X8, [X21]
	0x033C8E14 ADRP X10, 0xD2B000
	0x033C8E18 LDRH W9, [X8 + 0x12E]
	0x033C8E1C LDR X10, [X10 + 0xE00]
	0x033C8E20 LDR X1, [X10]
	0x033C8E24 CBZ X9, 0x33C8E48
	0x033C8E28 LDR X10, [X8 + 0xB0]
	0x033C8E2C ADD X10, X10, 0x8
	0x033C8E30 LDUR X11, [X10 - 0x8]
	0x033C8E34 CMP X11, X1
	0x033C8E38 B.EQ 0x33C8E58
	0x033C8E3C SUBS X9, X9, 0x1
	0x033C8E40 ADD X10, X10, 0x10
	0x033C8E44 B.NE 0x33C8E30
	0x033C8E48 MOV X0, X21
	0x033C8E4C MOV W2, W31
	0x033C8E50 BL 0x1C5C788
	0x033C8E54 B 0x33C8E64
	0x033C8E58 LDRSW X9, [X10]
	0x033C8E5C ADD X8, X8, X9, 0x4, LSL
	0x033C8E60 ADD X0, X8, 0x138
	0x033C8E64 LDP X8, X1, [X0]
	0x033C8E68 MOV X0, X21
	0x033C8E6C BLR X8
	0x033C8E70 CBNZ X27, 0x33C979C
	0x033C8E74 CMP W28, 0x2D
	0x033C8E78 B.EQ 0x33C8E80
	0x033C8E7C CBNZ W28, 0x33C90C4
	0x033C8E80 ADRP X21, 0xD5E000
	0x033C8E84 LDR X21, [X21 + 0x3E0]
	0x033C8E88 LDR X0, [X21]
	0x033C8E8C LDR W8, [X0 + 0xE0]
	0x033C8E90 CBNZ W8, 0x33C8E98
	0x033C8E94 BL 0x1C16DFC
	0x033C8E98 LDR X0, [X31]
	0x033C8E9C BL 0x33C7D6C
	0x033C8EA0 CBZ X0, 0x33C9040
	0x033C8EA4 MOV X27, X0
	0x033C8EA8 LDR X0, [X21]
	0x033C8EAC LDR W8, [X0 + 0xE0]
	0x033C8EB0 CBNZ W8, 0x33C8EB8
	0x033C8EB4 BL 0x1C16DFC
	0x033C8EB8 MOVZ W2, 0x1
	0x033C8EBC MOV X0, X27
	0x033C8EC0 MOV X1, X19
	0x033C8EC4 ADD W24, W24, 0x1
	0x033C8EC8 BL 0x33C855C
	0x033C8ECC MOV X21, X0
	0x033C8ED0 CBNZ X0, 0x33C8B5C
	0x033C8ED4 B 0x33C9798
	0x033C8ED8 ADRP X0, 0xD64000
	0x033C8EDC LDR X0, [X0 + 0x918]
	0x033C8EE0 BL 0x1C16D08
	0x033C8EE4 BL 0x1C16F10
	0x033C8EE8 MOV X27, X0
	0x033C8EEC ADRP X0, 0xD64000
	0x033C8EF0 LDR X0, [X0 + 0x9B0]
	0x033C8EF4 BL 0x1C16D08
	0x033C8EF8 MOV X1, X0
	0x033C8EFC MOV X0, X27
	0x033C8F00 MOV X2, X31
	0x033C8F04 BL 0x32CC9D4
	0x033C8F08 ADRP X0, 0xD64000
	0x033C8F0C LDR X0, [X0 + 0x9B8]
	0x033C8F10 BL 0x1C16D08
	0x033C8F14 MOV X1, X0
	0x033C8F18 MOV X0, X27
	0x033C8F1C BL 0x1C16DEC
	0x033C8F20 B 0x33C98C8
	0x033C8F24 BL 0x1C16F20
	0x033C8F28 B 0x33C98C8
	0x033C8F2C BL 0x1C16F20
	0x033C8F30 B 0x33C98C8
	0x033C8F34 BL 0x1C16F20
	0x033C8F38 B 0x33C98C8
	0x033C8F3C BL 0x1C16F20
	0x033C8F40 B 0x33C98C8
	0x033C8F44 BL 0x1C16F20
	0x033C8F48 B 0x33C98C8
	0x033C8F4C BL 0x1C16F20
	0x033C8F50 B 0x33C98C8
	0x033C8F54 BL 0x1C16F20
	0x033C8F58 B 0x33C98C8
	0x033C8F5C BL 0x1C16F20
	0x033C8F60 B 0x33C98C8
	0x033C8F64 B 0x33C8FAC
	0x033C8F68 B 0x33C8FAC
	0x033C8F6C B 0x33C8FAC
	0x033C8F70 B 0x33C8FAC
	0x033C8F74 B 0x33C8FAC
	0x033C8F78 B 0x33C8FAC
	0x033C8F7C B 0x33C8FAC
	0x033C8F80 B 0x33C8FAC
	0x033C8F84 B 0x33C8FAC
	0x033C8F88 B 0x33C8FAC
	0x033C8F8C B 0x33C8FAC
	0x033C8F90 B 0x33C8FAC
	0x033C8F94 B 0x33C8FAC
	0x033C8F98 B 0x33C8FAC
	0x033C8F9C B 0x33C8FAC
	0x033C8FA0 B 0x33C8FAC
	0x033C8FA4 B 0x33C8FAC
	0x033C8FA8 B 0x33C8FAC
	0x033C8FAC CMP W1, 0x1
	0x033C8FB0 B.NE 0x33C98BC
	0x033C8FB4 BL 0x3EB1AD0
	0x033C8FB8 LDR X27, [X0]
	0x033C8FBC BL 0x3EB1AE0
	0x033C8FC0 MOV W28, W31
	0x033C8FC4 CBNZ X21, 0x33C8E10
	0x033C8FC8 B 0x33C8E70
	0x033C8FCC ADRP X8, 0xD2B000
	0x033C8FD0 LDR X8, [X8 + 0x6C0]
	0x033C8FD4 LDR X0, [X8]
	0x033C8FD8 LDR W8, [X0 + 0xE0]
	0x033C8FDC CBNZ W8, 0x33C8FE4
	0x033C8FE0 BL 0x1C16DFC
	0x033C8FE4 MOV X0, X19
	0x033C8FE8 MOV X1, X31
	0x033C8FEC MOV X2, X31
	0x033C8FF0 BL 0x3395194
	0x033C8FF4 TBZ X0, 0x0, 0x33C9054
	0x033C8FF8 ADRP X10, 0xD64000
	0x033C8FFC LDR X8, [X21]
	0x033C9000 B 0x3EB18A4
	0x033C9004 LDRH W9, [X8 + 0x12E]
	0x033C9008 LDR X1, [X10]
	0x033C900C CBZ X9, 0x33C9030
	0x033C9010 LDR X10, [X8 + 0xB0]
	0x033C9014 ADD X10, X10, 0x8
	0x033C9018 LDUR X11, [X10 - 0x8]
	0x033C901C CMP X11, X1
	0x033C9020 B.EQ 0x33C91A0
	0x033C9024 SUBS X9, X9, 0x1
	0x033C9028 ADD X10, X10, 0x10
	0x033C902C B.NE 0x33C9018
	0x033C9030 MOV X0, X21
	0x033C9034 MOV W2, W31
	0x033C9038 BL 0x1C5C788
	0x033C903C B 0x33C91AC
	0x033C9040 CBZ X23, 0x33C9798
	0x033C9044 ADRP X8, 0xD63000
	0x033C9048 LDR X8, [X8 + 0x998]
	0x033C904C MOV X0, X23
	0x033C9050 B 0x33C9768
	0x033C9054 ADRP X8, 0xD63000
	0x033C9058 LDR X8, [X8 + 0x9A8]
	0x033C905C LDR X0, [X8]
	0x033C9060 BL 0x1C16F10
	0x033C9064 ADRP X8, 0xD63000
	0x033C9068 LDR X8, [X8 + 0x9A0]
	0x033C906C MOV W1, W24
	0x033C9070 MOV X20, X0
	0x033C9074 LDR X2, [X8]
	0x033C9078 BL 0x301B830
	0x033C907C ADRP X10, 0xD63000
	0x033C9080 LDR X8, [X21]
	0x033C9084 LDR X10, [X10 + 0x978]
	0x033C9088 LDRH W9, [X8 + 0x12E]
	0x033C908C LDR X1, [X10]
	0x033C9090 CBZ X9, 0x33C90B4
	0x033C9094 LDR X10, [X8 + 0xB0]
	0x033C9098 ADD X10, X10, 0x8
	0x033C909C LDUR X11, [X10 - 0x8]
	0x033C90A0 CMP X11, X1
	0x033C90A4 B.EQ 0x33C9324
	0x033C90A8 SUBS X9, X9, 0x1
	0x033C90AC ADD X10, X10, 0x10
	0x033C90B0 B.NE 0x33C909C
	0x033C90B4 MOV X0, X21
	0x033C90B8 MOV W2, W31
	0x033C90BC BL 0x1C5C788
	0x033C90C0 B 0x33C9330
	0x033C90C4 B 0x33C9774
	0x033C90C8 LDRSW X9, [X10]
	0x033C90CC ADD X8, X8, X9, 0x4, LSL
	0x033C90D0 ADD X0, X8, 0x138
	0x033C90D4 LDP X8, X2, [X0]
	0x033C90D8 MOV X0, X21
	0x033C90DC MOV W1, W31
	0x033C90E0 BLR X8
	0x033C90E4 CBZ X0, 0x33C9860
	0x033C90E8 ADRP X8, 0xD2A000
	0x033C90EC LDR X8, [X8 + 0x6C0]
	0x033C90F0 LDR X0, [X8]
	0x033C90F4 LDR W8, [X0 + 0xE0]
	0x033C90F8 CBNZ W8, 0x33C9100
	0x033C90FC BL 0x1C16DFC
	0x033C9100 MOV X0, X19
	0x033C9104 MOV X1, X31
	0x033C9108 MOV X2, X31
	0x033C910C BL 0x3395F0C
	0x033C9110 TBZ X0, 0x0, 0x33C9154
	0x033C9114 LDR X8, [X21]
	0x033C9118 LDR X1, [X20]
	0x033C911C LDRH W9, [X8 + 0x12E]
	0x033C9120 CBZ X9, 0x33C9144
	0x033C9124 LDR X10, [X8 + 0xB0]
	0x033C9128 ADD X10, X10, 0x8
	0x033C912C LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1016000
	007 Move W8, [X20+650]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {36}
	013 Move X0, 0xD5D000
	014 Move X0, [X0+632]
	015 Call 0x1C17CF4
	016 Move X0, 0xD5F000
	017 Move X0, [X0+992]
	018 Call 0x1C17CF4
	019 Move X0, 0xD65000
	020 Move X0, [X0+208]
	021 Call 0x1C17CF4
	022 Move X0, 0xD5D000
	023 Move X0, [X0+2464]
	024 Call 0x1C17CF4
	025 Move X0, 0xD5F000
	026 Move X0, [X0+1272]
	027 Call 0x1C17CF4
	028 Move X0, 0xD5F000
	029 Move X0, [X0+480]
	030 Call 0x1C17CF4
	031 Move X0, 0xD2C000
	032 Move X0, [X0+1728]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+650], W8
	036 Compare X19, 0
	037 JumpIfEqual {120}
	038 Move X9, 0xD2C000
	039 Move X9, [X9+1728]
	040 Move X8, [X19]
	041 Move X10, [X9]
	042 Move W9, [X8+304]
	043 Move W11, [X10+304]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X12, [X8+200]
	046 Add X11, X12, X11
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, 0xD5F000
	050 Move X20, [X20+480]
	051 Move X1, [X20]
	052 Move W10, [X1+304]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X11, [X8+200]
	055 Add X11, X11, X10
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X20, 0xD65000
	059 Move X20, [X20+208]
	060 Move X10, [X20]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X22, 0xD5D000
	063 Move X22, [X22+2464]
	064 Move X11, [X22]
	065 Move W12, [X11+304]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X10, [X8+200]
	068 Add X12, X10, X12
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X20, X31
	072 Move X10, 0xD5F000
	073 Move X10, [X10+1272]
	074 Move X10, [X10]
	075 Move W11, [X10+304]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X9, [X8+200]
	078 Add X9, X9, X11
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X0, X20
	082 Move X1, X31
	083 Move X2, X31
	084 Call MethodInfo.op_Equality, X0, X1
	085 Move W8, W0
	086 Move X0, X31
	087 Move TEMP, X8
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {121}
	091 Compare X20, 0
	092 JumpIfEqual {245}
	093 Move X0, X20
	094 Move X1, X31
	095 Call MethodBase.get_IsVirtual, X0
	096 Move W8, W0
	097 Move X0, X31
	098 Move TEMP, X8
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {121}
	102 Move X8, [X20]
	103 Move X1, [X22]
	104 Move W10, [X8+304]
	105 Move W9, [X1+304]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X8, [X8+200]
	108 Add X8, X8, X9
	109 NotImplemented "Instruction LDUR not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X0, X20
	112 Move X1, X31
	113 Call RuntimeMethodInfo.GetBaseMethod, X0
	114 Move X1, X20
	115 Move X2, X31
	116 Move X19, X0
	117 Call MethodInfo.op_Equality, X0, X1
	118 And W31, W0, 1
	119 NotImplemented "Instruction CSEL not yet implemented."
	120 Move X0, X31
	121 Move X20, [X31+32]
	122 Move X19, [X31+40]
	123 Move X22, [X31+16]
	124 Move X21, [X31+24]
	125 Move X30, [X31+48]
	126 Return X0
	127 Move X8, 0xD5F000
	128 Move X8, [X8+992]
	129 Move X0, [X8]
	130 Move W8, [X0+224]
	131 Compare W8, 0
	132 JumpIfNotEqual {137}
	133 Call 0x1C17DFC
	134 Move X1, [X20]
	135 Move X8, [X19]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X0, X19
	138 Move X20, [X31+32]
	139 Move X19, [X31+40]
	140 Move X22, [X31+16]
	141 Move X21, [X31+24]
	142 Move X30, [X31+48]
	143 Call MonoCustomAttrs.GetBaseEventDefinition, X0
	144 Return X0
	145 Move X2, [X8+2072]
	146 Move X1, [X8+2080]
	147 Move X0, X19
	148 Move X20, [X31+32]
	149 Move X19, [X31+40]
	150 Move X22, [X31+16]
	151 Move X21, [X31+24]
	152 Move X30, [X31+48]
	153 CallNoReturn X2
	154 Move X11, 0xD5F000
	155 Move X11, [X11+992]
	156 Move X0, [X11]
	157 Move W11, [X0+224]
	158 Compare W11, 0
	159 JumpIfNotEqual {165}
	160 Call 0x1C17DFC
	161 Move X8, [X19]
	162 Move X1, [X20]
	163 Move W9, [X8+304]
	164 Move W10, [X1+304]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move X8, [X8+200]
	167 Add X8, X8, W10
	168 NotImplemented "Instruction LDUR not yet implemented."
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move X0, X19
	171 Move X20, [X31+32]
	172 Move X19, [X31+40]
	173 Move X22, [X31+16]
	174 Move X21, [X31+24]
	175 Move X30, [X31+48]
	176 Call MonoCustomAttrs.GetBasePropertyDefinition, X0
	177 Return X0
	178 Move X11, 0xD5C000
	179 Move X11, [X11+632]
	180 Move X1, [X11]
	181 Move W11, [X1+304]
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Add X10, X10, X11
	184 NotImplemented "Instruction LDUR not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X20, X19
	187 Move X9, [X8+440]
	188 Move X1, [X8+448]
	189 Move X0, X19
	190 NotImplemented "Instruction BLR not yet implemented."
	191 Compare X0, 0
	192 JumpIfEqual {81}
	193 Move X8, 0xD5C000
	194 Move X8, [X8+632]
	195 Move X9, [X0]
	196 Move X21, X0
	197 Move X10, [X8]
	198 Move W8, [X9+304]
	199 Move W11, [X10+304]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move X9, [X9+200]
	202 Add X11, X9, X11
	203 NotImplemented "Instruction LDUR not yet implemented."
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move X1, [X22]
	206 Move W10, [X1+304]
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Add X8, X9, X10
	209 NotImplemented "Instruction LDUR not yet implemented."
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move X0, X21
	212 Move X1, X31
	213 Call RuntimeMethodInfo.GetBaseMethod, X0
	214 Move X1, X21
	215 Move X2, X31
	216 Move X20, X0
	217 Call MethodInfo.op_Equality, X0, X1
	218 Move W8, W0
	219 Move X0, X31
	220 Move TEMP, X8
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfEqual {121}
	224 Compare X20, 0
	225 JumpIfEqual {245}
	226 Move X8, [X20]
	227 Move X0, X20
	228 Move X9, [X8+584]
	229 Move X1, [X8+592]
	230 NotImplemented "Instruction BLR not yet implemented."
	231 Move X8, [X19]
	232 Move X20, X0
	233 Move X0, X19
	234 Move X9, [X8+488]
	235 Move X1, [X8+496]
	236 NotImplemented "Instruction BLR not yet implemented."
	237 Compare X20, 0
	238 JumpIfEqual {245}
	239 Move W8, [X20+24]
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Add X8, X20, W0
	242 Move X0, [X8+32]
	243 Move X0, X19
	244 Call 0x1C181E0
	245 Call 0x1C17F20
	246 Move X0, X20
	247 Call 0x1C181E0
	248 Move X0, X21
	249 Call 0x1C181E0
	250 Call 0x1C17F28

Method: System.AttributeUsageAttribute RetrieveAttributeUsageNoCache(System.Type attributeType)

Disassembly:
	0x033CB76C ADRP X8, 0xD59000
	0x033CB770 LDR X8, [X8 + 0xBB0]
	0x033CB774 LDR X9, [X20]
	0x033CB778 LDR X8, [X8]
	0x033CB77C LDRB W11, [X9 + 0x130]
	0x033CB780 LDRB W10, [X8 + 0x130]
	0x033CB784 CMP W11, W10
	0x033CB788 B.CC 0x33CB7BC
	0x033CB78C LDR X9, [X9 + 0xC8]
	0x033CB790 ADD X9, X9, X10, 0x3, LSL
	0x033CB794 LDUR X9, [X9 - 0x8]
	0x033CB798 CMP X9, X8
	0x033CB79C B.NE 0x33CB7BC
	0x033CB7A0 MOV X0, X19
	0x033CB7A4 MOV X2, X20
	0x033CB7A8 LDP X20, X19, [X31 + 0x20]
	0x033CB7AC LDP X22, X21, [X31 + 0x10]
	0x033CB7B0 MOV X4, X31
	0x033CB7B4 LDR X30, [X31], #0x30
	0x033CB7B8 B 0x32A89BC
	0x033CB7BC MOV X0, X20
	0x033CB7C0 MOV X1, X8
	0x033CB7C4 BL 0x1C171E0
	0x033CB7C8 ADRP X0, 0xD2D000
	0x033CB7CC LDR X0, [X0 + 0x528]
	0x033CB7D0 BL 0x1C16D08
	0x033CB7D4 BL 0x1C16F10
	0x033CB7D8 MOV X19, X0
	0x033CB7DC ADRP X0, 0xD52000
	0x033CB7E0 LDR X0, [X0 + 0x2D8]
	0x033CB7E4 BL 0x1C16D08
	0x033CB7E8 MOV X1, X0
	0x033CB7EC MOV X0, X19
	0x033CB7F0 MOV X2, X31
	0x033CB7F4 BL 0x330E100
	0x033CB7F8 B 0x33CB82C
	0x033CB7FC ADRP X0, 0xD52000
	0x033CB800 LDR X0, [X0 + 0x2E0]
	0x033CB804 BL 0x1C16D08
	0x033CB808 BL 0x1C16F10
	0x033CB80C MOV X19, X0
	0x033CB810 ADRP X0, 0xD61000
	0x033CB814 LDR X0, [X0 + 0xA28]
	0x033CB818 BL 0x1C16D08
	0x033CB81C MOV X1, X0
	0x033CB820 MOV X0, X19
	0x033CB824 MOV X2, X31
	0x033CB828 BL 0x329F100
	0x033CB82C ADRP X0, 0xD61000
	0x033CB830 LDR X0, [X0 + 0xA30]
	0x033CB834 BL 0x1C16D08
	0x033CB838 MOV X1, X0
	0x033CB83C MOV X0, X19
	0x033CB840 BL 0x1C16DEC
	0x033CB844 SUB X31, X31, 0x40
	0x033CB848 STP X30, X23, [X31 + 0x10]
	0x033CB84C STP X22, X21, [X31 + 0x20]
	0x033CB850 STP X20, X19, [X31 + 0x30]
	0x033CB854 ADRP X21, 0x1012000
	0x033CB858 LDRB W8, [X21 + 0x296]
	0x033CB85C MOV X19, X1
	0x033CB860 MOV X20, X0
	0x033CB864 TBNZ X8, 0x0, 0x33CB888
	0x033CB868 ADRP X0, 0xD61000
	0x033CB86C LDR X0, [X0 + 0xA38]
	0x033CB870 BL 0x1C16CF4
	0x033CB874 ADRP X0, 0xD28000
	0x033CB878 LDR X0, [X0 + 0x6C0]
	0x033CB87C BL 0x1C16CF4
	0x033CB880 MOVZ W8, 0x1
	0x033CB884 STRB W8, [X21 + 0x296]
	0x033CB888 CBZ X19, 0x33CB8EC
	0x033CB88C ADRP X23, 0xD61000
	0x033CB890 LDR X23, [X23 + 0xA38]
	0x033CB894 LDR X8, [X20]
	0x033CB898 ADRP X22, 0xD28000
	0x033CB89C ADD X1, X31, 0x8
	0x033CB8A0 LDR X0, [X23]
	0x033CB8A4 LDR X22, [X22 + 0x6C0]
	0x033CB8A8 STR X8, [X31 + 0x8]
	0x033CB8AC BL 0x1C16E04
	0x033CB8B0 BL 0x1C25764
	0x033CB8B4 MOV X21, X0
	0x033CB8B8 MOV X0, X19
	0x033CB8BC BL 0x1C25764
	0x033CB8C0 LDR X8, [X22]
	0x033CB8C4 MOV X22, X0
	0x033CB8C8 LDR W9, [X8 + 0xE0]
	0x033CB8CC CBNZ W9, 0x33CB8D8
	0x033CB8D0 MOV X0, X8
	0x033CB8D4 BL 0x1C16DFC
	0x033CB8D8 MOV X0, X21
	0x033CB8DC MOV X1, X22
	0x033CB8E0 MOV X2, X31
	0x033CB8E4 BL 0x3395F0C
	0x033CB8E8 TBZ X0, 0x0, 0x33CB8F4
	0x033CB8EC MOV W0, W31
	0x033CB8F0 B 0x33CB924
	0x033CB8F4 LDR X8, [X19]
	0x033CB8F8 LDR X1, [X23]
	0x033CB8FC LDR X8, [X8 + 0x40]
	0x033CB900 LDR X9, [X1 + 0x40]
	0x033CB904 CMP X8, X9
	0x033CB908 B.NE 0x33CB938
	0x033CB90C LDR X20, [X20]
	0x033CB910 MOV X0, X19
	0x033CB914 BL 0x1C16E08
	0x033CB918 LDR X8, [X0]
	0x033CB91C CMP X20, X8
	0x033CB920 CSET W0, EQ
	0x033CB924 LDP X20, X19, [X31 + 0x30]
	0x033CB928 LDP X22, X21, [X31 + 0x20]
	0x033CB92C LDP X30, X23, [X31 + 0x10]
	0x033CB930 ADD X31, X31, 0x40
	0x033CB934 RET
	0x033CB938 MOV X0, X19
	0x033CB93C BL 0x1C171E0
	0x033CB940 LDR W0, [X0]
	0x033CB944 RET
	0x033CB948 B 0x1C179F0
	0x033CB94C B 0x1C179F0
	0x033CB950 B 0x1C178A0
	0x033CB954 STR X1, [X0]
	0x033CB958 RET
	0x033CB95C STR X30, [X31 - 0x30]!
	0x033CB960 STP X22, X21, [X31 + 0x10]
	0x033CB964 STP X20, X19, [X31 + 0x20]
	0x033CB968 ADRP X21, 0x1012000
	0x033CB96C LDRB W8, [X21 + 0x297]
	0x033CB970 MOV X20, X1
	0x033CB974 MOV X19, X0
	0x033CB978 TBNZ X8, 0x0, 0x33CB9B4
	0x033CB97C ADRP X0, 0xD61000
	0x033CB980 LDR X0, [X0 + 0xA40]
	0x033CB984 BL 0x1C16CF4
	0x033CB988 ADRP X0, 0xD59000
	0x033CB98C LDR X0, [X0 + 0x9A0]
	0x033CB990 BL 0x1C16CF4
	0x033CB994 ADRP X0, 0xD28000
	0x033CB998 LDR X0, [X0 + 0x6C0]
	0x033CB99C BL 0x1C16CF4
	0x033CB9A0 ADRP X0, 0xD61000
	0x033CB9A4 LDR X0, [X0 + 0xA48]
	0x033CB9A8 BL 0x1C16CF4
	0x033CB9AC MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1013000
	007 Move X22, 0xD62000
	008 Move X21, 0xD29000
	009 Move W8, [X20+651]
	010 Move X22, [X22+2520]
	011 Move X21, [X21+1728]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xD62000
	018 Move X0, [X0+2520]
	019 Call 0x1C17CF4
	020 Move X0, 0xD5D000
	021 Move X0, [X0+3984]
	022 Call 0x1C17CF4
	023 Move X0, 0xD5C000
	024 Move X0, [X0+992]
	025 Call 0x1C17CF4
	026 Move X0, 0xD29000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+651], W8
	031 Move X0, [X21]
	032 Move X20, [X22]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X20
	038 Move X1, X31
	039 Call Type.GetTypeFromHandle, X0
	040 Move X1, X0
	041 Move X0, X19
	042 Move X2, X31
	043 Call Type.op_Equality, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {57}
	048 Move X8, 0xD5D000
	049 Move X8, [X8+3984]
	050 Move X0, [X8]
	051 Call 0x1C17F10
	052 Move W1, 4
	053 Move X2, X31
	054 Move X19, X0
	055 Call AttributeUsageAttribute..ctor, X0, X1
	056 Move X0, X19
	057 Move X0, [X21]
	058 Move X20, [X22]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X20
	064 Move X1, X31
	065 Call Type.GetTypeFromHandle, X0
	066 Move X22, 0xD5C000
	067 Move X22, [X22+992]
	068 Move X20, X0
	069 Move X8, [X22]
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {75}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X0, X19
	076 Move X1, X20
	077 Move W2, W31
	078 Call MonoCustomAttrs.GetCustomAttributes, X0, X1, X2
	079 Compare X0, 0
	080 JumpIfEqual {148}
	081 Move X8, [X0+24]
	082 Compare X8, 0
	083 JumpIfEqual {96}
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Compare W8, 0
	086 JumpIfEqual {167}
	087 Move X0, [X0+32]
	088 Compare X0, 0
	089 JumpIfEqual {142}
	090 Move X8, 0xD5D000
	091 Move X8, [X8+3984]
	092 Move X1, [X8]
	093 Move X8, [X0]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Call 0x1C181E0
	096 Compare X19, 0
	097 JumpIfEqual {148}
	098 Move X8, [X19]
	099 Move X0, X19
	100 Move X9, [X8+2072]
	101 Move X1, [X8+2080]
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X8, [X21]
	104 Move X20, X0
	105 Move W9, [X8+224]
	106 Compare W9, 0
	107 JumpIfNotEqual {110}
	108 Move X0, X8
	109 Call 0x1C17DFC
	110 Move X0, X20
	111 Move X1, X31
	112 Move X2, X31
	113 Call Type.op_Inequality, X0, X1
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {134}
	118 Move X8, [X19]
	119 Move X0, X19
	120 Move X9, [X8+2072]
	121 Move X1, [X8+2080]
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Move X8, [X22]
	124 Move X19, X0
	125 Move W9, [X8+224]
	126 Compare W9, 0
	127 JumpIfNotEqual {130}
	128 Move X0, X8
	129 Call 0x1C17DFC
	130 Move X0, X19
	131 Call MonoCustomAttrs.RetrieveAttributeUsage, X0
	132 Compare X0, 0
	133 JumpIfNotEqual {142}
	134 Move X0, [X22]
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {140}
	138 Call 0x1C17DFC
	139 Move X0, [X22]
	140 Move X8, [X0+184]
	141 Move X0, [X8+8]
	142 Move X20, [X31+32]
	143 Move X19, [X31+40]
	144 Move X22, [X31+16]
	145 Move X21, [X31+24]
	146 Move X30, [X31+48]
	147 Return X0
	148 Call 0x1C17F20
	149 Move X0, 0xD56000
	150 Move X0, [X0+3080]
	151 Call 0x1C17D08
	152 Call 0x1C17F10
	153 Move X19, X0
	154 Move X0, 0xD62000
	155 Move X0, [X0+2528]
	156 Call 0x1C17D08
	157 Move X1, X0
	158 Move X0, X19
	159 Move X2, X31
	160 Call FormatException..ctor, X0, X1
	161 Move X0, 0xD62000
	162 Move X0, [X0+2536]
	163 Call 0x1C17D08
	164 Move X1, X0
	165 Move X0, X19
	166 Call 0x1C17DEC
	167 Call 0x1C17F28

Method: System.AttributeUsageAttribute RetrieveAttributeUsage(System.Type attributeType)

Disassembly:
	0x033C9130 CMP X11, X1
	0x033C9134 B.EQ 0x33C94F0
	0x033C9138 SUBS X9, X9, 0x1
	0x033C913C ADD X10, X10, 0x10
	0x033C9140 B.NE 0x33C912C
	0x033C9144 MOV X0, X21
	0x033C9148 MOV W2, W31
	0x033C914C BL 0x1C5C788
	0x033C9150 B 0x33C94FC
	0x033C9154 ADRP X8, 0xD5C000
	0x033C9158 LDR X8, [X8 + 0xC78]
	0x033C915C MOVZ W1, 0x1
	0x033C9160 LDR X0, [X8]
	0x033C9164 BL 0x1C16D6C
	0x033C9168 LDR X8, [X21]
	0x033C916C LDR X1, [X20]
	0x033C9170 MOV X19, X0
	0x033C9174 LDRH W9, [X8 + 0x12E]
	0x033C9178 CBZ X9, 0x33C9580
	0x033C917C LDR X10, [X8 + 0xB0]
	0x033C9180 ADD X10, X10, 0x8
	0x033C9184 LDUR X11, [X10 - 0x8]
	0x033C9188 CMP X11, X1
	0x033C918C B.EQ 0x33C95EC
	0x033C9190 SUBS X9, X9, 0x1
	0x033C9194 ADD X10, X10, 0x10
	0x033C9198 B.NE 0x33C9184
	0x033C919C B 0x33C9580
	0x033C91A0 LDRSW X9, [X10]
	0x033C91A4 ADD X8, X8, X9, 0x4, LSL
	0x033C91A8 ADD X0, X8, 0x138
	0x033C91AC LDP X8, X1, [X0]
	0x033C91B0 MOV X0, X21
	0x033C91B4 BLR X8
	0x033C91B8 MOV X19, X0
	0x033C91BC CBZ X0, 0x33C9894
	0x033C91C0 ADRP X20, 0xD2A000
	0x033C91C4 ADRP X22, 0xD63000
	0x033C91C8 LDR X20, [X20 + 0xE18]
	0x033C91CC LDR X22, [X22 + 0x980]
	0x033C91D0 LDR X8, [X19]
	0x033C91D4 LDR X1, [X20]
	0x033C91D8 LDRH W9, [X8 + 0x12E]
	0x033C91DC CBZ X9, 0x33C9200
	0x033C91E0 LDR X10, [X8 + 0xB0]
	0x033C91E4 ADD X10, X10, 0x8
	0x033C91E8 LDUR X11, [X10 - 0x8]
	0x033C91EC CMP X11, X1
	0x033C91F0 B.EQ 0x33C9210
	0x033C91F4 SUBS X9, X9, 0x1
	0x033C91F8 ADD X10, X10, 0x10
	0x033C91FC B.NE 0x33C91E8
	0x033C9200 MOV X0, X19
	0x033C9204 MOV W2, W31
	0x033C9208 BL 0x1C5C788
	0x033C920C B 0x33C921C
	0x033C9210 LDRSW X9, [X10]
	0x033C9214 ADD X8, X8, X9, 0x4, LSL
	0x033C9218 ADD X0, X8, 0x138
	0x033C921C LDP X8, X1, [X0]
	0x033C9220 MOV X0, X19
	0x033C9224 BLR X8
	0x033C9228 TBZ X0, 0x0, 0x33C92D0
	0x033C922C LDR X8, [X19]
	0x033C9230 LDR X1, [X22]
	0x033C9234 LDRH W9, [X8 + 0x12E]
	0x033C9238 CBZ X9, 0x33C925C
	0x033C923C LDR X10, [X8 + 0xB0]
	0x033C9240 ADD X10, X10, 0x8
	0x033C9244 LDUR X11, [X10 - 0x8]
	0x033C9248 CMP X11, X1
	0x033C924C B.EQ 0x33C926C
	0x033C9250 SUBS X9, X9, 0x1
	0x033C9254 ADD X10, X10, 0x10
	0x033C9258 B.NE 0x33C9244
	0x033C925C MOV X0, X19
	0x033C9260 MOV W2, W31
	0x033C9264 BL 0x1C5C788
	0x033C9268 B 0x33C9278
	0x033C926C LDRSW X9, [X10]
	0x033C9270 ADD X8, X8, X9, 0x4, LSL
	0x033C9274 ADD X0, X8, 0x138
	0x033C9278 LDP X8, X1, [X0]
	0x033C927C MOV X0, X19
	0x033C9280 BLR X8
	0x033C9284 CBNZ X0, 0x33C91D0
	0x033C9288 ADRP X0, 0xD63000
	0x033C928C LDR X0, [X0 + 0x918]
	0x033C9290 BL 0x1C16D08
	0x033C9294 BL 0x1C16F10
	0x033C9298 MOV X20, X0
	0x033C929C ADRP X0, 0xD63000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1015000
	007 Move X21, 0xD5E000
	008 Move W8, [X20+652]
	009 Move X21, [X21+992]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0xD64000
	016 Move X0, [X0+2352]
	017 Call 0x1C17CF4
	018 Move X0, 0xD64000
	019 Move X0, [X0+2360]
	020 Call 0x1C17CF4
	021 Move X0, 0xD64000
	022 Move X0, [X0+2368]
	023 Call 0x1C17CF4
	024 Move X0, 0xD64000
	025 Move X0, [X0+2376]
	026 Call 0x1C17CF4
	027 Move X0, 0xD5E000
	028 Move X0, [X0+992]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+652], W8
	032 Move X0, [X21]
	033 Move [X31+8], X31
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X21]
	039 Call 0x1C17D0C
	040 Move X8, [X0]
	041 Compare X8, 0
	042 JumpIfNotEqual {62}
	043 Move X8, 0xD64000
	044 Move X8, [X8+2376]
	045 Move X0, [X8]
	046 Call 0x1C17F10
	047 Move X8, 0xD64000
	048 Move X8, [X8+2360]
	049 Move X20, X0
	050 Move X1, [X8]
	051 Call Dictionary`2<Object, Object>..ctor, X0
	052 Move X0, [X21]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {58}
	056 Call 0x1C17DFC
	057 Move X0, [X21]
	058 Call 0x1C17D0C
	059 Move [X0], X20
	060 Move X0, [X21]
	061 Call 0x1C17D0C
	062 Move X0, [X21]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {68}
	066 Call 0x1C17DFC
	067 Move X0, [X21]
	068 Call 0x1C17D0C
	069 Move X0, [X0]
	070 Compare X0, 0
	071 JumpIfEqual {109}
	072 Move X8, 0xD64000
	073 Move X8, [X8+2352]
	074 Add X2, X31, 8
	075 Move X1, X19
	076 Move X3, [X8]
	077 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {102}
	082 Move X0, [X21]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X0, X19
	088 Call MonoCustomAttrs.RetrieveAttributeUsageNoCache, X0
	089 Move X8, [X21]
	090 Move [X31+8], X0
	091 Move X0, X8
	092 Call 0x1C17D0C
	093 Move X0, [X0]
	094 Compare X0, 0
	095 JumpIfEqual {109}
	096 Move X8, 0xD64000
	097 Move X2, [X31+8]
	098 Move X8, [X8+2368]
	099 Move X1, X19
	100 Move X3, [X8]
	101 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	102 Move X0, [X31+8]
	103 Move X20, [X31+32]
	104 Move X19, [X31+40]
	105 Move X30, [X31+16]
	106 Move X21, [X31+24]
	107 Add X31, X31, 48
	108 Return X0
	109 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x033CB9B0 STRB W8, [X21 + 0x297]
	0x033CB9B4 CBZ X20, 0x33CBA64
	0x033CB9B8 ADRP X8, 0xD28000
	0x033CB9BC LDR X8, [X8 + 0x6C0]
	0x033CB9C0 ADRP X22, 0xD61000
	0x033CB9C4 LDR X0, [X8]
	0x033CB9C8 ADRP X8, 0xD61000
	0x033CB9CC LDR X8, [X8 + 0xA40]
	0x033CB9D0 LDR W9, [X0 + 0xE0]
	0x033CB9D4 LDR X21, [X8]
	0x033CB9D8 LDR X22, [X22 + 0xA48]
	0x033CB9DC CBNZ W9, 0x33CB9E4
	0x033CB9E0 BL 0x1C16DFC
	0x033CB9E4 MOV X0, X21
	0x033CB9E8 MOV X1, X31
	0x033CB9EC BL 0x338C698
	0x033CB9F0 LDR X1, [X22]
	0x033CB9F4 MOV X2, X0
	0x033CB9F8 MOV X0, X20
	0x033CB9FC MOV X3, X31
	0x033CBA00 BL 0x32A9678
	0x033CBA04 CBZ X0, 0x33CBA98
	0x033CBA08 ADRP X9, 0xD59000
	0x033CBA0C LDR X9, [X9 + 0x9A0]
	0x033CBA10 LDR X8, [X0]
	0x033CBA14 LDR X1, [X9]
	0x033CBA18 LDRB W10, [X8 + 0x130]
	0x033CBA1C LDRB W9, [X1 + 0x130]
	0x033CBA20 CMP W10, W9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x1013000
	006 Move X21, 0xD5D000
	007 Move X20, 0xD5C000
	008 Move W8, [X19+653]
	009 Move X21, [X21+3984]
	010 Move X20, [X20+992]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xD5D000
	016 Move X0, [X0+3984]
	017 Call 0x1C17CF4
	018 Move X0, 0xD5C000
	019 Move X0, [X0+992]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+653], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move W1, 0x7FFF
	026 Move X2, X31
	027 Move X19, X0
	028 Call AttributeUsageAttribute..ctor, X0, X1
	029 Move X8, [X20]
	030 Move X8, [X8+184]
	031 Move [X8+8], X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 

