Type: System.SharedStatics

Method: System.Void .ctor()

Disassembly:
	0x033BED88 ADD X8, X8, X10, 0x2, LSL

ISIL:
	001 Return 

Method: System.Security.Util.Tokenizer/StringMaker GetSharedStringMaker()

Disassembly:
	0x033BED90 STR W26, [X8 + 0x20]
	0x033BED94 B 0x33BEE74
	0x033BED98 LDR X8, [X9 + 0x20]
	0x033BED9C MOVZ W1, 0x3
	0x033BEDA0 B 0x33BEE64
	0x033BEDA4 MOV X0, X19
	0x033BEDA8 MOV X1, X31
	0x033BEDAC BL 0x3396C08
	0x033BEDB0 TBZ X0, 0x0, 0x33BEE74
	0x033BEDB4 CBZ X21, 0x33BEF5C
	0x033BEDB8 LDR W10, [X21 + 0x1C]
	0x033BEDBC LDR X8, [X21 + 0x10]
	0x033BEDC0 LDR X9, [X22]
	0x033BEDC4 ADD W10, W10, 0x1
	0x033BEDC8 STR W10, [X21 + 0x1C]
	0x033BEDCC CBZ X8, 0x33BEF5C
	0x033BEDD0 LDRSW X10, [X21 + 0x18]
	0x033BEDD4 LDR W11, [X8 + 0x18]
	0x033BEDD8 CMP W10, W11
	0x033BEDDC B.CS 0x33BEE5C
	0x033BEDE0 ADD W9, W10, 0x1
	0x033BEDE4 ADD X8, X8, X10, 0x2, LSL
	0x033BEDE8 STR W9, [X21 + 0x18]
	0x033BEDEC STR W27, [X8 + 0x20]
	0x033BEDF0 B 0x33BEE74
	0x033BEDF4 LDR X8, [X9 + 0x20]
	0x033BEDF8 MOV X0, X21
	0x033BEDFC LDR X8, [X8 + 0xC0]
	0x033BEE00 LDR X2, [X8 + 0x70]
	0x033BEE04 BL 0x2FDC70C
	0x033BEE08 LDR W10, [X21 + 0x1C]
	0x033BEE0C LDR X8, [X21 + 0x10]
	0x033BEE10 LDR X9, [X22]
	0x033BEE14 ADD W10, W10, 0x1
	0x033BEE18 STR W10, [X21 + 0x1C]
	0x033BEE1C CBZ X8, 0x33BEF5C
	0x033BEE20 LDRSW X10, [X21 + 0x18]
	0x033BEE24 LDR W11, [X8 + 0x18]
	0x033BEE28 CMP W10, W11
	0x033BEE2C B.CS 0x33BEE44
	0x033BEE30 ADD W9, W10, 0x1
	0x033BEE34 ADD X8, X8, X10, 0x2, LSL
	0x033BEE38 STR W9, [X21 + 0x18]
	0x033BEE3C STR W25, [X8 + 0x20]
	0x033BEE40 B 0x33BEE74
	0x033BEE44 LDR X8, [X9 + 0x20]
	0x033BEE48 MOVZ W1, 0x2
	0x033BEE4C B 0x33BEE64
	0x033BEE50 LDR X8, [X9 + 0x20]
	0x033BEE54 MOVZ W1, 0x1
	0x033BEE58 B 0x33BEE64
	0x033BEE5C LDR X8, [X9 + 0x20]
	0x033BEE60 MOVZ W1, 0x4
	0x033BEE64 LDR X8, [X8 + 0xC0]
	0x033BEE68 LDR X2, [X8 + 0x70]
	0x033BEE6C MOV X0, X21
	0x033BEE70 BL 0x2FDC70C
	0x033BEE74 LDR X8, [X19]
	0x033BEE78 MOV X0, X19
	0x033BEE7C LDR X9, [X8 + 0x428]
	0x033BEE80 LDR X1, [X8 + 0x430]
	0x033BEE84 BLR X9
	0x033BEE88 CBZ X0, 0x33BEF5C
	0x033BEE8C LDR X8, [X0]
	0x033BEE90 LDR X1, [X24]
	0x033BEE94 MOV X19, X0
	0x033BEE98 LDRB W10, [X8 + 0x130]
	0x033BEE9C LDRB W9, [X1 + 0x130]
	0x033BEEA0 CMP W10, W9
	0x033BEEA4 B.CC 0x33BEF60
	0x033BEEA8 LDR X8, [X8 + 0xC8]
	0x033BEEAC ADD X8, X8, X9, 0x3, LSL
	0x033BEEB0 LDUR X8, [X8 - 0x8]
	0x033BEEB4 CMP X8, X1
	0x033BEEB8 B.NE 0x33BEF60
	0x033BEEBC MOV X0, X19
	0x033BEEC0 MOV X1, X31
	0x033BEEC4 BL 0x3396018
	0x033BEEC8 TBNZ X0, 0x0, 0x33BEC7C
	0x033BEECC CBZ X21, 0x33BEF5C
	0x033BEED0 ADRP X8, 0xD36000
	0x033BEED4 LDR X8, [X8 + 0xE18]
	0x033BEED8 ADRP X22, 0xD67000
	0x033BEEDC ADRP X23, 0xD35000
	0x033BEEE0 MOV X0, X21
	0x033BEEE4 LDR X1, [X8]
	0x033BEEE8 LDR X22, [X22 + 0x150]
	0x033BEEEC LDR X23, [X23 + 0x6C0]
	0x033BEEF0 BL 0x2FDE4C8
	0x033BEEF4 LDR X8, [X23]
	0x033BEEF8 LDR X22, [X22]
	0x033BEEFC MOV X21, X0
	0x033BEF00 LDR W9, [X8 + 0xE0]
	0x033BEF04 CBNZ W9, 0x33BEF10
	0x033BEF08 MOV X0, X8
	0x033BEF0C BL 0x1C16DFC
	0x033BEF10 MOV X0, X22
	0x033BEF14 MOV X1, X31
	0x033BEF18 BL 0x338C698
	0x033BEF1C CBZ X20, 0x33BEF5C
	0x033BEF20 ADRP X8, 0xD6E000
	0x033BEF24 LDR X8, [X8 + 0x4F8]
	0x033BEF28 MOV X3, X0
	0x033BEF2C MOV X0, X20
	0x033BEF30 MOV X2, X21
	0x033BEF34 LDR X1, [X8]
	0x033BEF38 MOV X4, X31
	0x033BEF3C BL 0x32A89BC
	0x033BEF40 MOV X0, X19
	0x033BEF44 LDP X20, X19, [X31 + 0x40]
	0x033BEF48 LDP X22, X21, [X31 + 0x30]
	0x033BEF4C LDP X24, X23, [X31 + 0x20]
	0x033BEF50 LDP X26, X25, [X31 + 0x10]
	0x033BEF54 LDP X30, X27, [X31], #0x50

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x1020000
	007 Move X21, 0xD65000
	008 Move W8, [X19+519]
	009 Move X21, [X21+2928]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xD65000
	015 Move X0, [X0+2928]
	016 Call 0x1C17CF4
	017 Move X0, 0xD6F000
	018 Move X0, [X0+1088]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+519], W8
	022 Move X0, X31
	023 Move [X31+12], W31
	024 Call RuntimeHelpers.PrepareConstrainedRegions
	025 Move X0, [X21]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X21]
	031 Move X8, [X0+184]
	032 Move X0, [X8]
	033 Add X1, X31, 12
	034 Move X2, X31
	035 Call Monitor.Enter, X0, X1
	036 Move X0, [X21]
	037 Move X8, [X0+184]
	038 Move X8, [X8]
	039 Compare X8, 0
	040 JumpIfEqual {95}
	041 Move X9, [X8+16]
	042 Compare X9, 0
	043 JumpIfEqual {56}
	044 Move W9, [X0+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {53}
	047 Call 0x1C17DFC
	048 Move X8, [X21]
	049 Move X8, [X8+184]
	050 Move X8, [X8]
	051 Compare X8, 0
	052 JumpIfEqual {96}
	053 Move X20, [X8+16]
	054 Move X19, X31
	055 Move [X8+16], X31
	056 Move X19, X31
	057 Move X20, X31
	058 Move W22, 3
	059 Move W8, [X31+12]
	060 Compare W8, 0
	061 JumpIfEqual {72}
	062 Move X0, [X21]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {68}
	066 Call 0x1C17DFC
	067 Move X0, [X21]
	068 Move X8, [X0+184]
	069 Move X1, X31
	070 Move X0, [X8]
	071 Call Monitor.Exit, X0
	072 Compare X19, 0
	073 JumpIfNotEqual {93}
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Compare W22, 0
	076 JumpIfNotEqual {86}
	077 Compare X20, 0
	078 JumpIfNotEqual {86}
	079 Move X8, 0xD6F000
	080 Move X8, [X8+1088]
	081 Move X0, [X8]
	082 Call 0x1C17F10
	083 Move X1, X31
	084 Move X20, X0
	085 Call StringMaker..ctor, X0
	086 Move X0, X20
	087 Move X20, [X31+32]
	088 Move X19, [X31+40]
	089 Move X22, [X31+16]
	090 Move X21, [X31+24]
	091 Move X30, [X31+48]
	092 Return X0
	093 Move X0, X19
	094 Call 0x1C17F18
	095 Call 0x1C17F20
	096 Call 0x1C17F20
	097 Move X20, X0
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X0, X20
	100 Call 0x3EB2AD0
	101 Move X19, [X0]
	102 Call 0x3EB2AE0
	103 Move W22, W31
	104 Move X20, X31
	105 Move X19, X31
	106 Move X20, X0
	107 Move W8, [X31+12]
	108 Compare W8, 0
	109 JumpIfEqual {120}
	110 Move X0, [X21]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {116}
	114 Call 0x1C17DFC
	115 Move X0, [X21]
	116 Move X8, [X0+184]
	117 Move X0, [X8]
	118 Move X1, X31
	119 Call Monitor.Exit, X0
	120 Compare X19, 0
	121 JumpIfNotEqual {124}
	122 Move X0, X20
	123 Call 0x1D2D690
	124 Move X0, X19
	125 Call 0x1C17F18
	126 Call 0x1991590

Method: System.Void ReleaseSharedStringMaker(ref System.Security.Util.Tokenizer/StringMaker maker)

Disassembly:
	0x033BEF58 RET
	0x033BEF5C BL 0x1C16F20
	0x033BEF60 MOV X0, X19
	0x033BEF64 BL 0x1C171E0
	0x033BEF68 STR X30, [X31 - 0x30]!
	0x033BEF6C STP X22, X21, [X31 + 0x10]
	0x033BEF70 STP X20, X19, [X31 + 0x20]
	0x033BEF74 LDR X8, [X0 + 0x18]
	0x033BEF78 CBZ X8, 0x33BF044
	0x033BEF7C LDR W22, [X8 + 0x18]
	0x033BEF80 MOV X19, X0
	0x033BEF84 MOV X0, X1
	0x033BEF88 SUBS W21, W22, 0x1
	0x033BEF8C B.MI 0x33BF048
	0x033BEF90 ADRP X20, 0xFFFFFFFFFD7D8000
	0x033BEF94 ADD X20, X20, 0x8F4
	0x033BEF98 LDR W9, [X8 + 0x18]
	0x033BEF9C CMP W21, W9
	0x033BEFA0 B.CS 0x33BF058
	0x033BEFA4 ADD X10, X8, W21, 0x2, UXTW
	0x033BEFA8 LDR W10, [X10 + 0x20]
	0x033BEFAC SUB W10, W10, 0x1
	0x033BEFB0 CMP W10, 0x3
	0x033BEFB4 B.HI 0x33BF030
	0x033BEFB8 ADR X11, 0x10
	0x033BEFBC LDRB W12, [X20, X10, LSL]
	0x033BEFC0 ADD X11, X11, X12, 0x2, LSL
	0x033BEFC4 BR X11
	0x033BEFC8 CBZ X0, 0x33BF044
	0x033BEFCC LDR X8, [X0]
	0x033BEFD0 LDR X9, [X8 + 0x8E8]
	0x033BEFD4 LDR X1, [X8 + 0x8F0]
	0x033BEFD8 B 0x33BF02C
	0x033BEFDC SUB W22, W22, 0x2
	0x033BEFE0 CMP W22, W9
	0x033BEFE4 B.CS 0x33BF058
	0x033BEFE8 CBZ X0, 0x33BF044
	0x033BEFEC LDR X9, [X0]
	0x033BEFF0 ADD X8, X8, W22, 0x2, UXTW
	0x033BEFF4 LDR W1, [X8 + 0x20]
	0x033BEFF8 LDR X8, [X9 + 0x8B8]
	0x033BEFFC LDR X2, [X9 + 0x8C0]
	0x033BF000 BLR X8
	0x033BF004 B 0x33BF034
	0x033BF008 CBZ X0, 0x33BF044
	0x033BF00C LDR X8, [X0]
	0x033BF010 LDR X9, [X8 + 0x8A8]
	0x033BF014 LDR X1, [X8 + 0x8B0]
	0x033BF018 B 0x33BF02C
	0x033BF01C CBZ X0, 0x33BF044
	0x033BF020 LDR X8, [X0]
	0x033BF024 LDR X9, [X8 + 0x8C8]
	0x033BF028 LDR X1, [X8 + 0x8D0]
	0x033BF02C BLR X9
	0x033BF030 MOV W22, W21
	0x033BF034 SUBS W21, W22, 0x1
	0x033BF038 B.MI 0x33BF048
	0x033BF03C LDR X8, [X19 + 0x18]
	0x033BF040 CBNZ X8, 0x33BEF98
	0x033BF044 BL 0x1C16F20
	0x033BF048 LDP X20, X19, [X31 + 0x20]
	0x033BF04C LDP X22, X21, [X31 + 0x10]
	0x033BF050 LDR X30, [X31], #0x30
	0x033BF054 RET
	0x033BF058 BL 0x1C16F28
	0x033BF05C STP X30, X25, [X31 - 0x40]!
	0x033BF060 STP X24, X23, [X31 + 0x10]
	0x033BF064 STP X22, X21, [X31 + 0x20]
	0x033BF068 STP X20, X19, [X31 + 0x30]
	0x033BF06C ADRP X23, 0x101E000
	0x033BF070 ADRP X21, 0xD6D000
	0x033BF074 ADRP X22, 0xD34000
	0x033BF078 LDRB W8, [X23 + 0x211]
	0x033BF07C LDR X21, [X21 + 0x500]
	0x033BF080 LDR X22, [X22 + 0x6C0]
	0x033BF084 MOV W20, W1
	0x033BF088 MOV X19, X0
	0x033BF08C TBNZ X8, 0x0, 0x33BF0EC
	0x033BF090 ADRP X0, 0xD5C000
	0x033BF094 LDR X0, [X0 + 0xB60]
	0x033BF098 BL 0x1C16CF4
	0x033BF09C ADRP X0, 0xD36000
	0x033BF0A0 LDR X0, [X0 + 0x278]
	0x033BF0A4 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x1020000
	007 Move X21, 0xD65000
	008 Move W8, [X19+520]
	009 Move X21, [X21+2928]
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD65000
	016 Move X0, [X0+2928]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+520], W8
	020 Move X0, X31
	021 Move [X31+12], W31
	022 Call RuntimeHelpers.PrepareConstrainedRegions
	023 Move X0, [X21]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X21]
	029 Move X8, [X0+184]
	030 Move X0, [X8]
	031 Add X1, X31, 12
	032 Move X2, X31
	033 Call Monitor.Enter, X0, X1
	034 Move X8, [X21]
	035 Move X8, [X8+184]
	036 Move X8, [X8]
	037 Compare X8, 0
	038 JumpIfEqual {66}
	039 Move X9, [X20]
	040 Move X19, X31
	041 Move [X8+16], X9
	042 Move [X20], X31
	043 Move W8, [X31+12]
	044 Compare W8, 0
	045 JumpIfEqual {56}
	046 Move X0, [X21]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X21]
	052 Move X8, [X0+184]
	053 Move X1, X31
	054 Move X0, [X8]
	055 Call Monitor.Exit, X0
	056 Compare X19, 0
	057 JumpIfNotEqual {64}
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X30, [X31+16]
	061 Move X21, [X31+24]
	062 Add X31, X31, 48
	063 Return 
	064 Move X0, X19
	065 Call 0x1C17F18
	066 Call 0x1C17F20
	067 Move X20, X0
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X0, X20
	070 Call 0x3EB2AD0
	071 Move X19, [X0]
	072 Call 0x3EB2AE0
	073 Move X19, X31
	074 Move X20, X0
	075 Move W8, [X31+12]
	076 Compare W8, 0
	077 JumpIfEqual {88}
	078 Move X0, [X21]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X21]
	084 Move X8, [X0+184]
	085 Move X0, [X8]
	086 Move X1, X31
	087 Call Monitor.Exit, X0
	088 Compare X19, 0
	089 JumpIfNotEqual {92}
	090 Move X0, X20
	091 Call 0x1D2D690
	092 Move X0, X19
	093 Call 0x1C17F18
	094 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x033BF0A8 ADRP X0, 0xD34000
	0x033BF0AC LDR X0, [X0 + 0x6C0]
	0x033BF0B0 BL 0x1C16CF4
	0x033BF0B4 ADRP X0, 0xD6D000
	0x033BF0B8 LDR X0, [X0 + 0x500]
	0x033BF0BC BL 0x1C16CF4
	0x033BF0C0 ADRP X0, 0xD67000
	0x033BF0C4 LDR X0, [X0 + 0x180]
	0x033BF0C8 BL 0x1C16CF4
	0x033BF0CC ADRP X0, 0xD6D000
	0x033BF0D0 LDR X0, [X0 + 0x508]
	0x033BF0D4 BL 0x1C16CF4
	0x033BF0D8 ADRP X0, 0xD60000
	0x033BF0DC LDR X0, [X0 + 0x128]
	0x033BF0E0 BL 0x1C16CF4
	0x033BF0E4 MOVZ W8, 0x1
	0x033BF0E8 STRB W8, [X23 + 0x211]
	0x033BF0EC LDR X0, [X22]
	0x033BF0F0 LDR X21, [X21]
	0x033BF0F4 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x101F000
	005 Move X19, 0xD64000
	006 Move W8, [X20+521]
	007 Move X19, [X19+2928]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD64000
	013 Move X0, [X0+2928]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+521], W8
	017 Move X0, [X19]
	018 Call 0x1C17F10
	019 Move X8, [X19]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X8, [X8+184]
	023 Move [X8], X0
	024 Move X30, [X31+32]
	025 Return 

