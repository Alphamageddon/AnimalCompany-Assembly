Type: System.Type

Method: System.Boolean IsEnumDefined(System.Object value)

Disassembly:
	0x03395E1C BL 0x338C698
	0x03395E20 CMP X19, X0
	0x03395E24 B.EQ 0x3395E68
	0x03395E28 LDR X8, [X19]
	0x03395E2C MOV X0, X19
	0x03395E30 LDR X9, [X8 + 0x818]
	0x03395E34 LDR X1, [X8 + 0x820]
	0x03395E38 BLR X9
	0x03395E3C LDR X8, [X22]
	0x03395E40 MOV X19, X0
	0x03395E44 LDR W9, [X8 + 0xE0]
	0x03395E48 CBZ W9, 0x3395E54
	0x03395E4C CBNZ X19, 0x3395DE0
	0x03395E50 B 0x3395E60
	0x03395E54 MOV X0, X8
	0x03395E58 BL 0x1C16DFC
	0x03395E5C CBNZ X19, 0x3395DE0
	0x03395E60 MOV W0, W31
	0x03395E64 B 0x3395E6C
	0x03395E68 MOVZ W0, 0x1
	0x03395E6C LDP X20, X19, [X31 + 0x20]
	0x03395E70 LDP X22, X21, [X31 + 0x10]
	0x03395E74 LDP X30, X23, [X31], #0x30
	0x03395E78 RET
	0x03395E7C BL 0x1C16F20
	0x03395E80 STR X30, [X31 - 0x20]!
	0x03395E84 STP X20, X19, [X31 + 0x10]
	0x03395E88 ADRP X20, 0x1048000
	0x03395E8C LDRB W8, [X20 + 0xA1]
	0x03395E90 MOV X19, X0
	0x03395E94 TBNZ X8, 0x0, 0x3395EAC
	0x03395E98 ADRP X0, 0xD87000
	0x03395E9C LDR X0, [X0 + 0x4E8]
	0x03395EA0 BL 0x1C16CF4
	0x03395EA4 MOVZ W8, 0x1
	0x03395EA8 STRB W8, [X20 + 0xA1]
	0x03395EAC LDR X8, [X19]
	0x03395EB0 MOV X0, X19
	0x03395EB4 LDR X9, [X8 + 0x328]
	0x03395EB8 LDR X1, [X8 + 0x330]
	0x03395EBC BLR X9
	0x03395EC0 CBZ X0, 0x3395F00
	0x03395EC4 ADRP X8, 0xD87000
	0x03395EC8 LDR X8, [X8 + 0x4E8]
	0x03395ECC LDR X9, [X0]
	0x03395ED0 LDR X8, [X8]
	0x03395ED4 LDRB W11, [X9 + 0x130]
	0x03395ED8 LDRB W10, [X8 + 0x130]
	0x03395EDC CMP W11, W10
	0x03395EE0 B.CS 0x3395EEC
	0x03395EE4 MOV W0, W31
	0x03395EE8 B 0x3395F00
	0x03395EEC LDR X9, [X9 + 0xC8]
	0x03395EF0 ADD X9, X9, X10, 0x3, LSL
	0x03395EF4 LDUR X9, [X9 - 0x8]
	0x03395EF8 CMP X9, X8
	0x03395EFC CSET W0, EQ
	0x03395F00 LDP X20, X19, [X31 + 0x10]
	0x03395F04 LDR X30, [X31], #0x20
	0x03395F08 RET
	0x03395F0C CMP X0, X1
	0x03395F10 CSET W0, NE
	0x03395F14 RET
	0x03395F18 STR X30, [X31 - 0x20]!
	0x03395F1C STP X20, X19, [X31 + 0x10]
	0x03395F20 LDR X8, [X0]
	0x03395F24 MOV X19, X0
	0x03395F28 LDR X9, [X8 + 0x418]
	0x03395F2C LDR X1, [X8 + 0x420]
	0x03395F30 BLR X9
	0x03395F34 TBZ X0, 0x0, 0x3395F5C
	0x03395F38 MOV X0, X19
	0x03395F3C BL 0x3396028
	0x03395F40 CBZ X0, 0x3396010
	0x03395F44 LDR X8, [X0]
	0x03395F48 LDP X20, X19, [X31 + 0x10]
	0x03395F4C LDR X2, [X8 + 0x288]
	0x03395F50 LDR X1, [X8 + 0x290]
	0x03395F54 LDR X30, [X31], #0x20
	0x03395F58 BR X2
	0x03395F5C LDR X8, [X19]
	0x03395F60 MOV X0, X19
	0x03395F64 LDR X9, [X8 + 0x3A8]
	0x03395F68 LDR X1, [X8 + 0x3B0]
	0x03395F6C BLR X9
	0x03395F70 TBZ X0, 0x0, 0x3395F7C
	0x03395F74 MOVZ W0, 0x1
	0x03395F78 B 0x3396000
	0x03395F7C LDR X8, [X19]
	0x03395F80 MOV X0, X19
	0x03395F84 LDR X9, [X8 + 0x3C8]
	0x03395F88 LDR X1, [X8 + 0x3D0]
	0x03395F8C BLR X9
	0x03395F90 TBZ X0, 0x0, 0x3395FFC
	0x03395F94 LDR X8, [X19]
	0x03395F98 MOV X0, X19
	0x03395F9C LDR X9, [X8 + 0x468]
	0x03395FA0 LDR X1, [X8 + 0x470]
	0x03395FA4 BLR X9
	0x03395FA8 CBZ X0, 0x3396010
	0x03395FAC LDR W8, [X0 + 0x18]
	0x03395FB0 MOV X19, X0
	0x03395FB4 CMP W8, 0x1
	0x03395FB8 B.LT 0x3395FFC
	0x03395FBC MOV W20, W31
	0x03395FC0 CMP W20, W8
	0x03395FC4 B.CS 0x3396014
	0x03395FC8 ADD X8, X19, W20, 0x3, SXTW
	0x03395FCC LDR X0, [X8 + 0x20]
	0x03395FD0 CBZ X0, 0x3396010
	0x03395FD4 LDR X8, [X0]
	0x03395FD8 LDR X9, [X8 + 0x288]
	0x03395FDC LDR X1, [X8 + 0x290]
	0x03395FE0 BLR X9
	0x03395FE4 TBNZ X0, 0x0, 0x3396000
	0x03395FE8 LDR W8, [X19 + 0x18]
	0x03395FEC ADD W20, W20, 0x1
	0x03395FF0 CMP W20, W8
	0x03395FF4 B.LT 0x3395FC0
	0x03395FF8 B 0x3396000
	0x03395FFC MOV W0, W31
	0x03396000 LDP X20, X19, [X31 + 0x10]
	0x03396004 AND W0, W0, 0x1
	0x03396008 LDR X30, [X31], #0x20
	0x0339600C RET
	0x03396010 BL 0x1C16F20
	0x03396014 BL 0x1C16F28
	0x03396018 LDR X8, [X0]
	0x0339601C LDR X2, [X8 + 0x418]
	0x03396020 LDR X1, [X8 + 0x420]
	0x03396024 BR X2
	0x03396028 STP X30, X19, [X31 - 0x10]!
	0x0339602C CBZ X0, 0x3396068
	0x03396030 MOV X19, X0
	0x03396034 LDR X8, [X19]
	0x03396038 MOV X0, X19
	0x0339603C LDR X9, [X8 + 0x418]
	0x03396040 LDR X1, [X8 + 0x420]
	0x03396044 BLR X9
	0x03396048 TBZ X0, 0x0, 0x339606C
	0x0339604C LDR X8, [X19]
	0x03396050 MOV X0, X19
	0x03396054 LDR X9, [X8 + 0x428]
	0x03396058 LDR X1, [X8 + 0x430]
	0x0339605C BLR X9
	0x03396060 MOV X19, X0
	0x03396064 CBNZ X0, 0x3396034
	0x03396068 BL 0x1C16F20
	0x0339606C MOV X0, X19
	0x03396070 LDP X30, X19, [X31], #0x10
	0x03396074 RET
	0x03396078 STR X30, [X31 - 0x30]!
	0x0339607C STP X22, X21, [X31 + 0x10]
	0x03396080 STP X20, X19, [X31 + 0x20]
	0x03396084 ADRP X22, 0x1047000
	0x03396088 ADRP X21, 0xD5D000
	0x0339608C LDRB W8, [X22 + 0x84]
	0x03396090 LDR X21, [X21 + 0x6C0]
	0x03396094 MOV X19, X1
	0x03396098 MOV X20, X0
	0x0339609C TBNZ X8, 0x0, 0x33960B4
	0x033960A0 ADRP X0, 0xD5D000
	0x033960A4 LDR X0, [X0 + 0x6C0]
	0x033960A8 BL 0x1C16CF4
	0x033960AC MOVZ W8, 0x1
	0x033960B0 STRB W8, [X22 + 0x84]
	0x033960B4 LDR X0, [X21]
	0x033960B8 LDR W8, [X0 + 0xE0]
	0x033960BC CBNZ W8, 0x33960C4
	0x033960C0 BL 0x1C16DFC
	0x033960C4 CMP X20, X19
	0x033960C8 B.EQ 0x3396120
	0x033960CC LDR X0, [X21]
	0x033960D0 LDR W8, [X0 + 0xE0]
	0x033960D4 CBNZ W8, 0x33960DC
	0x033960D8 BL 0x1C16DFC
	0x033960DC CBZ X20, 0x3396114
	0x033960E0 LDR X0, [X21]
	0x033960E4 LDR W8, [X0 + 0xE0]
	0x033960E8 CBNZ W8, 0x33960F0
	0x033960EC BL 0x1C16DFC
	0x033960F0 CMP X20, X19
	0x033960F4 B.EQ 0x3396114
	0x033960F8 LDR X8, [X20]
	0x033960FC MOV X0, X20
	0x03396100 LDR X9, [X8 + 0x818]
	0x03396104 LDR X1, [X8 + 0x820]
	0x03396108 BLR X9
	0x0339610C MOV X20, X0
	0x03396110 B 0x33960CC
	0x03396114 CMP X20, 0x0
	0x03396118 CSET W0, NE
	0x0339611C B 0x3396124
	0x03396120 MOV W0, W31
	0x03396124 LDP X20, X19, [X31 + 0x20]
	0x03396128 LDP X22, X21, [X31 + 0x10]
	0x0339612C LDR X30, [X31], #0x30
	0x03396130 RET
	0x03396134 STR X30, [X31 - 0x30]!
	0x03396138 STP X22, X21, [X31 + 0x10]
	0x0339613C STP X20, X19, [X31 + 0x20]
	0x03396140 ADRP X22, 0x1047000
	0x03396144 ADRP X21, 0xD5D000
	0x03396148 LDRB W8, [X22 + 0x85]
	0x0339614C LDR X21, [X21 + 0x6C0]
	0x03396150 MOV X19, X1
	0x03396154 MOV X20, X0
	0x03396158 TBNZ X8, 0x0, 0x3396170
	0x0339615C ADRP X0, 0xD5D000
	0x03396160 LDR X0, [X0 + 0x6C0]
	0x03396164 BL 0x1C16CF4
	0x03396168 MOVZ W8, 0x1
	0x0339616C STRB W8, [X22 + 0x85]
	0x03396170 LDR X0, [X21]
	0x03396174 LDR W8, [X0 + 0xE0]
	0x03396178 CBZ W8, 0x3396184
	0x0339617C CBNZ X19, 0x339618C
	0x03396180 B 0x33962C8
	0x03396184 BL 0x1C16DFC
	0x03396188 CBZ X19, 0x33962C8
	0x0339618C LDR X0, [X21]
	0x03396190 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X21, 0x1049000
	010 Move W8, [X21+126]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xD97000
	018 Move X0, [X0+944]
	019 Call 0x1C17CF4
	020 Move X0, 0xD87000
	021 Move X0, [X0+2912]
	022 Call 0x1C17CF4
	023 Move X0, 0xD5F000
	024 Move X0, [X0+1728]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+126], W8
	028 Compare X19, 0
	029 JumpIfEqual {153}
	030 Move X8, [X20]
	031 Move X0, X20
	032 Move X9, [X8+1416]
	033 Move X1, [X8+1424]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {165}
	039 Move X0, X19
	040 Move X1, X31
	041 Call "il2cpp_vm_object_is_inst", X0
	042 Compare X0, 0
	043 JumpIfEqual {152}
	044 Move X8, [X0]
	045 Move X21, X0
	046 Move X9, [X8+1416]
	047 Move X1, [X8+1424]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {69}
	053 Move X8, [X21]
	054 Move X0, X21
	055 Move X1, X20
	056 Move X9, [X8+2168]
	057 Move X2, [X8+2176]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X8, [X21]
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {218}
	064 Move X9, [X8+2184]
	065 Move X1, [X8+2192]
	066 Move X0, X21
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X21, X0
	069 Move X24, 0xD5F000
	070 Move X24, [X24+1728]
	071 Move X8, 0xD87000
	072 Move X0, [X24]
	073 Move X8, [X8+2912]
	074 Move W9, [X0+224]
	075 Move X22, [X8]
	076 Compare W9, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X0, X22
	080 Call Type.GetTypeFromHandle, X0
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X0, [X24]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X0, X21
	088 Call Type.IsIntegerType, X0
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {182}
	093 Move X8, [X20]
	094 Move X0, X20
	095 Move X9, [X8+2184]
	096 Move X1, [X8+2192]
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Compare X0, 0
	099 JumpIfEqual {152}
	100 Move X8, [X0]
	101 Move X22, X0
	102 Move X9, [X8+2056]
	103 Move X1, [X8+2064]
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Compare X21, 0
	106 JumpIfEqual {152}
	107 Move X8, [X21]
	108 Move W23, W0
	109 Move X0, X21
	110 Move X9, [X8+2056]
	111 Move X1, [X8+2064]
	112 NotImplemented "Instruction BLR not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Add X1, X31, 24
	115 Add X2, X31, 8
	116 Move X0, X20
	117 Move [X31+24], X31
	118 Move [X31+8], X31
	119 Call Type.GetEnumData, X0, X1, X2
	120 Move X0, [X24]
	121 Move X20, [X31+8]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {126}
	125 Call 0x1C17DFC
	126 Move X0, X20
	127 Move X1, X19
	128 Call Type.BinarySearch, X0, X1
	129 Move X8, [X20]
	130 Move X0, X20
	131 Move X9, [X8+616]
	132 Move X1, [X8+624]
	133 NotImplemented "Instruction BLR not yet implemented."
	134 Move X8, 0xD97000
	135 Move X8, [X8+944]
	136 Move X1, X19
	137 Move X2, [X8]
	138 Call Array.IndexOf, X0, X1
	139 Move X20, [X31+64]
	140 Move X19, [X31+72]
	141 Move X22, [X31+48]
	142 Move X21, [X31+56]
	143 Move X24, [X31+32]
	144 Move X23, [X31+40]
	145 Move X30, [X31+16]
	146 NotImplemented "Instruction ORN not yet implemented."
	147 Move W0, W8
	148 ShiftRight W0, 31
	149 And W0, W0, 0x7FFFFFFF
	150 Add X31, X31, 80
	151 Return X0
	152 Call 0x1C17F20
	153 Move X0, 0xD63000
	154 Move X0, [X0+1320]
	155 Call 0x1C17D08
	156 Call 0x1C17F10
	157 Move X19, X0
	158 Move X0, 0xD68000
	159 Move X0, [X0+3784]
	160 Call 0x1C17D08
	161 Move X1, X0
	162 Move X0, X19
	163 Move X2, X31
	164 Call ArgumentNullException..ctor, X0, X1
	165 Move X0, 0xD66000
	166 Move X0, [X0+1400]
	167 Call 0x1C17D08
	168 Call 0x1C17F10
	169 Move X19, X0
	170 Move X0, 0xD96000
	171 Move X0, [X0+952]
	172 Call 0x1C17D08
	173 Move X20, X0
	174 Move X0, 0xD96000
	175 Move X0, [X0+960]
	176 Call 0x1C17D08
	177 Move X2, X0
	178 Move X0, X19
	179 Move X1, X20
	180 Move X3, X31
	181 Call ArgumentException..ctor, X0, X1, X2
	182 Move X0, 0xD5E000
	183 Move X0, [X0+1456]
	184 Call 0x1C17D08
	185 Call 0x1C17F10
	186 Move X19, X0
	187 Move X0, 0xD96000
	188 Move X0, [X0+968]
	189 Call 0x1C17D08
	190 Move X1, X0
	191 Move X0, X19
	192 Move X2, X31
	193 Call InvalidOperationException..ctor, X0, X1
	194 Move X0, 0xD96000
	195 Move X0, [X0+976]
	196 Call 0x1C17D08
	197 Move X1, X0
	198 Move X0, X19
	199 Call 0x1C17DEC
	200 Move X0, X21
	201 Call 0x19913C0
	202 Move X8, [X21]
	203 Move X0, X21
	204 Move X9, [X8+360]
	205 Move X1, [X8+368]
	206 NotImplemented "Instruction BLR not yet implemented."
	207 Move X19, X0
	208 Move X0, X22
	209 Call 0x19913C0
	210 Move X8, [X22]
	211 Move X0, X22
	212 Move X9, [X8+360]
	213 Move X1, [X8+368]
	214 NotImplemented "Instruction BLR not yet implemented."
	215 Move X20, X0
	216 Move X0, 0xD96000
	217 Move X0, [X0+984]
	218 Move X9, [X8+360]
	219 Move X1, [X8+368]
	220 Move X0, X21
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Move X8, [X20]
	223 Move X19, X0
	224 Move X0, X20
	225 Move X9, [X8+360]
	226 Move X1, [X8+368]
	227 NotImplemented "Instruction BLR not yet implemented."
	228 Move X20, X0
	229 Move X0, 0xD96000
	230 Move X0, [X0+992]
	231 Call 0x1C17D08
	232 Move X1, X19
	233 Move X2, X20
	234 Move X3, X31
	235 Call SR.Format, X0, X1, X2
	236 Move X19, X0
	237 Move X0, 0xD66000
	238 Move X0, [X0+1400]
	239 Call 0x1C17D08
	240 Call 0x1C17F10
	241 Move X1, X19
	242 Move X2, X31
	243 Move X20, X0
	244 Call ArgumentException..ctor, X0, X1
	245 Move X0, 0xD96000
	246 Move X0, [X0+976]
	247 Call 0x1C17D08
	248 Move X1, X0
	249 Move X0, X20
	250 Call 0x1C17DEC

Method: System.String GetEnumName(System.Object value)

Disassembly:
	0x03396580 LDR X1, [X8]
	0x03396584 LDR X8, [X9 + 0x40]
	0x03396588 LDR X9, [X1 + 0x40]
	0x0339658C CMP X8, X9
	0x03396590 B.NE 0x3396724
	0x03396594 MOV X0, X20
	0x03396598 BL 0x1C16E08
	0x0339659C LDR X8, [X19]
	0x033965A0 LDR W20, [X0]
	0x033965A4 MOV X0, X19
	0x033965A8 LDP X9, X1, [X8 + 0x198]
	0x033965AC BLR X9
	0x033965B0 CMP W0, 0x8
	0x033965B4 B.NE 0x339667C
	0x033965B8 ADRP X9, 0xD8E000
	0x033965BC LDR X9, [X9 + 0x278]
	0x033965C0 B 0x3396684
	0x033965C4 ADRP X8, 0xD5D000
	0x033965C8 LDR X8, [X8 + 0x758]
	0x033965CC LDR X9, [X20]
	0x033965D0 LDR X1, [X8]
	0x033965D4 LDR X8, [X9 + 0x40]
	0x033965D8 LDR X9, [X1 + 0x40]
	0x033965DC CMP X8, X9
	0x033965E0 B.NE 0x339672C
	0x033965E4 MOV X0, X20
	0x033965E8 BL 0x1C16E08
	0x033965EC ADRP X9, 0xD86000
	0x033965F0 LDR X9, [X9 + 0x3A8]
	0x033965F4 LDR X8, [X19]
	0x033965F8 LDR X1, [X9]
	0x033965FC LDRB W10, [X8 + 0x130]
	0x03396600 LDRB W9, [X1 + 0x130]
	0x03396604 CMP W10, W9
	0x03396608 B.CC 0x3396718
	0x0339660C LDR X10, [X8 + 0xC8]
	0x03396610 ADD X9, X10, X9, 0x3, LSL
	0x03396614 LDUR X9, [X9 - 0x8]
	0x03396618 CMP X9, X1
	0x0339661C B.NE 0x3396718
	0x03396620 LDR X9, [X8 + 0x248]
	0x03396624 LDR X1, [X8 + 0x250]
	0x03396628 LDR W20, [X0]
	0x0339662C MOV X0, X19
	0x03396630 BLR X9
	0x03396634 ANDS W8, W20, 0x7
	0x03396638 B.EQ 0x3396648
	0x0339663C AND W9, W0, 0x7
	0x03396640 CMP W9, W8
	0x03396644 B.NE 0x33966F4
	0x03396648 TBZ X20, 0x4, 0x3396650
	0x0339664C TBZ X0, 0x4, 0x33966F4
	0x03396650 TBZ X20, 0x5, 0x3396658
	0x03396654 TBZ X0, 0x5, 0x33966F4
	0x03396658 TBZ X20, 0x6, 0x3396660
	0x0339665C TBZ X0, 0x6, 0x33966F4
	0x03396660 TBZ X20, 0x7, 0x3396668
	0x03396664 TBZ X0, 0x7, 0x33966F4
	0x03396668 ANDS W31, W20, 0x2000
	0x0339666C CSET W8, EQ
	0x03396670 AND W9, W0, 0x2000
	0x03396674 ORR W0, W8, W9, 0xD
	0x03396678 B 0x33966F8
	0x0339667C ADRP X9, 0xD87000
	0x03396680 LDR X9, [X9 + 0x978]
	0x03396684 LDR X8, [X19]
	0x03396688 LDR X1, [X9]
	0x0339668C LDRB W10, [X8 + 0x130]
	0x03396690 LDRB W9, [X1 + 0x130]
	0x03396694 CMP W10, W9
	0x03396698 B.CC 0x3396718
	0x0339669C LDR X10, [X8 + 0xC8]
	0x033966A0 ADD X9, X10, X9, 0x3, LSL
	0x033966A4 LDUR X9, [X9 - 0x8]
	0x033966A8 CMP X9, X1
	0x033966AC B.NE 0x3396718
	0x033966B0 LDR X9, [X8 + 0x258]
	0x033966B4 LDR X1, [X8 + 0x260]
	0x033966B8 MOV X0, X19
	0x033966BC BLR X9
	0x033966C0 ANDS W8, W20, 0x7
	0x033966C4 B.EQ 0x33966D4
	0x033966C8 AND W9, W0, 0x7
	0x033966CC CMP W9, W8
	0x033966D0 B.NE 0x33966F4
	0x033966D4 TBZ X20, 0x4, 0x33966DC
	0x033966D8 TBZ X0, 0x4, 0x33966F4
	0x033966DC TBZ X20, 0x5, 0x33966E4
	0x033966E0 TBZ X0, 0x5, 0x33966F4
	0x033966E4 TBZ X20, 0x6, 0x33966EC
	0x033966E8 TBZ X0, 0x6, 0x33966F4
	0x033966EC TBZ X20, 0xA, 0x3396704
	0x033966F0 TBNZ X0, 0xA, 0x3396704
	0x033966F4 MOV W0, W31
	0x033966F8 LDP X20, X19, [X31 + 0x10]
	0x033966FC LDP X30, X21, [X31], #0x20
	0x03396700 RET
	0x03396704 ANDS W31, W20, 0x800
	0x03396708 CSET W8, EQ
	0x0339670C AND W9, W0, 0x800
	0x03396710 ORR W0, W8, W9, 0xB
	0x03396714 B 0x33966F8
	0x03396718 MOV X0, X19
	0x0339671C BL 0x1C171E0
	0x03396720 BL 0x1C16F20
	0x03396724 MOV X0, X20
	0x03396728 BL 0x1C171E0
	0x0339672C MOV X0, X20
	0x03396730 BL 0x1C171E0
	0x03396734 CMP W1, 0x1
	0x03396738 MOV X19, X0
	0x0339673C B.NE 0x3396840
	0x03396740 MOV X0, X19
	0x03396744 BL 0x3EB1AD0
	0x03396748 MOV X19, X0
	0x0339674C ADRP X0, 0xD63000
	0x03396750 LDR X0, [X0 + 0xCC0]
	0x03396754 BL 0x1C16D08
	0x03396758 LDR X8, [X19]
	0x0339675C LDR X1, [X8]
	0x03396760 BL 0x1C17270
	0x03396764 TBNZ X0, 0x0, 0x33967CC
	0x03396768 MOVZ W0, 0x8
	0x0339676C BL 0x3EB1AF0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X21, 0x1048000
	008 Move W8, [X21+127]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD5E000
	016 Move X0, [X0+1728]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+127], W8
	020 Compare X20, 0
	021 JumpIfEqual {98}
	022 Move X8, [X19]
	023 Move X0, X19
	024 Move X9, [X8+1416]
	025 Move X1, [X8+1424]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {110}
	031 Move X0, X20
	032 Move X1, X31
	033 Call "il2cpp_vm_object_is_inst", X0
	034 Compare X0, 0
	035 JumpIfEqual {97}
	036 Move X8, [X0]
	037 Move X22, 0xD5E000
	038 Move X21, X0
	039 Move X9, [X8+1416]
	040 Move X1, [X8+1424]
	041 Move X22, [X22+1728]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {58}
	047 Move X0, [X22]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X21
	053 Call Type.IsIntegerType, X0
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {122}
	058 Add X1, X31, 24
	059 Add X2, X31, 8
	060 Move X0, X19
	061 Move [X31+24], X31
	062 Move [X31+8], X31
	063 Call Type.GetEnumData, X0, X1, X2
	064 Move X0, [X22]
	065 Move X21, [X31+8]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X21
	071 Move X1, X20
	072 Call Type.BinarySearch, X0, X1
	073 Move TEMP, X0
	074 And TEMP, TEMP, -2147483648
	075 Compare TEMP, -2147483648
	076 JumpIfEqual {89}
	077 Move X8, [X19]
	078 Move W20, W0
	079 Move X0, X19
	080 Move X9, [X8+616]
	081 Move X1, [X8+624]
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Compare X0, 0
	084 JumpIfEqual {97}
	085 Move W8, [X0+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Add X8, X0, W20
	088 Move X0, [X8+32]
	089 Move X0, X31
	090 Move X20, [X31+48]
	091 Move X19, [X31+56]
	092 Move X22, [X31+32]
	093 Move X21, [X31+40]
	094 Move X30, [X31+16]
	095 Add X31, X31, 64
	096 Return X0
	097 Call 0x1C17F20
	098 Move X0, 0xD63000
	099 Move X0, [X0+1320]
	100 Call 0x1C17D08
	101 Call 0x1C17F10
	102 Move X19, X0
	103 Move X0, 0xD68000
	104 Move X0, [X0+3784]
	105 Call 0x1C17D08
	106 Move X1, X0
	107 Move X0, X19
	108 Move X2, X31
	109 Call ArgumentNullException..ctor, X0, X1
	110 Move X0, 0xD66000
	111 Move X0, [X0+1400]
	112 Call 0x1C17D08
	113 Call 0x1C17F10
	114 Move X19, X0
	115 Move X0, 0xD96000
	116 Move X0, [X0+952]
	117 Call 0x1C17D08
	118 Move X20, X0
	119 Move X0, 0xD96000
	120 Move X0, [X0+960]
	121 Call 0x1C17F28
	122 Move X0, 0xD66000
	123 Move X0, [X0+1400]
	124 Call 0x1C17D08
	125 Call 0x1C17F10
	126 Move X19, X0
	127 Move X0, 0xD96000
	128 Move X0, [X0+1008]
	129 Call 0x1C17D08
	130 Move X20, X0
	131 Move X0, 0xD68000
	132 Move X0, [X0+3784]
	133 Call 0x1C17D08
	134 Move X2, X0
	135 Move X0, X19
	136 Move X1, X20
	137 Move X3, X31
	138 Call ArgumentException..ctor, X0, X1, X2
	139 Move X0, 0xD96000
	140 Move X0, [X0+1016]
	141 Call 0x1C17D08
	142 Move X1, X0
	143 Move X0, X19
	144 Call 0x1C17DEC

Method: System.String[] GetEnumNames()

Disassembly:
	0x03396770 LDR X8, [X19]
	0x03396774 STR X8, [X0]
	0x03396778 ADRP X1, 0xB1E000
	0x0339677C ADD X1, X1, 0xE58
	0x03396780 MOV X2, X31
	0x03396784 BL 0x3EB1B00
	0x03396788 B 0x3396838
	0x0339678C MOV X19, X0
	0x03396790 BL 0x3EB1AE0
	0x03396794 B 0x3396840
	0x03396798 CMP W1, 0x1
	0x0339679C MOV X19, X0
	0x033967A0 B.NE 0x3396840
	0x033967A4 MOV X0, X19
	0x033967A8 BL 0x3EB1AD0
	0x033967AC MOV X19, X0
	0x033967B0 ADRP X0, 0xD63000
	0x033967B4 LDR X0, [X0 + 0xCC0]
	0x033967B8 BL 0x1C16D08
	0x033967BC LDR X8, [X19]
	0x033967C0 LDR X1, [X8]
	0x033967C4 BL 0x1C17270
	0x033967C8 TBZ X0, 0x0, 0x3396818
	0x033967CC BL 0x3EB1AE0
	0x033967D0 ADRP X0, 0xD8F000
	0x033967D4 LDR X0, [X0 + 0xDD0]
	0x033967D8 BL 0x1C16D08
	0x033967DC BL 0x1C16F10
	0x033967E0 MOV X19, X0
	0x033967E4 ADRP X0, 0xD95000
	0x033967E8 LDR X0, [X0 + 0x420]
	0x033967EC BL 0x1C16D08
	0x033967F0 MOV X1, X0
	0x033967F4 MOV X0, X19
	0x033967F8 MOV X2, X31
	0x033967FC BL 0x32CDE64
	0x03396800 ADRP X0, 0xD95000
	0x03396804 LDR X0, [X0 + 0x428]
	0x03396808 BL 0x1C16D08
	0x0339680C MOV X1, X0
	0x03396810 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X31
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X31+8], X31
	007 Move X8, [X0]
	008 Move X19, X0
	009 Move X9, [X8+1416]
	010 Move X1, [X8+1424]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfNotEqual {26}
	016 Add X1, X31, 24
	017 Add X2, X31, 8
	018 Move X0, X19
	019 Call Type.GetEnumData, X0, X1, X2
	020 Move X30, [X31+16]
	021 Move X0, [X31+24]
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Add X31, X31, 48
	025 Return X0
	026 Move X0, 0xD66000
	027 Move X0, [X0+1400]
	028 Call 0x1C17D08
	029 Call 0x1C17F10
	030 Move X19, X0
	031 Move X0, 0xD96000
	032 Move X0, [X0+952]
	033 Call 0x1C17D08
	034 Move X20, X0
	035 Move X0, 0xD96000
	036 Move X0, [X0+960]
	037 Call 0x1C17D08
	038 Move X2, X0
	039 Move X0, X19
	040 Move X1, X20
	041 Move X3, X31
	042 Call ArgumentException..ctor, X0, X1, X2
	043 Move X0, 0xD96000
	044 Move X0, [X0+1024]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Call 0x1C17DEC

Method: System.Array GetEnumRawConstantValues()

Disassembly:
	0x03396420 CMP W8, 0x1
	0x03396424 B.LT 0x33964B0
	0x03396428 MOV X23, X31
	0x0339642C ADD X24, X21, 0x20
	0x03396430 CMP W23, W8
	0x03396434 B.CS 0x33964E8
	0x03396438 LDR X0, [X22]
	0x0339643C LDR X25, [X24, X23, LSL #3]
	0x03396440 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X31
	004 Add X1, X31, 24
	005 Add X2, X31, 8
	006 Move [X31+8], X31
	007 Call Type.GetEnumData, X0, X1, X2
	008 Move X0, [X31+8]
	009 Move X30, [X31+16]
	010 Add X31, X31, 32
	011 Return X0

Method: System.Void GetEnumData(out System.String[] enumNames, out System.Array enumValues)

Disassembly:
	0x03396814 BL 0x1C16DEC
	0x03396818 MOVZ W0, 0x8
	0x0339681C BL 0x3EB1AF0
	0x03396820 LDR X8, [X19]
	0x03396824 STR X8, [X0]
	0x03396828 ADRP X1, 0xB1E000
	0x0339682C ADD X1, X1, 0xE58
	0x03396830 MOV X2, X31
	0x03396834 BL 0x3EB1B00
	0x03396838 MOV X19, X0
	0x0339683C BL 0x3EB1AE0
	0x03396840 MOV X0, X19
	0x03396844 BL 0x1D2C690
	0x03396848 BL 0x1990590
	0x0339684C STP X30, X21, [X31 - 0x20]!
	0x03396850 STP X20, X19, [X31 + 0x10]
	0x03396854 ADRP X20, 0x1047000
	0x03396858 LDRB W8, [X20 + 0x88]
	0x0339685C MOV X19, X1
	0x03396860 MOV X21, X0
	0x03396864 TBNZ X8, 0x0, 0x339687C
	0x03396868 ADRP X0, 0xD5F000
	0x0339686C LDR X0, [X0 + 0x278]
	0x03396870 BL 0x1C16CF4
	0x03396874 MOVZ W8, 0x1
	0x03396878 STRB W8, [X20 + 0x88]
	0x0339687C CBZ X19, 0x3396980
	0x03396880 ADRP X8, 0xD5F000
	0x03396884 LDR X8, [X8 + 0x278]
	0x03396888 LDR X9, [X19]
	0x0339688C LDR X8, [X8]
	0x03396890 CMP X9, X8
	0x03396894 B.NE 0x3396980
	0x03396898 MOV X0, X19
	0x0339689C MOV X1, X31
	0x033968A0 BL 0x322B8DC
	0x033968A4 CBZ X21, 0x339697C
	0x033968A8 LDR X8, [X21]
	0x033968AC MOV X19, X0
	0x033968B0 MOV X0, X21
	0x033968B4 LDP X9, X1, [X8 + 0x1A8]
	0x033968B8 BLR X9
	0x033968BC LDR X8, [X21]
	0x033968C0 MOV X20, X0
	0x033968C4 MOV X0, X21
	0x033968C8 LDP X9, X1, [X8 + 0x198]
	0x033968CC BLR X9
	0x033968D0 CMP W0, 0x80
	0x033968D4 B.NE 0x3396900
	0x033968D8 CBZ X20, 0x339697C
	0x033968DC MOVZ W1, 0x2B
	0x033968E0 MOV X0, X20
	0x033968E4 MOV X2, X31
	0x033968E8 BL 0x322C668
	0x033968EC ADD W1, W0, 0x1
	0x033968F0 MOV X0, X20
	0x033968F4 MOV X2, X31
	0x033968F8 BL 0x322B484
	0x033968FC MOV X20, X0
	0x03396900 CBZ X19, 0x339697C
	0x03396904 LDR W8, [X19 + 0x10]
	0x03396908 SUBS W1, W8, 0x1
	0x0339690C B.LT 0x3396960
	0x03396910 MOV X0, X19
	0x03396914 MOV X2, X31
	0x03396918 BL 0x3222A1C
	0x0339691C AND W8, W0, 0xFFFF
	0x03396920 CMP W8, 0x2A
	0x03396924 B.NE 0x3396960
	0x03396928 LDR W8, [X19 + 0x10]
	0x0339692C MOV X0, X19
	0x03396930 MOV W1, W31
	0x03396934 MOV X3, X31
	0x03396938 SUB W2, W8, 0x1
	0x0339693C BL 0x3228DE4
	0x03396940 CBZ X20, 0x339697C
	0x03396944 MOV X1, X0
	0x03396948 MOV X0, X20
	0x0339694C LDP X20, X19, [X31 + 0x10]
	0x03396950 MOVZ W2, 0x4
	0x03396954 MOV X3, X31
	0x03396958 LDP X30, X21, [X31], #0x20
	0x0339695C B 0x3226FBC
	0x03396960 CBZ X20, 0x339697C
	0x03396964 MOV X0, X20
	0x03396968 MOV X1, X19
	0x0339696C LDP X20, X19, [X31 + 0x10]
	0x03396970 MOV X2, X31
	0x03396974 LDP X30, X21, [X31], #0x20
	0x03396978 B 0x322693C
	0x0339697C BL 0x1C16F20
	0x03396980 ADRP X0, 0xD8F000
	0x03396984 LDR X0, [X0 + 0xDD0]
	0x03396988 BL 0x1C16D08
	0x0339698C BL 0x1C16F10
	0x03396990 MOV X19, X0
	0x03396994 ADRP X0, 0xD8F000
	0x03396998 LDR X0, [X0 + 0xDD8]
	0x0339699C BL 0x1C16D08
	0x033969A0 MOV X1, X0
	0x033969A4 MOV X0, X19
	0x033969A8 MOV X2, X31
	0x033969AC BL 0x32CDE64
	0x033969B0 ADRP X0, 0xD95000
	0x033969B4 LDR X0, [X0 + 0x430]
	0x033969B8 BL 0x1C16D08
	0x033969BC MOV X1, X0
	0x033969C0 MOV X0, X19
	0x033969C4 BL 0x1C16DEC
	0x033969C8 STP X30, X21, [X31 - 0x20]!
	0x033969CC STP X20, X19, [X31 + 0x10]
	0x033969D0 ADRP X20, 0x1047000
	0x033969D4 LDRB W8, [X20 + 0x89]
	0x033969D8 MOV X19, X1
	0x033969DC MOV X21, X0
	0x033969E0 TBNZ X8, 0x0, 0x33969F8
	0x033969E4 ADRP X0, 0xD5F000
	0x033969E8 LDR X0, [X0 + 0x278]
	0x033969EC BL 0x1C16CF4
	0x033969F0 MOVZ W8, 0x1
	0x033969F4 STRB W8, [X20 + 0x89]
	0x033969F8 CBZ X19, 0x3396B10
	0x033969FC ADRP X8, 0xD5F000
	0x03396A00 LDR X8, [X8 + 0x278]
	0x03396A04 LDR X9, [X19]
	0x03396A08 LDR X8, [X8]
	0x03396A0C CMP X9, X8
	0x03396A10 B.NE 0x3396B10
	0x03396A14 MOV X0, X19
	0x03396A18 MOV X1, X31
	0x03396A1C BL 0x322B8DC
	0x03396A20 CBZ X21, 0x3396B0C
	0x03396A24 LDR X8, [X21]
	0x03396A28 MOV X20, X0
	0x03396A2C MOV X0, X21
	0x03396A30 LDP X9, X1, [X8 + 0x1A8]
	0x03396A34 BLR X9
	0x03396A38 LDR X8, [X21]
	0x03396A3C MOV X19, X0
	0x03396A40 MOV X0, X21
	0x03396A44 LDP X9, X1, [X8 + 0x198]
	0x03396A48 BLR X9
	0x03396A4C CMP W0, 0x80
	0x03396A50 B.NE 0x3396A7C
	0x03396A54 CBZ X19, 0x3396B0C
	0x03396A58 MOVZ W1, 0x2B
	0x03396A5C MOV X0, X19
	0x03396A60 MOV X2, X31
	0x03396A64 BL 0x322C668
	0x03396A68 ADD W1, W0, 0x1
	0x03396A6C MOV X0, X19
	0x03396A70 MOV X2, X31
	0x03396A74 BL 0x322B484
	0x03396A78 MOV X19, X0
	0x03396A7C CBZ X20, 0x3396B0C
	0x03396A80 LDR W8, [X20 + 0x10]
	0x03396A84 SUBS W1, W8, 0x1
	0x03396A88 B.LT 0x3396AE4
	0x03396A8C MOV X0, X20
	0x03396A90 MOV X2, X31
	0x03396A94 BL 0x3222A1C
	0x03396A98 AND W8, W0, 0xFFFF
	0x03396A9C CMP W8, 0x2A
	0x03396AA0 B.NE 0x3396AE4
	0x03396AA4 LDR W8, [X20 + 0x10]
	0x03396AA8 MOV X0, X20
	0x03396AAC MOV W1, W31
	0x03396AB0 MOV X3, X31
	0x03396AB4 SUB W2, W8, 0x1
	0x03396AB8 BL 0x3228DE4
	0x03396ABC CBZ X0, 0x3396B0C
	0x03396AC0 LDR W4, [X0 + 0x10]
	0x03396AC4 MOV X2, X0
	0x03396AC8 MOVZ W5, 0x5
	0x03396ACC MOV X0, X19
	0x03396AD0 MOV W1, W31
	0x03396AD4 MOV W3, W31
	0x03396AD8 MOV X6, X31
	0x03396ADC BL 0x3225DC8
	0x03396AE0 B 0x3396AF8
	0x03396AE4 MOVZ W2, 0x5
	0x03396AE8 MOV X0, X20
	0x03396AEC MOV X1, X19
	0x03396AF0 MOV X3, X31
	0x03396AF4 BL 0x322590C
	0x03396AF8 LDP X20, X19, [X31 + 0x10]
	0x03396AFC CMP W0, 0x0
	0x03396B00 CSET W0, EQ
	0x03396B04 LDP X30, X21, [X31], #0x20
	0x03396B08 RET
	0x03396B0C BL 0x1C16F20
	0x03396B10 ADRP X0, 0xD8F000
	0x03396B14 LDR X0, [X0 + 0xDD0]
	0x03396B18 BL 0x1C16D08
	0x03396B1C BL 0x1C16F10
	0x03396B20 MOV X19, X0
	0x03396B24 ADRP X0, 0xD8F000
	0x03396B28 LDR X0, [X0 + 0xDD8]
	0x03396B2C BL 0x1C16D08
	0x03396B30 MOV X1, X0
	0x03396B34 MOV X0, X19
	0x03396B38 MOV X2, X31
	0x03396B3C BL 0x32CDE64
	0x03396B40 ADRP X0, 0xD95000
	0x03396B44 LDR X0, [X0 + 0x438]
	0x03396B48 BL 0x1C16D08
	0x03396B4C MOV X1, X0
	0x03396B50 MOV X0, X19
	0x03396B54 BL 0x1C16DEC
	0x03396B58 MOV X1, X31
	0x03396B5C B 0x32CCA60
	0x03396B60 MOVZ W0, 0x20
	0x03396B64 RET
	0x03396B68 MOV X1, X31
	0x03396B6C B 0x33BE520
	0x03396B70 STP X30, X21, [X31 - 0x20]!
	0x03396B74 STP X20, X19, [X31 + 0x10]
	0x03396B78 ADRP X21, 0x1047000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0x1048000
	015 Move W8, [X19+128]
	016 Move X27, X2
	017 Move X21, X0
	018 Move [X31+16], X1
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0xD88000
	024 Move X0, [X0+2312]
	025 Call 0x1C17CF4
	026 Move X0, 0xD88000
	027 Move X0, [X0+2328]
	028 Call 0x1C17CF4
	029 Move X0, 0xD5E000
	030 Move X0, [X0+2512]
	031 Call 0x1C17CF4
	032 Move X0, 0xD5E000
	033 Move X0, [X0+2760]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X19+128], W8
	037 Move X8, [X21]
	038 Move W1, 56
	039 Move X0, X21
	040 Move X9, [X8+1672]
	041 Move X2, [X8+1680]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Compare X0, 0
	044 JumpIfEqual {230}
	045 Move X8, 0xD5E000
	046 Move X8, [X8+2512]
	047 Move X23, X0
	048 Move W1, [X23+24]
	049 Move X19, 0xD5E000
	050 Move X0, [X8]
	051 Move X19, [X19+2760]
	052 Call 0x1C17D6C
	053 Move X8, [X19]
	054 Move W1, [X23+24]
	055 Move X21, X0
	056 Move X0, X8
	057 Call 0x1C17D6C
	058 Move W8, [X23+24]
	059 Move X22, X0
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X19, X31
	062 Add X20, X21, 32
	063 Add X25, X22, 32
	064 Add X26, X23, 32
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X0, [X26]
	067 Compare X0, 0
	068 JumpIfEqual {230}
	069 Move X8, [X0]
	070 Move X9, [X8+424]
	071 Move X1, [X8+432]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Compare X22, 0
	074 JumpIfEqual {230}
	075 Move W8, [X22+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move [X25], X0
	078 Move W8, [X23+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, [X26]
	081 Compare X0, 0
	082 JumpIfEqual {230}
	083 Move X8, [X0]
	084 Move X9, [X8+776]
	085 Move X1, [X8+784]
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Compare X21, 0
	088 JumpIfEqual {230}
	089 Move X24, X0
	090 Compare X0, 0
	091 JumpIfEqual {98}
	092 Move X8, [X21]
	093 Move X0, X24
	094 Move X1, [X8+64]
	095 Call 0x1C17E00
	096 Compare X0, 0
	097 JumpIfEqual {231}
	098 Move W8, [X21+24]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move [X20], X24
	101 Move W8, [X23+24]
	102 Add X19, X19, 1
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move [X31+8], X27
	105 Move X8, 0xD88000
	106 Move X8, [X8+2312]
	107 Move X0, [X8]
	108 Call Comparer`1<Object>.get_Default
	109 Compare X21, 0
	110 JumpIfEqual {230}
	111 Move X8, [X21+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X27, 0xD88000
	114 Move X27, [X27+2328]
	115 Move X23, X0
	116 And X8, X8, 0
	117 Move W19, 1
	118 Compare X22, 0
	119 JumpIfEqual {230}
	120 Move W9, [X22+24]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Add X9, X22, X19
	124 Add X10, X21, X19
	125 Move X9, [X9+32]
	126 Move X24, [X10+32]
	127 Move W20, W31
	128 Move X26, X19
	129 Move [X31+24], X9
	130 Subtract X29, X26, 1
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Add X28, X21, X29
	133 Add X28, X28, 32
	134 Move X25, [X28]
	135 Compare X23, 0
	136 JumpIfEqual {230}
	137 Move X8, [X23]
	138 Move X1, [X27]
	139 NotImplemented "Instruction LDRH not yet implemented."
	140 Compare X9, 0
	141 JumpIfEqual {148}
	142 Move X10, [X8+176]
	143 Add X10, X10, 8
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Subtract X9, X9, 1
	147 Add X10, X10, 16
	148 Move X0, X23
	149 Move W2, W31
	150 Call 0x1C5D788
	151 NotImplemented "Instruction LDRSW not yet implemented."
	152 Add X8, X8, X9
	153 Add X0, X8, 312
	154 Move X8, [X0]
	155 Move X3, [X0+8]
	156 Move X0, X23
	157 Move X1, X25
	158 Move X2, X24
	159 NotImplemented "Instruction BLR not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move W8, [X22+24]
	162 NotImplemented "Instruction CMP not yet implemented."
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Add X8, X22, 32
	165 Move X9, [X8]
	166 Move [X8], X9
	167 Move X8, [X21+24]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X25, [X28]
	170 Compare X25, 0
	171 JumpIfEqual {179}
	172 Move X8, [X21]
	173 Move X0, X25
	174 Move X1, [X8+64]
	175 Call 0x1C17E00
	176 Compare X0, 0
	177 JumpIfEqual {231}
	178 Move X8, [X21+24]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Add X9, X21, X26
	181 Move W20, 1
	182 Move X26, X29
	183 Move [X9+32], X25
	184 Compare X29, 0
	185 JumpIfNotEqual {130}
	186 Move TEMP, X20
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {208}
	190 Move W8, [X22+24]
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move X9, [X31+24]
	193 Move X20, W26
	194 Add X8, X22, X20
	195 Move [X8+32], X9
	196 Compare X24, 0
	197 JumpIfEqual {204}
	198 Move X8, [X21]
	199 Move X0, X24
	200 Move X1, [X8+64]
	201 Call 0x1C17E00
	202 Compare X0, 0
	203 JumpIfEqual {231}
	204 Move W8, [X21+24]
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Add X8, X21, X20
	207 Move [X8+32], X24
	208 Move W8, [X21+24]
	209 Add X19, X19, 1
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move X8, [X31+16]
	212 Move X20, [X31+112]
	213 Move X19, [X31+120]
	214 Move X24, [X31+80]
	215 Move X23, [X31+88]
	216 Move X26, [X31+64]
	217 Move X25, [X31+72]
	218 Move [X8], X22
	219 Move X8, [X31+8]
	220 Move X28, [X31+48]
	221 Move X27, [X31+56]
	222 Move X29, [X31+32]
	223 Move X30, [X31+40]
	224 Move [X8], X21
	225 Move X22, [X31+96]
	226 Move X21, [X31+104]
	227 Add X31, X31, 128
	228 Return 
	229 Call 0x1C17F28
	230 Call 0x1C17F20
	231 Call 0x1C17F44
	232 Move X1, X31
	233 Call 0x1C17DEC

Method: System.Int32 BinarySearch(System.Array array, System.Object value)

Disassembly:
	0x03396444 CBNZ W8, 0x339644C
	0x03396448 BL 0x1C16DFC
	0x0339644C CMP X25, X19
	0x03396450 B.EQ 0x33964CC
	0x03396454 LDR W8, [X21 + 0x18]
	0x03396458 CMP W23, W8
	0x0339645C B.CS 0x33964E8
	0x03396460 LDR X0, [X22]
	0x03396464 LDR X25, [X24, X23, LSL #3]
	0x03396468 LDR W8, [X0 + 0xE0]
	0x0339646C CBZ W8, 0x3396478
	0x03396470 CBNZ X25, 0x3396480
	0x03396474 B 0x33964A0
	0x03396478 BL 0x1C16DFC
	0x0339647C CBZ X25, 0x33964A0
	0x03396480 LDR W8, [X21 + 0x18]
	0x03396484 CMP W23, W8
	0x03396488 B.CS 0x33964E8
	0x0339648C LDR X0, [X24, X23, LSL #3]
	0x03396490 CBZ X0, 0x33964EC
	0x03396494 MOV X1, X19
	0x03396498 BL 0x33963AC
	0x0339649C TBNZ X0, 0x0, 0x33964CC
	0x033964A0 LDR W8, [X21 + 0x18]
	0x033964A4 ADD X23, X23, 0x1
	0x033964A8 CMP W23, W8
	0x033964AC B.LT 0x3396430
	0x033964B0 LDR X8, [X20]
	0x033964B4 MOV X0, X20
	0x033964B8 LDR X9, [X8 + 0x818]
	0x033964BC LDR X1, [X8 + 0x820]
	0x033964C0 BLR X9
	0x033964C4 MOV X20, X0
	0x033964C8 B 0x33963EC
	0x033964CC CMP X20, 0x0
	0x033964D0 LDP X20, X19, [X31 + 0x30]
	0x033964D4 LDP X22, X21, [X31 + 0x20]
	0x033964D8 LDP X24, X23, [X31 + 0x10]
	0x033964DC CSET W0, NE
	0x033964E0 LDP X30, X25, [X31], #0x40
	0x033964E4 RET
	0x033964E8 BL 0x1C16F28
	0x033964EC BL 0x1C16F20
	0x033964F0 STP X30, X21, [X31 - 0x20]!
	0x033964F4 STP X20, X19, [X31 + 0x10]
	0x033964F8 ADRP X21, 0x1047000
	0x033964FC LDRB W8, [X21 + 0x87]
	0x03396500 MOV X20, X1
	0x03396504 MOV X19, X0
	0x03396508 TBNZ X8, 0x0, 0x3396544
	0x0339650C ADRP X0, 0xD87000
	0x03396510 LDR X0, [X0 + 0x978]
	0x03396514 BL 0x1C16CF4
	0x03396518 ADRP X0, 0xD86000
	0x0339651C LDR X0, [X0 + 0x3A8]
	0x03396520 BL 0x1C16CF4
	0x03396524 ADRP X0, 0xD5D000
	0x03396528 LDR X0, [X0 + 0x758]
	0x0339652C BL 0x1C16CF4
	0x03396530 ADRP X0, 0xD8E000
	0x03396534 LDR X0, [X0 + 0x278]
	0x03396538 BL 0x1C16CF4
	0x0339653C MOVZ W8, 0x1
	0x03396540 STRB W8, [X21 + 0x87]
	0x03396544 CBZ X20, 0x33967D0
	0x03396548 CBZ X19, 0x3396720
	0x0339654C LDR X8, [X19]
	0x03396550 MOV X0, X19
	0x03396554 LDP X9, X1, [X8 + 0x198]
	0x03396558 BLR X9
	0x0339655C CMP W0, 0x8
	0x03396560 B.EQ 0x3396574
	0x03396564 CMP W0, 0x4
	0x03396568 B.EQ 0x33965C4
	0x0339656C CMP W0, 0x1
	0x03396570 B.NE 0x33966F4
	0x03396574 ADRP X8, 0xD5D000
	0x03396578 LDR X8, [X8 + 0x758]
	0x0339657C LDR X9, [X20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x1048000
	010 Move W8, [X21+129]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xD96000
	018 Move X0, [X0+1000]
	019 Call 0x1C17CF4
	020 Move X0, 0xD5E000
	021 Move X0, [X0+3576]
	022 Call 0x1C17CF4
	023 Move X0, 0xD66000
	024 Move X0, [X0+1384]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+129], W8
	028 Compare X20, 0
	029 JumpIfEqual {91}
	030 Move X21, 0xD66000
	031 Move X24, 0xD5E000
	032 Move X21, [X21+1384]
	033 Move X24, [X24+3576]
	034 Move X0, X20
	035 Call Array.get_Length, X0
	036 Move X8, [X21]
	037 Move W1, W0
	038 Move X0, X8
	039 Call 0x1C17D6C
	040 Move X21, X0
	041 Move X0, X20
	042 Call Array.get_Length, X0
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X22, X31
	045 Add X25, X21, 32
	046 Move X0, X20
	047 Move W1, W22
	048 Call Array.GetValue, X0, X1
	049 Move X8, [X24]
	050 Move X23, X0
	051 Move W9, [X8+224]
	052 Compare W9, 0
	053 JumpIfNotEqual {56}
	054 Move X0, X8
	055 Call 0x1C17DFC
	056 Move X0, X23
	057 Move X1, X31
	058 Call Enum.ToUInt64, X0
	059 Compare X21, 0
	060 JumpIfEqual {91}
	061 Move W8, [X21+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move [X25], X0
	064 Move X0, X20
	065 Add X22, X22, 1
	066 Call Array.get_Length, X0
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X0, [X24]
	069 Move X20, 0xD96000
	070 Move W8, [X0+224]
	071 Move X20, [X20+1000]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X0, X19
	076 Move X1, X31
	077 Call Enum.ToUInt64, X0
	078 Move X2, [X20]
	079 Move X1, X0
	080 Move X0, X21
	081 Move X20, [X31+48]
	082 Move X19, [X31+56]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X24, [X31+16]
	086 Move X23, [X31+24]
	087 Move X30, [X31+64]
	088 Move X25, [X31+72]
	089 Call 0x22CAA48, X0, X1
	090 Return X0
	091 Call 0x1C17F20
	092 Call 0x1C17F28

Method: System.Boolean IsIntegerType(System.Type t)

Disassembly:
	0x033961A0 B.EQ 0x3396208
	0x033961A4 LDR X8, [X20]
	0x033961A8 MOV X0, X20
	0x033961AC LDR X9, [X8 + 0x328]
	0x033961B0 LDR X1, [X8 + 0x330]
	0x033961B4 BLR X9
	0x033961B8 CBZ X0, 0x33962E0
	0x033961BC MOV X21, X0
	0x033961C0 BL 0x3395E80
	0x033961C4 TBZ X0, 0x0, 0x33961EC
	0x033961C8 LDR X8, [X21]
	0x033961CC MOV X0, X21
	0x033961D0 MOV X1, X19
	0x033961D4 LDP X20, X19, [X31 + 0x20]
	0x033961D8 LDR X3, [X8 + 0x2A8]
	0x033961DC LDR X2, [X8 + 0x2B0]
	0x033961E0 LDP X22, X21, [X31 + 0x10]
	0x033961E4 LDR X30, [X31], #0x30
	0x033961E8 BR X3
	0x033961EC LDR X8, [X19]
	0x033961F0 MOV X0, X19
	0x033961F4 MOV X1, X20
	0x033961F8 LDR X9, [X8 + 0x298]
	0x033961FC LDR X2, [X8 + 0x2A0]
	0x03396200 BLR X9
	0x03396204 TBZ X0, 0x0, 0x3396210
	0x03396208 MOVZ W8, 0x1
	0x0339620C B 0x33962CC
	0x03396210 MOV X0, X20
	0x03396214 BL 0x33962E8
	0x03396218 TBZ X0, 0x0, 0x3396234
	0x0339621C MOV X0, X19
	0x03396220 MOV X1, X20
	0x03396224 LDP X20, X19, [X31 + 0x20]
	0x03396228 LDP X22, X21, [X31 + 0x10]
	0x0339622C LDR X30, [X31], #0x30
	0x03396230 B 0x33963AC
	0x03396234 LDR X8, [X20]
	0x03396238 MOV X0, X20
	0x0339623C LDR X9, [X8 + 0x3A8]
	0x03396240 LDR X1, [X8 + 0x3B0]
	0x03396244 BLR X9
	0x03396248 TBZ X0, 0x0, 0x33962C8
	0x0339624C LDR X8, [X20]
	0x03396250 MOV X0, X20
	0x03396254 LDR X9, [X8 + 0x498]
	0x03396258 LDR X1, [X8 + 0x4A0]
	0x0339625C BLR X9
	0x03396260 CBZ X0, 0x33962E0
	0x03396264 LDR W8, [X0 + 0x18]
	0x03396268 MOV X20, X0
	0x0339626C CMP W8, 0x0
	0x03396270 CSET W21, GT
	0x03396274 CMP W8, 0x1
	0x03396278 B.LT 0x33962C0
	0x0339627C MOV W22, W31
	0x03396280 CMP W22, W8
	0x03396284 B.CS 0x33962E4
	0x03396288 ADD X8, X20, W22, 0x3, SXTW
	0x0339628C LDR X0, [X8 + 0x20]
	0x03396290 CBZ X0, 0x33962E0
	0x03396294 LDR X8, [X0]
	0x03396298 MOV X1, X19
	0x0339629C LDR X9, [X8 + 0x2A8]
	0x033962A0 LDR X2, [X8 + 0x2B0]
	0x033962A4 BLR X9
	0x033962A8 TBZ X0, 0x0, 0x33962C0
	0x033962AC LDR W8, [X20 + 0x18]
	0x033962B0 ADD W22, W22, 0x1
	0x033962B4 CMP W22, W8
	0x033962B8 CSET W21, LT
	0x033962BC B.LT 0x3396280
	0x033962C0 EOR W8, W21, 0x1
	0x033962C4 B 0x33962CC
	0x033962C8 MOV W8, W31
	0x033962CC LDP X20, X19, [X31 + 0x20]
	0x033962D0 LDP X22, X21, [X31 + 0x10]
	0x033962D4 AND W0, W8, 0x1
	0x033962D8 LDR X30, [X31], #0x30
	0x033962DC RET
	0x033962E0 BL 0x1C16F20
	0x033962E4 BL 0x1C16F28
	0x033962E8 STP X30, X21, [X31 - 0x20]!
	0x033962EC STP X20, X19, [X31 + 0x10]
	0x033962F0 ADRP X20, 0x1047000
	0x033962F4 ADRP X21, 0xD86000
	0x033962F8 LDRB W8, [X20 + 0x9C]
	0x033962FC LDR X21, [X21 + 0x4E8]
	0x03396300 MOV X19, X0
	0x03396304 TBNZ X8, 0x0, 0x339631C
	0x03396308 ADRP X0, 0xD86000
	0x0339630C LDR X0, [X0 + 0x4E8]
	0x03396310 BL 0x1C16CF4
	0x03396314 MOVZ W8, 0x1
	0x03396318 STRB W8, [X20 + 0x9C]
	0x0339631C LDR X0, [X21]
	0x03396320 CBZ X19, 0x3396338
	0x03396324 LDR X8, [X19]
	0x03396328 LDRB W9, [X0 + 0x130]
	0x0339632C LDRB W10, [X8 + 0x130]
	0x03396330 CMP W10, W9
	0x03396334 B.CS 0x3396340
	0x03396338 MOV X20, X31
	0x0339633C B 0x3396354
	0x03396340 LDR X8, [X8 + 0xC8]
	0x03396344 ADD X8, X8, X9, 0x3, LSL
	0x03396348 LDUR X8, [X8 - 0x8]
	0x0339634C CMP X8, X0
	0x03396350 CSEL X20, X19, X31, EQ
	0x03396354 LDR W8, [X0 + 0xE0]
	0x03396358 CBNZ W8, 0x3396360
	0x0339635C BL 0x1C16DFC
	0x03396360 MOV X0, X20
	0x03396364 MOV X1, X31
	0x03396368 MOV X2, X31
	0x0339636C BL 0x33A8424
	0x03396370 TBZ X0, 0x0, 0x3396388
	0x03396374 MOV X0, X20
	0x03396378 LDP X20, X19, [X31 + 0x10]
	0x0339637C MOV X1, X31
	0x03396380 LDP X30, X21, [X31], #0x20
	0x03396384 B 0x33CC4F0
	0x03396388 LDR X8, [X19]
	0x0339638C MOV X0, X19
	0x03396390 LDR X9, [X8 + 0x4B8]
	0x03396394 LDR X1, [X8 + 0x4C0]
	0x03396398 BLR X9
	0x0339639C LDP X20, X19, [X31 + 0x10]
	0x033963A0 UBFM W0, W0, 0x5, 0x5
	0x033963A4 LDP X30, X21, [X31], #0x20
	0x033963A8 RET
	0x033963AC STP X30, X25, [X31 - 0x40]!
	0x033963B0 STP X24, X23, [X31 + 0x10]
	0x033963B4 STP X22, X21, [X31 + 0x20]
	0x033963B8 STP X20, X19, [X31 + 0x30]
	0x033963BC ADRP X21, 0x1047000
	0x033963C0 ADRP X22, 0xD5D000
	0x033963C4 LDRB W8, [X21 + 0x86]
	0x033963C8 LDR X22, [X22 + 0x6C0]
	0x033963CC MOV X19, X1
	0x033963D0 MOV X20, X0
	0x033963D4 TBNZ X8, 0x0, 0x33963EC
	0x033963D8 ADRP X0, 0xD5D000
	0x033963DC LDR X0, [X0 + 0x6C0]
	0x033963E0 BL 0x1C16CF4
	0x033963E4 MOVZ W8, 0x1
	0x033963E8 STRB W8, [X21 + 0x86]
	0x033963EC LDR X0, [X22]
	0x033963F0 LDR W8, [X0 + 0xE0]
	0x033963F4 CBNZ W8, 0x33963FC
	0x033963F8 BL 0x1C16DFC
	0x033963FC CBZ X20, 0x33964CC
	0x03396400 LDR X8, [X20]
	0x03396404 MOV X0, X20
	0x03396408 LDR X9, [X8 + 0x858]
	0x0339640C LDR X1, [X8 + 0x860]
	0x03396410 BLR X9
	0x03396414 CBZ X0, 0x33964B0
	0x03396418 LDR W8, [X0 + 0x18]
	0x0339641C MOV X21, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1048000
	007 Move X20, 0xD85000
	008 Move X21, 0xD5E000
	009 Move W8, [X22+130]
	010 Move X20, [X20+3456]
	011 Move X21, [X21+1728]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {52}
	017 Move X0, 0xD87000
	018 Move X0, [X0+584]
	019 Call 0x1C17CF4
	020 Move X0, 0xD85000
	021 Move X0, [X0+3432]
	022 Call 0x1C17CF4
	023 Move X0, 0xD85000
	024 Move X0, [X0+3440]
	025 Call 0x1C17CF4
	026 Move X0, 0xD85000
	027 Move X0, [X0+3448]
	028 Call 0x1C17CF4
	029 Move X0, 0xD85000
	030 Move X0, [X0+3456]
	031 Call 0x1C17CF4
	032 Move X0, 0xD85000
	033 Move X0, [X0+3464]
	034 Call 0x1C17CF4
	035 Move X0, 0xD85000
	036 Move X0, [X0+3472]
	037 Call 0x1C17CF4
	038 Move X0, 0xD5E000
	039 Move X0, [X0+1728]
	040 Call 0x1C17CF4
	041 Move X0, 0xD85000
	042 Move X0, [X0+3480]
	043 Call 0x1C17CF4
	044 Move X0, 0xD85000
	045 Move X0, [X0+3488]
	046 Call 0x1C17CF4
	047 Move X0, 0xD85000
	048 Move X0, [X0+3496]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X22+130], W8
	052 Move X0, [X21]
	053 Move X20, [X20]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, X20
	059 Call Type.GetTypeFromHandle, X0
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X8, 0xD85000
	062 Move X0, [X21]
	063 Move X8, [X8+3448]
	064 Move W9, [X0+224]
	065 Move X20, [X8]
	066 Compare W9, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X0, X20
	070 Call Type.GetTypeFromHandle, X0
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X8, 0xD85000
	073 Move X0, [X21]
	074 Move X8, [X8+3480]
	075 Move W9, [X0+224]
	076 Move X20, [X8]
	077 Compare W9, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X0, X20
	081 Call Type.GetTypeFromHandle, X0
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X8, 0xD85000
	084 Move X0, [X21]
	085 Move X8, [X8+3432]
	086 Move W9, [X0+224]
	087 Move X20, [X8]
	088 Compare W9, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move X0, X20
	092 Call Type.GetTypeFromHandle, X0
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X8, 0xD85000
	095 Move X0, [X21]
	096 Move X8, [X8+3472]
	097 Move W9, [X0+224]
	098 Move X20, [X8]
	099 Compare W9, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X0, X20
	103 Call Type.GetTypeFromHandle, X0
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X8, 0xD85000
	106 Move X0, [X21]
	107 Move X8, [X8+3488]
	108 Move W9, [X0+224]
	109 Move X20, [X8]
	110 Compare W9, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Move X0, X20
	114 Call Type.GetTypeFromHandle, X0
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X8, 0xD85000
	117 Move X0, [X21]
	118 Move X8, [X8+3464]
	119 Move W9, [X0+224]
	120 Move X20, [X8]
	121 Compare W9, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1C17DFC
	124 Move X0, X20
	125 Call Type.GetTypeFromHandle, X0
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X8, 0xD85000
	128 Move X0, [X21]
	129 Move X8, [X8+3496]
	130 Move W9, [X0+224]
	131 Move X20, [X8]
	132 Compare W9, 0
	133 JumpIfNotEqual {135}
	134 Call 0x1C17DFC
	135 Move X0, X20
	136 Call Type.GetTypeFromHandle, X0
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X8, 0xD85000
	139 Move X0, [X21]
	140 Move X8, [X8+3440]
	141 Move W9, [X0+224]
	142 Move X20, [X8]
	143 Compare W9, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Move X0, X20
	147 Call Type.GetTypeFromHandle, X0
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move X8, 0xD87000
	150 Move X0, [X21]
	151 Move X8, [X8+584]
	152 Move W9, [X0+224]
	153 Move X20, [X8]
	154 Compare W9, 0
	155 JumpIfNotEqual {157}
	156 Call 0x1C17DFC
	157 Move X0, X20
	158 Call Type.GetTypeFromHandle, X0
	159 NotImplemented "Instruction CMP not yet implemented."
	160 NotImplemented "Instruction CSET not yet implemented."
	161 Move W0, 1
	162 Move X20, [X31+32]
	163 Move X19, [X31+40]
	164 Move X22, [X31+16]
	165 Move X21, [X31+24]
	166 Move X30, [X31+48]
	167 Return X0

Method: System.Boolean get_IsSerializable()

Disassembly:
	0x03396D44 LDR X8, [X19]
	0x03396D48 MOV X0, X19
	0x03396D4C LDR X9, [X8 + 0x3E8]
	0x03396D50 LDR X1, [X8 + 0x3F0]
	0x03396D54 BLR X9
	0x03396D58 EOR W8, W0, 0x1
	0x03396D5C B 0x3396D64
	0x03396D60 MOV W8, W31
	0x03396D64 AND W0, W8, 0x1
	0x03396D68 LDP X30, X19, [X31], #0x10
	0x03396D6C RET
	0x03396D70 STP X30, X19, [X31 - 0x10]!
	0x03396D74 ADRP X0, 0xD5D000
	0x03396D78 LDR X0, [X0 + 0xB40]
	0x03396D7C BL 0x1C16D08
	0x03396D80 BL 0x1C16F10
	0x03396D84 MOV X19, X0
	0x03396D88 ADRP X0, 0xD8F000
	0x03396D8C LDR X0, [X0 + 0xD28]
	0x03396D90 BL 0x1C16D08
	0x03396D94 MOV X1, X0
	0x03396D98 MOV X0, X19
	0x03396D9C MOV X2, X31
	0x03396DA0 BL 0x3379A44
	0x03396DA4 ADRP X0, 0xD95000
	0x03396DA8 LDR X0, [X0 + 0x450]
	0x03396DAC BL 0x1C16D08
	0x03396DB0 MOV X1, X0
	0x03396DB4 MOV X0, X19
	0x03396DB8 BL 0x1C16DEC
	0x03396DBC STP X30, X19, [X31 - 0x10]!
	0x03396DC0 ADRP X0, 0xD5D000
	0x03396DC4 LDR X0, [X0 + 0xB40]
	0x03396DC8 BL 0x1C16D08
	0x03396DCC BL 0x1C16F10
	0x03396DD0 MOV X19, X0
	0x03396DD4 ADRP X0, 0xD8F000
	0x03396DD8 LDR X0, [X0 + 0xD28]
	0x03396DDC BL 0x1C16D08
	0x03396DE0 MOV X1, X0
	0x03396DE4 MOV X0, X19
	0x03396DE8 MOV X2, X31
	0x03396DEC BL 0x3379A44
	0x03396DF0 ADRP X0, 0xD95000
	0x03396DF4 LDR X0, [X0 + 0x458]
	0x03396DF8 BL 0x1C16D08
	0x03396DFC MOV X1, X0
	0x03396E00 MOV X0, X19
	0x03396E04 BL 0x1C16DEC
	0x03396E08 STR X30, [X31 - 0x20]!
	0x03396E0C STP X20, X19, [X31 + 0x10]
	0x03396E10 ADRP X20, 0x1047000
	0x03396E14 LDRB W8, [X20 + 0x8B]
	0x03396E18 MOV X19, X0
	0x03396E1C TBNZ X8, 0x0, 0x3396E34
	0x03396E20 ADRP X0, 0xD87000
	0x03396E24 LDR X0, [X0 + 0x970]
	0x03396E28 BL 0x1C16CF4
	0x03396E2C MOVZ W8, 0x1
	0x03396E30 STRB W8, [X20 + 0x8B]
	0x03396E34 LDR X8, [X19]
	0x03396E38 MOV X0, X19
	0x03396E3C LDR X9, [X8 + 0x3C8]
	0x03396E40 LDR X1, [X8 + 0x3D0]
	0x03396E44 BLR X9
	0x03396E48 TBZ X0, 0x0, 0x3396E64
	0x03396E4C LDR X8, [X19]
	0x03396E50 MOV X0, X19
	0x03396E54 LDR X9, [X8 + 0x3D8]
	0x03396E58 LDR X1, [X8 + 0x3E0]
	0x03396E5C BLR X9
	0x03396E60 TBZ X0, 0x0, 0x3396EC8
	0x03396E64 ADRP X8, 0xD87000
	0x03396E68 LDR X8, [X8 + 0x970]
	0x03396E6C LDR X19, [X8]
	0x03396E70 LDR X8, [X19 + 0x38]
	0x03396E74 CBNZ X8, 0x3396E84
	0x03396E78 MOV X0, X19
	0x03396E7C BL 0x1C5C6E0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x1048000
	008 Move W8, [X20+131]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xD90000
	015 Move X0, [X0+3080]
	016 Call 0x1C17CF4
	017 Move X0, 0xD93000
	018 Move X0, [X0+720]
	019 Call 0x1C17CF4
	020 Move X0, 0xD5E000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+131], W8
	025 Move X8, [X19]
	026 Move X0, X19
	027 Move X9, [X8+1208]
	028 Move X1, [X8+1216]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move TEMP, X0
	031 And TEMP, TEMP, 0x2000
	032 Compare TEMP, 0x2000
	033 JumpIfEqual {88}
	034 Move X8, [X19]
	035 Move X0, X19
	036 Move X9, [X8+808]
	037 Move X1, [X8+816]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Compare X0, 0
	040 JumpIfEqual {96}
	041 Move X19, X0
	042 Call Type.IsRuntimeImplemented, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {87}
	047 Move X21, 0xD90000
	048 Move X22, 0xD5E000
	049 Move X23, 0xD93000
	050 Move X21, [X21+3080]
	051 Move X22, [X22+1728]
	052 Move X23, [X23+720]
	053 Move X0, [X22]
	054 Move X20, [X21]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, X20
	060 Call Type.GetTypeFromHandle, X0
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X0, [X22]
	063 Move X20, [X23]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, X20
	069 Call Type.GetTypeFromHandle, X0
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19]
	072 Move X0, X19
	073 Move X9, [X8+2072]
	074 Move X1, [X8+2080]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X8, [X22]
	077 Move X19, X0
	078 Move W9, [X8+224]
	079 Compare W9, 0
	080 JumpIfEqual {83}
	081 Compare X19, 0
	082 JumpIfNotEqual {53}
	083 Move X0, X8
	084 Call 0x1C17DFC
	085 Compare X19, 0
	086 JumpIfNotEqual {53}
	087 Move W0, W31
	088 Move W0, 1
	089 Move X20, [X31+32]
	090 Move X19, [X31+40]
	091 Move X22, [X31+16]
	092 Move X21, [X31+24]
	093 Move X30, [X31+48]
	094 Move X23, [X31+56]
	095 Return X0
	096 Call 0x1C17F20

Method: System.Boolean get_ContainsGenericParameters()

Disassembly:
	0x03396F18 ADRP X0, 0xD95000
	0x03396F1C LDR X0, [X0 + 0x460]
	0x03396F20 BL 0x1C16D08
	0x03396F24 MOV X1, X0
	0x03396F28 MOV X0, X19
	0x03396F2C BL 0x1C16DEC
	0x03396F30 STP X30, X19, [X31 - 0x10]!
	0x03396F34 ADRP X0, 0xD5D000
	0x03396F38 LDR X0, [X0 + 0x5B0]
	0x03396F3C BL 0x1C16D08
	0x03396F40 BL 0x1C16F10
	0x03396F44 MOV X19, X0
	0x03396F48 ADRP X0, 0xD8F000
	0x03396F4C LDR X0, [X0 + 0xEC0]
	0x03396F50 BL 0x1C16D08
	0x03396F54 MOV X1, X0
	0x03396F58 MOV X0, X19
	0x03396F5C MOV X2, X31
	0x03396F60 BL 0x337DF1C
	0x03396F64 ADRP X0, 0xD95000
	0x03396F68 LDR X0, [X0 + 0x468]
	0x03396F6C BL 0x1C16D08
	0x03396F70 MOV X1, X0
	0x03396F74 MOV X0, X19
	0x03396F78 BL 0x1C16DEC
	0x03396F7C STP X30, X19, [X31 - 0x10]!
	0x03396F80 ADRP X0, 0xD5D000
	0x03396F84 LDR X0, [X0 + 0xB40]
	0x03396F88 BL 0x1C16D08
	0x03396F8C BL 0x1C16F10
	0x03396F90 MOV X1, X31
	0x03396F94 MOV X19, X0
	0x03396F98 BL 0x3380310
	0x03396F9C ADRP X0, 0xD95000
	0x03396FA0 LDR X0, [X0 + 0x470]
	0x03396FA4 BL 0x1C16D08
	0x03396FA8 MOV X1, X0
	0x03396FAC MOV X0, X19
	0x03396FB0 BL 0x1C16DEC
	0x03396FB4 STR X30, [X31 - 0x20]!
	0x03396FB8 STP X20, X19, [X31 + 0x10]
	0x03396FBC LDR X8, [X0]
	0x03396FC0 LDR X9, [X8 + 0x3A8]
	0x03396FC4 LDR X1, [X8 + 0x3B0]
	0x03396FC8 BLR X9
	0x03396FCC MOV W20, W0
	0x03396FD0 ADRP X0, 0xD5D000
	0x03396FD4 LDR X0, [X0 + 0x5B0]
	0x03396FD8 BL 0x1C16D08
	0x03396FDC BL 0x1C16F10
	0x03396FE0 MOV X19, X0
	0x03396FE4 TBZ X20, 0x0, 0x3396FF8
	0x03396FE8 MOV X0, X19
	0x03396FEC MOV X1, X31
	0x03396FF0 BL 0x337DEC0
	0x03396FF4 B 0x3397014
	0x03396FF8 ADRP X0, 0xD8F000
	0x03396FFC LDR X0, [X0 + 0xEC0]
	0x03397000 BL 0x1C16D08
	0x03397004 MOV X1, X0
	0x03397008 MOV X0, X19
	0x0339700C MOV X2, X31
	0x03397010 BL 0x337DF1C
	0x03397014 ADRP X0, 0xD94000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Move X19, X0
	006 Move X9, [X8+1048]
	007 Move X1, [X8+1056]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {24}
	013 Move X0, X19
	014 Call Type.GetRootElementType, X0
	015 Compare X0, 0
	016 JumpIfEqual {76}
	017 Move X8, [X0]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X2, [X8+648]
	021 Move X1, [X8+656]
	022 Move X30, [X31+32]
	023 CallNoReturn X2
	024 Move X8, [X19]
	025 Move X0, X19
	026 Move X9, [X8+936]
	027 Move X1, [X8+944]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {34}
	033 Move W0, 1
	034 Move X8, [X19]
	035 Move X0, X19
	036 Move X9, [X8+968]
	037 Move X1, [X8+976]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {70}
	043 Move X8, [X19]
	044 Move X0, X19
	045 Move X9, [X8+1128]
	046 Move X1, [X8+1136]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Compare X0, 0
	049 JumpIfEqual {76}
	050 Move W8, [X0+24]
	051 Move X19, X0
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W20, W31
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Add X8, X19, W20
	056 Move X0, [X8+32]
	057 Compare X0, 0
	058 JumpIfEqual {76}
	059 Move X8, [X0]
	060 Move X9, [X8+648]
	061 Move X1, [X8+656]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {71}
	067 Move W8, [X19+24]
	068 Add W20, W20, 1
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move W0, W31
	071 Move X20, [X31+16]
	072 Move X19, [X31+24]
	073 And W0, W0, 1
	074 Move X30, [X31+32]
	075 Return X0
	076 Call 0x1C17F20
	077 Call 0x1C17F28

Method: System.Type GetRootElementType()

Disassembly:
	0x03397028 BL 0x1C16DEC
	0x0339702C LDR X8, [X0]
	0x03397030 LDR X2, [X8 + 0x4B8]
	0x03397034 LDR X1, [X8 + 0x4C0]
	0x03397038 BR X2
	0x0339703C STR X30, [X31 - 0x10]!
	0x03397040 LDR X8, [X0]
	0x03397044 LDR X9, [X8 + 0x4B8]
	0x03397048 LDR X1, [X8 + 0x4C0]
	0x0339704C BLR X9
	0x03397050 UBFM W0, W0, 0x7, 0x7
	0x03397054 LDR X30, [X31], #0x10
	0x03397058 RET
	0x0339705C STR X30, [X31 - 0x10]!
	0x03397060 LDR X8, [X0]
	0x03397064 LDR X9, [X8 + 0x4B8]
	0x03397068 LDR X1, [X8 + 0x4C0]
	0x0339706C BLR X9
	0x03397070 UBFM W0, W0, 0x8, 0x8
	0x03397074 LDR X30, [X31], #0x10

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {23}
	005 Move X19, X0
	006 Move X8, [X19]
	007 Move X0, X19
	008 Move X9, [X8+1048]
	009 Move X1, [X8+1056]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {24}
	015 Move X8, [X19]
	016 Move X0, X19
	017 Move X9, [X8+1064]
	018 Move X1, [X8+1072]
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move X19, X0
	021 Compare X0, 0
	022 JumpIfNotEqual {6}
	023 Call 0x1C17F20
	024 Move X0, X19
	025 Move X30, [X31+16]
	026 Move X19, [X31+24]
	027 Return X0

Method: System.Boolean IsSubclassOf(System.Type c)

Disassembly:
	0x03397078 RET
	0x0339707C STP X30, X19, [X31 - 0x10]!
	0x03397080 LDR X8, [X0]
	0x03397084 MOV X19, X0
	0x03397088 LDR X9, [X8 + 0x4B8]
	0x0339708C LDR X1, [X8 + 0x4C0]
	0x03397090 BLR X9
	0x03397094 TBNZ X0, 0x5, 0x33970B4
	0x03397098 LDR X8, [X19]
	0x0339709C MOV X0, X19
	0x033970A0 LDR X9, [X8 + 0x5E8]
	0x033970A4 LDR X1, [X8 + 0x5F0]
	0x033970A8 BLR X9
	0x033970AC EOR W8, W0, 0x1
	0x033970B0 B 0x33970B8
	0x033970B4 MOV W8, W31
	0x033970B8 AND W0, W8, 0x1
	0x033970BC LDP X30, X19, [X31], #0x10
	0x033970C0 RET
	0x033970C4 LDR X8, [X0]
	0x033970C8 LDR X2, [X8 + 0x5E8]
	0x033970CC LDR X1, [X8 + 0x5F0]
	0x033970D0 BR X2
	0x033970D4 STR X30, [X31 - 0x10]!
	0x033970D8 LDR X8, [X0]
	0x033970DC LDR X9, [X8 + 0x4B8]
	0x033970E0 LDR X1, [X8 + 0x4C0]
	0x033970E4 BLR X9
	0x033970E8 AND W8, W0, 0x7
	0x033970EC CMP W8, 0x5
	0x033970F0 CSET W0, EQ
	0x033970F4 LDR X30, [X31], #0x10
	0x033970F8 RET
	0x033970FC STR X30, [X31 - 0x10]!
	0x03397100 LDR X8, [X0]
	0x03397104 LDR X9, [X8 + 0x4B8]
	0x03397108 LDR X1, [X8 + 0x4C0]
	0x0339710C BLR X9
	0x03397110 AND W8, W0, 0x7
	0x03397114 CMP W8, 0x2
	0x03397118 CSET W0, EQ
	0x0339711C LDR X30, [X31], #0x10
	0x03397120 RET
	0x03397124 STR X30, [X31 - 0x10]!
	0x03397128 LDR X8, [X0]
	0x0339712C LDR X9, [X8 + 0x4B8]
	0x03397130 LDR X1, [X8 + 0x4C0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1047000
	007 Move X21, 0xD5D000
	008 Move W8, [X22+132]
	009 Move X21, [X21+1728]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD5D000
	017 Move X0, [X0+1728]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+132], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X0, [X21]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Compare X20, 0
	033 JumpIfEqual {46}
	034 Move X0, [X21]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, [X20]
	041 Move X0, X20
	042 Move X9, [X8+2072]
	043 Move X1, [X8+2080]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X20, X0
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CSET not yet implemented."
	048 Move W0, W31
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Return X0

Method: System.Boolean IsAssignableFrom(System.Type c)

Disassembly:
	0x03397134 BLR X9
	0x03397138 ANDS W31, W0, 0x7
	0x0339713C CSET W0, EQ
	0x03397140 LDR X30, [X31], #0x10
	0x03397144 RET
	0x03397148 STR X30, [X31 - 0x10]!
	0x0339714C LDR X8, [X0]
	0x03397150 LDR X9, [X8 + 0x4B8]
	0x03397154 LDR X1, [X8 + 0x4C0]
	0x03397158 BLR X9
	0x0339715C AND W8, W0, 0x7
	0x03397160 CMP W8, 0x1
	0x03397164 CSET W0, EQ
	0x03397168 LDR X30, [X31], #0x10
	0x0339716C RET
	0x03397170 STR X30, [X31 - 0x10]!
	0x03397174 LDR X8, [X0]
	0x03397178 LDR X9, [X8 + 0x4B8]
	0x0339717C LDR X1, [X8 + 0x4C0]
	0x03397180 BLR X9
	0x03397184 AND W8, W0, 0x18
	0x03397188 CMP W8, 0x10
	0x0339718C CSET W0, EQ
	0x03397190 LDR X30, [X31], #0x10
	0x03397194 RET
	0x03397198 LDR X8, [X0]
	0x0339719C LDR X2, [X8 + 0x558]
	0x033971A0 LDR X1, [X8 + 0x560]
	0x033971A4 BR X2
	0x033971A8 LDR X8, [X0]
	0x033971AC LDR X2, [X8 + 0x578]
	0x033971B0 LDR X1, [X8 + 0x580]
	0x033971B4 BR X2
	0x033971B8 STR X30, [X31 - 0x30]!
	0x033971BC STP X22, X21, [X31 + 0x10]
	0x033971C0 STP X20, X19, [X31 + 0x20]
	0x033971C4 ADRP X22, 0x1046000
	0x033971C8 ADRP X20, 0xD94000
	0x033971CC ADRP X21, 0xD5C000
	0x033971D0 LDRB W8, [X22 + 0x8C]
	0x033971D4 LDR X20, [X20 + 0x480]
	0x033971D8 LDR X21, [X21 + 0x6C0]
	0x033971DC MOV X19, X0
	0x033971E0 TBNZ X8, 0x0, 0x3397204
	0x033971E4 ADRP X0, 0xD94000
	0x033971E8 LDR X0, [X0 + 0x480]
	0x033971EC BL 0x1C16CF4
	0x033971F0 ADRP X0, 0xD5C000
	0x033971F4 LDR X0, [X0 + 0x6C0]
	0x033971F8 BL 0x1C16CF4
	0x033971FC MOVZ W8, 0x1
	0x03397200 STRB W8, [X22 + 0x8C]
	0x03397204 LDR X0, [X21]
	0x03397208 LDR X20, [X20]
	0x0339720C LDR W8, [X0 + 0xE0]
	0x03397210 CBNZ W8, 0x3397218
	0x03397214 BL 0x1C16DFC
	0x03397218 MOV X0, X20
	0x0339721C BL 0x338C698
	0x03397220 CBZ X0, 0x3397244
	0x03397224 LDR X8, [X0]
	0x03397228 MOV X1, X19
	0x0339722C LDP X20, X19, [X31 + 0x20]
	0x03397230 LDP X22, X21, [X31 + 0x10]
	0x03397234 LDR X3, [X8 + 0x2A8]
	0x03397238 LDR X2, [X8 + 0x2B0]
	0x0339723C LDR X30, [X31], #0x30
	0x03397240 BR X3
	0x03397244 BL 0x1C16F20
	0x03397248 STR X30, [X31 - 0x30]!
	0x0339724C STP X22, X21, [X31 + 0x10]
	0x03397250 STP X20, X19, [X31 + 0x20]
	0x03397254 ADRP X22, 0x1046000
	0x03397258 ADRP X20, 0xD91000
	0x0339725C ADRP X21, 0xD5C000
	0x03397260 LDRB W8, [X22 + 0x8D]
	0x03397264 LDR X20, [X20 + 0x2D0]
	0x03397268 LDR X21, [X21 + 0x6C0]
	0x0339726C MOV X19, X0
	0x03397270 TBNZ X8, 0x0, 0x3397294
	0x03397274 ADRP X0, 0xD91000
	0x03397278 LDR X0, [X0 + 0x2D0]
	0x0339727C BL 0x1C16CF4
	0x03397280 ADRP X0, 0xD5C000
	0x03397284 LDR X0, [X0 + 0x6C0]
	0x03397288 BL 0x1C16CF4
	0x0339728C MOVZ W8, 0x1
	0x03397290 STRB W8, [X22 + 0x8D]
	0x03397294 LDR X0, [X21]
	0x03397298 LDR X20, [X20]
	0x0339729C LDR W8, [X0 + 0xE0]
	0x033972A0 CBNZ W8, 0x33972A8
	0x033972A4 BL 0x1C16DFC
	0x033972A8 MOV X0, X20
	0x033972AC BL 0x338C698
	0x033972B0 LDR X8, [X19]
	0x033972B4 MOV X1, X0
	0x033972B8 MOV X0, X19
	0x033972BC LDP X20, X19, [X31 + 0x20]
	0x033972C0 LDR X3, [X8 + 0x298]
	0x033972C4 LDR X2, [X8 + 0x2A0]
	0x033972C8 LDP X22, X21, [X31 + 0x10]
	0x033972CC LDR X30, [X31], #0x30
	0x033972D0 BR X3
	0x033972D4 LDR X8, [X0]
	0x033972D8 LDR X2, [X8 + 0x5A8]
	0x033972DC LDR X1, [X8 + 0x5B0]
	0x033972E0 BR X2
	0x033972E4 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1047000
	007 Move X21, 0xD5D000
	008 Move W8, [X22+133]
	009 Move X21, [X21+1728]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD5D000
	017 Move X0, [X0+1728]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+133], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfEqual {27}
	025 Compare X19, 0
	026 JumpIfNotEqual {30}
	027 Call 0x1C17DFC
	028 Compare X19, 0
	029 JumpIfEqual {127}
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, [X20]
	037 Move X0, X20
	038 Move X9, [X8+808]
	039 Move X1, [X8+816]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Compare X0, 0
	042 JumpIfEqual {135}
	043 Move X21, X0
	044 Call Type.IsRuntimeImplemented, X0
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {60}
	049 Move X8, [X21]
	050 Move X0, X21
	051 Move X1, X19
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X3, [X8+680]
	055 Move X2, [X8+688]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 CallNoReturn X3
	060 Move X8, [X19]
	061 Move X0, X19
	062 Move X1, X20
	063 Move X9, [X8+664]
	064 Move X2, [X8+672]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {71}
	070 Move W8, 1
	071 Move X0, X20
	072 Call Type.get_IsInterface, X0
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {86}
	077 Move X0, X19
	078 Move X1, X20
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X22, [X31+16]
	082 Move X21, [X31+24]
	083 Move X30, [X31+48]
	084 Call Type.ImplementInterface, X0, X1
	085 Return X0
	086 Move X8, [X20]
	087 Move X0, X20
	088 Move X9, [X8+936]
	089 Move X1, [X8+944]
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {127}
	095 Move X8, [X20]
	096 Move X0, X20
	097 Move X9, [X8+1176]
	098 Move X1, [X8+1184]
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Compare X0, 0
	101 JumpIfEqual {135}
	102 Move W8, [X0+24]
	103 Move X20, X0
	104 NotImplemented "Instruction CMP not yet implemented."
	105 NotImplemented "Instruction CSET not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move W22, W31
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Add X8, X20, W22
	110 Move X0, [X8+32]
	111 Compare X0, 0
	112 JumpIfEqual {135}
	113 Move X8, [X0]
	114 Move X1, X19
	115 Move X9, [X8+680]
	116 Move X2, [X8+688]
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfNotEqual {126}
	122 Move W8, [X20+24]
	123 Add W22, W22, 1
	124 NotImplemented "Instruction CMP not yet implemented."
	125 NotImplemented "Instruction CSET not yet implemented."
	126 Xor W8, W21, 1
	127 Move W8, W31
	128 Move X20, [X31+32]
	129 Move X19, [X31+40]
	130 Move X22, [X31+16]
	131 Move X21, [X31+24]
	132 And W0, W8, 1
	133 Move X30, [X31+48]
	134 Return X0
	135 Call 0x1C17F20
	136 Call 0x1C17F28

Method: System.Boolean ImplementInterface(System.Type ifaceType)

Disassembly:
	0x033973AC TBNZ X8, 0x0, 0x33973D0
	0x033973B0 ADRP X0, 0xD5C000
	0x033973B4 LDR X0, [X0 + 0x6C0]
	0x033973B8 BL 0x1C16CF4
	0x033973BC ADRP X0, 0xD94000
	0x033973C0 LDR X0, [X0 + 0x488]
	0x033973C4 BL 0x1C16CF4
	0x033973C8 MOVZ W8, 0x1
	0x033973CC STRB W8, [X22 + 0x8F]
	0x033973D0 LDR X0, [X21]
	0x033973D4 LDR X20, [X20]
	0x033973D8 LDR W8, [X0 + 0xE0]
	0x033973DC CBNZ W8, 0x33973E4
	0x033973E0 BL 0x1C16DFC
	0x033973E4 MOV X0, X20
	0x033973E8 BL 0x338C698
	0x033973EC LDR X8, [X19]
	0x033973F0 MOV X1, X0
	0x033973F4 MOV X0, X19
	0x033973F8 LDP X20, X19, [X31 + 0x20]
	0x033973FC LDR X3, [X8 + 0x298]
	0x03397400 LDR X2, [X8 + 0x2A0]
	0x03397404 LDP X22, X21, [X31 + 0x10]
	0x03397408 LDR X30, [X31], #0x30
	0x0339740C BR X3
	0x03397410 MOV W0, W31
	0x03397414 RET
	0x03397418 MOV X4, X1
	0x0339741C MOVZ W1, 0x14
	0x03397420 MOVZ W3, 0x3
	0x03397424 MOV X2, X31
	0x03397428 MOV X5, X31
	0x0339742C B 0x3397440
	0x03397430 MOV X5, X4
	0x03397434 MOV X4, X3
	0x03397438 MOVZ W3, 0x3
	0x0339743C B 0x3397440
	0x03397440 STR X30, [X31 - 0x60]!
	0x03397444 STP X28, X27, [X31 + 0x10]
	0x03397448 STP X26, X25, [X31 + 0x20]
	0x0339744C STP X24, X23, [X31 + 0x30]
	0x03397450 STP X22, X21, [X31 + 0x40]
	0x03397454 STP X20, X19, [X31 + 0x50]
	0x03397458 ADRP X25, 0x1046000
	0x0339745C LDRB W8, [X25 + 0x90]
	0x03397460 MOV X19, X5
	0x03397464 MOV X20, X4
	0x03397468 MOV W21, W3
	0x0339746C MOV X22, X2
	0x03397470 MOV W23, W1
	0x03397474 MOV X24, X0
	0x03397478 TBNZ X8, 0x0, 0x3397490
	0x0339747C ADRP X0, 0xD5C000
	0x03397480 LDR X0, [X0 + 0x6C0]
	0x03397484 BL 0x1C16CF4
	0x03397488 MOVZ W8, 0x1
	0x0339748C STRB W8, [X25 + 0x90]
	0x03397490 CBZ X20, 0x3397524
	0x03397494 LDR W8, [X20 + 0x18]
	0x03397498 CMP W8, 0x1
	0x0339749C B.LT 0x33974E0
	0x033974A0 ADRP X26, 0xD5C000
	0x033974A4 LDR X26, [X26 + 0x6C0]
	0x033974A8 MOV X25, X31
	0x033974AC ADD X27, X20, 0x20
	0x033974B0 CMP W25, W8
	0x033974B4 B.CS 0x3397520
	0x033974B8 LDR X0, [X26]
	0x033974BC LDR X28, [X27, X25, LSL #3]
	0x033974C0 LDR W8, [X0 + 0xE0]
	0x033974C4 CBNZ W8, 0x33974CC
	0x033974C8 BL 0x1C16DFC
	0x033974CC CBZ X28, 0x3397524
	0x033974D0 LDR W8, [X20 + 0x18]
	0x033974D4 ADD X25, X25, 0x1
	0x033974D8 CMP W25, W8
	0x033974DC B.LT 0x33974B0
	0x033974E0 LDR X8, [X24]
	0x033974E4 MOV X0, X24
	0x033974E8 MOV W1, W23
	0x033974EC MOV X2, X22

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x1047000
	010 Move X22, 0xD5D000
	011 Move W8, [X21+134]
	012 Move X22, [X22+1728]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xD5D000
	020 Move X0, [X0+1728]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+134], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Compare X20, 0
	030 JumpIfEqual {83}
	031 Move X8, [X20]
	032 Move X0, X20
	033 Move X9, [X8+2136]
	034 Move X1, [X8+2144]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Compare X0, 0
	037 JumpIfEqual {77}
	038 Move W8, [X0+24]
	039 Move X21, X0
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X23, X31
	042 Add X24, X21, 32
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, [X22]
	045 Move X25, [X24]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W8, [X21+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X0, [X22]
	054 Move X25, [X24]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfEqual {60}
	058 Compare X25, 0
	059 JumpIfNotEqual {63}
	060 Call 0x1C17DFC
	061 Compare X25, 0
	062 JumpIfEqual {74}
	063 Move W8, [X21+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X0, [X24]
	066 Compare X0, 0
	067 JumpIfEqual {95}
	068 Move X1, X19
	069 Call Type.ImplementInterface, X0, X1
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {83}
	074 Move W8, [X21+24]
	075 Add X23, X23, 1
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X8, [X20]
	078 Move X0, X20
	079 Move X9, [X8+2072]
	080 Move X1, [X8+2080]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X20, X0
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X20, [X31+48]
	085 Move X19, [X31+56]
	086 Move X22, [X31+32]
	087 Move X21, [X31+40]
	088 Move X24, [X31+16]
	089 Move X23, [X31+24]
	090 NotImplemented "Instruction CSET not yet implemented."
	091 Move X30, [X31+64]
	092 Move X25, [X31+72]
	093 Return X0
	094 Call 0x1C17F28
	095 Call 0x1C17F20

Method: System.Boolean FilterAttributeImpl(System.Reflection.MemberInfo m, System.Object filterCriteria)

Disassembly:
	0x033974F0 LDR X7, [X8 + 0x638]
	0x033974F4 LDR X6, [X8 + 0x640]
	0x033974F8 MOV W3, W21
	0x033974FC MOV X4, X20
	0x03397500 MOV X5, X19
	0x03397504 LDP X20, X19, [X31 + 0x50]
	0x03397508 LDP X22, X21, [X31 + 0x40]
	0x0339750C LDP X24, X23, [X31 + 0x30]
	0x03397510 LDP X26, X25, [X31 + 0x20]
	0x03397514 LDP X28, X27, [X31 + 0x10]
	0x03397518 LDR X30, [X31], #0x60
	0x0339751C BR X7
	0x03397520 BL 0x1C16F28
	0x03397524 ADRP X0, 0xD61000
	0x03397528 LDR X0, [X0 + 0x528]
	0x0339752C BL 0x1C16D08
	0x03397530 BL 0x1C16F10
	0x03397534 MOV X19, X0
	0x03397538 ADRP X0, 0xD94000
	0x0339753C LDR X0, [X0 + 0x490]
	0x03397540 BL 0x1C16D08
	0x03397544 MOV X1, X0
	0x03397548 MOV X0, X19
	0x0339754C MOV X2, X31
	0x03397550 BL 0x330E100
	0x03397554 ADRP X0, 0xD94000
	0x03397558 LDR X0, [X0 + 0x498]
	0x0339755C BL 0x1C16D08
	0x03397560 MOV X1, X0
	0x03397564 MOV X0, X19
	0x03397568 BL 0x1C16DEC
	0x0339756C LDR X8, [X0]
	0x03397570 MOVZ W2, 0x1C
	0x03397574 LDR X4, [X8 + 0x678]
	0x03397578 LDR X3, [X8 + 0x680]
	0x0339757C BR X4
	0x03397580 LDR X8, [X0]
	0x03397584 MOVZ W2, 0x1C
	0x03397588 LDR X4, [X8 + 0x6A8]
	0x0339758C LDR X3, [X8 + 0x6B0]
	0x03397590 BR X4
	0x03397594 LDR X8, [X0]
	0x03397598 MOV W3, W2
	0x0339759C MOVZ W2, 0xBF
	0x033975A0 LDR X5, [X8 + 0x6B8]
	0x033975A4 LDR X4, [X8 + 0x6C0]
	0x033975A8 BR X5
	0x033975AC STP X30, X19, [X31 - 0x10]!
	0x033975B0 ADRP X0, 0xD5C000
	0x033975B4 LDR X0, [X0 + 0xB40]
	0x033975B8 BL 0x1C16D08
	0x033975BC BL 0x1C16F10
	0x033975C0 MOV X19, X0
	0x033975C4 ADRP X0, 0xD8E000
	0x033975C8 LDR X0, [X0 + 0xD28]
	0x033975CC BL 0x1C16D08
	0x033975D0 MOV X1, X0
	0x033975D4 MOV X0, X19
	0x033975D8 MOV X2, X31
	0x033975DC BL 0x3379A44
	0x033975E0 ADRP X0, 0xD94000
	0x033975E4 LDR X0, [X0 + 0x4A0]
	0x033975E8 BL 0x1C16D08
	0x033975EC MOV X1, X0
	0x033975F0 MOV X0, X19
	0x033975F4 BL 0x1C16DEC
	0x033975F8 MOVZ W2, 0x1C
	0x033975FC B 0x3397600
	0x03397600 STP X30, X19, [X31 - 0x10]!
	0x03397604 CBZ X1, 0x339762C
	0x03397608 LDR X8, [X0]
	0x0339760C MOVZ W4, 0x3
	0x03397610 MOV X3, X31
	0x03397614 MOV X5, X31
	0x03397618 LDR X9, [X8 + 0x738]
	0x0339761C LDR X7, [X8 + 0x740]
	0x03397620 MOV X6, X31
	0x03397624 LDP X30, X19, [X31], #0x10
	0x03397628 BR X9
	0x0339762C ADRP X0, 0xD61000
	0x03397630 LDR X0, [X0 + 0x528]
	0x03397634 BL 0x1C16D08
	0x03397638 BL 0x1C16F10
	0x0339763C MOV X19, X0
	0x03397640 ADRP X0, 0xD64000
	0x03397644 LDR X0, [X0 + 0x588]
	0x03397648 BL 0x1C16D08
	0x0339764C MOV X1, X0
	0x03397650 MOV X0, X19
	0x03397654 MOV X2, X31
	0x03397658 BL 0x330E100
	0x0339765C ADRP X0, 0xD94000
	0x03397660 LDR X0, [X0 + 0x4A8]
	0x03397664 BL 0x1C16D08
	0x03397668 MOV X1, X0
	0x0339766C MOV X0, X19
	0x03397670 BL 0x1C16DEC
	0x03397674 MOV X5, X2
	0x03397678 MOVZ W2, 0x1C
	0x0339767C MOVZ W4, 0x3
	0x03397680 MOV X3, X31
	0x03397684 MOV X6, X31
	0x03397688 B 0x33976B4
	0x0339768C MOV X6, X3
	0x03397690 MOV X5, X2
	0x03397694 MOVZ W2, 0x1C
	0x03397698 MOVZ W4, 0x3
	0x0339769C MOV X3, X31
	0x033976A0 B 0x33976B4
	0x033976A4 MOV X6, X5
	0x033976A8 MOV X5, X4
	0x033976AC MOVZ W4, 0x3
	0x033976B0 B 0x33976B4
	0x033976B4 STP X29, X30, [X31 - 0x60]!
	0x033976B8 STP X28, X27, [X31 + 0x10]
	0x033976BC STP X26, X25, [X31 + 0x20]
	0x033976C0 STP X24, X23, [X31 + 0x30]
	0x033976C4 STP X22, X21, [X31 + 0x40]
	0x033976C8 STP X20, X19, [X31 + 0x50]
	0x033976CC ADRP X26, 0x1046000
	0x033976D0 LDRB W8, [X26 + 0x91]
	0x033976D4 MOV X19, X6
	0x033976D8 MOV X20, X5
	0x033976DC MOV W21, W4
	0x033976E0 MOV X22, X3
	0x033976E4 MOV W23, W2
	0x033976E8 MOV X24, X1
	0x033976EC MOV X25, X0
	0x033976F0 TBNZ X8, 0x0, 0x3397708
	0x033976F4 ADRP X0, 0xD5C000
	0x033976F8 LDR X0, [X0 + 0x6C0]
	0x033976FC BL 0x1C16CF4
	0x03397700 MOVZ W8, 0x1
	0x03397704 STRB W8, [X26 + 0x91]
	0x03397708 CBZ X24, 0x33977EC
	0x0339770C CBZ X20, 0x33977A0
	0x03397710 LDR W8, [X20 + 0x18]
	0x03397714 CMP W8, 0x1
	0x03397718 B.LT 0x339775C
	0x0339771C ADRP X27, 0xD5C000
	0x03397720 LDR X27, [X27 + 0x6C0]
	0x03397724 MOV X26, X31
	0x03397728 ADD X28, X20, 0x20
	0x0339772C CMP W26, W8
	0x03397730 B.CS 0x33977E8
	0x03397734 LDR X0, [X27]
	0x03397738 LDR X29, [X28, X26, LSL #3]
	0x0339773C LDR W8, [X0 + 0xE0]
	0x03397740 CBNZ W8, 0x3397748
	0x03397744 BL 0x1C16DFC
	0x03397748 CBZ X29, 0x33977A0
	0x0339774C LDR W8, [X20 + 0x18]
	0x03397750 ADD X26, X26, 0x1
	0x03397754 CMP W26, W8
	0x03397758 B.LT 0x339772C
	0x0339775C LDR X8, [X25]
	0x03397760 MOV X0, X25
	0x03397764 MOV X1, X24
	0x03397768 MOV W2, W23
	0x0339776C LDR X9, [X8 + 0x738]
	0x03397770 LDR X7, [X8 + 0x740]
	0x03397774 MOV X3, X22
	0x03397778 MOV W4, W21
	0x0339777C MOV X5, X20
	0x03397780 MOV X6, X19
	0x03397784 LDP X20, X19, [X31 + 0x50]
	0x03397788 LDP X22, X21, [X31 + 0x40]
	0x0339778C LDP X24, X23, [X31 + 0x30]
	0x03397790 LDP X26, X25, [X31 + 0x20]
	0x03397794 LDP X28, X27, [X31 + 0x10]
	0x03397798 LDP X29, X30, [X31], #0x60
	0x0339779C BR X9
	0x033977A0 ADRP X0, 0xD61000
	0x033977A4 LDR X0, [X0 + 0x528]
	0x033977A8 BL 0x1C16D08
	0x033977AC BL 0x1C16F10
	0x033977B0 MOV X19, X0
	0x033977B4 ADRP X0, 0xD94000
	0x033977B8 LDR X0, [X0 + 0x490]
	0x033977BC BL 0x1C16D08
	0x033977C0 MOV X1, X0
	0x033977C4 MOV X0, X19
	0x033977C8 MOV X2, X31
	0x033977CC BL 0x330E100
	0x033977D0 ADRP X0, 0xD94000
	0x033977D4 LDR X0, [X0 + 0x4B0]
	0x033977D8 BL 0x1C16D08
	0x033977DC MOV X1, X0
	0x033977E0 MOV X0, X19
	0x033977E4 BL 0x1C16DEC
	0x033977E8 BL 0x1C16F28
	0x033977EC ADRP X0, 0xD61000
	0x033977F0 LDR X0, [X0 + 0x528]
	0x033977F4 BL 0x1C16D08
	0x033977F8 BL 0x1C16F10
	0x033977FC MOV X19, X0
	0x03397800 ADRP X0, 0xD64000
	0x03397804 LDR X0, [X0 + 0x588]
	0x03397808 B 0x33977BC
	0x0339780C LDR X8, [X0]
	0x03397810 MOVZ W1, 0x1C
	0x03397814 LDR X3, [X8 + 0x758]
	0x03397818 LDR X2, [X8 + 0x760]
	0x0339781C BR X3
	0x03397820 MOVZ W2, 0x1C
	0x03397824 B 0x3397828
	0x03397828 STP X30, X19, [X31 - 0x10]!
	0x0339782C CBZ X1, 0x3397854
	0x03397830 LDR X8, [X0]
	0x03397834 MOV X3, X31
	0x03397838 MOV X4, X31
	0x0339783C MOV X5, X31
	0x03397840 LDR X9, [X8 + 0x7D8]
	0x03397844 LDR X7, [X8 + 0x7E0]
	0x03397848 MOV X6, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1047000
	006 Move W8, [X21+135]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0xD87000
	014 Move X0, [X0+2424]
	015 Call 0x1C17CF4
	016 Move X0, 0xD86000
	017 Move X0, [X0+936]
	018 Call 0x1C17CF4
	019 Move X0, 0xD5D000
	020 Move X0, [X0+1880]
	021 Call 0x1C17CF4
	022 Move X0, 0xD8E000
	023 Move X0, [X0+632]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+135], W8
	027 Compare X20, 0
	028 JumpIfEqual {229}
	029 Compare X19, 0
	030 JumpIfEqual {183}
	031 Move X8, [X19]
	032 Move X0, X19
	033 Move X9, [X8+408]
	034 Move X1, [X8+416]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X8, 0xD5D000
	040 Move X8, [X8+1880]
	041 Move X9, [X20]
	042 Move X1, [X8]
	043 Move X8, [X9+64]
	044 Move X9, [X1+64]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X0, X20
	047 Call 0x1C17E08
	048 Move X8, [X19]
	049 Move W20, [X0]
	050 Move X0, X19
	051 Move X9, [X8+408]
	052 Move X1, [X8+416]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X9, 0xD8E000
	056 Move X9, [X9+632]
	057 Move X8, 0xD5D000
	058 Move X8, [X8+1880]
	059 Move X9, [X20]
	060 Move X1, [X8]
	061 Move X8, [X9+64]
	062 Move X9, [X1+64]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X0, X20
	065 Call 0x1C17E08
	066 Move X9, 0xD86000
	067 Move X9, [X9+936]
	068 Move X8, [X19]
	069 Move X1, [X9]
	070 Move W10, [X8+304]
	071 Move W9, [X1+304]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X10, [X8+200]
	074 Add X9, X10, X9
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X9, [X8+584]
	078 Move X1, [X8+592]
	079 Move W20, [X0]
	080 Move X0, X19
	081 NotImplemented "Instruction BLR not yet implemented."
	082 And W8, W20, 7
	083 And W9, W0, 7
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move TEMP, X20
	086 And TEMP, TEMP, 16
	087 Compare TEMP, 16
	088 JumpIfNotEqual {93}
	089 Move TEMP, X0
	090 And TEMP, TEMP, 16
	091 Compare TEMP, 16
	092 JumpIfNotEqual {171}
	093 Move TEMP, X20
	094 And TEMP, TEMP, 32
	095 Compare TEMP, 32
	096 JumpIfNotEqual {101}
	097 Move TEMP, X0
	098 And TEMP, TEMP, 32
	099 Compare TEMP, 32
	100 JumpIfNotEqual {171}
	101 Move TEMP, X20
	102 And TEMP, TEMP, 64
	103 Compare TEMP, 64
	104 JumpIfNotEqual {109}
	105 Move TEMP, X0
	106 And TEMP, TEMP, 64
	107 Compare TEMP, 64
	108 JumpIfNotEqual {171}
	109 Move TEMP, X20
	110 And TEMP, TEMP, 128
	111 Compare TEMP, 128
	112 JumpIfNotEqual {117}
	113 Move TEMP, X0
	114 And TEMP, TEMP, 128
	115 Compare TEMP, 128
	116 JumpIfNotEqual {171}
	117 And W31, W20, 0x2000
	118 NotImplemented "Instruction CSET not yet implemented."
	119 And W9, W0, 0x2000
	120 Or W0, W8, W9
	121 Move X9, 0xD87000
	122 Move X9, [X9+2424]
	123 Move X8, [X19]
	124 Move X1, [X9]
	125 Move W10, [X8+304]
	126 Move W9, [X1+304]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X10, [X8+200]
	129 Add X9, X10, X9
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X9, [X8+600]
	133 Move X1, [X8+608]
	134 Move X0, X19
	135 NotImplemented "Instruction BLR not yet implemented."
	136 And W8, W20, 7
	137 And W9, W0, 7
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move TEMP, X20
	140 And TEMP, TEMP, 16
	141 Compare TEMP, 16
	142 JumpIfNotEqual {147}
	143 Move TEMP, X0
	144 And TEMP, TEMP, 16
	145 Compare TEMP, 16
	146 JumpIfNotEqual {171}
	147 Move TEMP, X20
	148 And TEMP, TEMP, 32
	149 Compare TEMP, 32
	150 JumpIfNotEqual {155}
	151 Move TEMP, X0
	152 And TEMP, TEMP, 32
	153 Compare TEMP, 32
	154 JumpIfNotEqual {171}
	155 Move TEMP, X20
	156 And TEMP, TEMP, 64
	157 Compare TEMP, 64
	158 JumpIfNotEqual {163}
	159 Move TEMP, X0
	160 And TEMP, TEMP, 64
	161 Compare TEMP, 64
	162 JumpIfNotEqual {171}
	163 Move TEMP, X20
	164 And TEMP, TEMP, 1024
	165 Compare TEMP, 1024
	166 JumpIfNotEqual {177}
	167 Move TEMP, X0
	168 And TEMP, TEMP, 1024
	169 Compare TEMP, 1024
	170 JumpIfEqual {177}
	171 Move W0, W31
	172 Move X20, [X31+16]
	173 Move X19, [X31+24]
	174 Move X30, [X31+32]
	175 Move X21, [X31+40]
	176 Return X0
	177 And W31, W20, 2048
	178 NotImplemented "Instruction CSET not yet implemented."
	179 And W9, W0, 2048
	180 Or W0, W8, W9
	181 Move X0, X19
	182 Call 0x1C181E0
	183 Call 0x1C17F20
	184 Move X0, X20
	185 Call 0x1C181E0
	186 Move X0, X20
	187 Call 0x1C181E0
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X19, X0
	190 Move X0, X19
	191 Call 0x3EB2AD0
	192 Move X19, X0
	193 Move X0, 0xD63000
	194 Move X0, [X0+3264]
	195 Call 0x1C17D08
	196 Move X8, [X19]
	197 Move X1, [X8]
	198 Call 0x1C18270
	199 Move TEMP, X0
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfEqual {228}
	203 Move W0, 8
	204 Call 0x3EB2AF0
	205 Move X8, [X19]
	206 Move [X0], X8
	207 Move X1, 0xB1E000
	208 Add X1, X1, 3672
	209 Move X2, X31
	210 Call 0x3EB2B00
	211 Move X19, X0
	212 Call 0x3EB2AE0
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move X19, X0
	215 Move X0, X19
	216 Call 0x3EB2AD0
	217 Move X19, X0
	218 Move X0, 0xD63000
	219 Move X0, [X0+3264]
	220 Call 0x1C17D08
	221 Move X8, [X19]
	222 Move X1, [X8]
	223 Call 0x1C18270
	224 Move TEMP, X0
	225 And TEMP, TEMP, 1
	226 Compare TEMP, 1
	227 JumpIfNotEqual {247}
	228 Call 0x3EB2AE0
	229 Move X0, 0xD8F000
	230 Move X0, [X0+3536]
	231 Call 0x1C17D08
	232 Call 0x1C17F10
	233 Move X19, X0
	234 Move X0, 0xD95000
	235 Move X0, [X0+1056]
	236 Call 0x1C17D08
	237 Move X1, X0
	238 Move X0, X19
	239 Move X2, X31
	240 Call InvalidFilterCriteriaException..ctor, X0, X1
	241 Move X0, 0xD95000
	242 Move X0, [X0+1064]
	243 Call 0x1C17D08
	244 Move X1, X0
	245 Move X0, X19
	246 Call 0x1C17DEC
	247 Move W0, 8
	248 Call 0x3EB2AF0
	249 Move X8, [X19]
	250 Move [X0], X8
	251 Move X1, 0xB1E000
	252 Add X1, X1, 3672
	253 Move X2, X31
	254 Call 0x3EB2B00
	255 Move X19, X0
	256 Call 0x3EB2AE0
	257 Move X0, X19
	258 Call 0x1D2D690
	259 Call 0x1991590

Method: System.Boolean FilterNameImpl(System.Reflection.MemberInfo m, System.Object filterCriteria)

Disassembly:
	0x0339784C LDP X30, X19, [X31], #0x10
	0x03397850 BR X9
	0x03397854 ADRP X0, 0xD61000
	0x03397858 LDR X0, [X0 + 0x528]
	0x0339785C BL 0x1C16D08
	0x03397860 BL 0x1C16F10
	0x03397864 MOV X19, X0
	0x03397868 ADRP X0, 0xD64000
	0x0339786C LDR X0, [X0 + 0x588]
	0x03397870 BL 0x1C16D08
	0x03397874 MOV X1, X0
	0x03397878 MOV X0, X19
	0x0339787C MOV X2, X31
	0x03397880 BL 0x330E100
	0x03397884 ADRP X0, 0xD94000
	0x03397888 LDR X0, [X0 + 0x4B8]
	0x0339788C BL 0x1C16D08
	0x03397890 MOV X1, X0
	0x03397894 MOV X0, X19
	0x03397898 BL 0x1C16DEC
	0x0339789C STR X30, [X31 - 0x30]!
	0x033978A0 STP X22, X21, [X31 + 0x10]
	0x033978A4 STP X20, X19, [X31 + 0x20]
	0x033978A8 ADRP X22, 0x1046000
	0x033978AC LDRB W8, [X22 + 0x92]
	0x033978B0 MOV X19, X2
	0x033978B4 MOV X20, X1
	0x033978B8 MOV X21, X0
	0x033978BC TBNZ X8, 0x0, 0x33978D4
	0x033978C0 ADRP X0, 0xD5C000
	0x033978C4 LDR X0, [X0 + 0x6C0]
	0x033978C8 BL 0x1C16CF4
	0x033978CC MOVZ W8, 0x1
	0x033978D0 STRB W8, [X22 + 0x92]
	0x033978D4 CBZ X20, 0x339792C
	0x033978D8 ADRP X8, 0xD5C000
	0x033978DC LDR X8, [X8 + 0x6C0]
	0x033978E0 LDR X0, [X8]
	0x033978E4 LDR W8, [X0 + 0xE0]
	0x033978E8 CBNZ W8, 0x33978F0
	0x033978EC BL 0x1C16DFC
	0x033978F0 CBZ X19, 0x339794C
	0x033978F4 LDR X8, [X21]
	0x033978F8 MOV X0, X21
	0x033978FC MOV X1, X20
	0x03397900 MOV X4, X19
	0x03397904 LDR X9, [X8 + 0x7D8]
	0x03397908 LDR X7, [X8 + 0x7E0]
	0x0339790C LDP X20, X19, [X31 + 0x20]
	0x03397910 LDP X22, X21, [X31 + 0x10]
	0x03397914 MOVZ W2, 0x1C
	0x03397918 MOV X3, X31
	0x0339791C MOV X5, X31
	0x03397920 MOV X6, X31
	0x03397924 LDR X30, [X31], #0x30
	0x03397928 BR X9
	0x0339792C ADRP X0, 0xD61000
	0x03397930 LDR X0, [X0 + 0x528]
	0x03397934 BL 0x1C16D08
	0x03397938 BL 0x1C16F10
	0x0339793C MOV X19, X0
	0x03397940 ADRP X0, 0xD64000
	0x03397944 LDR X0, [X0 + 0x588]
	0x03397948 B 0x3397968
	0x0339794C ADRP X0, 0xD61000
	0x03397950 LDR X0, [X0 + 0x528]
	0x03397954 BL 0x1C16D08
	0x03397958 BL 0x1C16F10
	0x0339795C MOV X19, X0
	0x03397960 ADRP X0, 0xD94000
	0x03397964 LDR X0, [X0 + 0x4C0]
	0x03397968 BL 0x1C16D08
	0x0339796C MOV X1, X0
	0x03397970 MOV X0, X19
	0x03397974 MOV X2, X31
	0x03397978 BL 0x330E100
	0x0339797C ADRP X0, 0xD94000
	0x03397980 LDR X0, [X0 + 0x4C8]
	0x03397984 BL 0x1C16D08
	0x03397988 MOV X1, X0
	0x0339798C MOV X0, X19
	0x03397990 BL 0x1C16DEC
	0x03397994 MOV X5, X3
	0x03397998 MOV X4, X2
	0x0339799C MOVZ W2, 0x1C
	0x033979A0 MOV X3, X31
	0x033979A4 MOV X6, X31
	0x033979A8 B 0x33979C4
	0x033979AC MOV X6, X4
	0x033979B0 MOV X5, X3
	0x033979B4 MOV X4, X2
	0x033979B8 MOVZ W2, 0x1C
	0x033979BC MOV X3, X31
	0x033979C0 B 0x33979C4
	0x033979C4 STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1047000
	006 Move W8, [X20+136]
	007 Move X19, X1
	008 Move X21, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD5F000
	014 Move X0, [X0+632]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+136], W8
	018 Compare X19, 0
	019 JumpIfEqual {93}
	020 Move X8, 0xD5F000
	021 Move X8, [X8+632]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X19
	026 Move X1, X31
	027 Call String.Trim, X0
	028 Compare X21, 0
	029 JumpIfEqual {92}
	030 Move X8, [X21]
	031 Move X19, X0
	032 Move X0, X21
	033 Move X9, [X8+424]
	034 Move X1, [X8+432]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X8, [X21]
	037 Move X20, X0
	038 Move X0, X21
	039 Move X9, [X8+408]
	040 Move X1, [X8+416]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Compare X20, 0
	044 JumpIfEqual {92}
	045 Move W1, 43
	046 Move X0, X20
	047 Move X2, X31
	048 Call String.LastIndexOf, X0, X1
	049 Add W1, W0, 1
	050 Move X0, X20
	051 Move X2, X31
	052 Call String.Substring, X0, X1
	053 Move X20, X0
	054 Compare X19, 0
	055 JumpIfEqual {92}
	056 Move W8, [X19+16]
	057 Subtract W1, W8, 1
	058 Move X0, X19
	059 Move X2, X31
	060 Call String.get_Chars, X0, X1
	061 And W8, W0, 0xFFFF
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move W8, [X19+16]
	064 Move X0, X19
	065 Move W1, W31
	066 Move X3, X31
	067 Subtract W2, W8, 1
	068 Call String.Substring, X0, X1, X2
	069 Compare X20, 0
	070 JumpIfEqual {92}
	071 Move X1, X0
	072 Move X0, X20
	073 Move X20, [X31+16]
	074 Move X19, [X31+24]
	075 Move W2, 4
	076 Move X3, X31
	077 Move X30, [X31+32]
	078 Move X21, [X31+40]
	079 Call String.StartsWith, X0, X1, X2
	080 Return X0
	081 Compare X20, 0
	082 JumpIfEqual {92}
	083 Move X0, X20
	084 Move X1, X19
	085 Move X20, [X31+16]
	086 Move X19, [X31+24]
	087 Move X2, X31
	088 Move X30, [X31+32]
	089 Move X21, [X31+40]
	090 Call String.Equals, X0, X1
	091 Return X0
	092 Call 0x1C17F20
	093 Move X0, 0xD8F000
	094 Move X0, [X0+3536]
	095 Call 0x1C17D08
	096 Call 0x1C17F10
	097 Move X19, X0
	098 Move X0, 0xD8F000
	099 Move X0, [X0+3544]
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X19
	103 Move X2, X31
	104 Call InvalidFilterCriteriaException..ctor, X0, X1
	105 Move X0, 0xD95000
	106 Move X0, [X0+1072]
	107 Call 0x1C17D08
	108 Move X1, X0
	109 Move X0, X19
	110 Call 0x1C17DEC

Method: System.Boolean FilterNameIgnoreCaseImpl(System.Reflection.MemberInfo m, System.Object filterCriteria)

Disassembly:
	0x033979C8 CBZ X1, 0x33979E4
	0x033979CC CBZ X5, 0x3397A04
	0x033979D0 LDR X8, [X0]
	0x033979D4 LDR X9, [X8 + 0x7D8]
	0x033979D8 LDR X7, [X8 + 0x7E0]
	0x033979DC LDP X30, X19, [X31], #0x10
	0x033979E0 BR X9
	0x033979E4 ADRP X0, 0xD61000
	0x033979E8 LDR X0, [X0 + 0x528]
	0x033979EC BL 0x1C16D08
	0x033979F0 BL 0x1C16F10
	0x033979F4 MOV X19, X0
	0x033979F8 ADRP X0, 0xD64000
	0x033979FC LDR X0, [X0 + 0x588]
	0x03397A00 B 0x3397A20
	0x03397A04 ADRP X0, 0xD61000
	0x03397A08 LDR X0, [X0 + 0x528]
	0x03397A0C BL 0x1C16D08
	0x03397A10 BL 0x1C16F10
	0x03397A14 MOV X19, X0
	0x03397A18 ADRP X0, 0xD94000
	0x03397A1C LDR X0, [X0 + 0x490]
	0x03397A20 BL 0x1C16D08
	0x03397A24 MOV X1, X0
	0x03397A28 MOV X0, X19
	0x03397A2C MOV X2, X31
	0x03397A30 BL 0x330E100
	0x03397A34 ADRP X0, 0xD94000
	0x03397A38 LDR X0, [X0 + 0x4D0]
	0x03397A3C BL 0x1C16D08
	0x03397A40 MOV X1, X0
	0x03397A44 MOV X0, X19
	0x03397A48 BL 0x1C16DEC
	0x03397A4C STP X30, X19, [X31 - 0x10]!
	0x03397A50 ADRP X0, 0xD5C000
	0x03397A54 LDR X0, [X0 + 0xB40]
	0x03397A58 BL 0x1C16D08
	0x03397A5C BL 0x1C16F10
	0x03397A60 MOV X1, X31
	0x03397A64 MOV X19, X0
	0x03397A68 BL 0x3380310
	0x03397A6C ADRP X0, 0xD94000
	0x03397A70 LDR X0, [X0 + 0x4D8]
	0x03397A74 BL 0x1C16D08
	0x03397A78 MOV X1, X0
	0x03397A7C MOV X0, X19
	0x03397A80 BL 0x1C16DEC
	0x03397A84 STP X30, X19, [X31 - 0x10]!
	0x03397A88 CBZ X0, 0x3397AAC
	0x03397A8C MOV X1, X31
	0x03397A90 BL 0x33BE520
	0x03397A94 CBZ X0, 0x3397AF8
	0x03397A98 LDR X8, [X0]
	0x03397A9C LDR X2, [X8 + 0x7F8]
	0x03397AA0 LDR X1, [X8 + 0x800]
	0x03397AA4 LDP X30, X19, [X31], #0x10
	0x03397AA8 BR X2
	0x03397AAC ADRP X0, 0xD61000
	0x03397AB0 LDR X0, [X0 + 0x528]
	0x03397AB4 BL 0x1C16D08
	0x03397AB8 BL 0x1C16F10
	0x03397ABC MOV X19, X0
	0x03397AC0 ADRP X0, 0xD90000
	0x03397AC4 LDR X0, [X0 + 0x450]
	0x03397AC8 BL 0x1C16D08
	0x03397ACC MOV X2, X0
	0x03397AD0 MOV X0, X19
	0x03397AD4 MOV X1, X31
	0x03397AD8 MOV X3, X31
	0x03397ADC BL 0x3315F7C
	0x03397AE0 ADRP X0, 0xD94000
	0x03397AE4 LDR X0, [X0 + 0x4E0]
	0x03397AE8 BL 0x1C16D08
	0x03397AEC MOV X1, X0
	0x03397AF0 MOV X0, X19
	0x03397AF4 BL 0x1C16DEC
	0x03397AF8 BL 0x1C16F20
	0x03397AFC STP X30, X21, [X31 - 0x20]!
	0x03397B00 STP X20, X19, [X31 + 0x10]
	0x03397B04 ADRP X20, 0x1046000
	0x03397B08 ADRP X21, 0xD5C000
	0x03397B0C LDRB W8, [X20 + 0x93]
	0x03397B10 LDR X21, [X21 + 0x6C0]
	0x03397B14 MOV X19, X0
	0x03397B18 TBNZ X8, 0x0, 0x3397B30
	0x03397B1C ADRP X0, 0xD5C000
	0x03397B20 LDR X0, [X0 + 0x6C0]
	0x03397B24 BL 0x1C16CF4
	0x03397B28 MOVZ W8, 0x1
	0x03397B2C STRB W8, [X20 + 0x93]
	0x03397B30 LDR X0, [X21]
	0x03397B34 LDR W8, [X0 + 0xE0]
	0x03397B38 CBZ W8, 0x3397B5C
	0x03397B3C CBZ X19, 0x3397B64
	0x03397B40 LDR X8, [X19]
	0x03397B44 MOV X0, X19
	0x03397B48 LDP X20, X19, [X31 + 0x10]
	0x03397B4C LDR X2, [X8 + 0x808]
	0x03397B50 LDR X1, [X8 + 0x810]
	0x03397B54 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1047000
	006 Move W8, [X20+137]
	007 Move X19, X1
	008 Move X21, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD5F000
	014 Move X0, [X0+632]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+137], W8
	018 Compare X19, 0
	019 JumpIfEqual {92}
	020 Move X8, 0xD5F000
	021 Move X8, [X8+632]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X19
	026 Move X1, X31
	027 Call String.Trim, X0
	028 Compare X21, 0
	029 JumpIfEqual {91}
	030 Move X8, [X21]
	031 Move X20, X0
	032 Move X0, X21
	033 Move X9, [X8+424]
	034 Move X1, [X8+432]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X8, [X21]
	037 Move X19, X0
	038 Move X0, X21
	039 Move X9, [X8+408]
	040 Move X1, [X8+416]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Compare X19, 0
	044 JumpIfEqual {91}
	045 Move W1, 43
	046 Move X0, X19
	047 Move X2, X31
	048 Call String.LastIndexOf, X0, X1
	049 Add W1, W0, 1
	050 Move X0, X19
	051 Move X2, X31
	052 Call String.Substring, X0, X1
	053 Move X19, X0
	054 Compare X20, 0
	055 JumpIfEqual {91}
	056 Move W8, [X20+16]
	057 Subtract W1, W8, 1
	058 Move X0, X20
	059 Move X2, X31
	060 Call String.get_Chars, X0, X1
	061 And W8, W0, 0xFFFF
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move W8, [X20+16]
	064 Move X0, X20
	065 Move W1, W31
	066 Move X3, X31
	067 Subtract W2, W8, 1
	068 Call String.Substring, X0, X1, X2
	069 Compare X0, 0
	070 JumpIfEqual {91}
	071 Move W4, [X0+16]
	072 Move X2, X0
	073 Move W5, 5
	074 Move X0, X19
	075 Move W1, W31
	076 Move W3, W31
	077 Move X6, X31
	078 Call String.Compare, X0, X1, X2, X3, X4, X5
	079 Move W2, 5
	080 Move X0, X20
	081 Move X1, X19
	082 Move X3, X31
	083 Call String.Compare, X0, X1, X2
	084 Move X20, [X31+16]
	085 Move X19, [X31+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction CSET not yet implemented."
	088 Move X30, [X31+32]
	089 Move X21, [X31+40]
	090 Return X0
	091 Call 0x1C17F20
	092 Move X0, 0xD8F000
	093 Move X0, [X0+3536]
	094 Call 0x1C17D08
	095 Call 0x1C17F10
	096 Move X19, X0
	097 Move X0, 0xD8F000
	098 Move X0, [X0+3544]
	099 Call 0x1C17D08
	100 Move X1, X0
	101 Move X0, X19
	102 Move X2, X31
	103 Call InvalidFilterCriteriaException..ctor, X0, X1
	104 Move X0, 0xD95000
	105 Move X0, [X0+1080]
	106 Call 0x1C17D08
	107 Move X1, X0
	108 Move X0, X19
	109 Call 0x1C17DEC

Method: System.Void .ctor()

Disassembly:
	0x03397B58 BR X2
	0x03397B5C BL 0x1C16DFC

ISIL:
	001 Move X1, X31
	002 Call MemberInfo..ctor, X0
	003 Return 

Method: System.Reflection.MemberTypes get_MemberType()

Disassembly:
	0x03397B60 CBNZ X19, 0x3397B40
	0x03397B64 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move W0, 32
	002 Return X0

Method: System.Type GetType()

Disassembly:
	0x03397B68 MOV W0, W31
	0x03397B6C LDP X30, X21, [X31], #0x20

ISIL:
	001 Move X1, X31
	002 Call "il2cpp_vm_object_is_inst", X0
	003 Return X0

Method: System.String get_Namespace()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.String get_AssemblyQualifiedName()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.String get_FullName()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Reflection.Assembly get_Assembly()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Reflection.Module get_Module()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean get_IsNested()

Disassembly:
	0x03397B70 RET
	0x03397B74 STP X30, X21, [X31 - 0x20]!
	0x03397B78 STP X20, X19, [X31 + 0x10]
	0x03397B7C ADRP X20, 0x1046000
	0x03397B80 ADRP X21, 0xD5C000
	0x03397B84 LDRB W8, [X20 + 0x94]
	0x03397B88 LDR X21, [X21 + 0x6C0]
	0x03397B8C MOV X19, X0
	0x03397B90 TBNZ X8, 0x0, 0x3397BA8
	0x03397B94 ADRP X0, 0xD5C000
	0x03397B98 LDR X0, [X0 + 0x6C0]
	0x03397B9C BL 0x1C16CF4
	0x03397BA0 MOVZ W8, 0x1
	0x03397BA4 STRB W8, [X20 + 0x94]
	0x03397BA8 LDR X8, [X19]
	0x03397BAC MOV X0, X19
	0x03397BB0 LDR X9, [X8 + 0x328]
	0x03397BB4 LDR X1, [X8 + 0x330]
	0x03397BB8 BLR X9
	0x03397BBC LDR X8, [X21]
	0x03397BC0 MOV X20, X0
	0x03397BC4 LDR W9, [X8 + 0xE0]
	0x03397BC8 CBNZ W9, 0x3397BD4
	0x03397BCC MOV X0, X8
	0x03397BD0 BL 0x1C16DFC
	0x03397BD4 CMP X20, X19
	0x03397BD8 B.EQ 0x3397C4C
	0x03397BDC LDR X8, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1047000
	006 Move X20, 0xD5D000
	007 Move W8, [X21+138]
	008 Move X20, [X20+1728]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD5D000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+138], W8
	019 Move X8, [X19]
	020 Move X0, X19
	021 Move X9, [X8+440]
	022 Move X1, [X8+448]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move X8, [X20]
	025 Move X19, X0
	026 Move W9, [X8+224]
	027 Compare W9, 0
	028 JumpIfNotEqual {31}
	029 Move X0, X8
	030 Call 0x1C17DFC
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 NotImplemented "Instruction CSET not yet implemented."
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0

Method: System.Type get_DeclaringType()

Disassembly:
	0x03397BE0 MOV X0, X19
	0x03397BE4 LDR X9, [X8 + 0x328]

ISIL:
	001 Move X0, X31
	002 Return X0

Method: System.Reflection.MethodBase get_DeclaringMethod()

Disassembly:
	0x03397BE8 LDR X1, [X8 + 0x330]
	0x03397BEC BLR X9

ISIL:
	001 Move X0, X31
	002 Return X0

Method: System.Type get_ReflectedType()

Disassembly:
	0x03397BF0 LDR X8, [X21]
	0x03397BF4 MOV X20, X0

ISIL:
	001 Move X0, X31
	002 Return X0

Method: System.Type get_UnderlyingSystemType()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean get_IsArray()

Disassembly:
	0x03397BF8 LDR W9, [X8 + 0xE0]
	0x03397BFC CBZ W9, 0x3397C40
	0x03397C00 CBZ X20, 0x3397C4C
	0x03397C04 LDR X8, [X19]

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+840]
	003 Move X1, [X8+848]
	004 CallNoReturn X2

Method: System.Boolean IsArrayImpl()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean get_IsByRef()

Disassembly:
	0x03397C08 MOV X0, X19
	0x03397C0C LDR X9, [X8 + 0x328]
	0x03397C10 LDR X1, [X8 + 0x330]
	0x03397C14 BLR X9

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+872]
	003 Move X1, [X8+880]
	004 CallNoReturn X2

Method: System.Boolean IsByRefImpl()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean get_IsPointer()

Disassembly:
	0x03397C18 LDR X8, [X21]
	0x03397C1C MOV X19, X0
	0x03397C20 LDR W9, [X8 + 0xE0]
	0x03397C24 CBNZ W9, 0x3397C30

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+904]
	003 Move X1, [X8+912]
	004 CallNoReturn X2

Method: System.Boolean IsPointerImpl()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean get_IsConstructedGenericType()

Disassembly:
	0x03397C28 MOV X0, X8
	0x03397C2C BL 0x1C16DFC
	0x03397C30 MOV X0, X19
	0x03397C34 LDP X20, X19, [X31 + 0x10]
	0x03397C38 LDP X30, X21, [X31], #0x20
	0x03397C3C B 0x3397AFC
	0x03397C40 MOV X0, X8
	0x03397C44 BL 0x1C16DFC
	0x03397C48 CBNZ X20, 0x3397C04

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Call NotImplemented.get_ByDesign
	004 Move X19, X0
	005 Move X0, 0xD95000
	006 Move X0, [X0+1088]
	007 Call 0x1C17D08
	008 Move X1, X0
	009 Move X0, X19
	010 Call 0x1C17DEC

Method: System.Boolean get_IsGenericParameter()

Disassembly:
	0x03397CA0 BR X3
	0x03397CA4 MOV W0, W31

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_IsGenericMethodParameter()

Disassembly:
	0x03397CA8 RET
	0x03397CAC STR X30, [X31 - 0x30]!
	0x03397CB0 STP X22, X21, [X31 + 0x10]
	0x03397CB4 STP X20, X19, [X31 + 0x20]
	0x03397CB8 ADRP X21, 0x1046000
	0x03397CBC ADRP X22, 0xD5C000
	0x03397CC0 LDRB W8, [X21 + 0x95]
	0x03397CC4 LDR X22, [X22 + 0x6C0]
	0x03397CC8 MOV X19, X1
	0x03397CCC MOV X20, X0
	0x03397CD0 TBNZ X8, 0x0, 0x3397CE8
	0x03397CD4 ADRP X0, 0xD5C000
	0x03397CD8 LDR X0, [X0 + 0x6C0]
	0x03397CDC BL 0x1C16CF4
	0x03397CE0 MOVZ W8, 0x1
	0x03397CE4 STRB W8, [X21 + 0x95]
	0x03397CE8 LDR X0, [X22]
	0x03397CEC LDR W8, [X0 + 0xE0]
	0x03397CF0 CBNZ W8, 0x3397CF8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+936]
	006 Move X1, [X8+944]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {23}
	012 Move X8, [X19]
	013 Move X0, X19
	014 Move X9, [X8+792]
	015 Move X1, [X8+800]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move X1, X31
	018 Move X2, X31
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Call MethodBase.op_Inequality, X0, X1
	022 Return X0
	023 Move W0, W31
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Return X0

Method: System.Boolean get_IsGenericType()

Disassembly:
	0x03397CF4 BL 0x1C16DFC
	0x03397CF8 CMP X20, X19

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_IsGenericTypeDefinition()

Disassembly:
	0x03397CFC LDP X20, X19, [X31 + 0x20]
	0x03397D00 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_IsSZArray()

Disassembly:
	0x03397D04 CSET W0, EQ
	0x03397D08 LDR X30, [X31], #0x30
	0x03397D0C RET
	0x03397D10 STR X30, [X31 - 0x20]!
	0x03397D14 STP X20, X19, [X31 + 0x10]
	0x03397D18 LDR X8, [X0]
	0x03397D1C MOV X19, X0
	0x03397D20 LDR X9, [X8 + 0x588]
	0x03397D24 LDR X1, [X8 + 0x590]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Call NotImplemented.get_ByDesign
	004 Move X19, X0
	005 Move X0, 0xD95000
	006 Move X0, [X0+1096]
	007 Call 0x1C17D08
	008 Move X1, X0
	009 Move X0, X19
	010 Call 0x1C17DEC

Method: System.Boolean get_IsVariableBoundArray()

Disassembly:
	0x03397D28 BLR X9
	0x03397D2C TBZ X0, 0x0, 0x3397D98
	0x03397D30 LDR X8, [X19]
	0x03397D34 MOVZ W1, 0x34
	0x03397D38 MOV X0, X19
	0x03397D3C LDR X9, [X8 + 0x688]
	0x03397D40 LDR X2, [X8 + 0x690]
	0x03397D44 BLR X9
	0x03397D48 CBZ X0, 0x3397D78
	0x03397D4C LDR W8, [X0 + 0x18]
	0x03397D50 CMP W8, 0x1
	0x03397D54 B.NE 0x3397D78
	0x03397D58 LDR X0, [X0 + 0x20]
	0x03397D5C CBZ X0, 0x3397DF4
	0x03397D60 LDR X8, [X0]
	0x03397D64 LDP X20, X19, [X31 + 0x10]
	0x03397D68 LDR X2, [X8 + 0x258]
	0x03397D6C LDR X1, [X8 + 0x260]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+840]
	006 Move X1, [X8+848]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {18}
	012 Move X8, [X19]
	013 Move X0, X19
	014 Move X9, [X8+1000]
	015 Move X1, [X8+1008]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Xor W8, W0, 1
	018 Move W8, W31
	019 And W0, W8, 1
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Return X0

Method: System.Boolean get_HasElementType()

Disassembly:
	0x03397018 LDR X0, [X0 + 0x478]
	0x0339701C BL 0x1C16D08
	0x03397020 MOV X1, X0
	0x03397024 MOV X0, X19

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+1048]
	003 Move X1, [X8+1056]
	004 CallNoReturn X2

Method: System.Boolean HasElementTypeImpl()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Type GetElementType()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Int32 GetArrayRank()

Disassembly:
	0x03397D70 LDR X30, [X31], #0x20
	0x03397D74 BR X2
	0x03397D78 ADRP X0, 0xD64000
	0x03397D7C LDR X0, [X0 + 0x578]
	0x03397D80 BL 0x1C16D08
	0x03397D84 BL 0x1C16F10
	0x03397D88 MOV X19, X0
	0x03397D8C ADRP X0, 0xD94000
	0x03397D90 LDR X0, [X0 + 0x4E8]
	0x03397D94 B 0x3397DB4
	0x03397D98 ADRP X0, 0xD64000
	0x03397D9C LDR X0, [X0 + 0x578]
	0x03397DA0 BL 0x1C16D08
	0x03397DA4 BL 0x1C16F10
	0x03397DA8 MOV X19, X0
	0x03397DAC ADRP X0, 0xD94000
	0x03397DB0 LDR X0, [X0 + 0x3B8]
	0x03397DB4 BL 0x1C16D08
	0x03397DB8 MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD5D000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xD8F000
	009 Move X0, [X0+3368]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xD95000
	016 Move X0, [X0+1104]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Type GetGenericTypeDefinition()

Disassembly:
	0x03397DBC ADRP X0, 0xD94000
	0x03397DC0 LDR X0, [X0 + 0x3C0]
	0x03397DC4 BL 0x1C16D08
	0x03397DC8 MOV X2, X0
	0x03397DCC MOV X0, X19
	0x03397DD0 MOV X1, X20
	0x03397DD4 MOV X3, X31
	0x03397DD8 BL 0x330E16C
	0x03397DDC ADRP X0, 0xD94000
	0x03397DE0 LDR X0, [X0 + 0x4F0]
	0x03397DE4 BL 0x1C16D08
	0x03397DE8 MOV X1, X0
	0x03397DEC MOV X0, X19
	0x03397DF0 BL 0x1C16DEC
	0x03397DF4 BL 0x1C16F20
	0x03397DF8 STR X30, [X31 - 0x20]!
	0x03397DFC STP X20, X19, [X31 + 0x10]
	0x03397E00 LDR X8, [X0]
	0x03397E04 LDR X9, [X8 + 0x588]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD5D000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xD8F000
	009 Move X0, [X0+3368]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xD95000
	016 Move X0, [X0+1112]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Type[] get_GenericTypeArguments()

Disassembly:
	0x03397E08 LDR X1, [X8 + 0x590]
	0x03397E0C BLR X9
	0x03397E10 TBZ X0, 0x0, 0x3397E20
	0x03397E14 BL 0x3396C4C
	0x03397E18 MOV X19, X0
	0x03397E1C B 0x3397E64
	0x03397E20 ADRP X0, 0xD64000
	0x03397E24 LDR X0, [X0 + 0x578]
	0x03397E28 BL 0x1C16D08
	0x03397E2C BL 0x1C16F10
	0x03397E30 MOV X19, X0
	0x03397E34 ADRP X0, 0xD94000
	0x03397E38 LDR X0, [X0 + 0x3B8]
	0x03397E3C BL 0x1C16D08
	0x03397E40 MOV X20, X0
	0x03397E44 ADRP X0, 0xD94000
	0x03397E48 LDR X0, [X0 + 0x3C0]
	0x03397E4C BL 0x1C16D08
	0x03397E50 MOV X2, X0
	0x03397E54 MOV X0, X19
	0x03397E58 MOV X1, X20
	0x03397E5C MOV X3, X31
	0x03397E60 BL 0x330E16C
	0x03397E64 ADRP X0, 0xD94000
	0x03397E68 LDR X0, [X0 + 0x4F8]
	0x03397E6C BL 0x1C16D08
	0x03397E70 MOV X1, X0
	0x03397E74 MOV X0, X19
	0x03397E78 BL 0x1C16DEC
	0x03397E7C STP X30, X19, [X31 - 0x10]!
	0x03397E80 ADRP X0, 0xD5C000
	0x03397E84 LDR X0, [X0 + 0xB40]
	0x03397E88 BL 0x1C16D08
	0x03397E8C BL 0x1C16F10
	0x03397E90 MOV X1, X31
	0x03397E94 MOV X19, X0
	0x03397E98 BL 0x3380310
	0x03397E9C ADRP X0, 0xD94000
	0x03397EA0 LDR X0, [X0 + 0x500]
	0x03397EA4 BL 0x1C16D08
	0x03397EA8 MOV X1, X0
	0x03397EAC MOV X0, X19
	0x03397EB0 BL 0x1C16DEC
	0x03397EB4 STP X30, X19, [X31 - 0x10]!
	0x03397EB8 ADRP X0, 0xD5C000
	0x03397EBC LDR X0, [X0 + 0xB40]
	0x03397EC0 BL 0x1C16D08
	0x03397EC4 BL 0x1C16F10
	0x03397EC8 MOV X1, X31
	0x03397ECC MOV X19, X0
	0x03397ED0 BL 0x3380310
	0x03397ED4 ADRP X0, 0xD94000
	0x03397ED8 LDR X0, [X0 + 0x508]
	0x03397EDC BL 0x1C16D08
	0x03397EE0 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1047000
	005 Move W8, [X20+139]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD87000
	012 Move X0, [X0+2416]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+139], W8
	016 Move X8, [X19]
	017 Move X0, X19
	018 Move X9, [X8+968]
	019 Move X1, [X8+976]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {34}
	025 Move X8, [X19]
	026 Move X0, X19
	027 Move X9, [X8+984]
	028 Move X1, [X8+992]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {68}
	034 Move X8, 0xD87000
	035 Move X8, [X8+2416]
	036 Move X19, [X8]
	037 Move X8, [X19+56]
	038 Compare X8, 0
	039 JumpIfNotEqual {43}
	040 Move X0, X19
	041 Call 0x1C5D6E0
	042 Move X8, [X19+56]
	043 Move X0, [X8+16]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X8, [X19+56]
	055 Move X0, [X8+16]
	056 Move W8, [X0+309]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {62}
	061 Call 0x1C5D684
	062 Move X8, [X0+184]
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X0, [X8]
	066 Move X30, [X31+32]
	067 Return X0
	068 Move X8, [X19]
	069 Move X0, X19
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X2, [X8+1128]
	073 Move X1, [X8+1136]
	074 Move X30, [X31+32]
	075 CallNoReturn X2

Method: System.Type[] GetGenericArguments()

Disassembly:
	0x03397EE4 MOV X0, X19
	0x03397EE8 BL 0x1C16DEC
	0x03397EEC STP X30, X19, [X31 - 0x10]!
	0x03397EF0 ADRP X0, 0xD5C000
	0x03397EF4 LDR X0, [X0 + 0xB40]
	0x03397EF8 BL 0x1C16D08
	0x03397EFC BL 0x1C16F10
	0x03397F00 MOV X1, X31
	0x03397F04 MOV X19, X0
	0x03397F08 BL 0x3380310
	0x03397F0C ADRP X0, 0xD94000
	0x03397F10 LDR X0, [X0 + 0x510]
	0x03397F14 BL 0x1C16D08
	0x03397F18 MOV X1, X0
	0x03397F1C MOV X0, X19
	0x03397F20 BL 0x1C16DEC
	0x03397F24 STP X30, X19, [X31 - 0x10]!
	0x03397F28 ADRP X0, 0xD5C000
	0x03397F2C LDR X0, [X0 + 0xB40]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD5D000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xD8F000
	009 Move X0, [X0+3368]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xD95000
	016 Move X0, [X0+1120]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Int32 get_GenericParameterPosition()

Disassembly:
	0x03397F30 BL 0x1C16D08
	0x03397F34 BL 0x1C16F10
	0x03397F38 MOV X19, X0
	0x03397F3C ADRP X0, 0xD8E000
	0x03397F40 LDR X0, [X0 + 0xD28]
	0x03397F44 BL 0x1C16D08
	0x03397F48 MOV X1, X0
	0x03397F4C MOV X0, X19
	0x03397F50 MOV X2, X31
	0x03397F54 BL 0x3379A44
	0x03397F58 ADRP X0, 0xD94000
	0x03397F5C LDR X0, [X0 + 0x518]
	0x03397F60 BL 0x1C16D08
	0x03397F64 MOV X1, X0
	0x03397F68 MOV X0, X19
	0x03397F6C BL 0x1C16DEC
	0x03397F70 STP X30, X19, [X31 - 0x10]!
	0x03397F74 ADRP X0, 0xD5C000
	0x03397F78 LDR X0, [X0 + 0xB40]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD5D000
	004 Move X0, [X0+1456]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xD8F000
	009 Move X0, [X0+3776]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call InvalidOperationException..ctor, X0, X1
	015 Move X0, 0xD95000
	016 Move X0, [X0+1128]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Reflection.GenericParameterAttributes get_GenericParameterAttributes()

Disassembly:
	0x03397F7C BL 0x1C16D08
	0x03397F80 BL 0x1C16F10
	0x03397F84 MOV X1, X31
	0x03397F88 MOV X19, X0
	0x03397F8C BL 0x3380310
	0x03397F90 ADRP X0, 0xD94000
	0x03397F94 LDR X0, [X0 + 0x520]
	0x03397F98 BL 0x1C16D08
	0x03397F9C MOV X1, X0
	0x03397FA0 MOV X0, X19
	0x03397FA4 BL 0x1C16DEC
	0x03397FA8 STR X30, [X31 - 0x30]!
	0x03397FAC STP X22, X21, [X31 + 0x10]
	0x03397FB0 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD5D000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xD95000
	011 Move X0, [X0+1136]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Type[] GetGenericParameterConstraints()

Disassembly:
	0x03397FB4 ADRP X21, 0x1046000
	0x03397FB8 ADRP X22, 0xD94000
	0x03397FBC LDRB W8, [X21 + 0x96]
	0x03397FC0 LDR X22, [X22 + 0x528]
	0x03397FC4 MOV X19, X1
	0x03397FC8 MOV X20, X0
	0x03397FCC TBNZ X8, 0x0, 0x3397FE4
	0x03397FD0 ADRP X0, 0xD94000
	0x03397FD4 LDR X0, [X0 + 0x528]
	0x03397FD8 BL 0x1C16CF4
	0x03397FDC MOVZ W8, 0x1
	0x03397FE0 STRB W8, [X21 + 0x96]
	0x03397FE4 LDR X0, [X22]
	0x03397FE8 BL 0x1C16F10
	0x03397FEC MOV X1, X20
	0x03397FF0 MOV X2, X19
	0x03397FF4 MOV X3, X31
	0x03397FF8 MOV X21, X0
	0x03397FFC BL 0x32D01FC
	0x03398000 MOV X0, X21
	0x03398004 LDP X20, X19, [X31 + 0x20]
	0x03398008 LDP X22, X21, [X31 + 0x10]
	0x0339800C LDR X30, [X31], #0x30
	0x03398010 RET
	0x03398014 STP X30, X21, [X31 - 0x20]!
	0x03398018 STP X20, X19, [X31 + 0x10]
	0x0339801C ADRP X21, 0x1045000
	0x03398020 ADRP X20, 0xD93000
	0x03398024 LDRB W8, [X21 + 0x97]
	0x03398028 LDR X20, [X20 + 0x530]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Move X9, [X8+936]
	006 Move X1, [X8+944]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move W20, W0
	009 Move X0, 0xD5D000
	010 Move X0, [X0+1456]
	011 Call 0x1C17D08
	012 Call 0x1C17F10
	013 Move X19, X0
	014 Move TEMP, X20
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {21}
	018 Move X0, X19
	019 Move X1, X31
	020 Call InvalidOperationException..ctor, X0
	021 Move X0, 0xD8F000
	022 Move X0, [X0+3776]
	023 Call 0x1C17D08
	024 Move X1, X0
	025 Move X0, X19
	026 Move X2, X31
	027 Call InvalidOperationException..ctor, X0, X1
	028 Move X0, 0xD94000
	029 Move X0, [X0+1144]
	030 Call 0x1C17D08
	031 Move X1, X0
	032 Move X0, X19
	033 Call 0x1C17DEC

Method: System.Reflection.TypeAttributes get_Attributes()

Disassembly:
	0x0339802C MOV X19, X0
	0x03398030 TBNZ X8, 0x0, 0x3398048
	0x03398034 ADRP X0, 0xD93000
	0x03398038 LDR X0, [X0 + 0x530]

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+1208]
	003 Move X1, [X8+1216]
	004 CallNoReturn X2

Method: System.Reflection.TypeAttributes GetAttributeFlagsImpl()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean get_IsAbstract()

Disassembly:
	0x0339803C BL 0x1C16CF4
	0x03398040 MOVZ W8, 0x1
	0x03398044 STRB W8, [X21 + 0x97]
	0x03398048 LDR X8, [X19]
	0x0339804C MOV X0, X19
	0x03398050 LDP X9, X1, [X8 + 0x1A8]
	0x03398054 BLR X9
	0x03398058 LDR X8, [X20]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+1208]
	004 Move X1, [X8+1216]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 Move W0, W0
	007 ShiftRight W0, 7
	008 And W0, W0, 127
	009 Move X30, [X31+16]
	010 Return X0

Method: System.Boolean get_IsSealed()

Disassembly:
	0x0339805C LDP X20, X19, [X31 + 0x10]
	0x03398060 MOV X1, X0
	0x03398064 MOV X2, X31
	0x03398068 MOV X0, X8
	0x0339806C LDP X30, X21, [X31], #0x20
	0x03398070 B 0x321B938
	0x03398074 STP X30, X21, [X31 - 0x20]!
	0x03398078 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+1208]
	004 Move X1, [X8+1216]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 Move W0, W0
	007 ShiftRight W0, 8
	008 And W0, W0, 255
	009 Move X30, [X31+16]
	010 Return X0

Method: System.Boolean get_IsClass()

Disassembly:
	0x0339807C ADRP X21, 0x1045000
	0x03398080 LDRB W8, [X21 + 0x98]
	0x03398084 MOV X20, X1
	0x03398088 MOV X19, X0
	0x0339808C TBNZ X8, 0x0, 0x33980A4
	0x03398090 ADRP X0, 0xD5B000
	0x03398094 LDR X0, [X0 + 0x6C0]
	0x03398098 BL 0x1C16CF4
	0x0339809C MOVZ W8, 0x1
	0x033980A0 STRB W8, [X21 + 0x98]
	0x033980A4 CBZ X20, 0x33980D0
	0x033980A8 ADRP X8, 0xD5B000
	0x033980AC LDR X8, [X8 + 0x6C0]
	0x033980B0 LDR X9, [X20]
	0x033980B4 LDR X8, [X8]
	0x033980B8 LDRB W11, [X9 + 0x130]
	0x033980BC LDRB W10, [X8 + 0x130]
	0x033980C0 CMP W11, W10

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+1208]
	006 Move X1, [X8+1216]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move TEMP, X0
	009 And TEMP, TEMP, 32
	010 Compare TEMP, 32
	011 JumpIfEqual {18}
	012 Move X8, [X19]
	013 Move X0, X19
	014 Move X9, [X8+1512]
	015 Move X1, [X8+1520]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Xor W8, W0, 1
	018 Move W8, W31
	019 And W0, W8, 1
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Return X0

Method: System.Boolean get_IsNestedAssembly()

Disassembly:
	0x033980D4 MOV W0, W31
	0x033980D8 LDP X30, X21, [X31], #0x20
	0x033980DC RET
	0x033980E0 LDR X9, [X9 + 0xC8]
	0x033980E4 ADD X9, X9, X10, 0x3, LSL
	0x033980E8 LDUR X9, [X9 - 0x8]
	0x033980EC CMP X9, X8
	0x033980F0 CSEL X1, X20, X31, EQ
	0x033980F4 LDR X8, [X19]
	0x033980F8 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+1208]
	004 Move X1, [X8+1216]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 And W8, W0, 7
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Move X30, [X31+16]
	010 Return X0

Method: System.Boolean get_IsNestedPublic()

Disassembly:
	0x033980FC LDP X20, X19, [X31 + 0x10]
	0x03398100 LDR X3, [X8 + 0x8F8]
	0x03398104 LDR X2, [X8 + 0x900]
	0x03398108 LDP X30, X21, [X31], #0x20
	0x0339810C BR X3
	0x03398110 STP X30, X19, [X31 - 0x10]!
	0x03398114 LDR X8, [X0]
	0x03398118 MOV X19, X0
	0x0339811C LDR X9, [X8 + 0x328]
	0x03398120 LDR X1, [X8 + 0x330]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+1208]
	004 Move X1, [X8+1216]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 And W8, W0, 7
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Move X30, [X31+16]
	010 Return X0

Method: System.Boolean get_IsNotPublic()

Disassembly:
	0x03398124 BLR X9
	0x03398128 CMP X0, X19
	0x0339812C B.EQ 0x3398144
	0x03398130 CBZ X0, 0x3398154
	0x03398134 LDR X8, [X0]
	0x03398138 LDP X2, X1, [X8 + 0x158]
	0x0339813C LDP X30, X19, [X31], #0x10
	0x03398140 BR X2
	0x03398144 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+1208]
	004 Move X1, [X8+1216]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 And W31, W0, 7
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Move X30, [X31+16]
	009 Return X0

Method: System.Boolean get_IsPublic()

Disassembly:
	0x03398148 MOV X1, X31
	0x0339814C LDP X30, X19, [X31], #0x10
	0x03398150 B 0x32CCBB0
	0x03398154 BL 0x1C16F20
	0x03398158 STR X30, [X31 - 0x30]!
	0x0339815C STP X22, X21, [X31 + 0x10]
	0x03398160 STP X20, X19, [X31 + 0x20]
	0x03398164 ADRP X21, 0x1045000
	0x03398168 ADRP X22, 0xD5B000
	0x0339816C LDRB W8, [X21 + 0x99]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+1208]
	004 Move X1, [X8+1216]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 And W8, W0, 7
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Move X30, [X31+16]
	010 Return X0

Method: System.Boolean get_IsExplicitLayout()

Disassembly:
	0x03398170 LDR X22, [X22 + 0x6C0]
	0x03398174 MOV X19, X1
	0x03398178 MOV X20, X0
	0x0339817C TBNZ X8, 0x0, 0x3398194
	0x03398180 ADRP X0, 0xD5B000
	0x03398184 LDR X0, [X0 + 0x6C0]
	0x03398188 BL 0x1C16CF4
	0x0339818C MOVZ W8, 0x1
	0x03398190 STRB W8, [X21 + 0x99]
	0x03398194 LDR X0, [X22]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+1208]
	004 Move X1, [X8+1216]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 And W8, W0, 24
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Move X30, [X31+16]
	010 Return X0

Method: System.Boolean get_IsCOMObject()

Disassembly:
	0x03398198 LDR W8, [X0 + 0xE0]
	0x0339819C CBZ W8, 0x33981DC
	0x033981A0 CBZ X19, 0x33981E4
	0x033981A4 LDR X8, [X20]

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+1368]
	003 Move X1, [X8+1376]
	004 CallNoReturn X2

Method: System.Boolean IsCOMObjectImpl()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean get_IsContextful()

Disassembly:
	0x033981A8 MOV X0, X20
	0x033981AC LDR X9, [X8 + 0x328]
	0x033981B0 LDR X1, [X8 + 0x330]
	0x033981B4 BLR X9

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+1400]
	003 Move X1, [X8+1408]
	004 CallNoReturn X2

Method: System.Boolean IsContextfulImpl()

Disassembly:
	0x033981B8 LDR X8, [X19]
	0x033981BC MOV X20, X0
	0x033981C0 MOV X0, X19
	0x033981C4 LDR X9, [X8 + 0x328]
	0x033981C8 LDR X1, [X8 + 0x330]
	0x033981CC BLR X9
	0x033981D0 CMP X20, X0
	0x033981D4 CSET W0, EQ
	0x033981D8 B 0x33981E8
	0x033981DC BL 0x1C16DFC
	0x033981E0 CBNZ X19, 0x33981A4
	0x033981E4 MOV W0, W31
	0x033981E8 LDP X20, X19, [X31 + 0x20]
	0x033981EC LDP X22, X21, [X31 + 0x10]
	0x033981F0 LDR X30, [X31], #0x30
	0x033981F4 RET
	0x033981F8 STR X30, [X31 - 0x20]!
	0x033981FC STP X20, X19, [X31 + 0x10]
	0x03398200 ADRP X19, 0x1045000
	0x03398204 ADRP X20, 0xD5B000
	0x03398208 LDRB W8, [X19 + 0x9A]
	0x0339820C LDR X20, [X20 + 0x6C0]
	0x03398210 TBNZ X8, 0x0, 0x3398234
	0x03398214 ADRP X0, 0xD93000
	0x03398218 LDR X0, [X0 + 0x538]
	0x0339821C BL 0x1C16CF4
	0x03398220 ADRP X0, 0xD5B000
	0x03398224 LDR X0, [X0 + 0x6C0]
	0x03398228 BL 0x1C16CF4
	0x0339822C MOVZ W8, 0x1
	0x03398230 STRB W8, [X19 + 0x9A]
	0x03398234 LDR X0, [X20]
	0x03398238 LDR W8, [X0 + 0xE0]
	0x0339823C CBNZ W8, 0x3398248
	0x03398240 BL 0x1C16DFC
	0x03398244 LDR X0, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1046000
	007 Move X20, 0xD94000
	008 Move X21, 0xD5C000
	009 Move W8, [X22+140]
	010 Move X20, [X20+1152]
	011 Move X21, [X21+1728]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xD94000
	018 Move X0, [X0+1152]
	019 Call 0x1C17CF4
	020 Move X0, 0xD5C000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+140], W8
	025 Move X0, [X21]
	026 Move X20, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call Type.GetTypeFromHandle, X0
	033 Compare X0, 0
	034 JumpIfEqual {45}
	035 Move X8, [X0]
	036 Move X1, X19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X3, [X8+680]
	042 Move X2, [X8+688]
	043 Move X30, [X31+48]
	044 CallNoReturn X3
	045 Call 0x1C17F20

Method: System.Boolean get_IsEnum()

Disassembly:
	0x03398248 LDR X8, [X0 + 0xB8]
	0x0339824C LDR X19, [X8]
	0x03398250 BL 0x1C16D44
	0x03398254 CBNZ X19, 0x3398298
	0x03398258 ADRP X8, 0xD93000
	0x0339825C LDR X8, [X8 + 0x538]
	0x03398260 LDR X0, [X8]
	0x03398264 BL 0x1C16F10
	0x03398268 MOV X1, X31
	0x0339826C MOV X19, X0
	0x03398270 BL 0x33AE354
	0x03398274 LDR X0, [X20]
	0x03398278 LDR W8, [X0 + 0xE0]
	0x0339827C CBNZ W8, 0x3398288
	0x03398280 BL 0x1C16DFC
	0x03398284 LDR X0, [X20]
	0x03398288 LDR X0, [X0 + 0xB8]
	0x0339828C MOV X1, X19
	0x03398290 MOV X2, X31
	0x03398294 BL 0x1C24138
	0x03398298 LDR X0, [X20]
	0x0339829C LDR W8, [X0 + 0xE0]
	0x033982A0 CBNZ W8, 0x33982AC
	0x033982A4 BL 0x1C16DFC
	0x033982A8 LDR X0, [X20]
	0x033982AC LDR X8, [X0 + 0xB8]
	0x033982B0 LDR X19, [X8]
	0x033982B4 BL 0x1C16D44
	0x033982B8 MOV X0, X19
	0x033982BC LDP X20, X19, [X31 + 0x10]
	0x033982C0 LDR X30, [X31], #0x20
	0x033982C4 RET
	0x033982C8 B 0x1C179F4
	0x033982CC MOV W0, W31
	0x033982D0 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1046000
	007 Move X20, 0xD91000
	008 Move X21, 0xD5C000
	009 Move W8, [X22+141]
	010 Move X20, [X20+720]
	011 Move X21, [X21+1728]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xD91000
	018 Move X0, [X0+720]
	019 Call 0x1C17CF4
	020 Move X0, 0xD5C000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+141], W8
	025 Move X0, [X21]
	026 Move X20, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call Type.GetTypeFromHandle, X0
	033 Move X8, [X19]
	034 Move X1, X0
	035 Move X0, X19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X3, [X8+664]
	039 Move X2, [X8+672]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 CallNoReturn X3

Method: System.Boolean get_IsMarshalByRef()

Disassembly:
	0x033982D4 LDR X8, [X0]
	0x033982D8 MOV W1, W31
	0x033982DC LDR X3, [X8 + 0x918]
	0x033982E0 LDR X2, [X8 + 0x920]

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+1448]
	003 Move X1, [X8+1456]
	004 CallNoReturn X2

Method: System.Boolean IsMarshalByRefImpl()

Disassembly:
	0x033982E4 BR X3
	0x033982E8 STP X30, X19, [X31 - 0x10]!
	0x033982EC ADRP X0, 0xD64000
	0x033982F0 LDR X0, [X0 + 0x758]
	0x033982F4 BL 0x1C16D08
	0x033982F8 BL 0x1C16F10
	0x033982FC MOV X1, X31
	0x03398300 MOV X19, X0
	0x03398304 BL 0x3380288
	0x03398308 ADRP X0, 0xD93000
	0x0339830C LDR X0, [X0 + 0x540]
	0x03398310 BL 0x1C16D08
	0x03398314 MOV X1, X0
	0x03398318 MOV X0, X19
	0x0339831C BL 0x1C16DEC
	0x03398320 SUB X31, X31, 0x40
	0x03398324 STP X30, X23, [X31 + 0x10]
	0x03398328 STP X22, X21, [X31 + 0x20]
	0x0339832C STP X20, X19, [X31 + 0x30]
	0x03398330 ADRP X23, 0x1045000
	0x03398334 ADRP X22, 0xD84000
	0x03398338 LDRB W8, [X23 + 0x9D]
	0x0339833C LDR X22, [X22 + 0x4E8]
	0x03398340 MOV W20, W2
	0x03398344 MOV W21, W1
	0x03398348 MOV X19, X0
	0x0339834C TBNZ X8, 0x0, 0x3398364
	0x03398350 ADRP X0, 0xD84000
	0x03398354 LDR X0, [X0 + 0x4E8]
	0x03398358 BL 0x1C16CF4
	0x0339835C MOVZ W8, 0x1
	0x03398360 STRB W8, [X23 + 0x9D]
	0x03398364 LDR X0, [X22]
	0x03398368 MOVZ W8, 0x1
	0x0339836C STR W8, [X31 + 0xC]
	0x03398370 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1046000
	007 Move X20, 0xD8C000
	008 Move X21, 0xD5C000
	009 Move W8, [X22+142]
	010 Move X20, [X20+3584]
	011 Move X21, [X21+1728]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xD8C000
	018 Move X0, [X0+3584]
	019 Call 0x1C17CF4
	020 Move X0, 0xD5C000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+142], W8
	025 Move X0, [X21]
	026 Move X20, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call Type.GetTypeFromHandle, X0
	033 Compare X0, 0
	034 JumpIfEqual {45}
	035 Move X8, [X0]
	036 Move X1, X19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X3, [X8+680]
	042 Move X2, [X8+688]
	043 Move X30, [X31+48]
	044 CallNoReturn X3
	045 Call 0x1C17F20

Method: System.Boolean get_IsPrimitive()

Disassembly:
	0x03398374 CBNZ W8, 0x339837C
	0x03398378 BL 0x1C16DFC
	0x0339837C AND W1, W21, 0x1
	0x03398380 AND W2, W20, 0x1

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+1480]
	003 Move X1, [X8+1488]
	004 CallNoReturn X2

Method: System.Boolean IsPrimitiveImpl()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean get_IsValueType()

Disassembly:
	0x033980C4 B.CS 0x33980E0
	0x033980C8 MOV X1, X31
	0x033980CC B 0x33980F4
	0x033980D0 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+1512]
	003 Move X1, [X8+1520]
	004 CallNoReturn X2

Method: System.Boolean IsValueTypeImpl()

Disassembly:
	0x03398384 ADD X4, X31, 0xC
	0x03398388 MOV X0, X19
	0x0339838C MOV W3, W31
	0x03398390 MOV X5, X31
	0x03398394 BL 0x33B402C
	0x03398398 LDP X20, X19, [X31 + 0x30]
	0x0339839C LDP X22, X21, [X31 + 0x20]
	0x033983A0 LDP X30, X23, [X31 + 0x10]
	0x033983A4 ADD X31, X31, 0x40
	0x033983A8 RET
	0x033983AC STR X30, [X31 - 0x30]!
	0x033983B0 STP X22, X21, [X31 + 0x10]
	0x033983B4 STP X20, X19, [X31 + 0x20]
	0x033983B8 ADRP X22, 0x1045000
	0x033983BC ADRP X21, 0xD84000
	0x033983C0 LDRB W8, [X22 + 0x9E]
	0x033983C4 LDR X21, [X21 + 0x4E8]
	0x033983C8 MOV W20, W1
	0x033983CC MOV X19, X0
	0x033983D0 TBNZ X8, 0x0, 0x33983E8
	0x033983D4 ADRP X0, 0xD84000
	0x033983D8 LDR X0, [X0 + 0x4E8]
	0x033983DC BL 0x1C16CF4
	0x033983E0 MOVZ W8, 0x1
	0x033983E4 STRB W8, [X22 + 0x9E]
	0x033983E8 LDR X0, [X21]
	0x033983EC MOVZ W8, 0x1
	0x033983F0 STR W8, [X31 + 0xC]
	0x033983F4 LDR W8, [X0 + 0xE0]
	0x033983F8 CBNZ W8, 0x3398400
	0x033983FC BL 0x1C16DFC
	0x03398400 AND W1, W20, 0x1
	0x03398404 ADD X4, X31, 0xC
	0x03398408 MOV X0, X19
	0x0339840C MOV W2, W31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1046000
	007 Move X20, 0xD94000
	008 Move X21, 0xD5C000
	009 Move W8, [X22+143]
	010 Move X20, [X20+1160]
	011 Move X21, [X21+1728]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xD5C000
	018 Move X0, [X0+1728]
	019 Call 0x1C17CF4
	020 Move X0, 0xD94000
	021 Move X0, [X0+1160]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+143], W8
	025 Move X0, [X21]
	026 Move X20, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call Type.GetTypeFromHandle, X0
	033 Move X8, [X19]
	034 Move X1, X0
	035 Move X0, X19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X3, [X8+664]
	039 Move X2, [X8+672]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 CallNoReturn X3

Method: System.Boolean get_IsSignatureType()

Disassembly:
	0x03398410 MOV W3, W31
	0x03398414 MOV X5, X31

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Reflection.ConstructorInfo GetConstructor(System.Type[] types)

Disassembly:
	0x03398418 BL 0x33B402C
	0x0339841C LDP X20, X19, [X31 + 0x20]
	0x03398420 LDP X22, X21, [X31 + 0x10]
	0x03398424 LDR X30, [X31], #0x30
	0x03398428 RET
	0x0339842C SUB X31, X31, 0x30

ISIL:
	001 Move X4, X1
	002 Move W1, 20
	003 Move W3, 3
	004 Move X2, X31
	005 Move X5, X31
	006 Call Type.GetConstructor, X0, X1, X2, X3, X4, X5
	007 Return X0

Method: System.Reflection.ConstructorInfo GetConstructor(System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Type[] types, System.Reflection.ParameterModifier[] modifiers)

Disassembly:
	0x03398430 STP X30, X21, [X31 + 0x10]
	0x03398434 STP X20, X19, [X31 + 0x20]
	0x03398438 ADRP X21, 0x1045000
	0x0339843C ADRP X20, 0xD84000

ISIL:
	001 Move X5, X4
	002 Move X4, X3
	003 Move W3, 3

Method: System.Reflection.ConstructorInfo GetConstructor(System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, System.Type[] types, System.Reflection.ParameterModifier[] modifiers)

Disassembly:
	0x03398440 LDRB W8, [X21 + 0x9F]
	0x03398444 LDR X20, [X20 + 0x4E8]
	0x03398448 MOV X19, X0
	0x0339844C TBNZ X8, 0x0, 0x3398464
	0x03398450 ADRP X0, 0xD84000
	0x03398454 LDR X0, [X0 + 0x4E8]
	0x03398458 BL 0x1C16CF4
	0x0339845C MOVZ W8, 0x1
	0x03398460 STRB W8, [X21 + 0x9F]
	0x03398464 LDR X0, [X20]
	0x03398468 MOVZ W8, 0x1
	0x0339846C STR W8, [X31 + 0xC]
	0x03398470 LDR W8, [X0 + 0xE0]
	0x03398474 CBNZ W8, 0x339847C
	0x03398478 BL 0x1C16DFC
	0x0339847C ADD X4, X31, 0xC
	0x03398480 MOV X0, X19
	0x03398484 MOV W1, W31
	0x03398488 MOV W2, W31
	0x0339848C MOV W3, W31
	0x03398490 MOV X5, X31
	0x03398494 BL 0x33B402C
	0x03398498 LDP X20, X19, [X31 + 0x20]
	0x0339849C LDP X30, X21, [X31 + 0x10]
	0x033984A0 ADD X31, X31, 0x30
	0x033984A4 RET
	0x033984A8 STR X30, [X31 - 0x10]!
	0x033984AC MOVZ W8, 0x1
	0x033984B0 AND W3, W3, 0x1
	0x033984B4 ADD X5, X31, 0xC
	0x033984B8 MOV W4, W31
	0x033984BC MOV X6, X31
	0x033984C0 STR W8, [X31 + 0xC]
	0x033984C4 BL 0x33C244C
	0x033984C8 LDR X30, [X31], #0x10
	0x033984CC RET
	0x033984D0 STR X30, [X31 - 0x20]!
	0x033984D4 STP X20, X19, [X31 + 0x10]
	0x033984D8 ADRP X20, 0x1045000
	0x033984DC LDRB W8, [X20 + 0xA0]
	0x033984E0 MOV X19, X0
	0x033984E4 TBNZ X8, 0x0, 0x33984FC
	0x033984E8 ADRP X0, 0xD93000
	0x033984EC LDR X0, [X0 + 0x548]
	0x033984F0 BL 0x1C16CF4
	0x033984F4 MOVZ W8, 0x1
	0x033984F8 STRB W8, [X20 + 0xA0]
	0x033984FC STR X31, [X31 + 0x8]
	0x03398500 LDR X8, [X19]
	0x03398504 ADD X1, X31, 0x8
	0x03398508 MOV X0, X19
	0x0339850C LDR X9, [X8 + 0x938]
	0x03398510 LDR X2, [X8 + 0x940]
	0x03398514 BLR X9
	0x03398518 CBZ X0, 0x3398534
	0x0339851C LDR X8, [X19]
	0x03398520 LDR X1, [X8 + 0x2F0]
	0x03398524 LDR X9, [X8 + 0x2E8]
	0x03398528 MOV X0, X19
	0x0339852C BLR X9
	0x03398530 B 0x3398540
	0x03398534 ADRP X8, 0xD93000
	0x03398538 LDR X8, [X8 + 0x548]
	0x0339853C LDR X0, [X8]
	0x03398540 LDP X20, X19, [X31 + 0x10]
	0x03398544 LDR X30, [X31], #0x20
	0x03398548 RET
	0x0339854C CMP W1, 0x1
	0x03398550 MOV X19, X0
	0x03398554 B.NE 0x33985BC
	0x03398558 MOV X0, X19
	0x0339855C BL 0x3EB1AD0
	0x03398560 MOV X19, X0
	0x03398564 ADRP X0, 0xD89000
	0x03398568 LDR X0, [X0 + 0xFC8]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X25, 0x1046000
	013 Move W8, [X25+144]
	014 Move X19, X5
	015 Move X20, X4
	016 Move W21, W3
	017 Move X22, X2
	018 Move W23, W1
	019 Move X24, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0xD5C000
	025 Move X0, [X0+1728]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X25+144], W8
	029 Compare X20, 0
	030 JumpIfEqual {71}
	031 Move W8, [X20+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X26, 0xD5C000
	034 Move X26, [X26+1728]
	035 Move X25, X31
	036 Add X27, X20, 32
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, [X26]
	039 Move X28, [X27]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Compare X28, 0
	045 JumpIfEqual {71}
	046 Move W8, [X20+24]
	047 Add X25, X25, 1
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X8, [X24]
	050 Move X0, X24
	051 Move W1, W23
	052 Move X2, X22
	053 Move X7, [X8+1592]
	054 Move X6, [X8+1600]
	055 Move W3, W21
	056 Move X4, X20
	057 Move X5, X19
	058 Move X20, [X31+80]
	059 Move X19, [X31+88]
	060 Move X22, [X31+64]
	061 Move X21, [X31+72]
	062 Move X24, [X31+48]
	063 Move X23, [X31+56]
	064 Move X26, [X31+32]
	065 Move X25, [X31+40]
	066 Move X28, [X31+16]
	067 Move X27, [X31+24]
	068 Move X30, [X31+96]
	069 CallNoReturn X7
	070 Call 0x1C17F28
	071 Move X0, 0xD61000
	072 Move X0, [X0+1320]
	073 Call 0x1C17D08
	074 Call 0x1C17F10
	075 Move X19, X0
	076 Move X0, 0xD94000
	077 Move X0, [X0+1168]
	078 Call 0x1C17D08
	079 Move X1, X0
	080 Move X0, X19
	081 Move X2, X31
	082 Call ArgumentNullException..ctor, X0, X1
	083 Move X0, 0xD94000
	084 Move X0, [X0+1176]
	085 Call 0x1C17D08
	086 Move X1, X0
	087 Move X0, X19
	088 Call 0x1C17DEC

Method: System.Reflection.ConstructorInfo GetConstructorImpl(System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, System.Type[] types, System.Reflection.ParameterModifier[] modifiers)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Reflection.ConstructorInfo[] GetConstructors(System.Reflection.BindingFlags bindingAttr)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Reflection.EventInfo GetEvent(System.String name, System.Reflection.BindingFlags bindingAttr)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Reflection.FieldInfo GetField(System.String name)

Disassembly:
	0x0339856C BL 0x1C16D08
	0x03398570 LDR X8, [X19]
	0x03398574 LDR X1, [X8]
	0x03398578 BL 0x1C17270
	0x0339857C TBZ X0, 0x0, 0x3398594

ISIL:
	001 Move X8, [X0]
	002 Move W2, 28
	003 Move X4, [X8+1656]
	004 Move X3, [X8+1664]
	005 CallNoReturn X4

Method: System.Reflection.FieldInfo GetField(System.String name, System.Reflection.BindingFlags bindingAttr)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Reflection.FieldInfo[] GetFields(System.Reflection.BindingFlags bindingAttr)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Reflection.MemberInfo[] GetMember(System.String name)

Disassembly:
	0x03398580 BL 0x3EB1AE0
	0x03398584 ADRP X0, 0xD93000
	0x03398588 LDR X0, [X0 + 0x548]
	0x0339858C BL 0x1C16D08
	0x03398590 B 0x3398540

ISIL:
	001 Move X8, [X0]
	002 Move W2, 28
	003 Move X4, [X8+1704]
	004 Move X3, [X8+1712]
	005 CallNoReturn X4

Method: System.Reflection.MemberInfo[] GetMember(System.String name, System.Reflection.BindingFlags bindingAttr)

Disassembly:
	0x03398594 MOVZ W0, 0x8
	0x03398598 BL 0x3EB1AF0
	0x0339859C LDR X8, [X19]
	0x033985A0 STR X8, [X0]
	0x033985A4 ADRP X1, 0xB1C000
	0x033985A8 ADD X1, X1, 0xE58

ISIL:
	001 Move X8, [X0]
	002 Move W3, W2
	003 Move W2, 191
	004 Move X5, [X8+1720]
	005 Move X4, [X8+1728]
	006 CallNoReturn X5

Method: System.Reflection.MemberInfo[] GetMember(System.String name, System.Reflection.MemberTypes type, System.Reflection.BindingFlags bindingAttr)

Disassembly:
	0x033985AC MOV X2, X31
	0x033985B0 BL 0x3EB1B00
	0x033985B4 MOV X19, X0
	0x033985B8 BL 0x3EB1AE0
	0x033985BC MOV X0, X19
	0x033985C0 BL 0x1D2C690
	0x033985C4 BL 0x1990590
	0x033985C8 STR X30, [X31 - 0x10]!
	0x033985CC STR X31, [X31 + 0x8]
	0x033985D0 LDR X8, [X0]
	0x033985D4 ADD X1, X31, 0x8
	0x033985D8 LDR X9, [X8 + 0x938]
	0x033985DC LDR X2, [X8 + 0x940]
	0x033985E0 BLR X9
	0x033985E4 LDR X30, [X31], #0x10
	0x033985E8 RET
	0x033985EC LDR X8, [X0]
	0x033985F0 LDP X2, X1, [X8 + 0x1A8]
	0x033985F4 BR X2

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD5C000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xD8E000
	009 Move X0, [X0+3368]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xD94000
	016 Move X0, [X0+1184]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Reflection.MemberInfo[] GetMembers(System.Reflection.BindingFlags bindingAttr)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Reflection.MethodInfo GetMethod(System.String name)

Disassembly:
	0x033985F8 SUB X31, X31, 0x30
	0x033985FC STP X30, X21, [X31 + 0x10]

ISIL:
	001 Move W2, 28

Method: System.Reflection.MethodInfo GetMethod(System.String name, System.Reflection.BindingFlags bindingAttr)

Disassembly:
	0x03398600 STP X20, X19, [X31 + 0x20]
	0x03398604 ADRP X21, 0x1045000
	0x03398608 ADRP X20, 0xD93000
	0x0339860C LDRB W8, [X21 + 0xA2]
	0x03398610 LDR X20, [X20 + 0x548]
	0x03398614 MOV X19, X0
	0x03398618 TBNZ X8, 0x0, 0x3398630
	0x0339861C ADRP X0, 0xD93000
	0x03398620 LDR X0, [X0 + 0x548]
	0x03398624 BL 0x1C16CF4
	0x03398628 MOVZ W8, 0x1
	0x0339862C STRB W8, [X21 + 0xA2]
	0x03398630 STR X31, [X31 + 0x8]
	0x03398634 LDR X8, [X19]
	0x03398638 ADD X1, X31, 0x8
	0x0339863C MOV X0, X19
	0x03398640 LDR X9, [X8 + 0x938]
	0x03398644 LDR X2, [X8 + 0x940]
	0x03398648 BLR X9
	0x0339864C LDR X8, [X20]
	0x03398650 LDP X20, X19, [X31 + 0x20]
	0x03398654 LDP X30, X21, [X31 + 0x10]
	0x03398658 CMP X0, 0x0
	0x0339865C CSEL X0, X8, X0, EQ
	0x03398660 ADD X31, X31, 0x30
	0x03398664 RET
	0x03398668 STR X30, [X31 - 0x40]!
	0x0339866C STP X24, X23, [X31 + 0x10]
	0x03398670 STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {15}
	005 Move X8, [X0]
	006 Move W4, 3
	007 Move X3, X31
	008 Move X5, X31
	009 Move X9, [X8+1848]
	010 Move X7, [X8+1856]
	011 Move X6, X31
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 CallNoReturn X9
	015 Move X0, 0xD61000
	016 Move X0, [X0+1320]
	017 Call 0x1C17D08
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Move X0, 0xD64000
	021 Move X0, [X0+1416]
	022 Call 0x1C17D08
	023 Move X1, X0
	024 Move X0, X19
	025 Move X2, X31
	026 Call ArgumentNullException..ctor, X0, X1
	027 Move X0, 0xD94000
	028 Move X0, [X0+1192]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X19
	032 Call 0x1C17DEC

Method: System.Reflection.MethodInfo GetMethod(System.String name, System.Type[] types)

Disassembly:
	0x03398674 STP X20, X19, [X31 + 0x30]
	0x03398678 ADRP X21, 0x1045000
	0x0339867C ADRP X20, 0xD5B000
	0x03398680 ADRP X19, 0xD85000
	0x03398684 LDRB W8, [X21 + 0xA3]
	0x03398688 LDR X20, [X20 + 0x6C0]

ISIL:
	001 Move X5, X2
	002 Move W2, 28
	003 Move W4, 3
	004 Move X3, X31
	005 Move X6, X31
	006 Call Type.GetMethod, X0, X1, X2, X3, X4, X5, X6
	007 Return X0

Method: System.Reflection.MethodInfo GetMethod(System.String name, System.Type[] types, System.Reflection.ParameterModifier[] modifiers)

Disassembly:
	0x0339868C LDR X19, [X19 + 0x970]
	0x03398690 TBNZ X8, 0x0, 0x33986F0
	0x03398694 ADRP X0, 0xD85000
	0x03398698 LDR X0, [X0 + 0x970]
	0x0339869C BL 0x1C16CF4
	0x033986A0 ADRP X0, 0xD93000

ISIL:
	001 Move X6, X3
	002 Move X5, X2
	003 Move W2, 28
	004 Move W4, 3
	005 Move X3, X31
	006 Call Type.GetMethod, X0, X1, X2, X3, X4, X5, X6
	007 Return X0

Method: System.Reflection.MethodInfo GetMethod(System.String name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Type[] types, System.Reflection.ParameterModifier[] modifiers)

Disassembly:
	0x033986A4 LDR X0, [X0 + 0x550]
	0x033986A8 BL 0x1C16CF4
	0x033986AC ADRP X0, 0xD8D000
	0x033986B0 LDR X0, [X0 + 0xD90]

ISIL:
	001 Move X6, X5
	002 Move X5, X4
	003 Move W4, 3

Method: System.Reflection.MethodInfo GetMethod(System.String name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, System.Type[] types, System.Reflection.ParameterModifier[] modifiers)

Disassembly:
	0x033986B4 BL 0x1C16CF4
	0x033986B8 ADRP X0, 0xD93000
	0x033986BC LDR X0, [X0 + 0x428]
	0x033986C0 BL 0x1C16CF4
	0x033986C4 ADRP X0, 0xD93000
	0x033986C8 LDR X0, [X0 + 0x438]
	0x033986CC BL 0x1C16CF4
	0x033986D0 ADRP X0, 0xD93000
	0x033986D4 LDR X0, [X0 + 0x430]
	0x033986D8 BL 0x1C16CF4
	0x033986DC ADRP X0, 0xD5B000
	0x033986E0 LDR X0, [X0 + 0x6C0]
	0x033986E4 BL 0x1C16CF4
	0x033986E8 MOVZ W8, 0x1
	0x033986EC STRB W8, [X21 + 0xA3]
	0x033986F0 LDR X8, [X20]
	0x033986F4 MOVZ W9, 0x2E
	0x033986F8 LDR X8, [X8 + 0xB8]
	0x033986FC STRH W9, [X8 + 0x8]
	0x03398700 LDR X19, [X19]
	0x03398704 LDR X8, [X19 + 0x38]
	0x03398708 CBNZ X8, 0x3398718
	0x0339870C MOV X0, X19
	0x03398710 BL 0x1C5C6E0
	0x03398714 LDR X8, [X19 + 0x38]
	0x03398718 LDR X0, [X8 + 0x10]
	0x0339871C LDRB W8, [X0 + 0x135]
	0x03398720 TBNZ X8, 0x0, 0x3398728
	0x03398724 BL 0x1C5C684
	0x03398728 LDR W8, [X0 + 0xE0]
	0x0339872C CBNZ W8, 0x3398734
	0x03398730 BL 0x1C16DFC
	0x03398734 LDR X8, [X19 + 0x38]
	0x03398738 ADRP X19, 0xD8D000
	0x0339873C LDR X0, [X8 + 0x10]
	0x03398740 LDRB W8, [X0 + 0x135]
	0x03398744 LDR X19, [X19 + 0xD90]
	0x03398748 TBNZ X8, 0x0, 0x3398750
	0x0339874C BL 0x1C5C684
	0x03398750 LDR X8, [X0 + 0xB8]
	0x03398754 LDR X9, [X20]
	0x03398758 ADRP X22, 0xD93000
	0x0339875C ADRP X24, 0xD93000
	0x03398760 LDR X10, [X8]
	0x03398764 LDR X8, [X9 + 0xB8]
	0x03398768 ADRP X23, 0xD93000
	0x0339876C ADRP X21, 0xD93000
	0x03398770 STR X10, [X8 + 0x10]
	0x03398774 LDR X0, [X19]
	0x03398778 LDR W9, [X0 + 0xE0]
	0x0339877C LDR X22, [X22 + 0x550]
	0x03398780 LDR X24, [X24 + 0x428]
	0x03398784 LDR X23, [X23 + 0x430]
	0x03398788 LDR X21, [X21 + 0x438]
	0x0339878C CBNZ W9, 0x33987A0
	0x03398790 BL 0x1C16DFC
	0x03398794 LDR X8, [X20]
	0x03398798 LDR X0, [X19]
	0x0339879C LDR X8, [X8 + 0xB8]
	0x033987A0 LDR X9, [X0 + 0xB8]
	0x033987A4 LDR X9, [X9]
	0x033987A8 STR X9, [X8 + 0x18]
	0x033987AC LDR X0, [X22]
	0x033987B0 BL 0x1C16F10
	0x033987B4 LDR X2, [X24]
	0x033987B8 MOV X1, X31
	0x033987BC MOV X3, X31
	0x033987C0 MOV X19, X0
	0x033987C4 BL 0x32CDEB8
	0x033987C8 LDR X8, [X20]
	0x033987CC LDR X8, [X8 + 0xB8]
	0x033987D0 STR X19, [X8 + 0x20]
	0x033987D4 LDR X0, [X22]
	0x033987D8 BL 0x1C16F10
	0x033987DC LDR X2, [X23]
	0x033987E0 MOV X1, X31
	0x033987E4 MOV X3, X31
	0x033987E8 MOV X19, X0
	0x033987EC BL 0x32CDEB8
	0x033987F0 LDR X8, [X20]
	0x033987F4 LDR X8, [X8 + 0xB8]
	0x033987F8 STR X19, [X8 + 0x28]
	0x033987FC LDR X0, [X22]
	0x03398800 BL 0x1C16F10
	0x03398804 LDR X2, [X21]
	0x03398808 MOV X1, X31

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X26, 0x1046000
	014 Move W8, [X26+145]
	015 Move X19, X6
	016 Move X20, X5
	017 Move W21, W4
	018 Move X22, X3
	019 Move W23, W2
	020 Move X24, X1
	021 Move X25, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0xD5C000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X26+145], W8
	031 Compare X24, 0
	032 JumpIfEqual {95}
	033 Compare X20, 0
	034 JumpIfEqual {76}
	035 Move W8, [X20+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X27, 0xD5C000
	038 Move X27, [X27+1728]
	039 Move X26, X31
	040 Add X28, X20, 32
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X0, [X27]
	043 Move X29, [X28]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Compare X29, 0
	049 JumpIfEqual {76}
	050 Move W8, [X20+24]
	051 Add X26, X26, 1
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X8, [X25]
	054 Move X0, X25
	055 Move X1, X24
	056 Move W2, W23
	057 Move X9, [X8+1848]
	058 Move X7, [X8+1856]
	059 Move X3, X22
	060 Move W4, W21
	061 Move X5, X20
	062 Move X6, X19
	063 Move X20, [X31+80]
	064 Move X19, [X31+88]
	065 Move X22, [X31+64]
	066 Move X21, [X31+72]
	067 Move X24, [X31+48]
	068 Move X23, [X31+56]
	069 Move X26, [X31+32]
	070 Move X25, [X31+40]
	071 Move X28, [X31+16]
	072 Move X27, [X31+24]
	073 Move X29, [X31+96]
	074 Move X30, [X31+104]
	075 CallNoReturn X9
	076 Move X0, 0xD61000
	077 Move X0, [X0+1320]
	078 Call 0x1C17D08
	079 Call 0x1C17F10
	080 Move X19, X0
	081 Move X0, 0xD94000
	082 Move X0, [X0+1168]
	083 Call 0x1C17D08
	084 Move X1, X0
	085 Move X0, X19
	086 Move X2, X31
	087 Call ArgumentNullException..ctor, X0, X1
	088 Move X0, 0xD94000
	089 Move X0, [X0+1200]
	090 Call 0x1C17D08
	091 Move X1, X0
	092 Move X0, X19
	093 Call 0x1C17DEC
	094 Call 0x1C17F28
	095 Move X0, 0xD61000
	096 Move X0, [X0+1320]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X19, X0
	100 Move X0, 0xD64000
	101 Move X0, [X0+1416]

Method: System.Reflection.MethodInfo GetMethodImpl(System.String name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, System.Type[] types, System.Reflection.ParameterModifier[] modifiers)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Reflection.MethodInfo[] GetMethods()

Disassembly:
	0x0339880C MOV X3, X31
	0x03398810 MOV X19, X0
	0x03398814 BL 0x32CDEB8
	0x03398818 LDR X8, [X20]
	0x0339881C LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move X8, [X0]
	002 Move W1, 28
	003 Move X3, [X8+1880]
	004 Move X2, [X8+1888]
	005 CallNoReturn X3

Method: System.Reflection.MethodInfo[] GetMethods(System.Reflection.BindingFlags bindingAttr)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Type GetNestedType(System.String name, System.Reflection.BindingFlags bindingAttr)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Reflection.PropertyInfo GetProperty(System.String name)

Disassembly:
	0x03398820 LDP X24, X23, [X31 + 0x10]
	0x03398824 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move W2, 28

Method: System.Reflection.PropertyInfo GetProperty(System.String name, System.Reflection.BindingFlags bindingAttr)

Disassembly:
	0x03398828 STR X19, [X8 + 0x30]
	0x0339882C LDP X20, X19, [X31 + 0x30]
	0x03398830 LDR X30, [X31], #0x40
	0x03398834 RET
	0x03398838 STP X30, X21, [X31 - 0x20]!
	0x0339883C STP X20, X19, [X31 + 0x10]
	0x03398840 ADRP X20, 0x1045000
	0x03398844 ADRP X21, 0xD93000
	0x03398848 LDRB W8, [X20 + 0xA4]
	0x0339884C LDR X21, [X21 + 0x558]
	0x03398850 MOV X19, X0
	0x03398854 TBNZ X8, 0x0, 0x339886C
	0x03398858 ADRP X0, 0xD93000
	0x0339885C LDR X0, [X0 + 0x558]
	0x03398860 BL 0x1C16CF4
	0x03398864 MOVZ W8, 0x1
	0x03398868 STRB W8, [X20 + 0xA4]
	0x0339886C LDR X1, [X21]
	0x03398870 MOV X0, X19
	0x03398874 MOV X2, X31
	0x03398878 BL 0x33BE6D8
	0x0339887C MOVZ W8, 0x1543
	0x03398880 MOVK W8, 0x80130000
	0x03398884 STR W8, [X19 + 0x60]
	0x03398888 LDP X20, X19, [X31 + 0x10]
	0x0339888C LDP X30, X21, [X31], #0x20
	0x03398890 RET
	0x03398894 MOV X4, X31
	0x03398898 B 0x33BE880

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {15}
	005 Move X8, [X0]
	006 Move X3, X31
	007 Move X4, X31
	008 Move X5, X31
	009 Move X9, [X8+2008]
	010 Move X7, [X8+2016]
	011 Move X6, X31
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 CallNoReturn X9
	015 Move X0, 0xD61000
	016 Move X0, [X0+1320]
	017 Call 0x1C17D08
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Move X0, 0xD64000
	021 Move X0, [X0+1416]
	022 Call 0x1C17D08
	023 Move X1, X0
	024 Move X0, X19
	025 Move X2, X31
	026 Call ArgumentNullException..ctor, X0, X1
	027 Move X0, 0xD94000
	028 Move X0, [X0+1208]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X19
	032 Call 0x1C17DEC

Method: System.Reflection.PropertyInfo GetProperty(System.String name, System.Type returnType)

Disassembly:
	0x0339889C STP X30, X21, [X31 - 0x20]!
	0x033988A0 STP X20, X19, [X31 + 0x10]
	0x033988A4 ADRP X20, 0x1045000
	0x033988A8 ADRP X21, 0xD93000
	0x033988AC LDRB W8, [X20 + 0xA5]
	0x033988B0 LDR X21, [X21 + 0x560]
	0x033988B4 MOV X19, X0
	0x033988B8 TBNZ X8, 0x0, 0x33988D0
	0x033988BC ADRP X0, 0xD93000
	0x033988C0 LDR X0, [X0 + 0x560]
	0x033988C4 BL 0x1C16CF4
	0x033988C8 MOVZ W8, 0x1
	0x033988CC STRB W8, [X20 + 0xA5]
	0x033988D0 LDR X1, [X21]
	0x033988D4 MOV X0, X19
	0x033988D8 BL 0x338C8D8
	0x033988DC MOVZ W8, 0x1534
	0x033988E0 MOVK W8, 0x80130000
	0x033988E4 STR W8, [X19 + 0x60]
	0x033988E8 LDP X20, X19, [X31 + 0x10]
	0x033988EC LDP X30, X21, [X31], #0x20
	0x033988F0 RET
	0x033988F4 STP X30, X23, [X31 - 0x30]!
	0x033988F8 STP X22, X21, [X31 + 0x10]
	0x033988FC STP X20, X19, [X31 + 0x20]
	0x03398900 ADRP X22, 0x1045000
	0x03398904 ADRP X23, 0xD93000
	0x03398908 LDRB W8, [X22 + 0xA6]
	0x0339890C LDR X23, [X23 + 0x568]
	0x03398910 MOV X21, X2
	0x03398914 MOV X20, X1
	0x03398918 MOV X19, X0
	0x0339891C TBNZ X8, 0x0, 0x3398934
	0x03398920 ADRP X0, 0xD93000
	0x03398924 LDR X0, [X0 + 0x568]
	0x03398928 BL 0x1C16CF4
	0x0339892C MOVZ W8, 0x1
	0x03398930 STRB W8, [X22 + 0xA6]
	0x03398934 LDR X0, [X23]
	0x03398938 MOV X1, X20
	0x0339893C MOV X2, X31
	0x03398940 BL 0x32094D4
	0x03398944 MOV X1, X0
	0x03398948 MOV X0, X19
	0x0339894C MOV X2, X21
	0x03398950 BL 0x338C990
	0x03398954 MOVZ W8, 0x1534
	0x03398958 MOVK W8, 0x80130000
	0x0339895C STR X20, [X19 + 0x90]
	0x03398960 STR W8, [X19 + 0x60]
	0x03398964 LDP X20, X19, [X31 + 0x20]
	0x03398968 LDP X22, X21, [X31 + 0x10]
	0x0339896C LDP X30, X23, [X31], #0x30
	0x03398970 RET
	0x03398974 STR X30, [X31 - 0x20]!
	0x03398978 STP X20, X19, [X31 + 0x10]
	0x0339897C MOV X19, X1
	0x03398980 MOV X1, X2
	0x03398984 MOV X2, X3
	0x03398988 MOV X20, X0
	0x0339898C BL 0x338C990
	0x03398990 MOVZ W8, 0x1534

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1046000
	007 Move W8, [X22+146]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD5C000
	016 Move X0, [X0+1728]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+146], W8
	020 Compare X20, 0
	021 JumpIfEqual {47}
	022 Move X8, 0xD5C000
	023 Move X8, [X8+1728]
	024 Move X0, [X8]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Compare X19, 0
	030 JumpIfEqual {54}
	031 Move X8, [X21]
	032 Move X0, X21
	033 Move X1, X20
	034 Move X4, X19
	035 Move X9, [X8+2008]
	036 Move X7, [X8+2016]
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move W2, 28
	042 Move X3, X31
	043 Move X5, X31
	044 Move X6, X31
	045 Move X30, [X31+48]
	046 CallNoReturn X9
	047 Move X0, 0xD61000
	048 Move X0, [X0+1320]
	049 Call 0x1C17D08
	050 Call 0x1C17F10
	051 Move X19, X0
	052 Move X0, 0xD64000
	053 Move X0, [X0+1416]
	054 Move X0, 0xD61000
	055 Move X0, [X0+1320]
	056 Call 0x1C17D08
	057 Call 0x1C17F10
	058 Move X19, X0
	059 Move X0, 0xD94000
	060 Move X0, [X0+1216]
	061 Call 0x1C17D08
	062 Move X1, X0
	063 Move X0, X19
	064 Move X2, X31
	065 Call ArgumentNullException..ctor, X0, X1
	066 Move X0, 0xD94000
	067 Move X0, [X0+1224]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X19
	071 Call 0x1C17DEC

Method: System.Reflection.PropertyInfo GetProperty(System.String name, System.Type returnType, System.Type[] types)

Disassembly:
	0x03398994 MOVK W8, 0x80130000
	0x03398998 STR X19, [X20 + 0x90]
	0x0339899C STR W8, [X20 + 0x60]
	0x033989A0 LDP X20, X19, [X31 + 0x10]
	0x033989A4 LDR X30, [X31], #0x20
	0x033989A8 RET

ISIL:
	001 Move X5, X3
	002 Move X4, X2
	003 Move W2, 28
	004 Move X3, X31
	005 Move X6, X31
	006 Call Type.GetProperty, X0, X1, X2, X3, X4, X5, X6
	007 Return X0

Method: System.Reflection.PropertyInfo GetProperty(System.String name, System.Type returnType, System.Type[] types, System.Reflection.ParameterModifier[] modifiers)

Disassembly:
	0x033989AC STP X30, X23, [X31 - 0x30]!
	0x033989B0 STP X22, X21, [X31 + 0x10]
	0x033989B4 STP X20, X19, [X31 + 0x20]
	0x033989B8 ADRP X23, 0x1045000
	0x033989BC LDRB W8, [X23 + 0xA7]
	0x033989C0 MOV X21, X3

ISIL:
	001 Move X6, X4
	002 Move X5, X3
	003 Move X4, X2
	004 Move W2, 28
	005 Move X3, X31

Method: System.Reflection.PropertyInfo GetProperty(System.String name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Type returnType, System.Type[] types, System.Reflection.ParameterModifier[] modifiers)

Disassembly:
	0x033989C4 MOV X22, X2
	0x033989C8 MOV X20, X1
	0x033989CC MOV X19, X0
	0x033989D0 TBNZ X8, 0x0, 0x33989E8
	0x033989D4 ADRP X0, 0xD93000
	0x033989D8 LDR X0, [X0 + 0x570]
	0x033989DC BL 0x1C16CF4
	0x033989E0 MOVZ W8, 0x1
	0x033989E4 STRB W8, [X23 + 0xA7]
	0x033989E8 MOV X0, X19
	0x033989EC MOV X1, X20
	0x033989F0 MOV X2, X22
	0x033989F4 MOV X3, X21
	0x033989F8 BL 0x338CA74
	0x033989FC CBZ X20, 0x3398A2C
	0x03398A00 ADRP X8, 0xD93000
	0x03398A04 LDR X8, [X8 + 0x570]
	0x03398A08 MOV X0, X20
	0x03398A0C MOV X2, X31
	0x03398A10 LDR X1, [X8]
	0x03398A14 BL 0x32A9F64
	0x03398A18 STR X0, [X19 + 0x90]
	0x03398A1C LDP X20, X19, [X31 + 0x20]
	0x03398A20 LDP X22, X21, [X31 + 0x10]
	0x03398A24 LDP X30, X23, [X31], #0x30
	0x03398A28 RET
	0x03398A2C BL 0x1C16F20
	0x03398A30 STP X30, X23, [X31 - 0x30]!
	0x03398A34 STP X22, X21, [X31 + 0x10]
	0x03398A38 STP X20, X19, [X31 + 0x20]
	0x03398A3C ADRP X23, 0x1045000
	0x03398A40 LDRB W8, [X23 + 0xA8]
	0x03398A44 MOV X21, X3
	0x03398A48 MOV X22, X2

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {13}
	005 Compare X5, 0
	006 JumpIfEqual {20}
	007 Move X8, [X0]
	008 Move X9, [X8+2008]
	009 Move X7, [X8+2016]
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 CallNoReturn X9
	013 Move X0, 0xD61000
	014 Move X0, [X0+1320]
	015 Call 0x1C17D08
	016 Call 0x1C17F10
	017 Move X19, X0
	018 Move X0, 0xD64000
	019 Move X0, [X0+1416]
	020 Move X0, 0xD61000
	021 Move X0, [X0+1320]
	022 Call 0x1C17D08
	023 Call 0x1C17F10
	024 Move X19, X0
	025 Move X0, 0xD94000
	026 Move X0, [X0+1168]
	027 Call 0x1C17D08
	028 Move X1, X0
	029 Move X0, X19
	030 Move X2, X31
	031 Call ArgumentNullException..ctor, X0, X1
	032 Move X0, 0xD94000
	033 Move X0, [X0+1232]
	034 Call 0x1C17D08
	035 Move X1, X0
	036 Move X0, X19
	037 Call 0x1C17DEC

Method: System.Reflection.PropertyInfo GetPropertyImpl(System.String name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Type returnType, System.Type[] types, System.Reflection.ParameterModifier[] modifiers)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Reflection.PropertyInfo[] GetProperties(System.Reflection.BindingFlags bindingAttr)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.RuntimeTypeHandle get_TypeHandle()

Disassembly:
	0x03398A4C MOV X19, X1
	0x03398A50 MOV X20, X0
	0x03398A54 TBNZ X8, 0x0, 0x3398A84
	0x03398A58 ADRP X0, 0xD83000
	0x03398A5C LDR X0, [X0 + 0xB60]
	0x03398A60 BL 0x1C16CF4
	0x03398A64 ADRP X0, 0xD5B000
	0x03398A68 LDR X0, [X0 + 0x6C0]
	0x03398A6C BL 0x1C16CF4
	0x03398A70 ADRP X0, 0xD93000
	0x03398A74 LDR X0, [X0 + 0x570]
	0x03398A78 BL 0x1C16CF4
	0x03398A7C MOVZ W8, 0x1
	0x03398A80 STRB W8, [X23 + 0xA8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD5C000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xD94000
	011 Move X0, [X0+1240]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.RuntimeTypeHandle GetTypeHandle(System.Object o)

Disassembly:
	0x03398A84 MOV X0, X20
	0x03398A88 MOV X1, X19
	0x03398A8C MOV X2, X22
	0x03398A90 MOV X3, X21
	0x03398A94 MOV X4, X31
	0x03398A98 BL 0x33B3620
	0x03398A9C ADRP X21, 0x1045000
	0x03398AA0 LDRB W8, [X21 + 0xA9]
	0x03398AA4 TBNZ X8, 0x0, 0x3398ABC
	0x03398AA8 ADRP X0, 0xD5D000
	0x03398AAC LDR X0, [X0 + 0x278]
	0x03398AB0 BL 0x1C16CF4
	0x03398AB4 MOVZ W8, 0x1
	0x03398AB8 STRB W8, [X21 + 0xA9]
	0x03398ABC ADRP X8, 0xD83000
	0x03398AC0 ADRP X9, 0xD5B000
	0x03398AC4 LDR X20, [X20 + 0x90]
	0x03398AC8 LDR X8, [X8 + 0xB60]
	0x03398ACC LDR X9, [X9 + 0x6C0]
	0x03398AD0 CBNZ X20, 0x3398AE8
	0x03398AD4 ADRP X10, 0xD5D000
	0x03398AD8 LDR X10, [X10 + 0x278]
	0x03398ADC LDR X10, [X10]
	0x03398AE0 LDR X10, [X10 + 0xB8]
	0x03398AE4 LDR X20, [X10]
	0x03398AE8 LDR X0, [X9]
	0x03398AEC LDR X21, [X8]
	0x03398AF0 LDR W9, [X0 + 0xE0]
	0x03398AF4 CBNZ W9, 0x3398AFC
	0x03398AF8 BL 0x1C16DFC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {15}
	005 Move X1, X31
	006 Call "il2cpp_vm_object_is_inst", X0
	007 Compare X0, 0
	008 JumpIfEqual {34}
	009 Move X8, [X0]
	010 Move X2, [X8+2040]
	011 Move X1, [X8+2048]
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 CallNoReturn X2
	015 Move X0, 0xD61000
	016 Move X0, [X0+1320]
	017 Call 0x1C17D08
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Move X0, 0xD90000
	021 Move X0, [X0+1104]
	022 Call 0x1C17D08
	023 Move X2, X0
	024 Move X0, X19
	025 Move X1, X31
	026 Move X3, X31
	027 Call ArgumentNullException..ctor, X0, X1, X2
	028 Move X0, 0xD94000
	029 Move X0, [X0+1248]
	030 Call 0x1C17D08
	031 Move X1, X0
	032 Move X0, X19
	033 Call 0x1C17DEC
	034 Call 0x1C17F20

Method: System.TypeCode GetTypeCode(System.Type type)

Disassembly:
	0x03398AFC MOV X0, X21
	0x03398B00 BL 0x338C698
	0x03398B04 CBZ X19, 0x3398B34
	0x03398B08 ADRP X8, 0xD93000
	0x03398B0C LDR X8, [X8 + 0x570]
	0x03398B10 MOV X3, X0
	0x03398B14 MOV X0, X19
	0x03398B18 MOV X2, X20
	0x03398B1C LDR X1, [X8]
	0x03398B20 LDP X20, X19, [X31 + 0x20]
	0x03398B24 LDP X22, X21, [X31 + 0x10]
	0x03398B28 MOV X4, X31
	0x03398B2C LDP X30, X23, [X31], #0x30
	0x03398B30 B 0x32A89BC
	0x03398B34 BL 0x1C16F20
	0x03398B38 STR X30, [X31 - 0x20]!
	0x03398B3C STP X20, X19, [X31 + 0x10]
	0x03398B40 ADRP X20, 0x1045000
	0x03398B44 LDRB W8, [X20 + 0xA9]
	0x03398B48 MOV X19, X0
	0x03398B4C TBNZ X8, 0x0, 0x3398B64
	0x03398B50 ADRP X0, 0xD5D000
	0x03398B54 LDR X0, [X0 + 0x278]
	0x03398B58 BL 0x1C16CF4
	0x03398B5C MOVZ W8, 0x1
	0x03398B60 STRB W8, [X20 + 0xA9]
	0x03398B64 LDR X0, [X19 + 0x90]
	0x03398B68 CBNZ X0, 0x3398B80
	0x03398B6C ADRP X8, 0xD5D000
	0x03398B70 LDR X8, [X8 + 0x278]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1046000
	006 Move X21, 0xD5C000
	007 Move W8, [X20+147]
	008 Move X21, [X21+1728]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD5C000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+147], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfEqual {34}
	023 Compare X19, 0
	024 JumpIfEqual {37}
	025 Move X8, [X19]
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X2, [X8+2056]
	030 Move X1, [X8+2064]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 CallNoReturn X2
	034 Call 0x1C17DFC
	035 Compare X19, 0
	036 JumpIfNotEqual {25}
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move W0, W31
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0

Method: System.TypeCode GetTypeCodeImpl()

Disassembly:
	0x03398B74 LDR X8, [X8]
	0x03398B78 LDR X8, [X8 + 0xB8]
	0x03398B7C LDR X0, [X8]
	0x03398B80 LDP X20, X19, [X31 + 0x10]
	0x03398B84 LDR X30, [X31], #0x20
	0x03398B88 RET
	0x03398B8C STP X30, X21, [X31 - 0x20]!
	0x03398B90 STP X20, X19, [X31 + 0x10]
	0x03398B94 ADRP X21, 0x1045000
	0x03398B98 LDRB W8, [X21 + 0xAA]
	0x03398B9C MOV X19, X1
	0x03398BA0 MOV X20, X0
	0x03398BA4 TBNZ X8, 0x0, 0x3398BBC
	0x03398BA8 ADRP X0, 0xD60000
	0x03398BAC LDR X0, [X0 + 0x658]
	0x03398BB0 BL 0x1C16CF4
	0x03398BB4 MOVZ W8, 0x1
	0x03398BB8 STRB W8, [X21 + 0xAA]
	0x03398BBC CBZ X19, 0x3398BF0
	0x03398BC0 ADRP X8, 0xD60000
	0x03398BC4 LDR X8, [X8 + 0x658]
	0x03398BC8 LDR X9, [X19]
	0x03398BCC LDR X8, [X8]
	0x03398BD0 CMP X9, X8
	0x03398BD4 B.NE 0x3398C00
	0x03398BD8 LDRH W20, [X20]
	0x03398BDC MOV X0, X19
	0x03398BE0 BL 0x1C16E08
	0x03398BE4 LDRH W8, [X0]
	0x03398BE8 SUB W0, W20, W8
	0x03398BEC B 0x3398BF4
	0x03398BF0 MOVZ W0, 0x1
	0x03398BF4 LDP X20, X19, [X31 + 0x10]
	0x03398BF8 LDP X30, X21, [X31], #0x20
	0x03398BFC RET
	0x03398C00 ADRP X0, 0xD63000
	0x03398C04 LDR X0, [X0 + 0x578]
	0x03398C08 BL 0x1C16D08
	0x03398C0C BL 0x1C16F10
	0x03398C10 MOV X19, X0
	0x03398C14 ADRP X0, 0xD93000
	0x03398C18 LDR X0, [X0 + 0x578]
	0x03398C1C BL 0x1C16D08
	0x03398C20 MOV X1, X0
	0x03398C24 MOV X0, X19
	0x03398C28 MOV X2, X31
	0x03398C2C BL 0x3314A68
	0x03398C30 ADRP X0, 0xD93000
	0x03398C34 LDR X0, [X0 + 0x580]
	0x03398C38 BL 0x1C16D08
	0x03398C3C MOV X1, X0
	0x03398C40 MOV X0, X19
	0x03398C44 BL 0x1C16DEC
	0x03398C48 LDRH W8, [X0]
	0x03398C4C SUB W0, W8, W1, UXTH
	0x03398C50 RET
	0x03398C54 STP X30, X21, [X31 - 0x20]!
	0x03398C58 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1046000
	006 Move X21, 0xD5C000
	007 Move W8, [X20+148]
	008 Move X21, [X21+1728]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD5C000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+148], W8
	019 Move X8, [X19]
	020 Move X0, X19
	021 Move X9, [X8+808]
	022 Move X1, [X8+816]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move X8, [X21]
	025 Move X20, X0
	026 Move W9, [X8+224]
	027 Compare W9, 0
	028 JumpIfNotEqual {31}
	029 Move X0, X8
	030 Call 0x1C17DFC
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X8, [X19]
	033 Move X0, X19
	034 Move X9, [X8+808]
	035 Move X1, [X8+816]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X8, [X21]
	038 Move X20, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfEqual {63}
	042 Compare X20, 0
	043 JumpIfEqual {67}
	044 Move X8, [X19]
	045 Move X0, X19
	046 Move X9, [X8+808]
	047 Move X1, [X8+816]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move X8, [X21]
	050 Move X19, X0
	051 Move W9, [X8+224]
	052 Compare W9, 0
	053 JumpIfNotEqual {56}
	054 Move X0, X8
	055 Call 0x1C17DFC
	056 Move X0, X19
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Call Type.GetTypeCode, X0
	062 Return X0
	063 Move X0, X8
	064 Call 0x1C17DFC
	065 Compare X20, 0
	066 JumpIfNotEqual {44}
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move W0, 1
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Return X0

Method: System.Type get_BaseType()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Object InvokeMember(System.String name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object target, System.Object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, System.String[] namedParameters)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Type GetInterface(System.String name)

Disassembly:
	0x03398C5C ADRP X21, 0x1045000
	0x03398C60 LDRB W8, [X21 + 0xAB]
	0x03398C64 MOV X19, X1
	0x03398C68 MOV X20, X0
	0x03398C6C TBNZ X8, 0x0, 0x3398C84

ISIL:
	001 Move X8, [X0]
	002 Move W2, W31
	003 Move X4, [X8+2120]
	004 Move X3, [X8+2128]
	005 CallNoReturn X4

Method: System.Type GetInterface(System.String name, System.Boolean ignoreCase)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Type[] GetInterfaces()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean IsInstanceOfType(System.Object o)

Disassembly:
	0x03398C70 ADRP X0, 0xD60000
	0x03398C74 LDR X0, [X0 + 0x658]
	0x03398C78 BL 0x1C16CF4
	0x03398C7C MOVZ W8, 0x1
	0x03398C80 STRB W8, [X21 + 0xAB]
	0x03398C84 CBZ X19, 0x3398CA0
	0x03398C88 ADRP X8, 0xD60000
	0x03398C8C LDR X8, [X8 + 0x658]
	0x03398C90 LDR X9, [X19]
	0x03398C94 LDR X8, [X8]
	0x03398C98 CMP X9, X8
	0x03398C9C B.EQ 0x3398CA8
	0x03398CA0 MOV W0, W31
	0x03398CA4 B 0x3398CC0
	0x03398CA8 LDRH W20, [X20]

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {17}
	003 Move [X31-16], X30
	004 Move [X31-8], X19
	005 Move X19, X0
	006 Move X0, X1
	007 Move X1, X31
	008 Call "il2cpp_vm_object_is_inst", X0
	009 Move X8, [X19]
	010 Move X1, X0
	011 Move X0, X19
	012 Move X3, [X8+680]
	013 Move X2, [X8+688]
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 CallNoReturn X3
	017 Move W0, W31
	018 Return X0

Method: System.Boolean IsEquivalentTo(System.Type other)

Disassembly:
	0x03398CAC MOV X0, X19
	0x03398CB0 BL 0x1C16E08
	0x03398CB4 LDRH W8, [X0]
	0x03398CB8 CMP W20, W8
	0x03398CBC CSET W0, EQ
	0x03398CC0 LDP X20, X19, [X31 + 0x10]
	0x03398CC4 LDP X30, X21, [X31], #0x20
	0x03398CC8 RET
	0x03398CCC LDRH W8, [X0]
	0x03398CD0 CMP W8, W1, UXTH
	0x03398CD4 CSET W0, EQ
	0x03398CD8 RET
	0x03398CDC LDRH W0, [X0]
	0x03398CE0 RET
	0x03398CE4 STR X30, [X31 - 0x30]!
	0x03398CE8 STP X22, X21, [X31 + 0x10]
	0x03398CEC STP X20, X19, [X31 + 0x20]
	0x03398CF0 ADRP X22, 0x1045000
	0x03398CF4 ADRP X20, 0xD8A000
	0x03398CF8 ADRP X21, 0xD90000
	0x03398CFC LDRB W8, [X22 + 0xAC]
	0x03398D00 LDR X20, [X20 + 0x1D8]
	0x03398D04 LDR X21, [X21 + 0x78]
	0x03398D08 MOV X19, X0
	0x03398D0C TBNZ X8, 0x0, 0x3398D30

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1046000
	007 Move X22, 0xD5C000
	008 Move W8, [X21+149]
	009 Move X22, [X22+1728]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD5C000
	017 Move X0, [X0+1728]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+149], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X30, [X31+48]
	033 Return X0

Method: System.Type GetEnumUnderlyingType()

Disassembly:
	0x03398D10 ADRP X0, 0xD90000
	0x03398D14 LDR X0, [X0 + 0x78]
	0x03398D18 BL 0x1C16CF4
	0x03398D1C ADRP X0, 0xD8A000
	0x03398D20 LDR X0, [X0 + 0x1D8]
	0x03398D24 BL 0x1C16CF4
	0x03398D28 MOVZ W8, 0x1
	0x03398D2C STRB W8, [X22 + 0xAC]
	0x03398D30 LDR X1, [X20]
	0x03398D34 LDRH W19, [X19]
	0x03398D38 MOV X0, X31
	0x03398D3C BL 0x25BF134
	0x03398D40 MOV X20, X0
	0x03398D44 LDR X0, [X21]
	0x03398D48 MOV X21, X1
	0x03398D4C LDR W8, [X0 + 0xE0]
	0x03398D50 CBNZ W8, 0x3398D58
	0x03398D54 BL 0x1C16DFC
	0x03398D58 MOV W0, W19
	0x03398D5C MOV X1, X20
	0x03398D60 MOV X2, X21
	0x03398D64 LDP X20, X19, [X31 + 0x20]
	0x03398D68 LDP X22, X21, [X31 + 0x10]
	0x03398D6C MOV X3, X31
	0x03398D70 MOV X4, X31
	0x03398D74 LDR X30, [X31], #0x30
	0x03398D78 B 0x337A230
	0x03398D7C STP X30, X23, [X31 - 0x30]!
	0x03398D80 STP X22, X21, [X31 + 0x10]
	0x03398D84 STP X20, X19, [X31 + 0x20]
	0x03398D88 ADRP X23, 0x1045000
	0x03398D8C ADRP X21, 0xD8A000
	0x03398D90 ADRP X22, 0xD90000
	0x03398D94 LDRB W8, [X23 + 0xAD]
	0x03398D98 LDR X21, [X21 + 0x1D8]
	0x03398D9C LDR X22, [X22 + 0x78]
	0x03398DA0 MOV X19, X1
	0x03398DA4 MOV X20, X0
	0x03398DA8 TBNZ X8, 0x0, 0x3398DCC
	0x03398DAC ADRP X0, 0xD90000
	0x03398DB0 LDR X0, [X0 + 0x78]
	0x03398DB4 BL 0x1C16CF4
	0x03398DB8 ADRP X0, 0xD8A000
	0x03398DBC LDR X0, [X0 + 0x1D8]
	0x03398DC0 BL 0x1C16CF4
	0x03398DC4 MOVZ W8, 0x1
	0x03398DC8 STRB W8, [X23 + 0xAD]
	0x03398DCC LDR X1, [X21]
	0x03398DD0 LDRH W20, [X20]
	0x03398DD4 MOV X0, X31
	0x03398DD8 BL 0x25BF134
	0x03398DDC MOV X21, X0
	0x03398DE0 LDR X0, [X22]
	0x03398DE4 MOV X22, X1
	0x03398DE8 LDR W8, [X0 + 0xE0]
	0x03398DEC CBNZ W8, 0x3398DF4
	0x03398DF0 BL 0x1C16DFC
	0x03398DF4 MOV W0, W20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Move X19, X0
	006 Move X9, [X8+1416]
	007 Move X1, [X8+1424]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {40}
	013 Move X8, [X19]
	014 Move W1, 52
	015 Move X0, X19
	016 Move X9, [X8+1672]
	017 Move X2, [X8+1680]
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Compare X0, 0
	020 JumpIfEqual {33}
	021 Move W8, [X0+24]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X0, [X0+32]
	024 Compare X0, 0
	025 JumpIfEqual {63}
	026 Move X8, [X0]
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X2, [X8+600]
	030 Move X1, [X8+608]
	031 Move X30, [X31+32]
	032 CallNoReturn X2
	033 Move X0, 0xD64000
	034 Move X0, [X0+1400]
	035 Call 0x1C17D08
	036 Call 0x1C17F10
	037 Move X19, X0
	038 Move X0, 0xD94000
	039 Move X0, [X0+1256]
	040 Move X0, 0xD64000
	041 Move X0, [X0+1400]
	042 Call 0x1C17D08
	043 Call 0x1C17F10
	044 Move X19, X0
	045 Move X0, 0xD94000
	046 Move X0, [X0+952]
	047 Call 0x1C17D08
	048 Move X20, X0
	049 Move X0, 0xD94000
	050 Move X0, [X0+960]
	051 Call 0x1C17D08
	052 Move X2, X0
	053 Move X0, X19
	054 Move X1, X20
	055 Move X3, X31
	056 Call ArgumentException..ctor, X0, X1, X2
	057 Move X0, 0xD94000
	058 Move X0, [X0+1264]
	059 Call 0x1C17D08
	060 Move X1, X0
	061 Move X0, X19
	062 Call 0x1C17DEC
	063 Call 0x1C17F20

Method: System.Array GetEnumValues()

Disassembly:
	0x03398DF8 MOV X1, X21
	0x03398DFC MOV X2, X22
	0x03398E00 MOV X3, X19
	0x03398E04 LDP X20, X19, [X31 + 0x20]
	0x03398E08 LDP X22, X21, [X31 + 0x10]
	0x03398E0C MOV X4, X31
	0x03398E10 LDP X30, X23, [X31], #0x30
	0x03398E14 B 0x337A230
	0x03398E18 STR X30, [X31 - 0x30]!
	0x03398E1C STP X22, X21, [X31 + 0x10]
	0x03398E20 STP X20, X19, [X31 + 0x20]
	0x03398E24 ADRP X21, 0x1045000
	0x03398E28 LDRB W8, [X21 + 0xAE]
	0x03398E2C MOV X20, X1
	0x03398E30 MOV X19, X0
	0x03398E34 TBNZ X8, 0x0, 0x3398E4C
	0x03398E38 ADRP X0, 0xD90000
	0x03398E3C LDR X0, [X0 + 0x78]
	0x03398E40 BL 0x1C16CF4
	0x03398E44 MOVZ W8, 0x1
	0x03398E48 STRB W8, [X21 + 0xAE]
	0x03398E4C ADRP X21, 0x1041000
	0x03398E50 LDRB W8, [X21 + 0x762]
	0x03398E54 LDRH W19, [X19]
	0x03398E58 CBNZ W8, 0x3398E70
	0x03398E5C ADRP X0, 0xD82000
	0x03398E60 LDR X0, [X0 + 0x290]
	0x03398E64 BL 0x1C16CF4
	0x03398E68 MOVZ W8, 0x1
	0x03398E6C STRB W8, [X21 + 0x762]
	0x03398E70 ADRP X22, 0xD90000
	0x03398E74 LDR X22, [X22 + 0x78]
	0x03398E78 CBZ X20, 0x3398E94

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Move X9, [X8+1416]
	006 Move X1, [X8+1424]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {14}
	012 Call NotImplemented.get_ByDesign
	013 Move X19, X0
	014 Move X0, 0xD64000
	015 Move X0, [X0+1400]
	016 Call 0x1C17D08
	017 Call 0x1C17F10
	018 Move X19, X0
	019 Move X0, 0xD94000
	020 Move X0, [X0+952]
	021 Call 0x1C17D08
	022 Move X20, X0
	023 Move X0, 0xD94000
	024 Move X0, [X0+960]
	025 Call 0x1C17D08
	026 Move X2, X0
	027 Move X0, X19
	028 Move X1, X20
	029 Move X3, X31
	030 Call ArgumentException..ctor, X0, X1, X2
	031 Move X0, 0xD94000
	032 Move X0, [X0+1272]
	033 Call 0x1C17D08
	034 Move X1, X0
	035 Move X0, X19
	036 Call 0x1C17DEC

Method: System.Type MakeArrayType()

Disassembly:
	0x03398E7C MOV X0, X20
	0x03398E80 MOV X1, X31
	0x03398E84 BL 0x3225708
	0x03398E88 LDR W20, [X20 + 0x10]
	0x03398E8C MOV X21, X0
	0x03398E90 B 0x3398E98
	0x03398E94 MOV X21, X31
	0x03398E98 LDR X0, [X22]
	0x03398E9C LDR W8, [X0 + 0xE0]
	0x03398EA0 CBNZ W8, 0x3398EA8
	0x03398EA4 BL 0x1C16DFC
	0x03398EA8 MOV W0, W19
	0x03398EAC MOV X1, X21
	0x03398EB0 MOV X2, X20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD5C000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xD94000
	011 Move X0, [X0+1280]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Type MakeArrayType(System.Int32 rank)

Disassembly:
	0x03398EB4 LDP X20, X19, [X31 + 0x20]
	0x03398EB8 LDP X22, X21, [X31 + 0x10]
	0x03398EBC MOV X3, X31
	0x03398EC0 MOV X4, X31
	0x03398EC4 LDR X30, [X31], #0x30
	0x03398EC8 B 0x337A230
	0x03398ECC STP X30, X23, [X31 - 0x30]!
	0x03398ED0 STP X22, X21, [X31 + 0x10]
	0x03398ED4 STP X20, X19, [X31 + 0x20]
	0x03398ED8 ADRP X22, 0x1045000
	0x03398EDC LDRB W8, [X22 + 0xAF]
	0x03398EE0 MOV X19, X2
	0x03398EE4 MOV X21, X1
	0x03398EE8 MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD5C000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xD94000
	011 Move X0, [X0+1288]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Type MakeByRefType()

Disassembly:
	0x03398EEC TBNZ X8, 0x0, 0x3398F04
	0x03398EF0 ADRP X0, 0xD90000
	0x03398EF4 LDR X0, [X0 + 0x78]
	0x03398EF8 BL 0x1C16CF4
	0x03398EFC MOVZ W8, 0x1
	0x03398F00 STRB W8, [X22 + 0xAF]
	0x03398F04 ADRP X22, 0x1041000
	0x03398F08 LDRB W8, [X22 + 0x762]
	0x03398F0C LDRH W20, [X20]
	0x03398F10 CBNZ W8, 0x3398F28
	0x03398F14 ADRP X0, 0xD82000
	0x03398F18 LDR X0, [X0 + 0x290]
	0x03398F1C BL 0x1C16CF4
	0x03398F20 MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD5C000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xD94000
	011 Move X0, [X0+1296]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Type MakeGenericType(System.Type[] typeArguments)

Disassembly:
	0x03398F24 STRB W8, [X22 + 0x762]
	0x03398F28 ADRP X23, 0xD90000
	0x03398F2C LDR X23, [X23 + 0x78]
	0x03398F30 CBZ X21, 0x3398F4C
	0x03398F34 MOV X0, X21
	0x03398F38 MOV X1, X31
	0x03398F3C BL 0x3225708
	0x03398F40 LDR W21, [X21 + 0x10]
	0x03398F44 MOV X22, X0
	0x03398F48 B 0x3398F50
	0x03398F4C MOV X22, X31
	0x03398F50 LDR X0, [X23]
	0x03398F54 LDR W8, [X0 + 0xE0]
	0x03398F58 CBNZ W8, 0x3398F60
	0x03398F5C BL 0x1C16DFC
	0x03398F60 MOV W0, W20
	0x03398F64 MOV X1, X22
	0x03398F68 MOV X2, X21
	0x03398F6C MOV X3, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD5C000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xD8E000
	009 Move X0, [X0+3368]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotSupportedException..ctor, X0, X1
	015 Move X0, 0xD94000
	016 Move X0, [X0+1304]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Type MakePointerType()

Disassembly:
	0x03398F70 LDP X20, X19, [X31 + 0x20]
	0x03398F74 LDP X22, X21, [X31 + 0x10]
	0x03398F78 MOV X4, X31
	0x03398F7C LDP X30, X23, [X31], #0x30
	0x03398F80 B 0x337A230
	0x03398F84 STP X30, X27, [X31 - 0x50]!
	0x03398F88 STP X26, X25, [X31 + 0x10]
	0x03398F8C STP X24, X23, [X31 + 0x20]
	0x03398F90 STP X22, X21, [X31 + 0x30]
	0x03398F94 STP X20, X19, [X31 + 0x40]
	0x03398F98 ADRP X27, 0x1045000
	0x03398F9C ADRP X26, 0xD90000
	0x03398FA0 LDRB W8, [X27 + 0xB0]
	0x03398FA4 LDR X26, [X26 + 0x78]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD5C000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xD94000
	011 Move X0, [X0+1312]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Type MakeGenericSignatureType(System.Type genericTypeDefinition, System.Type[] typeArguments)

Disassembly:
	0x03398FA8 MOV X20, X6
	0x03398FAC MOV X22, X5
	0x03398FB0 MOV X24, X4
	0x03398FB4 MOV X19, X3
	0x03398FB8 MOV X21, X2
	0x03398FBC MOV X23, X1
	0x03398FC0 MOV X25, X0
	0x03398FC4 TBNZ X8, 0x0, 0x3398FDC
	0x03398FC8 ADRP X0, 0xD90000
	0x03398FCC LDR X0, [X0 + 0x78]
	0x03398FD0 BL 0x1C16CF4
	0x03398FD4 MOVZ W8, 0x1
	0x03398FD8 STRB W8, [X27 + 0xB0]
	0x03398FDC LDR X0, [X26]
	0x03398FE0 LDRH W25, [X25]
	0x03398FE4 LDR W8, [X0 + 0xE0]
	0x03398FE8 CBNZ W8, 0x3398FF0
	0x03398FEC BL 0x1C16DFC
	0x03398FF0 MOV W0, W25
	0x03398FF4 MOV X1, X24
	0x03398FF8 MOV X2, X22
	0x03398FFC MOV X3, X20
	0x03399000 MOV X4, X23
	0x03399004 MOV X5, X21
	0x03399008 MOV X6, X19
	0x0339900C LDP X20, X19, [X31 + 0x40]
	0x03399010 LDP X22, X21, [X31 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1046000
	007 Move X22, 0xD94000
	008 Move W8, [X21+150]
	009 Move X22, [X22+1320]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD94000
	017 Move X0, [X0+1320]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+150], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X1, X20
	024 Move X2, X19
	025 Move X3, X31
	026 Move X21, X0
	027 Call SignatureConstructedGenericType..ctor, X0, X1, X2
	028 Move X0, X21
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Return X0

Method: System.String ToString()

Disassembly:
	0x03399014 LDP X24, X23, [X31 + 0x20]
	0x03399018 LDP X26, X25, [X31 + 0x10]
	0x0339901C MOV X7, X31
	0x03399020 LDP X30, X27, [X31], #0x50
	0x03399024 B 0x337A5A8
	0x03399028 STP X30, X21, [X31 - 0x20]!
	0x0339902C STP X20, X19, [X31 + 0x10]
	0x03399030 CBZ X0, 0x3399098
	0x03399034 ADRP X21, 0x1040000
	0x03399038 LDRB W8, [X21 + 0x762]
	0x0339903C MOV X19, X1
	0x03399040 MOV X20, X0
	0x03399044 CBNZ W8, 0x339905C
	0x03399048 ADRP X0, 0xD81000
	0x0339904C LDR X0, [X0 + 0x290]
	0x03399050 BL 0x1C16CF4
	0x03399054 MOVZ W8, 0x1
	0x03399058 STRB W8, [X21 + 0x762]
	0x0339905C MOV X0, X20
	0x03399060 MOV X1, X31
	0x03399064 BL 0x3225708
	0x03399068 LDR W20, [X20 + 0x10]
	0x0339906C MOV X21, X0
	0x03399070 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1045000
	006 Move X20, 0xD93000
	007 Move W8, [X21+151]
	008 Move X20, [X20+1328]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD93000
	015 Move X0, [X0+1328]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+151], W8
	019 Move X8, [X19]
	020 Move X0, X19
	021 Move X9, [X8+424]
	022 Move X1, [X8+432]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move X8, [X20]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X0
	028 Move X2, X31
	029 Move X0, X8
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call String.Concat, X0, X1
	033 Return X0

Method: System.Boolean Equals(System.Object o)

Disassembly:
	0x03399074 MOV X1, X31
	0x03399078 BL 0x333ACEC
	0x0339907C MOV X1, X20
	0x03399080 LDP X20, X19, [X31 + 0x10]
	0x03399084 MOVZ W2, 0x7
	0x03399088 MOV X3, X0
	0x0339908C MOV X0, X21
	0x03399090 LDP X30, X21, [X31], #0x20
	0x03399094 B 0x33990A0
	0x03399098 MOVZ W0, 0x30
	0x0339909C BL 0x338F3E0
	0x033990A0 STR X30, [X31 - 0x40]!
	0x033990A4 STP X24, X23, [X31 + 0x10]
	0x033990A8 STP X22, X21, [X31 + 0x20]
	0x033990AC STP X20, X19, [X31 + 0x30]
	0x033990B0 ADRP X23, 0x1044000
	0x033990B4 ADRP X24, 0xD8F000
	0x033990B8 LDRB W8, [X23 + 0xB1]
	0x033990BC LDR X24, [X24 + 0x78]
	0x033990C0 MOV X19, X3
	0x033990C4 MOV W20, W2
	0x033990C8 MOV X21, X1
	0x033990CC MOV X22, X0
	0x033990D0 TBNZ X8, 0x0, 0x33990E8
	0x033990D4 ADRP X0, 0xD8F000
	0x033990D8 LDR X0, [X0 + 0x78]
	0x033990DC BL 0x1C16CF4
	0x033990E0 MOVZ W8, 0x1
	0x033990E4 STRB W8, [X23 + 0xB1]
	0x033990E8 LDR X0, [X24]
	0x033990EC LDR W8, [X0 + 0xE0]
	0x033990F0 CBNZ W8, 0x33990F8
	0x033990F4 BL 0x1C16DFC
	0x033990F8 MOV X0, X22
	0x033990FC MOV X1, X21
	0x03399100 MOV W2, W20
	0x03399104 MOV X3, X19
	0x03399108 MOV X4, X31
	0x0339910C BL 0x3388948

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1045000
	006 Move W8, [X21+152]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD5B000
	014 Move X0, [X0+1728]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+152], W8
	018 Compare X20, 0
	019 JumpIfEqual {28}
	020 Move X8, 0xD5B000
	021 Move X8, [X8+1728]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X1, X31
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move W0, W31
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0
	034 Move X9, [X9+200]
	035 Add X9, X9, X10
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSEL not yet implemented."
	039 Move X8, [X19]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X3, [X8+2296]
	044 Move X2, [X8+2304]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 CallNoReturn X3

Method: System.Int32 GetHashCode()

Disassembly:
	0x03399110 CMP W0, 0x10000
	0x03399114 B.CS 0x339912C
	0x03399118 LDP X20, X19, [X31 + 0x30]
	0x0339911C LDP X22, X21, [X31 + 0x20]
	0x03399120 LDP X24, X23, [X31 + 0x10]
	0x03399124 LDR X30, [X31], #0x40
	0x03399128 RET
	0x0339912C ADRP X0, 0xD5A000
	0x03399130 LDR X0, [X0 + 0x858]
	0x03399134 BL 0x1C16D08
	0x03399138 BL 0x1C16F10
	0x0339913C MOV X19, X0
	0x03399140 ADRP X0, 0xD8F000
	0x03399144 LDR X0, [X0 + 0x1C0]
	0x03399148 BL 0x1C16D08
	0x0339914C MOV X1, X0
	0x03399150 MOV X0, X19
	0x03399154 BL 0x338CB50

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+808]
	006 Move X1, [X8+816]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Compare X0, 0
	010 JumpIfEqual {23}
	011 Move X8, [X0]
	012 Move X2, [X8+344]
	013 Move X1, [X8+352]
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 CallNoReturn X2
	017 Move X0, X19
	018 Move X1, X31
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Call MemberInfo.GetHashCode, X0
	022 Return X0
	023 Call 0x1C17F20

Method: System.Boolean Equals(System.Type o)

Disassembly:
	0x03399158 ADRP X0, 0xD92000
	0x0339915C LDR X0, [X0 + 0x588]
	0x03399160 BL 0x1C16D08
	0x03399164 MOV X1, X0
	0x03399168 MOV X0, X19
	0x0339916C BL 0x1C16DEC
	0x03399170 B 0x3399174
	0x03399174 MOV X19, X0
	0x03399178 CMP W1, 0x1
	0x0339917C B.NE 0x3399220
	0x03399180 MOV X0, X19
	0x03399184 BL 0x3EB1AD0
	0x03399188 MOV X19, X0
	0x0339918C ADRP X0, 0xD5A000
	0x03399190 LDR X0, [X0 + 0x858]
	0x03399194 BL 0x1C16D08
	0x03399198 LDR X8, [X19]
	0x0339919C LDR X1, [X8]
	0x033991A0 BL 0x1C17270
	0x033991A4 TBZ X0, 0x0, 0x33991F8
	0x033991A8 LDR X19, [X19]
	0x033991AC BL 0x3EB1AE0
	0x033991B0 ADRP X0, 0xD5A000
	0x033991B4 LDR X0, [X0 + 0x858]
	0x033991B8 BL 0x1C16D08
	0x033991BC BL 0x1C16F10
	0x033991C0 MOV X20, X0
	0x033991C4 ADRP X0, 0xD8F000
	0x033991C8 LDR X0, [X0 + 0x1C0]
	0x033991CC BL 0x1C16D08
	0x033991D0 MOV X1, X0
	0x033991D4 MOV X0, X20
	0x033991D8 MOV X2, X19
	0x033991DC BL 0x338CB74
	0x033991E0 ADRP X0, 0xD92000
	0x033991E4 LDR X0, [X0 + 0x588]
	0x033991E8 BL 0x1C16D08
	0x033991EC MOV X1, X0
	0x033991F0 MOV X0, X20
	0x033991F4 BL 0x1C16DEC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1045000
	007 Move X22, 0xD5B000
	008 Move W8, [X21+153]
	009 Move X22, [X22+1728]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD5B000
	017 Move X0, [X0+1728]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+153], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfEqual {40}
	025 Compare X19, 0
	026 JumpIfEqual {43}
	027 Move X8, [X20]
	028 Move X0, X20
	029 Move X9, [X8+808]
	030 Move X1, [X8+816]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X8, [X19]
	033 Move X20, X0
	034 Move X0, X19
	035 Move X9, [X8+808]
	036 Move X1, [X8+816]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 Call 0x1C17DFC
	041 Compare X19, 0
	042 JumpIfNotEqual {27}
	043 Move W0, W31
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Return X0

Method: System.Reflection.Binder get_DefaultBinder()

Disassembly:
	0x033991F8 MOVZ W0, 0x8
	0x033991FC BL 0x3EB1AF0
	0x03399200 LDR X8, [X19]
	0x03399204 STR X8, [X0]
	0x03399208 ADRP X1, 0xB1B000
	0x0339920C ADD X1, X1, 0xE58
	0x03399210 MOV X2, X31
	0x03399214 BL 0x3EB1B00
	0x03399218 MOV X19, X0
	0x0339921C BL 0x3EB1AE0
	0x03399220 MOV X0, X19
	0x03399224 BL 0x1D2C690
	0x03399228 BL 0x1990590
	0x0339922C STR X30, [X31 - 0x30]!
	0x03399230 STP X22, X21, [X31 + 0x10]
	0x03399234 STP X20, X19, [X31 + 0x20]
	0x03399238 MOV W19, W1
	0x0339923C MOV X21, X0
	0x03399240 MOV W0, W1
	0x03399244 MOV X1, X31
	0x03399248 MOV X20, X2
	0x0339924C BL 0x333B33C
	0x03399250 CBZ X21, 0x33992B4
	0x03399254 ADRP X22, 0x1040000
	0x03399258 LDRB W8, [X22 + 0x762]
	0x0339925C CBNZ W8, 0x3399274
	0x03399260 ADRP X0, 0xD81000
	0x03399264 LDR X0, [X0 + 0x290]
	0x03399268 BL 0x1C16CF4
	0x0339926C MOVZ W8, 0x1
	0x03399270 STRB W8, [X22 + 0x762]
	0x03399274 MOV X0, X21
	0x03399278 MOV X1, X31
	0x0339927C BL 0x3225708
	0x03399280 LDR W21, [X21 + 0x10]
	0x03399284 MOV X22, X0
	0x03399288 MOV X0, X20
	0x0339928C MOV X1, X31
	0x03399290 BL 0x333ACEC
	0x03399294 MOV X3, X0
	0x03399298 MOV X0, X22
	0x0339929C MOV X1, X21
	0x033992A0 MOV W2, W19
	0x033992A4 LDP X20, X19, [X31 + 0x20]
	0x033992A8 LDP X22, X21, [X31 + 0x10]
	0x033992AC LDR X30, [X31], #0x30
	0x033992B0 B 0x33990A0
	0x033992B4 MOVZ W0, 0x30
	0x033992B8 BL 0x338F3E0
	0x033992BC STP X30, X21, [X31 - 0x20]!
	0x033992C0 STP X20, X19, [X31 + 0x10]
	0x033992C4 MOV X19, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1045000
	005 Move X20, 0xD5B000
	006 Move W8, [X19+154]
	007 Move X20, [X20+1728]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xD93000
	013 Move X0, [X0+1336]
	014 Call 0x1C17CF4
	015 Move X0, 0xD5B000
	016 Move X0, [X0+1728]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+154], W8
	020 Move X0, [X20]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X20]
	026 Move X8, [X0+184]
	027 Move X19, [X8]
	028 Call 0x1C17D44
	029 Compare X19, 0
	030 JumpIfNotEqual {48}
	031 Move X8, 0xD93000
	032 Move X8, [X8+1336]
	033 Move X0, [X8]
	034 Call 0x1C17F10
	035 Move X1, X31
	036 Move X19, X0
	037 Call DefaultBinder..ctor, X0
	038 Move X0, [X20]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X20]
	044 Move X0, [X0+184]
	045 Move X1, X19
	046 Move X2, X31
	047 Call 0x1C25138
	048 Move X0, [X20]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X20]
	054 Move X8, [X0+184]
	055 Move X19, [X8]
	056 Call 0x1C17D44
	057 Move X0, X19
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Return X0

Method: System.Type GetTypeFromHandle(System.RuntimeTypeHandle handle)

Disassembly:
	0x0338D698 MOV X2, X22
	0x0338D69C BL 0x338D8E8
	0x0338D6A0 LDR W8, [X31 + 0xC]
	0x0338D6A4 CMP W8, W25
	0x0338D6A8 B.EQ 0x338D794
	0x0338D6AC TBZ X19, 0xC, 0x338D6B8
	0x0338D6B0 CMP W8, W22
	0x0338D6B4 B.LT 0x338D7B4
	0x0338D6B8 STR W8, [X21]
	0x0338D6BC TBNZ X19, 0xA, 0x338D704
	0x0338D6C0 TBNZ X19, 0xB, 0x338D72C
	0x0338D6C4 MOVZ W8, 0x80000000
	0x0338D6C8 CMP W0, W8
	0x0338D6CC CSET W8, NE
	0x0338D6D0 TBNZ X19, 0x9, 0x338D734
	0x0338D6D4 CMP W20, 0xA
	0x0338D6D8 B.NE 0x338D734
	0x0338D6DC ORR W8, W27, W8, 0x0
	0x0338D6E0 CBNZ W8, 0x338D734
	0x0338D6E4 ADRP X0, 0xD66000
	0x0338D6E8 LDR X0, [X0 + 0x858]
	0x0338D6EC BL 0x1C16D08
	0x0338D6F0 BL 0x1C16F10
	0x0338D6F4 MOV X19, X0
	0x0338D6F8 ADRP X0, 0xD9B000
	0x0338D6FC LDR X0, [X0 + 0x1D0]
	0x0338D700 B 0x338D8C0
	0x0338D704 CMP W0, 0x100
	0x0338D708 B.CC 0x338D734
	0x0338D70C ADRP X0, 0xD66000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1051000
	005 Move W8, [X20+155]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD67000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+155], W8
	016 Move X0, X19
	017 Move X1, X31
	018 Move X2, X31
	019 Call IntPtr.op_Equality, X0, X1
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {29}
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, X31
	027 Move X30, [X31+32]
	028 Return X0
	029 Move X8, 0xD67000
	030 Move X8, [X8+1728]
	031 Move X0, [X8]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Call 0x1C189F4
	041 Return X0

Method: System.Type internal_from_handle(System.IntPtr handle)

Disassembly:
	0x033992C8 CBZ X0, 0x339932C

ISIL:
	001 Call 0x1C189F4
	002 Return X0

Method: System.Boolean get_IsSzArray()

Disassembly:
	0x033992CC ADRP X21, 0x1040000
	0x033992D0 LDRB W8, [X21 + 0x762]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.String FormatTypeName()

Disassembly:
	0x033992D4 MOV X20, X0
	0x033992D8 CBNZ W8, 0x33992F0
	0x033992DC ADRP X0, 0xD81000
	0x033992E0 LDR X0, [X0 + 0x290]
	0x033992E4 BL 0x1C16CF4

ISIL:
	001 Move X8, [X0]
	002 Move W1, W31
	003 Move X3, [X8+2328]
	004 Move X2, [X8+2336]
	005 CallNoReturn X3

Method: System.String FormatTypeName(System.Boolean serialization)

Disassembly:
	0x033992E8 MOVZ W8, 0x1
	0x033992EC STRB W8, [X21 + 0x762]
	0x033992F0 MOV X0, X20
	0x033992F4 MOV X1, X31
	0x033992F8 BL 0x3225708
	0x033992FC LDR W20, [X20 + 0x10]
	0x03399300 MOV X21, X0
	0x03399304 MOV X0, X31
	0x03399308 BL 0x333AE98
	0x0339930C MOV X1, X20
	0x03399310 MOV X4, X19
	0x03399314 LDP X20, X19, [X31 + 0x10]
	0x03399318 MOVZ W2, 0x7
	0x0339931C MOV X3, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD64000
	004 Move X0, [X0+1880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotImplementedException..ctor, X0
	010 Move X0, 0xD93000
	011 Move X0, [X0+1344]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Boolean get_IsInterface()

Disassembly:
	0x033972E8 STP X22, X21, [X31 + 0x10]
	0x033972EC STP X20, X19, [X31 + 0x20]
	0x033972F0 ADRP X22, 0x1046000
	0x033972F4 ADRP X20, 0xD8C000
	0x033972F8 ADRP X21, 0xD5C000
	0x033972FC LDRB W8, [X22 + 0x8E]
	0x03397300 LDR X20, [X20 + 0xE00]
	0x03397304 LDR X21, [X21 + 0x6C0]
	0x03397308 MOV X19, X0
	0x0339730C TBNZ X8, 0x0, 0x3397330
	0x03397310 ADRP X0, 0xD8C000
	0x03397314 LDR X0, [X0 + 0xE00]
	0x03397318 BL 0x1C16CF4
	0x0339731C ADRP X0, 0xD5C000
	0x03397320 LDR X0, [X0 + 0x6C0]
	0x03397324 BL 0x1C16CF4
	0x03397328 MOVZ W8, 0x1
	0x0339732C STRB W8, [X22 + 0x8E]
	0x03397330 LDR X0, [X21]
	0x03397334 LDR X20, [X20]
	0x03397338 LDR W8, [X0 + 0xE0]
	0x0339733C CBNZ W8, 0x3397344
	0x03397340 BL 0x1C16DFC
	0x03397344 MOV X0, X20
	0x03397348 BL 0x338C698
	0x0339734C CBZ X0, 0x3397370
	0x03397350 LDR X8, [X0]
	0x03397354 MOV X1, X19
	0x03397358 LDP X20, X19, [X31 + 0x20]
	0x0339735C LDP X22, X21, [X31 + 0x10]
	0x03397360 LDR X3, [X8 + 0x2A8]
	0x03397364 LDR X2, [X8 + 0x2B0]
	0x03397368 LDR X30, [X31], #0x30
	0x0339736C BR X3
	0x03397370 BL 0x1C16F20
	0x03397374 LDR X8, [X0]
	0x03397378 LDR X2, [X8 + 0x5C8]
	0x0339737C LDR X1, [X8 + 0x5D0]
	0x03397380 BR X2
	0x03397384 STR X30, [X31 - 0x30]!
	0x03397388 STP X22, X21, [X31 + 0x10]
	0x0339738C STP X20, X19, [X31 + 0x20]
	0x03397390 ADRP X22, 0x1046000
	0x03397394 ADRP X20, 0xD94000
	0x03397398 ADRP X21, 0xD5C000
	0x0339739C LDRB W8, [X22 + 0x8F]
	0x033973A0 LDR X20, [X20 + 0x488]
	0x033973A4 LDR X21, [X21 + 0x6C0]
	0x033973A8 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1047000
	006 Move X21, 0xD86000
	007 Move W8, [X20+156]
	008 Move X21, [X21+1256]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD86000
	015 Move X0, [X0+1256]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+156], W8
	019 Move X0, [X21]
	020 Compare X19, 0
	021 JumpIfEqual {26}
	022 Move X8, [X19]
	023 Move W9, [X0+304]
	024 Move W10, [X8+304]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X20, X31
	027 Move X8, [X8+200]
	028 Add X8, X8, X9
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X20
	037 Move X1, X31
	038 Move X2, X31
	039 Call RuntimeType.op_Inequality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {52}
	044 Move X0, X20
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X1, X31
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call RuntimeTypeHandle.IsInterface, X0
	051 Return X0
	052 Move X8, [X19]
	053 Move X0, X19
	054 Move X9, [X8+1208]
	055 Move X1, [X8+1216]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move W0, W0
	060 ShiftRight W0, 5
	061 And W0, W0, 31
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Return X0

Method: System.Type GetType(System.String typeName, System.Boolean throwOnError, System.Boolean ignoreCase)

Disassembly:
	0x03399320 MOV X0, X21
	0x03399324 LDP X30, X21, [X31], #0x20
	0x03399328 B 0x339933C
	0x0339932C STRH W31, [X19]
	0x03399330 LDP X20, X19, [X31 + 0x10]
	0x03399334 LDP X30, X21, [X31], #0x20
	0x03399338 RET
	0x0339933C SUB X31, X31, 0x50
	0x03399340 STP X30, X25, [X31 + 0x10]
	0x03399344 STP X24, X23, [X31 + 0x20]
	0x03399348 STP X22, X21, [X31 + 0x30]
	0x0339934C STP X20, X19, [X31 + 0x40]
	0x03399350 ADRP X25, 0x1044000
	0x03399354 ADRP X24, 0xD8F000
	0x03399358 LDRB W8, [X25 + 0xB2]
	0x0339935C LDR X24, [X24 + 0x78]
	0x03399360 MOV X19, X4
	0x03399364 MOV X20, X3
	0x03399368 MOV W21, W2
	0x0339936C MOV X22, X1
	0x03399370 MOV X23, X0
	0x03399374 TBNZ X8, 0x0, 0x339938C
	0x03399378 ADRP X0, 0xD8F000
	0x0339937C LDR X0, [X0 + 0x78]
	0x03399380 BL 0x1C16CF4
	0x03399384 MOVZ W8, 0x1
	0x03399388 STRB W8, [X25 + 0xB2]
	0x0339938C STR W31, [X31 + 0xC]
	0x03399390 STRH W31, [X19]
	0x03399394 LDR X0, [X24]
	0x03399398 LDR W8, [X0 + 0xE0]
	0x0339939C CBNZ W8, 0x33993A4
	0x033993A0 BL 0x1C16DFC
	0x033993A4 ADD X4, X31, 0xC
	0x033993A8 MOV X0, X23

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x1045000
	009 Move X22, 0xD84000
	010 Move W8, [X23+157]
	011 Move X22, [X22+1256]
	012 Move W20, W2
	013 Move W21, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xD84000
	020 Move X0, [X0+1256]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+157], W8
	024 Move X0, [X22]
	025 Move W8, 1
	026 Move [X31+12], W8
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 And W1, W21, 1
	032 And W2, W20, 1
	033 Add X4, X31, 12
	034 Move X0, X19
	035 Move W3, W31
	036 Move X5, X31
	037 Call RuntimeType.GetType, X0, X1, X2, X3, X4
	038 Move X20, [X31+48]
	039 Move X19, [X31+56]
	040 Move X22, [X31+32]
	041 Move X21, [X31+40]
	042 Move X30, [X31+16]
	043 Move X23, [X31+24]
	044 Add X31, X31, 64
	045 Return X0

Method: System.Type GetType(System.String typeName, System.Boolean throwOnError)

Disassembly:
	0x033993AC MOV X1, X22
	0x033993B0 MOV W2, W21
	0x033993B4 MOV X3, X20
	0x033993B8 MOV X5, X31
	0x033993BC BL 0x338A1E8
	0x033993C0 TBZ X0, 0x0, 0x33993DC
	0x033993C4 LDR W8, [X31 + 0xC]
	0x033993C8 UBFM W9, W8, 0x10, 0x1F
	0x033993CC CBNZ W9, 0x33993DC
	0x033993D0 MOVZ W0, 0x1
	0x033993D4 STRH W8, [X19]
	0x033993D8 B 0x33993E0
	0x033993DC MOV W0, W31
	0x033993E0 LDP X20, X19, [X31 + 0x40]
	0x033993E4 LDP X22, X21, [X31 + 0x30]
	0x033993E8 LDP X24, X23, [X31 + 0x20]
	0x033993EC LDP X30, X25, [X31 + 0x10]
	0x033993F0 ADD X31, X31, 0x50
	0x033993F4 RET
	0x033993F8 MOVZ W0, 0x8
	0x033993FC RET
	0x03399400 STP X30, X21, [X31 - 0x20]!
	0x03399404 STP X20, X19, [X31 + 0x10]
	0x03399408 ADRP X21, 0x1044000
	0x0339940C ADRP X20, 0xD63000
	0x03399410 LDRB W8, [X21 + 0xB3]
	0x03399414 LDR X20, [X20 + 0x9E8]
	0x03399418 MOV X19, X0
	0x0339941C TBNZ X8, 0x0, 0x3399434
	0x03399420 ADRP X0, 0xD63000
	0x03399424 LDR X0, [X0 + 0x9E8]
	0x03399428 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1045000
	007 Move X21, 0xD84000
	008 Move W8, [X22+158]
	009 Move X21, [X21+1256]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD84000
	017 Move X0, [X0+1256]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+158], W8
	021 Move X0, [X21]
	022 Move W8, 1
	023 Move [X31+12], W8
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 And W1, W20, 1
	029 Add X4, X31, 12
	030 Move X0, X19
	031 Move W2, W31
	032 Move W3, W31
	033 Move X5, X31
	034 Call RuntimeType.GetType, X0, X1, X2, X3, X4
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return X0

Method: System.Type GetType(System.String typeName)

Disassembly:
	0x0339942C MOVZ W8, 0x1
	0x03399430 STRB W8, [X21 + 0xB3]
	0x03399434 LDR X0, [X20]
	0x03399438 LDRH W19, [X19]
	0x0339943C LDR W8, [X0 + 0xE0]
	0x03399440 CBNZ W8, 0x3399448
	0x03399444 BL 0x1C16DFC
	0x03399448 MOV W0, W19
	0x0339944C LDP X20, X19, [X31 + 0x10]
	0x03399450 MOV X1, X31
	0x03399454 LDP X30, X21, [X31], #0x20
	0x03399458 B 0x331E450
	0x0339945C STP X30, X21, [X31 - 0x20]!
	0x03399460 STP X20, X19, [X31 + 0x10]
	0x03399464 ADRP X21, 0x1044000
	0x03399468 ADRP X20, 0xD63000
	0x0339946C LDRB W8, [X21 + 0xB4]
	0x03399470 LDR X20, [X20 + 0x9E8]
	0x03399474 MOV X19, X0
	0x03399478 TBNZ X8, 0x0, 0x3399490
	0x0339947C ADRP X0, 0xD63000
	0x03399480 LDR X0, [X0 + 0x9E8]
	0x03399484 BL 0x1C16CF4
	0x03399488 MOVZ W8, 0x1
	0x0339948C STRB W8, [X21 + 0xB4]
	0x03399490 LDR X0, [X20]
	0x03399494 LDRH W19, [X19]
	0x03399498 LDR W8, [X0 + 0xE0]
	0x0339949C CBNZ W8, 0x33994A4
	0x033994A0 BL 0x1C16DFC
	0x033994A4 MOV W0, W19

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1045000
	007 Move X20, 0xD84000
	008 Move W8, [X21+159]
	009 Move X20, [X20+1256]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD84000
	016 Move X0, [X0+1256]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+159], W8
	020 Move X0, [X20]
	021 Move W8, 1
	022 Move [X31+12], W8
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Add X4, X31, 12
	028 Move X0, X19
	029 Move W1, W31
	030 Move W2, W31
	031 Move W3, W31
	032 Move X5, X31
	033 Call RuntimeType.GetType, X0, X1, X2, X3, X4
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X30, [X31+16]
	037 Move X21, [X31+24]
	038 Add X31, X31, 48
	039 Return X0

Method: System.Type GetType(System.String typeName, System.Func`2<System.Reflection.AssemblyName, System.Reflection.Assembly> assemblyResolver, System.Func`4<System.Reflection.Assembly, System.String, System.Boolean, System.Type> typeResolver, System.Boolean throwOnError)

Disassembly:
	0x033994A8 LDP X20, X19, [X31 + 0x10]
	0x033994AC MOV X1, X31
	0x033994B0 LDP X30, X21, [X31], #0x20
	0x033994B4 B 0x331E888
	0x033994B8 STP X30, X21, [X31 - 0x20]!
	0x033994BC STP X20, X19, [X31 + 0x10]
	0x033994C0 ADRP X21, 0x1044000
	0x033994C4 ADRP X20, 0xD63000
	0x033994C8 LDRB W8, [X21 + 0xB5]
	0x033994CC LDR X20, [X20 + 0x9E8]

ISIL:
	001 Move [X31-16], X30
	002 Move W8, 1
	003 And W3, W3, 1
	004 Add X5, X31, 12
	005 Move W4, W31
	006 Move X6, X31
	007 Move [X31+12], W8
	008 Call TypeNameParser.GetType, X0, X1, X2, X3, X4, X5
	009 Move X30, [X31+16]
	010 Return X0

Method: System.Boolean op_Equality(System.Type left, System.Type right)

Disassembly:
	0x03396194 CBNZ W8, 0x339619C
	0x03396198 BL 0x1C16DFC
	0x0339619C CMP X20, X19

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Boolean op_Inequality(System.Type left, System.Type right)

Disassembly:
	0x03396F0C MOV X0, X19
	0x03396F10 MOV X2, X31
	0x03396F14 BL 0x3379A44

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.String get_FullNameOrDefault()

Disassembly:
	0x033994D0 MOV X19, X0
	0x033994D4 TBNZ X8, 0x0, 0x33994EC
	0x033994D8 ADRP X0, 0xD63000
	0x033994DC LDR X0, [X0 + 0x9E8]
	0x033994E0 BL 0x1C16CF4
	0x033994E4 MOVZ W8, 0x1
	0x033994E8 STRB W8, [X21 + 0xB5]
	0x033994EC LDR X0, [X20]
	0x033994F0 LDRH W19, [X19]
	0x033994F4 LDR W8, [X0 + 0xE0]
	0x033994F8 CBNZ W8, 0x3399500
	0x033994FC BL 0x1C16DFC
	0x03399500 MOV W0, W19
	0x03399504 LDP X20, X19, [X31 + 0x10]
	0x03399508 MOV X1, X31
	0x0339950C LDP X30, X21, [X31], #0x20
	0x03399510 B 0x331ED34
	0x03399514 STP X30, X21, [X31 - 0x20]!
	0x03399518 STP X20, X19, [X31 + 0x10]
	0x0339951C ADRP X21, 0x1044000
	0x03399520 ADRP X20, 0xD63000
	0x03399524 LDRB W8, [X21 + 0xB6]
	0x03399528 LDR X20, [X20 + 0x9E8]
	0x0339952C MOV X19, X0
	0x03399530 TBNZ X8, 0x0, 0x3399548
	0x03399534 ADRP X0, 0xD63000
	0x03399538 LDR X0, [X0 + 0x9E8]
	0x0339953C BL 0x1C16CF4
	0x03399540 MOVZ W8, 0x1
	0x03399544 STRB W8, [X21 + 0xB6]
	0x03399548 LDR X0, [X20]
	0x0339954C LDRH W19, [X19]
	0x03399550 LDR W8, [X0 + 0xE0]
	0x03399554 CBNZ W8, 0x339955C
	0x03399558 BL 0x1C16DFC
	0x0339955C MOV W0, W19
	0x03399560 LDP X20, X19, [X31 + 0x10]
	0x03399564 MOV X1, X31
	0x03399568 LDP X30, X21, [X31], #0x20
	0x0339956C B 0x331F3D8
	0x03399570 STP X30, X21, [X31 - 0x20]!
	0x03399574 STP X20, X19, [X31 + 0x10]
	0x03399578 ADRP X21, 0x1044000
	0x0339957C ADRP X20, 0xD63000
	0x03399580 LDRB W8, [X21 + 0xB7]
	0x03399584 LDR X20, [X20 + 0x9E8]
	0x03399588 MOV X19, X0
	0x0339958C TBNZ X8, 0x0, 0x33995A4
	0x03399590 ADRP X0, 0xD63000
	0x03399594 LDR X0, [X0 + 0x9E8]
	0x03399598 BL 0x1C16CF4
	0x0339959C MOVZ W8, 0x1
	0x033995A0 STRB W8, [X21 + 0xB7]
	0x033995A4 LDR X0, [X20]
	0x033995A8 LDRH W19, [X19]
	0x033995AC LDR W8, [X0 + 0xE0]
	0x033995B0 CBNZ W8, 0x33995B8
	0x033995B4 BL 0x1C16DFC
	0x033995B8 MOV W0, W19
	0x033995BC LDP X20, X19, [X31 + 0x10]
	0x033995C0 MOV X1, X31
	0x033995C4 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1045000
	005 Move W8, [X20+160]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD93000
	012 Move X0, [X0+1352]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+160], W8
	016 Move [X31+8], X31
	017 Move X8, [X19]
	018 Add X1, X31, 8
	019 Move X0, X19
	020 Move X9, [X8+2360]
	021 Move X2, [X8+2368]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Compare X0, 0
	024 JumpIfEqual {30}
	025 Move X8, [X19]
	026 Move X1, [X8+752]
	027 Move X9, [X8+744]
	028 Move X0, X19
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move X8, 0xD93000
	031 Move X8, [X8+1352]
	032 Move X0, [X8]
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X19, X0
	039 Move X0, X19
	040 Call 0x3EB2AD0
	041 Move X19, X0
	042 Move X0, 0xD89000
	043 Move X0, [X0+4040]
	044 Call 0x1C17D08
	045 Move X8, [X19]
	046 Move X1, [X8]
	047 Call 0x1C18270
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {56}
	052 Call 0x3EB2AE0
	053 Move X0, 0xD93000
	054 Move X0, [X0+1352]
	055 Call 0x1C17D08
	056 Move W0, 8
	057 Call 0x3EB2AF0
	058 Move X8, [X19]
	059 Move [X0], X8
	060 Move X1, 0xB1C000
	061 Add X1, X1, 3672
	062 Move X2, X31
	063 Call 0x3EB2B00
	064 Move X19, X0
	065 Call 0x3EB2AE0
	066 Move X0, X19
	067 Call 0x1D2D690
	068 Call 0x1991590

Method: System.Boolean IsRuntimeImplemented()

Disassembly:
	0x03396E80 LDR X8, [X19 + 0x38]
	0x03396E84 LDR X0, [X8 + 0x10]
	0x03396E88 LDRB W8, [X0 + 0x135]
	0x03396E8C TBNZ X8, 0x0, 0x3396E94
	0x03396E90 BL 0x1C5C684
	0x03396E94 LDR W8, [X0 + 0xE0]
	0x03396E98 CBNZ W8, 0x3396EA0
	0x03396E9C BL 0x1C16DFC
	0x03396EA0 LDR X8, [X19 + 0x38]
	0x03396EA4 LDR X0, [X8 + 0x10]
	0x03396EA8 LDRB W8, [X0 + 0x135]
	0x03396EAC TBNZ X8, 0x0, 0x3396EB4
	0x03396EB0 BL 0x1C5C684
	0x03396EB4 LDR X8, [X0 + 0xB8]
	0x03396EB8 LDP X20, X19, [X31 + 0x10]
	0x03396EBC LDR X0, [X8]
	0x03396EC0 LDR X30, [X31], #0x20
	0x03396EC4 RET
	0x03396EC8 LDR X8, [X19]
	0x03396ECC MOV X0, X19
	0x03396ED0 LDP X20, X19, [X31 + 0x10]
	0x03396ED4 LDR X2, [X8 + 0x468]
	0x03396ED8 LDR X1, [X8 + 0x470]
	0x03396EDC LDR X30, [X31], #0x20
	0x03396EE0 BR X2
	0x03396EE4 STP X30, X19, [X31 - 0x10]!
	0x03396EE8 ADRP X0, 0xD5D000
	0x03396EEC LDR X0, [X0 + 0xB40]
	0x03396EF0 BL 0x1C16D08
	0x03396EF4 BL 0x1C16F10
	0x03396EF8 MOV X19, X0
	0x03396EFC ADRP X0, 0xD8F000
	0x03396F00 LDR X0, [X0 + 0xD28]
	0x03396F04 BL 0x1C16D08
	0x03396F08 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1048000
	005 Move W8, [X20+161]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD87000
	012 Move X0, [X0+1256]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+161], W8
	016 Move X8, [X19]
	017 Move X0, X19
	018 Move X9, [X8+808]
	019 Move X1, [X8+816]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Compare X0, 0
	022 JumpIfEqual {36}
	023 Move X8, 0xD87000
	024 Move X8, [X8+1256]
	025 Move X9, [X0]
	026 Move X8, [X8]
	027 Move W11, [X9+304]
	028 Move W10, [X8+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W0, W31
	031 Move X9, [X9+200]
	032 Add X9, X9, X10
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CSET not yet implemented."
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Return X0

Method: System.String InternalGetNameIfAvailable(ref System.Type rootCauseForFailure)

Disassembly:
	0x033995EC MOV X19, X0
	0x033995F0 TBNZ X8, 0x0, 0x3399608
	0x033995F4 ADRP X0, 0xD63000

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+424]
	003 Move X1, [X8+432]
	004 CallNoReturn X2

Method: System.String get_InternalNameIfAvailable()

Disassembly:
	0x033995C8 B 0x331F94C
	0x033995CC LDRH W0, [X0]
	0x033995D0 RET
	0x033995D4 STP X30, X21, [X31 - 0x20]!
	0x033995D8 STP X20, X19, [X31 + 0x10]
	0x033995DC ADRP X21, 0x1044000
	0x033995E0 ADRP X20, 0xD63000
	0x033995E4 LDRB W8, [X21 + 0xB8]
	0x033995E8 LDR X20, [X20 + 0x9E8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31+8], X31
	003 Move X8, [X0]
	004 Add X1, X31, 8
	005 Move X9, [X8+2360]
	006 Move X2, [X8+2368]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move X30, [X31+16]
	009 Return X0

Method: System.String get_NameOrDefault()

Disassembly:
	0x033995F8 LDR X0, [X0 + 0x9E8]
	0x033995FC BL 0x1C16CF4
	0x03399600 MOVZ W8, 0x1
	0x03399604 STRB W8, [X21 + 0xB8]
	0x03399608 LDR X0, [X20]
	0x0339960C LDRH W19, [X19]
	0x03399610 LDR W8, [X0 + 0xE0]
	0x03399614 CBNZ W8, 0x339961C
	0x03399618 BL 0x1C16DFC
	0x0339961C MOV W0, W19
	0x03399620 LDP X20, X19, [X31 + 0x10]
	0x03399624 MOV X1, X31
	0x03399628 LDP X30, X21, [X31], #0x20
	0x0339962C B 0x3320390
	0x03399630 STP X30, X21, [X31 - 0x20]!
	0x03399634 STP X20, X19, [X31 + 0x10]
	0x03399638 ADRP X21, 0x1044000
	0x0339963C ADRP X20, 0xD63000
	0x03399640 LDRB W8, [X21 + 0xB9]
	0x03399644 LDR X20, [X20 + 0x9E8]
	0x03399648 MOV X19, X0
	0x0339964C TBNZ X8, 0x0, 0x3399664
	0x03399650 ADRP X0, 0xD63000
	0x03399654 LDR X0, [X0 + 0x9E8]
	0x03399658 BL 0x1C16CF4
	0x0339965C MOVZ W8, 0x1
	0x03399660 STRB W8, [X21 + 0xB9]
	0x03399664 LDR X0, [X20]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1045000
	007 Move X20, 0xD93000
	008 Move W8, [X21+162]
	009 Move X20, [X20+1352]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD93000
	016 Move X0, [X0+1352]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+162], W8
	020 Move [X31+8], X31
	021 Move X8, [X19]
	022 Add X1, X31, 8
	023 Move X0, X19
	024 Move X9, [X8+2360]
	025 Move X2, [X8+2368]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X8, [X20]
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X30, [X31+16]
	031 Move X21, [X31+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSEL not yet implemented."
	034 Add X31, X31, 48
	035 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03399668 LDRH W19, [X19]
	0x0339966C LDR W8, [X0 + 0xE0]
	0x03399670 CBNZ W8, 0x3399678
	0x03399674 BL 0x1C16DFC
	0x03399678 MOV W0, W19
	0x0339967C LDP X20, X19, [X31 + 0x10]
	0x03399680 MOV X1, X31
	0x03399684 LDP X30, X21, [X31], #0x20
	0x03399688 B 0x332089C
	0x0339968C STP X30, X21, [X31 - 0x20]!
	0x03399690 STP X20, X19, [X31 + 0x10]
	0x03399694 ADRP X21, 0x1044000
	0x03399698 ADRP X20, 0xD63000
	0x0339969C LDRB W8, [X21 + 0xBA]
	0x033996A0 LDR X20, [X20 + 0x9E8]
	0x033996A4 MOV X19, X0
	0x033996A8 TBNZ X8, 0x0, 0x33996C0
	0x033996AC ADRP X0, 0xD63000
	0x033996B0 LDR X0, [X0 + 0x9E8]
	0x033996B4 BL 0x1C16CF4
	0x033996B8 MOVZ W8, 0x1
	0x033996BC STRB W8, [X21 + 0xBA]
	0x033996C0 LDR X0, [X20]
	0x033996C4 LDRH W19, [X19]
	0x033996C8 LDR W8, [X0 + 0xE0]
	0x033996CC CBNZ W8, 0x33996D4
	0x033996D0 BL 0x1C16DFC
	0x033996D4 MOV W0, W19
	0x033996D8 LDP X20, X19, [X31 + 0x10]
	0x033996DC MOV X1, X31
	0x033996E0 LDP X30, X21, [X31], #0x20
	0x033996E4 B 0x3320D40
	0x033996E8 STP X30, X21, [X31 - 0x20]!
	0x033996EC STP X20, X19, [X31 + 0x10]
	0x033996F0 ADRP X21, 0x1044000
	0x033996F4 ADRP X20, 0xD63000
	0x033996F8 LDRB W8, [X21 + 0xBB]
	0x033996FC LDR X20, [X20 + 0x9E8]
	0x03399700 MOV X19, X0
	0x03399704 TBNZ X8, 0x0, 0x339971C
	0x03399708 ADRP X0, 0xD63000
	0x0339970C LDR X0, [X0 + 0x9E8]
	0x03399710 BL 0x1C16CF4
	0x03399714 MOVZ W8, 0x1
	0x03399718 STRB W8, [X21 + 0xBB]
	0x0339971C LDR X0, [X20]
	0x03399720 LDRH W19, [X19]
	0x03399724 LDR W8, [X0 + 0xE0]
	0x03399728 CBNZ W8, 0x3399730
	0x0339972C BL 0x1C16DFC
	0x03399730 MOV W0, W19
	0x03399734 LDP X20, X19, [X31 + 0x10]
	0x03399738 MOV X1, X31
	0x0339973C LDP X30, X21, [X31], #0x20
	0x03399740 B 0x33212BC
	0x03399744 STP X30, X21, [X31 - 0x20]!
	0x03399748 STP X20, X19, [X31 + 0x10]
	0x0339974C ADRP X21, 0x1044000
	0x03399750 ADRP X20, 0xD63000
	0x03399754 LDRB W8, [X21 + 0xBC]
	0x03399758 LDR X20, [X20 + 0x9E8]
	0x0339975C MOV X19, X0
	0x03399760 TBNZ X8, 0x0, 0x3399778
	0x03399764 ADRP X0, 0xD63000
	0x03399768 LDR X0, [X0 + 0x9E8]
	0x0339976C BL 0x1C16CF4
	0x03399770 MOVZ W8, 0x1
	0x03399774 STRB W8, [X21 + 0xBC]
	0x03399778 LDR X0, [X20]
	0x0339977C LDRH W19, [X19]
	0x03399780 LDR W8, [X0 + 0xE0]
	0x03399784 CBNZ W8, 0x339978C
	0x03399788 BL 0x1C16DFC
	0x0339978C MOV W0, W19
	0x03399790 LDP X20, X19, [X31 + 0x10]
	0x03399794 MOV X1, X31
	0x03399798 LDP X30, X21, [X31], #0x20
	0x0339979C B 0x3321768
	0x033997A0 STP X30, X21, [X31 - 0x20]!
	0x033997A4 STP X20, X19, [X31 + 0x10]
	0x033997A8 ADRP X21, 0x1044000
	0x033997AC ADRP X20, 0xD63000
	0x033997B0 LDRB W8, [X21 + 0xBD]
	0x033997B4 LDR X20, [X20 + 0x9E8]
	0x033997B8 MOV X19, X0
	0x033997BC TBNZ X8, 0x0, 0x33997D4
	0x033997C0 ADRP X0, 0xD63000
	0x033997C4 LDR X0, [X0 + 0x9E8]
	0x033997C8 BL 0x1C16CF4
	0x033997CC MOVZ W8, 0x1
	0x033997D0 STRB W8, [X21 + 0xBD]
	0x033997D4 LDR X0, [X20]
	0x033997D8 LDRH W19, [X19]
	0x033997DC LDR W8, [X0 + 0xE0]
	0x033997E0 CBNZ W8, 0x33997E8
	0x033997E4 BL 0x1C16DFC
	0x033997E8 MOV W0, W19
	0x033997EC LDP X20, X19, [X31 + 0x10]
	0x033997F0 MOV X1, X31
	0x033997F4 LDP X30, X21, [X31], #0x20
	0x033997F8 B 0x3321AAC
	0x033997FC STP X30, X21, [X31 - 0x20]!
	0x03399800 STP X20, X19, [X31 + 0x10]
	0x03399804 ADRP X21, 0x1044000
	0x03399808 ADRP X20, 0xD63000
	0x0339980C LDRB W8, [X21 + 0xBE]
	0x03399810 LDR X20, [X20 + 0x9E8]
	0x03399814 MOV X19, X0
	0x03399818 TBNZ X8, 0x0, 0x3399830
	0x0339981C ADRP X0, 0xD63000
	0x03399820 LDR X0, [X0 + 0x9E8]
	0x03399824 BL 0x1C16CF4
	0x03399828 MOVZ W8, 0x1
	0x0339982C STRB W8, [X21 + 0xBE]
	0x03399830 LDR X0, [X20]
	0x03399834 LDRH W19, [X19]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1045000
	009 Move X20, 0xD5B000
	010 Move X19, 0xD85000
	011 Move W8, [X21+163]
	012 Move X20, [X20+1728]
	013 Move X19, [X19+2416]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0xD85000
	019 Move X0, [X0+2416]
	020 Call 0x1C17CF4
	021 Move X0, 0xD93000
	022 Move X0, [X0+1360]
	023 Call 0x1C17CF4
	024 Move X0, 0xD8D000
	025 Move X0, [X0+3472]
	026 Call 0x1C17CF4
	027 Move X0, 0xD93000
	028 Move X0, [X0+1064]
	029 Call 0x1C17CF4
	030 Move X0, 0xD93000
	031 Move X0, [X0+1080]
	032 Call 0x1C17CF4
	033 Move X0, 0xD93000
	034 Move X0, [X0+1072]
	035 Call 0x1C17CF4
	036 Move X0, 0xD5B000
	037 Move X0, [X0+1728]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+163], W8
	041 Move X8, [X20]
	042 Move W9, 46
	043 Move X8, [X8+184]
	044 NotImplemented "Instruction STRH not yet implemented."
	045 Move X19, [X19]
	046 Move X8, [X19+56]
	047 Compare X8, 0
	048 JumpIfNotEqual {52}
	049 Move X0, X19
	050 Call 0x1C5D6E0
	051 Move X8, [X19+56]
	052 Move X0, [X8+16]
	053 Move W8, [X0+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {59}
	058 Call 0x1C5D684
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X8, [X19+56]
	064 Move X19, 0xD8D000
	065 Move X0, [X8+16]
	066 Move W8, [X0+309]
	067 Move X19, [X19+3472]
	068 Move TEMP, X8
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {73}
	072 Call 0x1C5D684
	073 Move X8, [X0+184]
	074 Move X9, [X20]
	075 Move X22, 0xD93000
	076 Move X24, 0xD93000
	077 Move X10, [X8]
	078 Move X8, [X9+184]
	079 Move X23, 0xD93000
	080 Move X21, 0xD93000
	081 Move [X8+16], X10
	082 Move X0, [X19]
	083 Move W9, [X0+224]
	084 Move X22, [X22+1360]
	085 Move X24, [X24+1064]
	086 Move X23, [X23+1072]
	087 Move X21, [X21+1080]
	088 Compare W9, 0
	089 JumpIfNotEqual {94}
	090 Call 0x1C17DFC
	091 Move X8, [X20]
	092 Move X0, [X19]
	093 Move X8, [X8+184]
	094 Move X9, [X0+184]
	095 Move X9, [X9]
	096 Move [X8+24], X9
	097 Move X0, [X22]
	098 Call 0x1C17F10
	099 Move X2, [X24]
	100 Move X1, X31
	101 Move X3, X31
	102 Move X19, X0
	103 Call MemberFilter..ctor, X0, X1, X2
	104 Move X8, [X20]
	105 Move X8, [X8+184]
	106 Move [X8+32], X19
	107 Move X0, [X22]
	108 Call 0x1C17F10
	109 Move X2, [X23]
	110 Move X1, X31
	111 Move X3, X31
	112 Move X19, X0
	113 Call MemberFilter..ctor, X0, X1, X2
	114 Move X8, [X20]
	115 Move X8, [X8+184]
	116 Move [X8+40], X19
	117 Move X0, [X22]
	118 Call 0x1C17F10
	119 Move X2, [X21]
	120 Move X1, X31
	121 Move X3, X31
	122 Move X19, X0
	123 Call MemberFilter..ctor, X0, X1, X2
	124 Move X8, [X20]
	125 Move X22, [X31+32]
	126 Move X21, [X31+40]
	127 Move X24, [X31+16]
	128 Move X23, [X31+24]
	129 Move X8, [X8+184]
	130 Move [X8+48], X19
	131 Move X20, [X31+48]
	132 Move X19, [X31+56]
	133 Move X30, [X31+64]
	134 Return 

