Type: System.DateTimeFormat

Method: System.Void FormatDigits(System.Text.StringBuilder outputBuffer, System.Int32 value, System.Int32 len)

Disassembly:
	0x033687D0 LDR X2, [X8 + 0x270]
	0x033687D4 BLR X9
	0x033687D8 LDR X8, [X19]
	0x033687DC STR W0, [X31 + 0x30]
	0x033687E0 LDR W9, [X8 + 0xE0]
	0x033687E4 CBNZ W9, 0x33687F0
	0x033687E8 MOV X0, X8
	0x033687EC BL 0x1C16DFC
	0x033687F0 MOVZ W3, 0x79
	0x033687F4 MOV X0, X23
	0x033687F8 MOV X1, X22
	0x033687FC MOV W2, W28
	0x03368800 BL 0x33679B4
	0x03368804 LDR W8, [X31 + 0x10]
	0x03368808 STR W0, [X31 + 0x34]
	0x0336880C TBNZ X8, 0x0, 0x33688C8
	0x03368810 ADRP X8, 0xDBB000
	0x03368814 LDR X8, [X8 + 0xB60]
	0x03368818 LDR X8, [X8]
	0x0336881C LDR X8, [X8 + 0xB8]
	0x03368820 LDRB W8, [X8 + 0x2]
	0x03368824 CBNZ W8, 0x33688C8
	0x03368828 LDR W8, [X31 + 0x30]
	0x0336882C CMP W8, 0x1
	0x03368830 B.NE 0x33688C8
	0x03368834 LDR W9, [X31 + 0xC]
	0x03368838 ADD W8, W0, W28
	0x0336883C CMP W8, W9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1075000
	008 Move X23, 0xDC1000
	009 Move W8, [X22+3760]
	010 Move X23, [X23+1352]
	011 Move W19, W2
	012 Move W20, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xDC1000
	019 Move X0, [X0+1352]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3760], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X21
	029 Move W1, W20
	030 Move W2, W19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move W3, W31
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]

Method: System.Void FormatDigits(System.Text.StringBuilder outputBuffer, System.Int32 value, System.Int32 len, System.Boolean overrideLengthLimit)

Disassembly:
	0x03368840 B.GE 0x33688C8
	0x03368844 CMP W8, W22
	0x03368848 B.CS 0x3368FAC
	0x0336884C LDRH W9, [X23, W8, SXTW]
	0x03368850 CMP W9, 0x27
	0x03368854 B.NE 0x33688C8
	0x03368858 ADD W8, W8, 0x1
	0x0336885C CMP W8, W22
	0x03368860 B.CS 0x3368FAC
	0x03368864 ADRP X9, 0xDC0000
	0x03368868 LDR X9, [X9 + 0x4D0]
	0x0336886C LDR X0, [X9]
	0x03368870 CBZ X0, 0x3368FB0
	0x03368874 LDRH W19, [X23, W8, SXTW]
	0x03368878 MOV W1, W31
	0x0336887C MOV X2, X31
	0x03368880 BL 0x3222A1C
	0x03368884 CMP W19, W0, UXTH
	0x03368888 ADRP X19, 0xDC0000
	0x0336888C LDR X19, [X19 + 0x548]
	0x03368890 B.NE 0x33688C8
	0x03368894 ADRP X8, 0xDC0000
	0x03368898 LDR X8, [X8 + 0x4C8]
	0x0336889C LDR X0, [X8]
	0x033688A0 CBZ X0, 0x3368FB0
	0x033688A4 MOV W1, W31
	0x033688A8 MOV X2, X31
	0x033688AC BL 0x3222A1C
	0x033688B0 CBZ X25, 0x3368FB0
	0x033688B4 MOV W1, W0
	0x033688B8 MOV X0, X25
	0x033688BC MOV X2, X31
	0x033688C0 BL 0x3233D30
	0x033688C4 B 0x3368F00
	0x033688C8 MOV X0, X21
	0x033688CC MOV X1, X31
	0x033688D0 BL 0x3327230
	0x033688D4 TBZ X0, 0x0, 0x3368B78
	0x033688D8 LDR X0, [X19]
	0x033688DC LDP W19, W8, [X31 + 0x30]
	0x033688E0 MOVZ W10, 0x2
	0x033688E4 LDR W9, [X0 + 0xE0]
	0x033688E8 CMP W8, 0x2
	0x033688EC CSEL W29, W8, W10, LT
	0x033688F0 CBNZ W9, 0x33688F8
	0x033688F4 BL 0x1C16DFC
	0x033688F8 MOV X0, X25
	0x033688FC MOV W1, W19
	0x03368900 MOV W2, W29
	0x03368904 B 0x3368DD8
	0x03368908 LDR W9, [X31 + 0x34]
	0x0336890C MOV X24, X20
	0x03368910 CMP W9, 0x1
	0x03368914 B.LT 0x3368DE0
	0x03368918 MOVZ W10, 0x6667
	0x0336891C MOVK W10, 0x66660000
	0x03368920 SMADDL X10, X8, X10, X31
	0x03368924 LDR X20, [X31 + 0x18]
	0x03368928 UBFM X11, X10, 0x3F, 0x3F
	0x0336892C SBFM X10, X10, 0x22, 0x3F
	0x03368930 ADD W10, W10, W11
	0x03368934 MOVZ W12, 0xA

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 NotImplemented "Instruction MRS not yet implemented."
	005 Move X13, [X19+40]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X10, X31, 0
	008 Move W12, 0x6667
	009 NotImplemented "Instruction CSET not yet implemented."
	010 Add X9, X10, 32
	011 Move W8, W1
	012 NotImplemented "Instruction MOVI not yet implemented."
	013 NotImplemented "Instruction MOVK not yet implemented."
	014 Or W11, W11, W3
	015 Move [X31+40], X13
	016 Move W13, 10
	017 Move X1, X9
	018 Move [X31], V0
	019 Move [X31+8], V0
	020 NotImplemented "Instruction SMADDL not yet implemented."
	021 Move X16, X14
	022 ShiftRight X16, 63
	023 And X16, X16, 0x7FFFFFFF
	024 NotImplemented "Instruction SBFM not yet implemented."
	025 Add W14, W14, W16
	026 Add W15, W8, 9
	027 NotImplemented "Instruction MSUB not yet implemented."
	028 Add W8, W8, 48
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction STRH not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W8, W14
	033 And W31, W11, 1
	034 Move W8, 2
	035 Subtract X9, X9, X1
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CINC not yet implemented."
	039 Move X2, X9
	040 ShiftRight X2, 1
	041 And X2, X2, 0x7FFFFFFF
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Add X9, X31, 0
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W9, 48
	046 Add X10, X31, 0
	047 Add W2, W2, 1
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction STRH not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Compare X0, 0
	052 JumpIfEqual {62}
	053 Move X3, X31
	054 Call StringBuilder.Append, X0, X1, X2
	055 Move X8, [X19+40]
	056 Move X9, [X31+40]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X30, [X31+48]
	059 Move X19, [X31+56]
	060 Add X31, X31, 64
	061 Return 
	062 Call 0x1C17F20
	063 Call 0x3EB2B20

Method: System.Void HebrewFormatDigits(System.Text.StringBuilder outputBuffer, System.Int32 digits)

Disassembly:
	0x03368938 MSUB W10, W10, W12, W8
	0x0336893C CBNZ W10, 0x3368DE4
	0x03368940 SMULH X8, X8, X27, X31
	0x03368944 SBFM X10, X8, 0x2, 0x3F
	0x03368948 CMP W9, 0x1
	0x0336894C ADD X8, X10, X8, 0x3F, LSR
	0x03368950 SUB W9, W9, 0x1
	0x03368954 B.LE 0x3368DE4
	0x03368958 SMULH X10, X8, X27, X31
	0x0336895C SBFM X11, X10, 0x2, 0x3F
	0x03368960 ADD X10, X11, X10, 0x3F, LSR
	0x03368964 MSUB X10, X10, X12, X8
	0x03368968 CBZ X10, 0x3368940
	0x0336896C B 0x3368DE4
	0x03368970 ADRP X19, 0xDC0000
	0x03368974 LDR X19, [X19 + 0x548]
	0x03368978 CMP W0, 0xC
	0x0336897C MOV X0, X21
	0x03368980 MOV X1, X31
	0x03368984 B.GE 0x3368CAC
	0x03368988 BL 0x3325044
	0x0336898C B 0x3368CB0
	0x03368990 LDR X0, [X19]
	0x03368994 LDR W8, [X0 + 0xE0]
	0x03368998 CBNZ W8, 0x33689A0
	0x0336899C BL 0x1C16DFC
	0x033689A0 MOVZ W3, 0x67
	0x033689A4 MOV X0, X23
	0x033689A8 MOV X1, X22
	0x033689AC MOV W2, W28
	0x033689B0 BL 0x33679B4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1075000
	007 Move X22, 0xDC1000
	008 Move W8, [X21+3761]
	009 Move X22, [X22+1256]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDC1000
	017 Move X0, [X0+1256]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3761], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W0, W20
	027 Move X1, X31
	028 Call HebrewNumber.ToString, X0
	029 Compare X19, 0
	030 JumpIfEqual {41}
	031 Move X1, X0
	032 Move X0, X19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X2, X31
	038 Move X30, [X31+48]
	039 Call StringBuilder.Append, X0, X1
	040 Return 
	041 Call 0x1C17F20

Method: System.Int32 ParseRepeatPattern(System.ReadOnlySpan`1<System.Char> format, System.Int32 pos, System.Char patternChar)

Disassembly:
	0x033689B4 STR W0, [X31 + 0x34]
	0x033689B8 CBZ X26, 0x3368FB0
	0x033689BC LDR X8, [X26]
	0x033689C0 MOV X0, X26
	0x033689C4 MOV X1, X20
	0x033689C8 LDR X9, [X8 + 0x228]
	0x033689CC LDR X2, [X8 + 0x230]
	0x033689D0 BLR X9
	0x033689D4 MOV W1, W0
	0x033689D8 MOV X0, X21
	0x033689DC MOV X2, X31
	0x033689E0 BL 0x33251B0
	0x033689E4 CBZ X25, 0x3368FB0
	0x033689E8 MOV X1, X0
	0x033689EC B 0x3368CB8
	0x033689F0 LDR X0, [X19]
	0x033689F4 LDR W8, [X0 + 0xE0]
	0x033689F8 CBNZ W8, 0x3368A00
	0x033689FC BL 0x1C16DFC
	0x03368A00 MOVZ W3, 0x68
	0x03368A04 MOV X0, X23
	0x03368A08 MOV X1, X22
	0x03368A0C MOV W2, W28
	0x03368A10 BL 0x33679B4
	0x03368A14 ADRP X8, 0xD8C000
	0x03368A18 LDR X8, [X8 + 0x9F0]
	0x03368A1C STR W0, [X31 + 0x34]
	0x03368A20 LDR X8, [X8]
	0x03368A24 LDR W9, [X8 + 0xE0]
	0x03368A28 CBNZ W9, 0x3368A34
	0x03368A2C MOV X0, X8
	0x03368A30 BL 0x1C16DFC
	0x03368A34 ADD X0, X31, 0x38
	0x03368A38 BL 0x33612B4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1075000
	008 Move W8, [X23+3762]
	009 Move W20, W3
	010 Move W19, W2
	011 Move X21, X1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xDBB000
	018 Move X0, [X0+40]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+3762], W8
	022 Add W8, W19, 1
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CSINC not yet implemented."
	025 Move W8, W19
	026 Add W8, W8, 1
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W8, W9
	031 Subtract W0, W8, W19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Return X0
	039 Call 0x1C17F28

Method: System.String FormatDayOfWeek(System.Int32 dayOfWeek, System.Int32 repeat, System.Globalization.DateTimeFormatInfo dtfi)

Disassembly:
	0x03368A3C MOVZ W9, 0xAAAB
	0x03368A40 MOVK W9, 0x2AAA0000
	0x03368A44 MOV W8, W0
	0x03368A48 SMADDL X9, X0, X9, X31
	0x03368A4C LDR X0, [X19]
	0x03368A50 UBFM X10, X9, 0x3F, 0x3F
	0x03368A54 SBFM X9, X9, 0x21, 0x3F
	0x03368A58 ADD W9, W9, W10
	0x03368A5C LDR W10, [X0 + 0xE0]
	0x03368A60 LDR W19, [X31 + 0x34]
	0x03368A64 MOVZ W11, 0xC
	0x03368A68 MSUB W8, W9, W11, W8
	0x03368A6C CMP W8, 0x0

ISIL:
	001 Compare X2, 0
	002 JumpIfEqual {14}
	003 Move W8, W0
	004 Move X0, X2
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move W1, W8
	007 Move X2, X31
	008 Call DateTimeFormatInfo.GetAbbreviatedDayName, X0, X1
	009 Return X0
	010 Move W1, W8
	011 Move X2, X31
	012 Call DateTimeFormatInfo.GetDayName, X0, X1
	013 Return X0
	014 Move [X31-16], X30
	015 Call 0x1C17F20

Method: System.String FormatMonth(System.Int32 month, System.Int32 repeatCount, System.Globalization.DateTimeFormatInfo dtfi)

Disassembly:
	0x03368A70 CSEL W29, W11, W8, EQ
	0x03368A74 CBNZ W10, 0x3368A7C
	0x03368A78 BL 0x1C16DFC
	0x03368A7C MOV X0, X25
	0x03368A80 MOV W1, W29
	0x03368A84 MOV W2, W19
	0x03368A88 BL 0x33677D0
	0x03368A8C B 0x3368F48
	0x03368A90 LDR X0, [X19]
	0x03368A94 LDR W8, [X0 + 0xE0]
	0x03368A98 CBNZ W8, 0x3368AA0
	0x03368A9C BL 0x1C16DFC
	0x03368AA0 MOVZ W3, 0x6D

ISIL:
	001 Compare X2, 0
	002 JumpIfEqual {14}
	003 Move W8, W0
	004 Move X0, X2
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move W1, W8
	007 Move X2, X31
	008 Call DateTimeFormatInfo.GetAbbreviatedMonthName, X0, X1
	009 Return X0
	010 Move W1, W8
	011 Move X2, X31
	012 Call DateTimeFormatInfo.GetMonthName, X0, X1
	013 Return X0
	014 Move [X31-16], X30
	015 Call 0x1C17F20

Method: System.String FormatHebrewMonthName(System.DateTime time, System.Int32 month, System.Int32 repeatCount, System.Globalization.DateTimeFormatInfo dtfi)

Disassembly:
	0x03368AA4 MOV X0, X23
	0x03368AA8 MOV X1, X22
	0x03368AAC MOV W2, W28
	0x03368AB0 BL 0x33679B4
	0x03368AB4 ADRP X8, 0xD8C000
	0x03368AB8 LDR X8, [X8 + 0x9F0]
	0x03368ABC STR W0, [X31 + 0x34]
	0x03368AC0 LDR X8, [X8]
	0x03368AC4 LDR W9, [X8 + 0xE0]
	0x03368AC8 CBNZ W9, 0x3368AD4
	0x03368ACC MOV X0, X8
	0x03368AD0 BL 0x1C16DFC
	0x03368AD4 ADD X0, X31, 0x38
	0x03368AD8 BL 0x33614A4
	0x03368ADC LDR W2, [X31 + 0x34]
	0x03368AE0 MOV W1, W0
	0x03368AE4 MOV X0, X25
	0x03368AE8 BL 0x33677D0
	0x03368AEC B 0x3368F50
	0x03368AF0 LDR W8, [X31 + 0x14]
	0x03368AF4 TBNZ X8, 0x0, 0x3368B68
	0x03368AF8 ADRP X8, 0xDBF000
	0x03368AFC LDR X8, [X8 + 0x930]
	0x03368B00 LDR X0, [X8]
	0x03368B04 LDR W8, [X0 + 0xE0]
	0x03368B08 CBNZ W8, 0x3368B10
	0x03368B0C BL 0x1C16DFC
	0x03368B10 ADRP X8, 0x1074000
	0x03368B14 LDRB W8, [X8 + 0xAFE]
	0x03368B18 CBNZ W8, 0x3368B34
	0x03368B1C ADRP X0, 0xDBF000
	0x03368B20 LDR X0, [X0 + 0x930]
	0x03368B24 BL 0x1C16CF4
	0x03368B28 ADRP X8, 0x1074000
	0x03368B2C MOVZ W9, 0x1
	0x03368B30 STRB W9, [X8 + 0xAFE]
	0x03368B34 ADRP X19, 0xDBF000
	0x03368B38 LDR X19, [X19 + 0x930]
	0x03368B3C LDR X0, [X19]
	0x03368B40 LDR W8, [X0 + 0xE0]
	0x03368B44 CBNZ W8, 0x3368B50
	0x03368B48 BL 0x1C16DFC
	0x03368B4C LDR X0, [X19]
	0x03368B50 ADRP X19, 0xDC0000
	0x03368B54 LDR X19, [X19 + 0x548]
	0x03368B58 LDR X8, [X0 + 0xB8]
	0x03368B5C LDRB W8, [X8]
	0x03368B60 CBZ W8, 0x3368EE4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X3, 0
	007 JumpIfEqual {63}
	008 Move X22, [X3+120]
	009 Move X19, X3
	010 Compare X22, 0
	011 JumpIfEqual {63}
	012 Move X8, [X22]
	013 Move W21, W2
	014 Move W20, W1
	015 Move X1, X0
	016 Move X9, [X8+616]
	017 Move X2, [X8+624]
	018 Move X0, X22
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move X8, [X22]
	021 Move W1, W0
	022 Move X0, X22
	023 Move X9, [X8+632]
	024 Move X2, [X8+640]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {43}
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X19
	032 Move W1, W20
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 NotImplemented "Instruction CSET not yet implemented."
	038 Move W2, 2
	039 Move X4, X31
	040 Move X30, [X31+48]
	041 Call DateTimeFormatInfo.internalGetMonthName, X0, X1, X2, X3
	042 Return X0
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CINC not yet implemented."
	045 Move X0, X19
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X2, X31
	052 Move X30, [X31+48]
	053 Call DateTimeFormatInfo.GetAbbreviatedMonthName, X0, X1
	054 Return X0
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X2, X31
	060 Move X30, [X31+48]
	061 Call DateTimeFormatInfo.GetMonthName, X0, X1
	062 Return X0
	063 Call 0x1C17F20

Method: System.Int32 ParseQuoteString(System.ReadOnlySpan`1<System.Char> format, System.Int32 pos, System.Text.StringBuilder result)

Disassembly:
	0x03368B64 LDR W19, [X31 + 0x34]
	0x03368B68 ADRP X8, 0xDC0000
	0x03368B6C LDR X8, [X8 + 0x548]
	0x03368B70 LDR X0, [X8]
	0x03368B74 B 0x3368D58
	0x03368B78 LDR W8, [X31 + 0x14]
	0x03368B7C TBNZ X8, 0x0, 0x3368BEC
	0x03368B80 ADRP X8, 0xDBF000
	0x03368B84 LDR X8, [X8 + 0x930]
	0x03368B88 LDR X0, [X8]
	0x03368B8C LDR W8, [X0 + 0xE0]
	0x03368B90 CBNZ W8, 0x3368B98
	0x03368B94 BL 0x1C16DFC
	0x03368B98 ADRP X8, 0x1074000
	0x03368B9C LDRB W8, [X8 + 0xAFE]
	0x03368BA0 CBNZ W8, 0x3368BBC
	0x03368BA4 ADRP X0, 0xDBF000
	0x03368BA8 LDR X0, [X0 + 0x930]
	0x03368BAC BL 0x1C16CF4
	0x03368BB0 ADRP X8, 0x1074000
	0x03368BB4 MOVZ W9, 0x1
	0x03368BB8 STRB W9, [X8 + 0xAFE]
	0x03368BBC ADRP X19, 0xDBF000
	0x03368BC0 LDR X19, [X19 + 0x930]
	0x03368BC4 LDR X0, [X19]
	0x03368BC8 LDR W8, [X0 + 0xE0]
	0x03368BCC CBNZ W8, 0x3368BD8
	0x03368BD0 BL 0x1C16DFC
	0x03368BD4 LDR X0, [X19]
	0x03368BD8 ADRP X9, 0xDC0000
	0x03368BDC LDR X9, [X9 + 0x548]
	0x03368BE0 LDR X8, [X0 + 0xB8]
	0x03368BE4 LDRB W8, [X8]
	0x03368BE8 CBZ W8, 0x3368F64
	0x03368BEC LDR W19, [X31 + 0x34]
	0x03368BF0 CMP W19, 0x2
	0x03368BF4 B.LE 0x3368D94
	0x03368BF8 ADD X0, X31, 0x34
	0x03368BFC MOV X1, X31
	0x03368C00 BL 0x337B6E0
	0x03368C04 ADRP X8, 0xDB3000
	0x03368C08 LDR X8, [X8 + 0xBE0]
	0x03368C0C MOV X1, X0
	0x03368C10 MOV X2, X31
	0x03368C14 LDR X8, [X8]
	0x03368C18 MOV X0, X8
	0x03368C1C BL 0x321B938
	0x03368C20 ADRP X8, 0xD8D000
	0x03368C24 LDR X8, [X8 + 0xC48]
	0x03368C28 MOV X19, X0
	0x03368C2C LDR X8, [X8]
	0x03368C30 LDR W9, [X8 + 0xE0]
	0x03368C34 CBNZ W9, 0x3368C40
	0x03368C38 MOV X0, X8
	0x03368C3C BL 0x1C16DFC
	0x03368C40 MOV X0, X31
	0x03368C44 BL 0x3338524
	0x03368C48 MOV X2, X0
	0x03368C4C ADD X0, X31, 0x30
	0x03368C50 MOV X1, X19
	0x03368C54 MOV X3, X31
	0x03368C58 BL 0x337B8BC
	0x03368C5C CBNZ X25, 0x3368F34
	0x03368C60 B 0x3368FB0
	0x03368C64 BL 0x3325044
	0x03368C68 CBZ X0, 0x3368FB0
	0x03368C6C LDR W8, [X0 + 0x10]
	0x03368C70 CMP W8, 0x1
	0x03368C74 B.LT 0x3368F50
	0x03368C78 MOV X0, X21
	0x03368C7C MOV X1, X31
	0x03368C80 BL 0x3325044
	0x03368C84 CBZ X0, 0x3368FB0
	0x03368C88 MOV W1, W31
	0x03368C8C MOV X2, X31
	0x03368C90 BL 0x3222A1C
	0x03368C94 CBZ X25, 0x3368FB0
	0x03368C98 MOV W1, W0
	0x03368C9C MOV X0, X25
	0x03368CA0 MOV X2, X31
	0x03368CA4 BL 0x3233D30
	0x03368CA8 B 0x3368F50
	0x03368CAC BL 0x3325630
	0x03368CB0 MOV X1, X0
	0x03368CB4 CBZ X25, 0x3368FB0
	0x03368CB8 MOV X0, X25
	0x03368CBC MOV X2, X31
	0x03368CC0 BL 0x32333E0
	0x03368CC4 B 0x3368F50
	0x03368CC8 LDP X9, X2, [X8 + 0x1E8]
	0x03368CCC MOV X0, X26
	0x03368CD0 MOV X1, X20
	0x03368CD4 BLR X9
	0x03368CD8 LDR W8, [X31 + 0x14]
	0x03368CDC MOV W29, W0
	0x03368CE0 TBNZ X8, 0x0, 0x3368D50
	0x03368CE4 ADRP X8, 0xDBF000
	0x03368CE8 LDR X8, [X8 + 0x930]
	0x03368CEC LDR X0, [X8]
	0x03368CF0 LDR W8, [X0 + 0xE0]
	0x03368CF4 CBNZ W8, 0x3368CFC
	0x03368CF8 BL 0x1C16DFC
	0x03368CFC ADRP X8, 0x1074000
	0x03368D00 LDRB W8, [X8 + 0xAFE]
	0x03368D04 CBNZ W8, 0x3368D20
	0x03368D08 ADRP X0, 0xDBF000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x1075000
	009 Move W8, [X23+3763]
	010 Move X20, X3
	011 Move W19, W2
	012 Move X21, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xDBB000
	019 Move X0, [X0+40]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+3763], W8
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Add W24, W19, 1
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X8, W24
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Add X24, X8, 1
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Compare X20, 0
	036 JumpIfEqual {91}
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Add W8, W8, 2
	039 Move W24, W8
	040 Compare X20, 0
	041 JumpIfEqual {91}
	042 Move X0, X20
	043 Move X2, X31
	044 Call StringBuilder.Append, X0, X1
	045 Subtract W0, W24, W19
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X22, [X31+32]
	049 Move X21, [X31+40]
	050 Move X24, [X31+16]
	051 Move X23, [X31+24]
	052 Move X30, [X31+64]
	053 Return X0
	054 Call 0x1C17F28
	055 Move X0, 0xD8E000
	056 Move X0, [X0+3144]
	057 Call 0x1C17D08
	058 Call 0x19913D0
	059 Move X0, X31
	060 Call CultureInfo.get_CurrentCulture
	061 Move X19, X0
	062 NotImplemented "Instruction STRH not yet implemented."
	063 Move X0, 0xD8E000
	064 Move X0, [X0+368]
	065 Call 0x1C17D08
	066 Add X1, X31, 12
	067 Call 0x1C17E04
	068 Move X20, X0
	069 Move X0, 0xDC1000
	070 Move X0, [X0+1424]
	071 Call 0x1C17D08
	072 Move X1, X0
	073 Move X0, X19
	074 Move X2, X20
	075 Move X3, X31
	076 Call String.Format, X0, X1, X2
	077 Move X19, X0
	078 Move X0, 0xDB9000
	079 Move X0, [X0+3080]
	080 Call 0x1C17D08
	081 Call 0x1C17F10
	082 Move X1, X19
	083 Move X20, X0
	084 Call FormatException..ctor, X0, X1
	085 Move X0, 0xDC3000
	086 Move X0, [X0+2952]
	087 Call 0x1C17D08
	088 Move X1, X0
	089 Move X0, X20
	090 Call 0x1C17DEC
	091 Call 0x1C17F20
	092 Move X0, 0xDB9000
	093 Move X0, [X0+3080]
	094 Call 0x1C17D08
	095 Call 0x1C17F10
	096 Move X19, X0
	097 Move X0, 0xDBB000
	098 Move X0, [X0+1560]
	099 Call 0x1C17D08
	100 Move X1, X0
	101 Move X0, X19
	102 Call FormatException..ctor, X0, X1
	103 Move X0, 0xDC3000
	104 Move X0, [X0+2952]
	105 Call 0x1C17D08
	106 Move X1, X0
	107 Move X0, X19
	108 Call 0x1C17DEC

Method: System.Int32 ParseNextChar(System.ReadOnlySpan`1<System.Char> format, System.Int32 pos)

Disassembly:
	0x03368D0C LDR X0, [X0 + 0x930]
	0x03368D10 BL 0x1C16CF4
	0x03368D14 ADRP X8, 0x1074000
	0x03368D18 MOVZ W9, 0x1
	0x03368D1C STRB W9, [X8 + 0xAFE]
	0x03368D20 ADRP X19, 0xDBF000
	0x03368D24 LDR X19, [X19 + 0x930]
	0x03368D28 LDR X0, [X19]
	0x03368D2C LDR W8, [X0 + 0xE0]
	0x03368D30 CBNZ W8, 0x3368D3C
	0x03368D34 BL 0x1C16DFC
	0x03368D38 LDR X0, [X19]
	0x03368D3C ADRP X19, 0xDC0000
	0x03368D40 LDR X19, [X19 + 0x548]
	0x03368D44 LDR X8, [X0 + 0xB8]
	0x03368D48 LDRB W8, [X8]
	0x03368D4C CBZ W8, 0x3368EE4
	0x03368D50 LDR X0, [X19]
	0x03368D54 LDR W19, [X31 + 0x34]
	0x03368D58 LDR W8, [X0 + 0xE0]
	0x03368D5C CBNZ W8, 0x3368D64
	0x03368D60 BL 0x1C16DFC
	0x03368D64 MOV X0, X25
	0x03368D68 MOV W1, W29
	0x03368D6C B 0x3368DD4
	0x03368D70 CBNZ W9, 0x3368D7C
	0x03368D74 MOV X0, X8
	0x03368D78 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1075000
	007 Move W8, [X22+3764]
	008 Move W21, W2
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xDBB000
	016 Move X0, [X0+40]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3764], W8
	020 Subtract W8, W20, 1
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Add W8, W21, 1
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Move TEMP, 0
	026 Not TEMP
	027 Move W0, TEMP
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0
	034 Call 0x1C17F28

Method: System.Boolean IsUseGenitiveForm(System.ReadOnlySpan`1<System.Char> format, System.Int32 index, System.Int32 tokenLen, System.Char patternToMatch)

Disassembly:
	0x03368D7C MOV W0, W29
	0x03368D80 MOV W1, W19
	0x03368D84 MOV X2, X21
	0x03368D88 BL 0x3367A70
	0x03368D8C CBNZ X25, 0x3368F34
	0x03368D90 B 0x3368FB0
	0x03368D94 ADRP X8, 0xDC0000
	0x03368D98 LDR X8, [X8 + 0x548]
	0x03368D9C LDR W29, [X31 + 0x30]
	0x03368DA0 LDR X0, [X8]
	0x03368DA4 LDR W8, [X0 + 0xE0]
	0x03368DA8 CBNZ W8, 0x3368DB0
	0x03368DAC BL 0x1C16DFC
	0x03368DB0 MOVZ W8, 0x851F
	0x03368DB4 MOVK W8, 0x51EB0000
	0x03368DB8 SMADDL X8, X29, X8, X31
	0x03368DBC UBFM X9, X8, 0x3F, 0x3F
	0x03368DC0 SBFM X8, X8, 0x25, 0x3F
	0x03368DC4 ADD W8, W8, W9
	0x03368DC8 MOVZ W9, 0x64
	0x03368DCC MSUB W1, W8, W9, W29
	0x03368DD0 MOV X0, X25
	0x03368DD4 MOV W2, W19
	0x03368DD8 BL 0x33677D0
	0x03368DDC B 0x3368F44
	0x03368DE0 LDR X20, [X31 + 0x18]
	0x03368DE4 SUBS W19, W9, 0x1
	0x03368DE8 B.LT 0x3368E78
	0x03368DEC ADRP X29, 0xDC0000
	0x03368DF0 LDR X29, [X29 + 0x548]
	0x03368DF4 STR W8, [X31 + 0x2C]
	0x03368DF8 LDR X0, [X29]
	0x03368DFC LDR W8, [X0 + 0xE0]
	0x03368E00 CBNZ W8, 0x3368E0C
	0x03368E04 BL 0x1C16DFC
	0x03368E08 LDR X0, [X29]
	0x03368E0C LDR X8, [X0 + 0xB8]
	0x03368E10 LDR X8, [X8 + 0x28]
	0x03368E14 CBZ X8, 0x3368FB0
	0x03368E18 LDR W9, [X8 + 0x18]
	0x03368E1C CMP W19, W9
	0x03368E20 B.CS 0x3368FAC
	0x03368E24 ADRP X9, 0xD8D000
	0x03368E28 LDR X9, [X9 + 0xC48]
	0x03368E2C ADD X8, X8, W19, 0x3, UXTW
	0x03368E30 LDR X0, [X9]
	0x03368E34 LDR W9, [X0 + 0xE0]
	0x03368E38 LDR X19, [X8 + 0x20]
	0x03368E3C CBNZ W9, 0x3368E44
	0x03368E40 BL 0x1C16DFC
	0x03368E44 MOV X0, X31
	0x03368E48 BL 0x3338524
	0x03368E4C MOV X2, X0
	0x03368E50 ADD X0, X31, 0x2C
	0x03368E54 MOV X1, X19
	0x03368E58 MOV X3, X31
	0x03368E5C BL 0x337B8BC
	0x03368E60 CBZ X25, 0x3368FB0
	0x03368E64 MOV X1, X0
	0x03368E68 MOV X0, X25
	0x03368E6C MOV X2, X31
	0x03368E70 BL 0x32333E0
	0x03368E74 B 0x3368F48
	0x03368E78 CBZ X25, 0x3368FB0
	0x03368E7C MOV X0, X25
	0x03368E80 MOV X1, X31
	0x03368E84 BL 0x323260C
	0x03368E88 ADRP X19, 0xDC0000
	0x03368E8C LDR X19, [X19 + 0x548]
	0x03368E90 CMP W0, 0x1
	0x03368E94 B.LT 0x3368F50
	0x03368E98 MOV X0, X25
	0x03368E9C MOV X1, X31
	0x03368EA0 BL 0x323260C
	0x03368EA4 SUB W1, W0, 0x1
	0x03368EA8 MOV X0, X25
	0x03368EAC MOV X2, X31
	0x03368EB0 BL 0x3232E88
	0x03368EB4 AND W8, W0, 0xFFFF
	0x03368EB8 CMP W8, 0x2E
	0x03368EBC B.NE 0x3368F50
	0x03368EC0 MOV X0, X25
	0x03368EC4 MOV X1, X31
	0x03368EC8 BL 0x323260C
	0x03368ECC SUB W1, W0, 0x1
	0x03368ED0 MOVZ W2, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1075000
	009 Move W8, [X24+3765]
	010 Move W19, W4
	011 Move W22, W3
	012 Move W23, W2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xDBB000
	020 Move X0, [X0+40]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+3765], W8
	024 Move W8, W23
	025 Subtract W8, W8, 1
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract W10, W8, 1
	030 Move W9, W31
	031 Move W11, W8
	032 Move W12, W10
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Add W9, W9, 1
	037 Subtract W11, W11, 1
	038 Subtract W12, W12, 1
	039 Move W9, W8
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Add W10, W22, W23
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSEL not yet implemented."
	044 Add W8, W10, 1
	045 Subtract W9, W31, W9
	046 Add X10, X21, W10
	047 Add W11, W9, W8
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Add W8, W8, 1
	053 Add X10, X10, 2
	054 Subtract W10, W8, W20
	055 Move W9, W31
	056 Subtract W11, W20, W8
	057 Add W12, W8, W9
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add W12, W10, W9
	062 Add W9, W9, 1
	063 Add W31, W12, 1
	064 Move W9, W11
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move W0, W31
	067 Move W0, 1
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Return X0
	076 Call 0x1C17F28

Method: System.Text.StringBuilder FormatCustomized(System.DateTime dateTime, System.ReadOnlySpan`1<System.Char> format, System.Globalization.DateTimeFormatInfo dtfi, System.TimeSpan offset, System.Text.StringBuilder result)

Disassembly:
	0x03368ED4 MOV X0, X25
	0x03368ED8 MOV X3, X31
	0x03368EDC BL 0x3233A34
	0x03368EE0 B 0x3368F50
	0x03368EE4 LDR X0, [X19]
	0x03368EE8 LDR W8, [X0 + 0xE0]
	0x03368EEC CBNZ W8, 0x3368EF4
	0x03368EF0 BL 0x1C16DFC
	0x03368EF4 MOV X0, X25
	0x03368EF8 MOV W1, W29
	0x03368EFC BL 0x3367938
	0x03368F00 STR W31, [X31 + 0x24]
	0x03368F04 B 0x3368F50
	0x03368F08 LDR X0, [X19]
	0x03368F0C LDR W19, [X31 + 0x34]
	0x03368F10 LDR W8, [X0 + 0xE0]
	0x03368F14 CBNZ W8, 0x3368F1C
	0x03368F18 BL 0x1C16DFC
	0x03368F1C MOV X0, X20
	0x03368F20 MOV W1, W29
	0x03368F24 MOV W2, W19
	0x03368F28 MOV X3, X21
	0x03368F2C BL 0x3367AA4
	0x03368F30 CBZ X25, 0x3368FB0
	0x03368F34 MOV X1, X0
	0x03368F38 MOV X0, X25
	0x03368F3C MOV X2, X31
	0x03368F40 BL 0x32333E0
	0x03368F44 STR W31, [X31 + 0x24]
	0x03368F48 ADRP X19, 0xDC0000
	0x03368F4C LDR X19, [X19 + 0x548]
	0x03368F50 LDR W8, [X31 + 0x34]
	0x03368F54 ADD W28, W8, W28
	0x03368F58 CMP W28, W22
	0x03368F5C B.LT 0x3368100
	0x03368F60 B 0x3368F88
	0x03368F64 LDR X0, [X9]
	0x03368F68 LDR W19, [X31 + 0x30]
	0x03368F6C LDR W8, [X0 + 0xE0]
	0x03368F70 CBNZ W8, 0x3368F78
	0x03368F74 BL 0x1C16DFC
	0x03368F78 MOV X0, X25
	0x03368F7C MOV W1, W19
	0x03368F80 BL 0x3367938
	0x03368F84 B 0x3368F44
	0x03368F88 MOV X0, X25
	0x03368F8C LDP X20, X19, [X31 + 0x90]
	0x03368F90 LDP X22, X21, [X31 + 0x80]
	0x03368F94 LDP X24, X23, [X31 + 0x70]
	0x03368F98 LDP X26, X25, [X31 + 0x60]
	0x03368F9C LDP X28, X27, [X31 + 0x50]
	0x03368FA0 LDP X29, X30, [X31 + 0x40]
	0x03368FA4 ADD X31, X31, 0xA0
	0x03368FA8 RET
	0x03368FAC BL 0x1C16F28
	0x03368FB0 BL 0x1C16F20
	0x03368FB4 LDR X8, [X31]
	0x03368FB8 CBNZ X8, 0x3368FC8
	0x03368FBC MOV X0, X25
	0x03368FC0 MOV X1, X31
	0x03368FC4 BL 0x3235B68
	0x03368FC8 ADRP X0, 0xDB8000
	0x03368FCC LDR X0, [X0 + 0xC08]
	0x03368FD0 BL 0x1C16D08
	0x03368FD4 BL 0x1C16F10
	0x03368FD8 MOV X19, X0
	0x03368FDC ADRP X0, 0xDBA000
	0x03368FE0 LDR X0, [X0 + 0x618]
	0x03368FE4 BL 0x1C16D08
	0x03368FE8 MOV X1, X0
	0x03368FEC MOV X0, X19
	0x03368FF0 BL 0x33674A0
	0x03368FF4 ADRP X0, 0xDC2000
	0x03368FF8 LDR X0, [X0 + 0xB98]
	0x03368FFC BL 0x1C16D08
	0x03369000 MOV X1, X0
	0x03369004 MOV X0, X19
	0x03369008 BL 0x1C16DEC
	0x0336900C SUB X31, X31, 0x60
	0x03369010 STP X30, X25, [X31 + 0x20]
	0x03369014 STP X24, X23, [X31 + 0x30]
	0x03369018 STP X22, X21, [X31 + 0x40]
	0x0336901C STP X20, X19, [X31 + 0x50]
	0x03369020 ADRP X25, 0x1073000
	0x03369024 STP X1, X0, [X31 + 0x10]
	0x03369028 ADRP X24, 0xDBF000
	0x0336902C LDRB W8, [X25 + 0xEB7]
	0x03369030 LDR X24, [X24 + 0x548]
	0x03369034 MOV X19, X6
	0x03369038 MOV W23, W5
	0x0336903C MOV W20, W4
	0x03369040 MOV X22, X1
	0x03369044 MOV X21, X0
	0x03369048 TBNZ X8, 0x0, 0x33690C0
	0x0336904C ADRP X0, 0xD8C000
	0x03369050 LDR X0, [X0 + 0xC48]
	0x03369054 BL 0x1C16CF4
	0x03369058 ADRP X0, 0xDBF000
	0x0336905C LDR X0, [X0 + 0x548]
	0x03369060 BL 0x1C16CF4
	0x03369064 ADRP X0, 0xD8B000
	0x03369068 LDR X0, [X0 + 0x9F0]
	0x0336906C BL 0x1C16CF4
	0x03369070 ADRP X0, 0xD8A000
	0x03369074 LDR X0, [X0 + 0x758]
	0x03369078 BL 0x1C16CF4
	0x0336907C ADRP X0, 0xD8C000
	0x03369080 LDR X0, [X0 + 0x570]
	0x03369084 BL 0x1C16CF4
	0x03369088 ADRP X0, 0xDBE000
	0x0336908C LDR X0, [X0 + 0xA38]
	0x03369090 BL 0x1C16CF4
	0x03369094 ADRP X0, 0xDC1000
	0x03369098 LDR X0, [X0 + 0xBA0]
	0x0336909C BL 0x1C16CF4
	0x033690A0 ADRP X0, 0xDC1000
	0x033690A4 LDR X0, [X0 + 0xBA8]
	0x033690A8 BL 0x1C16CF4
	0x033690AC ADRP X0, 0xDB1000
	0x033690B0 LDR X0, [X0 + 0xC40]
	0x033690B4 BL 0x1C16CF4
	0x033690B8 MOVZ W8, 0x1
	0x033690BC STRB W8, [X25 + 0xEB7]
	0x033690C0 LDR X0, [X24]
	0x033690C4 ADRP X25, 0xD8C000
	0x033690C8 LDR W8, [X0 + 0xE0]
	0x033690CC LDR X25, [X25 + 0x570]
	0x033690D0 CBNZ W8, 0x33690DC
	0x033690D4 BL 0x1C16DFC
	0x033690D8 LDR X0, [X24]
	0x033690DC LDR X8, [X25]
	0x033690E0 LDR X9, [X0 + 0xB8]
	0x033690E4 LDR W10, [X8 + 0xE0]
	0x033690E8 LDR X24, [X9]
	0x033690EC CBNZ W10, 0x33690F8
	0x033690F0 MOV X0, X8
	0x033690F4 BL 0x1C16DFC
	0x033690F8 MOV X0, X22
	0x033690FC MOV X1, X24
	0x03369100 MOV X2, X31
	0x03369104 BL 0x3394CD8
	0x03369108 TBZ X0, 0x0, 0x33691F4
	0x0336910C TBZ X23, 0x0, 0x3369144
	0x03369110 ADRP X22, 0xD8B000
	0x03369114 LDR X22, [X22 + 0x9F0]
	0x03369118 LDR X0, [X22]
	0x0336911C LDR W8, [X0 + 0xE0]
	0x03369120 CBNZ W8, 0x3369128
	0x03369124 BL 0x1C16DFC
	0x03369128 ADD X0, X31, 0x18
	0x0336912C BL 0x3361708
	0x03369130 MOVZ X8, 0xBFFF
	0x03369134 MOVK X8, 0x2A690000
	0x03369138 MOVK X8, 0xC9
	0x0336913C CMP X0, X8
	0x03369140 B.LE 0x33691A8
	0x03369144 ADRP X8, 0xD8B000
	0x03369148 LDR X8, [X8 + 0x9F0]
	0x0336914C LDR X0, [X8]
	0x03369150 LDR W8, [X0 + 0xE0]
	0x03369154 CBNZ W8, 0x336915C
	0x03369158 BL 0x1C16DFC
	0x0336915C ADD X0, X31, 0x18
	0x03369160 BL 0x336139C
	0x03369164 CMP W0, 0x1
	0x03369168 B.NE 0x3369190
	0x0336916C LDR X0, [X25]
	0x03369170 LDR W8, [X0 + 0xE0]
	0x03369174 CBNZ W8, 0x3369180
	0x03369178 BL 0x1C16DFC
	0x0336917C LDR X0, [X25]
	0x03369180 LDR X8, [X0 + 0xB8]
	0x03369184 LDR X22, [X8]
	0x03369188 STR X22, [X31 + 0x10]
	0x0336918C B 0x33691F4
	0x03369190 ADRP X8, 0xDBE000
	0x03369194 LDR X8, [X8 + 0xA38]
	0x03369198 LDR X0, [X8]
	0x0336919C LDR W8, [X0 + 0xE0]
	0x033691A0 CBNZ W8, 0x33691DC
	0x033691A4 B 0x33691D8
	0x033691A8 LDR X0, [X22]
	0x033691AC LDR W8, [X0 + 0xE0]
	0x033691B0 CBNZ W8, 0x33691B8
	0x033691B4 BL 0x1C16DFC
	0x033691B8 BL 0x3361584
	0x033691BC ADRP X8, 0xDBE000
	0x033691C0 LDR X8, [X8 + 0xA38]
	0x033691C4 MOV X21, X0
	0x033691C8 LDR X8, [X8]
	0x033691CC LDR W9, [X8 + 0xE0]
	0x033691D0 CBNZ W9, 0x33691DC
	0x033691D4 MOV X0, X8
	0x033691D8 BL 0x1C16DFC
	0x033691DC MOVZ W1, 0x2
	0x033691E0 MOV X0, X21
	0x033691E4 MOV X2, X31
	0x033691E8 BL 0x330D814
	0x033691EC MOV X22, X0
	0x033691F0 STR X0, [X31 + 0x10]
	0x033691F4 LDR X0, [X25]
	0x033691F8 LDR W8, [X0 + 0xE0]
	0x033691FC CBNZ W8, 0x3369208
	0x03369200 BL 0x1C16DFC
	0x03369204 LDR X0, [X25]
	0x03369208 LDR X8, [X0 + 0xB8]
	0x0336920C MOV X0, X22
	0x03369210 MOV X2, X31
	0x03369214 LDR X1, [X8]
	0x03369218 BL 0x3394D14
	0x0336921C CBZ X19, 0x33693B4
	0x03369220 ADRP X22, 0xD8C000
	0x03369224 LDR X22, [X22 + 0xC48]
	0x03369228 TBZ X0, 0x0, 0x3369240
	0x0336922C MOVZ W1, 0x2B
	0x03369230 MOV X0, X19
	0x03369234 MOV X2, X31
	0x03369238 BL 0x3233D30
	0x0336923C B 0x3369270
	0x03369240 MOVZ W1, 0x2D
	0x03369244 MOV X0, X19
	0x03369248 MOV X2, X31
	0x0336924C BL 0x3233D30
	0x03369250 LDR X0, [X25]
	0x03369254 LDR W8, [X0 + 0xE0]
	0x03369258 CBNZ W8, 0x3369260
	0x0336925C BL 0x1C16DFC
	0x03369260 ADD X0, X31, 0x10
	0x03369264 MOV X1, X31
	0x03369268 BL 0x33946A4
	0x0336926C STR X0, [X31 + 0x10]
	0x03369270 LDR X0, [X22]
	0x03369274 LDR W8, [X0 + 0xE0]
	0x03369278 CBNZ W8, 0x3369280
	0x0336927C BL 0x1C16DFC
	0x03369280 MOV X0, X31
	0x03369284 BL 0x3338524
	0x03369288 LDR X8, [X25]
	0x0336928C MOV X21, X0
	0x03369290 LDR W9, [X8 + 0xE0]
	0x03369294 CBNZ W9, 0x33692A0
	0x03369298 MOV X0, X8
	0x0336929C BL 0x1C16DFC
	0x033692A0 ADD X0, X31, 0x10
	0x033692A4 MOV X1, X31
	0x033692A8 BL 0x33940AC
	0x033692AC CMP W20, 0x1
	0x033692B0 B.LE 0x3369360
	0x033692B4 ADRP X23, 0xD8A000
	0x033692B8 LDR X23, [X23 + 0x758]
	0x033692BC STR W0, [X31 + 0xC]
	0x033692C0 ADD X1, X31, 0xC
	0x033692C4 LDR X8, [X23]
	0x033692C8 MOV X0, X8
	0x033692CC BL 0x1C16E04
	0x033692D0 ADRP X8, 0xDC1000
	0x033692D4 LDR X8, [X8 + 0xBA8]
	0x033692D8 MOV X3, X0
	0x033692DC MOV X0, X19
	0x033692E0 MOV X1, X21
	0x033692E4 LDR X2, [X8]
	0x033692E8 MOV X4, X31
	0x033692EC BL 0x3234F08
	0x033692F0 CMP W20, 0x2
	0x033692F4 B.EQ 0x336939C
	0x033692F8 LDR X0, [X22]
	0x033692FC LDR W8, [X0 + 0xE0]
	0x03369300 CBNZ W8, 0x3369308
	0x03369304 BL 0x1C16DFC
	0x03369308 MOV X0, X31
	0x0336930C BL 0x3338524
	0x03369310 LDR X8, [X25]
	0x03369314 MOV X20, X0
	0x03369318 LDR W9, [X8 + 0xE0]
	0x0336931C CBNZ W9, 0x3369328
	0x03369320 MOV X0, X8
	0x03369324 BL 0x1C16DFC
	0x03369328 ADD X0, X31, 0x10
	0x0336932C MOV X1, X31
	0x03369330 BL 0x339413C
	0x03369334 LDR X8, [X23]
	0x03369338 STR W0, [X31 + 0xC]
	0x0336933C ADD X1, X31, 0xC
	0x03369340 MOV X0, X8
	0x03369344 BL 0x1C16E04
	0x03369348 ADRP X8, 0xDC1000
	0x0336934C LDR X8, [X8 + 0xBA0]
	0x03369350 MOV X3, X0
	0x03369354 MOV X0, X19
	0x03369358 MOV X1, X20
	0x0336935C B 0x3369390
	0x03369360 ADRP X8, 0xD8A000
	0x03369364 LDR X8, [X8 + 0x758]
	0x03369368 STR W0, [X31 + 0xC]
	0x0336936C ADD X1, X31, 0xC
	0x03369370 LDR X8, [X8]
	0x03369374 MOV X0, X8
	0x03369378 BL 0x1C16E04
	0x0336937C ADRP X8, 0xDB1000
	0x03369380 LDR X8, [X8 + 0xC40]
	0x03369384 MOV X3, X0
	0x03369388 MOV X0, X19
	0x0336938C MOV X1, X21
	0x03369390 LDR X2, [X8]
	0x03369394 MOV X4, X31
	0x03369398 BL 0x3234F08
	0x0336939C LDP X20, X19, [X31 + 0x50]
	0x033693A0 LDP X22, X21, [X31 + 0x40]
	0x033693A4 LDP X24, X23, [X31 + 0x30]
	0x033693A8 LDP X30, X25, [X31 + 0x20]
	0x033693AC ADD X31, X31, 0x60
	0x033693B0 RET
	0x033693B4 BL 0x1C16F20
	0x033693B8 SUB X31, X31, 0x50
	0x033693BC STP X30, X0, [X31 + 0x10]
	0x033693C0 STP X24, X23, [X31 + 0x20]
	0x033693C4 STP X22, X21, [X31 + 0x30]
	0x033693C8 STP X20, X19, [X31 + 0x40]
	0x033693CC ADRP X22, 0x1073000
	0x033693D0 STR X1, [X31 + 0x8]
	0x033693D4 ADRP X23, 0xDBF000
	0x033693D8 LDRB W8, [X22 + 0xEB8]
	0x033693DC LDR X23, [X23 + 0x548]
	0x033693E0 MOV X19, X2
	0x033693E4 MOV X21, X1
	0x033693E8 MOV X20, X0
	0x033693EC TBNZ X8, 0x0, 0x3369434
	0x033693F0 ADRP X0, 0xDBF000
	0x033693F4 LDR X0, [X0 + 0x548]
	0x033693F8 BL 0x1C16CF4
	0x033693FC ADRP X0, 0xD8B000
	0x03369400 LDR X0, [X0 + 0x9F0]
	0x03369404 BL 0x1C16CF4
	0x03369408 ADRP X0, 0xD8C000
	0x0336940C LDR X0, [X0 + 0x570]
	0x03369410 BL 0x1C16CF4
	0x03369414 ADRP X0, 0xDBE000
	0x03369418 LDR X0, [X0 + 0xA38]
	0x0336941C BL 0x1C16CF4
	0x03369420 ADRP X0, 0xDBF000
	0x03369424 LDR X0, [X0 + 0x440]
	0x03369428 BL 0x1C16CF4
	0x0336942C MOVZ W8, 0x1
	0x03369430 STRB W8, [X22 + 0xEB8]
	0x03369434 LDR X0, [X23]
	0x03369438 ADRP X24, 0xD8C000
	0x0336943C LDR W8, [X0 + 0xE0]
	0x03369440 LDR X24, [X24 + 0x570]
	0x03369444 CBNZ W8, 0x3369450
	0x03369448 BL 0x1C16DFC
	0x0336944C LDR X0, [X23]
	0x03369450 LDR X8, [X24]
	0x03369454 LDR X9, [X0 + 0xB8]
	0x03369458 LDR W10, [X8 + 0xE0]
	0x0336945C LDR X22, [X9]
	0x03369460 CBNZ W10, 0x336946C
	0x03369464 MOV X0, X8
	0x03369468 BL 0x1C16DFC
	0x0336946C MOV X0, X21
	0x03369470 MOV X1, X22
	0x03369474 MOV X2, X31
	0x03369478 BL 0x3394CD8
	0x0336947C TBZ X0, 0x0, 0x33694E0
	0x03369480 ADRP X8, 0xD8B000
	0x03369484 LDR X8, [X8 + 0x9F0]
	0x03369488 LDR X0, [X8]
	0x0336948C LDR W8, [X0 + 0xE0]
	0x03369490 CBNZ W8, 0x3369498
	0x03369494 BL 0x1C16DFC
	0x03369498 ADD X0, X31, 0x18
	0x0336949C BL 0x336139C
	0x033694A0 CMP W0, 0x1
	0x033694A4 B.EQ 0x33695D4
	0x033694A8 CMP W0, 0x2
	0x033694AC B.NE 0x33695BC
	0x033694B0 ADRP X8, 0xDBE000
	0x033694B4 LDR X8, [X8 + 0xA38]
	0x033694B8 LDR X0, [X8]
	0x033694BC LDR W8, [X0 + 0xE0]
	0x033694C0 CBNZ W8, 0x33694C8
	0x033694C4 BL 0x1C16DFC
	0x033694C8 MOVZ W1, 0x2
	0x033694CC MOV X0, X20
	0x033694D0 MOV X2, X31
	0x033694D4 BL 0x330D814
	0x033694D8 MOV X21, X0
	0x033694DC STR X0, [X31 + 0x8]
	0x033694E0 LDR X0, [X24]
	0x033694E4 LDR W8, [X0 + 0xE0]
	0x033694E8 CBNZ W8, 0x33694F4
	0x033694EC BL 0x1C16DFC
	0x033694F0 LDR X0, [X24]
	0x033694F4 LDR X8, [X0 + 0xB8]
	0x033694F8 MOV X0, X21
	0x033694FC MOV X2, X31
	0x03369500 LDR X1, [X8]
	0x03369504 BL 0x3394D14
	0x03369508 CBZ X19, 0x3369604
	0x0336950C TBZ X0, 0x0, 0x3369524
	0x03369510 MOVZ W1, 0x2B
	0x03369514 MOV X0, X19
	0x03369518 MOV X2, X31
	0x0336951C BL 0x3233D30
	0x03369520 B 0x3369554
	0x03369524 MOVZ W1, 0x2D
	0x03369528 MOV X0, X19
	0x0336952C MOV X2, X31
	0x03369530 BL 0x3233D30
	0x03369534 LDR X0, [X24]
	0x03369538 LDR W8, [X0 + 0xE0]
	0x0336953C CBNZ W8, 0x3369544
	0x03369540 BL 0x1C16DFC
	0x03369544 ADD X0, X31, 0x8
	0x03369548 MOV X1, X31
	0x0336954C BL 0x33946A4
	0x03369550 STR X0, [X31 + 0x8]
	0x03369554 LDR X0, [X24]
	0x03369558 LDR W8, [X0 + 0xE0]
	0x0336955C CBNZ W8, 0x3369564
	0x03369560 BL 0x1C16DFC
	0x03369564 ADD X0, X31, 0x8
	0x03369568 MOV X1, X31
	0x0336956C BL 0x33940AC
	0x03369570 LDR X8, [X23]
	0x03369574 MOV W20, W0
	0x03369578 LDR W9, [X8 + 0xE0]
	0x0336957C CBNZ W9, 0x3369588
	0x03369580 MOV X0, X8
	0x03369584 BL 0x1C16DFC
	0x03369588 MOV X0, X19
	0x0336958C MOV W1, W20
	0x03369590 BL 0x3369608
	0x03369594 MOVZ W1, 0x3A
	0x03369598 MOV X0, X19
	0x0336959C MOV X2, X31
	0x033695A0 BL 0x3233D30
	0x033695A4 ADD X0, X31, 0x8
	0x033695A8 MOV X1, X31
	0x033695AC BL 0x339413C
	0x033695B0 MOV W1, W0
	0x033695B4 MOV X0, X19
	0x033695B8 BL 0x3369608
	0x033695BC LDP X20, X19, [X31 + 0x40]
	0x033695C0 LDP X22, X21, [X31 + 0x30]
	0x033695C4 LDP X24, X23, [X31 + 0x20]
	0x033695C8 LDR X30, [X31 + 0x10]
	0x033695CC ADD X31, X31, 0x50
	0x033695D0 RET
	0x033695D4 CBZ X19, 0x3369604
	0x033695D8 ADRP X8, 0xDBF000
	0x033695DC LDR X8, [X8 + 0x440]
	0x033695E0 MOV X0, X19
	0x033695E4 LDP X20, X19, [X31 + 0x40]
	0x033695E8 LDP X22, X21, [X31 + 0x30]
	0x033695EC LDR X1, [X8]
	0x033695F0 LDP X24, X23, [X31 + 0x20]
	0x033695F4 LDR X30, [X31 + 0x10]
	0x033695F8 MOV X2, X31
	0x033695FC ADD X31, X31, 0x50
	0x03369600 B 0x32333E0
	0x03369604 BL 0x1C16F20
	0x03369608 STP X30, X21, [X31 - 0x20]!
	0x0336960C STP X20, X19, [X31 + 0x10]
	0x03369610 CBZ X0, 0x3369660
	0x03369614 MOVZ W8, 0x6667
	0x03369618 MOVK W8, 0x66660000
	0x0336961C SMADDL X8, X1, X8, X31
	0x03369620 UBFM X9, X8, 0x3F, 0x3F
	0x03369624 SBFM X8, X8, 0x22, 0x3F
	0x03369628 ADD W21, W8, W9
	0x0336962C MOV W20, W1
	0x03369630 ADD W1, W21, 0x30
	0x03369634 MOV X2, X31
	0x03369638 MOV X19, X0
	0x0336963C BL 0x3233D30
	0x03369640 MOVZ W8, 0xA
	0x03369644 MSUB W8, W21, W8, W20
	0x03369648 MOV X0, X19
	0x0336964C LDP X20, X19, [X31 + 0x10]
	0x03369650 ADD W1, W8, 0x30
	0x03369654 MOV X2, X31
	0x03369658 LDP X30, X21, [X31], #0x20
	0x0336965C B 0x3233D30
	0x03369660 BL 0x1C16F20
	0x03369664 STR X30, [X31 - 0x30]!
	0x03369668 STP X22, X21, [X31 + 0x10]
	0x0336966C STP X20, X19, [X31 + 0x20]
	0x03369670 ADRP X22, 0x1073000
	0x03369674 LDRB W8, [X22 + 0xEB9]
	0x03369678 MOV X19, X2
	0x0336967C MOV X20, X1
	0x03369680 MOV X21, X0
	0x03369684 TBNZ X8, 0x0, 0x33696A8
	0x03369688 ADRP X0, 0xD8A000
	0x0336968C LDR X0, [X0 + 0xDD8]
	0x03369690 BL 0x1C16CF4
	0x03369694 ADRP X0, 0xDBF000
	0x03369698 LDR X0, [X0 + 0x398]
	0x0336969C BL 0x1C16CF4
	0x033696A0 MOVZ W8, 0x1
	0x033696A4 STRB W8, [X22 + 0xEB9]
	0x033696A8 CBZ W20, 0x33698BC
	0x033696AC LDRH W8, [X21]
	0x033696B0 CMP W8, 0x55
	0x033696B4 B.HI 0x33696F8
	0x033696B8 SUB W8, W8, 0x44
	0x033696BC CMP W8, 0x11
	0x033696C0 B.HI 0x33698C4
	0x033696C4 ADRP X9, 0xFFFFFFFFFD82D000
	0x033696C8 ADD X9, X9, 0x76A
	0x033696CC ADR X10, 0x10
	0x033696D0 LDRB W11, [X9, X8, LSL]
	0x033696D4 ADD X10, X10, X11, 0x2, LSL
	0x033696D8 BR X10
	0x033696DC CBZ X19, 0x33698C0
	0x033696E0 MOV X0, X19
	0x033696E4 LDP X20, X19, [X31 + 0x20]
	0x033696E8 LDP X22, X21, [X31 + 0x10]
	0x033696EC MOV X1, X31
	0x033696F0 LDR X30, [X31], #0x30
	0x033696F4 B 0x332546C
	0x033696F8 SUB W9, W8, 0x64
	0x033696FC CMP W9, 0x15
	0x03369700 B.HI 0x33697E0
	0x03369704 ADRP X8, 0xFFFFFFFFFD82D000
	0x03369708 ADD X8, X8, 0x754
	0x0336970C ADR X10, 0x10
	0x03369710 LDRB W11, [X8, X9, LSL]
	0x03369714 ADD X10, X10, X11, 0x2, LSL
	0x03369718 BR X10
	0x0336971C CBZ X19, 0x33698C0
	0x03369720 MOV X0, X19
	0x03369724 LDP X20, X19, [X31 + 0x20]
	0x03369728 LDP X22, X21, [X31 + 0x10]
	0x0336972C MOV X1, X31
	0x03369730 LDR X30, [X31], #0x30
	0x03369734 B 0x332569C
	0x03369738 CBZ X19, 0x33698C0
	0x0336973C MOV X0, X19
	0x03369740 LDP X20, X19, [X31 + 0x20]
	0x03369744 LDP X22, X21, [X31 + 0x10]
	0x03369748 MOV X1, X31
	0x0336974C LDR X30, [X31], #0x30
	0x03369750 B 0x33255DC
	0x03369754 ADRP X8, 0xDBF000
	0x03369758 LDR X8, [X8 + 0x398]
	0x0336975C LDP X20, X19, [X31 + 0x20]
	0x03369760 LDP X22, X21, [X31 + 0x10]
	0x03369764 LDR X0, [X8]
	0x03369768 LDR X30, [X31], #0x30
	0x0336976C RET
	0x03369770 CBZ X19, 0x33698C0
	0x03369774 MOV X0, X19
	0x03369778 LDP X20, X19, [X31 + 0x20]
	0x0336977C LDP X22, X21, [X31 + 0x10]
	0x03369780 MOV X1, X31
	0x03369784 LDR X30, [X31], #0x30
	0x03369788 B 0x332565C
	0x0336978C CBZ X19, 0x33698C0
	0x03369790 MOV X0, X19
	0x03369794 LDP X20, X19, [X31 + 0x20]
	0x03369798 LDP X22, X21, [X31 + 0x10]
	0x0336979C MOV X1, X31
	0x033697A0 LDR X30, [X31], #0x30
	0x033697A4 B 0x33254E0
	0x033697A8 CBZ X19, 0x33698C0
	0x033697AC MOV X0, X19
	0x033697B0 LDP X20, X19, [X31 + 0x20]
	0x033697B4 LDP X22, X21, [X31 + 0x10]
	0x033697B8 MOV X1, X31
	0x033697BC LDR X30, [X31], #0x30
	0x033697C0 B 0x332584C
	0x033697C4 CBZ X19, 0x33698C0
	0x033697C8 MOV X0, X19
	0x033697CC LDP X20, X19, [X31 + 0x20]
	0x033697D0 LDP X22, X21, [X31 + 0x10]
	0x033697D4 MOV X1, X31
	0x033697D8 LDR X30, [X31], #0x30
	0x033697DC B 0x332551C
	0x033697E0 CMP W8, 0x59
	0x033697E4 B.NE 0x33698C4
	0x033697E8 CBZ X19, 0x33698C0
	0x033697EC MOV X0, X19
	0x033697F0 LDP X20, X19, [X31 + 0x20]
	0x033697F4 LDP X22, X21, [X31 + 0x10]
	0x033697F8 MOV X1, X31
	0x033697FC LDR X30, [X31], #0x30
	0x03369800 B 0x3325AC0
	0x03369804 CBZ X19, 0x33698C0
	0x03369808 MOV X0, X19
	0x0336980C MOV X1, X31
	0x03369810 BL 0x33254E0
	0x03369814 MOV X20, X0
	0x03369818 MOV X0, X19
	0x0336981C MOV X1, X31
	0x03369820 BL 0x332572C
	0x03369824 ADRP X8, 0xD8A000
	0x03369828 LDR X8, [X8 + 0xDD8]
	0x0336982C MOV X2, X0
	0x03369830 MOV X0, X20
	0x03369834 LDP X20, X19, [X31 + 0x20]
	0x03369838 LDR X1, [X8]
	0x0336983C LDP X22, X21, [X31 + 0x10]
	0x03369840 MOV X3, X31
	0x03369844 LDR X30, [X31], #0x30
	0x03369848 B 0x32274B8
	0x0336984C CBZ X19, 0x33698C0
	0x03369850 MOV X0, X19
	0x03369854 LDP X20, X19, [X31 + 0x20]
	0x03369858 LDP X22, X21, [X31 + 0x10]
	0x0336985C MOV X1, X31
	0x03369860 LDR X30, [X31], #0x30
	0x03369864 B 0x33257D8
	0x03369868 CBZ X19, 0x33698C0
	0x0336986C MOV X0, X19
	0x03369870 LDP X20, X19, [X31 + 0x20]
	0x03369874 LDP X22, X21, [X31 + 0x10]
	0x03369878 MOV X1, X31
	0x0336987C LDR X30, [X31], #0x30
	0x03369880 B 0x3325798
	0x03369884 CBZ X19, 0x33698C0
	0x03369888 MOV X0, X19
	0x0336988C LDP X20, X19, [X31 + 0x20]
	0x03369890 LDP X22, X21, [X31 + 0x10]
	0x03369894 MOV X1, X31
	0x03369898 LDR X30, [X31], #0x30
	0x0336989C B 0x332572C
	0x033698A0 CBZ X19, 0x33698C0
	0x033698A4 MOV X0, X19
	0x033698A8 LDP X20, X19, [X31 + 0x20]
	0x033698AC LDP X22, X21, [X31 + 0x10]
	0x033698B0 MOV X1, X31
	0x033698B4 LDR X30, [X31], #0x30
	0x033698B8 B 0x3325A80
	0x033698BC BL 0x1C16F28
	0x033698C0 BL 0x1C16F20
	0x033698C4 ADRP X0, 0xDB7000
	0x033698C8 LDR X0, [X0 + 0xC08]
	0x033698CC BL 0x1C16D08
	0x033698D0 BL 0x1C16F10
	0x033698D4 MOV X19, X0
	0x033698D8 ADRP X0, 0xDB9000
	0x033698DC LDR X0, [X0 + 0x618]
	0x033698E0 BL 0x1C16D08
	0x033698E4 MOV X1, X0
	0x033698E8 MOV X0, X19
	0x033698EC BL 0x33674A0
	0x033698F0 ADRP X0, 0xDC1000
	0x033698F4 LDR X0, [X0 + 0xBB0]
	0x033698F8 BL 0x1C16D08
	0x033698FC MOV X1, X0
	0x03369900 MOV X0, X19
	0x03369904 BL 0x1C16DEC
	0x03369908 STR X30, [X31 - 0x50]!
	0x0336990C STP X26, X25, [X31 + 0x10]
	0x03369910 STP X24, X23, [X31 + 0x20]
	0x03369914 STP X22, X21, [X31 + 0x30]
	0x03369918 STP X20, X19, [X31 + 0x40]
	0x0336991C ADRP X24, 0x1073000
	0x03369920 LDRB W8, [X24 + 0xEBA]
	0x03369924 MOV X23, X4
	0x03369928 MOV X21, X3
	0x0336992C MOV X22, X2
	0x03369930 MOV X19, X1
	0x03369934 MOV X20, X0
	0x03369938 TBNZ X8, 0x0, 0x3369998
	0x0336993C ADRP X0, 0xDBF000
	0x03369940 LDR X0, [X0 + 0x328]
	0x03369944 BL 0x1C16CF4
	0x03369948 ADRP X0, 0xDBF000
	0x0336994C LDR X0, [X0 + 0x548]
	0x03369950 BL 0x1C16CF4
	0x03369954 ADRP X0, 0xD8B000
	0x03369958 LDR X0, [X0 + 0x9F0]
	0x0336995C BL 0x1C16CF4
	0x03369960 ADRP X0, 0xDC1000
	0x03369964 LDR X0, [X0 + 0xBB8]
	0x03369968 BL 0x1C16CF4
	0x0336996C ADRP X0, 0xDBF000
	0x03369970 LDR X0, [X0 + 0x310]
	0x03369974 BL 0x1C16CF4
	0x03369978 ADRP X0, 0xD8C000
	0x0336997C LDR X0, [X0 + 0x570]
	0x03369980 BL 0x1C16CF4
	0x03369984 ADRP X0, 0xD8A000
	0x03369988 LDR X0, [X0 + 0x6C0]
	0x0336998C BL 0x1C16CF4
	0x03369990 MOVZ W8, 0x1
	0x03369994 STRB W8, [X24 + 0xEBA]
	0x03369998 CBZ W19, 0x3369C4C
	0x0336999C LDRH W8, [X20]
	0x033699A0 ADRP X26, 0xDBF000
	0x033699A4 LDR X26, [X26 + 0x548]
	0x033699A8 CMP W8, 0x52
	0x033699AC B.HI 0x33699C4
	0x033699B0 CMP W8, 0x4F
	0x033699B4 B.EQ 0x3369A9C
	0x033699B8 CMP W8, 0x52
	0x033699BC B.EQ 0x33699E8
	0x033699C0 B 0x3369AC0
	0x033699C4 SUB W9, W8, 0x6F
	0x033699C8 CMP W9, 0x6
	0x033699CC B.HI 0x3369AF8
	0x033699D0 ADRP X8, 0xFFFFFFFFFD82D000
	0x033699D4 ADD X8, X8, 0x77C
	0x033699D8 ADR X10, 0x10
	0x033699DC LDRB W11, [X8, X9, LSL]
	0x033699E0 ADD X10, X10, X11, 0x2, LSL
	0x033699E4 BR X10
	0x033699E8 LDR X0, [X26]
	0x033699EC LDR X24, [X23]
	0x033699F0 LDR W8, [X0 + 0xE0]
	0x033699F4 CBNZ W8, 0x3369A00
	0x033699F8 BL 0x1C16DFC
	0x033699FC LDR X0, [X26]
	0x03369A00 ADRP X8, 0xD8C000
	0x03369A04 LDR X8, [X8 + 0x570]
	0x03369A08 LDR X9, [X0 + 0xB8]
	0x03369A0C LDR X8, [X8]
	0x03369A10 LDR X25, [X9]
	0x03369A14 LDR W10, [X8 + 0xE0]
	0x03369A18 CBNZ W10, 0x3369A24
	0x03369A1C MOV X0, X8
	0x03369A20 BL 0x1C16DFC
	0x03369A24 MOV X0, X24
	0x03369A28 MOV X1, X25
	0x03369A2C MOV X2, X31
	0x03369A30 BL 0x3394CE4
	0x03369A34 ADRP X8, 0xD8B000
	0x03369A38 LDR X8, [X8 + 0x9F0]
	0x03369A3C TBZ X0, 0x0, 0x3369A6C
	0x03369A40 LDR X0, [X8]
	0x03369A44 LDR X24, [X22]
	0x03369A48 LDR X23, [X23]
	0x03369A4C LDR W8, [X0 + 0xE0]
	0x03369A50 CBNZ W8, 0x3369A58
	0x03369A54 BL 0x1C16DFC
	0x03369A58 MOV X0, X24
	0x03369A5C MOV X1, X23
	0x03369A60 BL 0x3362F18
	0x03369A64 STR X0, [X22]
	0x03369A68 B 0x3369A9C
	0x03369A6C LDR X0, [X8]
	0x03369A70 LDR W8, [X0 + 0xE0]
	0x03369A74 CBNZ W8, 0x3369A7C
	0x03369A78 BL 0x1C16DFC
	0x03369A7C MOV X0, X22
	0x03369A80 BL 0x336139C
	0x03369A84 CMP W0, 0x2
	0x03369A88 B.NE 0x3369A9C
	0x03369A8C LDR X0, [X26]
	0x03369A90 LDR W8, [X0 + 0xE0]
	0x03369A94 CBNZ W8, 0x3369A9C
	0x03369A98 BL 0x1C16DFC
	0x03369A9C ADRP X8, 0xDBF000
	0x03369AA0 LDR X8, [X8 + 0x328]
	0x03369AA4 LDR X0, [X8]
	0x03369AA8 LDR W8, [X0 + 0xE0]
	0x03369AAC CBNZ W8, 0x3369AB4
	0x03369AB0 BL 0x1C16DFC
	0x03369AB4 MOV X0, X31
	0x03369AB8 BL 0x3324B20
	0x03369ABC STR X0, [X21]
	0x03369AC0 LDR X0, [X26]
	0x03369AC4 LDR X21, [X21]
	0x03369AC8 LDR W8, [X0 + 0xE0]
	0x03369ACC CBNZ W8, 0x3369AD4
	0x03369AD0 BL 0x1C16DFC
	0x03369AD4 MOV X0, X20
	0x03369AD8 MOV X1, X19
	0x03369ADC MOV X2, X21
	0x03369AE0 LDP X20, X19, [X31 + 0x40]
	0x03369AE4 LDP X22, X21, [X31 + 0x30]
	0x03369AE8 LDP X24, X23, [X31 + 0x20]
	0x03369AEC LDP X26, X25, [X31 + 0x10]
	0x03369AF0 LDR X30, [X31], #0x50
	0x03369AF4 B 0x3369664
	0x03369AF8 CMP W8, 0x55
	0x03369AFC B.NE 0x3369AC0
	0x03369B00 LDR X0, [X26]
	0x03369B04 LDR X23, [X23]
	0x03369B08 LDR W8, [X0 + 0xE0]
	0x03369B0C CBNZ W8, 0x3369B18
	0x03369B10 BL 0x1C16DFC
	0x03369B14 LDR X0, [X26]
	0x03369B18 ADRP X8, 0xD8C000
	0x03369B1C LDR X8, [X8 + 0x570]
	0x03369B20 LDR X9, [X0 + 0xB8]
	0x03369B24 LDR X8, [X8]
	0x03369B28 LDR X24, [X9]
	0x03369B2C LDR W10, [X8 + 0xE0]
	0x03369B30 CBNZ W10, 0x3369B3C
	0x03369B34 MOV X0, X8
	0x03369B38 BL 0x1C16DFC
	0x03369B3C MOV X0, X23
	0x03369B40 MOV X1, X24
	0x03369B44 MOV X2, X31
	0x03369B48 BL 0x3394CE4
	0x03369B4C TBNZ X0, 0x0, 0x3369C58
	0x03369B50 LDR X0, [X21]
	0x03369B54 CBZ X0, 0x3369C50
	0x03369B58 MOV X1, X31
	0x03369B5C BL 0x3324F44
	0x03369B60 CBZ X0, 0x3369C9C
	0x03369B64 ADRP X8, 0xDBF000
	0x03369B68 LDR X8, [X8 + 0x328]
	0x03369B6C LDR X9, [X0]
	0x03369B70 LDR X1, [X8]
	0x03369B74 CMP X9, X1
	0x03369B78 B.NE 0x3369C54
	0x03369B7C STR X0, [X21]
	0x03369B80 LDR X1, [X8]
	0x03369B84 LDR X8, [X0]
	0x03369B88 CMP X8, X1
	0x03369B8C B.NE 0x3369C54
	0x03369B90 LDR X0, [X0 + 0x78]
	0x03369B94 CBZ X0, 0x3369C50
	0x03369B98 MOV X1, X31
	0x03369B9C BL 0x33BE520
	0x03369BA0 ADRP X8, 0xD8A000
	0x03369BA4 LDR X8, [X8 + 0x6C0]
	0x03369BA8 ADRP X9, 0xDC1000
	0x03369BAC MOV X23, X0
	0x03369BB0 LDR X8, [X8]
	0x03369BB4 LDR X9, [X9 + 0xBB8]
	0x03369BB8 LDR W10, [X8 + 0xE0]
	0x03369BBC LDR X24, [X9]
	0x03369BC0 CBNZ W10, 0x3369BCC
	0x03369BC4 MOV X0, X8
	0x03369BC8 BL 0x1C16DFC
	0x03369BCC MOV X0, X24
	0x03369BD0 MOV X1, X31
	0x03369BD4 BL 0x338C698
	0x03369BD8 MOV X1, X0
	0x03369BDC MOV X0, X23
	0x03369BE0 MOV X2, X31
	0x03369BE4 BL 0x3395F0C
	0x03369BE8 TBZ X0, 0x0, 0x3369C24
	0x03369BEC ADRP X8, 0xDBF000
	0x03369BF0 LDR X8, [X8 + 0x310]
	0x03369BF4 LDR X23, [X21]
	0x03369BF8 LDR X0, [X8]
	0x03369BFC LDR W8, [X0 + 0xE0]
	0x03369C00 CBNZ W8, 0x3369C08
	0x03369C04 BL 0x1C16DFC
	0x03369C08 MOV X0, X31
	0x03369C0C BL 0x3324660
	0x03369C10 CBZ X23, 0x3369C50
	0x03369C14 MOV X1, X0
	0x03369C18 MOV X0, X23
	0x03369C1C MOV X2, X31
	0x03369C20 BL 0x3324888
	0x03369C24 ADRP X8, 0xD8B000
	0x03369C28 LDR X8, [X8 + 0x9F0]
	0x03369C2C LDR X0, [X8]
	0x03369C30 LDR W8, [X0 + 0xE0]
	0x03369C34 CBNZ W8, 0x3369C3C
	0x03369C38 BL 0x1C16DFC
	0x03369C3C MOV X0, X22
	0x03369C40 BL 0x3362548
	0x03369C44 STR X0, [X22]
	0x03369C48 B 0x3369AC0
	0x03369C4C BL 0x1C16F28
	0x03369C50 BL 0x1C16F20
	0x03369C54 BL 0x1C171E0
	0x03369C58 ADRP X0, 0xDB7000
	0x03369C5C LDR X0, [X0 + 0xC08]
	0x03369C60 BL 0x1C16D08
	0x03369C64 BL 0x1C16F10
	0x03369C68 MOV X19, X0
	0x03369C6C ADRP X0, 0xDB9000
	0x03369C70 LDR X0, [X0 + 0x618]
	0x03369C74 BL 0x1C16D08
	0x03369C78 MOV X1, X0
	0x03369C7C MOV X0, X19
	0x03369C80 BL 0x33674A0
	0x03369C84 ADRP X0, 0xDC1000
	0x03369C88 LDR X0, [X0 + 0xBC0]
	0x03369C8C BL 0x1C16D08
	0x03369C90 MOV X1, X0
	0x03369C94 MOV X0, X19
	0x03369C98 BL 0x1C16DEC
	0x03369C9C STR X31, [X21]
	0x03369CA0 BL 0x1C16F20
	0x03369CA4 RET
	0x03369CA8 SUB X31, X31, 0x60
	0x03369CAC STP X30, X0, [X31 + 0x10]
	0x03369CB0 STP X26, X25, [X31 + 0x20]
	0x03369CB4 STP X24, X23, [X31 + 0x30]
	0x03369CB8 STP X22, X21, [X31 + 0x40]
	0x03369CBC STP X20, X19, [X31 + 0x50]
	0x03369CC0 ADRP X24, 0x1073000
	0x03369CC4 STR X1, [X31 + 0x8]
	0x03369CC8 ADRP X25, 0xDBF000
	0x03369CCC LDRB W8, [X24 + 0xEC0]
	0x03369CD0 LDR X25, [X25 + 0x548]
	0x03369CD4 MOV X22, X4
	0x03369CD8 MOV X20, X3
	0x03369CDC MOV X19, X2
	0x03369CE0 MOV X21, X1
	0x03369CE4 MOV X23, X0
	0x03369CE8 TBNZ X8, 0x0, 0x3369D3C
	0x03369CEC ADRP X0, 0xDBF000
	0x03369CF0 LDR X0, [X0 + 0x548]
	0x03369CF4 BL 0x1C16CF4
	0x03369CF8 ADRP X0, 0xD8B000
	0x03369CFC LDR X0, [X0 + 0x9F0]
	0x03369D00 BL 0x1C16CF4
	0x03369D04 ADRP X0, 0xDB8000
	0x03369D08 LDR X0, [X0 + 0x850]
	0x03369D0C BL 0x1C16CF4
	0x03369D10 ADRP X0, 0xDB9000
	0x03369D14 LDR X0, [X0 + 0x588]
	0x03369D18 BL 0x1C16CF4
	0x03369D1C ADRP X0, 0xD8C000
	0x03369D20 LDR X0, [X0 + 0x570]
	0x03369D24 BL 0x1C16CF4
	0x03369D28 ADRP X0, 0xDBE000
	0x03369D2C LDR X0, [X0 + 0xA38]
	0x03369D30 BL 0x1C16CF4
	0x03369D34 MOVZ W8, 0x1
	0x03369D38 STRB W8, [X24 + 0xEC0]
	0x03369D3C LDR X0, [X25]
	0x03369D40 ADRP X26, 0xD8C000
	0x03369D44 LDR W8, [X0 + 0xE0]
	0x03369D48 LDR X26, [X26 + 0x570]
	0x03369D4C CBNZ W8, 0x3369D58
	0x03369D50 BL 0x1C16DFC
	0x03369D54 LDR X0, [X25]
	0x03369D58 LDR X8, [X26]
	0x03369D5C LDR X9, [X0 + 0xB8]
	0x03369D60 LDR W10, [X8 + 0xE0]
	0x03369D64 LDR X24, [X9]
	0x03369D68 CBNZ W10, 0x3369D74
	0x03369D6C MOV X0, X8
	0x03369D70 BL 0x1C16DFC
	0x03369D74 MOV X0, X21
	0x03369D78 MOV X1, X24
	0x03369D7C MOV X2, X31
	0x03369D80 BL 0x3394CD8
	0x03369D84 TBZ X0, 0x0, 0x3369DF0
	0x03369D88 ADRP X8, 0xD8B000
	0x03369D8C LDR X8, [X8 + 0x9F0]
	0x03369D90 LDR X0, [X8]
	0x03369D94 LDR W8, [X0 + 0xE0]
	0x03369D98 CBNZ W8, 0x3369DA0
	0x03369D9C BL 0x1C16DFC
	0x03369DA0 ADD X0, X31, 0x18
	0x03369DA4 BL 0x336139C
	0x03369DA8 MOV W21, W0
	0x03369DAC CMP W0, 0x1
	0x03369DB0 B.EQ 0x3369DFC
	0x03369DB4 CMP W21, 0x2
	0x03369DB8 B.NE 0x3369E04
	0x03369DBC ADRP X8, 0xDBE000
	0x03369DC0 LDR X8, [X8 + 0xA38]
	0x03369DC4 LDR X0, [X8]
	0x03369DC8 LDR W8, [X0 + 0xE0]
	0x03369DCC CBNZ W8, 0x3369DD4
	0x03369DD0 BL 0x1C16DFC
	0x03369DD4 MOV X0, X31
	0x03369DD8 BL 0x330A840
	0x03369DDC CBZ X0, 0x336A180
	0x03369DE0 MOV X1, X23
	0x03369DE4 MOV X2, X31
	0x03369DE8 BL 0x330D608
	0x03369DEC STR X0, [X31 + 0x8]
	0x03369DF0 MOVZ W8, 0x21
	0x03369DF4 MOVZ W21, 0x2
	0x03369DF8 B 0x3369E08
	0x03369DFC MOVZ W8, 0x1C
	0x03369E00 B 0x3369E08
	0x03369E04 MOVZ W8, 0x1B
	0x03369E08 CMP W8, W20
	0x03369E0C B.LE 0x3369E1C
	0x03369E10 MOV W0, W31
	0x03369E14 STR W31, [X22]
	0x03369E18 B 0x336A160
	0x03369E1C CMP W20, 0x1A
	0x03369E20 STR W8, [X22]
	0x03369E24 B.LS 0x336A17C
	0x03369E28 ADRP X8, 0xD8B000
	0x03369E2C LDR X8, [X8 + 0x9F0]
	0x03369E30 LDR X0, [X8]
	0x03369E34 LDR W8, [X0 + 0xE0]
	0x03369E38 CBNZ W8, 0x3369E40
	0x03369E3C BL 0x1C16DFC
	0x03369E40 ADD X0, X31, 0x18
	0x03369E44 BL 0x3361868
	0x03369E48 LDR X8, [X25]
	0x03369E4C MOV W22, W0
	0x03369E50 LDR W9, [X8 + 0xE0]
	0x03369E54 CBNZ W9, 0x3369E60
	0x03369E58 MOV X0, X8
	0x03369E5C BL 0x1C16DFC
	0x03369E60 MOVZ W24, 0xCCCD
	0x03369E64 MOVZ W8, 0x851F
	0x03369E68 MOVZ W9, 0x4DD3
	0x03369E6C MOVK W24, 0xCCCC0000
	0x03369E70 MOVK W8, 0x51EB0000
	0x03369E74 MOVK W9, 0x10620000
	0x03369E78 UMADDL X10, X22, X24, X31
	0x03369E7C UMADDL X8, X22, X8, X31
	0x03369E80 UMADDL X9, X22, X9, X31
	0x03369E84 MOVN W23, 0x9
	0x03369E88 UBFM X10, X10, 0x23, 0x3F
	0x03369E8C UBFM X8, X8, 0x25, 0x3F
	0x03369E90 UBFM X9, X9, 0x26, 0x3F
	0x03369E94 MADD W11, W10, W23, W22
	0x03369E98 MADD W10, W8, W23, W10
	0x03369E9C MADD W8, W9, W23, W8
	0x03369EA0 ADD W9, W9, 0x30
	0x03369EA4 STRH W9, [X19]
	0x03369EA8 ADD W9, W11, 0x30
	0x03369EAC STRH W9, [X19 + 0x6]
	0x03369EB0 MOVZ W22, 0x2D
	0x03369EB4 ADD W9, W10, 0x30
	0x03369EB8 ADD W8, W8, 0x30
	0x03369EBC ADD X0, X31, 0x18
	0x03369EC0 STRH W9, [X19 + 0x4]
	0x03369EC4 STRH W8, [X19 + 0x2]
	0x03369EC8 STRH W22, [X19 + 0x8]
	0x03369ECC BL 0x336152C
	0x03369ED0 UMADDL X8, X0, X24, X31
	0x03369ED4 UBFM X8, X8, 0x23, 0x3F
	0x03369ED8 MADD W9, W8, W23, W0
	0x03369EDC ADD W8, W8, 0x30
	0x03369EE0 ADD W9, W9, 0x30
	0x03369EE4 ADD X0, X31, 0x18
	0x03369EE8 STRH W8, [X19 + 0xA]
	0x03369EEC STRH W9, [X19 + 0xC]
	0x03369EF0 STRH W22, [X19 + 0xE]
	0x03369EF4 BL 0x3361168
	0x03369EF8 UMADDL X8, X0, X24, X31
	0x03369EFC UBFM X8, X8, 0x23, 0x3F
	0x03369F00 MADD W10, W8, W23, W0
	0x03369F04 MOVZ W9, 0x54
	0x03369F08 ADD W8, W8, 0x30
	0x03369F0C ADD W10, W10, 0x30
	0x03369F10 ADD X0, X31, 0x18
	0x03369F14 STRH W8, [X19 + 0x10]
	0x03369F18 STRH W10, [X19 + 0x12]
	0x03369F1C STRH W9, [X19 + 0x14]
	0x03369F20 BL 0x33612B4
	0x03369F24 UMADDL X8, X0, X24, X31
	0x03369F28 UBFM X8, X8, 0x23, 0x3F
	0x03369F2C MADD W9, W8, W23, W0
	0x03369F30 MOVZ W22, 0x3A
	0x03369F34 ADD W8, W8, 0x30
	0x03369F38 ADD W9, W9, 0x30
	0x03369F3C ADD X0, X31, 0x18
	0x03369F40 STRH W8, [X19 + 0x16]
	0x03369F44 STRH W9, [X19 + 0x18]
	0x03369F48 STRH W22, [X19 + 0x1A]
	0x03369F4C BL 0x33614A4
	0x03369F50 UMADDL X8, X0, X24, X31
	0x03369F54 UBFM X8, X8, 0x23, 0x3F
	0x03369F58 MADD W9, W8, W23, W0
	0x03369F5C ADD W8, W8, 0x30
	0x03369F60 ADD W9, W9, 0x30
	0x03369F64 ADD X0, X31, 0x18
	0x03369F68 STRH W8, [X19 + 0x1C]
	0x03369F6C STRH W9, [X19 + 0x1E]
	0x03369F70 STRH W22, [X19 + 0x20]
	0x03369F74 BL 0x3361760
	0x03369F78 UMADDL X8, X0, X24, X31
	0x03369F7C UBFM X8, X8, 0x23, 0x3F
	0x03369F80 MADD W10, W8, W23, W0
	0x03369F84 MOVZ W9, 0x2E
	0x03369F88 ADD W8, W8, 0x30
	0x03369F8C ADD W10, W10, 0x30
	0x03369F90 ADD X0, X31, 0x18
	0x03369F94 STRH W8, [X19 + 0x22]
	0x03369F98 STRH W10, [X19 + 0x24]
	0x03369F9C STRH W9, [X19 + 0x26]
	0x03369FA0 BL 0x3361708
	0x03369FA4 ADRP X8, 0xDB8000
	0x03369FA8 LDR X8, [X8 + 0x850]
	0x03369FAC MOV X22, X0
	0x03369FB0 LDR X8, [X8]
	0x03369FB4 LDR X8, [X8 + 0x20]
	0x03369FB8 LDRB W9, [X8 + 0x135]
	0x03369FBC TBNZ X9, 0x0, 0x3369FC8
	0x03369FC0 MOV X0, X8
	0x03369FC4 BL 0x1C5C684
	0x03369FC8 MOVZ X8, 0x42BD
	0x03369FCC MOVK X8, 0xE57A0000
	0x03369FD0 MOVK X8, 0x94D5
	0x03369FD4 ADRP X23, 0x1073000
	0x03369FD8 MOVK X8, 0xD6BF0000
	0x03369FDC LDRB W9, [X23 + 0xF06]
	0x00000000 INVALID
	0x03369FE4 MOVZ W10, 0x9680
	0x03369FE8 UBFM X8, X8, 0x17, 0x3F
	0x03369FEC MOVK W10, 0x980000
	0x03369FF0 MSUB X22, X8, X10, X22
	0x03369FF4 CBNZ W9, 0x336A00C
	0x03369FF8 ADRP X0, 0xDB9000
	0x03369FFC LDR X0, [X0 + 0x588]
	0x0336A000 BL 0x1C16CF4
	0x0336A004 MOVZ W8, 0x1
	0x0336A008 STRB W8, [X23 + 0xF06]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X19, 0x1075000
	015 Move W8, [X19+3766]
	016 Move X20, X5
	017 Move X24, X4
	018 Move X21, X3
	019 Move X22, X2
	020 Move X23, X1
	021 Move [X31+24], X0
	022 Move [X31+56], X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {62}
	027 Move X0, 0xDBC000
	028 Move X0, [X0+2912]
	029 Call 0x1C17CF4
	030 Move X0, 0xD8E000
	031 Move X0, [X0+3144]
	032 Call 0x1C17CF4
	033 Move X0, 0xDC1000
	034 Move X0, [X0+1352]
	035 Call 0x1C17CF4
	036 Move X0, 0xD8D000
	037 Move X0, [X0+2544]
	038 Call 0x1C17CF4
	039 Move X0, 0xDC0000
	040 Move X0, [X0+2352]
	041 Call 0x1C17CF4
	042 Move X0, 0xD8C000
	043 Move X0, [X0+1448]
	044 Call 0x1C17CF4
	045 Move X0, 0xDC3000
	046 Move X0, [X0+2960]
	047 Call 0x1C17CF4
	048 Move X0, 0xDBB000
	049 Move X0, [X0+40]
	050 Call 0x1C17CF4
	051 Move X0, 0xDB4000
	052 Move X0, [X0+3040]
	053 Call 0x1C17CF4
	054 Move X0, 0xDC1000
	055 Move X0, [X0+1224]
	056 Call 0x1C17CF4
	057 Move X0, 0xDC1000
	058 Move X0, [X0+1232]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X19+3766], W8
	062 Move [X31+48], X31
	063 Move [X31+44], W31
	064 NotImplemented "Instruction STRH not yet implemented."
	065 Compare X21, 0
	066 JumpIfEqual {1143}
	067 Move X19, 0xDC0000
	068 Move X26, [X21+120]
	069 Move X19, [X19+2352]
	070 Move X25, X20
	071 Compare X20, 0
	072 JumpIfNotEqual {77}
	073 Move W0, 16
	074 Move X1, X31
	075 Call StringBuilderCache.Acquire, X0
	076 Move X25, X0
	077 Move X0, [X19]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move X27, 0x1075000
	083 Move W8, [X27+2814]
	084 Compare W8, 0
	085 JumpIfNotEqual {91}
	086 Move X0, 0xDC0000
	087 Move X0, [X0+2352]
	088 Call 0x1C17CF4
	089 Move W8, 1
	090 Move [X27+2814], W8
	091 Move X0, [X19]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {97}
	095 Call 0x1C17DFC
	096 Move X0, [X19]
	097 Move X8, [X0+184]
	098 Move W8, [X8]
	099 Compare W8, 0
	100 JumpIfEqual {102}
	101 Move W8, 1
	102 Compare X26, 0
	103 JumpIfEqual {1143}
	104 Move X8, [X26]
	105 Move X0, X26
	106 Move X9, [X8+424]
	107 Move X1, [X8+432]
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move W8, W0
	110 Move X0, [X19]
	111 And W8, W8, 0xFFFF
	112 NotImplemented "Instruction CMP not yet implemented."
	113 NotImplemented "Instruction CSET not yet implemented."
	114 Move [X31+20], W8
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {119}
	118 Call 0x1C17DFC
	119 Move W8, [X27+2814]
	120 Compare W8, 0
	121 JumpIfNotEqual {127}
	122 Move X0, 0xDBF000
	123 Move X0, [X0+2352]
	124 Call 0x1C17CF4
	125 Move W8, 1
	126 Move [X27+2814], W8
	127 Move X0, [X19]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {133}
	131 Call 0x1C17DFC
	132 Move X0, [X19]
	133 Move X8, [X0+184]
	134 Move [X31], X20
	135 Move W8, [X8]
	136 Compare W8, 0
	137 JumpIfEqual {139}
	138 Move W8, 1
	139 Compare X26, 0
	140 JumpIfEqual {1143}
	141 Move X8, [X26]
	142 Move X0, X26
	143 Move X9, [X8+424]
	144 Move X1, [X8+432]
	145 NotImplemented "Instruction BLR not yet implemented."
	146 And W8, W0, 0xFFFF
	147 NotImplemented "Instruction CMP not yet implemented."
	148 NotImplemented "Instruction CSET not yet implemented."
	149 Move X20, [X31+24]
	150 Move [X31+16], W8
	151 Subtract W8, W22, 1
	152 Move [X31+12], W8
	153 Move X19, 0xDC0000
	154 Move X19, [X19+1352]
	155 Or X27, X31, 0x6666666666666666
	156 Move W28, W31
	157 NotImplemented "Instruction MOVK not yet implemented."
	158 Move W8, 1
	159 Move [X31+36], W8
	160 NotImplemented "Instruction CMP not yet implemented."
	161 NotImplemented "Instruction LDRH not yet implemented."
	162 NotImplemented "Instruction CMP not yet implemented."
	163 NotImplemented "Instruction CMP not yet implemented."
	164 NotImplemented "Instruction CMP not yet implemented."
	165 NotImplemented "Instruction CMP not yet implemented."
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X0, [X19]
	168 Move W8, [X0+224]
	169 Compare W8, 0
	170 JumpIfNotEqual {172}
	171 Call 0x1C17DFC
	172 Move X0, X23
	173 Move X1, X22
	174 Move W2, W28
	175 Call DateTimeFormat.ParseNextChar, X0, X1
	176 Move TEMP, X0
	177 And TEMP, TEMP, -2147483648
	178 Compare TEMP, -2147483648
	179 JumpIfEqual {1144}
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X8, 0xDC2000
	182 Move X8, [X8+2960]
	183 NotImplemented "Instruction STRH not yet implemented."
	184 Move X8, [X8]
	185 Move X9, [X8+56]
	186 Compare X9, 0
	187 JumpIfNotEqual {190}
	188 Move X0, X8
	189 Call 0x1C5D6E0
	190 Move X0, [X19]
	191 Move W8, [X0+224]
	192 Compare W8, 0
	193 JumpIfNotEqual {195}
	194 Call 0x1C17DFC
	195 Add X1, X31, 40
	196 Move W2, 1
	197 Move X0, X20
	198 Move X3, X21
	199 Move X4, X24
	200 Move X5, X25
	201 Call DateTimeFormat.FormatCustomized, X0, X1, X2, X3, X4
	202 NotImplemented "Instruction CMP not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 NotImplemented "Instruction CMP not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move X0, [X19]
	207 Move W8, [X0+224]
	208 Compare W8, 0
	209 JumpIfNotEqual {211}
	210 Call 0x1C17DFC
	211 Move X0, X23
	212 Move X1, X22
	213 Move W2, W28
	214 Call DateTimeFormat.ParseNextChar, X0, X1
	215 Move TEMP, X0
	216 And TEMP, TEMP, -2147483648
	217 Compare TEMP, -2147483648
	218 JumpIfEqual {1144}
	219 Compare X25, 0
	220 JumpIfEqual {1143}
	221 Move W1, W0
	222 Move X0, X25
	223 Move X2, X31
	224 Call StringBuilder.Append, X0, X1
	225 Move W8, 2
	226 Move [X31+52], W8
	227 NotImplemented "Instruction CMP not yet implemented."
	228 NotImplemented "Instruction CMP not yet implemented."
	229 NotImplemented "Instruction CMP not yet implemented."
	230 NotImplemented "Instruction CMP not yet implemented."
	231 NotImplemented "Instruction CMP not yet implemented."
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Move X0, [X19]
	234 Move W8, [X0+224]
	235 Compare W8, 0
	236 JumpIfNotEqual {238}
	237 Call 0x1C17DFC
	238 Move W3, 116
	239 Move X0, X23
	240 Move X1, X22
	241 Move W2, W28
	242 Call DateTimeFormat.ParseRepeatPattern, X0, X1, X2
	243 Move X8, 0xD8C000
	244 Move X8, [X8+2544]
	245 Move [X31+52], W0
	246 Move W19, W0
	247 Move X8, [X8]
	248 Move W9, [X8+224]
	249 Compare W9, 0
	250 JumpIfNotEqual {253}
	251 Move X0, X8
	252 Call 0x1C17DFC
	253 Add X0, X31, 56
	254 Call DateTime.get_Hour, X0
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move X19, 0xDC0000
	257 Move X19, [X19+1352]
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Move X0, X21
	260 Move X1, X31
	261 Call DateTimeFormatInfo.get_PMDesignator, X0
	262 Compare X0, 0
	263 JumpIfEqual {1143}
	264 Move W8, [X0+16]
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Move X0, X21
	267 Move X1, X31
	268 Call DateTimeFormatInfo.get_PMDesignator, X0
	269 Compare X0, 0
	270 JumpIfNotEqual {925}
	271 NotImplemented "Instruction CMP not yet implemented."
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Move X0, X21
	274 Move X1, X31
	275 Call DateTimeFormatInfo.get_DateSeparator, X0
	276 Compare X25, 0
	277 JumpIfNotEqual {544}
	278 Subtract W8, W29, 100
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move X11, -41754624
	281 Add X11, X11, 1856
	282 NotImplemented "Instruction ADR not yet implemented."
	283 NotImplemented "Instruction LDRH not yet implemented."
	284 Add X9, X9, X10
	285 CallNoReturn X9
	286 Move X0, [X19]
	287 Move W8, [X0+224]
	288 Compare W8, 0
	289 JumpIfNotEqual {291}
	290 Call 0x1C17DFC
	291 Move W3, 100
	292 Move X0, X23
	293 Move X1, X22
	294 Move W2, W28
	295 Call DateTimeFormat.ParseRepeatPattern, X0, X1, X2
	296 Move [X31+52], W0
	297 Compare X26, 0
	298 JumpIfEqual {1143}
	299 Move X8, [X26]
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Move X9, [X8+504]
	302 Move X2, [X8+512]
	303 Move X0, X26
	304 Move X1, X20
	305 NotImplemented "Instruction BLR not yet implemented."
	306 Move X8, [X19]
	307 Move W19, [X31+52]
	308 Move W29, W0
	309 Move W9, [X8+224]
	310 Compare W9, 0
	311 JumpIfNotEqual {314}
	312 Move X0, X8
	313 Call 0x1C17DFC
	314 Move W0, W29
	315 Move W1, W19
	316 Move X2, X21
	317 Call DateTimeFormat.FormatDayOfWeek, X0, X1, X2
	318 Compare X25, 0
	319 JumpIfNotEqual {1108}
	320 NotImplemented "Instruction CMP not yet implemented."
	321 NotImplemented "Instruction CMP not yet implemented."
	322 Move X0, [X19]
	323 Move W8, 1
	324 Move [X31+52], W8
	325 Move W8, [X0+224]
	326 Compare W8, 0
	327 JumpIfNotEqual {329}
	328 Call 0x1C17DFC
	329 Move X0, X20
	330 Move X1, X24
	331 Move X2, X25
	332 Call DateTimeFormat.FormatCustomizedRoundripTimeZone, X0, X1, X2
	333 NotImplemented "Instruction CMP not yet implemented."
	334 NotImplemented "Instruction CMP not yet implemented."
	335 Move X0, [X19]
	336 Move W8, [X0+224]
	337 Compare W8, 0
	338 JumpIfNotEqual {340}
	339 Call 0x1C17DFC
	340 Move W3, 122
	341 Move X0, X23
	342 Move X1, X22
	343 Move W2, W28
	344 Call DateTimeFormat.ParseRepeatPattern, X0, X1, X2
	345 Move W8, [X31+36]
	346 Move W4, W0
	347 Move [X31+52], W0
	348 Move X0, X20
	349 And W5, W8, 1
	350 Move X1, X24
	351 Move X6, X25
	352 Call DateTimeFormat.FormatCustomizedTimeZone, X0, X1, X2, X3, X4, X5
	353 Compare X25, 0
	354 JumpIfEqual {1143}
	355 Move X0, X25
	356 Move W1, W29
	357 Move X2, X31
	358 Call StringBuilder.Append, X0, X1
	359 Move X0, [X19]
	360 Move W8, [X0+224]
	361 Compare W8, 0
	362 JumpIfNotEqual {364}
	363 Call 0x1C17DFC
	364 Move X0, X23
	365 Move X1, X22
	366 Move W2, W28
	367 Move X3, X25
	368 Call DateTimeFormat.ParseQuoteString, X0, X1, X2
	369 Move [X31+52], W0
	370 Move X0, [X19]
	371 Move W8, [X0+224]
	372 Compare W8, 0
	373 JumpIfNotEqual {375}
	374 Call 0x1C17DFC
	375 Move X0, X23
	376 Move X1, X22
	377 Move W2, W28
	378 Move W3, W29
	379 Call DateTimeFormat.ParseRepeatPattern, X0, X1, X2
	380 NotImplemented "Instruction CMP not yet implemented."
	381 Move [X31+52], W0
	382 Move X8, 0xD8C000
	383 Move X8, [X8+2544]
	384 Move X20, X24
	385 Move X0, [X8]
	386 Move W8, [X0+224]
	387 Compare W8, 0
	388 JumpIfNotEqual {390}
	389 Call 0x1C17DFC
	390 Add X0, X31, 56
	391 Call DateTime.get_Ticks, X0
	392 Move X8, 0xD8B000
	393 Move X8, [X8+1448]
	394 Move W24, [X31+52]
	395 Move X19, X0
	396 Move X8, [X8]
	397 Move W9, [X8+224]
	398 Compare W9, 0
	399 JumpIfNotEqual {402}
	400 Move X0, X8
	401 Call 0x1C17DFC
	402 Move X8, 0x42BD
	403 NotImplemented "Instruction MOVK not yet implemented."
	404 NotImplemented "Instruction MOVK not yet implemented."
	405 NotImplemented "Instruction MOVK not yet implemented."
	406 NotImplemented "Instruction SMULH not yet implemented."
	407 Add X8, X8, X19
	408 Move W9, 7
	409 NotImplemented "Instruction SBFM not yet implemented."
	410 Subtract W9, W9, W24
	411 Add X8, X10, X8
	412 Move W10, 0x9680
	413 NotImplemented "Instruction MOVK not yet implemented."
	414 NotImplemented "Instruction SCVTF not yet implemented."
	415 Move D0, 8.000000000465661
	416 Move X0, X31
	417 NotImplemented "Instruction MSUB not yet implemented."
	418 Call Math.Pow, V0, V1
	419 Move X9, 0x7FF00000
	420 Move D1, X9
	421 NotImplemented "Instruction FCVTZS not yet implemented."
	422 NotImplemented "Instruction FCMP not yet implemented."
	423 Move X9, 0x80000000
	424 NotImplemented "Instruction CSEL not yet implemented."
	425 NotImplemented "Instruction CMP not yet implemented."
	426 NotImplemented "Instruction SDIV not yet implemented."
	427 Move X19, 0xDC0000
	428 Move X19, [X19+1352]
	429 Move [X31+44], W8
	430 Move X24, X20
	431 Move X0, [X19]
	432 Move W8, [X0+224]
	433 Compare W8, 0
	434 JumpIfNotEqual {437}
	435 Call 0x1C17DFC
	436 Move X0, [X19]
	437 Move X8, [X0+184]
	438 Move X20, [X31+24]
	439 Move X8, [X8+40]
	440 Compare X8, 0
	441 JumpIfEqual {1143}
	442 Move W9, [X31+52]
	443 Move W10, [X8+24]
	444 Subtract W9, W9, 1
	445 NotImplemented "Instruction CMP not yet implemented."
	446 Move X10, 0xD8D000
	447 Move X10, [X10+3144]
	448 Add X8, X8, W9
	449 Move X0, [X10]
	450 Move X0, [X19]
	451 Move W8, [X0+224]
	452 Compare W8, 0
	453 JumpIfNotEqual {455}
	454 Call 0x1C17DFC
	455 Move W3, 77
	456 Move X0, X23
	457 Move X1, X22
	458 Move W2, W28
	459 Call DateTimeFormat.ParseRepeatPattern, X0, X1, X2
	460 Move [X31+52], W0
	461 Compare X26, 0
	462 JumpIfEqual {1143}
	463 Move X8, [X26]
	464 Move X0, X26
	465 Move X1, X20
	466 Move X9, [X8+584]
	467 Move X2, [X8+592]
	468 NotImplemented "Instruction BLR not yet implemented."
	469 Move W19, [X31+52]
	470 Move W29, W0
	471 NotImplemented "Instruction CMP not yet implemented."
	472 Move X19, 0xDC0000
	473 Move W8, [X31+20]
	474 Move X19, [X19+1352]
	475 Move TEMP, X8
	476 And TEMP, TEMP, 1
	477 Compare TEMP, 1
	478 JumpIfEqual {510}
	479 Move X8, 0xDBF000
	480 Move X8, [X8+2352]
	481 Move X0, [X8]
	482 Move W8, [X0+224]
	483 Compare W8, 0
	484 JumpIfNotEqual {486}
	485 Call 0x1C17DFC
	486 Move X8, 0x1074000
	487 Move W8, [X8+2814]
	488 Compare W8, 0
	489 JumpIfNotEqual {496}
	490 Move X0, 0xDBF000
	491 Move X0, [X0+2352]
	492 Call 0x1C17CF4
	493 Move X8, 0x1074000
	494 Move W9, 1
	495 Move [X8+2814], W9
	496 Move X19, 0xDBF000
	497 Move X19, [X19+2352]
	498 Move X0, [X19]
	499 Move W8, [X0+224]
	500 Compare W8, 0
	501 JumpIfNotEqual {504}
	502 Call 0x1C17DFC
	503 Move X0, [X19]
	504 Move X19, 0xDC0000
	505 Move X19, [X19+1352]
	506 Move X8, [X0+184]
	507 Move W8, [X8]
	508 Compare W8, 0
	509 JumpIfEqual {1095}
	510 Move X0, X21
	511 Move X1, X31
	512 Call DateTimeFormatInfo.get_FormatFlags, X0
	513 Move X8, [X19]
	514 Move W19, [X31+52]
	515 Move W9, [X8+224]
	516 Move TEMP, X0
	517 And TEMP, TEMP, 1
	518 Compare TEMP, 1
	519 JumpIfNotEqual {991}
	520 NotImplemented "Instruction CMP not yet implemented."
	521 Compare W9, 0
	522 JumpIfNotEqual {525}
	523 Move X0, X8
	524 Call 0x1C17DFC
	525 Move W4, 100
	526 Move X0, X23
	527 Move X1, X22
	528 Move W2, W28
	529 Move W3, W19
	530 Call DateTimeFormat.IsUseGenitiveForm, X0, X1, X2, X3
	531 And W2, W0, 1
	532 Move X0, X21
	533 Move W1, W29
	534 Move W3, W31
	535 Move X4, X31
	536 Call DateTimeFormatInfo.internalGetMonthName, X0, X1, X2, X3
	537 Compare X25, 0
	538 JumpIfNotEqual {1108}
	539 Move X0, X21
	540 Move X1, X31
	541 Call DateTimeFormatInfo.get_TimeSeparator, X0
	542 Compare X25, 0
	543 JumpIfEqual {1143}
	544 Move X1, X0
	545 Move X0, X25
	546 Move X2, X31
	547 Call StringBuilder.Append, X0, X1
	548 Move W8, 1
	549 Move [X31+52], W8
	550 Move X0, [X19]
	551 Move W8, [X0+224]
	552 Compare W8, 0
	553 JumpIfNotEqual {555}
	554 Call 0x1C17DFC
	555 Move W3, 115
	556 Move X0, X23
	557 Move X1, X22
	558 Move W2, W28
	559 Call DateTimeFormat.ParseRepeatPattern, X0, X1, X2
	560 Move X8, 0xD8C000
	561 Move X8, [X8+2544]
	562 Move [X31+52], W0
	563 Move X8, [X8]
	564 Move W9, [X8+224]
	565 Compare W9, 0
	566 JumpIfNotEqual {569}
	567 Move X0, X8
	568 Call 0x1C17DFC
	569 Add X0, X31, 56
	570 Call DateTime.get_Second, X0
	571 Move X0, [X19]
	572 Move W8, [X0+224]
	573 Compare W8, 0
	574 JumpIfNotEqual {576}
	575 Call 0x1C17DFC
	576 Move W3, 72
	577 Move X0, X23
	578 Move X1, X22
	579 Move W2, W28
	580 Call DateTimeFormat.ParseRepeatPattern, X0, X1, X2
	581 Move X8, 0xD8C000
	582 Move X8, [X8+2544]
	583 Move [X31+52], W0
	584 Move X8, [X8]
	585 Move W9, [X8+224]
	586 Compare W9, 0
	587 JumpIfNotEqual {590}
	588 Move X0, X8
	589 Call 0x1C17DFC
	590 Add X0, X31, 56
	591 Call DateTime.get_Hour, X0
	592 Compare X26, 0
	593 JumpIfEqual {1143}
	594 Move X8, [X26]
	595 Move X0, X26
	596 Move X1, X20
	597 Move X9, [X8+616]
	598 Move X2, [X8+624]
	599 NotImplemented "Instruction BLR not yet implemented."
	600 Move X8, [X19]
	601 Move [X31+48], W0
	602 Move W9, [X8+224]
	603 Compare W9, 0
	604 JumpIfNotEqual {607}
	605 Move X0, X8
	606 Call 0x1C17DFC
	607 Move W3, 121
	608 Move X0, X23
	609 Move X1, X22
	610 Move W2, W28
	611 Call DateTimeFormat.ParseRepeatPattern, X0, X1, X2
	612 Move W8, [X31+16]
	613 Move [X31+52], W0
	614 Move TEMP, X8
	615 And TEMP, TEMP, 1
	616 Compare TEMP, 1
	617 JumpIfEqual {661}
	618 Move X8, 0xDBB000
	619 Move X8, [X8+2912]
	620 Move X8, [X8]
	621 Move X8, [X8+184]
	622 Move W8, [X8+2]
	623 Compare W8, 0
	624 JumpIfNotEqual {661}
	625 Move W8, [X31+48]
	626 NotImplemented "Instruction CMP not yet implemented."
	627 Move W9, [X31+12]
	628 Add W8, W0, W28
	629 NotImplemented "Instruction CMP not yet implemented."
	630 NotImplemented "Instruction CMP not yet implemented."
	631 NotImplemented "Instruction LDRH not yet implemented."
	632 NotImplemented "Instruction CMP not yet implemented."
	633 Add W8, W8, 1
	634 NotImplemented "Instruction CMP not yet implemented."
	635 Move X9, 0xDC0000
	636 Move X9, [X9+1232]
	637 Move X0, [X9]
	638 Compare X0, 0
	639 JumpIfEqual {1143}
	640 NotImplemented "Instruction LDRH not yet implemented."
	641 Move W1, W31
	642 Move X2, X31
	643 Call String.get_Chars, X0, X1
	644 NotImplemented "Instruction CMP not yet implemented."
	645 Move X19, 0xDC0000
	646 Move X19, [X19+1352]
	647 Move X8, 0xDC0000
	648 Move X8, [X8+1224]
	649 Move X0, [X8]
	650 Compare X0, 0
	651 JumpIfEqual {1143}
	652 Move W1, W31
	653 Move X2, X31
	654 Call String.get_Chars, X0, X1
	655 Compare X25, 0
	656 JumpIfEqual {1143}
	657 Move W1, W0
	658 Move X0, X25
	659 Move X2, X31
	660 Call StringBuilder.Append, X0, X1
	661 Move X0, X21
	662 Move X1, X31
	663 Call DateTimeFormatInfo.get_HasForceTwoDigitYears, X0
	664 Move TEMP, X0
	665 And TEMP, TEMP, 1
	666 Compare TEMP, 1
	667 JumpIfNotEqual {849}
	668 Move X0, [X19]
	669 Move W19, [X31+48]
	670 Move W8, [X31+52]
	671 Move W10, 2
	672 Move W9, [X0+224]
	673 NotImplemented "Instruction CMP not yet implemented."
	674 NotImplemented "Instruction CSEL not yet implemented."
	675 Compare W9, 0
	676 JumpIfNotEqual {678}
	677 Call 0x1C17DFC
	678 Move X0, X25
	679 Move W1, W19
	680 Move W2, W29
	681 Move W9, [X31+52]
	682 Move X24, X20
	683 NotImplemented "Instruction CMP not yet implemented."
	684 Move W10, 0x6667
	685 NotImplemented "Instruction MOVK not yet implemented."
	686 NotImplemented "Instruction SMADDL not yet implemented."
	687 Move X20, [X31+24]
	688 Move X11, X10
	689 ShiftRight X11, 63
	690 And X11, X11, 0x7FFFFFFF
	691 NotImplemented "Instruction SBFM not yet implemented."
	692 Add W10, W10, W11
	693 Move W12, 10
	694 NotImplemented "Instruction MSUB not yet implemented."
	695 Compare W10, 0
	696 JumpIfNotEqual {1023}
	697 NotImplemented "Instruction SMULH not yet implemented."
	698 NotImplemented "Instruction SBFM not yet implemented."
	699 NotImplemented "Instruction CMP not yet implemented."
	700 Add X8, X10, X8
	701 Subtract W9, W9, 1
	702 NotImplemented "Instruction SMULH not yet implemented."
	703 NotImplemented "Instruction SBFM not yet implemented."
	704 Add X10, X11, X10
	705 NotImplemented "Instruction MSUB not yet implemented."
	706 Compare X10, 0
	707 JumpIfEqual {697}
	708 Move X19, 0xDC0000
	709 Move X19, [X19+1352]
	710 NotImplemented "Instruction CMP not yet implemented."
	711 Move X0, X21
	712 Move X1, X31
	713 Call DateTimeFormatInfo.get_AMDesignator, X0
	714 Move X0, [X19]
	715 Move W8, [X0+224]
	716 Compare W8, 0
	717 JumpIfNotEqual {719}
	718 Call 0x1C17DFC
	719 Move W3, 103
	720 Move X0, X23
	721 Move X1, X22
	722 Move W2, W28
	723 Call DateTimeFormat.ParseRepeatPattern, X0, X1, X2
	724 Move [X31+52], W0
	725 Compare X26, 0
	726 JumpIfEqual {1143}
	727 Move X8, [X26]
	728 Move X0, X26
	729 Move X1, X20
	730 Move X9, [X8+552]
	731 Move X2, [X8+560]
	732 NotImplemented "Instruction BLR not yet implemented."
	733 Move W1, W0
	734 Move X0, X21
	735 Move X2, X31
	736 Call DateTimeFormatInfo.GetEraName, X0, X1
	737 Compare X25, 0
	738 JumpIfEqual {1143}
	739 Move X1, X0
	740 Move X0, [X19]
	741 Move W8, [X0+224]
	742 Compare W8, 0
	743 JumpIfNotEqual {745}
	744 Call 0x1C17DFC
	745 Move W3, 104
	746 Move X0, X23
	747 Move X1, X22
	748 Move W2, W28
	749 Call DateTimeFormat.ParseRepeatPattern, X0, X1, X2
	750 Move X8, 0xD8C000
	751 Move X8, [X8+2544]
	752 Move [X31+52], W0
	753 Move X8, [X8]
	754 Move W9, [X8+224]
	755 Compare W9, 0
	756 JumpIfNotEqual {759}
	757 Move X0, X8
	758 Call 0x1C17DFC
	759 Add X0, X31, 56
	760 Call DateTime.get_Hour, X0
	761 Move W9, 0xAAAB
	762 NotImplemented "Instruction MOVK not yet implemented."
	763 Move W8, W0
	764 NotImplemented "Instruction SMADDL not yet implemented."
	765 Move X0, [X19]
	766 Move X10, X9
	767 ShiftRight X10, 63
	768 And X10, X10, 0x7FFFFFFF
	769 NotImplemented "Instruction SBFM not yet implemented."
	770 Add W9, W9, W10
	771 Move W10, [X0+224]
	772 Move W19, [X31+52]
	773 Move W11, 12
	774 NotImplemented "Instruction MSUB not yet implemented."
	775 NotImplemented "Instruction CMP not yet implemented."
	776 NotImplemented "Instruction CSEL not yet implemented."
	777 Compare W10, 0
	778 JumpIfNotEqual {780}
	779 Call 0x1C17DFC
	780 Move X0, X25
	781 Move W1, W29
	782 Move W2, W19
	783 Call DateTimeFormat.FormatDigits, X0, X1, X2
	784 Move X0, [X19]
	785 Move W8, [X0+224]
	786 Compare W8, 0
	787 JumpIfNotEqual {789}
	788 Call 0x1C17DFC
	789 Move W3, 109
	790 Move X0, X23
	791 Move X1, X22
	792 Move W2, W28
	793 Call DateTimeFormat.ParseRepeatPattern, X0, X1, X2
	794 Move X8, 0xD8C000
	795 Move X8, [X8+2544]
	796 Move [X31+52], W0
	797 Move X8, [X8]
	798 Move W9, [X8+224]
	799 Compare W9, 0
	800 JumpIfNotEqual {803}
	801 Move X0, X8
	802 Call 0x1C17DFC
	803 Add X0, X31, 56
	804 Call DateTime.get_Minute, X0
	805 Move W2, [X31+52]
	806 Move W1, W0
	807 Move X0, X25
	808 Call DateTimeFormat.FormatDigits, X0, X1, X2
	809 Move W8, [X31+20]
	810 Move TEMP, X8
	811 And TEMP, TEMP, 1
	812 Compare TEMP, 1
	813 JumpIfEqual {846}
	814 Move X8, 0xDBF000
	815 Move X8, [X8+2352]
	816 Move X0, [X8]
	817 Move W8, [X0+224]
	818 Compare W8, 0
	819 JumpIfNotEqual {821}
	820 Call 0x1C17DFC
	821 Move X8, 0x1074000
	822 Move W8, [X8+2814]
	823 Compare W8, 0
	824 JumpIfNotEqual {831}
	825 Move X0, 0xDBF000
	826 Move X0, [X0+2352]
	827 Call 0x1C17CF4
	828 Move X8, 0x1074000
	829 Move W9, 1
	830 Move [X8+2814], W9
	831 Move X19, 0xDBF000
	832 Move X19, [X19+2352]
	833 Move X0, [X19]
	834 Move W8, [X0+224]
	835 Compare W8, 0
	836 JumpIfNotEqual {839}
	837 Call 0x1C17DFC
	838 Move X0, [X19]
	839 Move X19, 0xDC0000
	840 Move X19, [X19+1352]
	841 Move X8, [X0+184]
	842 Move W8, [X8]
	843 Compare W8, 0
	844 JumpIfEqual {1086}
	845 Move W19, [X31+52]
	846 Move X8, 0xDC0000
	847 Move X8, [X8+1352]
	848 Move X0, [X8]
	849 Move W8, [X31+20]
	850 Move TEMP, X8
	851 And TEMP, TEMP, 1
	852 Compare TEMP, 1
	853 JumpIfEqual {885}
	854 Move X8, 0xDBF000
	855 Move X8, [X8+2352]
	856 Move X0, [X8]
	857 Move W8, [X0+224]
	858 Compare W8, 0
	859 JumpIfNotEqual {861}
	860 Call 0x1C17DFC
	861 Move X8, 0x1074000
	862 Move W8, [X8+2814]
	863 Compare W8, 0
	864 JumpIfNotEqual {871}
	865 Move X0, 0xDBF000
	866 Move X0, [X0+2352]
	867 Call 0x1C17CF4
	868 Move X8, 0x1074000
	869 Move W9, 1
	870 Move [X8+2814], W9
	871 Move X19, 0xDBF000
	872 Move X19, [X19+2352]
	873 Move X0, [X19]
	874 Move W8, [X0+224]
	875 Compare W8, 0
	876 JumpIfNotEqual {879}
	877 Call 0x1C17DFC
	878 Move X0, [X19]
	879 Move X9, 0xDC0000
	880 Move X9, [X9+1352]
	881 Move X8, [X0+184]
	882 Move W8, [X8]
	883 Compare W8, 0
	884 JumpIfEqual {1118}
	885 Move W19, [X31+52]
	886 NotImplemented "Instruction CMP not yet implemented."
	887 Add X0, X31, 52
	888 Move X1, X31
	889 Call Int32.ToString, X0
	890 Move X8, 0xDB3000
	891 Move X8, [X8+3040]
	892 Move X1, X0
	893 Move X2, X31
	894 Move X8, [X8]
	895 Move X0, X8
	896 Call String.Concat, X0, X1
	897 Move X8, 0xD8D000
	898 Move X8, [X8+3144]
	899 Move X19, X0
	900 Move X8, [X8]
	901 Move W9, [X8+224]
	902 Compare W9, 0
	903 JumpIfNotEqual {906}
	904 Move X0, X8
	905 Call 0x1C17DFC
	906 Move X0, X31
	907 Call CultureInfo.get_InvariantCulture
	908 Move X2, X0
	909 Add X0, X31, 48
	910 Move X1, X19
	911 Move X3, X31
	912 Call Int32.ToString, X0, X1, X2
	913 Compare X25, 0
	914 JumpIfNotEqual {1108}
	915 Call DateTimeFormatInfo.get_AMDesignator, X0
	916 Compare X0, 0
	917 JumpIfEqual {1143}
	918 Move W8, [X0+16]
	919 NotImplemented "Instruction CMP not yet implemented."
	920 Move X0, X21
	921 Move X1, X31
	922 Call DateTimeFormatInfo.get_AMDesignator, X0
	923 Compare X0, 0
	924 JumpIfEqual {1143}
	925 Move W1, W31
	926 Move X2, X31
	927 Call String.get_Chars, X0, X1
	928 Compare X25, 0
	929 JumpIfEqual {1143}
	930 Move W1, W0
	931 Move X0, X25
	932 Move X2, X31
	933 Call StringBuilder.Append, X0, X1
	934 Call DateTimeFormatInfo.get_PMDesignator, X0
	935 Move X1, X0
	936 Compare X25, 0
	937 JumpIfEqual {1143}
	938 Move X0, X25
	939 Move X2, X31
	940 Call StringBuilder.Append, X0, X1
	941 Move X9, [X8+488]
	942 Move X2, [X8+496]
	943 Move X0, X26
	944 Move X1, X20
	945 NotImplemented "Instruction BLR not yet implemented."
	946 Move W8, [X31+20]
	947 Move W29, W0
	948 Move TEMP, X8
	949 And TEMP, TEMP, 1
	950 Compare TEMP, 1
	951 JumpIfEqual {983}
	952 Move X8, 0xDBF000
	953 Move X8, [X8+2352]
	954 Move X0, [X8]
	955 Move W8, [X0+224]
	956 Compare W8, 0
	957 JumpIfNotEqual {959}
	958 Call 0x1C17DFC
	959 Move X8, 0x1074000
	960 Move W8, [X8+2814]
	961 Compare W8, 0
	962 JumpIfNotEqual {969}
	963 Move X0, 0xDBF000
	964 Move X0, [X0+2352]
	965 Call 0x1C17CF4
	966 Move X8, 0x1074000
	967 Move W9, 1
	968 Move [X8+2814], W9
	969 Move X19, 0xDBF000
	970 Move X19, [X19+2352]
	971 Move X0, [X19]
	972 Move W8, [X0+224]
	973 Compare W8, 0
	974 JumpIfNotEqual {977}
	975 Call 0x1C17DFC
	976 Move X0, [X19]
	977 Move X19, 0xDC0000
	978 Move X19, [X19+1352]
	979 Move X8, [X0+184]
	980 Move W8, [X8]
	981 Compare W8, 0
	982 JumpIfEqual {1086}
	983 Move X0, [X19]
	984 Move W19, [X31+52]
	985 Move W8, [X0+224]
	986 Compare W8, 0
	987 JumpIfNotEqual {989}
	988 Call 0x1C17DFC
	989 Move X0, X25
	990 Move W1, W29
	991 Compare W9, 0
	992 JumpIfNotEqual {995}
	993 Move X0, X8
	994 Call 0x1C17DFC
	995 Move W0, W29
	996 Move W1, W19
	997 Move X2, X21
	998 Call DateTimeFormat.FormatMonth, X0, X1, X2
	999 Compare X25, 0
	1000 JumpIfNotEqual {1108}
	1001 Move X8, 0xDC0000
	1002 Move X8, [X8+1352]
	1003 Move W29, [X31+48]
	1004 Move X0, [X8]
	1005 Move W8, [X0+224]
	1006 Compare W8, 0
	1007 JumpIfNotEqual {1009}
	1008 Call 0x1C17DFC
	1009 Move W8, 0x851F
	1010 NotImplemented "Instruction MOVK not yet implemented."
	1011 NotImplemented "Instruction SMADDL not yet implemented."
	1012 Move X9, X8
	1013 ShiftRight X9, 63
	1014 And X9, X9, 0x7FFFFFFF
	1015 NotImplemented "Instruction SBFM not yet implemented."
	1016 Add W8, W8, W9
	1017 Move W9, 100
	1018 NotImplemented "Instruction MSUB not yet implemented."
	1019 Move X0, X25
	1020 Move W2, W19
	1021 Call DateTimeFormat.FormatDigits, X0, X1, X2
	1022 Move X20, [X31+24]
	1023 Subtract W19, W9, 1
	1024 Move X29, 0xDC0000
	1025 Move X29, [X29+1352]
	1026 Move [X31+44], W8
	1027 Move X0, [X29]
	1028 Move W8, [X0+224]
	1029 Compare W8, 0
	1030 JumpIfNotEqual {1033}
	1031 Call 0x1C17DFC
	1032 Move X0, [X29]
	1033 Move X8, [X0+184]
	1034 Move X8, [X8+40]
	1035 Compare X8, 0
	1036 JumpIfEqual {1143}
	1037 Move W9, [X8+24]
	1038 NotImplemented "Instruction CMP not yet implemented."
	1039 Move X9, 0xD8D000
	1040 Move X9, [X9+3144]
	1041 Add X8, X8, W19
	1042 Move X0, [X9]
	1043 Move W9, [X0+224]
	1044 Move X19, [X8+32]
	1045 Compare W9, 0
	1046 JumpIfNotEqual {1048}
	1047 Call 0x1C17DFC
	1048 Move X0, X31
	1049 Call CultureInfo.get_InvariantCulture
	1050 Move X2, X0
	1051 Add X0, X31, 44
	1052 Move X1, X19
	1053 Move X3, X31
	1054 Call Int32.ToString, X0, X1, X2
	1055 Compare X25, 0
	1056 JumpIfEqual {1143}
	1057 Move X1, X0
	1058 Move X0, X25
	1059 Move X2, X31
	1060 Call StringBuilder.Append, X0, X1
	1061 Compare X25, 0
	1062 JumpIfEqual {1143}
	1063 Move X0, X25
	1064 Move X1, X31
	1065 Call StringBuilder.get_Length, X0
	1066 Move X19, 0xDC0000
	1067 Move X19, [X19+1352]
	1068 NotImplemented "Instruction CMP not yet implemented."
	1069 Move X0, X25
	1070 Move X1, X31
	1071 Call StringBuilder.get_Length, X0
	1072 Subtract W1, W0, 1
	1073 Move X0, X25
	1074 Move X2, X31
	1075 Call StringBuilder.get_Chars, X0, X1
	1076 And W8, W0, 0xFFFF
	1077 NotImplemented "Instruction CMP not yet implemented."
	1078 Move X0, X25
	1079 Move X1, X31
	1080 Call StringBuilder.get_Length, X0
	1081 Subtract W1, W0, 1
	1082 Move W2, 1
	1083 Move X0, X25
	1084 Move X3, X31
	1085 Call StringBuilder.Remove, X0, X1, X2
	1086 Move X0, [X19]
	1087 Move W8, [X0+224]
	1088 Compare W8, 0
	1089 JumpIfNotEqual {1091}
	1090 Call 0x1C17DFC
	1091 Move X0, X25
	1092 Move W1, W29
	1093 Call DateTimeFormat.HebrewFormatDigits, X0, X1
	1094 Move [X31+36], W31
	1095 Move X0, [X19]
	1096 Move W19, [X31+52]
	1097 Move W8, [X0+224]
	1098 Compare W8, 0
	1099 JumpIfNotEqual {1101}
	1100 Call 0x1C17DFC
	1101 Move X0, X20
	1102 Move W1, W29
	1103 Move W2, W19
	1104 Move X3, X21
	1105 Call DateTimeFormat.FormatHebrewMonthName, X0, X1, X2, X3
	1106 Compare X25, 0
	1107 JumpIfEqual {1143}
	1108 Move X1, X0
	1109 Move X0, X25
	1110 Move X2, X31
	1111 Call StringBuilder.Append, X0, X1
	1112 Move [X31+36], W31
	1113 Move X19, 0xDC0000
	1114 Move X19, [X19+1352]
	1115 Move W8, [X31+52]
	1116 Add W28, W8, W28
	1117 NotImplemented "Instruction CMP not yet implemented."
	1118 Move X0, [X9]
	1119 Move W19, [X31+48]
	1120 Move W8, [X0+224]
	1121 Compare W8, 0
	1122 JumpIfNotEqual {1124}
	1123 Call 0x1C17DFC
	1124 Move X0, X25
	1125 Move W1, W19
	1126 Call DateTimeFormat.HebrewFormatDigits, X0, X1
	1127 Move X0, X25
	1128 Move X20, [X31+144]
	1129 Move X19, [X31+152]
	1130 Move X22, [X31+128]
	1131 Move X21, [X31+136]
	1132 Move X24, [X31+112]
	1133 Move X23, [X31+120]
	1134 Move X26, [X31+96]
	1135 Move X25, [X31+104]
	1136 Move X28, [X31+80]
	1137 Move X27, [X31+88]
	1138 Move X29, [X31+64]
	1139 Move X30, [X31+72]
	1140 Add X31, X31, 160
	1141 Return X0
	1142 Call 0x1C17F28
	1143 Call 0x1C17F20
	1144 Move X8, [X31]
	1145 Compare X8, 0
	1146 JumpIfNotEqual {1150}
	1147 Move X0, X25
	1148 Move X1, X31
	1149 Call StringBuilderCache.Release, X0
	1150 Move X0, 0xDB8000
	1151 Move X0, [X0+3080]
	1152 Call 0x1C17D08
	1153 Call 0x1C17F10
	1154 Move X19, X0
	1155 Move X0, 0xDBA000
	1156 Move X0, [X0+1560]
	1157 Call 0x1C17D08
	1158 Move X1, X0
	1159 Move X0, X19
	1160 Call FormatException..ctor, X0, X1
	1161 Move X0, 0xDC2000
	1162 Move X0, [X0+2968]
	1163 Call 0x1C17D08
	1164 Move X1, X0
	1165 Move X0, X19
	1166 Call 0x1C17DEC

Method: System.Void FormatCustomizedTimeZone(System.DateTime dateTime, System.TimeSpan offset, System.ReadOnlySpan`1<System.Char> format, System.Int32 tokenLen, System.Boolean timeOnly, System.Text.StringBuilder result)

Disassembly:
	0x0336A00C ORR X10, X31, 0xCCCCCCCCCCCCCCCC
	0x0336A010 MOV X8, X31
	0x0336A014 ADD X9, X19, 0x34
	0x0336A018 MOVK X10, 0xCCCD
	0x0336A01C MOVN W11, 0x9
	0x00000000 INVALID
	0x0336A024 MOV X12, X22
	0x0336A028 UBFM X22, X13, 0x3, 0x3F
	0x0336A02C MADD W12, W22, W11, W12
	0x0336A030 ADD W12, W12, 0x30
	0x0336A034 STRH W12, [X9, X8, LSL]
	0x0336A038 SUB X8, X8, 0x2
	0x0336A03C ADDS W31, W8, 0xC
	0x0336A040 B.NE 0x336A020
	0x0336A044 ADD W8, W22, 0x30
	0x0336A048 CMP W21, 0x1
	0x0336A04C STRH W8, [X19 + 0x28]
	0x0336A050 B.EQ 0x336A0AC
	0x0336A054 CMP W21, 0x2
	0x0336A058 B.NE 0x336A15C
	0x0336A05C LDR X0, [X26]
	0x0336A060 LDR X21, [X31 + 0x8]
	0x0336A064 LDR W8, [X0 + 0xE0]
	0x0336A068 CBNZ W8, 0x336A070
	0x0336A06C BL 0x1C16DFC
	0x0336A070 MOV X0, X21
	0x0336A074 MOV X1, X31
	0x0336A078 MOV X2, X31
	0x0336A07C BL 0x3394CF0
	0x0336A080 TBZ X0, 0x0, 0x336A0C0
	0x0336A084 LDR X0, [X26]
	0x0336A088 LDR W8, [X0 + 0xE0]
	0x0336A08C CBNZ W8, 0x336A094
	0x0336A090 BL 0x1C16DFC
	0x0336A094 SUB X0, X31, X21
	0x0336A098 MOV X1, X31
	0x0336A09C BL 0x339481C
	0x0336A0A0 MOVZ W22, 0x2D
	0x0336A0A4 STR X0, [X31 + 0x8]
	0x0336A0A8 B 0x336A0C4
	0x0336A0AC CMP W20, 0x1B
	0x0336A0B0 B.LS 0x336A17C
	0x0336A0B4 MOVZ W8, 0x5A
	0x0336A0B8 STRH W8, [X19 + 0x36]
	0x0336A0BC B 0x336A15C
	0x0336A0C0 MOVZ W22, 0x2B
	0x0336A0C4 LDR X0, [X26]
	0x0336A0C8 LDR W8, [X0 + 0xE0]
	0x0336A0CC CBNZ W8, 0x336A0D4
	0x0336A0D0 BL 0x1C16DFC
	0x0336A0D4 ADD X0, X31, 0x8
	0x0336A0D8 MOV X1, X31
	0x0336A0DC BL 0x339413C
	0x0336A0E0 LDR X8, [X25]
	0x0336A0E4 MOV W21, W0
	0x0336A0E8 LDR W9, [X8 + 0xE0]
	0x0336A0EC CBNZ W9, 0x336A0F8
	0x0336A0F0 MOV X0, X8
	0x0336A0F4 BL 0x1C16DFC
	0x0336A0F8 CMP W20, 0x20
	0x0336A0FC B.LS 0x336A17C
	0x0336A100 MOVZ W20, 0xCCCD
	0x0336A104 MOVK W20, 0xCCCC0000
	0x0336A108 UMADDL X9, X21, X20, X31
	0x0336A10C MOVN W23, 0x9
	0x0336A110 UBFM X9, X9, 0x23, 0x3F
	0x0336A114 MADD W10, W9, W23, W21
	0x0336A118 MOVZ W8, 0x3A
	0x0336A11C ADD W9, W9, 0x30
	0x0336A120 ADD W10, W10, 0x30
	0x0336A124 ADD X0, X31, 0x8
	0x0336A128 MOV X1, X31
	0x0336A12C STRH W9, [X19 + 0x3E]
	0x0336A130 STRH W10, [X19 + 0x40]
	0x0336A134 STRH W8, [X19 + 0x3C]
	0x0336A138 BL 0x33940AC
	0x0336A13C UMADDL X8, X0, X20, X31
	0x0336A140 UBFM X8, X8, 0x23, 0x3F
	0x0336A144 MADD W9, W8, W23, W0
	0x0336A148 ADD W8, W8, 0x30
	0x0336A14C ADD W9, W9, 0x30
	0x0336A150 STRH W22, [X19 + 0x36]
	0x0336A154 STRH W8, [X19 + 0x38]
	0x0336A158 STRH W9, [X19 + 0x3A]
	0x0336A15C MOVZ W0, 0x1
	0x0336A160 LDP X20, X19, [X31 + 0x50]
	0x0336A164 LDP X22, X21, [X31 + 0x40]
	0x0336A168 LDP X24, X23, [X31 + 0x30]
	0x0336A16C LDP X26, X25, [X31 + 0x20]
	0x0336A170 LDR X30, [X31 + 0x10]
	0x0336A174 ADD X31, X31, 0x60
	0x0336A178 RET
	0x0336A17C BL 0x1C16F28
	0x0336A180 BL 0x1C16F20
	0x0336A184 SUB X31, X31, 0x60
	0x0336A188 STP X30, X0, [X31 + 0x10]
	0x0336A18C STP X26, X25, [X31 + 0x20]
	0x0336A190 STP X24, X23, [X31 + 0x30]
	0x0336A194 STP X22, X21, [X31 + 0x40]
	0x0336A198 STP X20, X19, [X31 + 0x50]
	0x0336A19C ADRP X24, 0x1072000
	0x0336A1A0 LDRB W8, [X24 + 0xEC1]
	0x0336A1A4 MOV X19, X4
	0x0336A1A8 MOV X20, X3
	0x0336A1AC MOV X21, X2
	0x0336A1B0 MOV X22, X1
	0x0336A1B4 MOV X23, X0
	0x0336A1B8 TBNZ X8, 0x0, 0x336A1F4
	0x0336A1BC ADRP X0, 0xDBE000
	0x0336A1C0 LDR X0, [X0 + 0x548]
	0x0336A1C4 BL 0x1C16CF4
	0x0336A1C8 ADRP X0, 0xD8A000
	0x0336A1CC LDR X0, [X0 + 0x9F0]
	0x0336A1D0 BL 0x1C16CF4
	0x0336A1D4 ADRP X0, 0xDB8000
	0x0336A1D8 LDR X0, [X0 + 0x588]
	0x0336A1DC BL 0x1C16CF4
	0x0336A1E0 ADRP X0, 0xD8B000
	0x0336A1E4 LDR X0, [X0 + 0x570]
	0x0336A1E8 BL 0x1C16CF4
	0x0336A1EC MOVZ W8, 0x1
	0x0336A1F0 STRB W8, [X24 + 0xEC1]
	0x0336A1F4 MOV W8, W31
	0x0336A1F8 CMP W20, 0x1D
	0x0336A1FC STR X31, [X31 + 0x8]
	0x0336A200 STR W31, [X31 + 0x4]
	0x0336A204 B.CC 0x336A4B8
	0x0336A208 ADRP X25, 0xDBE000
	0x0336A20C LDR X25, [X25 + 0x548]
	0x0336A210 ADRP X24, 0xD8B000
	0x0336A214 LDR X0, [X25]
	0x0336A218 LDR W8, [X0 + 0xE0]
	0x0336A21C LDR X24, [X24 + 0x570]
	0x0336A220 CBNZ W8, 0x336A22C
	0x0336A224 BL 0x1C16DFC
	0x0336A228 LDR X0, [X25]
	0x0336A22C LDR X8, [X24]
	0x0336A230 LDR X9, [X0 + 0xB8]
	0x0336A234 LDR W10, [X8 + 0xE0]
	0x0336A238 LDR X24, [X9]
	0x0336A23C CBNZ W10, 0x336A248
	0x0336A240 MOV X0, X8
	0x0336A244 BL 0x1C16DFC
	0x0336A248 ADRP X26, 0xD8A000
	0x0336A24C LDR X26, [X26 + 0x9F0]
	0x0336A250 MOV X0, X22
	0x0336A254 MOV X1, X24
	0x0336A258 MOV X2, X31
	0x0336A25C BL 0x3394CE4
	0x0336A260 TBZ X0, 0x0, 0x336A284
	0x0336A264 LDR X0, [X26]
	0x0336A268 LDR W8, [X0 + 0xE0]
	0x0336A26C CBNZ W8, 0x336A274
	0x0336A270 BL 0x1C16DFC
	0x0336A274 MOV X0, X23
	0x0336A278 MOV X1, X22
	0x0336A27C BL 0x3362F18
	0x0336A280 STR X0, [X31 + 0x18]
	0x0336A284 LDR X0, [X26]
	0x0336A288 LDR W8, [X0 + 0xE0]
	0x0336A28C CBNZ W8, 0x336A294
	0x0336A290 BL 0x1C16DFC
	0x0336A294 ADD X0, X31, 0x18
	0x0336A298 ADD X1, X31, 0xC
	0x0336A29C ADD X2, X31, 0x8
	0x0336A2A0 ADD X3, X31, 0x4
	0x0336A2A4 BL 0x3360278
	0x0336A2A8 LDR X0, [X25]
	0x0336A2AC LDR W8, [X0 + 0xE0]
	0x0336A2B0 CBNZ W8, 0x336A2BC
	0x0336A2B4 BL 0x1C16DFC
	0x0336A2B8 LDR X0, [X25]
	0x0336A2BC LDR X8, [X0 + 0xB8]
	0x0336A2C0 ADD X0, X31, 0x18
	0x0336A2C4 LDR X22, [X8 + 0x20]
	0x0336A2C8 BL 0x33611C0
	0x0336A2CC CBZ X22, 0x336A4E0
	0x0336A2D0 LDR W8, [X22 + 0x18]
	0x0336A2D4 CMP W0, W8
	0x0336A2D8 B.CS 0x336A4E4
	0x0336A2DC LDR X8, [X25]
	0x0336A2E0 LDR X8, [X8 + 0xB8]
	0x0336A2E4 LDR X8, [X8 + 0x18]
	0x0336A2E8 CBZ X8, 0x336A4E0
	0x0336A2EC LDR W9, [X31 + 0x8]
	0x0336A2F0 LDR W10, [X8 + 0x18]
	0x0336A2F4 SUB W9, W9, 0x1
	0x0336A2F8 CMP W9, W10
	0x0336A2FC B.CS 0x336A4E4
	0x0336A300 ADD X10, X22, W0, 0x3, SXTW
	0x0336A304 LDR X23, [X10 + 0x20]
	0x0336A308 CBZ X23, 0x336A4E0
	0x0336A30C ADD X8, X8, W9, 0x3, SXTW
	0x0336A310 LDR X22, [X8 + 0x20]
	0x0336A314 MOV X0, X23
	0x0336A318 MOV W1, W31
	0x0336A31C MOV X2, X31
	0x0336A320 BL 0x3222A1C
	0x0336A324 STRH W0, [X21]
	0x0336A328 MOVZ W1, 0x1
	0x0336A32C MOV X0, X23
	0x0336A330 MOV X2, X31
	0x0336A334 BL 0x3222A1C
	0x0336A338 STRH W0, [X21 + 0x2]
	0x0336A33C MOVZ W1, 0x2
	0x0336A340 MOV X0, X23
	0x0336A344 MOV X2, X31
	0x0336A348 BL 0x3222A1C
	0x0336A34C MOVZ W8, 0x2C
	0x0336A350 MOVK W8, 0x200000
	0x0336A354 STRH W0, [X21 + 0x4]
	0x0336A358 STUR W8, [X21 + 0x6]
	0x0336A35C LDR W8, [X31 + 0x4]
	0x0336A360 MOVZ W24, 0xCCCD
	0x0336A364 MOVK W24, 0xCCCC0000
	0x0336A368 MOVN W23, 0x9
	0x0336A36C MUL X9, X8, X24
	0x0336A370 UBFM X9, X9, 0x23, 0x3F
	0x0336A374 MADD W8, W9, W23, W8
	0x0336A378 ADD W9, W9, 0x30
	0x0336A37C MOVZ W25, 0x20
	0x0336A380 ADD W8, W8, 0x30
	0x0336A384 STRH W9, [X21 + 0xA]
	0x0336A388 STRH W8, [X21 + 0xC]
	0x0336A38C STRH W25, [X21 + 0xE]
	0x0336A390 CBZ X22, 0x336A4E0
	0x0336A394 MOV X0, X22
	0x0336A398 MOV W1, W31
	0x0336A39C MOV X2, X31
	0x0336A3A0 BL 0x3222A1C
	0x0336A3A4 STRH W0, [X21 + 0x10]
	0x0336A3A8 MOVZ W1, 0x1
	0x0336A3AC MOV X0, X22
	0x0336A3B0 MOV X2, X31
	0x0336A3B4 BL 0x3222A1C

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X25, 0x1073000
	011 Move [X31+16], X1
	012 Move [X31+24], X0
	013 Move X24, 0xDBF000
	014 Move W8, [X25+3767]
	015 Move X24, [X24+1352]
	016 Move X19, X6
	017 Move W23, W5
	018 Move W20, W4
	019 Move X22, X1
	020 Move X21, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {54}
	025 Move X0, 0xD8C000
	026 Move X0, [X0+3144]
	027 Call 0x1C17CF4
	028 Move X0, 0xDBF000
	029 Move X0, [X0+1352]
	030 Call 0x1C17CF4
	031 Move X0, 0xD8B000
	032 Move X0, [X0+2544]
	033 Call 0x1C17CF4
	034 Move X0, 0xD8A000
	035 Move X0, [X0+1880]
	036 Call 0x1C17CF4
	037 Move X0, 0xD8C000
	038 Move X0, [X0+1392]
	039 Call 0x1C17CF4
	040 Move X0, 0xDBE000
	041 Move X0, [X0+2616]
	042 Call 0x1C17CF4
	043 Move X0, 0xDC1000
	044 Move X0, [X0+2976]
	045 Call 0x1C17CF4
	046 Move X0, 0xDC1000
	047 Move X0, [X0+2984]
	048 Call 0x1C17CF4
	049 Move X0, 0xDB1000
	050 Move X0, [X0+3136]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X25+3767], W8
	054 Move X0, [X24]
	055 Move X25, 0xD8C000
	056 Move W8, [X0+224]
	057 Move X25, [X25+1392]
	058 Compare W8, 0
	059 JumpIfNotEqual {62}
	060 Call 0x1C17DFC
	061 Move X0, [X24]
	062 Move X8, [X25]
	063 Move X9, [X0+184]
	064 Move W10, [X8+224]
	065 Move X24, [X9]
	066 Compare W10, 0
	067 JumpIfNotEqual {70}
	068 Move X0, X8
	069 Call 0x1C17DFC
	070 Move X0, X22
	071 Move X1, X24
	072 Move X2, X31
	073 Call TimeSpan.op_Equality, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {141}
	078 Move TEMP, X23
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {95}
	082 Move X22, 0xD8B000
	083 Move X22, [X22+2544]
	084 Move X0, [X22]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Add X0, X31, 24
	090 Call DateTime.get_Ticks, X0
	091 Move X8, 0xBFFF
	092 NotImplemented "Instruction MOVK not yet implemented."
	093 NotImplemented "Instruction MOVK not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X8, 0xD8B000
	096 Move X8, [X8+2544]
	097 Move X0, [X8]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Add X0, X31, 24
	103 Call DateTime.get_Kind, X0
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X0, [X25]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {111}
	109 Call 0x1C17DFC
	110 Move X0, [X25]
	111 Move X8, [X0+184]
	112 Move X22, [X8]
	113 Move [X31+16], X22
	114 Move X8, 0xDBE000
	115 Move X8, [X8+2616]
	116 Move X0, [X8]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {135}
	120 Move X0, [X22]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Call DateTime.get_Now
	126 Move X8, 0xDBE000
	127 Move X8, [X8+2616]
	128 Move X21, X0
	129 Move X8, [X8]
	130 Move W9, [X8+224]
	131 Compare W9, 0
	132 JumpIfNotEqual {135}
	133 Move X0, X8
	134 Call 0x1C17DFC
	135 Move W1, 2
	136 Move X0, X21
	137 Move X2, X31
	138 Call TimeZoneInfo.GetLocalUtcOffset, X0, X1
	139 Move X22, X0
	140 Move [X31+16], X0
	141 Move X0, [X25]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {147}
	145 Call 0x1C17DFC
	146 Move X0, [X25]
	147 Move X8, [X0+184]
	148 Move X0, X22
	149 Move X2, X31
	150 Move X1, [X8]
	151 Call TimeSpan.op_GreaterThanOrEqual, X0, X1
	152 Compare X19, 0
	153 JumpIfEqual {263}
	154 Move X22, 0xD8C000
	155 Move X22, [X22+3144]
	156 Move TEMP, X0
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfNotEqual {164}
	160 Move W1, 43
	161 Move X0, X19
	162 Move X2, X31
	163 Call StringBuilder.Append, X0, X1
	164 Move W1, 45
	165 Move X0, X19
	166 Move X2, X31
	167 Call StringBuilder.Append, X0, X1
	168 Move X0, [X25]
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {173}
	172 Call 0x1C17DFC
	173 Add X0, X31, 16
	174 Move X1, X31
	175 Call TimeSpan.Negate, X0
	176 Move [X31+16], X0
	177 Move X0, [X22]
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1C17DFC
	182 Move X0, X31
	183 Call CultureInfo.get_InvariantCulture
	184 Move X8, [X25]
	185 Move X21, X0
	186 Move W9, [X8+224]
	187 Compare W9, 0
	188 JumpIfNotEqual {191}
	189 Move X0, X8
	190 Call 0x1C17DFC
	191 Add X0, X31, 16
	192 Move X1, X31
	193 Call TimeSpan.get_Hours, X0
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X23, 0xD8A000
	196 Move X23, [X23+1880]
	197 Move [X31+12], W0
	198 Add X1, X31, 12
	199 Move X8, [X23]
	200 Move X0, X8
	201 Call 0x1C17E04
	202 Move X8, 0xDC1000
	203 Move X8, [X8+2984]
	204 Move X3, X0
	205 Move X0, X19
	206 Move X1, X21
	207 Move X2, [X8]
	208 Move X4, X31
	209 Call StringBuilder.AppendFormat, X0, X1, X2, X3
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move X0, [X22]
	212 Move W8, [X0+224]
	213 Compare W8, 0
	214 JumpIfNotEqual {216}
	215 Call 0x1C17DFC
	216 Move X0, X31
	217 Call CultureInfo.get_InvariantCulture
	218 Move X8, [X25]
	219 Move X20, X0
	220 Move W9, [X8+224]
	221 Compare W9, 0
	222 JumpIfNotEqual {225}
	223 Move X0, X8
	224 Call 0x1C17DFC
	225 Add X0, X31, 16
	226 Move X1, X31
	227 Call TimeSpan.get_Minutes, X0
	228 Move X8, [X23]
	229 Move [X31+12], W0
	230 Add X1, X31, 12
	231 Move X0, X8
	232 Call 0x1C17E04
	233 Move X8, 0xDC1000
	234 Move X8, [X8+2976]
	235 Move X3, X0
	236 Move X0, X19
	237 Move X1, X20
	238 Move X8, 0xD8A000
	239 Move X8, [X8+1880]
	240 Move [X31+12], W0
	241 Add X1, X31, 12
	242 Move X8, [X8]
	243 Move X0, X8
	244 Call 0x1C17E04
	245 Move X8, 0xDB1000
	246 Move X8, [X8+3136]
	247 Move X3, X0
	248 Move X0, X19
	249 Move X1, X21
	250 Move X2, [X8]
	251 Move X4, X31
	252 Call StringBuilder.AppendFormat, X0, X1, X2, X3
	253 Move X20, [X31+80]
	254 Move X19, [X31+88]
	255 Move X22, [X31+64]
	256 Move X21, [X31+72]
	257 Move X24, [X31+48]
	258 Move X23, [X31+56]
	259 Move X30, [X31+32]
	260 Move X25, [X31+40]
	261 Add X31, X31, 96
	262 Return 
	263 Call 0x1C17F20

Method: System.Void FormatCustomizedRoundripTimeZone(System.DateTime dateTime, System.TimeSpan offset, System.Text.StringBuilder result)

Disassembly:
	0x0336A3B8 STRH W0, [X21 + 0x12]
	0x0336A3BC MOVZ W1, 0x2
	0x0336A3C0 MOV X0, X22
	0x0336A3C4 MOV X2, X31
	0x0336A3C8 BL 0x3222A1C
	0x0336A3CC STRH W0, [X21 + 0x14]
	0x0336A3D0 STRH W25, [X21 + 0x16]
	0x0336A3D4 LDR W8, [X31 + 0xC]
	0x0336A3D8 MOVZ W9, 0x851F
	0x0336A3DC MOVZ W10, 0x4DD3
	0x0336A3E0 MOVK W9, 0x51EB0000
	0x0336A3E4 MOVK W10, 0x10620000
	0x0336A3E8 MUL X11, X8, X24
	0x0336A3EC MUL X9, X8, X9
	0x0336A3F0 MUL X10, X8, X10
	0x0336A3F4 UBFM X11, X11, 0x23, 0x3F
	0x0336A3F8 UBFM X9, X9, 0x25, 0x3F
	0x0336A3FC UBFM X10, X10, 0x26, 0x3F
	0x0336A400 MADD W8, W11, W23, W8
	0x0336A404 MADD W11, W9, W23, W11
	0x0336A408 MADD W9, W10, W23, W9
	0x0336A40C ADD W10, W10, 0x30
	0x0336A410 STRH W10, [X21 + 0x18]
	0x0336A414 ADD W8, W8, 0x30
	0x0336A418 ADD W10, W11, 0x30
	0x0336A41C ADD W9, W9, 0x30
	0x0336A420 ADD X0, X31, 0x18
	0x0336A424 STRH W8, [X21 + 0x1E]
	0x0336A428 STRH W10, [X21 + 0x1C]
	0x0336A42C STRH W9, [X21 + 0x1A]
	0x0336A430 STRH W25, [X21 + 0x20]
	0x0336A434 BL 0x33612B4
	0x0336A438 UMADDL X8, X0, X24, X31
	0x0336A43C UBFM X8, X8, 0x23, 0x3F
	0x0336A440 MADD W9, W8, W23, W0
	0x0336A444 MOVZ W22, 0x3A
	0x0336A448 ADD W8, W8, 0x30
	0x0336A44C ADD W9, W9, 0x30
	0x0336A450 ADD X0, X31, 0x18
	0x0336A454 STRH W8, [X21 + 0x22]
	0x0336A458 STRH W9, [X21 + 0x24]
	0x0336A45C STRH W22, [X21 + 0x26]
	0x0336A460 BL 0x33614A4
	0x0336A464 UMADDL X8, X0, X24, X31
	0x0336A468 UBFM X8, X8, 0x23, 0x3F
	0x0336A46C MADD W9, W8, W23, W0
	0x0336A470 ADD W8, W8, 0x30
	0x0336A474 ADD W9, W9, 0x30
	0x0336A478 ADD X0, X31, 0x18
	0x0336A47C STRH W8, [X21 + 0x28]
	0x0336A480 STRH W9, [X21 + 0x2A]
	0x0336A484 STRH W22, [X21 + 0x2C]
	0x0336A488 BL 0x3361760
	0x0336A48C ADRP X9, 0xFFFFFFFFFD783000
	0x0336A490 UMADDL X8, X0, X24, X31
	0x0336A494 LDR V0, [X9 + 0xA28]
	0x0336A498 UBFM X8, X8, 0x23, 0x3F
	0x0336A49C MADD W9, W8, W23, W0
	0x0336A4A0 ADD W8, W8, 0x30
	0x0336A4A4 ADD W9, W9, 0x30
	0x0336A4A8 STRH W8, [X21 + 0x2E]
	0x0336A4AC MOVZ W8, 0x1D
	0x0336A4B0 STRH W9, [X21 + 0x30]
	0x0336A4B4 STUR D0, [X21 + 0x32]
	0x0336A4B8 CMP W20, 0x1C
	0x0336A4BC STR W8, [X19]
	0x0336A4C0 LDP X20, X19, [X31 + 0x50]
	0x0336A4C4 LDP X22, X21, [X31 + 0x40]
	0x0336A4C8 LDP X24, X23, [X31 + 0x30]
	0x0336A4CC LDP X26, X25, [X31 + 0x20]
	0x0336A4D0 LDR X30, [X31 + 0x10]
	0x0336A4D4 CSET W0, HI
	0x0336A4D8 ADD X31, X31, 0x60
	0x0336A4DC RET
	0x0336A4E0 BL 0x1C16F20
	0x0336A4E4 BL 0x1C16F28
	0x0336A4E8 SUB X31, X31, 0x50
	0x0336A4EC STP X30, X0, [X31 + 0x10]
	0x0336A4F0 STP X24, X23, [X31 + 0x20]
	0x0336A4F4 STP X22, X21, [X31 + 0x30]
	0x0336A4F8 STP X20, X19, [X31 + 0x40]
	0x0336A4FC ADRP X23, 0x1072000
	0x0336A500 LDRB W8, [X23 + 0xEBF]
	0x0336A504 MOV X19, X4
	0x0336A508 MOV X20, X3
	0x0336A50C MOV X22, X2
	0x0336A510 MOV X21, X1
	0x0336A514 STP X3, X4, [X31]
	0x0336A518 TBNZ X8, 0x0, 0x336A584
	0x0336A51C ADRP X0, 0xDBE000
	0x0336A520 LDR X0, [X0 + 0x328]
	0x0336A524 BL 0x1C16CF4
	0x0336A528 ADRP X0, 0xDBE000
	0x0336A52C LDR X0, [X0 + 0x548]
	0x0336A530 BL 0x1C16CF4
	0x0336A534 ADRP X0, 0xD8A000
	0x0336A538 LDR X0, [X0 + 0x9F0]
	0x0336A53C BL 0x1C16CF4
	0x0336A540 ADRP X0, 0xDB8000
	0x0336A544 LDR X0, [X0 + 0x28]
	0x0336A548 BL 0x1C16CF4
	0x0336A54C ADRP X0, 0xD8B000
	0x0336A550 LDR X0, [X0 + 0x570]
	0x0336A554 BL 0x1C16CF4
	0x0336A558 ADRP X0, 0xDC0000
	0x0336A55C LDR X0, [X0 + 0xBC8]
	0x0336A560 BL 0x1C16CF4
	0x0336A564 ADRP X0, 0xDB3000
	0x0336A568 LDR X0, [X0 + 0xEF0]
	0x0336A56C BL 0x1C16CF4
	0x0336A570 ADRP X0, 0xDB2000
	0x0336A574 LDR X0, [X0 + 0xCC0]
	0x0336A578 BL 0x1C16CF4
	0x0336A57C MOVZ W8, 0x1
	0x0336A580 STRB W8, [X23 + 0xEBF]
	0x0336A584 ADRP X23, 0xDBE000
	0x0336A588 LDR X23, [X23 + 0x548]
	0x0336A58C CBZ W22, 0x336A598
	0x0336A590 UBFM X24, X22, 0x20, 0x3F
	0x0336A594 B 0x336A724
	0x0336A598 ADRP X8, 0xD8A000
	0x0336A59C LDR X8, [X8 + 0x9F0]
	0x0336A5A0 LDR X0, [X8]
	0x0336A5A4 LDR W8, [X0 + 0xE0]
	0x0336A5A8 CBNZ W8, 0x336A5B0
	0x0336A5AC BL 0x1C16DFC
	0x0336A5B0 ADD X0, X31, 0x18
	0x0336A5B4 BL 0x3361708
	0x0336A5B8 MOVZ X8, 0xBFFF
	0x0336A5BC MOVK X8, 0x2A690000
	0x0336A5C0 MOVK X8, 0xC9
	0x0336A5C4 CMP X0, X8
	0x0336A5C8 B.GT 0x336A640
	0x0336A5CC CBZ X20, 0x336A814
	0x0336A5D0 LDR X0, [X20 + 0x78]
	0x0336A5D4 CBZ X0, 0x336A814
	0x0336A5D8 LDR X8, [X0]
	0x0336A5DC LDP X9, X1, [X8 + 0x1A8]
	0x0336A5E0 BLR X9
	0x0336A5E4 AND W8, W0, 0xFFFF
	0x0336A5E8 CMP W8, 0x8
	0x0336A5EC B.HI 0x336A7FC
	0x0336A5F0 MOVZ W9, 0x1
	0x0336A5F4 LSLV W9, W9, W8
	0x0336A5F8 MOVZ W10, 0x158
	0x0336A5FC ANDS W31, W9, W10, 0x0
	0x0336A600 B.EQ 0x336A634
	0x0336A604 ADRP X8, 0xDBE000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X0
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x1073000
	011 Move [X31+8], X1
	012 Move X23, 0xDBF000
	013 Move W8, [X22+3768]
	014 Move X23, [X23+1352]
	015 Move X19, X2
	016 Move X21, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {39}
	022 Move X0, 0xDBF000
	023 Move X0, [X0+1352]
	024 Call 0x1C17CF4
	025 Move X0, 0xD8B000
	026 Move X0, [X0+2544]
	027 Call 0x1C17CF4
	028 Move X0, 0xD8C000
	029 Move X0, [X0+1392]
	030 Call 0x1C17CF4
	031 Move X0, 0xDBE000
	032 Move X0, [X0+2616]
	033 Call 0x1C17CF4
	034 Move X0, 0xDBF000
	035 Move X0, [X0+1088]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X22+3768], W8
	039 Move X0, [X23]
	040 Move X24, 0xD8C000
	041 Move W8, [X0+224]
	042 Move X24, [X24+1392]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X23]
	047 Move X8, [X24]
	048 Move X9, [X0+184]
	049 Move W10, [X8+224]
	050 Move X22, [X9]
	051 Compare W10, 0
	052 JumpIfNotEqual {55}
	053 Move X0, X8
	054 Call 0x1C17DFC
	055 Move X0, X21
	056 Move X1, X22
	057 Move X2, X31
	058 Call TimeSpan.op_Equality, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {87}
	063 Move X8, 0xD8B000
	064 Move X8, [X8+2544]
	065 Move X0, [X8]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Add X0, X31, 24
	071 Call DateTime.get_Kind, X0
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X8, 0xDBE000
	075 Move X8, [X8+2616]
	076 Move X0, [X8]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move W1, 2
	082 Move X0, X20
	083 Move X2, X31
	084 Call TimeZoneInfo.GetLocalUtcOffset, X0, X1
	085 Move X21, X0
	086 Move [X31+8], X0
	087 Move X0, [X24]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {93}
	091 Call 0x1C17DFC
	092 Move X0, [X24]
	093 Move X8, [X0+184]
	094 Move X0, X21
	095 Move X2, X31
	096 Move X1, [X8]
	097 Call TimeSpan.op_GreaterThanOrEqual, X0, X1
	098 Compare X19, 0
	099 JumpIfEqual {175}
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {108}
	104 Move W1, 43
	105 Move X0, X19
	106 Move X2, X31
	107 Call StringBuilder.Append, X0, X1
	108 Move W1, 45
	109 Move X0, X19
	110 Move X2, X31
	111 Call StringBuilder.Append, X0, X1
	112 Move X0, [X24]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Add X0, X31, 8
	118 Move X1, X31
	119 Call TimeSpan.Negate, X0
	120 Move [X31+8], X0
	121 Move X0, [X24]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {126}
	125 Call 0x1C17DFC
	126 Add X0, X31, 8
	127 Move X1, X31
	128 Call TimeSpan.get_Hours, X0
	129 Move X8, [X23]
	130 Move W20, W0
	131 Move W9, [X8+224]
	132 Compare W9, 0
	133 JumpIfNotEqual {136}
	134 Move X0, X8
	135 Call 0x1C17DFC
	136 Move X0, X19
	137 Move W1, W20
	138 Call DateTimeFormat.Append2DigitNumber, X0, X1
	139 Move W1, 58
	140 Move X0, X19
	141 Move X2, X31
	142 Call StringBuilder.Append, X0, X1
	143 Add X0, X31, 8
	144 Move X1, X31
	145 Call TimeSpan.get_Minutes, X0
	146 Move W1, W0
	147 Move X0, X19
	148 Call DateTimeFormat.Append2DigitNumber, X0, X1
	149 Move X20, [X31+64]
	150 Move X19, [X31+72]
	151 Move X22, [X31+48]
	152 Move X21, [X31+56]
	153 Move X24, [X31+32]
	154 Move X23, [X31+40]
	155 Move X30, [X31+16]
	156 Add X31, X31, 80
	157 Return 
	158 Compare X19, 0
	159 JumpIfEqual {175}
	160 Move X8, 0xDBF000
	161 Move X8, [X8+1088]
	162 Move X0, X19
	163 Move X20, [X31+64]
	164 Move X19, [X31+72]
	165 Move X22, [X31+48]
	166 Move X21, [X31+56]
	167 Move X1, [X8]
	168 Move X24, [X31+32]
	169 Move X23, [X31+40]
	170 Move X30, [X31+16]
	171 Move X2, X31
	172 Add X31, X31, 80
	173 Call StringBuilder.Append, X0, X1
	174 Return 
	175 Call 0x1C17F20

Method: System.Void Append2DigitNumber(System.Text.StringBuilder result, System.Int32 val)

Disassembly:
	0x0336A608 LDR X8, [X8 + 0x328]
	0x0336A60C LDR X0, [X8]
	0x0336A610 LDR W8, [X0 + 0xE0]
	0x0336A614 CBNZ W8, 0x336A61C
	0x0336A618 BL 0x1C16DFC
	0x0336A61C MOV X0, X31
	0x0336A620 BL 0x3324B20
	0x0336A624 MOV X20, X0
	0x0336A628 MOVZ W22, 0x1
	0x0336A62C STR X0, [X31]
	0x0336A630 B 0x336A644
	0x0336A634 MOVZ W10, 0xA0
	0x0336A638 ANDS W31, W9, W10, 0x0
	0x0336A63C B.EQ 0x336A7FC
	0x0336A640 MOV W22, W31
	0x0336A644 LDR X0, [X23]
	0x0336A648 LDR W8, [X0 + 0xE0]
	0x0336A64C CBNZ W8, 0x336A658
	0x0336A650 BL 0x1C16DFC
	0x0336A654 LDR X0, [X23]
	0x0336A658 ADRP X8, 0xD8B000
	0x0336A65C LDR X8, [X8 + 0x570]
	0x0336A660 LDR X9, [X0 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {31}
	007 Move W8, 0x6667
	008 NotImplemented "Instruction MOVK not yet implemented."
	009 NotImplemented "Instruction SMADDL not yet implemented."
	010 Move X9, X8
	011 ShiftRight X9, 63
	012 And X9, X9, 0x7FFFFFFF
	013 NotImplemented "Instruction SBFM not yet implemented."
	014 Add W21, W8, W9
	015 Move W20, W1
	016 Add W1, W21, 48
	017 Move X2, X31
	018 Move X19, X0
	019 Call StringBuilder.Append, X0, X1
	020 Move W8, 10
	021 NotImplemented "Instruction MSUB not yet implemented."
	022 Move X0, X19
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Add W1, W8, 48
	026 Move X2, X31
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call StringBuilder.Append, X0, X1
	030 Return 
	031 Call 0x1C17F20

Method: System.String GetRealFormat(System.ReadOnlySpan`1<System.Char> format, System.Globalization.DateTimeFormatInfo dtfi)

Disassembly:
	0x0336A664 LDR X8, [X8]
	0x0336A668 LDR X21, [X9]
	0x0336A66C LDR W10, [X8 + 0xE0]
	0x0336A670 CBNZ W10, 0x336A67C
	0x0336A674 MOV X0, X8
	0x0336A678 BL 0x1C16DFC
	0x0336A67C MOV X0, X19
	0x0336A680 MOV X1, X21
	0x0336A684 MOV X2, X31
	0x0336A688 BL 0x3394CD8
	0x0336A68C TBZ X0, 0x0, 0x336A6C0
	0x0336A690 ADRP X8, 0xDB2000
	0x0336A694 ADRP X9, 0xDB3000
	0x0336A698 LDR X8, [X8 + 0xCC0]
	0x0336A69C LDR X9, [X9 + 0xEF0]
	0x0336A6A0 CMP W22, 0x0
	0x0336A6A4 ADRP X21, 0x106F000
	0x0336A6A8 CSEL X8, X8, X9, NE
	0x0336A6AC LDRB W9, [X21 + 0x762]
	0x0336A6B0 LDR X20, [X8]
	0x0336A6B4 CBZ W9, 0x336A6F4
	0x0336A6B8 CBNZ X20, 0x336A70C
	0x0336A6BC B 0x336A7A4
	0x0336A6C0 TBZ X22, 0x0, 0x336A6D4
	0x0336A6C4 ADRP X8, 0xDC0000
	0x0336A6C8 LDR X8, [X8 + 0xBC8]
	0x0336A6CC LDR X20, [X8]
	0x0336A6D0 B 0x336A6E8
	0x0336A6D4 CBZ X20, 0x336A814
	0x0336A6D8 MOV X0, X20
	0x0336A6DC MOV X1, X31
	0x0336A6E0 BL 0x33258C0
	0x0336A6E4 MOV X20, X0
	0x0336A6E8 ADRP X21, 0x106F000
	0x0336A6EC LDRB W8, [X21 + 0x762]
	0x0336A6F0 CBNZ W8, 0x336A6B8
	0x0336A6F4 ADRP X0, 0xDB0000
	0x0336A6F8 LDR X0, [X0 + 0x290]
	0x0336A6FC BL 0x1C16CF4
	0x0336A700 MOVZ W8, 0x1
	0x0336A704 STRB W8, [X21 + 0x762]
	0x0336A708 CBZ X20, 0x336A7A4
	0x0336A70C MOV X0, X20
	0x0336A710 MOV X1, X31
	0x0336A714 BL 0x3225708
	0x0336A718 LDR W22, [X20 + 0x10]
	0x0336A71C MOV X21, X0
	0x0336A720 MOV W24, W31
	0x0336A724 CMP W22, 0x1
	0x0336A728 B.NE 0x336A7B0
	0x0336A72C LDR X0, [X23]
	0x0336A730 MOVZ W20, 0x1
	0x0336A734 BFM X20, X24, 0x20, 0x1F
	0x0336A738 LDR W8, [X0 + 0xE0]
	0x0336A73C CBNZ W8, 0x336A744
	0x0336A740 BL 0x1C16DFC
	0x0336A744 ADD X2, X31, 0x18
	0x0336A748 ADD X3, X31, 0x0
	0x0336A74C ADD X4, X31, 0x8
	0x0336A750 MOV X0, X21
	0x0336A754 MOV X1, X20
	0x0336A758 BL 0x3369908
	0x0336A75C ADRP X21, 0x106F000
	0x0336A760 LDRB W8, [X21 + 0x762]
	0x0336A764 MOV X20, X0
	0x0336A768 CBZ W8, 0x336A78C
	0x0336A76C CBZ X20, 0x336A7A4
	0x0336A770 MOV X0, X20
	0x0336A774 MOV X1, X31
	0x0336A778 BL 0x3225708
	0x0336A77C LDR W22, [X20 + 0x10]
	0x0336A780 MOV X21, X0
	0x0336A784 MOV W24, W31
	0x0336A788 B 0x336A7B0
	0x0336A78C ADRP X0, 0xDB0000
	0x0336A790 LDR X0, [X0 + 0x290]
	0x0336A794 BL 0x1C16CF4
	0x0336A798 MOVZ W8, 0x1
	0x0336A79C STRB W8, [X21 + 0x762]
	0x0336A7A0 CBNZ X20, 0x336A770
	0x0336A7A4 MOV W24, W31
	0x0336A7A8 MOV W22, W31
	0x0336A7AC MOV X21, X31
	0x0336A7B0 LDR X0, [X23]
	0x0336A7B4 LDR X23, [X31 + 0x18]
	0x0336A7B8 LDR X20, [X31]
	0x0336A7BC LDR W8, [X0 + 0xE0]
	0x0336A7C0 CBNZ W8, 0x336A7C8
	0x0336A7C4 BL 0x1C16DFC
	0x0336A7C8 MOV W2, W22
	0x0336A7CC BFM X2, X24, 0x20, 0x1F
	0x0336A7D0 MOV X0, X23
	0x0336A7D4 MOV X1, X21
	0x0336A7D8 MOV X3, X20
	0x0336A7DC MOV X4, X19
	0x0336A7E0 LDP X20, X19, [X31 + 0x40]
	0x0336A7E4 LDP X22, X21, [X31 + 0x30]
	0x0336A7E8 LDP X24, X23, [X31 + 0x20]
	0x0336A7EC LDR X30, [X31 + 0x10]
	0x0336A7F0 MOV X5, X31
	0x0336A7F4 ADD X31, X31, 0x50
	0x0336A7F8 B 0x3367ED4
	0x0336A7FC CMP W8, 0xD
	0x0336A800 B.EQ 0x336A604
	0x0336A804 AND W8, W0, 0xFFFE
	0x0336A808 CMP W8, 0x16
	0x0336A80C B.NE 0x336A640
	0x0336A810 B 0x336A604
	0x0336A814 BL 0x1C16F20
	0x0336A818 STR X30, [X31 - 0x10]!
	0x0336A81C ADD W8, W3, 0x1
	0x0336A820 CMP W8, W2
	0x0336A824 B.CS 0x336A860
	0x0336A828 MOVZ W9, 0xCCCD
	0x0336A82C MOVK W9, 0xCCCC0000
	0x0336A830 UMADDL X9, X0, X9, X31
	0x0336A834 MOVN W10, 0x9
	0x0336A838 UBFM X9, X9, 0x23, 0x3F
	0x0336A83C MADD W10, W9, W10, W0
	0x0336A840 ADD W10, W10, 0x30
	0x0336A844 CMP W2, W3
	0x0336A848 STRH W10, [X1, W8, SXTW]
	0x0336A84C B.LS 0x336A860
	0x0336A850 ADD W8, W9, 0x30
	0x0336A854 STRH W8, [X1, W3, SXTW]
	0x0336A858 LDR X30, [X31], #0x10
	0x0336A85C RET
	0x0336A860 BL 0x1C16F28
	0x0336A864 STR X30, [X31 - 0x10]!
	0x0336A868 ADD W9, W3, 0x3
	0x0336A86C CMP W9, W2
	0x0336A870 B.CS 0x336A900
	0x0336A874 MOVZ W11, 0xCCCD
	0x0336A878 MOVK W11, 0xCCCC0000
	0x0336A87C UMADDL X11, X0, X11, X31
	0x0336A880 MOVN W8, 0x9
	0x0336A884 UBFM X11, X11, 0x23, 0x3F
	0x0336A888 ADD W10, W3, 0x2
	0x0336A88C MADD W12, W11, W8, W0
	0x0336A890 ADD W12, W12, 0x30
	0x0336A894 CMP W10, W2
	0x0336A898 STRH W12, [X1, W9, SXTW]
	0x0336A89C B.CS 0x336A900
	0x0336A8A0 MOVZ W12, 0x851F
	0x0336A8A4 MOVK W12, 0x51EB0000
	0x0336A8A8 UMADDL X12, X0, X12, X31
	0x0336A8AC UBFM X12, X12, 0x25, 0x3F
	0x0336A8B0 ADD W9, W3, 0x1
	0x0336A8B4 MADD W8, W12, W8, W11
	0x0336A8B8 ADD W8, W8, 0x30
	0x0336A8BC CMP W9, W2
	0x0336A8C0 STRH W8, [X1, W10, SXTW]
	0x0336A8C4 B.CS 0x336A900
	0x0336A8C8 MOVZ W8, 0x4DD3
	0x0336A8CC MOVK W8, 0x10620000
	0x0336A8D0 UMADDL X8, X0, X8, X31
	0x0336A8D4 MOVN W10, 0x9
	0x0336A8D8 UBFM X8, X8, 0x26, 0x3F
	0x0336A8DC MADD W10, W8, W10, W12
	0x0336A8E0 ADD W10, W10, 0x30
	0x0336A8E4 CMP W2, W3
	0x0336A8E8 STRH W10, [X1, W9, SXTW]
	0x0336A8EC B.LS 0x336A900
	0x0336A8F0 ADD W8, W8, 0x30
	0x0336A8F4 STRH W8, [X1, W3, SXTW]
	0x0336A8F8 LDR X30, [X31], #0x10
	0x0336A8FC RET
	0x0336A900 BL 0x1C16F28
	0x0336A904 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1073000
	007 Move W8, [X22+3769]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xD8A000
	016 Move X0, [X0+3544]
	017 Call 0x1C17CF4
	018 Move X0, 0xDBF000
	019 Move X0, [X0+920]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3769], W8
	023 Compare W20, 0
	024 JumpIfEqual {207}
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Subtract W8, W8, 68
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X9, -41758720
	030 Add X9, X9, 1898
	031 NotImplemented "Instruction ADR not yet implemented."
	032 Move W11, [X9]
	033 Add X10, X10, X11
	034 CallNoReturn X10
	035 Compare X19, 0
	036 JumpIfEqual {208}
	037 Move X0, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X1, X31
	043 Move X30, [X31+48]
	044 Call DateTimeFormatInfo.get_FullDateTimePattern, X0
	045 Return X0
	046 Subtract W9, W8, 100
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X8, -41758720
	049 Add X8, X8, 1876
	050 NotImplemented "Instruction ADR not yet implemented."
	051 Move W11, [X8]
	052 Add X10, X10, X11
	053 CallNoReturn X10
	054 Compare X19, 0
	055 JumpIfEqual {208}
	056 Move X0, X19
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X1, X31
	062 Move X30, [X31+48]
	063 Call DateTimeFormatInfo.get_ShortDatePattern, X0
	064 Return X0
	065 Compare X19, 0
	066 JumpIfEqual {208}
	067 Move X0, X19
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X1, X31
	073 Move X30, [X31+48]
	074 Call DateTimeFormatInfo.get_MonthDayPattern, X0
	075 Return X0
	076 Move X8, 0xDBF000
	077 Move X8, [X8+920]
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X0, [X8]
	083 Move X30, [X31+48]
	084 Return X0
	085 Compare X19, 0
	086 JumpIfEqual {208}
	087 Move X0, X19
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X22, [X31+16]
	091 Move X21, [X31+24]
	092 Move X1, X31
	093 Move X30, [X31+48]
	094 Call DateTimeFormatInfo.get_RFC1123Pattern, X0
	095 Return X0
	096 Compare X19, 0
	097 JumpIfEqual {208}
	098 Move X0, X19
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X22, [X31+16]
	102 Move X21, [X31+24]
	103 Move X1, X31
	104 Move X30, [X31+48]
	105 Call DateTimeFormatInfo.get_LongDatePattern, X0
	106 Return X0
	107 Compare X19, 0
	108 JumpIfEqual {208}
	109 Move X0, X19
	110 Move X20, [X31+32]
	111 Move X19, [X31+40]
	112 Move X22, [X31+16]
	113 Move X21, [X31+24]
	114 Move X1, X31
	115 Move X30, [X31+48]
	116 Call DateTimeFormatInfo.get_GeneralLongTimePattern, X0
	117 Return X0
	118 Compare X19, 0
	119 JumpIfEqual {208}
	120 Move X0, X19
	121 Move X20, [X31+32]
	122 Move X19, [X31+40]
	123 Move X22, [X31+16]
	124 Move X21, [X31+24]
	125 Move X1, X31
	126 Move X30, [X31+48]
	127 Call DateTimeFormatInfo.get_LongTimePattern, X0
	128 Return X0
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Compare X19, 0
	131 JumpIfEqual {208}
	132 Move X0, X19
	133 Move X20, [X31+32]
	134 Move X19, [X31+40]
	135 Move X22, [X31+16]
	136 Move X21, [X31+24]
	137 Move X1, X31
	138 Move X30, [X31+48]
	139 Call DateTimeFormatInfo.get_YearMonthPattern, X0
	140 Return X0
	141 Compare X19, 0
	142 JumpIfEqual {208}
	143 Move X0, X19
	144 Move X1, X31
	145 Call DateTimeFormatInfo.get_LongDatePattern, X0
	146 Move X20, X0
	147 Move X0, X19
	148 Move X1, X31
	149 Call DateTimeFormatInfo.get_ShortTimePattern, X0
	150 Move X8, 0xD8A000
	151 Move X8, [X8+3544]
	152 Move X2, X0
	153 Move X0, X20
	154 Move X20, [X31+32]
	155 Move X19, [X31+40]
	156 Move X1, [X8]
	157 Move X22, [X31+16]
	158 Move X21, [X31+24]
	159 Move X3, X31
	160 Move X30, [X31+48]
	161 Call String.Concat, X0, X1, X2
	162 Return X0
	163 Compare X19, 0
	164 JumpIfEqual {208}
	165 Move X0, X19
	166 Move X20, [X31+32]
	167 Move X19, [X31+40]
	168 Move X22, [X31+16]
	169 Move X21, [X31+24]
	170 Move X1, X31
	171 Move X30, [X31+48]
	172 Call DateTimeFormatInfo.get_GeneralShortTimePattern, X0
	173 Return X0
	174 Compare X19, 0
	175 JumpIfEqual {208}
	176 Move X0, X19
	177 Move X20, [X31+32]
	178 Move X19, [X31+40]
	179 Move X22, [X31+16]
	180 Move X21, [X31+24]
	181 Move X1, X31
	182 Move X30, [X31+48]
	183 Call DateTimeFormatInfo.get_SortableDateTimePattern, X0
	184 Return X0
	185 Compare X19, 0
	186 JumpIfEqual {208}
	187 Move X0, X19
	188 Move X20, [X31+32]
	189 Move X19, [X31+40]
	190 Move X22, [X31+16]
	191 Move X21, [X31+24]
	192 Move X1, X31
	193 Move X30, [X31+48]
	194 Call DateTimeFormatInfo.get_ShortTimePattern, X0
	195 Return X0
	196 Compare X19, 0
	197 JumpIfEqual {208}
	198 Move X0, X19
	199 Move X20, [X31+32]
	200 Move X19, [X31+40]
	201 Move X22, [X31+16]
	202 Move X21, [X31+24]
	203 Move X1, X31
	204 Move X30, [X31+48]
	205 Call DateTimeFormatInfo.get_UniversalSortableDateTimePattern, X0
	206 Return X0
	207 Call 0x1C17F28
	208 Call 0x1C17F20
	209 Move X0, 0xDB7000
	210 Move X0, [X0+3080]
	211 Call 0x1C17D08
	212 Call 0x1C17F10
	213 Move X19, X0
	214 Move X0, 0xDB9000
	215 Move X0, [X0+1560]
	216 Call 0x1C17D08
	217 Move X1, X0
	218 Move X0, X19
	219 Call FormatException..ctor, X0, X1
	220 Move X0, 0xDC1000
	221 Move X0, [X0+2992]
	222 Call 0x1C17D08
	223 Move X1, X0
	224 Move X0, X19
	225 Call 0x1C17DEC

Method: System.String ExpandPredefinedFormat(System.ReadOnlySpan`1<System.Char> format, ref System.DateTime dateTime, ref System.Globalization.DateTimeFormatInfo dtfi, ref System.TimeSpan offset)

Disassembly:
	0x0336A908 STP X22, X21, [X31 + 0x10]
	0x0336A90C STP X20, X19, [X31 + 0x20]
	0x0336A910 ADRP X22, 0x1072000
	0x0336A914 LDRB W8, [X22 + 0xEC2]
	0x0336A918 MOV X20, X2
	0x0336A91C MOV X19, X1
	0x0336A920 MOV X21, X0
	0x0336A924 TBNZ X8, 0x0, 0x336A93C
	0x0336A928 ADRP X0, 0xDB8000
	0x0336A92C LDR X0, [X0 + 0x588]
	0x0336A930 BL 0x1C16CF4
	0x0336A934 MOVZ W8, 0x1
	0x0336A938 STRB W8, [X22 + 0xEC2]
	0x0336A93C SUB W8, W20, 0x1
	0x0336A940 CMP W8, 0x1
	0x0336A944 B.LT 0x336A9A4
	0x0336A948 ORR X10, X31, 0xCCCCCCCCCCCCCCCC
	0x0336A94C MOV W8, W8
	0x0336A950 AND X9, X20, 0x0
	0x0336A954 MOVK X10, 0xCCCD
	0x0336A958 MOVN W11, 0x9
	0x0336A95C CMP X8, X9
	0x0336A960 B.CS 0x336A9AC
	0x00000000 INVALID
	0x0336A968 UBFM X12, X12, 0x3, 0x3F
	0x0336A96C MADD W13, W12, W11, W21
	0x0336A970 ADD W13, W13, 0x30
	0x0336A974 STRH W13, [X19, X8, LSL #1]
	0x0336A978 SUB X8, X8, 0x1
	0x0336A97C CMP W8, 0x0
	0x0336A980 MOV X21, X12
	0x0336A984 B.GT 0x336A95C
	0x0336A988 CBZ W20, 0x336A9AC
	0x0336A98C ADD W8, W12, 0x30
	0x0336A990 STRH W8, [X19]
	0x0336A994 LDP X20, X19, [X31 + 0x20]
	0x0336A998 LDP X22, X21, [X31 + 0x10]
	0x0336A99C LDR X30, [X31], #0x30
	0x0336A9A0 RET
	0x0336A9A4 MOV X12, X21
	0x0336A9A8 CBNZ W20, 0x336A98C
	0x0336A9AC BL 0x1C16F28
	0x0336A9B0 STP X30, X23, [X31 - 0x30]!
	0x0336A9B4 STP X22, X21, [X31 + 0x10]
	0x0336A9B8 STP X20, X19, [X31 + 0x20]
	0x0336A9BC ADRP X20, 0x1072000
	0x0336A9C0 ADRP X19, 0xD8B000
	0x0336A9C4 LDRB W8, [X20 + 0xEC3]
	0x0336A9C8 LDR X19, [X19 + 0x570]
	0x0336A9CC TBNZ X8, 0x0, 0x336AA74
	0x0336A9D0 ADRP X0, 0xD92000
	0x0336A9D4 LDR X0, [X0 + 0x8D8]
	0x0336A9D8 BL 0x1C16CF4
	0x0336A9DC ADRP X0, 0xD8B000
	0x0336A9E0 LDR X0, [X0 + 0xC48]
	0x0336A9E4 BL 0x1C16CF4
	0x0336A9E8 ADRP X0, 0xDBE000
	0x0336A9EC LDR X0, [X0 + 0x548]
	0x0336A9F0 BL 0x1C16CF4
	0x0336A9F4 ADRP X0, 0xD89000
	0x0336A9F8 LDR X0, [X0 + 0xAC8]
	0x0336A9FC BL 0x1C16CF4
	0x0336AA00 ADRP X0, 0xD8B000
	0x0336AA04 LDR X0, [X0 + 0x570]
	0x0336AA08 BL 0x1C16CF4
	0x0336AA0C ADRP X0, 0xDC0000
	0x0336AA10 LDR X0, [X0 + 0xBD0]
	0x0336AA14 BL 0x1C16CF4
	0x0336AA18 ADRP X0, 0xDC0000
	0x0336AA1C LDR X0, [X0 + 0xBD8]
	0x0336AA20 BL 0x1C16CF4
	0x0336AA24 ADRP X0, 0xDC0000
	0x0336AA28 LDR X0, [X0 + 0xBE0]
	0x0336AA2C BL 0x1C16CF4
	0x0336AA30 ADRP X0, 0xDC0000
	0x0336AA34 LDR X0, [X0 + 0xBE8]
	0x0336AA38 BL 0x1C16CF4
	0x0336AA3C ADRP X0, 0xD91000
	0x0336AA40 LDR X0, [X0 + 0x440]
	0x0336AA44 BL 0x1C16CF4
	0x0336AA48 ADRP X0, 0xDC0000
	0x0336AA4C LDR X0, [X0 + 0xBF0]
	0x0336AA50 BL 0x1C16CF4
	0x0336AA54 ADRP X0, 0xD8B000
	0x0336AA58 LDR X0, [X0 + 0x4B0]
	0x0336AA5C BL 0x1C16CF4
	0x0336AA60 ADRP X0, 0xDC0000
	0x0336AA64 LDR X0, [X0 + 0xBF8]
	0x0336AA68 BL 0x1C16CF4
	0x0336AA6C MOVZ W8, 0x1
	0x0336AA70 STRB W8, [X20 + 0xEC3]
	0x0336AA74 LDR X0, [X19]
	0x0336AA78 ADRP X20, 0xDBE000
	0x0336AA7C ADRP X23, 0xD92000
	0x0336AA80 ADRP X22, 0xDC0000
	0x0336AA84 ADRP X21, 0xD8B000
	0x0336AA88 LDR W8, [X0 + 0xE0]
	0x0336AA8C LDR X20, [X20 + 0x548]
	0x0336AA90 LDR X23, [X23 + 0x8D8]
	0x0336AA94 LDR X22, [X22 + 0xBD0]
	0x0336AA98 LDR X21, [X21 + 0xC48]
	0x0336AA9C CBNZ W8, 0x336AAA8
	0x0336AAA0 BL 0x1C16DFC
	0x0336AAA4 LDR X0, [X19]
	0x0336AAA8 LDR X8, [X0 + 0xB8]
	0x0336AAAC LDR X9, [X20]
	0x0336AAB0 MOVZ W1, 0x13
	0x0336AAB4 LDR X8, [X8 + 0x10]
	0x0336AAB8 LDR X9, [X9 + 0xB8]
	0x0336AABC STR X8, [X9]
	0x0336AAC0 LDR X0, [X23]
	0x0336AAC4 BL 0x1C16D6C
	0x0336AAC8 LDR X1, [X22]
	0x0336AACC MOV X2, X31
	0x0336AAD0 MOV X19, X0
	0x0336AAD4 BL 0x32C5BD8
	0x0336AAD8 LDR X8, [X20]
	0x0336AADC LDR X8, [X8 + 0xB8]
	0x0336AAE0 STR X19, [X8 + 0x8]
	0x0336AAE4 LDR X0, [X21]
	0x0336AAE8 LDR W8, [X0 + 0xE0]
	0x0336AAEC CBNZ W8, 0x336AAF4
	0x0336AAF0 BL 0x1C16DFC
	0x0336AAF4 MOV X0, X31
	0x0336AAF8 BL 0x3338524
	0x0336AAFC CBZ X0, 0x336AC34
	0x0336AB00 LDR X8, [X0]
	0x0336AB04 LDR X9, [X8 + 0x238]
	0x0336AB08 LDR X1, [X8 + 0x240]
	0x0336AB0C BLR X9
	0x0336AB10 LDR X8, [X20]
	0x0336AB14 LDR X8, [X8 + 0xB8]
	0x0336AB18 STR X0, [X8 + 0x10]
	0x0336AB1C CBZ X0, 0x336AC34
	0x0336AB20 MOV X1, X31
	0x0336AB24 BL 0x3325C58
	0x0336AB28 LDR X8, [X20]
	0x0336AB2C LDR X9, [X8 + 0xB8]
	0x0336AB30 LDR X8, [X9 + 0x10]
	0x0336AB34 STR X0, [X9 + 0x18]
	0x0336AB38 CBZ X8, 0x336AC34
	0x0336AB3C ADRP X19, 0xD89000
	0x0336AB40 LDR X19, [X19 + 0xAC8]
	0x0336AB44 MOV X0, X8
	0x0336AB48 MOV X1, X31
	0x0336AB4C BL 0x3325B50
	0x0336AB50 LDR X8, [X20]
	0x0336AB54 MOVZ W1, 0x7
	0x0336AB58 LDR X8, [X8 + 0xB8]
	0x0336AB5C STR X0, [X8 + 0x20]
	0x0336AB60 LDR X0, [X19]
	0x0336AB64 BL 0x1C16D6C
	0x0336AB68 CBZ X0, 0x336AC34
	0x0336AB6C LDR W8, [X0 + 0x18]
	0x0336AB70 CBZ W8, 0x336AC30
	0x0336AB74 ADRP X9, 0xD8B000
	0x0336AB78 LDR X9, [X9 + 0x4B0]
	0x0336AB7C CMP W8, 0x1
	0x0336AB80 LDR X9, [X9]
	0x0336AB84 STR X9, [X0 + 0x20]
	0x0336AB88 B.EQ 0x336AC30
	0x0336AB8C ADRP X9, 0xD91000
	0x0336AB90 LDR X9, [X9 + 0x440]
	0x0336AB94 CMP W8, 0x2
	0x0336AB98 LDR X9, [X9]
	0x0336AB9C STR X9, [X0 + 0x28]
	0x0336ABA0 B.LS 0x336AC30
	0x0336ABA4 ADRP X9, 0xDC0000
	0x0336ABA8 LDR X9, [X9 + 0xBF8]
	0x0336ABAC CMP W8, 0x3
	0x0336ABB0 LDR X9, [X9]
	0x0336ABB4 STR X9, [X0 + 0x30]
	0x0336ABB8 B.EQ 0x336AC30
	0x0336ABBC ADRP X9, 0xDC0000
	0x0336ABC0 LDR X9, [X9 + 0xBE8]
	0x0336ABC4 CMP W8, 0x4
	0x0336ABC8 LDR X9, [X9]
	0x0336ABCC STR X9, [X0 + 0x38]
	0x0336ABD0 B.LS 0x336AC30
	0x0336ABD4 ADRP X9, 0xDC0000
	0x0336ABD8 LDR X9, [X9 + 0xBD8]
	0x0336ABDC CMP W8, 0x5
	0x0336ABE0 LDR X9, [X9]
	0x0336ABE4 STR X9, [X0 + 0x40]
	0x0336ABE8 B.EQ 0x336AC30
	0x0336ABEC ADRP X9, 0xDC0000
	0x0336ABF0 LDR X9, [X9 + 0xBE0]
	0x0336ABF4 CMP W8, 0x6
	0x0336ABF8 LDR X9, [X9]
	0x0336ABFC STR X9, [X0 + 0x48]
	0x0336AC00 B.LS 0x336AC30
	0x0336AC04 ADRP X8, 0xDC0000
	0x0336AC08 LDR X8, [X8 + 0xBF0]
	0x0336AC0C LDP X22, X21, [X31 + 0x10]
	0x0336AC10 LDR X8, [X8]
	0x0336AC14 STR X8, [X0 + 0x50]
	0x0336AC18 LDR X8, [X20]
	0x0336AC1C LDP X20, X19, [X31 + 0x20]
	0x0336AC20 LDR X8, [X8 + 0xB8]
	0x0336AC24 STR X0, [X8 + 0x28]
	0x0336AC28 LDP X30, X23, [X31], #0x30
	0x0336AC2C RET
	0x0336AC30 BL 0x1C16F28
	0x0336AC34 BL 0x1C16F20
	0x0336AC38 STR X30, [X31 - 0x50]!
	0x0336AC3C STP X26, X25, [X31 + 0x10]
	0x0336AC40 STP X24, X23, [X31 + 0x20]
	0x0336AC44 STP X22, X21, [X31 + 0x30]
	0x0336AC48 STP X20, X19, [X31 + 0x40]
	0x0336AC4C ADRP X26, 0x1072000
	0x0336AC50 LDRB W8, [X26 + 0xEC6]
	0x0336AC54 MOV X19, X6
	0x0336AC58 MOV W21, W5
	0x0336AC5C MOV X20, X4
	0x0336AC60 MOV X22, X3
	0x0336AC64 MOV X23, X2
	0x0336AC68 MOV X24, X1
	0x0336AC6C MOV X25, X0
	0x0336AC70 TBNZ X8, 0x0, 0x336ACA0
	0x0336AC74 ADRP X0, 0xDBE000
	0x0336AC78 LDR X0, [X0 + 0x588]
	0x0336AC7C BL 0x1C16CF4
	0x0336AC80 ADRP X0, 0xDB8000
	0x0336AC84 LDR X0, [X0 + 0x28]
	0x0336AC88 BL 0x1C16CF4
	0x0336AC8C ADRP X0, 0xDC0000
	0x0336AC90 LDR X0, [X0 + 0xC00]
	0x0336AC94 BL 0x1C16CF4
	0x0336AC98 MOVZ W8, 0x1
	0x0336AC9C STRB W8, [X26 + 0xEC6]
	0x0336ACA0 CBZ W24, 0x336ACF4

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0x1073000
	011 Move W8, [X24+3770]
	012 Move X23, X4
	013 Move X21, X3
	014 Move X22, X2
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {44}
	021 Move X0, 0xDBF000
	022 Move X0, [X0+808]
	023 Call 0x1C17CF4
	024 Move X0, 0xDBF000
	025 Move X0, [X0+1352]
	026 Call 0x1C17CF4
	027 Move X0, 0xD8B000
	028 Move X0, [X0+2544]
	029 Call 0x1C17CF4
	030 Move X0, 0xDC1000
	031 Move X0, [X0+3000]
	032 Call 0x1C17CF4
	033 Move X0, 0xDBF000
	034 Move X0, [X0+784]
	035 Call 0x1C17CF4
	036 Move X0, 0xD8C000
	037 Move X0, [X0+1392]
	038 Call 0x1C17CF4
	039 Move X0, 0xD8A000
	040 Move X0, [X0+1728]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X24+3770], W8
	044 Compare W19, 0
	045 JumpIfEqual {237}
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Move X26, 0xDBF000
	048 Move X26, [X26+1352]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Subtract W9, W8, 111
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X8, -41758720
	055 Add X8, X8, 1916
	056 NotImplemented "Instruction ADR not yet implemented."
	057 Move W11, [X8]
	058 Add X10, X10, X11
	059 CallNoReturn X10
	060 Move X0, [X26]
	061 Move X24, [X23]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {67}
	065 Call 0x1C17DFC
	066 Move X0, [X26]
	067 Move X8, 0xD8C000
	068 Move X8, [X8+1392]
	069 Move X9, [X0+184]
	070 Move X8, [X8]
	071 Move X25, [X9]
	072 Move W10, [X8+224]
	073 Compare W10, 0
	074 JumpIfNotEqual {77}
	075 Move X0, X8
	076 Call 0x1C17DFC
	077 Move X0, X24
	078 Move X1, X25
	079 Move X2, X31
	080 Call TimeSpan.op_Inequality, X0, X1
	081 Move X8, 0xD8B000
	082 Move X8, [X8+2544]
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {98}
	087 Move X0, [X8]
	088 Move X24, [X22]
	089 Move X23, [X23]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move X0, X24
	095 Move X1, X23
	096 Call DateTime.op_Subtraction, X0, X1
	097 Move [X22], X0
	098 Move X0, [X8]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Move X0, X22
	104 Call DateTime.get_Kind, X0
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X0, [X26]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move X8, 0xDBF000
	112 Move X8, [X8+808]
	113 Move X0, [X8]
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1C17DFC
	118 Move X0, X31
	119 Call DateTimeFormatInfo.get_InvariantInfo
	120 Move [X21], X0
	121 Move X0, [X26]
	122 Move X21, [X21]
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {127}
	126 Call 0x1C17DFC
	127 Move X0, X20
	128 Move X1, X19
	129 Move X2, X21
	130 Move X20, [X31+64]
	131 Move X19, [X31+72]
	132 Move X22, [X31+48]
	133 Move X21, [X31+56]
	134 Move X24, [X31+32]
	135 Move X23, [X31+40]
	136 Move X26, [X31+16]
	137 Move X25, [X31+24]
	138 Move X30, [X31+80]
	139 Call DateTimeFormat.GetRealFormat, X0, X1
	140 Return X0
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X0, [X26]
	143 Move X23, [X23]
	144 Move W8, [X0+224]
	145 Compare W8, 0
	146 JumpIfNotEqual {149}
	147 Call 0x1C17DFC
	148 Move X0, [X26]
	149 Move X8, 0xD8C000
	150 Move X8, [X8+1392]
	151 Move X9, [X0+184]
	152 Move X8, [X8]
	153 Move X24, [X9]
	154 Move W10, [X8+224]
	155 Compare W10, 0
	156 JumpIfNotEqual {159}
	157 Move X0, X8
	158 Call 0x1C17DFC
	159 Move X0, X23
	160 Move X1, X24
	161 Move X2, X31
	162 Call TimeSpan.op_Inequality, X0, X1
	163 Move TEMP, X0
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfEqual {240}
	167 Move X0, [X21]
	168 Compare X0, 0
	169 JumpIfEqual {238}
	170 Move X1, X31
	171 Call DateTimeFormatInfo.Clone, X0
	172 Compare X0, 0
	173 JumpIfEqual {257}
	174 Move X8, 0xDBF000
	175 Move X8, [X8+808]
	176 Move X9, [X0]
	177 Move X1, [X8]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move [X21], X0
	180 Move X1, [X8]
	181 Move X8, [X0]
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move X0, [X0+120]
	184 Compare X0, 0
	185 JumpIfEqual {238}
	186 Move X1, X31
	187 Call "il2cpp_vm_object_is_inst", X0
	188 Move X8, 0xD8A000
	189 Move X8, [X8+1728]
	190 Move X9, 0xDC1000
	191 Move X23, X0
	192 Move X8, [X8]
	193 Move X9, [X9+3000]
	194 Move W10, [X8+224]
	195 Move X24, [X9]
	196 Compare W10, 0
	197 JumpIfNotEqual {200}
	198 Move X0, X8
	199 Call 0x1C17DFC
	200 Move X0, X24
	201 Move X1, X31
	202 Call Type.GetTypeFromHandle, X0
	203 Move X1, X0
	204 Move X0, X23
	205 Move X2, X31
	206 Call Type.op_Inequality, X0, X1
	207 Move TEMP, X0
	208 And TEMP, TEMP, 1
	209 Compare TEMP, 1
	210 JumpIfNotEqual {227}
	211 Move X8, 0xDBF000
	212 Move X8, [X8+784]
	213 Move X23, [X21]
	214 Move X0, [X8]
	215 Move W8, [X0+224]
	216 Compare W8, 0
	217 JumpIfNotEqual {219}
	218 Call 0x1C17DFC
	219 Move X0, X31
	220 Call GregorianCalendar.GetDefaultInstance
	221 Compare X23, 0
	222 JumpIfEqual {238}
	223 Move X1, X0
	224 Move X0, X23
	225 Move X2, X31
	226 Call DateTimeFormatInfo.set_Calendar, X0, X1
	227 Move X8, 0xD8B000
	228 Move X8, [X8+2544]
	229 Move X0, [X8]
	230 Move W8, [X0+224]
	231 Compare W8, 0
	232 JumpIfNotEqual {234}
	233 Call 0x1C17DFC
	234 Move X0, X22
	235 Call DateTime.ToUniversalTime, X0
	236 Move [X22], X0
	237 Call 0x1C17F28
	238 Call 0x1C17F20
	239 Call 0x1C181E0
	240 Move X0, 0xDB7000
	241 Move X0, [X0+3080]
	242 Call 0x1C17D08
	243 Call 0x1C17F10
	244 Move X19, X0
	245 Move X0, 0xDB9000
	246 Move X0, [X0+1560]
	247 Call 0x1C17D08
	248 Move X1, X0
	249 Move X0, X19
	250 Call FormatException..ctor, X0, X1
	251 Move X0, 0xDC1000
	252 Move X0, [X0+3008]
	253 Call 0x1C17D08
	254 Move X1, X0
	255 Move X0, X19
	256 Call 0x1C17DEC
	257 Move [X21], X31
	258 Call 0x1C17F20

Method: System.String Format(System.DateTime dateTime, System.String format, System.IFormatProvider provider)

Disassembly:
	0x03363230 ADRP X22, 0xD91000
	0x03363234 LDRB W8, [X21 + 0xE70]
	0x03363238 LDR X22, [X22 + 0x9F0]
	0x0336323C MOV X19, X1
	0x03363240 MOV X20, X0
	0x03363244 TBNZ X8, 0x0, 0x336325C
	0x03363248 ADRP X0, 0xD91000
	0x0336324C LDR X0, [X0 + 0x9F0]
	0x03363250 BL 0x1C16CF4
	0x03363254 MOVZ W8, 0x1
	0x03363258 STRB W8, [X21 + 0xE70]
	0x0336325C LDR X0, [X22]
	0x03363260 LDR W8, [X0 + 0xE0]
	0x03363264 CBNZ W8, 0x336326C
	0x03363268 BL 0x1C16DFC
	0x0336326C AND X8, X20, 0x3FFFFFFF
	0x03363270 AND X9, X19, 0x3FFFFFFF
	0x03363274 LDP X20, X19, [X31 + 0x20]
	0x03363278 LDP X22, X21, [X31 + 0x10]
	0x0336327C CMP X8, X9
	0x03363280 CSET W0, HI
	0x03363284 LDR X30, [X31], #0x30
	0x03363288 RET
	0x0336328C STR X30, [X31 - 0x30]!
	0x03363290 STP X22, X21, [X31 + 0x10]
	0x03363294 STP X20, X19, [X31 + 0x20]
	0x03363298 ADRP X21, 0x1079000
	0x0336329C ADRP X22, 0xD91000
	0x033632A0 LDRB W8, [X21 + 0xE71]
	0x033632A4 LDR X22, [X22 + 0x9F0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x107A000
	008 Move X22, 0xDC6000
	009 Move W8, [X23+3771]
	010 Move X22, [X22+1352]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xDC6000
	019 Move X0, [X0+1352]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+3771], W8
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X22]
	029 Move X8, [X0+184]
	030 Move X0, X21
	031 Move X1, X20
	032 Move X2, X19
	033 Move X3, [X8]
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Move X23, [X31+56]
	040 Call DateTimeFormat.Format, X0, X1, X2, X3
	041 Return X0

Method: System.String Format(System.DateTime dateTime, System.String format, System.IFormatProvider provider, System.TimeSpan offset)

Disassembly:
	0x033660EC MOVZ W8, 0x1
	0x033660F0 STRB W8, [X21 + 0xE92]
	0x033660F4 CBZ X20, 0x3366110
	0x033660F8 ADRP X8, 0xD90000
	0x033660FC LDR X8, [X8 + 0x978]
	0x03366100 LDR X9, [X20]
	0x03366104 LDR X8, [X8]
	0x03366108 CMP X9, X8
	0x0336610C B.EQ 0x3366120
	0x03366110 MOV W0, W31
	0x03366114 LDP X20, X19, [X31 + 0x10]
	0x03366118 LDP X30, X21, [X31], #0x20
	0x0336611C RET
	0x03366120 MOV X0, X20
	0x03366124 BL 0x1C16E08
	0x03366128 LDR V1, [X0]
	0x0336612C LDR V0, [X19]
	0x03366130 FCMP D1, D0
	0x03366134 B.EQ 0x3366168
	0x03366138 FMOV X8, D1
	0x0336613C MOVZ X9, 0x1
	0x03366140 AND X8, X8, 0x7FFFFFFF
	0x03366144 MOVK X9, 0x7FF00000
	0x03366148 CMP X8, X9
	0x0336614C B.CC 0x3366110
	0x03366150 FMOV X8, D0
	0x03366154 AND X8, X8, 0x7FFFFFFF
	0x03366158 MOVZ X9, 0x7FF00000
	0x0336615C CMP X8, X9
	0x03366160 CSET W0, HI
	0x03366164 B 0x3366114
	0x03366168 MOVZ W0, 0x1
	0x0336616C B 0x3366114
	0x03366170 LDR V1, [X0]
	0x03366174 FCMP D1, D0
	0x03366178 B.NE 0x3366184
	0x0336617C MOVZ W0, 0x1
	0x03366180 RET
	0x03366184 FMOV X8, D0
	0x03366188 MOVZ X9, 0x1
	0x0336618C AND X8, X8, 0x7FFFFFFF
	0x03366190 MOVK X9, 0x7FF00000
	0x03366194 CMP X8, X9
	0x03366198 B.CC 0x33661B4
	0x0336619C FMOV X8, D1
	0x033661A0 AND X8, X8, 0x7FFFFFFF
	0x033661A4 MOVZ X9, 0x7FF00000
	0x033661A8 CMP X8, X9
	0x033661AC CSET W0, HI
	0x033661B0 RET
	0x033661B4 MOV W0, W31
	0x033661B8 RET
	0x033661BC LDR X8, [X0]
	0x033661C0 SUB X9, X31, X8
	0x033661C4 AND X10, X8, 0x7FFFFFFFFFFFFFFF
	0x033661C8 ANDS X31, X9, 0x7FFFFFFFFFFFFFFF
	0x033661CC CSEL X8, X10, X8, EQ
	0x033661D0 UBFM X9, X8, 0x20, 0x3F
	0x033661D4 EOR W0, W9, W8, 0x0
	0x033661D8 RET
	0x033661DC STR D8, [X31 - 0x30]!
	0x033661E0 STP X30, X21, [X31 + 0x10]
	0x033661E4 STP X20, X19, [X31 + 0x20]
	0x033661E8 ADRP X21, 0x1076000
	0x033661EC ADRP X20, 0xDC2000
	0x033661F0 LDRB W8, [X21 + 0xE93]
	0x033661F4 LDR X20, [X20 + 0x78]
	0x033661F8 MOV X19, X0
	0x033661FC TBNZ X8, 0x0, 0x3366214
	0x03366200 ADRP X0, 0xDC2000
	0x03366204 LDR X0, [X0 + 0x78]
	0x03366208 BL 0x1C16CF4
	0x0336620C MOVZ W8, 0x1
	0x03366210 STRB W8, [X21 + 0xE93]
	0x03366214 LDR V8, [X19]
	0x03366218 MOV X0, X31
	0x0336621C BL 0x333AE98
	0x03366220 LDR X8, [X20]
	0x03366224 MOV X19, X0
	0x03366228 LDR W9, [X8 + 0xE0]
	0x0336622C CBNZ W9, 0x3366238
	0x03366230 MOV X0, X8
	0x03366234 BL 0x1C16DFC
	0x03366238 MOV X1, X19
	0x0336623C LDP X20, X19, [X31 + 0x20]
	0x03366240 LDP X30, X21, [X31 + 0x10]
	0x03366244 MOV V0.16B, V8.16B
	0x03366248 MOV X0, X31
	0x0336624C MOV X2, X31
	0x03366250 LDR V8, [X31], #0x30
	0x03366254 B 0x3382374
	0x03366258 STR D8, [X31 - 0x30]!
	0x0336625C STR X30, [X31 + 0x8]
	0x03366260 STP X22, X21, [X31 + 0x10]
	0x03366264 STP X20, X19, [X31 + 0x20]
	0x03366268 ADRP X22, 0x1076000
	0x0336626C ADRP X21, 0xDC2000
	0x03366270 LDRB W8, [X22 + 0xE94]
	0x03366274 LDR X21, [X21 + 0x78]
	0x03366278 MOV X19, X1
	0x0336627C MOV X20, X0
	0x03366280 TBNZ X8, 0x0, 0x3366298
	0x03366284 ADRP X0, 0xDC2000
	0x03366288 LDR X0, [X0 + 0x78]
	0x0336628C BL 0x1C16CF4
	0x03366290 MOVZ W8, 0x1
	0x03366294 STRB W8, [X22 + 0xE94]
	0x03366298 LDR V8, [X20]
	0x0336629C MOV X0, X31
	0x033662A0 BL 0x333AE98
	0x033662A4 LDR X8, [X21]
	0x033662A8 MOV X20, X0
	0x033662AC LDR W9, [X8 + 0xE0]
	0x033662B0 CBNZ W9, 0x33662BC
	0x033662B4 MOV X0, X8
	0x033662B8 BL 0x1C16DFC
	0x033662BC MOV X0, X19
	0x033662C0 MOV X1, X20
	0x033662C4 LDP X20, X19, [X31 + 0x20]
	0x033662C8 LDP X22, X21, [X31 + 0x10]
	0x033662CC LDR X30, [X31 + 0x8]
	0x033662D0 MOV V0.16B, V8.16B
	0x033662D4 MOV X2, X31
	0x033662D8 LDR V8, [X31], #0x30
	0x033662DC B 0x3382374
	0x033662E0 STR D8, [X31 - 0x30]!
	0x033662E4 STR X30, [X31 + 0x8]
	0x033662E8 STP X22, X21, [X31 + 0x10]
	0x033662EC STP X20, X19, [X31 + 0x20]
	0x033662F0 ADRP X22, 0x1076000
	0x033662F4 ADRP X21, 0xDC2000
	0x033662F8 LDRB W8, [X22 + 0xE95]
	0x033662FC LDR X21, [X21 + 0x78]
	0x03366300 MOV X19, X1
	0x03366304 MOV X20, X0
	0x03366308 TBNZ X8, 0x0, 0x3366320
	0x0336630C ADRP X0, 0xDC2000
	0x03366310 LDR X0, [X0 + 0x78]
	0x03366314 BL 0x1C16CF4
	0x03366318 MOVZ W8, 0x1
	0x0336631C STRB W8, [X22 + 0xE95]
	0x03366320 LDR V8, [X20]
	0x03366324 MOV X0, X19
	0x03366328 MOV X1, X31
	0x0336632C BL 0x333ACEC
	0x03366330 LDR X8, [X21]
	0x03366334 MOV X19, X0
	0x03366338 LDR W9, [X8 + 0xE0]
	0x0336633C CBNZ W9, 0x3366348
	0x03366340 MOV X0, X8
	0x03366344 BL 0x1C16DFC
	0x03366348 MOV X1, X19
	0x0336634C LDP X20, X19, [X31 + 0x20]
	0x03366350 LDP X22, X21, [X31 + 0x10]
	0x03366354 LDR X30, [X31 + 0x8]
	0x03366358 MOV V0.16B, V8.16B
	0x0336635C MOV X0, X31
	0x03366360 MOV X2, X31
	0x03366364 LDR V8, [X31], #0x30
	0x03366368 B 0x3382374
	0x0336636C STR D8, [X31 - 0x40]!
	0x03366370 STP X30, X23, [X31 + 0x10]
	0x03366374 STP X22, X21, [X31 + 0x20]
	0x03366378 STP X20, X19, [X31 + 0x30]
	0x0336637C ADRP X23, 0x1076000
	0x03366380 ADRP X22, 0xDC2000
	0x03366384 LDRB W8, [X23 + 0xE96]
	0x03366388 LDR X22, [X22 + 0x78]
	0x0336638C MOV X20, X2
	0x03366390 MOV X19, X1
	0x03366394 MOV X21, X0
	0x03366398 TBNZ X8, 0x0, 0x33663B0

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Add X29, X31, 0
	011 Subtract X31, X31, 32
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X24+40]
	014 Move X23, 0x1077000
	015 Move X19, X3
	016 Move X22, X2
	017 Move [X29-8], X8
	018 Move W8, [X23+3772]
	019 Move X21, X1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {45}
	025 Move X0, 0xDC3000
	026 Move X0, [X0+808]
	027 Call 0x1C17CF4
	028 Move X0, 0xDC3000
	029 Move X0, [X0+1352]
	030 Call 0x1C17CF4
	031 Move X0, 0xDBC000
	032 Move X0, [X0+2128]
	033 Call 0x1C17CF4
	034 Move X0, 0xDC5000
	035 Move X0, [X0+2840]
	036 Call 0x1C17CF4
	037 Move X0, 0xDBD000
	038 Move X0, [X0+1256]
	039 Call 0x1C17CF4
	040 Move X0, 0xDB7000
	041 Move X0, [X0+1656]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X23+3772], W8
	045 Move X25, 0xDC3000
	046 Move X25, [X25+1352]
	047 Move [X29-24], X31
	048 Move [X29-16], X31
	049 Move [X29-32], X31
	050 Compare X21, 0
	051 JumpIfEqual {105}
	052 Move W8, [X21+16]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X0, X21
	055 Move W1, W31
	056 Move X2, X31
	057 Call String.get_Chars, X0, X1
	058 And W8, W0, 0xFFFF
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add X8, X31, 0
	065 Subtract X21, X8, 80
	066 Add X31, X21, 0
	067 Move X0, [X25]
	068 NotImplemented "Instruction MOVI not yet implemented."
	069 NotImplemented "Instruction STURH not yet implemented."
	070 Move [X8-48], V0
	071 Move [X8-40], V0
	072 Move [X8-80], V0
	073 Move [X8-72], V0
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Subtract X4, X29, 12
	079 Move W3, 33
	080 Move X0, X20
	081 Move X1, X19
	082 Move X2, X21
	083 Call DateTimeFormat.TryFormatO, X0, X1, X2, X3
	084 Move X8, 0xDBC000
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 Move X8, [X8+2128]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X20, [X8]
	089 Move X0, X31
	090 Call ThrowHelper.ThrowArgumentOutOfRangeException
	091 Move X0, [X20+32]
	092 Move W8, [X0+309]
	093 Move TEMP, X8
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {98}
	097 Call 0x1C5D684
	098 Move X8, 0xDC5000
	099 Move X8, [X8+2840]
	100 Subtract X0, X29, 32
	101 Move [X29-32], X21
	102 Move [X29-24], X19
	103 Move X1, [X8]
	104 Call Span`1<Char>.ToString, X0
	105 Move X8, 0xDC3000
	106 Move X8, [X8+808]
	107 Move X0, [X8]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X0, X22
	113 Move X1, X31
	114 Call DateTimeFormatInfo.GetInstance, X0
	115 Move X23, 0x1074000
	116 Move W8, [X23+1890]
	117 Move X22, X0
	118 Compare W8, 0
	119 JumpIfEqual {127}
	120 Compare X21, 0
	121 JumpIfEqual {134}
	122 Move X0, X21
	123 Move X1, X31
	124 Call String.GetRawStringData, X0
	125 Move W21, [X21+16]
	126 Move X23, X0
	127 Move X0, 0xDB5000
	128 Move X0, [X0+656]
	129 Call 0x1C17CF4
	130 Move W8, 1
	131 Move [X23+1890], W8
	132 Compare X21, 0
	133 JumpIfNotEqual {122}
	134 Move X23, X31
	135 Move X0, [X25]
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1C17DFC
	140 Move X0, X20
	141 Move X1, X23
	142 Move X2, X21
	143 Move X3, X22
	144 Move X4, X19
	145 Call DateTimeFormat.FormatStringBuilder, X0, X1, X2, X3
	146 Move X1, X31
	147 Call StringBuilderCache.GetStringAndRelease, X0
	148 Move X21, X0
	149 Move X8, [X24+40]
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X0, X21
	153 Add X31, X29, 0
	154 Move X20, [X31+64]
	155 Move X19, [X31+72]
	156 Move X22, [X31+48]
	157 Move X21, [X31+56]
	158 Move X24, [X31+32]
	159 Move X23, [X31+40]
	160 Move X25, [X31+16]
	161 Move X29, [X31+80]
	162 Move X30, [X31+88]
	163 Return X0
	164 Move W0, 29
	165 Move X1, X31
	166 Call String.FastAllocateString, X0
	167 Compare X0, 0
	168 JumpIfEqual {186}
	169 Move X1, X31
	170 Move X21, X0
	171 Call String.GetRawStringData, X0
	172 Move X8, [X25]
	173 Move W22, [X21+16]
	174 Move X23, X0
	175 Move W9, [X8+224]
	176 Compare W9, 0
	177 JumpIfNotEqual {180}
	178 Move X0, X8
	179 Call 0x1C17DFC
	180 Subtract X4, X29, 16
	181 Move X0, X20
	182 Move X1, X19
	183 Move X2, X23
	184 Move X3, X22
	185 Call DateTimeFormat.TryFormatR, X0, X1, X2, X3
	186 Call 0x1C17F20
	187 Call 0x3EB2B20

Method: System.Boolean TryFormat(System.DateTime dateTime, System.Span`1<System.Char> destination, out System.Int32 charsWritten, System.ReadOnlySpan`1<System.Char> format, System.IFormatProvider provider)

Disassembly:
	0x03363490 STP X20, X19, [X31 + 0x10]
	0x03363494 ADRP X0, 0xDC5000
	0x03363498 LDR X0, [X0 + 0x30]
	0x0336349C BL 0x1C16D08
	0x033634A0 MOV X19, X0
	0x033634A4 ADRP X0, 0xDC2000
	0x033634A8 LDR X0, [X0 + 0x98]
	0x033634AC BL 0x1C16D08
	0x033634B0 MOV X20, X0
	0x033634B4 ADRP X0, 0xDC2000
	0x033634B8 LDR X0, [X0 + 0x80]
	0x033634BC BL 0x1C16D08
	0x033634C0 MOV X2, X0
	0x033634C4 MOV X0, X19
	0x033634C8 MOV X1, X20
	0x033634CC MOV X3, X31
	0x033634D0 BL 0x320A264
	0x033634D4 MOV X19, X0
	0x033634D8 ADRP X0, 0xD98000
	0x033634DC LDR X0, [X0 + 0xC08]
	0x033634E0 BL 0x1C16D08
	0x033634E4 BL 0x1C16F10
	0x033634E8 MOV X1, X19
	0x033634EC MOV X2, X31
	0x033634F0 MOV X20, X0
	0x033634F4 BL 0x337B498
	0x033634F8 ADRP X0, 0xDC7000
	0x033634FC LDR X0, [X0 + 0xA58]
	0x03363500 BL 0x1C16D08
	0x03363504 MOV X1, X0
	0x03363508 MOV X0, X20
	0x0336350C BL 0x1C16DEC
	0x03363510 STR X30, [X31 - 0x20]!
	0x03363514 STP X20, X19, [X31 + 0x10]
	0x03363518 ADRP X0, 0xDC5000
	0x0336351C LDR X0, [X0 + 0x30]
	0x03363520 BL 0x1C16D08
	0x03363524 MOV X19, X0
	0x03363528 ADRP X0, 0xDC2000
	0x0336352C LDR X0, [X0 + 0x98]
	0x03363530 BL 0x1C16D08
	0x03363534 MOV X20, X0
	0x03363538 ADRP X0, 0xDC2000
	0x0336353C LDR X0, [X0 + 0xB8]
	0x03363540 BL 0x1C16D08
	0x03363544 MOV X2, X0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X27, 0x107A000
	013 Move X26, 0xDC6000
	014 Move W8, [X27+3773]
	015 Move X26, [X26+1352]
	016 Move X19, X6
	017 Move X20, X5
	018 Move X21, X4
	019 Move X22, X3
	020 Move X23, X2
	021 Move X24, X1
	022 Move X25, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0xDC6000
	028 Move X0, [X0+1352]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X27+3773], W8
	032 Move X0, [X26]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X26]
	038 Move X8, [X0+184]
	039 Move X0, X25
	040 Move X1, X24
	041 Move X2, X23
	042 Move X7, [X8]
	043 Move X3, X22
	044 Move X4, X21
	045 Move X5, X20
	046 Move X6, X19
	047 Call DateTimeFormat.TryFormat, X0, X1, X2, X3, X4, X5
	048 Move X20, [X31+80]
	049 Move X19, [X31+88]
	050 Move X22, [X31+64]
	051 Move X21, [X31+72]
	052 Move X24, [X31+48]
	053 Move X23, [X31+56]
	054 Move X26, [X31+32]
	055 Move X25, [X31+40]
	056 Move X30, [X31+16]
	057 Move X27, [X31+24]
	058 And W0, W0, 1
	059 Add X31, X31, 96
	060 Return X0

Method: System.Boolean TryFormat(System.DateTime dateTime, System.Span`1<System.Char> destination, out System.Int32 charsWritten, System.ReadOnlySpan`1<System.Char> format, System.IFormatProvider provider, System.TimeSpan offset)

Disassembly:
	0x03366628 MOV X0, X8
	0x0336662C BL 0x1C16DFC
	0x03366630 MOV X0, X20
	0x03366634 MOV X1, X21
	0x03366638 MOV X3, X19
	0x0336663C LDP X20, X19, [X31 + 0x20]
	0x03366640 LDP X22, X21, [X31 + 0x10]
	0x03366644 MOVZ W2, 0xE7
	0x03366648 MOV X4, X31
	0x0336664C LDR X30, [X31], #0x30
	0x03366650 B 0x338A8F0
	0x03366654 STP X30, X23, [X31 - 0x30]!
	0x03366658 STP X22, X21, [X31 + 0x10]
	0x0336665C STP X20, X19, [X31 + 0x20]
	0x03366660 ADRP X22, 0x1076000
	0x03366664 LDRB W8, [X22 + 0xE9A]
	0x03366668 MOV X20, X2
	0x0336666C MOV W19, W1
	0x03366670 MOV X21, X0
	0x03366674 TBNZ X8, 0x0, 0x336668C
	0x03366678 ADRP X0, 0xDC2000
	0x0336667C LDR X0, [X0 + 0x78]
	0x03366680 BL 0x1C16CF4
	0x03366684 MOVZ W8, 0x1
	0x03366688 STRB W8, [X22 + 0xE9A]
	0x0336668C MOV W0, W19
	0x03366690 MOV X1, X31
	0x03366694 BL 0x333B408
	0x03366698 CBNZ X21, 0x33666A8
	0x0336669C MOVZ W0, 0x30
	0x033666A0 MOV X1, X31
	0x033666A4 BL 0x338F3E0
	0x033666A8 ADRP X22, 0x1073000
	0x033666AC LDRB W8, [X22 + 0x762]
	0x033666B0 CBNZ W8, 0x33666C8
	0x033666B4 ADRP X0, 0xDB4000
	0x033666B8 LDR X0, [X0 + 0x290]
	0x033666BC BL 0x1C16CF4
	0x033666C0 MOVZ W8, 0x1
	0x033666C4 STRB W8, [X22 + 0x762]
	0x033666C8 ADRP X23, 0xDC2000
	0x033666CC LDR X23, [X23 + 0x78]
	0x033666D0 CBZ X21, 0x33666EC
	0x033666D4 MOV X0, X21
	0x033666D8 MOV X1, X31
	0x033666DC BL 0x3225708
	0x033666E0 LDR W21, [X21 + 0x10]
	0x033666E4 MOV X22, X0
	0x033666E8 B 0x33666F0
	0x033666EC MOV X22, X31
	0x033666F0 MOV X0, X20
	0x033666F4 MOV X1, X31
	0x033666F8 BL 0x333ACEC
	0x033666FC LDR X8, [X23]
	0x03366700 MOV X20, X0
	0x03366704 LDR W9, [X8 + 0xE0]
	0x03366708 CBNZ W9, 0x3366714
	0x0336670C MOV X0, X8
	0x03366710 BL 0x1C16DFC
	0x03366714 MOV X0, X22
	0x03366718 MOV X1, X21
	0x0336671C MOV W2, W19
	0x03366720 MOV X3, X20
	0x03366724 LDP X20, X19, [X31 + 0x20]
	0x03366728 LDP X22, X21, [X31 + 0x10]
	0x0336672C MOV X4, X31
	0x03366730 LDP X30, X23, [X31], #0x30
	0x03366734 B 0x338A8F0
	0x03366738 STP X30, X21, [X31 - 0x20]!
	0x0336673C STP X20, X19, [X31 + 0x10]
	0x03366740 MOV X19, X1
	0x03366744 CBZ X0, 0x33667A8
	0x03366748 ADRP X21, 0x1073000
	0x0336674C LDRB W8, [X21 + 0x762]
	0x03366750 MOV X20, X0
	0x03366754 CBNZ W8, 0x336676C
	0x03366758 ADRP X0, 0xDB4000
	0x0336675C LDR X0, [X0 + 0x290]
	0x03366760 BL 0x1C16CF4
	0x03366764 MOVZ W8, 0x1
	0x03366768 STRB W8, [X21 + 0x762]
	0x0336676C MOV X0, X20
	0x03366770 MOV X1, X31
	0x03366774 BL 0x3225708
	0x03366778 LDR W20, [X20 + 0x10]
	0x0336677C MOV X21, X0
	0x03366780 MOV X0, X31
	0x03366784 BL 0x333AE98
	0x03366788 MOV X1, X20
	0x0336678C MOV X4, X19
	0x03366790 LDP X20, X19, [X31 + 0x10]
	0x03366794 MOVZ W2, 0xE7
	0x03366798 MOV X3, X0
	0x0336679C MOV X0, X21
	0x033667A0 LDP X30, X21, [X31], #0x20
	0x033667A4 B 0x33667B8
	0x033667A8 STR X31, [X19]
	0x033667AC LDP X20, X19, [X31 + 0x10]
	0x033667B0 LDP X30, X21, [X31], #0x20
	0x033667B4 RET
	0x033667B8 STR X30, [X31 - 0x50]!
	0x033667BC STP X26, X25, [X31 + 0x10]
	0x033667C0 STP X24, X23, [X31 + 0x20]
	0x033667C4 STP X22, X21, [X31 + 0x30]
	0x033667C8 STP X20, X19, [X31 + 0x40]
	0x033667CC ADRP X25, 0x1076000
	0x033667D0 ADRP X24, 0xDC2000
	0x033667D4 LDRB W8, [X25 + 0xE9B]
	0x033667D8 LDR X24, [X24 + 0x78]
	0x033667DC MOV X19, X4
	0x033667E0 MOV X22, X3
	0x033667E4 MOV W23, W2
	0x033667E8 MOV X20, X1
	0x033667EC MOV X21, X0
	0x033667F0 TBNZ X8, 0x0, 0x3366808
	0x033667F4 ADRP X0, 0xDC2000
	0x033667F8 LDR X0, [X0 + 0x78]
	0x033667FC BL 0x1C16CF4
	0x03366800 MOVZ W8, 0x1
	0x03366804 STRB W8, [X25 + 0xE9B]
	0x03366808 LDR X0, [X24]
	0x0336680C LDR W8, [X0 + 0xE0]
	0x03366810 CBNZ W8, 0x3366818
	0x03366814 BL 0x1C16DFC
	0x03366818 MOV X0, X21
	0x0336681C MOV X1, X20
	0x03366820 MOV W2, W23
	0x03366824 MOV X3, X22
	0x03366828 MOV X4, X19
	0x0336682C MOV X5, X31
	0x03366830 BL 0x338B134

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x1077000
	012 Move W8, [X27+3774]
	013 Move X22, X7
	014 Move X26, X6
	015 Move X24, X5
	016 Move X25, X4
	017 Move X19, X3
	018 Move X20, X2
	019 Move X21, X1
	020 Move X23, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {39}
	025 Move X0, 0xDC3000
	026 Move X0, [X0+808]
	027 Call 0x1C17CF4
	028 Move X0, 0xDC3000
	029 Move X0, [X0+1352]
	030 Call 0x1C17CF4
	031 Move X0, 0xDBD000
	032 Move X0, [X0+40]
	033 Call 0x1C17CF4
	034 Move X0, 0xDBD000
	035 Move X0, [X0+1416]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X27+3774], W8
	039 Move X27, 0xDC3000
	040 Move X27, [X27+1352]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X0, [X27]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X23
	054 Move X1, X22
	055 Move X2, X21
	056 Move X3, X20
	057 Move X4, X19
	058 Move X20, [X31+64]
	059 Move X19, [X31+72]
	060 Move X22, [X31+48]
	061 Move X21, [X31+56]
	062 Move X24, [X31+32]
	063 Move X23, [X31+40]
	064 Move X26, [X31+16]
	065 Move X25, [X31+24]
	066 Move X30, [X31+80]
	067 Move X27, [X31+88]
	068 Call DateTimeFormat.TryFormatO, X0, X1, X2, X3
	069 Return X0
	070 Move X8, 0xDC3000
	071 Move X8, [X8+808]
	072 Move X0, [X8]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, X26
	078 Move X1, X31
	079 Call DateTimeFormatInfo.GetInstance, X0
	080 Move X8, [X27]
	081 Move X26, X0
	082 Move W9, [X8+224]
	083 Compare W9, 0
	084 JumpIfNotEqual {87}
	085 Move X0, X8
	086 Call 0x1C17DFC
	087 Move X0, X23
	088 Move X1, X25
	089 Move X2, X24
	090 Move X3, X26
	091 Move X4, X22
	092 Call DateTimeFormat.FormatStringBuilder, X0, X1, X2, X3
	093 Compare X0, 0
	094 JumpIfEqual {152}
	095 Move X1, X31
	096 Move X22, X0
	097 Call StringBuilder.get_Length, X0
	098 NotImplemented "Instruction CMP not yet implemented."
	099 NotImplemented "Instruction CSET not yet implemented."
	100 Move W0, W31
	101 Move X0, X22
	102 Move X1, X31
	103 Call StringBuilder.get_Length, X0
	104 Move W4, W0
	105 Move X0, X22
	106 Move W1, W31
	107 Move X2, X21
	108 Move X3, X20
	109 Move X5, X31
	110 Call StringBuilder.CopyTo, X0, X1, X2, X3
	111 Move X0, X22
	112 Move X1, X31
	113 Call StringBuilder.get_Length, X0
	114 Move [X19], W0
	115 Move X0, X22
	116 Move X1, X31
	117 Call StringBuilderCache.Release, X0
	118 Move W0, W23
	119 Move X20, [X31+64]
	120 Move X19, [X31+72]
	121 Move X22, [X31+48]
	122 Move X21, [X31+56]
	123 Move X24, [X31+32]
	124 Move X23, [X31+40]
	125 Move X26, [X31+16]
	126 Move X25, [X31+24]
	127 Move X30, [X31+80]
	128 Move X27, [X31+88]
	129 Return X0
	130 Move X0, [X27]
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {135}
	134 Call 0x1C17DFC
	135 Move X0, X23
	136 Move X1, X22
	137 Move X2, X21
	138 Move X3, X20
	139 Move X4, X19
	140 Move X20, [X31+64]
	141 Move X19, [X31+72]
	142 Move X22, [X31+48]
	143 Move X21, [X31+56]
	144 Move X24, [X31+32]
	145 Move X23, [X31+40]
	146 Move X26, [X31+16]
	147 Move X25, [X31+24]
	148 Move X30, [X31+80]
	149 Move X27, [X31+88]
	150 Call DateTimeFormat.TryFormatR, X0, X1, X2, X3
	151 Return X0
	152 Call 0x1C17F20

Method: System.Text.StringBuilder FormatStringBuilder(System.DateTime dateTime, System.ReadOnlySpan`1<System.Char> format, System.Globalization.DateTimeFormatInfo dtfi, System.TimeSpan offset)

Disassembly:
	0x0336B4E8 TBZ X0, 0x0, 0x336B50C
	0x0336B4EC LDR W8, [X19 + 0x24]
	0x0336B4F0 ADD X2, X19, 0x4
	0x0336B4F4 MOV X0, X25
	0x0336B4F8 MOV X1, X19
	0x0336B4FC UBFM W3, W8, 0xA, 0xA
	0x0336B500 MOV X4, X31
	0x0336B504 BL 0x332728C
	0x0336B508 TBZ X0, 0x0, 0x336B5A4
	0x0336B50C LDR X0, [X31 + 0x80]
	0x0336B510 CBZ X0, 0x336B6B0
	0x0336B514 LDR X9, [X0]
	0x0336B518 LDR W8, [X19 + 0x20]
	0x0336B51C LDP W5, W6, [X19 + 0x10]
	0x0336B520 LDP W3, W4, [X19 + 0x8]
	0x0336B524 LDP W1, W2, [X19]
	0x0336B528 LDR X10, [X9 + 0x2A8]
	0x0336B52C LDR X9, [X9 + 0x2B0]
	0x0336B530 ADD X22, X19, 0x38
	0x0336B534 MOV W7, W31
	0x0336B538 STR W8, [X31]
	0x0336B53C STP X22, X9, [X31 + 0x8]
	0x0336B540 BLR X10
	0x0336B544 TBZ X0, 0x0, 0x336B5A4
	0x0336B548 LDR V8, [X19 + 0x18]
	0x0336B54C FCMP D8, 0x0
	0x0336B550 B.LE 0x336B63C
	0x0336B554 ADRP X8, 0xD88000
	0x0336B558 LDR X8, [X8 + 0x5A8]
	0x0336B55C LDR X0, [X8]
	0x0336B560 LDR W8, [X0 + 0xE0]
	0x0336B564 CBNZ W8, 0x336B56C
	0x0336B568 BL 0x1C16DFC
	0x0336B56C ADRP X8, 0xFFFFFFFFFD782000
	0x0336B570 LDR V0, [X8 + 0xAA8]
	0x0336B574 ADD X0, X31, 0xB8
	0x0336B578 FMUL D8, D8, D0
	0x0336B57C MOV V0.16B, V8.16B
	0x0336B580 BL 0x3EB1C00
	0x0336B584 FCMP D8, 0x0
	0x0336B588 B.GE 0x336B5C4
	0x0336B58C FMOV D1, -0.5
	0x0336B590 FCMP D0, D1
	0x0336B594 B.NE 0x336B5EC
	0x0336B598 LDR V0, [X31 + 0xB8]
	0x0336B59C FMOV D1, -1
	0x0336B5A0 B 0x336B5D8
	0x0336B5A4 ADRP X8, 0xDBF000
	0x0336B5A8 LDR X8, [X8 + 0xC30]
	0x0336B5AC MOVZ W1, 0x7
	0x0336B5B0 B 0x336B69C
	0x0336B5B4 LDR W8, [X19 + 0x8]
	0x0336B5B8 ADDS W31, W8, 0x1
	0x0336B5BC CSET W21, EQ
	0x0336B5C0 B 0x336B4B0
	0x0336B5C4 FMOV D1, 0.5
	0x0336B5C8 FCMP D0, D1
	0x0336B5CC B.NE 0x336B5F8
	0x0336B5D0 LDR V0, [X31 + 0xB8]
	0x0336B5D4 FMOV D1, 1
	0x0336B5D8 FCVTZS X8, D0
	0x0336B5DC FADD D1, D0, D1
	0x0336B5E0 ANDS X31, X8, 0x1
	0x0336B5E4 FCSEL D8, D0, D1, EQ
	0x0336B5E8 B 0x336B600
	0x0336B5EC FADD D0, D8, D1
	0x0336B5F0 FRINTP D8, D0
	0x0336B5F4 B 0x336B600
	0x0336B5F8 FADD D0, D8, D1
	0x0336B5FC FRINTM D8, D0
	0x0336B600 ADRP X8, 0xD89000
	0x0336B604 LDR X8, [X8 + 0x9F0]
	0x0336B608 LDR X0, [X8]
	0x0336B60C LDR W8, [X0 + 0xE0]
	0x0336B610 CBNZ W8, 0x336B618
	0x0336B614 BL 0x1C16DFC
	0x0336B618 MOVZ X8, 0x7FF00000
	0x0336B61C FMOV D0, X8
	0x0336B620 FCVTZS X9, D8
	0x0336B624 FCMP D8, D0
	0x0336B628 MOVZ X8, 0x80000000
	0x0336B62C CSEL X1, X8, X9, EQ
	0x0336B630 MOV X0, X22
	0x0336B634 BL 0x335FCCC
	0x0336B638 STR X0, [X19 + 0x38]
	0x0336B63C LDR W22, [X31 + 0x88]
	0x0336B640 ADDS W31, W22, 0x1
	0x0336B644 B.EQ 0x336B668
	0x0336B648 LDR X0, [X31 + 0x80]
	0x0336B64C CBZ X0, 0x336B6B0
	0x0336B650 LDR X8, [X0]
	0x0336B654 LDR X1, [X19 + 0x38]
	0x0336B658 LDP X9, X2, [X8 + 0x1F8]
	0x0336B65C BLR X9
	0x0336B660 CMP W22, W0
	0x0336B664 B.NE 0x336B690
	0x0336B668 LDR X0, [X28]
	0x0336B66C LDR W8, [X0 + 0xE0]
	0x0336B670 CBNZ W8, 0x336B678
	0x0336B674 BL 0x1C16DFC
	0x0336B678 ADD X0, X31, 0x20
	0x0336B67C MOV X1, X19
	0x0336B680 MOV W2, W20
	0x0336B684 MOV W3, W21
	0x0336B688 BL 0x3370C9C
	0x0336B68C B 0x336B3A4
	0x0336B690 ADRP X8, 0xDBF000
	0x0336B694 LDR X8, [X8 + 0xC28]
	0x0336B698 MOVZ W1, 0x4
	0x0336B69C LDR X2, [X8]
	0x0336B6A0 MOV X0, X19
	0x0336B6A4 MOV X3, X31
	0x0336B6A8 BL 0x3376818
	0x0336B6AC B 0x336B3A0
	0x0336B6B0 BL 0x1C16F20
	0x0336B6B4 BL 0x1C16F20
	0x0336B6B8 B 0x336B6BC
	0x0336B6BC MOV X20, X0
	0x0336B6C0 CMP W1, 0x1
	0x0336B6C4 B.NE 0x336B720
	0x0336B6C8 MOV X0, X20
	0x0336B6CC BL 0x3EB1AD0
	0x0336B6D0 MOV X20, X0
	0x0336B6D4 ADRP X0, 0xD90000
	0x0336B6D8 LDR X0, [X0 + 0x760]
	0x0336B6DC BL 0x1C16D08
	0x0336B6E0 LDR X8, [X20]
	0x0336B6E4 LDR X1, [X8]
	0x0336B6E8 BL 0x1C17270
	0x0336B6EC TBZ X0, 0x0, 0x336B6F8
	0x0336B6F0 BL 0x3EB1AE0
	0x0336B6F4 B 0x336B394
	0x0336B6F8 MOVZ W0, 0x8
	0x0336B6FC BL 0x3EB1AF0
	0x0336B700 LDR X8, [X20]
	0x0336B704 STR X8, [X0]
	0x0336B708 ADRP X1, 0xB49000
	0x0336B70C ADD X1, X1, 0xE58
	0x0336B710 MOV X2, X31
	0x0336B714 BL 0x3EB1B00
	0x0336B718 MOV X20, X0
	0x0336B71C BL 0x3EB1AE0
	0x0336B720 MOV X0, X20
	0x0336B724 BL 0x1D2C690
	0x0336B728 BL 0x1990590
	0x0336B72C SUB X31, X31, 0xE0
	0x0336B730 STP X29, X30, [X31 + 0x80]
	0x0336B734 STP X28, X27, [X31 + 0x90]
	0x0336B738 STP X26, X25, [X31 + 0xA0]
	0x0336B73C STP X24, X23, [X31 + 0xB0]
	0x0336B740 STP X22, X21, [X31 + 0xC0]
	0x0336B744 STP X20, X19, [X31 + 0xD0]
	0x0336B748 ADRP X25, 0x1071000
	0x0336B74C LDRB W8, [X25 + 0xEC9]
	0x0336B750 MOV X19, X5
	0x0336B754 MOV W20, W4
	0x0336B758 MOV X21, X3
	0x0336B75C MOV X22, X2
	0x0336B760 MOV X23, X1
	0x0336B764 MOV X24, X0
	0x0336B768 TBNZ X8, 0x0, 0x336B7BC
	0x0336B76C ADRP X0, 0xDBD000
	0x0336B770 LDR X0, [X0 + 0x588]
	0x0336B774 BL 0x1C16CF4
	0x0336B778 ADRP X0, 0xDB7000
	0x0336B77C LDR X0, [X0 + 0x28]
	0x0336B780 BL 0x1C16CF4
	0x0336B784 ADRP X0, 0xDBF000
	0x0336B788 LDR X0, [X0 + 0xC00]
	0x0336B78C BL 0x1C16CF4
	0x0336B790 ADRP X0, 0xDB7000
	0x0336B794 LDR X0, [X0 + 0xA78]
	0x0336B798 BL 0x1C16CF4
	0x0336B79C ADRP X0, 0xDBF000
	0x0336B7A0 LDR X0, [X0 + 0xC38]
	0x0336B7A4 BL 0x1C16CF4
	0x0336B7A8 ADRP X0, 0xDBF000
	0x0336B7AC LDR X0, [X0 + 0xC40]
	0x0336B7B0 BL 0x1C16CF4
	0x0336B7B4 MOVZ W8, 0x1
	0x0336B7B8 STRB W8, [X25 + 0xEC9]
	0x0336B7BC MOVI V0.2D, 0x0
	0x0336B7C0 STP V0, V0, [X31 + 0x60]
	0x0336B7C4 STP V0, V0, [X31 + 0x40]
	0x0336B7C8 STP V0, V0, [X31 + 0x20]
	0x0336B7CC STP V0, V0, [X31]
	0x0336B7D0 CBZ X22, 0x336B8E8
	0x0336B7D4 CBZ W23, 0x336B918
	0x0336B7D8 LDR X8, [X22 + 0x18]
	0x0336B7DC CBZ X8, 0x336B928
	0x0336B7E0 CMP W8, 0x1
	0x0336B7E4 B.LT 0x336B8D8
	0x0336B7E8 MOV X28, X31
	0x0336B7EC ADD X29, X22, 0x20
	0x0336B7F0 ADRP X25, 0x106E000
	0x0336B7F4 CMP W28, W8
	0x0336B7F8 B.CS 0x336B990
	0x0336B7FC LDR X8, [X29, X28, LSL #3]
	0x0336B800 CBZ X8, 0x336B968
	0x0336B804 LDR W8, [X8 + 0x10]
	0x0336B808 CBZ W8, 0x336B968
	0x0336B80C MOVI V0.2D, 0x0
	0x0336B810 ADD X0, X31, 0x0
	0x0336B814 MOV X1, X24

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X0
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x1072000
	011 Move W8, [X23+3775]
	012 Move X19, X4
	013 Move X20, X3
	014 Move X22, X2
	015 Move X21, X1
	016 Move [X31], X3
	017 Move [X31+8], X4
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {48}
	022 Move X0, 0xDBE000
	023 Move X0, [X0+808]
	024 Call 0x1C17CF4
	025 Move X0, 0xDBE000
	026 Move X0, [X0+1352]
	027 Call 0x1C17CF4
	028 Move X0, 0xD8A000
	029 Move X0, [X0+2544]
	030 Call 0x1C17CF4
	031 Move X0, 0xDB8000
	032 Move X0, [X0+40]
	033 Call 0x1C17CF4
	034 Move X0, 0xD8B000
	035 Move X0, [X0+1392]
	036 Call 0x1C17CF4
	037 Move X0, 0xDC0000
	038 Move X0, [X0+3016]
	039 Call 0x1C17CF4
	040 Move X0, 0xDB3000
	041 Move X0, [X0+3824]
	042 Call 0x1C17CF4
	043 Move X0, 0xDB2000
	044 Move X0, [X0+3264]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X23+3775], W8
	048 Move X23, 0xDBE000
	049 Move X23, [X23+1352]
	050 Compare W22, 0
	051 JumpIfEqual {55}
	052 Move X24, X22
	053 ShiftRight X24, 32
	054 And X24, X24, 0x7FFFFFFF
	055 Move X8, 0xD8A000
	056 Move X8, [X8+2544]
	057 Move X0, [X8]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Add X0, X31, 24
	063 Call DateTime.get_Ticks, X0
	064 Move X8, 0xBFFF
	065 NotImplemented "Instruction MOVK not yet implemented."
	066 NotImplemented "Instruction MOVK not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Compare X20, 0
	069 JumpIfEqual {229}
	070 Move X0, [X20+120]
	071 Compare X0, 0
	072 JumpIfEqual {229}
	073 Move X8, [X0]
	074 Move X9, [X8+424]
	075 Move X1, [X8+432]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 And W8, W0, 0xFFFF
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move W9, 1
	080 NotImplemented "Instruction LSLV not yet implemented."
	081 Move W10, 344
	082 And W31, W9, W10
	083 Move X8, 0xDBE000
	084 Move X8, [X8+808]
	085 Move X0, [X8]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, X31
	091 Call DateTimeFormatInfo.get_InvariantInfo
	092 Move X20, X0
	093 Move W22, 1
	094 Move [X31], X0
	095 Move W10, 160
	096 And W31, W9, W10
	097 Move W22, W31
	098 Move X0, [X23]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {104}
	102 Call 0x1C17DFC
	103 Move X0, [X23]
	104 Move X8, 0xD8B000
	105 Move X8, [X8+1392]
	106 Move X9, [X0+184]
	107 Move X8, [X8]
	108 Move X21, [X9]
	109 Move W10, [X8+224]
	110 Compare W10, 0
	111 JumpIfNotEqual {114}
	112 Move X0, X8
	113 Call 0x1C17DFC
	114 Move X0, X19
	115 Move X1, X21
	116 Move X2, X31
	117 Call TimeSpan.op_Equality, X0, X1
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfNotEqual {135}
	122 Move X8, 0xDB2000
	123 Move X9, 0xDB3000
	124 Move X8, [X8+3264]
	125 Move X9, [X9+3824]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X21, 0x106F000
	128 NotImplemented "Instruction CSEL not yet implemented."
	129 Move W9, [X21+1890]
	130 Move X20, [X8]
	131 Compare W9, 0
	132 JumpIfEqual {152}
	133 Compare X20, 0
	134 JumpIfNotEqual {159}
	135 Move TEMP, X22
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {142}
	139 Move X8, 0xDC0000
	140 Move X8, [X8+3016]
	141 Move X20, [X8]
	142 Compare X20, 0
	143 JumpIfEqual {229}
	144 Move X0, X20
	145 Move X1, X31
	146 Call DateTimeFormatInfo.get_DateTimeOffsetPattern, X0
	147 Move X20, X0
	148 Move X21, 0x106F000
	149 Move W8, [X21+1890]
	150 Compare W8, 0
	151 JumpIfNotEqual {133}
	152 Move X0, 0xDB0000
	153 Move X0, [X0+656]
	154 Call 0x1C17CF4
	155 Move W8, 1
	156 Move [X21+1890], W8
	157 Compare X20, 0
	158 JumpIfEqual {199}
	159 Move X0, X20
	160 Move X1, X31
	161 Call String.GetRawStringData, X0
	162 Move W22, [X20+16]
	163 Move X21, X0
	164 Move W24, W31
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move X0, [X23]
	167 Move W20, 1
	168 NotImplemented "Instruction BFM not yet implemented."
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {173}
	172 Call 0x1C17DFC
	173 Add X2, X31, 24
	174 Add X3, X31, 0
	175 Add X4, X31, 8
	176 Move X0, X21
	177 Move X1, X20
	178 Call DateTimeFormat.ExpandPredefinedFormat, X0, X1, X2, X3
	179 Move X21, 0x106F000
	180 Move W8, [X21+1890]
	181 Move X20, X0
	182 Compare W8, 0
	183 JumpIfEqual {192}
	184 Compare X20, 0
	185 JumpIfEqual {199}
	186 Move X0, X20
	187 Move X1, X31
	188 Call String.GetRawStringData, X0
	189 Move W22, [X20+16]
	190 Move X21, X0
	191 Move W24, W31
	192 Move X0, 0xDB0000
	193 Move X0, [X0+656]
	194 Call 0x1C17CF4
	195 Move W8, 1
	196 Move [X21+1890], W8
	197 Compare X20, 0
	198 JumpIfNotEqual {186}
	199 Move W24, W31
	200 Move W22, W31
	201 Move X21, X31
	202 Move X0, [X23]
	203 Move X23, [X31+24]
	204 Move X20, [X31]
	205 Move W8, [X0+224]
	206 Compare W8, 0
	207 JumpIfNotEqual {209}
	208 Call 0x1C17DFC
	209 Move W2, W22
	210 NotImplemented "Instruction BFM not yet implemented."
	211 Move X0, X23
	212 Move X1, X21
	213 Move X3, X20
	214 Move X4, X19
	215 Move X20, [X31+64]
	216 Move X19, [X31+72]
	217 Move X22, [X31+48]
	218 Move X21, [X31+56]
	219 Move X24, [X31+32]
	220 Move X23, [X31+40]
	221 Move X30, [X31+16]
	222 Move X5, X31
	223 Add X31, X31, 80
	224 Call DateTimeFormat.FormatCustomized, X0, X1, X2, X3, X4
	225 Return X0
	226 NotImplemented "Instruction CMP not yet implemented."
	227 And W8, W0, 0xFFFE
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Call 0x1C17F20

Method: System.Boolean TryFormatO(System.DateTime dateTime, System.TimeSpan offset, System.Span`1<System.Char> destination, out System.Int32 charsWritten)

Disassembly:
	0x0336ACA8 ADRP X8, 0xDBE000
	0x0336ACAC LDR X8, [X8 + 0x588]
	0x0336ACB0 LDR X0, [X8]
	0x0336ACB4 LDR W8, [X0 + 0xE0]
	0x0336ACB8 CBNZ W8, 0x336ACC0
	0x0336ACBC BL 0x1C16DFC
	0x0336ACC0 MOV X0, X25
	0x0336ACC4 MOV X1, X24
	0x0336ACC8 MOV X2, X23
	0x0336ACCC MOV X3, X22
	0x0336ACD0 MOV W4, W21
	0x0336ACD4 MOV X5, X20
	0x0336ACD8 MOV X6, X19
	0x0336ACDC LDP X20, X19, [X31 + 0x40]
	0x0336ACE0 LDP X22, X21, [X31 + 0x30]
	0x0336ACE4 LDP X24, X23, [X31 + 0x20]
	0x0336ACE8 LDP X26, X25, [X31 + 0x10]
	0x0336ACEC LDR X30, [X31], #0x50
	0x0336ACF0 B 0x336AEF0
	0x0336ACF4 ADRP X8, 0xDC0000
	0x0336ACF8 LDR X8, [X8 + 0xC00]
	0x0336ACFC MOVZ W1, 0x3
	0x0336AD00 MOV X0, X19
	0x0336AD04 MOV X3, X31
	0x0336AD08 LDR X2, [X8]
	0x0336AD0C BL 0x3376818
	0x0336AD10 B 0x336AD20
	0x0336AD14 MOV X0, X19
	0x0336AD18 MOV X1, X31
	0x0336AD1C BL 0x33766D0
	0x0336AD20 LDP X20, X19, [X31 + 0x40]
	0x0336AD24 LDP X22, X21, [X31 + 0x30]
	0x0336AD28 LDP X24, X23, [X31 + 0x20]
	0x0336AD2C LDP X26, X25, [X31 + 0x10]
	0x0336AD30 MOV W0, W31
	0x0336AD34 LDR X30, [X31], #0x50
	0x0336AD38 RET
	0x0336AD3C STP X30, X21, [X31 - 0x20]!
	0x0336AD40 STP X20, X19, [X31 + 0x10]
	0x0336AD44 ADRP X20, 0x1072000
	0x0336AD48 LDRB W8, [X20 + 0xF04]
	0x0336AD4C MOV X19, X0
	0x0336AD50 TBNZ X8, 0x0, 0x336AD74
	0x0336AD54 ADRP X0, 0xD8E000
	0x0336AD58 LDR X0, [X0 + 0x528]
	0x0336AD5C BL 0x1C16CF4
	0x0336AD60 ADRP X0, 0xDB6000
	0x0336AD64 LDR X0, [X0 + 0xC08]
	0x0336AD68 BL 0x1C16CF4
	0x0336AD6C MOVZ W8, 0x1
	0x0336AD70 STRB W8, [X20 + 0xF04]
	0x0336AD74 LDR W8, [X19 + 0x40]
	0x0336AD78 SUB W8, W8, 0x1
	0x0336AD7C CMP W8, 0x6
	0x0336AD80 B.HI 0x336ADDC
	0x0336AD84 ADRP X9, 0xFFFFFFFFFD82C000
	0x0336AD88 ADD X9, X9, 0x783
	0x0336AD8C ADR X10, 0x10
	0x0336AD90 LDRB W11, [X9, X8, LSL]
	0x0336AD94 ADD X10, X10, X11, 0x2, LSL
	0x0336AD98 BR X10
	0x0336AD9C LDR X0, [X19 + 0x48]
	0x0336ADA0 LDR X20, [X19 + 0x58]
	0x0336ADA4 MOV X1, X31
	0x0336ADA8 BL 0x320A364
	0x0336ADAC ADRP X8, 0xD8E000
	0x0336ADB0 LDR X8, [X8 + 0x528]
	0x0336ADB4 MOV X21, X0
	0x0336ADB8 LDR X8, [X8]
	0x0336ADBC MOV X0, X8
	0x0336ADC0 BL 0x1C16F10
	0x0336ADC4 MOV X1, X20
	0x0336ADC8 MOV X2, X21
	0x0336ADCC MOV X3, X31
	0x0336ADD0 MOV X19, X0
	0x0336ADD4 BL 0x3315F7C
	0x0336ADD8 B 0x336AEE0
	0x0336ADDC MOV X19, X31
	0x0336ADE0 B 0x336AEE0
	0x0336ADE4 LDR X0, [X19 + 0x48]
	0x0336ADE8 MOV X1, X31
	0x0336ADEC BL 0x320A364
	0x0336ADF0 B 0x336AEAC
	0x0336ADF4 LDR X0, [X19 + 0x48]
	0x0336ADF8 MOV X1, X31
	0x0336ADFC BL 0x320A364
	0x0336AE00 LDR X1, [X19 + 0x50]
	0x0336AE04 B 0x336AE44
	0x0336AE08 LDR X0, [X19 + 0x48]
	0x0336AE0C MOV X1, X31
	0x0336AE10 BL 0x320A364
	0x0336AE14 LDP X1, X2, [X19 + 0x60]
	0x0336AE18 B 0x336AE2C
	0x0336AE1C LDR X0, [X19 + 0x48]
	0x0336AE20 MOV X1, X31
	0x0336AE24 BL 0x320A364
	0x0336AE28 LDP X1, X2, [X19 + 0x70]
	0x0336AE2C MOV X19, X0
	0x0336AE30 MOV X0, X31
	0x0336AE34 MOV X3, X31
	0x0336AE38 BL 0x322EB14
	0x0336AE3C MOV X1, X0
	0x0336AE40 MOV X0, X19
	0x0336AE44 MOV X2, X31
	0x0336AE48 BL 0x32094D4
	0x0336AE4C B 0x336AEAC
	0x0336AE50 LDR X0, [X19 + 0x48]
	0x0336AE54 MOV X1, X31
	0x0336AE58 BL 0x320A364
	0x0336AE5C LDP X1, X2, [X19 + 0x60]
	0x0336AE60 MOV X20, X0
	0x0336AE64 MOV X0, X31
	0x0336AE68 MOV X3, X31
	0x0336AE6C BL 0x322EB14
	0x0336AE70 LDR X2, [X19 + 0x50]
	0x0336AE74 B 0x336AE9C
	0x0336AE78 LDR X0, [X19 + 0x48]
	0x0336AE7C MOV X1, X31
	0x0336AE80 BL 0x320A364
	0x0336AE84 LDP X1, X2, [X19 + 0x60]
	0x0336AE88 MOV X20, X0
	0x0336AE8C MOV X0, X31
	0x0336AE90 MOV X3, X31
	0x0336AE94 BL 0x322EB14
	0x0336AE98 LDR X2, [X19 + 0x30]
	0x0336AE9C MOV X1, X0
	0x0336AEA0 MOV X0, X20
	0x0336AEA4 MOV X3, X31
	0x0336AEA8 BL 0x320A264
	0x0336AEAC ADRP X8, 0xDB6000
	0x0336AEB0 LDR X8, [X8 + 0xC08]
	0x0336AEB4 MOV X20, X0
	0x0336AEB8 LDR X8, [X8]
	0x0336AEBC MOV X0, X8
	0x0336AEC0 BL 0x1C16F10
	0x0336AEC4 MOV X1, X20
	0x0336AEC8 MOV X2, X31
	0x0336AECC MOV X19, X0
	0x0336AED0 BL 0x338C8D8
	0x0336AED4 MOVZ W8, 0x1537
	0x0336AED8 MOVK W8, 0x80130000
	0x0336AEDC STR W8, [X19 + 0x60]
	0x0336AEE0 MOV X0, X19
	0x0336AEE4 LDP X20, X19, [X31 + 0x10]
	0x0336AEE8 LDP X30, X21, [X31], #0x20
	0x0336AEEC RET
	0x0336AEF0 SUB X31, X31, 0x120
	0x0336AEF4 STR D8, [X31 + 0xB0]
	0x0336AEF8 STP X29, X30, [X31 + 0xC0]
	0x0336AEFC STP X28, X27, [X31 + 0xD0]
	0x0336AF00 STP X26, X25, [X31 + 0xE0]
	0x0336AF04 STP X24, X23, [X31 + 0xF0]
	0x0336AF08 STP X22, X21, [X31 + 0x100]
	0x0336AF0C STP X20, X19, [X31 + 0x110]
	0x0336AF10 ADRP X26, 0x1072000
	0x0336AF14 LDRB W8, [X26 + 0xF03]
	0x0336AF18 MOV X19, X6
	0x0336AF1C MOV X25, X5
	0x0336AF20 MOV W20, W4
	0x0336AF24 MOV X24, X3
	0x0336AF28 MOV X23, X2
	0x0336AF2C MOV X21, X1
	0x0336AF30 MOV X22, X0
	0x0336AF34 STR X5, [X31 + 0xA8]
	0x0336AF38 TBNZ X8, 0x0, 0x336AFD4
	0x0336AF3C ADRP X0, 0xDBE000
	0x0336AF40 LDR X0, [X0 + 0x588]
	0x0336AF44 BL 0x1C16CF4
	0x0336AF48 ADRP X0, 0xD8A000
	0x0336AF4C LDR X0, [X0 + 0x9F0]
	0x0336AF50 BL 0x1C16CF4
	0x0336AF54 ADRP X0, 0xDC0000
	0x0336AF58 LDR X0, [X0 + 0xC08]
	0x0336AF5C BL 0x1C16CF4
	0x0336AF60 ADRP X0, 0xDBD000
	0x0336AF64 LDR X0, [X0 + 0x930]
	0x0336AF68 BL 0x1C16CF4
	0x0336AF6C ADRP X0, 0xDC0000
	0x0336AF70 LDR X0, [X0 + 0xC10]
	0x0336AF74 BL 0x1C16CF4
	0x0336AF78 ADRP X0, 0xD89000
	0x0336AF7C LDR X0, [X0 + 0x5A8]
	0x0336AF80 BL 0x1C16CF4
	0x0336AF84 ADRP X0, 0xDB8000
	0x0336AF88 LDR X0, [X0 + 0x28]
	0x0336AF8C BL 0x1C16CF4
	0x0336AF90 ADRP X0, 0xDC0000
	0x0336AF94 LDR X0, [X0 + 0xC18]
	0x0336AF98 BL 0x1C16CF4
	0x0336AF9C ADRP X0, 0xDC0000
	0x0336AFA0 LDR X0, [X0 + 0xC20]
	0x0336AFA4 BL 0x1C16CF4
	0x0336AFA8 ADRP X0, 0xDBE000
	0x0336AFAC LDR X0, [X0 + 0x4F0]
	0x0336AFB0 BL 0x1C16CF4
	0x0336AFB4 ADRP X0, 0xDC0000
	0x0336AFB8 LDR X0, [X0 + 0xC28]
	0x0336AFBC BL 0x1C16CF4
	0x0336AFC0 ADRP X0, 0xDC0000
	0x0336AFC4 LDR X0, [X0 + 0xC30]
	0x0336AFC8 BL 0x1C16CF4
	0x0336AFCC MOVZ W8, 0x1
	0x0336AFD0 STRB W8, [X26 + 0xF03]
	0x0336AFD4 MOVI V0.2D, 0x0
	0x0336AFD8 ADD X0, X31, 0x80
	0x0336AFDC MOV X1, X31
	0x0336AFE0 STR X31, [X31 + 0x70]
	0x0336AFE4 STR X31, [X31 + 0x40]
	0x0336AFE8 STP V0, V0, [X31 + 0x50]
	0x0336AFEC STP V0, V0, [X31 + 0x20]
	0x0336AFF0 STP V0, V0, [X31 + 0x80]
	0x0336AFF4 BL 0x3376840
	0x0336AFF8 CBZ X25, 0x336B6B0
	0x0336AFFC ADRP X28, 0xDBE000
	0x0336B000 LDR X28, [X28 + 0x588]
	0x0336B004 LDR X8, [X25 + 0x78]
	0x0336B008 AND W9, W20, 0xFF
	0x0336B00C CMP W24, 0x1
	0x0336B010 UBFM W10, W9, 0x2, 0x2
	0x0336B014 UBFM W9, W9, 0x1, 0x1
	0x0336B018 STRB W10, [X31 + 0x92]
	0x0336B01C STR X8, [X31 + 0x80]
	0x0336B020 STRB W9, [X31 + 0x93]
	0x0336B024 B.NE 0x336B054
	0x0336B028 LDRB W8, [X19 + 0x25]
	0x0336B02C TBZ X8, 0x3, 0x336B05C
	0x0336B030 LDRH W8, [X23]
	0x0336B034 CMP W8, 0x55
	0x0336B038 B.NE 0x336B05C
	0x0336B03C MOV X0, X19
	0x0336B040 MOV X1, X23
	0x0336B044 MOV X2, X24
	0x0336B048 MOV X3, X31
	0x0336B04C BL 0x3376764
	0x0336B050 B 0x336B3A0
	0x0336B054 AND X29, X24, 0x0
	0x0336B058 B 0x336B0D4
	0x0336B05C LDR X0, [X28]
	0x0336B060 LDR W8, [X0 + 0xE0]
	0x0336B064 CBNZ W8, 0x336B06C
	0x0336B068 BL 0x1C16DFC
	0x0336B06C ADD X2, X31, 0xA8
	0x0336B070 ADD X3, X31, 0x80
	0x0336B074 MOV X0, X23
	0x0336B078 MOV X1, X24
	0x0336B07C MOV X4, X19
	0x0336B080 BL 0x3372918
	0x0336B084 ADRP X23, 0x106E000
	0x0336B088 LDRB W8, [X23 + 0x762]
	0x0336B08C MOV X24, X0
	0x0336B090 CBZ W8, 0x336B0B4
	0x0336B094 CBZ X24, 0x336B0CC
	0x0336B098 MOV X0, X24
	0x0336B09C MOV X1, X31
	0x0336B0A0 BL 0x3225708
	0x0336B0A4 LDR W24, [X24 + 0x10]
	0x0336B0A8 MOV X23, X0
	0x0336B0AC MOV X29, X31
	0x0336B0B0 B 0x336B0D4
	0x0336B0B4 ADRP X0, 0xDAF000
	0x0336B0B8 LDR X0, [X0 + 0x290]
	0x0336B0BC BL 0x1C16CF4
	0x0336B0C0 MOVZ W8, 0x1
	0x0336B0C4 STRB W8, [X23 + 0x762]
	0x0336B0C8 CBNZ X24, 0x336B098
	0x0336B0CC MOV X29, X31
	0x0336B0D0 MOV X23, X31
	0x0336B0D4 LDR X8, [X31 + 0x80]
	0x0336B0D8 ADRP X25, 0xDBC000
	0x0336B0DC LDR X25, [X25 + 0x930]
	0x0336B0E0 STR X8, [X19 + 0x30]
	0x0336B0E4 LDR X0, [X25]
	0x0336B0E8 LDR W8, [X0 + 0xE0]
	0x0336B0EC CBNZ W8, 0x336B0F4
	0x0336B0F0 BL 0x1C16DFC
	0x0336B0F4 ADRP X26, 0x1071000
	0x0336B0F8 LDRB W8, [X26 + 0xAFE]
	0x0336B0FC CBNZ W8, 0x336B114
	0x0336B100 ADRP X0, 0xDBC000
	0x0336B104 LDR X0, [X0 + 0x930]
	0x0336B108 BL 0x1C16CF4
	0x0336B10C MOVZ W8, 0x1
	0x0336B110 STRB W8, [X26 + 0xAFE]
	0x0336B114 LDR X0, [X25]
	0x0336B118 LDR W8, [X0 + 0xE0]
	0x0336B11C CBNZ W8, 0x336B128
	0x0336B120 BL 0x1C16DFC
	0x0336B124 LDR X0, [X25]
	0x0336B128 LDR X8, [X0 + 0xB8]
	0x0336B12C LDRB W8, [X8]
	0x0336B130 CBNZ W8, 0x336B22C
	0x0336B134 LDR X0, [X31 + 0x80]
	0x0336B138 CBZ X0, 0x336B6B0
	0x0336B13C LDR X8, [X0]
	0x0336B140 LDP X9, X1, [X8 + 0x1A8]
	0x0336B144 BLR X9
	0x0336B148 AND W8, W0, 0xFFFF
	0x0336B14C CMP W8, 0x8
	0x0336B150 B.NE 0x336B22C
	0x0336B154 LDR X0, [X28]
	0x0336B158 LDR W8, [X0 + 0xE0]
	0x0336B15C CBNZ W8, 0x336B164
	0x0336B160 BL 0x1C16DFC
	0x0336B164 ADRP X27, 0xDBF000
	0x0336B168 LDR X27, [X27 + 0xC20]
	0x0336B16C LDR X0, [X27]
	0x0336B170 LDR W8, [X0 + 0xE0]
	0x0336B174 CBNZ W8, 0x336B180
	0x0336B178 BL 0x1C16DFC
	0x0336B17C LDR X0, [X27]
	0x0336B180 LDR X8, [X0 + 0xB8]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X0
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X24, 0x1073000
	013 Move [X31+8], X1
	014 Move X25, 0xDBF000
	015 Move W8, [X24+3776]
	016 Move X25, [X25+1352]
	017 Move X22, X4
	018 Move X20, X3
	019 Move X19, X2
	020 Move X21, X1
	021 Move X23, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {46}
	026 Move X0, 0xDBF000
	027 Move X0, [X0+1352]
	028 Call 0x1C17CF4
	029 Move X0, 0xD8B000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xDB8000
	033 Move X0, [X0+2128]
	034 Call 0x1C17CF4
	035 Move X0, 0xDB9000
	036 Move X0, [X0+1416]
	037 Call 0x1C17CF4
	038 Move X0, 0xD8C000
	039 Move X0, [X0+1392]
	040 Call 0x1C17CF4
	041 Move X0, 0xDBE000
	042 Move X0, [X0+2616]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X24+3776], W8
	046 Move X0, [X25]
	047 Move X26, 0xD8C000
	048 Move W8, [X0+224]
	049 Move X26, [X26+1392]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X25]
	054 Move X8, [X26]
	055 Move X9, [X0+184]
	056 Move W10, [X8+224]
	057 Move X24, [X9]
	058 Compare W10, 0
	059 JumpIfNotEqual {62}
	060 Move X0, X8
	061 Call 0x1C17DFC
	062 Move X0, X21
	063 Move X1, X24
	064 Move X2, X31
	065 Call TimeSpan.op_Equality, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {97}
	070 Move X8, 0xD8B000
	071 Move X8, [X8+2544]
	072 Move X0, [X8]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Add X0, X31, 24
	078 Call DateTime.get_Kind, X0
	079 Move W21, W0
	080 NotImplemented "Instruction CMP not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X8, 0xDBE000
	083 Move X8, [X8+2616]
	084 Move X0, [X8]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X0, X31
	090 Call TimeZoneInfo.get_Local
	091 Compare X0, 0
	092 JumpIfEqual {360}
	093 Move X1, X23
	094 Move X2, X31
	095 Call TimeZoneInfo.GetUtcOffset, X0, X1
	096 Move [X31+8], X0
	097 Move W8, 33
	098 Move W21, 2
	099 Move W8, 28
	100 Move W8, 27
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move W0, W31
	103 Move [X22], W31
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move [X22], W8
	106 Move X8, 0xD8B000
	107 Move X8, [X8+2544]
	108 Move X0, [X8]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Add X0, X31, 24
	114 Call DateTime.get_Year, X0
	115 Move X8, [X25]
	116 Move W22, W0
	117 Move W9, [X8+224]
	118 Compare W9, 0
	119 JumpIfNotEqual {122}
	120 Move X0, X8
	121 Call 0x1C17DFC
	122 Move W24, 0xCCCD
	123 Move W8, 0x851F
	124 Move W9, 0x4DD3
	125 NotImplemented "Instruction MOVK not yet implemented."
	126 NotImplemented "Instruction MOVK not yet implemented."
	127 NotImplemented "Instruction MOVK not yet implemented."
	128 NotImplemented "Instruction UMADDL not yet implemented."
	129 NotImplemented "Instruction UMADDL not yet implemented."
	130 NotImplemented "Instruction UMADDL not yet implemented."
	131 Move TEMP, 9
	132 Not TEMP
	133 Move W23, TEMP
	134 Move X10, X10
	135 ShiftRight X10, 35
	136 And X10, X10, 0x7FFFFFFF
	137 Move X8, X8
	138 ShiftRight X8, 37
	139 And X8, X8, 0x7FFFFFFF
	140 Move X9, X9
	141 ShiftRight X9, 38
	142 And X9, X9, 0x7FFFFFFF
	143 NotImplemented "Instruction MADD not yet implemented."
	144 NotImplemented "Instruction MADD not yet implemented."
	145 NotImplemented "Instruction MADD not yet implemented."
	146 Add W9, W9, 48
	147 NotImplemented "Instruction STRH not yet implemented."
	148 Add W9, W11, 48
	149 NotImplemented "Instruction STRH not yet implemented."
	150 Move W22, 45
	151 Add W9, W10, 48
	152 Add W8, W8, 48
	153 Add X0, X31, 24
	154 NotImplemented "Instruction STRH not yet implemented."
	155 NotImplemented "Instruction STRH not yet implemented."
	156 NotImplemented "Instruction STRH not yet implemented."
	157 Call DateTime.get_Month, X0
	158 NotImplemented "Instruction UMADDL not yet implemented."
	159 Move X8, X8
	160 ShiftRight X8, 35
	161 And X8, X8, 0x7FFFFFFF
	162 NotImplemented "Instruction MADD not yet implemented."
	163 Add W8, W8, 48
	164 Add W9, W9, 48
	165 Add X0, X31, 24
	166 NotImplemented "Instruction STRH not yet implemented."
	167 NotImplemented "Instruction STRH not yet implemented."
	168 NotImplemented "Instruction STRH not yet implemented."
	169 Call DateTime.get_Day, X0
	170 NotImplemented "Instruction UMADDL not yet implemented."
	171 Move X8, X8
	172 ShiftRight X8, 35
	173 And X8, X8, 0x7FFFFFFF
	174 NotImplemented "Instruction MADD not yet implemented."
	175 Move W9, 84
	176 Add W8, W8, 48
	177 Add W10, W10, 48
	178 Add X0, X31, 24
	179 NotImplemented "Instruction STRH not yet implemented."
	180 NotImplemented "Instruction STRH not yet implemented."
	181 NotImplemented "Instruction STRH not yet implemented."
	182 Call DateTime.get_Hour, X0
	183 NotImplemented "Instruction UMADDL not yet implemented."
	184 Move X8, X8
	185 ShiftRight X8, 35
	186 And X8, X8, 0x7FFFFFFF
	187 NotImplemented "Instruction MADD not yet implemented."
	188 Move W22, 58
	189 Add W8, W8, 48
	190 Add W9, W9, 48
	191 Add X0, X31, 24
	192 NotImplemented "Instruction STRH not yet implemented."
	193 NotImplemented "Instruction STRH not yet implemented."
	194 NotImplemented "Instruction STRH not yet implemented."
	195 Call DateTime.get_Minute, X0
	196 NotImplemented "Instruction UMADDL not yet implemented."
	197 Move X8, X8
	198 ShiftRight X8, 35
	199 And X8, X8, 0x7FFFFFFF
	200 NotImplemented "Instruction MADD not yet implemented."
	201 Add W8, W8, 48
	202 Add W9, W9, 48
	203 Add X0, X31, 24
	204 NotImplemented "Instruction STRH not yet implemented."
	205 NotImplemented "Instruction STRH not yet implemented."
	206 NotImplemented "Instruction STRH not yet implemented."
	207 Call DateTime.get_Second, X0
	208 NotImplemented "Instruction UMADDL not yet implemented."
	209 Move X8, X8
	210 ShiftRight X8, 35
	211 And X8, X8, 0x7FFFFFFF
	212 NotImplemented "Instruction MADD not yet implemented."
	213 Move W9, 46
	214 Add W8, W8, 48
	215 Add W10, W10, 48
	216 Add X0, X31, 24
	217 NotImplemented "Instruction STRH not yet implemented."
	218 NotImplemented "Instruction STRH not yet implemented."
	219 NotImplemented "Instruction STRH not yet implemented."
	220 Call DateTime.get_Ticks, X0
	221 Move X8, 0xDB8000
	222 Move X8, [X8+2128]
	223 Move X22, X0
	224 Move X8, [X8]
	225 Move X8, [X8+32]
	226 Move W9, [X8+309]
	227 Move TEMP, X9
	228 And TEMP, TEMP, 1
	229 Compare TEMP, 1
	230 JumpIfEqual {233}
	231 Move X0, X8
	232 Call 0x1C5D684
	233 Move X8, 0x42BD
	234 NotImplemented "Instruction MOVK not yet implemented."
	235 NotImplemented "Instruction MOVK not yet implemented."
	236 Move X23, 0x1073000
	237 NotImplemented "Instruction MOVK not yet implemented."
	238 Move W9, [X23+3846]
	239 NotImplemented "Instruction INVALID not yet implemented."
	240 Move W10, 0x9680
	241 Move X8, X8
	242 ShiftRight X8, 23
	243 And X8, X8, 0x7FFFFFFF
	244 NotImplemented "Instruction MOVK not yet implemented."
	245 NotImplemented "Instruction MSUB not yet implemented."
	246 Compare W9, 0
	247 JumpIfNotEqual {253}
	248 Move X0, 0xDB9000
	249 Move X0, [X0+1416]
	250 Call 0x1C17CF4
	251 Move W8, 1
	252 Move [X23+3846], W8
	253 Or X10, X31, -3689348814741910324
	254 Move X8, X31
	255 Add X9, X19, 52
	256 NotImplemented "Instruction MOVK not yet implemented."
	257 Move TEMP, 9
	258 Not TEMP
	259 Move W11, TEMP
	260 NotImplemented "Instruction INVALID not yet implemented."
	261 Move X12, X22
	262 Move X22, X13
	263 ShiftRight X22, 3
	264 And X22, X22, 0x7FFFFFFF
	265 NotImplemented "Instruction MADD not yet implemented."
	266 Add W12, W12, 48
	267 NotImplemented "Instruction STRH not yet implemented."
	268 Subtract X8, X8, 2
	269 Add W31, W8, 12
	270 Add W8, W22, 48
	271 NotImplemented "Instruction CMP not yet implemented."
	272 NotImplemented "Instruction STRH not yet implemented."
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Move X0, [X26]
	275 Move X21, [X31+8]
	276 Move W8, [X0+224]
	277 Compare W8, 0
	278 JumpIfNotEqual {280}
	279 Call 0x1C17DFC
	280 Move X0, X21
	281 Move X1, X31
	282 Move X2, X31
	283 Call TimeSpan.op_LessThan, X0, X1
	284 Move TEMP, X0
	285 And TEMP, TEMP, 1
	286 Compare TEMP, 1
	287 JumpIfNotEqual {301}
	288 Move X0, [X26]
	289 Move W8, [X0+224]
	290 Compare W8, 0
	291 JumpIfNotEqual {293}
	292 Call 0x1C17DFC
	293 Subtract X0, X31, X21
	294 Move X1, X31
	295 Call TimeSpan.FromTicks, X0
	296 Move W22, 45
	297 Move [X31+8], X0
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Move W8, 90
	300 NotImplemented "Instruction STRH not yet implemented."
	301 Move W22, 43
	302 Move X0, [X26]
	303 Move W8, [X0+224]
	304 Compare W8, 0
	305 JumpIfNotEqual {307}
	306 Call 0x1C17DFC
	307 Add X0, X31, 8
	308 Move X1, X31
	309 Call TimeSpan.get_Minutes, X0
	310 Move X8, [X25]
	311 Move W21, W0
	312 Move W9, [X8+224]
	313 Compare W9, 0
	314 JumpIfNotEqual {317}
	315 Move X0, X8
	316 Call 0x1C17DFC
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move W20, 0xCCCD
	319 NotImplemented "Instruction MOVK not yet implemented."
	320 NotImplemented "Instruction UMADDL not yet implemented."
	321 Move TEMP, 9
	322 Not TEMP
	323 Move W23, TEMP
	324 Move X9, X9
	325 ShiftRight X9, 35
	326 And X9, X9, 0x7FFFFFFF
	327 NotImplemented "Instruction MADD not yet implemented."
	328 Move W8, 58
	329 Add W9, W9, 48
	330 Add W10, W10, 48
	331 Add X0, X31, 8
	332 Move X1, X31
	333 NotImplemented "Instruction STRH not yet implemented."
	334 NotImplemented "Instruction STRH not yet implemented."
	335 NotImplemented "Instruction STRH not yet implemented."
	336 Call TimeSpan.get_Hours, X0
	337 NotImplemented "Instruction UMADDL not yet implemented."
	338 Move X8, X8
	339 ShiftRight X8, 35
	340 And X8, X8, 0x7FFFFFFF
	341 NotImplemented "Instruction MADD not yet implemented."
	342 Add W8, W8, 48
	343 Add W9, W9, 48
	344 NotImplemented "Instruction STRH not yet implemented."
	345 NotImplemented "Instruction STRH not yet implemented."
	346 NotImplemented "Instruction STRH not yet implemented."
	347 Move W0, 1
	348 Move X20, [X31+80]
	349 Move X19, [X31+88]
	350 Move X22, [X31+64]
	351 Move X21, [X31+72]
	352 Move X24, [X31+48]
	353 Move X23, [X31+56]
	354 Move X26, [X31+32]
	355 Move X25, [X31+40]
	356 Move X30, [X31+16]
	357 Add X31, X31, 96
	358 Return X0
	359 Call 0x1C17F28
	360 Call 0x1C17F20

Method: System.Boolean TryFormatR(System.DateTime dateTime, System.TimeSpan offset, System.Span`1<System.Char> destination, out System.Int32 charsWritten)

Disassembly:
	0x0336B184 LDR X9, [X28]
	0x0336B188 LDR X26, [X8 + 0x8]
	0x0336B18C LDR X25, [X9 + 0xB8]
	0x0336B190 CBNZ X26, 0x336B1EC
	0x0336B194 LDR W8, [X0 + 0xE0]
	0x0336B198 CBNZ W8, 0x336B1A4
	0x0336B19C BL 0x1C16DFC
	0x0336B1A0 LDR X0, [X27]
	0x0336B1A4 ADRP X9, 0xDBF000
	0x0336B1A8 LDR X8, [X0 + 0xB8]
	0x0336B1AC LDR X9, [X9 + 0xC08]
	0x0336B1B0 LDR X27, [X8]
	0x0336B1B4 LDR X0, [X9]
	0x0336B1B8 BL 0x1C16F10
	0x0336B1BC ADRP X8, 0xDBF000
	0x0336B1C0 LDR X8, [X8 + 0xC18]
	0x0336B1C4 MOV X1, X27
	0x0336B1C8 MOV X3, X31
	0x0336B1CC MOV X26, X0
	0x0336B1D0 LDR X2, [X8]
	0x0336B1D4 BL 0x2D27AA8
	0x0336B1D8 ADRP X8, 0xDBF000
	0x0336B1DC LDR X8, [X8 + 0xC20]
	0x0336B1E0 LDR X8, [X8]
	0x0336B1E4 LDR X8, [X8 + 0xB8]
	0x0336B1E8 STR X26, [X8 + 0x8]
	0x0336B1EC ADRP X8, 0xDBF000
	0x0336B1F0 LDR X8, [X8 + 0xC10]
	0x0336B1F4 MOV X0, X25
	0x0336B1F8 MOV X1, X26
	0x0336B1FC LDR X2, [X8]
	0x0336B200 BL 0x2212A40
	0x0336B204 LDR X0, [X28]
	0x0336B208 LDR W8, [X0 + 0xE0]
	0x0336B20C CBNZ W8, 0x336B218
	0x0336B210 BL 0x1C16DFC
	0x0336B214 LDR X0, [X28]
	0x0336B218 LDR X8, [X0 + 0xB8]
	0x0336B21C MOVZ W9, 0x1
	0x0336B220 LDR X8, [X8]
	0x0336B224 STRB W9, [X31 + 0x94]
	0x0336B228 STR X8, [X31 + 0x98]
	0x0336B22C ADRP X26, 0xDBD000
	0x0336B230 LDR X26, [X26 + 0x4F0]
	0x0336B234 MOVN W8, 0x0
	0x0336B238 MOVI V0.2D, 0xFFFFFFFFFFFFFFFF
	0x0336B23C STR W8, [X19 + 0x14]
	0x0336B240 STUR D0, [X19 + 0xC]
	0x0336B244 LDR X0, [X26]
	0x0336B248 LDR X25, [X31 + 0xA8]
	0x0336B24C AND X9, X24, 0x0
	0x0336B250 ORR X24, X9, X29, 0x0
	0x0336B254 LDR W8, [X0 + 0xE0]
	0x0336B258 CBNZ W8, 0x336B260
	0x0336B25C BL 0x1C16DFC
	0x0336B260 ADD X0, X31, 0x50
	0x0336B264 MOV X1, X23
	0x0336B268 MOV X2, X24
	0x0336B26C MOV X3, X25
	0x0336B270 MOV W4, W31
	0x0336B274 MOV X5, X31
	0x0336B278 BL 0x337491C
	0x0336B27C ADD X0, X31, 0x20
	0x0336B280 MOV X1, X22
	0x0336B284 MOV X2, X21
	0x0336B288 MOV X3, X25
	0x0336B28C MOV W4, W31
	0x0336B290 MOV X5, X31
	0x0336B294 BL 0x337491C
	0x0336B298 LDRB W8, [X31 + 0x93]
	0x0336B29C TBZ X8, 0x0, 0x336B2D4
	0x0336B2A0 LDR X0, [X26]
	0x0336B2A4 LDR W8, [X0 + 0xE0]
	0x0336B2A8 CBNZ W8, 0x336B2B0
	0x0336B2AC BL 0x1C16DFC
	0x0336B2B0 ADD X0, X31, 0x50
	0x0336B2B4 MOV X1, X31
	0x0336B2B8 BL 0x3375D8C
	0x0336B2BC ADD X0, X31, 0x50
	0x0336B2C0 MOV X1, X31
	0x0336B2C4 BL 0x3375EB0
	0x0336B2C8 ADD X0, X31, 0x20
	0x0336B2CC MOV X1, X31
	0x0336B2D0 BL 0x3375D8C
	0x0336B2D4 TBZ X20, 0x0, 0x336B30C
	0x0336B2D8 LDR X0, [X26]
	0x0336B2DC LDR W8, [X0 + 0xE0]
	0x0336B2E0 CBNZ W8, 0x336B2E8
	0x0336B2E4 BL 0x1C16DFC
	0x0336B2E8 ADD X0, X31, 0x50
	0x0336B2EC MOV X1, X31
	0x0336B2F0 BL 0x3375C94
	0x0336B2F4 ADD X0, X31, 0x50
	0x0336B2F8 MOV X1, X31
	0x0336B2FC BL 0x33760DC
	0x0336B300 ADD X0, X31, 0x20
	0x0336B304 MOV X1, X31
	0x0336B308 BL 0x3375C94
	0x0336B30C LDR X0, [X26]
	0x0336B310 LDR W8, [X0 + 0xE0]
	0x0336B314 CBNZ W8, 0x336B31C
	0x0336B318 BL 0x1C16DFC
	0x0336B31C ADD X0, X31, 0x50
	0x0336B320 MOV X1, X31
	0x0336B324 BL 0x3374A74
	0x0336B328 TBZ X0, 0x0, 0x336B380
	0x0336B32C LDRB W8, [X31 + 0x92]
	0x0336B330 TBZ X8, 0x0, 0x336B350
	0x0336B334 LDR X0, [X26]
	0x0336B338 LDR W8, [X0 + 0xE0]
	0x0336B33C CBNZ W8, 0x336B344
	0x0336B340 BL 0x1C16DFC
	0x0336B344 ADD X0, X31, 0x20
	0x0336B348 MOV X1, X31
	0x0336B34C BL 0x3375C94
	0x0336B350 LDR X0, [X28]
	0x0336B354 LDR W8, [X0 + 0xE0]
	0x0336B358 CBNZ W8, 0x336B360
	0x0336B35C BL 0x1C16DFC
	0x0336B360 ADD X0, X31, 0x20
	0x0336B364 ADD X1, X31, 0x50
	0x0336B368 ADD X2, X31, 0x80
	0x0336B36C MOV X3, X25
	0x0336B370 MOV X4, X19
	0x0336B374 BL 0x3372D88
	0x0336B378 TBNZ X0, 0x0, 0x336B30C
	0x0336B37C B 0x336B3A0
	0x0336B380 LDR W8, [X31 + 0x28]
	0x0336B384 LDR W9, [X31 + 0x30]
	0x0336B388 SUB W8, W8, 0x1
	0x0336B38C CMP W9, W8
	0x0336B390 B.GE 0x336B3CC
	0x0336B394 MOV X0, X19
	0x0336B398 MOV X1, X31
	0x0336B39C BL 0x33767C8
	0x0336B3A0 MOV W0, W31
	0x0336B3A4 LDP X20, X19, [X31 + 0x110]
	0x0336B3A8 LDP X22, X21, [X31 + 0x100]
	0x0336B3AC LDP X24, X23, [X31 + 0xF0]
	0x0336B3B0 LDP X26, X25, [X31 + 0xE0]
	0x0336B3B4 LDP X28, X27, [X31 + 0xD0]
	0x0336B3B8 LDP X29, X30, [X31 + 0xC0]
	0x0336B3BC LDR V8, [X31 + 0xB0]
	0x0336B3C0 AND W0, W0, 0x1
	0x0336B3C4 ADD X31, X31, 0x120
	0x0336B3C8 RET
	0x0336B3CC LDRB W8, [X31 + 0x91]
	0x0336B3D0 TBZ X8, 0x0, 0x336B410
	0x0336B3D4 CBZ X25, 0x336B6B0
	0x0336B3D8 MOV X0, X25
	0x0336B3DC MOV X1, X31
	0x0336B3E0 BL 0x3325D88
	0x0336B3E4 TBNZ X0, 0x3, 0x336B410
	0x0336B3E8 LDR W1, [X19]
	0x0336B3EC CMP W1, 0x64
	0x0336B3F0 B.GE 0x336B394
	0x0336B3F4 LDR X0, [X31 + 0x80]
	0x0336B3F8 CBZ X0, 0x336B6B4
	0x0336B3FC LDR X8, [X0]
	0x0336B400 LDR X9, [X8 + 0x308]
	0x0336B404 LDR X2, [X8 + 0x310]
	0x0336B408 BLR X9
	0x0336B40C STR W0, [X19]
	0x0336B410 LDRB W9, [X31 + 0x90]
	0x0336B414 LDR W8, [X31 + 0x8C]
	0x0336B418 TBNZ X9, 0x0, 0x336B438
	0x0336B41C CMP W8, 0x1
	0x0336B420 B.EQ 0x336B478
	0x0336B424 CBNZ W8, 0x336B494
	0x0336B428 LDR W8, [X19 + 0xC]
	0x0336B42C CMP W8, 0xB
	0x0336B430 B.GT 0x336B394
	0x0336B434 B 0x336B494
	0x0336B438 ADDS W31, W8, 0x1
	0x0336B43C B.EQ 0x336B464
	0x0336B440 LDR W9, [X19 + 0xC]
	0x0336B444 CMP W9, 0xD
	0x0336B448 B.GE 0x336B394
	0x0336B44C CBZ W8, 0x336B488
	0x0336B450 ADD W8, W9, 0xC
	0x0336B454 CMP W9, 0xC
	0x0336B458 CSEL W8, W9, W8, EQ
	0x0336B45C STR W8, [X19 + 0xC]
	0x0336B460 B 0x336B494
	0x0336B464 STR W31, [X31 + 0x8C]
	0x0336B468 LDR W8, [X19 + 0xC]
	0x0336B46C CMP W8, 0xC
	0x0336B470 B.GT 0x336B394
	0x0336B474 B 0x336B48C
	0x0336B478 LDR W8, [X19 + 0xC]
	0x0336B47C CMP W8, 0xB
	0x0336B480 B.LE 0x336B394
	0x0336B484 B 0x336B494
	0x0336B488 CMP W9, 0xC
	0x0336B48C B.NE 0x336B494
	0x0336B490 STR W31, [X19 + 0xC]
	0x0336B494 LDR W8, [X19]
	0x0336B498 ADDS W31, W8, 0x1
	0x0336B49C B.NE 0x336B4AC
	0x0336B4A0 LDR W8, [X19 + 0x4]
	0x0336B4A4 ADDS W31, W8, 0x1
	0x0336B4A8 B.EQ 0x336B5B4
	0x0336B4AC MOV W21, W31
	0x0336B4B0 LDR X0, [X28]
	0x0336B4B4 LDR W8, [X0 + 0xE0]
	0x0336B4B8 CBNZ W8, 0x336B4C0
	0x0336B4BC BL 0x1C16DFC
	0x0336B4C0 ADD X1, X31, 0x80
	0x0336B4C4 MOV X0, X19
	0x0336B4C8 MOV W2, W20
	0x0336B4CC BL 0x3370A20
	0x0336B4D0 TBZ X0, 0x0, 0x336B3A0
	0x0336B4D4 CBNZ W21, 0x336B50C
	0x0336B4D8 CBZ X25, 0x336B6B0
	0x0336B4DC MOV X0, X25
	0x0336B4E0 MOV X1, X31
	0x0336B4E4 BL 0x3327264

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X0
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X24, 0x1072000
	013 Move W8, [X24+3777]
	014 Move X19, X4
	015 Move X20, X3
	016 Move X21, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0xDBE000
	024 Move X0, [X0+1352]
	025 Call 0x1C17CF4
	026 Move X0, 0xD8A000
	027 Move X0, [X0+2544]
	028 Call 0x1C17CF4
	029 Move X0, 0xDB8000
	030 Move X0, [X0+1416]
	031 Call 0x1C17CF4
	032 Move X0, 0xD8B000
	033 Move X0, [X0+1392]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X24+3777], W8
	037 Move W8, W31
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move [X31+8], X31
	040 Move [X31+4], W31
	041 Move X25, 0xDBE000
	042 Move X25, [X25+1352]
	043 Move X24, 0xD8B000
	044 Move X0, [X25]
	045 Move W8, [X0+224]
	046 Move X24, [X24+1392]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X25]
	051 Move X8, [X24]
	052 Move X9, [X0+184]
	053 Move W10, [X8+224]
	054 Move X24, [X9]
	055 Compare W10, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Move X26, 0xD8A000
	060 Move X26, [X26+2544]
	061 Move X0, X22
	062 Move X1, X24
	063 Move X2, X31
	064 Call TimeSpan.op_Inequality, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {78}
	069 Move X0, [X26]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X0, X23
	075 Move X1, X22
	076 Call DateTime.op_Subtraction, X0, X1
	077 Move [X31+24], X0
	078 Move X0, [X26]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Add X0, X31, 24
	084 Add X1, X31, 12
	085 Add X2, X31, 8
	086 Add X3, X31, 4
	087 Call DateTime.GetDatePart, X0, X1, X2, X3
	088 Move X0, [X25]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {94}
	092 Call 0x1C17DFC
	093 Move X0, [X25]
	094 Move X8, [X0+184]
	095 Add X0, X31, 24
	096 Move X22, [X8+32]
	097 Call DateTime.get_DayOfWeek, X0
	098 Compare X22, 0
	099 JumpIfEqual {253}
	100 Move W8, [X22+24]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X8, [X25]
	103 Move X8, [X8+184]
	104 Move X8, [X8+24]
	105 Compare X8, 0
	106 JumpIfEqual {253}
	107 Move W9, [X31+8]
	108 Move W10, [X8+24]
	109 Subtract W9, W9, 1
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Add X10, X22, W0
	112 Move X23, [X10+32]
	113 Compare X23, 0
	114 JumpIfEqual {253}
	115 Add X8, X8, W9
	116 Move X22, [X8+32]
	117 Move X0, X23
	118 Move W1, W31
	119 Move X2, X31
	120 Call String.get_Chars, X0, X1
	121 NotImplemented "Instruction STRH not yet implemented."
	122 Move W1, 1
	123 Move X0, X23
	124 Move X2, X31
	125 Call String.get_Chars, X0, X1
	126 NotImplemented "Instruction STRH not yet implemented."
	127 Move W1, 2
	128 Move X0, X23
	129 Move X2, X31
	130 Call String.get_Chars, X0, X1
	131 Move W8, 44
	132 NotImplemented "Instruction MOVK not yet implemented."
	133 NotImplemented "Instruction STRH not yet implemented."
	134 Move [X21+6], W8
	135 Move W8, [X31+4]
	136 Move W24, 0xCCCD
	137 NotImplemented "Instruction MOVK not yet implemented."
	138 Move TEMP, 9
	139 Not TEMP
	140 Move W23, TEMP
	141 Multiply X9, X8, X24
	142 Move X9, X9
	143 ShiftRight X9, 35
	144 And X9, X9, 0x7FFFFFFF
	145 NotImplemented "Instruction MADD not yet implemented."
	146 Add W9, W9, 48
	147 Move W25, 32
	148 Add W8, W8, 48
	149 NotImplemented "Instruction STRH not yet implemented."
	150 NotImplemented "Instruction STRH not yet implemented."
	151 NotImplemented "Instruction STRH not yet implemented."
	152 Compare X22, 0
	153 JumpIfEqual {253}
	154 Move X0, X22
	155 Move W1, W31
	156 Move X2, X31
	157 Call String.get_Chars, X0, X1
	158 NotImplemented "Instruction STRH not yet implemented."
	159 Move W1, 1
	160 Move X0, X22
	161 Move X2, X31
	162 Call String.get_Chars, X0, X1
	163 NotImplemented "Instruction STRH not yet implemented."
	164 Move W1, 2
	165 Move X0, X22
	166 Move X2, X31
	167 Call String.get_Chars, X0, X1
	168 NotImplemented "Instruction STRH not yet implemented."
	169 NotImplemented "Instruction STRH not yet implemented."
	170 Move W8, [X31+12]
	171 Move W9, 0x851F
	172 Move W10, 0x4DD3
	173 NotImplemented "Instruction MOVK not yet implemented."
	174 NotImplemented "Instruction MOVK not yet implemented."
	175 Multiply X11, X8, X24
	176 Multiply X9, X8, X9
	177 Multiply X10, X8, X10
	178 Move X11, X11
	179 ShiftRight X11, 35
	180 And X11, X11, 0x7FFFFFFF
	181 Move X9, X9
	182 ShiftRight X9, 37
	183 And X9, X9, 0x7FFFFFFF
	184 Move X10, X10
	185 ShiftRight X10, 38
	186 And X10, X10, 0x7FFFFFFF
	187 NotImplemented "Instruction MADD not yet implemented."
	188 NotImplemented "Instruction MADD not yet implemented."
	189 NotImplemented "Instruction MADD not yet implemented."
	190 Add W10, W10, 48
	191 NotImplemented "Instruction STRH not yet implemented."
	192 Add W8, W8, 48
	193 Add W10, W11, 48
	194 Add W9, W9, 48
	195 Add X0, X31, 24
	196 NotImplemented "Instruction STRH not yet implemented."
	197 NotImplemented "Instruction STRH not yet implemented."
	198 NotImplemented "Instruction STRH not yet implemented."
	199 NotImplemented "Instruction STRH not yet implemented."
	200 Call DateTime.get_Hour, X0
	201 NotImplemented "Instruction UMADDL not yet implemented."
	202 Move X8, X8
	203 ShiftRight X8, 35
	204 And X8, X8, 0x7FFFFFFF
	205 NotImplemented "Instruction MADD not yet implemented."
	206 Move W22, 58
	207 Add W8, W8, 48
	208 Add W9, W9, 48
	209 Add X0, X31, 24
	210 NotImplemented "Instruction STRH not yet implemented."
	211 NotImplemented "Instruction STRH not yet implemented."
	212 NotImplemented "Instruction STRH not yet implemented."
	213 Call DateTime.get_Minute, X0
	214 NotImplemented "Instruction UMADDL not yet implemented."
	215 Move X8, X8
	216 ShiftRight X8, 35
	217 And X8, X8, 0x7FFFFFFF
	218 NotImplemented "Instruction MADD not yet implemented."
	219 Add W8, W8, 48
	220 Add W9, W9, 48
	221 Add X0, X31, 24
	222 NotImplemented "Instruction STRH not yet implemented."
	223 NotImplemented "Instruction STRH not yet implemented."
	224 NotImplemented "Instruction STRH not yet implemented."
	225 Call DateTime.get_Second, X0
	226 Move X9, -42455040
	227 NotImplemented "Instruction UMADDL not yet implemented."
	228 Move V0, [X9+2600]
	229 Move X8, X8
	230 ShiftRight X8, 35
	231 And X8, X8, 0x7FFFFFFF
	232 NotImplemented "Instruction MADD not yet implemented."
	233 Add W8, W8, 48
	234 Add W9, W9, 48
	235 NotImplemented "Instruction STRH not yet implemented."
	236 Move W8, 29
	237 NotImplemented "Instruction STRH not yet implemented."
	238 Move [X21+50], D0
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Move [X19], W8
	241 Move X20, [X31+80]
	242 Move X19, [X31+88]
	243 Move X22, [X31+64]
	244 Move X21, [X31+72]
	245 Move X24, [X31+48]
	246 Move X23, [X31+56]
	247 Move X26, [X31+32]
	248 Move X25, [X31+40]
	249 Move X30, [X31+16]
	250 NotImplemented "Instruction CSET not yet implemented."
	251 Add X31, X31, 96
	252 Return X0
	253 Call 0x1C17F20
	254 Call 0x1C17F28

Method: System.Void WriteTwoDecimalDigits(System.UInt32 value, System.Span`1<System.Char> destination, System.Int32 offset)

Disassembly:
	0x0336B818 MOV X2, X23
	0x0336B81C MOV X3, X31
	0x0336B820 STP V0, V0, [X31 + 0x60]
	0x0336B824 STP V0, V0, [X31 + 0x40]
	0x0336B828 STP V0, V0, [X31 + 0x20]
	0x0336B82C STP V0, V0, [X31]
	0x0336B830 BL 0x33766A0
	0x0336B834 LDR W8, [X19 + 0x24]
	0x0336B838 STR W8, [X31 + 0x24]
	0x0336B83C LDR W8, [X22 + 0x18]
	0x0336B840 CMP W28, W8
	0x0336B844 B.CS 0x336B990
	0x0336B848 LDRB W8, [X25 + 0x762]
	0x0336B84C LDR X26, [X29, X28, LSL #3]
	0x0336B850 CBZ W8, 0x336B870
	0x0336B854 CBZ X26, 0x336B888
	0x0336B858 MOV X0, X26
	0x0336B85C MOV X1, X31
	0x0336B860 BL 0x3225708

ISIL:
	001 Move [X31-16], X30
	002 Add W8, W3, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move W9, 0xCCCD
	005 NotImplemented "Instruction MOVK not yet implemented."
	006 NotImplemented "Instruction UMADDL not yet implemented."
	007 Move TEMP, 9
	008 Not TEMP
	009 Move W10, TEMP
	010 Move X9, X9
	011 ShiftRight X9, 35
	012 And X9, X9, 0x7FFFFFFF
	013 NotImplemented "Instruction MADD not yet implemented."
	014 Add W10, W10, 48
	015 NotImplemented "Instruction CMP not yet implemented."
	016 NotImplemented "Instruction STRH not yet implemented."
	017 Add W8, W9, 48
	018 NotImplemented "Instruction STRH not yet implemented."
	019 Move X30, [X31+16]
	020 Return 
	021 Call 0x1C17F28

Method: System.Void WriteFourDecimalDigits(System.UInt32 value, System.Span`1<System.Char> buffer, System.Int32 startingIndex = 0)

Disassembly:
	0x0336B864 LDR W27, [X26 + 0x10]
	0x0336B868 MOV X26, X0
	0x0336B86C B 0x336B88C
	0x0336B870 ADRP X0, 0xDAF000
	0x0336B874 LDR X0, [X0 + 0x290]
	0x0336B878 BL 0x1C16CF4
	0x0336B87C MOVZ W8, 0x1
	0x0336B880 STRB W8, [X25 + 0x762]
	0x0336B884 CBNZ X26, 0x336B858
	0x0336B888 MOV X27, X31
	0x0336B88C ADRP X8, 0xDBD000
	0x0336B890 LDR X8, [X8 + 0x588]
	0x0336B894 LDR X0, [X8]
	0x0336B898 LDR W8, [X0 + 0xE0]
	0x0336B89C CBNZ W8, 0x336B8A4
	0x0336B8A0 BL 0x1C16DFC
	0x0336B8A4 ADD X6, X31, 0x0
	0x0336B8A8 MOV X0, X24
	0x0336B8AC MOV X1, X23
	0x0336B8B0 MOV X2, X26
	0x0336B8B4 MOV X3, X27
	0x0336B8B8 MOV X4, X21
	0x0336B8BC MOV W5, W20
	0x0336B8C0 BL 0x336AC38
	0x0336B8C4 TBNZ X0, 0x0, 0x336B978
	0x0336B8C8 LDR W8, [X22 + 0x18]
	0x0336B8CC ADD X28, X28, 0x1
	0x0336B8D0 CMP W28, W8
	0x0336B8D4 B.LT 0x336B7F4
	0x0336B8D8 MOV X0, X19
	0x0336B8DC MOV X1, X31
	0x0336B8E0 BL 0x33767C8
	0x0336B8E4 B 0x336B944
	0x0336B8E8 ADRP X8, 0xDB7000
	0x0336B8EC ADRP X9, 0xDBF000
	0x0336B8F0 LDR X8, [X8 + 0xA78]
	0x0336B8F4 LDR X9, [X9 + 0xC38]
	0x0336B8F8 MOVZ W1, 0x1
	0x0336B8FC MOV X0, X19
	0x0336B900 LDR X2, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Add W9, W3, 3
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move W11, 0xCCCD
	005 NotImplemented "Instruction MOVK not yet implemented."
	006 NotImplemented "Instruction UMADDL not yet implemented."
	007 Move TEMP, 9
	008 Not TEMP
	009 Move W8, TEMP
	010 Move X11, X11
	011 ShiftRight X11, 35
	012 And X11, X11, 0x7FFFFFFF
	013 Add W10, W3, 2
	014 NotImplemented "Instruction MADD not yet implemented."
	015 Add W12, W12, 48
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction STRH not yet implemented."
	018 Move W12, 0x851F
	019 NotImplemented "Instruction MOVK not yet implemented."
	020 NotImplemented "Instruction UMADDL not yet implemented."
	021 Move X12, X12
	022 ShiftRight X12, 37
	023 And X12, X12, 0x7FFFFFFF
	024 Add W9, W3, 1
	025 NotImplemented "Instruction MADD not yet implemented."
	026 Add W8, W8, 48
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction STRH not yet implemented."
	029 Move W8, 0x4DD3
	030 NotImplemented "Instruction MOVK not yet implemented."
	031 NotImplemented "Instruction UMADDL not yet implemented."
	032 Move TEMP, 9
	033 Not TEMP
	034 Move W10, TEMP
	035 Move X8, X8
	036 ShiftRight X8, 38
	037 And X8, X8, 0x7FFFFFFF
	038 NotImplemented "Instruction MADD not yet implemented."
	039 Add W10, W10, 48
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction STRH not yet implemented."
	042 Add W8, W8, 48
	043 NotImplemented "Instruction STRH not yet implemented."
	044 Move X30, [X31+16]
	045 Return 
	046 Call 0x1C17F28

Method: System.Void WriteDigits(System.UInt64 value, System.Span`1<System.Char> buffer)

Disassembly:
	0x0336B904 LDR X4, [X9]
	0x0336B908 MOV X3, X31
	0x0336B90C MOV X5, X31
	0x0336B910 BL 0x3376830
	0x0336B914 B 0x336B944
	0x0336B918 ADRP X8, 0xDBF000
	0x0336B91C LDR X8, [X8 + 0xC00]
	0x0336B920 MOVZ W1, 0x3
	0x0336B924 B 0x336B934
	0x0336B928 ADRP X8, 0xDBF000
	0x0336B92C LDR X8, [X8 + 0xC40]
	0x0336B930 MOVZ W1, 0x2
	0x0336B934 LDR X2, [X8]
	0x0336B938 MOV X0, X19
	0x0336B93C MOV X3, X31
	0x0336B940 BL 0x3376818
	0x0336B944 MOV W0, W31
	0x0336B948 LDP X20, X19, [X31 + 0xD0]
	0x0336B94C LDP X22, X21, [X31 + 0xC0]
	0x0336B950 LDP X24, X23, [X31 + 0xB0]
	0x0336B954 LDP X26, X25, [X31 + 0xA0]
	0x0336B958 LDP X28, X27, [X31 + 0x90]
	0x0336B95C LDP X29, X30, [X31 + 0x80]
	0x0336B960 ADD X31, X31, 0xE0
	0x0336B964 RET
	0x0336B968 MOV X0, X19
	0x0336B96C MOV X1, X31
	0x0336B970 BL 0x33766D0
	0x0336B974 B 0x336B944
	0x0336B978 LDR X8, [X31 + 0x38]
	0x0336B97C MOVZ W0, 0x1
	0x0336B980 STR X8, [X19 + 0x38]
	0x0336B984 LDR X8, [X31 + 0x28]
	0x0336B988 STR X8, [X19 + 0x28]
	0x0336B98C B 0x336B948
	0x0336B990 BL 0x1C16F28
	0x0336B994 STP X30, X25, [X31 - 0x40]!
	0x0336B998 STP X24, X23, [X31 + 0x10]
	0x0336B99C STP X22, X21, [X31 + 0x20]
	0x0336B9A0 STP X20, X19, [X31 + 0x30]
	0x0336B9A4 ADRP X21, 0x1071000
	0x0336B9A8 LDRB W8, [X21 + 0xECA]
	0x0336B9AC MOV X20, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1072000
	007 Move W8, [X22+3778]
	008 Move X20, X2
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xDB8000
	016 Move X0, [X0+1416]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3778], W8
	020 Subtract W8, W20, 1
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Or X10, X31, -3689348814741910324
	023 Move W8, W8
	024 And X9, X20, 0
	025 NotImplemented "Instruction MOVK not yet implemented."
	026 Move TEMP, 9
	027 Not TEMP
	028 Move W11, TEMP
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction INVALID not yet implemented."
	031 Move X12, X12
	032 ShiftRight X12, 3
	033 And X12, X12, 0x7FFFFFFF
	034 NotImplemented "Instruction MADD not yet implemented."
	035 Add W13, W13, 48
	036 NotImplemented "Instruction STRH not yet implemented."
	037 Subtract X8, X8, 1
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X21, X12
	040 Compare W20, 0
	041 JumpIfEqual {53}
	042 Add W8, W12, 48
	043 NotImplemented "Instruction STRH not yet implemented."
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Return 
	050 Move X12, X21
	051 Compare W20, 0
	052 JumpIfNotEqual {42}
	053 Call 0x1C17F28

Method: System.Void InvalidFormatForLocal(System.ReadOnlySpan`1<System.Char> format, System.DateTime dateTime)

Disassembly:
	0x0336ACA4 CBZ W22, 0x336AD14

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x0336B9B0 MOV X19, X0
	0x0336B9B4 TBNZ X8, 0x0, 0x336B9F0
	0x0336B9B8 ADRP X0, 0xD8A000
	0x0336B9BC LDR X0, [X0 + 0x170]
	0x0336B9C0 BL 0x1C16CF4
	0x0336B9C4 ADRP X0, 0xDBB000
	0x0336B9C8 LDR X0, [X0 + 0xD90]
	0x0336B9CC BL 0x1C16CF4
	0x0336B9D0 ADRP X0, 0xDB7000
	0x0336B9D4 LDR X0, [X0 + 0x28]
	0x0336B9D8 BL 0x1C16CF4
	0x0336B9DC ADRP X0, 0xDBD000
	0x0336B9E0 LDR X0, [X0 + 0x4F0]
	0x0336B9E4 BL 0x1C16CF4
	0x0336B9E8 MOVZ W8, 0x1
	0x0336B9EC STRB W8, [X21 + 0xECA]
	0x0336B9F0 CBZ X20, 0x336BB44
	0x0336B9F4 LDR W9, [X19 + 0x8]
	0x0336B9F8 LDR W23, [X19 + 0x10]
	0x0336B9FC LDR W24, [X20 + 0x10]
	0x0336BA00 SUB W8, W9, W23
	0x0336BA04 CMP W24, W8
	0x0336BA08 B.GT 0x336BA94
	0x0336BA0C ADRP X22, 0xDBD000
	0x0336BA10 LDR X22, [X22 + 0x4F0]
	0x0336BA14 LDR X0, [X22]
	0x0336BA18 LDR W10, [X0 + 0xE0]
	0x0336BA1C CBNZ W10, 0x336BA34
	0x0336BA20 BL 0x1C16DFC
	0x0336BA24 LDR W23, [X19 + 0x10]
	0x0336BA28 LDR W9, [X19 + 0x8]
	0x0336BA2C LDR W24, [X20 + 0x10]
	0x0336BA30 SUB W8, W9, W23
	0x0336BA34 ADRP X10, 0xDBB000
	0x0336BA38 LDR X21, [X19 + 0x18]
	0x0336BA3C LDR X10, [X10 + 0xD90]
	0x0336BA40 CMP W9, W23
	0x0336BA44 LDR X25, [X10]
	0x0336BA48 B.CC 0x336BA54
	0x0336BA4C CMP W8, W24
	0x0336BA50 B.CS 0x336BA5C
	0x0336BA54 MOV X0, X31
	0x0336BA58 BL 0x339D6EC
	0x0336BA5C LDR X0, [X25 + 0x20]
	0x0336BA60 LDR X25, [X19]
	0x0336BA64 LDRB W8, [X0 + 0x135]
	0x0336BA68 TBNZ X8, 0x0, 0x336BA70
	0x0336BA6C BL 0x1C5C684
	0x0336BA70 CBZ X21, 0x336BB44
	0x0336BA74 ADD X1, X25, W23, 0x1, SXTW
	0x0336BA78 MOV W2, W24
	0x0336BA7C MOVZ W4, 0x1
	0x0336BA80 MOV X0, X21
	0x0336BA84 MOV X3, X20
	0x0336BA88 MOV X5, X31
	0x0336BA8C BL 0x33046C4
	0x0336BA90 CBZ W0, 0x336BAAC
	0x0336BA94 MOV W0, W31
	0x0336BA98 LDP X20, X19, [X31 + 0x30]
	0x0336BA9C LDP X22, X21, [X31 + 0x20]
	0x0336BAA0 LDP X24, X23, [X31 + 0x10]
	0x0336BAA4 LDP X30, X25, [X31], #0x40
	0x0336BAA8 RET
	0x0336BAAC LDR W8, [X19 + 0x10]
	0x0336BAB0 LDR W9, [X20 + 0x10]
	0x0336BAB4 LDR W10, [X19 + 0x8]
	0x0336BAB8 ADD W21, W9, W8
	0x0336BABC CMP W21, W10
	0x0336BAC0 B.GE 0x336BAF8
	0x0336BAC4 B.CS 0x336BB48
	0x0336BAC8 ADRP X8, 0xD8A000
	0x0336BACC LDR X8, [X8 + 0x170]
	0x0336BAD0 LDR X0, [X8]
	0x0336BAD4 LDR X8, [X19]
	0x0336BAD8 LDR W9, [X0 + 0xE0]
	0x0336BADC LDRH W20, [X8, W21, SXTW]
	0x0336BAE0 CBNZ W9, 0x336BAE8
	0x0336BAE4 BL 0x1C16DFC
	0x0336BAE8 MOV W0, W20
	0x0336BAEC MOV X1, X31
	0x0336BAF0 BL 0x331A888
	0x0336BAF4 TBNZ X0, 0x0, 0x336BA94
	0x0336BAF8 STR W21, [X19 + 0x10]
	0x0336BAFC LDR X0, [X22]
	0x0336BB00 LDR W8, [X0 + 0xE0]
	0x0336BB04 CBNZ W8, 0x336BB0C
	0x0336BB08 BL 0x1C16DFC
	0x0336BB0C MOV X0, X19
	0x0336BB10 MOV X1, X31
	0x0336BB14 BL 0x33748E0
	0x0336BB18 CMP W21, W0
	0x0336BB1C B.GE 0x336BB3C
	0x0336BB20 LDRSW X8, [X19 + 0x10]
	0x0336BB24 LDR W9, [X19 + 0x8]
	0x0336BB28 CMP W8, W9
	0x0336BB2C B.CS 0x336BB48
	0x0336BB30 LDR X9, [X19]
	0x0336BB34 LDRH W8, [X9, X8, LSL #1]
	0x0336BB38 STRH W8, [X19 + 0x14]
	0x0336BB3C MOVZ W0, 0x1
	0x0336BB40 B 0x336BA98
	0x0336BB44 BL 0x1C16F20
	0x0336BB48 BL 0x1C16F28
	0x0336BB4C STP X30, X21, [X31 - 0x20]!
	0x0336BB50 STP X20, X19, [X31 + 0x10]
	0x0336BB54 ADRP X21, 0x1071000
	0x0336BB58 ADRP X20, 0xDBD000
	0x0336BB5C LDRB W8, [X21 + 0xECB]
	0x0336BB60 LDR X20, [X20 + 0x588]
	0x0336BB64 MOV X19, X0
	0x0336BB68 TBNZ X8, 0x0, 0x336BB98
	0x0336BB6C ADRP X0, 0xDBD000
	0x0336BB70 LDR X0, [X0 + 0x588]
	0x0336BB74 BL 0x1C16CF4
	0x0336BB78 ADRP X0, 0xDBD000
	0x0336BB7C LDR X0, [X0 + 0x440]
	0x0336BB80 BL 0x1C16CF4
	0x0336BB84 ADRP X0, 0xDBD000
	0x0336BB88 LDR X0, [X0 + 0x458]
	0x0336BB8C BL 0x1C16CF4
	0x0336BB90 MOVZ W8, 0x1
	0x0336BB94 STRB W8, [X21 + 0xECB]
	0x0336BB98 LDR X0, [X20]
	0x0336BB9C ADRP X21, 0xDBD000
	0x0336BBA0 LDR W8, [X0 + 0xE0]
	0x0336BBA4 LDR X21, [X21 + 0x458]
	0x0336BBA8 CBNZ W8, 0x336BBB0
	0x0336BBAC BL 0x1C16DFC
	0x0336BBB0 LDR X1, [X21]
	0x0336BBB4 MOV X0, X19
	0x0336BBB8 BL 0x336B994
	0x0336BBBC TBZ X0, 0x0, 0x336BBD0
	0x0336BBC0 LDP X20, X19, [X31 + 0x10]
	0x0336BBC4 MOVZ W0, 0x1
	0x0336BBC8 LDP X30, X21, [X31], #0x20
	0x0336BBCC RET
	0x0336BBD0 LDR X0, [X20]
	0x0336BBD4 ADRP X20, 0xDBD000
	0x0336BBD8 LDR W8, [X0 + 0xE0]
	0x0336BBDC LDR X20, [X20 + 0x440]
	0x0336BBE0 CBNZ W8, 0x336BBE8
	0x0336BBE4 BL 0x1C16DFC
	0x0336BBE8 LDR X1, [X20]
	0x0336BBEC MOV X0, X19
	0x0336BBF0 LDP X20, X19, [X31 + 0x10]
	0x0336BBF4 LDP X30, X21, [X31], #0x20
	0x0336BBF8 B 0x336B994
	0x0336BBFC AND W8, W0, 0xFFFF
	0x0336BC00 SUB W8, W8, 0x30
	0x0336BC04 CMP W8, 0xA
	0x0336BC08 CSET W0, CC
	0x0336BC0C RET
	0x0336BC10 STP D9, D8, [X31 - 0x50]!
	0x0336BC14 STR X30, [X31 + 0x10]
	0x0336BC18 STP X24, X23, [X31 + 0x20]
	0x0336BC1C STP X22, X21, [X31 + 0x30]
	0x0336BC20 STP X20, X19, [X31 + 0x40]
	0x0336BC24 ADRP X21, 0x1071000
	0x0336BC28 LDRB W8, [X21 + 0xECC]
	0x0336BC2C MOV X19, X1
	0x0336BC30 MOV X20, X0
	0x0336BC34 TBNZ X8, 0x0, 0x336BC58

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x1072000
	008 Move X19, 0xD8B000
	009 Move W8, [X20+3779]
	010 Move X19, [X19+1392]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {56}
	015 Move X0, 0xD92000
	016 Move X0, [X0+2264]
	017 Call 0x1C17CF4
	018 Move X0, 0xD8B000
	019 Move X0, [X0+3144]
	020 Call 0x1C17CF4
	021 Move X0, 0xDBE000
	022 Move X0, [X0+1352]
	023 Call 0x1C17CF4
	024 Move X0, 0xD89000
	025 Move X0, [X0+2760]
	026 Call 0x1C17CF4
	027 Move X0, 0xD8B000
	028 Move X0, [X0+1392]
	029 Call 0x1C17CF4
	030 Move X0, 0xDC0000
	031 Move X0, [X0+3024]
	032 Call 0x1C17CF4
	033 Move X0, 0xDC0000
	034 Move X0, [X0+3032]
	035 Call 0x1C17CF4
	036 Move X0, 0xDC0000
	037 Move X0, [X0+3040]
	038 Call 0x1C17CF4
	039 Move X0, 0xDC0000
	040 Move X0, [X0+3048]
	041 Call 0x1C17CF4
	042 Move X0, 0xD91000
	043 Move X0, [X0+1088]
	044 Call 0x1C17CF4
	045 Move X0, 0xDC0000
	046 Move X0, [X0+3056]
	047 Call 0x1C17CF4
	048 Move X0, 0xD8B000
	049 Move X0, [X0+1200]
	050 Call 0x1C17CF4
	051 Move X0, 0xDC0000
	052 Move X0, [X0+3064]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X20+3779], W8
	056 Move X0, [X19]
	057 Move X20, 0xDBE000
	058 Move X23, 0xD92000
	059 Move X22, 0xDC0000
	060 Move X21, 0xD8B000
	061 Move W8, [X0+224]
	062 Move X20, [X20+1352]
	063 Move X23, [X23+2264]
	064 Move X22, [X22+3024]
	065 Move X21, [X21+3144]
	066 Compare W8, 0
	067 JumpIfNotEqual {70}
	068 Call 0x1C17DFC
	069 Move X0, [X19]
	070 Move X8, [X0+184]
	071 Move X9, [X20]
	072 Move W1, 19
	073 Move X8, [X8+16]
	074 Move X9, [X9+184]
	075 Move [X9], X8
	076 Move X0, [X23]
	077 Call 0x1C17D6C
	078 Move X1, [X22]
	079 Move X2, X31
	080 Move X19, X0
	081 Call RuntimeHelpers.InitializeArray, X0, X1
	082 Move X8, [X20]
	083 Move X8, [X8+184]
	084 Move [X8+8], X19
	085 Move X0, [X21]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, X31
	091 Call CultureInfo.get_InvariantCulture
	092 Compare X0, 0
	093 JumpIfEqual {172}
	094 Move X8, [X0]
	095 Move X9, [X8+568]
	096 Move X1, [X8+576]
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move X8, [X20]
	099 Move X8, [X8+184]
	100 Move [X8+16], X0
	101 Compare X0, 0
	102 JumpIfEqual {172}
	103 Move X1, X31
	104 Call DateTimeFormatInfo.get_AbbreviatedMonthNames, X0
	105 Move X8, [X20]
	106 Move X9, [X8+184]
	107 Move X8, [X9+16]
	108 Move [X9+24], X0
	109 Compare X8, 0
	110 JumpIfEqual {172}
	111 Move X19, 0xD89000
	112 Move X19, [X19+2760]
	113 Move X0, X8
	114 Move X1, X31
	115 Call DateTimeFormatInfo.get_AbbreviatedDayNames, X0
	116 Move X8, [X20]
	117 Move W1, 7
	118 Move X8, [X8+184]
	119 Move [X8+32], X0
	120 Move X0, [X19]
	121 Call 0x1C17D6C
	122 Compare X0, 0
	123 JumpIfEqual {172}
	124 Move W8, [X0+24]
	125 Compare W8, 0
	126 JumpIfEqual {171}
	127 Move X9, 0xD8B000
	128 Move X9, [X9+1200]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X9, [X9]
	131 Move [X0+32], X9
	132 Move X9, 0xD91000
	133 Move X9, [X9+1088]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X9, [X9]
	136 Move [X0+40], X9
	137 Move X9, 0xDC0000
	138 Move X9, [X9+3064]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X9, [X9]
	141 Move [X0+48], X9
	142 Move X9, 0xDC0000
	143 Move X9, [X9+3048]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X9, [X9]
	146 Move [X0+56], X9
	147 Move X9, 0xDC0000
	148 Move X9, [X9+3032]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move X9, [X9]
	151 Move [X0+64], X9
	152 Move X9, 0xDC0000
	153 Move X9, [X9+3040]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X9, [X9]
	156 Move [X0+72], X9
	157 Move X8, 0xDC0000
	158 Move X8, [X8+3056]
	159 Move X22, [X31+16]
	160 Move X21, [X31+24]
	161 Move X8, [X8]
	162 Move [X0+80], X8
	163 Move X8, [X20]
	164 Move X20, [X31+32]
	165 Move X19, [X31+40]
	166 Move X8, [X8+184]
	167 Move [X8+40], X0
	168 Move X30, [X31+48]
	169 Move X23, [X31+56]
	170 Return 
	171 Call 0x1C17F28
	172 Call 0x1C17F20

