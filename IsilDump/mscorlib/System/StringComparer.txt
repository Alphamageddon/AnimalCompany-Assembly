Type: System.StringComparer

Method: System.StringComparer get_InvariantCultureIgnoreCase()

Disassembly:
	0x03393DA0 LDR X20, [X20 + 0x348]
	0x03393DA4 LDR X21, [X21 + 0x6C0]
	0x03393DA8 MOV X19, X1
	0x03393DAC TBNZ X8, 0x0, 0x3393DDC
	0x03393DB0 ADRP X0, 0xD98000
	0x03393DB4 LDR X0, [X0 + 0x348]
	0x03393DB8 BL 0x1C16CF4
	0x03393DBC ADRP X0, 0xD60000
	0x03393DC0 LDR X0, [X0 + 0x6C0]
	0x03393DC4 BL 0x1C16CF4
	0x03393DC8 ADRP X0, 0xD98000
	0x03393DCC LDR X0, [X0 + 0x318]
	0x03393DD0 BL 0x1C16CF4
	0x03393DD4 MOVZ W8, 0x1
	0x03393DD8 STRB W8, [X22 + 0x67]
	0x03393DDC LDR X0, [X21]
	0x03393DE0 LDR X20, [X20]
	0x03393DE4 LDR W8, [X0 + 0xE0]
	0x03393DE8 CBNZ W8, 0x3393DF0
	0x03393DEC BL 0x1C16DFC
	0x03393DF0 MOV X0, X20
	0x03393DF4 BL 0x338C698

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x104B000
	005 Move X19, 0xD6E000
	006 Move W8, [X20+86]
	007 Move X19, [X19+752]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD6E000
	013 Move X0, [X0+752]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+86], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.StringComparer get_Ordinal()

Disassembly:
	0x03393DF8 CBZ X19, 0x3393E34
	0x03393DFC ADRP X20, 0xD98000
	0x03393E00 LDR X20, [X20 + 0x318]
	0x03393E04 MOV X1, X0
	0x03393E08 MOV X0, X19
	0x03393E0C MOV X2, X31
	0x03393E10 BL 0x32A8510
	0x03393E14 LDR X1, [X20]
	0x03393E18 MOV X0, X19
	0x03393E1C LDP X20, X19, [X31 + 0x20]
	0x03393E20 LDP X22, X21, [X31 + 0x10]
	0x03393E24 MOVZ W2, 0x1
	0x03393E28 MOV X3, X31
	0x03393E2C LDR X30, [X31], #0x30
	0x03393E30 B 0x32A8CA8
	0x03393E34 BL 0x1C16F20
	0x03393E38 STP X30, X21, [X31 - 0x20]!
	0x03393E3C STP X20, X19, [X31 + 0x10]
	0x03393E40 ADRP X21, 0x104A000
	0x03393E44 ADRP X20, 0xD60000
	0x03393E48 LDRB W8, [X21 + 0x68]
	0x03393E4C LDR X20, [X20 + 0x7D0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x104B000
	005 Move X19, 0xD6E000
	006 Move W8, [X20+87]
	007 Move X19, [X19+752]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD6E000
	013 Move X0, [X0+752]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+87], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+16]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.StringComparer get_OrdinalIgnoreCase()

Disassembly:
	0x03393E50 MOV X19, X0
	0x03393E54 TBNZ X8, 0x0, 0x3393E78
	0x03393E58 ADRP X0, 0xD60000
	0x03393E5C LDR X0, [X0 + 0x7D0]
	0x03393E60 BL 0x1C16CF4
	0x03393E64 ADRP X0, 0xD98000
	0x03393E68 LDR X0, [X0 + 0x350]
	0x03393E6C BL 0x1C16CF4
	0x03393E70 MOVZ W8, 0x1
	0x03393E74 STRB W8, [X21 + 0x68]
	0x03393E78 LDR X0, [X20]
	0x03393E7C ADRP X20, 0xD98000
	0x03393E80 LDR W8, [X0 + 0xE0]
	0x03393E84 LDR X20, [X20 + 0x350]
	0x03393E88 CBNZ W8, 0x3393E90
	0x03393E8C BL 0x1C16DFC
	0x03393E90 LDR X1, [X20]
	0x03393E94 MOV X0, X19
	0x03393E98 MOV X2, X31
	0x03393E9C BL 0x33B2C70
	0x03393EA0 MOVZ W8, 0x1501
	0x03393EA4 MOVK W8, 0x80130000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x104B000
	005 Move X19, 0xD6E000
	006 Move W8, [X20+88]
	007 Move X19, [X19+752]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD6E000
	013 Move X0, [X0+752]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+88], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+24]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Int32 Compare(System.Object x, System.Object y)

Disassembly:
	0x03393EA8 STR W8, [X19 + 0x60]
	0x03393EAC LDP X20, X19, [X31 + 0x10]
	0x03393EB0 LDP X30, X21, [X31], #0x20
	0x03393EB4 RET
	0x03393EB8 MOV X1, X31
	0x03393EBC B 0x33A51F0
	0x03393EC0 MOV X1, X31
	0x03393EC4 B 0x33A51F0
	0x03393EC8 STR X1, [X0]
	0x03393ECC RET
	0x03393ED0 STR X30, [X31 - 0x40]!
	0x03393ED4 STP X24, X23, [X31 + 0x10]
	0x03393ED8 STP X22, X21, [X31 + 0x20]
	0x03393EDC STP X20, X19, [X31 + 0x30]
	0x03393EE0 ADRP X23, 0x104A000
	0x03393EE4 ADRP X24, 0xD62000
	0x03393EE8 LDRB W8, [X23 + 0x6C]
	0x03393EEC LDR X24, [X24 + 0x570]
	0x03393EF0 MOV W20, W3
	0x03393EF4 MOV W21, W2
	0x03393EF8 MOV W22, W1
	0x03393EFC MOV X19, X0
	0x03393F00 TBNZ X8, 0x0, 0x3393F18
	0x03393F04 ADRP X0, 0xD62000
	0x03393F08 LDR X0, [X0 + 0x570]
	0x03393F0C BL 0x1C16CF4
	0x03393F10 MOVZ W8, 0x1
	0x03393F14 STRB W8, [X23 + 0x6C]
	0x03393F18 LDR X0, [X24]
	0x03393F1C LDR W8, [X0 + 0xE0]
	0x03393F20 CBNZ W8, 0x3393F28
	0x03393F24 BL 0x1C16DFC
	0x03393F28 MOV W0, W22
	0x03393F2C MOV W1, W21
	0x03393F30 MOV W2, W20
	0x03393F34 BL 0x3393F50
	0x03393F38 STR X0, [X19]
	0x03393F3C LDP X20, X19, [X31 + 0x30]
	0x03393F40 LDP X22, X21, [X31 + 0x20]
	0x03393F44 LDP X24, X23, [X31 + 0x10]
	0x03393F48 LDR X30, [X31], #0x40
	0x03393F4C RET
	0x03393F50 MOVZ W8, 0xE10
	0x03393F54 MOVZ W9, 0x3C
	0x03393F58 MOVZ X10, 0xD5E5
	0x03393F5C SMADDL X8, X0, X8, X31
	0x03393F60 MOVK X10, 0xBF940000
	0x03393F64 SMADDL X8, X1, X9, X8
	0x03393F68 MOVK X10, 0xD6
	0x03393F6C ADD X8, X8, W2, SXTW
	0x03393F70 ADD X9, X8, X10
	0x03393F74 MOVZ X10, 0xABCB
	0x03393F78 MOVK X10, 0x7F290000
	0x03393F7C MOVK X10, 0x1AD
	0x03393F80 CMP X9, X10
	0x03393F84 B.CS 0x3393F98
	0x03393F88 MOVZ W9, 0x9680
	0x03393F8C MOVK W9, 0x980000
	0x03393F90 MUL X0, X8, X9
	0x03393F94 RET
	0x03393F98 STP X30, X19, [X31 - 0x10]!
	0x03393F9C ADRP X0, 0xD68000
	0x03393FA0 LDR X0, [X0 + 0x760]
	0x03393FA4 BL 0x1C16D08
	0x03393FA8 BL 0x1C16F10
	0x03393FAC MOV X19, X0
	0x03393FB0 ADRP X0, 0xD98000
	0x03393FB4 LDR X0, [X0 + 0x358]
	0x03393FB8 BL 0x1C16D08
	0x03393FBC MOV X2, X0
	0x03393FC0 MOV X0, X19
	0x03393FC4 MOV X1, X31
	0x03393FC8 MOV X3, X31
	0x03393FCC BL 0x3311888
	0x03393FD0 ADRP X0, 0xD98000
	0x03393FD4 LDR X0, [X0 + 0x360]
	0x03393FD8 BL 0x1C16D08
	0x03393FDC MOV X1, X0
	0x03393FE0 MOV X0, X19
	0x03393FE4 BL 0x1C16DEC
	0x03393FE8 STP X30, X19, [X31 - 0x10]!
	0x03393FEC MOVZ W8, 0x5180
	0x03393FF0 MOVK W8, 0x10000
	0x03393FF4 SMADDL X8, X1, X8, X31
	0x03393FF8 MOVZ W9, 0xE10
	0x03393FFC SMADDL X8, X2, X9, X8
	0x03394000 MOVZ W9, 0x3C
	0x03394004 SMADDL X8, X3, X9, X8
	0x03394008 MOVZ W10, 0x3E8
	0x0339400C MOVZ X9, 0x8865
	0x03394010 ADD X8, X8, W4, SXTW
	0x03394014 MOVK X9, 0x5D630000
	0x03394018 MUL X8, X8, X10
	0x0339401C MOVZ X10, 0x10CB
	0x03394020 MOVK X9, 0x46DC
	0x03394024 MOVK X10, 0xBAC70000
	0x03394028 MOVK X9, 0x30000
	0x0339402C ADD X8, X8, W5, SXTW
	0x03394030 MOVK X10, 0x8DB8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x104B000
	007 Move W8, [X22+89]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xD98000
	016 Move X0, [X0+584]
	017 Call 0x1C17CF4
	018 Move X0, 0xD63000
	019 Move X0, [X0+632]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+89], W8
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Compare X20, 0
	025 JumpIfEqual {58}
	026 Compare X19, 0
	027 JumpIfEqual {61}
	028 Move X8, 0xD63000
	029 Move X8, [X8+632]
	030 Move X9, [X20]
	031 Move X8, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X9, [X19]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X21, 0xD98000
	036 Move X21, [X21+584]
	037 Move X0, X20
	038 Move X1, [X21]
	039 Call 0x1C17E00
	040 Compare X0, 0
	041 JumpIfEqual {93}
	042 Move X8, [X0]
	043 Move X1, [X21]
	044 Move X20, X0
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Compare X9, 0
	047 JumpIfEqual {54}
	048 Move X10, [X8+176]
	049 Add X10, X10, 8
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Subtract X9, X9, 1
	053 Add X10, X10, 16
	054 Move X0, X20
	055 Move W2, W31
	056 Call 0x1C5D788
	057 Move W0, W31
	058 Move TEMP, 0
	059 Not TEMP
	060 Move W0, TEMP
	061 Move W0, 1
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Return X0
	068 NotImplemented "Instruction LDRSW not yet implemented."
	069 Add X8, X8, X9
	070 Add X0, X8, 312
	071 Move X3, [X0]
	072 Move X2, [X0+8]
	073 Move X0, X20
	074 Move X1, X19
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 CallNoReturn X3
	081 Move X8, [X21]
	082 Move X0, X21
	083 Move X1, X20
	084 Move X2, X19
	085 Move X4, [X8+472]
	086 Move X3, [X8+480]
	087 Move X20, [X31+32]
	088 Move X19, [X31+40]
	089 Move X22, [X31+16]
	090 Move X21, [X31+24]
	091 Move X30, [X31+48]
	092 CallNoReturn X4
	093 Move X0, 0xD69000
	094 Move X0, [X0+1400]
	095 Call 0x1C17D08
	096 Call 0x1C17F10
	097 Move X19, X0
	098 Move X0, 0xD97000
	099 Move X0, [X0+592]
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X19
	103 Move X2, X31
	104 Call ArgumentException..ctor, X0, X1
	105 Move X0, 0xD98000
	106 Move X0, [X0+736]
	107 Call 0x1C17D08
	108 Move X1, X0
	109 Move X0, X19
	110 Call 0x1C17DEC

Method: System.Boolean Equals(System.Object x, System.Object y)

Disassembly:
	0x03394034 ADD X9, X8, X9
	0x03394038 MOVK X10, 0x60000
	0x0339403C CMP X9, X10
	0x03394040 B.CS 0x3394058
	0x03394044 MOVZ W9, 0x2710
	0x03394048 MUL X8, X8, X9
	0x0339404C STR X8, [X0]
	0x03394050 LDP X30, X19, [X31], #0x10
	0x03394054 RET
	0x03394058 ADRP X0, 0xD67000
	0x0339405C LDR X0, [X0 + 0x760]
	0x03394060 BL 0x1C16D08
	0x03394064 BL 0x1C16F10
	0x03394068 MOV X19, X0
	0x0339406C ADRP X0, 0xD97000
	0x03394070 LDR X0, [X0 + 0x358]
	0x03394074 BL 0x1C16D08
	0x03394078 MOV X2, X0
	0x0339407C MOV X0, X19
	0x03394080 MOV X1, X31
	0x03394084 MOV X3, X31
	0x03394088 BL 0x3311888
	0x0339408C ADRP X0, 0xD97000
	0x03394090 LDR X0, [X0 + 0x368]
	0x03394094 BL 0x1C16D08
	0x03394098 MOV X1, X0
	0x0339409C MOV X0, X19
	0x033940A0 BL 0x1C16DEC
	0x033940A4 LDR X0, [X0]
	0x033940A8 RET
	0x033940AC LDR X8, [X0]
	0x033940B0 MOVZ X9, 0x10B5
	0x033940B4 MOVK X9, 0x34C20000
	0x033940B8 MOVK X9, 0x7FAB
	0x033940BC MOVK X9, 0x3D150000
	0x033940C0 SMULH X8, X8, X9, X31
	0x033940C4 MOVZ W10, 0xAAAB
	0x033940C8 SBFM X9, X8, 0x21, 0x3F
	0x033940CC MOVK W10, 0x2AAA0000
	0x033940D0 ADD X8, X9, X8, 0x3F, LSR
	0x033940D4 MUL X9, X8, X10
	0x033940D8 UBFM X10, X9, 0x3F, 0x3F
	0x033940DC SBFM X9, X9, 0x22, 0x3F
	0x033940E0 ADD W9, W9, W10
	0x033940E4 MOVZ W10, 0x18
	0x033940E8 MSUB W0, W9, W10, W8
	0x033940EC RET
	0x033940F0 LDR X8, [X0]
	0x033940F4 MOVZ X9, 0x594B
	0x033940F8 MOVK X9, 0x38860000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x104A000
	007 Move W8, [X22+90]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD62000
	016 Move X0, [X0+632]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+90], W8
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move W0, W31
	022 Compare X20, 0
	023 JumpIfEqual {45}
	024 Compare X19, 0
	025 JumpIfEqual {45}
	026 Move X8, 0xD62000
	027 Move X8, [X8+632]
	028 Move X9, [X8]
	029 Move X8, [X20]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, [X19]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, X9
	034 Move X3, [X8+312]
	035 Move X2, [X8+320]
	036 Move X0, X20
	037 Move X1, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 CallNoReturn X3
	044 Move W0, 1
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Return X0
	051 Move X8, [X21]
	052 Move X0, X21
	053 Move X1, X20
	054 Move X2, X19
	055 Move X4, [X8+488]
	056 Move X3, [X8+496]
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 CallNoReturn X4

Method: System.Int32 GetHashCode(System.Object obj)

Disassembly:
	0x033940FC MOVK X9, 0xC5D6
	0x03394100 MOVK X9, 0x346D0000
	0x03394104 MOVZ X10, 0xF7CF
	0x03394108 MOVK X10, 0xE3530000
	0x0339410C SMULH X8, X8, X9, X31
	0x03394110 MOVK X10, 0x9BA5
	0x03394114 SBFM X9, X8, 0xB, 0x3F
	0x03394118 MOVK X10, 0x20C40000
	0x0339411C ADD X8, X9, X8, 0x3F, LSR
	0x03394120 SMULH X9, X8, X10, X31
	0x03394124 UBFM X10, X9, 0x3F, 0x3F
	0x03394128 UBFM X9, X9, 0x7, 0x3F
	0x0339412C ADD W9, W9, W10
	0x03394130 MOVZ W10, 0x3E8
	0x03394134 MSUB W0, W9, W10, W8
	0x03394138 RET
	0x0339413C LDR X8, [X0]
	0x03394140 MOVZ X9, 0xF7D5
	0x03394144 MOVK X9, 0x40BA0000
	0x03394148 MOVK X9, 0x13D8
	0x0339414C MOVK X9, 0x1CA20000
	0x03394150 SMULH X8, X8, X9, X31
	0x03394154 ORR X10, X31, 0x8888888888888888
	0x03394158 SBFM X9, X8, 0x1A, 0x3F
	0x0339415C MOVK X10, 0x8889
	0x03394160 ADD X8, X9, X8, 0x3F, LSR
	0x03394164 SMULH X9, X8, X10, X31
	0x03394168 ADD X9, X9, X8
	0x0339416C UBFM X10, X9, 0x3F, 0x3F
	0x03394170 UBFM X9, X9, 0x5, 0x3F
	0x03394174 ADD W9, W9, W10
	0x03394178 MOVZ W10, 0x3C
	0x0339417C MSUB W0, W9, W10, W8
	0x03394180 RET
	0x03394184 LDR X8, [X0]
	0x03394188 MOVZ X9, 0x42BD
	0x0339418C MOVK X9, 0xE57A0000
	0x03394190 MOVK X9, 0x94D5
	0x03394194 MOVK X9, 0xD6BF0000
	0x03394198 SMULH X9, X8, X9, X31
	0x0339419C ADD X8, X9, X8
	0x033941A0 ORR X10, X31, 0x8888888888888888
	0x033941A4 SBFM X9, X8, 0x17, 0x3F
	0x033941A8 MOVK X10, 0x8889
	0x033941AC ADD X8, X9, X8, 0x3F, LSR
	0x033941B0 SMULH X9, X8, X10, X31
	0x033941B4 ADD X9, X9, X8
	0x033941B8 UBFM X10, X9, 0x3F, 0x3F
	0x033941BC UBFM X9, X9, 0x5, 0x3F

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x104A000
	006 Move W8, [X21+91]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD62000
	014 Move X0, [X0+632]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+91], W8
	018 Compare X19, 0
	019 JumpIfEqual {43}
	020 Move X8, 0xD62000
	021 Move X8, [X8+632]
	022 Move X9, [X8]
	023 Move X8, [X19]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X2, [X8+344]
	026 Move X1, [X8+352]
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 CallNoReturn X2
	033 Move X8, [X20]
	034 Move X0, X20
	035 Move X1, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X3, [X8+504]
	039 Move X2, [X8+512]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 CallNoReturn X3
	043 Move X0, 0xD65000
	044 Move X0, [X0+1320]
	045 Call 0x1C17D08
	046 Call 0x1C17F10
	047 Move X19, X0
	048 Move X0, 0xD6B000
	049 Move X0, [X0+2216]
	050 Call 0x1C17D08
	051 Move X1, X0
	052 Move X0, X19
	053 Move X2, X31
	054 Call ArgumentNullException..ctor, X0, X1
	055 Move X0, 0xD98000
	056 Move X0, [X0+744]
	057 Call 0x1C17D08
	058 Move X1, X0
	059 Move X0, X19
	060 Call 0x1C17DEC

Method: System.Int32 Compare(System.String x, System.String y)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean Equals(System.String x, System.String y)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Int32 GetHashCode(System.String obj)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void .ctor()

Disassembly:
	0x033941C0 ADD W9, W9, W10
	0x033941C4 MOVZ W10, 0x3C

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x033941C8 MSUB W0, W9, W10, W8
	0x033941CC RET
	0x033941D0 LDR V0, [X0]
	0x033941D4 ADRP X8, 0xFFFFFFFFFD75A000
	0x033941D8 LDR V1, [X8 + 0x490]
	0x033941DC SCVTF D0, D0
	0x033941E0 FMUL D0, D0, D1
	0x033941E4 RET
	0x033941E8 LDR V0, [X0]
	0x033941EC ADRP X8, 0xFFFFFFFFFD75A000
	0x033941F0 LDR V1, [X8 + 0x10]
	0x033941F4 SCVTF D0, D0
	0x033941F8 FMUL D0, D0, D1
	0x033941FC RET
	0x03394200 LDR V1, [X0]
	0x03394204 ADRP X8, 0xFFFFFFFFFD759000
	0x03394208 LDR V2, [X8 + 0x3D8]
	0x0339420C ADRP X8, 0xFFFFFFFFFD759000
	0x03394210 LDR V0, [X8 + 0x838]
	0x03394214 SCVTF D1, D1
	0x03394218 FMUL D1, D1, D2
	0x0339421C FCMP D1, D0
	0x03394220 B.GT 0x3394230
	0x03394224 ADRP X8, 0xFFFFFFFFFD759000
	0x03394228 LDR V0, [X8 + 0xAC0]
	0x0339422C FMAX D0, D1, D0
	0x03394230 RET
	0x03394234 LDR V0, [X0]
	0x03394238 ADRP X8, 0xFFFFFFFFFD759000
	0x0339423C LDR V1, [X8 + 0x840]
	0x03394240 SCVTF D0, D0
	0x03394244 FMUL D0, D0, D1
	0x03394248 RET
	0x0339424C STP X30, X19, [X31 - 0x10]!
	0x03394250 LDR X8, [X0]
	0x03394254 EOR X9, X8, X1, 0x0
	0x03394258 ADD X0, X8, X1
	0x0339425C TBNZ X9, 0x0, 0x3394268
	0x03394260 EOR X8, X0, X8, 0x0
	0x03394264 TBNZ X8, 0x0, 0x3394270
	0x03394268 LDP X30, X19, [X31], #0x10
	0x0339426C RET
	0x03394270 ADRP X0, 0xD5F000
	0x03394274 LDR X0, [X0 + 0x858]
	0x03394278 BL 0x1C16D08
	0x0339427C BL 0x1C16F10
	0x03394280 MOV X19, X0
	0x03394284 ADRP X0, 0xD97000
	0x03394288 LDR X0, [X0 + 0x358]
	0x0339428C BL 0x1C16D08
	0x03394290 MOV X1, X0
	0x03394294 MOV X0, X19
	0x03394298 BL 0x338CB50
	0x0339429C ADRP X0, 0xD97000
	0x033942A0 LDR X0, [X0 + 0x370]
	0x033942A4 BL 0x1C16D08
	0x033942A8 MOV X1, X0
	0x033942AC MOV X0, X19
	0x033942B0 BL 0x1C16DEC
	0x033942B4 STP X30, X21, [X31 - 0x20]!
	0x033942B8 STP X20, X19, [X31 + 0x10]
	0x033942BC ADRP X21, 0x1049000
	0x033942C0 LDRB W8, [X21 + 0x6D]
	0x033942C4 MOV X20, X1
	0x033942C8 MOV X19, X0
	0x033942CC TBNZ X8, 0x0, 0x33942E4
	0x033942D0 ADRP X0, 0xD61000
	0x033942D4 LDR X0, [X0 + 0x570]
	0x033942D8 BL 0x1C16CF4
	0x033942DC MOVZ W8, 0x1
	0x033942E0 STRB W8, [X21 + 0x6D]
	0x033942E4 CBZ X20, 0x3394318
	0x033942E8 ADRP X8, 0xD61000
	0x033942EC LDR X8, [X8 + 0x570]
	0x033942F0 LDR X9, [X20]
	0x033942F4 LDR X8, [X8]
	0x033942F8 CMP X9, X8
	0x033942FC B.NE 0x3394330
	0x03394300 MOV X0, X20
	0x03394304 BL 0x1C16E08
	0x03394308 LDR X8, [X0]
	0x0339430C LDR X9, [X19]
	0x03394310 CMP X9, X8
	0x03394314 B.LE 0x3394320
	0x03394318 MOVZ W0, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x104A000
	009 Move X19, 0xD62000
	010 Move W8, [X20+92]
	011 Move X19, [X19+3144]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0xD98000
	017 Move X0, [X0+752]
	018 Call 0x1C17CF4
	019 Move X0, 0xD62000
	020 Move X0, [X0+3144]
	021 Call 0x1C17CF4
	022 Move X0, 0xD98000
	023 Move X0, [X0+760]
	024 Call 0x1C17CF4
	025 Move X0, 0xD98000
	026 Move X0, [X0+768]
	027 Call 0x1C17CF4
	028 Move X0, 0xD6D000
	029 Move X0, [X0+752]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+92], W8
	033 Move X0, [X19]
	034 Move X24, 0xD98000
	035 Move X21, 0xD6D000
	036 Move X23, 0xD98000
	037 Move X22, 0xD98000
	038 Move W8, [X0+224]
	039 Move X24, [X24+752]
	040 Move X21, [X21+752]
	041 Move X23, [X23+760]
	042 Move X22, [X22+768]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X31
	047 Call CultureInfo.get_InvariantCulture
	048 Move X8, [X24]
	049 Move X19, X0
	050 Move X0, X8
	051 Call 0x1C17F10
	052 Move X1, X19
	053 Move W2, W31
	054 Move X20, X0
	055 Call CultureAwareComparer..ctor, X0, X1, X2
	056 Move X8, [X21]
	057 Move X0, X31
	058 Move X8, [X8+184]
	059 Move [X8], X20
	060 Call CultureInfo.get_InvariantCulture
	061 Move X8, [X24]
	062 Move X19, X0
	063 Move X0, X8
	064 Call 0x1C17F10
	065 Move W2, 1
	066 Move X1, X19
	067 Move X20, X0
	068 Call CultureAwareComparer..ctor, X0, X1, X2
	069 Move X8, [X21]
	070 Move X8, [X8+184]
	071 Move [X8+8], X20
	072 Move X0, [X23]
	073 Call 0x1C17F10
	074 Move W1, W31
	075 Move X19, X0
	076 Call OrdinalComparer..ctor, X0, X1
	077 Move X8, [X21]
	078 Move X8, [X8+184]
	079 Move [X8+16], X19
	080 Move X0, [X22]
	081 Call 0x1C17F10
	082 Move W1, 1
	083 Move X19, X0
	084 Call OrdinalComparer..ctor, X0, X1
	085 Move X8, [X21]
	086 Move X22, [X31+32]
	087 Move X21, [X31+40]
	088 Move X24, [X31+16]
	089 Move X23, [X31+24]
	090 Move X8, [X8+184]
	091 Move [X8+24], X19
	092 Move X20, [X31+48]
	093 Move X19, [X31+56]
	094 Move X30, [X31+64]
	095 Return 

