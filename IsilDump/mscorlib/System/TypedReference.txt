Type: System.TypedReference

Method: System.TypedReference MakeTypedReference(System.Object target, System.Reflection.FieldInfo[] flds)

Disassembly:
	0x033BF0F8 CBNZ W8, 0x33BF100
	0x033BF0FC BL 0x1C16DFC
	0x033BF100 MOV X0, X21
	0x033BF104 MOV X1, X31
	0x033BF108 BL 0x338C698
	0x033BF10C CBZ X19, 0x33BF1AC
	0x033BF110 ADRP X21, 0xD5C000
	0x033BF114 ADRP X22, 0xD60000
	0x033BF118 ADRP X23, 0xD6D000
	0x033BF11C ADRP X24, 0xD36000
	0x033BF120 ADRP X25, 0xD67000
	0x033BF124 LDR X21, [X21 + 0xB60]
	0x033BF128 LDR X22, [X22 + 0x128]
	0x033BF12C LDR X23, [X23 + 0x508]
	0x033BF130 LDR X24, [X24 + 0x278]
	0x033BF134 LDR X25, [X25 + 0x180]
	0x033BF138 MOV X1, X0
	0x033BF13C MOV X0, X19
	0x033BF140 MOV X2, X31
	0x033BF144 BL 0x32A8510
	0x033BF148 LDR X0, [X21]
	0x033BF14C MOV X1, X31
	0x033BF150 BL 0x338C698
	0x033BF154 LDR X1, [X22]
	0x033BF158 MOV X3, X0
	0x033BF15C MOV X0, X19
	0x033BF160 MOV X2, X31
	0x033BF164 MOV X4, X31
	0x033BF168 BL 0x32A89BC
	0x033BF16C LDR X1, [X23]
	0x033BF170 MOV X0, X19
	0x033BF174 MOV W2, W20
	0x033BF178 MOV X3, X31
	0x033BF17C BL 0x32A8F28
	0x033BF180 LDR X8, [X24]
	0x033BF184 LDR X1, [X25]
	0x033BF188 MOV X0, X19
	0x033BF18C LDP X20, X19, [X31 + 0x30]
	0x033BF190 LDR X8, [X8 + 0xB8]
	0x033BF194 LDP X22, X21, [X31 + 0x20]
	0x033BF198 LDP X24, X23, [X31 + 0x10]
	0x033BF19C MOV X3, X31
	0x033BF1A0 LDR X2, [X8]
	0x033BF1A4 LDP X30, X25, [X31], #0x40
	0x033BF1A8 B 0x32A8BF0
	0x033BF1AC BL 0x1C16F20
	0x033BF1B0 STR X30, [X31 - 0x30]!
	0x033BF1B4 STP X22, X21, [X31 + 0x10]
	0x033BF1B8 STP X20, X19, [X31 + 0x20]
	0x033BF1BC ADRP X21, 0x101E000
	0x033BF1C0 LDRB W8, [X21 + 0x212]
	0x033BF1C4 MOV X20, X1
	0x033BF1C8 MOV X19, X0
	0x033BF1CC TBNZ X8, 0x0, 0x33BF25C
	0x033BF1D0 ADRP X0, 0xD6D000
	0x033BF1D4 LDR X0, [X0 + 0x510]
	0x033BF1D8 BL 0x1C16CF4
	0x033BF1DC ADRP X0, 0xD5D000
	0x033BF1E0 LDR X0, [X0 + 0x4E8]
	0x033BF1E4 BL 0x1C16CF4
	0x033BF1E8 ADRP X0, 0xD66000
	0x033BF1EC LDR X0, [X0 + 0x188]
	0x033BF1F0 BL 0x1C16CF4
	0x033BF1F4 ADRP X0, 0xD67000
	0x033BF1F8 LDR X0, [X0 + 0x118]
	0x033BF1FC BL 0x1C16CF4
	0x033BF200 ADRP X0, 0xD34000
	0x033BF204 LDR X0, [X0 + 0x6C0]
	0x033BF208 BL 0x1C16CF4
	0x033BF20C ADRP X0, 0xD6D000
	0x033BF210 LDR X0, [X0 + 0x500]
	0x033BF214 BL 0x1C16CF4
	0x033BF218 ADRP X0, 0xD6D000
	0x033BF21C LDR X0, [X0 + 0x518]
	0x033BF220 BL 0x1C16CF4
	0x033BF224 ADRP X0, 0xD6D000
	0x033BF228 LDR X0, [X0 + 0x520]
	0x033BF22C BL 0x1C16CF4
	0x033BF230 ADRP X0, 0xD6D000
	0x033BF234 LDR X0, [X0 + 0x528]
	0x033BF238 BL 0x1C16CF4
	0x033BF23C ADRP X0, 0xD6D000
	0x033BF240 LDR X0, [X0 + 0x508]
	0x033BF244 BL 0x1C16CF4
	0x033BF248 ADRP X0, 0xD67000
	0x033BF24C LDR X0, [X0 + 0x190]
	0x033BF250 BL 0x1C16CF4
	0x033BF254 MOVZ W8, 0x1
	0x033BF258 STRB W8, [X21 + 0x212]
	0x033BF25C CBZ X20, 0x33BF528
	0x033BF260 MOV X0, X20
	0x033BF264 MOV X1, X31
	0x033BF268 BL 0x3396028
	0x033BF26C CBZ X0, 0x33BF528
	0x033BF270 LDR X8, [X0]
	0x033BF274 LDR X9, [X8 + 0x3A8]
	0x033BF278 LDR X1, [X8 + 0x3B0]
	0x033BF27C BLR X9
	0x033BF280 TBZ X0, 0x0, 0x33BF3D4
	0x033BF284 MOV X0, X19
	0x033BF288 MOV X1, X20
	0x033BF28C BL 0x33BEB94
	0x033BF290 ADRP X8, 0xD34000
	0x033BF294 LDR X8, [X8 + 0x6C0]
	0x033BF298 ADRP X9, 0xD6D000
	0x033BF29C MOV X20, X0
	0x033BF2A0 LDR X8, [X8]
	0x033BF2A4 LDR X9, [X9 + 0x500]
	0x033BF2A8 LDR W10, [X8 + 0xE0]
	0x033BF2AC LDR X21, [X9]
	0x033BF2B0 CBNZ W10, 0x33BF2BC
	0x033BF2B4 MOV X0, X8
	0x033BF2B8 BL 0x1C16DFC
	0x033BF2BC MOV X0, X21
	0x033BF2C0 MOV X1, X31
	0x033BF2C4 BL 0x338C698
	0x033BF2C8 CBZ X19, 0x33BF528
	0x033BF2CC MOV X1, X0
	0x033BF2D0 MOV X0, X19
	0x033BF2D4 MOV X2, X31
	0x033BF2D8 BL 0x32A8510
	0x033BF2DC ADRP X8, 0xD6D000
	0x033BF2E0 LDR X8, [X8 + 0x508]
	0x033BF2E4 MOVZ W2, 0x7
	0x033BF2E8 MOV X0, X19
	0x033BF2EC MOV X3, X31
	0x033BF2F0 LDR X1, [X8]
	0x033BF2F4 BL 0x32A8F28
	0x033BF2F8 CBZ X20, 0x33BF528
	0x033BF2FC LDR X8, [X20]
	0x033BF300 MOV X0, X20
	0x033BF304 LDR X9, [X8 + 0x478]
	0x033BF308 LDR X1, [X8 + 0x480]
	0x033BF30C BLR X9
	0x033BF310 ADRP X8, 0xD6D000
	0x033BF314 LDR X8, [X8 + 0x518]
	0x033BF318 MOV W2, W0
	0x033BF31C MOV X0, X19
	0x033BF320 MOV X3, X31
	0x033BF324 LDR X1, [X8]
	0x033BF328 BL 0x32A8F28
	0x033BF32C LDR X8, [X20]
	0x033BF330 MOV X0, X20
	0x033BF334 LDR X9, [X8 + 0x318]
	0x033BF338 LDR X1, [X8 + 0x320]
	0x033BF33C BLR X9
	0x033BF340 ADRP X8, 0xD6D000
	0x033BF344 LDR X8, [X8 + 0x510]
	0x033BF348 MOV X21, X0
	0x033BF34C MOV X1, X31
	0x033BF350 LDR X8, [X8]
	0x033BF354 MOV X0, X8
	0x033BF358 BL 0x338C698
	0x033BF35C ADRP X8, 0xD6D000
	0x033BF360 LDR X8, [X8 + 0x520]
	0x033BF364 MOV X3, X0
	0x033BF368 MOV X0, X19
	0x033BF36C MOV X2, X21
	0x033BF370 LDR X1, [X8]
	0x033BF374 MOV X4, X31
	0x033BF378 BL 0x32A89BC
	0x033BF37C LDR X8, [X20]
	0x033BF380 MOV X0, X20
	0x033BF384 LDP X9, X1, [X8 + 0x1B8]
	0x033BF388 BLR X9
	0x033BF38C ADRP X8, 0xD67000
	0x033BF390 LDR X8, [X8 + 0x118]
	0x033BF394 MOV X20, X0
	0x033BF398 MOV X1, X31
	0x033BF39C LDR X8, [X8]
	0x033BF3A0 MOV X0, X8
	0x033BF3A4 BL 0x338C698
	0x033BF3A8 ADRP X8, 0xD6D000
	0x033BF3AC LDR X8, [X8 + 0x528]
	0x033BF3B0 MOV X3, X0
	0x033BF3B4 MOV X0, X19
	0x033BF3B8 MOV X2, X20
	0x033BF3BC LDR X1, [X8]
	0x033BF3C0 LDP X20, X19, [X31 + 0x20]
	0x033BF3C4 LDP X22, X21, [X31 + 0x10]
	0x033BF3C8 MOV X4, X31
	0x033BF3CC LDR X30, [X31], #0x30
	0x033BF3D0 B 0x32A89BC
	0x033BF3D4 LDR X8, [X20]
	0x033BF3D8 MOV X0, X20
	0x033BF3DC LDR X9, [X8 + 0x3D8]
	0x033BF3E0 LDR X1, [X8 + 0x3E0]
	0x033BF3E4 BLR X9
	0x033BF3E8 TBNZ X0, 0x0, 0x33BF4E0
	0x033BF3EC LDR X8, [X20]
	0x033BF3F0 MOV X0, X20
	0x033BF3F4 LDR X9, [X8 + 0x288]
	0x033BF3F8 LDR X1, [X8 + 0x290]
	0x033BF3FC BLR X9
	0x033BF400 TBZ X0, 0x0, 0x33BF4E0
	0x033BF404 MOV X0, X19
	0x033BF408 MOV X1, X20
	0x033BF40C BL 0x33BEB94
	0x033BF410 CBZ X0, 0x33BF528
	0x033BF414 LDR X8, [X0]
	0x033BF418 MOV X20, X0
	0x033BF41C LDR X9, [X8 + 0x468]
	0x033BF420 LDR X1, [X8 + 0x470]
	0x033BF424 BLR X9
	0x033BF428 ADRP X8, 0xD34000
	0x033BF42C LDR X8, [X8 + 0x6C0]
	0x033BF430 ADRP X9, 0xD66000
	0x033BF434 MOV X21, X0
	0x033BF438 LDR X8, [X8]
	0x033BF43C LDR X9, [X9 + 0x188]
	0x033BF440 LDR W10, [X8 + 0xE0]
	0x033BF444 LDR X22, [X9]
	0x033BF448 CBNZ W10, 0x33BF454
	0x033BF44C MOV X0, X8
	0x033BF450 BL 0x1C16DFC
	0x033BF454 MOV X0, X22
	0x033BF458 MOV X1, X31
	0x033BF45C BL 0x338C698
	0x033BF460 CBZ X19, 0x33BF528
	0x033BF464 ADRP X8, 0xD67000
	0x033BF468 LDR X8, [X8 + 0x190]
	0x033BF46C MOV X3, X0
	0x033BF470 MOV X0, X19
	0x033BF474 MOV X2, X21
	0x033BF478 LDR X1, [X8]
	0x033BF47C MOV X4, X31
	0x033BF480 BL 0x32A89BC
	0x033BF484 LDR X8, [X20]
	0x033BF488 MOV X0, X20
	0x033BF48C LDR X9, [X8 + 0x448]
	0x033BF490 LDR X1, [X8 + 0x450]
	0x033BF494 BLR X9
	0x033BF498 MOV X20, X0
	0x033BF49C CBZ X0, 0x33BF4D4
	0x033BF4A0 ADRP X9, 0xD5D000
	0x033BF4A4 LDR X9, [X9 + 0x4E8]
	0x033BF4A8 LDR X8, [X20]
	0x033BF4AC LDR X1, [X9]
	0x033BF4B0 LDRB W10, [X8 + 0x130]
	0x033BF4B4 LDRB W9, [X1 + 0x130]
	0x033BF4B8 CMP W10, W9
	0x033BF4BC B.CC 0x33BF52C
	0x033BF4C0 LDR X8, [X8 + 0xC8]
	0x033BF4C4 ADD X8, X8, X9, 0x3, LSL
	0x033BF4C8 LDUR X8, [X8 - 0x8]
	0x033BF4CC CMP X8, X1
	0x033BF4D0 B.NE 0x33BF52C
	0x033BF4D4 CBZ X20, 0x33BF528
	0x033BF4D8 MOVZ W21, 0x8
	0x033BF4DC B 0x33BF4E4
	0x033BF4E0 MOVZ W21, 0x4
	0x033BF4E4 LDR X8, [X20]
	0x033BF4E8 MOV X0, X20
	0x033BF4EC LDR X9, [X8 + 0x2E8]
	0x033BF4F0 LDR X1, [X8 + 0x2F0]
	0x033BF4F4 BLR X9
	0x033BF4F8 MOV X22, X0
	0x033BF4FC MOV X0, X20
	0x033BF500 MOV X1, X31
	0x033BF504 BL 0x33B83C4
	0x033BF508 MOV X3, X0
	0x033BF50C MOV X0, X19
	0x033BF510 MOV W1, W21
	0x033BF514 MOV X2, X22
	0x033BF518 LDP X20, X19, [X31 + 0x20]
	0x033BF51C LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0x101F000
	015 Move W9, [X19+522]
	016 Move X21, X1
	017 Move X20, X0
	018 Move X24, X8
	019 Move TEMP, X9
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0xD6E000
	024 Move X0, [X0+1096]
	025 Call 0x1C17CF4
	026 Move X0, 0xD66000
	027 Move X0, [X0+2992]
	028 Call 0x1C17CF4
	029 Move X0, 0xD5E000
	030 Move X0, [X0+1256]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X19+522], W8
	034 Move [X31+8], X31
	035 Move [X31+16], X31
	036 Move [X31+24], X31
	037 Compare X20, 0
	038 JumpIfEqual {253}
	039 Compare X21, 0
	040 JumpIfEqual {260}
	041 Move X1, [X21+24]
	042 Compare X1, 0
	043 JumpIfEqual {278}
	044 Move X8, 0xD6E000
	045 Move X8, [X8+1096]
	046 Move X26, 0xD5E000
	047 Move X0, [X8]
	048 Move X26, [X26+1256]
	049 Call 0x1C17D6C
	050 Move X22, X0
	051 Move X0, X20
	052 Call 0x1C26764
	053 Move X23, X0
	054 Compare X0, 0
	055 JumpIfEqual {65}
	056 Move X8, [X23]
	057 Move X1, [X26]
	058 Move W10, [X8+304]
	059 Move W9, [X1+304]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X8, [X8+200]
	062 Add X8, X8, X9
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X8, [X21+24]
	066 Move [X31], X24
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X28, 0xD66000
	069 Move X28, [X28+2992]
	070 Move X27, X31
	071 And X8, X8, 0
	072 Add X29, X21, 32
	073 Add X19, X22, 32
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X8, [X29]
	076 Compare X8, 0
	077 JumpIfEqual {83}
	078 Move X10, [X8]
	079 Move X9, [X28]
	080 Move W12, [X10+304]
	081 Move W11, [X9+304]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X24, X31
	084 Move X10, [X10+200]
	085 Add X10, X10, X11
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 NotImplemented "Instruction CSEL not yet implemented."
	089 Move X0, X24
	090 Move X1, X31
	091 Move X2, X31
	092 Call FieldInfo.op_Equality, X0, X1
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {217}
	097 Compare X24, 0
	098 JumpIfEqual {213}
	099 Move X0, X24
	100 Move X1, X31
	101 Call FieldInfo.get_IsStatic, X0
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {219}
	106 Move X0, X24
	107 Move X1, X31
	108 Call RuntimeFieldInfo.GetDeclaringTypeInternal, X0
	109 Move X8, [X26]
	110 Move X25, X0
	111 Move W9, [X8+224]
	112 Compare W9, 0
	113 JumpIfNotEqual {116}
	114 Move X0, X8
	115 Call 0x1C17DFC
	116 Move X0, X23
	117 Move X1, X25
	118 Move X2, X31
	119 Call RuntimeType.op_Inequality, X0, X1
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {139}
	124 Move X0, X24
	125 Move X1, X31
	126 Call RuntimeFieldInfo.GetDeclaringTypeInternal, X0
	127 Compare X23, 0
	128 JumpIfEqual {213}
	129 Move X8, [X23]
	130 Move X1, X0
	131 Move X0, X23
	132 Move X9, [X8+664]
	133 Move X2, [X8+672]
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {233}
	139 Move X8, [X24]
	140 Move X0, X24
	141 Move X9, [X8+600]
	142 Move X1, [X8+608]
	143 NotImplemented "Instruction BLR not yet implemented."
	144 Compare X0, 0
	145 JumpIfEqual {213}
	146 Move X8, [X0]
	147 Move X1, [X26]
	148 Move X23, X0
	149 Move W10, [X8+304]
	150 Move W9, [X1+304]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X8, [X8+200]
	153 Add X8, X8, X9
	154 NotImplemented "Instruction LDUR not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move X0, X23
	157 Move X1, X31
	158 Call Type.get_IsPrimitive, X0
	159 Move TEMP, X0
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfEqual {221}
	163 Move W8, [X21+24]
	164 Subtract W8, W8, 1
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move X0, X23
	167 Move X1, X31
	168 Call Type.get_IsValueType, X0
	169 Move TEMP, X0
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfNotEqual {235}
	173 Move X8, [X24]
	174 Move X0, X24
	175 Move X9, [X8+696]
	176 Move X1, [X8+704]
	177 NotImplemented "Instruction BLR not yet implemented."
	178 Compare X22, 0
	179 JumpIfEqual {213}
	180 Move W8, [X22+24]
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move [X19], X0
	183 Move W8, [X21+24]
	184 Add X27, X27, 1
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Add X0, X31, 8
	187 Move X1, X20
	188 Move X2, X22
	189 Move X3, X23
	190 Move [X31+8], X31
	191 Move [X31+16], X31
	192 Move [X31+24], X31
	193 Call 0x1C8927C
	194 Move X8, [X31+24]
	195 NotImplemented "Instruction LDUR not yet implemented."
	196 Move X9, [X31]
	197 Move X20, [X31+112]
	198 Move X19, [X31+120]
	199 Move X22, [X31+96]
	200 Move X21, [X31+104]
	201 Move X24, [X31+80]
	202 Move X23, [X31+88]
	203 Move X26, [X31+64]
	204 Move X25, [X31+72]
	205 Move X28, [X31+48]
	206 Move X27, [X31+56]
	207 Move X29, [X31+32]
	208 Move X30, [X31+40]
	209 Move [X9+16], X8
	210 Move [X9], V0
	211 Add X31, X31, 128
	212 Return X0
	213 Call 0x1C17F20
	214 Move X0, X23
	215 Call 0x1C181E0
	216 Call 0x1C17F28
	217 Move X0, 0xD6E000
	218 Move X0, [X0+1104]
	219 Move X0, 0xD6E000
	220 Move X0, [X0+1112]
	221 Move X0, 0xD6E000
	222 Move X0, [X0+1120]
	223 Call 0x1C17D08
	224 Move X19, X0
	225 Move X0, 0xD3D000
	226 Move X0, [X0+1400]
	227 Call 0x1C17D08
	228 Call 0x1C17F10
	229 Move X1, X19
	230 Move X2, X31
	231 Move X20, X0
	232 Call ArgumentException..ctor, X0, X1
	233 Move X0, 0xD6E000
	234 Move X0, [X0+1128]
	235 Move X0, 0xD6E000
	236 Move X0, [X0+1136]
	237 Call 0x1C17D08
	238 Move X19, X0
	239 Move X0, 0xD5E000
	240 Move X0, [X0+48]
	241 Call 0x1C17D08
	242 Call 0x1C17F10
	243 Move X1, X19
	244 Move X2, X31
	245 Move X20, X0
	246 Call MissingMemberException..ctor, X0, X1
	247 Move X0, 0xD6E000
	248 Move X0, [X0+1144]
	249 Call 0x1C17D08
	250 Move X1, X0
	251 Move X0, X20
	252 Call 0x1C17DEC
	253 Move X0, 0xD3A000
	254 Move X0, [X0+1320]
	255 Call 0x1C17D08
	256 Call 0x1C17F10
	257 Move X19, X0
	258 Move X0, 0xD6E000
	259 Move X0, [X0+1152]
	260 Move X0, 0xD3A000
	261 Move X0, [X0+1320]
	262 Call 0x1C17D08
	263 Call 0x1C17F10
	264 Move X19, X0
	265 Move X0, 0xD6E000
	266 Move X0, [X0+1160]
	267 Call 0x1C17D08
	268 Move X1, X0
	269 Move X0, X19
	270 Move X2, X31
	271 Call ArgumentNullException..ctor, X0, X1
	272 Move X0, 0xD6E000
	273 Move X0, [X0+1144]
	274 Call 0x1C17D08
	275 Move X1, X0
	276 Move X0, X19
	277 Call 0x1C17DEC
	278 Move X0, 0xD6E000
	279 Move X0, [X0+1168]
	280 Call 0x1C17D08
	281 Move X19, X0
	282 Move X0, 0xD3D000
	283 Move X0, [X0+1400]
	284 Call 0x1C17D08
	285 Call 0x1C17F10
	286 Move X20, X0
	287 Move X0, 0xD6E000
	288 Move X0, [X0+1160]
	289 Call 0x1C17D08
	290 Move X2, X0
	291 Move X0, X20
	292 Move X1, X19
	293 Move X3, X31
	294 Call ArgumentException..ctor, X0, X1, X2

Method: System.Void InternalMakeTypedReference(System.Void* result, System.Object target, System.IntPtr[] flds, System.RuntimeType lastFieldType)

Disassembly:
	0x033BF524 B 0x33BF534

ISIL:
	001 Call 0x1C8927C
	002 Return 

Method: System.Int32 GetHashCode()

Disassembly:
	0x033BF528 BL 0x1C16F20
	0x033BF52C MOV X0, X20
	0x033BF530 BL 0x1C171E0
	0x033BF534 STP X30, X25, [X31 - 0x40]!
	0x033BF538 STP X24, X23, [X31 + 0x10]
	0x033BF53C STP X22, X21, [X31 + 0x20]
	0x033BF540 STP X20, X19, [X31 + 0x30]
	0x033BF544 ADRP X25, 0x101E000
	0x033BF548 ADRP X23, 0xD6D000
	0x033BF54C ADRP X24, 0xD34000
	0x033BF550 LDRB W8, [X25 + 0x213]
	0x033BF554 LDR X23, [X23 + 0x500]
	0x033BF558 LDR X24, [X24 + 0x6C0]
	0x033BF55C MOV X20, X3
	0x033BF560 MOV X22, X2
	0x033BF564 MOV W21, W1
	0x033BF568 MOV X19, X0
	0x033BF56C TBNZ X8, 0x0, 0x33BF5CC
	0x033BF570 ADRP X0, 0xD5C000
	0x033BF574 LDR X0, [X0 + 0xB60]
	0x033BF578 BL 0x1C16CF4
	0x033BF57C ADRP X0, 0xD36000
	0x033BF580 LDR X0, [X0 + 0x278]
	0x033BF584 BL 0x1C16CF4
	0x033BF588 ADRP X0, 0xD34000
	0x033BF58C LDR X0, [X0 + 0x6C0]
	0x033BF590 BL 0x1C16CF4
	0x033BF594 ADRP X0, 0xD6D000
	0x033BF598 LDR X0, [X0 + 0x500]
	0x033BF59C BL 0x1C16CF4
	0x033BF5A0 ADRP X0, 0xD67000
	0x033BF5A4 LDR X0, [X0 + 0x180]
	0x033BF5A8 BL 0x1C16CF4
	0x033BF5AC ADRP X0, 0xD6D000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x101F000
	005 Move W8, [X20+523]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD35000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+523], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {39}
	019 Move X8, 0xD35000
	020 Move X8, [X8+1728]
	021 Move X19, [X19]
	022 Move X0, [X8]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Move X1, X31
	029 Call Type.GetTypeFromHandle, X0
	030 Compare X0, 0
	031 JumpIfEqual {44}
	032 Move X8, [X0]
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X2, [X8+344]
	036 Move X1, [X8+352]
	037 Move X30, [X31+32]
	038 CallNoReturn X2
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move W0, W31
	042 Move X30, [X31+32]
	043 Return X0
	044 Call 0x1C17F20

Method: System.Boolean Equals(System.Object o)

Disassembly:
	0x033BF5BC LDR X0, [X0 + 0x128]
	0x033BF5C0 BL 0x1C16CF4
	0x033BF5C4 MOVZ W8, 0x1
	0x033BF5C8 STRB W8, [X25 + 0x213]
	0x033BF5CC LDR X0, [X24]
	0x033BF5D0 LDR X23, [X23]
	0x033BF5D4 LDR W8, [X0 + 0xE0]
	0x033BF5D8 CBNZ W8, 0x33BF5E0
	0x033BF5DC BL 0x1C16DFC
	0x033BF5E0 MOV X0, X23
	0x033BF5E4 MOV X1, X31
	0x033BF5E8 BL 0x338C698
	0x033BF5EC CBZ X19, 0x33BF6BC
	0x033BF5F0 ADRP X23, 0xD5C000
	0x033BF5F4 ADRP X24, 0xD60000
	0x033BF5F8 ADRP X25, 0xD6D000
	0x033BF5FC LDR X23, [X23 + 0xB60]
	0x033BF600 LDR X24, [X24 + 0x128]
	0x033BF604 LDR X25, [X25 + 0x508]
	0x033BF608 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xD6E000
	005 Move X0, [X0+1176]
	006 Call 0x1C17D08
	007 Move X19, X0
	008 Move X0, 0xD35000
	009 Move X0, [X0+2880]
	010 Call 0x1C17D08
	011 Call 0x1C17F10
	012 Move X1, X19
	013 Move X2, X31
	014 Move X20, X0
	015 Call NotSupportedException..ctor, X0, X1
	016 Move X0, 0xD6E000
	017 Move X0, [X0+1184]
	018 Call 0x1C17D08
	019 Move X1, X0
	020 Move X0, X20
	021 Call 0x1C17DEC

Method: System.Boolean get_IsNull()

Disassembly:
	0x033BF60C MOV X0, X19
	0x033BF610 MOV X2, X31
	0x033BF614 BL 0x32A8510
	0x033BF618 LDR X0, [X23]
	0x033BF61C MOV X1, X31
	0x033BF620 BL 0x338C698
	0x033BF624 LDR X1, [X24]
	0x033BF628 MOV X3, X0

ISIL:
	001 Move X8, [X0+8]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move W0, W31
	005 Return X0
	006 Move X8, [X0+16]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Return X0

Method: System.Void SetTypedReference(System.TypedReference target, System.Object value)

Disassembly:
	0x033BF62C MOV X0, X19
	0x033BF630 MOV X2, X22
	0x033BF634 MOV X4, X31
	0x033BF638 BL 0x32A89BC
	0x033BF63C LDR X1, [X25]
	0x033BF640 MOV X0, X19
	0x033BF644 MOV W2, W21
	0x033BF648 MOV X3, X31
	0x033BF64C BL 0x32A8F28
	0x033BF650 MOV X0, X20
	0x033BF654 MOV X1, X31
	0x033BF658 MOV X2, X31
	0x033BF65C BL 0x32D5BF8
	0x033BF660 TBZ X0, 0x0, 0x33BF67C
	0x033BF664 ADRP X8, 0xD36000
	0x033BF668 LDR X8, [X8 + 0x278]
	0x033BF66C LDR X8, [X8]
	0x033BF670 LDR X8, [X8 + 0xB8]
	0x033BF674 LDR X2, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD3E000
	004 Move X0, [X0+1880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0xD6E000
	009 Move X0, [X0+1192]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call NotImplementedException..ctor, X0, X1
	015 Move X0, 0xD6E000
	016 Move X0, [X0+1200]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

