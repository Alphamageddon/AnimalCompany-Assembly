Type: System.Random

Method: System.Void .ctor()

Disassembly:
	0x0338F3CC MOV X0, X21
	0x0338F3D0 LDP X30, X21, [X31], #0x20
	0x0338F3D4 B 0x338F404
	0x0338F3D8 MOVZ W0, 0x30
	0x0338F3DC BL 0x338F3E0
	0x0338F3E0 STP X30, X19, [X31 - 0x10]!
	0x0338F3E4 BL 0x339D4C8
	0x0338F3E8 MOV X19, X0
	0x0338F3EC ADRP X0, 0xD9C000
	0x0338F3F0 LDR X0, [X0 + 0x248]
	0x0338F3F4 BL 0x1C16D08
	0x0338F3F8 MOV X1, X0
	0x0338F3FC MOV X0, X19
	0x0338F400 BL 0x1C16DEC
	0x0338F404 STR X30, [X31 - 0x40]!
	0x0338F408 STP X24, X23, [X31 + 0x10]
	0x0338F40C STP X22, X21, [X31 + 0x20]
	0x0338F410 STP X20, X19, [X31 + 0x30]
	0x0338F414 ADRP X23, 0x104E000
	0x0338F418 ADRP X24, 0xD99000
	0x0338F41C LDRB W8, [X23 + 0x29]
	0x0338F420 LDR X24, [X24 + 0x78]
	0x0338F424 MOV X20, X3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x104F000
	006 Move X21, 0xD6C000
	007 Move W8, [X20+28]
	008 Move X21, [X21+744]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD6C000
	015 Move X0, [X0+744]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+28], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Call Random.GenerateSeed
	025 Move W1, W0
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Random..ctor, X0, X1
	032 Return 

Method: System.Void .ctor(System.Int32 Seed)

Disassembly:
	0x0338F5E8 MOV X1, X31
	0x0338F5EC BL 0x3225708
	0x0338F5F0 LDR W21, [X21 + 0x10]
	0x0338F5F4 MOV X22, X0
	0x0338F5F8 MOV X0, X20
	0x0338F5FC MOV X1, X31
	0x0338F600 BL 0x333ACEC
	0x0338F604 MOV X3, X0
	0x0338F608 MOV X0, X22
	0x0338F60C MOV X1, X21
	0x0338F610 MOV W2, W19
	0x0338F614 LDP X20, X19, [X31 + 0x20]
	0x0338F618 LDP X22, X21, [X31 + 0x10]
	0x0338F61C LDR X30, [X31], #0x30
	0x0338F620 B 0x338F404
	0x0338F624 MOVZ W0, 0x30
	0x0338F628 BL 0x338F3E0
	0x0338F62C MOVZ W0, 0x5
	0x0338F630 RET
	0x0338F634 STP X30, X21, [X31 - 0x20]!
	0x0338F638 STP X20, X19, [X31 + 0x10]
	0x0338F63C ADRP X21, 0x104E000
	0x0338F640 ADRP X20, 0xD6D000
	0x0338F644 LDRB W8, [X21 + 0x2A]
	0x0338F648 LDR X20, [X20 + 0x9E8]
	0x0338F64C MOV X19, X0
	0x0338F650 TBNZ X8, 0x0, 0x338F668
	0x0338F654 ADRP X0, 0xD6D000
	0x0338F658 LDR X0, [X0 + 0x9E8]
	0x0338F65C BL 0x1C16CF4
	0x0338F660 MOVZ W8, 0x1
	0x0338F664 STRB W8, [X21 + 0x2A]
	0x0338F668 LDR X0, [X20]
	0x0338F66C LDRB W19, [X19]
	0x0338F670 LDR W8, [X0 + 0xE0]
	0x0338F674 CBNZ W8, 0x338F67C
	0x0338F678 BL 0x1C16DFC
	0x0338F67C MOV W0, W19
	0x0338F680 LDP X20, X19, [X31 + 0x10]
	0x0338F684 MOV X1, X31
	0x0338F688 LDP X30, X21, [X31], #0x20
	0x0338F68C B 0x331E438
	0x0338F690 STP X30, X21, [X31 - 0x20]!
	0x0338F694 STP X20, X19, [X31 + 0x10]
	0x0338F698 ADRP X21, 0x104E000
	0x0338F69C ADRP X20, 0xD6D000
	0x0338F6A0 LDRB W8, [X21 + 0x2B]
	0x0338F6A4 LDR X20, [X20 + 0x9E8]
	0x0338F6A8 MOV X19, X0
	0x0338F6AC TBNZ X8, 0x0, 0x338F6C4
	0x0338F6B0 ADRP X0, 0xD6D000
	0x0338F6B4 LDR X0, [X0 + 0x9E8]
	0x0338F6B8 BL 0x1C16CF4
	0x0338F6BC MOVZ W8, 0x1
	0x0338F6C0 STRB W8, [X21 + 0x2B]
	0x0338F6C4 LDR X0, [X20]
	0x0338F6C8 LDRB W19, [X19]
	0x0338F6CC LDR W8, [X0 + 0xE0]
	0x0338F6D0 CBNZ W8, 0x338F6D8
	0x0338F6D4 BL 0x1C16DFC
	0x0338F6D8 MOV W0, W19
	0x0338F6DC LDP X20, X19, [X31 + 0x10]
	0x0338F6E0 MOV X1, X31
	0x0338F6E4 LDP X30, X21, [X31], #0x20
	0x0338F6E8 B 0x331E7E0
	0x0338F6EC LDRB W0, [X0]
	0x0338F6F0 RET
	0x0338F6F4 STP X30, X21, [X31 - 0x20]!
	0x0338F6F8 STP X20, X19, [X31 + 0x10]
	0x0338F6FC ADRP X21, 0x104E000
	0x0338F700 ADRP X20, 0xD6D000
	0x0338F704 LDRB W8, [X21 + 0x2C]
	0x0338F708 LDR X20, [X20 + 0x9E8]
	0x0338F70C MOV X19, X0
	0x0338F710 TBNZ X8, 0x0, 0x338F728
	0x0338F714 ADRP X0, 0xD6D000
	0x0338F718 LDR X0, [X0 + 0x9E8]
	0x0338F71C BL 0x1C16CF4
	0x0338F720 MOVZ W8, 0x1
	0x0338F724 STRB W8, [X21 + 0x2C]
	0x0338F728 LDR X0, [X20]
	0x0338F72C LDRB W19, [X19]
	0x0338F730 LDR W8, [X0 + 0xE0]
	0x0338F734 CBNZ W8, 0x338F73C
	0x0338F738 BL 0x1C16DFC
	0x0338F73C MOV W0, W19
	0x0338F740 LDP X20, X19, [X31 + 0x10]
	0x0338F744 MOV X1, X31
	0x0338F748 LDP X30, X21, [X31], #0x20
	0x0338F74C B 0x331F328
	0x0338F750 STP X30, X21, [X31 - 0x20]!
	0x0338F754 STP X20, X19, [X31 + 0x10]
	0x0338F758 ADRP X21, 0x104E000
	0x0338F75C ADRP X20, 0xD6D000
	0x0338F760 LDRB W8, [X21 + 0x2D]
	0x0338F764 LDR X20, [X20 + 0x9E8]
	0x0338F768 MOV X19, X0
	0x0338F76C TBNZ X8, 0x0, 0x338F784
	0x0338F770 ADRP X0, 0xD6D000
	0x0338F774 LDR X0, [X0 + 0x9E8]
	0x0338F778 BL 0x1C16CF4
	0x0338F77C MOVZ W8, 0x1
	0x0338F780 STRB W8, [X21 + 0x2D]
	0x0338F784 LDR X0, [X20]
	0x0338F788 LDRB W19, [X19]
	0x0338F78C LDR W8, [X0 + 0xE0]
	0x0338F790 CBNZ W8, 0x338F798
	0x0338F794 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x104F000
	007 Move X22, 0xD66000
	008 Move W8, [X21+29]
	009 Move X22, [X22+3672]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xD66000
	017 Move X0, [X0+3672]
	018 Call 0x1C17CF4
	019 Move X0, 0xD65000
	020 Move X0, [X0+1448]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+29], W8
	024 Move X0, [X22]
	025 Move W1, 56
	026 Call 0x1C17D6C
	027 Move [X19+24], X0
	028 Move X0, X19
	029 Move X1, X31
	030 Call Object..ctor, X0
	031 Move W8, 0x80000000
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W10, 0xEC87
	034 NotImplemented "Instruction MOVK not yet implemented."
	035 Move X8, 0xD65000
	036 Move X8, [X8+1448]
	037 Move X0, [X8]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move W9, 0xEC86
	044 NotImplemented "Instruction CSNEG not yet implemented."
	045 NotImplemented "Instruction MOVK not yet implemented."
	046 Subtract W10, W9, W8
	047 Move X8, [X19+24]
	048 Compare X8, 0
	049 JumpIfEqual {114}
	050 Move X9, [X8+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W12, W31
	053 And X11, X9, 0
	054 Move W13, 1
	055 Move W14, 54
	056 Move TEMP, 0x80000000
	057 Not TEMP
	058 Move W15, TEMP
	059 Move [X8+252], W10
	060 Add W16, W12, 21
	061 Subtract W12, W12, 34
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction CSEL not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Subtract W10, W10, W13
	066 Add W17, W10, W15
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add X16, X8, W12
	069 NotImplemented "Instruction CSEL not yet implemented."
	070 Subtract W14, W14, 1
	071 Move [X16+32], W13
	072 Move W10, W13
	073 Move W13, W17
	074 Subtract X10, X11, 1
	075 Add X11, X8, 36
	076 Move W12, 1
	077 Move TEMP, 24
	078 Not TEMP
	079 Move W13, TEMP
	080 Move W14, 30
	081 Move TEMP, 0x80000000
	082 Not TEMP
	083 Move W15, TEMP
	084 Move X16, X31
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Add X17, X16, 1
	087 NotImplemented "Instruction CMP not yet implemented."
	088 NotImplemented "Instruction CSEL not yet implemented."
	089 Add X17, X16, X17
	090 Add X17, X17, 2
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Add X17, X8, W17
	093 Move W0, [X11]
	094 Move W17, [X17+32]
	095 Subtract W17, W0, W17
	096 Add W0, W17, W15
	097 NotImplemented "Instruction CMP not yet implemented."
	098 NotImplemented "Instruction CSEL not yet implemented."
	099 Move [X11], W17
	100 Add X16, X16, 1
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Add W12, W12, 1
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X8, -42598400
	105 Move V0, [X8+1160]
	106 Move X22, [X31+16]
	107 Move X21, [X31+24]
	108 Move [X19+16], D0
	109 Move X20, [X31+32]
	110 Move X19, [X31+40]
	111 Move X30, [X31+48]
	112 Return 
	113 Call 0x1C17F28
	114 Call 0x1C17F20

Method: System.Double Sample()

Disassembly:
	0x0338F798 MOV W0, W19
	0x0338F79C LDP X20, X19, [X31 + 0x10]
	0x0338F7A0 MOV X1, X31
	0x0338F7A4 LDP X30, X21, [X31], #0x20
	0x0338F7A8 B 0x331F944
	0x0338F7AC STP X30, X21, [X31 - 0x20]!
	0x0338F7B0 STP X20, X19, [X31 + 0x10]
	0x0338F7B4 ADRP X21, 0x104E000

ISIL:
	001 Move [X31-16], X30
	002 Call Random.InternalSample, X0
	003 Move X8, -42598400
	004 Move V0, [X8+648]
	005 NotImplemented "Instruction SCVTF not yet implemented."
	006 Multiply D0, D1, D0
	007 Move X30, [X31+16]
	008 Return V0

Method: System.Int32 InternalSample()

Disassembly:
	0x0338F7B8 ADRP X20, 0xD6D000
	0x0338F7BC LDRB W8, [X21 + 0x2E]
	0x0338F7C0 LDR X20, [X20 + 0x9E8]
	0x0338F7C4 MOV X19, X0
	0x0338F7C8 TBNZ X8, 0x0, 0x338F7E0
	0x0338F7CC ADRP X0, 0xD6D000
	0x0338F7D0 LDR X0, [X0 + 0x9E8]
	0x0338F7D4 BL 0x1C16CF4
	0x0338F7D8 MOVZ W8, 0x1
	0x0338F7DC STRB W8, [X21 + 0x2E]
	0x0338F7E0 LDR X0, [X20]
	0x0338F7E4 LDRB W19, [X19]
	0x0338F7E8 LDR W8, [X0 + 0xE0]
	0x0338F7EC CBNZ W8, 0x338F7F4
	0x0338F7F0 BL 0x1C16DFC
	0x0338F7F4 MOV W0, W19
	0x0338F7F8 LDP X20, X19, [X31 + 0x10]
	0x0338F7FC MOV X1, X31
	0x0338F800 LDP X30, X21, [X31], #0x20
	0x0338F804 B 0x331FE40
	0x00000000 INVALID
	0x0338F80C RET
	0x0338F810 STP X30, X21, [X31 - 0x20]!
	0x0338F814 STP X20, X19, [X31 + 0x10]
	0x0338F818 ADRP X21, 0x104E000
	0x0338F81C ADRP X20, 0xD6D000
	0x0338F820 LDRB W8, [X21 + 0x2F]
	0x0338F824 LDR X20, [X20 + 0x9E8]
	0x0338F828 MOV X19, X0
	0x0338F82C TBNZ X8, 0x0, 0x338F844
	0x0338F830 ADRP X0, 0xD6D000
	0x0338F834 LDR X0, [X0 + 0x9E8]
	0x0338F838 BL 0x1C16CF4
	0x0338F83C MOVZ W8, 0x1
	0x0338F840 STRB W8, [X21 + 0x2F]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+24]
	003 Compare X8, 0
	004 JumpIfEqual {37}
	005 Move V0, [X0+16]
	006 NotImplemented "Instruction MOVI not yet implemented."
	007 NotImplemented "Instruction MOVI not yet implemented."
	008 Move W10, [X8+24]
	009 Add S0, S0, S1
	010 NotImplemented "Instruction CMGT not yet implemented."
	011 NotImplemented "Instruction INVALID not yet implemented."
	012 Move W9, S0
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Add X9, X8, W9
	017 Add X8, X8, W11
	018 Move W8, [X8+32]
	019 Add X9, X9, 32
	020 Move W10, [X9]
	021 Move TEMP, 0x80000000
	022 Not TEMP
	023 Move W11, TEMP
	024 Subtract W8, W10, W8
	025 Add W10, W8, W11
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CSEL not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Or W8, W31, 0x7FFFFFFE
	030 NotImplemented "Instruction CSEL not yet implemented."
	031 Move [X9], W8
	032 Move [X0+16], D0
	033 Move W0, W8
	034 Move X30, [X31+16]
	035 Return X0
	036 Call 0x1C17F28
	037 Call 0x1C17F20

Method: System.Int32 GenerateSeed()

Disassembly:
	0x0338F428 MOV W19, W2
	0x0338F42C MOV X21, X1
	0x0338F430 MOV X22, X0
	0x0338F434 TBNZ X8, 0x0, 0x338F44C
	0x0338F438 ADRP X0, 0xD99000
	0x0338F43C LDR X0, [X0 + 0x78]
	0x0338F440 BL 0x1C16CF4
	0x0338F444 MOVZ W8, 0x1
	0x0338F448 STRB W8, [X23 + 0x29]
	0x0338F44C LDR X0, [X24]
	0x0338F450 LDR W8, [X0 + 0xE0]
	0x0338F454 CBNZ W8, 0x338F45C
	0x0338F458 BL 0x1C16DFC
	0x0338F45C MOV X0, X22
	0x0338F460 MOV X1, X21
	0x0338F464 MOV W2, W19
	0x0338F468 MOV X3, X20
	0x0338F46C MOV X4, X31
	0x0338F470 BL 0x337ADF4
	0x0338F474 TBNZ X19, 0x9, 0x338F4C4
	0x0338F478 CMP W0, W0, SXTB
	0x0338F47C B.EQ 0x338F4CC
	0x0338F480 ADRP X0, 0xD64000
	0x0338F484 LDR X0, [X0 + 0x858]
	0x0338F488 BL 0x1C16D08
	0x0338F48C BL 0x1C16F10
	0x0338F490 MOV X19, X0
	0x0338F494 ADRP X0, 0xD99000
	0x0338F498 LDR X0, [X0 + 0x1A0]
	0x0338F49C BL 0x1C16D08
	0x0338F4A0 MOV X1, X0
	0x0338F4A4 MOV X0, X19
	0x0338F4A8 BL 0x338CB50
	0x0338F4AC ADRP X0, 0xD9C000
	0x0338F4B0 LDR X0, [X0 + 0x250]
	0x0338F4B4 BL 0x1C16D08
	0x0338F4B8 MOV X1, X0
	0x0338F4BC MOV X0, X19
	0x0338F4C0 BL 0x1C16DEC
	0x0338F4C4 CMP W0, 0x100
	0x0338F4C8 B.CS 0x338F480
	0x0338F4CC LDP X20, X19, [X31 + 0x30]
	0x0338F4D0 LDP X22, X21, [X31 + 0x20]
	0x0338F4D4 LDP X24, X23, [X31 + 0x10]
	0x0338F4D8 LDR X30, [X31], #0x40
	0x0338F4DC RET
	0x0338F4E0 B 0x338F4E4
	0x0338F4E4 MOV X19, X0
	0x0338F4E8 CMP W1, 0x1
	0x0338F4EC B.NE 0x338F590
	0x0338F4F0 MOV X0, X19
	0x0338F4F4 BL 0x3EB1AD0
	0x0338F4F8 MOV X19, X0
	0x0338F4FC ADRP X0, 0xD64000
	0x0338F500 LDR X0, [X0 + 0x858]
	0x0338F504 BL 0x1C16D08
	0x0338F508 LDR X8, [X19]
	0x0338F50C LDR X1, [X8]
	0x0338F510 BL 0x1C17270
	0x0338F514 TBZ X0, 0x0, 0x338F568
	0x0338F518 LDR X19, [X19]
	0x0338F51C BL 0x3EB1AE0
	0x0338F520 ADRP X0, 0xD64000
	0x0338F524 LDR X0, [X0 + 0x858]
	0x0338F528 BL 0x1C16D08
	0x0338F52C BL 0x1C16F10
	0x0338F530 MOV X20, X0
	0x0338F534 ADRP X0, 0xD99000
	0x0338F538 LDR X0, [X0 + 0x1A0]
	0x0338F53C BL 0x1C16D08
	0x0338F540 MOV X1, X0
	0x0338F544 MOV X0, X20
	0x0338F548 MOV X2, X19
	0x0338F54C BL 0x338CB74
	0x0338F550 ADRP X0, 0xD9C000
	0x0338F554 LDR X0, [X0 + 0x250]
	0x0338F558 BL 0x1C16D08
	0x0338F55C MOV X1, X0
	0x0338F560 MOV X0, X20
	0x0338F564 BL 0x1C16DEC
	0x0338F568 MOVZ W0, 0x8
	0x0338F56C BL 0x3EB1AF0
	0x0338F570 LDR X8, [X19]
	0x0338F574 STR X8, [X0]
	0x0338F578 ADRP X1, 0xB25000
	0x0338F57C ADD X1, X1, 0xE58
	0x0338F580 MOV X2, X31
	0x0338F584 BL 0x3EB1B00
	0x0338F588 MOV X19, X0
	0x0338F58C BL 0x3EB1AE0
	0x0338F590 MOV X0, X19
	0x0338F594 BL 0x1D2C690
	0x0338F598 BL 0x1990590
	0x0338F59C STR X30, [X31 - 0x30]!
	0x0338F5A0 STP X22, X21, [X31 + 0x10]
	0x0338F5A4 STP X20, X19, [X31 + 0x20]
	0x0338F5A8 MOV W19, W1
	0x0338F5AC MOV X21, X0
	0x0338F5B0 MOV W0, W1
	0x0338F5B4 MOV X1, X31
	0x0338F5B8 MOV X20, X2
	0x0338F5BC BL 0x333B33C
	0x0338F5C0 CBZ X21, 0x338F624
	0x0338F5C4 ADRP X22, 0x104A000
	0x0338F5C8 LDRB W8, [X22 + 0x762]
	0x0338F5CC CBNZ W8, 0x338F5E4
	0x0338F5D0 ADRP X0, 0xD8B000
	0x0338F5D4 LDR X0, [X0 + 0x290]
	0x0338F5D8 BL 0x1C16CF4
	0x0338F5DC MOVZ W8, 0x1
	0x0338F5E0 STRB W8, [X22 + 0x762]
	0x0338F5E4 MOV X0, X21

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x104F000
	009 Move X22, 0xD6C000
	010 Move W8, [X19+30]
	011 Move X22, [X22+744]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD6C000
	017 Move X0, [X0+744]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+30], W8
	021 Move X0, [X22]
	022 Move [X31+12], W31
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X22]
	028 Call 0x1C17D0C
	029 Move X19, [X0]
	030 Compare X19, 0
	031 JumpIfNotEqual {90}
	032 Move X0, [X22]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X22]
	038 Move X8, [X0+184]
	039 Move X19, [X8]
	040 Move [X31+12], W31
	041 Add X1, X31, 12
	042 Move X0, X19
	043 Move X2, X31
	044 Call Monitor.Enter, X0, X1
	045 Move X0, [X22]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X22]
	051 Move X8, [X0+184]
	052 Move X0, [X8]
	053 Compare X0, 0
	054 JumpIfEqual {105}
	055 Move X8, [X0]
	056 Move X9, [X8+392]
	057 Move X1, [X8+400]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move W21, W0
	060 Move X20, X31
	061 Move W23, 3
	062 Move W8, [X31+12]
	063 Compare W8, 0
	064 JumpIfEqual {68}
	065 Move X0, X19
	066 Move X1, X31
	067 Call Monitor.Exit, X0
	068 Compare X20, 0
	069 JumpIfNotEqual {103}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Compare W23, 0
	072 JumpIfNotEqual {95}
	073 Move X0, [X22]
	074 Call 0x1C17F10
	075 Move W1, W21
	076 Move X19, X0
	077 Call Random..ctor, X0, X1
	078 Move X0, [X22]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X22]
	084 Call 0x1C17D0C
	085 Move [X0], X19
	086 Move X0, [X22]
	087 Call 0x1C17D0C
	088 Compare X19, 0
	089 JumpIfEqual {106}
	090 Move X8, [X19]
	091 Move X0, X19
	092 Move X9, [X8+392]
	093 Move X1, [X8+400]
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Move X20, [X31+48]
	096 Move X19, [X31+56]
	097 Move X22, [X31+32]
	098 Move X21, [X31+40]
	099 Move X30, [X31+16]
	100 Move X23, [X31+24]
	101 Add X31, X31, 64
	102 Return X0
	103 Move X0, X20
	104 Call 0x1C17F18
	105 Call 0x1C17F20
	106 Call 0x1C17F20
	107 Move X21, X0
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X0, X21
	110 Call 0x3EB2AD0
	111 Move X20, [X0]
	112 Call 0x3EB2AE0
	113 Move W23, W31
	114 Move W21, W31
	115 Move X20, X31
	116 Move X21, X0
	117 Move W8, [X31+12]
	118 Compare W8, 0
	119 JumpIfEqual {123}
	120 Move X0, X19
	121 Move X1, X31
	122 Call Monitor.Exit, X0
	123 Compare X20, 0
	124 JumpIfNotEqual {127}
	125 Move X0, X21
	126 Call 0x1D2D690
	127 Move X0, X20
	128 Call 0x1C17F18
	129 Call 0x1991590

Method: System.Int32 GenerateGlobalSeed()

Disassembly:
	0x0338F844 LDR X0, [X20]
	0x0338F848 LDRB W19, [X19]
	0x0338F84C LDR W8, [X0 + 0xE0]
	0x0338F850 CBNZ W8, 0x338F858
	0x0338F854 BL 0x1C16DFC
	0x0338F858 MOV W0, W19
	0x0338F85C LDP X20, X19, [X31 + 0x10]
	0x0338F860 MOV X1, X31
	0x0338F864 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X31, 12
	003 Move W1, 4
	004 Move X2, X31
	005 Move [X31+12], W31
	006 Call Interop.GetRandomBytes, X0, X1
	007 Move W0, [X31+12]
	008 Move X30, [X31+16]
	009 Return X0

Method: System.Int32 Next()

Disassembly:
	0x0338F868 B 0x33207F4

ISIL:
	001 Call Random.InternalSample, X0
	002 Return X0

Method: System.Double GetSampleForLargeRange()

Disassembly:
	0x0338F86C STP X30, X21, [X31 - 0x20]!
	0x0338F870 STP X20, X19, [X31 + 0x10]
	0x0338F874 ADRP X21, 0x104E000
	0x0338F878 ADRP X20, 0xD6D000
	0x0338F87C LDRB W8, [X21 + 0x30]
	0x0338F880 LDR X20, [X20 + 0x9E8]
	0x0338F884 MOV X19, X0
	0x0338F888 TBNZ X8, 0x0, 0x338F8A0
	0x0338F88C ADRP X0, 0xD6D000
	0x0338F890 LDR X0, [X0 + 0x9E8]
	0x0338F894 BL 0x1C16CF4
	0x0338F898 MOVZ W8, 0x1
	0x0338F89C STRB W8, [X21 + 0x30]
	0x0338F8A0 LDR X0, [X20]
	0x0338F8A4 LDRB W19, [X19]
	0x0338F8A8 LDR W8, [X0 + 0xE0]
	0x0338F8AC CBNZ W8, 0x338F8B4
	0x0338F8B0 BL 0x1C16DFC
	0x0338F8B4 MOV W0, W19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Call Random.InternalSample, X0
	006 Move W20, W0
	007 Move X0, X19
	008 Call Random.InternalSample, X0
	009 Move X8, -42602496
	010 Move V0, [X8+3824]
	011 Move X8, -42598400
	012 And W31, W0, 1
	013 Move V1, [X8+480]
	014 NotImplemented "Instruction CSNEG not yet implemented."
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 NotImplemented "Instruction SCVTF not yet implemented."
	018 Add D0, D2, D0
	019 NotImplemented "Instruction FDIV not yet implemented."
	020 Move X30, [X31+32]
	021 Return V0

Method: System.Int32 Next(System.Int32 minValue, System.Int32 maxValue)

Disassembly:
	0x0338F8B8 LDP X20, X19, [X31 + 0x10]
	0x0338F8BC MOV X1, X31
	0x0338F8C0 LDP X30, X21, [X31], #0x20
	0x0338F8C4 B 0x3320D30
	0x0338F8C8 STP X30, X21, [X31 - 0x20]!
	0x0338F8CC STP X20, X19, [X31 + 0x10]
	0x0338F8D0 ADRP X21, 0x104E000
	0x0338F8D4 ADRP X20, 0xD6D000
	0x0338F8D8 LDRB W8, [X21 + 0x31]
	0x0338F8DC LDR X20, [X20 + 0x9E8]
	0x0338F8E0 MOV X19, X0
	0x0338F8E4 TBNZ X8, 0x0, 0x338F8FC
	0x0338F8E8 ADRP X0, 0xD6D000
	0x0338F8EC LDR X0, [X0 + 0x9E8]
	0x0338F8F0 BL 0x1C16CF4
	0x0338F8F4 MOVZ W8, 0x1
	0x0338F8F8 STRB W8, [X21 + 0x31]
	0x0338F8FC LDR X0, [X20]
	0x0338F900 LDRB W19, [X19]
	0x0338F904 LDR W8, [X0 + 0xE0]
	0x0338F908 CBNZ W8, 0x338F910
	0x0338F90C BL 0x1C16DFC
	0x0338F910 MOV W0, W19
	0x0338F914 LDP X20, X19, [X31 + 0x10]
	0x0338F918 MOV X1, X31
	0x0338F91C LDP X30, X21, [X31], #0x20
	0x0338F920 B 0x3321214
	0x0338F924 STP X30, X21, [X31 - 0x20]!
	0x0338F928 STP X20, X19, [X31 + 0x10]
	0x0338F92C ADRP X21, 0x104E000
	0x0338F930 ADRP X20, 0xD6D000
	0x0338F934 LDRB W8, [X21 + 0x32]
	0x0338F938 LDR X20, [X20 + 0x9E8]
	0x0338F93C MOV X19, X0
	0x0338F940 TBNZ X8, 0x0, 0x338F958
	0x0338F944 ADRP X0, 0xD6D000
	0x0338F948 LDR X0, [X0 + 0x9E8]
	0x0338F94C BL 0x1C16CF4
	0x0338F950 MOVZ W8, 0x1
	0x0338F954 STRB W8, [X21 + 0x32]
	0x0338F958 LDR X0, [X20]
	0x0338F95C LDRB W19, [X19]
	0x0338F960 LDR W8, [X0 + 0xE0]
	0x0338F964 CBNZ W8, 0x338F96C
	0x0338F968 BL 0x1C16DFC
	0x0338F96C MOV W0, W19
	0x0338F970 LDP X20, X19, [X31 + 0x10]
	0x0338F974 MOV X1, X31
	0x0338F978 LDP X30, X21, [X31], #0x20
	0x0338F97C B 0x3321750
	0x0338F980 STP X30, X21, [X31 - 0x20]!
	0x0338F984 STP X20, X19, [X31 + 0x10]
	0x0338F988 ADRP X21, 0x104E000
	0x0338F98C ADRP X20, 0xD6D000
	0x0338F990 LDRB W8, [X21 + 0x33]
	0x0338F994 LDR X20, [X20 + 0x9E8]
	0x0338F998 MOV X19, X0
	0x0338F99C TBNZ X8, 0x0, 0x338F9B4
	0x0338F9A0 ADRP X0, 0xD6D000
	0x0338F9A4 LDR X0, [X0 + 0x9E8]
	0x0338F9A8 BL 0x1C16CF4
	0x0338F9AC MOVZ W8, 0x1
	0x0338F9B0 STRB W8, [X21 + 0x33]
	0x0338F9B4 LDR X0, [X20]
	0x0338F9B8 LDRB W19, [X19]
	0x0338F9BC LDR W8, [X0 + 0xE0]
	0x0338F9C0 CBNZ W8, 0x338F9C8
	0x0338F9C4 BL 0x1C16DFC
	0x0338F9C8 MOV W0, W19
	0x0338F9CC LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X8, W2
	007 Subtract X20, X8, W1
	008 Move TEMP, 0x80000000
	009 Not TEMP
	010 Move W8, TEMP
	011 Move W19, W1
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Call Random.GetSampleForLargeRange, X0
	014 NotImplemented "Instruction SCVTF not yet implemented."
	015 Move X8, 0x7FF00000
	016 Multiply D0, D0, D1
	017 Move D1, X8
	018 NotImplemented "Instruction FCVTZS not yet implemented."
	019 NotImplemented "Instruction FCMP not yet implemented."
	020 NotImplemented "Instruction CSEL not yet implemented."
	021 Move X8, [X0]
	022 Move X9, [X8+376]
	023 Move X1, [X8+384]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 NotImplemented "Instruction SCVTF not yet implemented."
	026 Move X8, 0x7FF00000
	027 Multiply D0, D0, D1
	028 Move D1, X8
	029 NotImplemented "Instruction FCVTZS not yet implemented."
	030 NotImplemented "Instruction FCMP not yet implemented."
	031 Move W9, 0x80000000
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 Add W0, W8, W19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0
	039 Move X0, 0xD8E000
	040 Move X0, [X0+96]
	041 Call 0x1C17D08
	042 Move X20, 0xD9D000
	043 Move X20, [X20+520]
	044 Move X19, X0
	045 Move X0, X20
	046 Call 0x1C17D08
	047 Move X21, X0
	048 Move X0, 0xD9D000
	049 Move X0, [X0+528]
	050 Call 0x1C17D08
	051 Move X2, X0
	052 Move X0, X19
	053 Move X1, X21
	054 Move X3, X31
	055 Call SR.Format, X0, X1, X2
	056 Move X19, X0
	057 Move X0, 0xD6D000
	058 Move X0, [X0+1888]
	059 Call 0x1C17D08
	060 Call 0x1C17F10
	061 Move X21, X0
	062 Move X0, X20
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X21
	066 Move X2, X19
	067 Move X3, X31
	068 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	069 Move X0, 0xD9D000
	070 Move X0, [X0+536]
	071 Call 0x1C17D08
	072 Move X1, X0
	073 Move X0, X21
	074 Call 0x1C17DEC

Method: System.Int32 Next(System.Int32 maxValue)

Disassembly:
	0x0338F9D0 MOV X1, X31
	0x0338F9D4 LDP X30, X21, [X31], #0x20
	0x0338F9D8 B 0x3321A94
	0x0338F9DC STP X30, X21, [X31 - 0x20]!
	0x0338F9E0 STP X20, X19, [X31 + 0x10]
	0x0338F9E4 ADRP X21, 0x104E000
	0x0338F9E8 ADRP X20, 0xD6D000
	0x0338F9EC LDRB W8, [X21 + 0x34]
	0x0338F9F0 LDR X20, [X20 + 0x9E8]
	0x0338F9F4 MOV X19, X0
	0x0338F9F8 TBNZ X8, 0x0, 0x338FA10
	0x0338F9FC ADRP X0, 0xD6D000
	0x0338FA00 LDR X0, [X0 + 0x9E8]
	0x0338FA04 BL 0x1C16CF4
	0x0338FA08 MOVZ W8, 0x1
	0x0338FA0C STRB W8, [X21 + 0x34]
	0x0338FA10 LDR X0, [X20]
	0x0338FA14 LDRB W19, [X19]
	0x0338FA18 LDR W8, [X0 + 0xE0]
	0x0338FA1C CBNZ W8, 0x338FA24
	0x0338FA20 BL 0x1C16DFC
	0x0338FA24 MOV W0, W19
	0x0338FA28 LDP X20, X19, [X31 + 0x10]
	0x0338FA2C MOV X1, X31
	0x0338FA30 LDP X30, X21, [X31], #0x20
	0x0338FA34 B 0x3321C8C
	0x0338FA38 STR X30, [X31 - 0x20]!
	0x0338FA3C STP X20, X19, [X31 + 0x10]
	0x0338FA40 ADRP X0, 0xD99000
	0x0338FA44 LDR X0, [X0 + 0x30]
	0x0338FA48 BL 0x1C16D08
	0x0338FA4C MOV X19, X0
	0x0338FA50 ADRP X0, 0xD96000
	0x0338FA54 LDR X0, [X0 + 0xB0]
	0x0338FA58 BL 0x1C16D08
	0x0338FA5C MOV X20, X0
	0x0338FA60 ADRP X0, 0xD96000
	0x0338FA64 LDR X0, [X0 + 0x98]
	0x0338FA68 BL 0x1C16D08
	0x0338FA6C MOV X2, X0
	0x0338FA70 MOV X0, X19
	0x0338FA74 MOV X1, X20
	0x0338FA78 MOV X3, X31
	0x0338FA7C BL 0x320A264
	0x0338FA80 MOV X19, X0
	0x0338FA84 ADRP X0, 0xD6C000
	0x0338FA88 LDR X0, [X0 + 0xC08]
	0x0338FA8C BL 0x1C16D08
	0x0338FA90 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move TEMP, X1
	006 And TEMP, TEMP, -2147483648
	007 Compare TEMP, -2147483648
	008 JumpIfEqual {27}
	009 Move X8, [X0]
	010 Move W19, W1
	011 Move X9, [X8+376]
	012 Move X1, [X8+384]
	013 NotImplemented "Instruction BLR not yet implemented."
	014 NotImplemented "Instruction SCVTF not yet implemented."
	015 Move X8, 0x7FF00000
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Multiply D0, D0, D1
	019 Move D1, X8
	020 NotImplemented "Instruction FCVTZS not yet implemented."
	021 NotImplemented "Instruction FCMP not yet implemented."
	022 Move W9, 0x80000000
	023 NotImplemented "Instruction CSEL not yet implemented."
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return X0
	027 Move X0, 0xD94000
	028 Move X0, [X0+1136]
	029 Call 0x1C17D08
	030 Move X20, 0xD9D000
	031 Move X20, [X20+528]
	032 Move X19, X0
	033 Move X0, X20
	034 Call 0x1C17D08
	035 Move X1, X0
	036 Move X0, X19
	037 Move X2, X31
	038 Call SR.Format, X0, X1
	039 Move X19, X0
	040 Move X0, 0xD6D000
	041 Move X0, [X0+1888]
	042 Call 0x1C17D08
	043 Call 0x1C17F10
	044 Move X21, X0
	045 Move X0, X20
	046 Call 0x1C17D08
	047 Move X1, X0
	048 Move X0, X21
	049 Move X2, X19
	050 Move X3, X31
	051 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	052 Move X0, 0xD9D000
	053 Move X0, [X0+544]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X21
	057 Call 0x1C17DEC

Method: System.Double NextDouble()

Disassembly:
	0x0338FA94 MOV X1, X19
	0x0338FA98 MOV X2, X31
	0x0338FA9C MOV X20, X0

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+376]
	003 Move X1, [X8+384]
	004 CallNoReturn X2

Method: System.Void NextBytes(System.Byte[] buffer)

Disassembly:
	0x0338FAA0 BL 0x337B498
	0x0338FAA4 ADRP X0, 0xD9C000
	0x0338FAA8 LDR X0, [X0 + 0x258]
	0x0338FAAC BL 0x1C16D08
	0x0338FAB0 MOV X1, X0
	0x0338FAB4 MOV X0, X20
	0x0338FAB8 BL 0x1C16DEC
	0x0338FABC STR X30, [X31 - 0x40]!
	0x0338FAC0 STP X24, X23, [X31 + 0x10]
	0x0338FAC4 STP X22, X21, [X31 + 0x20]
	0x0338FAC8 STP X20, X19, [X31 + 0x30]
	0x0338FACC ADRP X24, 0x104E000
	0x0338FAD0 ADRP X23, 0xD8D000
	0x0338FAD4 ADRP X22, 0xD6D000
	0x0338FAD8 LDRB W8, [X24 + 0x35]
	0x0338FADC LDR X23, [X23 + 0x6B0]
	0x0338FAE0 LDR X22, [X22 + 0x9E8]
	0x0338FAE4 MOV X19, X2
	0x0338FAE8 MOV X20, X1
	0x0338FAEC MOV X21, X0
	0x0338FAF0 TBNZ X8, 0x0, 0x338FB14
	0x0338FAF4 ADRP X0, 0xD6D000
	0x0338FAF8 LDR X0, [X0 + 0x9E8]
	0x0338FAFC BL 0x1C16CF4
	0x0338FB00 ADRP X0, 0xD8D000
	0x0338FB04 LDR X0, [X0 + 0x6B0]
	0x0338FB08 BL 0x1C16CF4
	0x0338FB0C MOVZ W8, 0x1
	0x0338FB10 STRB W8, [X24 + 0x35]
	0x0338FB14 LDRB W8, [X21]
	0x0338FB18 LDR X0, [X23]
	0x0338FB1C ADD X1, X31, 0xC
	0x0338FB20 STRB W8, [X31 + 0xC]
	0x0338FB24 BL 0x1C16E04
	0x0338FB28 LDR X8, [X22]
	0x0338FB2C MOV X21, X0
	0x0338FB30 LDR W9, [X8 + 0xE0]
	0x0338FB34 CBNZ W9, 0x338FB40
	0x0338FB38 MOV X0, X8
	0x0338FB3C BL 0x1C16DFC
	0x0338FB40 MOV X0, X21
	0x0338FB44 MOV X1, X20
	0x0338FB48 MOV X2, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {28}
	008 Move W8, [X1+24]
	009 Move X19, X1
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X20, X0
	012 Move X21, X31
	013 Add X22, X19, 32
	014 Move X0, X20
	015 Call Random.InternalSample, X0
	016 Move W8, [X19+24]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move [X22], W0
	019 Add X21, X21, 1
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 Return 
	027 Call 0x1C17F28
	028 Move X0, 0xD6A000
	029 Move X0, [X0+1320]
	030 Call 0x1C17D08
	031 Call 0x1C17F10
	032 Move X19, X0
	033 Move X0, 0xD90000
	034 Move X0, [X0+3912]
	035 Call 0x1C17D08
	036 Move X1, X0
	037 Move X0, X19
	038 Move X2, X31
	039 Call ArgumentNullException..ctor, X0, X1
	040 Move X0, 0xD9D000
	041 Move X0, [X0+552]
	042 Call 0x1C17D08
	043 Move X1, X0
	044 Move X0, X19
	045 Call 0x1C17DEC

Method: System.Void .cctor()

Disassembly:
	0x0338FB4C MOV X3, X31
	0x0338FB50 BL 0x3318718
	0x0338FB54 LDP X20, X19, [X31 + 0x30]
	0x0338FB58 LDP X22, X21, [X31 + 0x20]
	0x0338FB5C LDP X24, X23, [X31 + 0x10]
	0x0338FB60 LDR X30, [X31], #0x40
	0x0338FB64 RET
	0x0338FB68 MOV X1, X31
	0x0338FB6C B 0x33A51F0
	0x0338FB70 FMOV W8, S0
	0x0338FB74 AND W8, W8, 0x7FFFFFFF
	0x0338FB78 MOVZ W9, 0x7F800000
	0x0338FB7C CMP W8, W9
	0x0338FB80 CSET W0, EQ
	0x0338FB84 RET
	0x0338FB88 FMOV W8, S0
	0x0338FB8C AND W8, W8, 0x7FFFFFFF
	0x0338FB90 MOVZ W9, 0x7F800000
	0x0338FB94 CMP W8, W9
	0x0338FB98 CSET W0, HI
	0x0338FB9C RET
	0x0338FBA0 MOVZ W8, 0xFF800000
	0x0338FBA4 FMOV S1, W8
	0x0338FBA8 FCMP S0, S1
	0x0338FBAC CSET W0, EQ
	0x0338FBB0 RET
	0x0338FBB4 STP X30, X21, [X31 - 0x20]!
	0x0338FBB8 STP X20, X19, [X31 + 0x10]
	0x0338FBBC ADRP X21, 0x104E000
	0x0338FBC0 LDRB W8, [X21 + 0x36]
	0x0338FBC4 MOV X20, X1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x104F000
	007 Move X21, 0xD6C000
	008 Move W8, [X19+31]
	009 Move X21, [X21+744]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD6C000
	015 Move X0, [X0+744]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+31], W8
	019 Add X0, X31, 12
	020 Move W1, 4
	021 Move X2, X31
	022 Move [X31+12], W31
	023 Call Interop.GetRandomBytes, X0, X1
	024 Move X0, [X21]
	025 Move W19, [X31+12]
	026 Call 0x1C17F10
	027 Move W1, W19
	028 Move X20, X0
	029 Call Random..ctor, X0, X1
	030 Move X8, [X21]
	031 Move X30, [X31+16]
	032 Move X21, [X31+24]
	033 Move X8, [X8+184]
	034 Move [X8], X20
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Add X31, X31, 48
	038 Return 

