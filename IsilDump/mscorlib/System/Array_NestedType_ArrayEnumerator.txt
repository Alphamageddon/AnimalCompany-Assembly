Type: System.Array/ArrayEnumerator

Method: System.Void .ctor(System.Array array)

Disassembly:
	0x033A43FC LDR W8, [X22 + 0x18]
	0x033A4400 CMP W26, W8
	0x033A4404 B.CS 0x33A44BC
	0x033A4408 ADD X8, X22, X26, 0x3, LSL
	0x033A440C STR X24, [X8 + 0x20]
	0x033A4410 CMP W20, W29
	0x033A4414 MOV W24, W20
	0x033A4418 B.LE 0x33A4228
	0x033A441C B 0x33A4424
	0x033A4420 MOV W20, W24
	0x033A4424 LDR X22, [X19]
	0x033A4428 MOV W24, W20
	0x033A442C CBZ X22, 0x33A44C0
	0x033A4430 CBZ X21, 0x33A4448
	0x033A4434 LDR X8, [X22]
	0x033A4438 MOV X0, X21
	0x033A443C LDR X1, [X8 + 0x40]
	0x033A4440 BL 0x1C16E00

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Move TEMP, 0
	009 Not TEMP
	010 Move W8, TEMP
	011 Move [X19+16], X20
	012 Move [X19+24], W8
	013 Compare X20, 0
	014 JumpIfEqual {23}
	015 Move X0, X20
	016 Move X1, X31
	017 Call Array.get_Length, X0
	018 Move [X19+28], W0
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Return 
	023 Call 0x1C17F20

Method: System.Boolean MoveNext()

Disassembly:
	0x033A4444 CBZ X0, 0x33A44C4
	0x033A4448 LDR W9, [X22 + 0x18]
	0x033A444C ADD W8, W28, W24
	0x033A4450 CMP W8, W9
	0x033A4454 B.CS 0x33A44BC
	0x033A4458 SXTW X20, W8
	0x033A445C ADD X8, X22, X20, 0x3, LSL
	0x033A4460 STR X21, [X8 + 0x20]
	0x033A4464 LDR X19, [X19 + 0x8]
	0x033A4468 CBZ X19, 0x33A449C

ISIL:
	001 Move W9, [X0+24]
	002 Move W8, [X0+28]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Add W9, W9, 1
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move [X0+24], W9
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Return X0
	009 Move W0, W31
	010 Return X0

Method: System.Void Reset()

Disassembly:
	0x033A446C LDR X21, [X31]
	0x033A4470 CBZ X21, 0x33A4488
	0x033A4474 LDR X8, [X19]

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0+24], W8
	005 Return 

Method: System.Object Clone()

Disassembly:
	0x033A4478 MOV X0, X21
	0x033A447C LDR X1, [X8 + 0x40]

ISIL:
	001 Move X1, X31
	002 Call Object.MemberwiseClone, X0
	003 Return X0

Method: System.Object get_Current()

Disassembly:
	0x033A4480 BL 0x1C16E00
	0x033A4484 CBZ X0, 0x33A44C4
	0x033A4488 LDR W8, [X19 + 0x18]
	0x033A448C CMP W20, W8
	0x033A4490 B.CS 0x33A44BC
	0x033A4494 ADD X8, X19, X20, 0x3, LSL
	0x033A4498 STR X21, [X8 + 0x20]
	0x033A449C LDP X20, X19, [X31 + 0x60]
	0x033A44A0 LDP X22, X21, [X31 + 0x50]
	0x033A44A4 LDP X24, X23, [X31 + 0x40]
	0x033A44A8 LDP X26, X25, [X31 + 0x30]
	0x033A44AC LDP X28, X27, [X31 + 0x20]
	0x033A44B0 LDP X29, X30, [X31 + 0x10]
	0x033A44B4 ADD X31, X31, 0x70
	0x033A44B8 RET
	0x033A44BC BL 0x1C16F28
	0x033A44C0 BL 0x1C16F20
	0x033A44C4 BL 0x1C16F44
	0x033A44C8 MOV X1, X31
	0x033A44CC BL 0x1C16DEC
	0x033A44D0 STP X30, X23, [X31 - 0x30]!
	0x033A44D4 STP X22, X21, [X31 + 0x10]
	0x033A44D8 STP X20, X19, [X31 + 0x20]
	0x033A44DC ADRP X23, 0x1039000
	0x033A44E0 LDRB W8, [X23 + 0x144]
	0x033A44E4 MOV X22, X3
	0x033A44E8 MOV X19, X2
	0x033A44EC MOV X20, X1
	0x033A44F0 MOV X21, X0
	0x033A44F4 TBNZ X8, 0x0, 0x33A450C
	0x033A44F8 ADRP X0, 0xD78000
	0x033A44FC LDR X0, [X0 + 0xD30]
	0x033A4500 BL 0x1C16CF4
	0x033A4504 MOVZ W8, 0x1
	0x033A4508 STRB W8, [X23 + 0x144]
	0x033A450C CBNZ X22, 0x33A4534
	0x033A4510 ADRP X22, 0xD78000
	0x033A4514 LDR X22, [X22 + 0xD30]
	0x033A4518 LDR X0, [X22]
	0x033A451C LDR W8, [X0 + 0xE0]
	0x033A4520 CBNZ W8, 0x33A452C
	0x033A4524 BL 0x1C16DFC
	0x033A4528 LDR X0, [X22]
	0x033A452C LDR X8, [X0 + 0xB8]
	0x033A4530 LDR X22, [X8]
	0x033A4534 STP X20, X19, [X21]
	0x033A4538 STR X22, [X21 + 0x10]
	0x033A453C LDP X20, X19, [X31 + 0x20]
	0x033A4540 LDP X22, X21, [X31 + 0x10]
	0x033A4544 LDP X30, X23, [X31], #0x30
	0x033A4548 RET
	0x033A454C STR X30, [X31 - 0x40]!
	0x033A4550 STP X24, X23, [X31 + 0x10]
	0x033A4554 STP X22, X21, [X31 + 0x20]
	0x033A4558 STP X20, X19, [X31 + 0x30]
	0x033A455C ADRP X22, 0x1039000
	0x033A4560 LDRB W8, [X22 + 0x145]
	0x033A4564 MOV W19, W2
	0x033A4568 MOV W21, W1
	0x033A456C MOV X20, X0
	0x033A4570 TBNZ X8, 0x0, 0x33A4588
	0x033A4574 ADRP X0, 0xD79000
	0x033A4578 LDR X0, [X0 + 0x918]
	0x033A457C BL 0x1C16CF4
	0x033A4580 MOVZ W8, 0x1
	0x033A4584 STRB W8, [X22 + 0x145]
	0x033A4588 CMP W21, W19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+24]
	004 Move TEMP, X8
	005 And TEMP, TEMP, -2147483648
	006 Compare TEMP, -2147483648
	007 JumpIfEqual {42}
	008 Move W9, [X0+28]
	009 Move X19, X0
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Compare W8, 0
	012 JumpIfNotEqual {32}
	013 Move X0, [X19+16]
	014 Compare X0, 0
	015 JumpIfEqual {41}
	016 Move X1, X31
	017 Call "il2cpp_vm_object_is_inst", X0
	018 Compare X0, 0
	019 JumpIfEqual {41}
	020 Move X8, [X0]
	021 Move X9, [X8+1064]
	022 Move X1, [X8+1072]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Compare X0, 0
	025 JumpIfEqual {41}
	026 Move X1, X31
	027 Call Type.get_IsPointer, X0
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {67}
	032 Move X0, [X19+16]
	033 Compare X0, 0
	034 JumpIfEqual {41}
	035 Move W1, [X19+24]
	036 Move X2, X31
	037 Move X30, [X31+16]
	038 Move X19, [X31+24]
	039 Call Array.GetValueImpl, X0, X1
	040 Return X0
	041 Call 0x1C17F20
	042 Move X0, 0xD50000
	043 Move X0, [X0+1456]
	044 Call 0x1C17D08
	045 Call 0x1C17F10
	046 Move X19, X0
	047 Move X0, 0xD7B000
	048 Move X0, [X0+3144]
	049 Move X0, 0xD50000
	050 Move X0, [X0+1456]
	051 Call 0x1C17D08
	052 Call 0x1C17F10
	053 Move X19, X0
	054 Move X0, 0xD7B000
	055 Move X0, [X0+3136]
	056 Call 0x1C17D08
	057 Move X1, X0
	058 Move X0, X19
	059 Move X2, X31
	060 Call InvalidOperationException..ctor, X0, X1
	061 Move X0, 0xD88000
	062 Move X0, [X0+3016]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X19
	066 Call 0x1C17DEC
	067 Move X0, 0xD50000
	068 Move X0, [X0+2880]
	069 Call 0x1C17D08
	070 Call 0x1C17F10
	071 Move X19, X0
	072 Move X0, 0xD88000
	073 Move X0, [X0+1040]
	074 Call 0x1C17D08
	075 Move X1, X0
	076 Move X0, X19
	077 Move X2, X31
	078 Call NotSupportedException..ctor, X0, X1

