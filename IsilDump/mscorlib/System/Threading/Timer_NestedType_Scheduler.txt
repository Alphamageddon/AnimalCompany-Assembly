Type: System.Threading.Timer/Scheduler

Method: System.Void InitScheduler()

Disassembly:
	0x033ED318 LDRB W10, [X9 + 0x130]
	0x033ED31C CMP W11, W10
	0x033ED320 B.CC 0x33ED360
	0x033ED324 LDR X8, [X8 + 0xC8]
	0x033ED328 ADD X8, X8, X10, 0x3, LSL
	0x033ED32C LDUR X8, [X8 - 0x8]
	0x033ED330 CMP X8, X9
	0x033ED334 B.NE 0x33ED360
	0x033ED338 CBZ X19, 0x33ED360
	0x033ED33C ADD X0, X31, 0x8
	0x033ED340 MOV X1, X31
	0x033ED344 STR X19, [X31 + 0x8]
	0x033ED348 BL 0x32C3B4C
	0x033ED34C LDP X20, X19, [X31 + 0x10]
	0x033ED350 LDR X30, [X31], #0x20
	0x033ED354 RET
	0x033ED358 LDR X19, [X19 + 0x10]
	0x033ED35C CBNZ X19, 0x33ED33C
	0x033ED360 ADRP X0, 0xD0B000
	0x033ED364 LDR X0, [X0 + 0x528]
	0x033ED368 BL 0x1C16D08
	0x033ED36C BL 0x1C16F10
	0x033ED370 MOV X1, X31
	0x033ED374 MOV X19, X0
	0x033ED378 BL 0x3315F20
	0x033ED37C ADRP X0, 0xD40000
	0x033ED380 LDR X0, [X0 + 0x630]
	0x033ED384 BL 0x1C16D08
	0x033ED388 MOV X1, X0
	0x033ED38C MOV X0, X19
	0x033ED390 BL 0x1C16DEC
	0x033ED394 RET
	0x033ED398 MOV X1, X31
	0x033ED39C B 0x33BDD8C
	0x033ED3A0 SUB X31, X31, 0x20
	0x033ED3A4 STP X31, X30, [X31 + 0x8]
	0x033ED3A8 MOV X8, X0
	0x033ED3AC AND W2, W1, 0x1
	0x033ED3B0 ADD X0, X31, 0x0
	0x033ED3B4 MOV X1, X8
	0x033ED3B8 MOV X3, X31
	0x033ED3BC STR X31, [X31]
	0x033ED3C0 BL 0x32C40A0
	0x033ED3C4 LDP X0, X1, [X31]
	0x033ED3C8 LDR X30, [X31 + 0x10]
	0x033ED3CC ADD X31, X31, 0x20
	0x033ED3D0 RET
	0x033ED3D4 LDR X0, [X0 + 0x18]
	0x033ED3D8 RET
	0x033ED3DC LDRB W0, [X0 + 0x20]
	0x033ED3E0 RET
	0x033ED3E4 STR X30, [X31 - 0x10]!
	0x033ED3E8 LDR X0, [X0 + 0x10]
	0x033ED3EC CBZ X0, 0x33ED3F8
	0x033ED3F0 LDR X30, [X31], #0x10
	0x033ED3F4 B 0x33ED11C
	0x033ED3F8 BL 0x1C16F20
	0x033ED3FC STR X30, [X31 - 0x20]!
	0x033ED400 STP X20, X19, [X31 + 0x10]
	0x033ED404 ADRP X20, 0xFF0000
	0x033ED408 LDRB W8, [X20 + 0x42E]
	0x033ED40C MOV X19, X0
	0x033ED410 TBNZ X8, 0x0, 0x33ED428

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xFF1000
	009 Move X24, 0xD38000
	010 Move X23, 0xD33000
	011 Move X22, 0xD41000
	012 Move X21, 0xD33000
	013 Move W8, [X20+1053]
	014 Move X24, [X24+1992]
	015 Move X23, [X23+464]
	016 Move X22, [X22+1456]
	017 Move X21, [X21+472]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0xD38000
	024 Move X0, [X0+1992]
	025 Call 0x1C17CF4
	026 Move X0, 0xD41000
	027 Move X0, [X0+1456]
	028 Call 0x1C17CF4
	029 Move X0, 0xD33000
	030 Move X0, [X0+464]
	031 Call 0x1C17CF4
	032 Move X0, 0xD33000
	033 Move X0, [X0+472]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+1053], W8
	037 Move X0, [X24]
	038 Call 0x1C17F10
	039 Move W1, W31
	040 Move X2, X31
	041 Move X20, X0
	042 Call ManualResetEvent..ctor, X0, X1
	043 Move [X19+40], X20
	044 Move X0, [X23]
	045 Call 0x1C17F10
	046 Move X2, [X22]
	047 Move X1, X19
	048 Move X3, X31
	049 Move X20, X0
	050 Call ThreadStart..ctor, X0, X1, X2
	051 Move X0, [X21]
	052 Call 0x1C17F10
	053 Move X1, X20
	054 Move X2, X31
	055 Move X19, X0
	056 Call Thread..ctor, X0, X1
	057 Compare X19, 0
	058 JumpIfEqual {74}
	059 Move W1, 1
	060 Move X0, X19
	061 Move X2, X31
	062 Call Thread.set_IsBackground, X0, X1
	063 Move X0, X19
	064 Move X20, [X31+48]
	065 Move X19, [X31+56]
	066 Move X22, [X31+32]
	067 Move X21, [X31+40]
	068 Move X24, [X31+16]
	069 Move X23, [X31+24]
	070 Move X1, X31
	071 Move X30, [X31+64]
	072 Call Thread.Start, X0
	073 Return 
	074 Call 0x1C17F20

Method: System.Void WakeupScheduler()

Disassembly:
	0x033ED414 ADRP X0, 0xD2E000
	0x033ED418 LDR X0, [X0 + 0x718]
	0x033ED41C BL 0x1C16CF4
	0x033ED420 MOVZ W8, 0x1
	0x033ED424 STRB W8, [X20 + 0x42E]
	0x033ED428 LDR X19, [X19 + 0x10]
	0x033ED42C CBZ X19, 0x33ED49C

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call EventWaitHandle.Set, X0
	008 Return 
	009 Call 0x1C17F20

Method: System.Void SchedulerThread()

Disassembly:
	0x033ED430 ADRP X10, 0xD2E000
	0x033ED434 LDR X8, [X19]
	0x033ED438 LDR X10, [X10 + 0x718]
	0x033ED43C LDRH W9, [X8 + 0x12E]
	0x033ED440 LDR X1, [X10]
	0x033ED444 CBZ X9, 0x33ED468
	0x033ED448 LDR X10, [X8 + 0xB0]
	0x033ED44C ADD X10, X10, 0x8
	0x033ED450 LDUR X11, [X10 - 0x8]
	0x033ED454 CMP X11, X1
	0x033ED458 B.EQ 0x33ED478
	0x033ED45C SUBS X9, X9, 0x1
	0x033ED460 ADD X10, X10, 0x10
	0x033ED464 B.NE 0x33ED450
	0x033ED468 MOVZ W2, 0x1
	0x033ED46C MOV X0, X19
	0x033ED470 BL 0x1C5C788
	0x033ED474 B 0x33ED488
	0x033ED478 LDR W9, [X10]
	0x033ED47C ADD W9, W9, 0x1
	0x033ED480 ADD X8, X8, W9, 0x4, SXTW
	0x033ED484 ADD X0, X8, 0x138
	0x033ED488 LDP X2, X1, [X0]
	0x033ED48C MOV X0, X19
	0x033ED490 LDP X20, X19, [X31 + 0x10]
	0x033ED494 LDR X30, [X31], #0x20
	0x033ED498 BR X2
	0x033ED49C BL 0x1C16F20
	0x033ED4A0 STR X30, [X31 - 0x10]!
	0x033ED4A4 LDR X8, [X0 + 0x10]
	0x033ED4A8 CBZ X8, 0x33ED4C4
	0x033ED4AC LDR X1, [X0 + 0x18]
	0x033ED4B0 LDR X3, [X8 + 0x18]
	0x033ED4B4 LDR X0, [X8 + 0x40]
	0x033ED4B8 LDR X2, [X8 + 0x28]
	0x033ED4BC LDR X30, [X31], #0x10
	0x033ED4C0 BR X3
	0x033ED4C4 BL 0x1C16F20
	0x033ED4C8 STR X30, [X31 - 0x20]!
	0x033ED4CC STP X20, X19, [X31 + 0x10]
	0x033ED4D0 ADRP X20, 0xFF0000
	0x033ED4D4 ADRP X19, 0xD07000
	0x033ED4D8 LDRB W8, [X20 + 0x42F]
	0x033ED4DC LDR X19, [X19 + 0x7B8]
	0x033ED4E0 TBNZ X8, 0x0, 0x33ED4F8
	0x033ED4E4 ADRP X0, 0xD07000
	0x033ED4E8 LDR X0, [X0 + 0x7B8]
	0x033ED4EC BL 0x1C16CF4
	0x033ED4F0 MOVZ W8, 0x1
	0x033ED4F4 STRB W8, [X20 + 0x42F]
	0x033ED4F8 LDR X0, [X19]
	0x033ED4FC LDR W8, [X0 + 0xE0]
	0x033ED500 CBNZ W8, 0x33ED508
	0x033ED504 BL 0x1C16DFC
	0x033ED508 ADRP X20, 0xFEB000
	0x033ED50C LDRB W8, [X20 + 0xF1D]
	0x033ED510 CBNZ W8, 0x33ED528
	0x033ED514 ADRP X0, 0xD07000
	0x033ED518 LDR X0, [X0 + 0x7B8]
	0x033ED51C BL 0x1C16CF4
	0x033ED520 MOVZ W8, 0x1
	0x033ED524 STRB W8, [X20 + 0xF1D]
	0x033ED528 LDR X0, [X19]
	0x033ED52C LDR W8, [X0 + 0xE0]
	0x033ED530 CBNZ W8, 0x33ED53C
	0x033ED534 BL 0x1C16DFC
	0x033ED538 LDR X0, [X19]
	0x033ED53C LDR X8, [X0 + 0xB8]
	0x033ED540 LDP X20, X19, [X31 + 0x10]
	0x033ED544 LDR X0, [X8 + 0x30]
	0x033ED548 LDR X30, [X31], #0x20
	0x033ED54C RET
	0x033ED550 STR X30, [X31 - 0x20]!
	0x033ED554 STP X20, X19, [X31 + 0x10]
	0x033ED558 MOV X20, X1
	0x033ED55C MOV X19, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xFF1000
	007 Move W8, [X20+1054]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD41000
	014 Move X0, [X0+1464]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+1054], W8
	018 Move X0, X31
	019 Call Thread.get_CurrentThread
	020 Compare X0, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17F20
	023 Move X8, 0xD41000
	024 Move X8, [X8+1464]
	025 Move X2, X31
	026 Move X1, [X8]
	027 Call Thread.set_Name, X0, X1
	028 Move [X31+12], W31
	029 Add X1, X31, 12
	030 Move X0, X19
	031 Move X2, X31
	032 Call Monitor.Enter, X0, X1
	033 Move X0, [X19+40]
	034 Compare X0, 0
	035 JumpIfEqual {58}
	036 Move X1, X31
	037 Call EventWaitHandle.Reset, X0
	038 Move X0, X19
	039 Call Scheduler.RunSchedulerLoop, X0
	040 Move W21, W0
	041 Move X20, X31
	042 Move W8, [X31+12]
	043 Compare W8, 0
	044 JumpIfEqual {48}
	045 Move X0, X19
	046 Move X1, X31
	047 Call Monitor.Exit, X0
	048 Compare X20, 0
	049 JumpIfNotEqual {66}
	050 Move X0, [X19+40]
	051 Compare X0, 0
	052 JumpIfEqual {22}
	053 Move X8, [X0]
	054 Move W1, W21
	055 Move X9, [X8+488]
	056 Move X2, [X8+496]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Call 0x1C17F20
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Call 0x3EB2AD0
	061 Move X20, [X0]
	062 Call 0x3EB2AE0
	063 Move TEMP, 0
	064 Not TEMP
	065 Move W21, TEMP
	066 Move X0, X20
	067 Call 0x1C17F18
	068 Move X21, X0
	069 Move X20, X31
	070 Move X21, X0
	071 Move W8, [X31+12]
	072 Compare W8, 0
	073 JumpIfEqual {77}
	074 Move X0, X19
	075 Move X1, X31
	076 Call Monitor.Exit, X0
	077 Compare X20, 0
	078 JumpIfNotEqual {81}
	079 Move X0, X21
	080 Call 0x1D2D690
	081 Move X0, X20
	082 Call 0x1C17F18
	083 Call 0x1991590

Method: System.Threading.Timer/Scheduler get_Instance()

Disassembly:
	0x033ED874 LDUR X11, [X10 - 0x8]
	0x033ED878 CMP X11, X1
	0x033ED87C B.EQ 0x33ED8C0
	0x033ED880 SUBS X9, X9, 0x1
	0x033ED884 ADD X10, X10, 0x10
	0x033ED888 B.NE 0x33ED874
	0x033ED88C MOVZ W2, 0x2
	0x033ED890 MOV X0, X19
	0x033ED894 BL 0x1C5C788
	0x033ED898 B 0x33ED8D0
	0x033ED89C ADRP X8, 0xD40000
	0x033ED8A0 LDR X8, [X8 + 0x638]
	0x033ED8A4 LDR X0, [X8]
	0x033ED8A8 BL 0x1C16F10
	0x033ED8AC MOV X1, X19
	0x033ED8B0 MOV W2, W21
	0x033ED8B4 MOV X22, X0
	0x033ED8B8 BL 0x33EDB30
	0x033ED8BC B 0x33ED900
	0x033ED8C0 LDR W9, [X10]
	0x033ED8C4 ADD W9, W9, 0x2
	0x033ED8C8 ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFF1000
	005 Move X19, 0xD41000
	006 Move W8, [X20+1055]
	007 Move X19, [X19+1400]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD41000
	013 Move X0, [X0+1400]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1055], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void .ctor()

Disassembly:
	0x033ED8CC ADD X0, X8, 0x138
	0x033ED8D0 LDP X8, X2, [X0]
	0x033ED8D4 MOV X0, X19
	0x033ED8D8 MOV W1, W21
	0x033ED8DC BLR X8
	0x033ED8E0 ADRP X8, 0xD30000
	0x033ED8E4 LDR X8, [X8 + 0xE40]
	0x033ED8E8 LDR X0, [X8]
	0x033ED8EC LDR W8, [X0 + 0xE0]
	0x033ED8F0 CBNZ W8, 0x33ED8F8
	0x033ED8F4 BL 0x1C16DFC
	0x033ED8F8 BL 0x33ED4C8
	0x033ED8FC MOV X22, X0
	0x033ED900 MOV X0, X22
	0x033ED904 LDP X20, X19, [X31 + 0x20]
	0x033ED908 LDP X22, X21, [X31 + 0x10]
	0x033ED90C LDR X30, [X31], #0x30
	0x033ED910 RET
	0x033ED914 B 0x33ED918
	0x033ED918 MOV X19, X0
	0x033ED91C CMP W1, 0x1
	0x033ED920 B.NE 0x33EDA60
	0x033ED924 MOV X0, X19
	0x033ED928 BL 0x3EB1AD0
	0x033ED92C MOV X19, X0
	0x033ED930 ADRP X0, 0xD06000
	0x033ED934 LDR X0, [X0 + 0x7D0]
	0x033ED938 BL 0x1C16D08
	0x033ED93C LDR X8, [X19]
	0x033ED940 LDR X1, [X8]
	0x033ED944 BL 0x1C17270
	0x033ED948 TBZ X0, 0x0, 0x33EDA38
	0x033ED94C LDR X19, [X19]
	0x033ED950 BL 0x3EB1AE0
	0x033ED954 CMP W20, 0x3
	0x033ED958 B.NE 0x33ED9C4
	0x033ED95C ADRP X0, 0xD0E000
	0x033ED960 LDR X0, [X0 + 0x8A8]
	0x033ED964 BL 0x1C16D08

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFF1000
	007 Move X21, 0xD41000
	008 Move X20, 0xD41000
	009 Move W8, [X22+1056]
	010 Move X21, [X21+1520]
	011 Move X20, [X20+1528]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xD41000
	018 Move X0, [X0+1528]
	019 Call 0x1C17CF4
	020 Move X0, 0xD41000
	021 Move X0, [X0+1520]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+1056], W8
	025 Call 0x1C17D44
	026 Move W8, 1
	027 Move TEMP, 0x80000000
	028 Not TEMP
	029 Move X9, TEMP
	030 Move X0, X19
	031 Move X1, X31
	032 Move [X19+16], W8
	033 Move [X19+32], X9
	034 Call Object..ctor, X0
	035 Move X0, [X21]
	036 Call 0x1C17F10
	037 Move X2, [X20]
	038 Move W1, 1024
	039 Move X20, X0
	040 Call List`1<Object>..ctor, X0, X1
	041 Move [X19+24], X20
	042 Move X0, X19
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Call Scheduler.InitScheduler, X0
	049 Return 

Method: System.Void Remove(System.Threading.Timer timer)

Disassembly:
	0x033ECFB0 STP X22, X21, [X31 + 0x20]
	0x033ECFB4 STP X20, X19, [X31 + 0x30]
	0x033ECFB8 ADRP X24, 0xFF1000
	0x033ECFBC ADRP X23, 0xD07000
	0x033ECFC0 LDRB W8, [X24 + 0x42A]
	0x033ECFC4 LDR X23, [X23 + 0x7D0]
	0x033ECFC8 MOV X19, X3
	0x033ECFCC MOV X20, X2
	0x033ECFD0 MOV X21, X1
	0x033ECFD4 MOV X22, X0
	0x033ECFD8 TBNZ X8, 0x0, 0x33ECFF0
	0x033ECFDC ADRP X0, 0xD07000
	0x033ECFE0 LDR X0, [X0 + 0x7D0]
	0x033ECFE4 BL 0x1C16CF4
	0x033ECFE8 MOVZ W8, 0x1
	0x033ECFEC STRB W8, [X24 + 0x42A]
	0x033ECFF0 LDR X0, [X23]
	0x033ECFF4 LDR W8, [X0 + 0xE0]
	0x033ECFF8 CBNZ W8, 0x33ED000
	0x033ECFFC BL 0x1C16DFC
	0x033ED000 MOV X0, X22
	0x033ED004 MOV X1, X21
	0x033ED008 MOV X2, X20
	0x033ED00C MOV X3, X19
	0x033ED010 LDP X20, X19, [X31 + 0x30]
	0x033ED014 LDP X22, X21, [X31 + 0x20]
	0x033ED018 LDP X24, X23, [X31 + 0x10]
	0x033ED01C MOV X4, X31
	0x033ED020 LDR X30, [X31], #0x40
	0x033ED024 B 0x33B2CD8
	0x033ED028 STR X30, [X31 - 0x30]!
	0x033ED02C STP X22, X21, [X31 + 0x10]
	0x033ED030 STP X20, X19, [X31 + 0x20]
	0x033ED034 ADRP X22, 0xFF0000
	0x033ED038 LDRB W8, [X22 + 0x42B]
	0x033ED03C MOV X21, X2
	0x033ED040 MOV X19, X1
	0x033ED044 MOV X20, X0
	0x033ED048 TBNZ X8, 0x0, 0x33ED060
	0x033ED04C ADRP X0, 0xD2F000
	0x033ED050 LDR X0, [X0 + 0x788]
	0x033ED054 BL 0x1C16CF4
	0x033ED058 MOVZ W8, 0x1
	0x033ED05C STRB W8, [X22 + 0x42B]
	0x033ED060 CBZ X20, 0x33ED118
	0x033ED064 MOV X0, X20
	0x033ED068 BL 0x33ED11C
	0x033ED06C TBZ X0, 0x0, 0x33ED0B4
	0x033ED070 ADRP X8, 0xD2F000
	0x033ED074 LDR X8, [X8 + 0x788]
	0x033ED078 LDR X0, [X8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X1
	007 Move X19, X0
	008 Move [X31+12], W31
	009 Add X1, X31, 12
	010 Move X2, X31
	011 Call Monitor.Enter, X0, X1
	012 Compare X20, 0
	013 JumpIfEqual {35}
	014 Move W21, 1
	015 Move [X20+65], W21
	016 Call 0x1C17D44
	017 Move X20, X31
	018 Move [X19+16], W21
	019 Move W8, [X31+12]
	020 Compare W8, 0
	021 JumpIfEqual {25}
	022 Move X0, X19
	023 Move X1, X31
	024 Call Monitor.Exit, X0
	025 Compare X20, 0
	026 JumpIfNotEqual {33}
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X30, [X31+16]
	030 Move X21, [X31+24]
	031 Add X31, X31, 48
	032 Return 
	033 Move X0, X20
	034 Call 0x1C17F18
	035 Call 0x1C17F20
	036 Move X21, X0
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, X21
	039 Call 0x3EB2AD0
	040 Move X20, [X0]
	041 Call 0x3EB2AE0
	042 Move X20, X31
	043 Move X21, X0
	044 Move W8, [X31+12]
	045 Compare W8, 0
	046 JumpIfEqual {50}
	047 Move X0, X19
	048 Move X1, X31
	049 Call Monitor.Exit, X0
	050 Compare X20, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X21
	053 Call 0x1D2D690
	054 Move X0, X20
	055 Call 0x1C17F18
	056 Call 0x1991590

Method: System.Void Change(System.Threading.Timer timer, System.Int64 new_next_run)

Disassembly:
	0x033ED080 MOV X1, X31
	0x033ED084 MOV X22, X0
	0x033ED088 BL 0x33BDD8C
	0x033ED08C MOVZ W8, 0x1
	0x033ED090 STP X20, X21, [X22 + 0x10]
	0x033ED094 STRB W8, [X22 + 0x20]
	0x033ED098 CBZ X19, 0x33ED0F8
	0x033ED09C LDR X8, [X19 + 0x18]
	0x033ED0A0 LDR X0, [X19 + 0x40]
	0x033ED0A4 LDR X2, [X19 + 0x28]
	0x033ED0A8 MOV X1, X22
	0x033ED0AC BLR X8
	0x033ED0B0 B 0x33ED0F8
	0x033ED0B4 LDR X8, [X20 + 0x20]
	0x033ED0B8 CMP X8, X21
	0x033ED0BC B.EQ 0x33ED10C
	0x033ED0C0 ADRP X8, 0xD2F000
	0x033ED0C4 LDR X8, [X8 + 0x788]
	0x033ED0C8 LDR X0, [X8]
	0x033ED0CC BL 0x1C16F10
	0x033ED0D0 MOV X1, X31
	0x033ED0D4 MOV X22, X0
	0x033ED0D8 BL 0x33BDD8C
	0x033ED0DC STP X20, X21, [X22 + 0x10]
	0x033ED0E0 STRB W31, [X22 + 0x20]
	0x033ED0E4 CBZ X19, 0x33ED0F8
	0x033ED0E8 MOV X0, X20
	0x033ED0EC MOV X1, X19
	0x033ED0F0 MOV X2, X22
	0x033ED0F4 BL 0x33ED1BC
	0x033ED0F8 MOV X0, X22
	0x033ED0FC LDP X20, X19, [X31 + 0x20]
	0x033ED100 LDP X22, X21, [X31 + 0x10]
	0x033ED104 LDR X30, [X31], #0x30
	0x033ED108 RET
	0x033ED10C MOV X22, X20
	0x033ED110 CBNZ X19, 0x33ED0E8
	0x033ED114 B 0x33ED0F8
	0x033ED118 BL 0x1C16F20
	0x033ED11C STP X30, X21, [X31 - 0x20]!
	0x033ED120 STP X20, X19, [X31 + 0x10]
	0x033ED124 ADRP X21, 0xFF0000
	0x033ED128 ADRP X20, 0xD07000
	0x033ED12C LDRB W8, [X21 + 0x450]
	0x033ED130 LDR X20, [X20 + 0x7B8]
	0x033ED134 MOV X19, X0
	0x033ED138 TBNZ X8, 0x0, 0x33ED150
	0x033ED13C ADRP X0, 0xD07000
	0x033ED140 LDR X0, [X0 + 0x7B8]
	0x033ED144 BL 0x1C16CF4
	0x033ED148 MOVZ W8, 0x1
	0x033ED14C STRB W8, [X21 + 0x450]
	0x033ED150 LDR W19, [X19 + 0x38]
	0x033ED154 BL 0x1C16D44
	0x033ED158 LDR X0, [X20]
	0x033ED15C LDR W8, [X0 + 0xE0]
	0x033ED160 CBNZ W8, 0x33ED168
	0x033ED164 BL 0x1C16DFC
	0x033ED168 MOVZ W8, 0x1600000
	0x033ED16C ANDS W31, W19, W8, 0x0
	0x033ED170 LDP X20, X19, [X31 + 0x10]
	0x033ED174 CSET W0, NE
	0x033ED178 LDP X30, X21, [X31], #0x20
	0x033ED17C RET
	0x033ED180 STR X30, [X31 - 0x30]!
	0x033ED184 STP X22, X21, [X31 + 0x10]
	0x033ED188 STP X20, X19, [X31 + 0x20]
	0x033ED18C MOV X20, X1
	0x033ED190 MOV X1, X31
	0x033ED194 MOV X19, X2
	0x033ED198 MOV X21, X0
	0x033ED19C AND W22, W3, 0x1
	0x033ED1A0 BL 0x33BDD8C
	0x033ED1A4 STP X20, X19, [X21 + 0x10]
	0x033ED1A8 STRB W22, [X21 + 0x20]
	0x033ED1AC LDP X20, X19, [X31 + 0x20]
	0x033ED1B0 LDP X22, X21, [X31 + 0x10]
	0x033ED1B4 LDR X30, [X31], #0x30
	0x033ED1B8 RET
	0x033ED1BC SUB X31, X31, 0x50
	0x033ED1C0 STP X30, X23, [X31 + 0x20]
	0x033ED1C4 STP X22, X21, [X31 + 0x30]
	0x033ED1C8 STP X20, X19, [X31 + 0x40]
	0x033ED1CC ADRP X23, 0xFF0000
	0x033ED1D0 ADRP X22, 0xD40000
	0x033ED1D4 LDRB W8, [X23 + 0x42D]
	0x033ED1D8 LDR X22, [X22 + 0x620]
	0x033ED1DC MOV X20, X2
	0x033ED1E0 MOV X21, X1
	0x033ED1E4 MOV X19, X0
	0x033ED1E8 TBNZ X8, 0x0, 0x33ED218
	0x033ED1EC ADRP X0, 0xD07000
	0x033ED1F0 LDR X0, [X0 + 0xE70]
	0x033ED1F4 BL 0x1C16CF4
	0x033ED1F8 ADRP X0, 0xD40000
	0x033ED1FC LDR X0, [X0 + 0x628]
	0x033ED200 BL 0x1C16CF4
	0x033ED204 ADRP X0, 0xD40000
	0x033ED208 LDR X0, [X0 + 0x620]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Compare X1, 0
	009 JumpIfEqual {84}
	010 Move W8, [X1+65]
	011 Move X21, X2
	012 Move X22, X1
	013 Move X19, X0
	014 Compare W8, 0
	015 JumpIfEqual {17}
	016 Move [X22+65], W31
	017 Move [X31+12], W31
	018 Add X1, X31, 12
	019 Move X0, X19
	020 Move X2, X31
	021 Call Monitor.Enter, X0, X1
	022 Call 0x1C17D44
	023 Move W8, 1
	024 Move [X19+16], W8
	025 Move W8, [X22+66]
	026 Compare W8, 0
	027 JumpIfEqual {40}
	028 Move TEMP, 0x80000000
	029 Not TEMP
	030 Move X8, TEMP
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W23, 1
	033 Move [X22+56], X8
	034 Move [X22+65], W23
	035 Call 0x1C17D44
	036 Move X20, X31
	037 Move W21, W31
	038 Move [X19+16], W23
	039 Move W22, 6
	040 Move [X22+56], X21
	041 Move X0, X19
	042 Move X1, X22
	043 Call Scheduler.Add, X0, X1
	044 Move X20, X31
	045 Move W8, [X22+64]
	046 Compare W8, 0
	047 JumpIfEqual {51}
	048 Move X20, X31
	049 Move W21, W31
	050 Move W22, 4
	051 Move X20, X31
	052 Move [X22+56], X21
	053 Move X8, [X19+32]
	054 Move W22, 4
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CSET not yet implemented."
	057 Move W8, [X31+12]
	058 Compare W8, 0
	059 JumpIfEqual {63}
	060 Move X0, X19
	061 Move X1, X31
	062 Call Monitor.Exit, X0
	063 Compare X20, 0
	064 JumpIfNotEqual {85}
	065 Or W8, W22, 4
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move TEMP, X21
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {76}
	071 Move X0, [X19+40]
	072 Compare X0, 0
	073 JumpIfEqual {84}
	074 Move X1, X31
	075 Call EventWaitHandle.Set, X0
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X22, [X31+32]
	079 Move X21, [X31+40]
	080 Move X30, [X31+16]
	081 Move X23, [X31+24]
	082 Add X31, X31, 64
	083 Return 
	084 Call 0x1C17F20
	085 Move X0, X20
	086 Call 0x1C17F18
	087 Move X21, X0
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X0, X21
	090 Call 0x3EB2AD0
	091 Move X20, [X0]
	092 Call 0x3EB2AE0
	093 Move W22, W31
	094 Move W21, W31
	095 Move X20, X31
	096 Move X21, X0
	097 Move W8, [X31+12]
	098 Compare W8, 0
	099 JumpIfEqual {103}
	100 Move X0, X19
	101 Move X1, X31
	102 Call Monitor.Exit, X0
	103 Compare X20, 0
	104 JumpIfNotEqual {107}
	105 Move X0, X21
	106 Call 0x1D2D690
	107 Move X0, X20
	108 Call 0x1C17F18
	109 Call 0x1991590

Method: System.Void Add(System.Threading.Timer timer)

Disassembly:
	0x033ED998 LDR X0, [X0 + 0xE40]
	0x033ED99C BL 0x1C16D08
	0x033ED9A0 LDR W8, [X0 + 0xE0]
	0x033ED9A4 CBNZ W8, 0x33ED9AC
	0x033ED9A8 BL 0x1C16DFC
	0x033ED9AC ADRP X0, 0xD30000
	0x033ED9B0 LDR X0, [X0 + 0xE40]
	0x033ED9B4 BL 0x1C16D08
	0x033ED9B8 LDR X8, [X0 + 0xB8]
	0x033ED9BC LDR X22, [X8]
	0x033ED9C0 B 0x33ED900
	0x033ED9C4 ADRP X0, 0xD07000
	0x033ED9C8 LDR X0, [X0 + 0x7B8]
	0x033ED9CC BL 0x1C16D08
	0x033ED9D0 LDR W8, [X0 + 0xE0]
	0x033ED9D4 CBNZ W8, 0x33ED9DC
	0x033ED9D8 BL 0x1C16DFC
	0x033ED9DC MOV X0, X19
	0x033ED9E0 LDP X20, X19, [X31 + 0x20]
	0x033ED9E4 LDP X22, X21, [X31 + 0x10]
	0x033ED9E8 LDR X30, [X31], #0x30
	0x033ED9EC B 0x33EDAC4
	0x033ED9F0 ADRP X0, 0xD40000
	0x033ED9F4 LDR X0, [X0 + 0x640]
	0x033ED9F8 BL 0x1C16D08
	0x033ED9FC BL 0x1C16F10
	0x033EDA00 MOV X22, X0
	0x033EDA04 ADRP X0, 0xD40000
	0x033EDA08 LDR X0, [X0 + 0x648]
	0x033EDA0C BL 0x1C16D08
	0x033EDA10 MOV X1, X0
	0x033EDA14 MOV X0, X22
	0x033EDA18 BL 0x26A3D50
	0x033EDA1C CBZ X22, 0x33EDA34
	0x033EDA20 LDR X1, [X19 + 0x90]
	0x033EDA24 MOV X0, X22
	0x033EDA28 MOV X2, X19
	0x033EDA2C BL 0x33EDA6C
	0x033EDA30 B 0x33ED900
	0x033EDA34 BL 0x1C16F20
	0x033EDA38 MOVZ W0, 0x8
	0x033EDA3C BL 0x3EB1AF0
	0x033EDA40 LDR X8, [X19]
	0x033EDA44 STR X8, [X0]
	0x033EDA48 ADRP X1, 0xAC7000
	0x033EDA4C ADD X1, X1, 0xE58
	0x033EDA50 MOV X2, X31
	0x033EDA54 BL 0x3EB1B00
	0x033EDA58 MOV X19, X0
	0x033EDA5C BL 0x3EB1AE0
	0x033EDA60 MOV X0, X19
	0x033EDA64 BL 0x1D2C690
	0x033EDA68 BL 0x1990590
	0x033EDA6C STR X30, [X31 - 0x30]!
	0x033EDA70 STP X22, X21, [X31 + 0x10]
	0x033EDA74 STP X20, X19, [X31 + 0x20]
	0x033EDA78 MOV X20, X2
	0x033EDA7C MOV X21, X1
	0x033EDA80 MOVZ W1, 0x4000000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xFF1000
	006 Move W8, [X21+1057]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xD41000
	014 Move X0, [X0+1536]
	015 Call 0x1C17CF4
	016 Move X0, 0xD41000
	017 Move X0, [X0+1488]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1057], W8
	021 Compare X20, 0
	022 JumpIfEqual {71}
	023 Move W21, 1
	024 Move [X20+66], W21
	025 Call 0x1C17D44
	026 Move X0, [X19+24]
	027 Move [X19+16], W21
	028 Compare X0, 0
	029 JumpIfEqual {71}
	030 Move X9, 0xD41000
	031 Move X9, [X9+1536]
	032 Move W10, [X0+28]
	033 Move X8, [X0+16]
	034 Move X9, [X9]
	035 Add W10, W10, 1
	036 Move [X0+28], W10
	037 Compare X8, 0
	038 JumpIfEqual {71}
	039 NotImplemented "Instruction LDRSW not yet implemented."
	040 Move W11, [X8+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Add W9, W10, 1
	043 Add X8, X8, X10
	044 Move [X0+24], W9
	045 Move [X8+32], X20
	046 Move X8, [X9+32]
	047 Move X1, X20
	048 Move X8, [X8+192]
	049 Move X2, [X8+112]
	050 Call List`1<Object>.AddWithResize, X0, X1
	051 Move X8, [X19+24]
	052 Compare X8, 0
	053 JumpIfEqual {71}
	054 Move W8, [X8+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X0, [X19+40]
	057 Compare X0, 0
	058 JumpIfEqual {71}
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X1, X31
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Call EventWaitHandle.Set, X0
	065 Return 
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Move X21, [X31+40]
	070 Return 
	071 Call 0x1C17F20

Method: System.Void InternalRemove(System.Threading.Timer timer)

Disassembly:
	0x033ED968 CBZ X19, 0x33ED994
	0x033ED96C LDR X8, [X19]
	0x033ED970 LDRB W9, [X0 + 0x130]
	0x033ED974 LDRB W10, [X8 + 0x130]
	0x033ED978 CMP W10, W9
	0x033ED97C B.CC 0x33ED994
	0x033ED980 LDR X8, [X8 + 0xC8]
	0x033ED984 ADD X8, X8, X9, 0x3, LSL
	0x033ED988 LDUR X8, [X8 - 0x8]
	0x033ED98C CMP X8, X0
	0x033ED990 B.EQ 0x33ED9F0
	0x033ED994 ADRP X0, 0xD30000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {15}
	006 Move W20, 1
	007 Move X19, X0
	008 Move [X1+65], W20
	009 Call 0x1C17D44
	010 Move [X19+16], W20
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X30, [X31+32]
	014 Return 
	015 Call 0x1C17F20

Method: System.Void TimerCB(System.Object o)

Disassembly:
	0x033EDA84 MOVZ W2, 0x5600000
	0x033EDA88 MOV X19, X0
	0x033EDA8C BL 0x33EF944
	0x033EDA90 MOV W22, W0
	0x033EDA94 TBZ X0, 0x0, 0x33EDAB0
	0x033EDA98 MOV X0, X19
	0x033EDA9C MOV X1, X21
	0x033EDAA0 MOV X2, X20
	0x033EDAA4 BL 0x33EFA04
	0x033EDAA8 MOV X0, X19
	0x033EDAAC BL 0x33EFA40
	0x033EDAB0 AND W0, W22, 0x1
	0x033EDAB4 LDP X20, X19, [X31 + 0x20]
	0x033EDAB8 LDP X22, X21, [X31 + 0x10]
	0x033EDABC LDR X30, [X31], #0x30
	0x033EDAC0 RET
	0x033EDAC4 STP X30, X21, [X31 - 0x20]!
	0x033EDAC8 STP X20, X19, [X31 + 0x10]
	0x033EDACC ADRP X21, 0xFF0000
	0x033EDAD0 ADRP X20, 0xD07000
	0x033EDAD4 LDRB W8, [X21 + 0x474]
	0x033EDAD8 LDR X20, [X20 + 0x7B8]
	0x033EDADC MOV X19, X0
	0x033EDAE0 TBNZ X8, 0x0, 0x33EDB04
	0x033EDAE4 ADRP X0, 0xD40000
	0x033EDAE8 LDR X0, [X0 + 0x650]
	0x033EDAEC BL 0x1C16CF4
	0x033EDAF0 ADRP X0, 0xD07000
	0x033EDAF4 LDR X0, [X0 + 0x7B8]
	0x033EDAF8 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFF1000
	005 Move W8, [X20+1058]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD0F000
	012 Move X0, [X0+3200]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1058], W8
	016 Compare X19, 0
	017 JumpIfEqual {34}
	018 Move X8, 0xD0F000
	019 Move X8, [X8+3200]
	020 Move X1, [X8]
	021 Move X8, [X19]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, [X19+24]
	024 Compare X8, 0
	025 JumpIfEqual {34}
	026 Move X1, [X19+32]
	027 Move X3, [X8+24]
	028 Move X0, [X8+64]
	029 Move X2, [X8+40]
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 CallNoReturn X3
	034 Call 0x1C17F20
	035 Move X0, X19
	036 Call 0x1C181E0

Method: System.Void FireTimer(System.Threading.Timer timer)

Disassembly:
	0x033EDAFC MOVZ W8, 0x1
	0x033EDB00 STRB W8, [X21 + 0x474]
	0x033EDB04 LDR X0, [X20]
	0x033EDB08 ADRP X20, 0xD40000
	0x033EDB0C LDR W8, [X0 + 0xE0]
	0x033EDB10 LDR X20, [X20 + 0x650]
	0x033EDB14 CBNZ W8, 0x33EDB1C
	0x033EDB18 BL 0x1C16DFC
	0x033EDB1C LDR X1, [X20]
	0x033EDB20 MOV X0, X19
	0x033EDB24 LDP X20, X19, [X31 + 0x10]
	0x033EDB28 LDP X30, X21, [X31], #0x20
	0x033EDB2C B 0x2299F5C
	0x033EDB30 STR X30, [X31 - 0x40]!
	0x033EDB34 STP X24, X23, [X31 + 0x10]
	0x033EDB38 STP X22, X21, [X31 + 0x20]
	0x033EDB3C STP X20, X19, [X31 + 0x30]
	0x033EDB40 ADRP X23, 0xFF0000
	0x033EDB44 ADRP X24, 0xD40000
	0x033EDB48 ADRP X22, 0xD40000
	0x033EDB4C LDRB W8, [X23 + 0x437]
	0x033EDB50 LDR X24, [X24 + 0x648]
	0x033EDB54 LDR X22, [X22 + 0x638]
	0x033EDB58 MOV W19, W2
	0x033EDB5C MOV X21, X1
	0x033EDB60 MOV X20, X0
	0x033EDB64 TBNZ X8, 0x0, 0x33EDB94
	0x033EDB68 ADRP X0, 0xD35000
	0x033EDB6C LDR X0, [X0 + 0xEA8]
	0x033EDB70 BL 0x1C16CF4
	0x033EDB74 ADRP X0, 0xD40000
	0x033EDB78 LDR X0, [X0 + 0x648]
	0x033EDB7C BL 0x1C16CF4
	0x033EDB80 ADRP X0, 0xD40000
	0x033EDB84 LDR X0, [X0 + 0x638]
	0x033EDB88 BL 0x1C16CF4
	0x033EDB8C MOVZ W8, 0x1
	0x033EDB90 STRB W8, [X23 + 0x437]
	0x033EDB94 LDR X1, [X24]
	0x033EDB98 MOV X0, X20
	0x033EDB9C BL 0x26A3D50
	0x033EDBA0 STRH W19, [X20 + 0x60]
	0x033EDBA4 STR X21, [X20 + 0x58]
	0x033EDBA8 LDR X0, [X22]
	0x033EDBAC LDR W8, [X0 + 0xE0]
	0x033EDBB0 CBNZ W8, 0x33EDBBC
	0x033EDBB4 BL 0x1C16DFC
	0x033EDBB8 LDR X0, [X22]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xFF1000
	006 Move W8, [X20+1059]
	007 Move X19, X1
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xD41000
	013 Move X0, [X0+1544]
	014 Call 0x1C17CF4
	015 Move X0, 0xD10000
	016 Move X0, [X0+2392]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1059], W8
	020 Compare X19, 0
	021 JumpIfEqual {57}
	022 Move X8, [X19+48]
	023 Move X21, 0xD10000
	024 Move X20, 0xD41000
	025 Move X21, [X21+2392]
	026 Move X20, [X20+1544]
	027 Add X31, X8, 1
	028 Compare X8, 0
	029 JumpIfNotEqual {36}
	030 Move X8, [X19+40]
	031 Add X31, X8, 1
	032 Move W8, 1
	033 Move TEMP, 0x80000000
	034 Not TEMP
	035 Move X9, TEMP
	036 Call 0x1C4D53C
	037 Move X9, [X19+48]
	038 Move W10, 0x2710
	039 Move W8, W31
	040 NotImplemented "Instruction MADD not yet implemented."
	041 Move [X19+56], X9
	042 Move [X19+65], W8
	043 Move X0, [X21]
	044 Call 0x1C17F10
	045 Move X2, [X20]
	046 Move X1, X31
	047 Move X20, X0
	048 Call WaitCallback..ctor, X0, X1, X2
	049 Move X0, X20
	050 Move X1, X19
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Call ThreadPool.UnsafeQueueUserWorkItem, X0, X1
	056 Return 
	057 Call 0x1C17F20

Method: System.Int32 RunSchedulerLoop()

Disassembly:
	0x033ED560 CBNZ X1, 0x33ED56C
	0x033ED564 MOVZ W0, 0x26
	0x033ED568 BL 0x338F3E0
	0x033ED56C MOVZ W8, 0x1
	0x033ED570 STR X20, [X19]
	0x033ED574 STRB W8, [X19 + 0xA]
	0x033ED578 STRH W31, [X19 + 0x8]
	0x033ED57C LDP X20, X19, [X31 + 0x10]
	0x033ED580 LDR X30, [X31], #0x20
	0x033ED584 RET
	0x033ED588 STP X30, X21, [X31 - 0x20]!
	0x033ED58C STP X20, X19, [X31 + 0x10]
	0x033ED590 MOV W20, W2
	0x033ED594 MOV X21, X1
	0x033ED598 MOV X19, X0
	0x033ED59C CBNZ X1, 0x33ED5A8
	0x033ED5A0 MOVZ W0, 0x27
	0x033ED5A4 BL 0x338F3E0
	0x033ED5A8 MOVZ W8, 0x1
	0x033ED5AC STR X21, [X19]
	0x033ED5B0 STRH W20, [X19 + 0x8]
	0x033ED5B4 STRB W8, [X19 + 0xA]
	0x033ED5B8 LDP X20, X19, [X31 + 0x10]
	0x033ED5BC LDP X30, X21, [X31], #0x20
	0x033ED5C0 RET
	0x033ED5C4 AND W8, W3, 0x1
	0x033ED5C8 STR X1, [X0]
	0x033ED5CC STRH W2, [X0 + 0x8]
	0x033ED5D0 STRB W8, [X0 + 0xA]
	0x033ED5D4 RET
	0x033ED5D8 LDR X0, [X0]
	0x033ED5DC CBZ X0, 0x33ED5EC
	0x033ED5E0 LDR X8, [X0]
	0x033ED5E4 LDP X2, X1, [X8 + 0x158]
	0x033ED5E8 BR X2
	0x033ED5EC RET
	0x033ED5F0 STP X30, X21, [X31 - 0x20]!
	0x033ED5F4 STP X20, X19, [X31 + 0x10]
	0x033ED5F8 ADRP X21, 0xFF0000
	0x033ED5FC LDRB W8, [X21 + 0x430]
	0x033ED600 MOV X20, X1
	0x033ED604 MOV X19, X0
	0x033ED608 TBNZ X8, 0x0, 0x33ED620
	0x033ED60C ADRP X0, 0xD30000
	0x033ED610 LDR X0, [X0 + 0xE40]
	0x033ED614 BL 0x1C16CF4
	0x033ED618 MOVZ W8, 0x1
	0x033ED61C STRB W8, [X21 + 0x430]
	0x033ED620 CBZ X20, 0x33ED680
	0x033ED624 ADRP X21, 0xD30000
	0x033ED628 LDR X21, [X21 + 0xE40]
	0x033ED62C LDR X8, [X20]
	0x033ED630 LDR X0, [X21]
	0x033ED634 CMP X8, X0
	0x033ED638 B.NE 0x33ED680
	0x033ED63C LDR W8, [X0 + 0xE0]
	0x033ED640 CBZ W8, 0x33ED64C
	0x033ED644 MOV X1, X0
	0x033ED648 B 0x33ED658
	0x033ED64C BL 0x1C16DFC
	0x033ED650 LDR X1, [X21]
	0x033ED654 LDR X0, [X20]
	0x033ED658 LDR X8, [X0 + 0x40]
	0x033ED65C LDR X9, [X1 + 0x40]
	0x033ED660 MOV X0, X20
	0x033ED664 CMP X8, X9
	0x033ED668 B.NE 0x33ED6A4
	0x033ED66C BL 0x1C16E08
	0x033ED670 LDR X8, [X0]
	0x033ED674 LDR X9, [X19]
	0x033ED678 CMP X9, X8
	0x033ED67C B.EQ 0x33ED690
	0x033ED680 MOV W0, W31
	0x033ED684 LDP X20, X19, [X31 + 0x10]
	0x033ED688 LDP X30, X21, [X31], #0x20
	0x033ED68C RET
	0x033ED690 LDRSH W8, [X0 + 0x8]
	0x033ED694 LDRSH W9, [X19 + 0x8]
	0x033ED698 CMP W8, W9
	0x033ED69C CSET W0, EQ
	0x033ED6A0 B 0x33ED684
	0x033ED6A4 BL 0x1C171E0
	0x033ED6A8 LDR X8, [X0]
	0x033ED6AC CMP X8, X1
	0x033ED6B0 B.EQ 0x33ED6BC
	0x033ED6B4 MOV W0, W31
	0x033ED6B8 RET
	0x033ED6BC LDRSH W8, [X0 + 0x8]
	0x033ED6C0 CMP W8, W2, SXTH
	0x033ED6C4 CSET W0, EQ
	0x033ED6C8 RET
	0x033ED6CC STR X30, [X31 - 0x20]!
	0x033ED6D0 STP X20, X19, [X31 + 0x10]
	0x033ED6D4 ADRP X20, 0xFF0000
	0x033ED6D8 LDRB W8, [X20 + 0x431]
	0x033ED6DC MOV X19, X0
	0x033ED6E0 TBNZ X8, 0x0, 0x33ED704
	0x033ED6E4 ADRP X0, 0xD07000
	0x033ED6E8 LDR X0, [X0 + 0x7B8]
	0x033ED6EC BL 0x1C16CF4
	0x033ED6F0 ADRP X0, 0xD30000
	0x033ED6F4 LDR X0, [X0 + 0xE40]
	0x033ED6F8 BL 0x1C16CF4
	0x033ED6FC MOVZ W8, 0x1
	0x033ED700 STRB W8, [X20 + 0x431]
	0x033ED704 ADRP X8, 0xD30000
	0x033ED708 LDR X20, [X19]
	0x033ED70C LDR X8, [X8 + 0xE40]
	0x033ED710 CBZ X20, 0x33ED76C
	0x033ED714 ADRP X9, 0xD07000
	0x033ED718 LDR X9, [X9 + 0x7B8]
	0x033ED71C LDR X10, [X20]
	0x033ED720 LDR X9, [X9]
	0x033ED724 LDRB W12, [X10 + 0x130]
	0x033ED728 LDRB W11, [X9 + 0x130]
	0x033ED72C CMP W12, W11
	0x033ED730 B.CC 0x33ED748
	0x033ED734 LDR X10, [X10 + 0xC8]
	0x033ED738 ADD X10, X10, X11, 0x3, LSL
	0x033ED73C LDUR X10, [X10 - 0x8]
	0x033ED740 CMP X10, X9
	0x033ED744 B.EQ 0x33ED788
	0x033ED748 LDR X0, [X8]
	0x033ED74C LDR W8, [X0 + 0xE0]
	0x033ED750 CBNZ W8, 0x33ED758
	0x033ED754 BL 0x1C16DFC
	0x033ED758 MOV X0, X19
	0x033ED75C MOV X1, X20
	0x033ED760 LDP X20, X19, [X31 + 0x10]
	0x033ED764 LDR X30, [X31], #0x20
	0x033ED768 B 0x33ED798
	0x033ED76C LDR X0, [X8]
	0x033ED770 LDR W8, [X0 + 0xE0]
	0x033ED774 CBNZ W8, 0x33ED77C
	0x033ED778 BL 0x1C16DFC
	0x033ED77C LDP X20, X19, [X31 + 0x10]
	0x033ED780 LDR X30, [X31], #0x20
	0x033ED784 B 0x33ED4C8
	0x033ED788 MOV X0, X20
	0x033ED78C LDP X20, X19, [X31 + 0x10]
	0x033ED790 LDR X30, [X31], #0x20
	0x033ED794 RET
	0x033ED798 STR X30, [X31 - 0x30]!
	0x033ED79C STP X22, X21, [X31 + 0x10]
	0x033ED7A0 STP X20, X19, [X31 + 0x20]
	0x033ED7A4 ADRP X21, 0xFF0000
	0x033ED7A8 LDRB W8, [X21 + 0x432]
	0x033ED7AC MOV X19, X1
	0x033ED7B0 MOV X20, X0
	0x033ED7B4 TBNZ X8, 0x0, 0x33ED7E4
	0x033ED7B8 ADRP X0, 0xD35000
	0x033ED7BC LDR X0, [X0 + 0xEA8]
	0x033ED7C0 BL 0x1C16CF4
	0x033ED7C4 ADRP X0, 0xD40000
	0x033ED7C8 LDR X0, [X0 + 0x638]
	0x033ED7CC BL 0x1C16CF4
	0x033ED7D0 ADRP X0, 0xD30000
	0x033ED7D4 LDR X0, [X0 + 0xE40]
	0x033ED7D8 BL 0x1C16CF4
	0x033ED7DC MOVZ W8, 0x1
	0x033ED7E0 STRB W8, [X21 + 0x432]
	0x033ED7E4 CBZ X19, 0x33EDA34
	0x033ED7E8 ADRP X22, 0xD35000
	0x033ED7EC LDR X8, [X19]
	0x033ED7F0 LDR X22, [X22 + 0xEA8]
	0x033ED7F4 LDRH W21, [X20 + 0x8]
	0x033ED7F8 LDRH W9, [X8 + 0x12E]
	0x033ED7FC LDR X1, [X22]
	0x033ED800 CBZ X9, 0x33ED824
	0x033ED804 LDR X10, [X8 + 0xB0]
	0x033ED808 ADD X10, X10, 0x8
	0x033ED80C LDUR X11, [X10 - 0x8]
	0x033ED810 CMP X11, X1
	0x033ED814 B.EQ 0x33ED834
	0x033ED818 SUBS X9, X9, 0x1
	0x033ED81C ADD X10, X10, 0x10
	0x033ED820 B.NE 0x33ED80C
	0x033ED824 MOV X0, X19
	0x033ED828 MOV W2, W31
	0x033ED82C BL 0x1C5C788
	0x033ED830 B 0x33ED840
	0x033ED834 LDRSW X9, [X10]
	0x033ED838 ADD X8, X8, X9, 0x4, LSL
	0x033ED83C ADD X0, X8, 0x138
	0x033ED840 LDP X8, X2, [X0]
	0x033ED844 MOV X0, X19
	0x033ED848 MOV W1, W21
	0x033ED84C BLR X8
	0x033ED850 LDRH W21, [X20 + 0x8]
	0x033ED854 CBZ W0, 0x33ED89C
	0x033ED858 LDR X8, [X19]
	0x033ED85C LDR X1, [X22]
	0x033ED860 MOV W20, W0
	0x033ED864 LDRH W9, [X8 + 0x12E]
	0x033ED868 CBZ X9, 0x33ED88C
	0x033ED86C LDR X10, [X8 + 0xB0]
	0x033ED870 ADD X10, X10, 0x8

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0xFF1000
	015 Move W8, [X20+1060]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {44}
	021 Move X0, 0xD41000
	022 Move X0, [X0+1472]
	023 Call 0x1C17CF4
	024 Move X0, 0xD41000
	025 Move X0, [X0+1480]
	026 Call 0x1C17CF4
	027 Move X0, 0xD41000
	028 Move X0, [X0+1488]
	029 Call 0x1C17CF4
	030 Move X0, 0xD41000
	031 Move X0, [X0+1496]
	032 Call 0x1C17CF4
	033 Move X0, 0xD41000
	034 Move X0, [X0+1504]
	035 Call 0x1C17CF4
	036 Move X0, 0xD07000
	037 Move X0, [X0+1448]
	038 Call 0x1C17CF4
	039 Move X0, 0xD41000
	040 Move X0, [X0+1512]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X20+1060], W8
	044 Move X23, 0xD41000
	045 Move X22, 0xD41000
	046 Move X23, [X23+1512]
	047 Move X22, [X22+1480]
	048 Call 0x1C4D53C
	049 Move W20, [X19+16]
	050 Move X21, X0
	051 Call 0x1C17D44
	052 Compare W20, 0
	053 JumpIfEqual {67}
	054 Move X0, [X23]
	055 Move X20, [X19+24]
	056 Add X1, X31, 8
	057 Move [X31+8], W31
	058 Call 0x1C17E04
	059 Compare X20, 0
	060 JumpIfEqual {230}
	061 Move X2, [X22]
	062 Move X1, X0
	063 Move X0, X20
	064 Call List`1<Object>.Sort, X0, X1
	065 Call 0x1C17D44
	066 Move [X19+16], W31
	067 Move X0, [X19+24]
	068 Compare X0, 0
	069 JumpIfEqual {230}
	070 Move X27, 0xD41000
	071 Move X25, 0xD07000
	072 Move X28, 0xD41000
	073 Move X29, 0xD41000
	074 Move X27, [X27+1496]
	075 Move X25, [X25+1448]
	076 Move X28, [X28+1504]
	077 Move X29, [X29+1472]
	078 Move W22, W31
	079 Move TEMP, 0x80000000
	080 Not TEMP
	081 Move X26, TEMP
	082 Move TEMP, 0x80000000
	083 Not TEMP
	084 Move X20, TEMP
	085 Move W8, [X0+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X2, [X27]
	088 Move W1, W22
	089 Call List`1<Object>.get_Item, X0, X1
	090 Compare X0, 0
	091 JumpIfEqual {230}
	092 Move W8, [X0+65]
	093 Move X23, X0
	094 Compare W8, 0
	095 JumpIfNotEqual {115}
	096 Move X24, [X23+56]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X1, X23
	099 Call Scheduler.FireTimer, X0, X1
	100 Move X24, [X23+56]
	101 Move X0, [X25]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move X0, X20
	107 Move X1, X24
	108 Move X2, X31
	109 Call Math.Min, X0, X1
	110 Move X8, [X23+56]
	111 Move X20, X0
	112 NotImplemented "Instruction CMP not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move [X23+65], W31
	115 Move X0, [X19+24]
	116 Add W22, W22, 1
	117 Compare X0, 0
	118 JumpIfNotEqual {85}
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move W21, W31
	121 Move W23, 1
	122 Move X2, [X27]
	123 Move W1, W21
	124 Call List`1<Object>.get_Item, X0, X1
	125 Compare X0, 0
	126 JumpIfEqual {230}
	127 Move W8, [X0+65]
	128 Compare W8, 0
	129 JumpIfEqual {160}
	130 Move [X0+66], W31
	131 Call 0x1C17D44
	132 Move X22, [X19+24]
	133 Move [X19+16], W23
	134 Compare X22, 0
	135 JumpIfEqual {230}
	136 Move W8, [X22+24]
	137 Move X2, [X27]
	138 Move X0, X22
	139 Subtract W1, W8, 1
	140 Call List`1<Object>.get_Item, X0, X1
	141 Move X3, [X28]
	142 Move X2, X0
	143 Move X0, X22
	144 Move W1, W21
	145 Call List`1<Object>.set_Item, X0, X1, X2
	146 Move X0, [X19+24]
	147 Compare X0, 0
	148 JumpIfEqual {230}
	149 Move W8, [X0+24]
	150 Move X2, [X29]
	151 Subtract W1, W8, 1
	152 Call List`1<Object>.RemoveAt, X0, X1
	153 Move X0, [X19+24]
	154 Compare X0, 0
	155 JumpIfEqual {230}
	156 Move W8, [X0+24]
	157 Compare W8, 0
	158 JumpIfEqual {166}
	159 Subtract W21, W21, 1
	160 Move X0, [X19+24]
	161 Compare X0, 0
	162 JumpIfEqual {230}
	163 Move W8, [X0+24]
	164 Add W21, W21, 1
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move W21, [X19+16]
	167 Call 0x1C17D44
	168 Compare W21, 0
	169 JumpIfEqual {187}
	170 Move X8, 0xD41000
	171 Move X21, [X19+24]
	172 Move X8, [X8+1512]
	173 Add X1, X31, 0
	174 Move [X31], W31
	175 Move X0, [X8]
	176 Call 0x1C17E04
	177 Compare X21, 0
	178 JumpIfEqual {230}
	179 Move X8, 0xD41000
	180 Move X8, [X8+1480]
	181 Move X1, X0
	182 Move X0, X21
	183 Move X2, [X8]
	184 Call List`1<Object>.Sort, X0, X1
	185 Call 0x1C17D44
	186 Move [X19+16], W31
	187 Move TEMP, 0x80000000
	188 Not TEMP
	189 Move X8, TEMP
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move [X19+32], X20
	192 Move TEMP, 0
	193 Not TEMP
	194 Move W0, TEMP
	195 Call 0x1C4D53C
	196 Move TEMP, 0xEC78
	197 Not TEMP
	198 Move X9, TEMP
	199 Subtract X8, X20, X0
	200 NotImplemented "Instruction MOVK not yet implemented."
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move X9, 0x594B
	203 NotImplemented "Instruction MOVK not yet implemented."
	204 NotImplemented "Instruction MOVK not yet implemented."
	205 NotImplemented "Instruction MOVK not yet implemented."
	206 NotImplemented "Instruction SMULH not yet implemented."
	207 Move X9, X8
	208 ShiftRight X9, 63
	209 And X9, X9, 0x7FFFFFFF
	210 Move X8, X8
	211 ShiftRight X8, 11
	212 And X8, X8, 0x7FFFFFFF
	213 Add W8, W8, W9
	214 NotImplemented "Instruction BIC not yet implemented."
	215 Or W0, W31, 0x7FFFFFFE
	216 Move X20, [X31+96]
	217 Move X19, [X31+104]
	218 Move X22, [X31+80]
	219 Move X21, [X31+88]
	220 Move X24, [X31+64]
	221 Move X23, [X31+72]
	222 Move X26, [X31+48]
	223 Move X25, [X31+56]
	224 Move X28, [X31+32]
	225 Move X27, [X31+40]
	226 Move X29, [X31+16]
	227 Move X30, [X31+24]
	228 Add X31, X31, 112
	229 Return X0
	230 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x033EDBBC CBZ X21, 0x33EDC4C
	0x033EDBC0 ADRP X10, 0xD35000
	0x033EDBC4 LDR X9, [X0 + 0xB8]
	0x033EDBC8 LDR X8, [X21]
	0x033EDBCC LDR X10, [X10 + 0xEA8]
	0x033EDBD0 LDR X22, [X9]
	0x033EDBD4 LDRH W9, [X8 + 0x12E]
	0x033EDBD8 LDR X1, [X10]
	0x033EDBDC CBZ X9, 0x33EDC00
	0x033EDBE0 LDR X10, [X8 + 0xB0]
	0x033EDBE4 ADD X10, X10, 0x8
	0x033EDBE8 LDUR X11, [X10 - 0x8]
	0x033EDBEC CMP X11, X1
	0x033EDBF0 B.EQ 0x33EDC10
	0x033EDBF4 SUBS X9, X9, 0x1
	0x033EDBF8 ADD X10, X10, 0x10
	0x033EDBFC B.NE 0x33EDBE8
	0x033EDC00 MOVZ W2, 0x1
	0x033EDC04 MOV X0, X21
	0x033EDC08 BL 0x1C5C788
	0x033EDC0C B 0x33EDC20
	0x033EDC10 LDR W9, [X10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xFF1000
	005 Move X20, 0xD41000
	006 Move W8, [X19+1061]
	007 Move X20, [X20+1400]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD41000
	013 Move X0, [X0+1400]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1061], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Call Scheduler..ctor, X0
	021 Move X8, [X20]
	022 Move X8, [X8+184]
	023 Move [X8], X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return 

