Type: System.Threading.ThreadHelper

Method: System.Void .ctor(System.Delegate start)

Disassembly:
	0x033E7440 BL 0x1C16DFC
	0x033E7444 MOVZ W0, 0x1
	0x033E7448 MOV X1, X31
	0x033E744C BL 0x33B3BEC
	0x033E7450 MOV X1, X0
	0x033E7454 MOV X0, X19
	0x033E7458 MOV X2, X31
	0x033E745C BL 0x338C8D8
	0x033E7460 MOV X0, X19
	0x033E7464 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void SetExecutionContextHelper(System.Threading.ExecutionContext ec)

Disassembly:
	0x033E7468 MOVZ W1, 0x1530
	0x033E746C MOVK W1, 0x80130000

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Void ThreadStart_Context(System.Object state)

Disassembly:
	0x033E7470 MOV X2, X31
	0x033E7474 LDP X30, X21, [X31], #0x20
	0x033E7478 B 0x33B3318
	0x033E747C MOV X4, X31
	0x033E7480 B 0x338CA74
	0x033E7484 STP X30, X21, [X31 - 0x20]!
	0x033E7488 STP X20, X19, [X31 + 0x10]
	0x033E748C ADRP X20, 0xFF6000
	0x033E7490 ADRP X21, 0xD0C000
	0x033E7494 LDRB W8, [X20 + 0x3E9]
	0x033E7498 LDR X21, [X21 + 0x7D0]
	0x033E749C MOV X19, X0
	0x033E74A0 TBNZ X8, 0x0, 0x33E74B8
	0x033E74A4 ADRP X0, 0xD0C000
	0x033E74A8 LDR X0, [X0 + 0x7D0]
	0x033E74AC BL 0x1C16CF4
	0x033E74B0 MOVZ W8, 0x1
	0x033E74B4 STRB W8, [X20 + 0x3E9]
	0x033E74B8 LDR X0, [X21]
	0x033E74BC LDR W8, [X0 + 0xE0]
	0x033E74C0 CBNZ W8, 0x33E74C8
	0x033E74C4 BL 0x1C16DFC
	0x033E74C8 MOVZ W0, 0x2
	0x033E74CC MOV X1, X31
	0x033E74D0 BL 0x33B3BEC
	0x033E74D4 MOV X1, X0
	0x033E74D8 MOV X0, X19
	0x033E74DC MOV X2, X31
	0x033E74E0 BL 0x338C8D8
	0x033E74E4 MOV X0, X19
	0x033E74E8 LDP X20, X19, [X31 + 0x10]
	0x033E74EC MOVZ W1, 0x1519
	0x033E74F0 MOVK W1, 0x80130000
	0x033E74F4 MOV X2, X31
	0x033E74F8 LDP X30, X21, [X31], #0x20
	0x033E74FC B 0x33B3318
	0x033E7500 MOV X4, X31
	0x033E7504 B 0x338CA74
	0x033E7508 STR X30, [X31 - 0x30]!
	0x033E750C STP X22, X21, [X31 + 0x10]
	0x033E7510 STP X20, X19, [X31 + 0x20]
	0x033E7514 LDR X8, [X2 + 0x8]
	0x033E7518 STP X1, X2, [X0 + 0x20]
	0x033E751C MOV X19, X0
	0x033E7520 MOV X20, X2
	0x033E7524 STR X8, [X0 + 0x10]
	0x033E7528 LDRB W22, [X2 + 0x52]
	0x033E752C STR X0, [X0 + 0x40]
	0x033E7530 MOV X0, X2
	0x033E7534 MOV X21, X1
	0x033E7538 BL 0x1C16D84
	0x033E753C TBZ X0, 0x0, 0x33E7554
	0x033E7540 CMP W22, 0x1
	0x033E7544 B.NE 0x33E755C
	0x033E7548 ADRP X8, 0xFFFFFFFFFE7D5000
	0x033E754C ADD X8, X8, 0x970
	0x033E7550 B 0x33E75D0
	0x033E7554 CBZ W22, 0x33E7570
	0x033E7558 CBZ X21, 0x33E75F0
	0x033E755C LDR X8, [X19 + 0x10]
	0x033E7560 LDR X9, [X19 + 0x20]
	0x033E7564 STR X8, [X19 + 0x18]
	0x033E7568 STR X9, [X19 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFF7000
	005 Move W8, [X20+984]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0xD47000
	012 Move X0, [X0+952]
	013 Call 0x1C17CF4
	014 Move X0, 0xD47000
	015 Move X0, [X0+960]
	016 Call 0x1C17CF4
	017 Move X0, 0xD39000
	018 Move X0, [X0+464]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+984], W8
	022 Compare X19, 0
	023 JumpIfEqual {66}
	024 Move X9, 0xD47000
	025 Move X9, [X9+960]
	026 Move X8, [X19]
	027 Move X1, [X9]
	028 Move W10, [X8+304]
	029 Move W9, [X1+304]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, [X8+200]
	032 Add X8, X8, X9
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X0, [X19+16]
	036 Compare X0, 0
	037 JumpIfEqual {66}
	038 Move X8, 0xD39000
	039 Move X8, [X8+464]
	040 Move X9, [X8]
	041 Move X8, [X0]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X9, 0xD47000
	044 Move X9, [X9+952]
	045 Move X1, [X9]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X8, [X0+64]
	048 Move X1, [X19+24]
	049 Move X3, [X0+24]
	050 Move X2, [X0+40]
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X0, X8
	054 Move X30, [X31+32]
	055 CallNoReturn X3
	056 Move X8, [X0+64]
	057 Move X2, [X0+24]
	058 Move X1, [X0+40]
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X0, X8
	062 Move X30, [X31+32]
	063 CallNoReturn X2
	064 Move X0, X19
	065 Call 0x1C181E0
	066 Call 0x1C17F20
	067 Call 0x1C181E0

Method: System.Void ThreadStart(System.Object obj)

Disassembly:
	0x033E756C B 0x33E75D4
	0x033E7570 LDRB W8, [X19 + 0x70]
	0x033E7574 CBZ W8, 0x33E75A0
	0x033E7578 MOV X0, X20
	0x033E757C BL 0x1C16D7C
	0x033E7580 MOV W21, W0
	0x033E7584 MOV X0, X20
	0x033E7588 BL 0x1C17238
	0x033E758C TBZ X21, 0x0, 0x33E75AC
	0x033E7590 TBZ X0, 0x0, 0x33E75BC
	0x033E7594 ADRP X8, 0xFFFFFFFFFE7D5000
	0x033E7598 ADD X8, X8, 0xA6C
	0x033E759C B 0x33E75D0
	0x033E75A0 ADRP X8, 0xFFFFFFFFFE7D5000
	0x033E75A4 ADD X8, X8, 0x950
	0x033E75A8 B 0x33E75D0
	0x033E75AC TBZ X0, 0x0, 0x33E75C8
	0x033E75B0 ADRP X8, 0xFFFFFFFFFE7D5000
	0x033E75B4 ADD X8, X8, 0x9AC
	0x033E75B8 B 0x33E75D0
	0x033E75BC ADRP X8, 0xFFFFFFFFFE7D5000
	0x033E75C0 ADD X8, X8, 0xA30
	0x033E75C4 B 0x33E75D0
	0x033E75C8 ADRP X8, 0xFFFFFFFFFE7D5000
	0x033E75CC ADD X8, X8, 0x980
	0x033E75D0 STR X8, [X19 + 0x18]
	0x033E75D4 ADRP X8, 0xFFFFFFFFFE7D5000
	0x033E75D8 ADD X8, X8, 0x908
	0x033E75DC STR X8, [X19 + 0x38]
	0x033E75E0 LDP X20, X19, [X31 + 0x20]
	0x033E75E4 LDP X22, X21, [X31 + 0x10]
	0x033E75E8 LDR X30, [X31], #0x30
	0x033E75EC RET
	0x033E75F0 ADRP X1, 0xFFFFFFFFFD734000
	0x033E75F4 ADD X1, X1, 0xEE3
	0x033E75F8 MOV X0, X31
	0x033E75FC BL 0x1C16F3C
	0x033E7600 MOV X1, X31
	0x033E7604 BL 0x1C16DEC
	0x033E7608 LDR X8, [X0 + 0x40]
	0x033E760C LDR X3, [X0 + 0x18]
	0x033E7610 LDR X2, [X0 + 0x28]
	0x033E7614 MOV X0, X8
	0x033E7618 BR X3
	0x033E761C STR X30, [X31 - 0x30]!
	0x033E7620 STP X22, X21, [X31 + 0x10]
	0x033E7624 STP X20, X19, [X31 + 0x20]
	0x033E7628 LDR X8, [X2 + 0x8]
	0x033E762C STP X1, X2, [X0 + 0x20]
	0x033E7630 MOV X19, X0
	0x033E7634 MOV X20, X2
	0x033E7638 STR X8, [X0 + 0x10]
	0x033E763C LDRB W22, [X2 + 0x52]
	0x033E7640 STR X0, [X0 + 0x40]
	0x033E7644 MOV X0, X2
	0x033E7648 MOV X21, X1
	0x033E764C BL 0x1C16D84
	0x033E7650 TBZ X0, 0x0, 0x33E7668
	0x033E7654 CMP W22, 0x2
	0x033E7658 B.NE 0x33E76A4
	0x033E765C ADRP X8, 0xFFFFFFFFFE7D5000
	0x033E7660 ADD X8, X8, 0xB78
	0x033E7664 B 0x33E76E8
	0x033E7668 CMP W22, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFF7000
	007 Move W8, [X21+985]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xD35000
	015 Move X0, [X0+1408]
	016 Call 0x1C17CF4
	017 Move X0, 0xD47000
	018 Move X0, [X0+952]
	019 Call 0x1C17CF4
	020 Move X0, 0xD47000
	021 Move X0, [X0+960]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+985], W8
	025 Move X21, [X19+32]
	026 Move [X19+24], X20
	027 Compare X21, 0
	028 JumpIfEqual {57}
	029 Move X22, 0xD47000
	030 Move X22, [X22+960]
	031 Move X20, 0xD35000
	032 Move X0, [X22]
	033 Move W8, [X0+224]
	034 Move X20, [X20+1408]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X22]
	039 Move X8, [X20]
	040 Move X9, [X0+184]
	041 Move W10, [X8+224]
	042 Move X20, [X9]
	043 Compare W10, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X0, X21
	048 Move X1, X20
	049 Move X2, X19
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Call ExecutionContext.Run, X0, X1, X2
	056 Return 
	057 Move X0, [X19+16]
	058 Compare X0, 0
	059 JumpIfEqual {76}
	060 Move X8, 0xD47000
	061 Move X8, [X8+952]
	062 Move X1, [X8]
	063 Move X8, [X0]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X8, [X0+64]
	066 Move X3, [X0+24]
	067 Move X2, [X0+40]
	068 Move X1, X20
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X0, X8
	074 Move X30, [X31+48]
	075 CallNoReturn X3
	076 Call 0x1C17F20
	077 Call 0x1C181E0

Method: System.Void ThreadStart()

Disassembly:
	0x033E766C B.NE 0x33E76A0
	0x033E7670 LDRB W8, [X19 + 0x70]
	0x033E7674 CBZ W8, 0x33E76B8
	0x033E7678 MOV X0, X20
	0x033E767C BL 0x1C16D7C
	0x033E7680 MOV W21, W0
	0x033E7684 MOV X0, X20
	0x033E7688 BL 0x1C17238
	0x033E768C TBZ X21, 0x0, 0x33E76C4
	0x033E7690 TBZ X0, 0x0, 0x33E76D4
	0x033E7694 ADRP X8, 0xFFFFFFFFFE7D5000
	0x033E7698 ADD X8, X8, 0xC9C
	0x033E769C B 0x33E76E8
	0x033E76A0 CBZ X21, 0x33E7708
	0x033E76A4 LDR X8, [X19 + 0x10]
	0x033E76A8 LDR X9, [X19 + 0x20]
	0x033E76AC STR X8, [X19 + 0x18]
	0x033E76B0 STR X9, [X19 + 0x40]
	0x033E76B4 B 0x33E76EC
	0x033E76B8 ADRP X8, 0xFFFFFFFFFE7D5000
	0x033E76BC ADD X8, X8, 0xB50
	0x033E76C0 B 0x33E76E8
	0x033E76C4 TBZ X0, 0x0, 0x33E76E0
	0x033E76C8 ADRP X8, 0xFFFFFFFFFE7D5000
	0x033E76CC ADD X8, X8, 0xBC4
	0x033E76D0 B 0x33E76E8
	0x033E76D4 ADRP X8, 0xFFFFFFFFFE7D5000
	0x033E76D8 ADD X8, X8, 0xC50
	0x033E76DC B 0x33E76E8
	0x033E76E0 ADRP X8, 0xFFFFFFFFFE7D5000
	0x033E76E4 ADD X8, X8, 0xB90
	0x033E76E8 STR X8, [X19 + 0x18]
	0x033E76EC ADRP X8, 0xFFFFFFFFFE7D5000
	0x033E76F0 ADD X8, X8, 0xAF8
	0x033E76F4 STR X8, [X19 + 0x38]
	0x033E76F8 LDP X20, X19, [X31 + 0x20]
	0x033E76FC LDP X22, X21, [X31 + 0x10]
	0x033E7700 LDR X30, [X31], #0x30
	0x033E7704 RET
	0x033E7708 ADRP X1, 0xFFFFFFFFFD734000
	0x033E770C ADD X1, X1, 0xEE3
	0x033E7710 MOV X0, X31
	0x033E7714 BL 0x1C16F3C
	0x033E7718 MOV X1, X31
	0x033E771C BL 0x1C16DEC
	0x033E7720 LDR X8, [X0 + 0x40]
	0x033E7724 LDR X4, [X0 + 0x18]
	0x033E7728 LDR X3, [X0 + 0x28]
	0x033E772C AND W2, W2, 0x1
	0x033E7730 MOV X0, X8
	0x033E7734 BR X4
	0x033E7738 STP X30, X21, [X31 - 0x20]!
	0x033E773C STP X20, X19, [X31 + 0x10]
	0x033E7740 ADRP X21, 0xFF6000
	0x033E7744 ADRP X20, 0xD46000
	0x033E7748 ADRP X19, 0xD46000
	0x033E774C LDRB W8, [X21 + 0x3EA]
	0x033E7750 LDR X20, [X20 + 0x440]
	0x033E7754 LDR X19, [X19 + 0x448]
	0x033E7758 TBNZ X8, 0x0, 0x33E777C
	0x033E775C ADRP X0, 0xD46000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xFF7000
	007 Move W8, [X20+986]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xD35000
	014 Move X0, [X0+1408]
	015 Call 0x1C17CF4
	016 Move X0, 0xD47000
	017 Move X0, [X0+960]
	018 Call 0x1C17CF4
	019 Move X0, 0xD39000
	020 Move X0, [X0+464]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+986], W8
	024 Move X20, [X19+32]
	025 Compare X20, 0
	026 JumpIfEqual {55}
	027 Move X22, 0xD47000
	028 Move X22, [X22+960]
	029 Move X21, 0xD35000
	030 Move X0, [X22]
	031 Move W8, [X0+224]
	032 Move X21, [X21+1408]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X22]
	037 Move X8, [X21]
	038 Move X9, [X0+184]
	039 Move W10, [X8+224]
	040 Move X21, [X9]
	041 Compare W10, 0
	042 JumpIfNotEqual {45}
	043 Move X0, X8
	044 Call 0x1C17DFC
	045 Move X0, X20
	046 Move X1, X21
	047 Move X2, X19
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Call ExecutionContext.Run, X0, X1, X2
	054 Return 
	055 Move X0, [X19+16]
	056 Compare X0, 0
	057 JumpIfEqual {73}
	058 Move X8, 0xD39000
	059 Move X8, [X8+464]
	060 Move X1, [X8]
	061 Move X8, [X0]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X8, [X0+64]
	064 Move X2, [X0+24]
	065 Move X1, [X0+40]
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X0, X8
	071 Move X30, [X31+48]
	072 CallNoReturn X2
	073 Call 0x1C17F20
	074 Call 0x1C181E0

Method: System.Void .cctor()

Disassembly:
	0x033E7760 LDR X0, [X0 + 0x440]
	0x033E7764 BL 0x1C16CF4
	0x033E7768 ADRP X0, 0xD46000
	0x033E776C LDR X0, [X0 + 0x448]
	0x033E7770 BL 0x1C16CF4
	0x033E7774 MOVZ W8, 0x1
	0x033E7778 STRB W8, [X21 + 0x3EA]
	0x033E777C MOV X0, X31
	0x033E7780 BL 0x33C236C
	0x033E7784 LDR X8, [X20]
	0x033E7788 LDR X8, [X8 + 0xB8]
	0x033E778C STR W0, [X8]
	0x033E7790 LDR X0, [X19]
	0x033E7794 BL 0x1C16F10
	0x033E7798 MOV X19, X0
	0x033E779C BL 0x33E77B8
	0x033E77A0 LDR X8, [X20]
	0x033E77A4 LDR X8, [X8 + 0xB8]
	0x033E77A8 STR X19, [X8 + 0x8]
	0x033E77AC LDP X20, X19, [X31 + 0x10]
	0x033E77B0 LDP X30, X21, [X31], #0x20
	0x033E77B4 RET
	0x033E77B8 STP X30, X21, [X31 - 0x20]!
	0x033E77BC STP X20, X19, [X31 + 0x10]
	0x033E77C0 ADRP X21, 0xFF6000
	0x033E77C4 ADRP X20, 0xD46000
	0x033E77C8 LDRB W8, [X21 + 0x3EB]
	0x033E77CC LDR X20, [X20 + 0x450]
	0x033E77D0 MOV X19, X0
	0x033E77D4 TBNZ X8, 0x0, 0x33E77EC
	0x033E77D8 ADRP X0, 0xD46000
	0x033E77DC LDR X0, [X0 + 0x450]
	0x033E77E0 BL 0x1C16CF4
	0x033E77E4 MOVZ W8, 0x1
	0x033E77E8 STRB W8, [X21 + 0x3EB]
	0x033E77EC MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFF7000
	007 Move X22, 0xD3F000
	008 Move X19, 0xD47000
	009 Move X20, 0xD47000
	010 Move W8, [X21+987]
	011 Move X22, [X22+2376]
	012 Move X19, [X19+968]
	013 Move X20, [X20+960]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xD3F000
	019 Move X0, [X0+2376]
	020 Call 0x1C17CF4
	021 Move X0, 0xD47000
	022 Move X0, [X0+968]
	023 Call 0x1C17CF4
	024 Move X0, 0xD47000
	025 Move X0, [X0+960]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+987], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X2, [X19]
	032 Move X1, X31
	033 Move X19, X0
	034 Call ContextCallback..ctor, X0, X1, X2
	035 Move X8, [X20]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X8, [X8+184]
	039 Move [X8], X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+48]
	043 Return 

