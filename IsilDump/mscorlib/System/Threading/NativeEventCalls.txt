Type: System.Threading.NativeEventCalls

Method: System.IntPtr CreateEvent_internal(System.Boolean manual, System.Boolean initial, System.String name, out System.Int32 errorCode)

Disassembly:
	0x033EC1A8 B 0x33EC1AC
	0x033EC1AC MOV X21, X0
	0x033EC1B0 CMP W1, 0x1
	0x033EC1B4 B.NE 0x33EC1D4
	0x033EC1B8 MOV X0, X21
	0x033EC1BC BL 0x3EB1AD0
	0x033EC1C0 LDR X20, [X0]
	0x033EC1C4 BL 0x3EB1AE0
	0x033EC1C8 MOV W22, W31
	0x033EC1CC MOV W21, W31
	0x033EC1D0 B 0x33EC14C
	0x033EC1D4 MOV X20, X31
	0x033EC1D8 B 0x33EC1E0
	0x033EC1DC MOV X21, X0
	0x033EC1E0 LDRB W8, [X31 + 0xC]
	0x033EC1E4 CBZ W8, 0x33EC1F4
	0x033EC1E8 MOV X0, X19
	0x033EC1EC MOV X1, X31
	0x033EC1F0 BL 0x33E14E4
	0x033EC1F4 CBNZ X20, 0x33EC200
	0x033EC1F8 MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X3
	007 Move W20, W1
	008 Move W21, W0
	009 Compare X2, 0
	010 JumpIfEqual {16}
	011 Move X0, X31
	012 Move X22, X2
	013 Call RuntimeHelpers.get_OffsetToStringData
	014 Move W3, [X22+16]
	015 Add X2, X22, W0
	016 Move W3, W31
	017 And W0, W21, 1
	018 And W1, W20, 1
	019 Move X4, X19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X22, [X31+16]
	023 Move X21, [X31+24]
	024 Move X30, [X31+48]
	025 Call 0x1C4CF8C
	026 Return X0

Method: System.IntPtr CreateEvent_icall(System.Boolean manual, System.Boolean initial, System.Char* name, System.Int32 name_length, out System.Int32 errorCode)

Disassembly:
	0x033EC1FC BL 0x1D2C690
	0x033EC200 MOV X0, X20
	0x033EC204 BL 0x1C16F18

ISIL:
	001 And W0, W0, 1
	002 And W1, W1, 1
	003 Call 0x1C4CF8C
	004 Return X0

Method: System.Boolean SetEvent(Microsoft.Win32.SafeHandles.SafeWaitHandle handle)

Disassembly:
	0x033EC208 BL 0x1990590
	0x033EC20C RET
	0x033EC210 STP X30, X21, [X31 - 0x20]!
	0x033EC214 STP X20, X19, [X31 + 0x10]
	0x033EC218 ADRP X21, 0xFF1000
	0x033EC21C LDRB W8, [X21 + 0x41B]
	0x033EC220 MOV X19, X2
	0x033EC224 MOV X20, X1
	0x033EC228 TBNZ X8, 0x0, 0x33EC240
	0x033EC22C ADRP X0, 0xD0F000
	0x033EC230 LDR X0, [X0 + 0xC80]
	0x033EC234 BL 0x1C16CF4
	0x033EC238 MOVZ W8, 0x1
	0x033EC23C STRB W8, [X21 + 0x41B]
	0x033EC240 CMP X20, X19
	0x033EC244 B.EQ 0x33EC270
	0x033EC248 CBZ X20, 0x33EC268
	0x033EC24C ADRP X8, 0xD0F000
	0x033EC250 LDR X8, [X8 + 0xC80]
	0x033EC254 LDR X9, [X20]
	0x033EC258 LDR X8, [X8]
	0x033EC25C CMP X9, X8
	0x033EC260 CSEL X1, X20, X31, EQ
	0x033EC264 B.EQ 0x33EC278
	0x033EC268 MOVN W0, 0x0
	0x033EC26C B 0x33EC28C
	0x033EC270 MOV W0, W31
	0x033EC274 B 0x33EC28C
	0x033EC278 CBZ X19, 0x33EC288
	0x033EC27C LDR X9, [X19]
	0x033EC280 CMP X9, X8
	0x033EC284 B.EQ 0x33EC298
	0x033EC288 MOVZ W0, 0x1
	0x033EC28C LDP X20, X19, [X31 + 0x10]
	0x033EC290 LDP X30, X21, [X31], #0x20
	0x033EC294 RET
	0x033EC298 MOV X2, X19
	0x033EC29C LDP X20, X19, [X31 + 0x10]
	0x033EC2A0 LDP X30, X21, [X31], #0x20
	0x033EC2A4 B 0x33EC2A8
	0x033EC2A8 STP X30, X21, [X31 - 0x20]!
	0x033EC2AC STP X20, X19, [X31 + 0x10]
	0x033EC2B0 ADRP X21, 0xFF1000
	0x033EC2B4 LDRB W8, [X21 + 0x41C]
	0x033EC2B8 MOV X19, X2
	0x033EC2BC MOV X20, X1
	0x033EC2C0 TBNZ X8, 0x0, 0x33EC2D8
	0x033EC2C4 ADRP X0, 0xD07000
	0x033EC2C8 LDR X0, [X0 + 0x5A8]
	0x033EC2CC BL 0x1C16CF4
	0x033EC2D0 MOVZ W8, 0x1
	0x033EC2D4 STRB W8, [X21 + 0x41C]
	0x033EC2D8 CBZ X20, 0x33EC314
	0x033EC2DC CBZ X19, 0x33EC314
	0x033EC2E0 ADRP X8, 0xD07000
	0x033EC2E4 LDR X8, [X8 + 0x5A8]
	0x033EC2E8 LDR X20, [X20 + 0x38]
	0x033EC2EC LDR X19, [X19 + 0x38]
	0x033EC2F0 LDR X0, [X8]
	0x033EC2F4 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move [X31+12], W31
	008 Compare X0, 0
	009 JumpIfEqual {33}
	010 Add X1, X31, 12
	011 Move X0, X19
	012 Move X2, X31
	013 Call SafeHandle.DangerousAddRef, X0, X1
	014 Move X0, [X19+16]
	015 Call 0x1C4CF70
	016 Move W8, [X31+12]
	017 Move W21, W0
	018 Compare W8, 0
	019 JumpIfEqual {26}
	020 Move X20, X31
	021 Move X0, X19
	022 Move X1, X31
	023 Call SafeHandle.DangerousRelease, X0
	024 Compare X20, 0
	025 JumpIfNotEqual {49}
	026 And W0, W21, 1
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X30, [X31+16]
	030 Move X21, [X31+24]
	031 Add X31, X31, 48
	032 Return X0
	033 Call 0x1C17F20
	034 Move X21, X0
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X0, X21
	037 Call 0x3EB2AD0
	038 Move X20, [X0]
	039 Call 0x3EB2AE0
	040 Move W8, [X31+12]
	041 Compare W8, 0
	042 JumpIfEqual {46}
	043 Compare X19, 0
	044 JumpIfEqual {52}
	045 Move W21, W31
	046 Move W21, W31
	047 Compare X20, 0
	048 JumpIfEqual {26}
	049 Move X0, X20
	050 Call 0x1C17F18
	051 Move X20, X31
	052 Call 0x1C17F20
	053 Move X21, X0
	054 Move W8, [X31+12]
	055 Compare W8, 0
	056 JumpIfEqual {63}
	057 Compare X19, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17F20
	060 Move X0, X19
	061 Move X1, X31
	062 Call SafeHandle.DangerousRelease, X0
	063 Compare X20, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X21
	066 Call 0x1D2D690
	067 Move X0, X20
	068 Call 0x1C17F18
	069 Call 0x1991590

Method: System.Boolean SetEvent_internal(System.IntPtr handle)

Disassembly:
	0x033EC2F8 CBNZ W8, 0x33EC300

ISIL:
	001 Call 0x1C4CF70
	002 Return X0

Method: System.Boolean ResetEvent(Microsoft.Win32.SafeHandles.SafeWaitHandle handle)

Disassembly:
	0x033EC2FC BL 0x1C16DFC
	0x033EC300 SUB X0, X20, X19
	0x033EC304 LDP X20, X19, [X31 + 0x10]
	0x033EC308 MOV X1, X31
	0x033EC30C LDP X30, X21, [X31], #0x20
	0x033EC310 B 0x337F374
	0x033EC314 BL 0x1C16F20
	0x033EC318 STR X30, [X31 - 0x40]!
	0x033EC31C STP X24, X23, [X31 + 0x10]
	0x033EC320 STP X22, X21, [X31 + 0x20]
	0x033EC324 STP X20, X19, [X31 + 0x30]
	0x033EC328 ADRP X20, 0xFF1000
	0x033EC32C ADRP X24, 0xD38000
	0x033EC330 ADRP X23, 0xD33000
	0x033EC334 ADRP X22, 0xD41000
	0x033EC338 ADRP X21, 0xD33000
	0x033EC33C LDRB W8, [X20 + 0x41D]
	0x033EC340 LDR X24, [X24 + 0x7C8]
	0x033EC344 LDR X23, [X23 + 0x1D0]
	0x033EC348 LDR X22, [X22 + 0x5B0]
	0x033EC34C LDR X21, [X21 + 0x1D8]
	0x033EC350 MOV X19, X0
	0x033EC354 TBNZ X8, 0x0, 0x33EC390
	0x033EC358 ADRP X0, 0xD38000
	0x033EC35C LDR X0, [X0 + 0x7C8]
	0x033EC360 BL 0x1C16CF4
	0x033EC364 ADRP X0, 0xD41000
	0x033EC368 LDR X0, [X0 + 0x5B0]
	0x033EC36C BL 0x1C16CF4
	0x033EC370 ADRP X0, 0xD33000
	0x033EC374 LDR X0, [X0 + 0x1D0]
	0x033EC378 BL 0x1C16CF4
	0x033EC37C ADRP X0, 0xD33000
	0x033EC380 LDR X0, [X0 + 0x1D8]
	0x033EC384 BL 0x1C16CF4
	0x033EC388 MOVZ W8, 0x1
	0x033EC38C STRB W8, [X20 + 0x41D]
	0x033EC390 LDR X0, [X24]
	0x033EC394 BL 0x1C16F10
	0x033EC398 MOV W1, W31
	0x033EC39C MOV X2, X31
	0x033EC3A0 MOV X20, X0
	0x033EC3A4 BL 0x33DCD78
	0x033EC3A8 STR X20, [X19 + 0x28]
	0x033EC3AC LDR X0, [X23]
	0x033EC3B0 BL 0x1C16F10
	0x033EC3B4 LDR X2, [X22]
	0x033EC3B8 MOV X1, X19
	0x033EC3BC MOV X3, X31
	0x033EC3C0 MOV X20, X0
	0x033EC3C4 BL 0x33DD08C
	0x033EC3C8 LDR X0, [X21]
	0x033EC3CC BL 0x1C16F10
	0x033EC3D0 MOV X1, X20
	0x033EC3D4 MOV X2, X31
	0x033EC3D8 MOV X19, X0
	0x033EC3DC BL 0x33E67F0
	0x033EC3E0 CBZ X19, 0x33EC410
	0x033EC3E4 MOVZ W1, 0x1
	0x033EC3E8 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move [X31+12], W31
	008 Compare X0, 0
	009 JumpIfEqual {33}
	010 Add X1, X31, 12
	011 Move X0, X19
	012 Move X2, X31
	013 Call SafeHandle.DangerousAddRef, X0, X1
	014 Move X0, [X19+16]
	015 Call 0x1C4CF54
	016 Move W8, [X31+12]
	017 Move W21, W0
	018 Compare W8, 0
	019 JumpIfEqual {26}
	020 Move X20, X31
	021 Move X0, X19
	022 Move X1, X31
	023 Call SafeHandle.DangerousRelease, X0
	024 Compare X20, 0
	025 JumpIfNotEqual {49}
	026 And W0, W21, 1
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X30, [X31+16]
	030 Move X21, [X31+24]
	031 Add X31, X31, 48
	032 Return X0
	033 Call 0x1C17F20
	034 Move X21, X0
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X0, X21
	037 Call 0x3EB2AD0
	038 Move X20, [X0]
	039 Call 0x3EB2AE0
	040 Move W8, [X31+12]
	041 Compare W8, 0
	042 JumpIfEqual {46}
	043 Compare X19, 0
	044 JumpIfEqual {52}
	045 Move W21, W31
	046 Move W21, W31
	047 Compare X20, 0
	048 JumpIfEqual {26}
	049 Move X0, X20
	050 Call 0x1C17F18
	051 Move X20, X31
	052 Call 0x1C17F20
	053 Move X21, X0
	054 Move W8, [X31+12]
	055 Compare W8, 0
	056 JumpIfEqual {63}
	057 Compare X19, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17F20
	060 Move X0, X19
	061 Move X1, X31
	062 Call SafeHandle.DangerousRelease, X0
	063 Compare X20, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X21
	066 Call 0x1D2D690
	067 Move X0, X20
	068 Call 0x1C17F18
	069 Call 0x1991590

Method: System.Boolean ResetEvent_internal(System.IntPtr handle)

Disassembly:
	0x033EC3EC MOV X2, X31

ISIL:
	001 Call 0x1C4CF54
	002 Return X0

Method: System.Void CloseEvent_internal(System.IntPtr handle)

Disassembly:
	0x033EC3F0 BL 0x33E7018

ISIL:
	001 Call 0x1C4D004
	002 Return 

