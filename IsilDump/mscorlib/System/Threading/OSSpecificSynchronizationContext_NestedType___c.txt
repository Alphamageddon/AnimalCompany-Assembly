Type: System.Threading.OSSpecificSynchronizationContext/<>c

Method: System.Void .cctor()

Disassembly:
	0x033E7380 ADRP X23, 0xD45000
	0x033E7384 LDR W9, [X19]
	0x033E7388 LDR X23, [X23 + 0xDE8]
	0x033E738C MOVZ W22, 0xE100
	0x033E7390 MOVZ W24, 0x1F00
	0x033E7394 MOVK W22, 0x5F50000
	0x033E7398 MOVK W24, 0xFA0A0000
	0x033E739C CMP W9, 0x8
	0x033E73A0 B.LT 0x33E71D4
	0x033E73A4 LDR X0, [X23]
	0x033E73A8 LDR W9, [X0 + 0xE0]
	0x033E73AC CBNZ W9, 0x33E73B8
	0x033E73B0 BL 0x1C16DFC
	0x033E73B4 LDR W8, [X21]
	0x033E73B8 LDR X10, [X20]
	0x033E73BC MOV W11, W8
	0x033E73C0 UDIV X9, X10, X22
	0x033E73C4 MADD W10, W9, W24, W10
	0x033E73C8 BFM X11, X10, 0x20, 0x1F
	0x033E73CC UDIV X10, X11, X22
	0x033E73D0 MUL W11, W10, W22
	0x033E73D4 CMP W8, W11
	0x033E73D8 B.NE 0x33E71D4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xFF7000
	005 Move X20, 0xD47000
	006 Move W8, [X19+982]
	007 Move X20, [X20+880]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD47000
	013 Move X0, [X0+880]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+982], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x033E73DC STR X9, [X20]
	0x033E73E0 STR W10, [X21]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Threading.OSSpecificSynchronizationContext <Get>b__3_0(System.Object _osContext)

Disassembly:
	0x033E73E4 LDR W8, [X19]
	0x033E73E8 SUB W9, W8, 0x8
	0x033E73EC STR W9, [X19]
	0x033E73F0 LDR W8, [X21]
	0x033E73F4 ANDS W31, W8, 0xFF
	0x033E73F8 B.EQ 0x33E739C
	0x033E73FC B 0x33E71D4
	0x033E7400 STP X30, X21, [X31 - 0x20]!
	0x033E7404 STP X20, X19, [X31 + 0x10]
	0x033E7408 ADRP X20, 0xFF6000
	0x033E740C ADRP X21, 0xD0C000
	0x033E7410 LDRB W8, [X20 + 0x3E8]
	0x033E7414 LDR X21, [X21 + 0x7D0]
	0x033E7418 MOV X19, X0
	0x033E741C TBNZ X8, 0x0, 0x33E7434
	0x033E7420 ADRP X0, 0xD0C000
	0x033E7424 LDR X0, [X0 + 0x7D0]
	0x033E7428 BL 0x1C16CF4
	0x033E742C MOVZ W8, 0x1
	0x033E7430 STRB W8, [X20 + 0x3E8]
	0x033E7434 LDR X0, [X21]
	0x033E7438 LDR W8, [X0 + 0xE0]
	0x033E743C CBNZ W8, 0x33E7444

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xFF7000
	006 Move X21, 0xD47000
	007 Move W8, [X20+983]
	008 Move X21, [X21+848]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD47000
	015 Move X0, [X0+848]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+983], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move [X20+24], X19
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

