Type: System.Threading.ThreadPoolWorkQueue/SparseArray`1

Method: System.Void .ctor(System.Int32 initialSize)

Disassembly:
	0x026006AC MOVZ W2, 0x78
	0x026006B0 BL 0x3EB1AC0
	0x026006B4 LDR V0, [X19 + 0x18]
	0x026006B8 MOVI V1.2S, 0x1
	0x026006BC LDP X22, X21, [X31 + 0x100]
	0x026006C0 LDP X29, X30, [X31 + 0xF0]
	0x026006C4 ADD S0.2S, S0.2S, S1.2S
	0x026006C8 STR D0, [X19 + 0x18]
	0x026006CC LDP X20, X19, [X31 + 0x110]
	0x026006D0 ADD X31, X31, 0x120
	0x026006D4 RET
	0x026006D8 BL 0x1C16F20
	0x026006DC BL 0x1C16F28
	0x026006E0 STR X30, [X31 - 0x20]!
	0x026006E4 STP X20, X19, [X31 + 0x10]
	0x026006E8 ADRP X0, 0x1AF3000
	0x026006EC LDR X0, [X0 + 0x5B0]
	0x026006F0 MOV X19, X1
	0x026006F4 BL 0x1C16D08
	0x026006F8 BL 0x1C16F10
	0x026006FC MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W1
	006 Move X1, X31
	007 Move X21, X2
	008 Move X19, X0
	009 Call Object..ctor, X0
	010 Move X8, [X21+32]
	011 Move X8, [X8+192]
	012 Move X0, [X8]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Move W1, W20
	020 Call 0x1C17D6C
	021 Move X20, X0
	022 Call 0x1C17D44
	023 Move [X19+16], X20
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 Return 

Method: T[] get_Current()

Disassembly:
	0x02600700 ADRP X0, 0x1B1D000
	0x02600704 LDR X0, [X0 + 0x308]
	0x02600708 BL 0x1C16D08
	0x0260070C MOV X1, X0
	0x02600710 MOV X0, X20
	0x02600714 MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+16]
	004 Call 0x1C17D44
	005 Move X0, X19
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return X0

Method: System.Int32 Add(T e)

Disassembly:
	0x02600718 BL 0x337DF1C
	0x0260071C MOV X0, X20
	0x02600720 MOV X1, X19
	0x02600724 BL 0x1C16DEC
	0x02600728 STR X30, [X31 - 0x20]!
	0x0260072C STP X20, X19, [X31 + 0x10]
	0x02600730 MOV X20, X1
	0x02600734 MOV X1, X31
	0x02600738 MOV X19, X0
	0x0260073C BL 0x33BDD8C
	0x02600740 LDR X8, [X20 + 0x20]
	0x02600744 LDR X8, [X8 + 0xC0]
	0x02600748 LDR X20, [X8]
	0x0260074C LDR X8, [X20 + 0x38]
	0x02600750 CBNZ X8, 0x2600760
	0x02600754 MOV X0, X20
	0x02600758 BL 0x1C5C6E0
	0x0260075C LDR X8, [X20 + 0x38]
	0x02600760 LDR X0, [X8 + 0x10]
	0x02600764 LDRB W8, [X0 + 0x135]
	0x02600768 TBNZ X8, 0x0, 0x2600770
	0x0260076C BL 0x1C5C684
	0x02600770 LDR W8, [X0 + 0xE0]
	0x02600774 CBNZ W8, 0x260077C
	0x02600778 BL 0x1C16DFC
	0x0260077C LDR X8, [X20 + 0x38]
	0x02600780 LDR X0, [X8 + 0x10]
	0x02600784 LDRB W8, [X0 + 0x135]
	0x02600788 TBNZ X8, 0x0, 0x2600790
	0x0260078C BL 0x1C5C684
	0x02600790 LDR X8, [X0 + 0xB8]
	0x02600794 LDR X8, [X8]
	0x02600798 STR X8, [X19 + 0x10]
	0x0260079C LDP X20, X19, [X31 + 0x10]
	0x026007A0 LDR X30, [X31], #0x20
	0x026007A4 RET
	0x026007A8 STR X30, [X31 - 0x30]!
	0x026007AC STP X22, X21, [X31 + 0x10]
	0x026007B0 STP X20, X19, [X31 + 0x20]
	0x026007B4 MOV W21, W1
	0x026007B8 MOV X1, X31
	0x026007BC MOV X19, X2
	0x026007C0 MOV X20, X0
	0x026007C4 BL 0x33BDD8C
	0x026007C8 TBNZ X21, 0x1F, 0x2600800
	0x026007CC LDR X8, [X19 + 0x20]
	0x026007D0 LDR X8, [X8 + 0xC0]
	0x026007D4 LDR X0, [X8 + 0x18]
	0x026007D8 LDRB W8, [X0 + 0x135]
	0x026007DC TBNZ X8, 0x0, 0x26007E4
	0x026007E0 BL 0x1C5C684
	0x026007E4 MOV W1, W21
	0x026007E8 BL 0x1C16D6C
	0x026007EC STR X0, [X20 + 0x10]
	0x026007F0 LDP X20, X19, [X31 + 0x20]
	0x026007F4 LDP X22, X21, [X31 + 0x10]
	0x026007F8 LDR X30, [X31], #0x30
	0x026007FC RET
	0x02600800 STR W21, [X31 + 0xC]
	0x02600804 ADRP X0, 0x1AF3000
	0x02600808 LDR X0, [X0 + 0x758]
	0x0260080C BL 0x1C16D08
	0x02600810 ADD X1, X31, 0xC
	0x02600814 BL 0x1C16E04
	0x02600818 MOV X20, X0
	0x0260081C ADRP X0, 0x1AFB000
	0x02600820 LDR X0, [X0 + 0x760]
	0x02600824 BL 0x1C16D08
	0x02600828 BL 0x1C16F10
	0x0260082C MOV X21, X0
	0x02600830 ADRP X0, 0x1B1D000
	0x02600834 LDR X0, [X0 + 0x58]
	0x02600838 BL 0x1C16D08
	0x0260083C MOV X22, X0
	0x02600840 ADRP X0, 0x1B1B000
	0x02600844 LDR X0, [X0 + 0x670]
	0x02600848 BL 0x1C16D08
	0x0260084C MOV X3, X0
	0x02600850 MOV X0, X21
	0x02600854 MOV X1, X22
	0x02600858 MOV X2, X20
	0x0260085C MOV X4, X31
	0x02600860 BL 0x3312C8C
	0x02600864 MOV X0, X21
	0x02600868 MOV X1, X19
	0x0260086C BL 0x1C16DEC
	0x02600870 LDR W0, [X0 + 0x18]
	0x02600874 RET
	0x02600878 MOV W0, W31
	0x0260087C RET
	0x02600880 STR X30, [X31 - 0x20]!
	0x02600884 STP X20, X19, [X31 + 0x10]
	0x02600888 ADRP X20, 0x1DD9000
	0x0260088C LDRB W8, [X20 + 0xFE3]
	0x02600890 MOV X19, X0
	0x02600894 TBNZ X8, 0x0, 0x26008AC
	0x02600898 ADRP X0, 0x1AF9000
	0x0260089C LDR X0, [X0 + 0xCC0]
	0x026008A0 BL 0x1C16CF4
	0x026008A4 MOVZ W8, 0x1
	0x026008A8 STRB W8, [X20 + 0xFE3]
	0x026008AC LDR X0, [X19 + 0x20]!
	0x026008B0 CBNZ X0, 0x26008E4
	0x026008B4 ADRP X8, 0x1AF9000
	0x026008B8 LDR X8, [X8 + 0xCC0]
	0x026008BC LDR X0, [X8]
	0x026008C0 BL 0x1C16F10
	0x026008C4 MOV X1, X31
	0x026008C8 MOV X20, X0
	0x026008CC BL 0x33BDD8C
	0x026008D0 MOV X0, X19
	0x026008D4 MOV X1, X20
	0x026008D8 MOV X2, X31
	0x026008DC BL 0x1C24138
	0x026008E0 LDR X0, [X19]
	0x026008E4 LDP X20, X19, [X31 + 0x10]
	0x026008E8 LDR X30, [X31], #0x20
	0x026008EC RET
	0x026008F0 LDR W8, [X0 + 0x1C]
	0x026008F4 ADD W8, W8, 0x1
	0x026008F8 STP W31, W8, [X0 + 0x18]
	0x026008FC RET
	0x02600900 STR X30, [X31 - 0x10]!
	0x02600904 LDR W8, [X0 + 0x18]
	0x02600908 CBZ W8, 0x2600930
	0x0260090C LDR X9, [X2 + 0x20]
	0x02600910 LDR X0, [X0 + 0x10]
	0x02600914 SUB W2, W8, 0x1
	0x02600918 LDR X9, [X9 + 0xC0]
	0x0260091C LDR X3, [X9 + 0x30]
	0x02600920 BL 0x20F7B08

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, X2
	013 Move X21, X1
	014 Move X22, X0
	015 Move W23, W31
	016 Move [X31+12], W31
	017 Move X19, [X22+16]
	018 Call 0x1C17D44
	019 Move [X31+12], W31
	020 Add X1, X31, 12
	021 Move X0, X19
	022 Move X2, X31
	023 Call Monitor.Enter, X0, X1
	024 Compare X19, 0
	025 JumpIfEqual {95}
	026 Move W8, [X19+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W24, 5
	029 Subtract X25, X24, 5
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Add X26, X19, W25
	032 Add X26, X26, 32
	033 Move X9, [X26]
	034 Compare X9, 0
	035 JumpIfEqual {47}
	036 Subtract W8, W8, 1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X25, [X22+16]
	039 Call 0x1C17D44
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W8, [X19+24]
	042 Add X24, X24, 1
	043 Subtract W9, W24, 5
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X24, X31
	046 Move W27, 1
	047 Call 0x1C17D44
	048 Move X24, X31
	049 Move W27, W31
	050 Move [X26], X21
	051 Move X8, [X20+32]
	052 Move X8, [X8+192]
	053 Move X0, [X8]
	054 Move W8, [X0+309]
	055 Move TEMP, X8
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {60}
	059 Call 0x1C5D684
	060 Move W8, [X19+24]
	061 Move W1, W8
	062 ShiftRight W1, 31
	063 And W1, W1, 0x3FFFFFFF
	064 Call 0x1C17D6C
	065 Move X26, X0
	066 Subtract X25, X24, 4
	067 Move X0, X19
	068 Move X1, X26
	069 Move W2, W25
	070 Move X3, X31
	071 Call Array.Copy, X0, X1, X2
	072 Compare X26, 0
	073 JumpIfEqual {96}
	074 Move W8, [X26+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move [X26], X21
	077 Call 0x1C17D44
	078 Move X24, X31
	079 Move W27, W31
	080 Move [X22+16], X26
	081 Move W23, W25
	082 Move W8, [X31+12]
	083 Compare W8, 0
	084 JumpIfEqual {88}
	085 Move X0, X19
	086 Move X1, X31
	087 Call Monitor.Exit, X0
	088 Compare X24, 0
	089 JumpIfNotEqual {116}
	090 Move TEMP, X27
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {17}
	094 Call 0x1C17F28
	095 Call 0x1C17F20
	096 Call 0x1C17F20
	097 Call 0x1C17F28
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Call 0x3EB2AD0
	100 Move X24, [X0]
	101 Call 0x3EB2AE0
	102 Move W27, W31
	103 Move W0, W23
	104 Move X20, [X31+80]
	105 Move X19, [X31+88]
	106 Move X22, [X31+64]
	107 Move X21, [X31+72]
	108 Move X24, [X31+48]
	109 Move X23, [X31+56]
	110 Move X26, [X31+32]
	111 Move X25, [X31+40]
	112 Move X30, [X31+16]
	113 Move X27, [X31+24]
	114 Add X31, X31, 96
	115 Return X0
	116 Move X0, X24
	117 Call 0x1C17F18
	118 Move X20, X0
	119 Move X24, X31
	120 Move X20, X0
	121 Move W8, [X31+12]
	122 Compare W8, 0
	123 JumpIfEqual {127}
	124 Move X0, X19
	125 Move X1, X31
	126 Call Monitor.Exit, X0
	127 Compare X24, 0
	128 JumpIfNotEqual {131}
	129 Move X0, X20
	130 Call 0x1D2D690
	131 Move X0, X24
	132 Call 0x1C17F18
	133 Call 0x1991590

Method: System.Void Remove(T e)

Disassembly:
	0x02600924 ADDS W31, W0, 0x1
	0x02600928 CSET W0, NE
	0x0260092C B 0x2600934
	0x02600930 MOV W0, W31
	0x02600934 LDR X30, [X31], #0x10
	0x02600938 RET
	0x0260093C STR X30, [X31 - 0x30]!
	0x02600940 STP X22, X21, [X31 + 0x10]
	0x02600944 STP X20, X19, [X31 + 0x20]
	0x02600948 MOV X19, X3
	0x0260094C CBZ X1, 0x2600A60
	0x02600950 MOV X21, X1
	0x02600954 MOV X22, X0
	0x02600958 MOV X0, X1
	0x0260095C MOV X1, X31
	0x02600960 MOV W20, W2
	0x02600964 BL 0x339FCE4
	0x02600968 CMP W0, 0x1
	0x0260096C B.NE 0x2600A94
	0x02600970 MOV X0, X21
	0x02600974 MOV W1, W31
	0x02600978 MOV X2, X31
	0x0260097C BL 0x339FA30
	0x02600980 CBNZ W0, 0x2600AB4
	0x02600984 TBNZ X20, 0x1F, 0x26009F4
	0x02600988 MOV X0, X21
	0x0260098C MOV X1, X31
	0x02600990 BL 0x3395B7C
	0x02600994 CMP W0, W20
	0x02600998 B.LT 0x26009F4
	0x0260099C MOV X0, X21
	0x026009A0 MOV X1, X31
	0x026009A4 BL 0x3395B7C
	0x026009A8 LDR W4, [X22 + 0x18]
	0x026009AC SUB W8, W0, W20
	0x026009B0 CMP W8, W4
	0x026009B4 B.LT 0x2600AFC
	0x026009B8 LDR X0, [X22 + 0x10]
	0x026009BC MOV W1, W31
	0x026009C0 MOV X2, X21
	0x026009C4 MOV W3, W20
	0x026009C8 MOV X5, X31
	0x026009CC BL 0x339FCE8
	0x026009D0 LDR W2, [X22 + 0x18]
	0x026009D4 MOV X0, X21
	0x026009D8 MOV W1, W20
	0x026009DC MOV X3, X31
	0x026009E0 BL 0x33A1B8C
	0x026009E4 LDP X20, X19, [X31 + 0x20]
	0x026009E8 LDP X22, X21, [X31 + 0x10]
	0x026009EC LDR X30, [X31], #0x30
	0x026009F0 RET
	0x026009F4 STR W20, [X31 + 0xC]
	0x026009F8 ADRP X0, 0x1AF3000
	0x026009FC LDR X0, [X0 + 0x758]
	0x02600A00 BL 0x1C16D08
	0x02600A04 ADD X1, X31, 0xC
	0x02600A08 BL 0x1C16E04
	0x02600A0C MOV X20, X0
	0x02600A10 ADRP X0, 0x1AFB000
	0x02600A14 LDR X0, [X0 + 0x760]
	0x02600A18 BL 0x1C16D08
	0x02600A1C BL 0x1C16F10
	0x02600A20 MOV X21, X0
	0x02600A24 ADRP X0, 0x1B1D000
	0x02600A28 LDR X0, [X0 + 0x2B0]
	0x02600A2C BL 0x1C16D08
	0x02600A30 MOV X22, X0
	0x02600A34 ADRP X0, 0x1B1B000
	0x02600A38 LDR X0, [X0 + 0x660]
	0x02600A3C BL 0x1C16D08
	0x02600A40 MOV X3, X0
	0x02600A44 MOV X0, X21
	0x02600A48 MOV X1, X22
	0x02600A4C MOV X2, X20
	0x02600A50 MOV X4, X31
	0x02600A54 BL 0x3312C8C
	0x02600A58 MOV X0, X21
	0x02600A5C B 0x2600B30
	0x02600A60 ADRP X0, 0x1AF8000
	0x02600A64 LDR X0, [X0 + 0x528]
	0x02600A68 BL 0x1C16D08
	0x02600A6C BL 0x1C16F10
	0x02600A70 MOV X20, X0
	0x02600A74 ADRP X0, 0x1B1B000
	0x02600A78 LDR X0, [X0 + 0x640]
	0x02600A7C BL 0x1C16D08
	0x02600A80 MOV X1, X0
	0x02600A84 MOV X0, X20
	0x02600A88 MOV X2, X31
	0x02600A8C BL 0x330E100
	0x02600A90 B 0x2600B2C
	0x02600A94 ADRP X0, 0x1AFB000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, [X0+16]
	009 Move X20, X0
	010 Move X21, X1
	011 Call 0x1C17D44
	012 Move [X31+12], W31
	013 Add X1, X31, 12
	014 Move X0, X19
	015 Move X2, X31
	016 Call Monitor.Enter, X0, X1
	017 Move W22, W31
	018 Move X23, [X20+16]
	019 Call 0x1C17D44
	020 Compare X23, 0
	021 JumpIfEqual {62}
	022 Move W8, [X23+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X24, [X20+16]
	025 Call 0x1C17D44
	026 Compare X24, 0
	027 JumpIfEqual {63}
	028 Move W8, [X24+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X23, W22
	031 Add X8, X24, X23
	032 Move X8, [X8+32]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Add W22, W22, 1
	035 Move X21, X31
	036 Move X20, [X20+16]
	037 Call 0x1C17D44
	038 Compare X20, 0
	039 JumpIfEqual {67}
	040 Move W8, [X20+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Call 0x1C17D44
	043 Add X8, X20, X23
	044 Move X21, X31
	045 Move [X8+32], X31
	046 Move W8, [X31+12]
	047 Compare W8, 0
	048 JumpIfEqual {52}
	049 Move X0, X19
	050 Move X1, X31
	051 Call Monitor.Exit, X0
	052 Compare X21, 0
	053 JumpIfNotEqual {65}
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X24, [X31+16]
	059 Move X23, [X31+24]
	060 Move X30, [X31+64]
	061 Return 
	062 Call 0x1C17F20
	063 Call 0x1C17F20
	064 Call 0x1C17F28
	065 Move X0, X21
	066 Call 0x1C17F18
	067 Call 0x1C17F20
	068 Call 0x1C17F28
	069 Move X20, X0
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X0, X20
	072 Call 0x3EB2AD0
	073 Move X21, [X0]
	074 Call 0x3EB2AE0
	075 Move X21, X31
	076 Move X20, X0
	077 Move W8, [X31+12]
	078 Compare W8, 0
	079 JumpIfEqual {83}
	080 Move X0, X19
	081 Move X1, X31
	082 Call Monitor.Exit, X0
	083 Compare X21, 0
	084 JumpIfNotEqual {87}
	085 Move X0, X20
	086 Call 0x1D2D690
	087 Move X0, X21
	088 Call 0x1C17F18
	089 Call 0x1991590

