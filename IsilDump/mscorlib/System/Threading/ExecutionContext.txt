Type: System.Threading.ExecutionContext

Method: System.Boolean get_isNewCapture()

Disassembly:
	0x033E5848 BL 0x1C16D08
	0x033E584C BL 0x1C16F10
	0x033E5850 MOV X19, X0
	0x033E5854 ADRP X0, 0xD48000
	0x033E5858 LDR X0, [X0 + 0x310]

ISIL:
	001 Move W8, [X0+48]
	002 Move W9, 5
	003 And W31, W8, W9
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.Void set_isNewCapture(System.Boolean value)

Disassembly:
	0x033E585C BL 0x1C16D08
	0x033E5860 MOV X1, X0
	0x033E5864 MOV X0, X19
	0x033E5868 BL 0x33DD060

ISIL:
	001 Move W8, [X0+48]
	002 NotImplemented "Instruction BFM not yet implemented."
	003 Move [X0+48], W8
	004 Return 

Method: System.Boolean get_isFlowSuppressed()

Disassembly:
	0x033E586C ADRP X0, 0xD48000
	0x033E5870 LDR X0, [X0 + 0x318]
	0x033E5874 BL 0x1C16D08

ISIL:
	001 Move W8, [X0+48]
	002 Move W0, W8
	003 ShiftRight W0, 1
	004 And W0, W0, 1
	005 Return X0

Method: System.Void set_isFlowSuppressed(System.Boolean value)

Disassembly:
	0x033E5878 MOV X1, X0
	0x033E587C MOV X0, X19
	0x033E5880 BL 0x1C16DEC
	0x033E5884 STP X30, X19, [X31 - 0x10]!
	0x033E5888 MOV X19, X0
	0x033E588C BL 0x1C4BE54
	0x033E5890 TBZ X0, 0x0, 0x33E58A0
	0x033E5894 MOV X0, X19

ISIL:
	001 Move W8, [X0+48]
	002 And W31, W1, 1
	003 Move W9, 2
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 And W8, W8, 0xFFFFFFFD
	006 Or W8, W8, W9
	007 Move [X0+48], W8
	008 Return 

Method: System.Boolean get_IsPreAllocatedDefault()

Disassembly:
	0x033E5898 LDP X30, X19, [X31], #0x10
	0x033E589C B 0x1C4BED4
	0x033E58A0 ADRP X0, 0xD48000

ISIL:
	001 Move W8, [X0+48]
	002 Move W0, W8
	003 ShiftRight W0, 2
	004 And W0, W0, 3
	005 Return X0

Method: System.Void .ctor()

Disassembly:
	0x033E58A4 LDR X0, [X0 + 0x248]
	0x033E58A8 BL 0x1C16D08

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .ctor(System.Boolean isPreAllocatedDefault)

Disassembly:
	0x033E58AC BL 0x1C16F10
	0x033E58B0 MOV X19, X0
	0x033E58B4 ADRP X0, 0xD48000
	0x033E58B8 LDR X0, [X0 + 0x310]
	0x033E58BC BL 0x1C16D08
	0x033E58C0 MOV X1, X0
	0x033E58C4 MOV X0, X19
	0x033E58C8 BL 0x33DD060
	0x033E58CC ADRP X0, 0xD48000
	0x033E58D0 LDR X0, [X0 + 0x320]
	0x033E58D4 BL 0x1C16D08
	0x033E58D8 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, W1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Move TEMP, X20
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {14}
	012 Move W8, 4
	013 Move [X19+48], W8
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Return 

Method: System.Void OnAsyncLocalContextChanged(System.Threading.ExecutionContext previous, System.Threading.ExecutionContext current)

Disassembly:
	0x033E5390 LDR X0, [X23]
	0x033E5394 BL 0x1C16F10
	0x033E5398 MOV X1, X31
	0x033E539C MOV X20, X0
	0x033E53A0 BL 0x33BDD8C
	0x033E53A4 CBZ X20, 0x33E53D8
	0x033E53A8 LDR W8, [X20 + 0x30]
	0x033E53AC STR X19, [X20 + 0x10]
	0x033E53B0 STR X21, [X20 + 0x20]
	0x033E53B4 STP X24, X22, [X20 + 0x38]
	0x033E53B8 ORR W8, W8, 0x1
	0x033E53BC STR W8, [X20 + 0x30]
	0x033E53C0 MOV X0, X20
	0x033E53C4 LDP X20, X19, [X31 + 0x30]
	0x033E53C8 LDP X22, X21, [X31 + 0x20]
	0x033E53CC LDP X24, X23, [X31 + 0x10]
	0x033E53D0 LDR X30, [X31], #0x40
	0x033E53D4 RET
	0x033E53D8 BL 0x1C16F20
	0x033E53DC STR X30, [X31 - 0x20]!
	0x033E53E0 STP X20, X19, [X31 + 0x10]
	0x033E53E4 ADRP X19, 0xFF8000
	0x033E53E8 ADRP X20, 0xD36000
	0x033E53EC LDRB W8, [X19 + 0x3C8]
	0x033E53F0 LDR X20, [X20 + 0x580]
	0x033E53F4 TBNZ X8, 0x0, 0x33E540C
	0x033E53F8 ADRP X0, 0xD36000
	0x033E53FC LDR X0, [X0 + 0x580]
	0x033E5400 BL 0x1C16CF4
	0x033E5404 MOVZ W8, 0x1
	0x033E5408 STRB W8, [X19 + 0x3C8]
	0x033E540C LDR X0, [X20]
	0x033E5410 LDR W8, [X0 + 0xE0]
	0x033E5414 CBNZ W8, 0x33E541C
	0x033E5418 BL 0x1C16DFC
	0x033E541C LDP X20, X19, [X31 + 0x10]
	0x033E5420 MOVZ W1, 0x3
	0x033E5424 LDR X30, [X31], #0x20
	0x033E5428 B 0x33E5250
	0x033E542C STR X30, [X31 - 0x10]!
	0x033E5430 LDR X0, [X0]
	0x033E5434 CBZ X0, 0x33E543C
	0x033E5438 BL 0x33E48DC
	0x033E543C LDR X30, [X31], #0x10
	0x033E5440 RET
	0x033E5444 STR X30, [X31 - 0x30]!
	0x033E5448 STP X22, X21, [X31 + 0x10]
	0x033E544C STP X20, X19, [X31 + 0x20]
	0x033E5450 ADRP X21, 0xFF8000
	0x033E5454 LDRB W8, [X21 + 0x3CA]
	0x033E5458 MOV X19, X1
	0x033E545C MOV X20, X0
	0x033E5460 TBNZ X8, 0x0, 0x33E5490
	0x033E5464 ADRP X0, 0xD3F000
	0x033E5468 LDR X0, [X0 + 0x7C0]
	0x033E546C BL 0x1C16CF4
	0x033E5470 ADRP X0, 0xD0E000
	0x033E5474 LDR X0, [X0 + 0x6C0]
	0x033E5478 BL 0x1C16CF4
	0x033E547C ADRP X0, 0xD48000
	0x033E5480 LDR X0, [X0 + 0x2E0]
	0x033E5484 BL 0x1C16CF4
	0x033E5488 MOVZ W8, 0x1
	0x033E548C STRB W8, [X21 + 0x3CA]
	0x033E5490 CBZ X19, 0x33E5508
	0x033E5494 LDR X20, [X20 + 0x20]
	0x033E5498 CBZ X20, 0x33E54F8
	0x033E549C ADRP X8, 0xD0E000
	0x033E54A0 LDR X8, [X8 + 0x6C0]
	0x033E54A4 ADRP X22, 0xD48000
	0x033E54A8 LDR X0, [X8]
	0x033E54AC ADRP X8, 0xD3F000
	0x033E54B0 LDR X8, [X8 + 0x7C0]
	0x033E54B4 LDR W9, [X0 + 0xE0]
	0x033E54B8 LDR X21, [X8]
	0x033E54BC LDR X22, [X22 + 0x2E0]
	0x033E54C0 CBNZ W9, 0x33E54C8
	0x033E54C4 BL 0x1C16DFC
	0x033E54C8 MOV X0, X21
	0x033E54CC MOV X1, X31
	0x033E54D0 BL 0x338C698
	0x033E54D4 LDR X1, [X22]
	0x033E54D8 MOV X3, X0
	0x033E54DC MOV X0, X19
	0x033E54E0 MOV X2, X20
	0x033E54E4 LDP X20, X19, [X31 + 0x20]
	0x033E54E8 LDP X22, X21, [X31 + 0x10]
	0x033E54EC MOV X4, X31
	0x033E54F0 LDR X30, [X31], #0x30
	0x033E54F4 B 0x32A89BC
	0x033E54F8 LDP X20, X19, [X31 + 0x20]
	0x033E54FC LDP X22, X21, [X31 + 0x10]
	0x033E5500 LDR X30, [X31], #0x30
	0x033E5504 RET
	0x033E5508 ADRP X0, 0xD13000
	0x033E550C LDR X0, [X0 + 0x528]
	0x033E5510 BL 0x1C16D08
	0x033E5514 BL 0x1C16F10
	0x033E5518 MOV X19, X0
	0x033E551C ADRP X0, 0xD38000
	0x033E5520 LDR X0, [X0 + 0x2D8]
	0x033E5524 BL 0x1C16D08
	0x033E5528 MOV X1, X0
	0x033E552C MOV X0, X19
	0x033E5530 MOV X2, X31
	0x033E5534 BL 0x330E100
	0x033E5538 ADRP X0, 0xD48000
	0x033E553C LDR X0, [X0 + 0x2E8]
	0x033E5540 BL 0x1C16D08
	0x033E5544 MOV X1, X0
	0x033E5548 MOV X0, X19
	0x033E554C BL 0x1C16DEC
	0x033E5550 STR X30, [X31 - 0x30]!
	0x033E5554 STP X22, X21, [X31 + 0x10]
	0x033E5558 STP X20, X19, [X31 + 0x20]
	0x033E555C ADRP X21, 0xFF8000
	0x033E5560 LDRB W8, [X21 + 0x3CB]
	0x033E5564 MOV X20, X1
	0x033E5568 MOV X19, X0
	0x033E556C TBNZ X8, 0x0, 0x33E5590
	0x033E5570 ADRP X0, 0xD3F000
	0x033E5574 LDR X0, [X0 + 0x370]
	0x033E5578 BL 0x1C16CF4
	0x033E557C ADRP X0, 0xD48000
	0x033E5580 LDR X0, [X0 + 0x2E0]
	0x033E5584 BL 0x1C16CF4
	0x033E5588 MOVZ W8, 0x1
	0x033E558C STRB W8, [X21 + 0x3CB]
	0x033E5590 MOV X0, X19
	0x033E5594 MOV X1, X31
	0x033E5598 BL 0x33BDD8C
	0x033E559C CBZ X20, 0x33E5648
	0x033E55A0 MOV X0, X20
	0x033E55A4 MOV X1, X31
	0x033E55A8 BL 0x32A8830
	0x033E55AC CBZ X0, 0x33E5648
	0x033E55B0 MOV X1, X31
	0x033E55B4 MOV X20, X0
	0x033E55B8 BL 0x3291B70
	0x033E55BC TBZ X0, 0x0, 0x33E5638
	0x033E55C0 ADRP X21, 0xD48000
	0x033E55C4 ADRP X22, 0xD3F000
	0x033E55C8 LDR X21, [X21 + 0x2E0]
	0x033E55CC LDR X22, [X22 + 0x370]
	0x033E55D0 MOV X0, X20
	0x033E55D4 MOV X1, X31
	0x033E55D8 BL 0x3291A04
	0x033E55DC CBZ X0, 0x33E5648
	0x033E55E0 LDR X1, [X21]
	0x033E55E4 MOV X2, X31
	0x033E55E8 BL 0x322693C
	0x033E55EC TBZ X0, 0x0, 0x33E5628
	0x033E55F0 MOV X0, X20
	0x033E55F4 MOV X1, X31
	0x033E55F8 BL 0x3291A88
	0x033E55FC CBZ X0, 0x33E5624
	0x033E5600 LDR X1, [X22]
	0x033E5604 LDR X8, [X0]
	0x033E5608 CMP X8, X1
	0x033E560C B.NE 0x33E564C
	0x033E5610 STR X0, [X19 + 0x20]
	0x033E5614 LDR X8, [X0]
	0x033E5618 CMP X8, X1
	0x033E561C B.EQ 0x33E5628
	0x033E5620 B 0x33E564C
	0x033E5624 STR X31, [X19 + 0x20]
	0x033E5628 MOV X0, X20
	0x033E562C MOV X1, X31
	0x033E5630 BL 0x3291B70
	0x033E5634 TBNZ X0, 0x0, 0x33E55D0
	0x033E5638 LDP X20, X19, [X31 + 0x20]
	0x033E563C LDP X22, X21, [X31 + 0x10]
	0x033E5640 LDR X30, [X31], #0x30
	0x033E5644 RET
	0x033E5648 BL 0x1C16F20
	0x033E564C BL 0x1C171E0
	0x033E5650 STR X30, [X31 - 0x20]!
	0x033E5654 STP X20, X19, [X31 + 0x10]
	0x033E5658 ADRP X19, 0xFF8000
	0x033E565C ADRP X20, 0xD36000
	0x033E5660 LDRB W8, [X19 + 0x3CC]
	0x033E5664 LDR X20, [X20 + 0x580]
	0x033E5668 TBNZ X8, 0x0, 0x33E5680
	0x033E566C ADRP X0, 0xD36000
	0x033E5670 LDR X0, [X0 + 0x580]
	0x033E5674 BL 0x1C16CF4
	0x033E5678 MOVZ W8, 0x1
	0x033E567C STRB W8, [X19 + 0x3CC]
	0x033E5680 LDR X0, [X20]
	0x033E5684 BL 0x1C16F10
	0x033E5688 MOV X1, X31
	0x033E568C MOV X19, X0
	0x033E5690 BL 0x33BDD8C
	0x033E5694 MOVZ W8, 0x4
	0x033E5698 STR W8, [X19 + 0x30]
	0x033E569C LDR X8, [X20]
	0x033E56A0 LDR X8, [X8 + 0xB8]
	0x033E56A4 STR X19, [X8]
	0x033E56A8 LDR X0, [X20]
	0x033E56AC BL 0x1C16F10
	0x033E56B0 MOV X1, X31
	0x033E56B4 MOV X19, X0
	0x033E56B8 BL 0x33BDD8C
	0x033E56BC LDR X8, [X20]
	0x033E56C0 LDR X8, [X8 + 0xB8]
	0x033E56C4 STR X19, [X8 + 0x8]
	0x033E56C8 LDP X20, X19, [X31 + 0x10]
	0x033E56CC LDR X30, [X31], #0x20
	0x033E56D0 RET
	0x033E56D4 STR X1, [X0]
	0x033E56D8 RET
	0x033E56DC LDR X0, [X0]
	0x033E56E0 RET
	0x033E56E4 LDR X8, [X0]
	0x033E56E8 CBZ X8, 0x33E56F8
	0x033E56EC LDRB W8, [X8 + 0x30]
	0x033E56F0 UBFM W0, W8, 0x1, 0x1
	0x033E56F4 RET
	0x033E56F8 MOV W0, W31
	0x033E56FC RET
	0x033E5700 STR X30, [X31 - 0x20]!
	0x033E5704 STP X20, X19, [X31 + 0x10]
	0x033E5708 ADRP X0, 0xD48000
	0x033E570C LDR X0, [X0 + 0x2F0]
	0x033E5710 BL 0x1C16D08
	0x033E5714 MOV X1, X31
	0x033E5718 BL 0x33BDD84
	0x033E571C MOV X19, X0
	0x033E5720 ADRP X0, 0xD16000
	0x033E5724 LDR X0, [X0 + 0x578]
	0x033E5728 BL 0x1C16D08
	0x033E572C BL 0x1C16F10
	0x033E5730 MOV X20, X0
	0x033E5734 ADRP X0, 0xD48000
	0x033E5738 LDR X0, [X0 + 0x2F8]
	0x033E573C BL 0x1C16D08
	0x033E5740 MOV X2, X0
	0x033E5744 MOV X0, X20
	0x033E5748 MOV X1, X19
	0x033E574C MOV X3, X31
	0x033E5750 BL 0x330E16C
	0x033E5754 ADRP X0, 0xD48000
	0x033E5758 LDR X0, [X0 + 0x300]
	0x033E575C BL 0x1C16D08
	0x033E5760 MOV X1, X0
	0x033E5764 MOV X0, X20
	0x033E5768 BL 0x1C16DEC
	0x033E576C MOV X2, X1
	0x033E5770 MOVN W1, 0x0
	0x033E5774 B 0x33E5958
	0x033E5778 CBZ X0, 0x33E5788
	0x033E577C MOV X2, X0
	0x033E5780 MOV W0, W31
	0x033E5784 B 0x33E57D4
	0x033E5788 STP X30, X19, [X31 - 0x10]!
	0x033E578C ADRP X0, 0xD13000
	0x033E5790 LDR X0, [X0 + 0x528]
	0x033E5794 BL 0x1C16D08
	0x033E5798 BL 0x1C16F10
	0x033E579C MOV X19, X0
	0x033E57A0 ADRP X0, 0xD19000
	0x033E57A4 LDR X0, [X0 + 0x8A8]
	0x033E57A8 BL 0x1C16D08
	0x033E57AC MOV X1, X0
	0x033E57B0 MOV X0, X19
	0x033E57B4 MOV X2, X31
	0x033E57B8 BL 0x330E100
	0x033E57BC ADRP X0, 0xD48000
	0x033E57C0 LDR X0, [X0 + 0x308]
	0x033E57C4 BL 0x1C16D08
	0x033E57C8 MOV X1, X0
	0x033E57CC MOV X0, X19
	0x033E57D0 BL 0x1C16DEC
	0x033E57D4 STR X30, [X31 - 0x20]!
	0x033E57D8 STP X20, X19, [X31 + 0x10]
	0x033E57DC ADDS W31, W1, 0x2
	0x033E57E0 B.LE 0x33E580C
	0x033E57E4 MOV X0, X2
	0x033E57E8 MOV W19, W1
	0x033E57EC MOV X20, X2
	0x033E57F0 BL 0x1C4BE54
	0x033E57F4 TBZ X0, 0x0, 0x33E5840
	0x033E57F8 MOV X0, X20
	0x033E57FC MOV W1, W19
	0x033E5800 LDP X20, X19, [X31 + 0x10]
	0x033E5804 LDR X30, [X31], #0x20
	0x033E5808 B 0x1C4BE74
	0x033E580C ADRP X0, 0xD16000
	0x033E5810 LDR X0, [X0 + 0x760]
	0x033E5814 BL 0x1C16D08
	0x033E5818 BL 0x1C16F10
	0x033E581C MOV X19, X0
	0x033E5820 ADRP X0, 0xD47000
	0x033E5824 LDR X0, [X0 + 0xFD8]
	0x033E5828 BL 0x1C16D08
	0x033E582C MOV X1, X0
	0x033E5830 MOV X0, X19
	0x033E5834 MOV X2, X31
	0x033E5838 BL 0x3316014
	0x033E583C B 0x33E586C
	0x033E5840 ADRP X0, 0xD48000
	0x033E5844 LDR X0, [X0 + 0x248]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+104], X27
	004 Move [X31+112], X26
	005 Move [X31+120], X25
	006 Move [X31+128], X24
	007 Move [X31+136], X23
	008 Move [X31+144], X22
	009 Move [X31+152], X21
	010 Move [X31+160], X20
	011 Move [X31+168], X19
	012 Move X21, 0xFF9000
	013 Move W8, [X21+956]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0xD49000
	021 Move X0, [X0+664]
	022 Call 0x1C17CF4
	023 Move X0, 0xD49000
	024 Move X0, [X0+672]
	025 Call 0x1C17CF4
	026 Move X0, 0xD49000
	027 Move X0, [X0+680]
	028 Call 0x1C17CF4
	029 Move X0, 0xD49000
	030 Move X0, [X0+688]
	031 Call 0x1C17CF4
	032 Move X0, 0xD49000
	033 Move X0, [X0+696]
	034 Call 0x1C17CF4
	035 Move X0, 0xD49000
	036 Move X0, [X0+704]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+956], W8
	040 Move [X31+64], X31
	041 Move [X31+72], X31
	042 Move [X31+80], X31
	043 Move [X31+48], X31
	044 Move [X31+56], X31
	045 Move [X31+32], X31
	046 Move [X31+40], X31
	047 Compare X20, 0
	048 JumpIfEqual {129}
	049 Move X21, [X20+64]
	050 Compare X21, 0
	051 JumpIfEqual {130}
	052 Move X8, 0xD49000
	053 Move X8, [X8+704]
	054 Move X0, X21
	055 Move X1, [X8]
	056 Add X8, X31, 8
	057 Call List`1<Object>.GetEnumerator, X0
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 Move X8, [X31+24]
	060 Move X25, 0xD49000
	061 Move X26, 0xD49000
	062 Move X25, [X25+680]
	063 Move X26, [X26+696]
	064 Move [X31+4], V0
	065 Move [X31+80], X8
	066 Move X27, 0xD49000
	067 Move X27, [X27+664]
	068 Move X1, [X25]
	069 Add X0, X31, 64
	070 Call Enumerator<Object>.MoveNext, X0
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {124}
	075 Move [X31+56], X31
	076 Move X0, [X20+56]
	077 Move X22, [X31+80]
	078 Compare X0, 0
	079 JumpIfEqual {84}
	080 Move X3, [X27]
	081 Add X2, X31, 56
	082 Move X1, X22
	083 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	084 Move [X31+48], X31
	085 Compare X19, 0
	086 JumpIfEqual {95}
	087 Move X0, [X19+56]
	088 Compare X0, 0
	089 JumpIfEqual {95}
	090 Move X3, [X27]
	091 Add X2, X31, 48
	092 Move X1, X22
	093 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	094 Move X23, [X31+48]
	095 Move X23, X31
	096 Move X24, [X31+56]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Compare X22, 0
	099 JumpIfEqual {231}
	100 Move X8, [X22]
	101 Move X1, [X26]
	102 NotImplemented "Instruction LDRH not yet implemented."
	103 Compare X9, 0
	104 JumpIfEqual {111}
	105 Move X10, [X8+176]
	106 Add X10, X10, 8
	107 NotImplemented "Instruction LDUR not yet implemented."
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Subtract X9, X9, 1
	110 Add X10, X10, 16
	111 Move X0, X22
	112 Move W2, W31
	113 Call 0x1C5D788
	114 NotImplemented "Instruction LDRSW not yet implemented."
	115 Add X8, X8, X9
	116 Add X0, X8, 312
	117 Move X8, [X0]
	118 Move X4, [X0+8]
	119 Move W3, 1
	120 Move X0, X22
	121 Move X1, X24
	122 Move X2, X23
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move X8, 0xD49000
	125 Move X8, [X8+672]
	126 Add X0, X31, 64
	127 Move X1, [X8]
	128 Call Enumerator<Object>.Dispose, X0
	129 Move X21, X31
	130 Compare X19, 0
	131 JumpIfEqual {219}
	132 Move X0, [X19+64]
	133 Compare X0, 0
	134 JumpIfEqual {219}
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X8, 0xD49000
	137 Move X8, [X8+704]
	138 Move X1, [X8]
	139 Add X8, X31, 8
	140 Call List`1<Object>.GetEnumerator, X0
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 Move X8, [X31+24]
	143 Move X24, 0xD49000
	144 Move X25, 0xD49000
	145 Move X24, [X24+680]
	146 Move X25, [X25+696]
	147 Move [X31+4], V0
	148 Move [X31+80], X8
	149 Move X26, 0xD49000
	150 Move X26, [X26+664]
	151 Move X1, [X24]
	152 Add X0, X31, 64
	153 Call Enumerator<Object>.MoveNext, X0
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfNotEqual {211}
	158 Move X21, [X31+80]
	159 Move [X31+40], X31
	160 Compare X20, 0
	161 JumpIfEqual {173}
	162 Move X0, [X20+56]
	163 Compare X0, 0
	164 JumpIfEqual {173}
	165 Move X3, [X26]
	166 Add X2, X31, 40
	167 Move X1, X21
	168 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	169 Move TEMP, X0
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfEqual {151}
	173 Move [X31+32], X31
	174 Move X0, [X19+56]
	175 Compare X0, 0
	176 JumpIfEqual {182}
	177 Move X3, [X26]
	178 Add X2, X31, 32
	179 Move X1, X21
	180 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	181 Move X22, [X31+32]
	182 Move X22, X31
	183 Move X23, [X31+40]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Compare X21, 0
	186 JumpIfEqual {232}
	187 Move X8, [X21]
	188 Move X1, [X25]
	189 NotImplemented "Instruction LDRH not yet implemented."
	190 Compare X9, 0
	191 JumpIfEqual {198}
	192 Move X10, [X8+176]
	193 Add X10, X10, 8
	194 NotImplemented "Instruction LDUR not yet implemented."
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Subtract X9, X9, 1
	197 Add X10, X10, 16
	198 Move X0, X21
	199 Move W2, W31
	200 Call 0x1C5D788
	201 NotImplemented "Instruction LDRSW not yet implemented."
	202 Add X8, X8, X9
	203 Add X0, X8, 312
	204 Move X8, [X0]
	205 Move X4, [X0+8]
	206 Move W3, 1
	207 Move X0, X21
	208 Move X1, X23
	209 Move X2, X22
	210 NotImplemented "Instruction BLR not yet implemented."
	211 Move X20, X31
	212 Move X8, 0xD49000
	213 Move X8, [X8+672]
	214 Move X1, [X8]
	215 Add X0, X31, 64
	216 Call Enumerator<Object>.Dispose, X0
	217 Compare X20, 0
	218 JumpIfNotEqual {233}
	219 Move X20, [X31+160]
	220 Move X19, [X31+168]
	221 Move X22, [X31+144]
	222 Move X21, [X31+152]
	223 Move X24, [X31+128]
	224 Move X23, [X31+136]
	225 Move X26, [X31+112]
	226 Move X25, [X31+120]
	227 Move X30, [X31+96]
	228 Move X27, [X31+104]
	229 Add X31, X31, 176
	230 Return 
	231 Call 0x1C17F20
	232 Call 0x1C17F20
	233 Move X0, X20
	234 Call 0x1C17F18
	235 Move X19, X1
	236 Move X22, X0
	237 Move X19, X1
	238 Move X22, X0
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Move X0, X22
	241 Call 0x3EB2AD0
	242 Move X20, [X0]
	243 Call 0x3EB2AE0
	244 Move X20, X31
	245 Move X8, 0xD49000
	246 Move X8, [X8+672]
	247 Move X1, [X8]
	248 Add X0, X31, 64
	249 Call Enumerator<Object>.Dispose, X0
	250 Compare X20, 0
	251 JumpIfNotEqual {284}
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Move X0, X22
	254 Call 0x3EB2AD0
	255 Move X19, X0
	256 Move X0, 0xD0F000
	257 Move X0, [X0+2000]
	258 Call 0x1C17D08
	259 Move X8, [X19]
	260 Move X1, [X8]
	261 Call 0x1C18270
	262 Move TEMP, X0
	263 And TEMP, TEMP, 1
	264 Compare TEMP, 1
	265 JumpIfNotEqual {276}
	266 Move X19, [X19]
	267 Call 0x3EB2AE0
	268 Move X0, 0xD49000
	269 Move X0, [X0+712]
	270 Call 0x1C17D08
	271 Move X1, X31
	272 Call Environment.GetResourceString, X0
	273 Move X1, X19
	274 Move X2, X31
	275 Call Environment.FailFast, X0, X1
	276 Move W0, 8
	277 Call 0x3EB2AF0
	278 Move X8, [X19]
	279 Move [X0], X8
	280 Move X1, 0xAD0000
	281 Add X1, X1, 3672
	282 Move X2, X31
	283 Call 0x3EB2B00
	284 Move X0, X20
	285 Call 0x1C17F18
	286 Move X19, X1
	287 Move X22, X0
	288 Move X22, X0
	289 Call 0x3EB2AE0
	290 Move X22, X0
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Move X0, X22
	293 Call 0x3EB2AD0
	294 Move X23, [X0]
	295 Call 0x3EB2AE0
	296 Move X8, 0xD49000
	297 Move X8, [X8+672]
	298 Add X0, X31, 64
	299 Move X1, [X8]
	300 Call Enumerator<Object>.Dispose, X0
	301 Compare X23, 0
	302 JumpIfEqual {130}
	303 Move X0, X23
	304 Call 0x1C17F18
	305 Move X23, X31
	306 Move X22, X0
	307 Move X8, 0xD49000
	308 Move X8, [X8+672]
	309 Move X1, [X8]
	310 Add X0, X31, 64
	311 Call Enumerator<Object>.Dispose, X0
	312 Compare X23, 0
	313 JumpIfNotEqual {316}
	314 Move X0, X22
	315 Call 0x1D2D690
	316 Move X0, X23
	317 Call 0x1C17F18
	318 Call 0x1991590

Method: System.Runtime.Remoting.Messaging.LogicalCallContext get_LogicalCallContext()

Disassembly:
	0x033E58DC MOV X0, X19
	0x033E58E0 BL 0x1C16DEC
	0x033E58E4 STP X30, X19, [X31 - 0x10]!
	0x033E58E8 MOV X19, X0
	0x033E58EC BL 0x1C4BE54
	0x033E58F0 TBZ X0, 0x0, 0x33E5900
	0x033E58F4 MOV X0, X19
	0x033E58F8 LDP X30, X19, [X31], #0x10
	0x033E58FC B 0x1C4BEF4
	0x033E5900 ADRP X0, 0xD48000
	0x033E5904 LDR X0, [X0 + 0x248]
	0x033E5908 BL 0x1C16D08
	0x033E590C BL 0x1C16F10
	0x033E5910 MOV X19, X0
	0x033E5914 ADRP X0, 0xD48000
	0x033E5918 LDR X0, [X0 + 0x310]
	0x033E591C BL 0x1C16D08
	0x033E5920 MOV X1, X0
	0x033E5924 MOV X0, X19
	0x033E5928 BL 0x33DD060
	0x033E592C ADRP X0, 0xD48000
	0x033E5930 LDR X0, [X0 + 0x328]
	0x033E5934 BL 0x1C16D08
	0x033E5938 MOV X1, X0
	0x033E593C MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFF9000
	005 Move W8, [X20+957]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD40000
	012 Move X0, [X0+880]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+957], W8
	016 Move X20, [X19+32]
	017 Compare X20, 0
	018 JumpIfNotEqual {27}
	019 Move X8, 0xD40000
	020 Move X8, [X8+880]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call LogicalCallContext..ctor, X0
	026 Move [X19+32], X20
	027 Move X0, X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0

Method: System.Void set_LogicalCallContext(System.Runtime.Remoting.Messaging.LogicalCallContext value)

Disassembly:
	0x033E5940 BL 0x1C16DEC
	0x033E5944 B 0x1C4BE54

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Runtime.Remoting.Messaging.IllogicalCallContext get_IllogicalCallContext()

Disassembly:
	0x033E5948 B 0x1C4BED4
	0x033E594C B 0x1C4BEF4
	0x033E5950 B 0x1C4BE74
	0x033E5954 B 0x1C4BF14
	0x033E5958 STP X30, X19, [X31 - 0x10]!
	0x033E595C CBZ X0, 0x33E5970
	0x033E5960 ADDS W31, W1, 0x2
	0x033E5964 B.LE 0x33E59A4
	0x033E5968 LDP X30, X19, [X31], #0x10
	0x033E596C B 0x1C4BF14
	0x033E5970 ADRP X0, 0xD13000
	0x033E5974 LDR X0, [X0 + 0x528]
	0x033E5978 BL 0x1C16D08
	0x033E597C BL 0x1C16F10
	0x033E5980 MOV X19, X0
	0x033E5984 ADRP X0, 0xD19000
	0x033E5988 LDR X0, [X0 + 0x8A8]
	0x033E598C BL 0x1C16D08
	0x033E5990 MOV X1, X0
	0x033E5994 MOV X0, X19
	0x033E5998 MOV X2, X31
	0x033E599C BL 0x330E100
	0x033E59A0 B 0x33E59D4
	0x033E59A4 ADRP X0, 0xD16000
	0x033E59A8 LDR X0, [X0 + 0x760]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFF9000
	005 Move W8, [X20+958]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD40000
	012 Move X0, [X0+1888]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+958], W8
	016 Move X20, [X19+40]
	017 Compare X20, 0
	018 JumpIfNotEqual {27}
	019 Move X8, 0xD40000
	020 Move X8, [X8+1888]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call IllogicalCallContext..ctor, X0
	026 Move [X19+40], X20
	027 Move X0, X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0

Method: System.Void set_IllogicalCallContext(System.Runtime.Remoting.Messaging.IllogicalCallContext value)

Disassembly:
	0x033E59AC BL 0x1C16D08
	0x033E59B0 BL 0x1C16F10

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.Threading.SynchronizationContext get_SynchronizationContext()

Disassembly:
	0x033E59B4 MOV X19, X0
	0x033E59B8 ADRP X0, 0xD47000

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_SynchronizationContext(System.Threading.SynchronizationContext value)

Disassembly:
	0x033E59BC LDR X0, [X0 + 0xFD8]
	0x033E59C0 BL 0x1C16D08

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Threading.SynchronizationContext get_SynchronizationContextNoFlow()

Disassembly:
	0x033E59C4 MOV X1, X0
	0x033E59C8 MOV X0, X19

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_SynchronizationContextNoFlow(System.Threading.SynchronizationContext value)

Disassembly:
	0x033E59CC MOV X2, X31
	0x033E59D0 BL 0x3316014

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.Void Dispose()

Disassembly:
	0x033E59D4 ADRP X0, 0xD48000

ISIL:
	001 Return 

Method: System.Void Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state)

Disassembly:
	0x033E2324 B.NE 0x33E2330
	0x033E2328 LDR X9, [X1 + 0x60]
	0x033E232C STR X9, [X0 + 0x30]
	0x033E2330 LDR X9, [X0 + 0x38]
	0x033E2334 CMP X9, X1
	0x033E2338 B.NE 0x33E2340
	0x033E233C STR X11, [X0 + 0x38]
	0x033E2340 STP X31, X31, [X10]
	0x033E2344 MOV W0, W8
	0x033E2348 LDR X30, [X31], #0x10
	0x033E234C RET
	0x033E2350 BL 0x1C16F20
	0x033E2354 MOVZ W1, 0x1
	0x033E2358 B 0x33E235C
	0x033E235C STR X30, [X31 - 0x50]!
	0x033E2360 STP X26, X25, [X31 + 0x10]
	0x033E2364 STP X24, X23, [X31 + 0x20]
	0x033E2368 STP X22, X21, [X31 + 0x30]
	0x033E236C STP X20, X19, [X31 + 0x40]
	0x033E2370 ADRP X19, 0xFFB000
	0x033E2374 LDRB W8, [X19 + 0x3A9]
	0x033E2378 MOV W22, W1
	0x033E237C MOV X21, X0
	0x033E2380 TBNZ X8, 0x0, 0x33E2398
	0x033E2384 ADRP X0, 0xD40000
	0x033E2388 LDR X0, [X0 + 0xEB0]
	0x033E238C BL 0x1C16CF4
	0x033E2390 MOVZ W8, 0x1
	0x033E2394 STRB W8, [X19 + 0x3A9]
	0x033E2398 MOV X0, X21
	0x033E239C STRB W31, [X31 + 0xC]
	0x033E23A0 BL 0x33E1C10
	0x033E23A4 CMP W22, 0x0
	0x033E23A8 B.LE 0x33E24EC
	0x033E23AC LDR X19, [X21 + 0x20]
	0x033E23B0 STRB W31, [X31 + 0xC]
	0x033E23B4 ADD X1, X31, 0xC
	0x033E23B8 MOV X0, X19
	0x033E23BC BL 0x33DE64C
	0x033E23C0 LDR W20, [X21 + 0x10]
	0x033E23C4 BL 0x1C16D44
	0x033E23C8 LDR W8, [X21 + 0x14]
	0x033E23CC SUB W8, W8, W20
	0x033E23D0 CMP W8, W22
	0x033E23D4 B.LT 0x33E2584
	0x033E23D8 LDR W26, [X21 + 0x18]
	0x033E23DC BL 0x1C16D44
	0x033E23E0 ADD W23, W20, W22
	0x033E23E4 CMP W23, 0x1
	0x033E23E8 B.EQ 0x33E2408
	0x033E23EC CMP W26, 0x1
	0x033E23F0 B.EQ 0x33E2408
	0x033E23F4 CMP W26, 0x2
	0x033E23F8 B.LT 0x33E2410
	0x033E23FC LDR X0, [X21 + 0x20]
	0x033E2400 BL 0x33DE87C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFFC000
	007 Move W8, [X22+959]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD3A000
	016 Move X0, [X0+1408]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+959], W8
	020 Compare X21, 0
	021 JumpIfEqual {43}
	022 Move W8, [X21+48]
	023 Move W9, 5
	024 And W31, W8, W9
	025 Move X8, 0xD3A000
	026 Move X8, [X8+1408]
	027 Move X0, [X8]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X21
	033 Move X1, X20
	034 Move X2, X19
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move W3, W31
	040 Move X30, [X31+48]
	041 Call ExecutionContext.Run, X0, X1, X2, X3
	042 Return 
	043 Move X0, 0xD4C000
	044 Move X0, [X0+240]
	045 Move X0, 0xD4C000
	046 Move X0, [X0+248]
	047 Call 0x1C17D08
	048 Move X1, X31
	049 Call Environment.GetResourceString, X0
	050 Move X19, X0
	051 Move X0, 0xD12000
	052 Move X0, [X0+1456]
	053 Call 0x1C17D08
	054 Call 0x1C17F10
	055 Move X1, X19
	056 Move X2, X31
	057 Move X20, X0
	058 Call InvalidOperationException..ctor, X0, X1
	059 Move X0, 0xD4C000
	060 Move X0, [X0+256]
	061 Call 0x1C17D08
	062 Move X1, X0
	063 Move X0, X20
	064 Call 0x1C17DEC

Method: System.Void Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx)

Disassembly:
	0x033E59D8 LDR X0, [X0 + 0x330]
	0x033E59DC BL 0x1C16D08
	0x033E59E0 MOV X1, X0
	0x033E59E4 MOV X0, X19
	0x033E59E8 BL 0x1C16DEC
	0x033E59EC MOV X1, X31
	0x033E59F0 B 0x33BDD8C
	0x033E59F4 LDR W8, [X0 + 0x10]
	0x033E59F8 AND W0, W8, 0x1
	0x033E59FC RET
	0x033E5A00 STR X30, [X31 - 0x10]!
	0x033E5A04 CBZ X1, 0x33E5A24
	0x033E5A08 LDR X8, [X1 + 0x28]
	0x033E5A0C LDR X3, [X1 + 0x18]
	0x033E5A10 LDR X0, [X1 + 0x40]
	0x033E5A14 MOV X1, X2
	0x033E5A18 MOV X2, X8
	0x033E5A1C LDR X30, [X31], #0x10
	0x033E5A20 BR X3
	0x033E5A24 BL 0x1C16F20
	0x033E5A28 STP X30, X23, [X31 - 0x30]!
	0x033E5A2C STP X22, X21, [X31 + 0x10]
	0x033E5A30 STP X20, X19, [X31 + 0x20]
	0x033E5A34 ADRP X22, 0xFF8000
	0x033E5A38 ADRP X23, 0xD17000
	0x033E5A3C ADRP X21, 0xD48000
	0x033E5A40 LDRB W8, [X22 + 0x3CD]
	0x033E5A44 LDR X23, [X23 + 0x958]
	0x033E5A48 LDR X21, [X21 + 0x338]
	0x033E5A4C MOV X19, X2
	0x033E5A50 MOV X20, X1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xFF9000
	009 Move X24, 0xD37000
	010 Move W8, [X23+960]
	011 Move X24, [X24+1408]
	012 Move W21, W3
	013 Move X19, X2
	014 Move X20, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xD37000
	021 Move X0, [X0+1408]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+960], W8
	025 Move X0, [X24]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 And W3, W21, 1
	031 Move X0, X22
	032 Move X1, X20
	033 Move X2, X19
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X22, [X31+32]
	037 Move X21, [X31+40]
	038 Move X24, [X31+16]
	039 Move X23, [X31+24]
	040 Move X30, [X31+64]

Method: System.Void RunInternal(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state)

Disassembly:
	0x033E5C48 LDR X30, [X31], #0x20
	0x033E5C4C RET
	0x033E5C50 STR X30, [X31 - 0x20]!
	0x033E5C54 STP X20, X19, [X31 + 0x10]
	0x033E5C58 ADRP X19, 0xFF8000
	0x033E5C5C ADRP X20, 0xD48000
	0x033E5C60 LDRB W8, [X19 + 0x3CF]
	0x033E5C64 LDR X20, [X20 + 0x350]
	0x033E5C68 TBNZ X8, 0x0, 0x33E5C80
	0x033E5C6C ADRP X0, 0xD48000
	0x033E5C70 LDR X0, [X0 + 0x350]
	0x033E5C74 BL 0x1C16CF4
	0x033E5C78 MOVZ W8, 0x1
	0x033E5C7C STRB W8, [X19 + 0x3CF]
	0x033E5C80 LDR X0, [X20]
	0x033E5C84 LDR W8, [X0 + 0xE0]
	0x033E5C88 CBNZ W8, 0x33E5C90
	0x033E5C8C BL 0x1C16DFC
	0x033E5C90 LDP X20, X19, [X31 + 0x10]
	0x033E5C94 LDR X30, [X31], #0x20
	0x033E5C98 B 0x33E5CCC
	0x033E5C9C STR X30, [X31 - 0x10]!
	0x033E5CA0 BL 0x33E3C68
	0x033E5CA4 CBZ X0, 0x33E5CC8
	0x033E5CA8 LDR X8, [X0 + 0x30]
	0x033E5CAC CBZ X8, 0x33E5CC0
	0x033E5CB0 LDR X0, [X8 + 0x18]
	0x033E5CB4 CBZ X0, 0x33E5CC0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xFF9000
	008 Move X23, 0xD37000
	009 Move W8, [X22+961]
	010 Move X23, [X23+1408]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xD37000
	019 Move X0, [X0+1408]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+961], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X21
	029 Move X1, X20
	030 Move X2, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move W3, W31
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Call ExecutionContext.RunInternal, X0, X1, X2, X3
	039 Return 

Method: System.Void RunInternal(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx)

Disassembly:
	0x033E5A54 TBNZ X8, 0x0, 0x33E5A78
	0x033E5A58 ADRP X0, 0xD48000
	0x033E5A5C LDR X0, [X0 + 0x338]
	0x033E5A60 BL 0x1C16CF4
	0x033E5A64 ADRP X0, 0xD17000
	0x033E5A68 LDR X0, [X0 + 0x958]
	0x033E5A6C BL 0x1C16CF4
	0x033E5A70 MOVZ W8, 0x1
	0x033E5A74 STRB W8, [X22 + 0x3CD]
	0x033E5A78 LDR X0, [X23]
	0x033E5A7C BL 0x1C16F10
	0x033E5A80 LDR X2, [X21]
	0x033E5A84 MOV X1, X20
	0x033E5A88 MOV X3, X31
	0x033E5A8C MOV X21, X0
	0x033E5A90 BL 0x33E7508
	0x033E5A94 MOV X0, X21
	0x033E5A98 MOV X1, X19
	0x033E5A9C LDP X20, X19, [X31 + 0x20]
	0x033E5AA0 LDP X22, X21, [X31 + 0x10]
	0x033E5AA4 MOV X2, X31
	0x033E5AA8 LDP X30, X23, [X31], #0x30
	0x033E5AAC B 0x33E9B34
	0x033E5AB0 RET
	0x033E5AB4 RET
	0x033E5AB8 CBZ X1, 0x33E5AD0
	0x033E5ABC AND W8, W2, 0x1
	0x033E5AC0 MOV X0, X1
	0x033E5AC4 MOV W1, W8
	0x033E5AC8 MOV W2, W3
	0x033E5ACC B 0x33E5B1C
	0x033E5AD0 STP X30, X19, [X31 - 0x10]!
	0x033E5AD4 ADRP X0, 0xD13000
	0x033E5AD8 LDR X0, [X0 + 0x528]
	0x033E5ADC BL 0x1C16D08
	0x033E5AE0 BL 0x1C16F10
	0x033E5AE4 MOV X19, X0
	0x033E5AE8 ADRP X0, 0xD48000
	0x033E5AEC LDR X0, [X0 + 0x340]
	0x033E5AF0 BL 0x1C16D08
	0x033E5AF4 MOV X1, X0
	0x033E5AF8 MOV X0, X19
	0x033E5AFC MOV X2, X31
	0x033E5B00 BL 0x330E100
	0x033E5B04 ADRP X0, 0xD48000
	0x033E5B08 LDR X0, [X0 + 0x348]
	0x033E5B0C BL 0x1C16D08
	0x033E5B10 MOV X1, X0
	0x033E5B14 MOV X0, X19
	0x033E5B18 BL 0x1C16DEC
	0x033E5B1C STR X30, [X31 - 0x30]!
	0x033E5B20 STP X22, X21, [X31 + 0x10]
	0x033E5B24 STP X20, X19, [X31 + 0x20]
	0x033E5B28 ADRP X22, 0xFF8000
	0x033E5B2C LDRB W8, [X22 + 0x3CE]
	0x033E5B30 MOV W19, W2
	0x033E5B34 MOV W20, W1
	0x033E5B38 MOV X21, X0
	0x033E5B3C TBNZ X8, 0x0, 0x33E5B54
	0x033E5B40 ADRP X0, 0xD48000
	0x033E5B44 LDR X0, [X0 + 0x268]
	0x033E5B48 BL 0x1C16CF4
	0x033E5B4C MOVZ W8, 0x1
	0x033E5B50 STRB W8, [X22 + 0x3CE]
	0x033E5B54 CBZ X21, 0x33E5BA0
	0x033E5B58 ADRP X8, 0xD48000
	0x033E5B5C LDR X8, [X8 + 0x268]
	0x033E5B60 LDR X22, [X21 + 0x18]
	0x033E5B64 LDR X0, [X8]
	0x033E5B68 LDR W8, [X0 + 0xE0]
	0x033E5B6C CBNZ W8, 0x33E5B74
	0x033E5B70 BL 0x1C16DFC
	0x033E5B74 ADD X8, X21, 0x20
	0x033E5B78 LDR W1, [X21 + 0x18]
	0x033E5B7C CMP W22, 0x0
	0x033E5B80 AND W2, W20, 0x1
	0x033E5B84 MOV W3, W19
	0x033E5B88 LDP X20, X19, [X31 + 0x20]
	0x033E5B8C LDP X22, X21, [X31 + 0x10]
	0x033E5B90 CSEL X0, X31, X8, EQ
	0x033E5B94 MOV X4, X31
	0x033E5B98 LDR X30, [X31], #0x30
	0x033E5B9C B 0x33EB0B4
	0x033E5BA0 BL 0x1C16F20
	0x033E5BA4 STP X30, X19, [X31 - 0x10]!
	0x033E5BA8 MOV X19, X0
	0x033E5BAC BL 0x33E3C68
	0x033E5BB0 CBZ X0, 0x33E5BC8
	0x033E5BB4 BL 0x33E5BCC
	0x033E5BB8 CBZ X0, 0x33E5BC8
	0x033E5BBC STP X19, X19, [X0 + 0x10]
	0x033E5BC0 LDP X30, X19, [X31], #0x10
	0x033E5BC4 RET
	0x033E5BC8 BL 0x1C16F20
	0x033E5BCC STR X30, [X31 - 0x20]!
	0x033E5BD0 STP X20, X19, [X31 + 0x10]
	0x033E5BD4 ADRP X20, 0xFF8000
	0x033E5BD8 LDRB W8, [X20 + 0x3DE]
	0x033E5BDC MOV X19, X0
	0x033E5BE0 TBNZ X8, 0x0, 0x33E5BF8
	0x033E5BE4 ADRP X0, 0xD36000
	0x033E5BE8 LDR X0, [X0 + 0x580]
	0x033E5BEC BL 0x1C16CF4
	0x033E5BF0 MOVZ W8, 0x1
	0x033E5BF4 STRB W8, [X20 + 0x3DE]
	0x033E5BF8 LDR X20, [X19 + 0x30]
	0x033E5BFC CBZ X20, 0x33E5C1C
	0x033E5C00 LDRB W8, [X19 + 0x38]
	0x033E5C04 CBZ W8, 0x33E5C3C
	0x033E5C08 MOV X0, X20
	0x033E5C0C BL 0x33E5128
	0x033E5C10 MOV X20, X0
	0x033E5C14 STR X0, [X19 + 0x30]
	0x033E5C18 B 0x33E5C3C
	0x033E5C1C ADRP X8, 0xD36000
	0x033E5C20 LDR X8, [X8 + 0x580]
	0x033E5C24 LDR X0, [X8]
	0x033E5C28 BL 0x1C16F10
	0x033E5C2C MOV X1, X31
	0x033E5C30 MOV X20, X0
	0x033E5C34 BL 0x33BDD8C
	0x033E5C38 STR X20, [X19 + 0x30]
	0x033E5C3C STRB W31, [X19 + 0x38]
	0x033E5C40 MOV X0, X20
	0x033E5C44 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X23, 0xFF9000
	011 Move W8, [X23+962]
	012 Move W21, W3
	013 Move X19, X2
	014 Move X20, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xD37000
	021 Move X0, [X0+1408]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+962], W8
	025 Compare X22, 0
	026 JumpIfEqual {126}
	027 Move W8, [X22+48]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 4
	030 Compare TEMP, 4
	031 JumpIfEqual {34}
	032 And W8, W8, 0xFFFFFFFE
	033 Move [X22+48], W8
	034 Call Thread.get_CurrentThread
	035 Move X23, X0
	036 NotImplemented "Instruction MOVI not yet implemented."
	037 Move X0, X31
	038 Move [X31+32], V0
	039 Move [X31+40], V0
	040 Call RuntimeHelpers.PrepareConstrainedRegions
	041 Compare X23, 0
	042 JumpIfEqual {127}
	043 Move X25, 0xD37000
	044 Move X24, [X23+48]
	045 Move X25, [X25+1408]
	046 Compare X24, 0
	047 JumpIfEqual {55}
	048 And W1, W21, 1
	049 Move X0, X24
	050 Call ExecutionContext.IsDefaultFTContext, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {68}
	055 And W1, W21, 1
	056 Move X0, X22
	057 Call ExecutionContext.IsDefaultFTContext, X0, X1
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {68}
	062 Compare X24, 0
	063 JumpIfEqual {65}
	064 Move X8, [X24+56]
	065 Move X8, X31
	066 Move X9, [X22+56]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move W8, [X22+48]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 4
	071 Compare TEMP, 4
	072 JumpIfNotEqual {78}
	073 Move X0, [X25]
	074 Call 0x1C17F10
	075 Move X22, X0
	076 Move X1, X31
	077 Call Object..ctor, X0
	078 Move X0, [X25]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 And W1, W21, 1
	084 Add X8, X31, 0
	085 Move X0, X22
	086 Call ExecutionContext.SetExecutionContext, X0, X1
	087 Move V0, [X31]
	088 Move V1, [X31+16]
	089 Move [X31+32], V0
	090 Move [X31+40], V1
	091 Compare X20, 0
	092 JumpIfEqual {125}
	093 Move X0, [X20+64]
	094 Move X8, [X20+24]
	095 Move X2, [X20+40]
	096 Move X1, X19
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Add X0, X31, 32
	099 Call ExecutionContextSwitcher.Undo, X0
	100 Move X20, [X31+112]
	101 Move X19, [X31+120]
	102 Move X22, [X31+96]
	103 Move X21, [X31+104]
	104 Move X24, [X31+80]
	105 Move X23, [X31+88]
	106 Move X30, [X31+64]
	107 Move X25, [X31+72]
	108 Add X31, X31, 128
	109 Return 
	110 Move X0, [X25]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Move X8, [X23+48]
	116 Move W9, 1
	117 Move [X31+32], X8
	118 Move W8, [X23+56]
	119 Xor W8, W8, 1
	120 Move [X31+40], W8
	121 Move [X23+56], W9
	122 Move [X31+56], X23
	123 Compare X20, 0
	124 JumpIfNotEqual {93}
	125 Call 0x1C17F20
	126 Call 0x1C17F20
	127 Call 0x1C17F20
	128 Move X19, X0
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X0, X19
	131 Call 0x3EB2AD0
	132 Move X20, [X0]
	133 Call 0x3EB2AE0
	134 Add X0, X31, 32
	135 Call ExecutionContextSwitcher.Undo, X0
	136 Compare X20, 0
	137 JumpIfEqual {100}
	138 Move X0, X20
	139 Call 0x1C17F18
	140 Move X20, X31
	141 Move X19, X0
	142 Add X0, X31, 32
	143 Call ExecutionContextSwitcher.Undo, X0
	144 Compare X20, 0
	145 JumpIfNotEqual {148}
	146 Move X0, X19
	147 Call 0x1D2D690
	148 Move X0, X20
	149 Call 0x1C17F18
	150 Call 0x1991590

Method: System.Void EstablishCopyOnWriteScope(ref System.Threading.ExecutionContextSwitcher ecsw)

Disassembly:
	0x033E5F00 ADD X8, X8, X9, 0x3, LSL
	0x033E5F04 LDUR X8, [X8 - 0x8]
	0x033E5F08 CMP X8, X1
	0x033E5F0C B.NE 0x33E5F38
	0x033E5F10 LDR X8, [X19 + 0x10]
	0x033E5F14 CBZ X8, 0x33E5F44
	0x033E5F18 LDR X1, [X19 + 0x18]
	0x033E5F1C LDR X0, [X8 + 0x40]
	0x033E5F20 LDR X9, [X8 + 0x18]
	0x033E5F24 LDR X2, [X8 + 0x28]
	0x033E5F28 BLR X9
	0x033E5F2C LDP X20, X19, [X31 + 0x10]
	0x033E5F30 LDR X30, [X31], #0x20
	0x033E5F34 RET
	0x033E5F38 MOV X0, X19
	0x033E5F3C BL 0x1C171E0
	0x033E5F40 BL 0x1C16F20
	0x033E5F44 BL 0x1C16F20
	0x033E5F48 B 0x33E5F4C
	0x033E5F4C MOV X19, X0
	0x033E5F50 CMP W1, 0x1
	0x033E5F54 B.NE 0x33E5FD8
	0x033E5F58 MOV X0, X19
	0x033E5F5C BL 0x3EB1AD0
	0x033E5F60 MOV X19, X0
	0x033E5F64 ADRP X0, 0xD0E000
	0x033E5F68 LDR X0, [X0 + 0x7D0]
	0x033E5F6C BL 0x1C16D08
	0x033E5F70 LDR X8, [X19]
	0x033E5F74 LDR X1, [X8]
	0x033E5F78 BL 0x1C17270
	0x033E5F7C TBZ X0, 0x0, 0x33E5FB0
	0x033E5F80 LDR X19, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xFF9000
	006 Move X20, 0xD37000
	007 Move W8, [X21+963]
	008 Move X20, [X20+1408]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD37000
	015 Move X0, [X0+1408]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+963], W8
	019 Call Thread.get_CurrentThread
	020 Move X8, [X20]
	021 Move X20, X0
	022 Move W9, [X8+224]
	023 Compare W9, 0
	024 JumpIfNotEqual {27}
	025 Move X0, X8
	026 Call 0x1C17DFC
	027 Compare X20, 0
	028 JumpIfEqual {42}
	029 Move X8, [X20+48]
	030 Move W9, 1
	031 Move [X19], X8
	032 Move W8, [X20+56]
	033 Xor W8, W8, 1
	034 Move [X19+8], W8
	035 Move [X20+56], W9
	036 Move [X19+24], X20
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 
	042 Call 0x1C17F20

Method: System.Void EstablishCopyOnWriteScope(System.Threading.Thread currentThread, System.Boolean knownNullWindowsIdentity, ref System.Threading.ExecutionContextSwitcher ecsw)

Disassembly:
	0x033E5D5C CBNZ W9, 0x33E5D6C
	0x033E5D60 MOV X0, X8
	0x033E5D64 BL 0x1C16DFC
	0x033E5D68 LDR X8, [X20]
	0x033E5D6C LDR X0, [X23]
	0x033E5D70 LDR X8, [X8 + 0xB8]
	0x033E5D74 LDR W9, [X0 + 0xE0]
	0x033E5D78 LDR X20, [X8]
	0x033E5D7C CBNZ W9, 0x33E5D88
	0x033E5D80 BL 0x1C16DFC
	0x033E5D84 LDR X0, [X23]
	0x033E5D88 LDR X8, [X0 + 0xB8]
	0x033E5D8C LDR X21, [X8 + 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {14}
	004 Move X8, [X0+48]
	005 Move W9, 1
	006 Move [X2], X8
	007 Move W8, [X0+56]
	008 Xor W8, W8, 1
	009 Move [X2+8], W8
	010 Move [X0+56], W9
	011 Move [X2+24], X0
	012 Move X30, [X31+16]
	013 Return 
	014 Call 0x1C17F20

Method: System.Threading.ExecutionContextSwitcher SetExecutionContext(System.Threading.ExecutionContext executionContext, System.Boolean preserveSyncCtx)

Disassembly:
	0x033E5D90 CBNZ X21, 0x33E5DE4
	0x033E5D94 LDR W8, [X0 + 0xE0]
	0x033E5D98 CBNZ W8, 0x33E5DA4
	0x033E5D9C BL 0x1C16DFC
	0x033E5DA0 LDR X0, [X23]
	0x033E5DA4 ADRP X9, 0xD48000
	0x033E5DA8 LDR X8, [X0 + 0xB8]
	0x033E5DAC LDR X9, [X9 + 0x360]
	0x033E5DB0 LDR X22, [X8]
	0x033E5DB4 LDR X0, [X9]
	0x033E5DB8 BL 0x1C16F10
	0x033E5DBC ADRP X8, 0xD48000
	0x033E5DC0 LDR X8, [X8 + 0x368]
	0x033E5DC4 MOV X1, X22
	0x033E5DC8 MOV X3, X31
	0x033E5DCC MOV X21, X0
	0x033E5DD0 LDR X2, [X8]
	0x033E5DD4 BL 0x29AA1B8
	0x033E5DD8 LDR X8, [X23]
	0x033E5DDC LDR X8, [X8 + 0xB8]
	0x033E5DE0 STR X21, [X8 + 0x8]
	0x033E5DE4 CBZ X20, 0x33E5E20
	0x033E5DE8 ADRP X8, 0xD48000
	0x033E5DEC LDR X8, [X8 + 0x358]
	0x033E5DF0 MOV X0, X20
	0x033E5DF4 MOV X1, X19
	0x033E5DF8 MOV X2, X21
	0x033E5DFC LDR X3, [X8]
	0x033E5E00 LDP X20, X19, [X31 + 0x20]
	0x033E5E04 LDP X22, X21, [X31 + 0x10]
	0x033E5E08 LDP X30, X23, [X31], #0x30
	0x033E5E0C B 0x2997184
	0x033E5E10 LDP X20, X19, [X31 + 0x20]
	0x033E5E14 LDP X22, X21, [X31 + 0x10]
	0x033E5E18 LDP X30, X23, [X31], #0x30
	0x033E5E1C RET
	0x033E5E20 BL 0x1C16F20
	0x033E5E24 STR X30, [X31 - 0x20]!
	0x033E5E28 STP X20, X19, [X31 + 0x10]
	0x033E5E2C ADRP X19, 0xFF8000
	0x033E5E30 ADRP X20, 0xD48000
	0x033E5E34 LDRB W8, [X19 + 0x3D0]
	0x033E5E38 LDR X20, [X20 + 0x378]
	0x033E5E3C TBNZ X8, 0x0, 0x33E5E54
	0x033E5E40 ADRP X0, 0xD48000
	0x033E5E44 LDR X0, [X0 + 0x378]
	0x033E5E48 BL 0x1C16CF4
	0x033E5E4C MOVZ W8, 0x1
	0x033E5E50 STRB W8, [X19 + 0x3D0]
	0x033E5E54 LDR X0, [X20]
	0x033E5E58 BL 0x1C16F10
	0x033E5E5C MOV X1, X31
	0x033E5E60 MOV X19, X0
	0x033E5E64 BL 0x33BDD8C
	0x033E5E68 MOV X0, X19
	0x033E5E6C LDP X20, X19, [X31 + 0x10]
	0x033E5E70 LDR X30, [X31], #0x20
	0x033E5E74 RET
	0x033E5E78 B 0x33DD700
	0x033E5E7C STR X30, [X31 - 0x20]!
	0x033E5E80 STP X20, X19, [X31 + 0x10]
	0x033E5E84 ADRP X20, 0xFF8000
	0x033E5E88 LDRB W8, [X20 + 0x3D4]
	0x033E5E8C MOV X19, X0
	0x033E5E90 TBNZ X8, 0x0, 0x33E5EA8
	0x033E5E94 ADRP X0, 0xD48000
	0x033E5E98 LDR X0, [X0 + 0x380]
	0x033E5E9C BL 0x1C16CF4
	0x033E5EA0 MOVZ W8, 0x1
	0x033E5EA4 STRB W8, [X20 + 0x3D4]
	0x033E5EA8 STR X31, [X31 + 0x8]
	0x033E5EAC MOV X0, X19
	0x033E5EB0 MOV X1, X31
	0x033E5EB4 BL 0x32C097C
	0x033E5EB8 STR X0, [X31 + 0x8]
	0x033E5EBC ADD X0, X31, 0x8
	0x033E5EC0 MOV X1, X31
	0x033E5EC4 BL 0x32C05F4
	0x033E5EC8 MOV X19, X0
	0x033E5ECC ADD X0, X31, 0x8
	0x033E5ED0 MOV X1, X31
	0x033E5ED4 BL 0x32C0794
	0x033E5ED8 CBZ X19, 0x33E5F40
	0x033E5EDC ADRP X9, 0xD48000
	0x033E5EE0 LDR X9, [X9 + 0x380]
	0x033E5EE4 LDR X8, [X19]
	0x033E5EE8 LDR X1, [X9]
	0x033E5EEC LDRB W10, [X8 + 0x130]
	0x033E5EF0 LDRB W9, [X1 + 0x130]
	0x033E5EF4 CMP W10, W9
	0x033E5EF8 B.CC 0x33E5F38
	0x033E5EFC LDR X8, [X8 + 0xC8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X21, 0xFF9000
	008 Move W9, [X21+964]
	009 Move W22, W1
	010 Move X20, X0
	011 Move X19, X8
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD37000
	017 Move X0, [X0+1408]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+964], W8
	021 Move [X31], X31
	022 Move [X31+8], X31
	023 Move [X31+16], X31
	024 Call Thread.get_CurrentThread
	025 Compare X0, 0
	026 JumpIfEqual {80}
	027 Move X21, [X0+48]
	028 Move [X31+24], X0
	029 Move [X31], X21
	030 Move W8, [X0+56]
	031 Xor W8, W8, 1
	032 Move [X31+8], W8
	033 Move TEMP, X22
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {46}
	037 Compare X21, 0
	038 JumpIfEqual {42}
	039 Move X8, [X21+16]
	040 Compare X20, 0
	041 JumpIfNotEqual {45}
	042 Move X8, X31
	043 Compare X20, 0
	044 JumpIfEqual {80}
	045 Move [X20+16], X8
	046 Compare X21, 0
	047 JumpIfEqual {77}
	048 Move X8, [X21+24]
	049 Compare X20, 0
	050 JumpIfEqual {80}
	051 Move X22, 0xD37000
	052 Move X22, [X22+1408]
	053 Move [X20+24], X8
	054 Move [X0+48], X20
	055 Move [X0+56], W31
	056 Move X0, X31
	057 Call RuntimeHelpers.PrepareConstrainedRegions
	058 Move X0, [X22]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X21
	064 Move X1, X20
	065 Call ExecutionContext.OnAsyncLocalContextChanged, X0, X1
	066 Move V1, [X31]
	067 Move V0, [X31+16]
	068 Move X22, [X31+48]
	069 Move X21, [X31+56]
	070 Move X30, [X31+32]
	071 Move [X19], V1
	072 Move [X19+8], V0
	073 Move X20, [X31+64]
	074 Move X19, [X31+72]
	075 Add X31, X31, 80
	076 Return X0
	077 Move X8, X31
	078 Compare X20, 0
	079 JumpIfNotEqual {51}
	080 Call 0x1C17F20
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X19, X0
	083 Move X0, X19
	084 Call 0x3EB2AD0
	085 Move X19, X0
	086 Move X0, 0xD15000
	087 Move X0, [X0+3264]
	088 Call 0x1C17D08
	089 Move X8, [X19]
	090 Move X1, [X8]
	091 Call 0x1C18270
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {102}
	096 Move X19, [X19]
	097 Call 0x3EB2AE0
	098 Add X0, X31, 0
	099 Call ExecutionContextSwitcher.UndoNoThrow, X0
	100 Move X0, X19
	101 Call 0x1C17F18
	102 Move W0, 8
	103 Call 0x3EB2AF0
	104 Move X8, [X19]
	105 Move [X0], X8
	106 Move X1, 0xAD0000
	107 Add X1, X1, 3672
	108 Move X2, X31
	109 Call 0x3EB2B00
	110 Move X19, X0
	111 Call 0x3EB2AE0
	112 Move X0, X19
	113 Call 0x1D2D690
	114 Call 0x1991590

Method: System.Threading.ExecutionContext CreateCopy()

Disassembly:
	0x033E5FE8 STP X20, X19, [X31 + 0x10]
	0x033E5FEC MOV X19, X1
	0x033E5FF0 MOV X1, X31
	0x033E5FF4 MOV X20, X0
	0x033E5FF8 BL 0x33BDD8C
	0x033E5FFC STR X19, [X20 + 0x18]
	0x033E6000 LDP X20, X19, [X31 + 0x10]
	0x033E6004 LDR X30, [X31], #0x20
	0x033E6008 RET
	0x033E600C B 0x1C4C018
	0x033E6010 STP X30, X21, [X31 - 0x20]!
	0x033E6014 STP X20, X19, [X31 + 0x10]
	0x033E6018 ADRP X21, 0xFF7000
	0x033E601C ADRP X20, 0xD47000
	0x033E6020 LDRB W8, [X21 + 0x3D2]
	0x033E6024 LDR X20, [X20 + 0x350]
	0x033E6028 MOV X19, X0
	0x033E602C TBNZ X8, 0x0, 0x33E6044
	0x033E6030 ADRP X0, 0xD47000
	0x033E6034 LDR X0, [X0 + 0x350]
	0x033E6038 BL 0x1C16CF4
	0x033E603C MOVZ W8, 0x1
	0x033E6040 STRB W8, [X21 + 0x3D2]
	0x033E6044 LDR X0, [X20]
	0x033E6048 LDR X21, [X19 + 0x18]
	0x033E604C BL 0x1C16F10
	0x033E6050 MOV X1, X31
	0x033E6054 MOV X19, X0
	0x033E6058 BL 0x33BDD8C
	0x033E605C STR X21, [X19 + 0x18]
	0x033E6060 MOV X0, X19
	0x033E6064 LDP X20, X19, [X31 + 0x10]
	0x033E6068 LDP X30, X21, [X31], #0x20
	0x033E606C RET
	0x033E6070 STP X30, X19, [X31 - 0x10]!
	0x033E6074 ADRP X0, 0xD0D000
	0x033E6078 LDR X0, [X0 + 0xB40]
	0x033E607C BL 0x1C16D08
	0x033E6080 BL 0x1C16F10
	0x033E6084 MOV X1, X31
	0x033E6088 MOV X19, X0
	0x033E608C BL 0x3380310
	0x033E6090 ADRP X0, 0xD47000
	0x033E6094 LDR X0, [X0 + 0x388]
	0x033E6098 BL 0x1C16D08
	0x033E609C MOV X1, X0
	0x033E60A0 MOV X0, X19
	0x033E60A4 BL 0x1C16DEC
	0x033E60A8 STR X30, [X31 - 0x50]!
	0x033E60AC STP X26, X25, [X31 + 0x10]
	0x033E60B0 STP X24, X23, [X31 + 0x20]
	0x033E60B4 STP X22, X21, [X31 + 0x30]
	0x033E60B8 STP X20, X19, [X31 + 0x40]
	0x033E60BC ADRP X25, 0xFF7000
	0x033E60C0 ADRP X24, 0xD47000
	0x033E60C4 ADRP X22, 0xD47000
	0x033E60C8 ADRP X23, 0xD35000
	0x033E60CC LDRB W8, [X25 + 0x3D3]
	0x033E60D0 LDR X24, [X24 + 0x390]
	0x033E60D4 LDR X22, [X22 + 0x398]
	0x033E60D8 LDR X23, [X23 + 0x850]
	0x033E60DC MOV X20, X2
	0x033E60E0 MOV X21, X1
	0x033E60E4 MOV X19, X0
	0x033E60E8 TBNZ X8, 0x0, 0x33E613C
	0x033E60EC ADRP X0, 0xD47000
	0x033E60F0 LDR X0, [X0 + 0x380]
	0x033E60F4 BL 0x1C16CF4
	0x033E60F8 ADRP X0, 0xD47000
	0x033E60FC LDR X0, [X0 + 0x390]
	0x033E6100 BL 0x1C16CF4
	0x033E6104 ADRP X0, 0xD47000
	0x033E6108 LDR X0, [X0 + 0x3A0]
	0x033E610C BL 0x1C16CF4
	0x033E6110 ADRP X0, 0xD35000
	0x033E6114 LDR X0, [X0 + 0x850]
	0x033E6118 BL 0x1C16CF4
	0x033E611C ADRP X0, 0xD47000
	0x033E6120 LDR X0, [X0 + 0x398]
	0x033E6124 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFF9000
	005 Move W8, [X20+965]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xD36000
	012 Move X0, [X0+1408]
	013 Call 0x1C17CF4
	014 Move X0, 0xD3F000
	015 Move X0, [X0+880]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+965], W8
	019 Move W8, [X19+48]
	020 Move W9, 5
	021 And W31, W8, W9
	022 Move X8, 0xD36000
	023 Move X8, [X8+1408]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X1, X31
	027 Move X20, X0
	028 Call Object..ctor, X0
	029 Compare X20, 0
	030 JumpIfEqual {68}
	031 Move W8, [X20+48]
	032 Or W8, W8, 1
	033 Move [X20+48], W8
	034 Move X0, [X19+16]
	035 Compare X0, 0
	036 JumpIfEqual {41}
	037 Move X8, [X0]
	038 Move X9, [X8+456]
	039 Move X1, [X8+464]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move [X20+16], X0
	042 Move X8, [X19+56]
	043 Move [X20+56], X8
	044 Move X8, [X19+64]
	045 Move [X20+64], X8
	046 Move X8, [X19+32]
	047 Compare X8, 0
	048 JumpIfEqual {63}
	049 Move X0, X19
	050 Call ExecutionContext.get_LogicalCallContext, X0
	051 Compare X0, 0
	052 JumpIfEqual {68}
	053 Move X1, X31
	054 Call LogicalCallContext.Clone, X0
	055 Compare X0, 0
	056 JumpIfEqual {62}
	057 Move X8, 0xD3F000
	058 Move X8, [X8+880]
	059 Move X1, [X8]
	060 Move X8, [X0]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move [X20+32], X0
	063 Move X0, X20
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Return X0
	068 Call 0x1C17F20
	069 Move X0, 0xD48000
	070 Move X0, [X0+720]
	071 Call 0x1C17D08
	072 Move X1, X31
	073 Call Environment.GetResourceString, X0
	074 Move X19, X0
	075 Move X0, 0xD0E000
	076 Move X0, [X0+1456]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X1, X19
	080 Move X2, X31
	081 Move X20, X0
	082 Call InvalidOperationException..ctor, X0, X1
	083 Move X0, 0xD48000
	084 Move X0, [X0+728]
	085 Call 0x1C17D08
	086 Move X1, X0
	087 Move X0, X20
	088 Call 0x1C17DEC
	089 Call 0x1C181E0

Method: System.Threading.ExecutionContext CreateMutableCopy()

Disassembly:
	0x033E6128 ADRP X0, 0xD47000
	0x033E612C LDR X0, [X0 + 0x350]
	0x033E6130 BL 0x1C16CF4
	0x033E6134 MOVZ W8, 0x1
	0x033E6138 STRB W8, [X25 + 0x3D3]
	0x033E613C LDR X0, [X24]
	0x033E6140 ADRP X26, 0xD47000
	0x033E6144 ADRP X25, 0xD47000
	0x033E6148 ADRP X24, 0xD47000
	0x033E614C LDR X26, [X26 + 0x3A0]
	0x033E6150 LDR X25, [X25 + 0x380]
	0x033E6154 LDR X24, [X24 + 0x350]
	0x033E6158 BL 0x1C16F10
	0x033E615C LDR X2, [X22]
	0x033E6160 MOV X1, X31
	0x033E6164 MOV X22, X0
	0x033E6168 BL 0x33E61FC
	0x033E616C LDR X0, [X23]
	0x033E6170 LDR W8, [X0 + 0xE0]
	0x033E6174 CBNZ W8, 0x33E617C
	0x033E6178 BL 0x1C16DFC
	0x033E617C LDR X1, [X26]
	0x033E6180 MOV X0, X22
	0x033E6184 BL 0x221553C
	0x033E6188 LDR X8, [X25]
	0x033E618C MOV X22, X0
	0x033E6190 MOV X0, X8
	0x033E6194 BL 0x1C16F10
	0x033E6198 MOV X1, X31
	0x033E619C MOV X23, X0
	0x033E61A0 BL 0x33BDD8C
	0x033E61A4 MOV X0, X23
	0x033E61A8 MOV X1, X31
	0x033E61AC STP X21, X20, [X23 + 0x10]
	0x033E61B0 BL 0x32C0774
	0x033E61B4 LDR X19, [X19 + 0x18]
	0x033E61B8 MOV X1, X31
	0x033E61BC BL 0x32C0980
	0x033E61C0 LDR X8, [X24]
	0x033E61C4 MOV X20, X0
	0x033E61C8 LDR W9, [X8 + 0xE0]
	0x033E61CC CBNZ W9, 0x33E61D8
	0x033E61D0 MOV X0, X8
	0x033E61D4 BL 0x1C16DFC
	0x033E61D8 MOV X0, X19
	0x033E61DC MOV X1, X22
	0x033E61E0 MOV X2, X20
	0x033E61E4 LDP X20, X19, [X31 + 0x40]
	0x033E61E8 LDP X22, X21, [X31 + 0x30]
	0x033E61EC LDP X24, X23, [X31 + 0x20]
	0x033E61F0 LDP X26, X25, [X31 + 0x10]
	0x033E61F4 LDR X30, [X31], #0x50
	0x033E61F8 B 0x1C16D14
	0x033E61FC STP X30, X21, [X31 - 0x20]!
	0x033E6200 STP X20, X19, [X31 + 0x10]
	0x033E6204 LDR X8, [X2 + 0x8]
	0x033E6208 STP X1, X2, [X0 + 0x20]
	0x033E620C MOV X19, X0
	0x033E6210 MOV X20, X1
	0x033E6214 STR X8, [X0 + 0x10]
	0x033E6218 LDRB W21, [X2 + 0x52]
	0x033E621C STR X0, [X0 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xFF8000
	006 Move X21, 0xD36000
	007 Move W8, [X20+966]
	008 Move X21, [X21+1408]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xD36000
	015 Move X0, [X0+1408]
	016 Call 0x1C17CF4
	017 Move X0, 0xD3F000
	018 Move X0, [X0+880]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+966], W8
	022 Move X0, [X21]
	023 Call 0x1C17F10
	024 Move X1, X31
	025 Move X20, X0
	026 Call Object..ctor, X0
	027 Compare X20, 0
	028 JumpIfEqual {75}
	029 Move V0, [X19+1]
	030 Move [X20+1], V0
	031 Move X8, [X19+32]
	032 Compare X8, 0
	033 JumpIfEqual {48}
	034 Move X0, X19
	035 Call ExecutionContext.get_LogicalCallContext, X0
	036 Compare X0, 0
	037 JumpIfEqual {75}
	038 Move X1, X31
	039 Call LogicalCallContext.Clone, X0
	040 Compare X0, 0
	041 JumpIfEqual {47}
	042 Move X8, 0xD3F000
	043 Move X8, [X8+880]
	044 Move X1, [X8]
	045 Move X8, [X0]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move [X20+32], X0
	048 Move X8, [X19+40]
	049 Compare X8, 0
	050 JumpIfEqual {58}
	051 Move X0, X19
	052 Call ExecutionContext.get_IllogicalCallContext, X0
	053 Compare X0, 0
	054 JumpIfEqual {75}
	055 Move X1, X31
	056 Call IllogicalCallContext.CreateCopy, X0
	057 Move [X20+40], X0
	058 Move X8, [X19+56]
	059 Move W9, [X20+48]
	060 Move X0, X20
	061 Move [X20+56], X8
	062 Move X8, [X19+64]
	063 Move [X20+64], X8
	064 Move W8, [X19+48]
	065 Move W8, W8
	066 ShiftRight W8, 1
	067 And W8, W8, 0x7FFFFFFF
	068 NotImplemented "Instruction BFM not yet implemented."
	069 Move [X20+48], W9
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X30, [X31+32]
	073 Move X21, [X31+40]
	074 Return X0
	075 Call 0x1C17F20
	076 Call 0x1C181E0

Method: System.Boolean IsFlowSuppressed()

Disassembly:
	0x033E6220 MOV X0, X2
	0x033E6224 BL 0x1C16D84
	0x033E6228 TBZ X0, 0x0, 0x33E6244
	0x033E622C CMP W21, 0x1
	0x033E6230 B.NE 0x33E6248
	0x033E6234 ADRP X8, 0xFFFFFFFFFE7D6000
	0x033E6238 ADD X8, X8, 0x8EC
	0x033E623C STR X8, [X19 + 0x18]
	0x033E6240 B 0x33E6258
	0x033E6244 CBZ X20, 0x33E6270
	0x033E6248 LDR X8, [X19 + 0x10]
	0x033E624C LDR X9, [X19 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Call Thread.get_CurrentThread
	003 Compare X0, 0
	004 JumpIfEqual {15}
	005 Move X8, [X0+48]
	006 Compare X8, 0
	007 JumpIfEqual {12}
	008 Move W8, [X8+48]
	009 Move W0, W8
	010 ShiftRight W0, 1
	011 And W0, W0, 1
	012 Move W0, W31
	013 Move X30, [X31+16]
	014 Return X0
	015 Call 0x1C17F20

Method: System.Threading.ExecutionContext Capture()

Disassembly:
	0x033DE730 BL 0x33DE87C
	0x033DE734 MOV X22, X31
	0x033DE738 LDRB W8, [X31 + 0xC]
	0x033DE73C CBZ W8, 0x33DE748
	0x033DE740 MOV X0, X19
	0x033DE744 BL 0x1C4BEB4
	0x033DE748 CBNZ X22, 0x33DE7BC
	0x033DE74C LDR X19, [X20 + 0x18]
	0x033DE750 BL 0x1C16D44
	0x033DE754 CBZ X19, 0x33DE7A4
	0x033DE758 TBNZ X21, 0x0, 0x33DE7A4
	0x033DE75C STRB W31, [X31 + 0xC]
	0x033DE760 ADD X1, X31, 0xC
	0x033DE764 MOV X0, X19
	0x033DE768 BL 0x33DE64C
	0x033DE76C LDR X21, [X20 + 0x18]
	0x033DE770 BL 0x1C16D44
	0x033DE774 CBZ X21, 0x33DE78C
	0x033DE778 LDR X20, [X20 + 0x18]
	0x033DE77C BL 0x1C16D44

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1000000
	005 Move X20, 0xD3E000
	006 Move W8, [X19+967]
	007 Move X20, [X20+1408]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD3E000
	013 Move X0, [X0+1408]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+967], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move W1, W31
	025 Move X30, [X31+32]
	026 Call ExecutionContext.Capture, X0, X1
	027 Return X0

Method: System.Threading.ExecutionContext FastCapture()

Disassembly:
	0x033E63DC MOV X1, X31
	0x033E63E0 B 0x33BDD8C
	0x033E63E4 STP X30, X21, [X31 - 0x20]!
	0x033E63E8 STP X20, X19, [X31 + 0x10]
	0x033E63EC ADRP X20, 0xFF7000
	0x033E63F0 ADRP X21, 0xD47000
	0x033E63F4 LDRB W8, [X20 + 0x3D7]
	0x033E63F8 LDR X21, [X21 + 0x350]
	0x033E63FC MOV X19, X1
	0x033E6400 TBNZ X8, 0x0, 0x33E6418
	0x033E6404 ADRP X0, 0xD47000
	0x033E6408 LDR X0, [X0 + 0x350]
	0x033E640C BL 0x1C16CF4
	0x033E6410 MOVZ W8, 0x1
	0x033E6414 STRB W8, [X20 + 0x3D7]
	0x033E6418 LDR X0, [X21]
	0x033E641C BL 0x1C16F10
	0x033E6420 MOV X1, X31
	0x033E6424 MOV X20, X0
	0x033E6428 BL 0x33BDD8C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xFF8000
	005 Move X20, 0xD36000
	006 Move W8, [X19+968]
	007 Move X20, [X20+1408]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD36000
	013 Move X0, [X0+1408]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+968], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move W1, 3
	025 Move X30, [X31+32]
	026 Call ExecutionContext.Capture, X0, X1
	027 Return X0

Method: System.Threading.ExecutionContext Capture(ref System.Threading.StackCrawlMark stackMark, System.Threading.ExecutionContext/CaptureOptions options)

Disassembly:
	0x033E6250 STR X8, [X19 + 0x18]
	0x033E6254 STR X9, [X19 + 0x40]
	0x033E6258 ADRP X8, 0xFFFFFFFFFE7D6000
	0x033E625C ADD X8, X8, 0x8A4
	0x033E6260 STR X8, [X19 + 0x38]
	0x033E6264 LDP X20, X19, [X31 + 0x10]
	0x033E6268 LDP X30, X21, [X31], #0x20
	0x033E626C RET
	0x033E6270 ADRP X1, 0xFFFFFFFFFD735000
	0x033E6274 ADD X1, X1, 0xEE3
	0x033E6278 MOV X0, X31
	0x033E627C BL 0x1C16F3C
	0x033E6280 MOV X1, X31
	0x033E6284 BL 0x1C16DEC
	0x033E6288 STP X30, X21, [X31 - 0x20]!
	0x033E628C STP X20, X19, [X31 + 0x10]
	0x033E6290 MOV X20, X1
	0x033E6294 MOV X1, X31
	0x033E6298 MOV X19, X2
	0x033E629C MOV X21, X0
	0x033E62A0 BL 0x33BDD8C
	0x033E62A4 STP X20, X19, [X21 + 0x10]
	0x033E62A8 LDP X20, X19, [X31 + 0x10]
	0x033E62AC LDP X30, X21, [X31], #0x20
	0x033E62B0 RET
	0x033E62B4 B 0x1C16D14
	0x033E62B8 STR X30, [X31 - 0x10]!
	0x033E62BC LDR X8, [X0 + 0x10]
	0x033E62C0 CBZ X8, 0x33E62DC
	0x033E62C4 LDR X1, [X0 + 0x18]
	0x033E62C8 LDR X3, [X8 + 0x18]
	0x033E62CC LDR X0, [X8 + 0x40]
	0x033E62D0 LDR X2, [X8 + 0x28]
	0x033E62D4 LDR X30, [X31], #0x10
	0x033E62D8 BR X3
	0x033E62DC BL 0x1C16F20
	0x033E62E0 STR X30, [X31 - 0x30]!
	0x033E62E4 STP X22, X21, [X31 + 0x10]
	0x033E62E8 STP X20, X19, [X31 + 0x20]
	0x033E62EC ADRP X21, 0xFF7000
	0x033E62F0 ADRP X22, 0xD47000
	0x033E62F4 ADRP X19, 0xD47000
	0x033E62F8 ADRP X20, 0xD47000
	0x033E62FC LDRB W8, [X21 + 0x3D5]
	0x033E6300 LDR X22, [X22 + 0x3A8]
	0x033E6304 LDR X19, [X19 + 0x3B0]
	0x033E6308 LDR X20, [X20 + 0x350]
	0x033E630C TBNZ X8, 0x0, 0x33E633C
	0x033E6310 ADRP X0, 0xD47000
	0x033E6314 LDR X0, [X0 + 0x3B0]
	0x033E6318 BL 0x1C16CF4
	0x033E631C ADRP X0, 0xD47000
	0x033E6320 LDR X0, [X0 + 0x3A8]
	0x033E6324 BL 0x1C16CF4
	0x033E6328 ADRP X0, 0xD47000
	0x033E632C LDR X0, [X0 + 0x350]
	0x033E6330 BL 0x1C16CF4
	0x033E6334 MOVZ W8, 0x1
	0x033E6338 STRB W8, [X21 + 0x3D5]
	0x033E633C LDR X0, [X22]
	0x033E6340 BL 0x1C16F10
	0x033E6344 LDR X1, [X19]
	0x033E6348 MOV X19, X0
	0x033E634C BL 0x29964AC
	0x033E6350 LDR X8, [X20]
	0x033E6354 LDP X22, X21, [X31 + 0x10]
	0x033E6358 LDR X8, [X8 + 0xB8]
	0x033E635C STR X19, [X8]
	0x033E6360 LDP X20, X19, [X31 + 0x20]
	0x033E6364 LDR X30, [X31], #0x30
	0x033E6368 RET
	0x033E636C LDR X8, [X0 + 0x40]
	0x033E6370 LDR X3, [X0 + 0x18]
	0x033E6374 LDR X2, [X0 + 0x28]
	0x033E6378 MOV X0, X8
	0x033E637C BR X3
	0x033E6380 STR X30, [X31 - 0x20]!
	0x033E6384 STP X20, X19, [X31 + 0x10]
	0x033E6388 ADRP X19, 0xFF7000
	0x033E638C ADRP X20, 0xD47000
	0x033E6390 LDRB W8, [X19 + 0x3D6]
	0x033E6394 LDR X20, [X20 + 0x370]
	0x033E6398 TBNZ X8, 0x0, 0x33E63B0
	0x033E639C ADRP X0, 0xD47000
	0x033E63A0 LDR X0, [X0 + 0x370]
	0x033E63A4 BL 0x1C16CF4
	0x033E63A8 MOVZ W8, 0x1
	0x033E63AC STRB W8, [X19 + 0x3D6]
	0x033E63B0 LDR X0, [X20]
	0x033E63B4 BL 0x1C16F10
	0x033E63B8 MOV X1, X31
	0x033E63BC MOV X19, X0
	0x033E63C0 BL 0x33BDD8C
	0x033E63C4 LDR X8, [X20]
	0x033E63C8 LDR X8, [X8 + 0xB8]
	0x033E63CC STR X19, [X8]
	0x033E63D0 LDP X20, X19, [X31 + 0x10]
	0x033E63D4 LDR X30, [X31], #0x20
	0x033E63D8 RET

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0xFF8000
	009 Move W8, [X19+969]
	010 Move W20, W1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD36000
	016 Move X0, [X0+1408]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+969], W8
	020 Move [X31+8], X31
	021 Call Thread.get_CurrentThread
	022 Compare X0, 0
	023 JumpIfEqual {135}
	024 Move X23, 0xD36000
	025 Move X22, [X0+48]
	026 Move X23, [X23+1408]
	027 Compare X22, 0
	028 JumpIfEqual {46}
	029 Move W8, [X22+48]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 2
	032 Compare TEMP, 2
	033 JumpIfEqual {54}
	034 Move TEMP, X20
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {55}
	038 Move X0, [X22+16]
	039 Compare X0, 0
	040 JumpIfEqual {55}
	041 Move X8, [X0]
	042 Move X9, [X8+456]
	043 Move X1, [X8+464]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X19, X0
	046 Move TEMP, X20
	047 And TEMP, TEMP, 2
	048 Compare TEMP, 2
	049 JumpIfEqual {96}
	050 Move X24, X31
	051 Move X22, X31
	052 Move X19, X31
	053 Move X21, X31
	054 Move X20, X31
	055 Move X19, X31
	056 Move X0, X22
	057 Call ExecutionContext.get_LogicalCallContext, X0
	058 Move [X31+8], X0
	059 Add X0, X31, 8
	060 Move X1, X31
	061 Call Reader.get_HasInfo, X0
	062 Move X21, X31
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {74}
	067 Move X0, X22
	068 Call ExecutionContext.get_LogicalCallContext, X0
	069 Move [X31+8], X0
	070 Add X0, X31, 8
	071 Move X1, X31
	072 Call Reader.Clone, X0
	073 Move X21, X0
	074 Move X24, [X22+56]
	075 Move X22, [X22+64]
	076 Move TEMP, X20
	077 And TEMP, TEMP, 2
	078 Compare TEMP, 2
	079 JumpIfNotEqual {112}
	080 Compare X19, 0
	081 JumpIfNotEqual {112}
	082 Compare X21, 0
	083 JumpIfEqual {98}
	084 Move X0, X21
	085 Move X1, X31
	086 Call LogicalCallContext.get_HasInfo, X0
	087 Move X19, X31
	088 Compare X22, 0
	089 JumpIfNotEqual {112}
	090 Compare X24, 0
	091 JumpIfNotEqual {112}
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {104}
	096 Move X22, X31
	097 Move X24, X31
	098 Move X19, X31
	099 Move X21, X31
	100 Compare X22, 0
	101 JumpIfNotEqual {112}
	102 Compare X24, 0
	103 JumpIfNotEqual {112}
	104 Move X0, [X23]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {110}
	108 Call 0x1C17DFC
	109 Move X0, [X23]
	110 Move X8, [X0+184]
	111 Move X20, [X8]
	112 Move X0, [X23]
	113 Call 0x1C17F10
	114 Move X1, X31
	115 Move X20, X0
	116 Call Object..ctor, X0
	117 Compare X20, 0
	118 JumpIfEqual {135}
	119 Move W8, [X20+48]
	120 Move [X20+16], X19
	121 Move [X20+32], X21
	122 Move [X20+56], X24
	123 Move [X20+64], X22
	124 Or W8, W8, 1
	125 Move [X20+48], W8
	126 Move X0, X20
	127 Move X20, [X31+48]
	128 Move X19, [X31+56]
	129 Move X22, [X31+32]
	130 Move X21, [X31+40]
	131 Move X24, [X31+16]
	132 Move X23, [X31+24]
	133 Move X30, [X31+64]
	134 Return X0
	135 Call 0x1C17F20

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x033E6444 STP X20, X19, [X31 + 0x10]
	0x033E6448 MOV X19, X1
	0x033E644C MOV X1, X31
	0x033E6450 MOV X20, X0
	0x033E6454 BL 0x33BDD8C
	0x033E6458 STR X19, [X20 + 0x10]
	0x033E645C LDP X20, X19, [X31 + 0x10]
	0x033E6460 LDR X30, [X31], #0x20
	0x033E6464 RET
	0x033E6468 STR X1, [X0 + 0x20]
	0x033E646C RET
	0x033E6470 STR X30, [X31 - 0x20]!
	0x033E6474 STP X20, X19, [X31 + 0x10]
	0x033E6478 ADRP X20, 0xFF7000
	0x033E647C LDRB W8, [X20 + 0x3D8]
	0x033E6480 MOV X19, X0
	0x033E6484 TBNZ X8, 0x0, 0x33E64B4
	0x033E6488 ADRP X0, 0xD47000
	0x033E648C LDR X0, [X0 + 0x3B8]
	0x033E6490 BL 0x1C16CF4
	0x033E6494 ADRP X0, 0xD47000
	0x033E6498 LDR X0, [X0 + 0x3C0]
	0x033E649C BL 0x1C16CF4
	0x033E64A0 ADRP X0, 0xD39000
	0x033E64A4 LDR X0, [X0 + 0x1D0]
	0x033E64A8 BL 0x1C16CF4
	0x033E64AC MOVZ W8, 0x1
	0x033E64B0 STRB W8, [X20 + 0x3D8]
	0x033E64B4 CBZ X19, 0x33E6564
	0x033E64B8 ADRP X9, 0xD47000
	0x033E64BC LDR X9, [X9 + 0x3C0]
	0x033E64C0 LDR X8, [X19]
	0x033E64C4 LDR X1, [X9]
	0x033E64C8 LDRB W10, [X8 + 0x130]
	0x033E64CC LDRB W9, [X1 + 0x130]
	0x033E64D0 CMP W10, W9
	0x033E64D4 B.CC 0x33E655C
	0x033E64D8 LDR X8, [X8 + 0xC8]
	0x033E64DC ADD X8, X8, X9, 0x3, LSL
	0x033E64E0 LDUR X8, [X8 - 0x8]
	0x033E64E4 CMP X8, X1
	0x033E64E8 B.NE 0x33E655C
	0x033E64EC LDR X0, [X19 + 0x10]
	0x033E64F0 CBZ X0, 0x33E6564
	0x033E64F4 ADRP X8, 0xD39000
	0x033E64F8 LDR X8, [X8 + 0x1D0]
	0x033E64FC LDR X9, [X8]
	0x033E6500 LDR X8, [X0]
	0x033E6504 CMP X8, X9
	0x033E6508 B.EQ 0x33E6540
	0x033E650C ADRP X9, 0xD47000
	0x033E6510 LDR X9, [X9 + 0x3B8]
	0x033E6514 LDR X1, [X9]
	0x033E6518 CMP X8, X1
	0x033E651C B.NE 0x33E6568
	0x033E6520 LDR X8, [X0 + 0x40]
	0x033E6524 LDR X1, [X19 + 0x18]
	0x033E6528 LDR X3, [X0 + 0x18]
	0x033E652C LDR X2, [X0 + 0x28]
	0x033E6530 LDP X20, X19, [X31 + 0x10]
	0x033E6534 MOV X0, X8
	0x033E6538 LDR X30, [X31], #0x20
	0x033E653C BR X3
	0x033E6540 LDR X8, [X0 + 0x40]
	0x033E6544 LDR X2, [X0 + 0x18]
	0x033E6548 LDR X1, [X0 + 0x28]
	0x033E654C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFF8000
	007 Move W8, [X21+970]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xD3F000
	015 Move X0, [X0+1984]
	016 Call 0x1C17CF4
	017 Move X0, 0xD0E000
	018 Move X0, [X0+1728]
	019 Call 0x1C17CF4
	020 Move X0, 0xD48000
	021 Move X0, [X0+736]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+970], W8
	025 Compare X19, 0
	026 JumpIfEqual {63}
	027 Move X20, [X20+32]
	028 Compare X20, 0
	029 JumpIfEqual {57}
	030 Move X8, 0xD0E000
	031 Move X8, [X8+1728]
	032 Move X22, 0xD48000
	033 Move X0, [X8]
	034 Move X8, 0xD3F000
	035 Move X8, [X8+1984]
	036 Move W9, [X0+224]
	037 Move X21, [X8]
	038 Move X22, [X22+736]
	039 Compare W9, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X21
	043 Move X1, X31
	044 Call Type.GetTypeFromHandle, X0
	045 Move X1, [X22]
	046 Move X3, X0
	047 Move X0, X19
	048 Move X2, X20
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X4, X31
	054 Move X30, [X31+48]
	055 Call SerializationInfo.AddValue, X0, X1, X2, X3
	056 Return 
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Return 
	063 Move X0, 0xD13000
	064 Move X0, [X0+1320]
	065 Call 0x1C17D08
	066 Call 0x1C17F10
	067 Move X19, X0
	068 Move X0, 0xD38000
	069 Move X0, [X0+728]
	070 Call 0x1C17D08
	071 Move X1, X0
	072 Move X0, X19
	073 Move X2, X31
	074 Call ArgumentNullException..ctor, X0, X1
	075 Move X0, 0xD48000
	076 Move X0, [X0+744]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X19
	080 Call 0x1C17DEC

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x033E6550 MOV X0, X8
	0x033E6554 LDR X30, [X31], #0x20
	0x033E6558 BR X2
	0x033E655C MOV X0, X19
	0x033E6560 BL 0x1C171E0
	0x033E6564 BL 0x1C16F20
	0x033E6568 BL 0x1C171E0
	0x033E656C STR X30, [X31 - 0x30]!
	0x033E6570 STP X22, X21, [X31 + 0x10]
	0x033E6574 STP X20, X19, [X31 + 0x20]
	0x033E6578 ADRP X21, 0xFF7000
	0x033E657C LDRB W8, [X21 + 0x3D9]
	0x033E6580 MOV X20, X1
	0x033E6584 MOV X19, X0
	0x033E6588 TBNZ X8, 0x0, 0x33E65B8
	0x033E658C ADRP X0, 0xD35000
	0x033E6590 LDR X0, [X0 + 0x580]
	0x033E6594 BL 0x1C16CF4
	0x033E6598 ADRP X0, 0xD47000
	0x033E659C LDR X0, [X0 + 0x3B8]
	0x033E65A0 BL 0x1C16CF4
	0x033E65A4 ADRP X0, 0xD47000
	0x033E65A8 LDR X0, [X0 + 0x3C0]
	0x033E65AC BL 0x1C16CF4
	0x033E65B0 MOVZ W8, 0x1
	0x033E65B4 STRB W8, [X21 + 0x3D9]
	0x033E65B8 LDR X21, [X19 + 0x20]
	0x033E65BC STR X20, [X19 + 0x18]
	0x033E65C0 CBZ X21, 0x33E6620
	0x033E65C4 ADRP X22, 0xD47000
	0x033E65C8 LDR X22, [X22 + 0x3C0]
	0x033E65CC ADRP X20, 0xD35000
	0x033E65D0 LDR X0, [X22]
	0x033E65D4 LDR W8, [X0 + 0xE0]
	0x033E65D8 LDR X20, [X20 + 0x580]
	0x033E65DC CBNZ W8, 0x33E65E8
	0x033E65E0 BL 0x1C16DFC
	0x033E65E4 LDR X0, [X22]
	0x033E65E8 LDR X8, [X20]
	0x033E65EC LDR X9, [X0 + 0xB8]
	0x033E65F0 LDR W10, [X8 + 0xE0]
	0x033E65F4 LDR X20, [X9]
	0x033E65F8 CBNZ W10, 0x33E6604
	0x033E65FC MOV X0, X8
	0x033E6600 BL 0x1C16DFC
	0x033E6604 MOV X0, X21
	0x033E6608 MOV X1, X20
	0x033E660C MOV X2, X19
	0x033E6610 LDP X20, X19, [X31 + 0x20]
	0x033E6614 LDP X22, X21, [X31 + 0x10]
	0x033E6618 LDR X30, [X31], #0x30
	0x033E661C B 0x33E1324
	0x033E6620 LDR X0, [X19 + 0x10]
	0x033E6624 CBZ X0, 0x33E6664
	0x033E6628 ADRP X8, 0xD47000
	0x033E662C LDR X8, [X8 + 0x3B8]
	0x033E6630 LDR X1, [X8]
	0x033E6634 LDR X8, [X0]
	0x033E6638 CMP X8, X1
	0x033E663C B.NE 0x33E6668
	0x033E6640 LDR X8, [X0 + 0x40]
	0x033E6644 LDR X3, [X0 + 0x18]
	0x033E6648 LDR X2, [X0 + 0x28]
	0x033E664C MOV X1, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFF8000
	007 Move W8, [X21+971]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xD3F000
	015 Move X0, [X0+880]
	016 Call 0x1C17CF4
	017 Move X0, 0xD48000
	018 Move X0, [X0+736]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+971], W8
	022 Move X0, X19
	023 Move X1, X31
	024 Call Object..ctor, X0
	025 Compare X20, 0
	026 JumpIfEqual {80}
	027 Move X0, X20
	028 Move X1, X31
	029 Call SerializationInfo.GetEnumerator, X0
	030 Compare X0, 0
	031 JumpIfEqual {80}
	032 Move X1, X31
	033 Move X20, X0
	034 Call SerializationInfoEnumerator.MoveNext, X0
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {74}
	039 Move X21, 0xD48000
	040 Move X22, 0xD3F000
	041 Move X21, [X21+736]
	042 Move X22, [X22+880]
	043 Move X0, X20
	044 Move X1, X31
	045 Call SerializationInfoEnumerator.get_Name, X0
	046 Compare X0, 0
	047 JumpIfEqual {80}
	048 Move X1, [X21]
	049 Move X2, X31
	050 Call String.Equals, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {67}
	055 Move X0, X20
	056 Move X1, X31
	057 Call SerializationInfoEnumerator.get_Value, X0
	058 Compare X0, 0
	059 JumpIfEqual {66}
	060 Move X1, [X22]
	061 Move X8, [X0]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move [X19+32], X0
	064 Move X8, [X0]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move [X19+32], X31
	067 Move X0, X20
	068 Move X1, X31
	069 Call SerializationInfoEnumerator.MoveNext, X0
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {43}
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move X30, [X31+48]
	079 Return 
	080 Call 0x1C17F20
	081 Call 0x1C181E0

Method: System.Boolean IsDefaultFTContext(System.Boolean ignoreSyncCtx)

Disassembly:
	0x033E5CE4 LDR X20, [X20 + 0x350]
	0x033E5CE8 TBNZ X8, 0x0, 0x33E5D30
	0x033E5CEC ADRP X0, 0xD48000
	0x033E5CF0 LDR X0, [X0 + 0x358]
	0x033E5CF4 BL 0x1C16CF4
	0x033E5CF8 ADRP X0, 0xD48000
	0x033E5CFC LDR X0, [X0 + 0x360]
	0x033E5D00 BL 0x1C16CF4
	0x033E5D04 ADRP X0, 0xD48000
	0x033E5D08 LDR X0, [X0 + 0x350]
	0x033E5D0C BL 0x1C16CF4
	0x033E5D10 ADRP X0, 0xD48000
	0x033E5D14 LDR X0, [X0 + 0x368]
	0x033E5D18 BL 0x1C16CF4
	0x033E5D1C ADRP X0, 0xD48000
	0x033E5D20 LDR X0, [X0 + 0x370]
	0x033E5D24 BL 0x1C16CF4
	0x033E5D28 MOVZ W8, 0x1
	0x033E5D2C STRB W8, [X19 + 0x3D1]
	0x033E5D30 LDR X0, [X20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move TEMP, X1
	005 And TEMP, TEMP, 1
	006 Compare TEMP, 1
	007 JumpIfEqual {11}
	008 Move X8, [X19+16]
	009 Compare X8, 0
	010 JumpIfNotEqual {29}
	011 Move X0, [X19+32]
	012 Compare X0, 0
	013 JumpIfEqual {20}
	014 Move X1, X31
	015 Call LogicalCallContext.get_HasInfo, X0
	016 Move TEMP, X0
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {29}
	020 Move X0, [X19+40]
	021 Compare X0, 0
	022 JumpIfEqual {30}
	023 Move X1, X31
	024 Call IllogicalCallContext.get_HasUserData, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {30}
	029 Move W0, W31
	030 Move W0, 1
	031 Move X30, [X31+16]
	032 Move X19, [X31+24]
	033 Return X0

Method: System.Void .cctor()

Disassembly:
	0x033E6650 LDP X20, X19, [X31 + 0x20]
	0x033E6654 LDP X22, X21, [X31 + 0x10]
	0x033E6658 MOV X0, X8
	0x033E665C LDR X30, [X31], #0x30
	0x033E6660 BR X3
	0x033E6664 BL 0x1C16F20
	0x033E6668 BL 0x1C171E0
	0x033E666C STR X30, [X31 - 0x30]!
	0x033E6670 STP X22, X21, [X31 + 0x10]
	0x033E6674 STP X20, X19, [X31 + 0x20]
	0x033E6678 ADRP X20, 0xFF7000
	0x033E667C LDRB W8, [X20 + 0x3DA]
	0x033E6680 MOV X19, X0
	0x033E6684 TBNZ X8, 0x0, 0x33E66B4
	0x033E6688 ADRP X0, 0xD35000
	0x033E668C LDR X0, [X0 + 0x580]
	0x033E6690 BL 0x1C16CF4
	0x033E6694 ADRP X0, 0xD47000
	0x033E6698 LDR X0, [X0 + 0x3C0]
	0x033E669C BL 0x1C16CF4
	0x033E66A0 ADRP X0, 0xD39000
	0x033E66A4 LDR X0, [X0 + 0x1D0]
	0x033E66A8 BL 0x1C16CF4
	0x033E66AC MOVZ W8, 0x1
	0x033E66B0 STRB W8, [X20 + 0x3DA]
	0x033E66B4 LDR X20, [X19 + 0x20]
	0x033E66B8 CBZ X20, 0x33E6718
	0x033E66BC ADRP X22, 0xD47000
	0x033E66C0 LDR X22, [X22 + 0x3C0]
	0x033E66C4 ADRP X21, 0xD35000
	0x033E66C8 LDR X0, [X22]
	0x033E66CC LDR W8, [X0 + 0xE0]
	0x033E66D0 LDR X21, [X21 + 0x580]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xFF8000
	005 Move X20, 0xD36000
	006 Move W8, [X19+972]
	007 Move X20, [X20+1408]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD36000
	013 Move X0, [X0+1408]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+972], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move W8, 4
	023 Move [X19+48], W8
	024 Move X8, [X20]
	025 Move X8, [X8+184]
	026 Move [X8], X19
	027 Move X0, [X20]
	028 Call 0x1C17F10
	029 Move X1, X31
	030 Move X19, X0
	031 Call Object..ctor, X0
	032 Move X8, [X20]
	033 Move X8, [X8+184]
	034 Move [X8+8], X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Return 

