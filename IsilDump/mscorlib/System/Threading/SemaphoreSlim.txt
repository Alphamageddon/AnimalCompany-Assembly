Type: System.Threading.SemaphoreSlim

Method: System.Void .ctor(System.Int32 initialCount)

Disassembly:
	0x033E2548 BL 0x1C16D08
	0x033E254C MOV X1, X0

ISIL:
	001 Move TEMP, 0x80000000
	002 Not TEMP
	003 Move W2, TEMP

Method: System.Void .ctor(System.Int32 initialCount, System.Int32 maxCount)

Disassembly:
	0x033E2550 MOV X0, X21
	0x033E2554 MOV X2, X19
	0x033E2558 MOV X3, X20
	0x033E255C MOV X4, X31
	0x033E2560 BL 0x3312C8C
	0x033E2564 ADRP X0, 0xD4B000
	0x033E2568 LDR X0, [X0 + 0x198]
	0x033E256C BL 0x1C16D08
	0x033E2570 MOV X1, X0
	0x033E2574 MOV X0, X21
	0x033E2578 BL 0x1C16DEC
	0x033E257C MOV X0, X22
	0x033E2580 BL 0x1C16F18
	0x033E2584 ADRP X0, 0xD4B000
	0x033E2588 LDR X0, [X0 + 0x1A0]
	0x033E258C BL 0x1C16D08
	0x033E2590 BL 0x1C16F10
	0x033E2594 MOV X21, X0
	0x033E2598 BL 0x33DCE9C
	0x033E259C ADRP X0, 0xD4B000
	0x033E25A0 LDR X0, [X0 + 0x198]
	0x033E25A4 BL 0x1C16D08
	0x033E25A8 MOV X1, X0
	0x033E25AC MOV X0, X21
	0x033E25B0 BL 0x1C16DEC
	0x033E25B4 BL 0x1C16F20
	0x033E25B8 B 0x33E25EC
	0x033E25BC B 0x33E25DC
	0x033E25C0 B 0x33E25EC
	0x033E25C4 B 0x33E25DC
	0x033E25C8 B 0x33E25EC
	0x033E25CC B 0x33E25EC
	0x033E25D0 B 0x33E25EC
	0x033E25D4 B 0x33E25EC
	0x033E25D8 B 0x33E25DC
	0x033E25DC MOV X21, X0
	0x033E25E0 MOV W20, W31
	0x033E25E4 B 0x33E25F0
	0x033E25E8 B 0x33E25EC
	0x033E25EC MOV X21, X0
	0x033E25F0 CMP W1, 0x1
	0x033E25F4 B.NE 0x33E260C
	0x033E25F8 MOV X0, X21
	0x033E25FC BL 0x3EB1AD0
	0x033E2600 LDR X22, [X0]
	0x033E2604 BL 0x3EB1AE0
	0x033E2608 B 0x33E24BC
	0x033E260C MOV X22, X31
	0x033E2610 B 0x33E2618
	0x033E2614 MOV X21, X0
	0x033E2618 LDRB W8, [X31 + 0xC]
	0x033E261C CBZ W8, 0x33E2628
	0x033E2620 MOV X0, X19
	0x033E2624 BL 0x1C4BEB4
	0x033E2628 CBNZ X22, 0x33E2634
	0x033E262C MOV X0, X21
	0x033E2630 BL 0x1D2C690
	0x033E2634 MOV X0, X22
	0x033E2638 BL 0x1C16F18
	0x033E263C BL 0x1990590
	0x033E2640 CBZ X0, 0x33E2648
	0x033E2644 B 0x33E5884
	0x033E2648 STP X30, X19, [X31 - 0x10]!
	0x033E264C ADRP X0, 0xD16000
	0x033E2650 LDR X0, [X0 + 0x528]
	0x033E2654 BL 0x1C16D08
	0x033E2658 BL 0x1C16F10
	0x033E265C MOV X19, X0
	0x033E2660 ADRP X0, 0xD1C000
	0x033E2664 LDR X0, [X0 + 0x8A8]
	0x033E2668 BL 0x1C16D08
	0x033E266C MOV X1, X0
	0x033E2670 MOV X0, X19
	0x033E2674 MOV X2, X31
	0x033E2678 BL 0x330E100
	0x033E267C ADRP X0, 0xD4B000
	0x033E2680 LDR X0, [X0 + 0x1A8]
	0x033E2684 BL 0x1C16D08
	0x033E2688 MOV X1, X0
	0x033E268C MOV X0, X19
	0x033E2690 BL 0x1C16DEC
	0x033E2694 MOV W1, W31
	0x033E2698 MOV X2, X31
	0x033E269C B 0x33E9E8C
	0x033E26A0 STP X30, X21, [X31 - 0x20]!
	0x033E26A4 STP X20, X19, [X31 + 0x10]
	0x033E26A8 ADRP X21, 0xFFB000
	0x033E26AC ADRP X20, 0xD18000
	0x033E26B0 LDRB W8, [X21 + 0x3AA]
	0x033E26B4 LDR X20, [X20 + 0xC10]
	0x033E26B8 MOV X19, X0
	0x033E26BC TBNZ X8, 0x0, 0x33E26D4
	0x033E26C0 ADRP X0, 0xD18000
	0x033E26C4 LDR X0, [X0 + 0xC10]
	0x033E26C8 BL 0x1C16CF4
	0x033E26CC MOVZ W8, 0x1
	0x033E26D0 STRB W8, [X21 + 0x3AA]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFFC000
	007 Move W8, [X22+931]
	008 Move W21, W2
	009 Move W19, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD18000
	016 Move X0, [X0+3264]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+931], W8
	020 Move X0, X20
	021 Move X1, X31
	022 Call Object..ctor, X0
	023 Move TEMP, X19
	024 And TEMP, TEMP, -2147483648
	025 Compare TEMP, -2147483648
	026 JumpIfEqual {46}
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, 0xD18000
	030 Move X8, [X8+3264]
	031 Move [X20+20], W21
	032 Move X0, [X8]
	033 Call 0x1C17F10
	034 Move X1, X31
	035 Move X21, X0
	036 Call Object..ctor, X0
	037 Move [X20+32], X21
	038 Call 0x1C17D44
	039 Move [X20+16], W19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Return 
	046 Move [X31+12], W19
	047 Move X0, 0xD12000
	048 Move X0, [X0+1880]
	049 Call 0x1C17D08
	050 Add X1, X31, 12
	051 Call 0x1C17E04
	052 Move X19, X0
	053 Move X0, 0xD41000
	054 Move X0, [X0+3760]
	055 Call 0x1C17D08
	056 Call 0x19913D0
	057 Move X0, 0xD4C000
	058 Move X0, [X0+264]
	059 Call 0x1C17D08
	060 Call SemaphoreSlim.GetResourceString, X0
	061 Move X20, X0
	062 Move X0, 0xD1A000
	063 Move X0, [X0+1888]
	064 Call 0x1C17D08
	065 Call 0x1C17F10
	066 Move X21, X0
	067 Move X0, 0xD4C000
	068 Move X0, [X0+272]
	069 Move [X31+8], W21
	070 Move X0, 0xD12000
	071 Move X0, [X0+1880]
	072 Call 0x1C17D08
	073 Add X1, X31, 8
	074 Call 0x1C17E04
	075 Move X19, X0
	076 Move X0, 0xD41000
	077 Move X0, [X0+3760]
	078 Call 0x1C17D08
	079 Call 0x19913D0
	080 Move X0, 0xD4C000
	081 Move X0, [X0+280]
	082 Call 0x1C17D08
	083 Call SemaphoreSlim.GetResourceString, X0
	084 Move X20, X0
	085 Move X0, 0xD1A000
	086 Move X0, [X0+1888]
	087 Call 0x1C17D08
	088 Call 0x1C17F10
	089 Move X21, X0
	090 Move X0, 0xD4C000
	091 Move X0, [X0+288]
	092 Call 0x1C17D08
	093 Move X1, X0
	094 Move X0, X21
	095 Move X2, X19
	096 Move X3, X20
	097 Move X4, X31
	098 Call ArgumentOutOfRangeException..ctor, X0, X1, X2, X3
	099 Move X0, 0xD4C000
	100 Move X0, [X0+296]
	101 Call 0x1C17D08
	102 Move X1, X0
	103 Move X0, X21
	104 Call 0x1C17DEC

Method: System.Void Wait()

Disassembly:
	0x033E26DC MOV X0, X19
	0x033E26E0 LDP X9, X2, [X8 + 0x188]
	0x033E26E4 BLR X9

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W1, TEMP
	004 Move X2, X31

Method: System.Boolean Wait(System.Int32 millisecondsTimeout)

Disassembly:
	0x033E2C08 CBZ X0, 0x33E2F10
	0x033E2C0C LDR W8, [X21 + 0x18]

ISIL:
	001 Move X2, X31
	002 Call SemaphoreSlim.Wait, X0, X1, X2
	003 Return X0

Method: System.Boolean Wait(System.Int32 millisecondsTimeout, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x033E26E8 LDR X0, [X20]
	0x033E26EC LDR W8, [X0 + 0xE0]
	0x033E26F0 CBNZ W8, 0x33E26F8
	0x033E26F4 BL 0x1C16DFC
	0x033E26F8 MOV X0, X19
	0x033E26FC LDP X20, X19, [X31 + 0x10]
	0x033E2700 MOV X1, X31
	0x033E2704 LDP X30, X21, [X31], #0x20
	0x033E2708 B 0x33B3E9C
	0x033E270C STR X30, [X31 - 0x20]!
	0x033E2710 STP X20, X19, [X31 + 0x10]
	0x033E2714 TBZ X1, 0x0, 0x33E2758
	0x033E2718 LDR X20, [X0 + 0x28]
	0x033E271C MOV X19, X0
	0x033E2720 BL 0x1C16D44
	0x033E2724 CBZ X20, 0x33E2750
	0x033E2728 LDR X20, [X19 + 0x28]
	0x033E272C BL 0x1C16D44
	0x033E2730 CBZ X20, 0x33E2764
	0x033E2734 LDR X8, [X20]
	0x033E2738 MOV X0, X20
	0x033E273C LDR X9, [X8 + 0x208]
	0x033E2740 LDR X1, [X8 + 0x210]
	0x033E2744 BLR X9
	0x033E2748 BL 0x1C16D44
	0x033E274C STR X31, [X19 + 0x28]
	0x033E2750 STR X31, [X19 + 0x20]
	0x033E2754 STP X31, X31, [X19 + 0x30]
	0x033E2758 LDP X20, X19, [X31 + 0x10]
	0x033E275C LDR X30, [X31], #0x20
	0x033E2760 RET
	0x033E2764 BL 0x1C16F20
	0x033E2768 SUB X31, X31, 0x30
	0x033E276C STP X30, X21, [X31 + 0x10]
	0x033E2770 STP X20, X19, [X31 + 0x20]
	0x033E2774 ADRP X19, 0xFFB000
	0x033E2778 LDRB W8, [X19 + 0x3AB]
	0x033E277C MOV X20, X0
	0x033E2780 TBNZ X8, 0x0, 0x33E2798
	0x033E2784 ADRP X0, 0xD40000
	0x033E2788 LDR X0, [X0 + 0xEB0]
	0x033E278C BL 0x1C16CF4
	0x033E2790 MOVZ W8, 0x1
	0x033E2794 STRB W8, [X19 + 0x3AB]
	0x033E2798 CBZ X20, 0x33E2814
	0x033E279C ADRP X8, 0xD40000
	0x033E27A0 LDR X8, [X8 + 0xEB0]
	0x033E27A4 LDR X9, [X20]
	0x033E27A8 LDR X8, [X8]
	0x033E27AC LDRB W11, [X9 + 0x130]
	0x033E27B0 LDRB W10, [X8 + 0x130]
	0x033E27B4 CMP W11, W10
	0x033E27B8 B.CC 0x33E2814
	0x033E27BC LDR X9, [X9 + 0xC8]
	0x033E27C0 ADD X9, X9, X10, 0x3, LSL
	0x033E27C4 LDUR X9, [X9 - 0x8]
	0x033E27C8 CMP X9, X8
	0x033E27CC B.NE 0x33E2814
	0x033E27D0 LDR X19, [X20 + 0x20]
	0x033E27D4 STRB W31, [X31 + 0xC]
	0x033E27D8 ADD X1, X31, 0xC
	0x033E27DC MOV X0, X19
	0x033E27E0 BL 0x33DE64C
	0x033E27E4 LDR X0, [X20 + 0x20]
	0x033E27E8 BL 0x33DE87C
	0x033E27EC MOV X20, X31
	0x033E27F0 LDRB W8, [X31 + 0xC]
	0x033E27F4 CBZ W8, 0x33E2800
	0x033E27F8 MOV X0, X19
	0x033E27FC BL 0x1C4BEB4
	0x033E2800 CBNZ X20, 0x33E2818
	0x033E2804 LDP X20, X19, [X31 + 0x20]
	0x033E2808 LDP X30, X21, [X31 + 0x10]
	0x033E280C ADD X31, X31, 0x30
	0x033E2810 RET
	0x033E2814 BL 0x1C16F20
	0x033E2818 MOV X0, X20
	0x033E281C BL 0x1C16F18
	0x033E2820 B 0x33E2824
	0x033E2824 MOV X21, X0
	0x033E2828 CMP W1, 0x1
	0x033E282C B.NE 0x33E2844
	0x033E2830 MOV X0, X21
	0x033E2834 BL 0x3EB1AD0
	0x033E2838 LDR X20, [X0]
	0x033E283C BL 0x3EB1AE0
	0x033E2840 B 0x33E27F0
	0x033E2844 MOV X20, X31
	0x033E2848 B 0x33E2850
	0x033E284C MOV X21, X0
	0x033E2850 LDRB W8, [X31 + 0xC]
	0x033E2854 CBZ W8, 0x33E2860
	0x033E2858 MOV X0, X19
	0x033E285C BL 0x1C4BEB4
	0x033E2860 CBNZ X20, 0x33E286C
	0x033E2864 MOV X0, X21
	0x033E2868 BL 0x1D2C690
	0x033E286C MOV X0, X20
	0x033E2870 BL 0x1C16F18
	0x033E2874 BL 0x1990590
	0x033E2878 STR X30, [X31 - 0x40]!
	0x033E287C STP X24, X23, [X31 + 0x10]
	0x033E2880 STP X22, X21, [X31 + 0x20]
	0x033E2884 STP X20, X19, [X31 + 0x30]
	0x033E2888 ADRP X19, 0xFFB000
	0x033E288C ADRP X24, 0xD4B000
	0x033E2890 ADRP X23, 0xD4B000
	0x033E2894 ADRP X20, 0xD40000
	0x033E2898 ADRP X22, 0xD3B000
	0x033E289C ADRP X21, 0xD4B000
	0x033E28A0 LDRB W8, [X19 + 0x3AC]
	0x033E28A4 LDR X24, [X24 + 0x1B0]
	0x033E28A8 LDR X23, [X23 + 0x1B8]
	0x033E28AC LDR X20, [X20 + 0xEB0]
	0x033E28B0 LDR X22, [X22 + 0xE48]
	0x033E28B4 LDR X21, [X21 + 0x1C0]
	0x033E28B8 TBNZ X8, 0x0, 0x33E2900
	0x033E28BC ADRP X0, 0xD3B000
	0x033E28C0 LDR X0, [X0 + 0xE48]
	0x033E28C4 BL 0x1C16CF4
	0x033E28C8 ADRP X0, 0xD4B000
	0x033E28CC LDR X0, [X0 + 0x1C0]
	0x033E28D0 BL 0x1C16CF4
	0x033E28D4 ADRP X0, 0xD40000
	0x033E28D8 LDR X0, [X0 + 0xEB0]
	0x033E28DC BL 0x1C16CF4
	0x033E28E0 ADRP X0, 0xD4B000
	0x033E28E4 LDR X0, [X0 + 0x1B8]
	0x033E28E8 BL 0x1C16CF4
	0x033E28EC ADRP X0, 0xD4B000
	0x033E28F0 LDR X0, [X0 + 0x1B0]
	0x033E28F4 BL 0x1C16CF4
	0x033E28F8 MOVZ W8, 0x1
	0x033E28FC STRB W8, [X19 + 0x3AC]
	0x033E2900 LDR X0, [X24]
	0x033E2904 BL 0x1C16F10
	0x033E2908 LDR X5, [X23]
	0x033E290C MOVZ W2, 0x1
	0x033E2910 MOVZ W3, 0x4000
	0x033E2914 MOV W1, W31
	0x033E2918 MOV X4, X31
	0x033E291C MOV X19, X0
	0x033E2920 BL 0x269A8A0
	0x033E2924 LDR X8, [X20]
	0x033E2928 LDR X8, [X8 + 0xB8]
	0x033E292C STR X19, [X8]
	0x033E2930 LDR X0, [X24]
	0x033E2934 BL 0x1C16F10
	0x033E2938 LDR X5, [X23]
	0x033E293C MOVZ W3, 0x4000
	0x033E2940 MOV W1, W31
	0x033E2944 MOV W2, W31
	0x033E2948 MOV X4, X31
	0x033E294C MOV X19, X0
	0x033E2950 BL 0x269A8A0
	0x033E2954 LDR X8, [X20]
	0x033E2958 LDR X8, [X8 + 0xB8]
	0x033E295C STR X19, [X8 + 0x8]
	0x033E2960 LDR X0, [X22]
	0x033E2964 BL 0x1C16F10
	0x033E2968 LDR X2, [X21]
	0x033E296C MOV X1, X31
	0x033E2970 MOV X3, X31
	0x033E2974 MOV X19, X0
	0x033E2978 BL 0x2A6B948
	0x033E297C LDR X8, [X20]
	0x033E2980 LDP X22, X21, [X31 + 0x20]
	0x033E2984 LDP X24, X23, [X31 + 0x10]
	0x033E2988 LDR X8, [X8 + 0xB8]
	0x033E298C STR X19, [X8 + 0x10]
	0x033E2990 LDP X20, X19, [X31 + 0x30]
	0x033E2994 LDR X30, [X31], #0x40
	0x033E2998 RET
	0x033E299C STP X30, X21, [X31 - 0x20]!
	0x033E29A0 STP X20, X19, [X31 + 0x10]
	0x033E29A4 ADRP X20, 0xFFB000
	0x033E29A8 ADRP X21, 0xD4B000
	0x033E29AC LDRB W8, [X20 + 0x3AE]
	0x033E29B0 LDR X21, [X21 + 0x1C8]
	0x033E29B4 MOV X19, X0
	0x033E29B8 TBNZ X8, 0x0, 0x33E29D0
	0x033E29BC ADRP X0, 0xD4B000
	0x033E29C0 LDR X0, [X0 + 0x1C8]
	0x033E29C4 BL 0x1C16CF4
	0x033E29C8 MOVZ W8, 0x1
	0x033E29CC STRB W8, [X20 + 0x3AE]
	0x033E29D0 LDR X2, [X21]
	0x033E29D4 MOV X0, X19
	0x033E29D8 LDP X20, X19, [X31 + 0x10]
	0x033E29DC MOVZ W1, 0x1
	0x033E29E0 LDP X30, X21, [X31], #0x20
	0x033E29E4 B 0x269AD9C
	0x033E29E8 RET
	0x033E29EC SUB X31, X31, 0x80
	0x033E29F0 STP X30, X27, [X31 + 0x30]
	0x033E29F4 STP X26, X25, [X31 + 0x40]
	0x033E29F8 STP X24, X23, [X31 + 0x50]
	0x033E29FC STP X22, X21, [X31 + 0x60]
	0x033E2A00 STP X20, X19, [X31 + 0x70]
	0x033E2A04 ADRP X20, 0xFFB000
	0x033E2A08 LDRB W8, [X20 + 0x3AF]
	0x033E2A0C MOV X19, X0
	0x033E2A10 TBNZ X8, 0x0, 0x33E2AE8
	0x033E2A14 ADRP X0, 0xD4B000
	0x033E2A18 LDR X0, [X0 + 0x1D0]
	0x033E2A1C BL 0x1C16CF4
	0x033E2A20 ADRP X0, 0xD4B000
	0x033E2A24 LDR X0, [X0 + 0x1D8]
	0x033E2A28 BL 0x1C16CF4
	0x033E2A2C ADRP X0, 0xD1B000
	0x033E2A30 LDR X0, [X0 + 0x188]
	0x033E2A34 BL 0x1C16CF4
	0x033E2A38 ADRP X0, 0xD1B000
	0x033E2A3C LDR X0, [X0 + 0xE0]
	0x033E2A40 BL 0x1C16CF4
	0x033E2A44 ADRP X0, 0xD13000
	0x033E2A48 LDR X0, [X0 + 0xA50]
	0x033E2A4C BL 0x1C16CF4
	0x033E2A50 ADRP X0, 0xD19000
	0x033E2A54 LDR X0, [X0 + 0x7D8]
	0x033E2A58 BL 0x1C16CF4
	0x033E2A5C ADRP X0, 0xD3C000
	0x033E2A60 LDR X0, [X0 + 0x310]
	0x033E2A64 BL 0x1C16CF4
	0x033E2A68 ADRP X0, 0xD4B000
	0x033E2A6C LDR X0, [X0 + 0x1E0]
	0x033E2A70 BL 0x1C16CF4
	0x033E2A74 ADRP X0, 0xD4B000
	0x033E2A78 LDR X0, [X0 + 0x1E8]
	0x033E2A7C BL 0x1C16CF4
	0x033E2A80 ADRP X0, 0xD3C000
	0x033E2A84 LDR X0, [X0 + 0x318]
	0x033E2A88 BL 0x1C16CF4
	0x033E2A8C ADRP X0, 0xD4B000
	0x033E2A90 LDR X0, [X0 + 0x1F0]
	0x033E2A94 BL 0x1C16CF4
	0x033E2A98 ADRP X0, 0xD3C000
	0x033E2A9C LDR X0, [X0 + 0x320]
	0x033E2AA0 BL 0x1C16CF4
	0x033E2AA4 ADRP X0, 0xD11000
	0x033E2AA8 LDR X0, [X0 + 0xE00]
	0x033E2AAC BL 0x1C16CF4
	0x033E2AB0 ADRP X0, 0xD1A000
	0x033E2AB4 LDR X0, [X0 + 0xC20]
	0x033E2AB8 BL 0x1C16CF4
	0x033E2ABC ADRP X0, 0xD4B000
	0x033E2AC0 LDR X0, [X0 + 0x1F8]
	0x033E2AC4 BL 0x1C16CF4
	0x033E2AC8 ADRP X0, 0xD3C000
	0x033E2ACC LDR X0, [X0 + 0x328]
	0x033E2AD0 BL 0x1C16CF4
	0x033E2AD4 ADRP X0, 0xD12000
	0x033E2AD8 LDR X0, [X0 + 0x7B8]
	0x033E2ADC BL 0x1C16CF4
	0x033E2AE0 MOVZ W8, 0x1
	0x033E2AE4 STRB W8, [X20 + 0x3AF]
	0x033E2AE8 STP X31, X31, [X31 + 0x20]
	0x033E2AEC STRB W31, [X31 + 0x1C]
	0x033E2AF0 STP X31, X31, [X31]
	0x033E2AF4 ADRP X25, 0xD1B000
	0x033E2AF8 LDR W24, [X19]
	0x033E2AFC LDR X20, [X19 + 0x38]
	0x033E2B00 LDR X25, [X25 + 0xE0]
	0x033E2B04 CBZ W24, 0x33E2B40
	0x033E2B08 CMP W24, 0x1
	0x033E2B0C B.NE 0x33E2B58
	0x033E2B10 LDR V0, [X19 + 0x6]
	0x033E2B14 MOVN W8, 0x0
	0x033E2B18 STR V0, [X31]
	0x033E2B1C STP X31, X31, [X19 + 0x60]
	0x033E2B20 STR W8, [X19]
	0x033E2B24 ADRP X8, 0xD3C000
	0x033E2B28 LDR X8, [X8 + 0x318]
	0x033E2B2C LDR X1, [X8]
	0x033E2B30 ADD X0, X31, 0x0
	0x033E2B34 BL 0x29987D4
	0x033E2B38 MOV W23, W0
	0x033E2B3C B 0x33E2E9C
	0x033E2B40 LDR V0, [X19 + 0x5]
	0x033E2B44 MOVN W24, 0x0
	0x033E2B48 STR V0, [X31 + 0x2]
	0x033E2B4C STP X31, X31, [X19 + 0x50]
	0x033E2B50 STR W24, [X19]
	0x033E2B54 B 0x33E2CCC
	0x033E2B58 ADRP X8, 0xD19000
	0x033E2B5C LDR X8, [X8 + 0x7D8]
	0x033E2B60 LDR X0, [X8]
	0x033E2B64 LDR W8, [X0 + 0xE0]
	0x033E2B68 CBNZ W8, 0x33E2B70
	0x033E2B6C BL 0x1C16DFC
	0x033E2B70 ADRP X8, 0xD13000
	0x033E2B74 LDR X21, [X19 + 0x20]
	0x033E2B78 LDR X8, [X8 + 0xA50]
	0x033E2B7C LDR X0, [X8]
	0x033E2B80 CBZ X21, 0x33E2BA4
	0x033E2B84 LDR W8, [X0 + 0xE0]
	0x033E2B88 CBNZ W8, 0x33E2B90
	0x033E2B8C BL 0x1C16DFC
	0x033E2B90 MOV X0, X21
	0x033E2B94 MOV X1, X31
	0x033E2B98 BL 0x33E0A98
	0x033E2B9C MOV X21, X0
	0x033E2BA0 B 0x33E2BD0
	0x033E2BA4 BL 0x1C16F10
	0x033E2BA8 MOV X21, X0
	0x033E2BAC BL 0x1C16D44
	0x033E2BB0 MOVN W8, 0x0
	0x033E2BB4 STR W8, [X21 + 0x24]
	0x033E2BB8 MOV X0, X21
	0x033E2BBC MOV X1, X31
	0x033E2BC0 BL 0x33BDD8C
	0x033E2BC4 BL 0x1C16D44
	0x033E2BC8 MOVZ W8, 0x1
	0x033E2BCC STR W8, [X21 + 0x20]
	0x033E2BD0 STR X21, [X19 + 0x40]
	0x033E2BD4 ADRP X8, 0xD1A000
	0x033E2BD8 LDR X8, [X8 + 0xC20]
	0x033E2BDC LDR X0, [X8]
	0x033E2BE0 MOVZ W1, 0x2
	0x033E2BE4 BL 0x1C16D6C
	0x033E2BE8 MOV X21, X0
	0x033E2BEC CBZ X0, 0x33E2EE8
	0x033E2BF0 LDR X22, [X19 + 0x28]
	0x033E2BF4 CBZ X22, 0x33E2C0C
	0x033E2BF8 LDR X8, [X21]
	0x033E2BFC LDR X1, [X8 + 0x40]
	0x033E2C00 MOV X0, X22
	0x033E2C04 BL 0x1C16E00

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X2
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X22, 0xFFC000
	011 Move W8, [X22+932]
	012 Move X20, X2
	013 Move W21, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0xD1A000
	020 Move X0, [X0+2008]
	021 Call 0x1C17CF4
	022 Move X0, 0xD41000
	023 Move X0, [X0+3760]
	024 Call 0x1C17CF4
	025 Move X0, 0xD1E000
	026 Move X0, [X0+1136]
	027 Call 0x1C17CF4
	028 Move X0, 0xD1A000
	029 Move X0, [X0+2192]
	030 Call 0x1C17CF4
	031 Move X0, 0xD1A000
	032 Move X0, [X0+2208]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+932], W8
	036 Move X0, X19
	037 Move [X31+60], W31
	038 Move [X31+32], X31
	039 Move [X31+40], X31
	040 Move [X31+48], X31
	041 Move [X31+16], X31
	042 Call SemaphoreSlim.CheckDispose, X0
	043 Add W31, W21, 2
	044 Move X23, 0xD1A000
	045 Move X23, [X23+2008]
	046 Move X0, [X23]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Add X0, X31, 72
	052 Call CancellationToken.ThrowIfCancellationRequested, X0
	053 Compare W21, 0
	054 JumpIfEqual {59}
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X0, X31
	057 Call Environment.get_TickCount
	058 Move W22, W0
	059 Move W24, [X19+16]
	060 Call 0x1C17D44
	061 Move W22, W31
	062 Compare W24, 0
	063 JumpIfNotEqual {65}
	064 Move W22, W31
	065 Move X24, 0xD41000
	066 Move X24, [X24+3760]
	067 Move [X31+60], W31
	068 Move X0, [X24]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {74}
	072 Call 0x1C17DFC
	073 Move X0, [X24]
	074 Move X8, [X23]
	075 Move X9, [X0+184]
	076 Move W10, [X8+224]
	077 Move X23, [X9+16]
	078 Compare W10, 0
	079 JumpIfNotEqual {82}
	080 Move X0, X8
	081 Call 0x1C17DFC
	082 Move X24, 0xD1E000
	083 Move X24, [X24+1136]
	084 Add X8, X31, 32
	085 Add X0, X31, 72
	086 Move X1, X23
	087 Move X2, X19
	088 Call CancellationToken.InternalRegisterWithoutEC, X0, X1, X2
	089 Move [X31+24], W31
	090 Move W23, [X19+16]
	091 Call 0x1C17D44
	092 Compare W23, 0
	093 JumpIfNotEqual {112}
	094 Move X0, [X24]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Add X0, X31, 24
	100 Call SpinWait.get_NextSpinWillYield, X0
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {112}
	105 Move X0, [X24]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Add X0, X31, 24
	111 Call SpinWait.SpinOnce, X0
	112 Move X0, [X19+32]
	113 Add X1, X31, 60
	114 Call Monitor.Enter, X0, X1
	115 Move W8, [X31+60]
	116 Compare W8, 0
	117 JumpIfEqual {123}
	118 Move W23, [X19+24]
	119 Call 0x1C17D44
	120 Call 0x1C17D44
	121 Add W8, W23, 1
	122 Move [X19+24], W8
	123 Move X8, [X19+48]
	124 Compare X8, 0
	125 JumpIfEqual {133}
	126 Move X0, X19
	127 Move W1, W21
	128 Move X2, X20
	129 Call SemaphoreSlim.WaitAsync, X0, X1, X2
	130 Move X20, X0
	131 Move X21, X31
	132 Move W22, W31
	133 Move W23, [X19+16]
	134 Call 0x1C17D44
	135 Compare W23, 0
	136 JumpIfEqual {139}
	137 Move X20, X31
	138 Move W22, W31
	139 Compare W21, 0
	140 JumpIfEqual {220}
	141 Move X0, X19
	142 Move W1, W21
	143 Move W2, W22
	144 Move X3, X20
	145 Call SemaphoreSlim.WaitUntilCountOrTimeout, X0, X1, X2, X3
	146 Move X20, X31
	147 And W22, W0, 1
	148 Move W21, [X19+16]
	149 Call 0x1C17D44
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move W20, [X19+16]
	152 Call 0x1C17D44
	153 Call 0x1C17D44
	154 Subtract W8, W20, 1
	155 Move W22, 1
	156 Move [X19+16], W8
	157 Compare X20, 0
	158 JumpIfNotEqual {262}
	159 Move X20, [X19+40]
	160 Call 0x1C17D44
	161 Compare X20, 0
	162 JumpIfEqual {173}
	163 Move W20, [X19+16]
	164 Call 0x1C17D44
	165 Compare W20, 0
	166 JumpIfNotEqual {173}
	167 Move X20, [X19+40]
	168 Call 0x1C17D44
	169 Compare X20, 0
	170 JumpIfEqual {268}
	171 Move X0, X20
	172 Call EventWaitHandle.Reset, X0
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X21, X31
	175 Move X20, X31
	176 NotImplemented "Instruction CSET not yet implemented."
	177 Move W23, 12
	178 Move W8, [X31+60]
	179 Compare W8, 0
	180 JumpIfEqual {188}
	181 Move W24, [X19+24]
	182 Call 0x1C17D44
	183 Call 0x1C17D44
	184 Move X0, [X19+32]
	185 Subtract W8, W24, 1
	186 Move [X19+24], W8
	187 Call 0x1C4CEB4
	188 Add X0, X31, 32
	189 Call CancellationTokenRegistration.Dispose, X0
	190 Compare X21, 0
	191 JumpIfNotEqual {260}
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Compare W23, 0
	194 JumpIfNotEqual {209}
	195 Compare X20, 0
	196 JumpIfEqual {210}
	197 Move X8, 0xD1A000
	198 Move X8, [X8+2208]
	199 Move X0, X20
	200 Move X1, [X8]
	201 Call Task`1<Boolean>.GetAwaiter, X0
	202 Move X8, 0xD1A000
	203 Move X8, [X8+2192]
	204 Move [X31+16], X0
	205 Add X0, X31, 16
	206 Move X1, [X8]
	207 Call TaskAwaiter`1<Boolean>.GetResult, X0
	208 Move W22, W0
	209 Move W22, W31
	210 And W0, W22, 1
	211 Move X20, [X31+112]
	212 Move X19, [X31+120]
	213 Move X22, [X31+96]
	214 Move X21, [X31+104]
	215 Move X24, [X31+80]
	216 Move X23, [X31+88]
	217 Move X30, [X31+64]
	218 Add X31, X31, 128
	219 Return X0
	220 Move X21, X31
	221 Move X20, X31
	222 Move W22, W31
	223 Move W23, 15
	224 Move [X31+12], W21
	225 Move X0, 0xD12000
	226 Move X0, [X0+1880]
	227 Call 0x1C17D08
	228 Add X1, X31, 12
	229 Call 0x1C17E04
	230 Move X19, X0
	231 Move X0, 0xD41000
	232 Move X0, [X0+3760]
	233 Call 0x1C17D08
	234 Call 0x19913D0
	235 Move X0, 0xD4C000
	236 Move X0, [X0+304]
	237 Call 0x1C17D08
	238 Call SemaphoreSlim.GetResourceString, X0
	239 Move X20, X0
	240 Move X0, 0xD1A000
	241 Move X0, [X0+1888]
	242 Call 0x1C17D08
	243 Call 0x1C17F10
	244 Move X21, X0
	245 Move X0, 0xD4C000
	246 Move X0, [X0+312]
	247 Call 0x1C17D08
	248 Move X1, X0
	249 Move X0, X21
	250 Move X2, X19
	251 Move X3, X20
	252 Move X4, X31
	253 Call ArgumentOutOfRangeException..ctor, X0, X1, X2, X3
	254 Move X0, 0xD4C000
	255 Move X0, [X0+320]
	256 Call 0x1C17D08
	257 Move X1, X0
	258 Move X0, X21
	259 Call 0x1C17DEC
	260 Move X0, X21
	261 Call 0x1C17F18
	262 Move X0, 0xD4C000
	263 Move X0, [X0+320]
	264 Call 0x1C17D08
	265 Move X1, X0
	266 Move X0, X20
	267 Call 0x1C17DEC
	268 Call 0x1C17F20
	269 Move X21, X1
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Move X20, X0
	272 Move X0, X20
	273 Call 0x3EB2AD0
	274 Move X20, X0
	275 Move X0, 0xD1A000
	276 Move X0, [X0+2216]
	277 Call 0x1C17D08
	278 Move X8, [X20]
	279 Move X1, [X8]
	280 Call 0x1C18270
	281 Move TEMP, X0
	282 And TEMP, TEMP, 1
	283 Compare TEMP, 1
	284 JumpIfNotEqual {287}
	285 Move X20, [X20]
	286 Call 0x3EB2AE0
	287 Move W0, 8
	288 Call 0x3EB2AF0
	289 Move X8, [X20]
	290 Move [X0], X8
	291 Move X1, 0xAD3000
	292 Add X1, X1, 3672
	293 Move X2, X31
	294 Call 0x3EB2B00
	295 Move X21, X1
	296 Move X20, X0
	297 Call 0x3EB2AE0
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Move X21, X1
	300 Move X20, X0
	301 NotImplemented "Instruction CSET not yet implemented."
	302 Move X21, X1
	303 Move X20, X0
	304 Move W22, 1
	305 Move X21, X1
	306 Move X20, X0
	307 Move W22, W31
	308 NotImplemented "Instruction CMP not yet implemented."
	309 Move X0, X20
	310 Call 0x3EB2AD0
	311 Move X21, [X0]
	312 Call 0x3EB2AE0
	313 Move W23, W31
	314 Move X20, X31
	315 Move X21, X31
	316 Move X20, X0
	317 Move W8, [X31+60]
	318 Compare W8, 0
	319 JumpIfNotEqual {326}
	320 Add X0, X31, 32
	321 Call CancellationTokenRegistration.Dispose, X0
	322 Compare X21, 0
	323 JumpIfNotEqual {333}
	324 Move X0, X20
	325 Call 0x1D2D690
	326 Move W22, [X19+24]
	327 Call 0x1C17D44
	328 Call 0x1C17D44
	329 Move X0, [X19+32]
	330 Subtract W8, W22, 1
	331 Move [X19+24], W8
	332 Call 0x1C4CEB4
	333 Move X0, X21
	334 Call 0x1C17F18
	335 Call 0x1991590

Method: System.Boolean WaitUntilCountOrTimeout(System.Int32 millisecondsTimeout, System.UInt32 startTime, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x033E2FB0 CBZ X20, 0x33E3144
	0x033E2FB4 MOV X0, X20
	0x033E2FB8 BL 0x1C16F18
	0x033E2FBC MOV X21, X1
	0x033E2FC0 MOV X22, X0
	0x033E2FC4 B 0x33E2F94
	0x033E2FC8 B 0x33E313C
	0x033E2FCC B 0x33E3000
	0x033E2FD0 B 0x33E3000
	0x033E2FD4 B 0x33E3004
	0x033E2FD8 B 0x33E3000
	0x033E2FDC B 0x33E3000
	0x033E2FE0 B 0x33E3004
	0x033E2FE4 B 0x33E3000
	0x033E2FE8 B 0x33E313C
	0x033E2FEC B 0x33E313C
	0x033E2FF0 B 0x33E3000
	0x033E2FF4 B 0x33E313C
	0x033E2FF8 B 0x33E3000
	0x033E2FFC B 0x33E3000
	0x033E3000 MOV W26, W24
	0x033E3004 MOV X21, X1
	0x033E3008 MOV X22, X0
	0x033E300C CMP W21, 0x1
	0x033E3010 B.NE 0x33E30B0
	0x033E3014 MOV X0, X22
	0x033E3018 BL 0x3EB1AD0
	0x033E301C LDR X24, [X0]
	0x033E3020 BL 0x3EB1AE0
	0x033E3024 MOV W27, W31
	0x033E3028 MOV W23, W31
	0x033E302C MOV X21, X24
	0x033E3030 MOV W24, W26
	0x033E3034 TBZ X24, 0x1F, 0x33E2D30
	0x033E3038 LDR X22, [X19 + 0x40]
	0x033E303C CBZ X22, 0x33E30A0
	0x033E3040 ADRP X10, 0xD10000
	0x033E3044 LDR X8, [X22]
	0x033E3048 LDR X10, [X10 + 0xE00]
	0x033E304C LDRH W9, [X8 + 0x12E]
	0x033E3050 LDR X1, [X10]
	0x033E3054 CBZ X9, 0x33E3078
	0x033E3058 LDR X10, [X8 + 0xB0]
	0x033E305C ADD X10, X10, 0x8
	0x033E3060 LDUR X11, [X10 - 0x8]
	0x033E3064 CMP X11, X1
	0x033E3068 B.EQ 0x33E3088
	0x033E306C SUBS X9, X9, 0x1
	0x033E3070 ADD X10, X10, 0x10
	0x033E3074 B.NE 0x33E3060
	0x033E3078 MOV X0, X22

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xFFC000
	009 Move W8, [X22+933]
	010 Move W19, W2
	011 Move W20, W1
	012 Move X21, X0
	013 Move [X31+8], X3
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xD1A000
	019 Move X0, [X0+2008]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+933], W8
	023 Move X23, 0xD1A000
	024 Move X23, [X23+2008]
	025 Move TEMP, 0
	026 Not TEMP
	027 Move W22, TEMP
	028 Move W24, [X21+16]
	029 Call 0x1C17D44
	030 Compare W24, 0
	031 JumpIfNotEqual {59}
	032 Move X0, [X23]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Add X0, X31, 8
	038 Call CancellationToken.ThrowIfCancellationRequested, X0
	039 Add W31, W20, 1
	040 Move X0, X31
	041 Call Environment.get_TickCount
	042 Subtract W8, W0, W19
	043 Move W0, W31
	044 Move TEMP, X8
	045 And TEMP, TEMP, -2147483648
	046 Compare TEMP, -2147483648
	047 JumpIfEqual {60}
	048 Subtract W22, W20, W8
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, [X21+32]
	051 Move W1, W22
	052 Move W2, W31
	053 Call Monitor.Wait, X0, X1, X2
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {28}
	058 Move W0, W31
	059 Move W0, 1
	060 Move X20, [X31+48]
	061 Move X19, [X31+56]
	062 Move X22, [X31+32]
	063 Move X21, [X31+40]
	064 Move X24, [X31+16]
	065 Move X23, [X31+24]
	066 Move X30, [X31+64]
	067 Return X0

Method: System.Threading.Tasks.Task WaitAsync()

Disassembly:
	0x033E30D8 LDR X10, [X8 + 0xB0]
	0x033E30DC ADD X10, X10, 0x8
	0x033E30E0 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W1, TEMP
	004 Move X2, X31
	005 Call SemaphoreSlim.WaitAsync, X0, X1, X2
	006 Return X0

Method: System.Threading.Tasks.Task WaitAsync(System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x033E30E4 CMP X11, X1
	0x033E30E8 B.EQ 0x33E3108
	0x033E30EC SUBS X9, X9, 0x1

ISIL:
	001 Move X2, X1
	002 Move TEMP, 0
	003 Not TEMP
	004 Move W1, TEMP
	005 Call SemaphoreSlim.WaitAsync, X0, X1, X2
	006 Return X0

Method: System.Threading.Tasks.Task`1<System.Boolean> WaitAsync(System.Int32 millisecondsTimeout, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x033E2C8C LDR X8, [X19 + 0x28]
	0x033E2C90 STR X8, [X19 + 0x48]
	0x033E2C94 CBZ X0, 0x33E2EFC
	0x033E2C98 ADRP X8, 0xD4B000
	0x033E2C9C LDR X8, [X8 + 0x1F8]
	0x033E2CA0 LDR X2, [X8]
	0x033E2CA4 MOV W1, W31
	0x033E2CA8 BL 0x269F5D4
	0x033E2CAC ADRP X8, 0xD4B000
	0x033E2CB0 LDR X8, [X8 + 0x1F0]
	0x033E2CB4 STP X0, X1, [X31 + 0x20]
	0x033E2CB8 LDR X8, [X8]
	0x033E2CBC ADD X0, X31, 0x20
	0x033E2CC0 MOV X1, X8
	0x033E2CC4 BL 0x2998B64
	0x033E2CC8 TBZ X0, 0x0, 0x33E2DA8
	0x033E2CCC ADRP X8, 0xD4B000
	0x033E2CD0 LDR X8, [X8 + 0x1E8]
	0x033E2CD4 ADD X0, X31, 0x20
	0x033E2CD8 LDR X1, [X8]
	0x033E2CDC BL 0x2998BB0
	0x033E2CE0 LDR X8, [X19 + 0x48]
	0x033E2CE4 CMP X8, X0
	0x033E2CE8 B.EQ 0x33E2D00
	0x033E2CEC MOV X21, X31
	0x033E2CF0 MOV W23, W31
	0x033E2CF4 MOVZ W27, 0xB
	0x033E2CF8 TBZ X24, 0x1F, 0x33E2D30
	0x033E2CFC B 0x33E3038
	0x033E2D00 LDR X21, [X19 + 0x40]
	0x033E2D04 STR X31, [X19 + 0x48]
	0x033E2D08 CBZ X21, 0x33E2F28
	0x033E2D0C MOV X0, X21
	0x033E2D10 BL 0x33DFA20
	0x033E2D14 MOV X0, X21
	0x033E2D18 MOV W1, W31
	0x033E2D1C BL 0x33DFD3C
	0x033E2D20 MOV X21, X31
	0x033E2D24 MOVZ W23, 0x1
	0x033E2D28 MOVZ W27, 0xA
	0x033E2D2C TBNZ X24, 0x1F, 0x33E3038
	0x033E2D30 MOVZ W26, 0x1
	0x033E2D34 CBNZ X21, 0x33E30A8
	0x033E2D38 CMP W27, 0xB
	0x033E2D3C B.EQ 0x33E2D4C
	0x033E2D40 CMP W27, 0xA
	0x033E2D44 B.EQ 0x33E2E9C
	0x033E2D48 CBNZ W27, 0x33E2ECC
	0x033E2D4C STR X31, [X19 + 0x40]
	0x033E2D50 CBZ X20, 0x33E2F04
	0x033E2D54 LDR X24, [X20 + 0x20]
	0x033E2D58 STRB W31, [X31 + 0x1C]
	0x033E2D5C ADD X1, X31, 0x1C
	0x033E2D60 MOV X0, X24
	0x033E2D64 BL 0x33DE64C
	0x033E2D68 LDR X1, [X19 + 0x28]
	0x033E2D6C MOV X0, X20
	0x033E2D70 BL 0x33E22D4
	0x033E2D74 TBZ X0, 0x0, 0x33E2DE4
	0x033E2D78 ADRP X8, 0xD19000
	0x033E2D7C LDR X8, [X8 + 0x7D8]
	0x033E2D80 LDR X0, [X8]
	0x033E2D84 LDR W8, [X0 + 0xE0]
	0x033E2D88 CBNZ W8, 0x33E2D90
	0x033E2D8C BL 0x1C16DFC
	0x033E2D90 ADD X0, X19, 0x20
	0x033E2D94 BL 0x33DDC30
	0x033E2D98 MOV X20, X31
	0x033E2D9C MOV W23, W31
	0x033E2DA0 MOVZ W21, 0xA
	0x033E2DA4 B 0x33E2DEC
	0x033E2DA8 STR W31, [X19]
	0x033E2DAC LDR V0, [X31 + 0x2]
	0x033E2DB0 STR V0, [X19 + 0x5]
	0x033E2DB4 LDR X0, [X25]
	0x033E2DB8 LDR W8, [X0 + 0xE0]
	0x033E2DBC CBNZ W8, 0x33E2DC4
	0x033E2DC0 BL 0x1C16DFC
	0x033E2DC4 ADRP X8, 0xD4B000
	0x033E2DC8 LDR X8, [X8 + 0x1D0]
	0x033E2DCC ADD X0, X19, 0x8
	0x033E2DD0 LDR X3, [X8]
	0x033E2DD4 ADD X1, X31, 0x20
	0x033E2DD8 MOV X2, X19
	0x033E2DDC BL 0x1FAA628
	0x033E2DE0 B 0x33E2ECC
	0x033E2DE4 MOV X20, X31
	0x033E2DE8 MOVZ W21, 0xD
	0x033E2DEC LDRB W8, [X31 + 0x1C]
	0x033E2DF0 CMP W8, 0x0
	0x033E2DF4 CSET W8, EQ
	0x033E2DF8 ORR W8, W26, W8, 0x0
	0x033E2DFC TBNZ X8, 0x0, 0x33E2E08
	0x033E2E00 MOV X0, X24
	0x033E2E04 BL 0x1C4BEB4
	0x033E2E08 CBNZ X20, 0x33E2F08
	0x033E2E0C CMP W21, 0xD
	0x033E2E10 B.EQ 0x33E2E20
	0x033E2E14 CMP W21, 0xA
	0x033E2E18 B.EQ 0x33E2E9C
	0x033E2E1C CBNZ W21, 0x33E2ECC
	0x033E2E20 LDR X0, [X19 + 0x28]
	0x033E2E24 CBZ X0, 0x33E2F2C
	0x033E2E28 ADRP X8, 0xD3C000
	0x033E2E2C LDR X8, [X8 + 0x328]
	0x033E2E30 LDR X2, [X8]
	0x033E2E34 MOV W1, W31
	0x033E2E38 BL 0x269B114
	0x033E2E3C ADRP X8, 0xD3C000
	0x033E2E40 LDR X8, [X8 + 0x320]
	0x033E2E44 STP X0, X1, [X31]
	0x033E2E48 LDR X8, [X8]
	0x033E2E4C ADD X0, X31, 0x0
	0x033E2E50 MOV X1, X8
	0x033E2E54 BL 0x2998788
	0x033E2E58 TBNZ X0, 0x0, 0x33E2B24
	0x033E2E5C MOVZ W8, 0x1
	0x033E2E60 STR W8, [X19]
	0x033E2E64 LDR V0, [X31]
	0x033E2E68 STR V0, [X19 + 0x6]
	0x033E2E6C LDR X0, [X25]
	0x033E2E70 LDR W8, [X0 + 0xE0]
	0x033E2E74 CBNZ W8, 0x33E2E7C
	0x033E2E78 BL 0x1C16DFC
	0x033E2E7C ADRP X8, 0xD4B000
	0x033E2E80 LDR X8, [X8 + 0x1D8]
	0x033E2E84 ADD X0, X19, 0x8
	0x033E2E88 LDR X3, [X8]
	0x033E2E8C ADD X1, X31, 0x0
	0x033E2E90 MOV X2, X19
	0x033E2E94 BL 0x1FAA414
	0x033E2E98 B 0x33E2ECC
	0x033E2E9C MOVN W8, 0x1
	0x033E2EA0 STR W8, [X19], #0x8
	0x033E2EA4 LDR X0, [X25]
	0x033E2EA8 ADRP X20, 0xD1B000
	0x033E2EAC LDR W8, [X0 + 0xE0]
	0x033E2EB0 LDR X20, [X20 + 0x188]
	0x033E2EB4 CBNZ W8, 0x33E2EBC
	0x033E2EB8 BL 0x1C16DFC
	0x033E2EBC LDR X2, [X20]
	0x033E2EC0 AND W1, W23, 0x1
	0x033E2EC4 MOV X0, X19
	0x033E2EC8 BL 0x262F004
	0x033E2ECC LDP X20, X19, [X31 + 0x70]
	0x033E2ED0 LDP X22, X21, [X31 + 0x60]
	0x033E2ED4 LDP X24, X23, [X31 + 0x50]
	0x033E2ED8 LDP X26, X25, [X31 + 0x40]
	0x033E2EDC LDP X30, X27, [X31 + 0x30]
	0x033E2EE0 ADD X31, X31, 0x80
	0x033E2EE4 RET
	0x033E2EE8 BL 0x1C16F20
	0x033E2EEC BL 0x1C16F28
	0x033E2EF0 MOV W26, W24
	0x033E2EF4 BL 0x1C16F20
	0x033E2EF8 BL 0x1C16F28
	0x033E2EFC MOV W26, W24
	0x033E2F00 BL 0x1C16F20
	0x033E2F04 BL 0x1C16F20
	0x033E2F08 MOV X0, X20
	0x033E2F0C BL 0x1C16F18
	0x033E2F10 BL 0x1C16F44
	0x033E2F14 MOV X1, X31
	0x033E2F18 BL 0x1C16DEC
	0x033E2F1C BL 0x1C16F44
	0x033E2F20 MOV X1, X31
	0x033E2F24 BL 0x1C16DEC
	0x033E2F28 BL 0x1C16F20
	0x033E2F2C BL 0x1C16F20
	0x033E2F30 B 0x33E313C
	0x033E2F34 B 0x33E313C
	0x033E2F38 B 0x33E3000
	0x033E2F3C B 0x33E313C
	0x033E2F40 B 0x33E313C
	0x033E2F44 B 0x33E313C
	0x033E2F48 B 0x33E313C
	0x033E2F4C B 0x33E2F68
	0x033E2F50 B 0x33E313C
	0x033E2F54 MOV X21, X1
	0x033E2F58 MOV X22, X0
	0x033E2F5C MOV W26, W31
	0x033E2F60 B 0x33E300C
	0x033E2F64 B 0x33E2F68
	0x033E2F68 MOV X21, X1
	0x033E2F6C MOV X22, X0
	0x033E2F70 CMP W21, 0x1
	0x033E2F74 B.NE 0x33E2F90
	0x033E2F78 MOV X0, X22
	0x033E2F7C BL 0x3EB1AD0
	0x033E2F80 LDR X20, [X0]
	0x033E2F84 BL 0x3EB1AE0
	0x033E2F88 MOV W21, W31
	0x033E2F8C B 0x33E2DEC
	0x033E2F90 MOV X20, X31
	0x033E2F94 LDRB W8, [X31 + 0x1C]
	0x033E2F98 CMP W8, 0x0
	0x033E2F9C CSET W8, EQ
	0x033E2FA0 ORR W8, W26, W8, 0x0
	0x033E2FA4 TBNZ X8, 0x0, 0x33E2FB0
	0x033E2FA8 MOV X0, X24
	0x033E2FAC BL 0x1C4BEB4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0xFFC000
	009 Move W8, [X19+934]
	010 Move X21, X2
	011 Move W22, W1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xD1A000
	018 Move X0, [X0+2008]
	019 Call 0x1C17CF4
	020 Move X0, 0xD41000
	021 Move X0, [X0+3760]
	022 Call 0x1C17CF4
	023 Move X0, 0xD4C000
	024 Move X0, [X0+344]
	025 Call 0x1C17CF4
	026 Move X0, 0xD13000
	027 Move X0, [X0+1976]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X19+934], W8
	031 Move X0, X20
	032 Move [X31+12], W31
	033 Call SemaphoreSlim.CheckDispose, X0
	034 Add W31, W22, 2
	035 Move X24, 0xD1A000
	036 Move X24, [X24+2008]
	037 Move X0, [X24]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfEqual {43}
	041 Compare X21, 0
	042 JumpIfNotEqual {46}
	043 Call 0x1C17DFC
	044 Compare X21, 0
	045 JumpIfEqual {62}
	046 Move W19, [X21+32]
	047 Call 0x1C17D44
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X8, 0xD13000
	050 Move X8, [X8+1976]
	051 Move X0, [X8]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X8, 0xD4C000
	057 Move X8, [X8+344]
	058 Move X0, X21
	059 Move X1, [X8]
	060 Call 0x229A6C8, X0
	061 Move X23, X0
	062 Move X19, [X20+32]
	063 Move [X31+12], W31
	064 Add X1, X31, 12
	065 Move X0, X19
	066 Call Monitor.Enter, X0, X1
	067 Move W23, [X20+16]
	068 Call 0x1C17D44
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move W21, [X20+16]
	071 Call 0x1C17D44
	072 Call 0x1C17D44
	073 Move X22, [X20+40]
	074 Subtract W8, W21, 1
	075 Move [X20+16], W8
	076 Call 0x1C17D44
	077 Compare X22, 0
	078 JumpIfEqual {89}
	079 Move W21, [X20+16]
	080 Call 0x1C17D44
	081 Compare W21, 0
	082 JumpIfNotEqual {89}
	083 Move X20, [X20+40]
	084 Call 0x1C17D44
	085 Compare X20, 0
	086 JumpIfEqual {185}
	087 Move X0, X20
	088 Call EventWaitHandle.Reset, X0
	089 Move X20, 0xD41000
	090 Move X20, [X20+3760]
	091 Move X0, [X20]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {97}
	095 Call 0x1C17DFC
	096 Move X0, [X20]
	097 Move X8, [X0+184]
	098 Move X21, X31
	099 Move X23, [X8]
	100 Compare W22, 0
	101 JumpIfEqual {120}
	102 Move X0, X20
	103 Call SemaphoreSlim.CreateAndAddAsyncWaiter, X0
	104 Move X23, X0
	105 Add W31, W22, 1
	106 Move X0, [X24]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Compare X21, 0
	112 JumpIfEqual {131}
	113 Move X0, X20
	114 Move X1, X23
	115 Move W2, W22
	116 Move X3, X21
	117 Call SemaphoreSlim.WaitUntilCountOrTimeoutAsync, X0, X1, X2, X3
	118 Move X23, X0
	119 Move X21, X31
	120 Move X20, 0xD41000
	121 Move X20, [X20+3760]
	122 Move X0, [X20]
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {128}
	126 Call 0x1C17DFC
	127 Move X0, [X20]
	128 Move X8, [X0+184]
	129 Move X21, X31
	130 Move X23, [X8+8]
	131 Move W8, [X31+12]
	132 Compare W8, 0
	133 JumpIfEqual {136}
	134 Move X0, X19
	135 Call 0x1C4CEB4
	136 Compare X21, 0
	137 JumpIfNotEqual {183}
	138 Move X0, X23
	139 Move X20, [X31+48]
	140 Move X19, [X31+56]
	141 Move X22, [X31+32]
	142 Move X21, [X31+40]
	143 Move X24, [X31+16]
	144 Move X23, [X31+24]
	145 Move X30, [X31+64]
	146 Return X0
	147 Move [X31+8], W22
	148 Move X0, 0xD12000
	149 Move X0, [X0+1880]
	150 Call 0x1C17D08
	151 Add X1, X31, 8
	152 Call 0x1C17E04
	153 Move X19, X0
	154 Move X0, 0xD41000
	155 Move X0, [X0+3760]
	156 Call 0x1C17D08
	157 Call 0x19913D0
	158 Move X0, 0xD4C000
	159 Move X0, [X0+304]
	160 Call 0x1C17D08
	161 Call SemaphoreSlim.GetResourceString, X0
	162 Move X20, X0
	163 Move X0, 0xD1A000
	164 Move X0, [X0+1888]
	165 Call 0x1C17D08
	166 Call 0x1C17F10
	167 Move X21, X0
	168 Move X0, 0xD4C000
	169 Move X0, [X0+312]
	170 Call 0x1C17D08
	171 Move X1, X0
	172 Move X0, X21
	173 Move X2, X19
	174 Move X3, X20
	175 Move X4, X31
	176 Call ArgumentOutOfRangeException..ctor, X0, X1, X2, X3
	177 Move X0, 0xD4C000
	178 Move X0, [X0+352]
	179 Call 0x1C17D08
	180 Move X1, X0
	181 Move X0, X21
	182 Call 0x1C17DEC
	183 Move X0, X21
	184 Call 0x1C17F18
	185 Call 0x1C17F20
	186 Move X20, X0
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move X0, X20
	189 Call 0x3EB2AD0
	190 Move X21, [X0]
	191 Call 0x3EB2AE0
	192 Move X23, X31
	193 Move X21, X31
	194 Move X20, X0
	195 Move W8, [X31+12]
	196 Compare W8, 0
	197 JumpIfEqual {200}
	198 Move X0, X19
	199 Call 0x1C4CEB4
	200 Compare X21, 0
	201 JumpIfNotEqual {204}
	202 Move X0, X20
	203 Call 0x1D2D690
	204 Move X0, X21
	205 Call 0x1C17F18
	206 Call 0x1991590

Method: System.Threading.SemaphoreSlim/TaskNode CreateAndAddAsyncWaiter()

Disassembly:
	0x033E30F0 ADD X10, X10, 0x10
	0x033E30F4 B.NE 0x33E30E0
	0x033E30F8 MOV X0, X20
	0x033E30FC MOV W2, W31
	0x033E3100 BL 0x1C5C788
	0x033E3104 B 0x33E3114
	0x033E3108 LDRSW X9, [X10]
	0x033E310C ADD X8, X8, X9, 0x4, LSL
	0x033E3110 ADD X0, X8, 0x138
	0x033E3114 LDP X8, X1, [X0]
	0x033E3118 MOV X0, X20
	0x033E311C BLR X8
	0x033E3120 CBZ X24, 0x33E3144
	0x033E3124 MOV X0, X24
	0x033E3128 BL 0x1C16F18
	0x033E312C MOV X21, X1
	0x033E3130 MOV X22, X0
	0x033E3134 TBZ X26, 0x1F, 0x33E3120
	0x033E3138 B 0x33E30B8
	0x033E313C MOV X21, X1
	0x033E3140 MOV X22, X0
	0x033E3144 CMP W21, 0x1
	0x033E3148 B.NE 0x33E31E4
	0x033E314C MOV X0, X22
	0x033E3150 BL 0x3EB1AD0
	0x033E3154 MOV X20, X0
	0x033E3158 ADRP X0, 0xD10000
	0x033E315C LDR X0, [X0 + 0x7D0]
	0x033E3160 BL 0x1C16D08
	0x033E3164 LDR X8, [X20]
	0x033E3168 LDR X1, [X8]
	0x033E316C BL 0x1C17270
	0x033E3170 TBZ X0, 0x0, 0x33E31BC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xFFB000
	006 Move X21, 0xD4B000
	007 Move W8, [X20+935]
	008 Move X21, [X21+368]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD4B000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+935], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X20, X0
	022 Call TaskNode..ctor, X0
	023 Move X8, [X19+48]
	024 Compare X8, 0
	025 JumpIfEqual {34}
	026 Add X19, X19, 56
	027 Move X8, [X19]
	028 Compare X8, 0
	029 JumpIfEqual {43}
	030 Move [X8+96], X20
	031 Compare X20, 0
	032 JumpIfEqual {43}
	033 Move [X20+88], X8
	034 Move [X19+48], X20
	035 Add X19, X19, 56
	036 Move [X19], X20
	037 Move X0, X20
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0
	043 Call 0x1C17F20

Method: System.Boolean RemoveAsyncWaiter(System.Threading.SemaphoreSlim/TaskNode task)

Disassembly:
	0x033E32D4 BL 0x33E3358
	0x033E32D8 LDR W21, [X20]
	0x033E32DC BL 0x1C16D44
	0x033E32E0 AND W8, W21, 0x80000001
	0x033E32E4 MOVZ W9, 0x80000000
	0x033E32E8 CMP W8, W9
	0x033E32EC B.NE 0x33E3328
	0x033E32F0 LDRB W8, [X19]
	0x033E32F4 CBNZ W8, 0x33E3328
	0x033E32F8 BL 0x1C16D44
	0x033E32FC ORR W1, W21, 0x1
	0x033E3300 MOV X0, X20
	0x033E3304 MOV W2, W21
	0x033E3308 MOV X3, X19
	0x033E330C MOV X4, X31
	0x033E3310 BL 0x33EB110
	0x033E3314 CMP W0, W21
	0x033E3318 B.NE 0x33E3328
	0x033E331C LDP X20, X19, [X31 + 0x10]
	0x033E3320 LDP X30, X21, [X31], #0x20
	0x033E3324 RET
	0x033E3328 ADRP X8, 0xD4A000
	0x033E332C LDR X8, [X8 + 0x200]
	0x033E3330 LDR X0, [X8]
	0x033E3334 LDR W8, [X0 + 0xE0]
	0x033E3338 CBNZ W8, 0x33E3340
	0x033E333C BL 0x1C16DFC
	0x033E3340 MOV X0, X20
	0x033E3344 MOV X2, X19
	0x033E3348 LDP X20, X19, [X31 + 0x10]
	0x033E334C MOVN W1, 0x0
	0x033E3350 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-16], X30
	002 Move X9, [X0+48]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Compare X1, 0
	005 JumpIfEqual {34}
	006 Move X8, [X1+88]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Compare X1, 0
	010 JumpIfEqual {34}
	011 Move W8, 1
	012 Move X12, [X1+96]
	013 Compare X12, 0
	014 JumpIfEqual {17}
	015 Move X10, [X1+88]
	016 Move [X12+88], X10
	017 Move X10, X1
	018 Add X10, X10, 88
	019 Move X11, [X10]
	020 Compare X11, 0
	021 JumpIfEqual {23}
	022 Move [X11+96], X12
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X9, [X1+96]
	025 Move [X0+48], X9
	026 Move X9, [X0+56]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move [X0+56], X11
	029 Move [X10], X31
	030 Move [X10+8], X31
	031 Move W0, W8
	032 Move X30, [X31+16]
	033 Return X0
	034 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<System.Boolean> WaitUntilCountOrTimeoutAsync(System.Threading.SemaphoreSlim/TaskNode asyncWaiter, System.Int32 millisecondsTimeout, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x033E3174 LDR X20, [X20]
	0x033E3178 BL 0x3EB1AE0
	0x033E317C MOVN W8, 0x1
	0x033E3180 STR W8, [X19], #0x8
	0x033E3184 ADRP X0, 0xD1A000
	0x033E3188 LDR X0, [X0 + 0xE0]
	0x033E318C BL 0x1C16D08
	0x033E3190 LDR W8, [X0 + 0xE0]
	0x033E3194 CBNZ W8, 0x33E319C
	0x033E3198 BL 0x1C16DFC
	0x033E319C ADRP X0, 0xD1A000
	0x033E31A0 LDR X0, [X0 + 0x190]
	0x033E31A4 BL 0x1C16D08
	0x033E31A8 MOV X2, X0
	0x033E31AC MOV X0, X19
	0x033E31B0 MOV X1, X20
	0x033E31B4 BL 0x262F21C
	0x033E31B8 B 0x33E2ECC
	0x033E31BC MOVZ W0, 0x8
	0x033E31C0 BL 0x3EB1AF0
	0x033E31C4 LDR X8, [X20]
	0x033E31C8 STR X8, [X0]
	0x033E31CC ADRP X1, 0xAD1000
	0x033E31D0 ADD X1, X1, 0xE58
	0x033E31D4 MOV X2, X31
	0x033E31D8 BL 0x3EB1B00
	0x033E31DC MOV X22, X0
	0x033E31E0 BL 0x3EB1AE0
	0x033E31E4 MOV X0, X22
	0x033E31E8 BL 0x1D2C690
	0x033E31EC BL 0x1990590
	0x033E31F0 STR X30, [X31 - 0x30]!
	0x033E31F4 STP X22, X21, [X31 + 0x10]
	0x033E31F8 STP X20, X19, [X31 + 0x20]
	0x033E31FC ADRP X22, 0xFFA000
	0x033E3200 ADRP X21, 0xD1A000
	0x033E3204 LDRB W8, [X22 + 0x3B0]
	0x033E3208 LDR X21, [X21 + 0xE0]
	0x033E320C MOV X19, X1
	0x033E3210 MOV X20, X0
	0x033E3214 TBNZ X8, 0x0, 0x33E3238
	0x033E3218 ADRP X0, 0xD1A000
	0x033E321C LDR X0, [X0 + 0x198]
	0x033E3220 BL 0x1C16CF4
	0x033E3224 ADRP X0, 0xD1A000
	0x033E3228 LDR X0, [X0 + 0xE0]
	0x033E322C BL 0x1C16CF4
	0x033E3230 MOVZ W8, 0x1
	0x033E3234 STRB W8, [X22 + 0x3B0]
	0x033E3238 LDR X0, [X21]
	0x033E323C ADRP X21, 0xD1A000
	0x033E3240 LDR W8, [X0 + 0xE0]
	0x033E3244 LDR X21, [X21 + 0x198]
	0x033E3248 CBNZ W8, 0x33E3250
	0x033E324C BL 0x1C16DFC
	0x033E3250 LDR X2, [X21]
	0x033E3254 ADD X0, X20, 0x8
	0x033E3258 MOV X1, X19
	0x033E325C LDP X20, X19, [X31 + 0x20]
	0x033E3260 LDP X22, X21, [X31 + 0x10]
	0x033E3264 LDR X30, [X31], #0x30
	0x033E3268 B 0x262EF7C
	0x033E326C STR X30, [X31 - 0x20]!
	0x033E3270 STP X20, X19, [X31 + 0x10]
	0x033E3274 MOV W20, W1
	0x033E3278 MOV X19, X0
	0x033E327C BL 0x1C16D44
	0x033E3280 STR W31, [X19]
	0x033E3284 TBNZ X20, 0x0, 0x33E3298
	0x033E3288 BL 0x1C16D44

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+144], X30
	003 Move [X31+160], X24
	004 Move [X31+168], X23
	005 Move [X31+176], X22
	006 Move [X31+184], X21
	007 Move [X31+192], X20
	008 Move [X31+200], X19
	009 Move X24, 0xFFB000
	010 Move X23, 0xD1B000
	011 Move W8, [X24+936]
	012 Move X23, [X23+224]
	013 Move X19, X3
	014 Move W20, W2
	015 Move X21, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0xD1B000
	022 Move X0, [X0+232]
	023 Call 0x1C17CF4
	024 Move X0, 0xD4B000
	025 Move X0, [X0+376]
	026 Call 0x1C17CF4
	027 Move X0, 0xD1B000
	028 Move X0, [X0+248]
	029 Call 0x1C17CF4
	030 Move X0, 0xD1B000
	031 Move X0, [X0+224]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X24+936], W8
	035 Move X0, [X23]
	036 NotImplemented "Instruction MOVI not yet implemented."
	037 Move [X31+64], V0
	038 Move [X31+72], V0
	039 Move [X31+112], V0
	040 Move [X31+120], V0
	041 Move [X31+6], V0
	042 Move [X31+32], V0
	043 Move [X31+40], V0
	044 Move [X31+88], X22
	045 Move [X31+80], W20
	046 Move [X31+64], X19
	047 Move [X31+72], X21
	048 Move X21, 0xD1B000
	049 Move X19, 0xD4B000
	050 Move X20, 0xD1B000
	051 Move W8, [X0+224]
	052 Move X21, [X21+232]
	053 Move X19, [X19+376]
	054 Move X20, [X20+248]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, [X21]
	059 Add X8, X31, 8
	060 Call AsyncTaskMethodBuilder`1<Boolean>.Create
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 Move X9, [X31+24]
	063 Move X2, [X19]
	064 Add X8, X31, 32
	065 Or X19, X8, 15
	066 Move TEMP, 0
	067 Not TEMP
	068 Move W10, TEMP
	069 Add X1, X31, 32
	070 Move X0, X19
	071 Move [X31+40], V0
	072 Move [X31+56], X9
	073 Move [X31+32], W10
	074 Call AsyncTaskMethodBuilder`1<Boolean>.Start, X0, X1
	075 Move X1, [X20]
	076 Move X0, X19
	077 Call AsyncTaskMethodBuilder`1<Boolean>.get_Task, X0
	078 Move X20, [X31+192]
	079 Move X19, [X31+200]
	080 Move X22, [X31+176]
	081 Move X21, [X31+184]
	082 Move X24, [X31+160]
	083 Move X23, [X31+168]
	084 Move X30, [X31+144]
	085 Add X31, X31, 208
	086 Return X0

Method: System.Int32 Release()

Disassembly:
	0x033E3354 B 0x33E33A8
	0x033E3358 STR X30, [X31 - 0x20]!

ISIL:
	001 Move W1, 1

Method: System.Int32 Release(System.Int32 releaseCount)

Disassembly:
	0x033E335C STP X20, X19, [X31 + 0x10]
	0x033E3360 BL 0x33E3C68
	0x033E3364 CBZ X0, 0x33E33A4
	0x033E3368 LDR X20, [X0 + 0x10]
	0x033E336C MOV X19, X0
	0x033E3370 CBNZ X20, 0x33E3384
	0x033E3374 MOV X0, X19
	0x033E3378 BL 0x1C4C3AC
	0x033E337C LDR X20, [X19 + 0x10]
	0x033E3380 CBZ X20, 0x33E33A4
	0x033E3384 LDR W19, [X20 + 0xB4]
	0x033E3388 BL 0x1C16D44
	0x033E338C BL 0x1C16D44
	0x033E3390 ADD W8, W19, 0x1
	0x033E3394 STR W8, [X20 + 0xB4]
	0x033E3398 LDP X20, X19, [X31 + 0x10]
	0x033E339C LDR X30, [X31], #0x20
	0x033E33A0 RET
	0x033E33A4 BL 0x1C16F20
	0x033E33A8 SUB X31, X31, 0x70
	0x033E33AC STP X29, X30, [X31 + 0x10]
	0x033E33B0 STP X28, X27, [X31 + 0x20]
	0x033E33B4 STP X26, X25, [X31 + 0x30]
	0x033E33B8 STP X24, X23, [X31 + 0x40]
	0x033E33BC STP X22, X21, [X31 + 0x50]
	0x033E33C0 STP X20, X19, [X31 + 0x60]
	0x033E33C4 ADRP X22, 0xFFA000
	0x033E33C8 LDRB W8, [X22 + 0x3B3]
	0x033E33CC MOV X20, X2
	0x033E33D0 MOV W21, W1
	0x033E33D4 MOV X19, X0
	0x033E33D8 TBNZ X8, 0x0, 0x33E33FC
	0x033E33DC ADRP X0, 0xD3B000
	0x033E33E0 LDR X0, [X0 + 0x2A8]
	0x033E33E4 BL 0x1C16CF4
	0x033E33E8 ADRP X0, 0xD4A000
	0x033E33EC LDR X0, [X0 + 0x200]
	0x033E33F0 BL 0x1C16CF4
	0x033E33F4 MOVZ W8, 0x1
	0x033E33F8 STRB W8, [X22 + 0x3B3]
	0x033E33FC BL 0x33E394C
	0x033E3400 LDRB W8, [X20]
	0x033E3404 CBNZ W8, 0x33E37A4
	0x033E3408 ADDS W31, W21, 0x2
	0x033E340C B.LE 0x33E37F8
	0x033E3410 ADRP X24, 0xD4A000
	0x033E3414 LDR X24, [X24 + 0x200]
	0x033E3418 ADD W8, W21, 0x1
	0x033E341C CMP W8, 0x2
	0x033E3420 B.CS 0x33E342C
	0x033E3424 MOV W25, W31
	0x033E3428 B 0x33E3438
	0x033E342C MOV X0, X31
	0x033E3430 BL 0x33C18F4
	0x033E3434 MOV W25, W0
	0x033E3438 LDR X0, [X24]
	0x033E343C LDR W8, [X0 + 0xE0]
	0x033E3440 CBNZ W8, 0x33E3448
	0x033E3444 BL 0x1C16DFC
	0x033E3448 LDR W22, [X19]
	0x033E344C BL 0x1C16D44
	0x033E3450 TBNZ X22, 0x1F, 0x33E3494
	0x033E3454 LDR X0, [X24]
	0x033E3458 LDR W8, [X0 + 0xE0]
	0x033E345C CBNZ W8, 0x33E3464
	0x033E3460 BL 0x1C16DFC
	0x033E3464 MOV X0, X19
	0x033E3468 MOV W1, W21
	0x033E346C MOV W2, W25
	0x033E3470 MOV X3, X20
	0x033E3474 LDP X20, X19, [X31 + 0x60]
	0x033E3478 LDP X22, X21, [X31 + 0x50]
	0x033E347C LDP X24, X23, [X31 + 0x40]
	0x033E3480 LDP X26, X25, [X31 + 0x30]
	0x033E3484 LDP X28, X27, [X31 + 0x20]
	0x033E3488 LDP X29, X30, [X31 + 0x10]
	0x033E348C ADD X31, X31, 0x70
	0x033E3490 B 0x33E39B8
	0x033E3494 LDR W23, [X19]
	0x033E3498 BL 0x1C16D44
	0x033E349C TBNZ X23, 0x0, 0x33E34E8
	0x033E34A0 BL 0x33E3358
	0x033E34A4 BL 0x1C16D44
	0x033E34A8 ORR W1, W23, 0x1
	0x033E34AC MOV X0, X19
	0x033E34B0 MOV W2, W23
	0x033E34B4 MOV X3, X20
	0x033E34B8 MOV X4, X31
	0x033E34BC BL 0x33EB110
	0x033E34C0 CMP W0, W23
	0x033E34C4 B.NE 0x33E3530
	0x033E34C8 LDP X20, X19, [X31 + 0x60]
	0x033E34CC LDP X22, X21, [X31 + 0x50]
	0x033E34D0 LDP X24, X23, [X31 + 0x40]
	0x033E34D4 LDP X26, X25, [X31 + 0x30]
	0x033E34D8 LDP X28, X27, [X31 + 0x20]
	0x033E34DC LDP X29, X30, [X31 + 0x10]
	0x033E34E0 ADD X31, X31, 0x70
	0x033E34E4 RET
	0x033E34E8 LDR X0, [X24]
	0x033E34EC LDR W8, [X0 + 0xE0]
	0x033E34F0 CBNZ W8, 0x33E34FC
	0x033E34F4 BL 0x1C16DFC
	0x033E34F8 LDR X0, [X24]
	0x033E34FC LDR X8, [X0 + 0xB8]
	0x033E3500 AND W9, W23, 0x7FFFFFFE
	0x033E3504 LDR W8, [X8]
	0x033E3508 CMP W9, W8
	0x033E350C B.EQ 0x33E3534
	0x033E3510 BL 0x1C16D44
	0x033E3514 MOVZ W1, 0x2
	0x033E3518 MOV X0, X19
	0x033E351C MOV X2, X31
	0x033E3520 BL 0x33EB19C
	0x033E3524 UBFM W27, W0, 0x1, 0x1E
	0x033E3528 CBNZ W21, 0x33E353C
	0x033E352C B 0x33E3760
	0x033E3530 BL 0x33E394C
	0x033E3534 MOVN W27, 0x80000000
	0x033E3538 CBZ W21, 0x33E3760
	0x033E353C ADDS W31, W21, 0x1
	0x033E3540 B.EQ 0x33E355C
	0x033E3544 MOV X0, X31
	0x033E3548 BL 0x33C18F4
	0x033E354C SUBS W8, W0, W25
	0x033E3550 B.MI 0x33E3760
	0x033E3554 CMP W8, W21
	0x033E3558 B.GE 0x33E3760
	0x033E355C STR W25, [X31 + 0x8]
	0x033E3560 ADRP X8, 0xD3B000
	0x033E3564 LDR X8, [X8 + 0x2A8]
	0x033E3568 LDR X0, [X8]
	0x033E356C LDR W8, [X0 + 0xE0]
	0x033E3570 CBNZ W8, 0x33E3578
	0x033E3574 BL 0x1C16DFC
	0x033E3578 BL 0x33DF528
	0x033E357C CMP W27, W0
	0x033E3580 B.GE 0x33E3644
	0x033E3584 MOVZ W25, 0x64
	0x033E3588 MUL W8, W27, W25
	0x033E358C CMP W8, 0x1
	0x033E3590 B.LT 0x33E3644
	0x033E3594 ORR W9, W8, 0x1
	0x033E3598 MOVZ W10, 0x2
	0x033E359C CMP W9, 0x2
	0x033E35A0 MOV W23, W0
	0x033E35A4 ADD W28, W8, 0x64
	0x033E35A8 MOVZ W29, 0x1
	0x033E35AC CSEL W26, W9, W10, GT
	0x033E35B0 MOVZ W22, 0x1
	0x033E35B4 ADD W8, W22, W27
	0x033E35B8 MUL W8, W8, W29
	0x033E35BC MUL W8, W8, W25
	0x033E35C0 CMP W8, 0x1
	0x033E35C4 B.LT 0x33E35E0
	0x033E35C8 ORR W8, W31, 0x1
	0x033E35CC MADD W24, W29, W28, W8
	0x033E35D0 BL 0x1C16D14
	0x033E35D4 SUB W24, W24, 0x1
	0x033E35D8 CMP W24, 0x1
	0x033E35DC B.GT 0x33E35D0
	0x033E35E0 LDR W24, [X19]
	0x033E35E4 CMP W29, W23
	0x033E35E8 CINC W29, W29, LT
	0x033E35EC BL 0x1C16D44
	0x033E35F0 TBNZ X24, 0x0, 0x33E3634
	0x033E35F4 BL 0x33E3358
	0x033E35F8 SUB W8, W24, 0x2
	0x033E35FC ANDS W31, W24, 0x7FFFFFFE
	0x033E3600 CSEL W8, W24, W8, EQ
	0x033E3604 ORR W25, W8, 0x1
	0x033E3608 BL 0x1C16D44
	0x033E360C MOV X0, X19
	0x033E3610 MOV W1, W25
	0x033E3614 MOV W2, W24
	0x033E3618 MOV X3, X20
	0x033E361C MOV X4, X31
	0x033E3620 BL 0x33EB110
	0x033E3624 CMP W0, W24
	0x033E3628 B.EQ 0x33E34C8
	0x033E362C BL 0x33E394C
	0x033E3630 MOVZ W25, 0x64
	0x033E3634 ADD W22, W22, 0x1
	0x033E3638 CMP W22, W26
	0x033E363C ADD W28, W28, 0x64

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, 0xFFB000
	011 Move W8, [X19+937]
	012 Move W22, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xD40000
	019 Move X0, [X0+3760]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+937], W8
	023 Move X0, X21
	024 Move [X31+12], W31
	025 Call SemaphoreSlim.CheckDispose, X0
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X19, [X21+32]
	028 Move [X31+12], W31
	029 Add X1, X31, 12
	030 Move X0, X19
	031 Call Monitor.Enter, X0, X1
	032 Move W20, [X21+16]
	033 Call 0x1C17D44
	034 Move W8, [X21+20]
	035 Subtract W8, W8, W20
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W26, [X21+24]
	038 Call 0x1C17D44
	039 Add W23, W20, W22
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, [X21+32]
	044 Call Monitor.PulseAll, X0
	045 Move X0, [X21+32]
	046 Call Monitor.Pulse, X0
	047 Move X8, [X21+48]
	048 Compare X8, 0
	049 JumpIfEqual {75}
	050 Move X24, 0xD40000
	051 Move X24, [X24+3760]
	052 Subtract W8, W23, W26
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CSEL not yet implemented."
	055 Subtract W26, W31, W26
	056 Add W8, W26, W23
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X22, [X21+48]
	059 Compare X22, 0
	060 JumpIfEqual {75}
	061 Move X0, X21
	062 Move X1, X22
	063 Call SemaphoreSlim.RemoveAsyncWaiter, X0, X1
	064 Move X0, [X24]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Subtract W23, W23, 1
	070 Move X0, X22
	071 Move W1, W31
	072 Move X2, X31
	073 Call ThreadPool.UnsafeQueueCustomWorkItem, X0, X1
	074 Move W23, W25
	075 Call 0x1C17D44
	076 Move X24, [X21+40]
	077 Move [X21+16], W23
	078 Call 0x1C17D44
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X22, X31
	081 Compare W20, 0
	082 JumpIfNotEqual {93}
	083 Compare X24, 0
	084 JumpIfEqual {93}
	085 Move X20, [X21+40]
	086 Call 0x1C17D44
	087 Compare X20, 0
	088 JumpIfEqual {161}
	089 Move X0, X20
	090 Call EventWaitHandle.Set, X0
	091 Move X22, X31
	092 Move W20, W31
	093 Move W8, [X31+12]
	094 Compare W8, 0
	095 JumpIfEqual {98}
	096 Move X0, X19
	097 Call 0x1C4CEB4
	098 Compare X22, 0
	099 JumpIfNotEqual {147}
	100 Move W0, W20
	101 Move X20, [X31+64]
	102 Move X19, [X31+72]
	103 Move X22, [X31+48]
	104 Move X21, [X31+56]
	105 Move X24, [X31+32]
	106 Move X23, [X31+40]
	107 Move X26, [X31+16]
	108 Move X25, [X31+24]
	109 Move X30, [X31+80]
	110 Return X0
	111 Move [X31+8], W22
	112 Move X0, 0xD11000
	113 Move X0, [X0+1880]
	114 Call 0x1C17D08
	115 Add X1, X31, 8
	116 Call 0x1C17E04
	117 Move X19, X0
	118 Move X0, 0xD40000
	119 Move X0, [X0+3760]
	120 Call 0x1C17D08
	121 Call 0x19913D0
	122 Move X0, 0xD4B000
	123 Move X0, [X0+392]
	124 Call 0x1C17D08
	125 Call SemaphoreSlim.GetResourceString, X0
	126 Move X20, X0
	127 Move X0, 0xD19000
	128 Move X0, [X0+1888]
	129 Call 0x1C17D08
	130 Call 0x1C17F10
	131 Move X21, X0
	132 Move X0, 0xD4B000
	133 Move X0, [X0+400]
	134 Call 0x1C17D08
	135 Move X1, X0
	136 Move X0, X21
	137 Move X2, X19
	138 Move X3, X20
	139 Move X4, X31
	140 Call ArgumentOutOfRangeException..ctor, X0, X1, X2, X3
	141 Move X0, 0xD4B000
	142 Move X0, [X0+408]
	143 Call 0x1C17D08
	144 Move X1, X0
	145 Move X0, X21
	146 Call 0x1C17DEC
	147 Move X0, X22
	148 Call 0x1C17F18
	149 Move X0, 0xD4B000
	150 Move X0, [X0+416]
	151 Call 0x1C17D08
	152 Call 0x1C17F10
	153 Move X21, X0
	154 Call SemaphoreFullException..ctor, X0
	155 Move X0, 0xD4B000
	156 Move X0, [X0+408]
	157 Call 0x1C17D08
	158 Move X1, X0
	159 Move X0, X21
	160 Call 0x1C17DEC
	161 Call 0x1C17F20
	162 Move X21, X0
	163 Move W20, W31
	164 Move X21, X0
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move X0, X21
	167 Call 0x3EB2AD0
	168 Move X22, [X0]
	169 Call 0x3EB2AE0
	170 Move X22, X31
	171 Move X21, X0
	172 Move W8, [X31+12]
	173 Compare W8, 0
	174 JumpIfEqual {177}
	175 Move X0, X19
	176 Call 0x1C4CEB4
	177 Compare X22, 0
	178 JumpIfNotEqual {181}
	179 Move X0, X21
	180 Call 0x1D2D690
	181 Move X0, X22
	182 Call 0x1C17F18
	183 Call 0x1991590

Method: System.Void QueueWaiterTask(System.Threading.SemaphoreSlim/TaskNode waiterTask)

Disassembly:
	0x033E3694 LDR W23, [X19]
	0x033E3698 BL 0x1C16D44
	0x033E369C TBNZ X23, 0x0, 0x33E36DC

ISIL:
	001 Move W1, W31
	002 Move X2, X31
	003 Call ThreadPool.UnsafeQueueCustomWorkItem, X0, X1
	004 Return 

Method: System.Void Dispose()

Disassembly:
	0x033E36A0 BL 0x33E3358
	0x033E36A4 SUB W8, W23, 0x2
	0x033E36A8 ANDS W31, W23, 0x7FFFFFFE
	0x033E36AC CSEL W8, W23, W8, EQ
	0x033E36B0 ORR W24, W8, 0x1
	0x033E36B4 BL 0x1C16D44
	0x033E36B8 MOV X0, X19
	0x033E36BC MOV W1, W24
	0x033E36C0 MOV W2, W23
	0x033E36C4 MOV X3, X20
	0x033E36C8 MOV X4, X31
	0x033E36CC BL 0x33EB110
	0x033E36D0 CMP W0, W23
	0x033E36D4 B.EQ 0x33E34C8
	0x033E36D8 BL 0x33E394C
	0x033E36DC MADD W8, W25, W27, W28
	0x033E36E0 EXTR W9, W8, W8, 0x3
	0x033E36E4 CMP W9, W29
	0x033E36E8 B.LS 0x33E3700
	0x033E36EC EXTR W8, W8, W8, 0x1
	0x033E36F0 CMP W8, W28
	0x033E36F4 B.LS 0x33E3720
	0x033E36F8 BL 0x1C4C33C
	0x033E36FC B 0x33E3758
	0x033E3700 MOVZ W0, 0x1
	0x033E3704 BL 0x1C4C4FC
	0x033E3708 SMADDL X8, X25, X22, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xFFB000
	006 Move X20, 0xD18000
	007 Move W8, [X21+938]
	008 Move X20, [X20+3088]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD18000
	015 Move X0, [X0+3088]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+938], W8
	019 Move X8, [X19]
	020 Move W1, 1
	021 Move X0, X19
	022 Move X9, [X8+392]
	023 Move X2, [X8+400]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X1, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call GC.SuppressFinalize, X0
	037 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x033E370C UBFM X9, X8, 0x3F, 0x3F
	0x033E3710 SBFM X8, X8, 0x22, 0x3F
	0x033E3714 ADD W8, W8, W9
	0x033E3718 MSUB W8, W8, W26, W25
	0x033E371C B 0x33E372C
	0x033E3720 MOV W0, W31
	0x033E3724 BL 0x1C4C4FC
	0x033E3728 MOV W8, W31
	0x033E372C ADDS W31, W21, 0x1
	0x033E3730 B.EQ 0x33E3758
	0x033E3734 CBNZ W8, 0x33E3758
	0x033E3738 MOV X0, X31
	0x033E373C BL 0x33C18F4
	0x033E3740 LDR W8, [X31 + 0x8]
	0x033E3744 SUB W8, W0, W8
	0x033E3748 TBNZ X8, 0x1F, 0x33E3768
	0x033E374C SUB W8, W21, W8
	0x033E3750 CMP W8, 0x0
	0x033E3754 B.LE 0x33E3768
	0x033E3758 ADD W25, W25, 0x1
	0x033E375C B 0x33E3694
	0x033E3760 LDR X0, [X24]
	0x033E3764 B 0x33E3774

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move TEMP, X1
	005 And TEMP, TEMP, 1
	006 Compare TEMP, 1
	007 JumpIfNotEqual {27}
	008 Move X20, [X0+40]
	009 Move X19, X0
	010 Call 0x1C17D44
	011 Compare X20, 0
	012 JumpIfEqual {24}
	013 Move X20, [X19+40]
	014 Call 0x1C17D44
	015 Compare X20, 0
	016 JumpIfEqual {31}
	017 Move X8, [X20]
	018 Move X0, X20
	019 Move X9, [X8+520]
	020 Move X1, [X8+528]
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Call 0x1C17D44
	023 Move [X19+40], X31
	024 Move [X19+32], X31
	025 Move [X19+48], X31
	026 Move [X19+56], X31
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return 
	031 Call 0x1C17F20

Method: System.Void CancellationTokenCanceledEventHandler(System.Object obj)

Disassembly:
	0x033E3768 ADRP X8, 0xD4A000
	0x033E376C LDR X8, [X8 + 0x200]
	0x033E3770 LDR X0, [X8]
	0x033E3774 LDR W8, [X0 + 0xE0]
	0x033E3778 CBNZ W8, 0x33E3780
	0x033E377C BL 0x1C16DFC
	0x033E3780 MOV X0, X19
	0x033E3784 LDP X20, X19, [X31 + 0x60]
	0x033E3788 LDP X22, X21, [X31 + 0x50]
	0x033E378C LDP X24, X23, [X31 + 0x40]
	0x033E3790 LDP X26, X25, [X31 + 0x30]
	0x033E3794 LDP X28, X27, [X31 + 0x20]
	0x033E3798 LDP X29, X30, [X31 + 0x10]
	0x033E379C ADD X31, X31, 0x70
	0x033E37A0 B 0x33E3B20
	0x033E37A4 STRB W31, [X20]
	0x033E37A8 ADRP X0, 0xD4A000
	0x033E37AC LDR X0, [X0 + 0x208]
	0x033E37B0 BL 0x1C16D08
	0x033E37B4 MOV X1, X31
	0x033E37B8 BL 0x33BDD84
	0x033E37BC MOV X19, X0
	0x033E37C0 ADRP X0, 0xD18000
	0x033E37C4 LDR X0, [X0 + 0x578]
	0x033E37C8 BL 0x1C16D08
	0x033E37CC BL 0x1C16F10
	0x033E37D0 MOV X1, X19
	0x033E37D4 MOV X2, X31
	0x033E37D8 MOV X20, X0
	0x033E37DC BL 0x3314A68
	0x033E37E0 ADRP X0, 0xD4A000
	0x033E37E4 LDR X0, [X0 + 0x210]
	0x033E37E8 BL 0x1C16D08
	0x033E37EC MOV X1, X0
	0x033E37F0 MOV X0, X20
	0x033E37F4 BL 0x1C16DEC
	0x033E37F8 STR W21, [X31 + 0xC]
	0x033E37FC ADRP X0, 0xD10000
	0x033E3800 LDR X0, [X0 + 0x758]
	0x033E3804 BL 0x1C16D08
	0x033E3808 ADD X1, X31, 0xC
	0x033E380C BL 0x1C16E04
	0x033E3810 MOV X19, X0
	0x033E3814 ADRP X0, 0xD4A000
	0x033E3818 LDR X0, [X0 + 0x218]
	0x033E381C BL 0x1C16D08
	0x033E3820 MOV X1, X31
	0x033E3824 BL 0x33BDD84
	0x033E3828 MOV X20, X0
	0x033E382C ADRP X0, 0xD18000
	0x033E3830 LDR X0, [X0 + 0x760]
	0x033E3834 BL 0x1C16D08
	0x033E3838 BL 0x1C16F10
	0x033E383C MOV X21, X0
	0x033E3840 ADRP X0, 0xD49000
	0x033E3844 LDR X0, [X0 + 0xFD8]
	0x033E3848 BL 0x1C16D08
	0x033E384C MOV X1, X0
	0x033E3850 MOV X0, X21
	0x033E3854 MOV X2, X19
	0x033E3858 MOV X3, X20
	0x033E385C MOV X4, X31
	0x033E3860 BL 0x3312C8C
	0x033E3864 ADRP X0, 0xD4A000
	0x033E3868 LDR X0, [X0 + 0x210]
	0x033E386C BL 0x1C16D08
	0x033E3870 MOV X1, X0
	0x033E3874 MOV X0, X21

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xFFB000
	007 Move W8, [X19+939]
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD40000
	014 Move X0, [X0+3760]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X19+939], W8
	018 Compare X20, 0
	019 JumpIfEqual {52}
	020 Move X8, 0xD40000
	021 Move X8, [X8+3760]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X19, [X20+32]
	032 Move [X31+12], W31
	033 Add X1, X31, 12
	034 Move X0, X19
	035 Call Monitor.Enter, X0, X1
	036 Move X0, [X20+32]
	037 Call Monitor.PulseAll, X0
	038 Move X20, X31
	039 Move W8, [X31+12]
	040 Compare W8, 0
	041 JumpIfEqual {44}
	042 Move X0, X19
	043 Call 0x1C4CEB4
	044 Compare X20, 0
	045 JumpIfNotEqual {53}
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X30, [X31+16]
	049 Move X21, [X31+24]
	050 Add X31, X31, 48
	051 Return 
	052 Call 0x1C17F20
	053 Move X0, X20
	054 Call 0x1C17F18
	055 Move X21, X0
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, X21
	058 Call 0x3EB2AD0
	059 Move X20, [X0]
	060 Call 0x3EB2AE0
	061 Move X20, X31
	062 Move X21, X0
	063 Move W8, [X31+12]
	064 Compare W8, 0
	065 JumpIfEqual {68}
	066 Move X0, X19
	067 Call 0x1C4CEB4
	068 Compare X20, 0
	069 JumpIfNotEqual {72}
	070 Move X0, X21
	071 Call 0x1D2D690
	072 Move X0, X20
	073 Call 0x1C17F18
	074 Call 0x1991590

Method: System.Void CheckDispose()

Disassembly:
	0x033E2C10 CBZ W8, 0x33E2EEC
	0x033E2C14 STR X22, [X21 + 0x20]
	0x033E2C18 LDR X22, [X19 + 0x40]
	0x033E2C1C CBZ X22, 0x33E2EF0
	0x033E2C20 LDR W23, [X19 + 0x30]
	0x033E2C24 MOV X0, X22
	0x033E2C28 BL 0x33DFA20
	0x033E2C2C ADRP X8, 0xD12000
	0x033E2C30 LDR X8, [X8 + 0x7B8]
	0x033E2C34 LDR X0, [X8]
	0x033E2C38 LDR W8, [X0 + 0xE0]
	0x033E2C3C CBNZ W8, 0x33E2C44
	0x033E2C40 BL 0x1C16DFC
	0x033E2C44 MOV W0, W23
	0x033E2C48 MOV X1, X22
	0x033E2C4C MOV X2, X31
	0x033E2C50 BL 0x33F503C
	0x033E2C54 MOV X22, X0
	0x033E2C58 CBZ X0, 0x33E2C70
	0x033E2C5C LDR X8, [X21]
	0x033E2C60 LDR X1, [X8 + 0x40]
	0x033E2C64 MOV X0, X22
	0x033E2C68 BL 0x1C16E00
	0x033E2C6C CBZ X0, 0x33E2F1C
	0x033E2C70 LDR W8, [X21 + 0x18]
	0x033E2C74 CMP W8, 0x1
	0x033E2C78 B.LS 0x33E2EF8
	0x033E2C7C STR X22, [X21 + 0x28]
	0x033E2C80 MOV X0, X21
	0x033E2C84 MOV X1, X31
	0x033E2C88 BL 0x33F6194

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+32]
	005 Compare X8, 0
	006 JumpIfEqual {11}
	007 Move X20, [X31+16]
	008 Move X19, [X31+24]
	009 Move X30, [X31+32]
	010 Return 
	011 Move X0, 0xD41000
	012 Move X0, [X0+3760]
	013 Call 0x1C17D08
	014 Call 0x19913D0
	015 Move X0, 0xD4C000
	016 Move X0, [X0+328]
	017 Call 0x1C17D08
	018 Call SemaphoreSlim.GetResourceString, X0
	019 Move X19, X0
	020 Move X0, 0xD3B000
	021 Move X0, [X0+1208]
	022 Call 0x1C17D08
	023 Call 0x1C17F10
	024 Move X1, X31
	025 Move X2, X19
	026 Move X3, X31
	027 Move X20, X0
	028 Call ObjectDisposedException..ctor, X0, X1, X2
	029 Move X0, 0xD4C000
	030 Move X0, [X0+336]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X20
	034 Call 0x1C17DEC

Method: System.String GetResourceString(System.String str)

Disassembly:
	0x033E26D4 LDR X8, [X19]
	0x033E26D8 MOVZ W1, 0x1

ISIL:
	001 Move X1, X31
	002 Call Environment.GetResourceString, X0
	003 Return X0

Method: System.Void .cctor()

Disassembly:
	0x033E3878 BL 0x1C16DEC
	0x033E387C STR X30, [X31 - 0x30]!
	0x033E3880 STP X22, X21, [X31 + 0x10]
	0x033E3884 STP X20, X19, [X31 + 0x20]
	0x033E3888 ADRP X22, 0xFFA000
	0x033E388C LDRB W8, [X22 + 0x3B2]
	0x033E3890 MOV X19, X2
	0x033E3894 MOV W20, W1
	0x033E3898 MOV X21, X0
	0x033E389C TBNZ X8, 0x0, 0x33E38B4
	0x033E38A0 ADRP X0, 0xD4A000
	0x033E38A4 LDR X0, [X0 + 0x200]
	0x033E38A8 BL 0x1C16CF4
	0x033E38AC MOVZ W8, 0x1
	0x033E38B0 STRB W8, [X22 + 0x3B2]
	0x033E38B4 BL 0x33E3358
	0x033E38B8 LDR W22, [X21]
	0x033E38BC BL 0x1C16D44
	0x033E38C0 ADDS W31, W20, 0x1
	0x033E38C4 AND W9, W22, 0x80000001
	0x033E38C8 MOVZ W10, 0x80000000
	0x033E38CC CSET W8, LT
	0x033E38D0 CMP W9, W10
	0x033E38D4 B.NE 0x33E3918
	0x033E38D8 LDRB W9, [X19]
	0x033E38DC ORR W8, W9, W8, 0x0
	0x033E38E0 CBNZ W8, 0x33E3918
	0x033E38E4 BL 0x1C16D44
	0x033E38E8 ORR W1, W22, 0x1
	0x033E38EC MOV X0, X21
	0x033E38F0 MOV W2, W22
	0x033E38F4 MOV X3, X19
	0x033E38F8 MOV X4, X31
	0x033E38FC BL 0x33EB110
	0x033E3900 CMP W0, W22
	0x033E3904 B.NE 0x33E3918
	0x033E3908 LDP X20, X19, [X31 + 0x20]
	0x033E390C LDP X22, X21, [X31 + 0x10]
	0x033E3910 LDR X30, [X31], #0x30
	0x033E3914 RET
	0x033E3918 ADRP X8, 0xD4A000
	0x033E391C LDR X8, [X8 + 0x200]
	0x033E3920 LDR X0, [X8]
	0x033E3924 LDR W8, [X0 + 0xE0]
	0x033E3928 CBNZ W8, 0x33E3930
	0x033E392C BL 0x1C16DFC
	0x033E3930 MOV X0, X21
	0x033E3934 MOV W1, W20
	0x033E3938 MOV X2, X19
	0x033E393C LDP X20, X19, [X31 + 0x20]
	0x033E3940 LDP X22, X21, [X31 + 0x10]
	0x033E3944 LDR X30, [X31], #0x30
	0x033E3948 B 0x33E33A8
	0x033E394C STR X30, [X31 - 0x20]!
	0x033E3950 STP X20, X19, [X31 + 0x10]
	0x033E3954 BL 0x33E3C68
	0x033E3958 CBZ X0, 0x33E3998
	0x033E395C LDR X20, [X0 + 0x10]
	0x033E3960 MOV X19, X0
	0x033E3964 CBNZ X20, 0x33E3978
	0x033E3968 MOV X0, X19
	0x033E396C BL 0x1C4C3AC
	0x033E3970 LDR X20, [X19 + 0x10]
	0x033E3974 CBZ X20, 0x33E3998
	0x033E3978 LDR W19, [X20 + 0xB4]
	0x033E397C BL 0x1C16D44
	0x033E3980 BL 0x1C16D44
	0x033E3984 SUB W8, W19, 0x1
	0x033E3988 STR W8, [X20 + 0xB4]
	0x033E398C LDP X20, X19, [X31 + 0x10]
	0x033E3990 LDR X30, [X31], #0x20
	0x033E3994 RET
	0x033E3998 BL 0x1C16F20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0xFFB000
	009 Move X24, 0xD4B000
	010 Move X23, 0xD4B000
	011 Move X20, 0xD40000
	012 Move X22, 0xD3B000
	013 Move X21, 0xD4B000
	014 Move W8, [X19+940]
	015 Move X24, [X24+432]
	016 Move X23, [X23+440]
	017 Move X20, [X20+3760]
	018 Move X22, [X22+3656]
	019 Move X21, [X21+448]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0xD3B000
	025 Move X0, [X0+3656]
	026 Call 0x1C17CF4
	027 Move X0, 0xD4B000
	028 Move X0, [X0+448]
	029 Call 0x1C17CF4
	030 Move X0, 0xD40000
	031 Move X0, [X0+3760]
	032 Call 0x1C17CF4
	033 Move X0, 0xD4B000
	034 Move X0, [X0+440]
	035 Call 0x1C17CF4
	036 Move X0, 0xD4B000
	037 Move X0, [X0+432]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X19+940], W8
	041 Move X0, [X24]
	042 Call 0x1C17F10
	043 Move X5, [X23]
	044 Move W2, 1
	045 Move W3, 0x4000
	046 Move W1, W31
	047 Move X4, X31
	048 Move X19, X0
	049 Call Task`1<Boolean>..ctor, X0, X1, X2, X3, X4
	050 Move X8, [X20]
	051 Move X8, [X8+184]
	052 Move [X8], X19
	053 Move X0, [X24]
	054 Call 0x1C17F10
	055 Move X5, [X23]
	056 Move W3, 0x4000
	057 Move W1, W31
	058 Move W2, W31
	059 Move X4, X31
	060 Move X19, X0
	061 Call Task`1<Boolean>..ctor, X0, X1, X2, X3, X4
	062 Move X8, [X20]
	063 Move X8, [X8+184]
	064 Move [X8+8], X19
	065 Move X0, [X22]
	066 Call 0x1C17F10
	067 Move X2, [X21]
	068 Move X1, X31
	069 Move X3, X31
	070 Move X19, X0
	071 Call Action`1<Object>..ctor, X0, X1, X2
	072 Move X8, [X20]
	073 Move X22, [X31+32]
	074 Move X21, [X31+40]
	075 Move X24, [X31+16]
	076 Move X23, [X31+24]
	077 Move X8, [X8+184]
	078 Move [X8+16], X19
	079 Move X20, [X31+48]
	080 Move X19, [X31+56]
	081 Move X30, [X31+64]
	082 Return 

