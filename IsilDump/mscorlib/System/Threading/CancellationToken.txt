Type: System.Threading.CancellationToken

Method: System.Threading.CancellationToken get_None()

Disassembly:
	0x033DE2A8 ADRP X21, 0xFFF000
	0x033DE2AC ADRP X20, 0xD4E000

ISIL:
	001 Move X0, X31
	002 Return X0

Method: System.Boolean get_IsCancellationRequested()

Disassembly:
	0x033DE2B0 LDRB W8, [X21 + 0x377]
	0x033DE2B4 LDR X20, [X20 + 0xF98]
	0x033DE2B8 MOV X19, X0
	0x033DE2BC TBNZ X8, 0x0, 0x33DE2D4
	0x033DE2C0 ADRP X0, 0xD4E000
	0x033DE2C4 LDR X0, [X0 + 0xF98]
	0x033DE2C8 BL 0x1C16CF4
	0x033DE2CC MOVZ W8, 0x1
	0x033DE2D0 STRB W8, [X21 + 0x377]
	0x033DE2D4 LDR W19, [X19 + 0x20]
	0x033DE2D8 BL 0x1C16D44

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move W19, [X8+32]
	007 Call 0x1C17D44
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CSET not yet implemented."
	010 Move W0, W31
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return X0

Method: System.Boolean get_CanBeCanceled()

Disassembly:
	0x033DE2F8 RET
	0x033DE2FC MOVN W8, 0xFFF80000
	0x033DE300 CMP W1, W8
	0x033DE304 B.GE 0x33DE310

ISIL:
	001 Move X8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void .ctor(System.Threading.CancellationTokenSource source)

Disassembly:
	0x033DE308 MOVN W2, 0xFFF80000
	0x033DE30C B 0x33DE12C

ISIL:
	001 Move [X0], X1
	002 Return 

Method: System.Void .ctor(System.Boolean canceled)

Disassembly:
	0x033DE310 STR X30, [X31 - 0x20]!
	0x033DE314 STP X20, X19, [X31 + 0x10]
	0x033DE318 STR W8, [X31 + 0xC]
	0x033DE31C ADRP X0, 0xD15000
	0x033DE320 LDR X0, [X0 + 0x758]
	0x033DE324 BL 0x1C16D08
	0x033DE328 ADD X1, X31, 0xC
	0x033DE32C BL 0x1C16E04
	0x033DE330 MOV X19, X0
	0x033DE334 ADRP X0, 0xD4E000
	0x033DE338 LDR X0, [X0 + 0xFA0]
	0x033DE33C BL 0x1C16D08
	0x033DE340 MOV X1, X19
	0x033DE344 MOV X2, X31
	0x033DE348 BL 0x321EFD0
	0x033DE34C MOV X19, X0
	0x033DE350 ADRP X0, 0xD15000
	0x033DE354 LDR X0, [X0 + 0x5B0]
	0x033DE358 BL 0x1C16D08
	0x033DE35C BL 0x1C16F10
	0x033DE360 MOV X1, X19
	0x033DE364 MOV X2, X31
	0x033DE368 MOV X20, X0
	0x033DE36C BL 0x337DF1C
	0x033DE370 ADRP X0, 0xD4E000
	0x033DE374 LDR X0, [X0 + 0xFA8]
	0x033DE378 BL 0x1C16D08
	0x033DE37C MOV X1, X0
	0x033DE380 MOV X0, X20
	0x033DE384 BL 0x1C16DEC
	0x033DE388 STR X30, [X31 - 0x30]!
	0x033DE38C STP X22, X21, [X31 + 0x10]
	0x033DE390 STP X20, X19, [X31 + 0x20]
	0x033DE394 ADRP X22, 0xFFF000
	0x033DE398 ADRP X21, 0xD21000
	0x033DE39C LDRB W8, [X22 + 0x378]
	0x033DE3A0 LDR X21, [X21 + 0x470]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1000000
	006 Move W8, [X21+872]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xD18000
	014 Move X0, [X0+2640]
	015 Call 0x1C17CF4
	016 Move X0, 0xD1E000
	017 Move X0, [X0+2008]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+872], W8
	021 Move X21, 0xD1E000
	022 Move X21, [X21+2008]
	023 Move TEMP, X20
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {37}
	027 Move X20, 0xD18000
	028 Move X20, [X20+2640]
	029 Move X0, [X20]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move X0, [X20]
	035 Move X8, [X0+184]
	036 Move X20, [X8]
	037 Move X20, X31
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move [X19], X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return 

Method: System.Threading.CancellationTokenRegistration Register(System.Action callback)

Disassembly:
	0x033DE3A4 MOV W20, W1
	0x033DE3A8 MOV X19, X0
	0x033DE3AC TBNZ X8, 0x0, 0x33DE3C4
	0x033DE3B0 ADRP X0, 0xD21000
	0x033DE3B4 LDR X0, [X0 + 0x470]
	0x033DE3B8 BL 0x1C16CF4
	0x033DE3BC MOVZ W8, 0x1
	0x033DE3C0 STRB W8, [X22 + 0x378]
	0x033DE3C4 MOV X0, X19
	0x033DE3C8 MOV X1, X31
	0x033DE3CC BL 0x33BDD8C
	0x033DE3D0 LDR X0, [X21]
	0x033DE3D4 LDR W8, [X0 + 0xE0]
	0x033DE3D8 CBNZ W8, 0x33DE3E4
	0x033DE3DC BL 0x1C16DFC
	0x033DE3E0 LDR X0, [X21]
	0x033DE3E4 LDR X8, [X0 + 0xB8]
	0x033DE3E8 AND W1, W20, 0x1
	0x033DE3EC MOV X0, X19
	0x033DE3F0 LDP X20, X19, [X31 + 0x20]
	0x033DE3F4 LDR W2, [X8]
	0x033DE3F8 LDP X22, X21, [X31 + 0x10]
	0x033DE3FC LDR X30, [X31], #0x30
	0x033DE400 B 0x33DE404
	0x033DE404 STR X30, [X31 - 0x30]!
	0x033DE408 STP X22, X21, [X31 + 0x10]
	0x033DE40C STP X20, X19, [X31 + 0x20]
	0x033DE410 ADRP X22, 0xFFF000
	0x033DE414 LDRB W8, [X22 + 0x379]
	0x033DE418 MOV W20, W2
	0x033DE41C MOV W21, W1
	0x033DE420 MOV X19, X0
	0x033DE424 TBNZ X8, 0x0, 0x33DE43C
	0x033DE428 ADRP X0, 0xD40000
	0x033DE42C LDR X0, [X0 + 0x2A8]
	0x033DE430 BL 0x1C16CF4
	0x033DE434 MOVZ W8, 0x1
	0x033DE438 STRB W8, [X22 + 0x379]
	0x033DE43C CBZ X19, 0x33DE4B0
	0x033DE440 ADRP X22, 0xD40000
	0x033DE444 LDR X22, [X22 + 0x2A8]
	0x033DE448 ANDS W31, W21, 0x1
	0x033DE44C MOVZ W8, 0x80000000
	0x033DE450 CSEL W21, W8, W31, NE
	0x033DE454 BL 0x1C16D44
	0x033DE458 STR W21, [X19 + 0x20]
	0x033DE45C LDR X0, [X22]
	0x033DE460 LDR W8, [X0 + 0xE0]
	0x033DE464 CBNZ W8, 0x33DE474
	0x033DE468 BL 0x1C16DFC
	0x033DE46C LDR X0, [X22]
	0x033DE470 LDR W21, [X19 + 0x20]
	0x033DE474 LDR X8, [X0 + 0xB8]
	0x033DE478 LDRB W22, [X8 + 0x8]
	0x033DE47C BL 0x1C16D44
	0x033DE480 BL 0x1C16D44
	0x033DE484 UBFM W9, W20, 0xD, 0xC
	0x033DE488 CMP W22, 0x0
	0x033DE48C MOVZ W10, 0x80000
	0x033DE490 AND W8, W21, 0xC007FFFF
	0x033DE494 CSEL W9, W9, W10, EQ
	0x033DE498 ORR W8, W8, W9, 0x0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X23, 0x1000000
	009 Move X22, 0xD1E000
	010 Move X19, X8
	011 Move W8, [X23+873]
	012 Move X22, [X22+2008]
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xD1E000
	020 Move X0, [X0+2008]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+873], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X22]
	030 Compare X20, 0
	031 JumpIfEqual {57}
	032 Move X8, [X0+184]
	033 Move W9, [X0+224]
	034 Move X22, [X8]
	035 Compare W9, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Add X8, X31, 8
	039 Move W4, 1
	040 Move X0, X21
	041 Move X1, X22
	042 Move X2, X20
	043 Move W3, W31
	044 Call CancellationToken.Register, X0, X1, X2, X3, X4
	045 Move X8, [X31+24]
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 Move X22, [X31+48]
	048 Move X21, [X31+56]
	049 Move X30, [X31+32]
	050 Move X23, [X31+40]
	051 Move [X19+16], X8
	052 Move [X19], V0
	053 Move X20, [X31+64]
	054 Move X19, [X31+72]
	055 Add X31, X31, 80
	056 Return X0
	057 Move X0, 0xD1B000
	058 Move X0, [X0+1320]
	059 Call 0x1C17D08
	060 Call 0x1C17F10
	061 Move X19, X0
	062 Move X0, 0xD4F000
	063 Move X0, [X0+3880]
	064 Call 0x1C17D08
	065 Move X1, X0
	066 Move X0, X19
	067 Move X2, X31
	068 Call ArgumentNullException..ctor, X0, X1
	069 Move X0, 0xD4F000
	070 Move X0, [X0+3888]
	071 Call 0x1C17D08
	072 Move X1, X0
	073 Move X0, X19
	074 Call 0x1C17DEC

Method: System.Threading.CancellationTokenRegistration Register(System.Action`1<System.Object> callback, System.Object state)

Disassembly:
	0x033DE5C8 BL 0x1C16DEC
	0x033DE5CC STR X30, [X31 - 0x20]!
	0x033DE5D0 STP X20, X19, [X31 + 0x10]
	0x033DE5D4 ADRP X20, 0xFFF000
	0x033DE5D8 LDRB W8, [X20 + 0x37A]
	0x033DE5DC MOV X19, X0
	0x033DE5E0 TBNZ X8, 0x0, 0x33DE5F8
	0x033DE5E4 ADRP X0, 0xD1B000
	0x033DE5E8 LDR X0, [X0 + 0xCC0]
	0x033DE5EC BL 0x1C16CF4
	0x033DE5F0 MOVZ W8, 0x1
	0x033DE5F4 STRB W8, [X20 + 0x37A]
	0x033DE5F8 LDR X20, [X19 + 0x10]!
	0x033DE5FC BL 0x1C16D44
	0x033DE600 CBZ X20, 0x33DE610
	0x033DE604 LDP X20, X19, [X31 + 0x10]
	0x033DE608 LDR X30, [X31], #0x20
	0x033DE60C RET
	0x033DE610 ADRP X8, 0xD1B000
	0x033DE614 LDR X8, [X8 + 0xCC0]
	0x033DE618 LDR X0, [X8]
	0x033DE61C BL 0x1C16F10
	0x033DE620 MOV X1, X31
	0x033DE624 MOV X20, X0
	0x033DE628 BL 0x33BDD8C
	0x033DE62C BL 0x1C16D44
	0x033DE630 MOV X0, X19
	0x033DE634 MOV X1, X20
	0x033DE638 LDP X20, X19, [X31 + 0x10]
	0x033DE63C MOV X2, X31
	0x033DE640 MOV X3, X31
	0x033DE644 LDR X30, [X31], #0x20
	0x033DE648 B 0x33EB118
	0x033DE64C STR X30, [X31 - 0x10]!
	0x033DE650 LDRB W8, [X1]
	0x033DE654 CBNZ W8, 0x33DE668
	0x033DE658 MOV X2, X1
	0x033DE65C MOVN W1, 0x0
	0x033DE660 LDR X30, [X31], #0x10

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X23, 0x1000000
	010 Move X24, 0xD1E000
	011 Move X19, X8
	012 Move W8, [X23+874]
	013 Move X24, [X24+2008]
	014 Move X20, X2
	015 Move X21, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xD1E000
	022 Move X0, [X0+2008]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+874], W8
	026 Move X0, [X24]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Add X8, X31, 8
	032 Move W4, 1
	033 Move X0, X22
	034 Move X1, X21
	035 Move X2, X20
	036 Move W3, W31
	037 Call CancellationToken.Register, X0, X1, X2, X3, X4
	038 Move X8, [X31+24]
	039 Move X30, [X31+32]
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 Move X22, [X31+64]
	042 Move X21, [X31+72]
	043 Move X24, [X31+48]
	044 Move X23, [X31+56]
	045 Move [X19+16], X8
	046 Move [X19], V0
	047 Move X20, [X31+80]
	048 Move X19, [X31+88]
	049 Add X31, X31, 96
	050 Return X0

Method: System.Threading.CancellationTokenRegistration InternalRegisterWithoutEC(System.Action`1<System.Object> callback, System.Object state)

Disassembly:
	0x033DE664 B 0x33E5958
	0x033DE668 BL 0x33E5700
	0x033DE66C STP X30, X19, [X31 - 0x10]!
	0x033DE670 LDR X19, [X0 + 0x20]
	0x033DE674 BL 0x1C16D44
	0x033DE678 MOV X0, X19
	0x033DE67C MOV X1, X31
	0x033DE680 BL 0x33EB208
	0x033DE684 TBZ X0, 0x0, 0x33DE694
	0x033DE688 MOVZ W0, 0x1
	0x033DE68C LDP X30, X19, [X31], #0x10
	0x033DE690 RET
	0x033DE694 ADRP X0, 0xD43000
	0x033DE698 LDR X0, [X0 + 0x7A8]
	0x033DE69C BL 0x1C16D08
	0x033DE6A0 BL 0x1C16F10
	0x033DE6A4 MOV X1, X31
	0x033DE6A8 MOV X19, X0
	0x033DE6AC BL 0x32E230C
	0x033DE6B0 ADRP X0, 0xD4E000
	0x033DE6B4 LDR X0, [X0 + 0xFC8]
	0x033DE6B8 BL 0x1C16D08
	0x033DE6BC MOV X1, X0
	0x033DE6C0 MOV X0, X19
	0x033DE6C4 BL 0x1C16DEC
	0x033DE6C8 MOV W1, W31
	0x033DE6CC B 0x33DE6D0
	0x033DE6D0 SUB X31, X31, 0x40
	0x033DE6D4 STP X30, X23, [X31 + 0x10]
	0x033DE6D8 STP X22, X21, [X31 + 0x20]
	0x033DE6DC STP X20, X19, [X31 + 0x30]
	0x033DE6E0 STRB W31, [X31 + 0xC]
	0x033DE6E4 CBZ X0, 0x33DE7B8
	0x033DE6E8 MOV W21, W1
	0x033DE6EC MOVZ W1, 0x80000000
	0x033DE6F0 MOVZ W2, 0x80000000
	0x033DE6F4 MOV X20, X0
	0x033DE6F8 BL 0x33DE12C
	0x033DE6FC MOV X0, X20

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X23, 0x1000000
	010 Move X24, 0xD1E000
	011 Move X19, X8
	012 Move W8, [X23+875]
	013 Move X24, [X24+2008]
	014 Move X20, X2
	015 Move X21, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xD1E000
	022 Move X0, [X0+2008]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+875], W8
	026 Move X0, [X24]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Add X8, X31, 8
	032 Move X0, X22
	033 Move X1, X21
	034 Move X2, X20
	035 Move W3, W31
	036 Move W4, W31
	037 Call CancellationToken.Register, X0, X1, X2, X3, X4
	038 Move X8, [X31+24]
	039 Move X30, [X31+32]
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 Move X22, [X31+64]
	042 Move X21, [X31+72]
	043 Move X24, [X31+48]
	044 Move X23, [X31+56]
	045 Move [X19+16], X8
	046 Move [X19], V0
	047 Move X20, [X31+80]
	048 Move X19, [X31+88]
	049 Add X31, X31, 96
	050 Return X0

Method: System.Threading.CancellationTokenRegistration Register(System.Action`1<System.Object> callback, System.Object state, System.Boolean useSynchronizationContext, System.Boolean useExecutionContext)

Disassembly:
	0x033DE49C STR W8, [X19 + 0x20]
	0x033DE4A0 LDP X20, X19, [X31 + 0x20]
	0x033DE4A4 LDP X22, X21, [X31 + 0x10]
	0x033DE4A8 LDR X30, [X31], #0x30
	0x033DE4AC RET
	0x033DE4B0 BL 0x1C16F20
	0x033DE4B4 SUB X31, X31, 0x30
	0x033DE4B8 STP X30, X21, [X31 + 0x10]
	0x033DE4BC STP X20, X19, [X31 + 0x20]
	0x033DE4C0 MOV W21, W1
	0x033DE4C4 MOV X1, X31
	0x033DE4C8 MOV W19, W2
	0x033DE4CC MOV X20, X0
	0x033DE4D0 BL 0x33BDD8C
	0x033DE4D4 TBNZ X19, 0x1F, 0x33DE4FC
	0x033DE4D8 CMP W19, 0x800
	0x033DE4DC B.GE 0x33DE544
	0x033DE4E0 AND W1, W21, 0x1
	0x033DE4E4 MOV X0, X20
	0x033DE4E8 MOV W2, W19
	0x033DE4EC LDP X20, X19, [X31 + 0x20]
	0x033DE4F0 LDP X30, X21, [X31 + 0x10]
	0x033DE4F4 ADD X31, X31, 0x30
	0x033DE4F8 B 0x33DE404
	0x033DE4FC ADRP X0, 0xD1D000
	0x033DE500 LDR X0, [X0 + 0x760]
	0x033DE504 BL 0x1C16D08
	0x033DE508 BL 0x1C16F10
	0x033DE50C MOV X19, X0
	0x033DE510 ADRP X0, 0xD4E000
	0x033DE514 LDR X0, [X0 + 0xFB0]
	0x033DE518 BL 0x1C16D08
	0x033DE51C MOV X1, X0
	0x033DE520 MOV X0, X19
	0x033DE524 MOV X2, X31
	0x033DE528 BL 0x3316014
	0x033DE52C ADRP X0, 0xD4E000
	0x033DE530 LDR X0, [X0 + 0xFB8]
	0x033DE534 BL 0x1C16D08
	0x033DE538 MOV X1, X0
	0x033DE53C MOV X0, X19
	0x033DE540 BL 0x1C16DEC
	0x033DE544 MOVZ W8, 0x7FF
	0x033DE548 STR W8, [X31 + 0xC]
	0x033DE54C ADRP X0, 0xD15000
	0x033DE550 LDR X0, [X0 + 0x758]
	0x033DE554 BL 0x1C16D08
	0x033DE558 ADD X1, X31, 0xC
	0x033DE55C BL 0x1C16E04
	0x033DE560 MOV X19, X0
	0x033DE564 ADRP X0, 0xD4E000
	0x033DE568 LDR X0, [X0 + 0xFC0]
	0x033DE56C BL 0x1C16D08
	0x033DE570 MOV X1, X19
	0x033DE574 MOV X2, X31
	0x033DE578 BL 0x321EFD0
	0x033DE57C MOV X19, X0
	0x033DE580 ADRP X0, 0xD1D000
	0x033DE584 LDR X0, [X0 + 0x760]
	0x033DE588 BL 0x1C16D08
	0x033DE58C BL 0x1C16F10
	0x033DE590 MOV X20, X0
	0x033DE594 ADRP X0, 0xD4E000
	0x033DE598 LDR X0, [X0 + 0xFB0]
	0x033DE59C BL 0x1C16D08
	0x033DE5A0 MOV X1, X0
	0x033DE5A4 MOV X0, X20
	0x033DE5A8 MOV X2, X19
	0x033DE5AC MOV X3, X31
	0x033DE5B0 BL 0x3311888
	0x033DE5B4 ADRP X0, 0xD4E000
	0x033DE5B8 LDR X0, [X0 + 0xFB8]
	0x033DE5BC BL 0x1C16D08
	0x033DE5C0 MOV X1, X0
	0x033DE5C4 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X25, 0x1000000
	011 Move W9, [X25+876]
	012 Move W23, W4
	013 Move W24, W3
	014 Move X20, X2
	015 Move X21, X1
	016 Move X22, X0
	017 Move X19, X8
	018 Move TEMP, X9
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xD3E000
	023 Move X0, [X0+1408]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+876], W8
	027 Compare X21, 0
	028 JumpIfEqual {80}
	029 Move X22, [X22]
	030 Compare X22, 0
	031 JumpIfEqual {43}
	032 Move TEMP, X24
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {46}
	036 Call SynchronizationContext.get_Current
	037 Move X24, X0
	038 Move TEMP, X23
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {51}
	042 Move X4, X31
	043 Move [X19], X31
	044 Move [X19+8], X31
	045 Move [X19+16], X31
	046 Move X24, X31
	047 Move TEMP, X23
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {42}
	051 Move X8, 0xD3E000
	052 Move X8, [X8+1408]
	053 Move X0, [X8]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Call ExecutionContext.Capture
	059 Move X4, X0
	060 Add X8, X31, 8
	061 Move X0, X22
	062 Move X1, X21
	063 Move X2, X20
	064 Move X3, X24
	065 Call CancellationTokenSource.InternalRegister, X0, X1, X2, X3, X4
	066 Move X8, [X31+24]
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 Move [X19+16], X8
	069 Move [X19], V0
	070 Move X20, [X31+80]
	071 Move X19, [X31+88]
	072 Move X22, [X31+64]
	073 Move X21, [X31+72]
	074 Move X24, [X31+48]
	075 Move X23, [X31+56]
	076 Move X30, [X31+32]
	077 Move X25, [X31+40]
	078 Add X31, X31, 96
	079 Return X0
	080 Move X0, 0xD1B000
	081 Move X0, [X0+1320]
	082 Call 0x1C17D08
	083 Call 0x1C17F10
	084 Move X19, X0
	085 Move X0, 0xD4F000
	086 Move X0, [X0+3880]
	087 Call 0x1C17D08
	088 Move X1, X0
	089 Move X0, X19
	090 Move X2, X31
	091 Call ArgumentNullException..ctor, X0, X1
	092 Move X0, 0xD4F000
	093 Move X0, [X0+3896]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X19
	097 Call 0x1C17DEC

Method: System.Boolean Equals(System.Threading.CancellationToken other)

Disassembly:
	0x033DEA3C BL 0x1C16DFC
	0x033DEA40 MUL W8, W27, W24
	0x033DEA44 EXTR W8, W8, W8, 0x1
	0x033DEA48 CMP W8, W25

ISIL:
	001 Move X8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean Equals(System.Object other)

Disassembly:
	0x033DEA4C B.HI 0x33DE9D4
	0x033DEA50 LDR X0, [X26]
	0x033DEA54 LDR W8, [X0 + 0xE0]
	0x033DEA58 CBNZ W8, 0x33DEA60
	0x033DEA5C BL 0x1C16DFC
	0x033DEA60 ADD X0, X31, 0x38
	0x033DEA64 BL 0x33DDC30
	0x033DEA68 B 0x33DE9D4
	0x033DEA6C MOV X0, X19
	0x033DEA70 BL 0x33DE5CC
	0x033DEA74 ADRP X20, 0xD4E000
	0x033DEA78 LDR X20, [X20 + 0xF98]
	0x033DEA7C LDR X0, [X20]
	0x033DEA80 LDR W8, [X0 + 0xE0]
	0x033DEA84 CBNZ W8, 0x33DEA90
	0x033DEA88 BL 0x1C16DFC
	0x033DEA8C LDR X0, [X20]
	0x033DEA90 LDR X8, [X26]
	0x033DEA94 LDR X9, [X0 + 0xB8]
	0x033DEA98 LDR W10, [X8 + 0xE0]
	0x033DEA9C LDR X20, [X9]
	0x033DEAA0 CBNZ W10, 0x33DEAAC
	0x033DEAA4 MOV X0, X8
	0x033DEAA8 BL 0x1C16DFC
	0x033DEAAC ADD X8, X31, 0x18
	0x033DEAB0 ADD X0, X31, 0x38
	0x033DEAB4 MOV X1, X20
	0x033DEAB8 MOV X2, X19
	0x033DEABC BL 0x33DD664
	0x033DEAC0 LDR X20, [X19 + 0x10]
	0x033DEAC4 BL 0x1C16D44
	0x033DEAC8 STRB W31, [X31 + 0x14]
	0x033DEACC ADD X1, X31, 0x14
	0x033DEAD0 MOV X0, X20
	0x033DEAD4 BL 0x33DE64C
	0x033DEAD8 MOVZ W27, 0xE
	0x033DEADC MOVZ W28, 0xB
	0x033DEAE0 MOV W24, W21
	0x033DEAE4 MOV X0, X19
	0x033DEAE8 BL 0x33DE0A8
	0x033DEAEC TBNZ X0, 0x0, 0x33DEBD8
	0x033DEAF0 LDR X0, [X26]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1000000
	006 Move W8, [X21+877]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD1E000
	014 Move X0, [X0+2008]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+877], W8
	018 Compare X19, 0
	019 JumpIfEqual {25}
	020 Move X21, 0xD1E000
	021 Move X21, [X21+2008]
	022 Move X8, [X19]
	023 Move X0, [X21]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfEqual {30}
	029 Move X1, X0
	030 Call 0x1C17DFC
	031 Move X1, [X21]
	032 Move X0, [X19]
	033 Move X8, [X0+64]
	034 Move X9, [X1+64]
	035 Move X0, X19
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Call 0x1C17E08
	038 Move X8, [X0]
	039 Move X9, [X20]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSET not yet implemented."
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return X0
	047 Call 0x1C181E0

Method: System.Int32 GetHashCode()

Disassembly:
	0x033DEAF4 LDR W8, [X0 + 0xE0]
	0x033DEAF8 CBNZ W8, 0x33DEB00
	0x033DEAFC BL 0x1C16DFC
	0x033DEB00 ADD X0, X31, 0x38
	0x033DEB04 BL 0x33DDC30
	0x033DEB08 ADDS W31, W21, 0x1
	0x033DEB0C B.EQ 0x33DEB38
	0x033DEB10 MOV X0, X31
	0x033DEB14 BL 0x33C18F4
	0x033DEB18 MOV W29, W31
	0x033DEB1C MOV X23, X31
	0x033DEB20 SUB W8, W0, W22
	0x033DEB24 MOVZ W25, 0xE
	0x033DEB28 TBNZ X8, 0x1F, 0x33DEC14
	0x033DEB2C SUB W24, W21, W8
	0x033DEB30 CMP W24, 0x0
	0x033DEB34 B.LE 0x33DEC14
	0x033DEB38 MOV X0, X19
	0x033DEB3C BL 0x33DE2A0
	0x033DEB40 ADD W1, W0, 0x1
	0x033DEB44 MOV X0, X19
	0x033DEB48 BL 0x33DE2FC
	0x033DEB4C MOV X0, X19
	0x033DEB50 BL 0x33DE0A8
	0x033DEB54 TBNZ X0, 0x0, 0x33DEBE8
	0x033DEB58 LDR X23, [X19 + 0x10]
	0x033DEB5C BL 0x1C16D44
	0x033DEB60 MOV X0, X23
	0x033DEB64 MOV W1, W24

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1000000
	005 Move W8, [X20+878]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD18000
	012 Move X0, [X0+2640]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+878], W8
	016 Move X0, [X19]
	017 Compare X0, 0
	018 JumpIfNotEqual {31}
	019 Move X19, 0xD18000
	020 Move X19, [X19+2640]
	021 Move X0, [X19]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X19]
	027 Move X8, [X0+184]
	028 Move X0, [X8+8]
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X8, [X0]
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X2, [X8+344]
	035 Move X1, [X8+352]
	036 Move X30, [X31+32]
	037 CallNoReturn X2
	038 Call 0x1C17F20

Method: System.Boolean op_Equality(System.Threading.CancellationToken left, System.Threading.CancellationToken right)

Disassembly:
	0x033DEB68 MOV W2, W31
	0x033DEB6C BL 0x33E5778
	0x033DEB70 ANDS W31, W0, 0x1
	0x033DEB74 MOV X23, X31
	0x033DEB78 CSEL W25, W28, W27, NE
	0x033DEB7C MOV X0, X19
	0x033DEB80 BL 0x33DE2A0
	0x033DEB84 SUB W1, W0, 0x1
	0x033DEB88 MOV X0, X19
	0x033DEB8C BL 0x33DE2FC
	0x033DEB90 CBNZ X23, 0x33DEC5C
	0x033DEB94 CMP W25, 0xB
	0x033DEB98 B.EQ 0x33DEAE4
	0x033DEB9C CBZ W25, 0x33DEAE4
	0x033DEBA0 B 0x33DEC0C
	0x033DEBA4 B 0x33DEBA8
	0x033DEBA8 MOV X25, X1
	0x033DEBAC MOV X23, X0
	0x033DEBB0 CMP W25, 0x1
	0x033DEBB4 B.NE 0x33DECB4
	0x033DEBB8 MOV X0, X23
	0x033DEBBC BL 0x3EB1AD0
	0x033DEBC0 LDR X8, [X0]
	0x033DEBC4 STR X8, [X31 + 0x8]
	0x033DEBC8 BL 0x3EB1AE0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1000000
	007 Move X22, 0xD1E000
	008 Move W8, [X21+879]
	009 Move X22, [X22+2008]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD1E000
	017 Move X0, [X0+2008]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+879], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X30, [X31+48]
	033 Return X0

Method: System.Boolean op_Inequality(System.Threading.CancellationToken left, System.Threading.CancellationToken right)

Disassembly:
	0x033DEBCC LDR X23, [X31 + 0x8]
	0x033DEBD0 MOV W25, W31
	0x033DEBD4 B 0x33DEB7C
	0x033DEBD8 MOV X23, X31
	0x033DEBDC MOV W29, W31
	0x033DEBE0 MOVZ W25, 0x5
	0x033DEBE4 B 0x33DEC14
	0x033DEBE8 MOV X0, X19
	0x033DEBEC BL 0x33DE2A0
	0x033DEBF0 SUB W1, W0, 0x1
	0x033DEBF4 MOV X0, X19
	0x033DEBF8 BL 0x33DE2FC
	0x033DEBFC MOV X23, X31
	0x033DEC00 MOVZ W29, 0x1
	0x033DEC04 MOVZ W25, 0xE
	0x033DEC08 B 0x33DEC14
	0x033DEC0C MOV X23, X31
	0x033DEC10 MOV W29, W31
	0x033DEC14 LDRB W8, [X31 + 0x14]
	0x033DEC18 CBZ W8, 0x33DEC24
	0x033DEC1C MOV X0, X20
	0x033DEC20 BL 0x1C4BEB4
	0x033DEC24 CBNZ X23, 0x33DECAC
	0x033DEC28 ADD X0, X31, 0x18
	0x033DEC2C BL 0x33DF6F0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1000000
	007 Move X22, 0xD1E000
	008 Move W8, [X21+880]
	009 Move X22, [X22+2008]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD1E000
	017 Move X0, [X0+2008]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+880], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X30, [X31+48]
	033 Return X0

Method: System.Void ThrowIfCancellationRequested()

Disassembly:
	0x033DEC30 CMP W25, 0xE
	0x033DEC34 CSET W8, NE
	0x033DEC38 ORR W0, W8, W29, 0x0
	0x033DEC3C LDP X20, X19, [X31 + 0x90]
	0x033DEC40 LDP X22, X21, [X31 + 0x80]
	0x033DEC44 LDP X24, X23, [X31 + 0x70]
	0x033DEC48 LDP X26, X25, [X31 + 0x60]
	0x033DEC4C LDP X28, X27, [X31 + 0x50]
	0x033DEC50 LDP X29, X30, [X31 + 0x40]
	0x033DEC54 ADD X31, X31, 0xA0
	0x033DEC58 RET
	0x033DEC5C MOV X0, X23
	0x033DEC60 BL 0x1C16F18
	0x033DEC64 ADRP X0, 0xD1D000
	0x033DEC68 LDR X0, [X0 + 0x760]
	0x033DEC6C BL 0x1C16D08
	0x033DEC70 BL 0x1C16F10
	0x033DEC74 MOV X19, X0
	0x033DEC78 ADRP X0, 0xD4E000
	0x033DEC7C LDR X0, [X0 + 0xFD8]
	0x033DEC80 BL 0x1C16D08
	0x033DEC84 MOV X1, X0
	0x033DEC88 MOV X0, X19
	0x033DEC8C MOV X2, X31
	0x033DEC90 BL 0x3316014
	0x033DEC94 ADRP X0, 0xD4E000
	0x033DEC98 LDR X0, [X0 + 0xFE0]
	0x033DEC9C BL 0x1C16D08
	0x033DECA0 MOV X1, X0
	0x033DECA4 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1000000
	006 Move X20, 0xD1E000
	007 Move W8, [X21+881]
	008 Move X20, [X20+2008]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD1E000
	015 Move X0, [X0+2008]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+881], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X8, [X19]
	025 Compare X8, 0
	026 JumpIfEqual {30}
	027 Move W21, [X8+32]
	028 Call 0x1C17D44
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 
	035 Move X0, [X20]
	036 Call 0x19913D0
	037 Move X0, X19
	038 Call CancellationToken.ThrowOperationCanceledException, X0

Method: System.Void ThrowOperationCanceledException()

Disassembly:
	0x033DECA8 BL 0x1C16DEC
	0x033DECAC MOV X0, X23
	0x033DECB0 BL 0x1C16F18
	0x033DECB4 STR X31, [X31 + 0x8]
	0x033DECB8 MOV X0, X19
	0x033DECBC BL 0x33DE2A0
	0x033DECC0 SUB W1, W0, 0x1
	0x033DECC4 MOV X0, X19
	0x033DECC8 BL 0x33DE2FC
	0x033DECCC LDR X8, [X31 + 0x8]
	0x033DECD0 CBZ X8, 0x33DED24
	0x033DECD4 LDR X0, [X31 + 0x8]
	0x033DECD8 BL 0x1C16F18
	0x033DECDC MOV X25, X1
	0x033DECE0 MOV X23, X0
	0x033DECE4 B 0x33DECB8
	0x033DECE8 B 0x33DED1C
	0x033DECEC B 0x33DED1C
	0x033DECF0 B 0x33DED1C
	0x033DECF4 B 0x33DECF8
	0x033DECF8 MOV X25, X1
	0x033DECFC MOV X23, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, [X0]
	005 Move X0, 0xD1E000
	006 Move X0, [X0+2216]
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X20, X0
	010 Move X0, 0xD4E000
	011 Move X0, [X0+392]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X20
	015 Move X2, X19
	016 Move X3, X31
	017 Call OperationCanceledException..ctor, X0, X1, X2
	018 Move X0, 0xD4F000
	019 Move X0, [X0+3952]
	020 Call 0x1C17D08
	021 Move X1, X0
	022 Move X0, X20
	023 Call 0x1C17DEC

Method: System.Void .cctor()

Disassembly:
	0x033DED00 B 0x33DED64
	0x033DED04 B 0x33DED1C
	0x033DED08 B 0x33DED1C
	0x033DED0C B 0x33DED1C
	0x033DED10 B 0x33DED1C
	0x033DED14 B 0x33DED1C
	0x033DED18 B 0x33DED1C
	0x033DED1C MOV X25, X1
	0x033DED20 MOV X23, X0
	0x033DED24 CMP W25, 0x1
	0x033DED28 B.NE 0x33DED4C
	0x033DED2C MOV X0, X23
	0x033DED30 BL 0x3EB1AD0
	0x033DED34 LDR X19, [X0]
	0x033DED38 BL 0x3EB1AE0
	0x033DED3C MOV W25, W31
	0x033DED40 MOV W29, W31
	0x033DED44 MOV X23, X19
	0x033DED48 B 0x33DEC14
	0x033DED4C MOV X19, X31
	0x033DED50 LDRB W8, [X31 + 0x14]
	0x033DED54 CBZ W8, 0x33DED60
	0x033DED58 MOV X0, X20
	0x033DED5C BL 0x1C4BEB4
	0x033DED60 CBNZ X19, 0x33DED98
	0x033DED64 CMP W25, 0x1
	0x033DED68 B.NE 0x33DED90
	0x033DED6C MOV X0, X23
	0x033DED70 BL 0x3EB1AD0
	0x033DED74 LDR X19, [X0]
	0x033DED78 BL 0x3EB1AE0
	0x033DED7C ADD X0, X31, 0x18
	0x033DED80 BL 0x33DF6F0
	0x033DED84 CBZ X19, 0x33DE978
	0x033DED88 MOV X0, X19
	0x033DED8C BL 0x1C16F18
	0x033DED90 MOV X19, X31
	0x033DED94 B 0x33DEDB0
	0x033DED98 MOV X0, X19
	0x033DED9C BL 0x1C16F18
	0x033DEDA0 MOV X25, X1
	0x033DEDA4 MOV X23, X0
	0x033DEDA8 B 0x33DED50
	0x033DEDAC MOV X23, X0
	0x033DEDB0 ADD X0, X31, 0x18
	0x033DEDB4 BL 0x33DF6F0
	0x033DEDB8 CBNZ X19, 0x33DEDC4
	0x033DEDBC MOV X0, X23
	0x033DEDC0 BL 0x1D2C690

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1000000
	007 Move X19, 0xD4F000
	008 Move W8, [X20+882]
	009 Move X19, [X19+3960]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xD40000
	015 Move X0, [X0+3656]
	016 Call 0x1C17CF4
	017 Move X0, 0xD1E000
	018 Move X0, [X0+2008]
	019 Call 0x1C17CF4
	020 Move X0, 0xD4F000
	021 Move X0, [X0+3968]
	022 Call 0x1C17CF4
	023 Move X0, 0xD4F000
	024 Move X0, [X0+3960]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+882], W8
	028 Move X0, [X19]
	029 Move X22, 0xD40000
	030 Move X20, 0xD4F000
	031 Move X21, 0xD1E000
	032 Move W8, [X0+224]
	033 Move X22, [X22+3656]
	034 Move X20, [X20+3968]
	035 Move X21, [X21+2008]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X19]
	040 Move X8, [X0+184]
	041 Move X0, [X22]
	042 Move X19, [X8]
	043 Call 0x1C17F10
	044 Move X2, [X20]
	045 Move X1, X19
	046 Move X3, X31
	047 Move X20, X0
	048 Call Action`1<Object>..ctor, X0, X1, X2
	049 Move X8, [X21]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X8, [X8+184]
	053 Move [X8], X20
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X30, [X31+48]
	057 Return 

