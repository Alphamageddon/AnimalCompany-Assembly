Type: System.Threading.CancellationCallbackInfo

Method: System.Void .ctor(System.Action`1<System.Object> callback, System.Object stateForCallback, System.Threading.ExecutionContext targetExecutionContext, System.Threading.CancellationTokenSource cancellationTokenSource)

Disassembly:
	0x033E1318 BL 0x1C16F3C
	0x033E131C MOV X1, X31
	0x033E1320 BL 0x1C16DEC
	0x033E1324 STR X30, [X31 - 0x30]!
	0x033E1328 STP X22, X21, [X31 + 0x10]
	0x033E132C STP X20, X19, [X31 + 0x20]
	0x033E1330 ADRP X22, 0xFFC000
	0x033E1334 LDRB W8, [X22 + 0x3BF]
	0x033E1338 MOV X19, X2
	0x033E133C MOV X20, X1
	0x033E1340 MOV X21, X0
	0x033E1344 TBNZ X8, 0x0, 0x33E135C
	0x033E1348 ADRP X0, 0xD3A000
	0x033E134C LDR X0, [X0 + 0x580]
	0x033E1350 BL 0x1C16CF4
	0x033E1354 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, X1
	008 Move X1, X31
	009 Move X19, X4
	010 Move X20, X3
	011 Move X21, X2
	012 Move X23, X0
	013 Call Object..ctor, X0
	014 Move [X23+16], X22
	015 Move [X23+24], X21
	016 Move [X23+32], X20
	017 Move [X23+40], X19
	018 Move X20, [X31+32]
	019 Move X19, [X31+40]
	020 Move X22, [X31+16]
	021 Move X21, [X31+24]
	022 Move X30, [X31+48]
	023 Move X23, [X31+56]
	024 Return 

Method: System.Void ExecuteCallback()

Disassembly:
	0x033E19A4 ADRP X8, 0xD1A000
	0x033E19A8 LDR X8, [X8 + 0x8A0]
	0x033E19AC MOV X0, X20
	0x033E19B0 LDR X1, [X8]
	0x033E19B4 BL 0x269B110
	0x033E19B8 ADRP X8, 0xD1A000
	0x033E19BC LDR X8, [X8 + 0x890]
	0x033E19C0 STR X0, [X31 + 0x10]
	0x033E19C4 ADD X0, X31, 0x10
	0x033E19C8 LDR X1, [X8]
	0x033E19CC BL 0x26770F8
	0x033E19D0 MOV W22, W0
	0x033E19D4 B 0x33E19DC
	0x033E19D8 MOV W22, W31
	0x033E19DC AND W0, W22, 0x1
	0x033E19E0 LDP X20, X19, [X31 + 0x70]
	0x033E19E4 LDP X22, X21, [X31 + 0x60]
	0x033E19E8 LDP X24, X23, [X31 + 0x50]
	0x033E19EC LDR X30, [X31 + 0x40]
	0x033E19F0 ADD X31, X31, 0x80
	0x033E19F4 RET
	0x033E19F8 MOV X21, X31
	0x033E19FC MOV X20, X31
	0x033E1A00 MOV W22, W31
	0x033E1A04 MOVZ W23, 0xF
	0x033E1A08 B 0x33E1964
	0x033E1A0C STR W21, [X31 + 0xC]
	0x033E1A10 ADRP X0, 0xD12000
	0x033E1A14 LDR X0, [X0 + 0x758]
	0x033E1A18 BL 0x1C16D08
	0x033E1A1C ADD X1, X31, 0xC
	0x033E1A20 BL 0x1C16E04
	0x033E1A24 MOV X19, X0
	0x033E1A28 ADRP X0, 0xD41000
	0x033E1A2C LDR X0, [X0 + 0xEB0]
	0x033E1A30 BL 0x1C16D08
	0x033E1A34 BL 0x19903D0
	0x033E1A38 ADRP X0, 0xD4C000
	0x033E1A3C LDR X0, [X0 + 0x130]
	0x033E1A40 BL 0x1C16D08
	0x033E1A44 BL 0x33E16D4
	0x033E1A48 MOV X20, X0
	0x033E1A4C ADRP X0, 0xD1A000
	0x033E1A50 LDR X0, [X0 + 0x760]
	0x033E1A54 BL 0x1C16D08
	0x033E1A58 BL 0x1C16F10
	0x033E1A5C MOV X21, X0
	0x033E1A60 ADRP X0, 0xD4C000
	0x033E1A64 LDR X0, [X0 + 0x138]
	0x033E1A68 BL 0x1C16D08
	0x033E1A6C MOV X1, X0
	0x033E1A70 MOV X0, X21
	0x033E1A74 MOV X2, X19
	0x033E1A78 MOV X3, X20
	0x033E1A7C MOV X4, X31
	0x033E1A80 BL 0x3312C8C
	0x033E1A84 ADRP X0, 0xD4C000
	0x033E1A88 LDR X0, [X0 + 0x140]
	0x033E1A8C BL 0x1C16D08
	0x033E1A90 MOV X1, X0
	0x033E1A94 MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xFFD000
	008 Move W8, [X20+928]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xD4D000
	015 Move X0, [X0+184]
	016 Call 0x1C17CF4
	017 Move X0, 0xD4C000
	018 Move X0, [X0+3904]
	019 Call 0x1C17CF4
	020 Move X0, 0xD45000
	021 Move X0, [X0+2376]
	022 Call 0x1C17CF4
	023 Move X0, 0xD3B000
	024 Move X0, [X0+1408]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+928], W8
	028 Move X21, [X19+32]
	029 Compare X21, 0
	030 JumpIfEqual {70}
	031 Move X23, 0xD4C000
	032 Move X23, [X23+3904]
	033 Move X22, 0xD3B000
	034 Move X8, [X23]
	035 Move X8, [X8+184]
	036 Move X20, [X8]
	037 Move X22, [X22+1408]
	038 Compare X20, 0
	039 JumpIfNotEqual {54}
	040 Move X8, 0xD45000
	041 Move X8, [X8+2376]
	042 Move X0, [X8]
	043 Call 0x1C17F10
	044 Move X8, 0xD4D000
	045 Move X8, [X8+184]
	046 Move X1, X31
	047 Move X20, X0
	048 Move X2, [X8]
	049 Call ContextCallback..ctor, X0, X1, X2
	050 Move X8, [X23]
	051 Move X8, [X8+184]
	052 Move [X8], X20
	053 Move X21, [X19+32]
	054 Move X0, [X22]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, X21
	060 Move X1, X20
	061 Move X2, X19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 Call ExecutionContext.Run, X0, X1, X2
	069 Return 
	070 Move X0, X19
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X30, [X31+48]
	076 Move X23, [X31+56]
	077 Call CancellationCallbackInfo.ExecutionContextCallback, X0
	078 Return 

Method: System.Void ExecutionContextCallback(System.Object obj)

Disassembly:
	0x033E2404 B 0x33E2410
	0x033E2408 LDR X0, [X21 + 0x20]
	0x033E240C BL 0x33E2640
	0x033E2410 LDR X8, [X21 + 0x30]
	0x033E2414 CBZ X8, 0x33E247C
	0x033E2418 ADRP X24, 0xD40000
	0x033E241C LDR X24, [X24 + 0xEB0]
	0x033E2420 SUB W8, W23, W26
	0x033E2424 CMP W8, 0x0
	0x033E2428 CSEL W25, W23, W26, LT
	0x033E242C SUB W26, W31, W26
	0x033E2430 ADD W8, W26, W23
	0x033E2434 CMP W8, 0x1
	0x033E2438 B.LT 0x33E2478
	0x033E243C LDR X22, [X21 + 0x30]
	0x033E2440 CBZ X22, 0x33E247C
	0x033E2444 MOV X0, X21
	0x033E2448 MOV X1, X22
	0x033E244C BL 0x33E22D4
	0x033E2450 LDR X0, [X24]
	0x033E2454 LDR W8, [X0 + 0xE0]
	0x033E2458 CBNZ W8, 0x33E2460
	0x033E245C BL 0x1C16DFC
	0x033E2460 SUB W23, W23, 0x1
	0x033E2464 MOV X0, X22
	0x033E2468 MOV W1, W31
	0x033E246C MOV X2, X31
	0x033E2470 BL 0x33E9E8C
	0x033E2474 B 0x33E2430
	0x033E2478 MOV W23, W25
	0x033E247C BL 0x1C16D44
	0x033E2480 LDR X24, [X21 + 0x28]
	0x033E2484 STR W23, [X21 + 0x10]
	0x033E2488 BL 0x1C16D44
	0x033E248C CMP W23, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFFC000
	005 Move W8, [X20+929]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD4B000
	012 Move X0, [X0+3904]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+929], W8
	016 Compare X19, 0
	017 JumpIfEqual {40}
	018 Move X8, 0xD4B000
	019 Move X8, [X8+3904]
	020 Move X9, [X19]
	021 Move X8, [X8]
	022 Move W11, [X9+304]
	023 Move W10, [X8+304]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X9, [X9+200]
	026 Add X9, X9, X10
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, [X19+16]
	030 Compare X8, 0
	031 JumpIfEqual {40}
	032 Move X1, [X19+24]
	033 Move X3, [X8+24]
	034 Move X0, [X8+64]
	035 Move X2, [X8+40]
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 CallNoReturn X3
	040 Call 0x1C17F20

