Type: System.Threading.Tasks.ForceAsyncAwaiter

Method: System.Void .ctor(System.Threading.Tasks.Task task)

Disassembly:
	0x033EF4DC BL 0x33EFA40
	0x033EF4E0 MOVZ W0, 0x1

ISIL:
	001 Move [X0], X1
	002 Return 

Method: System.Threading.Tasks.ForceAsyncAwaiter GetAwaiter()

Disassembly:
	0x033EF4E4 B 0x33EF504
	0x033EF4E8 LDR W20, [X19 + 0x38]

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.Boolean get_IsCompleted()

Disassembly:
	0x033EF4EC BL 0x1C16D44
	0x033EF4F0 TBNZ X20, 0x10, 0x33EF500

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void GetResult()

Disassembly:
	0x033EF4F4 MOVZ W1, 0x400000
	0x033EF4F8 MOVZ W2, 0x1630000
	0x033EF4FC B 0x33EF4C4
	0x033EF500 MOV W0, W31
	0x033EF504 CBNZ X21, 0x33EF518
	0x033EF508 LDP X20, X19, [X31 + 0x20]
	0x033EF50C LDP X22, X21, [X31 + 0x10]
	0x033EF510 LDP X30, X23, [X31], #0x30
	0x033EF514 RET
	0x033EF518 ADRP X0, 0xD3E000

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Add X0, X31, 8
	006 Move X1, X31
	007 Move [X31+8], X8
	008 Call TaskAwaiter.GetResult, X0
	009 Move X30, [X31+16]
	010 Return 
	011 Call 0x1C17F20

Method: System.Void OnCompleted(System.Action action)

Disassembly:
	0x033EF51C LDR X0, [X0 + 0x6C8]
	0x033EF520 BL 0x1C16D08
	0x033EF524 MOV X1, X0
	0x033EF528 MOV X0, X21
	0x033EF52C BL 0x1C16DEC
	0x033EF530 CMP W1, 0x1
	0x033EF534 MOV X21, X0
	0x033EF538 B.NE 0x33EF5B8
	0x033EF53C MOV X0, X21
	0x033EF540 BL 0x3EB1AD0
	0x033EF544 MOV X21, X0
	0x033EF548 ADRP X0, 0xD04000
	0x033EF54C LDR X0, [X0 + 0x7D0]
	0x033EF550 BL 0x1C16D08
	0x033EF554 LDR X8, [X21]
	0x033EF558 LDR X1, [X8]
	0x033EF55C BL 0x1C17270
	0x033EF560 TBZ X0, 0x0, 0x33EF590
	0x033EF564 LDR X23, [X21]
	0x033EF568 BL 0x3EB1AE0
	0x033EF56C ADRP X0, 0xD3E000
	0x033EF570 LDR X0, [X0 + 0x6D0]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move [X31], X31
	005 Move [X31+8], X31
	006 Move X8, [X0]
	007 Compare X8, 0
	008 JumpIfEqual {29}
	009 Move X19, X1
	010 Add X0, X31, 16
	011 Move X1, X8
	012 Move W2, W31
	013 Move X3, X31
	014 Move [X31+16], X31
	015 Move [X31+24], X31
	016 Call ConfiguredTaskAwaitable..ctor, X0, X1, X2
	017 Move X8, [X31+16]
	018 Move X9, [X31+24]
	019 Add X0, X31, 0
	020 Move X1, X19
	021 Move X2, X31
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Call ConfiguredTaskAwaiter.OnCompleted, X0, X1
	025 Move X30, [X31+32]
	026 Move X19, [X31+40]
	027 Add X31, X31, 48
	028 Return 
	029 Call 0x1C17F20

Method: System.Void UnsafeOnCompleted(System.Action action)

Disassembly:
	0x033EF574 BL 0x1C16D08
	0x033EF578 BL 0x1C16F10
	0x033EF57C MOV X1, X23
	0x033EF580 MOV X21, X0
	0x033EF584 BL 0x33ECF28
	0x033EF588 MOV W23, W31
	0x033EF58C B 0x33EF44C
	0x033EF590 MOVZ W0, 0x8
	0x033EF594 BL 0x3EB1AF0
	0x033EF598 LDR X8, [X21]
	0x033EF59C STR X8, [X0]
	0x033EF5A0 ADRP X1, 0xAC5000
	0x033EF5A4 ADD X1, X1, 0xE58
	0x033EF5A8 MOV X2, X31
	0x033EF5AC BL 0x3EB1B00
	0x033EF5B0 MOV X21, X0
	0x033EF5B4 BL 0x3EB1AE0
	0x033EF5B8 MOV X0, X21
	0x033EF5BC BL 0x1D2C690
	0x033EF5C0 BL 0x1990590
	0x033EF5C4 STR X30, [X31 - 0x20]!
	0x033EF5C8 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move [X31], X31
	005 Move [X31+8], X31
	006 Move X8, [X0]
	007 Compare X8, 0
	008 JumpIfEqual {29}
	009 Move X19, X1
	010 Add X0, X31, 16
	011 Move X1, X8
	012 Move W2, W31
	013 Move X3, X31
	014 Move [X31+16], X31
	015 Move [X31+24], X31
	016 Call ConfiguredTaskAwaitable..ctor, X0, X1, X2
	017 Move X8, [X31+16]
	018 Move X9, [X31+24]
	019 Add X0, X31, 0
	020 Move X1, X19
	021 Move X2, X31
	022 Move [X31], X8
	023 Move [X31+8], X9
	024 Call ConfiguredTaskAwaiter.UnsafeOnCompleted, X0, X1
	025 Move X30, [X31+32]
	026 Move X19, [X31+40]
	027 Add X31, X31, 48
	028 Return 
	029 Call 0x1C17F20

