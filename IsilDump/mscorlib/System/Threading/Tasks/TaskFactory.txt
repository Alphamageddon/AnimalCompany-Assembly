Type: System.Threading.Tasks.TaskFactory

Method: System.Threading.Tasks.TaskScheduler GetDefaultScheduler(System.Threading.Tasks.Task currTask)

Disassembly:
	0x033FA3F0 MOV X1, X31
	0x033FA3F4 LDP X30, X21, [X31], #0x20
	0x033FA3F8 B 0x33BDD8C
	0x033FA3FC STR X30, [X31 - 0x30]!
	0x033FA400 STP X22, X21, [X31 + 0x10]
	0x033FA404 STP X20, X19, [X31 + 0x20]
	0x033FA408 ADRP X22, 0xFE3000
	0x033FA40C ADRP X21, 0xD33000
	0x033FA410 LDRB W8, [X22 + 0x4C4]
	0x033FA414 LDR X21, [X21 + 0xAD8]
	0x033FA418 MOV X19, X1
	0x033FA41C MOV X20, X0
	0x033FA420 TBNZ X8, 0x0, 0x33FA438
	0x033FA424 ADRP X0, 0xD33000
	0x033FA428 LDR X0, [X0 + 0xAD8]
	0x033FA42C BL 0x1C16CF4
	0x033FA430 MOVZ W8, 0x1
	0x033FA434 STRB W8, [X22 + 0x4C4]
	0x033FA438 LDR X0, [X21]
	0x033FA43C LDR X20, [X20 + 0x18]
	0x033FA440 LDR W8, [X0 + 0xE0]
	0x033FA444 CBNZ W8, 0x33FA44C
	0x033FA448 BL 0x1C16DFC
	0x033FA44C CBZ X20, 0x33FA47C
	0x033FA450 LDR X8, [X21]
	0x033FA454 LDR X9, [X20]
	0x033FA458 MOV X0, X20
	0x033FA45C MOV X2, X19
	0x033FA460 LDR X8, [X8 + 0xB8]
	0x033FA464 LDP X4, X3, [X9 + 0x188]
	0x033FA468 LDP X20, X19, [X31 + 0x20]
	0x033FA46C LDP X22, X21, [X31 + 0x10]
	0x033FA470 LDR X1, [X8]
	0x033FA474 LDR X30, [X31], #0x30
	0x033FA478 BR X4
	0x033FA47C BL 0x1C16F20
	0x033FA480 STR X30, [X31 - 0x20]!
	0x033FA484 STP X20, X19, [X31 + 0x10]
	0x033FA488 MOV X20, X0
	0x033FA48C MOV X0, X31
	0x033FA490 MOV X19, X1
	0x033FA494 BL 0x33DD700
	0x033FA498 LDR X8, [X20 + 0x18]
	0x033FA49C CMP X0, X8
	0x033FA4A0 B.EQ 0x33FA4B4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xFE4000
	006 Move W8, [X21+1200]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD02000
	014 Move X0, [X0+2024]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1200], W8
	018 Move X0, [X20+24]
	019 Compare X0, 0
	020 JumpIfNotEqual {55}
	021 Compare X19, 0
	022 JumpIfEqual {30}
	023 Move X0, X19
	024 Call Task.get_Options, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 16
	027 Compare TEMP, 16
	028 JumpIfEqual {30}
	029 Add X8, X19, 40
	030 Move X19, 0xD02000
	031 Move X19, [X19+2024]
	032 Move X0, [X19]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X20, 0xFE0000
	038 Move W8, [X20+2189]
	039 Compare W8, 0
	040 JumpIfNotEqual {46}
	041 Move X0, 0xD02000
	042 Move X0, [X0+2024]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X20+2189], W8
	046 Move X0, [X19]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X19]
	052 Move X8, [X0+184]
	053 Add X8, X8, 8
	054 Move X0, [X8]
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Return X0

Method: System.Void .ctor()

Disassembly:
	0x033F7F6C BL 0x1C16CF4
	0x033F7F70 ADRP X0, 0xD36000
	0x033F7F74 LDR X0, [X0 + 0x7F8]
	0x033F7F78 BL 0x1C16CF4
	0x033F7F7C ADRP X0, 0xD36000

ISIL:
	001 Move X1, X31
	002 Move W2, W31
	003 Move W3, W31
	004 Move X4, X31
	005 Call TaskFactory..ctor, X0, X1, X2, X3, X4
	006 Return 

Method: System.Void .ctor(System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler)

Disassembly:
	0x033FA4A4 LDP X20, X19, [X31 + 0x10]
	0x033FA4A8 MOV W0, W31
	0x033FA4AC LDR X30, [X31], #0x20
	0x033FA4B0 RET
	0x033FA4B4 MOV X0, X20
	0x033FA4B8 MOV X1, X19
	0x033FA4BC LDP X20, X19, [X31 + 0x10]
	0x033FA4C0 LDR X30, [X31], #0x20
	0x033FA4C4 B 0x33FA288
	0x033FA4C8 STR X30, [X31 - 0x30]!
	0x033FA4CC STP X22, X21, [X31 + 0x10]
	0x033FA4D0 STP X20, X19, [X31 + 0x20]
	0x033FA4D4 ADRP X20, 0xFE3000
	0x033FA4D8 ADRP X19, 0xD33000
	0x033FA4DC LDRB W8, [X20 + 0x4C5]
	0x033FA4E0 LDR X19, [X19 + 0xB10]
	0x033FA4E4 TBNZ X8, 0x0, 0x33FA520
	0x033FA4E8 ADRP X0, 0xD05000
	0x033FA4EC LDR X0, [X0 + 0x4A0]
	0x033FA4F0 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, X1
	008 Move X1, X31
	009 Move X19, X4
	010 Move W20, W3
	011 Move W21, W2
	012 Move X23, X0
	013 Call Object..ctor, X0
	014 Move W0, W20
	015 Call TaskFactory.CheckMultiTaskContinuationOptions, X0
	016 Move W0, W21
	017 Call TaskFactory.CheckCreationOptions, X0
	018 Move [X23+16], X22
	019 Move [X23+24], X19
	020 Move [X23+32], W21
	021 Move [X23+36], W20
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X22, [X31+16]
	025 Move X21, [X31+24]
	026 Move X30, [X31+48]
	027 Move X23, [X31+56]
	028 Return 

Method: System.Void CheckCreationOptions(System.Threading.Tasks.TaskCreationOptions creationOptions)

Disassembly:
	0x033FA5F0 STR X30, [X31 - 0x20]!
	0x033FA5F4 STP X20, X19, [X31 + 0x10]
	0x033FA5F8 ADRP X20, 0xFE3000
	0x033FA5FC LDRB W8, [X20 + 0x4C7]
	0x033FA600 MOV X19, X1
	0x033FA604 TBNZ X8, 0x0, 0x33FA61C
	0x033FA608 ADRP X0, 0xCFA000
	0x033FA60C LDR X0, [X0 + 0x7B8]
	0x033FA610 BL 0x1C16CF4
	0x033FA614 MOVZ W8, 0x1
	0x033FA618 STRB W8, [X20 + 0x4C7]
	0x033FA61C CBZ X19, 0x33FA670
	0x033FA620 ADRP X9, 0xCFA000
	0x033FA624 LDR X9, [X9 + 0x7B8]
	0x033FA628 LDR X8, [X19]
	0x033FA62C LDR X1, [X9]
	0x033FA630 LDRB W10, [X8 + 0x130]
	0x033FA634 LDRB W9, [X1 + 0x130]
	0x033FA638 CMP W10, W9
	0x033FA63C B.CC 0x33FA668
	0x033FA640 LDR X8, [X8 + 0xC8]
	0x033FA644 ADD X8, X8, X9, 0x3, LSL
	0x033FA648 LDUR X8, [X8 - 0x8]

ISIL:
	001 Move TEMP, 95
	002 Not TEMP
	003 Move W8, TEMP
	004 And W31, W0, W8
	005 Return 
	006 Move [X31-16], X30
	007 Move [X31-8], X19
	008 Move X0, 0xD02000
	009 Move X0, [X0+1888]
	010 Call 0x1C17D08
	011 Call 0x1C17F10
	012 Move X19, X0
	013 Move X0, 0xD34000
	014 Move X0, [X0+1688]
	015 Call 0x1C17D08
	016 Move X1, X0
	017 Move X0, X19
	018 Move X2, X31
	019 Call ArgumentOutOfRangeException..ctor, X0, X1
	020 Move X0, 0xD34000
	021 Move X0, [X0+2680]
	022 Call 0x1C17D08
	023 Move X1, X0
	024 Move X0, X19
	025 Call 0x1C17DEC

Method: System.Threading.Tasks.TaskScheduler get_Scheduler()

Disassembly:
	0x033FA64C CMP X8, X1
	0x033FA650 B.NE 0x33FA668

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Threading.Tasks.TaskCreationOptions get_CreationOptions()

Disassembly:
	0x033FA654 MOV X0, X19
	0x033FA658 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Threading.Tasks.TaskContinuationOptions get_ContinuationOptions()

Disassembly:
	0x033FA65C MOVZ W1, 0x1
	0x033FA660 LDR X30, [X31], #0x20

ISIL:
	001 Move W0, [X0+36]
	002 Return X0

Method: System.Threading.Tasks.Task StartNew(System.Action action, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler)

Disassembly:
	0x033FA664 B 0x33F269C
	0x033FA668 MOV X0, X19
	0x033FA66C BL 0x1C171E0
	0x033FA670 BL 0x1C16F20
	0x033FA674 STP X30, X23, [X31 - 0x30]!
	0x033FA678 STP X22, X21, [X31 + 0x10]
	0x033FA67C STP X20, X19, [X31 + 0x20]
	0x033FA680 ADRP X21, 0xFE3000
	0x033FA684 LDRB W8, [X21 + 0x4CA]
	0x033FA688 MOV X19, X1
	0x033FA68C MOV X20, X0
	0x033FA690 TBNZ X8, 0x0, 0x33FA6C0
	0x033FA694 ADRP X0, 0xD22000
	0x033FA698 LDR X0, [X0 + 0xE48]
	0x033FA69C BL 0x1C16CF4
	0x033FA6A0 ADRP X0, 0xCFA000
	0x033FA6A4 LDR X0, [X0 + 0x7B8]
	0x033FA6A8 BL 0x1C16CF4
	0x033FA6AC ADRP X0, 0xD33000
	0x033FA6B0 LDR X0, [X0 + 0xB00]
	0x033FA6B4 BL 0x1C16CF4
	0x033FA6B8 MOVZ W8, 0x1
	0x033FA6BC STRB W8, [X21 + 0x4CA]
	0x033FA6C0 MOV X0, X31
	0x033FA6C4 BL 0x3224FFC
	0x033FA6C8 TBZ X0, 0x0, 0x33FA788
	0x033FA6CC ADRP X21, 0xCFA000
	0x033FA6D0 LDR X21, [X21 + 0x7B8]
	0x033FA6D4 LDR X0, [X21]
	0x033FA6D8 LDR W8, [X0 + 0xE0]
	0x033FA6DC CBNZ W8, 0x33FA6E4
	0x033FA6E0 BL 0x1C16DFC
	0x033FA6E4 ADRP X22, 0xFDF000
	0x033FA6E8 LDRB W8, [X22 + 0x88E]
	0x033FA6EC CBNZ W8, 0x33FA704

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xFE4000
	009 Move X24, 0xCFB000
	010 Move W8, [X23+1201]
	011 Move X24, [X24+1976]
	012 Move X20, X4
	013 Move W19, W3
	014 Move X21, X2
	015 Move X22, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xCFB000
	021 Move X0, [X0+1976]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+1201], W8
	025 Move X0, [X24]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move W0, W19
	031 Call Task.InternalCurrentIfAttached, X0
	032 Move X1, X22
	033 Move X3, X21
	034 Move X4, X20
	035 Move W5, W19
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X22, [X31+32]
	039 Move X21, [X31+40]
	040 Move X24, [X31+16]
	041 Move X23, [X31+24]
	042 Move X2, X31
	043 Move W6, W31
	044 Move X30, [X31+64]
	045 Call Task.InternalStartNew, X0, X1, X2, X3, X4, X5, X6
	046 Return X0

Method: System.Threading.Tasks.Task StartNew(System.Action`1<System.Object> action, System.Object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler)

Disassembly:
	0x033FA6F0 ADRP X0, 0xCFA000
	0x033FA6F4 LDR X0, [X0 + 0x7B8]
	0x033FA6F8 BL 0x1C16CF4
	0x033FA6FC MOVZ W8, 0x1
	0x033FA700 STRB W8, [X22 + 0x88E]
	0x033FA704 LDR X0, [X21]
	0x033FA708 LDR W8, [X0 + 0xE0]
	0x033FA70C CBNZ W8, 0x33FA718
	0x033FA710 BL 0x1C16DFC
	0x033FA714 LDR X0, [X21]
	0x033FA718 BL 0x1C16D0C
	0x033FA71C CBZ X19, 0x33FA838
	0x033FA720 LDR X21, [X0]
	0x033FA724 LDR X22, [X19 + 0x30]
	0x033FA728 MOV X0, X20
	0x033FA72C BL 0x33F3894
	0x033FA730 MOV W20, W0
	0x033FA734 CBZ X21, 0x33FA744
	0x033FA738 MOV X0, X21
	0x033FA73C BL 0x33EE7D4
	0x033FA740 MOV W21, W0
	0x033FA744 MOV X0, X19
	0x033FA748 BL 0x33EE7D4
	0x033FA74C MOV W23, W0
	0x033FA750 CBZ X22, 0x33FA760
	0x033FA754 MOV X0, X22
	0x033FA758 BL 0x33EE7D4
	0x033FA75C MOV W22, W0
	0x033FA760 MOV X0, X19
	0x033FA764 BL 0x33EF398
	0x033FA768 MOV W4, W0
	0x033FA76C MOV W0, W20
	0x033FA770 MOV W1, W21
	0x033FA774 MOV W2, W23
	0x033FA778 MOV W3, W22
	0x033FA77C MOV X5, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0xFE4000
	010 Move X25, 0xCFB000
	011 Move W8, [X24+1202]
	012 Move X25, [X25+1976]
	013 Move X20, X5
	014 Move W19, W4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xCFB000
	023 Move X0, [X0+1976]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X24+1202], W8
	027 Move X0, [X25]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move W0, W19
	033 Call Task.InternalCurrentIfAttached, X0
	034 Move X1, X23
	035 Move X2, X22
	036 Move X3, X21
	037 Move X4, X20
	038 Move W5, W19
	039 Move X20, [X31+48]
	040 Move X19, [X31+56]
	041 Move X22, [X31+32]
	042 Move X21, [X31+40]
	043 Move X24, [X31+16]
	044 Move X23, [X31+24]
	045 Move W6, W31
	046 Move X30, [X31+64]
	047 Move X25, [X31+72]
	048 Call Task.InternalStartNew, X0, X1, X2, X3, X4, X5, X6
	049 Return X0

Method: System.Threading.Tasks.Task`1<TResult> StartNew(System.Func`1<TResult> function, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler)

Disassembly:
	0x0229C8B8 MOV W21, W4
	0x0229C8BC MOV W22, W3
	0x0229C8C0 MOV X23, X2
	0x0229C8C4 MOV X24, X1
	0x0229C8C8 MOV X20, X0
	0x0229C8CC CBNZ X8, 0x229C8D8
	0x0229C8D0 MOV X0, X19
	0x0229C8D4 BL 0x1C5C6E0
	0x0229C8D8 TBNZ X21, 0x1F, 0x229C948
	0x0229C8DC CBZ X20, 0x229C968
	0x0229C8E0 LDR X8, [X20]
	0x0229C8E4 MOV X0, X20
	0x0229C8E8 LDP X9, X1, [X8 + 0x1E8]
	0x0229C8EC BLR X9
	0x0229C8F0 TBZ X0, 0x0, 0x229C96C
	0x0229C8F4 CBZ X24, 0x229C988
	0x0229C8F8 CBZ W23, 0x229C988
	0x0229C8FC LDR X8, [X19 + 0x38]
	0x0229C900 MOV X0, X24
	0x0229C904 MOV X1, X23
	0x0229C908 LDR X2, [X8 + 0x20]
	0x0229C90C BL 0x22226D0
	0x0229C910 MOV X1, X31
	0x0229C914 BL 0x33C693C
	0x0229C918 MOV X1, X0
	0x0229C91C MOV X0, X20
	0x0229C920 MOV W2, W22
	0x0229C924 MOV W4, W23
	0x0229C928 MOV W5, W21
	0x0229C92C LDP X20, X19, [X31 + 0x30]
	0x0229C930 LDP X22, X21, [X31 + 0x20]
	0x0229C934 LDP X24, X23, [X31 + 0x10]
	0x0229C938 MOVZ W3, 0x2
	0x0229C93C MOV X6, X31
	0x0229C940 LDR X30, [X31], #0x40
	0x0229C944 B 0x3C1D664
	0x0229C948 ADRP X0, 0x1E80000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X5+56]
	008 Move X22, X5
	009 Move X19, X4
	010 Move W20, W3
	011 Move X21, X2
	012 Move X23, X1
	013 Compare X8, 0
	014 JumpIfNotEqual {23}
	015 Move X0, 0x1E59000
	016 Move X0, [X0+1976]
	017 Call 0x1C17CF4
	018 Move X8, [X22+56]
	019 Compare X8, 0
	020 JumpIfNotEqual {23}
	021 Move X0, X22
	022 Call 0x1C5D6E0
	023 Move X8, 0x1E59000
	024 Move X8, [X8+1976]
	025 Move X0, [X8]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move W0, W20
	031 Move X1, X31
	032 Call Task.InternalCurrentIfAttached, X0
	033 Move X8, [X22+56]
	034 Move X2, X21
	035 Move W3, W20
	036 Move X5, X19
	037 Move X6, [X8+8]
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X1, X23
	043 Move W4, W31
	044 Move X30, [X31+48]
	045 Move X23, [X31+56]
	046 Call Task`1<Object>.StartNew, X0, X1, X2, X3, X4, X5
	047 Return X0

Method: System.Threading.Tasks.Task`1<TResult> StartNew(System.Func`2<System.Object, TResult> function, System.Object state, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x0229C6E4 BLR X8
	0x0229C6E8 MOV W21, W0
	0x0229C6EC MOV X0, X20
	0x0229C6F0 MOV X1, X31
	0x0229C6F4 BL 0x3C1BA44
	0x0229C6F8 SXTW X8, W21
	0x0229C6FC UDIV X21, X0, X8
	0x0229C700 UBFM X8, X21, 0x1F, 0x3F
	0x0229C704 CBNZ X8, 0x229C760
	0x0229C708 MOV X0, X20
	0x0229C70C MOV W1, W31
	0x0229C710 MOV X2, X31
	0x0229C714 BL 0x3C1BA00
	0x0229C718 MOV X1, X31
	0x0229C71C BL 0x33C6948
	0x0229C720 LDR X8, [X19 + 0x38]
	0x0229C724 LDP X20, X19, [X31 + 0x10]
	0x0229C728 MOVZ W2, 0x1
	0x0229C72C MOV W1, W21
	0x0229C730 LDR X3, [X8 + 0x8]
	0x0229C734 LDR X4, [X3]
	0x0229C738 LDP X30, X21, [X31], #0x20
	0x0229C73C BR X4
	0x0229C740 BL 0x1C16F20
	0x0229C744 MOV X0, X20
	0x0229C748 BL 0x19903C0
	0x0229C74C MOV X0, X20
	0x0229C750 MOV X1, X20
	0x0229C754 MOV X2, X31
	0x0229C758 BL 0x3C1B1DC
	0x0229C75C B 0x229C774
	0x0229C760 MOV X0, X20
	0x0229C764 BL 0x19903C0
	0x0229C768 MOV X0, X20
	0x0229C76C MOV X1, X31
	0x0229C770 BL 0x3C1B27C
	0x0229C774 MOV X1, X19
	0x0229C778 BL 0x1C16DEC
	0x0229C77C STR X30, [X31 - 0x40]!
	0x0229C780 STP X24, X23, [X31 + 0x10]
	0x0229C784 STP X22, X21, [X31 + 0x20]
	0x0229C788 STP X20, X19, [X31 + 0x30]
	0x0229C78C LDR X8, [X5 + 0x38]
	0x0229C790 MOV X19, X5
	0x0229C794 MOV W21, W4
	0x0229C798 MOV W22, W3
	0x0229C79C MOV X23, X2
	0x0229C7A0 MOV X24, X1
	0x0229C7A4 MOV X20, X0
	0x0229C7A8 CBNZ X8, 0x229C7B4
	0x0229C7AC MOV X0, X19
	0x0229C7B0 BL 0x1C5C6E0
	0x0229C7B4 TBNZ X21, 0x1F, 0x229C824
	0x0229C7B8 CBZ X20, 0x229C844
	0x0229C7BC LDR X8, [X20]
	0x0229C7C0 MOV X0, X20
	0x0229C7C4 LDP X9, X1, [X8 + 0x1E8]
	0x0229C7C8 BLR X9

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X8, [X4+56]
	010 Move X22, X4
	011 Move X19, X3
	012 Move X20, X2
	013 Move X21, X1
	014 Move X23, X0
	015 Compare X8, 0
	016 JumpIfNotEqual {25}
	017 Move X0, 0x1E59000
	018 Move X0, [X0+1976]
	019 Call 0x1C17CF4
	020 Move X8, [X22+56]
	021 Compare X8, 0
	022 JumpIfNotEqual {25}
	023 Move X0, X22
	024 Call 0x1C5D6E0
	025 Move X24, 0x1E59000
	026 Move X24, [X24+1976]
	027 Move X0, [X24]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X25, 0x213E000
	033 Move W8, [X25+2190]
	034 Compare W8, 0
	035 JumpIfNotEqual {41}
	036 Move X0, 0x1E59000
	037 Move X0, [X0+1976]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X25+2190], W8
	041 Move X0, [X24]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X24]
	047 Call 0x1C17D0C
	048 Move X24, [X0]
	049 Move W25, [X23+32]
	050 Move X0, X23
	051 Move X2, X31
	052 Move X1, X24
	053 Call TaskFactory.GetDefaultScheduler, X0, X1
	054 Move X8, [X22+56]
	055 Move X6, X0
	056 Move X0, X24
	057 Move X1, X21
	058 Move X7, [X8+8]
	059 Move X2, X20
	060 Move X3, X19
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move X22, [X31+32]
	064 Move X21, [X31+40]
	065 Move X24, [X31+16]
	066 Move X23, [X31+24]
	067 Move W4, W25
	068 Move W5, W31
	069 Move X30, [X31+64]
	070 Move X25, [X31+72]
	071 Call Task`1<Object>.StartNew, X0, X1, X2, X3, X4, X5, X6
	072 Return X0

Method: System.Threading.Tasks.Task`1<TResult> StartNew(System.Func`2<System.Object, TResult> function, System.Object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler)

Disassembly:
	0x0229C9E4 MOV W21, W3
	0x0229C9E8 MOV X22, X0
	0x0229C9EC CBNZ X8, 0x229C9F8
	0x0229C9F0 MOV X0, X19
	0x0229C9F4 BL 0x1C5C6E0
	0x0229C9F8 TBNZ X20, 0x1F, 0x229CAE4
	0x0229C9FC CBZ X22, 0x229CB1C
	0x0229CA00 LDR X8, [X22]
	0x0229CA04 MOV X0, X22
	0x0229CA08 LDP X9, X1, [X8 + 0x1E8]
	0x0229CA0C BLR X9
	0x0229CA10 TBZ X0, 0x0, 0x229CB20
	0x0229CA14 LDR X8, [X19 + 0x38]
	0x0229CA18 ADD X0, X31, 0x0
	0x0229CA1C LDR X1, [X8 + 0x8]
	0x0229CA20 LDR X8, [X1]
	0x0229CA24 BLR X8
	0x0229CA28 TBZ X0, 0x0, 0x229CAC4
	0x0229CA2C LDR X8, [X19 + 0x38]
	0x0229CA30 ADD X0, X31, 0x0
	0x0229CA34 LDR X1, [X8 + 0x18]
	0x0229CA38 LDR X8, [X1]
	0x0229CA3C BLR X8
	0x0229CA40 CBZ W0, 0x229CAC4
	0x0229CA44 LDR X8, [X19 + 0x38]
	0x0229CA48 LDP X0, X1, [X31]
	0x0229CA4C LDR X2, [X8 + 0x20]
	0x0229CA50 LDR X8, [X2]
	0x0229CA54 BLR X8
	0x0229CA58 MOV X1, X31
	0x0229CA5C BL 0x33C693C
	0x0229CA60 LDR X8, [X19 + 0x38]
	0x0229CA64 MOV X23, X0
	0x0229CA68 LDR X8, [X8 + 0x28]
	0x0229CA6C LDR X9, [X8]
	0x0229CA70 MOV X0, X8
	0x0229CA74 BLR X9
	0x0229CA78 LDR X8, [X19 + 0x38]
	0x0229CA7C MOV W19, W0
	0x0229CA80 ADD X0, X31, 0x0
	0x0229CA84 LDR X1, [X8 + 0x18]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X6+56]
	009 Move X23, X6
	010 Move X19, X5
	011 Move W20, W4
	012 Move X21, X3
	013 Move X22, X2
	014 Move X24, X1
	015 Compare X8, 0
	016 JumpIfNotEqual {25}
	017 Move X0, 0x1E59000
	018 Move X0, [X0+1976]
	019 Call 0x1C17CF4
	020 Move X8, [X23+56]
	021 Compare X8, 0
	022 JumpIfNotEqual {25}
	023 Move X0, X23
	024 Call 0x1C5D6E0
	025 Move X8, 0x1E59000
	026 Move X8, [X8+1976]
	027 Move X0, [X8]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move W0, W20
	033 Move X1, X31
	034 Call Task.InternalCurrentIfAttached, X0
	035 Move X8, [X23+56]
	036 Move X1, X24
	037 Move X2, X22
	038 Move X3, X21
	039 Move X7, [X8+8]
	040 Move W4, W20
	041 Move X6, X19
	042 Move X20, [X31+48]
	043 Move X19, [X31+56]
	044 Move X22, [X31+32]
	045 Move X21, [X31+40]
	046 Move X24, [X31+16]
	047 Move X23, [X31+24]
	048 Move W5, W31
	049 Move X30, [X31+64]
	050 Call Task`1<Boolean>.StartNew, X0, X1, X2, X3, X4, X5, X6
	051 Return X0

Method: System.Threading.Tasks.Task FromAsync(System.Func`4<TArg1, System.AsyncCallback, System.Object, System.IAsyncResult> beginMethod, System.Action`1<System.IAsyncResult> endMethod, TArg1 arg1, System.Object state)

Disassembly:
	0x0229C078 LDP X20, X19, [X31 + 0x10]
	0x0229C07C LDR X2, [X8 + 0x8]
	0x0229C080 LDR X30, [X31], #0x20
	0x0229C084 B 0x2143F2C
	0x0229C088 BL 0x1C16F20
	0x0229C08C STR X30, [X31 - 0x20]!
	0x0229C090 STP X20, X19, [X31 + 0x10]
	0x0229C094 LDR X8, [X1 + 0x38]
	0x0229C098 MOV X20, X1
	0x0229C09C MOV X19, X0
	0x0229C0A0 CBNZ X8, 0x229C0AC
	0x0229C0A4 MOV X0, X20
	0x0229C0A8 BL 0x1C5C6E0
	0x0229C0AC LDR X8, [X19]
	0x0229C0B0 CBZ X8, 0x229C0E4
	0x0229C0B4 LDR W8, [X8 + 0x18]
	0x0229C0B8 MOV X1, X31
	0x0229C0BC ADD W0, W8, 0x1
	0x0229C0C0 BL 0x3C2B340
	0x0229C0C4 LDR X8, [X20 + 0x38]
	0x0229C0C8 MOV W1, W0
	0x0229C0CC MOV X0, X19
	0x0229C0D0 LDP X20, X19, [X31 + 0x10]
	0x0229C0D4 LDR X2, [X8 + 0x8]
	0x0229C0D8 LDR X3, [X2]
	0x0229C0DC LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X5+56]
	009 Move X19, X4
	010 Move X20, X3
	011 Move X21, X2
	012 Move X22, X1
	013 Move X24, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {20}
	016 Move X0, X5
	017 Move X23, X5
	018 Call 0x1C5D6E0
	019 Move X8, [X23+56]
	020 Move W5, [X24+32]
	021 Move X6, [X8+16]
	022 Move X1, X22
	023 Move X2, X21
	024 Move X3, X20
	025 Move X4, X19
	026 Move X20, [X31+48]
	027 Move X19, [X31+56]
	028 Move X22, [X31+32]
	029 Move X21, [X31+40]
	030 Move X24, [X31+16]
	031 Move X23, [X31+24]
	032 Move X30, [X31+64]
	033 Call 0x229C1E0, X0, X1, X2, X3, X4, X5
	034 Return X0

Method: System.Threading.Tasks.Task FromAsync(System.Func`4<TArg1, System.AsyncCallback, System.Object, System.IAsyncResult> beginMethod, System.Action`1<System.IAsyncResult> endMethod, TArg1 arg1, System.Object state, System.Threading.Tasks.TaskCreationOptions creationOptions)

Disassembly:
	0x0229C1E0 STP X30, X21, [X31 - 0x20]!
	0x0229C1E4 STP X20, X19, [X31 + 0x10]
	0x0229C1E8 LDR X8, [X2 + 0x38]
	0x0229C1EC MOV X19, X2
	0x0229C1F0 MOV W21, W1
	0x0229C1F4 MOV X20, X0
	0x0229C1F8 CBNZ X8, 0x229C204
	0x0229C1FC MOV X0, X19
	0x0229C200 BL 0x1C5C6E0
	0x0229C204 CMP W21, 0x400
	0x0229C208 B.LE 0x229C214
	0x0229C20C ADD W1, W21, 0x100
	0x0229C210 B 0x229C224
	0x0229C214 MOV W0, W21
	0x0229C218 MOV X1, X31
	0x0229C21C BL 0x3C2B340
	0x0229C220 MOV W1, W0
	0x0229C224 LDR X8, [X19 + 0x38]
	0x0229C228 MOV X0, X20
	0x0229C22C LDP X20, X19, [X31 + 0x10]
	0x0229C230 LDR X2, [X8 + 0x8]
	0x0229C234 LDP X30, X21, [X31], #0x20
	0x0229C238 B 0x2144AB0
	0x0229C23C STP X30, X21, [X31 - 0x20]!
	0x0229C240 STP X20, X19, [X31 + 0x10]
	0x0229C244 LDR X8, [X2 + 0x38]
	0x0229C248 MOV X19, X2

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X6+56]
	009 Move W19, W5
	010 Move X20, X4
	011 Move X21, X3
	012 Move X22, X2
	013 Move X23, X1
	014 Compare X8, 0
	015 JumpIfNotEqual {20}
	016 Move X0, X6
	017 Move X24, X6
	018 Call 0x1C5D6E0
	019 Move X8, [X24+56]
	020 Move X6, [X8+16]
	021 Move X0, X23
	022 Move X2, X22
	023 Move X3, X21
	024 Move X4, X20
	025 Move W5, W19
	026 Move X20, [X31+48]
	027 Move X19, [X31+56]
	028 Move X22, [X31+32]
	029 Move X21, [X31+40]
	030 Move X24, [X31+16]
	031 Move X23, [X31+24]
	032 Move X1, X31
	033 Move X30, [X31+64]
	034 Call TaskFactory`1<VoidTaskResult>.FromAsyncImpl, X0, X1, X2, X3, X4, X5
	035 Return X0

Method: System.Threading.Tasks.Task FromAsync(System.Func`5<TArg1, TArg2, System.AsyncCallback, System.Object, System.IAsyncResult> beginMethod, System.Action`1<System.IAsyncResult> endMethod, TArg1 arg1, TArg2 arg2, System.Object state)

Disassembly:
	0x0229C348 LDR X8, [X3 + 0x38]
	0x0229C34C MOV X19, X3
	0x0229C350 MOV W22, W2
	0x0229C354 MOV W20, W1
	0x0229C358 MOV X21, X0
	0x0229C35C CBZ X8, 0x229C368
	0x0229C360 TBNZ X22, 0x0, 0x229C374
	0x0229C364 B 0x229C394
	0x0229C368 MOV X0, X19
	0x0229C36C BL 0x1C5C6E0
	0x0229C370 TBZ X22, 0x0, 0x229C394
	0x0229C374 CMP W20, 0x400
	0x0229C378 B.LE 0x229C384
	0x0229C37C ADD W20, W20, 0x100
	0x0229C380 B 0x229C394
	0x0229C384 MOV W0, W20
	0x0229C388 MOV X1, X31
	0x0229C38C BL 0x3C2B340
	0x0229C390 MOV W20, W0
	0x0229C394 LDR X8, [X21]
	0x0229C398 CBZ X8, 0x229C3D8
	0x0229C39C LDR W8, [X8 + 0x18]
	0x0229C3A0 CMP W20, W8
	0x0229C3A4 B.NE 0x229C3B8
	0x0229C3A8 LDP X20, X19, [X31 + 0x20]
	0x0229C3AC LDP X22, X21, [X31 + 0x10]
	0x0229C3B0 LDR X30, [X31], #0x30
	0x0229C3B4 RET

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X8, [X6+56]
	010 Move X19, X5
	011 Move W20, W4
	012 Move X21, X3
	013 Move X22, X2
	014 Move X23, X1
	015 Move X25, X0
	016 Compare X8, 0
	017 JumpIfNotEqual {22}
	018 Move X0, X6
	019 Move X24, X6
	020 Call 0x1C5D6E0
	021 Move X8, [X24+56]
	022 Move W6, [X25+32]
	023 Move X7, [X8+24]
	024 Move X1, X23
	025 Move X2, X22
	026 Move X3, X21
	027 Move W4, W20
	028 Move X5, X19
	029 Move X20, [X31+48]
	030 Move X19, [X31+56]
	031 Move X22, [X31+32]
	032 Move X21, [X31+40]
	033 Move X24, [X31+16]
	034 Move X23, [X31+24]
	035 Move X30, [X31+64]
	036 Move X25, [X31+72]
	037 Call 0x229C514, X0, X1, X2, X3, X4, X5, X6
	038 Return X0

Method: System.Threading.Tasks.Task FromAsync(System.Func`5<TArg1, TArg2, System.AsyncCallback, System.Object, System.IAsyncResult> beginMethod, System.Action`1<System.IAsyncResult> endMethod, TArg1 arg1, TArg2 arg2, System.Object state, System.Threading.Tasks.TaskCreationOptions creationOptions)

Disassembly:
	0x0229C514 LDR X30, [X31], #0x30
	0x0229C518 BR X3
	0x0229C51C BL 0x1C16F20
	0x0229C520 STP X30, X21, [X31 - 0x20]!
	0x0229C524 STP X20, X19, [X31 + 0x10]
	0x0229C528 LDR X8, [X1 + 0x38]
	0x0229C52C MOV X19, X1
	0x0229C530 MOV X20, X0
	0x0229C534 CBNZ X8, 0x229C540
	0x0229C538 MOV X0, X19
	0x0229C53C BL 0x1C5C6E0
	0x0229C540 CBZ X20, 0x229C5A4
	0x0229C544 LDR X8, [X20]
	0x0229C548 MOV X0, X20
	0x0229C54C LDP X9, X1, [X8 + 0x1E8]
	0x0229C550 BLR X9
	0x0229C554 TBZ X0, 0x0, 0x229C5A8
	0x0229C558 MOV X0, X20
	0x0229C55C MOV X1, X31
	0x0229C560 BL 0x3C1BA44
	0x0229C564 UBFM X8, X0, 0x23, 0x3F
	0x0229C568 CBNZ X8, 0x229C5C4
	0x0229C56C UBFM X21, X0, 0x4, 0x3F
	0x0229C570 MOV X0, X20
	0x0229C574 MOV W1, W31
	0x0229C578 MOV X2, X31
	0x0229C57C BL 0x3C1BA00
	0x0229C580 MOV X1, X31
	0x0229C584 BL 0x33C6948

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X8, [X7+56]
	010 Move W19, W6
	011 Move X20, X5
	012 Move W21, W4
	013 Move X22, X3
	014 Move X23, X2
	015 Move X25, X1
	016 Compare X8, 0
	017 JumpIfNotEqual {22}
	018 Move X0, X7
	019 Move X24, X7
	020 Call 0x1C5D6E0
	021 Move X8, [X24+56]
	022 Move X7, [X8+24]
	023 Move X2, X23
	024 Move X3, X22
	025 Move W4, W21
	026 Move X5, X20
	027 Move W6, W19
	028 Move X20, [X31+48]
	029 Move X19, [X31+56]
	030 Move X22, [X31+32]
	031 Move X21, [X31+40]
	032 Move X24, [X31+16]
	033 Move X23, [X31+24]
	034 Move X0, X25
	035 Move X1, X31
	036 Move X30, [X31+64]
	037 Move X25, [X31+72]
	038 Call 0x2137E8C, X0, X1, X2, X3, X4, X5, X6
	039 Return X0

Method: System.Void CheckFromAsyncOptions(System.Threading.Tasks.TaskCreationOptions creationOptions, System.Boolean hasBeginMethod)

Disassembly:
	0x033FA780 BL 0x32251E8
	0x033FA784 B 0x33FA78C
	0x033FA788 CBZ X19, 0x33FA838
	0x033FA78C MOV X0, X19
	0x033FA790 BL 0x33EF398
	0x033FA794 TBNZ X0, 0x1, 0x33FA7B8
	0x033FA798 MOV X0, X19
	0x033FA79C BL 0x33EF398
	0x033FA7A0 AND W1, W0, 0x1
	0x033FA7A4 MOV X0, X19
	0x033FA7A8 LDP X20, X19, [X31 + 0x20]
	0x033FA7AC LDP X22, X21, [X31 + 0x10]
	0x033FA7B0 LDP X30, X23, [X31], #0x30
	0x033FA7B4 B 0x33E9E8C
	0x033FA7B8 ADRP X20, 0xD33000
	0x033FA7BC LDR X20, [X20 + 0xB00]
	0x033FA7C0 LDR X0, [X20]
	0x033FA7C4 LDR W8, [X0 + 0xE0]
	0x033FA7C8 CBNZ W8, 0x33FA7D4
	0x033FA7CC BL 0x1C16DFC
	0x033FA7D0 LDR X0, [X20]
	0x033FA7D4 ADRP X8, 0xD22000
	0x033FA7D8 LDR X8, [X8 + 0xE48]
	0x033FA7DC LDR X9, [X0 + 0xB8]
	0x033FA7E0 LDR X8, [X8]
	0x033FA7E4 LDR X20, [X9]
	0x033FA7E8 LDR W10, [X8 + 0xE0]
	0x033FA7EC CBNZ W10, 0x33FA7F8
	0x033FA7F0 MOV X0, X8
	0x033FA7F4 BL 0x1C16DFC
	0x033FA7F8 MOV X0, X20
	0x033FA7FC MOV W1, W31
	0x033FA800 MOV X2, X31
	0x033FA804 BL 0x32253F4
	0x033FA808 CBZ X0, 0x33FA838
	0x033FA80C MOVZ W1, 0x1
	0x033FA810 MOV X2, X31
	0x033FA814 MOV X20, X0
	0x033FA818 BL 0x322548C
	0x033FA81C MOV X0, X20
	0x033FA820 MOV X1, X19
	0x033FA824 LDP X20, X19, [X31 + 0x20]
	0x033FA828 LDP X22, X21, [X31 + 0x10]
	0x033FA82C MOV X2, X31
	0x033FA830 LDP X30, X23, [X31], #0x30
	0x033FA834 B 0x32254AC
	0x033FA838 BL 0x1C16F20
	0x033FA83C STR X30, [X31 - 0x30]!
	0x033FA840 STP X22, X21, [X31 + 0x10]
	0x033FA844 STP X20, X19, [X31 + 0x20]
	0x033FA848 MOV W20, W2
	0x033FA84C MOV X21, X1
	0x033FA850 MOV X19, X0
	0x033FA854 TBZ X2, 0x0, 0x33FA864
	0x033FA858 MOV X0, X21
	0x033FA85C BL 0x33E9F08
	0x033FA860 TBZ X0, 0x0, 0x33FA89C
	0x033FA864 CBZ X21, 0x33FA8B4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move TEMP, X1
	005 And TEMP, TEMP, 1
	006 Compare TEMP, 1
	007 JumpIfNotEqual {16}
	008 Move TEMP, X0
	009 And TEMP, TEMP, 2
	010 Compare TEMP, 2
	011 JumpIfEqual {33}
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {44}
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Return 
	021 Move X0, 0xD02000
	022 Move X0, [X0+1888]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X19, X0
	026 Move X0, 0xD34000
	027 Move X0, [X0+1688]
	028 Call 0x1C17D08
	029 Move X1, X0
	030 Move X0, X19
	031 Move X2, X31
	032 Call ArgumentOutOfRangeException..ctor, X0, X1
	033 Move X0, 0xD02000
	034 Move X0, [X0+1888]
	035 Call 0x1C17D08
	036 Call 0x1C17F10
	037 Move X19, X0
	038 Move X0, 0xD34000
	039 Move X0, [X0+1688]
	040 Call 0x1C17D08
	041 Move X20, X0
	042 Move X0, 0xD34000
	043 Move X0, [X0+2688]
	044 Move X0, 0xD02000
	045 Move X0, [X0+1888]
	046 Call 0x1C17D08
	047 Call 0x1C17F10
	048 Move X19, X0
	049 Move X0, 0xD34000
	050 Move X0, [X0+1688]
	051 Call 0x1C17D08
	052 Move X20, X0
	053 Move X0, 0xD34000
	054 Move X0, [X0+2696]
	055 Call 0x1C17D08
	056 Move X2, X0
	057 Move X0, X19
	058 Move X1, X20
	059 Move X3, X31
	060 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	061 Move X0, 0xD34000
	062 Move X0, [X0+2704]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X19
	066 Call 0x1C17DEC

Method: System.Threading.Tasks.Task`1<System.Threading.Tasks.Task[]> CommonCWAllLogic(System.Threading.Tasks.Task[] tasksCopy)

Disassembly:
	0x033FA868 MOV X0, X21
	0x033FA86C MOV W1, W31
	0x033FA870 BL 0x33F269C
	0x033FA874 MOV W22, W0
	0x033FA878 MOV X21, X31
	0x033FA87C TBZ X20, 0x0, 0x33FA890
	0x033FA880 LDR X8, [X19]
	0x033FA884 MOV X0, X19
	0x033FA888 LDP X9, X1, [X8 + 0x1A8]
	0x033FA88C BLR X9
	0x033FA890 CBZ X21, 0x33FA8A0
	0x033FA894 MOV X0, X21
	0x033FA898 BL 0x1C16F18
	0x033FA89C MOV W22, W31
	0x033FA8A0 AND W0, W22, 0x1
	0x033FA8A4 LDP X20, X19, [X31 + 0x20]
	0x033FA8A8 LDP X22, X21, [X31 + 0x10]
	0x033FA8AC LDR X30, [X31], #0x30
	0x033FA8B0 RET
	0x033FA8B4 BL 0x1C16F20
	0x033FA8B8 B 0x33FA8BC
	0x033FA8BC MOV X22, X0
	0x033FA8C0 CMP W1, 0x1
	0x033FA8C4 B.NE 0x33FA8E4
	0x033FA8C8 MOV X0, X22
	0x033FA8CC BL 0x3EB1AD0
	0x033FA8D0 LDR X21, [X0]
	0x033FA8D4 BL 0x3EB1AE0
	0x033FA8D8 MOV W22, W31
	0x033FA8DC TBNZ X20, 0x0, 0x33FA880
	0x033FA8E0 B 0x33FA890
	0x033FA8E4 MOV X21, X31
	0x033FA8E8 B 0x33FA8F0
	0x033FA8EC MOV X22, X0
	0x033FA8F0 TBZ X20, 0x0, 0x33FA904
	0x033FA8F4 LDR X8, [X19]
	0x033FA8F8 LDP X9, X1, [X8 + 0x1A8]
	0x033FA8FC MOV X0, X19
	0x033FA900 BLR X9
	0x033FA904 CBNZ X21, 0x33FA910
	0x033FA908 MOV X0, X22
	0x033FA90C BL 0x1D2C690
	0x033FA910 MOV X0, X21
	0x033FA914 BL 0x1C16F18
	0x033FA918 BL 0x1990590
	0x033FA91C MOV X0, X1
	0x033FA920 B 0x33E9F08
	0x033FA924 STR X30, [X31 - 0x10]!
	0x033FA928 BL 0x33E9DF8
	0x033FA92C LDR X30, [X31], #0x10
	0x033FA930 B 0x1C96780
	0x033FA934 MOV W0, W31
	0x033FA938 RET
	0x033FA93C STR X30, [X31 - 0x30]!
	0x033FA940 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xFE4000
	007 Move X21, 0xD34000
	008 Move W8, [X20+1203]
	009 Move X21, [X21+2712]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD34000
	016 Move X0, [X0+2712]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1203], W8
	020 Move X0, [X21]
	021 Call 0x1C17F10
	022 Move X1, X19
	023 Move X20, X0
	024 Call CompleteOnCountdownPromise..ctor, X0, X1
	025 Compare X19, 0
	026 JumpIfEqual {65}
	027 Move W8, [X19+24]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move W21, W31
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Add X22, X19, W21
	032 Add X22, X22, 32
	033 Move X0, [X22]
	034 Compare X0, 0
	035 JumpIfEqual {65}
	036 Call Task.get_IsCompleted, X0
	037 Move W8, [X19+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X1, [X22]
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {48}
	044 Compare X20, 0
	045 JumpIfEqual {65}
	046 Move X0, X20
	047 Call CompleteOnCountdownPromise.Invoke, X0, X1
	048 Compare X1, 0
	049 JumpIfEqual {65}
	050 Move X0, X1
	051 Move X1, X20
	052 Move W2, W31
	053 Call Task.AddCompletionAction, X0, X1, X2
	054 Move W8, [X19+24]
	055 Add W21, W21, 1
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, X20
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X30, [X31+48]
	063 Return X0
	064 Call 0x1C17F28
	065 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<TResult> ContinueWhenAll(System.Threading.Tasks.Task[] tasks, System.Func`2<System.Threading.Tasks.Task[], TResult> continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler)

Disassembly:
	0x0229BF24 MOV X0, X20
	0x0229BF28 MOV X1, X31
	0x0229BF2C BL 0x3C37D1C
	0x0229BF30 LDR X8, [X19 + 0x38]
	0x0229BF34 MOV X22, X0
	0x0229BF38 LDR X8, [X8]
	0x0229BF3C LDR X9, [X8]
	0x0229BF40 MOV X0, X8
	0x0229BF44 BLR X9
	0x0229BF48 SXTW X8, W0
	0x0229BF4C SDIV X21, X22, X8
	0x0229BF50 MSUB X9, X21, X8, X22
	0x0229BF54 CBNZ X9, 0x229BF94
	0x0229BF58 MOV X0, X20
	0x0229BF5C MOV X1, X31
	0x0229BF60 BL 0x3C37CE0
	0x0229BF64 MOV X1, X31
	0x0229BF68 BL 0x33C6948
	0x0229BF6C LDR X8, [X19 + 0x38]
	0x0229BF70 MOV W1, W21
	0x0229BF74 LDP X20, X19, [X31 + 0x30]
	0x0229BF78 LDP X22, X21, [X31 + 0x20]
	0x0229BF7C LDR X3, [X8 + 0x8]
	0x0229BF80 LDR X30, [X31 + 0x10]
	0x0229BF84 MOVZ W2, 0x1
	0x0229BF88 LDR X4, [X3]
	0x0229BF8C ADD X31, X31, 0x40
	0x0229BF90 BR X4
	0x0229BF94 STR X22, [X31 + 0x18]
	0x0229BF98 ADRP X20, 0x1E5A000
	0x0229BF9C LDR X20, [X20 + 0xA60]
	0x0229BFA0 MOV X22, X8
	0x0229BFA4 MOV X0, X20
	0x0229BFA8 BL 0x1C16D08
	0x0229BFAC ADD X1, X31, 0x18
	0x0229BFB0 BL 0x1C16E04
	0x0229BFB4 MOV X21, X0
	0x0229BFB8 MOV X0, X20
	0x0229BFBC STR X22, [X31 + 0x8]
	0x0229BFC0 BL 0x1C16D08
	0x0229BFC4 ADD X1, X31, 0x8
	0x0229BFC8 BL 0x1C16E04

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X6+56]
	009 Move X19, X6
	010 Move X20, X5
	011 Move W22, W4
	012 Move X21, X3
	013 Move X23, X2
	014 Move X24, X1
	015 Compare X8, 0
	016 JumpIfNotEqual {19}
	017 Move X0, X19
	018 Call 0x1C5D6E0
	019 Compare X23, 0
	020 JumpIfEqual {37}
	021 Move X8, [X19+56]
	022 Move X0, X24
	023 Move X1, X23
	024 Move W2, W22
	025 Move X5, [X8+8]
	026 Move X3, X21
	027 Move X4, X20
	028 Move X20, [X31+48]
	029 Move X19, [X31+56]
	030 Move X22, [X31+32]
	031 Move X21, [X31+40]
	032 Move X24, [X31+16]
	033 Move X23, [X31+24]
	034 Move X30, [X31+64]
	035 Call TaskFactory`1<Object>.ContinueWhenAllImpl, X0, X1, X2, X3, X4
	036 Return X0
	037 Move X0, 0x1E5E000
	038 Move X0, [X0+1320]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X20, X0
	042 Move X0, 0x1E81000
	043 Move X0, [X0+1872]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X20
	047 Move X2, X31
	048 Call ArgumentNullException..ctor, X0, X1
	049 Move X0, X20
	050 Move X1, X19
	051 Call 0x1C17DEC

Method: System.Threading.Tasks.Task`1<System.Threading.Tasks.Task> CommonCWAnyLogic(System.Collections.Generic.IList`1<System.Threading.Tasks.Task> tasks)

Disassembly:
	0x033F7320 ADRP X20, 0xFE2000
	0x033F7324 LDRB W8, [X20 + 0x829]
	0x033F7328 CBNZ W8, 0x33F734C
	0x033F732C ADRP X0, 0xD24000
	0x033F7330 LDR X0, [X0 + 0x728]
	0x033F7334 BL 0x1C16CF4
	0x033F7338 ADRP X0, 0xCFD000
	0x033F733C LDR X0, [X0 + 0x7B8]
	0x033F7340 BL 0x1C16CF4
	0x033F7344 MOVZ W8, 0x1
	0x033F7348 STRB W8, [X20 + 0x829]
	0x033F734C ADRP X20, 0xCFD000
	0x033F7350 LDR X20, [X20 + 0x7B8]
	0x033F7354 LDR X0, [X20]
	0x033F7358 LDR W8, [X0 + 0xE0]
	0x033F735C CBNZ W8, 0x33F7368
	0x033F7360 BL 0x1C16DFC
	0x033F7364 LDR X0, [X20]
	0x033F7368 LDR X8, [X0 + 0xB8]
	0x033F736C LDRB W8, [X8 + 0x10]
	0x033F7370 CBZ W8, 0x33F738C
	0x033F7374 LDR X0, [X23]
	0x033F7378 LDR W8, [X0 + 0xE0]
	0x033F737C CBNZ W8, 0x33F7384
	0x033F7380 BL 0x1C16DFC
	0x033F7384 MOV X0, X19
	0x033F7388 BL 0x33EE8F8
	0x033F738C ADRP X8, 0xD36000
	0x033F7390 LDR X8, [X8 + 0x668]
	0x033F7394 MOV X0, X19
	0x033F7398 LDP X20, X19, [X31 + 0x50]
	0x033F739C LDP X22, X21, [X31 + 0x40]
	0x033F73A0 LDR X2, [X8]
	0x033F73A4 LDP X24, X23, [X31 + 0x30]
	0x033F73A8 LDP X26, X25, [X31 + 0x20]
	0x033F73AC LDP X28, X27, [X31 + 0x10]
	0x033F73B0 MOV X1, X31
	0x033F73B4 LDP X29, X30, [X31], #0x60
	0x033F73B8 B 0x26A438C
	0x033F73BC BL 0x1C16F28
	0x033F73C0 STR X30, [X31 - 0x20]!
	0x033F73C4 STP X20, X19, [X31 + 0x10]
	0x033F73C8 ADRP X20, 0xFE6000
	0x033F73CC LDRB W8, [X20 + 0x48C]
	0x033F73D0 MOV X19, X0
	0x033F73D4 TBNZ X8, 0x0, 0x33F73EC
	0x033F73D8 ADRP X0, 0xCFD000
	0x033F73DC LDR X0, [X0 + 0x7B8]
	0x033F73E0 BL 0x1C16CF4
	0x033F73E4 MOVZ W8, 0x1
	0x033F73E8 STRB W8, [X20 + 0x48C]
	0x033F73EC LDR W20, [X19 + 0x38]
	0x033F73F0 BL 0x1C16D44
	0x033F73F4 TBNZ X20, 0x1C, 0x33F7408
	0x033F73F8 LDP X20, X19, [X31 + 0x10]
	0x033F73FC MOV W0, W31
	0x033F7400 LDR X30, [X31], #0x20
	0x033F7404 RET
	0x033F7408 ADRP X8, 0xCFD000
	0x033F740C LDR X8, [X8 + 0x7B8]
	0x033F7410 LDR X19, [X19 + 0x58]
	0x033F7414 LDR X0, [X8]
	0x033F7418 LDR W8, [X0 + 0xE0]
	0x033F741C CBNZ W8, 0x33F7424
	0x033F7420 BL 0x1C16DFC
	0x033F7424 MOV X0, X19
	0x033F7428 LDP X20, X19, [X31 + 0x10]
	0x033F742C LDR X30, [X31], #0x20
	0x033F7430 B 0x33EFF34
	0x033F7434 MOVZ W0, 0x1
	0x033F7438 RET
	0x033F743C STR X30, [X31 - 0x20]!
	0x033F7440 STP X20, X19, [X31 + 0x10]
	0x033F7444 ADRP X19, 0xFE6000
	0x033F7448 ADRP X20, 0xD36000
	0x033F744C LDRB W8, [X19 + 0x48D]
	0x033F7450 LDR X20, [X20 + 0x8E0]
	0x033F7454 TBNZ X8, 0x0, 0x33F746C
	0x033F7458 ADRP X0, 0xD36000
	0x033F745C LDR X0, [X0 + 0x8E0]
	0x033F7460 BL 0x1C16CF4
	0x033F7464 MOVZ W8, 0x1
	0x033F7468 STRB W8, [X19 + 0x48D]
	0x033F746C LDR X0, [X20]
	0x033F7470 BL 0x1C16F10
	0x033F7474 MOV X1, X31
	0x033F7478 MOV X19, X0
	0x033F747C BL 0x33BDD8C
	0x033F7480 LDR X8, [X20]
	0x033F7484 LDR X8, [X8 + 0xB8]
	0x033F7488 STR X19, [X8]
	0x033F748C LDP X20, X19, [X31 + 0x10]
	0x033F7490 LDR X30, [X31], #0x20
	0x033F7494 RET
	0x033F7498 MOV X1, X31
	0x033F749C B 0x33BDD8C
	0x033F74A0 STR X30, [X31 - 0x20]!
	0x033F74A4 STP X20, X19, [X31 + 0x10]
	0x033F74A8 ADRP X20, 0xFE6000
	0x033F74AC LDRB W8, [X20 + 0x48E]
	0x033F74B0 MOV X19, X1
	0x033F74B4 TBNZ X8, 0x0, 0x33F74CC
	0x033F74B8 ADRP X0, 0xD36000
	0x033F74BC LDR X0, [X0 + 0x8C8]
	0x033F74C0 BL 0x1C16CF4
	0x033F74C4 MOVZ W8, 0x1
	0x033F74C8 STRB W8, [X20 + 0x48E]
	0x033F74CC CBZ X19, 0x33F74F8
	0x033F74D0 ADRP X8, 0xD36000
	0x033F74D4 LDR X8, [X8 + 0x8C8]
	0x033F74D8 MOV X0, X19
	0x033F74DC LDR X1, [X8]
	0x033F74E0 LDR X8, [X19]
	0x033F74E4 CMP X8, X1
	0x033F74E8 B.NE 0x33F74FC
	0x033F74EC LDP X20, X19, [X31 + 0x10]
	0x033F74F0 LDR X30, [X31], #0x20
	0x033F74F4 B 0x33F6F90
	0x033F74F8 BL 0x1C16F20
	0x033F74FC BL 0x1C171E0
	0x033F7500 STR X30, [X31 - 0x20]!
	0x033F7504 STP X20, X19, [X31 + 0x10]
	0x033F7508 ADRP X20, 0xFE6000
	0x033F750C LDRB W8, [X20 + 0x48F]
	0x033F7510 MOV X19, X1
	0x033F7514 TBNZ X8, 0x0, 0x33F752C
	0x033F7518 ADRP X0, 0xD36000
	0x033F751C LDR X0, [X0 + 0x8C8]
	0x033F7520 BL 0x1C16CF4
	0x033F7524 MOVZ W8, 0x1
	0x033F7528 STRB W8, [X20 + 0x48F]
	0x033F752C CBZ X19, 0x33F7558
	0x033F7530 ADRP X8, 0xD36000
	0x033F7534 LDR X8, [X8 + 0x8C8]
	0x033F7538 MOV X0, X19
	0x033F753C LDR X1, [X8]
	0x033F7540 LDR X8, [X19]
	0x033F7544 CMP X8, X1
	0x033F7548 B.NE 0x33F755C
	0x033F754C LDP X20, X19, [X31 + 0x10]
	0x033F7550 LDR X30, [X31], #0x20
	0x033F7554 B 0x33F6F90

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0xFE7000
	010 Move X21, 0xD37000
	011 Move W8, [X20+1204]
	012 Move X21, [X21+2376]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xD37000
	019 Move X0, [X0+2376]
	020 Call 0x1C17CF4
	021 Move X0, 0xD37000
	022 Move X0, [X0+2304]
	023 Call 0x1C17CF4
	024 Move X0, 0xD37000
	025 Move X0, [X0+2384]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+1204], W8
	029 Move X0, [X21]
	030 Call 0x1C17F10
	031 Move X1, X19
	032 Move X20, X0
	033 Call CompleteOnInvokePromise..ctor, X0, X1
	034 Compare X19, 0
	035 JumpIfEqual {162}
	036 Move X10, 0xD37000
	037 Move X8, [X19]
	038 Move X10, [X10+2304]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X1, [X10]
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move X0, X19
	050 Move W2, W31
	051 Call 0x1C5D788
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Add X8, X8, X9
	054 Add X0, X8, 312
	055 Move X8, [X0]
	056 Move X1, [X0+8]
	057 Move X0, X19
	058 NotImplemented "Instruction BLR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X24, 0xD37000
	061 Move X24, [X24+2384]
	062 Move W21, W0
	063 Move W25, W31
	064 Move W22, W31
	065 Move X8, [X19]
	066 Move X1, [X24]
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move X0, X19
	077 Move W2, W31
	078 Call 0x1C5D788
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Add X8, X8, X9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X2, [X0+8]
	084 Move X0, X19
	085 Move W1, W22
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Compare X0, 0
	088 JumpIfEqual {139}
	089 Move TEMP, X25
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {111}
	093 Compare X20, 0
	094 JumpIfEqual {162}
	095 Move X23, X0
	096 Move X0, X20
	097 Call Task.get_IsCompleted, X0
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {111}
	102 Move X0, X23
	103 Call Task.get_IsCompleted, X0
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {114}
	108 Move X0, X20
	109 Move X1, X23
	110 Call CompleteOnInvokePromise.Invoke, X0, X1
	111 Move W25, 1
	112 Add W22, W22, 1
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X0, X23
	115 Move X1, X20
	116 Move W2, W31
	117 Call Task.AddCompletionAction, X0, X1, X2
	118 Move X0, X20
	119 Call Task.get_IsCompleted, X0
	120 Move W25, W31
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {112}
	125 Move X0, X23
	126 Move X1, X20
	127 Call Task.RemoveContinuation, X0, X1
	128 Move W25, W31
	129 Move X0, X20
	130 Move X20, [X31+48]
	131 Move X19, [X31+56]
	132 Move X22, [X31+32]
	133 Move X21, [X31+40]
	134 Move X24, [X31+16]
	135 Move X23, [X31+24]
	136 Move X30, [X31+64]
	137 Move X25, [X31+72]
	138 Return X0
	139 Move X0, 0xD05000
	140 Move X0, [X0+1400]
	141 Call 0x1C17D08
	142 Call 0x1C17F10
	143 Move X19, X0
	144 Move X0, 0xD37000
	145 Move X0, [X0+2320]
	146 Call 0x1C17D08
	147 Move X20, X0
	148 Move X0, 0xD27000
	149 Move X0, [X0+1560]
	150 Call 0x1C17D08
	151 Move X2, X0
	152 Move X0, X19
	153 Move X1, X20
	154 Move X3, X31
	155 Call ArgumentException..ctor, X0, X1, X2
	156 Move X0, 0xD37000
	157 Move X0, [X0+2392]
	158 Call 0x1C17D08
	159 Move X1, X0
	160 Move X0, X19
	161 Call 0x1C17DEC
	162 Call 0x1C17F20

Method: System.Threading.Tasks.Task[] CheckMultiContinuationTasksAndCopy(System.Threading.Tasks.Task[] tasks)

Disassembly:
	0x033FAEEC BL 0x1C16D08
	0x033FAEF0 MOV X2, X0
	0x033FAEF4 MOV X0, X19
	0x033FAEF8 MOV X1, X20
	0x033FAEFC MOV X3, X31
	0x033FAF00 BL 0x3311888
	0x033FAF04 ADRP X0, 0xD33000
	0x033FAF08 LDR X0, [X0 + 0xB40]
	0x033FAF0C BL 0x1C16D08
	0x033FAF10 MOV X1, X0
	0x033FAF14 MOV X0, X19
	0x033FAF18 BL 0x1C16DEC
	0x033FAF1C STP X30, X27, [X31 - 0x50]!
	0x033FAF20 STP X26, X25, [X31 + 0x10]
	0x033FAF24 STP X24, X23, [X31 + 0x20]
	0x033FAF28 STP X22, X21, [X31 + 0x30]
	0x033FAF2C STP X20, X19, [X31 + 0x40]
	0x033FAF30 ADRP X25, 0xFE3000
	0x033FAF34 LDRB W8, [X25 + 0x4CE]
	0x033FAF38 MOV W19, W5
	0x033FAF3C MOV X24, X4
	0x033FAF40 MOV W20, W3
	0x033FAF44 MOV W21, W2
	0x033FAF48 MOV X22, X1
	0x033FAF4C MOV X23, X0
	0x033FAF50 TBNZ X8, 0x0, 0x33FAF74
	0x033FAF54 ADRP X0, 0xD27000
	0x033FAF58 LDR X0, [X0 + 0x830]
	0x033FAF5C BL 0x1C16CF4
	0x033FAF60 ADRP X0, 0xD28000
	0x033FAF64 LDR X0, [X0 + 0x2F8]
	0x033FAF68 BL 0x1C16CF4
	0x033FAF6C MOVZ W8, 0x1
	0x033FAF70 STRB W8, [X25 + 0x4CE]
	0x033FAF74 CBZ X22, 0x33FB044
	0x033FAF78 CBZ X24, 0x33FB044
	0x033FAF7C TBNZ X20, 0x1F, 0x33FB09C
	0x033FAF80 TBNZ X21, 0x1F, 0x33FB09C
	0x033FAF84 LDR W8, [X22 + 0x10]
	0x033FAF88 SUB W8, W8, W21
	0x033FAF8C CMP W8, W20
	0x033FAF90 B.LT 0x33FB108
	0x033FAF94 TBNZ X19, 0x1F, 0x33FB014
	0x033FAF98 LDR W8, [X24 + 0x18]
	0x033FAF9C SUBS W25, W8, W19
	0x033FAFA0 B.LT 0x33FB014
	0x033FAFA4 ADRP X26, 0xD28000
	0x033FAFA8 ADRP X27, 0xD27000
	0x033FAFAC LDR X26, [X26 + 0x2F8]
	0x033FAFB0 LDR X27, [X27 + 0x830]
	0x033FAFB4 MOV X0, X31
	0x033FAFB8 BL 0x32C1424
	0x033FAFBC LDR X1, [X26]
	0x033FAFC0 MOV W26, W0
	0x033FAFC4 MOV X0, X24
	0x033FAFC8 BL 0x25FB4C0
	0x033FAFCC LDR X2, [X27]
	0x033FAFD0 BL 0x2218CF4
	0x033FAFD4 LDR X8, [X23]
	0x033FAFD8 ADD X3, X0, W19, UXTW
	0x033FAFDC MOV X0, X23
	0x033FAFE0 MOV W2, W20
	0x033FAFE4 LDR X7, [X8 + 0x288]
	0x033FAFE8 LDR X6, [X8 + 0x290]
	0x033FAFEC ADD X8, X22, W21, 0x1, SXTW
	0x033FAFF0 ADD X1, X8, W26, SXTW
	0x033FAFF4 MOV W4, W25
	0x033FAFF8 LDP X20, X19, [X31 + 0x40]
	0x033FAFFC LDP X22, X21, [X31 + 0x30]
	0x033FB000 LDP X24, X23, [X31 + 0x20]
	0x033FB004 LDP X26, X25, [X31 + 0x10]
	0x033FB008 MOV X5, X31
	0x033FB00C LDP X30, X27, [X31], #0x50
	0x033FB010 BR X7
	0x033FB014 ADRP X0, 0xD00000
	0x033FB018 LDR X0, [X0 + 0x760]
	0x033FB01C BL 0x1C16D08
	0x033FB020 BL 0x1C16F10
	0x033FB024 MOV X19, X0
	0x033FB028 ADRP X0, 0xD27000
	0x033FB02C LDR X0, [X0 + 0x300]
	0x033FB030 BL 0x1C16D08
	0x033FB034 MOV X20, X0
	0x033FB038 ADRP X0, 0xD20000
	0x033FB03C LDR X0, [X0 + 0x660]
	0x033FB040 B 0x33FB134
	0x033FB044 ADRP X8, 0xD27000
	0x033FB048 ADRP X9, 0xD27000
	0x033FB04C LDR X8, [X8 + 0x308]
	0x033FB050 LDR X9, [X9 + 0x2D8]
	0x033FB054 CMP X22, 0x0
	0x033FB058 CSEL X0, X9, X8, EQ
	0x033FB05C BL 0x1C16D08
	0x033FB060 MOV X19, X0
	0x033FB064 ADRP X0, 0xCFD000
	0x033FB068 LDR X0, [X0 + 0x528]
	0x033FB06C BL 0x1C16D08
	0x033FB070 BL 0x1C16F10
	0x033FB074 MOV X20, X0
	0x033FB078 ADRP X0, 0xD27000
	0x033FB07C LDR X0, [X0 + 0x2E0]
	0x033FB080 BL 0x1C16D08
	0x033FB084 MOV X2, X0
	0x033FB088 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xFE4000
	007 Move W8, [X20+1205]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD03000
	014 Move X0, [X0+3104]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+1205], W8
	018 Compare X19, 0
	019 JumpIfEqual {91}
	020 Move X1, [X19+24]
	021 Compare X1, 0
	022 JumpIfEqual {103}
	023 Move X8, 0xD03000
	024 Move X8, [X8+3104]
	025 Move X0, [X8]
	026 Call 0x1C17D6C
	027 Move W8, [X19+24]
	028 Move X20, X0
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W9, W31
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Compare X20, 0
	033 JumpIfEqual {59}
	034 Move X22, W9
	035 Add X8, X19, X22
	036 Move X21, [X8+32]
	037 Compare X21, 0
	038 JumpIfEqual {60}
	039 Move X8, [X20]
	040 Move X0, X21
	041 Move X1, [X8+64]
	042 Call 0x1C17E00
	043 Compare X0, 0
	044 JumpIfEqual {88}
	045 Move W8, [X20+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Add X8, X20, X22
	048 Move [X8+32], X21
	049 Move W8, [X19+24]
	050 Add W9, W22, 1
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, X20
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 Return X0
	059 Call 0x1C17F20
	060 Move W8, [X20+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Add X8, X20, X22
	063 Move [X8+32], X21
	064 Move X0, 0xD02000
	065 Move X0, [X0+1400]
	066 Call 0x1C17D08
	067 Call 0x1C17F10
	068 Move X19, X0
	069 Move X0, 0xD34000
	070 Move X0, [X0+2320]
	071 Call 0x1C17D08
	072 Move X20, X0
	073 Move X0, 0xD24000
	074 Move X0, [X0+1560]
	075 Call 0x1C17D08
	076 Move X2, X0
	077 Move X0, X19
	078 Move X1, X20
	079 Move X3, X31
	080 Call ArgumentException..ctor, X0, X1, X2
	081 Move X0, 0xD33000
	082 Move X0, [X0+2768]
	083 Call 0x1C17D08
	084 Move X1, X0
	085 Move X0, X19
	086 Call 0x1C17DEC
	087 Call 0x1C17F28
	088 Call 0x1C17F44
	089 Move X1, X31
	090 Call 0x1C17DEC
	091 Move X0, 0xCFE000
	092 Move X0, [X0+1320]
	093 Call 0x1C17D08
	094 Call 0x1C17F10
	095 Move X19, X0
	096 Move X0, 0xD23000
	097 Move X0, [X0+1560]
	098 Call 0x1C17D08
	099 Move X1, X0
	100 Move X0, X19
	101 Move X2, X31
	102 Call ArgumentNullException..ctor, X0, X1
	103 Move X0, 0xD01000
	104 Move X0, [X0+1400]
	105 Call 0x1C17D08
	106 Call 0x1C17F10
	107 Move X19, X0
	108 Move X0, 0xD33000
	109 Move X0, [X0+2368]

Method: System.Void CheckMultiTaskContinuationOptions(System.Threading.Tasks.TaskContinuationOptions continuationOptions)

Disassembly:
	0x033FA4F4 ADRP X0, 0xD33000
	0x033FA4F8 LDR X0, [X0 + 0xAD8]
	0x033FA4FC BL 0x1C16CF4
	0x033FA500 ADRP X0, 0xD33000
	0x033FA504 LDR X0, [X0 + 0xB18]
	0x033FA508 BL 0x1C16CF4
	0x033FA50C ADRP X0, 0xD33000
	0x033FA510 LDR X0, [X0 + 0xB10]
	0x033FA514 BL 0x1C16CF4
	0x033FA518 MOVZ W8, 0x1
	0x033FA51C STRB W8, [X20 + 0x4C5]
	0x033FA520 LDR X0, [X19]
	0x033FA524 ADRP X22, 0xD05000
	0x033FA528 ADRP X20, 0xD33000
	0x033FA52C ADRP X21, 0xD33000
	0x033FA530 LDR W8, [X0 + 0xE0]
	0x033FA534 LDR X22, [X22 + 0x4A0]
	0x033FA538 LDR X20, [X20 + 0xB18]
	0x033FA53C LDR X21, [X21 + 0xAD8]
	0x033FA540 CBNZ W8, 0x33FA54C
	0x033FA544 BL 0x1C16DFC
	0x033FA548 LDR X0, [X19]
	0x033FA54C LDR X8, [X0 + 0xB8]
	0x033FA550 LDR X0, [X22]
	0x033FA554 LDR X19, [X8]
	0x033FA558 BL 0x1C16F10
	0x033FA55C LDR X2, [X20]
	0x033FA560 MOV X1, X19
	0x033FA564 MOV X3, X31
	0x033FA568 MOV X20, X0
	0x033FA56C BL 0x33DCEF0
	0x033FA570 LDR X8, [X21]
	0x033FA574 LDP X22, X21, [X31 + 0x10]
	0x033FA578 LDR X8, [X8 + 0xB8]
	0x033FA57C STR X20, [X8]
	0x033FA580 LDP X20, X19, [X31 + 0x20]
	0x033FA584 LDR X30, [X31], #0x30
	0x033FA588 RET
	0x033FA58C STR X30, [X31 - 0x20]!
	0x033FA590 STP X20, X19, [X31 + 0x10]
	0x033FA594 ADRP X19, 0xFE3000
	0x033FA598 ADRP X20, 0xD33000
	0x033FA59C LDRB W8, [X19 + 0x4C6]
	0x033FA5A0 LDR X20, [X20 + 0xB10]
	0x033FA5A4 TBNZ X8, 0x0, 0x33FA5BC
	0x033FA5A8 ADRP X0, 0xD33000
	0x033FA5AC LDR X0, [X0 + 0xB10]
	0x033FA5B0 BL 0x1C16CF4
	0x033FA5B4 MOVZ W8, 0x1
	0x033FA5B8 STRB W8, [X19 + 0x4C6]
	0x033FA5BC LDR X0, [X20]
	0x033FA5C0 BL 0x1C16F10
	0x033FA5C4 MOV X1, X31
	0x033FA5C8 MOV X19, X0
	0x033FA5CC BL 0x33BDD8C
	0x033FA5D0 LDR X8, [X20]
	0x033FA5D4 LDR X8, [X8 + 0xB8]
	0x033FA5D8 STR X19, [X8]
	0x033FA5DC LDP X20, X19, [X31 + 0x10]
	0x033FA5E0 LDR X30, [X31], #0x20
	0x033FA5E4 RET
	0x033FA5E8 MOV X1, X31
	0x033FA5EC B 0x33BDD8C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, 2
	005 NotImplemented "Instruction MOVK not yet implemented."
	006 NotImplemented "Instruction BICS not yet implemented."
	007 Move W8, 0xFFC0
	008 NotImplemented "Instruction MOVK not yet implemented."
	009 And W31, W0, W8
	010 And W31, W0, 0x70000
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X30, [X31+32]
	014 Return 
	015 Move X0, 0xD02000
	016 Move X0, [X0+1888]
	017 Call 0x1C17D08
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Move X0, 0xD34000
	021 Move X0, [X0+2120]
	022 Call 0x1C17D08
	023 Move X20, X0
	024 Move X0, 0xD34000
	025 Move X0, [X0+2128]
	026 Move X0, 0xD02000
	027 Move X0, [X0+1888]
	028 Call 0x1C17D08
	029 Call 0x1C17F10
	030 Move X19, X0
	031 Move X0, 0xD34000
	032 Move X0, [X0+2120]
	033 Call 0x1C17D08
	034 Move X1, X0
	035 Move X0, X19
	036 Move X2, X31
	037 Call ArgumentOutOfRangeException..ctor, X0, X1
	038 Move X0, 0xD02000
	039 Move X0, [X0+1888]
	040 Call 0x1C17D08
	041 Call 0x1C17F10
	042 Move X19, X0
	043 Move X0, 0xD34000
	044 Move X0, [X0+2120]
	045 Call 0x1C17D08
	046 Move X20, X0
	047 Move X0, 0xD34000
	048 Move X0, [X0+2664]
	049 Call 0x1C17D08
	050 Move X2, X0
	051 Move X0, X19
	052 Move X1, X20
	053 Move X3, X31
	054 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	055 Move X0, 0xD34000
	056 Move X0, [X0+2672]
	057 Call 0x1C17D08
	058 Move X1, X0
	059 Move X0, X19
	060 Call 0x1C17DEC

