Type: System.Threading.Tasks.TaskContinuation

Method: System.Void Run(System.Threading.Tasks.Task completedTask, System.Boolean bCanInlineContinuationTask)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void InlineIfPossibleOrElseQueue(System.Threading.Tasks.Task task, System.Boolean needsProtection)

Disassembly:
	0x033F87C0 LDR X20, [X19 + 0x10]
	0x033F87C4 CBZ X20, 0x33F888C
	0x033F87C8 ADRP X21, 0xFE5000
	0x033F87CC LDRB W8, [X21 + 0x503]
	0x033F87D0 CBNZ W8, 0x33F8800
	0x033F87D4 ADRP X0, 0xD35000
	0x033F87D8 LDR X0, [X0 + 0x9E0]
	0x033F87DC BL 0x1C16CF4
	0x033F87E0 ADRP X0, 0xD35000
	0x033F87E4 LDR X0, [X0 + 0x808]
	0x033F87E8 BL 0x1C16CF4
	0x033F87EC ADRP X0, 0xD2D000
	0x033F87F0 LDR X0, [X0 + 0x948]
	0x033F87F4 BL 0x1C16CF4
	0x033F87F8 MOVZ W8, 0x1
	0x033F87FC STRB W8, [X21 + 0x503]
	0x033F8800 ADRP X23, 0xD35000
	0x033F8804 LDR X23, [X23 + 0x808]
	0x033F8808 ADRP X22, 0xD23000
	0x033F880C LDR X8, [X23]
	0x033F8810 LDR X8, [X8 + 0xB8]
	0x033F8814 LDR X21, [X8]
	0x033F8818 LDR X22, [X22 + 0x580]
	0x033F881C CBNZ X21, 0x33F8858
	0x033F8820 ADRP X8, 0xD2D000
	0x033F8824 LDR X8, [X8 + 0x948]
	0x033F8828 LDR X0, [X8]
	0x033F882C BL 0x1C16F10
	0x033F8830 ADRP X8, 0xD35000
	0x033F8834 LDR X8, [X8 + 0x9E0]
	0x033F8838 MOV X1, X31
	0x033F883C MOV X3, X31
	0x033F8840 MOV X21, X0
	0x033F8844 LDR X2, [X8]
	0x033F8848 BL 0x33E1224
	0x033F884C LDR X8, [X23]
	0x033F8850 LDR X8, [X8 + 0xB8]
	0x033F8854 STR X21, [X8]
	0x033F8858 LDR X0, [X22]
	0x033F885C LDR X19, [X19 + 0x18]
	0x033F8860 LDR W8, [X0 + 0xE0]
	0x033F8864 CBNZ W8, 0x33F886C
	0x033F8868 BL 0x1C16DFC
	0x033F886C MOV X0, X20
	0x033F8870 MOV X1, X21
	0x033F8874 MOV X2, X19
	0x033F8878 LDP X20, X19, [X31 + 0x20]
	0x033F887C LDP X22, X21, [X31 + 0x10]
	0x033F8880 MOV X3, X31
	0x033F8884 LDP X30, X23, [X31], #0x30
	0x033F8888 B 0x33E1324
	0x033F888C LDR X8, [X19 + 0x18]
	0x033F8890 CBZ X8, 0x33F88B0
	0x033F8894 LDR X2, [X8 + 0x18]
	0x033F8898 LDR X0, [X8 + 0x40]
	0x033F889C LDR X1, [X8 + 0x28]
	0x033F88A0 LDP X20, X19, [X31 + 0x20]
	0x033F88A4 LDP X22, X21, [X31 + 0x10]
	0x033F88A8 LDP X30, X23, [X31], #0x30
	0x033F88AC BR X2
	0x033F88B0 BL 0x1C16F20
	0x033F88B4 STR X30, [X31 - 0x20]!
	0x033F88B8 STP X20, X19, [X31 + 0x10]
	0x033F88BC ADRP X20, 0xFE5000
	0x033F88C0 LDRB W8, [X20 + 0x4A4]
	0x033F88C4 MOV X19, X0
	0x033F88C8 TBNZ X8, 0x0, 0x33F88E0
	0x033F88CC ADRP X0, 0xCFC000
	0x033F88D0 LDR X0, [X0 + 0xE70]
	0x033F88D4 BL 0x1C16CF4
	0x033F88D8 MOVZ W8, 0x1
	0x033F88DC STRB W8, [X20 + 0x4A4]
	0x033F88E0 CBZ X19, 0x33F8914
	0x033F88E4 ADRP X8, 0xCFC000
	0x033F88E8 LDR X8, [X8 + 0xE70]
	0x033F88EC LDR X1, [X8]
	0x033F88F0 LDR X8, [X19]
	0x033F88F4 CMP X8, X1
	0x033F88F8 B.NE 0x33F8918
	0x033F88FC LDR X2, [X19 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {48}
	007 Move X19, X0
	008 Move TEMP, X1
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {20}
	012 Move W1, 0x10000
	013 Move W2, 0x410000
	014 Move X0, X19
	015 Call Task.AtomicStateUpdate, X0, X1, X2
	016 Move TEMP, X0
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move W20, [X19+56]
	021 Call 0x1C17D44
	022 Call 0x1C17D44
	023 Or W8, W20, 0x10000
	024 Move [X19+56], W8
	025 Move X0, [X19+40]
	026 Compare X0, 0
	027 JumpIfEqual {49}
	028 Move X1, X19
	029 Move W2, W31
	030 Call TaskScheduler.TryRunInline, X0, X1, X2
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {43}
	035 Move X0, [X19+40]
	036 Compare X0, 0
	037 JumpIfEqual {50}
	038 Move X8, [X0]
	039 Move X9, [X8+376]
	040 Move X2, [X8+384]
	041 Move X1, X19
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return 
	048 Call 0x1C17F20
	049 Call 0x1C17F20
	050 Call 0x1C17F20
	051 Move X20, X0
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X0, X20
	054 Call 0x3EB2AD0
	055 Move X20, X0
	056 Move X0, 0xCFC000
	057 Move X0, [X0+2000]
	058 Call 0x1C17D08
	059 Move X8, [X20]
	060 Move X1, [X8]
	061 Call 0x1C18270
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {87}
	066 Move X20, [X20]
	067 Call 0x3EB2AE0
	068 Move X0, 0xD36000
	069 Move X0, [X0+1744]
	070 Call 0x1C17D08
	071 Call 0x1C17F10
	072 Move X1, X20
	073 Move X21, X0
	074 Call TaskSchedulerException..ctor, X0, X1
	075 Move X0, X19
	076 Move X1, X21
	077 Move W2, W31
	078 Call Task.AddException, X0, X1, X2
	079 Move X0, X19
	080 Move X20, [X31+16]
	081 Move X19, [X31+24]
	082 Move W1, W31
	083 Move X30, [X31+32]
	084 Move X21, [X31+40]
	085 Call Task.Finish, X0, X1
	086 Return 
	087 Move W0, 8
	088 Call 0x3EB2AF0
	089 Move X8, [X20]
	090 Move [X0], X8
	091 Move X1, 0xABD000
	092 Add X1, X1, 3672
	093 Move X2, X31
	094 Call 0x3EB2B00
	095 Move X20, X0
	096 Call 0x3EB2AE0
	097 Move X0, X20
	098 Call 0x1D2D690
	099 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x033F8900 LDR X0, [X19 + 0x40]
	0x033F8904 LDR X1, [X19 + 0x28]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

