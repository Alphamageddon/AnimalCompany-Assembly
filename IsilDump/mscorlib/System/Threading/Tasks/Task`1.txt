Type: System.Threading.Tasks.Task`1

Method: System.Void .ctor()

Disassembly:
	0x02697204 LDP X22, X21, [X31 + 0x30]
	0x02697208 LDP X24, X23, [X31 + 0x20]
	0x0269720C LDP X26, X25, [X31 + 0x10]
	0x02697210 LDR X30, [X31], #0x50
	0x02697214 RET
	0x02697218 ADRP X0, 0x1A61000
	0x0269721C LDR X0, [X0 + 0x528]
	0x02697220 BL 0x1C16D08
	0x02697224 BL 0x1C16F10
	0x02697228 MOV X20, X0
	0x0269722C ADRP X0, 0x1A85000
	0x02697230 LDR X0, [X0 + 0x780]
	0x02697234 B 0x2697254
	0x02697238 ADRP X0, 0x1A61000
	0x0269723C LDR X0, [X0 + 0x528]
	0x02697240 BL 0x1C16D08
	0x02697244 BL 0x1C16F10
	0x02697248 MOV X20, X0
	0x0269724C ADRP X0, 0x1A84000
	0x02697250 LDR X0, [X0 + 0x758]
	0x02697254 BL 0x1C16D08
	0x02697258 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1D44000
	006 Move X21, 0x1A5E000
	007 Move W8, [X20+696]
	008 Move X21, [X21+1976]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x1A5E000
	015 Move X0, [X0+1976]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+696], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Task..ctor, X0
	031 Return 

Method: System.Void .ctor(System.Object state, System.Threading.Tasks.TaskCreationOptions options)

Disassembly:
	0x0269725C MOV X0, X20
	0x02697260 MOV X2, X31
	0x02697264 BL 0x330E100
	0x02697268 MOV X0, X20
	0x0269726C MOV X1, X19
	0x02697270 BL 0x1C16DEC
	0x02697274 BL 0x1C16F20
	0x02697278 SUB X31, X31, 0x60
	0x0269727C STP X30, X27, [X31 + 0x10]
	0x02697280 STP X26, X25, [X31 + 0x20]
	0x02697284 STP X24, X23, [X31 + 0x30]
	0x02697288 STP X22, X21, [X31 + 0x40]
	0x0269728C STP X20, X19, [X31 + 0x50]
	0x02697290 MOV X19, X7
	0x02697294 CBZ X1, 0x2697350
	0x02697298 MOV X20, X6
	0x0269729C CBZ X6, 0x2697370
	0x026972A0 MOV X24, X0
	0x026972A4 LDR X0, [X19 + 0x20]
	0x026972A8 MOV W26, W5
	0x026972AC MOV W21, W4
	0x026972B0 MOV X22, X3
	0x026972B4 LDRB W8, [X0 + 0x135]
	0x026972B8 MOV X23, X2
	0x026972BC MOV X25, X1
	0x026972C0 TBNZ X8, 0x0, 0x26972C8
	0x026972C4 BL 0x1C5C684
	0x026972C8 LDR X8, [X0 + 0xC0]
	0x026972CC LDR X0, [X8 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1D44000
	008 Move X23, 0x1A5E000
	009 Move W8, [X22+697]
	010 Move X23, [X23+1976]
	011 Move W19, W2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x1A5E000
	019 Move X0, [X0+1976]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+697], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X21
	029 Move X1, X20
	030 Move W2, W19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move W3, 1
	036 Move X4, X31
	037 Move X30, [X31+48]
	038 Move X23, [X31+56]
	039 Call Task..ctor, X0, X1, X2, X3
	040 Return 

Method: System.Void .ctor(TResult result)

Disassembly:
	0x026972D0 LDRB W8, [X0 + 0x135]
	0x026972D4 TBNZ X8, 0x0, 0x26972DC
	0x026972D8 BL 0x1C5C684
	0x026972DC BL 0x1C16F10
	0x026972E0 MOV X27, X0
	0x026972E4 LDR X0, [X19 + 0x20]
	0x026972E8 ORR W19, W26, 0x2000
	0x026972EC LDRB W8, [X0 + 0x135]
	0x026972F0 TBNZ X8, 0x0, 0x26972F8
	0x026972F4 BL 0x1C5C684
	0x026972F8 MOV X0, X27
	0x026972FC MOV X1, X25
	0x02697300 MOV X2, X23
	0x02697304 MOV X3, X24
	0x02697308 MOV X4, X22
	0x0269730C MOV W5, W21
	0x02697310 MOV W6, W19
	0x02697314 MOV X7, X20
	0x02697318 BL 0x26970A0
	0x0269731C CBZ X27, 0x26973AC
	0x02697320 MOV X0, X27
	0x02697324 MOV W1, W31
	0x02697328 MOV X2, X31
	0x0269732C BL 0x33F0124
	0x02697330 MOV X0, X27
	0x02697334 LDP X20, X19, [X31 + 0x50]
	0x02697338 LDP X22, X21, [X31 + 0x40]
	0x0269733C LDP X24, X23, [X31 + 0x30]
	0x02697340 LDP X26, X25, [X31 + 0x20]
	0x02697344 LDP X30, X27, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1D44000
	007 Move X22, 0x1A5E000
	008 Move W8, [X21+698]
	009 Move X22, [X22+1976]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1A5E000
	017 Move X0, [X0+1976]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+698], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move W1, W31
	028 Move W2, W31
	029 Move X3, X31
	030 Move X4, X31
	031 Call Task..ctor, X0, X1, X2, X3
	032 Move [X20+80], X19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return 

Method: System.Void .ctor(System.Boolean canceled, TResult result, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.CancellationToken ct)

Disassembly:
	0x02697348 ADD X31, X31, 0x60
	0x0269734C RET
	0x02697350 ADRP X0, 0x1A61000
	0x02697354 LDR X0, [X0 + 0x528]
	0x02697358 BL 0x1C16D08
	0x0269735C BL 0x1C16F10
	0x02697360 MOV X20, X0
	0x02697364 ADRP X0, 0x1A85000
	0x02697368 LDR X0, [X0 + 0x780]
	0x0269736C B 0x269738C
	0x02697370 ADRP X0, 0x1A61000
	0x02697374 LDR X0, [X0 + 0x528]
	0x02697378 BL 0x1C16D08
	0x0269737C BL 0x1C16F10
	0x02697380 MOV X20, X0
	0x02697384 ADRP X0, 0x1A84000
	0x02697388 LDR X0, [X0 + 0x758]
	0x0269738C BL 0x1C16D08
	0x02697390 MOV X1, X0
	0x02697394 MOV X0, X20
	0x02697398 MOV X2, X31
	0x0269739C BL 0x330E100
	0x026973A0 MOV X0, X20
	0x026973A4 MOV X1, X19
	0x026973A8 BL 0x1C16DEC
	0x026973AC BL 0x1C16F20
	0x026973B0 STP X30, X21, [X31 - 0x20]!
	0x026973B4 STP X20, X19, [X31 + 0x10]
	0x026973B8 CBZ X0, 0x269744C
	0x026973BC MOV X21, X1
	0x026973C0 MOV X1, X31
	0x026973C4 MOV X20, X2
	0x026973C8 MOV X19, X0
	0x026973CC BL 0x33ED11C
	0x026973D0 TBNZ X0, 0x0, 0x269743C
	0x026973D4 MOVZ W1, 0x4000000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x1D44000
	010 Move X24, 0x1A5E000
	011 Move W8, [X25+699]
	012 Move X24, [X24+1976]
	013 Move X22, X4
	014 Move W23, W3
	015 Move X19, X2
	016 Move W21, W1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x1A5E000
	023 Move X0, [X0+1976]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+699], W8
	027 Move X0, [X24]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 And W1, W21, 1
	033 Move X0, X20
	034 Move W2, W23
	035 Move X3, X22
	036 Move X4, X31
	037 Call Task..ctor, X0, X1, X2, X3
	038 Move TEMP, X21
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {43}
	042 Move [X20+80], X19
	043 Move X20, [X31+48]
	044 Move X19, [X31+56]
	045 Move X22, [X31+32]
	046 Move X21, [X31+40]
	047 Move X24, [X31+16]
	048 Move X23, [X31+24]
	049 Move X30, [X31+64]
	050 Move X25, [X31+72]
	051 Return 

Method: System.Void .ctor(System.Func`2<System.Object, TResult> function, System.Object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions)

Disassembly:
	0x026973D8 MOVZ W2, 0x5600000
	0x026973DC MOV X0, X19
	0x026973E0 MOV X3, X31
	0x026973E4 BL 0x33EF944
	0x026973E8 TBZ X0, 0x0, 0x269743C
	0x026973EC STP X21, X20, [X19 + 0x50]
	0x026973F0 BL 0x1C16D44
	0x026973F4 MOV X20, X19
	0x026973F8 LDR W21, [X20 + 0x38]!
	0x026973FC BL 0x1C16D44
	0x02697400 ORR W1, W21, 0x1000000
	0x02697404 MOV X0, X20
	0x02697408 MOV X2, X31
	0x0269740C BL 0x33E9064
	0x02697410 LDR X20, [X20 + 0x10]
	0x02697414 BL 0x1C16D44
	0x02697418 CBZ X20, 0x2697428
	0x0269741C MOV X0, X20
	0x02697420 MOV X1, X31
	0x02697424 BL 0x33F1AD0
	0x02697428 MOV X0, X19
	0x0269742C MOV X1, X31
	0x02697430 BL 0x33F1C00
	0x02697434 MOVZ W0, 0x1
	0x02697438 B 0x2697440
	0x0269743C MOV W0, W31
	0x02697440 LDP X20, X19, [X31 + 0x10]
	0x02697444 LDP X30, X21, [X31], #0x20
	0x02697448 RET
	0x0269744C BL 0x1C16F20
	0x02697450 STR X30, [X31 - 0x20]!
	0x02697454 STP X20, X19, [X31 + 0x10]
	0x02697458 LDR X8, [X0 + 0x30]
	0x0269745C MOV X19, X0
	0x02697460 CBZ X8, 0x2697474
	0x02697464 MOV X0, X19
	0x02697468 LDP X20, X19, [X31 + 0x10]
	0x0269746C LDR X30, [X31], #0x20
	0x02697470 B 0x26973B0
	0x02697474 LDR W20, [X19 + 0x38]
	0x02697478 STP X1, X2, [X19 + 0x50]
	0x0269747C BL 0x1C16D44

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0x1D44000
	011 Move X25, 0x1A5E000
	012 Move W8, [X24+700]
	013 Move X25, [X25+1976]
	014 Move W19, W4
	015 Move X20, X3
	016 Move X21, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x1A5E000
	024 Move X0, [X0+1976]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+700], W8
	028 Move X0, [X25]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move W0, W19
	034 Move X1, X31
	035 Call Task.InternalCurrentIfAttached, X0
	036 Move X3, X0
	037 Move X0, X23
	038 Move X1, X22
	039 Move X2, X21
	040 Move X4, X20
	041 Move W5, W19
	042 Move W6, W31
	043 Move X7, X31
	044 Call 0x2697530, X0, X1, X2, X3, X4, X5, X6, X7
	045 Move X20, [X31+64]
	046 Move X19, [X31+72]
	047 Move X22, [X31+48]
	048 Move X21, [X31+56]
	049 Move X24, [X31+32]
	050 Move X23, [X31+40]
	051 Move X30, [X31+16]
	052 Move X25, [X31+24]
	053 Add X31, X31, 80
	054 Return 

Method: System.Void .ctor(System.Func`1<TResult> valueSelector, System.Threading.Tasks.Task parent, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.InternalTaskOptions internalOptions, System.Threading.Tasks.TaskScheduler scheduler)

Disassembly:
	0x02697480 BL 0x1C16D44
	0x02697484 ORR W8, W20, 0x1000000
	0x02697488 STR W8, [X19 + 0x38]
	0x0269748C LDP X20, X19, [X31 + 0x10]
	0x02697490 LDR X30, [X31], #0x20
	0x02697494 RET
	0x02697498 STR X30, [X31 - 0x20]!
	0x0269749C STP X20, X19, [X31 + 0x10]
	0x026974A0 CBZ X0, 0x26974E4
	0x026974A4 LDR W20, [X0 + 0x38]
	0x026974A8 MOV X19, X0
	0x026974AC BL 0x1C16D44
	0x026974B0 MOVZ W8, 0x11000000
	0x026974B4 AND W8, W20, W8, 0x0
	0x026974B8 MOVZ W9, 0x1000000
	0x026974BC CMP W8, W9
	0x026974C0 B.NE 0x26974CC
	0x026974C4 LDP X0, X1, [X19 + 0x50]
	0x026974C8 B 0x26974D8
	0x026974CC MOVZ W1, 0x1
	0x026974D0 MOV X0, X19
	0x026974D4 BL 0x26974F4
	0x026974D8 LDP X20, X19, [X31 + 0x10]
	0x026974DC LDR X30, [X31], #0x20
	0x026974E0 RET
	0x026974E4 BL 0x1C16F20
	0x026974E8 LDP X8, X1, [X0 + 0x50]
	0x026974EC MOV X0, X8
	0x026974F0 RET
	0x026974F4 STR X30, [X31 - 0x20]!
	0x026974F8 STP X20, X19, [X31 + 0x10]
	0x026974FC CBZ X0, 0x2697568
	0x02697500 MOV W20, W1
	0x02697504 MOV X1, X31
	0x02697508 MOV X19, X0
	0x0269750C BL 0x33ED11C
	0x02697510 TBNZ X0, 0x0, 0x2697528
	0x02697514 MOVN W1, 0x0
	0x02697518 MOV X0, X19
	0x0269751C MOV X2, X31
	0x02697520 MOV X3, X31
	0x02697524 BL 0x33F3028
	0x02697528 TBZ X20, 0x0, 0x2697538
	0x0269752C MOV X0, X19

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X26, 0x1D44000
	013 Move X27, 0x1A5E000
	014 Move W8, [X26+701]
	015 Move X27, [X27+1976]
	016 Move X19, X6
	017 Move W20, W5
	018 Move W21, W4
	019 Move X22, X3
	020 Move X23, X2
	021 Move X24, X1
	022 Move X25, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0x1A5E000
	028 Move X0, [X0+1976]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X26+701], W8
	032 Move X0, [X27]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X25
	038 Move X1, X24
	039 Move X2, X31
	040 Move X3, X23
	041 Move X4, X22
	042 Move W5, W21
	043 Move W6, W20
	044 Move X7, X19
	045 Move [X31], X31
	046 Call Task..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	047 Move X20, [X31+80]
	048 Move X19, [X31+88]
	049 Move X22, [X31+64]
	050 Move X21, [X31+72]
	051 Move X24, [X31+48]
	052 Move X23, [X31+56]
	053 Move X26, [X31+32]
	054 Move X25, [X31+40]
	055 Move X30, [X31+16]
	056 Move X27, [X31+24]
	057 Add X31, X31, 96
	058 Return 

Method: System.Void .ctor(System.Delegate valueSelector, System.Object state, System.Threading.Tasks.Task parent, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.InternalTaskOptions internalOptions, System.Threading.Tasks.TaskScheduler scheduler)

Disassembly:
	0x02697530 MOV X1, X31
	0x02697534 BL 0x33EFEA4
	0x02697538 MOV X0, X19
	0x0269753C MOV X1, X31
	0x02697540 BL 0x33EDE64
	0x02697544 TBNZ X0, 0x0, 0x2697558
	0x02697548 MOVZ W1, 0x1
	0x0269754C MOV X0, X19
	0x02697550 MOV X2, X31
	0x02697554 BL 0x33F12BC
	0x02697558 LDP X0, X1, [X19 + 0x50]
	0x0269755C LDP X20, X19, [X31 + 0x10]
	0x02697560 LDR X30, [X31], #0x20
	0x02697564 RET
	0x02697568 BL 0x1C16F20
	0x0269756C STR X30, [X31 - 0x20]!
	0x02697570 STP X20, X19, [X31 + 0x10]
	0x02697574 MOV X19, X0
	0x02697578 LDR X0, [X0 + 0x20]
	0x0269757C LDRB W8, [X0 + 0x135]
	0x02697580 TBNZ X8, 0x0, 0x2697588
	0x02697584 BL 0x1C5C684
	0x02697588 LDR X8, [X0 + 0xC0]
	0x0269758C LDR X0, [X8 + 0x48]
	0x02697590 LDRB W8, [X0 + 0x135]
	0x02697594 TBNZ X8, 0x0, 0x269759C
	0x02697598 BL 0x1C5C684
	0x0269759C LDR X8, [X0 + 0xB8]
	0x026975A0 LDR X8, [X8]
	0x026975A4 CBNZ X8, 0x2697630
	0x026975A8 LDR X0, [X19 + 0x20]
	0x026975AC LDRB W8, [X0 + 0x135]
	0x026975B0 TBNZ X8, 0x0, 0x26975B8
	0x026975B4 BL 0x1C5C684
	0x026975B8 LDR X8, [X0 + 0xC0]
	0x026975BC LDR X0, [X8 + 0x40]
	0x026975C0 LDRB W8, [X0 + 0x135]
	0x026975C4 TBNZ X8, 0x0, 0x26975CC
	0x026975C8 BL 0x1C5C684
	0x026975CC BL 0x1C16F10
	0x026975D0 LDR X8, [X19 + 0x20]
	0x026975D4 MOV X20, X0
	0x026975D8 LDRB W9, [X8 + 0x135]
	0x026975DC TBNZ X9, 0x0, 0x26975EC

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X27, 0x1D44000
	013 Move X28, 0x1A5E000
	014 Move W8, [X27+702]
	015 Move X28, [X28+1976]
	016 Move X19, X7
	017 Move W20, W6
	018 Move W21, W5
	019 Move X22, X4
	020 Move X23, X3
	021 Move X24, X2
	022 Move X25, X1
	023 Move X26, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0x1A5E000
	029 Move X0, [X0+1976]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X27+702], W8
	033 Move X0, [X28]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X26
	039 Move X1, X25
	040 Move X2, X24
	041 Move X3, X23
	042 Move X4, X22
	043 Move W5, W21
	044 Move W6, W20
	045 Move X7, X19
	046 Move X20, [X31+80]
	047 Move X19, [X31+88]
	048 Move X22, [X31+64]
	049 Move X21, [X31+72]
	050 Move X24, [X31+48]
	051 Move X23, [X31+56]
	052 Move X26, [X31+32]
	053 Move X25, [X31+40]
	054 Move X28, [X31+16]
	055 Move X27, [X31+24]
	056 Move [X31+96], X31
	057 Move X30, [X31+96]
	058 Call Task..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	059 Return 

Method: System.Threading.Tasks.Task`1<TResult> StartNew(System.Threading.Tasks.Task parent, System.Func`1<TResult> function, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.InternalTaskOptions internalOptions, System.Threading.Tasks.TaskScheduler scheduler)

Disassembly:
	0x026975E0 MOV X0, X8
	0x026975E4 BL 0x1C5C684
	0x026975E8 MOV X8, X0
	0x026975EC LDR X8, [X8 + 0xC0]
	0x026975F0 MOV X0, X20
	0x026975F4 LDR X1, [X8 + 0x50]
	0x026975F8 BL 0x267D860
	0x026975FC LDR X0, [X19 + 0x20]
	0x02697600 LDRB W8, [X0 + 0x135]
	0x02697604 TBNZ X8, 0x0, 0x269760C
	0x02697608 BL 0x1C5C684
	0x0269760C LDR X8, [X0 + 0xC0]
	0x02697610 LDR X0, [X8 + 0x48]
	0x02697614 LDRB W8, [X0 + 0x135]
	0x02697618 TBNZ X8, 0x0, 0x2697620
	0x0269761C BL 0x1C5C684
	0x02697620 LDR X0, [X0 + 0xB8]
	0x02697624 MOV X1, X20
	0x02697628 MOV X2, X31
	0x0269762C BL 0x1C24138
	0x02697630 LDR X0, [X19 + 0x20]
	0x02697634 LDRB W8, [X0 + 0x135]
	0x02697638 TBNZ X8, 0x0, 0x2697640
	0x0269763C BL 0x1C5C684
	0x02697640 LDR X8, [X0 + 0xC0]
	0x02697644 LDR X0, [X8 + 0x48]
	0x02697648 LDRB W8, [X0 + 0x135]
	0x0269764C TBNZ X8, 0x0, 0x2697654
	0x02697650 BL 0x1C5C684
	0x02697654 LDR X8, [X0 + 0xB8]
	0x02697658 LDP X20, X19, [X31 + 0x10]
	0x0269765C LDR X0, [X8]
	0x02697660 LDR X30, [X31], #0x20
	0x02697664 RET
	0x02697668 STP X30, X21, [X31 - 0x20]!
	0x0269766C STP X20, X19, [X31 + 0x10]
	0x02697670 LDR X8, [X1 + 0x20]
	0x02697674 MOV X20, X1
	0x02697678 LDR X21, [X0 + 0x18]
	0x0269767C MOV X19, X0
	0x02697680 LDR X8, [X8 + 0xC0]
	0x02697684 LDR X1, [X8 + 0x20]
	0x02697688 LDRB W8, [X1 + 0x135]
	0x0269768C TBNZ X8, 0x0, 0x269769C
	0x02697690 MOV X0, X1
	0x02697694 BL 0x1C5C684
	0x02697698 MOV X1, X0
	0x0269769C MOV X0, X21
	0x026976A0 BL 0x1C16E00
	0x026976A4 CBZ X0, 0x26976C0
	0x026976A8 LDR X8, [X0 + 0x40]
	0x026976AC LDR X9, [X0 + 0x18]
	0x026976B0 LDR X1, [X0 + 0x28]
	0x026976B4 MOV X0, X8
	0x026976B8 BLR X9
	0x026976BC B 0x2697708
	0x026976C0 LDR X8, [X20 + 0x20]
	0x026976C4 LDR X20, [X19 + 0x18]
	0x026976C8 LDR X8, [X8 + 0xC0]
	0x026976CC LDR X1, [X8 + 0x10]
	0x026976D0 LDRB W8, [X1 + 0x135]
	0x026976D4 TBNZ X8, 0x0, 0x26976E4
	0x026976D8 MOV X0, X1
	0x026976DC BL 0x1C5C684
	0x026976E0 MOV X1, X0
	0x026976E4 MOV X0, X20
	0x026976E8 BL 0x1C16E00
	0x026976EC CBZ X0, 0x269770C
	0x026976F0 LDR X8, [X0 + 0x40]
	0x026976F4 LDR X1, [X19 + 0x20]
	0x026976F8 LDR X9, [X0 + 0x18]
	0x026976FC LDR X2, [X0 + 0x28]
	0x02697700 MOV X0, X8
	0x02697704 BLR X9

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, X6
	011 Compare X1, 0
	012 JumpIfEqual {71}
	013 Move X20, X5
	014 Compare X5, 0
	015 JumpIfEqual {78}
	016 Move X23, X0
	017 Move X0, [X19+32]
	018 Move W25, W4
	019 Move W21, W3
	020 Move X22, X2
	021 Move W8, [X0+309]
	022 Move X24, X1
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {28}
	027 Call 0x1C5D684
	028 Move X8, [X0+192]
	029 Move X0, [X8+8]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Call 0x1C17F10
	037 Move X26, X0
	038 Move X0, [X19+32]
	039 Or W19, W25, 0x2000
	040 Move W8, [X0+309]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {46}
	045 Call 0x1C5D684
	046 Move X0, X26
	047 Move X1, X24
	048 Move X2, X23
	049 Move X3, X22
	050 Move W4, W21
	051 Move W5, W19
	052 Move X6, X20
	053 Call 0x2697480, X0, X1, X2, X3, X4, X5, X6
	054 Compare X26, 0
	055 JumpIfEqual {93}
	056 Move X0, X26
	057 Move W1, W31
	058 Move X2, X31
	059 Call Task.ScheduleAndStart, X0, X1
	060 Move X0, X26
	061 Move X20, [X31+64]
	062 Move X19, [X31+72]
	063 Move X22, [X31+48]
	064 Move X21, [X31+56]
	065 Move X24, [X31+32]
	066 Move X23, [X31+40]
	067 Move X26, [X31+16]
	068 Move X25, [X31+24]
	069 Move X30, [X31+80]
	070 Return X0
	071 Move X0, 0x1A62000
	072 Move X0, [X0+1320]
	073 Call 0x1C17D08
	074 Call 0x1C17F10
	075 Move X20, X0
	076 Move X0, 0x1A86000
	077 Move X0, [X0+1920]
	078 Move X0, 0x1A62000
	079 Move X0, [X0+1320]
	080 Call 0x1C17D08
	081 Call 0x1C17F10
	082 Move X20, X0
	083 Move X0, 0x1A85000
	084 Move X0, [X0+1880]
	085 Call 0x1C17D08
	086 Move X1, X0
	087 Move X0, X20
	088 Move X2, X31
	089 Call ArgumentNullException..ctor, X0, X1
	090 Move X0, X20
	091 Move X1, X19
	092 Call 0x1C17DEC
	093 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<TResult> StartNew(System.Threading.Tasks.Task parent, System.Func`2<System.Object, TResult> function, System.Object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.InternalTaskOptions internalOptions, System.Threading.Tasks.TaskScheduler scheduler)

Disassembly:
	0x02697708 STP X0, X1, [X19 + 0x50]
	0x0269770C LDP X20, X19, [X31 + 0x10]
	0x02697710 LDP X30, X21, [X31], #0x20
	0x02697714 RET
	0x02697718 RET
	0x0269771C SUB X31, X31, 0x20
	0x02697720 STP X31, X30, [X31 + 0x8]
	0x02697724 STR X31, [X31]
	0x02697728 LDR X8, [X2 + 0x20]
	0x0269772C AND W2, W1, 0x1
	0x02697730 LDR X8, [X8 + 0xC0]
	0x02697734 LDR X3, [X8 + 0x88]
	0x02697738 MOV X8, X0
	0x0269773C ADD X0, X31, 0x0
	0x02697740 MOV X1, X8
	0x02697744 BL 0x2997608
	0x02697748 LDP X0, X1, [X31]
	0x0269774C LDR X30, [X31 + 0x10]
	0x02697750 ADD X31, X31, 0x20
	0x02697754 RET
	0x02697758 LDR X8, [X3 + 0x20]
	0x0269775C MOV X3, X31
	0x02697760 MOV W4, W31
	0x02697764 LDR X8, [X8 + 0xC0]
	0x02697768 LDR X5, [X8 + 0x98]
	0x0269776C B 0x2697770
	0x02697770 STR X30, [X31 - 0x50]!
	0x02697774 STP X26, X25, [X31 + 0x10]
	0x02697778 STP X24, X23, [X31 + 0x20]
	0x0269777C STP X22, X21, [X31 + 0x30]
	0x02697780 STP X20, X19, [X31 + 0x40]
	0x02697784 ADRP X25, 0x1D43000
	0x02697788 LDRB W8, [X25 + 0x2C7]
	0x0269778C MOV X19, X5
	0x02697790 MOV W20, W4
	0x02697794 MOV X21, X3
	0x02697798 MOV X22, X2
	0x0269779C MOV X24, X1
	0x026977A0 MOV X23, X0
	0x026977A4 TBNZ X8, 0x0, 0x26977BC
	0x026977A8 ADRP X0, 0x1A5D000
	0x026977AC LDR X0, [X0 + 0x7B8]
	0x026977B0 BL 0x1C16CF4
	0x026977B4 MOVZ W8, 0x1
	0x026977B8 STRB W8, [X25 + 0x2C7]
	0x026977BC STR X31, [X31 + 0x8]
	0x026977C0 CBZ X24, 0x2697878
	0x026977C4 CBZ X22, 0x2697898
	0x026977C8 ADRP X8, 0x1A5D000
	0x026977CC LDR X8, [X8 + 0x7B8]
	0x026977D0 LDR X0, [X8]
	0x026977D4 LDR W8, [X0 + 0xE0]
	0x026977D8 CBNZ W8, 0x26977E0
	0x026977DC BL 0x1C16DFC
	0x026977E0 ADD X1, X31, 0xC
	0x026977E4 ADD X2, X31, 0x8
	0x026977E8 MOV W0, W20
	0x026977EC MOV X3, X31
	0x026977F0 BL 0x33F4210
	0x026977F4 LDR X8, [X19 + 0x20]
	0x026977F8 LDP W26, W25, [X31 + 0x8]
	0x026977FC LDR X8, [X8 + 0xC0]
	0x02697800 LDR X0, [X8 + 0xA0]
	0x02697804 LDRB W8, [X0 + 0x135]
	0x02697808 TBNZ X8, 0x0, 0x2697810
	0x0269780C BL 0x1C5C684
	0x02697810 BL 0x1C16F10
	0x02697814 LDR X8, [X19 + 0x20]
	0x02697818 MOV X1, X23
	0x0269781C MOV X2, X24
	0x02697820 MOV X3, X31
	0x02697824 LDR X8, [X8 + 0xC0]
	0x02697828 MOV W4, W25
	0x0269782C MOV W5, W26
	0x02697830 MOV X19, X0
	0x02697834 LDR X6, [X8 + 0xA8]
	0x02697838 BL 0x29A40C8
	0x0269783C CBZ X23, 0x26978D4

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X19, X7
	013 Compare X1, 0
	014 JumpIfEqual {77}
	015 Move X20, X6
	016 Compare X6, 0
	017 JumpIfEqual {84}
	018 Move X24, X0
	019 Move X0, [X19+32]
	020 Move W26, W5
	021 Move W21, W4
	022 Move X22, X3
	023 Move W8, [X0+309]
	024 Move X23, X2
	025 Move X25, X1
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move X8, [X0+192]
	032 Move X0, [X8+8]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Call 0x1C17F10
	040 Move X27, X0
	041 Move X0, [X19+32]
	042 Or W19, W26, 0x2000
	043 Move W8, [X0+309]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {49}
	048 Call 0x1C5D684
	049 Move X0, X27
	050 Move X1, X25
	051 Move X2, X23
	052 Move X3, X24
	053 Move X4, X22
	054 Move W5, W21
	055 Move W6, W19
	056 Move X7, X20
	057 Call 0x2697530, X0, X1, X2, X3, X4, X5, X6, X7
	058 Compare X27, 0
	059 JumpIfEqual {99}
	060 Move X0, X27
	061 Move W1, W31
	062 Move X2, X31
	063 Call Task.ScheduleAndStart, X0, X1
	064 Move X0, X27
	065 Move X20, [X31+80]
	066 Move X19, [X31+88]
	067 Move X22, [X31+64]
	068 Move X21, [X31+72]
	069 Move X24, [X31+48]
	070 Move X23, [X31+56]
	071 Move X26, [X31+32]
	072 Move X25, [X31+40]
	073 Move X30, [X31+16]
	074 Move X27, [X31+24]
	075 Add X31, X31, 96
	076 Return X0
	077 Move X0, 0x1A62000
	078 Move X0, [X0+1320]
	079 Call 0x1C17D08
	080 Call 0x1C17F10
	081 Move X20, X0
	082 Move X0, 0x1A86000
	083 Move X0, [X0+1920]
	084 Move X0, 0x1A62000
	085 Move X0, [X0+1320]
	086 Call 0x1C17D08
	087 Call 0x1C17F10
	088 Move X20, X0
	089 Move X0, 0x1A85000
	090 Move X0, [X0+1880]
	091 Call 0x1C17D08
	092 Move X1, X0
	093 Move X0, X20
	094 Move X2, X31
	095 Call ArgumentNullException..ctor, X0, X1
	096 Move X0, X20
	097 Move X1, X19
	098 Call 0x1C17DEC
	099 Call 0x1C17F20

Method: System.Boolean TrySetResult(TResult result)

Disassembly:
	0x02697840 MOV X0, X23
	0x02697844 MOV X1, X19
	0x02697848 MOV X2, X22
	0x0269784C MOV X3, X21
	0x02697850 MOV W4, W20
	0x02697854 MOV X5, X31
	0x02697858 BL 0x33F43E4
	0x0269785C MOV X0, X19
	0x02697860 LDP X20, X19, [X31 + 0x40]
	0x02697864 LDP X22, X21, [X31 + 0x30]
	0x02697868 LDP X24, X23, [X31 + 0x20]
	0x0269786C LDP X26, X25, [X31 + 0x10]
	0x02697870 LDR X30, [X31], #0x50
	0x02697874 RET
	0x02697878 ADRP X0, 0x1A61000
	0x0269787C LDR X0, [X0 + 0x528]
	0x02697880 BL 0x1C16D08
	0x02697884 BL 0x1C16F10
	0x02697888 MOV X20, X0
	0x0269788C ADRP X0, 0x1A86000
	0x02697890 LDR X0, [X0 + 0x620]
	0x02697894 B 0x26978B4
	0x02697898 ADRP X0, 0x1A61000
	0x0269789C LDR X0, [X0 + 0x528]
	0x026978A0 BL 0x1C16D08
	0x026978A4 BL 0x1C16F10
	0x026978A8 MOV X20, X0
	0x026978AC ADRP X0, 0x1A84000
	0x026978B0 LDR X0, [X0 + 0x758]
	0x026978B4 BL 0x1C16D08
	0x026978B8 MOV X1, X0
	0x026978BC MOV X0, X20
	0x026978C0 MOV X2, X31
	0x026978C4 BL 0x330E100
	0x026978C8 MOV X0, X20
	0x026978CC MOV X1, X19
	0x026978D0 BL 0x1C16DEC
	0x026978D4 BL 0x1C16F20
	0x026978D8 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {51}
	007 Move X20, X1
	008 Move X1, X31
	009 Move X19, X0
	010 Call Task.get_IsCompleted, X0
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {45}
	015 Move W1, 0x4000000
	016 Move W2, 0x5600000
	017 Move X0, X19
	018 Move X3, X31
	019 Call Task.AtomicStateUpdate, X0, X1, X2
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {45}
	024 Move [X19+80], X20
	025 Call 0x1C17D44
	026 Move X20, X19
	027 Add X20, X20, 56
	028 Move W21, [X20]
	029 Call 0x1C17D44
	030 Or W1, W21, 0x1000000
	031 Move X0, X20
	032 Move X2, X31
	033 Call Interlocked.Exchange, X0, X1
	034 Move X20, [X20+16]
	035 Call 0x1C17D44
	036 Compare X20, 0
	037 JumpIfEqual {41}
	038 Move X0, X20
	039 Move X1, X31
	040 Call ContingentProperties.SetCompleted, X0
	041 Move X0, X19
	042 Move X1, X31
	043 Call Task.FinishStageThree, X0
	044 Move W0, 1
	045 Move W0, W31
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return X0
	051 Call 0x1C17F20

Method: System.Void DangerousSetResult(TResult result)

Disassembly:
	0x026978DC STP X20, X19, [X31 + 0x10]
	0x026978E0 ADRP X20, 0x1D43000
	0x026978E4 ADRP X21, 0x1A5D000
	0x026978E8 LDRB W8, [X20 + 0x2C8]
	0x026978EC LDR X21, [X21 + 0x7B8]
	0x026978F0 MOV X19, X0
	0x026978F4 TBNZ X8, 0x0, 0x269790C
	0x026978F8 ADRP X0, 0x1A5D000
	0x026978FC LDR X0, [X0 + 0x7B8]
	0x02697900 BL 0x1C16CF4
	0x02697904 MOVZ W8, 0x1
	0x02697908 STRB W8, [X20 + 0x2C8]
	0x0269790C LDR X0, [X21]
	0x02697910 LDR W8, [X0 + 0xE0]
	0x02697914 CBNZ W8, 0x269791C
	0x02697918 BL 0x1C16DFC
	0x0269791C MOV X0, X19
	0x02697920 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+48]
	005 Move X19, X0
	006 Compare X8, 0
	007 JumpIfEqual {14}
	008 Move X0, X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Call 0x2697840, X0, X1
	013 Return 
	014 Move W20, [X19+56]
	015 Move [X19+80], X1
	016 Call 0x1C17D44
	017 Call 0x1C17D44
	018 Or W8, W20, 0x1000000
	019 Move [X19+56], W8
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Return 

Method: TResult get_Result()

Disassembly:
	0x02697924 MOV X1, X31
	0x02697928 LDP X30, X21, [X31], #0x20
	0x0269792C B 0x33EEBEC
	0x02697930 STP X30, X23, [X31 - 0x30]!
	0x02697934 STP X22, X21, [X31 + 0x10]
	0x02697938 STP X20, X19, [X31 + 0x20]
	0x0269793C ADRP X22, 0x1D43000
	0x02697940 ADRP X23, 0x1A5D000
	0x02697944 LDRB W8, [X22 + 0x2C9]
	0x02697948 LDR X23, [X23 + 0x7B8]
	0x0269794C MOV W19, W2
	0x02697950 MOV X20, X1
	0x02697954 MOV X21, X0
	0x02697958 TBNZ X8, 0x0, 0x2697970
	0x0269795C ADRP X0, 0x1A5D000
	0x02697960 LDR X0, [X0 + 0x7B8]
	0x02697964 BL 0x1C16CF4
	0x02697968 MOVZ W8, 0x1
	0x0269796C STRB W8, [X22 + 0x2C9]
	0x02697970 LDR X0, [X23]
	0x02697974 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {25}
	006 Move W20, [X0+56]
	007 Move X19, X0
	008 Call 0x1C17D44
	009 Move W8, 0x11000000
	010 And W8, W20, W8
	011 Move W9, 0x1000000
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X0, [X19+80]
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Return X0
	018 Move X0, X19
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move W1, 1
	022 Move X30, [X31+32]
	023 Call 0x2697980, X0, X1
	024 Return X0
	025 Call 0x1C17F20

Method: TResult get_ResultOnSuccess()

Disassembly:
	0x02697978 CBNZ W8, 0x2697980
	0x0269797C BL 0x1C16DFC

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: TResult GetResultCore(System.Boolean waitCompletionNotification)

Disassembly:
	0x02697980 MOV X0, X21
	0x02697984 MOV X1, X20
	0x02697988 MOV W2, W19
	0x0269798C LDP X20, X19, [X31 + 0x20]
	0x02697990 LDP X22, X21, [X31 + 0x10]
	0x02697994 MOVZ W3, 0x1
	0x02697998 MOV X4, X31
	0x0269799C LDP X30, X23, [X31], #0x30
	0x026979A0 B 0x33EEC14
	0x026979A4 STR X30, [X31 - 0x30]!
	0x026979A8 STP X22, X21, [X31 + 0x10]
	0x026979AC STP X20, X19, [X31 + 0x20]
	0x026979B0 ADRP X21, 0x1D43000
	0x026979B4 ADRP X22, 0x1A5D000
	0x026979B8 LDRB W8, [X21 + 0x2CA]
	0x026979BC LDR X22, [X22 + 0x7B8]
	0x026979C0 MOV X20, X1
	0x026979C4 MOV X19, X0
	0x026979C8 TBNZ X8, 0x0, 0x26979E0
	0x026979CC ADRP X0, 0x1A5D000
	0x026979D0 LDR X0, [X0 + 0x7B8]
	0x026979D4 BL 0x1C16CF4
	0x026979D8 MOVZ W8, 0x1
	0x026979DC STRB W8, [X21 + 0x2CA]
	0x026979E0 LDR X0, [X22]
	0x026979E4 LDR W8, [X0 + 0xE0]
	0x026979E8 CBNZ W8, 0x26979F0
	0x026979EC BL 0x1C16DFC
	0x026979F0 MOV X0, X19
	0x026979F4 MOV W1, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {44}
	006 Move W20, W1
	007 Move X1, X31
	008 Move X19, X0
	009 Call Task.get_IsCompleted, X0
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {21}
	014 Move TEMP, 0
	015 Not TEMP
	016 Move W1, TEMP
	017 Move X0, X19
	018 Move X2, X31
	019 Move X3, X31
	020 Call Task.InternalWait, X0, X1, X2
	021 Move TEMP, X20
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {28}
	025 Move X0, X19
	026 Move X1, X31
	027 Call Task.NotifyDebuggerOfWaitCompletionIfNecessary, X0
	028 Move X0, X19
	029 Move X1, X31
	030 Call Task.get_IsCompletedSuccessfully, X0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {39}
	035 Move W1, 1
	036 Move X0, X19
	037 Move X2, X31
	038 Call Task.ThrowIfExceptional, X0, X1
	039 Move X0, [X19+80]
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Return X0
	044 Call 0x1C17F20

Method: System.Threading.Tasks.TaskFactory`1<TResult> get_Factory()

Disassembly:
	0x026979F8 MOV W2, W31
	0x026979FC MOV X3, X31
	0x02697A00 MOV X4, X31
	0x02697A04 BL 0x33EEB10
	0x02697A08 LDR X8, [X20 + 0x10]
	0x02697A0C LDR V0, [X20]
	0x02697A10 LDP X22, X21, [X31 + 0x10]
	0x02697A14 STR X8, [X19 + 0x60]
	0x02697A18 STR V0, [X19 + 0x5]
	0x02697A1C LDP X20, X19, [X31 + 0x20]
	0x02697A20 LDR X30, [X31], #0x30
	0x02697A24 RET
	0x02697A28 STP X30, X25, [X31 - 0x40]!
	0x02697A2C STP X24, X23, [X31 + 0x10]
	0x02697A30 STP X22, X21, [X31 + 0x20]
	0x02697A34 STP X20, X19, [X31 + 0x30]
	0x02697A38 ADRP X25, 0x1D43000
	0x02697A3C ADRP X24, 0x1A5D000
	0x02697A40 LDRB W8, [X25 + 0x2CB]
	0x02697A44 LDR X24, [X24 + 0x7B8]
	0x02697A48 MOV X22, X4
	0x02697A4C MOV W23, W3
	0x02697A50 MOV X19, X2
	0x02697A54 MOV W21, W1
	0x02697A58 MOV X20, X0
	0x02697A5C TBNZ X8, 0x0, 0x2697A74
	0x02697A60 ADRP X0, 0x1A5D000
	0x02697A64 LDR X0, [X0 + 0x7B8]
	0x02697A68 BL 0x1C16CF4
	0x02697A6C MOVZ W8, 0x1
	0x02697A70 STRB W8, [X25 + 0x2CB]
	0x02697A74 LDR X0, [X24]
	0x02697A78 LDR W8, [X0 + 0xE0]
	0x02697A7C CBNZ W8, 0x2697A84
	0x02697A80 BL 0x1C16DFC
	0x02697A84 AND W1, W21, 0x1
	0x02697A88 MOV X0, X20
	0x02697A8C MOV W2, W23
	0x02697A90 MOV X3, X22
	0x02697A94 MOV X4, X31
	0x02697A98 BL 0x33EEB10
	0x02697A9C TBNZ X21, 0x0, 0x2697AB0
	0x02697AA0 LDR X8, [X19 + 0x10]
	0x02697AA4 LDR V0, [X19]
	0x02697AA8 STR X8, [X20 + 0x60]
	0x02697AAC STR V0, [X20 + 0x5]
	0x02697AB0 LDP X20, X19, [X31 + 0x30]
	0x02697AB4 LDP X22, X21, [X31 + 0x20]
	0x02697AB8 LDP X24, X23, [X31 + 0x10]
	0x02697ABC LDP X30, X25, [X31], #0x40
	0x02697AC0 RET
	0x02697AC4 SUB X31, X31, 0x50
	0x02697AC8 STP X30, X25, [X31 + 0x10]
	0x02697ACC STP X24, X23, [X31 + 0x20]
	0x02697AD0 STP X22, X21, [X31 + 0x30]
	0x02697AD4 STP X20, X19, [X31 + 0x40]
	0x02697AD8 ADRP X24, 0x1D43000
	0x02697ADC ADRP X25, 0x1A5D000
	0x02697AE0 LDRB W8, [X24 + 0x2CC]
	0x02697AE4 LDR X25, [X25 + 0x7B8]
	0x02697AE8 MOV W19, W4
	0x02697AEC MOV X20, X3
	0x02697AF0 MOV X21, X2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8+72]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Move X8, [X0+184]
	021 Move X8, [X8]
	022 Compare X8, 0
	023 JumpIfNotEqual {73}
	024 Move X0, [X19+32]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move X8, [X0+192]
	032 Move X0, [X8+64]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Call 0x1C17F10
	040 Move X8, [X19+32]
	041 Move X20, X0
	042 Move W9, [X8+309]
	043 Move TEMP, X9
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {50}
	047 Move X0, X8
	048 Call 0x1C5D684
	049 Move X8, X0
	050 Move X8, [X8+192]
	051 Move X0, X20
	052 Move X1, [X8+80]
	053 Call 0x267DCD8, X0
	054 Move X0, [X19+32]
	055 Move W8, [X0+309]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {61}
	060 Call 0x1C5D684
	061 Move X8, [X0+192]
	062 Move X0, [X8+72]
	063 Move W8, [X0+309]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {69}
	068 Call 0x1C5D684
	069 Move X0, [X0+184]
	070 Move X1, X20
	071 Move X2, X31
	072 Call 0x1C25138
	073 Move X0, [X19+32]
	074 Move W8, [X0+309]
	075 Move TEMP, X8
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {80}
	079 Call 0x1C5D684
	080 Move X8, [X0+192]
	081 Move X0, [X8+72]
	082 Move W8, [X0+309]
	083 Move TEMP, X8
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {88}
	087 Call 0x1C5D684
	088 Move X8, [X0+184]
	089 Move X20, [X31+16]
	090 Move X19, [X31+24]
	091 Move X0, [X8]
	092 Move X30, [X31+32]
	093 Return X0

Method: System.Void InnerInvoke()

Disassembly:
	0x02697AF4 MOV X22, X1
	0x02697AF8 MOV X23, X0
	0x02697AFC TBNZ X8, 0x0, 0x2697B14
	0x02697B00 ADRP X0, 0x1A5D000
	0x02697B04 LDR X0, [X0 + 0x7B8]
	0x02697B08 BL 0x1C16CF4
	0x02697B0C MOVZ W8, 0x1
	0x02697B10 STRB W8, [X24 + 0x2CC]
	0x02697B14 LDR X0, [X25]
	0x02697B18 LDR W8, [X0 + 0xE0]
	0x02697B1C CBNZ W8, 0x2697B24
	0x02697B20 BL 0x1C16DFC
	0x02697B24 MOV W0, W19
	0x02697B28 MOV X1, X31
	0x02697B2C BL 0x33F0388
	0x02697B30 MOV X3, X0
	0x02697B34 MOV X0, X23
	0x02697B38 MOV X1, X22
	0x02697B3C MOV X2, X21
	0x02697B40 MOV X4, X20
	0x02697B44 MOV W5, W19
	0x02697B48 MOV W6, W31
	0x02697B4C MOV X7, X31
	0x02697B50 BL 0x2697C1C
	0x02697B54 LDP X20, X19, [X31 + 0x40]
	0x02697B58 LDP X22, X21, [X31 + 0x30]
	0x02697B5C LDP X24, X23, [X31 + 0x20]
	0x02697B60 LDP X30, X25, [X31 + 0x10]
	0x02697B64 ADD X31, X31, 0x50
	0x02697B68 RET
	0x02697B6C SUB X31, X31, 0x60
	0x02697B70 STP X30, X27, [X31 + 0x10]
	0x02697B74 STP X26, X25, [X31 + 0x20]
	0x02697B78 STP X24, X23, [X31 + 0x30]
	0x02697B7C STP X22, X21, [X31 + 0x40]
	0x02697B80 STP X20, X19, [X31 + 0x50]
	0x02697B84 ADRP X26, 0x1D43000
	0x02697B88 ADRP X27, 0x1A5D000
	0x02697B8C LDRB W8, [X26 + 0x2CD]
	0x02697B90 LDR X27, [X27 + 0x7B8]
	0x02697B94 MOV X19, X6
	0x02697B98 MOV W20, W5
	0x02697B9C MOV W21, W4
	0x02697BA0 MOV X22, X3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+32]
	006 Move X20, X1
	007 Move X21, [X0+24]
	008 Move X19, X0
	009 Move X8, [X8+192]
	010 Move X1, [X8+32]
	011 Move W8, [X1+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X1
	017 Call 0x1C5D684
	018 Move X1, X0
	019 Move X0, X21
	020 Call 0x1C17E00
	021 Compare X0, 0
	022 JumpIfEqual {28}
	023 Move X8, [X0+64]
	024 Move X9, [X0+24]
	025 Move X1, [X0+40]
	026 Move X0, X8
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X8, [X20+32]
	029 Move X20, [X19+24]
	030 Move X8, [X8+192]
	031 Move X1, [X8+16]
	032 Move W8, [X1+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {40}
	037 Move X0, X1
	038 Call 0x1C5D684
	039 Move X1, X0
	040 Move X0, X20
	041 Call 0x1C17E00
	042 Compare X0, 0
	043 JumpIfEqual {51}
	044 Move X8, [X0+64]
	045 Move X1, [X19+32]
	046 Move X9, [X0+24]
	047 Move X2, [X0+40]
	048 Move X0, X8
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move [X19+80], X0
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return 

Method: System.Runtime.CompilerServices.TaskAwaiter`1<TResult> GetAwaiter()

Disassembly:
	0x02697BA4 MOV X23, X2

ISIL:
	001 Return X0

Method: System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1<TResult> ConfigureAwait(System.Boolean continueOnCapturedContext)

Disassembly:
	0x02697BA8 MOV X24, X1
	0x02697BAC MOV X25, X0
	0x02697BB0 TBNZ X8, 0x0, 0x2697BC8
	0x02697BB4 ADRP X0, 0x1A5D000
	0x02697BB8 LDR X0, [X0 + 0x7B8]
	0x02697BBC BL 0x1C16CF4
	0x02697BC0 MOVZ W8, 0x1
	0x02697BC4 STRB W8, [X26 + 0x2CD]
	0x02697BC8 LDR X0, [X27]
	0x02697BCC LDR W8, [X0 + 0xE0]
	0x02697BD0 CBNZ W8, 0x2697BD8
	0x02697BD4 BL 0x1C16DFC
	0x02697BD8 MOV X0, X25
	0x02697BDC MOV X1, X24
	0x02697BE0 MOV X2, X31

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31], X31
	005 Move X8, [X2+32]
	006 And W2, W1, 1
	007 Move X8, [X8+192]
	008 Move X3, [X8+136]
	009 Move X8, X0
	010 Add X0, X31, 0
	011 Move X1, X8
	012 Call 0x299859C, X0, X1, X2
	013 Move X0, [X31]
	014 Move X1, [X31+8]
	015 Move X30, [X31+16]
	016 Add X31, X31, 32
	017 Return X0

Method: System.Threading.Tasks.Task ContinueWith(System.Action`1<System.Threading.Tasks.Task`1<TResult>> continuationAction, System.Threading.Tasks.TaskScheduler scheduler)

Disassembly:
	0x02697BE4 MOV X3, X23
	0x02697BE8 MOV X4, X22
	0x02697BEC MOV W5, W21
	0x02697BF0 MOV W6, W20
	0x02697BF4 MOV X7, X19
	0x02697BF8 STR X31, [X31]

ISIL:
	001 Move X8, [X3+32]
	002 Move X3, X31
	003 Move W4, W31
	004 Move X8, [X8+192]
	005 Move X5, [X8+152]

Method: System.Threading.Tasks.Task ContinueWith(System.Action`1<System.Threading.Tasks.Task`1<TResult>> continuationAction, System.Threading.Tasks.TaskScheduler scheduler, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions)

Disassembly:
	0x02697BFC BL 0x33EEEAC
	0x02697C00 LDP X20, X19, [X31 + 0x50]
	0x02697C04 LDP X22, X21, [X31 + 0x40]
	0x02697C08 LDP X24, X23, [X31 + 0x30]
	0x02697C0C LDP X26, X25, [X31 + 0x20]
	0x02697C10 LDP X30, X27, [X31 + 0x10]
	0x02697C14 ADD X31, X31, 0x60
	0x02697C18 RET
	0x02697C1C STR X30, [X31 - 0x60]!
	0x02697C20 STP X28, X27, [X31 + 0x10]
	0x02697C24 STP X26, X25, [X31 + 0x20]
	0x02697C28 STP X24, X23, [X31 + 0x30]
	0x02697C2C STP X22, X21, [X31 + 0x40]
	0x02697C30 STP X20, X19, [X31 + 0x50]
	0x02697C34 ADRP X27, 0x1D43000
	0x02697C38 ADRP X28, 0x1A5D000
	0x02697C3C LDRB W8, [X27 + 0x2CE]
	0x02697C40 LDR X28, [X28 + 0x7B8]
	0x02697C44 MOV X19, X7
	0x02697C48 MOV W20, W6
	0x02697C4C MOV W21, W5
	0x02697C50 MOV X22, X4
	0x02697C54 MOV X23, X3
	0x02697C58 MOV X24, X2
	0x02697C5C MOV X25, X1
	0x02697C60 MOV X26, X0
	0x02697C64 TBNZ X8, 0x0, 0x2697C7C
	0x02697C68 ADRP X0, 0x1A5D000
	0x02697C6C LDR X0, [X0 + 0x7B8]
	0x02697C70 BL 0x1C16CF4
	0x02697C74 MOVZ W8, 0x1
	0x02697C78 STRB W8, [X27 + 0x2CE]
	0x02697C7C LDR X0, [X28]
	0x02697C80 LDR W8, [X0 + 0xE0]
	0x02697C84 CBNZ W8, 0x2697C8C
	0x02697C88 BL 0x1C16DFC
	0x02697C8C MOV X0, X26
	0x02697C90 MOV X1, X25
	0x02697C94 MOV X2, X24
	0x02697C98 MOV X3, X23
	0x02697C9C MOV X4, X22
	0x02697CA0 MOV W5, W21
	0x02697CA4 MOV W6, W20
	0x02697CA8 MOV X7, X19
	0x02697CAC LDP X20, X19, [X31 + 0x50]
	0x02697CB0 LDP X22, X21, [X31 + 0x40]
	0x02697CB4 LDP X24, X23, [X31 + 0x30]
	0x02697CB8 LDP X26, X25, [X31 + 0x20]
	0x02697CBC LDP X28, X27, [X31 + 0x10]
	0x02697CC0 STR X31, [X31 + 0x60]
	0x02697CC4 LDR X30, [X31], #0x60
	0x02697CC8 B 0x33EEEAC
	0x02697CCC STR X30, [X31 - 0x50]!
	0x02697CD0 STP X26, X25, [X31 + 0x10]
	0x02697CD4 STP X24, X23, [X31 + 0x20]
	0x02697CD8 STP X22, X21, [X31 + 0x30]
	0x02697CDC STP X20, X19, [X31 + 0x40]
	0x02697CE0 MOV X19, X6
	0x02697CE4 CBZ X1, 0x2697D94
	0x02697CE8 MOV X20, X5
	0x02697CEC CBZ X5, 0x2697DB4
	0x02697CF0 MOV X23, X0
	0x02697CF4 LDR X0, [X19 + 0x20]
	0x02697CF8 MOV W25, W4
	0x02697CFC MOV W21, W3
	0x02697D00 MOV X22, X2
	0x02697D04 LDRB W8, [X0 + 0x135]
	0x02697D08 MOV X24, X1
	0x02697D0C TBNZ X8, 0x0, 0x2697D14
	0x02697D10 BL 0x1C5C684
	0x02697D14 LDR X8, [X0 + 0xC0]
	0x02697D18 LDR X0, [X8 + 0x8]
	0x02697D1C LDRB W8, [X0 + 0x135]
	0x02697D20 TBNZ X8, 0x0, 0x2697D28
	0x02697D24 BL 0x1C5C684
	0x02697D28 BL 0x1C16F10
	0x02697D2C MOV X26, X0
	0x02697D30 LDR X0, [X19 + 0x20]
	0x02697D34 ORR W19, W25, 0x2000
	0x02697D38 LDRB W8, [X0 + 0x135]
	0x02697D3C TBNZ X8, 0x0, 0x2697D44
	0x02697D40 BL 0x1C5C684
	0x02697D44 MOV X0, X26
	0x02697D48 MOV X1, X24
	0x02697D4C MOV X2, X23
	0x02697D50 MOV X3, X22
	0x02697D54 MOV W4, W21
	0x02697D58 MOV W5, W19
	0x02697D5C MOV X6, X20
	0x02697D60 BL 0x2697B6C

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x1D44000
	011 Move W8, [X25+703]
	012 Move X19, X5
	013 Move W20, W4
	014 Move X21, X3
	015 Move X22, X2
	016 Move X24, X1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x1A5E000
	023 Move X0, [X0+1976]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+703], W8
	027 Move [X31+8], X31
	028 Compare X24, 0
	029 JumpIfEqual {86}
	030 Compare X22, 0
	031 JumpIfEqual {93}
	032 Move X8, 0x1A5E000
	033 Move X8, [X8+1976]
	034 Move X0, [X8]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Add X1, X31, 12
	040 Add X2, X31, 8
	041 Move W0, W20
	042 Move X3, X31
	043 Call Task.CreationOptionsFromContinuationOptions, X0, X1, X2
	044 Move X8, [X19+32]
	045 Move W26, [X31+8]
	046 Move W25, [X31+12]
	047 Move X8, [X8+192]
	048 Move X0, [X8+160]
	049 Move W8, [X0+309]
	050 Move TEMP, X8
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {55}
	054 Call 0x1C5D684
	055 Call 0x1C17F10
	056 Move X8, [X19+32]
	057 Move X1, X23
	058 Move X2, X24
	059 Move X3, X31
	060 Move X8, [X8+192]
	061 Move W4, W25
	062 Move W5, W26
	063 Move X19, X0
	064 Move X6, [X8+168]
	065 Call 0x29A4F20, X0, X1, X2, X3, X4, X5
	066 Compare X23, 0
	067 JumpIfEqual {108}
	068 Move X0, X23
	069 Move X1, X19
	070 Move X2, X22
	071 Move X3, X21
	072 Move W4, W20
	073 Move X5, X31
	074 Call Task.ContinueWithCore, X0, X1, X2, X3, X4
	075 Move X0, X19
	076 Move X20, [X31+64]
	077 Move X19, [X31+72]
	078 Move X22, [X31+48]
	079 Move X21, [X31+56]
	080 Move X24, [X31+32]
	081 Move X23, [X31+40]
	082 Move X26, [X31+16]
	083 Move X25, [X31+24]
	084 Move X30, [X31+80]
	085 Return X0
	086 Move X0, 0x1A62000
	087 Move X0, [X0+1320]
	088 Call 0x1C17D08
	089 Call 0x1C17F10
	090 Move X20, X0
	091 Move X0, 0x1A87000
	092 Move X0, [X0+1568]
	093 Move X0, 0x1A62000
	094 Move X0, [X0+1320]
	095 Call 0x1C17D08
	096 Call 0x1C17F10
	097 Move X20, X0
	098 Move X0, 0x1A85000
	099 Move X0, [X0+1880]
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X20
	103 Move X2, X31
	104 Call ArgumentNullException..ctor, X0, X1
	105 Move X0, X20
	106 Move X1, X19
	107 Call 0x1C17DEC
	108 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<TNewResult> ContinueWith(System.Func`2<System.Threading.Tasks.Task`1<TResult>, TNewResult> continuationFunction)

Disassembly:
	0x02139898 LDR X0, [X0 + 0x758]
	0x0213989C BL 0x1C16D08
	0x021398A0 MOV X1, X0
	0x021398A4 MOV X0, X20
	0x021398A8 MOV X2, X31
	0x021398AC BL 0x330E100
	0x021398B0 MOV X0, X20
	0x021398B4 MOV X1, X19
	0x021398B8 BL 0x1C16DEC
	0x021398BC BL 0x1C16F20
	0x021398C0 SUB X31, X31, 0x60
	0x021398C4 STP X30, X27, [X31 + 0x10]
	0x021398C8 STP X26, X25, [X31 + 0x20]
	0x021398CC STP X24, X23, [X31 + 0x30]
	0x021398D0 STP X22, X21, [X31 + 0x40]
	0x021398D4 STP X20, X19, [X31 + 0x50]
	0x021398D8 LDR X8, [X6 + 0x38]
	0x021398DC MOV X19, X6
	0x021398E0 MOV W20, W5
	0x021398E4 MOV X21, X4
	0x021398E8 MOV X22, X3
	0x021398EC MOV X24, X2
	0x021398F0 MOV X25, X1
	0x021398F4 MOV X23, X0
	0x021398F8 CBNZ X8, 0x2139918
	0x021398FC ADRP X0, 0x1FBB000
	0x02139900 LDR X0, [X0 + 0x7B8]
	0x02139904 BL 0x1C16CF4
	0x02139908 LDR X8, [X19 + 0x38]
	0x0213990C CBNZ X8, 0x2139918
	0x02139910 MOV X0, X19
	0x02139914 BL 0x1C5C6E0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X20, X2
	007 Move X19, X1
	008 Move X21, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {19}
	011 Move X0, 0x1FC3000
	012 Move X0, [X0+2024]
	013 Call 0x1C17CF4
	014 Move X8, [X20+56]
	015 Compare X8, 0
	016 JumpIfNotEqual {19}
	017 Move X0, X20
	018 Call 0x1C5D6E0
	019 Move X8, 0x1FC3000
	020 Move X8, [X8+2024]
	021 Move X0, [X8]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X31
	027 Call TaskScheduler.get_Current
	028 Move X8, [X20+56]
	029 Move X1, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X2, X0
	033 Move X5, [X8+8]
	034 Move X0, X21
	035 Move X3, X31
	036 Move W4, W31
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Call Task`1<Object>.ContinueWith, X0, X1, X2, X3, X4
	040 Return X0

Method: System.Threading.Tasks.Task`1<TNewResult> ContinueWith(System.Func`2<System.Threading.Tasks.Task`1<TResult>, TNewResult> continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions)

Disassembly:
	0x021396A8 MOV X19, X0
	0x021396AC BL 0x29A02AC
	0x021396B0 CBZ X23, 0x213974C
	0x021396B4 MOV X0, X23
	0x021396B8 MOV X1, X19
	0x021396BC MOV X2, X22
	0x021396C0 MOV X3, X21
	0x021396C4 MOV W4, W20
	0x021396C8 MOV X5, X31
	0x021396CC BL 0x33F43E4
	0x021396D0 MOV X0, X19
	0x021396D4 LDP X20, X19, [X31 + 0x50]
	0x021396D8 LDP X22, X21, [X31 + 0x40]
	0x021396DC LDP X24, X23, [X31 + 0x30]
	0x021396E0 LDP X26, X25, [X31 + 0x20]
	0x021396E4 LDP X30, X27, [X31 + 0x10]
	0x021396E8 ADD X31, X31, 0x60
	0x021396EC RET
	0x021396F0 ADRP X0, 0x1FBF000
	0x021396F4 LDR X0, [X0 + 0x528]
	0x021396F8 BL 0x1C16D08
	0x021396FC BL 0x1C16F10
	0x02139700 MOV X20, X0
	0x02139704 ADRP X0, 0x1FE2000
	0x02139708 LDR X0, [X0 + 0x750]
	0x0213970C B 0x213972C
	0x02139710 ADRP X0, 0x1FBF000
	0x02139714 LDR X0, [X0 + 0x528]
	0x02139718 BL 0x1C16D08
	0x0213971C BL 0x1C16F10
	0x02139720 MOV X20, X0
	0x02139724 ADRP X0, 0x1FE2000
	0x02139728 LDR X0, [X0 + 0x758]
	0x0213972C BL 0x1C16D08
	0x02139730 MOV X1, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X21, X3
	008 Move W19, W2
	009 Move X20, X1
	010 Move X22, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {21}
	013 Move X0, 0x1FC3000
	014 Move X0, [X0+2024]
	015 Call 0x1C17CF4
	016 Move X8, [X21+56]
	017 Compare X8, 0
	018 JumpIfNotEqual {21}
	019 Move X0, X21
	020 Call 0x1C5D6E0
	021 Move X8, 0x1FC3000
	022 Move X8, [X8+2024]
	023 Move X0, [X8]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X31
	029 Call TaskScheduler.get_Current
	030 Move X8, [X21+56]
	031 Move X2, X0
	032 Move X0, X22
	033 Move X1, X20
	034 Move X5, [X8+8]
	035 Move W4, W19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X3, X31
	041 Move X30, [X31+48]

Method: System.Threading.Tasks.Task`1<TNewResult> ContinueWith(System.Func`2<System.Threading.Tasks.Task`1<TResult>, TNewResult> continuationFunction, System.Threading.Tasks.TaskScheduler scheduler, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions)

Disassembly:
	0x02139734 MOV X0, X20
	0x02139738 MOV X2, X31
	0x0213973C BL 0x330E100
	0x02139740 MOV X0, X20
	0x02139744 MOV X1, X19
	0x02139748 BL 0x1C16DEC
	0x0213974C BL 0x1C16F20
	0x02139750 SUB X31, X31, 0x60
	0x02139754 STP X30, X27, [X31 + 0x10]
	0x02139758 STP X26, X25, [X31 + 0x20]
	0x0213975C STP X24, X23, [X31 + 0x30]
	0x02139760 STP X22, X21, [X31 + 0x40]
	0x02139764 STP X20, X19, [X31 + 0x50]
	0x02139768 LDR X8, [X6 + 0x38]
	0x0213976C MOV X19, X6
	0x02139770 MOV W20, W5
	0x02139774 MOV X21, X4
	0x02139778 MOV X22, X3
	0x0213977C MOV X24, X2
	0x02139780 MOV X25, X1
	0x02139784 MOV X23, X0
	0x02139788 CBNZ X8, 0x21397A8
	0x0213978C ADRP X0, 0x1FBB000
	0x02139790 LDR X0, [X0 + 0x7B8]
	0x02139794 BL 0x1C16CF4
	0x02139798 LDR X8, [X19 + 0x38]
	0x0213979C CBNZ X8, 0x21397A8
	0x021397A0 MOV X0, X19
	0x021397A4 BL 0x1C5C6E0
	0x021397A8 STR X31, [X31 + 0x8]
	0x021397AC CBZ X25, 0x2139860
	0x021397B0 CBZ X22, 0x2139880
	0x021397B4 ADRP X8, 0x1FBB000
	0x021397B8 LDR X8, [X8 + 0x7B8]
	0x021397BC LDR X0, [X8]
	0x021397C0 LDR W8, [X0 + 0xE0]
	0x021397C4 CBNZ W8, 0x21397CC
	0x021397C8 BL 0x1C16DFC
	0x021397CC ADD X1, X31, 0xC
	0x021397D0 ADD X2, X31, 0x8
	0x021397D4 MOV W0, W20
	0x021397D8 MOV X3, X31
	0x021397DC BL 0x33F4210
	0x021397E0 LDR X8, [X19 + 0x38]
	0x021397E4 LDP W27, W26, [X31 + 0x8]
	0x021397E8 LDR X0, [X8 + 0x8]
	0x021397EC LDRB W8, [X0 + 0x135]
	0x021397F0 TBNZ X8, 0x0, 0x21397F8
	0x021397F4 BL 0x1C5C684
	0x021397F8 BL 0x1C16F10
	0x021397FC LDR X8, [X19 + 0x38]
	0x02139800 MOV X1, X23
	0x02139804 MOV X2, X25
	0x02139808 MOV X3, X24
	0x0213980C LDR X6, [X8 + 0x10]
	0x02139810 MOV W4, W26
	0x02139814 MOV W5, W27
	0x02139818 MOV X19, X0
	0x0213981C BL 0x29A0454
	0x02139820 CBZ X23, 0x21398BC
	0x02139824 MOV X0, X23
	0x02139828 MOV X1, X19
	0x0213982C MOV X2, X22
	0x02139830 MOV X3, X21
	0x02139834 MOV W4, W20
	0x02139838 MOV X5, X31
	0x0213983C BL 0x33F43E4
	0x02139840 MOV X0, X19
	0x02139844 LDP X20, X19, [X31 + 0x50]
	0x02139848 LDP X22, X21, [X31 + 0x40]
	0x0213984C LDP X24, X23, [X31 + 0x30]
	0x02139850 LDP X26, X25, [X31 + 0x20]
	0x02139854 LDP X30, X27, [X31 + 0x10]
	0x02139858 ADD X31, X31, 0x60
	0x0213985C RET
	0x02139860 ADRP X0, 0x1FBF000
	0x02139864 LDR X0, [X0 + 0x528]
	0x02139868 BL 0x1C16D08
	0x0213986C BL 0x1C16F10
	0x02139870 MOV X20, X0
	0x02139874 ADRP X0, 0x1FE2000
	0x02139878 LDR X0, [X0 + 0x750]
	0x0213987C B 0x213989C
	0x02139880 ADRP X0, 0x1FBF000
	0x02139884 LDR X0, [X0 + 0x528]
	0x02139888 BL 0x1C16D08
	0x0213988C BL 0x1C16F10
	0x02139890 MOV X20, X0
	0x02139894 ADRP X0, 0x1FE2000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X8, [X5+56]
	011 Move X19, X5
	012 Move W20, W4
	013 Move X21, X3
	014 Move X22, X2
	015 Move X24, X1
	016 Move X23, X0
	017 Compare X8, 0
	018 JumpIfNotEqual {27}
	019 Move X0, 0x1FBC000
	020 Move X0, [X0+1976]
	021 Call 0x1C17CF4
	022 Move X8, [X19+56]
	023 Compare X8, 0
	024 JumpIfNotEqual {27}
	025 Move X0, X19
	026 Call 0x1C5D6E0
	027 Move [X31+8], X31
	028 Compare X24, 0
	029 JumpIfEqual {84}
	030 Compare X22, 0
	031 JumpIfEqual {91}
	032 Move X8, 0x1FBC000
	033 Move X8, [X8+1976]
	034 Move X0, [X8]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Add X1, X31, 12
	040 Add X2, X31, 8
	041 Move W0, W20
	042 Move X3, X31
	043 Call Task.CreationOptionsFromContinuationOptions, X0, X1, X2
	044 Move X8, [X19+56]
	045 Move W26, [X31+8]
	046 Move W25, [X31+12]
	047 Move X0, [X8+8]
	048 Move W8, [X0+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {54}
	053 Call 0x1C5D684
	054 Call 0x1C17F10
	055 Move X8, [X19+56]
	056 Move X1, X23
	057 Move X2, X24
	058 Move X3, X31
	059 Move X6, [X8+16]
	060 Move W4, W25
	061 Move W5, W26
	062 Move X19, X0
	063 Call 0x29A1104, X0, X1, X2, X3, X4, X5
	064 Compare X23, 0
	065 JumpIfEqual {106}
	066 Move X0, X23
	067 Move X1, X19
	068 Move X2, X22
	069 Move X3, X21
	070 Move W4, W20
	071 Move X5, X31
	072 Call Task.ContinueWithCore, X0, X1, X2, X3, X4
	073 Move X0, X19
	074 Move X20, [X31+64]
	075 Move X19, [X31+72]
	076 Move X22, [X31+48]
	077 Move X21, [X31+56]
	078 Move X24, [X31+32]
	079 Move X23, [X31+40]
	080 Move X26, [X31+16]
	081 Move X25, [X31+24]
	082 Move X30, [X31+80]
	083 Return X0
	084 Move X0, 0x1FC0000
	085 Move X0, [X0+1320]
	086 Call 0x1C17D08
	087 Call 0x1C17F10
	088 Move X20, X0
	089 Move X0, 0x1FE3000
	090 Move X0, [X0+1872]
	091 Move X0, 0x1FC0000
	092 Move X0, [X0+1320]
	093 Call 0x1C17D08
	094 Call 0x1C17F10
	095 Move X20, X0
	096 Move X0, 0x1FE3000
	097 Move X0, [X0+1880]
	098 Call 0x1C17D08
	099 Move X1, X0
	100 Move X0, X20
	101 Move X2, X31
	102 Call ArgumentNullException..ctor, X0, X1
	103 Move X0, X20
	104 Move X1, X19
	105 Call 0x1C17DEC
	106 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<TNewResult> ContinueWith(System.Func`3<System.Threading.Tasks.Task`1<TResult>, System.Object, TNewResult> continuationFunction, System.Object state, System.Threading.Tasks.TaskScheduler scheduler, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions)

Disassembly:
	0x0213A5E0 MOV X25, X1
	0x0213A5E4 MOV X23, X0
	0x0213A5E8 CBNZ X8, 0x213A608
	0x0213A5EC ADRP X0, 0x1FBA000
	0x0213A5F0 LDR X0, [X0 + 0x7B8]
	0x0213A5F4 BL 0x1C16CF4
	0x0213A5F8 LDR X8, [X19 + 0x38]
	0x0213A5FC CBNZ X8, 0x213A608
	0x0213A600 MOV X0, X19
	0x0213A604 BL 0x1C5C6E0
	0x0213A608 STR X31, [X31 + 0x8]
	0x0213A60C CBZ X25, 0x213A6C0
	0x0213A610 CBZ X22, 0x213A6E0
	0x0213A614 ADRP X8, 0x1FBA000
	0x0213A618 LDR X8, [X8 + 0x7B8]
	0x0213A61C LDR X0, [X8]
	0x0213A620 LDR W8, [X0 + 0xE0]
	0x0213A624 CBNZ W8, 0x213A62C
	0x0213A628 BL 0x1C16DFC
	0x0213A62C ADD X1, X31, 0xC
	0x0213A630 ADD X2, X31, 0x8
	0x0213A634 MOV W0, W20
	0x0213A638 MOV X3, X31
	0x0213A63C BL 0x33F4210
	0x0213A640 LDR X8, [X19 + 0x38]
	0x0213A644 LDP W27, W26, [X31 + 0x8]
	0x0213A648 LDR X0, [X8 + 0x8]
	0x0213A64C LDRB W8, [X0 + 0x135]
	0x0213A650 TBNZ X8, 0x0, 0x213A658
	0x0213A654 BL 0x1C5C684
	0x0213A658 BL 0x1C16F10
	0x0213A65C LDR X8, [X19 + 0x38]
	0x0213A660 MOV X1, X23
	0x0213A664 MOV X2, X25
	0x0213A668 MOV X3, X24
	0x0213A66C LDR X6, [X8 + 0x10]
	0x0213A670 MOV W4, W26
	0x0213A674 MOV W5, W27
	0x0213A678 MOV X19, X0
	0x0213A67C BL 0x29A1528
	0x0213A680 CBZ X23, 0x213A71C
	0x0213A684 MOV X0, X23
	0x0213A688 MOV X1, X19
	0x0213A68C MOV X2, X22
	0x0213A690 MOV X3, X21
	0x0213A694 MOV W4, W20
	0x0213A698 MOV X5, X31
	0x0213A69C BL 0x33F43E4
	0x0213A6A0 MOV X0, X19
	0x0213A6A4 LDP X20, X19, [X31 + 0x50]
	0x0213A6A8 LDP X22, X21, [X31 + 0x40]
	0x0213A6AC LDP X24, X23, [X31 + 0x30]
	0x0213A6B0 LDP X26, X25, [X31 + 0x20]
	0x0213A6B4 LDP X30, X27, [X31 + 0x10]
	0x0213A6B8 ADD X31, X31, 0x60
	0x0213A6BC RET
	0x0213A6C0 ADRP X0, 0x1FBE000
	0x0213A6C4 LDR X0, [X0 + 0x528]
	0x0213A6C8 BL 0x1C16D08
	0x0213A6CC BL 0x1C16F10
	0x0213A6D0 MOV X20, X0
	0x0213A6D4 ADRP X0, 0x1FE1000
	0x0213A6D8 LDR X0, [X0 + 0x750]
	0x0213A6DC B 0x213A6FC
	0x0213A6E0 ADRP X0, 0x1FBE000
	0x0213A6E4 LDR X0, [X0 + 0x528]
	0x0213A6E8 BL 0x1C16D08
	0x0213A6EC BL 0x1C16F10
	0x0213A6F0 MOV X20, X0
	0x0213A6F4 ADRP X0, 0x1FE1000
	0x0213A6F8 LDR X0, [X0 + 0x758]
	0x0213A6FC BL 0x1C16D08
	0x0213A700 MOV X1, X0
	0x0213A704 MOV X0, X20
	0x0213A708 MOV X2, X31
	0x0213A70C BL 0x330E100
	0x0213A710 MOV X0, X20
	0x0213A714 MOV X1, X19
	0x0213A718 BL 0x1C16DEC
	0x0213A71C BL 0x1C16F20
	0x0213A720 SUB X31, X31, 0x60
	0x0213A724 STP X30, X27, [X31 + 0x10]
	0x0213A728 STP X26, X25, [X31 + 0x20]
	0x0213A72C STP X24, X23, [X31 + 0x30]
	0x0213A730 STP X22, X21, [X31 + 0x40]
	0x0213A734 STP X20, X19, [X31 + 0x50]
	0x0213A738 LDR X8, [X6 + 0x38]
	0x0213A73C MOV X19, X6
	0x0213A740 MOV W20, W5
	0x0213A744 MOV X21, X4
	0x0213A748 MOV X22, X3
	0x0213A74C MOV X24, X2

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X8, [X6+56]
	013 Move X19, X6
	014 Move W20, W5
	015 Move X21, X4
	016 Move X22, X3
	017 Move X24, X2
	018 Move X25, X1
	019 Move X23, X0
	020 Compare X8, 0
	021 JumpIfNotEqual {30}
	022 Move X0, 0x1FBB000
	023 Move X0, [X0+1976]
	024 Call 0x1C17CF4
	025 Move X8, [X19+56]
	026 Compare X8, 0
	027 JumpIfNotEqual {30}
	028 Move X0, X19
	029 Call 0x1C5D6E0
	030 Move [X31+8], X31
	031 Compare X25, 0
	032 JumpIfEqual {89}
	033 Compare X22, 0
	034 JumpIfEqual {96}
	035 Move X8, 0x1FBB000
	036 Move X8, [X8+1976]
	037 Move X0, [X8]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Add X1, X31, 12
	043 Add X2, X31, 8
	044 Move W0, W20
	045 Move X3, X31
	046 Call Task.CreationOptionsFromContinuationOptions, X0, X1, X2
	047 Move X8, [X19+56]
	048 Move W27, [X31+8]
	049 Move W26, [X31+12]
	050 Move X0, [X8+8]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Call 0x1C17F10
	058 Move X8, [X19+56]
	059 Move X1, X23
	060 Move X2, X25
	061 Move X3, X24
	062 Move X6, [X8+16]
	063 Move W4, W26
	064 Move W5, W27
	065 Move X19, X0
	066 Call ContinuationResultTaskFromResultTask`2<Object, Nullable`1<Int32>>..ctor, X0, X1, X2, X3, X4, X5
	067 Compare X23, 0
	068 JumpIfEqual {111}
	069 Move X0, X23
	070 Move X1, X19
	071 Move X2, X22
	072 Move X3, X21
	073 Move W4, W20
	074 Move X5, X31
	075 Call Task.ContinueWithCore, X0, X1, X2, X3, X4
	076 Move X0, X19
	077 Move X20, [X31+80]
	078 Move X19, [X31+88]
	079 Move X22, [X31+64]
	080 Move X21, [X31+72]
	081 Move X24, [X31+48]
	082 Move X23, [X31+56]
	083 Move X26, [X31+32]
	084 Move X25, [X31+40]
	085 Move X30, [X31+16]
	086 Move X27, [X31+24]
	087 Add X31, X31, 96
	088 Return X0
	089 Move X0, 0x1FBF000
	090 Move X0, [X0+1320]
	091 Call 0x1C17D08
	092 Call 0x1C17F10
	093 Move X20, X0
	094 Move X0, 0x1FE2000
	095 Move X0, [X0+1872]
	096 Move X0, 0x1FBF000
	097 Move X0, [X0+1320]
	098 Call 0x1C17D08
	099 Call 0x1C17F10
	100 Move X20, X0
	101 Move X0, 0x1FE2000
	102 Move X0, [X0+1880]
	103 Call 0x1C17D08
	104 Move X1, X0
	105 Move X0, X20
	106 Move X2, X31
	107 Call ArgumentNullException..ctor, X0, X1
	108 Move X0, X20
	109 Move X1, X19
	110 Call 0x1C17DEC
	111 Call 0x1C17F20

