Type: System.Threading.Tasks.ValueTask/ValueTaskSourceAsTask/<>c

Method: System.Void .cctor()

Disassembly:
	0x033EF15C BL 0x33DD664
	0x033EF160 B 0x33EF1A4
	0x033EF164 CBNZ W8, 0x33EF170
	0x033EF168 BL 0x1C16DFC
	0x033EF16C LDR X0, [X23]
	0x033EF170 LDR X8, [X25]
	0x033EF174 LDR X9, [X0 + 0xB8]
	0x033EF178 LDR W10, [X8 + 0xE0]
	0x033EF17C LDR X21, [X9 + 0x18]
	0x033EF180 CBNZ W10, 0x33EF18C
	0x033EF184 MOV X0, X8
	0x033EF188 BL 0x1C16DFC
	0x033EF18C ADD X8, X31, 0x0
	0x033EF190 ADD X0, X31, 0x38
	0x033EF194 MOV X1, X21
	0x033EF198 MOV X2, X19
	0x033EF19C MOV X3, X31
	0x033EF1A0 BL 0x33DD664
	0x033EF1A4 LDR V0, [X31]
	0x033EF1A8 LDR X8, [X31 + 0x10]
	0x033EF1AC ADRP X9, 0xD3E000
	0x033EF1B0 STR V0, [X31 + 0x2]
	0x033EF1B4 STR X8, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xFEF000
	005 Move X20, 0xD3F000
	006 Move W8, [X19+1081]
	007 Move X20, [X20+1624]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD3F000
	013 Move X0, [X0+1624]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1081], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x033EF1B8 LDR V0, [X31 + 0x2]
	0x033EF1BC LDR X9, [X9 + 0x20]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <.cctor>b__4_0(System.Object state)

Disassembly:
	0x033EF1C0 STR X8, [X31 + 0x10]
	0x033EF1C4 STR V0, [X31]
	0x033EF1C8 LDR X0, [X9]
	0x033EF1CC ADD X1, X31, 0x0
	0x033EF1D0 BL 0x1C16E04
	0x033EF1D4 STR X0, [X20 + 0x30]
	0x033EF1D8 LDP X20, X19, [X31 + 0x70]
	0x033EF1DC LDP X22, X21, [X31 + 0x60]
	0x033EF1E0 LDP X24, X23, [X31 + 0x50]
	0x033EF1E4 LDP X30, X25, [X31 + 0x40]
	0x033EF1E8 ADD X31, X31, 0x80
	0x033EF1EC RET
	0x033EF1F0 B 0x33EF210
	0x033EF1F4 B 0x33EF210
	0x033EF1F8 B 0x33EF210
	0x033EF1FC B 0x33EF210
	0x033EF200 B 0x33EF210
	0x033EF204 B 0x33EF210
	0x033EF208 B 0x33EF210
	0x033EF20C B 0x33EF210
	0x033EF210 MOV X20, X0
	0x033EF214 CMP W1, 0x1
	0x033EF218 B.NE 0x33EF2B4
	0x033EF21C MOV X0, X20
	0x033EF220 BL 0x3EB1AD0
	0x033EF224 MOV X20, X0
	0x033EF228 ADRP X0, 0xD0A000
	0x033EF22C LDR X0, [X0 + 0xCC0]
	0x033EF230 BL 0x1C16D08
	0x033EF234 LDR X8, [X20]
	0x033EF238 LDR X1, [X8]
	0x033EF23C BL 0x1C17270
	0x033EF240 TBZ X0, 0x0, 0x33EF268
	0x033EF244 LDR X20, [X20]
	0x033EF248 BL 0x3EB1AE0
	0x033EF24C LDR X8, [X19 + 0x30]
	0x033EF250 CBZ X8, 0x33EF260
	0x033EF254 MOV X0, X19
	0x033EF258 BL 0x33EF398
	0x033EF25C TBNZ X0, 0x2, 0x33EF288
	0x033EF260 MOV X0, X20
	0x033EF264 BL 0x1C16F18
	0x033EF268 MOVZ W0, 0x8
	0x033EF26C BL 0x3EB1AF0
	0x033EF270 LDR X8, [X20]
	0x033EF274 STR X8, [X0]
	0x033EF278 ADRP X1, 0xAC5000
	0x033EF27C ADD X1, X1, 0xE58
	0x033EF280 MOV X2, X31
	0x033EF284 BL 0x3EB1B00
	0x033EF288 LDR X0, [X19 + 0x30]
	0x033EF28C CBNZ X0, 0x33EF294
	0x033EF290 BL 0x1C16F20
	0x033EF294 BL 0x33EF398
	0x033EF298 TBNZ X0, 0x3, 0x33EF260
	0x033EF29C LDR X0, [X19 + 0x30]
	0x033EF2A0 CBZ X0, 0x33EF290
	0x033EF2A4 BL 0x33EF5C4
	0x033EF2A8 B 0x33EF260
	0x033EF2AC MOV X20, X0
	0x033EF2B0 BL 0x3EB1AE0
	0x033EF2B4 MOV X0, X20
	0x033EF2B8 BL 0x1D2C690
	0x033EF2BC BL 0x1990590
	0x033EF2C0 STR X30, [X31 - 0x30]!
	0x033EF2C4 STP X22, X21, [X31 + 0x10]
	0x033EF2C8 STP X20, X19, [X31 + 0x20]
	0x033EF2CC ADRP X22, 0xFEE000
	0x033EF2D0 ADRP X21, 0xD2C000
	0x033EF2D4 LDRB W8, [X22 + 0x455]
	0x033EF2D8 LDR X21, [X21 + 0x580]
	0x033EF2DC MOV X19, X1
	0x033EF2E0 MOV X20, X0
	0x033EF2E4 TBNZ X8, 0x0, 0x33EF2FC
	0x033EF2E8 ADRP X0, 0xD2C000
	0x033EF2EC LDR X0, [X0 + 0x580]
	0x033EF2F0 BL 0x1C16CF4
	0x033EF2F4 MOVZ W8, 0x1
	0x033EF2F8 STRB W8, [X22 + 0x455]
	0x033EF2FC LDR X0, [X21]
	0x033EF300 LDR W8, [X0 + 0xE0]
	0x033EF304 CBNZ W8, 0x33EF310
	0x033EF308 BL 0x1C16DFC
	0x033EF30C LDR X0, [X21]
	0x033EF310 LDR X8, [X0 + 0xB8]
	0x033EF314 LDR X8, [X8 + 0x8]
	0x033EF318 CMP X19, X8
	0x033EF31C B.EQ 0x33EF344
	0x033EF320 LDR X21, [X20 + 0x48]
	0x033EF324 BL 0x1C16D44
	0x033EF328 CBNZ X21, 0x33EF340
	0x033EF32C MOV X0, X20
	0x033EF330 MOV W1, W31
	0x033EF334 BL 0x33F0788
	0x033EF338 MOV X21, X0
	0x033EF33C CBZ X0, 0x33EF354
	0x033EF340 STR X19, [X21 + 0x10]
	0x033EF344 LDP X20, X19, [X31 + 0x20]
	0x033EF348 LDP X22, X21, [X31 + 0x10]
	0x033EF34C LDR X30, [X31], #0x30
	0x033EF350 RET
	0x033EF354 BL 0x1C16F20
	0x033EF358 STP X30, X21, [X31 - 0x20]!
	0x033EF35C STP X20, X19, [X31 + 0x10]
	0x033EF360 LDR X20, [X0 + 0x48]
	0x033EF364 MOV X19, X0
	0x033EF368 MOV W21, W1
	0x033EF36C BL 0x1C16D44
	0x033EF370 CBZ X20, 0x33EF384
	0x033EF374 MOV X0, X20
	0x033EF378 LDP X20, X19, [X31 + 0x10]
	0x033EF37C LDP X30, X21, [X31], #0x20
	0x033EF380 RET
	0x033EF384 MOV X0, X19
	0x033EF388 LDP X20, X19, [X31 + 0x10]
	0x033EF38C AND W1, W21, 0x1
	0x033EF390 LDP X30, X21, [X31], #0x20
	0x033EF394 B 0x33F0788
	0x033EF398 STP X30, X21, [X31 - 0x20]!
	0x033EF39C STP X20, X19, [X31 + 0x10]
	0x033EF3A0 ADRP X21, 0xFEE000
	0x033EF3A4 ADRP X20, 0xD05000
	0x033EF3A8 LDRB W8, [X21 + 0x445]
	0x033EF3AC LDR X20, [X20 + 0x7B8]
	0x033EF3B0 MOV X19, X0
	0x033EF3B4 TBNZ X8, 0x0, 0x33EF3CC
	0x033EF3B8 ADRP X0, 0xD05000
	0x033EF3BC LDR X0, [X0 + 0x7B8]
	0x033EF3C0 BL 0x1C16CF4
	0x033EF3C4 MOVZ W8, 0x1
	0x033EF3C8 STRB W8, [X21 + 0x445]
	0x033EF3CC LDRH W19, [X19 + 0x38]
	0x033EF3D0 BL 0x1C16D44
	0x033EF3D4 LDR X0, [X20]
	0x033EF3D8 LDR W8, [X0 + 0xE0]
	0x033EF3DC CBNZ W8, 0x33EF3E4
	0x033EF3E0 BL 0x1C16DFC
	0x033EF3E4 MOV W0, W19
	0x033EF3E8 LDP X20, X19, [X31 + 0x10]
	0x033EF3EC LDP X30, X21, [X31], #0x20
	0x033EF3F0 RET
	0x033EF3F4 STP X30, X23, [X31 - 0x30]!
	0x033EF3F8 STP X22, X21, [X31 + 0x10]
	0x033EF3FC STP X20, X19, [X31 + 0x20]
	0x033EF400 LDR W21, [X0 + 0x38]
	0x033EF404 MOV X19, X0
	0x033EF408 MOV W20, W1
	0x033EF40C BL 0x1C16D44
	0x033EF410 TBNZ X21, 0x10, 0x33EF428
	0x033EF414 MOV X21, X31
	0x033EF418 MOV W22, W31
	0x033EF41C MOV W23, W31
	0x033EF420 TBZ X22, 0x0, 0x33EF4A8
	0x033EF424 B 0x33EF4B0
	0x033EF428 LDR X22, [X19 + 0x28]
	0x033EF42C CBZ X22, 0x33EF464
	0x033EF430 LDR X8, [X22]
	0x033EF434 LDP X9, X2, [X8 + 0x198]
	0x033EF438 MOV X0, X22
	0x033EF43C MOV X1, X19
	0x033EF440 BLR X9
	0x033EF444 MOV X21, X31
	0x033EF448 AND W23, W0, 0x1
	0x033EF44C LDR X8, [X22]
	0x033EF450 MOV X0, X22
	0x033EF454 LDP X9, X1, [X8 + 0x1B8]
	0x033EF458 BLR X9
	0x033EF45C AND W8, W0, 0x1
	0x033EF460 B 0x33EF470

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xFEF000
	009 Move W8, [X20+1082]
	010 Move X19, X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xD34000
	016 Move X0, [X0+3752]
	017 Call 0x1C17CF4
	018 Move X0, 0xD3F000
	019 Move X0, [X0+1640]
	020 Call 0x1C17CF4
	021 Move X0, 0xD3F000
	022 Move X0, [X0+1592]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1082], W8
	026 Compare X19, 0
	027 JumpIfEqual {33}
	028 Move X8, 0xD3F000
	029 Move X8, [X8+1592]
	030 Move X9, [X19]
	031 Move X8, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X20, [X31+48]
	034 Move X19, [X31+56]
	035 Move X22, [X31+32]
	036 Move X21, [X31+40]
	037 Move X30, [X31+16]
	038 Move X23, [X31+24]
	039 Move W0, 40
	040 Move X1, X31
	041 Add X31, X31, 64
	042 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0
	043 Return 
	044 Move X21, [X19+88]
	045 Compare X21, 0
	046 JumpIfEqual {33}
	047 Move [X19+88], X31
	048 Move X23, 0xD34000
	049 Move X8, [X21]
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Move X23, [X23+3752]
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Move X1, [X23]
	054 Compare X9, 0
	055 JumpIfEqual {62}
	056 Move X10, [X8+176]
	057 Add X10, X10, 8
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Subtract X9, X9, 1
	061 Add X10, X10, 16
	062 Move X0, X21
	063 Move W2, W31
	064 Call 0x1C5D788
	065 NotImplemented "Instruction LDRSW not yet implemented."
	066 Add X8, X8, X9
	067 Add X0, X8, 312
	068 Move X8, [X0]
	069 Move X2, [X0+8]
	070 Move X0, X21
	071 Move W1, W20
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move X8, [X21]
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Move X1, [X23]
	076 Move W20, W0
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Compare X9, 0
	079 JumpIfEqual {86}
	080 Move X10, [X8+176]
	081 Add X10, X10, 8
	082 NotImplemented "Instruction LDUR not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Subtract X9, X9, 1
	085 Add X10, X10, 16
	086 Move W2, 2
	087 Move X0, X21
	088 Call 0x1C5D788
	089 Move W9, [X10]
	090 Add W9, W9, 2
	091 Add X8, X8, W9
	092 Add X0, X8, 312
	093 Move X8, [X0]
	094 Move X2, [X0+8]
	095 Move X0, X21
	096 Move W1, W22
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move X8, 0xD3F000
	099 Move X8, [X8+1640]
	100 Move X2, [X8]
	101 Move X0, X19
	102 Move X1, X31
	103 Call Task`1<VoidTaskResult>.TrySetResult, X0, X1
	104 Move X20, [X31+48]
	105 Move X19, [X31+56]
	106 Move X22, [X31+32]
	107 Move X21, [X31+40]
	108 Move X30, [X31+16]
	109 Move X23, [X31+24]
	110 Add X31, X31, 64
	111 Return 
	112 Move X21, X0
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X0, X21
	115 Call 0x3EB2AD0
	116 Move X21, X0
	117 Move X0, 0xD05000
	118 Move X0, [X0+2000]
	119 Call 0x1C17D08
	120 Move X8, [X21]
	121 Move X1, [X8]
	122 Call 0x1C18270
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfNotEqual {175}
	127 Move X21, [X21]
	128 Call 0x3EB2AE0
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X0, 0xD0D000
	131 Move X0, [X0+2216]
	132 Call 0x1C17D08
	133 Compare X21, 0
	134 JumpIfEqual {143}
	135 Move X8, [X21]
	136 Move W9, [X0+304]
	137 Move W10, [X8+304]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X8, [X8+200]
	140 Add X8, X8, X9
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Add X0, X31, 8
	144 Move W1, 1
	145 Move X2, X31
	146 Move [X31+8], X31
	147 Call CancellationToken..ctor, X0, X1
	148 Move X1, [X31+8]
	149 Move X0, X19
	150 Move X2, X31
	151 Call Task.TrySetCanceled, X0, X1, X2
	152 Move X0, X19
	153 Move X1, X21
	154 Move X20, [X31+48]
	155 Move X19, [X31+56]
	156 Move X22, [X31+32]
	157 Move X21, [X31+40]
	158 Move X30, [X31+16]
	159 Move X23, [X31+24]
	160 Add X31, X31, 64
	161 Call Task.TrySetException, X0, X1
	162 Return 
	163 Move X1, [X21+144]
	164 Move X0, X19
	165 Move X2, X21
	166 Move X20, [X31+48]
	167 Move X19, [X31+56]
	168 Move X22, [X31+32]
	169 Move X21, [X31+40]
	170 Move X30, [X31+16]
	171 Move X23, [X31+24]
	172 Add X31, X31, 64
	173 Call Task.TrySetCanceled, X0, X1, X2
	174 Return 
	175 Move W0, 8
	176 Call 0x3EB2AF0
	177 Move X8, [X21]
	178 Move [X0], X8
	179 Move X1, 0xAC6000
	180 Add X1, X1, 3672
	181 Move X2, X31
	182 Call 0x3EB2B00
	183 Move X21, X0
	184 Call 0x3EB2AE0
	185 Move X0, X21
	186 Call 0x1D2D690
	187 Call 0x1991590

