Type: System.Threading.Tasks.DebuggerSupport

Method: System.Boolean get_LoggingOn()

Disassembly:
	0x033EF5CC LDR X19, [X0 + 0x48]
	0x033EF5D0 MOV X20, X0

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void TraceOperationCreation(System.Threading.Tasks.CausalityTraceLevel traceLevel, System.Threading.Tasks.Task task, System.String operationName, System.UInt64 relatedContext)

Disassembly:
	0x033EF5D4 BL 0x1C16D44

ISIL:
	001 Return 

Method: System.Void TraceOperationCompletion(System.Threading.Tasks.CausalityTraceLevel traceLevel, System.Threading.Tasks.Task task, Internal.Runtime.Augments.AsyncStatus status)

Disassembly:
	0x033EF5D8 CBNZ X19, 0x33EF5F0

ISIL:
	001 Return 

Method: System.Void TraceOperationRelation(System.Threading.Tasks.CausalityTraceLevel traceLevel, System.Threading.Tasks.Task task, System.Threading.Tasks.CausalityRelation relation)

Disassembly:
	0x033EF5DC MOVZ W1, 0x1

ISIL:
	001 Return 

Method: System.Void TraceSynchronousWorkStart(System.Threading.Tasks.CausalityTraceLevel traceLevel, System.Threading.Tasks.Task task, System.Threading.Tasks.CausalitySynchronousWork work)

Disassembly:
	0x033EF5E0 MOV X0, X20

ISIL:
	001 Return 

Method: System.Void TraceSynchronousWorkCompletion(System.Threading.Tasks.CausalityTraceLevel traceLevel, System.Threading.Tasks.CausalitySynchronousWork work)

Disassembly:
	0x033EF5E4 BL 0x33F0788

ISIL:
	001 Return 

Method: System.Void AddToActiveTasks(System.Threading.Tasks.Task task)

Disassembly:
	0x033EF5E8 MOV X19, X0
	0x033EF5EC CBZ X0, 0x33EF608
	0x033EF5F0 ADD X19, X19, 0x3C
	0x033EF5F4 BL 0x1C16D44
	0x033EF5F8 MOV X0, X19
	0x033EF5FC LDP X20, X19, [X31 + 0x10]
	0x033EF600 LDR X30, [X31], #0x20
	0x033EF604 B 0x1C242B0
	0x033EF608 BL 0x1C16F20
	0x033EF60C STR X30, [X31 - 0x20]!
	0x033EF610 STP X20, X19, [X31 + 0x10]
	0x033EF614 ADRP X20, 0xFEE000
	0x033EF618 LDRB W8, [X20 + 0x444]
	0x033EF61C MOV X19, X0
	0x033EF620 TBNZ X8, 0x0, 0x33EF668
	0x033EF624 ADRP X0, 0xD05000
	0x033EF628 LDR X0, [X0 + 0x7B8]
	0x033EF62C BL 0x1C16CF4
	0x033EF630 ADRP X0, 0xD3E000
	0x033EF634 LDR X0, [X0 + 0x6D8]
	0x033EF638 BL 0x1C16CF4
	0x033EF63C ADRP X0, 0xD3E000
	0x033EF640 LDR X0, [X0 + 0x6E0]
	0x033EF644 BL 0x1C16CF4
	0x033EF648 ADRP X0, 0xD3E000
	0x033EF64C LDR X0, [X0 + 0x6E8]
	0x033EF650 BL 0x1C16CF4
	0x033EF654 ADRP X0, 0xD3E000
	0x033EF658 LDR X0, [X0 + 0x6C0]
	0x033EF65C BL 0x1C16CF4
	0x033EF660 MOVZ W8, 0x1
	0x033EF664 STRB W8, [X20 + 0x444]
	0x033EF668 CBZ X19, 0x33EF6F8
	0x033EF66C ADRP X9, 0xD05000
	0x033EF670 LDR X9, [X9 + 0x7B8]
	0x033EF674 LDR X8, [X19]
	0x033EF678 LDR X10, [X9]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xFEF000
	006 Move X20, 0xD06000
	007 Move W8, [X21+1083]
	008 Move X20, [X20+1976]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xD2D000
	015 Move X0, [X0+1832]
	016 Call 0x1C17CF4
	017 Move X0, 0xD06000
	018 Move X0, [X0+1976]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1083], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move W8, [X8+16]
	030 Compare W8, 0
	031 JumpIfEqual {44}
	032 Move X8, 0xD2D000
	033 Move X8, [X8+1832]
	034 Move X0, [X8]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return 

Method: System.Void AddToActiveTasksNonInlined(System.Threading.Tasks.Task task)

Disassembly:
	0x033EF67C LDRB W9, [X8 + 0x130]
	0x033EF680 LDRB W11, [X10 + 0x130]
	0x033EF684 CMP W9, W11
	0x033EF688 B.CC 0x33EF6A0
	0x033EF68C LDR X12, [X8 + 0xC8]
	0x033EF690 ADD X11, X12, X11, 0x3, LSL
	0x033EF694 LDUR X11, [X11 - 0x8]
	0x033EF698 CMP X11, X10
	0x033EF69C B.EQ 0x33EF6E0
	0x033EF6A0 ADRP X10, 0xD3E000
	0x033EF6A4 LDR X10, [X10 + 0x6C0]
	0x033EF6A8 LDR X10, [X10]
	0x033EF6AC LDRB W11, [X10 + 0x130]
	0x033EF6B0 CMP W9, W11
	0x033EF6B4 B.CC 0x33EF6F8
	0x033EF6B8 LDR X8, [X8 + 0xC8]
	0x033EF6BC ADD X8, X8, X11, 0x3, LSL
	0x033EF6C0 LDUR X8, [X8 - 0x8]
	0x033EF6C4 CMP X8, X10
	0x033EF6C8 B.NE 0x33EF6F8
	0x033EF6CC LDR X0, [X19 + 0x18]
	0x033EF6D0 CBZ X0, 0x33EF6F8
	0x033EF6D4 LDR X1, [X19 + 0x20]
	0x033EF6D8 LDR X19, [X19 + 0x10]
	0x033EF6DC BL 0x33EF6FC
	0x033EF6E0 CBZ X19, 0x33EF6F8
	0x033EF6E4 MOV X0, X19
	0x033EF6E8 LDP X20, X19, [X31 + 0x10]
	0x033EF6EC MOV W1, W31
	0x033EF6F0 LDR X30, [X31], #0x20
	0x033EF6F4 B 0x33EF3F4
	0x033EF6F8 BL 0x1C16F20
	0x033EF6FC SUB X31, X31, 0x50
	0x033EF700 STP X30, X23, [X31 + 0x20]
	0x033EF704 STP X22, X21, [X31 + 0x30]
	0x033EF708 STP X20, X19, [X31 + 0x40]
	0x033EF70C ADRP X19, 0xFEE000
	0x033EF710 ADRP X22, 0xD05000
	0x033EF714 LDRB W8, [X19 + 0x473]
	0x033EF718 LDR X22, [X22 + 0x7B8]
	0x033EF71C MOV X20, X1
	0x033EF720 MOV X21, X0
	0x033EF724 TBNZ X8, 0x0, 0x33EF76C
	0x033EF728 ADRP X0, 0xD3E000
	0x033EF72C LDR X0, [X0 + 0x6F0]
	0x033EF730 BL 0x1C16CF4
	0x033EF734 ADRP X0, 0xD3E000
	0x033EF738 LDR X0, [X0 + 0x6F8]
	0x033EF73C BL 0x1C16CF4
	0x033EF740 ADRP X0, 0xD3E000
	0x033EF744 LDR X0, [X0 + 0x700]
	0x033EF748 BL 0x1C16CF4
	0x033EF74C ADRP X0, 0xD3E000
	0x033EF750 LDR X0, [X0 + 0x708]
	0x033EF754 BL 0x1C16CF4
	0x033EF758 ADRP X0, 0xD05000
	0x033EF75C LDR X0, [X0 + 0x7B8]
	0x033EF760 BL 0x1C16CF4
	0x033EF764 MOVZ W8, 0x1
	0x033EF768 STRB W8, [X19 + 0x473]
	0x033EF76C STRB W31, [X31 + 0x4]
	0x033EF770 LDR X19, [X21 + 0x40]!
	0x033EF774 BL 0x1C16D44
	0x033EF778 LDR X0, [X22]
	0x033EF77C LDR W8, [X0 + 0xE0]
	0x033EF780 CBNZ W8, 0x33EF78C
	0x033EF784 BL 0x1C16DFC
	0x033EF788 LDR X0, [X22]
	0x033EF78C LDR X8, [X0 + 0xB8]
	0x033EF790 LDR X8, [X8 + 0x8]
	0x033EF794 CMP X19, X8
	0x033EF798 B.EQ 0x33EF8C4
	0x033EF79C CBZ X19, 0x33EF7B8
	0x033EF7A0 ADRP X8, 0xD3E000
	0x033EF7A4 LDR X8, [X8 + 0x6F8]
	0x033EF7A8 LDR X9, [X19]
	0x033EF7AC LDR X8, [X8]
	0x033EF7B0 CMP X9, X8
	0x033EF7B4 B.EQ 0x33EF824
	0x033EF7B8 BL 0x1C16D44
	0x033EF7BC ADRP X23, 0xD3E000
	0x033EF7C0 LDR X23, [X23 + 0x6F8]
	0x033EF7C4 LDR X0, [X23]
	0x033EF7C8 BL 0x1C16F10
	0x033EF7CC ADRP X8, 0xD3E000
	0x033EF7D0 LDR X8, [X8 + 0x6F0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xFEF000
	007 Move W8, [X19+1084]
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xD2D000
	014 Move X0, [X0+1832]
	015 Call 0x1C17CF4
	016 Move X0, 0xD3F000
	017 Move X0, [X0+1648]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+1084], W8
	021 Compare X20, 0
	022 JumpIfEqual {73}
	023 Move X22, 0xD2D000
	024 Move X22, [X22+1832]
	025 Move X0, X20
	026 Call Task.get_Id, X0
	027 Move X8, [X22]
	028 Move W21, W0
	029 Move W9, [X8+224]
	030 Compare W9, 0
	031 JumpIfNotEqual {35}
	032 Move X0, X8
	033 Call 0x1C17DFC
	034 Move X8, [X22]
	035 Move X8, [X8+184]
	036 Move X19, [X8+8]
	037 Move [X31+12], W31
	038 Add X1, X31, 12
	039 Move X0, X19
	040 Move X2, X31
	041 Call Monitor.Enter, X0, X1
	042 Move X0, [X22]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move X0, [X22]
	048 Move X8, [X0+184]
	049 Move X0, [X8]
	050 Compare X0, 0
	051 JumpIfEqual {76}
	052 Move X8, 0xD3F000
	053 Move X8, [X8+1648]
	054 Move X3, [X8]
	055 Move W1, W21
	056 Move X2, X20
	057 Call 0x319A890, X0, X1, X2
	058 Move X20, X31
	059 Move W8, [X31+12]
	060 Compare W8, 0
	061 JumpIfEqual {65}
	062 Move X0, X19
	063 Move X1, X31
	064 Call Monitor.Exit, X0
	065 Compare X20, 0
	066 JumpIfNotEqual {74}
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Return 
	073 Call 0x1C17F20
	074 Move X0, X20
	075 Call 0x1C17F18
	076 Call 0x1C17F20
	077 Move X21, X0
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X0, X21
	080 Call 0x3EB2AD0
	081 Move X20, [X0]
	082 Call 0x3EB2AE0
	083 Move X20, X31
	084 Move X21, X0
	085 Move W8, [X31+12]
	086 Compare W8, 0
	087 JumpIfEqual {91}
	088 Move X0, X19
	089 Move X1, X31
	090 Call Monitor.Exit, X0
	091 Compare X20, 0
	092 JumpIfNotEqual {95}
	093 Move X0, X21
	094 Call 0x1D2D690
	095 Move X0, X20
	096 Call 0x1C17F18
	097 Call 0x1991590

Method: System.Void RemoveFromActiveTasks(System.Threading.Tasks.Task task)

Disassembly:
	0x033EF864 ADRP X8, 0xD3E000
	0x033EF868 LDR X8, [X8 + 0x700]
	0x033EF86C LDR X2, [X8]
	0x033EF870 MOV X0, X19
	0x033EF874 MOV X1, X20
	0x033EF878 BL 0x319B85C
	0x033EF87C MOV W1, W0
	0x033EF880 ADDS W31, W1, 0x1
	0x033EF884 B.EQ 0x33EF8A8
	0x033EF888 ADRP X8, 0xD3E000
	0x033EF88C LDR X8, [X8 + 0x708]
	0x033EF890 LDR X3, [X8]
	0x033EF894 MOV X0, X19
	0x033EF898 MOV X2, X31
	0x033EF89C BL 0x319B5F0
	0x033EF8A0 MOV X20, X31
	0x033EF8A4 B 0x33EF8AC
	0x033EF8A8 MOV X20, X31
	0x033EF8AC LDRB W8, [X31 + 0x4]
	0x033EF8B0 CBZ W8, 0x33EF8C0
	0x033EF8B4 MOV X0, X19
	0x033EF8B8 MOV X1, X31
	0x033EF8BC BL 0x33E14E4
	0x033EF8C0 CBNZ X20, 0x33EF8D8
	0x033EF8C4 LDP X20, X19, [X31 + 0x40]
	0x033EF8C8 LDP X22, X21, [X31 + 0x30]
	0x033EF8CC LDP X30, X23, [X31 + 0x20]
	0x033EF8D0 ADD X31, X31, 0x50
	0x033EF8D4 RET
	0x033EF8D8 MOV X0, X20
	0x033EF8DC BL 0x1C16F18
	0x033EF8E0 B 0x33EF8EC
	0x033EF8E4 B 0x33EF8EC
	0x033EF8E8 B 0x33EF8EC
	0x033EF8EC MOV X21, X0
	0x033EF8F0 CMP W1, 0x1
	0x033EF8F4 B.NE 0x33EF90C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xFEF000
	006 Move X20, 0xD06000
	007 Move W8, [X21+1085]
	008 Move X20, [X20+1976]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xD2D000
	015 Move X0, [X0+1832]
	016 Call 0x1C17CF4
	017 Move X0, 0xD06000
	018 Move X0, [X0+1976]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1085], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move W8, [X8+16]
	030 Compare W8, 0
	031 JumpIfEqual {44}
	032 Move X8, 0xD2D000
	033 Move X8, [X8+1832]
	034 Move X0, [X8]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return 

Method: System.Void RemoveFromActiveTasksNonInlined(System.Threading.Tasks.Task task)

Disassembly:
	0x033EF8F8 MOV X0, X21
	0x033EF8FC BL 0x3EB1AD0
	0x033EF900 LDR X20, [X0]
	0x033EF904 BL 0x3EB1AE0
	0x033EF908 B 0x33EF8AC
	0x033EF90C MOV X20, X31
	0x033EF910 B 0x33EF918
	0x033EF914 MOV X21, X0
	0x033EF918 LDRB W8, [X31 + 0x4]
	0x033EF91C CBZ W8, 0x33EF92C
	0x033EF920 MOV X0, X19
	0x033EF924 MOV X1, X31
	0x033EF928 BL 0x33E14E4
	0x033EF92C CBNZ X20, 0x33EF938
	0x033EF930 MOV X0, X21
	0x033EF934 BL 0x1D2C690
	0x033EF938 MOV X0, X20
	0x033EF93C BL 0x1C16F18
	0x033EF940 BL 0x1990590
	0x033EF944 STR X30, [X31 - 0x40]!
	0x033EF948 STP X24, X23, [X31 + 0x10]
	0x033EF94C STP X22, X21, [X31 + 0x20]
	0x033EF950 STP X20, X19, [X31 + 0x30]
	0x033EF954 ADRP X22, 0xFEE000
	0x033EF958 LDRB W8, [X22 + 0x446]
	0x033EF95C MOV W19, W2
	0x033EF960 MOV W20, W1
	0x033EF964 MOV X21, X0
	0x033EF968 TBNZ X8, 0x0, 0x33EF980
	0x033EF96C ADRP X0, 0xD10000
	0x033EF970 LDR X0, [X0 + 0x470]
	0x033EF974 BL 0x1C16CF4
	0x033EF978 MOVZ W8, 0x1
	0x033EF97C STRB W8, [X22 + 0x446]
	0x033EF980 STR W31, [X31 + 0x8]
	0x033EF984 LDR W23, [X21 + 0x38]!
	0x033EF988 BL 0x1C16D44
	0x033EF98C ANDS W31, W23, W19, 0x0
	0x033EF990 MOV W22, W31
	0x033EF994 B.NE 0x33EF9EC
	0x033EF998 ADRP X24, 0xD10000
	0x033EF99C LDR X24, [X24 + 0x470]
	0x033EF9A0 BL 0x1C16D44
	0x033EF9A4 ORR W1, W23, W20, 0x0
	0x033EF9A8 MOV X0, X21
	0x033EF9AC MOV W2, W23
	0x033EF9B0 BL 0x1C241D4
	0x033EF9B4 CMP W0, W23
	0x033EF9B8 CSET W22, EQ
	0x033EF9BC B.EQ 0x33EF9EC
	0x033EF9C0 LDR X0, [X24]
	0x033EF9C4 LDR W8, [X0 + 0xE0]
	0x033EF9C8 CBNZ W8, 0x33EF9D0
	0x033EF9CC BL 0x1C16DFC
	0x033EF9D0 ADD X0, X31, 0x8
	0x033EF9D4 MOV X1, X31
	0x033EF9D8 BL 0x33DF18C
	0x033EF9DC LDR W23, [X21]
	0x033EF9E0 BL 0x1C16D44
	0x033EF9E4 ANDS W31, W23, W19, 0x0
	0x033EF9E8 B.EQ 0x33EF9A0
	0x033EF9EC MOV W0, W22
	0x033EF9F0 LDP X20, X19, [X31 + 0x30]
	0x033EF9F4 LDP X22, X21, [X31 + 0x20]
	0x033EF9F8 LDP X24, X23, [X31 + 0x10]
	0x033EF9FC LDR X30, [X31], #0x40
	0x033EFA00 RET
	0x033EFA04 STR X30, [X31 - 0x20]!
	0x033EFA08 STP X20, X19, [X31 + 0x10]
	0x033EFA0C MOV X19, X2
	0x033EFA10 MOV X20, X0
	0x033EFA14 BL 0x33F3D2C
	0x033EFA18 CBZ X19, 0x33EFA34
	0x033EFA1C MOV X0, X20
	0x033EFA20 MOV X1, X19
	0x033EFA24 LDP X20, X19, [X31 + 0x10]
	0x033EFA28 MOVZ W2, 0x1
	0x033EFA2C LDR X30, [X31], #0x20
	0x033EFA30 B 0x33F0D74
	0x033EFA34 LDP X20, X19, [X31 + 0x10]
	0x033EFA38 LDR X30, [X31], #0x20
	0x033EFA3C RET
	0x033EFA40 STR X30, [X31 - 0x30]!
	0x033EFA44 STP X22, X21, [X31 + 0x10]
	0x033EFA48 STP X20, X19, [X31 + 0x20]
	0x033EFA4C ADRP X20, 0xFEE000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xFEF000
	007 Move W8, [X20+1086]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xD2D000
	014 Move X0, [X0+1832]
	015 Call 0x1C17CF4
	016 Move X0, 0xD3F000
	017 Move X0, [X0+1656]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1086], W8
	021 Compare X19, 0
	022 JumpIfEqual {72}
	023 Move X21, 0xD2D000
	024 Move X21, [X21+1832]
	025 Move X0, X19
	026 Call Task.get_Id, X0
	027 Move X8, [X21]
	028 Move W20, W0
	029 Move W9, [X8+224]
	030 Compare W9, 0
	031 JumpIfNotEqual {35}
	032 Move X0, X8
	033 Call 0x1C17DFC
	034 Move X8, [X21]
	035 Move X8, [X8+184]
	036 Move X19, [X8+8]
	037 Move [X31+12], W31
	038 Add X1, X31, 12
	039 Move X0, X19
	040 Move X2, X31
	041 Call Monitor.Enter, X0, X1
	042 Move X0, [X21]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move X0, [X21]
	048 Move X8, [X0+184]
	049 Move X0, [X8]
	050 Compare X0, 0
	051 JumpIfEqual {75}
	052 Move X8, 0xD3F000
	053 Move X8, [X8+1656]
	054 Move X2, [X8]
	055 Move W1, W20
	056 Call 0x319A958, X0, X1
	057 Move X20, X31
	058 Move W8, [X31+12]
	059 Compare W8, 0
	060 JumpIfEqual {64}
	061 Move X0, X19
	062 Move X1, X31
	063 Call Monitor.Exit, X0
	064 Compare X20, 0
	065 JumpIfNotEqual {73}
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X30, [X31+16]
	069 Move X21, [X31+24]
	070 Add X31, X31, 48
	071 Return 
	072 Call 0x1C17F20
	073 Move X0, X20
	074 Call 0x1C17F18
	075 Call 0x1C17F20
	076 Move X21, X0
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, X21
	079 Call 0x3EB2AD0
	080 Move X20, [X0]
	081 Call 0x3EB2AE0
	082 Move X20, X31
	083 Move X21, X0
	084 Move W8, [X31+12]
	085 Compare W8, 0
	086 JumpIfEqual {90}
	087 Move X0, X19
	088 Move X1, X31
	089 Call Monitor.Exit, X0
	090 Compare X20, 0
	091 JumpIfNotEqual {94}
	092 Move X0, X21
	093 Call 0x1D2D690
	094 Move X0, X20
	095 Call 0x1C17F18
	096 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x033EFA50 LDRB W8, [X20 + 0x46A]
	0x033EFA54 MOV X19, X0
	0x033EFA58 TBNZ X8, 0x0, 0x33EFA70
	0x033EFA5C ADRP X0, 0xD2C000
	0x033EFA60 LDR X0, [X0 + 0x728]
	0x033EFA64 BL 0x1C16CF4
	0x033EFA68 MOVZ W8, 0x1
	0x033EFA6C STRB W8, [X20 + 0x46A]
	0x033EFA70 ADRP X22, 0xD2C000
	0x033EFA74 LDR X22, [X22 + 0x728]
	0x033EFA78 BL 0x1C16D44
	0x033EFA7C MOV X20, X19
	0x033EFA80 LDR W21, [X20 + 0x38]!
	0x033EFA84 BL 0x1C16D44
	0x033EFA88 ORR W1, W21, 0x400000
	0x033EFA8C MOV X0, X20
	0x033EFA90 BL 0x1C24300
	0x033EFA94 LDR X20, [X20 + 0x10]
	0x033EFA98 BL 0x1C16D44
	0x033EFA9C CBZ X20, 0x33EFAC0
	0x033EFAA0 LDR X21, [X20 + 0x18]
	0x033EFAA4 BL 0x1C16D44
	0x033EFAA8 CBZ X21, 0x33EFAB8
	0x033EFAAC MOV X0, X21
	0x033EFAB0 MOV X1, X31
	0x033EFAB4 BL 0x33DE6C8
	0x033EFAB8 MOV X0, X20
	0x033EFABC BL 0x33F1AF8
	0x033EFAC0 LDR X0, [X22]
	0x033EFAC4 LDR W8, [X0 + 0xE0]
	0x033EFAC8 CBNZ W8, 0x33EFAE0
	0x033EFACC BL 0x1C16DFC
	0x033EFAD0 LDR X0, [X22]
	0x033EFAD4 LDR W8, [X0 + 0xE0]
	0x033EFAD8 CBNZ W8, 0x33EFAE0
	0x033EFADC BL 0x1C16DFC
	0x033EFAE0 ADRP X20, 0xFEA000
	0x033EFAE4 LDRB W8, [X20 + 0x829]
	0x033EFAE8 CBNZ W8, 0x33EFB0C
	0x033EFAEC ADRP X0, 0xD2C000
	0x033EFAF0 LDR X0, [X0 + 0x728]
	0x033EFAF4 BL 0x1C16CF4
	0x033EFAF8 ADRP X0, 0xD05000
	0x033EFAFC LDR X0, [X0 + 0x7B8]
	0x033EFB00 BL 0x1C16CF4
	0x033EFB04 MOVZ W8, 0x1
	0x033EFB08 STRB W8, [X20 + 0x829]
	0x033EFB0C ADRP X20, 0xD05000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xFEF000
	008 Move X23, 0xD3F000
	009 Move X19, 0xD3F000
	010 Move X20, 0xD2D000
	011 Move X21, 0xD0B000
	012 Move W8, [X22+1087]
	013 Move X23, [X23+1664]
	014 Move X19, [X19+1672]
	015 Move X20, [X20+1832]
	016 Move X21, [X21+3264]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0xD2D000
	022 Move X0, [X0+1832]
	023 Call 0x1C17CF4
	024 Move X0, 0xD3F000
	025 Move X0, [X0+1672]
	026 Call 0x1C17CF4
	027 Move X0, 0xD3F000
	028 Move X0, [X0+1664]
	029 Call 0x1C17CF4
	030 Move X0, 0xD0B000
	031 Move X0, [X0+3264]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+1087], W8
	035 Move X0, [X23]
	036 Call 0x1C17F10
	037 Move X1, [X19]
	038 Move X19, X0
	039 Call 0x319A7BC, X0
	040 Move X8, [X20]
	041 Move X8, [X8+184]
	042 Move [X8], X19
	043 Move X0, [X21]
	044 Call 0x1C17F10
	045 Move X1, X31
	046 Move X19, X0
	047 Call Object..ctor, X0
	048 Move X8, [X20]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X8, [X8+184]
	052 Move [X8+8], X19
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 Return 

