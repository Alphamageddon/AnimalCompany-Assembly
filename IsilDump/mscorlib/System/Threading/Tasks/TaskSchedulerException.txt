Type: System.Threading.Tasks.TaskSchedulerException

Method: System.Void .ctor()

Disassembly:
	0x033EDEB8 BL 0x1C16CF4
	0x033EDEBC MOVZ W8, 0x1
	0x033EDEC0 STRB W8, [X19 + 0x435]
	0x033EDEC4 LDR X19, [X20]
	0x033EDEC8 CBZ X19, 0x33EDF48
	0x033EDECC ADRP X9, 0xD07000
	0x033EDED0 LDR X9, [X9 + 0x7B8]
	0x033EDED4 LDR X8, [X19]
	0x033EDED8 LDR X9, [X9]
	0x033EDEDC LDRB W11, [X8 + 0x130]
	0x033EDEE0 LDRB W10, [X9 + 0x130]
	0x033EDEE4 CMP W11, W10
	0x033EDEE8 B.CC 0x33EDF00
	0x033EDEEC LDR X11, [X8 + 0xC8]
	0x033EDEF0 ADD X10, X11, X10, 0x3, LSL
	0x033EDEF4 LDUR X10, [X10 - 0x8]
	0x033EDEF8 CMP X10, X9
	0x033EDEFC B.EQ 0x33EDF7C
	0x033EDF00 ADRP X10, 0xD35000
	0x033EDF04 LDR X10, [X10 + 0xEA8]
	0x033EDF08 LDRH W20, [X20 + 0x8]
	0x033EDF0C LDRH W9, [X8 + 0x12E]
	0x033EDF10 LDR X1, [X10]
	0x033EDF14 CBZ X9, 0x33EDF38
	0x033EDF18 LDR X10, [X8 + 0xB0]
	0x033EDF1C ADD X10, X10, 0x8
	0x033EDF20 LDUR X11, [X10 - 0x8]
	0x033EDF24 CMP X11, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xFF1000
	006 Move X20, 0xD07000
	007 Move W8, [X21+1064]
	008 Move X20, [X20+2000]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xD07000
	015 Move X0, [X0+2000]
	016 Call 0x1C17CF4
	017 Move X0, 0xD41000
	018 Move X0, [X0+1560]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1064], W8
	022 Move X0, [X20]
	023 Move X20, 0xD41000
	024 Move W8, [X0+224]
	025 Move X20, [X20+1560]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X1, [X20]
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X2, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call Exception..ctor, X0, X1
	037 Return 

Method: System.Void .ctor(System.Exception innerException)

Disassembly:
	0x033EDF28 B.EQ 0x33EDF54
	0x033EDF2C SUBS X9, X9, 0x1
	0x033EDF30 ADD X10, X10, 0x10
	0x033EDF34 B.NE 0x33EDF20
	0x033EDF38 MOVZ W2, 0x2
	0x033EDF3C MOV X0, X19
	0x033EDF40 BL 0x1C5C788
	0x033EDF44 B 0x33EDF64
	0x033EDF48 LDP X20, X19, [X31 + 0x10]
	0x033EDF4C LDR X30, [X31], #0x20
	0x033EDF50 RET
	0x033EDF54 LDR W9, [X10]
	0x033EDF58 ADD W9, W9, 0x2
	0x033EDF5C ADD X8, X8, W9, 0x4, SXTW
	0x033EDF60 ADD X0, X8, 0x138
	0x033EDF64 LDP X3, X2, [X0]
	0x033EDF68 MOV X0, X19
	0x033EDF6C MOV W1, W20
	0x033EDF70 LDP X20, X19, [X31 + 0x10]
	0x033EDF74 LDR X30, [X31], #0x20
	0x033EDF78 BR X3
	0x033EDF7C MOV X0, X19
	0x033EDF80 LDP X20, X19, [X31 + 0x10]
	0x033EDF84 MOV X1, X31
	0x033EDF88 LDR X30, [X31], #0x20
	0x033EDF8C B 0x32C3B54
	0x033EDF90 LDP X8, X1, [X0]
	0x033EDF94 MOV X0, X8
	0x033EDF98 RET
	0x033EDF9C LDR X8, [X0]
	0x033EDFA0 LDRH W9, [X0 + 0x8]
	0x033EDFA4 ANDS W31, W1, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFF1000
	007 Move X21, 0xD07000
	008 Move W8, [X22+1065]
	009 Move X21, [X21+2000]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xD07000
	017 Move X0, [X0+2000]
	018 Call 0x1C17CF4
	019 Move X0, 0xD41000
	020 Move X0, [X0+1560]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1065], W8
	024 Move X0, [X21]
	025 Move X21, 0xD41000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1560]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X1, [X21]
	032 Move X0, X20
	033 Move X2, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X3, X31
	039 Move X30, [X31+48]
	040 Call Exception..ctor, X0, X1, X2
	041 Return 

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x033EDFA8 MOVZ W10, 0x10000
	0x033EDFAC CSEL X10, X10, X31, NE
	0x033EDFB0 ORR X1, X10, X9, 0x0
	0x033EDFB4 MOV X0, X8
	0x033EDFB8 RET
	0x033EDFBC STR X30, [X31 - 0x20]!
	0x033EDFC0 STP X20, X19, [X31 + 0x10]
	0x033EDFC4 ADRP X20, 0xFF0000
	0x033EDFC8 ADRP X19, 0xD07000
	0x033EDFCC LDRB W8, [X20 + 0x436]
	0x033EDFD0 LDR X19, [X19 + 0x7B8]
	0x033EDFD4 TBNZ X8, 0x0, 0x33EDFF8
	0x033EDFD8 ADRP X0, 0xD07000
	0x033EDFDC LDR X0, [X0 + 0x7B8]
	0x033EDFE0 BL 0x1C16CF4
	0x033EDFE4 ADRP X0, 0xD30000
	0x033EDFE8 LDR X0, [X0 + 0xE40]
	0x033EDFEC BL 0x1C16CF4
	0x033EDFF0 MOVZ W8, 0x1
	0x033EDFF4 STRB W8, [X20 + 0x436]
	0x033EDFF8 ADRP X20, 0xD30000
	0x033EDFFC LDR X20, [X20 + 0xE40]
	0x033EE000 ADD X0, X31, 0x8
	0x033EE004 MOVZ W1, 0x1
	0x033EE008 MOV X2, X31
	0x033EE00C STR X31, [X31 + 0x8]
	0x033EE010 BL 0x33DD310
	0x033EE014 LDR X0, [X19]
	0x033EE018 LDR W8, [X0 + 0xE0]
	0x033EE01C CBNZ W8, 0x33EE024
	0x033EE020 BL 0x1C16DFC
	0x033EE024 LDR X0, [X31 + 0x8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xFF1000
	009 Move X23, 0xD07000
	010 Move W8, [X24+1066]
	011 Move X23, [X23+2000]
	012 Move X19, X3
	013 Move X20, X2
	014 Move X21, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xD07000
	021 Move X0, [X0+2000]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+1066], W8
	025 Move X0, [X23]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X22
	031 Move X1, X21
	032 Move X2, X20
	033 Move X3, X19
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X22, [X31+32]
	037 Move X21, [X31+40]
	038 Move X24, [X31+16]
	039 Move X23, [X31+24]
	040 Move X4, X31
	041 Move X30, [X31+64]
	042 Call Exception..ctor, X0, X1, X2
	043 Return 

