Type: System.Threading.Tasks.Task/DelayPromise

Method: System.Void .ctor(System.Threading.CancellationToken token)

Disassembly:
	0x033F641C ADD X10, X10, 0x8
	0x033F6420 LDUR X11, [X10 - 0x8]
	0x033F6424 CMP X11, X1
	0x033F6428 B.EQ 0x33F6448
	0x033F642C SUBS X9, X9, 0x1
	0x033F6430 ADD X10, X10, 0x10
	0x033F6434 B.NE 0x33F6420
	0x033F6438 MOV X0, X19
	0x033F643C MOV W2, W31
	0x033F6440 BL 0x1C5C788
	0x033F6444 B 0x33F6454
	0x033F6448 LDRSW X9, [X10]
	0x033F644C ADD X8, X8, X9, 0x4, LSL
	0x033F6450 ADD X0, X8, 0x138
	0x033F6454 LDP X8, X2, [X0]
	0x033F6458 MOV X0, X19
	0x033F645C MOV W1, W22
	0x033F6460 BLR X8
	0x033F6464 CBZ X0, 0x33F64F8
	0x033F6468 TBNZ X25, 0x0, 0x33F6498
	0x033F646C CBZ X20, 0x33F6554
	0x033F6470 MOV X23, X0
	0x033F6474 MOV X0, X20
	0x033F6478 BL 0x33ED11C
	0x033F647C TBNZ X0, 0x0, 0x33F6498
	0x033F6480 MOV X0, X23
	0x033F6484 BL 0x33ED11C
	0x033F6488 TBZ X0, 0x0, 0x33F64AC
	0x033F648C MOV X0, X20
	0x033F6490 MOV X1, X23
	0x033F6494 BL 0x33F9CC0
	0x033F6498 MOVZ W25, 0x1
	0x033F649C ADD W22, W22, 0x1
	0x033F64A0 CMP W22, W21
	0x033F64A4 B.NE 0x33F6408
	0x033F64A8 B 0x33F64E0
	0x033F64AC MOV X0, X23
	0x033F64B0 MOV X1, X20
	0x033F64B4 MOV W2, W31
	0x033F64B8 BL 0x33F3C10
	0x033F64BC MOV X0, X20
	0x033F64C0 BL 0x33ED11C
	0x033F64C4 MOV W25, W31
	0x033F64C8 TBZ X0, 0x0, 0x33F649C
	0x033F64CC MOV X0, X23
	0x033F64D0 MOV X1, X20
	0x033F64D4 BL 0x33EF6FC
	0x033F64D8 MOV W25, W31
	0x033F64DC B 0x33F649C
	0x033F64E0 MOV X0, X20
	0x033F64E4 LDP X20, X19, [X31 + 0x30]
	0x033F64E8 LDP X22, X21, [X31 + 0x20]
	0x033F64EC LDP X24, X23, [X31 + 0x10]
	0x033F64F0 LDP X30, X25, [X31], #0x40
	0x033F64F4 RET
	0x033F64F8 ADRP X0, 0xD05000
	0x033F64FC LDR X0, [X0 + 0x578]
	0x033F6500 BL 0x1C16D08
	0x033F6504 BL 0x1C16F10
	0x033F6508 MOV X19, X0
	0x033F650C ADRP X0, 0xD37000
	0x033F6510 LDR X0, [X0 + 0x910]
	0x033F6514 BL 0x1C16D08
	0x033F6518 MOV X20, X0
	0x033F651C ADRP X0, 0xD27000
	0x033F6520 LDR X0, [X0 + 0x618]
	0x033F6524 BL 0x1C16D08
	0x033F6528 MOV X2, X0
	0x033F652C MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xFE8000
	008 Move X23, 0xD38000
	009 Move X21, 0xD26000
	010 Move W8, [X22+1160]
	011 Move X23, [X23+1608]
	012 Move X21, [X21+1832]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0xD26000
	020 Move X0, [X0+1832]
	021 Call 0x1C17CF4
	022 Move X0, 0xD38000
	023 Move X0, [X0+1608]
	024 Call 0x1C17CF4
	025 Move X0, 0xD38000
	026 Move X0, [X0+2296]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+1160], W8
	030 Move X1, [X23]
	031 Move X0, X19
	032 Call Task`1<VoidTaskResult>..ctor, X0
	033 Move [X19+88], X20
	034 Move X0, [X21]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {44}
	038 Call 0x1C17DFC
	039 Move X0, [X21]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X20, 0xFE4000
	045 Move W8, [X20+2088]
	046 Compare W8, 0
	047 JumpIfNotEqual {56}
	048 Move X0, 0xD26000
	049 Move X0, [X0+1832]
	050 Call 0x1C17CF4
	051 Move X0, 0xCFF000
	052 Move X0, [X0+1976]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X20+2088], W8
	056 Move X20, 0xCFF000
	057 Move X20, [X20+1976]
	058 Move X0, [X20]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {64}
	062 Call 0x1C17DFC
	063 Move X0, [X20]
	064 Move X8, [X0+184]
	065 Move W8, [X8+16]
	066 Compare W8, 0
	067 JumpIfEqual {82}
	068 Move X0, [X21]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, X19
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move X30, [X31+48]
	079 Move X23, [X31+56]
	080 Call DebuggerSupport.AddToActiveTasksNonInlined, X0
	081 Return 
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X30, [X31+48]
	087 Move X23, [X31+56]
	088 Return 

Method: System.Void Complete()

Disassembly:
	0x033F7F90 BL 0x1C16CF4
	0x033F7F94 MOVZ W8, 0x1
	0x033F7F98 STRB W8, [X20 + 0x499]
	0x033F7F9C LDR X0, [X19]
	0x033F7FA0 ADRP X22, 0xD08000
	0x033F7FA4 ADRP X20, 0xD36000
	0x033F7FA8 ADRP X21, 0xD36000
	0x033F7FAC LDR W8, [X0 + 0xE0]
	0x033F7FB0 LDR X22, [X22 + 0x4A0]
	0x033F7FB4 LDR X20, [X20 + 0x9F8]
	0x033F7FB8 LDR X21, [X21 + 0x7F8]
	0x033F7FBC CBNZ W8, 0x33F7FC8
	0x033F7FC0 BL 0x1C16DFC
	0x033F7FC4 LDR X0, [X19]
	0x033F7FC8 LDR X8, [X0 + 0xB8]
	0x033F7FCC LDR X0, [X22]
	0x033F7FD0 LDR X19, [X8]
	0x033F7FD4 BL 0x1C16F10
	0x033F7FD8 LDR X2, [X20]
	0x033F7FDC MOV X1, X19
	0x033F7FE0 MOV X3, X31
	0x033F7FE4 MOV X20, X0
	0x033F7FE8 BL 0x33DCEF0
	0x033F7FEC LDR X8, [X21]
	0x033F7FF0 LDP X22, X21, [X31 + 0x10]
	0x033F7FF4 LDR X8, [X8 + 0xB8]
	0x033F7FF8 STR X20, [X8]
	0x033F7FFC LDP X20, X19, [X31 + 0x20]
	0x033F8000 LDR X30, [X31], #0x30
	0x033F8004 RET
	0x033F8008 STR X30, [X31 - 0x20]!
	0x033F800C STP X20, X19, [X31 + 0x10]
	0x033F8010 ADRP X19, 0xFE5000
	0x033F8014 ADRP X20, 0xD35000
	0x033F8018 LDRB W8, [X19 + 0x49A]
	0x033F801C LDR X20, [X20 + 0x9F0]
	0x033F8020 TBNZ X8, 0x0, 0x33F8038
	0x033F8024 ADRP X0, 0xD35000
	0x033F8028 LDR X0, [X0 + 0x9F0]
	0x033F802C BL 0x1C16CF4
	0x033F8030 MOVZ W8, 0x1
	0x033F8034 STRB W8, [X19 + 0x49A]
	0x033F8038 LDR X0, [X20]
	0x033F803C BL 0x1C16F10
	0x033F8040 MOV X1, X31
	0x033F8044 MOV X19, X0
	0x033F8048 BL 0x33BDD8C
	0x033F804C LDR X8, [X20]
	0x033F8050 LDR X8, [X8 + 0xB8]
	0x033F8054 STR X19, [X8]
	0x033F8058 LDP X20, X19, [X31 + 0x10]
	0x033F805C LDR X30, [X31], #0x20
	0x033F8060 RET
	0x033F8064 MOV X1, X31
	0x033F8068 B 0x33BDD8C
	0x033F806C STR X30, [X31 - 0x20]!
	0x033F8070 STP X20, X19, [X31 + 0x10]
	0x033F8074 ADRP X20, 0xFE5000
	0x033F8078 LDRB W8, [X20 + 0x49B]
	0x033F807C MOV X19, X1
	0x033F8080 TBNZ X8, 0x0, 0x33F8098
	0x033F8084 ADRP X0, 0xCFC000
	0x033F8088 LDR X0, [X0 + 0xE70]
	0x033F808C BL 0x1C16CF4
	0x033F8090 MOVZ W8, 0x1
	0x033F8094 STRB W8, [X20 + 0x49B]
	0x033F8098 CBZ X19, 0x33F80CC
	0x033F809C ADRP X8, 0xCFC000
	0x033F80A0 LDR X8, [X8 + 0xE70]
	0x033F80A4 LDR X1, [X8]
	0x033F80A8 LDR X8, [X19]
	0x033F80AC CMP X8, X1
	0x033F80B0 B.NE 0x33F80D0
	0x033F80B4 LDR X2, [X19 + 0x18]
	0x033F80B8 LDR X0, [X19 + 0x40]
	0x033F80BC LDR X1, [X19 + 0x28]
	0x033F80C0 LDP X20, X19, [X31 + 0x10]
	0x033F80C4 LDR X30, [X31], #0x20
	0x033F80C8 BR X2
	0x033F80CC BL 0x1C16F20
	0x033F80D0 MOV X0, X19
	0x033F80D4 BL 0x1C171E0
	0x033F80D8 STP X30, X23, [X31 - 0x30]!
	0x033F80DC STP X22, X21, [X31 + 0x10]
	0x033F80E0 STP X20, X19, [X31 + 0x20]
	0x033F80E4 ADRP X22, 0xFE5000
	0x033F80E8 ADRP X21, 0xD03000
	0x033F80EC LDRB W8, [X22 + 0x49C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xFE7000
	006 Move X20, 0xD05000
	007 Move W8, [X21+1161]
	008 Move X20, [X20+2008]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xD05000
	015 Move X0, [X0+2008]
	016 Call 0x1C17CF4
	017 Move X0, 0xD25000
	018 Move X0, [X0+1832]
	019 Call 0x1C17CF4
	020 Move X0, 0xD37000
	021 Move X0, [X0+1640]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1161], W8
	025 Move X0, [X20]
	026 Add X20, X19, 88
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Call CancellationToken.get_IsCancellationRequested, X0
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {51}
	038 Move X1, [X19+88]
	039 Move X0, X19
	040 Move X2, X31
	041 Call Task.TrySetCanceled, X0, X1, X2
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {104}
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return 
	051 Move X20, 0xD24000
	052 Move X20, [X20+1832]
	053 Move X0, [X20]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {63}
	057 Call 0x1C17DFC
	058 Move X0, [X20]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X21, 0xFE2000
	064 Move W8, [X21+2089]
	065 Compare W8, 0
	066 JumpIfNotEqual {75}
	067 Move X0, 0xD24000
	068 Move X0, [X0+1832]
	069 Call 0x1C17CF4
	070 Move X0, 0xCFD000
	071 Move X0, [X0+1976]
	072 Call 0x1C17CF4
	073 Move W8, 1
	074 Move [X21+2089], W8
	075 Move X21, 0xCFD000
	076 Move X21, [X21+1976]
	077 Move X0, [X21]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {83}
	081 Call 0x1C17DFC
	082 Move X0, [X21]
	083 Move X8, [X0+184]
	084 Move W8, [X8+16]
	085 Compare W8, 0
	086 JumpIfEqual {94}
	087 Move X0, [X20]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move X0, X19
	093 Call DebuggerSupport.RemoveFromActiveTasksNonInlined, X0
	094 Move X8, 0xD36000
	095 Move X8, [X8+1640]
	096 Move X0, X19
	097 Move X1, X31
	098 Move X2, [X8]
	099 Call Task`1<VoidTaskResult>.TrySetResult, X0, X1
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {46}
	104 Move X0, [X19+120]
	105 Compare X0, 0
	106 JumpIfEqual {108}
	107 Call Timer.Dispose, X0
	108 Add X0, X19, 96
	109 Move X20, [X31+16]
	110 Move X19, [X31+24]
	111 Move X1, X31
	112 Move X30, [X31+32]
	113 Move X21, [X31+40]
	114 Call CancellationTokenRegistration.Dispose, X0
	115 Return 

