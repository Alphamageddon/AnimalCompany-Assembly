Type: System.Threading.Tasks.Task/ContingentProperties

Method: System.Void SetCompleted()

Disassembly:
	0x033F2AD0 ADRP X0, 0xD3B000
	0x033F2AD4 LDR X0, [X0 + 0x7F8]
	0x033F2AD8 BL 0x1C16CF4
	0x033F2ADC ADRP X0, 0xD33000
	0x033F2AE0 LDR X0, [X0 + 0x958]
	0x033F2AE4 BL 0x1C16CF4
	0x033F2AE8 ADRP X0, 0xD3B000
	0x033F2AEC LDR X0, [X0 + 0x800]
	0x033F2AF0 BL 0x1C16CF4
	0x033F2AF4 ADRP X0, 0xD09000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+24]
	004 Call 0x1C17D44
	005 Compare X19, 0
	006 JumpIfEqual {13}
	007 Move X0, X19
	008 Move X1, X31
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call ManualResetEventSlim.Set, X0
	012 Return 
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return 

Method: System.Void UnregisterCancellationCallback()

Disassembly:
	0x033F2AF8 LDR X0, [X0 + 0x7E8]
	0x033F2AFC BL 0x1C16CF4
	0x033F2B00 ADRP X0, 0xD01000
	0x033F2B04 LDR X0, [X0 + 0x6C0]
	0x033F2B08 BL 0x1C16CF4
	0x033F2B0C MOVZ W8, 0x1
	0x033F2B10 STRB W8, [X23 + 0x464]
	0x033F2B14 TBZ X22, 0x0, 0x33F2C60
	0x033F2B18 MOV X0, X31
	0x033F2B1C BL 0x33DD700
	0x033F2B20 CBZ X0, 0x33F2B88
	0x033F2B24 MOV X1, X31
	0x033F2B28 MOV X22, X0
	0x033F2B2C BL 0x33BE520
	0x033F2B30 ADRP X8, 0xD01000
	0x033F2B34 LDR X8, [X8 + 0x6C0]
	0x033F2B38 ADRP X9, 0xD33000
	0x033F2B3C MOV X23, X0
	0x033F2B40 LDR X8, [X8]
	0x033F2B44 LDR X9, [X9 + 0x958]
	0x033F2B48 LDR W10, [X8 + 0xE0]
	0x033F2B4C LDR X24, [X9]
	0x033F2B50 CBNZ W10, 0x33F2B5C
	0x033F2B54 MOV X0, X8
	0x033F2B58 BL 0x1C16DFC
	0x033F2B5C MOV X0, X24
	0x033F2B60 MOV X1, X31
	0x033F2B64 BL 0x338C698
	0x033F2B68 MOV X1, X0
	0x033F2B6C MOV X0, X23
	0x033F2B70 MOV X2, X31
	0x033F2B74 BL 0x3395F0C
	0x033F2B78 TBZ X0, 0x0, 0x33F2B88
	0x033F2B7C ADRP X8, 0xD3B000
	0x033F2B80 LDR X8, [X8 + 0x7F8]
	0x033F2B84 B 0x33F2C08
	0x033F2B88 ADRP X23, 0xD09000
	0x033F2B8C LDR X23, [X23 + 0x7E8]
	0x033F2B90 LDR X0, [X23]
	0x033F2B94 LDR W8, [X0 + 0xE0]
	0x033F2B98 CBNZ W8, 0x33F2BA0
	0x033F2B9C BL 0x1C16DFC
	0x033F2BA0 BL 0x33F2CD0
	0x033F2BA4 CBZ X0, 0x33F2C60
	0x033F2BA8 MOV X22, X0
	0x033F2BAC LDR X0, [X23]
	0x033F2BB0 LDR W8, [X0 + 0xE0]
	0x033F2BB4 CBNZ W8, 0x33F2BBC
	0x033F2BB8 BL 0x1C16DFC
	0x033F2BBC ADRP X24, 0xFE7000
	0x033F2BC0 LDRB W8, [X24 + 0x88D]
	0x033F2BC4 CBNZ W8, 0x33F2BDC
	0x033F2BC8 ADRP X0, 0xD09000
	0x033F2BCC LDR X0, [X0 + 0x7E8]
	0x033F2BD0 BL 0x1C16CF4
	0x033F2BD4 MOVZ W8, 0x1
	0x033F2BD8 STRB W8, [X24 + 0x88D]
	0x033F2BDC LDR X0, [X23]
	0x033F2BE0 LDR W8, [X0 + 0xE0]
	0x033F2BE4 CBNZ W8, 0x33F2BF0
	0x033F2BE8 BL 0x1C16DFC
	0x033F2BEC LDR X0, [X23]
	0x033F2BF0 LDR X8, [X0 + 0xB8]
	0x033F2BF4 LDR X8, [X8 + 0x8]
	0x033F2BF8 CMP X22, X8
	0x033F2BFC B.EQ 0x33F2C60

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X20, 0xFEC000
	006 Move W8, [X20+1158]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD3C000
	013 Move X0, [X0+32]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1158], W8
	017 Move [X31], X31
	018 Move [X31+8], X31
	019 Move [X31+16], X31
	020 Move X0, [X19+48]
	021 Compare X0, 0
	022 JumpIfEqual {39}
	023 Move X8, 0xD3C000
	024 Move X8, [X8+32]
	025 Move X9, [X0]
	026 Move X1, [X8]
	027 Move X8, [X9+64]
	028 Move X9, [X1+64]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Call 0x1C17E08
	031 Move X8, [X0+16]
	032 Move V0, [X0]
	033 Move [X31+16], X8
	034 Move [X31], V0
	035 Add X0, X31, 0
	036 Move X1, X31
	037 Call CancellationTokenRegistration.Dispose, X0
	038 Move [X19+48], X31
	039 Move X20, [X31+48]
	040 Move X19, [X31+56]
	041 Move X30, [X31+32]
	042 Add X31, X31, 64
	043 Return 
	044 Call 0x1C181E0
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X20, X0
	047 Move X0, X20
	048 Call 0x3EB2AD0
	049 Move X20, X0
	050 Move X0, 0xD2B000
	051 Move X0, [X0+1208]
	052 Call 0x1C17D08
	053 Move X8, [X20]
	054 Move X1, [X8]
	055 Call 0x1C18270
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {61}
	060 Call 0x3EB2AE0
	061 Move W0, 8
	062 Call 0x3EB2AF0
	063 Move X8, [X20]
	064 Move [X0], X8
	065 Move X1, 0xAC3000
	066 Add X1, X1, 3672
	067 Move X2, X31
	068 Call 0x3EB2B00
	069 Move X20, X0
	070 Call 0x3EB2AE0
	071 Move X0, X20
	072 Call 0x1D2D690
	073 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x033EFBC8 B.EQ 0x33EFBFC
	0x033EFBCC BL 0x1C16D44
	0x033EFBD0 MOV X0, X20
	0x033EFBD4 BL 0x1C242B0
	0x033EFBD8 CBZ W0, 0x33EFBFC
	0x033EFBDC MOVZ W1, 0x800000
	0x033EFBE0 MOVZ W2, 0x1600000
	0x033EFBE4 MOV X0, X19
	0x033EFBE8 BL 0x33EF944

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call 0x1C17D44
	005 Move W8, 1
	006 Move [X19+60], W8
	007 Move X0, X19
	008 Move X1, X31
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call Object..ctor, X0
	012 Return 

