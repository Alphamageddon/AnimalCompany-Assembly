Type: System.Threading.Tasks.TaskFactory/CompleteOnCountdownPromise

Method: System.Void .ctor(System.Threading.Tasks.Task[] tasksCopy)

Disassembly:
	0x033FA944 STP X20, X19, [X31 + 0x20]
	0x033FA948 ADRP X20, 0xFE3000
	0x033FA94C ADRP X19, 0xD33000
	0x033FA950 LDRB W8, [X20 + 0x4CB]
	0x033FA954 LDR X19, [X19 + 0xB20]
	0x033FA958 TBNZ X8, 0x0, 0x33FA994
	0x033FA95C ADRP X0, 0xD33000
	0x033FA960 LDR X0, [X0 + 0x3B8]
	0x033FA964 BL 0x1C16CF4
	0x033FA968 ADRP X0, 0xD33000
	0x033FA96C LDR X0, [X0 + 0xB00]
	0x033FA970 BL 0x1C16CF4
	0x033FA974 ADRP X0, 0xD33000
	0x033FA978 LDR X0, [X0 + 0xB28]
	0x033FA97C BL 0x1C16CF4
	0x033FA980 ADRP X0, 0xD33000
	0x033FA984 LDR X0, [X0 + 0xB20]
	0x033FA988 BL 0x1C16CF4
	0x033FA98C MOVZ W8, 0x1
	0x033FA990 STRB W8, [X20 + 0x4CB]
	0x033FA994 LDR X0, [X19]
	0x033FA998 ADRP X22, 0xD33000
	0x033FA99C ADRP X20, 0xD33000
	0x033FA9A0 ADRP X21, 0xD33000
	0x033FA9A4 LDR W8, [X0 + 0xE0]
	0x033FA9A8 LDR X22, [X22 + 0x3B8]
	0x033FA9AC LDR X20, [X20 + 0xB28]
	0x033FA9B0 LDR X21, [X21 + 0xB00]
	0x033FA9B4 CBNZ W8, 0x33FA9C0
	0x033FA9B8 BL 0x1C16DFC
	0x033FA9BC LDR X0, [X19]
	0x033FA9C0 LDR X8, [X0 + 0xB8]
	0x033FA9C4 LDR X0, [X22]
	0x033FA9C8 LDR X19, [X8]
	0x033FA9CC BL 0x1C16F10
	0x033FA9D0 LDR X2, [X20]
	0x033FA9D4 MOV X1, X19
	0x033FA9D8 MOV X3, X31
	0x033FA9DC MOV X20, X0
	0x033FA9E0 BL 0x33DCD88
	0x033FA9E4 LDR X8, [X21]
	0x033FA9E8 LDP X22, X21, [X31 + 0x10]
	0x033FA9EC LDR X8, [X8 + 0xB8]
	0x033FA9F0 STR X20, [X8]
	0x033FA9F4 LDP X20, X19, [X31 + 0x20]
	0x033FA9F8 LDR X30, [X31], #0x30
	0x033FA9FC RET
	0x033FAA00 STR X30, [X31 - 0x20]!
	0x033FAA04 STP X20, X19, [X31 + 0x10]
	0x033FAA08 ADRP X19, 0xFE3000
	0x033FAA0C ADRP X20, 0xD33000
	0x033FAA10 LDRB W8, [X19 + 0x4CC]
	0x033FAA14 LDR X20, [X20 + 0xB20]
	0x033FAA18 TBNZ X8, 0x0, 0x33FAA30
	0x033FAA1C ADRP X0, 0xD33000
	0x033FAA20 LDR X0, [X0 + 0xB20]
	0x033FAA24 BL 0x1C16CF4
	0x033FAA28 MOVZ W8, 0x1
	0x033FAA2C STRB W8, [X19 + 0x4CC]
	0x033FAA30 LDR X0, [X20]
	0x033FAA34 BL 0x1C16F10
	0x033FAA38 MOV X1, X31
	0x033FAA3C MOV X19, X0
	0x033FAA40 BL 0x33BDD8C
	0x033FAA44 LDR X8, [X20]
	0x033FAA48 LDR X8, [X8 + 0xB8]
	0x033FAA4C STR X19, [X8]
	0x033FAA50 LDP X20, X19, [X31 + 0x10]
	0x033FAA54 LDR X30, [X31], #0x20
	0x033FAA58 RET
	0x033FAA5C MOV X1, X31
	0x033FAA60 B 0x33BDD8C
	0x033FAA64 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFE4000
	007 Move X22, 0xD34000
	008 Move W8, [X21+1206]
	009 Move X22, [X22+2720]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xD22000
	017 Move X0, [X0+1832]
	018 Call 0x1C17CF4
	019 Move X0, 0xD34000
	020 Move X0, [X0+2720]
	021 Call 0x1C17CF4
	022 Move X0, 0xD34000
	023 Move X0, [X0+2728]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+1206], W8
	027 Move X1, [X22]
	028 Move X0, X19
	029 Call Task`1<Object>..ctor, X0
	030 Move [X19+88], X20
	031 Compare X20, 0
	032 JumpIfEqual {90}
	033 Move X8, [X20+24]
	034 Move X20, 0xD22000
	035 Move X20, [X20+1832]
	036 Move [X19+96], W8
	037 Move X0, [X20]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {47}
	041 Call 0x1C17DFC
	042 Move X0, [X20]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X21, 0xFE0000
	048 Move W8, [X21+2088]
	049 Compare W8, 0
	050 JumpIfNotEqual {59}
	051 Move X0, 0xD22000
	052 Move X0, [X0+1832]
	053 Call 0x1C17CF4
	054 Move X0, 0xCFB000
	055 Move X0, [X0+1976]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X21+2088], W8
	059 Move X21, 0xCFB000
	060 Move X21, [X21+1976]
	061 Move X0, [X21]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {67}
	065 Call 0x1C17DFC
	066 Move X0, [X21]
	067 Move X8, [X0+184]
	068 Move W8, [X8+16]
	069 Compare W8, 0
	070 JumpIfEqual {84}
	071 Move X0, [X20]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X19
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X22, [X31+16]
	080 Move X21, [X31+24]
	081 Move X30, [X31+48]
	082 Call DebuggerSupport.AddToActiveTasksNonInlined, X0
	083 Return 
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 Move X22, [X31+16]
	087 Move X21, [X31+24]
	088 Move X30, [X31+48]
	089 Return 
	090 Call 0x1C17F20

Method: System.Void Invoke(System.Threading.Tasks.Task completingTask)

Disassembly:
	0x033FAA68 STP X20, X19, [X31 + 0x10]
	0x033FAA6C ADRP X20, 0xFE3000
	0x033FAA70 LDRB W8, [X20 + 0x4CD]
	0x033FAA74 MOV X19, X1
	0x033FAA78 TBNZ X8, 0x0, 0x33FAA90
	0x033FAA7C ADRP X0, 0xCFA000
	0x033FAA80 LDR X0, [X0 + 0x7B8]
	0x033FAA84 BL 0x1C16CF4
	0x033FAA88 MOVZ W8, 0x1
	0x033FAA8C STRB W8, [X20 + 0x4CD]
	0x033FAA90 CBZ X19, 0x33FAAE4
	0x033FAA94 ADRP X9, 0xCFA000
	0x033FAA98 LDR X9, [X9 + 0x7B8]
	0x033FAA9C LDR X8, [X19]
	0x033FAAA0 LDR X1, [X9]
	0x033FAAA4 LDRB W10, [X8 + 0x130]
	0x033FAAA8 LDRB W9, [X1 + 0x130]
	0x033FAAAC CMP W10, W9
	0x033FAAB0 B.CC 0x33FAADC
	0x033FAAB4 LDR X8, [X8 + 0xC8]
	0x033FAAB8 ADD X8, X8, X9, 0x3, LSL
	0x033FAABC LDUR X8, [X8 - 0x8]
	0x033FAAC0 CMP X8, X1
	0x033FAAC4 B.NE 0x33FAADC
	0x033FAAC8 MOV X0, X19
	0x033FAACC LDP X20, X19, [X31 + 0x10]
	0x033FAAD0 MOV W1, W31
	0x033FAAD4 LDR X30, [X31], #0x20
	0x033FAAD8 B 0x33F269C
	0x033FAADC MOV X0, X19
	0x033FAAE0 BL 0x1C171E0
	0x033FAAE4 BL 0x1C16F20
	0x033FAAE8 RET
	0x033FAAEC RET
	0x033FAAF0 RET
	0x033FAAF4 MOVZ W1, 0x4E9F
	0x033FAAF8 MOV X2, X31
	0x033FAAFC B 0x3241B10
	0x033FAB00 STP X30, X19, [X31 - 0x10]!
	0x033FAB04 MOV X19, X0
	0x033FAB08 BL 0x33FAB20
	0x033FAB0C STR X0, [X19 + 0x28]
	0x033FAB10 BL 0x33FABB4
	0x033FAB14 STR X0, [X19 + 0x30]
	0x033FAB18 LDP X30, X19, [X31], #0x10
	0x033FAB1C RET
	0x033FAB20 STR X30, [X31 - 0x20]!
	0x033FAB24 STP X20, X19, [X31 + 0x10]
	0x033FAB28 ADRP X19, 0xFE3000
	0x033FAB2C ADRP X20, 0xD28000
	0x033FAB30 LDRB W8, [X19 + 0x4FD]
	0x033FAB34 LDR X20, [X20 + 0x968]
	0x033FAB38 TBNZ X8, 0x0, 0x33FAB5C
	0x033FAB3C ADRP X0, 0xD28000
	0x033FAB40 LDR X0, [X0 + 0x968]
	0x033FAB44 BL 0x1C16CF4
	0x033FAB48 ADRP X0, 0xD28000
	0x033FAB4C LDR X0, [X0 + 0x368]
	0x033FAB50 BL 0x1C16CF4
	0x033FAB54 MOVZ W8, 0x1
	0x033FAB58 STRB W8, [X19 + 0x4FD]
	0x033FAB5C LDR X8, [X20]
	0x033FAB60 LDR X8, [X8 + 0xB8]
	0x033FAB64 LDR X0, [X8]
	0x033FAB68 CBNZ X0, 0x33FABA8
	0x033FAB6C ADRP X8, 0xD28000
	0x033FAB70 LDR X8, [X8 + 0x368]
	0x033FAB74 LDR X0, [X8]
	0x033FAB78 BL 0x1C16F10
	0x033FAB7C MOV X1, X31
	0x033FAB80 MOV X19, X0
	0x033FAB84 BL 0x322F32C
	0x033FAB88 LDR X8, [X20]
	0x033FAB8C MOV X1, X19
	0x033FAB90 MOV X2, X31
	0x033FAB94 LDR X0, [X8 + 0xB8]
	0x033FAB98 BL 0x1C24138
	0x033FAB9C LDR X8, [X20]
	0x033FABA0 LDR X8, [X8 + 0xB8]
	0x033FABA4 LDR X0, [X8]
	0x033FABA8 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFE4000
	007 Move X21, 0xD22000
	008 Move W8, [X22+1207]
	009 Move X21, [X21+1832]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xD22000
	017 Move X0, [X0+1832]
	018 Call 0x1C17CF4
	019 Move X0, 0xD34000
	020 Move X0, [X0+2736]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1207], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Compare X20, 0
	030 JumpIfEqual {103}
	031 Move W20, [X20+56]
	032 Call 0x1C17D44
	033 Move TEMP, X20
	034 And TEMP, TEMP, 0x10000000
	035 Compare TEMP, 0x10000000
	036 JumpIfNotEqual {40}
	037 Move W1, 1
	038 Move X0, X19
	039 Call Task.SetNotificationForWaitCompletion, X0, X1
	040 Add X0, X19, 96
	041 Call 0x1C252B0
	042 Compare W0, 0
	043 JumpIfEqual {50}
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Return 
	050 Move X0, [X21]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {60}
	054 Call 0x1C17DFC
	055 Move X0, [X21]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X20, 0xFE0000
	061 Move W8, [X20+2089]
	062 Compare W8, 0
	063 JumpIfNotEqual {72}
	064 Move X0, 0xD22000
	065 Move X0, [X0+1832]
	066 Call 0x1C17CF4
	067 Move X0, 0xCFB000
	068 Move X0, [X0+1976]
	069 Call 0x1C17CF4
	070 Move W8, 1
	071 Move [X20+2089], W8
	072 Move X20, 0xCFB000
	073 Move X20, [X20+1976]
	074 Move X0, [X20]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {80}
	078 Call 0x1C17DFC
	079 Move X0, [X20]
	080 Move X8, [X0+184]
	081 Move W8, [X8+16]
	082 Compare W8, 0
	083 JumpIfEqual {91}
	084 Move X0, [X21]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X0, X19
	090 Call DebuggerSupport.RemoveFromActiveTasksNonInlined, X0
	091 Move X8, 0xD34000
	092 Move X1, [X19+88]
	093 Move X8, [X8+2736]
	094 Move X0, X19
	095 Move X20, [X31+32]
	096 Move X19, [X31+40]
	097 Move X22, [X31+16]
	098 Move X21, [X31+24]
	099 Move X2, [X8]
	100 Move X30, [X31+48]
	101 Call Task`1<Object>.TrySetResult, X0, X1
	102 Return 
	103 Call 0x1C17F20

Method: System.Boolean get_InvokeMayRunArbitraryCode()

Disassembly:
	0x033FB08C MOV X1, X19
	0x033FB090 MOV X3, X31

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean get_ShouldNotifyDebuggerOfWaitCompletion()

Disassembly:
	0x033FB094 BL 0x3315F7C
	0x033FB098 B 0x33FB0F0
	0x033FB09C ADRP X8, 0xD27000
	0x033FB0A0 ADRP X9, 0xD27000
	0x033FB0A4 LDR X8, [X8 + 0x310]
	0x033FB0A8 LDR X9, [X9 + 0x318]
	0x033FB0AC CMP W21, 0x0
	0x033FB0B0 CSEL X0, X9, X8, LT
	0x033FB0B4 BL 0x1C16D08
	0x033FB0B8 MOV X19, X0
	0x033FB0BC ADRP X0, 0xD00000
	0x033FB0C0 LDR X0, [X0 + 0x760]
	0x033FB0C4 BL 0x1C16D08
	0x033FB0C8 BL 0x1C16F10
	0x033FB0CC MOV X20, X0
	0x033FB0D0 ADRP X0, 0xD20000
	0x033FB0D4 LDR X0, [X0 + 0x670]
	0x033FB0D8 BL 0x1C16D08
	0x033FB0DC MOV X2, X0
	0x033FB0E0 MOV X0, X20
	0x033FB0E4 MOV X1, X19
	0x033FB0E8 MOV X3, X31
	0x033FB0EC BL 0x3311888
	0x033FB0F0 ADRP X0, 0xD32000
	0x033FB0F4 LDR X0, [X0 + 0xB48]
	0x033FB0F8 BL 0x1C16D08
	0x033FB0FC MOV X1, X0
	0x033FB100 MOV X0, X20
	0x033FB104 BL 0x1C16DEC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFE3000
	005 Move W8, [X20+1208]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xCFA000
	012 Move X0, [X0+1976]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1208], W8
	016 Move W20, [X19+56]
	017 Call 0x1C17D44
	018 Move TEMP, X20
	019 And TEMP, TEMP, 0x10000000
	020 Compare TEMP, 0x10000000
	021 JumpIfEqual {27}
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move W0, W31
	025 Move X30, [X31+32]
	026 Return X0
	027 Move X8, 0xCFA000
	028 Move X8, [X8+1976]
	029 Move X19, [X19+88]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Call Task.AnyTaskRequiresNotifyDebuggerOfWaitCompletion, X0
	040 Return X0

