Type: System.Threading.Tasks.Task/WhenAllPromise

Method: System.Void .ctor(System.Threading.Tasks.Task[] tasks)

Disassembly:
	0x033F7020 ADRP X20, 0xD24000
	0x033F7024 LDR X20, [X20 + 0x728]
	0x033F7028 LDR X0, [X20]
	0x033F702C LDR W8, [X0 + 0xE0]
	0x033F7030 CBNZ W8, 0x33F7048
	0x033F7034 BL 0x1C16DFC
	0x033F7038 LDR X0, [X20]
	0x033F703C LDR W8, [X0 + 0xE0]
	0x033F7040 CBNZ W8, 0x33F7048
	0x033F7044 BL 0x1C16DFC
	0x033F7048 ADRP X21, 0xFE2000
	0x033F704C LDRB W8, [X21 + 0x829]
	0x033F7050 CBNZ W8, 0x33F7074
	0x033F7054 ADRP X0, 0xD24000
	0x033F7058 LDR X0, [X0 + 0x728]
	0x033F705C BL 0x1C16CF4
	0x033F7060 ADRP X0, 0xCFD000
	0x033F7064 LDR X0, [X0 + 0x7B8]
	0x033F7068 BL 0x1C16CF4
	0x033F706C MOVZ W8, 0x1
	0x033F7070 STRB W8, [X21 + 0x829]
	0x033F7074 ADRP X21, 0xCFD000
	0x033F7078 LDR X21, [X21 + 0x7B8]
	0x033F707C LDR X0, [X21]
	0x033F7080 LDR W8, [X0 + 0xE0]
	0x033F7084 CBNZ W8, 0x33F7090
	0x033F7088 BL 0x1C16DFC
	0x033F708C LDR X0, [X21]
	0x033F7090 LDR X8, [X0 + 0xB8]
	0x033F7094 LDRB W8, [X8 + 0x10]
	0x033F7098 CBZ W8, 0x33F70B4
	0x033F709C LDR X0, [X20]
	0x033F70A0 LDR W8, [X0 + 0xE0]
	0x033F70A4 CBNZ W8, 0x33F70AC
	0x033F70A8 BL 0x1C16DFC
	0x033F70AC MOV X0, X19
	0x033F70B0 BL 0x33EE8F8
	0x033F70B4 ADRP X8, 0xD36000
	0x033F70B8 LDR X8, [X8 + 0x668]
	0x033F70BC MOV X0, X19
	0x033F70C0 MOV X1, X31
	0x033F70C4 LDR X2, [X8]
	0x033F70C8 BL 0x26A438C
	0x033F70CC TBZ X0, 0x0, 0x33F7014
	0x033F70D0 LDR X0, [X19 + 0x78]
	0x033F70D4 CBZ X0, 0x33F70DC
	0x033F70D8 BL 0x33EBF78
	0x033F70DC ADD X0, X19, 0x60
	0x033F70E0 LDP X20, X19, [X31 + 0x10]
	0x033F70E4 MOV X1, X31
	0x033F70E8 LDP X30, X21, [X31], #0x20
	0x033F70EC B 0x33DF6F0
	0x033F70F0 STP X29, X30, [X31 - 0x60]!
	0x033F70F4 STP X28, X27, [X31 + 0x10]
	0x033F70F8 STP X26, X25, [X31 + 0x20]
	0x033F70FC STP X24, X23, [X31 + 0x30]
	0x033F7100 STP X22, X21, [X31 + 0x40]
	0x033F7104 STP X20, X19, [X31 + 0x50]
	0x033F7108 ADRP X20, 0xFE6000
	0x033F710C ADRP X23, 0xD24000
	0x033F7110 LDRB W8, [X20 + 0x48B]
	0x033F7114 LDR X23, [X23 + 0x728]
	0x033F7118 MOV X19, X0
	0x033F711C TBNZ X8, 0x0, 0x33F7164
	0x033F7120 ADRP X0, 0xD24000
	0x033F7124 LDR X0, [X0 + 0x728]
	0x033F7128 BL 0x1C16CF4
	0x033F712C ADRP X0, 0xD36000
	0x033F7130 LDR X0, [X0 + 0x9C8]
	0x033F7134 BL 0x1C16CF4
	0x033F7138 ADRP X0, 0xD36000
	0x033F713C LDR X0, [X0 + 0x9D0]
	0x033F7140 BL 0x1C16CF4
	0x033F7144 ADRP X0, 0xD36000
	0x033F7148 LDR X0, [X0 + 0x9D8]
	0x033F714C BL 0x1C16CF4
	0x033F7150 ADRP X0, 0xD36000
	0x033F7154 LDR X0, [X0 + 0x668]
	0x033F7158 BL 0x1C16CF4
	0x033F715C MOVZ W8, 0x1
	0x033F7160 STRB W8, [X20 + 0x48B]
	0x033F7164 LDR X0, [X23]
	0x033F7168 LDR W8, [X0 + 0xE0]
	0x033F716C CBNZ W8, 0x33F7174
	0x033F7170 BL 0x1C16DFC
	0x033F7174 ADD X0, X19, 0x60
	0x033F7178 BL 0x1C242B0
	0x033F717C CBZ W0, 0x33F719C
	0x033F7180 LDP X20, X19, [X31 + 0x50]
	0x033F7184 LDP X22, X21, [X31 + 0x40]
	0x033F7188 LDP X24, X23, [X31 + 0x30]
	0x033F718C LDP X26, X25, [X31 + 0x20]
	0x033F7190 LDP X28, X27, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xFE7000
	008 Move X23, 0xD37000
	009 Move X21, 0xD25000
	010 Move W8, [X22+1162]
	011 Move X23, [X23+1608]
	012 Move X21, [X21+1832]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0xD25000
	020 Move X0, [X0+1832]
	021 Call 0x1C17CF4
	022 Move X0, 0xD37000
	023 Move X0, [X0+1608]
	024 Call 0x1C17CF4
	025 Move X0, 0xD37000
	026 Move X0, [X0+2352]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+1162], W8
	030 Move X1, [X23]
	031 Move X0, X20
	032 Call Task`1<VoidTaskResult>..ctor, X0
	033 Move X0, [X21]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {43}
	037 Call 0x1C17DFC
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X22, 0xFE3000
	044 Move W8, [X22+2088]
	045 Compare W8, 0
	046 JumpIfNotEqual {55}
	047 Move X0, 0xD25000
	048 Move X0, [X0+1832]
	049 Call 0x1C17CF4
	050 Move X0, 0xCFE000
	051 Move X0, [X0+1976]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X22+2088], W8
	055 Move X22, 0xCFE000
	056 Move X22, [X22+1976]
	057 Move X0, [X22]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {63}
	061 Call 0x1C17DFC
	062 Move X0, [X22]
	063 Move X8, [X0+184]
	064 Move W8, [X8+16]
	065 Compare W8, 0
	066 JumpIfEqual {74}
	067 Move X0, [X21]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X20
	073 Call DebuggerSupport.AddToActiveTasksNonInlined, X0
	074 Move [X20+88], X19
	075 Compare X19, 0
	076 JumpIfEqual {109}
	077 Move W8, [X19+24]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move [X20+96], W8
	080 Move X22, X31
	081 Add X23, X19, 32
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X21, [X23]
	084 Compare X21, 0
	085 JumpIfEqual {109}
	086 Move X0, X21
	087 Call Task.get_IsCompleted, X0
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {94}
	092 Move X0, X20
	093 Call WhenAllPromise.Invoke, X0, X1
	094 Move X0, X21
	095 Move X1, X20
	096 Move W2, W31
	097 Call Task.AddCompletionAction, X0, X1, X2
	098 Move W8, [X19+24]
	099 Add X22, X22, 1
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move X30, [X31+48]
	106 Move X23, [X31+56]
	107 Return 
	108 Call 0x1C17F28
	109 Call 0x1C17F20

Method: System.Void Invoke(System.Threading.Tasks.Task ignored)

Disassembly:
	0x033F80F0 LDR X21, [X21 + 0x7E8]
	0x033F80F4 MOV W20, W2
	0x033F80F8 MOV X19, X0
	0x033F80FC TBNZ X8, 0x0, 0x33F8138
	0x033F8100 ADRP X0, 0xD25000
	0x033F8104 LDR X0, [X0 + 0xE48]
	0x033F8108 BL 0x1C16CF4
	0x033F810C ADRP X0, 0xD03000
	0x033F8110 LDR X0, [X0 + 0x7E8]
	0x033F8114 BL 0x1C16CF4
	0x033F8118 ADRP X0, 0xD35000
	0x033F811C LDR X0, [X0 + 0xA00]
	0x033F8120 BL 0x1C16CF4
	0x033F8124 ADRP X0, 0xD35000
	0x033F8128 LDR X0, [X0 + 0xA08]
	0x033F812C BL 0x1C16CF4
	0x033F8130 MOVZ W8, 0x1
	0x033F8134 STRB W8, [X22 + 0x49C]
	0x033F8138 LDR X0, [X21]
	0x033F813C LDR X22, [X19 + 0x20]
	0x033F8140 LDR W8, [X0 + 0xE0]
	0x033F8144 CBNZ W8, 0x33F814C
	0x033F8148 BL 0x1C16DFC
	0x033F814C ADRP X23, 0xFE1000
	0x033F8150 LDRB W8, [X23 + 0x88D]
	0x033F8154 CBNZ W8, 0x33F816C
	0x033F8158 ADRP X0, 0xD03000
	0x033F815C LDR X0, [X0 + 0x7E8]
	0x033F8160 BL 0x1C16CF4
	0x033F8164 MOVZ W8, 0x1
	0x033F8168 STRB W8, [X23 + 0x88D]
	0x033F816C LDR X0, [X21]
	0x033F8170 LDR W8, [X0 + 0xE0]
	0x033F8174 CBNZ W8, 0x33F8180
	0x033F8178 BL 0x1C16DFC
	0x033F817C LDR X0, [X21]
	0x033F8180 LDR X8, [X0 + 0xB8]
	0x033F8184 LDR X8, [X8 + 0x8]
	0x033F8188 CMP X22, X8
	0x033F818C B.EQ 0x33F81C4
	0x033F8190 ADRP X22, 0xD35000
	0x033F8194 LDR X22, [X22 + 0xA08]
	0x033F8198 TBZ X20, 0x0, 0x33F81DC
	0x033F819C LDR W8, [X0 + 0xE0]
	0x033F81A0 CBNZ W8, 0x33F81A8
	0x033F81A4 BL 0x1C16DFC
	0x033F81A8 BL 0x33F2CD0
	0x033F81AC LDR X8, [X19 + 0x20]
	0x033F81B0 CMP X0, X8
	0x033F81B4 B.EQ 0x33F81E4
	0x033F81B8 BL 0x33E9FC4
	0x033F81BC AND W23, W0, 0x1
	0x033F81C0 B 0x33F81E8
	0x033F81C4 AND W2, W20, 0x1
	0x033F81C8 MOV X0, X19
	0x033F81CC LDP X20, X19, [X31 + 0x20]
	0x033F81D0 LDP X22, X21, [X31 + 0x10]
	0x033F81D4 LDP X30, X23, [X31], #0x30
	0x033F81D8 B 0x33F8314
	0x033F81DC MOV W23, W31
	0x033F81E0 B 0x33F81E8
	0x033F81E4 MOVZ W23, 0x1
	0x033F81E8 LDR X0, [X22]
	0x033F81EC LDR W8, [X0 + 0xE0]
	0x033F81F0 CBNZ W8, 0x33F81FC
	0x033F81F4 BL 0x1C16DFC
	0x033F81F8 LDR X0, [X22]
	0x033F81FC LDR X8, [X0 + 0xB8]
	0x033F8200 LDR X20, [X8 + 0x8]
	0x033F8204 CBNZ X20, 0x33F8258
	0x033F8208 LDR W8, [X0 + 0xE0]
	0x033F820C CBNZ W8, 0x33F8218
	0x033F8210 BL 0x1C16DFC
	0x033F8214 LDR X0, [X22]
	0x033F8218 ADRP X9, 0xD25000
	0x033F821C LDR X8, [X0 + 0xB8]
	0x033F8220 LDR X9, [X9 + 0xE48]
	0x033F8224 LDR X21, [X8]
	0x033F8228 LDR X0, [X9]
	0x033F822C BL 0x1C16F10
	0x033F8230 ADRP X8, 0xD35000
	0x033F8234 LDR X8, [X8 + 0xA00]
	0x033F8238 MOV X1, X21
	0x033F823C MOV X3, X31
	0x033F8240 MOV X20, X0
	0x033F8244 LDR X2, [X8]
	0x033F8248 BL 0x2A6B948
	0x033F824C LDR X8, [X22]
	0x033F8250 LDR X8, [X8 + 0xB8]
	0x033F8254 STR X20, [X8 + 0x8]
	0x033F8258 LDP X2, X3, [X19 + 0x18]
	0x033F825C MOV X1, X20
	0x033F8260 BL 0x33F8428
	0x033F8264 CBZ W23, 0x33F827C
	0x033F8268 LDP X20, X19, [X31 + 0x20]
	0x033F826C LDP X22, X21, [X31 + 0x10]
	0x033F8270 MOV W1, W31
	0x033F8274 LDP X30, X23, [X31], #0x30
	0x033F8278 B 0x33F77C0
	0x033F827C CBZ X0, 0x33F8298
	0x033F8280 MOV W1, W31
	0x033F8284 BL 0x33F0124
	0x033F8288 LDP X20, X19, [X31 + 0x20]
	0x033F828C LDP X22, X21, [X31 + 0x10]
	0x033F8290 LDP X30, X23, [X31], #0x30
	0x033F8294 RET
	0x033F8298 BL 0x1C16F20
	0x033F829C CMP W1, 0x1
	0x033F82A0 MOV X19, X0
	0x033F82A4 B.NE 0x33F8308
	0x033F82A8 MOV X0, X19
	0x033F82AC BL 0x3EB1AD0
	0x033F82B0 MOV X19, X0
	0x033F82B4 ADRP X0, 0xD35000
	0x033F82B8 LDR X0, [X0 + 0x6D0]
	0x033F82BC BL 0x1C16D08
	0x033F82C0 LDR X8, [X19]
	0x033F82C4 LDR X1, [X8]
	0x033F82C8 BL 0x1C17270
	0x033F82CC TBZ X0, 0x0, 0x33F82E0
	0x033F82D0 LDP X20, X19, [X31 + 0x20]
	0x033F82D4 LDP X22, X21, [X31 + 0x10]
	0x033F82D8 LDP X30, X23, [X31], #0x30
	0x033F82DC B 0x3EB1AE0
	0x033F82E0 MOVZ W0, 0x8
	0x033F82E4 BL 0x3EB1AF0
	0x033F82E8 LDR X8, [X19]
	0x033F82EC STR X8, [X0]
	0x033F82F0 ADRP X1, 0xABC000
	0x033F82F4 ADD X1, X1, 0xE58
	0x033F82F8 MOV X2, X31
	0x033F82FC BL 0x3EB1B00
	0x033F8300 MOV X19, X0
	0x033F8304 BL 0x3EB1AE0
	0x033F8308 MOV X0, X19
	0x033F830C BL 0x1D2C690
	0x033F8310 BL 0x1990590
	0x033F8314 STP X30, X21, [X31 - 0x20]!
	0x033F8318 STP X20, X19, [X31 + 0x10]
	0x033F831C ADRP X21, 0xFE5000
	0x033F8320 LDRB W8, [X21 + 0x4A1]
	0x033F8324 MOV W20, W2
	0x033F8328 MOV X19, X0
	0x033F832C TBNZ X8, 0x0, 0x33F8344
	0x033F8330 ADRP X0, 0xCFC000
	0x033F8334 LDR X0, [X0 + 0x7B8]
	0x033F8338 BL 0x1C16CF4
	0x033F833C MOVZ W8, 0x1
	0x033F8340 STRB W8, [X21 + 0x4A1]
	0x033F8344 TBZ X20, 0x0, 0x33F8414
	0x033F8348 BL 0x33F865C
	0x033F834C TBZ X0, 0x0, 0x33F8414
	0x033F8350 ADRP X20, 0xFE5000
	0x033F8354 LDRB W8, [X20 + 0x503]
	0x033F8358 CBNZ W8, 0x33F8388
	0x033F835C ADRP X0, 0xD35000
	0x033F8360 LDR X0, [X0 + 0x9E0]
	0x033F8364 BL 0x1C16CF4
	0x033F8368 ADRP X0, 0xD35000
	0x033F836C LDR X0, [X0 + 0x808]
	0x033F8370 BL 0x1C16CF4
	0x033F8374 ADRP X0, 0xD2D000
	0x033F8378 LDR X0, [X0 + 0x948]
	0x033F837C BL 0x1C16CF4
	0x033F8380 MOVZ W8, 0x1
	0x033F8384 STRB W8, [X20 + 0x503]
	0x033F8388 ADRP X21, 0xD35000
	0x033F838C LDR X21, [X21 + 0x808]
	0x033F8390 LDR X8, [X21]
	0x033F8394 LDR X8, [X8 + 0xB8]
	0x033F8398 LDR X20, [X8]
	0x033F839C CBNZ X20, 0x33F83D8
	0x033F83A0 ADRP X8, 0xD2D000
	0x033F83A4 LDR X8, [X8 + 0x948]
	0x033F83A8 LDR X0, [X8]
	0x033F83AC BL 0x1C16F10
	0x033F83B0 ADRP X8, 0xD35000
	0x033F83B4 LDR X8, [X8 + 0x9E0]
	0x033F83B8 MOV X1, X31
	0x033F83BC MOV X3, X31

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0xFE6000
	014 Move X23, 0xD24000
	015 Move W8, [X20+1163]
	016 Move X23, [X23+1832]
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {39}
	022 Move X0, 0xD24000
	023 Move X0, [X0+1832]
	024 Call 0x1C17CF4
	025 Move X0, 0xD36000
	026 Move X0, [X0+2504]
	027 Call 0x1C17CF4
	028 Move X0, 0xD36000
	029 Move X0, [X0+2512]
	030 Call 0x1C17CF4
	031 Move X0, 0xD36000
	032 Move X0, [X0+2520]
	033 Call 0x1C17CF4
	034 Move X0, 0xD36000
	035 Move X0, [X0+1640]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+1163], W8
	039 Move X0, [X23]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X0, X19, 96
	045 Call 0x1C252B0
	046 Compare W0, 0
	047 JumpIfEqual {61}
	048 Move X20, [X31+80]
	049 Move X19, [X31+88]
	050 Move X22, [X31+64]
	051 Move X21, [X31+72]
	052 Move X24, [X31+48]
	053 Move X23, [X31+56]
	054 Move X26, [X31+32]
	055 Move X25, [X31+40]
	056 Move X28, [X31+16]
	057 Move X27, [X31+24]
	058 Move X29, [X31+96]
	059 Move X30, [X31+104]
	060 Return 
	061 Move X8, [X19+88]
	062 Compare X8, 0
	063 JumpIfEqual {128}
	064 Move X25, 0xD36000
	065 Move X26, 0xD36000
	066 Move X27, 0xD36000
	067 Move X25, [X25+2512]
	068 Move X26, [X26+2504]
	069 Move X27, [X27+2520]
	070 Move X21, X31
	071 Move X20, X31
	072 Move W24, 4
	073 Move W9, [X8+24]
	074 Subtract X28, X24, 4
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X22, [X8]
	078 Compare X22, 0
	079 JumpIfEqual {128}
	080 Move W29, [X22+56]
	081 Call 0x1C17D44
	082 Move TEMP, X29
	083 And TEMP, TEMP, 0x200000
	084 Compare TEMP, 0x200000
	085 JumpIfEqual {92}
	086 Move W29, [X22+56]
	087 Call 0x1C17D44
	088 And W8, W29, 0x600000
	089 NotImplemented "Instruction CMP not yet implemented."
	090 NotImplemented "Instruction CCMP not yet implemented."
	091 NotImplemented "Instruction CSEL not yet implemented."
	092 Compare X21, 0
	093 JumpIfEqual {96}
	094 Move X0, X22
	095 Call Task.GetExceptionDispatchInfos, X0
	096 Move X0, [X25]
	097 Call 0x1C17F10
	098 Move X1, [X26]
	099 Move X21, X0
	100 Call 0x319BF58, X0
	101 Move X0, X22
	102 Call Task.GetExceptionDispatchInfos, X0
	103 Compare X21, 0
	104 JumpIfEqual {128}
	105 Move X2, [X27]
	106 Move X1, X0
	107 Move X0, X21
	108 Call 0x319C748, X0, X1
	109 Move W22, [X22+56]
	110 Call 0x1C17D44
	111 Move TEMP, X22
	112 And TEMP, TEMP, 0x10000000
	113 Compare TEMP, 0x10000000
	114 JumpIfEqual {121}
	115 Move X8, [X19+88]
	116 Compare X8, 0
	117 JumpIfEqual {128}
	118 Move W9, [X8+24]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move [X8], X31
	121 Move W1, 1
	122 Move X0, X19
	123 Call Task.SetNotificationForWaitCompletion, X0, X1
	124 Move X8, [X19+88]
	125 Add X24, X24, 1
	126 Compare X8, 0
	127 JumpIfNotEqual {73}
	128 Call 0x1C17F20
	129 Compare X21, 0
	130 JumpIfEqual {147}
	131 Move X0, X19
	132 Move X1, X21
	133 Move X20, [X31+80]
	134 Move X19, [X31+88]
	135 Move X22, [X31+64]
	136 Move X21, [X31+72]
	137 Move X24, [X31+48]
	138 Move X23, [X31+56]
	139 Move X26, [X31+32]
	140 Move X25, [X31+40]
	141 Move X28, [X31+16]
	142 Move X27, [X31+24]
	143 Move X29, [X31+96]
	144 Move X30, [X31+104]
	145 Call Task.TrySetException, X0, X1
	146 Return 
	147 Compare X20, 0
	148 JumpIfEqual {173}
	149 Move X21, [X20+72]
	150 Call 0x1C17D44
	151 Compare X21, 0
	152 JumpIfEqual {154}
	153 Move X21, [X21+40]
	154 Move X0, X20
	155 Call Task.GetCancellationExceptionDispatchInfo, X0
	156 Move X2, X0
	157 Move X0, X19
	158 Move X1, X21
	159 Move X20, [X31+80]
	160 Move X19, [X31+88]
	161 Move X22, [X31+64]
	162 Move X21, [X31+72]
	163 Move X24, [X31+48]
	164 Move X23, [X31+56]
	165 Move X26, [X31+32]
	166 Move X25, [X31+40]
	167 Move X28, [X31+16]
	168 Move X27, [X31+24]
	169 Move X29, [X31+96]
	170 Move X30, [X31+104]
	171 Call Task.TrySetCanceled, X0, X1, X2
	172 Return 
	173 Move X0, [X23]
	174 Move W8, [X0+224]
	175 Compare W8, 0
	176 JumpIfNotEqual {183}
	177 Call 0x1C17DFC
	178 Move X0, [X23]
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {183}
	182 Call 0x1C17DFC
	183 Move X20, 0xFE2000
	184 Move W8, [X20+2089]
	185 Compare W8, 0
	186 JumpIfNotEqual {195}
	187 Move X0, 0xD24000
	188 Move X0, [X0+1832]
	189 Call 0x1C17CF4
	190 Move X0, 0xCFD000
	191 Move X0, [X0+1976]
	192 Call 0x1C17CF4
	193 Move W8, 1
	194 Move [X20+2089], W8
	195 Move X20, 0xCFD000
	196 Move X20, [X20+1976]
	197 Move X0, [X20]
	198 Move W8, [X0+224]
	199 Compare W8, 0
	200 JumpIfNotEqual {203}
	201 Call 0x1C17DFC
	202 Move X0, [X20]
	203 Move X8, [X0+184]
	204 Move W8, [X8+16]
	205 Compare W8, 0
	206 JumpIfEqual {214}
	207 Move X0, [X23]
	208 Move W8, [X0+224]
	209 Compare W8, 0
	210 JumpIfNotEqual {212}
	211 Call 0x1C17DFC
	212 Move X0, X19
	213 Call DebuggerSupport.RemoveFromActiveTasksNonInlined, X0
	214 Move X8, 0xD36000
	215 Move X8, [X8+1640]
	216 Move X0, X19
	217 Move X20, [X31+80]
	218 Move X19, [X31+88]
	219 Move X22, [X31+64]
	220 Move X21, [X31+72]
	221 Move X2, [X8]
	222 Move X24, [X31+48]
	223 Move X23, [X31+56]
	224 Move X26, [X31+32]
	225 Move X25, [X31+40]
	226 Move X28, [X31+16]
	227 Move X27, [X31+24]
	228 Move X1, X31
	229 Move X29, [X31+96]
	230 Move X30, [X31+104]
	231 Call Task`1<VoidTaskResult>.TrySetResult, X0, X1
	232 Return 
	233 Call 0x1C17F28

Method: System.Boolean get_ShouldNotifyDebuggerOfWaitCompletion()

Disassembly:
	0x033F83C0 MOV X20, X0
	0x033F83C4 LDR X2, [X8]
	0x033F83C8 BL 0x33E1224
	0x033F83CC LDR X8, [X21]
	0x033F83D0 LDR X8, [X8 + 0xB8]
	0x033F83D4 STR X20, [X8]
	0x033F83D8 ADRP X21, 0xCFC000
	0x033F83DC LDR X21, [X21 + 0x7B8]
	0x033F83E0 LDR X19, [X19 + 0x18]
	0x033F83E4 LDR X0, [X21]
	0x033F83E8 LDR W8, [X0 + 0xE0]
	0x033F83EC CBNZ W8, 0x33F83F8
	0x033F83F0 BL 0x1C16DFC
	0x033F83F4 LDR X0, [X21]
	0x033F83F8 BL 0x1C16D0C
	0x033F83FC MOV X1, X20
	0x033F8400 MOV X2, X19
	0x033F8404 LDP X20, X19, [X31 + 0x10]
	0x033F8408 MOV X3, X0
	0x033F840C LDP X30, X21, [X31], #0x20
	0x033F8410 B 0x33F7C7C
	0x033F8414 MOV X0, X19
	0x033F8418 LDP X20, X19, [X31 + 0x10]
	0x033F841C MOV W1, W31
	0x033F8420 LDP X30, X21, [X31], #0x20
	0x033F8424 B 0x33E9E8C
	0x033F8428 SUB X31, X31, 0x40
	0x033F842C STP X30, X23, [X31 + 0x10]
	0x033F8430 STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFE6000
	005 Move W8, [X20+1164]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xCFD000
	012 Move X0, [X0+1976]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1164], W8
	016 Move W20, [X19+56]
	017 Call 0x1C17D44
	018 Move TEMP, X20
	019 And TEMP, TEMP, 0x10000000
	020 Compare TEMP, 0x10000000
	021 JumpIfEqual {27}
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move W0, W31
	025 Move X30, [X31+32]
	026 Return X0
	027 Move X8, 0xCFD000
	028 Move X8, [X8+1976]
	029 Move X19, [X19+88]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Call Task.AnyTaskRequiresNotifyDebuggerOfWaitCompletion, X0
	040 Return X0

Method: System.Boolean get_InvokeMayRunArbitraryCode()

Disassembly:
	0x033F8434 STP X20, X19, [X31 + 0x30]
	0x033F8438 ADRP X22, 0xFE5000

ISIL:
	001 Move W0, 1
	002 Return X0

