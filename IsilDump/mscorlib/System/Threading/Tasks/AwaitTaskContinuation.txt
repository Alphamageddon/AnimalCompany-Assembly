Type: System.Threading.Tasks.AwaitTaskContinuation

Method: System.Void .ctor(System.Action action, System.Boolean flowExecutionContext)

Disassembly:
	0x033F8A98 MOV X1, X20
	0x033F8A9C BL 0x33F8BC4
	0x033F8AA0 ADRP X8, 0xD03000
	0x033F8AA4 LDR X8, [X8 + 0x7E8]
	0x033F8AA8 LDR X22, [X19 + 0x10]
	0x033F8AAC LDR X0, [X8]
	0x033F8AB0 LDR W8, [X0 + 0xE0]
	0x033F8AB4 CBNZ W8, 0x33F8ABC
	0x033F8AB8 BL 0x1C16DFC
	0x033F8ABC MOV X0, X22
	0x033F8AC0 MOV X1, X21
	0x033F8AC4 BL 0x33F8C30
	0x033F8AC8 ADRP X22, 0xD35000
	0x033F8ACC LDR X22, [X22 + 0x760]
	0x033F8AD0 LDR X0, [X22]
	0x033F8AD4 LDR W8, [X0 + 0xE0]
	0x033F8AD8 CBNZ W8, 0x33F8AE4
	0x033F8ADC BL 0x1C16DFC
	0x033F8AE0 LDR X0, [X22]
	0x033F8AE4 LDR X8, [X0 + 0xB8]
	0x033F8AE8 LDRB W8, [X8]
	0x033F8AEC CBZ W8, 0x33F8AFC
	0x033F8AF0 CBZ X21, 0x33F8B14
	0x033F8AF4 LDRB W8, [X21 + 0x18]
	0x033F8AF8 CBZ W8, 0x33F8B18
	0x033F8AFC MOV X0, X19
	0x033F8B00 LDP X20, X19, [X31 + 0x20]
	0x033F8B04 LDP X22, X21, [X31 + 0x10]
	0x033F8B08 MOV X1, X31
	0x033F8B0C LDR X30, [X31], #0x30
	0x033F8B10 B 0x33CB4DC
	0x033F8B14 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFE6000
	007 Move W8, [X22+1183]
	008 Move W20, W2
	009 Move X21, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD24000
	016 Move X0, [X0+1408]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1183], W8
	020 Move X0, X19
	021 Move X1, X31
	022 Call Object..ctor, X0
	023 Move [X19+24], X21
	024 Move TEMP, X20
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {38}
	028 Move X8, 0xD24000
	029 Move X8, [X8+1408]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X31
	036 Call ExecutionContext.Capture
	037 Move [X19+16], X0
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return 

Method: System.Threading.Tasks.Task CreateTask(System.Action`1<System.Object> action, System.Object state, System.Threading.Tasks.TaskScheduler scheduler)

Disassembly:
	0x033F9428 CBZ X19, 0x33F9440
	0x033F942C MOV X0, X19
	0x033F9430 BL 0x33EF398
	0x033F9434 TBNZ X0, 0x4, 0x33F9440
	0x033F9438 ADD X8, X19, 0x28
	0x033F943C B 0x33F9494
	0x033F9440 ADRP X19, 0xD02000
	0x033F9444 LDR X19, [X19 + 0x7E8]
	0x033F9448 LDR X0, [X19]
	0x033F944C LDR W8, [X0 + 0xE0]
	0x033F9450 CBNZ W8, 0x33F9458
	0x033F9454 BL 0x1C16DFC
	0x033F9458 ADRP X20, 0xFE0000
	0x033F945C LDRB W8, [X20 + 0x88D]
	0x033F9460 CBNZ W8, 0x33F9478
	0x033F9464 ADRP X0, 0xD02000
	0x033F9468 LDR X0, [X0 + 0x7E8]
	0x033F946C BL 0x1C16CF4
	0x033F9470 MOVZ W8, 0x1
	0x033F9474 STRB W8, [X20 + 0x88D]
	0x033F9478 LDR X0, [X19]
	0x033F947C LDR W8, [X0 + 0xE0]
	0x033F9480 CBNZ W8, 0x33F948C
	0x033F9484 BL 0x1C16DFC
	0x033F9488 LDR X0, [X19]
	0x033F948C LDR X8, [X0 + 0xB8]
	0x033F9490 ADD X8, X8, 0x8
	0x033F9494 LDR X0, [X8]
	0x033F9498 LDP X20, X19, [X31 + 0x10]
	0x033F949C LDP X30, X21, [X31], #0x20
	0x033F94A0 RET
	0x033F94A4 STP X30, X23, [X31 - 0x30]!
	0x033F94A8 STP X22, X21, [X31 + 0x10]
	0x033F94AC STP X20, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xFE5000
	009 Move X23, 0xCFC000
	010 Move W8, [X22+1184]
	011 Move X23, [X23+1976]
	012 Move X19, X3
	013 Move X20, X2
	014 Move X21, X1
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xCFC000
	020 Move X0, [X0+1976]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1184], W8
	024 Move X0, [X23]
	025 Call 0x1C17F10
	026 Move W6, 0x2000
	027 Move X1, X21
	028 Move X2, X20
	029 Move X3, X31
	030 Move X4, X31
	031 Move W5, W31
	032 Move X7, X19
	033 Move X22, X0
	034 Call Task..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	035 Move X0, X22
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X22, [X31+32]
	039 Move X21, [X31+40]
	040 Move X30, [X31+16]
	041 Move X23, [X31+24]
	042 Add X31, X31, 64
	043 Return X0

Method: System.Void Run(System.Threading.Tasks.Task ignored, System.Boolean canInlineContinuationTask)

Disassembly:
	0x033F9314 BLR X8
	0x033F9318 CBNZ X23, 0x33F9324
	0x033F931C MOV X0, X24
	0x033F9320 BL 0x1D2C690
	0x033F9324 MOV X0, X23
	0x033F9328 BL 0x1C16F18
	0x033F932C BL 0x1990590
	0x033F9330 STR X30, [X31 - 0x20]!
	0x033F9334 STP X20, X19, [X31 + 0x10]
	0x033F9338 ADRP X20, 0xFE4000
	0x033F933C LDRB W8, [X20 + 0x4AB]
	0x033F9340 MOV X19, X0
	0x033F9344 TBNZ X8, 0x0, 0x33F935C
	0x033F9348 ADRP X0, 0xD01000
	0x033F934C LDR X0, [X0 + 0xC10]
	0x033F9350 BL 0x1C16CF4
	0x033F9354 MOVZ W8, 0x1
	0x033F9358 STRB W8, [X20 + 0x4AB]
	0x033F935C LDRB W20, [X19 + 0x28]
	0x033F9360 BL 0x1C16D44
	0x033F9364 CBZ W20, 0x33F9394
	0x033F9368 ADRP X8, 0xD01000
	0x033F936C LDR X8, [X8 + 0xC10]
	0x033F9370 LDR X0, [X8]
	0x033F9374 LDR W8, [X0 + 0xE0]
	0x033F9378 CBNZ W8, 0x33F9380
	0x033F937C BL 0x1C16DFC
	0x033F9380 MOV X0, X19
	0x033F9384 MOV X1, X31
	0x033F9388 BL 0x33B3F40
	0x033F938C BL 0x1C16D44
	0x033F9390 STRB W31, [X19 + 0x28]
	0x033F9394 LDP X20, X19, [X31 + 0x10]
	0x033F9398 LDR X30, [X31], #0x20
	0x033F939C RET
	0x033F93A0 LDR X0, [X0 + 0x20]
	0x033F93A4 RET
	0x033F93A8 STR X30, [X31 - 0x20]!
	0x033F93AC STP X20, X19, [X31 + 0x10]
	0x033F93B0 ADRP X19, 0xFE4000
	0x033F93B4 ADRP X20, 0xD34000
	0x033F93B8 LDRB W8, [X19 + 0x4AF]
	0x033F93BC LDR X20, [X20 + 0x760]
	0x033F93C0 TBNZ X8, 0x0, 0x33F93D8
	0x033F93C4 ADRP X0, 0xD34000
	0x033F93C8 LDR X0, [X0 + 0x760]
	0x033F93CC BL 0x1C16CF4
	0x033F93D0 MOVZ W8, 0x1
	0x033F93D4 STRB W8, [X19 + 0x4AF]
	0x033F93D8 LDR X8, [X20]
	0x033F93DC LDP X20, X19, [X31 + 0x10]
	0x033F93E0 LDR X8, [X8 + 0xB8]
	0x033F93E4 STRB W31, [X8]
	0x033F93E8 LDR X30, [X31], #0x20
	0x033F93EC RET
	0x033F93F0 STP X30, X21, [X31 - 0x20]!
	0x033F93F4 STP X20, X19, [X31 + 0x10]
	0x033F93F8 ADRP X21, 0xFE4000
	0x033F93FC LDRB W8, [X21 + 0x4B0]
	0x033F9400 MOV X19, X1
	0x033F9404 MOV X20, X0
	0x033F9408 TBNZ X8, 0x0, 0x33F9420
	0x033F940C ADRP X0, 0xD02000
	0x033F9410 LDR X0, [X0 + 0x7E8]
	0x033F9414 BL 0x1C16CF4
	0x033F9418 MOVZ W8, 0x1
	0x033F941C STRB W8, [X21 + 0x4B0]
	0x033F9420 LDR X0, [X20 + 0x18]
	0x033F9424 CBNZ X0, 0x33F9498

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xFE5000
	006 Move W8, [X21+1185]
	007 Move W20, W2
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xCFC000
	014 Move X0, [X0+1976]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1185], W8
	018 Move TEMP, X20
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {82}
	022 Call AwaitTaskContinuation.get_IsValidLocationForInlining
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {82}
	027 Move X20, 0xFE5000
	028 Move W8, [X20+1283]
	029 Compare W8, 0
	030 JumpIfNotEqual {42}
	031 Move X0, 0xD35000
	032 Move X0, [X0+2528]
	033 Call 0x1C17CF4
	034 Move X0, 0xD35000
	035 Move X0, [X0+2056]
	036 Call 0x1C17CF4
	037 Move X0, 0xD2D000
	038 Move X0, [X0+2376]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X20+1283], W8
	042 Move X21, 0xD35000
	043 Move X21, [X21+2056]
	044 Move X8, [X21]
	045 Move X8, [X8+184]
	046 Move X20, [X8]
	047 Compare X20, 0
	048 JumpIfNotEqual {63}
	049 Move X8, 0xD2D000
	050 Move X8, [X8+2376]
	051 Move X0, [X8]
	052 Call 0x1C17F10
	053 Move X8, 0xD35000
	054 Move X8, [X8+2528]
	055 Move X1, X31
	056 Move X3, X31
	057 Move X20, X0
	058 Move X2, [X8]
	059 Call ContextCallback..ctor, X0, X1, X2
	060 Move X8, [X21]
	061 Move X8, [X8+184]
	062 Move [X8], X20
	063 Move X21, 0xCFC000
	064 Move X21, [X21+1976]
	065 Move X19, [X19+24]
	066 Move X0, [X21]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {72}
	070 Call 0x1C17DFC
	071 Move X0, [X21]
	072 Call 0x1C17D0C
	073 Move X1, X20
	074 Move X2, X19
	075 Move X20, [X31+16]
	076 Move X19, [X31+24]
	077 Move X3, X0
	078 Move X30, [X31+32]
	079 Move X21, [X31+40]
	080 Call AwaitTaskContinuation.RunCallback, X0, X1, X2, X3
	081 Return 
	082 Move X0, X19
	083 Move X20, [X31+16]
	084 Move X19, [X31+24]
	085 Move W1, W31
	086 Move X30, [X31+32]
	087 Move X21, [X31+40]
	088 Call ThreadPool.UnsafeQueueCustomWorkItem, X0, X1
	089 Return 

Method: System.Boolean get_IsValidLocationForInlining()

Disassembly:
	0x033F965C LDR W0, [X0 + 0x24]
	0x033F9660 RET
	0x033F9664 STR X30, [X31 - 0x40]!
	0x033F9668 STP X24, X23, [X31 + 0x10]
	0x033F966C STP X22, X21, [X31 + 0x20]
	0x033F9670 STP X20, X19, [X31 + 0x30]
	0x033F9674 ADRP X23, 0xFE4000
	0x033F9678 ADRP X24, 0xCFB000
	0x033F967C LDRB W8, [X23 + 0x4B1]
	0x033F9680 LDR X24, [X24 + 0x7B8]
	0x033F9684 MOV X20, X4
	0x033F9688 MOV W19, W3
	0x033F968C MOV X21, X2
	0x033F9690 MOV X22, X1
	0x033F9694 TBNZ X8, 0x0, 0x33F96AC
	0x033F9698 ADRP X0, 0xCFB000
	0x033F969C LDR X0, [X0 + 0x7B8]
	0x033F96A0 BL 0x1C16CF4
	0x033F96A4 MOVZ W8, 0x1
	0x033F96A8 STRB W8, [X23 + 0x4B1]
	0x033F96AC LDR X0, [X24]
	0x033F96B0 LDR W8, [X0 + 0xE0]
	0x033F96B4 CBNZ W8, 0x33F96BC
	0x033F96B8 BL 0x1C16DFC
	0x033F96BC MOV W0, W19
	0x033F96C0 BL 0x33F0388
	0x033F96C4 MOV X1, X22
	0x033F96C8 MOV X3, X21
	0x033F96CC MOV X4, X20
	0x033F96D0 MOV W5, W19
	0x033F96D4 LDP X20, X19, [X31 + 0x30]
	0x033F96D8 LDP X22, X21, [X31 + 0x20]
	0x033F96DC LDP X24, X23, [X31 + 0x10]
	0x033F96E0 MOV X2, X31
	0x033F96E4 MOV W6, W31
	0x033F96E8 LDR X30, [X31], #0x40
	0x033F96EC B 0x33F001C
	0x033F96F0 STP X30, X25, [X31 - 0x40]!
	0x033F96F4 STP X24, X23, [X31 + 0x10]
	0x033F96F8 STP X22, X21, [X31 + 0x20]
	0x033F96FC STP X20, X19, [X31 + 0x30]
	0x033F9700 ADRP X24, 0xFE4000
	0x033F9704 ADRP X25, 0xCFB000
	0x033F9708 LDRB W8, [X24 + 0x4B2]
	0x033F970C LDR X25, [X25 + 0x7B8]
	0x033F9710 MOV X20, X5
	0x033F9714 MOV W19, W4
	0x033F9718 MOV X21, X3
	0x033F971C MOV X22, X2
	0x033F9720 MOV X23, X1
	0x033F9724 TBNZ X8, 0x0, 0x33F973C
	0x033F9728 ADRP X0, 0xCFB000
	0x033F972C LDR X0, [X0 + 0x7B8]
	0x033F9730 BL 0x1C16CF4
	0x033F9734 MOVZ W8, 0x1
	0x033F9738 STRB W8, [X24 + 0x4B2]
	0x033F973C LDR X0, [X25]
	0x033F9740 LDR W8, [X0 + 0xE0]
	0x033F9744 CBNZ W8, 0x33F974C
	0x033F9748 BL 0x1C16DFC
	0x033F974C MOV W0, W19
	0x033F9750 BL 0x33F0388
	0x033F9754 MOV X1, X23
	0x033F9758 MOV X2, X22
	0x033F975C MOV X3, X21
	0x033F9760 MOV X4, X20
	0x033F9764 MOV W5, W19
	0x033F9768 LDP X20, X19, [X31 + 0x30]
	0x033F976C LDP X22, X21, [X31 + 0x20]
	0x033F9770 LDP X24, X23, [X31 + 0x10]
	0x033F9774 MOV W6, W31
	0x033F9778 LDP X30, X25, [X31], #0x40
	0x033F977C B 0x33F001C
	0x033F9780 STR X30, [X31 - 0x20]!
	0x033F9784 STP X20, X19, [X31 + 0x10]
	0x033F9788 TBZ X1, 0x0, 0x33F9794
	0x033F978C TBNZ X0, 0x1, 0x33F97DC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xFE5000
	006 Move W8, [X19+1186]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0xD2D000
	012 Move X0, [X0+2392]
	013 Call 0x1C17CF4
	014 Move X0, 0xD03000
	015 Move X0, [X0+2024]
	016 Call 0x1C17CF4
	017 Move X0, 0xCFB000
	018 Move X0, [X0+1728]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+1186], W8
	022 Move X0, X31
	023 Call SynchronizationContext.get_Current
	024 Compare X0, 0
	025 JumpIfEqual {52}
	026 Move X19, 0xD2D000
	027 Move X20, 0xCFB000
	028 Move X19, [X19+2392]
	029 Move X20, [X20+1728]
	030 Move X1, X31
	031 Call "il2cpp_vm_object_is_inst", X0
	032 Move X8, [X20]
	033 Move X20, [X19]
	034 Move X19, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X20
	041 Move X1, X31
	042 Call Type.GetTypeFromHandle, X0
	043 Move X1, X0
	044 Move X0, X19
	045 Move X2, X31
	046 Call Type.op_Inequality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {52}
	051 Move W0, W31
	052 Move X20, 0xD03000
	053 Move X20, [X20+2024]
	054 Move X0, [X20]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Call TaskScheduler.get_InternalCurrent
	060 Compare X0, 0
	061 JumpIfEqual {87}
	062 Move X19, X0
	063 Move X0, [X20]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X21, 0xFE1000
	069 Move W8, [X21+2189]
	070 Compare W8, 0
	071 JumpIfNotEqual {77}
	072 Move X0, 0xD03000
	073 Move X0, [X0+2024]
	074 Call 0x1C17CF4
	075 Move W8, 1
	076 Move [X21+2189], W8
	077 Move X0, [X20]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {83}
	081 Call 0x1C17DFC
	082 Move X0, [X20]
	083 Move X8, [X0+184]
	084 Move X8, [X8+8]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction CSET not yet implemented."
	087 Move W0, 1
	088 Move X20, [X31+16]
	089 Move X19, [X31+24]
	090 Move X30, [X31+32]
	091 Move X21, [X31+40]
	092 Return X0

Method: System.Void System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()

Disassembly:
	0x033F9790 TBNZ X0, 0x0, 0x33F980C
	0x033F9794 CMP W0, 0x20
	0x033F9798 B.CS 0x33F97A8
	0x033F979C LDP X20, X19, [X31 + 0x10]
	0x033F97A0 LDR X30, [X31], #0x20
	0x033F97A4 RET
	0x033F97A8 ADRP X0, 0xD02000
	0x033F97AC LDR X0, [X0 + 0x760]
	0x033F97B0 BL 0x1C16D08
	0x033F97B4 BL 0x1C16F10
	0x033F97B8 MOV X19, X0
	0x033F97BC ADRP X0, 0xD34000
	0x033F97C0 LDR X0, [X0 + 0x698]
	0x033F97C4 BL 0x1C16D08
	0x033F97C8 MOV X1, X0
	0x033F97CC MOV X0, X19
	0x033F97D0 MOV X2, X31
	0x033F97D4 BL 0x3316014
	0x033F97D8 B 0x33F9850
	0x033F97DC ADRP X0, 0xD02000
	0x033F97E0 LDR X0, [X0 + 0x760]
	0x033F97E4 BL 0x1C16D08
	0x033F97E8 BL 0x1C16F10
	0x033F97EC MOV X19, X0
	0x033F97F0 ADRP X0, 0xD34000
	0x033F97F4 LDR X0, [X0 + 0x698]
	0x033F97F8 BL 0x1C16D08
	0x033F97FC MOV X20, X0
	0x033F9800 ADRP X0, 0xD34000
	0x033F9804 LDR X0, [X0 + 0xA80]
	0x033F9808 B 0x33F9838
	0x033F980C ADRP X0, 0xD02000
	0x033F9810 LDR X0, [X0 + 0x760]
	0x033F9814 BL 0x1C16D08
	0x033F9818 BL 0x1C16F10
	0x033F981C MOV X19, X0
	0x033F9820 ADRP X0, 0xD34000
	0x033F9824 LDR X0, [X0 + 0x698]
	0x033F9828 BL 0x1C16D08
	0x033F982C MOV X20, X0
	0x033F9830 ADRP X0, 0xD34000
	0x033F9834 LDR X0, [X0 + 0xA88]
	0x033F9838 BL 0x1C16D08
	0x033F983C MOV X2, X0
	0x033F9840 MOV X0, X19
	0x033F9844 MOV X1, X20
	0x033F9848 MOV X3, X31
	0x033F984C BL 0x3311888
	0x033F9850 ADRP X0, 0xD34000
	0x033F9854 LDR X0, [X0 + 0xA90]
	0x033F9858 BL 0x1C16D08
	0x033F985C MOV X1, X0
	0x033F9860 MOV X0, X19
	0x033F9864 BL 0x1C16DEC
	0x033F9868 STR X30, [X31 - 0x30]!
	0x033F986C STP X22, X21, [X31 + 0x10]
	0x033F9870 STP X20, X19, [X31 + 0x20]
	0x033F9874 ADRP X20, 0xFE4000
	0x033F9878 ADRP X21, 0xD34000
	0x033F987C LDRB W8, [X20 + 0x4B3]
	0x033F9880 LDR X21, [X21 + 0xA98]
	0x033F9884 MOV X19, X0
	0x033F9888 TBNZ X8, 0x0, 0x33F98A0
	0x033F988C ADRP X0, 0xD34000
	0x033F9890 LDR X0, [X0 + 0xA98]
	0x033F9894 BL 0x1C16CF4
	0x033F9898 MOVZ W8, 0x1
	0x033F989C STRB W8, [X20 + 0x4B3]
	0x033F98A0 LDR X0, [X21]
	0x033F98A4 BL 0x1C16F10
	0x033F98A8 MOV X1, X19
	0x033F98AC MOV X20, X0
	0x033F98B0 BL 0x33F9944

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xFE5000
	008 Move W8, [X20+1187]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD23000
	015 Move X0, [X0+1408]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1187], W8
	019 Move X20, [X19+16]
	020 Compare X20, 0
	021 JumpIfEqual {78}
	022 Move X21, 0xFE5000
	023 Move W8, [X21+1283]
	024 Compare W8, 0
	025 JumpIfNotEqual {37}
	026 Move X0, 0xD35000
	027 Move X0, [X0+2528]
	028 Call 0x1C17CF4
	029 Move X0, 0xD35000
	030 Move X0, [X0+2056]
	031 Call 0x1C17CF4
	032 Move X0, 0xD2D000
	033 Move X0, [X0+2376]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+1283], W8
	037 Move X23, 0xD35000
	038 Move X23, [X23+2056]
	039 Move X22, 0xD23000
	040 Move X8, [X23]
	041 Move X8, [X8+184]
	042 Move X21, [X8]
	043 Move X22, [X22+1408]
	044 Compare X21, 0
	045 JumpIfNotEqual {60}
	046 Move X8, 0xD2D000
	047 Move X8, [X8+2376]
	048 Move X0, [X8]
	049 Call 0x1C17F10
	050 Move X8, 0xD35000
	051 Move X8, [X8+2528]
	052 Move X1, X31
	053 Move X3, X31
	054 Move X21, X0
	055 Move X2, [X8]
	056 Call ContextCallback..ctor, X0, X1, X2
	057 Move X8, [X23]
	058 Move X8, [X8+184]
	059 Move [X8], X21
	060 Move X0, [X22]
	061 Move X19, [X19+24]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X20
	067 Move X1, X21
	068 Move X2, X19
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X3, X31
	074 Move X30, [X31+48]
	075 Move X23, [X31+56]
	076 Call ExecutionContext.Run, X0, X1, X2
	077 Return 
	078 Move X8, [X19+24]
	079 Compare X8, 0
	080 JumpIfEqual {91}
	081 Move X2, [X8+24]
	082 Move X0, [X8+64]
	083 Move X1, [X8+40]
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 Move X22, [X31+16]
	087 Move X21, [X31+24]
	088 Move X30, [X31+48]
	089 Move X23, [X31+56]
	090 CallNoReturn X2
	091 Call 0x1C17F20

Method: System.Void InvokeAction(System.Object state)

Disassembly:
	0x033F98B4 CBZ X19, 0x33F9940
	0x033F98B8 LDR W8, [X19 + 0x18]
	0x033F98BC CMP W8, 0x1
	0x033F98C0 B.LT 0x33F9928
	0x033F98C4 MOV W21, W31
	0x033F98C8 CMP W21, W8
	0x033F98CC B.CS 0x33F993C
	0x033F98D0 ADD X22, X19, W21, 0x3, SXTW
	0x033F98D4 LDR X0, [X22 + 0x20]!
	0x033F98D8 CBZ X0, 0x33F9940
	0x033F98DC BL 0x33ED11C
	0x033F98E0 LDR W8, [X19 + 0x18]
	0x033F98E4 CMP W21, W8
	0x033F98E8 B.CS 0x33F993C
	0x033F98EC LDR X1, [X22]
	0x033F98F0 TBZ X0, 0x0, 0x33F9904
	0x033F98F4 CBZ X20, 0x33F9940
	0x033F98F8 MOV X0, X20
	0x033F98FC BL 0x33F9A68
	0x033F9900 B 0x33F9918
	0x033F9904 CBZ X1, 0x33F9940
	0x033F9908 MOV X0, X1
	0x033F990C MOV X1, X20
	0x033F9910 MOV W2, W31
	0x033F9914 BL 0x33F3C10
	0x033F9918 LDR W8, [X19 + 0x18]
	0x033F991C ADD W21, W21, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFE5000
	005 Move W8, [X20+1188]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xCFC000
	012 Move X0, [X0+3696]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1188], W8
	016 Compare X19, 0
	017 JumpIfEqual {30}
	018 Move X8, 0xCFC000
	019 Move X8, [X8+3696]
	020 Move X1, [X8]
	021 Move X8, [X19]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X2, [X19+24]
	024 Move X0, [X19+64]
	025 Move X1, [X19+40]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 CallNoReturn X2
	030 Call 0x1C17F20
	031 Move X0, X19
	032 Call 0x1C181E0

Method: System.Threading.ContextCallback GetInvokeActionCallback()

Disassembly:
	0x033F9920 CMP W21, W8
	0x033F9924 B.LT 0x33F98C8
	0x033F9928 MOV X0, X20
	0x033F992C LDP X20, X19, [X31 + 0x20]
	0x033F9930 LDP X22, X21, [X31 + 0x10]
	0x033F9934 LDR X30, [X31], #0x30
	0x033F9938 RET
	0x033F993C BL 0x1C16F28
	0x033F9940 BL 0x1C16F20
	0x033F9944 STR X30, [X31 - 0x30]!
	0x033F9948 STP X22, X21, [X31 + 0x10]
	0x033F994C STP X20, X19, [X31 + 0x20]
	0x033F9950 ADRP X21, 0xFE4000
	0x033F9954 ADRP X22, 0xD34000
	0x033F9958 LDRB W8, [X21 + 0x4B6]
	0x033F995C LDR X22, [X22 + 0xAA0]
	0x033F9960 MOV X20, X1
	0x033F9964 MOV X19, X0
	0x033F9968 TBNZ X8, 0x0, 0x33F9998
	0x033F996C ADRP X0, 0xD22000
	0x033F9970 LDR X0, [X0 + 0x728]
	0x033F9974 BL 0x1C16CF4
	0x033F9978 ADRP X0, 0xD34000
	0x033F997C LDR X0, [X0 + 0xAA0]
	0x033F9980 BL 0x1C16CF4
	0x033F9984 ADRP X0, 0xD34000
	0x033F9988 LDR X0, [X0 + 0xAA8]
	0x033F998C BL 0x1C16CF4
	0x033F9990 MOVZ W8, 0x1
	0x033F9994 STRB W8, [X21 + 0x4B6]
	0x033F9998 LDR X1, [X22]
	0x033F999C MOV X0, X19
	0x033F99A0 BL 0x269EC2C
	0x033F99A4 STR X20, [X19 + 0x58]
	0x033F99A8 CBZ X20, 0x33F9A64
	0x033F99AC LDR X8, [X20 + 0x18]
	0x033F99B0 ADRP X20, 0xD22000
	0x033F99B4 LDR X20, [X20 + 0x728]
	0x033F99B8 STR W8, [X19 + 0x60]
	0x033F99BC LDR X0, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xFE5000
	005 Move X20, 0xD35000
	006 Move W8, [X19+1189]
	007 Move X20, [X20+2056]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0xD35000
	013 Move X0, [X0+2528]
	014 Call 0x1C17CF4
	015 Move X0, 0xD35000
	016 Move X0, [X0+2056]
	017 Call 0x1C17CF4
	018 Move X0, 0xD2D000
	019 Move X0, [X0+2376]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+1189], W8
	023 Move X8, [X20]
	024 Move X8, [X8+184]
	025 Move X19, [X8]
	026 Compare X19, 0
	027 JumpIfNotEqual {42}
	028 Move X8, 0xD2D000
	029 Move X8, [X8+2376]
	030 Move X0, [X8]
	031 Call 0x1C17F10
	032 Move X8, 0xD35000
	033 Move X8, [X8+2528]
	034 Move X1, X31
	035 Move X3, X31
	036 Move X19, X0
	037 Move X2, [X8]
	038 Call ContextCallback..ctor, X0, X1, X2
	039 Move X8, [X20]
	040 Move X8, [X8+184]
	041 Move [X8], X19
	042 Move X0, X19
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Return X0

Method: System.Void RunCallback(System.Threading.ContextCallback callback, System.Object state, ref System.Threading.Tasks.Task currentTask)

Disassembly:
	0x033F8C7C LDR X0, [X22]
	0x033F8C80 LDR X8, [X0 + 0xB8]
	0x033F8C84 LDR X19, [X8 + 0x20]
	0x033F8C88 CBZ X19, 0x33F8CE8
	0x033F8C8C MOV X0, X19
	0x033F8C90 MOV X1, X31
	0x033F8C94 BL 0x33E14B4
	0x033F8C98 LDR X0, [X22]
	0x033F8C9C LDR W8, [X0 + 0xE0]
	0x033F8CA0 CBNZ W8, 0x33F8CAC
	0x033F8CA4 BL 0x1C16DFC
	0x033F8CA8 LDR X0, [X22]
	0x033F8CAC LDR X8, [X0 + 0xB8]
	0x033F8CB0 LDR X8, [X8 + 0x18]
	0x033F8CB4 CBZ X8, 0x33F8CD0
	0x033F8CB8 LDR X0, [X8 + 0x40]
	0x033F8CBC LDR X9, [X8 + 0x18]
	0x033F8CC0 LDR X3, [X8 + 0x28]
	0x033F8CC4 MOV X1, X21
	0x033F8CC8 MOV X2, X20
	0x033F8CCC BLR X9
	0x033F8CD0 MOV X0, X19
	0x033F8CD4 LDP X20, X19, [X31 + 0x20]
	0x033F8CD8 LDP X22, X21, [X31 + 0x10]
	0x033F8CDC MOV X1, X31
	0x033F8CE0 LDR X30, [X31], #0x30
	0x033F8CE4 B 0x33E14D8
	0x033F8CE8 BL 0x1C16F20
	0x033F8CEC B 0x33F8CF0
	0x033F8CF0 MOV X21, X0
	0x033F8CF4 CMP W1, 0x1
	0x033F8CF8 B.NE 0x33F8D2C
	0x033F8CFC MOV X0, X21
	0x033F8D00 BL 0x3EB1AD0
	0x033F8D04 LDR X20, [X0]
	0x033F8D08 BL 0x3EB1AE0
	0x033F8D0C MOV X0, X19
	0x033F8D10 MOV X1, X31
	0x033F8D14 BL 0x33E14D8
	0x033F8D18 CBNZ X20, 0x33F8D34
	0x033F8D1C LDP X20, X19, [X31 + 0x20]
	0x033F8D20 LDP X22, X21, [X31 + 0x10]
	0x033F8D24 LDR X30, [X31], #0x30
	0x033F8D28 RET
	0x033F8D2C MOV X20, X31
	0x033F8D30 B 0x33F8D40
	0x033F8D34 MOV X0, X20
	0x033F8D38 BL 0x1C16F18
	0x033F8D3C MOV X21, X0
	0x033F8D40 MOV X0, X19
	0x033F8D44 MOV X1, X31
	0x033F8D48 BL 0x33E14D8
	0x033F8D4C CBNZ X20, 0x33F8D58
	0x033F8D50 MOV X0, X21
	0x033F8D54 BL 0x1D2C690
	0x033F8D58 MOV X0, X20
	0x033F8D5C BL 0x1C16F18
	0x033F8D60 BL 0x1990590
	0x033F8D64 STP X30, X21, [X31 - 0x20]!
	0x033F8D68 STP X20, X19, [X31 + 0x10]
	0x033F8D6C ADRP X21, 0xFE5000
	0x033F8D70 LDRB W8, [X21 + 0x4A9]
	0x033F8D74 MOV X20, X1
	0x033F8D78 MOV X19, X0
	0x033F8D7C TBNZ X8, 0x0, 0x33F8DA0
	0x033F8D80 ADRP X0, 0xD03000
	0x033F8D84 LDR X0, [X0 + 0x5B8]
	0x033F8D88 BL 0x1C16CF4
	0x033F8D8C ADRP X0, 0xD03000
	0x033F8D90 LDR X0, [X0 + 0x8A8]
	0x033F8D94 BL 0x1C16CF4
	0x033F8D98 MOVZ W8, 0x1
	0x033F8D9C STRB W8, [X21 + 0x4A9]
	0x033F8DA0 CBZ X20, 0x33F8DF0
	0x033F8DA4 ADRP X9, 0xD03000
	0x033F8DA8 LDR X9, [X9 + 0x8A8]
	0x033F8DAC LDR X8, [X20]
	0x033F8DB0 LDR X9, [X9]
	0x033F8DB4 LDRB W11, [X8 + 0x130]
	0x033F8DB8 LDRB W10, [X9 + 0x130]
	0x033F8DBC CMP W11, W10
	0x033F8DC0 B.CC 0x33F8DD8
	0x033F8DC4 LDR X11, [X8 + 0xC8]
	0x033F8DC8 ADD X10, X11, X10, 0x3, LSL
	0x033F8DCC LDUR X10, [X10 - 0x8]
	0x033F8DD0 CMP X10, X9
	0x033F8DD4 B.EQ 0x33F8E0C
	0x033F8DD8 ADRP X9, 0xD03000
	0x033F8DDC LDR X9, [X9 + 0x5B8]
	0x033F8DE0 LDR X9, [X9]
	0x033F8DE4 CMP X8, X9
	0x033F8DE8 CSEL X8, X20, X31, EQ
	0x033F8DEC B 0x33F8DF4

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, [X3]
	009 Move X0, X31
	010 Move X20, X3
	011 Move X21, X2
	012 Move X22, X1
	013 Call SynchronizationContext.get_CurrentExplicit
	014 Move X19, X0
	015 Compare X23, 0
	016 JumpIfEqual {18}
	017 Move [X20], X31
	018 Compare X22, 0
	019 JumpIfEqual {42}
	020 Move X0, [X22+64]
	021 Move X8, [X22+24]
	022 Move X2, [X22+40]
	023 Move X1, X21
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X21, X31
	026 Compare X23, 0
	027 JumpIfEqual {29}
	028 Move [X20], X23
	029 Move X0, X19
	030 Move X1, X31
	031 Call SynchronizationContext.SetSynchronizationContext, X0
	032 Compare X21, 0
	033 JumpIfNotEqual {43}
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X22, [X31+32]
	037 Move X21, [X31+40]
	038 Move X30, [X31+16]
	039 Move X23, [X31+24]
	040 Add X31, X31, 64
	041 Return 
	042 Call 0x1C17F20
	043 Move X0, X21
	044 Call 0x1C17F18
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X21, X0
	047 Move X0, X21
	048 Call 0x3EB2AD0
	049 Move X21, X0
	050 Move X0, 0xCFC000
	051 Move X0, [X0+2000]
	052 Call 0x1C17D08
	053 Move X8, [X21]
	054 Move X1, [X8]
	055 Call 0x1C18270
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {64}
	060 Move X21, [X21]
	061 Call 0x3EB2AE0
	062 Move X0, X21
	063 Call AwaitTaskContinuation.ThrowAsyncIfNecessary, X0
	064 Move W0, 8
	065 Call 0x3EB2AF0
	066 Move X8, [X21]
	067 Move [X0], X8
	068 Move X1, 0xABD000
	069 Add X1, X1, 3672
	070 Move X2, X31
	071 Call 0x3EB2B00
	072 Move X21, X0
	073 Move X22, X1
	074 Move X21, X0
	075 Call 0x3EB2AE0
	076 Move W1, W22
	077 Move W8, 1
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X0, X21
	080 Call 0x3EB2AD0
	081 Move X8, [X0]
	082 Move [X31+8], X8
	083 Call 0x3EB2AE0
	084 Move X21, [X31+8]
	085 Compare X23, 0
	086 JumpIfNotEqual {28}
	087 Move [X31+8], X31
	088 Move X21, X0
	089 Compare X23, 0
	090 JumpIfEqual {92}
	091 Move [X20], X23
	092 Move X0, X19
	093 Move X1, X31
	094 Call SynchronizationContext.SetSynchronizationContext, X0
	095 Move X8, [X31+8]
	096 Compare X8, 0
	097 JumpIfNotEqual {100}
	098 Move X0, X21
	099 Call 0x1D2D690
	100 Move X0, [X31+8]
	101 Call 0x1C17F18
	102 Call 0x1991590

Method: System.Void RunOrScheduleAction(System.Action action, System.Boolean allowInlining, ref System.Threading.Tasks.Task currentTask)

Disassembly:
	0x033F4DB8 ADRP X20, 0xD00000
	0x033F4DBC LDR X20, [X20 + 0x7B8]
	0x033F4DC0 LDR X0, [X20]
	0x033F4DC4 LDR W8, [X0 + 0xE0]
	0x033F4DC8 CBNZ W8, 0x33F4DD0
	0x033F4DCC BL 0x1C16DFC
	0x033F4DD0 ADRP X21, 0xFE4000
	0x033F4DD4 LDRB W8, [X21 + 0xF1B]
	0x033F4DD8 CBNZ W8, 0x33F4DF0
	0x033F4DDC ADRP X0, 0xD00000
	0x033F4DE0 LDR X0, [X0 + 0x7B8]
	0x033F4DE4 BL 0x1C16CF4
	0x033F4DE8 MOVZ W8, 0x1
	0x033F4DEC STRB W8, [X21 + 0xF1B]
	0x033F4DF0 LDR X0, [X20]
	0x033F4DF4 LDR W8, [X0 + 0xE0]
	0x033F4DF8 CBNZ W8, 0x33F4E04
	0x033F4DFC BL 0x1C16DFC
	0x033F4E00 LDR X0, [X20]
	0x033F4E04 ADRP X22, 0xD07000
	0x033F4E08 LDR X8, [X0 + 0xB8]
	0x033F4E0C LDR X22, [X22 + 0x7E8]
	0x033F4E10 LDR X21, [X31 + 0x8]
	0x033F4E14 LDR X20, [X8 + 0x28]
	0x033F4E18 LDR X0, [X22]
	0x033F4E1C LDR W8, [X0 + 0xE0]
	0x033F4E20 CBNZ W8, 0x33F4E28
	0x033F4E24 BL 0x1C16DFC
	0x033F4E28 ADRP X23, 0xFE5000
	0x033F4E2C LDRB W8, [X23 + 0x88D]
	0x033F4E30 CBNZ W8, 0x33F4E48
	0x033F4E34 ADRP X0, 0xD07000
	0x033F4E38 LDR X0, [X0 + 0x7E8]
	0x033F4E3C BL 0x1C16CF4
	0x033F4E40 MOVZ W8, 0x1
	0x033F4E44 STRB W8, [X23 + 0x88D]
	0x033F4E48 LDR X0, [X22]
	0x033F4E4C LDR W8, [X0 + 0xE0]
	0x033F4E50 CBNZ W8, 0x33F4E5C
	0x033F4E54 BL 0x1C16DFC
	0x033F4E58 LDR X0, [X22]
	0x033F4E5C CBZ X20, 0x33F4F1C
	0x033F4E60 ADRP X9, 0xD07000
	0x033F4E64 LDR X8, [X0 + 0xB8]
	0x033F4E68 LDR X9, [X9 + 0x820]
	0x033F4E6C MOVZ W3, 0x8
	0x033F4E70 MOV X0, X20
	0x033F4E74 LDR X4, [X8 + 0x8]
	0x033F4E78 LDR X5, [X9]
	0x033F4E7C MOV X1, X19
	0x033F4E80 MOV X2, X21
	0x033F4E84 BL 0x229B8B8
	0x033F4E88 ADRP X8, 0xD39000
	0x033F4E8C LDR X8, [X8 + 0x8A8]
	0x033F4E90 MOV X20, X0
	0x033F4E94 LDR X8, [X8]
	0x033F4E98 MOV X0, X8
	0x033F4E9C BL 0x1C16F10
	0x033F4EA0 ADRP X8, 0xD39000
	0x033F4EA4 LDR X8, [X8 + 0x8A0]
	0x033F4EA8 MOVZ W2, 0x1
	0x033F4EAC MOV X1, X20
	0x033F4EB0 MOV X19, X0
	0x033F4EB4 LDR X3, [X8]
	0x033F4EB8 BL 0x27334E0
	0x033F4EBC MOV X0, X19
	0x033F4EC0 LDP X20, X19, [X31 + 0x30]
	0x033F4EC4 LDP X22, X21, [X31 + 0x20]
	0x033F4EC8 LDP X30, X23, [X31 + 0x10]
	0x033F4ECC ADD X31, X31, 0x40
	0x033F4ED0 RET
	0x033F4ED4 ADRP X0, 0xD04000
	0x033F4ED8 LDR X0, [X0 + 0x528]
	0x033F4EDC BL 0x1C16D08
	0x033F4EE0 BL 0x1C16F10
	0x033F4EE4 MOV X19, X0
	0x033F4EE8 ADRP X0, 0xD28000
	0x033F4EEC LDR X0, [X0 + 0x780]
	0x033F4EF0 BL 0x1C16D08
	0x033F4EF4 MOV X1, X0
	0x033F4EF8 MOV X0, X19
	0x033F4EFC MOV X2, X31
	0x033F4F00 BL 0x330E100
	0x033F4F04 ADRP X0, 0xD39000
	0x033F4F08 LDR X0, [X0 + 0x8B0]
	0x033F4F0C BL 0x1C16D08
	0x033F4F10 MOV X1, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X0
	007 Move TEMP, X1
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {39}
	011 Move X19, X2
	012 Call AwaitTaskContinuation.get_IsValidLocationForInlining
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {39}
	017 Move X21, [X19]
	018 Compare X21, 0
	019 JumpIfEqual {21}
	020 Move [X19], X31
	021 Compare X20, 0
	022 JumpIfEqual {47}
	023 Move X0, [X20+64]
	024 Move X1, [X20+40]
	025 Move X8, [X20+24]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X0, X31
	028 Compare X21, 0
	029 JumpIfEqual {31}
	030 Move [X19], X21
	031 Compare X0, 0
	032 JumpIfNotEqual {48}
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return 
	039 Move X0, X20
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Call AwaitTaskContinuation.UnsafeScheduleAction, X0
	046 Return 
	047 Call 0x1C17F20
	048 Call 0x1C17F18
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X20, X0
	051 Move X0, X20
	052 Call 0x3EB2AD0
	053 Move X20, X0
	054 Move X0, 0xD00000
	055 Move X0, [X0+2000]
	056 Call 0x1C17D08
	057 Move X8, [X20]
	058 Move X1, [X8]
	059 Call 0x1C18270
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {68}
	064 Move X20, [X20]
	065 Call 0x3EB2AE0
	066 Move X0, X20
	067 Call AwaitTaskContinuation.ThrowAsyncIfNecessary, X0
	068 Move W0, 8
	069 Call 0x3EB2AF0
	070 Move X8, [X20]
	071 Move [X0], X8
	072 Move X1, 0xAC1000
	073 Add X1, X1, 3672
	074 Move X2, X31
	075 Call 0x3EB2B00
	076 Move X20, X0
	077 Move X22, X1
	078 Move X20, X0
	079 Call 0x3EB2AE0
	080 Move W1, W22
	081 Move W8, 1
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X0, X20
	084 Call 0x3EB2AD0
	085 Move X8, [X0]
	086 Move [X31+8], X8
	087 Call 0x3EB2AE0
	088 Move X0, [X31+8]
	089 Compare X21, 0
	090 JumpIfNotEqual {30}
	091 Move [X31+8], X31
	092 Move X20, X0
	093 Compare X21, 0
	094 JumpIfEqual {96}
	095 Move [X19], X21
	096 Move X8, [X31+8]
	097 Compare X8, 0
	098 JumpIfNotEqual {101}
	099 Move X0, X20
	100 Call 0x1D2D690
	101 Move X0, [X31+8]
	102 Call 0x1C17F18
	103 Call 0x1991590

Method: System.Void UnsafeScheduleAction(System.Action action)

Disassembly:
	0x033F3E38 MOV X20, X0
	0x033F3E3C B.NE 0x33F3EB8
	0x033F3E40 MOV X0, X20
	0x033F3E44 BL 0x3EB1AD0
	0x033F3E48 MOV X20, X0
	0x033F3E4C ADRP X0, 0xD00000
	0x033F3E50 LDR X0, [X0 + 0x7D0]
	0x033F3E54 BL 0x1C16D08
	0x033F3E58 LDR X8, [X20]
	0x033F3E5C LDR X1, [X8]
	0x033F3E60 BL 0x1C17270
	0x033F3E64 TBZ X0, 0x0, 0x33F3E7C
	0x033F3E68 LDR X20, [X20]
	0x033F3E6C BL 0x3EB1AE0
	0x033F3E70 MOV X0, X20
	0x033F3E74 BL 0x33F8604
	0x033F3E78 B 0x33F3DF8
	0x033F3E7C MOVZ W0, 0x8
	0x033F3E80 BL 0x3EB1AF0
	0x033F3E84 LDR X8, [X20]
	0x033F3E88 STR X8, [X0]
	0x033F3E8C ADRP X1, 0xAC1000
	0x033F3E90 ADD X1, X1, 0xE58
	0x033F3E94 MOV X2, X31
	0x033F3E98 BL 0x3EB1B00
	0x033F3E9C B 0x33F3EA0
	0x033F3EA0 MOV X20, X0
	0x033F3EA4 B 0x33F3EB8
	0x033F3EA8 MOV X22, X1
	0x033F3EAC MOV X20, X0
	0x033F3EB0 BL 0x3EB1AE0
	0x033F3EB4 MOV W1, W22
	0x033F3EB8 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xFEB000
	006 Move X21, 0xD3B000
	007 Move W8, [X20+1190]
	008 Move X21, [X21+2056]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD3B000
	015 Move X0, [X0+2056]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1190], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X21, 0xFEB000
	022 Move W8, [X21+1183]
	023 Move X20, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0xD29000
	029 Move X0, [X0+1408]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+1183], W8
	033 Move X0, X20
	034 Move X1, X31
	035 Call Object..ctor, X0
	036 Move [X20+24], X19
	037 Move X0, X20
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move W1, W31
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Call ThreadPool.UnsafeQueueCustomWorkItem, X0, X1
	044 Return 

Method: System.Void ThrowAsyncIfNecessary(System.Exception exc)

Disassembly:
	0x033F9604 ADRP X0, 0xD02000
	0x033F9608 LDR X0, [X0 + 0x760]
	0x033F960C BL 0x1C16D08
	0x033F9610 BL 0x1C16F10
	0x033F9614 MOV X19, X0
	0x033F9618 ADRP X0, 0xD34000
	0x033F961C LDR X0, [X0 + 0x698]
	0x033F9620 BL 0x1C16D08
	0x033F9624 MOV X1, X0
	0x033F9628 MOV X0, X19
	0x033F962C MOV X2, X31
	0x033F9630 BL 0x3316014
	0x033F9634 ADRP X0, 0xD34000
	0x033F9638 LDR X0, [X0 + 0xA78]
	0x033F963C BL 0x1C16D08
	0x033F9640 MOV X1, X0
	0x033F9644 MOV X0, X19
	0x033F9648 BL 0x1C16DEC
	0x033F964C LDR X0, [X0 + 0x18]
	0x033F9650 RET
	0x033F9654 LDR W0, [X0 + 0x20]
	0x033F9658 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xFE5000
	006 Move X21, 0xD29000
	007 Move W8, [X20+1191]
	008 Move X21, [X21+4024]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD29000
	015 Move X0, [X0+4024]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1191], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call RuntimeAugments.ReportUnhandledException, X0
	031 Return 

Method: System.Void MarkAborted(System.Threading.ThreadAbortException e)

Disassembly:
	0x033F99C0 LDR W8, [X0 + 0xE0]

ISIL:
	001 Return 

