Type: System.Threading.Tasks.ValueTask`1/ValueTaskSourceAsTask/<>c

Method: System.Void .cctor()

Disassembly:
	0x023671F4 CBZ X9, 0x2367218
	0x023671F8 LDR X10, [X8 + 0xB0]
	0x023671FC ADD X10, X10, 0x8
	0x02367200 LDUR X11, [X10 - 0x8]
	0x02367204 CMP X11, X1
	0x02367208 B.EQ 0x2367228
	0x0236720C SUBS X9, X9, 0x1
	0x02367210 ADD X10, X10, 0x10
	0x02367214 B.NE 0x2367200
	0x02367218 MOV X0, X19
	0x0236721C MOV W2, W31
	0x02367220 BL 0x1C5C788
	0x02367224 B 0x2367234
	0x02367228 LDRSW X9, [X10]
	0x0236722C ADD X8, X8, X9, 0x4, LSL
	0x02367230 ADD X0, X8, 0x138
	0x02367234 LDP X8, X1, [X0]
	0x02367238 MOV X0, X19
	0x0236723C BLR X8
	0x02367240 MOV X0, X19
	0x02367244 LDP X20, X19, [X31 + 0x10]
	0x02367248 LDR X30, [X31], #0x20
	0x0236724C RET
	0x02367250 BL 0x1C16F20
	0x02367254 STR X30, [X31 - 0x20]!
	0x02367258 STP X20, X19, [X31 + 0x10]
	0x0236725C MOV X19, X0
	0x02367260 LDR X0, [X0 + 0x20]
	0x02367264 LDRB W8, [X0 + 0x135]
	0x02367268 TBNZ X8, 0x0, 0x2367270
	0x0236726C BL 0x1C5C684
	0x02367270 LDR X8, [X0 + 0xC0]
	0x02367274 LDR X0, [X8]
	0x02367278 LDRB W8, [X0 + 0x135]
	0x0236727C TBNZ X8, 0x0, 0x2367284
	0x02367280 BL 0x1C5C684
	0x02367284 BL 0x1C16F10
	0x02367288 LDR X8, [X19 + 0x20]
	0x0236728C MOV X20, X0
	0x02367290 LDRB W9, [X8 + 0x135]
	0x02367294 TBNZ X9, 0x0, 0x23672A0
	0x02367298 MOV X0, X8
	0x0236729C BL 0x1C5C684
	0x023672A0 MOV X0, X20
	0x023672A4 MOV X1, X31
	0x023672A8 BL 0x33BDD8C
	0x023672AC LDR X0, [X19 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Call 0x1C17F10
	021 Move X8, [X19+32]
	022 Move X20, X0
	023 Move W9, [X8+309]
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {30}
	028 Move X0, X8
	029 Call 0x1C5D684
	030 Move X0, X20
	031 Move X1, X31
	032 Call Object..ctor, X0
	033 Move X0, [X19+32]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move X8, [X0+192]
	041 Move X0, [X8+16]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move X8, [X0+184]
	049 Move [X8], X20
	050 Move X0, [X19+32]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Move X8, [X0+192]
	058 Move X0, [X8+16]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {69}
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Call 0x1C5D684
	068 Return 
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Return 

Method: System.Void .ctor()

Disassembly:
	0x023672B0 LDRB W8, [X0 + 0x135]
	0x023672B4 TBNZ X8, 0x0, 0x23672BC

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <.cctor>b__4_0(System.Object state)

Disassembly:
	0x023672B8 BL 0x1C5C684
	0x023672BC LDR X8, [X0 + 0xC0]
	0x023672C0 LDR X0, [X8 + 0x10]
	0x023672C4 LDRB W8, [X0 + 0x135]
	0x023672C8 TBNZ X8, 0x0, 0x23672D0
	0x023672CC BL 0x1C5C684
	0x023672D0 LDR X8, [X0 + 0xB8]
	0x023672D4 STR X20, [X8]
	0x023672D8 LDR X0, [X19 + 0x20]
	0x023672DC LDRB W8, [X0 + 0x135]
	0x023672E0 TBNZ X8, 0x0, 0x23672E8
	0x023672E4 BL 0x1C5C684
	0x023672E8 LDR X8, [X0 + 0xC0]
	0x023672EC LDR X0, [X8 + 0x10]
	0x023672F0 LDRB W8, [X0 + 0x135]
	0x023672F4 TBNZ X8, 0x0, 0x2367304
	0x023672F8 LDP X20, X19, [X31 + 0x10]
	0x023672FC LDR X30, [X31], #0x20
	0x02367300 B 0x1C5C684
	0x02367304 LDP X20, X19, [X31 + 0x10]
	0x02367308 LDR X30, [X31], #0x20
	0x0236730C RET
	0x02367310 MOV X1, X31
	0x02367314 B 0x33BDD8C
	0x02367318 LDR X8, [X1 + 0x20]
	0x0236731C LDR X8, [X8 + 0xC0]
	0x02367320 LDR X0, [X8 + 0x18]
	0x02367324 B 0x2278924
	0x02367328 STR X30, [X31 - 0x20]!
	0x0236732C STP X20, X19, [X31 + 0x10]
	0x02367330 MOV X19, X0
	0x02367334 LDR X0, [X0 + 0x20]
	0x02367338 LDRB W8, [X0 + 0x135]
	0x0236733C TBNZ X8, 0x0, 0x2367344
	0x02367340 BL 0x1C5C684
	0x02367344 LDR X8, [X0 + 0xC0]
	0x02367348 LDR X0, [X8]
	0x0236734C LDRB W8, [X0 + 0x135]
	0x02367350 TBNZ X8, 0x0, 0x2367358
	0x02367354 BL 0x1C5C684
	0x02367358 BL 0x1C16F10
	0x0236735C LDR X8, [X19 + 0x20]
	0x02367360 MOV X20, X0
	0x02367364 LDRB W9, [X8 + 0x135]
	0x02367368 TBNZ X9, 0x0, 0x2367374
	0x0236736C MOV X0, X8
	0x02367370 BL 0x1C5C684
	0x02367374 MOV X0, X20
	0x02367378 MOV X1, X31
	0x0236737C BL 0x33BDD8C
	0x02367380 LDR X0, [X19 + 0x20]
	0x02367384 LDRB W8, [X0 + 0x135]
	0x02367388 TBNZ X8, 0x0, 0x2367390
	0x0236738C BL 0x1C5C684
	0x02367390 LDR X8, [X0 + 0xC0]
	0x02367394 LDR X0, [X8 + 0x10]
	0x02367398 LDRB W8, [X0 + 0x135]
	0x0236739C TBNZ X8, 0x0, 0x23673A4
	0x023673A0 BL 0x1C5C684
	0x023673A4 LDR X8, [X0 + 0xB8]
	0x023673A8 STR X20, [X8]
	0x023673AC LDR X0, [X19 + 0x20]
	0x023673B0 LDRB W8, [X0 + 0x135]
	0x023673B4 TBNZ X8, 0x0, 0x23673BC
	0x023673B8 BL 0x1C5C684
	0x023673BC LDR X8, [X0 + 0xC0]
	0x023673C0 LDR X0, [X8 + 0x10]
	0x023673C4 LDRB W8, [X0 + 0x135]
	0x023673C8 TBNZ X8, 0x0, 0x23673D8
	0x023673CC LDP X20, X19, [X31 + 0x10]
	0x023673D0 LDR X30, [X31], #0x20
	0x023673D4 B 0x1C5C684
	0x023673D8 LDP X20, X19, [X31 + 0x10]
	0x023673DC LDR X30, [X31], #0x20
	0x023673E0 RET
	0x023673E4 MOV X1, X31
	0x023673E8 B 0x33BDD8C
	0x023673EC MOV X0, X1
	0x023673F0 RET
	0x023673F4 STR X30, [X31 - 0x20]!
	0x023673F8 STP X20, X19, [X31 + 0x10]
	0x023673FC MOV X19, X0
	0x02367400 LDR X0, [X0 + 0x20]
	0x02367404 LDRB W8, [X0 + 0x135]
	0x02367408 TBNZ X8, 0x0, 0x2367410
	0x0236740C BL 0x1C5C684
	0x02367410 LDR X8, [X0 + 0xC0]
	0x02367414 LDR X0, [X8]
	0x02367418 LDRB W8, [X0 + 0x135]
	0x0236741C TBNZ X8, 0x0, 0x2367424
	0x02367420 BL 0x1C5C684
	0x02367424 BL 0x1C16F10
	0x02367428 LDR X8, [X19 + 0x20]
	0x0236742C MOV X20, X0
	0x02367430 LDRB W9, [X8 + 0x135]
	0x02367434 TBNZ X9, 0x0, 0x2367440
	0x02367438 MOV X0, X8
	0x0236743C BL 0x1C5C684
	0x02367440 MOV X0, X20
	0x02367444 MOV X1, X31
	0x02367448 BL 0x33BDD8C
	0x0236744C LDR X0, [X19 + 0x20]
	0x02367450 LDRB W8, [X0 + 0x135]
	0x02367454 TBNZ X8, 0x0, 0x236745C
	0x02367458 BL 0x1C5C684
	0x0236745C LDR X8, [X0 + 0xC0]
	0x02367460 LDR X0, [X8 + 0x10]
	0x02367464 LDRB W8, [X0 + 0x135]
	0x02367468 TBNZ X8, 0x0, 0x2367470
	0x0236746C BL 0x1C5C684
	0x02367470 LDR X8, [X0 + 0xB8]
	0x02367474 STR X20, [X8]
	0x02367478 LDR X0, [X19 + 0x20]
	0x0236747C LDRB W8, [X0 + 0x135]
	0x02367480 TBNZ X8, 0x0, 0x2367488
	0x02367484 BL 0x1C5C684
	0x02367488 LDR X8, [X0 + 0xC0]
	0x0236748C LDR X0, [X8 + 0x10]
	0x02367490 LDRB W8, [X0 + 0x135]
	0x02367494 TBNZ X8, 0x0, 0x23674A4
	0x02367498 LDP X20, X19, [X31 + 0x10]
	0x0236749C LDR X30, [X31], #0x20
	0x023674A0 B 0x1C5C684
	0x023674A4 LDP X20, X19, [X31 + 0x10]
	0x023674A8 LDR X30, [X31], #0x20
	0x023674AC RET
	0x023674B0 MOV X1, X31
	0x023674B4 B 0x33BDD8C
	0x023674B8 STR X30, [X31 - 0x10]!
	0x023674BC CBZ X1, 0x23674F0
	0x023674C0 LDP W2, W8, [X1 + 0x18]
	0x023674C4 ADD W8, W8, 0x1
	0x023674C8 CMP W2, 0x1
	0x023674CC STP W31, W8, [X1 + 0x18]
	0x023674D0 B.LT 0x23674E8
	0x023674D4 LDR X0, [X1 + 0x10]
	0x023674D8 MOV W1, W31
	0x023674DC MOV X3, X31
	0x023674E0 LDR X30, [X31], #0x10
	0x023674E4 B 0x339FA34
	0x023674E8 LDR X30, [X31], #0x10
	0x023674EC RET
	0x023674F0 BL 0x1C16F20
	0x023674F4 STR X30, [X31 - 0x20]!
	0x023674F8 STP X20, X19, [X31 + 0x10]
	0x023674FC MOV X19, X0
	0x02367500 LDR X0, [X0 + 0x20]
	0x02367504 LDRB W8, [X0 + 0x135]
	0x02367508 TBNZ X8, 0x0, 0x2367510
	0x0236750C BL 0x1C5C684
	0x02367510 LDR X8, [X0 + 0xC0]
	0x02367514 LDR X0, [X8]
	0x02367518 LDRB W8, [X0 + 0x135]
	0x0236751C TBNZ X8, 0x0, 0x2367524
	0x02367520 BL 0x1C5C684
	0x02367524 BL 0x1C16F10
	0x02367528 LDR X8, [X19 + 0x20]
	0x0236752C MOV X20, X0
	0x02367530 LDRB W9, [X8 + 0x135]
	0x02367534 TBNZ X9, 0x0, 0x2367540
	0x02367538 MOV X0, X8
	0x0236753C BL 0x1C5C684
	0x02367540 MOV X0, X20
	0x02367544 MOV X1, X31
	0x02367548 BL 0x33BDD8C
	0x0236754C LDR X0, [X19 + 0x20]
	0x02367550 LDRB W8, [X0 + 0x135]
	0x02367554 TBNZ X8, 0x0, 0x236755C
	0x02367558 BL 0x1C5C684
	0x0236755C LDR X8, [X0 + 0xC0]
	0x02367560 LDR X0, [X8 + 0x10]
	0x02367564 LDRB W8, [X0 + 0x135]
	0x02367568 TBNZ X8, 0x0, 0x2367570

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X2+32]
	009 Move X20, X2
	010 Move X19, X1
	011 Move X8, [X8+192]
	012 Move X0, [X8+24]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Compare X19, 0
	020 JumpIfEqual {23}
	021 Move X8, [X19]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X20, [X31+48]
	024 Move X19, [X31+56]
	025 Move X22, [X31+32]
	026 Move X21, [X31+40]
	027 Move X30, [X31+16]
	028 Move X23, [X31+24]
	029 Move W0, 40
	030 Move X1, X31
	031 Add X31, X31, 64
	032 Call ThrowHelper.ThrowArgumentOutOfRangeException, X0
	033 Return 
	034 Move X21, [X19+88]
	035 Compare X21, 0
	036 JumpIfEqual {23}
	037 Move [X19+88], X31
	038 Move X8, [X20+32]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X8, [X8+192]
	041 Move X1, [X8+32]
	042 Move W8, [X1+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {50}
	047 Move X0, X1
	048 Call 0x1C5D684
	049 Move X1, X0
	050 Move X8, [X21]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Compare X9, 0
	053 JumpIfEqual {60}
	054 Move X10, [X8+176]
	055 Add X10, X10, 8
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Subtract X9, X9, 1
	059 Add X10, X10, 16
	060 Move X0, X21
	061 Move W2, W31
	062 Call 0x1C5D788
	063 NotImplemented "Instruction LDRSW not yet implemented."
	064 Add X8, X8, X9
	065 Add X0, X8, 312
	066 Move X8, [X0]
	067 Move X2, [X0+8]
	068 Move X0, X21
	069 Move W1, W22
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X8, [X20+32]
	072 NotImplemented "Instruction LDRH not yet implemented."
	073 Move W22, W0
	074 Move X8, [X8+192]
	075 Move X1, [X8+32]
	076 Move W8, [X1+309]
	077 Move TEMP, X8
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {84}
	081 Move X0, X1
	082 Call 0x1C5D684
	083 Move X1, X0
	084 Move X8, [X21]
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Compare X9, 0
	087 JumpIfEqual {94}
	088 Move X10, [X8+176]
	089 Add X10, X10, 8
	090 NotImplemented "Instruction LDUR not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Subtract X9, X9, 1
	093 Add X10, X10, 16
	094 Move W2, 2
	095 Move X0, X21
	096 Call 0x1C5D788
	097 Move W9, [X10]
	098 Add W9, W9, 2
	099 Add X8, X8, W9
	100 Add X0, X8, 312
	101 Move X8, [X0]
	102 Move X2, [X0+8]
	103 Move X0, X21
	104 Move W1, W23
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move W1, W0
	107 Move X8, [X20+32]
	108 Move X8, [X8+192]
	109 Move X2, [X8+72]
	110 Move X0, X19
	111 Call Task`1<Int32>.TrySetResult, X0, X1
	112 Move X20, [X31+48]
	113 Move X19, [X31+56]
	114 Move X22, [X31+32]
	115 Move X21, [X31+40]
	116 Move X30, [X31+16]
	117 Move X23, [X31+24]
	118 Add X31, X31, 64
	119 Return 
	120 Move X20, X0
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X0, X20
	123 Call 0x3EB2AD0
	124 Move X20, X0
	125 Move X0, 0x1D8D000
	126 Move X0, [X0+2000]
	127 Call 0x1C17D08
	128 Move X8, [X20]
	129 Move X1, [X8]
	130 Call 0x1C18270
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {185}
	135 Move X20, [X20]
	136 Call 0x3EB2AE0
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X0, 0x1D95000
	139 Move X0, [X0+2216]
	140 Call 0x1C17D08
	141 Compare X20, 0
	142 JumpIfEqual {151}
	143 Move X8, [X20]
	144 Move W9, [X0+304]
	145 Move W10, [X8+304]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move X8, [X8+200]
	148 Add X8, X8, X9
	149 NotImplemented "Instruction LDUR not yet implemented."
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Add X0, X31, 8
	152 Move W1, 1
	153 Move X2, X31
	154 Move [X31+8], X31
	155 Call CancellationToken..ctor, X0, X1
	156 Move X1, [X31+8]
	157 Move X0, X19
	158 Move X2, X31
	159 Call Task.TrySetCanceled, X0, X1
	160 Move X0, X19
	161 Move X1, X20
	162 Move X20, [X31+48]
	163 Move X19, [X31+56]
	164 Move X22, [X31+32]
	165 Move X21, [X31+40]
	166 Move X30, [X31+16]
	167 Move X23, [X31+24]
	168 Move X2, X31
	169 Add X31, X31, 64
	170 Call Task.TrySetException, X0, X1
	171 Return 
	172 Move X1, [X20+144]
	173 Move X0, X19
	174 Move X2, X20
	175 Move X20, [X31+48]
	176 Move X19, [X31+56]
	177 Move X22, [X31+32]
	178 Move X21, [X31+40]
	179 Move X30, [X31+16]
	180 Move X23, [X31+24]
	181 Move X3, X31
	182 Add X31, X31, 64
	183 Call Task.TrySetCanceled, X0, X1, X2
	184 Return 
	185 Move W0, 8
	186 Call 0x3EB2AF0
	187 Move X8, [X20]
	188 Move [X0], X8
	189 Move X1, 0x1B4E000
	190 Add X1, X1, 3672
	191 Move X2, X31
	192 Call 0x3EB2B00
	193 Move X20, X0
	194 Call 0x3EB2AE0
	195 Move X0, X20
	196 Call 0x1D2D690
	197 Call 0x1991590

