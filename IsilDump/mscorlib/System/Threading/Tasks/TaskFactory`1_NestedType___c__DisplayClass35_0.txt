Type: System.Threading.Tasks.TaskFactory`1/<>c__DisplayClass35_0

Method: System.Void .ctor()

Disassembly:
	0x023762C8 B 0x2687AEC
	0x023762CC BL 0x1C16F20

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <FromAsyncImpl>b__0(System.IAsyncResult iar)

Disassembly:
	0x023762D0 MOV X1, X31
	0x023762D4 B 0x33BDD8C
	0x023762D8 STR X30, [X31 - 0x30]!
	0x023762DC STP X22, X21, [X31 + 0x10]
	0x023762E0 STP X20, X19, [X31 + 0x20]
	0x023762E4 ADRP X22, 0x2063000
	0x023762E8 LDRB W8, [X22 + 0x8EB]
	0x023762EC MOV X20, X2
	0x023762F0 MOV X19, X1
	0x023762F4 MOV X21, X0
	0x023762F8 TBNZ X8, 0x0, 0x2376310
	0x023762FC ADRP X0, 0x1DA5000
	0x02376300 LDR X0, [X0 + 0x718]
	0x02376304 BL 0x1C16CF4
	0x02376308 MOVZ W8, 0x1
	0x0237630C STRB W8, [X22 + 0x8EB]
	0x02376310 CBZ X19, 0x23763B8
	0x02376314 ADRP X10, 0x1DA5000
	0x02376318 LDR X8, [X19]
	0x0237631C LDR X10, [X10 + 0x718]
	0x02376320 LDRH W9, [X8 + 0x12E]
	0x02376324 LDR X1, [X10]
	0x02376328 CBZ X9, 0x237634C
	0x0237632C LDR X10, [X8 + 0xB0]
	0x02376330 ADD X10, X10, 0x8
	0x02376334 LDUR X11, [X10 - 0x8]
	0x02376338 CMP X11, X1
	0x0237633C B.EQ 0x237635C
	0x02376340 SUBS X9, X9, 0x1
	0x02376344 ADD X10, X10, 0x10
	0x02376348 B.NE 0x2376334
	0x0237634C MOVZ W2, 0x3
	0x02376350 MOV X0, X19
	0x02376354 BL 0x1C5C788
	0x02376358 B 0x237636C
	0x0237635C LDR W9, [X10]
	0x02376360 ADD W9, W9, 0x3
	0x02376364 ADD X8, X8, W9, 0x4, SXTW
	0x02376368 ADD X0, X8, 0x138
	0x0237636C LDP X8, X1, [X0]
	0x02376370 MOV X0, X19
	0x02376374 BLR X8
	0x02376378 TBZ X0, 0x0, 0x237638C
	0x0237637C LDP X20, X19, [X31 + 0x20]
	0x02376380 LDP X22, X21, [X31 + 0x10]
	0x02376384 LDR X30, [X31], #0x30
	0x02376388 RET
	0x0237638C LDR X8, [X20 + 0x20]
	0x02376390 LDP X1, X2, [X21 + 0x10]
	0x02376394 LDR X3, [X21 + 0x20]
	0x02376398 MOV X0, X19
	0x0237639C LDR X8, [X8 + 0xC0]
	0x023763A0 LDP X20, X19, [X31 + 0x20]
	0x023763A4 LDP X22, X21, [X31 + 0x10]
	0x023763A8 MOVZ W4, 0x1
	0x023763AC LDR X5, [X8 + 0x18]
	0x023763B0 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2064000
	007 Move W8, [X22+2267]
	008 Move X20, X2
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x1DA6000
	016 Move X0, [X0+1816]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2267], W8
	020 Compare X19, 0
	021 JumpIfEqual {71}
	022 Move X10, 0x1DA6000
	023 Move X8, [X19]
	024 Move X10, [X10+1816]
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move X1, [X10]
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move W2, 3
	036 Move X0, X19
	037 Call 0x1C5D788
	038 Move W9, [X10]
	039 Add W9, W9, 3
	040 Add X8, X8, W9
	041 Add X0, X8, 312
	042 Move X8, [X0]
	043 Move X1, [X0+8]
	044 Move X0, X19
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {56}
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Return 
	056 Move X8, [X20+32]
	057 Move X1, [X21+16]
	058 Move X2, [X21+24]
	059 Move X3, [X21+32]
	060 Move X0, X19
	061 Move X8, [X8+192]
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move W4, 1
	067 Move X5, [X8+24]
	068 Move X30, [X31+48]
	069 Call 0x267DD44, X0, X1, X2, X3, X4
	070 Return 
	071 Call 0x1C17F20

