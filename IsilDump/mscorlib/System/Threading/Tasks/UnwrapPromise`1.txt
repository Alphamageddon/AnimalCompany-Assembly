Type: System.Threading.Tasks.UnwrapPromise`1

Method: System.Void .ctor(System.Threading.Tasks.Task outerTask, System.Boolean lookForOce)

Disassembly:
	0x02733B04 MOV X19, X0
	0x02733B08 TBNZ X8, 0x0, 0x2733B44
	0x02733B0C ADRP X0, 0x19E8000
	0x02733B10 LDR X0, [X0 + 0x728]
	0x02733B14 BL 0x1C16CF4
	0x02733B18 ADRP X0, 0x19C8000
	0x02733B1C LDR X0, [X0 + 0x8A8]
	0x02733B20 BL 0x1C16CF4
	0x02733B24 ADRP X0, 0x19EA000
	0x02733B28 LDR X0, [X0 + 0xAA0]
	0x02733B2C BL 0x1C16CF4
	0x02733B30 ADRP X0, 0x19EA000
	0x02733B34 LDR X0, [X0 + 0xAA8]
	0x02733B38 BL 0x1C16CF4
	0x02733B3C MOVZ W8, 0x1
	0x02733B40 STRB W8, [X24 + 0x691]
	0x02733B44 LDR X0, [X23]
	0x02733B48 LDR W8, [X0 + 0xE0]
	0x02733B4C CBNZ W8, 0x2733B54
	0x02733B50 BL 0x1C16DFC
	0x02733B54 MOV X0, X31
	0x02733B58 BL 0x33EE5CC
	0x02733B5C TBZ X0, 0x0, 0x2733B84
	0x02733B60 LDR X0, [X23]
	0x02733B64 LDR W8, [X0 + 0xE0]
	0x02733B68 CBNZ W8, 0x2733B70
	0x02733B6C BL 0x1C16DFC
	0x02733B70 MOVZ W0, 0x1
	0x02733B74 MOVZ W2, 0x1
	0x02733B78 MOV X1, X19
	0x02733B7C MOV X3, X31
	0x02733B80 BL 0x33EE5DC
	0x02733B84 CBZ X21, 0x2733E24
	0x02733B88 MOV X0, X21
	0x02733B8C MOV X1, X31
	0x02733B90 BL 0x33F0678
	0x02733B94 CMP W0, 0x5
	0x02733B98 B.EQ 0x2733BF0
	0x02733B9C CMP W0, 0x7
	0x02733BA0 B.EQ 0x2733C24
	0x02733BA4 CMP W0, 0x6
	0x02733BA8 B.NE 0x2733CD8
	0x02733BAC MOV X0, X21
	0x02733BB0 MOV X1, X31
	0x02733BB4 BL 0x33ECE8C
	0x02733BB8 MOV X20, X0
	0x02733BBC MOV X0, X21
	0x02733BC0 MOV X1, X31
	0x02733BC4 BL 0x33F128C
	0x02733BC8 CBZ X19, 0x2733E24
	0x02733BCC MOV X2, X0
	0x02733BD0 MOV X0, X19
	0x02733BD4 MOV X1, X20
	0x02733BD8 LDP X20, X19, [X31 + 0x30]
	0x02733BDC LDP X22, X21, [X31 + 0x20]
	0x02733BE0 LDP X24, X23, [X31 + 0x10]
	0x02733BE4 MOV X3, X31
	0x02733BE8 LDR X30, [X31], #0x40
	0x02733BEC B 0x33EDA6C
	0x02733BF0 LDR X8, [X20 + 0x20]
	0x02733BF4 LDR X8, [X8 + 0xC0]
	0x02733BF8 LDR X0, [X8 + 0x70]
	0x02733BFC LDRB W8, [X0 + 0x135]
	0x02733C00 TBNZ X8, 0x0, 0x2733C08
	0x02733C04 BL 0x1C5C684
	0x02733C08 LDR X8, [X21]
	0x02733C0C LDRB W9, [X0 + 0x130]
	0x02733C10 LDRB W10, [X8 + 0x130]
	0x02733C14 CMP W10, W9
	0x02733C18 B.CS 0x2733CF0
	0x02733C1C MOV X21, X31
	0x02733C20 B 0x2733D04
	0x02733C24 MOV X0, X21
	0x02733C28 MOV X1, X31
	0x02733C2C BL 0x33F10E8
	0x02733C30 MOV X20, X0
	0x02733C34 TBZ X22, 0x0, 0x2733CB4
	0x02733C38 CBZ X20, 0x2733E24
	0x02733C3C ADRP X8, 0x19EA000
	0x02733C40 LDR X8, [X8 + 0xAA0]
	0x02733C44 MOV X0, X20
	0x02733C48 LDR X1, [X8]
	0x02733C4C BL 0x25518BC
	0x02733C50 CMP W0, 0x1
	0x02733C54 B.LT 0x2733CB4
	0x02733C58 ADRP X8, 0x19EA000
	0x02733C5C LDR X8, [X8 + 0xAA8]
	0x02733C60 MOV X0, X20
	0x02733C64 MOV W1, W31
	0x02733C68 LDR X2, [X8]
	0x02733C6C BL 0x2551944
	0x02733C70 CBZ X0, 0x2733CB4
	0x02733C74 LDR X8, [X0 + 0x10]
	0x02733C78 MOV X2, X0
	0x02733C7C CBZ X8, 0x2733CB4
	0x02733C80 ADRP X9, 0x19C8000
	0x02733C84 LDR X9, [X9 + 0x8A8]
	0x02733C88 LDR X10, [X8]
	0x02733C8C LDR X9, [X9]
	0x02733C90 LDRB W12, [X10 + 0x130]
	0x02733C94 LDRB W11, [X9 + 0x130]
	0x02733C98 CMP W12, W11
	0x02733C9C B.CC 0x2733CB4
	0x02733CA0 LDR X10, [X10 + 0xC8]
	0x02733CA4 ADD X10, X10, X11, 0x3, LSL
	0x02733CA8 LDUR X10, [X10 - 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1CA8000
	008 Move W8, [X23+1672]
	009 Move X21, X3
	010 Move W22, W2
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x19E9000
	018 Move X0, [X0+1832]
	019 Call 0x1C17CF4
	020 Move X0, 0x19EB000
	021 Move X0, [X0+2696]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+1672], W8
	025 Compare X19, 0
	026 JumpIfEqual {134}
	027 And W23, W22, 1
	028 Move X22, 0x19E9000
	029 Move X22, [X22+1832]
	030 Move X0, X19
	031 Move X1, X31
	032 Call Task.get_CreationOptions, X0
	033 Move X8, [X21+32]
	034 And W2, W0, 4
	035 Move X0, X20
	036 Move X1, X31
	037 Move X8, [X8+192]
	038 Move X3, [X8]
	039 Call Task`1<Object>..ctor, X0, X1, X2
	040 Move [X20+89], W23
	041 Move [X20+88], W31
	042 Move X0, [X22]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X31
	048 Call DebuggerSupport.get_LoggingOn
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {66}
	053 Move X0, [X22]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X8, 0x19EB000
	059 Move X8, [X8+2696]
	060 Move W0, W31
	061 Move X1, X20
	062 Move X3, X31
	063 Move X2, [X8]
	064 Move X4, X31
	065 Call DebuggerSupport.TraceOperationCreation, X0, X1, X2, X3
	066 Move X0, [X22]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X23, 0x1CA7000
	072 Move W8, [X23+2088]
	073 Compare W8, 0
	074 JumpIfNotEqual {83}
	075 Move X0, 0x19E9000
	076 Move X0, [X0+1832]
	077 Call 0x1C17CF4
	078 Move X0, 0x19C2000
	079 Move X0, [X0+1976]
	080 Call 0x1C17CF4
	081 Move W8, 1
	082 Move [X23+2088], W8
	083 Move X23, 0x19C2000
	084 Move X23, [X23+1976]
	085 Move X0, [X23]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {91}
	089 Call 0x1C17DFC
	090 Move X0, [X23]
	091 Move X8, [X0+184]
	092 Move W8, [X8+16]
	093 Compare W8, 0
	094 JumpIfEqual {103}
	095 Move X0, [X22]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move X0, X20
	101 Move X1, X31
	102 Call DebuggerSupport.AddToActiveTasksNonInlined, X0
	103 Move X0, X19
	104 Move X1, X31
	105 Call Task.get_IsCompleted, X0
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {123}
	110 Move X8, [X21+32]
	111 Move X0, X20
	112 Move X1, X19
	113 Move X20, [X31+32]
	114 Move X19, [X31+40]
	115 Move X8, [X8+192]
	116 Move X22, [X31+16]
	117 Move X21, [X31+24]
	118 Move X2, [X8+24]
	119 Move X30, [X31+48]
	120 Move X23, [X31+56]
	121 Call 0x2733F94, X0, X1
	122 Return 
	123 Move X0, X19
	124 Move X1, X20
	125 Move X20, [X31+32]
	126 Move X19, [X31+40]
	127 Move X22, [X31+16]
	128 Move X21, [X31+24]
	129 Move X2, X31
	130 Move X30, [X31+48]
	131 Move X23, [X31+56]
	132 Call Task.AddCompletionAction, X0, X1
	133 Return 
	134 Call 0x1C17F20

Method: System.Void Invoke(System.Threading.Tasks.Task completingTask)

Disassembly:
	0x02733CAC CMP X10, X9
	0x02733CB0 B.EQ 0x2733E14
	0x02733CB4 CBZ X19, 0x2733E24
	0x02733CB8 MOV X0, X19
	0x02733CBC MOV X1, X20
	0x02733CC0 LDP X20, X19, [X31 + 0x30]
	0x02733CC4 LDP X22, X21, [X31 + 0x20]
	0x02733CC8 LDP X24, X23, [X31 + 0x10]
	0x02733CCC MOV X2, X31
	0x02733CD0 LDR X30, [X31], #0x40
	0x02733CD4 B 0x33EE46C
	0x02733CD8 LDP X20, X19, [X31 + 0x30]
	0x02733CDC LDP X22, X21, [X31 + 0x20]
	0x02733CE0 LDP X24, X23, [X31 + 0x10]
	0x02733CE4 MOV W0, W31
	0x02733CE8 LDR X30, [X31], #0x40
	0x02733CEC RET
	0x02733CF0 LDR X8, [X8 + 0xC8]
	0x02733CF4 ADD X8, X8, X9, 0x3, LSL
	0x02733CF8 LDUR X8, [X8 - 0x8]
	0x02733CFC CMP X8, X0
	0x02733D00 CSEL X21, X21, X31, EQ
	0x02733D04 LDR X0, [X23]
	0x02733D08 LDR W8, [X0 + 0xE0]
	0x02733D0C CBNZ W8, 0x2733D14
	0x02733D10 BL 0x1C16DFC
	0x02733D14 MOV X0, X31
	0x02733D18 BL 0x33EE5CC
	0x02733D1C TBZ X0, 0x0, 0x2733D44
	0x02733D20 LDR X0, [X23]
	0x02733D24 LDR W8, [X0 + 0xE0]
	0x02733D28 CBNZ W8, 0x2733D30
	0x02733D2C BL 0x1C16DFC
	0x02733D30 MOVZ W2, 0x1
	0x02733D34 MOV W0, W31
	0x02733D38 MOV X1, X19
	0x02733D3C MOV X3, X31
	0x02733D40 BL 0x33EE5D8
	0x02733D44 LDR X0, [X23]
	0x02733D48 LDR W8, [X0 + 0xE0]
	0x02733D4C CBNZ W8, 0x2733D54
	0x02733D50 BL 0x1C16DFC
	0x02733D54 ADRP X22, 0x1CA6000
	0x02733D58 LDRB W8, [X22 + 0x829]
	0x02733D5C CBNZ W8, 0x2733D80
	0x02733D60 ADRP X0, 0x19E8000
	0x02733D64 LDR X0, [X0 + 0x728]
	0x02733D68 BL 0x1C16CF4
	0x02733D6C ADRP X0, 0x19C1000
	0x02733D70 LDR X0, [X0 + 0x7B8]
	0x02733D74 BL 0x1C16CF4
	0x02733D78 MOVZ W8, 0x1
	0x02733D7C STRB W8, [X22 + 0x829]
	0x02733D80 ADRP X22, 0x19C1000
	0x02733D84 LDR X22, [X22 + 0x7B8]
	0x02733D88 LDR X0, [X22]
	0x02733D8C LDR W8, [X0 + 0xE0]
	0x02733D90 CBNZ W8, 0x2733D9C
	0x02733D94 BL 0x1C16DFC
	0x02733D98 LDR X0, [X22]
	0x02733D9C LDR X8, [X0 + 0xB8]
	0x02733DA0 LDRB W8, [X8 + 0x10]
	0x02733DA4 CBZ W8, 0x2733DC4
	0x02733DA8 LDR X0, [X23]
	0x02733DAC LDR W8, [X0 + 0xE0]
	0x02733DB0 CBNZ W8, 0x2733DB8
	0x02733DB4 BL 0x1C16DFC
	0x02733DB8 MOV X0, X19
	0x02733DBC MOV X1, X31
	0x02733DC0 BL 0x33EE8F8
	0x02733DC4 CBZ X21, 0x2733DE8
	0x02733DC8 LDR X8, [X20 + 0x20]
	0x02733DCC MOV X0, X21
	0x02733DD0 LDR X8, [X8 + 0xC0]
	0x02733DD4 LDR X1, [X8 + 0x88]
	0x02733DD8 BL 0x26A4474
	0x02733DDC AND X1, X0, 0xFF

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1CA8000
	009 Move X23, 0x19C2000
	010 Move W8, [X22+1673]
	011 Move X23, [X23+1976]
	012 Move X21, X2
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x19C2000
	020 Move X0, [X0+1976]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1673], W8
	024 Move X0, [X23]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X31
	030 Call Task.get_CurrentStackGuard
	031 Compare X0, 0
	032 JumpIfEqual {57}
	033 Move X1, X31
	034 Move X22, X0
	035 Call StackGuard.TryBeginInliningScope, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {69}
	040 Move X8, [X21+32]
	041 Move X8, [X8+192]
	042 Move X2, [X8+32]
	043 Move X0, X20
	044 Move X1, X19
	045 Call 0x2733DE0, X0, X1
	046 Move X0, X22
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X24, [X31+16]
	052 Move X23, [X31+24]
	053 Move X1, X31
	054 Move X30, [X31+64]
	055 Call StackGuard.EndInliningScope, X0
	056 Return 
	057 Call 0x1C17F20
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X24, X0
	060 Move X0, X24
	061 Call 0x3EB2AD0
	062 Move X23, [X0]
	063 Call 0x3EB2AE0
	064 Move X0, X22
	065 Move X1, X31
	066 Call StackGuard.EndInliningScope, X0
	067 Compare X23, 0
	068 JumpIfNotEqual {84}
	069 Move X8, [X21+32]
	070 Move X0, X20
	071 Move X1, X19
	072 Move X20, [X31+48]
	073 Move X19, [X31+56]
	074 Move X8, [X8+192]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X24, [X31+16]
	078 Move X23, [X31+24]
	079 Move X2, [X8+40]
	080 Move X30, [X31+64]
	081 Call 0x2733E38, X0, X1
	082 Return 
	083 Move X23, X31
	084 Move X0, X23
	085 Call 0x1C17F18
	086 Move X24, X0
	087 Move X0, X22
	088 Move X1, X31
	089 Call StackGuard.EndInliningScope, X0
	090 Compare X23, 0
	091 JumpIfNotEqual {94}
	092 Move X0, X24
	093 Call 0x1D2D690
	094 Move X0, X23
	095 Call 0x1C17F18
	096 Call 0x1991590

Method: System.Void InvokeCore(System.Threading.Tasks.Task completingTask)

Disassembly:
	0x02733DE0 CBNZ X19, 0x2733DF0
	0x02733DE4 B 0x2733E24
	0x02733DE8 MOV X1, X31
	0x02733DEC CBZ X19, 0x2733E24
	0x02733DF0 LDR X8, [X20 + 0x20]
	0x02733DF4 MOV X0, X19
	0x02733DF8 LDP X20, X19, [X31 + 0x30]
	0x02733DFC LDP X22, X21, [X31 + 0x20]
	0x02733E00 LDR X8, [X8 + 0xC0]
	0x02733E04 LDP X24, X23, [X31 + 0x10]
	0x02733E08 LDR X2, [X8 + 0x90]
	0x02733E0C LDR X30, [X31], #0x40
	0x02733E10 B 0x26A438C
	0x02733E14 CBZ X19, 0x2733E24
	0x02733E18 LDR X1, [X8 + 0x90]
	0x02733E1C MOV X0, X19
	0x02733E20 B 0x2733BD8
	0x02733E24 BL 0x1C16F20
	0x02733E28 STP X30, X21, [X31 - 0x20]!
	0x02733E2C STP X20, X19, [X31 + 0x10]
	0x02733E30 MOV X19, X0
	0x02733E34 CBZ X1, 0x2733E70

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+88]
	004 Move X19, X0
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Compare W8, 0
	007 JumpIfNotEqual {24}
	008 Move X8, [X2+32]
	009 Move X0, X19
	010 Move X8, [X8+192]
	011 Move X2, [X8+24]
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Call 0x2733F94, X0, X1
	015 Return 
	016 Move X8, [X2+32]
	017 Move X0, X19
	018 Move W2, W31
	019 Move X8, [X8+192]
	020 Move X3, [X8+48]
	021 Call 0x27340FC, X0, X1, X2
	022 Move W8, 2
	023 Move [X19+88], W8
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Return 

Method: System.Void InvokeCoreAsync(System.Threading.Tasks.Task completingTask)

Disassembly:
	0x02733E38 MOV X20, X1
	0x02733E3C MOV X0, X1
	0x02733E40 MOV X1, X31
	0x02733E44 MOV X21, X2
	0x02733E48 BL 0x33ED11C
	0x02733E4C TBZ X0, 0x0, 0x2733E98
	0x02733E50 LDR X8, [X21 + 0x20]
	0x02733E54 MOV X0, X19
	0x02733E58 MOV X1, X20
	0x02733E5C MOV W2, W31
	0x02733E60 LDR X8, [X8 + 0xC0]
	0x02733E64 LDR X3, [X8 + 0x30]
	0x02733E68 BL 0x2733AD8
	0x02733E6C B 0x2733E84
	0x02733E70 CBZ X19, 0x2733EB0
	0x02733E74 MOV X0, X19
	0x02733E78 MOV X1, X31
	0x02733E7C MOV X2, X31
	0x02733E80 BL 0x33EE464
	0x02733E84 MOVZ W8, 0x2
	0x02733E88 STRB W8, [X19 + 0x51]
	0x02733E8C LDP X20, X19, [X31 + 0x10]
	0x02733E90 LDP X30, X21, [X31], #0x20
	0x02733E94 RET
	0x02733E98 MOV X0, X20
	0x02733E9C MOV X1, X19
	0x02733EA0 LDP X20, X19, [X31 + 0x10]
	0x02733EA4 MOV X2, X31
	0x02733EA8 LDP X30, X21, [X31], #0x20
	0x02733EAC B 0x33F47D4
	0x02733EB0 BL 0x1C16F20
	0x02733EB4 MOVZ W0, 0x1
	0x02733EB8 RET
	0x02733EBC STR X30, [X31 - 0x40]!
	0x02733EC0 STP X24, X23, [X31 + 0x10]
	0x02733EC4 STP X22, X21, [X31 + 0x20]
	0x02733EC8 STP X20, X19, [X31 + 0x30]
	0x02733ECC ADRP X23, 0x1CA7000
	0x02733ED0 LDRB W8, [X23 + 0x692]
	0x02733ED4 MOV X21, X3
	0x02733ED8 MOV W22, W2
	0x02733EDC MOV X19, X1
	0x02733EE0 MOV X20, X0
	0x02733EE4 TBNZ X8, 0x0, 0x2733F08
	0x02733EE8 ADRP X0, 0x19E8000
	0x02733EEC LDR X0, [X0 + 0x728]
	0x02733EF0 BL 0x1C16CF4
	0x02733EF4 ADRP X0, 0x19EA000
	0x02733EF8 LDR X0, [X0 + 0xA88]
	0x02733EFC BL 0x1C16CF4
	0x02733F00 MOVZ W8, 0x1
	0x02733F04 STRB W8, [X23 + 0x692]
	0x02733F08 CBZ X19, 0x27340C8
	0x02733F0C ADRP X24, 0x19E8000
	0x02733F10 LDR X24, [X24 + 0x728]
	0x02733F14 MOV X0, X19
	0x02733F18 MOV X1, X31
	0x02733F1C BL 0x33EEF70
	0x02733F20 LDR X8, [X21 + 0x20]
	0x02733F24 AND W2, W0, 0x4
	0x02733F28 MOV X0, X20
	0x02733F2C MOV X1, X31
	0x02733F30 LDR X8, [X8 + 0xC0]
	0x02733F34 LDR X3, [X8]
	0x02733F38 LDR X8, [X3]
	0x02733F3C BLR X8
	0x02733F40 LDR X8, [X21 + 0x20]
	0x02733F44 MOVZ W1, 0x1
	0x02733F48 AND W22, W22, 0x1
	0x02733F4C LDR X8, [X8 + 0xC0]
	0x02733F50 LDR X8, [X8 + 0x10]
	0x02733F54 LDR X8, [X8 + 0x80]
	0x02733F58 ADD X23, X8, 0x20
	0x02733F5C MOV X0, X23
	0x02733F60 BL 0x1C16D14
	0x02733F64 MOV X0, X20
	0x02733F68 MOV X1, X23
	0x02733F6C BL 0x1C16D18
	0x02733F70 STRB W22, [X0]
	0x02733F74 LDR X8, [X21 + 0x20]
	0x02733F78 MOVZ W1, 0x1
	0x02733F7C LDR X8, [X8 + 0xC0]
	0x02733F80 LDR X8, [X8 + 0x10]
	0x02733F84 LDR X22, [X8 + 0x80]
	0x02733F88 MOV X0, X22
	0x02733F8C BL 0x1C16D14
	0x02733F90 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1CA8000
	008 Move W8, [X22+1674]
	009 Move X20, X2
	010 Move X19, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x19CA000
	017 Move X0, [X0+2392]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1674], W8
	021 Move X8, [X20+32]
	022 Move X8, [X8+192]
	023 Move X0, [X8+64]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X8, [X20+32]
	035 Move X8, [X8+192]
	036 Move X0, [X8+64]
	037 Move W8, [X0+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {43}
	042 Call 0x1C5D684
	043 Move X8, [X0+184]
	044 Move X22, [X8+8]
	045 Compare X22, 0
	046 JumpIfNotEqual {102}
	047 Move X8, [X20+32]
	048 Move X8, [X8+192]
	049 Move X0, [X8+64]
	050 Move W8, [X0+309]
	051 Move TEMP, X8
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {56}
	055 Call 0x1C5D684
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X8, [X20+32]
	061 Move X8, [X8+192]
	062 Move X0, [X8+64]
	063 Move W8, [X0+309]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {69}
	068 Call 0x1C5D684
	069 Move X9, 0x19CA000
	070 Move X8, [X0+184]
	071 Move X9, [X9+2392]
	072 Move X23, [X8]
	073 Move X0, [X9]
	074 Call 0x1C17F10
	075 Move X8, [X20+32]
	076 Move X1, X23
	077 Move X3, X31
	078 Move X22, X0
	079 Move X8, [X8+192]
	080 Move X2, [X8+72]
	081 Call WaitCallback..ctor, X0, X1, X2
	082 Move X8, [X20+32]
	083 Move X8, [X8+192]
	084 Move X0, [X8+64]
	085 Move W9, [X0+309]
	086 Move TEMP, X9
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {93}
	090 Call 0x1C5D684
	091 Move X8, [X20+32]
	092 Move X8, [X8+192]
	093 Move X9, [X0+184]
	094 Move [X9+8], X22
	095 Move X0, [X8+64]
	096 Move W8, [X0+309]
	097 Move TEMP, X8
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {102}
	101 Call 0x1C5D684
	102 Move X8, [X20+32]
	103 Move X0, X21
	104 Move X1, X19
	105 Move X8, [X8+192]
	106 Move X2, [X8+80]
	107 Call 0x229F5F8, X0, X1
	108 Move X1, X0
	109 Move X0, X22
	110 Move X20, [X31+32]
	111 Move X19, [X31+40]
	112 Move X22, [X31+16]
	113 Move X21, [X31+24]
	114 Move X2, X31
	115 Move X30, [X31+48]
	116 Move X23, [X31+56]
	117 Call ThreadPool.UnsafeQueueUserWorkItem, X0, X1
	118 Return 

Method: System.Void ProcessCompletedOuterTask(System.Threading.Tasks.Task task)

Disassembly:
	0x02733F94 MOV X1, X22
	0x02733F98 BL 0x1C16D18
	0x02733F9C STRB W31, [X0]
	0x02733FA0 LDR X0, [X24]
	0x02733FA4 LDR W8, [X0 + 0xE0]
	0x02733FA8 CBNZ W8, 0x2733FB0
	0x02733FAC BL 0x1C16DFC
	0x02733FB0 MOV X0, X31
	0x02733FB4 BL 0x33EE5CC
	0x02733FB8 TBZ X0, 0x0, 0x2733FEC
	0x02733FBC LDR X0, [X24]
	0x02733FC0 LDR W8, [X0 + 0xE0]
	0x02733FC4 CBNZ W8, 0x2733FCC
	0x02733FC8 BL 0x1C16DFC
	0x02733FCC ADRP X8, 0x19EA000
	0x02733FD0 LDR X8, [X8 + 0xA88]
	0x02733FD4 MOV W0, W31
	0x02733FD8 MOV X1, X20
	0x02733FDC MOV X3, X31
	0x02733FE0 LDR X2, [X8]
	0x02733FE4 MOV X4, X31
	0x02733FE8 BL 0x33EE5D4
	0x02733FEC LDR X0, [X24]
	0x02733FF0 LDR W8, [X0 + 0xE0]
	0x02733FF4 CBNZ W8, 0x2733FFC
	0x02733FF8 BL 0x1C16DFC
	0x02733FFC ADRP X22, 0x1CA6000
	0x02734000 LDRB W8, [X22 + 0x828]
	0x02734004 CBNZ W8, 0x2734028
	0x02734008 ADRP X0, 0x19E7000
	0x0273400C LDR X0, [X0 + 0x728]
	0x02734010 BL 0x1C16CF4
	0x02734014 ADRP X0, 0x19C0000
	0x02734018 LDR X0, [X0 + 0x7B8]
	0x0273401C BL 0x1C16CF4
	0x02734020 MOVZ W8, 0x1
	0x02734024 STRB W8, [X22 + 0x828]
	0x02734028 ADRP X22, 0x19C0000
	0x0273402C LDR X22, [X22 + 0x7B8]
	0x02734030 LDR X0, [X22]
	0x02734034 LDR W8, [X0 + 0xE0]
	0x02734038 CBNZ W8, 0x2734044
	0x0273403C BL 0x1C16DFC
	0x02734040 LDR X0, [X22]
	0x02734044 LDR X8, [X0 + 0xB8]
	0x02734048 LDRB W8, [X8 + 0x10]
	0x0273404C CBZ W8, 0x273406C
	0x02734050 LDR X0, [X24]
	0x02734054 LDR W8, [X0 + 0xE0]
	0x02734058 CBNZ W8, 0x2734060
	0x0273405C BL 0x1C16DFC
	0x02734060 MOV X0, X20
	0x02734064 MOV X1, X31
	0x02734068 BL 0x33EE67C
	0x0273406C MOV X0, X19
	0x02734070 MOV X1, X31
	0x02734074 BL 0x33ED11C
	0x02734078 TBZ X0, 0x0, 0x27340A8
	0x0273407C LDR X8, [X21 + 0x20]
	0x02734080 MOV X0, X20
	0x02734084 MOV X1, X19
	0x02734088 LDP X20, X19, [X31 + 0x30]
	0x0273408C LDR X8, [X8 + 0xC0]
	0x02734090 LDP X22, X21, [X31 + 0x20]
	0x02734094 LDP X24, X23, [X31 + 0x10]
	0x02734098 LDR X2, [X8 + 0x18]
	0x0273409C LDR X3, [X2]
	0x027340A0 LDR X30, [X31], #0x40
	0x027340A4 BR X3
	0x027340A8 MOV X0, X19
	0x027340AC MOV X1, X20
	0x027340B0 LDP X20, X19, [X31 + 0x30]
	0x027340B4 LDP X22, X21, [X31 + 0x20]
	0x027340B8 LDP X24, X23, [X31 + 0x10]
	0x027340BC MOV X2, X31
	0x027340C0 LDR X30, [X31], #0x40
	0x027340C4 B 0x33F47D4
	0x027340C8 BL 0x1C16F20
	0x027340CC STR X30, [X31 - 0x40]!
	0x027340D0 STP X24, X23, [X31 + 0x10]
	0x027340D4 STP X22, X21, [X31 + 0x20]
	0x027340D8 STP X20, X19, [X31 + 0x30]
	0x027340DC ADRP X22, 0x1CA6000
	0x027340E0 ADRP X23, 0x19C0000
	0x027340E4 LDRB W8, [X22 + 0x693]
	0x027340E8 LDR X23, [X23 + 0x7B8]
	0x027340EC MOV X21, X2
	0x027340F0 MOV X19, X1
	0x027340F4 MOV X20, X0
	0x027340F8 TBNZ X8, 0x0, 0x2734110

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1CA8000
	007 Move W8, [X22+1675]
	008 Move X21, X2
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x19EB000
	016 Move X0, [X0+2704]
	017 Call 0x1C17CF4
	018 Move X0, 0x19EB000
	019 Move X0, [X0+2712]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1675], W8
	023 Move W8, 1
	024 Move [X19+88], W8
	025 Compare X20, 0
	026 JumpIfEqual {96}
	027 Move X0, X20
	028 Move X1, X31
	029 Call Task.get_Status, X0
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, [X21+32]
	032 Move X8, [X8+192]
	033 Move X0, [X8+96]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move X8, [X20]
	041 Move W10, [X0+304]
	042 Move W9, [X8+304]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X11, [X8+200]
	045 Add X10, X11, X10
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X10, 0x19EA000
	049 Move X10, [X10+2712]
	050 Move X1, [X10]
	051 Move W10, [X1+304]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X8, [X8+200]
	054 Add X8, X8, X10
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X8, 0x19EA000
	058 Move X8, [X8+2704]
	059 Move X1, [X8]
	060 Move X0, X20
	061 Call Task`1<Object>.get_Result, X0
	062 Move X8, [X21+32]
	063 Move X1, X0
	064 Move X0, X19
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X8, [X8+192]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X2, [X8+120]
	071 Move X30, [X31+48]
	072 Call 0x273444C, X0, X1
	073 Return 
	074 And W8, W0, 0xFFFFFFFE
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X8, [X21+32]
	077 Move W2, [X19+89]
	078 Move X0, X19
	079 Move X1, X20
	080 Move X8, [X8+192]
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X3, [X8+48]
	086 Move X30, [X31+48]
	087 Move X20, [X31+32]
	088 Move X19, [X31+40]
	089 Move X22, [X31+16]
	090 Move X21, [X31+24]
	091 Move X30, [X31+48]
	092 Return 
	093 Move X8, [X21+32]
	094 Move X8, [X8+192]
	095 Add X8, X8, 104
	096 Call 0x1C17F20
	097 Move X0, X20
	098 Call 0x1C181E0

Method: System.Boolean TrySetFromTask(System.Threading.Tasks.Task task, System.Boolean lookForOce)

Disassembly:
	0x027340FC ADRP X0, 0x19C0000
	0x02734100 LDR X0, [X0 + 0x7B8]
	0x02734104 BL 0x1C16CF4
	0x02734108 MOVZ W8, 0x1
	0x0273410C STRB W8, [X22 + 0x693]
	0x02734110 LDR X0, [X23]
	0x02734114 LDR W8, [X0 + 0xE0]
	0x02734118 CBNZ W8, 0x2734120
	0x0273411C BL 0x1C16DFC
	0x02734120 MOV X0, X31
	0x02734124 BL 0x33F0424
	0x02734128 CBZ X0, 0x2734174
	0x0273412C MOV X1, X31
	0x02734130 MOV X22, X0
	0x02734134 BL 0x33F769C
	0x02734138 TBZ X0, 0x0, 0x27341A4
	0x0273413C LDR X8, [X21 + 0x20]
	0x02734140 LDR X8, [X8 + 0xC0]
	0x02734144 LDR X2, [X8 + 0x20]
	0x02734148 LDR X8, [X2]
	0x0273414C MOV X0, X20
	0x02734150 MOV X1, X19
	0x02734154 BLR X8
	0x02734158 MOV X0, X22
	0x0273415C LDP X20, X19, [X31 + 0x30]
	0x02734160 LDP X22, X21, [X31 + 0x20]
	0x02734164 LDP X24, X23, [X31 + 0x10]
	0x02734168 MOV X1, X31
	0x0273416C LDR X30, [X31], #0x40
	0x02734170 B 0x33F76DC
	0x02734174 BL 0x1C16F20
	0x02734178 CMP W1, 0x1
	0x0273417C MOV X24, X0
	0x02734180 B.NE 0x27341D0
	0x02734184 MOV X0, X24
	0x02734188 BL 0x3EB1AD0
	0x0273418C LDR X23, [X0]
	0x02734190 BL 0x3EB1AE0
	0x02734194 MOV X0, X22
	0x02734198 MOV X1, X31
	0x0273419C BL 0x33F76DC
	0x027341A0 CBNZ X23, 0x27341D8
	0x027341A4 LDR X8, [X21 + 0x20]
	0x027341A8 MOV X0, X20
	0x027341AC MOV X1, X19
	0x027341B0 LDP X20, X19, [X31 + 0x30]
	0x027341B4 LDR X8, [X8 + 0xC0]
	0x027341B8 LDP X22, X21, [X31 + 0x20]
	0x027341BC LDP X24, X23, [X31 + 0x10]
	0x027341C0 LDR X2, [X8 + 0x28]
	0x027341C4 LDR X3, [X2]
	0x027341C8 LDR X30, [X31], #0x40
	0x027341CC BR X3
	0x027341D0 MOV X23, X31
	0x027341D4 B 0x27341E4
	0x027341D8 MOV X0, X23
	0x027341DC BL 0x1C16F18
	0x027341E0 MOV X24, X0
	0x027341E4 MOV X0, X22
	0x027341E8 MOV X1, X31
	0x027341EC BL 0x33F76DC
	0x027341F0 CBNZ X23, 0x27341FC
	0x027341F4 MOV X0, X24
	0x027341F8 BL 0x1D2C690
	0x027341FC MOV X0, X23
	0x02734200 BL 0x1C16F18
	0x02734204 BL 0x1990590
	0x02734208 STP X30, X21, [X31 - 0x20]!
	0x0273420C STP X20, X19, [X31 + 0x10]
	0x02734210 LDR X8, [X2 + 0x20]
	0x02734214 MOV X21, X1
	0x02734218 MOV X20, X2
	0x0273421C MOV X19, X0
	0x02734220 LDR X8, [X8 + 0xC0]
	0x02734224 LDR X8, [X8 + 0x10]
	0x02734228 LDR X1, [X8 + 0x80]
	0x0273422C BL 0x1C16D18
	0x02734230 LDRB W8, [X0]
	0x02734234 CMP W8, 0x1
	0x02734238 B.EQ 0x2734264
	0x0273423C CBNZ W8, 0x27342B4
	0x02734240 LDR X8, [X20 + 0x20]
	0x02734244 MOV X0, X19
	0x02734248 LDP X20, X19, [X31 + 0x10]
	0x0273424C MOV X1, X21
	0x02734250 LDR X8, [X8 + 0xC0]
	0x02734254 LDR X2, [X8 + 0x18]
	0x02734258 LDR X3, [X2]
	0x0273425C LDP X30, X21, [X31], #0x20
	0x02734260 BR X3
	0x02734264 LDR X8, [X20 + 0x20]
	0x02734268 MOV X0, X19
	0x0273426C MOV X1, X21
	0x02734270 MOV W2, W31
	0x02734274 LDR X8, [X8 + 0xC0]
	0x02734278 LDR X3, [X8 + 0x30]
	0x0273427C LDR X8, [X3]
	0x02734280 BLR X8
	0x02734284 LDR X8, [X20 + 0x20]
	0x02734288 MOVZ W1, 0x1
	0x0273428C LDR X8, [X8 + 0xC0]
	0x02734290 LDR X8, [X8 + 0x10]
	0x02734294 LDR X20, [X8 + 0x80]
	0x02734298 MOV X0, X20
	0x0273429C BL 0x1C16D14
	0x027342A0 MOV X0, X19
	0x027342A4 MOV X1, X20
	0x027342A8 BL 0x1C16D18
	0x027342AC MOVZ W8, 0x2
	0x027342B0 STRB W8, [X0]
	0x027342B4 LDP X20, X19, [X31 + 0x10]
	0x027342B8 LDP X30, X21, [X31], #0x20
	0x027342BC RET
	0x027342C0 SUB X31, X31, 0x50
	0x027342C4 STP X30, X23, [X31 + 0x20]
	0x027342C8 STP X22, X21, [X31 + 0x30]
	0x027342CC STP X20, X19, [X31 + 0x40]
	0x027342D0 ADRP X22, 0x1CA6000
	0x027342D4 LDRB W8, [X22 + 0x694]
	0x027342D8 MOV X20, X2
	0x027342DC MOV X19, X1
	0x027342E0 MOV X21, X0
	0x027342E4 TBNZ X8, 0x0, 0x27342FC
	0x027342E8 ADRP X0, 0x19C8000
	0x027342EC LDR X0, [X0 + 0x958]
	0x027342F0 BL 0x1C16CF4
	0x027342F4 MOVZ W8, 0x1
	0x027342F8 STRB W8, [X22 + 0x694]
	0x027342FC LDR X8, [X20 + 0x20]
	0x02734300 LDR X8, [X8 + 0xC0]
	0x02734304 LDR X0, [X8 + 0x40]
	0x02734308 LDRB W8, [X0 + 0x135]
	0x0273430C TBNZ X8, 0x0, 0x2734314
	0x02734310 BL 0x1C5C684
	0x02734314 LDR W8, [X0 + 0xE0]
	0x02734318 CBNZ W8, 0x2734320
	0x0273431C BL 0x1C16DFC
	0x02734320 LDR X8, [X20 + 0x20]
	0x02734324 LDR X8, [X8 + 0xC0]
	0x02734328 LDR X0, [X8 + 0x40]
	0x0273432C LDRB W8, [X0 + 0x135]
	0x02734330 TBNZ X8, 0x0, 0x2734338
	0x02734334 BL 0x1C5C684
	0x02734338 LDR X8, [X0 + 0xB8]
	0x0273433C LDR X22, [X8 + 0x8]
	0x02734340 CBNZ X22, 0x27343EC
	0x02734344 LDR X8, [X20 + 0x20]
	0x02734348 LDR X8, [X8 + 0xC0]
	0x0273434C LDR X0, [X8 + 0x40]
	0x02734350 LDRB W8, [X0 + 0x135]
	0x02734354 TBNZ X8, 0x0, 0x273435C
	0x02734358 BL 0x1C5C684
	0x0273435C LDR W8, [X0 + 0xE0]
	0x02734360 CBNZ W8, 0x2734368
	0x02734364 BL 0x1C16DFC
	0x02734368 LDR X8, [X20 + 0x20]
	0x0273436C LDR X8, [X8 + 0xC0]
	0x02734370 LDR X0, [X8 + 0x40]
	0x02734374 LDRB W8, [X0 + 0x135]
	0x02734378 TBNZ X8, 0x0, 0x2734380
	0x0273437C BL 0x1C5C684
	0x02734380 ADRP X9, 0x19C8000
	0x02734384 LDR X8, [X0 + 0xB8]
	0x02734388 LDR X9, [X9 + 0x958]
	0x0273438C LDR X23, [X8]
	0x02734390 LDR X0, [X9]
	0x02734394 BL 0x1C16F10
	0x02734398 LDR X8, [X20 + 0x20]
	0x0273439C MOV X1, X23
	0x027343A0 MOV X3, X31
	0x027343A4 MOV X22, X0
	0x027343A8 LDR X8, [X8 + 0xC0]
	0x027343AC LDR X2, [X8 + 0x48]
	0x027343B0 BL 0x33E7508
	0x027343B4 LDR X8, [X20 + 0x20]
	0x027343B8 LDR X8, [X8 + 0xC0]
	0x027343BC LDR X0, [X8 + 0x40]
	0x027343C0 LDRB W9, [X0 + 0x135]
	0x027343C4 TBNZ X9, 0x0, 0x27343D4
	0x027343C8 BL 0x1C5C684
	0x027343CC LDR X8, [X20 + 0x20]
	0x027343D0 LDR X8, [X8 + 0xC0]
	0x027343D4 LDR X9, [X0 + 0xB8]
	0x027343D8 STR X22, [X9 + 0x8]
	0x027343DC LDR X0, [X8 + 0x40]
	0x027343E0 LDRB W8, [X0 + 0x135]
	0x027343E4 TBNZ X8, 0x0, 0x27343EC
	0x027343E8 BL 0x1C5C684
	0x027343EC LDR X8, [X20 + 0x20]
	0x027343F0 ADD X3, X31, 0x8
	0x027343F4 ADD X4, X31, 0x18
	0x027343F8 MOV X2, X31
	0x027343FC LDR X8, [X8 + 0xC0]
	0x02734400 LDR X1, [X8 + 0x50]
	0x02734404 LDR X0, [X1]
	0x02734408 STP X21, X19, [X31 + 0x8]
	0x0273440C LDR X8, [X1 + 0x10]
	0x02734410 BLR X8
	0x02734414 LDR X1, [X31 + 0x18]
	0x02734418 MOV X0, X22
	0x0273441C MOV X2, X31
	0x02734420 BL 0x33E9B5C
	0x02734424 LDP X20, X19, [X31 + 0x40]
	0x02734428 LDP X22, X21, [X31 + 0x30]
	0x0273442C LDP X30, X23, [X31 + 0x20]
	0x02734430 ADD X31, X31, 0x50
	0x02734434 RET
	0x02734438 SUB X31, X31, 0x40
	0x0273443C STP X30, X23, [X31 + 0x10]
	0x02734440 STP X22, X21, [X31 + 0x20]
	0x02734444 STP X20, X19, [X31 + 0x30]
	0x02734448 ADRP X22, 0x1CA6000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1CA7000
	009 Move X23, 0x19E8000
	010 Move W8, [X24+1676]
	011 Move X23, [X23+1832]
	012 Move X20, X3
	013 Move W22, W2
	014 Move X21, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x19E8000
	021 Move X0, [X0+1832]
	022 Call 0x1C17CF4
	023 Move X0, 0x19C8000
	024 Move X0, [X0+2216]
	025 Call 0x1C17CF4
	026 Move X0, 0x19EA000
	027 Move X0, [X0+2720]
	028 Call 0x1C17CF4
	029 Move X0, 0x19EA000
	030 Move X0, [X0+2728]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X24+1676], W8
	034 Move X0, [X23]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X31
	040 Call DebuggerSupport.get_LoggingOn
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {55}
	045 Move X0, [X23]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move W0, 1
	051 Move W2, 1
	052 Move X1, X19
	053 Move X3, X31
	054 Call DebuggerSupport.TraceOperationRelation, X0, X1, X2
	055 Compare X21, 0
	056 JumpIfEqual {254}
	057 Move X0, X21
	058 Move X1, X31
	059 Call Task.get_Status, X0
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, X21
	064 Move X1, X31
	065 Call Task.get_CancellationToken, X0
	066 Move X20, X0
	067 Move X0, X21
	068 Move X1, X31
	069 Call Task.GetCancellationExceptionDispatchInfo, X0
	070 Compare X19, 0
	071 JumpIfEqual {254}
	072 Move X2, X0
	073 Move X0, X19
	074 Move X1, X20
	075 Move X20, [X31+48]
	076 Move X19, [X31+56]
	077 Move X22, [X31+32]
	078 Move X21, [X31+40]
	079 Move X24, [X31+16]
	080 Move X23, [X31+24]
	081 Move X3, X31
	082 Move X30, [X31+64]
	083 Call Task.TrySetCanceled, X0, X1, X2
	084 Return X0
	085 Move X8, [X20+32]
	086 Move X8, [X8+192]
	087 Move X0, [X8+112]
	088 Move W8, [X0+309]
	089 Move TEMP, X8
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {94}
	093 Call 0x1C5D684
	094 Move X8, [X21]
	095 Move W9, [X0+304]
	096 Move W10, [X8+304]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X21, X31
	099 Move X0, X21
	100 Move X1, X31
	101 Call Task.GetExceptionDispatchInfos, X0
	102 Move X20, X0
	103 Move TEMP, X22
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {138}
	107 Compare X20, 0
	108 JumpIfEqual {254}
	109 Move X8, 0x19EA000
	110 Move X8, [X8+2720]
	111 Move X0, X20
	112 Move X1, [X8]
	113 Call ReadOnlyCollection`1<Object>.get_Count, X0
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X8, 0x19EA000
	116 Move X8, [X8+2728]
	117 Move X0, X20
	118 Move W1, W31
	119 Move X2, [X8]
	120 Call ReadOnlyCollection`1<Object>.get_Item, X0, X1
	121 Compare X0, 0
	122 JumpIfEqual {138}
	123 Move X8, [X0+16]
	124 Move X2, X0
	125 Compare X8, 0
	126 JumpIfEqual {138}
	127 Move X9, 0x19C8000
	128 Move X9, [X9+2216]
	129 Move X10, [X8]
	130 Move X9, [X9]
	131 Move W12, [X10+304]
	132 Move W11, [X9+304]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X10, [X10+200]
	135 Add X10, X10, X11
	136 NotImplemented "Instruction LDUR not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Compare X19, 0
	139 JumpIfEqual {254}
	140 Move X0, X19
	141 Move X1, X20
	142 Move X20, [X31+48]
	143 Move X19, [X31+56]
	144 Move X22, [X31+32]
	145 Move X21, [X31+40]
	146 Move X24, [X31+16]
	147 Move X23, [X31+24]
	148 Move X2, X31
	149 Move X30, [X31+64]
	150 Call Task.TrySetException, X0, X1
	151 Return X0
	152 Move X20, [X31+48]
	153 Move X19, [X31+56]
	154 Move X22, [X31+32]
	155 Move X21, [X31+40]
	156 Move X24, [X31+16]
	157 Move X23, [X31+24]
	158 Move W0, W31
	159 Move X30, [X31+64]
	160 Return X0
	161 Move X8, [X8+200]
	162 Add X8, X8, X9
	163 NotImplemented "Instruction LDUR not yet implemented."
	164 NotImplemented "Instruction CMP not yet implemented."
	165 NotImplemented "Instruction CSEL not yet implemented."
	166 Move X0, [X23]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {171}
	170 Call 0x1C17DFC
	171 Move X0, X31
	172 Call DebuggerSupport.get_LoggingOn
	173 Move TEMP, X0
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfNotEqual {187}
	177 Move X0, [X23]
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1C17DFC
	182 Move W2, 1
	183 Move W0, W31
	184 Move X1, X19
	185 Move X3, X31
	186 Call DebuggerSupport.TraceOperationCompletion, X0, X1, X2
	187 Move X0, [X23]
	188 Move W8, [X0+224]
	189 Compare W8, 0
	190 JumpIfNotEqual {192}
	191 Call 0x1C17DFC
	192 Move X22, 0x1CA6000
	193 Move W8, [X22+2089]
	194 Compare W8, 0
	195 JumpIfNotEqual {204}
	196 Move X0, 0x19E8000
	197 Move X0, [X0+1832]
	198 Call 0x1C17CF4
	199 Move X0, 0x19C1000
	200 Move X0, [X0+1976]
	201 Call 0x1C17CF4
	202 Move W8, 1
	203 Move [X22+2089], W8
	204 Move X22, 0x19C1000
	205 Move X22, [X22+1976]
	206 Move X0, [X22]
	207 Move W8, [X0+224]
	208 Compare W8, 0
	209 JumpIfNotEqual {212}
	210 Call 0x1C17DFC
	211 Move X0, [X22]
	212 Move X8, [X0+184]
	213 Move W8, [X8+16]
	214 Compare W8, 0
	215 JumpIfEqual {224}
	216 Move X0, [X23]
	217 Move W8, [X0+224]
	218 Compare W8, 0
	219 JumpIfNotEqual {221}
	220 Call 0x1C17DFC
	221 Move X0, X19
	222 Move X1, X31
	223 Call DebuggerSupport.RemoveFromActiveTasksNonInlined, X0
	224 Compare X21, 0
	225 JumpIfEqual {234}
	226 Move X8, [X20+32]
	227 Move X0, X21
	228 Move X8, [X8+192]
	229 Move X1, [X8+136]
	230 Call Task`1<Object>.get_Result, X0
	231 Move X1, X0
	232 Compare X19, 0
	233 JumpIfNotEqual {237}
	234 Move X1, X31
	235 Compare X19, 0
	236 JumpIfEqual {254}
	237 Move X8, [X20+32]
	238 Move X0, X19
	239 Move X20, [X31+48]
	240 Move X19, [X31+56]
	241 Move X22, [X31+32]
	242 Move X21, [X31+40]
	243 Move X8, [X8+192]
	244 Move X24, [X31+16]
	245 Move X23, [X31+24]
	246 Move X2, [X8+144]
	247 Move X30, [X31+64]
	248 Call Task`1<Object>.TrySetResult, X0, X1
	249 Return X0
	250 Compare X19, 0
	251 JumpIfEqual {254}
	252 Move X1, [X8+144]
	253 Move X0, X19
	254 Call 0x1C17F20

Method: System.Void ProcessInnerTask(System.Threading.Tasks.Task task)

Disassembly:
	0x0273444C LDRB W8, [X22 + 0x695]
	0x02734450 MOV X20, X2
	0x02734454 MOV X21, X1
	0x02734458 MOV X19, X0
	0x0273445C TBNZ X8, 0x0, 0x2734480
	0x02734460 ADRP X0, 0x19E9000
	0x02734464 LDR X0, [X0 + 0xA90]
	0x02734468 BL 0x1C16CF4
	0x0273446C ADRP X0, 0x19E9000
	0x02734470 LDR X0, [X0 + 0xA98]
	0x02734474 BL 0x1C16CF4
	0x02734478 MOVZ W8, 0x1
	0x0273447C STRB W8, [X22 + 0x695]
	0x02734480 LDR X8, [X20 + 0x20]
	0x02734484 MOVZ W1, 0x1
	0x02734488 MOVZ W23, 0x1
	0x0273448C LDR X8, [X8 + 0xC0]
	0x02734490 LDR X8, [X8 + 0x10]
	0x02734494 LDR X22, [X8 + 0x80]
	0x02734498 MOV X0, X22
	0x0273449C BL 0x1C16D14
	0x027344A0 MOV X0, X19
	0x027344A4 MOV X1, X22
	0x027344A8 BL 0x1C16D18
	0x027344AC STRB W23, [X0]
	0x027344B0 CBZ X21, 0x2734604
	0x027344B4 MOV X0, X21
	0x027344B8 MOV X1, X31
	0x027344BC BL 0x33F0678
	0x027344C0 CMP W0, 0x5
	0x027344C4 B.NE 0x273456C
	0x027344C8 LDR X8, [X20 + 0x20]
	0x027344CC LDR X8, [X8 + 0xC0]
	0x027344D0 LDR X0, [X8 + 0x60]
	0x027344D4 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Compare X1, 0
	007 JumpIfEqual {24}
	008 Move X20, X1
	009 Move X0, X1
	010 Move X1, X31
	011 Move X21, X2
	012 Call Task.get_IsCompleted, X0
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {37}
	017 Move X8, [X21+32]
	018 Move X0, X19
	019 Move X1, X20
	020 Move W2, W31
	021 Move X8, [X8+192]
	022 Move X3, [X8+48]
	023 Call 0x27340FC, X0, X1, X2
	024 Compare X19, 0
	025 JumpIfEqual {46}
	026 Move X0, X19
	027 Move X1, X31
	028 Move X2, X31
	029 Call Task.TrySetCanceled, X0, X1
	030 Move W8, 2
	031 Move [X19+88], W8
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 
	037 Move X0, X20
	038 Move X1, X19
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X2, X31
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Call Task.AddCompletionAction, X0, X1
	045 Return 
	046 Call 0x1C17F20

Method: System.Boolean get_InvokeMayRunArbitraryCode()

Disassembly:
	0x027344D8 TBNZ X8, 0x0, 0x27344E0
	0x027344DC BL 0x1C5C684

ISIL:
	001 Move W0, 1
	002 Return X0

