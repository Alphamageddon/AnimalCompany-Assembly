Type: System.Threading.Tasks.TaskCompletionSource`1

Method: System.Void .ctor()

Disassembly:
	0x0267AB4C LDR X8, [X8 + 0xC0]
	0x0267AB50 LDR X2, [X8 + 0x40]
	0x0267AB54 BL 0x269D03C
	0x0267AB58 MOV W20, W0
	0x0267AB5C TBNZ X0, 0x0, 0x267AB68
	0x0267AB60 MOV X0, X19
	0x0267AB64 BL 0x267A9EC
	0x0267AB68 AND W0, W20, 0x1
	0x0267AB6C LDP X20, X19, [X31 + 0x10]
	0x0267AB70 LDR X30, [X31], #0x20
	0x0267AB74 RET
	0x0267AB78 BL 0x1C16F20
	0x0267AB7C STR X30, [X31 - 0x10]!
	0x0267AB80 LDR X8, [X2 + 0x20]
	0x0267AB84 LDR X8, [X8 + 0xC0]
	0x0267AB88 LDR X2, [X8 + 0x48]
	0x0267AB8C BL 0x267AB34
	0x0267AB90 TBZ X0, 0x0, 0x267AB9C
	0x0267AB94 LDR X30, [X31], #0x10
	0x0267AB98 RET
	0x0267AB9C MOVZ W0, 0x2E
	0x0267ABA0 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Move X8, [X20+32]
	009 Move X8, [X8+192]
	010 Move X0, [X8]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Call 0x1C17F10
	018 Move X8, [X20+32]
	019 Move X20, X0
	020 Move X8, [X8+192]
	021 Move X1, [X8+8]
	022 Call Task`1<AffordanceStateData>..ctor, X0
	023 Move [X19+16], X20
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return 

Method: System.Void .ctor(System.Threading.Tasks.TaskCreationOptions creationOptions)

Disassembly:
	0x0267ABA4 LDR X30, [X31], #0x10
	0x0267ABA8 B 0x339DFAC
	0x0267ABAC LDR X8, [X1 + 0x20]
	0x0267ABB0 MOV X1, X31
	0x0267ABB4 LDR X8, [X8 + 0xC0]
	0x0267ABB8 LDR X2, [X8 + 0x50]
	0x0267ABBC B 0x267ABC0

ISIL:
	001 Move X9, [X2+32]
	002 Move W8, W1
	003 Move X1, X31
	004 Move W2, W8
	005 Move X9, [X9+192]
	006 Move X3, [X9+24]
	007 Call 0x267ABD4, X0, X1, X2
	008 Return 

Method: System.Void .ctor(System.Object state)

Disassembly:
	0x0267ABC0 STP X30, X19, [X31 - 0x10]!
	0x0267ABC4 MOV X19, X0
	0x0267ABC8 LDR X0, [X0 + 0x10]
	0x0267ABCC CBZ X0, 0x267AC0C
	0x0267ABD0 MOV X2, X31

ISIL:
	001 Move X8, [X2+32]
	002 Move W2, W31
	003 Move X8, [X8+192]
	004 Move X3, [X8+24]

Method: System.Void .ctor(System.Object state, System.Threading.Tasks.TaskCreationOptions creationOptions)

Disassembly:
	0x0267ABD4 BL 0x33EE464
	0x0267ABD8 TBZ X0, 0x0, 0x267ABE4
	0x0267ABDC MOVZ W0, 0x1
	0x0267ABE0 B 0x267AC04
	0x0267ABE4 LDR X0, [X19 + 0x10]
	0x0267ABE8 CBZ X0, 0x267AC0C
	0x0267ABEC MOV X1, X31
	0x0267ABF0 BL 0x33ED11C
	0x0267ABF4 TBNZ X0, 0x0, 0x267AC00
	0x0267ABF8 MOV X0, X19
	0x0267ABFC BL 0x267A9EC
	0x0267AC00 MOV W0, W31
	0x0267AC04 LDP X30, X19, [X31], #0x10
	0x0267AC08 RET
	0x0267AC0C BL 0x1C16F20
	0x0267AC10 STR X30, [X31 - 0x10]!
	0x0267AC14 LDR X8, [X1 + 0x20]
	0x0267AC18 MOV X1, X31
	0x0267AC1C LDR X8, [X8 + 0xC0]
	0x0267AC20 LDR X8, [X8 + 0x58]
	0x0267AC24 LDR X8, [X8 + 0x20]
	0x0267AC28 LDR X8, [X8 + 0xC0]
	0x0267AC2C LDR X2, [X8 + 0x50]
	0x0267AC30 BL 0x267ABC0
	0x0267AC34 TBZ X0, 0x0, 0x267AC40
	0x0267AC38 LDR X30, [X31], #0x10
	0x0267AC3C RET
	0x0267AC40 MOVZ W0, 0x2E

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X1
	007 Move X1, X31
	008 Move X22, X3
	009 Move W20, W2
	010 Move X19, X0
	011 Call Object..ctor, X0
	012 Move X8, [X22+32]
	013 Move X8, [X8+192]
	014 Move X0, [X8]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Call 0x1C17F10
	022 Move X8, [X22+32]
	023 Move X1, X21
	024 Move W2, W20
	025 Move X22, X0
	026 Move X8, [X8+192]
	027 Move X3, [X8+32]
	028 Call Task`1<AffordanceStateData>..ctor, X0, X1, X2
	029 Move [X19+16], X22
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Return 

Method: System.Threading.Tasks.Task`1<TResult> get_Task()

Disassembly:
	0x0267AC44 MOV X1, X31
	0x0267AC48 LDR X30, [X31], #0x10

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void SpinUntilCompleted()

Disassembly:
	0x0267AC4C B 0x339DFAC
	0x0267AC50 STR X30, [X31 - 0x20]!
	0x0267AC54 STP X20, X19, [X31 + 0x10]
	0x0267AC58 MOV X20, X1
	0x0267AC5C MOV X1, X31
	0x0267AC60 MOV X19, X0
	0x0267AC64 BL 0x33BDD8C
	0x0267AC68 LDR X8, [X20 + 0x20]
	0x0267AC6C LDR X8, [X8 + 0xC0]
	0x0267AC70 LDR X0, [X8]
	0x0267AC74 LDRB W8, [X0 + 0x135]
	0x0267AC78 TBNZ X8, 0x0, 0x267AC80
	0x0267AC7C BL 0x1C5C684
	0x0267AC80 BL 0x1C16F10
	0x0267AC84 LDR X8, [X20 + 0x20]
	0x0267AC88 MOV X20, X0
	0x0267AC8C LDR X8, [X8 + 0xC0]
	0x0267AC90 LDR X1, [X8 + 0x8]
	0x0267AC94 BL 0x269D564
	0x0267AC98 STR X20, [X19 + 0x10]
	0x0267AC9C LDP X20, X19, [X31 + 0x10]
	0x0267ACA0 LDR X30, [X31], #0x20
	0x0267ACA4 RET
	0x0267ACA8 LDR X9, [X2 + 0x20]
	0x0267ACAC MOV W8, W1
	0x0267ACB0 MOV X1, X31
	0x0267ACB4 MOV W2, W8
	0x0267ACB8 LDR X9, [X9 + 0xC0]
	0x0267ACBC LDR X3, [X9 + 0x18]
	0x0267ACC0 B 0x267ACD8
	0x0267ACC4 LDR X8, [X2 + 0x20]
	0x0267ACC8 MOV W2, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1D61000
	005 Move W8, [X20+539]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1A86000
	012 Move X0, [X0+1136]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+539], W8
	016 Move [X31+8], W31
	017 Move X0, [X19+16]
	018 Compare X0, 0
	019 JumpIfEqual {39}
	020 Move X20, 0x1A86000
	021 Move X20, [X20+1136]
	022 Move X1, X31
	023 Call Task.get_IsCompleted, X0
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {40}
	028 Move X0, [X20]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Add X0, X31, 8
	034 Move X1, X31
	035 Call SpinWait.SpinOnce, X0
	036 Move X0, [X19+16]
	037 Compare X0, 0
	038 JumpIfNotEqual {22}
	039 Call 0x1C17F20
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Return 

Method: System.Boolean TrySetException(System.Exception exception)

Disassembly:
	0x0267ACCC LDR X8, [X8 + 0xC0]
	0x0267ACD0 LDR X3, [X8 + 0x18]
	0x0267ACD4 B 0x267ACD8
	0x0267ACD8 STR X30, [X31 - 0x30]!
	0x0267ACDC STP X22, X21, [X31 + 0x10]
	0x0267ACE0 STP X20, X19, [X31 + 0x20]
	0x0267ACE4 MOV X21, X1
	0x0267ACE8 MOV X1, X31
	0x0267ACEC MOV X22, X3
	0x0267ACF0 MOV W20, W2
	0x0267ACF4 MOV X19, X0
	0x0267ACF8 BL 0x33BDD8C
	0x0267ACFC LDR X8, [X22 + 0x20]
	0x0267AD00 LDR X8, [X8 + 0xC0]
	0x0267AD04 LDR X0, [X8]
	0x0267AD08 LDRB W8, [X0 + 0x135]
	0x0267AD0C TBNZ X8, 0x0, 0x267AD14
	0x0267AD10 BL 0x1C5C684
	0x0267AD14 BL 0x1C16F10
	0x0267AD18 LDR X8, [X22 + 0x20]
	0x0267AD1C MOV X1, X21
	0x0267AD20 MOV W2, W20
	0x0267AD24 MOV X22, X0
	0x0267AD28 LDR X8, [X8 + 0xC0]
	0x0267AD2C LDR X3, [X8 + 0x20]
	0x0267AD30 BL 0x269D5BC
	0x0267AD34 STR X22, [X19 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X19, X0
	006 Compare X1, 0
	007 JumpIfNotEqual {10}
	008 Move W0, 32
	009 Call ThrowHelper.ThrowArgumentNullException, X0
	010 Move X0, [X19+16]
	011 Compare X0, 0
	012 JumpIfEqual {37}
	013 Move X1, X20
	014 Move X2, X31
	015 Call Task.TrySetException, X0, X1
	016 Move TEMP, X0
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfNotEqual {21}
	020 Move W0, 1
	021 Move X0, [X19+16]
	022 Compare X0, 0
	023 JumpIfEqual {37}
	024 Move X1, X31
	025 Call Task.get_IsCompleted, X0
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {32}
	030 Move X0, X19
	031 Call 0x267AC4C, X0
	032 Move W0, W31
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0
	037 Call 0x1C17F20

Method: System.Void SetException(System.Exception exception)

Disassembly:
	0x0267AD38 LDP X20, X19, [X31 + 0x20]
	0x0267AD3C LDP X22, X21, [X31 + 0x10]
	0x0267AD40 LDR X30, [X31], #0x30
	0x0267AD44 RET
	0x0267AD48 LDR X0, [X0 + 0x10]
	0x0267AD4C RET
	0x0267AD50 STR X30, [X31 - 0x20]!
	0x0267AD54 STP X20, X19, [X31 + 0x10]
	0x0267AD58 ADRP X20, 0x1D60000
	0x0267AD5C LDRB W8, [X20 + 0x220]
	0x0267AD60 MOV X19, X0
	0x0267AD64 TBNZ X8, 0x0, 0x267AD7C
	0x0267AD68 ADRP X0, 0x1A85000
	0x0267AD6C LDR X0, [X0 + 0x470]
	0x0267AD70 BL 0x1C16CF4
	0x0267AD74 MOVZ W8, 0x1
	0x0267AD78 STRB W8, [X20 + 0x220]
	0x0267AD7C STR W31, [X31 + 0x8]
	0x0267AD80 LDR X0, [X19 + 0x10]
	0x0267AD84 CBZ X0, 0x267ADC0
	0x0267AD88 ADRP X20, 0x1A85000
	0x0267AD8C LDR X20, [X20 + 0x470]
	0x0267AD90 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, X2
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X1, 0
	009 JumpIfNotEqual {12}
	010 Move W0, 32
	011 Call ThrowHelper.ThrowArgumentNullException, X0
	012 Move X8, [X21+32]
	013 Move X0, X20
	014 Move X1, X19
	015 Move X8, [X8+192]
	016 Move X2, [X8+48]
	017 Call 0x267ACCC, X0, X1
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {27}
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move W0, 46
	030 Move X1, X31
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call ThrowHelper.ThrowInvalidOperationException, X0
	034 Return 

Method: System.Boolean TrySetResult(TResult result)

Disassembly:
	0x0267AD94 BL 0x33ED11C
	0x0267AD98 TBNZ X0, 0x0, 0x267ADC4
	0x0267AD9C LDR X0, [X20]
	0x0267ADA0 LDR W8, [X0 + 0xE0]
	0x0267ADA4 CBNZ W8, 0x267ADAC
	0x0267ADA8 BL 0x1C16DFC
	0x0267ADAC ADD X0, X31, 0x8
	0x0267ADB0 MOV X1, X31
	0x0267ADB4 BL 0x33DF18C
	0x0267ADB8 LDR X0, [X19 + 0x10]
	0x0267ADBC CBNZ X0, 0x267AD90
	0x0267ADC0 BL 0x1C16F20
	0x0267ADC4 LDP X20, X19, [X31 + 0x10]
	0x0267ADC8 LDR X30, [X31], #0x20
	0x0267ADCC RET
	0x0267ADD0 STR X30, [X31 - 0x20]!
	0x0267ADD4 STP X20, X19, [X31 + 0x10]
	0x0267ADD8 MOV X20, X1
	0x0267ADDC MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+16]
	006 Compare X0, 0
	007 JumpIfEqual {25}
	008 Move X8, [X2+32]
	009 And X1, X1, 0xFFFF
	010 Move X8, [X8+192]
	011 Move X2, [X8+64]
	012 Call Task`1<AffordanceStateData>.TrySetResult, X0, X1
	013 Move W20, W0
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {20}
	018 Move X0, X19
	019 Call 0x267AC4C, X0
	020 And W0, W20, 1
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return X0
	025 Call 0x1C17F20

Method: System.Void SetResult(TResult result)

Disassembly:
	0x0267ADE0 CBNZ X1, 0x267ADEC
	0x0267ADE4 MOVZ W0, 0x20
	0x0267ADE8 BL 0x338F3E0
	0x0267ADEC LDR X0, [X19 + 0x10]
	0x0267ADF0 CBZ X0, 0x267AE38
	0x0267ADF4 MOV X1, X20
	0x0267ADF8 MOV X2, X31
	0x0267ADFC BL 0x33EE46C
	0x0267AE00 TBZ X0, 0x0, 0x267AE0C
	0x0267AE04 MOVZ W0, 0x1
	0x0267AE08 B 0x267AE2C
	0x0267AE0C LDR X0, [X19 + 0x10]
	0x0267AE10 CBZ X0, 0x267AE38

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X2+32]
	003 And X1, X1, 0xFFFF
	004 Move X8, [X8+192]
	005 Move X2, [X8+72]
	006 Call 0x267AD94, X0, X1
	007 Move TEMP, X0
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {13}
	011 Move X30, [X31+16]
	012 Return 
	013 Move W0, 46
	014 Move X1, X31
	015 Move X30, [X31+16]
	016 Call ThrowHelper.ThrowInvalidOperationException, X0
	017 Return 

Method: System.Boolean TrySetCanceled()

Disassembly:
	0x0267AE14 MOV X1, X31
	0x0267AE18 BL 0x33ED11C
	0x0267AE1C TBNZ X0, 0x0, 0x267AE28
	0x0267AE20 MOV X0, X19
	0x0267AE24 BL 0x267AD50

ISIL:
	001 Move X8, [X1+32]
	002 Move X1, X31
	003 Move X8, [X8+192]
	004 Move X2, [X8+80]

Method: System.Boolean TrySetCanceled(System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x0267AE28 MOV W0, W31
	0x0267AE2C LDP X20, X19, [X31 + 0x10]
	0x0267AE30 LDR X30, [X31], #0x20
	0x0267AE34 RET
	0x0267AE38 BL 0x1C16F20
	0x0267AE3C STP X30, X21, [X31 - 0x20]!
	0x0267AE40 STP X20, X19, [X31 + 0x10]
	0x0267AE44 MOV X21, X2
	0x0267AE48 MOV X19, X1
	0x0267AE4C MOV X20, X0
	0x0267AE50 CBNZ X1, 0x267AE5C
	0x0267AE54 MOVZ W0, 0x20
	0x0267AE58 BL 0x338F3E0
	0x0267AE5C LDR X8, [X21 + 0x20]
	0x0267AE60 MOV X0, X20
	0x0267AE64 MOV X1, X19
	0x0267AE68 LDR X8, [X8 + 0xC0]
	0x0267AE6C LDR X2, [X8 + 0x30]
	0x0267AE70 BL 0x267ADD0
	0x0267AE74 TBZ X0, 0x0, 0x267AE84

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+16]
	005 Compare X0, 0
	006 JumpIfEqual {29}
	007 Move X2, X31
	008 Call Task.TrySetCanceled, X0, X1
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {14}
	013 Move W0, 1
	014 Move X0, [X19+16]
	015 Compare X0, 0
	016 JumpIfEqual {29}
	017 Move X1, X31
	018 Call Task.get_IsCompleted, X0
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {25}
	023 Move X0, X19
	024 Call 0x267AC4C, X0
	025 Move W0, W31
	026 Move X30, [X31+16]
	027 Move X19, [X31+24]
	028 Return X0
	029 Call 0x1C17F20

Method: System.Void SetCanceled()

Disassembly:
	0x0267AE78 LDP X20, X19, [X31 + 0x10]
	0x0267AE7C LDP X30, X21, [X31], #0x20
	0x0267AE80 RET
	0x0267AE84 LDP X20, X19, [X31 + 0x10]
	0x0267AE88 MOVZ W0, 0x2E
	0x0267AE8C MOV X1, X31
	0x0267AE90 LDP X30, X21, [X31], #0x20
	0x0267AE94 B 0x339DFAC
	0x0267AE98 STR X30, [X31 - 0x20]!
	0x0267AE9C STP X20, X19, [X31 + 0x10]
	0x0267AEA0 MOV X19, X0
	0x0267AEA4 LDR X0, [X0 + 0x10]
	0x0267AEA8 CBZ X0, 0x267AEDC
	0x0267AEAC LDR X8, [X2 + 0x20]
	0x0267AEB0 LDR X8, [X8 + 0xC0]
	0x0267AEB4 LDR X2, [X8 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X1+32]
	003 Move X1, X31
	004 Move X8, [X8+192]
	005 Move X8, [X8+88]
	006 Move X8, [X8+32]
	007 Move X8, [X8+192]
	008 Move X2, [X8+80]
	009 Call 0x267AE28, X0, X1
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {16}
	014 Move X30, [X31+16]
	015 Return 
	016 Move W0, 46
	017 Move X1, X31
	018 Move X30, [X31+16]
	019 Call ThrowHelper.ThrowInvalidOperationException, X0
	020 Return 

