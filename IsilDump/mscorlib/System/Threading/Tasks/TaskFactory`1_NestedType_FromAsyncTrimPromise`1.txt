Type: System.Threading.Tasks.TaskFactory`1/FromAsyncTrimPromise`1

Method: System.Void .ctor(TInstance thisRef, System.Func`3<TInstance, System.IAsyncResult, TResult> endMethod)

Disassembly:
	0x02D26AD8 STR X20, [X8]
	0x02D26ADC LDR X0, [X19 + 0x20]
	0x02D26AE0 LDRB W8, [X0 + 0x135]
	0x02D26AE4 TBNZ X8, 0x0, 0x2D26AEC
	0x02D26AE8 BL 0x1C5C684
	0x02D26AEC LDR X8, [X0 + 0xC0]
	0x02D26AF0 LDR X0, [X8 + 0x58]
	0x02D26AF4 LDRB W8, [X0 + 0x135]
	0x02D26AF8 TBNZ X8, 0x0, 0x2D26B08
	0x02D26AFC LDP X20, X19, [X31 + 0x10]
	0x02D26B00 LDP X30, X21, [X31], #0x20
	0x02D26B04 B 0x1C5C684
	0x02D26B08 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X3+32]
	006 Move X20, X1
	007 Move X19, X2
	008 Move X21, X0
	009 Move X8, [X8+192]
	010 Move X1, [X8]
	011 Call Task`1<Int32>..ctor, X0
	012 Move [X21+88], X20
	013 Move [X21+96], X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Move X21, [X31+40]
	018 Return 

Method: System.Void CompleteFromAsyncResult(System.IAsyncResult asyncResult)

Disassembly:
	0x02D26B0C LDP X30, X21, [X31], #0x20
	0x02D26B10 RET
	0x02D26B14 STP X30, X21, [X31 - 0x20]!
	0x02D26B18 STP X20, X19, [X31 + 0x10]
	0x02D26B1C LDR X8, [X2 + 0x8]
	0x02D26B20 STP X1, X2, [X0 + 0x20]
	0x02D26B24 MOV X19, X0
	0x02D26B28 MOV X20, X1
	0x02D26B2C STR X8, [X0 + 0x10]
	0x02D26B30 LDRB W21, [X2 + 0x52]
	0x02D26B34 STR X0, [X0 + 0x40]
	0x02D26B38 MOV X0, X2
	0x02D26B3C BL 0x1C16D84
	0x02D26B40 TBZ X0, 0x0, 0x2D26B58
	0x02D26B44 CBNZ W21, 0x2D26B5C
	0x02D26B48 ADRP X8, 0xFFFFFFFFFECD8000
	0x02D26B4C ADD X8, X8, 0xBD4
	0x02D26B50 STR X8, [X19 + 0x18]
	0x02D26B54 B 0x2D26B6C
	0x02D26B58 CBZ X20, 0x2D26B84
	0x02D26B5C LDR X8, [X19 + 0x10]
	0x02D26B60 LDR X9, [X19 + 0x20]
	0x02D26B64 STR X8, [X19 + 0x18]
	0x02D26B68 STR X9, [X19 + 0x40]
	0x02D26B6C ADRP X8, 0xFFFFFFFFFECD8000
	0x02D26B70 ADD X8, X8, 0xB84
	0x02D26B74 STR X8, [X19 + 0x38]
	0x02D26B78 LDP X20, X19, [X31 + 0x10]
	0x02D26B7C LDP X30, X21, [X31], #0x20
	0x02D26B80 RET
	0x02D26B84 ADRP X1, 0xFFFFFFFFFDDF5000
	0x02D26B88 ADD X1, X1, 0xEE3
	0x02D26B8C MOV X0, X31
	0x02D26B90 BL 0x1C16F3C
	0x02D26B94 MOV X1, X31
	0x02D26B98 BL 0x1C16DEC
	0x02D26B9C STR X30, [X31 - 0x10]!
	0x02D26BA0 LDR X8, [X0 + 0x40]
	0x02D26BA4 LDR X9, [X0 + 0x18]
	0x02D26BA8 LDR X1, [X0 + 0x28]
	0x02D26BAC MOV X0, X8
	0x02D26BB0 BLR X9
	0x02D26BB4 AND X1, X1, 0x0
	0x02D26BB8 LDR X30, [X31], #0x10
	0x02D26BBC RET
	0x02D26BC0 STR X30, [X31 - 0x10]!
	0x02D26BC4 MOV X3, X2
	0x02D26BC8 MOV X2, X1
	0x02D26BCC ADD X1, X31, 0x8
	0x02D26BD0 STR X31, [X31 + 0x8]
	0x02D26BD4 BL 0x1C16CB0
	0x02D26BD8 LDR X30, [X31], #0x10
	0x02D26BDC RET
	0x02D26BE0 STR X30, [X31 - 0x10]!
	0x02D26BE4 MOV X0, X1
	0x02D26BE8 MOV X1, X31
	0x02D26BEC BL 0x1C16CB4
	0x02D26BF0 CBZ X0, 0x2D26C0C
	0x02D26BF4 BL 0x1C16E08
	0x02D26BF8 LDR X8, [X0]
	0x02D26BFC LDR W1, [X0 + 0x8]
	0x02D26C00 MOV X0, X8
	0x02D26C04 LDR X30, [X31], #0x10
	0x02D26C08 RET
	0x02D26C0C BL 0x1C16F20
	0x02D26C10 STP X30, X21, [X31 - 0x20]!
	0x02D26C14 STP X20, X19, [X31 + 0x10]
	0x02D26C18 LDR X8, [X2 + 0x8]
	0x02D26C1C STP X1, X2, [X0 + 0x20]
	0x02D26C20 MOV X19, X0
	0x02D26C24 MOV X20, X1
	0x02D26C28 STR X8, [X0 + 0x10]
	0x02D26C2C LDRB W21, [X2 + 0x52]
	0x02D26C30 STR X0, [X0 + 0x40]
	0x02D26C34 MOV X0, X2
	0x02D26C38 BL 0x1C16D84
	0x02D26C3C TBZ X0, 0x0, 0x2D26C54
	0x02D26C40 CBNZ W21, 0x2D26C58
	0x02D26C44 ADRP X8, 0xFFFFFFFFFECD8000
	0x02D26C48 ADD X8, X8, 0xC38
	0x02D26C4C STR X8, [X19 + 0x18]
	0x02D26C50 B 0x2D26C68
	0x02D26C54 CBZ X20, 0x2D26C80
	0x02D26C58 LDR X8, [X19 + 0x10]
	0x02D26C5C LDR X9, [X19 + 0x20]
	0x02D26C60 STR X8, [X19 + 0x18]
	0x02D26C64 STR X9, [X19 + 0x40]
	0x02D26C68 ADRP X8, 0xFFFFFFFFFECD8000
	0x02D26C6C ADD X8, X8, 0xBF0
	0x02D26C70 STR X8, [X19 + 0x38]
	0x02D26C74 LDP X20, X19, [X31 + 0x10]
	0x02D26C78 LDP X30, X21, [X31], #0x20
	0x02D26C7C RET
	0x02D26C80 ADRP X1, 0xFFFFFFFFFDDF5000
	0x02D26C84 ADD X1, X1, 0xEE3
	0x02D26C88 MOV X0, X31
	0x02D26C8C BL 0x1C16F3C
	0x02D26C90 MOV X1, X31
	0x02D26C94 BL 0x1C16DEC
	0x02D26C98 LDR X8, [X0 + 0x40]
	0x02D26C9C LDR X2, [X0 + 0x18]
	0x02D26CA0 LDR X1, [X0 + 0x28]
	0x02D26CA4 MOV X0, X8
	0x02D26CA8 BR X2
	0x02D26CAC STR X30, [X31 - 0x10]!
	0x02D26CB0 MOV X3, X2
	0x02D26CB4 MOV X2, X1
	0x02D26CB8 ADD X1, X31, 0x8
	0x02D26CBC STR X31, [X31 + 0x8]
	0x02D26CC0 BL 0x1C16CB0
	0x02D26CC4 LDR X30, [X31], #0x10
	0x02D26CC8 RET
	0x02D26CCC STR X30, [X31 - 0x10]!
	0x02D26CD0 MOV X0, X1
	0x02D26CD4 MOV X1, X31
	0x02D26CD8 BL 0x1C16CB4
	0x02D26CDC CBZ X0, 0x2D26CF0
	0x02D26CE0 BL 0x1C16E08
	0x02D26CE4 LDR X0, [X0]
	0x02D26CE8 LDR X30, [X31], #0x10
	0x02D26CEC RET
	0x02D26CF0 BL 0x1C16F20
	0x02D26CF4 STP X30, X21, [X31 - 0x20]!
	0x02D26CF8 STP X20, X19, [X31 + 0x10]
	0x02D26CFC LDR X8, [X2 + 0x8]
	0x02D26D00 STP X1, X2, [X0 + 0x20]
	0x02D26D04 MOV X19, X0
	0x02D26D08 MOV X20, X1
	0x02D26D0C STR X8, [X0 + 0x10]
	0x02D26D10 LDRB W21, [X2 + 0x52]
	0x02D26D14 STR X0, [X0 + 0x40]
	0x02D26D18 MOV X0, X2
	0x02D26D1C BL 0x1C16D84
	0x02D26D20 TBZ X0, 0x0, 0x2D26D38
	0x02D26D24 CBNZ W21, 0x2D26D3C
	0x02D26D28 ADRP X8, 0xFFFFFFFFFECD8000
	0x02D26D2C ADD X8, X8, 0xC90

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x16B6000
	009 Move W8, [X21+2031]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x13F6000
	017 Move X0, [X0+1816]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2031], W8
	021 Compare X20, 0
	022 JumpIfEqual {147}
	023 Move X24, 0x13F6000
	024 Move X8, [X20]
	025 Move X24, [X24+1816]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X24]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move W2, 2
	037 Move X0, X20
	038 Call 0x1C5D788
	039 Move W9, [X10]
	040 Add W9, W9, 2
	041 Add X8, X8, W9
	042 Add X0, X8, 312
	043 Move X8, [X0]
	044 Move X1, [X0+8]
	045 Move X0, X20
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X8, [X19+32]
	048 Move X21, X0
	049 Move W9, [X8+309]
	050 Move TEMP, X9
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {57}
	054 Move X0, X8
	055 Call 0x1C5D684
	056 Move X8, X0
	057 Move X8, [X8+192]
	058 Move X0, [X8+24]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Compare X21, 0
	066 JumpIfEqual {130}
	067 Move X8, [X21]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X23, [X21+88]
	070 Move X22, [X21+96]
	071 Move [X21+88], X31
	072 Move [X21+96], X31
	073 Compare X22, 0
	074 JumpIfEqual {130}
	075 Move X8, [X20]
	076 Move X1, [X24]
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Compare X9, 0
	079 JumpIfEqual {86}
	080 Move X10, [X8+176]
	081 Add X10, X10, 8
	082 NotImplemented "Instruction LDUR not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Subtract X9, X9, 1
	085 Add X10, X10, 16
	086 Move W2, 3
	087 Move X0, X20
	088 Call 0x1C5D788
	089 Move W9, [X10]
	090 Add W9, W9, 3
	091 Add X8, X8, W9
	092 Add X0, X8, 312
	093 Move X8, [X0]
	094 Move X1, [X0+8]
	095 Move X0, X20
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {109}
	101 Move X20, [X31+48]
	102 Move X19, [X31+56]
	103 Move X22, [X31+32]
	104 Move X21, [X31+40]
	105 Move X24, [X31+16]
	106 Move X23, [X31+24]
	107 Move X30, [X31+64]
	108 Return 
	109 Move X0, [X19+32]
	110 Move W8, [X0+309]
	111 Move TEMP, X8
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfEqual {116}
	115 Call 0x1C5D684
	116 Move X8, [X0+192]
	117 Move X0, X21
	118 Move X1, X23
	119 Move X2, X22
	120 Move X5, [X8+40]
	121 Move X3, X20
	122 Move X20, [X31+48]
	123 Move X19, [X31+56]
	124 Move X22, [X31+32]
	125 Move X21, [X31+40]
	126 Move X24, [X31+16]
	127 Move X23, [X31+24]
	128 Move W4, 1
	129 Move X30, [X31+64]
	130 Move X0, 0x13D6000
	131 Move X0, [X0+1400]
	132 Call 0x1C17D08
	133 Call 0x1C17F10
	134 Move X20, X0
	135 Move X0, 0x13F9000
	136 Move X0, [X0+3528]
	137 Call 0x1C17D08
	138 Move X21, X0
	139 Move X0, 0x13F9000
	140 Move X0, [X0+3536]
	141 Call 0x1C17D08
	142 Move X2, X0
	143 Move X0, X20
	144 Move X1, X21
	145 Move X3, X31
	146 Call ArgumentException..ctor, X0, X1, X2
	147 Move X0, 0x13D3000
	148 Move X0, [X0+1320]
	149 Call 0x1C17D08
	150 Call 0x1C17F10
	151 Move X20, X0
	152 Move X0, 0x13F9000
	153 Move X0, [X0+3536]
	154 Call 0x1C17D08
	155 Move X1, X0
	156 Move X0, X20
	157 Move X2, X31
	158 Call ArgumentNullException..ctor, X0, X1
	159 Move X0, X20
	160 Move X1, X19
	161 Call 0x1C17DEC

Method: System.Void Complete(TInstance thisRef, System.Func`3<TInstance, System.IAsyncResult, TResult> endMethod, System.IAsyncResult asyncResult, System.Boolean requiresSynchronization)

Disassembly:
	0x02D26D30 STR X8, [X19 + 0x18]
	0x02D26D34 B 0x2D26D4C
	0x02D26D38 CBZ X20, 0x2D26D64
	0x02D26D3C LDR X8, [X19 + 0x10]
	0x02D26D40 LDR X9, [X19 + 0x20]
	0x02D26D44 STR X8, [X19 + 0x18]
	0x02D26D48 STR X9, [X19 + 0x40]
	0x02D26D4C ADRP X8, 0xFFFFFFFFFECD8000
	0x02D26D50 ADD X8, X8, 0xC44
	0x02D26D54 STR X8, [X19 + 0x38]
	0x02D26D58 LDP X20, X19, [X31 + 0x10]
	0x02D26D5C LDP X30, X21, [X31], #0x20
	0x02D26D60 RET
	0x02D26D64 ADRP X1, 0xFFFFFFFFFDDF5000
	0x02D26D68 ADD X1, X1, 0xEE3
	0x02D26D6C MOV X0, X31
	0x02D26D70 BL 0x1C16F3C
	0x02D26D74 MOV X1, X31
	0x02D26D78 BL 0x1C16DEC
	0x02D26D7C LDR X8, [X0 + 0x40]
	0x02D26D80 LDR X2, [X0 + 0x18]
	0x02D26D84 LDR X1, [X0 + 0x28]
	0x02D26D88 MOV X0, X8
	0x02D26D8C BR X2
	0x02D26D90 STR X30, [X31 - 0x10]!
	0x02D26D94 MOV X3, X2
	0x02D26D98 MOV X2, X1
	0x02D26D9C ADD X1, X31, 0x8
	0x02D26DA0 STR X31, [X31 + 0x8]
	0x02D26DA4 BL 0x1C16CB0
	0x02D26DA8 LDR X30, [X31], #0x10
	0x02D26DAC RET
	0x02D26DB0 STR X30, [X31 - 0x10]!
	0x02D26DB4 MOV X0, X1
	0x02D26DB8 MOV X1, X31
	0x02D26DBC BL 0x1C16CB4
	0x02D26DC0 CBZ X0, 0x2D26DD8
	0x02D26DC4 BL 0x1C16E08
	0x02D26DC8 LDP X8, X1, [X0]
	0x02D26DCC MOV X0, X8
	0x02D26DD0 LDR X30, [X31], #0x10
	0x02D26DD4 RET
	0x02D26DD8 BL 0x1C16F20
	0x02D26DDC STP X30, X21, [X31 - 0x20]!
	0x02D26DE0 STP X20, X19, [X31 + 0x10]
	0x02D26DE4 LDR X8, [X2 + 0x8]
	0x02D26DE8 STP X1, X2, [X0 + 0x20]
	0x02D26DEC MOV X19, X0
	0x02D26DF0 MOV X20, X1
	0x02D26DF4 STR X8, [X0 + 0x10]
	0x02D26DF8 LDRB W21, [X2 + 0x52]
	0x02D26DFC STR X0, [X0 + 0x40]
	0x02D26E00 MOV X0, X2
	0x02D26E04 BL 0x1C16D84
	0x02D26E08 TBZ X0, 0x0, 0x2D26E20
	0x02D26E0C CBNZ W21, 0x2D26E24
	0x02D26E10 ADRP X8, 0xFFFFFFFFFECD8000
	0x02D26E14 ADD X8, X8, 0xD04
	0x02D26E18 STR X8, [X19 + 0x18]
	0x02D26E1C B 0x2D26E34
	0x02D26E20 CBZ X20, 0x2D26E4C
	0x02D26E24 LDR X8, [X19 + 0x10]
	0x02D26E28 LDR X9, [X19 + 0x20]
	0x02D26E2C STR X8, [X19 + 0x18]
	0x02D26E30 STR X9, [X19 + 0x40]
	0x02D26E34 ADRP X8, 0xFFFFFFFFFECD8000
	0x02D26E38 ADD X8, X8, 0xC9C
	0x02D26E3C STR X8, [X19 + 0x38]
	0x02D26E40 LDP X20, X19, [X31 + 0x10]
	0x02D26E44 LDP X30, X21, [X31], #0x20
	0x02D26E48 RET
	0x02D26E4C ADRP X1, 0xFFFFFFFFFDDF5000
	0x02D26E50 ADD X1, X1, 0xEE3
	0x02D26E54 MOV X0, X31
	0x02D26E58 BL 0x1C16F3C
	0x02D26E5C MOV X1, X31
	0x02D26E60 BL 0x1C16DEC
	0x02D26E64 LDR X9, [X0 + 0x40]
	0x02D26E68 LDR X2, [X0 + 0x18]
	0x02D26E6C LDR X1, [X0 + 0x28]
	0x02D26E70 MOV X0, X9
	0x02D26E74 BR X2
	0x02D26E78 STR X30, [X31 - 0x10]!
	0x02D26E7C MOV X3, X2
	0x02D26E80 MOV X2, X1
	0x02D26E84 ADD X1, X31, 0x8
	0x02D26E88 STR X31, [X31 + 0x8]
	0x02D26E8C BL 0x1C16CB0
	0x02D26E90 LDR X30, [X31], #0x10
	0x02D26E94 RET
	0x02D26E98 STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Compare X2, 0
	007 JumpIfEqual {40}
	008 Move X0, [X2+64]
	009 Move X9, [X2+24]
	010 Move X8, [X2+40]
	011 Move X20, X5
	012 Move W21, W4
	013 Move X2, X3
	014 Move X3, X8
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move W1, W0
	017 Move TEMP, X21
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {28}
	021 Compare X19, 0
	022 JumpIfEqual {41}
	023 Move X8, [X20+32]
	024 Move X8, [X8+192]
	025 Move X2, [X8+64]
	026 Move X0, X19
	027 Call Task`1<Int32>.TrySetResult, X0, X1
	028 Compare X19, 0
	029 JumpIfEqual {42}
	030 Move X8, [X20+32]
	031 Move X8, [X8+192]
	032 Move X2, [X8+72]
	033 Move X0, X19
	034 Call Task`1<Int32>.DangerousSetResult, X0, X1
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return 
	040 Call 0x1C17F20
	041 Call 0x1C17F20
	042 Call 0x1C17F20
	043 Move X20, X0
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X0, X20
	046 Call 0x3EB2AD0
	047 Move X20, X0
	048 Move X0, 0x13D6000
	049 Move X0, [X0+2216]
	050 Call 0x1C17D08
	051 Move X8, [X20]
	052 Move X1, [X8]
	053 Call 0x1C18270
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {74}
	058 Move X20, [X20]
	059 Call 0x3EB2AE0
	060 Compare X20, 0
	061 JumpIfEqual {97}
	062 Compare X19, 0
	063 JumpIfEqual {97}
	064 Move X1, [X20+144]
	065 Move X0, X19
	066 Move X2, X20
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X3, X31
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Call Task.TrySetCanceled, X0, X1, X2
	073 Return 
	074 Move X0, 0x13CE000
	075 Move X0, [X0+2000]
	076 Call 0x1C17D08
	077 Move X8, [X20]
	078 Move X1, [X8]
	079 Call 0x1C18270
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {98}
	084 Move X20, [X20]
	085 Call 0x3EB2AE0
	086 Compare X19, 0
	087 JumpIfEqual {97}
	088 Move X0, X19
	089 Move X1, X20
	090 Move X20, [X31+16]
	091 Move X19, [X31+24]
	092 Move X2, X31
	093 Move X30, [X31+32]
	094 Move X21, [X31+40]
	095 Call Task.TrySetException, X0, X1
	096 Return 
	097 Call 0x1C17F20
	098 Move W0, 8
	099 Call 0x3EB2AF0
	100 Move X8, [X20]
	101 Move [X0], X8
	102 Move X1, 0x118F000
	103 Add X1, X1, 3672
	104 Move X2, X31
	105 Call 0x3EB2B00
	106 Move X20, X0
	107 Call 0x3EB2AE0
	108 Move X0, X20
	109 Call 0x1D2D690
	110 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x02D26E9C MOV X0, X1
	0x02D26EA0 MOV X1, X31
	0x02D26EA4 MOV X19, X8
	0x02D26EA8 BL 0x1C16CB4
	0x02D26EAC CBZ X0, 0x2D26ECC
	0x02D26EB0 BL 0x1C16E08
	0x02D26EB4 LDR V0, [X0]
	0x02D26EB8 LDR X8, [X0 + 0x10]
	0x02D26EBC STR V0, [X19]
	0x02D26EC0 STR X8, [X19 + 0x10]
	0x02D26EC4 LDP X30, X19, [X31], #0x10
	0x02D26EC8 RET
	0x02D26ECC BL 0x1C16F20
	0x02D26ED0 STP X30, X21, [X31 - 0x20]!
	0x02D26ED4 STP X20, X19, [X31 + 0x10]
	0x02D26ED8 LDR X8, [X2 + 0x8]
	0x02D26EDC STP X1, X2, [X0 + 0x20]
	0x02D26EE0 MOV X19, X0
	0x02D26EE4 MOV X20, X1
	0x02D26EE8 STR X8, [X0 + 0x10]
	0x02D26EEC LDRB W21, [X2 + 0x52]
	0x02D26EF0 STR X0, [X0 + 0x40]
	0x02D26EF4 MOV X0, X2
	0x02D26EF8 BL 0x1C16D84
	0x02D26EFC TBZ X0, 0x0, 0x2D26F14
	0x02D26F00 CBNZ W21, 0x2D26F18
	0x02D26F04 ADRP X8, 0xFFFFFFFFFECD8000
	0x02D26F08 ADD X8, X8, 0xD70
	0x02D26F0C STR X8, [X19 + 0x18]
	0x02D26F10 B 0x2D26F28
	0x02D26F14 CBZ X20, 0x2D26F40
	0x02D26F18 LDR X8, [X19 + 0x10]
	0x02D26F1C LDR X9, [X19 + 0x20]
	0x02D26F20 STR X8, [X19 + 0x18]
	0x02D26F24 STR X9, [X19 + 0x40]
	0x02D26F28 ADRP X8, 0xFFFFFFFFFECD8000
	0x02D26F2C ADD X8, X8, 0xD10
	0x02D26F30 STR X8, [X19 + 0x38]
	0x02D26F34 LDP X20, X19, [X31 + 0x10]
	0x02D26F38 LDP X30, X21, [X31], #0x20
	0x02D26F3C RET
	0x02D26F40 ADRP X1, 0xFFFFFFFFFDDF5000
	0x02D26F44 ADD X1, X1, 0xEE3
	0x02D26F48 MOV X0, X31
	0x02D26F4C BL 0x1C16F3C
	0x02D26F50 MOV X1, X31
	0x02D26F54 BL 0x1C16DEC
	0x02D26F58 LDR X9, [X0 + 0x40]
	0x02D26F5C LDR X2, [X0 + 0x18]
	0x02D26F60 LDR X1, [X0 + 0x28]
	0x02D26F64 MOV X0, X9
	0x02D26F68 BR X2
	0x02D26F6C STR X30, [X31 - 0x10]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x16B6000
	006 Move X21, 0x13F6000
	007 Move W8, [X20+2032]
	008 Move X21, [X21+1824]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x13F6000
	015 Move X0, [X0+1824]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2032], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X8, [X19+32]
	022 Move X20, X0
	023 Move W9, [X8+309]
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {31}
	028 Move X0, X8
	029 Call 0x1C5D684
	030 Move X8, X0
	031 Move X8, [X8+192]
	032 Move X0, X20
	033 Move X1, X31
	034 Move X3, X31
	035 Move X2, [X8+80]
	036 Call AsyncCallback..ctor, X0, X1, X2
	037 Move X0, [X19+32]
	038 Move W8, [X0+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Call 0x1C5D684
	044 Move X8, [X0+192]
	045 Move X0, [X8+88]
	046 Move W8, [X0+309]
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {52}
	051 Call 0x1C5D684
	052 Move X8, [X0+184]
	053 Move [X8], X20
	054 Move X0, [X19+32]
	055 Move W8, [X0+309]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {61}
	060 Call 0x1C5D684
	061 Move X8, [X0+192]
	062 Move X0, [X8+88]
	063 Move W8, [X0+309]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {74}
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Call 0x1C5D684
	073 Return 
	074 Move X20, [X31+16]
	075 Move X19, [X31+24]
	076 Move X30, [X31+32]
	077 Move X21, [X31+40]
	078 Return 

