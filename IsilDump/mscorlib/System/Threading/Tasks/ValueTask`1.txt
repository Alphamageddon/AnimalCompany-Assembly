Type: System.Threading.Tasks.ValueTask`1

Method: System.Void .ctor(TResult result)

Disassembly:
	0x0279146C MOV X20, X1
	0x02791470 LDRB W8, [X0 + 0x135]
	0x02791474 TBNZ X8, 0x0, 0x279147C
	0x02791478 BL 0x1C5C684
	0x0279147C LDR X8, [X0 + 0xC0]
	0x02791480 LDR X1, [X8 + 0x18]

ISIL:
	001 Move W8, 1
	002 Move [X0+8], W1
	003 Move [X0], X31
	004 Move [X0+14], W8
	005 NotImplemented "Instruction STRH not yet implemented."
	006 Return 

Method: System.Void .ctor(System.Threading.Tasks.Task`1<TResult> task)

Disassembly:
	0x02791484 LDRB W8, [X1 + 0x135]
	0x02791488 TBNZ X8, 0x0, 0x2791498
	0x0279148C MOV X0, X1
	0x02791490 BL 0x1C5C684
	0x02791494 MOV X1, X0
	0x02791498 LDR X8, [X20]
	0x0279149C LDRH W9, [X8 + 0x12E]
	0x027914A0 CBZ X9, 0x27914C4
	0x027914A4 LDR X10, [X8 + 0xB0]
	0x027914A8 ADD X10, X10, 0x8
	0x027914AC LDUR X11, [X10 - 0x8]
	0x027914B0 CMP X11, X1
	0x027914B4 B.EQ 0x27914D4
	0x027914B8 SUBS X9, X9, 0x1
	0x027914BC ADD X10, X10, 0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X19, X0
	006 Compare X1, 0
	007 JumpIfNotEqual {10}
	008 Move W0, 38
	009 Call ThrowHelper.ThrowArgumentNullException, X0
	010 Move W8, 1
	011 Move [X19], X20
	012 Move [X19+8], W31
	013 Move [X19+14], W8
	014 NotImplemented "Instruction STRH not yet implemented."
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 Return 

Method: System.Void .ctor(System.Threading.Tasks.Sources.IValueTaskSource`1<TResult> source, System.Int16 token)

Disassembly:
	0x027914C0 B.NE 0x27914AC
	0x027914C4 MOV X0, X20
	0x027914C8 MOV W2, W31
	0x027914CC BL 0x1C5C788
	0x027914D0 B 0x27914E0
	0x027914D4 LDRSW X9, [X10]
	0x027914D8 ADD X8, X8, X9, 0x4, LSL
	0x027914DC ADD X0, X8, 0x138
	0x027914E0 LDP X8, X2, [X0]
	0x027914E4 MOV X0, X20
	0x027914E8 MOV W1, W22
	0x027914EC BLR X8
	0x027914F0 LDR X8, [X19 + 0x20]
	0x027914F4 LDRH W22, [X21 + 0x10]
	0x027914F8 ADD X9, X8, 0x135
	0x027914FC LDRH W9, [X9]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W2
	006 Move X21, X1
	007 Move X19, X0
	008 Compare X1, 0
	009 JumpIfNotEqual {12}
	010 Move W0, 39
	011 Call ThrowHelper.ThrowArgumentNullException, X0
	012 Move W8, 1
	013 Move [X19], X21
	014 NotImplemented "Instruction STRH not yet implemented."
	015 Move [X19+8], W31
	016 Move [X19+14], W8
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Move X21, [X31+40]
	021 Return 

Method: System.Void .ctor(System.Object obj, TResult result, System.Int16 token, System.Boolean continueOnCapturedContext)

Disassembly:
	0x02791500 CBZ W0, 0x2791570
	0x02791504 MOV W21, W0
	0x02791508 TBNZ X9, 0x0, 0x2791518
	0x0279150C MOV X0, X8
	0x02791510 BL 0x1C5C684
	0x02791514 MOV X8, X0

ISIL:
	001 And W8, W4, 1
	002 Move [X0], X1
	003 Move [X0+8], W2
	004 NotImplemented "Instruction STRH not yet implemented."
	005 Move [X0+14], W8
	006 Return 

Method: System.Int32 GetHashCode()

Disassembly:
	0x02791518 LDR X8, [X8 + 0xC0]
	0x0279151C LDR X1, [X8 + 0x18]
	0x02791520 LDRB W8, [X1 + 0x135]
	0x02791524 TBNZ X8, 0x0, 0x2791534
	0x02791528 MOV X0, X1
	0x0279152C BL 0x1C5C684
	0x02791530 MOV X1, X0
	0x02791534 LDR X8, [X20]
	0x02791538 LDRH W9, [X8 + 0x12E]
	0x0279153C CBZ X9, 0x2791560
	0x02791540 LDR X10, [X8 + 0xB0]
	0x02791544 ADD X10, X10, 0x8
	0x02791548 LDUR X11, [X10 - 0x8]
	0x0279154C CMP X11, X1
	0x02791550 B.EQ 0x27915D0
	0x02791554 SUBS X9, X9, 0x1
	0x02791558 ADD X10, X10, 0x10
	0x0279155C B.NE 0x2791548
	0x02791560 MOVZ W2, 0x2
	0x02791564 MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Move X0, [X0]
	004 Compare X0, 0
	005 JumpIfEqual {10}
	006 Move X8, [X0]
	007 Move X9, [X8+344]
	008 Move X1, [X8+352]
	009 NotImplemented "Instruction BLR not yet implemented."
	010 Move W8, [X8+8]
	011 Move [X31+12], W8
	012 Move X0, [X1+32]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Move X8, [X0+192]
	020 Add X0, X31, 12
	021 Move X1, [X8+32]
	022 Call Int32.GetHashCode, X0
	023 Move X30, [X31+16]
	024 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x02791568 BL 0x1C5C788
	0x0279156C B 0x27915E0
	0x02791570 TBNZ X9, 0x0, 0x2791580
	0x02791574 MOV X0, X8
	0x02791578 BL 0x1C5C684
	0x0279157C MOV X8, X0
	0x02791580 LDR X8, [X8 + 0xC0]
	0x02791584 LDR X0, [X8 + 0x98]
	0x02791588 LDRB W8, [X0 + 0x135]
	0x0279158C TBNZ X8, 0x0, 0x2791594
	0x02791590 BL 0x1C5C684
	0x02791594 BL 0x1C16F10
	0x02791598 LDR X8, [X19 + 0x20]
	0x0279159C MOV X23, X0
	0x027915A0 LDRB W9, [X8 + 0x135]
	0x027915A4 TBNZ X9, 0x0, 0x27915B4
	0x027915A8 MOV X0, X8
	0x027915AC BL 0x1C5C684
	0x027915B0 MOV X8, X0
	0x027915B4 LDR X8, [X8 + 0xC0]
	0x027915B8 MOV X0, X23
	0x027915BC MOV X1, X20
	0x027915C0 MOV W2, W22
	0x027915C4 LDR X3, [X8 + 0xA0]
	0x027915C8 BL 0x278FF88
	0x027915CC B 0x2791648
	0x027915D0 LDR W9, [X10]
	0x027915D4 ADD W9, W9, 0x2
	0x027915D8 ADD X8, X8, W9, 0x4, SXTW
	0x027915DC ADD X0, X8, 0x138
	0x027915E0 LDP X8, X2, [X0]
	0x027915E4 MOV X0, X20
	0x027915E8 MOV W1, W22
	0x027915EC BLR X8
	0x027915F0 MOV X20, X0
	0x027915F4 LDR X0, [X19 + 0x20]
	0x027915F8 LDRB W8, [X0 + 0x135]
	0x027915FC TBNZ X8, 0x0, 0x2791604
	0x02791600 BL 0x1C5C684
	0x02791604 LDR X8, [X0 + 0xC0]
	0x02791608 LDR X0, [X8 + 0x60]
	0x0279160C LDRB W8, [X0 + 0x135]
	0x02791610 TBNZ X8, 0x0, 0x2791618
	0x02791614 BL 0x1C5C684
	0x02791618 LDR W8, [X0 + 0xE0]
	0x0279161C CBNZ W8, 0x2791624
	0x02791620 BL 0x1C16DFC
	0x02791624 LDR X0, [X19 + 0x20]
	0x02791628 LDRB W8, [X0 + 0x135]
	0x0279162C TBNZ X8, 0x0, 0x2791634
	0x02791630 BL 0x1C5C684
	0x02791634 LDR X8, [X0 + 0xC0]
	0x02791638 LDR X1, [X8 + 0x58]
	0x0279163C MOV X0, X20
	0x02791640 BL 0x263264C
	0x02791644 MOV X23, X0
	0x02791648 MOV X0, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X20, X2
	007 Move X21, X1
	008 Move X19, X0
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X8, [X8+192]
	018 Move X0, [X8+8]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Compare X21, 0
	026 JumpIfEqual {29}
	027 Move X8, [X21]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move W0, W31
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return X0
	035 Move X0, [X20+32]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X0+192]
	043 Move X1, [X8+8]
	044 Move W8, [X1+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {52}
	049 Move X0, X1
	050 Call 0x1C5D684
	051 Move X1, X0
	052 Move X8, [X21]
	053 Move X9, [X1+64]
	054 Move X0, X21
	055 Move X8, [X8+64]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Call 0x1C17E08
	058 Move X8, X0
	059 Move X0, [X20+32]
	060 Move X21, [X8]
	061 Move X20, [X8+8]
	062 Move W9, [X0+309]
	063 Move TEMP, X9
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {68}
	067 Call 0x1C5D684
	068 Move X8, [X0+192]
	069 Move X0, X19
	070 Move X2, X20
	071 Move X20, [X31+16]
	072 Move X19, [X31+24]
	073 Move X3, [X8+40]
	074 Move X1, X21
	075 Move X30, [X31+32]
	076 Move X21, [X31+40]
	077 Call 0x1C181E0

Method: System.Boolean Equals(System.Threading.Tasks.ValueTask`1<TResult> other)

Disassembly:
	0x0279164C LDP X20, X19, [X31 + 0x30]
	0x02791650 LDP X22, X21, [X31 + 0x20]
	0x02791654 LDP X30, X23, [X31 + 0x10]
	0x02791658 ADD X31, X31, 0x40
	0x0279165C RET
	0x02791660 B 0x2791664
	0x02791664 MOV X20, X0
	0x02791668 CMP W1, 0x1
	0x0279166C B.NE 0x279189C
	0x02791670 MOV X0, X20
	0x02791674 BL 0x3EB1AD0
	0x02791678 MOV X20, X0
	0x0279167C ADRP X0, 0x1962000
	0x02791680 LDR X0, [X0 + 0x7D0]
	0x02791684 BL 0x1C16D08
	0x02791688 LDR X8, [X20]
	0x0279168C LDR X1, [X8]
	0x02791690 BL 0x1C17270
	0x02791694 TBZ X0, 0x0, 0x2791874
	0x02791698 LDR X20, [X20]
	0x0279169C BL 0x3EB1AE0
	0x027916A0 CMP W21, 0x3
	0x027916A4 B.NE 0x27916D4
	0x027916A8 ADRP X0, 0x196A000
	0x027916AC LDR X0, [X0 + 0x8A8]
	0x027916B0 BL 0x1C16D08
	0x027916B4 CBZ X20, 0x2791730
	0x027916B8 LDR X8, [X20]
	0x027916BC LDRB W9, [X0 + 0x130]
	0x027916C0 LDRB W10, [X8 + 0x130]
	0x027916C4 CMP W10, W9
	0x027916C8 B.CS 0x279171C
	0x027916CC MOV X20, X31
	0x027916D0 B 0x2791730

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Move X19, X2
	006 Move X20, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {32}
	009 Compare X8, 0
	010 JumpIfNotEqual {32}
	011 Move X0, [X3+32]
	012 Move W8, [X0+309]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {18}
	017 Call 0x1C5D684
	018 Move X8, [X0+192]
	019 Move X0, [X8+56]
	020 Call 0x211B010
	021 Compare X0, 0
	022 JumpIfEqual {44}
	023 Move X8, [X0]
	024 Move W1, [X20+8]
	025 Move W2, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X4, [X8+440]
	029 Move X3, [X8+448]
	030 Move X30, [X31+32]
	031 CallNoReturn X4
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W0, W31
	034 NotImplemented "Instruction LDRSH not yet implemented."
	035 Move X9, X19
	036 ShiftRight X9, 16
	037 And X9, X9, 0x7FFFFFFF
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Return X0
	044 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<TResult> AsTask()

Disassembly:
	0x027916D4 ADRP X0, 0x1963000
	0x027916D8 LDR X0, [X0 + 0x7B8]
	0x027916DC BL 0x1C16D08
	0x027916E0 LDR W8, [X0 + 0xE0]
	0x027916E4 CBNZ W8, 0x27916EC
	0x027916E8 BL 0x1C16DFC
	0x027916EC LDR X0, [X19 + 0x20]
	0x027916F0 LDRB W8, [X0 + 0x135]
	0x027916F4 TBNZ X8, 0x0, 0x27916FC
	0x027916F8 BL 0x1C5C684
	0x027916FC LDR X8, [X0 + 0xC0]
	0x02791700 MOV X0, X20
	0x02791704 LDP X20, X19, [X31 + 0x30]
	0x02791708 LDP X22, X21, [X31 + 0x20]
	0x0279170C LDR X1, [X8 + 0x90]
	0x02791710 LDP X30, X23, [X31 + 0x10]
	0x02791714 ADD X31, X31, 0x40
	0x02791718 B 0x2299EAC
	0x0279171C LDR X8, [X8 + 0xC8]
	0x02791720 ADD X8, X8, X9, 0x3, LSL
	0x02791724 LDUR X8, [X8 - 0x8]
	0x02791728 CMP X8, X0
	0x0279172C CSEL X20, X20, X31, EQ
	0x02791730 LDR X0, [X19 + 0x20]
	0x02791734 LDRB W8, [X0 + 0x135]
	0x02791738 TBNZ X8, 0x0, 0x2791740
	0x0279173C BL 0x1C5C684
	0x02791740 LDR X8, [X0 + 0xC0]
	0x02791744 CBZ X20, 0x27917A8
	0x02791748 LDR X0, [X8 + 0x10]
	0x0279174C LDRB W8, [X0 + 0x135]
	0x02791750 TBNZ X8, 0x0, 0x2791758
	0x02791754 BL 0x1C5C684
	0x02791758 BL 0x1C16F10
	0x0279175C LDR X8, [X19 + 0x20]
	0x02791760 MOV X23, X0
	0x02791764 LDRB W9, [X8 + 0x135]
	0x02791768 TBNZ X9, 0x0, 0x2791778
	0x0279176C MOV X0, X8
	0x02791770 BL 0x1C5C684
	0x02791774 MOV X8, X0
	0x02791778 LDR X8, [X8 + 0xC0]
	0x0279177C MOV X0, X23
	0x02791780 LDR X1, [X8 + 0x80]
	0x02791784 BL 0x269EC2C
	0x02791788 CBZ X23, 0x27917A4
	0x0279178C LDR X1, [X20 + 0x90]
	0x02791790 MOV X0, X23
	0x02791794 MOV X2, X20
	0x02791798 MOV X3, X31
	0x0279179C BL 0x33EDA6C
	0x027917A0 B 0x2791648
	0x027917A4 BL 0x1C16F20
	0x027917A8 LDR X0, [X8 + 0x30]
	0x027917AC LDRB W8, [X0 + 0x135]
	0x027917B0 TBNZ X8, 0x0, 0x27917B8
	0x027917B4 BL 0x1C5C684
	0x027917B8 LDR X8, [X0 + 0xB8]
	0x027917BC LDR X23, [X8]
	0x027917C0 CBNZ X23, 0x2791648
	0x027917C4 ADD X0, X31, 0x8
	0x027917C8 MOVZ W1, 0x1
	0x027917CC MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, [X0]
	006 Move X20, X0
	007 Move X19, X1
	008 Compare X21, 0
	009 JumpIfEqual {48}
	010 Move X0, [X19+32]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Move X8, [X0+192]
	018 Move X0, [X8+16]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move X8, [X21]
	026 Move W9, [X0+304]
	027 Move W10, [X8+304]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, [X8+200]
	030 Add X8, X8, X9
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, [X19+32]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move X8, [X0+192]
	041 Move X0, X20
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X1, X21
	045 Move X2, [X8+104]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Move X0, [X19+32]
	049 Move W20, [X20+8]
	050 Move W8, [X0+309]
	051 Move TEMP, X8
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {56}
	055 Call 0x1C5D684
	056 Move X8, [X0+192]
	057 Move X0, [X8+96]
	058 Move W8, [X0+309]
	059 Move TEMP, X8
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {64}
	063 Call 0x1C5D684
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, [X19+32]
	069 Move W8, [X0+309]
	070 Move TEMP, X8
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {75}
	074 Call 0x1C5D684
	075 Move X8, [X0+192]
	076 Move W0, W20
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move X1, [X8+88]
	080 Move X30, [X31+32]
	081 Move X21, [X31+40]
	082 Call AsyncTaskMethodBuilder`1<Int32>.GetTaskForResult, X0
	083 Return X0
	084 Move X20, [X31+16]
	085 Move X19, [X31+24]
	086 Move X0, X21
	087 Move X30, [X31+32]
	088 Move X21, [X31+40]
	089 Return X0

Method: System.Threading.Tasks.Task`1<TResult> GetTaskForValueTaskSource(System.Threading.Tasks.Sources.IValueTaskSource`1<TResult> t)

Disassembly:
	0x027917D0 STR X31, [X31 + 0x8]
	0x027917D4 BL 0x33DD310
	0x027917D8 ADRP X0, 0x1963000
	0x027917DC LDR X0, [X0 + 0x7B8]
	0x027917E0 BL 0x1C16D08
	0x027917E4 LDR W8, [X0 + 0xE0]
	0x027917E8 CBNZ W8, 0x27917F0
	0x027917EC BL 0x1C16DFC
	0x027917F0 LDR X0, [X19 + 0x20]
	0x027917F4 LDR X20, [X31 + 0x8]
	0x027917F8 LDRB W8, [X0 + 0x135]
	0x027917FC TBNZ X8, 0x0, 0x2791804
	0x02791800 BL 0x1C5C684
	0x02791804 LDR X8, [X0 + 0xC0]
	0x02791808 MOV X0, X20
	0x0279180C LDR X1, [X8 + 0x88]
	0x02791810 BL 0x22995FC
	0x02791814 LDR X8, [X19 + 0x20]
	0x02791818 MOV X23, X0
	0x0279181C LDRB W9, [X8 + 0x135]
	0x02791820 TBNZ X9, 0x0, 0x2791830
	0x02791824 MOV X0, X8
	0x02791828 BL 0x1C5C684
	0x0279182C MOV X8, X0
	0x02791830 LDR X8, [X8 + 0xC0]
	0x02791834 LDR X0, [X8 + 0x30]
	0x02791838 LDRB W8, [X0 + 0x135]
	0x0279183C TBNZ X8, 0x0, 0x2791844
	0x02791840 BL 0x1C5C684
	0x02791844 LDR X8, [X0 + 0xB8]
	0x02791848 STR X23, [X8]
	0x0279184C LDR X0, [X19 + 0x20]
	0x02791850 LDRB W8, [X0 + 0x135]
	0x02791854 TBNZ X8, 0x0, 0x279185C
	0x02791858 BL 0x1C5C684
	0x0279185C LDR X8, [X0 + 0xC0]
	0x02791860 LDR X0, [X8 + 0x30]
	0x02791864 LDRB W8, [X0 + 0x135]
	0x02791868 TBNZ X8, 0x0, 0x2791648
	0x0279186C BL 0x1C5C684
	0x02791870 B 0x2791648
	0x02791874 MOVZ W0, 0x8
	0x02791878 BL 0x3EB1AF0
	0x0279187C LDR X8, [X20]
	0x02791880 STR X8, [X0]
	0x02791884 ADRP X1, 0x1723000
	0x02791888 ADD X1, X1, 0xE58
	0x0279188C MOV X2, X31
	0x02791890 BL 0x3EB1B00
	0x02791894 MOV X20, X0
	0x02791898 BL 0x3EB1AE0
	0x0279189C MOV X0, X20
	0x027918A0 BL 0x1D2C690
	0x027918A4 BL 0x1990590
	0x027918A8 STP X30, X21, [X31 - 0x20]!
	0x027918AC STP X20, X19, [X31 + 0x10]
	0x027918B0 LDR X19, [X0]
	0x027918B4 CBZ X19, 0x2791978
	0x027918B8 MOV X20, X0
	0x027918BC LDR X0, [X1 + 0x20]
	0x027918C0 MOV X21, X1
	0x027918C4 LDRB W8, [X0 + 0x135]
	0x027918C8 TBNZ X8, 0x0, 0x27918D0
	0x027918CC BL 0x1C5C684
	0x027918D0 LDR X8, [X0 + 0xC0]
	0x027918D4 LDR X0, [X8 + 0x10]
	0x027918D8 LDRB W8, [X0 + 0x135]
	0x027918DC TBNZ X8, 0x0, 0x27918E4
	0x027918E0 BL 0x1C5C684
	0x027918E4 LDR X8, [X19]
	0x027918E8 LDRB W9, [X0 + 0x130]
	0x027918EC LDRB W10, [X8 + 0x130]
	0x027918F0 CMP W10, W9
	0x027918F4 B.CC 0x279190C
	0x027918F8 LDR X8, [X8 + 0xC8]
	0x027918FC ADD X8, X8, X9, 0x3, LSL
	0x02791900 LDUR X8, [X8 - 0x8]
	0x02791904 CMP X8, X0
	0x02791908 B.EQ 0x27919B0
	0x0279190C LDR X0, [X21 + 0x20]
	0x02791910 LDRH W20, [X20 + 0x10]
	0x02791914 LDRB W8, [X0 + 0x135]
	0x02791918 TBNZ X8, 0x0, 0x2791920
	0x0279191C BL 0x1C5C684
	0x02791920 LDR X8, [X0 + 0xC0]
	0x02791924 LDR X1, [X8 + 0x18]
	0x02791928 LDRB W8, [X1 + 0x135]
	0x0279192C TBNZ X8, 0x0, 0x279193C
	0x02791930 MOV X0, X1
	0x02791934 BL 0x1C5C684
	0x02791938 MOV X1, X0
	0x0279193C LDR X8, [X19]
	0x02791940 LDRH W9, [X8 + 0x12E]
	0x02791944 CBZ X9, 0x2791968
	0x02791948 LDR X10, [X8 + 0xB0]
	0x0279194C ADD X10, X10, 0x8
	0x02791950 LDUR X11, [X10 - 0x8]
	0x02791954 CMP X11, X1
	0x02791958 B.EQ 0x2791980
	0x0279195C SUBS X9, X9, 0x1
	0x02791960 ADD X10, X10, 0x10
	0x02791964 B.NE 0x2791950
	0x02791968 MOV X0, X19
	0x0279196C MOV W2, W31
	0x02791970 BL 0x1C5C788
	0x02791974 B 0x279198C
	0x02791978 MOVZ W0, 0x1
	0x0279197C B 0x27919A4
	0x02791980 LDRSW X9, [X10]
	0x02791984 ADD X8, X8, X9, 0x4, LSL
	0x02791988 ADD X0, X8, 0x138
	0x0279198C LDP X8, X2, [X0]
	0x02791990 MOV X0, X19
	0x02791994 MOV W1, W20
	0x02791998 BLR X8
	0x0279199C CMP W0, 0x0
	0x027919A0 CSET W0, NE
	0x027919A4 LDP X20, X19, [X31 + 0x10]
	0x027919A8 LDP X30, X21, [X31], #0x20
	0x027919AC RET
	0x027919B0 MOV X0, X19
	0x027919B4 LDP X20, X19, [X31 + 0x10]
	0x027919B8 MOV X1, X31
	0x027919BC LDP X30, X21, [X31], #0x20
	0x027919C0 B 0x33ED11C
	0x027919C4 STP X30, X21, [X31 - 0x20]!
	0x027919C8 STP X20, X19, [X31 + 0x10]
	0x027919CC LDR X19, [X0]
	0x027919D0 CBZ X19, 0x2791A94
	0x027919D4 MOV X20, X0
	0x027919D8 LDR X0, [X1 + 0x20]
	0x027919DC MOV X21, X1
	0x027919E0 LDRB W8, [X0 + 0x135]
	0x027919E4 TBNZ X8, 0x0, 0x27919EC
	0x027919E8 BL 0x1C5C684
	0x027919EC LDR X8, [X0 + 0xC0]
	0x027919F0 LDR X0, [X8 + 0x10]
	0x027919F4 LDRB W8, [X0 + 0x135]
	0x027919F8 TBNZ X8, 0x0, 0x2791A00
	0x027919FC BL 0x1C5C684
	0x02791A00 LDR X8, [X19]
	0x02791A04 LDRB W9, [X0 + 0x130]
	0x02791A08 LDRB W10, [X8 + 0x130]
	0x02791A0C CMP W10, W9
	0x02791A10 B.CC 0x2791A28
	0x02791A14 LDR X8, [X8 + 0xC8]
	0x02791A18 ADD X8, X8, X9, 0x3, LSL
	0x02791A1C LDUR X8, [X8 - 0x8]
	0x02791A20 CMP X8, X0
	0x02791A24 B.EQ 0x2791ACC
	0x02791A28 LDR X0, [X21 + 0x20]
	0x02791A2C LDRH W20, [X20 + 0x10]
	0x02791A30 LDRB W8, [X0 + 0x135]
	0x02791A34 TBNZ X8, 0x0, 0x2791A3C
	0x02791A38 BL 0x1C5C684
	0x02791A3C LDR X8, [X0 + 0xC0]
	0x02791A40 LDR X1, [X8 + 0x18]
	0x02791A44 LDRB W8, [X1 + 0x135]
	0x02791A48 TBNZ X8, 0x0, 0x2791A58
	0x02791A4C MOV X0, X1
	0x02791A50 BL 0x1C5C684
	0x02791A54 MOV X1, X0
	0x02791A58 LDR X8, [X19]
	0x02791A5C LDRH W9, [X8 + 0x12E]
	0x02791A60 CBZ X9, 0x2791A84
	0x02791A64 LDR X10, [X8 + 0xB0]
	0x02791A68 ADD X10, X10, 0x8
	0x02791A6C LDUR X11, [X10 - 0x8]
	0x02791A70 CMP X11, X1
	0x02791A74 B.EQ 0x2791A9C
	0x02791A78 SUBS X9, X9, 0x1
	0x02791A7C ADD X10, X10, 0x10
	0x02791A80 B.NE 0x2791A6C
	0x02791A84 MOV X0, X19
	0x02791A88 MOV W2, W31
	0x02791A8C BL 0x1C5C788
	0x02791A90 B 0x2791AA8
	0x02791A94 MOVZ W0, 0x1
	0x02791A98 B 0x2791AC0
	0x02791A9C LDRSW X9, [X10]
	0x02791AA0 ADD X8, X8, X9, 0x4, LSL
	0x02791AA4 ADD X0, X8, 0x138
	0x02791AA8 LDP X8, X2, [X0]
	0x02791AAC MOV X0, X19
	0x02791AB0 MOV W1, W20
	0x02791AB4 BLR X8
	0x02791AB8 CMP W0, 0x1
	0x02791ABC CSET W0, EQ
	0x02791AC0 LDP X20, X19, [X31 + 0x10]
	0x02791AC4 LDP X30, X21, [X31], #0x20
	0x02791AC8 RET
	0x02791ACC MOV X0, X19
	0x02791AD0 LDP X20, X19, [X31 + 0x10]
	0x02791AD4 MOV X1, X31
	0x02791AD8 LDP X30, X21, [X31], #0x20
	0x02791ADC B 0x33EDE64
	0x02791AE0 STP X30, X21, [X31 - 0x20]!
	0x02791AE4 STP X20, X19, [X31 + 0x10]
	0x02791AE8 LDR X19, [X0]
	0x02791AEC MOV X21, X0
	0x02791AF0 CBZ X19, 0x2791BB0
	0x02791AF4 LDR X0, [X1 + 0x20]
	0x02791AF8 MOV X20, X1
	0x02791AFC LDRB W8, [X0 + 0x135]
	0x02791B00 TBNZ X8, 0x0, 0x2791B08
	0x02791B04 BL 0x1C5C684
	0x02791B08 LDR X8, [X0 + 0xC0]
	0x02791B0C LDR X0, [X8 + 0x10]
	0x02791B10 LDRB W8, [X0 + 0x135]
	0x02791B14 TBNZ X8, 0x0, 0x2791B1C
	0x02791B18 BL 0x1C5C684
	0x02791B1C LDR X8, [X19]
	0x02791B20 LDRB W9, [X0 + 0x130]
	0x02791B24 LDRB W10, [X8 + 0x130]
	0x02791B28 CMP W10, W9
	0x02791B2C B.CC 0x2791B44
	0x02791B30 LDR X8, [X8 + 0xC8]
	0x02791B34 ADD X8, X8, X9, 0x3, LSL
	0x02791B38 LDUR X8, [X8 - 0x8]
	0x02791B3C CMP X8, X0
	0x02791B40 B.EQ 0x2791BE0
	0x02791B44 LDR X0, [X20 + 0x20]
	0x02791B48 LDRH W20, [X21 + 0x10]
	0x02791B4C LDRB W8, [X0 + 0x135]
	0x02791B50 TBNZ X8, 0x0, 0x2791B58
	0x02791B54 BL 0x1C5C684
	0x02791B58 LDR X8, [X0 + 0xC0]
	0x02791B5C LDR X1, [X8 + 0x18]
	0x02791B60 LDRB W8, [X1 + 0x135]
	0x02791B64 TBNZ X8, 0x0, 0x2791B74
	0x02791B68 MOV X0, X1
	0x02791B6C BL 0x1C5C684
	0x02791B70 MOV X1, X0
	0x02791B74 LDR X8, [X19]
	0x02791B78 LDRH W9, [X8 + 0x12E]
	0x02791B7C CBZ X9, 0x2791BA0
	0x02791B80 LDR X10, [X8 + 0xB0]
	0x02791B84 ADD X10, X10, 0x8
	0x02791B88 LDUR X11, [X10 - 0x8]
	0x02791B8C CMP X11, X1
	0x02791B90 B.EQ 0x2791BB8
	0x02791B94 SUBS X9, X9, 0x1
	0x02791B98 ADD X10, X10, 0x10
	0x02791B9C B.NE 0x2791B88
	0x02791BA0 MOVZ W2, 0x2
	0x02791BA4 MOV X0, X19
	0x02791BA8 BL 0x1C5C788
	0x02791BAC B 0x2791BC8
	0x02791BB0 LDR X0, [X21 + 0x8]
	0x02791BB4 B 0x2791C00
	0x02791BB8 LDR W9, [X10]
	0x02791BBC ADD W9, W9, 0x2
	0x02791BC0 ADD X8, X8, W9, 0x4, SXTW
	0x02791BC4 ADD X0, X8, 0x138
	0x02791BC8 LDP X3, X2, [X0]
	0x02791BCC MOV X0, X19
	0x02791BD0 MOV W1, W20
	0x02791BD4 LDP X20, X19, [X31 + 0x10]
	0x02791BD8 LDP X30, X21, [X31], #0x20
	0x02791BDC BR X3
	0x02791BE0 MOV X0, X19
	0x02791BE4 MOV X1, X31
	0x02791BE8 BL 0x32C3B54
	0x02791BEC LDR X0, [X20 + 0x20]
	0x02791BF0 LDRB W8, [X0 + 0x135]
	0x02791BF4 TBNZ X8, 0x0, 0x2791BFC
	0x02791BF8 BL 0x1C5C684
	0x02791BFC LDR X0, [X19 + 0x50]
	0x02791C00 LDP X20, X19, [X31 + 0x10]
	0x02791C04 LDP X30, X21, [X31], #0x20
	0x02791C08 RET
	0x02791C0C SUB X31, X31, 0x30
	0x02791C10 STP X30, X19, [X31 + 0x20]
	0x02791C14 MOV X19, X8
	0x02791C18 LDR X8, [X0 + 0x10]
	0x02791C1C LDR V0, [X0]
	0x02791C20 STP X31, X31, [X19]
	0x02791C24 STR X31, [X19 + 0x10]
	0x02791C28 STR X8, [X31 + 0x10]
	0x02791C2C STR V0, [X31]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Compare X1, 0
	009 JumpIfEqual {269}
	010 Move X21, X0
	011 Move X0, [X2+32]
	012 NotImplemented "Instruction LDRH not yet implemented."
	013 Move X19, X2
	014 Move X20, X1
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Move X8, [X0+192]
	022 Move X1, [X8+24]
	023 Move W8, [X1+309]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {31}
	028 Move X0, X1
	029 Call 0x1C5D684
	030 Move X1, X0
	031 Move X8, [X20]
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move X0, X20
	042 Move W2, W31
	043 Call 0x1C5D788
	044 NotImplemented "Instruction LDRSW not yet implemented."
	045 Add X8, X8, X9
	046 Add X0, X8, 312
	047 Move X8, [X0]
	048 Move X2, [X0+8]
	049 Move X0, X20
	050 Move W1, W22
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X8, [X19+32]
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Add X9, X8, 309
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 Compare W0, 0
	057 JumpIfEqual {89}
	058 Move W21, W0
	059 Move TEMP, X9
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {66}
	063 Move X0, X8
	064 Call 0x1C5D684
	065 Move X8, X0
	066 Move X8, [X8+192]
	067 Move X1, [X8+24]
	068 Move W8, [X1+309]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {76}
	073 Move X0, X1
	074 Call 0x1C5D684
	075 Move X1, X0
	076 Move X8, [X20]
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Compare X9, 0
	079 JumpIfEqual {86}
	080 Move X10, [X8+176]
	081 Add X10, X10, 8
	082 NotImplemented "Instruction LDUR not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Subtract X9, X9, 1
	085 Add X10, X10, 16
	086 Move W2, 2
	087 Move X0, X20
	088 Call 0x1C5D788
	089 Move TEMP, X9
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {96}
	093 Move X0, X8
	094 Call 0x1C5D684
	095 Move X8, X0
	096 Move X8, [X8+192]
	097 Move X0, [X8+152]
	098 Move W8, [X0+309]
	099 Move TEMP, X8
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {104}
	103 Call 0x1C5D684
	104 Call 0x1C17F10
	105 Move X8, [X19+32]
	106 Move X23, X0
	107 Move W9, [X8+309]
	108 Move TEMP, X9
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {115}
	112 Move X0, X8
	113 Call 0x1C5D684
	114 Move X8, X0
	115 Move X8, [X8+192]
	116 Move X0, X23
	117 Move X1, X20
	118 Move W2, W22
	119 Move X3, [X8+160]
	120 Call 0x2790D44, X0, X1, X2
	121 Move W9, [X10]
	122 Add W9, W9, 2
	123 Add X8, X8, W9
	124 Add X0, X8, 312
	125 Move X8, [X0]
	126 Move X2, [X0+8]
	127 Move X0, X20
	128 Move W1, W22
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move W20, W0
	131 Move X0, [X19+32]
	132 Move W8, [X0+309]
	133 Move TEMP, X8
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfEqual {138}
	137 Call 0x1C5D684
	138 Move X8, [X0+192]
	139 Move X0, [X8+96]
	140 Move W8, [X0+309]
	141 Move TEMP, X8
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfEqual {146}
	145 Call 0x1C5D684
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Move X0, [X19+32]
	151 Move W8, [X0+309]
	152 Move TEMP, X8
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfEqual {157}
	156 Call 0x1C5D684
	157 Move X8, [X0+192]
	158 Move X1, [X8+88]
	159 Move W0, W20
	160 Call AsyncTaskMethodBuilder`1<Int32>.GetTaskForResult, X0
	161 Move X23, X0
	162 Move X0, X23
	163 Move X20, [X31+48]
	164 Move X19, [X31+56]
	165 Move X22, [X31+32]
	166 Move X21, [X31+40]
	167 Move X30, [X31+16]
	168 Move X23, [X31+24]
	169 Add X31, X31, 64
	170 Return X0
	171 Move X20, X0
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X0, X20
	174 Call 0x3EB2AD0
	175 Move X20, X0
	176 Move X0, 0x1963000
	177 Move X0, [X0+2000]
	178 Call 0x1C17D08
	179 Move X8, [X20]
	180 Move X1, [X8]
	181 Call 0x1C18270
	182 Move TEMP, X0
	183 And TEMP, TEMP, 1
	184 Compare TEMP, 1
	185 JumpIfNotEqual {340}
	186 Move X20, [X20]
	187 Call 0x3EB2AE0
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X0, 0x196B000
	190 Move X0, [X0+2216]
	191 Call 0x1C17D08
	192 Compare X20, 0
	193 JumpIfEqual {230}
	194 Move X8, [X20]
	195 Move W9, [X0+304]
	196 Move W10, [X8+304]
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move X20, X31
	199 Move X0, 0x1964000
	200 Move X0, [X0+1976]
	201 Call 0x1C17D08
	202 Move W8, [X0+224]
	203 Compare W8, 0
	204 JumpIfNotEqual {206}
	205 Call 0x1C17DFC
	206 Move X0, [X19+32]
	207 Move W8, [X0+309]
	208 Move TEMP, X8
	209 And TEMP, TEMP, 1
	210 Compare TEMP, 1
	211 JumpIfEqual {213}
	212 Call 0x1C5D684
	213 Move X8, [X0+192]
	214 Move X0, X20
	215 Move X20, [X31+48]
	216 Move X19, [X31+56]
	217 Move X22, [X31+32]
	218 Move X21, [X31+40]
	219 Move X1, [X8+144]
	220 Move X30, [X31+16]
	221 Move X23, [X31+24]
	222 Add X31, X31, 64
	223 Call Task.FromException, X0
	224 Return X0
	225 Move X8, [X8+200]
	226 Add X8, X8, X9
	227 NotImplemented "Instruction LDUR not yet implemented."
	228 NotImplemented "Instruction CMP not yet implemented."
	229 NotImplemented "Instruction CSEL not yet implemented."
	230 Move X0, [X19+32]
	231 Move W8, [X0+309]
	232 Move TEMP, X8
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfEqual {237}
	236 Call 0x1C5D684
	237 Move X8, [X0+192]
	238 Compare X20, 0
	239 JumpIfEqual {270}
	240 Move X0, [X8+16]
	241 Move W8, [X0+309]
	242 Move TEMP, X8
	243 And TEMP, TEMP, 1
	244 Compare TEMP, 1
	245 JumpIfEqual {247}
	246 Call 0x1C5D684
	247 Call 0x1C17F10
	248 Move X8, [X19+32]
	249 Move X23, X0
	250 Move W9, [X8+309]
	251 Move TEMP, X9
	252 And TEMP, TEMP, 1
	253 Compare TEMP, 1
	254 JumpIfEqual {258}
	255 Move X0, X8
	256 Call 0x1C5D684
	257 Move X8, X0
	258 Move X8, [X8+192]
	259 Move X0, X23
	260 Move X1, [X8+128]
	261 Call Task`1<Int32>..ctor, X0
	262 Compare X23, 0
	263 JumpIfEqual {269}
	264 Move X1, [X20+144]
	265 Move X0, X23
	266 Move X2, X20
	267 Move X3, X31
	268 Call Task.TrySetCanceled, X0, X1, X2
	269 Call 0x1C17F20
	270 Move X0, [X8+48]
	271 Move W8, [X0+309]
	272 Move TEMP, X8
	273 And TEMP, TEMP, 1
	274 Compare TEMP, 1
	275 JumpIfEqual {277}
	276 Call 0x1C5D684
	277 Move X8, [X0+184]
	278 Move X23, [X8]
	279 Compare X23, 0
	280 JumpIfNotEqual {162}
	281 Add X0, X31, 8
	282 Move W1, 1
	283 Move X2, X31
	284 Move [X31+8], X31
	285 Call CancellationToken..ctor, X0, X1
	286 Move X0, 0x1964000
	287 Move X0, [X0+1976]
	288 Call 0x1C17D08
	289 Move W8, [X0+224]
	290 Compare W8, 0
	291 JumpIfNotEqual {293}
	292 Call 0x1C17DFC
	293 Move X0, [X19+32]
	294 Move X20, [X31+8]
	295 Move W8, [X0+309]
	296 Move TEMP, X8
	297 And TEMP, TEMP, 1
	298 Compare TEMP, 1
	299 JumpIfEqual {301}
	300 Call 0x1C5D684
	301 Move X8, [X0+192]
	302 Move X0, X20
	303 Move X1, [X8+136]
	304 Call 0x229A598, X0
	305 Move X8, [X19+32]
	306 Move X23, X0
	307 Move W9, [X8+309]
	308 Move TEMP, X9
	309 And TEMP, TEMP, 1
	310 Compare TEMP, 1
	311 JumpIfEqual {315}
	312 Move X0, X8
	313 Call 0x1C5D684
	314 Move X8, X0
	315 Move X8, [X8+192]
	316 Move X0, [X8+48]
	317 Move W8, [X0+309]
	318 Move TEMP, X8
	319 And TEMP, TEMP, 1
	320 Compare TEMP, 1
	321 JumpIfEqual {323}
	322 Call 0x1C5D684
	323 Move X8, [X0+184]
	324 Move [X8], X23
	325 Move X0, [X19+32]
	326 Move W8, [X0+309]
	327 Move TEMP, X8
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfEqual {332}
	331 Call 0x1C5D684
	332 Move X8, [X0+192]
	333 Move X0, [X8+48]
	334 Move W8, [X0+309]
	335 Move TEMP, X8
	336 And TEMP, TEMP, 1
	337 Compare TEMP, 1
	338 JumpIfEqual {162}
	339 Call 0x1C5D684
	340 Move W0, 8
	341 Call 0x3EB2AF0
	342 Move X8, [X20]
	343 Move [X0], X8
	344 Move X1, 0x1724000
	345 Add X1, X1, 3672
	346 Move X2, X31
	347 Call 0x3EB2B00
	348 Move X20, X0
	349 Call 0x3EB2AE0
	350 Move X0, X20
	351 Call 0x1D2D690
	352 Call 0x1991590

Method: System.Boolean get_IsCompleted()

Disassembly:
	0x02791C30 LDR X0, [X1 + 0x20]
	0x02791C34 LDRB W8, [X0 + 0x135]
	0x02791C38 TBNZ X8, 0x0, 0x2791C40
	0x02791C3C BL 0x1C5C684
	0x02791C40 LDR X8, [X31 + 0x10]
	0x02791C44 LDR V0, [X31]
	0x02791C48 STR X8, [X19 + 0x10]
	0x02791C4C STR V0, [X19]
	0x02791C50 LDP X30, X19, [X31 + 0x20]
	0x02791C54 ADD X31, X31, 0x30
	0x02791C58 RET
	0x02791C5C SUB X31, X31, 0x50
	0x02791C60 STR X30, [X31 + 0x20]
	0x02791C64 STP X22, X21, [X31 + 0x30]
	0x02791C68 STP X20, X19, [X31 + 0x40]
	0x02791C6C LDR V0, [X0]
	0x02791C70 LDRH W22, [X0 + 0x10]
	0x02791C74 STRB W31, [X31 + 0x2C]
	0x02791C78 STR W31, [X31 + 0x28]
	0x02791C7C LDR X0, [X2 + 0x20]
	0x02791C80 MOV W19, W1
	0x02791C84 MOV X20, X8
	0x02791C88 STR V0, [X31]
	0x02791C8C ADD X9, X0, 0x135
	0x02791C90 LDRH W9, [X9]
	0x02791C94 TBNZ X9, 0x0, 0x2791CAC
	0x02791C98 MOV X21, X2
	0x02791C9C BL 0x1C5C684
	0x02791CA0 LDR X0, [X21 + 0x20]
	0x02791CA4 ADD X8, X0, 0x135
	0x02791CA8 LDRH W9, [X8]
	0x02791CAC LDR W8, [X31 + 0x28]
	0x02791CB0 LDRB W10, [X31 + 0x2C]
	0x02791CB4 STP X31, X31, [X20]
	0x02791CB8 STR X31, [X20 + 0x10]
	0x02791CBC STR W8, [X31 + 0x18]
	0x02791CC0 STRB W10, [X31 + 0x1C]
	0x02791CC4 TBNZ X9, 0x0, 0x2791CCC
	0x02791CC8 BL 0x1C5C684
	0x02791CCC LDR V0, [X31]
	0x02791CD0 LDRB W9, [X31 + 0x1C]
	0x02791CD4 LDR W10, [X31 + 0x18]
	0x02791CD8 AND W8, W19, 0x1
	0x02791CDC STR V0, [X20]
	0x02791CE0 STRH W22, [X20 + 0x10]
	0x02791CE4 STRB W8, [X20 + 0x12]
	0x02791CE8 STRB W9, [X20 + 0x17]
	0x02791CEC STUR W10, [X20 + 0x13]
	0x02791CF0 LDP X20, X19, [X31 + 0x40]
	0x02791CF4 LDP X22, X21, [X31 + 0x30]
	0x02791CF8 LDR X30, [X31 + 0x20]
	0x02791CFC ADD X31, X31, 0x50
	0x02791D00 RET
	0x02791D04 STP X30, X21, [X31 - 0x20]!
	0x02791D08 STP X20, X19, [X31 + 0x10]
	0x02791D0C ADRP X21, 0x1C49000
	0x02791D10 LDRB W8, [X21 + 0x85F]
	0x02791D14 MOV X20, X1
	0x02791D18 MOV X19, X0
	0x02791D1C TBNZ X8, 0x0, 0x2791D34
	0x02791D20 ADRP X0, 0x1964000
	0x02791D24 LDR X0, [X0 + 0x278]
	0x02791D28 BL 0x1C16CF4
	0x02791D2C MOVZ W8, 0x1
	0x02791D30 STRB W8, [X21 + 0x85F]
	0x02791D34 LDR X0, [X20 + 0x20]
	0x02791D38 LDRB W8, [X0 + 0x135]
	0x02791D3C TBNZ X8, 0x0, 0x2791D44
	0x02791D40 BL 0x1C5C684
	0x02791D44 LDR X8, [X0 + 0xC0]
	0x02791D48 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, [X0]
	006 Compare X19, 0
	007 JumpIfEqual {64}
	008 Move X20, X0
	009 Move X0, [X1+32]
	010 Move X21, X1
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Move X8, [X0+192]
	018 Move X0, [X8+16]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move X8, [X19]
	026 Move W9, [X0+304]
	027 Move W10, [X8+304]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, [X8+200]
	030 Add X8, X8, X9
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, [X21+32]
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Move W8, [X0+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {41}
	040 Call 0x1C5D684
	041 Move X8, [X0+192]
	042 Move X1, [X8+24]
	043 Move W8, [X1+309]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {51}
	048 Move X0, X1
	049 Call 0x1C5D684
	050 Move X1, X0
	051 Move X8, [X19]
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move X0, X19
	062 Move W2, W31
	063 Call 0x1C5D788
	064 Move W0, 1
	065 NotImplemented "Instruction LDRSW not yet implemented."
	066 Add X8, X8, X9
	067 Add X0, X8, 312
	068 Move X8, [X0]
	069 Move X2, [X0+8]
	070 Move X0, X19
	071 Move W1, W20
	072 NotImplemented "Instruction BLR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction CSET not yet implemented."
	075 Move X20, [X31+16]
	076 Move X19, [X31+24]
	077 Move X30, [X31+32]
	078 Move X21, [X31+40]
	079 Return X0
	080 Move X0, X19
	081 Move X20, [X31+16]
	082 Move X19, [X31+24]
	083 Move X1, X31
	084 Move X30, [X31+32]
	085 Move X21, [X31+40]
	086 Call Task.get_IsCompleted, X0
	087 Return X0

Method: System.Boolean get_IsCompletedSuccessfully()

Disassembly:
	0x02791D4C LDR X1, [X8 + 0xD8]
	0x02791D50 BL 0x27A2B78
	0x02791D54 TBZ X0, 0x0, 0x2791D90
	0x02791D58 LDR X0, [X20 + 0x20]
	0x02791D5C LDRB W8, [X0 + 0x135]
	0x02791D60 TBNZ X8, 0x0, 0x2791D68
	0x02791D64 BL 0x1C5C684
	0x02791D68 LDR X8, [X0 + 0xC0]
	0x02791D6C MOV X0, X19
	0x02791D70 LDR X1, [X8 + 0xE0]
	0x02791D74 BL 0x27A26FC
	0x02791D78 CBZ X0, 0x2791D90
	0x02791D7C LDR X8, [X0]
	0x02791D80 LDP X20, X19, [X31 + 0x10]
	0x02791D84 LDP X2, X1, [X8 + 0x168]
	0x02791D88 LDP X30, X21, [X31], #0x20
	0x02791D8C BR X2
	0x02791D90 ADRP X8, 0x1964000
	0x02791D94 LDR X8, [X8 + 0x278]
	0x02791D98 LDP X20, X19, [X31 + 0x10]
	0x02791D9C LDR X8, [X8]
	0x02791DA0 LDR X8, [X8 + 0xB8]
	0x02791DA4 LDR X0, [X8]
	0x02791DA8 LDP X30, X21, [X31], #0x20
	0x02791DAC RET
	0x02791DB0 STP X29, X30, [X31 - 0x50]!
	0x02791DB4 STR X25, [X31 + 0x10]
	0x02791DB8 STP X24, X23, [X31 + 0x20]
	0x02791DBC STP X22, X21, [X31 + 0x30]
	0x02791DC0 STP X20, X19, [X31 + 0x40]
	0x02791DC4 ADD X29, X31, 0x0
	0x02791DC8 SUB X31, X31, 0x10
	0x02791DCC MRS X25, 0xC000
	0x02791DD0 LDR X8, [X25 + 0x28]
	0x02791DD4 MOV X20, X2
	0x02791DD8 MOV X22, X1
	0x02791DDC MOV X19, X0
	0x02791DE0 STUR X8, [X29 - 0x8]
	0x02791DE4 STUR X1, [X29 - 0x10]
	0x02791DE8 LDR X21, [X2 + 0x20]
	0x02791DEC ADD X8, X21, 0x135
	0x02791DF0 LDRH W8, [X8]
	0x02791DF4 TBNZ X8, 0x0, 0x2791E10
	0x02791DF8 MOV X0, X21
	0x02791DFC BL 0x1C5C684
	0x02791E00 LDR X21, [X20 + 0x20]
	0x02791E04 ADD X8, X21, 0x135
	0x02791E08 LDRH W8, [X8]
	0x02791E0C B 0x2791E14
	0x02791E10 MOV X0, X21
	0x02791E14 LDR X9, [X0 + 0xC0]
	0x02791E18 LDR X9, [X9]
	0x02791E1C LDR W23, [X9 + 0xFC]
	0x02791E20 ADD X9, X31, 0x0
	0x02791E24 ADD X10, X23, 0xF
	0x02791E28 AND X10, X10, 0x1FFFFFFFF
	0x02791E2C SUB X24, X9, X10
	0x02791E30 ADD X31, X24, 0x0
	0x02791E34 TBNZ X8, 0x0, 0x2791E48
	0x02791E38 MOV X0, X21
	0x02791E3C BL 0x1C5C684
	0x02791E40 LDR X21, [X20 + 0x20]
	0x02791E44 B 0x2791E4C
	0x02791E48 MOV X0, X21
	0x02791E4C LDR X8, [X0 + 0xC0]
	0x02791E50 MOV X0, X24
	0x02791E54 MOV X2, X23
	0x02791E58 LDR X8, [X8]
	0x02791E5C LDR W8, [X8 + 0x28]
	0x02791E60 CMP W8, 0x0
	0x02791E64 SUB X8, X29, 0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, [X0]
	006 Compare X19, 0
	007 JumpIfEqual {64}
	008 Move X20, X0
	009 Move X0, [X1+32]
	010 Move X21, X1
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Move X8, [X0+192]
	018 Move X0, [X8+16]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move X8, [X19]
	026 Move W9, [X0+304]
	027 Move W10, [X8+304]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, [X8+200]
	030 Add X8, X8, X9
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, [X21+32]
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Move W8, [X0+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {41}
	040 Call 0x1C5D684
	041 Move X8, [X0+192]
	042 Move X1, [X8+24]
	043 Move W8, [X1+309]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {51}
	048 Move X0, X1
	049 Call 0x1C5D684
	050 Move X1, X0
	051 Move X8, [X19]
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move X0, X19
	062 Move W2, W31
	063 Call 0x1C5D788
	064 Move W0, 1
	065 NotImplemented "Instruction LDRSW not yet implemented."
	066 Add X8, X8, X9
	067 Add X0, X8, 312
	068 Move X8, [X0]
	069 Move X2, [X0+8]
	070 Move X0, X19
	071 Move W1, W20
	072 NotImplemented "Instruction BLR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction CSET not yet implemented."
	075 Move X20, [X31+16]
	076 Move X19, [X31+24]
	077 Move X30, [X31+32]
	078 Move X21, [X31+40]
	079 Return X0
	080 Move X0, X19
	081 Move X20, [X31+16]
	082 Move X19, [X31+24]
	083 Move X1, X31
	084 Move X30, [X31+32]
	085 Move X21, [X31+40]
	086 Call Task.get_IsCompletedSuccessfully, X0
	087 Return X0

Method: TResult get_Result()

Disassembly:
	0x02791E68 CSEL X1, X22, X8, LT
	0x02791E6C BL 0x3EB1AC0
	0x02791E70 LDRB W8, [X21 + 0x135]
	0x02791E74 TBNZ X8, 0x0, 0x2791E84
	0x02791E78 MOV X0, X21
	0x02791E7C BL 0x1C5C684
	0x02791E80 MOV X21, X0
	0x02791E84 LDR X8, [X21 + 0xC0]
	0x02791E88 MOV X0, X19
	0x02791E8C MOV X2, X24
	0x02791E90 MOV W3, W23
	0x02791E94 LDR X8, [X8 + 0x8]
	0x02791E98 LDR X8, [X8 + 0x80]
	0x02791E9C ADD X1, X8, 0x40
	0x02791EA0 BL 0x1C16D1C
	0x02791EA4 LDR X0, [X20 + 0x20]
	0x02791EA8 LDRB W8, [X0 + 0x135]
	0x02791EAC TBNZ X8, 0x0, 0x2791EB4
	0x02791EB0 BL 0x1C5C684
	0x02791EB4 LDR X8, [X0 + 0xC0]
	0x02791EB8 MOVZ W1, 0x8
	0x02791EBC LDR X8, [X8 + 0x8]
	0x02791EC0 LDR X8, [X8 + 0x80]
	0x02791EC4 ADD X21, X8, 0x20
	0x02791EC8 MOV X0, X21
	0x02791ECC BL 0x1C16D14
	0x02791ED0 MOV X0, X19
	0x02791ED4 MOV X1, X21
	0x02791ED8 BL 0x1C16D18
	0x02791EDC STR X31, [X0]
	0x02791EE0 LDR X0, [X20 + 0x20]
	0x02791EE4 LDRB W8, [X0 + 0x135]
	0x02791EE8 TBNZ X8, 0x0, 0x2791EF0
	0x02791EEC BL 0x1C5C684
	0x02791EF0 LDR X8, [X0 + 0xC0]
	0x02791EF4 MOVZ W1, 0x1
	0x02791EF8 MOVZ W22, 0x1
	0x02791EFC LDR X8, [X8 + 0x8]
	0x02791F00 LDR X8, [X8 + 0x80]
	0x02791F04 ADD X21, X8, 0x80
	0x02791F08 MOV X0, X21
	0x02791F0C BL 0x1C16D14
	0x02791F10 MOV X0, X19
	0x02791F14 MOV X1, X21
	0x02791F18 BL 0x1C16D18
	0x02791F1C STRB W22, [X0]
	0x02791F20 LDR X0, [X20 + 0x20]
	0x02791F24 LDRB W8, [X0 + 0x135]
	0x02791F28 TBNZ X8, 0x0, 0x2791F30
	0x02791F2C BL 0x1C5C684
	0x02791F30 LDR X8, [X0 + 0xC0]
	0x02791F34 MOVZ W1, 0x2
	0x02791F38 LDR X8, [X8 + 0x8]
	0x02791F3C LDR X8, [X8 + 0x80]
	0x02791F40 ADD X20, X8, 0x60
	0x02791F44 MOV X0, X20
	0x02791F48 BL 0x1C16D14
	0x02791F4C MOV X0, X19
	0x02791F50 MOV X1, X20
	0x02791F54 BL 0x1C16D18
	0x02791F58 STRH W31, [X0]
	0x02791F5C LDR X8, [X25 + 0x28]
	0x02791F60 LDUR X9, [X29 - 0x8]
	0x02791F64 CMP X8, X9
	0x02791F68 B.NE 0x2791F88
	0x02791F6C ADD X31, X29, 0x0
	0x02791F70 LDP X20, X19, [X31 + 0x40]
	0x02791F74 LDP X22, X21, [X31 + 0x30]
	0x02791F78 LDP X24, X23, [X31 + 0x20]
	0x02791F7C LDR X25, [X31 + 0x10]
	0x02791F80 LDP X29, X30, [X31], #0x50
	0x02791F84 RET
	0x02791F88 BL 0x3EB1B20
	0x02791F8C STP X30, X23, [X31 - 0x30]!
	0x02791F90 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, [X0]
	006 Move X21, X0
	007 Compare X19, 0
	008 JumpIfEqual {64}
	009 Move X0, [X1+32]
	010 Move X20, X1
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Move X8, [X0+192]
	018 Move X0, [X8+16]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move X8, [X19]
	026 Move W9, [X0+304]
	027 Move W10, [X8+304]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, [X8+200]
	030 Add X8, X8, X9
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, [X20+32]
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Move W8, [X0+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {41}
	040 Call 0x1C5D684
	041 Move X8, [X0+192]
	042 Move X1, [X8+24]
	043 Move W8, [X1+309]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {51}
	048 Move X0, X1
	049 Call 0x1C5D684
	050 Move X1, X0
	051 Move X8, [X19]
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 2
	062 Move X0, X19
	063 Call 0x1C5D788
	064 Move W0, [X21+8]
	065 Move W9, [X10]
	066 Add W9, W9, 2
	067 Add X8, X8, W9
	068 Add X0, X8, 312
	069 Move X3, [X0]
	070 Move X2, [X0+8]
	071 Move X0, X19
	072 Move W1, W20
	073 Move X20, [X31+16]
	074 Move X19, [X31+24]
	075 Move X30, [X31+32]
	076 Move X21, [X31+40]
	077 CallNoReturn X3
	078 Move X0, X19
	079 Move X1, X31
	080 Call TaskAwaiter.ValidateEnd, X0
	081 Move X0, [X20+32]
	082 Move W8, [X0+309]
	083 Move TEMP, X8
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {88}
	087 Call 0x1C5D684
	088 Move W0, [X19+80]
	089 Move X20, [X31+16]
	090 Move X19, [X31+24]
	091 Move X30, [X31+32]
	092 Move X21, [X31+40]
	093 Return X0

Method: System.Runtime.CompilerServices.ValueTaskAwaiter`1<TResult> GetAwaiter()

Disassembly:
	0x02791F94 STP X20, X19, [X31 + 0x20]
	0x02791F98 LDR X8, [X2 + 0x20]
	0x02791F9C MOV X20, X2
	0x02791FA0 MOV X22, X1
	0x02791FA4 MOV X19, X0
	0x02791FA8 LDRB W9, [X8 + 0x135]
	0x02791FAC TBNZ X9, 0x0, 0x2791FBC
	0x02791FB0 MOV X0, X8
	0x02791FB4 BL 0x1C5C684
	0x02791FB8 MOV X8, X0
	0x02791FBC LDR X8, [X8 + 0xC0]
	0x02791FC0 LDR X8, [X8]
	0x02791FC4 LDR W21, [X8 + 0xFC]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, X0
	005 Move X0, [X1+32]
	006 Move X20, [X8]
	007 Move X19, [X8+8]
	008 Move W9, [X0+309]
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {14}
	013 Call 0x1C5D684
	014 Move X0, X20
	015 Move X1, X19
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Return X0

Method: System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1<TResult> ConfigureAwait(System.Boolean continueOnCapturedContext)

Disassembly:
	0x02791FC8 CBNZ X22, 0x2791FD8
	0x02791FCC MOVZ W0, 0x26
	0x02791FD0 MOV X1, X31
	0x02791FD4 BL 0x338F3E0
	0x02791FD8 LDR X0, [X20 + 0x20]
	0x02791FDC LDRB W8, [X0 + 0x135]
	0x02791FE0 TBNZ X8, 0x0, 0x2791FE8
	0x02791FE4 BL 0x1C5C684
	0x02791FE8 LDR X8, [X0 + 0xC0]
	0x02791FEC MOVZ W1, 0x8
	0x02791FF0 LDR X8, [X8 + 0x8]
	0x02791FF4 LDR X8, [X8 + 0x80]
	0x02791FF8 ADD X23, X8, 0x20
	0x02791FFC MOV X0, X23
	0x02792000 BL 0x1C16D14
	0x02792004 MOV X0, X19
	0x02792008 MOV X1, X23
	0x0279200C BL 0x1C16D18
	0x02792010 STR X22, [X0]
	0x02792014 LDR X0, [X20 + 0x20]
	0x02792018 LDRB W8, [X0 + 0x135]
	0x0279201C TBNZ X8, 0x0, 0x2792024
	0x02792020 BL 0x1C5C684
	0x02792024 LDR X8, [X0 + 0xC0]
	0x02792028 MOV X0, X19
	0x0279202C LDR X8, [X8 + 0x8]
	0x02792030 LDR X8, [X8 + 0x80]
	0x02792034 ADD X1, X8, 0x40
	0x02792038 BL 0x1C16D18

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, X0
	008 Move X0, [X2+32]
	009 Move X19, [X8]
	010 Move W22, [X8+8]
	011 NotImplemented "Instruction LDRH not yet implemented."
	012 Add X9, X0, 309
	013 NotImplemented "Instruction LDRH not yet implemented."
	014 Move W20, W1
	015 Move TEMP, X9
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X21, X2
	020 Call 0x1C5D684
	021 Move X0, [X21+32]
	022 Add X8, X0, 309
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {29}
	028 Call 0x1C5D684
	029 And W31, W20, 1
	030 Move X8, 0x10000
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Or X1, X8, X22
	033 Move X0, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 NotImplemented "Instruction BFM not yet implemented."
	039 Move X30, [X31+48]
	040 Move X23, [X31+56]
	041 Return X0

Method: System.String ToString()

Disassembly:
	0x0279203C MOV W1, W31
	0x02792040 MOV X2, X21
	0x02792044 BL 0x3EB1B10
	0x02792048 LDR X0, [X20 + 0x20]
	0x0279204C LDRB W8, [X0 + 0x135]
	0x02792050 TBNZ X8, 0x0, 0x2792058
	0x02792054 BL 0x1C5C684
	0x02792058 LDR X8, [X0 + 0xC0]
	0x0279205C MOVZ W1, 0x1
	0x02792060 MOVZ W22, 0x1
	0x02792064 LDR X8, [X8 + 0x8]
	0x02792068 LDR X8, [X8 + 0x80]
	0x0279206C ADD X21, X8, 0x80
	0x02792070 MOV X0, X21
	0x02792074 BL 0x1C16D14
	0x02792078 MOV X0, X19
	0x0279207C MOV X1, X21
	0x02792080 BL 0x1C16D18
	0x02792084 STRB W22, [X0]
	0x02792088 LDR X0, [X20 + 0x20]
	0x0279208C LDRB W8, [X0 + 0x135]
	0x02792090 TBNZ X8, 0x0, 0x2792098
	0x02792094 BL 0x1C5C684
	0x02792098 LDR X8, [X0 + 0xC0]
	0x0279209C MOVZ W1, 0x2
	0x027920A0 LDR X8, [X8 + 0x8]
	0x027920A4 LDR X8, [X8 + 0x80]
	0x027920A8 ADD X20, X8, 0x60
	0x027920AC MOV X0, X20
	0x027920B0 BL 0x1C16D14
	0x027920B4 MOV X0, X19
	0x027920B8 MOV X1, X20
	0x027920BC BL 0x1C16D18
	0x027920C0 LDP X20, X19, [X31 + 0x20]
	0x027920C4 LDP X22, X21, [X31 + 0x10]
	0x027920C8 STRH W31, [X0]
	0x027920CC LDP X30, X23, [X31], #0x30
	0x027920D0 RET
	0x027920D4 STR X30, [X31 - 0x40]!
	0x027920D8 STP X24, X23, [X31 + 0x10]
	0x027920DC STP X22, X21, [X31 + 0x20]
	0x027920E0 STP X20, X19, [X31 + 0x30]
	0x027920E4 LDR X8, [X3 + 0x20]
	0x027920E8 MOV X20, X3
	0x027920EC MOV W22, W2
	0x027920F0 MOV X23, X1
	0x027920F4 LDRB W9, [X8 + 0x135]
	0x027920F8 MOV X19, X0
	0x027920FC TBNZ X9, 0x0, 0x279210C

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1C49000
	007 Move W8, [X21+2142]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x1964000
	015 Move X0, [X0+632]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2142], W8
	019 Move X0, [X19+32]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Move X8, [X0+192]
	027 Move X0, X20
	028 Move X1, [X8+216]
	029 Call 0x27A3A5C
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {57}
	034 Move X0, [X19+32]
	035 Move W8, [X0+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {41}
	040 Call 0x1C5D684
	041 Move X8, [X0+192]
	042 Move X0, X20
	043 Move X1, [X8+224]
	044 Call 0x27A34B4
	045 Move [X31+12], W0
	046 Move X0, [X19+32]
	047 Move W8, [X0+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {53}
	052 Call 0x1C5D684
	053 Move X8, [X0+192]
	054 Add X0, X31, 12
	055 Move X1, [X8+232]
	056 Call Int32.ToString, X0
	057 Move X8, 0x1964000
	058 Move X8, [X8+632]
	059 Move X8, [X8]
	060 Move X8, [X8+184]
	061 Move X0, [X8]
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X30, [X31+16]
	065 Move X21, [X31+24]
	066 Add X31, X31, 48
	067 Return X0

