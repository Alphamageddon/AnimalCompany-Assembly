Type: System.Threading.Tasks.TaskScheduler

Method: System.Void QueueTask(System.Threading.Tasks.Task task)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean TryExecuteTaskInline(System.Threading.Tasks.Task task, System.Boolean taskWasPreviouslyQueued)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean TryRunInline(System.Threading.Tasks.Task task, System.Boolean taskWasPreviouslyQueued)

Disassembly:
	0x033F46A0 LDR X0, [X0 + 0x868]
	0x033F46A4 BL 0x1C16D08
	0x033F46A8 MOV X1, X0
	0x033F46AC MOV X0, X19
	0x033F46B0 BL 0x1C16DEC
	0x033F46B4 STR X30, [X31 - 0x40]!
	0x033F46B8 STP X24, X23, [X31 + 0x10]
	0x033F46BC STP X22, X21, [X31 + 0x20]
	0x033F46C0 STP X20, X19, [X31 + 0x30]
	0x033F46C4 ADRP X24, 0xFE9000
	0x033F46C8 ADRP X23, 0xD27000
	0x033F46CC LDRB W8, [X24 + 0x494]
	0x033F46D0 LDR X23, [X23 + 0x728]
	0x033F46D4 MOV X21, X3
	0x033F46D8 MOV W22, W2
	0x033F46DC MOV X19, X1
	0x033F46E0 MOV X20, X0
	0x033F46E4 TBNZ X8, 0x0, 0x33F4708
	0x033F46E8 ADRP X0, 0xD27000
	0x033F46EC LDR X0, [X0 + 0x728]
	0x033F46F0 BL 0x1C16CF4
	0x033F46F4 ADRP X0, 0xD39000
	0x033F46F8 LDR X0, [X0 + 0x870]
	0x033F46FC BL 0x1C16CF4
	0x033F4700 MOVZ W8, 0x1
	0x033F4704 STRB W8, [X24 + 0x494]
	0x033F4708 MOV X0, X20
	0x033F470C MOV X1, X31
	0x033F4710 BL 0x33BDD8C
	0x033F4714 STR X19, [X20 + 0x10]
	0x033F4718 STR W22, [X20 + 0x18]
	0x033F471C STR X21, [X20 + 0x20]
	0x033F4720 LDR X0, [X23]
	0x033F4724 LDR W8, [X0 + 0xE0]
	0x033F4728 CBNZ W8, 0x33F4744
	0x033F472C BL 0x1C16DFC
	0x033F4730 LDR X0, [X23]
	0x033F4734 LDR X19, [X20 + 0x10]
	0x033F4738 LDR W8, [X0 + 0xE0]
	0x033F473C CBNZ W8, 0x33F4744
	0x033F4740 BL 0x1C16DFC
	0x033F4744 ADRP X20, 0xFE5000
	0x033F4748 LDRB W8, [X20 + 0x828]
	0x033F474C CBNZ W8, 0x33F4770
	0x033F4750 ADRP X0, 0xD27000
	0x033F4754 LDR X0, [X0 + 0x728]
	0x033F4758 BL 0x1C16CF4
	0x033F475C ADRP X0, 0xD00000
	0x033F4760 LDR X0, [X0 + 0x7B8]
	0x033F4764 BL 0x1C16CF4
	0x033F4768 MOVZ W8, 0x1
	0x033F476C STRB W8, [X20 + 0x828]
	0x033F4770 ADRP X20, 0xD00000
	0x033F4774 LDR X20, [X20 + 0x7B8]
	0x033F4778 LDR X0, [X20]
	0x033F477C LDR W8, [X0 + 0xE0]
	0x033F4780 CBNZ W8, 0x33F478C
	0x033F4784 BL 0x1C16DFC
	0x033F4788 LDR X0, [X20]
	0x033F478C LDR X8, [X0 + 0xB8]
	0x033F4790 LDRB W8, [X8 + 0x10]
	0x033F4794 CBZ W8, 0x33F47C0
	0x033F4798 LDR X0, [X23]
	0x033F479C LDR W8, [X0 + 0xE0]
	0x033F47A0 CBNZ W8, 0x33F47A8
	0x033F47A4 BL 0x1C16DFC
	0x033F47A8 MOV X0, X19
	0x033F47AC LDP X20, X19, [X31 + 0x30]
	0x033F47B0 LDP X22, X21, [X31 + 0x20]
	0x033F47B4 LDP X24, X23, [X31 + 0x10]
	0x033F47B8 LDR X30, [X31], #0x40
	0x033F47BC B 0x33EE67C
	0x033F47C0 LDP X20, X19, [X31 + 0x30]
	0x033F47C4 LDP X22, X21, [X31 + 0x20]
	0x033F47C8 LDP X24, X23, [X31 + 0x10]
	0x033F47CC LDR X30, [X31], #0x40
	0x033F47D0 RET
	0x033F47D4 MOV W2, W31
	0x033F47D8 B 0x33F3C10
	0x033F47DC SUB X31, X31, 0x60
	0x033F47E0 STP X30, X25, [X31 + 0x20]
	0x033F47E4 STP X24, X23, [X31 + 0x30]
	0x033F47E8 STP X22, X21, [X31 + 0x40]
	0x033F47EC STP X20, X19, [X31 + 0x50]
	0x033F47F0 ADRP X19, 0xFE9000
	0x033F47F4 ADRP X24, 0xD00000
	0x033F47F8 LDRB W8, [X19 + 0x472]
	0x033F47FC LDR X24, [X24 + 0x7B8]
	0x033F4800 MOV W21, W2
	0x033F4804 MOV X20, X1
	0x033F4808 MOV X22, X0
	0x033F480C TBNZ X8, 0x0, 0x33F4878
	0x033F4810 ADRP X0, 0xD39000
	0x033F4814 LDR X0, [X0 + 0x6F0]
	0x033F4818 BL 0x1C16CF4
	0x033F481C ADRP X0, 0xD39000
	0x033F4820 LDR X0, [X0 + 0x6F8]
	0x033F4824 BL 0x1C16CF4
	0x033F4828 ADRP X0, 0xD39000
	0x033F482C LDR X0, [X0 + 0x878]
	0x033F4830 BL 0x1C16CF4
	0x033F4834 ADRP X0, 0xD39000
	0x033F4838 LDR X0, [X0 + 0x880]
	0x033F483C BL 0x1C16CF4
	0x033F4840 ADRP X0, 0xD39000
	0x033F4844 LDR X0, [X0 + 0x888]
	0x033F4848 BL 0x1C16CF4
	0x033F484C ADRP X0, 0xD39000
	0x033F4850 LDR X0, [X0 + 0x890]
	0x033F4854 BL 0x1C16CF4
	0x033F4858 ADRP X0, 0xD39000
	0x033F485C LDR X0, [X0 + 0x7D0]
	0x033F4860 BL 0x1C16CF4
	0x033F4864 ADRP X0, 0xD00000
	0x033F4868 LDR X0, [X0 + 0x7B8]
	0x033F486C BL 0x1C16CF4
	0x033F4870 MOVZ W8, 0x1
	0x033F4874 STRB W8, [X19 + 0x472]
	0x033F4878 STRB W31, [X31 + 0x4]
	0x033F487C LDR X19, [X22 + 0x40]!
	0x033F4880 BL 0x1C16D44
	0x033F4884 LDR X0, [X24]
	0x033F4888 LDR W8, [X0 + 0xE0]
	0x033F488C CBNZ W8, 0x33F4898
	0x033F4890 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFEA000
	007 Move W8, [X22+1211]
	008 Move W20, W2
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD01000
	016 Move X0, [X0+1976]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1211], W8
	020 Compare X19, 0
	021 JumpIfEqual {96}
	022 Move X0, [X19+40]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Compare X0, 0
	025 JumpIfEqual {33}
	026 And W2, W20, 1
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Compare X0, 0
	034 JumpIfEqual {126}
	035 Move X8, [X19+24]
	036 Compare X8, 0
	037 JumpIfEqual {125}
	038 Move W22, [X19+56]
	039 Call 0x1C17D44
	040 Move TEMP, X22
	041 And TEMP, TEMP, 0x20000
	042 Compare TEMP, 0x20000
	043 JumpIfEqual {125}
	044 Move W22, [X19+56]
	045 Call 0x1C17D44
	046 And W8, W22, 0x600000
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X8, 0xD01000
	049 Move X8, [X8+1976]
	050 Move X0, [X8]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Call Task.get_CurrentStackGuard
	056 Compare X0, 0
	057 JumpIfEqual {96}
	058 Move W8, [X0+16]
	059 Move X22, X0
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X0, X31
	062 Call RuntimeHelpers.TryEnsureSufficientExecutionStack
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {125}
	067 Move W8, [X22+16]
	068 Add W8, W8, 1
	069 Move [X22+16], W8
	070 Move X8, [X21]
	071 Move X9, [X8+392]
	072 Move X3, [X8+400]
	073 And W2, W20, 1
	074 Move X0, X21
	075 Move X1, X19
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move W8, [X22+16]
	078 Subtract W8, W8, 1
	079 NotImplemented "Instruction BIC not yet implemented."
	080 Move [X22+16], W8
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {125}
	085 Move W20, [X19+56]
	086 Call 0x1C17D44
	087 Move TEMP, X20
	088 And TEMP, TEMP, 0x20000
	089 Compare TEMP, 0x20000
	090 JumpIfEqual {95}
	091 Move W19, [X19+56]
	092 Call 0x1C17D44
	093 And W8, W19, 0x600000
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move W0, 1
	096 Call 0x1C17F20
	097 Move X0, 0xD00000
	098 Move X0, [X0+1456]
	099 Call 0x1C17D08
	100 Call 0x1C17F10
	101 Move X19, X0
	102 Move X0, 0xD3A000
	103 Move X0, [X0+2080]
	104 Call 0x1C17D08
	105 Move X1, X0
	106 Move X0, X19
	107 Move X2, X31
	108 Call InvalidOperationException..ctor, X0, X1
	109 Move X0, 0xD3A000
	110 Move X0, [X0+2088]
	111 Call 0x1C17D08
	112 Move X1, X0
	113 Move X0, X19
	114 Call 0x1C17DEC
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Call 0x3EB2AD0
	117 Move X19, [X0]
	118 Call 0x3EB2AE0
	119 Move W8, [X22+16]
	120 Subtract W8, W8, 1
	121 NotImplemented "Instruction BIC not yet implemented."
	122 Move [X22+16], W8
	123 Compare X19, 0
	124 JumpIfNotEqual {136}
	125 Move W0, W31
	126 Move X20, [X31+32]
	127 Move X19, [X31+40]
	128 Move X22, [X31+16]
	129 Move X21, [X31+24]
	130 Move X30, [X31+48]
	131 Return X0
	132 Move W8, [X22+16]
	133 Subtract W8, W8, 1
	134 NotImplemented "Instruction BIC not yet implemented."
	135 Move [X22+16], W8
	136 Move X0, X19
	137 Call 0x1C17F18
	138 Move W8, [X22+16]
	139 Subtract W8, W8, 1
	140 NotImplemented "Instruction BIC not yet implemented."
	141 Move [X22+16], W8
	142 Compare X19, 0
	143 JumpIfNotEqual {145}
	144 Call 0x1D2D690
	145 Move X0, X19
	146 Call 0x1C17F18
	147 Call 0x1991590

Method: System.Boolean TryDequeue(System.Threading.Tasks.Task task)

Disassembly:
	0x033FB110 BL 0x1C16D08
	0x033FB114 BL 0x1C16F10

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void NotifyWorkItemProgress()

Disassembly:
	0x033FB118 MOV X19, X0

ISIL:
	001 Return 

Method: System.Boolean get_RequiresAtomicStartTransition()

Disassembly:
	0x033FB11C ADRP X0, 0xD27000
	0x033FB120 LDR X0, [X0 + 0x2D8]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x033FB124 BL 0x1C16D08
	0x033FB128 MOV X20, X0

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Threading.Tasks.TaskScheduler get_Default()

Disassembly:
	0x033FB12C ADRP X0, 0xD27000
	0x033FB130 LDR X0, [X0 + 0x108]
	0x033FB134 BL 0x1C16D08
	0x033FB138 MOV X2, X0
	0x033FB13C MOV X0, X19
	0x033FB140 MOV X1, X20
	0x033FB144 MOV X3, X31
	0x033FB148 BL 0x3311888
	0x033FB14C ADRP X0, 0xD32000
	0x033FB150 LDR X0, [X0 + 0xB48]
	0x033FB154 BL 0x1C16D08
	0x033FB158 MOV X1, X0
	0x033FB15C MOV X0, X19
	0x033FB160 BL 0x1C16DEC
	0x033FB164 STR X30, [X31 - 0x50]!
	0x033FB168 STP X26, X25, [X31 + 0x10]
	0x033FB16C STP X24, X23, [X31 + 0x20]
	0x033FB170 STP X22, X21, [X31 + 0x30]
	0x033FB174 STP X20, X19, [X31 + 0x40]
	0x033FB178 ADRP X25, 0xFE2000
	0x033FB17C LDRB W8, [X25 + 0x4CF]
	0x033FB180 MOV W20, W5

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFE3000
	005 Move X19, 0xD01000
	006 Move W8, [X20+1212]
	007 Move X19, [X19+2024]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD01000
	013 Move X0, [X0+2024]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1212], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Threading.Tasks.TaskScheduler get_Current()

Disassembly:
	0x033F5008 LDR X0, [X0 + 0x8B8]
	0x033F500C BL 0x1C16D08
	0x033F5010 MOV X2, X0
	0x033F5014 MOV X0, X19
	0x033F5018 MOV X1, X20
	0x033F501C MOV X3, X31
	0x033F5020 BL 0x3311888
	0x033F5024 ADRP X0, 0xD38000
	0x033F5028 LDR X0, [X0 + 0x8C0]
	0x033F502C BL 0x1C16D08
	0x033F5030 MOV X1, X0
	0x033F5034 MOV X0, X19
	0x033F5038 BL 0x1C16DEC
	0x033F503C SUB X31, X31, 0x80
	0x033F5040 STP X30, X1, [X31 + 0x40]
	0x033F5044 STP X24, X23, [X31 + 0x50]
	0x033F5048 STP X22, X21, [X31 + 0x60]
	0x033F504C STP X20, X19, [X31 + 0x70]
	0x033F5050 ADRP X20, 0xFE8000
	0x033F5054 LDRB W8, [X20 + 0x47C]
	0x033F5058 MOV W19, W0
	0x033F505C TBNZ X8, 0x0, 0x33F50D4
	0x033F5060 ADRP X0, 0xD28000
	0x033F5064 LDR X0, [X0 + 0xE48]
	0x033F5068 BL 0x1C16CF4
	0x033F506C ADRP X0, 0xD06000
	0x033F5070 LDR X0, [X0 + 0x7D8]
	0x033F5074 BL 0x1C16CF4
	0x033F5078 ADRP X0, 0xD38000
	0x033F507C LDR X0, [X0 + 0x8C8]
	0x033F5080 BL 0x1C16CF4
	0x033F5084 ADRP X0, 0xCFF000
	0x033F5088 LDR X0, [X0 + 0x7B8]
	0x033F508C BL 0x1C16CF4
	0x033F5090 ADRP X0, 0xD06000
	0x033F5094 LDR X0, [X0 + 0xC78]
	0x033F5098 BL 0x1C16CF4
	0x033F509C ADRP X0, 0xD06000
	0x033F50A0 LDR X0, [X0 + 0xC80]
	0x033F50A4 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFE9000
	005 Move X19, 0xD07000
	006 Move W8, [X20+1213]
	007 Move X19, [X19+2024]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD07000
	013 Move X0, [X0+2024]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1213], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call TaskScheduler.get_InternalCurrent
	023 Compare X0, 0
	024 JumpIfNotEqual {47}
	025 Move X0, [X19]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X20, 0xFE5000
	031 Move W8, [X20+2189]
	032 Compare W8, 0
	033 JumpIfNotEqual {39}
	034 Move X0, 0xD07000
	035 Move X0, [X0+2024]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+2189], W8
	039 Move X0, [X19]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X19]
	045 Move X8, [X0+184]
	046 Move X0, [X8+8]
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Return X0

Method: System.Threading.Tasks.TaskScheduler get_InternalCurrent()

Disassembly:
	0x033F3CD0 LDP X20, X19, [X31 + 0x20]
	0x033F3CD4 LDP X22, X21, [X31 + 0x10]
	0x033F3CD8 LDR X30, [X31], #0x30
	0x033F3CDC BR X3
	0x033F3CE0 BL 0x1C16F20
	0x033F3CE4 STR X30, [X31 - 0x20]!
	0x033F3CE8 STP X20, X19, [X31 + 0x10]
	0x033F3CEC LDR X19, [X0 + 0x48]
	0x033F3CF0 MOV X20, X0
	0x033F3CF4 BL 0x1C16D44
	0x033F3CF8 CBNZ X19, 0x33F3D10
	0x033F3CFC MOVZ W1, 0x1
	0x033F3D00 MOV X0, X20
	0x033F3D04 BL 0x33F0788
	0x033F3D08 MOV X19, X0
	0x033F3D0C CBZ X0, 0x33F3D28
	0x033F3D10 BL 0x1C16D44
	0x033F3D14 MOVZ W8, 0x1
	0x033F3D18 STR W8, [X19 + 0x38]
	0x033F3D1C LDP X20, X19, [X31 + 0x10]
	0x033F3D20 LDR X30, [X31], #0x20
	0x033F3D24 RET
	0x033F3D28 BL 0x1C16F20
	0x033F3D2C STR X30, [X31 - 0x30]!
	0x033F3D30 STP X22, X21, [X31 + 0x10]
	0x033F3D34 STP X20, X19, [X31 + 0x20]
	0x033F3D38 ADRP X22, 0xFEA000
	0x033F3D3C ADRP X21, 0xD08000
	0x033F3D40 LDRB W8, [X22 + 0x469]
	0x033F3D44 LDR X21, [X21 + 0x7D8]
	0x033F3D48 MOV X19, X1
	0x033F3D4C MOV X20, X0
	0x033F3D50 TBNZ X8, 0x0, 0x33F3D68
	0x033F3D54 ADRP X0, 0xD08000
	0x033F3D58 LDR X0, [X0 + 0x7D8]
	0x033F3D5C BL 0x1C16CF4
	0x033F3D60 MOVZ W8, 0x1
	0x033F3D64 STRB W8, [X22 + 0x469]
	0x033F3D68 MOV X0, X20
	0x033F3D6C BL 0x33F3CE4
	0x033F3D70 LDR X0, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFEB000
	005 Move X19, 0xD02000
	006 Move W8, [X20+1214]
	007 Move X19, [X19+1976]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD02000
	013 Move X0, [X0+1976]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1214], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, 0xFE7000
	023 Move W8, [X20+2190]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0xD02000
	027 Move X0, [X0+1976]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+2190], W8
	031 Move X0, [X19]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X19]
	037 Call 0x1C17D0C
	038 Move X19, [X0]
	039 Compare X19, 0
	040 JumpIfEqual {48}
	041 Move X0, X19
	042 Call Task.get_Options, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 16
	045 Compare TEMP, 16
	046 JumpIfEqual {48}
	047 Move X0, [X19+40]
	048 Move X0, X31
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Return X0

Method: System.Threading.Tasks.TaskScheduler FromCurrentSynchronizationContext()

Disassembly:
	0x033FB184 MOV X23, X4
	0x033FB188 MOV W19, W3
	0x033FB18C MOV W21, W2
	0x033FB190 MOV X24, X1
	0x033FB194 MOV X22, X0
	0x033FB198 TBNZ X8, 0x0, 0x33FB1BC
	0x033FB19C ADRP X0, 0xD26000
	0x033FB1A0 LDR X0, [X0 + 0x830]
	0x033FB1A4 BL 0x1C16CF4
	0x033FB1A8 ADRP X0, 0xD27000
	0x033FB1AC LDR X0, [X0 + 0x2F8]
	0x033FB1B0 BL 0x1C16CF4
	0x033FB1B4 MOVZ W8, 0x1
	0x033FB1B8 STRB W8, [X25 + 0x4CF]
	0x033FB1BC CBZ X24, 0x33FB2A8
	0x033FB1C0 CBZ X23, 0x33FB2A8
	0x033FB1C4 TBNZ X19, 0x1F, 0x33FB300
	0x033FB1C8 TBNZ X21, 0x1F, 0x33FB300
	0x033FB1CC LDR W8, [X24 + 0x18]
	0x033FB1D0 SUB W9, W8, W21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xFE3000
	005 Move X20, 0xD33000
	006 Move W8, [X19+1215]
	007 Move X20, [X20+2776]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD33000
	013 Move X0, [X0+2776]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1215], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Call SynchronizationContextTaskScheduler..ctor, X0
	021 Move X0, X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return X0

Method: System.Int32 get_Id()

Disassembly:
	0x033F4894 LDR X0, [X24]
	0x033F4898 LDR X8, [X0 + 0xB8]
	0x033F489C ADRP X25, 0xD39000
	0x033F48A0 LDR X8, [X8 + 0x8]
	0x033F48A4 LDR X25, [X25 + 0x6F8]
	0x033F48A8 CMP X19, X8
	0x033F48AC B.EQ 0x33F4918
	0x033F48B0 LDR X0, [X25]
	0x033F48B4 CBZ X19, 0x33F48C4
	0x033F48B8 LDR X8, [X19]
	0x033F48BC CMP X8, X0
	0x033F48C0 B.EQ 0x33F4918
	0x033F48C4 BL 0x1C16F10
	0x033F48C8 ADRP X8, 0xD39000
	0x033F48CC LDR X8, [X8 + 0x6F0]
	0x033F48D0 MOV X23, X0
	0x033F48D4 LDR X1, [X8]
	0x033F48D8 BL 0x319AF58
	0x033F48DC CBZ X23, 0x33F4A58
	0x033F48E0 ADRP X8, 0xD39000
	0x033F48E4 LDR X8, [X8 + 0x878]
	0x033F48E8 MOV X0, X23
	0x033F48EC MOV X1, X19
	0x033F48F0 LDR X2, [X8]
	0x033F48F4 BL 0x319B66C
	0x033F48F8 BL 0x1C16D44
	0x033F48FC ADD X1, X31, 0x18
	0x033F4900 ADD X2, X31, 0x10
	0x033F4904 ADD X3, X31, 0x8
	0x033F4908 MOV X0, X22
	0x033F490C STP X19, X23, [X31 + 0x10]
	0x033F4910 STR X31, [X31 + 0x8]
	0x033F4914 BL 0x1C2416C
	0x033F4918 LDR X19, [X22]
	0x033F491C BL 0x1C16D44
	0x033F4920 CBZ X19, 0x33F4938
	0x033F4924 LDR X8, [X25]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xFEA000
	006 Move W8, [X20+1216]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD08000
	013 Move X0, [X0+2024]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1216], W8
	017 Add X19, X19, 16
	018 Move W20, [X19]
	019 Call 0x1C17D44
	020 Compare W20, 0
	021 JumpIfNotEqual {41}
	022 Move X21, 0xD08000
	023 Move X21, [X21+2024]
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Add X0, X8, 16
	032 Call 0x1C25278
	033 Compare W0, 0
	034 JumpIfEqual {24}
	035 Move W20, W0
	036 Call 0x1C17D44
	037 Move X0, X19
	038 Move W1, W20
	039 Move W2, W31
	040 Call 0x1C251D4
	041 Move W19, [X19]
	042 Call 0x1C17D44
	043 Move W0, W19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: System.Boolean TryExecuteTask(System.Threading.Tasks.Task task)

Disassembly:
	0x033FB288 MOV X19, X0
	0x033FB28C ADRP X0, 0xD27000
	0x033FB290 LDR X0, [X0 + 0x300]
	0x033FB294 BL 0x1C16D08
	0x033FB298 MOV X20, X0
	0x033FB29C ADRP X0, 0xD20000
	0x033FB2A0 LDR X0, [X0 + 0x660]
	0x033FB2A4 B 0x33FB398
	0x033FB2A8 ADRP X8, 0xD27000
	0x033FB2AC ADRP X9, 0xD27000
	0x033FB2B0 LDR X8, [X8 + 0x308]
	0x033FB2B4 LDR X9, [X9 + 0x2D8]
	0x033FB2B8 CMP X24, 0x0
	0x033FB2BC CSEL X0, X9, X8, EQ
	0x033FB2C0 BL 0x1C16D08
	0x033FB2C4 MOV X19, X0
	0x033FB2C8 ADRP X0, 0xCFD000
	0x033FB2CC LDR X0, [X0 + 0x528]
	0x033FB2D0 BL 0x1C16D08
	0x033FB2D4 BL 0x1C16F10
	0x033FB2D8 MOV X20, X0
	0x033FB2DC ADRP X0, 0xD27000
	0x033FB2E0 LDR X0, [X0 + 0x2E0]
	0x033FB2E4 BL 0x1C16D08
	0x033FB2E8 MOV X2, X0
	0x033FB2EC MOV X0, X20
	0x033FB2F0 MOV X1, X19
	0x033FB2F4 MOV X3, X31
	0x033FB2F8 BL 0x3315F7C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {14}
	005 Move X9, [X1+40]
	006 Move X8, X1
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W1, 1
	009 Move X0, X8
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Call Task.ExecuteEntry, X0, X1
	013 Return X0
	014 Call 0x1C17F20
	015 Move X0, 0xCF9000
	016 Move X0, [X0+1456]
	017 Call 0x1C17D08
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Move X0, 0xD33000
	021 Move X0, [X0+2800]
	022 Call 0x1C17D08
	023 Move X1, X0
	024 Move X0, X19
	025 Move X2, X31
	026 Call InvalidOperationException..ctor, X0, X1
	027 Move X0, 0xD33000
	028 Move X0, [X0+2808]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X19
	032 Call 0x1C17DEC

Method: System.Void PublishUnobservedTaskException(System.Object sender, System.Threading.Tasks.UnobservedTaskExceptionEventArgs ueea)

Disassembly:
	0x033F9C30 CBNZ W8, 0x33F9C38
	0x033F9C34 BL 0x1C16DFC
	0x033F9C38 ADRP X20, 0xFE0000
	0x033F9C3C LDRB W8, [X20 + 0x828]
	0x033F9C40 CBNZ W8, 0x33F9C64
	0x033F9C44 ADRP X0, 0xD22000
	0x033F9C48 LDR X0, [X0 + 0x728]
	0x033F9C4C BL 0x1C16CF4
	0x033F9C50 ADRP X0, 0xCFB000
	0x033F9C54 LDR X0, [X0 + 0x7B8]
	0x033F9C58 BL 0x1C16CF4
	0x033F9C5C MOVZ W8, 0x1
	0x033F9C60 STRB W8, [X20 + 0x828]
	0x033F9C64 ADRP X20, 0xCFB000
	0x033F9C68 LDR X20, [X20 + 0x7B8]
	0x033F9C6C LDR X0, [X20]
	0x033F9C70 LDR W8, [X0 + 0xE0]
	0x033F9C74 CBNZ W8, 0x33F9C80
	0x033F9C78 BL 0x1C16DFC
	0x033F9C7C LDR X0, [X20]
	0x033F9C80 LDR X8, [X0 + 0xB8]
	0x033F9C84 LDRB W8, [X8 + 0x10]
	0x033F9C88 CBZ W8, 0x33F9CB0
	0x033F9C8C LDR X0, [X21]
	0x033F9C90 LDR W8, [X0 + 0xE0]
	0x033F9C94 CBNZ W8, 0x33F9C9C
	0x033F9C98 BL 0x1C16DFC
	0x033F9C9C MOV X0, X19
	0x033F9CA0 LDP X20, X19, [X31 + 0x20]
	0x033F9CA4 LDP X22, X21, [X31 + 0x10]
	0x033F9CA8 LDP X30, X23, [X31], #0x30
	0x033F9CAC B 0x33EE67C
	0x033F9CB0 LDP X20, X19, [X31 + 0x20]
	0x033F9CB4 LDP X22, X21, [X31 + 0x10]
	0x033F9CB8 LDP X30, X23, [X31], #0x30
	0x033F9CBC RET
	0x033F9CC0 STR X30, [X31 - 0x40]!
	0x033F9CC4 STP X24, X23, [X31 + 0x10]
	0x033F9CC8 STP X22, X21, [X31 + 0x20]
	0x033F9CCC STP X20, X19, [X31 + 0x30]
	0x033F9CD0 ADRP X21, 0xFE4000
	0x033F9CD4 ADRP X22, 0xD34000
	0x033F9CD8 LDRB W8, [X21 + 0x4BA]
	0x033F9CDC LDR X22, [X22 + 0xAC8]
	0x033F9CE0 MOV X20, X1
	0x033F9CE4 MOV X19, X0
	0x033F9CE8 TBNZ X8, 0x0, 0x33F9D24
	0x033F9CEC ADRP X0, 0xD22000
	0x033F9CF0 LDR X0, [X0 + 0x728]
	0x033F9CF4 BL 0x1C16CF4
	0x033F9CF8 ADRP X0, 0xD34000
	0x033F9CFC LDR X0, [X0 + 0x900]
	0x033F9D00 BL 0x1C16CF4
	0x033F9D04 ADRP X0, 0xD34000
	0x033F9D08 LDR X0, [X0 + 0x950]
	0x033F9D0C BL 0x1C16CF4
	0x033F9D10 ADRP X0, 0xD34000
	0x033F9D14 LDR X0, [X0 + 0xAC8]
	0x033F9D18 BL 0x1C16CF4
	0x033F9D1C MOVZ W8, 0x1
	0x033F9D20 STRB W8, [X21 + 0x4BA]
	0x033F9D24 LDR X2, [X22]
	0x033F9D28 MOV X0, X19
	0x033F9D2C MOV X1, X20
	0x033F9D30 BL 0x269F268
	0x033F9D34 TBZ X0, 0x0, 0x33F9ED4
	0x033F9D38 ADRP X20, 0xD22000
	0x033F9D3C LDR X20, [X20 + 0x728]
	0x033F9D40 LDR X0, [X20]
	0x033F9D44 LDR W8, [X0 + 0xE0]
	0x033F9D48 CBNZ W8, 0x33F9D60
	0x033F9D4C BL 0x1C16DFC
	0x033F9D50 LDR X0, [X20]
	0x033F9D54 LDR W8, [X0 + 0xE0]
	0x033F9D58 CBNZ W8, 0x33F9D60
	0x033F9D5C BL 0x1C16DFC
	0x033F9D60 ADRP X21, 0xFE0000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xFE5000
	007 Move X22, 0xD03000
	008 Move W8, [X19+1217]
	009 Move X22, [X22+2024]
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD03000
	017 Move X0, [X0+2024]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+1217], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X22]
	027 Move X8, [X0+184]
	028 Move X19, [X8+32]
	029 Compare X19, 0
	030 JumpIfEqual {59}
	031 Move X0, X19
	032 Move X1, X31
	033 Call Lock.Acquire, X0
	034 Move X0, [X22]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X22]
	040 Move X8, [X0+184]
	041 Move X8, [X8+24]
	042 Compare X8, 0
	043 JumpIfEqual {50}
	044 Move X0, [X8+64]
	045 Move X9, [X8+24]
	046 Move X3, [X8+40]
	047 Move X1, X21
	048 Move X2, X20
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X0, X19
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X1, X31
	056 Move X30, [X31+48]
	057 Call Lock.Release, X0
	058 Return 
	059 Call 0x1C17F20
	060 Move X21, X0
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X0, X21
	063 Call 0x3EB2AD0
	064 Move X20, [X0]
	065 Call 0x3EB2AE0
	066 Move X0, X19
	067 Move X1, X31
	068 Call Lock.Release, X0
	069 Compare X20, 0
	070 JumpIfNotEqual {78}
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X30, [X31+48]
	076 Return 
	077 Move X20, X31
	078 Move X0, X20
	079 Call 0x1C17F18
	080 Move X21, X0
	081 Move X0, X19
	082 Move X1, X31
	083 Call Lock.Release, X0
	084 Compare X20, 0
	085 JumpIfNotEqual {88}
	086 Move X0, X21
	087 Call 0x1D2D690
	088 Move X0, X20
	089 Call 0x1C17F18
	090 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x033FB2FC B 0x33FB354
	0x033FB300 ADRP X8, 0xD27000
	0x033FB304 ADRP X9, 0xD27000
	0x033FB308 LDR X8, [X8 + 0x310]
	0x033FB30C LDR X9, [X9 + 0x318]
	0x033FB310 CMP W21, 0x0
	0x033FB314 CSEL X0, X9, X8, LT
	0x033FB318 BL 0x1C16D08
	0x033FB31C MOV X19, X0
	0x033FB320 ADRP X0, 0xD00000
	0x033FB324 LDR X0, [X0 + 0x760]
	0x033FB328 BL 0x1C16D08
	0x033FB32C BL 0x1C16F10
	0x033FB330 MOV X20, X0
	0x033FB334 ADRP X0, 0xD20000
	0x033FB338 LDR X0, [X0 + 0x670]
	0x033FB33C BL 0x1C16D08
	0x033FB340 MOV X2, X0
	0x033FB344 MOV X0, X20
	0x033FB348 MOV X1, X19
	0x033FB34C MOV X3, X31
	0x033FB350 BL 0x3311888
	0x033FB354 ADRP X0, 0xD32000
	0x033FB358 LDR X0, [X0 + 0xB50]
	0x033FB35C BL 0x1C16D08
	0x033FB360 MOV X1, X0
	0x033FB364 MOV X0, X20
	0x033FB368 BL 0x1C16DEC
	0x033FB36C ADRP X0, 0xD00000
	0x033FB370 LDR X0, [X0 + 0x760]
	0x033FB374 BL 0x1C16D08
	0x033FB378 BL 0x1C16F10
	0x033FB37C MOV X19, X0
	0x033FB380 ADRP X0, 0xD27000
	0x033FB384 LDR X0, [X0 + 0x2D8]
	0x033FB388 BL 0x1C16D08
	0x033FB38C MOV X20, X0
	0x033FB390 ADRP X0, 0xD27000
	0x033FB394 LDR X0, [X0 + 0xE0]
	0x033FB398 BL 0x1C16D08
	0x033FB39C MOV X2, X0
	0x033FB3A0 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xFE3000
	007 Move X22, 0xD33000
	008 Move X20, 0xD01000
	009 Move X21, 0xD33000
	010 Move W8, [X19+1218]
	011 Move X22, [X22+2816]
	012 Move X20, [X20+2024]
	013 Move X21, [X21+2824]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xD33000
	019 Move X0, [X0+2824]
	020 Call 0x1C17CF4
	021 Move X0, 0xD01000
	022 Move X0, [X0+2024]
	023 Call 0x1C17CF4
	024 Move X0, 0xD33000
	025 Move X0, [X0+2816]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+1218], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X19, X0
	032 Call ThreadPoolTaskScheduler..ctor, X0
	033 Move X8, [X20]
	034 Move X8, [X8+184]
	035 Move [X8+8], X19
	036 Move X0, [X21]
	037 Call 0x1C17F10
	038 Move X1, X31
	039 Move X19, X0
	040 Call Lock..ctor, X0
	041 Move X8, [X20]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X8, [X8+184]
	045 Move [X8+32], X19
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X30, [X31+48]
	049 Return 

