Type: System.Threading.Tasks.ValueTask

Method: System.Threading.Tasks.Task get_CompletedTask()

Disassembly:
	0x033EE4C8 LDP X20, X19, [X31 + 0x10]
	0x033EE4CC AND W0, W21, 0x1
	0x033EE4D0 LDP X30, X21, [X31], #0x20
	0x033EE4D4 RET
	0x033EE4D8 RET
	0x033EE4DC STR X1, [X0]
	0x033EE4E0 RET
	0x033EE4E4 LDR X0, [X0]
	0x033EE4E8 RET
	0x033EE4EC MOV W0, W31
	0x033EE4F0 RET
	0x033EE4F4 STR X30, [X31 - 0x10]!
	0x033EE4F8 LDR X8, [X0]
	0x033EE4FC CBZ X8, 0x33EE518
	0x033EE500 ADD X0, X31, 0x8
	0x033EE504 MOV X1, X31
	0x033EE508 STR X8, [X31 + 0x8]
	0x033EE50C BL 0x32C3B4C
	0x033EE510 LDR X30, [X31], #0x10
	0x033EE514 RET
	0x033EE518 BL 0x1C16F20
	0x033EE51C SUB X31, X31, 0x30
	0x033EE520 STP X30, X19, [X31 + 0x20]
	0x033EE524 STP X31, X31, [X31]
	0x033EE528 LDR X8, [X0]
	0x033EE52C CBZ X8, 0x33EE570
	0x033EE530 MOV X19, X1
	0x033EE534 ADD X0, X31, 0x10
	0x033EE538 MOV X1, X8
	0x033EE53C MOV W2, W31
	0x033EE540 MOV X3, X31
	0x033EE544 STP X31, X31, [X31 + 0x10]
	0x033EE548 BL 0x32C40A0
	0x033EE54C LDP X8, X9, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFF0000
	005 Move X19, 0xD07000
	006 Move W8, [X20+1071]
	007 Move X19, [X19+1976]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD07000
	013 Move X0, [X0+1976]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1071], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, 0xFEB000
	023 Move W8, [X20+3869]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0xD07000
	027 Move X0, [X0+1976]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3869], W8
	031 Move X0, [X19]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X19]
	037 Move X8, [X0+184]
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X0, [X8+48]
	041 Move X30, [X31+32]
	042 Return X0

Method: System.Void .ctor(System.Threading.Tasks.Task task)

Disassembly:
	0x033EE550 ADD X0, X31, 0x0
	0x033EE554 MOV X1, X19
	0x033EE558 MOV X2, X31
	0x033EE55C STP X8, X9, [X31]
	0x033EE560 BL 0x32C2C44
	0x033EE564 LDP X30, X19, [X31 + 0x20]
	0x033EE568 ADD X31, X31, 0x30
	0x033EE56C RET
	0x033EE570 BL 0x1C16F20
	0x033EE574 SUB X31, X31, 0x30
	0x033EE578 STP X30, X19, [X31 + 0x20]
	0x033EE57C STP X31, X31, [X31]
	0x033EE580 LDR X8, [X0]
	0x033EE584 CBZ X8, 0x33EE5C8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X19, X0
	006 Compare X1, 0
	007 JumpIfNotEqual {10}
	008 Move W0, 38
	009 Call ThrowHelper.ThrowArgumentNullException, X0
	010 Move W8, 1
	011 Move [X19], X20
	012 Move [X19+10], W8
	013 NotImplemented "Instruction STRH not yet implemented."
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Return 

Method: System.Void .ctor(System.Threading.Tasks.Sources.IValueTaskSource source, System.Int16 token)

Disassembly:
	0x033EE588 MOV X19, X1
	0x033EE58C ADD X0, X31, 0x10
	0x033EE590 MOV X1, X8
	0x033EE594 MOV W2, W31
	0x033EE598 MOV X3, X31
	0x033EE59C STP X31, X31, [X31 + 0x10]
	0x033EE5A0 BL 0x32C40A0
	0x033EE5A4 LDP X8, X9, [X31 + 0x10]
	0x033EE5A8 ADD X0, X31, 0x0
	0x033EE5AC MOV X1, X19
	0x033EE5B0 MOV X2, X31
	0x033EE5B4 STP X8, X9, [X31]
	0x033EE5B8 BL 0x32C2E04
	0x033EE5BC LDP X30, X19, [X31 + 0x20]
	0x033EE5C0 ADD X31, X31, 0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W2
	006 Move X21, X1
	007 Move X19, X0
	008 Compare X1, 0
	009 JumpIfNotEqual {12}
	010 Move W0, 39
	011 Call ThrowHelper.ThrowArgumentNullException, X0
	012 Move W8, 1
	013 Move [X19], X21
	014 NotImplemented "Instruction STRH not yet implemented."
	015 Move [X19+10], W8
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Move X21, [X31+40]
	020 Return 

Method: System.Void .ctor(System.Object obj, System.Int16 token, System.Boolean continueOnCapturedContext)

Disassembly:
	0x033EE5C4 RET
	0x033EE5C8 BL 0x1C16F20
	0x033EE5CC MOV W0, W31
	0x033EE5D0 RET
	0x033EE5D4 RET

ISIL:
	001 And W8, W3, 1
	002 Move [X0], X1
	003 NotImplemented "Instruction STRH not yet implemented."
	004 Move [X0+10], W8
	005 Return 

Method: System.Int32 GetHashCode()

Disassembly:
	0x033EE5D8 RET
	0x033EE5DC RET
	0x033EE5E0 RET
	0x033EE5E4 RET
	0x033EE5E8 STP X30, X21, [X31 - 0x20]!
	0x033EE5EC STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X0, [X0]
	002 Compare X0, 0
	003 JumpIfEqual {8}
	004 Move X8, [X0]
	005 Move X2, [X8+344]
	006 Move X1, [X8+352]
	007 CallNoReturn X2
	008 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x033EE5F0 ADRP X21, 0xFEF000
	0x033EE5F4 ADRP X20, 0xD06000
	0x033EE5F8 LDRB W8, [X21 + 0x43B]
	0x033EE5FC LDR X20, [X20 + 0x7B8]
	0x033EE600 MOV X19, X0
	0x033EE604 TBNZ X8, 0x0, 0x33EE628
	0x033EE608 ADRP X0, 0xD2D000
	0x033EE60C LDR X0, [X0 + 0x728]
	0x033EE610 BL 0x1C16CF4
	0x033EE614 ADRP X0, 0xD06000
	0x033EE618 LDR X0, [X0 + 0x7B8]
	0x033EE61C BL 0x1C16CF4
	0x033EE620 MOVZ W8, 0x1
	0x033EE624 STRB W8, [X21 + 0x43B]
	0x033EE628 LDR X0, [X20]
	0x033EE62C LDR W8, [X0 + 0xE0]
	0x033EE630 CBNZ W8, 0x33EE63C
	0x033EE634 BL 0x1C16DFC
	0x033EE638 LDR X0, [X20]
	0x033EE63C LDR X8, [X0 + 0xB8]
	0x033EE640 LDRB W8, [X8 + 0x10]
	0x033EE644 CBZ W8, 0x33EE670
	0x033EE648 ADRP X8, 0xD2D000
	0x033EE64C LDR X8, [X8 + 0x728]
	0x033EE650 LDR X0, [X8]
	0x033EE654 LDR W8, [X0 + 0xE0]
	0x033EE658 CBNZ W8, 0x33EE660
	0x033EE65C BL 0x1C16DFC
	0x033EE660 MOV X0, X19
	0x033EE664 LDP X20, X19, [X31 + 0x10]
	0x033EE668 LDP X30, X21, [X31], #0x20
	0x033EE66C B 0x33EE67C
	0x033EE670 LDP X20, X19, [X31 + 0x10]
	0x033EE674 LDP X30, X21, [X31], #0x20
	0x033EE678 RET
	0x033EE67C STR X30, [X31 - 0x30]!
	0x033EE680 STP X22, X21, [X31 + 0x10]
	0x033EE684 STP X20, X19, [X31 + 0x20]
	0x033EE688 ADRP X19, 0xFEF000
	0x033EE68C LDRB W8, [X19 + 0x43C]
	0x033EE690 MOV X20, X0
	0x033EE694 TBNZ X8, 0x0, 0x33EE6B8
	0x033EE698 ADRP X0, 0xD2D000
	0x033EE69C LDR X0, [X0 + 0x728]
	0x033EE6A0 BL 0x1C16CF4
	0x033EE6A4 ADRP X0, 0xD3F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xFF0000
	006 Move W8, [X21+1072]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD30000
	014 Move X0, [X0+3648]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1072], W8
	018 Compare X20, 0
	019 JumpIfEqual {40}
	020 Move X21, 0xD30000
	021 Move X21, [X21+3648]
	022 Move X8, [X20]
	023 Move X0, [X21]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfEqual {29}
	028 Move X1, X0
	029 Call 0x1C17DFC
	030 Move X1, [X21]
	031 Move X0, [X20]
	032 Move X8, [X0+64]
	033 Move X9, [X1+64]
	034 Move X0, X20
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Call 0x1C17E08
	037 Move X8, [X0]
	038 Move X9, [X19]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W0, W31
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return X0
	046 NotImplemented "Instruction LDRSH not yet implemented."
	047 NotImplemented "Instruction LDRSH not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CSET not yet implemented."
	050 Call 0x1C181E0

Method: System.Boolean Equals(System.Threading.Tasks.ValueTask other)

Disassembly:
	0x033EE6A8 LDR X0, [X0 + 0x670]
	0x033EE6AC BL 0x1C16CF4
	0x033EE6B0 MOVZ W8, 0x1
	0x033EE6B4 STRB W8, [X19 + 0x43C]
	0x033EE6B8 CBZ X20, 0x33EE768
	0x033EE6BC ADRP X22, 0xD2D000
	0x033EE6C0 LDR X22, [X22 + 0x728]
	0x033EE6C4 MOV X0, X20
	0x033EE6C8 BL 0x33EE7D4

ISIL:
	001 Move X8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W0, W31
	004 Return X0
	005 NotImplemented "Instruction LDRSH not yet implemented."
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Return X0

Method: System.Threading.Tasks.Task AsTask()

Disassembly:
	0x033EE6CC LDR X8, [X22]
	0x033EE6D0 MOV W21, W0
	0x033EE6D4 LDR W9, [X8 + 0xE0]
	0x033EE6D8 CBNZ W9, 0x33EE6E8
	0x033EE6DC MOV X0, X8
	0x033EE6E0 BL 0x1C16DFC
	0x033EE6E4 LDR X8, [X22]
	0x033EE6E8 LDR X8, [X8 + 0xB8]
	0x033EE6EC LDR X19, [X8 + 0x8]
	0x033EE6F0 STRB W31, [X31 + 0xC]
	0x033EE6F4 ADD X1, X31, 0xC
	0x033EE6F8 MOV X0, X19
	0x033EE6FC MOV X2, X31
	0x033EE700 BL 0x33DE64C
	0x033EE704 LDR X0, [X22]
	0x033EE708 LDR W8, [X0 + 0xE0]
	0x033EE70C CBNZ W8, 0x33EE718
	0x033EE710 BL 0x1C16DFC
	0x033EE714 LDR X0, [X22]
	0x033EE718 LDR X8, [X0 + 0xB8]
	0x033EE71C LDR X0, [X8]
	0x033EE720 CBZ X0, 0x33EE774
	0x033EE724 ADRP X8, 0xD3F000
	0x033EE728 LDR X8, [X8 + 0x670]
	0x033EE72C LDR X3, [X8]
	0x033EE730 MOV W1, W21
	0x033EE734 MOV X2, X20
	0x033EE738 BL 0x3199890
	0x033EE73C MOV X20, X31
	0x033EE740 LDRB W8, [X31 + 0xC]
	0x033EE744 CBZ W8, 0x33EE754
	0x033EE748 MOV X0, X19
	0x033EE74C MOV X1, X31
	0x033EE750 BL 0x33E14E4
	0x033EE754 CBNZ X20, 0x33EE76C
	0x033EE758 LDP X20, X19, [X31 + 0x20]
	0x033EE75C LDP X22, X21, [X31 + 0x10]
	0x033EE760 LDR X30, [X31], #0x30
	0x033EE764 RET
	0x033EE768 BL 0x1C16F20
	0x033EE76C MOV X0, X20
	0x033EE770 BL 0x1C16F18
	0x033EE774 BL 0x1C16F20
	0x033EE778 B 0x33EE77C
	0x033EE77C MOV X21, X0
	0x033EE780 CMP W1, 0x1
	0x033EE784 B.NE 0x33EE79C
	0x033EE788 MOV X0, X21
	0x033EE78C BL 0x3EB1AD0
	0x033EE790 LDR X20, [X0]
	0x033EE794 BL 0x3EB1AE0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFF0000
	005 Move W8, [X20+1073]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xD07000
	012 Move X0, [X0+1976]
	013 Call 0x1C17CF4
	014 Move X0, 0xD30000
	015 Move X0, [X0+3648]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1073], W8
	019 Move X8, 0xD30000
	020 Move X20, [X19]
	021 Move X8, [X8+3648]
	022 Compare X20, 0
	023 JumpIfEqual {45}
	024 Move X9, 0xD07000
	025 Move X9, [X9+1976]
	026 Move X10, [X20]
	027 Move X9, [X9]
	028 Move W12, [X10+304]
	029 Move W11, [X9+304]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X10, [X10+200]
	032 Add X10, X10, X11
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X0, [X8]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X20
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X0, [X8]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Call ValueTask.get_CompletedTask
	054 Return X0
	055 Move X0, X20
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Return X0

Method: System.Threading.Tasks.Task GetTaskForValueTaskSource(System.Threading.Tasks.Sources.IValueTaskSource t)

Disassembly:
	0x033EE798 B 0x33EE740
	0x033EE79C MOV X20, X31
	0x033EE7A0 B 0x33EE7A8
	0x033EE7A4 MOV X21, X0
	0x033EE7A8 LDRB W8, [X31 + 0xC]
	0x033EE7AC CBZ W8, 0x33EE7BC
	0x033EE7B0 MOV X0, X19
	0x033EE7B4 MOV X1, X31
	0x033EE7B8 BL 0x33E14E4
	0x033EE7BC CBNZ X20, 0x33EE7C8
	0x033EE7C0 MOV X0, X21
	0x033EE7C4 BL 0x1D2C690
	0x033EE7C8 MOV X0, X20
	0x033EE7CC BL 0x1C16F18
	0x033EE7D0 BL 0x1990590
	0x033EE7D4 STP X30, X21, [X31 - 0x20]!
	0x033EE7D8 STP X20, X19, [X31 + 0x10]
	0x033EE7DC ADRP X20, 0xFEF000
	0x033EE7E0 LDRB W8, [X20 + 0x44A]
	0x033EE7E4 MOV X19, X0
	0x033EE7E8 TBNZ X8, 0x0, 0x33EE800
	0x033EE7EC ADRP X0, 0xD06000
	0x033EE7F0 LDR X0, [X0 + 0x7B8]
	0x033EE7F4 BL 0x1C16CF4
	0x033EE7F8 MOVZ W8, 0x1
	0x033EE7FC STRB W8, [X20 + 0x44A]
	0x033EE800 LDR W20, [X19 + 0x10]!
	0x033EE804 BL 0x1C16D44
	0x033EE808 CBNZ W20, 0x33EE84C
	0x033EE80C ADRP X21, 0xD06000
	0x033EE810 LDR X21, [X21 + 0x7B8]
	0x033EE814 LDR X0, [X21]
	0x033EE818 LDR W8, [X0 + 0xE0]
	0x033EE81C CBNZ W8, 0x33EE828
	0x033EE820 BL 0x1C16DFC
	0x033EE824 LDR X0, [X21]
	0x033EE828 LDR X0, [X0 + 0xB8]
	0x033EE82C BL 0x1C24278
	0x033EE830 CBZ W0, 0x33EE814
	0x033EE834 MOV W20, W0
	0x033EE838 BL 0x1C16D44
	0x033EE83C MOV X0, X19
	0x033EE840 MOV W1, W20
	0x033EE844 MOV W2, W31
	0x033EE848 BL 0x1C241D4
	0x033EE84C LDR W19, [X19]
	0x033EE850 BL 0x1C16D44
	0x033EE854 MOV W0, W19
	0x033EE858 LDP X20, X19, [X31 + 0x10]
	0x033EE85C LDP X30, X21, [X31], #0x20
	0x033EE860 RET
	0x033EE864 STP X30, X21, [X31 - 0x20]!
	0x033EE868 STP X20, X19, [X31 + 0x10]
	0x033EE86C ADRP X21, 0xFEF000
	0x033EE870 ADRP X20, 0xD06000
	0x033EE874 LDRB W8, [X21 + 0x43D]
	0x033EE878 LDR X20, [X20 + 0x7B8]
	0x033EE87C MOV X19, X0
	0x033EE880 TBNZ X8, 0x0, 0x33EE8A4
	0x033EE884 ADRP X0, 0xD2D000
	0x033EE888 LDR X0, [X0 + 0x728]
	0x033EE88C BL 0x1C16CF4
	0x033EE890 ADRP X0, 0xD06000
	0x033EE894 LDR X0, [X0 + 0x7B8]
	0x033EE898 BL 0x1C16CF4
	0x033EE89C MOVZ W8, 0x1
	0x033EE8A0 STRB W8, [X21 + 0x43D]
	0x033EE8A4 LDR X0, [X20]
	0x033EE8A8 LDR W8, [X0 + 0xE0]
	0x033EE8AC CBNZ W8, 0x33EE8B8
	0x033EE8B0 BL 0x1C16DFC
	0x033EE8B4 LDR X0, [X20]
	0x033EE8B8 LDR X8, [X0 + 0xB8]
	0x033EE8BC LDRB W8, [X8 + 0x10]
	0x033EE8C0 CBZ W8, 0x33EE8EC
	0x033EE8C4 ADRP X8, 0xD2D000
	0x033EE8C8 LDR X8, [X8 + 0x728]
	0x033EE8CC LDR X0, [X8]
	0x033EE8D0 LDR W8, [X0 + 0xE0]
	0x033EE8D4 CBNZ W8, 0x33EE8DC
	0x033EE8D8 BL 0x1C16DFC
	0x033EE8DC MOV X0, X19
	0x033EE8E0 LDP X20, X19, [X31 + 0x10]
	0x033EE8E4 LDP X30, X21, [X31], #0x20
	0x033EE8E8 B 0x33EE8F8
	0x033EE8EC LDP X20, X19, [X31 + 0x10]
	0x033EE8F0 LDP X30, X21, [X31], #0x20
	0x033EE8F4 RET
	0x033EE8F8 SUB X31, X31, 0x30
	0x033EE8FC STP X30, X21, [X31 + 0x10]
	0x033EE900 STP X20, X19, [X31 + 0x20]
	0x033EE904 ADRP X20, 0xFEF000
	0x033EE908 LDRB W8, [X20 + 0x43E]
	0x033EE90C MOV X19, X0
	0x033EE910 TBNZ X8, 0x0, 0x33EE934
	0x033EE914 ADRP X0, 0xD2D000
	0x033EE918 LDR X0, [X0 + 0x728]
	0x033EE91C BL 0x1C16CF4
	0x033EE920 ADRP X0, 0xD3F000
	0x033EE924 LDR X0, [X0 + 0x678]
	0x033EE928 BL 0x1C16CF4
	0x033EE92C MOVZ W8, 0x1
	0x033EE930 STRB W8, [X20 + 0x43E]
	0x033EE934 CBZ X19, 0x33EE9E0
	0x033EE938 ADRP X21, 0xD2D000
	0x033EE93C LDR X21, [X21 + 0x728]
	0x033EE940 MOV X0, X19
	0x033EE944 BL 0x33EE7D4
	0x033EE948 LDR X8, [X21]
	0x033EE94C MOV W20, W0
	0x033EE950 LDR W9, [X8 + 0xE0]
	0x033EE954 CBNZ W9, 0x33EE964
	0x033EE958 MOV X0, X8
	0x033EE95C BL 0x1C16DFC
	0x033EE960 LDR X8, [X21]
	0x033EE964 LDR X8, [X8 + 0xB8]
	0x033EE968 LDR X19, [X8 + 0x8]
	0x033EE96C STRB W31, [X31 + 0xC]
	0x033EE970 ADD X1, X31, 0xC
	0x033EE974 MOV X0, X19
	0x033EE978 MOV X2, X31
	0x033EE97C BL 0x33DE64C
	0x033EE980 LDR X0, [X21]
	0x033EE984 LDR W8, [X0 + 0xE0]
	0x033EE988 CBNZ W8, 0x33EE994
	0x033EE98C BL 0x1C16DFC
	0x033EE990 LDR X0, [X21]
	0x033EE994 LDR X8, [X0 + 0xB8]
	0x033EE998 LDR X0, [X8]
	0x033EE99C CBZ X0, 0x33EE9EC
	0x033EE9A0 ADRP X8, 0xD3F000
	0x033EE9A4 LDR X8, [X8 + 0x678]
	0x033EE9A8 LDR X2, [X8]
	0x033EE9AC MOV W1, W20
	0x033EE9B0 BL 0x3199958
	0x033EE9B4 MOV X20, X31
	0x033EE9B8 LDRB W8, [X31 + 0xC]
	0x033EE9BC CBZ W8, 0x33EE9CC
	0x033EE9C0 MOV X0, X19
	0x033EE9C4 MOV X1, X31
	0x033EE9C8 BL 0x33E14E4
	0x033EE9CC CBNZ X20, 0x33EE9E4
	0x033EE9D0 LDP X20, X19, [X31 + 0x20]
	0x033EE9D4 LDP X30, X21, [X31 + 0x10]
	0x033EE9D8 ADD X31, X31, 0x30
	0x033EE9DC RET
	0x033EE9E0 BL 0x1C16F20
	0x033EE9E4 MOV X0, X20
	0x033EE9E8 BL 0x1C16F18
	0x033EE9EC BL 0x1C16F20
	0x033EE9F0 B 0x33EE9F8
	0x033EE9F4 B 0x33EE9F8
	0x033EE9F8 MOV X21, X0
	0x033EE9FC CMP W1, 0x1
	0x033EEA00 B.NE 0x33EEA18
	0x033EEA04 MOV X0, X21
	0x033EEA08 BL 0x3EB1AD0
	0x033EEA0C LDR X20, [X0]
	0x033EEA10 BL 0x3EB1AE0
	0x033EEA14 B 0x33EE9B8
	0x033EEA18 MOV X20, X31
	0x033EEA1C B 0x33EEA24
	0x033EEA20 MOV X21, X0
	0x033EEA24 LDRB W8, [X31 + 0xC]
	0x033EEA28 CBZ W8, 0x33EEA38
	0x033EEA2C MOV X0, X19
	0x033EEA30 MOV X1, X31
	0x033EEA34 BL 0x33E14E4
	0x033EEA38 CBNZ X20, 0x33EEA44
	0x033EEA3C MOV X0, X21
	0x033EEA40 BL 0x1D2C690
	0x033EEA44 MOV X0, X20
	0x033EEA48 BL 0x1C16F18
	0x033EEA4C BL 0x1990590
	0x033EEA50 STP X30, X23, [X31 - 0x30]!
	0x033EEA54 STP X22, X21, [X31 + 0x10]
	0x033EEA58 STP X20, X19, [X31 + 0x20]
	0x033EEA5C ADRP X22, 0xFEF000
	0x033EEA60 ADRP X23, 0xD3F000
	0x033EEA64 ADRP X19, 0xD3F000
	0x033EEA68 ADRP X20, 0xD2D000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFF0000
	007 Move W8, [X21+1074]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xD35000
	015 Move X0, [X0+3752]
	016 Call 0x1C17CF4
	017 Move X0, 0xD40000
	018 Move X0, [X0+1592]
	019 Call 0x1C17CF4
	020 Move X0, 0xD30000
	021 Move X0, [X0+3648]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1074], W8
	025 Compare X19, 0
	026 JumpIfEqual {178}
	027 Move X22, 0xD35000
	028 Move X8, [X19]
	029 Move X22, [X22+3752]
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X22]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move X0, X19
	042 Move W2, W31
	043 Call 0x1C5D788
	044 NotImplemented "Instruction LDRSW not yet implemented."
	045 Add X8, X8, X9
	046 Add X0, X8, 312
	047 Move X8, [X0]
	048 Move X2, [X0+8]
	049 Move X0, X19
	050 Move W1, W21
	051 NotImplemented "Instruction BLR not yet implemented."
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Compare W0, 0
	054 JumpIfEqual {70}
	055 Move X8, [X19]
	056 Move X1, [X22]
	057 Move W20, W0
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Compare X9, 0
	060 JumpIfEqual {67}
	061 Move X10, [X8+176]
	062 Add X10, X10, 8
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Subtract X9, X9, 1
	066 Add X10, X10, 16
	067 Move W2, 2
	068 Move X0, X19
	069 Call 0x1C5D788
	070 Move X8, 0xD40000
	071 Move X8, [X8+1592]
	072 Move X0, [X8]
	073 Call 0x1C17F10
	074 Move X1, X19
	075 Move W2, W21
	076 Move X22, X0
	077 Call ValueTaskSourceAsTask..ctor, X0, X1, X2
	078 Move W9, [X10]
	079 Add W9, W9, 2
	080 Add X8, X8, W9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X2, [X0+8]
	084 Move X0, X19
	085 Move W1, W21
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move X8, 0xD30000
	088 Move X8, [X8+3648]
	089 Move X0, [X8]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Call ValueTask.get_CompletedTask
	095 Move X22, X0
	096 Move X0, X22
	097 Move X20, [X31+32]
	098 Move X19, [X31+40]
	099 Move X22, [X31+16]
	100 Move X21, [X31+24]
	101 Move X30, [X31+48]
	102 Return X0
	103 Move X19, X0
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X0, X19
	106 Call 0x3EB2AD0
	107 Move X19, X0
	108 Move X0, 0xD06000
	109 Move X0, [X0+2000]
	110 Call 0x1C17D08
	111 Move X8, [X19]
	112 Move X1, [X8]
	113 Call 0x1C18270
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {179}
	118 Move X19, [X19]
	119 Call 0x3EB2AE0
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X0, 0xD0E000
	122 Move X0, [X0+2216]
	123 Call 0x1C17D08
	124 Compare X19, 0
	125 JumpIfEqual {134}
	126 Move X8, [X19]
	127 Move W9, [X0+304]
	128 Move W10, [X8+304]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X8, [X8+200]
	131 Add X8, X8, X9
	132 NotImplemented "Instruction LDUR not yet implemented."
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X0, 0xD30000
	135 Move X0, [X0+3648]
	136 Call 0x1C17D08
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfNotEqual {141}
	140 Call 0x1C17DFC
	141 Move X0, 0xD30000
	142 Move X0, [X0+3648]
	143 Call 0x1C17D08
	144 Move X8, [X0+184]
	145 Move X22, [X8]
	146 Move X0, 0xD07000
	147 Move X0, [X0+1976]
	148 Call 0x1C17D08
	149 Move W8, [X0+224]
	150 Compare W8, 0
	151 JumpIfNotEqual {153}
	152 Call 0x1C17DFC
	153 Move X0, X19
	154 Move X20, [X31+32]
	155 Move X19, [X31+40]
	156 Move X22, [X31+16]
	157 Move X21, [X31+24]
	158 Move X30, [X31+48]
	159 Call Task.FromException, X0
	160 Return X0
	161 Move X0, 0xD40000
	162 Move X0, [X0+1600]
	163 Call 0x1C17D08
	164 Call 0x1C17F10
	165 Move X22, X0
	166 Move X0, 0xD40000
	167 Move X0, [X0+1608]
	168 Call 0x1C17D08
	169 Move X1, X0
	170 Move X0, X22
	171 Call Task`1<VoidTaskResult>..ctor, X0
	172 Compare X22, 0
	173 JumpIfEqual {178}
	174 Move X1, [X19+144]
	175 Move X0, X22
	176 Move X2, X19
	177 Call Task.TrySetCanceled, X0, X1, X2
	178 Call 0x1C17F20
	179 Move W0, 8
	180 Call 0x3EB2AF0
	181 Move X8, [X19]
	182 Move [X0], X8
	183 Move X1, 0xAC7000
	184 Add X1, X1, 3672
	185 Move X2, X31
	186 Call 0x3EB2B00
	187 Move X19, X0
	188 Call 0x3EB2AE0
	189 Move X0, X19
	190 Call 0x1D2D690
	191 Call 0x1991590

Method: System.Boolean get_IsCompleted()

Disassembly:
	0x033EEC50 MOV X1, X31
	0x033EEC54 BL 0x33BDD8C
	0x033EEC58 MOVN W8, 0x44
	0x033EEC5C ANDS W31, W19, W8, 0x0
	0x033EEC60 B.NE 0x33EECEC
	0x033EEC64 TBZ X19, 0x2, 0x33EECC0
	0x033EEC68 ADRP X22, 0xD06000
	0x033EEC6C LDR X22, [X22 + 0x7B8]
	0x033EEC70 LDR X0, [X22]
	0x033EEC74 LDR W8, [X0 + 0xE0]
	0x033EEC78 CBNZ W8, 0x33EEC80
	0x033EEC7C BL 0x1C16DFC
	0x033EEC80 ADRP X23, 0xFEB000
	0x033EEC84 LDRB W8, [X23 + 0x88E]
	0x033EEC88 CBNZ W8, 0x33EECA0
	0x033EEC8C ADRP X0, 0xD06000
	0x033EEC90 LDR X0, [X0 + 0x7B8]
	0x033EEC94 BL 0x1C16CF4
	0x033EEC98 MOVZ W8, 0x1
	0x033EEC9C STRB W8, [X23 + 0x88E]
	0x033EECA0 LDR X0, [X22]
	0x033EECA4 LDR W8, [X0 + 0xE0]
	0x033EECA8 CBNZ W8, 0x33EECB4
	0x033EECAC BL 0x1C16DFC
	0x033EECB0 LDR X0, [X22]
	0x033EECB4 BL 0x1C16D0C
	0x033EECB8 LDR X8, [X0]
	0x033EECBC STR X8, [X21 + 0x30]
	0x033EECC0 MOV X0, X21
	0x033EECC4 MOV X2, X20
	0x033EECC8 MOV W4, W19
	0x033EECCC LDP X20, X19, [X31 + 0x20]
	0x033EECD0 LDP X22, X21, [X31 + 0x10]
	0x033EECD4 MOVZ W5, 0x400
	0x033EECD8 MOV X1, X31
	0x033EECDC MOV X3, X31
	0x033EECE0 MOV X6, X31
	0x033EECE4 LDP X30, X23, [X31], #0x30
	0x033EECE8 B 0x33EED34
	0x033EECEC ADRP X0, 0xD0D000
	0x033EECF0 LDR X0, [X0 + 0x760]
	0x033EECF4 BL 0x1C16D08
	0x033EECF8 BL 0x1C16F10
	0x033EECFC MOV X19, X0
	0x033EED00 ADRP X0, 0xD3F000
	0x033EED04 LDR X0, [X0 + 0x698]
	0x033EED08 BL 0x1C16D08
	0x033EED0C MOV X1, X0
	0x033EED10 MOV X0, X19
	0x033EED14 MOV X2, X31
	0x033EED18 BL 0x3316014
	0x033EED1C ADRP X0, 0xD3F000
	0x033EED20 LDR X0, [X0 + 0x6A0]
	0x033EED24 BL 0x1C16D08
	0x033EED28 MOV X1, X0
	0x033EED2C MOV X0, X19
	0x033EED30 BL 0x1C16DEC
	0x033EED34 SUB X31, X31, 0x50
	0x033EED38 STP X30, X25, [X31 + 0x10]
	0x033EED3C STP X24, X23, [X31 + 0x20]
	0x033EED40 STP X22, X21, [X31 + 0x30]
	0x033EED44 STP X20, X19, [X31 + 0x40]
	0x033EED48 ADRP X25, 0xFEF000
	0x033EED4C LDRB W8, [X25 + 0x442]
	0x033EED50 MOV X23, X6

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xFF0000
	005 Move W8, [X19+1075]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xD35000
	012 Move X0, [X0+3752]
	013 Call 0x1C17CF4
	014 Move X0, 0xD07000
	015 Move X0, [X0+1976]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+1075], W8
	019 Move X19, [X20]
	020 Compare X19, 0
	021 JumpIfEqual {49}
	022 Move X9, 0xD07000
	023 Move X9, [X9+1976]
	024 Move X8, [X19]
	025 Move X9, [X9]
	026 Move W11, [X8+304]
	027 Move W10, [X9+304]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X11, [X8+200]
	030 Add X10, X11, X10
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X10, 0xD35000
	034 Move X10, [X10+3752]
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Move X1, [X10]
	038 Compare X9, 0
	039 JumpIfEqual {46}
	040 Move X10, [X8+176]
	041 Add X10, X10, 8
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Subtract X9, X9, 1
	045 Add X10, X10, 16
	046 Move X0, X19
	047 Move W2, W31
	048 Call 0x1C5D788
	049 Move W0, 1
	050 NotImplemented "Instruction LDRSW not yet implemented."
	051 Add X8, X8, X9
	052 Add X0, X8, 312
	053 Move X8, [X0]
	054 Move X2, [X0+8]
	055 Move X0, X19
	056 Move W1, W20
	057 NotImplemented "Instruction BLR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSET not yet implemented."
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Return X0
	064 Move X0, X19
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X30, [X31+32]
	068 Call Task.get_IsCompleted, X0
	069 Return X0

Method: System.Boolean get_IsCompletedSuccessfully()

Disassembly:
	0x033EED54 MOV W21, W5
	0x033EED58 MOV W20, W4
	0x033EED5C MOV X24, X2
	0x033EED60 MOV X22, X1
	0x033EED64 MOV X19, X0
	0x033EED68 STR X3, [X31 + 0x8]
	0x033EED6C TBNZ X8, 0x0, 0x33EED90
	0x033EED70 ADRP X0, 0xD0D000
	0x033EED74 LDR X0, [X0 + 0x7D8]
	0x033EED78 BL 0x1C16CF4
	0x033EED7C ADRP X0, 0xD2D000
	0x033EED80 LDR X0, [X0 + 0x580]
	0x033EED84 BL 0x1C16CF4
	0x033EED88 MOVZ W8, 0x1
	0x033EED8C STRB W8, [X25 + 0x442]
	0x033EED90 MOVN W8, 0x5F
	0x033EED94 ANDS W31, W20, W8, 0x0
	0x033EED98 STP X22, X24, [X19 + 0x18]
	0x033EED9C STR X23, [X19 + 0x28]
	0x033EEDA0 B.NE 0x33EEE60
	0x033EEDA4 ORR W8, W21, W20, 0x0
	0x033EEDA8 ANDS W31, W21, 0x200
	0x033EEDAC CCMP X22, 0x0, 0x4, EQ
	0x033EEDB0 ORR W9, W8, 0x2000000
	0x033EEDB4 CSEL W21, W8, W9, NE
	0x033EEDB8 BL 0x1C16D44
	0x033EEDBC STR W21, [X19 + 0x38]
	0x033EEDC0 TBZ X20, 0x2, 0x33EEDE0
	0x033EEDC4 LDR X0, [X19 + 0x30]
	0x033EEDC8 CBZ X0, 0x33EEDE0
	0x033EEDCC BL 0x33EF398
	0x033EEDD0 TBNZ X0, 0x3, 0x33EEDE0
	0x033EEDD4 LDR X0, [X19 + 0x30]
	0x033EEDD8 CBZ X0, 0x33EEEA8
	0x033EEDDC BL 0x33EEF84
	0x033EEDE0 ADRP X8, 0xD0D000
	0x033EEDE4 LDR X8, [X8 + 0x7D8]
	0x033EEDE8 LDR X0, [X8]
	0x033EEDEC LDR W8, [X0 + 0xE0]
	0x033EEDF0 CBNZ W8, 0x33EEDF8
	0x033EEDF4 BL 0x1C16DFC
	0x033EEDF8 ADRP X20, 0xD2D000
	0x033EEDFC LDR X20, [X20 + 0x580]
	0x033EEE00 ADD X0, X31, 0x8
	0x033EEE04 MOV X1, X31
	0x033EEE08 BL 0x33DD2F8
	0x033EEE0C TBZ X0, 0x0, 0x33EEE24
	0x033EEE10 LDR X1, [X31 + 0x8]
	0x033EEE14 MOV X0, X19
	0x033EEE18 MOV X2, X31
	0x033EEE1C MOV X3, X31
	0x033EEE20 BL 0x33EEFF8
	0x033EEE24 LDR X0, [X20]
	0x033EEE28 LDR W8, [X0 + 0xE0]
	0x033EEE2C CBNZ W8, 0x33EEE34
	0x033EEE30 BL 0x1C16DFC
	0x033EEE34 MOV X0, X31
	0x033EEE38 BL 0x33DD730
	0x033EEE3C MOV X1, X0
	0x033EEE40 MOV X0, X19
	0x033EEE44 BL 0x33EF2C0
	0x033EEE48 LDP X20, X19, [X31 + 0x40]
	0x033EEE4C LDP X22, X21, [X31 + 0x30]
	0x033EEE50 LDP X24, X23, [X31 + 0x20]
	0x033EEE54 LDP X30, X25, [X31 + 0x10]
	0x033EEE58 ADD X31, X31, 0x50
	0x033EEE5C RET
	0x033EEE60 ADRP X0, 0xD0D000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xFF0000
	005 Move W8, [X19+1076]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xD35000
	012 Move X0, [X0+3752]
	013 Call 0x1C17CF4
	014 Move X0, 0xD07000
	015 Move X0, [X0+1976]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+1076], W8
	019 Move X19, [X20]
	020 Compare X19, 0
	021 JumpIfEqual {49}
	022 Move X9, 0xD07000
	023 Move X9, [X9+1976]
	024 Move X8, [X19]
	025 Move X9, [X9]
	026 Move W11, [X8+304]
	027 Move W10, [X9+304]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X11, [X8+200]
	030 Add X10, X11, X10
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X10, 0xD35000
	034 Move X10, [X10+3752]
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Move X1, [X10]
	038 Compare X9, 0
	039 JumpIfEqual {46}
	040 Move X10, [X8+176]
	041 Add X10, X10, 8
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Subtract X9, X9, 1
	045 Add X10, X10, 16
	046 Move X0, X19
	047 Move W2, W31
	048 Call 0x1C5D788
	049 Move W0, 1
	050 NotImplemented "Instruction LDRSW not yet implemented."
	051 Add X8, X8, X9
	052 Add X0, X8, 312
	053 Move X8, [X0]
	054 Move X2, [X0+8]
	055 Move X0, X19
	056 Move W1, W20
	057 NotImplemented "Instruction BLR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move W19, [X19+56]
	060 Call 0x1C17D44
	061 Move W8, 0x1600000
	062 And W8, W19, W8
	063 Move W9, 0x1000000
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction CSET not yet implemented."
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Return X0

Method: System.Void ThrowIfCompletedUnsuccessfully()

Disassembly:
	0x033EEE8C BL 0x3316014
	0x033EEE90 ADRP X0, 0xD3F000
	0x033EEE94 LDR X0, [X0 + 0x6A8]
	0x033EEE98 BL 0x1C16D08
	0x033EEE9C MOV X1, X0
	0x033EEEA0 MOV X0, X19
	0x033EEEA4 BL 0x1C16DEC
	0x033EEEA8 BL 0x1C16F20
	0x033EEEAC STR X30, [X31 - 0x50]!
	0x033EEEB0 STP X26, X25, [X31 + 0x10]
	0x033EEEB4 STP X24, X23, [X31 + 0x20]
	0x033EEEB8 STP X22, X21, [X31 + 0x30]
	0x033EEEBC STP X20, X19, [X31 + 0x40]
	0x033EEEC0 MOV X24, X1
	0x033EEEC4 MOV X1, X31
	0x033EEEC8 MOV X19, X7
	0x033EEECC MOV W20, W6
	0x033EEED0 MOV W21, W5
	0x033EEED4 MOV X22, X4
	0x033EEED8 MOV X25, X3
	0x033EEEDC MOV X23, X2
	0x033EEEE0 MOV X26, X0
	0x033EEEE4 BL 0x33BDD8C
	0x033EEEE8 CBZ X24, 0x33EEF28
	0x033EEEEC TBZ X21, 0x2, 0x33EEEF4
	0x033EEEF0 STR X25, [X26 + 0x30]
	0x033EEEF4 MOV X0, X26
	0x033EEEF8 MOV X1, X24
	0x033EEEFC MOV X2, X23
	0x033EEF00 MOV X3, X22
	0x033EEF04 MOV W4, W21
	0x033EEF08 MOV W5, W20
	0x033EEF0C MOV X6, X19
	0x033EEF10 LDP X20, X19, [X31 + 0x40]
	0x033EEF14 LDP X22, X21, [X31 + 0x30]
	0x033EEF18 LDP X24, X23, [X31 + 0x20]
	0x033EEF1C LDP X26, X25, [X31 + 0x10]
	0x033EEF20 LDR X30, [X31], #0x50
	0x033EEF24 B 0x33EED34
	0x033EEF28 ADRP X0, 0xD0A000
	0x033EEF2C LDR X0, [X0 + 0x528]
	0x033EEF30 BL 0x1C16D08
	0x033EEF34 BL 0x1C16F10
	0x033EEF38 MOV X19, X0
	0x033EEF3C ADRP X0, 0xD2D000
	0x033EEF40 LDR X0, [X0 + 0xBF8]
	0x033EEF44 BL 0x1C16D08
	0x033EEF48 MOV X1, X0
	0x033EEF4C MOV X0, X19
	0x033EEF50 MOV X2, X31
	0x033EEF54 BL 0x330E100
	0x033EEF58 ADRP X0, 0xD3F000
	0x033EEF5C LDR X0, [X0 + 0x6B0]
	0x033EEF60 BL 0x1C16D08
	0x033EEF64 MOV X1, X0
	0x033EEF68 MOV X0, X19
	0x033EEF6C BL 0x1C16DEC
	0x033EEF70 STR X30, [X31 - 0x10]!
	0x033EEF74 BL 0x33EF398
	0x033EEF78 AND W0, W0, 0xFFFF00FF
	0x033EEF7C LDR X30, [X31], #0x10
	0x033EEF80 RET
	0x033EEF84 STR X30, [X31 - 0x20]!
	0x033EEF88 STP X20, X19, [X31 + 0x10]
	0x033EEF8C LDR X19, [X0 + 0x48]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xFF0000
	005 Move W8, [X19+1077]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xD35000
	012 Move X0, [X0+3752]
	013 Call 0x1C17CF4
	014 Move X0, 0xD07000
	015 Move X0, [X0+1976]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+1077], W8
	019 Move X19, [X20]
	020 Compare X19, 0
	021 JumpIfEqual {49}
	022 Move X9, 0xD07000
	023 Move X9, [X9+1976]
	024 Move X8, [X19]
	025 Move X9, [X9]
	026 Move W11, [X8+304]
	027 Move W10, [X9+304]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X11, [X8+200]
	030 Add X10, X11, X10
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X10, 0xD35000
	034 Move X10, [X10+3752]
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Move X1, [X10]
	038 Compare X9, 0
	039 JumpIfEqual {46}
	040 Move X10, [X8+176]
	041 Add X10, X10, 8
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Subtract X9, X9, 1
	045 Add X10, X10, 16
	046 Move W2, 2
	047 Move X0, X19
	048 Call 0x1C5D788
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Return 
	053 Move W9, [X10]
	054 Add W9, W9, 2
	055 Add X8, X8, W9
	056 Add X0, X8, 312
	057 Move X3, [X0]
	058 Move X2, [X0+8]
	059 Move X0, X19
	060 Move W1, W20
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X30, [X31+32]
	064 CallNoReturn X3
	065 Move X0, X19
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X1, X31
	069 Move X30, [X31+32]
	070 Call TaskAwaiter.ValidateEnd, X0
	071 Return 

Method: System.Runtime.CompilerServices.ValueTaskAwaiter GetAwaiter()

Disassembly:
	0x033EEF90 MOV X20, X0
	0x033EEF94 BL 0x1C16D44
	0x033EEF98 CBNZ X19, 0x33EEFB0

ISIL:
	001 Move X8, [X0]
	002 Move X1, [X0+8]
	003 Move X0, X8
	004 Return X0

Method: System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable ConfigureAwait(System.Boolean continueOnCapturedContext)

Disassembly:
	0x033EEF9C MOVZ W1, 0x1
	0x033EEFA0 MOV X0, X20
	0x033EEFA4 BL 0x33F0788
	0x033EEFA8 MOV X19, X0
	0x033EEFAC CBZ X0, 0x33EEFF4
	0x033EEFB0 LDR W20, [X19 + 0x3C]!
	0x033EEFB4 BL 0x1C16D44
	0x033EEFB8 CMP W20, 0x1

ISIL:
	001 Move X8, [X0]
	002 NotImplemented "Instruction LDRH not yet implemented."
	003 And W31, W1, 1
	004 Move W10, 0x10000
	005 NotImplemented "Instruction CSEL not yet implemented."
	006 Or X1, X10, X9
	007 Move X0, X8
	008 Return X0

Method: System.Void .cctor()

Disassembly:
	0x033EEFBC B.NE 0x33EEFE0
	0x033EEFC0 LDR W20, [X19]
	0x033EEFC4 BL 0x1C16D44
	0x033EEFC8 BL 0x1C16D44
	0x033EEFCC ADD W8, W20, 0x1
	0x033EEFD0 STR W8, [X19]
	0x033EEFD4 LDP X20, X19, [X31 + 0x10]
	0x033EEFD8 LDR X30, [X31], #0x20
	0x033EEFDC RET
	0x033EEFE0 BL 0x1C16D44
	0x033EEFE4 MOV X0, X19
	0x033EEFE8 LDP X20, X19, [X31 + 0x10]
	0x033EEFEC LDR X30, [X31], #0x20
	0x033EEFF0 B 0x1C24278
	0x033EEFF4 BL 0x1C16F20
	0x033EEFF8 SUB X31, X31, 0x80
	0x033EEFFC STP X30, X25, [X31 + 0x40]
	0x033EF000 STP X24, X23, [X31 + 0x50]
	0x033EF004 STP X22, X21, [X31 + 0x60]
	0x033EF008 STP X20, X19, [X31 + 0x70]
	0x033EF00C ADRP X20, 0xFEE000
	0x033EF010 LDRB W8, [X20 + 0x443]
	0x033EF014 MOV X21, X3
	0x033EF018 MOV X22, X2
	0x033EF01C MOV X23, X1
	0x033EF020 MOV X19, X0
	0x033EF024 STR X1, [X31 + 0x38]
	0x033EF028 TBNZ X8, 0x0, 0x33EF070
	0x033EF02C ADRP X0, 0xD3E000
	0x033EF030 LDR X0, [X0 + 0x20]
	0x033EF034 BL 0x1C16CF4
	0x033EF038 ADRP X0, 0xD0C000
	0x033EF03C LDR X0, [X0 + 0x7D8]
	0x033EF040 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFF0000
	005 Move X19, 0xD07000
	006 Move W8, [X20+1078]
	007 Move X19, [X19+1976]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xD07000
	013 Move X0, [X0+1976]
	014 Call 0x1C17CF4
	015 Move X0, 0xD30000
	016 Move X0, [X0+3648]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1078], W8
	020 Move X20, 0xD30000
	021 Move X20, [X20+3648]
	022 Add X0, X31, 8
	023 Move W1, 1
	024 Move X2, X31
	025 Move [X31+8], X31
	026 Call CancellationToken..ctor, X0, X1
	027 Move X0, [X19]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, [X31+8]
	033 Call Task.FromCanceled, X0
	034 Move X8, [X20]
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X0
	039 Move X30, [X31+32]
	040 Return 

