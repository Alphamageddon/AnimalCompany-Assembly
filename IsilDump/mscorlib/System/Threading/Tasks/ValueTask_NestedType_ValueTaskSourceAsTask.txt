Type: System.Threading.Tasks.ValueTask/ValueTaskSourceAsTask

Method: System.Void .ctor(System.Threading.Tasks.Sources.IValueTaskSource source, System.Int16 token)

Disassembly:
	0x033EEB30 MOV X20, X0
	0x033EEB34 TBNZ X8, 0x0, 0x33EEB4C
	0x033EEB38 ADRP X0, 0xD3F000
	0x033EEB3C LDR X0, [X0 + 0x690]
	0x033EEB40 BL 0x1C16CF4
	0x033EEB44 MOVZ W8, 0x1
	0x033EEB48 STRB W8, [X23 + 0x440]
	0x033EEB4C MOV X0, X20
	0x033EEB50 MOV X1, X31
	0x033EEB54 BL 0x33BDD8C
	0x033EEB58 BL 0x1C16D44
	0x033EEB5C TBZ X22, 0x0, 0x33EEBB0
	0x033EEB60 ADRP X8, 0xD3F000
	0x033EEB64 LDR X8, [X8 + 0x690]
	0x033EEB68 MOVZ W9, 0x500000
	0x033EEB6C ORR W9, W21, W9, 0x0
	0x033EEB70 STR W9, [X20 + 0x38]
	0x033EEB74 LDR X0, [X8]
	0x033EEB78 BL 0x1C16F10
	0x033EEB7C MOV X21, X0
	0x033EEB80 BL 0x1C16D44
	0x033EEB84 MOVZ W22, 0x1
	0x033EEB88 MOV X0, X21
	0x033EEB8C MOV X1, X31
	0x033EEB90 STR W22, [X21 + 0x3C]
	0x033EEB94 BL 0x33BDD8C
	0x033EEB98 BL 0x1C16D44
	0x033EEB9C STR X21, [X20 + 0x48]
	0x033EEBA0 STR X19, [X21 + 0x28]
	0x033EEBA4 BL 0x1C16D44
	0x033EEBA8 STR W22, [X21 + 0x38]
	0x033EEBAC B 0x33EEBB8
	0x033EEBB0 ORR W8, W21, 0x1000000
	0x033EEBB4 STR W8, [X20 + 0x38]
	0x033EEBB8 LDP X20, X19, [X31 + 0x20]
	0x033EEBBC LDP X22, X21, [X31 + 0x10]
	0x033EEBC0 LDP X30, X23, [X31], #0x30
	0x033EEBC4 RET
	0x033EEBC8 STP X30, X19, [X31 - 0x10]!
	0x033EEBCC MOV X19, X0
	0x033EEBD0 BL 0x1C16D44
	0x033EEBD4 MOVZ W8, 0x1
	0x033EEBD8 STR W8, [X19 + 0x3C]
	0x033EEBDC MOV X0, X19
	0x033EEBE0 MOV X1, X31
	0x033EEBE4 LDP X30, X19, [X31], #0x10
	0x033EEBE8 B 0x33BDD8C
	0x033EEBEC STP X30, X19, [X31 - 0x10]!
	0x033EEBF0 MOV X1, X31
	0x033EEBF4 MOV X19, X0
	0x033EEBF8 BL 0x33BDD8C
	0x033EEBFC BL 0x1C16D44
	0x033EEC00 MOVZ W8, 0x400
	0x033EEC04 MOVK W8, 0x2000000
	0x033EEC08 STR W8, [X19 + 0x38]
	0x033EEC0C LDP X30, X19, [X31], #0x10
	0x033EEC10 RET
	0x033EEC14 STP X30, X23, [X31 - 0x30]!
	0x033EEC18 STP X22, X21, [X31 + 0x10]
	0x033EEC1C STP X20, X19, [X31 + 0x20]
	0x033EEC20 ADRP X22, 0xFEF000
	0x033EEC24 LDRB W8, [X22 + 0x441]
	0x033EEC28 MOV W19, W2
	0x033EEC2C MOV X20, X1
	0x033EEC30 MOV X21, X0
	0x033EEC34 TBNZ X8, 0x0, 0x33EEC4C
	0x033EEC38 ADRP X0, 0xD06000
	0x033EEC3C LDR X0, [X0 + 0x7B8]
	0x033EEC40 BL 0x1C16CF4
	0x033EEC44 MOVZ W8, 0x1
	0x033EEC48 STRB W8, [X22 + 0x441]
	0x033EEC4C MOV X0, X21

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xFF0000
	009 Move X24, 0xD40000
	010 Move X22, 0xD40000
	011 Move W8, [X23+1079]
	012 Move X24, [X24+1608]
	013 Move X22, [X22+1592]
	014 Move W19, W2
	015 Move X21, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xD35000
	022 Move X0, [X0+3752]
	023 Call 0x1C17CF4
	024 Move X0, 0xD40000
	025 Move X0, [X0+1608]
	026 Call 0x1C17CF4
	027 Move X0, 0xD40000
	028 Move X0, [X0+1592]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X23+1079], W8
	032 Move X1, [X24]
	033 Move X0, X20
	034 Call Task`1<VoidTaskResult>..ctor, X0
	035 NotImplemented "Instruction STRH not yet implemented."
	036 Move [X20+88], X21
	037 Move X0, [X22]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X22]
	043 Compare X21, 0
	044 JumpIfEqual {82}
	045 Move X10, 0xD35000
	046 Move X9, [X0+184]
	047 Move X8, [X21]
	048 Move X10, [X10+3752]
	049 Move X22, [X9]
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Move X1, [X10]
	052 Compare X9, 0
	053 JumpIfEqual {60}
	054 Move X10, [X8+176]
	055 Add X10, X10, 8
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Subtract X9, X9, 1
	059 Add X10, X10, 16
	060 Move W2, 1
	061 Move X0, X21
	062 Call 0x1C5D788
	063 Move W9, [X10]
	064 Add W9, W9, 1
	065 Add X8, X8, W9
	066 Add X0, X8, 312
	067 Move X6, [X0]
	068 Move X5, [X0+8]
	069 Move X0, X21
	070 Move X1, X22
	071 Move X2, X20
	072 Move W3, W19
	073 Move X20, [X31+48]
	074 Move X19, [X31+56]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X24, [X31+16]
	078 Move X23, [X31+24]
	079 Move W4, W31
	080 Move X30, [X31+64]
	081 CallNoReturn X6
	082 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x033EF098 BL 0x33EF398
	0x033EF09C MOVZ W8, 0x3400
	0x033EF0A0 ANDS W31, W0, W8, 0x0
	0x033EF0A4 B.NE 0x33EF1D8
	0x033EF0A8 ADRP X25, 0xD0C000
	0x033EF0AC LDR X25, [X25 + 0x7D8]
	0x033EF0B0 LDR X0, [X25]
	0x033EF0B4 LDR W8, [X0 + 0xE0]
	0x033EF0B8 CBNZ W8, 0x33EF0C0
	0x033EF0BC BL 0x1C16DFC
	0x033EF0C0 ADD X0, X31, 0x38
	0x033EF0C4 MOV X1, X31
	0x033EF0C8 BL 0x33DD2B0
	0x033EF0CC TBZ X0, 0x0, 0x33EF0E0
	0x033EF0D0 MOV X0, X19
	0x033EF0D4 MOV W1, W31
	0x033EF0D8 BL 0x33EF3F4
	0x033EF0DC B 0x33EF1D8
	0x033EF0E0 ADRP X23, 0xD05000
	0x033EF0E4 LDR X23, [X23 + 0x7B8]
	0x033EF0E8 LDR X0, [X23]
	0x033EF0EC LDR W8, [X0 + 0xE0]
	0x033EF0F0 CBZ X22, 0x33EF164
	0x033EF0F4 CBNZ W8, 0x33EF100
	0x033EF0F8 BL 0x1C16DFC
	0x033EF0FC LDR X0, [X23]
	0x033EF100 ADRP X9, 0xD3E000
	0x033EF104 LDR X8, [X0 + 0xB8]
	0x033EF108 LDR X9, [X9 + 0x6C0]
	0x033EF10C LDR X23, [X8 + 0x18]
	0x033EF110 LDR X0, [X9]
	0x033EF114 BL 0x1C16F10
	0x033EF118 ADRP X8, 0xD3E000
	0x033EF11C LDR X8, [X8 + 0x6B8]
	0x033EF120 MOV X24, X0
	0x033EF124 LDR X4, [X8]
	0x033EF128 MOV X1, X19
	0x033EF12C MOV X2, X22
	0x033EF130 MOV X3, X21
	0x033EF134 BL 0x27061A0
	0x033EF138 LDR X0, [X25]
	0x033EF13C LDR W8, [X0 + 0xE0]
	0x033EF140 CBNZ W8, 0x33EF148
	0x033EF144 BL 0x1C16DFC
	0x033EF148 ADD X8, X31, 0x0
	0x033EF14C ADD X0, X31, 0x38
	0x033EF150 MOV X1, X23
	0x033EF154 MOV X2, X24
	0x033EF158 MOV X3, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xFEF000
	007 Move X19, 0xD3F000
	008 Move W8, [X20+1080]
	009 Move X19, [X19+1624]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xD2F000
	015 Move X0, [X0+3656]
	016 Call 0x1C17CF4
	017 Move X0, 0xD3F000
	018 Move X0, [X0+1632]
	019 Call 0x1C17CF4
	020 Move X0, 0xD3F000
	021 Move X0, [X0+1624]
	022 Call 0x1C17CF4
	023 Move X0, 0xD3F000
	024 Move X0, [X0+1592]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+1080], W8
	028 Move X0, [X19]
	029 Move X22, 0xD2F000
	030 Move X20, 0xD3F000
	031 Move X21, 0xD3F000
	032 Move W8, [X0+224]
	033 Move X22, [X22+3656]
	034 Move X20, [X20+1632]
	035 Move X21, [X21+1592]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X19]
	040 Move X8, [X0+184]
	041 Move X0, [X22]
	042 Move X19, [X8]
	043 Call 0x1C17F10
	044 Move X2, [X20]
	045 Move X1, X19
	046 Move X3, X31
	047 Move X20, X0
	048 Call Action`1<Object>..ctor, X0, X1, X2
	049 Move X8, [X21]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X8, [X8+184]
	053 Move [X8], X20
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X30, [X31+48]
	057 Return 

