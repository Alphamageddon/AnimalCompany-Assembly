Type: System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation/<>c

Method: System.Void .cctor()

Disassembly:
	0x033F9008 ADRP X25, 0xD34000
	0x033F900C LDR X23, [X23 + 0xE18]
	0x033F9010 LDR X24, [X24 + 0xA38]
	0x033F9014 LDR X25, [X25 + 0xA48]
	0x033F9018 LDR X8, [X22]
	0x033F901C LDR X1, [X23]
	0x033F9020 LDRH W9, [X8 + 0x12E]
	0x033F9024 CBZ X9, 0x33F9048
	0x033F9028 LDR X10, [X8 + 0xB0]
	0x033F902C ADD X10, X10, 0x8
	0x033F9030 LDUR X11, [X10 - 0x8]
	0x033F9034 CMP X11, X1
	0x033F9038 B.EQ 0x33F9058
	0x033F903C SUBS X9, X9, 0x1
	0x033F9040 ADD X10, X10, 0x10
	0x033F9044 B.NE 0x33F9030
	0x033F9048 MOV X0, X22
	0x033F904C MOV W2, W31
	0x033F9050 BL 0x1C5C788
	0x033F9054 B 0x33F9064
	0x033F9058 LDRSW X9, [X10]
	0x033F905C ADD X8, X8, X9, 0x4, LSL
	0x033F9060 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xFE5000
	005 Move X20, 0xD35000
	006 Move W8, [X19+1178]
	007 Move X20, [X20+2544]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD35000
	013 Move X0, [X0+2544]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1178], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x033F9064 LDP X8, X1, [X0]
	0x033F9068 MOV X0, X22

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <.cctor>b__7_0(System.Object state)

Disassembly:
	0x033F906C BLR X8
	0x033F9070 TBZ X0, 0x0, 0x33F90EC
	0x033F9074 LDR X8, [X22]
	0x033F9078 LDR X1, [X24]
	0x033F907C LDRH W9, [X8 + 0x12E]
	0x033F9080 CBZ X9, 0x33F90A4
	0x033F9084 LDR X10, [X8 + 0xB0]
	0x033F9088 ADD X10, X10, 0x8
	0x033F908C LDUR X11, [X10 - 0x8]
	0x033F9090 CMP X11, X1
	0x033F9094 B.EQ 0x33F90B4
	0x033F9098 SUBS X9, X9, 0x1
	0x033F909C ADD X10, X10, 0x10
	0x033F90A0 B.NE 0x33F908C
	0x033F90A4 MOV X0, X22
	0x033F90A8 MOV W2, W31
	0x033F90AC BL 0x1C5C788
	0x033F90B0 B 0x33F90C0
	0x033F90B4 LDRSW X9, [X10]
	0x033F90B8 ADD X8, X8, X9, 0x4, LSL
	0x033F90BC ADD X0, X8, 0x138
	0x033F90C0 LDP X8, X1, [X0]
	0x033F90C4 MOV X0, X22
	0x033F90C8 BLR X8
	0x033F90CC MOV X1, X31
	0x033F90D0 BL 0x32C2380
	0x033F90D4 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFE5000
	005 Move W8, [X20+1179]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xCFC000
	012 Move X0, [X0+3696]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1179], W8
	016 Compare X19, 0
	017 JumpIfEqual {30}
	018 Move X8, 0xCFC000
	019 Move X8, [X8+3696]
	020 Move X1, [X8]
	021 Move X8, [X19]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X2, [X19+24]
	024 Move X0, [X19+64]
	025 Move X1, [X19+40]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 CallNoReturn X2
	030 Call 0x1C17F20
	031 Move X0, X19
	032 Call 0x1C181E0

