Type: System.Threading.Tasks.ThreadPoolTaskScheduler

Method: System.Void .ctor()

Disassembly:
	0x033FB3A4 MOV X1, X20
	0x033FB3A8 MOV X3, X31
	0x033FB3AC BL 0x3311888
	0x033FB3B0 ADRP X0, 0xD32000
	0x033FB3B4 LDR X0, [X0 + 0xB50]
	0x033FB3B8 BL 0x1C16D08
	0x033FB3BC MOV X1, X0
	0x033FB3C0 MOV X0, X19
	0x033FB3C4 BL 0x1C16DEC
	0x033FB3C8 STR X30, [X31 - 0x20]!
	0x033FB3CC STP X20, X19, [X31 + 0x10]
	0x033FB3D0 CBZ X1, 0x33FB3FC
	0x033FB3D4 CBZ X3, 0x33FB3FC
	0x033FB3D8 TBNZ X4, 0x1F, 0x33FB454
	0x033FB3DC TBNZ X2, 0x1F, 0x33FB454
	0x033FB3E0 LDR X8, [X0]
	0x033FB3E4 LDP X20, X19, [X31 + 0x10]
	0x033FB3E8 MOV X5, X31
	0x033FB3EC LDR X7, [X8 + 0x288]
	0x033FB3F0 LDR X6, [X8 + 0x290]
	0x033FB3F4 LDR X30, [X31], #0x20
	0x033FB3F8 BR X7

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xFE3000
	006 Move X21, 0xD01000
	007 Move W8, [X20+1225]
	008 Move X21, [X21+2024]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD01000
	015 Move X0, [X0+2024]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1225], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Object..ctor, X0
	031 Return 

Method: System.Void QueueTask(System.Threading.Tasks.Task task)

Disassembly:
	0x033FB674 MOV X19, X0
	0x033FB678 ADRP X0, 0xD27000
	0x033FB67C LDR X0, [X0 + 0x308]
	0x033FB680 BL 0x1C16D08
	0x033FB684 MOV X20, X0
	0x033FB688 ADRP X0, 0xD27000
	0x033FB68C LDR X0, [X0 + 0x2E0]
	0x033FB690 BL 0x1C16D08
	0x033FB694 MOV X2, X0
	0x033FB698 MOV X0, X19
	0x033FB69C MOV X1, X20
	0x033FB6A0 MOV X3, X31
	0x033FB6A4 BL 0x3315F7C
	0x033FB6A8 B 0x33FB6F0
	0x033FB6AC ADRP X0, 0xD00000
	0x033FB6B0 LDR X0, [X0 + 0x760]
	0x033FB6B4 BL 0x1C16D08
	0x033FB6B8 BL 0x1C16F10
	0x033FB6BC MOV X19, X0
	0x033FB6C0 ADRP X0, 0xD20000
	0x033FB6C4 LDR X0, [X0 + 0x648]
	0x033FB6C8 BL 0x1C16D08
	0x033FB6CC MOV X20, X0
	0x033FB6D0 ADRP X0, 0xD20000
	0x033FB6D4 LDR X0, [X0 + 0x670]
	0x033FB6D8 BL 0x1C16D08
	0x033FB6DC MOV X2, X0
	0x033FB6E0 MOV X0, X19
	0x033FB6E4 MOV X1, X20
	0x033FB6E8 MOV X3, X31
	0x033FB6EC BL 0x3311888
	0x033FB6F0 ADRP X0, 0xD32000
	0x033FB6F4 LDR X0, [X0 + 0xB68]
	0x033FB6F8 BL 0x1C16D08
	0x033FB6FC MOV X1, X0
	0x033FB700 MOV X0, X19
	0x033FB704 BL 0x1C16DEC
	0x033FB708 STR X30, [X31 - 0x50]!
	0x033FB70C STP X26, X25, [X31 + 0x10]
	0x033FB710 STP X24, X23, [X31 + 0x20]
	0x033FB714 STP X22, X21, [X31 + 0x30]
	0x033FB718 STP X20, X19, [X31 + 0x40]
	0x033FB71C ADRP X25, 0xFE2000
	0x033FB720 LDRB W8, [X25 + 0x4D0]
	0x033FB724 MOV W20, W5
	0x033FB728 MOV X23, X4
	0x033FB72C MOV W19, W3
	0x033FB730 MOV W21, W2
	0x033FB734 MOV X24, X1
	0x033FB738 MOV X22, X0
	0x033FB73C TBNZ X8, 0x0, 0x33FB760
	0x033FB740 ADRP X0, 0xD27000
	0x033FB744 LDR X0, [X0 + 0x2C8]
	0x033FB748 BL 0x1C16CF4
	0x033FB74C ADRP X0, 0xD27000
	0x033FB750 LDR X0, [X0 + 0x2D0]
	0x033FB754 BL 0x1C16CF4
	0x033FB758 MOVZ W8, 0x1
	0x033FB75C STRB W8, [X25 + 0x4D0]
	0x033FB760 CBZ X24, 0x33FB84C
	0x033FB764 CBZ X23, 0x33FB84C
	0x033FB768 TBNZ X19, 0x1F, 0x33FB8A4
	0x033FB76C TBNZ X21, 0x1F, 0x33FB8A4
	0x033FB770 LDR W8, [X24 + 0x18]
	0x033FB774 SUB W9, W8, W21
	0x033FB778 CMP W9, W19
	0x033FB77C B.LT 0x33FB910
	0x033FB780 TBNZ X20, 0x1F, 0x33FB81C
	0x033FB784 LDR W9, [X23 + 0x18]
	0x033FB788 SUBS W25, W9, W20
	0x033FB78C B.LT 0x33FB81C
	0x033FB790 CBZ W19, 0x33FB800
	0x033FB794 ADRP X9, 0xD27000
	0x033FB798 LDR X9, [X9 + 0x2D0]
	0x033FB79C ADRP X26, 0xD27000
	0x033FB7A0 LDR X26, [X26 + 0x2C8]
	0x033FB7A4 CMP W8, 0x0
	0x033FB7A8 LDR X1, [X9]
	0x033FB7AC ADD X9, X24, 0x20
	0x033FB7B0 MOV X0, X23
	0x033FB7B4 CSEL X24, X31, X9, EQ
	0x033FB7B8 BL 0x25FBC40
	0x033FB7BC LDR X2, [X26]
	0x033FB7C0 BL 0x2218CFC
	0x033FB7C4 LDR X8, [X22]
	0x033FB7C8 ADD X1, X24, W21, SXTW
	0x033FB7CC ADD X3, X0, W20, 0x1, UXTW
	0x033FB7D0 MOV X0, X22
	0x033FB7D4 LDR X7, [X8 + 0x308]
	0x033FB7D8 LDR X6, [X8 + 0x310]
	0x033FB7DC MOV W2, W19
	0x033FB7E0 MOV W4, W25
	0x033FB7E4 LDP X20, X19, [X31 + 0x40]
	0x033FB7E8 LDP X22, X21, [X31 + 0x30]
	0x033FB7EC LDP X24, X23, [X31 + 0x20]
	0x033FB7F0 LDP X26, X25, [X31 + 0x10]
	0x033FB7F4 MOV X5, X31
	0x033FB7F8 LDR X30, [X31], #0x50
	0x033FB7FC BR X7
	0x033FB800 LDP X20, X19, [X31 + 0x40]
	0x033FB804 LDP X22, X21, [X31 + 0x30]
	0x033FB808 LDP X24, X23, [X31 + 0x20]
	0x033FB80C LDP X26, X25, [X31 + 0x10]
	0x033FB810 MOV W0, W31
	0x033FB814 LDR X30, [X31], #0x50
	0x033FB818 RET
	0x033FB81C ADRP X0, 0xD00000
	0x033FB820 LDR X0, [X0 + 0x760]
	0x033FB824 BL 0x1C16D08
	0x033FB828 BL 0x1C16F10
	0x033FB82C MOV X19, X0
	0x033FB830 ADRP X0, 0xD27000
	0x033FB834 LDR X0, [X0 + 0x318]
	0x033FB838 BL 0x1C16D08

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xFE3000
	008 Move W8, [X21+1226]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xD22000
	016 Move X0, [X0+3656]
	017 Call 0x1C17CF4
	018 Move X0, 0xCFA000
	019 Move X0, [X0+1976]
	020 Call 0x1C17CF4
	021 Move X0, 0xD33000
	022 Move X0, [X0+2816]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+1226], W8
	026 Move X0, X31
	027 Call TaskTrace.get_Enabled
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {84}
	032 Move X21, 0xCFA000
	033 Move X21, [X21+1976]
	034 Move X0, [X21]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X22, 0xFDF000
	040 Move W8, [X22+2190]
	041 Compare W8, 0
	042 JumpIfNotEqual {48}
	043 Move X0, 0xCFA000
	044 Move X0, [X0+1976]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X22+2190], W8
	048 Move X0, [X21]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X21]
	054 Call 0x1C17D0C
	055 Compare X19, 0
	056 JumpIfEqual {143}
	057 Move X21, [X0]
	058 Move X22, [X19+48]
	059 Move X0, X20
	060 Call TaskScheduler.get_Id, X0
	061 Move W20, W0
	062 Compare X21, 0
	063 JumpIfEqual {67}
	064 Move X0, X21
	065 Call Task.get_Id, X0
	066 Move W21, W0
	067 Move X0, X19
	068 Call Task.get_Id, X0
	069 Move W23, W0
	070 Compare X22, 0
	071 JumpIfEqual {75}
	072 Move X0, X22
	073 Call Task.get_Id, X0
	074 Move W22, W0
	075 Move X0, X19
	076 Call Task.get_Options, X0
	077 Move W4, W0
	078 Move W0, W20
	079 Move W1, W21
	080 Move W2, W23
	081 Move W3, W22
	082 Move X5, X31
	083 Call TaskTrace.TaskScheduled, X0, X1, X2, X3, X4
	084 Compare X19, 0
	085 JumpIfEqual {143}
	086 Move X0, X19
	087 Call Task.get_Options, X0
	088 Move TEMP, X0
	089 And TEMP, TEMP, 2
	090 Compare TEMP, 2
	091 JumpIfEqual {104}
	092 Move X0, X19
	093 Call Task.get_Options, X0
	094 And W1, W0, 1
	095 Move X0, X19
	096 Move X20, [X31+32]
	097 Move X19, [X31+40]
	098 Move X22, [X31+16]
	099 Move X21, [X31+24]
	100 Move X30, [X31+48]
	101 Move X23, [X31+56]
	102 Call ThreadPool.UnsafeQueueCustomWorkItem, X0, X1
	103 Return 
	104 Move X20, 0xD33000
	105 Move X20, [X20+2816]
	106 Move X0, [X20]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {112}
	110 Call 0x1C17DFC
	111 Move X0, [X20]
	112 Move X8, 0xD22000
	113 Move X8, [X8+3656]
	114 Move X9, [X0+184]
	115 Move X8, [X8]
	116 Move X20, [X9]
	117 Move W10, [X8+224]
	118 Compare W10, 0
	119 JumpIfNotEqual {122}
	120 Move X0, X8
	121 Call 0x1C17DFC
	122 Move X0, X20
	123 Move W1, W31
	124 Move X2, X31
	125 Call RuntimeThread.Create, X0, X1
	126 Compare X0, 0
	127 JumpIfEqual {143}
	128 Move W1, 1
	129 Move X2, X31
	130 Move X20, X0
	131 Call RuntimeThread.set_IsBackground, X0, X1
	132 Move X0, X20
	133 Move X1, X19
	134 Move X20, [X31+32]
	135 Move X19, [X31+40]
	136 Move X22, [X31+16]
	137 Move X21, [X31+24]
	138 Move X2, X31
	139 Move X30, [X31+48]
	140 Move X23, [X31+56]
	141 Call RuntimeThread.Start, X0, X1
	142 Return 
	143 Call 0x1C17F20

Method: System.Boolean TryExecuteTaskInline(System.Threading.Tasks.Task task, System.Boolean taskWasPreviouslyQueued)

Disassembly:
	0x033FB83C MOV X20, X0
	0x033FB840 ADRP X0, 0xD20000
	0x033FB844 LDR X0, [X0 + 0x660]
	0x033FB848 B 0x33FB93C
	0x033FB84C ADRP X8, 0xD27000
	0x033FB850 ADRP X9, 0xD27000
	0x033FB854 LDR X8, [X8 + 0x2D8]
	0x033FB858 LDR X9, [X9 + 0x308]
	0x033FB85C CMP X24, 0x0
	0x033FB860 CSEL X0, X9, X8, EQ
	0x033FB864 BL 0x1C16D08
	0x033FB868 MOV X19, X0
	0x033FB86C ADRP X0, 0xCFD000
	0x033FB870 LDR X0, [X0 + 0x528]
	0x033FB874 BL 0x1C16D08
	0x033FB878 BL 0x1C16F10
	0x033FB87C MOV X20, X0
	0x033FB880 ADRP X0, 0xD27000
	0x033FB884 LDR X0, [X0 + 0x2E0]
	0x033FB888 BL 0x1C16D08
	0x033FB88C MOV X2, X0
	0x033FB890 MOV X0, X20
	0x033FB894 MOV X1, X19
	0x033FB898 MOV X3, X31
	0x033FB89C BL 0x3315F7C
	0x033FB8A0 B 0x33FB8F8
	0x033FB8A4 ADRP X8, 0xD27000
	0x033FB8A8 ADRP X9, 0xD27000
	0x033FB8AC LDR X8, [X8 + 0x328]
	0x033FB8B0 LDR X9, [X9 + 0x300]
	0x033FB8B4 CMP W21, 0x0
	0x033FB8B8 CSEL X0, X9, X8, LT
	0x033FB8BC BL 0x1C16D08
	0x033FB8C0 MOV X19, X0
	0x033FB8C4 ADRP X0, 0xD00000
	0x033FB8C8 LDR X0, [X0 + 0x760]
	0x033FB8CC BL 0x1C16D08
	0x033FB8D0 BL 0x1C16F10
	0x033FB8D4 MOV X20, X0
	0x033FB8D8 ADRP X0, 0xD20000
	0x033FB8DC LDR X0, [X0 + 0x670]
	0x033FB8E0 BL 0x1C16D08
	0x033FB8E4 MOV X2, X0
	0x033FB8E8 MOV X0, X20
	0x033FB8EC MOV X1, X19
	0x033FB8F0 MOV X3, X31
	0x033FB8F4 BL 0x3311888
	0x033FB8F8 ADRP X0, 0xD32000
	0x033FB8FC LDR X0, [X0 + 0xB70]
	0x033FB900 BL 0x1C16D08
	0x033FB904 MOV X1, X0
	0x033FB908 MOV X0, X20
	0x033FB90C BL 0x1C16DEC
	0x033FB910 ADRP X0, 0xD00000
	0x033FB914 LDR X0, [X0 + 0x760]
	0x033FB918 BL 0x1C16D08

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W20, W2
	007 Move X21, X1
	008 Move X19, X0
	009 Move TEMP, X2
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {19}
	013 Move X0, X21
	014 Call ThreadPool.TryPopCustomWorkItem, X0
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {39}
	019 Compare X21, 0
	020 JumpIfEqual {47}
	021 Move X0, X21
	022 Move W1, W31
	023 Call Task.ExecuteEntry, X0, X1
	024 Move W22, W0
	025 Move X21, X31
	026 Move TEMP, X20
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {35}
	030 Move X8, [X19]
	031 Move X0, X19
	032 Move X9, [X8+424]
	033 Move X1, [X8+432]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Compare X21, 0
	036 JumpIfEqual {40}
	037 Move X0, X21
	038 Call 0x1C17F18
	039 Move W22, W31
	040 And W0, W22, 1
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Return X0
	047 Call 0x1C17F20
	048 Move X22, X0
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, X22
	051 Call 0x3EB2AD0
	052 Move X21, [X0]
	053 Call 0x3EB2AE0
	054 Move W22, W31
	055 Move TEMP, X20
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {30}
	059 Move X21, X31
	060 Move X22, X0
	061 Move TEMP, X20
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {70}
	065 Move X8, [X19]
	066 Move X9, [X8+424]
	067 Move X1, [X8+432]
	068 Move X0, X19
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Compare X21, 0
	071 JumpIfNotEqual {74}
	072 Move X0, X22
	073 Call 0x1D2D690
	074 Move X0, X21
	075 Call 0x1C17F18
	076 Call 0x1991590

Method: System.Boolean TryDequeue(System.Threading.Tasks.Task task)

Disassembly:
	0x033FB91C BL 0x1C16F10
	0x033FB920 MOV X19, X0

ISIL:
	001 Move X0, X1
	002 Call ThreadPool.TryPopCustomWorkItem, X0
	003 Return X0

Method: System.Void NotifyWorkItemProgress()

Disassembly:
	0x033FB924 ADRP X0, 0xD27000
	0x033FB928 LDR X0, [X0 + 0x308]
	0x033FB92C BL 0x1C16D08
	0x033FB930 MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Call ThreadPool.EnsureVMInitialized
	003 Move X30, [X31+16]
	004 Call 0x1C97780
	005 Return 

Method: System.Boolean get_RequiresAtomicStartTransition()

Disassembly:
	0x033FB934 ADRP X0, 0xD27000
	0x033FB938 LDR X0, [X0 + 0xE0]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void .cctor()

Disassembly:
	0x033FB93C BL 0x1C16D08
	0x033FB940 MOV X2, X0
	0x033FB944 MOV X0, X19
	0x033FB948 MOV X1, X20
	0x033FB94C MOV X3, X31
	0x033FB950 BL 0x3311888
	0x033FB954 ADRP X0, 0xD32000
	0x033FB958 LDR X0, [X0 + 0xB70]
	0x033FB95C BL 0x1C16D08
	0x033FB960 MOV X1, X0
	0x033FB964 MOV X0, X19
	0x033FB968 BL 0x1C16DEC
	0x033FB96C STR X30, [X31 - 0x20]!
	0x033FB970 STP X20, X19, [X31 + 0x10]
	0x033FB974 CBZ X1, 0x33FB9A0
	0x033FB978 CBZ X3, 0x33FB9A0
	0x033FB97C TBNZ X2, 0x1F, 0x33FB9F8
	0x033FB980 TBNZ X4, 0x1F, 0x33FB9F8
	0x033FB984 LDR X8, [X0]
	0x033FB988 LDP X20, X19, [X31 + 0x10]
	0x033FB98C MOV X5, X31
	0x033FB990 LDR X7, [X8 + 0x308]
	0x033FB994 LDR X6, [X8 + 0x310]
	0x033FB998 LDR X30, [X31], #0x20
	0x033FB99C BR X7
	0x033FB9A0 ADRP X8, 0xD27000
	0x033FB9A4 ADRP X9, 0xD27000
	0x033FB9A8 LDR X8, [X8 + 0x2D8]
	0x033FB9AC LDR X9, [X9 + 0x308]
	0x033FB9B0 CMP X1, 0x0
	0x033FB9B4 CSEL X0, X9, X8, EQ
	0x033FB9B8 BL 0x1C16D08
	0x033FB9BC MOV X19, X0
	0x033FB9C0 ADRP X0, 0xCFD000
	0x033FB9C4 LDR X0, [X0 + 0x528]
	0x033FB9C8 BL 0x1C16D08
	0x033FB9CC BL 0x1C16F10
	0x033FB9D0 MOV X20, X0
	0x033FB9D4 ADRP X0, 0xD27000
	0x033FB9D8 LDR X0, [X0 + 0x2E0]
	0x033FB9DC BL 0x1C16D08
	0x033FB9E0 MOV X2, X0
	0x033FB9E4 MOV X0, X20
	0x033FB9E8 MOV X1, X19
	0x033FB9EC MOV X3, X31
	0x033FB9F0 BL 0x3315F7C
	0x033FB9F4 B 0x33FBA4C
	0x033FB9F8 ADRP X8, 0xD27000
	0x033FB9FC ADRP X9, 0xD27000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xFE3000
	007 Move X19, 0xD33000
	008 Move W8, [X20+1227]
	009 Move X19, [X19+2848]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xD33000
	015 Move X0, [X0+952]
	016 Call 0x1C17CF4
	017 Move X0, 0xD33000
	018 Move X0, [X0+2816]
	019 Call 0x1C17CF4
	020 Move X0, 0xD33000
	021 Move X0, [X0+2856]
	022 Call 0x1C17CF4
	023 Move X0, 0xD33000
	024 Move X0, [X0+2848]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+1227], W8
	028 Move X0, [X19]
	029 Move X22, 0xD33000
	030 Move X20, 0xD33000
	031 Move X21, 0xD33000
	032 Move W8, [X0+224]
	033 Move X22, [X22+952]
	034 Move X20, [X20+2856]
	035 Move X21, [X21+2816]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X19]
	040 Move X8, [X0+184]
	041 Move X0, [X22]
	042 Move X19, [X8]
	043 Call 0x1C17F10
	044 Move X2, [X20]
	045 Move X1, X19
	046 Move X3, X31
	047 Move X20, X0
	048 Call ParameterizedThreadStart..ctor, X0, X1, X2
	049 Move X8, [X21]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X8, [X8+184]
	053 Move [X8], X20
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X30, [X31+48]
	057 Return 

