Type: System.Threading.Tasks.ThreadPoolTaskScheduler/<>c

Method: System.Void .cctor()

Disassembly:
	0x033FBA00 LDR X8, [X8 + 0x328]
	0x033FBA04 LDR X9, [X9 + 0x310]
	0x033FBA08 CMP W4, 0x0
	0x033FBA0C CSEL X0, X9, X8, LT
	0x033FBA10 BL 0x1C16D08
	0x033FBA14 MOV X19, X0
	0x033FBA18 ADRP X0, 0xD00000
	0x033FBA1C LDR X0, [X0 + 0x760]
	0x033FBA20 BL 0x1C16D08
	0x033FBA24 BL 0x1C16F10
	0x033FBA28 MOV X20, X0
	0x033FBA2C ADRP X0, 0xD20000
	0x033FBA30 LDR X0, [X0 + 0x670]
	0x033FBA34 BL 0x1C16D08
	0x033FBA38 MOV X2, X0
	0x033FBA3C MOV X0, X20
	0x033FBA40 MOV X1, X19
	0x033FBA44 MOV X3, X31
	0x033FBA48 BL 0x3311888
	0x033FBA4C ADRP X0, 0xD32000
	0x033FBA50 LDR X0, [X0 + 0xB78]
	0x033FBA54 BL 0x1C16D08
	0x033FBA58 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xFE3000
	005 Move X20, 0xD33000
	006 Move W8, [X19+1228]
	007 Move X20, [X20+2848]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD33000
	013 Move X0, [X0+2848]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1228], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x033FBA5C MOV X0, X20
	0x033FBA60 BL 0x1C16DEC

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <.cctor>b__10_0(System.Object s)

Disassembly:
	0x033FBA64 STP X30, X23, [X31 - 0x30]!
	0x033FBA68 STP X22, X21, [X31 + 0x10]
	0x033FBA6C STP X20, X19, [X31 + 0x20]
	0x033FBA70 ADRP X23, 0xFE2000
	0x033FBA74 LDRB W8, [X23 + 0x4D1]
	0x033FBA78 MOV W20, W3
	0x033FBA7C MOV W19, W2
	0x033FBA80 MOV X22, X1
	0x033FBA84 MOV X21, X0
	0x033FBA88 TBNZ X8, 0x0, 0x33FBAA0
	0x033FBA8C ADRP X0, 0xCFA000
	0x033FBA90 LDR X0, [X0 + 0x278]
	0x033FBA94 BL 0x1C16CF4
	0x033FBA98 MOVZ W8, 0x1
	0x033FBA9C STRB W8, [X23 + 0x4D1]
	0x033FBAA0 CBZ X22, 0x33FBB10
	0x033FBAA4 TBNZ X20, 0x1F, 0x33FBB58
	0x033FBAA8 TBNZ X19, 0x1F, 0x33FBB58
	0x033FBAAC LDR W8, [X22 + 0x18]
	0x033FBAB0 SUB W9, W8, W19
	0x033FBAB4 CMP W9, W20
	0x033FBAB8 B.LT 0x33FBBC4
	0x033FBABC CBZ W20, 0x33FBAEC
	0x033FBAC0 ADD X9, X22, 0x20
	0x033FBAC4 CMP W8, 0x0
	0x033FBAC8 CSEL X8, X31, X9, EQ
	0x033FBACC ADD X0, X8, W19, SXTW
	0x033FBAD0 MOV W1, W20
	0x033FBAD4 MOV X2, X21
	0x033FBAD8 LDP X20, X19, [X31 + 0x20]
	0x033FBADC LDP X22, X21, [X31 + 0x10]
	0x033FBAE0 MOV X3, X31
	0x033FBAE4 LDP X30, X23, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFE3000
	005 Move W8, [X20+1229]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xCFA000
	012 Move X0, [X0+1976]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1229], W8
	016 Compare X19, 0
	017 JumpIfEqual {38}
	018 Move X9, 0xCFA000
	019 Move X9, [X9+1976]
	020 Move X8, [X19]
	021 Move X1, [X9]
	022 Move W10, [X8+304]
	023 Move W9, [X1+304]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X8, [X8+200]
	026 Add X8, X8, X9
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move W1, W31
	033 Move X30, [X31+32]
	034 Call Task.ExecuteEntry, X0, X1
	035 Return 
	036 Move X0, X19
	037 Call 0x1C181E0
	038 Call 0x1C17F20

