Type: System.Threading.Tasks.TaskFactory/CompleteOnInvokePromise

Method: System.Void .ctor(System.Collections.Generic.IList`1<System.Threading.Tasks.Task> tasks)

Disassembly:
	0x033FABAC LDR X30, [X31], #0x20
	0x033FABB0 RET
	0x033FABB4 STR X30, [X31 - 0x20]!
	0x033FABB8 STP X20, X19, [X31 + 0x10]
	0x033FABBC ADRP X19, 0xFE3000
	0x033FABC0 ADRP X20, 0xD28000
	0x033FABC4 LDRB W8, [X19 + 0x4E5]
	0x033FABC8 LDR X20, [X20 + 0x958]
	0x033FABCC TBNZ X8, 0x0, 0x33FABF0
	0x033FABD0 ADRP X0, 0xD28000
	0x033FABD4 LDR X0, [X0 + 0x958]
	0x033FABD8 BL 0x1C16CF4
	0x033FABDC ADRP X0, 0xD28000
	0x033FABE0 LDR X0, [X0 + 0x648]
	0x033FABE4 BL 0x1C16CF4
	0x033FABE8 MOVZ W8, 0x1
	0x033FABEC STRB W8, [X19 + 0x4E5]
	0x033FABF0 LDR X8, [X20]
	0x033FABF4 LDR X8, [X8 + 0xB8]
	0x033FABF8 LDR X0, [X8]
	0x033FABFC CBNZ X0, 0x33FAC3C
	0x033FAC00 ADRP X8, 0xD28000
	0x033FAC04 LDR X8, [X8 + 0x648]
	0x033FAC08 LDR X0, [X8]
	0x033FAC0C BL 0x1C16F10
	0x033FAC10 MOV X19, X0
	0x033FAC14 BL 0x33FD9A4
	0x033FAC18 LDR X8, [X20]
	0x033FAC1C MOV X1, X19
	0x033FAC20 MOV X2, X31
	0x033FAC24 LDR X0, [X8 + 0xB8]
	0x033FAC28 BL 0x1C24138
	0x033FAC2C CBNZ X0, 0x33FAC3C
	0x033FAC30 LDR X8, [X20]
	0x033FAC34 LDR X8, [X8 + 0xB8]
	0x033FAC38 LDR X0, [X8]
	0x033FAC3C LDP X20, X19, [X31 + 0x10]
	0x033FAC40 LDR X30, [X31], #0x20
	0x033FAC44 RET
	0x033FAC48 STR X30, [X31 - 0x20]!
	0x033FAC4C STP X20, X19, [X31 + 0x10]
	0x033FAC50 CBZ X1, 0x33FACB0
	0x033FAC54 TBNZ X3, 0x1F, 0x33FACF8
	0x033FAC58 TBNZ X2, 0x1F, 0x33FACF8
	0x033FAC5C LDR W8, [X1 + 0x18]
	0x033FAC60 SUB W9, W8, W2
	0x033FAC64 CMP W9, W3
	0x033FAC68 B.LT 0x33FAD64
	0x033FAC6C CBZ W3, 0x33FACA0
	0x033FAC70 LDR X9, [X0]
	0x033FAC74 LDP X20, X19, [X31 + 0x10]
	0x033FAC78 ADD X10, X1, 0x20
	0x033FAC7C CMP W8, 0x0
	0x033FAC80 LDR X5, [X9 + 0x228]
	0x033FAC84 LDR X4, [X9 + 0x230]
	0x033FAC88 CSEL X8, X31, X10, EQ
	0x033FAC8C ADD X1, X8, W2, 0x1, SXTW
	0x033FAC90 MOV W2, W3
	0x033FAC94 MOV X3, X31
	0x033FAC98 LDR X30, [X31], #0x20
	0x033FAC9C BR X5
	0x033FACA0 LDP X20, X19, [X31 + 0x10]
	0x033FACA4 MOV W0, W31
	0x033FACA8 LDR X30, [X31], #0x20
	0x033FACAC RET
	0x033FACB0 ADRP X0, 0xCFE000
	0x033FACB4 LDR X0, [X0 + 0x528]
	0x033FACB8 BL 0x1C16D08
	0x033FACBC BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xFE4000
	008 Move X23, 0xD34000
	009 Move X21, 0xD22000
	010 Move W8, [X22+1209]
	011 Move X23, [X23+2744]
	012 Move X21, [X21+1832]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0xD22000
	020 Move X0, [X0+1832]
	021 Call 0x1C17CF4
	022 Move X0, 0xD34000
	023 Move X0, [X0+2744]
	024 Call 0x1C17CF4
	025 Move X0, 0xD34000
	026 Move X0, [X0+2752]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+1209], W8
	030 Move X1, [X23]
	031 Move X0, X19
	032 Call Task`1<Object>..ctor, X0
	033 Move [X19+88], X20
	034 Move X0, [X21]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {44}
	038 Call 0x1C17DFC
	039 Move X0, [X21]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X20, 0xFE0000
	045 Move W8, [X20+2088]
	046 Compare W8, 0
	047 JumpIfNotEqual {56}
	048 Move X0, 0xD22000
	049 Move X0, [X0+1832]
	050 Call 0x1C17CF4
	051 Move X0, 0xCFB000
	052 Move X0, [X0+1976]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X20+2088], W8
	056 Move X20, 0xCFB000
	057 Move X20, [X20+1976]
	058 Move X0, [X20]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {64}
	062 Call 0x1C17DFC
	063 Move X0, [X20]
	064 Move X8, [X0+184]
	065 Move W8, [X8+16]
	066 Compare W8, 0
	067 JumpIfEqual {82}
	068 Move X0, [X21]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, X19
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move X30, [X31+48]
	079 Move X23, [X31+56]
	080 Call DebuggerSupport.AddToActiveTasksNonInlined, X0
	081 Return 
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X30, [X31+48]
	087 Move X23, [X31+56]
	088 Return 

Method: System.Void Invoke(System.Threading.Tasks.Task completingTask)

Disassembly:
	0x033FACC0 MOV X19, X0
	0x033FACC4 ADRP X0, 0xD28000
	0x033FACC8 LDR X0, [X0 + 0x2D8]
	0x033FACCC BL 0x1C16D08
	0x033FACD0 MOV X20, X0
	0x033FACD4 ADRP X0, 0xD28000
	0x033FACD8 LDR X0, [X0 + 0x2E0]
	0x033FACDC BL 0x1C16D08
	0x033FACE0 MOV X2, X0
	0x033FACE4 MOV X0, X19
	0x033FACE8 MOV X1, X20
	0x033FACEC MOV X3, X31
	0x033FACF0 BL 0x3315F7C
	0x033FACF4 B 0x33FADA8
	0x033FACF8 ADRP X8, 0xD21000
	0x033FACFC ADRP X9, 0xD04000
	0x033FAD00 LDR X8, [X8 + 0x648]
	0x033FAD04 LDR X9, [X9 + 0x130]
	0x033FAD08 CMP W2, 0x0
	0x033FAD0C CSEL X0, X9, X8, LT
	0x033FAD10 BL 0x1C16D08
	0x033FAD14 MOV X19, X0
	0x033FAD18 ADRP X0, 0xD01000
	0x033FAD1C LDR X0, [X0 + 0x760]
	0x033FAD20 BL 0x1C16D08
	0x033FAD24 BL 0x1C16F10
	0x033FAD28 MOV X20, X0
	0x033FAD2C ADRP X0, 0xD21000
	0x033FAD30 LDR X0, [X0 + 0x670]
	0x033FAD34 BL 0x1C16D08
	0x033FAD38 MOV X2, X0
	0x033FAD3C MOV X0, X20
	0x033FAD40 MOV X1, X19
	0x033FAD44 MOV X3, X31
	0x033FAD48 BL 0x3311888
	0x033FAD4C ADRP X0, 0xD33000
	0x033FAD50 LDR X0, [X0 + 0xB30]
	0x033FAD54 BL 0x1C16D08
	0x033FAD58 MOV X1, X0
	0x033FAD5C MOV X0, X20
	0x033FAD60 BL 0x1C16DEC
	0x033FAD64 ADRP X0, 0xD01000
	0x033FAD68 LDR X0, [X0 + 0x760]
	0x033FAD6C BL 0x1C16D08
	0x033FAD70 BL 0x1C16F10
	0x033FAD74 MOV X19, X0
	0x033FAD78 ADRP X0, 0xD28000
	0x033FAD7C LDR X0, [X0 + 0x2D8]
	0x033FAD80 BL 0x1C16D08
	0x033FAD84 MOV X20, X0
	0x033FAD88 ADRP X0, 0xD28000
	0x033FAD8C LDR X0, [X0 + 0xE0]
	0x033FAD90 BL 0x1C16D08
	0x033FAD94 MOV X2, X0
	0x033FAD98 MOV X0, X19
	0x033FAD9C MOV X1, X20
	0x033FADA0 MOV X3, X31
	0x033FADA4 BL 0x3311888
	0x033FADA8 ADRP X0, 0xD33000
	0x033FADAC LDR X0, [X0 + 0xB30]
	0x033FADB0 BL 0x1C16D08
	0x033FADB4 MOV X1, X0
	0x033FADB8 MOV X0, X19
	0x033FADBC BL 0x1C16DEC
	0x033FADC0 STR X30, [X31 - 0x20]!
	0x033FADC4 STP X20, X19, [X31 + 0x10]
	0x033FADC8 CBZ X1, 0x33FAE04
	0x033FADCC MOV X20, X0
	0x033FADD0 MOV X0, X31
	0x033FADD4 MOV X19, X1
	0x033FADD8 BL 0x32C1424
	0x033FADDC LDR X8, [X20]
	0x033FADE0 LDR W2, [X19 + 0x10]
	0x033FADE4 ADD X1, X19, W0, SXTW
	0x033FADE8 MOV X0, X20
	0x033FADEC LDR X5, [X8 + 0x228]
	0x033FADF0 LDR X4, [X8 + 0x230]
	0x033FADF4 LDP X20, X19, [X31 + 0x10]
	0x033FADF8 MOV X3, X31
	0x033FADFC LDR X30, [X31], #0x20
	0x033FAE00 BR X5
	0x033FAE04 ADRP X0, 0xCFE000
	0x033FAE08 LDR X0, [X0 + 0x528]
	0x033FAE0C BL 0x1C16D08
	0x033FAE10 BL 0x1C16F10
	0x033FAE14 MOV X19, X0
	0x033FAE18 ADRP X0, 0xD28000
	0x033FAE1C LDR X0, [X0 + 0x2D8]
	0x033FAE20 BL 0x1C16D08
	0x033FAE24 MOV X1, X0
	0x033FAE28 MOV X0, X19
	0x033FAE2C MOV X2, X31
	0x033FAE30 BL 0x330E100
	0x033FAE34 ADRP X0, 0xD33000
	0x033FAE38 LDR X0, [X0 + 0xB38]
	0x033FAE3C BL 0x1C16D08
	0x033FAE40 MOV X1, X0
	0x033FAE44 MOV X0, X19
	0x033FAE48 BL 0x1C16DEC
	0x033FAE4C STR X30, [X31 - 0x20]!
	0x033FAE50 STP X20, X19, [X31 + 0x10]
	0x033FAE54 CBZ X1, 0x33FAE78
	0x033FAE58 TBNZ X2, 0x1F, 0x33FAEC0
	0x033FAE5C LDR X8, [X0]
	0x033FAE60 LDP X20, X19, [X31 + 0x10]
	0x033FAE64 MOV X3, X31
	0x033FAE68 LDR X5, [X8 + 0x228]
	0x033FAE6C LDR X4, [X8 + 0x230]
	0x033FAE70 LDR X30, [X31], #0x20
	0x033FAE74 BR X5
	0x033FAE78 ADRP X0, 0xCFE000
	0x033FAE7C LDR X0, [X0 + 0x528]
	0x033FAE80 BL 0x1C16D08
	0x033FAE84 BL 0x1C16F10
	0x033FAE88 MOV X19, X0
	0x033FAE8C ADRP X0, 0xD28000
	0x033FAE90 LDR X0, [X0 + 0x2D8]
	0x033FAE94 BL 0x1C16D08
	0x033FAE98 MOV X20, X0
	0x033FAE9C ADRP X0, 0xD28000
	0x033FAEA0 LDR X0, [X0 + 0x2E0]
	0x033FAEA4 BL 0x1C16D08
	0x033FAEA8 MOV X2, X0
	0x033FAEAC MOV X0, X19
	0x033FAEB0 MOV X1, X20
	0x033FAEB4 MOV X3, X31
	0x033FAEB8 BL 0x3315F7C
	0x033FAEBC B 0x33FAF04
	0x033FAEC0 ADRP X0, 0xD01000
	0x033FAEC4 LDR X0, [X0 + 0x760]
	0x033FAEC8 BL 0x1C16D08
	0x033FAECC BL 0x1C16F10
	0x033FAED0 MOV X19, X0
	0x033FAED4 ADRP X0, 0xD21000
	0x033FAED8 LDR X0, [X0 + 0x648]
	0x033FAEDC BL 0x1C16D08
	0x033FAEE0 MOV X20, X0
	0x033FAEE4 ADRP X0, 0xD21000
	0x033FAEE8 LDR X0, [X0 + 0x670]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xFE4000
	009 Move X22, 0xD34000
	010 Move W8, [X21+1210]
	011 Move X22, [X22+2760]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0xD22000
	019 Move X0, [X0+1832]
	020 Call 0x1C17CF4
	021 Move X0, 0xD34000
	022 Move X0, [X0+2304]
	023 Call 0x1C17CF4
	024 Move X0, 0xD34000
	025 Move X0, [X0+2384]
	026 Call 0x1C17CF4
	027 Move X0, 0xD34000
	028 Move X0, [X0+2760]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+1210], W8
	032 Move X2, [X22]
	033 Move X0, X19
	034 Move X1, X20
	035 Call Task`1<Object>.TrySetResult, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {150}
	040 Move X20, 0xD22000
	041 Move X20, [X20+1832]
	042 Move X0, [X20]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {52}
	046 Call 0x1C17DFC
	047 Move X0, [X20]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X21, 0xFE0000
	053 Move W8, [X21+2089]
	054 Compare W8, 0
	055 JumpIfNotEqual {64}
	056 Move X0, 0xD22000
	057 Move X0, [X0+1832]
	058 Call 0x1C17CF4
	059 Move X0, 0xCFB000
	060 Move X0, [X0+1976]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X21+2089], W8
	064 Move X21, 0xCFB000
	065 Move X21, [X21+1976]
	066 Move X0, [X21]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {72}
	070 Call 0x1C17DFC
	071 Move X0, [X21]
	072 Move X8, [X0+184]
	073 Move W8, [X8+16]
	074 Compare W8, 0
	075 JumpIfEqual {83}
	076 Move X0, [X20]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, X19
	082 Call DebuggerSupport.RemoveFromActiveTasksNonInlined, X0
	083 Move X20, [X19+88]
	084 Compare X20, 0
	085 JumpIfEqual {158}
	086 Move X10, 0xD34000
	087 Move X8, [X20]
	088 Move X10, [X10+2304]
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 Move X1, [X10]
	091 Compare X9, 0
	092 JumpIfEqual {99}
	093 Move X10, [X8+176]
	094 Add X10, X10, 8
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Subtract X9, X9, 1
	098 Add X10, X10, 16
	099 Move X0, X20
	100 Move W2, W31
	101 Call 0x1C5D788
	102 NotImplemented "Instruction LDRSW not yet implemented."
	103 Add X8, X8, X9
	104 Add X0, X8, 312
	105 Move X8, [X0]
	106 Move X1, [X0+8]
	107 Move X0, X20
	108 NotImplemented "Instruction BLR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X24, 0xD34000
	111 Move X24, [X24+2384]
	112 Move W21, W0
	113 Move W22, W31
	114 Move X8, [X20]
	115 Move X1, [X24]
	116 NotImplemented "Instruction LDRH not yet implemented."
	117 Compare X9, 0
	118 JumpIfEqual {125}
	119 Move X10, [X8+176]
	120 Add X10, X10, 8
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Subtract X9, X9, 1
	124 Add X10, X10, 16
	125 Move X0, X20
	126 Move W2, W31
	127 Call 0x1C5D788
	128 NotImplemented "Instruction LDRSW not yet implemented."
	129 Add X8, X8, X9
	130 Add X0, X8, 312
	131 Move X8, [X0]
	132 Move X2, [X0+8]
	133 Move X0, X20
	134 Move W1, W22
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Compare X0, 0
	137 JumpIfEqual {147}
	138 Move X23, X0
	139 Call Task.get_IsCompleted, X0
	140 Move TEMP, X0
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfEqual {147}
	144 Move X0, X23
	145 Move X1, X19
	146 Call Task.RemoveContinuation, X0, X1
	147 Add W22, W22, 1
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move [X19+88], X31
	150 Move X20, [X31+48]
	151 Move X19, [X31+56]
	152 Move X22, [X31+32]
	153 Move X21, [X31+40]
	154 Move X24, [X31+16]
	155 Move X23, [X31+24]
	156 Move X30, [X31+64]
	157 Return 
	158 Call 0x1C17F20

Method: System.Boolean get_InvokeMayRunArbitraryCode()

Disassembly:
	0x033FB108 ADRP X0, 0xD00000
	0x033FB10C LDR X0, [X0 + 0x760]

ISIL:
	001 Move W0, 1
	002 Return X0

