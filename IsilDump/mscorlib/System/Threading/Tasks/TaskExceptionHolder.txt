Type: System.Threading.Tasks.TaskExceptionHolder

Method: System.Void .ctor(System.Threading.Tasks.Task task)

Disassembly:
	0x033F1F08 ADRP X23, 0xD2A000
	0x033F1F0C LDR X23, [X23 + 0x728]
	0x033F1F10 LDR X0, [X23]
	0x033F1F14 LDR W8, [X0 + 0xE0]
	0x033F1F18 CBNZ W8, 0x33F1F20
	0x033F1F1C BL 0x1C16DFC
	0x033F1F20 ADRP X29, 0xD03000
	0x033F1F24 LDR W21, [X19 + 0x38]
	0x033F1F28 LDR X29, [X29 + 0xE70]
	0x033F1F2C BL 0x1C16D44

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Boolean ShouldFailFastOnUnobservedException()

Disassembly:
	0x033F99C4 CBNZ W8, 0x33F99DC
	0x033F99C8 BL 0x1C16DFC

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void Finalize()

Disassembly:
	0x033F99CC LDR X0, [X20]
	0x033F99D0 LDR W8, [X0 + 0xE0]
	0x033F99D4 CBNZ W8, 0x33F99DC
	0x033F99D8 BL 0x1C16DFC
	0x033F99DC ADRP X21, 0xFE0000
	0x033F99E0 LDRB W8, [X21 + 0x828]
	0x033F99E4 CBNZ W8, 0x33F9A08
	0x033F99E8 ADRP X0, 0xD22000
	0x033F99EC LDR X0, [X0 + 0x728]
	0x033F99F0 BL 0x1C16CF4
	0x033F99F4 ADRP X0, 0xCFB000
	0x033F99F8 LDR X0, [X0 + 0x7B8]
	0x033F99FC BL 0x1C16CF4
	0x033F9A00 MOVZ W8, 0x1
	0x033F9A04 STRB W8, [X21 + 0x828]
	0x033F9A08 ADRP X21, 0xCFB000
	0x033F9A0C LDR X21, [X21 + 0x7B8]
	0x033F9A10 LDR X0, [X21]
	0x033F9A14 LDR W8, [X0 + 0xE0]
	0x033F9A18 CBNZ W8, 0x33F9A24
	0x033F9A1C BL 0x1C16DFC
	0x033F9A20 LDR X0, [X21]
	0x033F9A24 LDR X8, [X0 + 0xB8]
	0x033F9A28 LDRB W8, [X8 + 0x10]
	0x033F9A2C CBZ W8, 0x33F9A54
	0x033F9A30 LDR X0, [X20]
	0x033F9A34 LDR W8, [X0 + 0xE0]
	0x033F9A38 CBNZ W8, 0x33F9A40
	0x033F9A3C BL 0x1C16DFC
	0x033F9A40 MOV X0, X19
	0x033F9A44 LDP X20, X19, [X31 + 0x20]
	0x033F9A48 LDP X22, X21, [X31 + 0x10]
	0x033F9A4C LDR X30, [X31], #0x30
	0x033F9A50 B 0x33EE67C
	0x033F9A54 LDP X20, X19, [X31 + 0x20]
	0x033F9A58 LDP X22, X21, [X31 + 0x10]
	0x033F9A5C LDR X30, [X31], #0x30
	0x033F9A60 RET
	0x033F9A64 BL 0x1C16F20
	0x033F9A68 STR X30, [X31 - 0x30]!
	0x033F9A6C STP X22, X21, [X31 + 0x10]
	0x033F9A70 STP X20, X19, [X31 + 0x20]
	0x033F9A74 ADRP X22, 0xFE4000
	0x033F9A78 ADRP X21, 0xD22000
	0x033F9A7C LDRB W8, [X22 + 0x4B7]
	0x033F9A80 LDR X21, [X21 + 0x728]
	0x033F9A84 MOV X20, X1
	0x033F9A88 MOV X19, X0
	0x033F9A8C TBNZ X8, 0x0, 0x33F9AB0
	0x033F9A90 ADRP X0, 0xD22000
	0x033F9A94 LDR X0, [X0 + 0x728]
	0x033F9A98 BL 0x1C16CF4
	0x033F9A9C ADRP X0, 0xD34000
	0x033F9AA0 LDR X0, [X0 + 0xAB0]
	0x033F9AA4 BL 0x1C16CF4
	0x033F9AA8 MOVZ W8, 0x1
	0x033F9AAC STRB W8, [X22 + 0x4B7]
	0x033F9AB0 LDR X0, [X21]
	0x033F9AB4 LDR W8, [X0 + 0xE0]
	0x033F9AB8 CBNZ W8, 0x33F9AC0
	0x033F9ABC BL 0x1C16DFC
	0x033F9AC0 CBZ X20, 0x33F9BA8
	0x033F9AC4 LDR W20, [X20 + 0x38]
	0x033F9AC8 BL 0x1C16D44
	0x033F9ACC TBZ X20, 0x1C, 0x33F9ADC
	0x033F9AD0 MOVZ W1, 0x1
	0x033F9AD4 MOV X0, X19
	0x033F9AD8 BL 0x33EFDD0
	0x033F9ADC ADD X0, X19, 0x60
	0x033F9AE0 BL 0x1C242B0
	0x033F9AE4 CBZ W0, 0x33F9AF8
	0x033F9AE8 LDP X20, X19, [X31 + 0x20]
	0x033F9AEC LDP X22, X21, [X31 + 0x10]
	0x033F9AF0 LDR X30, [X31], #0x30
	0x033F9AF4 RET
	0x033F9AF8 LDR X0, [X21]
	0x033F9AFC LDR W8, [X0 + 0xE0]
	0x033F9B00 CBNZ W8, 0x33F9B18
	0x033F9B04 BL 0x1C16DFC
	0x033F9B08 LDR X0, [X21]
	0x033F9B0C LDR W8, [X0 + 0xE0]
	0x033F9B10 CBNZ W8, 0x33F9B18
	0x033F9B14 BL 0x1C16DFC
	0x033F9B18 ADRP X20, 0xFE0000
	0x033F9B1C LDRB W8, [X20 + 0x829]
	0x033F9B20 CBNZ W8, 0x33F9B44
	0x033F9B24 ADRP X0, 0xD22000
	0x033F9B28 LDR X0, [X0 + 0x728]
	0x033F9B2C BL 0x1C16CF4
	0x033F9B30 ADRP X0, 0xCFB000
	0x033F9B34 LDR X0, [X0 + 0x7B8]
	0x033F9B38 BL 0x1C16CF4
	0x033F9B3C MOVZ W8, 0x1
	0x033F9B40 STRB W8, [X20 + 0x829]
	0x033F9B44 ADRP X20, 0xCFB000
	0x033F9B48 LDR X20, [X20 + 0x7B8]
	0x033F9B4C LDR X0, [X20]
	0x033F9B50 LDR W8, [X0 + 0xE0]
	0x033F9B54 CBNZ W8, 0x33F9B60
	0x033F9B58 BL 0x1C16DFC
	0x033F9B5C LDR X0, [X20]
	0x033F9B60 LDR X8, [X0 + 0xB8]
	0x033F9B64 LDRB W8, [X8 + 0x10]
	0x033F9B68 CBZ W8, 0x33F9B84
	0x033F9B6C LDR X0, [X21]
	0x033F9B70 LDR W8, [X0 + 0xE0]
	0x033F9B74 CBNZ W8, 0x33F9B7C
	0x033F9B78 BL 0x1C16DFC
	0x033F9B7C MOV X0, X19
	0x033F9B80 BL 0x33EE8F8
	0x033F9B84 ADRP X8, 0xD34000
	0x033F9B88 LDR X1, [X19 + 0x58]
	0x033F9B8C LDR X8, [X8 + 0xAB0]
	0x033F9B90 MOV X0, X19
	0x033F9B94 LDP X20, X19, [X31 + 0x20]
	0x033F9B98 LDP X22, X21, [X31 + 0x10]
	0x033F9B9C LDR X2, [X8]
	0x033F9BA0 LDR X30, [X31], #0x30
	0x033F9BA4 B 0x269F268
	0x033F9BA8 BL 0x1C16F20
	0x033F9BAC STP X30, X23, [X31 - 0x30]!
	0x033F9BB0 STP X22, X21, [X31 + 0x10]
	0x033F9BB4 STP X20, X19, [X31 + 0x20]
	0x033F9BB8 ADRP X22, 0xFE4000
	0x033F9BBC ADRP X23, 0xD34000
	0x033F9BC0 ADRP X21, 0xD22000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xFE5000
	007 Move W8, [X20+1192]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0xD2D000
	014 Move X0, [X0+2256]
	015 Call 0x1C17CF4
	016 Move X0, 0xD35000
	017 Move X0, [X0+1888]
	018 Call 0x1C17CF4
	019 Move X0, 0xD03000
	020 Move X0, [X0+2024]
	021 Call 0x1C17CF4
	022 Move X0, 0xD35000
	023 Move X0, [X0+2576]
	024 Call 0x1C17CF4
	025 Move X0, 0xD35000
	026 Move X0, [X0+2584]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+1192], W8
	030 Move X20, [X19+24]
	031 Call 0x1C17D44
	032 Compare X20, 0
	033 JumpIfEqual {92}
	034 Move W20, [X19+40]
	035 Call 0x1C17D44
	036 Compare W20, 0
	037 JumpIfNotEqual {92}
	038 Move X0, X31
	039 Call Environment.get_HasShutdownStarted
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {92}
	044 Move X21, [X19+24]
	045 Call 0x1C17D44
	046 Move X8, 0xD2D000
	047 Move X8, [X8+2256]
	048 Move X0, [X8]
	049 Call 0x1C17F10
	050 Move X8, 0xD35000
	051 Move X8, [X8+2584]
	052 Move X20, X0
	053 Move X1, [X8]
	054 Move X2, X21
	055 Move X3, X31
	056 Call AggregateException..ctor, X0, X1, X2
	057 Move X8, 0xD35000
	058 Move X8, [X8+2576]
	059 Move X0, [X8]
	060 Call 0x1C17F10
	061 Move X21, X0
	062 Move X1, X20
	063 Call UnobservedTaskExceptionEventArgs..ctor, X0, X1
	064 Move X8, 0xD03000
	065 Move X8, [X8+2024]
	066 Move X22, [X19+16]
	067 Move X0, [X8]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X22
	073 Move X1, X21
	074 Call TaskScheduler.PublishUnobservedTaskException, X0, X1
	075 Move X22, 0xD35000
	076 Move X22, [X22+1888]
	077 Move X0, [X22]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {83}
	081 Call 0x1C17DFC
	082 Move X0, [X22]
	083 Move X8, [X0+184]
	084 Move W8, [X8]
	085 Compare W8, 0
	086 JumpIfEqual {92}
	087 Compare X21, 0
	088 JumpIfEqual {101}
	089 Move W8, [X21+24]
	090 Compare W8, 0
	091 JumpIfEqual {102}
	092 Move X0, X19
	093 Move X20, [X31+32]
	094 Move X19, [X31+40]
	095 Move X22, [X31+16]
	096 Move X21, [X31+24]
	097 Move X1, X31
	098 Move X30, [X31+48]
	099 Call Object.Finalize, X0
	100 Return 
	101 Call 0x1C17F20
	102 Move X0, 0xD35000
	103 Move X0, [X0+2592]
	104 Call 0x1C17D08
	105 Move X1, X0
	106 Move X0, X20
	107 Call 0x1C17DEC
	108 Move X20, X0
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X0, X20
	111 Call 0x3EB2AD0
	112 Move X21, [X0]
	113 Call 0x3EB2AE0
	114 Move X0, X19
	115 Move X1, X31
	116 Call Object.Finalize, X0
	117 Compare X21, 0
	118 JumpIfNotEqual {126}
	119 Move X20, [X31+32]
	120 Move X19, [X31+40]
	121 Move X22, [X31+16]
	122 Move X21, [X31+24]
	123 Move X30, [X31+48]
	124 Return 
	125 Move X21, X31
	126 Move X0, X21
	127 Call 0x1C17F18
	128 Move X20, X0
	129 Move X0, X19
	130 Move X1, X31
	131 Call Object.Finalize, X0
	132 Compare X21, 0
	133 JumpIfNotEqual {136}
	134 Move X0, X20
	135 Call 0x1D2D690
	136 Move X0, X21
	137 Call 0x1C17F18
	138 Call 0x1991590

Method: System.Boolean get_ContainsFaultList()

Disassembly:
	0x033F1B24 STRB W8, [X20 + 0x486]
	0x033F1B28 STP X31, X31, [X31]
	0x033F1B2C STR X31, [X31 + 0x10]
	0x033F1B30 LDR X0, [X19 + 0x30]
	0x033F1B34 CBZ X0, 0x33F1B7C
	0x033F1B38 ADRP X8, 0xD3C000
	0x033F1B3C LDR X8, [X8 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+24]
	004 Call 0x1C17D44
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0

Method: System.Void Add(System.Object exceptionObject, System.Boolean representsCancellation)

Disassembly:
	0x033F1F30 TBNZ X21, 0x1B, 0x33F1F48
	0x033F1F34 LDR W21, [X19 + 0x38]
	0x033F1F38 BL 0x1C16D44

ISIL:
	001 Move TEMP, X2
	002 And TEMP, TEMP, 1
	003 Compare TEMP, 1
	004 JumpIfNotEqual {7}
	005 Call TaskExceptionHolder.SetCancellationException, X0, X1
	006 Return 
	007 Call TaskExceptionHolder.AddFaultException, X0, X1
	008 Return 

Method: System.Void SetCancellationException(System.Object exceptionObject)

Disassembly:
	0x033F9D64 LDRB W8, [X21 + 0x829]
	0x033F9D68 CBNZ W8, 0x33F9D8C
	0x033F9D6C ADRP X0, 0xD22000
	0x033F9D70 LDR X0, [X0 + 0x728]
	0x033F9D74 BL 0x1C16CF4
	0x033F9D78 ADRP X0, 0xCFB000
	0x033F9D7C LDR X0, [X0 + 0x7B8]
	0x033F9D80 BL 0x1C16CF4
	0x033F9D84 MOVZ W8, 0x1
	0x033F9D88 STRB W8, [X21 + 0x829]
	0x033F9D8C ADRP X21, 0xCFB000
	0x033F9D90 LDR X21, [X21 + 0x7B8]
	0x033F9D94 LDR X0, [X21]
	0x033F9D98 LDR W8, [X0 + 0xE0]
	0x033F9D9C CBNZ W8, 0x33F9DA8
	0x033F9DA0 BL 0x1C16DFC
	0x033F9DA4 LDR X0, [X21]
	0x033F9DA8 LDR X8, [X0 + 0xB8]
	0x033F9DAC LDRB W8, [X8 + 0x10]
	0x033F9DB0 CBZ W8, 0x33F9DCC
	0x033F9DB4 LDR X0, [X20]
	0x033F9DB8 LDR W8, [X0 + 0xE0]
	0x033F9DBC CBNZ W8, 0x33F9DC4
	0x033F9DC0 BL 0x1C16DFC
	0x033F9DC4 MOV X0, X19
	0x033F9DC8 BL 0x33EE8F8
	0x033F9DCC LDR X20, [X19 + 0x58]
	0x033F9DD0 CBZ X20, 0x33F9EE8
	0x033F9DD4 ADRP X10, 0xD34000
	0x033F9DD8 LDR X8, [X20]
	0x033F9DDC LDR X10, [X10 + 0x900]
	0x033F9DE0 LDRH W9, [X8 + 0x12E]
	0x033F9DE4 LDR X1, [X10]
	0x033F9DE8 CBZ X9, 0x33F9E0C
	0x033F9DEC LDR X10, [X8 + 0xB0]
	0x033F9DF0 ADD X10, X10, 0x8
	0x033F9DF4 LDUR X11, [X10 - 0x8]
	0x033F9DF8 CMP X11, X1
	0x033F9DFC B.EQ 0x33F9E1C
	0x033F9E00 SUBS X9, X9, 0x1
	0x033F9E04 ADD X10, X10, 0x10
	0x033F9E08 B.NE 0x33F9DF4
	0x033F9E0C MOV X0, X20
	0x033F9E10 MOV W2, W31
	0x033F9E14 BL 0x1C5C788
	0x033F9E18 B 0x33F9E28
	0x033F9E1C LDRSW X9, [X10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xFE5000
	006 Move W8, [X21+1193]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xD03000
	014 Move X0, [X0+1464]
	015 Call 0x1C17CF4
	016 Move X0, 0xD03000
	017 Move X0, [X0+2216]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1193], W8
	021 Compare X20, 0
	022 JumpIfEqual {39}
	023 Move X9, 0xD03000
	024 Move X9, [X9+2216]
	025 Move X8, [X20]
	026 Move X9, [X9]
	027 Move W11, [X8+304]
	028 Move W10, [X9+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X11, [X8+200]
	031 Add X10, X11, X10
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X9, 0xD03000
	035 Move X9, [X9+1464]
	036 Move X9, [X9]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSEL not yet implemented."
	039 Move X8, X31
	040 Move [X19+32], X8
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move W1, W31
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Call TaskExceptionHolder.MarkAsHandled, X0, X1
	048 Return 
	049 Move X0, X20
	050 Move X1, X31
	051 Call ExceptionDispatchInfo.Capture, X0
	052 Move [X19+32], X0

Method: System.Void AddFaultException(System.Object exceptionObject)

Disassembly:
	0x033F9E20 ADD X8, X8, X9, 0x4, LSL
	0x033F9E24 ADD X0, X8, 0x138
	0x033F9E28 LDP X8, X1, [X0]
	0x033F9E2C MOV X0, X20
	0x033F9E30 BLR X8
	0x033F9E34 CMP W0, 0x1
	0x033F9E38 B.LT 0x33F9ED0
	0x033F9E3C ADRP X24, 0xD34000
	0x033F9E40 LDR X24, [X24 + 0x950]
	0x033F9E44 MOV W21, W0
	0x033F9E48 MOV W22, W31
	0x033F9E4C LDR X8, [X20]
	0x033F9E50 LDR X1, [X24]
	0x033F9E54 LDRH W9, [X8 + 0x12E]
	0x033F9E58 CBZ X9, 0x33F9E7C
	0x033F9E5C LDR X10, [X8 + 0xB0]
	0x033F9E60 ADD X10, X10, 0x8
	0x033F9E64 LDUR X11, [X10 - 0x8]
	0x033F9E68 CMP X11, X1
	0x033F9E6C B.EQ 0x33F9E8C
	0x033F9E70 SUBS X9, X9, 0x1
	0x033F9E74 ADD X10, X10, 0x10
	0x033F9E78 B.NE 0x33F9E64
	0x033F9E7C MOV X0, X20
	0x033F9E80 MOV W2, W31
	0x033F9E84 BL 0x1C5C788
	0x033F9E88 B 0x33F9E98
	0x033F9E8C LDRSW X9, [X10]
	0x033F9E90 ADD X8, X8, X9, 0x4, LSL
	0x033F9E94 ADD X0, X8, 0x138
	0x033F9E98 LDP X8, X2, [X0]
	0x033F9E9C MOV X0, X20
	0x033F9EA0 MOV W1, W22
	0x033F9EA4 BLR X8
	0x033F9EA8 CBZ X0, 0x33F9EC4
	0x033F9EAC MOV X23, X0
	0x033F9EB0 BL 0x33ED11C
	0x033F9EB4 TBNZ X0, 0x0, 0x33F9EC4
	0x033F9EB8 MOV X0, X23
	0x033F9EBC MOV X1, X19
	0x033F9EC0 BL 0x33EF6FC
	0x033F9EC4 ADD W22, W22, 0x1
	0x033F9EC8 CMP W22, W21
	0x033F9ECC B.NE 0x33F9E4C
	0x033F9ED0 STR X31, [X19 + 0x58]
	0x033F9ED4 LDP X20, X19, [X31 + 0x30]
	0x033F9ED8 LDP X22, X21, [X31 + 0x20]
	0x033F9EDC LDP X24, X23, [X31 + 0x10]
	0x033F9EE0 LDR X30, [X31], #0x40
	0x033F9EE4 RET
	0x033F9EE8 BL 0x1C16F20
	0x033F9EEC STR X30, [X31 - 0x30]!
	0x033F9EF0 STP X22, X21, [X31 + 0x10]
	0x033F9EF4 STP X20, X19, [X31 + 0x20]
	0x033F9EF8 ADRP X20, 0xFE4000
	0x033F9EFC LDRB W8, [X20 + 0x4B5]
	0x033F9F00 MOV X19, X0
	0x033F9F04 TBNZ X8, 0x0, 0x33F9F1C
	0x033F9F08 ADRP X0, 0xD03000
	0x033F9F0C LDR X0, [X0 + 0xC20]
	0x033F9F10 BL 0x1C16CF4
	0x033F9F14 MOVZ W8, 0x1
	0x033F9F18 STRB W8, [X20 + 0x4B5]
	0x033F9F1C CBZ X19, 0x33FA038
	0x033F9F20 LDR X1, [X19 + 0x18]
	0x033F9F24 CBZ X1, 0x33FA06C
	0x033F9F28 ADRP X8, 0xD03000
	0x033F9F2C LDR X8, [X8 + 0xC20]
	0x033F9F30 LDR X0, [X8]
	0x033F9F34 BL 0x1C16D6C
	0x033F9F38 LDR W8, [X19 + 0x18]
	0x033F9F3C MOV X20, X0
	0x033F9F40 CMP W8, 0x1
	0x033F9F44 B.LT 0x33F9FA0
	0x033F9F48 MOV W9, W31
	0x033F9F4C CMP W9, W8
	0x033F9F50 B.CS 0x33FA028
	0x033F9F54 CBZ X20, 0x33F9FB4
	0x033F9F58 SXTW X22, W9
	0x033F9F5C ADD X8, X19, X22, 0x3, LSL
	0x033F9F60 LDR X21, [X8 + 0x20]
	0x033F9F64 CBZ X21, 0x33F9FB8
	0x033F9F68 LDR X8, [X20]
	0x033F9F6C MOV X0, X21
	0x033F9F70 LDR X1, [X8 + 0x40]
	0x033F9F74 BL 0x1C16E00
	0x033F9F78 CBZ X0, 0x33FA02C
	0x033F9F7C LDR W8, [X20 + 0x18]
	0x033F9F80 CMP W22, W8
	0x033F9F84 B.CS 0x33FA028
	0x033F9F88 ADD X8, X20, X22, 0x3, LSL
	0x033F9F8C STR X21, [X8 + 0x20]
	0x033F9F90 LDR W8, [X19 + 0x18]
	0x033F9F94 ADD W9, W22, 0x1
	0x033F9F98 CMP W9, W8
	0x033F9F9C B.LT 0x33F9F4C
	0x033F9FA0 MOV X0, X20
	0x033F9FA4 LDP X20, X19, [X31 + 0x20]
	0x033F9FA8 LDP X22, X21, [X31 + 0x10]
	0x033F9FAC LDR X30, [X31], #0x30
	0x033F9FB0 RET
	0x033F9FB4 BL 0x1C16F20
	0x033F9FB8 LDR W8, [X20 + 0x18]
	0x033F9FBC CMP W22, W8
	0x033F9FC0 B.CS 0x33FA028
	0x033F9FC4 ADD X8, X20, X22, 0x3, LSL
	0x033F9FC8 STR X21, [X8 + 0x20]
	0x033F9FCC ADRP X0, 0xD02000
	0x033F9FD0 LDR X0, [X0 + 0x578]
	0x033F9FD4 BL 0x1C16D08
	0x033F9FD8 BL 0x1C16F10
	0x033F9FDC MOV X19, X0
	0x033F9FE0 ADRP X0, 0xD34000
	0x033F9FE4 LDR X0, [X0 + 0x910]
	0x033F9FE8 BL 0x1C16D08
	0x033F9FEC MOV X20, X0
	0x033F9FF0 ADRP X0, 0xD24000
	0x033F9FF4 LDR X0, [X0 + 0x618]
	0x033F9FF8 BL 0x1C16D08
	0x033F9FFC MOV X2, X0
	0x033FA000 MOV X0, X19
	0x033FA004 MOV X1, X20
	0x033FA008 MOV X3, X31
	0x033FA00C BL 0x330E16C
	0x033FA010 ADRP X0, 0xD33000
	0x033FA014 LDR X0, [X0 + 0xAD0]
	0x033FA018 BL 0x1C16D08
	0x033FA01C MOV X1, X0
	0x033FA020 MOV X0, X19
	0x033FA024 BL 0x1C16DEC
	0x033FA028 BL 0x1C16F28
	0x033FA02C BL 0x1C16F44
	0x033FA030 MOV X1, X31
	0x033FA034 BL 0x1C16DEC
	0x033FA038 ADRP X0, 0xCFE000
	0x033FA03C LDR X0, [X0 + 0x528]
	0x033FA040 BL 0x1C16D08
	0x033FA044 BL 0x1C16F10
	0x033FA048 MOV X19, X0
	0x033FA04C ADRP X0, 0xD23000
	0x033FA050 LDR X0, [X0 + 0x618]
	0x033FA054 BL 0x1C16D08
	0x033FA058 MOV X1, X0
	0x033FA05C MOV X0, X19
	0x033FA060 MOV X2, X31
	0x033FA064 BL 0x330E100
	0x033FA068 B 0x33FA010
	0x033FA06C ADRP X0, 0xD01000
	0x033FA070 LDR X0, [X0 + 0x578]
	0x033FA074 BL 0x1C16D08
	0x033FA078 BL 0x1C16F10
	0x033FA07C MOV X19, X0
	0x033FA080 ADRP X0, 0xD33000
	0x033FA084 LDR X0, [X0 + 0x940]
	0x033FA088 B 0x33F9FE8
	0x033FA08C MOVZ W0, 0x1
	0x033FA090 RET
	0x033FA094 STR X30, [X31 - 0x20]!
	0x033FA098 STP X20, X19, [X31 + 0x10]
	0x033FA09C ADRP X20, 0xFE3000
	0x033FA0A0 LDRB W8, [X20 + 0x4B8]
	0x033FA0A4 MOV X19, X0
	0x033FA0A8 TBNZ X8, 0x0, 0x33FA0C0
	0x033FA0AC ADRP X0, 0xCFA000
	0x033FA0B0 LDR X0, [X0 + 0x7B8]
	0x033FA0B4 BL 0x1C16CF4
	0x033FA0B8 MOVZ W8, 0x1
	0x033FA0BC STRB W8, [X20 + 0x4B8]
	0x033FA0C0 LDR W20, [X19 + 0x38]
	0x033FA0C4 BL 0x1C16D44
	0x033FA0C8 TBNZ X20, 0x1C, 0x33FA0DC
	0x033FA0CC LDP X20, X19, [X31 + 0x10]
	0x033FA0D0 MOV W0, W31
	0x033FA0D4 LDR X30, [X31], #0x20
	0x033FA0D8 RET
	0x033FA0DC ADRP X8, 0xCFA000
	0x033FA0E0 LDR X8, [X8 + 0x7B8]
	0x033FA0E4 LDR X19, [X19 + 0x58]
	0x033FA0E8 LDR X0, [X8]
	0x033FA0EC LDR W8, [X0 + 0xE0]
	0x033FA0F0 CBNZ W8, 0x33FA0F8
	0x033FA0F4 BL 0x1C16DFC
	0x033FA0F8 MOV X0, X19
	0x033FA0FC LDP X20, X19, [X31 + 0x10]
	0x033FA100 LDR X30, [X31], #0x20
	0x033FA104 B 0x33EFF34
	0x033FA108 MOVZ W0, 0x1
	0x033FA10C RET
	0x033FA110 MOV W0, W31
	0x033FA114 RET
	0x033FA118 RET
	0x033FA11C MOVZ W0, 0x1
	0x033FA120 RET
	0x033FA124 MOV X1, X31
	0x033FA128 B 0x33BDD8C
	0x033FA12C STR X30, [X31 - 0x20]!
	0x033FA130 STP X20, X19, [X31 + 0x10]
	0x033FA134 ADRP X20, 0xFE3000
	0x033FA138 ADRP X19, 0xD01000
	0x033FA13C LDRB W8, [X20 + 0x4BC]
	0x033FA140 LDR X19, [X19 + 0x7E8]
	0x033FA144 TBNZ X8, 0x0, 0x33FA15C
	0x033FA148 ADRP X0, 0xD01000
	0x033FA14C LDR X0, [X0 + 0x7E8]
	0x033FA150 BL 0x1C16CF4
	0x033FA154 MOVZ W8, 0x1
	0x033FA158 STRB W8, [X20 + 0x4BC]
	0x033FA15C LDR X0, [X19]
	0x033FA160 LDR W8, [X0 + 0xE0]
	0x033FA164 CBNZ W8, 0x33FA170
	0x033FA168 BL 0x1C16DFC
	0x033FA16C LDR X0, [X19]
	0x033FA170 LDR X8, [X0 + 0xB8]
	0x033FA174 LDP X20, X19, [X31 + 0x10]
	0x033FA178 LDR X0, [X8 + 0x8]
	0x033FA17C LDR X30, [X31], #0x20
	0x033FA180 RET
	0x033FA184 STR X30, [X31 - 0x20]!
	0x033FA188 STP X20, X19, [X31 + 0x10]
	0x033FA18C ADRP X19, 0xFE3000
	0x033FA190 ADRP X20, 0xD33000
	0x033FA194 LDRB W8, [X19 + 0x4BF]
	0x033FA198 LDR X20, [X20 + 0xAD8]
	0x033FA19C TBNZ X8, 0x0, 0x33FA1B4
	0x033FA1A0 ADRP X0, 0xD33000
	0x033FA1A4 LDR X0, [X0 + 0xAD8]
	0x033FA1A8 BL 0x1C16CF4
	0x033FA1AC MOVZ W8, 0x1
	0x033FA1B0 STRB W8, [X19 + 0x4BF]
	0x033FA1B4 LDR X0, [X20]
	0x033FA1B8 BL 0x1C16F10
	0x033FA1BC MOV X19, X0
	0x033FA1C0 BL 0x33FA1D4
	0x033FA1C4 MOV X0, X19
	0x033FA1C8 LDP X20, X19, [X31 + 0x10]
	0x033FA1CC LDR X30, [X31], #0x20
	0x033FA1D0 RET
	0x033FA1D4 STP X30, X21, [X31 - 0x20]!
	0x033FA1D8 STP X20, X19, [X31 + 0x10]
	0x033FA1DC ADRP X20, 0xFE3000
	0x033FA1E0 ADRP X21, 0xD01000
	0x033FA1E4 LDRB W8, [X20 + 0x4C3]
	0x033FA1E8 LDR X21, [X21 + 0x7E8]
	0x033FA1EC MOV X19, X0
	0x033FA1F0 TBNZ X8, 0x0, 0x33FA208
	0x033FA1F4 ADRP X0, 0xD01000
	0x033FA1F8 LDR X0, [X0 + 0x7E8]
	0x033FA1FC BL 0x1C16CF4
	0x033FA200 MOVZ W8, 0x1
	0x033FA204 STRB W8, [X20 + 0x4C3]
	0x033FA208 LDR X0, [X21]
	0x033FA20C LDR W8, [X0 + 0xE0]
	0x033FA210 CBNZ W8, 0x33FA218
	0x033FA214 BL 0x1C16DFC
	0x033FA218 MOV X0, X19
	0x033FA21C MOV X1, X31
	0x033FA220 BL 0x33BDD8C
	0x033FA224 MOV X0, X31
	0x033FA228 BL 0x33DD700
	0x033FA22C CBZ X0, 0x33FA240
	0x033FA230 STR X0, [X19 + 0x18]
	0x033FA234 LDP X20, X19, [X31 + 0x10]
	0x033FA238 LDP X30, X21, [X31], #0x20
	0x033FA23C RET
	0x033FA240 ADRP X0, 0xCF9000
	0x033FA244 LDR X0, [X0 + 0x5B0]
	0x033FA248 BL 0x1C16D08
	0x033FA24C BL 0x1C16F10
	0x033FA250 MOV X19, X0
	0x033FA254 ADRP X0, 0xD33000
	0x033FA258 LDR X0, [X0 + 0xAE0]
	0x033FA25C BL 0x1C16D08
	0x033FA260 MOV X1, X0
	0x033FA264 MOV X0, X19
	0x033FA268 MOV X2, X31
	0x033FA26C BL 0x337DF1C
	0x033FA270 ADRP X0, 0xD33000
	0x033FA274 LDR X0, [X0 + 0xAE8]
	0x033FA278 BL 0x1C16D08
	0x033FA27C MOV X1, X0
	0x033FA280 MOV X0, X19
	0x033FA284 BL 0x1C16DEC
	0x033FA288 STP X30, X19, [X31 - 0x10]!
	0x033FA28C CBZ X1, 0x33FA2B0
	0x033FA290 LDR X9, [X1 + 0x28]
	0x033FA294 MOV X8, X1
	0x033FA298 CMP X9, X0
	0x033FA29C B.NE 0x33FA2B4
	0x033FA2A0 MOVZ W1, 0x1
	0x033FA2A4 MOV X0, X8
	0x033FA2A8 LDP X30, X19, [X31], #0x10
	0x033FA2AC B 0x33F269C
	0x033FA2B0 BL 0x1C16F20
	0x033FA2B4 ADRP X0, 0xCF9000
	0x033FA2B8 LDR X0, [X0 + 0x5B0]
	0x033FA2BC BL 0x1C16D08
	0x033FA2C0 BL 0x1C16F10
	0x033FA2C4 MOV X19, X0
	0x033FA2C8 ADRP X0, 0xD33000
	0x033FA2CC LDR X0, [X0 + 0xAF0]
	0x033FA2D0 BL 0x1C16D08
	0x033FA2D4 MOV X1, X0
	0x033FA2D8 MOV X0, X19
	0x033FA2DC MOV X2, X31
	0x033FA2E0 BL 0x337DF1C
	0x033FA2E4 ADRP X0, 0xD33000
	0x033FA2E8 LDR X0, [X0 + 0xAF8]
	0x033FA2EC BL 0x1C16D08
	0x033FA2F0 MOV X1, X0
	0x033FA2F4 MOV X0, X19
	0x033FA2F8 BL 0x1C16DEC
	0x033FA2FC STR X30, [X31 - 0x30]!
	0x033FA300 STP X22, X21, [X31 + 0x10]
	0x033FA304 STP X20, X19, [X31 + 0x20]
	0x033FA308 ADRP X19, 0xFE3000
	0x033FA30C ADRP X22, 0xD33000
	0x033FA310 ADRP X20, 0xD01000
	0x033FA314 ADRP X21, 0xD33000
	0x033FA318 LDRB W8, [X19 + 0x4C2]
	0x033FA31C LDR X22, [X22 + 0xB00]
	0x033FA320 LDR X20, [X20 + 0x7E8]
	0x033FA324 LDR X21, [X21 + 0xB08]
	0x033FA328 TBNZ X8, 0x0, 0x33FA358
	0x033FA32C ADRP X0, 0xD33000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xFE5000
	010 Move W8, [X21+1194]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {55}
	017 Move X0, 0xD03000
	018 Move X0, [X0+1464]
	019 Call 0x1C17CF4
	020 Move X0, 0xCFB000
	021 Move X0, [X0+2000]
	022 Call 0x1C17CF4
	023 Move X0, 0xCFB000
	024 Move X0, [X0+3584]
	025 Call 0x1C17CF4
	026 Move X0, 0xD35000
	027 Move X0, [X0+2600]
	028 Call 0x1C17CF4
	029 Move X0, 0xD35000
	030 Move X0, [X0+2608]
	031 Call 0x1C17CF4
	032 Move X0, 0xD35000
	033 Move X0, [X0+2616]
	034 Call 0x1C17CF4
	035 Move X0, 0xCFB000
	036 Move X0, [X0+3608]
	037 Call 0x1C17CF4
	038 Move X0, 0xD35000
	039 Move X0, [X0+2624]
	040 Call 0x1C17CF4
	041 Move X0, 0xD35000
	042 Move X0, [X0+2512]
	043 Call 0x1C17CF4
	044 Move X0, 0xD35000
	045 Move X0, [X0+2520]
	046 Call 0x1C17CF4
	047 Move X0, 0xD35000
	048 Move X0, [X0+2632]
	049 Call 0x1C17CF4
	050 Move X0, 0xD35000
	051 Move X0, [X0+1896]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X21+1194], W8
	055 Move X21, [X19+24]
	056 Call 0x1C17D44
	057 Compare X21, 0
	058 JumpIfEqual {61}
	059 Compare X20, 0
	060 JumpIfNotEqual {75}
	061 Move X8, 0xD35000
	062 Move X8, [X8+2512]
	063 Move X0, [X8]
	064 Call 0x1C17F10
	065 Move X8, 0xD35000
	066 Move X8, [X8+2624]
	067 Move W1, 1
	068 Move X21, X0
	069 Move X2, [X8]
	070 Call 0x319BFB4, X0, X1
	071 Call 0x1C17D44
	072 Move [X19+24], X21
	073 Compare X20, 0
	074 JumpIfEqual {90}
	075 Move X9, 0xCFB000
	076 Move X9, [X9+2000]
	077 Move X8, [X20]
	078 Move X9, [X9]
	079 Move W11, [X8+304]
	080 Move W10, [X9+304]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X11, [X8+200]
	083 Add X10, X11, X10
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X9, 0xD03000
	087 Move X9, [X9+1464]
	088 Move X9, [X9]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X23, 0xD35000
	091 Move X23, [X23+2600]
	092 Move X0, X20
	093 Move X1, [X23]
	094 Call 0x1C17E00
	095 Compare X0, 0
	096 JumpIfEqual {230}
	097 Move X8, [X0]
	098 Move X1, [X23]
	099 Move X22, X0
	100 NotImplemented "Instruction LDRH not yet implemented."
	101 Compare X9, 0
	102 JumpIfEqual {109}
	103 Move X10, [X8+176]
	104 Add X10, X10, 8
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Subtract X9, X9, 1
	108 Add X10, X10, 16
	109 Move X0, X22
	110 Move W2, W31
	111 Call 0x1C5D788
	112 Compare X21, 0
	113 JumpIfEqual {268}
	114 Move X8, 0xD35000
	115 Move X8, [X8+2632]
	116 Move X0, X21
	117 Move X1, X20
	118 NotImplemented "Instruction LDRSW not yet implemented."
	119 Add X8, X8, X9
	120 Add X0, X8, 312
	121 Move X8, [X0]
	122 Move X1, [X0+8]
	123 Move X0, X22
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move X22, X0
	126 Compare X0, 0
	127 JumpIfEqual {292}
	128 Move X23, 0xCFA000
	129 Move X24, 0xD34000
	130 Move X25, 0xD34000
	131 Move X23, [X23+3608]
	132 Move X24, [X24+2616]
	133 Move X25, [X25+2632]
	134 Move X8, [X22]
	135 Move X1, [X23]
	136 NotImplemented "Instruction LDRH not yet implemented."
	137 Compare X9, 0
	138 JumpIfEqual {145}
	139 Move X10, [X8+176]
	140 Add X10, X10, 8
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Subtract X9, X9, 1
	144 Add X10, X10, 16
	145 Move X0, X22
	146 Move W2, W31
	147 Call 0x1C5D788
	148 NotImplemented "Instruction LDRSW not yet implemented."
	149 Add X8, X8, X9
	150 Add X0, X8, 312
	151 Move X8, [X0]
	152 Move X1, [X0+8]
	153 Move X0, X22
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Move TEMP, X0
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfNotEqual {188}
	159 Move X8, [X22]
	160 Move X1, [X24]
	161 NotImplemented "Instruction LDRH not yet implemented."
	162 Compare X9, 0
	163 JumpIfEqual {170}
	164 Move X10, [X8+176]
	165 Add X10, X10, 8
	166 NotImplemented "Instruction LDUR not yet implemented."
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Subtract X9, X9, 1
	169 Add X10, X10, 16
	170 Move X0, X22
	171 Move W2, W31
	172 Call 0x1C5D788
	173 NotImplemented "Instruction LDRSW not yet implemented."
	174 Add X8, X8, X9
	175 Add X0, X8, 312
	176 Move X8, [X0]
	177 Move X1, [X0+8]
	178 Move X0, X22
	179 NotImplemented "Instruction BLR not yet implemented."
	180 Move X1, X31
	181 Call ExceptionDispatchInfo.Capture, X0
	182 Move X1, X0
	183 Compare X21, 0
	184 JumpIfEqual {267}
	185 Move X2, [X25]
	186 Move X0, X21
	187 Call 0x319C66C, X0, X1
	188 Move X23, X31
	189 Move W24, W31
	190 Compare X22, 0
	191 JumpIfEqual {226}
	192 Move X10, 0xCFA000
	193 Move X8, [X22]
	194 Move X10, [X10+3584]
	195 NotImplemented "Instruction LDRH not yet implemented."
	196 Move X1, [X10]
	197 Compare X9, 0
	198 JumpIfEqual {205}
	199 Move X10, [X8+176]
	200 Add X10, X10, 8
	201 NotImplemented "Instruction LDUR not yet implemented."
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Subtract X9, X9, 1
	204 Add X10, X10, 16
	205 Move X0, X22
	206 Move W2, W31
	207 Call 0x1C5D788
	208 Move X0, X20
	209 Move X1, X31
	210 Call ExceptionDispatchInfo.Capture, X0
	211 Compare X21, 0
	212 JumpIfEqual {268}
	213 Move X8, 0xD34000
	214 Move X8, [X8+2632]
	215 Move X1, X0
	216 Move X0, X21
	217 Move X2, [X8]
	218 Call 0x319C66C, X0, X1
	219 NotImplemented "Instruction LDRSW not yet implemented."
	220 Add X8, X8, X9
	221 Add X0, X8, 312
	222 Move X8, [X0]
	223 Move X1, [X0+8]
	224 Move X0, X22
	225 NotImplemented "Instruction BLR not yet implemented."
	226 Compare X23, 0
	227 JumpIfNotEqual {293}
	228 Compare W24, 0
	229 JumpIfEqual {245}
	230 Move X8, 0xD34000
	231 Move X8, [X8+2608]
	232 Move X0, X20
	233 Move X1, [X8]
	234 Call 0x1C17E00
	235 Compare X0, 0
	236 JumpIfEqual {269}
	237 Compare X21, 0
	238 JumpIfEqual {268}
	239 Move X8, 0xD34000
	240 Move X8, [X8+2520]
	241 Move X1, X0
	242 Move X0, X21
	243 Move X2, [X8]
	244 Call 0x319C748, X0, X1
	245 Compare X21, 0
	246 JumpIfEqual {268}
	247 Move W8, [X21+24]
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move X0, X19
	250 Move X20, [X31+48]
	251 Move X19, [X31+56]
	252 Move X22, [X31+32]
	253 Move X21, [X31+40]
	254 Move X24, [X31+16]
	255 Move X23, [X31+24]
	256 Move X30, [X31+64]
	257 Move X25, [X31+72]
	258 Move X20, [X31+48]
	259 Move X19, [X31+56]
	260 Move X22, [X31+32]
	261 Move X21, [X31+40]
	262 Move X24, [X31+16]
	263 Move X23, [X31+24]
	264 Move X30, [X31+64]
	265 Move X25, [X31+72]
	266 Return 
	267 Call 0x1C17F20
	268 Call 0x1C17F20
	269 Move X0, 0xD02000
	270 Move X0, [X0+1400]
	271 Call 0x1C17D08
	272 Call 0x1C17F10
	273 Move X19, X0
	274 Move X0, 0xD34000
	275 Move X0, [X0+2640]
	276 Call 0x1C17D08
	277 Move X20, X0
	278 Move X0, 0xD34000
	279 Move X0, [X0+2648]
	280 Call 0x1C17D08
	281 Move X2, X0
	282 Move X0, X19
	283 Move X1, X20
	284 Move X3, X31
	285 Call ArgumentException..ctor, X0, X1, X2
	286 Move X0, 0xD34000
	287 Move X0, [X0+2656]
	288 Call 0x1C17D08
	289 Move X1, X0
	290 Move X0, X19
	291 Call 0x1C17DEC
	292 Call 0x1C17F20
	293 Move X0, X23
	294 Call 0x1C17F18
	295 Move X24, X0
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Move X0, X24
	298 Call 0x3EB2AD0
	299 Move X23, [X0]
	300 Call 0x3EB2AE0
	301 Move W24, 1
	302 Compare X22, 0
	303 JumpIfNotEqual {192}
	304 Move X23, X31
	305 Move X24, X0
	306 Compare X22, 0
	307 JumpIfEqual {331}
	308 Move X10, 0xCFA000
	309 Move X8, [X22]
	310 Move X10, [X10+3584]
	311 NotImplemented "Instruction LDRH not yet implemented."
	312 Move X1, [X10]
	313 Compare X9, 0
	314 JumpIfEqual {321}
	315 Move X10, [X8+176]
	316 Add X10, X10, 8
	317 NotImplemented "Instruction LDUR not yet implemented."
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Subtract X9, X9, 1
	320 Add X10, X10, 16
	321 Move X0, X22
	322 Move W2, W31
	323 Call 0x1C5D788
	324 NotImplemented "Instruction LDRSW not yet implemented."
	325 Add X8, X8, X9
	326 Add X0, X8, 312
	327 Move X8, [X0]
	328 Move X1, [X0+8]
	329 Move X0, X22
	330 NotImplemented "Instruction BLR not yet implemented."
	331 Compare X23, 0
	332 JumpIfNotEqual {335}
	333 Move X0, X24
	334 Call 0x1D2D690
	335 Move X0, X23
	336 Call 0x1C17F18
	337 Call 0x1991590

Method: System.Void MarkAsUnhandled()

Disassembly:
	0x033FA330 LDR X0, [X0 + 0xB08]
	0x033FA334 BL 0x1C16CF4
	0x033FA338 ADRP X0, 0xD01000
	0x033FA33C LDR X0, [X0 + 0x7E8]
	0x033FA340 BL 0x1C16CF4
	0x033FA344 ADRP X0, 0xD33000
	0x033FA348 LDR X0, [X0 + 0xB00]
	0x033FA34C BL 0x1C16CF4
	0x033FA350 MOVZ W8, 0x1
	0x033FA354 STRB W8, [X19 + 0x4C2]
	0x033FA358 LDR X0, [X22]
	0x033FA35C BL 0x1C16F10
	0x033FA360 MOV X19, X0
	0x033FA364 BL 0x33FA3A4
	0x033FA368 LDR X8, [X20]
	0x033FA36C LDR X8, [X8 + 0xB8]
	0x033FA370 STR X19, [X8 + 0x8]
	0x033FA374 LDR X0, [X21]
	0x033FA378 BL 0x1C16F10
	0x033FA37C MOV X1, X31
	0x033FA380 MOV X19, X0
	0x033FA384 BL 0x33E14E8
	0x033FA388 LDR X8, [X20]
	0x033FA38C LDP X22, X21, [X31 + 0x10]
	0x033FA390 LDR X8, [X8 + 0xB8]
	0x033FA394 STR X19, [X8 + 0x20]
	0x033FA398 LDP X20, X19, [X31 + 0x20]
	0x033FA39C LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFE4000
	005 Move W8, [X20+1195]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD01000
	012 Move X0, [X0+3088]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1195], W8
	016 Move W20, [X19+40]
	017 Call 0x1C17D44
	018 Compare W20, 0
	019 JumpIfEqual {32}
	020 Move X8, 0xD01000
	021 Move X8, [X8+3088]
	022 Move X0, [X8]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Move X1, X31
	029 Call GC.ReRegisterForFinalize, X0
	030 Call 0x1C17D44
	031 Move [X19+40], W31
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return 

Method: System.Void MarkAsHandled(System.Boolean calledFromFinalizer)

Disassembly:
	0x033F1CF8 MOV X22, X0
	0x033F1CFC LDR X1, [X8]
	0x033F1D00 BL 0x319AF58
	0x033F1D04 MOV X0, X21
	0x033F1D08 MOV X1, X22
	0x033F1D0C MOV X2, X31
	0x033F1D10 BL 0x1C24138
	0x033F1D14 LDR X21, [X21]
	0x033F1D18 BL 0x1C16D44
	0x033F1D1C CBZ X21, 0x33F1D74
	0x033F1D20 STRB W31, [X31 + 0xC]
	0x033F1D24 ADD X1, X31, 0xC
	0x033F1D28 MOV X0, X21
	0x033F1D2C MOV X2, X31
	0x033F1D30 BL 0x33DE64C
	0x033F1D34 ADRP X8, 0xD3C000
	0x033F1D38 LDR X8, [X8 + 0x7B8]
	0x033F1D3C LDR X2, [X8]
	0x033F1D40 MOV X0, X21
	0x033F1D44 MOV X1, X20
	0x033F1D48 BL 0x319B66C
	0x033F1D4C MOV X20, X31
	0x033F1D50 LDRB W8, [X31 + 0xC]
	0x033F1D54 CBZ W8, 0x33F1D64
	0x033F1D58 MOV X0, X21
	0x033F1D5C MOV X1, X31
	0x033F1D60 BL 0x33E14E4
	0x033F1D64 CBZ X20, 0x33F1D74
	0x033F1D68 MOV X0, X20
	0x033F1D6C BL 0x1C16F18
	0x033F1D70 CBZ X23, 0x33F1DA4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xFED000
	006 Move W8, [X21+1196]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD0A000
	014 Move X0, [X0+3088]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1196], W8
	018 Move W21, [X19+40]
	019 Call 0x1C17D44
	020 Compare W21, 0
	021 JumpIfNotEqual {39}
	022 Move TEMP, X20
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {36}
	026 Move X8, 0xD0A000
	027 Move X8, [X8+3088]
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X19
	034 Move X1, X31
	035 Call GC.SuppressFinalize, X0
	036 Call 0x1C17D44
	037 Move W8, 1
	038 Move [X19+40], W8
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return 

Method: System.AggregateException CreateExceptionObject(System.Boolean calledFromFinalizer, System.Exception includeThisException)

Disassembly:
	0x033F1F3C MOVZ W8, 0x1
	0x033F1F40 BIC W21, W8, W21, 0x6
	0x033F1F44 B 0x33F1F4C
	0x033F1F48 MOV W21, W31
	0x033F1F4C LDR X8, [X29]
	0x033F1F50 LDR X9, [X20]
	0x033F1F54 CMP X9, X8
	0x033F1F58 B.EQ 0x33F1FBC
	0x033F1F5C ADRP X26, 0xD3C000
	0x033F1F60 LDR X26, [X26 + 0x7C8]
	0x033F1F64 MOV X0, X20
	0x033F1F68 LDR X1, [X26]
	0x033F1F6C BL 0x1C16E00
	0x033F1F70 CBZ X0, 0x33F1FE8
	0x033F1F74 MOV X22, X0
	0x033F1F78 CBNZ W21, 0x33F23AC
	0x033F1F7C LDR X8, [X22]
	0x033F1F80 LDR X1, [X26]
	0x033F1F84 LDRH W9, [X8 + 0x12E]
	0x033F1F88 CBZ X9, 0x33F1FAC
	0x033F1F8C LDR X10, [X8 + 0xB0]
	0x033F1F90 ADD X10, X10, 0x8
	0x033F1F94 LDUR X11, [X10 - 0x8]
	0x033F1F98 CMP X11, X1
	0x033F1F9C B.EQ 0x33F235C
	0x033F1FA0 SUBS X9, X9, 0x1
	0x033F1FA4 ADD X10, X10, 0x10
	0x033F1FA8 B.NE 0x33F1F94
	0x033F1FAC MOVZ W2, 0x1
	0x033F1FB0 MOV X0, X22
	0x033F1FB4 BL 0x1C5C788
	0x033F1FB8 B 0x33F236C
	0x033F1FBC LDR X0, [X27]
	0x033F1FC0 LDR W8, [X0 + 0xE0]
	0x033F1FC4 CBNZ W8, 0x33F1FD0
	0x033F1FC8 BL 0x1C16DFC
	0x033F1FCC LDR X0, [X27]
	0x033F1FD0 BL 0x1C16D0C
	0x033F1FD4 MOV X2, X0
	0x033F1FD8 MOV X0, X20
	0x033F1FDC MOV W1, W21
	0x033F1FE0 BL 0x33F3DB8
	0x033F1FE4 B 0x33F2408
	0x033F1FE8 ADRP X9, 0xD3C000
	0x033F1FEC LDR X9, [X9 + 0x7E8]
	0x033F1FF0 LDR X8, [X20]
	0x033F1FF4 LDR X9, [X9]
	0x033F1FF8 LDRB W11, [X8 + 0x130]
	0x033F1FFC LDRB W10, [X9 + 0x130]
	0x033F2000 CMP W11, W10
	0x033F2004 B.CC 0x33F201C
	0x033F2008 LDR X11, [X8 + 0xC8]
	0x033F200C ADD X10, X11, X10, 0x3, LSL
	0x033F2010 LDUR X10, [X10 - 0x8]
	0x033F2014 CMP X10, X9
	0x033F2018 B.EQ 0x33F2458
	0x033F201C ADRP X9, 0xD3B000
	0x033F2020 LDR X9, [X9 + 0x6F8]
	0x033F2024 LDR X9, [X9]
	0x033F2028 CMP X8, X9
	0x033F202C B.NE 0x33F2408
	0x033F2030 STRB W31, [X31 + 0xC]
	0x033F2034 ADD X1, X31, 0xC
	0x033F2038 MOV X0, X20
	0x033F203C MOV X2, X31
	0x033F2040 BL 0x33DE64C
	0x033F2044 MOV X22, X31
	0x033F2048 MOVZ W23, 0xD
	0x033F204C LDRB W8, [X31 + 0xC]
	0x033F2050 CBZ W8, 0x33F2060
	0x033F2054 MOV X0, X20
	0x033F2058 MOV X1, X31
	0x033F205C BL 0x33E14E4
	0x033F2060 CBNZ X22, 0x33F247C
	0x033F2064 CMP W23, 0xD
	0x033F2068 B.EQ 0x33F2070
	0x033F206C CBNZ W23, 0x33F2438
	0x033F2070 LDR W28, [X20 + 0x18]
	0x033F2074 CMP W28, 0x1
	0x033F2078 B.LT 0x33F232C
	0x033F207C ADRP X25, 0xD3B000
	0x033F2080 ADRP X24, 0xD3B000
	0x033F2084 LDR X25, [X25 + 0x7D8]
	0x033F2088 LDR X24, [X24 + 0x7E0]
	0x033F208C MOV W22, W31
	0x033F2090 LDR X2, [X25]
	0x033F2094 MOV X0, X20
	0x033F2098 MOV W1, W22
	0x033F209C BL 0x319B580
	0x033F20A0 CBZ X0, 0x33F2110
	0x033F20A4 LDR X9, [X0]
	0x033F20A8 LDR X8, [X24]
	0x033F20AC MOV X23, X0
	0x033F20B0 LDRB W11, [X9 + 0x130]
	0x033F20B4 LDRB W10, [X8 + 0x130]
	0x033F20B8 CMP W11, W10
	0x033F20BC B.CC 0x33F2110
	0x033F20C0 LDR X9, [X9 + 0xC8]
	0x033F20C4 ADD X9, X9, X10, 0x3, LSL
	0x033F20C8 LDUR X9, [X9 - 0x8]
	0x033F20CC CMP X9, X8
	0x033F20D0 B.NE 0x33F2110
	0x033F20D4 LDRB W8, [X23 + 0x1A]
	0x033F20D8 TBNZ X8, 0x3, 0x33F2110
	0x033F20DC ADRP X8, 0xD3B000
	0x033F20E0 LDR X8, [X8 + 0x708]
	0x033F20E4 MOV X0, X20

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xFED000
	011 Move W8, [X20+1197]
	012 Move X19, X2
	013 Move W21, W1
	014 Move X22, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0xD35000
	020 Move X0, [X0+2256]
	021 Call 0x1C17CF4
	022 Move X0, 0xD35000
	023 Move X0, [X0+2248]
	024 Call 0x1C17CF4
	025 Move X0, 0xD3D000
	026 Move X0, [X0+1896]
	027 Call 0x1C17CF4
	028 Move X0, 0xD3D000
	029 Move X0, [X0+1904]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+1197], W8
	033 Move X24, 0xD35000
	034 Move X20, [X22+24]
	035 Move X24, [X24+2256]
	036 Call 0x1C17D44
	037 And W1, W21, 1
	038 Move X0, X22
	039 Call TaskExceptionHolder.MarkAsHandled, X0, X1
	040 Compare X19, 0
	041 JumpIfEqual {101}
	042 Compare X20, 0
	043 JumpIfEqual {118}
	044 Move X8, 0xD35000
	045 Move X8, [X8+2248]
	046 Move W9, [X20+24]
	047 Move X0, [X8]
	048 Add W1, W9, 1
	049 Call 0x1C17D6C
	050 Compare X0, 0
	051 JumpIfEqual {118}
	052 Move X8, [X0+24]
	053 Move X9, INVALID
	054 Move X21, X0
	055 Add X8, X9, X8
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X26, 0xD3D000
	058 Move X26, [X26+1904]
	059 Move X22, X31
	060 Add X25, X21, 32
	061 Move X2, [X26]
	062 Move X0, X20
	063 Move W1, W22
	064 Call 0x319C580, X0, X1
	065 Compare X0, 0
	066 JumpIfEqual {118}
	067 Move X23, [X0+16]
	068 Compare X23, 0
	069 JumpIfEqual {76}
	070 Move X8, [X21]
	071 Move X0, X23
	072 Move X1, [X8+64]
	073 Call 0x1C17E00
	074 Compare X0, 0
	075 JumpIfEqual {120}
	076 Move W8, [X21+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move [X25], X23
	079 Add X22, X22, 1
	080 Subtract W8, W8, 1
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X8, [X21]
	083 Move X0, X19
	084 Move X1, [X8+64]
	085 Call 0x1C17E00
	086 Compare X0, 0
	087 JumpIfEqual {120}
	088 Move X8, [X21+24]
	089 Compare W8, 0
	090 JumpIfEqual {119}
	091 Move X9, INVALID
	092 Add X8, X9, X8
	093 Add X8, X21, X8
	094 Move [X8+32], X19
	095 Move X0, [X24]
	096 Call 0x1C17F10
	097 Move X1, X21
	098 Move X2, X31
	099 Move X19, X0
	100 Call AggregateException..ctor, X0, X1
	101 Move X0, [X24]
	102 Call 0x1C17F10
	103 Move X1, X20
	104 Move X2, X31
	105 Move X19, X0
	106 Call AggregateException..ctor, X0, X1
	107 Move X0, X19
	108 Move X20, [X31+64]
	109 Move X19, [X31+72]
	110 Move X22, [X31+48]
	111 Move X21, [X31+56]
	112 Move X24, [X31+32]
	113 Move X23, [X31+40]
	114 Move X26, [X31+16]
	115 Move X25, [X31+24]
	116 Move X30, [X31+80]
	117 Return X0
	118 Call 0x1C17F20
	119 Call 0x1C17F28
	120 Call 0x1C17F44
	121 Move X1, X31
	122 Call 0x1C17DEC

Method: System.Collections.ObjectModel.ReadOnlyCollection`1<System.Runtime.ExceptionServices.ExceptionDispatchInfo> GetExceptionDispatchInfos()

Disassembly:
	0x033F2200 MOV X29, X27
	0x033F2204 MOV X27, X21
	0x033F2208 MOV W21, W28
	0x033F220C MOV W28, W23
	0x033F2210 MOV X23, X0
	0x033F2214 MOV X8, X0
	0x033F2218 CBNZ W21, 0x33F22C4
	0x033F221C LDR X8, [X23]
	0x033F2220 LDR X1, [X26]
	0x033F2224 LDRH W9, [X8 + 0x12E]
	0x033F2228 CBZ X9, 0x33F224C
	0x033F222C LDR X10, [X8 + 0xB0]
	0x033F2230 ADD X10, X10, 0x8
	0x033F2234 LDUR X11, [X10 - 0x8]
	0x033F2238 CMP X11, X1
	0x033F223C B.EQ 0x33F2274
	0x033F2240 SUBS X9, X9, 0x1
	0x033F2244 ADD X10, X10, 0x10
	0x033F2248 B.NE 0x33F2234
	0x033F224C MOVZ W2, 0x1
	0x033F2250 MOV X0, X23
	0x033F2254 BL 0x1C5C788
	0x033F2258 B 0x33F2284
	0x033F225C LDP X9, X3, [X8 + 0x178]
	0x033F2260 MOV X0, X24
	0x033F2264 MOV X1, X19
	0x033F2268 MOV W2, W21
	0x033F226C BLR X9
	0x033F2270 B 0x33F2320
	0x033F2274 LDR W9, [X10]
	0x033F2278 ADD W9, W9, 0x1
	0x033F227C ADD X8, X8, W9, 0x4, SXTW
	0x033F2280 ADD X0, X8, 0x138
	0x033F2284 LDP X8, X1, [X0]
	0x033F2288 MOV X0, X23

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xFEC000
	007 Move X22, 0xD3C000
	008 Move X21, 0xD3C000
	009 Move W8, [X20+1198]
	010 Move X22, [X22+1928]
	011 Move X21, [X21+1920]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xD3C000
	018 Move X0, [X0+1920]
	019 Call 0x1C17CF4
	020 Move X0, 0xD3C000
	021 Move X0, [X0+1928]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1198], W8
	025 Move X20, [X19+24]
	026 Call 0x1C17D44
	027 Move X0, X19
	028 Move W1, W31
	029 Call TaskExceptionHolder.MarkAsHandled, X0, X1
	030 Move X0, [X22]
	031 Call 0x1C17F10
	032 Move X2, [X21]
	033 Move X1, X20
	034 Move X19, X0
	035 Call ReadOnlyCollection`1<Object>..ctor, X0, X1
	036 Move X0, X19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Return X0

Method: System.Runtime.ExceptionServices.ExceptionDispatchInfo GetCancellationExceptionDispatchInfo()

Disassembly:
	0x033FA3A0 RET
	0x033FA3A4 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void .cctor()

Disassembly:
	0x033FA3A8 STP X20, X19, [X31 + 0x10]
	0x033FA3AC ADRP X20, 0xFE3000
	0x033FA3B0 ADRP X21, 0xD01000
	0x033FA3B4 LDRB W8, [X20 + 0x4C9]
	0x033FA3B8 LDR X21, [X21 + 0x7E8]
	0x033FA3BC MOV X19, X0
	0x033FA3C0 TBNZ X8, 0x0, 0x33FA3D8
	0x033FA3C4 ADRP X0, 0xD01000
	0x033FA3C8 LDR X0, [X0 + 0x7E8]
	0x033FA3CC BL 0x1C16CF4
	0x033FA3D0 MOVZ W8, 0x1
	0x033FA3D4 STRB W8, [X20 + 0x4C9]
	0x033FA3D8 LDR X0, [X21]
	0x033FA3DC LDR W8, [X0 + 0xE0]
	0x033FA3E0 CBNZ W8, 0x33FA3E8
	0x033FA3E4 BL 0x1C16DFC
	0x033FA3E8 MOV X0, X19
	0x033FA3EC LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xFE4000
	005 Move X20, 0xD34000
	006 Move W8, [X19+1199]
	007 Move X20, [X20+1888]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD34000
	013 Move X0, [X0+1888]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1199], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move [X8], W31
	022 Move X30, [X31+32]
	023 Return 

