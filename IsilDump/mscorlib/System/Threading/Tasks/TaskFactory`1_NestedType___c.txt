Type: System.Threading.Tasks.TaskFactory`1/<>c

Method: System.Void .cctor()

Disassembly:
	0x02364B24 BL 0x1C5C684
	0x02364B28 MOV X0, X20
	0x02364B2C MOV X1, X31
	0x02364B30 BL 0x33BDD8C
	0x02364B34 LDR X0, [X19 + 0x20]
	0x02364B38 LDRB W8, [X0 + 0x135]
	0x02364B3C TBNZ X8, 0x0, 0x2364B44
	0x02364B40 BL 0x1C5C684
	0x02364B44 LDR X8, [X0 + 0xC0]
	0x02364B48 LDR X0, [X8 + 0x10]
	0x02364B4C LDRB W8, [X0 + 0x135]
	0x02364B50 TBNZ X8, 0x0, 0x2364B58
	0x02364B54 BL 0x1C5C684
	0x02364B58 LDR X8, [X0 + 0xB8]
	0x02364B5C STR X20, [X8]
	0x02364B60 LDR X0, [X19 + 0x20]
	0x02364B64 LDRB W8, [X0 + 0x135]
	0x02364B68 TBNZ X8, 0x0, 0x2364B70
	0x02364B6C BL 0x1C5C684
	0x02364B70 LDR X8, [X0 + 0xC0]
	0x02364B74 LDR X0, [X8 + 0x10]
	0x02364B78 LDRB W8, [X0 + 0x135]
	0x02364B7C TBNZ X8, 0x0, 0x2364B8C
	0x02364B80 LDP X20, X19, [X31 + 0x10]
	0x02364B84 LDR X30, [X31], #0x20
	0x02364B88 B 0x1C5C684
	0x02364B8C LDP X20, X19, [X31 + 0x10]
	0x02364B90 LDR X30, [X31], #0x20
	0x02364B94 RET
	0x02364B98 MOV X1, X31
	0x02364B9C B 0x33BDD8C
	0x02364BA0 STP X30, X19, [X31 - 0x10]!
	0x02364BA4 LDR X8, [X1 + 0x20]
	0x02364BA8 MOV X19, X1
	0x02364BAC LDR X8, [X8 + 0xC0]
	0x02364BB0 LDR X0, [X8 + 0x18]
	0x02364BB4 LDRB W8, [X0 + 0x135]
	0x02364BB8 TBNZ X8, 0x0, 0x2364BC0
	0x02364BBC BL 0x1C5C684
	0x02364BC0 BL 0x1C16F10
	0x02364BC4 LDR X8, [X19 + 0x20]
	0x02364BC8 MOV X19, X0
	0x02364BCC LDR X8, [X8 + 0xC0]
	0x02364BD0 LDR X1, [X8 + 0x20]
	0x02364BD4 BL 0x28F30B8
	0x02364BD8 MOV X0, X19
	0x02364BDC LDP X30, X19, [X31], #0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Call 0x1C17F10
	021 Move X8, [X19+32]
	022 Move X20, X0
	023 Move W9, [X8+309]
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {30}
	028 Move X0, X8
	029 Call 0x1C5D684
	030 Move X0, X20
	031 Move X1, X31
	032 Call Object..ctor, X0
	033 Move X0, [X19+32]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move X8, [X0+192]
	041 Move X0, [X8+16]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move X8, [X0+184]
	049 Move [X8], X20
	050 Move X0, [X19+32]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Move X8, [X0+192]
	058 Move X0, [X8+16]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {69}
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Call 0x1C5D684
	068 Return 
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Return 

Method: System.Void .ctor()

Disassembly:
	0x02364BE0 RET
	0x02364BE4 STR X30, [X31 - 0x20]!

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: TResult <ContinueWhenAllImpl>b__58_0(System.Threading.Tasks.Task`1<System.Threading.Tasks.Task[]> completedTasks, System.Object state)

Disassembly:
	0x02364BE8 STP X20, X19, [X31 + 0x10]
	0x02364BEC MOV X19, X0
	0x02364BF0 LDR X0, [X0 + 0x20]
	0x02364BF4 LDRB W8, [X0 + 0x135]
	0x02364BF8 TBNZ X8, 0x0, 0x2364C00
	0x02364BFC BL 0x1C5C684
	0x02364C00 LDR X8, [X0 + 0xC0]
	0x02364C04 LDR X0, [X8]
	0x02364C08 LDRB W8, [X0 + 0x135]
	0x02364C0C TBNZ X8, 0x0, 0x2364C14
	0x02364C10 BL 0x1C5C684
	0x02364C14 BL 0x1C16F10
	0x02364C18 LDR X8, [X19 + 0x20]
	0x02364C1C MOV X20, X0
	0x02364C20 LDRB W9, [X8 + 0x135]
	0x02364C24 TBNZ X9, 0x0, 0x2364C30
	0x02364C28 MOV X0, X8
	0x02364C2C BL 0x1C5C684
	0x02364C30 MOV X0, X20
	0x02364C34 MOV X1, X31
	0x02364C38 BL 0x33BDD8C
	0x02364C3C LDR X0, [X19 + 0x20]
	0x02364C40 LDRB W8, [X0 + 0x135]
	0x02364C44 TBNZ X8, 0x0, 0x2364C4C
	0x02364C48 BL 0x1C5C684
	0x02364C4C LDR X8, [X0 + 0xC0]
	0x02364C50 LDR X0, [X8 + 0x10]
	0x02364C54 LDRB W8, [X0 + 0x135]
	0x02364C58 TBNZ X8, 0x0, 0x2364C60
	0x02364C5C BL 0x1C5C684
	0x02364C60 LDR X8, [X0 + 0xB8]
	0x02364C64 STR X20, [X8]
	0x02364C68 LDR X0, [X19 + 0x20]
	0x02364C6C LDRB W8, [X0 + 0x135]
	0x02364C70 TBNZ X8, 0x0, 0x2364C78
	0x02364C74 BL 0x1C5C684
	0x02364C78 LDR X8, [X0 + 0xC0]
	0x02364C7C LDR X0, [X8 + 0x10]
	0x02364C80 LDRB W8, [X0 + 0x135]
	0x02364C84 TBNZ X8, 0x0, 0x2364C94
	0x02364C88 LDP X20, X19, [X31 + 0x10]
	0x02364C8C LDR X30, [X31], #0x20
	0x02364C90 B 0x1C5C684
	0x02364C94 LDP X20, X19, [X31 + 0x10]
	0x02364C98 LDR X30, [X31], #0x20
	0x02364C9C RET
	0x02364CA0 MOV X1, X31
	0x02364CA4 B 0x33BDD8C
	0x02364CA8 STR X30, [X31 - 0x20]!
	0x02364CAC STP X20, X19, [X31 + 0x10]
	0x02364CB0 AND W8, W1, 0x1
	0x02364CB4 STRB W8, [X31 + 0xC]
	0x02364CB8 LDR X8, [X3 + 0x20]
	0x02364CBC ADD X1, X31, 0xC
	0x02364CC0 MOV X19, X3
	0x02364CC4 AND W20, W2, 0x1
	0x02364CC8 LDR X8, [X8 + 0xC0]
	0x02364CCC LDR X0, [X8 + 0x18]
	0x02364CD0 BL 0x1C16E04
	0x02364CD4 STRB W20, [X31 + 0x8]
	0x02364CD8 LDR X8, [X19 + 0x20]
	0x02364CDC MOV X19, X0
	0x02364CE0 ADD X1, X31, 0x8
	0x02364CE4 LDR X8, [X8 + 0xC0]
	0x02364CE8 LDR X8, [X8 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2076000
	007 Move W8, [X22+2193]
	008 Move X20, X3
	009 Move X19, X2
	010 Move X21, X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x1DB9000
	016 Move X0, [X0+2832]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2193], W8
	020 Compare X21, 0
	021 JumpIfEqual {76}
	022 Move X22, 0x1DB9000
	023 Move X22, [X22+2832]
	024 Move X0, X21
	025 Move X1, X31
	026 Call Task.NotifyDebuggerOfWaitCompletionIfNecessary, X0
	027 Move X1, [X22]
	028 Move X0, X21
	029 Call Task`1<Object>.get_Result, X0
	030 Move X8, [X20+32]
	031 Move X21, X0
	032 Move X8, [X8+192]
	033 Move X22, [X8+24]
	034 Move W8, [X22+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {42}
	039 Move X0, X22
	040 Call 0x1C5D684
	041 Move X22, X0
	042 Compare X19, 0
	043 JumpIfEqual {76}
	044 Move X0, X19
	045 Move X1, X22
	046 Call 0x1C17E00
	047 Compare X0, 0
	048 JumpIfEqual {77}
	049 Move X8, [X20+32]
	050 Move X8, [X8+192]
	051 Move X20, [X8+24]
	052 Move W8, [X20+309]
	053 Move TEMP, X8
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {60}
	057 Move X0, X20
	058 Call 0x1C5D684
	059 Move X20, X0
	060 Move X0, X19
	061 Move X1, X20
	062 Call 0x1C17E00
	063 Compare X0, 0
	064 JumpIfEqual {80}
	065 Move X8, [X0+64]
	066 Move X3, [X0+24]
	067 Move X2, [X0+40]
	068 Move X1, X21
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X0, X8
	074 Move X30, [X31+48]
	075 CallNoReturn X3
	076 Call 0x1C17F20
	077 Move X0, X19
	078 Move X1, X22
	079 Call 0x1C181E0
	080 Move X0, X19
	081 Move X1, X20
	082 Call 0x1C181E0

