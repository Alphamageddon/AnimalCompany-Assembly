Type: System.Threading.Tasks.TaskFactory`1

Method: System.Void .ctor()

Disassembly:
	0x0267DCD8 STRB W8, [X24 + 0x828]
	0x0267DCDC ADRP X24, 0x1A77000
	0x0267DCE0 LDR X24, [X24 + 0x7B8]
	0x0267DCE4 LDR X0, [X24]
	0x0267DCE8 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move X1, X31
	002 Move W2, W31
	003 Move W3, W31
	004 Move X4, X31

Method: System.Void .ctor(System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler)

Disassembly:
	0x0267DCEC CBNZ W8, 0x267DCF8
	0x0267DCF0 BL 0x1C16DFC
	0x0267DCF4 LDR X0, [X24]
	0x0267DCF8 LDR X8, [X0 + 0xB8]
	0x0267DCFC ADRP X24, 0x1A9E000
	0x0267DD00 LDRB W8, [X8 + 0x10]
	0x0267DD04 LDR X24, [X24 + 0x720]
	0x0267DD08 CBZ W8, 0x267DD28
	0x0267DD0C LDR X0, [X25]
	0x0267DD10 LDR W8, [X0 + 0xE0]
	0x0267DD14 CBNZ W8, 0x267DD1C
	0x0267DD18 BL 0x1C16DFC
	0x0267DD1C MOV X0, X23
	0x0267DD20 MOV X1, X31
	0x0267DD24 BL 0x33EE67C
	0x0267DD28 LDR X0, [X24]
	0x0267DD2C BL 0x1C16F10
	0x0267DD30 MOV X23, X0
	0x0267DD34 LDR X0, [X19 + 0x20]
	0x0267DD38 LDRB W8, [X0 + 0x135]
	0x0267DD3C TBNZ X8, 0x0, 0x267DD44
	0x0267DD40 BL 0x1C5C684

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, X1
	008 Move X1, X31
	009 Move X19, X4
	010 Move W20, W3
	011 Move W21, W2
	012 Move X23, X0
	013 Call Object..ctor, X0
	014 Move W0, W20
	015 Move X1, X31
	016 Call TaskFactory.CheckMultiTaskContinuationOptions, X0
	017 Move W0, W21
	018 Move X1, X31
	019 Call TaskFactory.CheckCreationOptions, X0
	020 Move [X23+16], X22
	021 Move [X23+24], X19
	022 Move [X23+32], W21
	023 Move [X23+36], W20
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 Return 

Method: System.Void FromAsyncCoreLogic(System.IAsyncResult iar, System.Func`2<System.IAsyncResult, TResult> endFunction, System.Action`1<System.IAsyncResult> endAction, System.Threading.Tasks.Task`1<TResult> promise, System.Boolean requiresSynchronization)

Disassembly:
	0x0267DD44 LDR X8, [X0 + 0xC0]
	0x0267DD48 LDR X2, [X8 + 0x68]
	0x0267DD4C MOV X0, X23
	0x0267DD50 MOV X1, X20
	0x0267DD54 MOV X3, X31
	0x0267DD58 BL 0x3316570
	0x0267DD5C LDR X0, [X22 + 0x40]
	0x0267DD60 LDR X8, [X22 + 0x18]
	0x0267DD64 LDR X3, [X22 + 0x28]
	0x0267DD68 MOV X1, X23
	0x0267DD6C MOV X2, X21
	0x0267DD70 BLR X8
	0x0267DD74 MOV X21, X0
	0x0267DD78 CBZ X0, 0x267DE94
	0x0267DD7C ADRP X10, 0x1A9E000
	0x0267DD80 LDR X8, [X21]
	0x0267DD84 LDR X10, [X10 + 0x718]
	0x0267DD88 LDRH W9, [X8 + 0x12E]
	0x0267DD8C LDR X1, [X10]
	0x0267DD90 CBZ X9, 0x267DDB4
	0x0267DD94 LDR X10, [X8 + 0xB0]
	0x0267DD98 ADD X10, X10, 0x8
	0x0267DD9C LDUR X11, [X10 - 0x8]
	0x0267DDA0 CMP X11, X1
	0x0267DDA4 B.EQ 0x267DDC4
	0x0267DDA8 SUBS X9, X9, 0x1
	0x0267DDAC ADD X10, X10, 0x10
	0x0267DDB0 B.NE 0x267DD9C
	0x0267DDB4 MOVZ W2, 0x3
	0x0267DDB8 MOV X0, X21
	0x0267DDBC BL 0x1C5C788
	0x0267DDC0 B 0x267DDD4
	0x0267DDC4 LDR W9, [X10]
	0x0267DDC8 ADD W9, W9, 0x3
	0x0267DDCC ADD X8, X8, W9, 0x4, SXTW
	0x0267DDD0 ADD X0, X8, 0x138
	0x0267DDD4 LDP X8, X1, [X0]
	0x0267DDD8 MOV X0, X21
	0x0267DDDC BLR X8
	0x0267DDE0 TBZ X0, 0x0, 0x267DE1C
	0x0267DDE4 LDR X0, [X19 + 0x20]
	0x0267DDE8 LDP X23, X22, [X20 + 0x10]
	0x0267DDEC LDR X24, [X20 + 0x20]
	0x0267DDF0 LDRB W8, [X0 + 0x135]
	0x0267DDF4 TBNZ X8, 0x0, 0x267DDFC
	0x0267DDF8 BL 0x1C5C684
	0x0267DDFC LDR X8, [X0 + 0xC0]
	0x0267DE00 LDR X5, [X8 + 0x70]
	0x0267DE04 MOV X0, X21
	0x0267DE08 MOV X1, X23
	0x0267DE0C MOV X2, X22
	0x0267DE10 MOV X3, X24
	0x0267DE14 MOV W4, W31
	0x0267DE18 BL 0x267D8CC
	0x0267DE1C LDR X0, [X20 + 0x20]
	0x0267DE20 LDP X20, X19, [X31 + 0x30]
	0x0267DE24 LDP X22, X21, [X31 + 0x20]
	0x0267DE28 LDP X24, X23, [X31 + 0x10]
	0x0267DE2C LDP X30, X25, [X31], #0x40
	0x0267DE30 RET
	0x0267DE34 BL 0x1C16F20
	0x0267DE38 ADRP X0, 0x1A7B000
	0x0267DE3C LDR X0, [X0 + 0x528]
	0x0267DE40 BL 0x1C16D08
	0x0267DE44 BL 0x1C16F10
	0x0267DE48 MOV X20, X0
	0x0267DE4C ADRP X0, 0x1A9E000
	0x0267DE50 LDR X0, [X0 + 0x738]
	0x0267DE54 B 0x267DE74
	0x0267DE58 ADRP X0, 0x1A7B000
	0x0267DE5C LDR X0, [X0 + 0x528]
	0x0267DE60 BL 0x1C16D08
	0x0267DE64 BL 0x1C16F10
	0x0267DE68 MOV X20, X0
	0x0267DE6C ADRP X0, 0x1A9E000
	0x0267DE70 LDR X0, [X0 + 0x748]
	0x0267DE74 BL 0x1C16D08
	0x0267DE78 MOV X1, X0
	0x0267DE7C MOV X0, X20
	0x0267DE80 MOV X2, X31
	0x0267DE84 BL 0x330E100
	0x0267DE88 MOV X0, X20
	0x0267DE8C MOV X1, X19
	0x0267DE90 BL 0x1C16DEC
	0x0267DE94 BL 0x1C16F20
	0x0267DE98 B 0x267DEA8
	0x0267DE9C B 0x267DEA8
	0x0267DEA0 B 0x267DEA8
	0x0267DEA4 B 0x267DEA8
	0x0267DEA8 MOV X21, X0
	0x0267DEAC CMP W1, 0x1
	0x0267DEB0 B.NE 0x267DFC4
	0x0267DEB4 MOV X0, X21
	0x0267DEB8 BL 0x3EB1AD0
	0x0267DEBC MOV X21, X0
	0x0267DEC0 ADRP X0, 0x1A7C000
	0x0267DEC4 LDR X0, [X0 + 0xCC0]
	0x0267DEC8 BL 0x1C16D08
	0x0267DECC LDR X8, [X21]
	0x0267DED0 LDR X1, [X8]
	0x0267DED4 BL 0x1C17270
	0x0267DED8 TBZ X0, 0x0, 0x267DF9C
	0x0267DEDC LDR X21, [X21]
	0x0267DEE0 BL 0x3EB1AE0
	0x0267DEE4 ADRP X0, 0x1A9E000
	0x0267DEE8 LDR X0, [X0 + 0x728]
	0x0267DEEC BL 0x1C16D08
	0x0267DEF0 LDR W8, [X0 + 0xE0]
	0x0267DEF4 CBNZ W8, 0x267DEFC
	0x0267DEF8 BL 0x1C16DFC
	0x0267DEFC MOV X0, X31
	0x0267DF00 BL 0x33EE5CC
	0x0267DF04 TBZ X0, 0x0, 0x267DF38
	0x0267DF08 ADRP X0, 0x1A9E000
	0x0267DF0C LDR X22, [X20 + 0x20]
	0x0267DF10 LDR X0, [X0 + 0x728]
	0x0267DF14 BL 0x1C16D08
	0x0267DF18 LDR W8, [X0 + 0xE0]
	0x0267DF1C CBNZ W8, 0x267DF24
	0x0267DF20 BL 0x1C16DFC
	0x0267DF24 MOVZ W2, 0x3

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+112], X30
	003 Move [X31+120], X23
	004 Move [X31+128], X22
	005 Move [X31+136], X21
	006 Move [X31+144], X20
	007 Move [X31+152], X19
	008 Move X23, 0x1D5E000
	009 Move W8, [X23+553]
	010 Move X22, X5
	011 Move X21, X2
	012 Move X20, X1
	013 Move X19, X0
	014 And W9, W4, 1
	015 Move [X31+104], X3
	016 Move [X31+100], W9
	017 Move [X31+88], X5
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x1A9F000
	023 Move X0, [X0+1832]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+553], W8
	027 Add X8, X31, 72
	028 Add X9, X31, 104
	029 Add X10, X31, 80
	030 Move [X31+8], X31
	031 Move [X31+16], X8
	032 Add X8, X31, 100
	033 Move [X31+24], X9
	034 Move [X31+32], X10
	035 Add X9, X31, 64
	036 Move [X31+40], X8
	037 Move [X31+48], X9
	038 Add X8, X31, 88
	039 Move [X31+72], X31
	040 Move [X31+80], X31
	041 Move [X31+56], X8
	042 Move [X31+64], X31
	043 Compare X20, 0
	044 JumpIfEqual {58}
	045 Move X0, [X22+32]
	046 Move W8, [X0+309]
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {52}
	051 Call 0x1C5D684
	052 Move X0, [X20+64]
	053 Move X8, [X20+24]
	054 Move X2, [X20+40]
	055 Move X1, X19
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move [X31+64], X0
	058 Compare X21, 0
	059 JumpIfEqual {75}
	060 Move X0, [X21+64]
	061 Move X8, [X21+24]
	062 Move X2, [X21+40]
	063 Move X1, X19
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Add X0, X31, 8
	066 Call 0x19B85F8
	067 Move X20, [X31+144]
	068 Move X19, [X31+152]
	069 Move X22, [X31+128]
	070 Move X21, [X31+136]
	071 Move X30, [X31+112]
	072 Move X23, [X31+120]
	073 Add X31, X31, 160
	074 Return 
	075 Call 0x1C17F20
	076 Move X19, X0
	077 Move X19, X0
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X0, X19
	080 Call 0x3EB2AD0
	081 Move X19, X0
	082 Move X0, 0x1A7F000
	083 Move X0, [X0+2216]
	084 Call 0x1C17D08
	085 Move X8, [X19]
	086 Move X1, [X8]
	087 Call 0x1C18270
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {93}
	092 Move W20, 5
	093 Move X0, 0x1A77000
	094 Move X0, [X0+2000]
	095 Call 0x1C17D08
	096 Move X8, [X19]
	097 Move X1, [X8]
	098 Call 0x1C18270
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {110}
	103 Move W20, 6
	104 Move X19, [X19]
	105 Call 0x3EB2AE0
	106 NotImplemented "Instruction CMP not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move [X31+80], X19
	109 Move [X31+72], X19
	110 Move W0, 8
	111 Call 0x3EB2AF0
	112 Move X8, [X19]
	113 Move [X0], X8
	114 Move X1, 0x1838000
	115 Add X1, X1, 3672
	116 Move X2, X31
	117 Call 0x3EB2B00
	118 Move X19, X0
	119 Move X20, X1
	120 Move X19, X0
	121 Call 0x3EB2AE0
	122 Move W1, W20
	123 Move W8, 1
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X0, X19
	126 Call 0x3EB2AD0
	127 Move X8, [X0]
	128 Move [X31+8], X8
	129 Call 0x3EB2AE0
	130 Move X19, X0
	131 Add X0, X31, 8
	132 Call 0x19B85F8
	133 Move X0, X19
	134 Call 0x1D2D690
	135 Call 0x1991590

Method: System.Threading.Tasks.Task`1<TResult> FromAsync(System.Func`3<System.AsyncCallback, System.Object, System.IAsyncResult> beginMethod, System.Func`2<System.IAsyncResult, TResult> endMethod, System.Object state)

Disassembly:
	0x0267DF28 MOV W0, W31
	0x0267DF2C MOV X1, X22
	0x0267DF30 MOV X3, X31
	0x0267DF34 BL 0x33EE5D8
	0x0267DF38 MOV X0, X20
	0x0267DF3C BL 0x19903C0
	0x0267DF40 ADRP X0, 0x1A9E000
	0x0267DF44 LDR X22, [X20 + 0x20]

ISIL:
	001 Move X8, [X4+32]
	002 Move W4, [X0+32]
	003 Move X0, X1
	004 Move X1, X2
	005 Move X8, [X8+192]
	006 Move X2, X31
	007 Move X5, [X8+64]

Method: System.Threading.Tasks.Task`1<TResult> FromAsyncImpl(System.Func`3<System.AsyncCallback, System.Object, System.IAsyncResult> beginMethod, System.Func`2<System.IAsyncResult, TResult> endFunction, System.Action`1<System.IAsyncResult> endAction, System.Object state, System.Threading.Tasks.TaskCreationOptions creationOptions)

Disassembly:
	0x0267DF48 LDR X0, [X0 + 0x728]
	0x0267DF4C BL 0x1C16D08
	0x0267DF50 BL 0x19903D0
	0x0267DF54 MOV X0, X22
	0x0267DF58 MOV X1, X31
	0x0267DF5C BL 0x2142AF8
	0x0267DF60 MOV X0, X20
	0x0267DF64 BL 0x19903C0
	0x0267DF68 LDR X20, [X20 + 0x20]
	0x0267DF6C MOV X0, X20
	0x0267DF70 BL 0x19903C0
	0x0267DF74 LDR X0, [X19 + 0x20]
	0x0267DF78 BL 0x199B99C
	0x0267DF7C LDR X8, [X0 + 0xC0]
	0x0267DF80 MOV X0, X20
	0x0267DF84 MOV X1, X31
	0x0267DF88 MOV X2, X31
	0x0267DF8C LDR X3, [X8 + 0x30]
	0x0267DF90 BL 0x19B7964
	0x0267DF94 MOV X0, X21
	0x0267DF98 BL 0x1C16F18
	0x0267DF9C MOVZ W0, 0x8
	0x0267DFA0 BL 0x3EB1AF0
	0x0267DFA4 LDR X8, [X21]
	0x0267DFA8 STR X8, [X0]
	0x0267DFAC ADRP X1, 0x1837000
	0x0267DFB0 ADD X1, X1, 0xE58
	0x0267DFB4 MOV X2, X31
	0x0267DFB8 BL 0x3EB1B00
	0x0267DFBC MOV X21, X0
	0x0267DFC0 BL 0x3EB1AE0
	0x0267DFC4 MOV X0, X21
	0x0267DFC8 BL 0x1D2C690
	0x0267DFCC BL 0x1990590
	0x0267DFD0 SUB X31, X31, 0x40
	0x0267DFD4 STP X30, X23, [X31 + 0x10]
	0x0267DFD8 STP X22, X21, [X31 + 0x20]
	0x0267DFDC STP X20, X19, [X31 + 0x30]
	0x0267DFE0 ADRP X23, 0x1D5D000
	0x0267DFE4 ADRP X22, 0x1A77000
	0x0267DFE8 LDRB W8, [X23 + 0x22F]
	0x0267DFEC LDR X22, [X22 + 0x7B8]
	0x0267DFF0 MOV X20, X2
	0x0267DFF4 MOV X19, X1
	0x0267DFF8 MOV W21, W0
	0x0267DFFC TBNZ X8, 0x0, 0x267E014
	0x0267E000 ADRP X0, 0x1A76000
	0x0267E004 LDR X0, [X0 + 0x7B8]
	0x0267E008 BL 0x1C16CF4
	0x0267E00C MOVZ W8, 0x1
	0x0267E010 STRB W8, [X23 + 0x22F]
	0x0267E014 LDR X0, [X22]
	0x0267E018 STR X31, [X31 + 0x8]
	0x0267E01C LDR W8, [X0 + 0xE0]
	0x0267E020 CBNZ W8, 0x267E028
	0x0267E024 BL 0x1C16DFC
	0x0267E028 ADD X1, X31, 0xC
	0x0267E02C ADD X2, X31, 0x8
	0x0267E030 MOV W0, W21
	0x0267E034 MOV X3, X31
	0x0267E038 BL 0x33F4210
	0x0267E03C LDR X0, [X20 + 0x20]
	0x0267E040 LDR W21, [X31 + 0xC]
	0x0267E044 LDRB W8, [X0 + 0x135]
	0x0267E048 TBNZ X8, 0x0, 0x267E050
	0x0267E04C BL 0x1C5C684
	0x0267E050 LDR X8, [X0 + 0xC0]
	0x0267E054 LDR X0, [X8 + 0x28]
	0x0267E058 LDRB W8, [X0 + 0x135]
	0x0267E05C TBNZ X8, 0x0, 0x267E064
	0x0267E060 BL 0x1C5C684
	0x0267E064 BL 0x1C16F10
	0x0267E068 LDR X8, [X20 + 0x20]
	0x0267E06C MOV X20, X0
	0x0267E070 LDRB W9, [X8 + 0x135]
	0x0267E074 TBNZ X9, 0x0, 0x267E084
	0x0267E078 MOV X0, X8
	0x0267E07C BL 0x1C5C684
	0x0267E080 MOV X8, X0
	0x0267E084 LDR X8, [X8 + 0xC0]
	0x0267E088 MOVZ W1, 0x1
	0x0267E08C MOV X0, X20
	0x0267E090 MOV X2, X31
	0x0267E094 LDR X6, [X8 + 0x80]
	0x0267E098 MOV X3, X31
	0x0267E09C MOV W4, W21
	0x0267E0A0 MOV X5, X19
	0x0267E0A4 BL 0x2696EAC
	0x0267E0A8 MOV X0, X20
	0x0267E0AC LDP X20, X19, [X31 + 0x30]
	0x0267E0B0 LDP X22, X21, [X31 + 0x20]
	0x0267E0B4 LDP X30, X23, [X31 + 0x10]
	0x0267E0B8 ADD X31, X31, 0x40
	0x0267E0BC RET
	0x0267E0C0 STR X30, [X31 - 0x50]!
	0x0267E0C4 STP X26, X25, [X31 + 0x10]
	0x0267E0C8 STP X24, X23, [X31 + 0x20]
	0x0267E0CC STP X22, X21, [X31 + 0x30]
	0x0267E0D0 STP X20, X19, [X31 + 0x40]
	0x0267E0D4 ADRP X24, 0x1D5C000
	0x0267E0D8 LDRB W8, [X24 + 0x230]
	0x0267E0DC MOV X19, X5
	0x0267E0E0 MOV X21, X4
	0x0267E0E4 MOV W20, W2
	0x0267E0E8 MOV X22, X1
	0x0267E0EC MOV X23, X0
	0x0267E0F0 STR X3, [X31 + 0x8]
	0x0267E0F4 TBNZ X8, 0x0, 0x267E10C
	0x0267E0F8 ADRP X0, 0x1A7D000
	0x0267E0FC LDR X0, [X0 + 0x7D8]
	0x0267E100 BL 0x1C16CF4
	0x0267E104 MOVZ W8, 0x1
	0x0267E108 STRB W8, [X24 + 0x230]
	0x0267E10C MOV W0, W20
	0x0267E110 MOV X1, X31
	0x0267E114 BL 0x33F94F4
	0x0267E118 CBZ X23, 0x267E394
	0x0267E11C CBZ X21, 0x267E3B4
	0x0267E120 ADRP X24, 0x1A7D000
	0x0267E124 LDR X24, [X24 + 0x7D8]
	0x0267E128 MOV X0, X23
	0x0267E12C MOV X1, X31
	0x0267E130 BL 0x33F9EEC
	0x0267E134 LDR X8, [X24]
	0x0267E138 MOV X23, X0
	0x0267E13C LDR W9, [X8 + 0xE0]
	0x0267E140 CBNZ W9, 0x267E14C
	0x0267E144 MOV X0, X8
	0x0267E148 BL 0x1C16DFC
	0x0267E14C ADD X0, X31, 0x8
	0x0267E150 MOV X1, X31
	0x0267E154 BL 0x33DD2B0
	0x0267E158 TBNZ X20, 0x5, 0x267E18C
	0x0267E15C TBZ X0, 0x0, 0x267E18C
	0x0267E160 LDR X0, [X19 + 0x20]
	0x0267E164 LDR X19, [X31 + 0x8]
	0x0267E168 LDRB W8, [X0 + 0x135]
	0x0267E16C TBNZ X8, 0x0, 0x267E174
	0x0267E170 BL 0x1C5C684
	0x0267E174 LDR X8, [X0 + 0xC0]
	0x0267E178 MOV W0, W20
	0x0267E17C MOV X1, X19
	0x0267E180 LDR X2, [X8 + 0x88]
	0x0267E184 BL 0x267DFD0
	0x0267E188 B 0x267E37C
	0x0267E18C MOV X0, X23
	0x0267E190 MOV X1, X31
	0x0267E194 BL 0x33F9868
	0x0267E198 LDR X8, [X19 + 0x20]
	0x0267E19C MOV X23, X0
	0x0267E1A0 LDRB W9, [X8 + 0x135]
	0x0267E1A4 TBNZ X9, 0x0, 0x267E1B4
	0x0267E1A8 MOV X0, X8
	0x0267E1AC BL 0x1C5C684
	0x0267E1B0 MOV X8, X0
	0x0267E1B4 LDR X8, [X8 + 0xC0]
	0x0267E1B8 LDR X0, [X8 + 0xA0]
	0x0267E1BC LDRB W8, [X0 + 0x135]
	0x0267E1C0 TBNZ X8, 0x0, 0x267E1C8
	0x0267E1C4 BL 0x1C5C684
	0x0267E1C8 LDR W8, [X0 + 0xE0]
	0x0267E1CC CBNZ W8, 0x267E1D4
	0x0267E1D0 BL 0x1C16DFC
	0x0267E1D4 LDR X0, [X19 + 0x20]
	0x0267E1D8 LDRB W8, [X0 + 0x135]
	0x0267E1DC TBNZ X8, 0x0, 0x267E1E4
	0x0267E1E0 BL 0x1C5C684
	0x0267E1E4 LDR X8, [X0 + 0xC0]
	0x0267E1E8 LDR X0, [X8 + 0xA0]
	0x0267E1EC LDRB W8, [X0 + 0x135]
	0x0267E1F0 TBNZ X8, 0x0, 0x267E1F8
	0x0267E1F4 BL 0x1C5C684
	0x0267E1F8 LDR X8, [X0 + 0xB8]
	0x0267E1FC LDR X24, [X8 + 0x8]
	0x0267E200 CBNZ X24, 0x267E340
	0x0267E204 LDR X0, [X19 + 0x20]
	0x0267E208 LDRB W8, [X0 + 0x135]
	0x0267E20C TBNZ X8, 0x0, 0x267E214
	0x0267E210 BL 0x1C5C684
	0x0267E214 LDR X8, [X0 + 0xC0]
	0x0267E218 LDR X0, [X8 + 0xA0]
	0x0267E21C LDRB W8, [X0 + 0x135]
	0x0267E220 TBNZ X8, 0x0, 0x267E228
	0x0267E224 BL 0x1C5C684
	0x0267E228 LDR W8, [X0 + 0xE0]
	0x0267E22C CBNZ W8, 0x267E234
	0x0267E230 BL 0x1C16DFC
	0x0267E234 LDR X0, [X19 + 0x20]
	0x0267E238 LDRB W8, [X0 + 0x135]
	0x0267E23C TBNZ X8, 0x0, 0x267E244
	0x0267E240 BL 0x1C5C684
	0x0267E244 LDR X8, [X0 + 0xC0]
	0x0267E248 LDR X0, [X8 + 0xA0]
	0x0267E24C LDRB W8, [X0 + 0x135]
	0x0267E250 TBNZ X8, 0x0, 0x267E258
	0x0267E254 BL 0x1C5C684
	0x0267E258 LDR X8, [X19 + 0x20]
	0x0267E25C LDR X9, [X0 + 0xB8]
	0x0267E260 LDRB W10, [X8 + 0x135]
	0x0267E264 LDR X25, [X9]
	0x0267E268 TBNZ X10, 0x0, 0x267E278
	0x0267E26C MOV X0, X8
	0x0267E270 BL 0x1C5C684
	0x0267E274 MOV X8, X0
	0x0267E278 LDR X8, [X8 + 0xC0]
	0x0267E27C LDR X0, [X8 + 0x98]
	0x0267E280 LDRB W8, [X0 + 0x135]
	0x0267E284 TBNZ X8, 0x0, 0x267E28C
	0x0267E288 BL 0x1C5C684
	0x0267E28C BL 0x1C16F10
	0x0267E290 LDR X8, [X19 + 0x20]
	0x0267E294 MOV X24, X0
	0x0267E298 ADD X9, X8, 0x135
	0x0267E29C LDRH W9, [X9]
	0x0267E2A0 TBNZ X9, 0x0, 0x267E2BC
	0x0267E2A4 MOV X0, X8
	0x0267E2A8 BL 0x1C5C684
	0x0267E2AC LDR X8, [X19 + 0x20]
	0x0267E2B0 ADD X9, X8, 0x135
	0x0267E2B4 LDRH W9, [X9]
	0x0267E2B8 B 0x267E2C0
	0x0267E2BC MOV X0, X8
	0x0267E2C0 LDR X10, [X0 + 0xC0]
	0x0267E2C4 LDR X26, [X10 + 0xA8]
	0x0267E2C8 TBNZ X9, 0x0, 0x267E2D8
	0x0267E2CC MOV X0, X8
	0x0267E2D0 BL 0x1C5C684
	0x0267E2D4 MOV X8, X0
	0x0267E2D8 LDR X8, [X8 + 0xC0]
	0x0267E2DC MOV X0, X24
	0x0267E2E0 MOV X1, X25
	0x0267E2E4 MOV X2, X26
	0x0267E2E8 LDR X3, [X8 + 0xB0]
	0x0267E2EC BL 0x2D3A2F0
	0x0267E2F0 LDR X0, [X19 + 0x20]
	0x0267E2F4 LDRB W8, [X0 + 0x135]
	0x0267E2F8 TBNZ X8, 0x0, 0x267E300
	0x0267E2FC BL 0x1C5C684
	0x0267E300 LDR X8, [X0 + 0xC0]
	0x0267E304 LDR X0, [X8 + 0xA0]
	0x0267E308 LDRB W8, [X0 + 0x135]
	0x0267E30C TBNZ X8, 0x0, 0x267E314
	0x0267E310 BL 0x1C5C684
	0x0267E314 LDR X8, [X0 + 0xB8]
	0x0267E318 STR X24, [X8 + 0x8]
	0x0267E31C LDR X0, [X19 + 0x20]
	0x0267E320 LDRB W8, [X0 + 0x135]
	0x0267E324 TBNZ X8, 0x0, 0x267E32C
	0x0267E328 BL 0x1C5C684
	0x0267E32C LDR X8, [X0 + 0xC0]
	0x0267E330 LDR X0, [X8 + 0xA0]
	0x0267E334 LDRB W8, [X0 + 0x135]
	0x0267E338 TBNZ X8, 0x0, 0x267E340
	0x0267E33C BL 0x1C5C684
	0x0267E340 CBZ X23, 0x267E3F0
	0x0267E344 LDR X0, [X19 + 0x20]
	0x0267E348 LDR X19, [X31 + 0x8]
	0x0267E34C LDRB W8, [X0 + 0x135]
	0x0267E350 TBNZ X8, 0x0, 0x267E358
	0x0267E354 BL 0x1C5C684
	0x0267E358 LDR X8, [X0 + 0xC0]
	0x0267E35C MOV X0, X23
	0x0267E360 MOV X1, X24
	0x0267E364 MOV X2, X22
	0x0267E368 LDR X6, [X8 + 0xC0]
	0x0267E36C MOV X3, X21
	0x0267E370 MOV X4, X19
	0x0267E374 MOV W5, W20
	0x0267E378 BL 0x2139750
	0x0267E37C LDP X20, X19, [X31 + 0x40]
	0x0267E380 LDP X22, X21, [X31 + 0x30]
	0x0267E384 LDP X24, X23, [X31 + 0x20]
	0x0267E388 LDP X26, X25, [X31 + 0x10]
	0x0267E38C LDR X30, [X31], #0x50
	0x0267E390 RET
	0x0267E394 ADRP X0, 0x1A7A000
	0x0267E398 LDR X0, [X0 + 0x528]
	0x0267E39C BL 0x1C16D08
	0x0267E3A0 BL 0x1C16F10
	0x0267E3A4 MOV X20, X0
	0x0267E3A8 ADRP X0, 0x1A9F000
	0x0267E3AC LDR X0, [X0 + 0x618]
	0x0267E3B0 B 0x267E3D0
	0x0267E3B4 ADRP X0, 0x1A7A000
	0x0267E3B8 LDR X0, [X0 + 0x528]
	0x0267E3BC BL 0x1C16D08
	0x0267E3C0 BL 0x1C16F10
	0x0267E3C4 MOV X20, X0
	0x0267E3C8 ADRP X0, 0x1A9D000
	0x0267E3CC LDR X0, [X0 + 0x758]
	0x0267E3D0 BL 0x1C16D08
	0x0267E3D4 MOV X1, X0
	0x0267E3D8 MOV X0, X20
	0x0267E3DC MOV X2, X31
	0x0267E3E0 BL 0x330E100
	0x0267E3E4 MOV X0, X20
	0x0267E3E8 MOV X1, X19
	0x0267E3EC BL 0x1C16DEC
	0x0267E3F0 BL 0x1C16F20
	0x0267E3F4 MOV X1, X31
	0x0267E3F8 MOV W2, W31
	0x0267E3FC MOV W3, W31
	0x0267E400 MOV X4, X31
	0x0267E404 B 0x267E408
	0x0267E408 STP X30, X23, [X31 - 0x30]!
	0x0267E40C STP X22, X21, [X31 + 0x10]
	0x0267E410 STP X20, X19, [X31 + 0x20]
	0x0267E414 MOV X22, X1
	0x0267E418 MOV X1, X31
	0x0267E41C MOV X19, X4
	0x0267E420 MOV W20, W3
	0x0267E424 MOV W21, W2
	0x0267E428 MOV X23, X0
	0x0267E42C BL 0x33BDD8C
	0x0267E430 MOV W0, W20
	0x0267E434 MOV X1, X31
	0x0267E438 BL 0x33F94F4
	0x0267E43C MOV W0, W21

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x1D5E000
	010 Move W8, [X20+554]
	011 Move X19, X5
	012 Move W23, W4
	013 Move X21, X3
	014 Move X24, X2
	015 Move X25, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x1A9F000
	022 Move X0, [X0+1824]
	023 Call 0x1C17CF4
	024 Move X0, 0x1A9F000
	025 Move X0, [X0+1832]
	026 Call 0x1C17CF4
	027 Move X0, 0x1A9F000
	028 Move X0, [X0+1816]
	029 Call 0x1C17CF4
	030 Move X0, 0x1A9F000
	031 Move X0, [X0+1840]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+554], W8
	035 Move X0, [X19+32]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X0+192]
	043 Move X0, [X8+80]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Call 0x1C17F10
	051 Move X8, [X19+32]
	052 Move X20, X0
	053 Move W9, [X8+309]
	054 Move TEMP, X9
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {61}
	058 Move X0, X8
	059 Call 0x1C5D684
	060 Move X8, X0
	061 Move X8, [X8+192]
	062 Move X0, X20
	063 Move X1, [X8+88]
	064 Call 0x23762C8, X0
	065 Compare X20, 0
	066 JumpIfEqual {272}
	067 Move [X20+16], X25
	068 Move [X20+24], X24
	069 Compare X22, 0
	070 JumpIfEqual {273}
	071 Compare X25, 0
	072 JumpIfNotEqual {75}
	073 Compare X24, 0
	074 JumpIfEqual {280}
	075 Move W1, 1
	076 Move W0, W23
	077 Move X2, X31
	078 Call TaskFactory.CheckFromAsyncOptions, X0, X1
	079 Move X0, [X19+32]
	080 Move W8, [X0+309]
	081 Move TEMP, X8
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfEqual {86}
	085 Call 0x1C5D684
	086 Move X8, [X0+192]
	087 Move X0, [X8+40]
	088 Move W8, [X0+309]
	089 Move TEMP, X8
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {94}
	093 Call 0x1C5D684
	094 Move X25, 0x1A9E000
	095 Move X25, [X25+1832]
	096 Call 0x1C17F10
	097 Move X8, [X19+32]
	098 Move X24, X0
	099 Move W9, [X8+309]
	100 Move TEMP, X9
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {107}
	104 Move X0, X8
	105 Call 0x1C5D684
	106 Move X8, X0
	107 Move X8, [X8+192]
	108 Move X0, X24
	109 Move X1, X21
	110 Move W2, W23
	111 Move X3, [X8+96]
	112 Call 0x269725C, X0, X1, X2
	113 Move [X20+32], X24
	114 Move X0, [X25]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {119}
	118 Call 0x1C17DFC
	119 Move X0, X31
	120 Call DebuggerSupport.get_LoggingOn
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {151}
	125 Move X9, 0x1A9E000
	126 Move X8, [X22]
	127 Move X23, [X20+32]
	128 Move X9, [X9+1840]
	129 Move X0, X22
	130 Move X24, [X9]
	131 Move X9, [X8+360]
	132 Move X1, [X8+368]
	133 NotImplemented "Instruction BLR not yet implemented."
	134 Move X1, X0
	135 Move X0, X24
	136 Move X2, X31
	137 Call String.Concat, X0, X1
	138 Move X8, [X25]
	139 Move X24, X0
	140 Move W9, [X8+224]
	141 Compare W9, 0
	142 JumpIfNotEqual {145}
	143 Move X0, X8
	144 Call 0x1C17DFC
	145 Move W0, W31
	146 Move X1, X23
	147 Move X2, X24
	148 Move X3, X31
	149 Move X4, X31
	150 Call DebuggerSupport.TraceOperationCreation, X0, X1, X2, X3
	151 Move X0, [X25]
	152 Move X23, [X20+32]
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {157}
	156 Call 0x1C17DFC
	157 Move X24, 0x1D5C000
	158 Move W8, [X24+2088]
	159 Compare W8, 0
	160 JumpIfNotEqual {169}
	161 Move X0, 0x1A9E000
	162 Move X0, [X0+1832]
	163 Call 0x1C17CF4
	164 Move X0, 0x1A77000
	165 Move X0, [X0+1976]
	166 Call 0x1C17CF4
	167 Move W8, 1
	168 Move [X24+2088], W8
	169 Move X24, 0x1A77000
	170 Move X24, [X24+1976]
	171 Move X0, [X24]
	172 Move W8, [X0+224]
	173 Compare W8, 0
	174 JumpIfNotEqual {177}
	175 Call 0x1C17DFC
	176 Move X0, [X24]
	177 Move X8, [X0+184]
	178 Move X24, 0x1A9E000
	179 Move W8, [X8+16]
	180 Move X24, [X24+1824]
	181 Compare W8, 0
	182 JumpIfEqual {191}
	183 Move X0, [X25]
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {188}
	187 Call 0x1C17DFC
	188 Move X0, X23
	189 Move X1, X31
	190 Call DebuggerSupport.AddToActiveTasksNonInlined, X0
	191 Move X0, [X24]
	192 Call 0x1C17F10
	193 Move X23, X0
	194 Move X0, [X19+32]
	195 Move W8, [X0+309]
	196 Move TEMP, X8
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfEqual {201}
	200 Call 0x1C5D684
	201 Move X8, [X0+192]
	202 Move X2, [X8+104]
	203 Move X0, X23
	204 Move X1, X20
	205 Move X3, X31
	206 Call AsyncCallback..ctor, X0, X1, X2
	207 Move X0, [X22+64]
	208 Move X8, [X22+24]
	209 Move X3, [X22+40]
	210 Move X1, X23
	211 Move X2, X21
	212 NotImplemented "Instruction BLR not yet implemented."
	213 Move X21, X0
	214 Compare X0, 0
	215 JumpIfEqual {295}
	216 Move X10, 0x1A9E000
	217 Move X8, [X21]
	218 Move X10, [X10+1816]
	219 NotImplemented "Instruction LDRH not yet implemented."
	220 Move X1, [X10]
	221 Compare X9, 0
	222 JumpIfEqual {229}
	223 Move X10, [X8+176]
	224 Add X10, X10, 8
	225 NotImplemented "Instruction LDUR not yet implemented."
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Subtract X9, X9, 1
	228 Add X10, X10, 16
	229 Move W2, 3
	230 Move X0, X21
	231 Call 0x1C5D788
	232 Move W9, [X10]
	233 Add W9, W9, 3
	234 Add X8, X8, W9
	235 Add X0, X8, 312
	236 Move X8, [X0]
	237 Move X1, [X0+8]
	238 Move X0, X21
	239 NotImplemented "Instruction BLR not yet implemented."
	240 Move TEMP, X0
	241 And TEMP, TEMP, 1
	242 Compare TEMP, 1
	243 JumpIfNotEqual {262}
	244 Move X0, [X19+32]
	245 Move X23, [X20+16]
	246 Move X22, [X20+24]
	247 Move X24, [X20+32]
	248 Move W8, [X0+309]
	249 Move TEMP, X8
	250 And TEMP, TEMP, 1
	251 Compare TEMP, 1
	252 JumpIfEqual {254}
	253 Call 0x1C5D684
	254 Move X8, [X0+192]
	255 Move X5, [X8+112]
	256 Move X0, X21
	257 Move X1, X23
	258 Move X2, X22
	259 Move X3, X24
	260 Move W4, W31
	261 Call 0x267DD44, X0, X1, X2, X3, X4
	262 Move X0, [X20+32]
	263 Move X20, [X31+48]
	264 Move X19, [X31+56]
	265 Move X22, [X31+32]
	266 Move X21, [X31+40]
	267 Move X24, [X31+16]
	268 Move X23, [X31+24]
	269 Move X30, [X31+64]
	270 Move X25, [X31+72]
	271 Return X0
	272 Call 0x1C17F20
	273 Move X0, 0x1A7B000
	274 Move X0, [X0+1320]
	275 Call 0x1C17D08
	276 Call 0x1C17F10
	277 Move X20, X0
	278 Move X0, 0x1A9E000
	279 Move X0, [X0+1848]
	280 Move X0, 0x1A7B000
	281 Move X0, [X0+1320]
	282 Call 0x1C17D08
	283 Call 0x1C17F10
	284 Move X20, X0
	285 Move X0, 0x1A9E000
	286 Move X0, [X0+1864]
	287 Call 0x1C17D08
	288 Move X1, X0
	289 Move X0, X20
	290 Move X2, X31
	291 Call ArgumentNullException..ctor, X0, X1
	292 Move X0, X20
	293 Move X1, X19
	294 Call 0x1C17DEC
	295 Call 0x1C17F20
	296 Move X21, X0
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Move X0, X21
	299 Call 0x3EB2AD0
	300 Move X21, X0
	301 Move X0, 0x1A7C000
	302 Move X0, [X0+3264]
	303 Call 0x1C17D08
	304 Move X8, [X21]
	305 Move X1, [X8]
	306 Call 0x1C18270
	307 Move TEMP, X0
	308 And TEMP, TEMP, 1
	309 Compare TEMP, 1
	310 JumpIfNotEqual {363}
	311 Move X21, [X21]
	312 Call 0x3EB2AE0
	313 Move X0, 0x1A9E000
	314 Move X0, [X0+1832]
	315 Call 0x1C17D08
	316 Move W8, [X0+224]
	317 Compare W8, 0
	318 JumpIfNotEqual {320}
	319 Call 0x1C17DFC
	320 Move X0, X31
	321 Call DebuggerSupport.get_LoggingOn
	322 Move TEMP, X0
	323 And TEMP, TEMP, 1
	324 Compare TEMP, 1
	325 JumpIfNotEqual {339}
	326 Move X0, 0x1A9E000
	327 Move X22, [X20+32]
	328 Move X0, [X0+1832]
	329 Call 0x1C17D08
	330 Move W8, [X0+224]
	331 Compare W8, 0
	332 JumpIfNotEqual {334}
	333 Call 0x1C17DFC
	334 Move W2, 3
	335 Move W0, W31
	336 Move X1, X22
	337 Move X3, X31
	338 Call DebuggerSupport.TraceOperationCompletion, X0, X1, X2
	339 Move X0, X20
	340 Call 0x19913C0
	341 Move X0, 0x1A9E000
	342 Move X22, [X20+32]
	343 Move X0, [X0+1832]
	344 Call 0x1C17D08
	345 Call 0x19913D0
	346 Move X0, X22
	347 Move X1, X31
	348 Call 0x2143AF8
	349 Move X0, X20
	350 Call 0x19913C0
	351 Move X20, [X20+32]
	352 Move X0, X20
	353 Call 0x19913C0
	354 Move X0, [X19+32]
	355 Call 0x199C99C
	356 Move X8, [X0+192]
	357 Move X0, X20
	358 Move X1, X31
	359 Move X2, [X8+48]
	360 Call 0x19B87A8
	361 Move X0, X21
	362 Call 0x1C17F18
	363 Move W0, 8
	364 Call 0x3EB2AF0
	365 Move X8, [X21]
	366 Move [X0], X8
	367 Move X1, 0x1837000
	368 Add X1, X1, 3672
	369 Move X2, X31
	370 Call 0x3EB2B00
	371 Move X21, X0
	372 Call 0x3EB2AE0
	373 Move X0, X21
	374 Call 0x1D2D690
	375 Call 0x1991590

Method: System.Threading.Tasks.Task`1<TResult> FromAsync(System.Func`4<TArg1, System.AsyncCallback, System.Object, System.IAsyncResult> beginMethod, System.Func`2<System.IAsyncResult, TResult> endMethod, TArg1 arg1, System.Object state)

Disassembly:
	0x02137488 B 0x213749C
	0x0213748C LDR W9, [X10]
	0x02137490 ADD W9, W9, 0x3
	0x02137494 ADD X8, X8, W9, 0x4, SXTW
	0x02137498 ADD X0, X8, 0x138
	0x0213749C LDP X8, X1, [X0]
	0x021374A0 MOV X0, X23
	0x021374A4 BLR X8
	0x021374A8 TBZ X0, 0x0, 0x21374D0
	0x021374AC CBZ X22, 0x21374E8
	0x021374B0 LDR X8, [X20 + 0x38]
	0x021374B4 MOV X0, X22
	0x021374B8 MOV X1, X21
	0x021374BC MOV X2, X19
	0x021374C0 LDR X5, [X8 + 0x40]
	0x021374C4 MOV X3, X23
	0x021374C8 MOV W4, W31
	0x021374CC BL 0x2D261C8
	0x021374D0 MOV X0, X22
	0x021374D4 LDP X20, X19, [X31 + 0x30]
	0x021374D8 LDP X22, X21, [X31 + 0x20]
	0x021374DC LDP X24, X23, [X31 + 0x10]
	0x021374E0 LDP X30, X25, [X31], #0x40
	0x021374E4 RET
	0x021374E8 BL 0x1C16F20
	0x021374EC STP X29, X30, [X31 - 0x50]!
	0x021374F0 STP X26, X25, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X5+56]
	009 Move X19, X4
	010 Move X20, X3
	011 Move X21, X2
	012 Move X22, X1
	013 Move X24, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {20}
	016 Move X0, X5
	017 Move X23, X5
	018 Call 0x1C5D6E0
	019 Move X8, [X23+56]
	020 Move W5, [X24+32]
	021 Move X6, [X8+16]
	022 Move X0, X22
	023 Move X1, X21
	024 Move X3, X20
	025 Move X4, X19
	026 Move X20, [X31+48]
	027 Move X19, [X31+56]
	028 Move X22, [X31+32]
	029 Move X21, [X31+40]
	030 Move X24, [X31+16]
	031 Move X23, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+64]

Method: System.Threading.Tasks.Task`1<TResult> FromAsyncImpl(System.Func`4<TArg1, System.AsyncCallback, System.Object, System.IAsyncResult> beginMethod, System.Func`2<System.IAsyncResult, TResult> endFunction, System.Action`1<System.IAsyncResult> endAction, TArg1 arg1, System.Object state, System.Threading.Tasks.TaskCreationOptions creationOptions)

Disassembly:
	0x021374F4 STP X24, X23, [X31 + 0x20]
	0x021374F8 STP X22, X21, [X31 + 0x30]
	0x021374FC STP X20, X19, [X31 + 0x40]
	0x02137500 ADD X29, X31, 0x0
	0x02137504 SUB X31, X31, 0x50
	0x02137508 MRS X25, 0xC000
	0x0213750C LDR X8, [X25 + 0x28]
	0x02137510 MOV X19, X4
	0x02137514 MOV X23, X3
	0x02137518 MOV X20, X2
	0x0213751C STUR X8, [X29 - 0x8]
	0x02137520 STUR X3, [X29 - 0x50]
	0x02137524 LDR X26, [X5 + 0x38]
	0x02137528 MOV X21, X1
	0x0213752C MOV X22, X0
	0x02137530 CBNZ X26, 0x2137544
	0x02137534 MOV X0, X5
	0x02137538 MOV X24, X5
	0x0213753C BL 0x1C5C6E0
	0x02137540 LDR X26, [X24 + 0x38]
	0x02137544 LDR X8, [X26 + 0x8]
	0x02137548 ADD X9, X31, 0x0
	0x0213754C LDR W2, [X8 + 0xFC]
	0x02137550 ADD X10, X2, 0xF
	0x02137554 AND X10, X10, 0x1FFFFFFFF
	0x02137558 SUB X24, X9, X10
	0x0213755C ADD X31, X24, 0x0
	0x02137560 LDR W8, [X8 + 0x28]
	0x02137564 MOV X0, X24
	0x02137568 CMP W8, 0x0
	0x0213756C SUB X8, X29, 0x50
	0x02137570 CSEL X1, X23, X8, LT
	0x02137574 BL 0x3EB1AC0
	0x02137578 LDP X9, X1, [X26 + 0x8]
	0x0213757C LDR W8, [X22 + 0x20]
	0x02137580 LDR W9, [X9 + 0x28]
	0x02137584 LDR X0, [X1]
	0x02137588 TBNZ X9, 0x1F, 0x2137590
	0x0213758C LDR X24, [X24]
	0x02137590 STUR W8, [X29 - 0xC]
	0x02137594 SUB X8, X29, 0xC
	0x02137598 STP X21, X20, [X29 - 0x48]
	0x0213759C STP X31, X24, [X29 - 0x38]
	0x021375A0 STP X19, X8, [X29 - 0x28]
	0x021375A4 LDR X8, [X1 + 0x10]
	0x021375A8 SUB X3, X29, 0x48
	0x021375AC SUB X4, X29, 0x18
	0x021375B0 MOV X2, X31
	0x021375B4 BLR X8
	0x021375B8 LDUR X0, [X29 - 0x18]
	0x021375BC LDR X8, [X25 + 0x28]
	0x021375C0 LDUR X9, [X29 - 0x8]
	0x021375C4 CMP X8, X9
	0x021375C8 B.NE 0x21375E8
	0x021375CC ADD X31, X29, 0x0
	0x021375D0 LDP X20, X19, [X31 + 0x40]
	0x021375D4 LDP X22, X21, [X31 + 0x30]
	0x021375D8 LDP X24, X23, [X31 + 0x20]
	0x021375DC LDP X26, X25, [X31 + 0x10]
	0x021375E0 LDP X29, X30, [X31], #0x50
	0x021375E4 RET
	0x021375E8 BL 0x3EB1B20
	0x021375EC STP X29, X30, [X31 - 0x60]!
	0x021375F0 STP X28, X27, [X31 + 0x10]
	0x021375F4 STP X26, X25, [X31 + 0x20]
	0x021375F8 STP X24, X23, [X31 + 0x30]
	0x021375FC STP X22, X21, [X31 + 0x40]
	0x02137600 STP X20, X19, [X31 + 0x50]
	0x02137604 ADD X29, X31, 0x0
	0x02137608 SUB X31, X31, 0x50
	0x0213760C MRS X23, 0xC000
	0x02137610 LDR X8, [X23 + 0x28]
	0x02137614 MOV X19, X6
	0x02137618 MOV W20, W5
	0x0213761C MOV X25, X4
	0x02137620 STUR X8, [X29 - 0x8]
	0x02137624 STUR X3, [X29 - 0x30]
	0x02137628 LDR X8, [X6 + 0x38]
	0x0213762C MOV X26, X3
	0x02137630 MOV X21, X2
	0x02137634 MOV X22, X1
	0x02137638 MOV X24, X0
	0x0213763C CBNZ X8, 0x2137680
	0x02137640 ADRP X0, 0x1FE4000
	0x02137644 LDR X0, [X0 + 0x720]
	0x02137648 BL 0x1C16CF4
	0x0213764C ADRP X0, 0x1FE4000
	0x02137650 LDR X0, [X0 + 0x728]
	0x02137654 BL 0x1C16CF4
	0x02137658 ADRP X0, 0x1FE4000
	0x0213765C LDR X0, [X0 + 0x718]
	0x02137660 BL 0x1C16CF4
	0x02137664 ADRP X0, 0x1FE4000
	0x02137668 LDR X0, [X0 + 0x730]
	0x0213766C BL 0x1C16CF4
	0x02137670 LDR X8, [X19 + 0x38]
	0x02137674 CBNZ X8, 0x2137680
	0x02137678 MOV X0, X19
	0x0213767C BL 0x1C5C6E0
	0x02137680 LDR X0, [X19 + 0x20]
	0x02137684 STUR X23, [X29 - 0x38]
	0x02137688 LDRB W8, [X0 + 0x135]
	0x0213768C TBNZ X8, 0x0, 0x2137694
	0x02137690 BL 0x1C5C684
	0x02137694 LDR X23, [X19 + 0x38]
	0x02137698 LDR X8, [X0 + 0xC0]
	0x0213769C LDR X9, [X23 + 0x18]
	0x021376A0 LDR X8, [X8 + 0x10]
	0x021376A4 LDR W28, [X9 + 0xFC]
	0x021376A8 LDR W2, [X8 + 0xFC]
	0x021376AC ADD X8, X31, 0x0
	0x021376B0 ADD X9, X28, 0xF
	0x021376B4 AND X9, X9, 0x1FFFFFFFF
	0x021376B8 SUB X27, X8, X9
	0x021376BC ADD X31, X27, 0x0
	0x021376C0 ADD X9, X2, 0xF
	0x021376C4 ADD X8, X31, 0x0
	0x021376C8 AND X9, X9, 0x1FFFFFFFF
	0x021376CC SUB X8, X8, X9
	0x021376D0 STP X2, X8, [X29 - 0x48]
	0x021376D4 ADD X31, X8, 0x0
	0x021376D8 ADD X8, X31, 0x0
	0x021376DC SUB X0, X8, X9
	0x021376E0 ADD X31, X0, 0x0
	0x021376E4 MOV W1, W31
	0x021376E8 STUR X0, [X29 - 0x50]
	0x021376EC BL 0x3EB1B10
	0x021376F0 LDR X0, [X23]
	0x021376F4 LDRB W8, [X0 + 0x135]
	0x021376F8 TBNZ X8, 0x0, 0x2137700
	0x021376FC BL 0x1C5C684
	0x02137700 BL 0x1C16F10
	0x02137704 LDR X8, [X19 + 0x38]
	0x02137708 MOV X23, X0
	0x0213770C LDR X1, [X8 + 0x8]
	0x02137710 LDR X8, [X1]
	0x02137714 BLR X8
	0x02137718 CBZ X23, 0x2137C34
	0x0213771C STP X22, X21, [X23 + 0x10]
	0x02137720 CBZ X24, 0x2137A6C
	0x02137724 CBNZ X22, 0x213772C
	0x02137728 CBZ X21, 0x2137A8C
	0x0213772C MOVZ W1, 0x1
	0x02137730 MOV W0, W20
	0x02137734 MOV X2, X31
	0x02137738 BL 0x33F9780
	0x0213773C LDR X0, [X19 + 0x20]
	0x02137740 LDRB W8, [X0 + 0x135]
	0x02137744 TBNZ X8, 0x0, 0x213774C
	0x02137748 BL 0x1C5C684
	0x0213774C LDR X8, [X0 + 0xC0]
	0x02137750 LDR X0, [X8 + 0x28]
	0x02137754 LDRB W8, [X0 + 0x135]
	0x02137758 TBNZ X8, 0x0, 0x2137760
	0x0213775C BL 0x1C5C684
	0x02137760 BL 0x1C16F10
	0x02137764 LDR X8, [X19 + 0x20]
	0x02137768 MOV X21, X0
	0x0213776C ADD X9, X8, 0x135
	0x02137770 LDRH W9, [X9]
	0x02137774 TBNZ X9, 0x0, 0x2137790
	0x02137778 MOV X0, X8
	0x0213777C BL 0x1C5C684
	0x02137780 LDR X8, [X19 + 0x20]
	0x02137784 ADD X9, X8, 0x135
	0x02137788 LDRH W9, [X9]
	0x0213778C B 0x2137794
	0x02137790 MOV X0, X8
	0x02137794 LDR X10, [X0 + 0xC0]
	0x02137798 LDR X10, [X10 + 0x60]
	0x0213779C LDR X22, [X10]
	0x021377A0 TBNZ X9, 0x0, 0x21377B0
	0x021377A4 MOV X0, X8
	0x021377A8 BL 0x1C5C684
	0x021377AC MOV X8, X0
	0x021377B0 LDR X8, [X8 + 0xC0]
	0x021377B4 MOV X0, X21
	0x021377B8 MOV X1, X25
	0x021377BC MOV W2, W20
	0x021377C0 LDR X3, [X8 + 0x60]
	0x021377C4 BLR X22
	0x021377C8 STR X21, [X23 + 0x20]
	0x021377CC ADRP X22, 0x1FE4000
	0x021377D0 LDR X22, [X22 + 0x728]
	0x021377D4 LDR X0, [X22]
	0x021377D8 LDR W8, [X0 + 0xE0]
	0x021377DC CBNZ W8, 0x21377E4
	0x021377E0 BL 0x1C16DFC
	0x021377E4 MOV X0, X31
	0x021377E8 BL 0x33EE5CC
	0x021377EC TBZ X0, 0x0, 0x2137850
	0x021377F0 ADRP X9, 0x1FE4000
	0x021377F4 LDR X8, [X24]
	0x021377F8 LDR X20, [X23 + 0x20]
	0x021377FC LDR X9, [X9 + 0x730]
	0x02137800 MOV X0, X24
	0x02137804 LDR X21, [X9]
	0x02137808 LDP X9, X1, [X8 + 0x168]
	0x0213780C BLR X9
	0x02137810 MOV X1, X0
	0x02137814 MOV X0, X21
	0x02137818 MOV X2, X31
	0x0213781C BL 0x321B938
	0x02137820 LDR X8, [X22]
	0x02137824 MOV X21, X0
	0x02137828 LDR W9, [X8 + 0xE0]
	0x0213782C CBNZ W9, 0x2137838
	0x02137830 MOV X0, X8
	0x02137834 BL 0x1C16DFC
	0x02137838 MOV W0, W31
	0x0213783C MOV X1, X20
	0x02137840 MOV X2, X21
	0x02137844 MOV X3, X31
	0x02137848 MOV X4, X31
	0x0213784C BL 0x33EE5D4
	0x02137850 LDR X0, [X22]
	0x02137854 LDR X20, [X23 + 0x20]
	0x02137858 LDR W8, [X0 + 0xE0]
	0x0213785C CBNZ W8, 0x2137864
	0x02137860 BL 0x1C16DFC
	0x02137864 ADRP X21, 0x22A2000
	0x02137868 LDRB W8, [X21 + 0x828]
	0x0213786C CBNZ W8, 0x2137890
	0x02137870 ADRP X0, 0x1FE4000
	0x02137874 LDR X0, [X0 + 0x728]
	0x02137878 BL 0x1C16CF4
	0x0213787C ADRP X0, 0x1FBD000
	0x02137880 LDR X0, [X0 + 0x7B8]
	0x02137884 BL 0x1C16CF4
	0x02137888 MOVZ W8, 0x1
	0x0213788C STRB W8, [X21 + 0x828]
	0x02137890 ADRP X9, 0x1FBD000
	0x02137894 LDR X9, [X9 + 0x7B8]
	0x02137898 LDR X0, [X9]
	0x0213789C LDR W8, [X0 + 0xE0]
	0x021378A0 CBNZ W8, 0x21378B0
	0x021378A4 MOV X21, X9
	0x021378A8 BL 0x1C16DFC
	0x021378AC LDR X0, [X21]
	0x021378B0 LDR X8, [X0 + 0xB8]
	0x021378B4 LDRB W8, [X8 + 0x10]
	0x021378B8 CBZ W8, 0x21378D8
	0x021378BC LDR X0, [X22]
	0x021378C0 LDR W8, [X0 + 0xE0]
	0x021378C4 CBNZ W8, 0x21378CC
	0x021378C8 BL 0x1C16DFC
	0x021378CC MOV X0, X20
	0x021378D0 MOV X1, X31
	0x021378D4 BL 0x33EE67C
	0x021378D8 LDR X8, [X19 + 0x38]
	0x021378DC MOV X0, X27
	0x021378E0 MOV X2, X28
	0x021378E4 LDR X8, [X8 + 0x18]
	0x021378E8 LDR W8, [X8 + 0x28]
	0x021378EC CMP W8, 0x0
	0x021378F0 SUB X8, X29, 0x30
	0x021378F4 CSEL X1, X26, X8, LT
	0x021378F8 BL 0x3EB1AC0
	0x021378FC ADRP X8, 0x1FE4000
	0x02137900 LDR X8, [X8 + 0x720]
	0x02137904 LDR X0, [X8]
	0x02137908 BL 0x1C16F10
	0x0213790C LDR X8, [X19 + 0x38]
	0x02137910 MOV X20, X0
	0x02137914 LDR X2, [X8 + 0x20]
	0x02137918 MOV X1, X23
	0x0213791C MOV X3, X31
	0x02137920 BL 0x3316570
	0x02137924 LDR X8, [X19 + 0x38]
	0x02137928 LDR X9, [X8 + 0x18]
	0x0213792C LDR X1, [X8 + 0x28]
	0x02137930 LDR W8, [X9 + 0x28]
	0x02137934 LDR X0, [X1]
	0x02137938 TBNZ X8, 0x1F, 0x2137940
	0x0213793C LDR X27, [X27]
	0x02137940 STP X27, X20, [X29 - 0x28]
	0x02137944 STUR X25, [X29 - 0x18]
	0x02137948 LDR X8, [X1 + 0x10]
	0x0213794C SUB X3, X29, 0x28
	0x02137950 SUB X4, X29, 0x10
	0x02137954 MOV X2, X24
	0x02137958 BLR X8
	0x0213795C LDUR X20, [X29 - 0x10]
	0x02137960 CBZ X20, 0x2137AC8
	0x02137964 ADRP X10, 0x1FE4000
	0x02137968 LDR X8, [X20]
	0x0213796C LDR X10, [X10 + 0x718]
	0x02137970 LDRH W9, [X8 + 0x12E]
	0x02137974 LDR X1, [X10]
	0x02137978 CBZ X9, 0x213799C
	0x0213797C LDR X10, [X8 + 0xB0]
	0x02137980 ADD X10, X10, 0x8
	0x02137984 LDUR X11, [X10 - 0x8]
	0x02137988 CMP X11, X1
	0x0213798C B.EQ 0x21379AC
	0x02137990 SUBS X9, X9, 0x1
	0x02137994 ADD X10, X10, 0x10
	0x02137998 B.NE 0x2137984
	0x0213799C MOVZ W2, 0x3
	0x021379A0 MOV X0, X20
	0x021379A4 BL 0x1C5C788
	0x021379A8 B 0x21379BC
	0x021379AC LDR W9, [X10]
	0x021379B0 ADD W9, W9, 0x3
	0x021379B4 ADD X8, X8, W9, 0x4, SXTW
	0x021379B8 ADD X0, X8, 0x138
	0x021379BC LDP X8, X1, [X0]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X8, [X6+56]
	011 Move X19, X6
	012 Move W24, W5
	013 Move X21, X4
	014 Move X22, X3
	015 Move X25, X2
	016 Move X26, X1
	017 Move X23, X0
	018 Compare X8, 0
	019 JumpIfNotEqual {38}
	020 Move X0, 0x1FE5000
	021 Move X0, [X0+1824]
	022 Call 0x1C17CF4
	023 Move X0, 0x1FE5000
	024 Move X0, [X0+1832]
	025 Call 0x1C17CF4
	026 Move X0, 0x1FE5000
	027 Move X0, [X0+1816]
	028 Call 0x1C17CF4
	029 Move X0, 0x1FE5000
	030 Move X0, [X0+1840]
	031 Call 0x1C17CF4
	032 Move X8, [X19+56]
	033 Compare X8, 0
	034 JumpIfNotEqual {38}
	035 Move X0, X19
	036 Call 0x1C5D6E0
	037 Move X8, [X19+56]
	038 Move X0, [X8]
	039 Move W8, [X0+309]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {45}
	044 Call 0x1C5D684
	045 Call 0x1C17F10
	046 Move X8, [X19+56]
	047 Move X20, X0
	048 Move X1, [X8+8]
	049 Call 0x2378730, X0
	050 Compare X20, 0
	051 JumpIfEqual {251}
	052 Move [X20+16], X26
	053 Move [X20+24], X25
	054 Compare X23, 0
	055 JumpIfEqual {252}
	056 Compare X26, 0
	057 JumpIfNotEqual {60}
	058 Compare X25, 0
	059 JumpIfEqual {259}
	060 Move W1, 1
	061 Move W0, W24
	062 Move X2, X31
	063 Call TaskFactory.CheckFromAsyncOptions, X0, X1
	064 Move X0, [X19+32]
	065 Move W8, [X0+309]
	066 Move TEMP, X8
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {71}
	070 Call 0x1C5D684
	071 Move X8, [X0+192]
	072 Move X0, [X8+40]
	073 Move W8, [X0+309]
	074 Move TEMP, X8
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {79}
	078 Call 0x1C5D684
	079 Call 0x1C17F10
	080 Move X8, [X19+32]
	081 Move X25, X0
	082 Move W9, [X8+309]
	083 Move TEMP, X9
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {90}
	087 Move X0, X8
	088 Call 0x1C5D684
	089 Move X8, X0
	090 Move X8, [X8+192]
	091 Move X0, X25
	092 Move X1, X21
	093 Move W2, W24
	094 Move X3, [X8+96]
	095 Call Task`1<Object>..ctor, X0, X1, X2
	096 Move [X20+32], X25
	097 Move X26, 0x1FE5000
	098 Move X26, [X26+1832]
	099 Move X0, [X26]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move X0, X31
	105 Call DebuggerSupport.get_LoggingOn
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {136}
	110 Move X9, 0x1FE5000
	111 Move X8, [X23]
	112 Move X24, [X20+32]
	113 Move X9, [X9+1840]
	114 Move X0, X23
	115 Move X25, [X9]
	116 Move X9, [X8+360]
	117 Move X1, [X8+368]
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move X1, X0
	120 Move X0, X25
	121 Move X2, X31
	122 Call String.Concat, X0, X1
	123 Move X8, [X26]
	124 Move X25, X0
	125 Move W9, [X8+224]
	126 Compare W9, 0
	127 JumpIfNotEqual {130}
	128 Move X0, X8
	129 Call 0x1C17DFC
	130 Move W0, W31
	131 Move X1, X24
	132 Move X2, X25
	133 Move X3, X31
	134 Move X4, X31
	135 Call DebuggerSupport.TraceOperationCreation, X0, X1, X2, X3
	136 Move X0, [X26]
	137 Move X24, [X20+32]
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 JumpIfNotEqual {142}
	141 Call 0x1C17DFC
	142 Move X25, 0x22A3000
	143 Move W8, [X25+2088]
	144 Compare W8, 0
	145 JumpIfNotEqual {154}
	146 Move X0, 0x1FE5000
	147 Move X0, [X0+1832]
	148 Call 0x1C17CF4
	149 Move X0, 0x1FBE000
	150 Move X0, [X0+1976]
	151 Call 0x1C17CF4
	152 Move W8, 1
	153 Move [X25+2088], W8
	154 Move X25, 0x1FBE000
	155 Move X25, [X25+1976]
	156 Move X0, [X25]
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {162}
	160 Call 0x1C17DFC
	161 Move X0, [X25]
	162 Move X8, [X0+184]
	163 Move W8, [X8+16]
	164 Compare W8, 0
	165 JumpIfEqual {174}
	166 Move X0, [X26]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {171}
	170 Call 0x1C17DFC
	171 Move X0, X24
	172 Move X1, X31
	173 Call DebuggerSupport.AddToActiveTasksNonInlined, X0
	174 Move X8, 0x1FE5000
	175 Move X8, [X8+1824]
	176 Move X0, [X8]
	177 Call 0x1C17F10
	178 Move X8, [X19+56]
	179 Move X24, X0
	180 Move X2, [X8+32]
	181 Move X1, X20
	182 Move X3, X31
	183 Call AsyncCallback..ctor, X0, X1, X2
	184 Move X0, [X23+64]
	185 Move X8, [X23+24]
	186 Move X4, [X23+40]
	187 Move X1, X22
	188 Move X2, X24
	189 Move X3, X21
	190 NotImplemented "Instruction BLR not yet implemented."
	191 Move X21, X0
	192 Compare X0, 0
	193 JumpIfEqual {274}
	194 Move X10, 0x1FE5000
	195 Move X8, [X21]
	196 Move X10, [X10+1816]
	197 NotImplemented "Instruction LDRH not yet implemented."
	198 Move X1, [X10]
	199 Compare X9, 0
	200 JumpIfEqual {207}
	201 Move X10, [X8+176]
	202 Add X10, X10, 8
	203 NotImplemented "Instruction LDUR not yet implemented."
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Subtract X9, X9, 1
	206 Add X10, X10, 16
	207 Move W2, 3
	208 Move X0, X21
	209 Call 0x1C5D788
	210 Move W9, [X10]
	211 Add W9, W9, 3
	212 Add X8, X8, W9
	213 Add X0, X8, 312
	214 Move X8, [X0]
	215 Move X1, [X0+8]
	216 Move X0, X21
	217 NotImplemented "Instruction BLR not yet implemented."
	218 Move TEMP, X0
	219 And TEMP, TEMP, 1
	220 Compare TEMP, 1
	221 JumpIfNotEqual {240}
	222 Move X0, [X19+32]
	223 Move X23, [X20+16]
	224 Move X22, [X20+24]
	225 Move X24, [X20+32]
	226 Move W8, [X0+309]
	227 Move TEMP, X8
	228 And TEMP, TEMP, 1
	229 Compare TEMP, 1
	230 JumpIfEqual {232}
	231 Call 0x1C5D684
	232 Move X8, [X0+192]
	233 Move X5, [X8+112]
	234 Move X0, X21
	235 Move X1, X23
	236 Move X2, X22
	237 Move X3, X24
	238 Move W4, W31
	239 Call TaskFactory`1<Object>.FromAsyncCoreLogic, X0, X1, X2, X3, X4
	240 Move X0, [X20+32]
	241 Move X20, [X31+64]
	242 Move X19, [X31+72]
	243 Move X22, [X31+48]
	244 Move X21, [X31+56]
	245 Move X24, [X31+32]
	246 Move X23, [X31+40]
	247 Move X26, [X31+16]
	248 Move X25, [X31+24]
	249 Move X30, [X31+80]
	250 Return X0
	251 Call 0x1C17F20
	252 Move X0, 0x1FC2000
	253 Move X0, [X0+1320]
	254 Call 0x1C17D08
	255 Call 0x1C17F10
	256 Move X20, X0
	257 Move X0, 0x1FE5000
	258 Move X0, [X0+1848]
	259 Move X0, 0x1FC2000
	260 Move X0, [X0+1320]
	261 Call 0x1C17D08
	262 Call 0x1C17F10
	263 Move X20, X0
	264 Move X0, 0x1FE5000
	265 Move X0, [X0+1856]
	266 Call 0x1C17D08
	267 Move X1, X0
	268 Move X0, X20
	269 Move X2, X31
	270 Call ArgumentNullException..ctor, X0, X1
	271 Move X0, X20
	272 Move X1, X19
	273 Call 0x1C17DEC
	274 Call 0x1C17F20
	275 Move X21, X0
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Move X0, X21
	278 Call 0x3EB2AD0
	279 Move X21, X0
	280 Move X0, 0x1FC3000
	281 Move X0, [X0+3264]
	282 Call 0x1C17D08
	283 Move X8, [X21]
	284 Move X1, [X8]
	285 Call 0x1C18270
	286 Move TEMP, X0
	287 And TEMP, TEMP, 1
	288 Compare TEMP, 1
	289 JumpIfNotEqual {342}
	290 Move X21, [X21]
	291 Call 0x3EB2AE0
	292 Move X0, 0x1FE5000
	293 Move X0, [X0+1832]
	294 Call 0x1C17D08
	295 Move W8, [X0+224]
	296 Compare W8, 0
	297 JumpIfNotEqual {299}
	298 Call 0x1C17DFC
	299 Move X0, X31
	300 Call DebuggerSupport.get_LoggingOn
	301 Move TEMP, X0
	302 And TEMP, TEMP, 1
	303 Compare TEMP, 1
	304 JumpIfNotEqual {318}
	305 Move X0, 0x1FE5000
	306 Move X22, [X20+32]
	307 Move X0, [X0+1832]
	308 Call 0x1C17D08
	309 Move W8, [X0+224]
	310 Compare W8, 0
	311 JumpIfNotEqual {313}
	312 Call 0x1C17DFC
	313 Move W2, 3
	314 Move W0, W31
	315 Move X1, X22
	316 Move X3, X31
	317 Call DebuggerSupport.TraceOperationCompletion, X0, X1, X2
	318 Move X0, X20
	319 Call 0x19913C0
	320 Move X0, 0x1FE5000
	321 Move X22, [X20+32]
	322 Move X0, [X0+1832]
	323 Call 0x1C17D08
	324 Call 0x19913D0
	325 Move X0, X22
	326 Move X1, X31
	327 Call 0x2143AF8
	328 Move X0, X20
	329 Call 0x19913C0
	330 Move X20, [X20+32]
	331 Move X0, X20
	332 Call 0x19913C0
	333 Move X0, [X19+32]
	334 Call 0x199C99C
	335 Move X8, [X0+192]
	336 Move X0, X20
	337 Move X1, X31
	338 Move X2, [X8+48]
	339 Call 0x199D040
	340 Move X0, X21
	341 Call 0x1C17F18
	342 Move W0, 8
	343 Call 0x3EB2AF0
	344 Move X8, [X21]
	345 Move [X0], X8
	346 Move X1, 0x1D7E000
	347 Add X1, X1, 3672
	348 Move X2, X31
	349 Call 0x3EB2B00
	350 Move X21, X0
	351 Call 0x3EB2AE0
	352 Move X0, X21
	353 Call 0x1D2D690
	354 Call 0x1991590

Method: System.Threading.Tasks.Task`1<TResult> FromAsyncImpl(System.Func`5<TArg1, TArg2, System.AsyncCallback, System.Object, System.IAsyncResult> beginMethod, System.Func`2<System.IAsyncResult, TResult> endFunction, System.Action`1<System.IAsyncResult> endAction, TArg1 arg1, TArg2 arg2, System.Object state, System.Threading.Tasks.TaskCreationOptions creationOptions)

Disassembly:
	0x02137E8C TBNZ X8, 0x0, 0x2137E94
	0x02137E90 BL 0x1C5C684
	0x02137E94 LDR X8, [X0 + 0xC0]
	0x02137E98 LDR X0, [X8 + 0x28]
	0x02137E9C LDRB W8, [X0 + 0x135]
	0x02137EA0 TBNZ X8, 0x0, 0x2137EA8
	0x02137EA4 BL 0x1C5C684
	0x02137EA8 BL 0x1C16F10
	0x02137EAC LDR X8, [X19 + 0x20]
	0x02137EB0 MOV X26, X0
	0x02137EB4 ADD X9, X8, 0x135
	0x02137EB8 LDRH W9, [X9]
	0x02137EBC TBNZ X9, 0x0, 0x2137ED8
	0x02137EC0 MOV X0, X8
	0x02137EC4 BL 0x1C5C684
	0x02137EC8 LDR X8, [X19 + 0x20]
	0x02137ECC ADD X9, X8, 0x135
	0x02137ED0 LDRH W9, [X9]
	0x02137ED4 B 0x2137EDC
	0x02137ED8 MOV X0, X8
	0x02137EDC LDR X10, [X0 + 0xC0]
	0x02137EE0 LDR X10, [X10 + 0x60]
	0x02137EE4 LDR X27, [X10]
	0x02137EE8 TBNZ X9, 0x0, 0x2137EF8
	0x02137EEC MOV X0, X8
	0x02137EF0 BL 0x1C5C684
	0x02137EF4 MOV X8, X0
	0x02137EF8 LDR X8, [X8 + 0xC0]
	0x02137EFC LDUR X1, [X29 - 0x48]
	0x02137F00 MOV X0, X26
	0x02137F04 MOV W2, W25
	0x02137F08 LDR X3, [X8 + 0x60]
	0x02137F0C BLR X27
	0x02137F10 STR X26, [X23 + 0x20]
	0x02137F14 ADRP X27, 0x1FE4000
	0x02137F18 LDR X27, [X27 + 0x728]
	0x02137F1C LDR X0, [X27]
	0x02137F20 LDR W8, [X0 + 0xE0]
	0x02137F24 CBNZ W8, 0x2137F2C
	0x02137F28 BL 0x1C16DFC
	0x02137F2C MOV X0, X31
	0x02137F30 BL 0x33EE5CC
	0x02137F34 TBZ X0, 0x0, 0x2137F98
	0x02137F38 ADRP X9, 0x1FE4000
	0x02137F3C LDR X8, [X24]
	0x02137F40 LDR X25, [X23 + 0x20]
	0x02137F44 LDR X9, [X9 + 0x730]
	0x02137F48 MOV X0, X24
	0x02137F4C LDR X26, [X9]
	0x02137F50 LDP X9, X1, [X8 + 0x168]
	0x02137F54 BLR X9
	0x02137F58 MOV X1, X0
	0x02137F5C MOV X0, X26
	0x02137F60 MOV X2, X31
	0x02137F64 BL 0x321B938
	0x02137F68 LDR X8, [X27]
	0x02137F6C MOV X26, X0
	0x02137F70 LDR W9, [X8 + 0xE0]
	0x02137F74 CBNZ W9, 0x2137F80
	0x02137F78 MOV X0, X8
	0x02137F7C BL 0x1C16DFC
	0x02137F80 MOV W0, W31
	0x02137F84 MOV X1, X25
	0x02137F88 MOV X2, X26
	0x02137F8C MOV X3, X31
	0x02137F90 MOV X4, X31
	0x02137F94 BL 0x33EE5D4
	0x02137F98 LDR X0, [X27]
	0x02137F9C LDR X25, [X23 + 0x20]
	0x02137FA0 LDR W8, [X0 + 0xE0]
	0x02137FA4 CBNZ W8, 0x2137FAC
	0x02137FA8 BL 0x1C16DFC
	0x02137FAC ADRP X26, 0x22A2000
	0x02137FB0 LDRB W8, [X26 + 0x828]
	0x02137FB4 CBNZ W8, 0x2137FD8
	0x02137FB8 ADRP X0, 0x1FE4000
	0x02137FBC LDR X0, [X0 + 0x728]
	0x02137FC0 BL 0x1C16CF4
	0x02137FC4 ADRP X0, 0x1FBD000
	0x02137FC8 LDR X0, [X0 + 0x7B8]
	0x02137FCC BL 0x1C16CF4
	0x02137FD0 MOVZ W8, 0x1
	0x02137FD4 STRB W8, [X26 + 0x828]
	0x02137FD8 ADRP X26, 0x1FBD000
	0x02137FDC LDR X26, [X26 + 0x7B8]
	0x02137FE0 LDR X0, [X26]
	0x02137FE4 LDR W8, [X0 + 0xE0]
	0x02137FE8 CBNZ W8, 0x2137FF4
	0x02137FEC BL 0x1C16DFC
	0x02137FF0 LDR X0, [X26]
	0x02137FF4 LDR X8, [X0 + 0xB8]
	0x02137FF8 LDRB W8, [X8 + 0x10]
	0x02137FFC CBZ W8, 0x213801C
	0x02138000 LDR X0, [X27]
	0x02138004 LDR W8, [X0 + 0xE0]
	0x02138008 CBNZ W8, 0x2138010
	0x0213800C BL 0x1C16DFC
	0x02138010 MOV X0, X25
	0x02138014 MOV X1, X31
	0x02138018 BL 0x33EE67C
	0x0213801C LDR X25, [X19 + 0x38]
	0x02138020 LDUR X9, [X29 - 0x58]
	0x02138024 MOV X0, X28
	0x02138028 MOV X2, X22
	0x0213802C LDR X8, [X25 + 0x18]
	0x02138030 LDR W8, [X8 + 0x28]
	0x02138034 CMP W8, 0x0
	0x02138038 SUB X8, X29, 0x38
	0x0213803C CSEL X1, X9, X8, LT
	0x02138040 BL 0x3EB1AC0
	0x02138044 LDR X8, [X25 + 0x20]
	0x02138048 LDUR X9, [X29 - 0x50]
	0x0213804C MOV X0, X20
	0x02138050 MOV X2, X21
	0x02138054 LDR W8, [X8 + 0x28]
	0x02138058 CMP W8, 0x0
	0x0213805C SUB X8, X29, 0x40
	0x02138060 CSEL X1, X9, X8, LT
	0x02138064 BL 0x3EB1AC0
	0x02138068 ADRP X8, 0x1FE3000
	0x0213806C LDR X8, [X8 + 0x720]
	0x02138070 LDR X0, [X8]
	0x02138074 BL 0x1C16F10
	0x02138078 LDR X8, [X19 + 0x38]
	0x0213807C MOV X21, X0
	0x02138080 LDR X2, [X8 + 0x28]
	0x02138084 MOV X1, X23
	0x02138088 MOV X3, X31
	0x0213808C BL 0x3316570
	0x02138090 LDR X8, [X19 + 0x38]
	0x02138094 LDR X9, [X8 + 0x18]
	0x02138098 LDR X1, [X8 + 0x30]
	0x0213809C LDR W9, [X9 + 0x28]
	0x021380A0 LDR X0, [X1]
	0x021380A4 TBNZ X9, 0x1F, 0x21380AC
	0x021380A8 LDR X28, [X28]
	0x021380AC LDR X8, [X8 + 0x20]
	0x021380B0 LDR W8, [X8 + 0x28]
	0x021380B4 TBNZ X8, 0x1F, 0x21380BC
	0x021380B8 LDR X20, [X20]
	0x021380BC LDUR X8, [X29 - 0x48]
	0x021380C0 STP X28, X20, [X29 - 0x30]
	0x021380C4 STP X21, X8, [X29 - 0x20]
	0x021380C8 LDR X8, [X1 + 0x10]
	0x021380CC SUB X3, X29, 0x30
	0x021380D0 SUB X4, X29, 0x10
	0x021380D4 MOV X2, X24
	0x021380D8 BLR X8
	0x021380DC LDUR X20, [X29 - 0x10]
	0x021380E0 CBZ X20, 0x2138248
	0x021380E4 ADRP X10, 0x1FE3000
	0x021380E8 LDR X8, [X20]
	0x021380EC LDR X10, [X10 + 0x718]
	0x021380F0 LDRH W9, [X8 + 0x12E]
	0x021380F4 LDR X1, [X10]
	0x021380F8 CBZ X9, 0x213811C
	0x021380FC LDR X10, [X8 + 0xB0]
	0x02138100 ADD X10, X10, 0x8
	0x02138104 LDUR X11, [X10 - 0x8]
	0x02138108 CMP X11, X1
	0x0213810C B.EQ 0x213812C
	0x02138110 SUBS X9, X9, 0x1
	0x02138114 ADD X10, X10, 0x10
	0x02138118 B.NE 0x2138104
	0x0213811C MOVZ W2, 0x3
	0x02138120 MOV X0, X20
	0x02138124 BL 0x1C5C788
	0x02138128 B 0x213813C
	0x0213812C LDR W9, [X10]
	0x02138130 ADD W9, W9, 0x3
	0x02138134 ADD X8, X8, W9, 0x4, SXTW
	0x02138138 ADD X0, X8, 0x138
	0x0213813C LDP X8, X1, [X0]
	0x02138140 MOV X0, X20
	0x02138144 BLR X8
	0x02138148 TBZ X0, 0x0, 0x21381B4
	0x0213814C LDR X0, [X19 + 0x20]
	0x02138150 LDP X22, X21, [X23 + 0x10]
	0x02138154 LDR X24, [X23 + 0x20]
	0x02138158 ADD X8, X0, 0x135
	0x0213815C LDRH W9, [X8]
	0x02138160 TBNZ X9, 0x0, 0x213817C
	0x02138164 BL 0x1C5C684
	0x02138168 MOV X8, X0
	0x0213816C LDR X0, [X19 + 0x20]
	0x02138170 ADD X9, X0, 0x135
	0x02138174 LDRH W9, [X9]
	0x02138178 B 0x2138180
	0x0213817C MOV X8, X0
	0x02138180 LDR X8, [X8 + 0xC0]
	0x02138184 LDR X8, [X8 + 0x70]
	0x02138188 LDR X25, [X8]
	0x0213818C TBNZ X9, 0x0, 0x2138194
	0x02138190 BL 0x1C5C684
	0x02138194 LDR X8, [X0 + 0xC0]
	0x02138198 LDR X5, [X8 + 0x70]
	0x0213819C MOV X0, X20
	0x021381A0 MOV X1, X22
	0x021381A4 MOV X2, X21
	0x021381A8 MOV X3, X24
	0x021381AC MOV W4, W31
	0x021381B0 BLR X25
	0x021381B4 LDUR X8, [X29 - 0x60]
	0x021381B8 LDR X0, [X23 + 0x20]
	0x021381BC LDR X8, [X8 + 0x28]
	0x021381C0 LDUR X9, [X29 - 0x8]
	0x021381C4 CMP X8, X9
	0x021381C8 B.NE 0x213824C
	0x021381CC ADD X31, X29, 0x0
	0x021381D0 LDP X20, X19, [X31 + 0x50]
	0x021381D4 LDP X22, X21, [X31 + 0x40]
	0x021381D8 LDP X24, X23, [X31 + 0x30]
	0x021381DC LDP X26, X25, [X31 + 0x20]
	0x021381E0 LDP X28, X27, [X31 + 0x10]
	0x021381E4 LDP X29, X30, [X31], #0x60
	0x021381E8 RET
	0x021381EC ADRP X0, 0x1FC0000
	0x021381F0 LDR X0, [X0 + 0x528]
	0x021381F4 BL 0x1C16D08
	0x021381F8 BL 0x1C16F10
	0x021381FC MOV X20, X0
	0x02138200 ADRP X0, 0x1FE3000
	0x02138204 LDR X0, [X0 + 0x738]
	0x02138208 B 0x2138228
	0x0213820C ADRP X0, 0x1FC0000
	0x02138210 LDR X0, [X0 + 0x528]
	0x02138214 BL 0x1C16D08
	0x02138218 BL 0x1C16F10
	0x0213821C MOV X20, X0
	0x02138220 ADRP X0, 0x1FE3000
	0x02138224 LDR X0, [X0 + 0x748]
	0x02138228 BL 0x1C16D08
	0x0213822C MOV X1, X0
	0x02138230 MOV X0, X20
	0x02138234 MOV X2, X31
	0x02138238 BL 0x330E100
	0x0213823C MOV X0, X20
	0x02138240 MOV X1, X19
	0x02138244 BL 0x1C16DEC
	0x02138248 BL 0x1C16F20
	0x0213824C BL 0x3EB1B20
	0x02138250 B 0x2138260
	0x02138254 B 0x2138260
	0x02138258 B 0x2138260
	0x0213825C B 0x2138260
	0x02138260 MOV X20, X0
	0x02138264 CMP W1, 0x1
	0x02138268 B.NE 0x2138478
	0x0213826C MOV X0, X20
	0x02138270 BL 0x3EB1AD0
	0x02138274 MOV X20, X0
	0x02138278 ADRP X0, 0x1FC1000
	0x0213827C LDR X0, [X0 + 0xCC0]
	0x02138280 BL 0x1C16D08
	0x02138284 LDR X8, [X20]
	0x02138288 LDR X1, [X8]
	0x0213828C BL 0x1C17270
	0x02138290 TBZ X0, 0x0, 0x21383A8
	0x02138294 LDR X20, [X20]
	0x02138298 BL 0x3EB1AE0
	0x0213829C ADRP X0, 0x1FE3000
	0x021382A0 LDR X0, [X0 + 0x728]
	0x021382A4 BL 0x1C16D08
	0x021382A8 LDR W8, [X0 + 0xE0]
	0x021382AC CBNZ W8, 0x21382B4
	0x021382B0 BL 0x1C16DFC
	0x021382B4 MOV X0, X31
	0x021382B8 BL 0x33EE5CC
	0x021382BC TBZ X0, 0x0, 0x21382F0
	0x021382C0 ADRP X0, 0x1FE3000
	0x021382C4 LDR X21, [X23 + 0x20]
	0x021382C8 LDR X0, [X0 + 0x728]
	0x021382CC BL 0x1C16D08
	0x021382D0 LDR W8, [X0 + 0xE0]
	0x021382D4 CBNZ W8, 0x21382DC
	0x021382D8 BL 0x1C16DFC
	0x021382DC MOVZ W2, 0x3
	0x021382E0 MOV W0, W31
	0x021382E4 MOV X1, X21
	0x021382E8 MOV X3, X31
	0x021382EC BL 0x33EE5D8
	0x021382F0 ADRP X22, 0x1FE3000
	0x021382F4 LDR X21, [X23 + 0x20]
	0x021382F8 LDR X22, [X22 + 0x728]
	0x021382FC MOV X0, X22
	0x02138300 BL 0x1C16D08
	0x02138304 LDR W8, [X0 + 0xE0]
	0x02138308 CBNZ W8, 0x2138310
	0x0213830C BL 0x1C16DFC
	0x02138310 ADRP X24, 0x22A1000
	0x02138314 LDRB W8, [X24 + 0x829]
	0x02138318 CBNZ W8, 0x213833C
	0x0213831C ADRP X0, 0x1FE3000
	0x02138320 LDR X0, [X0 + 0x728]
	0x02138324 BL 0x1C16CF4
	0x02138328 ADRP X0, 0x1FBC000
	0x0213832C LDR X0, [X0 + 0x7B8]
	0x02138330 BL 0x1C16CF4
	0x02138334 MOVZ W8, 0x1
	0x02138338 STRB W8, [X24 + 0x829]
	0x0213833C LDR X0, [X26]
	0x02138340 LDR W8, [X0 + 0xE0]
	0x02138344 CBNZ W8, 0x2138350
	0x02138348 BL 0x1C16DFC
	0x0213834C LDR X0, [X26]
	0x02138350 LDR X8, [X0 + 0xB8]
	0x02138354 LDRB W8, [X8 + 0x10]
	0x02138358 CBZ W8, 0x2138378
	0x0213835C LDR X0, [X22]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X8, [X7+56]
	012 Move X19, X7
	013 Move W25, W6
	014 Move X21, X5
	015 Move W22, W4
	016 Move X23, X3
	017 Move X26, X2
	018 Move X27, X1
	019 Move X24, X0
	020 Compare X8, 0
	021 JumpIfNotEqual {40}
	022 Move X0, 0x1FE5000
	023 Move X0, [X0+1824]
	024 Call 0x1C17CF4
	025 Move X0, 0x1FE5000
	026 Move X0, [X0+1832]
	027 Call 0x1C17CF4
	028 Move X0, 0x1FE5000
	029 Move X0, [X0+1816]
	030 Call 0x1C17CF4
	031 Move X0, 0x1FE5000
	032 Move X0, [X0+1840]
	033 Call 0x1C17CF4
	034 Move X8, [X19+56]
	035 Compare X8, 0
	036 JumpIfNotEqual {40}
	037 Move X0, X19
	038 Call 0x1C5D6E0
	039 Move X8, [X19+56]
	040 Move X0, [X8]
	041 Move W8, [X0+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {47}
	046 Call 0x1C5D684
	047 Call 0x1C17F10
	048 Move X8, [X19+56]
	049 Move X20, X0
	050 Move X1, [X8+8]
	051 Call 0x23789F8, X0
	052 Compare X20, 0
	053 JumpIfEqual {255}
	054 Move [X20+16], X27
	055 Move [X20+24], X26
	056 Compare X24, 0
	057 JumpIfEqual {256}
	058 Compare X27, 0
	059 JumpIfNotEqual {62}
	060 Compare X26, 0
	061 JumpIfEqual {263}
	062 Move W1, 1
	063 Move W0, W25
	064 Move X2, X31
	065 Call TaskFactory.CheckFromAsyncOptions, X0, X1
	066 Move X0, [X19+32]
	067 Move W8, [X0+309]
	068 Move TEMP, X8
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {73}
	072 Call 0x1C5D684
	073 Move X8, [X0+192]
	074 Move X0, [X8+40]
	075 Move W8, [X0+309]
	076 Move TEMP, X8
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {81}
	080 Call 0x1C5D684
	081 Call 0x1C17F10
	082 Move X8, [X19+32]
	083 Move X26, X0
	084 Move W9, [X8+309]
	085 Move TEMP, X9
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfEqual {92}
	089 Move X0, X8
	090 Call 0x1C5D684
	091 Move X8, X0
	092 Move X8, [X8+192]
	093 Move X0, X26
	094 Move X1, X21
	095 Move W2, W25
	096 Move X3, [X8+96]
	097 Call Task`1<VoidTaskResult>..ctor, X0, X1, X2
	098 Move [X20+32], X26
	099 Move X27, 0x1FE5000
	100 Move X27, [X27+1832]
	101 Move X0, [X27]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move X0, X31
	107 Call DebuggerSupport.get_LoggingOn
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {138}
	112 Move X9, 0x1FE5000
	113 Move X8, [X24]
	114 Move X25, [X20+32]
	115 Move X9, [X9+1840]
	116 Move X0, X24
	117 Move X26, [X9]
	118 Move X9, [X8+360]
	119 Move X1, [X8+368]
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move X1, X0
	122 Move X0, X26
	123 Move X2, X31
	124 Call String.Concat, X0, X1
	125 Move X8, [X27]
	126 Move X26, X0
	127 Move W9, [X8+224]
	128 Compare W9, 0
	129 JumpIfNotEqual {132}
	130 Move X0, X8
	131 Call 0x1C17DFC
	132 Move W0, W31
	133 Move X1, X25
	134 Move X2, X26
	135 Move X3, X31
	136 Move X4, X31
	137 Call DebuggerSupport.TraceOperationCreation, X0, X1, X2, X3
	138 Move X0, [X27]
	139 Move X25, [X20+32]
	140 Move W8, [X0+224]
	141 Compare W8, 0
	142 JumpIfNotEqual {144}
	143 Call 0x1C17DFC
	144 Move X26, 0x22A2000
	145 Move W8, [X26+2088]
	146 Compare W8, 0
	147 JumpIfNotEqual {156}
	148 Move X0, 0x1FE4000
	149 Move X0, [X0+1832]
	150 Call 0x1C17CF4
	151 Move X0, 0x1FBD000
	152 Move X0, [X0+1976]
	153 Call 0x1C17CF4
	154 Move W8, 1
	155 Move [X26+2088], W8
	156 Move X26, 0x1FBD000
	157 Move X26, [X26+1976]
	158 Move X0, [X26]
	159 Move W8, [X0+224]
	160 Compare W8, 0
	161 JumpIfNotEqual {164}
	162 Call 0x1C17DFC
	163 Move X0, [X26]
	164 Move X8, [X0+184]
	165 Move W8, [X8+16]
	166 Compare W8, 0
	167 JumpIfEqual {176}
	168 Move X0, [X27]
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {173}
	172 Call 0x1C17DFC
	173 Move X0, X25
	174 Move X1, X31
	175 Call DebuggerSupport.AddToActiveTasksNonInlined, X0
	176 Move X8, 0x1FE4000
	177 Move X8, [X8+1824]
	178 Move X0, [X8]
	179 Call 0x1C17F10
	180 Move X8, [X19+56]
	181 Move X25, X0
	182 Move X2, [X8+40]
	183 Move X1, X20
	184 Move X3, X31
	185 Call AsyncCallback..ctor, X0, X1, X2
	186 Move X0, [X24+64]
	187 Move X8, [X24+24]
	188 Move X5, [X24+40]
	189 Move X1, X23
	190 Move W2, W22
	191 Move X3, X25
	192 Move X4, X21
	193 NotImplemented "Instruction BLR not yet implemented."
	194 Move X21, X0
	195 Compare X0, 0
	196 JumpIfEqual {278}
	197 Move X10, 0x1FE4000
	198 Move X8, [X21]
	199 Move X10, [X10+1816]
	200 NotImplemented "Instruction LDRH not yet implemented."
	201 Move X1, [X10]
	202 Compare X9, 0
	203 JumpIfEqual {210}
	204 Move X10, [X8+176]
	205 Add X10, X10, 8
	206 NotImplemented "Instruction LDUR not yet implemented."
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Subtract X9, X9, 1
	209 Add X10, X10, 16
	210 Move W2, 3
	211 Move X0, X21
	212 Call 0x1C5D788
	213 Move W9, [X10]
	214 Add W9, W9, 3
	215 Add X8, X8, W9
	216 Add X0, X8, 312
	217 Move X8, [X0]
	218 Move X1, [X0+8]
	219 Move X0, X21
	220 NotImplemented "Instruction BLR not yet implemented."
	221 Move TEMP, X0
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfNotEqual {243}
	225 Move X0, [X19+32]
	226 Move X23, [X20+16]
	227 Move X22, [X20+24]
	228 Move X24, [X20+32]
	229 Move W8, [X0+309]
	230 Move TEMP, X8
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfEqual {235}
	234 Call 0x1C5D684
	235 Move X8, [X0+192]
	236 Move X5, [X8+112]
	237 Move X0, X21
	238 Move X1, X23
	239 Move X2, X22
	240 Move X3, X24
	241 Move W4, W31
	242 Call TaskFactory`1<VoidTaskResult>.FromAsyncCoreLogic, X0, X1, X2, X3, X4
	243 Move X0, [X20+32]
	244 Move X20, [X31+64]
	245 Move X19, [X31+72]
	246 Move X22, [X31+48]
	247 Move X21, [X31+56]
	248 Move X24, [X31+32]
	249 Move X23, [X31+40]
	250 Move X26, [X31+16]
	251 Move X25, [X31+24]
	252 Move X30, [X31+80]
	253 Move X27, [X31+88]
	254 Return X0
	255 Call 0x1C17F20
	256 Move X0, 0x1FC1000
	257 Move X0, [X0+1320]
	258 Call 0x1C17D08
	259 Call 0x1C17F10
	260 Move X20, X0
	261 Move X0, 0x1FE4000
	262 Move X0, [X0+1848]
	263 Move X0, 0x1FC1000
	264 Move X0, [X0+1320]
	265 Call 0x1C17D08
	266 Call 0x1C17F10
	267 Move X20, X0
	268 Move X0, 0x1FE4000
	269 Move X0, [X0+1864]
	270 Call 0x1C17D08
	271 Move X1, X0
	272 Move X0, X20
	273 Move X2, X31
	274 Call ArgumentNullException..ctor, X0, X1
	275 Move X0, X20
	276 Move X1, X19
	277 Call 0x1C17DEC
	278 Call 0x1C17F20
	279 Move X21, X0
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Move X0, X21
	282 Call 0x3EB2AD0
	283 Move X21, X0
	284 Move X0, 0x1FC2000
	285 Move X0, [X0+3264]
	286 Call 0x1C17D08
	287 Move X8, [X21]
	288 Move X1, [X8]
	289 Call 0x1C18270
	290 Move TEMP, X0
	291 And TEMP, TEMP, 1
	292 Compare TEMP, 1
	293 JumpIfNotEqual {346}
	294 Move X21, [X21]
	295 Call 0x3EB2AE0
	296 Move X0, 0x1FE4000
	297 Move X0, [X0+1832]
	298 Call 0x1C17D08
	299 Move W8, [X0+224]
	300 Compare W8, 0
	301 JumpIfNotEqual {303}
	302 Call 0x1C17DFC
	303 Move X0, X31
	304 Call DebuggerSupport.get_LoggingOn
	305 Move TEMP, X0
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfNotEqual {322}
	309 Move X0, 0x1FE4000
	310 Move X22, [X20+32]
	311 Move X0, [X0+1832]
	312 Call 0x1C17D08
	313 Move W8, [X0+224]
	314 Compare W8, 0
	315 JumpIfNotEqual {317}
	316 Call 0x1C17DFC
	317 Move W2, 3
	318 Move W0, W31
	319 Move X1, X22
	320 Move X3, X31
	321 Call DebuggerSupport.TraceOperationCompletion, X0, X1, X2
	322 Move X0, X20
	323 Call 0x19913C0
	324 Move X0, 0x1FE4000
	325 Move X22, [X20+32]
	326 Move X0, [X0+1832]
	327 Call 0x1C17D08
	328 Call 0x19913D0
	329 Move X0, X22
	330 Move X1, X31
	331 Call 0x2143AF8
	332 Move X0, X20
	333 Call 0x19913C0
	334 Move X20, [X20+32]
	335 Move X0, X20
	336 Call 0x19913C0
	337 Move X0, [X19+32]
	338 Call 0x199C99C
	339 Move X8, [X0+192]
	340 Move X0, X20
	341 Move X1, X31
	342 Move X2, [X8+48]
	343 Call 0x199D044
	344 Move X0, X21
	345 Call 0x1C17F18
	346 Move W0, 8
	347 Call 0x3EB2AF0
	348 Move X8, [X21]
	349 Move [X0], X8
	350 Move X1, 0x1D7D000
	351 Add X1, X1, 3672
	352 Move X2, X31
	353 Call 0x3EB2B00
	354 Move X21, X0
	355 Call 0x3EB2AE0
	356 Move X0, X21
	357 Call 0x1D2D690
	358 Call 0x1991590

Method: System.Threading.Tasks.Task`1<TResult> FromAsyncTrim(TInstance thisRef, TArgs args, System.Func`5<TInstance, TArgs, System.AsyncCallback, System.Object, System.IAsyncResult> beginMethod, System.Func`3<TInstance, System.IAsyncResult, TResult> endMethod)

Disassembly:
	0x021372FC LDR X20, [X20 + 0x20]
	0x02137300 MOV X0, X20
	0x02137304 BL 0x19903C0
	0x02137308 LDR X0, [X19 + 0x20]
	0x0213730C BL 0x199B99C
	0x02137310 LDR X8, [X0 + 0xC0]
	0x02137314 MOV X0, X20
	0x02137318 MOV X1, X31
	0x0213731C LDR X2, [X8 + 0x30]
	0x02137320 BL 0x199C044
	0x02137324 MOV X0, X21
	0x02137328 BL 0x1C16F18
	0x0213732C MOVZ W0, 0x8
	0x02137330 BL 0x3EB1AF0
	0x02137334 LDR X8, [X21]
	0x02137338 STR X8, [X0]
	0x0213733C ADRP X1, 0x1D7D000
	0x02137340 ADD X1, X1, 0xE58
	0x02137344 MOV X2, X31
	0x02137348 BL 0x3EB1B00
	0x0213734C MOV X21, X0
	0x02137350 BL 0x3EB1AE0
	0x02137354 MOV X0, X21
	0x02137358 BL 0x1D2C690
	0x0213735C BL 0x1990590
	0x02137360 STP X30, X25, [X31 - 0x40]!
	0x02137364 STP X24, X23, [X31 + 0x10]
	0x02137368 STP X22, X21, [X31 + 0x20]
	0x0213736C STP X20, X19, [X31 + 0x30]
	0x02137370 LDR X8, [X5 + 0x38]
	0x02137374 MOV X20, X5
	0x02137378 MOV X19, X4
	0x0213737C MOV X25, X3
	0x02137380 MOV X23, X2
	0x02137384 MOV X24, X1
	0x02137388 MOV X21, X0
	0x0213738C CBNZ X8, 0x21373B0
	0x02137390 ADRP X0, 0x1FE4000
	0x02137394 LDR X0, [X0 + 0x718]
	0x02137398 BL 0x1C16CF4
	0x0213739C LDR X8, [X20 + 0x38]
	0x021373A0 CBNZ X8, 0x21373B0
	0x021373A4 MOV X0, X20
	0x021373A8 BL 0x1C5C6E0
	0x021373AC LDR X8, [X20 + 0x38]
	0x021373B0 LDR X0, [X8 + 0x10]
	0x021373B4 LDRB W8, [X0 + 0x135]
	0x021373B8 TBNZ X8, 0x0, 0x21373C0
	0x021373BC BL 0x1C5C684
	0x021373C0 BL 0x1C16F10
	0x021373C4 LDR X8, [X20 + 0x38]
	0x021373C8 MOV X1, X21
	0x021373CC MOV X2, X19
	0x021373D0 MOV X22, X0
	0x021373D4 LDR X3, [X8 + 0x18]
	0x021373D8 BL 0x2D25F70
	0x021373DC LDR X8, [X20 + 0x38]
	0x021373E0 LDR X0, [X8 + 0x30]
	0x021373E4 LDRB W8, [X0 + 0x135]
	0x021373E8 TBNZ X8, 0x0, 0x21373F0
	0x021373EC BL 0x1C5C684
	0x021373F0 LDR W8, [X0 + 0xE0]
	0x021373F4 CBNZ W8, 0x21373FC
	0x021373F8 BL 0x1C16DFC
	0x021373FC LDR X8, [X20 + 0x38]
	0x02137400 LDR X0, [X8 + 0x30]
	0x02137404 LDRB W8, [X0 + 0x135]
	0x02137408 TBNZ X8, 0x0, 0x2137410
	0x0213740C BL 0x1C5C684
	0x02137410 CBZ X25, 0x21374E8
	0x02137414 LDR X8, [X0 + 0xB8]
	0x02137418 LDR X9, [X25 + 0x18]
	0x0213741C LDR X0, [X25 + 0x40]
	0x02137420 LDR X6, [X25 + 0x28]
	0x02137424 LDR X4, [X8]
	0x02137428 MOV X1, X21
	0x0213742C MOV X2, X24
	0x02137430 MOV X3, X23
	0x02137434 MOV X5, X22
	0x02137438 BLR X9
	0x0213743C CBZ X0, 0x21374E8
	0x02137440 ADRP X10, 0x1FE4000
	0x02137444 LDR X8, [X0]
	0x02137448 LDR X10, [X10 + 0x718]
	0x0213744C MOV X23, X0
	0x02137450 LDRH W9, [X8 + 0x12E]
	0x02137454 LDR X1, [X10]
	0x02137458 CBZ X9, 0x213747C
	0x0213745C LDR X10, [X8 + 0xB0]
	0x02137460 ADD X10, X10, 0x8
	0x02137464 LDUR X11, [X10 - 0x8]
	0x02137468 CMP X11, X1
	0x0213746C B.EQ 0x213748C
	0x02137470 SUBS X9, X9, 0x1
	0x02137474 ADD X10, X10, 0x10
	0x02137478 B.NE 0x2137464
	0x0213747C MOVZ W2, 0x3
	0x02137480 MOV X0, X23
	0x02137484 BL 0x1C5C788

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X8, [X5+56]
	010 Move X20, X5
	011 Move X19, X4
	012 Move X25, X3
	013 Move X23, X2
	014 Move X24, X1
	015 Move X21, X0
	016 Compare X8, 0
	017 JumpIfNotEqual {27}
	018 Move X0, 0x1FE5000
	019 Move X0, [X0+1816]
	020 Call 0x1C17CF4
	021 Move X8, [X20+56]
	022 Compare X8, 0
	023 JumpIfNotEqual {27}
	024 Move X0, X20
	025 Call 0x1C5D6E0
	026 Move X8, [X20+56]
	027 Move X0, [X8+16]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Call 0x1C17F10
	035 Move X8, [X20+56]
	036 Move X1, X21
	037 Move X2, X19
	038 Move X22, X0
	039 Move X3, [X8+24]
	040 Call 0x2D26AD8, X0, X1, X2
	041 Move X8, [X20+56]
	042 Move X0, [X8+48]
	043 Move W8, [X0+309]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {49}
	048 Call 0x1C5D684
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X8, [X20+56]
	054 Move X0, [X8+48]
	055 Move W8, [X0+309]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {61}
	060 Call 0x1C5D684
	061 Compare X25, 0
	062 JumpIfEqual {124}
	063 Move X8, [X0+184]
	064 Move X9, [X25+24]
	065 Move X0, [X25+64]
	066 Move X6, [X25+40]
	067 Move X4, [X8]
	068 Move X1, X21
	069 Move X2, X24
	070 Move X3, X23
	071 Move X5, X22
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Compare X0, 0
	074 JumpIfEqual {124}
	075 Move X10, 0x1FE5000
	076 Move X8, [X0]
	077 Move X10, [X10+1816]
	078 Move X23, X0
	079 NotImplemented "Instruction LDRH not yet implemented."
	080 Move X1, [X10]
	081 Compare X9, 0
	082 JumpIfEqual {89}
	083 Move X10, [X8+176]
	084 Add X10, X10, 8
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Subtract X9, X9, 1
	088 Add X10, X10, 16
	089 Move W2, 3
	090 Move X0, X23
	091 Call 0x1C5D788
	092 Move W9, [X10]
	093 Add W9, W9, 3
	094 Add X8, X8, W9
	095 Add X0, X8, 312
	096 Move X8, [X0]
	097 Move X1, [X0+8]
	098 Move X0, X23
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {114}
	104 Compare X22, 0
	105 JumpIfEqual {124}
	106 Move X8, [X20+56]
	107 Move X0, X22
	108 Move X1, X21
	109 Move X2, X19
	110 Move X5, [X8+64]
	111 Move X3, X23
	112 Move W4, W31
	113 Call 0x2D26D30, X0, X1, X2, X3, X4
	114 Move X0, X22
	115 Move X20, [X31+48]
	116 Move X19, [X31+56]
	117 Move X22, [X31+32]
	118 Move X21, [X31+40]
	119 Move X24, [X31+16]
	120 Move X23, [X31+24]
	121 Move X30, [X31+64]
	122 Move X25, [X31+72]
	123 Return X0
	124 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<TResult> CreateCanceledTask(System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.CancellationToken ct)

Disassembly:
	0x0267E440 MOV X1, X31
	0x0267E444 BL 0x33F95F0
	0x0267E448 STP X22, X19, [X23 + 0x10]
	0x0267E44C STP W21, W20, [X23 + 0x20]
	0x0267E450 LDP X20, X19, [X31 + 0x20]
	0x0267E454 LDP X22, X21, [X31 + 0x10]
	0x0267E458 LDP X30, X23, [X31], #0x30
	0x0267E45C RET
	0x0267E460 SUB X31, X31, 0xC0
	0x0267E464 STP X30, X23, [X31 + 0x90]
	0x0267E468 STP X22, X21, [X31 + 0xA0]
	0x0267E46C STP X20, X19, [X31 + 0xB0]
	0x0267E470 ADRP X23, 0x1D5C000
	0x0267E474 LDRB W8, [X23 + 0x231]
	0x0267E478 MOV X22, X5
	0x0267E47C MOV X21, X2
	0x0267E480 MOV X20, X1
	0x0267E484 MOV X19, X0
	0x0267E488 AND W9, W4, 0x1
	0x0267E48C STR X3, [X31 + 0x88]
	0x0267E490 STRB W9, [X31 + 0x84]
	0x0267E494 STR X5, [X31 + 0x78]
	0x0267E498 TBNZ X8, 0x0, 0x267E4B0
	0x0267E49C ADRP X0, 0x1A9D000
	0x0267E4A0 LDR X0, [X0 + 0x728]
	0x0267E4A4 BL 0x1C16CF4
	0x0267E4A8 MOVZ W8, 0x1
	0x0267E4AC STRB W8, [X23 + 0x231]
	0x0267E4B0 ADD X8, X31, 0x68
	0x0267E4B4 ADD X9, X31, 0x88
	0x0267E4B8 ADD X10, X31, 0x70
	0x0267E4BC STP X31, X8, [X31 + 0x18]
	0x0267E4C0 ADD X8, X31, 0x84
	0x0267E4C4 STP X9, X10, [X31 + 0x28]
	0x0267E4C8 ADD X9, X31, 0x50
	0x0267E4CC STP X8, X9, [X31 + 0x38]
	0x0267E4D0 ADD X8, X31, 0x78
	0x0267E4D4 STP X31, X31, [X31 + 0x68]
	0x0267E4D8 STP X31, X31, [X31 + 0x58]
	0x0267E4DC STP X8, X31, [X31 + 0x48]
	0x0267E4E0 CBZ X20, 0x267E520
	0x0267E4E4 LDR X0, [X22 + 0x20]
	0x0267E4E8 LDRB W8, [X0 + 0x135]
	0x0267E4EC TBNZ X8, 0x0, 0x267E4F4
	0x0267E4F0 BL 0x1C5C684
	0x0267E4F4 LDR X0, [X20 + 0x40]
	0x0267E4F8 LDR X9, [X20 + 0x18]
	0x0267E4FC LDR X2, [X20 + 0x28]
	0x0267E500 ADD X8, X31, 0x0
	0x0267E504 MOV X1, X19
	0x0267E508 BLR X9
	0x0267E50C LDR V0, [X31]
	0x0267E510 LDR X8, [X31 + 0x10]
	0x0267E514 STR V0, [X31 + 0x5]
	0x0267E518 STR X8, [X31 + 0x60]
	0x0267E51C B 0x267E538
	0x0267E520 CBZ X21, 0x267E554
	0x0267E524 LDR X0, [X21 + 0x40]
	0x0267E528 LDR X8, [X21 + 0x18]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x1D5D000
	009 Move X22, 0x1A77000
	010 Move W8, [X23+555]
	011 Move X22, [X22+1976]
	012 Move X20, X2
	013 Move X19, X1
	014 Move W21, W0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x1A77000
	020 Move X0, [X0+1976]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+555], W8
	024 Move X0, [X22]
	025 Move [X31+8], X31
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Add X1, X31, 12
	031 Add X2, X31, 8
	032 Move W0, W21
	033 Move X3, X31
	034 Call Task.CreationOptionsFromContinuationOptions, X0, X1, X2
	035 Move X0, [X20+32]
	036 Move W21, [X31+12]
	037 Move W8, [X0+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {43}
	042 Call 0x1C5D684
	043 Move X8, [X0+192]
	044 Move X0, [X8+40]
	045 Move W8, [X0+309]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {51}
	050 Call 0x1C5D684
	051 Call 0x1C17F10
	052 Move X8, [X20+32]
	053 Move X20, X0
	054 Move W9, [X8+309]
	055 Move TEMP, X9
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {62}
	059 Move X0, X8
	060 Call 0x1C5D684
	061 Move X8, X0
	062 Move X8, [X8+192]
	063 Move W1, 1
	064 Move X0, X20
	065 Move X2, X31
	066 Move X5, [X8+128]
	067 Move W3, W21
	068 Move X4, X19
	069 Call 0x2697348, X0, X1, X2, X3, X4
	070 Move X0, X20
	071 Move X20, [X31+48]
	072 Move X19, [X31+56]
	073 Move X22, [X31+32]
	074 Move X21, [X31+40]
	075 Move X30, [X31+16]
	076 Move X23, [X31+24]
	077 Add X31, X31, 64
	078 Return X0

Method: System.Threading.Tasks.Task`1<TResult> ContinueWhenAllImpl(System.Threading.Tasks.Task[] tasks, System.Func`2<System.Threading.Tasks.Task[], TResult> continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskScheduler scheduler)

Disassembly:
	0x0267E52C LDR X2, [X21 + 0x28]
	0x0267E530 MOV X1, X19
	0x0267E534 BLR X8
	0x0267E538 ADD X0, X31, 0x18
	0x0267E53C BL 0x19B7968
	0x0267E540 LDP X20, X19, [X31 + 0xB0]
	0x0267E544 LDP X22, X21, [X31 + 0xA0]
	0x0267E548 LDP X30, X23, [X31 + 0x90]
	0x0267E54C ADD X31, X31, 0xC0
	0x0267E550 RET
	0x0267E554 BL 0x1C16F20
	0x0267E558 MOV X19, X0
	0x0267E55C B 0x267E564
	0x0267E560 MOV X19, X0
	0x0267E564 CMP W1, 0x1
	0x0267E568 B.NE 0x267E61C
	0x0267E56C MOV X0, X19
	0x0267E570 BL 0x3EB1AD0
	0x0267E574 MOV X19, X0
	0x0267E578 ADRP X0, 0x1A7D000
	0x0267E57C LDR X0, [X0 + 0x8A8]
	0x0267E580 BL 0x1C16D08
	0x0267E584 LDR X8, [X19]
	0x0267E588 LDR X1, [X8]
	0x0267E58C BL 0x1C17270
	0x0267E590 TBZ X0, 0x0, 0x267E59C
	0x0267E594 MOVZ W20, 0x5
	0x0267E598 B 0x267E5BC
	0x0267E59C ADRP X0, 0x1A75000
	0x0267E5A0 LDR X0, [X0 + 0x7D0]
	0x0267E5A4 BL 0x1C16D08
	0x0267E5A8 LDR X8, [X19]
	0x0267E5AC LDR X1, [X8]
	0x0267E5B0 BL 0x1C17270
	0x0267E5B4 TBZ X0, 0x0, 0x267E5E4
	0x0267E5B8 MOVZ W20, 0x6
	0x0267E5BC LDR X19, [X19]
	0x0267E5C0 BL 0x3EB1AE0
	0x0267E5C4 CMP W20, 0x5
	0x0267E5C8 B.EQ 0x267E5DC
	0x0267E5CC CMP W20, 0x6
	0x0267E5D0 B.NE 0x267E538
	0x0267E5D4 STR X19, [X31 + 0x70]
	0x0267E5D8 B 0x267E538
	0x0267E5DC STR X19, [X31 + 0x68]
	0x0267E5E0 B 0x267E538
	0x0267E5E4 MOVZ W0, 0x8
	0x0267E5E8 BL 0x3EB1AF0
	0x0267E5EC LDR X8, [X19]
	0x0267E5F0 STR X8, [X0]
	0x0267E5F4 ADRP X1, 0x1836000
	0x0267E5F8 ADD X1, X1, 0xE58
	0x0267E5FC MOV X2, X31
	0x0267E600 BL 0x3EB1B00
	0x0267E604 MOV X19, X0
	0x0267E608 B 0x267E61C
	0x0267E60C MOV X20, X1
	0x0267E610 MOV X19, X0
	0x0267E614 BL 0x3EB1AE0
	0x0267E618 MOV W1, W20
	0x0267E61C MOVZ W8, 0x1
	0x0267E620 CMP W1, W8
	0x0267E624 B.NE 0x267E644
	0x0267E628 MOV X0, X19
	0x0267E62C BL 0x3EB1AD0
	0x0267E630 LDR X8, [X0]
	0x0267E634 STR X8, [X31 + 0x18]
	0x0267E638 BL 0x3EB1AE0
	0x0267E63C B 0x267E538
	0x0267E640 MOV X19, X0
	0x0267E644 ADD X0, X31, 0x18
	0x0267E648 BL 0x19B7968
	0x0267E64C MOV X0, X19
	0x0267E650 BL 0x1D2C690
	0x0267E654 BL 0x1990590
	0x0267E658 LDR X8, [X4 + 0x20]
	0x0267E65C LDR W4, [X0 + 0x20]
	0x0267E660 MOV X0, X1
	0x0267E664 MOV X1, X2
	0x0267E668 LDR X8, [X8 + 0xC0]
	0x0267E66C MOV X2, X31
	0x0267E670 LDR X5, [X8 + 0x40]
	0x0267E674 B 0x267E678
	0x0267E678 SUB X31, X31, 0x60
	0x0267E67C STP X30, X25, [X31 + 0x20]
	0x0267E680 STP X24, X23, [X31 + 0x30]
	0x0267E684 STP X22, X21, [X31 + 0x40]
	0x0267E688 STP X20, X19, [X31 + 0x50]
	0x0267E68C ADRP X20, 0x1D5C000
	0x0267E690 LDRB W8, [X20 + 0x232]
	0x0267E694 MOV X19, X5
	0x0267E698 MOV W23, W4
	0x0267E69C MOV X21, X3
	0x0267E6A0 MOV X24, X2
	0x0267E6A4 MOV X25, X1
	0x0267E6A8 MOV X22, X0
	0x0267E6AC TBNZ X8, 0x0, 0x267E6E8
	0x0267E6B0 ADRP X0, 0x1A9D000
	0x0267E6B4 LDR X0, [X0 + 0x720]
	0x0267E6B8 BL 0x1C16CF4
	0x0267E6BC ADRP X0, 0x1A9D000
	0x0267E6C0 LDR X0, [X0 + 0x728]
	0x0267E6C4 BL 0x1C16CF4
	0x0267E6C8 ADRP X0, 0x1A9D000
	0x0267E6CC LDR X0, [X0 + 0x718]
	0x0267E6D0 BL 0x1C16CF4
	0x0267E6D4 ADRP X0, 0x1A9D000
	0x0267E6D8 LDR X0, [X0 + 0x730]
	0x0267E6DC BL 0x1C16CF4
	0x0267E6E0 MOVZ W8, 0x1
	0x0267E6E4 STRB W8, [X20 + 0x232]
	0x0267E6E8 LDR X0, [X19 + 0x20]
	0x0267E6EC LDRB W8, [X0 + 0x135]
	0x0267E6F0 TBNZ X8, 0x0, 0x267E6F8
	0x0267E6F4 BL 0x1C5C684
	0x0267E6F8 LDR X8, [X0 + 0xC0]
	0x0267E6FC LDR X0, [X8 + 0x50]
	0x0267E700 LDRB W8, [X0 + 0x135]
	0x0267E704 TBNZ X8, 0x0, 0x267E70C
	0x0267E708 BL 0x1C5C684
	0x0267E70C BL 0x1C16F10
	0x0267E710 LDR X8, [X19 + 0x20]
	0x0267E714 MOV X20, X0
	0x0267E718 LDRB W9, [X8 + 0x135]
	0x0267E71C TBNZ X9, 0x0, 0x267E72C
	0x0267E720 MOV X0, X8
	0x0267E724 BL 0x1C5C684
	0x0267E728 MOV X8, X0
	0x0267E72C LDR X8, [X8 + 0xC0]
	0x0267E730 MOV X0, X20
	0x0267E734 LDR X1, [X8 + 0x58]
	0x0267E738 BL 0x23754A0
	0x0267E73C CBZ X20, 0x267E9E0
	0x0267E740 STP X25, X24, [X20 + 0x10]
	0x0267E744 CBZ X22, 0x267E9E4
	0x0267E748 CBNZ X25, 0x267E750
	0x0267E74C CBZ X24, 0x267EA04
	0x0267E750 MOVZ W1, 0x1
	0x0267E754 MOV W0, W23
	0x0267E758 MOV X2, X31
	0x0267E75C BL 0x33F9780
	0x0267E760 LDR X0, [X19 + 0x20]
	0x0267E764 LDRB W8, [X0 + 0x135]
	0x0267E768 TBNZ X8, 0x0, 0x267E770
	0x0267E76C BL 0x1C5C684
	0x0267E770 LDR X8, [X0 + 0xC0]
	0x0267E774 LDR X0, [X8 + 0x28]
	0x0267E778 LDRB W8, [X0 + 0x135]
	0x0267E77C TBNZ X8, 0x0, 0x267E784
	0x0267E780 BL 0x1C5C684
	0x0267E784 ADRP X25, 0x1A9D000
	0x0267E788 LDR X25, [X25 + 0x728]
	0x0267E78C BL 0x1C16F10
	0x0267E790 LDR X8, [X19 + 0x20]
	0x0267E794 MOV X24, X0
	0x0267E798 LDRB W9, [X8 + 0x135]
	0x0267E79C TBNZ X9, 0x0, 0x267E7AC
	0x0267E7A0 MOV X0, X8
	0x0267E7A4 BL 0x1C5C684
	0x0267E7A8 MOV X8, X0
	0x0267E7AC LDR X8, [X8 + 0xC0]
	0x0267E7B0 MOV X0, X24
	0x0267E7B4 MOV X1, X21
	0x0267E7B8 MOV W2, W23
	0x0267E7BC LDR X3, [X8 + 0x60]
	0x0267E7C0 BL 0x2697930
	0x0267E7C4 STR X24, [X20 + 0x20]
	0x0267E7C8 LDR X0, [X25]
	0x0267E7CC LDR W8, [X0 + 0xE0]
	0x0267E7D0 CBNZ W8, 0x267E7D8
	0x0267E7D4 BL 0x1C16DFC
	0x0267E7D8 MOV X0, X31
	0x0267E7DC BL 0x33EE5CC
	0x0267E7E0 TBZ X0, 0x0, 0x267E844
	0x0267E7E4 ADRP X9, 0x1A9D000
	0x0267E7E8 LDR X8, [X22]
	0x0267E7EC LDR X23, [X20 + 0x20]
	0x0267E7F0 LDR X9, [X9 + 0x730]
	0x0267E7F4 MOV X0, X22
	0x0267E7F8 LDR X24, [X9]
	0x0267E7FC LDP X9, X1, [X8 + 0x168]
	0x0267E800 BLR X9
	0x0267E804 MOV X1, X0
	0x0267E808 MOV X0, X24
	0x0267E80C MOV X2, X31
	0x0267E810 BL 0x321B938
	0x0267E814 LDR X8, [X25]
	0x0267E818 MOV X24, X0
	0x0267E81C LDR W9, [X8 + 0xE0]
	0x0267E820 CBNZ W9, 0x267E82C
	0x0267E824 MOV X0, X8
	0x0267E828 BL 0x1C16DFC
	0x0267E82C MOV W0, W31
	0x0267E830 MOV X1, X23
	0x0267E834 MOV X2, X24
	0x0267E838 MOV X3, X31
	0x0267E83C MOV X4, X31
	0x0267E840 BL 0x33EE5D4
	0x0267E844 LDR X0, [X25]
	0x0267E848 LDR X23, [X20 + 0x20]
	0x0267E84C LDR W8, [X0 + 0xE0]
	0x0267E850 CBNZ W8, 0x267E858
	0x0267E854 BL 0x1C16DFC
	0x0267E858 ADRP X24, 0x1D5B000
	0x0267E85C LDRB W8, [X24 + 0x828]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0x1D5D000
	011 Move W8, [X24+556]
	012 Move X19, X5
	013 Move X21, X4
	014 Move W20, W2
	015 Move X22, X1
	016 Move X23, X0
	017 Move [X31+8], X3
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x1A7E000
	023 Move X0, [X0+2008]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X24+556], W8
	027 Move W0, W20
	028 Move X1, X31
	029 Call TaskFactory.CheckMultiTaskContinuationOptions, X0
	030 Compare X23, 0
	031 JumpIfEqual {258}
	032 Compare X21, 0
	033 JumpIfEqual {265}
	034 Move X24, 0x1A7E000
	035 Move X24, [X24+2008]
	036 Move X0, X23
	037 Move X1, X31
	038 Call TaskFactory.CheckMultiContinuationTasksAndCopy, X0
	039 Move X8, [X24]
	040 Move X23, X0
	041 Move W9, [X8+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Add X0, X31, 8
	047 Move X1, X31
	048 Call CancellationToken.get_IsCancellationRequested, X0
	049 Move TEMP, X20
	050 And TEMP, TEMP, 32
	051 Compare TEMP, 32
	052 JumpIfEqual {70}
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {70}
	057 Move X0, [X19+32]
	058 Move X19, [X31+8]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Move X8, [X0+192]
	066 Move W0, W20
	067 Move X1, X19
	068 Move X2, [X8+136]
	069 Call 0x267E440, X0, X1
	070 Move X0, X23
	071 Move X1, X31
	072 Call TaskFactory.CommonCWAllLogic, X0
	073 Move X8, [X19+32]
	074 Move X23, X0
	075 Move W9, [X8+309]
	076 Move TEMP, X9
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {83}
	080 Move X0, X8
	081 Call 0x1C5D684
	082 Move X8, X0
	083 Move X8, [X8+192]
	084 Move X0, [X8+160]
	085 Move W8, [X0+309]
	086 Move TEMP, X8
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {91}
	090 Call 0x1C5D684
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X0, [X19+32]
	096 Move W8, [X0+309]
	097 Move TEMP, X8
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {102}
	101 Call 0x1C5D684
	102 Move X8, [X0+192]
	103 Move X0, [X8+160]
	104 Move W8, [X0+309]
	105 Move TEMP, X8
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfEqual {110}
	109 Call 0x1C5D684
	110 Move X8, [X0+184]
	111 Move X24, [X8+8]
	112 Compare X24, 0
	113 JumpIfNotEqual {229}
	114 Move X0, [X19+32]
	115 Move W8, [X0+309]
	116 Move TEMP, X8
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfEqual {121}
	120 Call 0x1C5D684
	121 Move X8, [X0+192]
	122 Move X0, [X8+160]
	123 Move W8, [X0+309]
	124 Move TEMP, X8
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {129}
	128 Call 0x1C5D684
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move X0, [X19+32]
	134 Move W8, [X0+309]
	135 Move TEMP, X8
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfEqual {140}
	139 Call 0x1C5D684
	140 Move X8, [X0+192]
	141 Move X0, [X8+160]
	142 Move W8, [X0+309]
	143 Move TEMP, X8
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfEqual {148}
	147 Call 0x1C5D684
	148 Move X8, [X19+32]
	149 Move X9, [X0+184]
	150 Move W10, [X8+309]
	151 Move X25, [X9]
	152 Move TEMP, X10
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfEqual {159}
	156 Move X0, X8
	157 Call 0x1C5D684
	158 Move X8, X0
	159 Move X8, [X8+192]
	160 Move X0, [X8+152]
	161 Move W8, [X0+309]
	162 Move TEMP, X8
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfEqual {167}
	166 Call 0x1C5D684
	167 Call 0x1C17F10
	168 Move X8, [X19+32]
	169 Move X24, X0
	170 Add X9, X8, 309
	171 NotImplemented "Instruction LDRH not yet implemented."
	172 Move TEMP, X9
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfEqual {181}
	176 Move X0, X8
	177 Call 0x1C5D684
	178 Move X8, [X19+32]
	179 Add X9, X8, 309
	180 NotImplemented "Instruction LDRH not yet implemented."
	181 Move X0, X8
	182 Move X10, [X0+192]
	183 Move X26, [X10+168]
	184 Move TEMP, X9
	185 And TEMP, TEMP, 1
	186 Compare TEMP, 1
	187 JumpIfEqual {191}
	188 Move X0, X8
	189 Call 0x1C5D684
	190 Move X8, X0
	191 Move X8, [X8+192]
	192 Move X0, X24
	193 Move X1, X25
	194 Move X2, X26
	195 Move X3, [X8+176]
	196 Call Func`3<Object, Object, Nullable`1<Int32>>..ctor, X0, X1, X2
	197 Move X0, [X19+32]
	198 Move W8, [X0+309]
	199 Move TEMP, X8
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfEqual {204}
	203 Call 0x1C5D684
	204 Move X8, [X0+192]
	205 Move X0, [X8+160]
	206 Move W8, [X0+309]
	207 Move TEMP, X8
	208 And TEMP, TEMP, 1
	209 Compare TEMP, 1
	210 JumpIfEqual {212}
	211 Call 0x1C5D684
	212 Move X8, [X0+184]
	213 Move [X8+8], X24
	214 Move X0, [X19+32]
	215 Move W8, [X0+309]
	216 Move TEMP, X8
	217 And TEMP, TEMP, 1
	218 Compare TEMP, 1
	219 JumpIfEqual {221}
	220 Call 0x1C5D684
	221 Move X8, [X0+192]
	222 Move X0, [X8+160]
	223 Move W8, [X0+309]
	224 Move TEMP, X8
	225 And TEMP, TEMP, 1
	226 Compare TEMP, 1
	227 JumpIfEqual {229}
	228 Call 0x1C5D684
	229 Compare X23, 0
	230 JumpIfEqual {280}
	231 Move X0, [X19+32]
	232 Move X19, [X31+8]
	233 Move W8, [X0+309]
	234 Move TEMP, X8
	235 And TEMP, TEMP, 1
	236 Compare TEMP, 1
	237 JumpIfEqual {239}
	238 Call 0x1C5D684
	239 Move X8, [X0+192]
	240 Move X0, X23
	241 Move X1, X24
	242 Move X2, X22
	243 Move X6, [X8+192]
	244 Move X3, X21
	245 Move X4, X19
	246 Move W5, W20
	247 Call 0x213A5E0, X0, X1, X2, X3, X4, X5
	248 Move X20, [X31+64]
	249 Move X19, [X31+72]
	250 Move X22, [X31+48]
	251 Move X21, [X31+56]
	252 Move X24, [X31+32]
	253 Move X23, [X31+40]
	254 Move X26, [X31+16]
	255 Move X25, [X31+24]
	256 Move X30, [X31+80]
	257 Return X0
	258 Move X0, 0x1A7B000
	259 Move X0, [X0+1320]
	260 Call 0x1C17D08
	261 Call 0x1C17F10
	262 Move X20, X0
	263 Move X0, 0x1AA0000
	264 Move X0, [X0+1560]
	265 Move X0, 0x1A7B000
	266 Move X0, [X0+1320]
	267 Call 0x1C17D08
	268 Call 0x1C17F10
	269 Move X20, X0
	270 Move X0, 0x1A9E000
	271 Move X0, [X0+1880]
	272 Call 0x1C17D08
	273 Move X1, X0
	274 Move X0, X20
	275 Move X2, X31
	276 Call ArgumentNullException..ctor, X0, X1
	277 Move X0, X20
	278 Move X1, X19
	279 Call 0x1C17DEC
	280 Call 0x1C17F20

