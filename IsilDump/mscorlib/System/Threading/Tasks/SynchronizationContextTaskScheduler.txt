Type: System.Threading.Tasks.SynchronizationContextTaskScheduler

Method: System.Void .ctor()

Disassembly:
	0x033FB1D4 CMP W9, W19
	0x033FB1D8 B.LT 0x33FB36C
	0x033FB1DC TBNZ X20, 0x1F, 0x33FB278
	0x033FB1E0 LDR W9, [X23 + 0x18]
	0x033FB1E4 SUBS W25, W9, W20
	0x033FB1E8 B.LT 0x33FB278
	0x033FB1EC CBZ W19, 0x33FB25C
	0x033FB1F0 ADRP X9, 0xD27000
	0x033FB1F4 LDR X9, [X9 + 0x2F8]
	0x033FB1F8 ADRP X26, 0xD26000
	0x033FB1FC LDR X26, [X26 + 0x830]
	0x033FB200 CMP W8, 0x0
	0x033FB204 LDR X1, [X9]
	0x033FB208 ADD X9, X24, 0x20
	0x033FB20C MOV X0, X23
	0x033FB210 CSEL X24, X31, X9, EQ
	0x033FB214 BL 0x25FB4C0
	0x033FB218 LDR X2, [X26]
	0x033FB21C BL 0x2218CF4
	0x033FB220 LDR X8, [X22]
	0x033FB224 ADD X1, X24, W21, 0x1, SXTW
	0x033FB228 ADD X3, X0, W20, UXTW
	0x033FB22C MOV X0, X22
	0x033FB230 LDR X7, [X8 + 0x288]
	0x033FB234 LDR X6, [X8 + 0x290]
	0x033FB238 MOV W2, W19
	0x033FB23C MOV W4, W25
	0x033FB240 LDP X20, X19, [X31 + 0x40]
	0x033FB244 LDP X22, X21, [X31 + 0x30]
	0x033FB248 LDP X24, X23, [X31 + 0x20]
	0x033FB24C LDP X26, X25, [X31 + 0x10]
	0x033FB250 MOV X5, X31
	0x033FB254 LDR X30, [X31], #0x50
	0x033FB258 BR X7
	0x033FB25C LDP X20, X19, [X31 + 0x40]
	0x033FB260 LDP X22, X21, [X31 + 0x30]
	0x033FB264 LDP X24, X23, [X31 + 0x20]
	0x033FB268 LDP X26, X25, [X31 + 0x10]
	0x033FB26C MOV W0, W31
	0x033FB270 LDR X30, [X31], #0x50
	0x033FB274 RET
	0x033FB278 ADRP X0, 0xD00000
	0x033FB27C LDR X0, [X0 + 0x760]
	0x033FB280 BL 0x1C16D08
	0x033FB284 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xFE3000
	006 Move X21, 0xD01000
	007 Move W8, [X20+1219]
	008 Move X21, [X21+2024]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD01000
	015 Move X0, [X0+2024]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1219], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X1, X31
	026 Call Object..ctor, X0
	027 Move X0, X31
	028 Call SynchronizationContext.get_Current
	029 Compare X0, 0
	030 JumpIfEqual {37}
	031 Move [X19+24], X0
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 
	037 Move X0, 0xCF9000
	038 Move X0, [X0+1456]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0xD33000
	043 Move X0, [X0+2784]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X19
	047 Move X2, X31
	048 Call InvalidOperationException..ctor, X0, X1
	049 Move X0, 0xD33000
	050 Move X0, [X0+2792]
	051 Call 0x1C17D08
	052 Move X1, X0
	053 Move X0, X19
	054 Call 0x1C17DEC

Method: System.Void QueueTask(System.Threading.Tasks.Task task)

Disassembly:
	0x033FB3FC ADRP X8, 0xD27000
	0x033FB400 ADRP X9, 0xD27000
	0x033FB404 LDR X8, [X8 + 0x2D8]
	0x033FB408 LDR X9, [X9 + 0x308]
	0x033FB40C CMP X3, 0x0
	0x033FB410 CSEL X0, X9, X8, EQ
	0x033FB414 BL 0x1C16D08
	0x033FB418 MOV X19, X0
	0x033FB41C ADRP X0, 0xCFD000
	0x033FB420 LDR X0, [X0 + 0x528]
	0x033FB424 BL 0x1C16D08
	0x033FB428 BL 0x1C16F10
	0x033FB42C MOV X20, X0
	0x033FB430 ADRP X0, 0xD27000
	0x033FB434 LDR X0, [X0 + 0x2E0]
	0x033FB438 BL 0x1C16D08
	0x033FB43C MOV X2, X0
	0x033FB440 MOV X0, X20
	0x033FB444 MOV X1, X19
	0x033FB448 MOV X3, X31
	0x033FB44C BL 0x3315F7C
	0x033FB450 B 0x33FB4A8
	0x033FB454 ADRP X8, 0xD27000
	0x033FB458 ADRP X9, 0xD27000
	0x033FB45C LDR X8, [X8 + 0x328]
	0x033FB460 LDR X9, [X9 + 0x310]
	0x033FB464 CMP W2, 0x0
	0x033FB468 CSEL X0, X9, X8, LT
	0x033FB46C BL 0x1C16D08
	0x033FB470 MOV X19, X0
	0x033FB474 ADRP X0, 0xD00000
	0x033FB478 LDR X0, [X0 + 0x760]
	0x033FB47C BL 0x1C16D08

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFE3000
	007 Move X21, 0xD33000
	008 Move W8, [X22+1220]
	009 Move X21, [X21+2776]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD33000
	017 Move X0, [X0+2776]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1220], W8
	021 Move X0, [X21]
	022 Move X20, [X20+24]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Compare X20, 0
	028 JumpIfEqual {43}
	029 Move X8, [X21]
	030 Move X9, [X20]
	031 Move X0, X20
	032 Move X2, X19
	033 Move X8, [X8+184]
	034 Move X4, [X9+392]
	035 Move X3, [X9+400]
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X1, [X8]
	041 Move X30, [X31+48]
	042 CallNoReturn X4
	043 Call 0x1C17F20

Method: System.Boolean TryExecuteTaskInline(System.Threading.Tasks.Task task, System.Boolean taskWasPreviouslyQueued)

Disassembly:
	0x033FB480 BL 0x1C16F10
	0x033FB484 MOV X20, X0
	0x033FB488 ADRP X0, 0xD20000
	0x033FB48C LDR X0, [X0 + 0x670]
	0x033FB490 BL 0x1C16D08
	0x033FB494 MOV X2, X0
	0x033FB498 MOV X0, X20
	0x033FB49C MOV X1, X19
	0x033FB4A0 MOV X3, X31
	0x033FB4A4 BL 0x3311888
	0x033FB4A8 ADRP X0, 0xD32000
	0x033FB4AC LDR X0, [X0 + 0xB58]
	0x033FB4B0 BL 0x1C16D08
	0x033FB4B4 MOV X1, X0
	0x033FB4B8 MOV X0, X20
	0x033FB4BC BL 0x1C16DEC
	0x033FB4C0 STR X30, [X31 - 0x20]!
	0x033FB4C4 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, X31
	006 Move X19, X1
	007 Call SynchronizationContext.get_Current
	008 Move X8, [X20+24]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move W0, W31
	013 Move X30, [X31+32]
	014 Return X0
	015 Move X0, X20
	016 Move X1, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Call TaskScheduler.TryExecuteTask, X0, X1
	021 Return X0

Method: System.Void .cctor()

Disassembly:
	0x033FB4C8 CBZ X1, 0x33FB528
	0x033FB4CC TBNZ X3, 0x1F, 0x33FB570
	0x033FB4D0 TBNZ X2, 0x1F, 0x33FB570
	0x033FB4D4 LDR W8, [X1 + 0x18]
	0x033FB4D8 SUB W9, W8, W2
	0x033FB4DC CMP W9, W3
	0x033FB4E0 B.LT 0x33FB5DC
	0x033FB4E4 CBZ W3, 0x33FB518
	0x033FB4E8 LDR X9, [X0]
	0x033FB4EC LDP X20, X19, [X31 + 0x10]
	0x033FB4F0 ADD X10, X1, 0x20
	0x033FB4F4 CMP W8, 0x0
	0x033FB4F8 LDR X5, [X9 + 0x2C8]
	0x033FB4FC LDR X4, [X9 + 0x2D0]
	0x033FB500 CSEL X8, X31, X10, EQ
	0x033FB504 ADD X1, X8, W2, SXTW
	0x033FB508 MOV W2, W3
	0x033FB50C MOV X3, X31
	0x033FB510 LDR X30, [X31], #0x20
	0x033FB514 BR X5
	0x033FB518 LDP X20, X19, [X31 + 0x10]
	0x033FB51C MOV W0, W31
	0x033FB520 LDR X30, [X31], #0x20
	0x033FB524 RET
	0x033FB528 ADRP X0, 0xCFD000
	0x033FB52C LDR X0, [X0 + 0x528]
	0x033FB530 BL 0x1C16D08
	0x033FB534 BL 0x1C16F10
	0x033FB538 MOV X19, X0
	0x033FB53C ADRP X0, 0xD27000
	0x033FB540 LDR X0, [X0 + 0x308]
	0x033FB544 BL 0x1C16D08
	0x033FB548 MOV X20, X0
	0x033FB54C ADRP X0, 0xD27000
	0x033FB550 LDR X0, [X0 + 0x2E0]
	0x033FB554 BL 0x1C16D08
	0x033FB558 MOV X2, X0
	0x033FB55C MOV X0, X19
	0x033FB560 MOV X1, X20
	0x033FB564 MOV X3, X31
	0x033FB568 BL 0x3315F7C
	0x033FB56C B 0x33FB620
	0x033FB570 ADRP X8, 0xD20000
	0x033FB574 ADRP X9, 0xD03000
	0x033FB578 LDR X8, [X8 + 0x648]
	0x033FB57C LDR X9, [X9 + 0x130]
	0x033FB580 CMP W2, 0x0
	0x033FB584 CSEL X0, X9, X8, LT
	0x033FB588 BL 0x1C16D08

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xFE3000
	007 Move X19, 0xD33000
	008 Move W8, [X20+1221]
	009 Move X19, [X19+2832]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xD05000
	015 Move X0, [X0+1184]
	016 Call 0x1C17CF4
	017 Move X0, 0xD33000
	018 Move X0, [X0+2776]
	019 Call 0x1C17CF4
	020 Move X0, 0xD33000
	021 Move X0, [X0+2840]
	022 Call 0x1C17CF4
	023 Move X0, 0xD33000
	024 Move X0, [X0+2832]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+1221], W8
	028 Move X0, [X19]
	029 Move X22, 0xD05000
	030 Move X20, 0xD33000
	031 Move X21, 0xD33000
	032 Move W8, [X0+224]
	033 Move X22, [X22+1184]
	034 Move X20, [X20+2840]
	035 Move X21, [X21+2776]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X19]
	040 Move X8, [X0+184]
	041 Move X0, [X22]
	042 Move X19, [X8]
	043 Call 0x1C17F10
	044 Move X2, [X20]
	045 Move X1, X19
	046 Move X3, X31
	047 Move X20, X0
	048 Call SendOrPostCallback..ctor, X0, X1, X2
	049 Move X8, [X21]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X8, [X8+184]
	053 Move [X8], X20
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X30, [X31+48]
	057 Return 

