Type: System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation

Method: System.Void .ctor(System.Threading.Tasks.TaskScheduler scheduler, System.Action action, System.Boolean flowExecutionContext)

Disassembly:
	0x033F3D74 LDR W8, [X0 + 0xE0]
	0x033F3D78 CBNZ W8, 0x33F3D80
	0x033F3D7C BL 0x1C16DFC
	0x033F3D80 MOV X0, X19
	0x033F3D84 MOV X1, X31
	0x033F3D88 MOV X2, X31
	0x033F3D8C BL 0x33DDBCC
	0x033F3D90 TBZ X0, 0x0, 0x33F3DA4
	0x033F3D94 LDR X20, [X20 + 0x48]
	0x033F3D98 BL 0x1C16D44
	0x033F3D9C CBZ X20, 0x33F3DB4
	0x033F3DA0 STR X19, [X20 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, X2
	005 Move X19, X1
	006 And W2, W3, 1
	007 Move X1, X8
	008 Move X20, X0
	009 Call AwaitTaskContinuation..ctor, X0, X1, X2
	010 Move [X20+32], X19
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X30, [X31+32]
	014 Return 

Method: System.Void Run(System.Threading.Tasks.Task ignored, System.Boolean canInlineContinuationTask)

Disassembly:
	0x033F90D8 CBZ X21, 0x33F9200
	0x033F90DC LDR X2, [X25]
	0x033F90E0 MOV X0, X21
	0x033F90E4 BL 0x319B66C
	0x033F90E8 B 0x33F9018
	0x033F90EC MOV X23, X31
	0x033F90F0 MOV W24, W31
	0x033F90F4 CBZ X22, 0x33F9184
	0x033F90F8 ADRP X10, 0xCFA000
	0x033F90FC LDR X8, [X22]
	0x033F9100 LDR X10, [X10 + 0xE00]
	0x033F9104 LDRH W9, [X8 + 0x12E]
	0x033F9108 LDR X1, [X10]
	0x033F910C CBZ X9, 0x33F9130
	0x033F9110 LDR X10, [X8 + 0xB0]
	0x033F9114 ADD X10, X10, 0x8
	0x033F9118 LDUR X11, [X10 - 0x8]
	0x033F911C CMP X11, X1
	0x033F9120 B.EQ 0x33F916C
	0x033F9124 SUBS X9, X9, 0x1
	0x033F9128 ADD X10, X10, 0x10
	0x033F912C B.NE 0x33F9118
	0x033F9130 MOV X0, X22
	0x033F9134 MOV W2, W31
	0x033F9138 BL 0x1C5C788
	0x033F913C B 0x33F9178
	0x033F9140 MOV X0, X20
	0x033F9144 MOV X1, X31
	0x033F9148 BL 0x32C2380
	0x033F914C CBZ X21, 0x33F9204
	0x033F9150 ADRP X8, 0xD34000
	0x033F9154 LDR X8, [X8 + 0xA48]
	0x033F9158 MOV X1, X0
	0x033F915C MOV X0, X21
	0x033F9160 LDR X2, [X8]
	0x033F9164 BL 0x319B66C
	0x033F9168 B 0x33F91C8
	0x033F916C LDRSW X9, [X10]
	0x033F9170 ADD X8, X8, X9, 0x4, LSL
	0x033F9174 ADD X0, X8, 0x138
	0x033F9178 LDP X8, X1, [X0]
	0x033F917C MOV X0, X22
	0x033F9180 BLR X8
	0x033F9184 CBNZ X23, 0x33F9268
	0x033F9188 CBZ W24, 0x33F91C4
	0x033F918C ADRP X8, 0xD34000
	0x033F9190 LDR X8, [X8 + 0xA30]
	0x033F9194 MOV X0, X20
	0x033F9198 LDR X1, [X8]
	0x033F919C BL 0x1C16E00
	0x033F91A0 CBZ X0, 0x33F9208
	0x033F91A4 CBZ X21, 0x33F9204
	0x033F91A8 ADRP X8, 0xD34000
	0x033F91AC LDR X8, [X8 + 0x9D8]
	0x033F91B0 MOV X1, X0
	0x033F91B4 MOV X0, X21
	0x033F91B8 LDR X2, [X8]
	0x033F91BC BL 0x319B748
	0x033F91C0 B 0x33F91C8
	0x033F91C4 CBZ X21, 0x33F9204
	0x033F91C8 LDR W8, [X21 + 0x18]
	0x033F91CC CMP W8, 0x1
	0x033F91D0 B.LT 0x33F91EC
	0x033F91D4 MOV X0, X19
	0x033F91D8 LDP X20, X19, [X31 + 0x30]
	0x033F91DC LDP X22, X21, [X31 + 0x20]
	0x033F91E0 LDP X24, X23, [X31 + 0x10]
	0x033F91E4 LDP X30, X25, [X31], #0x40
	0x033F91E8 B 0x33F9330
	0x033F91EC LDP X20, X19, [X31 + 0x30]
	0x033F91F0 LDP X22, X21, [X31 + 0x20]
	0x033F91F4 LDP X24, X23, [X31 + 0x10]
	0x033F91F8 LDP X30, X25, [X31], #0x40
	0x033F91FC RET
	0x033F9200 BL 0x1C16F20
	0x033F9204 BL 0x1C16F20
	0x033F9208 ADRP X0, 0xD02000
	0x033F920C LDR X0, [X0 + 0x578]
	0x033F9210 BL 0x1C16D08
	0x033F9214 BL 0x1C16F10
	0x033F9218 MOV X19, X0
	0x033F921C ADRP X0, 0xD34000
	0x033F9220 LDR X0, [X0 + 0xA50]
	0x033F9224 BL 0x1C16D08
	0x033F9228 MOV X20, X0
	0x033F922C ADRP X0, 0xD34000
	0x033F9230 LDR X0, [X0 + 0xA58]
	0x033F9234 BL 0x1C16D08
	0x033F9238 MOV X2, X0
	0x033F923C MOV X0, X19
	0x033F9240 MOV X1, X20
	0x033F9244 MOV X3, X31
	0x033F9248 BL 0x330E16C
	0x033F924C ADRP X0, 0xD34000
	0x033F9250 LDR X0, [X0 + 0xA60]
	0x033F9254 BL 0x1C16D08
	0x033F9258 MOV X1, X0
	0x033F925C MOV X0, X19
	0x033F9260 BL 0x1C16DEC
	0x033F9264 BL 0x1C16F20
	0x033F9268 MOV X0, X23
	0x033F926C BL 0x1C16F18
	0x033F9270 B 0x33F9280
	0x033F9274 B 0x33F9280
	0x033F9278 B 0x33F9280
	0x033F927C B 0x33F9280
	0x033F9280 MOV X24, X0
	0x033F9284 CMP W1, 0x1
	0x033F9288 B.NE 0x33F92A8
	0x033F928C MOV X0, X24
	0x033F9290 BL 0x3EB1AD0
	0x033F9294 LDR X23, [X0]
	0x033F9298 BL 0x3EB1AE0
	0x033F929C MOVZ W24, 0x1
	0x033F92A0 CBNZ X22, 0x33F90F8
	0x033F92A4 B 0x33F9184
	0x033F92A8 MOV X23, X31
	0x033F92AC B 0x33F92B4
	0x033F92B0 MOV X24, X0
	0x033F92B4 CBZ X22, 0x33F9318
	0x033F92B8 ADRP X10, 0xCFA000
	0x033F92BC LDR X8, [X22]
	0x033F92C0 LDR X10, [X10 + 0xE00]
	0x033F92C4 LDRH W9, [X8 + 0x12E]
	0x033F92C8 LDR X1, [X10]
	0x033F92CC CBZ X9, 0x33F92F0
	0x033F92D0 LDR X10, [X8 + 0xB0]
	0x033F92D4 ADD X10, X10, 0x8
	0x033F92D8 LDUR X11, [X10 - 0x8]
	0x033F92DC CMP X11, X1
	0x033F92E0 B.EQ 0x33F9300
	0x033F92E4 SUBS X9, X9, 0x1
	0x033F92E8 ADD X10, X10, 0x10
	0x033F92EC B.NE 0x33F92D8
	0x033F92F0 MOV X0, X22
	0x033F92F4 MOV W2, W31
	0x033F92F8 BL 0x1C5C788
	0x033F92FC B 0x33F930C
	0x033F9300 LDRSW X9, [X10]
	0x033F9304 ADD X8, X8, X9, 0x4, LSL
	0x033F9308 ADD X0, X8, 0x138
	0x033F930C LDP X8, X1, [X0]
	0x033F9310 MOV X0, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xFE5000
	008 Move X21, 0xD03000
	009 Move W8, [X22+1180]
	010 Move X21, [X21+2024]
	011 Move W20, W2
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xD25000
	018 Move X0, [X0+3656]
	019 Call 0x1C17CF4
	020 Move X0, 0xD03000
	021 Move X0, [X0+2024]
	022 Call 0x1C17CF4
	023 Move X0, 0xD35000
	024 Move X0, [X0+2560]
	025 Call 0x1C17CF4
	026 Move X0, 0xD35000
	027 Move X0, [X0+2568]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+1180], W8
	031 Move X0, [X21]
	032 Move X22, [X19+32]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X23, 0xFE1000
	038 Move W8, [X23+2189]
	039 Compare W8, 0
	040 JumpIfNotEqual {46}
	041 Move X0, 0xD03000
	042 Move X0, [X0+2024]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X23+2189], W8
	046 Move X0, [X21]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X21]
	052 Move X8, [X0+184]
	053 Move X8, [X8+8]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X22, 0xD35000
	056 Move X22, [X22+2568]
	057 Move TEMP, X20
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {78}
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Call TaskScheduler.get_InternalCurrent
	066 Move X8, [X19+32]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Call ThreadPool.get_IsThreadPoolThread
	069 And W23, W0, 1
	070 And W2, W20, 1
	071 Move X0, X19
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Move X23, [X31+56]
	078 Move W23, W31
	079 Move W23, 1
	080 Move X0, [X22]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {86}
	084 Call 0x1C17DFC
	085 Move X0, [X22]
	086 Move X8, [X0+184]
	087 Move X20, [X8+8]
	088 Compare X20, 0
	089 JumpIfNotEqual {111}
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {95}
	093 Call 0x1C17DFC
	094 Move X0, [X22]
	095 Move X9, 0xD25000
	096 Move X8, [X0+184]
	097 Move X9, [X9+3656]
	098 Move X21, [X8]
	099 Move X0, [X9]
	100 Call 0x1C17F10
	101 Move X8, 0xD35000
	102 Move X8, [X8+2560]
	103 Move X1, X21
	104 Move X3, X31
	105 Move X20, X0
	106 Move X2, [X8]
	107 Call Action`1<Object>..ctor, X0, X1, X2
	108 Move X8, [X22]
	109 Move X8, [X8+184]
	110 Move [X8+8], X20
	111 Move X2, [X19+24]
	112 Move X3, [X19+32]
	113 Move X1, X20
	114 Call AwaitTaskContinuation.CreateTask, X0, X1, X2, X3
	115 Compare W23, 0
	116 JumpIfEqual {126}
	117 Move X20, [X31+32]
	118 Move X19, [X31+40]
	119 Move X22, [X31+16]
	120 Move X21, [X31+24]
	121 Move W1, W31
	122 Move X30, [X31+48]
	123 Move X23, [X31+56]
	124 Call TaskContinuation.InlineIfPossibleOrElseQueue, X0, X1
	125 Return 
	126 Compare X0, 0
	127 JumpIfEqual {137}
	128 Move W1, W31
	129 Call Task.ScheduleAndStart, X0, X1
	130 Move X20, [X31+32]
	131 Move X19, [X31+40]
	132 Move X22, [X31+16]
	133 Move X21, [X31+24]
	134 Move X30, [X31+48]
	135 Move X23, [X31+56]
	136 Return 
	137 Call 0x1C17F20
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X19, X0
	140 Move X0, X19
	141 Call 0x3EB2AD0
	142 Move X19, X0
	143 Move X0, 0xD35000
	144 Move X0, [X0+1744]
	145 Call 0x1C17D08
	146 Move X8, [X19]
	147 Move X1, [X8]
	148 Call 0x1C18270
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfNotEqual {161}
	153 Move X20, [X31+32]
	154 Move X19, [X31+40]
	155 Move X22, [X31+16]
	156 Move X21, [X31+24]
	157 Move X30, [X31+48]
	158 Move X23, [X31+56]
	159 Call 0x3EB2AE0
	160 Return 
	161 Move W0, 8
	162 Call 0x3EB2AF0
	163 Move X8, [X19]
	164 Move [X0], X8
	165 Move X1, 0xABC000
	166 Add X1, X1, 3672
	167 Move X2, X31
	168 Call 0x3EB2B00
	169 Move X19, X0
	170 Call 0x3EB2AE0
	171 Move X0, X19
	172 Call 0x1D2D690
	173 Call 0x1991590

