Type: System.Threading.SpinWait

Method: System.Int32 get_Count()

Disassembly:
	0x033E0278 BL 0x1C16D44
	0x033E027C CBZ X21, 0x33E02B4

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.Boolean get_NextSpinWillYield()

Disassembly:
	0x033E0280 BL 0x1C16D44
	0x033E0284 MOV X0, X20
	0x033E0288 MOV X1, X31
	0x033E028C BL 0x1C242E8
	0x033E0290 CBZ X0, 0x33E02B4
	0x033E0294 LDR W21, [X19 + 0x20]
	0x033E0298 MOV X20, X0
	0x033E029C BL 0x1C16D44
	0x033E02A0 CMP W21, 0x2
	0x033E02A4 B.EQ 0x33E02B4
	0x033E02A8 MOV X0, X20
	0x033E02AC MOV X1, X31
	0x033E02B0 BL 0x33EB044
	0x033E02B4 MOVZ W8, 0x1
	0x033E02B8 STRB W8, [X19 + 0x28]
	0x033E02BC LDP X20, X19, [X31 + 0x10]
	0x033E02C0 LDP X30, X21, [X31], #0x20
	0x033E02C4 RET
	0x033E02C8 STP X30, X19, [X31 - 0x10]!
	0x033E02CC ADRP X0, 0xD3C000
	0x033E02D0 LDR X0, [X0 + 0x4B8]
	0x033E02D4 BL 0x1C16D08
	0x033E02D8 BL 0x1C16F10
	0x033E02DC MOV X19, X0
	0x033E02E0 ADRP X0, 0xD4D000
	0x033E02E4 LDR X0, [X0 + 0x58]
	0x033E02E8 BL 0x1C16D08
	0x033E02EC MOV X2, X0
	0x033E02F0 MOV X0, X19
	0x033E02F4 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFFE000
	005 Move W8, [X20+897]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD3F000
	012 Move X0, [X0+680]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+897], W8
	016 Move W8, [X19]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W0, 1
	019 Move X19, 0xD3F000
	020 Move X19, [X19+680]
	021 Move X0, [X19]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X19]
	027 Move X8, [X0+184]
	028 Move W8, [X8+8]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CSET not yet implemented."
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0

Method: System.Void SpinOnce()

Disassembly:
	0x033E018C CBNZ W8, 0x33E0134
	0x033E0190 MOV X0, X20
	0x033E0194 BL 0x1C16F18
	0x033E0198 MOVZ W0, 0x8
	0x033E019C BL 0x3EB1AF0
	0x033E01A0 LDR X8, [X20]
	0x033E01A4 STR X8, [X0]
	0x033E01A8 ADRP X1, 0xAD4000
	0x033E01AC ADD X1, X1, 0xE58
	0x033E01B0 MOV X2, X31
	0x033E01B4 BL 0x3EB1B00
	0x033E01B8 MOV X20, X0
	0x033E01BC BL 0x3EB1AE0
	0x033E01C0 MOV X0, X20
	0x033E01C4 BL 0x1D2C690
	0x033E01C8 BL 0x1990590
	0x033E01CC STP X30, X21, [X31 - 0x20]!
	0x033E01D0 STP X20, X19, [X31 + 0x10]
	0x033E01D4 ADRP X21, 0xFFD000
	0x033E01D8 ADRP X20, 0xD1A000
	0x033E01DC LDRB W8, [X21 + 0x391]
	0x033E01E0 LDR X20, [X20 + 0xC10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xFFE000
	006 Move X21, 0xD20000
	007 Move W8, [X20+898]
	008 Move X21, [X21+1136]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD20000
	015 Move X0, [X0+1136]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+898], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W1, 20
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call SpinWait.SpinOnceCore, X0, X1
	031 Return 

Method: System.Void SpinOnce(System.Int32 sleep1Threshold)

Disassembly:
	0x033DFDD8 B 0x33E03A8
	0x033DFDDC LDP X20, X19, [X31 + 0x20]
	0x033DFDE0 LDP X22, X21, [X31 + 0x10]
	0x033DFDE4 LDR X30, [X31], #0x30
	0x033DFDE8 RET
	0x033DFDEC SUB X31, X31, 0x30
	0x033DFDF0 STP X30, X21, [X31 + 0x10]
	0x033DFDF4 STP X20, X19, [X31 + 0x20]
	0x033DFDF8 ADRP X20, 0xFFE000
	0x033DFDFC STR X1, [X31 + 0x8]
	0x033DFE00 ADRP X21, 0xD16000
	0x033DFE04 LDRB W8, [X20 + 0x38E]
	0x033DFE08 LDR X21, [X21 + 0x570]
	0x033DFE0C MOV X19, X0
	0x033DFE10 TBNZ X8, 0x0, 0x33DFE28
	0x033DFE14 ADRP X0, 0xD16000
	0x033DFE18 LDR X0, [X0 + 0x570]
	0x033DFE1C BL 0x1C16CF4
	0x033DFE20 MOVZ W8, 0x1
	0x033DFE24 STRB W8, [X20 + 0x38E]
	0x033DFE28 LDR X0, [X21]
	0x033DFE2C LDR W8, [X0 + 0xE0]
	0x033DFE30 CBNZ W8, 0x33DFE38
	0x033DFE34 BL 0x1C16DFC
	0x033DFE38 ADD X0, X31, 0x8
	0x033DFE3C MOV X1, X31
	0x033DFE40 BL 0x3394200
	0x033DFE44 MOVZ X9, 0x7FF00000
	0x033DFE48 FMOV D1, X9
	0x033DFE4C FCVTZS X8, D0
	0x033DFE50 MOVZ X10, 0x80000000
	0x033DFE54 FCMP D0, D1
	0x033DFE58 CSEL X1, X10, X8, EQ
	0x033DFE5C ADD X8, X1, 0x1
	0x033DFE60 ORR W9, W31, 0x80000001
	0x033DFE64 CMP X8, X9
	0x033DFE68 B.CS 0x33DFE84
	0x033DFE6C MOV X0, X19
	0x033DFE70 BL 0x33DFECC
	0x033DFE74 LDP X20, X19, [X31 + 0x20]
	0x033DFE78 LDP X30, X21, [X31 + 0x10]
	0x033DFE7C ADD X31, X31, 0x30
	0x033DFE80 RET
	0x033DFE84 ADRP X0, 0xD1C000
	0x033DFE88 LDR X0, [X0 + 0x760]
	0x033DFE8C BL 0x1C16D08
	0x033DFE90 BL 0x1C16F10
	0x033DFE94 MOV X19, X0
	0x033DFE98 ADRP X0, 0xD4E000
	0x033DFE9C LDR X0, [X0 + 0x28]
	0x033DFEA0 BL 0x1C16D08
	0x033DFEA4 MOV X1, X0
	0x033DFEA8 MOV X0, X19
	0x033DFEAC MOV X2, X31
	0x033DFEB0 BL 0x3316014
	0x033DFEB4 ADRP X0, 0xD4E000
	0x033DFEB8 LDR X0, [X0 + 0x48]
	0x033DFEBC BL 0x1C16D08
	0x033DFEC0 MOV X1, X0
	0x033DFEC4 MOV X0, X19
	0x033DFEC8 BL 0x1C16DEC
	0x033DFECC STP X30, X23, [X31 - 0x30]!

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFFF000
	007 Move W8, [X21+899]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD21000
	015 Move X0, [X0+1136]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+899], W8
	019 Add W31, W19, 2
	020 Move X8, 0xD21000
	021 Move X8, [X8+1136]
	022 Move X0, [X8]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move TEMP, 0
	029 Not TEMP
	030 Move W8, TEMP
	031 NotImplemented "Instruction CCMP not yet implemented."
	032 Move W8, 10
	033 NotImplemented "Instruction CSEL not yet implemented."
	034 Move X0, X20
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X30, [X31+16]
	038 Move X21, [X31+24]
	039 Add X31, X31, 48
	040 Call SpinWait.SpinOnceCore, X0, X1
	041 Return 
	042 Move [X31+12], W19
	043 Move X0, 0xD15000
	044 Move X0, [X0+1880]
	045 Call 0x1C17D08
	046 Add X1, X31, 12
	047 Call 0x1C17E04
	048 Move X19, X0
	049 Move X0, 0xD1D000
	050 Move X0, [X0+1888]
	051 Call 0x1C17D08
	052 Call 0x1C17F10
	053 Move X20, X0
	054 Move X0, 0xD4E000
	055 Move X0, [X0+4072]
	056 Call 0x1C17D08
	057 Move X21, X0
	058 Move X0, 0xD4E000
	059 Move X0, [X0+4080]
	060 Call 0x1C17D08
	061 Move X3, X0
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X19
	065 Move X4, X31
	066 Call ArgumentOutOfRangeException..ctor, X0, X1, X2, X3
	067 Move X0, 0xD4E000
	068 Move X0, [X0+4088]
	069 Call 0x1C17D08
	070 Move X1, X0
	071 Move X0, X20
	072 Call 0x1C17DEC

Method: System.Void SpinOnceCore(System.Int32 sleep1Threshold)

Disassembly:
	0x033E02F8 MOV X3, X31
	0x033E02FC BL 0x338C410
	0x033E0300 ADRP X0, 0xD4D000
	0x033E0304 LDR X0, [X0 + 0x60]
	0x033E0308 BL 0x1C16D08
	0x033E030C MOV X1, X0
	0x033E0310 MOV X0, X19
	0x033E0314 BL 0x1C16DEC
	0x033E0318 STP X30, X23, [X31 - 0x30]!
	0x033E031C STP X22, X21, [X31 + 0x10]
	0x033E0320 STP X20, X19, [X31 + 0x20]
	0x033E0324 MOV X22, X1
	0x033E0328 MOV X1, X31
	0x033E032C MOV X19, X4
	0x033E0330 MOV X20, X3
	0x033E0334 MOV X21, X2
	0x033E0338 MOV X23, X0
	0x033E033C BL 0x33BDD8C
	0x033E0340 STP X22, X21, [X23 + 0x10]
	0x033E0344 STP X20, X19, [X23 + 0x20]
	0x033E0348 LDP X20, X19, [X31 + 0x20]
	0x033E034C LDP X22, X21, [X31 + 0x10]
	0x033E0350 LDP X30, X23, [X31], #0x30
	0x033E0354 RET
	0x033E0358 STR X30, [X31 - 0x40]!
	0x033E035C STP X24, X23, [X31 + 0x10]
	0x033E0360 STP X22, X21, [X31 + 0x20]
	0x033E0364 STP X20, X19, [X31 + 0x30]
	0x033E0368 MOV X23, X1
	0x033E036C MOV X1, X31
	0x033E0370 MOV X19, X5
	0x033E0374 MOV X20, X4
	0x033E0378 MOV X21, X3
	0x033E037C MOV X22, X2
	0x033E0380 MOV X24, X0
	0x033E0384 BL 0x33BDD8C
	0x033E0388 STP X23, X22, [X24 + 0x10]
	0x033E038C STP X21, X20, [X24 + 0x20]
	0x033E0390 STR X19, [X24 + 0x30]
	0x033E0394 LDP X20, X19, [X31 + 0x30]
	0x033E0398 LDP X22, X21, [X31 + 0x20]
	0x033E039C LDP X24, X23, [X31 + 0x10]
	0x033E03A0 LDR X30, [X31], #0x40
	0x033E03A4 RET
	0x033E03A8 SUB X31, X31, 0x90
	0x033E03AC STP X29, X30, [X31 + 0x30]
	0x033E03B0 STP X28, X27, [X31 + 0x40]
	0x033E03B4 STP X26, X25, [X31 + 0x50]
	0x033E03B8 STP X24, X23, [X31 + 0x60]
	0x033E03BC STP X22, X21, [X31 + 0x70]
	0x033E03C0 STP X20, X19, [X31 + 0x80]
	0x033E03C4 ADRP X20, 0xFFD000
	0x033E03C8 LDRB W8, [X20 + 0x394]
	0x033E03CC MOV W21, W1
	0x033E03D0 MOV X19, X0
	0x033E03D4 TBNZ X8, 0x0, 0x33E0440
	0x033E03D8 ADRP X0, 0xD4D000
	0x033E03DC LDR X0, [X0 + 0x68]
	0x033E03E0 BL 0x1C16CF4
	0x033E03E4 ADRP X0, 0xD4D000
	0x033E03E8 LDR X0, [X0 + 0x70]
	0x033E03EC BL 0x1C16CF4
	0x033E03F0 ADRP X0, 0xD1F000
	0x033E03F4 LDR X0, [X0 + 0x4A0]
	0x033E03F8 BL 0x1C16CF4
	0x033E03FC ADRP X0, 0xD4D000
	0x033E0400 LDR X0, [X0 + 0x78]
	0x033E0404 BL 0x1C16CF4
	0x033E0408 ADRP X0, 0xD4D000
	0x033E040C LDR X0, [X0 + 0x80]
	0x033E0410 BL 0x1C16CF4
	0x033E0414 ADRP X0, 0xD4D000
	0x033E0418 LDR X0, [X0 + 0x88]
	0x033E041C BL 0x1C16CF4
	0x033E0420 ADRP X0, 0xD4D000
	0x033E0424 LDR X0, [X0 + 0x90]
	0x033E0428 BL 0x1C16CF4
	0x033E042C ADRP X0, 0xD4C000
	0x033E0430 LDR X0, [X0 + 0xF68]
	0x033E0434 BL 0x1C16CF4
	0x033E0438 MOVZ W8, 0x1
	0x033E043C STRB W8, [X20 + 0x394]
	0x033E0440 LDR X27, [X19 + 0x18]
	0x033E0444 BL 0x1C16D44
	0x033E0448 CBZ X27, 0x33E06AC
	0x033E044C LDR X8, [X27 + 0x18]
	0x033E0450 CMP W8, 0x1
	0x033E0454 B.LT 0x33E06E0
	0x033E0458 STR W21, [X31 + 0x4]
	0x033E045C STR X31, [X31 + 0x8]
	0x033E0460 ADRP X21, 0xD4D000
	0x033E0464 ADRP X26, 0xD4C000
	0x033E0468 ADRP X25, 0xD1F000
	0x033E046C ADRP X23, 0xD4D000
	0x033E0470 ADRP X20, 0xD4D000
	0x033E0474 LDR X21, [X21 + 0x78]
	0x033E0478 LDR X26, [X26 + 0xF68]
	0x033E047C LDR X25, [X25 + 0x4A0]
	0x033E0480 LDR X23, [X23 + 0x70]
	0x033E0484 LDR X20, [X20 + 0x68]
	0x033E0488 MOV X9, X31
	0x033E048C MOV X22, X31
	0x033E0490 AND X8, X8, 0x0
	0x033E0494 STR X27, [X31 + 0x10]
	0x033E0498 CMP X9, W8, UXTW
	0x033E049C B.CS 0x33E0740
	0x033E04A0 ADD X8, X27, X9, 0x3, LSL

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xFFE000
	006 Move W8, [X21+900]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xD3F000
	014 Move X0, [X0+680]
	015 Call 0x1C17CF4
	016 Move X0, 0xD3D000
	017 Move X0, [X0+3656]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+900], W8
	021 Move W8, [X19]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CSET not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CSET not yet implemented."
	027 And W9, W10, W9
	028 Move TEMP, X9
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {49}
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {49}
	036 Move X21, 0xD3F000
	037 Move X21, [X21+680]
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X21]
	044 Move X8, [X0+184]
	045 Move W8, [X8+8]
	046 Compare W8, 0
	047 JumpIfEqual {88}
	048 Move W8, [X19]
	049 Move TEMP, X20
	050 And TEMP, TEMP, -2147483648
	051 Compare TEMP, -2147483648
	052 JumpIfEqual {62}
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X8, 0xD3D000
	055 Move X8, [X8+3656]
	056 Move X0, [X8]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move W0, 1
	062 Subtract W9, W8, 10
	063 Subtract W8, W8, 9
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction CSEL not yet implemented."
	066 NotImplemented "Instruction SBFM not yet implemented."
	067 Move X9, 0xD3D000
	068 Move X9, [X9+3656]
	069 Move X0, [X9]
	070 Move W9, 0x6667
	071 NotImplemented "Instruction MOVK not yet implemented."
	072 NotImplemented "Instruction SMADDL not yet implemented."
	073 Move X10, X9
	074 ShiftRight X10, 63
	075 And X10, X10, 0x7FFFFFFF
	076 Move W11, [X0+224]
	077 NotImplemented "Instruction SBFM not yet implemented."
	078 Add W9, W9, W10
	079 Add W9, W9, W9
	080 Subtract W20, W8, W9
	081 Compare W11, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move W0, W31
	086 Move X1, X31
	087 Call RuntimeThread.Sleep, X0
	088 Move X20, 0xD3D000
	089 Move X20, [X20+3656]
	090 Move X0, [X20]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {97}
	094 Call 0x1C17DFC
	095 Move X0, [X20]
	096 Move W8, [X0+224]
	097 Move X9, [X0+184]
	098 Move W10, [X19]
	099 Move W11, 1
	100 Move W9, [X9]
	101 NotImplemented "Instruction LSLV not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 NotImplemented "Instruction CSEL not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 NotImplemented "Instruction CSEL not yet implemented."
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move W0, W20
	110 Move X1, X31
	111 Call RuntimeThread.SpinWait, X0
	112 Move X0, X31
	113 Call RuntimeThread.Yield
	114 Move W8, [X19]
	115 Move TEMP, 0x80000000
	116 Not TEMP
	117 Move W9, TEMP
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move W9, 10
	120 NotImplemented "Instruction CSINC not yet implemented."
	121 Move [X19], W8
	122 Move X20, [X31+16]
	123 Move X19, [X31+24]
	124 Move X30, [X31+32]
	125 Move X21, [X31+40]
	126 Return 

Method: System.Void .cctor()

Disassembly:
	0x033E04A4 LDR X24, [X8 + 0x20]
	0x033E04A8 STR X9, [X31 + 0x18]
	0x033E04AC BL 0x1C16D44
	0x033E04B0 CBZ X24, 0x33E0690
	0x033E04B4 ADRP X8, 0xD4D000
	0x033E04B8 LDR X8, [X8 + 0x90]
	0x033E04BC LDR X1, [X8]
	0x033E04C0 MOV X0, X24
	0x033E04C4 BL 0x25FFC74
	0x033E04C8 MOV X27, X0
	0x033E04CC CBZ X27, 0x33E068C
	0x033E04D0 ADRP X8, 0xD4D000
	0x033E04D4 LDR X8, [X8 + 0x80]
	0x033E04D8 LDR X1, [X8]
	0x033E04DC MOV X0, X27
	0x033E04E0 BL 0x25FFB68
	0x033E04E4 SUBS W28, W0, 0x1
	0x033E04E8 B.MI 0x33E0670
	0x033E04EC LDR X2, [X21]
	0x033E04F0 MOV X0, X27
	0x033E04F4 MOV W1, W28
	0x033E04F8 BL 0x25FFB30
	0x033E04FC MOV X24, X0
	0x033E0500 BL 0x1C16D44
	0x033E0504 STR X24, [X19 + 0x30]
	0x033E0508 BL 0x1C16D44
	0x033E050C CBZ X24, 0x33E05A8
	0x033E0510 LDR X24, [X19 + 0x30]
	0x033E0514 MOV W8, W28
	0x033E0518 AND X9, X22, 0x0
	0x033E051C ORR X22, X9, X8, 0x0
	0x033E0520 BL 0x1C16D44
	0x033E0524 CBZ X24, 0x33E0538

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFFE000
	005 Move X19, 0xD3F000
	006 Move W8, [X20+901]
	007 Move X19, [X19+680]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xD3F000
	013 Move X0, [X0+680]
	014 Call 0x1C17CF4
	015 Move X0, 0xD20000
	016 Move X0, [X0+1136]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+901], W8
	020 Move X0, [X19]
	021 Move X20, 0xD20000
	022 Move W8, [X0+224]
	023 Move X20, [X20+1136]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X19]
	028 Move X8, [X0+184]
	029 Move X9, [X20]
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move W8, [X8+8]
	033 Move X9, [X9+184]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W8, 35
	036 NotImplemented "Instruction CSINC not yet implemented."
	037 Move [X9], W8
	038 Move X30, [X31+32]
	039 Return 

