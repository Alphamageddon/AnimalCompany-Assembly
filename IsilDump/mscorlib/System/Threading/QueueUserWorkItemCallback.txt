Type: System.Threading.QueueUserWorkItemCallback

Method: System.Void .ctor(System.Threading.WaitCallback waitCallback, System.Object stateObj, System.Boolean compressStack, ref System.Threading.StackCrawlMark stackMark)

Disassembly:
	0x033EA620 B 0x33EA658
	0x033EA624 ADRP X8, 0xD43000
	0x033EA628 LDR X8, [X8 + 0x268]
	0x033EA62C LDR X9, [X19 + 0x10]
	0x033EA630 LDR X0, [X8]
	0x033EA634 STR X9, [X31]
	0x033EA638 LDR W8, [X0 + 0xE0]
	0x033EA63C CBNZ W8, 0x33EA644
	0x033EA640 BL 0x1C16DFC
	0x033EA644 ADD X0, X31, 0x0
	0x033EA648 MOVZ W1, 0x1
	0x033EA64C MOV W2, W31
	0x033EA650 MOV W3, W20
	0x033EA654 BL 0x1C4C540
	0x033EA658 MOV W20, W0
	0x033EA65C MOV X21, X31
	0x033EA660 LDRB W8, [X31 + 0xC]
	0x033EA664 CBZ W8, 0x33EA678
	0x033EA668 CBZ X19, 0x33EA69C
	0x033EA66C MOV X0, X19
	0x033EA670 MOV X1, X31
	0x033EA674 BL 0x32BFAB4
	0x033EA678 CBNZ X21, 0x33EA694
	0x033EA67C MOV W0, W20
	0x033EA680 LDP X20, X19, [X31 + 0x20]
	0x033EA684 LDP X30, X21, [X31 + 0x10]
	0x033EA688 ADD X31, X31, 0x30
	0x033EA68C RET
	0x033EA690 BL 0x1C16F20
	0x033EA694 MOV X0, X21
	0x033EA698 BL 0x1C16F18
	0x033EA69C BL 0x1C16F20
	0x033EA6A0 BL 0x1C16F20
	0x033EA6A4 BL 0x1C16F28
	0x033EA6A8 B 0x33EA6C0
	0x033EA6AC B 0x33EA6C0
	0x033EA6B0 B 0x33EA6C0
	0x033EA6B4 B 0x33EA6C0
	0x033EA6B8 B 0x33EA6C0
	0x033EA6BC B 0x33EA6C0
	0x033EA6C0 MOV X20, X0
	0x033EA6C4 CMP W1, 0x1
	0x033EA6C8 B.NE 0x33EA6E4
	0x033EA6CC MOV X0, X20
	0x033EA6D0 BL 0x3EB1AD0
	0x033EA6D4 LDR X21, [X0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xFF4000
	009 Move W8, [X24+1021]
	010 Move X19, X4
	011 Move W21, W3
	012 Move X22, X2
	013 Move X23, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xD32000
	020 Move X0, [X0+1408]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+1021], W8
	024 Move X0, X20
	025 Move X1, X31
	026 Call Object..ctor, X0
	027 Move [X20+16], X23
	028 Move [X20+32], X22
	029 Move TEMP, X21
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {56}
	033 Move X21, 0xD32000
	034 Move X21, [X21+1408]
	035 Move X0, [X21]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X31
	041 Call ExecutionContext.IsFlowSuppressed
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {56}
	046 Move X0, [X21]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move W1, 3
	052 Move X0, X19
	053 Move X2, X31
	054 Call ExecutionContext.Capture, X0, X1
	055 Move [X20+24], X0
	056 Move X20, [X31+48]
	057 Move X19, [X31+56]
	058 Move X22, [X31+32]
	059 Move X21, [X31+40]
	060 Move X24, [X31+16]
	061 Move X23, [X31+24]
	062 Move X30, [X31+64]
	063 Return 

Method: System.Void System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()

Disassembly:
	0x033EA6D8 BL 0x3EB1AE0
	0x033EA6DC MOV W20, W31
	0x033EA6E0 B 0x33EA660
	0x033EA6E4 MOV X21, X31
	0x033EA6E8 B 0x33EA6F0
	0x033EA6EC MOV X20, X0
	0x033EA6F0 LDRB W8, [X31 + 0xC]
	0x033EA6F4 CBZ W8, 0x33EA70C
	0x033EA6F8 CBNZ X19, 0x33EA700
	0x033EA6FC BL 0x1C16F20
	0x033EA700 MOV X0, X19
	0x033EA704 MOV X1, X31
	0x033EA708 BL 0x32BFAB4
	0x033EA70C CBNZ X21, 0x33EA718
	0x033EA710 MOV X0, X20
	0x033EA714 BL 0x1D2C690
	0x033EA718 MOV X0, X21
	0x033EA71C BL 0x1C16F18
	0x033EA720 BL 0x1990590
	0x033EA724 STP X30, X19, [X31 - 0x10]!
	0x033EA728 ADRP X0, 0xD43000
	0x033EA72C LDR X0, [X0 + 0x518]
	0x033EA730 BL 0x1C16D08
	0x033EA734 BL 0x1C16F10
	0x033EA738 MOV X1, X31
	0x033EA73C MOV X19, X0
	0x033EA740 BL 0x33DCA0C
	0x033EA744 ADRP X0, 0xD43000
	0x033EA748 LDR X0, [X0 + 0x520]
	0x033EA74C BL 0x1C16D08
	0x033EA750 MOV X1, X0
	0x033EA754 MOV X0, X19
	0x033EA758 BL 0x1C16DEC
	0x033EA75C STP X30, X25, [X31 - 0x40]!
	0x033EA760 STP X24, X23, [X31 + 0x10]
	0x033EA764 STP X22, X21, [X31 + 0x20]
	0x033EA768 STP X20, X19, [X31 + 0x30]
	0x033EA76C ADRP X20, 0xFF3000
	0x033EA770 LDRB W8, [X20 + 0x40E]
	0x033EA774 MOV W19, W1
	0x033EA778 MOV X21, X0
	0x033EA77C TBNZ X8, 0x0, 0x33EA7AC
	0x033EA780 ADRP X0, 0xD10000
	0x033EA784 LDR X0, [X0 + 0xC10]
	0x033EA788 BL 0x1C16CF4
	0x033EA78C ADRP X0, 0xD43000
	0x033EA790 LDR X0, [X0 + 0x528]
	0x033EA794 BL 0x1C16CF4
	0x033EA798 ADRP X0, 0xD43000
	0x033EA79C LDR X0, [X0 + 0x268]
	0x033EA7A0 BL 0x1C16CF4
	0x033EA7A4 MOVZ W8, 0x1
	0x033EA7A8 STRB W8, [X20 + 0x40E]
	0x033EA7AC CBZ X21, 0x33EA928

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xFF4000
	007 Move W8, [X20+1022]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xD32000
	014 Move X0, [X0+1408]
	015 Call 0x1C17CF4
	016 Move X0, 0xD44000
	017 Move X0, [X0+1184]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1022], W8
	021 Move X20, [X19+24]
	022 Compare X20, 0
	023 JumpIfEqual {54}
	024 Move X22, 0xD44000
	025 Move X22, [X22+1184]
	026 Move X21, 0xD32000
	027 Move X0, [X22]
	028 Move W8, [X0+224]
	029 Move X21, [X21+1408]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X22]
	034 Move X8, [X21]
	035 Move X9, [X0+184]
	036 Move W10, [X8+224]
	037 Move X21, [X9]
	038 Compare W10, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X1, X21
	044 Move X2, X19
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move W3, 1
	050 Move X4, X31
	051 Move X30, [X31+48]
	052 Call ExecutionContext.Run, X0, X1, X2, X3
	053 Return 
	054 Move X8, [X19+16]
	055 Move [X19+16], X31
	056 Compare X8, 0
	057 JumpIfEqual {68}
	058 Move X1, [X19+32]
	059 Move X3, [X8+24]
	060 Move X0, [X8+64]
	061 Move X2, [X8+40]
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 CallNoReturn X3
	068 Call 0x1C17F20

Method: System.Void System.Threading.IThreadPoolWorkItem.MarkAborted(System.Threading.ThreadAbortException tae)

Disassembly:
	0x033EA7B0 LDR X1, [X21 + 0x18]

ISIL:
	001 Return 

Method: System.Void WaitCallback_Context(System.Object state)

Disassembly:
	0x033EA7B4 CBZ X1, 0x33EA934
	0x033EA7B8 CMP W1, 0x41
	0x033EA7BC B.GE 0x33EA970
	0x033EA7C0 ADDS W31, W19, 0x2
	0x033EA7C4 B.LE 0x33EA9AC
	0x033EA7C8 ADRP X8, 0xD43000
	0x033EA7CC LDR X8, [X8 + 0x528]
	0x033EA7D0 LDR X0, [X8]
	0x033EA7D4 BL 0x1C16D6C
	0x033EA7D8 LDR W8, [X21 + 0x18]
	0x033EA7DC MOV X20, X0
	0x033EA7E0 CMP W8, 0x1
	0x033EA7E4 B.LT 0x33EA83C
	0x033EA7E8 MOV X23, X31
	0x033EA7EC ADD X24, X20, 0x20
	0x033EA7F0 ADD X25, X21, 0x20
	0x033EA7F4 CMP W23, W8
	0x033EA7F8 B.CS 0x33EA8C4
	0x033EA7FC LDR X22, [X25, X23, LSL #3]
	0x033EA800 CBZ X22, 0x33EA8CC
	0x033EA804 CBZ X20, 0x33EA8C8
	0x033EA808 LDR X8, [X20]
	0x033EA80C MOV X0, X22
	0x033EA810 LDR X1, [X8 + 0x40]
	0x033EA814 BL 0x1C16E00
	0x033EA818 CBZ X0, 0x33EA91C
	0x033EA81C LDR W8, [X20 + 0x18]
	0x033EA820 CMP W23, W8
	0x033EA824 B.CS 0x33EA8C4
	0x033EA828 STR X22, [X24, X23, LSL #3]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFF4000
	005 Move W8, [X20+1023]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD44000
	012 Move X0, [X0+1184]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1023], W8
	016 Compare X19, 0
	017 JumpIfEqual {34}
	018 Move X8, 0xD44000
	019 Move X8, [X8+1184]
	020 Move X1, [X8]
	021 Move X8, [X19]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, [X19+16]
	024 Compare X8, 0
	025 JumpIfEqual {34}
	026 Move X1, [X19+32]
	027 Move X3, [X8+24]
	028 Move X0, [X8+64]
	029 Move X2, [X8+40]
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 CallNoReturn X3
	034 Call 0x1C17F20
	035 Move X0, X19
	036 Call 0x1C181E0

Method: System.Void .cctor()

Disassembly:
	0x033EA82C LDR W8, [X21 + 0x18]
	0x033EA830 ADD X23, X23, 0x1
	0x033EA834 CMP W23, W8
	0x033EA838 B.LT 0x33EA7F4
	0x033EA83C ADRP X22, 0xD43000
	0x033EA840 LDR X22, [X22 + 0x268]
	0x033EA844 LDR X0, [X22]
	0x033EA848 LDR W8, [X0 + 0xE0]
	0x033EA84C CBNZ W8, 0x33EA854
	0x033EA850 BL 0x1C16DFC
	0x033EA854 MOV X0, X20
	0x033EA858 MOV W1, W19
	0x033EA85C MOV W2, W31
	0x033EA860 MOV W3, W31
	0x033EA864 BL 0x33EAA40
	0x033EA868 MOV W21, W0
	0x033EA86C SUBS W19, W0, 0x80
	0x033EA870 B.LT 0x33EA888
	0x033EA874 CBZ X20, 0x33EA8C8
	0x033EA878 LDR W8, [X20 + 0x18]
	0x033EA87C ADD W9, W8, 0x80
	0x033EA880 CMP W9, W21
	0x033EA884 B.GT 0x33EA9FC
	0x033EA888 ADRP X8, 0xD10000
	0x033EA88C LDR X8, [X8 + 0xC10]
	0x033EA890 LDR X0, [X8]
	0x033EA894 LDR W8, [X0 + 0xE0]
	0x033EA898 CBNZ W8, 0x33EA8A0
	0x033EA89C BL 0x1C16DFC
	0x033EA8A0 MOV X0, X20
	0x033EA8A4 MOV X1, X31
	0x033EA8A8 BL 0x33B3E94
	0x033EA8AC MOV W0, W21
	0x033EA8B0 LDP X20, X19, [X31 + 0x30]
	0x033EA8B4 LDP X22, X21, [X31 + 0x20]
	0x033EA8B8 LDP X24, X23, [X31 + 0x10]
	0x033EA8BC LDP X30, X25, [X31], #0x40

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFF4000
	007 Move X22, 0xD3C000
	008 Move X19, 0xD44000
	009 Move X20, 0xD44000
	010 Move W8, [X21+1024]
	011 Move X22, [X22+2376]
	012 Move X19, [X19+1192]
	013 Move X20, [X20+1184]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xD3C000
	019 Move X0, [X0+2376]
	020 Call 0x1C17CF4
	021 Move X0, 0xD44000
	022 Move X0, [X0+1192]
	023 Call 0x1C17CF4
	024 Move X0, 0xD44000
	025 Move X0, [X0+1184]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1024], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X2, [X19]
	032 Move X1, X31
	033 Move X3, X31
	034 Move X19, X0
	035 Call ContextCallback..ctor, X0, X1, X2
	036 Move X8, [X20]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X8, [X8+184]
	040 Move [X8], X19
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+48]
	044 Return 

