Type: System.Threading.Lock

Method: System.Void Acquire()

Disassembly:
	0x033E24B4 MOV X22, X31
	0x033E24B8 MOV W20, W31

ISIL:
	001 Move X0, [X0+16]
	002 Call 0x1C4CE94
	003 Return 

Method: System.Void Release()

Disassembly:
	0x033E24D8 LDP X22, X21, [X31 + 0x30]
	0x033E24DC LDP X24, X23, [X31 + 0x20]

ISIL:
	001 Move X0, [X0+16]
	002 Call 0x1C4CEB4
	003 Return 

Method: System.Void .ctor()

Disassembly:
	0x033E24E8 RET
	0x033E24EC STR W22, [X31 + 0x8]
	0x033E24F0 ADRP X0, 0xD11000
	0x033E24F4 LDR X0, [X0 + 0x758]
	0x033E24F8 BL 0x1C16D08
	0x033E24FC ADD X1, X31, 0x8
	0x033E2500 BL 0x1C16E04
	0x033E2504 MOV X19, X0
	0x033E2508 ADRP X0, 0xD40000
	0x033E250C LDR X0, [X0 + 0xEB0]
	0x033E2510 BL 0x1C16D08
	0x033E2514 BL 0x19903D0
	0x033E2518 ADRP X0, 0xD4B000
	0x033E251C LDR X0, [X0 + 0x188]
	0x033E2520 BL 0x1C16D08
	0x033E2524 BL 0x33E16D4
	0x033E2528 MOV X20, X0
	0x033E252C ADRP X0, 0xD19000
	0x033E2530 LDR X0, [X0 + 0x760]
	0x033E2534 BL 0x1C16D08
	0x033E2538 BL 0x1C16F10
	0x033E253C MOV X21, X0
	0x033E2540 ADRP X0, 0xD4B000
	0x033E2544 LDR X0, [X0 + 0x190]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xFFC000
	006 Move X21, 0xD18000
	007 Move W8, [X20+930]
	008 Move X21, [X21+3264]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD18000
	015 Move X0, [X0+3264]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+930], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move [X19+16], X20
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Object..ctor, X0
	032 Return 

