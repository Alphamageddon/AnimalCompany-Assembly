Type: System.Threading.LazyInitializer

Method: T EnsureInitialized(ref T target)

Disassembly:
	0x022139EC BLR X8
	0x022139F0 MOV X19, X31
	0x022139F4 LDRB W8, [X31 + 0x2C]
	0x022139F8 CBZ W8, 0x2213A08
	0x022139FC MOV X0, X20
	0x02213A00 MOV X1, X31
	0x02213A04 BL 0x33E14E4
	0x02213A08 CBNZ X19, 0x2213A20
	0x02213A0C LDP X20, X19, [X31 + 0x50]
	0x02213A10 LDP X22, X21, [X31 + 0x40]
	0x02213A14 LDP X30, X23, [X31 + 0x30]
	0x02213A18 ADD X31, X31, 0x60
	0x02213A1C RET
	0x02213A20 MOV X0, X19
	0x02213A24 BL 0x1C16F18
	0x02213A28 B 0x2213A2C
	0x02213A2C MOV X21, X0
	0x02213A30 CMP W1, 0x1
	0x02213A34 B.NE 0x2213A4C
	0x02213A38 MOV X0, X21
	0x02213A3C BL 0x3EB1AD0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {12}
	010 Move X0, X19
	011 Call 0x1C5D6E0
	012 Move X21, [X20]
	013 Call 0x1C17D44
	014 Compare X21, 0
	015 JumpIfEqual {22}
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X0, X21
	019 Move X30, [X31+32]
	020 Move X21, [X31+40]
	021 Return X0
	022 Move X8, [X19+56]
	023 Move X0, X20
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X1, [X8+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call 0x2213B18, X0
	030 Return X0

Method: T EnsureInitializedCore(ref T target)

Disassembly:
	0x02213B18 ADRP X0, 0x1EE8000
	0x02213B1C LDR X0, [X0 + 0x8B0]
	0x02213B20 BL 0x1C16CF4
	0x02213B24 ADRP X0, 0x1EE8000
	0x02213B28 LDR X0, [X0 + 0xA68]
	0x02213B2C BL 0x1C16CF4
	0x02213B30 MOVZ W8, 0x1
	0x02213B34 STRB W8, [X22 + 0x858]
	0x02213B38 LDR X0, [X21]
	0x02213B3C ADRP X21, 0x1EE8000
	0x02213B40 LDR W8, [X0 + 0xE0]
	0x02213B44 LDR X21, [X21 + 0xA68]
	0x02213B48 CBNZ W8, 0x2213B50
	0x02213B4C BL 0x1C16DFC
	0x02213B50 LDR X2, [X21]
	0x02213B54 MOV X0, X20
	0x02213B58 MOV X1, X19
	0x02213B5C LDP X20, X19, [X31 + 0x20]
	0x02213B60 LDP X22, X21, [X31 + 0x10]
	0x02213B64 MOV X3, X31
	0x02213B68 LDR X30, [X31], #0x30
	0x02213B6C B 0x1E3F018
	0x02213B70 STR X30, [X31 - 0x30]!
	0x02213B74 STP X22, X21, [X31 + 0x10]
	0x02213B78 STP X20, X19, [X31 + 0x20]
	0x02213B7C ADRP X22, 0x21C6000
	0x02213B80 ADRP X21, 0x1EE8000
	0x02213B84 LDRB W8, [X22 + 0x859]
	0x02213B88 LDR X21, [X21 + 0x8B0]
	0x02213B8C MOV X19, X1
	0x02213B90 MOV X20, X0
	0x02213B94 TBNZ X8, 0x0, 0x2213BB8
	0x02213B98 ADRP X0, 0x1EE8000
	0x02213B9C LDR X0, [X0 + 0x8B0]
	0x02213BA0 BL 0x1C16CF4
	0x02213BA4 ADRP X0, 0x1EE8000
	0x02213BA8 LDR X0, [X0 + 0xA68]
	0x02213BAC BL 0x1C16CF4
	0x02213BB0 MOVZ W8, 0x1
	0x02213BB4 STRB W8, [X22 + 0x859]
	0x02213BB8 LDR X0, [X21]
	0x02213BBC ADRP X21, 0x1EE8000
	0x02213BC0 LDR W8, [X0 + 0xE0]
	0x02213BC4 LDR X21, [X21 + 0xA68]
	0x02213BC8 CBNZ W8, 0x2213BD0
	0x02213BCC BL 0x1C16DFC
	0x02213BD0 LDR X2, [X21]
	0x02213BD4 MOV X0, X20
	0x02213BD8 MOV X1, X19
	0x02213BDC LDP X20, X19, [X31 + 0x20]
	0x02213BE0 LDP X22, X21, [X31 + 0x10]
	0x02213BE4 MOV X3, X31
	0x02213BE8 LDR X30, [X31], #0x30
	0x02213BEC B 0x1E3F5A4
	0x02213BF0 STR X30, [X31 - 0x30]!
	0x02213BF4 STP X22, X21, [X31 + 0x10]
	0x02213BF8 STP X20, X19, [X31 + 0x20]
	0x02213BFC ADRP X22, 0x21C6000
	0x02213C00 ADRP X21, 0x1EE8000
	0x02213C04 LDRB W8, [X22 + 0x85A]
	0x02213C08 LDR X21, [X21 + 0x8B0]
	0x02213C0C MOV X19, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X1
	006 Move X20, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {12}
	009 Move X0, X19
	010 Call 0x1C5D6E0
	011 Move X8, [X19+56]
	012 Move X0, [X8+8]
	013 Call Activator.CreateInstance
	014 Move X1, X0
	015 Move X0, X20
	016 Move X2, X31
	017 Call 0x1C25138
	018 Move X0, [X20]
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Return X0
	023 Move X20, X0
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X20
	026 Call 0x3EB2AD0
	027 Move X20, X0
	028 Move X0, 0x1F0A000
	029 Move X0, [X0+40]
	030 Call 0x1C17D08
	031 Move X8, [X20]
	032 Move X1, [X8]
	033 Call 0x1C18270
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {54}
	038 Call 0x3EB2AE0
	039 Move X0, 0x1F0A000
	040 Move X0, [X0+48]
	041 Call 0x1C17D08
	042 Call 0x1C17F10
	043 Move X20, X0
	044 Move X0, 0x1F0A000
	045 Move X0, [X0+56]
	046 Call 0x1C17D08
	047 Move X1, X0
	048 Move X0, X20
	049 Move X2, X31
	050 Call MissingMemberException..ctor, X0, X1
	051 Move X0, X20
	052 Move X1, X19
	053 Call 0x1C17DEC
	054 Move W0, 8
	055 Call 0x3EB2AF0
	056 Move X8, [X20]
	057 Move [X0], X8
	058 Move X1, 0x1CA2000
	059 Add X1, X1, 3672
	060 Move X2, X31
	061 Call 0x3EB2B00
	062 Move X20, X0
	063 Call 0x3EB2AE0
	064 Move X0, X20
	065 Call 0x1D2D690
	066 Call 0x1991590

Method: T EnsureInitialized(ref T target, System.Func`1<T> valueFactory)

Disassembly:
	0x02213A40 LDR X19, [X0]
	0x02213A44 BL 0x3EB1AE0
	0x02213A48 B 0x22139F4
	0x02213A4C MOV X19, X31
	0x02213A50 B 0x2213A58
	0x02213A54 MOV X21, X0
	0x02213A58 LDRB W8, [X31 + 0x2C]
	0x02213A5C CBZ W8, 0x2213A6C
	0x02213A60 MOV X0, X20
	0x02213A64 MOV X1, X31
	0x02213A68 BL 0x33E14E4
	0x02213A6C CBNZ X19, 0x2213A78
	0x02213A70 MOV X0, X21
	0x02213A74 BL 0x1D2C690
	0x02213A78 MOV X0, X19
	0x02213A7C BL 0x1C16F18
	0x02213A80 BL 0x1990590
	0x02213A84 STR X30, [X31 - 0x30]!
	0x02213A88 STP X22, X21, [X31 + 0x10]
	0x02213A8C STP X20, X19, [X31 + 0x20]
	0x02213A90 ADRP X21, 0x21C6000
	0x02213A94 ADRP X22, 0x1EE8000
	0x02213A98 LDRB W8, [X21 + 0x857]
	0x02213A9C LDR X22, [X22 + 0x8B0]
	0x02213AA0 MOV X19, X1
	0x02213AA4 MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X20, X2
	008 Move X19, X1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {14}
	012 Move X0, X20
	013 Call 0x1C5D6E0
	014 Move X22, [X21]
	015 Call 0x1C17D44
	016 Compare X22, 0
	017 JumpIfEqual {25}
	018 Move X0, X22
	019 Move X20, [X31+32]
	020 Move X19, [X31+40]
	021 Move X22, [X31+16]
	022 Move X21, [X31+24]
	023 Move X30, [X31+48]
	024 Return X0
	025 Move X8, [X20+56]
	026 Move X0, X21
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X2, [X8+32]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Call 0x2213C10, X0, X1
	035 Return X0

Method: T EnsureInitializedCore(ref T target, System.Func`1<T> valueFactory)

Disassembly:
	0x02213C10 MOV X20, X0
	0x02213C14 TBNZ X8, 0x0, 0x2213C38
	0x02213C18 ADRP X0, 0x1EE8000
	0x02213C1C LDR X0, [X0 + 0x8B0]
	0x02213C20 BL 0x1C16CF4
	0x02213C24 ADRP X0, 0x1EE8000
	0x02213C28 LDR X0, [X0 + 0xA68]
	0x02213C2C BL 0x1C16CF4
	0x02213C30 MOVZ W8, 0x1
	0x02213C34 STRB W8, [X22 + 0x85A]
	0x02213C38 LDR X0, [X21]
	0x02213C3C ADRP X21, 0x1EE8000
	0x02213C40 LDR W8, [X0 + 0xE0]
	0x02213C44 LDR X21, [X21 + 0xA68]
	0x02213C48 CBNZ W8, 0x2213C50
	0x02213C4C BL 0x1C16DFC
	0x02213C50 LDR X2, [X21]
	0x02213C54 MOV X0, X20
	0x02213C58 MOV X1, X19
	0x02213C5C LDP X20, X19, [X31 + 0x20]
	0x02213C60 LDP X22, X21, [X31 + 0x10]
	0x02213C64 MOV X3, X31
	0x02213C68 LDR X30, [X31], #0x30
	0x02213C6C B 0x1E3F2E0
	0x02213C70 STR X30, [X31 - 0x30]!
	0x02213C74 STP X22, X21, [X31 + 0x10]
	0x02213C78 STP X20, X19, [X31 + 0x20]
	0x02213C7C ADRP X22, 0x21C6000
	0x02213C80 ADRP X21, 0x1EE8000
	0x02213C84 LDRB W8, [X22 + 0x85B]
	0x02213C88 LDR X21, [X21 + 0x8B0]
	0x02213C8C MOV X19, X1
	0x02213C90 MOV X20, X0
	0x02213C94 TBNZ X8, 0x0, 0x2213CB8
	0x02213C98 ADRP X0, 0x1EE8000
	0x02213C9C LDR X0, [X0 + 0x8B0]
	0x02213CA0 BL 0x1C16CF4
	0x02213CA4 ADRP X0, 0x1EE8000
	0x02213CA8 LDR X0, [X0 + 0xA60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X2
	007 Move X21, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X19
	012 Call 0x1C5D6E0
	013 Compare X21, 0
	014 JumpIfEqual {31}
	015 Move X8, [X21+24]
	016 Move X0, [X21+64]
	017 Move X1, [X21+40]
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Compare X0, 0
	020 JumpIfEqual {32}
	021 Move X1, X0
	022 Move X0, X20
	023 Move X2, X31
	024 Call 0x1C25138
	025 Move X0, [X20]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0
	031 Call 0x1C17F20
	032 Move X0, 0x1EE1000
	033 Move X0, [X0+1456]
	034 Call 0x1C17D08
	035 Call 0x1C17F10
	036 Move X20, X0
	037 Move X0, 0x1F0A000
	038 Move X0, [X0+64]
	039 Call 0x1C17D08
	040 Move X1, X0
	041 Move X0, X20
	042 Move X2, X31
	043 Call InvalidOperationException..ctor, X0, X1
	044 Move X0, X20
	045 Move X1, X19
	046 Call 0x1C17DEC

Method: T EnsureInitialized(ref T target, ref System.Object syncLock, System.Func`1<T> valueFactory)

Disassembly:
	0x02213AA8 TBNZ X8, 0x0, 0x2213AC0
	0x02213AAC ADRP X0, 0x1EE8000
	0x02213AB0 LDR X0, [X0 + 0x8B0]
	0x02213AB4 BL 0x1C16CF4
	0x02213AB8 MOVZ W8, 0x1
	0x02213ABC STRB W8, [X21 + 0x857]
	0x02213AC0 LDR X0, [X22]
	0x02213AC4 LDR W8, [X0 + 0xE0]
	0x02213AC8 CBNZ W8, 0x2213AD0
	0x02213ACC BL 0x1C16DFC
	0x02213AD0 MOV X0, X20
	0x02213AD4 MOV X1, X19
	0x02213AD8 LDP X20, X19, [X31 + 0x20]
	0x02213ADC LDP X22, X21, [X31 + 0x10]
	0x02213AE0 MOV X2, X31
	0x02213AE4 MOV X3, X31
	0x02213AE8 LDR X30, [X31], #0x30
	0x02213AEC B 0x1E3F018
	0x02213AF0 STR X30, [X31 - 0x30]!
	0x02213AF4 STP X22, X21, [X31 + 0x10]
	0x02213AF8 STP X20, X19, [X31 + 0x20]
	0x02213AFC ADRP X22, 0x21C6000
	0x02213B00 ADRP X21, 0x1EE8000
	0x02213B04 LDRB W8, [X22 + 0x858]
	0x02213B08 LDR X21, [X21 + 0x8B0]
	0x02213B0C MOV X19, X1
	0x02213B10 MOV X20, X0
	0x02213B14 TBNZ X8, 0x0, 0x2213B38

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X3+56]
	008 Move X21, X3
	009 Move X19, X2
	010 Move X20, X1
	011 Move X22, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {16}
	014 Move X0, X21
	015 Call 0x1C5D6E0
	016 Move X23, [X22]
	017 Call 0x1C17D44
	018 Compare X23, 0
	019 JumpIfEqual {28}
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X22, [X31+16]
	023 Move X21, [X31+24]
	024 Move X0, X23
	025 Move X30, [X31+48]
	026 Move X23, [X31+56]
	027 Return X0
	028 Move X8, [X21+56]
	029 Move X0, X22
	030 Move X1, X20
	031 Move X2, X19
	032 Move X3, [X8+32]
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Move X23, [X31+56]
	039 Call 0x2213CAC, X0, X1, X2
	040 Return X0

Method: T EnsureInitializedCore(ref T target, ref System.Object syncLock, System.Func`1<T> valueFactory)

Disassembly:
	0x02213CAC BL 0x1C16CF4
	0x02213CB0 MOVZ W8, 0x1
	0x02213CB4 STRB W8, [X22 + 0x85B]
	0x02213CB8 LDR X0, [X21]
	0x02213CBC ADRP X21, 0x1EE8000
	0x02213CC0 LDR W8, [X0 + 0xE0]
	0x02213CC4 LDR X21, [X21 + 0xA60]
	0x02213CC8 CBNZ W8, 0x2213CD0
	0x02213CCC BL 0x1C16DFC
	0x02213CD0 LDR X2, [X21]
	0x02213CD4 MOV X0, X20
	0x02213CD8 MOV X1, X19
	0x02213CDC LDP X20, X19, [X31 + 0x20]
	0x02213CE0 LDP X22, X21, [X31 + 0x10]
	0x02213CE4 MOV X3, X31
	0x02213CE8 LDR X30, [X31], #0x30
	0x02213CEC B 0x1E3F018
	0x02213CF0 STR X30, [X31 - 0x30]!
	0x02213CF4 STP X22, X21, [X31 + 0x10]
	0x02213CF8 STP X20, X19, [X31 + 0x20]
	0x02213CFC ADRP X22, 0x21C6000
	0x02213D00 ADRP X21, 0x1EE8000
	0x02213D04 LDRB W8, [X22 + 0x85C]
	0x02213D08 LDR X21, [X21 + 0x8B0]
	0x02213D0C MOV X19, X1
	0x02213D10 MOV X20, X0
	0x02213D14 TBNZ X8, 0x0, 0x2213D38
	0x02213D18 ADRP X0, 0x1EE8000
	0x02213D1C LDR X0, [X0 + 0x8B0]
	0x02213D20 BL 0x1C16CF4
	0x02213D24 ADRP X0, 0x1EE8000
	0x02213D28 LDR X0, [X0 + 0xA60]
	0x02213D2C BL 0x1C16CF4
	0x02213D30 MOVZ W8, 0x1
	0x02213D34 STRB W8, [X22 + 0x85C]
	0x02213D38 LDR X0, [X21]
	0x02213D3C ADRP X21, 0x1EE8000
	0x02213D40 LDR W8, [X0 + 0xE0]
	0x02213D44 LDR X21, [X21 + 0xA60]
	0x02213D48 CBNZ W8, 0x2213D50
	0x02213D4C BL 0x1C16DFC
	0x02213D50 LDR X2, [X21]
	0x02213D54 MOV X0, X20
	0x02213D58 MOV X1, X19
	0x02213D5C LDP X20, X19, [X31 + 0x20]
	0x02213D60 LDP X22, X21, [X31 + 0x10]
	0x02213D64 MOV X3, X31
	0x02213D68 LDR X30, [X31], #0x30
	0x02213D6C B 0x1E3F5A4
	0x02213D70 STR X30, [X31 - 0x30]!
	0x02213D74 STP X22, X21, [X31 + 0x10]
	0x02213D78 STP X20, X19, [X31 + 0x20]
	0x02213D7C ADRP X22, 0x21C6000
	0x02213D80 ADRP X21, 0x1EE8000
	0x02213D84 LDRB W8, [X22 + 0x85D]
	0x02213D88 LDR X21, [X21 + 0x8B0]
	0x02213D8C MOV X19, X1
	0x02213D90 MOV X20, X0
	0x02213D94 TBNZ X8, 0x0, 0x2213DB8
	0x02213D98 ADRP X0, 0x1EE8000
	0x02213D9C LDR X0, [X0 + 0x8B0]
	0x02213DA0 BL 0x1C16CF4
	0x02213DA4 ADRP X0, 0x1EE8000
	0x02213DA8 LDR X0, [X0 + 0xA60]
	0x02213DAC BL 0x1C16CF4
	0x02213DB0 MOVZ W8, 0x1
	0x02213DB4 STRB W8, [X22 + 0x85D]
	0x02213DB8 LDR X0, [X21]
	0x02213DBC ADRP X21, 0x1EE8000
	0x02213DC0 LDR W8, [X0 + 0xE0]
	0x02213DC4 LDR X21, [X21 + 0xA60]
	0x02213DC8 CBNZ W8, 0x2213DD0
	0x02213DCC BL 0x1C16DFC
	0x02213DD0 LDR X2, [X21]
	0x02213DD4 MOV X0, X20
	0x02213DD8 MOV X1, X19
	0x02213DDC LDP X20, X19, [X31 + 0x20]
	0x02213DE0 LDP X22, X21, [X31 + 0x10]
	0x02213DE4 MOV X3, X31
	0x02213DE8 LDR X30, [X31], #0x30
	0x02213DEC B 0x1E3F2E0
	0x02213DF0 STR X30, [X31 - 0x30]!
	0x02213DF4 STP X22, X21, [X31 + 0x10]
	0x02213DF8 STP X20, X19, [X31 + 0x20]
	0x02213DFC ADRP X21, 0x21C6000
	0x02213E00 ADRP X22, 0x1EE8000
	0x02213E04 LDRB W8, [X21 + 0x85E]
	0x02213E08 LDR X22, [X22 + 0x8B0]
	0x02213E0C MOV X19, X1
	0x02213E10 MOV X20, X0
	0x02213E14 TBNZ X8, 0x0, 0x2213E2C
	0x02213E18 ADRP X0, 0x1EE8000
	0x02213E1C LDR X0, [X0 + 0x8B0]
	0x02213E20 BL 0x1C16CF4
	0x02213E24 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X3+56]
	009 Move X21, X3
	010 Move X22, X2
	011 Move X20, X1
	012 Move X19, X0
	013 Compare X8, 0
	014 JumpIfNotEqual {17}
	015 Move X0, X21
	016 Call 0x1C5D6E0
	017 Move X0, X20
	018 Move X1, X31
	019 Call LazyInitializer.EnsureLockInitialized, X0
	020 Move X20, X0
	021 Move [X31+12], W31
	022 Add X1, X31, 12
	023 Move X2, X31
	024 Call Monitor.Enter, X0, X1
	025 Move X23, [X19]
	026 Call 0x1C17D44
	027 Compare X23, 0
	028 JumpIfNotEqual {40}
	029 Compare X22, 0
	030 JumpIfEqual {65}
	031 Move X0, [X22+64]
	032 Move X1, [X22+40]
	033 Move X8, [X22+24]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X22, X0
	036 Call 0x1C17D44
	037 Move [X19], X22
	038 Compare X22, 0
	039 JumpIfEqual {66}
	040 Move X21, X31
	041 Move W22, 5
	042 Move W8, [X31+12]
	043 Compare W8, 0
	044 JumpIfEqual {48}
	045 Move X0, X20
	046 Move X1, X31
	047 Call Monitor.Exit, X0
	048 Compare X21, 0
	049 JumpIfNotEqual {63}
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Compare W22, 0
	052 JumpIfNotEqual {54}
	053 Move X8, [X19]
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X30, [X31+16]
	059 Move X23, [X31+24]
	060 Move X0, X8
	061 Add X31, X31, 64
	062 Return X0
	063 Move X0, X21
	064 Call 0x1C17F18
	065 Call 0x1C17F20
	066 Move X0, 0x1EE1000
	067 Move X0, [X0+1456]
	068 Call 0x1C17D08
	069 Call 0x1C17F10
	070 Move X22, X0
	071 Move X0, 0x1F0A000
	072 Move X0, [X0+64]
	073 Call 0x1C17D08
	074 Move X1, X0
	075 Move X0, X22
	076 Move X2, X31
	077 Call InvalidOperationException..ctor, X0, X1
	078 Move X0, X22
	079 Move X1, X21
	080 Call 0x1C17DEC
	081 Move X22, X0
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X0, X22
	084 Call 0x3EB2AD0
	085 Move X21, [X0]
	086 Call 0x3EB2AE0
	087 Move W22, W31
	088 Move X21, X31
	089 Move X22, X0
	090 Move W8, [X31+12]
	091 Compare W8, 0
	092 JumpIfEqual {96}
	093 Move X0, X20
	094 Move X1, X31
	095 Call Monitor.Exit, X0
	096 Compare X21, 0
	097 JumpIfNotEqual {100}
	098 Move X0, X22
	099 Call 0x1D2D690
	100 Move X0, X21
	101 Call 0x1C17F18
	102 Call 0x1991590

Method: System.Object EnsureLockInitialized(ref System.Object syncLock)

Disassembly:
	0x033DDBC0 CSET W0, EQ
	0x033DDBC4 LDR X30, [X31], #0x30
	0x033DDBC8 RET
	0x033DDBCC STR X30, [X31 - 0x30]!
	0x033DDBD0 STP X22, X21, [X31 + 0x10]
	0x033DDBD4 STP X20, X19, [X31 + 0x20]
	0x033DDBD8 ADRP X21, 0x1000000
	0x033DDBDC ADRP X22, 0xD1E000
	0x033DDBE0 LDRB W8, [X21 + 0x370]
	0x033DDBE4 LDR X22, [X22 + 0x7D8]
	0x033DDBE8 MOV X19, X1
	0x033DDBEC MOV X20, X0
	0x033DDBF0 TBNZ X8, 0x0, 0x33DDC08
	0x033DDBF4 ADRP X0, 0xD1E000
	0x033DDBF8 LDR X0, [X0 + 0x7D8]
	0x033DDBFC BL 0x1C16CF4
	0x033DDC00 MOVZ W8, 0x1
	0x033DDC04 STRB W8, [X21 + 0x370]
	0x033DDC08 LDR X0, [X22]
	0x033DDC0C LDR W8, [X0 + 0xE0]
	0x033DDC10 CBNZ W8, 0x33DDC18
	0x033DDC14 BL 0x1C16DFC
	0x033DDC18 CMP X20, X19
	0x033DDC1C LDP X20, X19, [X31 + 0x20]
	0x033DDC20 LDP X22, X21, [X31 + 0x10]
	0x033DDC24 CSET W0, NE
	0x033DDC28 LDR X30, [X31], #0x30
	0x033DDC2C RET
	0x033DDC30 STP X30, X21, [X31 - 0x20]!
	0x033DDC34 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1001000
	005 Move W8, [X20+863]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD1D000
	012 Move X0, [X0+3264]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+863], W8
	016 Move X0, [X19]
	017 Compare X0, 0
	018 JumpIfNotEqual {34}
	019 Move X8, 0xD1D000
	020 Move X8, [X8+3264]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call Object..ctor, X0
	026 Move X0, X19
	027 Move X1, X20
	028 Move X2, X31
	029 Move X3, X31
	030 Call Interlocked.CompareExchange, X0, X1, X2
	031 Compare X0, 0
	032 JumpIfNotEqual {34}
	033 Move X0, [X19]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return X0

