Type: System.Threading.EventWaitHandle

Method: System.Void .ctor(System.Boolean initialState, System.Threading.EventResetMode mode)

Disassembly:
	0x033DDBB4 CMP X20, X19
	0x033DDBB8 LDP X20, X19, [X31 + 0x20]
	0x033DDBBC LDP X22, X21, [X31 + 0x10]

ISIL:
	001 And W1, W1, 1
	002 Move X3, X31
	003 Call EventWaitHandle..ctor, X0, X1, X2, X3
	004 Return 

Method: System.Void .ctor(System.Boolean initialState, System.Threading.EventResetMode mode, System.String name)

Disassembly:
	0x033E4FA4 LDR X8, [X0]
	0x033E4FA8 CBZ X8, 0x33E4FB4
	0x033E4FAC LDR X0, [X8 + 0x10]
	0x033E4FB0 RET
	0x033E4FB4 MOV X0, X31
	0x033E4FB8 RET
	0x033E4FBC LDR X8, [X0]
	0x033E4FC0 CBZ X8, 0x33E4FCC
	0x033E4FC4 LDR X0, [X8 + 0x18]
	0x033E4FC8 RET
	0x033E4FCC MOV X0, X31
	0x033E4FD0 RET
	0x033E4FD4 ORN W8, W31, W2, 0x0
	0x033E4FD8 AND W8, W8, 0x1
	0x033E4FDC STR X1, [X0 + 0x30]
	0x033E4FE0 STRB W8, [X0 + 0x38]
	0x033E4FE4 RET
	0x033E4FE8 STR X30, [X31 - 0x20]!
	0x033E4FEC STP X20, X19, [X31 + 0x10]
	0x033E4FF0 ADRP X20, 0xFF9000
	0x033E4FF4 LDRB W8, [X20 + 0x3C5]
	0x033E4FF8 MOV X19, X0
	0x033E4FFC TBNZ X8, 0x0, 0x33E5020
	0x033E5000 ADRP X0, 0xD36000
	0x033E5004 LDR X0, [X0 + 0x580]
	0x033E5008 BL 0x1C16CF4
	0x033E500C ADRP X0, 0xD3F000
	0x033E5010 LDR X0, [X0 + 0x370]
	0x033E5014 BL 0x1C16CF4
	0x033E5018 MOVZ W8, 0x1
	0x033E501C STRB W8, [X20 + 0x3C5]
	0x033E5020 LDRB W8, [X19 + 0x30]
	0x033E5024 MOVZ W9, 0x5
	0x033E5028 ANDS W31, W8, W9, 0x0
	0x033E502C B.EQ 0x33E50D4
	0x033E5030 ADRP X8, 0xD36000
	0x033E5034 LDR X8, [X8 + 0x580]
	0x033E5038 LDR X0, [X8]
	0x033E503C BL 0x1C16F10
	0x033E5040 MOV X1, X31
	0x033E5044 MOV X20, X0
	0x033E5048 BL 0x33BDD8C
	0x033E504C CBZ X20, 0x33E50D0
	0x033E5050 LDR W8, [X20 + 0x30]
	0x033E5054 ORR W8, W8, 0x1
	0x033E5058 STR W8, [X20 + 0x30]
	0x033E505C LDR X0, [X19 + 0x10]
	0x033E5060 CBZ X0, 0x33E5070
	0x033E5064 LDR X8, [X0]
	0x033E5068 LDP X9, X1, [X8 + 0x1C8]
	0x033E506C BLR X9
	0x033E5070 STR X0, [X20 + 0x10]
	0x033E5074 LDR X8, [X19 + 0x38]
	0x033E5078 STR X8, [X20 + 0x38]
	0x033E507C LDR X8, [X19 + 0x40]
	0x033E5080 STR X8, [X20 + 0x40]
	0x033E5084 LDR X8, [X19 + 0x20]
	0x033E5088 CBZ X8, 0x33E50C0
	0x033E508C MOV X0, X19
	0x033E5090 BL 0x33E48DC
	0x033E5094 CBZ X0, 0x33E50D0
	0x033E5098 MOV X1, X31
	0x033E509C BL 0x3291F20
	0x033E50A0 CBZ X0, 0x33E50BC
	0x033E50A4 ADRP X8, 0xD3F000
	0x033E50A8 LDR X8, [X8 + 0x370]
	0x033E50AC LDR X1, [X8]
	0x033E50B0 LDR X8, [X0]
	0x033E50B4 CMP X8, X1
	0x033E50B8 B.NE 0x33E5124
	0x033E50BC STR X0, [X20 + 0x20]
	0x033E50C0 MOV X0, X20
	0x033E50C4 LDP X20, X19, [X31 + 0x10]
	0x033E50C8 LDR X30, [X31], #0x20
	0x033E50CC RET
	0x033E50D0 BL 0x1C16F20
	0x033E50D4 ADRP X0, 0xD48000
	0x033E50D8 LDR X0, [X0 + 0x2D0]
	0x033E50DC BL 0x1C16D08
	0x033E50E0 MOV X1, X31
	0x033E50E4 BL 0x33BDD84
	0x033E50E8 MOV X19, X0
	0x033E50EC ADRP X0, 0xD0E000
	0x033E50F0 LDR X0, [X0 + 0x5B0]
	0x033E50F4 BL 0x1C16D08
	0x033E50F8 BL 0x1C16F10
	0x033E50FC MOV X1, X19
	0x033E5100 MOV X2, X31
	0x033E5104 MOV X20, X0
	0x033E5108 BL 0x337DF1C
	0x033E510C ADRP X0, 0xD48000
	0x033E5110 LDR X0, [X0 + 0x2D8]
	0x033E5114 BL 0x1C16D08
	0x033E5118 MOV X1, X0
	0x033E511C MOV X0, X20
	0x033E5120 BL 0x1C16DEC
	0x033E5124 BL 0x1C171E0
	0x033E5128 STP X30, X21, [X31 - 0x20]!
	0x033E512C STP X20, X19, [X31 + 0x10]
	0x033E5130 ADRP X20, 0xFF8000
	0x033E5134 ADRP X21, 0xD36000
	0x033E5138 LDRB W8, [X20 + 0x3C6]
	0x033E513C LDR X21, [X21 + 0x580]
	0x033E5140 MOV X19, X0
	0x033E5144 TBNZ X8, 0x0, 0x33E5168
	0x033E5148 ADRP X0, 0xD36000
	0x033E514C LDR X0, [X0 + 0x580]
	0x033E5150 BL 0x1C16CF4
	0x033E5154 ADRP X0, 0xD3F000
	0x033E5158 LDR X0, [X0 + 0x370]
	0x033E515C BL 0x1C16CF4
	0x033E5160 MOVZ W8, 0x1
	0x033E5164 STRB W8, [X20 + 0x3C6]
	0x033E5168 LDR X0, [X21]
	0x033E516C BL 0x1C16F10
	0x033E5170 MOV X1, X31
	0x033E5174 MOV X20, X0
	0x033E5178 BL 0x33BDD8C
	0x033E517C CBZ X20, 0x33E5218
	0x033E5180 LDR V0, [X19 + 0x1]
	0x033E5184 STR V0, [X20 + 0x1]
	0x033E5188 LDR X8, [X19 + 0x20]
	0x033E518C CBZ X8, 0x33E51C4
	0x033E5190 MOV X0, X19
	0x033E5194 BL 0x33E48DC
	0x033E5198 CBZ X0, 0x33E5218
	0x033E519C MOV X1, X31
	0x033E51A0 BL 0x3291F20
	0x033E51A4 CBZ X0, 0x33E51C0
	0x033E51A8 ADRP X8, 0xD3F000
	0x033E51AC LDR X8, [X8 + 0x370]
	0x033E51B0 LDR X1, [X8]
	0x033E51B4 LDR X8, [X0]
	0x033E51B8 CMP X8, X1
	0x033E51BC B.NE 0x33E521C
	0x033E51C0 STR X0, [X20 + 0x20]
	0x033E51C4 LDR X8, [X19 + 0x28]
	0x033E51C8 CBZ X8, 0x33E51E4
	0x033E51CC MOV X0, X19
	0x033E51D0 BL 0x33E4948
	0x033E51D4 CBZ X0, 0x33E5218
	0x033E51D8 MOV X1, X31
	0x033E51DC BL 0x32914BC
	0x033E51E0 STR X0, [X20 + 0x28]
	0x033E51E4 LDR X8, [X19 + 0x38]
	0x033E51E8 LDR W9, [X20 + 0x30]
	0x033E51EC MOV X0, X20
	0x033E51F0 STR X8, [X20 + 0x38]
	0x033E51F4 LDR X8, [X19 + 0x40]
	0x033E51F8 STR X8, [X20 + 0x40]
	0x033E51FC LDR W8, [X19 + 0x30]
	0x033E5200 UBFM W8, W8, 0x1, 0x1F
	0x033E5204 BFM W9, W8, 0x1F, 0x0
	0x033E5208 STR W9, [X20 + 0x30]
	0x033E520C LDP X20, X19, [X31 + 0x10]
	0x033E5210 LDP X30, X21, [X31], #0x20
	0x033E5214 RET
	0x033E5218 BL 0x1C16F20
	0x033E521C BL 0x1C171E0
	0x033E5220 STR X30, [X31 - 0x10]!
	0x033E5224 BL 0x33E3C68
	0x033E5228 CBZ X0, 0x33E524C
	0x033E522C LDR X8, [X0 + 0x30]
	0x033E5230 CBZ X8, 0x33E5240
	0x033E5234 LDRB W8, [X8 + 0x30]
	0x033E5238 UBFM W0, W8, 0x1, 0x1
	0x033E523C B 0x33E5244
	0x033E5240 MOV W0, W31
	0x033E5244 LDR X30, [X31], #0x10
	0x033E5248 RET
	0x033E524C BL 0x1C16F20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xFFA000
	009 Move X23, 0xD4A000
	010 Move W8, [X24+954]
	011 Move X23, [X23+616]
	012 Move X19, X3
	013 Move W22, W2
	014 Move W21, W1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0xD4A000
	021 Move X0, [X0+624]
	022 Call 0x1C17CF4
	023 Move X0, 0xD4A000
	024 Move X0, [X0+616]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+954], W8
	028 Move X0, [X23]
	029 Move [X31+12], W31
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Move X1, X31
	036 Call WaitHandle..ctor, X0
	037 Compare X19, 0
	038 JumpIfEqual {41}
	039 Move W8, [X19+16]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Compare W22, 0
	042 JumpIfEqual {47}
	043 NotImplemented "Instruction CMP not yet implemented."
	044 And W1, W21, 1
	045 Add X3, X31, 12
	046 Move W0, 1
	047 And W1, W21, 1
	048 Add X3, X31, 12
	049 Move W0, W31
	050 Move X2, X19
	051 Move X4, X31
	052 Call NativeEventCalls.CreateEvent_internal, X0, X1, X2, X3
	053 Move X8, 0xD49000
	054 Move X8, [X8+624]
	055 Move X22, X0
	056 Move X8, [X8]
	057 Move X0, X8
	058 Call 0x1C17F10
	059 Move W2, 1
	060 Move X1, X22
	061 Move X3, X31
	062 Move X21, X0
	063 Call SafeWaitHandle..ctor, X0, X1, X2
	064 Compare X21, 0
	065 JumpIfEqual {134}
	066 Move X8, [X21]
	067 Move X0, X21
	068 Move X9, [X8+392]
	069 Move X1, [X8+400]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {117}
	075 Move X0, X21
	076 Move X1, X31
	077 Call SafeHandle.SetHandleAsInvalid, X0
	078 Compare X19, 0
	079 JumpIfEqual {113}
	080 Move W8, [X19+16]
	081 Move W0, [X31+12]
	082 Compare W8, 0
	083 JumpIfEqual {114}
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X0, 0xD0F000
	086 Move X0, [X0+2512]
	087 Call 0x1C17D08
	088 Move W1, 1
	089 Call 0x1C17D6C
	090 Move X20, X0
	091 Call 0x19913C0
	092 Move X0, X20
	093 Move X1, X19
	094 Call 0x19990B4
	095 Move X0, X20
	096 Move X1, X31
	097 Move X2, X19
	098 Call 0x1994444
	099 Move X0, 0xD49000
	100 Move X0, [X0+632]
	101 Call 0x1C17D08
	102 Move X1, X20
	103 Move X2, X31
	104 Call Environment.GetResourceString, X0, X1
	105 Move X19, X0
	106 Move X0, 0xD49000
	107 Move X0, [X0+640]
	108 Call 0x1C17D08
	109 Call 0x1C17F10
	110 Move X1, X19
	111 Move X20, X0
	112 Call WaitHandleCannotBeOpenedException..ctor, X0, X1
	113 Move W0, [X31+12]
	114 Move X1, X19
	115 Move X2, X31
	116 Call __Error.WinIOError, X0, X1
	117 Move X0, [X23]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move X0, X20
	123 Move X1, X21
	124 Move X2, X31
	125 Call WaitHandle.SetHandleInternal, X0, X1
	126 Move X20, [X31+48]
	127 Move X19, [X31+56]
	128 Move X22, [X31+32]
	129 Move X21, [X31+40]
	130 Move X24, [X31+16]
	131 Move X23, [X31+24]
	132 Move X30, [X31+64]
	133 Return 
	134 Call 0x1C17F20
	135 Move X0, 0xD0F000
	136 Move X0, [X0+2512]
	137 Call 0x1C17D08
	138 Move W1, 1
	139 Call 0x1C17D6C
	140 Move X20, X0
	141 Call 0x19913C0
	142 Move X0, X20
	143 Move X1, X19
	144 Call 0x19990B4
	145 Move X0, X20
	146 Move X1, X31
	147 Move X2, X19
	148 Call 0x1994444
	149 Move X0, 0xD49000
	150 Move X0, [X0+648]
	151 Move X0, 0xD0F000
	152 Move X0, [X0+2512]
	153 Call 0x1C17D08
	154 Move W1, 1
	155 Call 0x1C17D6C
	156 Move X20, X0
	157 Call 0x19913C0
	158 Move X0, X20
	159 Move X1, X19
	160 Call 0x19990B4
	161 Move X0, X20
	162 Move X1, X31
	163 Move X2, X19
	164 Call 0x1994444
	165 Move X0, 0xD3F000
	166 Move X0, [X0+2392]
	167 Call 0x1C17D08
	168 Move X1, X20
	169 Move X2, X31
	170 Call Environment.GetResourceString, X0, X1
	171 Move X19, X0
	172 Move X0, 0xD17000
	173 Move X0, [X0+1400]
	174 Call 0x1C17D08
	175 Call 0x1C17F10
	176 Move X1, X19
	177 Move X2, X31
	178 Move X20, X0
	179 Call ArgumentException..ctor, X0, X1
	180 Move X0, 0xD49000
	181 Move X0, [X0+656]
	182 Call 0x1C17D08
	183 Move X1, X0
	184 Move X0, X20
	185 Call 0x1C17DEC

Method: System.Boolean Reset()

Disassembly:
	0x033E307C MOV W2, W31
	0x033E3080 BL 0x1C5C788
	0x033E3084 B 0x33E3094
	0x033E3088 LDRSW X9, [X10]
	0x033E308C ADD X8, X8, X9, 0x4, LSL
	0x033E3090 ADD X0, X8, 0x138
	0x033E3094 LDP X8, X1, [X0]
	0x033E3098 MOV X0, X22
	0x033E309C BLR X8
	0x033E30A0 MOV W26, W31
	0x033E30A4 CBZ X21, 0x33E2D38
	0x033E30A8 MOV X0, X21
	0x033E30AC BL 0x1C16F18
	0x033E30B0 MOV X24, X31
	0x033E30B4 TBZ X26, 0x1F, 0x33E3120
	0x033E30B8 LDR X20, [X19 + 0x40]
	0x033E30BC CBZ X20, 0x33E3120
	0x033E30C0 ADRP X10, 0xD10000
	0x033E30C4 LDR X8, [X20]
	0x033E30C8 LDR X10, [X10 + 0xE00]
	0x033E30CC LDRH W9, [X8 + 0x12E]
	0x033E30D0 LDR X1, [X10]
	0x033E30D4 CBZ X9, 0x33E30F8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+32]
	004 Call 0x1C17D44
	005 Move X0, X19
	006 Move X1, X31
	007 Call NativeEventCalls.ResetEvent, X0
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {16}
	012 Move W0, 1
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return X0
	016 Move X0, 0xD3F000
	017 Move X0, [X0+1960]
	018 Call 0x1C17D08
	019 Call 0x1C17F10
	020 Move X1, X31
	021 Move X19, X0
	022 Call IOException..ctor, X0
	023 Move X0, 0xD4B000
	024 Move X0, [X0+360]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X19
	028 Call 0x1C17DEC

Method: System.Boolean Set()

Disassembly:
	0x033DF66C STR X3, [X0 + 0x10]
	0x033DF670 RET
	0x033DF674 STR X30, [X31 - 0x20]!
	0x033DF678 STP X20, X19, [X31 + 0x10]
	0x033DF67C ADRP X20, 0xFFE000
	0x033DF680 LDRB W8, [X20 + 0x388]
	0x033DF684 MOV X19, X0
	0x033DF688 TBNZ X8, 0x0, 0x33DF6B8
	0x033DF68C ADRP X0, 0xD4E000
	0x033DF690 LDR X0, [X0 + 0x8]
	0x033DF694 BL 0x1C16CF4
	0x033DF698 ADRP X0, 0xD4E000
	0x033DF69C LDR X0, [X0 + 0x10]
	0x033DF6A0 BL 0x1C16CF4
	0x033DF6A4 ADRP X0, 0xD4E000
	0x033DF6A8 LDR X0, [X0 + 0x18]
	0x033DF6AC BL 0x1C16CF4
	0x033DF6B0 MOVZ W8, 0x1
	0x033DF6B4 STRB W8, [X20 + 0x388]
	0x033DF6B8 LDR X0, [X19 + 0x8]
	0x033DF6BC CBZ X0, 0x33DF6E4
	0x033DF6C0 ADRP X8, 0xD4E000
	0x033DF6C4 LDR X8, [X8 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+32]
	004 Call 0x1C17D44
	005 Move X0, X19
	006 Move X1, X31
	007 Call NativeEventCalls.SetEvent, X0
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {16}
	012 Move W0, 1
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return X0
	016 Move X0, 0xD43000
	017 Move X0, [X0+1960]
	018 Call 0x1C17D08
	019 Call 0x1C17F10
	020 Move X1, X31
	021 Move X19, X0
	022 Call IOException..ctor, X0
	023 Move X0, 0xD4E000
	024 Move X0, [X0+4040]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X19
	028 Call 0x1C17DEC

