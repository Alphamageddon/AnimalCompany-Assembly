Type: System.Threading.CancellationToken/<>c

Method: System.Void .cctor()

Disassembly:
	0x033DEDC4 MOV X0, X19
	0x033DEDC8 BL 0x1C16F18
	0x033DEDCC BL 0x1990590
	0x033DEDD0 MOV X0, X31
	0x033DEDD4 B 0x33C18F4
	0x033DEDD8 SUB X31, X31, 0x30
	0x033DEDDC STP X30, X21, [X31 + 0x10]
	0x033DEDE0 STP X20, X19, [X31 + 0x20]
	0x033DEDE4 ADRP X21, 0xFFF000
	0x033DEDE8 LDRB W8, [X21 + 0x383]
	0x033DEDEC MOV W19, W1
	0x033DEDF0 MOV X20, X0
	0x033DEDF4 TBNZ X8, 0x0, 0x33DEE0C
	0x033DEDF8 ADRP X0, 0xD21000
	0x033DEDFC LDR X0, [X0 + 0x470]
	0x033DEE00 BL 0x1C16CF4
	0x033DEE04 MOVZ W8, 0x1
	0x033DEE08 STRB W8, [X21 + 0x383]
	0x033DEE0C ADDS W31, W19, 0x2
	0x033DEE10 B.LE 0x33DEE54
	0x033DEE14 ADRP X8, 0xD21000
	0x033DEE18 LDR X8, [X8 + 0x470]
	0x033DEE1C LDR X0, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1000000
	005 Move X20, 0xD4F000
	006 Move W8, [X19+883]
	007 Move X20, [X20+3960]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD4F000
	013 Move X0, [X0+3960]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+883], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x033DEE20 LDR W8, [X0 + 0xE0]
	0x033DEE24 CBNZ W8, 0x33DEE2C

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <.cctor>b__26_0(System.Object obj)

Disassembly:
	0x033DEE28 BL 0x1C16DFC
	0x033DEE2C CMP W19, 0x9
	0x033DEE30 MOVN W8, 0x0
	0x033DEE34 CCMP W19, W8, 0x4, LE
	0x033DEE38 MOVZ W8, 0xA
	0x033DEE3C CSEL W1, W19, W8, EQ
	0x033DEE40 MOV X0, X20
	0x033DEE44 LDP X20, X19, [X31 + 0x20]
	0x033DEE48 LDP X30, X21, [X31 + 0x10]
	0x033DEE4C ADD X31, X31, 0x30
	0x033DEE50 B 0x33DF2F8
	0x033DEE54 STR W19, [X31 + 0xC]
	0x033DEE58 ADRP X0, 0xD15000
	0x033DEE5C LDR X0, [X0 + 0x758]
	0x033DEE60 BL 0x1C16D08
	0x033DEE64 ADD X1, X31, 0xC
	0x033DEE68 BL 0x1C16E04
	0x033DEE6C MOV X19, X0
	0x033DEE70 ADRP X0, 0xD1D000
	0x033DEE74 LDR X0, [X0 + 0x760]
	0x033DEE78 BL 0x1C16D08
	0x033DEE7C BL 0x1C16F10
	0x033DEE80 MOV X20, X0
	0x033DEE84 ADRP X0, 0xD4E000
	0x033DEE88 LDR X0, [X0 + 0xFE8]
	0x033DEE8C BL 0x1C16D08
	0x033DEE90 MOV X21, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1000000
	005 Move W8, [X20+884]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD17000
	012 Move X0, [X0+3696]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+884], W8
	016 Compare X19, 0
	017 JumpIfEqual {30}
	018 Move X8, 0xD17000
	019 Move X8, [X8+3696]
	020 Move X1, [X8]
	021 Move X8, [X19]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X2, [X19+24]
	024 Move X0, [X19+64]
	025 Move X1, [X19+40]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 CallNoReturn X2
	030 Call 0x1C17F20
	031 Move X0, X19
	032 Call 0x1C181E0

