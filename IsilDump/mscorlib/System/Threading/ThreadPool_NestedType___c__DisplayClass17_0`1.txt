Type: System.Threading.ThreadPool/<>c__DisplayClass17_0`1

Method: System.Void .ctor()

Disassembly:
	0x02373F1C LDR X9, [X8 + 0x7E8]
	0x02373F20 LDR X1, [X8 + 0x7F0]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <QueueUserWorkItem>b__0(System.Object x)

Disassembly:
	0x02373F24 BLR X9
	0x02373F28 STR X0, [X31]
	0x02373F2C STR W1, [X31 + 0x8]
	0x02373F30 LDR X8, [X19 + 0x28]
	0x02373F34 CBZ X8, 0x2373FA4
	0x02373F38 LDR X9, [X8 + 0x18]
	0x02373F3C LDR X0, [X8 + 0x40]
	0x02373F40 LDR X3, [X8 + 0x28]
	0x02373F44 ADD X1, X31, 0x0
	0x02373F48 MOV W2, W21
	0x02373F4C BLR X9
	0x02373F50 LDR X0, [X19 + 0x38]
	0x02373F54 CBZ X0, 0x2373FA4
	0x02373F58 LDR X8, [X20 + 0x20]
	0x02373F5C LDR W2, [X31 + 0x8]
	0x02373F60 LDR X1, [X31]
	0x02373F64 LDR X8, [X8 + 0xC0]
	0x02373F68 LDR X3, [X8 + 0x50]
	0x02373F6C BL 0x28B0CE4
	0x02373F70 LDR X8, [X19 + 0x20]
	0x02373F74 CBZ X8, 0x2373FA4
	0x02373F78 MOV X4, X0
	0x02373F7C LDR X9, [X8 + 0x18]
	0x02373F80 LDR X0, [X8 + 0x40]
	0x02373F84 LDR X3, [X8 + 0x28]
	0x02373F88 AND X2, X1, 0x0
	0x02373F8C MOV X1, X4
	0x02373F90 BLR X9
	0x02373F94 LDP X20, X19, [X31 + 0x20]
	0x02373F98 LDP X30, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, [X0+16]
	006 Compare X21, 0
	007 JumpIfEqual {40}
	008 Move X8, [X2+32]
	009 Move X19, X1
	010 Move X8, [X8+192]
	011 Move X20, [X8+16]
	012 Move W8, [X20+309]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {20}
	017 Move X0, X20
	018 Call 0x1C5D684
	019 Move X20, X0
	020 Compare X19, 0
	021 JumpIfEqual {31}
	022 Move X0, X19
	023 Move X1, X20
	024 Call 0x1C17E00
	025 Move X1, X0
	026 Compare X0, 0
	027 JumpIfNotEqual {32}
	028 Move X0, X19
	029 Move X1, X20
	030 Call 0x1C181E0
	031 Move X1, X31
	032 Move X3, [X21+24]
	033 Move X0, [X21+64]
	034 Move X2, [X21+40]
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 CallNoReturn X3
	040 Call 0x1C17F20

