Type: System.Threading.SemaphoreSlim/<WaitUntilCountOrTimeoutAsync>d__32

Method: System.Void MoveNext()

Disassembly:
	0x033E39EC LDR X0, [X0 + 0x470]
	0x033E39F0 BL 0x1C16CF4
	0x033E39F4 MOVZ W8, 0x1
	0x033E39F8 STRB W8, [X23 + 0x3B5]
	0x033E39FC BL 0x33E3C68
	0x033E3A00 CBZ X0, 0x33E3AD0
	0x033E3A04 BL 0x33E3CC4
	0x033E3A08 LDR W24, [X22]
	0x033E3A0C MOV W23, W0
	0x033E3A10 BL 0x1C16D44
	0x033E3A14 CMP W24, W23
	0x033E3A18 B.EQ 0x33E3AD4
	0x033E3A1C ADRP X24, 0xD1C000
	0x033E3A20 LDR X24, [X24 + 0x470]
	0x033E3A24 STR W31, [X31 + 0x8]
	0x033E3A28 LDR X0, [X24]
	0x033E3A2C LDR W8, [X0 + 0xE0]
	0x033E3A30 CBNZ W8, 0x33E3A38
	0x033E3A34 BL 0x1C16DFC
	0x033E3A38 ADD X0, X31, 0x8
	0x033E3A3C BL 0x33DF18C
	0x033E3A40 LDR W25, [X22]
	0x033E3A44 BL 0x1C16D44
	0x033E3A48 CBNZ W25, 0x33E3A74
	0x033E3A4C BL 0x33E3358
	0x033E3A50 BL 0x1C16D44
	0x033E3A54 MOV X0, X22
	0x033E3A58 MOV W1, W23
	0x033E3A5C MOV W2, W31
	0x033E3A60 MOV X3, X19
	0x033E3A64 MOV X4, X31
	0x033E3A68 BL 0x33EB110
	0x033E3A6C CBZ W0, 0x33E3AB8
	0x033E3A70 BL 0x33E394C
	0x033E3A74 ADDS W31, W21, 0x1
	0x033E3A78 B.EQ 0x33E3A28
	0x033E3A7C CBZ W21, 0x33E3AB8
	0x033E3A80 LDR X0, [X24]
	0x033E3A84 LDR W8, [X0 + 0xE0]
	0x033E3A88 CBNZ W8, 0x33E3A90
	0x033E3A8C BL 0x1C16DFC
	0x033E3A90 ADD X0, X31, 0x8
	0x033E3A94 BL 0x33DF280
	0x033E3A98 TBZ X0, 0x0, 0x33E3A28
	0x033E3A9C MOV X0, X31
	0x033E3AA0 BL 0x33C18F4
	0x033E3AA4 SUB W8, W0, W20
	0x033E3AA8 TBNZ X8, 0x1F, 0x33E3AB8
	0x033E3AAC SUB W8, W21, W8
	0x033E3AB0 CMP W8, 0x0
	0x033E3AB4 B.GT 0x33E3A28
	0x033E3AB8 LDP X20, X19, [X31 + 0x40]
	0x033E3ABC LDP X22, X21, [X31 + 0x30]
	0x033E3AC0 LDP X24, X23, [X31 + 0x20]
	0x033E3AC4 LDP X30, X25, [X31 + 0x10]
	0x033E3AC8 ADD X31, X31, 0x50
	0x033E3ACC RET
	0x033E3AD0 BL 0x1C16F20
	0x033E3AD4 ADRP X0, 0xD4A000
	0x033E3AD8 LDR X0, [X0 + 0x220]
	0x033E3ADC BL 0x1C16D08
	0x033E3AE0 MOV X1, X31
	0x033E3AE4 BL 0x33BDD84
	0x033E3AE8 MOV X19, X0
	0x033E3AEC ADRP X0, 0xD4A000
	0x033E3AF0 LDR X0, [X0 + 0x228]
	0x033E3AF4 BL 0x1C16D08
	0x033E3AF8 BL 0x1C16F10
	0x033E3AFC MOV X1, X19
	0x033E3B00 MOV X20, X0
	0x033E3B04 BL 0x33DCC90
	0x033E3B08 ADRP X0, 0xD4A000
	0x033E3B0C LDR X0, [X0 + 0x230]
	0x033E3B10 BL 0x1C16D08
	0x033E3B14 MOV X1, X0
	0x033E3B18 MOV X0, X20
	0x033E3B1C BL 0x1C16DEC
	0x033E3B20 SUB X31, X31, 0x30
	0x033E3B24 STP X30, X21, [X31 + 0x10]
	0x033E3B28 STP X20, X19, [X31 + 0x20]
	0x033E3B2C ADRP X20, 0xFFA000
	0x033E3B30 LDRB W8, [X20 + 0x3B4]
	0x033E3B34 MOV X19, X0
	0x033E3B38 TBNZ X8, 0x0, 0x33E3B50
	0x033E3B3C ADRP X0, 0xD1C000
	0x033E3B40 LDR X0, [X0 + 0x470]
	0x033E3B44 BL 0x1C16CF4
	0x033E3B48 MOVZ W8, 0x1
	0x033E3B4C STRB W8, [X20 + 0x3B4]
	0x033E3B50 STR W31, [X31 + 0x8]
	0x033E3B54 LDR W20, [X19]
	0x033E3B58 BL 0x1C16D44
	0x033E3B5C ANDS W31, W20, 0x7FFFFFFE
	0x033E3B60 B.EQ 0x33E3BB4
	0x033E3B64 ADRP X21, 0xD1C000
	0x033E3B68 LDR X21, [X21 + 0x470]
	0x033E3B6C BL 0x1C16D44
	0x033E3B70 SUB W1, W20, 0x2
	0x033E3B74 MOV X0, X19
	0x033E3B78 MOV W2, W20
	0x033E3B7C MOV X3, X31
	0x033E3B80 BL 0x33E7AB4
	0x033E3B84 CMP W0, W20
	0x033E3B88 B.EQ 0x33E3BB4
	0x033E3B8C LDR X0, [X21]
	0x033E3B90 LDR W8, [X0 + 0xE0]
	0x033E3B94 CBNZ W8, 0x33E3B9C
	0x033E3B98 BL 0x1C16DFC
	0x033E3B9C ADD X0, X31, 0x8
	0x033E3BA0 BL 0x33DF18C
	0x033E3BA4 LDR W20, [X19]
	0x033E3BA8 BL 0x1C16D44
	0x033E3BAC ANDS W31, W20, 0x7FFFFFFE
	0x033E3BB0 B.NE 0x33E3B6C
	0x033E3BB4 LDP X20, X19, [X31 + 0x20]
	0x033E3BB8 LDP X30, X21, [X31 + 0x10]
	0x033E3BBC ADD X31, X31, 0x30
	0x033E3BC0 RET
	0x033E3BC4 STP X30, X19, [X31 - 0x10]!
	0x033E3BC8 CMP W0, 0x1
	0x033E3BCC B.LT 0x33E3BE4
	0x033E3BD0 ADD W19, W0, 0x1
	0x033E3BD4 BL 0x1C16D14
	0x033E3BD8 SUB W19, W19, 0x1
	0x033E3BDC CMP W19, 0x1
	0x033E3BE0 B.GT 0x33E3BD4
	0x033E3BE4 LDP X30, X19, [X31], #0x10
	0x033E3BE8 RET
	0x033E3BEC ADDS W31, W0, 0x2
	0x033E3BF0 B.LE 0x33E3BF8
	0x033E3BF4 B 0x1C4C4FC
	0x033E3BF8 STR X30, [X31 - 0x20]!
	0x033E3BFC STP X20, X19, [X31 + 0x10]
	0x033E3C00 ADRP X0, 0xD49000
	0x033E3C04 LDR X0, [X0 + 0xFF0]
	0x033E3C08 BL 0x1C16D08
	0x033E3C0C MOV X1, X31
	0x033E3C10 BL 0x33BDD84
	0x033E3C14 MOV X19, X0
	0x033E3C18 ADRP X0, 0xD18000
	0x033E3C1C LDR X0, [X0 + 0x760]
	0x033E3C20 BL 0x1C16D08
	0x033E3C24 BL 0x1C16F10
	0x033E3C28 MOV X20, X0
	0x033E3C2C ADRP X0, 0xD49000
	0x033E3C30 LDR X0, [X0 + 0xFD8]
	0x033E3C34 BL 0x1C16D08
	0x033E3C38 MOV X1, X0
	0x033E3C3C MOV X0, X20
	0x033E3C40 MOV X2, X19
	0x033E3C44 MOV X3, X31
	0x033E3C48 BL 0x3311888
	0x033E3C4C ADRP X0, 0xD4A000
	0x033E3C50 LDR X0, [X0 + 0x238]
	0x033E3C54 BL 0x1C16D08
	0x033E3C58 MOV X1, X0
	0x033E3C5C MOV X0, X20
	0x033E3C60 BL 0x1C16DEC
	0x033E3C64 B 0x1C4C33C
	0x033E3C68 STR X30, [X31 - 0x20]!
	0x033E3C6C STP X20, X19, [X31 + 0x10]
	0x033E3C70 ADRP X19, 0xFFA000
	0x033E3C74 ADRP X20, 0xD3C000
	0x033E3C78 LDRB W8, [X19 + 0x3E4]
	0x033E3C7C LDR X20, [X20 + 0x1D8]
	0x033E3C80 TBNZ X8, 0x0, 0x33E3C98
	0x033E3C84 ADRP X0, 0xD3C000
	0x033E3C88 LDR X0, [X0 + 0x1D8]
	0x033E3C8C BL 0x1C16CF4
	0x033E3C90 MOVZ W8, 0x1
	0x033E3C94 STRB W8, [X19 + 0x3E4]
	0x033E3C98 LDR X0, [X20]
	0x033E3C9C BL 0x1C16D0C
	0x033E3CA0 LDR X0, [X0 + 0x18]
	0x033E3CA4 CBNZ X0, 0x33E3CB8
	0x033E3CA8 ADD X0, X31, 0x8
	0x033E3CAC STR X31, [X31 + 0x8]
	0x033E3CB0 BL 0x1C4C400
	0x033E3CB4 LDR X0, [X31 + 0x8]
	0x033E3CB8 LDP X20, X19, [X31 + 0x10]
	0x033E3CBC LDR X30, [X31], #0x20
	0x033E3CC0 RET
	0x033E3CC4 STP X30, X19, [X31 - 0x10]!
	0x033E3CC8 LDR X8, [X0 + 0x10]
	0x033E3CCC CBNZ X8, 0x33E3CE0
	0x033E3CD0 MOV X19, X0
	0x033E3CD4 BL 0x1C4C3AC
	0x033E3CD8 LDR X8, [X19 + 0x10]
	0x033E3CDC CBZ X8, 0x33E3CEC
	0x033E3CE0 LDR W0, [X8 + 0xB8]
	0x033E3CE4 LDP X30, X19, [X31], #0x10
	0x033E3CE8 RET
	0x033E3CEC BL 0x1C16F20
	0x033E3CF0 STP X30, X21, [X31 - 0x20]!
	0x033E3CF4 STP X20, X19, [X31 + 0x10]
	0x033E3CF8 ADRP X21, 0xFFA000
	0x033E3CFC LDRB W8, [X21 + 0x3B6]
	0x033E3D00 MOV W20, W1
	0x033E3D04 MOV X19, X0
	0x033E3D08 TBNZ X8, 0x0, 0x33E3D20
	0x033E3D0C ADRP X0, 0xD4A000
	0x033E3D10 LDR X0, [X0 + 0x200]
	0x033E3D14 BL 0x1C16CF4
	0x033E3D18 MOVZ W8, 0x1
	0x033E3D1C STRB W8, [X21 + 0x3B6]
	0x033E3D20 LDR W21, [X19]
	0x033E3D24 BL 0x1C16D44
	0x033E3D28 TBZ X21, 0x1F, 0x33E3D48
	0x033E3D2C TBNZ X20, 0x0, 0x33E3D48
	0x033E3D30 LDR W20, [X19]
	0x033E3D34 BL 0x1C16D44
	0x033E3D38 BL 0x1C16D44
	0x033E3D3C AND W8, W20, 0xFFFFFFFE
	0x033E3D40 STR W8, [X19]
	0x033E3D44 B 0x33E3D6C
	0x033E3D48 ADRP X8, 0xD4A000
	0x033E3D4C LDR X8, [X8 + 0x200]
	0x033E3D50 LDR X0, [X8]
	0x033E3D54 LDR W8, [X0 + 0xE0]
	0x033E3D58 CBNZ W8, 0x33E3D60
	0x033E3D5C BL 0x1C16DFC
	0x033E3D60 AND W1, W20, 0x1
	0x033E3D64 MOV X0, X19
	0x033E3D68 BL 0x33E3D78
	0x033E3D6C LDP X20, X19, [X31 + 0x10]
	0x033E3D70 LDP X30, X21, [X31], #0x20
	0x033E3D74 B 0x33E394C
	0x033E3D78 STP X30, X21, [X31 - 0x20]!
	0x033E3D7C STP X20, X19, [X31 + 0x10]
	0x033E3D80 ADRP X21, 0xFFA000
	0x033E3D84 LDRB W8, [X21 + 0x3B7]
	0x033E3D88 MOV W20, W1
	0x033E3D8C MOV X19, X0
	0x033E3D90 TBNZ X8, 0x0, 0x33E3DA8
	0x033E3D94 ADRP X0, 0xD4A000
	0x033E3D98 LDR X0, [X0 + 0x200]
	0x033E3D9C BL 0x1C16CF4
	0x033E3DA0 MOVZ W8, 0x1
	0x033E3DA4 STRB W8, [X21 + 0x3B7]
	0x033E3DA8 LDR W21, [X19]
	0x033E3DAC BL 0x1C16D44
	0x033E3DB0 TBNZ X21, 0x1F, 0x33E3DF8
	0x033E3DB4 ADRP X8, 0xD4A000
	0x033E3DB8 LDR X8, [X8 + 0x200]
	0x033E3DBC LDR X0, [X8]
	0x033E3DC0 LDR W8, [X0 + 0xE0]
	0x033E3DC4 CBNZ W8, 0x33E3DCC
	0x033E3DC8 BL 0x1C16DFC
	0x033E3DCC MOV X0, X19
	0x033E3DD0 BL 0x33E3E88
	0x033E3DD4 TBZ X0, 0x0, 0x33E3E3C
	0x033E3DD8 BL 0x1C16D44
	0x033E3DDC TBZ X20, 0x0, 0x33E3E14
	0x033E3DE0 MOV X0, X19
	0x033E3DE4 LDP X20, X19, [X31 + 0x10]
	0x033E3DE8 MOV W1, W31
	0x033E3DEC MOV X2, X31
	0x033E3DF0 LDP X30, X21, [X31], #0x20
	0x033E3DF4 B 0x33E9064
	0x033E3DF8 TBZ X20, 0x0, 0x33E3E1C
	0x033E3DFC BL 0x1C16D44
	0x033E3E00 MOV X0, X19
	0x033E3E04 LDP X20, X19, [X31 + 0x10]
	0x033E3E08 MOV X1, X31
	0x033E3E0C LDP X30, X21, [X31], #0x20
	0x033E3E10 B 0x33EB148
	0x033E3E14 STR W31, [X19]
	0x033E3E18 B 0x33E3E30
	0x033E3E1C LDR W20, [X19]
	0x033E3E20 BL 0x1C16D44
	0x033E3E24 BL 0x1C16D44
	0x033E3E28 AND W8, W20, 0xFFFFFFFE
	0x033E3E2C STR W8, [X19]
	0x033E3E30 LDP X20, X19, [X31 + 0x10]
	0x033E3E34 LDP X30, X21, [X31], #0x20
	0x033E3E38 RET
	0x033E3E3C ADRP X0, 0xD4A000
	0x033E3E40 LDR X0, [X0 + 0x240]
	0x033E3E44 BL 0x1C16D08
	0x033E3E48 MOV X1, X31
	0x033E3E4C BL 0x33BDD84
	0x033E3E50 MOV X19, X0
	0x033E3E54 ADRP X0, 0xD4A000
	0x033E3E58 LDR X0, [X0 + 0x248]
	0x033E3E5C BL 0x1C16D08
	0x033E3E60 BL 0x1C16F10
	0x033E3E64 MOV X1, X19
	0x033E3E68 MOV X20, X0
	0x033E3E6C BL 0x33DD060
	0x033E3E70 ADRP X0, 0xD4A000
	0x033E3E74 LDR X0, [X0 + 0x250]
	0x033E3E78 BL 0x1C16D08
	0x033E3E7C MOV X1, X0
	0x033E3E80 MOV X0, X20
	0x033E3E84 BL 0x1C16DEC
	0x033E3E88 STP X30, X21, [X31 - 0x20]!
	0x033E3E8C STP X20, X19, [X31 + 0x10]
	0x033E3E90 ADRP X20, 0xFFA000
	0x033E3E94 ADRP X21, 0xD4A000
	0x033E3E98 LDRB W8, [X20 + 0x3B8]
	0x033E3E9C LDR X21, [X21 + 0x200]
	0x033E3EA0 MOV X19, X0
	0x033E3EA4 TBNZ X8, 0x0, 0x33E3EBC
	0x033E3EA8 ADRP X0, 0xD4A000
	0x033E3EAC LDR X0, [X0 + 0x200]
	0x033E3EB0 BL 0x1C16CF4
	0x033E3EB4 MOVZ W8, 0x1
	0x033E3EB8 STRB W8, [X20 + 0x3B8]
	0x033E3EBC LDR X0, [X21]
	0x033E3EC0 LDR W8, [X0 + 0xE0]
	0x033E3EC4 CBNZ W8, 0x33E3ECC
	0x033E3EC8 BL 0x1C16DFC
	0x033E3ECC LDR W20, [X19]
	0x033E3ED0 BL 0x1C16D44
	0x033E3ED4 TBNZ X20, 0x1F, 0x33E3F04
	0x033E3ED8 LDR W19, [X19]
	0x033E3EDC BL 0x1C16D44
	0x033E3EE0 BL 0x33E3C68
	0x033E3EE4 CBZ X0, 0x33E3F54
	0x033E3EE8 BL 0x33E3CC4
	0x033E3EEC AND W8, W19, 0x7FFFFFFF
	0x033E3EF0 LDP X20, X19, [X31 + 0x10]
	0x033E3EF4 CMP W8, W0
	0x033E3EF8 CSET W0, EQ
	0x033E3EFC LDP X30, X21, [X31], #0x20
	0x033E3F00 RET
	0x033E3F04 ADRP X0, 0xD4A000
	0x033E3F08 LDR X0, [X0 + 0x258]
	0x033E3F0C BL 0x1C16D08
	0x033E3F10 MOV X1, X31
	0x033E3F14 BL 0x33BDD84
	0x033E3F18 MOV X19, X0
	0x033E3F1C ADRP X0, 0xD10000
	0x033E3F20 LDR X0, [X0 + 0x5B0]
	0x033E3F24 BL 0x1C16D08
	0x033E3F28 BL 0x1C16F10
	0x033E3F2C MOV X1, X19
	0x033E3F30 MOV X2, X31
	0x033E3F34 MOV X20, X0
	0x033E3F38 BL 0x337DF1C
	0x033E3F3C ADRP X0, 0xD4A000
	0x033E3F40 LDR X0, [X0 + 0x260]
	0x033E3F44 BL 0x1C16D08
	0x033E3F48 MOV X1, X0
	0x033E3F4C MOV X0, X20
	0x033E3F50 BL 0x1C16DEC
	0x033E3F54 BL 0x1C16F20
	0x033E3F58 STR X30, [X31 - 0x20]!
	0x033E3F5C STP X20, X19, [X31 + 0x10]
	0x033E3F60 ADRP X19, 0xFFA000
	0x033E3F64 ADRP X20, 0xD4A000
	0x033E3F68 LDRB W8, [X19 + 0x3B9]
	0x033E3F6C LDR X20, [X20 + 0x200]
	0x033E3F70 TBNZ X8, 0x0, 0x33E3F88
	0x033E3F74 ADRP X0, 0xD4A000
	0x033E3F78 LDR X0, [X0 + 0x200]
	0x033E3F7C BL 0x1C16CF4
	0x033E3F80 MOVZ W8, 0x1
	0x033E3F84 STRB W8, [X19 + 0x3B9]
	0x033E3F88 LDR X8, [X20]
	0x033E3F8C LDP X20, X19, [X31 + 0x10]
	0x033E3F90 ORR W9, W31, 0x7FFFFFFE
	0x033E3F94 LDR X8, [X8 + 0xB8]
	0x033E3F98 STR W9, [X8]
	0x033E3F9C LDR X30, [X31], #0x20
	0x033E3FA0 RET
	0x033E3FA4 STR X30, [X31 - 0x40]!
	0x033E3FA8 STP X24, X23, [X31 + 0x10]
	0x033E3FAC STP X22, X21, [X31 + 0x20]
	0x033E3FB0 STP X20, X19, [X31 + 0x30]
	0x033E3FB4 ADRP X24, 0xFFA000
	0x033E3FB8 ADRP X23, 0xD4A000
	0x033E3FBC LDRB W8, [X24 + 0x3BA]
	0x033E3FC0 LDR X23, [X23 + 0x268]
	0x033E3FC4 MOV X19, X3
	0x033E3FC8 MOV W22, W2
	0x033E3FCC MOV W21, W1
	0x033E3FD0 MOV X20, X0
	0x033E3FD4 TBNZ X8, 0x0, 0x33E3FF8
	0x033E3FD8 ADRP X0, 0xD4A000
	0x033E3FDC LDR X0, [X0 + 0x270]
	0x033E3FE0 BL 0x1C16CF4
	0x033E3FE4 ADRP X0, 0xD4A000
	0x033E3FE8 LDR X0, [X0 + 0x268]
	0x033E3FEC BL 0x1C16CF4
	0x033E3FF0 MOVZ W8, 0x1
	0x033E3FF4 STRB W8, [X24 + 0x3BA]
	0x033E3FF8 LDR X0, [X23]
	0x033E3FFC STR W31, [X31 + 0xC]
	0x033E4000 LDR W8, [X0 + 0xE0]
	0x033E4004 CBNZ W8, 0x33E400C
	0x033E4008 BL 0x1C16DFC
	0x033E400C MOV X0, X20
	0x033E4010 MOV X1, X31
	0x033E4014 BL 0x33E9FE4
	0x033E4018 CBZ X19, 0x33E4028
	0x033E401C LDR W8, [X19 + 0x10]
	0x033E4020 CMP W8, 0x105
	0x033E4024 B.GE 0x33E4180
	0x033E4028 CBZ W22, 0x33E4044
	0x033E402C CMP W22, 0x1
	0x033E4030 B.NE 0x33E41C4
	0x033E4034 AND W1, W21, 0x1
	0x033E4038 ADD X3, X31, 0xC
	0x033E403C MOVZ W0, 0x1
	0x033E4040 B 0x33E4050
	0x033E4044 AND W1, W21, 0x1
	0x033E4048 ADD X3, X31, 0xC
	0x033E404C MOV W0, W31
	0x033E4050 MOV X2, X19
	0x033E4054 MOV X4, X31
	0x033E4058 BL 0x33EB1A8
	0x033E405C ADRP X8, 0xD49000
	0x033E4060 LDR X8, [X8 + 0x270]
	0x033E4064 MOV X22, X0
	0x033E4068 LDR X8, [X8]
	0x033E406C MOV X0, X8
	0x033E4070 BL 0x1C16F10
	0x033E4074 MOVZ W2, 0x1
	0x033E4078 MOV X1, X22
	0x033E407C MOV X3, X31
	0x033E4080 MOV X21, X0
	0x033E4084 BL 0x3224ED0
	0x033E4088 CBZ X21, 0x33E417C
	0x033E408C LDR X8, [X21]
	0x033E4090 MOV X0, X21
	0x033E4094 LDP X9, X1, [X8 + 0x188]
	0x033E4098 BLR X9
	0x033E409C TBZ X0, 0x0, 0x33E4148
	0x033E40A0 MOV X0, X21
	0x033E40A4 MOV X1, X31
	0x033E40A8 BL 0x32C03A4
	0x033E40AC CBZ X19, 0x33E4138
	0x033E40B0 LDR W8, [X19 + 0x10]
	0x033E40B4 LDR W0, [X31 + 0xC]
	0x033E40B8 CBZ W8, 0x33E413C
	0x033E40BC CMP W0, 0x6
	0x033E40C0 B.NE 0x33E413C
	0x033E40C4 ADRP X0, 0xD0F000
	0x033E40C8 LDR X0, [X0 + 0x9D0]
	0x033E40CC BL 0x1C16D08
	0x033E40D0 MOVZ W1, 0x1
	0x033E40D4 BL 0x1C16D6C
	0x033E40D8 MOV X20, X0
	0x033E40DC BL 0x19903C0
	0x033E40E0 MOV X0, X20
	0x033E40E4 MOV X1, X19
	0x033E40E8 BL 0x19980B4
	0x033E40EC MOV X0, X20
	0x033E40F0 MOV X1, X31
	0x033E40F4 MOV X2, X19
	0x033E40F8 BL 0x1993444
	0x033E40FC ADRP X0, 0xD49000
	0x033E4100 LDR X0, [X0 + 0x278]
	0x033E4104 BL 0x1C16D08
	0x033E4108 MOV X1, X20
	0x033E410C MOV X2, X31
	0x033E4110 BL 0x33BFB40
	0x033E4114 MOV X19, X0
	0x033E4118 ADRP X0, 0xD49000
	0x033E411C LDR X0, [X0 + 0x280]
	0x033E4120 BL 0x1C16D08
	0x033E4124 BL 0x1C16F10
	0x033E4128 MOV X1, X19
	0x033E412C MOV X20, X0
	0x033E4130 BL 0x33DD27C
	0x033E4134 B 0x33E4238
	0x033E4138 LDR W0, [X31 + 0xC]
	0x033E413C MOV X1, X19
	0x033E4140 MOV X2, X31
	0x033E4144 BL 0x32F4A98
	0x033E4148 LDR X0, [X23]
	0x033E414C LDR W8, [X0 + 0xE0]
	0x033E4150 CBNZ W8, 0x33E4158
	0x033E4154 BL 0x1C16DFC
	0x033E4158 MOV X0, X20
	0x033E415C MOV X1, X21
	0x033E4160 MOV X2, X31
	0x033E4164 BL 0x33EA204
	0x033E4168 LDP X20, X19, [X31 + 0x30]
	0x033E416C LDP X22, X21, [X31 + 0x20]
	0x033E4170 LDP X24, X23, [X31 + 0x10]
	0x033E4174 LDR X30, [X31], #0x40
	0x033E4178 RET
	0x033E417C BL 0x1C16F20
	0x033E4180 ADRP X0, 0xD0F000
	0x033E4184 LDR X0, [X0 + 0x9D0]
	0x033E4188 BL 0x1C16D08
	0x033E418C MOVZ W1, 0x1
	0x033E4190 BL 0x1C16D6C
	0x033E4194 MOV X20, X0
	0x033E4198 BL 0x19903C0
	0x033E419C MOV X0, X20
	0x033E41A0 MOV X1, X19
	0x033E41A4 BL 0x19980B4
	0x033E41A8 MOV X0, X20
	0x033E41AC MOV X1, X31
	0x033E41B0 MOV X2, X19
	0x033E41B4 BL 0x1993444
	0x033E41B8 ADRP X0, 0xD49000
	0x033E41BC LDR X0, [X0 + 0x288]
	0x033E41C0 B 0x33E4204
	0x033E41C4 ADRP X0, 0xD0F000
	0x033E41C8 LDR X0, [X0 + 0x9D0]
	0x033E41CC BL 0x1C16D08
	0x033E41D0 MOVZ W1, 0x1
	0x033E41D4 BL 0x1C16D6C
	0x033E41D8 MOV X20, X0
	0x033E41DC BL 0x19903C0
	0x033E41E0 MOV X0, X20
	0x033E41E4 MOV X1, X19
	0x033E41E8 BL 0x19980B4
	0x033E41EC MOV X0, X20

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+56], X27
	004 Move [X31+64], X26
	005 Move [X31+72], X25
	006 Move [X31+80], X24
	007 Move [X31+88], X23
	008 Move [X31+96], X22
	009 Move [X31+104], X21
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 Move X20, 0xFFB000
	013 Move W8, [X20+943]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {72}
	019 Move X0, 0xD4B000
	020 Move X0, [X0+464]
	021 Call 0x1C17CF4
	022 Move X0, 0xD4B000
	023 Move X0, [X0+472]
	024 Call 0x1C17CF4
	025 Move X0, 0xD1B000
	026 Move X0, [X0+392]
	027 Call 0x1C17CF4
	028 Move X0, 0xD1B000
	029 Move X0, [X0+224]
	030 Call 0x1C17CF4
	031 Move X0, 0xD13000
	032 Move X0, [X0+2640]
	033 Call 0x1C17CF4
	034 Move X0, 0xD19000
	035 Move X0, [X0+2008]
	036 Call 0x1C17CF4
	037 Move X0, 0xD3C000
	038 Move X0, [X0+784]
	039 Call 0x1C17CF4
	040 Move X0, 0xD4B000
	041 Move X0, [X0+480]
	042 Call 0x1C17CF4
	043 Move X0, 0xD4B000
	044 Move X0, [X0+488]
	045 Call 0x1C17CF4
	046 Move X0, 0xD3C000
	047 Move X0, [X0+792]
	048 Call 0x1C17CF4
	049 Move X0, 0xD4B000
	050 Move X0, [X0+496]
	051 Call 0x1C17CF4
	052 Move X0, 0xD3C000
	053 Move X0, [X0+800]
	054 Call 0x1C17CF4
	055 Move X0, 0xD11000
	056 Move X0, [X0+3584]
	057 Call 0x1C17CF4
	058 Move X0, 0xD1A000
	059 Move X0, [X0+3104]
	060 Call 0x1C17CF4
	061 Move X0, 0xD4B000
	062 Move X0, [X0+504]
	063 Call 0x1C17CF4
	064 Move X0, 0xD3C000
	065 Move X0, [X0+808]
	066 Call 0x1C17CF4
	067 Move X0, 0xD12000
	068 Move X0, [X0+1976]
	069 Call 0x1C17CF4
	070 Move W8, 1
	071 Move [X20+943], W8
	072 Move [X31+32], X31
	073 Move [X31+40], X31
	074 Move [X31+28], W31
	075 Move [X31], X31
	076 Move [X31+8], X31
	077 Move X25, 0xD1B000
	078 Move W24, [X19]
	079 Move X20, [X19+56]
	080 Move X25, [X25+224]
	081 Compare W24, 0
	082 JumpIfEqual {98}
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move V0, [X19+6]
	085 Move TEMP, 0
	086 Not TEMP
	087 Move W8, TEMP
	088 Move [X31], V0
	089 Move [X19+96], X31
	090 Move [X19+104], X31
	091 Move [X19], W8
	092 Move X8, 0xD3C000
	093 Move X8, [X8+792]
	094 Move X1, [X8]
	095 Add X0, X31, 0
	096 Call ConfiguredTaskAwaiter<Boolean>.GetResult, X0
	097 Move W23, W0
	098 Move V0, [X19+5]
	099 Move TEMP, 0
	100 Not TEMP
	101 Move W24, TEMP
	102 Move [X31+2], V0
	103 Move [X19+80], X31
	104 Move [X19+88], X31
	105 Move [X19], W24
	106 Move X8, 0xD19000
	107 Move X8, [X8+2008]
	108 Move X0, [X8]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Move X8, 0xD13000
	114 Move X21, [X19+32]
	115 Move X8, [X8+2640]
	116 Move X0, [X8]
	117 Compare X21, 0
	118 JumpIfEqual {127}
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Move X0, X21
	124 Move X1, X31
	125 Call CancellationTokenSource.CreateLinkedTokenSource, X0, X1
	126 Move X21, X0
	127 Call 0x1C17F10
	128 Move X21, X0
	129 Call 0x1C17D44
	130 Move TEMP, 0
	131 Not TEMP
	132 Move W8, TEMP
	133 Move [X21+36], W8
	134 Move X0, X21
	135 Move X1, X31
	136 Call Object..ctor, X0
	137 Call 0x1C17D44
	138 Move W8, 1
	139 Move [X21+32], W8
	140 Move [X19+64], X21
	141 Move X8, 0xD1A000
	142 Move X8, [X8+3104]
	143 Move X0, [X8]
	144 Move W1, 2
	145 Call 0x1C17D6C
	146 Move X21, X0
	147 Compare X0, 0
	148 JumpIfEqual {375}
	149 Move X22, [X19+40]
	150 Compare X22, 0
	151 JumpIfEqual {158}
	152 Move X8, [X21]
	153 Move X1, [X8+64]
	154 Move X0, X22
	155 Call 0x1C17E00
	156 Compare X0, 0
	157 JumpIfEqual {385}
	158 Move W8, [X21+24]
	159 Compare W8, 0
	160 JumpIfEqual {376}
	161 Move [X21+32], X22
	162 Move X22, [X19+64]
	163 Compare X22, 0
	164 JumpIfEqual {377}
	165 Move W23, [X19+48]
	166 Move X0, X22
	167 Call CancellationTokenSource.ThrowIfDisposed, X0
	168 Move X8, 0xD12000
	169 Move X8, [X8+1976]
	170 Move X0, [X8]
	171 Move W8, [X0+224]
	172 Compare W8, 0
	173 JumpIfNotEqual {175}
	174 Call 0x1C17DFC
	175 Move W0, W23
	176 Move X1, X22
	177 Move X2, X31
	178 Call Task.Delay, X0, X1
	179 Move X22, X0
	180 Compare X0, 0
	181 JumpIfEqual {188}
	182 Move X8, [X21]
	183 Move X1, [X8+64]
	184 Move X0, X22
	185 Call 0x1C17E00
	186 Compare X0, 0
	187 JumpIfEqual {388}
	188 Move W8, [X21+24]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move [X21+40], X22
	191 Move X0, X21
	192 Move X1, X31
	193 Call Task.WhenAny, X0
	194 Move X8, [X19+40]
	195 Move [X19+72], X8
	196 Compare X0, 0
	197 JumpIfEqual {380}
	198 Move X8, 0xD4B000
	199 Move X8, [X8+504]
	200 Move X2, [X8]
	201 Move W1, W31
	202 Call Task`1<Object>.ConfigureAwait, X0, X1
	203 Move X8, 0xD4B000
	204 Move X8, [X8+496]
	205 Move [X31+32], X0
	206 Move [X31+40], X1
	207 Move X8, [X8]
	208 Add X0, X31, 32
	209 Move X1, X8
	210 Call ConfiguredTaskAwaiter<Object>.get_IsCompleted, X0
	211 Move TEMP, X0
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfNotEqual {279}
	215 Move X8, 0xD4B000
	216 Move X8, [X8+488]
	217 Add X0, X31, 32
	218 Move X1, [X8]
	219 Call ConfiguredTaskAwaiter<Object>.GetResult, X0
	220 Move X8, [X19+72]
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move X21, X31
	223 Move W23, W31
	224 Move W27, 11
	225 Move TEMP, X24
	226 And TEMP, TEMP, -2147483648
	227 Compare TEMP, -2147483648
	228 JumpIfNotEqual {245}
	229 Move X21, [X19+64]
	230 Move [X19+72], X31
	231 Compare X21, 0
	232 JumpIfEqual {391}
	233 Move X0, X21
	234 Call CancellationTokenSource.ThrowIfDisposed, X0
	235 Move X0, X21
	236 Move W1, W31
	237 Call CancellationTokenSource.NotifyCancellation, X0, X1
	238 Move X21, X31
	239 Move W23, 1
	240 Move W27, 10
	241 Move TEMP, X24
	242 And TEMP, TEMP, -2147483648
	243 Compare TEMP, -2147483648
	244 JumpIfEqual {437}
	245 Move W26, 1
	246 Compare X21, 0
	247 JumpIfNotEqual {466}
	248 NotImplemented "Instruction CMP not yet implemented."
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Compare W27, 0
	251 JumpIfNotEqual {363}
	252 Move [X19+64], X31
	253 Compare X20, 0
	254 JumpIfEqual {382}
	255 Move X24, [X20+32]
	256 Move [X31+28], W31
	257 Add X1, X31, 28
	258 Move X0, X24
	259 Call Monitor.Enter, X0, X1
	260 Move X1, [X19+40]
	261 Move X0, X20
	262 Call SemaphoreSlim.RemoveAsyncWaiter, X0, X1
	263 Move TEMP, X0
	264 And TEMP, TEMP, 1
	265 Compare TEMP, 1
	266 JumpIfNotEqual {294}
	267 Move X8, 0xD19000
	268 Move X8, [X8+2008]
	269 Move X0, [X8]
	270 Move W8, [X0+224]
	271 Compare W8, 0
	272 JumpIfNotEqual {274}
	273 Call 0x1C17DFC
	274 Add X0, X19, 32
	275 Call CancellationToken.ThrowIfCancellationRequested, X0
	276 Move X20, X31
	277 Move W23, W31
	278 Move W21, 10
	279 Move [X19], W31
	280 Move V0, [X31+2]
	281 Move [X19+5], V0
	282 Move X0, [X25]
	283 Move W8, [X0+224]
	284 Compare W8, 0
	285 JumpIfNotEqual {287}
	286 Call 0x1C17DFC
	287 Move X8, 0xD4B000
	288 Move X8, [X8+464]
	289 Add X0, X19, 8
	290 Move X3, [X8]
	291 Add X1, X31, 32
	292 Move X2, X19
	293 Call AsyncTaskMethodBuilder`1<Boolean>.AwaitUnsafeOnCompleted, X0, X1, X2
	294 Move X20, X31
	295 Move W21, 13
	296 Move W8, [X31+28]
	297 NotImplemented "Instruction CMP not yet implemented."
	298 NotImplemented "Instruction CSET not yet implemented."
	299 Or W8, W26, W8
	300 Move TEMP, X8
	301 And TEMP, TEMP, 1
	302 Compare TEMP, 1
	303 JumpIfEqual {306}
	304 Move X0, X24
	305 Call 0x1C4CEB4
	306 Compare X20, 0
	307 JumpIfNotEqual {383}
	308 NotImplemented "Instruction CMP not yet implemented."
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Compare W21, 0
	311 JumpIfNotEqual {363}
	312 Move X0, [X19+40]
	313 Compare X0, 0
	314 JumpIfEqual {392}
	315 Move X8, 0xD3C000
	316 Move X8, [X8+808]
	317 Move X2, [X8]
	318 Move W1, W31
	319 Call Task`1<Boolean>.ConfigureAwait, X0, X1
	320 Move X8, 0xD3C000
	321 Move X8, [X8+800]
	322 Move [X31], X0
	323 Move [X31+8], X1
	324 Move X8, [X8]
	325 Add X0, X31, 0
	326 Move X1, X8
	327 Call ConfiguredTaskAwaiter<Boolean>.get_IsCompleted, X0
	328 Move TEMP, X0
	329 And TEMP, TEMP, 1
	330 Compare TEMP, 1
	331 JumpIfEqual {92}
	332 Move W8, 1
	333 Move [X19], W8
	334 Move V0, [X31]
	335 Move [X19+6], V0
	336 Move X0, [X25]
	337 Move W8, [X0+224]
	338 Compare W8, 0
	339 JumpIfNotEqual {341}
	340 Call 0x1C17DFC
	341 Move X8, 0xD4B000
	342 Move X8, [X8+472]
	343 Add X0, X19, 8
	344 Move X3, [X8]
	345 Add X1, X31, 0
	346 Move X2, X19
	347 Call AsyncTaskMethodBuilder`1<Boolean>.AwaitUnsafeOnCompleted, X0, X1, X2
	348 Move TEMP, 1
	349 Not TEMP
	350 Move W8, TEMP
	351 Move [X19+8], W8
	352 Move X0, [X25]
	353 Move X20, 0xD1B000
	354 Move W8, [X0+224]
	355 Move X20, [X20+392]
	356 Compare W8, 0
	357 JumpIfNotEqual {359}
	358 Call 0x1C17DFC
	359 Move X2, [X20]
	360 And W1, W23, 1
	361 Move X0, X19
	362 Call AsyncTaskMethodBuilder`1<Boolean>.SetResult, X0, X1
	363 Move X20, [X31+112]
	364 Move X19, [X31+120]
	365 Move X22, [X31+96]
	366 Move X21, [X31+104]
	367 Move X24, [X31+80]
	368 Move X23, [X31+88]
	369 Move X26, [X31+64]
	370 Move X25, [X31+72]
	371 Move X30, [X31+48]
	372 Move X27, [X31+56]
	373 Add X31, X31, 128
	374 Return 
	375 Call 0x1C17F20
	376 Call 0x1C17F28
	377 Move W26, W24
	378 Call 0x1C17F20
	379 Call 0x1C17F28
	380 Move W26, W24
	381 Call 0x1C17F20
	382 Call 0x1C17F20
	383 Move X0, X20
	384 Call 0x1C17F18
	385 Call 0x1C17F44
	386 Move X1, X31
	387 Call 0x1C17DEC
	388 Call 0x1C17F44
	389 Move X1, X31
	390 Call 0x1C17DEC
	391 Call 0x1C17F20
	392 Call 0x1C17F20
	393 Move X21, X1
	394 Move X22, X0
	395 Move W26, W31
	396 Move X21, X1
	397 Move X22, X0
	398 NotImplemented "Instruction CMP not yet implemented."
	399 Move X0, X22
	400 Call 0x3EB2AD0
	401 Move X20, [X0]
	402 Call 0x3EB2AE0
	403 Move W21, W31
	404 Move X20, X31
	405 Move W8, [X31+28]
	406 NotImplemented "Instruction CMP not yet implemented."
	407 NotImplemented "Instruction CSET not yet implemented."
	408 Or W8, W26, W8
	409 Move TEMP, X8
	410 And TEMP, TEMP, 1
	411 Compare TEMP, 1
	412 JumpIfEqual {415}
	413 Move X0, X24
	414 Call 0x1C4CEB4
	415 Compare X20, 0
	416 JumpIfEqual {511}
	417 Move X0, X20
	418 Call 0x1C17F18
	419 Move X21, X1
	420 Move X22, X0
	421 Move W26, W24
	422 Move X21, X1
	423 Move X22, X0
	424 NotImplemented "Instruction CMP not yet implemented."
	425 Move X0, X22
	426 Call 0x3EB2AD0
	427 Move X24, [X0]
	428 Call 0x3EB2AE0
	429 Move W27, W31
	430 Move W23, W31
	431 Move X21, X24
	432 Move W24, W26
	433 Move TEMP, X24
	434 And TEMP, TEMP, -2147483648
	435 Compare TEMP, -2147483648
	436 JumpIfNotEqual {245}
	437 Move X22, [X19+64]
	438 Compare X22, 0
	439 JumpIfEqual {463}
	440 Move X10, 0xD10000
	441 Move X8, [X22]
	442 Move X10, [X10+3584]
	443 NotImplemented "Instruction LDRH not yet implemented."
	444 Move X1, [X10]
	445 Compare X9, 0
	446 JumpIfEqual {453}
	447 Move X10, [X8+176]
	448 Add X10, X10, 8
	449 NotImplemented "Instruction LDUR not yet implemented."
	450 NotImplemented "Instruction CMP not yet implemented."
	451 Subtract X9, X9, 1
	452 Add X10, X10, 16
	453 Move X0, X22
	454 Move W2, W31
	455 Call 0x1C5D788
	456 NotImplemented "Instruction LDRSW not yet implemented."
	457 Add X8, X8, X9
	458 Add X0, X8, 312
	459 Move X8, [X0]
	460 Move X1, [X0+8]
	461 Move X0, X22
	462 NotImplemented "Instruction BLR not yet implemented."
	463 Move W26, W31
	464 Compare X21, 0
	465 JumpIfEqual {248}
	466 Move X0, X21
	467 Call 0x1C17F18
	468 Move X24, X31
	469 Move TEMP, X26
	470 And TEMP, TEMP, -2147483648
	471 Compare TEMP, -2147483648
	472 JumpIfNotEqual {499}
	473 Move X20, [X19+64]
	474 Compare X20, 0
	475 JumpIfEqual {499}
	476 Move X10, 0xD10000
	477 Move X8, [X20]
	478 Move X10, [X10+3584]
	479 NotImplemented "Instruction LDRH not yet implemented."
	480 Move X1, [X10]
	481 Compare X9, 0
	482 JumpIfEqual {489}
	483 Move X10, [X8+176]
	484 Add X10, X10, 8
	485 NotImplemented "Instruction LDUR not yet implemented."
	486 NotImplemented "Instruction CMP not yet implemented."
	487 Subtract X9, X9, 1
	488 Add X10, X10, 16
	489 Move X0, X20
	490 Move W2, W31
	491 Call 0x1C5D788
	492 NotImplemented "Instruction LDRSW not yet implemented."
	493 Add X8, X8, X9
	494 Add X0, X8, 312
	495 Move X8, [X0]
	496 Move X1, [X0+8]
	497 Move X0, X20
	498 NotImplemented "Instruction BLR not yet implemented."
	499 Compare X24, 0
	500 JumpIfEqual {511}
	501 Move X0, X24
	502 Call 0x1C17F18
	503 Move X21, X1
	504 Move X22, X0
	505 Move TEMP, X26
	506 And TEMP, TEMP, -2147483648
	507 Compare TEMP, -2147483648
	508 JumpIfNotEqual {499}
	509 Move X21, X1
	510 Move X22, X0
	511 NotImplemented "Instruction CMP not yet implemented."
	512 Move X0, X22
	513 Call 0x3EB2AD0
	514 Move X20, X0
	515 Move X0, 0xD10000
	516 Move X0, [X0+2000]
	517 Call 0x1C17D08
	518 Move X8, [X20]
	519 Move X1, [X8]
	520 Call 0x1C18270
	521 Move TEMP, X0
	522 And TEMP, TEMP, 1
	523 Compare TEMP, 1
	524 JumpIfNotEqual {545}
	525 Move X20, [X20]
	526 Call 0x3EB2AE0
	527 Move TEMP, 1
	528 Not TEMP
	529 Move W8, TEMP
	530 Move [X19+8], W8
	531 Move X0, 0xD1A000
	532 Move X0, [X0+224]
	533 Call 0x1C17D08
	534 Move W8, [X0+224]
	535 Compare W8, 0
	536 JumpIfNotEqual {538}
	537 Call 0x1C17DFC
	538 Move X0, 0xD1A000
	539 Move X0, [X0+400]
	540 Call 0x1C17D08
	541 Move X2, X0
	542 Move X0, X19
	543 Move X1, X20
	544 Call AsyncTaskMethodBuilder`1<Boolean>.SetException, X0, X1
	545 Move W0, 8
	546 Call 0x3EB2AF0
	547 Move X8, [X20]
	548 Move [X0], X8
	549 Move X1, 0xAD1000
	550 Add X1, X1, 3672
	551 Move X2, X31
	552 Call 0x3EB2B00
	553 Move X22, X0
	554 Call 0x3EB2AE0
	555 Move X0, X22
	556 Call 0x1D2D690
	557 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x033E41F0 MOV X1, X31
	0x033E41F4 MOV X2, X19
	0x033E41F8 BL 0x1993444
	0x033E41FC ADRP X0, 0xD3F000
	0x033E4200 LDR X0, [X0 + 0x958]
	0x033E4204 BL 0x1C16D08
	0x033E4208 MOV X1, X20
	0x033E420C MOV X2, X31
	0x033E4210 BL 0x33BFB40
	0x033E4214 MOV X19, X0
	0x033E4218 ADRP X0, 0xD17000
	0x033E421C LDR X0, [X0 + 0x578]
	0x033E4220 BL 0x1C16D08
	0x033E4224 BL 0x1C16F10
	0x033E4228 MOV X1, X19
	0x033E422C MOV X2, X31
	0x033E4230 MOV X20, X0
	0x033E4234 BL 0x3314A68
	0x033E4238 ADRP X0, 0xD49000
	0x033E423C LDR X0, [X0 + 0x290]
	0x033E4240 BL 0x1C16D08
	0x033E4244 MOV X1, X0
	0x033E4248 MOV X0, X20
	0x033E424C BL 0x1C16DEC
	0x033E4250 LDR X8, [X0 + 0x40]
	0x033E4254 LDR X3, [X0 + 0x18]
	0x033E4258 LDR X2, [X0 + 0x28]
	0x033E425C MOV X0, X8
	0x033E4260 BR X3
	0x033E4264 STP X30, X19, [X31 - 0x10]!
	0x033E4268 BL 0x33E42EC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFFA000
	007 Move X21, 0xD1A000
	008 Move W8, [X22+944]
	009 Move X21, [X21+224]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xD1A000
	017 Move X0, [X0+408]
	018 Call 0x1C17CF4
	019 Move X0, 0xD1A000
	020 Move X0, [X0+224]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+944], W8
	024 Move X0, [X21]
	025 Move X21, 0xD1A000
	026 Move W8, [X0+224]
	027 Move X21, [X21+408]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Boolean>.SetStateMachine, X0, X1
	040 Return 

