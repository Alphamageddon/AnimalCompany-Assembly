Type: System.Threading.LockRecursionException

Method: System.Void .ctor()

Disassembly:
	0x033DDC38 ADRP X21, 0x1000000
	0x033DDC3C ADRP X20, 0xD1E000
	0x033DDC40 LDRB W8, [X21 + 0x371]
	0x033DDC44 LDR X20, [X20 + 0x7D8]
	0x033DDC48 MOV X19, X0
	0x033DDC4C TBNZ X8, 0x0, 0x33DDC64
	0x033DDC50 ADRP X0, 0xD1E000
	0x033DDC54 LDR X0, [X0 + 0x7D8]
	0x033DDC58 BL 0x1C16CF4
	0x033DDC5C MOVZ W8, 0x1
	0x033DDC60 STRB W8, [X21 + 0x371]
	0x033DDC64 LDR X0, [X20]
	0x033DDC68 LDR W8, [X0 + 0xE0]
	0x033DDC6C CBNZ W8, 0x33DDC74
	0x033DDC70 BL 0x1C16DFC
	0x033DDC74 LDR X8, [X19]
	0x033DDC78 CBZ X8, 0x33DDC8C
	0x033DDC7C LDR W21, [X8 + 0x20]
	0x033DDC80 BL 0x1C16D44
	0x033DDC84 CMP W21, 0x2
	0x033DDC88 B.GE 0x33DDC98
	0x033DDC8C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1001000
	006 Move X21, 0xD17000
	007 Move W8, [X20+864]
	008 Move X21, [X21+2000]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD17000
	015 Move X0, [X0+2000]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+864], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Exception..ctor, X0
	031 Return 

Method: System.Void .ctor(System.String message)

Disassembly:
	0x033DDC90 LDP X30, X21, [X31], #0x20
	0x033DDC94 RET
	0x033DDC98 LDR X0, [X20]
	0x033DDC9C BL 0x19903D0
	0x033DDCA0 MOV X0, X19
	0x033DDCA4 BL 0x33DDCA8
	0x033DDCA8 STR X30, [X31 - 0x20]!
	0x033DDCAC STP X20, X19, [X31 + 0x10]
	0x033DDCB0 LDR X19, [X0]
	0x033DDCB4 ADRP X0, 0xD1E000
	0x033DDCB8 LDR X0, [X0 + 0x8A8]
	0x033DDCBC BL 0x1C16D08
	0x033DDCC0 BL 0x1C16F10
	0x033DDCC4 MOV X20, X0
	0x033DDCC8 ADRP X0, 0xD4E000
	0x033DDCCC LDR X0, [X0 + 0x188]
	0x033DDCD0 BL 0x1C16D08
	0x033DDCD4 MOV X1, X0
	0x033DDCD8 MOV X0, X20
	0x033DDCDC MOV X2, X19
	0x033DDCE0 MOV X3, X31
	0x033DDCE4 BL 0x338CA10
	0x033DDCE8 ADRP X0, 0xD4F000
	0x033DDCEC LDR X0, [X0 + 0xF70]
	0x033DDCF0 BL 0x1C16D08
	0x033DDCF4 MOV X1, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1001000
	007 Move X22, 0xD17000
	008 Move W8, [X21+865]
	009 Move X22, [X22+2000]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD17000
	017 Move X0, [X0+2000]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+865], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call Exception..ctor, X0, X1
	035 Return 

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x033DDCF8 MOV X0, X20
	0x033DDCFC BL 0x1C16DEC
	0x033DDD00 STR X30, [X31 - 0x30]!
	0x033DDD04 STP X22, X21, [X31 + 0x10]
	0x033DDD08 STP X20, X19, [X31 + 0x20]
	0x033DDD0C ADRP X20, 0x1000000
	0x033DDD10 ADRP X19, 0xD4F000
	0x033DDD14 LDRB W8, [X20 + 0x372]
	0x033DDD18 LDR X19, [X19 + 0xF78]
	0x033DDD1C TBNZ X8, 0x0, 0x33DDD58
	0x033DDD20 ADRP X0, 0xD40000
	0x033DDD24 LDR X0, [X0 + 0xE48]
	0x033DDD28 BL 0x1C16CF4
	0x033DDD2C ADRP X0, 0xD1E000
	0x033DDD30 LDR X0, [X0 + 0x7D8]
	0x033DDD34 BL 0x1C16CF4
	0x033DDD38 ADRP X0, 0xD4F000
	0x033DDD3C LDR X0, [X0 + 0xF80]
	0x033DDD40 BL 0x1C16CF4
	0x033DDD44 ADRP X0, 0xD4F000
	0x033DDD48 LDR X0, [X0 + 0xF78]
	0x033DDD4C BL 0x1C16CF4
	0x033DDD50 MOVZ W8, 0x1
	0x033DDD54 STRB W8, [X20 + 0x372]
	0x033DDD58 LDR X0, [X19]
	0x033DDD5C ADRP X22, 0xD40000
	0x033DDD60 ADRP X20, 0xD4F000
	0x033DDD64 ADRP X21, 0xD1E000
	0x033DDD68 LDR W8, [X0 + 0xE0]
	0x033DDD6C LDR X22, [X22 + 0xE48]
	0x033DDD70 LDR X20, [X20 + 0xF80]
	0x033DDD74 LDR X21, [X21 + 0x7D8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1001000
	009 Move X23, 0xD17000
	010 Move W8, [X24+866]
	011 Move X23, [X23+2000]
	012 Move X19, X3
	013 Move X20, X2
	014 Move X21, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xD17000
	021 Move X0, [X0+2000]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+866], W8
	025 Move X0, [X23]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X22
	031 Move X1, X21
	032 Move X2, X20
	033 Move X3, X19
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X22, [X31+32]
	037 Move X21, [X31+40]
	038 Move X24, [X31+16]
	039 Move X23, [X31+24]
	040 Move X4, X31
	041 Move X30, [X31+64]
	042 Call Exception..ctor, X0, X1, X2
	043 Return 

