Type: System.Threading.RegisteredWaitHandle

Method: System.Void .ctor(System.Threading.WaitHandle waitObject, System.Threading.WaitOrTimerCallback callback, System.Object state, System.TimeSpan timeout, System.Boolean executeOnlyOnce)

Disassembly:
	0x033EAA84 ADRP X0, 0xD42000
	0x033EAA88 LDR X0, [X0 + 0x448]
	0x033EAA8C BL 0x1C16CF4
	0x033EAA90 ADRP X0, 0xD43000
	0x033EAA94 LDR X0, [X0 + 0x558]
	0x033EAA98 BL 0x1C16CF4
	0x033EAA9C ADRP X0, 0xD43000
	0x033EAAA0 LDR X0, [X0 + 0x268]
	0x033EAAA4 BL 0x1C16CF4
	0x033EAAA8 MOVZ W8, 0x1
	0x033EAAAC STRB W8, [X22 + 0x413]
	0x033EAAB0 STURB W31, [X29 - 0xC]
	0x033EAAB4 CBZ X19, 0x33EAD04
	0x033EAAB8 LDR W8, [X19 + 0x18]
	0x033EAABC CMP W8, 0x40
	0x033EAAC0 B.GT 0x33EABD0
	0x033EAAC4 MOV X0, X31
	0x033EAAC8 BL 0x33DD700
	0x033EAACC LDR X23, [X19 + 0x18]
	0x033EAAD0 MOV X22, X0
	0x033EAAD4 MOVN W24, 0x0
	0x033EAAD8 CMP W23, 0x1
	0x033EAADC B.LT 0x33EAB2C
	0x033EAAE0 ADD W8, W24, 0x1
	0x033EAAE4 CMP W8, W23
	0x033EAAE8 STURB W31, [X29 - 0xC]
	0x033EAAEC B.CS 0x33EAD14
	0x033EAAF0 ADD X8, X19, W8, 0x3, SXTW
	0x033EAAF4 LDR X0, [X8 + 0x20]
	0x033EAAF8 CBZ X0, 0x33EAD0C
	0x033EAAFC BL 0x33EA154
	0x033EAB00 CBZ X0, 0x33EAD10
	0x033EAB04 SUB X1, X29, 0xC
	0x033EAB08 MOV X2, X31
	0x033EAB0C BL 0x32BF948
	0x033EAB10 LDR X23, [X19 + 0x18]
	0x033EAB14 ADD W8, W24, 0x1
	0x033EAB18 ADD W9, W24, 0x2
	0x033EAB1C MOV W24, W8
	0x033EAB20 CMP W9, W23
	0x033EAB24 B.LT 0x33EAAE0
	0x033EAB28 MOV W24, W8
	0x033EAB2C CBZ X22, 0x33EABDC
	0x033EAB30 MOV X0, X22

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0xFF4000
	011 Move X25, 0xD3B000
	012 Move W8, [X26+1045]
	013 Move X25, [X25+1992]
	014 Move W24, W5
	015 Move X21, X4
	016 Move X20, X3
	017 Move X22, X2
	018 Move X23, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0xD3B000
	025 Move X0, [X0+1992]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X26+1045], W8
	029 Move X0, X19
	030 Move X1, X31
	031 And W24, W24, 1
	032 Call MarshalByRefObject..ctor, X0
	033 Move [X19+24], X23
	034 Move [X19+32], X22
	035 Move [X19+64], X21
	036 Move [X19+76], W24
	037 Move [X19+40], X20
	038 Move [X19+48], X31
	039 Move X0, [X25]
	040 Call 0x1C17F10
	041 Move W1, W31
	042 Move X2, X31
	043 Move X20, X0
	044 Call ManualResetEvent..ctor, X0, X1
	045 Move [X19+56], X20
	046 Move [X19+72], W31
	047 Move [X19+77], W31
	048 Move X20, [X31+64]
	049 Move X19, [X31+72]
	050 Move X22, [X31+48]
	051 Move X21, [X31+56]
	052 Move X24, [X31+32]
	053 Move X23, [X31+40]
	054 Move X26, [X31+16]
	055 Move X25, [X31+24]
	056 Move X30, [X31+80]
	057 Return 

Method: System.Void Wait(System.Object state)

Disassembly:
	0x033EC3F4 MOV X0, X19
	0x033EC3F8 LDP X20, X19, [X31 + 0x30]
	0x033EC3FC LDP X22, X21, [X31 + 0x20]
	0x033EC400 LDP X24, X23, [X31 + 0x10]
	0x033EC404 MOV X1, X31
	0x033EC408 LDR X30, [X31], #0x40
	0x033EC40C B 0x33E6A6C
	0x033EC410 BL 0x1C16F20
	0x033EC414 STR X30, [X31 - 0x10]!
	0x033EC418 LDR X0, [X0 + 0x28]
	0x033EC41C CBZ X0, 0x33EC42C
	0x033EC420 MOV X1, X31
	0x033EC424 LDR X30, [X31], #0x10
	0x033EC428 B 0x33DE66C
	0x033EC42C BL 0x1C16F20
	0x033EC430 SUB X31, X31, 0x30
	0x033EC434 STP X30, X21, [X31 + 0x10]
	0x033EC438 STP X20, X19, [X31 + 0x20]
	0x033EC43C ADRP X20, 0xFF1000
	0x033EC440 LDRB W8, [X20 + 0x41E]
	0x033EC444 MOV X19, X0
	0x033EC448 TBNZ X8, 0x0, 0x33EC460
	0x033EC44C ADRP X0, 0xD41000
	0x033EC450 LDR X0, [X0 + 0x5B8]
	0x033EC454 BL 0x1C16CF4
	0x033EC458 MOVZ W8, 0x1
	0x033EC45C STRB W8, [X20 + 0x41E]
	0x033EC460 MOV X0, X31
	0x033EC464 BL 0x33E3C68
	0x033EC468 CBNZ X0, 0x33EC470
	0x033EC46C BL 0x1C16F20
	0x033EC470 ADRP X8, 0xD41000
	0x033EC474 LDR X8, [X8 + 0x5B8]
	0x033EC478 MOV X2, X31
	0x033EC47C LDR X1, [X8]
	0x033EC480 BL 0x33E7118
	0x033EC484 STRB W31, [X31 + 0xC]
	0x033EC488 ADD X1, X31, 0xC
	0x033EC48C MOV X0, X19
	0x033EC490 MOV X2, X31
	0x033EC494 BL 0x33DE64C
	0x033EC498 LDR X0, [X19 + 0x28]
	0x033EC49C CBZ X0, 0x33EC4EC
	0x033EC4A0 MOV X1, X31
	0x033EC4A4 BL 0x33E207C
	0x033EC4A8 MOV X0, X19
	0x033EC4AC BL 0x33EC560
	0x033EC4B0 MOV W21, W0
	0x033EC4B4 MOV X20, X31
	0x033EC4B8 LDRB W8, [X31 + 0xC]
	0x033EC4BC CBZ W8, 0x33EC4CC
	0x033EC4C0 MOV X0, X19
	0x033EC4C4 MOV X1, X31
	0x033EC4C8 BL 0x33E14E4
	0x033EC4CC CBNZ X20, 0x33EC51C
	0x033EC4D0 LDR X0, [X19 + 0x28]
	0x033EC4D4 CBZ X0, 0x33EC46C
	0x033EC4D8 LDR X8, [X0]
	0x033EC4DC MOV W1, W21
	0x033EC4E0 LDP X9, X2, [X8 + 0x1E8]
	0x033EC4E4 BLR X9
	0x033EC4E8 B 0x33EC484
	0x033EC4EC BL 0x1C16F20
	0x033EC4F0 B 0x33EC530
	0x033EC4F4 B 0x33EC500
	0x033EC4F8 B 0x33EC500
	0x033EC4FC B 0x33EC500
	0x033EC500 CMP W1, 0x1
	0x033EC504 B.NE 0x33EC524
	0x033EC508 BL 0x3EB1AD0
	0x033EC50C LDR X20, [X0]
	0x033EC510 BL 0x3EB1AE0
	0x033EC514 MOVN W21, 0x0
	0x033EC518 B 0x33EC4B8
	0x033EC51C MOV X0, X20
	0x033EC520 BL 0x1C16F18
	0x033EC524 MOV X21, X0
	0x033EC528 MOV X20, X31
	0x033EC52C B 0x33EC534
	0x033EC530 MOV X21, X0
	0x033EC534 LDRB W8, [X31 + 0xC]
	0x033EC538 CBZ W8, 0x33EC548
	0x033EC53C MOV X0, X19
	0x033EC540 MOV X1, X31
	0x033EC544 BL 0x33E14E4
	0x033EC548 CBNZ X20, 0x33EC554
	0x033EC54C MOV X0, X21
	0x033EC550 BL 0x1D2C690
	0x033EC554 MOV X0, X20
	0x033EC558 BL 0x1C16F18
	0x033EC55C BL 0x1990590
	0x033EC560 SUB X31, X31, 0x70
	0x033EC564 STP X29, X30, [X31 + 0x10]
	0x033EC568 STP X28, X27, [X31 + 0x20]
	0x033EC56C STP X26, X25, [X31 + 0x30]
	0x033EC570 STP X24, X23, [X31 + 0x40]
	0x033EC574 STP X22, X21, [X31 + 0x50]
	0x033EC578 STP X20, X19, [X31 + 0x60]
	0x033EC57C ADRP X20, 0xFF1000
	0x033EC580 LDRB W8, [X20 + 0x424]
	0x033EC584 MOV X19, X0
	0x033EC588 TBNZ X8, 0x0, 0x33EC5E8
	0x033EC58C ADRP X0, 0xD41000
	0x033EC590 LDR X0, [X0 + 0x5C0]
	0x033EC594 BL 0x1C16CF4
	0x033EC598 ADRP X0, 0xD41000
	0x033EC59C LDR X0, [X0 + 0x5C8]
	0x033EC5A0 BL 0x1C16CF4
	0x033EC5A4 ADRP X0, 0xD41000
	0x033EC5A8 LDR X0, [X0 + 0x5D0]
	0x033EC5AC BL 0x1C16CF4
	0x033EC5B0 ADRP X0, 0xD41000
	0x033EC5B4 LDR X0, [X0 + 0x5D8]
	0x033EC5B8 BL 0x1C16CF4
	0x033EC5BC ADRP X0, 0xD41000
	0x033EC5C0 LDR X0, [X0 + 0x5E0]
	0x033EC5C4 BL 0x1C16CF4
	0x033EC5C8 ADRP X0, 0xD07000
	0x033EC5CC LDR X0, [X0 + 0x5A8]
	0x033EC5D0 BL 0x1C16CF4
	0x033EC5D4 ADRP X0, 0xD41000
	0x033EC5D8 LDR X0, [X0 + 0x5E8]
	0x033EC5DC BL 0x1C16CF4
	0x033EC5E0 MOVZ W8, 0x1
	0x033EC5E4 STRB W8, [X20 + 0x424]
	0x033EC5E8 ADRP X23, 0xD41000
	0x033EC5EC ADRP X22, 0xD41000
	0x033EC5F0 LDR X23, [X23 + 0x5E8]
	0x033EC5F4 LDR X22, [X22 + 0x5C8]
	0x033EC5F8 BL 0x1C4C53C
	0x033EC5FC LDRB W20, [X19 + 0x10]
	0x033EC600 MOV X21, X0
	0x033EC604 BL 0x1C16D44
	0x033EC608 CBZ W20, 0x33EC63C
	0x033EC60C LDR X0, [X23]
	0x033EC610 LDR X20, [X19 + 0x18]
	0x033EC614 ADD X1, X31, 0x8
	0x033EC618 STRB W31, [X31 + 0x8]
	0x033EC61C BL 0x1C16E04
	0x033EC620 CBZ X20, 0x33EC870
	0x033EC624 LDR X2, [X22]
	0x033EC628 MOV X1, X0
	0x033EC62C MOV X0, X20
	0x033EC630 BL 0x301DC6C
	0x033EC634 BL 0x1C16D44
	0x033EC638 STRB W31, [X19 + 0x10]
	0x033EC63C LDR X0, [X19 + 0x18]
	0x033EC640 CBZ X0, 0x33EC870
	0x033EC644 ADRP X27, 0xD41000
	0x033EC648 ADRP X25, 0xD07000
	0x033EC64C ADRP X28, 0xD41000
	0x033EC650 ADRP X29, 0xD41000
	0x033EC654 LDR X27, [X27 + 0x5D8]
	0x033EC658 LDR X25, [X25 + 0x5A8]
	0x033EC65C LDR X28, [X28 + 0x5E0]
	0x033EC660 LDR X29, [X29 + 0x5C0]
	0x033EC664 MOV W22, W31
	0x033EC668 MOVN X26, 0x80000000
	0x033EC66C MOVN X20, 0x80000000
	0x033EC670 LDR W8, [X0 + 0x18]
	0x033EC674 CMP W22, W8
	0x033EC678 B.GE 0x33EC6FC
	0x033EC67C LDR X2, [X27]
	0x033EC680 MOV W1, W22
	0x033EC684 BL 0x301BCCC
	0x033EC688 CBZ X0, 0x33EC870
	0x033EC68C LDRB W8, [X0 + 0x41]
	0x033EC690 MOV X23, X0
	0x033EC694 CBNZ W8, 0x33EC6EC
	0x033EC698 LDR X24, [X23 + 0x38]
	0x033EC69C CMP X24, X21
	0x033EC6A0 B.GT 0x33EC6B0
	0x033EC6A4 MOV X1, X23
	0x033EC6A8 BL 0x33ECAFC
	0x033EC6AC LDR X24, [X23 + 0x38]
	0x033EC6B0 LDR X0, [X25]
	0x033EC6B4 LDR W8, [X0 + 0xE0]
	0x033EC6B8 CBNZ W8, 0x33EC6C0
	0x033EC6BC BL 0x1C16DFC
	0x033EC6C0 MOV X0, X20
	0x033EC6C4 MOV X1, X24
	0x033EC6C8 MOV X2, X31
	0x033EC6CC BL 0x337EEA0
	0x033EC6D0 LDR X8, [X23 + 0x38]
	0x033EC6D4 MOV X20, X0
	0x033EC6D8 CMP X8, X21
	0x033EC6DC B.LE 0x33EC6EC
	0x033EC6E0 CMP X8, X26
	0x033EC6E4 B.EQ 0x33EC6EC
	0x033EC6E8 STRB W31, [X23 + 0x41]
	0x033EC6EC LDR X0, [X19 + 0x18]
	0x033EC6F0 ADD W22, W22, 0x1
	0x033EC6F4 CBNZ X0, 0x33EC670
	0x033EC6F8 B 0x33EC870
	0x033EC6FC CMP W8, 0x1
	0x033EC700 B.LT 0x33EC7A8
	0x033EC704 MOV W21, W31
	0x033EC708 MOVZ W23, 0x1
	0x033EC70C LDR X2, [X27]
	0x033EC710 MOV W1, W21
	0x033EC714 BL 0x301BCCC
	0x033EC718 CBZ X0, 0x33EC870
	0x033EC71C LDRB W8, [X0 + 0x41]
	0x033EC720 CBZ W8, 0x33EC790
	0x033EC724 STRB W31, [X0 + 0x42]
	0x033EC728 BL 0x1C16D44
	0x033EC72C LDR X22, [X19 + 0x18]
	0x033EC730 STRB W23, [X19 + 0x10]
	0x033EC734 CBZ X22, 0x33EC870
	0x033EC738 LDR W8, [X22 + 0x18]
	0x033EC73C LDR X2, [X27]
	0x033EC740 MOV X0, X22
	0x033EC744 SUB W1, W8, 0x1
	0x033EC748 BL 0x301BCCC
	0x033EC74C LDR X3, [X28]
	0x033EC750 MOV X2, X0
	0x033EC754 MOV X0, X22
	0x033EC758 MOV W1, W21
	0x033EC75C BL 0x301BD20
	0x033EC760 LDR X0, [X19 + 0x18]
	0x033EC764 CBZ X0, 0x33EC870
	0x033EC768 LDR W8, [X0 + 0x18]
	0x033EC76C LDR X2, [X29]
	0x033EC770 SUB W1, W8, 0x1
	0x033EC774 BL 0x301DA48
	0x033EC778 LDR X0, [X19 + 0x18]
	0x033EC77C CBZ X0, 0x33EC870
	0x033EC780 LDR W8, [X0 + 0x18]
	0x033EC784 CBZ W8, 0x33EC7A8
	0x033EC788 SUB W21, W21, 0x1
	0x033EC78C B 0x33EC798
	0x033EC790 LDR X0, [X19 + 0x18]
	0x033EC794 CBZ X0, 0x33EC870
	0x033EC798 LDR W8, [X0 + 0x18]
	0x033EC79C ADD W21, W21, 0x1
	0x033EC7A0 CMP W21, W8
	0x033EC7A4 B.LT 0x33EC70C
	0x033EC7A8 LDRB W21, [X19 + 0x10]
	0x033EC7AC BL 0x1C16D44
	0x033EC7B0 CBZ W21, 0x33EC7F4
	0x033EC7B4 ADRP X8, 0xD41000
	0x033EC7B8 LDR X21, [X19 + 0x18]
	0x033EC7BC LDR X8, [X8 + 0x5E8]
	0x033EC7C0 ADD X1, X31, 0x0
	0x033EC7C4 STRB W31, [X31]
	0x033EC7C8 LDR X0, [X8]
	0x033EC7CC BL 0x1C16E04
	0x033EC7D0 CBZ X21, 0x33EC870
	0x033EC7D4 ADRP X8, 0xD41000
	0x033EC7D8 LDR X8, [X8 + 0x5C8]
	0x033EC7DC MOV X1, X0
	0x033EC7E0 MOV X0, X21
	0x033EC7E4 LDR X2, [X8]
	0x033EC7E8 BL 0x301DC6C
	0x033EC7EC BL 0x1C16D44
	0x033EC7F0 STRB W31, [X19 + 0x10]
	0x033EC7F4 MOVN X8, 0x80000000
	0x033EC7F8 CMP X20, X8
	0x033EC7FC STR X20, [X19 + 0x20]
	0x033EC800 B.NE 0x33EC80C
	0x033EC804 MOVN W0, 0x0
	0x033EC808 B 0x33EC850
	0x033EC80C BL 0x1C4C53C
	0x033EC810 MOVN X9, 0xEC78
	0x033EC814 SUB X8, X20, X0
	0x033EC818 MOVK X9, 0x0
	0x033EC81C CMP X8, X9
	0x033EC820 B.GT 0x33EC84C
	0x033EC824 MOVZ X9, 0x594B
	0x033EC828 MOVK X9, 0x38860000
	0x033EC82C MOVK X9, 0xC5D6
	0x033EC830 MOVK X9, 0x346D0000
	0x033EC834 SMULH X8, X8, X9, X31
	0x033EC838 UBFM X9, X8, 0x3F, 0x3F
	0x033EC83C UBFM X8, X8, 0xB, 0x3F
	0x033EC840 ADD W8, W8, W9
	0x033EC844 BIC W0, W8, W8, 0x1F
	0x033EC848 B 0x33EC850
	0x033EC84C ORR W0, W31, 0x7FFFFFFE
	0x033EC850 LDP X20, X19, [X31 + 0x60]
	0x033EC854 LDP X22, X21, [X31 + 0x50]
	0x033EC858 LDP X24, X23, [X31 + 0x40]
	0x033EC85C LDP X26, X25, [X31 + 0x30]
	0x033EC860 LDP X28, X27, [X31 + 0x20]
	0x033EC864 LDP X29, X30, [X31 + 0x10]
	0x033EC868 ADD X31, X31, 0x70
	0x033EC86C RET
	0x033EC870 BL 0x1C16F20
	0x033EC874 STR X30, [X31 - 0x20]!
	0x033EC878 STP X20, X19, [X31 + 0x10]
	0x033EC87C ADRP X20, 0xFF1000
	0x033EC880 ADRP X19, 0xD41000
	0x033EC884 LDRB W8, [X20 + 0x41F]
	0x033EC888 LDR X19, [X19 + 0x578]
	0x033EC88C TBNZ X8, 0x0, 0x33EC8A4
	0x033EC890 ADRP X0, 0xD41000
	0x033EC894 LDR X0, [X0 + 0x578]
	0x033EC898 BL 0x1C16CF4
	0x033EC89C MOVZ W8, 0x1
	0x033EC8A0 STRB W8, [X20 + 0x41F]
	0x033EC8A4 LDR X0, [X19]
	0x033EC8A8 LDR W8, [X0 + 0xE0]
	0x033EC8AC CBNZ W8, 0x33EC8B8
	0x033EC8B0 BL 0x1C16DFC
	0x033EC8B4 LDR X0, [X19]
	0x033EC8B8 LDR X8, [X0 + 0xB8]
	0x033EC8BC LDP X20, X19, [X31 + 0x10]
	0x033EC8C0 LDR X0, [X8]
	0x033EC8C4 LDR X30, [X31], #0x20
	0x033EC8C8 RET
	0x033EC8CC STR X30, [X31 - 0x30]!
	0x033EC8D0 STP X22, X21, [X31 + 0x10]
	0x033EC8D4 STP X20, X19, [X31 + 0x20]
	0x033EC8D8 ADRP X22, 0xFF1000
	0x033EC8DC ADRP X21, 0xD41000
	0x033EC8E0 ADRP X20, 0xD41000
	0x033EC8E4 LDRB W8, [X22 + 0x420]
	0x033EC8E8 LDR X21, [X21 + 0x5F0]
	0x033EC8EC LDR X20, [X20 + 0x5F8]
	0x033EC8F0 MOV X19, X0
	0x033EC8F4 TBNZ X8, 0x0, 0x33EC918
	0x033EC8F8 ADRP X0, 0xD41000
	0x033EC8FC LDR X0, [X0 + 0x5F8]
	0x033EC900 BL 0x1C16CF4
	0x033EC904 ADRP X0, 0xD41000
	0x033EC908 LDR X0, [X0 + 0x5F0]
	0x033EC90C BL 0x1C16CF4
	0x033EC910 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+48], X26
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X20, 0xFF2000
	012 Move W8, [X20+1046]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0xD08000
	019 Move X0, [X0+2904]
	020 Call 0x1C17CF4
	021 Move X0, 0xD42000
	022 Move X0, [X0+1392]
	023 Call 0x1C17CF4
	024 Move X0, 0xD11000
	025 Move X0, [X0+2392]
	026 Call 0x1C17CF4
	027 Move X0, 0xD42000
	028 Move X0, [X0+1320]
	029 Call 0x1C17CF4
	030 Move X0, 0xD42000
	031 Move X0, [X0+616]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+1046], W8
	035 Move [X31+40], W31
	036 Move [X31+44], W31
	037 Move X0, [X19+24]
	038 Compare X0, 0
	039 JumpIfEqual {150}
	040 Call WaitHandle.get_SafeWaitHandle, X0
	041 Compare X0, 0
	042 JumpIfEqual {151}
	043 Add X1, X31, 44
	044 Move X2, X31
	045 Call SafeHandle.DangerousAddRef, X0, X1
	046 Move X8, 0xD42000
	047 Move X8, [X8+1320]
	048 Move X0, [X8]
	049 Move W1, 2
	050 Call 0x1C17D6C
	051 Move X21, X0
	052 Compare X0, 0
	053 JumpIfEqual {152}
	054 Move X20, [X19+24]
	055 Compare X20, 0
	056 JumpIfEqual {63}
	057 Move X8, [X21]
	058 Move X1, [X8+64]
	059 Move X0, X20
	060 Call 0x1C17E00
	061 Compare X0, 0
	062 JumpIfEqual {155}
	063 Move W8, [X21+24]
	064 Compare W8, 0
	065 JumpIfEqual {153}
	066 Move [X21+32], X20
	067 Move X20, [X19+56]
	068 Compare X20, 0
	069 JumpIfEqual {77}
	070 Move X8, [X21]
	071 Move X1, [X8+64]
	072 Move X0, X20
	073 Call 0x1C17E00
	074 Compare X0, 0
	075 JumpIfEqual {158}
	076 Move W8, [X21+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X23, 0xD42000
	079 Move X24, 0xD11000
	080 Move X25, 0xD42000
	081 Move X26, 0xD08000
	082 Move X23, [X23+616]
	083 Move X24, [X24+2392]
	084 Move X25, [X25+1392]
	085 Move X26, [X26+2904]
	086 Move [X21+40], X20
	087 Move X0, [X23]
	088 Move X20, [X19+64]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Move X0, X21
	094 Move X1, X20
	095 Move W2, W31
	096 Call WaitHandle.WaitAny, X0, X1, X2
	097 Move W8, [X19+77]
	098 Compare W8, 0
	099 JumpIfNotEqual {192}
	100 Move W22, W0
	101 Move [X31+40], W31
	102 Add X1, X31, 40
	103 Move X0, X19
	104 Move X2, X31
	105 Call Monitor.Enter, X0, X1
	106 Move W8, [X19+72]
	107 Move X20, X31
	108 Add W8, W8, 1
	109 Move [X19+72], W8
	110 Move W8, [X31+40]
	111 Compare W8, 0
	112 JumpIfEqual {116}
	113 Move X0, X19
	114 Move X1, X31
	115 Call Monitor.Exit, X0
	116 Compare X20, 0
	117 JumpIfNotEqual {148}
	118 Move X0, [X24]
	119 Call 0x1C17F10
	120 Move X2, [X25]
	121 Move X20, X0
	122 Move X1, X19
	123 Call WaitCallback..ctor, X0, X1, X2
	124 Move X0, [X26]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 NotImplemented "Instruction CSET not yet implemented."
	127 Move [X31+28], W8
	128 Add X1, X31, 28
	129 Call 0x1C17E04
	130 Move X1, X0
	131 Move X0, X20
	132 Call ThreadPool.QueueUserWorkItem, X0, X1
	133 Move W8, [X19+77]
	134 Compare W8, 0
	135 JumpIfNotEqual {192}
	136 Move W8, [X19+76]
	137 Compare W8, 0
	138 JumpIfEqual {87}
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X20, X0
	141 Move [X31+8], X1
	142 Move X0, X20
	143 Call 0x3EB2AD0
	144 Move X8, [X0]
	145 Move [X31+16], X8
	146 Call 0x3EB2AE0
	147 Move X20, [X31+16]
	148 Move X0, X20
	149 Call 0x1C17F18
	150 Call 0x1C17F20
	151 Call 0x1C17F20
	152 Call 0x1C17F20
	153 Call 0x1C17F28
	154 Call 0x1C17F28
	155 Call 0x1C17F44
	156 Move X1, X31
	157 Call 0x1C17DEC
	158 Call 0x1C17F44
	159 Move X1, X31
	160 Call 0x1C17DEC
	161 Move [X31+16], X31
	162 Move W8, [X31+40]
	163 Compare W8, 0
	164 JumpIfEqual {168}
	165 Move X0, X19
	166 Move X1, X31
	167 Call Monitor.Exit, X0
	168 Move X1, [X31+8]
	169 Move X8, [X31+16]
	170 Compare X8, 0
	171 JumpIfEqual {177}
	172 Move X0, [X31+16]
	173 Call 0x1C17F18
	174 Move X20, X0
	175 Move [X31+8], X1
	176 Move X20, X0
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X0, X20
	179 Call 0x3EB2AD0
	180 Move X20, X0
	181 Move X0, 0xD0E000
	182 Move X0, [X0+3264]
	183 Call 0x1C17D08
	184 Move X8, [X20]
	185 Move X1, [X8]
	186 Call 0x1C18270
	187 Move TEMP, X0
	188 And TEMP, TEMP, 1
	189 Compare TEMP, 1
	190 JumpIfNotEqual {269}
	191 Call 0x3EB2AE0
	192 Move [X31+40], W31
	193 Add X1, X31, 40
	194 Move X0, X19
	195 Move X2, X31
	196 Call Monitor.Enter, X0, X1
	197 Move W8, [X19+72]
	198 Move W9, 1
	199 Move [X19+77], W9
	200 Compare W8, 0
	201 JumpIfEqual {203}
	202 Move X21, X31
	203 Move X0, [X19+48]
	204 Compare X0, 0
	205 JumpIfEqual {202}
	206 Call WaitHandle.get_SafeWaitHandle, X0
	207 Call NativeEventCalls.SetEvent, X0
	208 Move X21, X31
	209 Move [X19+48], X31
	210 Move W8, [X31+40]
	211 Compare W8, 0
	212 JumpIfEqual {216}
	213 Move X0, X19
	214 Move X1, X31
	215 Call Monitor.Exit, X0
	216 Compare X21, 0
	217 JumpIfNotEqual {267}
	218 Move W8, [X31+44]
	219 Compare W8, 0
	220 JumpIfEqual {229}
	221 Move X0, [X19+24]
	222 Compare X0, 0
	223 JumpIfEqual {264}
	224 Call WaitHandle.get_SafeWaitHandle, X0
	225 Compare X0, 0
	226 JumpIfEqual {264}
	227 Move X1, X31
	228 Call SafeHandle.DangerousRelease, X0
	229 Compare X21, 0
	230 JumpIfNotEqual {265}
	231 Move X20, [X31+96]
	232 Move X19, [X31+104]
	233 Move X22, [X31+80]
	234 Move X21, [X31+88]
	235 Move X24, [X31+64]
	236 Move X23, [X31+72]
	237 Move X26, [X31+48]
	238 Move X25, [X31+56]
	239 Move X30, [X31+32]
	240 Add X31, X31, 112
	241 Return 
	242 Move X22, X1
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Move X0, X20
	245 Call 0x3EB2AD0
	246 Move X20, X0
	247 Move X0, 0xD31000
	248 Move X0, [X0+1208]
	249 Call 0x1C17D08
	250 Move X8, [X20]
	251 Move X1, [X8]
	252 Call 0x1C18270
	253 Move TEMP, X0
	254 And TEMP, TEMP, 1
	255 Compare TEMP, 1
	256 JumpIfNotEqual {277}
	257 Move X20, [X20]
	258 Call 0x3EB2AE0
	259 Move W8, [X31+44]
	260 Compare W8, 0
	261 JumpIfEqual {231}
	262 Move X0, X20
	263 Call 0x1C17F18
	264 Call 0x1C17F20
	265 Move X0, X21
	266 Call 0x1C17F18
	267 Move X0, X21
	268 Call 0x1C17F18
	269 Move W0, 8
	270 Call 0x3EB2AF0
	271 Move X8, [X20]
	272 Move [X0], X8
	273 Move X1, 0xAC9000
	274 Add X1, X1, 3672
	275 Move X2, X31
	276 Call 0x3EB2B00
	277 Move W0, 8
	278 Call 0x3EB2AF0
	279 Move X8, [X20]
	280 Move [X0], X8
	281 Move X1, 0xAC9000
	282 Add X1, X1, 3672
	283 Move X2, X31
	284 Call 0x3EB2B00
	285 Move X20, X0
	286 Move W22, W1
	287 Move X21, X1
	288 Move X20, X0
	289 Call 0x3EB2AE0
	290 Move W22, W21
	291 Move W8, 1
	292 NotImplemented "Instruction CMP not yet implemented."
	293 Move X0, X20
	294 Call 0x3EB2AD0
	295 Move X21, [X0]
	296 Call 0x3EB2AE0
	297 Move X21, X31
	298 Move X20, X0
	299 Move W8, [X31+44]
	300 Compare W8, 0
	301 JumpIfNotEqual {306}
	302 Compare X21, 0
	303 JumpIfNotEqual {310}
	304 Move X0, X20
	305 Call 0x1D2D690
	306 Move X0, [X19+24]
	307 Compare X0, 0
	308 JumpIfNotEqual {312}
	309 Call 0x1C17F20
	310 Move X0, X21
	311 Call 0x1C17F18
	312 Call WaitHandle.get_SafeWaitHandle, X0
	313 Compare X0, 0
	314 JumpIfNotEqual {316}
	315 Call 0x1C17F20
	316 Move X1, X31
	317 Call SafeHandle.DangerousRelease, X0
	318 Move X21, X1
	319 Move X20, X0
	320 Call 0x3EB2AE0
	321 Move W22, W21
	322 Move X20, X0
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Move X0, X20
	325 Call 0x3EB2AD0
	326 Move X21, [X0]
	327 Call 0x3EB2AE0
	328 Move X21, X31
	329 Move W8, [X31+40]
	330 Move W22, W1
	331 Compare W8, 0
	332 JumpIfEqual {336}
	333 Move X0, X19
	334 Move X1, X31
	335 Call Monitor.Exit, X0
	336 Compare X21, 0
	337 JumpIfEqual {243}
	338 Move X0, X21
	339 Call 0x1C17F18
	340 Move X20, X0
	341 Call 0x1991590
	342 Move X20, X0
	343 Move W22, W1

Method: System.Void DoCallBack(System.Object timedOut)

Disassembly:
	0x033EC914 STRB W8, [X22 + 0x420]
	0x033EC918 BL 0x1C16D44
	0x033EC91C MOVZ W8, 0x1
	0x033EC920 MOVN X9, 0x80000000
	0x033EC924 MOV X0, X19
	0x033EC928 MOV X1, X31
	0x033EC92C STRB W8, [X19 + 0x10]
	0x033EC930 STR X9, [X19 + 0x20]
	0x033EC934 BL 0x33BDD8C
	0x033EC938 LDR X0, [X21]
	0x033EC93C BL 0x1C16F10
	0x033EC940 LDR X2, [X20]
	0x033EC944 MOVZ W1, 0x400
	0x033EC948 MOV X20, X0
	0x033EC94C BL 0x301B830
	0x033EC950 STR X20, [X19 + 0x18]
	0x033EC954 MOV X0, X19
	0x033EC958 LDP X20, X19, [X31 + 0x20]
	0x033EC95C LDP X22, X21, [X31 + 0x10]
	0x033EC960 LDR X30, [X31], #0x30
	0x033EC964 B 0x33EC318
	0x033EC968 STR X30, [X31 - 0x20]!
	0x033EC96C STP X20, X19, [X31 + 0x10]
	0x033EC970 CBZ X1, 0x33EC994
	0x033EC974 MOVZ W20, 0x1
	0x033EC978 MOV X19, X0
	0x033EC97C STRB W20, [X1 + 0x41]
	0x033EC980 BL 0x1C16D44
	0x033EC984 STRB W20, [X19 + 0x10]
	0x033EC988 LDP X20, X19, [X31 + 0x10]
	0x033EC98C LDR X30, [X31], #0x20
	0x033EC990 RET
	0x033EC994 BL 0x1C16F20
	0x033EC998 STP X30, X21, [X31 - 0x20]!
	0x033EC99C STP X20, X19, [X31 + 0x10]
	0x033EC9A0 ADRP X21, 0xFF1000
	0x033EC9A4 LDRB W8, [X21 + 0x421]
	0x033EC9A8 MOV X20, X1
	0x033EC9AC MOV X19, X0
	0x033EC9B0 TBNZ X8, 0x0, 0x33EC9D4
	0x033EC9B4 ADRP X0, 0xD41000
	0x033EC9B8 LDR X0, [X0 + 0x600]
	0x033EC9BC BL 0x1C16CF4
	0x033EC9C0 ADRP X0, 0xD41000
	0x033EC9C4 LDR X0, [X0 + 0x5D0]
	0x033EC9C8 BL 0x1C16CF4
	0x033EC9CC MOVZ W8, 0x1
	0x033EC9D0 STRB W8, [X21 + 0x421]
	0x033EC9D4 CBZ X20, 0x33ECA80
	0x033EC9D8 MOVZ W21, 0x1
	0x033EC9DC STRB W21, [X20 + 0x42]
	0x033EC9E0 BL 0x1C16D44
	0x033EC9E4 LDR X0, [X19 + 0x18]
	0x033EC9E8 STRB W21, [X19 + 0x10]
	0x033EC9EC CBZ X0, 0x33ECA80
	0x033EC9F0 ADRP X9, 0xD41000
	0x033EC9F4 LDR X9, [X9 + 0x600]
	0x033EC9F8 LDR W10, [X0 + 0x1C]
	0x033EC9FC LDR X8, [X0 + 0x10]
	0x033ECA00 LDR X9, [X9]
	0x033ECA04 ADD W10, W10, 0x1
	0x033ECA08 STR W10, [X0 + 0x1C]
	0x033ECA0C CBZ X8, 0x33ECA80
	0x033ECA10 LDRSW X10, [X0 + 0x18]
	0x033ECA14 LDR W11, [X8 + 0x18]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0xFF2000
	007 Move W8, [X21+1047]
	008 Move X19, X1
	009 Move X20, X0
	010 Move [X31+56], X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD08000
	016 Move X0, [X0+2904]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1047], W8
	020 Add X8, X31, 48
	021 Add X9, X31, 56
	022 Add X10, X31, 44
	023 Move [X31+48], X31
	024 Move [X31+44], W31
	025 Move [X31+8], X31
	026 Move [X31+16], X8
	027 Move [X31+24], X9
	028 Move [X31+32], X10
	029 Move X21, [X20+32]
	030 Compare X21, 0
	031 JumpIfEqual {50}
	032 Compare X19, 0
	033 JumpIfEqual {58}
	034 Move X8, 0xD08000
	035 Move X8, [X8+2904]
	036 Move X9, [X19]
	037 Move X1, [X8]
	038 Move X8, [X9+64]
	039 Move X9, [X1+64]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X20, [X20+40]
	042 Move X0, X19
	043 Call 0x1C17E08
	044 Move W2, [X0]
	045 Move X0, [X21+64]
	046 Move X8, [X21+24]
	047 Move X3, [X21+40]
	048 Move X1, X20
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Add X0, X31, 8
	051 Call 0x1BBDE54
	052 Move X20, [X31+80]
	053 Move X19, [X31+88]
	054 Move X30, [X31+64]
	055 Move X21, [X31+72]
	056 Add X31, X31, 96
	057 Return 
	058 Call 0x1C17F20
	059 Move X0, X19
	060 Call 0x1C181E0
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X19, X0
	063 Move X0, X19
	064 Call 0x3EB2AD0
	065 Move X8, [X0]
	066 Move [X31+8], X8
	067 Call 0x3EB2AE0
	068 Move X19, X0
	069 Add X0, X31, 8
	070 Call 0x1BBDE54
	071 Move X0, X19
	072 Call 0x1D2D690
	073 Call 0x1991590

