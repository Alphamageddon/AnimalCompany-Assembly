Type: System.Threading.WaitHandle

Method: System.Void .ctor()

Disassembly:
	0x033EAFE4 BL 0x1C16DFC
	0x033EAFE8 MOV X0, X19
	0x033EAFEC LDP X20, X19, [X31 + 0x10]
	0x033EAFF0 MOV X1, X31
	0x033EAFF4 LDP X30, X21, [X31], #0x20
	0x033EAFF8 B 0x33B3E9C
	0x033EAFFC STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call MarshalByRefObject..ctor, X0
	006 Move X0, X19
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]

Method: System.Void Init()

Disassembly:
	0x033EB000 STP X20, X19, [X31 + 0x10]
	0x033EB004 LDR X20, [X0 + 0x20]
	0x033EB008 MOV X19, X0
	0x033EB00C BL 0x1C16D44
	0x033EB010 CBZ X20, 0x33EB034
	0x033EB014 LDR X19, [X19 + 0x20]
	0x033EB018 BL 0x1C16D44
	0x033EB01C CBZ X19, 0x33EB040
	0x033EB020 MOV X0, X19
	0x033EB024 LDP X20, X19, [X31 + 0x10]
	0x033EB028 MOV X1, X31
	0x033EB02C LDR X30, [X31], #0x20
	0x033EB030 B 0x32C02B4
	0x033EB034 LDP X20, X19, [X31 + 0x10]
	0x033EB038 LDR X30, [X31], #0x20
	0x033EB03C RET
	0x033EB040 BL 0x1C16F20
	0x033EB044 STP X30, X21, [X31 - 0x20]!
	0x033EB048 STP X20, X19, [X31 + 0x10]
	0x033EB04C ADRP X21, 0xFF2000
	0x033EB050 ADRP X20, 0xD0F000
	0x033EB054 LDRB W8, [X21 + 0x411]
	0x033EB058 LDR X20, [X20 + 0xC10]
	0x033EB05C MOV X19, X0
	0x033EB060 TBNZ X8, 0x0, 0x33EB078
	0x033EB064 ADRP X0, 0xD0F000
	0x033EB068 LDR X0, [X0 + 0xC10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xFF3000
	006 Move X20, 0xD43000
	007 Move W8, [X21+1032]
	008 Move X20, [X20+616]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD43000
	015 Move X0, [X0+616]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1032], W8
	019 Call 0x1C17D44
	020 Move [X19+32], X31
	021 Move X0, [X20]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X20]
	027 Move X8, [X0+184]
	028 Move X8, [X8]
	029 Move [X19+40], W31
	030 Move [X19+24], X8
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

Method: System.Void set_Handle(System.IntPtr value)

Disassembly:
	0x033EB06C BL 0x1C16CF4
	0x033EB070 MOVZ W8, 0x1
	0x033EB074 STRB W8, [X21 + 0x411]
	0x033EB078 LDR X8, [X19]
	0x033EB07C MOVZ W1, 0x1
	0x033EB080 MOV X0, X19
	0x033EB084 LDR X9, [X8 + 0x218]
	0x033EB088 LDR X2, [X8 + 0x220]
	0x033EB08C BLR X9
	0x033EB090 LDR X0, [X20]
	0x033EB094 LDR W8, [X0 + 0xE0]
	0x033EB098 CBNZ W8, 0x33EB0A0
	0x033EB09C BL 0x1C16DFC
	0x033EB0A0 MOV X0, X19
	0x033EB0A4 LDP X20, X19, [X31 + 0x10]
	0x033EB0A8 MOV X1, X31
	0x033EB0AC LDP X30, X21, [X31], #0x20
	0x033EB0B0 B 0x33B3E9C
	0x033EB0B4 AND W2, W2, 0x1
	0x033EB0B8 B 0x1C4C540
	0x033EB0BC STR X30, [X31 - 0x20]!
	0x033EB0C0 STP X20, X19, [X31 + 0x10]
	0x033EB0C4 ADRP X20, 0xFF2000
	0x033EB0C8 ADRP X19, 0xD42000
	0x033EB0CC LDRB W8, [X20 + 0x414]
	0x033EB0D0 LDR X19, [X19 + 0x268]
	0x033EB0D4 TBNZ X8, 0x0, 0x33EB0EC
	0x033EB0D8 ADRP X0, 0xD42000
	0x033EB0DC LDR X0, [X0 + 0x268]
	0x033EB0E0 BL 0x1C16CF4
	0x033EB0E4 MOVZ W8, 0x1
	0x033EB0E8 STRB W8, [X20 + 0x414]
	0x033EB0EC MOVN W0, 0x0
	0x033EB0F0 MOV X1, X31
	0x033EB0F4 BL 0x33C6930
	0x033EB0F8 LDR X8, [X19]
	0x033EB0FC LDP X20, X19, [X31 + 0x10]
	0x033EB100 LDR X8, [X8 + 0xB8]
	0x033EB104 STR X0, [X8]
	0x033EB108 LDR X30, [X31], #0x20
	0x033EB10C RET
	0x033EB110 B 0x1C24368
	0x033EB114 B 0x1C2416C
	0x033EB118 SUB X31, X31, 0x20
	0x033EB11C STP X30, X1, [X31 + 0x10]
	0x033EB120 STP X31, X2, [X31]
	0x033EB124 ADD X1, X31, 0x18
	0x033EB128 ADD X2, X31, 0x8
	0x033EB12C ADD X3, X31, 0x0
	0x033EB130 BL 0x1C2416C
	0x033EB134 LDR X0, [X31]
	0x033EB138 LDR X30, [X31 + 0x10]
	0x033EB13C ADD X31, X31, 0x20
	0x033EB140 RET
	0x033EB144 B 0x1C24248
	0x033EB148 B 0x1C242B0
	0x033EB14C B 0x1C24278
	0x033EB150 B 0x1C24294

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFF3000
	007 Move X21, 0xD43000
	008 Move W8, [X22+1033]
	009 Move X21, [X21+616]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xD43000
	017 Move X0, [X0+624]
	018 Call 0x1C17CF4
	019 Move X0, 0xD43000
	020 Move X0, [X0+616]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1033], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X0, X19
	032 Move X2, X31
	033 Move X1, [X8]
	034 Call IntPtr.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {52}
	039 Move X21, [X20+32]
	040 Call 0x1C17D44
	041 Compare X21, 0
	042 JumpIfEqual {63}
	043 Move X21, [X20+32]
	044 Call 0x1C17D44
	045 Compare X21, 0
	046 JumpIfEqual {70}
	047 Move X0, X21
	048 Move X1, X31
	049 Call SafeHandle.SetHandleAsInvalid, X0
	050 Call 0x1C17D44
	051 Move [X20+32], X31
	052 Move X8, 0xD43000
	053 Move X8, [X8+624]
	054 Move X0, [X8]
	055 Call 0x1C17F10
	056 Move W2, 1
	057 Move X1, X19
	058 Move X3, X31
	059 Move X21, X0
	060 Call SafeWaitHandle..ctor, X0, X1, X2
	061 Call 0x1C17D44
	062 Move [X20+32], X21
	063 Move [X20+24], X19
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Return 
	070 Call 0x1C17F20

Method: Microsoft.Win32.SafeHandles.SafeWaitHandle get_SafeWaitHandle()

Disassembly:
	0x033EB154 B 0x1C24318
	0x033EB158 SUB X31, X31, 0x20
	0x033EB15C STP X30, X1, [X31 + 0x10]
	0x033EB160 ADD X1, X31, 0x18
	0x033EB164 ADD X2, X31, 0x8
	0x033EB168 STR X31, [X31 + 0x8]
	0x033EB16C BL 0x1C24318
	0x033EB170 LDP X0, X30, [X31 + 0x8]
	0x033EB174 ADD X31, X31, 0x20
	0x033EB178 RET
	0x033EB17C B 0x1C24334
	0x033EB180 B 0x1C241AC
	0x033EB184 B 0x1C241AC
	0x033EB188 B 0x1C24218
	0x033EB18C B 0x1C242E8
	0x033EB190 B 0x1C242E8
	0x033EB194 B 0x1C242CC
	0x033EB198 B 0x1C24350
	0x033EB19C B 0x1C241FC
	0x033EB1A0 MOV X0, X31
	0x033EB1A4 B 0x33E6F84
	0x033EB1A8 STR X30, [X31 - 0x30]!
	0x033EB1AC STP X22, X21, [X31 + 0x10]
	0x033EB1B0 STP X20, X19, [X31 + 0x20]
	0x033EB1B4 MOV X19, X3
	0x033EB1B8 MOV W20, W1
	0x033EB1BC MOV W21, W0
	0x033EB1C0 CBZ X2, 0x33EB1DC
	0x033EB1C4 MOV X0, X31
	0x033EB1C8 MOV X22, X2
	0x033EB1CC BL 0x32C1424
	0x033EB1D0 LDR W3, [X22 + 0x10]
	0x033EB1D4 ADD X2, X22, W0, SXTW
	0x033EB1D8 B 0x33EB1E0
	0x033EB1DC MOV W3, W31
	0x033EB1E0 AND W0, W21, 0x1
	0x033EB1E4 AND W1, W20, 0x1
	0x033EB1E8 MOV X4, X19
	0x033EB1EC LDP X20, X19, [X31 + 0x20]
	0x033EB1F0 LDP X22, X21, [X31 + 0x10]
	0x033EB1F4 LDR X30, [X31], #0x30
	0x033EB1F8 B 0x1C4BF8C
	0x033EB1FC AND W0, W0, 0x1
	0x033EB200 AND W1, W1, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xFF3000
	006 Move W8, [X20+1034]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xD43000
	013 Move X0, [X0+624]
	014 Call 0x1C17CF4
	015 Move X0, 0xD43000
	016 Move X0, [X0+616]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1034], W8
	020 Move X20, [X19+32]
	021 Call 0x1C17D44
	022 Compare X20, 0
	023 JumpIfEqual {25}
	024 Move X20, [X19+32]
	025 Move X20, 0xD43000
	026 Move X20, [X20+616]
	027 Move X0, [X20]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X20]
	033 Move X9, 0xD43000
	034 Move X8, [X0+184]
	035 Move X9, [X9+624]
	036 Move X21, [X8]
	037 Move X0, [X9]
	038 Call 0x1C17F10
	039 Move X1, X21
	040 Move W2, W31
	041 Move X3, X31
	042 Move X20, X0
	043 Call SafeWaitHandle..ctor, X0, X1, X2
	044 Call 0x1C17D44
	045 Move [X19+32], X20
	046 Call 0x1C17D44
	047 Move X0, X20
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return X0

Method: System.Void SetHandleInternal(Microsoft.Win32.SafeHandles.SafeWaitHandle handle)

Disassembly:
	0x033EB204 B 0x1C4BF8C
	0x033EB208 SUB X31, X31, 0x30
	0x033EB20C STP X30, X21, [X31 + 0x10]
	0x033EB210 STP X20, X19, [X31 + 0x20]
	0x033EB214 MOV X19, X0
	0x033EB218 STRB W31, [X31 + 0xC]
	0x033EB21C CBZ X0, 0x33EB26C
	0x033EB220 ADD X1, X31, 0xC
	0x033EB224 MOV X0, X19
	0x033EB228 MOV X2, X31
	0x033EB22C BL 0x32BF948
	0x033EB230 LDR X0, [X19 + 0x10]
	0x033EB234 BL 0x1C4BF70

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X19, X0
	006 Call 0x1C17D44
	007 Move [X19+32], X20
	008 Compare X20, 0
	009 JumpIfEqual {16}
	010 Move X8, [X20+16]
	011 Move [X19+24], X8
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 
	016 Call 0x1C17F20

Method: System.Boolean WaitOne(System.Int32 millisecondsTimeout, System.Boolean exitContext)

Disassembly:
	0x033EB238 LDRB W8, [X31 + 0xC]
	0x033EB23C MOV W21, W0
	0x033EB240 CBZ W8, 0x33EB258
	0x033EB244 MOV X20, X31
	0x033EB248 MOV X0, X19
	0x033EB24C MOV X1, X31
	0x033EB250 BL 0x32BFAB4
	0x033EB254 CBNZ X20, 0x33EB2AC
	0x033EB258 AND W0, W21, 0x1
	0x033EB25C LDP X20, X19, [X31 + 0x20]
	0x033EB260 LDP X30, X21, [X31 + 0x10]
	0x033EB264 ADD X31, X31, 0x30
	0x033EB268 RET
	0x033EB26C BL 0x1C16F20
	0x033EB270 B 0x33EB274
	0x033EB274 MOV X21, X0
	0x033EB278 CMP W1, 0x1
	0x033EB27C B.NE 0x33EB2B4
	0x033EB280 MOV X0, X21
	0x033EB284 BL 0x3EB1AD0
	0x033EB288 LDR X20, [X0]
	0x033EB28C BL 0x3EB1AE0
	0x033EB290 LDRB W8, [X31 + 0xC]
	0x033EB294 CBZ W8, 0x33EB2A4
	0x033EB298 CBZ X19, 0x33EB2BC
	0x033EB29C MOV W21, W31
	0x033EB2A0 B 0x33EB248
	0x033EB2A4 MOV W21, W31
	0x033EB2A8 CBZ X20, 0x33EB258
	0x033EB2AC MOV X0, X20
	0x033EB2B0 BL 0x1C16F18
	0x033EB2B4 MOV X20, X31

ISIL:
	001 Add W31, W1, 2
	002 Move X1, W1
	003 And W2, W2, 1
	004 Move [X31-32], X30
	005 Move [X31+16], X20
	006 Move [X31+24], X19
	007 Move X0, 0xD42000
	008 Move X0, [X0+4080]
	009 Call 0x1C17D08
	010 Move X1, X31
	011 Call Environment.GetResourceString, X0
	012 Move X19, X0
	013 Move X0, 0xD11000
	014 Move X0, [X0+1888]
	015 Call 0x1C17D08
	016 Call 0x1C17F10
	017 Move X20, X0
	018 Move X0, 0xD42000
	019 Move X0, [X0+4056]
	020 Call 0x1C17D08
	021 Move X1, X0
	022 Move X0, X20
	023 Move X2, X19
	024 Move X3, X31
	025 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	026 Move X0, 0xD43000
	027 Move X0, [X0+1280]
	028 Call 0x1C17D08
	029 Move X1, X0
	030 Move X0, X20
	031 Call 0x1C17DEC

Method: System.Boolean WaitOne(System.TimeSpan timeout, System.Boolean exitContext)

Disassembly:
	0x033EB338 MOV X20, X31
	0x033EB33C MOV X0, X19
	0x033EB340 MOV X1, X31
	0x033EB344 BL 0x32BFAB4
	0x033EB348 CBNZ X20, 0x33EB3A0
	0x033EB34C AND W0, W21, 0x1
	0x033EB350 LDP X20, X19, [X31 + 0x20]
	0x033EB354 LDP X30, X21, [X31 + 0x10]
	0x033EB358 ADD X31, X31, 0x30
	0x033EB35C RET
	0x033EB360 BL 0x1C16F20
	0x033EB364 B 0x33EB368
	0x033EB368 MOV X21, X0
	0x033EB36C CMP W1, 0x1
	0x033EB370 B.NE 0x33EB3A8
	0x033EB374 MOV X0, X21
	0x033EB378 BL 0x3EB1AD0
	0x033EB37C LDR X20, [X0]
	0x033EB380 BL 0x3EB1AE0
	0x033EB384 LDRB W8, [X31 + 0xC]
	0x033EB388 CBZ W8, 0x33EB398
	0x033EB38C CBZ X19, 0x33EB3B0
	0x033EB390 MOV W21, W31
	0x033EB394 B 0x33EB33C
	0x033EB398 MOV W21, W31
	0x033EB39C CBZ X20, 0x33EB34C
	0x033EB3A0 MOV X0, X20
	0x033EB3A4 BL 0x1C16F18
	0x033EB3A8 MOV X20, X31
	0x033EB3AC B 0x33EB3B8
	0x033EB3B0 BL 0x1C16F20
	0x033EB3B4 MOV X21, X0
	0x033EB3B8 LDRB W8, [X31 + 0xC]
	0x033EB3BC CBZ W8, 0x33EB3D4
	0x033EB3C0 CBNZ X19, 0x33EB3C8
	0x033EB3C4 BL 0x1C16F20
	0x033EB3C8 MOV X0, X19
	0x033EB3CC MOV X1, X31
	0x033EB3D0 BL 0x32BFAB4
	0x033EB3D4 CBNZ X20, 0x33EB3E0
	0x033EB3D8 MOV X0, X21
	0x033EB3DC BL 0x1D2C690
	0x033EB3E0 MOV X0, X20
	0x033EB3E4 BL 0x1C16F18
	0x033EB3E8 BL 0x1990590
	0x033EB3EC B 0x1C4BF54
	0x033EB3F0 B 0x1C4C004
	0x033EB3F4 SUB X31, X31, 0x70
	0x033EB3F8 STR X30, [X31 + 0x20]
	0x033EB3FC STP X26, X25, [X31 + 0x30]
	0x033EB400 STP X24, X23, [X31 + 0x40]
	0x033EB404 STP X22, X21, [X31 + 0x50]
	0x033EB408 STP X20, X19, [X31 + 0x60]
	0x033EB40C ADRP X20, 0xFF2000
	0x033EB410 LDRB W8, [X20 + 0x416]
	0x033EB414 MOV X19, X0
	0x033EB418 TBNZ X8, 0x0, 0x33EB460
	0x033EB41C ADRP X0, 0xD08000
	0x033EB420 LDR X0, [X0 + 0xB58]
	0x033EB424 BL 0x1C16CF4
	0x033EB428 ADRP X0, 0xD42000
	0x033EB42C LDR X0, [X0 + 0x570]
	0x033EB430 BL 0x1C16CF4
	0x033EB434 ADRP X0, 0xD11000
	0x033EB438 LDR X0, [X0 + 0x958]
	0x033EB43C BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFF3000
	007 Move [X31+8], X1
	008 Move X22, 0xD0B000
	009 Move W8, [X21+1035]
	010 Move X22, [X22+1392]
	011 Move W19, W2
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xD0B000
	018 Move X0, [X0+1392]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1035], W8
	022 Move X0, [X22]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Add X0, X31, 8
	028 Move X1, X31
	029 Call TimeSpan.get_TotalMilliseconds, X0
	030 Move X9, 0x7FF00000
	031 Move D1, X9
	032 NotImplemented "Instruction FCVTZS not yet implemented."
	033 Move X10, 0x80000000
	034 NotImplemented "Instruction FCMP not yet implemented."
	035 NotImplemented "Instruction CSEL not yet implemented."
	036 Add X8, X1, 1
	037 Or W9, W31, 0x80000001
	038 NotImplemented "Instruction CMP not yet implemented."
	039 And W2, W19, 1
	040 Move X0, X20
	041 Call WaitHandle.WaitOne, X0, X1, X2
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 And W0, W0, 1
	047 Move X30, [X31+48]
	048 Return X0
	049 Move X0, 0xD42000
	050 Move X0, [X0+4080]
	051 Call 0x1C17D08
	052 Move X1, X31
	053 Call Environment.GetResourceString, X0
	054 Move X19, X0
	055 Move X0, 0xD11000
	056 Move X0, [X0+1888]
	057 Call 0x1C17D08
	058 Call 0x1C17F10
	059 Move X20, X0
	060 Move X0, 0xD43000
	061 Move X0, [X0+1248]
	062 Call 0x1C17D08
	063 Move X1, X0
	064 Move X0, X20
	065 Move X2, X19
	066 Move X3, X31
	067 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	068 Move X0, 0xD43000
	069 Move X0, [X0+1288]
	070 Call 0x1C17D08
	071 Move X1, X0
	072 Move X0, X20
	073 Call 0x1C17DEC

Method: System.Boolean WaitOne()

Disassembly:
	0x033EB440 ADRP X0, 0xD42000
	0x033EB444 LDR X0, [X0 + 0x528]
	0x033EB448 BL 0x1C16CF4
	0x033EB44C ADRP X0, 0xD42000
	0x033EB450 LDR X0, [X0 + 0x268]

ISIL:
	001 Move X8, [X0]
	002 Move TEMP, 0
	003 Not TEMP
	004 Move W1, TEMP
	005 Move W2, W31
	006 Move X4, [X8+440]
	007 Move X3, [X8+448]
	008 CallNoReturn X4

Method: System.Boolean WaitOne(System.Int32 millisecondsTimeout)

Disassembly:
	0x033EB454 BL 0x1C16CF4
	0x033EB458 MOVZ W8, 0x1
	0x033EB45C STRB W8, [X20 + 0x416]
	0x033EB460 STRB W31, [X31 + 0x28]

ISIL:
	001 Move X8, [X0]
	002 Move W2, W31
	003 Move X4, [X8+440]
	004 Move X3, [X8+448]
	005 CallNoReturn X4

Method: System.Boolean WaitOne(System.TimeSpan timeout)

Disassembly:
	0x033EB464 STRB W31, [X31 + 0x2C]
	0x033EB468 LDR X0, [X19 + 0x18]
	0x033EB46C CBZ X0, 0x33EB604
	0x033EB470 BL 0x33EA154

ISIL:
	001 Move X8, [X0]
	002 Move W2, W31
	003 Move X4, [X8+456]
	004 Move X3, [X8+464]
	005 CallNoReturn X4

Method: System.Boolean WaitOne(System.Int64 timeout, System.Boolean exitContext)

Disassembly:
	0x033EB2B8 B 0x33EB2C4
	0x033EB2BC BL 0x1C16F20
	0x033EB2C0 MOV X21, X0
	0x033EB2C4 LDRB W8, [X31 + 0xC]
	0x033EB2C8 CBZ W8, 0x33EB2E0
	0x033EB2CC CBNZ X19, 0x33EB2D4
	0x033EB2D0 BL 0x1C16F20
	0x033EB2D4 MOV X0, X19
	0x033EB2D8 MOV X1, X31
	0x033EB2DC BL 0x32BFAB4
	0x033EB2E0 CBNZ X20, 0x33EB2EC
	0x033EB2E4 MOV X0, X21
	0x033EB2E8 BL 0x1D2C690
	0x033EB2EC MOV X0, X20
	0x033EB2F0 BL 0x1C16F18
	0x033EB2F4 BL 0x1990590
	0x033EB2F8 B 0x1C4BF70
	0x033EB2FC SUB X31, X31, 0x30
	0x033EB300 STP X30, X21, [X31 + 0x10]
	0x033EB304 STP X20, X19, [X31 + 0x20]
	0x033EB308 MOV X19, X0
	0x033EB30C STRB W31, [X31 + 0xC]
	0x033EB310 CBZ X0, 0x33EB360
	0x033EB314 ADD X1, X31, 0xC
	0x033EB318 MOV X0, X19
	0x033EB31C MOV X2, X31
	0x033EB320 BL 0x32BF948
	0x033EB324 LDR X0, [X19 + 0x10]
	0x033EB328 BL 0x1C4BF54
	0x033EB32C LDRB W8, [X31 + 0xC]
	0x033EB330 MOV W21, W0
	0x033EB334 CBZ W8, 0x33EB34C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xFF3000
	008 Move X23, 0xD43000
	009 Move W8, [X22+1036]
	010 Move X23, [X23+616]
	011 Move W20, W2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xD43000
	019 Move X0, [X0+616]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1036], W8
	023 Move X22, [X21+32]
	024 Call 0x1C17D44
	025 Move X0, [X23]
	026 Move W21, [X21+40]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 NotImplemented "Instruction CMP not yet implemented."
	032 And W3, W20, 1
	033 Move X0, X22
	034 Move X1, X19
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 NotImplemented "Instruction CSET not yet implemented."
	040 Move X30, [X31+48]
	041 Move X23, [X31+56]
	042 Call WaitHandle.InternalWaitOne, X0, X1, X2, X3
	043 Return X0

Method: System.Boolean InternalWaitOne(System.Runtime.InteropServices.SafeHandle waitableSafeHandle, System.Int64 millisecondsTimeout, System.Boolean hasThreadAffinity, System.Boolean exitContext)

Disassembly:
	0x033EB474 CBZ X0, 0x33EB608
	0x033EB478 ADD X1, X31, 0x2C
	0x033EB47C MOV X2, X31
	0x033EB480 BL 0x32BF948
	0x033EB484 ADRP X8, 0xD42000
	0x033EB488 LDR X8, [X8 + 0x528]
	0x033EB48C LDR X0, [X8]
	0x033EB490 MOVZ W1, 0x2
	0x033EB494 BL 0x1C16D6C
	0x033EB498 MOV X21, X0
	0x033EB49C CBZ X0, 0x33EB60C
	0x033EB4A0 LDR X20, [X19 + 0x18]
	0x033EB4A4 CBZ X20, 0x33EB4BC
	0x033EB4A8 LDR X8, [X21]
	0x033EB4AC LDR X1, [X8 + 0x40]
	0x033EB4B0 MOV X0, X20
	0x033EB4B4 BL 0x1C16E00
	0x033EB4B8 CBZ X0, 0x33EB618
	0x033EB4BC LDR W8, [X21 + 0x18]
	0x033EB4C0 CBZ W8, 0x33EB610
	0x033EB4C4 STR X20, [X21 + 0x20]
	0x033EB4C8 LDR X20, [X19 + 0x38]
	0x033EB4CC CBZ X20, 0x33EB4E8
	0x033EB4D0 LDR X8, [X21]
	0x033EB4D4 LDR X1, [X8 + 0x40]
	0x033EB4D8 MOV X0, X20
	0x033EB4DC BL 0x1C16E00
	0x033EB4E0 CBZ X0, 0x33EB624
	0x033EB4E4 LDR W8, [X21 + 0x18]
	0x033EB4E8 CMP W8, 0x1
	0x033EB4EC B.LS 0x33EB614
	0x033EB4F0 ADRP X23, 0xD42000
	0x033EB4F4 ADRP X24, 0xD11000
	0x033EB4F8 ADRP X25, 0xD42000
	0x033EB4FC ADRP X26, 0xD08000
	0x033EB500 LDR X23, [X23 + 0x268]
	0x033EB504 LDR X24, [X24 + 0x958]
	0x033EB508 LDR X25, [X25 + 0x570]
	0x033EB50C LDR X26, [X26 + 0xB58]
	0x033EB510 STR X20, [X21 + 0x28]
	0x033EB514 LDR X0, [X23]
	0x033EB518 LDR X20, [X19 + 0x40]
	0x033EB51C LDR W8, [X0 + 0xE0]
	0x033EB520 CBNZ W8, 0x33EB528
	0x033EB524 BL 0x1C16DFC
	0x033EB528 MOV X0, X21
	0x033EB52C MOV X1, X20
	0x033EB530 MOV W2, W31
	0x033EB534 BL 0x33EAE60
	0x033EB538 LDRB W8, [X19 + 0x4D]
	0x033EB53C CBNZ W8, 0x33EB6C8
	0x033EB540 MOV W22, W0
	0x033EB544 STRB W31, [X31 + 0x28]
	0x033EB548 ADD X1, X31, 0x28
	0x033EB54C MOV X0, X19
	0x033EB550 MOV X2, X31
	0x033EB554 BL 0x33DE64C
	0x033EB558 LDR W8, [X19 + 0x48]
	0x033EB55C MOV X20, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xFF3000
	006 Move W8, [X21+1037]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD43000
	014 Move X0, [X0+616]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1037], W8
	018 Compare X20, 0
	019 JumpIfEqual {46}
	020 Move X21, 0xD43000
	021 Move X21, [X21+616]
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move W1, W19
	029 Move W2, W31
	030 Move W3, W31
	031 Call WaitHandle.WaitOneNative, X0, X1, X2, X3
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move TEMP, 0x80000000
	035 Not TEMP
	036 Move W8, TEMP
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 NotImplemented "Instruction CSET not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSET not yet implemented."
	042 And W0, W9, W8
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return X0
	046 Move X0, 0xD41000
	047 Move X0, [X0+368]
	048 Call 0x1C17D08
	049 Move X1, X31
	050 Call Environment.GetResourceString, X0
	051 Move X19, X0
	052 Move X0, 0xD32000
	053 Move X0, [X0+1208]
	054 Call 0x1C17D08
	055 Call 0x1C17F10
	056 Move X1, X31
	057 Move X2, X19
	058 Move X3, X31
	059 Move X20, X0
	060 Call ObjectDisposedException..ctor, X0, X1, X2
	061 Move X0, 0xD43000
	062 Move X0, [X0+1296]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X20
	066 Call 0x1C17DEC
	067 Move X0, [X21]
	068 Call 0x19913D0
	069 Call WaitHandle.ThrowAbandonedMutexException

Method: System.Int32 WaitAny(System.Threading.WaitHandle[] waitHandles, System.Int32 millisecondsTimeout, System.Boolean exitContext)

Disassembly:
	0x033EB75C ADD X31, X31, 0x70
	0x033EB760 RET
	0x033EB764 MOV X22, X1
	0x033EB768 CMP W22, 0x1
	0x033EB76C B.NE 0x33EB82C
	0x033EB770 MOV X0, X20
	0x033EB774 BL 0x3EB1AD0
	0x033EB778 MOV X20, X0
	0x033EB77C ADRP X0, 0xD31000
	0x033EB780 LDR X0, [X0 + 0x4B8]
	0x033EB784 BL 0x1C16D08
	0x033EB788 LDR X8, [X20]
	0x033EB78C LDR X1, [X8]
	0x033EB790 BL 0x1C17270
	0x033EB794 TBZ X0, 0x0, 0x33EB7E8
	0x033EB798 LDR X20, [X20]
	0x033EB79C BL 0x3EB1AE0
	0x033EB7A0 LDRB W8, [X31 + 0x2C]
	0x033EB7A4 CBZ W8, 0x33EB748
	0x033EB7A8 MOV X0, X20
	0x033EB7AC BL 0x1C16F18
	0x033EB7B0 BL 0x1C16F20
	0x033EB7B4 MOV X0, X21
	0x033EB7B8 BL 0x1C16F18
	0x033EB7BC MOV X0, X21
	0x033EB7C0 BL 0x1C16F18
	0x033EB7C4 MOVZ W0, 0x8
	0x033EB7C8 BL 0x3EB1AF0
	0x033EB7CC LDR X8, [X20]
	0x033EB7D0 STR X8, [X0]
	0x033EB7D4 ADRP X1, 0xAC9000
	0x033EB7D8 ADD X1, X1, 0xE58
	0x033EB7DC MOV X2, X31
	0x033EB7E0 BL 0x3EB1B00
	0x033EB7E4 B 0x33EB808
	0x033EB7E8 MOVZ W0, 0x8
	0x033EB7EC BL 0x3EB1AF0
	0x033EB7F0 LDR X8, [X20]
	0x033EB7F4 STR X8, [X0]
	0x033EB7F8 ADRP X1, 0xAC9000
	0x033EB7FC ADD X1, X1, 0xE58
	0x033EB800 MOV X2, X31
	0x033EB804 BL 0x3EB1B00
	0x033EB808 B 0x33EB80C
	0x033EB80C MOV X20, X0
	0x033EB810 MOV W22, W1
	0x033EB814 B 0x33EB82C
	0x033EB818 B 0x33EB908
	0x033EB81C MOV X21, X1
	0x033EB820 MOV X20, X0
	0x033EB824 BL 0x3EB1AE0
	0x033EB828 MOV W22, W21
	0x033EB82C MOVZ W8, 0x1
	0x033EB830 CMP W22, W8
	0x033EB834 B.NE 0x33EB84C
	0x033EB838 MOV X0, X20
	0x033EB83C BL 0x3EB1AD0
	0x033EB840 LDR X21, [X0]
	0x033EB844 BL 0x3EB1AE0
	0x033EB848 B 0x33EB724
	0x033EB84C MOV X21, X31
	0x033EB850 B 0x33EB858
	0x033EB854 MOV X20, X0
	0x033EB858 LDRB W8, [X31 + 0x2C]
	0x033EB85C CBNZ W8, 0x33EB86C
	0x033EB860 CBNZ X21, 0x33EB878
	0x033EB864 MOV X0, X20
	0x033EB868 BL 0x1D2C690
	0x033EB86C LDR X0, [X19 + 0x18]
	0x033EB870 CBNZ X0, 0x33EB880
	0x033EB874 BL 0x1C16F20
	0x033EB878 MOV X0, X21
	0x033EB87C BL 0x1C16F18
	0x033EB880 BL 0x33EA154
	0x033EB884 CBNZ X0, 0x33EB88C
	0x033EB888 BL 0x1C16F20
	0x033EB88C MOV X1, X31
	0x033EB890 BL 0x32BFAB4
	0x033EB894 B 0x33EB860
	0x033EB898 MOV X21, X1
	0x033EB89C MOV X20, X0
	0x033EB8A0 BL 0x3EB1AE0
	0x033EB8A4 MOV W22, W21
	0x033EB8A8 B 0x33EB768
	0x033EB8AC B 0x33EB8B4
	0x033EB8B0 B 0x33EB8B4
	0x033EB8B4 MOV X20, X0
	0x033EB8B8 CMP W1, 0x1
	0x033EB8BC B.NE 0x33EB8D4
	0x033EB8C0 MOV X0, X20
	0x033EB8C4 BL 0x3EB1AD0
	0x033EB8C8 LDR X21, [X0]
	0x033EB8CC BL 0x3EB1AE0
	0x033EB8D0 B 0x33EB70C
	0x033EB8D4 MOV X21, X31
	0x033EB8D8 LDRB W8, [X31 + 0x28]
	0x033EB8DC MOV W22, W1
	0x033EB8E0 CBZ W8, 0x33EB8F0
	0x033EB8E4 MOV X0, X19
	0x033EB8E8 MOV X1, X31
	0x033EB8EC BL 0x33E14E4
	0x033EB8F0 CBZ X21, 0x33EB768
	0x033EB8F4 MOV X0, X21
	0x033EB8F8 BL 0x1C16F18
	0x033EB8FC MOV X20, X0
	0x033EB900 B 0x33EB8D8
	0x033EB904 BL 0x1990590
	0x033EB908 MOV X20, X0
	0x033EB90C MOV W22, W1
	0x033EB910 B 0x33EB768
	0x033EB914 SUB X31, X31, 0x60
	0x033EB918 STP X30, X21, [X31 + 0x40]
	0x033EB91C STP X20, X19, [X31 + 0x50]
	0x033EB920 ADRP X21, 0xFF2000
	0x033EB924 LDRB W8, [X21 + 0x417]
	0x033EB928 MOV X19, X1
	0x033EB92C MOV X20, X0
	0x033EB930 STR X0, [X31 + 0x38]
	0x033EB934 TBNZ X8, 0x0, 0x33EB94C
	0x033EB938 ADRP X0, 0xD08000
	0x033EB93C LDR X0, [X0 + 0xB58]
	0x033EB940 BL 0x1C16CF4
	0x033EB944 MOVZ W8, 0x1
	0x033EB948 STRB W8, [X21 + 0x417]
	0x033EB94C ADD X8, X31, 0x30
	0x033EB950 ADD X9, X31, 0x38
	0x033EB954 ADD X10, X31, 0x2C
	0x033EB958 STR X31, [X31 + 0x30]
	0x033EB95C STRB W31, [X31 + 0x2C]
	0x033EB960 STP X31, X8, [X31 + 0x8]
	0x033EB964 STP X9, X10, [X31 + 0x18]
	0x033EB968 LDR X21, [X20 + 0x20]
	0x033EB96C CBZ X21, 0x33EB9B8
	0x033EB970 CBZ X19, 0x33EB9D0
	0x033EB974 ADRP X8, 0xD08000
	0x033EB978 LDR X8, [X8 + 0xB58]
	0x033EB97C LDR X9, [X19]
	0x033EB980 LDR X1, [X8]
	0x033EB984 LDR X8, [X9 + 0x40]
	0x033EB988 LDR X9, [X1 + 0x40]
	0x033EB98C CMP X8, X9
	0x033EB990 B.NE 0x33EB9D4
	0x033EB994 LDR X20, [X20 + 0x28]
	0x033EB998 MOV X0, X19
	0x033EB99C BL 0x1C16E08
	0x033EB9A0 LDRB W2, [X0]
	0x033EB9A4 LDR X0, [X21 + 0x40]
	0x033EB9A8 LDR X8, [X21 + 0x18]
	0x033EB9AC LDR X3, [X21 + 0x28]
	0x033EB9B0 MOV X1, X20
	0x033EB9B4 BLR X8
	0x033EB9B8 ADD X0, X31, 0x8
	0x033EB9BC BL 0x1BBCE54
	0x033EB9C0 LDP X20, X19, [X31 + 0x50]
	0x033EB9C4 LDP X30, X21, [X31 + 0x40]
	0x033EB9C8 ADD X31, X31, 0x60
	0x033EB9CC RET
	0x033EB9D0 BL 0x1C16F20
	0x033EB9D4 MOV X0, X19
	0x033EB9D8 BL 0x1C171E0
	0x033EB9DC CMP W1, 0x1
	0x033EB9E0 MOV X19, X0
	0x033EB9E4 B.NE 0x33EBA04
	0x033EB9E8 MOV X0, X19
	0x033EB9EC BL 0x3EB1AD0
	0x033EB9F0 LDR X8, [X0]
	0x033EB9F4 STR X8, [X31 + 0x8]
	0x033EB9F8 BL 0x3EB1AE0
	0x033EB9FC B 0x33EB9B8
	0x033EBA00 MOV X19, X0
	0x033EBA04 ADD X0, X31, 0x8
	0x033EBA08 BL 0x1BBCE54
	0x033EBA0C MOV X0, X19
	0x033EBA10 BL 0x1D2C690
	0x033EBA14 BL 0x1990590
	0x033EBA18 B 0x1C4BDF0
	0x033EBA1C STP X30, X21, [X31 - 0x20]!
	0x033EBA20 STP X20, X19, [X31 + 0x10]
	0x033EBA24 MOV X19, X0
	0x033EBA28 BL 0x1C4BDF0
	0x033EBA2C MOV X0, X19
	0x033EBA30 LDP X20, X19, [X31 + 0x10]
	0x033EBA34 MOV X1, X31
	0x033EBA38 LDP X30, X21, [X31], #0x20
	0x033EBA3C B 0x32C2928

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0xFF3000
	010 Move W8, [X20+1038]
	011 Move W19, W1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xD10000
	018 Move X0, [X0+3088]
	019 Call 0x1C17CF4
	020 Move X0, 0xD43000
	021 Move X0, [X0+1320]
	022 Call 0x1C17CF4
	023 Move X0, 0xD43000
	024 Move X0, [X0+616]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+1038], W8
	028 Compare X21, 0
	029 JumpIfEqual {127}
	030 Move X1, [X21+24]
	031 Compare X1, 0
	032 JumpIfEqual {129}
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Add W31, W19, 2
	035 Move X8, 0xD43000
	036 Move X8, [X8+1320]
	037 Move X0, [X8]
	038 Call 0x1C17D6C
	039 Move W8, [X21+24]
	040 Move X20, X0
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X23, X31
	043 Add X24, X20, 32
	044 Add X25, X21, 32
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X22, [X25]
	047 Compare X22, 0
	048 JumpIfEqual {104}
	049 Compare X20, 0
	050 JumpIfEqual {103}
	051 Move X8, [X20]
	052 Move X0, X22
	053 Move X1, [X8+64]
	054 Call 0x1C17E00
	055 Compare X0, 0
	056 JumpIfEqual {124}
	057 Move W8, [X20+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move [X24], X22
	060 Move W8, [X21+24]
	061 Add X23, X23, 1
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X22, 0xD43000
	064 Move X22, [X22+616]
	065 Move X0, [X22]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X20
	071 Move W1, W19
	072 Move W2, W31
	073 Move W3, W31
	074 Call WaitHandle.WaitMultiple, X0, X1, X2, X3
	075 Move W21, W0
	076 Subtract W19, W0, 128
	077 Compare X20, 0
	078 JumpIfEqual {103}
	079 Move W8, [X20+24]
	080 Add W9, W8, 128
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X8, 0xD10000
	083 Move X8, [X8+3088]
	084 Move X0, [X8]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X0, X20
	090 Move X1, X31
	091 Call GC.KeepAlive, X0
	092 Move W0, W21
	093 Move X20, [X31+48]
	094 Move X19, [X31+56]
	095 Move X22, [X31+32]
	096 Move X21, [X31+40]
	097 Move X24, [X31+16]
	098 Move X23, [X31+24]
	099 Move X30, [X31+64]
	100 Move X25, [X31+72]
	101 Return X0
	102 Call 0x1C17F28
	103 Call 0x1C17F20
	104 Move X0, 0xD43000
	105 Move X0, [X0+1328]
	106 Call 0x1C17D08
	107 Move X1, X31
	108 Call Environment.GetResourceString, X0
	109 Move X19, X0
	110 Move X0, 0xD0E000
	111 Move X0, [X0+1320]
	112 Call 0x1C17D08
	113 Call 0x1C17F10
	114 Move X1, X19
	115 Move X2, X31
	116 Move X20, X0
	117 Call ArgumentNullException..ctor, X0, X1
	118 Move X0, 0xD43000
	119 Move X0, [X0+1336]
	120 Call 0x1C17D08
	121 Move X1, X0
	122 Move X0, X20
	123 Call 0x1C17DEC
	124 Call 0x1C17F44
	125 Move X1, X31
	126 Call 0x1C17DEC
	127 Move X0, 0xD43000
	128 Move X0, [X0+1344]
	129 Move X0, 0xD43000
	130 Move X0, [X0+1352]
	131 Call 0x1C17D08
	132 Move X1, X31
	133 Call Environment.GetResourceString, X0
	134 Move X19, X0
	135 Move X0, 0xD11000
	136 Move X0, [X0+1400]
	137 Call 0x1C17D08
	138 Call 0x1C17F10
	139 Move X1, X19
	140 Move X2, X31
	141 Move X20, X0
	142 Call ArgumentException..ctor, X0, X1
	143 Move X0, 0xD43000
	144 Move X0, [X0+1360]
	145 Call 0x1C17D08
	146 Move X1, X31
	147 Call Environment.GetResourceString, X0
	148 Move X19, X0
	149 Move X0, 0xD09000
	150 Move X0, [X0+2880]
	151 Call 0x1C17D08
	152 Call 0x1C17F10
	153 Move X1, X19
	154 Move X2, X31
	155 Move X20, X0
	156 Call NotSupportedException..ctor, X0, X1
	157 Move X0, 0xD42000
	158 Move X0, [X0+4080]
	159 Call 0x1C17D08
	160 Move X1, X31
	161 Call Environment.GetResourceString, X0
	162 Move X19, X0
	163 Move X0, 0xD11000
	164 Move X0, [X0+1888]
	165 Call 0x1C17D08
	166 Call 0x1C17F10
	167 Move X20, X0
	168 Move X0, 0xD42000
	169 Move X0, [X0+4056]
	170 Call 0x1C17D08
	171 Move X1, X0
	172 Move X0, X20
	173 Move X2, X19
	174 Move X3, X31
	175 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move X0, X20
	178 Call 0x19913C0
	179 Move W1, W19
	180 Move X0, X20
	181 Call 0x1BB6160
	182 Move X8, [X22]
	183 Move X20, X0
	184 Move X0, X8
	185 Call 0x19913D0
	186 Move W0, W19
	187 Move X1, X20
	188 Call WaitHandle.ThrowAbandonedMutexException, X0, X1
	189 Move X0, [X22]
	190 Call 0x19913D0
	191 Call WaitHandle.ThrowAbandonedMutexException

Method: System.Int32 WaitAny(System.Threading.WaitHandle[] waitHandles, System.TimeSpan timeout, System.Boolean exitContext)

Disassembly:
	0x033EBE60 ADRP X0, 0xD31000
	0x033EBE64 LDR X0, [X0 + 0x4B8]
	0x033EBE68 BL 0x1C16D08
	0x033EBE6C BL 0x1C16F10
	0x033EBE70 MOV X1, X31
	0x033EBE74 MOV X2, X19
	0x033EBE78 MOV X3, X31
	0x033EBE7C MOV X20, X0
	0x033EBE80 BL 0x338C410
	0x033EBE84 ADRP X0, 0xD42000
	0x033EBE88 LDR X0, [X0 + 0x5A8]
	0x033EBE8C BL 0x1C16D08
	0x033EBE90 MOV X1, X0
	0x033EBE94 MOV X0, X20
	0x033EBE98 BL 0x1C16DEC
	0x033EBE9C BL 0x1C16F20
	0x033EBEA0 STR X30, [X31 - 0x10]!
	0x033EBEA4 MOV W3, W31
	0x033EBEA8 SXTW X1, W1
	0x033EBEAC SXTW X2, W2
	0x033EBEB0 BL 0x33EBCD8
	0x033EBEB4 MOVZ W0, 0x1
	0x033EBEB8 LDR X30, [X31], #0x10
	0x033EBEBC RET
	0x033EBEC0 SUB X31, X31, 0x40
	0x033EBEC4 STR D8, [X31 + 0x10]
	0x033EBEC8 STP X30, X21, [X31 + 0x20]
	0x033EBECC STP X20, X19, [X31 + 0x30]
	0x033EBED0 ADRP X20, 0xFF2000
	0x033EBED4 STR X1, [X31 + 0x18]
	0x033EBED8 STR X2, [X31 + 0x8]
	0x033EBEDC ADRP X21, 0xD0A000
	0x033EBEE0 LDRB W8, [X20 + 0x41A]
	0x033EBEE4 LDR X21, [X21 + 0x570]
	0x033EBEE8 MOV X19, X0
	0x033EBEEC TBNZ X8, 0x0, 0x33EBF04
	0x033EBEF0 ADRP X0, 0xD0A000
	0x033EBEF4 LDR X0, [X0 + 0x570]
	0x033EBEF8 BL 0x1C16CF4
	0x033EBEFC MOVZ W8, 0x1
	0x033EBF00 STRB W8, [X20 + 0x41A]
	0x033EBF04 LDR X0, [X21]
	0x033EBF08 LDR W8, [X0 + 0xE0]
	0x033EBF0C CBNZ W8, 0x33EBF14
	0x033EBF10 BL 0x1C16DFC
	0x033EBF14 ADD X0, X31, 0x18
	0x033EBF18 MOV X1, X31
	0x033EBF1C BL 0x3394200
	0x033EBF20 ADD X0, X31, 0x8
	0x033EBF24 MOV X1, X31
	0x033EBF28 MOV V8.16B, V0.16B
	0x033EBF2C BL 0x3394200
	0x033EBF30 MOVZ X9, 0x7FF00000
	0x033EBF34 FMOV D1, X9
	0x033EBF38 FCVTZS X8, D8
	0x033EBF3C MOVZ X10, 0x80000000
	0x033EBF40 FCMP D8, D1
	0x033EBF44 FCVTZS X11, D0
	0x033EBF48 CSEL X1, X10, X8, EQ
	0x033EBF4C FCMP D0, D1
	0x033EBF50 CSEL X2, X10, X11, EQ
	0x033EBF54 MOV X0, X19
	0x033EBF58 MOV W3, W31
	0x033EBF5C BL 0x33EBCD8
	0x033EBF60 LDP X20, X19, [X31 + 0x30]
	0x033EBF64 LDP X30, X21, [X31 + 0x20]
	0x033EBF68 LDR V8, [X31 + 0x10]
	0x033EBF6C MOVZ W0, 0x1
	0x033EBF70 ADD X31, X31, 0x40
	0x033EBF74 RET
	0x033EBF78 STP X30, X19, [X31 - 0x10]!
	0x033EBF7C LDRB W8, [X0 + 0x40]
	0x033EBF80 CBZ W8, 0x33EBF8C
	0x033EBF84 LDP X30, X19, [X31], #0x10
	0x033EBF88 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFF3000
	007 Move [X31+8], X1
	008 Move X22, 0xD0B000
	009 Move W8, [X21+1039]
	010 Move X22, [X22+1392]
	011 Move W19, W2
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xD0B000
	018 Move X0, [X0+1392]
	019 Call 0x1C17CF4
	020 Move X0, 0xD43000
	021 Move X0, [X0+616]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1039], W8
	025 Move X0, [X22]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Add X0, X31, 8
	031 Move X1, X31
	032 Call TimeSpan.get_TotalMilliseconds, X0
	033 Move X9, 0x7FF00000
	034 Move D1, X9
	035 NotImplemented "Instruction FCVTZS not yet implemented."
	036 Move X10, 0x80000000
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 NotImplemented "Instruction CSEL not yet implemented."
	039 Add X8, X21, 1
	040 Or W9, W31, 0x80000001
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X8, 0xD43000
	043 Move X8, [X8+616]
	044 Move X0, [X8]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 And W2, W19, 1
	050 Move X0, X20
	051 Move W1, W21
	052 Call WaitHandle.WaitAny, X0, X1, X2
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 Return X0
	059 Move X0, 0xD42000
	060 Move X0, [X0+4080]
	061 Call 0x1C17D08
	062 Move X1, X31
	063 Call Environment.GetResourceString, X0
	064 Move X19, X0
	065 Move X0, 0xD11000
	066 Move X0, [X0+1888]
	067 Call 0x1C17D08
	068 Call 0x1C17F10
	069 Move X20, X0
	070 Move X0, 0xD43000
	071 Move X0, [X0+1248]
	072 Call 0x1C17D08
	073 Move X1, X0
	074 Move X0, X20
	075 Move X2, X19
	076 Move X3, X31
	077 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	078 Move X0, 0xD43000
	079 Move X0, [X0+1384]
	080 Call 0x1C17D08
	081 Move X1, X0
	082 Move X0, X20
	083 Call 0x1C17DEC

Method: System.Void ThrowAbandonedMutexException()

Disassembly:
	0x033EB724 LDRB W8, [X31 + 0x2C]
	0x033EB728 CBZ W8, 0x33EB744
	0x033EB72C LDR X0, [X19 + 0x18]
	0x033EB730 CBZ X0, 0x33EB7B0
	0x033EB734 BL 0x33EA154
	0x033EB738 CBZ X0, 0x33EB7B0
	0x033EB73C MOV X1, X31
	0x033EB740 BL 0x32BFAB4
	0x033EB744 CBNZ X21, 0x33EB7B4
	0x033EB748 LDP X20, X19, [X31 + 0x60]
	0x033EB74C LDP X22, X21, [X31 + 0x50]
	0x033EB750 LDP X24, X23, [X31 + 0x40]
	0x033EB754 LDP X26, X25, [X31 + 0x30]
	0x033EB758 LDR X30, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD43000
	004 Move X0, [X0+1304]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call AbandonedMutexException..ctor, X0
	010 Move X0, 0xD43000
	011 Move X0, [X0+1312]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Void ThrowAbandonedMutexException(System.Int32 location, System.Threading.WaitHandle handle)

Disassembly:
	0x033EBE14 ADRP X0, 0xD42000
	0x033EBE18 LDR X0, [X0 + 0x598]
	0x033EBE1C BL 0x1C16D08
	0x033EBE20 MOV X1, X0
	0x033EBE24 MOV X0, X19
	0x033EBE28 MOV X2, X31
	0x033EBE2C BL 0x3316014
	0x033EBE30 ADRP X0, 0xD42000
	0x033EBE34 LDR X0, [X0 + 0x5A8]
	0x033EBE38 BL 0x1C16D08
	0x033EBE3C MOV X1, X0
	0x033EBE40 MOV X0, X19
	0x033EBE44 BL 0x1C16DEC
	0x033EBE48 ADRP X0, 0xD40000
	0x033EBE4C LDR X0, [X0 + 0x170]
	0x033EBE50 BL 0x1C16D08
	0x033EBE54 MOV X1, X31
	0x033EBE58 BL 0x33BDD84
	0x033EBE5C MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W0
	006 Move X0, 0xD43000
	007 Move X0, [X0+1304]
	008 Move X19, X1
	009 Call 0x1C17D08
	010 Call 0x1C17F10
	011 Move W1, W20
	012 Move X2, X19
	013 Move X3, X31
	014 Move X21, X0
	015 Call AbandonedMutexException..ctor, X0, X1, X2
	016 Move X0, 0xD43000
	017 Move X0, [X0+1376]
	018 Call 0x1C17D08
	019 Move X1, X0
	020 Move X0, X21
	021 Call 0x1C17DEC

Method: System.Void Close()

Disassembly:
	0x033EBF8C MOVZ W8, 0x1
	0x033EBF90 MOV X19, X0
	0x033EBF94 STRB W8, [X0 + 0x40]
	0x033EBF98 BL 0x33EBAC0
	0x033EBF9C CBZ X0, 0x33EBFAC
	0x033EBFA0 MOV X1, X19
	0x033EBFA4 LDP X30, X19, [X31], #0x10
	0x033EBFA8 B 0x33EBFB0
	0x033EBFAC BL 0x1C16F20
	0x033EBFB0 SUB X31, X31, 0x30
	0x033EBFB4 STP X30, X21, [X31 + 0x10]
	0x033EBFB8 STP X20, X19, [X31 + 0x20]
	0x033EBFBC MOV X20, X1
	0x033EBFC0 MOV X19, X0
	0x033EBFC4 STRB W31, [X31 + 0xC]
	0x033EBFC8 ADD X1, X31, 0xC
	0x033EBFCC MOV X2, X31
	0x033EBFD0 BL 0x33DE64C
	0x033EBFD4 CBZ X20, 0x33EC01C
	0x033EBFD8 MOVZ W21, 0x1
	0x033EBFDC STRB W21, [X20 + 0x41]
	0x033EBFE0 BL 0x1C16D44
	0x033EBFE4 MOV X20, X31
	0x033EBFE8 STRB W21, [X19 + 0x10]
	0x033EBFEC LDRB W8, [X31 + 0xC]
	0x033EBFF0 CBZ W8, 0x33EC000
	0x033EBFF4 MOV X0, X19
	0x033EBFF8 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xFF3000
	006 Move X20, 0xD10000
	007 Move W8, [X21+1040]
	008 Move X20, [X20+3088]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD10000
	015 Move X0, [X0+3088]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1040], W8
	019 Move X8, [X19]
	020 Move W1, 1
	021 Move X0, X19
	022 Move X9, [X8+536]
	023 Move X2, [X8+544]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X1, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call GC.SuppressFinalize, X0
	037 Return 

Method: System.Void Dispose(System.Boolean explicitDisposing)

Disassembly:
	0x033EBFFC BL 0x33E14E4
	0x033EC000 CBNZ X20, 0x33EC014
	0x033EC004 LDP X20, X19, [X31 + 0x20]
	0x033EC008 LDP X30, X21, [X31 + 0x10]
	0x033EC00C ADD X31, X31, 0x30
	0x033EC010 RET
	0x033EC014 MOV X0, X20
	0x033EC018 BL 0x1C16F18
	0x033EC01C BL 0x1C16F20
	0x033EC020 B 0x33EC024
	0x033EC024 MOV X21, X0
	0x033EC028 CMP W1, 0x1
	0x033EC02C B.NE 0x33EC044
	0x033EC030 MOV X0, X21
	0x033EC034 BL 0x3EB1AD0
	0x033EC038 LDR X20, [X0]
	0x033EC03C BL 0x3EB1AE0
	0x033EC040 B 0x33EBFEC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, [X0+32]
	005 Move X19, X0
	006 Call 0x1C17D44
	007 Compare X20, 0
	008 JumpIfEqual {20}
	009 Move X19, [X19+32]
	010 Call 0x1C17D44
	011 Compare X19, 0
	012 JumpIfEqual {24}
	013 Move X0, X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X1, X31
	017 Move X30, [X31+32]
	018 Call SafeHandle.Close, X0
	019 Return 
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Return 
	024 Call 0x1C17F20

Method: System.Void Dispose()

Disassembly:
	0x033EC044 MOV X20, X31
	0x033EC048 B 0x33EC050
	0x033EC04C MOV X21, X0
	0x033EC050 LDRB W8, [X31 + 0xC]
	0x033EC054 CBZ W8, 0x33EC064
	0x033EC058 MOV X0, X19
	0x033EC05C MOV X1, X31
	0x033EC060 BL 0x33E14E4
	0x033EC064 CBNZ X20, 0x33EC070
	0x033EC068 MOV X0, X21
	0x033EC06C BL 0x1D2C690
	0x033EC070 MOV X0, X20
	0x033EC074 BL 0x1C16F18
	0x033EC078 BL 0x1990590
	0x033EC07C B 0x1C4C53C
	0x033EC080 SUB X31, X31, 0x40
	0x033EC084 STP X30, X23, [X31 + 0x10]
	0x033EC088 STP X22, X21, [X31 + 0x20]
	0x033EC08C STP X20, X19, [X31 + 0x30]
	0x033EC090 CBZ X1, 0x33EC198
	0x033EC094 LDRB W8, [X1 + 0x41]
	0x033EC098 MOV X21, X2
	0x033EC09C MOV X22, X1
	0x033EC0A0 MOV X19, X0
	0x033EC0A4 CBZ W8, 0x33EC0AC
	0x033EC0A8 STRB W31, [X22 + 0x41]
	0x033EC0AC STRB W31, [X31 + 0xC]
	0x033EC0B0 ADD X1, X31, 0xC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xFF2000
	006 Move X20, 0xD0F000
	007 Move W8, [X21+1041]
	008 Move X20, [X20+3088]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD0F000
	015 Move X0, [X0+3088]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1041], W8
	019 Move X8, [X19]
	020 Move W1, 1
	021 Move X0, X19
	022 Move X9, [X8+536]
	023 Move X2, [X8+544]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X1, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call GC.SuppressFinalize, X0
	037 Return 

Method: System.Int32 WaitOneNative(System.Runtime.InteropServices.SafeHandle waitableSafeHandle, System.UInt32 millisecondsTimeout, System.Boolean hasThreadAffinity, System.Boolean exitContext)

Disassembly:
	0x033EB560 ADD W8, W8, 0x1
	0x033EB564 STR W8, [X19 + 0x48]
	0x033EB568 LDRB W8, [X31 + 0x28]
	0x033EB56C CBZ W8, 0x33EB57C
	0x033EB570 MOV X0, X19
	0x033EB574 MOV X1, X31
	0x033EB578 BL 0x33E14E4
	0x033EB57C CBNZ X20, 0x33EB5FC
	0x033EB580 LDR X0, [X24]
	0x033EB584 BL 0x1C16F10
	0x033EB588 LDR X2, [X25]
	0x033EB58C MOV X20, X0
	0x033EB590 MOV X1, X19
	0x033EB594 BL 0x33E7508
	0x033EB598 LDR X0, [X26]
	0x033EB59C CMP W22, 0x102
	0x033EB5A0 CSET W8, EQ
	0x033EB5A4 STRB W8, [X31 + 0x1C]
	0x033EB5A8 ADD X1, X31, 0x1C
	0x033EB5AC BL 0x1C16E04
	0x033EB5B0 MOV X1, X0
	0x033EB5B4 MOV X0, X20
	0x033EB5B8 BL 0x33E9B34
	0x033EB5BC LDRB W8, [X19 + 0x4D]
	0x033EB5C0 CBNZ W8, 0x33EB6C8
	0x033EB5C4 LDRB W8, [X19 + 0x4C]
	0x033EB5C8 CBZ W8, 0x33EB514
	0x033EB5CC B 0x33EB6C8
	0x033EB5D0 CMP W1, 0x1
	0x033EB5D4 MOV X20, X0
	0x033EB5D8 STR X1, [X31 + 0x8]
	0x033EB5DC B.NE 0x33EB630
	0x033EB5E0 MOV X0, X20
	0x033EB5E4 BL 0x3EB1AD0
	0x033EB5E8 LDR X8, [X0]
	0x033EB5EC STR X8, [X31 + 0x10]
	0x033EB5F0 BL 0x3EB1AE0
	0x033EB5F4 LDR X20, [X31 + 0x10]
	0x033EB5F8 B 0x33EB568
	0x033EB5FC MOV X0, X20
	0x033EB600 BL 0x1C16F18
	0x033EB604 BL 0x1C16F20
	0x033EB608 BL 0x1C16F20
	0x033EB60C BL 0x1C16F20
	0x033EB610 BL 0x1C16F28
	0x033EB614 BL 0x1C16F28
	0x033EB618 BL 0x1C16F44
	0x033EB61C MOV X1, X31
	0x033EB620 BL 0x1C16DEC
	0x033EB624 BL 0x1C16F44
	0x033EB628 MOV X1, X31
	0x033EB62C BL 0x1C16DEC
	0x033EB630 STR X31, [X31 + 0x10]
	0x033EB634 LDRB W8, [X31 + 0x28]
	0x033EB638 CBZ W8, 0x33EB648
	0x033EB63C MOV X0, X19
	0x033EB640 MOV X1, X31
	0x033EB644 BL 0x33E14E4
	0x033EB648 LDP X1, X8, [X31 + 0x8]
	0x033EB64C CBZ X8, 0x33EB694
	0x033EB650 LDR X0, [X31 + 0x10]
	0x033EB654 BL 0x1C16F18
	0x033EB658 MOV X20, X0
	0x033EB65C STR X1, [X31 + 0x8]
	0x033EB660 B 0x33EB634
	0x033EB664 B 0x33EB690
	0x033EB668 B 0x33EB908
	0x033EB66C B 0x33EB690
	0x033EB670 B 0x33EB908
	0x033EB674 B 0x33EB690
	0x033EB678 B 0x33EB690
	0x033EB67C B 0x33EB690
	0x033EB680 B 0x33EB690
	0x033EB684 B 0x33EB690
	0x033EB688 B 0x33EB690
	0x033EB68C B 0x33EB690
	0x033EB690 MOV X20, X0
	0x033EB694 CMP W1, 0x1
	0x033EB698 B.NE 0x33EB764
	0x033EB69C MOV X0, X20
	0x033EB6A0 BL 0x3EB1AD0
	0x033EB6A4 MOV X20, X0
	0x033EB6A8 ADRP X0, 0xD0E000
	0x033EB6AC LDR X0, [X0 + 0xCC0]
	0x033EB6B0 BL 0x1C16D08
	0x033EB6B4 LDR X8, [X20]
	0x033EB6B8 LDR X1, [X8]
	0x033EB6BC BL 0x1C17270
	0x033EB6C0 TBZ X0, 0x0, 0x33EB7C4
	0x033EB6C4 BL 0x3EB1AE0
	0x033EB6C8 STRB W31, [X31 + 0x28]
	0x033EB6CC ADD X1, X31, 0x28
	0x033EB6D0 MOV X0, X19
	0x033EB6D4 MOV X2, X31
	0x033EB6D8 BL 0x33DE64C
	0x033EB6DC LDR W8, [X19 + 0x48]
	0x033EB6E0 MOVZ W9, 0x1
	0x033EB6E4 STRB W9, [X19 + 0x4D]
	0x033EB6E8 CBZ W8, 0x33EB6F4
	0x033EB6EC MOV X21, X31
	0x033EB6F0 B 0x33EB70C
	0x033EB6F4 LDR X0, [X19 + 0x30]
	0x033EB6F8 CBZ X0, 0x33EB6EC
	0x033EB6FC BL 0x33EA154
	0x033EB700 BL 0x33EB208
	0x033EB704 MOV X21, X31
	0x033EB708 STR X31, [X19 + 0x30]
	0x033EB70C LDRB W8, [X31 + 0x28]
	0x033EB710 CBZ W8, 0x33EB720
	0x033EB714 MOV X0, X19
	0x033EB718 MOV X1, X31
	0x033EB71C BL 0x33E14E4
	0x033EB720 CBNZ X21, 0x33EB7BC

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFF3000
	007 Move W8, [X21+1042]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xD42000
	015 Move X0, [X0+1096]
	016 Call 0x1C17CF4
	017 Move X0, 0xD43000
	018 Move X0, [X0+616]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1042], W8
	022 Move X0, X31
	023 Move [X31], X31
	024 Move [X31+12], W31
	025 Call SynchronizationContext.get_Current
	026 Compare X19, 0
	027 JumpIfEqual {95}
	028 Move X21, X0
	029 Add X1, X31, 12
	030 Move X0, X19
	031 Move X2, X31
	032 Call SafeHandle.DangerousAddRef, X0, X1
	033 Compare X21, 0
	034 JumpIfEqual {62}
	035 Move X0, X21
	036 Move X1, X31
	037 Call SynchronizationContext.IsWaitNotificationRequired, X0
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {62}
	042 Move X8, 0xD42000
	043 Move X8, [X8+1096]
	044 Move X0, [X8]
	045 Move W1, 1
	046 Call 0x1C17D6C
	047 Move X1, X0
	048 Compare X1, 0
	049 JumpIfEqual {99}
	050 Move W8, [X1+24]
	051 Compare W8, 0
	052 JumpIfEqual {100}
	053 Move X8, [X19+16]
	054 Move [X1+32], X8
	055 Move X8, [X21]
	056 Move X9, [X8+440]
	057 Move X4, [X8+448]
	058 Move X0, X21
	059 Move W2, W31
	060 Move W3, W20
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X8, 0xD43000
	063 Move X8, [X8+616]
	064 Move X9, [X19+16]
	065 Move X0, [X8]
	066 Move [X31], X9
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Add X0, X31, 0
	072 Move W1, 1
	073 Move W2, W31
	074 Move W3, W20
	075 Call 0x1C4D540
	076 Move W20, W0
	077 Move X21, X31
	078 Move W8, [X31+12]
	079 Compare W8, 0
	080 JumpIfEqual {86}
	081 Compare X19, 0
	082 JumpIfEqual {98}
	083 Move X0, X19
	084 Move X1, X31
	085 Call SafeHandle.DangerousRelease, X0
	086 Compare X21, 0
	087 JumpIfNotEqual {96}
	088 Move W0, W20
	089 Move X20, [X31+32]
	090 Move X19, [X31+40]
	091 Move X30, [X31+16]
	092 Move X21, [X31+24]
	093 Add X31, X31, 48
	094 Return X0
	095 Call 0x1C17F20
	096 Move X0, X21
	097 Call 0x1C17F18
	098 Call 0x1C17F20
	099 Call 0x1C17F20
	100 Call 0x1C17F28
	101 Move X20, X0
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X0, X20
	104 Call 0x3EB2AD0
	105 Move X21, [X0]
	106 Call 0x3EB2AE0
	107 Move W20, W31
	108 Move X21, X31
	109 Move X20, X0
	110 Move W8, [X31+12]
	111 Compare W8, 0
	112 JumpIfEqual {119}
	113 Compare X19, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17F20
	116 Move X0, X19
	117 Move X1, X31
	118 Call SafeHandle.DangerousRelease, X0
	119 Compare X21, 0
	120 JumpIfNotEqual {123}
	121 Move X0, X20
	122 Call 0x1D2D690
	123 Move X0, X21
	124 Call 0x1C17F18
	125 Call 0x1991590

Method: System.Int32 WaitMultiple(System.Threading.WaitHandle[] waitHandles, System.Int32 millisecondsTimeout, System.Boolean exitContext, System.Boolean WaitAll)

Disassembly:
	0x033EBA40 CMP W1, 0x1
	0x033EBA44 MOV X21, X0
	0x033EBA48 B.NE 0x33EBA78
	0x033EBA4C MOV X0, X21
	0x033EBA50 BL 0x3EB1AD0
	0x033EBA54 LDR X20, [X0]
	0x033EBA58 BL 0x3EB1AE0
	0x033EBA5C MOV X0, X19
	0x033EBA60 MOV X1, X31
	0x033EBA64 BL 0x32C2928
	0x033EBA68 CBNZ X20, 0x33EBA80
	0x033EBA6C LDP X20, X19, [X31 + 0x10]
	0x033EBA70 LDP X30, X21, [X31], #0x20
	0x033EBA74 RET
	0x033EBA78 MOV X20, X31
	0x033EBA7C B 0x33EBA8C
	0x033EBA80 MOV X0, X20
	0x033EBA84 BL 0x1C16F18
	0x033EBA88 MOV X21, X0
	0x033EBA8C MOV X0, X19
	0x033EBA90 MOV X1, X31
	0x033EBA94 BL 0x32C2928
	0x033EBA98 CBNZ X20, 0x33EBAA4
	0x033EBA9C MOV X0, X21
	0x033EBAA0 BL 0x1D2C690
	0x033EBAA4 MOV X0, X20
	0x033EBAA8 BL 0x1C16F18
	0x033EBAAC BL 0x1990590
	0x033EBAB0 MOVZ W8, 0x2
	0x033EBAB4 MOV X1, X31
	0x033EBAB8 STR W8, [X0 + 0xE0]
	0x033EBABC B 0x32C01F0
	0x033EBAC0 STR X30, [X31 - 0x20]!
	0x033EBAC4 STP X20, X19, [X31 + 0x10]
	0x033EBAC8 ADRP X20, 0xFF2000
	0x033EBACC ADRP X19, 0xD42000
	0x033EBAD0 LDRB W8, [X20 + 0x418]
	0x033EBAD4 LDR X19, [X19 + 0x578]
	0x033EBAD8 TBNZ X8, 0x0, 0x33EBAF0
	0x033EBADC ADRP X0, 0xD42000
	0x033EBAE0 LDR X0, [X0 + 0x578]
	0x033EBAE4 BL 0x1C16CF4
	0x033EBAE8 MOVZ W8, 0x1
	0x033EBAEC STRB W8, [X20 + 0x418]
	0x033EBAF0 LDR X0, [X19]
	0x033EBAF4 LDR W8, [X0 + 0xE0]
	0x033EBAF8 CBNZ W8, 0x33EBB00
	0x033EBAFC BL 0x1C16DFC
	0x033EBB00 ADRP X20, 0xFF2000
	0x033EBB04 LDRB W8, [X20 + 0x500]
	0x033EBB08 CBNZ W8, 0x33EBB20
	0x033EBB0C ADRP X0, 0xD42000
	0x033EBB10 LDR X0, [X0 + 0x578]
	0x033EBB14 BL 0x1C16CF4
	0x033EBB18 MOVZ W8, 0x1
	0x033EBB1C STRB W8, [X20 + 0x500]
	0x033EBB20 LDR X0, [X19]
	0x033EBB24 LDR W8, [X0 + 0xE0]
	0x033EBB28 CBNZ W8, 0x33EBB34
	0x033EBB2C BL 0x1C16DFC
	0x033EBB30 LDR X0, [X19]
	0x033EBB34 LDR X8, [X0 + 0xB8]
	0x033EBB38 LDP X20, X19, [X31 + 0x10]
	0x033EBB3C LDR X0, [X8]
	0x033EBB40 LDR X30, [X31], #0x20
	0x033EBB44 RET
	0x033EBB48 STP X30, X23, [X31 - 0x30]!
	0x033EBB4C STP X22, X21, [X31 + 0x10]
	0x033EBB50 STP X20, X19, [X31 + 0x20]
	0x033EBB54 MOV X22, X1
	0x033EBB58 MOV X1, X31
	0x033EBB5C MOV W19, W4
	0x033EBB60 MOV W20, W3
	0x033EBB64 MOV X21, X2
	0x033EBB68 MOV X23, X0
	0x033EBB6C BL 0x33C011C
	0x033EBB70 SXTW X3, W20
	0x033EBB74 SXTW X4, W19
	0x033EBB78 MOV X1, X22
	0x033EBB7C MOV X2, X21
	0x033EBB80 LDP X20, X19, [X31 + 0x20]
	0x033EBB84 LDP X22, X21, [X31 + 0x10]
	0x033EBB88 MOV X0, X23
	0x033EBB8C LDP X30, X23, [X31], #0x30
	0x033EBB90 B 0x33EBB94
	0x033EBB94 STP X30, X19, [X31 - 0x10]!
	0x033EBB98 CBZ X1, 0x33EBBBC
	0x033EBB9C MOV X8, X3
	0x033EBBA0 STP X1, X2, [X0 + 0x18]
	0x033EBBA4 MOVZ W3, 0x1
	0x033EBBA8 STURH W31, [X0 + 0x41]
	0x033EBBAC MOV X1, X8
	0x033EBBB0 MOV X2, X4
	0x033EBBB4 LDP X30, X19, [X31], #0x10
	0x033EBBB8 B 0x33EBCD8
	0x033EBBBC ADRP X0, 0xD0D000
	0x033EBBC0 LDR X0, [X0 + 0x528]
	0x033EBBC4 BL 0x1C16D08
	0x033EBBC8 BL 0x1C16F10
	0x033EBBCC MOV X19, X0
	0x033EBBD0 ADRP X0, 0xD41000
	0x033EBBD4 LDR X0, [X0 + 0xF28]
	0x033EBBD8 BL 0x1C16D08
	0x033EBBDC MOV X1, X0
	0x033EBBE0 MOV X0, X19
	0x033EBBE4 MOV X2, X31
	0x033EBBE8 BL 0x330E100
	0x033EBBEC ADRP X0, 0xD42000
	0x033EBBF0 LDR X0, [X0 + 0x580]
	0x033EBBF4 BL 0x1C16D08
	0x033EBBF8 MOV X1, X0
	0x033EBBFC MOV X0, X19
	0x033EBC00 BL 0x1C16DEC
	0x033EBC04 SUB X31, X31, 0x50
	0x033EBC08 STR D8, [X31 + 0x10]
	0x033EBC0C STP X30, X23, [X31 + 0x20]
	0x033EBC10 STP X22, X21, [X31 + 0x30]
	0x033EBC14 STP X20, X19, [X31 + 0x40]
	0x033EBC18 ADRP X23, 0xFF2000
	0x033EBC1C STR X3, [X31 + 0x18]
	0x033EBC20 STR X4, [X31 + 0x8]
	0x033EBC24 ADRP X22, 0xD0A000
	0x033EBC28 LDRB W8, [X23 + 0x419]
	0x033EBC2C LDR X22, [X22 + 0x570]
	0x033EBC30 MOV X19, X2
	0x033EBC34 MOV X20, X1
	0x033EBC38 MOV X21, X0
	0x033EBC3C TBNZ X8, 0x0, 0x33EBC54
	0x033EBC40 ADRP X0, 0xD0A000
	0x033EBC44 LDR X0, [X0 + 0x570]
	0x033EBC48 BL 0x1C16CF4
	0x033EBC4C MOVZ W8, 0x1
	0x033EBC50 STRB W8, [X23 + 0x419]
	0x033EBC54 MOV X0, X21
	0x033EBC58 MOV X1, X31
	0x033EBC5C BL 0x33C011C
	0x033EBC60 LDR X0, [X22]
	0x033EBC64 LDR W8, [X0 + 0xE0]
	0x033EBC68 CBNZ W8, 0x33EBC70
	0x033EBC6C BL 0x1C16DFC
	0x033EBC70 ADD X0, X31, 0x18
	0x033EBC74 MOV X1, X31
	0x033EBC78 BL 0x3394200
	0x033EBC7C ADD X0, X31, 0x8
	0x033EBC80 MOV X1, X31
	0x033EBC84 MOV V8.16B, V0.16B
	0x033EBC88 BL 0x3394200
	0x033EBC8C MOVZ X9, 0x7FF00000
	0x033EBC90 FMOV D1, X9
	0x033EBC94 FCVTZS X8, D8
	0x033EBC98 MOVZ X10, 0x80000000
	0x033EBC9C FCMP D8, D1
	0x033EBCA0 FCVTZS X11, D0
	0x033EBCA4 CSEL X3, X10, X8, EQ
	0x033EBCA8 FCMP D0, D1
	0x033EBCAC CSEL X4, X10, X11, EQ
	0x033EBCB0 MOV X0, X21
	0x033EBCB4 MOV X1, X20
	0x033EBCB8 MOV X2, X19
	0x033EBCBC BL 0x33EBB94
	0x033EBCC0 LDP X20, X19, [X31 + 0x40]
	0x033EBCC4 LDP X22, X21, [X31 + 0x30]
	0x033EBCC8 LDP X30, X23, [X31 + 0x20]
	0x033EBCCC LDR V8, [X31 + 0x10]
	0x033EBCD0 ADD X31, X31, 0x50
	0x033EBCD4 RET
	0x033EBCD8 STR X30, [X31 - 0x20]!
	0x033EBCDC STP X20, X19, [X31 + 0x10]
	0x033EBCE0 MOVN W8, 0x0
	0x033EBCE4 CMP X1, X8
	0x033EBCE8 B.GE 0x33EBD68
	0x033EBCEC MOVN W8, 0x0
	0x033EBCF0 CMP X2, X8
	0x033EBCF4 B.GE 0x33EBD98
	0x033EBCF8 MOV X20, X1
	0x033EBCFC ADDS X31, X1, 0x2
	0x033EBD00 B.LE 0x33EBDE0
	0x033EBD04 ADDS X31, X2, 0x2
	0x033EBD08 B.LE 0x33EBE00
	0x033EBD0C LDRB W8, [X0 + 0x40]
	0x033EBD10 MOV X19, X0
	0x033EBD14 CBNZ W8, 0x33EBE48
	0x033EBD18 STP X20, X2, [X19 + 0x28]
	0x033EBD1C CBZ X20, 0x33EBD44
	0x033EBD20 TBNZ X20, 0x0, 0x33EBD34
	0x033EBD24 BL 0x1C4C53C
	0x033EBD28 MOVZ W8, 0x2710
	0x033EBD2C MADD X20, X20, X8, X0
	0x033EBD30 B 0x33EBD44
	0x033EBD34 MOVN X20, 0x80000000
	0x033EBD38 TBZ X3, 0x0, 0x33EBD44
	0x033EBD3C STR X20, [X19 + 0x38]
	0x033EBD40 B 0x33EBD58
	0x033EBD44 BL 0x33EBAC0
	0x033EBD48 CBZ X0, 0x33EBE9C
	0x033EBD4C MOV X1, X19
	0x033EBD50 MOV X2, X20
	0x033EBD54 BL 0x33EC080
	0x033EBD58 LDP X20, X19, [X31 + 0x10]
	0x033EBD5C MOVZ W0, 0x1
	0x033EBD60 LDR X30, [X31], #0x20
	0x033EBD64 RET
	0x033EBD68 ADRP X0, 0xD10000
	0x033EBD6C LDR X0, [X0 + 0x760]
	0x033EBD70 BL 0x1C16D08
	0x033EBD74 BL 0x1C16F10
	0x033EBD78 MOV X19, X0
	0x033EBD7C ADRP X0, 0xD42000
	0x033EBD80 LDR X0, [X0 + 0x588]
	0x033EBD84 BL 0x1C16D08
	0x033EBD88 MOV X20, X0
	0x033EBD8C ADRP X0, 0xD42000
	0x033EBD90 LDR X0, [X0 + 0x590]
	0x033EBD94 B 0x33EBDC4
	0x033EBD98 ADRP X0, 0xD10000
	0x033EBD9C LDR X0, [X0 + 0x760]
	0x033EBDA0 BL 0x1C16D08
	0x033EBDA4 BL 0x1C16F10
	0x033EBDA8 MOV X19, X0
	0x033EBDAC ADRP X0, 0xD42000
	0x033EBDB0 LDR X0, [X0 + 0x598]
	0x033EBDB4 BL 0x1C16D08
	0x033EBDB8 MOV X20, X0
	0x033EBDBC ADRP X0, 0xD42000
	0x033EBDC0 LDR X0, [X0 + 0x5A0]
	0x033EBDC4 BL 0x1C16D08
	0x033EBDC8 MOV X2, X0
	0x033EBDCC MOV X0, X19
	0x033EBDD0 MOV X1, X20
	0x033EBDD4 MOV X3, X31
	0x033EBDD8 BL 0x3311888
	0x033EBDDC B 0x33EBE30
	0x033EBDE0 ADRP X0, 0xD10000
	0x033EBDE4 LDR X0, [X0 + 0x760]
	0x033EBDE8 BL 0x1C16D08
	0x033EBDEC BL 0x1C16F10
	0x033EBDF0 MOV X19, X0
	0x033EBDF4 ADRP X0, 0xD42000
	0x033EBDF8 LDR X0, [X0 + 0x588]
	0x033EBDFC B 0x33EBE1C
	0x033EBE00 ADRP X0, 0xD10000
	0x033EBE04 LDR X0, [X0 + 0x760]
	0x033EBE08 BL 0x1C16D08
	0x033EBE0C BL 0x1C16F10
	0x033EBE10 MOV X19, X0

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 16
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X25+40]
	017 Move X22, 0xFF3000
	018 Move W21, W3
	019 Move W20, W1
	020 Move [X29-8], X8
	021 Move W8, [X22+1043]
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {38}
	027 Move X0, 0xD42000
	028 Move X0, [X0+1096]
	029 Call 0x1C17CF4
	030 Move X0, 0xD43000
	031 Move X0, [X0+1368]
	032 Call 0x1C17CF4
	033 Move X0, 0xD43000
	034 Move X0, [X0+616]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X22+1043], W8
	038 NotImplemented "Instruction STURB not yet implemented."
	039 Compare X19, 0
	040 JumpIfEqual {203}
	041 Move W8, [X19+24]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, X31
	044 Call SynchronizationContext.get_Current
	045 Move X23, [X19+24]
	046 Move X22, X0
	047 Move TEMP, 0
	048 Not TEMP
	049 Move W24, TEMP
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add W8, W24, 1
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction STURB not yet implemented."
	054 Add X8, X19, W8
	055 Move X0, [X8+32]
	056 Compare X0, 0
	057 JumpIfEqual {205}
	058 Call WaitHandle.get_SafeWaitHandle, X0
	059 Compare X0, 0
	060 JumpIfEqual {206}
	061 Subtract X1, X29, 12
	062 Move X2, X31
	063 Call SafeHandle.DangerousAddRef, X0, X1
	064 Move X23, [X19+24]
	065 Add W8, W24, 1
	066 Add W9, W24, 2
	067 Move W24, W8
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W24, W8
	070 Compare X22, 0
	071 JumpIfEqual {118}
	072 Move X0, X22
	073 Move X1, X31
	074 Call SynchronizationContext.IsWaitNotificationRequired, X0
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {117}
	079 Move X8, 0xD42000
	080 Move X8, [X8+1096]
	081 Move W1, [X19+24]
	082 Move X0, [X8]
	083 Call 0x1C17D6C
	084 Move W8, [X19+24]
	085 Move X21, X0
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X23, X31
	088 Add X26, X21, 32
	089 Add X27, X19, 32
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X0, [X27]
	092 Compare X0, 0
	093 JumpIfEqual {212}
	094 Call WaitHandle.get_SafeWaitHandle, X0
	095 Compare X0, 0
	096 JumpIfEqual {213}
	097 Compare X21, 0
	098 JumpIfEqual {211}
	099 Move W8, [X21+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X8, [X0+16]
	102 Move [X26], X8
	103 Move W8, [X19+24]
	104 Add X23, X23, 1
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X8, [X22]
	107 Move X9, [X8+440]
	108 Move X4, [X8+448]
	109 Move X0, X22
	110 Move X1, X21
	111 Move W2, W31
	112 Move W3, W20
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Move TEMP, 0x80000000
	115 Not TEMP
	116 Move W20, TEMP
	117 Move X23, [X19+24]
	118 Move X8, X23
	119 ShiftRight X8, 32
	120 And X8, X8, 0x7FFFFFFF
	121 NotImplemented "Instruction SBFM not yet implemented."
	122 Compare X8, 0
	123 JumpIfEqual {129}
	124 Add X9, X2, 15
	125 Add X8, X31, 0
	126 And X9, X9, 0xFFFFFFFF
	127 Subtract X22, X8, X9
	128 Add X31, X22, 0
	129 Move X22, X31
	130 Move X0, X22
	131 Move W1, W31
	132 Call 0x3EB2B10
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X26, X31
	135 Add X27, X19, 32
	136 Move X28, X22
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X0, [X27]
	139 Compare X0, 0
	140 JumpIfEqual {208}
	141 Call WaitHandle.get_SafeWaitHandle, X0
	142 Compare X0, 0
	143 JumpIfEqual {209}
	144 Move X8, [X0+16]
	145 Add X26, X26, 1
	146 Move [X28+8], X8
	147 Move X23, [X19+24]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move X8, 0xD43000
	150 Move X8, [X8+616]
	151 Move X0, [X8]
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {157}
	155 Call 0x1C17DFC
	156 Move X23, [X19+24]
	157 And W2, W21, 1
	158 Move X0, X22
	159 Move W1, W23
	160 Move W3, W20
	161 Call 0x1C4D540
	162 Move W20, W0
	163 Move X21, X31
	164 Move TEMP, X24
	165 And TEMP, TEMP, -2147483648
	166 Compare TEMP, -2147483648
	167 JumpIfEqual {183}
	168 Add X8, X19, W24
	169 Add X22, X8, 32
	170 Move W8, [X19+24]
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move X0, [X22]
	173 Compare X0, 0
	174 JumpIfEqual {203}
	175 Call WaitHandle.get_SafeWaitHandle, X0
	176 Compare X0, 0
	177 JumpIfEqual {203}
	178 Move X1, X31
	179 Call SafeHandle.DangerousRelease, X0
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Subtract W24, W24, 1
	182 Subtract X22, X22, 8
	183 Compare X21, 0
	184 JumpIfNotEqual {216}
	185 Move X8, [X25+40]
	186 NotImplemented "Instruction LDUR not yet implemented."
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move W0, W20
	189 Add X31, X29, 0
	190 Move X20, [X31+80]
	191 Move X19, [X31+88]
	192 Move X22, [X31+64]
	193 Move X21, [X31+72]
	194 Move X24, [X31+48]
	195 Move X23, [X31+56]
	196 Move X26, [X31+32]
	197 Move X25, [X31+40]
	198 Move X28, [X31+16]
	199 Move X27, [X31+24]
	200 Move X29, [X31+96]
	201 Move X30, [X31+104]
	202 Return X0
	203 Call 0x1C17F20
	204 Call 0x1C17F28
	205 Call 0x1C17F20
	206 Call 0x1C17F20
	207 Call 0x1C17F28
	208 Call 0x1C17F20
	209 Call 0x1C17F20
	210 Call 0x1C17F28
	211 Call 0x1C17F20
	212 Call 0x1C17F20
	213 Call 0x1C17F20
	214 Call 0x1C17F28
	215 Call 0x1C17F28
	216 Move X0, X21
	217 Call 0x1C17F18
	218 Call 0x3EB2B20
	219 Move X20, X0
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move X0, X20
	222 Call 0x3EB2AD0
	223 Move X21, [X0]
	224 Call 0x3EB2AE0
	225 Move W20, W31
	226 Move TEMP, X24
	227 And TEMP, TEMP, -2147483648
	228 Compare TEMP, -2147483648
	229 JumpIfNotEqual {168}
	230 Move X21, X31
	231 Move X20, X0
	232 Move TEMP, X24
	233 And TEMP, TEMP, -2147483648
	234 Compare TEMP, -2147483648
	235 JumpIfEqual {251}
	236 Add X8, X19, W24
	237 Add X22, X8, 32
	238 Move W8, [X19+24]
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Move X0, [X22]
	241 Compare X0, 0
	242 JumpIfEqual {258}
	243 Call WaitHandle.get_SafeWaitHandle, X0
	244 Compare X0, 0
	245 JumpIfEqual {259}
	246 Move X1, X31
	247 Call SafeHandle.DangerousRelease, X0
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Subtract W24, W24, 1
	250 Subtract X22, X22, 8
	251 Compare X21, 0
	252 JumpIfNotEqual {255}
	253 Move X0, X20
	254 Call 0x1D2D690
	255 Move X0, X21
	256 Call 0x1C17F18
	257 Call 0x1C17F28
	258 Call 0x1C17F20
	259 Call 0x1C17F20
	260 Call 0x1991590
	261 Call 0x1991590

Method: System.Int32 Wait_internal(System.IntPtr* handles, System.Int32 numHandles, System.Boolean waitAll, System.Int32 ms)

Disassembly:
	0x033EC0B4 MOV X0, X19
	0x033EC0B8 MOV X2, X31

ISIL:
	001 And W2, W2, 1
	002 Call 0x1C4D540
	003 Return X0

Method: System.Void .cctor()

Disassembly:
	0x033EC0BC BL 0x33DE64C
	0x033EC0C0 BL 0x1C16D44
	0x033EC0C4 MOVZ W8, 0x1
	0x033EC0C8 STRB W8, [X19 + 0x10]
	0x033EC0CC LDRB W8, [X22 + 0x42]
	0x033EC0D0 CBZ W8, 0x33EC104
	0x033EC0D4 MOVN X8, 0x80000000
	0x033EC0D8 CMP X21, X8
	0x033EC0DC B.NE 0x33EC11C
	0x033EC0E0 MOVZ W23, 0x1
	0x033EC0E4 STR X8, [X22 + 0x38]
	0x033EC0E8 STRB W23, [X22 + 0x41]
	0x033EC0EC BL 0x1C16D44
	0x033EC0F0 MOV X20, X31
	0x033EC0F4 MOV W21, W31
	0x033EC0F8 STRB W23, [X19 + 0x10]
	0x033EC0FC MOVZ W22, 0x6
	0x033EC100 B 0x33EC14C
	0x033EC104 STR X21, [X22 + 0x38]
	0x033EC108 MOV X0, X19
	0x033EC10C MOV X1, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFF2000
	005 Move X19, 0xD42000
	006 Move W8, [X20+1044]
	007 Move X19, [X19+616]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD42000
	013 Move X0, [X0+616]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1044], W8
	017 Move TEMP, 0
	018 Not TEMP
	019 Move W0, TEMP
	020 Move X1, X31
	021 Call IntPtr.op_Explicit, X0
	022 Move X8, [X19]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X8, [X8+184]
	026 Move [X8], X0
	027 Move X30, [X31+32]
	028 Return 

