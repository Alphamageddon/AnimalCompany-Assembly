Type: System.Threading.SpinLock

Method: System.Void .ctor(System.Boolean enableThreadOwnerTracking)

Disassembly:
	0x033E426C MOVZ W0, 0x1
	0x033E4270 LDP X30, X19, [X31], #0x10
	0x033E4274 RET
	0x033E4278 CMP W1, 0x1
	0x033E427C MOV X19, X0
	0x033E4280 B.NE 0x33E42E0
	0x033E4284 MOV X0, X19
	0x033E4288 BL 0x3EB1AD0
	0x033E428C MOV X19, X0
	0x033E4290 ADRP X0, 0xD15000
	0x033E4294 LDR X0, [X0 + 0xCC0]
	0x033E4298 BL 0x1C16D08
	0x033E429C LDR X8, [X19]
	0x033E42A0 LDR X1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, W1
	005 Move X19, X0
	006 Call 0x1C17D44
	007 Move [X19], W31
	008 Move TEMP, X20
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {16}
	012 Call 0x1C17D44
	013 Call 0x1C17D44
	014 Move W8, 0x80000000
	015 Move [X19], W8
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Return 

Method: System.Void Enter(ref System.Boolean lockTaken)

Disassembly:
	0x033E42A4 BL 0x1C17270
	0x033E42A8 TBZ X0, 0x0, 0x33E42B8
	0x033E42AC BL 0x3EB1AE0
	0x033E42B0 MOV W0, W31
	0x033E42B4 B 0x33E4270
	0x033E42B8 MOVZ W0, 0x8
	0x033E42BC BL 0x3EB1AF0
	0x033E42C0 LDR X8, [X19]
	0x033E42C4 STR X8, [X0]
	0x033E42C8 ADRP X1, 0xAD0000
	0x033E42CC ADD X1, X1, 0xE58
	0x033E42D0 MOV X2, X31
	0x033E42D4 BL 0x3EB1B00
	0x033E42D8 MOV X19, X0
	0x033E42DC BL 0x3EB1AE0
	0x033E42E0 MOV X0, X19
	0x033E42E4 BL 0x1D2C690
	0x033E42E8 BL 0x1990590
	0x033E42EC STP X30, X21, [X31 - 0x20]!
	0x033E42F0 STP X20, X19, [X31 + 0x10]
	0x033E42F4 ADRP X20, 0xFF9000
	0x033E42F8 LDRB W8, [X20 + 0x3BB]
	0x033E42FC MOV X19, X0
	0x033E4300 TBNZ X8, 0x0, 0x33E4318
	0x033E4304 ADRP X0, 0xD37000
	0x033E4308 LDR X0, [X0 + 0x580]
	0x033E430C BL 0x1C16CF4
	0x033E4310 MOVZ W8, 0x1
	0x033E4314 STRB W8, [X20 + 0x3BB]
	0x033E4318 LDR X8, [X19 + 0x18]
	0x033E431C CBZ X8, 0x33E4368
	0x033E4320 LDRB W9, [X19 + 0x8]
	0x033E4324 LDR X20, [X19]
	0x033E4328 ADRP X10, 0xD37000
	0x033E432C LDR X10, [X10 + 0x580]
	0x033E4330 EOR W9, W9, 0x1
	0x033E4334 LDR X21, [X8 + 0x30]
	0x033E4338 STR X20, [X8 + 0x30]
	0x033E433C STRB W9, [X8 + 0x38]
	0x033E4340 STR X31, [X19 + 0x18]
	0x033E4344 LDR X0, [X10]
	0x033E4348 LDR W8, [X0 + 0xE0]
	0x033E434C CBNZ W8, 0x33E4354
	0x033E4350 BL 0x1C16DFC
	0x033E4354 MOV X1, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xFFA000
	006 Move W8, [X21+945]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD4A000
	014 Move X0, [X0+512]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+945], W8
	018 Call Thread.BeginCriticalRegion
	019 Move W21, [X20]
	020 Call 0x1C17D44
	021 And W8, W21, 0x80000001
	022 Move W9, 0x80000000
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W8, [X19]
	025 Compare W8, 0
	026 JumpIfNotEqual {40}
	027 Call 0x1C17D44
	028 Or W1, W21, 1
	029 Move X0, X20
	030 Move W2, W21
	031 Move X3, X19
	032 Move X4, X31
	033 Call Interlocked.CompareExchange, X0, X1, X2, X3
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return 
	040 Move X8, 0xD4A000
	041 Move X8, [X8+512]
	042 Move X0, [X8]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X20
	048 Move X2, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move TEMP, 0
	052 Not TEMP
	053 Move W1, TEMP
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Call SpinLock.ContinueTryEnter, X0, X1, X2
	057 Return 

Method: System.Void TryEnter(System.Int32 millisecondsTimeout, ref System.Boolean lockTaken)

Disassembly:
	0x033E487C ANDS W31, W1, 0x1
	0x033E4880 MOVZ W9, 0x2
	0x033E4884 CSEL W9, W9, W31, NE
	0x033E4888 AND W8, W8, 0xFFFFFFFD
	0x033E488C ORR W8, W8, W9, 0x0
	0x033E4890 STR W8, [X0 + 0x30]
	0x033E4894 RET
	0x033E4898 LDRB W8, [X0 + 0x30]
	0x033E489C UBFM W0, W8, 0x2, 0x2
	0x033E48A0 RET
	0x033E48A4 MOV X1, X31
	0x033E48A8 B 0x33BDD8C
	0x033E48AC STR X30, [X31 - 0x20]!
	0x033E48B0 STP X20, X19, [X31 + 0x10]
	0x033E48B4 MOV W20, W1
	0x033E48B8 MOV X1, X31
	0x033E48BC MOV X19, X0
	0x033E48C0 BL 0x33BDD8C
	0x033E48C4 TBZ X20, 0x0, 0x33E48D0
	0x033E48C8 MOVZ W8, 0x4
	0x033E48CC STR W8, [X19 + 0x30]
	0x033E48D0 LDP X20, X19, [X31 + 0x10]
	0x033E48D4 LDR X30, [X31], #0x20
	0x033E48D8 RET
	0x033E48DC STR X30, [X31 - 0x20]!
	0x033E48E0 STP X20, X19, [X31 + 0x10]
	0x033E48E4 ADRP X20, 0xFF9000
	0x033E48E8 LDRB W8, [X20 + 0x3BD]
	0x033E48EC MOV X19, X0
	0x033E48F0 TBNZ X8, 0x0, 0x33E4908
	0x033E48F4 ADRP X0, 0xD40000
	0x033E48F8 LDR X0, [X0 + 0x370]
	0x033E48FC BL 0x1C16CF4
	0x033E4900 MOVZ W8, 0x1
	0x033E4904 STRB W8, [X20 + 0x3BD]
	0x033E4908 LDR X20, [X19 + 0x20]
	0x033E490C CBNZ X20, 0x33E4930
	0x033E4910 ADRP X8, 0xD40000
	0x033E4914 LDR X8, [X8 + 0x370]
	0x033E4918 LDR X0, [X8]
	0x033E491C BL 0x1C16F10
	0x033E4920 MOV X1, X31
	0x033E4924 MOV X20, X0
	0x033E4928 BL 0x3291718
	0x033E492C STR X20, [X19 + 0x20]
	0x033E4930 MOV X0, X20
	0x033E4934 LDP X20, X19, [X31 + 0x10]
	0x033E4938 LDR X30, [X31], #0x20
	0x033E493C RET
	0x033E4940 STR X1, [X0 + 0x20]
	0x033E4944 RET
	0x033E4948 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFFA000
	007 Move W8, [X22+946]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD4A000
	016 Move X0, [X0+512]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+946], W8
	020 Call Thread.BeginCriticalRegion
	021 Move W22, [X21]
	022 Call 0x1C17D44
	023 Add W31, W20, 1
	024 And W9, W22, 0x80000001
	025 Move W10, 0x80000000
	026 NotImplemented "Instruction CSET not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W9, [X19]
	029 Or W8, W9, W8
	030 Compare W8, 0
	031 JumpIfNotEqual {46}
	032 Call 0x1C17D44
	033 Or W1, W22, 1
	034 Move X0, X21
	035 Move W2, W22
	036 Move X3, X19
	037 Move X4, X31
	038 Call Interlocked.CompareExchange, X0, X1, X2, X3
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Return 
	046 Move X8, 0xD4A000
	047 Move X8, [X8+512]
	048 Move X0, [X8]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X21
	054 Move W1, W20
	055 Move X2, X19
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 Call SpinLock.ContinueTryEnter, X0, X1, X2
	062 Return 

Method: System.Void ContinueTryEnter(System.Int32 millisecondsTimeout, ref System.Boolean lockTaken)

Disassembly:
	0x033E43A8 ADRP X21, 0xFF9000
	0x033E43AC LDRB W8, [X21 + 0x3BC]
	0x033E43B0 MOV X19, X1
	0x033E43B4 MOV X20, X0
	0x033E43B8 TBNZ X8, 0x0, 0x33E440C
	0x033E43BC ADRP X0, 0xD49000
	0x033E43C0 LDR X0, [X0 + 0x298]
	0x033E43C4 BL 0x1C16CF4
	0x033E43C8 ADRP X0, 0xD49000
	0x033E43CC LDR X0, [X0 + 0x2A0]
	0x033E43D0 BL 0x1C16CF4
	0x033E43D4 ADRP X0, 0xD49000
	0x033E43D8 LDR X0, [X0 + 0x2A8]
	0x033E43DC BL 0x1C16CF4
	0x033E43E0 ADRP X0, 0xD49000
	0x033E43E4 LDR X0, [X0 + 0x2B0]
	0x033E43E8 BL 0x1C16CF4
	0x033E43EC ADRP X0, 0xD49000
	0x033E43F0 LDR X0, [X0 + 0x2B8]
	0x033E43F4 BL 0x1C16CF4
	0x033E43F8 ADRP X0, 0xD49000
	0x033E43FC LDR X0, [X0 + 0x2C0]
	0x033E4400 BL 0x1C16CF4
	0x033E4404 MOVZ W8, 0x1
	0x033E4408 STRB W8, [X21 + 0x3BC]
	0x033E440C STP X31, X31, [X31 + 0x40]
	0x033E4410 STR X31, [X31 + 0x50]
	0x033E4414 STP X31, X31, [X31 + 0x30]
	0x033E4418 STP X31, X31, [X31 + 0x20]
	0x033E441C CBZ X20, 0x33E4554
	0x033E4420 LDR X21, [X20 + 0x40]
	0x033E4424 CBZ X21, 0x33E4558
	0x033E4428 ADRP X8, 0xD49000
	0x033E442C LDR X8, [X8 + 0x2C0]
	0x033E4430 MOV X0, X21
	0x033E4434 LDR X1, [X8]
	0x033E4438 ADD X8, X31, 0x8
	0x033E443C BL 0x301CB58
	0x033E4440 LDUR V0, [X31 + 0x8]
	0x033E4444 LDR X8, [X31 + 0x18]
	0x033E4448 ADRP X25, 0xD49000
	0x033E444C ADRP X26, 0xD49000
	0x033E4450 LDR X25, [X25 + 0x2A8]
	0x033E4454 LDR X26, [X26 + 0x2B8]
	0x033E4458 STR V0, [X31 + 0x4]
	0x033E445C STR X8, [X31 + 0x50]
	0x033E4460 ADRP X27, 0xD49000
	0x033E4464 LDR X27, [X27 + 0x298]
	0x033E4468 LDR X1, [X25]
	0x033E446C ADD X0, X31, 0x40
	0x033E4470 BL 0x2BC4350
	0x033E4474 TBZ X0, 0x0, 0x33E453C
	0x033E4478 STR X31, [X31 + 0x38]
	0x033E447C LDR X0, [X20 + 0x38]
	0x033E4480 LDR X22, [X31 + 0x50]
	0x033E4484 CBZ X0, 0x33E4498
	0x033E4488 LDR X3, [X27]
	0x033E448C ADD X2, X31, 0x38
	0x033E4490 MOV X1, X22
	0x033E4494 BL 0x2AA6B2C
	0x033E4498 STR X31, [X31 + 0x30]
	0x033E449C CBZ X19, 0x33E44C0
	0x033E44A0 LDR X0, [X19 + 0x38]
	0x033E44A4 CBZ X0, 0x33E44C0
	0x033E44A8 LDR X3, [X27]
	0x033E44AC ADD X2, X31, 0x30
	0x033E44B0 MOV X1, X22
	0x033E44B4 BL 0x2AA6B2C
	0x033E44B8 LDR X23, [X31 + 0x30]
	0x033E44BC B 0x33E44C4
	0x033E44C0 MOV X23, X31
	0x033E44C4 LDR X24, [X31 + 0x38]
	0x033E44C8 CMP X24, X23
	0x033E44CC B.EQ 0x33E4468
	0x033E44D0 CBZ X22, 0x33E46B8
	0x033E44D4 LDR X8, [X22]
	0x033E44D8 LDR X1, [X26]
	0x033E44DC LDRH W9, [X8 + 0x12E]
	0x033E44E0 CBZ X9, 0x33E4504
	0x033E44E4 LDR X10, [X8 + 0xB0]
	0x033E44E8 ADD X10, X10, 0x8
	0x033E44EC LDUR X11, [X10 - 0x8]
	0x033E44F0 CMP X11, X1
	0x033E44F4 B.EQ 0x33E4514
	0x033E44F8 SUBS X9, X9, 0x1
	0x033E44FC ADD X10, X10, 0x10
	0x033E4500 B.NE 0x33E44EC
	0x033E4504 MOV X0, X22
	0x033E4508 MOV W2, W31
	0x033E450C BL 0x1C5C788
	0x033E4510 B 0x33E4520
	0x033E4514 LDRSW X9, [X10]
	0x033E4518 ADD X8, X8, X9, 0x4, LSL
	0x033E451C ADD X0, X8, 0x138
	0x033E4520 LDP X8, X4, [X0]
	0x033E4524 MOVZ W3, 0x1
	0x033E4528 MOV X0, X22
	0x033E452C MOV X1, X24
	0x033E4530 MOV X2, X23
	0x033E4534 BLR X8
	0x033E4538 B 0x33E4468
	0x033E453C ADRP X8, 0xD49000
	0x033E4540 LDR X8, [X8 + 0x2A0]
	0x033E4544 ADD X0, X31, 0x40
	0x033E4548 LDR X1, [X8]
	0x033E454C BL 0x2BC434C
	0x033E4550 B 0x33E4558
	0x033E4554 MOV X21, X31
	0x033E4558 CBZ X19, 0x33E469C
	0x033E455C LDR X0, [X19 + 0x40]
	0x033E4560 CBZ X0, 0x33E469C
	0x033E4564 CMP X0, X21
	0x033E4568 B.EQ 0x33E469C
	0x033E456C ADRP X8, 0xD49000
	0x033E4570 LDR X8, [X8 + 0x2C0]
	0x033E4574 LDR X1, [X8]
	0x033E4578 ADD X8, X31, 0x8
	0x033E457C BL 0x301CB58
	0x033E4580 LDUR V0, [X31 + 0x8]
	0x033E4584 LDR X8, [X31 + 0x18]
	0x033E4588 ADRP X24, 0xD49000
	0x033E458C ADRP X25, 0xD49000
	0x033E4590 LDR X24, [X24 + 0x2A8]
	0x033E4594 LDR X25, [X25 + 0x2B8]
	0x033E4598 STR V0, [X31 + 0x4]
	0x033E459C STR X8, [X31 + 0x50]
	0x033E45A0 ADRP X26, 0xD49000
	0x033E45A4 LDR X26, [X26 + 0x298]
	0x033E45A8 LDR X1, [X24]
	0x033E45AC ADD X0, X31, 0x40
	0x033E45B0 BL 0x2BC4350
	0x033E45B4 TBZ X0, 0x0, 0x33E4680
	0x033E45B8 LDR X21, [X31 + 0x50]
	0x033E45BC STR X31, [X31 + 0x28]
	0x033E45C0 CBZ X20, 0x33E45E0
	0x033E45C4 LDR X0, [X20 + 0x38]
	0x033E45C8 CBZ X0, 0x33E45E0
	0x033E45CC LDR X3, [X26]
	0x033E45D0 ADD X2, X31, 0x28
	0x033E45D4 MOV X1, X21
	0x033E45D8 BL 0x2AA6B2C
	0x033E45DC TBNZ X0, 0x0, 0x33E45A8
	0x033E45E0 STR X31, [X31 + 0x20]
	0x033E45E4 LDR X0, [X19 + 0x38]
	0x033E45E8 CBZ X0, 0x33E4604
	0x033E45EC LDR X3, [X26]
	0x033E45F0 ADD X2, X31, 0x20
	0x033E45F4 MOV X1, X21
	0x033E45F8 BL 0x2AA6B2C
	0x033E45FC LDR X22, [X31 + 0x20]
	0x033E4600 B 0x33E4608
	0x033E4604 MOV X22, X31
	0x033E4608 LDR X23, [X31 + 0x28]
	0x033E460C CMP X23, X22
	0x033E4610 B.EQ 0x33E45A8
	0x033E4614 CBZ X21, 0x33E46BC
	0x033E4618 LDR X8, [X21]
	0x033E461C LDR X1, [X25]
	0x033E4620 LDRH W9, [X8 + 0x12E]
	0x033E4624 CBZ X9, 0x33E4648
	0x033E4628 LDR X10, [X8 + 0xB0]
	0x033E462C ADD X10, X10, 0x8
	0x033E4630 LDUR X11, [X10 - 0x8]
	0x033E4634 CMP X11, X1
	0x033E4638 B.EQ 0x33E4658
	0x033E463C SUBS X9, X9, 0x1
	0x033E4640 ADD X10, X10, 0x10
	0x033E4644 B.NE 0x33E4630
	0x033E4648 MOV X0, X21
	0x033E464C MOV W2, W31
	0x033E4650 BL 0x1C5C788
	0x033E4654 B 0x33E4664
	0x033E4658 LDRSW X9, [X10]
	0x033E465C ADD X8, X8, X9, 0x4, LSL
	0x033E4660 ADD X0, X8, 0x138
	0x033E4664 LDP X8, X4, [X0]
	0x033E4668 MOVZ W3, 0x1
	0x033E466C MOV X0, X21
	0x033E4670 MOV X1, X23
	0x033E4674 MOV X2, X22
	0x033E4678 BLR X8
	0x033E467C B 0x33E45A8
	0x033E4680 MOV X20, X31
	0x033E4684 ADRP X8, 0xD49000
	0x033E4688 LDR X8, [X8 + 0x2A0]
	0x033E468C LDR X1, [X8]
	0x033E4690 ADD X0, X31, 0x40
	0x033E4694 BL 0x2BC434C
	0x033E4698 CBNZ X20, 0x33E46C0
	0x033E469C LDP X20, X19, [X31 + 0xA0]
	0x033E46A0 LDP X22, X21, [X31 + 0x90]
	0x033E46A4 LDP X24, X23, [X31 + 0x80]
	0x033E46A8 LDP X26, X25, [X31 + 0x70]
	0x033E46AC LDP X30, X27, [X31 + 0x60]
	0x033E46B0 ADD X31, X31, 0xB0
	0x033E46B4 RET
	0x033E46B8 BL 0x1C16F20
	0x033E46BC BL 0x1C16F20
	0x033E46C0 MOV X0, X20
	0x033E46C4 BL 0x1C16F18
	0x033E46C8 B 0x33E46CC
	0x033E46CC MOV X19, X1
	0x033E46D0 MOV X22, X0
	0x033E46D4 B 0x33E4734
	0x033E46D8 B 0x33E46F4
	0x033E46DC B 0x33E47D4
	0x033E46E0 B 0x33E46F4
	0x033E46E4 B 0x33E46F4
	0x033E46E8 B 0x33E47D4
	0x033E46EC B 0x33E47D4
	0x033E46F0 B 0x33E46F4
	0x033E46F4 MOV X19, X1
	0x033E46F8 MOV X22, X0
	0x033E46FC CMP W19, 0x1
	0x033E4700 B.NE 0x33E4718
	0x033E4704 MOV X0, X22
	0x033E4708 BL 0x3EB1AD0
	0x033E470C LDR X20, [X0]
	0x033E4710 BL 0x3EB1AE0
	0x033E4714 B 0x33E4684
	0x033E4718 MOV X20, X31
	0x033E471C ADRP X8, 0xD49000
	0x033E4720 LDR X8, [X8 + 0x2A0]
	0x033E4724 LDR X1, [X8]
	0x033E4728 ADD X0, X31, 0x40
	0x033E472C BL 0x2BC434C
	0x033E4730 CBNZ X20, 0x33E47B0
	0x033E4734 CMP W19, 0x1
	0x033E4738 B.NE 0x33E4834
	0x033E473C MOV X0, X22
	0x033E4740 BL 0x3EB1AD0
	0x033E4744 MOV X19, X0
	0x033E4748 ADRP X0, 0xD0F000
	0x033E474C LDR X0, [X0 + 0x7D0]
	0x033E4750 BL 0x1C16D08
	0x033E4754 LDR X8, [X19]
	0x033E4758 LDR X1, [X8]
	0x033E475C BL 0x1C17270
	0x033E4760 TBZ X0, 0x0, 0x33E4790
	0x033E4764 LDR X19, [X19]
	0x033E4768 BL 0x3EB1AE0
	0x033E476C ADRP X0, 0xD49000
	0x033E4770 LDR X0, [X0 + 0x2C8]
	0x033E4774 BL 0x1C16D08
	0x033E4778 MOV X1, X31
	0x033E477C BL 0x33BDD84
	0x033E4780 MOV X1, X19
	0x033E4784 MOV X2, X31
	0x033E4788 BL 0x33C2360
	0x033E478C B 0x33E469C
	0x033E4790 MOVZ W0, 0x8
	0x033E4794 BL 0x3EB1AF0
	0x033E4798 LDR X8, [X19]
	0x033E479C STR X8, [X0]
	0x033E47A0 ADRP X1, 0xAD0000
	0x033E47A4 ADD X1, X1, 0xE58
	0x033E47A8 MOV X2, X31
	0x033E47AC BL 0x3EB1B00
	0x033E47B0 MOV X0, X20
	0x033E47B4 BL 0x1C16F18
	0x033E47B8 MOV X19, X1
	0x033E47BC MOV X22, X0
	0x033E47C0 B 0x33E471C
	0x033E47C4 MOV X22, X0
	0x033E47C8 BL 0x3EB1AE0
	0x033E47CC B 0x33E4834
	0x033E47D0 B 0x33E47D4
	0x033E47D4 MOV X22, X0
	0x033E47D8 CMP W1, 0x1
	0x033E47DC B.NE 0x33E4810
	0x033E47E0 MOV X0, X22
	0x033E47E4 BL 0x3EB1AD0
	0x033E47E8 LDR X23, [X0]
	0x033E47EC BL 0x3EB1AE0
	0x033E47F0 ADRP X8, 0xD49000
	0x033E47F4 LDR X8, [X8 + 0x2A0]
	0x033E47F8 ADD X0, X31, 0x40
	0x033E47FC LDR X1, [X8]
	0x033E4800 BL 0x2BC434C
	0x033E4804 CBZ X23, 0x33E4558
	0x033E4808 MOV X0, X23
	0x033E480C BL 0x1C16F18
	0x033E4810 MOV X23, X31
	0x033E4814 B 0x33E481C
	0x033E4818 MOV X22, X0
	0x033E481C ADRP X8, 0xD49000
	0x033E4820 LDR X8, [X8 + 0x2A0]
	0x033E4824 LDR X1, [X8]
	0x033E4828 ADD X0, X31, 0x40
	0x033E482C BL 0x2BC434C
	0x033E4830 CBNZ X23, 0x33E483C
	0x033E4834 MOV X0, X22
	0x033E4838 BL 0x1D2C690
	0x033E483C MOV X0, X23
	0x033E4840 BL 0x1C16F18
	0x033E4844 BL 0x1990590
	0x033E4848 LDRB W8, [X0 + 0x30]
	0x033E484C MOVZ W9, 0x5
	0x033E4850 ANDS W31, W8, W9, 0x0
	0x033E4854 CSET W0, NE
	0x033E4858 RET
	0x033E485C LDR W8, [X0 + 0x30]
	0x033E4860 BFM W8, W1, 0x0, 0x0
	0x033E4864 STR W8, [X0 + 0x30]
	0x033E4868 RET
	0x033E486C LDRB W8, [X0 + 0x30]
	0x033E4870 UBFM W0, W8, 0x1, 0x1
	0x033E4874 RET
	0x033E4878 LDR W8, [X0 + 0x30]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0xFFA000
	015 Move W8, [X22+947]
	016 Move X20, X2
	017 Move W21, W1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD3B000
	024 Move X0, [X0+680]
	025 Call 0x1C17CF4
	026 Move X0, 0xD4A000
	027 Move X0, [X0+512]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+947], W8
	031 Call Thread.EndCriticalRegion
	032 Move W8, [X20]
	033 Compare W8, 0
	034 JumpIfNotEqual {292}
	035 Add W31, W21, 2
	036 Move X24, 0xD4A000
	037 Move X24, [X24+512]
	038 Add W8, W21, 1
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W25, W31
	041 Move X0, X31
	042 Call Environment.get_TickCount
	043 Move W25, W0
	044 Move X0, [X24]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move W22, [X19]
	050 Call 0x1C17D44
	051 Move TEMP, X22
	052 And TEMP, TEMP, -2147483648
	053 Compare TEMP, -2147483648
	054 JumpIfEqual {79}
	055 Move X0, [X24]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X19
	061 Move W1, W21
	062 Move W2, W25
	063 Move X3, X20
	064 Move X20, [X31+96]
	065 Move X19, [X31+104]
	066 Move X22, [X31+80]
	067 Move X21, [X31+88]
	068 Move X24, [X31+64]
	069 Move X23, [X31+72]
	070 Move X26, [X31+48]
	071 Move X25, [X31+56]
	072 Move X28, [X31+32]
	073 Move X27, [X31+40]
	074 Move X29, [X31+16]
	075 Move X30, [X31+24]
	076 Add X31, X31, 112
	077 Call SpinLock.ContinueTryEnterWithThreadTracking, X0, X1, X2, X3
	078 Return 
	079 Move W23, [X19]
	080 Call 0x1C17D44
	081 Move TEMP, X23
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfEqual {108}
	085 Call Thread.BeginCriticalRegion
	086 Call 0x1C17D44
	087 Or W1, W23, 1
	088 Move X0, X19
	089 Move W2, W23
	090 Move X3, X20
	091 Move X4, X31
	092 Call Interlocked.CompareExchange, X0, X1, X2, X3
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X20, [X31+96]
	095 Move X19, [X31+104]
	096 Move X22, [X31+80]
	097 Move X21, [X31+88]
	098 Move X24, [X31+64]
	099 Move X23, [X31+72]
	100 Move X26, [X31+48]
	101 Move X25, [X31+56]
	102 Move X28, [X31+32]
	103 Move X27, [X31+40]
	104 Move X29, [X31+16]
	105 Move X30, [X31+24]
	106 Add X31, X31, 112
	107 Return 
	108 Move X0, [X24]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {114}
	112 Call 0x1C17DFC
	113 Move X0, [X24]
	114 Move X8, [X0+184]
	115 And W9, W23, 0x7FFFFFFE
	116 Move W8, [X8]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Call 0x1C17D44
	119 Move W1, 2
	120 Move X0, X19
	121 Move X2, X31
	122 Call Interlocked.Add, X0, X1
	123 Move W27, W0
	124 ShiftRight W27, 1
	125 And W27, W27, 0x3FFFFFFF
	126 Compare W21, 0
	127 JumpIfNotEqual {134}
	128 Call Thread.EndCriticalRegion
	129 Move TEMP, 0x80000000
	130 Not TEMP
	131 Move W27, TEMP
	132 Compare W21, 0
	133 JumpIfEqual {268}
	134 Add W31, W21, 1
	135 Move X0, X31
	136 Call Environment.get_TickCount
	137 Subtract W8, W0, W25
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move [X31+8], W25
	140 Move X8, 0xD3B000
	141 Move X8, [X8+680]
	142 Move X0, [X8]
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {147}
	146 Call 0x1C17DFC
	147 Call PlatformHelper.get_ProcessorCount
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move W25, 100
	150 Multiply W8, W27, W25
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Or W9, W8, 1
	153 Move W10, 2
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move W23, W0
	156 Add W28, W8, 100
	157 Move W29, 1
	158 NotImplemented "Instruction CSEL not yet implemented."
	159 Move W22, 1
	160 Add W8, W22, W27
	161 Multiply W8, W8, W29
	162 Multiply W8, W8, W25
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Or W8, W31, 1
	165 NotImplemented "Instruction MADD not yet implemented."
	166 Call 0x1C17D14
	167 Subtract W24, W24, 1
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move W24, [X19]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 NotImplemented "Instruction CINC not yet implemented."
	172 Call 0x1C17D44
	173 Move TEMP, X24
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfEqual {192}
	177 Call Thread.BeginCriticalRegion
	178 Subtract W8, W24, 2
	179 And W31, W24, 0x7FFFFFFE
	180 NotImplemented "Instruction CSEL not yet implemented."
	181 Or W25, W8, 1
	182 Call 0x1C17D44
	183 Move X0, X19
	184 Move W1, W25
	185 Move W2, W24
	186 Move X3, X20
	187 Move X4, X31
	188 Call Interlocked.CompareExchange, X0, X1, X2, X3
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Call Thread.EndCriticalRegion
	191 Move W25, 100
	192 Add W22, W22, 1
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Add W28, W28, 100
	195 Add W31, W21, 1
	196 Move X0, X31
	197 Call Environment.get_TickCount
	198 Move W8, [X31+8]
	199 Subtract W8, W0, W8
	200 Move TEMP, X8
	201 And TEMP, TEMP, -2147483648
	202 Compare TEMP, -2147483648
	203 JumpIfEqual {269}
	204 Subtract W8, W21, W8
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move W27, 0xCCCD
	207 Move W28, 0x9998
	208 Move W29, 0x6666
	209 Move W22, 0x6667
	210 Move W25, W31
	211 NotImplemented "Instruction MOVK not yet implemented."
	212 NotImplemented "Instruction MOVK not yet implemented."
	213 NotImplemented "Instruction MOVK not yet implemented."
	214 NotImplemented "Instruction MOVK not yet implemented."
	215 Move W26, 10
	216 Move W23, [X19]
	217 Call 0x1C17D44
	218 Move TEMP, X23
	219 And TEMP, TEMP, 1
	220 Compare TEMP, 1
	221 JumpIfEqual {236}
	222 Call Thread.BeginCriticalRegion
	223 Subtract W8, W23, 2
	224 And W31, W23, 0x7FFFFFFE
	225 NotImplemented "Instruction CSEL not yet implemented."
	226 Or W24, W8, 1
	227 Call 0x1C17D44
	228 Move X0, X19
	229 Move W1, W24
	230 Move W2, W23
	231 Move X3, X20
	232 Move X4, X31
	233 Call Interlocked.CompareExchange, X0, X1, X2, X3
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Call Thread.EndCriticalRegion
	236 NotImplemented "Instruction MADD not yet implemented."
	237 NotImplemented "Instruction EXTR not yet implemented."
	238 NotImplemented "Instruction CMP not yet implemented."
	239 NotImplemented "Instruction EXTR not yet implemented."
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Call 0x1C4D33C
	242 Move W0, 1
	243 Call 0x1C4D4FC
	244 NotImplemented "Instruction SMADDL not yet implemented."
	245 Move X9, X8
	246 ShiftRight X9, 63
	247 And X9, X9, 0x7FFFFFFF
	248 NotImplemented "Instruction SBFM not yet implemented."
	249 Add W8, W8, W9
	250 NotImplemented "Instruction MSUB not yet implemented."
	251 Move W0, W31
	252 Call 0x1C4D4FC
	253 Move W8, W31
	254 Add W31, W21, 1
	255 Compare W8, 0
	256 JumpIfNotEqual {267}
	257 Move X0, X31
	258 Call Environment.get_TickCount
	259 Move W8, [X31+8]
	260 Subtract W8, W0, W8
	261 Move TEMP, X8
	262 And TEMP, TEMP, -2147483648
	263 Compare TEMP, -2147483648
	264 JumpIfEqual {269}
	265 Subtract W8, W21, W8
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Add W25, W25, 1
	268 Move X0, [X24]
	269 Move X8, 0xD4A000
	270 Move X8, [X8+512]
	271 Move X0, [X8]
	272 Move W8, [X0+224]
	273 Compare W8, 0
	274 JumpIfNotEqual {276}
	275 Call 0x1C17DFC
	276 Move X0, X19
	277 Move X20, [X31+96]
	278 Move X19, [X31+104]
	279 Move X22, [X31+80]
	280 Move X21, [X31+88]
	281 Move X24, [X31+64]
	282 Move X23, [X31+72]
	283 Move X26, [X31+48]
	284 Move X25, [X31+56]
	285 Move X28, [X31+32]
	286 Move X27, [X31+40]
	287 Move X29, [X31+16]
	288 Move X30, [X31+24]
	289 Add X31, X31, 112
	290 Call SpinLock.DecrementWaiters, X0
	291 Return 
	292 Move [X20], W31
	293 Move X0, 0xD4A000
	294 Move X0, [X0+520]
	295 Call 0x1C17D08
	296 Move X1, X31
	297 Call Environment.GetResourceString, X0
	298 Move X19, X0
	299 Move X0, 0xD18000
	300 Move X0, [X0+1400]
	301 Call 0x1C17D08
	302 Call 0x1C17F10
	303 Move X1, X19
	304 Move X2, X31
	305 Move X20, X0
	306 Call ArgumentException..ctor, X0, X1
	307 Move X0, 0xD4A000
	308 Move X0, [X0+528]
	309 Call 0x1C17D08
	310 Move X1, X0
	311 Move X0, X20
	312 Call 0x1C17DEC
	313 Move [X31+12], W21
	314 Move X0, 0xD10000
	315 Move X0, [X0+1880]
	316 Call 0x1C17D08
	317 Add X1, X31, 12
	318 Call 0x1C17E04
	319 Move X19, X0
	320 Move X0, 0xD4A000
	321 Move X0, [X0+536]
	322 Call 0x1C17D08
	323 Move X1, X31
	324 Call Environment.GetResourceString, X0
	325 Move X20, X0
	326 Move X0, 0xD18000
	327 Move X0, [X0+1888]
	328 Call 0x1C17D08
	329 Call 0x1C17F10
	330 Move X21, X0
	331 Move X0, 0xD49000
	332 Move X0, [X0+4056]
	333 Call 0x1C17D08
	334 Move X1, X0
	335 Move X0, X21
	336 Move X2, X19
	337 Move X3, X20
	338 Move X4, X31
	339 Call ArgumentOutOfRangeException..ctor, X0, X1, X2, X3
	340 Move X0, 0xD4A000
	341 Move X0, [X0+528]
	342 Call 0x1C17D08
	343 Move X1, X0
	344 Move X0, X21
	345 Call 0x1C17DEC

Method: System.Void DecrementWaiters()

Disassembly:
	0x033E4B20 BL 0x1C16F10
	0x033E4B24 MOV X22, X0
	0x033E4B28 MOV X1, X31
	0x033E4B2C BL 0x33BDD8C
	0x033E4B30 LDR X0, [X25]
	0x033E4B34 LDR W8, [X0 + 0xE0]
	0x033E4B38 CBNZ W8, 0x33E4B40
	0x033E4B3C BL 0x1C16DFC
	0x033E4B40 AND W1, W21, 0x1
	0x033E4B44 ADD X8, X31, 0x0
	0x033E4B48 MOV X0, X22
	0x033E4B4C BL 0x33E4D90
	0x033E4B50 LDP V0, V1, [X31]
	0x033E4B54 STP V0, V1, [X31 + 0x20]
	0x033E4B58 CBZ X20, 0x33E4BC4
	0x033E4B5C LDR X0, [X20 + 0x40]
	0x033E4B60 LDR X8, [X20 + 0x18]
	0x033E4B64 LDR X2, [X20 + 0x28]
	0x033E4B68 MOV X1, X19
	0x033E4B6C BLR X8
	0x033E4B70 ADD X0, X31, 0x20
	0x033E4B74 BL 0x33E42EC
	0x033E4B78 LDP X20, X19, [X31 + 0x70]
	0x033E4B7C LDP X22, X21, [X31 + 0x60]
	0x033E4B80 LDP X24, X23, [X31 + 0x50]
	0x033E4B84 LDP X30, X25, [X31 + 0x40]
	0x033E4B88 ADD X31, X31, 0x80
	0x033E4B8C RET
	0x033E4B90 LDR X0, [X25]
	0x033E4B94 LDR W8, [X0 + 0xE0]
	0x033E4B98 CBNZ W8, 0x33E4BA0
	0x033E4B9C BL 0x1C16DFC
	0x033E4BA0 LDR X8, [X23 + 0x30]
	0x033E4BA4 MOVZ W9, 0x1
	0x033E4BA8 STR X8, [X31 + 0x20]
	0x033E4BAC LDRB W8, [X23 + 0x38]
	0x033E4BB0 EOR W8, W8, 0x1
	0x033E4BB4 STRB W8, [X31 + 0x28]
	0x033E4BB8 STRB W9, [X23 + 0x38]
	0x033E4BBC STR X23, [X31 + 0x38]
	0x033E4BC0 CBNZ X20, 0x33E4B5C

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xFFA000
	007 Move W8, [X20+948]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD1C000
	014 Move X0, [X0+1136]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+948], W8
	018 Move [X31+8], W31
	019 Move W20, [X19]
	020 Call 0x1C17D44
	021 And W31, W20, 0x7FFFFFFE
	022 Move X21, 0xD1C000
	023 Move X21, [X21+1136]
	024 Call 0x1C17D44
	025 Subtract W1, W20, 2
	026 Move X0, X19
	027 Move W2, W20
	028 Move X3, X31
	029 Call Interlocked.CompareExchange, X0, X1, X2
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, [X21]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Add X0, X31, 8
	037 Call SpinWait.SpinOnce, X0
	038 Move W20, [X19]
	039 Call 0x1C17D44
	040 And W31, W20, 0x7FFFFFFE
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+16]
	044 Move X21, [X31+24]
	045 Add X31, X31, 48
	046 Return 

Method: System.Void ContinueTryEnterWithThreadTracking(System.Int32 millisecondsTimeout, System.UInt32 startTime, ref System.Boolean lockTaken)

Disassembly:
	0x033E49B8 RET
	0x033E49BC STR X1, [X0 + 0x10]
	0x033E49C0 RET
	0x033E49C4 LDR X0, [X0 + 0x18]
	0x033E49C8 RET
	0x033E49CC STR X1, [X0 + 0x18]
	0x033E49D0 RET
	0x033E49D4 RET
	0x033E49D8 STR X30, [X31 - 0x40]!
	0x033E49DC STP X24, X23, [X31 + 0x10]
	0x033E49E0 STP X22, X21, [X31 + 0x20]
	0x033E49E4 STP X20, X19, [X31 + 0x30]
	0x033E49E8 ADRP X23, 0xFF9000
	0x033E49EC ADRP X24, 0xD37000
	0x033E49F0 LDRB W8, [X23 + 0x3C0]
	0x033E49F4 LDR X24, [X24 + 0x580]
	0x033E49F8 MOV W21, W3
	0x033E49FC MOV X19, X2
	0x033E4A00 MOV X20, X1
	0x033E4A04 MOV X22, X0
	0x033E4A08 TBNZ X8, 0x0, 0x33E4A20
	0x033E4A0C ADRP X0, 0xD37000
	0x033E4A10 LDR X0, [X0 + 0x580]
	0x033E4A14 BL 0x1C16CF4
	0x033E4A18 MOVZ W8, 0x1
	0x033E4A1C STRB W8, [X23 + 0x3C0]
	0x033E4A20 LDR X0, [X24]
	0x033E4A24 LDR W8, [X0 + 0xE0]
	0x033E4A28 CBNZ W8, 0x33E4A30
	0x033E4A2C BL 0x1C16DFC
	0x033E4A30 AND W3, W21, 0x1
	0x033E4A34 MOV X0, X22
	0x033E4A38 MOV X1, X20
	0x033E4A3C MOV X2, X19
	0x033E4A40 LDP X20, X19, [X31 + 0x30]
	0x033E4A44 LDP X22, X21, [X31 + 0x20]
	0x033E4A48 LDP X24, X23, [X31 + 0x10]
	0x033E4A4C LDR X30, [X31], #0x40
	0x033E4A50 B 0x33E4A54
	0x033E4A54 SUB X31, X31, 0x80
	0x033E4A58 STP X30, X25, [X31 + 0x40]
	0x033E4A5C STP X24, X23, [X31 + 0x50]
	0x033E4A60 STP X22, X21, [X31 + 0x60]
	0x033E4A64 STP X20, X19, [X31 + 0x70]
	0x033E4A68 ADRP X23, 0xFF9000
	0x033E4A6C LDRB W8, [X23 + 0x3C2]
	0x033E4A70 MOV W21, W3
	0x033E4A74 MOV X19, X2
	0x033E4A78 MOV X20, X1
	0x033E4A7C MOV X22, X0
	0x033E4A80 TBNZ X8, 0x0, 0x33E4A98
	0x033E4A84 ADRP X0, 0xD37000
	0x033E4A88 LDR X0, [X0 + 0x580]
	0x033E4A8C BL 0x1C16CF4
	0x033E4A90 MOVZ W8, 0x1
	0x033E4A94 STRB W8, [X23 + 0x3C2]
	0x033E4A98 CBZ X22, 0x33E4BC8
	0x033E4A9C LDR W8, [X22 + 0x30]
	0x033E4AA0 TBNZ X8, 0x2, 0x33E4AAC
	0x033E4AA4 AND W8, W8, 0xFFFFFFFE
	0x033E4AA8 STR W8, [X22 + 0x30]
	0x033E4AAC BL 0x33E3C68
	0x033E4AB0 MOV X23, X0
	0x033E4AB4 MOVI V0.2D, 0x0
	0x033E4AB8 MOV X0, X31
	0x033E4ABC STP V0, V0, [X31 + 0x20]
	0x033E4AC0 BL 0x32C5C58
	0x033E4AC4 CBZ X23, 0x33E4BCC
	0x033E4AC8 ADRP X25, 0xD37000
	0x033E4ACC LDR X24, [X23 + 0x30]
	0x033E4AD0 LDR X25, [X25 + 0x580]
	0x033E4AD4 CBZ X24, 0x33E4AE8
	0x033E4AD8 AND W1, W21, 0x1
	0x033E4ADC MOV X0, X24
	0x033E4AE0 BL 0x33E4CE4
	0x033E4AE4 TBZ X0, 0x0, 0x33E4B14
	0x033E4AE8 AND W1, W21, 0x1
	0x033E4AEC MOV X0, X22
	0x033E4AF0 BL 0x33E4CE4
	0x033E4AF4 TBZ X0, 0x0, 0x33E4B14
	0x033E4AF8 CBZ X24, 0x33E4B04
	0x033E4AFC LDR X8, [X24 + 0x38]
	0x033E4B00 B 0x33E4B08
	0x033E4B04 MOV X8, X31
	0x033E4B08 LDR X9, [X22 + 0x38]
	0x033E4B0C CMP X8, X9
	0x033E4B10 B.EQ 0x33E4B90
	0x033E4B14 LDRB W8, [X22 + 0x30]
	0x033E4B18 TBZ X8, 0x2, 0x33E4B30
	0x033E4B1C LDR X0, [X25]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0xFFA000
	011 Move W8, [X23+949]
	012 Move X19, X3
	013 Move W20, W2
	014 Move W21, W1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xD1C000
	021 Move X0, [X0+1136]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+949], W8
	025 Call Thread.get_CurrentThread
	026 Compare X0, 0
	027 JumpIfEqual {91}
	028 Call Thread.get_ManagedThreadId, X0
	029 Move W24, [X22]
	030 Move W23, W0
	031 Call 0x1C17D44
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X24, 0xD1C000
	034 Move X24, [X24+1136]
	035 Move [X31+8], W31
	036 Move X0, [X24]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Add X0, X31, 8
	042 Call SpinWait.SpinOnce, X0
	043 Move W25, [X22]
	044 Call 0x1C17D44
	045 Compare W25, 0
	046 JumpIfNotEqual {58}
	047 Call Thread.BeginCriticalRegion
	048 Call 0x1C17D44
	049 Move X0, X22
	050 Move W1, W23
	051 Move W2, W31
	052 Move X3, X19
	053 Move X4, X31
	054 Call Interlocked.CompareExchange, X0, X1, X2, X3
	055 Compare W0, 0
	056 JumpIfEqual {81}
	057 Call Thread.EndCriticalRegion
	058 Add W31, W21, 1
	059 Compare W21, 0
	060 JumpIfEqual {81}
	061 Move X0, [X24]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Add X0, X31, 8
	067 Call SpinWait.get_NextSpinWillYield, X0
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {36}
	072 Move X0, X31
	073 Call Environment.get_TickCount
	074 Subtract W8, W0, W20
	075 Move TEMP, X8
	076 And TEMP, TEMP, -2147483648
	077 Compare TEMP, -2147483648
	078 JumpIfEqual {81}
	079 Subtract W8, W21, W8
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X20, [X31+64]
	082 Move X19, [X31+72]
	083 Move X22, [X31+48]
	084 Move X21, [X31+56]
	085 Move X24, [X31+32]
	086 Move X23, [X31+40]
	087 Move X30, [X31+16]
	088 Move X25, [X31+24]
	089 Add X31, X31, 80
	090 Return 
	091 Call 0x1C17F20
	092 Move X0, 0xD4A000
	093 Move X0, [X0+544]
	094 Call 0x1C17D08
	095 Move X1, X31
	096 Call Environment.GetResourceString, X0
	097 Move X19, X0
	098 Move X0, 0xD4A000
	099 Move X0, [X0+552]
	100 Call 0x1C17D08
	101 Call 0x1C17F10
	102 Move X1, X19
	103 Move X20, X0
	104 Call LockRecursionException..ctor, X0, X1
	105 Move X0, 0xD4A000
	106 Move X0, [X0+560]
	107 Call 0x1C17D08
	108 Move X1, X0
	109 Move X0, X20
	110 Call 0x1C17DEC

Method: System.Void Exit(System.Boolean useMemoryBarrier)

Disassembly:
	0x033E4CF0 LDR X8, [X19 + 0x10]
	0x033E4CF4 CBNZ X8, 0x33E4D20
	0x033E4CF8 LDR X0, [X19 + 0x20]
	0x033E4CFC CBZ X0, 0x33E4D0C
	0x033E4D00 MOV X1, X31
	0x033E4D04 BL 0x3292828
	0x033E4D08 TBNZ X0, 0x0, 0x33E4D20
	0x033E4D0C LDR X0, [X19 + 0x28]
	0x033E4D10 CBZ X0, 0x33E4D28
	0x033E4D14 MOV X1, X31
	0x033E4D18 BL 0x3291490
	0x033E4D1C TBZ X0, 0x0, 0x33E4D28
	0x033E4D20 MOV W0, W31
	0x033E4D24 B 0x33E4D2C
	0x033E4D28 MOVZ W0, 0x1
	0x033E4D2C LDP X30, X19, [X31], #0x10
	0x033E4D30 RET
	0x033E4D34 LDR X8, [X0]
	0x033E4D38 CBZ X8, 0x33E4D40
	0x033E4D3C LDR X8, [X8 + 0x38]
	0x033E4D40 CBZ X1, 0x33E4D4C
	0x033E4D44 LDR X9, [X1 + 0x38]
	0x033E4D48 B 0x33E4D50
	0x033E4D4C MOV X9, X31
	0x033E4D50 CMP X8, X9
	0x033E4D54 CSET W0, EQ
	0x033E4D58 RET
	0x033E4D5C STR X30, [X31 - 0x10]!
	0x033E4D60 CBZ X0, 0x33E4D8C
	0x033E4D64 LDR X8, [X0 + 0x30]
	0x033E4D68 MOVZ W9, 0x1
	0x033E4D6C STR X8, [X2]
	0x033E4D70 LDRB W8, [X0 + 0x38]
	0x033E4D74 EOR W8, W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xFFA000
	006 Move W8, [X21+950]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD4A000
	014 Move X0, [X0+512]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+950], W8
	018 Move W21, [X19]
	019 Call 0x1C17D44
	020 Move TEMP, X21
	021 And TEMP, TEMP, -2147483648
	022 Compare TEMP, -2147483648
	023 JumpIfNotEqual {33}
	024 Move TEMP, X20
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move W20, [X19]
	029 Call 0x1C17D44
	030 Call 0x1C17D44
	031 And W8, W20, 0xFFFFFFFE
	032 Move [X19], W8
	033 Move X8, 0xD4A000
	034 Move X8, [X8+512]
	035 Move X0, [X8]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 And W1, W20, 1
	041 Move X0, X19
	042 Call SpinLock.ExitSlowPath, X0, X1
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Call Thread.EndCriticalRegion
	048 Return 

Method: System.Void ExitSlowPath(System.Boolean useMemoryBarrier)

Disassembly:
	0x033E4D78 STRB W8, [X2 + 0x8]
	0x033E4D7C STRB W9, [X0 + 0x38]
	0x033E4D80 STR X0, [X2 + 0x18]
	0x033E4D84 LDR X30, [X31], #0x10
	0x033E4D88 RET
	0x033E4D8C BL 0x1C16F20
	0x033E4D90 SUB X31, X31, 0x50
	0x033E4D94 STR X30, [X31 + 0x20]
	0x033E4D98 STP X22, X21, [X31 + 0x30]
	0x033E4D9C STP X20, X19, [X31 + 0x40]
	0x033E4DA0 ADRP X21, 0xFF9000
	0x033E4DA4 LDRB W9, [X21 + 0x3C4]
	0x033E4DA8 MOV W22, W1
	0x033E4DAC MOV X20, X0
	0x033E4DB0 MOV X19, X8
	0x033E4DB4 TBNZ X9, 0x0, 0x33E4DCC
	0x033E4DB8 ADRP X0, 0xD37000
	0x033E4DBC LDR X0, [X0 + 0x580]
	0x033E4DC0 BL 0x1C16CF4
	0x033E4DC4 MOVZ W8, 0x1
	0x033E4DC8 STRB W8, [X21 + 0x3C4]
	0x033E4DCC STP X31, X31, [X31]
	0x033E4DD0 STR X31, [X31 + 0x10]
	0x033E4DD4 BL 0x33E3C68
	0x033E4DD8 CBZ X0, 0x33E4E7C
	0x033E4DDC LDR X21, [X0 + 0x30]
	0x033E4DE0 STR X0, [X31 + 0x18]
	0x033E4DE4 STR X21, [X31]
	0x033E4DE8 LDRB W8, [X0 + 0x38]
	0x033E4DEC EOR W8, W8, 0x1
	0x033E4DF0 STRB W8, [X31 + 0x8]
	0x033E4DF4 TBZ X22, 0x0, 0x33E4E14
	0x033E4DF8 CBZ X21, 0x33E4E08
	0x033E4DFC LDR X8, [X21 + 0x10]
	0x033E4E00 CBNZ X20, 0x33E4E10
	0x033E4E04 B 0x33E4E7C
	0x033E4E08 MOV X8, X31
	0x033E4E0C CBZ X20, 0x33E4E7C
	0x033E4E10 STR X8, [X20 + 0x10]
	0x033E4E14 CBZ X21, 0x33E4E74
	0x033E4E18 LDR X8, [X21 + 0x18]
	0x033E4E1C CBZ X20, 0x33E4E7C
	0x033E4E20 ADRP X22, 0xD37000
	0x033E4E24 LDR X22, [X22 + 0x580]
	0x033E4E28 STR X8, [X20 + 0x18]
	0x033E4E2C STR X20, [X0 + 0x30]
	0x033E4E30 STRB W31, [X0 + 0x38]
	0x033E4E34 MOV X0, X31
	0x033E4E38 BL 0x32C5C58
	0x033E4E3C LDR X0, [X22]
	0x033E4E40 LDR W8, [X0 + 0xE0]
	0x033E4E44 CBNZ W8, 0x33E4E4C
	0x033E4E48 BL 0x1C16DFC
	0x033E4E4C MOV X0, X21
	0x033E4E50 MOV X1, X20
	0x033E4E54 BL 0x33E4390
	0x033E4E58 LDP V1, V0, [X31]
	0x033E4E5C LDP X22, X21, [X31 + 0x30]
	0x033E4E60 LDR X30, [X31 + 0x20]
	0x033E4E64 STP V1, V0, [X19]
	0x033E4E68 LDP X20, X19, [X31 + 0x40]
	0x033E4E6C ADD X31, X31, 0x50
	0x033E4E70 RET
	0x033E4E74 MOV X8, X31
	0x033E4E78 CBNZ X20, 0x33E4E20
	0x033E4E7C BL 0x1C16F20
	0x033E4E80 CMP W1, 0x1
	0x033E4E84 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xFFA000
	006 Move W8, [X21+951]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD4A000
	014 Move X0, [X0+512]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+951], W8
	018 Move W21, [X19]
	019 Call 0x1C17D44
	020 Move TEMP, X21
	021 And TEMP, TEMP, -2147483648
	022 Compare TEMP, -2147483648
	023 JumpIfEqual {51}
	024 Move X8, 0xD4A000
	025 Move X8, [X8+512]
	026 Move X0, [X8]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X19
	032 Call SpinLock.get_IsHeldByCurrentThread, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {75}
	037 Call 0x1C17D44
	038 Move TEMP, X20
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {64}
	042 Move X0, X19
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move W1, W31
	046 Move X2, X31
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Call Interlocked.Exchange, X0, X1
	050 Return 
	051 Move TEMP, X20
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {65}
	055 Call 0x1C17D44
	056 Move X0, X19
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X1, X31
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Call Interlocked.Decrement, X0
	063 Return 
	064 Move [X19], W31
	065 Move W20, [X19]
	066 Call 0x1C17D44
	067 Call 0x1C17D44
	068 And W8, W20, 0xFFFFFFFE
	069 Move [X19], W8
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X30, [X31+32]
	073 Move X21, [X31+40]
	074 Return 
	075 Move X0, 0xD4A000
	076 Move X0, [X0+576]
	077 Call 0x1C17D08
	078 Move X1, X31
	079 Call Environment.GetResourceString, X0
	080 Move X19, X0
	081 Move X0, 0xD4A000
	082 Move X0, [X0+584]
	083 Call 0x1C17D08
	084 Call 0x1C17F10
	085 Move X1, X19
	086 Move X20, X0
	087 Call SynchronizationLockException..ctor, X0, X1
	088 Move X0, 0xD4A000
	089 Move X0, [X0+592]
	090 Call 0x1C17D08
	091 Move X1, X0
	092 Move X0, X20
	093 Call 0x1C17DEC

Method: System.Boolean get_IsHeldByCurrentThread()

Disassembly:
	0x033E4E88 B.NE 0x33E4EF4
	0x033E4E8C MOV X0, X19
	0x033E4E90 BL 0x3EB1AD0
	0x033E4E94 MOV X19, X0
	0x033E4E98 ADRP X0, 0xD15000
	0x033E4E9C LDR X0, [X0 + 0xCC0]
	0x033E4EA0 BL 0x1C16D08
	0x033E4EA4 LDR X8, [X19]
	0x033E4EA8 LDR X1, [X8]
	0x033E4EAC BL 0x1C17270
	0x033E4EB0 TBZ X0, 0x0, 0x33E4ECC
	0x033E4EB4 LDR X19, [X19]
	0x033E4EB8 BL 0x3EB1AE0
	0x033E4EBC ADD X0, X31, 0x0
	0x033E4EC0 BL 0x33E4264
	0x033E4EC4 MOV X0, X19
	0x033E4EC8 BL 0x1C16F18
	0x033E4ECC MOVZ W0, 0x8
	0x033E4ED0 BL 0x3EB1AF0
	0x033E4ED4 LDR X8, [X19]
	0x033E4ED8 STR X8, [X0]
	0x033E4EDC ADRP X1, 0xAD0000
	0x033E4EE0 ADD X1, X1, 0xE58
	0x033E4EE4 MOV X2, X31
	0x033E4EE8 BL 0x3EB1B00
	0x033E4EEC MOV X19, X0
	0x033E4EF0 BL 0x3EB1AE0
	0x033E4EF4 MOV X0, X19
	0x033E4EF8 BL 0x1D2C690
	0x033E4EFC BL 0x1990590
	0x033E4F00 STP X30, X21, [X31 - 0x20]!
	0x033E4F04 STP X20, X19, [X31 + 0x10]
	0x033E4F08 ADRP X21, 0xFF9000
	0x033E4F0C ADRP X20, 0xD37000
	0x033E4F10 LDRB W8, [X21 + 0x3C3]
	0x033E4F14 LDR X20, [X20 + 0x580]
	0x033E4F18 MOV X19, X0
	0x033E4F1C TBNZ X8, 0x0, 0x33E4F34
	0x033E4F20 ADRP X0, 0xD37000
	0x033E4F24 LDR X0, [X0 + 0x580]
	0x033E4F28 BL 0x1C16CF4
	0x033E4F2C MOVZ W8, 0x1
	0x033E4F30 STRB W8, [X21 + 0x3C3]
	0x033E4F34 BL 0x33E3C68
	0x033E4F38 LDR X8, [X20]
	0x033E4F3C MOV X20, X0
	0x033E4F40 LDR W9, [X8 + 0xE0]
	0x033E4F44 CBNZ W9, 0x33E4F50
	0x033E4F48 MOV X0, X8
	0x033E4F4C BL 0x1C16DFC
	0x033E4F50 CBZ X20, 0x33E4F80
	0x033E4F54 LDR X8, [X20 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xFFA000
	006 Move X21, 0xD4A000
	007 Move W8, [X20+952]
	008 Move X21, [X21+512]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD4A000
	015 Move X0, [X0+512]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+952], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move W20, [X19]
	025 Call 0x1C17D44
	026 Move TEMP, X20
	027 And TEMP, TEMP, -2147483648
	028 Compare TEMP, -2147483648
	029 JumpIfEqual {44}
	030 Move W19, [X19]
	031 Call 0x1C17D44
	032 Call Thread.get_CurrentThread
	033 Compare X0, 0
	034 JumpIfEqual {64}
	035 Call Thread.get_ManagedThreadId, X0
	036 And W8, W19, 0x7FFFFFFF
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CSET not yet implemented."
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return X0
	044 Move X0, 0xD4A000
	045 Move X0, [X0+600]
	046 Call 0x1C17D08
	047 Move X1, X31
	048 Call Environment.GetResourceString, X0
	049 Move X19, X0
	050 Move X0, 0xD10000
	051 Move X0, [X0+1456]
	052 Call 0x1C17D08
	053 Call 0x1C17F10
	054 Move X1, X19
	055 Move X2, X31
	056 Move X20, X0
	057 Call InvalidOperationException..ctor, X0, X1
	058 Move X0, 0xD4A000
	059 Move X0, [X0+608]
	060 Call 0x1C17D08
	061 Move X1, X0
	062 Move X0, X20
	063 Call 0x1C17DEC
	064 Call 0x1C17F20

Method: System.Boolean get_IsThreadOwnerTrackingEnabled()

Disassembly:
	0x033E499C MOV X0, X20
	0x033E49A0 LDP X20, X19, [X31 + 0x10]
	0x033E49A4 LDR X30, [X31], #0x20
	0x033E49A8 RET
	0x033E49AC STR X1, [X0 + 0x28]
	0x033E49B0 RET
	0x033E49B4 LDR X0, [X0 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W19, [X0]
	004 Call 0x1C17D44
	005 NotImplemented "Instruction ORN not yet implemented."
	006 Move W0, W8
	007 ShiftRight W0, 31
	008 And W0, W0, 0x7FFFFFFF
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0

Method: System.Void .cctor()

Disassembly:
	0x033E4F58 MOVZ W9, 0x1
	0x033E4F5C STR X8, [X19]
	0x033E4F60 LDRB W8, [X20 + 0x38]
	0x033E4F64 EOR W8, W8, 0x1
	0x033E4F68 STRB W8, [X19 + 0x8]
	0x033E4F6C STRB W9, [X20 + 0x38]
	0x033E4F70 STR X20, [X19 + 0x18]
	0x033E4F74 LDP X20, X19, [X31 + 0x10]
	0x033E4F78 LDP X30, X21, [X31], #0x20
	0x033E4F7C RET
	0x033E4F80 BL 0x1C16F20
	0x033E4F84 LDRB W8, [X0 + 0x38]
	0x033E4F88 CMP W8, 0x0
	0x033E4F8C CSET W0, EQ
	0x033E4F90 RET
	0x033E4F94 ORN W8, W31, W1, 0x0
	0x033E4F98 AND W8, W8, 0x1
	0x033E4F9C STRB W8, [X0 + 0x38]
	0x033E4FA0 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xFFA000
	005 Move X20, 0xD4A000
	006 Move W8, [X19+953]
	007 Move X20, [X20+512]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD4A000
	013 Move X0, [X0+512]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+953], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Or W9, W31, 0x7FFFFFFE
	021 Move X8, [X8+184]
	022 Move [X8], W9
	023 Move X30, [X31+32]
	024 Return 

