Type: System.Threading.OSSpecificSynchronizationContext

Method: System.Void .ctor(System.Object osContext)

Disassembly:
	0x033E6FE4 B 0x32C2928
	0x033E6FE8 B 0x33E6FEC
	0x033E6FEC STP X30, X19, [X31 - 0x10]!
	0x033E6FF0 LDR X8, [X0 + 0x10]
	0x033E6FF4 CBNZ X8, 0x33E7008
	0x033E6FF8 MOV X19, X0
	0x033E6FFC BL 0x1C4C3AC
	0x033E7000 LDR X8, [X19 + 0x10]
	0x033E7004 CBZ X8, 0x33E7014
	0x033E7008 LDRB W0, [X8 + 0xA8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+24], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Threading.OSSpecificSynchronizationContext Get()

Disassembly:
	0x033E6CCC ADRP X0, 0xD47000
	0x033E6CD0 LDR X0, [X0 + 0x420]
	0x033E6CD4 BL 0x1C16D08
	0x033E6CD8 MOV X1, X0
	0x033E6CDC MOV X0, X20
	0x033E6CE0 BL 0x1C16DEC
	0x033E6CE4 B 0x1C4C4FC
	0x033E6CE8 B 0x1C4C33C
	0x033E6CEC STR X30, [X31 - 0x20]!
	0x033E6CF0 STP X20, X19, [X31 + 0x10]
	0x033E6CF4 ADRP X20, 0xFF7000
	0x033E6CF8 LDRB W8, [X20 + 0x3E5]
	0x033E6CFC MOV W19, W0
	0x033E6D00 TBNZ X8, 0x0, 0x33E6D18
	0x033E6D04 ADRP X0, 0xD0D000
	0x033E6D08 LDR X0, [X0 + 0x5A8]
	0x033E6D0C BL 0x1C16CF4
	0x033E6D10 MOVZ W8, 0x1
	0x033E6D14 STRB W8, [X20 + 0x3E5]
	0x033E6D18 CBZ W19, 0x33E6D80
	0x033E6D1C CMP W19, 0x20000
	0x033E6D20 B.LT 0x33E6D88
	0x033E6D24 MOV X0, X31
	0x033E6D28 BL 0x33C2374
	0x033E6D2C SDIV W8, W19, W0
	0x033E6D30 MSUB W8, W8, W0, W19
	0x033E6D34 CBZ W8, 0x33E6D44
	0x033E6D38 SUB W8, W0, 0x1
	0x033E6D3C SDIV W8, W19, W8
	0x033E6D40 MUL W19, W8, W0
	0x033E6D44 BL 0x1C4C354
	0x033E6D48 ADRP X8, 0xD0D000
	0x033E6D4C LDR X8, [X8 + 0x5A8]
	0x033E6D50 MOV W20, W0
	0x033E6D54 LDR X8, [X8]
	0x033E6D58 LDR W9, [X8 + 0xE0]
	0x033E6D5C CBNZ W9, 0x33E6D68
	0x033E6D60 MOV X0, X8
	0x033E6D64 BL 0x1C16DFC
	0x033E6D68 MOV W0, W19
	0x033E6D6C MOV W1, W20
	0x033E6D70 LDP X20, X19, [X31 + 0x10]
	0x033E6D74 MOV X2, X31
	0x033E6D78 LDR X30, [X31], #0x20
	0x033E6D7C B 0x337EE94
	0x033E6D80 MOV W0, W31
	0x033E6D84 B 0x33E6D8C
	0x033E6D88 MOVZ W0, 0x20000
	0x033E6D8C LDP X20, X19, [X31 + 0x10]
	0x033E6D90 LDR X30, [X31], #0x20
	0x033E6D94 RET
	0x033E6D98 STR X30, [X31 - 0x20]!
	0x033E6D9C STP X20, X19, [X31 + 0x10]
	0x033E6DA0 LDR X8, [X0 + 0x10]
	0x033E6DA4 MOV W19, W2
	0x033E6DA8 STR X1, [X0 + 0x28]
	0x033E6DAC CBNZ X8, 0x33E6DC0
	0x033E6DB0 MOV X20, X0
	0x033E6DB4 BL 0x1C4C3AC
	0x033E6DB8 LDR X8, [X20 + 0x10]
	0x033E6DBC CBZ X8, 0x33E6DD0
	0x033E6DC0 STR W19, [X8 + 0xAC]
	0x033E6DC4 LDP X20, X19, [X31 + 0x10]
	0x033E6DC8 LDR X30, [X31], #0x20
	0x033E6DCC RET
	0x033E6DD0 BL 0x1C16F20
	0x033E6DD4 STP X30, X19, [X31 - 0x10]!
	0x033E6DD8 ADRP X19, 0xFF7000
	0x033E6DDC LDRB W8, [X19 + 0x3E0]
	0x033E6DE0 TBNZ X8, 0x0, 0x33E6DF8
	0x033E6DE4 ADRP X0, 0xD0F000
	0x033E6DE8 LDR X0, [X0 + 0xC48]
	0x033E6DEC BL 0x1C16CF4
	0x033E6DF0 MOVZ W8, 0x1
	0x033E6DF4 STRB W8, [X19 + 0x3E0]
	0x033E6DF8 LDP X30, X19, [X31], #0x10
	0x033E6DFC B 0x33E6E00
	0x033E6E00 STR X30, [X31 - 0x20]!
	0x033E6E04 STP X20, X19, [X31 + 0x10]
	0x033E6E08 ADRP X20, 0xFF7000
	0x033E6E0C ADRP X19, 0xD39000
	0x033E6E10 LDRB W8, [X20 + 0x3E1]
	0x033E6E14 LDR X19, [X19 + 0x1D8]
	0x033E6E18 TBNZ X8, 0x0, 0x33E6E3C
	0x033E6E1C ADRP X0, 0xD0F000
	0x033E6E20 LDR X0, [X0 + 0xC48]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0xFF8000
	008 Move X20, 0xD48000
	009 Move W8, [X19+977]
	010 Move X20, [X20+848]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0xD48000
	016 Move X0, [X0+856]
	017 Call 0x1C17CF4
	018 Move X0, 0xD48000
	019 Move X0, [X0+864]
	020 Call 0x1C17CF4
	021 Move X0, 0xD48000
	022 Move X0, [X0+848]
	023 Call 0x1C17CF4
	024 Move X0, 0xD48000
	025 Move X0, [X0+872]
	026 Call 0x1C17CF4
	027 Move X0, 0xD48000
	028 Move X0, [X0+880]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X19+977], W8
	032 Move X0, [X20]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Call 0x1C4D018
	038 Compare X0, 0
	039 JumpIfEqual {99}
	040 Move X8, [X20]
	041 Move X23, 0xD48000
	042 Move X19, X0
	043 Move W9, [X8+224]
	044 Move X23, [X23+880]
	045 Compare W9, 0
	046 JumpIfNotEqual {50}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move X8, [X20]
	050 Move X0, [X23]
	051 Move X8, [X8+184]
	052 Move W9, [X0+224]
	053 Move X20, [X8]
	054 Compare W9, 0
	055 JumpIfNotEqual {58}
	056 Call 0x1C17DFC
	057 Move X0, [X23]
	058 Move X8, [X0+184]
	059 Move X21, [X8+8]
	060 Compare X21, 0
	061 JumpIfNotEqual {83}
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {67}
	065 Call 0x1C17DFC
	066 Move X0, [X23]
	067 Move X9, 0xD48000
	068 Move X8, [X0+184]
	069 Move X9, [X9+864]
	070 Move X22, [X8]
	071 Move X0, [X9]
	072 Call 0x1C17F10
	073 Move X8, 0xD48000
	074 Move X8, [X8+872]
	075 Move X1, X22
	076 Move X3, X31
	077 Move X21, X0
	078 Move X2, [X8]
	079 Call 0x29AB1B8, X0, X1, X2
	080 Move X8, [X23]
	081 Move X8, [X8+184]
	082 Move [X8+8], X21
	083 Compare X20, 0
	084 JumpIfEqual {106}
	085 Move X8, 0xD48000
	086 Move X8, [X8+856]
	087 Move X0, X20
	088 Move X1, X19
	089 Move X2, X21
	090 Move X3, [X8]
	091 Move X20, [X31+32]
	092 Move X19, [X31+40]
	093 Move X22, [X31+16]
	094 Move X21, [X31+24]
	095 Move X30, [X31+48]
	096 Move X23, [X31+56]
	097 Call 0x2998184, X0, X1, X2
	098 Return X0
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X22, [X31+16]
	102 Move X21, [X31+24]
	103 Move X30, [X31+48]
	104 Move X23, [X31+56]
	105 Return X0
	106 Call 0x1C17F20

Method: System.Threading.SynchronizationContext CreateCopy()

Disassembly:
	0x033E7010 RET
	0x033E7014 BL 0x1C16F20
	0x033E7018 STR X30, [X31 - 0x20]!
	0x033E701C STP X20, X19, [X31 + 0x10]
	0x033E7020 MOV W19, W1
	0x033E7024 MOV X20, X0
	0x033E7028 BL 0x33E7060
	0x033E702C LDR X0, [X20 + 0x10]
	0x033E7030 CBNZ X0, 0x33E7040
	0x033E7034 MOV X0, X20
	0x033E7038 BL 0x1C4C3AC
	0x033E703C LDR X0, [X20 + 0x10]
	0x033E7040 MOVZ W1, 0x4
	0x033E7044 TBZ X19, 0x0, 0x33E7054
	0x033E7048 LDP X20, X19, [X31 + 0x10]
	0x033E704C LDR X30, [X31], #0x20
	0x033E7050 B 0x1C4C098
	0x033E7054 LDP X20, X19, [X31 + 0x10]
	0x033E7058 LDR X30, [X31], #0x20
	0x033E705C B 0x1C4C0F0
	0x033E7060 STP X30, X19, [X31 - 0x10]!
	0x033E7064 MOV X19, X0
	0x033E7068 LDR X0, [X0 + 0x10]
	0x033E706C CBNZ X0, 0x33E707C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xFF7000
	006 Move X20, 0xD47000
	007 Move W8, [X21+978]
	008 Move X20, [X20+848]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD47000
	015 Move X0, [X0+848]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+978], W8
	019 Move X0, [X20]
	020 Move X21, [X19+24]
	021 Call 0x1C17F10
	022 Move X1, X31
	023 Move X19, X0
	024 Call Object..ctor, X0
	025 Move [X19+24], X21
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Void Send(System.Threading.SendOrPostCallback d, System.Object state)

Disassembly:
	0x033E7070 MOV X0, X19
	0x033E7074 BL 0x1C4C3AC
	0x033E7078 LDR X0, [X19 + 0x10]
	0x033E707C BL 0x1C4C364
	0x033E7080 TBNZ X0, 0x4, 0x33E708C
	0x033E7084 LDP X30, X19, [X31], #0x10
	0x033E7088 RET
	0x033E708C ADRP X0, 0xD46000
	0x033E7090 LDR X0, [X0 + 0x428]
	0x033E7094 BL 0x1C16D08
	0x033E7098 BL 0x1C16F10
	0x033E709C MOV X19, X0
	0x033E70A0 ADRP X0, 0xD46000
	0x033E70A4 LDR X0, [X0 + 0x430]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xD0D000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xD47000
	011 Move X0, [X0+904]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Void Post(System.Threading.SendOrPostCallback d, System.Object state)

Disassembly:
	0x033E70A8 BL 0x1C16D08
	0x033E70AC MOV X1, X0
	0x033E70B0 MOV X0, X19
	0x033E70B4 BL 0x33DD184
	0x033E70B8 ADRP X0, 0xD46000
	0x033E70BC LDR X0, [X0 + 0x438]
	0x033E70C0 BL 0x1C16D08
	0x033E70C4 MOV X1, X0
	0x033E70C8 MOV X0, X19
	0x033E70CC BL 0x1C16DEC
	0x033E70D0 B 0x1C4C098
	0x033E70D4 B 0x1C4C0F0
	0x033E70D8 B 0x1C4C418
	0x033E70DC STR X30, [X31 - 0x20]!
	0x033E70E0 STP X20, X19, [X31 + 0x10]
	0x033E70E4 MOV X19, X0
	0x033E70E8 CBZ X1, 0x33E7104
	0x033E70EC MOV X0, X31
	0x033E70F0 MOV X20, X1
	0x033E70F4 BL 0x32C1424
	0x033E70F8 LDR W2, [X20 + 0x10]
	0x033E70FC ADD X1, X20, W0, SXTW
	0x033E7100 B 0x33E7108
	0x033E7104 MOV W2, W31
	0x033E7108 MOV X0, X19
	0x033E710C LDP X20, X19, [X31 + 0x10]
	0x033E7110 LDR X30, [X31], #0x20
	0x033E7114 B 0x1C4C418
	0x033E7118 STR X30, [X31 - 0x20]!
	0x033E711C STP X20, X19, [X31 + 0x10]
	0x033E7120 MOV X20, X0
	0x033E7124 LDR X0, [X0 + 0x10]
	0x033E7128 MOV X19, X1
	0x033E712C CBNZ X0, 0x33E713C
	0x033E7130 MOV X0, X20
	0x033E7134 BL 0x1C4C3AC
	0x033E7138 LDR X0, [X20 + 0x10]
	0x033E713C MOV X1, X19
	0x033E7140 LDP X20, X19, [X31 + 0x10]
	0x033E7144 LDR X30, [X31], #0x20
	0x033E7148 B 0x33E70DC
	0x033E714C B 0x1C4C3A8
	0x033E7150 STP X30, X19, [X31 - 0x10]!
	0x033E7154 MOV X19, X0
	0x033E7158 LDR X0, [X0 + 0x10]
	0x033E715C CBNZ X0, 0x33E716C
	0x033E7160 MOV X0, X19
	0x033E7164 BL 0x1C4C3AC
	0x033E7168 LDR X0, [X19 + 0x10]
	0x033E716C MOV X1, X31
	0x033E7170 LDP X30, X19, [X31], #0x10
	0x033E7174 B 0x1C4C3A8
	0x033E7178 B 0x1C16D14
	0x033E717C B 0x1C4C364
	0x033E7180 B 0x1C4C358
	0x033E7184 B 0x1C4C354
	0x033E7188 B 0x33E3CC4
	0x033E718C STR X30, [X31 - 0x40]!
	0x033E7190 STP X24, X23, [X31 + 0x10]
	0x033E7194 STP X22, X21, [X31 + 0x20]
	0x033E7198 STP X20, X19, [X31 + 0x30]
	0x033E719C ADRP X22, 0xFF6000
	0x033E71A0 LDRB W8, [X22 + 0x3E7]
	0x033E71A4 MOV X19, X2
	0x033E71A8 MOV X20, X1
	0x033E71AC MOV X21, X0
	0x033E71B0 CBNZ W8, 0x33E71C8
	0x033E71B4 ADRP X0, 0xD45000
	0x033E71B8 LDR X0, [X0 + 0xDE8]
	0x033E71BC BL 0x1C16CF4
	0x033E71C0 MOVZ W8, 0x1
	0x033E71C4 STRB W8, [X22 + 0x3E7]
	0x033E71C8 LDR W8, [X21]
	0x033E71CC ANDS W31, W8, 0xFF
	0x033E71D0 B.EQ 0x33E7380
	0x033E71D4 ANDS W31, W8, 0xF
	0x033E71D8 B.NE 0x33E7260
	0x033E71DC LDR W9, [X19]
	0x033E71E0 CMP W9, 0x4
	0x033E71E4 B.LT 0x33E7260
	0x033E71E8 ADRP X9, 0xD45000
	0x033E71EC LDR X9, [X9 + 0xDE8]
	0x033E71F0 LDR X0, [X9]
	0x033E71F4 LDR W9, [X0 + 0xE0]
	0x033E71F8 CBNZ W9, 0x33E7204

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0xFF7000
	011 Move X24, 0xD47000
	012 Move X22, 0xD47000
	013 Move X23, 0xD35000
	014 Move W8, [X25+979]
	015 Move X24, [X24+912]
	016 Move X22, [X22+920]
	017 Move X23, [X23+2128]
	018 Move X20, X2
	019 Move X21, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {45}
	025 Move X0, 0xD47000
	026 Move X0, [X0+896]
	027 Call 0x1C17CF4
	028 Move X0, 0xD47000
	029 Move X0, [X0+912]
	030 Call 0x1C17CF4
	031 Move X0, 0xD47000
	032 Move X0, [X0+928]
	033 Call 0x1C17CF4
	034 Move X0, 0xD35000
	035 Move X0, [X0+2128]
	036 Call 0x1C17CF4
	037 Move X0, 0xD47000
	038 Move X0, [X0+920]
	039 Call 0x1C17CF4
	040 Move X0, 0xD47000
	041 Move X0, [X0+848]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X25+979], W8
	045 Move X0, [X24]
	046 Move X26, 0xD47000
	047 Move X25, 0xD47000
	048 Move X24, 0xD47000
	049 Move X26, [X26+928]
	050 Move X25, [X25+896]
	051 Move X24, [X24+848]
	052 Call 0x1C17F10
	053 Move X2, [X22]
	054 Move X1, X31
	055 Move X22, X0
	056 Call InvocationEntryDelegate..ctor, X0, X1, X2
	057 Move X0, [X23]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X1, [X26]
	063 Move X0, X22
	064 Call 0x221653C, X0
	065 Move X8, [X25]
	066 Move X22, X0
	067 Move X0, X8
	068 Call 0x1C17F10
	069 Move X1, X31
	070 Move X23, X0
	071 Call Object..ctor, X0
	072 Move X0, X23
	073 Move X1, X31
	074 Move [X23+16], X21
	075 Move [X23+24], X20
	076 Call GCHandle.Alloc, X0
	077 Move X19, [X19+24]
	078 Move X1, X31
	079 Call GCHandle.ToIntPtr, X0
	080 Move X8, [X24]
	081 Move X20, X0
	082 Move W9, [X8+224]
	083 Compare W9, 0
	084 JumpIfNotEqual {87}
	085 Move X0, X8
	086 Call 0x1C17DFC
	087 Move X0, X19
	088 Move X1, X22
	089 Move X2, X20
	090 Move X20, [X31+64]
	091 Move X19, [X31+72]
	092 Move X22, [X31+48]
	093 Move X21, [X31+56]
	094 Move X24, [X31+32]
	095 Move X23, [X31+40]
	096 Move X26, [X31+16]
	097 Move X25, [X31+24]
	098 Move X30, [X31+80]
	099 Call 0x1C17D14
	100 Return 

Method: System.Void InvocationEntry(System.IntPtr arg)

Disassembly:
	0x033E6E7C CBZ X0, 0x33E6E8C
	0x033E6E80 LDP X20, X19, [X31 + 0x10]
	0x033E6E84 LDR X30, [X31], #0x20
	0x033E6E88 RET
	0x033E6E8C LDR X0, [X19]
	0x033E6E90 LDR W8, [X0 + 0xE0]
	0x033E6E94 CBNZ W8, 0x33E6E9C
	0x033E6E98 BL 0x1C16DFC
	0x033E6E9C LDP X20, X19, [X31 + 0x10]
	0x033E6EA0 MOV X0, X31
	0x033E6EA4 LDR X30, [X31], #0x20
	0x033E6EA8 B 0x334B9AC
	0x033E6EAC STP X30, X19, [X31 - 0x10]!
	0x033E6EB0 ADRP X19, 0xFF7000
	0x033E6EB4 LDRB W8, [X19 + 0x3E2]
	0x033E6EB8 TBNZ X8, 0x0, 0x33E6ED0
	0x033E6EBC ADRP X0, 0xD0F000
	0x033E6EC0 LDR X0, [X0 + 0xC48]
	0x033E6EC4 BL 0x1C16CF4
	0x033E6EC8 MOVZ W8, 0x1
	0x033E6ECC STRB W8, [X19 + 0x3E2]
	0x033E6ED0 LDP X30, X19, [X31], #0x10
	0x033E6ED4 B 0x33E6ED8
	0x033E6ED8 STR X30, [X31 - 0x20]!
	0x033E6EDC STP X20, X19, [X31 + 0x10]
	0x033E6EE0 ADRP X20, 0xFF7000
	0x033E6EE4 ADRP X19, 0xD39000
	0x033E6EE8 LDRB W8, [X20 + 0x3E3]
	0x033E6EEC LDR X19, [X19 + 0x1D8]
	0x033E6EF0 TBNZ X8, 0x0, 0x33E6F14
	0x033E6EF4 ADRP X0, 0xD0F000
	0x033E6EF8 LDR X0, [X0 + 0xC48]
	0x033E6EFC BL 0x1C16CF4
	0x033E6F00 ADRP X0, 0xD39000
	0x033E6F04 LDR X0, [X0 + 0x1D8]
	0x033E6F08 BL 0x1C16CF4
	0x033E6F0C MOVZ W8, 0x1
	0x033E6F10 STRB W8, [X20 + 0x3E3]
	0x033E6F14 LDR X0, [X19]
	0x033E6F18 BL 0x1C16D0C
	0x033E6F1C LDR X8, [X0 + 0x8]
	0x033E6F20 CBZ X8, 0x33E6F34
	0x033E6F24 LDR X0, [X19]
	0x033E6F28 BL 0x1C16D0C
	0x033E6F2C LDR X0, [X0 + 0x8]
	0x033E6F30 B 0x33E6F58
	0x033E6F34 ADRP X19, 0xD0F000
	0x033E6F38 LDR X19, [X19 + 0xC48]
	0x033E6F3C LDR X0, [X19]
	0x033E6F40 LDR W8, [X0 + 0xE0]
	0x033E6F44 CBNZ W8, 0x33E6F4C
	0x033E6F48 BL 0x1C16DFC
	0x033E6F4C MOV X0, X31
	0x033E6F50 BL 0x334B8E4
	0x033E6F54 CBZ X0, 0x33E6F64
	0x033E6F58 LDP X20, X19, [X31 + 0x10]
	0x033E6F5C LDR X30, [X31], #0x20
	0x033E6F60 RET
	0x033E6F64 LDR X0, [X19]
	0x033E6F68 LDR W8, [X0 + 0xE0]
	0x033E6F6C CBNZ W8, 0x33E6F74
	0x033E6F70 BL 0x1C16DFC
	0x033E6F74 LDP X20, X19, [X31 + 0x10]
	0x033E6F78 MOV X0, X31
	0x033E6F7C LDR X30, [X31], #0x20
	0x033E6F80 B 0x334B9F8
	0x033E6F84 B 0x1C2D5AC
	0x033E6F88 B 0x1C4C3AC
	0x033E6F8C STP X30, X19, [X31 - 0x10]!
	0x033E6F90 MOV X19, X0
	0x033E6F94 LDR X0, [X0 + 0x10]
	0x033E6F98 CBNZ X0, 0x33E6FA8
	0x033E6F9C MOV X0, X19
	0x033E6FA0 BL 0x1C4C3AC
	0x033E6FA4 LDR X0, [X19 + 0x10]
	0x033E6FA8 LDP X30, X19, [X31], #0x10
	0x033E6FAC RET
	0x033E6FB0 MOV X0, X31
	0x033E6FB4 B 0x33C0288
	0x033E6FB8 B 0x1C4C400
	0x033E6FBC STR X30, [X31 - 0x10]!
	0x033E6FC0 ADD X0, X31, 0x8
	0x033E6FC4 STR X31, [X31 + 0x8]
	0x033E6FC8 BL 0x1C4C400
	0x033E6FCC LDR X0, [X31 + 0x8]
	0x033E6FD0 LDR X30, [X31], #0x10
	0x033E6FD4 RET
	0x033E6FD8 B 0x1C4C340
	0x033E6FDC B 0x1C4C0F4
	0x033E6FE0 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFF8000
	005 Move W8, [X20+980]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD48000
	012 Move X0, [X0+896]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+980], W8
	016 Move [X31+8], X31
	017 Move X0, X19
	018 Move X1, X31
	019 Call GCHandle.FromIntPtr, X0
	020 Move [X31+8], X0
	021 Add X0, X31, 8
	022 Move X1, X31
	023 Call GCHandle.get_Target, X0
	024 Move X19, X0
	025 Add X0, X31, 8
	026 Move X1, X31
	027 Call GCHandle.Free, X0
	028 Compare X19, 0
	029 JumpIfEqual {55}
	030 Move X9, 0xD48000
	031 Move X9, [X9+896]
	032 Move X8, [X19]
	033 Move X1, [X9]
	034 Move W10, [X8+304]
	035 Move W9, [X1+304]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X8, [X8+200]
	038 Add X8, X8, X9
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X8, [X19+16]
	042 Compare X8, 0
	043 JumpIfEqual {56}
	044 Move X1, [X19+24]
	045 Move X0, [X8+64]
	046 Move X9, [X8+24]
	047 Move X2, [X8+40]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Return 
	053 Move X0, X19
	054 Call 0x1C181E0
	055 Call 0x1C17F20
	056 Call 0x1C17F20
	057 Move X19, X0
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, X19
	060 Call 0x3EB2AD0
	061 Move X19, X0
	062 Move X0, 0xD0E000
	063 Move X0, [X0+2000]
	064 Call 0x1C17D08
	065 Move X8, [X19]
	066 Move X1, [X8]
	067 Call 0x1C18270
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {84}
	072 Move X19, [X19]
	073 Call 0x3EB2AE0
	074 Move X0, 0xD0E000
	075 Move X0, [X0+2000]
	076 Call 0x1C17D08
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, X19
	082 Move X1, X31
	083 Call Exception.ReportUnhandledException, X0
	084 Move W0, 8
	085 Call 0x3EB2AF0
	086 Move X8, [X19]
	087 Move [X0], X8
	088 Move X1, 0xACF000
	089 Add X1, X1, 3672
	090 Move X2, X31
	091 Call 0x3EB2B00
	092 Move X19, X0
	093 Call 0x3EB2AE0
	094 Move X0, X19
	095 Call 0x1D2D690
	096 Call 0x1991590

Method: System.Object GetOSContext()

Disassembly:
	0x033E700C LDP X30, X19, [X31], #0x10

ISIL:
	001 Call 0x1C4D018
	002 Return X0

Method: System.Void PostInternal(System.Object osSynchronizationContext, System.IntPtr callback, System.IntPtr arg)

Disassembly:
	0x033E72B4 MOV W13, W8

ISIL:
	001 Call 0x1C17D14
	002 Return 

Method: System.Void .cctor()

Disassembly:
	0x033E72E0 STR W10, [X21]
	0x033E72E4 LDR W8, [X19]
	0x033E72E8 SUB W8, W8, 0x2
	0x033E72EC STR W8, [X19]
	0x033E72F0 LDR W8, [X21]
	0x033E72F4 TBNZ X8, 0x0, 0x33E736C
	0x033E72F8 LDR W9, [X19]
	0x033E72FC CMP W9, 0x1
	0x033E7300 B.LT 0x33E736C
	0x033E7304 ADRP X9, 0xD45000
	0x033E7308 LDR X9, [X9 + 0xDE8]
	0x033E730C LDR X0, [X9]
	0x033E7310 LDR W9, [X0 + 0xE0]
	0x033E7314 CBNZ W9, 0x33E7320
	0x033E7318 BL 0x1C16DFC
	0x033E731C LDR W8, [X21]
	0x033E7320 LDR X10, [X20]
	0x033E7324 ORR X11, X31, 0xCCCCCCCCCCCCCCCC
	0x033E7328 MOVK X11, 0xCCCD
	0x033E732C MOVN W12, 0x9
	0x00000000 INVALID
	0x033E7334 UBFM X9, X9, 0x3, 0x3F
	0x033E7338 MADD W10, W9, W12, W10
	0x033E733C MOV W12, W8
	0x033E7340 BFM X12, X10, 0x20, 0x1F
	0x00000000 INVALID
	0x033E7348 UBFM X10, X10, 0x3, 0x3F
	0x033E734C ADD W11, W10, W10, 0x2, LSL
	0x033E7350 CMP W8, W11, LSL
	0x033E7354 B.NE 0x33E736C
	0x033E7358 STR X9, [X20]
	0x033E735C STR W10, [X21]
	0x033E7360 LDR W8, [X19]
	0x033E7364 SUB W8, W8, 0x1
	0x033E7368 STR W8, [X19]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFF7000
	007 Move X22, 0xD47000
	008 Move X19, 0xD47000
	009 Move X20, 0xD47000
	010 Move W8, [X21+981]
	011 Move X22, [X22+936]
	012 Move X19, [X19+944]
	013 Move X20, [X20+848]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xD47000
	019 Move X0, [X0+944]
	020 Call 0x1C17CF4
	021 Move X0, 0xD47000
	022 Move X0, [X0+936]
	023 Call 0x1C17CF4
	024 Move X0, 0xD47000
	025 Move X0, [X0+848]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+981], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call 0x29974AC, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

