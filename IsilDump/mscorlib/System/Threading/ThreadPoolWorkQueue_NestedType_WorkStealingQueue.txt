Type: System.Threading.ThreadPoolWorkQueue/WorkStealingQueue

Method: System.Void LocalPush(System.Threading.IThreadPoolWorkItem obj)

Disassembly:
	0x033E8C34 MOV X1, X21
	0x033E8C38 BL 0x33E8550
	0x033E8C3C LDR X22, [X31 + 0x18]
	0x033E8C40 CBZ X22, 0x33E8DB4
	0x033E8C44 MOV X0, X19
	0x033E8C48 BL 0x33E7A1C
	0x033E8C4C LDR X0, [X24]
	0x033E8C50 LDR W8, [X0 + 0xE0]
	0x033E8C54 CBNZ W8, 0x33E8C60
	0x033E8C58 BL 0x1C16DFC
	0x033E8C5C LDR X0, [X24]
	0x033E8C60 LDR X8, [X0 + 0xB8]
	0x033E8C64 LDRB W8, [X8 + 0x5]
	0x033E8C68 CBZ W8, 0x33E8CF8
	0x033E8C6C MOVZ W0, 0x1
	0x033E8C70 BL 0x1C16CAC
	0x033E8C74 LDR X8, [X22]
	0x033E8C78 LDR X1, [X25]
	0x033E8C7C LDRH W9, [X8 + 0x12E]
	0x033E8C80 CBZ X9, 0x33E8CA4
	0x033E8C84 LDR X10, [X8 + 0xB0]
	0x033E8C88 ADD X10, X10, 0x8
	0x033E8C8C LDUR X11, [X10 - 0x8]
	0x033E8C90 CMP X11, X1
	0x033E8C94 B.EQ 0x33E8CB4
	0x033E8C98 SUBS X9, X9, 0x1
	0x033E8C9C ADD X10, X10, 0x10
	0x033E8CA0 B.NE 0x33E8C8C
	0x033E8CA4 MOV X0, X22
	0x033E8CA8 MOV W2, W31
	0x033E8CAC BL 0x1C5C788
	0x033E8CB0 B 0x33E8CC0
	0x033E8CB4 LDRSW X9, [X10]
	0x033E8CB8 ADD X8, X8, X9, 0x4, LSL
	0x033E8CBC ADD X0, X8, 0x138
	0x033E8CC0 LDP X8, X1, [X0]
	0x033E8CC4 MOV X0, X22
	0x033E8CC8 BLR X8
	0x033E8CCC MOV X23, X31
	0x033E8CD0 MOV X22, X31
	0x033E8CD4 STR X31, [X31 + 0x18]
	0x033E8CD8 MOVZ W26, 0x9
	0x033E8CDC MOV W0, W31
	0x033E8CE0 BL 0x1C16CAC
	0x033E8CE4 CBNZ X23, 0x33E8E10
	0x033E8CE8 CMP W26, 0x9
	0x033E8CEC B.EQ 0x33E8D54
	0x033E8CF0 CBNZ W26, 0x33E8E08
	0x033E8CF4 CBZ X22, 0x33E8E18
	0x033E8CF8 LDR X8, [X22]
	0x033E8CFC LDR X1, [X25]
	0x033E8D00 LDRH W9, [X8 + 0x12E]
	0x033E8D04 CBZ X9, 0x33E8D28
	0x033E8D08 LDR X10, [X8 + 0xB0]
	0x033E8D0C ADD X10, X10, 0x8
	0x033E8D10 LDUR X11, [X10 - 0x8]
	0x033E8D14 CMP X11, X1
	0x033E8D18 B.EQ 0x33E8D38
	0x033E8D1C SUBS X9, X9, 0x1
	0x033E8D20 ADD X10, X10, 0x10
	0x033E8D24 B.NE 0x33E8D10
	0x033E8D28 MOV X0, X22
	0x033E8D2C MOV W2, W31
	0x033E8D30 BL 0x1C5C788
	0x033E8D34 B 0x33E8D44
	0x033E8D38 LDRSW X9, [X10]
	0x033E8D3C ADD X8, X8, X9, 0x4, LSL
	0x033E8D40 ADD X0, X8, 0x138
	0x033E8D44 LDP X8, X1, [X0]
	0x033E8D48 MOV X0, X22
	0x033E8D4C BLR X8
	0x033E8D50 STR X31, [X31 + 0x18]
	0x033E8D54 BL 0x1C960E4
	0x033E8D58 TBNZ X0, 0x0, 0x33E8C10
	0x033E8D5C B 0x33E8DD0
	0x033E8D60 STR X1, [X31 + 0x8]
	0x033E8D64 MOV X23, X0
	0x033E8D68 MOVZ W27, 0x1
	0x033E8D6C B 0x33E8D7C
	0x033E8D70 MOV X23, X0
	0x033E8D74 MOV W27, W31
	0x033E8D78 STR X1, [X31 + 0x8]
	0x033E8D7C LDR X8, [X31 + 0x8]
	0x033E8D80 CMP W8, 0x1
	0x033E8D84 B.NE 0x33E8E20
	0x033E8D88 MOV X0, X23
	0x033E8D8C BL 0x3EB1AD0
	0x033E8D90 LDR X8, [X0]
	0x033E8D94 STR X8, [X31]
	0x033E8D98 BL 0x3EB1AE0
	0x033E8D9C LDR X23, [X31]
	0x033E8DA0 MOV W26, W31
	0x033E8DA4 TBZ X27, 0x0, 0x33E8CDC
	0x033E8DA8 B 0x33E8CE4
	0x033E8DAC MOVZ W20, 0x1
	0x033E8DB0 B 0x33E8DD4
	0x033E8DB4 LDRB W8, [X31 + 0x14]
	0x033E8DB8 CBZ W8, 0x33E8DC4
	0x033E8DBC MOV X0, X19
	0x033E8DC0 BL 0x33E7A1C
	0x033E8DC4 MOVZ W20, 0x1
	0x033E8DC8 MOVZ W26, 0x6
	0x033E8DCC B 0x33E8DE0
	0x033E8DD0 MOV W20, W31
	0x033E8DD4 MOVZ W26, 0x6
	0x033E8DD8 MOV X0, X19
	0x033E8DDC BL 0x33E7A1C
	0x033E8DE0 CMP W26, 0x6
	0x033E8DE4 CSET W8, NE
	0x033E8DE8 ORR W0, W8, W20, 0x0
	0x033E8DEC LDP X20, X19, [X31 + 0x60]
	0x033E8DF0 LDP X22, X21, [X31 + 0x50]
	0x033E8DF4 LDP X24, X23, [X31 + 0x40]
	0x033E8DF8 LDP X26, X25, [X31 + 0x30]
	0x033E8DFC LDP X30, X27, [X31 + 0x20]
	0x033E8E00 ADD X31, X31, 0x70
	0x033E8E04 RET
	0x033E8E08 MOV W20, W31
	0x033E8E0C B 0x33E8DD8
	0x033E8E10 MOV X0, X23
	0x033E8E14 BL 0x1C16F18
	0x033E8E18 BL 0x1C16F20
	0x033E8E1C BL 0x1C16F20
	0x033E8E20 STR X31, [X31]
	0x033E8E24 TBNZ X27, 0x0, 0x33E8E30
	0x033E8E28 MOV W0, W31
	0x033E8E2C BL 0x1C16CAC
	0x033E8E30 LDP X8, X1, [X31]
	0x033E8E34 CBZ X8, 0x33E8E74
	0x033E8E38 LDR X0, [X31]
	0x033E8E3C BL 0x1C16F18
	0x033E8E40 MOV X23, X0
	0x033E8E44 STR X1, [X31 + 0x8]
	0x033E8E48 TBZ X27, 0x0, 0x33E8E28
	0x033E8E4C B 0x33E8E30
	0x033E8E50 B 0x33E8E70
	0x033E8E54 B 0x33E8E70
	0x033E8E58 B 0x33E8E70
	0x033E8E5C B 0x33E8E70
	0x033E8E60 B 0x33E8E70
	0x033E8E64 B 0x33E8E70
	0x033E8E68 B 0x33E8E70
	0x033E8E6C B 0x33E8E70
	0x033E8E70 MOV X23, X0
	0x033E8E74 CMP W1, 0x1
	0x033E8E78 B.NE 0x33E8F00
	0x033E8E7C MOV X0, X23
	0x033E8E80 BL 0x3EB1AD0
	0x033E8E84 MOV X20, X0
	0x033E8E88 ADRP X0, 0xD34000
	0x033E8E8C LDR X0, [X0 + 0xBB8]
	0x033E8E90 BL 0x1C16D08
	0x033E8E94 LDR X8, [X20]
	0x033E8E98 LDR X1, [X8]
	0x033E8E9C BL 0x1C17270
	0x033E8EA0 TBZ X0, 0x0, 0x33E8F6C
	0x033E8EA4 LDR X20, [X20]
	0x033E8EA8 BL 0x3EB1AE0
	0x033E8EAC LDR X21, [X31 + 0x18]
	0x033E8EB0 CBZ X21, 0x33E8F54
	0x033E8EB4 ADRP X0, 0xD45000
	0x033E8EB8 LDR X0, [X0 + 0x480]
	0x033E8EBC BL 0x1C16D08
	0x033E8EC0 MOV X1, X0
	0x033E8EC4 LDR X8, [X21]
	0x033E8EC8 LDRH W9, [X8 + 0x12E]
	0x033E8ECC CBZ X9, 0x33E8EF0
	0x033E8ED0 LDR X10, [X8 + 0xB0]
	0x033E8ED4 ADD X10, X10, 0x8
	0x033E8ED8 LDUR X11, [X10 - 0x8]
	0x033E8EDC CMP X11, X1
	0x033E8EE0 B.EQ 0x33E8F34
	0x033E8EE4 SUBS X9, X9, 0x1
	0x033E8EE8 ADD X10, X10, 0x10
	0x033E8EEC B.NE 0x33E8ED8
	0x033E8EF0 MOVZ W2, 0x1
	0x033E8EF4 MOV X0, X21
	0x033E8EF8 BL 0x1C5C788
	0x033E8EFC B 0x33E8F44
	0x033E8F00 MOV X20, X1
	0x033E8F04 MOVZ W8, 0x1
	0x033E8F08 CMP W20, W8
	0x033E8F0C B.NE 0x33E8F5C
	0x033E8F10 MOV X0, X23
	0x033E8F14 BL 0x3EB1AD0
	0x033E8F18 LDR X20, [X0]
	0x033E8F1C BL 0x3EB1AE0
	0x033E8F20 MOV X0, X19
	0x033E8F24 BL 0x33E7A1C
	0x033E8F28 CBNZ X20, 0x33E8F64
	0x033E8F2C MOV W26, W31
	0x033E8F30 B 0x33E8DE0
	0x033E8F34 LDR W9, [X10]
	0x033E8F38 ADD W9, W9, 0x1
	0x033E8F3C ADD X8, X8, W9, 0x4, SXTW
	0x033E8F40 ADD X0, X8, 0x138
	0x033E8F44 LDP X8, X2, [X0]
	0x033E8F48 MOV X0, X21
	0x033E8F4C MOV X1, X20
	0x033E8F50 BLR X8
	0x033E8F54 MOVZ W0, 0x1
	0x033E8F58 B 0x33E8DEC
	0x033E8F5C MOV X20, X31
	0x033E8F60 B 0x33E8F94
	0x033E8F64 MOV X0, X20
	0x033E8F68 BL 0x1C16F18
	0x033E8F6C MOVZ W0, 0x8
	0x033E8F70 BL 0x3EB1AF0
	0x033E8F74 LDR X8, [X20]
	0x033E8F78 STR X8, [X0]
	0x033E8F7C ADRP X1, 0xACC000
	0x033E8F80 ADD X1, X1, 0xE58
	0x033E8F84 MOV X2, X31
	0x033E8F88 BL 0x3EB1B00
	0x033E8F8C B 0x33E8FB0
	0x033E8F90 MOV X23, X0
	0x033E8F94 MOV X0, X19
	0x033E8F98 BL 0x33E7A1C
	0x033E8F9C CBNZ X20, 0x33E8FA8
	0x033E8FA0 MOV X0, X23
	0x033E8FA4 BL 0x1D2C690
	0x033E8FA8 MOV X0, X20
	0x033E8FAC BL 0x1C16F18
	0x033E8FB0 MOV X23, X0
	0x033E8FB4 MOV W20, W1
	0x033E8FB8 B 0x33E8F04
	0x033E8FBC MOV X20, X1
	0x033E8FC0 MOV X23, X0
	0x033E8FC4 BL 0x3EB1AE0
	0x033E8FC8 B 0x33E8F04
	0x033E8FCC BL 0x1990590
	0x033E8FD0 B 0x1C960E4
	0x033E8FD4 STR X30, [X31 - 0x30]!
	0x033E8FD8 STP X22, X21, [X31 + 0x10]
	0x033E8FDC STP X20, X19, [X31 + 0x20]
	0x033E8FE0 ADRP X21, 0xFF5000
	0x033E8FE4 ADRP X22, 0xD45000
	0x033E8FE8 ADRP X19, 0xD45000
	0x033E8FEC ADRP X20, 0xD45000
	0x033E8FF0 LDRB W8, [X21 + 0x3F2]
	0x033E8FF4 LDR X22, [X22 + 0x488]
	0x033E8FF8 LDR X19, [X19 + 0x490]
	0x033E8FFC LDR X20, [X20 + 0x448]
	0x033E9000 TBNZ X8, 0x0, 0x33E9030
	0x033E9004 ADRP X0, 0xD44000
	0x033E9008 LDR X0, [X0 + 0x490]
	0x033E900C BL 0x1C16CF4
	0x033E9010 ADRP X0, 0xD44000
	0x033E9014 LDR X0, [X0 + 0x488]
	0x033E9018 BL 0x1C16CF4
	0x033E901C ADRP X0, 0xD44000
	0x033E9020 LDR X0, [X0 + 0x448]
	0x033E9024 BL 0x1C16CF4
	0x033E9028 MOVZ W8, 0x1
	0x033E902C STRB W8, [X21 + 0x3F2]
	0x033E9030 LDR X0, [X22]
	0x033E9034 BL 0x1C16F10
	0x033E9038 LDR X2, [X19]
	0x033E903C MOVZ W1, 0x10
	0x033E9040 MOV X19, X0
	0x033E9044 BL 0x25FF6AC
	0x033E9048 LDR X8, [X20]
	0x033E904C LDP X22, X21, [X31 + 0x10]
	0x033E9050 LDR X8, [X8 + 0xB8]
	0x033E9054 STR X19, [X8]
	0x033E9058 LDP X20, X19, [X31 + 0x20]
	0x033E905C LDR X30, [X31], #0x30
	0x033E9060 RET
	0x033E9064 B 0x1C24300
	0x033E9068 SUB X31, X31, 0x70
	0x033E906C STP X29, X30, [X31 + 0x10]
	0x033E9070 STP X28, X27, [X31 + 0x20]
	0x033E9074 STP X26, X25, [X31 + 0x30]
	0x033E9078 STP X24, X23, [X31 + 0x40]
	0x033E907C STP X22, X21, [X31 + 0x50]
	0x033E9080 STP X20, X19, [X31 + 0x60]
	0x033E9084 ADRP X19, 0xFF4000
	0x033E9088 LDRB W8, [X19 + 0x3F6]
	0x033E908C MOV W21, W3
	0x033E9090 MOV X20, X2
	0x033E9094 MOV X22, X1
	0x033E9098 MOV X23, X0
	0x033E909C TBNZ X8, 0x0, 0x33E90B4
	0x033E90A0 ADRP X0, 0xD44000
	0x033E90A4 LDR X0, [X0 + 0x200]
	0x033E90A8 BL 0x1C16CF4
	0x033E90AC MOVZ W8, 0x1
	0x033E90B0 STRB W8, [X19 + 0x3F6]
	0x033E90B4 ADRP X27, 0xD44000
	0x033E90B8 LDR X27, [X27 + 0x200]
	0x033E90BC MOV W28, W31
	0x033E90C0 ADD X24, X23, 0x1C
	0x033E90C4 ADD X19, X23, 0x24
	0x033E90C8 STRB W31, [X31 + 0xC]
	0x033E90CC STR X31, [X22]
	0x033E90D0 LDR W25, [X23 + 0x1C]
	0x033E90D4 BL 0x1C16D44
	0x033E90D8 LDR W26, [X23 + 0x20]
	0x033E90DC BL 0x1C16D44
	0x033E90E0 CMP W25, W26
	0x033E90E4 B.GE 0x33E9284
	0x033E90E8 LDR X0, [X27]
	0x033E90EC STRB W31, [X31 + 0xC]
	0x033E90F0 LDR W8, [X0 + 0xE0]
	0x033E90F4 CBNZ W8, 0x33E90FC
	0x033E90F8 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0xFF6000
	013 Move W8, [X21+1011]
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0xD46000
	021 Move X0, [X0+1112]
	022 Call 0x1C17CF4
	023 Move X0, 0xD46000
	024 Move X0, [X0+512]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+1011], W8
	028 Move [X31+12], W31
	029 Move [X31+8], W31
	030 Move W24, [X19+32]
	031 Call 0x1C17D44
	032 Move TEMP, 0x80000000
	033 Not TEMP
	034 Move W8, TEMP
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X22, 0xD46000
	037 Move X22, [X22+512]
	038 Move [X31+12], W31
	039 Move X0, [X22]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X0, X19, 36
	045 Add X1, X31, 12
	046 Move X2, X31
	047 Call SpinLock.Enter, X0, X1
	048 Move W21, [X19+32]
	049 Call 0x1C17D44
	050 Move TEMP, 0x80000000
	051 Not TEMP
	052 Move W24, TEMP
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W21, [X19+28]
	055 Call 0x1C17D44
	056 Move W23, [X19+24]
	057 Call 0x1C17D44
	058 Call 0x1C17D44
	059 Move W24, [X19+32]
	060 And W8, W23, W21
	061 Move [X19+28], W8
	062 Call 0x1C17D44
	063 Move W21, [X19+24]
	064 Call 0x1C17D44
	065 And W24, W21, W24
	066 Call 0x1C17D44
	067 Move X21, X31
	068 Move [X19+32], W24
	069 Move X21, X31
	070 Move W8, [X31+12]
	071 Compare W8, 0
	072 JumpIfEqual {83}
	073 Move X0, [X22]
	074 Add X22, X19, 36
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move W1, 1
	080 Move X0, X22
	081 Move X2, X31
	082 Call SpinLock.Exit, X0, X1
	083 Compare X21, 0
	084 JumpIfNotEqual {239}
	085 Move W21, [X19+28]
	086 Call 0x1C17D44
	087 Move W22, [X19+24]
	088 Call 0x1C17D44
	089 Add W8, W22, W21
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X21, [X19+16]
	092 Call 0x1C17D44
	093 Move W22, [X19+24]
	094 Call 0x1C17D44
	095 Compare X21, 0
	096 JumpIfEqual {241}
	097 Move W9, [X21+24]
	098 And W8, W22, W24
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Add X21, X21, W8
	101 Call 0x1C17D44
	102 Move [X21+32], X20
	103 Call 0x1C17D44
	104 Add W8, W24, 1
	105 Move [X19+32], W8
	106 Move X23, 0xD46000
	107 Move X23, [X23+512]
	108 Move [X31+8], W31
	109 Move X0, [X23]
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Add X0, X19, 36
	115 Add X1, X31, 8
	116 Move X2, X31
	117 Call SpinLock.Enter, X0, X1
	118 Move W26, [X19+28]
	119 Call 0x1C17D44
	120 Move W21, [X19+32]
	121 Call 0x1C17D44
	122 Move W22, [X19+28]
	123 Call 0x1C17D44
	124 Move W27, [X19+24]
	125 Call 0x1C17D44
	126 Subtract W25, W21, W22
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X21, [X19+16]
	129 Call 0x1C17D44
	130 Compare X21, 0
	131 JumpIfEqual {247}
	132 Move X8, 0xD46000
	133 Move X8, [X8+1112]
	134 Move W9, [X21+24]
	135 Move X0, [X8]
	136 Move W1, W9
	137 ShiftRight W1, 31
	138 And W1, W1, 0x3FFFFFFF
	139 Call 0x1C17D6C
	140 Move X21, X0
	141 Move X24, X31
	142 Move X22, [X19+16]
	143 Call 0x1C17D44
	144 Compare X22, 0
	145 JumpIfEqual {231}
	146 NotImplemented "Instruction LDRSW not yet implemented."
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X22, [X19+16]
	149 Call 0x1C17D44
	150 Move W27, [X19+24]
	151 Call 0x1C17D44
	152 Compare X22, 0
	153 JumpIfEqual {234}
	154 Move W9, [X22+24]
	155 Add W8, W26, W24
	156 And W8, W27, W8
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Compare X21, 0
	159 JumpIfEqual {235}
	160 Add X8, X22, W8
	161 Move X22, [X8+32]
	162 Compare X22, 0
	163 JumpIfEqual {170}
	164 Move X8, [X21]
	165 Move X1, [X8+64]
	166 Move X0, X22
	167 Call 0x1C17E00
	168 Compare X0, 0
	169 JumpIfEqual {236}
	170 Move W8, [X21+24]
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Add X8, X21, X24
	173 Add X24, X24, 1
	174 Move [X8+32], X22
	175 Call 0x1C17D44
	176 Move [X19+16], X21
	177 Call 0x1C17D44
	178 Move [X19+28], W31
	179 Call 0x1C17D44
	180 Move W21, [X19+24]
	181 Move [X19+32], W25
	182 Call 0x1C17D44
	183 Call 0x1C17D44
	184 Move W8, 1
	185 NotImplemented "Instruction BFM not yet implemented."
	186 Move W24, W25
	187 Move [X19+24], W8
	188 Move X21, [X19+16]
	189 Call 0x1C17D44
	190 Move W22, [X19+24]
	191 Call 0x1C17D44
	192 Compare X21, 0
	193 JumpIfEqual {245}
	194 Move W8, [X21+24]
	195 And W22, W22, W24
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Call 0x1C17D44
	198 Add X8, X21, W22
	199 Move [X8+32], X20
	200 Call 0x1C17D44
	201 Add W8, W24, 1
	202 Move X20, X31
	203 Move [X19+32], W8
	204 Move W8, [X31+8]
	205 Compare W8, 0
	206 JumpIfEqual {217}
	207 Move X0, [X23]
	208 Add X19, X19, 36
	209 Move W8, [X0+224]
	210 Compare W8, 0
	211 JumpIfNotEqual {213}
	212 Call 0x1C17DFC
	213 Move X0, X19
	214 Move W1, W31
	215 Move X2, X31
	216 Call SpinLock.Exit, X0, X1
	217 Compare X20, 0
	218 JumpIfNotEqual {242}
	219 Move X20, [X31+80]
	220 Move X19, [X31+88]
	221 Move X22, [X31+64]
	222 Move X21, [X31+72]
	223 Move X24, [X31+48]
	224 Move X23, [X31+56]
	225 Move X26, [X31+32]
	226 Move X25, [X31+40]
	227 Move X30, [X31+16]
	228 Move X27, [X31+24]
	229 Add X31, X31, 96
	230 Return 
	231 Call 0x1C17F20
	232 Call 0x1C17F28
	233 Call 0x1C17F28
	234 Call 0x1C17F20
	235 Call 0x1C17F20
	236 Call 0x1C17F44
	237 Move X1, X31
	238 Call 0x1C17DEC
	239 Move X0, X21
	240 Call 0x1C17F18
	241 Call 0x1C17F20
	242 Move X0, X20
	243 Call 0x1C17F18
	244 Call 0x1C17F28
	245 Call 0x1C17F20
	246 Call 0x1C17F28
	247 Call 0x1C17F20
	248 Move X21, X0
	249 Move X21, X0
	250 Move TEMP, 0x80000000
	251 Not TEMP
	252 Move W24, TEMP
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Move X0, X21
	255 Call 0x3EB2AD0
	256 Move X8, [X0]
	257 Move [X31], X8
	258 Call 0x3EB2AE0
	259 Move X21, [X31]
	260 Move [X31], X31
	261 Move X21, X0
	262 Move W8, [X31+12]
	263 Compare W8, 0
	264 JumpIfEqual {274}
	265 Move X0, [X22]
	266 Move W8, [X0+224]
	267 Compare W8, 0
	268 JumpIfNotEqual {270}
	269 Call 0x1C17DFC
	270 Add X0, X19, 36
	271 Move W1, 1
	272 Move X2, X31
	273 Call SpinLock.Exit, X0, X1
	274 Move X8, [X31]
	275 Compare X8, 0
	276 JumpIfEqual {301}
	277 Move X0, [X31]
	278 Call 0x1C17F18
	279 Move X21, X0
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Move X0, X21
	282 Call 0x3EB2AD0
	283 Move X20, [X0]
	284 Call 0x3EB2AE0
	285 Move X20, X31
	286 Move X21, X0
	287 Move W8, [X31+8]
	288 Compare W8, 0
	289 JumpIfEqual {299}
	290 Move X0, [X23]
	291 Move W8, [X0+224]
	292 Compare W8, 0
	293 JumpIfNotEqual {295}
	294 Call 0x1C17DFC
	295 Add X0, X19, 36
	296 Move W1, W31
	297 Move X2, X31
	298 Call SpinLock.Exit, X0, X1
	299 Compare X20, 0
	300 JumpIfNotEqual {303}
	301 Move X0, X21
	302 Call 0x1D2D690
	303 Move X0, X20
	304 Call 0x1C17F18
	305 Call 0x1991590

Method: System.Boolean LocalFindAndPop(System.Threading.IThreadPoolWorkItem obj)

Disassembly:
	0x033E9224 BL 0x1C16F28
	0x033E9228 B 0x33E92C4
	0x033E922C B 0x33E9258
	0x033E9230 B 0x33E9258
	0x033E9234 B 0x33E9258
	0x033E9238 B 0x33E9258
	0x033E923C B 0x33E9258
	0x033E9240 B 0x33E9258
	0x033E9244 B 0x33E9258
	0x033E9248 B 0x33E9258
	0x033E924C B 0x33E9258
	0x033E9250 B 0x33E9258
	0x033E9254 B 0x33E9258
	0x033E9258 MOV X26, X0
	0x033E925C CMP W1, 0x1
	0x033E9260 B.NE 0x33E92C4
	0x033E9264 MOV X0, X26
	0x033E9268 BL 0x3EB1AD0
	0x033E926C LDR X25, [X0]
	0x033E9270 BL 0x3EB1AE0
	0x033E9274 MOV W26, W31
	0x033E9278 B 0x33E91D4
	0x033E927C CMP W26, 0x7
	0x033E9280 B.EQ 0x33E9298
	0x033E9284 MOV W28, W31
	0x033E9288 B 0x33E9298
	0x033E928C MOV W28, W31
	0x033E9290 MOVZ W8, 0x1
	0x033E9294 STRB W8, [X20]
	0x033E9298 AND W0, W28, 0x1
	0x033E929C LDP X20, X19, [X31 + 0x60]
	0x033E92A0 LDP X22, X21, [X31 + 0x50]
	0x033E92A4 LDP X24, X23, [X31 + 0x40]
	0x033E92A8 LDP X26, X25, [X31 + 0x30]
	0x033E92AC LDP X28, X27, [X31 + 0x20]
	0x033E92B0 LDP X29, X30, [X31 + 0x10]
	0x033E92B4 ADD X31, X31, 0x70
	0x033E92B8 RET
	0x033E92BC MOV X0, X25
	0x033E92C0 BL 0x1C16F18
	0x033E92C4 MOV X25, X31
	0x033E92C8 B 0x33E92D0
	0x033E92CC MOV X26, X0
	0x033E92D0 LDRB W8, [X31 + 0xC]
	0x033E92D4 CBZ W8, 0x33E92F8
	0x033E92D8 LDR X0, [X27]
	0x033E92DC LDR W8, [X0 + 0xE0]
	0x033E92E0 CBNZ W8, 0x33E92E8
	0x033E92E4 BL 0x1C16DFC
	0x033E92E8 MOV X0, X19
	0x033E92EC MOV W1, W31
	0x033E92F0 MOV X2, X31
	0x033E92F4 BL 0x33E3CF0
	0x033E92F8 CBNZ X25, 0x33E9304
	0x033E92FC MOV X0, X26
	0x033E9300 BL 0x1D2C690
	0x033E9304 MOV X0, X25
	0x033E9308 BL 0x1C16F18
	0x033E930C BL 0x1990590
	0x033E9310 SUB X31, X31, 0x30
	0x033E9314 STP X30, X21, [X31 + 0x10]
	0x033E9318 STP X20, X19, [X31 + 0x20]
	0x033E931C ADRP X20, 0xFF4000
	0x033E9320 ADRP X21, 0xD44000
	0x033E9324 LDRB W8, [X20 + 0x3F7]
	0x033E9328 LDR X21, [X21 + 0x458]
	0x033E932C MOV X19, X0
	0x033E9330 TBNZ X8, 0x0, 0x33E9348
	0x033E9334 ADRP X0, 0xD44000
	0x033E9338 LDR X0, [X0 + 0x458]
	0x033E933C BL 0x1C16CF4
	0x033E9340 MOVZ W8, 0x1
	0x033E9344 STRB W8, [X20 + 0x3F7]
	0x033E9348 LDR X0, [X21]
	0x033E934C MOVZ W1, 0x20
	0x033E9350 BL 0x1C16D6C
	0x033E9354 MOV X20, X0
	0x033E9358 BL 0x1C16D44
	0x033E935C STR X20, [X19 + 0x10]
	0x033E9360 BL 0x1C16D44
	0x033E9364 MOVZ W8, 0x1F
	0x033E9368 ADD X0, X31, 0x8
	0x033E936C MOV W1, W31
	0x033E9370 MOV X2, X31
	0x033E9374 STR W8, [X19 + 0x18]
	0x033E9378 STR W31, [X31 + 0x8]
	0x033E937C BL 0x33E326C
	0x033E9380 LDR W8, [X31 + 0x8]
	0x033E9384 MOV X0, X19
	0x033E9388 MOV X1, X31
	0x033E938C STR W8, [X19 + 0x24]
	0x033E9390 BL 0x33BDD8C
	0x033E9394 LDP X20, X19, [X31 + 0x20]
	0x033E9398 LDP X30, X21, [X31 + 0x10]
	0x033E939C ADD X31, X31, 0x30
	0x033E93A0 RET
	0x033E93A4 STP X30, X21, [X31 - 0x20]!
	0x033E93A8 STP X20, X19, [X31 + 0x10]
	0x033E93AC LDR W21, [X0 + 0x18]
	0x033E93B0 MOV X19, X2
	0x033E93B4 MOV X20, X1
	0x033E93B8 BL 0x1C16D44
	0x033E93BC UBFM W8, W21, 0x10, 0x1F
	0x033E93C0 AND W9, W21, 0xFFFF
	0x033E93C4 STR W8, [X20]
	0x033E93C8 STR W9, [X19]
	0x033E93CC LDP X20, X19, [X31 + 0x10]
	0x033E93D0 LDP X30, X21, [X31], #0x20
	0x033E93D4 RET
	0x033E93D8 STP X30, X23, [X31 - 0x30]!
	0x033E93DC STP X22, X21, [X31 + 0x10]
	0x033E93E0 STP X20, X19, [X31 + 0x20]
	0x033E93E4 LDR W8, [X1]
	0x033E93E8 LDRH W22, [X3]
	0x033E93EC MOV W19, W4
	0x033E93F0 MOV X20, X3
	0x033E93F4 MOV X21, X1
	0x033E93F8 BFM W19, W2, 0x10, 0xF
	0x033E93FC BFM W22, W8, 0x10, 0xF
	0x033E9400 ADD X23, X0, 0x18
	0x033E9404 BL 0x1C16D44
	0x033E9408 MOV X0, X23
	0x033E940C MOV W1, W19
	0x033E9410 MOV W2, W22
	0x033E9414 BL 0x1C241D4
	0x033E9418 UBFM W8, W0, 0x10, 0x1F
	0x033E941C AND W9, W0, 0xFFFF
	0x033E9420 CMP W0, W22
	0x033E9424 STR W8, [X21]
	0x033E9428 STR W9, [X20]
	0x033E942C LDP X20, X19, [X31 + 0x20]
	0x033E9430 LDP X22, X21, [X31 + 0x10]
	0x033E9434 CSET W0, EQ
	0x033E9438 LDP X30, X23, [X31], #0x30
	0x033E943C RET
	0x033E9440 STR X30, [X31 - 0x20]!
	0x033E9444 STP X20, X19, [X31 + 0x10]
	0x033E9448 ADRP X20, 0xFF4000
	0x033E944C LDRB W8, [X20 + 0x3FB]
	0x033E9450 MOV X19, X0
	0x033E9454 TBNZ X8, 0x0, 0x33E9478
	0x033E9458 ADRP X0, 0xD44000
	0x033E945C LDR X0, [X0 + 0x498]
	0x033E9460 BL 0x1C16CF4
	0x033E9464 ADRP X0, 0xD44000
	0x033E9468 LDR X0, [X0 + 0x448]
	0x033E946C BL 0x1C16CF4
	0x033E9470 MOVZ W8, 0x1
	0x033E9474 STRB W8, [X20 + 0x3FB]
	0x033E9478 LDR X0, [X19 + 0x18]
	0x033E947C CBZ X0, 0x33E94F8
	0x033E9480 LDR X8, [X19 + 0x10]
	0x033E9484 CBZ X8, 0x33E94BC
	0x033E9488 STR X31, [X31 + 0x8]
	0x033E948C ADD X1, X31, 0x8
	0x033E9490 BL 0x33E8718
	0x033E9494 TBZ X0, 0x0, 0x33E94BC
	0x033E9498 LDR X0, [X19 + 0x10]
	0x033E949C CBZ X0, 0x33E9504
	0x033E94A0 LDR X1, [X31 + 0x8]
	0x033E94A4 MOVZ W2, 0x1
	0x033E94A8 BL 0x33E7B04
	0x033E94AC LDR X0, [X19 + 0x18]
	0x033E94B0 STR X31, [X31 + 0x8]
	0x033E94B4 CBNZ X0, 0x33E948C
	0x033E94B8 B 0x33E9504
	0x033E94BC ADRP X20, 0xD44000
	0x033E94C0 LDR X20, [X20 + 0x448]
	0x033E94C4 LDR X0, [X20]
	0x033E94C8 LDR W8, [X0 + 0xE0]
	0x033E94CC CBNZ W8, 0x33E94D8
	0x033E94D0 BL 0x1C16DFC
	0x033E94D4 LDR X0, [X20]
	0x033E94D8 LDR X8, [X0 + 0xB8]
	0x033E94DC LDR X0, [X8]
	0x033E94E0 CBZ X0, 0x33E9504
	0x033E94E4 ADRP X8, 0xD44000
	0x033E94E8 LDR X8, [X8 + 0x498]
	0x033E94EC LDR X1, [X19 + 0x18]
	0x033E94F0 LDR X2, [X8]
	0x033E94F4 BL 0x25FF924
	0x033E94F8 LDP X20, X19, [X31 + 0x10]
	0x033E94FC LDR X30, [X31], #0x20
	0x033E9500 RET
	0x033E9504 BL 0x1C16F20
	0x033E9508 STP X30, X21, [X31 - 0x20]!
	0x033E950C STP X20, X19, [X31 + 0x10]
	0x033E9510 MOV X19, X0
	0x033E9514 MOV X0, X31
	0x033E9518 BL 0x33C153C
	0x033E951C TBNZ X0, 0x0, 0x33E9540
	0x033E9520 MOV X0, X31
	0x033E9524 BL 0x33C0128
	0x033E9528 CBZ X0, 0x33E9554
	0x033E952C MOV X1, X31
	0x033E9530 BL 0x33C04B0
	0x033E9534 TBNZ X0, 0x0, 0x33E9540
	0x033E9538 MOV X0, X19
	0x033E953C BL 0x33E9440
	0x033E9540 MOV X0, X19
	0x033E9544 LDP X20, X19, [X31 + 0x10]
	0x033E9548 MOV X1, X31
	0x033E954C LDP X30, X21, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0xFF5000
	013 Move W8, [X21+1012]
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xD45000
	021 Move X0, [X0+512]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1012], W8
	025 Move [X31+8], X31
	026 Move [X31+4], W31
	027 Move X21, [X19+16]
	028 Call 0x1C17D44
	029 Move W22, [X19+32]
	030 Call 0x1C17D44
	031 Move W23, [X19+24]
	032 Call 0x1C17D44
	033 Compare X21, 0
	034 JumpIfEqual {175}
	035 Move W9, [X21+24]
	036 Subtract W8, W22, 1
	037 And W8, W23, W8
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add X8, X21, W8
	040 Move X8, [X8+32]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W21, [X19+32]
	043 Call 0x1C17D44
	044 Move W22, [X19+28]
	045 Subtract W26, W21, 2
	046 Call 0x1C17D44
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W22, W31
	049 Add X1, X31, 8
	050 Move X0, X19
	051 Call WorkStealingQueue.LocalPop, X0, X1
	052 Move W22, W0
	053 And W0, W22, 1
	054 Move X20, [X31+80]
	055 Move X19, [X31+88]
	056 Move X22, [X31+64]
	057 Move X21, [X31+72]
	058 Move X24, [X31+48]
	059 Move X23, [X31+56]
	060 Move X26, [X31+32]
	061 Move X25, [X31+40]
	062 Move X30, [X31+16]
	063 Move X27, [X31+24]
	064 Add X31, X31, 96
	065 Return X0
	066 Move X25, 0xD45000
	067 Move X25, [X25+512]
	068 Move W22, W31
	069 Add X21, X19, 36
	070 Move X23, [X19+16]
	071 Call 0x1C17D44
	072 Move W24, [X19+24]
	073 Call 0x1C17D44
	074 Compare X23, 0
	075 JumpIfEqual {175}
	076 Move W9, [X23+24]
	077 And W8, W24, W26
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Add X8, X23, W8
	080 Move X8, [X8+32]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X0, [X25]
	083 Move [X31+4], W31
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Add X1, X31, 4
	089 Move X0, X21
	090 Move X2, X31
	091 Call SpinLock.Enter, X0, X1
	092 Move X23, [X19+16]
	093 Call 0x1C17D44
	094 Move W24, [X19+24]
	095 Call 0x1C17D44
	096 Compare X23, 0
	097 JumpIfEqual {163}
	098 Move W9, [X23+24]
	099 And W8, W24, W26
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Add X8, X23, W8
	102 Move X8, [X8+32]
	103 Compare X8, 0
	104 JumpIfEqual {127}
	105 Move X23, [X19+16]
	106 Call 0x1C17D44
	107 Move W24, [X19+24]
	108 Call 0x1C17D44
	109 Compare X23, 0
	110 JumpIfEqual {165}
	111 Move W8, [X23+24]
	112 And W24, W24, W26
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Call 0x1C17D44
	115 Add X8, X23, W24
	116 Move [X8+32], X31
	117 Move W23, [X19+32]
	118 Call 0x1C17D44
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move W27, [X19+32]
	121 Call 0x1C17D44
	122 Call 0x1C17D44
	123 Subtract W8, W27, 1
	124 Move X23, X31
	125 Move W24, W31
	126 Move [X19+32], W8
	127 Move X23, X31
	128 Move W24, W31
	129 Move W22, W31
	130 Move W23, [X19+28]
	131 Call 0x1C17D44
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move W27, [X19+28]
	134 Call 0x1C17D44
	135 Call 0x1C17D44
	136 Add W8, W27, 1
	137 Move X23, X31
	138 Move W24, W31
	139 Move [X19+28], W8
	140 Move X23, X31
	141 Move W24, W31
	142 Move W22, 1
	143 Move W8, [X31+4]
	144 Compare W8, 0
	145 JumpIfEqual {155}
	146 Move X0, [X25]
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1C17DFC
	151 Move X0, X21
	152 Move W1, W31
	153 Move X2, X31
	154 Call SpinLock.Exit, X0, X1
	155 Compare X23, 0
	156 JumpIfNotEqual {176}
	157 Compare W24, 0
	158 JumpIfEqual {53}
	159 Move W23, [X19+28]
	160 Subtract W26, W26, 1
	161 Call 0x1C17D44
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Call 0x1C17F20
	164 Call 0x1C17F28
	165 Call 0x1C17F20
	166 Call 0x1C17F28
	167 Move X24, X0
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X0, X24
	170 Call 0x3EB2AD0
	171 Move X23, [X0]
	172 Call 0x3EB2AE0
	173 Move W24, 1
	174 Call 0x1C17F28
	175 Call 0x1C17F20
	176 Move X0, X23
	177 Call 0x1C17F18
	178 Move X23, X31
	179 Move X24, X0
	180 Move W8, [X31+4]
	181 Compare W8, 0
	182 JumpIfEqual {192}
	183 Move X0, [X25]
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {188}
	187 Call 0x1C17DFC
	188 Move X0, X21
	189 Move W1, W31
	190 Move X2, X31
	191 Call SpinLock.Exit, X0, X1
	192 Compare X23, 0
	193 JumpIfNotEqual {196}
	194 Move X0, X24
	195 Call 0x1D2D690
	196 Move X0, X23
	197 Call 0x1C17F18
	198 Call 0x1991590

Method: System.Boolean LocalPop(out System.Threading.IThreadPoolWorkItem obj)

Disassembly:
	0x033E9718 CBZ X20, 0x33E9780
	0x033E971C ADRP X22, 0xD44000
	0x033E9720 LDR X22, [X22 + 0x4A0]
	0x033E9724 ADRP X21, 0xD32000
	0x033E9728 LDR X0, [X22]
	0x033E972C LDR W8, [X0 + 0xE0]
	0x033E9730 LDR X21, [X21 + 0x580]
	0x033E9734 CBNZ W8, 0x33E9740
	0x033E9738 BL 0x1C16DFC
	0x033E973C LDR X0, [X22]
	0x033E9740 LDR X8, [X21]
	0x033E9744 LDR X9, [X0 + 0xB8]
	0x033E9748 LDR W10, [X8 + 0xE0]
	0x033E974C LDR X21, [X9]
	0x033E9750 CBNZ W10, 0x33E975C
	0x033E9754 MOV X0, X8
	0x033E9758 BL 0x1C16DFC
	0x033E975C MOV X0, X20
	0x033E9760 MOV X1, X21
	0x033E9764 MOV X2, X19
	0x033E9768 LDP X20, X19, [X31 + 0x20]
	0x033E976C LDP X22, X21, [X31 + 0x10]
	0x033E9770 MOVZ W3, 0x1
	0x033E9774 MOV X4, X31
	0x033E9778 LDR X30, [X31], #0x30
	0x033E977C B 0x33E49D8
	0x033E9780 LDR X8, [X19 + 0x10]
	0x033E9784 STR X31, [X19 + 0x10]
	0x033E9788 CBZ X8, 0x33E97AC
	0x033E978C LDR X1, [X19 + 0x20]
	0x033E9790 LDR X3, [X8 + 0x18]
	0x033E9794 LDR X0, [X8 + 0x40]
	0x033E9798 LDR X2, [X8 + 0x28]
	0x033E979C LDP X20, X19, [X31 + 0x20]
	0x033E97A0 LDP X22, X21, [X31 + 0x10]
	0x033E97A4 LDR X30, [X31], #0x30
	0x033E97A8 BR X3
	0x033E97AC BL 0x1C16F20
	0x033E97B0 RET
	0x033E97B4 STR X30, [X31 - 0x20]!
	0x033E97B8 STP X20, X19, [X31 + 0x10]
	0x033E97BC ADRP X20, 0xFF4000
	0x033E97C0 LDRB W8, [X20 + 0x3FF]
	0x033E97C4 MOV X19, X0
	0x033E97C8 TBNZ X8, 0x0, 0x33E97E0
	0x033E97CC ADRP X0, 0xD44000
	0x033E97D0 LDR X0, [X0 + 0x4A0]
	0x033E97D4 BL 0x1C16CF4
	0x033E97D8 MOVZ W8, 0x1
	0x033E97DC STRB W8, [X20 + 0x3FF]
	0x033E97E0 CBZ X19, 0x33E9820
	0x033E97E4 ADRP X8, 0xD44000
	0x033E97E8 LDR X8, [X8 + 0x4A0]
	0x033E97EC LDR X1, [X8]
	0x033E97F0 LDR X8, [X19]
	0x033E97F4 CMP X8, X1
	0x033E97F8 B.NE 0x33E9824
	0x033E97FC LDR X8, [X19 + 0x10]
	0x033E9800 CBZ X8, 0x33E9820
	0x033E9804 LDR X1, [X19 + 0x20]
	0x033E9808 LDR X3, [X8 + 0x18]
	0x033E980C LDR X0, [X8 + 0x40]
	0x033E9810 LDR X2, [X8 + 0x28]
	0x033E9814 LDP X20, X19, [X31 + 0x10]
	0x033E9818 LDR X30, [X31], #0x20
	0x033E981C BR X3
	0x033E9820 BL 0x1C16F20
	0x033E9824 MOV X0, X19
	0x033E9828 BL 0x1C171E0
	0x033E982C STR X30, [X31 - 0x30]!
	0x033E9830 STP X22, X21, [X31 + 0x10]
	0x033E9834 STP X20, X19, [X31 + 0x20]
	0x033E9838 ADRP X21, 0xFF4000
	0x033E983C ADRP X22, 0xD3C000
	0x033E9840 ADRP X19, 0xD44000
	0x033E9844 ADRP X20, 0xD44000
	0x033E9848 LDRB W8, [X21 + 0x400]
	0x033E984C LDR X22, [X22 + 0x948]
	0x033E9850 LDR X19, [X19 + 0x4A8]
	0x033E9854 LDR X20, [X20 + 0x4A0]
	0x033E9858 TBNZ X8, 0x0, 0x33E9888
	0x033E985C ADRP X0, 0xD3C000
	0x033E9860 LDR X0, [X0 + 0x948]
	0x033E9864 BL 0x1C16CF4
	0x033E9868 ADRP X0, 0xD44000
	0x033E986C LDR X0, [X0 + 0x4A8]
	0x033E9870 BL 0x1C16CF4
	0x033E9874 ADRP X0, 0xD44000
	0x033E9878 LDR X0, [X0 + 0x4A0]
	0x033E987C BL 0x1C16CF4
	0x033E9880 MOVZ W8, 0x1
	0x033E9884 STRB W8, [X21 + 0x400]
	0x033E9888 LDR X0, [X22]
	0x033E988C BL 0x1C16F10
	0x033E9890 LDR X2, [X19]
	0x033E9894 MOV X1, X31
	0x033E9898 MOV X3, X31
	0x033E989C MOV X19, X0
	0x033E98A0 BL 0x33E1224
	0x033E98A4 LDR X8, [X20]
	0x033E98A8 LDP X22, X21, [X31 + 0x10]
	0x033E98AC LDR X8, [X8 + 0xB8]
	0x033E98B0 STR X19, [X8]
	0x033E98B4 LDP X20, X19, [X31 + 0x20]
	0x033E98B8 LDR X30, [X31], #0x30
	0x033E98BC RET
	0x033E98C0 SUB X31, X31, 0x60
	0x033E98C4 STP X30, X27, [X31 + 0x10]
	0x033E98C8 STP X26, X25, [X31 + 0x20]
	0x033E98CC STP X24, X23, [X31 + 0x30]
	0x033E98D0 STP X22, X21, [X31 + 0x40]
	0x033E98D4 STP X20, X19, [X31 + 0x50]
	0x033E98D8 ADRP X25, 0xFF4000
	0x033E98DC LDRB W8, [X25 + 0x401]
	0x033E98E0 MOV W19, W6
	0x033E98E4 MOV W22, W4
	0x033E98E8 MOV W24, W3
	0x033E98EC MOV X20, X2
	0x033E98F0 MOV X21, X1
	0x033E98F4 MOV X23, X0
	0x033E98F8 TBNZ X8, 0x0, 0x33E9928
	0x033E98FC ADRP X0, 0xD44000
	0x033E9900 LDR X0, [X0 + 0x4B0]
	0x033E9904 BL 0x1C16CF4
	0x033E9908 ADRP X0, 0xD44000
	0x033E990C LDR X0, [X0 + 0x4B8]
	0x033E9910 BL 0x1C16CF4
	0x033E9914 ADRP X0, 0xD13000
	0x033E9918 LDR X0, [X0 + 0x958]
	0x033E991C BL 0x1C16CF4
	0x033E9920 MOVZ W8, 0x1
	0x033E9924 STRB W8, [X25 + 0x401]
	0x033E9928 CBZ X23, 0x33E99E8
	0x033E992C CBZ X21, 0x33E9A08
	0x033E9930 ADDS W31, W24, 0x2
	0x033E9934 B.LE 0x33E9A3C
	0x033E9938 ADRP X25, 0xD44000
	0x033E993C ADRP X26, 0xD13000
	0x033E9940 ADRP X27, 0xD44000
	0x033E9944 LDR X25, [X25 + 0x4B8]
	0x033E9948 LDR X26, [X26 + 0x958]
	0x033E994C LDR X27, [X27 + 0x4B0]
	0x033E9950 ADD X0, X31, 0x8
	0x033E9954 MOV W1, W31
	0x033E9958 MOV W2, W31
	0x033E995C MOV W3, W31
	0x033E9960 MOV W4, W31
	0x033E9964 MOV W5, W24
	0x033E9968 MOV X6, X31
	0x033E996C STR X31, [X31 + 0x8]
	0x033E9970 BL 0x3393FE8
	0x033E9974 LDR X0, [X25]
	0x033E9978 BL 0x1C16F10
	0x033E997C LDR X4, [X31 + 0x8]
	0x033E9980 AND W5, W22, 0x1
	0x033E9984 MOV X1, X23
	0x033E9988 MOV X2, X21
	0x033E998C MOV X3, X20
	0x033E9990 MOV X24, X0
	0x033E9994 BL 0x33E9A84
	0x033E9998 LDR X0, [X26]
	0x033E999C BL 0x1C16F10
	0x033E99A0 LDR X2, [X27]
	0x033E99A4 MOV X1, X24
	0x033E99A8 MOV X20, X0
	0x033E99AC BL 0x33E7508
	0x033E99B0 MOV X0, X20
	0x033E99B4 MOV X1, X31
	0x033E99B8 TBZ X19, 0x0, 0x33E99C4
	0x033E99BC BL 0x33E9B34
	0x033E99C0 B 0x33E99C8
	0x033E99C4 BL 0x33E9B5C
	0x033E99C8 MOV X0, X24
	0x033E99CC LDP X20, X19, [X31 + 0x50]
	0x033E99D0 LDP X22, X21, [X31 + 0x40]
	0x033E99D4 LDP X24, X23, [X31 + 0x30]
	0x033E99D8 LDP X26, X25, [X31 + 0x20]
	0x033E99DC LDP X30, X27, [X31 + 0x10]
	0x033E99E0 ADD X31, X31, 0x60
	0x033E99E4 RET
	0x033E99E8 ADRP X0, 0xD0F000
	0x033E99EC LDR X0, [X0 + 0x528]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X19, 0xFF5000
	013 Move W8, [X19+1013]
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xD45000
	021 Move X0, [X0+512]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X19+1013], W8
	025 Move X25, 0xD45000
	026 Move X25, [X25+512]
	027 Move W26, W31
	028 Add X22, X21, 32
	029 Add X19, X21, 36
	030 Move [X31+12], W31
	031 Move W24, [X21+32]
	032 Call 0x1C17D44
	033 Move W23, [X21+28]
	034 Call 0x1C17D44
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Subtract W23, W24, 1
	038 Call 0x1C17D44
	039 Move X0, X22
	040 Move W1, W23
	041 Call 0x1C25300
	042 Move W28, [X21+28]
	043 Call 0x1C17D44
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W24, [X21+24]
	046 Call 0x1C17D44
	047 Move X28, [X21+16]
	048 Call 0x1C17D44
	049 Compare X28, 0
	050 JumpIfEqual {161}
	051 Move W8, [X28+24]
	052 And W23, W24, W23
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X24, W23
	055 Add X8, X28, X24
	056 Move X28, [X8+32]
	057 Call 0x1C17D44
	058 Move [X20], X28
	059 Compare X28, 0
	060 JumpIfEqual {31}
	061 Move X0, [X25]
	062 Move [X31+12], W31
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Add X1, X31, 12
	068 Move X0, X19
	069 Move X2, X31
	070 Call SpinLock.Enter, X0, X1
	071 Move W27, [X21+28]
	072 Call 0x1C17D44
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move W24, [X21+24]
	075 Call 0x1C17D44
	076 Move X27, [X21+16]
	077 Call 0x1C17D44
	078 Compare X27, 0
	079 JumpIfEqual {127}
	080 Move W8, [X27+24]
	081 And W23, W24, W23
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X24, W23
	084 Add X8, X27, X24
	085 Move X27, [X8+32]
	086 Call 0x1C17D44
	087 Move [X20], X27
	088 Compare X27, 0
	089 JumpIfEqual {107}
	090 Move X28, [X21+16]
	091 Call 0x1C17D44
	092 Compare X28, 0
	093 JumpIfEqual {129}
	094 Move W8, [X28+24]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Add X8, X28, X24
	097 Move X23, X31
	098 Move W27, W31
	099 Move [X8+32], X31
	100 Move W26, 1
	101 Call 0x1C17D44
	102 Move X23, X31
	103 Move W27, W31
	104 Move W26, W31
	105 Move [X22], W24
	106 Move [X20], X31
	107 Move X23, X31
	108 Move W27, 1
	109 Move W8, [X31+12]
	110 Compare W8, 0
	111 JumpIfEqual {121}
	112 Move X0, [X25]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Move X0, X19
	118 Move W1, W31
	119 Move X2, X31
	120 Call SpinLock.Exit, X0, X1
	121 Compare X23, 0
	122 JumpIfNotEqual {163}
	123 Move TEMP, X27
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfEqual {31}
	127 Call 0x1C17F20
	128 Call 0x1C17F28
	129 Call 0x1C17F20
	130 Call 0x1C17F28
	131 Move X24, X0
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X0, X24
	134 Call 0x3EB2AD0
	135 Move X23, [X0]
	136 Call 0x3EB2AE0
	137 Move W27, W31
	138 Move X19, [X21+16]
	139 Call 0x1C17D44
	140 Compare X19, 0
	141 JumpIfEqual {161}
	142 Move W8, [X19+24]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Add X8, X19, X24
	145 Add X20, X8, 32
	146 Move [X20], X31
	147 Move W26, W27
	148 And W0, W26, 1
	149 Move X20, [X31+80]
	150 Move X19, [X31+88]
	151 Move X22, [X31+64]
	152 Move X21, [X31+72]
	153 Move X24, [X31+48]
	154 Move X23, [X31+56]
	155 Move X26, [X31+32]
	156 Move X25, [X31+40]
	157 Move X28, [X31+16]
	158 Move X27, [X31+24]
	159 Move X30, [X31+96]
	160 Return X0
	161 Call 0x1C17F20
	162 Call 0x1C17F28
	163 Move X0, X23
	164 Call 0x1C17F18
	165 Move X23, X31
	166 Move X24, X0
	167 Move W8, [X31+12]
	168 Compare W8, 0
	169 JumpIfEqual {179}
	170 Move X0, [X25]
	171 Move W8, [X0+224]
	172 Compare W8, 0
	173 JumpIfNotEqual {175}
	174 Call 0x1C17DFC
	175 Move X0, X19
	176 Move W1, W31
	177 Move X2, X31
	178 Call SpinLock.Exit, X0, X1
	179 Compare X23, 0
	180 JumpIfNotEqual {183}
	181 Move X0, X24
	182 Call 0x1D2D690
	183 Move X0, X23
	184 Call 0x1C17F18
	185 Call 0x1991590

Method: System.Boolean TrySteal(out System.Threading.IThreadPoolWorkItem obj, ref System.Boolean missedSteal)

Disassembly:
	0x033E9B70 STR W8, [X31 + 0xC]
	0x033E9B74 BL 0x33E9CB4

ISIL:
	001 Move W3, W31
	002 Call WorkStealingQueue.TrySteal, X0, X1, X2, X3
	003 Return X0

Method: System.Boolean TrySteal(out System.Threading.IThreadPoolWorkItem obj, ref System.Boolean missedSteal, System.Int32 millisecondsTimeout)

Disassembly:
	0x033EA068 RET
	0x033EA06C STR X30, [X31 - 0x30]!
	0x033EA070 STP X22, X21, [X31 + 0x10]
	0x033EA074 STP X20, X19, [X31 + 0x20]
	0x033EA078 ADRP X22, 0xFF3000
	0x033EA07C ADRP X21, 0xD43000
	0x033EA080 LDRB W8, [X22 + 0x409]
	0x033EA084 LDR X21, [X21 + 0x268]
	0x033EA088 MOV X19, X1
	0x033EA08C MOV X20, X0
	0x033EA090 TBNZ X8, 0x0, 0x33EA0B4
	0x033EA094 ADRP X0, 0xD43000
	0x033EA098 LDR X0, [X0 + 0x270]
	0x033EA09C BL 0x1C16CF4
	0x033EA0A0 ADRP X0, 0xD43000
	0x033EA0A4 LDR X0, [X0 + 0x268]
	0x033EA0A8 BL 0x1C16CF4
	0x033EA0AC MOVZ W8, 0x1
	0x033EA0B0 STRB W8, [X22 + 0x409]
	0x033EA0B4 LDR X0, [X21]
	0x033EA0B8 LDR W8, [X0 + 0xE0]
	0x033EA0BC CBNZ W8, 0x33EA0C8
	0x033EA0C0 BL 0x1C16DFC
	0x033EA0C4 LDR X0, [X21]
	0x033EA0C8 LDR X8, [X0 + 0xB8]
	0x033EA0CC MOV X0, X19
	0x033EA0D0 MOV X2, X31
	0x033EA0D4 LDR X1, [X8]
	0x033EA0D8 BL 0x33BE5B0
	0x033EA0DC TBZ X0, 0x0, 0x33EA110
	0x033EA0E0 LDR X21, [X20 + 0x20]
	0x033EA0E4 BL 0x1C16D44
	0x033EA0E8 CBZ X21, 0x33EA13C
	0x033EA0EC LDR X21, [X20 + 0x20]
	0x033EA0F0 BL 0x1C16D44
	0x033EA0F4 CBZ X21, 0x33EA150
	0x033EA0F8 MOV X0, X21
	0x033EA0FC MOV X1, X31
	0x033EA100 BL 0x32C03A4
	0x033EA104 BL 0x1C16D44
	0x033EA108 STR X31, [X20 + 0x20]
	0x033EA10C B 0x33EA13C
	0x033EA110 ADRP X8, 0xD43000
	0x033EA114 LDR X8, [X8 + 0x270]
	0x033EA118 LDR X0, [X8]
	0x033EA11C BL 0x1C16F10
	0x033EA120 MOVZ W2, 0x1
	0x033EA124 MOV X1, X19
	0x033EA128 MOV X3, X31
	0x033EA12C MOV X21, X0
	0x033EA130 BL 0x3224ED0
	0x033EA134 BL 0x1C16D44
	0x033EA138 STR X21, [X20 + 0x20]
	0x033EA13C STR X19, [X20 + 0x18]
	0x033EA140 LDP X20, X19, [X31 + 0x20]
	0x033EA144 LDP X22, X21, [X31 + 0x10]
	0x033EA148 LDR X30, [X31], #0x30
	0x033EA14C RET
	0x033EA150 BL 0x1C16F20
	0x033EA154 STP X30, X21, [X31 - 0x20]!
	0x033EA158 STP X20, X19, [X31 + 0x10]
	0x033EA15C ADRP X20, 0xFF3000
	0x033EA160 LDRB W8, [X20 + 0x40A]
	0x033EA164 MOV X19, X0
	0x033EA168 TBNZ X8, 0x0, 0x33EA18C
	0x033EA16C ADRP X0, 0xD43000
	0x033EA170 LDR X0, [X0 + 0x270]
	0x033EA174 BL 0x1C16CF4
	0x033EA178 ADRP X0, 0xD43000
	0x033EA17C LDR X0, [X0 + 0x268]
	0x033EA180 BL 0x1C16CF4
	0x033EA184 MOVZ W8, 0x1
	0x033EA188 STRB W8, [X20 + 0x40A]
	0x033EA18C LDR X20, [X19 + 0x20]
	0x033EA190 BL 0x1C16D44
	0x033EA194 CBZ X20, 0x33EA1A0
	0x033EA198 LDR X20, [X19 + 0x20]
	0x033EA19C B 0x33EA1F0
	0x033EA1A0 ADRP X20, 0xD43000
	0x033EA1A4 LDR X20, [X20 + 0x268]
	0x033EA1A8 LDR X0, [X20]
	0x033EA1AC LDR W8, [X0 + 0xE0]
	0x033EA1B0 CBNZ W8, 0x33EA1BC
	0x033EA1B4 BL 0x1C16DFC
	0x033EA1B8 LDR X0, [X20]
	0x033EA1BC ADRP X9, 0xD43000
	0x033EA1C0 LDR X8, [X0 + 0xB8]
	0x033EA1C4 LDR X9, [X9 + 0x270]
	0x033EA1C8 LDR X21, [X8]
	0x033EA1CC LDR X0, [X9]
	0x033EA1D0 BL 0x1C16F10
	0x033EA1D4 MOV X1, X21
	0x033EA1D8 MOV W2, W31
	0x033EA1DC MOV X3, X31
	0x033EA1E0 MOV X20, X0
	0x033EA1E4 BL 0x3224ED0
	0x033EA1E8 BL 0x1C16D44
	0x033EA1EC STR X20, [X19 + 0x20]
	0x033EA1F0 BL 0x1C16D44
	0x033EA1F4 MOV X0, X20
	0x033EA1F8 LDP X20, X19, [X31 + 0x10]
	0x033EA1FC LDP X30, X21, [X31], #0x20
	0x033EA200 RET
	0x033EA204 STR X30, [X31 - 0x20]!
	0x033EA208 STP X20, X19, [X31 + 0x10]
	0x033EA20C MOV X20, X1
	0x033EA210 MOV X19, X0
	0x033EA214 BL 0x1C16D44
	0x033EA218 STR X20, [X19 + 0x20]
	0x033EA21C CBZ X20, 0x33EA234
	0x033EA220 LDR X8, [X20 + 0x10]
	0x033EA224 STR X8, [X19 + 0x18]
	0x033EA228 LDP X20, X19, [X31 + 0x10]
	0x033EA22C LDR X30, [X31], #0x20
	0x033EA230 RET
	0x033EA234 BL 0x1C16F20
	0x033EA238 ADDS W31, W1, 0x2
	0x033EA23C B.LE 0x33EA24C
	0x033EA240 SXTW X1, W1
	0x033EA244 AND W2, W2, 0x1
	0x033EA248 B 0x33EA2B8
	0x033EA24C STR X30, [X31 - 0x20]!
	0x033EA250 STP X20, X19, [X31 + 0x10]
	0x033EA254 ADRP X0, 0xD42000
	0x033EA258 LDR X0, [X0 + 0xFF0]
	0x033EA25C BL 0x1C16D08
	0x033EA260 MOV X1, X31
	0x033EA264 BL 0x33BDD84
	0x033EA268 MOV X19, X0
	0x033EA26C ADRP X0, 0xD11000
	0x033EA270 LDR X0, [X0 + 0x760]
	0x033EA274 BL 0x1C16D08
	0x033EA278 BL 0x1C16F10
	0x033EA27C MOV X20, X0
	0x033EA280 ADRP X0, 0xD42000
	0x033EA284 LDR X0, [X0 + 0xFD8]
	0x033EA288 BL 0x1C16D08
	0x033EA28C MOV X1, X0
	0x033EA290 MOV X0, X20
	0x033EA294 MOV X2, X19
	0x033EA298 MOV X3, X31
	0x033EA29C BL 0x3311888
	0x033EA2A0 ADRP X0, 0xD43000
	0x033EA2A4 LDR X0, [X0 + 0x500]
	0x033EA2A8 BL 0x1C16D08
	0x033EA2AC MOV X1, X0
	0x033EA2B0 MOV X0, X20
	0x033EA2B4 BL 0x1C16DEC
	0x033EA2B8 STP X30, X23, [X31 - 0x30]!
	0x033EA2BC STP X22, X21, [X31 + 0x10]
	0x033EA2C0 STP X20, X19, [X31 + 0x20]
	0x033EA2C4 ADRP X22, 0xFF3000
	0x033EA2C8 ADRP X23, 0xD43000
	0x033EA2CC LDRB W8, [X22 + 0x40C]
	0x033EA2D0 LDR X23, [X23 + 0x268]
	0x033EA2D4 MOV W20, W2
	0x033EA2D8 MOV X19, X1
	0x033EA2DC MOV X21, X0
	0x033EA2E0 TBNZ X8, 0x0, 0x33EA2F8
	0x033EA2E4 ADRP X0, 0xD43000
	0x033EA2E8 LDR X0, [X0 + 0x268]
	0x033EA2EC BL 0x1C16CF4
	0x033EA2F0 MOVZ W8, 0x1
	0x033EA2F4 STRB W8, [X22 + 0x40C]
	0x033EA2F8 LDR X22, [X21 + 0x20]
	0x033EA2FC BL 0x1C16D44
	0x033EA300 LDR X0, [X23]
	0x033EA304 LDRB W21, [X21 + 0x28]
	0x033EA308 LDR W8, [X0 + 0xE0]
	0x033EA30C CBNZ W8, 0x33EA314

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0xFF4000
	015 Move W8, [X19+1014]
	016 Move W21, W3
	017 Move X20, X2
	018 Move X22, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0xD44000
	025 Move X0, [X0+512]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+1014], W8
	029 Move X27, 0xD44000
	030 Move X27, [X27+512]
	031 Move W28, W31
	032 Add X24, X23, 28
	033 Add X19, X23, 36
	034 Move [X31+12], W31
	035 Move [X22], X31
	036 Move W25, [X23+28]
	037 Call 0x1C17D44
	038 Move W26, [X23+32]
	039 Call 0x1C17D44
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X0, [X27]
	042 Move [X31+12], W31
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Add X2, X31, 12
	048 Move X0, X19
	049 Move W1, W21
	050 Move X3, X31
	051 Call SpinLock.TryEnter, X0, X1, X2
	052 Move W8, [X31+12]
	053 Compare W8, 0
	054 JumpIfEqual {128}
	055 Move W26, [X24]
	056 Call 0x1C17D44
	057 Call 0x1C17D44
	058 Add W1, W26, 1
	059 Move X0, X24
	060 Call 0x1C25300
	061 Move W25, [X23+32]
	062 Call 0x1C17D44
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move W25, [X23+24]
	065 Call 0x1C17D44
	066 Move X29, [X23+16]
	067 Call 0x1C17D44
	068 Compare X29, 0
	069 JumpIfEqual {115}
	070 Move W8, [X29+24]
	071 And W25, W25, W26
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X26, W25
	074 Add X8, X29, X26
	075 Move X29, [X8+32]
	076 Call 0x1C17D44
	077 Move [X22], X29
	078 Compare X29, 0
	079 JumpIfEqual {98}
	080 Move X29, [X23+16]
	081 Call 0x1C17D44
	082 Compare X29, 0
	083 JumpIfEqual {117}
	084 Move W8, [X29+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Add X8, X29, X26
	087 Move X25, X31
	088 Move W28, 1
	089 Move [X8+32], X31
	090 Move W26, 7
	091 Call 0x1C17D44
	092 Move W8, 1
	093 Move X25, X31
	094 Move [X24], W26
	095 Move [X22], X31
	096 Move [X20], W8
	097 Move W26, 8
	098 Move X25, X31
	099 Move W26, 2
	100 Move W8, [X31+12]
	101 Compare W8, 0
	102 JumpIfEqual {112}
	103 Move X0, [X27]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Move X0, X19
	109 Move W1, W31
	110 Move X2, X31
	111 Call SpinLock.Exit, X0, X1
	112 Compare X25, 0
	113 JumpIfNotEqual {146}
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Call 0x1C17F20
	116 Call 0x1C17F28
	117 Call 0x1C17F20
	118 Call 0x1C17F28
	119 Move X26, X0
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X0, X26
	122 Call 0x3EB2AD0
	123 Move X25, [X0]
	124 Call 0x3EB2AE0
	125 Move W26, W31
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move W28, W31
	128 Move W28, W31
	129 Move W8, 1
	130 Move [X20], W8
	131 And W0, W28, 1
	132 Move X20, [X31+96]
	133 Move X19, [X31+104]
	134 Move X22, [X31+80]
	135 Move X21, [X31+88]
	136 Move X24, [X31+64]
	137 Move X23, [X31+72]
	138 Move X26, [X31+48]
	139 Move X25, [X31+56]
	140 Move X28, [X31+32]
	141 Move X27, [X31+40]
	142 Move X29, [X31+16]
	143 Move X30, [X31+24]
	144 Add X31, X31, 112
	145 Return X0
	146 Move X0, X25
	147 Call 0x1C17F18
	148 Move X25, X31
	149 Move X26, X0
	150 Move W8, [X31+12]
	151 Compare W8, 0
	152 JumpIfEqual {162}
	153 Move X0, [X27]
	154 Move W8, [X0+224]
	155 Compare W8, 0
	156 JumpIfNotEqual {158}
	157 Call 0x1C17DFC
	158 Move X0, X19
	159 Move W1, W31
	160 Move X2, X31
	161 Call SpinLock.Exit, X0, X1
	162 Compare X25, 0
	163 JumpIfNotEqual {166}
	164 Move X0, X26
	165 Call 0x1D2D690
	166 Move X0, X25
	167 Call 0x1C17F18
	168 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x033EA310 BL 0x1C16DFC
	0x033EA314 CMP W21, 0x0
	0x033EA318 AND W3, W20, 0x1
	0x033EA31C MOV X0, X22
	0x033EA320 MOV X1, X19
	0x033EA324 LDP X20, X19, [X31 + 0x20]
	0x033EA328 LDP X22, X21, [X31 + 0x10]
	0x033EA32C CSET W2, NE
	0x033EA330 LDP X30, X23, [X31], #0x30
	0x033EA334 B 0x33EA474
	0x033EA338 STR X30, [X31 - 0x30]!
	0x033EA33C STP X22, X21, [X31 + 0x10]
	0x033EA340 STP X20, X19, [X31 + 0x20]
	0x033EA344 ADRP X21, 0xFF3000
	0x033EA348 STR X1, [X31 + 0x8]
	0x033EA34C ADRP X22, 0xD0B000
	0x033EA350 LDRB W8, [X21 + 0x40B]
	0x033EA354 LDR X22, [X22 + 0x570]
	0x033EA358 MOV W19, W2
	0x033EA35C MOV X20, X0
	0x033EA360 TBNZ X8, 0x0, 0x33EA378
	0x033EA364 ADRP X0, 0xD0B000
	0x033EA368 LDR X0, [X0 + 0x570]
	0x033EA36C BL 0x1C16CF4
	0x033EA370 MOVZ W8, 0x1
	0x033EA374 STRB W8, [X21 + 0x40B]
	0x033EA378 LDR X0, [X22]
	0x033EA37C LDR W8, [X0 + 0xE0]
	0x033EA380 CBNZ W8, 0x33EA388
	0x033EA384 BL 0x1C16DFC
	0x033EA388 ADD X0, X31, 0x8
	0x033EA38C MOV X1, X31
	0x033EA390 BL 0x3394200
	0x033EA394 MOVZ X9, 0x7FF00000
	0x033EA398 FMOV D1, X9
	0x033EA39C FCVTZS X8, D0
	0x033EA3A0 MOVZ X10, 0x80000000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xFF4000
	007 Move X21, 0xD44000
	008 Move W8, [X20+1015]
	009 Move X21, [X21+1112]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD44000
	016 Move X0, [X0+1112]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1015], W8
	020 Move X0, [X21]
	021 Move W1, 32
	022 Call 0x1C17D6C
	023 Move X20, X0
	024 Call 0x1C17D44
	025 Move [X19+16], X20
	026 Call 0x1C17D44
	027 Move W8, 31
	028 Add X0, X31, 8
	029 Move W1, W31
	030 Move X2, X31
	031 Move [X19+24], W8
	032 Move [X31+8], W31
	033 Call SpinLock..ctor, X0, X1
	034 Move W8, [X31+8]
	035 Move X0, X19
	036 Move X1, X31
	037 Move [X19+36], W8
	038 Call Object..ctor, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+16]
	042 Move X21, [X31+24]
	043 Add X31, X31, 48
	044 Return 

