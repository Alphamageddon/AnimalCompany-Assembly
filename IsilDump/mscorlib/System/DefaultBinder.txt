Type: System.DefaultBinder

Method: System.Reflection.MethodBase BindToMethod(System.Reflection.BindingFlags bindingAttr, System.Reflection.MethodBase[] match, ref System.Object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo cultureInfo, System.String[] names, out System.Object state)

Disassembly:
	0x033A9E8C ADD X12, X19, 0x1
	0x033A9E90 CMP X12, W8, UXTW
	0x033A9E94 B.CS 0x33A9F8C
	0x033A9E98 AND X8, X10, 0x0
	0x033A9E9C CMP X12, X8
	0x033A9EA0 B.CS 0x33A9F8C
	0x033A9EA4 AND X8, X11, 0x0
	0x033A9EA8 CMP X12, X8
	0x033A9EAC B.CS 0x33A9F8C
	0x033A9EB0 ADD X8, X27, X9, 0x3, LSL
	0x033A9EB4 ADRP X11, 0xD82000
	0x033A9EB8 LDR X11, [X11 + 0x538]
	0x033A9EBC LDR X24, [X8 + 0x20]
	0x033A9EC0 LDR X8, [X31 + 0x28]
	0x033A9EC4 ADD X10, X23, X9, 0x3, LSL
	0x033A9EC8 ADD X9, X21, X9, 0x3, LSL
	0x033A9ECC LDR X0, [X11]
	0x033A9ED0 LDR X28, [X8, X19, LSL #3]
	0x033A9ED4 LDR X8, [X31 + 0x48]
	0x033A9ED8 LDR X20, [X9 + 0x20]
	0x033A9EDC LDR X21, [X10 + 0x20]
	0x033A9EE0 LDR X27, [X8, X19, LSL #3]
	0x033A9EE4 LDP X8, X9, [X31 + 0x50]
	0x033A9EE8 LDR X25, [X8, X19, LSL #3]
	0x033A9EEC LDR W8, [X0 + 0xE0]
	0x033A9EF0 LDR X22, [X9]
	0x033A9EF4 CBNZ W8, 0x33A9EFC
	0x033A9EF8 BL 0x1C16DFC
	0x033A9EFC MOV X0, X24
	0x033A9F00 MOV X1, X21
	0x033A9F04 MOV X2, X20
	0x033A9F08 MOV X3, X28
	0x033A9F0C MOV X4, X27
	0x033A9F10 MOV X5, X25
	0x033A9F14 MOV X6, X26
	0x033A9F18 MOV X7, X22
	0x033A9F1C BL 0x33AB214
	0x033A9F20 CBZ W0, 0x33A9F4C
	0x033A9F24 ADRP X22, 0xD4A000
	0x033A9F28 LDR X28, [X31 + 0x58]
	0x033A9F2C LDP X21, X27, [X31 + 0x30]
	0x033A9F30 LDR X22, [X22 + 0x6C0]
	0x033A9F34 LDR X9, [X31 + 0x20]
	0x033A9F38 CMP W0, 0x2
	0x033A9F3C B.NE 0x33A9F68
	0x033A9F40 ADD W29, W19, 0x1
	0x033A9F44 STR W31, [X31 + 0x1C]
	0x033A9F48 B 0x33A9F68
	0x033A9F4C MOVZ W8, 0x1
	0x033A9F50 STR W8, [X31 + 0x1C]
	0x033A9F54 ADRP X22, 0xD4A000
	0x033A9F58 LDR X28, [X31 + 0x58]
	0x033A9F5C LDP X21, X27, [X31 + 0x30]
	0x033A9F60 LDR X22, [X22 + 0x6C0]
	0x033A9F64 LDR X9, [X31 + 0x20]
	0x033A9F68 LDR X8, [X31 + 0x40]
	0x033A9F6C CMP X8, X19
	0x033A9F70 B.EQ 0x33AA040
	0x033A9F74 LDR X10, [X27 + 0x18]
	0x033A9F78 SXTW X9, W29
	0x033A9F7C ADD X19, X19, 0x1
	0x033A9F80 AND X8, X10, 0x0
	0x033A9F84 CMP W29, W10
	0x033A9F88 B.CC 0x33A9E6C
	0x033A9F8C BL 0x1C16F28
	0x033A9F90 LDR X9, [X31 + 0x20]
	0x033A9F94 CBZ X9, 0x33AA178
	0x033A9F98 LDR X20, [X31 + 0x30]
	0x033A9F9C CBZ X23, 0x33A9190
	0x033A9FA0 LDR W8, [X23 + 0x18]
	0x033A9FA4 CBZ W8, 0x33A9F8C
	0x033A9FA8 LDR X0, [X23 + 0x20]
	0x033A9FAC CBZ X0, 0x33A9190
	0x033A9FB0 MOV X1, X31
	0x033A9FB4 BL 0x33A01F0
	0x033A9FB8 LDR X19, [X28]
	0x033A9FBC CBZ X19, 0x33A9190
	0x033A9FC0 CBZ X20, 0x33A9190
	0x033A9FC4 LDR W8, [X20 + 0x18]
	0x033A9FC8 CBZ W8, 0x33A9F8C
	0x033A9FCC MOV X24, X0
	0x033A9FD0 LDR X0, [X22]
	0x033A9FD4 LDR X21, [X20 + 0x20]
	0x033A9FD8 LDR W8, [X0 + 0xE0]
	0x033A9FDC CBNZ W8, 0x33A9FE4
	0x033A9FE0 BL 0x1C16DFC
	0x033A9FE4 MOV X0, X21
	0x033A9FE8 MOV X1, X31
	0x033A9FEC MOV X2, X31
	0x033A9FF0 BL 0x3395F0C
	0x033A9FF4 ADRP X8, 0xD82000
	0x033A9FF8 LDR X8, [X8 + 0xD98]
	0x033A9FFC MOV W25, W0
	0x033AA000 LDR X8, [X8]
	0x033AA004 MOV X0, X8
	0x033AA008 BL 0x1C16F10
	0x033AA00C MOV X22, X0
	0x033AA010 CBZ X24, 0x33AA114
	0x033AA014 ADRP X8, 0xD4A000
	0x033AA018 LDR X8, [X8 + 0xE58]
	0x033AA01C MOV X0, X24
	0x033AA020 LDR X26, [X8]
	0x033AA024 MOV X1, X26
	0x033AA028 BL 0x1C16E00
	0x033AA02C MOV X21, X0
	0x033AA030 CBNZ X0, 0x33AA118
	0x033AA034 B 0x33AA0FC
	0x033AA038 MOV W29, W31
	0x033AA03C B 0x33AA048
	0x033AA040 LDR W8, [X31 + 0x1C]
	0x033AA044 TBNZ X8, 0x0, 0x33AAD00
	0x033AA048 CBZ X9, 0x33AA108
	0x033AA04C CBZ X23, 0x33A9190
	0x033AA050 LDR W8, [X23 + 0x18]
	0x033AA054 CMP W29, W8
	0x033AA058 B.CS 0x33A9F8C
	0x033AA05C MOV W8, W29
	0x033AA060 SXTW X19, W8
	0x033AA064 ADD X20, X23, X19, 0x3, LSL
	0x033AA068 LDR X0, [X20 + 0x20]!
	0x033AA06C CBZ X0, 0x33A9190
	0x033AA070 MOV X1, X31
	0x033AA074 BL 0x33A01F0
	0x033AA078 LDR X27, [X28]
	0x033AA07C CBZ X27, 0x33A9190
	0x033AA080 CBZ X21, 0x33A9190
	0x033AA084 LDR W8, [X21 + 0x18]
	0x033AA088 CMP W29, W8
	0x033AA08C B.CS 0x33A9F8C
	0x033AA090 MOV X24, X0
	0x033AA094 LDR X0, [X22]
	0x033AA098 ADD X8, X21, X19, 0x3, LSL
	0x033AA09C LDR X21, [X8 + 0x20]
	0x033AA0A0 LDR W9, [X0 + 0xE0]
	0x033AA0A4 CBNZ W9, 0x33AA0AC
	0x033AA0A8 BL 0x1C16DFC
	0x033AA0AC MOV X0, X21
	0x033AA0B0 MOV X1, X31
	0x033AA0B4 MOV X2, X31
	0x033AA0B8 BL 0x3395F0C
	0x033AA0BC ADRP X8, 0xD81000
	0x033AA0C0 LDR X8, [X8 + 0xD98]
	0x033AA0C4 MOV W25, W0
	0x033AA0C8 LDR X8, [X8]
	0x033AA0CC MOV X0, X8
	0x033AA0D0 BL 0x1C16F10
	0x033AA0D4 MOV X22, X0
	0x033AA0D8 CBZ X24, 0x33AA608
	0x033AA0DC ADRP X8, 0xD4A000
	0x033AA0E0 LDR X8, [X8 + 0xE58]
	0x033AA0E4 MOV X0, X24
	0x033AA0E8 LDR X26, [X8]
	0x033AA0EC MOV X1, X26
	0x033AA0F0 BL 0x1C16E00
	0x033AA0F4 MOV X21, X0
	0x033AA0F8 CBNZ X0, 0x33AA60C
	0x033AA0FC MOV X0, X24
	0x033AA100 MOV X1, X26
	0x033AA104 BL 0x1C171E0
	0x033AA108 MOV W8, W29
	0x033AA10C SXTW X19, W8
	0x033AA110 B 0x33AA670
	0x033AA114 MOV X21, X31
	0x033AA118 LDR X19, [X19 + 0x18]
	0x033AA11C MOV X0, X22
	0x033AA120 MOV X1, X31
	0x033AA124 AND W20, W25, 0x1
	0x033AA128 BL 0x33BDD8C
	0x033AA12C LDR X8, [X31 + 0x10]
	0x033AA130 STR X21, [X22 + 0x10]
	0x033AA134 STR W19, [X22 + 0x18]
	0x033AA138 STRB W20, [X22 + 0x1C]
	0x033AA13C STR X22, [X8]
	0x033AA140 LDR W8, [X23 + 0x18]
	0x033AA144 CBZ W8, 0x33A9F8C
	0x033AA148 ADRP X8, 0xD81000
	0x033AA14C LDR X8, [X8 + 0x538]
	0x033AA150 LDR X21, [X23 + 0x20]
	0x033AA154 LDR X22, [X28]
	0x033AA158 LDR X0, [X8]
	0x033AA15C LDR W8, [X0 + 0xE0]
	0x033AA160 CBNZ W8, 0x33AA168
	0x033AA164 BL 0x1C16DFC
	0x033AA168 MOV X0, X21
	0x033AA16C MOV X1, X22
	0x033AA170 BL 0x33AB0C4
	0x033AA174 LDR X8, [X27 + 0x18]
	0x033AA178 CBZ W8, 0x33A9F8C
	0x033AA17C MOV X25, X27
	0x033AA180 LDR X0, [X25 + 0x20]!
	0x033AA184 CBZ X0, 0x33A9190
	0x033AA188 LDR X8, [X0]
	0x033AA18C LDR X9, [X8 + 0x398]
	0x033AA190 LDR X1, [X8 + 0x3A0]
	0x033AA194 BLR X9
	0x033AA198 CBZ X0, 0x33A9190
	0x033AA19C LDR X8, [X28]
	0x033AA1A0 CBZ X8, 0x33A9190
	0x033AA1A4 LDR W1, [X0 + 0x18]
	0x033AA1A8 LDR W8, [X8 + 0x18]
	0x033AA1AC MOV X22, X0
	0x033AA1B0 CMP W1, W8
	0x033AA1B4 B.NE 0x33AA31C
	0x033AA1B8 LDR X9, [X31 + 0x30]
	0x033AA1BC CBZ X9, 0x33A9190
	0x033AA1C0 LDR W8, [X9 + 0x18]
	0x033AA1C4 CBZ W8, 0x33A9F8C
	0x033AA1C8 ADRP X8, 0xD49000
	0x033AA1CC LDR X8, [X8 + 0x6C0]
	0x033AA1D0 LDR X21, [X9 + 0x20]
	0x033AA1D4 LDR X0, [X8]
	0x033AA1D8 LDR W8, [X0 + 0xE0]
	0x033AA1DC CBNZ W8, 0x33AA1E4
	0x033AA1E0 BL 0x1C16DFC
	0x033AA1E4 MOV X0, X21
	0x033AA1E8 MOV X1, X31
	0x033AA1EC MOV X2, X31
	0x033AA1F0 BL 0x3395F0C
	0x033AA1F4 TBZ X0, 0x0, 0x33AAB8C
	0x033AA1F8 ADRP X8, 0xD49000
	0x033AA1FC LDR X8, [X8 + 0x9D0]
	0x033AA200 LDR W1, [X22 + 0x18]
	0x033AA204 LDR X0, [X8]
	0x033AA208 BL 0x1C16D6C
	0x033AA20C LDR W8, [X22 + 0x18]
	0x033AA210 MOV X23, X0
	0x033AA214 LDR X0, [X28]
	0x033AA218 MOV W1, W31
	0x033AA21C SUB W22, W8, 0x1
	0x033AA220 MOV X2, X23
	0x033AA224 MOV W3, W31
	0x033AA228 MOV W4, W22
	0x033AA22C MOV X5, X31
	0x033AA230 BL 0x339FCE8
	0x033AA234 LDR X9, [X31 + 0x30]
	0x033AA238 LDR W8, [X9 + 0x18]
	0x033AA23C CBZ W8, 0x33A9F8C
	0x033AA240 ADRP X8, 0xD4A000
	0x033AA244 LDR X21, [X9 + 0x20]
	0x033AA248 LDR X8, [X8 + 0xE58]
	0x033AA24C MOVZ W1, 0x1
	0x033AA250 LDR X0, [X8]
	0x033AA254 BL 0x1C16D6C
	0x033AA258 CBZ X0, 0x33A9190
	0x033AA25C LDR W8, [X0 + 0x18]
	0x033AA260 MOV X1, X0
	0x033AA264 CBZ W8, 0x33A9F8C
	0x033AA268 MOVZ W8, 0x1
	0x033AA26C MOV X0, X21
	0x033AA270 MOV X2, X31
	0x033AA274 STR W8, [X1 + 0x20]
	0x033AA278 BL 0x33A2DF4
	0x033AA27C CBZ X23, 0x33A9190
	0x033AA280 MOV X21, X0
	0x033AA284 CBZ X0, 0x33AA29C
	0x033AA288 LDR X8, [X23]
	0x033AA28C MOV X0, X21
	0x033AA290 LDR X1, [X8 + 0x40]
	0x033AA294 BL 0x1C16E00
	0x033AA298 CBZ X0, 0x33AAC28
	0x033AA29C LDR W8, [X23 + 0x18]
	0x033AA2A0 CMP W22, W8
	0x033AA2A4 B.CS 0x33A9F8C
	0x033AA2A8 SXTW X8, W22
	0x033AA2AC ADD X9, X23, X8, 0x3, LSL
	0x033AA2B0 STR X21, [X9 + 0x20]
	0x033AA2B4 LDR X9, [X28]
	0x033AA2B8 CBZ X9, 0x33A9190
	0x033AA2BC LDR W10, [X9 + 0x18]
	0x033AA2C0 CMP W22, W10
	0x033AA2C4 B.CS 0x33A9F8C
	0x033AA2C8 CBZ X21, 0x33A9190
	0x033AA2CC ADRP X11, 0xD49000
	0x033AA2D0 LDR X11, [X11 + 0xEF0]
	0x033AA2D4 LDR X10, [X21]
	0x033AA2D8 LDR X1, [X11]
	0x033AA2DC LDRB W12, [X10 + 0x130]
	0x033AA2E0 LDRB W11, [X1 + 0x130]
	0x033AA2E4 CMP W12, W11
	0x033AA2E8 B.CC 0x33AACF8
	0x033AA2EC LDR X10, [X10 + 0xC8]
	0x033AA2F0 ADD X10, X10, X11, 0x3, LSL
	0x033AA2F4 LDUR X10, [X10 - 0x8]
	0x033AA2F8 CMP X10, X1
	0x033AA2FC B.NE 0x33AACF8
	0x033AA300 ADD X8, X9, X8, 0x3, LSL
	0x033AA304 LDR X1, [X8 + 0x20]
	0x033AA308 MOV X0, X21
	0x033AA30C MOV W2, W31
	0x033AA310 MOV X3, X31
	0x033AA314 BL 0x339F798
	0x033AA318 B 0x33AAB88
	0x033AA31C B.LE 0x33AA39C
	0x033AA320 ADRP X8, 0xD49000
	0x033AA324 LDR X8, [X8 + 0x9D0]
	0x033AA328 LDR X0, [X8]
	0x033AA32C BL 0x1C16D6C
	0x033AA330 LDR X8, [X28]
	0x033AA334 CBZ X8, 0x33A9190
	0x033AA338 MOV X23, X0
	0x033AA33C MOV X19, X31
	0x033AA340 ADD X20, X0, 0x20
	0x033AA344 LDR W9, [X8 + 0x18]
	0x033AA348 CMP X19, W9, SXTW
	0x033AA34C B.GE 0x33AA4E8
	0x033AA350 CMP X19, X9
	0x033AA354 B.CS 0x33A9F8C
	0x033AA358 CBZ X23, 0x33A9190
	0x033AA35C ADD X8, X8, X19, 0x3, LSL
	0x033AA360 LDR X24, [X8 + 0x20]
	0x033AA364 CBZ X24, 0x33AA37C
	0x033AA368 LDR X8, [X23]
	0x033AA36C MOV X0, X24
	0x033AA370 LDR X1, [X8 + 0x40]
	0x033AA374 BL 0x1C16E00
	0x033AA378 CBZ X0, 0x33AAC28
	0x033AA37C LDR W8, [X23 + 0x18]
	0x033AA380 CMP X19, X8
	0x033AA384 B.CS 0x33A9F8C
	0x033AA388 STR X24, [X20, X19, LSL #3]
	0x033AA38C LDR X8, [X28]
	0x033AA390 ADD X19, X19, 0x1
	0x033AA394 CBNZ X8, 0x33AA344
	0x033AA398 B 0x33A9190
	0x033AA39C LDR W8, [X27 + 0x18]
	0x033AA3A0 CBZ W8, 0x33A9F8C
	0x033AA3A4 LDR X0, [X25]
	0x033AA3A8 CBZ X0, 0x33A9190
	0x033AA3AC LDR X8, [X0]
	0x033AA3B0 LDR X9, [X8 + 0x278]
	0x033AA3B4 LDR X1, [X8 + 0x280]
	0x033AA3B8 BLR X9
	0x033AA3BC TBNZ X0, 0x1, 0x33AAB8C
	0x033AA3C0 ADRP X8, 0xD49000
	0x033AA3C4 LDR X8, [X8 + 0x9D0]
	0x033AA3C8 LDR W1, [X22 + 0x18]
	0x033AA3CC LDR X0, [X8]
	0x033AA3D0 BL 0x1C16D6C
	0x033AA3D4 LDR W8, [X22 + 0x18]
	0x033AA3D8 MOV X23, X0
	0x033AA3DC LDR X0, [X28]
	0x033AA3E0 MOV W1, W31
	0x033AA3E4 SUB W22, W8, 0x1
	0x033AA3E8 MOV X2, X23
	0x033AA3EC MOV W3, W31
	0x033AA3F0 MOV W4, W22
	0x033AA3F4 MOV X5, X31
	0x033AA3F8 BL 0x339FCE8
	0x033AA3FC LDR X9, [X31 + 0x30]
	0x033AA400 CBZ X9, 0x33A9190
	0x033AA404 LDR W8, [X9 + 0x18]
	0x033AA408 CBZ W8, 0x33A9F8C
	0x033AA40C ADRP X8, 0xD4A000
	0x033AA410 LDR X21, [X9 + 0x20]
	0x033AA414 LDR X8, [X8 + 0xE58]
	0x033AA418 MOVZ W1, 0x1
	0x033AA41C LDR X0, [X8]
	0x033AA420 BL 0x1C16D6C
	0x033AA424 LDR X8, [X28]
	0x033AA428 CBZ X8, 0x33A9190
	0x033AA42C MOV X1, X0
	0x033AA430 CBZ X0, 0x33A9190
	0x033AA434 LDR W9, [X1 + 0x18]
	0x033AA438 CBZ W9, 0x33A9F8C
	0x033AA43C LDR W8, [X8 + 0x18]
	0x033AA440 MOV X0, X21
	0x033AA444 MOV X2, X31
	0x033AA448 SUB W8, W8, W22
	0x033AA44C STR W8, [X1 + 0x20]
	0x033AA450 BL 0x33A2DF4
	0x033AA454 CBZ X23, 0x33A9190
	0x033AA458 MOV X21, X0
	0x033AA45C CBZ X0, 0x33AA474
	0x033AA460 LDR X8, [X23]
	0x033AA464 MOV X0, X21
	0x033AA468 LDR X1, [X8 + 0x40]
	0x033AA46C BL 0x1C16E00
	0x033AA470 CBZ X0, 0x33AAC28
	0x033AA474 LDR W8, [X23 + 0x18]
	0x033AA478 CMP W22, W8
	0x033AA47C B.CS 0x33A9F8C
	0x033AA480 ADD X8, X23, W22, 0x3, SXTW
	0x033AA484 STR X21, [X8 + 0x20]
	0x033AA488 LDR X0, [X28]
	0x033AA48C CBZ X0, 0x33A9190
	0x033AA490 CBZ X21, 0x33AA4C8
	0x033AA494 ADRP X9, 0xD49000
	0x033AA498 LDR X9, [X9 + 0xEF0]
	0x033AA49C LDR X8, [X21]
	0x033AA4A0 LDR X1, [X9]
	0x033AA4A4 LDRB W10, [X8 + 0x130]
	0x033AA4A8 LDRB W9, [X1 + 0x130]
	0x033AA4AC CMP W10, W9
	0x033AA4B0 B.CC 0x33AACF8
	0x033AA4B4 LDR X8, [X8 + 0xC8]
	0x033AA4B8 ADD X8, X8, X9, 0x3, LSL
	0x033AA4BC LDUR X8, [X8 - 0x8]
	0x033AA4C0 CMP X8, X1
	0x033AA4C4 B.NE 0x33AACF8
	0x033AA4C8 LDR W8, [X0 + 0x18]
	0x033AA4CC MOV W1, W22
	0x033AA4D0 MOV X2, X21
	0x033AA4D4 MOV W3, W31
	0x033AA4D8 SUB W4, W8, W22
	0x033AA4DC MOV X5, X31
	0x033AA4E0 BL 0x339FCE8
	0x033AA4E4 B 0x33AAB88
	0x033AA4E8 LDR W8, [X22 + 0x18]
	0x033AA4EC SUB W9, W8, 0x1
	0x033AA4F0 CMP W9, W19
	0x033AA4F4 B.LE 0x33AA560
	0x033AA4F8 ADD X20, X23, 0x20
	0x033AA4FC ADD X21, X22, 0x20
	0x033AA500 CMP W19, W8
	0x033AA504 B.CS 0x33A9F8C
	0x033AA508 LDR X0, [X21, X19, LSL #3]
	0x033AA50C CBZ X0, 0x33A9190
	0x033AA510 LDR X8, [X0]
	0x033AA514 LDP X9, X1, [X8 + 0x1F8]
	0x033AA518 BLR X9
	0x033AA51C CBZ X23, 0x33A9190
	0x033AA520 MOV X24, X0
	0x033AA524 CBZ X0, 0x33AA53C
	0x033AA528 LDR X8, [X23]
	0x033AA52C MOV X0, X24
	0x033AA530 LDR X1, [X8 + 0x40]
	0x033AA534 BL 0x1C16E00
	0x033AA538 CBZ X0, 0x33AAC28
	0x033AA53C LDR W8, [X23 + 0x18]
	0x033AA540 CMP W19, W8
	0x033AA544 B.CS 0x33A9F8C
	0x033AA548 STR X24, [X20, X19, LSL #3]
	0x033AA54C LDR W8, [X22 + 0x18]
	0x033AA550 ADD X19, X19, 0x1
	0x033AA554 SUB W9, W8, 0x1
	0x033AA558 CMP W19, W9
	0x033AA55C B.LT 0x33AA500
	0x033AA560 LDR X9, [X31 + 0x30]
	0x033AA564 CBZ X9, 0x33A9190
	0x033AA568 LDR W8, [X9 + 0x18]
	0x033AA56C CBZ W8, 0x33A9F8C
	0x033AA570 ADRP X8, 0xD49000
	0x033AA574 LDR X8, [X8 + 0x6C0]
	0x033AA578 LDR X21, [X9 + 0x20]
	0x033AA57C LDR X0, [X8]
	0x033AA580 LDR W8, [X0 + 0xE0]
	0x033AA584 CBNZ W8, 0x33AA58C
	0x033AA588 BL 0x1C16DFC
	0x033AA58C MOV X0, X21
	0x033AA590 MOV X1, X31
	0x033AA594 MOV X2, X31
	0x033AA598 BL 0x3395F0C
	0x033AA59C TBZ X0, 0x0, 0x33AAB2C
	0x033AA5A0 LDR X9, [X31 + 0x30]
	0x033AA5A4 LDR W8, [X9 + 0x18]
	0x033AA5A8 CBZ W8, 0x33A9F8C
	0x033AA5AC ADRP X8, 0xD4A000
	0x033AA5B0 LDR X21, [X9 + 0x20]
	0x033AA5B4 LDR X8, [X8 + 0xE58]
	0x033AA5B8 MOVZ W1, 0x1
	0x033AA5BC LDR X0, [X8]
	0x033AA5C0 BL 0x1C16D6C
	0x033AA5C4 MOV X1, X0
	0x033AA5C8 MOV X0, X21
	0x033AA5CC MOV X2, X31
	0x033AA5D0 BL 0x33A2DF4
	0x033AA5D4 CBZ X23, 0x33A9190
	0x033AA5D8 MOV X21, X0
	0x033AA5DC CBZ X0, 0x33AA5F4
	0x033AA5E0 LDR X8, [X23]
	0x033AA5E4 MOV X0, X21
	0x033AA5E8 LDR X1, [X8 + 0x40]
	0x033AA5EC BL 0x1C16E00
	0x033AA5F0 CBZ X0, 0x33AAC28
	0x033AA5F4 LDR W8, [X23 + 0x18]
	0x033AA5F8 CMP W19, W8
	0x033AA5FC B.CS 0x33A9F8C
	0x033AA600 SXTW X20, W19
	0x033AA604 B 0x33AAB80
	0x033AA608 MOV X21, X31
	0x033AA60C LDR X24, [X27 + 0x18]
	0x033AA610 MOV X0, X22
	0x033AA614 MOV X1, X31
	0x033AA618 AND W25, W25, 0x1
	0x033AA61C BL 0x33BDD8C
	0x033AA620 LDR X8, [X31 + 0x10]
	0x033AA624 STR X21, [X22 + 0x10]
	0x033AA628 STR W24, [X22 + 0x18]
	0x033AA62C STRB W25, [X22 + 0x1C]
	0x033AA630 STR X22, [X8]
	0x033AA634 LDR W8, [X23 + 0x18]
	0x033AA638 CMP W29, W8
	0x033AA63C B.CS 0x33A9F8C
	0x033AA640 ADRP X8, 0xD81000
	0x033AA644 LDR X8, [X8 + 0x538]
	0x033AA648 LDR X21, [X20]
	0x033AA64C LDR X22, [X28]
	0x033AA650 LDR X27, [X31 + 0x38]
	0x033AA654 LDR X0, [X8]
	0x033AA658 LDR W8, [X0 + 0xE0]
	0x033AA65C CBNZ W8, 0x33AA664
	0x033AA660 BL 0x1C16DFC
	0x033AA664 MOV X0, X21
	0x033AA668 MOV X1, X22
	0x033AA66C BL 0x33AB0C4
	0x033AA670 LDR W8, [X27 + 0x18]
	0x033AA674 CMP W29, W8
	0x033AA678 B.CS 0x33A9F8C
	0x033AA67C ADD X25, X27, X19, 0x3, LSL
	0x033AA680 LDR X0, [X25 + 0x20]!
	0x033AA684 CBZ X0, 0x33A9190
	0x033AA688 LDR X8, [X0]
	0x033AA68C LDR X9, [X8 + 0x398]
	0x033AA690 LDR X1, [X8 + 0x3A0]
	0x033AA694 BLR X9
	0x033AA698 CBZ X0, 0x33A9190
	0x033AA69C LDR X8, [X28]
	0x033AA6A0 CBZ X8, 0x33A9190
	0x033AA6A4 LDR W1, [X0 + 0x18]
	0x033AA6A8 LDR W8, [X8 + 0x18]
	0x033AA6AC MOV X22, X0
	0x033AA6B0 CMP W1, W8
	0x033AA6B4 B.NE 0x33AA828
	0x033AA6B8 LDR X9, [X31 + 0x30]
	0x033AA6BC CBZ X9, 0x33A9190
	0x033AA6C0 LDR W8, [X9 + 0x18]
	0x033AA6C4 CMP W29, W8
	0x033AA6C8 B.CS 0x33A9F8C
	0x033AA6CC ADD X19, X9, X19, 0x3, LSL
	0x033AA6D0 ADRP X8, 0xD49000
	0x033AA6D4 LDR X21, [X19 + 0x20]!
	0x033AA6D8 LDR X8, [X8 + 0x6C0]
	0x033AA6DC LDR X0, [X8]
	0x033AA6E0 LDR W8, [X0 + 0xE0]
	0x033AA6E4 CBNZ W8, 0x33AA6EC
	0x033AA6E8 BL 0x1C16DFC
	0x033AA6EC MOV X0, X21
	0x033AA6F0 MOV X1, X31
	0x033AA6F4 MOV X2, X31
	0x033AA6F8 BL 0x3395F0C
	0x033AA6FC TBZ X0, 0x0, 0x33AABF8
	0x033AA700 ADRP X8, 0xD49000
	0x033AA704 LDR X8, [X8 + 0x9D0]
	0x033AA708 LDR W1, [X22 + 0x18]
	0x033AA70C LDR X0, [X8]
	0x033AA710 BL 0x1C16D6C
	0x033AA714 LDR W8, [X22 + 0x18]
	0x033AA718 MOV X23, X0
	0x033AA71C LDR X0, [X28]
	0x033AA720 MOV W1, W31
	0x033AA724 SUB W22, W8, 0x1
	0x033AA728 MOV X2, X23
	0x033AA72C MOV W3, W31
	0x033AA730 MOV W4, W22
	0x033AA734 MOV X5, X31
	0x033AA738 BL 0x339FCE8
	0x033AA73C LDR X8, [X31 + 0x30]
	0x033AA740 LDR W8, [X8 + 0x18]
	0x033AA744 CMP W29, W8
	0x033AA748 B.CS 0x33A9F8C
	0x033AA74C ADRP X8, 0xD4A000
	0x033AA750 LDR X21, [X19]
	0x033AA754 LDR X8, [X8 + 0xE58]
	0x033AA758 MOVZ W1, 0x1
	0x033AA75C LDR X0, [X8]
	0x033AA760 BL 0x1C16D6C
	0x033AA764 CBZ X0, 0x33A9190
	0x033AA768 LDR W8, [X0 + 0x18]
	0x033AA76C MOV X1, X0
	0x033AA770 CBZ W8, 0x33A9F8C
	0x033AA774 MOVZ W8, 0x1
	0x033AA778 MOV X0, X21
	0x033AA77C MOV X2, X31
	0x033AA780 STR W8, [X1 + 0x20]
	0x033AA784 BL 0x33A2DF4
	0x033AA788 CBZ X23, 0x33A9190
	0x033AA78C MOV X21, X0
	0x033AA790 CBZ X0, 0x33AA7A8
	0x033AA794 LDR X8, [X23]
	0x033AA798 MOV X0, X21
	0x033AA79C LDR X1, [X8 + 0x40]
	0x033AA7A0 BL 0x1C16E00
	0x033AA7A4 CBZ X0, 0x33AAC28
	0x033AA7A8 LDR W8, [X23 + 0x18]
	0x033AA7AC CMP W22, W8
	0x033AA7B0 B.CS 0x33A9F8C
	0x033AA7B4 SXTW X8, W22
	0x033AA7B8 ADD X9, X23, X8, 0x3, LSL
	0x033AA7BC STR X21, [X9 + 0x20]
	0x033AA7C0 LDR X9, [X28]
	0x033AA7C4 CBZ X9, 0x33A9190
	0x033AA7C8 LDR W10, [X9 + 0x18]
	0x033AA7CC CMP W22, W10
	0x033AA7D0 B.CS 0x33A9F8C
	0x033AA7D4 CBZ X21, 0x33A9190
	0x033AA7D8 ADRP X11, 0xD49000
	0x033AA7DC LDR X11, [X11 + 0xEF0]
	0x033AA7E0 LDR X10, [X21]
	0x033AA7E4 LDR X1, [X11]
	0x033AA7E8 LDRB W12, [X10 + 0x130]
	0x033AA7EC LDRB W11, [X1 + 0x130]
	0x033AA7F0 CMP W12, W11
	0x033AA7F4 B.CC 0x33AACF8
	0x033AA7F8 LDR X10, [X10 + 0xC8]
	0x033AA7FC ADD X10, X10, X11, 0x3, LSL
	0x033AA800 LDUR X10, [X10 - 0x8]
	0x033AA804 CMP X10, X1
	0x033AA808 B.NE 0x33AACF8
	0x033AA80C ADD X8, X9, X8, 0x3, LSL
	0x033AA810 LDR X1, [X8 + 0x20]
	0x033AA814 MOV X0, X21
	0x033AA818 MOV W2, W31
	0x033AA81C MOV X3, X31
	0x033AA820 BL 0x339F798
	0x033AA824 B 0x33AABF4
	0x033AA828 B.LE 0x33AA8A8
	0x033AA82C ADRP X8, 0xD49000
	0x033AA830 LDR X8, [X8 + 0x9D0]
	0x033AA834 LDR X0, [X8]
	0x033AA838 BL 0x1C16D6C
	0x033AA83C LDR X8, [X28]
	0x033AA840 CBZ X8, 0x33A9190
	0x033AA844 MOV X23, X0
	0x033AA848 MOV X20, X31
	0x033AA84C ADD X21, X0, 0x20
	0x033AA850 LDR W9, [X8 + 0x18]
	0x033AA854 CMP X20, W9, SXTW
	0x033AA858 B.GE 0x33AAA00
	0x033AA85C CMP X20, X9
	0x033AA860 B.CS 0x33A9F8C
	0x033AA864 CBZ X23, 0x33A9190
	0x033AA868 ADD X8, X8, X20, 0x3, LSL
	0x033AA86C LDR X24, [X8 + 0x20]
	0x033AA870 CBZ X24, 0x33AA888
	0x033AA874 LDR X8, [X23]
	0x033AA878 MOV X0, X24
	0x033AA87C LDR X1, [X8 + 0x40]
	0x033AA880 BL 0x1C16E00
	0x033AA884 CBZ X0, 0x33AAC28
	0x033AA888 LDR W8, [X23 + 0x18]
	0x033AA88C CMP X20, X8
	0x033AA890 B.CS 0x33A9F8C
	0x033AA894 STR X24, [X21, X20, LSL #3]
	0x033AA898 LDR X8, [X28]
	0x033AA89C ADD X20, X20, 0x1
	0x033AA8A0 CBNZ X8, 0x33AA850
	0x033AA8A4 B 0x33A9190
	0x033AA8A8 LDR W8, [X27 + 0x18]
	0x033AA8AC CMP W29, W8
	0x033AA8B0 B.CS 0x33A9F8C
	0x033AA8B4 LDR X0, [X25]
	0x033AA8B8 CBZ X0, 0x33A9190
	0x033AA8BC LDR X8, [X0]
	0x033AA8C0 LDR X9, [X8 + 0x278]
	0x033AA8C4 LDR X1, [X8 + 0x280]
	0x033AA8C8 BLR X9
	0x033AA8CC TBNZ X0, 0x1, 0x33AABF8
	0x033AA8D0 ADRP X8, 0xD49000
	0x033AA8D4 LDR X8, [X8 + 0x9D0]
	0x033AA8D8 LDR W1, [X22 + 0x18]
	0x033AA8DC LDR X0, [X8]
	0x033AA8E0 BL 0x1C16D6C
	0x033AA8E4 LDR W8, [X22 + 0x18]
	0x033AA8E8 MOV X23, X0
	0x033AA8EC LDR X0, [X28]
	0x033AA8F0 MOV W1, W31
	0x033AA8F4 SUB W22, W8, 0x1
	0x033AA8F8 MOV X2, X23
	0x033AA8FC MOV W3, W31
	0x033AA900 MOV W4, W22
	0x033AA904 MOV X5, X31
	0x033AA908 BL 0x339FCE8
	0x033AA90C LDR X9, [X31 + 0x30]
	0x033AA910 CBZ X9, 0x33A9190
	0x033AA914 LDR W8, [X9 + 0x18]
	0x033AA918 CMP W29, W8
	0x033AA91C B.CS 0x33A9F8C
	0x033AA920 ADD X8, X9, X19, 0x3, LSL
	0x033AA924 LDR X21, [X8 + 0x20]
	0x033AA928 ADRP X8, 0xD4A000
	0x033AA92C LDR X8, [X8 + 0xE58]
	0x033AA930 MOVZ W1, 0x1
	0x033AA934 LDR X0, [X8]
	0x033AA938 BL 0x1C16D6C
	0x033AA93C LDR X8, [X28]
	0x033AA940 CBZ X8, 0x33A9190
	0x033AA944 MOV X1, X0
	0x033AA948 CBZ X0, 0x33A9190
	0x033AA94C LDR W9, [X1 + 0x18]
	0x033AA950 CBZ W9, 0x33A9F8C
	0x033AA954 LDR W8, [X8 + 0x18]
	0x033AA958 MOV X0, X21
	0x033AA95C MOV X2, X31
	0x033AA960 SUB W8, W8, W22
	0x033AA964 STR W8, [X1 + 0x20]
	0x033AA968 BL 0x33A2DF4
	0x033AA96C CBZ X23, 0x33A9190
	0x033AA970 MOV X21, X0
	0x033AA974 CBZ X0, 0x33AA98C
	0x033AA978 LDR X8, [X23]
	0x033AA97C MOV X0, X21
	0x033AA980 LDR X1, [X8 + 0x40]
	0x033AA984 BL 0x1C16E00
	0x033AA988 CBZ X0, 0x33AAC28
	0x033AA98C LDR W8, [X23 + 0x18]
	0x033AA990 CMP W22, W8
	0x033AA994 B.CS 0x33A9F8C
	0x033AA998 ADD X8, X23, W22, 0x3, SXTW
	0x033AA99C STR X21, [X8 + 0x20]
	0x033AA9A0 LDR X0, [X28]
	0x033AA9A4 CBZ X0, 0x33A9190
	0x033AA9A8 CBZ X21, 0x33AA9E0
	0x033AA9AC ADRP X9, 0xD49000
	0x033AA9B0 LDR X9, [X9 + 0xEF0]
	0x033AA9B4 LDR X8, [X21]
	0x033AA9B8 LDR X1, [X9]
	0x033AA9BC LDRB W10, [X8 + 0x130]
	0x033AA9C0 LDRB W9, [X1 + 0x130]
	0x033AA9C4 CMP W10, W9
	0x033AA9C8 B.CC 0x33AACF8
	0x033AA9CC LDR X8, [X8 + 0xC8]
	0x033AA9D0 ADD X8, X8, X9, 0x3, LSL
	0x033AA9D4 LDUR X8, [X8 - 0x8]
	0x033AA9D8 CMP X8, X1
	0x033AA9DC B.NE 0x33AACF8
	0x033AA9E0 LDR W8, [X0 + 0x18]
	0x033AA9E4 MOV W1, W22
	0x033AA9E8 MOV X2, X21
	0x033AA9EC MOV W3, W31
	0x033AA9F0 SUB W4, W8, W22
	0x033AA9F4 MOV X5, X31
	0x033AA9F8 BL 0x339FCE8
	0x033AA9FC B 0x33AABF4
	0x033AAA00 LDR W8, [X22 + 0x18]
	0x033AAA04 SUB W9, W8, 0x1
	0x033AAA08 CMP W9, W20
	0x033AAA0C B.LE 0x33AAA78
	0x033AAA10 ADD X21, X23, 0x20
	0x033AAA14 ADD X26, X22, 0x20
	0x033AAA18 CMP W20, W8
	0x033AAA1C B.CS 0x33A9F8C
	0x033AAA20 LDR X0, [X26, X20, LSL #3]
	0x033AAA24 CBZ X0, 0x33A9190
	0x033AAA28 LDR X8, [X0]
	0x033AAA2C LDP X9, X1, [X8 + 0x1F8]
	0x033AAA30 BLR X9
	0x033AAA34 CBZ X23, 0x33A9190
	0x033AAA38 MOV X24, X0
	0x033AAA3C CBZ X0, 0x33AAA54
	0x033AAA40 LDR X8, [X23]
	0x033AAA44 MOV X0, X24
	0x033AAA48 LDR X1, [X8 + 0x40]
	0x033AAA4C BL 0x1C16E00
	0x033AAA50 CBZ X0, 0x33AAC28
	0x033AAA54 LDR W8, [X23 + 0x18]
	0x033AAA58 CMP W20, W8
	0x033AAA5C B.CS 0x33A9F8C
	0x033AAA60 STR X24, [X21, X20, LSL #3]
	0x033AAA64 LDR W8, [X22 + 0x18]
	0x033AAA68 ADD X20, X20, 0x1
	0x033AAA6C SUB W9, W8, 0x1
	0x033AAA70 CMP W20, W9
	0x033AAA74 B.LT 0x33AAA18
	0x033AAA78 LDR X9, [X31 + 0x30]
	0x033AAA7C CBZ X9, 0x33A9190
	0x033AAA80 LDR W8, [X9 + 0x18]
	0x033AAA84 CMP W29, W8
	0x033AAA88 B.CS 0x33A9F8C
	0x033AAA8C ADD X19, X9, X19, 0x3, LSL
	0x033AAA90 ADRP X8, 0xD49000
	0x033AAA94 LDR X21, [X19 + 0x20]!
	0x033AAA98 LDR X8, [X8 + 0x6C0]
	0x033AAA9C LDR X0, [X8]
	0x033AAAA0 LDR W8, [X0 + 0xE0]
	0x033AAAA4 CBNZ W8, 0x33AAAAC
	0x033AAAA8 BL 0x1C16DFC
	0x033AAAAC MOV X0, X21
	0x033AAAB0 MOV X1, X31
	0x033AAAB4 MOV X2, X31
	0x033AAAB8 BL 0x3395F0C
	0x033AAABC TBZ X0, 0x0, 0x33AAB98
	0x033AAAC0 LDR X8, [X31 + 0x30]
	0x033AAAC4 LDR W8, [X8 + 0x18]
	0x033AAAC8 CMP W29, W8
	0x033AAACC B.CS 0x33A9F8C
	0x033AAAD0 ADRP X8, 0xD4A000
	0x033AAAD4 LDR X21, [X19]
	0x033AAAD8 LDR X8, [X8 + 0xE58]
	0x033AAADC MOVZ W1, 0x1
	0x033AAAE0 LDR X0, [X8]
	0x033AAAE4 BL 0x1C16D6C
	0x033AAAE8 MOV X1, X0
	0x033AAAEC MOV X0, X21
	0x033AAAF0 MOV X2, X31
	0x033AAAF4 BL 0x33A2DF4
	0x033AAAF8 CBZ X23, 0x33A9190
	0x033AAAFC MOV X21, X0
	0x033AAB00 CBZ X0, 0x33AAB18
	0x033AAB04 LDR X8, [X23]
	0x033AAB08 MOV X0, X21
	0x033AAB0C LDR X1, [X8 + 0x40]
	0x033AAB10 BL 0x1C16E00
	0x033AAB14 CBZ X0, 0x33AAC28
	0x033AAB18 LDR W8, [X23 + 0x18]
	0x033AAB1C CMP W20, W8
	0x033AAB20 B.CS 0x33A9F8C
	0x033AAB24 SXTW X19, W20
	0x033AAB28 B 0x33AABEC
	0x033AAB2C LDR W8, [X22 + 0x18]
	0x033AAB30 CMP W19, W8
	0x033AAB34 B.CS 0x33A9F8C
	0x033AAB38 SXTW X20, W19
	0x033AAB3C ADD X8, X22, X20, 0x3, LSL
	0x033AAB40 LDR X0, [X8 + 0x20]
	0x033AAB44 CBZ X0, 0x33A9190
	0x033AAB48 LDR X8, [X0]
	0x033AAB4C LDP X9, X1, [X8 + 0x1F8]
	0x033AAB50 BLR X9
	0x033AAB54 CBZ X23, 0x33A9190
	0x033AAB58 MOV X21, X0
	0x033AAB5C CBZ X0, 0x33AAB74
	0x033AAB60 LDR X8, [X23]
	0x033AAB64 MOV X0, X21
	0x033AAB68 LDR X1, [X8 + 0x40]
	0x033AAB6C BL 0x1C16E00
	0x033AAB70 CBZ X0, 0x33AAC28
	0x033AAB74 LDR W8, [X23 + 0x18]
	0x033AAB78 CMP W19, W8
	0x033AAB7C B.CS 0x33A9F8C
	0x033AAB80 ADD X8, X23, X20, 0x3, LSL
	0x033AAB84 STR X21, [X8 + 0x20]
	0x033AAB88 STR X23, [X28]
	0x033AAB8C LDR W8, [X27 + 0x18]
	0x033AAB90 CBNZ W8, 0x33AAC04
	0x033AAB94 B 0x33A9F8C
	0x033AAB98 LDR W8, [X22 + 0x18]
	0x033AAB9C CMP W20, W8
	0x033AABA0 B.CS 0x33A9F8C
	0x033AABA4 SXTW X19, W20
	0x033AABA8 ADD X8, X22, X19, 0x3, LSL
	0x033AABAC LDR X0, [X8 + 0x20]
	0x033AABB0 CBZ X0, 0x33A9190
	0x033AABB4 LDR X8, [X0]
	0x033AABB8 LDP X9, X1, [X8 + 0x1F8]
	0x033AABBC BLR X9
	0x033AABC0 CBZ X23, 0x33A9190
	0x033AABC4 MOV X21, X0
	0x033AABC8 CBZ X0, 0x33AABE0
	0x033AABCC LDR X8, [X23]
	0x033AABD0 MOV X0, X21
	0x033AABD4 LDR X1, [X8 + 0x40]
	0x033AABD8 BL 0x1C16E00
	0x033AABDC CBZ X0, 0x33AAC28
	0x033AABE0 LDR W8, [X23 + 0x18]
	0x033AABE4 CMP W20, W8
	0x033AABE8 B.CS 0x33A9F8C
	0x033AABEC ADD X8, X23, X19, 0x3, LSL
	0x033AABF0 STR X21, [X8 + 0x20]
	0x033AABF4 STR X23, [X28]
	0x033AABF8 LDR W8, [X27 + 0x18]
	0x033AABFC CMP W29, W8
	0x033AAC00 B.CS 0x33A9F8C
	0x033AAC04 LDR X0, [X25]
	0x033AAC08 LDP X20, X19, [X31 + 0xB0]
	0x033AAC0C LDP X22, X21, [X31 + 0xA0]
	0x033AAC10 LDP X24, X23, [X31 + 0x90]
	0x033AAC14 LDP X26, X25, [X31 + 0x80]
	0x033AAC18 LDP X28, X27, [X31 + 0x70]
	0x033AAC1C LDP X29, X30, [X31 + 0x60]
	0x033AAC20 ADD X31, X31, 0xC0
	0x033AAC24 RET
	0x033AAC28 BL 0x1C16F44
	0x033AAC2C MOV X1, X31
	0x033AAC30 BL 0x1C16DEC
	0x033AAC34 LDR X0, [X31 + 0x50]
	0x033AAC38 BL 0x1C171E0
	0x033AAC3C MOV X0, X29
	0x033AAC40 BL 0x1C171E0
	0x033AAC44 ADRP X0, 0xD81000
	0x033AAC48 LDR X0, [X0 + 0xDB0]
	0x033AAC4C BL 0x1C16D08
	0x033AAC50 MOV X1, X31
	0x033AAC54 BL 0x33BDD84
	0x033AAC58 MOV X19, X0
	0x033AAC5C ADRP X0, 0xD51000
	0x033AAC60 LDR X0, [X0 + 0x578]
	0x033AAC64 BL 0x1C16D08
	0x033AAC68 BL 0x1C16F10
	0x033AAC6C MOV X20, X0
	0x033AAC70 ADRP X0, 0xD71000
	0x033AAC74 LDR X0, [X0 + 0x778]
	0x033AAC78 BL 0x1C16D08
	0x033AAC7C MOV X2, X0
	0x033AAC80 MOV X0, X20
	0x033AAC84 MOV X1, X19
	0x033AAC88 MOV X3, X31
	0x033AAC8C BL 0x330E16C
	0x033AAC90 B 0x33AACCC
	0x033AAC94 ADRP X0, 0xD81000
	0x033AAC98 LDR X0, [X0 + 0xDB8]
	0x033AAC9C BL 0x1C16D08
	0x033AACA0 MOV X1, X31
	0x033AACA4 BL 0x33BDD84
	0x033AACA8 MOV X19, X0
	0x033AACAC ADRP X0, 0xD72000
	0x033AACB0 LDR X0, [X0 + 0x28]
	0x033AACB4 BL 0x1C16D08
	0x033AACB8 BL 0x1C16F10
	0x033AACBC MOV X1, X19
	0x033AACC0 MOV X2, X31
	0x033AACC4 MOV X20, X0
	0x033AACC8 BL 0x3380078
	0x033AACCC ADRP X0, 0xD81000
	0x033AACD0 LDR X0, [X0 + 0xDC0]
	0x033AACD4 BL 0x1C16D08
	0x033AACD8 MOV X1, X0
	0x033AACDC MOV X0, X20
	0x033AACE0 BL 0x1C16DEC
	0x033AACE4 STR X31, [X23]
	0x033AACE8 BL 0x1C16F20
	0x033AACEC MOV X0, X21
	0x033AACF0 MOV X1, X22
	0x033AACF4 BL 0x1C171E0
	0x033AACF8 MOV X0, X21
	0x033AACFC BL 0x1C171E0
	0x033AAD00 ADRP X0, 0xD7B000
	0x033AAD04 LDR X0, [X0 + 0xBE0]
	0x033AAD08 BL 0x1C16D08
	0x033AAD0C MOV X1, X31
	0x033AAD10 BL 0x33BDD84
	0x033AAD14 MOV X19, X0
	0x033AAD18 ADRP X0, 0xD7B000
	0x033AAD1C LDR X0, [X0 + 0x7A0]
	0x033AAD20 BL 0x1C16D08
	0x033AAD24 BL 0x1C16F10
	0x033AAD28 MOV X1, X19
	0x033AAD2C MOV X2, X31
	0x033AAD30 MOV X20, X0
	0x033AAD34 BL 0x32CC544
	0x033AAD38 B 0x33AACCC
	0x033AAD3C STR X30, [X31 - 0x60]!
	0x033AAD40 STP X28, X27, [X31 + 0x10]
	0x033AAD44 STP X26, X25, [X31 + 0x20]
	0x033AAD48 STP X24, X23, [X31 + 0x30]
	0x033AAD4C STP X22, X21, [X31 + 0x40]
	0x033AAD50 STP X20, X19, [X31 + 0x50]
	0x033AAD54 ADRP X20, 0x1033000
	0x033AAD58 LDRB W8, [X20 + 0x170]
	0x033AAD5C MOV X21, X2
	0x033AAD60 MOV X22, X1
	0x033AAD64 MOV X19, X0
	0x033AAD68 TBNZ X8, 0x0, 0x33AAD80
	0x033AAD6C ADRP X0, 0xD4B000
	0x033AAD70 LDR X0, [X0 + 0x9B8]
	0x033AAD74 BL 0x1C16CF4
	0x033AAD78 MOVZ W8, 0x1
	0x033AAD7C STRB W8, [X20 + 0x170]
	0x033AAD80 CBZ X22, 0x33AAF70
	0x033AAD84 ADRP X8, 0xD4B000
	0x033AAD88 LDR X8, [X8 + 0x9B8]
	0x033AAD8C LDR W1, [X22 + 0x18]
	0x033AAD90 LDR X0, [X8]
	0x033AAD94 BL 0x1C16D6C
	0x033AAD98 LDR X8, [X22 + 0x18]
	0x033AAD9C MOV X20, X0
	0x033AADA0 CMP W8, 0x1
	0x033AADA4 B.LT 0x33AADD8
	0x033AADA8 CBZ X19, 0x33AAF70
	0x033AADAC LDR W10, [X19 + 0x18]
	0x033AADB0 MOV X9, X31
	0x033AADB4 SXTW X11, W8
	0x033AADB8 ADD X12, X19, 0x20
	0x033AADBC MOVN W13, 0x0
	0x033AADC0 CMP X9, X10
	0x033AADC4 B.CS 0x33AAF6C
	0x033AADC8 STR W13, [X12, X9, LSL #2]
	0x033AADCC ADD X9, X9, 0x1
	0x033AADD0 CMP X9, X11
	0x033AADD4 B.LT 0x33AADC0
	0x033AADD8 CBZ X21, 0x33AAF70
	0x033AADDC LDR X9, [X21 + 0x18]
	0x033AADE0 CMP W9, 0x1
	0x033AADE4 B.LT 0x33AAEC4
	0x033AADE8 MOV X24, X31
	0x033AADEC AND X9, X9, 0x0
	0x033AADF0 MOVZ W25, 0x1
	0x033AADF4 CMP W8, 0x1
	0x033AADF8 B.LT 0x33AAE70
	0x033AADFC CMP X24, W9, UXTW
	0x033AAE00 B.CS 0x33AAF6C
	0x033AAE04 ADD X9, X21, X24, 0x3, LSL
	0x033AAE08 MOV W26, W31
	0x033AAE0C ADD X27, X9, 0x20
	0x033AAE10 CMP W26, W8
	0x033AAE14 B.CS 0x33AAF6C
	0x033AAE18 SXTW X28, W26
	0x033AAE1C ADD X8, X22, X28, 0x3, LSL
	0x033AAE20 LDR X0, [X8 + 0x20]
	0x033AAE24 CBZ X0, 0x33AAF70
	0x033AAE28 LDR X8, [X0]
	0x033AAE2C LDR X23, [X27]
	0x033AAE30 LDP X9, X1, [X8 + 0x1C8]
	0x033AAE34 BLR X9
	0x033AAE38 CBZ X23, 0x33AAF70
	0x033AAE3C MOV X1, X0
	0x033AAE40 MOV X0, X23
	0x033AAE44 MOV X2, X31
	0x033AAE48 BL 0x322693C
	0x033AAE4C TBNZ X0, 0x0, 0x33AAE78
	0x033AAE50 LDR X8, [X22 + 0x18]
	0x033AAE54 ADD W26, W26, 0x1
	0x033AAE58 CMP W26, W8
	0x033AAE5C B.GE 0x33AAEAC
	0x033AAE60 LDR W9, [X21 + 0x18]
	0x033AAE64 CMP X24, X9
	0x033AAE68 B.CC 0x33AAE10
	0x033AAE6C B 0x33AAF6C
	0x033AAE70 MOV W26, W31
	0x033AAE74 B 0x33AAEAC
	0x033AAE78 CBZ X19, 0x33AAF70
	0x033AAE7C LDR W8, [X19 + 0x18]
	0x033AAE80 CMP W26, W8
	0x033AAE84 B.CS 0x33AAF6C
	0x033AAE88 ADD X8, X19, X28, 0x2, LSL
	0x033AAE8C STR W24, [X8 + 0x20]
	0x033AAE90 CBZ X20, 0x33AAF70
	0x033AAE94 LDR W8, [X20 + 0x18]
	0x033AAE98 CMP X24, X8
	0x033AAE9C B.CS 0x33AAF6C
	0x033AAEA0 ADD X8, X20, X24
	0x033AAEA4 STRB W25, [X8 + 0x20]
	0x033AAEA8 LDR X8, [X22 + 0x18]
	0x033AAEAC CMP W26, W8
	0x033AAEB0 B.EQ 0x33AAF4C
	0x033AAEB4 LDR W9, [X21 + 0x18]
	0x033AAEB8 ADD X24, X24, 0x1
	0x033AAEBC CMP X24, W9, SXTW
	0x033AAEC0 B.LT 0x33AADF4
	0x033AAEC4 CMP W8, 0x1
	0x033AAEC8 B.LT 0x33AAF44
	0x033AAECC CBZ X19, 0x33AAF70
	0x033AAED0 LDR W10, [X19 + 0x18]
	0x033AAED4 MOV X9, X31
	0x033AAED8 MOV W11, W31
	0x033AAEDC SXTW X12, W8
	0x033AAEE0 CMP X9, X10
	0x033AAEE4 B.CS 0x33AAF6C
	0x033AAEE8 ADD X13, X19, X9, 0x2, LSL
	0x033AAEEC LDR W14, [X13 + 0x20]!
	0x033AAEF0 ADDS W31, W14, 0x1
	0x033AAEF4 B.NE 0x33AAF38
	0x033AAEF8 CMP W11, W8
	0x033AAEFC B.GE 0x33AAF38
	0x033AAF00 CBZ X20, 0x33AAF70
	0x033AAF04 LDR W14, [X20 + 0x18]
	0x033AAF08 CMP W11, W14
	0x033AAF0C B.CS 0x33AAF6C
	0x033AAF10 ADD X15, X20, W11, SXTW
	0x033AAF14 LDRB W15, [X15 + 0x20]
	0x033AAF18 CBZ W15, 0x33AAF30
	0x033AAF1C ADD W11, W11, 0x1
	0x033AAF20 CMP W8, W11
	0x033AAF24 B.NE 0x33AAF08
	0x033AAF28 MOV W11, W8
	0x033AAF2C B 0x33AAF38
	0x033AAF30 STR W11, [X13]
	0x033AAF34 ADD W11, W11, 0x1
	0x033AAF38 ADD X9, X9, 0x1
	0x033AAF3C CMP X9, X12
	0x033AAF40 B.LT 0x33AAEE0
	0x033AAF44 MOVZ W0, 0x1
	0x033AAF48 B 0x33AAF50
	0x033AAF4C MOV W0, W31
	0x033AAF50 LDP X20, X19, [X31 + 0x50]
	0x033AAF54 LDP X22, X21, [X31 + 0x40]
	0x033AAF58 LDP X24, X23, [X31 + 0x30]
	0x033AAF5C LDP X26, X25, [X31 + 0x20]
	0x033AAF60 LDP X28, X27, [X31 + 0x10]
	0x033AAF64 LDR X30, [X31], #0x60
	0x033AAF68 RET
	0x033AAF6C BL 0x1C16F28
	0x033AAF70 BL 0x1C16F20
	0x033AAF74 STP X30, X21, [X31 - 0x20]!
	0x033AAF78 STP X20, X19, [X31 + 0x10]
	0x033AAF7C ADRP X21, 0x1033000
	0x033AAF80 LDRB W8, [X21 + 0x172]
	0x033AAF84 MOV X19, X1
	0x033AAF88 MOV X20, X0
	0x033AAF8C TBNZ X8, 0x0, 0x33AAFBC
	0x033AAF90 ADRP X0, 0xD81000
	0x033AAF94 LDR X0, [X0 + 0x538]
	0x033AAF98 BL 0x1C16CF4
	0x033AAF9C ADRP X0, 0xD72000
	0x033AAFA0 LDR X0, [X0 + 0x4E8]
	0x033AAFA4 BL 0x1C16CF4
	0x033AAFA8 ADRP X0, 0xD49000
	0x033AAFAC LDR X0, [X0 + 0x6C0]
	0x033AAFB0 BL 0x1C16CF4
	0x033AAFB4 MOVZ W8, 0x1
	0x033AAFB8 STRB W8, [X21 + 0x172]
	0x033AAFBC CBZ X20, 0x33AB000
	0x033AAFC0 ADRP X21, 0xD49000
	0x033AAFC4 LDR X21, [X21 + 0x6C0]
	0x033AAFC8 MOV X0, X20
	0x033AAFCC MOV X1, X31
	0x033AAFD0 BL 0x33BE520
	0x033AAFD4 LDR X8, [X21]
	0x033AAFD8 MOV X20, X0
	0x033AAFDC LDR W9, [X8 + 0xE0]
	0x033AAFE0 CBNZ W9, 0x33AAFEC
	0x033AAFE4 MOV X0, X8
	0x033AAFE8 BL 0x1C16DFC
	0x033AAFEC MOV X0, X20
	0x033AAFF0 MOV X1, X19
	0x033AAFF4 MOV X2, X31
	0x033AAFF8 BL 0x3395194
	0x033AAFFC TBZ X0, 0x0, 0x33AB010
	0x033AB000 LDP X20, X19, [X31 + 0x10]
	0x033AB004 MOVZ W0, 0x1
	0x033AB008 LDP X30, X21, [X31], #0x20
	0x033AB00C RET
	0x033AB010 ADRP X8, 0xD80000
	0x033AB014 LDR X8, [X8 + 0x538]
	0x033AB018 LDR X0, [X8]
	0x033AB01C LDR W8, [X0 + 0xE0]
	0x033AB020 CBZ W8, 0x33AB02C
	0x033AB024 CBNZ X20, 0x33AB034
	0x033AB028 B 0x33AB068
	0x033AB02C BL 0x1C16DFC
	0x033AB030 CBZ X20, 0x33AB068
	0x033AB034 ADRP X9, 0xD71000
	0x033AB038 LDR X9, [X9 + 0x4E8]
	0x033AB03C LDR X8, [X20]
	0x033AB040 LDR X1, [X9]
	0x033AB044 LDRB W10, [X8 + 0x130]
	0x033AB048 LDRB W9, [X1 + 0x130]
	0x033AB04C CMP W10, W9
	0x033AB050 B.CC 0x33AB07C
	0x033AB054 LDR X8, [X8 + 0xC8]
	0x033AB058 ADD X8, X8, X9, 0x3, LSL
	0x033AB05C LDUR X8, [X8 - 0x8]
	0x033AB060 CMP X8, X1
	0x033AB064 B.NE 0x33AB07C
	0x033AB068 MOV X0, X20
	0x033AB06C MOV X1, X19
	0x033AB070 LDP X20, X19, [X31 + 0x10]
	0x033AB074 LDP X30, X21, [X31], #0x20
	0x033AB078 B 0x33AC318
	0x033AB07C MOV X0, X20
	0x033AB080 BL 0x1C171E0
	0x033AB084 STR X30, [X31 - 0x30]!
	0x033AB088 STP X22, X21, [X31 + 0x10]
	0x033AB08C STP X20, X19, [X31 + 0x20]
	0x033AB090 MOV X20, X1
	0x033AB094 MOV X1, X31
	0x033AB098 MOV W19, W2
	0x033AB09C MOV X21, X0
	0x033AB0A0 AND W22, W3, 0x1
	0x033AB0A4 BL 0x33BDD8C
	0x033AB0A8 STR X20, [X21 + 0x10]
	0x033AB0AC STR W19, [X21 + 0x18]
	0x033AB0B0 STRB W22, [X21 + 0x1C]
	0x033AB0B4 LDP X20, X19, [X31 + 0x20]
	0x033AB0B8 LDP X22, X21, [X31 + 0x10]
	0x033AB0BC LDR X30, [X31], #0x30
	0x033AB0C0 RET
	0x033AB0C4 STP X30, X25, [X31 - 0x40]!
	0x033AB0C8 STP X24, X23, [X31 + 0x10]
	0x033AB0CC STP X22, X21, [X31 + 0x20]
	0x033AB0D0 STP X20, X19, [X31 + 0x30]
	0x033AB0D4 ADRP X21, 0x1032000
	0x033AB0D8 LDRB W8, [X21 + 0x16F]
	0x033AB0DC MOV X19, X1
	0x033AB0E0 MOV X20, X0
	0x033AB0E4 TBNZ X8, 0x0, 0x33AB0FC
	0x033AB0E8 ADRP X0, 0xD48000
	0x033AB0EC LDR X0, [X0 + 0x9D0]
	0x033AB0F0 BL 0x1C16CF4
	0x033AB0F4 MOVZ W8, 0x1
	0x033AB0F8 STRB W8, [X21 + 0x16F]
	0x033AB0FC CBZ X19, 0x33AB204
	0x033AB100 ADRP X8, 0xD48000
	0x033AB104 LDR X8, [X8 + 0x9D0]
	0x033AB108 LDR W1, [X19 + 0x18]
	0x033AB10C LDR X0, [X8]
	0x033AB110 BL 0x1C16D6C
	0x033AB114 LDR X8, [X19 + 0x18]
	0x033AB118 CMP W8, 0x1
	0x033AB11C B.LT 0x33AB1EC
	0x033AB120 MOV X21, X0
	0x033AB124 MOV X23, X31
	0x033AB128 AND X8, X8, 0x0
	0x033AB12C ADD X24, X19, 0x20
	0x033AB130 ADD X25, X0, 0x20
	0x033AB134 CMP X23, W8, UXTW
	0x033AB138 B.CS 0x33AB200
	0x033AB13C CBZ X21, 0x33AB204
	0x033AB140 LDR X22, [X24, X23, LSL #3]
	0x033AB144 CBZ X22, 0x33AB15C
	0x033AB148 LDR X8, [X21]
	0x033AB14C MOV X0, X22
	0x033AB150 LDR X1, [X8 + 0x40]
	0x033AB154 BL 0x1C16E00
	0x033AB158 CBZ X0, 0x33AB208
	0x033AB15C LDR W8, [X21 + 0x18]
	0x033AB160 CMP X23, X8
	0x033AB164 B.CS 0x33AB200
	0x033AB168 STR X22, [X25, X23, LSL #3]
	0x033AB16C LDR W8, [X19 + 0x18]
	0x033AB170 ADD X23, X23, 0x1
	0x033AB174 CMP X23, W8, SXTW
	0x033AB178 B.LT 0x33AB134
	0x033AB17C CMP W8, 0x1
	0x033AB180 B.LT 0x33AB1EC
	0x033AB184 CBZ X20, 0x33AB204
	0x033AB188 MOV X23, X31
	0x033AB18C ADD X24, X19, 0x20
	0x033AB190 ADD X25, X20, 0x20
	0x033AB194 LDR W9, [X20 + 0x18]
	0x033AB198 CMP W23, W9
	0x033AB19C B.CS 0x33AB200
	0x033AB1A0 LDRSW X9, [X25, X23, LSL #2]
	0x033AB1A4 LDR W10, [X21 + 0x18]
	0x033AB1A8 CMP W9, W10
	0x033AB1AC B.CS 0x33AB200
	0x033AB1B0 ADD X9, X21, X9, 0x3, LSL
	0x033AB1B4 LDR X22, [X9 + 0x20]
	0x033AB1B8 CBZ X22, 0x33AB1D4
	0x033AB1BC LDR X8, [X19]
	0x033AB1C0 MOV X0, X22
	0x033AB1C4 LDR X1, [X8 + 0x40]
	0x033AB1C8 BL 0x1C16E00
	0x033AB1CC CBZ X0, 0x33AB208
	0x033AB1D0 LDR X8, [X19 + 0x18]
	0x033AB1D4 CMP W23, W8
	0x033AB1D8 B.CS 0x33AB200
	0x033AB1DC STR X22, [X24, X23, LSL #3]
	0x033AB1E0 ADD X23, X23, 0x1
	0x033AB1E4 CMP W23, W8
	0x033AB1E8 B.LT 0x33AB194
	0x033AB1EC LDP X20, X19, [X31 + 0x30]
	0x033AB1F0 LDP X22, X21, [X31 + 0x20]
	0x033AB1F4 LDP X24, X23, [X31 + 0x10]
	0x033AB1F8 LDP X30, X25, [X31], #0x40
	0x033AB1FC RET
	0x033AB200 BL 0x1C16F28
	0x033AB204 BL 0x1C16F20
	0x033AB208 BL 0x1C16F44
	0x033AB20C MOV X1, X31
	0x033AB210 BL 0x1C16DEC
	0x033AB214 SUB X31, X31, 0x70
	0x033AB218 STP X29, X30, [X31 + 0x10]
	0x033AB21C STP X28, X27, [X31 + 0x20]
	0x033AB220 STP X26, X25, [X31 + 0x30]
	0x033AB224 STP X24, X23, [X31 + 0x40]
	0x033AB228 STP X22, X21, [X31 + 0x50]
	0x033AB22C STP X20, X19, [X31 + 0x60]
	0x033AB230 ADRP X27, 0x1032000
	0x033AB234 LDRB W8, [X27 + 0x169]
	0x033AB238 MOV X21, X7
	0x033AB23C MOV X22, X6
	0x033AB240 MOV X23, X5
	0x033AB244 MOV X24, X4
	0x033AB248 MOV X19, X3
	0x033AB24C MOV X25, X2
	0x033AB250 MOV X26, X1
	0x033AB254 MOV X20, X0
	0x033AB258 TBNZ X8, 0x0, 0x33AB270
	0x033AB25C ADRP X0, 0xD80000
	0x033AB260 LDR X0, [X0 + 0x538]
	0x033AB264 BL 0x1C16CF4
	0x033AB268 MOVZ W8, 0x1
	0x033AB26C STRB W8, [X27 + 0x169]
	0x033AB270 CBZ X20, 0x33AB390
	0x033AB274 LDR X8, [X20]
	0x033AB278 MOV X0, X20
	0x033AB27C LDR X9, [X8 + 0x398]
	0x033AB280 LDR X1, [X8 + 0x3A0]
	0x033AB284 BLR X9
	0x033AB288 CBZ X19, 0x33AB390
	0x033AB28C LDR X8, [X19]
	0x033AB290 ADRP X29, 0xD80000
	0x033AB294 MOV X27, X0
	0x033AB298 MOV X0, X19
	0x033AB29C LDR X9, [X8 + 0x398]
	0x033AB2A0 LDR X1, [X8 + 0x3A0]
	0x033AB2A4 LDR X29, [X29 + 0x538]
	0x033AB2A8 BLR X9
	0x033AB2AC LDR X8, [X29]
	0x033AB2B0 MOV X28, X0
	0x033AB2B4 LDR W9, [X8 + 0xE0]
	0x033AB2B8 CBNZ W9, 0x33AB2C4
	0x033AB2BC MOV X0, X8
	0x033AB2C0 BL 0x1C16DFC
	0x033AB2C4 MOV X0, X27
	0x033AB2C8 MOV X1, X26
	0x033AB2CC MOV X2, X25
	0x033AB2D0 MOV X3, X28
	0x033AB2D4 MOV X4, X24
	0x033AB2D8 MOV X5, X23
	0x033AB2DC MOV X6, X22
	0x033AB2E0 MOV X7, X21
	0x033AB2E4 BL 0x33AC8D8
	0x033AB2E8 MOV W21, W0
	0x033AB2EC CBNZ W0, 0x33AB360
	0x033AB2F0 LDR X0, [X29]
	0x033AB2F4 LDR W8, [X0 + 0xE0]
	0x033AB2F8 CBNZ W8, 0x33AB300
	0x033AB2FC BL 0x1C16DFC
	0x033AB300 MOV X0, X20
	0x033AB304 MOV X1, X19
	0x033AB308 BL 0x33AD790
	0x033AB30C TBZ X0, 0x0, 0x33AB360
	0x033AB310 LDR X8, [X20]
	0x033AB314 MOV X0, X20
	0x033AB318 LDP X9, X1, [X8 + 0x1B8]
	0x033AB31C BLR X9
	0x033AB320 LDR X8, [X29]
	0x033AB324 MOV X20, X0
	0x033AB328 LDR W9, [X8 + 0xE0]
	0x033AB32C CBNZ W9, 0x33AB338
	0x033AB330 MOV X0, X8
	0x033AB334 BL 0x1C16DFC
	0x033AB338 MOV X0, X20
	0x033AB33C BL 0x33AD8F8
	0x033AB340 LDR X8, [X19]
	0x033AB344 MOV W20, W0
	0x033AB348 MOV X0, X19
	0x033AB34C LDP X9, X1, [X8 + 0x1B8]
	0x033AB350 BLR X9
	0x033AB354 BL 0x33AD8F8
	0x033AB358 CMP W20, W0
	0x033AB35C B.NE 0x33AB384
	0x033AB360 MOV W0, W21
	0x033AB364 LDP X20, X19, [X31 + 0x60]
	0x033AB368 LDP X22, X21, [X31 + 0x50]
	0x033AB36C LDP X24, X23, [X31 + 0x40]
	0x033AB370 LDP X26, X25, [X31 + 0x30]
	0x033AB374 LDP X28, X27, [X31 + 0x20]
	0x033AB378 LDP X29, X30, [X31 + 0x10]
	0x033AB37C ADD X31, X31, 0x70
	0x033AB380 RET
	0x033AB384 MOVZ W8, 0x1
	0x033AB388 CINC W0, W8, LT
	0x033AB38C B 0x33AB364
	0x033AB390 BL 0x1C16F20
	0x033AB394 STP X29, X30, [X31 - 0x60]!
	0x033AB398 STP X28, X27, [X31 + 0x10]
	0x033AB39C STP X26, X25, [X31 + 0x20]
	0x033AB3A0 STP X24, X23, [X31 + 0x30]
	0x033AB3A4 STP X22, X21, [X31 + 0x40]
	0x033AB3A8 STP X20, X19, [X31 + 0x50]
	0x033AB3AC ADRP X22, 0x1032000
	0x033AB3B0 LDRB W8, [X22 + 0x162]
	0x033AB3B4 MOV X20, X3
	0x033AB3B8 MOV X19, X2
	0x033AB3BC MOV W21, W1
	0x033AB3C0 TBNZ X8, 0x0, 0x33AB414
	0x033AB3C4 ADRP X0, 0xD80000
	0x033AB3C8 LDR X0, [X0 + 0x538]
	0x033AB3CC BL 0x1C16CF4
	0x033AB3D0 ADRP X0, 0xD80000
	0x033AB3D4 LDR X0, [X0 + 0xDC8]
	0x033AB3D8 BL 0x1C16CF4
	0x033AB3DC ADRP X0, 0xD79000
	0x033AB3E0 LDR X0, [X0 + 0xB80]
	0x033AB3E4 BL 0x1C16CF4
	0x033AB3E8 ADRP X0, 0xD52000
	0x033AB3EC LDR X0, [X0 + 0x968]
	0x033AB3F0 BL 0x1C16CF4
	0x033AB3F4 ADRP X0, 0xD71000
	0x033AB3F8 LDR X0, [X0 + 0x4E8]
	0x033AB3FC BL 0x1C16CF4
	0x033AB400 ADRP X0, 0xD48000
	0x033AB404 LDR X0, [X0 + 0x6C0]
	0x033AB408 BL 0x1C16CF4
	0x033AB40C MOVZ W8, 0x1
	0x033AB410 STRB W8, [X22 + 0x162]
	0x033AB414 CBZ X19, 0x33AB770
	0x033AB418 MOV X0, X19
	0x033AB41C MOV X1, X31
	0x033AB420 BL 0x33A01F0
	0x033AB424 CBZ X0, 0x33AB7B8
	0x033AB428 ADRP X8, 0xD79000
	0x033AB42C LDR X8, [X8 + 0xB80]
	0x033AB430 MOV X22, X0
	0x033AB434 LDR X23, [X8]
	0x033AB438 MOV X1, X23
	0x033AB43C BL 0x1C16E00
	0x033AB440 CBZ X0, 0x33AB7C4
	0x033AB444 MOV X19, X0
	0x033AB448 TBNZ X21, 0xB, 0x33AB468
	0x033AB44C MOV W22, W31
	0x033AB450 LDR W8, [X19 + 0x18]
	0x033AB454 CMP W22, W8
	0x033AB458 B.CS 0x33AB758
	0x033AB45C ADD X8, X19, W22, 0x3, SXTW
	0x033AB460 ADD X8, X8, 0x20
	0x033AB464 B 0x33AB738
	0x033AB468 CBZ X20, 0x33AB7C0
	0x033AB46C MOV X0, X20
	0x033AB470 MOV X1, X31
	0x033AB474 BL 0x33BE520
	0x033AB478 LDR X8, [X19 + 0x18]
	0x033AB47C CMP W8, 0x1
	0x033AB480 B.LT 0x33AB64C
	0x033AB484 ADRP X26, 0xD48000
	0x033AB488 ADRP X27, 0xD80000
	0x033AB48C ADRP X28, 0xD52000
	0x033AB490 LDR X26, [X26 + 0x6C0]
	0x033AB494 LDR X27, [X27 + 0xDC8]
	0x033AB498 LDR X28, [X28 + 0x968]
	0x033AB49C MOV X21, X0
	0x033AB4A0 MOV W24, W31
	0x033AB4A4 MOV W25, W31
	0x033AB4A8 CMP W25, W8
	0x033AB4AC B.CS 0x33AB758
	0x033AB4B0 ADD X29, X19, W25, 0x3, SXTW
	0x033AB4B4 LDR X0, [X29 + 0x20]!
	0x033AB4B8 CBZ X0, 0x33AB7C0
	0x033AB4BC LDR X8, [X0]
	0x033AB4C0 LDR X9, [X8 + 0x258]
	0x033AB4C4 LDR X1, [X8 + 0x260]
	0x033AB4C8 BLR X9
	0x033AB4CC LDR X8, [X26]
	0x033AB4D0 MOV X22, X0
	0x033AB4D4 LDR W9, [X8 + 0xE0]
	0x033AB4D8 CBNZ W9, 0x33AB4E4
	0x033AB4DC MOV X0, X8
	0x033AB4E0 BL 0x1C16DFC
	0x033AB4E4 MOV X0, X22
	0x033AB4E8 MOV X1, X21
	0x033AB4EC MOV X2, X31
	0x033AB4F0 BL 0x3395194
	0x033AB4F4 TBNZ X0, 0x0, 0x33AB564
	0x033AB4F8 LDR X0, [X27]
	0x033AB4FC LDR W8, [X0 + 0xE0]
	0x033AB500 CBNZ W8, 0x33AB50C
	0x033AB504 BL 0x1C16DFC
	0x033AB508 LDR X0, [X27]
	0x033AB50C LDR X8, [X0 + 0xB8]
	0x033AB510 LDR X8, [X8]
	0x033AB514 CMP X8, X20
	0x033AB518 B.NE 0x33AB530
	0x033AB51C CBZ X22, 0x33AB7C0
	0x033AB520 MOV X0, X22
	0x033AB524 MOV X1, X31
	0x033AB528 BL 0x339707C
	0x033AB52C TBNZ X0, 0x0, 0x33AB564
	0x033AB530 LDR X0, [X26]
	0x033AB534 LDR X23, [X28]
	0x033AB538 LDR W8, [X0 + 0xE0]
	0x033AB53C CBNZ W8, 0x33AB544
	0x033AB540 BL 0x1C16DFC
	0x033AB544 MOV X0, X23
	0x033AB548 MOV X1, X31
	0x033AB54C BL 0x338C698
	0x033AB550 MOV X1, X0
	0x033AB554 MOV X0, X22
	0x033AB558 MOV X2, X31
	0x033AB55C BL 0x3395194
	0x033AB560 TBZ X0, 0x0, 0x33AB5B8
	0x033AB564 LDR W8, [X19 + 0x18]
	0x033AB568 CMP W25, W8
	0x033AB56C B.CS 0x33AB758
	0x033AB570 LDR X22, [X29]
	0x033AB574 CBZ X22, 0x33AB590
	0x033AB578 LDR X8, [X19]
	0x033AB57C MOV X0, X22
	0x033AB580 LDR X1, [X8 + 0x40]
	0x033AB584 BL 0x1C16E00
	0x033AB588 CBZ X0, 0x33AB75C
	0x033AB58C LDR W8, [X19 + 0x18]
	0x033AB590 CMP W24, W8
	0x033AB594 B.CS 0x33AB758
	0x033AB598 ADD X8, X19, W24, 0x3, SXTW
	0x033AB59C ADD W24, W24, 0x1
	0x033AB5A0 STR X22, [X8 + 0x20]
	0x033AB5A4 LDR X8, [X19 + 0x18]
	0x033AB5A8 ADD W25, W25, 0x1
	0x033AB5AC CMP W25, W8
	0x033AB5B0 B.LT 0x33AB4A8
	0x033AB5B4 B 0x33AB650
	0x033AB5B8 CBZ X22, 0x33AB7C0
	0x033AB5BC MOV X0, X22
	0x033AB5C0 MOV X1, X31
	0x033AB5C4 BL 0x3397374
	0x033AB5C8 TBZ X0, 0x0, 0x33AB62C
	0x033AB5CC ADRP X8, 0xD80000
	0x033AB5D0 LDR X8, [X8 + 0x538]
	0x033AB5D4 LDR X0, [X8]
	0x033AB5D8 LDR W8, [X0 + 0xE0]
	0x033AB5DC CBNZ W8, 0x33AB5E4
	0x033AB5E0 BL 0x1C16DFC
	0x033AB5E4 ADRP X9, 0xD71000
	0x033AB5E8 LDR X8, [X22]
	0x033AB5EC LDR X9, [X9 + 0x4E8]
	0x033AB5F0 LDRB W10, [X8 + 0x130]
	0x033AB5F4 LDR X1, [X9]
	0x033AB5F8 LDRB W9, [X1 + 0x130]
	0x033AB5FC CMP W10, W9
	0x033AB600 B.CC 0x33AB768
	0x033AB604 LDR X8, [X8 + 0xC8]
	0x033AB608 ADD X8, X8, X9, 0x3, LSL
	0x033AB60C LDUR X8, [X8 - 0x8]
	0x033AB610 CMP X8, X1
	0x033AB614 B.NE 0x33AB768
	0x033AB618 MOV X0, X20
	0x033AB61C MOV X1, X22
	0x033AB620 BL 0x33AAF74
	0x033AB624 TBNZ X0, 0x0, 0x33AB564
	0x033AB628 B 0x33AB5A4
	0x033AB62C LDR X8, [X22]
	0x033AB630 MOV X0, X22
	0x033AB634 MOV X1, X21
	0x033AB638 LDR X9, [X8 + 0x2A8]
	0x033AB63C LDR X2, [X8 + 0x2B0]
	0x033AB640 BLR X9
	0x033AB644 TBNZ X0, 0x0, 0x33AB564
	0x033AB648 B 0x33AB5A4
	0x033AB64C MOV W24, W31
	0x033AB650 CMP W24, 0x1
	0x033AB654 B.EQ 0x33AB730
	0x033AB658 CBZ W24, 0x33AB7D0
	0x033AB65C CMP W24, 0x2
	0x033AB660 B.LT 0x33AB44C
	0x033AB664 ADRP X27, 0xD80000
	0x033AB668 LDR X27, [X27 + 0x538]
	0x033AB66C MOV W8, W24
	0x033AB670 MOV X23, X31
	0x033AB674 MOV W22, W31
	0x033AB678 MOV W25, W31
	0x033AB67C ADD X24, X19, 0x28
	0x033AB680 SUB X26, X8, 0x1
	0x033AB684 LDR X8, [X19 + 0x18]
	0x033AB688 CMP W22, W8
	0x033AB68C B.CS 0x33AB758
	0x033AB690 ADD X9, X23, 0x1
	0x033AB694 AND X8, X8, 0x0
	0x033AB698 CMP X9, X8
	0x033AB69C B.CS 0x33AB758
	0x033AB6A0 LDR X0, [X27]
	0x033AB6A4 ADD X8, X19, W22, 0x3, SXTW
	0x033AB6A8 LDR X20, [X8 + 0x20]
	0x033AB6AC LDR X21, [X24, X23, LSL #3]
	0x033AB6B0 LDR W8, [X0 + 0xE0]
	0x033AB6B4 CBNZ W8, 0x33AB6BC
	0x033AB6B8 BL 0x1C16DFC
	0x033AB6BC MOV X0, X20
	0x033AB6C0 MOV X1, X21
	0x033AB6C4 BL 0x33AB830
	0x033AB6C8 CBZ W0, 0x33AB6E0
	0x033AB6CC CMP W0, 0x2
	0x033AB6D0 B.NE 0x33AB6E4
	0x033AB6D4 MOV W25, W31
	0x033AB6D8 ADD W22, W23, 0x1
	0x033AB6DC B 0x33AB6E4
	0x033AB6E0 MOVZ W25, 0x1
	0x033AB6E4 ADD X23, X23, 0x1
	0x033AB6E8 CMP X26, X23
	0x033AB6EC B.NE 0x33AB684
	0x033AB6F0 TBZ X25, 0x0, 0x33AB450
	0x033AB6F4 ADRP X0, 0xD7A000
	0x033AB6F8 LDR X0, [X0 + 0xBE0]
	0x033AB6FC BL 0x1C16D08
	0x033AB700 MOV X1, X31
	0x033AB704 BL 0x33BDD84
	0x033AB708 MOV X19, X0
	0x033AB70C ADRP X0, 0xD7A000
	0x033AB710 LDR X0, [X0 + 0x7A0]
	0x033AB714 BL 0x1C16D08
	0x033AB718 BL 0x1C16F10
	0x033AB71C MOV X1, X19
	0x033AB720 MOV X2, X31
	0x033AB724 MOV X20, X0
	0x033AB728 BL 0x32CC544
	0x033AB72C B 0x33AB808
	0x033AB730 CBZ W8, 0x33AB758
	0x033AB734 ADD X8, X19, 0x20
	0x033AB738 LDR X0, [X8]
	0x033AB73C LDP X20, X19, [X31 + 0x50]
	0x033AB740 LDP X22, X21, [X31 + 0x40]
	0x033AB744 LDP X24, X23, [X31 + 0x30]
	0x033AB748 LDP X26, X25, [X31 + 0x20]
	0x033AB74C LDP X28, X27, [X31 + 0x10]
	0x033AB750 LDP X29, X30, [X31], #0x60
	0x033AB754 RET
	0x033AB758 BL 0x1C16F28
	0x033AB75C BL 0x1C16F44
	0x033AB760 MOV X1, X31
	0x033AB764 BL 0x1C16DEC
	0x033AB768 MOV X0, X22
	0x033AB76C BL 0x1C171E0
	0x033AB770 ADRP X0, 0xD4D000
	0x033AB774 LDR X0, [X0 + 0x528]
	0x033AB778 BL 0x1C16D08
	0x033AB77C BL 0x1C16F10
	0x033AB780 MOV X19, X0
	0x033AB784 ADRP X0, 0xD70000
	0x033AB788 LDR X0, [X0 + 0x778]
	0x033AB78C BL 0x1C16D08
	0x033AB790 MOV X1, X0
	0x033AB794 MOV X0, X19
	0x033AB798 MOV X2, X31
	0x033AB79C BL 0x330E100
	0x033AB7A0 ADRP X0, 0xD80000
	0x033AB7A4 LDR X0, [X0 + 0xDD0]
	0x033AB7A8 BL 0x1C16D08
	0x033AB7AC MOV X1, X0
	0x033AB7B0 MOV X0, X19
	0x033AB7B4 BL 0x1C16DEC
	0x033AB7B8 TBZ X21, 0xB, 0x33AB7C0
	0x033AB7BC CBNZ X20, 0x33AB820
	0x033AB7C0 BL 0x1C16F20
	0x033AB7C4 MOV X0, X22
	0x033AB7C8 MOV X1, X23
	0x033AB7CC BL 0x1C171E0
	0x033AB7D0 ADRP X0, 0xD80000
	0x033AB7D4 LDR X0, [X0 + 0xDD8]
	0x033AB7D8 BL 0x1C16D08
	0x033AB7DC MOV X1, X31
	0x033AB7E0 BL 0x33BDD84
	0x033AB7E4 MOV X19, X0
	0x033AB7E8 ADRP X0, 0xD80000
	0x033AB7EC LDR X0, [X0 + 0xDE0]
	0x033AB7F0 BL 0x1C16D08
	0x033AB7F4 BL 0x1C16F10
	0x033AB7F8 MOV X1, X19
	0x033AB7FC MOV X2, X31
	0x033AB800 MOV X20, X0
	0x033AB804 BL 0x339ECFC
	0x033AB808 ADRP X0, 0xD80000
	0x033AB80C LDR X0, [X0 + 0xDD0]
	0x033AB810 BL 0x1C16D08
	0x033AB814 MOV X1, X0
	0x033AB818 MOV X0, X20
	0x033AB81C BL 0x1C16DEC
	0x033AB820 MOV X0, X20
	0x033AB824 MOV X1, X31
	0x033AB828 BL 0x33BE520
	0x033AB82C BL 0x1C16F20
	0x033AB830 STP X30, X21, [X31 - 0x20]!
	0x033AB834 STP X20, X19, [X31 + 0x10]
	0x033AB838 ADRP X21, 0x1032000
	0x033AB83C LDRB W8, [X21 + 0x16A]
	0x033AB840 MOV X19, X1
	0x033AB844 MOV X20, X0
	0x033AB848 TBNZ X8, 0x0, 0x33AB860
	0x033AB84C ADRP X0, 0xD80000
	0x033AB850 LDR X0, [X0 + 0x538]
	0x033AB854 BL 0x1C16CF4
	0x033AB858 MOVZ W8, 0x1
	0x033AB85C STRB W8, [X21 + 0x16A]
	0x033AB860 CBZ X20, 0x33AB914
	0x033AB864 LDR X8, [X20]
	0x033AB868 MOV X0, X20
	0x033AB86C LDP X9, X1, [X8 + 0x1A8]
	0x033AB870 BLR X9
	0x033AB874 CBZ X19, 0x33AB914
	0x033AB878 LDR X8, [X19]
	0x033AB87C MOV X21, X0
	0x033AB880 MOV X0, X19
	0x033AB884 LDP X9, X1, [X8 + 0x1A8]
	0x033AB888 BLR X9
	0x033AB88C MOV X1, X0
	0x033AB890 MOV X0, X21
	0x033AB894 MOV X2, X31
	0x033AB898 BL 0x321BA08
	0x033AB89C TBZ X0, 0x0, 0x33AB8F8
	0x033AB8A0 LDR X8, [X20]
	0x033AB8A4 MOV X0, X20
	0x033AB8A8 LDP X9, X1, [X8 + 0x1B8]
	0x033AB8AC BLR X9
	0x033AB8B0 ADRP X8, 0xD80000
	0x033AB8B4 LDR X8, [X8 + 0x538]
	0x033AB8B8 MOV X20, X0
	0x033AB8BC LDR X8, [X8]
	0x033AB8C0 LDR W9, [X8 + 0xE0]
	0x033AB8C4 CBNZ W9, 0x33AB8D0
	0x033AB8C8 MOV X0, X8
	0x033AB8CC BL 0x1C16DFC
	0x033AB8D0 MOV X0, X20
	0x033AB8D4 BL 0x33AD8F8
	0x033AB8D8 LDR X8, [X19]
	0x033AB8DC MOV W20, W0
	0x033AB8E0 MOV X0, X19
	0x033AB8E4 LDP X9, X1, [X8 + 0x1B8]
	0x033AB8E8 BLR X9
	0x033AB8EC BL 0x33AD8F8
	0x033AB8F0 CMP W20, W0
	0x033AB8F4 B.NE 0x33AB900
	0x033AB8F8 MOV W0, W31
	0x033AB8FC B 0x33AB908
	0x033AB900 MOVZ W8, 0x1
	0x033AB904 CINC W0, W8, LT
	0x033AB908 LDP X20, X19, [X31 + 0x10]
	0x033AB90C LDP X30, X21, [X31], #0x20
	0x033AB910 RET
	0x033AB914 BL 0x1C16F20
	0x033AB918 SUB X31, X31, 0x80
	0x033AB91C STP X29, X30, [X31 + 0x20]
	0x033AB920 STP X28, X27, [X31 + 0x30]
	0x033AB924 STP X26, X25, [X31 + 0x40]
	0x033AB928 STP X24, X23, [X31 + 0x50]
	0x033AB92C STP X22, X21, [X31 + 0x60]
	0x033AB930 STP X20, X19, [X31 + 0x70]
	0x033AB934 ADRP X20, 0x1032000
	0x033AB938 LDRB W8, [X20 + 0x163]
	0x033AB93C MOV X19, X4
	0x033AB940 MOV X25, X3
	0x033AB944 MOV X21, X2
	0x033AB948 TBNZ X8, 0x0, 0x33AB9CC
	0x033AB94C ADRP X0, 0xD80000
	0x033AB950 LDR X0, [X0 + 0xDE8]
	0x033AB954 BL 0x1C16CF4
	0x033AB958 ADRP X0, 0xD80000
	0x033AB95C LDR X0, [X0 + 0x538]
	0x033AB960 BL 0x1C16CF4
	0x033AB964 ADRP X0, 0xD49000
	0x033AB968 LDR X0, [X0 + 0xE58]
	0x033AB96C BL 0x1C16CF4
	0x033AB970 ADRP X0, 0xD80000
	0x033AB974 LDR X0, [X0 + 0xDF0]
	0x033AB978 BL 0x1C16CF4
	0x033AB97C ADRP X0, 0xD7B000
	0x033AB980 LDR X0, [X0 + 0x1D0]
	0x033AB984 BL 0x1C16CF4
	0x033AB988 ADRP X0, 0xD52000
	0x033AB98C LDR X0, [X0 + 0x968]
	0x033AB990 BL 0x1C16CF4
	0x033AB994 ADRP X0, 0xD71000
	0x033AB998 LDR X0, [X0 + 0x4E8]
	0x033AB99C BL 0x1C16CF4
	0x033AB9A0 ADRP X0, 0xD48000
	0x033AB9A4 LDR X0, [X0 + 0x6C0]
	0x033AB9A8 BL 0x1C16CF4
	0x033AB9AC ADRP X0, 0xD80000
	0x033AB9B0 LDR X0, [X0 + 0xDF8]
	0x033AB9B4 BL 0x1C16CF4
	0x033AB9B8 ADRP X0, 0xD80000
	0x033AB9BC LDR X0, [X0 + 0xE00]
	0x033AB9C0 BL 0x1C16CF4
	0x033AB9C4 MOVZ W8, 0x1
	0x033AB9C8 STRB W8, [X20 + 0x163]
	0x033AB9CC CBZ X19, 0x33ABA64
	0x033AB9D0 ADRP X20, 0xD80000
	0x033AB9D4 LDR X20, [X20 + 0xE00]
	0x033AB9D8 LDR X0, [X20]
	0x033AB9DC LDR W8, [X0 + 0xE0]
	0x033AB9E0 CBNZ W8, 0x33AB9EC
	0x033AB9E4 BL 0x1C16DFC
	0x033AB9E8 LDR X0, [X20]
	0x033AB9EC LDR X8, [X0 + 0xB8]
	0x033AB9F0 ADRP X24, 0xD80000
	0x033AB9F4 LDR X22, [X8 + 0x8]
	0x033AB9F8 LDR X24, [X24 + 0xDE8]
	0x033AB9FC CBNZ X22, 0x33ABA50
	0x033ABA00 LDR W8, [X0 + 0xE0]
	0x033ABA04 CBNZ W8, 0x33ABA10
	0x033ABA08 BL 0x1C16DFC
	0x033ABA0C LDR X0, [X20]
	0x033ABA10 ADRP X9, 0xD80000
	0x033ABA14 LDR X8, [X0 + 0xB8]
	0x033ABA18 LDR X9, [X9 + 0xDF0]
	0x033ABA1C LDR X23, [X8]
	0x033ABA20 LDR X0, [X9]
	0x033ABA24 BL 0x1C16F10
	0x033ABA28 ADRP X8, 0xD80000
	0x033ABA2C LDR X8, [X8 + 0xDF8]
	0x033ABA30 MOV X1, X23
	0x033ABA34 MOV X3, X31
	0x033ABA38 MOV X22, X0
	0x033ABA3C LDR X2, [X8]
	0x033ABA40 BL 0x24AD1FC
	0x033ABA44 LDR X8, [X20]
	0x033ABA48 LDR X8, [X8 + 0xB8]
	0x033ABA4C STR X22, [X8 + 0x8]
	0x033ABA50 LDR X2, [X24]
	0x033ABA54 MOV X0, X19
	0x033ABA58 MOV X1, X22
	0x033ABA5C BL 0x21A57A0
	0x033ABA60 TBZ X0, 0x0, 0x33AC2BC
	0x033ABA64 CBZ X21, 0x33AC258
	0x033ABA68 LDR X8, [X21 + 0x18]
	0x033ABA6C CBZ X8, 0x33AC258
	0x033ABA70 MOV X0, X21
	0x033ABA74 MOV X1, X31
	0x033ABA78 BL 0x33A01F0
	0x033ABA7C CBZ X0, 0x33ABAB0
	0x033ABA80 ADRP X8, 0xD7B000
	0x033ABA84 LDR X8, [X8 + 0x1D0]
	0x033ABA88 MOV X22, X0
	0x033ABA8C LDR X23, [X8]
	0x033ABA90 MOV X1, X23
	0x033ABA94 BL 0x1C16E00
	0x033ABA98 MOV X21, X0
	0x033ABA9C CBZ X0, 0x33AC304
	0x033ABAA0 CBZ X19, 0x33ABAB8
	0x033ABAA4 LDR W20, [X19 + 0x18]
	0x033ABAA8 CBNZ X21, 0x33ABAC0
	0x033ABAAC B 0x33AC238
	0x033ABAB0 MOV X21, X31
	0x033ABAB4 CBNZ X19, 0x33ABAA4
	0x033ABAB8 MOV W20, W31
	0x033ABABC CBZ X21, 0x33AC238
	0x033ABAC0 LDR X8, [X21 + 0x18]
	0x033ABAC4 STR X25, [X31 + 0x10]
	0x033ABAC8 CMP W8, 0x1
	0x033ABACC AND X8, X8, 0x0
	0x033ABAD0 B.LT 0x33ABFA0
	0x033ABAD4 STR W31, [X31 + 0x1C]
	0x033ABAD8 ADRP X29, 0xD48000
	0x033ABADC LDR X29, [X29 + 0x6C0]
	0x033ABAE0 MOV W22, W31
	0x033ABAE4 MOV X28, X31
	0x033ABAE8 CBZ X19, 0x33ABD58
	0x033ABAEC CMP X28, W8, UXTW
	0x033ABAF0 B.CS 0x33AC234
	0x033ABAF4 ADD X8, X21, X28, 0x3, LSL
	0x033ABAF8 LDR X0, [X8 + 0x20]
	0x033ABAFC CBZ X0, 0x33AC238
	0x033ABB00 LDR X8, [X0]
	0x033ABB04 LDR X9, [X8 + 0x258]
	0x033ABB08 LDR X1, [X8 + 0x260]
	0x033ABB0C BLR X9
	0x033ABB10 CBZ X0, 0x33AC238
	0x033ABB14 LDR X8, [X0 + 0x18]
	0x033ABB18 MOV X23, X0
	0x033ABB1C CMP W20, W8
	0x033ABB20 B.NE 0x33ABF8C
	0x033ABB24 CMP W20, 0x1
	0x033ABB28 B.LT 0x33ABD54
	0x033ABB2C CBZ W8, 0x33AC234
	0x033ABB30 MOV X25, X31
	0x033ABB34 MOVZ W26, 0x1
	0x033ABB38 ADD X8, X23, X25, 0x3, LSL
	0x033ABB3C LDR X0, [X8 + 0x20]
	0x033ABB40 CBZ X0, 0x33AC238
	0x033ABB44 LDR X8, [X0]
	0x033ABB48 SUB W22, W26, 0x1
	0x033ABB4C LDP X9, X1, [X8 + 0x1D8]
	0x033ABB50 BLR X9
	0x033ABB54 LDR W8, [X19 + 0x18]
	0x033ABB58 CMP W22, W8
	0x033ABB5C B.CS 0x33AC234
	0x033ABB60 ADD X27, X19, X25, 0x3, LSL
	0x033ABB64 MOV X24, X0
	0x033ABB68 LDR X25, [X27 + 0x20]!
	0x033ABB6C LDR X0, [X29]
	0x033ABB70 LDR W8, [X0 + 0xE0]
	0x033ABB74 CBNZ W8, 0x33ABB7C
	0x033ABB78 BL 0x1C16DFC
	0x033ABB7C MOV X0, X24
	0x033ABB80 MOV X1, X25
	0x033ABB84 MOV X2, X31
	0x033ABB88 BL 0x3395194
	0x033ABB8C TBNZ X0, 0x0, 0x33ABD30
	0x033ABB90 LDR X0, [X29]
	0x033ABB94 ADRP X9, 0xD52000
	0x033ABB98 LDR W8, [X0 + 0xE0]
	0x033ABB9C LDR X9, [X9 + 0x968]
	0x033ABBA0 LDR X25, [X9]
	0x033ABBA4 CBNZ W8, 0x33ABBAC
	0x033ABBA8 BL 0x1C16DFC
	0x033ABBAC MOV X0, X25
	0x033ABBB0 MOV X1, X31
	0x033ABBB4 BL 0x338C698
	0x033ABBB8 MOV X1, X0
	0x033ABBBC MOV X0, X24
	0x033ABBC0 MOV X2, X31
	0x033ABBC4 BL 0x3395194
	0x033ABBC8 TBNZ X0, 0x0, 0x33ABD30
	0x033ABBCC CBZ X24, 0x33AC238
	0x033ABBD0 MOV X0, X24
	0x033ABBD4 MOV X1, X31
	0x033ABBD8 BL 0x3397374
	0x033ABBDC LDR W8, [X19 + 0x18]
	0x033ABBE0 CMP W22, W8
	0x033ABBE4 B.CS 0x33AC234
	0x033ABBE8 LDR X1, [X27]
	0x033ABBEC TBZ X0, 0x0, 0x33ABD18
	0x033ABBF0 CBZ X1, 0x33AC238
	0x033ABBF4 LDR X8, [X1]
	0x033ABBF8 MOV X0, X1
	0x033ABBFC LDR X9, [X8 + 0x328]
	0x033ABC00 LDR X8, [X8 + 0x330]
	0x033ABC04 MOV X1, X8
	0x033ABC08 BLR X9
	0x033ABC0C CBZ X0, 0x33ABD58
	0x033ABC10 ADRP X8, 0xD71000
	0x033ABC14 LDR X9, [X0]
	0x033ABC18 LDR X8, [X8 + 0x4E8]
	0x033ABC1C LDRB W11, [X9 + 0x130]
	0x033ABC20 LDR X8, [X8]
	0x033ABC24 LDRB W10, [X8 + 0x130]
	0x033ABC28 CMP W11, W10
	0x033ABC2C B.CC 0x33ABD58
	0x033ABC30 LDR X9, [X9 + 0xC8]
	0x033ABC34 ADD X9, X9, X10, 0x3, LSL
	0x033ABC38 LDUR X9, [X9 - 0x8]
	0x033ABC3C CMP X9, X8
	0x033ABC40 B.NE 0x33ABD58
	0x033ABC44 LDR W8, [X19 + 0x18]
	0x033ABC48 CMP W22, W8
	0x033ABC4C B.CS 0x33AC234
	0x033ABC50 LDR X0, [X27]
	0x033ABC54 CBZ X0, 0x33AC238
	0x033ABC58 LDR X8, [X0]
	0x033ABC5C LDR X9, [X8 + 0x328]
	0x033ABC60 LDR X1, [X8 + 0x330]
	0x033ABC64 BLR X9
	0x033ABC68 LDR X8, [X24]
	0x033ABC6C MOV X25, X0
	0x033ABC70 MOV X0, X24
	0x033ABC74 LDR X9, [X8 + 0x328]
	0x033ABC78 LDR X1, [X8 + 0x330]
	0x033ABC7C BLR X9
	0x033ABC80 ADRP X8, 0xD80000
	0x033ABC84 LDR X8, [X8 + 0x538]
	0x033ABC88 MOV X24, X0
	0x033ABC8C LDR X8, [X8]
	0x033ABC90 LDR W9, [X8 + 0xE0]
	0x033ABC94 CBNZ W9, 0x33ABCA0
	0x033ABC98 MOV X0, X8
	0x033ABC9C BL 0x1C16DFC
	0x033ABCA0 ADRP X8, 0xD71000
	0x033ABCA4 LDR X8, [X8 + 0x4E8]
	0x033ABCA8 LDR X1, [X8]
	0x033ABCAC CBZ X25, 0x33ABCD8
	0x033ABCB0 LDR X8, [X25]
	0x033ABCB4 LDRB W9, [X1 + 0x130]
	0x033ABCB8 LDRB W10, [X8 + 0x130]
	0x033ABCBC CMP W10, W9
	0x033ABCC0 B.CC 0x33AC244
	0x033ABCC4 LDR X8, [X8 + 0xC8]
	0x033ABCC8 ADD X8, X8, X9, 0x3, LSL
	0x033ABCCC LDUR X8, [X8 - 0x8]
	0x033ABCD0 CMP X8, X1
	0x033ABCD4 B.NE 0x33AC244
	0x033ABCD8 CBZ X24, 0x33ABD04
	0x033ABCDC LDR X8, [X24]
	0x033ABCE0 LDRB W9, [X1 + 0x130]
	0x033ABCE4 LDRB W10, [X8 + 0x130]
	0x033ABCE8 CMP W10, W9
	0x033ABCEC B.CC 0x33AC23C
	0x033ABCF0 LDR X8, [X8 + 0xC8]
	0x033ABCF4 ADD X8, X8, X9, 0x3, LSL
	0x033ABCF8 LDUR X8, [X8 - 0x8]
	0x033ABCFC CMP X8, X1
	0x033ABD00 B.NE 0x33AC23C
	0x033ABD04 MOV X0, X25
	0x033ABD08 MOV X1, X24
	0x033ABD0C BL 0x33AC318
	0x033ABD10 TBNZ X0, 0x0, 0x33ABD30
	0x033ABD14 B 0x33ABD58
	0x033ABD18 LDR X8, [X24]
	0x033ABD1C MOV X0, X24
	0x033ABD20 LDR X9, [X8 + 0x2A8]
	0x033ABD24 LDR X2, [X8 + 0x2B0]
	0x033ABD28 BLR X9
	0x033ABD2C TBZ X0, 0x0, 0x33ABD58
	0x033ABD30 CMP W20, W26
	0x033ABD34 B.EQ 0x33ABD60
	0x033ABD38 LDR W8, [X23 + 0x18]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X19, 0x1035000
	015 Move W8, [X19+353]
	016 Move X23, X7
	017 Move X24, X6
	018 Move X28, X3
	019 Move X20, X2
	020 Move [X31+72], W1
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {66}
	025 Move X0, 0xD83000
	026 Move X0, [X0+3480]
	027 Call 0x1C17CF4
	028 Move X0, 0xD7E000
	029 Move X0, [X0+1336]
	030 Call 0x1C17CF4
	031 Move X0, 0xD83000
	032 Move X0, [X0+1336]
	033 Call 0x1C17CF4
	034 Move X0, 0xD83000
	035 Move X0, [X0+3488]
	036 Call 0x1C17CF4
	037 Move X0, 0xD4C000
	038 Move X0, [X0+3672]
	039 Call 0x1C17CF4
	040 Move X0, 0xD83000
	041 Move X0, [X0+3280]
	042 Call 0x1C17CF4
	043 Move X0, 0xD4B000
	044 Move X0, [X0+2512]
	045 Call 0x1C17CF4
	046 Move X0, 0xD83000
	047 Move X0, [X0+3496]
	048 Call 0x1C17CF4
	049 Move X0, 0xD4B000
	050 Move X0, [X0+3824]
	051 Call 0x1C17CF4
	052 Move X0, 0xD55000
	053 Move X0, [X0+2408]
	054 Call 0x1C17CF4
	055 Move X0, 0xD74000
	056 Move X0, [X0+1256]
	057 Call 0x1C17CF4
	058 Move X0, 0xD53000
	059 Move X0, [X0+3168]
	060 Call 0x1C17CF4
	061 Move X0, 0xD4B000
	062 Move X0, [X0+1728]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X19+353], W8
	066 Compare X20, 0
	067 JumpIfEqual {2090}
	068 Move X8, [X20+24]
	069 Compare X8, 0
	070 JumpIfEqual {2090}
	071 Move X0, X20
	072 Move X1, X31
	073 Call Array.Clone, X0
	074 Compare X0, 0
	075 JumpIfEqual {2129}
	076 Move X8, 0xD83000
	077 Move X8, [X8+3280]
	078 Move X21, X0
	079 Move X22, [X8]
	080 Move X1, X22
	081 Call 0x1C17E00
	082 Compare X0, 0
	083 JumpIfEqual {2131}
	084 Move X8, 0xD83000
	085 Move X8, [X8+3488]
	086 Move X27, X0
	087 Move [X23], X31
	088 Move [X31+16], X23
	089 Move X0, [X8]
	090 Move W1, [X27+24]
	091 Move X22, 0xD4C000
	092 Move X22, [X22+3672]
	093 Call 0x1C17D6C
	094 Move X1, [X27+24]
	095 Move X23, X0
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move W8, W31
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X19, W8
	100 Add X20, X27, X19
	101 Add X20, X20, 32
	102 Move X0, [X20]
	103 Compare X0, 0
	104 JumpIfEqual {216}
	105 Move X8, [X0]
	106 Move X9, [X8+920]
	107 Move X1, [X8+928]
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Compare X0, 0
	110 JumpIfEqual {216}
	111 Move X8, [X28]
	112 Compare X8, 0
	113 JumpIfEqual {216}
	114 Move W9, [X0+24]
	115 Move W8, [X8+24]
	116 Move X26, X0
	117 Move X0, [X22]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 NotImplemented "Instruction CSEL not yet implemented."
	120 Call 0x1C17D6C
	121 Compare X23, 0
	122 JumpIfEqual {216}
	123 Move W8, [X23+24]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X21, X0
	126 Add X8, X23, X19
	127 Move [X8+32], X0
	128 Compare X24, 0
	129 JumpIfEqual {148}
	130 Move X8, 0xD82000
	131 Move X8, [X8+1336]
	132 Move X0, [X8]
	133 Move W8, [X0+224]
	134 Compare W8, 0
	135 JumpIfNotEqual {137}
	136 Call 0x1C17DFC
	137 Move X0, X21
	138 Move X1, X26
	139 Move X2, X24
	140 Call DefaultBinder.CreateParamOrder, X0, X1, X2
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfEqual {166}
	145 Move W8, [X27+24]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move [X20], X31
	148 Move X8, [X28]
	149 Compare X8, 0
	150 JumpIfEqual {216}
	151 Move X9, [X8+24]
	152 Move X8, X9
	153 ShiftRight X8, 32
	154 And X8, X8, 0x7FFFFFFF
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move X8, X31
	157 Move X9, W9
	158 Add X10, X21, 32
	159 Compare X21, 0
	160 JumpIfEqual {216}
	161 Move W11, [X21+24]
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move [X10], W8
	164 Add X8, X8, 1
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move X1, [X27+24]
	167 Add W8, W19, 1
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X19, 0xD52000
	170 Move X19, [X19+3168]
	171 Move X0, [X19]
	172 Call 0x1C17D6C
	173 Move X8, [X28]
	174 Compare X8, 0
	175 JumpIfEqual {216}
	176 Move X21, X0
	177 Move X0, [X19]
	178 Move W1, [X8+24]
	179 Call 0x1C17D6C
	180 Move X8, [X28]
	181 Compare X8, 0
	182 JumpIfEqual {216}
	183 Move X22, 0xD4A000
	184 Move X22, [X22+1728]
	185 Move X26, X0
	186 Move W19, 4
	187 Move W9, [X8+24]
	188 Subtract X20, X19, 4
	189 NotImplemented "Instruction CMP not yet implemented."
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move X0, [X8]
	192 Compare X0, 0
	193 JumpIfEqual {211}
	194 Move X1, X31
	195 Call "il2cpp_vm_object_is_inst", X0
	196 Compare X26, 0
	197 JumpIfEqual {216}
	198 Move X22, X0
	199 Compare X0, 0
	200 JumpIfEqual {207}
	201 Move X8, [X26]
	202 Move X0, X22
	203 Move X1, [X8+64]
	204 Call 0x1C17E00
	205 Compare X0, 0
	206 JumpIfEqual {2083}
	207 Move W8, [X26+24]
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move [X26], X22
	210 Move X8, [X28]
	211 Move X22, 0xD4A000
	212 Move X22, [X22+1728]
	213 Add X19, X19, 1
	214 Compare X8, 0
	215 JumpIfNotEqual {187}
	216 Call 0x1C17F20
	217 Move X8, [X27+24]
	218 Move [X31+48], X21
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move [X31+32], X24
	221 Move [X31+88], X28
	222 Move [X31+56], X27
	223 Move X24, 0xD7D000
	224 Move X24, [X24+1336]
	225 Move X25, X31
	226 Move W20, W31
	227 And X8, X8, 0
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Add X19, X27, X25
	230 Add X19, X19, 32
	231 Move X0, [X19]
	232 Move X1, X31
	233 Move X2, X31
	234 Call MethodBase.op_Equality, X0, X1
	235 Move TEMP, X0
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfEqual {1095}
	239 Move W8, [X27+24]
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move X0, [X19]
	242 Compare X0, 0
	243 JumpIfEqual {216}
	244 Move X8, [X0]
	245 Move X9, [X8+920]
	246 Move X1, [X8+928]
	247 NotImplemented "Instruction BLR not yet implemented."
	248 Compare X0, 0
	249 JumpIfEqual {216}
	250 Move X21, [X0+24]
	251 Move X8, [X28]
	252 Move X27, X0
	253 Compare X21, 0
	254 JumpIfEqual {289}
	255 Move [X31+40], X19
	256 Compare X8, 0
	257 JumpIfEqual {216}
	258 Move W19, [X8+24]
	259 Move [X31+64], X20
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Subtract W8, W21, 1
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Add X8, X27, W19
	264 Add X20, X8, 32
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Move X0, [X20]
	267 Compare X0, 0
	268 JumpIfEqual {216}
	269 Move X8, [X0]
	270 Move X9, [X8+504]
	271 Move X1, [X8+512]
	272 NotImplemented "Instruction BLR not yet implemented."
	273 Move X8, [X24]
	274 Move X21, X0
	275 Move W9, [X8+224]
	276 Compare W9, 0
	277 JumpIfNotEqual {281}
	278 Move X0, X8
	279 Call 0x1C17DFC
	280 Move X8, [X24]
	281 Move X8, [X8+184]
	282 Move X8, [X8]
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Move X21, [X27+24]
	285 Add W19, W19, 1
	286 Add X20, X20, 8
	287 Subtract W8, W21, 1
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Compare X8, 0
	290 JumpIfEqual {216}
	291 Move X8, [X8+24]
	292 Move X27, [X31+56]
	293 Compare X8, 0
	294 JumpIfEqual {308}
	295 Move W8, [X27+24]
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Move X0, [X19]
	298 Compare X0, 0
	299 JumpIfEqual {216}
	300 Move X8, [X0]
	301 Move X9, [X8+632]
	302 Move X1, [X8+640]
	303 NotImplemented "Instruction BLR not yet implemented."
	304 Move TEMP, X0
	305 And TEMP, TEMP, 2
	306 Compare TEMP, 2
	307 JumpIfNotEqual {1095}
	308 Compare X23, 0
	309 JumpIfEqual {216}
	310 Move W8, [X23+24]
	311 NotImplemented "Instruction CMP not yet implemented."
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Add X8, X23, 32
	314 Move X9, [X8]
	315 Move X10, X19
	316 Move X19, W20
	317 Move [X8], X9
	318 Move W8, [X27+24]
	319 NotImplemented "Instruction CMP not yet implemented."
	320 Move X22, [X10]
	321 Compare X22, 0
	322 JumpIfNotEqual {1082}
	323 Compare W21, 0
	324 JumpIfEqual {1192}
	325 Subtract W8, W21, 1
	326 Move X24, W8
	327 Add X20, X27, X24
	328 Add X20, X20, 32
	329 Move X0, [X20]
	330 Compare X0, 0
	331 JumpIfEqual {216}
	332 Move X8, [X0]
	333 Move X9, [X8+472]
	334 Move X1, [X8+480]
	335 NotImplemented "Instruction BLR not yet implemented."
	336 Compare X0, 0
	337 JumpIfEqual {216}
	338 Move X1, X31
	339 Call Type.get_IsArray, X0
	340 NotImplemented "Instruction CMP not yet implemented."
	341 Move TEMP, X0
	342 And TEMP, TEMP, 1
	343 Compare TEMP, 1
	344 JumpIfNotEqual {467}
	345 Move W8, [X27+24]
	346 NotImplemented "Instruction CMP not yet implemented."
	347 Move X0, [X22]
	348 Move X9, 0xD82000
	349 Move X22, [X20]
	350 Move W8, [X0+224]
	351 Move X9, [X9+3496]
	352 Move X21, [X9]
	353 Compare W8, 0
	354 JumpIfNotEqual {356}
	355 Call 0x1C17DFC
	356 Move X0, X21
	357 Move X1, X31
	358 Call Type.GetTypeFromHandle, X0
	359 Compare X22, 0
	360 JumpIfEqual {216}
	361 Move X8, [X22]
	362 Move X1, X0
	363 Move W2, 1
	364 Move X0, X22
	365 Move X9, [X8+520]
	366 Move X3, [X8+528]
	367 NotImplemented "Instruction BLR not yet implemented."
	368 Move TEMP, X0
	369 And TEMP, TEMP, 1
	370 Compare TEMP, 1
	371 JumpIfNotEqual {552}
	372 Move X22, 0xD4A000
	373 Move X22, [X22+1728]
	374 Compare X23, 0
	375 JumpIfEqual {216}
	376 Move W8, [X23+24]
	377 NotImplemented "Instruction CMP not yet implemented."
	378 Add X8, X23, X25
	379 Move X8, [X8+32]
	380 Compare X8, 0
	381 JumpIfEqual {216}
	382 Move W9, [X8+24]
	383 NotImplemented "Instruction CMP not yet implemented."
	384 Add X8, X8, X24
	385 Move W8, [X8+32]
	386 NotImplemented "Instruction CMP not yet implemented."
	387 Move W8, [X27+24]
	388 NotImplemented "Instruction CMP not yet implemented."
	389 Move X24, 0xD7D000
	390 Move X0, [X20]
	391 Move X24, [X24+1336]
	392 Compare X0, 0
	393 JumpIfNotEqual {546}
	394 Move TEMP, X0
	395 And TEMP, TEMP, 1
	396 Compare TEMP, 1
	397 JumpIfNotEqual {465}
	398 Move W8, [X27+24]
	399 NotImplemented "Instruction CMP not yet implemented."
	400 Move X0, [X22]
	401 Move X9, 0xD82000
	402 Move X22, [X20]
	403 Move W8, [X0+224]
	404 Move X9, [X9+3496]
	405 Move X21, [X9]
	406 Compare W8, 0
	407 JumpIfNotEqual {409}
	408 Call 0x1C17DFC
	409 Move X0, X21
	410 Move X1, X31
	411 Call Type.GetTypeFromHandle, X0
	412 Compare X22, 0
	413 JumpIfEqual {216}
	414 Move X8, [X22]
	415 Move X1, X0
	416 Move W2, 1
	417 Move X0, X22
	418 Move X9, [X8+520]
	419 Move X3, [X8+528]
	420 NotImplemented "Instruction BLR not yet implemented."
	421 Move TEMP, X0
	422 And TEMP, TEMP, 1
	423 Compare TEMP, 1
	424 JumpIfNotEqual {558}
	425 Move X22, 0xD4A000
	426 Move X22, [X22+1728]
	427 Compare X23, 0
	428 JumpIfEqual {216}
	429 Move W8, [X23+24]
	430 NotImplemented "Instruction CMP not yet implemented."
	431 Add X8, X23, X25
	432 Move X8, [X8+32]
	433 Compare X8, 0
	434 JumpIfEqual {216}
	435 Move W9, [X8+24]
	436 NotImplemented "Instruction CMP not yet implemented."
	437 Add X8, X8, X24
	438 Move W8, [X8+32]
	439 NotImplemented "Instruction CMP not yet implemented."
	440 Move W8, [X27+24]
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Move X0, [X20]
	443 Compare X0, 0
	444 JumpIfEqual {216}
	445 Move X8, [X0]
	446 Move X9, [X8+472]
	447 Move X1, [X8+480]
	448 NotImplemented "Instruction BLR not yet implemented."
	449 Compare X26, 0
	450 JumpIfEqual {216}
	451 Move W8, [X26+24]
	452 NotImplemented "Instruction CMP not yet implemented."
	453 Compare X0, 0
	454 JumpIfEqual {216}
	455 Move X8, [X0]
	456 Add X9, X26, X24
	457 Move X1, [X9+32]
	458 Move X9, [X8+680]
	459 Move X2, [X8+688]
	460 NotImplemented "Instruction BLR not yet implemented."
	461 Move TEMP, X0
	462 And TEMP, TEMP, 1
	463 Compare TEMP, 1
	464 JumpIfNotEqual {569}
	465 Move [X31+80], X31
	466 Move X24, 0xD7D000
	467 Move X27, [X31+56]
	468 Move W21, [X27+24]
	469 Subtract W8, W21, 1
	470 Move X20, [X31+64]
	471 NotImplemented "Instruction CMP not yet implemented."
	472 NotImplemented "Instruction CMP not yet implemented."
	473 Add X20, X27, W19
	474 Add X20, X20, 32
	475 Move X0, [X20]
	476 Compare X0, 0
	477 JumpIfEqual {216}
	478 Move X8, [X0]
	479 Move X9, [X8+504]
	480 Move X1, [X8+512]
	481 NotImplemented "Instruction BLR not yet implemented."
	482 Move X8, [X24]
	483 Move X21, X0
	484 Move W9, [X8+224]
	485 Compare W9, 0
	486 JumpIfNotEqual {490}
	487 Move X0, X8
	488 Call 0x1C17DFC
	489 Move X8, [X24]
	490 Move X8, [X8+184]
	491 Move X8, [X8]
	492 NotImplemented "Instruction CMP not yet implemented."
	493 Move [X31+80], X31
	494 Move X27, [X31+56]
	495 Move W8, [X27+24]
	496 NotImplemented "Instruction CMP not yet implemented."
	497 Move X0, [X20]
	498 Compare X0, 0
	499 JumpIfEqual {216}
	500 Move X8, [X0]
	501 Move X9, [X8+472]
	502 Move X1, [X8+480]
	503 NotImplemented "Instruction BLR not yet implemented."
	504 Compare X0, 0
	505 JumpIfEqual {216}
	506 Move X1, X31
	507 Call Type.get_IsArray, X0
	508 Move TEMP, X0
	509 And TEMP, TEMP, 1
	510 Compare TEMP, 1
	511 JumpIfNotEqual {563}
	512 Move W8, [X27+24]
	513 NotImplemented "Instruction CMP not yet implemented."
	514 Move X0, [X22]
	515 Move X9, 0xD82000
	516 Move X22, [X20]
	517 Move W8, [X0+224]
	518 Move X9, [X9+3496]
	519 Move X21, [X9]
	520 Compare W8, 0
	521 JumpIfNotEqual {523}
	522 Call 0x1C17DFC
	523 Move X0, X21
	524 Move X1, X31
	525 Call Type.GetTypeFromHandle, X0
	526 Compare X22, 0
	527 JumpIfEqual {216}
	528 Move X8, [X22]
	529 Move X1, X0
	530 Move W2, 1
	531 Move X0, X22
	532 Move X9, [X8+520]
	533 Move X3, [X8+528]
	534 NotImplemented "Instruction BLR not yet implemented."
	535 Move TEMP, X0
	536 And TEMP, TEMP, 1
	537 Compare TEMP, 1
	538 JumpIfNotEqual {565}
	539 Move W8, [X27+24]
	540 Move X22, 0xD4A000
	541 Move X22, [X22+1728]
	542 NotImplemented "Instruction CMP not yet implemented."
	543 Move X0, [X20]
	544 Compare X0, 0
	545 JumpIfEqual {216}
	546 Move X8, [X0]
	547 Move X9, [X8+472]
	548 Move X1, [X8+480]
	549 NotImplemented "Instruction BLR not yet implemented."
	550 Compare X0, 0
	551 JumpIfNotEqual {582}
	552 Move X22, 0xD4A000
	553 Move X27, [X31+56]
	554 Move X22, [X22+1728]
	555 Move X24, 0xD7D000
	556 Move X24, [X24+1336]
	557 Move X20, [X31+64]
	558 Move [X31+80], X31
	559 Move X22, 0xD4A000
	560 Move X24, 0xD7D000
	561 Move X22, [X22+1728]
	562 Move X24, [X24+1336]
	563 Move X27, [X31+56]
	564 Move X20, [X31+64]
	565 Move X22, 0xD4A000
	566 Move X27, [X31+56]
	567 Move X20, [X31+64]
	568 Move X22, [X22+1728]
	569 Move W8, [X27+24]
	570 NotImplemented "Instruction CMP not yet implemented."
	571 Move X0, [X20]
	572 Compare X0, 0
	573 JumpIfEqual {216}
	574 Move X8, [X0]
	575 Move X9, [X8+472]
	576 Move X1, [X8+480]
	577 NotImplemented "Instruction BLR not yet implemented."
	578 Move X24, 0xD7D000
	579 Move X24, [X24+1336]
	580 Compare X0, 0
	581 JumpIfEqual {216}
	582 Move X8, [X0]
	583 Move X9, [X8+1064]
	584 Move X1, [X8+1072]
	585 NotImplemented "Instruction BLR not yet implemented."
	586 Move [X31+80], X0
	587 Move X0, [X22]
	588 Move W8, [X0+224]
	589 Compare W8, 0
	590 JumpIfNotEqual {592}
	591 Call 0x1C17DFC
	592 Move X0, [X31+80]
	593 Move X1, X31
	594 Move X2, X31
	595 Call Type.op_Inequality, X0, X1
	596 Move TEMP, X0
	597 And TEMP, TEMP, 1
	598 Compare TEMP, 1
	599 JumpIfNotEqual {602}
	600 Move W8, [X27+24]
	601 Subtract W20, W8, 1
	602 Move X8, [X28]
	603 Compare X8, 0
	604 JumpIfEqual {216}
	605 Move W20, [X8+24]
	606 NotImplemented "Instruction CMP not yet implemented."
	607 Add X8, X23, X25
	608 Move W19, W31
	609 Add X24, X8, 32
	610 Move W8, [X27+24]
	611 NotImplemented "Instruction CMP not yet implemented."
	612 Move X28, W19
	613 Add X8, X27, X28
	614 Move X0, [X8+32]
	615 Compare X0, 0
	616 JumpIfEqual {216}
	617 Move X8, [X0]
	618 Move X9, [X8+472]
	619 Move X1, [X8+480]
	620 NotImplemented "Instruction BLR not yet implemented."
	621 Compare X0, 0
	622 JumpIfEqual {216}
	623 Move X1, X31
	624 Move X29, X0
	625 Call Type.get_IsByRef, X0
	626 Move TEMP, X0
	627 And TEMP, TEMP, 1
	628 Compare TEMP, 1
	629 JumpIfNotEqual {636}
	630 Move X8, [X29]
	631 Move X0, X29
	632 Move X9, [X8+1064]
	633 Move X1, [X8+1072]
	634 NotImplemented "Instruction BLR not yet implemented."
	635 Move X29, X0
	636 Compare X23, 0
	637 JumpIfEqual {216}
	638 Move W8, [X23+24]
	639 NotImplemented "Instruction CMP not yet implemented."
	640 Move X8, [X24]
	641 Compare X8, 0
	642 JumpIfEqual {216}
	643 Move W9, [X8+24]
	644 NotImplemented "Instruction CMP not yet implemented."
	645 Compare X26, 0
	646 JumpIfEqual {216}
	647 Add X8, X8, X28
	648 NotImplemented "Instruction LDRSW not yet implemented."
	649 Move W9, [X26+24]
	650 NotImplemented "Instruction CMP not yet implemented."
	651 Move X0, [X22]
	652 Add X8, X26, X8
	653 Move X21, [X8+32]
	654 Move W9, [X0+224]
	655 Compare W9, 0
	656 JumpIfNotEqual {658}
	657 Call 0x1C17DFC
	658 Move X0, X29
	659 Move X1, X21
	660 Move X2, X31
	661 Call Type.op_Equality, X0, X1
	662 Move TEMP, X0
	663 And TEMP, TEMP, 1
	664 Compare TEMP, 1
	665 JumpIfEqual {892}
	666 Move W8, [X31+72]
	667 Move TEMP, X8
	668 And TEMP, TEMP, 0x40000
	669 Compare TEMP, 0x40000
	670 JumpIfNotEqual {697}
	671 Move W8, [X23+24]
	672 NotImplemented "Instruction CMP not yet implemented."
	673 Move X9, [X24]
	674 Compare X9, 0
	675 JumpIfEqual {216}
	676 Move W8, [X9+24]
	677 NotImplemented "Instruction CMP not yet implemented."
	678 Move X8, [X31+88]
	679 Move X8, [X8]
	680 Compare X8, 0
	681 JumpIfEqual {216}
	682 Add X9, X9, X28
	683 NotImplemented "Instruction LDRSW not yet implemented."
	684 Move W10, [X8+24]
	685 NotImplemented "Instruction CMP not yet implemented."
	686 Move X0, [X22]
	687 Add X8, X8, X9
	688 Move X21, [X8+32]
	689 Move W9, [X0+224]
	690 Compare W9, 0
	691 JumpIfNotEqual {694}
	692 Call 0x1C17DFC
	693 Move X0, [X22]
	694 Move X8, [X0+184]
	695 Move X8, [X8+24]
	696 NotImplemented "Instruction CMP not yet implemented."
	697 Move W8, [X23+24]
	698 NotImplemented "Instruction CMP not yet implemented."
	699 Move X8, [X24]
	700 Compare X8, 0
	701 JumpIfEqual {216}
	702 Move W9, [X8+24]
	703 NotImplemented "Instruction CMP not yet implemented."
	704 Move X9, [X31+88]
	705 Move X9, [X9]
	706 Compare X9, 0
	707 JumpIfEqual {216}
	708 Add X8, X8, X28
	709 NotImplemented "Instruction LDRSW not yet implemented."
	710 Move W10, [X9+24]
	711 NotImplemented "Instruction CMP not yet implemented."
	712 Add X8, X9, X8
	713 Move X8, [X8+32]
	714 Compare X8, 0
	715 JumpIfEqual {892}
	716 Move X0, [X22]
	717 Move X9, 0xD54000
	718 Move W8, [X0+224]
	719 Move X9, [X9+2408]
	720 Move X21, [X9]
	721 Compare W8, 0
	722 JumpIfNotEqual {724}
	723 Call 0x1C17DFC
	724 Move X0, X21
	725 Move X1, X31
	726 Call Type.GetTypeFromHandle, X0
	727 Move X1, X0
	728 Move X0, X29
	729 Move X2, X31
	730 Call Type.op_Equality, X0, X1
	731 Move TEMP, X0
	732 And TEMP, TEMP, 1
	733 Compare TEMP, 1
	734 JumpIfEqual {892}
	735 Compare X29, 0
	736 JumpIfEqual {216}
	737 Move X0, X29
	738 Move X1, X31
	739 Call Type.get_IsPrimitive, X0
	740 Move W8, [X23+24]
	741 NotImplemented "Instruction CMP not yet implemented."
	742 Move X8, [X24]
	743 Compare X8, 0
	744 JumpIfEqual {216}
	745 Move W9, [X8+24]
	746 NotImplemented "Instruction CMP not yet implemented."
	747 Add X8, X8, X28
	748 NotImplemented "Instruction LDRSW not yet implemented."
	749 Move W9, [X26+24]
	750 NotImplemented "Instruction CMP not yet implemented."
	751 Move X9, 0xD4A000
	752 Move X9, [X9+1728]
	753 Move W22, W0
	754 Add X8, X26, X8
	755 Move X21, [X8+32]
	756 Move X0, [X9]
	757 Move W9, [X0+224]
	758 Compare W9, 0
	759 JumpIfNotEqual {761}
	760 Call 0x1C17DFC
	761 Move X0, X21
	762 Move X1, X31
	763 Move X2, X31
	764 Call Type.op_Equality, X0, X1
	765 Move TEMP, X22
	766 And TEMP, TEMP, 1
	767 Compare TEMP, 1
	768 JumpIfNotEqual {817}
	769 Move TEMP, X0
	770 And TEMP, TEMP, 1
	771 Compare TEMP, 1
	772 JumpIfEqual {1098}
	773 Move W8, [X23+24]
	774 NotImplemented "Instruction CMP not yet implemented."
	775 Move X9, [X24]
	776 Compare X9, 0
	777 JumpIfEqual {216}
	778 Move W8, [X9+24]
	779 NotImplemented "Instruction CMP not yet implemented."
	780 Move X8, [X31+88]
	781 Move X8, [X8]
	782 Compare X8, 0
	783 JumpIfEqual {216}
	784 Add X9, X9, X28
	785 NotImplemented "Instruction LDRSW not yet implemented."
	786 Move W10, [X8+24]
	787 NotImplemented "Instruction CMP not yet implemented."
	788 Move X10, 0xD82000
	789 Move X10, [X10+1336]
	790 Add X8, X8, X9
	791 Move X22, [X8+32]
	792 Move X0, [X10]
	793 Move W9, [X0+224]
	794 Compare W9, 0
	795 JumpIfNotEqual {797}
	796 Call 0x1C17DFC
	797 Move X9, 0xD73000
	798 Move X8, [X29]
	799 Move X9, [X9+1256]
	800 Move W10, [X8+304]
	801 Move X1, [X9]
	802 Move W9, [X1+304]
	803 NotImplemented "Instruction CMP not yet implemented."
	804 Move X8, [X8+200]
	805 Add X8, X8, X9
	806 NotImplemented "Instruction LDUR not yet implemented."
	807 NotImplemented "Instruction CMP not yet implemented."
	808 Move X0, X22
	809 Move X1, X29
	810 Call DefaultBinder.CanConvertPrimitiveObjectToType, X0, X1
	811 Move X22, 0xD4A000
	812 Move X22, [X22+1728]
	813 Move TEMP, X0
	814 And TEMP, TEMP, 1
	815 Compare TEMP, 1
	816 JumpIfEqual {892}
	817 Move X22, 0xD4A000
	818 Move X22, [X22+1728]
	819 Move TEMP, X0
	820 And TEMP, TEMP, 1
	821 Compare TEMP, 1
	822 JumpIfEqual {892}
	823 Move W8, [X23+24]
	824 NotImplemented "Instruction CMP not yet implemented."
	825 Move X8, [X24]
	826 Compare X8, 0
	827 JumpIfEqual {216}
	828 Move W9, [X8+24]
	829 NotImplemented "Instruction CMP not yet implemented."
	830 Add X8, X8, X28
	831 NotImplemented "Instruction LDRSW not yet implemented."
	832 Move W9, [X26+24]
	833 NotImplemented "Instruction CMP not yet implemented."
	834 Move X9, [X29]
	835 Add X8, X26, X8
	836 Move X1, [X8+32]
	837 Move X0, X29
	838 Move X8, [X9+680]
	839 Move X2, [X9+688]
	840 NotImplemented "Instruction BLR not yet implemented."
	841 Move TEMP, X0
	842 And TEMP, TEMP, 1
	843 Compare TEMP, 1
	844 JumpIfEqual {892}
	845 Move W8, [X23+24]
	846 NotImplemented "Instruction CMP not yet implemented."
	847 Move X8, [X24]
	848 Compare X8, 0
	849 JumpIfEqual {216}
	850 Move W9, [X8+24]
	851 NotImplemented "Instruction CMP not yet implemented."
	852 Add X8, X8, X28
	853 NotImplemented "Instruction LDRSW not yet implemented."
	854 Move W9, [X26+24]
	855 NotImplemented "Instruction CMP not yet implemented."
	856 Add X8, X26, X8
	857 Move X0, [X8+32]
	858 Compare X0, 0
	859 JumpIfEqual {216}
	860 Move X1, X31
	861 Call Type.get_IsCOMObject, X0
	862 Move TEMP, X0
	863 And TEMP, TEMP, 1
	864 Compare TEMP, 1
	865 JumpIfNotEqual {895}
	866 Move W8, [X23+24]
	867 NotImplemented "Instruction CMP not yet implemented."
	868 Move X9, [X24]
	869 Compare X9, 0
	870 JumpIfEqual {216}
	871 Move W8, [X9+24]
	872 NotImplemented "Instruction CMP not yet implemented."
	873 Move X8, [X31+88]
	874 Move X8, [X8]
	875 Compare X8, 0
	876 JumpIfEqual {216}
	877 Add X9, X9, X28
	878 NotImplemented "Instruction LDRSW not yet implemented."
	879 Move W10, [X8+24]
	880 NotImplemented "Instruction CMP not yet implemented."
	881 Move X10, [X29]
	882 Add X8, X8, X9
	883 Move X1, [X8+32]
	884 Move X0, X29
	885 Move X8, [X10+2152]
	886 Move X2, [X10+2160]
	887 NotImplemented "Instruction BLR not yet implemented."
	888 Move TEMP, X0
	889 And TEMP, TEMP, 1
	890 Compare TEMP, 1
	891 JumpIfNotEqual {895}
	892 Add W19, W19, 1
	893 NotImplemented "Instruction CMP not yet implemented."
	894 Move W19, W20
	895 Move X28, [X31+88]
	896 Move X24, 0xD7D000
	897 Move X24, [X24+1336]
	898 Move W19, W31
	899 Move X0, [X22]
	900 Move X20, [X31+64]
	901 Move W8, [X0+224]
	902 Compare W8, 0
	903 JumpIfNotEqual {905}
	904 Call 0x1C17DFC
	905 Move X0, [X31+80]
	906 Move X1, X31
	907 Move X2, X31
	908 Call Type.op_Inequality, X0, X1
	909 Move TEMP, X0
	910 And TEMP, TEMP, 1
	911 Compare TEMP, 1
	912 JumpIfNotEqual {1038}
	913 Move W8, [X27+24]
	914 Subtract W8, W8, 1
	915 NotImplemented "Instruction CMP not yet implemented."
	916 Move X8, [X28]
	917 Move X27, [X31+56]
	918 Compare X8, 0
	919 JumpIfEqual {216}
	920 Move W9, W19
	921 NotImplemented "Instruction SBFM not yet implemented."
	922 Add X20, X9, 32
	923 Move W8, [X8+24]
	924 NotImplemented "Instruction CMP not yet implemented."
	925 Move X0, [X31+80]
	926 Compare X0, 0
	927 JumpIfEqual {216}
	928 Move X1, X31
	929 Call Type.get_IsPrimitive, X0
	930 Compare X26, 0
	931 JumpIfEqual {216}
	932 Move W8, [X26+24]
	933 NotImplemented "Instruction CMP not yet implemented."
	934 Move X8, 0xD4A000
	935 Move X8, [X8+1728]
	936 Move W22, W0
	937 Move X21, [X26]
	938 Move X0, [X8]
	939 Move W8, [X0+224]
	940 Compare W8, 0
	941 JumpIfNotEqual {943}
	942 Call 0x1C17DFC
	943 Move X0, X21
	944 Move X1, X31
	945 Move X2, X31
	946 Call Type.op_Equality, X0, X1
	947 Move TEMP, X22
	948 And TEMP, TEMP, 1
	949 Compare TEMP, 1
	950 JumpIfNotEqual {989}
	951 Move TEMP, X0
	952 And TEMP, TEMP, 1
	953 Compare TEMP, 1
	954 JumpIfEqual {1039}
	955 Move X8, [X28]
	956 Compare X8, 0
	957 JumpIfEqual {216}
	958 Move W9, [X8+24]
	959 NotImplemented "Instruction CMP not yet implemented."
	960 Move X9, 0xD82000
	961 Move X9, [X9+1336]
	962 Move X22, [X8]
	963 Move X0, [X9]
	964 Move W9, [X0+224]
	965 Compare W9, 0
	966 JumpIfNotEqual {968}
	967 Call 0x1C17DFC
	968 Move X8, [X31+80]
	969 Move X9, 0xD73000
	970 Move X8, [X8]
	971 Move X9, [X9+1256]
	972 Move W10, [X8+304]
	973 Move X1, [X9]
	974 Move W9, [X1+304]
	975 NotImplemented "Instruction CMP not yet implemented."
	976 Move X8, [X8+200]
	977 Add X8, X8, X9
	978 NotImplemented "Instruction LDUR not yet implemented."
	979 NotImplemented "Instruction CMP not yet implemented."
	980 Move X1, [X31+80]
	981 Move X0, X22
	982 Call DefaultBinder.CanConvertPrimitiveObjectToType, X0, X1
	983 Move X22, 0xD4A000
	984 Move X22, [X22+1728]
	985 Move TEMP, X0
	986 And TEMP, TEMP, 1
	987 Compare TEMP, 1
	988 JumpIfEqual {1033}
	989 Move X22, 0xD4A000
	990 Move X22, [X22+1728]
	991 Move TEMP, X0
	992 And TEMP, TEMP, 1
	993 Compare TEMP, 1
	994 JumpIfEqual {1033}
	995 Move W8, [X26+24]
	996 NotImplemented "Instruction CMP not yet implemented."
	997 Move X0, [X31+80]
	998 Move X1, [X26]
	999 Move X8, [X0]
	1000 Move X9, [X8+680]
	1001 Move X2, [X8+688]
	1002 NotImplemented "Instruction BLR not yet implemented."
	1003 Move TEMP, X0
	1004 And TEMP, TEMP, 1
	1005 Compare TEMP, 1
	1006 JumpIfEqual {1033}
	1007 Move W8, [X26+24]
	1008 NotImplemented "Instruction CMP not yet implemented."
	1009 Move X0, [X26]
	1010 Compare X0, 0
	1011 JumpIfEqual {216}
	1012 Move X1, X31
	1013 Call Type.get_IsCOMObject, X0
	1014 Move TEMP, X0
	1015 And TEMP, TEMP, 1
	1016 Compare TEMP, 1
	1017 JumpIfNotEqual {1041}
	1018 Move X8, [X28]
	1019 Compare X8, 0
	1020 JumpIfEqual {216}
	1021 Move W9, [X8+24]
	1022 NotImplemented "Instruction CMP not yet implemented."
	1023 Move X0, [X31+80]
	1024 Move X1, [X8]
	1025 Move X9, [X0]
	1026 Move X8, [X9+2152]
	1027 Move X2, [X9+2160]
	1028 NotImplemented "Instruction BLR not yet implemented."
	1029 Move TEMP, X0
	1030 And TEMP, TEMP, 1
	1031 Compare TEMP, 1
	1032 JumpIfNotEqual {1041}
	1033 Move X8, [X28]
	1034 Add W19, W19, 1
	1035 Add X20, X20, 8
	1036 Compare X8, 0
	1037 JumpIfNotEqual {923}
	1038 Move X27, [X31+56]
	1039 Move X22, 0xD4A000
	1040 Move X22, [X22+1728]
	1041 Move X20, [X31+64]
	1042 Move X8, [X28]
	1043 Compare X8, 0
	1044 JumpIfEqual {216}
	1045 Move W8, [X8+24]
	1046 NotImplemented "Instruction CMP not yet implemented."
	1047 Compare X23, 0
	1048 JumpIfEqual {216}
	1049 Move W8, [X23+24]
	1050 Move X21, [X31+80]
	1051 NotImplemented "Instruction CMP not yet implemented."
	1052 NotImplemented "Instruction CMP not yet implemented."
	1053 Add X8, X23, 32
	1054 Move X9, [X8]
	1055 Move W10, W20
	1056 Move X19, W10
	1057 Move [X8], X9
	1058 Move X8, [X31+48]
	1059 Compare X8, 0
	1060 JumpIfEqual {216}
	1061 Move X20, [X31+48]
	1062 Compare X21, 0
	1063 JumpIfEqual {1070}
	1064 Move X8, [X20]
	1065 Move X0, X21
	1066 Move X1, [X8+64]
	1067 Call 0x1C17E00
	1068 Compare X0, 0
	1069 JumpIfEqual {2083}
	1070 Move W8, [X20+24]
	1071 Move X9, [X31+64]
	1072 NotImplemented "Instruction CMP not yet implemented."
	1073 Add X8, X20, X19
	1074 Move [X8+32], X21
	1075 Move W8, [X27+24]
	1076 NotImplemented "Instruction CMP not yet implemented."
	1077 Move X9, [X31+40]
	1078 Move X20, [X31+64]
	1079 Move X22, [X9]
	1080 Compare X22, 0
	1081 JumpIfEqual {1089}
	1082 Move X8, [X27]
	1083 Move X0, X22
	1084 Move X1, [X8+64]
	1085 Call 0x1C17E00
	1086 Compare X0, 0
	1087 JumpIfEqual {2083}
	1088 Move X8, [X27+24]
	1089 NotImplemented "Instruction CMP not yet implemented."
	1090 Add X8, X27, X19
	1091 Move [X8+32], X22
	1092 Move X22, 0xD4A000
	1093 Move X22, [X22+1728]
	1094 Add W20, W20, 1
	1095 Move W8, [X27+24]
	1096 Add X25, X25, 1
	1097 NotImplemented "Instruction CMP not yet implemented."
	1098 Move X22, 0xD4A000
	1099 Move X28, [X31+88]
	1100 Move X22, [X22+1728]
	1101 NotImplemented "Instruction CMP not yet implemented."
	1102 Move X9, [X31+32]
	1103 Compare W20, 0
	1104 JumpIfEqual {2109}
	1105 Move X21, [X31+48]
	1106 NotImplemented "Instruction CMP not yet implemented."
	1107 Compare W8, 0
	1108 JumpIfEqual {1192}
	1109 Move W10, W20
	1110 Subtract X10, X10, 2
	1111 Move X19, X31
	1112 Move X9, X31
	1113 Move W29, W31
	1114 Add X12, X21, 40
	1115 Add X11, X23, 40
	1116 Move [X31+64], X10
	1117 Add X10, X27, 40
	1118 Move [X31+28], W31
	1119 Move [X31+72], X11
	1120 Move [X31+80], X12
	1121 Move [X31+40], X10
	1122 Compare X23, 0
	1123 JumpIfEqual {216}
	1124 Move X10, [X23+24]
	1125 NotImplemented "Instruction CMP not yet implemented."
	1126 Compare X21, 0
	1127 JumpIfEqual {216}
	1128 Move X11, [X21+24]
	1129 NotImplemented "Instruction CMP not yet implemented."
	1130 Add X12, X19, 1
	1131 NotImplemented "Instruction CMP not yet implemented."
	1132 And X8, X10, 0
	1133 NotImplemented "Instruction CMP not yet implemented."
	1134 And X8, X11, 0
	1135 NotImplemented "Instruction CMP not yet implemented."
	1136 Add X8, X27, X9
	1137 Move X11, 0xD82000
	1138 Move X11, [X11+1336]
	1139 Move X24, [X8+32]
	1140 Move X8, [X31+40]
	1141 Add X10, X23, X9
	1142 Add X9, X21, X9
	1143 Move X0, [X11]
	1144 Move X28, [X8]
	1145 Move X8, [X31+72]
	1146 Move X20, [X9+32]
	1147 Move X21, [X10+32]
	1148 Move X27, [X8]
	1149 Move X8, [X31+80]
	1150 Move X9, [X31+88]
	1151 Move X25, [X8]
	1152 Move W8, [X0+224]
	1153 Move X22, [X9]
	1154 Compare W8, 0
	1155 JumpIfNotEqual {1157}
	1156 Call 0x1C17DFC
	1157 Move X0, X24
	1158 Move X1, X21
	1159 Move X2, X20
	1160 Move X3, X28
	1161 Move X4, X27
	1162 Move X5, X25
	1163 Move X6, X26
	1164 Move X7, X22
	1165 Call DefaultBinder.FindMostSpecificMethod, X0, X1, X2, X3, X4, X5, X6, X7
	1166 Compare W0, 0
	1167 JumpIfEqual {1177}
	1168 Move X22, 0xD4A000
	1169 Move X28, [X31+88]
	1170 Move X21, [X31+48]
	1171 Move X27, [X31+56]
	1172 Move X22, [X22+1728]
	1173 Move X9, [X31+32]
	1174 NotImplemented "Instruction CMP not yet implemented."
	1175 Add W29, W19, 1
	1176 Move [X31+28], W31
	1177 Move W8, 1
	1178 Move [X31+28], W8
	1179 Move X22, 0xD4A000
	1180 Move X28, [X31+88]
	1181 Move X21, [X31+48]
	1182 Move X27, [X31+56]
	1183 Move X22, [X22+1728]
	1184 Move X9, [X31+32]
	1185 Move X8, [X31+64]
	1186 NotImplemented "Instruction CMP not yet implemented."
	1187 Move X10, [X27+24]
	1188 Move X9, W29
	1189 Add X19, X19, 1
	1190 And X8, X10, 0
	1191 NotImplemented "Instruction CMP not yet implemented."
	1192 Call 0x1C17F28
	1193 Move X9, [X31+32]
	1194 Compare X9, 0
	1195 JumpIfEqual {1334}
	1196 Move X20, [X31+48]
	1197 Compare X23, 0
	1198 JumpIfEqual {216}
	1199 Move W8, [X23+24]
	1200 Compare W8, 0
	1201 JumpIfEqual {1192}
	1202 Move X0, [X23+32]
	1203 Compare X0, 0
	1204 JumpIfEqual {216}
	1205 Move X1, X31
	1206 Call Array.Clone, X0
	1207 Move X19, [X28]
	1208 Compare X19, 0
	1209 JumpIfEqual {216}
	1210 Compare X20, 0
	1211 JumpIfEqual {216}
	1212 Move W8, [X20+24]
	1213 Compare W8, 0
	1214 JumpIfEqual {1192}
	1215 Move X24, X0
	1216 Move X0, [X22]
	1217 Move X21, [X20+32]
	1218 Move W8, [X0+224]
	1219 Compare W8, 0
	1220 JumpIfNotEqual {1222}
	1221 Call 0x1C17DFC
	1222 Move X0, X21
	1223 Move X1, X31
	1224 Move X2, X31
	1225 Call Type.op_Inequality, X0, X1
	1226 Move X8, 0xD82000
	1227 Move X8, [X8+3480]
	1228 Move W25, W0
	1229 Move X8, [X8]
	1230 Move X0, X8
	1231 Call 0x1C17F10
	1232 Move X22, X0
	1233 Compare X24, 0
	1234 JumpIfEqual {1307}
	1235 Move X8, 0xD4A000
	1236 Move X8, [X8+3672]
	1237 Move X0, X24
	1238 Move X26, [X8]
	1239 Move X1, X26
	1240 Call 0x1C17E00
	1241 Move X21, X0
	1242 Compare X0, 0
	1243 JumpIfNotEqual {1308}
	1244 Move W29, W31
	1245 Move W8, [X31+28]
	1246 Move TEMP, X8
	1247 And TEMP, TEMP, 1
	1248 Compare TEMP, 1
	1249 JumpIfEqual {2136}
	1250 Compare X9, 0
	1251 JumpIfEqual {1305}
	1252 Compare X23, 0
	1253 JumpIfEqual {216}
	1254 Move W8, [X23+24]
	1255 NotImplemented "Instruction CMP not yet implemented."
	1256 Move W8, W29
	1257 Move X19, W8
	1258 Add X20, X23, X19
	1259 Add X20, X20, 32
	1260 Move X0, [X20]
	1261 Compare X0, 0
	1262 JumpIfEqual {216}
	1263 Move X1, X31
	1264 Call Array.Clone, X0
	1265 Move X27, [X28]
	1266 Compare X27, 0
	1267 JumpIfEqual {216}
	1268 Compare X21, 0
	1269 JumpIfEqual {216}
	1270 Move W8, [X21+24]
	1271 NotImplemented "Instruction CMP not yet implemented."
	1272 Move X24, X0
	1273 Move X0, [X22]
	1274 Add X8, X21, X19
	1275 Move X21, [X8+32]
	1276 Move W9, [X0+224]
	1277 Compare W9, 0
	1278 JumpIfNotEqual {1280}
	1279 Call 0x1C17DFC
	1280 Move X0, X21
	1281 Move X1, X31
	1282 Move X2, X31
	1283 Call Type.op_Inequality, X0, X1
	1284 Move X8, 0xD81000
	1285 Move X8, [X8+3480]
	1286 Move W25, W0
	1287 Move X8, [X8]
	1288 Move X0, X8
	1289 Call 0x1C17F10
	1290 Move X22, X0
	1291 Compare X24, 0
	1292 JumpIfEqual {1659}
	1293 Move X8, 0xD4A000
	1294 Move X8, [X8+3672]
	1295 Move X0, X24
	1296 Move X26, [X8]
	1297 Move X1, X26
	1298 Call 0x1C17E00
	1299 Move X21, X0
	1300 Compare X0, 0
	1301 JumpIfNotEqual {1660}
	1302 Move X0, X24
	1303 Move X1, X26
	1304 Call 0x1C181E0
	1305 Move W8, W29
	1306 Move X19, W8
	1307 Move X21, X31
	1308 Move X19, [X19+24]
	1309 Move X0, X22
	1310 Move X1, X31
	1311 And W20, W25, 1
	1312 Call Object..ctor, X0
	1313 Move X8, [X31+16]
	1314 Move [X22+16], X21
	1315 Move [X22+24], W19
	1316 Move [X22+28], W20
	1317 Move [X8], X22
	1318 Move W8, [X23+24]
	1319 Compare W8, 0
	1320 JumpIfEqual {1192}
	1321 Move X8, 0xD81000
	1322 Move X8, [X8+1336]
	1323 Move X21, [X23+32]
	1324 Move X22, [X28]
	1325 Move X0, [X8]
	1326 Move W8, [X0+224]
	1327 Compare W8, 0
	1328 JumpIfNotEqual {1330}
	1329 Call 0x1C17DFC
	1330 Move X0, X21
	1331 Move X1, X22
	1332 Call DefaultBinder.ReorderParams, X0, X1
	1333 Move X8, [X27+24]
	1334 Compare W8, 0
	1335 JumpIfEqual {1192}
	1336 Move X25, X27
	1337 Add X25, X25, 32
	1338 Move X0, [X25]
	1339 Compare X0, 0
	1340 JumpIfEqual {216}
	1341 Move X8, [X0]
	1342 Move X9, [X8+920]
	1343 Move X1, [X8+928]
	1344 NotImplemented "Instruction BLR not yet implemented."
	1345 Compare X0, 0
	1346 JumpIfEqual {216}
	1347 Move X8, [X28]
	1348 Compare X8, 0
	1349 JumpIfEqual {216}
	1350 Move W1, [X0+24]
	1351 Move W8, [X8+24]
	1352 Move X22, X0
	1353 NotImplemented "Instruction CMP not yet implemented."
	1354 Move X9, [X31+48]
	1355 Compare X9, 0
	1356 JumpIfEqual {216}
	1357 Move W8, [X9+24]
	1358 Compare W8, 0
	1359 JumpIfEqual {1192}
	1360 Move X8, 0xD49000
	1361 Move X8, [X8+1728]
	1362 Move X21, [X9+32]
	1363 Move X0, [X8]
	1364 Move W8, [X0+224]
	1365 Compare W8, 0
	1366 JumpIfNotEqual {1368}
	1367 Call 0x1C17DFC
	1368 Move X0, X21
	1369 Move X1, X31
	1370 Move X2, X31
	1371 Call Type.op_Inequality, X0, X1
	1372 Move TEMP, X0
	1373 And TEMP, TEMP, 1
	1374 Compare TEMP, 1
	1375 JumpIfNotEqual {2036}
	1376 Move X8, 0xD49000
	1377 Move X8, [X8+2512]
	1378 Move W1, [X22+24]
	1379 Move X0, [X8]
	1380 Call 0x1C17D6C
	1381 Move W8, [X22+24]
	1382 Move X23, X0
	1383 Move X0, [X28]
	1384 Move W1, W31
	1385 Subtract W22, W8, 1
	1386 Move X2, X23
	1387 Move W3, W31
	1388 Move W4, W22
	1389 Move X5, X31
	1390 Call Array.Copy, X0, X1, X2, X3, X4
	1391 Move X9, [X31+48]
	1392 Move W8, [X9+24]
	1393 Compare W8, 0
	1394 JumpIfEqual {1192}
	1395 Move X8, 0xD4A000
	1396 Move X21, [X9+32]
	1397 Move X8, [X8+3672]
	1398 Move W1, 1
	1399 Move X0, [X8]
	1400 Call 0x1C17D6C
	1401 Compare X0, 0
	1402 JumpIfEqual {216}
	1403 Move W8, [X0+24]
	1404 Move X1, X0
	1405 Compare W8, 0
	1406 JumpIfEqual {1192}
	1407 Move W8, 1
	1408 Move X0, X21
	1409 Move X2, X31
	1410 Move [X1+32], W8
	1411 Call Array.UnsafeCreateInstance, X0, X1
	1412 Compare X23, 0
	1413 JumpIfEqual {216}
	1414 Move X21, X0
	1415 Compare X0, 0
	1416 JumpIfEqual {1423}
	1417 Move X8, [X23]
	1418 Move X0, X21
	1419 Move X1, [X8+64]
	1420 Call 0x1C17E00
	1421 Compare X0, 0
	1422 JumpIfEqual {2083}
	1423 Move W8, [X23+24]
	1424 NotImplemented "Instruction CMP not yet implemented."
	1425 Move X8, W22
	1426 Add X9, X23, X8
	1427 Move [X9+32], X21
	1428 Move X9, [X28]
	1429 Compare X9, 0
	1430 JumpIfEqual {216}
	1431 Move W10, [X9+24]
	1432 NotImplemented "Instruction CMP not yet implemented."
	1433 Compare X21, 0
	1434 JumpIfEqual {216}
	1435 Move X11, 0xD49000
	1436 Move X11, [X11+3824]
	1437 Move X10, [X21]
	1438 Move X1, [X11]
	1439 Move W12, [X10+304]
	1440 Move W11, [X1+304]
	1441 NotImplemented "Instruction CMP not yet implemented."
	1442 Move X10, [X10+200]
	1443 Add X10, X10, X11
	1444 NotImplemented "Instruction LDUR not yet implemented."
	1445 NotImplemented "Instruction CMP not yet implemented."
	1446 Add X8, X9, X8
	1447 Move X1, [X8+32]
	1448 Move X0, X21
	1449 Move W2, W31
	1450 Move X3, X31
	1451 Call Array.SetValue, X0, X1, X2
	1452 Move X8, 0xD49000
	1453 Move X8, [X8+2512]
	1454 Move X0, [X8]
	1455 Call 0x1C17D6C
	1456 Move X8, [X28]
	1457 Compare X8, 0
	1458 JumpIfEqual {216}
	1459 Move X23, X0
	1460 Move X19, X31
	1461 Add X20, X0, 32
	1462 Move W9, [X8+24]
	1463 NotImplemented "Instruction CMP not yet implemented."
	1464 NotImplemented "Instruction CMP not yet implemented."
	1465 Compare X23, 0
	1466 JumpIfEqual {216}
	1467 Add X8, X8, X19
	1468 Move X24, [X8+32]
	1469 Compare X24, 0
	1470 JumpIfEqual {1477}
	1471 Move X8, [X23]
	1472 Move X0, X24
	1473 Move X1, [X8+64]
	1474 Call 0x1C17E00
	1475 Compare X0, 0
	1476 JumpIfEqual {2083}
	1477 Move W8, [X23+24]
	1478 NotImplemented "Instruction CMP not yet implemented."
	1479 Move [X20], X24
	1480 Move X8, [X28]
	1481 Add X19, X19, 1
	1482 Compare X8, 0
	1483 JumpIfNotEqual {1462}
	1484 Move W8, [X27+24]
	1485 Compare W8, 0
	1486 JumpIfEqual {1192}
	1487 Move X0, [X25]
	1488 Compare X0, 0
	1489 JumpIfEqual {216}
	1490 Move X8, [X0]
	1491 Move X9, [X8+632]
	1492 Move X1, [X8+640]
	1493 NotImplemented "Instruction BLR not yet implemented."
	1494 Move TEMP, X0
	1495 And TEMP, TEMP, 2
	1496 Compare TEMP, 2
	1497 JumpIfEqual {2036}
	1498 Move X8, 0xD49000
	1499 Move X8, [X8+2512]
	1500 Move W1, [X22+24]
	1501 Move X0, [X8]
	1502 Call 0x1C17D6C
	1503 Move W8, [X22+24]
	1504 Move X23, X0
	1505 Move X0, [X28]
	1506 Move W1, W31
	1507 Subtract W22, W8, 1
	1508 Move X2, X23
	1509 Move W3, W31
	1510 Move W4, W22
	1511 Move X5, X31
	1512 Call Array.Copy, X0, X1, X2, X3, X4
	1513 Move X9, [X31+48]
	1514 Compare X9, 0
	1515 JumpIfEqual {216}
	1516 Move W8, [X9+24]
	1517 Compare W8, 0
	1518 JumpIfEqual {1192}
	1519 Move X8, 0xD4A000
	1520 Move X21, [X9+32]
	1521 Move X8, [X8+3672]
	1522 Move W1, 1
	1523 Move X0, [X8]
	1524 Call 0x1C17D6C
	1525 Move X8, [X28]
	1526 Compare X8, 0
	1527 JumpIfEqual {216}
	1528 Move X1, X0
	1529 Compare X0, 0
	1530 JumpIfEqual {216}
	1531 Move W9, [X1+24]
	1532 Compare W9, 0
	1533 JumpIfEqual {1192}
	1534 Move W8, [X8+24]
	1535 Move X0, X21
	1536 Move X2, X31
	1537 Subtract W8, W8, W22
	1538 Move [X1+32], W8
	1539 Call Array.UnsafeCreateInstance, X0, X1
	1540 Compare X23, 0
	1541 JumpIfEqual {216}
	1542 Move X21, X0
	1543 Compare X0, 0
	1544 JumpIfEqual {1551}
	1545 Move X8, [X23]
	1546 Move X0, X21
	1547 Move X1, [X8+64]
	1548 Call 0x1C17E00
	1549 Compare X0, 0
	1550 JumpIfEqual {2083}
	1551 Move W8, [X23+24]
	1552 NotImplemented "Instruction CMP not yet implemented."
	1553 Add X8, X23, W22
	1554 Move [X8+32], X21
	1555 Move X0, [X28]
	1556 Compare X0, 0
	1557 JumpIfEqual {216}
	1558 Compare X21, 0
	1559 JumpIfEqual {1571}
	1560 Move X9, 0xD49000
	1561 Move X9, [X9+3824]
	1562 Move X8, [X21]
	1563 Move X1, [X9]
	1564 Move W10, [X8+304]
	1565 Move W9, [X1+304]
	1566 NotImplemented "Instruction CMP not yet implemented."
	1567 Move X8, [X8+200]
	1568 Add X8, X8, X9
	1569 NotImplemented "Instruction LDUR not yet implemented."
	1570 NotImplemented "Instruction CMP not yet implemented."
	1571 Move W8, [X0+24]
	1572 Move W1, W22
	1573 Move X2, X21
	1574 Move W3, W31
	1575 Subtract W4, W8, W22
	1576 Move X5, X31
	1577 Call Array.Copy, X0, X1, X2, X3, X4
	1578 Move W8, [X22+24]
	1579 Subtract W9, W8, 1
	1580 NotImplemented "Instruction CMP not yet implemented."
	1581 Add X20, X23, 32
	1582 Add X21, X22, 32
	1583 NotImplemented "Instruction CMP not yet implemented."
	1584 Move X0, [X21]
	1585 Compare X0, 0
	1586 JumpIfEqual {216}
	1587 Move X8, [X0]
	1588 Move X9, [X8+504]
	1589 Move X1, [X8+512]
	1590 NotImplemented "Instruction BLR not yet implemented."
	1591 Compare X23, 0
	1592 JumpIfEqual {216}
	1593 Move X24, X0
	1594 Compare X0, 0
	1595 JumpIfEqual {1602}
	1596 Move X8, [X23]
	1597 Move X0, X24
	1598 Move X1, [X8+64]
	1599 Call 0x1C17E00
	1600 Compare X0, 0
	1601 JumpIfEqual {2083}
	1602 Move W8, [X23+24]
	1603 NotImplemented "Instruction CMP not yet implemented."
	1604 Move [X20], X24
	1605 Move W8, [X22+24]
	1606 Add X19, X19, 1
	1607 Subtract W9, W8, 1
	1608 NotImplemented "Instruction CMP not yet implemented."
	1609 Move X9, [X31+48]
	1610 Compare X9, 0
	1611 JumpIfEqual {216}
	1612 Move W8, [X9+24]
	1613 Compare W8, 0
	1614 JumpIfEqual {1192}
	1615 Move X8, 0xD49000
	1616 Move X8, [X8+1728]
	1617 Move X21, [X9+32]
	1618 Move X0, [X8]
	1619 Move W8, [X0+224]
	1620 Compare W8, 0
	1621 JumpIfNotEqual {1623}
	1622 Call 0x1C17DFC
	1623 Move X0, X21
	1624 Move X1, X31
	1625 Move X2, X31
	1626 Call Type.op_Inequality, X0, X1
	1627 Move TEMP, X0
	1628 And TEMP, TEMP, 1
	1629 Compare TEMP, 1
	1630 JumpIfNotEqual {2009}
	1631 Move X9, [X31+48]
	1632 Move W8, [X9+24]
	1633 Compare W8, 0
	1634 JumpIfEqual {1192}
	1635 Move X8, 0xD4A000
	1636 Move X21, [X9+32]
	1637 Move X8, [X8+3672]
	1638 Move W1, 1
	1639 Move X0, [X8]
	1640 Call 0x1C17D6C
	1641 Move X1, X0
	1642 Move X0, X21
	1643 Move X2, X31
	1644 Call Array.UnsafeCreateInstance, X0, X1
	1645 Compare X23, 0
	1646 JumpIfEqual {216}
	1647 Move X21, X0
	1648 Compare X0, 0
	1649 JumpIfEqual {1656}
	1650 Move X8, [X23]
	1651 Move X0, X21
	1652 Move X1, [X8+64]
	1653 Call 0x1C17E00
	1654 Compare X0, 0
	1655 JumpIfEqual {2083}
	1656 Move W8, [X23+24]
	1657 NotImplemented "Instruction CMP not yet implemented."
	1658 Move X20, W19
	1659 Move X21, X31
	1660 Move X24, [X27+24]
	1661 Move X0, X22
	1662 Move X1, X31
	1663 And W25, W25, 1
	1664 Call Object..ctor, X0
	1665 Move X8, [X31+16]
	1666 Move [X22+16], X21
	1667 Move [X22+24], W24
	1668 Move [X22+28], W25
	1669 Move [X8], X22
	1670 Move W8, [X23+24]
	1671 NotImplemented "Instruction CMP not yet implemented."
	1672 Move X8, 0xD81000
	1673 Move X8, [X8+1336]
	1674 Move X21, [X20]
	1675 Move X22, [X28]
	1676 Move X27, [X31+56]
	1677 Move X0, [X8]
	1678 Move W8, [X0+224]
	1679 Compare W8, 0
	1680 JumpIfNotEqual {1682}
	1681 Call 0x1C17DFC
	1682 Move X0, X21
	1683 Move X1, X22
	1684 Call DefaultBinder.ReorderParams, X0, X1
	1685 Move W8, [X27+24]
	1686 NotImplemented "Instruction CMP not yet implemented."
	1687 Add X25, X27, X19
	1688 Add X25, X25, 32
	1689 Move X0, [X25]
	1690 Compare X0, 0
	1691 JumpIfEqual {216}
	1692 Move X8, [X0]
	1693 Move X9, [X8+920]
	1694 Move X1, [X8+928]
	1695 NotImplemented "Instruction BLR not yet implemented."
	1696 Compare X0, 0
	1697 JumpIfEqual {216}
	1698 Move X8, [X28]
	1699 Compare X8, 0
	1700 JumpIfEqual {216}
	1701 Move W1, [X0+24]
	1702 Move W8, [X8+24]
	1703 Move X22, X0
	1704 NotImplemented "Instruction CMP not yet implemented."
	1705 Move X9, [X31+48]
	1706 Compare X9, 0
	1707 JumpIfEqual {216}
	1708 Move W8, [X9+24]
	1709 NotImplemented "Instruction CMP not yet implemented."
	1710 Add X19, X9, X19
	1711 Move X8, 0xD49000
	1712 Add X19, X19, 32
	1713 Move X21, [X19]
	1714 Move X8, [X8+1728]
	1715 Move X0, [X8]
	1716 Move W8, [X0+224]
	1717 Compare W8, 0
	1718 JumpIfNotEqual {1720}
	1719 Call 0x1C17DFC
	1720 Move X0, X21
	1721 Move X1, X31
	1722 Move X2, X31
	1723 Call Type.op_Inequality, X0, X1
	1724 Move TEMP, X0
	1725 And TEMP, TEMP, 1
	1726 Compare TEMP, 1
	1727 JumpIfNotEqual {2066}
	1728 Move X8, 0xD49000
	1729 Move X8, [X8+2512]
	1730 Move W1, [X22+24]
	1731 Move X0, [X8]
	1732 Call 0x1C17D6C
	1733 Move W8, [X22+24]
	1734 Move X23, X0
	1735 Move X0, [X28]
	1736 Move W1, W31
	1737 Subtract W22, W8, 1
	1738 Move X2, X23
	1739 Move W3, W31
	1740 Move W4, W22
	1741 Move X5, X31
	1742 Call Array.Copy, X0, X1, X2, X3, X4
	1743 Move X8, [X31+48]
	1744 Move W8, [X8+24]
	1745 NotImplemented "Instruction CMP not yet implemented."
	1746 Move X8, 0xD4A000
	1747 Move X21, [X19]
	1748 Move X8, [X8+3672]
	1749 Move W1, 1
	1750 Move X0, [X8]
	1751 Call 0x1C17D6C
	1752 Compare X0, 0
	1753 JumpIfEqual {216}
	1754 Move W8, [X0+24]
	1755 Move X1, X0
	1756 Compare W8, 0
	1757 JumpIfEqual {1192}
	1758 Move W8, 1
	1759 Move X0, X21
	1760 Move X2, X31
	1761 Move [X1+32], W8
	1762 Call Array.UnsafeCreateInstance, X0, X1
	1763 Compare X23, 0
	1764 JumpIfEqual {216}
	1765 Move X21, X0
	1766 Compare X0, 0
	1767 JumpIfEqual {1774}
	1768 Move X8, [X23]
	1769 Move X0, X21
	1770 Move X1, [X8+64]
	1771 Call 0x1C17E00
	1772 Compare X0, 0
	1773 JumpIfEqual {2083}
	1774 Move W8, [X23+24]
	1775 NotImplemented "Instruction CMP not yet implemented."
	1776 Move X8, W22
	1777 Add X9, X23, X8
	1778 Move [X9+32], X21
	1779 Move X9, [X28]
	1780 Compare X9, 0
	1781 JumpIfEqual {216}
	1782 Move W10, [X9+24]
	1783 NotImplemented "Instruction CMP not yet implemented."
	1784 Compare X21, 0
	1785 JumpIfEqual {216}
	1786 Move X11, 0xD49000
	1787 Move X11, [X11+3824]
	1788 Move X10, [X21]
	1789 Move X1, [X11]
	1790 Move W12, [X10+304]
	1791 Move W11, [X1+304]
	1792 NotImplemented "Instruction CMP not yet implemented."
	1793 Move X10, [X10+200]
	1794 Add X10, X10, X11
	1795 NotImplemented "Instruction LDUR not yet implemented."
	1796 NotImplemented "Instruction CMP not yet implemented."
	1797 Add X8, X9, X8
	1798 Move X1, [X8+32]
	1799 Move X0, X21
	1800 Move W2, W31
	1801 Move X3, X31
	1802 Call Array.SetValue, X0, X1, X2
	1803 Move X8, 0xD49000
	1804 Move X8, [X8+2512]
	1805 Move X0, [X8]
	1806 Call 0x1C17D6C
	1807 Move X8, [X28]
	1808 Compare X8, 0
	1809 JumpIfEqual {216}
	1810 Move X23, X0
	1811 Move X20, X31
	1812 Add X21, X0, 32
	1813 Move W9, [X8+24]
	1814 NotImplemented "Instruction CMP not yet implemented."
	1815 NotImplemented "Instruction CMP not yet implemented."
	1816 Compare X23, 0
	1817 JumpIfEqual {216}
	1818 Add X8, X8, X20
	1819 Move X24, [X8+32]
	1820 Compare X24, 0
	1821 JumpIfEqual {1828}
	1822 Move X8, [X23]
	1823 Move X0, X24
	1824 Move X1, [X8+64]
	1825 Call 0x1C17E00
	1826 Compare X0, 0
	1827 JumpIfEqual {2083}
	1828 Move W8, [X23+24]
	1829 NotImplemented "Instruction CMP not yet implemented."
	1830 Move [X21], X24
	1831 Move X8, [X28]
	1832 Add X20, X20, 1
	1833 Compare X8, 0
	1834 JumpIfNotEqual {1813}
	1835 Move W8, [X27+24]
	1836 NotImplemented "Instruction CMP not yet implemented."
	1837 Move X0, [X25]
	1838 Compare X0, 0
	1839 JumpIfEqual {216}
	1840 Move X8, [X0]
	1841 Move X9, [X8+632]
	1842 Move X1, [X8+640]
	1843 NotImplemented "Instruction BLR not yet implemented."
	1844 Move TEMP, X0
	1845 And TEMP, TEMP, 2
	1846 Compare TEMP, 2
	1847 JumpIfEqual {2066}
	1848 Move X8, 0xD49000
	1849 Move X8, [X8+2512]
	1850 Move W1, [X22+24]
	1851 Move X0, [X8]
	1852 Call 0x1C17D6C
	1853 Move W8, [X22+24]
	1854 Move X23, X0
	1855 Move X0, [X28]
	1856 Move W1, W31
	1857 Subtract W22, W8, 1
	1858 Move X2, X23
	1859 Move W3, W31
	1860 Move W4, W22
	1861 Move X5, X31
	1862 Call Array.Copy, X0, X1, X2, X3, X4
	1863 Move X9, [X31+48]
	1864 Compare X9, 0
	1865 JumpIfEqual {216}
	1866 Move W8, [X9+24]
	1867 NotImplemented "Instruction CMP not yet implemented."
	1868 Add X8, X9, X19
	1869 Move X21, [X8+32]
	1870 Move X8, 0xD4A000
	1871 Move X8, [X8+3672]
	1872 Move W1, 1
	1873 Move X0, [X8]
	1874 Call 0x1C17D6C
	1875 Move X8, [X28]
	1876 Compare X8, 0
	1877 JumpIfEqual {216}
	1878 Move X1, X0
	1879 Compare X0, 0
	1880 JumpIfEqual {216}
	1881 Move W9, [X1+24]
	1882 Compare W9, 0
	1883 JumpIfEqual {1192}
	1884 Move W8, [X8+24]
	1885 Move X0, X21
	1886 Move X2, X31
	1887 Subtract W8, W8, W22
	1888 Move [X1+32], W8
	1889 Call Array.UnsafeCreateInstance, X0, X1
	1890 Compare X23, 0
	1891 JumpIfEqual {216}
	1892 Move X21, X0
	1893 Compare X0, 0
	1894 JumpIfEqual {1901}
	1895 Move X8, [X23]
	1896 Move X0, X21
	1897 Move X1, [X8+64]
	1898 Call 0x1C17E00
	1899 Compare X0, 0
	1900 JumpIfEqual {2083}
	1901 Move W8, [X23+24]
	1902 NotImplemented "Instruction CMP not yet implemented."
	1903 Add X8, X23, W22
	1904 Move [X8+32], X21
	1905 Move X0, [X28]
	1906 Compare X0, 0
	1907 JumpIfEqual {216}
	1908 Compare X21, 0
	1909 JumpIfEqual {1921}
	1910 Move X9, 0xD49000
	1911 Move X9, [X9+3824]
	1912 Move X8, [X21]
	1913 Move X1, [X9]
	1914 Move W10, [X8+304]
	1915 Move W9, [X1+304]
	1916 NotImplemented "Instruction CMP not yet implemented."
	1917 Move X8, [X8+200]
	1918 Add X8, X8, X9
	1919 NotImplemented "Instruction LDUR not yet implemented."
	1920 NotImplemented "Instruction CMP not yet implemented."
	1921 Move W8, [X0+24]
	1922 Move W1, W22
	1923 Move X2, X21
	1924 Move W3, W31
	1925 Subtract W4, W8, W22
	1926 Move X5, X31
	1927 Call Array.Copy, X0, X1, X2, X3, X4
	1928 Move W8, [X22+24]
	1929 Subtract W9, W8, 1
	1930 NotImplemented "Instruction CMP not yet implemented."
	1931 Add X21, X23, 32
	1932 Add X26, X22, 32
	1933 NotImplemented "Instruction CMP not yet implemented."
	1934 Move X0, [X26]
	1935 Compare X0, 0
	1936 JumpIfEqual {216}
	1937 Move X8, [X0]
	1938 Move X9, [X8+504]
	1939 Move X1, [X8+512]
	1940 NotImplemented "Instruction BLR not yet implemented."
	1941 Compare X23, 0
	1942 JumpIfEqual {216}
	1943 Move X24, X0
	1944 Compare X0, 0
	1945 JumpIfEqual {1952}
	1946 Move X8, [X23]
	1947 Move X0, X24
	1948 Move X1, [X8+64]
	1949 Call 0x1C17E00
	1950 Compare X0, 0
	1951 JumpIfEqual {2083}
	1952 Move W8, [X23+24]
	1953 NotImplemented "Instruction CMP not yet implemented."
	1954 Move [X21], X24
	1955 Move W8, [X22+24]
	1956 Add X20, X20, 1
	1957 Subtract W9, W8, 1
	1958 NotImplemented "Instruction CMP not yet implemented."
	1959 Move X9, [X31+48]
	1960 Compare X9, 0
	1961 JumpIfEqual {216}
	1962 Move W8, [X9+24]
	1963 NotImplemented "Instruction CMP not yet implemented."
	1964 Add X19, X9, X19
	1965 Move X8, 0xD49000
	1966 Add X19, X19, 32
	1967 Move X21, [X19]
	1968 Move X8, [X8+1728]
	1969 Move X0, [X8]
	1970 Move W8, [X0+224]
	1971 Compare W8, 0
	1972 JumpIfNotEqual {1974}
	1973 Call 0x1C17DFC
	1974 Move X0, X21
	1975 Move X1, X31
	1976 Move X2, X31
	1977 Call Type.op_Inequality, X0, X1
	1978 Move TEMP, X0
	1979 And TEMP, TEMP, 1
	1980 Compare TEMP, 1
	1981 JumpIfNotEqual {2039}
	1982 Move X8, [X31+48]
	1983 Move W8, [X8+24]
	1984 NotImplemented "Instruction CMP not yet implemented."
	1985 Move X8, 0xD4A000
	1986 Move X21, [X19]
	1987 Move X8, [X8+3672]
	1988 Move W1, 1
	1989 Move X0, [X8]
	1990 Call 0x1C17D6C
	1991 Move X1, X0
	1992 Move X0, X21
	1993 Move X2, X31
	1994 Call Array.UnsafeCreateInstance, X0, X1
	1995 Compare X23, 0
	1996 JumpIfEqual {216}
	1997 Move X21, X0
	1998 Compare X0, 0
	1999 JumpIfEqual {2006}
	2000 Move X8, [X23]
	2001 Move X0, X21
	2002 Move X1, [X8+64]
	2003 Call 0x1C17E00
	2004 Compare X0, 0
	2005 JumpIfEqual {2083}
	2006 Move W8, [X23+24]
	2007 NotImplemented "Instruction CMP not yet implemented."
	2008 Move X19, W20
	2009 Move W8, [X22+24]
	2010 NotImplemented "Instruction CMP not yet implemented."
	2011 Move X20, W19
	2012 Add X8, X22, X20
	2013 Move X0, [X8+32]
	2014 Compare X0, 0
	2015 JumpIfEqual {216}
	2016 Move X8, [X0]
	2017 Move X9, [X8+504]
	2018 Move X1, [X8+512]
	2019 NotImplemented "Instruction BLR not yet implemented."
	2020 Compare X23, 0
	2021 JumpIfEqual {216}
	2022 Move X21, X0
	2023 Compare X0, 0
	2024 JumpIfEqual {2031}
	2025 Move X8, [X23]
	2026 Move X0, X21
	2027 Move X1, [X8+64]
	2028 Call 0x1C17E00
	2029 Compare X0, 0
	2030 JumpIfEqual {2083}
	2031 Move W8, [X23+24]
	2032 NotImplemented "Instruction CMP not yet implemented."
	2033 Add X8, X23, X20
	2034 Move [X8+32], X21
	2035 Move [X28], X23
	2036 Move W8, [X27+24]
	2037 Compare W8, 0
	2038 JumpIfNotEqual {2068}
	2039 Move W8, [X22+24]
	2040 NotImplemented "Instruction CMP not yet implemented."
	2041 Move X19, W20
	2042 Add X8, X22, X19
	2043 Move X0, [X8+32]
	2044 Compare X0, 0
	2045 JumpIfEqual {216}
	2046 Move X8, [X0]
	2047 Move X9, [X8+504]
	2048 Move X1, [X8+512]
	2049 NotImplemented "Instruction BLR not yet implemented."
	2050 Compare X23, 0
	2051 JumpIfEqual {216}
	2052 Move X21, X0
	2053 Compare X0, 0
	2054 JumpIfEqual {2061}
	2055 Move X8, [X23]
	2056 Move X0, X21
	2057 Move X1, [X8+64]
	2058 Call 0x1C17E00
	2059 Compare X0, 0
	2060 JumpIfEqual {2083}
	2061 Move W8, [X23+24]
	2062 NotImplemented "Instruction CMP not yet implemented."
	2063 Add X8, X23, X19
	2064 Move [X8+32], X21
	2065 Move [X28], X23
	2066 Move W8, [X27+24]
	2067 NotImplemented "Instruction CMP not yet implemented."
	2068 Move X0, [X25]
	2069 Move X20, [X31+176]
	2070 Move X19, [X31+184]
	2071 Move X22, [X31+160]
	2072 Move X21, [X31+168]
	2073 Move X24, [X31+144]
	2074 Move X23, [X31+152]
	2075 Move X26, [X31+128]
	2076 Move X25, [X31+136]
	2077 Move X28, [X31+112]
	2078 Move X27, [X31+120]
	2079 Move X29, [X31+96]
	2080 Move X30, [X31+104]
	2081 Add X31, X31, 192
	2082 Return X0
	2083 Call 0x1C17F44
	2084 Move X1, X31
	2085 Call 0x1C17DEC
	2086 Move X0, [X31+80]
	2087 Call 0x1C181E0
	2088 Move X0, X29
	2089 Call 0x1C181E0
	2090 Move X0, 0xD81000
	2091 Move X0, [X0+3504]
	2092 Call 0x1C17D08
	2093 Move X1, X31
	2094 Call Environment.GetResourceString, X0
	2095 Move X19, X0
	2096 Move X0, 0xD51000
	2097 Move X0, [X0+1400]
	2098 Call 0x1C17D08
	2099 Call 0x1C17F10
	2100 Move X20, X0
	2101 Move X0, 0xD71000
	2102 Move X0, [X0+1912]
	2103 Call 0x1C17D08
	2104 Move X2, X0
	2105 Move X0, X20
	2106 Move X1, X19
	2107 Move X3, X31
	2108 Call ArgumentException..ctor, X0, X1, X2
	2109 Move X0, 0xD81000
	2110 Move X0, [X0+3512]
	2111 Call 0x1C17D08
	2112 Move X1, X31
	2113 Call Environment.GetResourceString, X0
	2114 Move X19, X0
	2115 Move X0, 0xD72000
	2116 Move X0, [X0+40]
	2117 Call 0x1C17D08
	2118 Call 0x1C17F10
	2119 Move X1, X19
	2120 Move X2, X31
	2121 Move X20, X0
	2122 Call MissingMethodException..ctor, X0, X1
	2123 Move X0, 0xD81000
	2124 Move X0, [X0+3520]
	2125 Call 0x1C17D08
	2126 Move X1, X0
	2127 Move X0, X20
	2128 Call 0x1C17DEC
	2129 Move [X23], X31
	2130 Call 0x1C17F20
	2131 Move X0, X21
	2132 Move X1, X22
	2133 Call 0x1C181E0
	2134 Move X0, X21
	2135 Call 0x1C181E0
	2136 Move X0, 0xD7B000
	2137 Move X0, [X0+3040]
	2138 Call 0x1C17D08
	2139 Move X1, X31
	2140 Call Environment.GetResourceString, X0
	2141 Move X19, X0
	2142 Move X0, 0xD7B000
	2143 Move X0, [X0+1952]
	2144 Call 0x1C17D08
	2145 Call 0x1C17F10
	2146 Move X1, X19
	2147 Move X2, X31
	2148 Move X20, X0
	2149 Call AmbiguousMatchException..ctor, X0, X1

Method: System.Reflection.FieldInfo BindToField(System.Reflection.BindingFlags bindingAttr, System.Reflection.FieldInfo[] match, System.Object value, System.Globalization.CultureInfo cultureInfo)

Disassembly:
	0x033AC394 ADRP X23, 0xD47000
	0x033AC398 LDR X23, [X23 + 0x6C0]
	0x033AC39C LDR X0, [X23]
	0x033AC3A0 LDR W8, [X0 + 0xE0]
	0x033AC3A4 CBNZ W8, 0x33AC3AC
	0x033AC3A8 BL 0x1C16DFC
	0x033AC3AC MOV X0, X20
	0x033AC3B0 MOV X1, X31
	0x033AC3B4 BL 0x3397AFC
	0x033AC3B8 MOV W21, W0
	0x033AC3BC MOV X0, X19
	0x033AC3C0 MOV X1, X31
	0x033AC3C4 BL 0x3397AFC
	0x033AC3C8 MOV W22, W0
	0x033AC3CC CMP W21, W0
	0x033AC3D0 B.NE 0x33AC3EC
	0x033AC3D4 MOV X0, X20
	0x033AC3D8 MOV X1, X31
	0x033AC3DC BL 0x3397374
	0x033AC3E0 TBZ X0, 0x0, 0x33AC3EC
	0x033AC3E4 MOVZ W0, 0x1
	0x033AC3E8 B 0x33AC528
	0x033AC3EC SUB W8, W22, 0x4
	0x033AC3F0 CMP W8, 0xA
	0x033AC3F4 B.HI 0x33AC420
	0x033AC3F8 ADRP X9, 0xFFFFFFFFFD7EA000
	0x033AC3FC ADD X9, X9, 0x88D
	0x033AC400 ADR X10, 0x10
	0x033AC404 LDRB W11, [X9, X8, LSL]
	0x033AC408 ADD X10, X10, X11, 0x2, LSL
	0x033AC40C BR X10
	0x033AC410 CMP W21, 0x6
	0x033AC414 B.EQ 0x33AC3E4
	0x033AC418 CMP W21, 0x8
	0x033AC41C B 0x33AC508
	0x033AC420 ADRP X8, 0xD70000
	0x033AC424 LDR X0, [X23]
	0x033AC428 LDR X8, [X8 + 0xF18]
	0x033AC42C LDR W9, [X0 + 0xE0]
	0x033AC430 LDR X21, [X8]
	0x033AC434 CBNZ W9, 0x33AC43C
	0x033AC438 BL 0x1C16DFC
	0x033AC43C MOV X0, X21
	0x033AC440 MOV X1, X31
	0x033AC444 BL 0x338C698
	0x033AC448 MOV X1, X0
	0x033AC44C MOV X0, X19
	0x033AC450 MOV X2, X31
	0x033AC454 BL 0x3395194
	0x033AC458 TBNZ X0, 0x0, 0x33AC498
	0x033AC45C ADRP X8, 0xD70000
	0x033AC460 LDR X0, [X23]
	0x033AC464 LDR X8, [X8 + 0xF28]
	0x033AC468 LDR W9, [X0 + 0xE0]
	0x033AC46C LDR X21, [X8]
	0x033AC470 CBNZ W9, 0x33AC478
	0x033AC474 BL 0x1C16DFC
	0x033AC478 MOV X0, X21
	0x033AC47C MOV X1, X31
	0x033AC480 BL 0x338C698
	0x033AC484 MOV X1, X0
	0x033AC488 MOV X0, X19
	0x033AC48C MOV X2, X31
	0x033AC490 BL 0x3395194
	0x033AC494 TBZ X0, 0x0, 0x33AC38C
	0x033AC498 ADRP X8, 0xD70000
	0x033AC49C LDR X8, [X8 + 0x4E8]
	0x033AC4A0 LDR X0, [X8]
	0x033AC4A4 LDR W8, [X0 + 0xE0]
	0x033AC4A8 CBNZ W8, 0x33AC4B0
	0x033AC4AC BL 0x1C16DFC
	0x033AC4B0 CMP X20, X19
	0x033AC4B4 B 0x33AC508
	0x033AC4B8 SUB W8, W21, 0x5
	0x033AC4BC CMP W8, 0x2
	0x033AC4C0 B 0x33AC524
	0x033AC4C4 AND W8, W21, 0xFFFFFFFD
	0x033AC4C8 CMP W8, 0x4
	0x033AC4CC B 0x33AC508
	0x033AC4D0 SUB W8, W21, 0x4
	0x033AC4D4 CMP W8, 0x5
	0x033AC4D8 B 0x33AC524
	0x033AC4DC SUB W8, W21, 0x4
	0x033AC4E0 CMP W8, 0x5
	0x033AC4E4 B.CS 0x33AC38C
	0x033AC4E8 B 0x33AC504
	0x033AC4EC SUB W8, W21, 0x4
	0x033AC4F0 CMP W8, 0x7
	0x033AC4F4 B 0x33AC524
	0x033AC4F8 SUB W8, W21, 0x4
	0x033AC4FC CMP W8, 0x7
	0x033AC500 B.CS 0x33AC38C
	0x033AC504 ANDS W31, W21, 0x1
	0x033AC508 CSET W0, EQ
	0x033AC50C B 0x33AC528
	0x033AC510 SUB W8, W21, 0x4
	0x033AC514 CMP W8, 0x9
	0x033AC518 B 0x33AC524
	0x033AC51C SUB W8, W21, 0x4
	0x033AC520 CMP W8, 0xA
	0x033AC524 CSET W0, CC
	0x033AC528 LDP X20, X19, [X31 + 0x20]
	0x033AC52C LDP X22, X21, [X31 + 0x10]
	0x033AC530 LDP X30, X23, [X31], #0x30
	0x033AC534 RET
	0x033AC538 BL 0x1C16F20
	0x033AC53C STP X30, X23, [X31 - 0x30]!
	0x033AC540 STP X22, X21, [X31 + 0x10]
	0x033AC544 STP X20, X19, [X31 + 0x20]
	0x033AC548 ADRP X23, 0x1031000
	0x033AC54C ADRP X22, 0xD47000
	0x033AC550 LDRB W8, [X23 + 0x168]
	0x033AC554 LDR X22, [X22 + 0x6C0]
	0x033AC558 MOV X21, X2
	0x033AC55C MOV X19, X1
	0x033AC560 MOV X20, X0
	0x033AC564 TBNZ X8, 0x0, 0x33AC594
	0x033AC568 ADRP X0, 0xD7F000
	0x033AC56C LDR X0, [X0 + 0x538]
	0x033AC570 BL 0x1C16CF4
	0x033AC574 ADRP X0, 0xD70000
	0x033AC578 LDR X0, [X0 + 0x4E8]
	0x033AC57C BL 0x1C16CF4
	0x033AC580 ADRP X0, 0xD47000
	0x033AC584 LDR X0, [X0 + 0x6C0]
	0x033AC588 BL 0x1C16CF4
	0x033AC58C MOVZ W8, 0x1
	0x033AC590 STRB W8, [X23 + 0x168]
	0x033AC594 LDR X0, [X22]
	0x033AC598 LDR W8, [X0 + 0xE0]
	0x033AC59C CBNZ W8, 0x33AC5A4
	0x033AC5A0 BL 0x1C16DFC
	0x033AC5A4 MOV X0, X20
	0x033AC5A8 MOV X1, X19
	0x033AC5AC MOV X2, X31
	0x033AC5B0 BL 0x3395194
	0x033AC5B4 TBZ X0, 0x0, 0x33AC5C0
	0x033AC5B8 MOV W0, W31
	0x033AC5BC B 0x33AC8B4
	0x033AC5C0 LDR X0, [X22]
	0x033AC5C4 LDR W8, [X0 + 0xE0]
	0x033AC5C8 CBNZ W8, 0x33AC5D0
	0x033AC5CC BL 0x1C16DFC
	0x033AC5D0 MOV X0, X20
	0x033AC5D4 MOV X1, X21
	0x033AC5D8 MOV X2, X31
	0x033AC5DC BL 0x3395194
	0x033AC5E0 TBZ X0, 0x0, 0x33AC5EC
	0x033AC5E4 MOVZ W0, 0x1
	0x033AC5E8 B 0x33AC8B4
	0x033AC5EC LDR X0, [X22]
	0x033AC5F0 LDR W8, [X0 + 0xE0]
	0x033AC5F4 CBNZ W8, 0x33AC5FC
	0x033AC5F8 BL 0x1C16DFC
	0x033AC5FC MOV X0, X19
	0x033AC600 MOV X1, X21
	0x033AC604 MOV X2, X31
	0x033AC608 BL 0x3395194
	0x033AC60C TBZ X0, 0x0, 0x33AC618
	0x033AC610 MOVZ W0, 0x2
	0x033AC614 B 0x33AC8B4
	0x033AC618 CBZ X20, 0x33AC8C4
	0x033AC61C MOV X0, X20
	0x033AC620 MOV X1, X31
	0x033AC624 BL 0x3396C08
	0x033AC628 TBNZ X0, 0x0, 0x33AC640
	0x033AC62C CBZ X19, 0x33AC8C4
	0x033AC630 MOV X0, X19
	0x033AC634 MOV X1, X31
	0x033AC638 BL 0x3396C08
	0x033AC63C TBZ X0, 0x0, 0x33AC764
	0x033AC640 MOV X0, X20
	0x033AC644 MOV X1, X31
	0x033AC648 BL 0x3396C08
	0x033AC64C TBZ X0, 0x0, 0x33AC698
	0x033AC650 CBZ X19, 0x33AC8C4
	0x033AC654 MOV X0, X19
	0x033AC658 MOV X1, X31
	0x033AC65C BL 0x3396C08
	0x033AC660 TBZ X0, 0x0, 0x33AC698
	0x033AC664 LDR X8, [X20]
	0x033AC668 MOV X0, X20
	0x033AC66C LDR X9, [X8 + 0x428]
	0x033AC670 LDR X1, [X8 + 0x430]
	0x033AC674 BLR X9
	0x033AC678 LDR X8, [X19]
	0x033AC67C MOV X20, X0
	0x033AC680 MOV X0, X19
	0x033AC684 LDR X9, [X8 + 0x428]
	0x033AC688 LDR X1, [X8 + 0x430]
	0x033AC68C BLR X9
	0x033AC690 MOV X19, X0
	0x033AC694 B 0x33AC700
	0x033AC698 MOV X0, X20
	0x033AC69C MOV X1, X31
	0x033AC6A0 BL 0x3396C08
	0x033AC6A4 TBZ X0, 0x0, 0x33AC708
	0x033AC6A8 LDR X8, [X20]
	0x033AC6AC MOV X0, X20
	0x033AC6B0 LDR X9, [X8 + 0x428]
	0x033AC6B4 LDR X1, [X8 + 0x430]
	0x033AC6B8 BLR X9
	0x033AC6BC LDR X8, [X22]
	0x033AC6C0 MOV X21, X0
	0x033AC6C4 LDR W9, [X8 + 0xE0]
	0x033AC6C8 CBNZ W9, 0x33AC6D4
	0x033AC6CC MOV X0, X8
	0x033AC6D0 BL 0x1C16DFC
	0x033AC6D4 MOV X0, X21
	0x033AC6D8 MOV X1, X19
	0x033AC6DC MOV X2, X31
	0x033AC6E0 BL 0x3395194
	0x033AC6E4 TBNZ X0, 0x0, 0x33AC610
	0x033AC6E8 LDR X8, [X20]
	0x033AC6EC MOV X0, X20
	0x033AC6F0 LDR X9, [X8 + 0x428]
	0x033AC6F4 LDR X1, [X8 + 0x430]
	0x033AC6F8 BLR X9
	0x033AC6FC MOV X20, X0
	0x033AC700 CBNZ X20, 0x33AC764
	0x033AC704 B 0x33AC8C4
	0x033AC708 CBZ X19, 0x33AC8C4
	0x033AC70C LDR X8, [X19]
	0x033AC710 MOV X0, X19
	0x033AC714 LDR X9, [X8 + 0x428]
	0x033AC718 LDR X1, [X8 + 0x430]
	0x033AC71C BLR X9
	0x033AC720 LDR X8, [X22]
	0x033AC724 MOV X21, X0
	0x033AC728 LDR W9, [X8 + 0xE0]
	0x033AC72C CBNZ W9, 0x33AC738
	0x033AC730 MOV X0, X8
	0x033AC734 BL 0x1C16DFC
	0x033AC738 MOV X0, X21
	0x033AC73C MOV X1, X20
	0x033AC740 MOV X2, X31
	0x033AC744 BL 0x3395194
	0x033AC748 TBNZ X0, 0x0, 0x33AC5E4
	0x033AC74C LDR X8, [X19]
	0x033AC750 MOV X0, X19
	0x033AC754 LDR X9, [X8 + 0x428]
	0x033AC758 LDR X1, [X8 + 0x430]
	0x033AC75C BLR X9
	0x033AC760 MOV X19, X0
	0x033AC764 MOV X0, X20
	0x033AC768 MOV X1, X31
	0x033AC76C BL 0x3397374
	0x033AC770 TBZ X0, 0x0, 0x33AC860
	0x033AC774 CBZ X19, 0x33AC8C4
	0x033AC778 MOV X0, X19
	0x033AC77C MOV X1, X31
	0x033AC780 BL 0x3397374
	0x033AC784 TBZ X0, 0x0, 0x33AC860
	0x033AC788 ADRP X8, 0xD7F000
	0x033AC78C LDR X8, [X8 + 0x538]
	0x033AC790 LDR X0, [X8]
	0x033AC794 LDR W8, [X0 + 0xE0]
	0x033AC798 CBNZ W8, 0x33AC7A0
	0x033AC79C BL 0x1C16DFC
	0x033AC7A0 ADRP X21, 0xD70000
	0x033AC7A4 LDR X21, [X21 + 0x4E8]
	0x033AC7A8 LDR X9, [X19]
	0x033AC7AC LDR X1, [X21]
	0x033AC7B0 LDRB W10, [X9 + 0x130]
	0x033AC7B4 LDRB W8, [X1 + 0x130]
	0x033AC7B8 CMP W10, W8
	0x033AC7BC B.CC 0x33AC8D0
	0x033AC7C0 LDR X10, [X9 + 0xC8]
	0x033AC7C4 SUB X9, X8, 0x1
	0x033AC7C8 LDR X10, [X10, X9, LSL #3]
	0x033AC7CC CMP X10, X1
	0x033AC7D0 B.NE 0x33AC8D0
	0x033AC7D4 LDR X10, [X20]
	0x033AC7D8 LDRB W11, [X10 + 0x130]
	0x033AC7DC CMP W11, W8
	0x033AC7E0 B.CC 0x33AC8C8
	0x033AC7E4 LDR X8, [X10 + 0xC8]
	0x033AC7E8 LDR X8, [X8, X9, LSL #3]
	0x033AC7EC CMP X8, X1
	0x033AC7F0 B.NE 0x33AC8C8
	0x033AC7F4 MOV X0, X19
	0x033AC7F8 MOV X1, X20
	0x033AC7FC BL 0x33AC318
	0x033AC800 LDR X9, [X20]
	0x033AC804 LDR X1, [X21]
	0x033AC808 LDRB W10, [X9 + 0x130]
	0x033AC80C LDRB W8, [X1 + 0x130]
	0x033AC810 CMP W10, W8
	0x033AC814 B.CC 0x33AC8C8
	0x033AC818 LDR X10, [X9 + 0xC8]
	0x033AC81C SUB X9, X8, 0x1
	0x033AC820 LDR X10, [X10, X9, LSL #3]
	0x033AC824 CMP X10, X1
	0x033AC828 B.NE 0x33AC8C8
	0x033AC82C LDR X10, [X19]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0x1032000
	014 Move W8, [X22+354]
	015 Move X20, X3
	016 Move X19, X2
	017 Move W21, W1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {42}
	022 Move X0, 0xD80000
	023 Move X0, [X0+1336]
	024 Call 0x1C17CF4
	025 Move X0, 0xD80000
	026 Move X0, [X0+3528]
	027 Call 0x1C17CF4
	028 Move X0, 0xD79000
	029 Move X0, [X0+2944]
	030 Call 0x1C17CF4
	031 Move X0, 0xD52000
	032 Move X0, [X0+2408]
	033 Call 0x1C17CF4
	034 Move X0, 0xD71000
	035 Move X0, [X0+1256]
	036 Call 0x1C17CF4
	037 Move X0, 0xD48000
	038 Move X0, [X0+1728]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X22+354], W8
	042 Compare X19, 0
	043 JumpIfEqual {284}
	044 Move X0, X19
	045 Move X1, X31
	046 Call Array.Clone, X0
	047 Compare X0, 0
	048 JumpIfEqual {302}
	049 Move X8, 0xD79000
	050 Move X8, [X8+2944]
	051 Move X22, X0
	052 Move X23, [X8]
	053 Move X1, X23
	054 Call 0x1C17E00
	055 Compare X0, 0
	056 JumpIfEqual {309}
	057 Move X19, X0
	058 Move TEMP, X21
	059 And TEMP, TEMP, 2048
	060 Compare TEMP, 2048
	061 JumpIfEqual {67}
	062 Move W22, W31
	063 Move W8, [X19+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Add X8, X19, W22
	066 Add X8, X8, 32
	067 Compare X20, 0
	068 JumpIfEqual {308}
	069 Move X0, X20
	070 Move X1, X31
	071 Call "il2cpp_vm_object_is_inst", X0
	072 Move X8, [X19+24]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X26, 0xD48000
	075 Move X27, 0xD80000
	076 Move X28, 0xD52000
	077 Move X26, [X26+1728]
	078 Move X27, [X27+3528]
	079 Move X28, [X28+2408]
	080 Move X21, X0
	081 Move W24, W31
	082 Move W25, W31
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Add X29, X19, W25
	085 Add X29, X29, 32
	086 Move X0, [X29]
	087 Compare X0, 0
	088 JumpIfEqual {308}
	089 Move X8, [X0]
	090 Move X9, [X8+600]
	091 Move X1, [X8+608]
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move X8, [X26]
	094 Move X22, X0
	095 Move W9, [X8+224]
	096 Compare W9, 0
	097 JumpIfNotEqual {100}
	098 Move X0, X8
	099 Call 0x1C17DFC
	100 Move X0, X22
	101 Move X1, X21
	102 Move X2, X31
	103 Call Type.op_Equality, X0, X1
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfEqual {143}
	108 Move X0, [X27]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {114}
	112 Call 0x1C17DFC
	113 Move X0, [X27]
	114 Move X8, [X0+184]
	115 Move X8, [X8]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Compare X22, 0
	118 JumpIfEqual {308}
	119 Move X0, X22
	120 Move X1, X31
	121 Call Type.get_IsClass, X0
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfEqual {143}
	126 Move X0, [X26]
	127 Move X23, [X28]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Move X0, X23
	133 Move X1, X31
	134 Call Type.GetTypeFromHandle, X0
	135 Move X1, X0
	136 Move X0, X22
	137 Move X2, X31
	138 Call Type.op_Equality, X0, X1
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfNotEqual {162}
	143 Move W8, [X19+24]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X22, [X29]
	146 Compare X22, 0
	147 JumpIfEqual {155}
	148 Move X8, [X19]
	149 Move X0, X22
	150 Move X1, [X8+64]
	151 Call 0x1C17E00
	152 Compare X0, 0
	153 JumpIfEqual {279}
	154 Move W8, [X19+24]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Add X8, X19, W24
	157 Add W24, W24, 1
	158 Move [X8+32], X22
	159 Move X8, [X19+24]
	160 Add W25, W25, 1
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Compare X22, 0
	163 JumpIfEqual {308}
	164 Move X0, X22
	165 Move X1, X31
	166 Call Type.get_IsPrimitive, X0
	167 Move TEMP, X0
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfNotEqual {196}
	171 Move X8, 0xD80000
	172 Move X8, [X8+1336]
	173 Move X0, [X8]
	174 Move W8, [X0+224]
	175 Compare W8, 0
	176 JumpIfNotEqual {178}
	177 Call 0x1C17DFC
	178 Move X9, 0xD71000
	179 Move X8, [X22]
	180 Move X9, [X9+1256]
	181 Move W10, [X8+304]
	182 Move X1, [X9]
	183 Move W9, [X1+304]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move X8, [X8+200]
	186 Add X8, X8, X9
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X0, X20
	190 Move X1, X22
	191 Call DefaultBinder.CanConvertPrimitiveObjectToType, X0, X1
	192 Move TEMP, X0
	193 And TEMP, TEMP, 1
	194 Compare TEMP, 1
	195 JumpIfEqual {143}
	196 Move X8, [X22]
	197 Move X0, X22
	198 Move X1, X21
	199 Move X9, [X8+680]
	200 Move X2, [X8+688]
	201 NotImplemented "Instruction BLR not yet implemented."
	202 Move TEMP, X0
	203 And TEMP, TEMP, 1
	204 Compare TEMP, 1
	205 JumpIfEqual {143}
	206 Move W24, W31
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Compare W24, 0
	209 JumpIfEqual {312}
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move X27, 0xD80000
	212 Move X27, [X27+1336]
	213 Move W8, W24
	214 Move X23, X31
	215 Move W22, W31
	216 Move W25, W31
	217 Add X24, X19, 40
	218 Subtract X26, X8, 1
	219 Move X8, [X19+24]
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Add X9, X23, 1
	222 And X8, X8, 0
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move X0, [X27]
	225 Add X8, X19, W22
	226 Move X20, [X8+32]
	227 Move X21, [X24]
	228 Move W8, [X0+224]
	229 Compare W8, 0
	230 JumpIfNotEqual {232}
	231 Call 0x1C17DFC
	232 Move X0, X20
	233 Move X1, X21
	234 Call DefaultBinder.FindMostSpecificField, X0, X1
	235 Compare W0, 0
	236 JumpIfEqual {240}
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move W25, W31
	239 Add W22, W23, 1
	240 Move W25, 1
	241 Add X23, X23, 1
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move TEMP, X25
	244 And TEMP, TEMP, 1
	245 Compare TEMP, 1
	246 JumpIfNotEqual {63}
	247 Move X0, 0xD7A000
	248 Move X0, [X0+3040]
	249 Call 0x1C17D08
	250 Move X1, X31
	251 Call Environment.GetResourceString, X0
	252 Move X19, X0
	253 Move X0, 0xD7A000
	254 Move X0, [X0+1952]
	255 Call 0x1C17D08
	256 Call 0x1C17F10
	257 Move X1, X19
	258 Move X2, X31
	259 Move X20, X0
	260 Call AmbiguousMatchException..ctor, X0, X1
	261 Compare W8, 0
	262 JumpIfEqual {278}
	263 Add X8, X19, 32
	264 Move X0, [X8]
	265 Move X20, [X31+80]
	266 Move X19, [X31+88]
	267 Move X22, [X31+64]
	268 Move X21, [X31+72]
	269 Move X24, [X31+48]
	270 Move X23, [X31+56]
	271 Move X26, [X31+32]
	272 Move X25, [X31+40]
	273 Move X28, [X31+16]
	274 Move X27, [X31+24]
	275 Move X29, [X31+96]
	276 Move X30, [X31+104]
	277 Return X0
	278 Call 0x1C17F28
	279 Call 0x1C17F44
	280 Move X1, X31
	281 Call 0x1C17DEC
	282 Move X0, X22
	283 Call 0x1C181E0
	284 Move X0, 0xD4D000
	285 Move X0, [X0+1320]
	286 Call 0x1C17D08
	287 Call 0x1C17F10
	288 Move X19, X0
	289 Move X0, 0xD70000
	290 Move X0, [X0+1912]
	291 Call 0x1C17D08
	292 Move X1, X0
	293 Move X0, X19
	294 Move X2, X31
	295 Call ArgumentNullException..ctor, X0, X1
	296 Move X0, 0xD80000
	297 Move X0, [X0+3536]
	298 Call 0x1C17D08
	299 Move X1, X0
	300 Move X0, X19
	301 Call 0x1C17DEC
	302 Move TEMP, X21
	303 And TEMP, TEMP, 2048
	304 Compare TEMP, 2048
	305 JumpIfNotEqual {308}
	306 Compare X20, 0
	307 JumpIfNotEqual {332}
	308 Call 0x1C17F20
	309 Move X0, X22
	310 Move X1, X23
	311 Call 0x1C181E0
	312 Move X0, 0xD80000
	313 Move X0, [X0+3544]
	314 Call 0x1C17D08
	315 Move X1, X31
	316 Call Environment.GetResourceString, X0
	317 Move X19, X0
	318 Move X0, 0xD80000
	319 Move X0, [X0+3552]
	320 Call 0x1C17D08
	321 Call 0x1C17F10
	322 Move X1, X19
	323 Move X2, X31
	324 Move X20, X0
	325 Call MissingFieldException..ctor, X0, X1
	326 Move X0, 0xD80000
	327 Move X0, [X0+3536]
	328 Call 0x1C17D08
	329 Move X1, X0
	330 Move X0, X20
	331 Call 0x1C17DEC
	332 Move X0, X20
	333 Move X1, X31
	334 Call "il2cpp_vm_object_is_inst", X0
	335 Call 0x1C17F20

Method: System.Reflection.PropertyInfo SelectProperty(System.Reflection.BindingFlags bindingAttr, System.Reflection.PropertyInfo[] match, System.Type returnType, System.Type[] indexes, System.Reflection.ParameterModifier[] modifiers)

Disassembly:
	0x033AC918 MOV X23, X2
	0x033AC91C MOV X26, X1
	0x033AC920 MOV X20, X0
	0x033AC924 TBNZ X8, 0x0, 0x33AC948
	0x033AC928 ADRP X0, 0xD7F000
	0x033AC92C LDR X0, [X0 + 0x538]
	0x033AC930 BL 0x1C16CF4
	0x033AC934 ADRP X0, 0xD47000
	0x033AC938 LDR X0, [X0 + 0x6C0]
	0x033AC93C BL 0x1C16CF4
	0x033AC940 MOVZ W8, 0x1
	0x033AC944 STRB W8, [X25 + 0x167]
	0x033AC948 LDR X0, [X27]
	0x033AC94C LDR W8, [X0 + 0xE0]
	0x033AC950 CBNZ W8, 0x33AC958
	0x033AC954 BL 0x1C16DFC
	0x033AC958 MOV X0, X23
	0x033AC95C MOV X1, X31
	0x033AC960 MOV X2, X31
	0x033AC964 BL 0x3395F0C
	0x033AC968 TBZ X0, 0x0, 0x33AC998
	0x033AC96C LDR X0, [X27]
	0x033AC970 LDR W8, [X0 + 0xE0]
	0x033AC974 CBNZ W8, 0x33AC97C
	0x033AC978 BL 0x1C16DFC
	0x033AC97C MOV X0, X29
	0x033AC980 MOV X1, X31
	0x033AC984 MOV X2, X31
	0x033AC988 BL 0x3395194
	0x033AC98C TBZ X0, 0x0, 0x33AC998
	0x033AC990 MOVZ W0, 0x2
	0x033AC994 B 0x33ACD00
	0x033AC998 LDR X0, [X27]
	0x033AC99C LDR W8, [X0 + 0xE0]
	0x033AC9A0 CBNZ W8, 0x33AC9A8
	0x033AC9A4 BL 0x1C16DFC
	0x033AC9A8 MOV X0, X29
	0x033AC9AC MOV X1, X31
	0x033AC9B0 MOV X2, X31
	0x033AC9B4 BL 0x3395F0C
	0x033AC9B8 TBZ X0, 0x0, 0x33AC9E0
	0x033AC9BC LDR X0, [X27]
	0x033AC9C0 LDR W8, [X0 + 0xE0]
	0x033AC9C4 CBNZ W8, 0x33AC9CC
	0x033AC9C8 BL 0x1C16DFC
	0x033AC9CC MOV X0, X23
	0x033AC9D0 MOV X1, X31
	0x033AC9D4 MOV X2, X31
	0x033AC9D8 BL 0x3395194
	0x033AC9DC TBNZ X0, 0x0, 0x33ACCEC
	0x033AC9E0 CBZ X21, 0x33ACD24
	0x033AC9E4 LDR W8, [X21 + 0x18]
	0x033AC9E8 CMP W8, 0x1
	0x033AC9EC B.LT 0x33ACCA4
	0x033AC9F0 ADD X8, X21, 0x20
	0x033AC9F4 STP X31, X8, [X31]
	0x033AC9F8 ADD X8, X26, 0x20
	0x033AC9FC MOV X25, X31
	0x033ACA00 ADD X9, X22, 0x20
	0x033ACA04 STR X8, [X31 + 0x20]
	0x033ACA08 ADD X8, X24, 0x20
	0x033ACA0C STP X9, X8, [X31 + 0x10]
	0x033ACA10 CBZ X22, 0x33ACA5C
	0x033ACA14 LDR W8, [X22 + 0x18]
	0x033ACA18 CMP X25, X8
	0x033ACA1C B.CS 0x33ACD20
	0x033ACA20 LDR X0, [X27]
	0x033ACA24 LDR X9, [X31 + 0x10]
	0x033ACA28 MOV X28, X27
	0x033ACA2C LDR W8, [X0 + 0xE0]
	0x033ACA30 LDR X27, [X9, X25, LSL #3]
	0x033ACA34 CBNZ W8, 0x33ACA40
	0x033ACA38 BL 0x1C16DFC
	0x033ACA3C LDR X0, [X28]
	0x033ACA40 LDR X8, [X0 + 0xB8]
	0x033ACA44 LDR X8, [X8 + 0x18]
	0x033ACA48 CMP X27, X8
	0x033ACA4C ADRP X27, 0xD47000
	0x033ACA50 LDR X27, [X27 + 0x6C0]
	0x033ACA54 B.NE 0x33ACA60
	0x033ACA58 B 0x33ACC90
	0x033ACA5C LDR X0, [X27]
	0x033ACA60 LDR W8, [X0 + 0xE0]
	0x033ACA64 CBNZ W8, 0x33ACA6C
	0x033ACA68 BL 0x1C16DFC
	0x033ACA6C MOV X0, X23
	0x033ACA70 MOV X1, X31
	0x033ACA74 MOV X2, X31
	0x033ACA78 BL 0x3395F0C
	0x033ACA7C TBZ X0, 0x0, 0x33ACAC0
	0x033ACA80 CBZ X26, 0x33ACD24
	0x033ACA84 LDR W8, [X26 + 0x18]
	0x033ACA88 CMP X25, X8
	0x033ACA8C B.CS 0x33ACD20
	0x033ACA90 CBZ X20, 0x33ACD24
	0x033ACA94 LDR X9, [X31 + 0x20]
	0x033ACA98 LDR W8, [X20 + 0x18]
	0x033ACA9C STR X23, [X31 + 0x28]
	0x033ACAA0 LDR W9, [X9, X25, LSL #2]
	0x033ACAA4 SUB W8, W8, 0x1
	0x033ACAA8 CMP W9, W8
	0x033ACAAC B.GE 0x33ACB04
	0x033ACAB0 LDR W8, [X26 + 0x18]
	0x033ACAB4 CMP X25, X8
	0x033ACAB8 B.CC 0x33ACAD4
	0x033ACABC B 0x33ACD20
	0x033ACAC0 CBZ X26, 0x33ACD24
	0x033ACAC4 LDR W8, [X26 + 0x18]
	0x033ACAC8 CMP X25, X8
	0x033ACACC B.CS 0x33ACD20
	0x033ACAD0 CBZ X20, 0x33ACD24
	0x033ACAD4 LDR X8, [X31 + 0x20]
	0x033ACAD8 LDR W9, [X20 + 0x18]
	0x033ACADC LDRSW X8, [X8, X25, LSL #2]
	0x033ACAE0 CMP W8, W9
	0x033ACAE4 B.CS 0x33ACD20
	0x033ACAE8 ADD X8, X20, X8, 0x3, LSL
	0x033ACAEC LDR X0, [X8 + 0x20]
	0x033ACAF0 CBZ X0, 0x33ACD24
	0x033ACAF4 LDR X8, [X0]
	0x033ACAF8 LDP X9, X1, [X8 + 0x1D8]
	0x033ACAFC BLR X9
	0x033ACB00 STR X0, [X31 + 0x28]
	0x033ACB04 LDR X0, [X27]
	0x033ACB08 LDR W8, [X0 + 0xE0]
	0x033ACB0C CBNZ W8, 0x33ACB14
	0x033ACB10 BL 0x1C16DFC
	0x033ACB14 MOV X0, X29
	0x033ACB18 MOV X1, X31
	0x033ACB1C MOV X2, X31
	0x033ACB20 BL 0x3395F0C
	0x033ACB24 TBZ X0, 0x0, 0x33ACB68
	0x033ACB28 CBZ X24, 0x33ACD24
	0x033ACB2C LDR W8, [X24 + 0x18]
	0x033ACB30 CMP X25, X8
	0x033ACB34 B.CS 0x33ACD20
	0x033ACB38 CBZ X19, 0x33ACD24
	0x033ACB3C LDR X9, [X31 + 0x18]
	0x033ACB40 LDR W8, [X19 + 0x18]
	0x033ACB44 MOV X28, X29
	0x033ACB48 LDR W9, [X9, X25, LSL #2]
	0x033ACB4C SUB W8, W8, 0x1
	0x033ACB50 CMP W9, W8
	0x033ACB54 B.GE 0x33ACBAC
	0x033ACB58 LDR W8, [X24 + 0x18]
	0x033ACB5C CMP X25, X8
	0x033ACB60 B.CC 0x33ACB7C
	0x033ACB64 B 0x33ACD20
	0x033ACB68 CBZ X24, 0x33ACD24
	0x033ACB6C LDR W8, [X24 + 0x18]
	0x033ACB70 CMP X25, X8
	0x033ACB74 B.CS 0x33ACD20
	0x033ACB78 CBZ X19, 0x33ACD24
	0x033ACB7C LDR X8, [X31 + 0x18]
	0x033ACB80 LDR W9, [X19 + 0x18]
	0x033ACB84 LDRSW X8, [X8, X25, LSL #2]
	0x033ACB88 CMP W8, W9
	0x033ACB8C B.CS 0x33ACD20
	0x033ACB90 ADD X8, X19, X8, 0x3, LSL
	0x033ACB94 LDR X0, [X8 + 0x20]
	0x033ACB98 CBZ X0, 0x33ACD24
	0x033ACB9C LDR X8, [X0]
	0x033ACBA0 LDP X9, X1, [X8 + 0x1D8]
	0x033ACBA4 BLR X9
	0x033ACBA8 MOV X28, X0
	0x033ACBAC LDR X0, [X27]
	0x033ACBB0 LDR W8, [X0 + 0xE0]
	0x033ACBB4 CBNZ W8, 0x33ACBBC
	0x033ACBB8 BL 0x1C16DFC
	0x033ACBBC LDR X0, [X31 + 0x28]
	0x033ACBC0 MOV X1, X28
	0x033ACBC4 MOV X2, X31
	0x033ACBC8 BL 0x3395194
	0x033ACBCC TBNZ X0, 0x0, 0x33ACC90
	0x033ACBD0 LDR W8, [X21 + 0x18]
	0x033ACBD4 CMP X25, X8
	0x033ACBD8 B.CS 0x33ACD20
	0x033ACBDC ADRP X8, 0xD7F000
	0x033ACBE0 LDR X8, [X8 + 0x538]
	0x033ACBE4 LDR X9, [X31 + 0x8]
	0x033ACBE8 MOV X27, X20
	0x033ACBEC MOV X20, X19
	0x033ACBF0 LDR X0, [X8]
	0x033ACBF4 MOV X19, X26
	0x033ACBF8 MOV X26, X24
	0x033ACBFC MOV X24, X22
	0x033ACC00 MOV X22, X21
	0x033ACC04 LDR W8, [X0 + 0xE0]
	0x033ACC08 LDR X21, [X9, X25, LSL #3]
	0x033ACC0C CBNZ W8, 0x33ACC14
	0x033ACC10 BL 0x1C16DFC
	0x033ACC14 LDR X0, [X31 + 0x28]
	0x033ACC18 MOV X1, X28
	0x033ACC1C MOV X2, X21
	0x033ACC20 BL 0x33AC53C
	0x033ACC24 CMP W0, 0x1
	0x033ACC28 B.EQ 0x33ACC5C
	0x033ACC2C CMP W0, 0x2
	0x033ACC30 MOV X21, X22
	0x033ACC34 B.EQ 0x33ACC6C
	0x033ACC38 MOV X22, X24
	0x033ACC3C MOV X24, X26
	0x033ACC40 MOV X26, X19
	0x033ACC44 MOV X19, X20
	0x033ACC48 MOV X20, X27
	0x033ACC4C ADRP X27, 0xD47000
	0x033ACC50 LDR X27, [X27 + 0x6C0]
	0x033ACC54 CBNZ W0, 0x33ACC90
	0x033ACC58 B 0x33ACD00
	0x033ACC5C MOVZ W8, 0x1
	0x033ACC60 STR W8, [X31 + 0x4]
	0x033ACC64 MOV X21, X22
	0x033ACC68 B 0x33ACC74
	0x033ACC6C MOVZ W8, 0x1
	0x033ACC70 STR W8, [X31]
	0x033ACC74 MOV X22, X24
	0x033ACC78 MOV X24, X26
	0x033ACC7C MOV X26, X19
	0x033ACC80 MOV X19, X20
	0x033ACC84 MOV X20, X27
	0x033ACC88 ADRP X27, 0xD47000
	0x033ACC8C LDR X27, [X27 + 0x6C0]
	0x033ACC90 LDRSW X8, [X21 + 0x18]
	0x033ACC94 ADD X25, X25, 0x1
	0x033ACC98 CMP X25, X8
	0x033ACC9C B.LT 0x33ACA10
	0x033ACCA0 B 0x33ACCA8
	0x033ACCA4 STR X31, [X31]
	0x033ACCA8 LDP W8, W9, [X31]
	0x033ACCAC EOR W8, W8, W9, 0x0
	0x033ACCB0 TBZ X8, 0x0, 0x33ACCC4
	0x033ACCB4 ANDS W31, W9, 0x1
	0x033ACCB8 MOVZ W8, 0x1
	0x033ACCBC CINC W0, W8, EQ
	0x033ACCC0 B 0x33ACD00
	0x033ACCC4 CMP X22, 0x0
	0x033ACCC8 CSET W8, EQ
	0x033ACCCC ORR W8, W8, W9, 0x0
	0x033ACCD0 TBNZ X8, 0x0, 0x33ACCFC
	0x033ACCD4 CBZ X20, 0x33ACD24
	0x033ACCD8 CBZ X19, 0x33ACD24
	0x033ACCDC LDR W8, [X20 + 0x18]
	0x033ACCE0 LDR W9, [X19 + 0x18]
	0x033ACCE4 CMP W8, W9
	0x033ACCE8 B.LE 0x33ACCF4
	0x033ACCEC MOVZ W0, 0x1
	0x033ACCF0 B 0x33ACD00
	0x033ACCF4 CMP W9, W8
	0x033ACCF8 B.GT 0x33AC990
	0x033ACCFC MOV W0, W31
	0x033ACD00 LDP X20, X19, [X31 + 0x80]
	0x033ACD04 LDP X22, X21, [X31 + 0x70]
	0x033ACD08 LDP X24, X23, [X31 + 0x60]
	0x033ACD0C LDP X26, X25, [X31 + 0x50]
	0x033ACD10 LDP X28, X27, [X31 + 0x40]
	0x033ACD14 LDP X29, X30, [X31 + 0x30]
	0x033ACD18 ADD X31, X31, 0x90
	0x033ACD1C RET
	0x033ACD20 BL 0x1C16F28
	0x033ACD24 BL 0x1C16F20
	0x033ACD28 STP X30, X21, [X31 - 0x20]!
	0x033ACD2C STP X20, X19, [X31 + 0x10]
	0x033ACD30 ADRP X21, 0x1031000
	0x033ACD34 LDRB W8, [X21 + 0x16B]
	0x033ACD38 MOV X19, X1
	0x033ACD3C MOV X20, X0
	0x033ACD40 TBNZ X8, 0x0, 0x33ACD58
	0x033ACD44 ADRP X0, 0xD7F000
	0x033ACD48 LDR X0, [X0 + 0x538]
	0x033ACD4C BL 0x1C16CF4
	0x033ACD50 MOVZ W8, 0x1
	0x033ACD54 STRB W8, [X21 + 0x16B]
	0x033ACD58 CBZ X20, 0x33ACE0C
	0x033ACD5C LDR X8, [X20]
	0x033ACD60 MOV X0, X20
	0x033ACD64 LDP X9, X1, [X8 + 0x1A8]
	0x033ACD68 BLR X9
	0x033ACD6C CBZ X19, 0x33ACE0C
	0x033ACD70 LDR X8, [X19]
	0x033ACD74 MOV X21, X0
	0x033ACD78 MOV X0, X19
	0x033ACD7C LDP X9, X1, [X8 + 0x1A8]
	0x033ACD80 BLR X9
	0x033ACD84 MOV X1, X0
	0x033ACD88 MOV X0, X21
	0x033ACD8C MOV X2, X31
	0x033ACD90 BL 0x321BA08
	0x033ACD94 TBZ X0, 0x0, 0x33ACDF0
	0x033ACD98 LDR X8, [X20]
	0x033ACD9C MOV X0, X20
	0x033ACDA0 LDP X9, X1, [X8 + 0x1B8]
	0x033ACDA4 BLR X9
	0x033ACDA8 ADRP X8, 0xD7F000
	0x033ACDAC LDR X8, [X8 + 0x538]
	0x033ACDB0 MOV X20, X0
	0x033ACDB4 LDR X8, [X8]
	0x033ACDB8 LDR W9, [X8 + 0xE0]
	0x033ACDBC CBNZ W9, 0x33ACDC8
	0x033ACDC0 MOV X0, X8
	0x033ACDC4 BL 0x1C16DFC
	0x033ACDC8 MOV X0, X20
	0x033ACDCC BL 0x33AD8F8
	0x033ACDD0 LDR X8, [X19]
	0x033ACDD4 MOV W20, W0
	0x033ACDD8 MOV X0, X19
	0x033ACDDC LDP X9, X1, [X8 + 0x1B8]
	0x033ACDE0 BLR X9
	0x033ACDE4 BL 0x33AD8F8
	0x033ACDE8 CMP W20, W0
	0x033ACDEC B.NE 0x33ACDF8
	0x033ACDF0 MOV W0, W31
	0x033ACDF4 B 0x33ACE00
	0x033ACDF8 MOVZ W8, 0x1
	0x033ACDFC CINC W0, W8, LT
	0x033ACE00 LDP X20, X19, [X31 + 0x10]
	0x033ACE04 LDP X30, X21, [X31], #0x20
	0x033ACE08 RET
	0x033ACE0C BL 0x1C16F20
	0x033ACE10 STR X30, [X31 - 0x20]!
	0x033ACE14 STP X20, X19, [X31 + 0x10]
	0x033ACE18 ADRP X0, 0xD7F000
	0x033ACE1C LDR X0, [X0 + 0xE18]
	0x033ACE20 BL 0x1C16D08
	0x033ACE24 MOV X1, X31
	0x033ACE28 BL 0x33BDD84
	0x033ACE2C MOV X19, X0
	0x033ACE30 ADRP X0, 0xD47000
	0x033ACE34 LDR X0, [X0 + 0xB40]
	0x033ACE38 BL 0x1C16D08
	0x033ACE3C BL 0x1C16F10
	0x033ACE40 MOV X1, X19
	0x033ACE44 MOV X2, X31
	0x033ACE48 MOV X20, X0
	0x033ACE4C BL 0x3379A44
	0x033ACE50 ADRP X0, 0xD7F000
	0x033ACE54 LDR X0, [X0 + 0xE20]
	0x033ACE58 BL 0x1C16D08
	0x033ACE5C MOV X1, X0
	0x033ACE60 MOV X0, X20
	0x033ACE64 BL 0x1C16DEC
	0x033ACE68 STR X30, [X31 - 0x60]!
	0x033ACE6C STP X28, X27, [X31 + 0x10]
	0x033ACE70 STP X26, X25, [X31 + 0x20]
	0x033ACE74 STP X24, X23, [X31 + 0x30]
	0x033ACE78 STP X22, X21, [X31 + 0x40]
	0x033ACE7C STP X20, X19, [X31 + 0x50]
	0x033ACE80 ADRP X21, 0x1031000
	0x033ACE84 LDRB W8, [X21 + 0x164]
	0x033ACE88 MOV X20, X2
	0x033ACE8C MOV X19, X1
	0x033ACE90 TBNZ X8, 0x0, 0x33ACEC0
	0x033ACE94 ADRP X0, 0xD7F000
	0x033ACE98 LDR X0, [X0 + 0xD98]
	0x033ACE9C BL 0x1C16CF4
	0x033ACEA0 ADRP X0, 0xD7F000
	0x033ACEA4 LDR X0, [X0 + 0x538]
	0x033ACEA8 BL 0x1C16CF4
	0x033ACEAC ADRP X0, 0xD47000
	0x033ACEB0 LDR X0, [X0 + 0x9D0]
	0x033ACEB4 BL 0x1C16CF4
	0x033ACEB8 MOVZ W8, 0x1
	0x033ACEBC STRB W8, [X21 + 0x164]
	0x033ACEC0 CBZ X20, 0x33AD120
	0x033ACEC4 ADRP X9, 0xD7F000
	0x033ACEC8 LDR X9, [X9 + 0xD98]
	0x033ACECC LDR X8, [X20]
	0x033ACED0 LDR X1, [X9]
	0x033ACED4 LDRB W10, [X8 + 0x130]
	0x033ACED8 LDRB W9, [X1 + 0x130]
	0x033ACEDC CMP W10, W9
	0x033ACEE0 B.CC 0x33AD13C
	0x033ACEE4 LDR X8, [X8 + 0xC8]
	0x033ACEE8 ADD X8, X8, X9, 0x3, LSL
	0x033ACEEC LDUR X8, [X8 - 0x8]
	0x033ACEF0 CMP X8, X1
	0x033ACEF4 B.NE 0x33AD13C
	0x033ACEF8 ADRP X8, 0xD7F000
	0x033ACEFC LDR X8, [X8 + 0x538]
	0x033ACF00 LDR X21, [X20 + 0x10]
	0x033ACF04 LDR X22, [X19]
	0x033ACF08 LDR X0, [X8]
	0x033ACF0C LDR W8, [X0 + 0xE0]
	0x033ACF10 CBNZ W8, 0x33ACF18
	0x033ACF14 BL 0x1C16DFC
	0x033ACF18 MOV X0, X21
	0x033ACF1C MOV X1, X22
	0x033ACF20 BL 0x33AB0C4
	0x033ACF24 LDR X22, [X19]
	0x033ACF28 CBZ X22, 0x33AD120
	0x033ACF2C LDRB W8, [X20 + 0x1C]
	0x033ACF30 CBZ W8, 0x33ACFC0
	0x033ACF34 LDR W1, [X22 + 0x18]
	0x033ACF38 LDR W8, [X20 + 0x18]
	0x033ACF3C SUB W20, W1, 0x1
	0x033ACF40 CMP W8, W1
	0x033ACF44 B.NE 0x33AD00C
	0x033ACF48 CBZ W1, 0x33AD11C
	0x033ACF4C ADD X23, X22, W20, 0x3, SXTW
	0x033ACF50 LDR X19, [X23 + 0x20]!
	0x033ACF54 CBZ X19, 0x33AD120
	0x033ACF58 ADRP X24, 0xD47000
	0x033ACF5C LDR X24, [X24 + 0x9D0]
	0x033ACF60 MOV X0, X19
	0x033ACF64 LDR X21, [X24]
	0x033ACF68 MOV X1, X21
	0x033ACF6C BL 0x1C16E00
	0x033ACF70 CBZ X0, 0x33AD144
	0x033ACF74 LDR X21, [X24]
	0x033ACF78 MOV X0, X19
	0x033ACF7C MOV X1, X21
	0x033ACF80 BL 0x1C16E00
	0x033ACF84 CBZ X0, 0x33AD144
	0x033ACF88 LDR W8, [X0 + 0x18]
	0x033ACF8C CBZ W8, 0x33AD11C
	0x033ACF90 LDR X19, [X0 + 0x20]
	0x033ACF94 CBZ X19, 0x33ACFAC
	0x033ACF98 LDR X8, [X22]
	0x033ACF9C MOV X0, X19
	0x033ACFA0 LDR X1, [X8 + 0x40]
	0x033ACFA4 BL 0x1C16E00
	0x033ACFA8 CBZ X0, 0x33AD130
	0x033ACFAC LDR W8, [X22 + 0x18]
	0x033ACFB0 CMP W20, W8
	0x033ACFB4 B.CS 0x33AD11C
	0x033ACFB8 STR X19, [X23]
	0x033ACFBC B 0x33AD100
	0x033ACFC0 LDR W1, [X20 + 0x18]
	0x033ACFC4 LDR W8, [X22 + 0x18]
	0x033ACFC8 CMP W1, W8
	0x033ACFCC B.GE 0x33AD100
	0x033ACFD0 ADRP X8, 0xD47000
	0x033ACFD4 LDR X8, [X8 + 0x9D0]
	0x033ACFD8 LDR X0, [X8]
	0x033ACFDC BL 0x1C16D6C
	0x033ACFE0 LDR X8, [X19]
	0x033ACFE4 LDR W4, [X20 + 0x18]
	0x033ACFE8 MOV X20, X0
	0x033ACFEC MOV W1, W31
	0x033ACFF0 MOV X0, X8
	0x033ACFF4 MOV X2, X20
	0x033ACFF8 MOV W3, W31
	0x033ACFFC MOV X5, X31
	0x033AD000 BL 0x339FCE8
	0x033AD004 STR X20, [X19]
	0x033AD008 B 0x33AD100
	0x033AD00C ADRP X24, 0xD46000
	0x033AD010 LDR X24, [X24 + 0x9D0]
	0x033AD014 LDR X0, [X24]
	0x033AD018 BL 0x1C16D6C
	0x033AD01C LDR X8, [X19]
	0x033AD020 MOV X21, X0
	0x033AD024 MOV W1, W31
	0x033AD028 MOV X2, X21
	0x033AD02C MOV X0, X8
	0x033AD030 MOV W3, W31
	0x033AD034 MOV W4, W20
	0x033AD038 MOV X5, X31
	0x033AD03C BL 0x339FCE8
	0x033AD040 CBZ X21, 0x33AD120
	0x033AD044 LDR W8, [X21 + 0x18]
	0x033AD048 CMP W20, W8
	0x033AD04C B.GE 0x33AD0FC
	0x033AD050 SXTW X26, W20
	0x033AD054 ADD X8, X21, X26, 0x3, LSL
	0x033AD058 MOV X25, X31
	0x033AD05C MOV W27, W20
	0x033AD060 ADD X28, X8, 0x20
	0x033AD064 LDR X8, [X19]
	0x033AD068 CBZ X8, 0x33AD120
	0x033AD06C LDR W9, [X8 + 0x18]
	0x033AD070 CMP W20, W9
	0x033AD074 B.CS 0x33AD11C
	0x033AD078 ADD X8, X8, X26, 0x3, LSL
	0x033AD07C LDR X22, [X8 + 0x20]
	0x033AD080 CBZ X22, 0x33AD120
	0x033AD084 LDR X23, [X24]
	0x033AD088 MOV X0, X22
	0x033AD08C MOV X1, X23
	0x033AD090 BL 0x1C16E00
	0x033AD094 CBZ X0, 0x33AD124
	0x033AD098 LDR X23, [X24]
	0x033AD09C MOV X0, X22
	0x033AD0A0 MOV X1, X23
	0x033AD0A4 BL 0x1C16E00
	0x033AD0A8 CBZ X0, 0x33AD124
	0x033AD0AC LDR W8, [X0 + 0x18]
	0x033AD0B0 CMP W25, W8
	0x033AD0B4 B.CS 0x33AD11C
	0x033AD0B8 ADD X8, X0, W25, 0x3, SXTW
	0x033AD0BC LDR X22, [X8 + 0x20]
	0x033AD0C0 CBZ X22, 0x33AD0D8
	0x033AD0C4 LDR X8, [X21]
	0x033AD0C8 MOV X0, X22
	0x033AD0CC LDR X1, [X8 + 0x40]
	0x033AD0D0 BL 0x1C16E00
	0x033AD0D4 CBZ X0, 0x33AD130
	0x033AD0D8 LDR X8, [X21 + 0x18]
	0x033AD0DC ADD X9, X27, X25
	0x033AD0E0 CMP W9, W8
	0x033AD0E4 B.CS 0x33AD11C
	0x033AD0E8 STR X22, [X28, X25, LSL #3]
	0x033AD0EC ADD X25, X25, 0x1
	0x033AD0F0 ADD W9, W27, W25
	0x033AD0F4 CMP W9, W8
	0x033AD0F8 B.LT 0x33AD064
	0x033AD0FC STR X21, [X19]
	0x033AD100 LDP X20, X19, [X31 + 0x50]
	0x033AD104 LDP X22, X21, [X31 + 0x40]
	0x033AD108 LDP X24, X23, [X31 + 0x30]
	0x033AD10C LDP X26, X25, [X31 + 0x20]
	0x033AD110 LDP X28, X27, [X31 + 0x10]
	0x033AD114 LDR X30, [X31], #0x60
	0x033AD118 RET
	0x033AD11C BL 0x1C16F28
	0x033AD120 BL 0x1C16F20
	0x033AD124 MOV X0, X22
	0x033AD128 MOV X1, X23
	0x033AD12C BL 0x1C171E0
	0x033AD130 BL 0x1C16F44
	0x033AD134 MOV X1, X31
	0x033AD138 BL 0x1C16DEC
	0x033AD13C MOV X0, X20
	0x033AD140 BL 0x1C171E0
	0x033AD144 MOV X0, X19
	0x033AD148 MOV X1, X21
	0x033AD14C BL 0x1C171E0
	0x033AD150 STP X30, X27, [X31 - 0x50]!
	0x033AD154 STP X26, X25, [X31 + 0x10]
	0x033AD158 STP X24, X23, [X31 + 0x20]
	0x033AD15C STP X22, X21, [X31 + 0x30]
	0x033AD160 STP X20, X19, [X31 + 0x40]
	0x033AD164 ADRP X21, 0x1030000
	0x033AD168 LDRB W8, [X21 + 0x165]
	0x033AD16C MOV X19, X1
	0x033AD170 MOV X20, X0
	0x033AD174 TBNZ X8, 0x0, 0x33AD198
	0x033AD178 ADRP X0, 0xD7E000
	0x033AD17C LDR X0, [X0 + 0x538]
	0x033AD180 BL 0x1C16CF4
	0x033AD184 ADRP X0, 0xD7E000
	0x033AD188 LDR X0, [X0 + 0xCD0]
	0x033AD18C BL 0x1C16CF4
	0x033AD190 MOVZ W8, 0x1
	0x033AD194 STRB W8, [X21 + 0x165]
	0x033AD198 CBZ X20, 0x33AD368
	0x033AD19C ADRP X8, 0xD7E000
	0x033AD1A0 LDR X8, [X8 + 0xCD0]
	0x033AD1A4 LDR W1, [X20 + 0x18]
	0x033AD1A8 LDR X0, [X8]
	0x033AD1AC BL 0x1C16D6C
	0x033AD1B0 LDR W8, [X20 + 0x18]
	0x033AD1B4 CMP W8, 0x1
	0x033AD1B8 B.LT 0x33AD300
	0x033AD1BC MOV X21, X0
	0x033AD1C0 MOV W22, W31
	0x033AD1C4 MOV W24, W31
	0x033AD1C8 CMP W24, W8
	0x033AD1CC B.CS 0x33AD358
	0x033AD1D0 ADD X25, X20, W24, 0x3, SXTW
	0x033AD1D4 LDR X0, [X25 + 0x20]!
	0x033AD1D8 CBZ X0, 0x33AD354
	0x033AD1DC LDR X8, [X0]
	0x033AD1E0 LDR X9, [X8 + 0x398]
	0x033AD1E4 LDR X1, [X8 + 0x3A0]
	0x033AD1E8 BLR X9
	0x033AD1EC CBZ X0, 0x33AD354
	0x033AD1F0 LDR X8, [X0 + 0x18]
	0x033AD1F4 MOV X23, X0
	0x033AD1F8 CBZ X8, 0x33AD2D0
	0x033AD1FC CBZ X19, 0x33AD354
	0x033AD200 LDR X8, [X19 + 0x18]
	0x033AD204 CMP W8, 0x1
	0x033AD208 B.LT 0x33AD278
	0x033AD20C MOV W26, W31
	0x033AD210 LDR W8, [X23 + 0x18]
	0x033AD214 CMP W26, W8
	0x033AD218 B.CS 0x33AD358
	0x033AD21C SXTW X27, W26
	0x033AD220 ADD X8, X23, X27, 0x3, LSL
	0x033AD224 LDR X0, [X8 + 0x20]
	0x033AD228 CBZ X0, 0x33AD354
	0x033AD22C LDR X8, [X0]
	0x033AD230 LDP X9, X1, [X8 + 0x1D8]
	0x033AD234 BLR X9
	0x033AD238 LDR W8, [X19 + 0x18]
	0x033AD23C CMP W26, W8
	0x033AD240 B.CS 0x33AD358
	0x033AD244 CBZ X0, 0x33AD354
	0x033AD248 LDR X8, [X0]
	0x033AD24C ADD X9, X19, X27, 0x3, LSL
	0x033AD250 LDR X1, [X9 + 0x20]
	0x033AD254 LDR X9, [X8 + 0x8F8]
	0x033AD258 LDR X2, [X8 + 0x900]
	0x033AD25C BLR X9
	0x033AD260 TBZ X0, 0x0, 0x33AD280
	0x033AD264 LDR X8, [X19 + 0x18]
	0x033AD268 ADD W26, W26, 0x1
	0x033AD26C CMP W26, W8
	0x033AD270 B.LT 0x33AD210
	0x033AD274 B 0x33AD284
	0x033AD278 MOV W26, W31
	0x033AD27C B 0x33AD284
	0x033AD280 LDR X8, [X19 + 0x18]
	0x033AD284 CMP W26, W8
	0x033AD288 B.LT 0x33AD2D0
	0x033AD28C LDR W8, [X20 + 0x18]
	0x033AD290 CMP W24, W8
	0x033AD294 B.CS 0x33AD358
	0x033AD298 CBZ X21, 0x33AD354
	0x033AD29C LDR X23, [X25]
	0x033AD2A0 CBZ X23, 0x33AD2B8
	0x033AD2A4 LDR X8, [X21]
	0x033AD2A8 MOV X0, X23
	0x033AD2AC LDR X1, [X8 + 0x40]
	0x033AD2B0 BL 0x1C16E00
	0x033AD2B4 CBZ X0, 0x33AD35C
	0x033AD2B8 LDR W8, [X21 + 0x18]
	0x033AD2BC CMP W22, W8
	0x033AD2C0 B.CS 0x33AD358
	0x033AD2C4 ADD X8, X21, W22, 0x3, SXTW
	0x033AD2C8 ADD W22, W22, 0x1
	0x033AD2CC STR X23, [X8 + 0x20]
	0x033AD2D0 LDR W8, [X20 + 0x18]
	0x033AD2D4 ADD W24, W24, 0x1
	0x033AD2D8 CMP W24, W8
	0x033AD2DC B.LT 0x33AD1C8
	0x033AD2E0 CBZ W22, 0x33AD300
	0x033AD2E4 CMP W22, 0x1
	0x033AD2E8 B.NE 0x33AD31C
	0x033AD2EC CBZ X21, 0x33AD354
	0x033AD2F0 LDR W8, [X21 + 0x18]
	0x033AD2F4 CBZ W8, 0x33AD358
	0x033AD2F8 LDR X0, [X21 + 0x20]
	0x033AD2FC B 0x33AD304
	0x033AD300 MOV X0, X31
	0x033AD304 LDP X20, X19, [X31 + 0x40]
	0x033AD308 LDP X22, X21, [X31 + 0x30]
	0x033AD30C LDP X24, X23, [X31 + 0x20]
	0x033AD310 LDP X26, X25, [X31 + 0x10]
	0x033AD314 LDP X30, X27, [X31], #0x50

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X20, 0x1032000
	015 Move W8, [X20+355]
	016 Move X19, X4
	017 Move X25, X3
	018 Move X21, X2
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {55}
	023 Move X0, 0xD80000
	024 Move X0, [X0+3560]
	025 Call 0x1C17CF4
	026 Move X0, 0xD80000
	027 Move X0, [X0+1336]
	028 Call 0x1C17CF4
	029 Move X0, 0xD49000
	030 Move X0, [X0+3672]
	031 Call 0x1C17CF4
	032 Move X0, 0xD80000
	033 Move X0, [X0+3568]
	034 Call 0x1C17CF4
	035 Move X0, 0xD7B000
	036 Move X0, [X0+464]
	037 Call 0x1C17CF4
	038 Move X0, 0xD52000
	039 Move X0, [X0+2408]
	040 Call 0x1C17CF4
	041 Move X0, 0xD71000
	042 Move X0, [X0+1256]
	043 Call 0x1C17CF4
	044 Move X0, 0xD48000
	045 Move X0, [X0+1728]
	046 Call 0x1C17CF4
	047 Move X0, 0xD80000
	048 Move X0, [X0+3576]
	049 Call 0x1C17CF4
	050 Move X0, 0xD80000
	051 Move X0, [X0+3584]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X20+355], W8
	055 Compare X19, 0
	056 JumpIfEqual {100}
	057 Move X20, 0xD80000
	058 Move X20, [X20+3584]
	059 Move X0, [X20]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X20]
	065 Move X8, [X0+184]
	066 Move X24, 0xD80000
	067 Move X22, [X8+8]
	068 Move X24, [X24+3560]
	069 Compare X22, 0
	070 JumpIfNotEqual {92}
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {76}
	074 Call 0x1C17DFC
	075 Move X0, [X20]
	076 Move X9, 0xD80000
	077 Move X8, [X0+184]
	078 Move X9, [X9+3568]
	079 Move X23, [X8]
	080 Move X0, [X9]
	081 Call 0x1C17F10
	082 Move X8, 0xD80000
	083 Move X8, [X8+3576]
	084 Move X1, X23
	085 Move X3, X31
	086 Move X22, X0
	087 Move X2, [X8]
	088 Call Predicate`1<Object>..ctor, X0, X1, X2
	089 Move X8, [X20]
	090 Move X8, [X8+184]
	091 Move [X8+8], X22
	092 Move X2, [X24]
	093 Move X0, X19
	094 Move X1, X22
	095 Call 0x21A67A0, X0, X1
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {673}
	100 Compare X21, 0
	101 JumpIfEqual {648}
	102 Move X8, [X21+24]
	103 Compare X8, 0
	104 JumpIfEqual {648}
	105 Move X0, X21
	106 Move X1, X31
	107 Call Array.Clone, X0
	108 Compare X0, 0
	109 JumpIfEqual {124}
	110 Move X8, 0xD7B000
	111 Move X8, [X8+464]
	112 Move X22, X0
	113 Move X23, [X8]
	114 Move X1, X23
	115 Call 0x1C17E00
	116 Move X21, X0
	117 Compare X0, 0
	118 JumpIfEqual {691}
	119 Compare X19, 0
	120 JumpIfEqual {127}
	121 Move W20, [X19+24]
	122 Compare X21, 0
	123 JumpIfNotEqual {130}
	124 Move X21, X31
	125 Compare X19, 0
	126 JumpIfNotEqual {121}
	127 Move W20, W31
	128 Compare X21, 0
	129 JumpIfEqual {640}
	130 Move X8, [X21+24]
	131 Move [X31+16], X25
	132 NotImplemented "Instruction CMP not yet implemented."
	133 And X8, X8, 0
	134 Move [X31+28], W31
	135 Move X29, 0xD48000
	136 Move X29, [X29+1728]
	137 Move W22, W31
	138 Move X28, X31
	139 Compare X19, 0
	140 JumpIfEqual {310}
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Add X8, X21, X28
	143 Move X0, [X8+32]
	144 Compare X0, 0
	145 JumpIfEqual {640}
	146 Move X8, [X0]
	147 Move X9, [X8+600]
	148 Move X1, [X8+608]
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Compare X0, 0
	151 JumpIfEqual {640}
	152 Move X8, [X0+24]
	153 Move X23, X0
	154 NotImplemented "Instruction CMP not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Compare W8, 0
	157 JumpIfEqual {639}
	158 Move X25, X31
	159 Move W26, 1
	160 Add X8, X23, X25
	161 Move X0, [X8+32]
	162 Compare X0, 0
	163 JumpIfEqual {640}
	164 Move X8, [X0]
	165 Subtract W22, W26, 1
	166 Move X9, [X8+472]
	167 Move X1, [X8+480]
	168 NotImplemented "Instruction BLR not yet implemented."
	169 Move W8, [X19+24]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Add X27, X19, X25
	172 Move X24, X0
	173 Add X27, X27, 32
	174 Move X25, [X27]
	175 Move X0, [X29]
	176 Move W8, [X0+224]
	177 Compare W8, 0
	178 JumpIfNotEqual {180}
	179 Call 0x1C17DFC
	180 Move X0, X24
	181 Move X1, X25
	182 Move X2, X31
	183 Call Type.op_Equality, X0, X1
	184 Move TEMP, X0
	185 And TEMP, TEMP, 1
	186 Compare TEMP, 1
	187 JumpIfEqual {303}
	188 Move X0, [X29]
	189 Move X9, 0xD52000
	190 Move W8, [X0+224]
	191 Move X9, [X9+2408]
	192 Move X25, [X9]
	193 Compare W8, 0
	194 JumpIfNotEqual {196}
	195 Call 0x1C17DFC
	196 Move X0, X25
	197 Move X1, X31
	198 Call Type.GetTypeFromHandle, X0
	199 Move X1, X0
	200 Move X0, X24
	201 Move X2, X31
	202 Call Type.op_Equality, X0, X1
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfEqual {303}
	207 Compare X24, 0
	208 JumpIfEqual {640}
	209 Move X0, X24
	210 Move X1, X31
	211 Call Type.get_IsPrimitive, X0
	212 Move W8, [X19+24]
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move X1, [X27]
	215 Move TEMP, X0
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfNotEqual {294}
	219 Compare X1, 0
	220 JumpIfEqual {640}
	221 Move X8, [X1]
	222 Move X0, X1
	223 Move X9, [X8+808]
	224 Move X8, [X8+816]
	225 Move X1, X8
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X0, 0
	228 JumpIfEqual {310}
	229 Move X8, 0xD71000
	230 Move X9, [X0]
	231 Move X8, [X8+1256]
	232 Move W11, [X9+304]
	233 Move X8, [X8]
	234 Move W10, [X8+304]
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Move X9, [X9+200]
	237 Add X9, X9, X10
	238 NotImplemented "Instruction LDUR not yet implemented."
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Move W8, [X19+24]
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move X0, [X27]
	243 Compare X0, 0
	244 JumpIfEqual {640}
	245 Move X8, [X0]
	246 Move X9, [X8+808]
	247 Move X1, [X8+816]
	248 NotImplemented "Instruction BLR not yet implemented."
	249 Move X8, [X24]
	250 Move X25, X0
	251 Move X0, X24
	252 Move X9, [X8+808]
	253 Move X1, [X8+816]
	254 NotImplemented "Instruction BLR not yet implemented."
	255 Move X8, 0xD80000
	256 Move X8, [X8+1336]
	257 Move X24, X0
	258 Move X8, [X8]
	259 Move W9, [X8+224]
	260 Compare W9, 0
	261 JumpIfNotEqual {264}
	262 Move X0, X8
	263 Call 0x1C17DFC
	264 Move X8, 0xD71000
	265 Move X8, [X8+1256]
	266 Move X1, [X8]
	267 Compare X25, 0
	268 JumpIfEqual {277}
	269 Move X8, [X25]
	270 Move W9, [X1+304]
	271 Move W10, [X8+304]
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Move X8, [X8+200]
	274 Add X8, X8, X9
	275 NotImplemented "Instruction LDUR not yet implemented."
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Compare X24, 0
	278 JumpIfEqual {287}
	279 Move X8, [X24]
	280 Move W9, [X1+304]
	281 Move W10, [X8+304]
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Move X8, [X8+200]
	284 Add X8, X8, X9
	285 NotImplemented "Instruction LDUR not yet implemented."
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Move X0, X25
	288 Move X1, X24
	289 Call DefaultBinder.CanConvertPrimitive, X0, X1
	290 Move TEMP, X0
	291 And TEMP, TEMP, 1
	292 Compare TEMP, 1
	293 JumpIfEqual {303}
	294 Move X8, [X24]
	295 Move X0, X24
	296 Move X9, [X8+680]
	297 Move X2, [X8+688]
	298 NotImplemented "Instruction BLR not yet implemented."
	299 Move TEMP, X0
	300 And TEMP, TEMP, 1
	301 Compare TEMP, 1
	302 JumpIfNotEqual {310}
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Move W8, [X23+24]
	305 Move X25, W26
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Add W8, W26, 1
	308 Move W26, W8
	309 Move W22, W31
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Move X0, [X29]
	312 Move W8, [X0+224]
	313 Compare W8, 0
	314 JumpIfNotEqual {316}
	315 Call 0x1C17DFC
	316 Move X23, [X31+16]
	317 Move X1, X31
	318 Move X2, X31
	319 Move X0, X23
	320 Call Type.op_Inequality, X0, X1
	321 Move TEMP, X0
	322 And TEMP, TEMP, 1
	323 Compare TEMP, 1
	324 JumpIfNotEqual {444}
	325 Move W8, [X21+24]
	326 NotImplemented "Instruction CMP not yet implemented."
	327 Add X22, X21, X28
	328 Add X22, X22, 32
	329 Move X0, [X22]
	330 Compare X0, 0
	331 JumpIfEqual {640}
	332 Move X8, [X0]
	333 Move X9, [X8+584]
	334 Move X1, [X8+592]
	335 NotImplemented "Instruction BLR not yet implemented."
	336 Compare X0, 0
	337 JumpIfEqual {640}
	338 Move X1, X31
	339 Call Type.get_IsPrimitive, X0
	340 Move TEMP, X0
	341 And TEMP, TEMP, 1
	342 Compare TEMP, 1
	343 JumpIfNotEqual {424}
	344 Compare X23, 0
	345 JumpIfEqual {640}
	346 Move X8, [X23]
	347 Move X0, X23
	348 Move X9, [X8+808]
	349 Move X1, [X8+816]
	350 NotImplemented "Instruction BLR not yet implemented."
	351 Compare X0, 0
	352 JumpIfEqual {464}
	353 Move X8, 0xD71000
	354 Move X9, [X0]
	355 Move X8, [X8+1256]
	356 Move W11, [X9+304]
	357 Move X8, [X8]
	358 Move W10, [X8+304]
	359 NotImplemented "Instruction CMP not yet implemented."
	360 Move X9, [X9+200]
	361 Add X9, X9, X10
	362 NotImplemented "Instruction LDUR not yet implemented."
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Move X8, [X23]
	365 Move X0, X23
	366 Move X9, [X8+808]
	367 Move X1, [X8+816]
	368 NotImplemented "Instruction BLR not yet implemented."
	369 Move W8, [X21+24]
	370 NotImplemented "Instruction CMP not yet implemented."
	371 Move X23, X0
	372 Move X0, [X22]
	373 Compare X0, 0
	374 JumpIfEqual {640}
	375 Move X8, [X0]
	376 Move X9, [X8+584]
	377 Move X1, [X8+592]
	378 NotImplemented "Instruction BLR not yet implemented."
	379 Compare X0, 0
	380 JumpIfEqual {640}
	381 Move X8, [X0]
	382 Move X9, [X8+808]
	383 Move X1, [X8+816]
	384 NotImplemented "Instruction BLR not yet implemented."
	385 Move X8, 0xD80000
	386 Move X8, [X8+1336]
	387 Move X24, X0
	388 Move X8, [X8]
	389 Move W9, [X8+224]
	390 Compare W9, 0
	391 JumpIfNotEqual {394}
	392 Move X0, X8
	393 Call 0x1C17DFC
	394 Move X8, 0xD71000
	395 Move X8, [X8+1256]
	396 Move X1, [X8]
	397 Compare X23, 0
	398 JumpIfEqual {407}
	399 Move X8, [X23]
	400 Move W9, [X1+304]
	401 Move W10, [X8+304]
	402 NotImplemented "Instruction CMP not yet implemented."
	403 Move X8, [X8+200]
	404 Add X8, X8, X9
	405 NotImplemented "Instruction LDUR not yet implemented."
	406 NotImplemented "Instruction CMP not yet implemented."
	407 Compare X24, 0
	408 JumpIfEqual {417}
	409 Move X8, [X24]
	410 Move W9, [X1+304]
	411 Move W10, [X8+304]
	412 NotImplemented "Instruction CMP not yet implemented."
	413 Move X8, [X8+200]
	414 Add X8, X8, X9
	415 NotImplemented "Instruction LDUR not yet implemented."
	416 NotImplemented "Instruction CMP not yet implemented."
	417 Move X0, X23
	418 Move X1, X24
	419 Call DefaultBinder.CanConvertPrimitive, X0, X1
	420 Move TEMP, X0
	421 And TEMP, TEMP, 1
	422 Compare TEMP, 1
	423 JumpIfEqual {444}
	424 Move W8, [X21+24]
	425 NotImplemented "Instruction CMP not yet implemented."
	426 Move X0, [X22]
	427 Compare X0, 0
	428 JumpIfEqual {640}
	429 Move X8, [X0]
	430 Move X9, [X8+584]
	431 Move X1, [X8+592]
	432 NotImplemented "Instruction BLR not yet implemented."
	433 Compare X0, 0
	434 JumpIfEqual {640}
	435 Move X8, [X0]
	436 Move X1, X23
	437 Move X9, [X8+680]
	438 Move X2, [X8+688]
	439 NotImplemented "Instruction BLR not yet implemented."
	440 Move TEMP, X0
	441 And TEMP, TEMP, 1
	442 Compare TEMP, 1
	443 JumpIfNotEqual {464}
	444 Move W8, [X21+24]
	445 NotImplemented "Instruction CMP not yet implemented."
	446 Add X9, X21, X28
	447 Move X23, [X9+32]
	448 Compare X23, 0
	449 JumpIfEqual {457}
	450 Move X8, [X21]
	451 Move X0, X23
	452 Move X1, [X8+64]
	453 Call 0x1C17E00
	454 Compare X0, 0
	455 JumpIfEqual {645}
	456 Move X8, [X21+24]
	457 Move W9, [X31+28]
	458 NotImplemented "Instruction CMP not yet implemented."
	459 Move W8, W9
	460 Add X8, X21, W8
	461 Add W9, W9, 1
	462 Move [X8+32], X23
	463 Move [X31+28], W9
	464 Move W22, W20
	465 Move W8, [X21+24]
	466 Add X28, X28, 1
	467 NotImplemented "Instruction CMP not yet implemented."
	468 Move [X31+28], W31
	469 Move W9, [X31+28]
	470 Compare W9, 0
	471 JumpIfEqual {476}
	472 NotImplemented "Instruction CMP not yet implemented."
	473 Compare W8, 0
	474 JumpIfEqual {639}
	475 Add X8, X21, 32
	476 Move X0, X31
	477 Move X8, 0xD49000
	478 Move X8, [X8+3672]
	479 Move W1, W20
	480 Move X0, [X8]
	481 Call 0x1C17D6C
	482 NotImplemented "Instruction CMP not yet implemented."
	483 Move X23, X0
	484 Compare X23, 0
	485 JumpIfEqual {640}
	486 Move W9, [X23+24]
	487 Move X8, X31
	488 Move W10, W20
	489 Add X11, X23, 32
	490 NotImplemented "Instruction CMP not yet implemented."
	491 Move [X11], W8
	492 Add X8, X8, 1
	493 NotImplemented "Instruction CMP not yet implemented."
	494 Move W8, [X31+28]
	495 NotImplemented "Instruction CMP not yet implemented."
	496 Move W20, W31
	497 Move W25, W31
	498 Move W26, 1
	499 Move W8, [X21+24]
	500 NotImplemented "Instruction CMP not yet implemented."
	501 Add X28, X21, W20
	502 Add X28, X28, 32
	503 Move X0, [X28]
	504 Compare X0, 0
	505 JumpIfEqual {640}
	506 Move X8, [X0]
	507 Move X9, [X8+584]
	508 Move X1, [X8+592]
	509 NotImplemented "Instruction BLR not yet implemented."
	510 Move W8, [X21+24]
	511 NotImplemented "Instruction CMP not yet implemented."
	512 Add X29, X21, W26
	513 Move X22, X0
	514 Add X29, X29, 32
	515 Move X0, [X29]
	516 Compare X0, 0
	517 JumpIfEqual {640}
	518 Move X8, [X0]
	519 Move X9, [X8+584]
	520 Move X1, [X8+592]
	521 NotImplemented "Instruction BLR not yet implemented."
	522 Move X8, 0xD7F000
	523 Move X8, [X8+1336]
	524 Move X24, X0
	525 Move X8, [X8]
	526 Move W9, [X8+224]
	527 Compare W9, 0
	528 JumpIfNotEqual {531}
	529 Move X0, X8
	530 Call 0x1C17DFC
	531 Move X2, [X31+16]
	532 Move X0, X22
	533 Move X1, X24
	534 Call DefaultBinder.FindMostSpecificType, X0, X1, X2
	535 Compare X19, 0
	536 JumpIfEqual {576}
	537 Compare W0, 0
	538 JumpIfNotEqual {576}
	539 Move W8, [X21+24]
	540 NotImplemented "Instruction CMP not yet implemented."
	541 Move X0, [X28]
	542 Compare X0, 0
	543 JumpIfEqual {640}
	544 Move X8, [X0]
	545 Move X9, [X8+600]
	546 Move X1, [X8+608]
	547 NotImplemented "Instruction BLR not yet implemented."
	548 Move W8, [X21+24]
	549 NotImplemented "Instruction CMP not yet implemented."
	550 Move X22, X0
	551 Move X0, [X29]
	552 Compare X0, 0
	553 JumpIfEqual {640}
	554 Move X8, [X0]
	555 Move X9, [X8+600]
	556 Move X1, [X8+608]
	557 NotImplemented "Instruction BLR not yet implemented."
	558 Move X8, 0xD7F000
	559 Move X8, [X8+1336]
	560 Move X24, X0
	561 Move X8, [X8]
	562 Move W9, [X8+224]
	563 Compare W9, 0
	564 JumpIfNotEqual {567}
	565 Move X0, X8
	566 Call 0x1C17DFC
	567 Move X0, X22
	568 Move X1, X23
	569 Move X2, X31
	570 Move X3, X24
	571 Move X4, X23
	572 Move X5, X31
	573 Move X6, X19
	574 Move X7, X31
	575 Call DefaultBinder.FindMostSpecific, X0, X1, X2, X3, X4, X5, X6, X7
	576 Compare W0, 0
	577 JumpIfNotEqual {596}
	578 Move W8, [X21+24]
	579 NotImplemented "Instruction CMP not yet implemented."
	580 NotImplemented "Instruction CMP not yet implemented."
	581 Move X8, 0xD7F000
	582 Move X8, [X8+1336]
	583 Move X22, [X28]
	584 Move X24, [X29]
	585 Move X0, [X8]
	586 Move W8, [X0+224]
	587 Compare W8, 0
	588 JumpIfNotEqual {590}
	589 Call 0x1C17DFC
	590 Move X0, X22
	591 Move X1, X24
	592 Call DefaultBinder.FindMostSpecificProperty, X0, X1
	593 NotImplemented "Instruction CMP not yet implemented."
	594 NotImplemented "Instruction CSET not yet implemented."
	595 Or W25, W25, W8
	596 Move W9, [X31+28]
	597 NotImplemented "Instruction CMP not yet implemented."
	598 NotImplemented "Instruction CSET not yet implemented."
	599 NotImplemented "Instruction CSEL not yet implemented."
	600 Add W26, W26, 1
	601 NotImplemented "Instruction CMP not yet implemented."
	602 And W25, W25, W8
	603 Compare W25, 0
	604 JumpIfEqual {620}
	605 Move X0, 0xD79000
	606 Move X0, [X0+3040]
	607 Call 0x1C17D08
	608 Move X1, X31
	609 Call Environment.GetResourceString, X0
	610 Move X19, X0
	611 Move X0, 0xD79000
	612 Move X0, [X0+1952]
	613 Call 0x1C17D08
	614 Call 0x1C17F10
	615 Move X1, X19
	616 Move X2, X31
	617 Move X20, X0
	618 Call AmbiguousMatchException..ctor, X0, X1
	619 Move W20, W31
	620 Move W8, [X21+24]
	621 NotImplemented "Instruction CMP not yet implemented."
	622 Add X8, X21, W20
	623 Add X8, X8, 32
	624 Move X0, [X8]
	625 Move X20, [X31+112]
	626 Move X19, [X31+120]
	627 Move X22, [X31+96]
	628 Move X21, [X31+104]
	629 Move X24, [X31+80]
	630 Move X23, [X31+88]
	631 Move X26, [X31+64]
	632 Move X25, [X31+72]
	633 Move X28, [X31+48]
	634 Move X27, [X31+56]
	635 Move X29, [X31+32]
	636 Move X30, [X31+40]
	637 Add X31, X31, 128
	638 Return X0
	639 Call 0x1C17F28
	640 Call 0x1C17F20
	641 Move X0, X24
	642 Call 0x1C181E0
	643 Move X0, X25
	644 Call 0x1C181E0
	645 Call 0x1C17F44
	646 Move X1, X31
	647 Call 0x1C17DEC
	648 Move X0, 0xD7F000
	649 Move X0, [X0+3504]
	650 Call 0x1C17D08
	651 Move X1, X31
	652 Call Environment.GetResourceString, X0
	653 Move X19, X0
	654 Move X0, 0xD4F000
	655 Move X0, [X0+1400]
	656 Call 0x1C17D08
	657 Call 0x1C17F10
	658 Move X20, X0
	659 Move X0, 0xD6F000
	660 Move X0, [X0+1912]
	661 Call 0x1C17D08
	662 Move X2, X0
	663 Move X0, X20
	664 Move X1, X19
	665 Move X3, X31
	666 Call ArgumentException..ctor, X0, X1, X2
	667 Move X0, 0xD7F000
	668 Move X0, [X0+3592]
	669 Call 0x1C17D08
	670 Move X1, X0
	671 Move X0, X20
	672 Call 0x1C17DEC
	673 Move X0, 0xD4C000
	674 Move X0, [X0+1320]
	675 Call 0x1C17D08
	676 Call 0x1C17F10
	677 Move X19, X0
	678 Move X0, 0xD7F000
	679 Move X0, [X0+3600]
	680 Call 0x1C17D08
	681 Move X1, X0
	682 Move X0, X19
	683 Move X2, X31
	684 Call ArgumentNullException..ctor, X0, X1
	685 Move X0, 0xD7F000
	686 Move X0, [X0+3592]
	687 Call 0x1C17D08
	688 Move X1, X0
	689 Move X0, X19
	690 Call 0x1C17DEC
	691 Move X0, X22
	692 Move X1, X23
	693 Call 0x1C181E0
	694 Move X0, X23
	695 Call 0x1C181E0

Method: System.Object ChangeType(System.Object value, System.Type type, System.Globalization.CultureInfo cultureInfo)

Disassembly:
	0x033ADE10 LDR X8, [X8 + 0x278]
	0x033ADE14 LDRB W11, [X9 + 0x130]
	0x033ADE18 LDR X8, [X8]
	0x033ADE1C LDRB W10, [X8 + 0x130]
	0x033ADE20 CMP W11, W10
	0x033ADE24 B.CC 0x33ADF54
	0x033ADE28 LDR X9, [X9 + 0xC8]
	0x033ADE2C ADD X9, X9, X10, 0x3, LSL
	0x033ADE30 LDUR X9, [X9 - 0x8]
	0x033ADE34 CMP X9, X8
	0x033ADE38 B.NE 0x33ADF54
	0x033ADE3C MOV X0, X23
	0x033ADE40 MOV X2, X31
	0x033ADE44 BL 0x32D2054
	0x033ADE48 LDR X8, [X29]
	0x033ADE4C MOV X23, X0
	0x033ADE50 LDR W9, [X8 + 0xE0]
	0x033ADE54 CBNZ W9, 0x33ADE60
	0x033ADE58 MOV X0, X8
	0x033ADE5C BL 0x1C16DFC
	0x033ADE60 MOV X0, X23
	0x033ADE64 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xD7F000
	005 Move X0, [X0+3608]
	006 Call 0x1C17D08
	007 Move X1, X31
	008 Call Environment.GetResourceString, X0
	009 Move X19, X0
	010 Move X0, 0xD47000
	011 Move X0, [X0+2880]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X1, X19
	015 Move X2, X31
	016 Move X20, X0
	017 Call NotSupportedException..ctor, X0, X1
	018 Move X0, 0xD7F000
	019 Move X0, [X0+3616]
	020 Call 0x1C17D08
	021 Move X1, X0
	022 Move X0, X20
	023 Call 0x1C17DEC

Method: System.Void ReorderArgumentArray(ref System.Object[] args, System.Object state)

Disassembly:
	0x033ADE68 MOV X2, X31
	0x033ADE6C BL 0x3395194
	0x033ADE70 TBNZ X0, 0x0, 0x33ADF54
	0x033ADE74 CBZ X22, 0x33AE15C
	0x033ADE78 MOV X0, X22
	0x033ADE7C MOV X1, X31
	0x033ADE80 BL 0x3397374
	0x033ADE84 TBZ X0, 0x0, 0x33ADF10
	0x033ADE88 CBZ X23, 0x33AE15C
	0x033ADE8C LDR X8, [X23]
	0x033ADE90 MOV X0, X23
	0x033ADE94 LDR X9, [X8 + 0x328]
	0x033ADE98 LDR X1, [X8 + 0x330]
	0x033ADE9C BLR X9
	0x033ADEA0 CBZ X0, 0x33AE15C
	0x033ADEA4 MOV X1, X31
	0x033ADEA8 BL 0x3395E80
	0x033ADEAC TBZ X0, 0x0, 0x33ADF54
	0x033ADEB0 LDR X8, [X23]
	0x033ADEB4 MOV X0, X23
	0x033ADEB8 LDR X9, [X8 + 0x328]
	0x033ADEBC LDR X1, [X8 + 0x330]
	0x033ADEC0 BLR X9
	0x033ADEC4 LDR X8, [X22]
	0x033ADEC8 MOV X23, X0
	0x033ADECC MOV X0, X22
	0x033ADED0 LDR X9, [X8 + 0x328]
	0x033ADED4 LDR X1, [X8 + 0x330]
	0x033ADED8 BLR X9
	0x033ADEDC ADRP X8, 0xD7E000
	0x033ADEE0 LDR X8, [X8 + 0x538]
	0x033ADEE4 MOV X22, X0
	0x033ADEE8 LDR X8, [X8]
	0x033ADEEC LDR W9, [X8 + 0xE0]
	0x033ADEF0 CBNZ W9, 0x33ADEFC
	0x033ADEF4 MOV X0, X8
	0x033ADEF8 BL 0x1C16DFC
	0x033ADEFC MOV X0, X23
	0x033ADF00 MOV X1, X22
	0x033ADF04 BL 0x33AE220
	0x033ADF08 TBNZ X0, 0x0, 0x33ADF2C
	0x033ADF0C B 0x33ADF54
	0x033ADF10 LDR X8, [X22]
	0x033ADF14 MOV X0, X22
	0x033ADF18 MOV X1, X23
	0x033ADF1C LDR X9, [X8 + 0x2A8]
	0x033ADF20 LDR X2, [X8 + 0x2B0]
	0x033ADF24 BLR X9
	0x033ADF28 TBZ X0, 0x0, 0x33ADF54
	0x033ADF2C LDR W9, [X19 + 0x18]
	0x033ADF30 ADD X8, X26, 0x1
	0x033ADF34 CMP W8, W9
	0x033ADF38 B.GE 0x33ADF50
	0x033ADF3C LDR W9, [X21 + 0x18]
	0x033ADF40 MOV X26, X8
	0x033ADF44 CMP W8, W9
	0x033ADF48 B.CC 0x33ADD2C
	0x033ADF4C B 0x33AE1E0
	0x033ADF50 ADD W26, W26, 0x1
	0x033ADF54 LDR W8, [X19 + 0x18]
	0x033ADF58 LDR W22, [X31 + 0xC]
	0x033ADF5C B 0x33ADF64
	0x033ADF60 MOV W26, W31
	0x033ADF64 CMP W26, W8
	0x033ADF68 B.NE 0x33ADFB0
	0x033ADF6C LDR W8, [X20 + 0x18]
	0x033ADF70 CMP W27, W8
	0x033ADF74 B.CS 0x33AE1E0
	0x033ADF78 LDR X21, [X25]
	0x033ADF7C CBZ X21, 0x33ADF98
	0x033ADF80 LDR X8, [X20]
	0x033ADF84 MOV X0, X21
	0x033ADF88 LDR X1, [X8 + 0x40]
	0x033ADF8C BL 0x1C16E00
	0x033ADF90 CBZ X0, 0x33AE1BC
	0x033ADF94 LDR W8, [X20 + 0x18]
	0x033ADF98 CMP W22, W8
	0x033ADF9C B.CS 0x33AE1E0
	0x033ADFA0 ADD W9, W22, 0x1
	0x033ADFA4 ADD X8, X20, W22, 0x3, SXTW
	0x033ADFA8 MOV W22, W9
	0x033ADFAC STR X21, [X8 + 0x20]
	0x033ADFB0 LDR X8, [X20 + 0x18]
	0x033ADFB4 ADD W27, W27, 0x1
	0x033ADFB8 CMP W27, W8
	0x033ADFBC B.LT 0x33ADCD4
	0x033ADFC0 CBZ W22, 0x33ADFE0
	0x033ADFC4 CMP W22, 0x1
	0x033ADFC8 B.NE 0x33ADFE8
	0x033ADFCC CBZ W8, 0x33AE1E0
	0x033ADFD0 ADD X8, X20, 0x20
	0x033ADFD4 B 0x33AE138
	0x033ADFD8 MOV W22, W31
	0x033ADFDC CBNZ W22, 0x33ADFC4
	0x033ADFE0 MOV X0, X31
	0x033ADFE4 B 0x33AE13C
	0x033ADFE8 CBZ X19, 0x33AE15C
	0x033ADFEC ADRP X8, 0xD47000
	0x033ADFF0 LDR X8, [X8 + 0xE58]
	0x033ADFF4 LDR W1, [X19 + 0x18]
	0x033ADFF8 LDR X0, [X8]
	0x033ADFFC BL 0x1C16D6C
	0x033AE000 LDR X10, [X19 + 0x18]
	0x033AE004 MOV X21, X0
	0x033AE008 CMP W10, 0x1
	0x033AE00C B.LT 0x33AE03C
	0x033AE010 CBZ X21, 0x33AE15C
	0x033AE014 LDR W9, [X21 + 0x18]
	0x033AE018 MOV X8, X31
	0x033AE01C SXTW X10, W10
	0x033AE020 ADD X11, X21, 0x20
	0x033AE024 CMP X8, X9
	0x033AE028 B.CS 0x33AE1E0
	0x033AE02C STR W8, [X11, X8, LSL #2]
	0x033AE030 ADD X8, X8, 0x1
	0x033AE034 CMP X8, X10
	0x033AE038 B.LT 0x33AE024
	0x033AE03C CMP W22, 0x1
	0x033AE040 B.LE 0x33AE120
	0x033AE044 MOV W8, W22
	0x033AE048 MOV X25, X31
	0x033AE04C MOV W24, W31
	0x033AE050 MOV W26, W31
	0x033AE054 ADD X27, X20, 0x28
	0x033AE058 SUB X28, X8, 0x1
	0x033AE05C LDR X8, [X20 + 0x18]
	0x033AE060 CMP W24, W8
	0x033AE064 B.CS 0x33AE1E0
	0x033AE068 ADD X9, X25, 0x1
	0x033AE06C AND X8, X8, 0x0
	0x033AE070 CMP X9, X8
	0x033AE074 B.CS 0x33AE1E0
	0x033AE078 ADRP X8, 0xD7D000
	0x033AE07C LDR X8, [X8 + 0x538]
	0x033AE080 LDR X22, [X27, X25, LSL #3]
	0x033AE084 LDR X0, [X8]
	0x033AE088 ADD X8, X20, W24, 0x3, SXTW
	0x033AE08C LDR X23, [X8 + 0x20]
	0x033AE090 LDR W8, [X0 + 0xE0]
	0x033AE094 CBNZ W8, 0x33AE09C
	0x033AE098 BL 0x1C16DFC
	0x033AE09C MOV X0, X23
	0x033AE0A0 MOV X1, X21
	0x033AE0A4 MOV X2, X31
	0x033AE0A8 MOV X3, X22
	0x033AE0AC MOV X4, X21
	0x033AE0B0 MOV X5, X31
	0x033AE0B4 MOV X6, X19
	0x033AE0B8 MOV X7, X31
	0x033AE0BC BL 0x33AB214
	0x033AE0C0 CBZ W0, 0x33AE0D8
	0x033AE0C4 CMP W0, 0x2
	0x033AE0C8 B.NE 0x33AE0DC
	0x033AE0CC MOV W26, W31
	0x033AE0D0 ADD W24, W25, 0x1
	0x033AE0D4 B 0x33AE0DC
	0x033AE0D8 MOVZ W26, 0x1
	0x033AE0DC ADD X25, X25, 0x1
	0x033AE0E0 CMP X28, X25
	0x033AE0E4 B.NE 0x33AE05C
	0x033AE0E8 TBZ X26, 0x0, 0x33AE124
	0x033AE0EC ADRP X0, 0xD77000
	0x033AE0F0 LDR X0, [X0 + 0x7A0]
	0x033AE0F4 BL 0x1C16D08
	0x033AE0F8 BL 0x1C16F10
	0x033AE0FC MOV X19, X0
	0x033AE100 ADRP X0, 0xD77000
	0x033AE104 LDR X0, [X0 + 0xBE0]
	0x033AE108 BL 0x1C16D08
	0x033AE10C MOV X1, X0
	0x033AE110 MOV X0, X19
	0x033AE114 MOV X2, X31
	0x033AE118 BL 0x32CC544
	0x033AE11C B 0x33AE1A4
	0x033AE120 MOV W24, W31
	0x033AE124 LDR W8, [X20 + 0x18]
	0x033AE128 CMP W24, W8
	0x033AE12C B.CS 0x33AE1E0
	0x033AE130 ADD X8, X20, W24, 0x3, SXTW
	0x033AE134 ADD X8, X8, 0x20
	0x033AE138 LDR X0, [X8]
	0x033AE13C LDP X20, X19, [X31 + 0x60]
	0x033AE140 LDP X22, X21, [X31 + 0x50]
	0x033AE144 LDP X24, X23, [X31 + 0x40]
	0x033AE148 LDP X26, X25, [X31 + 0x30]
	0x033AE14C LDP X28, X27, [X31 + 0x20]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x1031000
	013 Move W8, [X21+356]
	014 Move X20, X2
	015 Move X19, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xD7F000
	021 Move X0, [X0+3480]
	022 Call 0x1C17CF4
	023 Move X0, 0xD7F000
	024 Move X0, [X0+1336]
	025 Call 0x1C17CF4
	026 Move X0, 0xD47000
	027 Move X0, [X0+2512]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+356], W8
	031 Compare X20, 0
	032 JumpIfEqual {195}
	033 Move X9, 0xD7F000
	034 Move X9, [X9+3480]
	035 Move X8, [X20]
	036 Move X1, [X9]
	037 Move W10, [X8+304]
	038 Move W9, [X1+304]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, [X8+200]
	041 Add X8, X8, X9
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X8, 0xD7F000
	045 Move X8, [X8+1336]
	046 Move X21, [X20+16]
	047 Move X22, [X19]
	048 Move X0, [X8]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X21
	054 Move X1, X22
	055 Call DefaultBinder.ReorderParams, X0, X1
	056 Move X22, [X19]
	057 Compare X22, 0
	058 JumpIfEqual {195}
	059 Move W8, [X20+28]
	060 Compare W8, 0
	061 JumpIfEqual {102}
	062 Move W1, [X22+24]
	063 Move W8, [X20+24]
	064 Subtract W20, W1, 1
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Compare W1, 0
	067 JumpIfEqual {194}
	068 Add X23, X22, W20
	069 Add X23, X23, 32
	070 Move X19, [X23]
	071 Compare X19, 0
	072 JumpIfEqual {195}
	073 Move X24, 0xD47000
	074 Move X24, [X24+2512]
	075 Move X0, X19
	076 Move X21, [X24]
	077 Move X1, X21
	078 Call 0x1C17E00
	079 Compare X0, 0
	080 JumpIfEqual {204}
	081 Move X21, [X24]
	082 Move X0, X19
	083 Move X1, X21
	084 Call 0x1C17E00
	085 Compare X0, 0
	086 JumpIfEqual {204}
	087 Move W8, [X0+24]
	088 Compare W8, 0
	089 JumpIfEqual {194}
	090 Move X19, [X0+32]
	091 Compare X19, 0
	092 JumpIfEqual {99}
	093 Move X8, [X22]
	094 Move X0, X19
	095 Move X1, [X8+64]
	096 Call 0x1C17E00
	097 Compare X0, 0
	098 JumpIfEqual {199}
	099 Move W8, [X22+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move [X23], X19
	102 Move W1, [X20+24]
	103 Move W8, [X22+24]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X8, 0xD47000
	106 Move X8, [X8+2512]
	107 Move X0, [X8]
	108 Call 0x1C17D6C
	109 Move X8, [X19]
	110 Move W4, [X20+24]
	111 Move X20, X0
	112 Move W1, W31
	113 Move X0, X8
	114 Move X2, X20
	115 Move W3, W31
	116 Move X5, X31
	117 Call Array.Copy, X0, X1, X2, X3, X4
	118 Move [X19], X20
	119 Move X24, 0xD46000
	120 Move X24, [X24+2512]
	121 Move X0, [X24]
	122 Call 0x1C17D6C
	123 Move X8, [X19]
	124 Move X21, X0
	125 Move W1, W31
	126 Move X2, X21
	127 Move X0, X8
	128 Move W3, W31
	129 Move W4, W20
	130 Move X5, X31
	131 Call Array.Copy, X0, X1, X2, X3, X4
	132 Compare X21, 0
	133 JumpIfEqual {195}
	134 Move W8, [X21+24]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X26, W20
	137 Add X8, X21, X26
	138 Move X25, X31
	139 Move W27, W20
	140 Add X28, X8, 32
	141 Move X8, [X19]
	142 Compare X8, 0
	143 JumpIfEqual {195}
	144 Move W9, [X8+24]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Add X8, X8, X26
	147 Move X22, [X8+32]
	148 Compare X22, 0
	149 JumpIfEqual {195}
	150 Move X23, [X24]
	151 Move X0, X22
	152 Move X1, X23
	153 Call 0x1C17E00
	154 Compare X0, 0
	155 JumpIfEqual {196}
	156 Move X23, [X24]
	157 Move X0, X22
	158 Move X1, X23
	159 Call 0x1C17E00
	160 Compare X0, 0
	161 JumpIfEqual {196}
	162 Move W8, [X0+24]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Add X8, X0, W25
	165 Move X22, [X8+32]
	166 Compare X22, 0
	167 JumpIfEqual {174}
	168 Move X8, [X21]
	169 Move X0, X22
	170 Move X1, [X8+64]
	171 Call 0x1C17E00
	172 Compare X0, 0
	173 JumpIfEqual {199}
	174 Move X8, [X21+24]
	175 Add X9, X27, X25
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move [X28], X22
	178 Add X25, X25, 1
	179 Add W9, W27, W25
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move [X19], X21
	182 Move X20, [X31+80]
	183 Move X19, [X31+88]
	184 Move X22, [X31+64]
	185 Move X21, [X31+72]
	186 Move X24, [X31+48]
	187 Move X23, [X31+56]
	188 Move X26, [X31+32]
	189 Move X25, [X31+40]
	190 Move X28, [X31+16]
	191 Move X27, [X31+24]
	192 Move X30, [X31+96]
	193 Return 
	194 Call 0x1C17F28
	195 Call 0x1C17F20
	196 Move X0, X22
	197 Move X1, X23
	198 Call 0x1C181E0
	199 Call 0x1C17F44
	200 Move X1, X31
	201 Call 0x1C17DEC
	202 Move X0, X20
	203 Call 0x1C181E0
	204 Move X0, X19
	205 Move X1, X21
	206 Call 0x1C181E0

Method: System.Reflection.MethodBase ExactBinding(System.Reflection.MethodBase[] match, System.Type[] types, System.Reflection.ParameterModifier[] modifiers)

Disassembly:
	0x033AE150 LDP X29, X30, [X31 + 0x10]
	0x033AE154 ADD X31, X31, 0x70
	0x033AE158 RET
	0x033AE15C BL 0x1C16F20
	0x033AE160 ADRP X0, 0xD4D000
	0x033AE164 LDR X0, [X0 + 0x578]
	0x033AE168 BL 0x1C16D08
	0x033AE16C BL 0x1C16F10
	0x033AE170 MOV X19, X0
	0x033AE174 ADRP X0, 0xD77000
	0x033AE178 LDR X0, [X0 + 0xE58]
	0x033AE17C BL 0x1C16D08
	0x033AE180 MOV X20, X0
	0x033AE184 ADRP X0, 0xD7D000
	0x033AE188 LDR X0, [X0 + 0x490]
	0x033AE18C BL 0x1C16D08
	0x033AE190 MOV X2, X0
	0x033AE194 MOV X0, X19
	0x033AE198 MOV X1, X20
	0x033AE19C MOV X3, X31
	0x033AE1A0 BL 0x330E16C
	0x033AE1A4 ADRP X0, 0xD7D000
	0x033AE1A8 LDR X0, [X0 + 0xE40]
	0x033AE1AC BL 0x1C16D08
	0x033AE1B0 MOV X1, X0
	0x033AE1B4 MOV X0, X19
	0x033AE1B8 BL 0x1C16DEC
	0x033AE1BC BL 0x1C16F44
	0x033AE1C0 MOV X1, X31
	0x033AE1C4 BL 0x1C16DEC
	0x033AE1C8 LDR W8, [X19 + 0x18]
	0x033AE1CC CMP W23, W8
	0x033AE1D0 B.CS 0x33AE1E0
	0x033AE1D4 ADD X8, X19, X23, 0x3, LSL
	0x033AE1D8 STR X31, [X8 + 0x20]
	0x033AE1DC BL 0x1C16F20
	0x033AE1E0 BL 0x1C16F28
	0x033AE1E4 ADRP X0, 0xD4D000
	0x033AE1E8 LDR X0, [X0 + 0x578]
	0x033AE1EC BL 0x1C16D08
	0x033AE1F0 BL 0x1C16F10
	0x033AE1F4 MOV X19, X0
	0x033AE1F8 ADRP X0, 0xD7D000
	0x033AE1FC LDR X0, [X0 + 0xDB0]
	0x033AE200 BL 0x1C16D08
	0x033AE204 MOV X20, X0
	0x033AE208 ADRP X0, 0xD6D000
	0x033AE20C LDR X0, [X0 + 0x778]
	0x033AE210 B 0x33AE18C
	0x033AE214 MOV X0, X21
	0x033AE218 MOV X1, X22
	0x033AE21C BL 0x1C171E0
	0x033AE220 STR X30, [X31 - 0x30]!
	0x033AE224 STP X22, X21, [X31 + 0x10]
	0x033AE228 STP X20, X19, [X31 + 0x20]
	0x033AE22C ADRP X21, 0x102F000
	0x033AE230 ADRP X22, 0xD7D000
	0x033AE234 LDRB W8, [X21 + 0x175]
	0x033AE238 LDR X22, [X22 + 0x538]
	0x033AE23C MOV X19, X1
	0x033AE240 MOV X20, X0
	0x033AE244 TBNZ X8, 0x0, 0x33AE25C
	0x033AE248 ADRP X0, 0xD7D000
	0x033AE24C LDR X0, [X0 + 0x538]
	0x033AE250 BL 0x1C16CF4
	0x033AE254 MOVZ W8, 0x1
	0x033AE258 STRB W8, [X21 + 0x175]
	0x033AE25C LDR X0, [X22]
	0x033AE260 LDR W8, [X0 + 0xE0]
	0x033AE264 CBNZ W8, 0x33AE26C
	0x033AE268 BL 0x1C16DFC
	0x033AE26C MOV X0, X20
	0x033AE270 MOV X1, X19
	0x033AE274 LDP X20, X19, [X31 + 0x20]
	0x033AE278 LDP X22, X21, [X31 + 0x10]
	0x033AE27C LDR X30, [X31], #0x30
	0x033AE280 B 0x33AE284
	0x033AE284 STR X30, [X31 - 0x30]!
	0x033AE288 STP X22, X21, [X31 + 0x10]
	0x033AE28C STP X20, X19, [X31 + 0x20]
	0x033AE290 ADRP X22, 0x102F000
	0x033AE294 ADRP X21, 0xD7D000
	0x033AE298 LDRB W8, [X22 + 0x176]
	0x033AE29C LDR X21, [X21 + 0x538]
	0x033AE2A0 MOV X19, X1
	0x033AE2A4 MOV X20, X0
	0x033AE2A8 TBNZ X8, 0x0, 0x33AE2CC
	0x033AE2AC ADRP X0, 0xD7D000
	0x033AE2B0 LDR X0, [X0 + 0x538]
	0x033AE2B4 BL 0x1C16CF4
	0x033AE2B8 ADRP X0, 0xD45000
	0x033AE2BC LDR X0, [X0 + 0x6C0]
	0x033AE2C0 BL 0x1C16CF4
	0x033AE2C4 MOVZ W8, 0x1
	0x033AE2C8 STRB W8, [X22 + 0x176]
	0x033AE2CC LDR X0, [X21]
	0x033AE2D0 ADRP X22, 0xD45000
	0x033AE2D4 LDR W8, [X0 + 0xE0]
	0x033AE2D8 LDR X22, [X22 + 0x6C0]
	0x033AE2DC CBNZ W8, 0x33AE2E8
	0x033AE2E0 BL 0x1C16DFC
	0x033AE2E4 LDR X0, [X21]
	0x033AE2E8 LDR X8, [X22]
	0x033AE2EC LDR X9, [X0 + 0xB8]
	0x033AE2F0 LDR W10, [X8 + 0xE0]
	0x033AE2F4 LDR X21, [X9]
	0x033AE2F8 CBNZ W10, 0x33AE304
	0x033AE2FC MOV X0, X8
	0x033AE300 BL 0x1C16DFC
	0x033AE304 MOV X0, X20
	0x033AE308 MOV X1, X31
	0x033AE30C BL 0x3397AFC
	0x033AE310 CBZ X21, 0x33AE34C
	0x033AE314 LDR W8, [X21 + 0x18]
	0x033AE318 CMP W0, W8
	0x033AE31C B.CS 0x33AE350
	0x033AE320 ADD X8, X21, W0, 0x2, SXTW
	0x033AE324 LDR W20, [X8 + 0x20]
	0x033AE328 MOV X0, X19
	0x033AE32C MOV X1, X31
	0x033AE330 BL 0x3397AFC
	0x033AE334 LSRV W8, W20, W0
	0x033AE338 LDP X20, X19, [X31 + 0x20]
	0x033AE33C LDP X22, X21, [X31 + 0x10]
	0x033AE340 AND W0, W8, 0x1
	0x033AE344 LDR X30, [X31], #0x30
	0x033AE348 RET
	0x033AE34C BL 0x1C16F20
	0x033AE350 BL 0x1C16F28
	0x033AE354 MOV X1, X31
	0x033AE358 B 0x32CC7C8
	0x033AE35C STR X30, [X31 - 0x30]!
	0x033AE360 STP X22, X21, [X31 + 0x10]
	0x033AE364 STP X20, X19, [X31 + 0x20]
	0x033AE368 ADRP X21, 0x102F000
	0x033AE36C ADRP X22, 0xD7D000
	0x033AE370 ADRP X19, 0xD7D000
	0x033AE374 ADRP X20, 0xD7D000
	0x033AE378 LDRB W8, [X21 + 0x177]
	0x033AE37C LDR X22, [X22 + 0xE48]
	0x033AE380 LDR X19, [X19 + 0xE50]
	0x033AE384 LDR X20, [X20 + 0x538]
	0x033AE388 TBNZ X8, 0x0, 0x33AE3B8
	0x033AE38C ADRP X0, 0xD7D000
	0x033AE390 LDR X0, [X0 + 0x538]
	0x033AE394 BL 0x1C16CF4
	0x033AE398 ADRP X0, 0xD7D000
	0x033AE39C LDR X0, [X0 + 0xE48]
	0x033AE3A0 BL 0x1C16CF4
	0x033AE3A4 ADRP X0, 0xD7D000
	0x033AE3A8 LDR X0, [X0 + 0xE50]
	0x033AE3AC BL 0x1C16CF4

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x1030000
	012 Move W8, [X21+357]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xD7E000
	020 Move X0, [X0+1336]
	021 Call 0x1C17CF4
	022 Move X0, 0xD7E000
	023 Move X0, [X0+3280]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+357], W8
	027 Compare X20, 0
	028 JumpIfEqual {157}
	029 Move X8, 0xD7E000
	030 Move X8, [X8+3280]
	031 Move W1, [X20+24]
	032 Move X0, [X8]
	033 Call 0x1C17D6C
	034 Move W8, [X20+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X21, X0
	037 Move W22, W31
	038 Move W24, W31
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X25, X20, W24
	041 Add X25, X25, 32
	042 Move X0, [X25]
	043 Compare X0, 0
	044 JumpIfEqual {152}
	045 Move X8, [X0]
	046 Move X9, [X8+920]
	047 Move X1, [X8+928]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Compare X0, 0
	050 JumpIfEqual {152}
	051 Move X8, [X0+24]
	052 Move X23, X0
	053 Compare X8, 0
	054 JumpIfEqual {109}
	055 Compare X19, 0
	056 JumpIfEqual {152}
	057 Move X8, [X19+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move W26, W31
	060 Move W8, [X23+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X27, W26
	063 Add X8, X23, X27
	064 Move X0, [X8+32]
	065 Compare X0, 0
	066 JumpIfEqual {152}
	067 Move X8, [X0]
	068 Move X9, [X8+472]
	069 Move X1, [X8+480]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move W8, [X19+24]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Compare X0, 0
	074 JumpIfEqual {152}
	075 Move X8, [X0]
	076 Add X9, X19, X27
	077 Move X1, [X9+32]
	078 Move X9, [X8+2296]
	079 Move X2, [X8+2304]
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {89}
	085 Move X8, [X19+24]
	086 Add W26, W26, 1
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move W26, W31
	089 Move X8, [X19+24]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move W8, [X20+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Compare X21, 0
	094 JumpIfEqual {152}
	095 Move X23, [X25]
	096 Compare X23, 0
	097 JumpIfEqual {104}
	098 Move X8, [X21]
	099 Move X0, X23
	100 Move X1, [X8+64]
	101 Call 0x1C17E00
	102 Compare X0, 0
	103 JumpIfEqual {154}
	104 Move W8, [X21+24]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Add X8, X21, W22
	107 Add W22, W22, 1
	108 Move [X8+32], X23
	109 Move W8, [X20+24]
	110 Add W24, W24, 1
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Compare W22, 0
	113 JumpIfEqual {121}
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Compare X21, 0
	116 JumpIfEqual {152}
	117 Move W8, [X21+24]
	118 Compare W8, 0
	119 JumpIfEqual {153}
	120 Move X0, [X21+32]
	121 Move X0, X31
	122 Move X20, [X31+64]
	123 Move X19, [X31+72]
	124 Move X22, [X31+48]
	125 Move X21, [X31+56]
	126 Move X24, [X31+32]
	127 Move X23, [X31+40]
	128 Move X26, [X31+16]
	129 Move X25, [X31+24]
	130 Move X30, [X31+80]
	131 Move X27, [X31+88]
	132 Return X0
	133 Move X8, 0xD7E000
	134 Move X8, [X8+1336]
	135 Move X0, [X8]
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1C17DFC
	140 Move X0, X21
	141 Move W1, W22
	142 Move X20, [X31+64]
	143 Move X19, [X31+72]
	144 Move X22, [X31+48]
	145 Move X21, [X31+56]
	146 Move X24, [X31+32]
	147 Move X23, [X31+40]
	148 Move X26, [X31+16]
	149 Move X25, [X31+24]
	150 Move X30, [X31+80]
	151 Move X27, [X31+88]
	152 Call 0x1C17F20
	153 Call 0x1C17F28
	154 Call 0x1C17F44
	155 Move X1, X31
	156 Call 0x1C17DEC
	157 Move X0, 0xD4B000
	158 Move X0, [X0+1320]
	159 Call 0x1C17D08
	160 Call 0x1C17F10
	161 Move X19, X0
	162 Move X0, 0xD6E000
	163 Move X0, [X0+1912]
	164 Call 0x1C17D08
	165 Move X1, X0
	166 Move X0, X19
	167 Move X2, X31
	168 Call ArgumentNullException..ctor, X0, X1
	169 Move X0, 0xD7E000
	170 Move X0, [X0+3624]
	171 Call 0x1C17D08
	172 Move X1, X0
	173 Move X0, X19
	174 Call 0x1C17DEC

Method: System.Reflection.PropertyInfo ExactPropertyBinding(System.Reflection.PropertyInfo[] match, System.Type returnType, System.Type[] types, System.Reflection.ParameterModifier[] modifiers)

Disassembly:
	0x033AE4F8 LDR X30, [X31], #0x20
	0x033AE4FC RET
	0x033AE500 CBZ X1, 0x33AE51C
	0x033AE504 MOV X0, X1
	0x033AE508 MOVZ W1, 0x1
	0x033AE50C MOV X2, X31
	0x033AE510 MOV X3, X31
	0x033AE514 MOV X4, X31
	0x033AE518 B 0x33BF534
	0x033AE51C STP X30, X19, [X31 - 0x10]!
	0x033AE520 ADRP X0, 0xD4A000
	0x033AE524 LDR X0, [X0 + 0x528]
	0x033AE528 BL 0x1C16D08
	0x033AE52C BL 0x1C16F10
	0x033AE530 MOV X19, X0
	0x033AE534 ADRP X0, 0xD6F000
	0x033AE538 LDR X0, [X0 + 0x2D8]
	0x033AE53C BL 0x1C16D08
	0x033AE540 MOV X1, X0
	0x033AE544 MOV X0, X19
	0x033AE548 MOV X2, X31
	0x033AE54C BL 0x330E100
	0x033AE550 ADRP X0, 0xD7D000
	0x033AE554 LDR X0, [X0 + 0xE58]
	0x033AE558 BL 0x1C16D08
	0x033AE55C MOV X1, X0
	0x033AE560 MOV X0, X19
	0x033AE564 BL 0x1C16DEC
	0x033AE568 STR X30, [X31 - 0x20]!
	0x033AE56C STP X20, X19, [X31 + 0x10]
	0x033AE570 ADRP X19, 0x102F000
	0x033AE574 ADRP X20, 0xD7D000
	0x033AE578 LDRB W8, [X19 + 0x17B]
	0x033AE57C LDR X20, [X20 + 0xDC8]
	0x033AE580 TBNZ X8, 0x0, 0x33AE598
	0x033AE584 ADRP X0, 0xD7D000
	0x033AE588 LDR X0, [X0 + 0xDC8]
	0x033AE58C BL 0x1C16CF4
	0x033AE590 MOVZ W8, 0x1
	0x033AE594 STRB W8, [X19 + 0x17B]
	0x033AE598 LDR X0, [X20]
	0x033AE59C BL 0x1C16F10
	0x033AE5A0 MOV X1, X31
	0x033AE5A4 MOV X19, X0
	0x033AE5A8 BL 0x33BDD8C
	0x033AE5AC LDR X8, [X20]
	0x033AE5B0 LDR X8, [X8 + 0xB8]
	0x033AE5B4 STR X19, [X8]
	0x033AE5B8 LDP X20, X19, [X31 + 0x10]
	0x033AE5BC LDR X30, [X31], #0x20
	0x033AE5C0 RET
	0x033AE5C4 SUB X31, X31, 0x40
	0x033AE5C8 STP X30, X23, [X31 + 0x10]
	0x033AE5CC STP X22, X21, [X31 + 0x20]
	0x033AE5D0 STP X20, X19, [X31 + 0x30]
	0x033AE5D4 ADRP X21, 0x102F000
	0x033AE5D8 LDRB W8, [X21 + 0x17C]
	0x033AE5DC MOV W20, W1
	0x033AE5E0 MOV X19, X0
	0x033AE5E4 TBNZ X8, 0x0, 0x33AE620
	0x033AE5E8 ADRP X0, 0xD7D000
	0x033AE5EC LDR X0, [X0 + 0xE60]
	0x033AE5F0 BL 0x1C16CF4
	0x033AE5F4 ADRP X0, 0xD7D000
	0x033AE5F8 LDR X0, [X0 + 0xE68]
	0x033AE5FC BL 0x1C16CF4
	0x033AE600 ADRP X0, 0xD45000
	0x033AE604 LDR X0, [X0 + 0xDF8]
	0x033AE608 BL 0x1C16CF4
	0x033AE60C ADRP X0, 0xD7D000
	0x033AE610 LDR X0, [X0 + 0xE70]
	0x033AE614 BL 0x1C16CF4
	0x033AE618 MOVZ W8, 0x1
	0x033AE61C STRB W8, [X21 + 0x17C]
	0x033AE620 STP X31, X31, [X31]
	0x033AE624 CBZ X19, 0x33AE70C
	0x033AE628 ADRP X22, 0xD7D000
	0x033AE62C LDR X21, [X19 + 0x20]
	0x033AE630 LDR X22, [X22 + 0xE70]
	0x033AE634 CBZ X21, 0x33AE664
	0x033AE638 LDR X9, [X21]
	0x033AE63C LDR X8, [X22]
	0x033AE640 LDRB W11, [X9 + 0x130]
	0x033AE644 LDRB W10, [X8 + 0x130]
	0x033AE648 CMP W11, W10
	0x033AE64C B.CC 0x33AE664
	0x033AE650 LDR X9, [X9 + 0xC8]
	0x033AE654 ADD X9, X9, X10, 0x3, LSL
	0x033AE658 LDUR X9, [X9 - 0x8]
	0x033AE65C CMP X9, X8
	0x033AE660 B.EQ 0x33AE6FC
	0x033AE664 ADRP X8, 0xD45000
	0x033AE668 LDR X8, [X8 + 0xDF8]
	0x033AE66C STP X31, X31, [X31]
	0x033AE670 LDR X0, [X8]
	0x033AE674 LDR W8, [X0 + 0xE0]
	0x033AE678 CBNZ W8, 0x33AE680
	0x033AE67C BL 0x1C16DFC
	0x033AE680 ADD X1, X31, 0x8
	0x033AE684 ADD X2, X31, 0x0
	0x033AE688 MOV X0, X19
	0x033AE68C BL 0x1C87864
	0x033AE690 TBNZ X0, 0x0, 0x33AE6C4
	0x033AE694 ADRP X8, 0xD7D000
	0x033AE698 LDP X21, X20, [X31]
	0x033AE69C LDR X8, [X8 + 0xE68]
	0x033AE6A0 LDR X0, [X8]
	0x033AE6A4 BL 0x2939D6C
	0x033AE6A8 ADRP X8, 0xD7D000
	0x033AE6AC LDR X8, [X8 + 0xE60]
	0x033AE6B0 MOV X2, X0
	0x033AE6B4 MOV X0, X20
	0x033AE6B8 MOV X1, X21
	0x033AE6BC LDR X3, [X8]
	0x033AE6C0 BL 0x215822C
	0x033AE6C4 LDR X0, [X22]
	0x033AE6C8 LDP X23, X20, [X31]
	0x033AE6CC BL 0x1C16F10
	0x033AE6D0 MOV X1, X31
	0x033AE6D4 MOV X21, X0
	0x033AE6D8 BL 0x33BDD8C
	0x033AE6DC STP X20, X23, [X21 + 0x10]
	0x033AE6E0 STR X21, [X19 + 0x20]
	0x033AE6E4 MOV X0, X21
	0x033AE6E8 LDP X20, X19, [X31 + 0x30]
	0x033AE6EC LDP X22, X21, [X31 + 0x20]
	0x033AE6F0 LDP X30, X23, [X31 + 0x10]
	0x033AE6F4 ADD X31, X31, 0x40
	0x033AE6F8 RET
	0x033AE6FC TBZ X20, 0x0, 0x33AE6E4
	0x033AE700 LDR X8, [X21 + 0x18]
	0x033AE704 CBNZ X8, 0x33AE6E4
	0x033AE708 B 0x33AE664
	0x033AE70C BL 0x1C16F20
	0x033AE710 B 0x1C87864
	0x033AE714 STP X30, X21, [X31 - 0x20]!
	0x033AE718 STP X20, X19, [X31 + 0x10]
	0x033AE71C MOV X20, X1
	0x033AE720 MOV X1, X31
	0x033AE724 MOV X19, X2
	0x033AE728 MOV X21, X0
	0x033AE72C BL 0x33BDD8C
	0x033AE730 STP X20, X19, [X21 + 0x10]
	0x033AE734 LDP X20, X19, [X31 + 0x10]
	0x033AE738 LDP X30, X21, [X31], #0x20
	0x033AE73C RET
	0x033AE740 SUB X31, X31, 0x50
	0x033AE744 STP X30, X21, [X31 + 0x30]
	0x033AE748 STP X20, X19, [X31 + 0x40]
	0x033AE74C ADRP X21, 0x102F000
	0x033AE750 ADRP X20, 0xD4E000
	0x033AE754 LDRB W8, [X21 + 0x17D]
	0x033AE758 LDR X20, [X20 + 0x9E8]
	0x033AE75C MOV X19, X0
	0x033AE760 TBNZ X8, 0x0, 0x33AE820
	0x033AE764 ADRP X0, 0xD45000
	0x033AE768 LDR X0, [X0 + 0xB58]
	0x033AE76C BL 0x1C16CF4
	0x033AE770 ADRP X0, 0xD46000
	0x033AE774 LDR X0, [X0 + 0x9D8]
	0x033AE778 BL 0x1C16CF4
	0x033AE77C ADRP X0, 0xD47000
	0x033AE780 LDR X0, [X0 + 0x170]
	0x033AE784 BL 0x1C16CF4
	0x033AE788 ADRP X0, 0xD4E000
	0x033AE78C LDR X0, [X0 + 0x9E8]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x1030000
	015 Move W8, [X20+358]
	016 Move X19, X2
	017 Move X21, X0
	018 Move [X31+8], X1
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xD46000
	024 Move X0, [X0+1728]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+358], W8
	028 Compare X21, 0
	029 JumpIfEqual {177}
	030 Compare X19, 0
	031 JumpIfEqual {33}
	032 Move W26, [X19+24]
	033 Move W26, W31
	034 Move W8, [X21+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X28, 0xD46000
	037 Move X28, [X28+1728]
	038 Move X22, X31
	039 Move W27, W31
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Add X29, X21, W27
	042 Add X29, X29, 32
	043 Move X0, [X29]
	044 Compare X0, 0
	045 JumpIfEqual {155}
	046 Move X8, [X0]
	047 Move X9, [X8+600]
	048 Move X1, [X8+608]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X23, X0
	052 Compare X0, 0
	053 JumpIfEqual {155}
	054 Move W8, W31
	055 Move W9, [X23+24]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X20, W8
	058 Add X8, X23, X20
	059 Move X0, [X8+32]
	060 Compare X0, 0
	061 JumpIfEqual {155}
	062 Move X8, [X0]
	063 Move X9, [X8+472]
	064 Move X1, [X8+480]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Compare X19, 0
	067 JumpIfEqual {155}
	068 Move W8, [X19+24]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X24, X0
	071 Move X0, [X28]
	072 Add X8, X19, X20
	073 Move X25, [X8+32]
	074 Move W9, [X0+224]
	075 Compare W9, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X0, X24
	079 Move X1, X25
	080 Move X2, X31
	081 Call Type.op_Inequality, X0, X1
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {136}
	086 Add W8, W20, 1
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, [X28]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Move X0, [X31+8]
	094 Move X1, X31
	095 Move X2, X31
	096 Call Type.op_Inequality, X0, X1
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {125}
	101 Move W8, [X21+24]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X0, [X29]
	104 Compare X0, 0
	105 JumpIfEqual {155}
	106 Move X8, [X0]
	107 Move X9, [X8+584]
	108 Move X1, [X8+592]
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move X8, [X28]
	111 Move X23, X0
	112 Move W9, [X8+224]
	113 Compare W9, 0
	114 JumpIfNotEqual {117}
	115 Move X0, X8
	116 Call 0x1C17DFC
	117 Move X0, [X31+8]
	118 Move X1, X23
	119 Move X2, X31
	120 Call Type.op_Inequality, X0, X1
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfEqual {136}
	125 Move X0, X22
	126 Move X1, X31
	127 Move X2, X31
	128 Call PropertyInfo.op_Inequality, X0, X1
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {157}
	133 Move W8, [X21+24]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X22, [X29]
	136 Move W8, [X21+24]
	137 Add W27, W27, 1
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X22, X31
	140 Move X0, X22
	141 Move X20, [X31+96]
	142 Move X19, [X31+104]
	143 Move X22, [X31+80]
	144 Move X21, [X31+88]
	145 Move X24, [X31+64]
	146 Move X23, [X31+72]
	147 Move X26, [X31+48]
	148 Move X25, [X31+56]
	149 Move X28, [X31+32]
	150 Move X27, [X31+40]
	151 Move X29, [X31+16]
	152 Move X30, [X31+24]
	153 Add X31, X31, 112
	154 Return X0
	155 Call 0x1C17F20
	156 Call 0x1C17F28
	157 Move X0, 0xD78000
	158 Move X0, [X0+3040]
	159 Call 0x1C17D08
	160 Move X1, X31
	161 Call Environment.GetResourceString, X0
	162 Move X19, X0
	163 Move X0, 0xD78000
	164 Move X0, [X0+1952]
	165 Call 0x1C17D08
	166 Call 0x1C17F10
	167 Move X1, X19
	168 Move X2, X31
	169 Move X20, X0
	170 Call AmbiguousMatchException..ctor, X0, X1
	171 Move X0, 0xD7E000
	172 Move X0, [X0+3640]
	173 Call 0x1C17D08
	174 Move X1, X0
	175 Move X0, X20
	176 Call 0x1C17DEC
	177 Move X0, 0xD4B000
	178 Move X0, [X0+1320]
	179 Call 0x1C17D08
	180 Call 0x1C17F10
	181 Move X19, X0
	182 Move X0, 0xD6E000
	183 Move X0, [X0+1912]
	184 Call 0x1C17D08
	185 Move X1, X0
	186 Move X0, X19
	187 Move X2, X31
	188 Call ArgumentNullException..ctor, X0, X1
	189 Move X0, 0xD7E000
	190 Move X0, [X0+3640]
	191 Call 0x1C17D08
	192 Move X1, X0
	193 Move X0, X19
	194 Call 0x1C17DEC

Method: System.Int32 FindMostSpecific(System.Reflection.ParameterInfo[] p1, System.Int32[] paramOrder1, System.Type paramArrayType1, System.Reflection.ParameterInfo[] p2, System.Int32[] paramOrder2, System.Type paramArrayType2, System.Type[] types, System.Object[] args)

Disassembly:
	0x033AD8D8 MOVZ W8, 0x1
	0x033AD8DC LDP X20, X19, [X31 + 0x30]
	0x033AD8E0 LDP X22, X21, [X31 + 0x20]
	0x033AD8E4 LDP X24, X23, [X31 + 0x10]
	0x033AD8E8 AND W0, W8, 0x1
	0x033AD8EC LDP X30, X25, [X31], #0x40
	0x033AD8F0 RET
	0x033AD8F4 BL 0x1C16F20
	0x033AD8F8 STP X30, X21, [X31 - 0x20]!
	0x033AD8FC STP X20, X19, [X31 + 0x10]
	0x033AD900 ADRP X20, 0x1030000
	0x033AD904 LDRB W8, [X20 + 0x16D]
	0x033AD908 MOV X19, X0
	0x033AD90C TBNZ X8, 0x0, 0x33AD924
	0x033AD910 ADRP X0, 0xD46000
	0x033AD914 LDR X0, [X0 + 0x6C0]
	0x033AD918 BL 0x1C16CF4
	0x033AD91C MOVZ W8, 0x1
	0x033AD920 STRB W8, [X20 + 0x16D]
	0x033AD924 ADRP X21, 0xD46000
	0x033AD928 LDR X21, [X21 + 0x6C0]
	0x033AD92C MOV W20, W31
	0x033AD930 CBZ X19, 0x33AD988
	0x033AD934 LDR X8, [X19]
	0x033AD938 MOV X0, X19
	0x033AD93C LDR X9, [X8 + 0x818]
	0x033AD940 LDR X1, [X8 + 0x820]
	0x033AD944 BLR X9
	0x033AD948 LDR X8, [X21]
	0x033AD94C MOV X19, X0
	0x033AD950 LDR W9, [X8 + 0xE0]
	0x033AD954 CBNZ W9, 0x33AD960
	0x033AD958 MOV X0, X8
	0x033AD95C BL 0x1C16DFC
	0x033AD960 MOV X0, X19
	0x033AD964 MOV X1, X31
	0x033AD968 MOV X2, X31
	0x033AD96C ADD W20, W20, 0x1
	0x033AD970 BL 0x3395F0C
	0x033AD974 TBNZ X0, 0x0, 0x33AD930
	0x033AD978 MOV W0, W20
	0x033AD97C LDP X20, X19, [X31 + 0x10]
	0x033AD980 LDP X30, X21, [X31], #0x20
	0x033AD984 RET
	0x033AD988 BL 0x1C16F20
	0x033AD98C STP X30, X25, [X31 - 0x40]!
	0x033AD990 STP X24, X23, [X31 + 0x10]
	0x033AD994 STP X22, X21, [X31 + 0x20]
	0x033AD998 STP X20, X19, [X31 + 0x30]
	0x033AD99C ADRP X21, 0x1030000
	0x033AD9A0 LDRB W8, [X21 + 0x173]
	0x033AD9A4 MOV X20, X1
	0x033AD9A8 MOV X19, X0
	0x033AD9AC TBNZ X8, 0x0, 0x33AD9C4
	0x033AD9B0 ADRP X0, 0xD46000
	0x033AD9B4 LDR X0, [X0 + 0x6C0]
	0x033AD9B8 BL 0x1C16CF4
	0x033AD9BC MOVZ W8, 0x1
	0x033AD9C0 STRB W8, [X21 + 0x173]
	0x033AD9C4 CBZ X19, 0x33ADAF0
	0x033AD9C8 LDR X8, [X19]
	0x033AD9CC MOV X0, X19
	0x033AD9D0 LDR X9, [X8 + 0x398]
	0x033AD9D4 LDR X1, [X8 + 0x3A0]
	0x033AD9D8 BLR X9
	0x033AD9DC CBZ X20, 0x33ADAF0
	0x033AD9E0 LDR X8, [X20]
	0x033AD9E4 MOV X19, X0
	0x033AD9E8 MOV X0, X20
	0x033AD9EC LDR X9, [X8 + 0x398]
	0x033AD9F0 LDR X1, [X8 + 0x3A0]
	0x033AD9F4 BLR X9
	0x033AD9F8 CBZ X19, 0x33ADAF0
	0x033AD9FC MOV X20, X0
	0x033ADA00 CBZ X0, 0x33ADAF0
	0x033ADA04 LDR X23, [X19 + 0x18]
	0x033ADA08 LDR W8, [X20 + 0x18]
	0x033ADA0C CMP W23, W8
	0x033ADA10 B.NE 0x33ADAC4
	0x033ADA14 CMP W23, 0x1
	0x033ADA18 B.LT 0x33ADAD4
	0x033ADA1C CBZ W23, 0x33ADAC0
	0x033ADA20 ADRP X25, 0xD46000
	0x033ADA24 LDR X25, [X25 + 0x6C0]
	0x033ADA28 MOV X22, X31
	0x033ADA2C MOVZ W24, 0x1
	0x033ADA30 ADD X8, X19, X22, 0x3, LSL
	0x033ADA34 LDR X0, [X8 + 0x20]
	0x033ADA38 CBZ X0, 0x33ADAF0
	0x033ADA3C LDR X8, [X0]
	0x033ADA40 SUB W21, W24, 0x1
	0x033ADA44 LDP X9, X1, [X8 + 0x1D8]
	0x033ADA48 BLR X9
	0x033ADA4C LDR W8, [X20 + 0x18]
	0x033ADA50 CMP W21, W8
	0x033ADA54 B.CS 0x33ADAC0
	0x033ADA58 ADD X8, X20, X22, 0x3, LSL
	0x033ADA5C MOV X21, X0
	0x033ADA60 LDR X0, [X8 + 0x20]
	0x033ADA64 CBZ X0, 0x33ADAF0
	0x033ADA68 LDR X8, [X0]
	0x033ADA6C LDP X9, X1, [X8 + 0x1D8]
	0x033ADA70 BLR X9
	0x033ADA74 LDR X8, [X25]
	0x033ADA78 MOV X22, X0
	0x033ADA7C LDR W9, [X8 + 0xE0]
	0x033ADA80 CBNZ W9, 0x33ADA8C
	0x033ADA84 MOV X0, X8
	0x033ADA88 BL 0x1C16DFC
	0x033ADA8C MOV X0, X21
	0x033ADA90 MOV X1, X22
	0x033ADA94 MOV X2, X31
	0x033ADA98 BL 0x3395F0C
	0x033ADA9C TBNZ X0, 0x0, 0x33ADACC
	0x033ADAA0 CMP W23, W24
	0x033ADAA4 B.EQ 0x33ADACC
	0x033ADAA8 LDR W8, [X19 + 0x18]
	0x033ADAAC SXTW X22, W24
	0x033ADAB0 CMP W24, W8
	0x033ADAB4 ADD W8, W24, 0x1
	0x033ADAB8 MOV W24, W8
	0x033ADABC B.CC 0x33ADA30
	0x033ADAC0 BL 0x1C16F28
	0x033ADAC4 MOV W8, W31
	0x033ADAC8 B 0x33ADAD8
	0x033ADACC EOR W8, W0, 0x1
	0x033ADAD0 B 0x33ADAD8
	0x033ADAD4 MOVZ W8, 0x1
	0x033ADAD8 LDP X20, X19, [X31 + 0x30]
	0x033ADADC LDP X22, X21, [X31 + 0x20]
	0x033ADAE0 LDP X24, X23, [X31 + 0x10]
	0x033ADAE4 AND W0, W8, 0x1
	0x033ADAE8 LDP X30, X25, [X31], #0x40
	0x033ADAEC RET
	0x033ADAF0 BL 0x1C16F20
	0x033ADAF4 SUB X31, X31, 0x70
	0x033ADAF8 STP X29, X30, [X31 + 0x10]
	0x033ADAFC STP X28, X27, [X31 + 0x20]
	0x033ADB00 STP X26, X25, [X31 + 0x30]
	0x033ADB04 STP X24, X23, [X31 + 0x40]
	0x033ADB08 STP X22, X21, [X31 + 0x50]
	0x033ADB0C STP X20, X19, [X31 + 0x60]
	0x033ADB10 ADRP X19, 0x1030000
	0x033ADB14 LDRB W8, [X19 + 0x174]
	0x033ADB18 MOV X21, X3
	0x033ADB1C MOV X20, X2
	0x033ADB20 TBNZ X8, 0x0, 0x33ADB8C
	0x033ADB24 ADRP X0, 0xD7E000
	0x033ADB28 LDR X0, [X0 + 0x538]
	0x033ADB2C BL 0x1C16CF4
	0x033ADB30 ADRP X0, 0xD47000
	0x033ADB34 LDR X0, [X0 + 0xE58]
	0x033ADB38 BL 0x1C16CF4
	0x033ADB3C ADRP X0, 0xD7E000
	0x033ADB40 LDR X0, [X0 + 0xCD0]
	0x033ADB44 BL 0x1C16CF4
	0x033ADB48 ADRP X0, 0xD77000
	0x033ADB4C LDR X0, [X0 + 0x278]
	0x033ADB50 BL 0x1C16CF4
	0x033ADB54 ADRP X0, 0xD50000
	0x033ADB58 LDR X0, [X0 + 0x968]
	0x033ADB5C BL 0x1C16CF4
	0x033ADB60 ADRP X0, 0xD79000
	0x033ADB64 LDR X0, [X0 + 0xB0]
	0x033ADB68 BL 0x1C16CF4
	0x033ADB6C ADRP X0, 0xD4E000
	0x033ADB70 LDR X0, [X0 + 0xC60]
	0x033ADB74 BL 0x1C16CF4
	0x033ADB78 ADRP X0, 0xD46000
	0x033ADB7C LDR X0, [X0 + 0x6C0]
	0x033ADB80 BL 0x1C16CF4
	0x033ADB84 MOVZ W8, 0x1
	0x033ADB88 STRB W8, [X19 + 0x174]
	0x033ADB8C CBZ X21, 0x33AE15C
	0x033ADB90 ADRP X8, 0xD4E000
	0x033ADB94 LDR X8, [X8 + 0xC60]
	0x033ADB98 LDR W1, [X21 + 0x18]
	0x033ADB9C LDR X0, [X8]
	0x033ADBA0 BL 0x1C16D6C
	0x033ADBA4 LDR W8, [X21 + 0x18]
	0x033ADBA8 MOV X19, X0
	0x033ADBAC CMP W8, 0x1
	0x033ADBB0 B.LT 0x33ADC78
	0x033ADBB4 MOV X23, X31
	0x033ADBB8 ADD X24, X19, 0x20
	0x033ADBBC ADD X25, X21, 0x20
	0x033ADBC0 CMP W23, W8
	0x033ADBC4 B.CS 0x33AE1E0
	0x033ADBC8 LDR X0, [X25, X23, LSL #3]
	0x033ADBCC CBZ X0, 0x33AE15C
	0x033ADBD0 LDR X8, [X0]
	0x033ADBD4 LDR X9, [X8 + 0x328]
	0x033ADBD8 LDR X1, [X8 + 0x330]
	0x033ADBDC BLR X9
	0x033ADBE0 CBZ X19, 0x33AE15C
	0x033ADBE4 MOV X22, X0
	0x033ADBE8 CBZ X0, 0x33AE1C8
	0x033ADBEC LDR X8, [X19]
	0x033ADBF0 MOV X0, X22
	0x033ADBF4 LDR X1, [X8 + 0x40]
	0x033ADBF8 BL 0x1C16E00
	0x033ADBFC CBZ X0, 0x33AE1BC
	0x033ADC00 LDR W8, [X19 + 0x18]
	0x033ADC04 CMP W23, W8
	0x033ADC08 B.CS 0x33AE1E0
	0x033ADC0C MOV X0, X22
	0x033ADC10 MOV X1, X31
	0x033ADC14 STR X22, [X24, X23, LSL #3]
	0x033ADC18 BL 0x3395E80
	0x033ADC1C TBNZ X0, 0x0, 0x33ADC68
	0x033ADC20 LDR W8, [X19 + 0x18]
	0x033ADC24 CMP W23, W8
	0x033ADC28 B.CS 0x33AE1E0
	0x033ADC2C LDR X8, [X24, X23, LSL #3]
	0x033ADC30 CBZ X8, 0x33AE160
	0x033ADC34 LDR X9, [X8]
	0x033ADC38 ADRP X8, 0xD79000
	0x033ADC3C LDR X8, [X8 + 0xB0]
	0x033ADC40 LDRB W11, [X9 + 0x130]
	0x033ADC44 LDR X8, [X8]
	0x033ADC48 LDRB W10, [X8 + 0x130]
	0x033ADC4C CMP W11, W10
	0x033ADC50 B.CC 0x33AE160
	0x033ADC54 LDR X9, [X9 + 0xC8]
	0x033ADC58 ADD X9, X9, X10, 0x3, LSL
	0x033ADC5C LDUR X9, [X9 - 0x8]
	0x033ADC60 CMP X9, X8
	0x033ADC64 B.NE 0x33AE160
	0x033ADC68 LDR W8, [X21 + 0x18]
	0x033ADC6C ADD X23, X23, 0x1
	0x033ADC70 CMP W23, W8
	0x033ADC74 B.LT 0x33ADBC0
	0x033ADC78 CBZ X20, 0x33AE1E4
	0x033ADC7C LDR X8, [X20 + 0x18]
	0x033ADC80 CBZ X8, 0x33AE1E4
	0x033ADC84 MOV X0, X20
	0x033ADC88 MOV X1, X31
	0x033ADC8C BL 0x33A01F0
	0x033ADC90 CBZ X0, 0x33AE15C
	0x033ADC94 ADRP X8, 0xD7E000
	0x033ADC98 LDR X8, [X8 + 0xCD0]
	0x033ADC9C MOV X21, X0
	0x033ADCA0 LDR X22, [X8]
	0x033ADCA4 MOV X1, X22
	0x033ADCA8 BL 0x1C16E00
	0x033ADCAC CBZ X0, 0x33AE214
	0x033ADCB0 LDR X8, [X0 + 0x18]
	0x033ADCB4 MOV X20, X0
	0x033ADCB8 CMP W8, 0x1
	0x033ADCBC B.LT 0x33ADFD8
	0x033ADCC0 ADRP X29, 0xD46000
	0x033ADCC4 LDR X29, [X29 + 0x6C0]
	0x033ADCC8 MOV W22, W31
	0x033ADCCC MOV W27, W31
	0x033ADCD0 ADD X24, X19, 0x20
	0x033ADCD4 CMP W27, W8
	0x033ADCD8 B.CS 0x33AE1E0
	0x033ADCDC ADD X25, X20, W27, 0x3, SXTW
	0x033ADCE0 LDR X0, [X25 + 0x20]!
	0x033ADCE4 CBZ X0, 0x33AE15C
	0x033ADCE8 LDR X8, [X0]
	0x033ADCEC LDR X9, [X8 + 0x398]
	0x033ADCF0 LDR X1, [X8 + 0x3A0]
	0x033ADCF4 BLR X9
	0x033ADCF8 CBZ X0, 0x33AE15C
	0x033ADCFC CBZ X19, 0x33AE15C
	0x033ADD00 LDR X9, [X0 + 0x18]
	0x033ADD04 LDR W8, [X19 + 0x18]
	0x033ADD08 MOV X21, X0
	0x033ADD0C CMP W9, W8
	0x033ADD10 B.NE 0x33ADFB0
	0x033ADD14 CMP W9, 0x1
	0x033ADD18 B.LT 0x33ADF60
	0x033ADD1C STR W22, [X31 + 0xC]
	0x033ADD20 CBZ W9, 0x33AE1E0
	0x033ADD24 MOV X26, X31

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X25, 0x1031000
	015 Move X27, 0xD47000
	016 Move W8, [X25+359]
	017 Move X27, [X27+1728]
	018 Move X22, X7
	019 Move X21, X6
	020 Move X29, X5
	021 Move X24, X4
	022 Move X19, X3
	023 Move X23, X2
	024 Move X26, X1
	025 Move X20, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {38}
	030 Move X0, 0xD7F000
	031 Move X0, [X0+1336]
	032 Call 0x1C17CF4
	033 Move X0, 0xD47000
	034 Move X0, [X0+1728]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+359], W8
	038 Move X0, [X27]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X23
	044 Move X1, X31
	045 Move X2, X31
	046 Call Type.op_Inequality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {65}
	051 Move X0, [X27]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X29
	057 Move X1, X31
	058 Move X2, X31
	059 Call Type.op_Equality, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {65}
	064 Move W0, 2
	065 Move X0, [X27]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X29
	071 Move X1, X31
	072 Move X2, X31
	073 Call Type.op_Inequality, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {91}
	078 Move X0, [X27]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X0, X23
	084 Move X1, X31
	085 Move X2, X31
	086 Call Type.op_Equality, X0, X1
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {301}
	091 Compare X21, 0
	092 JumpIfEqual {319}
	093 Move W8, [X21+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Add X8, X21, 32
	096 Move [X31], X31
	097 Move [X31+8], X8
	098 Add X8, X26, 32
	099 Move X25, X31
	100 Add X9, X22, 32
	101 Move [X31+32], X8
	102 Add X8, X24, 32
	103 Move [X31+16], X9
	104 Move [X31+24], X8
	105 Compare X22, 0
	106 JumpIfEqual {123}
	107 Move W8, [X22+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X0, [X27]
	110 Move X9, [X31+16]
	111 Move X28, X27
	112 Move W8, [X0+224]
	113 Move X27, [X9]
	114 Compare W8, 0
	115 JumpIfNotEqual {118}
	116 Call 0x1C17DFC
	117 Move X0, [X28]
	118 Move X8, [X0+184]
	119 Move X8, [X8+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X27, 0xD47000
	122 Move X27, [X27+1728]
	123 Move X0, [X27]
	124 Move W8, [X0+224]
	125 Compare W8, 0
	126 JumpIfNotEqual {128}
	127 Call 0x1C17DFC
	128 Move X0, X23
	129 Move X1, X31
	130 Move X2, X31
	131 Call Type.op_Inequality, X0, X1
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfNotEqual {150}
	136 Compare X26, 0
	137 JumpIfEqual {319}
	138 Move W8, [X26+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Compare X20, 0
	141 JumpIfEqual {319}
	142 Move X9, [X31+32]
	143 Move W8, [X20+24]
	144 Move [X31+40], X23
	145 Move W9, [X9]
	146 Subtract W8, W8, 1
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move W8, [X26+24]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Compare X26, 0
	151 JumpIfEqual {319}
	152 Move W8, [X26+24]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Compare X20, 0
	155 JumpIfEqual {319}
	156 Move X8, [X31+32]
	157 Move W9, [X20+24]
	158 NotImplemented "Instruction LDRSW not yet implemented."
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Add X8, X20, X8
	161 Move X0, [X8+32]
	162 Compare X0, 0
	163 JumpIfEqual {319}
	164 Move X8, [X0]
	165 Move X9, [X8+472]
	166 Move X1, [X8+480]
	167 NotImplemented "Instruction BLR not yet implemented."
	168 Move [X31+40], X0
	169 Move X0, [X27]
	170 Move W8, [X0+224]
	171 Compare W8, 0
	172 JumpIfNotEqual {174}
	173 Call 0x1C17DFC
	174 Move X0, X29
	175 Move X1, X31
	176 Move X2, X31
	177 Call Type.op_Inequality, X0, X1
	178 Move TEMP, X0
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfNotEqual {196}
	182 Compare X24, 0
	183 JumpIfEqual {319}
	184 Move W8, [X24+24]
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Compare X19, 0
	187 JumpIfEqual {319}
	188 Move X9, [X31+24]
	189 Move W8, [X19+24]
	190 Move X28, X29
	191 Move W9, [X9]
	192 Subtract W8, W8, 1
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move W8, [X24+24]
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Compare X24, 0
	197 JumpIfEqual {319}
	198 Move W8, [X24+24]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Compare X19, 0
	201 JumpIfEqual {319}
	202 Move X8, [X31+24]
	203 Move W9, [X19+24]
	204 NotImplemented "Instruction LDRSW not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Add X8, X19, X8
	207 Move X0, [X8+32]
	208 Compare X0, 0
	209 JumpIfEqual {319}
	210 Move X8, [X0]
	211 Move X9, [X8+472]
	212 Move X1, [X8+480]
	213 NotImplemented "Instruction BLR not yet implemented."
	214 Move X28, X0
	215 Move X0, [X27]
	216 Move W8, [X0+224]
	217 Compare W8, 0
	218 JumpIfNotEqual {220}
	219 Call 0x1C17DFC
	220 Move X0, [X31+40]
	221 Move X1, X28
	222 Move X2, X31
	223 Call Type.op_Equality, X0, X1
	224 Move TEMP, X0
	225 And TEMP, TEMP, 1
	226 Compare TEMP, 1
	227 JumpIfEqual {273}
	228 Move W8, [X21+24]
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move X8, 0xD7F000
	231 Move X8, [X8+1336]
	232 Move X9, [X31+8]
	233 Move X27, X20
	234 Move X20, X19
	235 Move X0, [X8]
	236 Move X19, X26
	237 Move X26, X24
	238 Move X24, X22
	239 Move X22, X21
	240 Move W8, [X0+224]
	241 Move X21, [X9]
	242 Compare W8, 0
	243 JumpIfNotEqual {245}
	244 Call 0x1C17DFC
	245 Move X0, [X31+40]
	246 Move X1, X28
	247 Move X2, X21
	248 Call DefaultBinder.FindMostSpecificType, X0, X1, X2
	249 NotImplemented "Instruction CMP not yet implemented."
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Move X21, X22
	252 Move X22, X24
	253 Move X24, X26
	254 Move X26, X19
	255 Move X19, X20
	256 Move X20, X27
	257 Move X27, 0xD47000
	258 Move X27, [X27+1728]
	259 Compare W0, 0
	260 JumpIfNotEqual {273}
	261 Move W8, 1
	262 Move [X31+4], W8
	263 Move X21, X22
	264 Move W8, 1
	265 Move [X31], W8
	266 Move X22, X24
	267 Move X24, X26
	268 Move X26, X19
	269 Move X19, X20
	270 Move X20, X27
	271 Move X27, 0xD47000
	272 Move X27, [X27+1728]
	273 NotImplemented "Instruction LDRSW not yet implemented."
	274 Add X25, X25, 1
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Move [X31], X31
	277 Move W8, [X31]
	278 Move W9, [X31+4]
	279 Xor W8, W8, W9
	280 Move TEMP, X8
	281 And TEMP, TEMP, 1
	282 Compare TEMP, 1
	283 JumpIfNotEqual {287}
	284 And W31, W9, 1
	285 Move W8, 1
	286 NotImplemented "Instruction CINC not yet implemented."
	287 NotImplemented "Instruction CMP not yet implemented."
	288 NotImplemented "Instruction CSET not yet implemented."
	289 Or W8, W8, W9
	290 Move TEMP, X8
	291 And TEMP, TEMP, 1
	292 Compare TEMP, 1
	293 JumpIfEqual {303}
	294 Compare X20, 0
	295 JumpIfEqual {319}
	296 Compare X19, 0
	297 JumpIfEqual {319}
	298 Move W8, [X20+24]
	299 Move W9, [X19+24]
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Move W0, 1
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Move W0, W31
	304 Move X20, [X31+128]
	305 Move X19, [X31+136]
	306 Move X22, [X31+112]
	307 Move X21, [X31+120]
	308 Move X24, [X31+96]
	309 Move X23, [X31+104]
	310 Move X26, [X31+80]
	311 Move X25, [X31+88]
	312 Move X28, [X31+64]
	313 Move X27, [X31+72]
	314 Move X29, [X31+48]
	315 Move X30, [X31+56]
	316 Add X31, X31, 144
	317 Return X0
	318 Call 0x1C17F28
	319 Call 0x1C17F20

Method: System.Int32 FindMostSpecificType(System.Type c1, System.Type c2, System.Type t)

Disassembly:
	0x033AD53C STRB W8, [X20 + 0x166]
	0x033AD540 CBZ X21, 0x33AD748
	0x033AD544 CBZ X19, 0x33AD550
	0x033AD548 LDR W26, [X19 + 0x18]
	0x033AD54C B 0x33AD554
	0x033AD550 MOV W26, W31
	0x033AD554 LDR W8, [X21 + 0x18]
	0x033AD558 CMP W8, 0x1
	0x033AD55C B.LT 0x33AD6C8
	0x033AD560 ADRP X28, 0xD46000
	0x033AD564 LDR X28, [X28 + 0x6C0]
	0x033AD568 MOV X22, X31
	0x033AD56C MOV W27, W31
	0x033AD570 CMP W27, W8
	0x033AD574 B.CS 0x33AD6F4
	0x033AD578 ADD X29, X21, W27, 0x3, SXTW
	0x033AD57C LDR X0, [X29 + 0x20]!
	0x033AD580 CBZ X0, 0x33AD6F0
	0x033AD584 LDR X8, [X0]
	0x033AD588 LDR X9, [X8 + 0x258]
	0x033AD58C LDR X1, [X8 + 0x260]
	0x033AD590 BLR X9
	0x033AD594 CMP W26, 0x1
	0x033AD598 B.LT 0x33AD61C
	0x033AD59C MOV X23, X0
	0x033AD5A0 CBZ X0, 0x33AD6F0
	0x033AD5A4 MOV W8, W31
	0x033AD5A8 LDR W9, [X23 + 0x18]
	0x033AD5AC CMP W8, W9
	0x033AD5B0 B.CS 0x33AD6F4
	0x033AD5B4 SXTW X20, W8
	0x033AD5B8 ADD X8, X23, X20, 0x3, LSL
	0x033AD5BC LDR X0, [X8 + 0x20]
	0x033AD5C0 CBZ X0, 0x33AD6F0
	0x033AD5C4 LDR X8, [X0]
	0x033AD5C8 LDP X9, X1, [X8 + 0x1D8]
	0x033AD5CC BLR X9
	0x033AD5D0 CBZ X19, 0x33AD6F0
	0x033AD5D4 LDR W8, [X19 + 0x18]
	0x033AD5D8 CMP W20, W8
	0x033AD5DC B.CS 0x33AD6F4
	0x033AD5E0 MOV X24, X0
	0x033AD5E4 LDR X0, [X28]
	0x033AD5E8 ADD X8, X19, X20, 0x3, LSL
	0x033AD5EC LDR X25, [X8 + 0x20]
	0x033AD5F0 LDR W9, [X0 + 0xE0]
	0x033AD5F4 CBNZ W9, 0x33AD5FC
	0x033AD5F8 BL 0x1C16DFC
	0x033AD5FC MOV X0, X24
	0x033AD600 MOV X1, X25
	0x033AD604 MOV X2, X31
	0x033AD608 BL 0x3395F0C
	0x033AD60C TBNZ X0, 0x0, 0x33AD6B4
	0x033AD610 ADD W8, W20, 0x1
	0x033AD614 CMP W26, W8
	0x033AD618 B.NE 0x33AD5A8
	0x033AD61C LDR X0, [X28]
	0x033AD620 LDR W8, [X0 + 0xE0]
	0x033AD624 CBNZ W8, 0x33AD62C
	0x033AD628 BL 0x1C16DFC
	0x033AD62C LDR X0, [X31 + 0x8]
	0x033AD630 MOV X1, X31
	0x033AD634 MOV X2, X31
	0x033AD638 BL 0x3395F0C
	0x033AD63C TBZ X0, 0x0, 0x33AD690
	0x033AD640 LDR W8, [X21 + 0x18]
	0x033AD644 CMP W27, W8
	0x033AD648 B.CS 0x33AD6F4
	0x033AD64C LDR X0, [X29]
	0x033AD650 CBZ X0, 0x33AD6F0
	0x033AD654 LDR X8, [X0]
	0x033AD658 LDR X9, [X8 + 0x248]
	0x033AD65C LDR X1, [X8 + 0x250]
	0x033AD660 BLR X9
	0x033AD664 LDR X8, [X28]
	0x033AD668 MOV X23, X0
	0x033AD66C LDR W9, [X8 + 0xE0]
	0x033AD670 CBNZ W9, 0x33AD67C
	0x033AD674 MOV X0, X8
	0x033AD678 BL 0x1C16DFC
	0x033AD67C LDR X0, [X31 + 0x8]
	0x033AD680 MOV X1, X23
	0x033AD684 MOV X2, X31
	0x033AD688 BL 0x3395F0C
	0x033AD68C TBNZ X0, 0x0, 0x33AD6B4
	0x033AD690 MOV X0, X22
	0x033AD694 MOV X1, X31
	0x033AD698 MOV X2, X31
	0x033AD69C BL 0x32CE2E0
	0x033AD6A0 TBNZ X0, 0x0, 0x33AD6F8
	0x033AD6A4 LDR W8, [X21 + 0x18]
	0x033AD6A8 CMP W27, W8
	0x033AD6AC B.CS 0x33AD6F4
	0x033AD6B0 LDR X22, [X29]
	0x033AD6B4 LDR W8, [X21 + 0x18]
	0x033AD6B8 ADD W27, W27, 0x1
	0x033AD6BC CMP W27, W8
	0x033AD6C0 B.LT 0x33AD570
	0x033AD6C4 B 0x33AD6CC
	0x033AD6C8 MOV X22, X31
	0x033AD6CC MOV X0, X22
	0x033AD6D0 LDP X20, X19, [X31 + 0x60]
	0x033AD6D4 LDP X22, X21, [X31 + 0x50]
	0x033AD6D8 LDP X24, X23, [X31 + 0x40]
	0x033AD6DC LDP X26, X25, [X31 + 0x30]
	0x033AD6E0 LDP X28, X27, [X31 + 0x20]
	0x033AD6E4 LDP X29, X30, [X31 + 0x10]
	0x033AD6E8 ADD X31, X31, 0x70
	0x033AD6EC RET
	0x033AD6F0 BL 0x1C16F20
	0x033AD6F4 BL 0x1C16F28
	0x033AD6F8 ADRP X0, 0xD78000
	0x033AD6FC LDR X0, [X0 + 0xBE0]
	0x033AD700 BL 0x1C16D08
	0x033AD704 MOV X1, X31
	0x033AD708 BL 0x33BDD84
	0x033AD70C MOV X19, X0
	0x033AD710 ADRP X0, 0xD78000
	0x033AD714 LDR X0, [X0 + 0x7A0]
	0x033AD718 BL 0x1C16D08
	0x033AD71C BL 0x1C16F10
	0x033AD720 MOV X1, X19
	0x033AD724 MOV X2, X31
	0x033AD728 MOV X20, X0
	0x033AD72C BL 0x32CC544
	0x033AD730 ADRP X0, 0xD7E000
	0x033AD734 LDR X0, [X0 + 0xE38]
	0x033AD738 BL 0x1C16D08
	0x033AD73C MOV X1, X0
	0x033AD740 MOV X0, X20
	0x033AD744 BL 0x1C16DEC
	0x033AD748 ADRP X0, 0xD4B000
	0x033AD74C LDR X0, [X0 + 0x528]
	0x033AD750 BL 0x1C16D08
	0x033AD754 BL 0x1C16F10
	0x033AD758 MOV X19, X0
	0x033AD75C ADRP X0, 0xD6E000
	0x033AD760 LDR X0, [X0 + 0x778]
	0x033AD764 BL 0x1C16D08
	0x033AD768 MOV X1, X0
	0x033AD76C MOV X0, X19
	0x033AD770 MOV X2, X31
	0x033AD774 BL 0x330E100
	0x033AD778 ADRP X0, 0xD7E000
	0x033AD77C LDR X0, [X0 + 0xE38]
	0x033AD780 BL 0x1C16D08
	0x033AD784 MOV X1, X0
	0x033AD788 MOV X0, X19
	0x033AD78C BL 0x1C16DEC
	0x033AD790 STP X30, X25, [X31 - 0x40]!
	0x033AD794 STP X24, X23, [X31 + 0x10]
	0x033AD798 STP X22, X21, [X31 + 0x20]
	0x033AD79C STP X20, X19, [X31 + 0x30]
	0x033AD7A0 ADRP X21, 0x1030000
	0x033AD7A4 LDRB W8, [X21 + 0x16C]
	0x033AD7A8 MOV X20, X1
	0x033AD7AC MOV X19, X0
	0x033AD7B0 TBNZ X8, 0x0, 0x33AD7C8
	0x033AD7B4 ADRP X0, 0xD46000
	0x033AD7B8 LDR X0, [X0 + 0x6C0]
	0x033AD7BC BL 0x1C16CF4
	0x033AD7C0 MOVZ W8, 0x1
	0x033AD7C4 STRB W8, [X21 + 0x16C]
	0x033AD7C8 CBZ X19, 0x33AD8F4
	0x033AD7CC LDR X8, [X19]
	0x033AD7D0 MOV X0, X19
	0x033AD7D4 LDR X9, [X8 + 0x398]
	0x033AD7D8 LDR X1, [X8 + 0x3A0]
	0x033AD7DC BLR X9
	0x033AD7E0 CBZ X20, 0x33AD8F4
	0x033AD7E4 LDR X8, [X20]
	0x033AD7E8 MOV X19, X0
	0x033AD7EC MOV X0, X20
	0x033AD7F0 LDR X9, [X8 + 0x398]
	0x033AD7F4 LDR X1, [X8 + 0x3A0]
	0x033AD7F8 BLR X9
	0x033AD7FC CBZ X19, 0x33AD8F4
	0x033AD800 MOV X20, X0
	0x033AD804 CBZ X0, 0x33AD8F4
	0x033AD808 LDR X23, [X19 + 0x18]
	0x033AD80C LDR W8, [X20 + 0x18]
	0x033AD810 CMP W23, W8
	0x033AD814 B.NE 0x33AD8C8
	0x033AD818 CMP W23, 0x1
	0x033AD81C B.LT 0x33AD8D8
	0x033AD820 CBZ W23, 0x33AD8C4
	0x033AD824 ADRP X25, 0xD46000
	0x033AD828 LDR X25, [X25 + 0x6C0]
	0x033AD82C MOV X22, X31
	0x033AD830 MOVZ W24, 0x1
	0x033AD834 ADD X8, X19, X22, 0x3, LSL
	0x033AD838 LDR X0, [X8 + 0x20]
	0x033AD83C CBZ X0, 0x33AD8F4
	0x033AD840 LDR X8, [X0]
	0x033AD844 SUB W21, W24, 0x1
	0x033AD848 LDP X9, X1, [X8 + 0x1D8]
	0x033AD84C BLR X9
	0x033AD850 LDR W8, [X20 + 0x18]
	0x033AD854 CMP W21, W8
	0x033AD858 B.CS 0x33AD8C4
	0x033AD85C ADD X8, X20, X22, 0x3, LSL
	0x033AD860 MOV X21, X0
	0x033AD864 LDR X0, [X8 + 0x20]
	0x033AD868 CBZ X0, 0x33AD8F4
	0x033AD86C LDR X8, [X0]
	0x033AD870 LDP X9, X1, [X8 + 0x1D8]
	0x033AD874 BLR X9
	0x033AD878 LDR X8, [X25]
	0x033AD87C MOV X22, X0
	0x033AD880 LDR W9, [X8 + 0xE0]
	0x033AD884 CBNZ W9, 0x33AD890
	0x033AD888 MOV X0, X8
	0x033AD88C BL 0x1C16DFC
	0x033AD890 MOV X0, X21
	0x033AD894 MOV X1, X22
	0x033AD898 MOV X2, X31
	0x033AD89C BL 0x3395F0C
	0x033AD8A0 TBNZ X0, 0x0, 0x33AD8D0
	0x033AD8A4 CMP W23, W24
	0x033AD8A8 B.EQ 0x33AD8D0
	0x033AD8AC LDR W8, [X19 + 0x18]
	0x033AD8B0 SXTW X22, W24
	0x033AD8B4 CMP W24, W8
	0x033AD8B8 ADD W8, W24, 0x1
	0x033AD8BC MOV W24, W8
	0x033AD8C0 B.CC 0x33AD834
	0x033AD8C4 BL 0x1C16F28
	0x033AD8C8 MOV W8, W31
	0x033AD8CC B 0x33AD8DC
	0x033AD8D0 EOR W8, W0, 0x1
	0x033AD8D4 B 0x33AD8DC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1031000
	008 Move X22, 0xD47000
	009 Move W8, [X23+360]
	010 Move X22, [X22+1728]
	011 Move X21, X2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xD7F000
	019 Move X0, [X0+1336]
	020 Call 0x1C17CF4
	021 Move X0, 0xD70000
	022 Move X0, [X0+1256]
	023 Call 0x1C17CF4
	024 Move X0, 0xD47000
	025 Move X0, [X0+1728]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+360], W8
	029 Move X0, [X22]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Move X1, X19
	036 Move X2, X31
	037 Call Type.op_Equality, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {43}
	042 Move W0, W31
	043 Move X0, [X22]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X20
	049 Move X1, X21
	050 Move X2, X31
	051 Call Type.op_Equality, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {57}
	056 Move W0, 1
	057 Move X0, [X22]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X19
	063 Move X1, X21
	064 Move X2, X31
	065 Call Type.op_Equality, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {71}
	070 Move W0, 2
	071 Compare X20, 0
	072 JumpIfEqual {270}
	073 Move X0, X20
	074 Move X1, X31
	075 Call Type.get_IsByRef, X0
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {89}
	080 Compare X19, 0
	081 JumpIfEqual {270}
	082 Move X0, X19
	083 Move X1, X31
	084 Call Type.get_IsByRef, X0
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {180}
	089 Move X0, X20
	090 Move X1, X31
	091 Call Type.get_IsByRef, X0
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {117}
	096 Compare X19, 0
	097 JumpIfEqual {270}
	098 Move X0, X19
	099 Move X1, X31
	100 Call Type.get_IsByRef, X0
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {117}
	105 Move X8, [X20]
	106 Move X0, X20
	107 Move X9, [X8+1064]
	108 Move X1, [X8+1072]
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move X8, [X19]
	111 Move X20, X0
	112 Move X0, X19
	113 Move X9, [X8+1064]
	114 Move X1, [X8+1072]
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move X19, X0
	117 Move X0, X20
	118 Move X1, X31
	119 Call Type.get_IsByRef, X0
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {152}
	124 Move X8, [X20]
	125 Move X0, X20
	126 Move X9, [X8+1064]
	127 Move X1, [X8+1072]
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Move X8, [X22]
	130 Move X21, X0
	131 Move W9, [X8+224]
	132 Compare W9, 0
	133 JumpIfNotEqual {136}
	134 Move X0, X8
	135 Call 0x1C17DFC
	136 Move X0, X21
	137 Move X1, X19
	138 Move X2, X31
	139 Call Type.op_Equality, X0, X1
	140 Move TEMP, X0
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfEqual {70}
	144 Move X8, [X20]
	145 Move X0, X20
	146 Move X9, [X8+1064]
	147 Move X1, [X8+1072]
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move X20, X0
	150 Compare X20, 0
	151 JumpIfNotEqual {180}
	152 Compare X19, 0
	153 JumpIfEqual {270}
	154 Move X8, [X19]
	155 Move X0, X19
	156 Move X9, [X8+1064]
	157 Move X1, [X8+1072]
	158 NotImplemented "Instruction BLR not yet implemented."
	159 Move X8, [X22]
	160 Move X21, X0
	161 Move W9, [X8+224]
	162 Compare W9, 0
	163 JumpIfNotEqual {166}
	164 Move X0, X8
	165 Call 0x1C17DFC
	166 Move X0, X21
	167 Move X1, X20
	168 Move X2, X31
	169 Call Type.op_Equality, X0, X1
	170 Move TEMP, X0
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfEqual {56}
	174 Move X8, [X19]
	175 Move X0, X19
	176 Move X9, [X8+1064]
	177 Move X1, [X8+1072]
	178 NotImplemented "Instruction BLR not yet implemented."
	179 Move X19, X0
	180 Move X0, X20
	181 Move X1, X31
	182 Call Type.get_IsPrimitive, X0
	183 Move TEMP, X0
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfNotEqual {242}
	187 Compare X19, 0
	188 JumpIfEqual {270}
	189 Move X0, X19
	190 Move X1, X31
	191 Call Type.get_IsPrimitive, X0
	192 Move TEMP, X0
	193 And TEMP, TEMP, 1
	194 Compare TEMP, 1
	195 JumpIfNotEqual {242}
	196 Move X8, 0xD7F000
	197 Move X8, [X8+1336]
	198 Move X0, [X8]
	199 Move W8, [X0+224]
	200 Compare W8, 0
	201 JumpIfNotEqual {203}
	202 Call 0x1C17DFC
	203 Move X21, 0xD70000
	204 Move X21, [X21+1256]
	205 Move X9, [X19]
	206 Move X1, [X21]
	207 Move W10, [X9+304]
	208 Move W8, [X1+304]
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X10, [X9+200]
	211 Subtract X9, X8, 1
	212 Move X10, [X10]
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move X10, [X20]
	215 Move W11, [X10+304]
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move X8, [X10+200]
	218 Move X8, [X8]
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move X0, X19
	221 Move X1, X20
	222 Call DefaultBinder.CanConvertPrimitive, X0, X1
	223 Move X9, [X20]
	224 Move X1, [X21]
	225 Move W10, [X9+304]
	226 Move W8, [X1+304]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move X10, [X9+200]
	229 Subtract X9, X8, 1
	230 Move X10, [X10]
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Move X10, [X19]
	233 Move W11, [X10+304]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move X8, [X10+200]
	236 Move X8, [X8]
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move W21, W0
	239 Move X0, X20
	240 Move X1, X19
	241 Call DefaultBinder.CanConvertPrimitive, X0, X1
	242 Move X8, [X20]
	243 Move X0, X20
	244 Move X1, X19
	245 Move X9, [X8+680]
	246 Move X2, [X8+688]
	247 NotImplemented "Instruction BLR not yet implemented."
	248 Compare X19, 0
	249 JumpIfEqual {270}
	250 Move X8, [X19]
	251 Move W21, W0
	252 Move X0, X19
	253 Move X1, X20
	254 Move X9, [X8+680]
	255 Move X2, [X8+688]
	256 NotImplemented "Instruction BLR not yet implemented."
	257 And W8, W21, 1
	258 And W9, W0, 1
	259 NotImplemented "Instruction CMP not yet implemented."
	260 And W31, W21, 1
	261 Move W8, 1
	262 NotImplemented "Instruction CINC not yet implemented."
	263 Move X20, [X31+32]
	264 Move X19, [X31+40]
	265 Move X22, [X31+16]
	266 Move X21, [X31+24]
	267 Move X30, [X31+48]
	268 Move X23, [X31+56]
	269 Return X0
	270 Call 0x1C17F20
	271 Move X0, X20
	272 Call 0x1C181E0
	273 Move X0, X19
	274 Call 0x1C181E0

Method: System.Int32 FindMostSpecificMethod(System.Reflection.MethodBase m1, System.Int32[] paramOrder1, System.Type paramArrayType1, System.Reflection.MethodBase m2, System.Int32[] paramOrder2, System.Type paramArrayType2, System.Type[] types, System.Object[] args)

Disassembly:
	0x033AC214 LDP X20, X19, [X31 + 0x70]
	0x033AC218 LDP X22, X21, [X31 + 0x60]
	0x033AC21C LDP X24, X23, [X31 + 0x50]
	0x033AC220 LDP X26, X25, [X31 + 0x40]
	0x033AC224 LDP X28, X27, [X31 + 0x30]
	0x033AC228 LDP X29, X30, [X31 + 0x20]
	0x033AC22C ADD X31, X31, 0x80
	0x033AC230 RET
	0x033AC234 BL 0x1C16F28
	0x033AC238 BL 0x1C16F20
	0x033AC23C MOV X0, X24
	0x033AC240 BL 0x1C171E0
	0x033AC244 MOV X0, X25
	0x033AC248 BL 0x1C171E0
	0x033AC24C BL 0x1C16F44
	0x033AC250 MOV X1, X31
	0x033AC254 BL 0x1C16DEC
	0x033AC258 ADRP X0, 0xD7F000
	0x033AC25C LDR X0, [X0 + 0xDB0]
	0x033AC260 BL 0x1C16D08
	0x033AC264 MOV X1, X31
	0x033AC268 BL 0x33BDD84
	0x033AC26C MOV X19, X0
	0x033AC270 ADRP X0, 0xD4F000
	0x033AC274 LDR X0, [X0 + 0x578]
	0x033AC278 BL 0x1C16D08
	0x033AC27C BL 0x1C16F10
	0x033AC280 MOV X20, X0
	0x033AC284 ADRP X0, 0xD6F000
	0x033AC288 LDR X0, [X0 + 0x778]
	0x033AC28C BL 0x1C16D08
	0x033AC290 MOV X2, X0
	0x033AC294 MOV X0, X20
	0x033AC298 MOV X1, X19
	0x033AC29C MOV X3, X31
	0x033AC2A0 BL 0x330E16C
	0x033AC2A4 ADRP X0, 0xD7F000
	0x033AC2A8 LDR X0, [X0 + 0xE08]
	0x033AC2AC BL 0x1C16D08
	0x033AC2B0 MOV X1, X0
	0x033AC2B4 MOV X0, X20
	0x033AC2B8 BL 0x1C16DEC
	0x033AC2BC ADRP X0, 0xD4C000
	0x033AC2C0 LDR X0, [X0 + 0x528]
	0x033AC2C4 BL 0x1C16D08
	0x033AC2C8 BL 0x1C16F10
	0x033AC2CC MOV X19, X0
	0x033AC2D0 ADRP X0, 0xD7F000
	0x033AC2D4 LDR X0, [X0 + 0xE10]
	0x033AC2D8 BL 0x1C16D08
	0x033AC2DC MOV X1, X0
	0x033AC2E0 MOV X0, X19
	0x033AC2E4 MOV X2, X31
	0x033AC2E8 BL 0x330E100
	0x033AC2EC ADRP X0, 0xD7F000
	0x033AC2F0 LDR X0, [X0 + 0xE08]
	0x033AC2F4 BL 0x1C16D08
	0x033AC2F8 MOV X1, X0
	0x033AC2FC MOV X0, X19
	0x033AC300 BL 0x1C16DEC
	0x033AC304 MOV X0, X22
	0x033AC308 MOV X1, X23
	0x033AC30C BL 0x1C171E0
	0x033AC310 MOV X0, X23
	0x033AC314 BL 0x1C171E0
	0x033AC318 STP X30, X23, [X31 - 0x30]!
	0x033AC31C STP X22, X21, [X31 + 0x10]
	0x033AC320 STP X20, X19, [X31 + 0x20]
	0x033AC324 ADRP X21, 0x1031000
	0x033AC328 LDRB W8, [X21 + 0x171]
	0x033AC32C MOV X19, X1
	0x033AC330 MOV X20, X0
	0x033AC334 TBNZ X8, 0x0, 0x33AC370
	0x033AC338 ADRP X0, 0xD70000
	0x033AC33C LDR X0, [X0 + 0xF18]
	0x033AC340 BL 0x1C16CF4
	0x033AC344 ADRP X0, 0xD70000
	0x033AC348 LDR X0, [X0 + 0x4E8]
	0x033AC34C BL 0x1C16CF4
	0x033AC350 ADRP X0, 0xD47000
	0x033AC354 LDR X0, [X0 + 0x6C0]
	0x033AC358 BL 0x1C16CF4
	0x033AC35C ADRP X0, 0xD70000
	0x033AC360 LDR X0, [X0 + 0xF28]
	0x033AC364 BL 0x1C16CF4
	0x033AC368 MOVZ W8, 0x1
	0x033AC36C STRB W8, [X21 + 0x171]
	0x033AC370 CBZ X20, 0x33AC538
	0x033AC374 LDR X8, [X20]
	0x033AC378 MOV X0, X20
	0x033AC37C LDR X9, [X8 + 0x588]
	0x033AC380 LDR X1, [X8 + 0x590]
	0x033AC384 BLR X9
	0x033AC388 TBZ X0, 0x0, 0x33AC394
	0x033AC38C MOV W0, W31
	0x033AC390 B 0x33AC528

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X27, 0x1032000
	015 Move W8, [X27+361]
	016 Move X21, X7
	017 Move X22, X6
	018 Move X23, X5
	019 Move X24, X4
	020 Move X19, X3
	021 Move X25, X2
	022 Move X26, X1
	023 Move X20, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0xD80000
	029 Move X0, [X0+1336]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X27+361], W8
	033 Compare X20, 0
	034 JumpIfEqual {120}
	035 Move X8, [X20]
	036 Move X0, X20
	037 Move X9, [X8+920]
	038 Move X1, [X8+928]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Compare X19, 0
	041 JumpIfEqual {120}
	042 Move X8, [X19]
	043 Move X29, 0xD80000
	044 Move X27, X0
	045 Move X0, X19
	046 Move X9, [X8+920]
	047 Move X1, [X8+928]
	048 Move X29, [X29+1336]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X8, [X29]
	051 Move X28, X0
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Move X0, X27
	058 Move X1, X26
	059 Move X2, X25
	060 Move X3, X28
	061 Move X4, X24
	062 Move X5, X23
	063 Move X6, X22
	064 Move X7, X21
	065 Call DefaultBinder.FindMostSpecific, X0, X1, X2, X3, X4, X5, X6, X7
	066 Move W21, W0
	067 Compare W0, 0
	068 JumpIfNotEqual {103}
	069 Move X0, [X29]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X0, X20
	075 Move X1, X19
	076 Call DefaultBinder.CompareMethodSigAndName, X0, X1
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {103}
	081 Move X8, [X20]
	082 Move X0, X20
	083 Move X9, [X8+440]
	084 Move X1, [X8+448]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X8, [X29]
	087 Move X20, X0
	088 Move W9, [X8+224]
	089 Compare W9, 0
	090 JumpIfNotEqual {93}
	091 Move X0, X8
	092 Call 0x1C17DFC
	093 Move X0, X20
	094 Call DefaultBinder.GetHierarchyDepth, X0
	095 Move X8, [X19]
	096 Move W20, W0
	097 Move X0, X19
	098 Move X9, [X8+440]
	099 Move X1, [X8+448]
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Call DefaultBinder.GetHierarchyDepth, X0
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move W0, W21
	104 Move X20, [X31+96]
	105 Move X19, [X31+104]
	106 Move X22, [X31+80]
	107 Move X21, [X31+88]
	108 Move X24, [X31+64]
	109 Move X23, [X31+72]
	110 Move X26, [X31+48]
	111 Move X25, [X31+56]
	112 Move X28, [X31+32]
	113 Move X27, [X31+40]
	114 Move X29, [X31+16]
	115 Move X30, [X31+24]
	116 Add X31, X31, 112
	117 Return X0
	118 Move W8, 1
	119 NotImplemented "Instruction CINC not yet implemented."
	120 Call 0x1C17F20

Method: System.Int32 FindMostSpecificField(System.Reflection.FieldInfo cur1, System.Reflection.FieldInfo cur2)

Disassembly:
	0x033AC830 LDRB W11, [X10 + 0x130]
	0x033AC834 CMP W11, W8
	0x033AC838 B.CC 0x33AC8D0
	0x033AC83C LDR X8, [X10 + 0xC8]
	0x033AC840 LDR X8, [X8, X9, LSL #3]
	0x033AC844 CMP X8, X1
	0x033AC848 B.NE 0x33AC8D0
	0x033AC84C MOV W21, W0
	0x033AC850 MOV X0, X20
	0x033AC854 MOV X1, X19
	0x033AC858 BL 0x33AC318
	0x033AC85C B 0x33AC898
	0x033AC860 LDR X8, [X20]
	0x033AC864 MOV X0, X20
	0x033AC868 MOV X1, X19
	0x033AC86C LDR X9, [X8 + 0x2A8]
	0x033AC870 LDR X2, [X8 + 0x2B0]
	0x033AC874 BLR X9
	0x033AC878 CBZ X19, 0x33AC8C4
	0x033AC87C LDR X8, [X19]
	0x033AC880 MOV W21, W0
	0x033AC884 MOV X0, X19
	0x033AC888 MOV X1, X20
	0x033AC88C LDR X9, [X8 + 0x2A8]
	0x033AC890 LDR X2, [X8 + 0x2B0]
	0x033AC894 BLR X9
	0x033AC898 AND W8, W21, 0x1
	0x033AC89C AND W9, W0, 0x1
	0x033AC8A0 CMP W9, W8
	0x033AC8A4 B.EQ 0x33AC5B8
	0x033AC8A8 ANDS W31, W21, 0x1
	0x033AC8AC MOVZ W8, 0x1
	0x033AC8B0 CINC W0, W8, NE
	0x033AC8B4 LDP X20, X19, [X31 + 0x20]
	0x033AC8B8 LDP X22, X21, [X31 + 0x10]
	0x033AC8BC LDP X30, X23, [X31], #0x30
	0x033AC8C0 RET
	0x033AC8C4 BL 0x1C16F20
	0x033AC8C8 MOV X0, X20
	0x033AC8CC BL 0x1C171E0
	0x033AC8D0 MOV X0, X19
	0x033AC8D4 BL 0x1C171E0
	0x033AC8D8 SUB X31, X31, 0x90
	0x033AC8DC STP X29, X30, [X31 + 0x30]
	0x033AC8E0 STP X28, X27, [X31 + 0x40]
	0x033AC8E4 STP X26, X25, [X31 + 0x50]
	0x033AC8E8 STP X24, X23, [X31 + 0x60]
	0x033AC8EC STP X22, X21, [X31 + 0x70]
	0x033AC8F0 STP X20, X19, [X31 + 0x80]
	0x033AC8F4 ADRP X25, 0x1031000
	0x033AC8F8 ADRP X27, 0xD47000
	0x033AC8FC LDRB W8, [X25 + 0x167]
	0x033AC900 LDR X27, [X27 + 0x6C0]
	0x033AC904 MOV X22, X7
	0x033AC908 MOV X21, X6
	0x033AC90C MOV X29, X5
	0x033AC910 MOV X24, X4
	0x033AC914 MOV X19, X3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1032000
	006 Move W8, [X21+362]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD80000
	014 Move X0, [X0+1336]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+362], W8
	018 Compare X20, 0
	019 JumpIfEqual {73}
	020 Move X8, [X20]
	021 Move X0, X20
	022 Move X9, [X8+424]
	023 Move X1, [X8+432]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Compare X19, 0
	026 JumpIfEqual {73}
	027 Move X8, [X19]
	028 Move X21, X0
	029 Move X0, X19
	030 Move X9, [X8+424]
	031 Move X1, [X8+432]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move X1, X0
	034 Move X0, X21
	035 Move X2, X31
	036 Call String.op_Equality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {65}
	041 Move X8, [X20]
	042 Move X0, X20
	043 Move X9, [X8+440]
	044 Move X1, [X8+448]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move X8, 0xD80000
	047 Move X8, [X8+1336]
	048 Move X20, X0
	049 Move X8, [X8]
	050 Move W9, [X8+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {55}
	053 Move X0, X8
	054 Call 0x1C17DFC
	055 Move X0, X20
	056 Call DefaultBinder.GetHierarchyDepth, X0
	057 Move X8, [X19]
	058 Move W20, W0
	059 Move X0, X19
	060 Move X9, [X8+440]
	061 Move X1, [X8+448]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Call DefaultBinder.GetHierarchyDepth, X0
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move W0, W31
	066 Move W8, 1
	067 NotImplemented "Instruction CINC not yet implemented."
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Return X0
	073 Call 0x1C17F20

Method: System.Int32 FindMostSpecificProperty(System.Reflection.PropertyInfo cur1, System.Reflection.PropertyInfo cur2)

Disassembly:
	0x033ADD28 ADD X28, X21, 0x20
	0x033ADD2C LDR X0, [X28, X26, LSL #3]
	0x033ADD30 CBZ X0, 0x33AE15C
	0x033ADD34 LDR X8, [X0]
	0x033ADD38 LDP X9, X1, [X8 + 0x1D8]
	0x033ADD3C BLR X9
	0x033ADD40 LDR W8, [X19 + 0x18]
	0x033ADD44 CMP W26, W8
	0x033ADD48 B.CS 0x33AE1E0
	0x033ADD4C LDR W8, [X21 + 0x18]
	0x033ADD50 CMP W26, W8
	0x033ADD54 B.CS 0x33AE1E0
	0x033ADD58 MOV X22, X0
	0x033ADD5C LDR X0, [X24, X26, LSL #3]
	0x033ADD60 LDR X1, [X28, X26, LSL #3]
	0x033ADD64 MOV X2, X31
	0x033ADD68 BL 0x32D1BF8
	0x033ADD6C TBNZ X0, 0x0, 0x33ADF2C
	0x033ADD70 LDR X0, [X29]
	0x033ADD74 ADRP X9, 0xD50000
	0x033ADD78 LDR W8, [X0 + 0xE0]
	0x033ADD7C LDR X9, [X9 + 0x968]
	0x033ADD80 LDR X23, [X9]
	0x033ADD84 CBNZ W8, 0x33ADD8C
	0x033ADD88 BL 0x1C16DFC
	0x033ADD8C MOV X0, X23
	0x033ADD90 MOV X1, X31
	0x033ADD94 BL 0x338C698
	0x033ADD98 MOV X1, X0
	0x033ADD9C MOV X0, X22
	0x033ADDA0 MOV X2, X31
	0x033ADDA4 BL 0x3395194
	0x033ADDA8 TBNZ X0, 0x0, 0x33ADF2C
	0x033ADDAC LDR W8, [X19 + 0x18]
	0x033ADDB0 CMP W26, W8
	0x033ADDB4 B.CS 0x33AE1E0
	0x033ADDB8 LDR X23, [X24, X26, LSL #3]
	0x033ADDBC CBZ X23, 0x33ADE74
	0x033ADDC0 ADRP X8, 0xD79000
	0x033ADDC4 LDR X9, [X23]
	0x033ADDC8 LDR X8, [X8 + 0xB0]
	0x033ADDCC LDRB W11, [X9 + 0x130]
	0x033ADDD0 LDR X8, [X8]
	0x033ADDD4 LDRB W10, [X8 + 0x130]
	0x033ADDD8 CMP W11, W10
	0x033ADDDC B.CC 0x33ADE74
	0x033ADDE0 LDR X9, [X9 + 0xC8]
	0x033ADDE4 ADD X9, X9, X10, 0x3, LSL
	0x033ADDE8 LDUR X9, [X9 - 0x8]
	0x033ADDEC CMP X9, X8
	0x033ADDF0 B.NE 0x33ADE74
	0x033ADDF4 LDR W8, [X20 + 0x18]
	0x033ADDF8 CMP W27, W8
	0x033ADDFC B.CS 0x33AE1E0
	0x033ADE00 LDR X1, [X25]
	0x033ADE04 CBZ X1, 0x33ADF54
	0x033ADE08 ADRP X8, 0xD77000
	0x033ADE0C LDR X9, [X1]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1031000
	006 Move W8, [X21+363]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD7F000
	014 Move X0, [X0+1336]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+363], W8
	018 Compare X20, 0
	019 JumpIfEqual {73}
	020 Move X8, [X20]
	021 Move X0, X20
	022 Move X9, [X8+424]
	023 Move X1, [X8+432]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Compare X19, 0
	026 JumpIfEqual {73}
	027 Move X8, [X19]
	028 Move X21, X0
	029 Move X0, X19
	030 Move X9, [X8+424]
	031 Move X1, [X8+432]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move X1, X0
	034 Move X0, X21
	035 Move X2, X31
	036 Call String.op_Equality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {65}
	041 Move X8, [X20]
	042 Move X0, X20
	043 Move X9, [X8+440]
	044 Move X1, [X8+448]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move X8, 0xD7F000
	047 Move X8, [X8+1336]
	048 Move X20, X0
	049 Move X8, [X8]
	050 Move W9, [X8+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {55}
	053 Move X0, X8
	054 Call 0x1C17DFC
	055 Move X0, X20
	056 Call DefaultBinder.GetHierarchyDepth, X0
	057 Move X8, [X19]
	058 Move W20, W0
	059 Move X0, X19
	060 Move X9, [X8+440]
	061 Move X1, [X8+448]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Call DefaultBinder.GetHierarchyDepth, X0
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move W0, W31
	066 Move W8, 1
	067 NotImplemented "Instruction CINC not yet implemented."
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Return X0
	073 Call 0x1C17F20

Method: System.Boolean CompareMethodSigAndName(System.Reflection.MethodBase m1, System.Reflection.MethodBase m2)

Disassembly:
	0x033AE790 BL 0x1C16CF4
	0x033AE794 ADRP X0, 0xD49000
	0x033AE798 LDR X0, [X0 + 0x628]
	0x033AE79C BL 0x1C16CF4
	0x033AE7A0 ADRP X0, 0xD45000
	0x033AE7A4 LDR X0, [X0 + 0x758]
	0x033AE7A8 BL 0x1C16CF4
	0x033AE7AC ADRP X0, 0xD47000
	0x033AE7B0 LDR X0, [X0 + 0xA60]
	0x033AE7B4 BL 0x1C16CF4
	0x033AE7B8 ADRP X0, 0xD6E000
	0x033AE7BC LDR X0, [X0 + 0x6B0]
	0x033AE7C0 BL 0x1C16CF4
	0x033AE7C4 ADRP X0, 0xD4A000
	0x033AE7C8 LDR X0, [X0 + 0x658]
	0x033AE7CC BL 0x1C16CF4
	0x033AE7D0 ADRP X0, 0xD4D000
	0x033AE7D4 LDR X0, [X0 + 0x720]
	0x033AE7D8 BL 0x1C16CF4
	0x033AE7DC ADRP X0, 0xD46000
	0x033AE7E0 LDR X0, [X0 + 0x758]
	0x033AE7E4 BL 0x1C16CF4
	0x033AE7E8 ADRP X0, 0xD77000
	0x033AE7EC LDR X0, [X0 + 0x630]
	0x033AE7F0 BL 0x1C16CF4
	0x033AE7F4 ADRP X0, 0xD72000
	0x033AE7F8 LDR X0, [X0 + 0xBA8]
	0x033AE7FC BL 0x1C16CF4
	0x033AE800 ADRP X0, 0xD7B000
	0x033AE804 LDR X0, [X0 + 0xB00]
	0x033AE808 BL 0x1C16CF4
	0x033AE80C ADRP X0, 0xD7D000
	0x033AE810 LDR X0, [X0 + 0xE78]
	0x033AE814 BL 0x1C16CF4
	0x033AE818 MOVZ W8, 0x1
	0x033AE81C STRB W8, [X21 + 0x17D]
	0x033AE820 LDR X0, [X20]
	0x033AE824 STRB W31, [X31 + 0x2C]
	0x033AE828 STRB W31, [X31 + 0x28]
	0x033AE82C STRB W31, [X31 + 0x24]
	0x033AE830 STRH W31, [X31 + 0x20]
	0x033AE834 STRH W31, [X31 + 0x1C]
	0x033AE838 STRH W31, [X31 + 0x18]
	0x033AE83C STP X31, X31, [X31 + 0x8]
	0x033AE840 STR X31, [X31]
	0x033AE844 LDR W8, [X0 + 0xE0]
	0x033AE848 CBNZ W8, 0x33AE850
	0x033AE84C BL 0x1C16DFC
	0x033AE850 MOV X0, X19
	0x033AE854 MOV X1, X31
	0x033AE858 BL 0x331C89C
	0x033AE85C SUB W8, W0, 0x3
	0x033AE860 CMP W8, 0x9
	0x033AE864 B.HI 0x33AEB9C
	0x033AE868 ADRP X9, 0xFFFFFFFFFD7E8000
	0x033AE86C ADD X9, X9, 0x898
	0x033AE870 ADR X10, 0x10
	0x033AE874 LDRB W11, [X9, X8, LSL]
	0x033AE878 ADD X10, X10, X11, 0x2, LSL
	0x033AE87C BR X10
	0x033AE880 LDR X0, [X20]
	0x033AE884 LDR W8, [X0 + 0xE0]
	0x033AE888 CBNZ W8, 0x33AE890
	0x033AE88C BL 0x1C16DFC
	0x033AE890 CBZ X19, 0x33AEB90
	0x033AE894 ADRP X8, 0xD45000
	0x033AE898 LDR X8, [X8 + 0xB58]
	0x033AE89C LDR X9, [X19]
	0x033AE8A0 LDR X1, [X8]
	0x033AE8A4 LDR X8, [X9 + 0x40]
	0x033AE8A8 LDR X9, [X1 + 0x40]
	0x033AE8AC CMP X8, X9
	0x033AE8B0 B.NE 0x33AEB94
	0x033AE8B4 MOV X0, X19
	0x033AE8B8 BL 0x1C16E08
	0x033AE8BC LDRB W0, [X0]
	0x033AE8C0 MOV X1, X31
	0x033AE8C4 BL 0x33181E0
	0x033AE8C8 ADRP X8, 0xD72000
	0x033AE8CC LDR X8, [X8 + 0xBA8]
	0x033AE8D0 STRB W0, [X31 + 0x24]
	0x033AE8D4 ADD X0, X31, 0x24
	0x033AE8D8 LDR X1, [X8]
	0x033AE8DC B 0x33AE9AC
	0x033AE8E0 CBZ X19, 0x33AEB90
	0x033AE8E4 ADRP X8, 0xD47000
	0x033AE8E8 LDR X8, [X8 + 0x170]
	0x033AE8EC LDR X9, [X19]
	0x033AE8F0 LDR X1, [X8]
	0x033AE8F4 LDR X8, [X9 + 0x40]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x1030000
	010 Move W8, [X21+364]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xD46000
	018 Move X0, [X0+1728]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+364], W8
	022 Compare X19, 0
	023 JumpIfEqual {107}
	024 Move X8, [X19]
	025 Move X0, X19
	026 Move X9, [X8+920]
	027 Move X1, [X8+928]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Compare X20, 0
	030 JumpIfEqual {107}
	031 Move X8, [X20]
	032 Move X19, X0
	033 Move X0, X20
	034 Move X9, [X8+920]
	035 Move X1, [X8+928]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Compare X19, 0
	038 JumpIfEqual {107}
	039 Move X20, X0
	040 Compare X0, 0
	041 JumpIfEqual {107}
	042 Move X23, [X19+24]
	043 Move W8, [X20+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Compare W23, 0
	047 JumpIfEqual {93}
	048 Move X25, 0xD46000
	049 Move X25, [X25+1728]
	050 Move X22, X31
	051 Move W24, 1
	052 Add X8, X19, X22
	053 Move X0, [X8+32]
	054 Compare X0, 0
	055 JumpIfEqual {107}
	056 Move X8, [X0]
	057 Subtract W21, W24, 1
	058 Move X9, [X8+472]
	059 Move X1, [X8+480]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move W8, [X20+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Add X8, X20, X22
	064 Move X21, X0
	065 Move X0, [X8+32]
	066 Compare X0, 0
	067 JumpIfEqual {107}
	068 Move X8, [X0]
	069 Move X9, [X8+472]
	070 Move X1, [X8+480]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X8, [X25]
	073 Move X22, X0
	074 Move W9, [X8+224]
	075 Compare W9, 0
	076 JumpIfNotEqual {79}
	077 Move X0, X8
	078 Call 0x1C17DFC
	079 Move X0, X21
	080 Move X1, X22
	081 Move X2, X31
	082 Call Type.op_Inequality, X0, X1
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {95}
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move W8, [X19+24]
	089 Move X22, W24
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Add W8, W24, 1
	092 Move W24, W8
	093 Call 0x1C17F28
	094 Move W8, W31
	095 Xor W8, W0, 1
	096 Move W8, 1
	097 Move X20, [X31+48]
	098 Move X19, [X31+56]
	099 Move X22, [X31+32]
	100 Move X21, [X31+40]
	101 Move X24, [X31+16]
	102 Move X23, [X31+24]
	103 And W0, W8, 1
	104 Move X30, [X31+64]
	105 Move X25, [X31+72]
	106 Return X0
	107 Call 0x1C17F20

Method: System.Int32 GetHierarchyDepth(System.Type t)

Disassembly:
	0x033AE8F8 LDR X9, [X1 + 0x40]
	0x033AE8FC CMP X8, X9
	0x033AE900 B.NE 0x33AEB94
	0x033AE904 MOV X0, X19
	0x033AE908 BL 0x1C16E08
	0x033AE90C ADRP X9, 0xD7B000
	0x033AE910 LDRH W8, [X0]
	0x033AE914 LDR X9, [X9 + 0xB00]
	0x033AE918 ADD X0, X31, 0x18
	0x033AE91C STRH W8, [X31 + 0x18]
	0x033AE920 B 0x33AEA40
	0x033AE924 CBZ X19, 0x33AEB90
	0x033AE928 ADRP X8, 0xD6E000
	0x033AE92C LDR X8, [X8 + 0x6B0]
	0x033AE930 LDR X9, [X19]
	0x033AE934 LDR X1, [X8]
	0x033AE938 LDR X8, [X9 + 0x40]
	0x033AE93C LDR X9, [X1 + 0x40]
	0x033AE940 CMP X8, X9
	0x033AE944 B.NE 0x33AEB94
	0x033AE948 MOV X0, X19
	0x033AE94C BL 0x1C16E08
	0x033AE950 ADRP X9, 0xD72000
	0x033AE954 LDRB W8, [X0]
	0x033AE958 LDR X9, [X9 + 0xBA8]
	0x033AE95C ADD X0, X31, 0x2C
	0x033AE960 STRB W8, [X31 + 0x2C]
	0x033AE964 B 0x33AE9A8
	0x033AE968 CBZ X19, 0x33AEB90
	0x033AE96C ADRP X8, 0xD46000
	0x033AE970 LDR X8, [X8 + 0x9D8]
	0x033AE974 LDR X9, [X19]
	0x033AE978 LDR X1, [X8]
	0x033AE97C LDR X8, [X9 + 0x40]
	0x033AE980 LDR X9, [X1 + 0x40]
	0x033AE984 CMP X8, X9
	0x033AE988 B.NE 0x33AEB94

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1030000
	006 Move W8, [X20+365]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xD46000
	013 Move X0, [X0+1728]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+365], W8
	017 Move X21, 0xD46000
	018 Move X21, [X21+1728]
	019 Move W20, W31
	020 Compare X19, 0
	021 JumpIfEqual {49}
	022 Move X8, [X19]
	023 Move X0, X19
	024 Move X9, [X8+2072]
	025 Move X1, [X8+2080]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X8, [X21]
	028 Move X19, X0
	029 Move W9, [X8+224]
	030 Compare W9, 0
	031 JumpIfNotEqual {34}
	032 Move X0, X8
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Move X2, X31
	037 Add W20, W20, 1
	038 Call Type.op_Inequality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {20}
	043 Move W0, W20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0
	049 Call 0x1C17F20

Method: System.Reflection.MethodBase FindMostDerivedNewSlotMeth(System.Reflection.MethodBase[] match, System.Int32 cMatches)

Disassembly:
	0x033AE3B0 MOVZ W8, 0x1
	0x033AE3B4 STRB W8, [X21 + 0x177]
	0x033AE3B8 LDR X0, [X22]
	0x033AE3BC MOVZ W1, 0x13
	0x033AE3C0 BL 0x1C16D6C
	0x033AE3C4 LDR X1, [X19]
	0x033AE3C8 MOV X2, X31
	0x033AE3CC MOV X19, X0
	0x033AE3D0 BL 0x32C5BD8
	0x033AE3D4 LDR X8, [X20]
	0x033AE3D8 LDP X22, X21, [X31 + 0x10]
	0x033AE3DC LDR X8, [X8 + 0xB8]
	0x033AE3E0 STR X19, [X8]
	0x033AE3E4 LDP X20, X19, [X31 + 0x20]
	0x033AE3E8 LDR X30, [X31], #0x30
	0x033AE3EC RET
	0x033AE3F0 STR X30, [X31 - 0x20]!
	0x033AE3F4 STP X20, X19, [X31 + 0x10]
	0x033AE3F8 ADRP X19, 0x102F000
	0x033AE3FC ADRP X20, 0xD7D000
	0x033AE400 LDRB W8, [X19 + 0x178]
	0x033AE404 LDR X20, [X20 + 0xE00]
	0x033AE408 TBNZ X8, 0x0, 0x33AE420
	0x033AE40C ADRP X0, 0xD7D000
	0x033AE410 LDR X0, [X0 + 0xE00]
	0x033AE414 BL 0x1C16CF4
	0x033AE418 MOVZ W8, 0x1
	0x033AE41C STRB W8, [X19 + 0x178]
	0x033AE420 LDR X0, [X20]
	0x033AE424 BL 0x1C16F10
	0x033AE428 MOV X1, X31
	0x033AE42C MOV X19, X0
	0x033AE430 BL 0x33BDD8C
	0x033AE434 LDR X8, [X20]
	0x033AE438 LDR X8, [X8 + 0xB8]
	0x033AE43C STR X19, [X8]
	0x033AE440 LDP X20, X19, [X31 + 0x10]
	0x033AE444 LDR X30, [X31], #0x20
	0x033AE448 RET
	0x033AE44C MOV X1, X31
	0x033AE450 B 0x33BDD8C
	0x033AE454 STP X30, X21, [X31 - 0x20]!
	0x033AE458 STP X20, X19, [X31 + 0x10]
	0x033AE45C ADRP X20, 0x102F000
	0x033AE460 ADRP X21, 0xD45000
	0x033AE464 LDRB W8, [X20 + 0x179]
	0x033AE468 LDR X21, [X21 + 0x6C0]
	0x033AE46C MOV X19, X1
	0x033AE470 TBNZ X8, 0x0, 0x33AE488
	0x033AE474 ADRP X0, 0xD45000
	0x033AE478 LDR X0, [X0 + 0x6C0]
	0x033AE47C BL 0x1C16CF4
	0x033AE480 MOVZ W8, 0x1
	0x033AE484 STRB W8, [X20 + 0x179]
	0x033AE488 LDR X0, [X21]
	0x033AE48C LDR W8, [X0 + 0xE0]
	0x033AE490 CBNZ W8, 0x33AE498
	0x033AE494 BL 0x1C16DFC
	0x033AE498 MOV X0, X19
	0x033AE49C LDP X20, X19, [X31 + 0x10]
	0x033AE4A0 MOV X1, X31
	0x033AE4A4 MOV X2, X31
	0x033AE4A8 LDP X30, X21, [X31], #0x20
	0x033AE4AC B 0x3395F0C
	0x033AE4B0 MOV X1, X31
	0x033AE4B4 B 0x33BDD8C
	0x033AE4B8 STR X30, [X31 - 0x20]!
	0x033AE4BC STP X20, X19, [X31 + 0x10]
	0x033AE4C0 ADRP X19, 0x102F000
	0x033AE4C4 ADRP X20, 0xD47000
	0x033AE4C8 LDRB W8, [X19 + 0x17A]
	0x033AE4CC LDR X20, [X20 + 0x278]
	0x033AE4D0 TBNZ X8, 0x0, 0x33AE4E8
	0x033AE4D4 ADRP X0, 0xD47000
	0x033AE4D8 LDR X0, [X0 + 0x278]
	0x033AE4DC BL 0x1C16CF4
	0x033AE4E0 MOVZ W8, 0x1
	0x033AE4E4 STRB W8, [X19 + 0x17A]
	0x033AE4E8 LDR X8, [X20]
	0x033AE4EC LDP X20, X19, [X31 + 0x10]
	0x033AE4F0 LDR X8, [X8 + 0xB8]
	0x033AE4F4 LDR X0, [X8]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x1030000
	011 Move W8, [X21+366]
	012 Move W19, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xD7E000
	019 Move X0, [X0+1336]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+366], W8
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Compare X20, 0
	025 JumpIfEqual {71}
	026 Move X24, 0xD7E000
	027 Move X24, [X24+1336]
	028 Move W25, W31
	029 Move X21, X31
	030 Move W23, W31
	031 Move W8, [X20+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Add X26, X20, W23
	034 Add X26, X26, 32
	035 Move X0, [X26]
	036 Compare X0, 0
	037 JumpIfEqual {71}
	038 Move X8, [X0]
	039 Move X9, [X8+440]
	040 Move X1, [X8+448]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move X8, [X24]
	043 Move X22, X0
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move X0, X22
	050 Call DefaultBinder.GetHierarchyDepth, X0
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W8, [X20+24]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X21, [X26]
	055 Move W25, W0
	056 Add W23, W23, 1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X21, X31
	059 Move X0, X21
	060 Move X20, [X31+64]
	061 Move X19, [X31+72]
	062 Move X22, [X31+48]
	063 Move X21, [X31+56]
	064 Move X24, [X31+32]
	065 Move X23, [X31+40]
	066 Move X26, [X31+16]
	067 Move X25, [X31+24]
	068 Move X30, [X31+80]
	069 Return X0
	070 Call 0x1C17F28
	071 Call 0x1C17F20
	072 Move X0, 0xD78000
	073 Move X0, [X0+3040]
	074 Call 0x1C17D08
	075 Move X1, X31
	076 Call Environment.GetResourceString, X0
	077 Move X19, X0
	078 Move X0, 0xD78000
	079 Move X0, [X0+1952]
	080 Call 0x1C17D08
	081 Call 0x1C17F10
	082 Move X1, X19
	083 Move X2, X31
	084 Move X20, X0
	085 Call AmbiguousMatchException..ctor, X0, X1
	086 Move X0, 0xD7E000
	087 Move X0, [X0+3632]
	088 Call 0x1C17D08
	089 Move X1, X0
	090 Move X0, X20
	091 Call 0x1C17DEC

Method: System.Void ReorderParams(System.Int32[] paramOrder, System.Object[] vars)

Disassembly:
	0x033AC0C4 LDR X0, [X28]
	0x033AC0C8 CBZ X0, 0x33AC238
	0x033AC0CC LDR X8, [X0]
	0x033AC0D0 LDR X9, [X8 + 0x258]
	0x033AC0D4 LDR X1, [X8 + 0x260]
	0x033AC0D8 BLR X9
	0x033AC0DC LDR W8, [X21 + 0x18]
	0x033AC0E0 CMP W26, W8
	0x033AC0E4 B.CS 0x33AC234
	0x033AC0E8 MOV X22, X0
	0x033AC0EC LDR X0, [X29]
	0x033AC0F0 CBZ X0, 0x33AC238
	0x033AC0F4 LDR X8, [X0]
	0x033AC0F8 LDR X9, [X8 + 0x258]
	0x033AC0FC LDR X1, [X8 + 0x260]
	0x033AC100 BLR X9
	0x033AC104 ADRP X8, 0xD7F000
	0x033AC108 LDR X8, [X8 + 0x538]
	0x033AC10C MOV X24, X0
	0x033AC110 LDR X8, [X8]
	0x033AC114 LDR W9, [X8 + 0xE0]
	0x033AC118 CBNZ W9, 0x33AC124
	0x033AC11C MOV X0, X8
	0x033AC120 BL 0x1C16DFC
	0x033AC124 MOV X0, X22
	0x033AC128 MOV X1, X23
	0x033AC12C MOV X2, X31
	0x033AC130 MOV X3, X24
	0x033AC134 MOV X4, X23
	0x033AC138 MOV X5, X31
	0x033AC13C MOV X6, X19
	0x033AC140 MOV X7, X31
	0x033AC144 BL 0x33AC8D8
	0x033AC148 CBNZ W0, 0x33AC198
	0x033AC14C LDR W8, [X21 + 0x18]
	0x033AC150 CMP W20, W8
	0x033AC154 B.CS 0x33AC234
	0x033AC158 CMP W26, W8
	0x033AC15C B.CS 0x33AC234
	0x033AC160 ADRP X8, 0xD7F000
	0x033AC164 LDR X8, [X8 + 0x538]
	0x033AC168 LDR X22, [X28]
	0x033AC16C LDR X24, [X29]
	0x033AC170 LDR X0, [X8]
	0x033AC174 LDR W8, [X0 + 0xE0]
	0x033AC178 CBNZ W8, 0x33AC180
	0x033AC17C BL 0x1C16DFC
	0x033AC180 MOV X0, X22
	0x033AC184 MOV X1, X24
	0x033AC188 BL 0x33ACD28
	0x033AC18C CMP W0, 0x0
	0x033AC190 CSET W8, EQ
	0x033AC194 ORR W25, W25, W8, 0x0
	0x033AC198 LDR W9, [X31 + 0x1C]
	0x033AC19C CMP W0, 0x2
	0x033AC1A0 CSET W8, NE
	0x033AC1A4 CSEL W20, W26, W20, EQ
	0x033AC1A8 ADD W26, W26, 0x1
	0x033AC1AC CMP W9, W26
	0x033AC1B0 AND W25, W25, W8, 0x0
	0x033AC1B4 B.NE 0x33AC02C
	0x033AC1B8 CBZ W25, 0x33AC1FC
	0x033AC1BC ADRP X0, 0xD79000
	0x033AC1C0 LDR X0, [X0 + 0xBE0]
	0x033AC1C4 BL 0x1C16D08
	0x033AC1C8 MOV X1, X31
	0x033AC1CC BL 0x33BDD84
	0x033AC1D0 MOV X19, X0
	0x033AC1D4 ADRP X0, 0xD79000
	0x033AC1D8 LDR X0, [X0 + 0x7A0]
	0x033AC1DC BL 0x1C16D08
	0x033AC1E0 BL 0x1C16F10
	0x033AC1E4 MOV X1, X19
	0x033AC1E8 MOV X2, X31
	0x033AC1EC MOV X20, X0
	0x033AC1F0 BL 0x32CC544
	0x033AC1F4 B 0x33AC2A4
	0x033AC1F8 MOV W20, W31
	0x033AC1FC LDR W8, [X21 + 0x18]
	0x033AC200 CMP W20, W8
	0x033AC204 B.CS 0x33AC234
	0x033AC208 ADD X8, X21, W20, 0x3, SXTW
	0x033AC20C ADD X8, X8, 0x20
	0x033AC210 LDR X0, [X8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x1032000
	010 Move W8, [X21+367]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xD48000
	018 Move X0, [X0+2512]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+367], W8
	022 Compare X19, 0
	023 JumpIfEqual {90}
	024 Move X8, 0xD48000
	025 Move X8, [X8+2512]
	026 Move W1, [X19+24]
	027 Move X0, [X8]
	028 Call 0x1C17D6C
	029 Move X8, [X19+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X21, X0
	032 Move X23, X31
	033 And X8, X8, 0
	034 Add X24, X19, 32
	035 Add X25, X0, 32
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Compare X21, 0
	038 JumpIfEqual {90}
	039 Move X22, [X24]
	040 Compare X22, 0
	041 JumpIfEqual {48}
	042 Move X8, [X21]
	043 Move X0, X22
	044 Move X1, [X8+64]
	045 Call 0x1C17E00
	046 Compare X0, 0
	047 JumpIfEqual {91}
	048 Move W8, [X21+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move [X25], X22
	051 Move W8, [X19+24]
	052 Add X23, X23, 1
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Compare X20, 0
	056 JumpIfEqual {90}
	057 Move X23, X31
	058 Add X24, X19, 32
	059 Add X25, X20, 32
	060 Move W9, [X20+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction LDRSW not yet implemented."
	063 Move W10, [X21+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Add X9, X21, X9
	066 Move X22, [X9+32]
	067 Compare X22, 0
	068 JumpIfEqual {76}
	069 Move X8, [X19]
	070 Move X0, X22
	071 Move X1, [X8+64]
	072 Call 0x1C17E00
	073 Compare X0, 0
	074 JumpIfEqual {91}
	075 Move X8, [X19+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move [X24], X22
	078 Add X23, X23, 1
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X20, [X31+48]
	081 Move X19, [X31+56]
	082 Move X22, [X31+32]
	083 Move X21, [X31+40]
	084 Move X24, [X31+16]
	085 Move X23, [X31+24]
	086 Move X30, [X31+64]
	087 Move X25, [X31+72]
	088 Return 
	089 Call 0x1C17F28
	090 Call 0x1C17F20
	091 Call 0x1C17F44
	092 Move X1, X31
	093 Call 0x1C17DEC

Method: System.Boolean CreateParamOrder(System.Int32[] paramOrder, System.Reflection.ParameterInfo[] pars, System.String[] names)

Disassembly:
	0x033ABD3C SXTW X25, W26
	0x033ABD40 CMP W26, W8
	0x033ABD44 ADD W8, W26, 0x1
	0x033ABD48 MOV W26, W8
	0x033ABD4C B.CC 0x33ABB38
	0x033ABD50 B 0x33AC234
	0x033ABD54 MOV W22, W31
	0x033ABD58 CMP W22, W20
	0x033ABD5C B.NE 0x33ABF8C
	0x033ABD60 LDR X0, [X29]
	0x033ABD64 LDR W8, [X0 + 0xE0]
	0x033ABD68 CBNZ W8, 0x33ABD70
	0x033ABD6C BL 0x1C16DFC
	0x033ABD70 LDR X23, [X31 + 0x10]
	0x033ABD74 MOV X1, X31
	0x033ABD78 MOV X2, X31
	0x033ABD7C MOV X0, X23
	0x033ABD80 BL 0x3395F0C
	0x033ABD84 TBZ X0, 0x0, 0x33ABF38
	0x033ABD88 LDR W8, [X21 + 0x18]
	0x033ABD8C CMP X28, X8
	0x033ABD90 B.CS 0x33AC234
	0x033ABD94 ADD X22, X21, X28, 0x3, LSL
	0x033ABD98 LDR X0, [X22 + 0x20]!
	0x033ABD9C CBZ X0, 0x33AC238
	0x033ABDA0 LDR X8, [X0]
	0x033ABDA4 LDR X9, [X8 + 0x248]
	0x033ABDA8 LDR X1, [X8 + 0x250]
	0x033ABDAC BLR X9
	0x033ABDB0 CBZ X0, 0x33AC238
	0x033ABDB4 MOV X1, X31
	0x033ABDB8 BL 0x3397374
	0x033ABDBC TBZ X0, 0x0, 0x33ABEF8
	0x033ABDC0 CBZ X23, 0x33AC238
	0x033ABDC4 LDR X8, [X23]
	0x033ABDC8 MOV X0, X23
	0x033ABDCC LDR X9, [X8 + 0x328]
	0x033ABDD0 LDR X1, [X8 + 0x330]
	0x033ABDD4 BLR X9
	0x033ABDD8 CBZ X0, 0x33ABF88
	0x033ABDDC ADRP X8, 0xD71000
	0x033ABDE0 LDR X9, [X0]
	0x033ABDE4 LDR X8, [X8 + 0x4E8]
	0x033ABDE8 LDRB W11, [X9 + 0x130]
	0x033ABDEC LDR X8, [X8]
	0x033ABDF0 LDRB W10, [X8 + 0x130]
	0x033ABDF4 CMP W11, W10
	0x033ABDF8 B.CC 0x33ABF88
	0x033ABDFC LDR X9, [X9 + 0xC8]
	0x033ABE00 ADD X9, X9, X10, 0x3, LSL
	0x033ABE04 LDUR X9, [X9 - 0x8]
	0x033ABE08 CMP X9, X8
	0x033ABE0C B.NE 0x33ABF88
	0x033ABE10 LDR X8, [X23]
	0x033ABE14 MOV X0, X23
	0x033ABE18 LDR X9, [X8 + 0x328]
	0x033ABE1C LDR X1, [X8 + 0x330]
	0x033ABE20 BLR X9
	0x033ABE24 LDR W8, [X21 + 0x18]
	0x033ABE28 CMP X28, X8
	0x033ABE2C B.CS 0x33AC234
	0x033ABE30 MOV X23, X0
	0x033ABE34 LDR X0, [X22]
	0x033ABE38 CBZ X0, 0x33AC238
	0x033ABE3C LDR X8, [X0]
	0x033ABE40 LDR X9, [X8 + 0x248]
	0x033ABE44 LDR X1, [X8 + 0x250]
	0x033ABE48 BLR X9
	0x033ABE4C CBZ X0, 0x33AC238
	0x033ABE50 LDR X8, [X0]
	0x033ABE54 LDR X9, [X8 + 0x328]
	0x033ABE58 LDR X1, [X8 + 0x330]
	0x033ABE5C BLR X9
	0x033ABE60 ADRP X8, 0xD80000
	0x033ABE64 LDR X8, [X8 + 0x538]
	0x033ABE68 MOV X24, X0
	0x033ABE6C LDR X8, [X8]
	0x033ABE70 LDR W9, [X8 + 0xE0]
	0x033ABE74 CBNZ W9, 0x33ABE80
	0x033ABE78 MOV X0, X8
	0x033ABE7C BL 0x1C16DFC
	0x033ABE80 ADRP X8, 0xD71000
	0x033ABE84 LDR X8, [X8 + 0x4E8]
	0x033ABE88 LDR X1, [X8]
	0x033ABE8C CBZ X23, 0x33ABEB8
	0x033ABE90 LDR X8, [X23]
	0x033ABE94 LDRB W9, [X1 + 0x130]
	0x033ABE98 LDRB W10, [X8 + 0x130]
	0x033ABE9C CMP W10, W9
	0x033ABEA0 B.CC 0x33AC310
	0x033ABEA4 LDR X8, [X8 + 0xC8]
	0x033ABEA8 ADD X8, X8, X9, 0x3, LSL
	0x033ABEAC LDUR X8, [X8 - 0x8]
	0x033ABEB0 CMP X8, X1
	0x033ABEB4 B.NE 0x33AC310
	0x033ABEB8 CBZ X24, 0x33ABEE4
	0x033ABEBC LDR X8, [X24]
	0x033ABEC0 LDRB W9, [X1 + 0x130]
	0x033ABEC4 LDRB W10, [X8 + 0x130]
	0x033ABEC8 CMP W10, W9
	0x033ABECC B.CC 0x33AC23C
	0x033ABED0 LDR X8, [X8 + 0xC8]
	0x033ABED4 ADD X8, X8, X9, 0x3, LSL
	0x033ABED8 LDUR X8, [X8 - 0x8]
	0x033ABEDC CMP X8, X1
	0x033ABEE0 B.NE 0x33AC23C
	0x033ABEE4 MOV X0, X23
	0x033ABEE8 MOV X1, X24
	0x033ABEEC BL 0x33AC318
	0x033ABEF0 TBNZ X0, 0x0, 0x33ABF38
	0x033ABEF4 B 0x33ABF88
	0x033ABEF8 LDR W8, [X21 + 0x18]
	0x033ABEFC CMP X28, X8
	0x033ABF00 B.CS 0x33AC234
	0x033ABF04 LDR X0, [X22]
	0x033ABF08 CBZ X0, 0x33AC238
	0x033ABF0C LDR X8, [X0]
	0x033ABF10 LDR X9, [X8 + 0x248]
	0x033ABF14 LDR X1, [X8 + 0x250]
	0x033ABF18 BLR X9
	0x033ABF1C CBZ X0, 0x33AC238
	0x033ABF20 LDR X8, [X0]
	0x033ABF24 MOV X1, X23
	0x033ABF28 LDR X9, [X8 + 0x2A8]
	0x033ABF2C LDR X2, [X8 + 0x2B0]
	0x033ABF30 BLR X9
	0x033ABF34 TBZ X0, 0x0, 0x33ABF88
	0x033ABF38 LDR W8, [X21 + 0x18]
	0x033ABF3C CMP X28, X8
	0x033ABF40 B.CS 0x33AC234
	0x033ABF44 ADD X9, X21, X28, 0x3, LSL
	0x033ABF48 LDR X23, [X9 + 0x20]
	0x033ABF4C CBZ X23, 0x33ABF68
	0x033ABF50 LDR X8, [X21]
	0x033ABF54 MOV X0, X23
	0x033ABF58 LDR X1, [X8 + 0x40]
	0x033ABF5C BL 0x1C16E00
	0x033ABF60 CBZ X0, 0x33AC24C
	0x033ABF64 LDR X8, [X21 + 0x18]
	0x033ABF68 LDR W9, [X31 + 0x1C]
	0x033ABF6C CMP W9, W8
	0x033ABF70 B.CS 0x33AC234

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x1033000
	013 Move W8, [X20+368]
	014 Move X21, X2
	015 Move X22, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xD4B000
	022 Move X0, [X0+2488]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+368], W8
	026 Compare X22, 0
	027 JumpIfEqual {148}
	028 Move X8, 0xD4B000
	029 Move X8, [X8+2488]
	030 Move W1, [X22+24]
	031 Move X0, [X8]
	032 Call 0x1C17D6C
	033 Move X8, [X22+24]
	034 Move X20, X0
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Compare X19, 0
	037 JumpIfEqual {148}
	038 Move W10, [X19+24]
	039 Move X9, X31
	040 Move X11, W8
	041 Add X12, X19, 32
	042 Move TEMP, 0
	043 Not TEMP
	044 Move W13, TEMP
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move [X12], W13
	047 Add X9, X9, 1
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Compare X21, 0
	050 JumpIfEqual {148}
	051 Move X9, [X21+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X24, X31
	054 And X9, X9, 0
	055 Move W25, 1
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add X9, X21, X24
	059 Move W26, W31
	060 Add X27, X9, 32
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X28, W26
	063 Add X8, X22, X28
	064 Move X0, [X8+32]
	065 Compare X0, 0
	066 JumpIfEqual {148}
	067 Move X8, [X0]
	068 Move X23, [X27]
	069 Move X9, [X8+456]
	070 Move X1, [X8+464]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Compare X23, 0
	073 JumpIfEqual {148}
	074 Move X1, X0
	075 Move X0, X23
	076 Move X2, X31
	077 Call String.Equals, X0, X1
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {88}
	082 Move X8, [X22+24]
	083 Add W26, W26, 1
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move W9, [X21+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move W26, W31
	088 Compare X19, 0
	089 JumpIfEqual {148}
	090 Move W8, [X19+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Add X8, X19, X28
	093 Move [X8+32], W24
	094 Compare X20, 0
	095 JumpIfEqual {148}
	096 Move W8, [X20+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Add X8, X20, X24
	099 Move [X8+32], W25
	100 Move X8, [X22+24]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move W9, [X21+24]
	103 Add X24, X24, 1
	104 NotImplemented "Instruction CMP not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Compare X19, 0
	107 JumpIfEqual {148}
	108 Move W10, [X19+24]
	109 Move X9, X31
	110 Move W11, W31
	111 Move X12, W8
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Add X13, X19, X9
	114 Add X13, X13, 32
	115 Move W14, [X13]
	116 Add W31, W14, 1
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Compare X20, 0
	119 JumpIfEqual {148}
	120 Move W14, [X20+24]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Add X15, X20, W11
	123 Move W15, [X15+32]
	124 Compare W15, 0
	125 JumpIfEqual {129}
	126 Add W11, W11, 1
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move W11, W8
	129 Move [X13], W11
	130 Add W11, W11, 1
	131 Add X9, X9, 1
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move W0, 1
	134 Move W0, W31
	135 Move X20, [X31+80]
	136 Move X19, [X31+88]
	137 Move X22, [X31+64]
	138 Move X21, [X31+72]
	139 Move X24, [X31+48]
	140 Move X23, [X31+56]
	141 Move X26, [X31+32]
	142 Move X25, [X31+40]
	143 Move X28, [X31+16]
	144 Move X27, [X31+24]
	145 Move X30, [X31+96]
	146 Return X0
	147 Call 0x1C17F28
	148 Call 0x1C17F20

Method: System.Boolean CanConvertPrimitive(System.RuntimeType source, System.RuntimeType target)

Disassembly:
	0x033AD318 RET
	0x033AD31C ADRP X8, 0xD7E000
	0x033AD320 LDR X8, [X8 + 0x538]
	0x033AD324 LDR X0, [X8]
	0x033AD328 LDR W8, [X0 + 0xE0]
	0x033AD32C CBNZ W8, 0x33AD334
	0x033AD330 BL 0x1C16DFC
	0x033AD334 MOV X0, X21
	0x033AD338 MOV W1, W22
	0x033AD33C LDP X20, X19, [X31 + 0x40]
	0x033AD340 LDP X22, X21, [X31 + 0x30]
	0x033AD344 LDP X24, X23, [X31 + 0x20]
	0x033AD348 LDP X26, X25, [X31 + 0x10]
	0x033AD34C LDP X30, X27, [X31], #0x50
	0x033AD350 B 0x33AD3B0
	0x033AD354 BL 0x1C16F20
	0x033AD358 BL 0x1C16F28
	0x033AD35C BL 0x1C16F44
	0x033AD360 MOV X1, X31
	0x033AD364 BL 0x1C16DEC
	0x033AD368 ADRP X0, 0xD4B000
	0x033AD36C LDR X0, [X0 + 0x528]
	0x033AD370 BL 0x1C16D08
	0x033AD374 BL 0x1C16F10
	0x033AD378 MOV X19, X0
	0x033AD37C ADRP X0, 0xD6E000
	0x033AD380 LDR X0, [X0 + 0x778]
	0x033AD384 BL 0x1C16D08
	0x033AD388 MOV X1, X0
	0x033AD38C MOV X0, X19
	0x033AD390 MOV X2, X31
	0x033AD394 BL 0x330E100
	0x033AD398 ADRP X0, 0xD7E000
	0x033AD39C LDR X0, [X0 + 0xE28]
	0x033AD3A0 BL 0x1C16D08
	0x033AD3A4 MOV X1, X0
	0x033AD3A8 MOV X0, X19
	0x033AD3AC BL 0x1C16DEC
	0x033AD3B0 STR X30, [X31 - 0x50]!
	0x033AD3B4 STP X26, X25, [X31 + 0x10]
	0x033AD3B8 STP X24, X23, [X31 + 0x20]
	0x033AD3BC STP X22, X21, [X31 + 0x30]
	0x033AD3C0 STP X20, X19, [X31 + 0x40]
	0x033AD3C4 ADRP X21, 0x1030000
	0x033AD3C8 LDRB W8, [X21 + 0x16E]
	0x033AD3CC MOV W19, W1
	0x033AD3D0 MOV X20, X0
	0x033AD3D4 TBNZ X8, 0x0, 0x33AD3EC
	0x033AD3D8 ADRP X0, 0xD7E000
	0x033AD3DC LDR X0, [X0 + 0x538]
	0x033AD3E0 BL 0x1C16CF4
	0x033AD3E4 MOVZ W8, 0x1
	0x033AD3E8 STRB W8, [X21 + 0x16E]
	0x033AD3EC CMP W19, 0x1
	0x033AD3F0 B.LT 0x33AD480
	0x033AD3F4 CBZ X20, 0x33AD4A4
	0x033AD3F8 ADRP X24, 0xD7E000
	0x033AD3FC LDR X24, [X24 + 0x538]
	0x033AD400 MOV W25, W31
	0x033AD404 MOV X21, X31
	0x033AD408 MOV W23, W31
	0x033AD40C LDR W8, [X20 + 0x18]
	0x033AD410 CMP W23, W8
	0x033AD414 B.CS 0x33AD4A0
	0x033AD418 ADD X26, X20, W23, 0x3, SXTW
	0x033AD41C LDR X0, [X26 + 0x20]!
	0x033AD420 CBZ X0, 0x33AD4A4
	0x033AD424 LDR X8, [X0]
	0x033AD428 LDP X9, X1, [X8 + 0x1B8]
	0x033AD42C BLR X9
	0x033AD430 LDR X8, [X24]
	0x033AD434 MOV X22, X0
	0x033AD438 LDR W9, [X8 + 0xE0]
	0x033AD43C CBNZ W9, 0x33AD448
	0x033AD440 MOV X0, X8
	0x033AD444 BL 0x1C16DFC
	0x033AD448 MOV X0, X22
	0x033AD44C BL 0x33AD8F8
	0x033AD450 CMP W0, W25
	0x033AD454 B.EQ 0x33AD4A8
	0x033AD458 B.LE 0x33AD470
	0x033AD45C LDR W8, [X20 + 0x18]
	0x033AD460 CMP W23, W8
	0x033AD464 B.CS 0x33AD4A0
	0x033AD468 LDR X21, [X26]
	0x033AD46C MOV W25, W0
	0x033AD470 ADD W23, W23, 0x1
	0x033AD474 CMP W19, W23
	0x033AD478 B.NE 0x33AD40C
	0x033AD47C B 0x33AD484
	0x033AD480 MOV X21, X31
	0x033AD484 MOV X0, X21
	0x033AD488 LDP X20, X19, [X31 + 0x40]
	0x033AD48C LDP X22, X21, [X31 + 0x30]
	0x033AD490 LDP X24, X23, [X31 + 0x20]
	0x033AD494 LDP X26, X25, [X31 + 0x10]
	0x033AD498 LDR X30, [X31], #0x50
	0x033AD49C RET
	0x033AD4A0 BL 0x1C16F28
	0x033AD4A4 BL 0x1C16F20
	0x033AD4A8 ADRP X0, 0xD78000
	0x033AD4AC LDR X0, [X0 + 0xBE0]
	0x033AD4B0 BL 0x1C16D08
	0x033AD4B4 MOV X1, X31
	0x033AD4B8 BL 0x33BDD84
	0x033AD4BC MOV X19, X0
	0x033AD4C0 ADRP X0, 0xD78000
	0x033AD4C4 LDR X0, [X0 + 0x7A0]
	0x033AD4C8 BL 0x1C16D08
	0x033AD4CC BL 0x1C16F10
	0x033AD4D0 MOV X1, X19
	0x033AD4D4 MOV X2, X31
	0x033AD4D8 MOV X20, X0
	0x033AD4DC BL 0x32CC544
	0x033AD4E0 ADRP X0, 0xD7E000
	0x033AD4E4 LDR X0, [X0 + 0xE30]
	0x033AD4E8 BL 0x1C16D08
	0x033AD4EC MOV X1, X0
	0x033AD4F0 MOV X0, X20
	0x033AD4F4 BL 0x1C16DEC
	0x033AD4F8 SUB X31, X31, 0x70
	0x033AD4FC STP X29, X30, [X31 + 0x10]
	0x033AD500 STP X28, X27, [X31 + 0x20]
	0x033AD504 STP X26, X25, [X31 + 0x30]
	0x033AD508 STP X24, X23, [X31 + 0x40]
	0x033AD50C STP X22, X21, [X31 + 0x50]
	0x033AD510 STP X20, X19, [X31 + 0x60]
	0x033AD514 ADRP X20, 0x1030000
	0x033AD518 LDRB W8, [X20 + 0x166]
	0x033AD51C MOV X19, X2
	0x033AD520 MOV X21, X0
	0x033AD524 STR X1, [X31 + 0x8]
	0x033AD528 TBNZ X8, 0x0, 0x33AD540
	0x033AD52C ADRP X0, 0xD46000
	0x033AD530 LDR X0, [X0 + 0x6C0]
	0x033AD534 BL 0x1C16CF4
	0x033AD538 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1031000
	008 Move W8, [X21+369]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xD70000
	016 Move X0, [X0+3864]
	017 Call 0x1C17CF4
	018 Move X0, 0xD70000
	019 Move X0, [X0+1256]
	020 Call 0x1C17CF4
	021 Move X0, 0xD47000
	022 Move X0, [X0+1728]
	023 Call 0x1C17CF4
	024 Move X0, 0xD70000
	025 Move X0, [X0+3880]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+369], W8
	029 Compare X20, 0
	030 JumpIfEqual {147}
	031 Move X8, [X20]
	032 Move X0, X20
	033 Move X9, [X8+1416]
	034 Move X1, [X8+1424]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {41}
	040 Move W0, W31
	041 Move X23, 0xD47000
	042 Move X23, [X23+1728]
	043 Move X0, [X23]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X20
	049 Move X1, X31
	050 Call Type.GetTypeCode, X0
	051 Move W21, W0
	052 Move X0, X19
	053 Move X1, X31
	054 Call Type.GetTypeCode, X0
	055 Move W22, W0
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, X20
	058 Move X1, X31
	059 Call Type.get_IsPrimitive, X0
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {65}
	064 Move W0, 1
	065 Subtract W8, W22, 4
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X9, -42033152
	068 Add X9, X9, 2189
	069 NotImplemented "Instruction ADR not yet implemented."
	070 Move W11, [X9]
	071 Add X10, X10, X11
	072 CallNoReturn X10
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X8, 0xD70000
	076 Move X0, [X23]
	077 Move X8, [X8+3864]
	078 Move W9, [X0+224]
	079 Move X21, [X8]
	080 Compare W9, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X0, X21
	084 Move X1, X31
	085 Call Type.GetTypeFromHandle, X0
	086 Move X1, X0
	087 Move X0, X19
	088 Move X2, X31
	089 Call Type.op_Equality, X0, X1
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {113}
	094 Move X8, 0xD70000
	095 Move X0, [X23]
	096 Move X8, [X8+3880]
	097 Move W9, [X0+224]
	098 Move X21, [X8]
	099 Compare W9, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X0, X21
	103 Move X1, X31
	104 Call Type.GetTypeFromHandle, X0
	105 Move X1, X0
	106 Move X0, X19
	107 Move X2, X31
	108 Call Type.op_Equality, X0, X1
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {40}
	113 Move X8, 0xD70000
	114 Move X8, [X8+1256]
	115 Move X0, [X8]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1C17DFC
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Subtract W8, W21, 5
	122 NotImplemented "Instruction CMP not yet implemented."
	123 And W8, W21, 0xFFFFFFFD
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Subtract W8, W21, 4
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Subtract W8, W21, 4
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Subtract W8, W21, 4
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Subtract W8, W21, 4
	132 NotImplemented "Instruction CMP not yet implemented."
	133 And W31, W21, 1
	134 NotImplemented "Instruction CSET not yet implemented."
	135 Subtract W8, W21, 4
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Subtract W8, W21, 4
	138 NotImplemented "Instruction CMP not yet implemented."
	139 NotImplemented "Instruction CSET not yet implemented."
	140 Move X20, [X31+32]
	141 Move X19, [X31+40]
	142 Move X22, [X31+16]
	143 Move X21, [X31+24]
	144 Move X30, [X31+48]
	145 Move X23, [X31+56]
	146 Return X0
	147 Call 0x1C17F20

Method: System.Boolean CanConvertPrimitiveObjectToType(System.Object source, System.RuntimeType type)

Disassembly:
	0x033ABF74 MOV W8, W9
	0x033ABF78 ADD X8, X21, W8, 0x3, SXTW
	0x033ABF7C ADD W9, W9, 0x1
	0x033ABF80 STR X23, [X8 + 0x20]
	0x033ABF84 STR W9, [X31 + 0x1C]
	0x033ABF88 MOV W22, W20
	0x033ABF8C LDR W8, [X21 + 0x18]
	0x033ABF90 ADD X28, X28, 0x1
	0x033ABF94 CMP X28, W8, SXTW
	0x033ABF98 B.LT 0x33ABAE8
	0x033ABF9C B 0x33ABFA4
	0x033ABFA0 STR W31, [X31 + 0x1C]
	0x033ABFA4 LDR W9, [X31 + 0x1C]
	0x033ABFA8 CBZ W9, 0x33ABFC0
	0x033ABFAC CMP W9, 0x1
	0x033ABFB0 B.NE 0x33ABFC8
	0x033ABFB4 CBZ W8, 0x33AC234
	0x033ABFB8 ADD X8, X21, 0x20
	0x033ABFBC B 0x33AC210
	0x033ABFC0 MOV X0, X31
	0x033ABFC4 B 0x33AC214
	0x033ABFC8 ADRP X8, 0xD49000
	0x033ABFCC LDR X8, [X8 + 0xE58]
	0x033ABFD0 MOV W1, W20
	0x033ABFD4 LDR X0, [X8]
	0x033ABFD8 BL 0x1C16D6C
	0x033ABFDC CMP W20, 0x1
	0x033ABFE0 MOV X23, X0
	0x033ABFE4 B.LT 0x33AC014
	0x033ABFE8 CBZ X23, 0x33AC238
	0x033ABFEC LDR W9, [X23 + 0x18]
	0x033ABFF0 MOV X8, X31
	0x033ABFF4 MOV W10, W20
	0x033ABFF8 ADD X11, X23, 0x20
	0x033ABFFC CMP X8, X9
	0x033AC000 B.CS 0x33AC234
	0x033AC004 STR W8, [X11, X8, LSL #2]
	0x033AC008 ADD X8, X8, 0x1
	0x033AC00C CMP X10, X8
	0x033AC010 B.NE 0x33ABFFC
	0x033AC014 LDR W8, [X31 + 0x1C]
	0x033AC018 CMP W8, 0x1
	0x033AC01C B.LE 0x33AC1F8
	0x033AC020 MOV W20, W31
	0x033AC024 MOV W25, W31
	0x033AC028 MOVZ W26, 0x1
	0x033AC02C LDR W8, [X21 + 0x18]
	0x033AC030 CMP W20, W8
	0x033AC034 B.CS 0x33AC234
	0x033AC038 ADD X28, X21, W20, 0x3, SXTW
	0x033AC03C LDR X0, [X28 + 0x20]!
	0x033AC040 CBZ X0, 0x33AC238
	0x033AC044 LDR X8, [X0]
	0x033AC048 LDR X9, [X8 + 0x248]
	0x033AC04C LDR X1, [X8 + 0x250]
	0x033AC050 BLR X9
	0x033AC054 LDR W8, [X21 + 0x18]
	0x033AC058 CMP W26, W8
	0x033AC05C B.CS 0x33AC234
	0x033AC060 ADD X29, X21, W26, 0x3, SXTW
	0x033AC064 MOV X22, X0
	0x033AC068 LDR X0, [X29 + 0x20]!
	0x033AC06C CBZ X0, 0x33AC238
	0x033AC070 LDR X8, [X0]
	0x033AC074 LDR X9, [X8 + 0x248]
	0x033AC078 LDR X1, [X8 + 0x250]
	0x033AC07C BLR X9
	0x033AC080 ADRP X8, 0xD7F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1033000
	006 Move W8, [X21+370]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xD81000
	014 Move X0, [X0+1336]
	015 Call 0x1C17CF4
	016 Move X0, 0xD72000
	017 Move X0, [X0+1256]
	018 Call 0x1C17CF4
	019 Move X0, 0xD49000
	020 Move X0, [X0+1728]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+370], W8
	024 Compare X20, 0
	025 JumpIfEqual {46}
	026 Move X21, 0xD49000
	027 Move X21, [X21+1728]
	028 Move X0, X20
	029 Move X1, X31
	030 Call "il2cpp_vm_object_is_inst", X0
	031 Move X8, [X21]
	032 Move X20, X0
	033 Move W9, [X8+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move X0, X20
	039 Move X1, X19
	040 Move X2, X31
	041 Call Type.op_Equality, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {52}
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move W0, 1
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return X0
	052 Move X8, 0xD80000
	053 Move X8, [X8+1336]
	054 Move X0, [X8]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfEqual {60}
	058 Compare X20, 0
	059 JumpIfNotEqual {63}
	060 Call 0x1C17DFC
	061 Compare X20, 0
	062 JumpIfEqual {74}
	063 Move X9, 0xD71000
	064 Move X9, [X9+1256]
	065 Move X8, [X20]
	066 Move X1, [X9]
	067 Move W10, [X8+304]
	068 Move W9, [X1+304]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X8, [X8+200]
	071 Add X8, X8, X9
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X0, X20
	075 Move X1, X19
	076 Move X20, [X31+16]
	077 Move X19, [X31+24]
	078 Move X30, [X31+32]
	079 Move X21, [X31+40]
	080 Call DefaultBinder.CanConvertPrimitive, X0, X1
	081 Return X0
	082 Move X0, X20
	083 Call 0x1C181E0

Method: System.Boolean CompareMethodSig(System.Reflection.MethodBase m1, System.Reflection.MethodBase m2)

Disassembly:
	0x033AE98C MOV X0, X19
	0x033AE990 BL 0x1C16E08
	0x033AE994 ADRP X9, 0xD72000
	0x033AE998 LDRB W8, [X0]
	0x033AE99C LDR X9, [X9 + 0xBA8]
	0x033AE9A0 ADD X0, X31, 0x28
	0x033AE9A4 STRB W8, [X31 + 0x28]
	0x033AE9A8 LDR X1, [X9]
	0x033AE9AC MOV X2, X31
	0x033AE9B0 MOV X3, X31
	0x033AE9B4 BL 0x3319D9C
	0x033AE9B8 B 0x33AEB80
	0x033AE9BC CBZ X19, 0x33AEB90
	0x033AE9C0 ADRP X8, 0xD49000
	0x033AE9C4 LDR X8, [X8 + 0x628]
	0x033AE9C8 LDR X9, [X19]
	0x033AE9CC LDR X1, [X8]
	0x033AE9D0 LDR X8, [X9 + 0x40]
	0x033AE9D4 LDR X9, [X1 + 0x40]
	0x033AE9D8 CMP X8, X9
	0x033AE9DC B.NE 0x33AEB94
	0x033AE9E0 MOV X0, X19
	0x033AE9E4 BL 0x1C16E08
	0x033AE9E8 ADRP X9, 0xD7B000
	0x033AE9EC LDRH W8, [X0]
	0x033AE9F0 LDR X9, [X9 + 0xB00]
	0x033AE9F4 ADD X0, X31, 0x20
	0x033AE9F8 STRH W8, [X31 + 0x20]
	0x033AE9FC B 0x33AEA40
	0x033AEA00 CBZ X19, 0x33AEB90
	0x033AEA04 ADRP X8, 0xD4A000
	0x033AEA08 LDR X8, [X8 + 0x658]
	0x033AEA0C LDR X9, [X19]
	0x033AEA10 LDR X1, [X8]
	0x033AEA14 LDR X8, [X9 + 0x40]
	0x033AEA18 LDR X9, [X1 + 0x40]
	0x033AEA1C CMP X8, X9
	0x033AEA20 B.NE 0x33AEB94
	0x033AEA24 MOV X0, X19
	0x033AEA28 BL 0x1C16E08
	0x033AEA2C ADRP X9, 0xD7B000
	0x033AEA30 LDRH W8, [X0]
	0x033AEA34 LDR X9, [X9 + 0xB00]
	0x033AEA38 ADD X0, X31, 0x1C
	0x033AEA3C STRH W8, [X31 + 0x1C]
	0x033AEA40 LDR X1, [X9]
	0x033AEA44 MOV X2, X31
	0x033AEA48 MOV X3, X31
	0x033AEA4C BL 0x3398ECC
	0x033AEA50 B 0x33AEB80
	0x033AEA54 CBZ X19, 0x33AEB90
	0x033AEA58 ADRP X8, 0xD45000
	0x033AEA5C LDR X8, [X8 + 0x758]
	0x033AEA60 LDR X9, [X19]
	0x033AEA64 LDR X1, [X8]
	0x033AEA68 LDR X8, [X9 + 0x40]
	0x033AEA6C LDR X9, [X1 + 0x40]
	0x033AEA70 CMP X8, X9
	0x033AEA74 B.NE 0x33AEB94
	0x033AEA78 MOV X0, X19
	0x033AEA7C BL 0x1C16E08
	0x033AEA80 ADRP X9, 0xD77000
	0x033AEA84 LDR W8, [X0]
	0x033AEA88 LDR X9, [X9 + 0x630]
	0x033AEA8C ADD X0, X31, 0x10
	0x033AEA90 STR W8, [X31 + 0x10]
	0x033AEA94 B 0x33AEAD8
	0x033AEA98 CBZ X19, 0x33AEB90
	0x033AEA9C ADRP X8, 0xD4D000
	0x033AEAA0 LDR X8, [X8 + 0x720]
	0x033AEAA4 LDR X9, [X19]
	0x033AEAA8 LDR X1, [X8]
	0x033AEAAC LDR X8, [X9 + 0x40]
	0x033AEAB0 LDR X9, [X1 + 0x40]
	0x033AEAB4 CMP X8, X9
	0x033AEAB8 B.NE 0x33AEB94
	0x033AEABC MOV X0, X19
	0x033AEAC0 BL 0x1C16E08
	0x033AEAC4 ADRP X9, 0xD77000
	0x033AEAC8 LDR W8, [X0]
	0x033AEACC LDR X9, [X9 + 0x630]
	0x033AEAD0 ADD X0, X31, 0x14
	0x033AEAD4 STR W8, [X31 + 0x14]
	0x033AEAD8 LDR X1, [X9]
	0x033AEADC MOV X2, X31
	0x033AEAE0 MOV X3, X31
	0x033AEAE4 BL 0x3399CE8
	0x033AEAE8 B 0x33AEB80
	0x033AEAEC CBZ X19, 0x33AEB90
	0x033AEAF0 ADRP X8, 0xD47000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x1030000
	010 Move W8, [X21+371]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xD46000
	018 Move X0, [X0+1728]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+371], W8
	022 Compare X19, 0
	023 JumpIfEqual {107}
	024 Move X8, [X19]
	025 Move X0, X19
	026 Move X9, [X8+920]
	027 Move X1, [X8+928]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Compare X20, 0
	030 JumpIfEqual {107}
	031 Move X8, [X20]
	032 Move X19, X0
	033 Move X0, X20
	034 Move X9, [X8+920]
	035 Move X1, [X8+928]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Compare X19, 0
	038 JumpIfEqual {107}
	039 Move X20, X0
	040 Compare X0, 0
	041 JumpIfEqual {107}
	042 Move X23, [X19+24]
	043 Move W8, [X20+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Compare W23, 0
	047 JumpIfEqual {93}
	048 Move X25, 0xD46000
	049 Move X25, [X25+1728]
	050 Move X22, X31
	051 Move W24, 1
	052 Add X8, X19, X22
	053 Move X0, [X8+32]
	054 Compare X0, 0
	055 JumpIfEqual {107}
	056 Move X8, [X0]
	057 Subtract W21, W24, 1
	058 Move X9, [X8+472]
	059 Move X1, [X8+480]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move W8, [X20+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Add X8, X20, X22
	064 Move X21, X0
	065 Move X0, [X8+32]
	066 Compare X0, 0
	067 JumpIfEqual {107}
	068 Move X8, [X0]
	069 Move X9, [X8+472]
	070 Move X1, [X8+480]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X8, [X25]
	073 Move X22, X0
	074 Move W9, [X8+224]
	075 Compare W9, 0
	076 JumpIfNotEqual {79}
	077 Move X0, X8
	078 Call 0x1C17DFC
	079 Move X0, X21
	080 Move X1, X22
	081 Move X2, X31
	082 Call Type.op_Inequality, X0, X1
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {95}
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move W8, [X19+24]
	089 Move X22, W24
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Add W8, W24, 1
	092 Move W24, W8
	093 Call 0x1C17F28
	094 Move W8, W31
	095 Xor W8, W0, 1
	096 Move W8, 1
	097 Move X20, [X31+48]
	098 Move X19, [X31+56]
	099 Move X22, [X31+32]
	100 Move X21, [X31+40]
	101 Move X24, [X31+16]
	102 Move X23, [X31+24]
	103 And W0, W8, 1
	104 Move X30, [X31+64]
	105 Move X25, [X31+72]
	106 Return X0
	107 Call 0x1C17F20

Method: System.Reflection.MethodBase SelectMethod(System.Reflection.BindingFlags bindingAttr, System.Reflection.MethodBase[] match, System.Type[] types, System.Reflection.ParameterModifier[] modifiers)

Disassembly:
	0x033AEAF4 LDR X8, [X8 + 0xA60]
	0x033AEAF8 LDR X9, [X19]
	0x033AEAFC LDR X1, [X8]
	0x033AEB00 LDR X8, [X9 + 0x40]
	0x033AEB04 LDR X9, [X1 + 0x40]
	0x033AEB08 CMP X8, X9
	0x033AEB0C B.NE 0x33AEB94
	0x033AEB10 MOV X0, X19
	0x033AEB14 BL 0x1C16E08
	0x033AEB18 ADRP X9, 0xD7D000
	0x033AEB1C LDR X8, [X0]
	0x033AEB20 LDR X9, [X9 + 0xE78]
	0x033AEB24 ADD X0, X31, 0x0
	0x033AEB28 STR X8, [X31]
	0x033AEB2C B 0x33AEB70
	0x033AEB30 CBZ X19, 0x33AEB90
	0x033AEB34 ADRP X8, 0xD46000
	0x033AEB38 LDR X8, [X8 + 0x758]
	0x033AEB3C LDR X9, [X19]
	0x033AEB40 LDR X1, [X8]
	0x033AEB44 LDR X8, [X9 + 0x40]
	0x033AEB48 LDR X9, [X1 + 0x40]
	0x033AEB4C CMP X8, X9
	0x033AEB50 B.NE 0x33AEB94
	0x033AEB54 MOV X0, X19
	0x033AEB58 BL 0x1C16E08
	0x033AEB5C ADRP X9, 0xD7D000
	0x033AEB60 LDR X8, [X0]
	0x033AEB64 LDR X9, [X9 + 0xE78]
	0x033AEB68 ADD X0, X31, 0x8
	0x033AEB6C STR X8, [X31 + 0x8]
	0x033AEB70 LDR X1, [X9]
	0x033AEB74 MOV X2, X31
	0x033AEB78 MOV X3, X31
	0x033AEB7C BL 0x339AB50
	0x033AEB80 LDP X20, X19, [X31 + 0x40]
	0x033AEB84 LDP X30, X21, [X31 + 0x30]
	0x033AEB88 ADD X31, X31, 0x50
	0x033AEB8C RET
	0x033AEB90 BL 0x1C16F20
	0x033AEB94 MOV X0, X19
	0x033AEB98 BL 0x1C171E0
	0x033AEB9C ADRP X0, 0xD7D000
	0x033AEBA0 LDR X0, [X0 + 0x3C8]
	0x033AEBA4 BL 0x1C16D08
	0x033AEBA8 MOV X1, X31
	0x033AEBAC BL 0x33BDD84
	0x033AEBB0 MOV X19, X0
	0x033AEBB4 ADRP X0, 0xD45000
	0x033AEBB8 LDR X0, [X0 + 0x5B0]
	0x033AEBBC BL 0x1C16D08
	0x033AEBC0 BL 0x1C16F10
	0x033AEBC4 MOV X1, X19
	0x033AEBC8 MOV X2, X31
	0x033AEBCC MOV X20, X0
	0x033AEBD0 BL 0x337DF1C
	0x033AEBD4 ADRP X0, 0xD7D000
	0x033AEBD8 LDR X0, [X0 + 0xE80]
	0x033AEBDC BL 0x1C16D08
	0x033AEBE0 MOV X1, X0
	0x033AEBE4 MOV X0, X20
	0x033AEBE8 BL 0x1C16DEC
	0x033AEBEC STP X30, X23, [X31 - 0x30]!
	0x033AEBF0 STP X22, X21, [X31 + 0x10]
	0x033AEBF4 STP X20, X19, [X31 + 0x20]
	0x033AEBF8 ADRP X23, 0x102F000
	0x033AEBFC ADRP X21, 0xD7D000
	0x033AEC00 ADRP X22, 0xD45000
	0x033AEC04 LDRB W8, [X23 + 0x17E]
	0x033AEC08 LDR X21, [X21 + 0xE88]
	0x033AEC0C LDR X22, [X22 + 0x6C0]
	0x033AEC10 MOV X19, X1
	0x033AEC14 MOV X20, X0
	0x033AEC18 TBNZ X8, 0x0, 0x33AEC48
	0x033AEC1C ADRP X0, 0xD45000
	0x033AEC20 LDR X0, [X0 + 0xDF8]
	0x033AEC24 BL 0x1C16CF4
	0x033AEC28 ADRP X0, 0xD7D000
	0x033AEC2C LDR X0, [X0 + 0xE88]
	0x033AEC30 BL 0x1C16CF4
	0x033AEC34 ADRP X0, 0xD45000
	0x033AEC38 LDR X0, [X0 + 0x6C0]
	0x033AEC3C BL 0x1C16CF4
	0x033AEC40 MOVZ W8, 0x1
	0x033AEC44 STRB W8, [X23 + 0x17E]
	0x033AEC48 LDR X0, [X22]
	0x033AEC4C LDR X21, [X21]
	0x033AEC50 LDR W8, [X0 + 0xE0]
	0x033AEC54 CBNZ W8, 0x33AEC5C
	0x033AEC58 BL 0x1C16DFC
	0x033AEC5C MOV X0, X21
	0x033AEC60 MOV X1, X31
	0x033AEC64 BL 0x338C698
	0x033AEC68 CBZ X20, 0x33AECFC
	0x033AEC6C LDR X8, [X20]
	0x033AEC70 ADRP X21, 0xD45000
	0x033AEC74 MOV X1, X0
	0x033AEC78 MOV X0, X20
	0x033AEC7C LDP X9, X3, [X8 + 0x1E8]
	0x033AEC80 LDR X21, [X21 + 0xDF8]
	0x033AEC84 MOV W2, W31
	0x033AEC88 BLR X9
	0x033AEC8C LDR X8, [X21]
	0x033AEC90 MOV W21, W0
	0x033AEC94 LDR W9, [X8 + 0xE0]
	0x033AEC98 CBNZ W9, 0x33AECA4
	0x033AEC9C MOV X0, X8
	0x033AECA0 BL 0x1C16DFC
	0x033AECA4 MOV X0, X20
	0x033AECA8 TBZ X21, 0x0, 0x33AECC0
	0x033AECAC MOV X1, X19
	0x033AECB0 LDP X20, X19, [X31 + 0x20]
	0x033AECB4 LDP X22, X21, [X31 + 0x10]
	0x033AECB8 LDP X30, X23, [X31], #0x30
	0x033AECBC B 0x33AEDD4
	0x033AECC0 MOV X1, X19
	0x033AECC4 BL 0x33AED00
	0x033AECC8 CBZ X0, 0x33AECDC
	0x033AECCC LDP X20, X19, [X31 + 0x20]
	0x033AECD0 LDP X22, X21, [X31 + 0x10]
	0x033AECD4 LDP X30, X23, [X31], #0x30
	0x033AECD8 RET
	0x033AECDC CBZ X19, 0x33AECFC
	0x033AECE0 LDR X8, [X19]
	0x033AECE4 MOV X0, X19
	0x033AECE8 LDP X20, X19, [X31 + 0x20]
	0x033AECEC LDP X22, X21, [X31 + 0x10]
	0x033AECF0 LDP X2, X1, [X8 + 0x168]
	0x033AECF4 LDP X30, X23, [X31], #0x30
	0x033AECF8 BR X2
	0x033AECFC BL 0x1C16F20
	0x033AED00 STR X30, [X31 - 0x30]!
	0x033AED04 STP X22, X21, [X31 + 0x10]
	0x033AED08 STP X20, X19, [X31 + 0x20]
	0x033AED0C ADRP X21, 0x102F000
	0x033AED10 ADRP X22, 0xD45000
	0x033AED14 LDRB W8, [X21 + 0x187]
	0x033AED18 LDR X22, [X22 + 0x6C0]
	0x033AED1C MOV X19, X1
	0x033AED20 MOV X20, X0
	0x033AED24 TBNZ X8, 0x0, 0x33AED3C
	0x033AED28 ADRP X0, 0xD45000
	0x033AED2C LDR X0, [X0 + 0x6C0]
	0x033AED30 BL 0x1C16CF4
	0x033AED34 MOVZ W8, 0x1
	0x033AED38 STRB W8, [X21 + 0x187]
	0x033AED3C LDR X0, [X22]
	0x033AED40 LDR W8, [X0 + 0xE0]
	0x033AED44 CBNZ W8, 0x33AED4C
	0x033AED48 BL 0x1C16DFC
	0x033AED4C MOV X0, X20
	0x033AED50 MOV X1, X31
	0x033AED54 MOV X2, X31
	0x033AED58 BL 0x3395194
	0x033AED5C TBNZ X0, 0x0, 0x33AED88
	0x033AED60 CBZ X20, 0x33AEDD0
	0x033AED64 LDR X8, [X20]
	0x033AED68 MOV X0, X20
	0x033AED6C MOV X1, X19
	0x033AED70 LDP X20, X19, [X31 + 0x20]
	0x033AED74 LDR X3, [X8 + 0x258]
	0x033AED78 LDR X2, [X8 + 0x260]
	0x033AED7C LDP X22, X21, [X31 + 0x10]
	0x033AED80 LDR X30, [X31], #0x30
	0x033AED84 BR X3
	0x033AED88 ADRP X0, 0xD4A000
	0x033AED8C LDR X0, [X0 + 0x528]
	0x033AED90 BL 0x1C16D08
	0x033AED94 BL 0x1C16F10
	0x033AED98 MOV X19, X0
	0x033AED9C ADRP X0, 0xD7D000
	0x033AEDA0 LDR X0, [X0 + 0x3C0]
	0x033AEDA4 BL 0x1C16D08
	0x033AEDA8 MOV X1, X0
	0x033AEDAC MOV X0, X19
	0x033AEDB0 MOV X2, X31
	0x033AEDB4 BL 0x330E100
	0x033AEDB8 ADRP X0, 0xD7D000
	0x033AEDBC LDR X0, [X0 + 0xE90]
	0x033AEDC0 BL 0x1C16D08
	0x033AEDC4 MOV X1, X0
	0x033AEDC8 MOV X0, X19
	0x033AEDCC BL 0x1C16DEC
	0x033AEDD0 BL 0x1C16F20
	0x033AEDD4 STR X30, [X31 - 0x60]!
	0x033AEDD8 STP X28, X27, [X31 + 0x10]
	0x033AEDDC STP X26, X25, [X31 + 0x20]
	0x033AEDE0 STP X24, X23, [X31 + 0x30]
	0x033AEDE4 STP X22, X21, [X31 + 0x40]
	0x033AEDE8 STP X20, X19, [X31 + 0x50]
	0x033AEDEC ADRP X20, 0x102F000
	0x033AEDF0 ADRP X22, 0xD45000
	0x033AEDF4 LDRB W8, [X20 + 0x17F]
	0x033AEDF8 LDR X22, [X22 + 0xDF8]
	0x033AEDFC MOV X19, X1
	0x033AEE00 MOV X21, X0
	0x033AEE04 TBNZ X8, 0x0, 0x33AEE40
	0x033AEE08 ADRP X0, 0xD45000
	0x033AEE0C LDR X0, [X0 + 0xDF8]
	0x033AEE10 BL 0x1C16CF4
	0x033AEE14 ADRP X0, 0xD45000
	0x033AEE18 LDR X0, [X0 + 0x8F0]
	0x033AEE1C BL 0x1C16CF4
	0x033AEE20 ADRP X0, 0xD45000
	0x033AEE24 LDR X0, [X0 + 0x838]
	0x033AEE28 BL 0x1C16CF4
	0x033AEE2C ADRP X0, 0xD47000
	0x033AEE30 LDR X0, [X0 + 0x4B0]
	0x033AEE34 BL 0x1C16CF4
	0x033AEE38 MOVZ W8, 0x1
	0x033AEE3C STRB W8, [X20 + 0x17F]
	0x033AEE40 LDR X0, [X22]
	0x033AEE44 LDR W8, [X0 + 0xE0]
	0x033AEE48 CBNZ W8, 0x33AEE50
	0x033AEE4C BL 0x1C16DFC
	0x033AEE50 MOV X0, X19
	0x033AEE54 BL 0x33AEFD8
	0x033AEE58 MOV X20, X0
	0x033AEE5C MOVZ W1, 0x1
	0x033AEE60 MOV X0, X21
	0x033AEE64 BL 0x33AE5C4
	0x033AEE68 CBZ X0, 0x33AEFD4
	0x033AEE6C LDR X23, [X0 + 0x10]
	0x033AEE70 CBZ X23, 0x33AEFD4
	0x033AEE74 ADRP X8, 0xD45000
	0x033AEE78 LDR X8, [X8 + 0x8F0]
	0x033AEE7C LDR X22, [X0 + 0x18]
	0x033AEE80 LDR W24, [X23 + 0x18]
	0x033AEE84 LDR X0, [X8]
	0x033AEE88 BL 0x1C16F10
	0x033AEE8C MOV X1, X31
	0x033AEE90 MOV X21, X0
	0x033AEE94 BL 0x3231AC4
	0x033AEE98 SUBS W24, W24, 0x1
	0x033AEE9C MOV X25, X20
	0x033AEEA0 B.MI 0x33AEF3C
	0x033AEEA4 ADRP X26, 0xD45000
	0x033AEEA8 LDR X26, [X26 + 0x838]
	0x033AEEAC MOVZ W8, 0x1
	0x033AEEB0 MOV X25, X20
	0x033AEEB4 LDR W9, [X23 + 0x18]
	0x033AEEB8 CBNZ W24, 0x33AEEC8
	0x033AEEBC CBZ W9, 0x33AEFD0
	0x033AEEC0 LDR X10, [X23 + 0x20]
	0x033AEEC4 CBZ X10, 0x33AEF3C
	0x033AEEC8 CMP W24, W9
	0x033AEECC B.CS 0x33AEFD0
	0x033AEED0 MOV W27, W24
	0x033AEED4 ADD X9, X23, X27, 0x3, LSL
	0x033AEED8 LDR X28, [X9 + 0x20]
	0x033AEEDC BICS X31, X28, X25, 0x0
	0x033AEEE0 B.NE 0x33AEF34
	0x033AEEE4 TBNZ X8, 0x0, 0x33AEF00
	0x033AEEE8 CBZ X21, 0x33AEFD4
	0x033AEEEC LDR X2, [X26]
	0x033AEEF0 MOV X0, X21
	0x033AEEF4 MOV W1, W31
	0x033AEEF8 MOV X3, X31
	0x033AEEFC BL 0x3234078
	0x033AEF00 CBZ X22, 0x33AEFD4
	0x033AEF04 LDR W8, [X22 + 0x18]
	0x033AEF08 CMP W24, W8
	0x033AEF0C B.CS 0x33AEFD0
	0x033AEF10 CBZ X21, 0x33AEFD4
	0x033AEF14 ADD X8, X22, X27, 0x3, LSL
	0x033AEF18 LDR X2, [X8 + 0x20]
	0x033AEF1C MOV X0, X21
	0x033AEF20 MOV W1, W31
	0x033AEF24 MOV X3, X31
	0x033AEF28 SUB X25, X25, X28
	0x033AEF2C BL 0x3234078
	0x033AEF30 MOV W8, W31
	0x033AEF34 SUBS W24, W24, 0x1
	0x033AEF38 B.PL 0x33AEEB4
	0x033AEF3C CBZ X25, 0x33AEF50
	0x033AEF40 CBZ X19, 0x33AEFD4
	0x033AEF44 LDR X8, [X19]
	0x033AEF48 MOV X0, X19
	0x033AEF4C B 0x33AEF60
	0x033AEF50 CBZ X20, 0x33AEF80
	0x033AEF54 CBZ X21, 0x33AEFD4
	0x033AEF58 LDR X8, [X21]
	0x033AEF5C MOV X0, X21
	0x033AEF60 LDP X2, X1, [X8 + 0x168]
	0x033AEF64 LDP X20, X19, [X31 + 0x50]
	0x033AEF68 LDP X22, X21, [X31 + 0x40]
	0x033AEF6C LDP X24, X23, [X31 + 0x30]
	0x033AEF70 LDP X26, X25, [X31 + 0x20]
	0x033AEF74 LDP X28, X27, [X31 + 0x10]
	0x033AEF78 LDR X30, [X31], #0x60
	0x033AEF7C BR X2
	0x033AEF80 LDR X8, [X23 + 0x18]
	0x033AEF84 CBZ X8, 0x33AEF94
	0x033AEF88 CBZ W8, 0x33AEFD0
	0x033AEF8C LDR X8, [X23 + 0x20]
	0x033AEF90 CBZ X8, 0x33AEFA4
	0x033AEF94 ADRP X8, 0xD47000
	0x033AEF98 LDR X8, [X8 + 0x4B0]
	0x033AEF9C LDR X0, [X8]
	0x033AEFA0 B 0x33AEFB4
	0x033AEFA4 CBZ X22, 0x33AEFD4
	0x033AEFA8 LDR W8, [X22 + 0x18]
	0x033AEFAC CBZ W8, 0x33AEFD0
	0x033AEFB0 LDR X0, [X22 + 0x20]
	0x033AEFB4 LDP X20, X19, [X31 + 0x50]
	0x033AEFB8 LDP X22, X21, [X31 + 0x40]
	0x033AEFBC LDP X24, X23, [X31 + 0x30]
	0x033AEFC0 LDP X26, X25, [X31 + 0x20]
	0x033AEFC4 LDP X28, X27, [X31 + 0x10]
	0x033AEFC8 LDR X30, [X31], #0x60
	0x033AEFCC RET
	0x033AEFD0 BL 0x1C16F28
	0x033AEFD4 BL 0x1C16F20
	0x033AEFD8 STP X30, X21, [X31 - 0x20]!
	0x033AEFDC STP X20, X19, [X31 + 0x10]
	0x033AEFE0 ADRP X21, 0x102F000
	0x033AEFE4 ADRP X20, 0xD4E000
	0x033AEFE8 LDRB W8, [X21 + 0x180]
	0x033AEFEC LDR X20, [X20 + 0x9E8]
	0x033AEFF0 MOV X19, X0
	0x033AEFF4 TBNZ X8, 0x0, 0x33AF018
	0x033AEFF8 ADRP X0, 0xD4E000
	0x033AEFFC LDR X0, [X0 + 0x9E8]
	0x033AF000 BL 0x1C16CF4
	0x033AF004 ADRP X0, 0xD46000
	0x033AF008 LDR X0, [X0 + 0xC48]
	0x033AF00C BL 0x1C16CF4
	0x033AF010 MOVZ W8, 0x1
	0x033AF014 STRB W8, [X21 + 0x180]
	0x033AF018 LDR X0, [X20]
	0x033AF01C LDR W8, [X0 + 0xE0]
	0x033AF020 CBNZ W8, 0x33AF028
	0x033AF024 BL 0x1C16DFC
	0x033AF028 MOV X0, X19
	0x033AF02C MOV X1, X31
	0x033AF030 BL 0x331C89C
	0x033AF034 CMP W0, 0xC
	0x033AF038 B.HI 0x33AF0F4
	0x033AF03C MOVZ W8, 0x1
	0x033AF040 LSLV W9, W8, W0
	0x033AF044 MOVZ W8, 0x1558
	0x033AF048 ANDS W31, W9, W8, 0x0
	0x033AF04C ADRP X8, 0xD46000
	0x033AF050 LDR X8, [X8 + 0xC48]
	0x033AF054 B.EQ 0x33AF0A0
	0x033AF058 LDR X0, [X8]
	0x033AF05C LDR W8, [X0 + 0xE0]
	0x033AF060 CBNZ W8, 0x33AF068
	0x033AF064 BL 0x1C16DFC
	0x033AF068 MOV X0, X31
	0x033AF06C BL 0x3338524
	0x033AF070 LDR X8, [X20]
	0x033AF074 MOV X20, X0
	0x033AF078 LDR W9, [X8 + 0xE0]
	0x033AF07C CBNZ W9, 0x33AF088
	0x033AF080 MOV X0, X8
	0x033AF084 BL 0x1C16DFC
	0x033AF088 MOV X0, X19
	0x033AF08C MOV X1, X20
	0x033AF090 LDP X20, X19, [X31 + 0x10]
	0x033AF094 MOV X2, X31
	0x033AF098 LDP X30, X21, [X31], #0x20
	0x033AF09C B 0x3321110
	0x033AF0A0 MOVZ W10, 0xAA0
	0x033AF0A4 ANDS W31, W9, W10, 0x0
	0x033AF0A8 B.EQ 0x33AF0F4
	0x033AF0AC LDR X0, [X8]
	0x033AF0B0 LDR W8, [X0 + 0xE0]
	0x033AF0B4 CBNZ W8, 0x33AF0BC
	0x033AF0B8 BL 0x1C16DFC
	0x033AF0BC MOV X0, X31
	0x033AF0C0 BL 0x3338524
	0x033AF0C4 LDR X8, [X20]
	0x033AF0C8 MOV X20, X0
	0x033AF0CC LDR W9, [X8 + 0xE0]
	0x033AF0D0 CBNZ W9, 0x33AF0DC
	0x033AF0D4 MOV X0, X8
	0x033AF0D8 BL 0x1C16DFC
	0x033AF0DC MOV X0, X19
	0x033AF0E0 MOV X1, X20
	0x033AF0E4 LDP X20, X19, [X31 + 0x10]
	0x033AF0E8 MOV X2, X31
	0x033AF0EC LDP X30, X21, [X31], #0x20
	0x033AF0F0 B 0x3320C2C
	0x033AF0F4 ADRP X0, 0xD7C000
	0x033AF0F8 LDR X0, [X0 + 0x3C8]
	0x033AF0FC BL 0x1C16D08
	0x033AF100 MOV X1, X31
	0x033AF104 BL 0x33BDD84
	0x033AF108 MOV X19, X0
	0x033AF10C ADRP X0, 0xD44000
	0x033AF110 LDR X0, [X0 + 0x5B0]
	0x033AF114 BL 0x1C16D08
	0x033AF118 BL 0x1C16F10
	0x033AF11C MOV X1, X19
	0x033AF120 MOV X2, X31
	0x033AF124 MOV X20, X0
	0x033AF128 BL 0x337DF1C
	0x033AF12C ADRP X0, 0xD7C000
	0x033AF130 LDR X0, [X0 + 0xE98]
	0x033AF134 BL 0x1C16D08
	0x033AF138 MOV X1, X0
	0x033AF13C MOV X0, X20
	0x033AF140 BL 0x1C16DEC
	0x033AF144 B 0x1C879C8
	0x033AF148 B 0x1C87B74
	0x033AF14C B 0x1C87B50
	0x033AF150 STR X30, [X31 - 0x30]!
	0x033AF154 STP X22, X21, [X31 + 0x10]
	0x033AF158 STP X20, X19, [X31 + 0x20]
	0x033AF15C ADRP X21, 0x102E000
	0x033AF160 ADRP X22, 0xD44000
	0x033AF164 LDRB W8, [X21 + 0x181]
	0x033AF168 LDR X22, [X22 + 0xDF8]
	0x033AF16C MOV X19, X1
	0x033AF170 MOV X20, X0
	0x033AF174 TBNZ X8, 0x0, 0x33AF18C
	0x033AF178 ADRP X0, 0xD44000
	0x033AF17C LDR X0, [X0 + 0xDF8]
	0x033AF180 BL 0x1C16CF4
	0x033AF184 MOVZ W8, 0x1
	0x033AF188 STRB W8, [X21 + 0x181]
	0x033AF18C LDR X0, [X22]
	0x033AF190 LDR W8, [X0 + 0xE0]
	0x033AF194 CBNZ W8, 0x33AF19C
	0x033AF198 BL 0x1C16DFC
	0x033AF19C MOV X0, X20
	0x033AF1A0 MOV X1, X19
	0x033AF1A4 LDP X20, X19, [X31 + 0x20]
	0x033AF1A8 LDP X22, X21, [X31 + 0x10]
	0x033AF1AC MOV W2, W31
	0x033AF1B0 LDR X30, [X31], #0x30
	0x033AF1B4 B 0x33AF1B8
	0x033AF1B8 SUB X31, X31, 0x60
	0x033AF1BC STP X30, X23, [X31 + 0x30]
	0x033AF1C0 STP X22, X21, [X31 + 0x40]
	0x033AF1C4 STP X20, X19, [X31 + 0x50]
	0x033AF1C8 ADRP X23, 0x102E000
	0x033AF1CC ADRP X22, 0xD44000
	0x033AF1D0 LDRB W8, [X23 + 0x182]
	0x033AF1D4 LDR X22, [X22 + 0xDF8]
	0x033AF1D8 MOV W21, W2
	0x033AF1DC MOV X19, X1
	0x033AF1E0 MOV X20, X0
	0x033AF1E4 TBNZ X8, 0x0, 0x33AF1FC
	0x033AF1E8 ADRP X0, 0xD44000
	0x033AF1EC LDR X0, [X0 + 0xDF8]
	0x033AF1F0 BL 0x1C16CF4
	0x033AF1F4 MOVZ W8, 0x1
	0x033AF1F8 STRB W8, [X23 + 0x182]
	0x033AF1FC MOVI V0.2D, 0x0
	0x033AF200 ADD X0, X31, 0x0
	0x033AF204 MOVZ W1, 0x1
	0x033AF208 STP V0, V0, [X31 + 0x10]
	0x033AF20C STR V0, [X31]
	0x033AF210 BL 0x33AF278
	0x033AF214 LDR X0, [X22]
	0x033AF218 LDR W8, [X0 + 0xE0]
	0x033AF21C CBNZ W8, 0x33AF224

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0x1030000
	015 Move W8, [X19+372]
	016 Move X21, X3
	017 Move X20, X2
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {48}
	022 Move X0, 0xD7E000
	023 Move X0, [X0+1336]
	024 Call 0x1C17CF4
	025 Move X0, 0xD47000
	026 Move X0, [X0+3672]
	027 Call 0x1C17CF4
	028 Move X0, 0xD7E000
	029 Move X0, [X0+3280]
	030 Call 0x1C17CF4
	031 Move X0, 0xD77000
	032 Move X0, [X0+632]
	033 Call 0x1C17CF4
	034 Move X0, 0xD50000
	035 Move X0, [X0+2408]
	036 Call 0x1C17CF4
	037 Move X0, 0xD79000
	038 Move X0, [X0+176]
	039 Call 0x1C17CF4
	040 Move X0, 0xD4E000
	041 Move X0, [X0+3168]
	042 Call 0x1C17CF4
	043 Move X0, 0xD46000
	044 Move X0, [X0+1728]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X19+372], W8
	048 Compare X21, 0
	049 JumpIfEqual {445}
	050 Move X8, 0xD4E000
	051 Move X8, [X8+3168]
	052 Move W1, [X21+24]
	053 Move X0, [X8]
	054 Call 0x1C17D6C
	055 Move W8, [X21+24]
	056 Move X19, X0
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X23, X31
	059 Add X24, X19, 32
	060 Add X25, X21, 32
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X0, [X25]
	063 Compare X0, 0
	064 JumpIfEqual {445}
	065 Move X8, [X0]
	066 Move X9, [X8+808]
	067 Move X1, [X8+816]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Compare X19, 0
	070 JumpIfEqual {445}
	071 Move X22, X0
	072 Compare X0, 0
	073 JumpIfEqual {472}
	074 Move X8, [X19]
	075 Move X0, X22
	076 Move X1, [X8+64]
	077 Call 0x1C17E00
	078 Compare X0, 0
	079 JumpIfEqual {469}
	080 Move W8, [X19+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X0, X22
	083 Move X1, X31
	084 Move [X24], X22
	085 Call Type.IsRuntimeImplemented, X0
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {106}
	090 Move W8, [X19+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X8, [X24]
	093 Compare X8, 0
	094 JumpIfEqual {446}
	095 Move X9, [X8]
	096 Move X8, 0xD79000
	097 Move X8, [X8+176]
	098 Move W11, [X9+304]
	099 Move X8, [X8]
	100 Move W10, [X8+304]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X9, [X9+200]
	103 Add X9, X9, X10
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move W8, [X21+24]
	107 Add X23, X23, 1
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Compare X20, 0
	110 JumpIfEqual {478}
	111 Move X8, [X20+24]
	112 Compare X8, 0
	113 JumpIfEqual {478}
	114 Move X0, X20
	115 Move X1, X31
	116 Call Array.Clone, X0
	117 Compare X0, 0
	118 JumpIfEqual {445}
	119 Move X8, 0xD7E000
	120 Move X8, [X8+3280]
	121 Move X21, X0
	122 Move X22, [X8]
	123 Move X1, X22
	124 Call 0x1C17E00
	125 Compare X0, 0
	126 JumpIfEqual {489}
	127 Move X8, [X0+24]
	128 Move X20, X0
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X29, 0xD46000
	131 Move X29, [X29+1728]
	132 Move W22, W31
	133 Move W27, W31
	134 Add X24, X19, 32
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Add X25, X20, W27
	137 Add X25, X25, 32
	138 Move X0, [X25]
	139 Compare X0, 0
	140 JumpIfEqual {445}
	141 Move X8, [X0]
	142 Move X9, [X8+920]
	143 Move X1, [X8+928]
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Compare X0, 0
	146 JumpIfEqual {445}
	147 Compare X19, 0
	148 JumpIfEqual {445}
	149 Move X9, [X0+24]
	150 Move W8, [X19+24]
	151 Move X21, X0
	152 NotImplemented "Instruction CMP not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move [X31+12], W22
	155 Compare W9, 0
	156 JumpIfEqual {477}
	157 Move X26, X31
	158 Add X28, X21, 32
	159 Move X0, [X28]
	160 Compare X0, 0
	161 JumpIfEqual {445}
	162 Move X8, [X0]
	163 Move X9, [X8+472]
	164 Move X1, [X8+480]
	165 NotImplemented "Instruction BLR not yet implemented."
	166 Move W8, [X19+24]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move W8, [X21+24]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move X22, X0
	171 Move X0, [X24]
	172 Move X1, [X28]
	173 Move X2, X31
	174 Call SignatureTypeExtensions.MatchesParameterTypeExactly, X0, X1
	175 Move TEMP, X0
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfEqual {309}
	179 Move X0, [X29]
	180 Move X9, 0xD50000
	181 Move W8, [X0+224]
	182 Move X9, [X9+2408]
	183 Move X23, [X9]
	184 Compare W8, 0
	185 JumpIfNotEqual {187}
	186 Call 0x1C17DFC
	187 Move X0, X23
	188 Move X1, X31
	189 Call Type.GetTypeFromHandle, X0
	190 Move X1, X0
	191 Move X0, X22
	192 Move X2, X31
	193 Call Type.op_Equality, X0, X1
	194 Move TEMP, X0
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfEqual {309}
	198 Move W8, [X19+24]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move X23, [X24]
	201 Compare X23, 0
	202 JumpIfEqual {248}
	203 Move X8, 0xD79000
	204 Move X9, [X23]
	205 Move X8, [X8+176]
	206 Move W11, [X9+304]
	207 Move X8, [X8]
	208 Move W10, [X8+304]
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X9, [X9+200]
	211 Add X9, X9, X10
	212 NotImplemented "Instruction LDUR not yet implemented."
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move W8, [X20+24]
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move X1, [X25]
	217 Compare X1, 0
	218 JumpIfEqual {316}
	219 Move X8, 0xD77000
	220 Move X9, [X1]
	221 Move X8, [X8+632]
	222 Move W11, [X9+304]
	223 Move X8, [X8]
	224 Move W10, [X8+304]
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move X9, [X9+200]
	227 Add X9, X9, X10
	228 NotImplemented "Instruction LDUR not yet implemented."
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move X0, X23
	231 Move X2, X31
	232 Call SignatureTypeExtensions.TryResolveAgainstGenericMethod, X0, X1
	233 Move X8, [X29]
	234 Move X23, X0
	235 Move W9, [X8+224]
	236 Compare W9, 0
	237 JumpIfNotEqual {240}
	238 Move X0, X8
	239 Call 0x1C17DFC
	240 Move X0, X23
	241 Move X1, X31
	242 Move X2, X31
	243 Call Type.op_Equality, X0, X1
	244 Move TEMP, X0
	245 And TEMP, TEMP, 1
	246 Compare TEMP, 1
	247 JumpIfEqual {316}
	248 Compare X22, 0
	249 JumpIfEqual {445}
	250 Move X0, X22
	251 Move X1, X31
	252 Call Type.get_IsPrimitive, X0
	253 Move TEMP, X0
	254 And TEMP, TEMP, 1
	255 Compare TEMP, 1
	256 JumpIfNotEqual {299}
	257 Compare X23, 0
	258 JumpIfEqual {445}
	259 Move X8, [X23]
	260 Move X0, X23
	261 Move X9, [X8+808]
	262 Move X1, [X8+816]
	263 NotImplemented "Instruction BLR not yet implemented."
	264 Compare X0, 0
	265 JumpIfEqual {445}
	266 Move X1, X31
	267 Call Type.IsRuntimeImplemented, X0
	268 Move TEMP, X0
	269 And TEMP, TEMP, 1
	270 Compare TEMP, 1
	271 JumpIfNotEqual {316}
	272 Move X8, [X23]
	273 Move X0, X23
	274 Move X9, [X8+808]
	275 Move X1, [X8+816]
	276 NotImplemented "Instruction BLR not yet implemented."
	277 Move X8, [X22]
	278 Move X23, X0
	279 Move X0, X22
	280 Move X9, [X8+808]
	281 Move X1, [X8+816]
	282 NotImplemented "Instruction BLR not yet implemented."
	283 Move X8, 0xD7E000
	284 Move X8, [X8+1336]
	285 Move X22, X0
	286 Move X8, [X8]
	287 Move W9, [X8+224]
	288 Compare W9, 0
	289 JumpIfNotEqual {292}
	290 Move X0, X8
	291 Call 0x1C17DFC
	292 Move X0, X23
	293 Move X1, X22
	294 Call DefaultBinder.CanChangePrimitive, X0, X1
	295 Move TEMP, X0
	296 And TEMP, TEMP, 1
	297 Compare TEMP, 1
	298 JumpIfEqual {309}
	299 Move X8, [X22]
	300 Move X0, X22
	301 Move X1, X23
	302 Move X9, [X8+680]
	303 Move X2, [X8+688]
	304 NotImplemented "Instruction BLR not yet implemented."
	305 Move TEMP, X0
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfNotEqual {316}
	309 Move W9, [X19+24]
	310 Add X8, X26, 1
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Move W9, [X21+24]
	313 Move X26, X8
	314 NotImplemented "Instruction CMP not yet implemented."
	315 Add W26, W26, 1
	316 Move W8, [X19+24]
	317 Move W22, [X31+12]
	318 Move W26, W31
	319 NotImplemented "Instruction CMP not yet implemented."
	320 Move W8, [X20+24]
	321 NotImplemented "Instruction CMP not yet implemented."
	322 Move X21, [X25]
	323 Compare X21, 0
	324 JumpIfEqual {332}
	325 Move X8, [X20]
	326 Move X0, X21
	327 Move X1, [X8+64]
	328 Call 0x1C17E00
	329 Compare X0, 0
	330 JumpIfEqual {469}
	331 Move W8, [X20+24]
	332 NotImplemented "Instruction CMP not yet implemented."
	333 Add W9, W22, 1
	334 Add X8, X20, W22
	335 Move W22, W9
	336 Move [X8+32], X21
	337 Move X8, [X20+24]
	338 Add W27, W27, 1
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Compare W22, 0
	341 JumpIfEqual {349}
	342 NotImplemented "Instruction CMP not yet implemented."
	343 Compare W8, 0
	344 JumpIfEqual {477}
	345 Add X8, X20, 32
	346 Move W22, W31
	347 Compare W22, 0
	348 JumpIfNotEqual {342}
	349 Move X0, X31
	350 Compare X19, 0
	351 JumpIfEqual {445}
	352 Move X8, 0xD47000
	353 Move X8, [X8+3672]
	354 Move W1, [X19+24]
	355 Move X0, [X8]
	356 Call 0x1C17D6C
	357 Move X10, [X19+24]
	358 Move X21, X0
	359 NotImplemented "Instruction CMP not yet implemented."
	360 Compare X21, 0
	361 JumpIfEqual {445}
	362 Move W9, [X21+24]
	363 Move X8, X31
	364 Move X10, W10
	365 Add X11, X21, 32
	366 NotImplemented "Instruction CMP not yet implemented."
	367 Move [X11], W8
	368 Add X8, X8, 1
	369 NotImplemented "Instruction CMP not yet implemented."
	370 NotImplemented "Instruction CMP not yet implemented."
	371 Move W8, W22
	372 Move X25, X31
	373 Move W24, W31
	374 Move W26, W31
	375 Add X27, X20, 40
	376 Subtract X28, X8, 1
	377 Move X8, [X20+24]
	378 NotImplemented "Instruction CMP not yet implemented."
	379 Add X9, X25, 1
	380 And X8, X8, 0
	381 NotImplemented "Instruction CMP not yet implemented."
	382 Move X8, 0xD7D000
	383 Move X8, [X8+1336]
	384 Move X22, [X27]
	385 Move X0, [X8]
	386 Add X8, X20, W24
	387 Move X23, [X8+32]
	388 Move W8, [X0+224]
	389 Compare W8, 0
	390 JumpIfNotEqual {392}
	391 Call 0x1C17DFC
	392 Move X0, X23
	393 Move X1, X21
	394 Move X2, X31
	395 Move X3, X22
	396 Move X4, X21
	397 Move X5, X31
	398 Move X6, X19
	399 Move X7, X31
	400 Call DefaultBinder.FindMostSpecificMethod, X0, X1, X2, X3, X4, X5, X6, X7
	401 Compare W0, 0
	402 JumpIfEqual {406}
	403 NotImplemented "Instruction CMP not yet implemented."
	404 Move W26, W31
	405 Add W24, W25, 1
	406 Move W26, 1
	407 Add X25, X25, 1
	408 NotImplemented "Instruction CMP not yet implemented."
	409 Move TEMP, X26
	410 And TEMP, TEMP, 1
	411 Compare TEMP, 1
	412 JumpIfNotEqual {426}
	413 Move X0, 0xD77000
	414 Move X0, [X0+1952]
	415 Call 0x1C17D08
	416 Call 0x1C17F10
	417 Move X19, X0
	418 Move X0, 0xD77000
	419 Move X0, [X0+3040]
	420 Call 0x1C17D08
	421 Move X1, X0
	422 Move X0, X19
	423 Move X2, X31
	424 Call AmbiguousMatchException..ctor, X0, X1
	425 Move W24, W31
	426 Move W8, [X20+24]
	427 NotImplemented "Instruction CMP not yet implemented."
	428 Add X8, X20, W24
	429 Add X8, X8, 32
	430 Move X0, [X8]
	431 Move X20, [X31+96]
	432 Move X19, [X31+104]
	433 Move X22, [X31+80]
	434 Move X21, [X31+88]
	435 Move X24, [X31+64]
	436 Move X23, [X31+72]
	437 Move X26, [X31+48]
	438 Move X25, [X31+56]
	439 Move X28, [X31+32]
	440 Move X27, [X31+40]
	441 Move X29, [X31+16]
	442 Move X30, [X31+24]
	443 Add X31, X31, 112
	444 Return X0
	445 Call 0x1C17F20
	446 Move X0, 0xD4D000
	447 Move X0, [X0+1400]
	448 Call 0x1C17D08
	449 Call 0x1C17F10
	450 Move X19, X0
	451 Move X0, 0xD77000
	452 Move X0, [X0+3672]
	453 Call 0x1C17D08
	454 Move X20, X0
	455 Move X0, 0xD7D000
	456 Move X0, [X0+1168]
	457 Call 0x1C17D08
	458 Move X2, X0
	459 Move X0, X19
	460 Move X1, X20
	461 Move X3, X31
	462 Call ArgumentException..ctor, X0, X1, X2
	463 Move X0, 0xD7D000
	464 Move X0, [X0+3648]
	465 Call 0x1C17D08
	466 Move X1, X0
	467 Move X0, X19
	468 Call 0x1C17DEC
	469 Call 0x1C17F44
	470 Move X1, X31
	471 Call 0x1C17DEC
	472 Move W8, [X19+24]
	473 NotImplemented "Instruction CMP not yet implemented."
	474 Add X8, X19, X23
	475 Move [X8+32], X31
	476 Call 0x1C17F20
	477 Call 0x1C17F28
	478 Move X0, 0xD4D000
	479 Move X0, [X0+1400]
	480 Call 0x1C17D08
	481 Call 0x1C17F10
	482 Move X19, X0
	483 Move X0, 0xD7D000
	484 Move X0, [X0+3504]
	485 Call 0x1C17D08
	486 Move X20, X0
	487 Move X0, 0xD6D000
	488 Move X0, [X0+1912]
	489 Move X0, X21
	490 Move X1, X22
	491 Call 0x1C181E0

Method: System.Boolean CanChangePrimitive(System.Type source, System.Type target)

Disassembly:
	0x033AF220 BL 0x1C16DFC
	0x033AF224 AND W2, W21, 0x1
	0x033AF228 ADD X3, X31, 0x0
	0x033AF22C MOV X0, X20
	0x033AF230 MOV X1, X19
	0x033AF234 BL 0x33AF2E0
	0x033AF238 TBZ X0, 0x0, 0x33AF254
	0x033AF23C LDR X0, [X31]
	0x033AF240 LDP X20, X19, [X31 + 0x50]
	0x033AF244 LDP X22, X21, [X31 + 0x40]
	0x033AF248 LDP X30, X23, [X31 + 0x30]
	0x033AF24C ADD X31, X31, 0x60
	0x033AF250 RET
	0x033AF254 ADD X0, X31, 0x0
	0x033AF258 BL 0x33AF934
	0x033AF25C MOV X19, X0
	0x033AF260 ADRP X0, 0xD7C000
	0x033AF264 LDR X0, [X0 + 0xEA0]
	0x033AF268 BL 0x1C16D08
	0x033AF26C MOV X1, X0
	0x033AF270 MOV X0, X19
	0x033AF274 BL 0x1C16DEC
	0x033AF278 STR X30, [X31 - 0x30]!
	0x033AF27C STP X22, X21, [X31 + 0x10]
	0x033AF280 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x102F000
	007 Move X22, 0xD7D000
	008 Move W8, [X21+373]
	009 Move X22, [X22+1336]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD7D000
	017 Move X0, [X0+1336]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+373], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]

Method: System.Boolean CanPrimitiveWiden(System.Type source, System.Type target)

Disassembly:
	0x033AF284 ADRP X22, 0x102E000
	0x033AF288 ADRP X21, 0xD44000
	0x033AF28C LDRB W8, [X22 + 0x1AB]
	0x033AF290 LDR X21, [X21 + 0x758]
	0x033AF294 MOV W20, W1
	0x033AF298 MOV X19, X0
	0x033AF29C TBNZ X8, 0x0, 0x33AF2B4
	0x033AF2A0 ADRP X0, 0xD44000
	0x033AF2A4 LDR X0, [X0 + 0x758]
	0x033AF2A8 BL 0x1C16CF4
	0x033AF2AC MOVZ W8, 0x1
	0x033AF2B0 STRB W8, [X22 + 0x1AB]
	0x033AF2B4 LDR X0, [X21]
	0x033AF2B8 ADD X1, X31, 0xC
	0x033AF2BC AND W20, W20, 0x1
	0x033AF2C0 STR W31, [X31 + 0xC]
	0x033AF2C4 BL 0x1C16E04
	0x033AF2C8 STR X0, [X19]
	0x033AF2CC STRB W20, [X19 + 0x8]
	0x033AF2D0 LDP X20, X19, [X31 + 0x20]
	0x033AF2D4 LDP X22, X21, [X31 + 0x10]
	0x033AF2D8 LDR X30, [X31], #0x30
	0x033AF2DC RET
	0x033AF2E0 SUB X31, X31, 0x70
	0x033AF2E4 STP X29, X30, [X31 + 0x10]
	0x033AF2E8 STP X28, X27, [X31 + 0x20]
	0x033AF2EC STP X26, X25, [X31 + 0x30]
	0x033AF2F0 STP X24, X23, [X31 + 0x40]
	0x033AF2F4 STP X22, X21, [X31 + 0x50]
	0x033AF2F8 STP X20, X19, [X31 + 0x60]
	0x033AF2FC ADRP X23, 0x102E000
	0x033AF300 ADRP X24, 0xD44000
	0x033AF304 LDRB W8, [X23 + 0x183]
	0x033AF308 LDR X24, [X24 + 0x6C0]
	0x033AF30C MOV X19, X3
	0x033AF310 MOV W21, W2
	0x033AF314 MOV X22, X1
	0x033AF318 MOV X20, X0
	0x033AF31C TBNZ X8, 0x0, 0x33AF394
	0x033AF320 ADRP X0, 0xD46000
	0x033AF324 LDR X0, [X0 + 0x170]
	0x033AF328 BL 0x1C16CF4
	0x033AF32C ADRP X0, 0xD4D000
	0x033AF330 LDR X0, [X0 + 0x9E8]
	0x033AF334 BL 0x1C16CF4
	0x033AF338 ADRP X0, 0xD46000
	0x033AF33C LDR X0, [X0 + 0xC48]
	0x033AF340 BL 0x1C16CF4
	0x033AF344 ADRP X0, 0xD44000
	0x033AF348 LDR X0, [X0 + 0xDF8]
	0x033AF34C BL 0x1C16CF4
	0x033AF350 ADRP X0, 0xD6D000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x102F000
	007 Move X21, 0xD7D000
	008 Move W8, [X22+374]
	009 Move X21, [X21+1336]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xD7D000
	017 Move X0, [X0+1336]
	018 Call 0x1C17CF4
	019 Move X0, 0xD45000
	020 Move X0, [X0+1728]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+374], W8
	024 Move X0, [X21]
	025 Move X22, 0xD45000
	026 Move W8, [X0+224]
	027 Move X22, [X22+1728]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X21]
	032 Move X8, [X22]
	033 Move X9, [X0+184]
	034 Move W10, [X8+224]
	035 Move X21, [X9]
	036 Compare W10, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X20
	041 Move X1, X31
	042 Call Type.GetTypeCode, X0
	043 Compare X21, 0
	044 JumpIfEqual {60}
	045 Move W8, [X21+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Add X8, X21, W0
	048 Move W20, [X8+32]
	049 Move X0, X19
	050 Move X1, X31
	051 Call Type.GetTypeCode, X0
	052 NotImplemented "Instruction LSRV not yet implemented."
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 And W0, W8, 1
	058 Move X30, [X31+48]
	059 Return X0
	060 Call 0x1C17F20
	061 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x033AF354 LDR X0, [X0 + 0x4E8]
	0x033AF358 BL 0x1C16CF4

ISIL:
	001 Move X1, X31
	002 Call Binder..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x033AF35C ADRP X0, 0xD44000
	0x033AF360 LDR X0, [X0 + 0x6C0]
	0x033AF364 BL 0x1C16CF4
	0x033AF368 ADRP X0, 0xD4E000
	0x033AF36C LDR X0, [X0 + 0xEC8]
	0x033AF370 BL 0x1C16CF4
	0x033AF374 ADRP X0, 0xD7C000
	0x033AF378 LDR X0, [X0 + 0xEA8]
	0x033AF37C BL 0x1C16CF4
	0x033AF380 ADRP X0, 0xD7C000
	0x033AF384 LDR X0, [X0 + 0xEB0]
	0x033AF388 BL 0x1C16CF4
	0x033AF38C MOVZ W8, 0x1
	0x033AF390 STRB W8, [X23 + 0x183]
	0x033AF394 LDR X0, [X24]
	0x033AF398 LDR W8, [X0 + 0xE0]
	0x033AF39C CBNZ W8, 0x33AF3A4
	0x033AF3A0 BL 0x1C16DFC
	0x033AF3A4 MOV X0, X20
	0x033AF3A8 MOV X1, X31
	0x033AF3AC MOV X2, X31
	0x033AF3B0 BL 0x3395194
	0x033AF3B4 TBNZ X0, 0x0, 0x33AF5BC
	0x033AF3B8 ADRP X8, 0xD6D000
	0x033AF3BC LDR X8, [X8 + 0x4E8]
	0x033AF3C0 LDR X0, [X8]
	0x033AF3C4 CBZ X20, 0x33AF3DC
	0x033AF3C8 LDR X8, [X20]
	0x033AF3CC LDRB W9, [X0 + 0x130]
	0x033AF3D0 LDRB W10, [X8 + 0x130]
	0x033AF3D4 CMP W10, W9
	0x033AF3D8 B.CS 0x33AF3E4
	0x033AF3DC MOV X23, X31
	0x033AF3E0 B 0x33AF3F8
	0x033AF3E4 LDR X8, [X8 + 0xC8]
	0x033AF3E8 ADD X8, X8, X9, 0x3, LSL
	0x033AF3EC LDUR X8, [X8 - 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x102F000
	007 Move X22, 0xD7D000
	008 Move X19, 0xD7D000
	009 Move X20, 0xD7D000
	010 Move W8, [X21+375]
	011 Move X22, [X22+3656]
	012 Move X19, [X19+3664]
	013 Move X20, [X20+1336]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xD7D000
	019 Move X0, [X0+1336]
	020 Call 0x1C17CF4
	021 Move X0, 0xD7D000
	022 Move X0, [X0+3656]
	023 Call 0x1C17CF4
	024 Move X0, 0xD7D000
	025 Move X0, [X0+3664]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+375], W8
	029 Move X0, [X22]
	030 Move W1, 19
	031 Call 0x1C17D6C
	032 Move X1, [X19]
	033 Move X2, X31
	034 Move X19, X0
	035 Call RuntimeHelpers.InitializeArray, X0, X1
	036 Move X8, [X20]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X8, [X8+184]
	040 Move [X8], X19
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+48]
	044 Return 

