Type: System.Boolean

Method: System.Int32 GetHashCode()

Disassembly:
	0x033186B4 BL 0x1C16CF4
	0x033186B8 MOVZ W8, 0x1
	0x033186BC STRB W8, [X24 + 0xBAF]
	0x033186C0 LDRB W8, [X21]

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.String ToString()

Disassembly:
	0x033186C4 LDR X0, [X23]
	0x033186C8 ADD X1, X31, 0xC
	0x033186CC CMP W8, 0x0
	0x033186D0 CSET W8, NE
	0x033186D4 STRB W8, [X31 + 0xC]
	0x033186D8 BL 0x1C16E04
	0x033186DC LDR X8, [X22]
	0x033186E0 MOV X21, X0
	0x033186E4 LDR W9, [X8 + 0xE0]
	0x033186E8 CBNZ W9, 0x33186F4
	0x033186EC MOV X0, X8
	0x033186F0 BL 0x1C16DFC
	0x033186F4 MOV X0, X21
	0x033186F8 MOV X1, X20
	0x033186FC MOV X2, X19
	0x03318700 BL 0x3318718
	0x03318704 LDP X20, X19, [X31 + 0x30]
	0x03318708 LDP X22, X21, [X31 + 0x20]
	0x0331870C LDP X24, X23, [X31 + 0x10]
	0x03318710 LDR X30, [X31], #0x40
	0x03318714 RET
	0x03318718 SUB X31, X31, 0x60
	0x0331871C STR X30, [X31 + 0x20]
	0x03318720 STP X24, X23, [X31 + 0x30]
	0x03318724 STP X22, X21, [X31 + 0x40]
	0x03318728 STP X20, X19, [X31 + 0x50]
	0x0331872C MRS X22, 0xC000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x10C5000
	007 Move X20, 0xE10000
	008 Move X21, 0xE11000
	009 Move W8, [X22+2971]
	010 Move X20, [X20+4088]
	011 Move X21, [X21]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xE10000
	018 Move X0, [X0+4088]
	019 Call 0x1C17CF4
	020 Move X0, 0xE11000
	021 Move X0, [X0]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2971], W8
	025 Move W8, [X19]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CSEL not yet implemented."
	028 Move X0, [X8]
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Return X0

Method: System.String ToString(System.IFormatProvider provider)

Disassembly:
	0x03318730 LDR X8, [X22 + 0x28]
	0x03318734 ADRP X23, 0x10C4000
	0x03318738 ADRP X24, 0xDDB000
	0x0331873C MOV X20, X2
	0x03318740 STR X8, [X31 + 0x18]
	0x03318744 LDRB W8, [X23 + 0xBF1]
	0x03318748 LDR X24, [X24 + 0x6C0]
	0x0331874C MOV X21, X1
	0x03318750 MOV X19, X0
	0x03318754 TBNZ X8, 0x0, 0x3318838
	0x03318758 ADRP X0, 0xDDB000
	0x0331875C LDR X0, [X0 + 0xB58]
	0x03318760 BL 0x1C16CF4
	0x03318764 ADRP X0, 0xDDC000
	0x03318768 LDR X0, [X0 + 0x9D8]
	0x0331876C BL 0x1C16CF4
	0x03318770 ADRP X0, 0xDDD000
	0x03318774 LDR X0, [X0 + 0x170]
	0x03318778 BL 0x1C16CF4
	0x0331877C ADRP X0, 0xDE4000
	0x03318780 LDR X0, [X0 + 0x9E8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x10C5000
	006 Move X21, 0xDDC000
	007 Move W8, [X20+2972]
	008 Move X21, [X21+2904]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDDC000
	015 Move X0, [X0+2904]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2972], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Boolean.ToString, X0
	030 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03318784 BL 0x1C16CF4
	0x03318788 ADRP X0, 0xDDC000
	0x0331878C LDR X0, [X0 + 0x9F0]
	0x03318790 BL 0x1C16CF4
	0x03318794 ADRP X0, 0xE03000
	0x03318798 LDR X0, [X0 + 0x5F0]
	0x0331879C BL 0x1C16CF4
	0x033187A0 ADRP X0, 0xDDE000
	0x033187A4 LDR X0, [X0 + 0x978]
	0x033187A8 BL 0x1C16CF4
	0x033187AC ADRP X0, 0xDDB000
	0x033187B0 LDR X0, [X0 + 0xDF8]
	0x033187B4 BL 0x1C16CF4
	0x033187B8 ADRP X0, 0xE0B000
	0x033187BC LDR X0, [X0 + 0xE10]
	0x033187C0 BL 0x1C16CF4
	0x033187C4 ADRP X0, 0xDDF000
	0x033187C8 LDR X0, [X0 + 0x628]
	0x033187CC BL 0x1C16CF4
	0x033187D0 ADRP X0, 0xDDB000
	0x033187D4 LDR X0, [X0 + 0x758]
	0x033187D8 BL 0x1C16CF4
	0x033187DC ADRP X0, 0xDDD000
	0x033187E0 LDR X0, [X0 + 0xA60]
	0x033187E4 BL 0x1C16CF4
	0x033187E8 ADRP X0, 0xE04000
	0x033187EC LDR X0, [X0 + 0x6B0]
	0x033187F0 BL 0x1C16CF4
	0x033187F4 ADRP X0, 0xDDB000
	0x033187F8 LDR X0, [X0 + 0xA90]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C5000
	006 Move W8, [X21+2973]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xDDC000
	014 Move X0, [X0+2904]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2973], W8
	018 Compare X19, 0
	019 JumpIfEqual {25}
	020 Move X8, 0xDDC000
	021 Move X8, [X8+2904]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 Move W20, [X20]
	027 Move X0, X19
	028 Call 0x1C17E08
	029 Move W8, [X0]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0

Method: System.Boolean Equals(System.Boolean obj)

Disassembly:
	0x033187FC BL 0x1C16CF4
	0x03318800 ADRP X0, 0xDDB000
	0x03318804 LDR X0, [X0 + 0x6C0]
	0x03318808 BL 0x1C16CF4
	0x0331880C ADRP X0, 0xDE0000

ISIL:
	001 Move W8, [X0]
	002 And W9, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.Int32 CompareTo(System.Object obj)

Disassembly:
	0x03318810 LDR X0, [X0 + 0x658]
	0x03318814 BL 0x1C16CF4
	0x03318818 ADRP X0, 0xDE3000
	0x0331881C LDR X0, [X0 + 0x720]
	0x03318820 BL 0x1C16CF4
	0x03318824 ADRP X0, 0xDDC000
	0x03318828 LDR X0, [X0 + 0x758]
	0x0331882C BL 0x1C16CF4
	0x03318830 MOVZ W8, 0x1
	0x03318834 STRB W8, [X23 + 0xBF1]
	0x03318838 LDR X0, [X24]
	0x0331883C LDR W8, [X0 + 0xE0]
	0x03318840 CBNZ W8, 0x3318848
	0x03318844 BL 0x1C16DFC
	0x03318848 MOV X0, X21
	0x0331884C MOV X1, X31
	0x03318850 MOV X2, X31
	0x03318854 BL 0x3395194
	0x03318858 TBNZ X0, 0x0, 0x3319368
	0x0331885C CBZ X19, 0x33193DC
	0x03318860 MOV X0, X19
	0x03318864 MOV X1, X31
	0x03318868 BL 0x33BE520
	0x0331886C CMP X0, X21
	0x03318870 B.EQ 0x3318EA4
	0x03318874 ADRP X23, 0xDE4000
	0x03318878 LDR X23, [X23 + 0x9E8]
	0x0331887C LDR X0, [X23]
	0x03318880 LDR W8, [X0 + 0xE0]
	0x03318884 CBNZ W8, 0x3318890
	0x03318888 BL 0x1C16DFC
	0x0331888C LDR X0, [X23]
	0x03318890 LDR X8, [X0 + 0xB8]
	0x03318894 LDR X9, [X8 + 0x8]
	0x03318898 CBZ X9, 0x33193DC
	0x0331889C LDR W10, [X9 + 0x18]
	0x033188A0 CMP W10, 0x3
	0x033188A4 B.LS 0x3319464
	0x033188A8 LDR X10, [X9 + 0x38]
	0x033188AC CMP X10, X21
	0x033188B0 B.EQ 0x3318C1C
	0x033188B4 LDR W10, [X0 + 0xE0]
	0x033188B8 CBNZ W10, 0x33188D0
	0x033188BC BL 0x1C16DFC
	0x033188C0 LDR X0, [X23]
	0x033188C4 LDR X8, [X0 + 0xB8]
	0x033188C8 LDR X9, [X8 + 0x8]
	0x033188CC CBZ X9, 0x33193DC
	0x033188D0 LDR W10, [X9 + 0x18]
	0x033188D4 CMP W10, 0x4
	0x033188D8 B.LS 0x3319464
	0x033188DC LDR X10, [X9 + 0x40]
	0x033188E0 CMP X10, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C5000
	006 Move W8, [X21+2974]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xDDC000
	014 Move X0, [X0+2904]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2974], W8
	018 Compare X20, 0
	019 JumpIfEqual {31}
	020 Move X8, 0xDDC000
	021 Move X8, [X8+2904]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W21, [X19]
	026 Move X0, X20
	027 Call 0x1C17E08
	028 Move W8, [X0]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W0, W31
	031 Move W0, 1
	032 Move W8, [X19]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move TEMP, 0
	035 Not TEMP
	036 Move W8, TEMP
	037 NotImplemented "Instruction CSNEG not yet implemented."
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0
	043 Move X0, 0xDE4000
	044 Move X0, [X0+1400]
	045 Call 0x1C17D08
	046 Call 0x1C17F10
	047 Move X19, X0
	048 Move X0, 0xE11000
	049 Move X0, [X0+8]
	050 Call 0x1C17D08
	051 Move X1, X0
	052 Move X0, X19
	053 Call ArgumentException..ctor, X0, X1
	054 Move X0, 0xE11000
	055 Move X0, [X0+16]
	056 Call 0x1C17D08
	057 Move X1, X0
	058 Move X0, X19
	059 Call 0x1C17DEC

Method: System.Int32 CompareTo(System.Boolean value)

Disassembly:
	0x033188E4 B.EQ 0x3318C64
	0x033188E8 LDR W10, [X0 + 0xE0]
	0x033188EC CBNZ W10, 0x3318904
	0x033188F0 BL 0x1C16DFC
	0x033188F4 LDR X0, [X23]
	0x033188F8 LDR X8, [X0 + 0xB8]
	0x033188FC LDR X9, [X8 + 0x8]
	0x03318900 CBZ X9, 0x33193DC
	0x03318904 LDR W10, [X9 + 0x18]
	0x03318908 CMP W10, 0x5

ISIL:
	001 Move W8, [X0]
	002 And W9, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move W0, W31
	005 Return X0
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move TEMP, 0
	008 Not TEMP
	009 Move W8, TEMP
	010 NotImplemented "Instruction CSNEG not yet implemented."
	011 Return X0

Method: System.Boolean Parse(System.String value)

Disassembly:
	0x0331890C B.LS 0x3319464
	0x03318910 LDR X10, [X9 + 0x48]
	0x03318914 CMP X10, X21
	0x03318918 B.EQ 0x3318CAC
	0x0331891C LDR W10, [X0 + 0xE0]
	0x03318920 CBNZ W10, 0x3318938
	0x03318924 BL 0x1C16DFC
	0x03318928 LDR X0, [X23]
	0x0331892C LDR X8, [X0 + 0xB8]
	0x03318930 LDR X9, [X8 + 0x8]
	0x03318934 CBZ X9, 0x33193DC
	0x03318938 LDR W10, [X9 + 0x18]
	0x0331893C CMP W10, 0x6
	0x03318940 B.LS 0x3319464
	0x03318944 LDR X10, [X9 + 0x50]
	0x03318948 CMP X10, X21
	0x0331894C B.EQ 0x3318D2C
	0x03318950 LDR W10, [X0 + 0xE0]
	0x03318954 CBNZ W10, 0x331896C
	0x03318958 BL 0x1C16DFC
	0x0331895C LDR X0, [X23]
	0x03318960 LDR X8, [X0 + 0xB8]
	0x03318964 LDR X9, [X8 + 0x8]
	0x03318968 CBZ X9, 0x33193DC
	0x0331896C LDR W10, [X9 + 0x18]
	0x03318970 CMP W10, 0x7
	0x03318974 B.LS 0x3319464
	0x03318978 LDR X10, [X9 + 0x58]
	0x0331897C CMP X10, X21
	0x03318980 B.EQ 0x3318DA8
	0x03318984 LDR W10, [X0 + 0xE0]
	0x03318988 CBNZ W10, 0x33189A0
	0x0331898C BL 0x1C16DFC
	0x03318990 LDR X0, [X23]
	0x03318994 LDR X8, [X0 + 0xB8]
	0x03318998 LDR X9, [X8 + 0x8]
	0x0331899C CBZ X9, 0x33193DC
	0x033189A0 LDR W10, [X9 + 0x18]
	0x033189A4 CMP W10, 0x8
	0x033189A8 B.LS 0x3319464
	0x033189AC LDR X10, [X9 + 0x60]
	0x033189B0 CMP X10, X21
	0x033189B4 B.EQ 0x3318E1C
	0x033189B8 LDR W10, [X0 + 0xE0]
	0x033189BC CBNZ W10, 0x33189D4
	0x033189C0 BL 0x1C16DFC
	0x033189C4 LDR X0, [X23]
	0x033189C8 LDR X8, [X0 + 0xB8]
	0x033189CC LDR X9, [X8 + 0x8]
	0x033189D0 CBZ X9, 0x33193DC
	0x033189D4 LDR W10, [X9 + 0x18]
	0x033189D8 CMP W10, 0x9
	0x033189DC B.LS 0x3319464
	0x033189E0 LDR X10, [X9 + 0x68]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x10C5000
	006 Move W8, [X20+2975]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xDDC000
	013 Move X0, [X0+2904]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2975], W8
	017 Compare X19, 0
	018 JumpIfEqual {47}
	019 Move X21, 0x10C5000
	020 Move X20, 0xDDC000
	021 Move W8, [X21+939]
	022 Move X20, [X20+2904]
	023 Compare W8, 0
	024 JumpIfNotEqual {30}
	025 Move X0, 0xE03000
	026 Move X0, [X0+656]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+939], W8
	030 Move X0, X19
	031 Move X1, X31
	032 Call String.GetRawStringData, X0
	033 Move X8, [X20]
	034 Move W19, [X19+16]
	035 Move X20, X0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X0, X20
	042 Move X1, X19
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Move X0, 0xDE1000
	048 Move X0, [X0+1320]
	049 Call 0x1C17D08
	050 Call 0x1C17F10
	051 Move X19, X0
	052 Move X0, 0xDE6000
	053 Move X0, [X0+3784]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X19
	057 Call ArgumentNullException..ctor, X0, X1
	058 Move X0, 0xE11000
	059 Move X0, [X0+24]
	060 Call 0x1C17D08
	061 Move X1, X0
	062 Move X0, X19
	063 Call 0x1C17DEC

Method: System.Boolean Parse(System.ReadOnlySpan`1<System.Char> value)

Disassembly:
	0x033189E4 CMP X10, X21
	0x033189E8 B.EQ 0x3318ED0
	0x033189EC LDR W10, [X0 + 0xE0]
	0x033189F0 CBNZ W10, 0x3318A08
	0x033189F4 BL 0x1C16DFC
	0x033189F8 LDR X0, [X23]
	0x033189FC LDR X8, [X0 + 0xB8]
	0x03318A00 LDR X9, [X8 + 0x8]
	0x03318A04 CBZ X9, 0x33193DC
	0x03318A08 LDR W10, [X9 + 0x18]
	0x03318A0C CMP W10, 0xA
	0x03318A10 B.LS 0x3319464
	0x03318A14 LDR X10, [X9 + 0x70]
	0x03318A18 CMP X10, X21
	0x03318A1C B.EQ 0x3318F44
	0x03318A20 LDR W10, [X0 + 0xE0]
	0x03318A24 CBNZ W10, 0x3318A3C
	0x03318A28 BL 0x1C16DFC
	0x03318A2C LDR X0, [X23]
	0x03318A30 LDR X8, [X0 + 0xB8]
	0x03318A34 LDR X9, [X8 + 0x8]
	0x03318A38 CBZ X9, 0x33193DC
	0x03318A3C LDR W10, [X9 + 0x18]
	0x03318A40 CMP W10, 0xB
	0x03318A44 B.LS 0x3319464
	0x03318A48 LDR X10, [X9 + 0x78]
	0x03318A4C CMP X10, X21
	0x03318A50 B.EQ 0x3318FB8
	0x03318A54 LDR W10, [X0 + 0xE0]
	0x03318A58 CBNZ W10, 0x3318A70
	0x03318A5C BL 0x1C16DFC
	0x03318A60 LDR X0, [X23]
	0x03318A64 LDR X8, [X0 + 0xB8]
	0x03318A68 LDR X9, [X8 + 0x8]
	0x03318A6C CBZ X9, 0x33193DC
	0x03318A70 LDR W10, [X9 + 0x18]
	0x03318A74 CMP W10, 0xC
	0x03318A78 B.LS 0x3319464
	0x03318A7C LDR X10, [X9 + 0x80]
	0x03318A80 CMP X10, X21
	0x03318A84 B.EQ 0x331902C
	0x03318A88 LDR W10, [X0 + 0xE0]
	0x03318A8C CBNZ W10, 0x3318AA4
	0x03318A90 BL 0x1C16DFC
	0x03318A94 LDR X0, [X23]
	0x03318A98 LDR X8, [X0 + 0xB8]
	0x03318A9C LDR X9, [X8 + 0x8]
	0x03318AA0 CBZ X9, 0x33193DC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x10C5000
	007 Move X21, 0xDDC000
	008 Move W8, [X22+2976]
	009 Move X21, [X21+2904]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDDC000
	017 Move X0, [X0+2904]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2976], W8
	021 Move X0, [X21]
	022 Move [X31+12], W31
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Add X2, X31, 12
	028 Move X0, X20
	029 Move X1, X19
	030 Call Boolean.TryParse, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {42}
	035 Move W0, [X31+12]
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Return X0
	042 Move X0, 0xE09000
	043 Move X0, [X0+3080]
	044 Call 0x1C17D08
	045 Call 0x1C17F10
	046 Move X19, X0
	047 Move X0, 0xE11000
	048 Move X0, [X0+32]
	049 Call 0x1C17D08
	050 Move X1, X0
	051 Move X0, X19
	052 Move X2, X31
	053 Call FormatException..ctor, X0, X1
	054 Move X0, 0xE11000
	055 Move X0, [X0+40]
	056 Call 0x1C17D08
	057 Move X1, X0
	058 Move X0, X19
	059 Call 0x1C17DEC

Method: System.Boolean TryParse(System.String value, out System.Boolean result)

Disassembly:
	0x03318DAC LDR X8, [X19]
	0x03318DB0 LDR X10, [X10 + 0xE10]
	0x03318DB4 LDRH W9, [X8 + 0x12E]
	0x03318DB8 LDR X1, [X10]
	0x03318DBC CBZ X9, 0x3318DE0
	0x03318DC0 LDR X10, [X8 + 0xB0]
	0x03318DC4 ADD X10, X10, 0x8
	0x03318DC8 LDUR X11, [X10 - 0x8]
	0x03318DCC CMP X11, X1
	0x03318DD0 B.EQ 0x3318F18
	0x03318DD4 SUBS X9, X9, 0x1
	0x03318DD8 ADD X10, X10, 0x10
	0x03318DDC B.NE 0x3318DC8
	0x03318DE0 MOVZ W2, 0x5
	0x03318DE4 MOV X0, X19
	0x03318DE8 BL 0x1C5C788
	0x03318DEC B 0x3318F28
	0x03318DF0 LDR W9, [X10]
	0x03318DF4 ADD W9, W9, 0x3
	0x03318DF8 ADD X8, X8, W9, 0x4, SXTW
	0x03318DFC ADD X0, X8, 0x138
	0x03318E00 LDP X8, X2, [X0]
	0x03318E04 MOV X0, X19
	0x03318E08 MOV X1, X20
	0x03318E0C BLR X8
	0x03318E10 ADRP X8, 0xE04000
	0x03318E14 LDR X8, [X8 + 0x6B0]
	0x03318E18 B 0x3318E8C
	0x03318E1C ADRP X10, 0xE0B000
	0x03318E20 LDR X8, [X19]
	0x03318E24 LDR X10, [X10 + 0xE10]
	0x03318E28 LDRH W9, [X8 + 0x12E]
	0x03318E2C LDR X1, [X10]
	0x03318E30 CBZ X9, 0x3318E54
	0x03318E34 LDR X10, [X8 + 0xB0]
	0x03318E38 ADD X10, X10, 0x8
	0x03318E3C LDUR X11, [X10 - 0x8]
	0x03318E40 CMP X11, X1
	0x03318E44 B.EQ 0x3318F8C
	0x03318E48 SUBS X9, X9, 0x1
	0x03318E4C ADD X10, X10, 0x10
	0x03318E50 B.NE 0x3318E3C
	0x03318E54 MOVZ W2, 0x6
	0x03318E58 MOV X0, X19
	0x03318E5C BL 0x1C5C788
	0x03318E60 B 0x3318F9C
	0x03318E64 LDR W9, [X10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x10C5000
	007 Move W8, [X21+2977]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDDC000
	015 Move X0, [X0+2904]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2977], W8
	019 Compare X20, 0
	020 JumpIfEqual {53}
	021 Move X22, 0x10C5000
	022 Move X21, 0xDDC000
	023 Move W8, [X22+939]
	024 Move X21, [X21+2904]
	025 Compare W8, 0
	026 JumpIfNotEqual {32}
	027 Move X0, 0xE03000
	028 Move X0, [X0+656]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+939], W8
	032 Move X0, X20
	033 Move X1, X31
	034 Call String.GetRawStringData, X0
	035 Move X8, [X21]
	036 Move W20, [X20+16]
	037 Move X21, X0
	038 Move W9, [X8+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 Move X0, X21
	044 Move X1, X20
	045 Move X2, X19
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X30, [X31+48]
	051 Call Boolean.TryParse, X0, X1
	052 Return X0
	053 Move [X19], W31
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move W0, W31
	059 Move X30, [X31+48]
	060 Return X0

Method: System.Boolean TryParse(System.ReadOnlySpan`1<System.Char> value, out System.Boolean result)

Disassembly:
	0x03318AA4 LDR W10, [X9 + 0x18]
	0x03318AA8 CMP W10, 0xD
	0x03318AAC B.LS 0x3319464
	0x03318AB0 LDR X10, [X9 + 0x88]
	0x03318AB4 CMP X10, X21
	0x03318AB8 B.EQ 0x33190A8
	0x03318ABC LDR W10, [X0 + 0xE0]
	0x03318AC0 CBNZ W10, 0x3318AD8
	0x03318AC4 BL 0x1C16DFC
	0x03318AC8 LDR X0, [X23]
	0x03318ACC LDR X8, [X0 + 0xB8]
	0x03318AD0 LDR X9, [X8 + 0x8]
	0x03318AD4 CBZ X9, 0x33193DC
	0x03318AD8 LDR W10, [X9 + 0x18]
	0x03318ADC CMP W10, 0xE
	0x03318AE0 B.LS 0x3319464
	0x03318AE4 LDR X10, [X9 + 0x90]
	0x03318AE8 CMP X10, X21
	0x03318AEC B.EQ 0x331911C
	0x03318AF0 LDR W10, [X0 + 0xE0]
	0x03318AF4 CBNZ W10, 0x3318B0C
	0x03318AF8 BL 0x1C16DFC
	0x03318AFC LDR X0, [X23]
	0x03318B00 LDR X8, [X0 + 0xB8]
	0x03318B04 LDR X9, [X8 + 0x8]
	0x03318B08 CBZ X9, 0x33193DC
	0x03318B0C LDR W10, [X9 + 0x18]
	0x03318B10 CMP W10, 0xF
	0x03318B14 B.LS 0x3319464
	0x03318B18 LDR X10, [X9 + 0x98]
	0x03318B1C CMP X10, X21
	0x03318B20 B.EQ 0x3319198
	0x03318B24 LDR W10, [X0 + 0xE0]
	0x03318B28 CBNZ W10, 0x3318B40
	0x03318B2C BL 0x1C16DFC
	0x03318B30 LDR X0, [X23]
	0x03318B34 LDR X8, [X0 + 0xB8]
	0x03318B38 LDR X9, [X8 + 0x8]
	0x03318B3C CBZ X9, 0x33193DC
	0x03318B40 LDR W10, [X9 + 0x18]
	0x03318B44 CMP W10, 0x10
	0x03318B48 B.LS 0x3319464
	0x03318B4C LDR X10, [X9 + 0xA0]
	0x03318B50 CMP X10, X21
	0x03318B54 B.EQ 0x3319210
	0x03318B58 LDR W10, [X0 + 0xE0]
	0x03318B5C CBNZ W10, 0x3318B74
	0x03318B60 BL 0x1C16DFC
	0x03318B64 LDR X0, [X23]
	0x03318B68 LDR X8, [X0 + 0xB8]
	0x03318B6C LDR X9, [X8 + 0x8]
	0x03318B70 CBZ X9, 0x33193DC
	0x03318B74 LDR W10, [X9 + 0x18]
	0x03318B78 CMP W10, 0x12
	0x03318B7C B.LS 0x3319464
	0x03318B80 LDR X10, [X9 + 0xB0]
	0x03318B84 CMP X10, X21
	0x03318B88 B.EQ 0x3319290
	0x03318B8C LDR W10, [X0 + 0xE0]
	0x03318B90 CBNZ W10, 0x3318BA8
	0x03318B94 BL 0x1C16DFC
	0x03318B98 LDR X0, [X23]
	0x03318B9C LDR X8, [X0 + 0xB8]
	0x03318BA0 LDR X9, [X8 + 0x8]
	0x03318BA4 CBZ X9, 0x33193DC
	0x03318BA8 LDR W10, [X9 + 0x18]
	0x03318BAC CMP W10, 0x1
	0x03318BB0 B.LS 0x3319464
	0x03318BB4 LDR X9, [X9 + 0x28]
	0x03318BB8 CMP X9, X21
	0x03318BBC B.EQ 0x3318EA4
	0x03318BC0 LDR W9, [X0 + 0xE0]
	0x03318BC4 CBNZ W9, 0x3318BD4
	0x03318BC8 BL 0x1C16DFC
	0x03318BCC LDR X8, [X23]
	0x03318BD0 LDR X8, [X8 + 0xB8]
	0x03318BD4 LDR X8, [X8 + 0x10]
	0x03318BD8 CMP X21, X8
	0x03318BDC B.NE 0x33193AC
	0x03318BE0 ADRP X9, 0xDDB000
	0x03318BE4 LDR X9, [X9 + 0xDF8]
	0x03318BE8 LDR X8, [X19]
	0x03318BEC LDR X1, [X9]
	0x03318BF0 LDRB W10, [X8 + 0x130]
	0x03318BF4 LDRB W9, [X1 + 0x130]
	0x03318BF8 CMP W10, W9
	0x03318BFC B.CC 0x3318C14
	0x03318C00 LDR X8, [X8 + 0xC8]
	0x03318C04 ADD X8, X8, X9, 0x3, LSL
	0x03318C08 LDUR X8, [X8 - 0x8]
	0x03318C0C CMP X8, X1
	0x03318C10 B.EQ 0x3318EA4
	0x03318C14 MOV X0, X19
	0x03318C18 BL 0x1C171E0
	0x03318C1C ADRP X10, 0xE0B000
	0x03318C20 LDR X8, [X19]
	0x03318C24 LDR X10, [X10 + 0xE10]
	0x03318C28 LDRH W9, [X8 + 0x12E]
	0x03318C2C LDR X1, [X10]
	0x03318C30 CBZ X9, 0x3318C54
	0x03318C34 LDR X10, [X8 + 0xB0]
	0x03318C38 ADD X10, X10, 0x8
	0x03318C3C LDUR X11, [X10 - 0x8]
	0x03318C40 CMP X11, X1
	0x03318C44 B.EQ 0x3318CF4
	0x03318C48 SUBS X9, X9, 0x1
	0x03318C4C ADD X10, X10, 0x10
	0x03318C50 B.NE 0x3318C3C
	0x03318C54 MOVZ W2, 0x1
	0x03318C58 MOV X0, X19
	0x03318C5C BL 0x1C5C788
	0x03318C60 B 0x3318D04
	0x03318C64 ADRP X10, 0xE0B000
	0x03318C68 LDR X8, [X19]
	0x03318C6C LDR X10, [X10 + 0xE10]
	0x03318C70 LDRH W9, [X8 + 0x12E]
	0x03318C74 LDR X1, [X10]
	0x03318C78 CBZ X9, 0x3318C9C
	0x03318C7C LDR X10, [X8 + 0xB0]
	0x03318C80 ADD X10, X10, 0x8
	0x03318C84 LDUR X11, [X10 - 0x8]
	0x03318C88 CMP X11, X1
	0x03318C8C B.EQ 0x3318D74
	0x03318C90 SUBS X9, X9, 0x1
	0x03318C94 ADD X10, X10, 0x10
	0x03318C98 B.NE 0x3318C84
	0x03318C9C MOVZ W2, 0x2
	0x03318CA0 MOV X0, X19
	0x03318CA4 BL 0x1C5C788
	0x03318CA8 B 0x3318D84
	0x03318CAC ADRP X10, 0xE0B000
	0x03318CB0 LDR X8, [X19]
	0x03318CB4 LDR X10, [X10 + 0xE10]
	0x03318CB8 LDRH W9, [X8 + 0x12E]
	0x03318CBC LDR X1, [X10]
	0x03318CC0 CBZ X9, 0x3318CE4
	0x03318CC4 LDR X10, [X8 + 0xB0]
	0x03318CC8 ADD X10, X10, 0x8
	0x03318CCC LDUR X11, [X10 - 0x8]
	0x03318CD0 CMP X11, X1
	0x03318CD4 B.EQ 0x3318DF0
	0x03318CD8 SUBS X9, X9, 0x1
	0x03318CDC ADD X10, X10, 0x10
	0x03318CE0 B.NE 0x3318CCC
	0x03318CE4 MOVZ W2, 0x3
	0x03318CE8 MOV X0, X19
	0x03318CEC BL 0x1C5C788
	0x03318CF0 B 0x3318E00
	0x03318CF4 LDR W9, [X10]
	0x03318CF8 ADD W9, W9, 0x1
	0x03318CFC ADD X8, X8, W9, 0x4, SXTW
	0x03318D00 ADD X0, X8, 0x138
	0x03318D04 LDP X8, X2, [X0]
	0x03318D08 MOV X0, X19
	0x03318D0C MOV X1, X20
	0x03318D10 BLR X8
	0x03318D14 ADRP X8, 0xDDB000
	0x03318D18 LDR X8, [X8 + 0xB58]
	0x03318D1C AND W9, W0, 0x1
	0x03318D20 STRB W9, [X31 + 0x8]
	0x03318D24 LDR X8, [X8]
	0x03318D28 B 0x3318E94
	0x03318D2C ADRP X10, 0xE0B000
	0x03318D30 LDR X8, [X19]
	0x03318D34 LDR X10, [X10 + 0xE10]
	0x03318D38 LDRH W9, [X8 + 0x12E]
	0x03318D3C LDR X1, [X10]
	0x03318D40 CBZ X9, 0x3318D64
	0x03318D44 LDR X10, [X8 + 0xB0]
	0x03318D48 ADD X10, X10, 0x8
	0x03318D4C LDUR X11, [X10 - 0x8]
	0x03318D50 CMP X11, X1
	0x03318D54 B.EQ 0x3318E64
	0x03318D58 SUBS X9, X9, 0x1
	0x03318D5C ADD X10, X10, 0x10
	0x03318D60 B.NE 0x3318D4C
	0x03318D64 MOVZ W2, 0x4
	0x03318D68 MOV X0, X19
	0x03318D6C BL 0x1C5C788
	0x03318D70 B 0x3318E74
	0x03318D74 LDR W9, [X10]
	0x03318D78 ADD W9, W9, 0x2
	0x03318D7C ADD X8, X8, W9, 0x4, SXTW
	0x03318D80 ADD X0, X8, 0x138
	0x03318D84 LDP X8, X2, [X0]
	0x03318D88 MOV X0, X19
	0x03318D8C MOV X1, X20
	0x03318D90 BLR X8
	0x03318D94 ADRP X8, 0xDDD000
	0x03318D98 LDR X8, [X8 + 0x170]
	0x03318D9C LDR X8, [X8]
	0x03318DA0 STRH W0, [X31 + 0x8]
	0x03318DA4 B 0x3318E94
	0x03318DA8 ADRP X10, 0xE0B000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x10C5000
	011 Move X22, 0xE11000
	012 Move W8, [X23+2978]
	013 Move X22, [X22]
	014 Move X19, X2
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xDDC000
	022 Move X0, [X0+2904]
	023 Call 0x1C17CF4
	024 Move X0, 0xE10000
	025 Move X0, [X0+4088]
	026 Call 0x1C17CF4
	027 Move X0, 0xE11000
	028 Move X0, [X0]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X23+2978], W8
	032 Move X25, 0x10C5000
	033 Move W8, [X25+939]
	034 Move X22, [X22]
	035 Compare W8, 0
	036 JumpIfEqual {44}
	037 Compare X22, 0
	038 JumpIfEqual {51}
	039 Move X0, X22
	040 Move X1, X31
	041 Call String.GetRawStringData, X0
	042 Move W22, [X22+16]
	043 Move X23, X0
	044 Move X0, 0xE03000
	045 Move X0, [X0+656]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X25+939], W8
	049 Compare X22, 0
	050 JumpIfNotEqual {39}
	051 Move X23, X31
	052 Move X26, 0x10C5000
	053 Move W8, [X26+3192]
	054 Compare W8, 0
	055 JumpIfNotEqual {64}
	056 Move X0, 0xE0A000
	057 Move X0, [X0+4048]
	058 Call 0x1C17CF4
	059 Move X0, 0xE0B000
	060 Move X0, [X0+40]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X26+3192], W8
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Compare W22, 0
	066 JumpIfEqual {203}
	067 Move X8, 0xE0A000
	068 Move X8, [X8+4048]
	069 Move X0, [X8]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X0, X23
	075 Move X1, X22
	076 Move X2, X21
	077 Move X3, X20
	078 Move X4, X31
	079 Call CompareInfo.CompareOrdinalIgnoreCase, X0, X1
	080 Compare W0, 0
	081 JumpIfEqual {203}
	082 Move X8, 0xE10000
	083 Move X8, [X8+4088]
	084 Move W9, [X25+939]
	085 Move X24, [X8]
	086 Compare W9, 0
	087 JumpIfEqual {95}
	088 Compare X24, 0
	089 JumpIfEqual {102}
	090 Move X0, X24
	091 Move X1, X31
	092 Call String.GetRawStringData, X0
	093 Move W24, [X24+16]
	094 Move X25, X0
	095 Move X0, 0xE03000
	096 Move X0, [X0+656]
	097 Call 0x1C17CF4
	098 Move W8, 1
	099 Move [X25+939], W8
	100 Compare X24, 0
	101 JumpIfNotEqual {90}
	102 Move X25, X31
	103 Move W8, [X26+3192]
	104 Compare W8, 0
	105 JumpIfNotEqual {114}
	106 Move X0, 0xE0A000
	107 Move X0, [X0+4048]
	108 Call 0x1C17CF4
	109 Move X0, 0xE0B000
	110 Move X0, [X0+40]
	111 Call 0x1C17CF4
	112 Move W8, 1
	113 Move [X26+3192], W8
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Compare W20, 0
	116 JumpIfEqual {204}
	117 Move X8, 0xE0A000
	118 Move X8, [X8+4048]
	119 Move X0, [X8]
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1C17DFC
	124 Move X0, X25
	125 Move X1, X24
	126 Move X2, X21
	127 Move X3, X20
	128 Move X4, X31
	129 Call CompareInfo.CompareOrdinalIgnoreCase, X0, X1
	130 Compare W0, 0
	131 JumpIfEqual {204}
	132 Move X8, 0xDDC000
	133 Move X8, [X8+2904]
	134 Move X0, [X8]
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Move X0, X21
	140 Move X1, X20
	141 Call Boolean.TrimWhiteSpaceAndNull, X0
	142 Move W8, [X26+3192]
	143 Move X20, X0
	144 Move X21, X1
	145 Compare W8, 0
	146 JumpIfNotEqual {155}
	147 Move X0, 0xE0A000
	148 Move X0, [X0+4048]
	149 Call 0x1C17CF4
	150 Move X0, 0xE0B000
	151 Move X0, [X0+40]
	152 Call 0x1C17CF4
	153 Move W8, 1
	154 Move [X26+3192], W8
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Compare W22, 0
	157 JumpIfEqual {203}
	158 Move X8, 0xE0A000
	159 Move X8, [X8+4048]
	160 Move X0, [X8]
	161 Move W8, [X0+224]
	162 Compare W8, 0
	163 JumpIfNotEqual {165}
	164 Call 0x1C17DFC
	165 Move X0, X23
	166 Move X1, X22
	167 Move X2, X20
	168 Move X3, X21
	169 Move X4, X31
	170 Call CompareInfo.CompareOrdinalIgnoreCase, X0, X1
	171 Compare W0, 0
	172 JumpIfEqual {203}
	173 Move W8, [X26+3192]
	174 Compare W8, 0
	175 JumpIfNotEqual {184}
	176 Move X0, 0xE0A000
	177 Move X0, [X0+4048]
	178 Call 0x1C17CF4
	179 Move X0, 0xE0B000
	180 Move X0, [X0+40]
	181 Call 0x1C17CF4
	182 Move W8, 1
	183 Move [X26+3192], W8
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Compare W24, 0
	186 JumpIfEqual {204}
	187 Move X8, 0xE0A000
	188 Move X8, [X8+4048]
	189 Move X0, [X8]
	190 Move W8, [X0+224]
	191 Compare W8, 0
	192 JumpIfNotEqual {194}
	193 Call 0x1C17DFC
	194 Move X0, X25
	195 Move X1, X24
	196 Move X2, X20
	197 Move X3, X21
	198 Move X4, X31
	199 Call CompareInfo.CompareOrdinalIgnoreCase, X0, X1
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move W8, W31
	202 NotImplemented "Instruction CSET not yet implemented."
	203 Move W8, 1
	204 Move W8, W31
	205 Move W0, 1
	206 Move [X19], W8
	207 Move X20, [X31+64]
	208 Move X19, [X31+72]
	209 Move X22, [X31+48]
	210 Move X21, [X31+56]
	211 Move X24, [X31+32]
	212 Move X23, [X31+40]
	213 Move X26, [X31+16]
	214 Move X25, [X31+24]
	215 Move X30, [X31+80]
	216 Return X0
	217 Move W8, W31
	218 Move W0, W31

Method: System.ReadOnlySpan`1<System.Char> TrimWhiteSpaceAndNull(System.ReadOnlySpan`1<System.Char> value)

Disassembly:
	0x03318E68 ADD W9, W9, 0x4
	0x03318E6C ADD X8, X8, W9, 0x4, SXTW
	0x03318E70 ADD X0, X8, 0x138
	0x03318E74 LDP X8, X2, [X0]
	0x03318E78 MOV X0, X19
	0x03318E7C MOV X1, X20
	0x03318E80 BLR X8
	0x03318E84 ADRP X8, 0xDDC000
	0x03318E88 LDR X8, [X8 + 0x9D8]
	0x03318E8C LDR X8, [X8]
	0x03318E90 STRB W0, [X31 + 0x8]
	0x03318E94 ADD X1, X31, 0x8
	0x03318E98 MOV X0, X8
	0x03318E9C BL 0x1C16E04
	0x03318EA0 MOV X19, X0
	0x03318EA4 LDR X8, [X22 + 0x28]
	0x03318EA8 LDR X9, [X31 + 0x18]
	0x03318EAC CMP X8, X9
	0x03318EB0 B.NE 0x3319364
	0x03318EB4 MOV X0, X19
	0x03318EB8 LDP X20, X19, [X31 + 0x50]
	0x03318EBC LDP X22, X21, [X31 + 0x40]
	0x03318EC0 LDP X24, X23, [X31 + 0x30]
	0x03318EC4 LDR X30, [X31 + 0x20]
	0x03318EC8 ADD X31, X31, 0x60
	0x03318ECC RET
	0x03318ED0 ADRP X10, 0xE0B000
	0x03318ED4 LDR X8, [X19]
	0x03318ED8 LDR X10, [X10 + 0xE10]
	0x03318EDC LDRH W9, [X8 + 0x12E]
	0x03318EE0 LDR X1, [X10]
	0x03318EE4 CBZ X9, 0x3318F08
	0x03318EE8 LDR X10, [X8 + 0xB0]
	0x03318EEC ADD X10, X10, 0x8
	0x03318EF0 LDUR X11, [X10 - 0x8]
	0x03318EF4 CMP X11, X1
	0x03318EF8 B.EQ 0x3319000
	0x03318EFC SUBS X9, X9, 0x1
	0x03318F00 ADD X10, X10, 0x10
	0x03318F04 B.NE 0x3318EF0
	0x03318F08 MOVZ W2, 0x7
	0x03318F0C MOV X0, X19
	0x03318F10 BL 0x1C5C788
	0x03318F14 B 0x3319010
	0x03318F18 LDR W9, [X10]
	0x03318F1C ADD W9, W9, 0x5
	0x03318F20 ADD X8, X8, W9, 0x4, SXTW
	0x03318F24 ADD X0, X8, 0x138
	0x03318F28 LDP X8, X2, [X0]
	0x03318F2C MOV X0, X19
	0x03318F30 MOV X1, X20
	0x03318F34 BLR X8
	0x03318F38 ADRP X8, 0xDDF000
	0x03318F3C LDR X8, [X8 + 0x628]
	0x03318F40 B 0x3318D9C
	0x03318F44 ADRP X10, 0xE0B000
	0x03318F48 LDR X8, [X19]
	0x03318F4C LDR X10, [X10 + 0xE10]
	0x03318F50 LDRH W9, [X8 + 0x12E]
	0x03318F54 LDR X1, [X10]
	0x03318F58 CBZ X9, 0x3318F7C
	0x03318F5C LDR X10, [X8 + 0xB0]
	0x03318F60 ADD X10, X10, 0x8
	0x03318F64 LDUR X11, [X10 - 0x8]
	0x03318F68 CMP X11, X1
	0x03318F6C B.EQ 0x3319074
	0x03318F70 SUBS X9, X9, 0x1
	0x03318F74 ADD X10, X10, 0x10
	0x03318F78 B.NE 0x3318F64
	0x03318F7C MOVZ W2, 0x8
	0x03318F80 MOV X0, X19
	0x03318F84 BL 0x1C5C788
	0x03318F88 B 0x3319084
	0x03318F8C LDR W9, [X10]
	0x03318F90 ADD W9, W9, 0x6
	0x03318F94 ADD X8, X8, W9, 0x4, SXTW
	0x03318F98 ADD X0, X8, 0x138
	0x03318F9C LDP X8, X2, [X0]
	0x03318FA0 MOV X0, X19
	0x03318FA4 MOV X1, X20
	0x03318FA8 BLR X8
	0x03318FAC ADRP X8, 0xDE0000
	0x03318FB0 LDR X8, [X8 + 0x658]
	0x03318FB4 B 0x3318D9C
	0x03318FB8 ADRP X10, 0xE0B000
	0x03318FBC LDR X8, [X19]
	0x03318FC0 LDR X10, [X10 + 0xE10]
	0x03318FC4 LDRH W9, [X8 + 0x12E]
	0x03318FC8 LDR X1, [X10]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x10C5000
	011 Move W8, [X21+2979]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xDDE000
	019 Move X0, [X0+368]
	020 Call 0x1C17CF4
	021 Move X0, 0xE0F000
	022 Move X0, [X0+3472]
	023 Call 0x1C17CF4
	024 Move X0, 0xE0B000
	025 Move X0, [X0+40]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2979], W8
	029 Move X24, 0xDDE000
	030 Move X24, [X24+368]
	031 Subtract W23, W20, 1
	032 Move X22, X31
	033 And X25, X20, 0
	034 Move X0, [X24]
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move W0, W21
	041 Call Char.IsWhiteSpace, X0
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {49}
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Compare W8, 0
	048 JumpIfNotEqual {53}
	049 Add X22, X22, 1
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W22, W20
	052 Move W22, W31
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X25, W23
	055 And X26, X20, 0
	056 Subtract W23, W22, 1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X0, [X24]
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move W0, W21
	065 Call Char.IsWhiteSpace, X0
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {73}
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Compare W8, 0
	072 JumpIfNotEqual {75}
	073 Subtract X25, X25, 1
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move W23, W25
	076 Move X8, 0xE0F000
	077 Move X8, [X8+3472]
	078 Subtract W9, W23, W22
	079 Move X21, [X8]
	080 Subtract W8, W20, W22
	081 Add W20, W9, 1
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X0, X31
	084 Call ThrowHelper.ThrowArgumentOutOfRangeException
	085 Move X0, [X21+32]
	086 Move W8, [X0+309]
	087 Move TEMP, X8
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {92}
	091 Call 0x1C5D684
	092 Add X0, X19, W22
	093 Move W1, W20
	094 Move X20, [X31+64]
	095 Move X19, [X31+72]
	096 Move X22, [X31+48]
	097 Move X21, [X31+56]
	098 Move X24, [X31+32]
	099 Move X23, [X31+40]
	100 Move X26, [X31+16]
	101 Move X25, [X31+24]
	102 Move X30, [X31+80]
	103 Return X0
	104 Call 0x1C17F28

Method: System.TypeCode GetTypeCode()

Disassembly:
	0x03319084 LDP X8, X2, [X0]
	0x03319088 MOV X0, X19

ISIL:
	001 Move W0, 3
	002 Return X0

Method: System.Boolean System.IConvertible.ToBoolean(System.IFormatProvider provider)

Disassembly:
	0x0331908C MOV X1, X20
	0x03319090 BLR X8
	0x03319094 ADRP X8, 0xDE2000
	0x03319098 LDR X8, [X8 + 0x720]

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Char System.IConvertible.ToChar(System.IFormatProvider provider)

Disassembly:
	0x0331909C LDR X8, [X8]
	0x033190A0 STR W0, [X31 + 0x8]
	0x033190A4 B 0x3318E94
	0x033190A8 ADRP X10, 0xE0A000
	0x033190AC LDR X8, [X19]
	0x033190B0 LDR X10, [X10 + 0xE10]
	0x033190B4 LDRH W9, [X8 + 0x12E]
	0x033190B8 LDR X1, [X10]
	0x033190BC CBZ X9, 0x33190E0
	0x033190C0 LDR X10, [X8 + 0xB0]
	0x033190C4 ADD X10, X10, 0x8
	0x033190C8 LDUR X11, [X10 - 0x8]
	0x033190CC CMP X11, X1
	0x033190D0 B.EQ 0x33191E0
	0x033190D4 SUBS X9, X9, 0x1
	0x033190D8 ADD X10, X10, 0x10
	0x033190DC B.NE 0x33190C8
	0x033190E0 MOVZ W2, 0xB
	0x033190E4 MOV X0, X19
	0x033190E8 BL 0x1C5C788
	0x033190EC B 0x33191F0
	0x033190F0 LDR W9, [X10]
	0x033190F4 ADD W9, W9, 0x9
	0x033190F8 ADD X8, X8, W9, 0x4, SXTW
	0x033190FC ADD X0, X8, 0x138
	0x03319100 LDP X8, X2, [X0]
	0x03319104 MOV X0, X19
	0x03319108 MOV X1, X20
	0x0331910C BLR X8
	0x03319110 ADRP X8, 0xDDC000
	0x03319114 LDR X8, [X8 + 0xA60]
	0x03319118 B 0x331918C
	0x0331911C ADRP X10, 0xE0A000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xE10000
	005 Move X0, [X0+48]
	006 Call 0x1C17D08
	007 Move X19, X0
	008 Move X0, 0xE0D000
	009 Move X0, [X0+168]
	010 Call 0x1C17D08
	011 Move X20, X0
	012 Move X0, 0xE0D000
	013 Move X0, [X0+224]
	014 Call 0x1C17D08
	015 Move X2, X0
	016 Move X0, X19
	017 Move X1, X20
	018 Move X3, X31
	019 Call SR.Format, X0, X1, X2
	020 Move X19, X0
	021 Move X0, 0xDE3000
	022 Move X0, [X0+3080]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X2, X31
	027 Move X20, X0
	028 Call InvalidCastException..ctor, X0, X1
	029 Move X0, 0xE10000
	030 Move X0, [X0+56]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X20
	034 Call 0x1C17DEC

Method: System.SByte System.IConvertible.ToSByte(System.IFormatProvider provider)

Disassembly:
	0x03319120 LDR X8, [X19]
	0x03319124 LDR X10, [X10 + 0xE10]
	0x03319128 LDRH W9, [X8 + 0x12E]
	0x0331912C LDR X1, [X10]
	0x03319130 CBZ X9, 0x3319154
	0x03319134 LDR X10, [X8 + 0xB0]
	0x03319138 ADD X10, X10, 0x8
	0x0331913C LDUR X11, [X10 - 0x8]
	0x03319140 CMP X11, X1
	0x03319144 B.EQ 0x3319258
	0x03319148 SUBS X9, X9, 0x1
	0x0331914C ADD X10, X10, 0x10
	0x03319150 B.NE 0x331913C
	0x03319154 MOVZ W2, 0xC
	0x03319158 MOV X0, X19
	0x0331915C BL 0x1C5C788
	0x03319160 B 0x3319268
	0x03319164 LDR W9, [X10]
	0x03319168 ADD W9, W9, 0xA
	0x0331916C ADD X8, X8, W9, 0x4, SXTW
	0x03319170 ADD X0, X8, 0x138
	0x03319174 LDP X8, X2, [X0]
	0x03319178 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C4000
	006 Move X20, 0xDE4000
	007 Move W8, [X21+2980]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDE4000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2980], W8
	019 Move X0, [X20]
	020 Move W19, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 NotImplemented "Instruction CSET not yet implemented."
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Byte System.IConvertible.ToByte(System.IFormatProvider provider)

Disassembly:
	0x03319184 ADRP X8, 0xDDB000
	0x03319188 LDR X8, [X8 + 0x758]
	0x0331918C LDR X8, [X8]
	0x03319190 STR X0, [X31 + 0x8]
	0x03319194 B 0x3318E94
	0x03319198 ADRP X10, 0xE0A000
	0x0331919C LDR X8, [X19]
	0x033191A0 LDR X10, [X10 + 0xE10]
	0x033191A4 LDRH W9, [X8 + 0x12E]
	0x033191A8 LDR X1, [X10]
	0x033191AC CBZ X9, 0x33191D0
	0x033191B0 LDR X10, [X8 + 0xB0]
	0x033191B4 ADD X10, X10, 0x8
	0x033191B8 LDUR X11, [X10 - 0x8]
	0x033191BC CMP X11, X1
	0x033191C0 B.EQ 0x33192D8
	0x033191C4 SUBS X9, X9, 0x1
	0x033191C8 ADD X10, X10, 0x10
	0x033191CC B.NE 0x33191B8
	0x033191D0 MOVZ W2, 0xD
	0x033191D4 MOV X0, X19
	0x033191D8 BL 0x1C5C788
	0x033191DC B 0x33192E8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C4000
	006 Move X20, 0xDE4000
	007 Move W8, [X21+2981]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDE4000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2981], W8
	019 Move X0, [X20]
	020 Move W19, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 NotImplemented "Instruction CSET not yet implemented."
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Int16 System.IConvertible.ToInt16(System.IFormatProvider provider)

Disassembly:
	0x033191E8 ADD X8, X8, W9, 0x4, SXTW
	0x033191EC ADD X0, X8, 0x138
	0x033191F0 LDP X8, X2, [X0]
	0x033191F4 MOV X0, X19
	0x033191F8 MOV X1, X20
	0x033191FC BLR X8
	0x03319200 ADRP X8, 0xDDA000
	0x03319204 LDR X8, [X8 + 0xA90]
	0x03319208 STR S0, [X31 + 0x8]
	0x0331920C B 0x3319284
	0x03319210 ADRP X10, 0xE0A000
	0x03319214 LDR X8, [X19]
	0x03319218 LDR X10, [X10 + 0xE10]
	0x0331921C LDRH W9, [X8 + 0x12E]
	0x03319220 LDR X1, [X10]
	0x03319224 CBZ X9, 0x3319248
	0x03319228 LDR X10, [X8 + 0xB0]
	0x0331922C ADD X10, X10, 0x8
	0x03319230 LDUR X11, [X10 - 0x8]
	0x03319234 CMP X11, X1
	0x03319238 B.EQ 0x3319308
	0x0331923C SUBS X9, X9, 0x1
	0x03319240 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C4000
	006 Move X20, 0xDE4000
	007 Move W8, [X21+2982]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDE4000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2982], W8
	019 Move X0, [X20]
	020 Move W19, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 NotImplemented "Instruction CSET not yet implemented."
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.UInt16 System.IConvertible.ToUInt16(System.IFormatProvider provider)

Disassembly:
	0x0331924C MOV X0, X19
	0x03319250 BL 0x1C5C788
	0x03319254 B 0x3319318
	0x03319258 LDR W9, [X10]
	0x0331925C ADD W9, W9, 0xC
	0x03319260 ADD X8, X8, W9, 0x4, SXTW
	0x03319264 ADD X0, X8, 0x138
	0x03319268 LDP X8, X2, [X0]
	0x0331926C MOV X0, X19
	0x03319270 MOV X1, X20
	0x03319274 BLR X8
	0x03319278 ADRP X8, 0xDDD000
	0x0331927C LDR X8, [X8 + 0x978]
	0x03319280 STR D0, [X31 + 0x8]
	0x03319284 LDR X0, [X8]
	0x03319288 ADD X1, X31, 0x8
	0x0331928C B 0x3318E9C
	0x03319290 ADRP X10, 0xE0A000
	0x03319294 LDR X8, [X19]
	0x03319298 LDR X10, [X10 + 0xE10]
	0x0331929C LDRH W9, [X8 + 0x12E]
	0x033192A0 LDR X1, [X10]
	0x033192A4 CBZ X9, 0x33192C8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C4000
	006 Move X20, 0xDE4000
	007 Move W8, [X21+2983]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDE4000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2983], W8
	019 Move X0, [X20]
	020 Move W19, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 NotImplemented "Instruction CSET not yet implemented."
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Int32 System.IConvertible.ToInt32(System.IFormatProvider provider)

Disassembly:
	0x033192B0 LDUR X11, [X10 - 0x8]
	0x033192B4 CMP X11, X1
	0x033192B8 B.EQ 0x3319334
	0x033192BC SUBS X9, X9, 0x1
	0x033192C0 ADD X10, X10, 0x10
	0x033192C4 B.NE 0x33192B0
	0x033192C8 MOVZ W2, 0xF
	0x033192CC MOV X0, X19
	0x033192D0 BL 0x1C5C788
	0x033192D4 B 0x3319344
	0x033192D8 LDR W9, [X10]
	0x033192DC ADD W9, W9, 0xD
	0x033192E0 ADD X8, X8, W9, 0x4, SXTW
	0x033192E4 ADD X0, X8, 0x138
	0x033192E8 LDP X8, X2, [X0]
	0x033192EC MOV X0, X19
	0x033192F0 MOV X1, X20
	0x033192F4 BLR X8
	0x033192F8 ADRP X8, 0xE02000
	0x033192FC LDR X8, [X8 + 0x5F0]
	0x03319300 STP X0, X1, [X31 + 0x8]
	0x03319304 B 0x3318D24
	0x03319308 LDR W9, [X10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C4000
	006 Move X20, 0xDE4000
	007 Move W8, [X21+2984]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDE4000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2984], W8
	019 Move X0, [X20]
	020 Move W19, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 NotImplemented "Instruction CSET not yet implemented."
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.UInt32 System.IConvertible.ToUInt32(System.IFormatProvider provider)

Disassembly:
	0x03319314 ADD X0, X8, 0x138
	0x03319318 LDP X8, X2, [X0]
	0x0331931C MOV X0, X19
	0x03319320 MOV X1, X20
	0x03319324 BLR X8
	0x03319328 ADRP X8, 0xDDB000
	0x0331932C LDR X8, [X8 + 0x9F0]
	0x03319330 B 0x331918C
	0x03319334 LDR W9, [X10]
	0x03319338 ADD W9, W9, 0xF
	0x0331933C ADD X8, X8, W9, 0x4, SXTW
	0x03319340 ADD X0, X8, 0x138
	0x03319344 LDP X8, X2, [X0]
	0x03319348 MOV X0, X19
	0x0331934C MOV X1, X20
	0x03319350 BLR X8
	0x03319354 LDR X8, [X22 + 0x28]
	0x03319358 LDR X9, [X31 + 0x18]
	0x0331935C CMP X8, X9
	0x03319360 B.EQ 0x3318EB8
	0x03319364 BL 0x3EB1B20
	0x03319368 ADRP X0, 0xDDF000
	0x0331936C LDR X0, [X0 + 0x528]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C4000
	006 Move X20, 0xDE4000
	007 Move W8, [X21+2985]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDE4000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2985], W8
	019 Move X0, [X20]
	020 Move W19, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 NotImplemented "Instruction CSET not yet implemented."
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Int64 System.IConvertible.ToInt64(System.IFormatProvider provider)

Disassembly:
	0x03319378 MOV X19, X0
	0x0331937C ADRP X0, 0xE0F000
	0x03319380 LDR X0, [X0 + 0x48]
	0x03319384 BL 0x1C16D08
	0x03319388 MOV X1, X0
	0x0331938C MOV X0, X19
	0x03319390 BL 0x330E100
	0x03319394 ADRP X0, 0xE0F000
	0x03319398 LDR X0, [X0 + 0x50]
	0x0331939C BL 0x1C16D08
	0x033193A0 MOV X1, X0
	0x033193A4 MOV X0, X19
	0x033193A8 BL 0x1C16DEC
	0x033193AC ADRP X0, 0xDE3000
	0x033193B0 LDR X0, [X0 + 0x9E8]
	0x033193B4 BL 0x1C16D08
	0x033193B8 LDR W8, [X0 + 0xE0]
	0x033193BC CBNZ W8, 0x33193C4
	0x033193C0 BL 0x1C16DFC
	0x033193C4 ADRP X0, 0xDE3000
	0x033193C8 LDR X0, [X0 + 0x9E8]
	0x033193CC BL 0x1C16D08
	0x033193D0 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C4000
	006 Move X20, 0xDE4000
	007 Move W8, [X21+2986]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDE4000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2986], W8
	019 Move X0, [X20]
	020 Move W19, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 NotImplemented "Instruction CSET not yet implemented."
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.UInt64 System.IConvertible.ToUInt64(System.IFormatProvider provider)

Disassembly:
	0x033193DC BL 0x1C16F20
	0x033193E0 LDR W9, [X8 + 0x18]
	0x033193E4 CMP W9, 0x2
	0x033193E8 B.LS 0x3319464
	0x033193EC LDR X8, [X8 + 0x30]
	0x033193F0 CMP X8, X21
	0x033193F4 B.NE 0x331942C
	0x033193F8 ADRP X0, 0xDE2000
	0x033193FC LDR X0, [X0 + 0xC08]
	0x03319400 BL 0x1C16D08
	0x03319404 BL 0x1C16F10
	0x03319408 MOV X19, X0
	0x0331940C ADRP X0, 0xE0F000
	0x03319410 LDR X0, [X0 + 0x58]
	0x03319414 BL 0x1C16D08
	0x03319418 MOV X1, X0
	0x0331941C MOV X0, X19
	0x03319420 MOV X2, X31
	0x03319424 BL 0x337B498
	0x03319428 B 0x3319394
	0x0331942C ADRP X0, 0xDE3000
	0x03319430 LDR X0, [X0 + 0x9E8]
	0x03319434 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C4000
	006 Move X20, 0xDE4000
	007 Move W8, [X21+2987]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDE4000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2987], W8
	019 Move X0, [X20]
	020 Move W19, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 NotImplemented "Instruction CSET not yet implemented."
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Single System.IConvertible.ToSingle(System.IFormatProvider provider)

Disassembly:
	0x03319440 BL 0x1C16DFC
	0x03319444 ADRP X0, 0xDE3000
	0x03319448 LDR X0, [X0 + 0x9E8]
	0x0331944C BL 0x1C16D08
	0x03319450 LDR X8, [X0 + 0xB8]
	0x03319454 LDR X8, [X8 + 0x8]
	0x03319458 CBZ X8, 0x33193DC
	0x0331945C LDR W9, [X8 + 0x18]
	0x03319460 CBNZ W9, 0x3319468
	0x03319464 BL 0x1C16F28
	0x03319468 LDR X8, [X8 + 0x20]
	0x0331946C CMP X8, X21
	0x03319470 B.NE 0x3319494
	0x03319474 ADRP X0, 0xDE2000
	0x03319478 LDR X0, [X0 + 0xC08]
	0x0331947C BL 0x1C16D08
	0x03319480 BL 0x1C16F10
	0x03319484 MOV X19, X0
	0x03319488 ADRP X0, 0xE0F000
	0x0331948C LDR X0, [X0 + 0x60]
	0x03319490 B 0x3319414
	0x03319494 MOV X0, X19
	0x03319498 BL 0x19903C0
	0x0331949C MOV X0, X19
	0x033194A0 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C4000
	006 Move X20, 0xDE4000
	007 Move W8, [X21+2988]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDE4000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2988], W8
	019 Move X0, [X20]
	020 Move W19, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move S0, 1
	029 Move S1, W31
	030 NotImplemented "Instruction FCSEL not yet implemented."
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return V0

Method: System.Double System.IConvertible.ToDouble(System.IFormatProvider provider)

Disassembly:
	0x033194B8 LDR X9, [X8 + 0x2E8]
	0x033194BC LDR X1, [X8 + 0x2F0]
	0x033194C0 BLR X9
	0x033194C4 MOV X19, X0
	0x033194C8 MOV X0, X21
	0x033194CC BL 0x19903C0
	0x033194D0 LDR X8, [X21]
	0x033194D4 MOV X0, X21
	0x033194D8 LDR X9, [X8 + 0x2E8]
	0x033194DC LDR X1, [X8 + 0x2F0]
	0x033194E0 BLR X9
	0x033194E4 MOV X20, X0
	0x033194E8 ADRP X0, 0xE0F000
	0x033194EC LDR X0, [X0 + 0x30]
	0x033194F0 BL 0x1C16D08
	0x033194F4 MOV X1, X19
	0x033194F8 MOV X2, X20
	0x033194FC MOV X3, X31
	0x03319500 BL 0x3227BD4
	0x03319504 MOV X19, X0
	0x03319508 ADRP X0, 0xDE2000
	0x0331950C LDR X0, [X0 + 0xC08]
	0x03319510 BL 0x1C16D08
	0x03319514 BL 0x1C16F10
	0x03319518 MOV X1, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C4000
	006 Move X20, 0xDE4000
	007 Move W8, [X21+2989]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDE4000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2989], W8
	019 Move X0, [X20]
	020 Move W19, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move D0, 1
	029 Move D1, X31
	030 NotImplemented "Instruction FCSEL not yet implemented."
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return V0

Method: System.Decimal System.IConvertible.ToDecimal(System.IFormatProvider provider)

Disassembly:
	0x03319530 BL 0x1C16D08
	0x03319534 MOV X1, X0
	0x03319538 MOV X0, X20
	0x0331953C BL 0x1C16DEC
	0x03319540 STR X30, [X31 - 0x30]!
	0x03319544 STP X22, X21, [X31 + 0x10]
	0x03319548 STP X20, X19, [X31 + 0x20]
	0x0331954C ADRP X22, 0x10C3000
	0x03319550 ADRP X21, 0xE0F000
	0x03319554 ADRP X20, 0xDDA000
	0x03319558 ADRP X19, 0xE0E000
	0x0331955C LDRB W8, [X22 + 0xBB0]
	0x03319560 LDR X21, [X21]
	0x03319564 LDR X20, [X20 + 0xB58]
	0x03319568 LDR X19, [X19 + 0xFF8]
	0x0331956C TBNZ X8, 0x0, 0x331959C
	0x03319570 ADRP X0, 0xDDA000
	0x03319574 LDR X0, [X0 + 0xB58]
	0x03319578 BL 0x1C16CF4
	0x0331957C ADRP X0, 0xE0E000
	0x03319580 LDR X0, [X0 + 0xFF8]
	0x03319584 BL 0x1C16CF4
	0x03319588 ADRP X0, 0xE0F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x10C4000
	006 Move X20, 0xDE4000
	007 Move W8, [X21+2990]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDE4000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2990], W8
	019 Move X0, [X20]
	020 Move W19, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 NotImplemented "Instruction CSET not yet implemented."
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]

Method: System.DateTime System.IConvertible.ToDateTime(System.IFormatProvider provider)

Disassembly:
	0x033195E4 TBNZ X8, 0x0, 0x33195FC
	0x033195E8 ADRP X0, 0xDDB000
	0x033195EC LDR X0, [X0 + 0x9D8]
	0x033195F0 BL 0x1C16CF4
	0x033195F4 MOVZ W8, 0x1
	0x033195F8 STRB W8, [X21 + 0xBB1]
	0x033195FC CBZ X19, 0x3319630
	0x03319600 ADRP X8, 0xDDB000
	0x03319604 LDR X8, [X8 + 0x9D8]
	0x03319608 LDR X9, [X19]
	0x0331960C LDR X8, [X8]
	0x03319610 CMP X9, X8
	0x03319614 B.NE 0x3319640
	0x03319618 LDRB W20, [X20]
	0x0331961C MOV X0, X19
	0x03319620 BL 0x1C16E08
	0x03319624 LDRB W8, [X0]
	0x03319628 SUB W0, W20, W8
	0x0331962C B 0x3319634
	0x03319630 MOVZ W0, 0x1
	0x03319634 LDP X20, X19, [X31 + 0x10]
	0x03319638 LDP X30, X21, [X31], #0x20
	0x0331963C RET
	0x03319640 ADRP X0, 0xDE2000
	0x03319644 LDR X0, [X0 + 0x578]
	0x03319648 BL 0x1C16D08
	0x0331964C BL 0x1C16F10
	0x03319650 MOV X19, X0
	0x03319654 ADRP X0, 0xE0F000
	0x03319658 LDR X0, [X0 + 0x68]
	0x0331965C BL 0x1C16D08
	0x03319660 MOV X1, X0
	0x03319664 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0xE10000
	005 Move X0, [X0+48]
	006 Call 0x1C17D08
	007 Move X19, X0
	008 Move X0, 0xE0D000
	009 Move X0, [X0+168]
	010 Call 0x1C17D08
	011 Move X20, X0
	012 Move X0, 0xE0D000
	013 Move X0, [X0+152]
	014 Call 0x1C17D08
	015 Move X2, X0
	016 Move X0, X19
	017 Move X1, X20
	018 Move X3, X31
	019 Call SR.Format, X0, X1, X2
	020 Move X19, X0
	021 Move X0, 0xDE3000
	022 Move X0, [X0+3080]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move X2, X31
	027 Move X20, X0
	028 Call InvalidCastException..ctor, X0, X1
	029 Move X0, 0xE10000
	030 Move X0, [X0+64]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X20
	034 Call 0x1C17DEC

Method: System.Object System.IConvertible.ToType(System.Type type, System.IFormatProvider provider)

Disassembly:
	0x03319668 BL 0x3314A68
	0x0331966C ADRP X0, 0xE0F000
	0x03319670 LDR X0, [X0 + 0x70]
	0x03319674 BL 0x1C16D08
	0x03319678 MOV X1, X0
	0x0331967C MOV X0, X19
	0x03319680 BL 0x1C16DEC
	0x03319684 LDRB W8, [X0]
	0x03319688 SUB W0, W8, W1, UXTB
	0x0331968C RET
	0x03319690 STP X30, X21, [X31 - 0x20]!
	0x03319694 STP X20, X19, [X31 + 0x10]
	0x03319698 ADRP X21, 0x10C3000
	0x0331969C LDRB W8, [X21 + 0xBB2]
	0x033196A0 MOV X19, X1
	0x033196A4 MOV X20, X0
	0x033196A8 TBNZ X8, 0x0, 0x33196C0
	0x033196AC ADRP X0, 0xDDB000
	0x033196B0 LDR X0, [X0 + 0x9D8]
	0x033196B4 BL 0x1C16CF4
	0x033196B8 MOVZ W8, 0x1
	0x033196BC STRB W8, [X21 + 0xBB2]
	0x033196C0 CBZ X19, 0x33196DC
	0x033196C4 ADRP X8, 0xDDB000
	0x033196C8 LDR X8, [X8 + 0x9D8]
	0x033196CC LDR X9, [X19]
	0x033196D0 LDR X8, [X8]
	0x033196D4 CMP X9, X8
	0x033196D8 B.EQ 0x33196E4
	0x033196DC MOV W0, W31
	0x033196E0 B 0x33196FC
	0x033196E4 LDRB W20, [X20]
	0x033196E8 MOV X0, X19
	0x033196EC BL 0x1C16E08
	0x033196F0 LDRB W8, [X0]
	0x033196F4 CMP W20, W8
	0x033196F8 CSET W0, EQ
	0x033196FC LDP X20, X19, [X31 + 0x10]
	0x03319700 LDP X30, X21, [X31], #0x20
	0x03319704 RET
	0x03319708 LDRB W8, [X0]
	0x0331970C CMP W8, W1, UXTB
	0x03319710 CSET W0, EQ
	0x03319714 RET

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x10C4000
	009 Move X23, 0xDDB000
	010 Move X22, 0xDE4000
	011 Move W8, [X24+2991]
	012 Move X23, [X23+2904]
	013 Move X22, [X22+2536]
	014 Move X19, X2
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xDDB000
	022 Move X0, [X0+2904]
	023 Call 0x1C17CF4
	024 Move X0, 0xDE4000
	025 Move X0, [X0+2536]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+2991], W8
	029 Move W8, [X21]
	030 Move X0, [X23]
	031 Add X1, X31, 12
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSET not yet implemented."
	034 Move [X31+12], W8
	035 Call 0x1C17E04
	036 Move X8, [X22]
	037 Move X21, X0
	038 Move W9, [X8+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 Move X0, X21
	044 Move X1, X20
	045 Move X2, X19
	046 Call Convert.DefaultToType, X0, X1, X2
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X24, [X31+16]
	052 Move X23, [X31+24]
	053 Move X30, [X31+64]
	054 Return X0

Method: System.Void .cctor()

Disassembly:
	0x0331A540 MOV X1, X20
	0x0331A544 MOV X2, X19
	0x0331A548 BL 0x3318718
	0x0331A54C LDP X20, X19, [X31 + 0x30]
	0x0331A550 LDP X22, X21, [X31 + 0x20]
	0x0331A554 LDP X24, X23, [X31 + 0x10]
	0x0331A558 LDR X30, [X31], #0x40
	0x0331A55C RET
	0x0331A560 STR X30, [X31 - 0x20]!
	0x0331A564 STP X20, X19, [X31 + 0x10]
	0x0331A568 AND W20, W1, 0x1
	0x0331A56C MOV X1, X31
	0x0331A570 MOV X19, X0
	0x0331A574 BL 0x33A51F0
	0x0331A578 STRB W20, [X19 + 0x10]
	0x0331A57C LDP X20, X19, [X31 + 0x10]
	0x0331A580 LDR X30, [X31], #0x20
	0x0331A584 RET
	0x0331A588 AND W8, W0, 0xFFFF
	0x0331A58C CMP W8, 0x100
	0x0331A590 CSET W0, CC
	0x0331A594 RET
	0x0331A598 AND W8, W0, 0xFFFF
	0x0331A59C CMP W8, 0x80
	0x0331A5A0 CSET W0, CC
	0x0331A5A4 RET
	0x0331A5A8 STP X30, X21, [X31 - 0x20]!
	0x0331A5AC STP X20, X19, [X31 + 0x10]
	0x0331A5B0 ADRP X21, 0x10C2000
	0x0331A5B4 ADRP X20, 0xDDB000
	0x0331A5B8 LDRB W8, [X21 + 0xBC7]
	0x0331A5BC LDR X20, [X20 + 0x170]
	0x0331A5C0 MOV W19, W0
	0x0331A5C4 TBNZ X8, 0x0, 0x331A5DC
	0x0331A5C8 ADRP X0, 0xDDB000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x10C3000
	007 Move X21, 0xE0F000
	008 Move X20, 0xDDA000
	009 Move X19, 0xE0E000
	010 Move W8, [X22+2992]
	011 Move X21, [X21]
	012 Move X20, [X20+2904]
	013 Move X19, [X19+4088]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xDDA000
	019 Move X0, [X0+2904]
	020 Call 0x1C17CF4
	021 Move X0, 0xE0E000
	022 Move X0, [X0+4088]
	023 Call 0x1C17CF4
	024 Move X0, 0xE0F000
	025 Move X0, [X0]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+2992], W8
	029 Move X8, [X20]
	030 Move X9, [X21]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X8, [X8+184]
	034 Move [X8], X9
	035 Move X8, [X20]
	036 Move X9, [X19]
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X8, [X8+184]
	040 Move [X8+8], X9
	041 Move X30, [X31+48]
	042 Return 

