Type: System.RuntimeMethodHandle

Method: System.Void .ctor(System.IntPtr v)

Disassembly:
	0x033CC954 MOV X0, X8
	0x033CC958 BL 0x1C16E04

ISIL:
	001 Move [X0], X1
	002 Return 

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x033CC95C LDR X8, [X22]
	0x033CC960 MOV X2, X0
	0x033CC964 MOV X1, X20
	0x033CC968 MOV X3, X19
	0x033CC96C MOV X0, X8
	0x033CC970 MOV X4, X31
	0x033CC974 BL 0x3227C18
	0x033CC978 MOV X1, X31
	0x033CC97C MOV X21, X0
	0x033CC980 BL 0x32E57A8
	0x033CC984 TBZ X0, 0x0, 0x33CC990
	0x033CC988 MOV X0, X21
	0x033CC98C B 0x33CC9EC
	0x033CC990 MOVZ W2, 0x1
	0x033CC994 MOV X0, X19
	0x033CC998 MOV W1, W31
	0x033CC99C MOV X3, X31
	0x033CC9A0 BL 0x3228DE4
	0x033CC9A4 ADRP X8, 0xD4E000
	0x033CC9A8 LDR X8, [X8 + 0x1D0]
	0x033CC9AC MOV X21, X0
	0x033CC9B0 LDR X8, [X8]
	0x033CC9B4 LDR W9, [X8 + 0xE0]
	0x033CC9B8 CBNZ W9, 0x33CC9C4
	0x033CC9BC MOV X0, X8
	0x033CC9C0 BL 0x1C16DFC
	0x033CC9C4 MOV X0, X20
	0x033CC9C8 MOV X1, X21
	0x033CC9CC MOV X2, X19
	0x033CC9D0 MOV X3, X31
	0x033CC9D4 BL 0x32FE7B4
	0x033CC9D8 MOV X1, X31
	0x033CC9DC MOV X19, X0
	0x033CC9E0 BL 0x32E57A8
	0x033CC9E4 ANDS W31, W0, 0x1
	0x033CC9E8 CSEL X0, X19, X31, NE
	0x033CC9EC LDP X20, X19, [X31 + 0x20]
	0x033CC9F0 LDP X22, X21, [X31 + 0x10]
	0x033CC9F4 LDR X30, [X31], #0x30
	0x033CC9F8 RET
	0x033CC9FC BL 0x1C16F20
	0x033CCA00 STR X30, [X31 - 0x40]!
	0x033CCA04 STP X24, X23, [X31 + 0x10]
	0x033CCA08 STP X22, X21, [X31 + 0x20]
	0x033CCA0C STP X20, X19, [X31 + 0x30]
	0x033CCA10 ADRP X20, 0x1011000
	0x033CCA14 LDRB W8, [X20 + 0x2A1]
	0x033CCA18 MOV X19, X0
	0x033CCA1C TBNZ X8, 0x0, 0x33CCA4C
	0x033CCA20 ADRP X0, 0xD29000
	0x033CCA24 LDR X0, [X0 + 0x278]
	0x033CCA28 BL 0x1C16CF4
	0x033CCA2C ADRP X0, 0xD5B000
	0x033CCA30 LDR X0, [X0 + 0x7C0]
	0x033CCA34 BL 0x1C16CF4
	0x033CCA38 ADRP X0, 0xD60000
	0x033CCA3C LDR X0, [X0 + 0xAB0]
	0x033CCA40 BL 0x1C16CF4
	0x033CCA44 MOVZ W8, 0x1
	0x033CCA48 STRB W8, [X20 + 0x2A1]
	0x033CCA4C CBZ X19, 0x33CCB54
	0x033CCA50 ADRP X8, 0xD29000
	0x033CCA54 LDR X8, [X8 + 0x278]
	0x033CCA58 MOV X0, X19
	0x033CCA5C MOV X2, X31
	0x033CCA60 LDR X8, [X8]
	0x033CCA64 LDR X8, [X8 + 0xB8]
	0x033CCA68 LDR X1, [X8]
	0x033CCA6C BL 0x321BA08
	0x033CCA70 MOV W8, W0
	0x033CCA74 MOV X0, X31
	0x033CCA78 TBNZ X8, 0x0, 0x33CCB58
	0x033CCA7C ADRP X8, 0xD60000
	0x033CCA80 LDR X8, [X8 + 0xAB0]
	0x033CCA84 LDR X0, [X8]
	0x033CCA88 BL 0x33C190C
	0x033CCA8C CBZ X0, 0x33CCAC8
	0x033CCA90 MOV X1, X31
	0x033CCA94 MOV X20, X0
	0x033CCA98 BL 0x32EC360
	0x033CCA9C TBZ X0, 0x0, 0x33CCAC8
	0x033CCAA0 ADRP X8, 0xD5B000
	0x033CCAA4 LDR X8, [X8 + 0x7C0]
	0x033CCAA8 LDR X0, [X8]
	0x033CCAAC LDR W8, [X0 + 0xE0]
	0x033CCAB0 CBNZ W8, 0x33CCAB8
	0x033CCAB4 BL 0x1C16DFC
	0x033CCAB8 MOV X0, X20
	0x033CCABC MOV X1, X19
	0x033CCAC0 BL 0x33CC8D4
	0x033CCAC4 CBNZ X0, 0x33CCB58
	0x033CCAC8 ADRP X21, 0xD5B000
	0x033CCACC LDR X21, [X21 + 0x7C0]
	0x033CCAD0 LDR X0, [X21]
	0x033CCAD4 LDR W8, [X0 + 0xE0]
	0x033CCAD8 CBNZ W8, 0x33CCAE4
	0x033CCADC BL 0x1C16DFC
	0x033CCAE0 LDR X0, [X21]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1012000
	007 Move W8, [X21+663]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xD61000
	015 Move X0, [X0+2624]
	016 Call 0x1C17CF4
	017 Move X0, 0xD59000
	018 Move X0, [X0+2464]
	019 Call 0x1C17CF4
	020 Move X0, 0xD28000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move X0, 0xD61000
	024 Move X0, [X0+2632]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+663], W8
	028 Compare X20, 0
	029 JumpIfEqual {76}
	030 Move X8, 0xD28000
	031 Move X8, [X8+1728]
	032 Move X22, 0xD61000
	033 Move X0, [X8]
	034 Move X8, 0xD61000
	035 Move X8, [X8+2624]
	036 Move W9, [X0+224]
	037 Move X21, [X8]
	038 Move X22, [X22+2632]
	039 Compare W9, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X21
	043 Move X1, X31
	044 Call Type.GetTypeFromHandle, X0
	045 Move X1, [X22]
	046 Move X2, X0
	047 Move X0, X20
	048 Move X3, X31
	049 Call SerializationInfo.GetValue, X0, X1, X2
	050 Compare X0, 0
	051 JumpIfEqual {88}
	052 Move X9, 0xD59000
	053 Move X9, [X9+2464]
	054 Move X8, [X0]
	055 Move X1, [X9]
	056 Move W10, [X8+304]
	057 Move W9, [X1+304]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X10, [X8+200]
	060 Add X9, X10, X9
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X9, [X8+824]
	064 Move X1, [X8+832]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move [X19], X0
	067 Compare X0, 0
	068 JumpIfEqual {89}
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Return 
	075 Call 0x1C181E0
	076 Move X0, 0xD2D000
	077 Move X0, [X0+1320]
	078 Call 0x1C17D08
	079 Call 0x1C17F10
	080 Move X19, X0
	081 Move X0, 0xD52000
	082 Move X0, [X0+728]
	083 Call 0x1C17D08
	084 Move X1, X0
	085 Move X0, X19
	086 Move X2, X31
	087 Call ArgumentNullException..ctor, X0, X1
	088 Call 0x1C17F20
	089 Move X0, 0xD52000
	090 Move X0, [X0+736]
	091 Call 0x1C17D08
	092 Call 0x1C17F10
	093 Move X19, X0
	094 Move X0, 0xD61000
	095 Move X0, [X0+2584]
	096 Call 0x1C17D08
	097 Move X1, X0
	098 Move X0, X19
	099 Move X2, X31
	100 Call SerializationException..ctor, X0, X1
	101 Move X0, 0xD61000
	102 Move X0, [X0+2640]
	103 Call 0x1C17D08
	104 Move X1, X0
	105 Move X0, X19
	106 Call 0x1C17DEC

Method: System.IntPtr get_Value()

Disassembly:
	0x033CCAE4 LDR X8, [X0 + 0xB8]
	0x033CCAE8 LDR X22, [X8 + 0x10]

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x033CCAEC CBZ X22, 0x33CCB70
	0x033CCAF0 LDR X8, [X22 + 0x18]
	0x033CCAF4 CMP W8, 0x1
	0x033CCAF8 B.LT 0x33CCB54
	0x033CCAFC MOV X23, X31
	0x033CCB00 AND X8, X8, 0x0
	0x033CCB04 ADD X24, X22, 0x20
	0x033CCB08 CMP X23, W8, UXTW
	0x033CCB0C B.CS 0x33CCB6C
	0x033CCB10 LDR X20, [X24, X23, LSL #3]
	0x033CCB14 MOV X1, X31
	0x033CCB18 MOV X0, X20
	0x033CCB1C BL 0x32EC360
	0x033CCB20 TBZ X0, 0x0, 0x33CCB44
	0x033CCB24 LDR X0, [X21]
	0x033CCB28 LDR W8, [X0 + 0xE0]
	0x033CCB2C CBNZ W8, 0x33CCB34
	0x033CCB30 BL 0x1C16DFC
	0x033CCB34 MOV X0, X20
	0x033CCB38 MOV X1, X19
	0x033CCB3C BL 0x33CC8D4
	0x033CCB40 CBNZ X0, 0x33CCB58
	0x033CCB44 LDR W8, [X22 + 0x18]
	0x033CCB48 ADD X23, X23, 0x1
	0x033CCB4C CMP X23, W8, SXTW
	0x033CCB50 B.LT 0x33CCB08
	0x033CCB54 MOV X0, X31
	0x033CCB58 LDP X20, X19, [X31 + 0x30]
	0x033CCB5C LDP X22, X21, [X31 + 0x20]
	0x033CCB60 LDP X24, X23, [X31 + 0x10]
	0x033CCB64 LDR X30, [X31], #0x40
	0x033CCB68 RET
	0x033CCB6C BL 0x1C16F28
	0x033CCB70 BL 0x1C16F20
	0x033CCB74 STR X30, [X31 - 0x10]!
	0x033CCB78 CBZ X1, 0x33CCB90
	0x033CCB7C LDR X0, [X0 + 0x68]
	0x033CCB80 CBZ X0, 0x33CCB98
	0x033CCB84 MOV X2, X31
	0x033CCB88 LDR X30, [X31], #0x10
	0x033CCB8C B 0x3300E10
	0x033CCB90 LDR X30, [X31], #0x10
	0x033CCB94 RET
	0x033CCB98 BL 0x1C16F20
	0x033CCB9C STR X30, [X31 - 0x30]!
	0x033CCBA0 STP X22, X21, [X31 + 0x10]
	0x033CCBA4 STP X20, X19, [X31 + 0x20]
	0x033CCBA8 ADRP X21, 0x1011000
	0x033CCBAC LDRB W8, [X21 + 0x2D2]
	0x033CCBB0 MOV X19, X2
	0x033CCBB4 MOV X20, X0
	0x033CCBB8 TBNZ X8, 0x0, 0x33CCBDC
	0x033CCBBC ADRP X0, 0xD27000
	0x033CCBC0 LDR X0, [X0 + 0x618]
	0x033CCBC4 BL 0x1C16CF4
	0x033CCBC8 ADRP X0, 0xD27000
	0x033CCBCC LDR X0, [X0 + 0xE00]
	0x033CCBD0 BL 0x1C16CF4
	0x033CCBD4 MOVZ W8, 0x1
	0x033CCBD8 STRB W8, [X21 + 0x2D2]
	0x033CCBDC ADRP X22, 0xD27000
	0x033CCBE0 LDR X22, [X22 + 0xE00]
	0x033CCBE4 MOV X0, X19
	0x033CCBE8 MOV X1, X31
	0x033CCBEC BL 0x32ED1E0
	0x033CCBF0 MOV X19, X0
	0x033CCBF4 CBZ X0, 0x33CCCF4
	0x033CCBF8 LDR X8, [X19]
	0x033CCBFC LDP X9, X1, [X8 + 0x1E8]
	0x033CCC00 MOV X0, X19
	0x033CCC04 BLR X9
	0x033CCC08 MOV X1, X0
	0x033CCC0C CMP X1, 0x1000
	0x033CCC10 B.GT 0x33CCD00
	0x033CCC14 ADRP X8, 0xD27000
	0x033CCC18 LDR X8, [X8 + 0x618]
	0x033CCC1C LDR X0, [X8]
	0x033CCC20 BL 0x1C16D6C
	0x033CCC24 MOV X1, X0
	0x033CCC28 STR X1, [X20 + 0x20]
	0x033CCC2C CBZ X1, 0x33CCD48
	0x033CCC30 LDR X8, [X19]
	0x033CCC34 LDR W3, [X1 + 0x18]
	0x033CCC38 LDR X9, [X8 + 0x358]
	0x033CCC3C LDR X4, [X8 + 0x360]
	0x033CCC40 MOV X0, X19
	0x033CCC44 MOV W2, W31
	0x033CCC48 BLR X9
	0x033CCC4C LDR X8, [X20 + 0x20]
	0x033CCC50 CBZ X8, 0x33CCD4C
	0x033CCC54 LDR W9, [X8 + 0x18]
	0x033CCC58 CMP W0, W9
	0x033CCC5C B.NE 0x33CCD50
	0x033CCC60 ADD X21, X20, 0x28
	0x033CCC64 MOV X0, X20
	0x033CCC68 MOV X1, X8
	0x033CCC6C MOV X2, X21
	0x033CCC70 BL 0x33D2A60
	0x033CCC74 LDR X1, [X20 + 0x20]
	0x033CCC78 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1012000
	007 Move W8, [X21+664]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xD61000
	015 Move X0, [X0+2624]
	016 Call 0x1C17CF4
	017 Move X0, 0xD59000
	018 Move X0, [X0+2464]
	019 Call 0x1C17CF4
	020 Move X0, 0xD28000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move X0, 0xD61000
	024 Move X0, [X0+2632]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+664], W8
	028 Compare X19, 0
	029 JumpIfEqual {80}
	030 Move X0, [X20]
	031 Compare X0, 0
	032 JumpIfEqual {92}
	033 Move X20, 0xD61000
	034 Move X21, 0xD28000
	035 Move X22, 0xD61000
	036 Move X20, [X20+2624]
	037 Move X21, [X21+1728]
	038 Move X22, [X22+2632]
	039 Move X1, X31
	040 Call MethodBase.GetMethodFromHandle, X0
	041 Move X8, [X21]
	042 Move X21, [X20]
	043 Move X20, X0
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move X0, X21
	050 Move X1, X31
	051 Call Type.GetTypeFromHandle, X0
	052 Move X1, [X22]
	053 Move X3, X0
	054 Compare X20, 0
	055 JumpIfEqual {67}
	056 Move X8, 0xD59000
	057 Move X8, [X8+2464]
	058 Move X9, [X20]
	059 Move X8, [X8]
	060 Move W11, [X9+304]
	061 Move W10, [X8+304]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X9, [X9+200]
	064 Add X9, X9, X10
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, X19
	068 Move X2, X20
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X4, X31
	074 Move X30, [X31+48]
	075 Call SerializationInfo.AddValue, X0, X1, X2, X3
	076 Return 
	077 Move X0, X20
	078 Move X1, X8
	079 Call 0x1C181E0
	080 Move X0, 0xD2D000
	081 Move X0, [X0+1320]
	082 Call 0x1C17D08
	083 Call 0x1C17F10
	084 Move X19, X0
	085 Move X0, 0xD52000
	086 Move X0, [X0+728]
	087 Call 0x1C17D08
	088 Move X1, X0
	089 Move X0, X19
	090 Move X2, X31
	091 Call ArgumentNullException..ctor, X0, X1
	092 Move X0, 0xD52000
	093 Move X0, [X0+736]
	094 Call 0x1C17D08
	095 Call 0x1C17F10
	096 Move X19, X0
	097 Move X0, 0xD61000
	098 Move X0, [X0+2600]
	099 Call 0x1C17D08
	100 Move X1, X0
	101 Move X0, X19
	102 Move X2, X31
	103 Call SerializationException..ctor, X0, X1
	104 Move X0, 0xD61000
	105 Move X0, [X0+2648]
	106 Call 0x1C17D08
	107 Move X1, X0
	108 Move X0, X19
	109 Call 0x1C17DEC

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x033CCC7C MOV X2, X21
	0x033CCC80 BL 0x33D2B20
	0x033CCC84 MOV X20, X31
	0x033CCC88 LDR X8, [X19]
	0x033CCC8C LDR X1, [X22]
	0x033CCC90 LDRH W9, [X8 + 0x12E]
	0x033CCC94 CBZ X9, 0x33CCCB8
	0x033CCC98 LDR X10, [X8 + 0xB0]
	0x033CCC9C ADD X10, X10, 0x8
	0x033CCCA0 LDUR X11, [X10 - 0x8]
	0x033CCCA4 CMP X11, X1
	0x033CCCA8 B.EQ 0x33CCCC8
	0x033CCCAC SUBS X9, X9, 0x1
	0x033CCCB0 ADD X10, X10, 0x10
	0x033CCCB4 B.NE 0x33CCCA0
	0x033CCCB8 MOV X0, X19
	0x033CCCBC MOV W2, W31
	0x033CCCC0 BL 0x1C5C788
	0x033CCCC4 B 0x33CCCD4
	0x033CCCC8 LDRSW X9, [X10]
	0x033CCCCC ADD X8, X8, X9, 0x4, LSL
	0x033CCCD0 ADD X0, X8, 0x138
	0x033CCCD4 LDP X8, X1, [X0]
	0x033CCCD8 MOV X0, X19
	0x033CCCDC BLR X8
	0x033CCCE0 CBNZ X20, 0x33CCCF8
	0x033CCCE4 LDP X20, X19, [X31 + 0x20]
	0x033CCCE8 LDP X22, X21, [X31 + 0x10]
	0x033CCCEC LDR X30, [X31], #0x30
	0x033CCCF0 RET
	0x033CCCF4 BL 0x1C16F20
	0x033CCCF8 MOV X0, X20
	0x033CCCFC BL 0x1C16F18
	0x033CCD00 ADRP X0, 0xD27000
	0x033CCD04 LDR X0, [X0 + 0x7D0]
	0x033CCD08 BL 0x1C16D08
	0x033CCD0C BL 0x1C16F10
	0x033CCD10 MOV X20, X0
	0x033CCD14 ADRP X0, 0xD60000
	0x033CCD18 LDR X0, [X0 + 0xAB8]
	0x033CCD1C BL 0x1C16D08
	0x033CCD20 MOV X1, X0
	0x033CCD24 MOV X0, X20
	0x033CCD28 MOV X2, X31
	0x033CCD2C BL 0x33B2C70
	0x033CCD30 ADRP X0, 0xD60000
	0x033CCD34 LDR X0, [X0 + 0xAC0]
	0x033CCD38 BL 0x1C16D08
	0x033CCD3C MOV X1, X0
	0x033CCD40 MOV X0, X20
	0x033CCD44 BL 0x1C16DEC
	0x033CCD48 BL 0x1C16F20
	0x033CCD4C BL 0x1C16F20
	0x033CCD50 ADRP X0, 0xD27000
	0x033CCD54 LDR X0, [X0 + 0x7D0]
	0x033CCD58 BL 0x1C16D08
	0x033CCD5C BL 0x1C16F10
	0x033CCD60 MOV X20, X0
	0x033CCD64 ADRP X0, 0xD60000
	0x033CCD68 LDR X0, [X0 + 0xAC8]
	0x033CCD6C BL 0x1C16D08
	0x033CCD70 MOV X1, X0
	0x033CCD74 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1012000
	009 Move W8, [X21+665]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xD61000
	017 Move X0, [X0+2656]
	018 Call 0x1C17CF4
	019 Move X0, 0xD28000
	020 Move X0, [X0+1728]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+665], W8
	024 Compare X19, 0
	025 JumpIfEqual {54}
	026 Move X23, 0xD61000
	027 Move X23, [X23+2656]
	028 Move X8, [X20]
	029 Move X22, 0xD28000
	030 Add X1, X31, 8
	031 Move X0, [X23]
	032 Move X22, [X22+1728]
	033 Move [X31+8], X8
	034 Call 0x1C17E04
	035 Call 0x1C26764
	036 Move X21, X0
	037 Move X0, X19
	038 Call 0x1C26764
	039 Move X8, [X22]
	040 Move X22, X0
	041 Move W9, [X8+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X0, X21
	047 Move X1, X22
	048 Move X2, X31
	049 Call Type.op_Inequality, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {55}
	054 Move W0, W31
	055 Move X8, [X19]
	056 Move X1, [X23]
	057 Move X8, [X8+64]
	058 Move X9, [X1+64]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X20, [X20]
	061 Move X0, X19
	062 Call 0x1C17E08
	063 Move X8, [X0]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction CSET not yet implemented."
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X30, [X31+16]
	071 Move X23, [X31+24]
	072 Add X31, X31, 64
	073 Return X0
	074 Move X0, X19
	075 Call 0x1C181E0

Method: System.Int32 GetHashCode()

Disassembly:
	0x033CCD78 MOV X2, X31
	0x033CCD7C BL 0x33B2C70

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.String ConstructInstantiation(System.Reflection.RuntimeMethodInfo method, System.TypeNameFormatFlags format)

Disassembly:
	0x033CCD80 ADRP X0, 0xD60000
	0x033CCD84 LDR X0, [X0 + 0xAC0]
	0x033CCD88 BL 0x1C16D08
	0x033CCD8C MOV X1, X0
	0x033CCD90 MOV X0, X20
	0x033CCD94 BL 0x1C16DEC
	0x033CCD98 B 0x33CCDBC
	0x033CCD9C B 0x33CCDBC
	0x033CCDA0 B 0x33CCDBC
	0x033CCDA4 B 0x33CCDBC
	0x033CCDA8 B 0x33CCDBC
	0x033CCDAC B 0x33CCDBC
	0x033CCDB0 B 0x33CCDBC
	0x033CCDB4 B 0x33CCDBC
	0x033CCDB8 B 0x33CCDBC
	0x033CCDBC MOV X21, X0
	0x033CCDC0 CMP W1, 0x1
	0x033CCDC4 B.NE 0x33CCDE0
	0x033CCDC8 MOV X0, X21
	0x033CCDCC BL 0x3EB1AD0
	0x033CCDD0 LDR X20, [X0]
	0x033CCDD4 BL 0x3EB1AE0
	0x033CCDD8 CBNZ X19, 0x33CCC88
	0x033CCDDC B 0x33CCCE0
	0x033CCDE0 MOV X20, X31
	0x033CCDE4 B 0x33CCDEC
	0x033CCDE8 MOV X21, X0
	0x033CCDEC CBZ X19, 0x33CCE48
	0x033CCDF0 LDR X8, [X19]
	0x033CCDF4 LDR X1, [X22]
	0x033CCDF8 LDRH W9, [X8 + 0x12E]
	0x033CCDFC CBZ X9, 0x33CCE20
	0x033CCE00 LDR X10, [X8 + 0xB0]
	0x033CCE04 ADD X10, X10, 0x8
	0x033CCE08 LDUR X11, [X10 - 0x8]
	0x033CCE0C CMP X11, X1
	0x033CCE10 B.EQ 0x33CCE30
	0x033CCE14 SUBS X9, X9, 0x1
	0x033CCE18 ADD X10, X10, 0x10
	0x033CCE1C B.NE 0x33CCE08
	0x033CCE20 MOV X0, X19
	0x033CCE24 MOV W2, W31
	0x033CCE28 BL 0x1C5C788
	0x033CCE2C B 0x33CCE3C
	0x033CCE30 LDRSW X9, [X10]
	0x033CCE34 ADD X8, X8, X9, 0x4, LSL
	0x033CCE38 ADD X0, X8, 0x138
	0x033CCE3C LDP X8, X1, [X0]
	0x033CCE40 MOV X0, X19
	0x033CCE44 BLR X8
	0x033CCE48 CBNZ X20, 0x33CCE54
	0x033CCE4C MOV X0, X21
	0x033CCE50 BL 0x1D2C690
	0x033CCE54 MOV X0, X20
	0x033CCE58 BL 0x1C16F18
	0x033CCE5C BL 0x1990590
	0x033CCE60 STP X30, X21, [X31 - 0x20]!
	0x033CCE64 STP X20, X19, [X31 + 0x10]
	0x033CCE68 CBZ X2, 0x33CCEA0
	0x033CCE6C ADD X21, X0, 0x28
	0x033CCE70 MOV X19, X2
	0x033CCE74 STR X2, [X0 + 0x20]
	0x033CCE78 MOV X1, X2
	0x033CCE7C MOV X2, X21
	0x033CCE80 MOV X20, X0
	0x033CCE84 BL 0x33D2A60
	0x033CCE88 MOV X0, X20
	0x033CCE8C MOV X1, X19
	0x033CCE90 LDP X20, X19, [X31 + 0x10]
	0x033CCE94 MOV X2, X21
	0x033CCE98 LDP X30, X21, [X31], #0x20
	0x033CCE9C B 0x33D2B20
	0x033CCEA0 ADRP X0, 0xD2C000
	0x033CCEA4 LDR X0, [X0 + 0x528]
	0x033CCEA8 BL 0x1C16D08
	0x033CCEAC BL 0x1C16F10
	0x033CCEB0 MOV X19, X0
	0x033CCEB4 ADRP X0, 0xD52000
	0x033CCEB8 LDR X0, [X0 + 0xF48]
	0x033CCEBC BL 0x1C16D08
	0x033CCEC0 MOV X1, X0
	0x033CCEC4 MOV X0, X19
	0x033CCEC8 MOV X2, X31
	0x033CCECC BL 0x330E100
	0x033CCED0 ADRP X0, 0xD60000
	0x033CCED4 LDR X0, [X0 + 0xAD0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x1012000
	007 Move X21, 0xD28000
	008 Move W8, [X19+666]
	009 Move X21, [X21+2288]
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xD28000
	016 Move X0, [X0+2288]
	017 Call 0x1C17CF4
	018 Move X0, 0xD2A000
	019 Move X0, [X0+928]
	020 Call 0x1C17CF4
	021 Move X0, 0xD28000
	022 Move X0, [X0+3784]
	023 Call 0x1C17CF4
	024 Move X0, 0xD28000
	025 Move X0, [X0+2120]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+666], W8
	029 Move X0, [X21]
	030 Call 0x1C17F10
	031 Move X1, X31
	032 Move X19, X0
	033 Call StringBuilder..ctor, X0
	034 Compare X20, 0
	035 JumpIfEqual {96}
	036 Move X8, [X20]
	037 Move X0, X20
	038 Move X9, [X8+760]
	039 Move X1, [X8+768]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Compare X19, 0
	042 JumpIfEqual {96}
	043 Move X8, 0xD28000
	044 Move X8, [X8+3784]
	045 Move X20, X0
	046 Move X0, X19
	047 Move X2, X31
	048 Move X1, [X8]
	049 Call StringBuilder.Append, X0, X1
	050 Compare X20, 0
	051 JumpIfEqual {96}
	052 Move W8, [X20+24]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X22, 0xD2A000
	055 Move X22, [X22+928]
	056 Move W21, W31
	057 Compare W21, 0
	058 JumpIfEqual {64}
	059 Move X1, [X22]
	060 Move X0, X19
	061 Move X2, X31
	062 Call StringBuilder.Append, X0, X1
	063 Move W8, [X20+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Add X8, X20, W21
	066 Move X0, [X8+32]
	067 Compare X0, 0
	068 JumpIfEqual {96}
	069 Move X8, [X0]
	070 Move X9, [X8+424]
	071 Move X1, [X8+432]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move X1, X0
	074 Move X0, X19
	075 Move X2, X31
	076 Call StringBuilder.Append, X0, X1
	077 Move W8, [X20+24]
	078 Add W21, W21, 1
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X8, 0xD28000
	081 Move X8, [X8+2120]
	082 Move X0, X19
	083 Move X2, X31
	084 Move X1, [X8]
	085 Call StringBuilder.Append, X0, X1
	086 Move X8, [X19]
	087 Move X0, X19
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X22, [X31+16]
	091 Move X21, [X31+24]
	092 Move X2, [X8+360]
	093 Move X1, [X8+368]
	094 Move X30, [X31+48]
	095 CallNoReturn X2
	096 Call 0x1C17F20
	097 Call 0x1C17F28

Method: System.Boolean IsNullHandle()

Disassembly:
	0x033CCED8 BL 0x1C16D08
	0x033CCEDC MOV X1, X0
	0x033CCEE0 MOV X0, X19
	0x033CCEE4 BL 0x1C16DEC

ISIL:
	001 Move X8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

