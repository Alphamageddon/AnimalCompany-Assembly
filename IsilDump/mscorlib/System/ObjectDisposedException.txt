Type: System.ObjectDisposedException

Method: System.Void .ctor()

Disassembly:
	0x0338D3B0 SUB W13, W14, 0x30
	0x0338D3B4 CMP W13, 0xA
	0x0338D3B8 B.CC 0x338D3E0
	0x0338D3BC SUB W13, W14, 0x41
	0x0338D3C0 CMP W13, 0x19
	0x0338D3C4 B.HI 0x338D3D0
	0x0338D3C8 SUB W13, W14, 0x37
	0x0338D3CC B 0x338D3E0
	0x0338D3D0 SUB W13, W14, 0x61
	0x0338D3D4 CMP W13, 0x19
	0x0338D3D8 B.HI 0x338D40C
	0x0338D3DC SUB W13, W14, 0x57
	0x0338D3E0 CMP W13, W21
	0x0338D3E4 B.GE 0x338D40C
	0x0338D3E8 CMP X0, X12
	0x0338D3EC B.CS 0x338D418
	0x0338D3F0 MUL X14, X0, X9
	0x0338D3F4 ADD W8, W8, 0x1
	0x0338D3F8 SUBS X11, X11, 0x1
	0x0338D3FC ADD X0, X14, W13, UXTW
	0x0338D400 ADD X10, X10, 0x2
	0x0338D404 STR W8, [X19]
	0x0338D408 B.NE 0x338D3A4
	0x0338D40C ORR X8, X31, 0xFFFFFFFFFFFFFFFF

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1051000
	006 Move X21, 0xD9F000
	007 Move W8, [X20+7]
	008 Move X21, [X21+368]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xD9F000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+7], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X2, X31
	022 Call InvalidOperationException..ctor, X0, X1
	023 Move W8, 0x1622
	024 NotImplemented "Instruction MOVK not yet implemented."
	025 Move [X19+96], W8
	026 Move [X19+144], X31
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: System.Void .ctor(System.String objectName)

Disassembly:
	0x0338D448 CSEL X9, X10, X9, EQ
	0x0338D44C CMP W8, W20
	0x0338D450 B.GE 0x338D4EC
	0x0338D454 MOV W11, W20
	0x0338D458 SXTW X12, W8
	0x0338D45C MOV W10, W21
	0x0338D460 SXTW X14, W11
	0x0338D464 MOV X13, X31
	0x0338D468 SXTW X10, W10
	0x0338D46C ADD X11, X22, X12, 0x1, LSL
	0x0338D470 SUB X12, X14, X12
	0x0338D474 CMP W8, W20
	0x0338D478 B.CS 0x338D50C
	0x0338D47C LDRH W15, [X11]
	0x0338D480 SUB W14, W15, 0x30
	0x0338D484 CMP W14, 0xA
	0x0338D488 B.CC 0x338D4B0
	0x0338D48C SUB W14, W15, 0x41
	0x0338D490 CMP W14, 0x19
	0x0338D494 B.HI 0x338D4A0
	0x0338D498 SUB W14, W15, 0x37
	0x0338D49C B 0x338D4B0
	0x0338D4A0 SUB W14, W15, 0x61
	0x0338D4A4 CMP W14, 0x19
	0x0338D4A8 B.HI 0x338D4F4
	0x0338D4AC SUB W14, W15, 0x57
	0x0338D4B0 CMP W14, W21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1051000
	007 Move X22, 0xD9F000
	008 Move W8, [X21+8]
	009 Move X22, [X22+368]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xD9F000
	017 Move X0, [X0+368]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+8], W8
	021 Move X1, [X22]
	022 Move X0, X20
	023 Move X2, X31
	024 Call InvalidOperationException..ctor, X0, X1
	025 Move W8, 0x1622
	026 NotImplemented "Instruction MOVK not yet implemented."
	027 Move [X20+96], W8
	028 Move [X20+144], X19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Return 

Method: System.Void .ctor(System.String objectName, System.String message)

Disassembly:
	0x0338D410 CMP X0, X8
	0x0338D414 B.CC 0x338D4F8
	0x0338D418 BL 0x338E1D0
	0x0338D41C LDR W8, [X19]
	0x0338D420 CMP W21, 0x8
	0x0338D424 MOVN X9, 0x80000000
	0x0338D428 MOVN X10, 0xE0000000
	0x0338D42C MOVN X11, 0xF0000000
	0x0338D430 CSEL X9, X10, X9, EQ
	0x0338D434 CMP W21, 0x10
	0x0338D438 ORR X10, X31, 0x9999999999999999
	0x0338D43C CSEL X9, X11, X9, EQ
	0x0338D440 CMP W21, 0xA
	0x0338D444 MOVK X10, 0x19990000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X2
	006 Move X2, X31
	007 Move X20, X0
	008 Call InvalidOperationException..ctor, X0, X1
	009 Move W8, 0x1622
	010 NotImplemented "Instruction MOVK not yet implemented."
	011 Move [X20+96], W8
	012 Move [X20+144], X19
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Return 

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x0338D4B4 B.GE 0x338D4F4
	0x0338D4B8 CMP X13, X9
	0x0338D4BC B.HI 0x338D510
	0x0338D4C0 MUL X15, X13, X10
	0x0338D4C4 ADD X0, X15, W14, UXTW
	0x0338D4C8 CMP X0, X13
	0x0338D4CC B.CC 0x338D510
	0x0338D4D0 ADD W8, W8, 0x1
	0x0338D4D4 SUBS X12, X12, 0x1
	0x0338D4D8 ADD X11, X11, 0x2
	0x0338D4DC MOV X13, X0
	0x0338D4E0 STR W8, [X19]
	0x0338D4E4 B.NE 0x338D474
	0x0338D4E8 B 0x338D4F8
	0x0338D4EC MOV X0, X31
	0x0338D4F0 B 0x338D4F8
	0x0338D4F4 MOV X0, X13
	0x0338D4F8 LDP X20, X19, [X31 + 0x30]
	0x0338D4FC LDP X22, X21, [X31 + 0x20]
	0x0338D500 LDP X24, X23, [X31 + 0x10]
	0x0338D504 LDR X30, [X31], #0x40
	0x0338D508 RET
	0x0338D50C BL 0x1C16F28
	0x0338D510 BL 0x338E218
	0x0338D514 STR X30, [X31 - 0x10]!
	0x0338D518 ADD X4, X31, 0xC
	0x0338D51C STR W31, [X31 + 0xC]
	0x0338D520 BL 0x338D52C
	0x0338D524 LDR X30, [X31], #0x10
	0x0338D528 RET
	0x0338D52C SUB X31, X31, 0x60
	0x0338D530 STP X30, X27, [X31 + 0x10]
	0x0338D534 STP X26, X25, [X31 + 0x20]
	0x0338D538 STP X24, X23, [X31 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1051000
	008 Move W8, [X23+9]
	009 Move X21, X3
	010 Move X22, X2
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xD9F000
	018 Move X0, [X0+376]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+9], W8
	022 Move X0, X19
	023 Move X1, X20
	024 Move X2, X22
	025 Move X3, X21
	026 Move X4, X31
	027 Call InvalidOperationException..ctor, X0, X1, X2
	028 Compare X20, 0
	029 JumpIfEqual {44}
	030 Move X8, 0xD9F000
	031 Move X8, [X8+376]
	032 Move X0, X20
	033 Move X2, X31
	034 Move X1, [X8]
	035 Call SerializationInfo.GetString, X0, X1
	036 Move [X19+144], X0
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Move X23, [X31+56]
	043 Return 
	044 Call 0x1C17F20

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x0338D53C STP X22, X21, [X31 + 0x40]
	0x0338D540 STP X20, X19, [X31 + 0x50]
	0x0338D544 ADRP X20, 0x1050000
	0x0338D548 LDRB W8, [X20 + 0x15]
	0x0338D54C MOV X21, X4
	0x0338D550 MOV W19, W3
	0x0338D554 MOV W24, W2
	0x0338D558 MOV X22, X1
	0x0338D55C MOV X23, X0
	0x0338D560 TBNZ X8, 0x0, 0x338D578
	0x0338D564 ADRP X0, 0xD95000
	0x0338D568 LDR X0, [X0 + 0x28]
	0x0338D56C BL 0x1C16CF4
	0x0338D570 MOVZ W8, 0x1
	0x0338D574 STRB W8, [X20 + 0x15]
	0x0338D578 ADDS W31, W24, 0x1
	0x0338D57C MOVZ W8, 0xA
	0x0338D580 LDR W25, [X21]
	0x0338D584 CSEL W20, W8, W24, EQ
	0x0338D588 SUB W8, W20, 0x2
	0x0338D58C EXTR W8, W8, W8, 0x1
	0x0338D590 CMP W8, 0x7
	0x0338D594 STR W25, [X31 + 0xC]
	0x0338D598 B.HI 0x338D85C
	0x0338D59C MOVZ W9, 0x1
	0x0338D5A0 LSLV W8, W9, W8
	0x0338D5A4 MOVZ W9, 0x99
	0x0338D5A8 ANDS W31, W8, W9, 0x0
	0x0338D5AC B.EQ 0x338D85C
	0x0338D5B0 TBNZ X25, 0x1F, 0x338D760
	0x0338D5B4 CMP W25, W22
	0x0338D5B8 B.GE 0x338D760
	0x0338D5BC ANDS W31, W19, 0x3000
	0x0338D5C0 B.NE 0x338D5E0
	0x0338D5C4 ADD X2, X31, 0xC
	0x0338D5C8 MOV X0, X23
	0x0338D5CC MOV X1, X22
	0x0338D5D0 BL 0x338D254
	0x0338D5D4 LDR W25, [X31 + 0xC]
	0x0338D5D8 CMP W25, W22
	0x0338D5DC B.EQ 0x338D7D4
	0x0338D5E0 CMP W25, W22
	0x0338D5E4 B.CS 0x338D75C
	0x0338D5E8 LDRH W8, [X23, W25, SXTW]
	0x0338D5EC CMP W8, 0x2B
	0x0338D5F0 B.EQ 0x338D61C
	0x0338D5F4 CMP W8, 0x2D
	0x0338D5F8 B.NE 0x338D62C
	0x0338D5FC CMP W20, 0xA
	0x0338D600 B.NE 0x338D808
	0x0338D604 TBNZ X19, 0x9, 0x338D83C
	0x0338D608 ADD W25, W25, 0x1
	0x0338D60C MOVN W26, 0x0
	0x0338D610 STR W25, [X31 + 0xC]
	0x0338D614 MOVZ W27, 0x1
	0x0338D618 B 0x338D634
	0x0338D61C MOV W27, W31
	0x0338D620 ADD W25, W25, 0x1
	0x0338D624 STR W25, [X31 + 0xC]
	0x0338D628 B 0x338D630
	0x0338D62C MOV W27, W31
	0x0338D630 MOVZ W26, 0x1
	0x0338D634 CMP W24, 0x10
	0x0338D638 B.EQ 0x338D644
	0x0338D63C ADDS W31, W24, 0x1
	0x0338D640 B.NE 0x338D688

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1051000
	008 Move W8, [X23+10]
	009 Move X21, X3
	010 Move X22, X2
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xD8F000
	018 Move X0, [X0+2912]
	019 Call 0x1C17CF4
	020 Move X0, 0xD67000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move X0, 0xD9F000
	024 Move X0, [X0+376]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+10], W8
	028 Move X0, X20
	029 Move X1, X19
	030 Move X2, X22
	031 Move X3, X21
	032 Move X4, X31
	033 Call Exception.GetObjectData, X0, X1, X2
	034 Move X21, 0x1051000
	035 Move W8, [X21+12]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {45}
	040 Move X0, 0xD69000
	041 Move X0, [X0+632]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+12], W8
	045 Move X8, 0xD8F000
	046 Move X9, 0xD67000
	047 Move X20, [X20+144]
	048 Move X8, [X8+2912]
	049 Move X9, [X9+1728]
	050 Compare X20, 0
	051 JumpIfNotEqual {57}
	052 Move X10, 0xD69000
	053 Move X10, [X10+632]
	054 Move X10, [X10]
	055 Move X10, [X10+184]
	056 Move X20, [X10]
	057 Move X0, [X9]
	058 Move X21, [X8]
	059 Move W9, [X0+224]
	060 Compare W9, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X21
	064 Call Type.GetTypeFromHandle, X0
	065 Compare X19, 0
	066 JumpIfEqual {82}
	067 Move X8, 0xD9F000
	068 Move X8, [X8+376]
	069 Move X3, X0
	070 Move X0, X19
	071 Move X2, X20
	072 Move X1, [X8]
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X4, X31
	078 Move X30, [X31+48]
	079 Move X23, [X31+56]
	080 Call SerializationInfo.AddValue, X0, X1, X2, X3
	081 Return 
	082 Call 0x1C17F20

Method: System.String get_Message()

Disassembly:
	0x0338D710 LDR X0, [X0 + 0x858]
	0x0338D714 BL 0x1C16D08
	0x0338D718 BL 0x1C16F10
	0x0338D71C MOV X19, X0
	0x0338D720 ADRP X0, 0xD9B000
	0x0338D724 LDR X0, [X0 + 0x1A0]
	0x0338D728 B 0x338D8C0
	0x0338D72C CMP W0, 0x10000
	0x0338D730 B.CS 0x338D8A4
	0x0338D734 CMP W20, 0xA
	0x0338D738 CSINC W8, W26, W31, EQ
	0x0338D73C LDP X20, X19, [X31 + 0x50]
	0x0338D740 LDP X22, X21, [X31 + 0x40]
	0x0338D744 LDP X24, X23, [X31 + 0x30]
	0x0338D748 LDP X26, X25, [X31 + 0x20]
	0x0338D74C LDP X30, X27, [X31 + 0x10]
	0x0338D750 MUL W0, W0, W8
	0x0338D754 ADD X31, X31, 0x60
	0x0338D758 RET
	0x0338D75C BL 0x1C16F28
	0x0338D760 ADRP X0, 0xD6E000
	0x0338D764 LDR X0, [X0 + 0x760]
	0x0338D768 BL 0x1C16D08
	0x0338D76C BL 0x1C16F10
	0x0338D770 MOV X19, X0
	0x0338D774 ADRP X0, 0xD8E000
	0x0338D778 LDR X0, [X0 + 0x660]
	0x0338D77C BL 0x1C16D08
	0x0338D780 MOV X1, X0
	0x0338D784 MOV X0, X19
	0x0338D788 MOV X2, X31
	0x0338D78C BL 0x3316014
	0x0338D790 B 0x338D8D0
	0x0338D794 ADRP X0, 0xD93000
	0x0338D798 LDR X0, [X0 + 0xC08]
	0x0338D79C BL 0x1C16D08
	0x0338D7A0 BL 0x1C16F10
	0x0338D7A4 MOV X19, X0
	0x0338D7A8 ADRP X0, 0xD9E000
	0x0338D7AC LDR X0, [X0 + 0x198]
	0x0338D7B0 B 0x338D7F0
	0x0338D7B4 ADRP X0, 0xD93000
	0x0338D7B8 LDR X0, [X0 + 0xC08]
	0x0338D7BC BL 0x1C16D08
	0x0338D7C0 BL 0x1C16F10
	0x0338D7C4 MOV X19, X0
	0x0338D7C8 ADRP X0, 0xD9D000
	0x0338D7CC LDR X0, [X0 + 0xDF0]
	0x0338D7D0 B 0x338D7F0
	0x0338D7D4 ADRP X0, 0xD93000
	0x0338D7D8 LDR X0, [X0 + 0xC08]
	0x0338D7DC BL 0x1C16D08
	0x0338D7E0 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1051000
	005 Move W8, [X20+11]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD9F000
	012 Move X0, [X0+384]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+11], W8
	016 Move X20, 0x1051000
	017 Move W8, [X20+12]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xD69000
	023 Move X0, [X0+632]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+12], W8
	027 Move X1, [X19+144]
	028 Compare X1, 0
	029 JumpIfNotEqual {37}
	030 Move X8, 0xD69000
	031 Move X8, [X8+632]
	032 Move X8, [X8]
	033 Move X8, [X8+184]
	034 Move X1, [X8]
	035 Compare X1, 0
	036 JumpIfEqual {61}
	037 Move W8, [X1+16]
	038 Compare W8, 0
	039 JumpIfEqual {61}
	040 Move X8, 0xD9F000
	041 Move X8, [X8+384]
	042 Move X2, X31
	043 Move X0, [X8]
	044 Call SR.Format, X0, X1
	045 Move X20, X0
	046 Move X0, X19
	047 Move X1, X31
	048 Call Exception.get_Message, X0
	049 Move X19, X0
	050 Move X0, X31
	051 Call Environment.get_NewLine
	052 Move X1, X0
	053 Move X0, X19
	054 Move X2, X20
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X3, X31
	058 Move X30, [X31+32]
	059 Call String.Concat, X0, X1, X2
	060 Return X0
	061 Move X0, X19
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X1, X31
	065 Move X30, [X31+32]
	066 Call Exception.get_Message, X0
	067 Return X0

Method: System.String get_ObjectName()

Disassembly:
	0x0338D644 ADD W8, W25, 0x1
	0x0338D648 CMP W8, W22
	0x0338D64C B.GE 0x338D688
	0x0338D650 CMP W25, W22
	0x0338D654 B.CS 0x338D75C
	0x0338D658 LDRH W9, [X23, W25, SXTW]
	0x0338D65C CMP W9, 0x30
	0x0338D660 B.NE 0x338D688
	0x0338D664 CMP W8, W22
	0x0338D668 B.CS 0x338D75C
	0x0338D66C LDRH W8, [X23, W8, SXTW]
	0x0338D670 ORR W8, W8, 0x20
	0x0338D674 CMP W8, 0x78
	0x0338D678 B.NE 0x338D688
	0x0338D67C ADD W25, W25, 0x2
	0x0338D680 MOVZ W20, 0x10
	0x0338D684 STR W25, [X31 + 0xC]
	0x0338D688 UBFM W4, W19, 0x9, 0x9
	0x0338D68C ADD X3, X31, 0xC
	0x0338D690 MOV W0, W20
	0x0338D694 MOV X1, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1051000
	005 Move W8, [X20+12]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD69000
	012 Move X0, [X0+632]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+12], W8
	016 Move X0, [X19+144]
	017 Compare X0, 0
	018 JumpIfNotEqual {24}
	019 Move X8, 0xD69000
	020 Move X8, [X8+632]
	021 Move X8, [X8]
	022 Move X8, [X8+184]
	023 Move X0, [X8]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return X0

