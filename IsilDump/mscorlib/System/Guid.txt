Type: System.Guid

Method: System.Guid NewGuid()

Disassembly:
	0x0337784C ADD W2, W22, 0x1
	0x03377850 MOV X0, X21
	0x03377854 MOV X1, X20
	0x03377858 BL 0x3377FFC
	0x0337785C TBZ X0, 0x0, 0x3377A38
	0x03377860 LDR X23, [X23]
	0x03377864 ADD W27, W22, 0x3
	0x03377868 CMP W27, W20
	0x0337786C B.LS 0x3377878
	0x03377870 MOV X0, X31
	0x03377874 BL 0x339D6EC
	0x03377878 LDR X0, [X23 + 0x20]
	0x0337787C LDRB W8, [X0 + 0x135]
	0x03377880 TBNZ X8, 0x0, 0x3377888
	0x03377884 BL 0x1C5C684
	0x03377888 LDR X3, [X26]
	0x0337788C SUB W24, W20, W27
	0x03377890 CMP X28, 0x6
	0x03377894 ADD X23, X21, W27, 0x1, SXTW

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Add X0, X31, 0
	005 Move W1, 16
	006 Move X2, X31
	007 Move [X31], X31
	008 Call Interop.GetRandomBytes, X0, X1
	009 NotImplemented "Instruction LDRH not yet implemented."
	010 Move W9, [X31+8]
	011 Move W10, 0x4000
	012 Move W11, 128
	013 NotImplemented "Instruction BFM not yet implemented."
	014 NotImplemented "Instruction BFM not yet implemented."
	015 NotImplemented "Instruction STRH not yet implemented."
	016 Move [X31+8], W11
	017 Move X0, [X31]
	018 Move X1, [X31+8]
	019 Move X30, [X31+16]
	020 Add X31, X31, 32
	021 Return X0

Method: System.Void .ctor(System.Byte[] b)

Disassembly:
	0x03377898 B.LS 0x33778BC
	0x0337789C MOVZ W2, 0x7D
	0x033778A0 MOV X0, X23
	0x033778A4 MOV X1, X24
	0x033778A8 BL 0x338BFD4
	0x033778AC MOV W22, W0
	0x033778B0 CMP W0, 0x0
	0x033778B4 B.GT 0x33778D8
	0x033778B8 B 0x3377A64
	0x033778BC MOVZ W2, 0x2C
	0x033778C0 MOV X0, X23
	0x033778C4 MOV X1, X24
	0x033778C8 BL 0x338BFD4
	0x033778CC MOV W22, W0
	0x033778D0 CMP W0, 0x0
	0x033778D4 B.LE 0x3377A00
	0x033778D8 ADRP X8, 0xDAF000
	0x033778DC LDR X8, [X8 + 0xD90]
	0x033778E0 CMP W27, W20
	0x033778E4 LDR X25, [X8]
	0x033778E8 B.HI 0x33778F4
	0x033778EC CMP W24, W22
	0x033778F0 B.CS 0x33778FC
	0x033778F4 MOV X0, X31
	0x033778F8 BL 0x339D6EC
	0x033778FC LDR X0, [X25 + 0x20]
	0x03377900 LDRB W8, [X0 + 0x135]
	0x03377904 TBNZ X8, 0x0, 0x337790C
	0x03377908 BL 0x1C5C684
	0x0337790C MOV W1, W22
	0x03377910 SUB X2, X29, 0x4
	0x03377914 SUB X5, X29, 0xC
	0x03377918 MOVN W3, 0x0
	0x0337791C MOVZ W4, 0x1000
	0x03377920 MOV X0, X23
	0x03377924 MOV X6, X19
	0x03377928 STUR W31, [X29 - 0x4]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1066000
	006 Move W8, [X21+3878]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xDB2000
	014 Move X0, [X0+608]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3878], W8
	018 Compare X19, 0
	019 JumpIfEqual {27}
	020 Move W2, [X19+24]
	021 Add X1, X19, 32
	022 Move X0, X20
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Move X0, 0xD82000
	028 Move X0, [X0+1320]
	029 Call 0x1C17D08
	030 Call 0x1C17F10
	031 Move X19, X0
	032 Move X0, 0xDAA000
	033 Move X0, [X0+960]
	034 Call 0x1C17D08
	035 Move X1, X0
	036 Move X0, X19
	037 Move X2, X31
	038 Call ArgumentNullException..ctor, X0, X1
	039 Move X0, 0xDB4000
	040 Move X0, [X0+3416]
	041 Call 0x1C17D08
	042 Move X1, X0
	043 Move X0, X19
	044 Call 0x1C17DEC

Method: System.Void .ctor(System.ReadOnlySpan`1<System.Byte> b)

Disassembly:
	0x0337792C BL 0x3378294
	0x03377930 ADRP X23, 0xDB0000
	0x03377934 LDR X23, [X23 + 0x7E8]
	0x03377938 TBZ X0, 0x0, 0x33779B8
	0x0337793C LDUR W8, [X29 - 0xC]
	0x03377940 CMP W8, 0x100
	0x03377944 B.CS 0x3377A4C
	0x03377948 LDUR X9, [X29 - 0x18]
	0x0337794C STRB W8, [X9, X28, LSL]
	0x03377950 ADD X28, X28, 0x1
	0x03377954 CMP X28, 0x8
	0x03377958 B.NE 0x3377848
	0x0337795C LDUR X8, [X29 - 0x18]
	0x03377960 LDR V0, [X8]
	0x03377964 ADD W8, W27, W22
	0x03377968 ADD W8, W8, 0x1
	0x0337796C CMP W8, W20
	0x03377970 STR D0, [X19 + 0x8]
	0x03377974 B.GE 0x3377A58
	0x03377978 B.CS 0x3377A7C
	0x0337797C LDRH W9, [X21, W8, SXTW]
	0x03377980 CMP W9, 0x7D
	0x03377984 B.NE 0x3377A58
	0x03377988 SUB W9, W20, 0x1
	0x0337798C CMP W8, W9
	0x03377990 B.NE 0x3377A70
	0x03377994 MOVZ W0, 0x1
	0x03377998 B 0x33779BC
	0x0337799C LDR X2, [X28]
	0x033779A0 MOVZ W1, 0x2
	0x033779A4 MOV X0, X19
	0x033779A8 MOV X3, X31
	0x033779AC MOV X4, X31
	0x033779B0 MOV X5, X31
	0x033779B4 BL 0x3377D84
	0x033779B8 MOV W0, W31
	0x033779BC ADD X31, X29, 0x0
	0x033779C0 LDP X20, X19, [X31 + 0x50]
	0x033779C4 LDP X22, X21, [X31 + 0x40]
	0x033779C8 LDP X24, X23, [X31 + 0x30]
	0x033779CC LDP X26, X25, [X31 + 0x20]
	0x033779D0 LDP X28, X27, [X31 + 0x10]
	0x033779D4 LDP X29, X30, [X31], #0x60
	0x033779D8 RET
	0x033779DC ADRP X8, 0xDB3000
	0x033779E0 ADRP X9, 0xDB3000
	0x033779E4 LDR X8, [X8 + 0xDD0]
	0x033779E8 LDR X9, [X9 + 0xDC0]
	0x033779EC LDR X2, [X8]
	0x033779F0 LDR X3, [X9]
	0x033779F4 MOVZ W1, 0x2
	0x033779F8 MOV X0, X19
	0x033779FC B 0x33779AC
	0x03377A00 ADRP X8, 0xDB3000
	0x03377A04 LDR X8, [X8 + 0xDB0]
	0x03377A08 LDR X2, [X8]
	0x03377A0C B 0x33779A0
	0x03377A10 ADRP X8, 0xDB3000
	0x03377A14 ADRP X9, 0xDB3000
	0x03377A18 LDR X8, [X8 + 0xDD0]
	0x03377A1C LDR X9, [X9 + 0xDD8]
	0x03377A20 B 0x33779EC
	0x03377A24 ADRP X8, 0xDB3000
	0x03377A28 ADRP X9, 0xDB3000
	0x03377A2C LDR X8, [X8 + 0xDD0]
	0x03377A30 LDR X9, [X9 + 0xDC8]
	0x03377A34 B 0x33779EC
	0x03377A38 ADRP X8, 0xDB3000
	0x03377A3C ADRP X9, 0xDB3000
	0x03377A40 LDR X8, [X8 + 0xDD0]
	0x03377A44 LDR X9, [X9 + 0xDB8]
	0x03377A48 B 0x33779EC
	0x03377A4C ADRP X8, 0xDB1000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1066000
	007 Move W8, [X22+3879]
	008 Move X21, X2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xDAC000
	016 Move X0, [X0+2752]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3879], W8
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move W8, [X19]
	022 Move X22, [X31+16]
	023 Move X21, [X31+24]
	024 Move [X20], W8
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 NotImplemented "Instruction STRH not yet implemented."
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 NotImplemented "Instruction STRH not yet implemented."
	029 Move W8, [X19+8]
	030 Move [X20+8], W8
	031 Move W8, [X19+9]
	032 Move [X20+9], W8
	033 Move W8, [X19+10]
	034 Move [X20+10], W8
	035 Move W8, [X19+11]
	036 Move [X20+11], W8
	037 Move W8, [X19+12]
	038 Move [X20+12], W8
	039 Move W8, [X19+13]
	040 Move [X20+13], W8
	041 Move W8, [X19+14]
	042 Move [X20+14], W8
	043 Move W8, [X19+15]
	044 Move [X20+15], W8
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X30, [X31+48]
	048 Return 
	049 Move X0, 0xDB4000
	050 Move X0, [X0+3424]
	051 Call 0x1C17D08
	052 Move X19, X0
	053 Move X0, 0xD85000
	054 Move X0, [X0+1344]
	055 Call 0x1C17D08
	056 Move X1, X0
	057 Move X0, X19
	058 Move X2, X31
	059 Call SR.Format, X0, X1
	060 Move X19, X0
	061 Move X0, 0xD85000
	062 Move X0, [X0+1400]
	063 Call 0x1C17D08
	064 Call 0x1C17F10
	065 Move X20, X0
	066 Move X0, 0xDAA000
	067 Move X0, [X0+960]
	068 Call 0x1C17D08
	069 Move X2, X0
	070 Move X0, X20
	071 Move X1, X19
	072 Move X3, X31
	073 Call ArgumentException..ctor, X0, X1, X2
	074 Move X0, 0xDB4000
	075 Move X0, [X0+3432]
	076 Call 0x1C17D08
	077 Move X1, X0
	078 Move X0, X20
	079 Call 0x1C17DEC

Method: System.Void .ctor(System.UInt32 a, System.UInt16 b, System.UInt16 c, System.Byte d, System.Byte e, System.Byte f, System.Byte g, System.Byte h, System.Byte i, System.Byte j, System.Byte k)

Disassembly:
	0x03377A50 LDR X8, [X8 + 0x80]
	0x03377A54 B 0x3377A08
	0x03377A58 ADRP X8, 0xDB3000
	0x03377A5C LDR X8, [X8 + 0xDA8]
	0x03377A60 B 0x3377A08
	0x03377A64 ADRP X8, 0xDB3000
	0x03377A68 LDR X8, [X8 + 0xDE0]
	0x03377A6C B 0x3377A08
	0x03377A70 ADRP X8, 0xDB3000
	0x03377A74 LDR X8, [X8 + 0xDF0]
	0x03377A78 B 0x3377A08
	0x03377A7C BL 0x1C16F28
	0x03377A80 SUB X31, X31, 0x60
	0x03377A84 STP X30, X25, [X31 + 0x20]
	0x03377A88 STP X24, X23, [X31 + 0x30]
	0x03377A8C STP X22, X21, [X31 + 0x40]

ISIL:
	001 Move W8, [X31+24]
	002 Move W9, [X31+16]
	003 Move W10, [X31+8]
	004 Move W11, [X31]
	005 Move [X0], W1
	006 NotImplemented "Instruction STRH not yet implemented."
	007 NotImplemented "Instruction STRH not yet implemented."
	008 Move [X0+8], W4
	009 Move [X0+9], W5
	010 Move [X0+10], W6
	011 Move [X0+11], W7
	012 Move [X0+12], W11
	013 Move [X0+13], W10
	014 Move [X0+14], W9
	015 Move [X0+15], W8
	016 Return 

Method: System.Void .ctor(System.Int32 a, System.Int16 b, System.Int16 c, System.Byte d, System.Byte e, System.Byte f, System.Byte g, System.Byte h, System.Byte i, System.Byte j, System.Byte k)

Disassembly:
	0x03377A90 STP X20, X19, [X31 + 0x50]
	0x03377A94 ADRP X22, 0x1065000
	0x03377A98 LDRB W8, [X22 + 0xF2A]
	0x03377A9C MOV X19, X2
	0x03377AA0 MOV X20, X1
	0x03377AA4 MOV X21, X0
	0x03377AA8 TBNZ X8, 0x0, 0x3377AF0
	0x03377AAC ADRP X0, 0xD7E000
	0x03377AB0 LDR X0, [X0 + 0x170]
	0x03377AB4 BL 0x1C16CF4
	0x03377AB8 ADRP X0, 0xDAF000
	0x03377ABC LDR X0, [X0 + 0xD90]
	0x03377AC0 BL 0x1C16CF4
	0x03377AC4 ADRP X0, 0xDAB000
	0x03377AC8 LDR X0, [X0 + 0x28]
	0x03377ACC BL 0x1C16CF4

ISIL:
	001 Move W8, [X31+24]
	002 Move W9, [X31+16]
	003 Move W10, [X31+8]
	004 Move W11, [X31]
	005 Move [X0], W1
	006 NotImplemented "Instruction STRH not yet implemented."
	007 NotImplemented "Instruction STRH not yet implemented."
	008 Move [X0+8], W4
	009 Move [X0+9], W5
	010 Move [X0+10], W6
	011 Move [X0+11], W7
	012 Move [X0+12], W11
	013 Move [X0+13], W10
	014 Move [X0+14], W9
	015 Move [X0+15], W8
	016 Return 

Method: System.Void .ctor(System.String g)

Disassembly:
	0x03377AD0 ADRP X0, 0xDB3000
	0x03377AD4 LDR X0, [X0 + 0xDA0]
	0x03377AD8 BL 0x1C16CF4
	0x03377ADC ADRP X0, 0xDB3000
	0x03377AE0 LDR X0, [X0 + 0xDF8]
	0x03377AE4 BL 0x1C16CF4
	0x03377AE8 MOVZ W8, 0x1
	0x03377AEC STRB W8, [X22 + 0xF2A]
	0x03377AF0 ADRP X23, 0xDB3000
	0x03377AF4 LDR X23, [X23 + 0xDA0]
	0x03377AF8 CMP W20, 0x20
	0x03377AFC STR W31, [X31 + 0x14]
	0x03377B00 STR X31, [X31 + 0x8]
	0x03377B04 STR W31, [X31 + 0x4]
	0x03377B08 B.NE 0x3377D3C
	0x03377B0C ADRP X25, 0xD7E000
	0x03377B10 LDR X25, [X25 + 0x170]
	0x03377B14 MOV X24, X31
	0x03377B18 LDRH W22, [X21, X24, LSL]
	0x03377B1C SUB W8, W22, 0x30
	0x03377B20 CMP W8, 0xA
	0x03377B24 B.CC 0x3377B54
	0x03377B28 LDR X0, [X25]
	0x03377B2C LDR W8, [X0 + 0xE0]
	0x03377B30 CBNZ W8, 0x3377B38
	0x03377B34 BL 0x1C16DFC
	0x03377B38 MOV W0, W22
	0x03377B3C MOV X1, X31
	0x03377B40 BL 0x331AD34
	0x03377B44 SUB W8, W0, 0x41
	0x03377B48 AND W8, W8, 0xFFFF
	0x03377B4C CMP W8, 0x6
	0x03377B50 B.CS 0x3377D44
	0x03377B54 ADD X24, X24, 0x2
	0x03377B58 CMP X24, 0x40
	0x03377B5C B.NE 0x3377B18
	0x03377B60 ADRP X22, 0xDAF000
	0x03377B64 LDR X22, [X22 + 0xD90]
	0x03377B68 LDR X8, [X22]
	0x03377B6C LDR X0, [X8 + 0x20]
	0x03377B70 LDRB W8, [X0 + 0x135]
	0x03377B74 TBNZ X8, 0x0, 0x3377B7C
	0x03377B78 BL 0x1C5C684
	0x03377B7C ADD X2, X31, 0x1C
	0x03377B80 MOVZ W1, 0x8
	0x03377B84 MOVN W3, 0x0
	0x03377B88 MOVZ W4, 0x1000
	0x03377B8C MOV X0, X21
	0x03377B90 MOV X5, X19
	0x03377B94 MOV X6, X19
	0x03377B98 STR W31, [X31 + 0x1C]
	0x03377B9C BL 0x3378294
	0x03377BA0 MOV W8, W0
	0x03377BA4 MOV W0, W31
	0x03377BA8 TBZ X8, 0x0, 0x3377D6C
	0x03377BAC LDR X8, [X22]
	0x03377BB0 LDR X0, [X8 + 0x20]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Compare X1, 0
	008 JumpIfEqual {46}
	009 Move X21, 0x1063000
	010 Move W8, [X21+1890]
	011 Move X20, X1
	012 Move X19, X0
	013 NotImplemented "Instruction MOVI not yet implemented."
	014 Move W22, 1
	015 Move [X31+48], X31
	016 Move [X31+16], V0
	017 Move [X31+24], V0
	018 Move [X31], V0
	019 Move [X31+16], W22
	020 Compare W8, 0
	021 JumpIfNotEqual {26}
	022 Move X0, 0xDA4000
	023 Move X0, [X0+656]
	024 Call 0x1C17CF4
	025 Move [X21+1890], W22
	026 Move X0, X20
	027 Move X1, X31
	028 Call String.GetRawStringData, X0
	029 Move W1, [X20+16]
	030 Add X3, X31, 0
	031 Move W2, 15
	032 Call Guid.TryParseGuid, X0, X1, X2
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {58}
	037 Move V0, [X31]
	038 Move X22, [X31+80]
	039 Move X21, [X31+88]
	040 Move X30, [X31+64]
	041 Move [X19], V0
	042 Move X20, [X31+96]
	043 Move X19, [X31+104]
	044 Add X31, X31, 112
	045 Return 
	046 Move X0, 0xD82000
	047 Move X0, [X0+1320]
	048 Call 0x1C17D08
	049 Call 0x1C17F10
	050 Move X19, X0
	051 Move X0, 0xDAA000
	052 Move X0, [X0+952]
	053 Call 0x1C17D08
	054 Move X1, X0
	055 Move X0, X19
	056 Move X2, X31
	057 Call ArgumentNullException..ctor, X0, X1
	058 Add X0, X31, 0
	059 Call GuidResult.GetGuidParseException, X0
	060 Move X19, X0
	061 Move X0, 0xDB4000
	062 Move X0, [X0+3440]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X19
	066 Call 0x1C17DEC

Method: System.Guid Parse(System.String input)

Disassembly:
	0x03377F6C BL 0x3317FCC
	0x03377F70 TBNZ X0, 0x0, 0x3377F90
	0x03377F74 CBZ X21, 0x3377FF4
	0x03377F78 LDR W8, [X21 + 0x18]
	0x03377F7C CMP W24, W8
	0x03377F80 B.CS 0x3377FF8
	0x03377F84 ADD X8, X21, W24, 0x1, SXTW
	0x03377F88 ADD W24, W24, 0x1
	0x03377F8C STRH W19, [X8 + 0x20]
	0x03377F90 SUBS X23, X23, 0x1
	0x03377F94 ADD X20, X20, 0x2
	0x03377F98 B.NE 0x3377F50
	0x03377F9C CBZ X21, 0x3377FC0
	0x03377FA0 LDR W8, [X21 + 0x18]
	0x03377FA4 CMP W24, W8
	0x03377FA8 B.LS 0x3377FB4
	0x03377FAC MOV X0, X31
	0x03377FB0 BL 0x339D6EC
	0x03377FB4 ADD X20, X21, 0x20
	0x03377FB8 MOV W19, W24
	0x03377FBC B 0x3377FD4
	0x03377FC0 CBZ W24, 0x3377FCC
	0x03377FC4 MOV X0, X31
	0x03377FC8 BL 0x339D6EC
	0x03377FCC MOV X19, X31
	0x03377FD0 MOV X20, X31
	0x03377FD4 MOV X0, X20
	0x03377FD8 MOV X1, X19
	0x03377FDC LDP X20, X19, [X31 + 0x40]
	0x03377FE0 LDP X22, X21, [X31 + 0x30]
	0x03377FE4 LDP X24, X23, [X31 + 0x20]
	0x03377FE8 LDR X30, [X31 + 0x10]
	0x03377FEC ADD X31, X31, 0x50
	0x03377FF0 RET
	0x03377FF4 BL 0x1C16F20
	0x03377FF8 BL 0x1C16F28
	0x03377FFC STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {23}
	006 Move X20, 0x1063000
	007 Move W8, [X20+1890]
	008 Move X19, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0xDA4000
	012 Move X0, [X0+656]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1890], W8
	016 Move X0, X19
	017 Move X1, X31
	018 Call String.GetRawStringData, X0
	019 Move W1, [X19+16]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Move X0, 0xD82000
	024 Move X0, [X0+1320]
	025 Call 0x1C17D08
	026 Call 0x1C17F10
	027 Move X19, X0
	028 Move X0, 0xDB1000
	029 Move X0, [X0+840]
	030 Call 0x1C17D08
	031 Move X1, X0
	032 Move X0, X19
	033 Move X2, X31
	034 Call ArgumentNullException..ctor, X0, X1
	035 Move X0, 0xDB4000
	036 Move X0, [X0+3464]
	037 Call 0x1C17D08
	038 Move X1, X0
	039 Move X0, X19
	040 Call 0x1C17DEC

Method: System.Guid Parse(System.ReadOnlySpan`1<System.Char> input)

Disassembly:
	0x03378000 STP X22, X21, [X31 + 0x10]
	0x03378004 STP X20, X19, [X31 + 0x20]
	0x03378008 ADRP X22, 0x1064000
	0x0337800C LDRB W8, [X22 + 0xF2E]
	0x03378010 MOV W21, W2
	0x03378014 MOV X20, X1
	0x03378018 MOV X19, X0
	0x0337801C TBNZ X8, 0x0, 0x3378040
	0x03378020 ADRP X0, 0xD7D000
	0x03378024 LDR X0, [X0 + 0x170]
	0x03378028 BL 0x1C16CF4
	0x0337802C ADRP X0, 0xDAA000
	0x03378030 LDR X0, [X0 + 0x28]
	0x03378034 BL 0x1C16CF4
	0x03378038 MOVZ W8, 0x1
	0x0337803C STRB W8, [X22 + 0xF2E]
	0x03378040 ADD W8, W21, 0x1
	0x03378044 CMP W8, W20
	0x03378048 B.GE 0x337807C
	0x0337804C CMP W20, W21
	0x03378050 B.LS 0x33780C4
	0x03378054 LDRH W9, [X19, W21, SXTW]
	0x03378058 CMP W9, 0x30
	0x0337805C B.NE 0x337807C
	0x03378060 CMP W8, W20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move [X31+72], X19
	004 NotImplemented "Instruction MOVI not yet implemented."
	005 Move W8, 2
	006 Add X3, X31, 0
	007 Move W2, 15
	008 Move [X31+48], X31
	009 Move [X31+16], V0
	010 Move [X31+24], V0
	011 Move [X31], V0
	012 Move [X31+16], W8
	013 Call Guid.TryParseGuid, X0, X1, X2
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {24}
	018 Move X0, [X31]
	019 Move X1, [X31+8]
	020 Move X30, [X31+64]
	021 Move X19, [X31+72]
	022 Add X31, X31, 80
	023 Return X0
	024 Add X0, X31, 0
	025 Call GuidResult.GetGuidParseException, X0
	026 Move X19, X0
	027 Move X0, 0xDB3000
	028 Move X0, [X0+3472]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X19
	032 Call 0x1C17DEC

Method: System.Boolean TryParse(System.String input, out System.Guid result)

Disassembly:
	0x03378064 B.CS 0x33780C4
	0x03378068 LDRH W19, [X19, W8, SXTW]
	0x0337806C CMP W19, 0x78
	0x03378070 B.NE 0x3378090
	0x03378074 MOVZ W0, 0x1
	0x03378078 B 0x3378080
	0x0337807C MOV W0, W31
	0x03378080 LDP X20, X19, [X31 + 0x20]
	0x03378084 LDP X22, X21, [X31 + 0x10]
	0x03378088 LDR X30, [X31], #0x30
	0x0337808C RET
	0x03378090 ADRP X8, 0xD7D000
	0x03378094 LDR X8, [X8 + 0x170]
	0x03378098 LDR X0, [X8]
	0x0337809C LDR W8, [X0 + 0xE0]
	0x033780A0 CBNZ W8, 0x33780A8
	0x033780A4 BL 0x1C16DFC
	0x033780A8 MOV W0, W19
	0x033780AC MOV X1, X31
	0x033780B0 BL 0x331AEAC
	0x033780B4 AND W8, W0, 0xFFFF
	0x033780B8 CMP W8, 0x78
	0x033780BC CSET W0, EQ
	0x033780C0 B 0x3378080
	0x033780C4 BL 0x1C16F28
	0x033780C8 MOV X4, X31
	0x033780CC MOV X5, X31
	0x033780D0 B 0x3377D84
	0x033780D4 STR X30, [X31 - 0x10]!
	0x033780D8 MOV X6, X5
	0x033780DC MOV X5, X4
	0x033780E0 MOV W4, W3
	0x033780E4 MOV W3, W2
	0x033780E8 ADD X2, X31, 0xC
	0x033780EC STR W31, [X31 + 0xC]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X19, X1
	007 Compare X0, 0
	008 JumpIfEqual {37}
	009 Move X21, 0x1062000
	010 Move W8, [X21+1890]
	011 Move X20, X0
	012 Compare W8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, 0xDA3000
	015 Move X0, [X0+656]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1890], W8
	019 Move X0, X20
	020 Move X1, X31
	021 Call String.GetRawStringData, X0
	022 Move W1, [X20+16]
	023 NotImplemented "Instruction MOVI not yet implemented."
	024 Add X3, X31, 0
	025 Move W2, 15
	026 Move [X31+48], X31
	027 Move [X31+16], V0
	028 Move [X31+24], V0
	029 Move [X31], V0
	030 Call Guid.TryParseGuid, X0, X1, X2
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {37}
	035 Move V0, [X31]
	036 Move [X19], V0
	037 Move [X19], X31
	038 Move [X19+8], X31
	039 Move X20, [X31+80]
	040 Move X19, [X31+88]
	041 Move X30, [X31+64]
	042 Move X21, [X31+72]
	043 And W0, W0, 1
	044 Add X31, X31, 96
	045 Return X0

Method: System.Boolean TryParse(System.ReadOnlySpan`1<System.Char> input, out System.Guid result)

Disassembly:
	0x033780F0 BL 0x3378294
	0x033780F4 AND W0, W0, 0x1
	0x033780F8 LDR X30, [X31], #0x10
	0x033780FC RET
	0x03378100 SUB X31, X31, 0x20
	0x03378104 STP X30, X19, [X31 + 0x10]
	0x03378108 MOV X6, X5
	0x0337810C MOV X19, X4
	0x03378110 MOV W4, W3
	0x03378114 MOV W3, W2
	0x03378118 ADD X2, X31, 0x8
	0x0337811C ADD X5, X31, 0xC
	0x03378120 STR X31, [X31 + 0x8]
	0x03378124 STRH W31, [X19]
	0x03378128 BL 0x3378294
	0x0337812C LDR W8, [X31 + 0xC]
	0x03378130 AND W0, W0, 0x1
	0x03378134 STRH W8, [X19]
	0x03378138 LDP X30, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move [X31+72], X19
	004 Move X19, X2
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Add X3, X31, 0
	007 Move W2, 15
	008 Move [X31+48], X31
	009 Move [X31+16], V0
	010 Move [X31+24], V0
	011 Move [X31], V0
	012 Call Guid.TryParseGuid, X0, X1, X2
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {19}
	017 Move V0, [X31]
	018 Move [X19], V0
	019 Move [X19], X31
	020 Move [X19+8], X31
	021 Move X30, [X31+64]
	022 Move X19, [X31+72]
	023 And W0, W0, 1
	024 Add X31, X31, 80
	025 Return X0

Method: System.Boolean TryParseGuid(System.ReadOnlySpan`1<System.Char> guidString, System.Guid/GuidStyles flags, ref System.Guid/GuidResult result)

Disassembly:
	0x03377BB4 LDRB W8, [X0 + 0x135]
	0x03377BB8 TBNZ X8, 0x0, 0x3377BC0
	0x03377BBC BL 0x1C5C684
	0x03377BC0 ADD X0, X21, 0x10
	0x03377BC4 ADD X2, X31, 0x18
	0x03377BC8 ADD X5, X31, 0x1C
	0x03377BCC MOVZ W1, 0x4
	0x03377BD0 MOVN W3, 0x0
	0x03377BD4 MOVZ W4, 0x1000
	0x03377BD8 MOV X6, X19
	0x03377BDC STR X31, [X31 + 0x18]
	0x03377BE0 STRH W31, [X19 + 0x4]
	0x03377BE4 BL 0x3378294
	0x03377BE8 LDR W9, [X31 + 0x1C]
	0x03377BEC MOV W8, W0
	0x03377BF0 MOV W0, W31
	0x03377BF4 STRH W9, [X19 + 0x4]
	0x03377BF8 TBZ X8, 0x0, 0x3377D6C
	0x03377BFC LDR X8, [X22]
	0x03377C00 LDR X0, [X8 + 0x20]
	0x03377C04 LDRB W8, [X0 + 0x135]
	0x03377C08 TBNZ X8, 0x0, 0x3377C10
	0x03377C0C BL 0x1C5C684
	0x03377C10 ADD X0, X21, 0x18
	0x03377C14 ADD X2, X31, 0x18
	0x03377C18 ADD X5, X31, 0x1C
	0x03377C1C MOVZ W1, 0x4
	0x03377C20 MOVN W3, 0x0
	0x03377C24 MOVZ W4, 0x1000
	0x03377C28 MOV X6, X19
	0x03377C2C STR X31, [X31 + 0x18]
	0x03377C30 STRH W31, [X19 + 0x6]
	0x03377C34 BL 0x3378294
	0x03377C38 LDR W9, [X31 + 0x1C]
	0x03377C3C MOV W8, W0
	0x03377C40 MOV W0, W31
	0x03377C44 STRH W9, [X19 + 0x6]
	0x03377C48 TBZ X8, 0x0, 0x3377D6C
	0x03377C4C LDR X8, [X22]
	0x03377C50 LDR X0, [X8 + 0x20]
	0x03377C54 LDRB W8, [X0 + 0x135]
	0x03377C58 TBNZ X8, 0x0, 0x3377C60
	0x03377C5C BL 0x1C5C684
	0x03377C60 ADD X0, X21, 0x20
	0x03377C64 ADD X2, X31, 0x1C
	0x03377C68 ADD X5, X31, 0x14
	0x03377C6C MOVZ W1, 0x4
	0x03377C70 MOVN W3, 0x0
	0x03377C74 MOVZ W4, 0x1000
	0x03377C78 MOV X6, X19
	0x03377C7C STR W31, [X31 + 0x1C]
	0x03377C80 BL 0x3378294
	0x03377C84 MOV W8, W0
	0x03377C88 MOV W0, W31
	0x03377C8C TBZ X8, 0x0, 0x3377D6C
	0x03377C90 MOVZ W8, 0x14
	0x03377C94 ADD X2, X31, 0x4
	0x03377C98 ADD X4, X31, 0x8
	0x03377C9C MOVZ W3, 0x2000
	0x03377CA0 MOV X0, X21
	0x03377CA4 MOV X1, X20
	0x03377CA8 MOV X5, X19
	0x03377CAC STR W8, [X31 + 0x4]
	0x03377CB0 BL 0x3378144
	0x03377CB4 TBZ X0, 0x0, 0x3377D68
	0x03377CB8 LDR W8, [X31 + 0x4]
	0x03377CBC CMP W8, 0x20
	0x03377CC0 B.NE 0x3377D3C
	0x03377CC4 LDRH W8, [X31 + 0x14]
	0x03377CC8 ADRP X9, 0xFFFFFFFFFD775000
	0x03377CCC ADRP X10, 0xFFFFFFFFFD774000
	0x03377CD0 LDR V0, [X9 + 0x1C]
	0x03377CD4 REV W8, W8
	0x03377CD8 UBFM W8, W8, 0x10, 0x1F
	0x03377CDC STRH W8, [X19 + 0x8]
	0x03377CE0 LDR X8, [X31 + 0x8]
	0x03377CE4 LDR V1, [X10 + 0x11]
	0x03377CE8 UNIMPLEMENTED
	0x03377CEC MOVZ W0, 0x1
	0x03377CF0 UNIMPLEMENTED
	0x03377CF4 UNIMPLEMENTED
	0x00000000 INVALID
	0x00000000 INVALID
	0x03377D00 UNIMPLEMENTED
	0x03377D04 UBFM X9, X8, 0x8, 0x3F
	0x03377D08 UNIMPLEMENTED
	0x03377D0C UNIMPLEMENTED
	0x03377D10 STR W8, [X31 + 0x14]
	0x03377D14 STRB W9, [X19 + 0xE]
	0x03377D18 FMOV W9, S1
	0x03377D1C UNIMPLEMENTED
	0x03377D20 STRB W8, [X19 + 0xF]
	0x03377D24 UNIMPLEMENTED
	0x03377D28 UNIMPLEMENTED
	0x03377D2C UNIMPLEMENTED
	0x03377D30 UNIMPLEMENTED
	0x03377D34 STUR S0, [X19 + 0xA]
	0x03377D38 B 0x3377D6C
	0x03377D3C LDR X2, [X23]
	0x03377D40 B 0x3377D50
	0x03377D44 ADRP X8, 0xDB3000
	0x03377D48 LDR X8, [X8 + 0xDF8]
	0x03377D4C LDR X2, [X8]
	0x03377D50 MOVZ W1, 0x2
	0x03377D54 MOV X0, X19
	0x03377D58 MOV X3, X31
	0x03377D5C MOV X4, X31
	0x03377D60 MOV X5, X31
	0x03377D64 BL 0x3377D84
	0x03377D68 MOV W0, W31
	0x03377D6C LDP X20, X19, [X31 + 0x50]
	0x03377D70 LDP X22, X21, [X31 + 0x40]
	0x03377D74 LDP X24, X23, [X31 + 0x30]
	0x03377D78 LDP X30, X25, [X31 + 0x20]
	0x03377D7C ADD X31, X31, 0x60
	0x03377D80 RET
	0x03377D84 STP X30, X19, [X31 - 0x10]!
	0x03377D88 LDR W8, [X0 + 0x10]
	0x03377D8C STR W1, [X0 + 0x14]
	0x03377D90 STP X2, X3, [X0 + 0x18]
	0x03377D94 STP X4, X5, [X0 + 0x28]
	0x03377D98 CBNZ W8, 0x3377DA4
	0x03377D9C LDP X30, X19, [X31], #0x10
	0x03377DA0 RET
	0x03377DA4 BL 0x3376DF4
	0x03377DA8 MOV X19, X0
	0x03377DAC ADRP X0, 0xDB3000
	0x03377DB0 LDR X0, [X0 + 0xE00]
	0x03377DB4 BL 0x1C16D08
	0x03377DB8 MOV X1, X0
	0x03377DBC MOV X0, X19
	0x03377DC0 BL 0x1C16DEC
	0x03377DC4 SUB X31, X31, 0x50
	0x03377DC8 STR X30, [X31 + 0x10]
	0x03377DCC STP X24, X23, [X31 + 0x20]
	0x03377DD0 STP X22, X21, [X31 + 0x30]
	0x03377DD4 STP X20, X19, [X31 + 0x40]
	0x03377DD8 ADRP X21, 0x1065000
	0x03377DDC LDRB W8, [X21 + 0xF2D]
	0x03377DE0 MOV X19, X1
	0x03377DE4 MOV X20, X0
	0x03377DE8 TBNZ X8, 0x0, 0x3377E48
	0x03377DEC ADRP X0, 0xD85000
	0x03377DF0 LDR X0, [X0 + 0x8D8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0x1066000
	010 Move W8, [X23+3880]
	011 Move X19, X3
	012 Move W20, W2
	013 Move X21, X1
	014 Move X22, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0xDB4000
	020 Move X0, [X0+3448]
	021 Call 0x1C17CF4
	022 Move X0, 0xDAC000
	023 Move X0, [X0+40]
	024 Call 0x1C17CF4
	025 Move X0, 0xDB4000
	026 Move X0, [X0+3456]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+3880], W8
	030 Move X0, X22
	031 Move X1, X21
	032 Call MemoryExtensions.TrimStart, X0
	033 Call MemoryExtensions.TrimEnd, X0
	034 Move X21, X1
	035 Compare W21, 0
	036 JumpIfEqual {94}
	037 Move X25, 0xDB4000
	038 Move X25, [X25+3448]
	039 Move W2, 45
	040 Move X1, X21
	041 Move X22, X0
	042 Move X3, [X25]
	043 Call 0x338CFD4
	044 Move W23, W0
	045 Move TEMP, X0
	046 And TEMP, TEMP, -2147483648
	047 Compare TEMP, -2147483648
	048 JumpIfEqual {51}
	049 Move W8, 68
	050 And W31, W20, W8
	051 Move TEMP, X20
	052 And TEMP, TEMP, 64
	053 Compare TEMP, 64
	054 JumpIfEqual {94}
	055 Move X3, [X25]
	056 Move W2, 123
	057 Move X0, X22
	058 Move X1, X21
	059 Call 0x338CFD4
	060 Move W24, W0
	061 Move TEMP, X0
	062 And TEMP, TEMP, -2147483648
	063 Compare TEMP, -2147483648
	064 JumpIfEqual {67}
	065 Move W8, 34
	066 And W31, W20, W8
	067 Move TEMP, X20
	068 And TEMP, TEMP, 32
	069 Compare TEMP, 32
	070 JumpIfEqual {94}
	071 Move X3, [X25]
	072 Move W2, 40
	073 Move X0, X22
	074 Move X1, X21
	075 Call 0x338CFD4
	076 Move TEMP, X0
	077 And TEMP, TEMP, -2147483648
	078 Compare TEMP, -2147483648
	079 JumpIfEqual {90}
	080 Move W8, 17
	081 And W31, W20, W8
	082 Move TEMP, X23
	083 And TEMP, TEMP, -2147483648
	084 Compare TEMP, -2147483648
	085 JumpIfEqual {114}
	086 Move X0, X22
	087 Move X1, X21
	088 Move X2, X19
	089 Call Guid.TryParseGuidWithDashes, X0, X1
	090 Move TEMP, X20
	091 And TEMP, TEMP, 16
	092 Compare TEMP, 16
	093 JumpIfNotEqual {82}
	094 Move X8, 0xDB4000
	095 Move X8, [X8+3456]
	096 Move W1, 2
	097 Move X0, X19
	098 Move X3, X31
	099 Move X2, [X8]
	100 Move X4, X31
	101 Move X5, X31
	102 Call GuidResult.SetFailure, X0, X1, X2, X3, X4, X5
	103 Move W0, W31
	104 Move X20, [X31+48]
	105 Move X19, [X31+56]
	106 Move X22, [X31+32]
	107 Move X21, [X31+40]
	108 Move X24, [X31+16]
	109 Move X23, [X31+24]
	110 And W0, W0, 1
	111 Move X30, [X31+64]
	112 Move X25, [X31+72]
	113 Return X0
	114 Move TEMP, X24
	115 And TEMP, TEMP, -2147483648
	116 Compare TEMP, -2147483648
	117 JumpIfEqual {122}
	118 Move X0, X22
	119 Move X1, X21
	120 Move X2, X19
	121 Call Guid.TryParseGuidWithHexPrefix, X0, X1
	122 Move X0, X22
	123 Move X1, X21
	124 Move X2, X19
	125 Call Guid.TryParseGuidWithNoStyle, X0, X1
	126 Move X20, X0
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X0, X20
	129 Call 0x3EB2AD0
	130 Move X20, X0
	131 Move X0, 0xD87000
	132 Move X0, [X0+3960]
	133 Call 0x1C17D08
	134 Move X8, [X20]
	135 Move X1, [X8]
	136 Call 0x1C18270
	137 Move TEMP, X0
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfEqual {151}
	141 Move X0, 0xD85000
	142 Move X0, [X0+1400]
	143 Call 0x1C17D08
	144 Move X8, [X20]
	145 Move X1, [X8]
	146 Call 0x1C18270
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfNotEqual {162}
	151 Move X20, [X20]
	152 Call 0x3EB2AE0
	153 Move X0, 0xDB4000
	154 Move X0, [X0+3456]
	155 Call 0x1C17D08
	156 Move X2, X0
	157 Move W1, 5
	158 Move X0, X19
	159 Move X3, X31
	160 Move X4, X31
	161 Move X5, X20
	162 Move W0, 8
	163 Call 0x3EB2AF0
	164 Move X8, [X20]
	165 Move [X0], X8
	166 Move X1, 0xB3E000
	167 Add X1, X1, 3672
	168 Move X2, X31
	169 Call 0x3EB2B00
	170 Move X20, X0
	171 Call 0x3EB2AE0
	172 Move X0, X20
	173 Call 0x1D2D690
	174 Call 0x1991590

Method: System.Boolean TryParseGuidWithHexPrefix(System.ReadOnlySpan`1<System.Char> guidString, ref System.Guid/GuidResult result)

Disassembly:
	0x03378444 MOV X1, X0
	0x03378448 MOV X0, X19
	0x0337844C BL 0x1C16DEC
	0x03378450 MOVZ W0, 0x8
	0x03378454 BL 0x3EB1AF0
	0x03378458 LDR X8, [X20]
	0x0337845C STR X8, [X0]
	0x03378460 ADRP X1, 0xB3C000
	0x03378464 ADD X1, X1, 0xE58
	0x03378468 MOV X2, X31
	0x0337846C BL 0x3EB1B00
	0x03378470 MOV X20, X0
	0x03378474 BL 0x3EB1AE0
	0x03378478 MOV X0, X20
	0x0337847C BL 0x1D2C690
	0x03378480 BL 0x1990590
	0x03378484 SUB X31, X31, 0x20
	0x03378488 STP X30, X19, [X31 + 0x10]
	0x0337848C MOV X19, X5
	0x03378490 STR W31, [X31 + 0xC]
	0x03378494 STRH W31, [X5]
	0x03378498 ADD X5, X31, 0xC
	0x0337849C BL 0x3378294
	0x033784A0 LDR W8, [X31 + 0xC]
	0x033784A4 AND W0, W0, 0x1
	0x033784A8 STRH W8, [X19]
	0x033784AC LDP X30, X19, [X31 + 0x10]
	0x033784B0 ADD X31, X31, 0x20
	0x033784B4 RET
	0x033784B8 MOVZ W8, 0x4
	0x033784BC STR W8, [X0 + 0x14]
	0x033784C0 STR X1, [X0 + 0x30]
	0x033784C4 RET
	0x033784C8 STR X30, [X31 - 0x10]!
	0x033784CC CBZ W2, 0x33785D4
	0x033784D0 LDR W8, [X0]
	0x033784D4 CMP W2, 0x1
	0x033784D8 STRB W8, [X1]
	0x033784DC B.EQ 0x33785D4
	0x033784E0 LDR W8, [X0]
	0x033784E4 CMP W2, 0x2
	0x033784E8 UBFM W8, W8, 0x8, 0x1F
	0x033784EC STRB W8, [X1 + 0x1]
	0x033784F0 B.LS 0x33785D4
	0x033784F4 LDRH W8, [X0 + 0x2]
	0x033784F8 CMP W2, 0x3
	0x033784FC STRB W8, [X1 + 0x2]
	0x03378500 B.EQ 0x33785D4
	0x03378504 LDRB W8, [X0 + 0x3]
	0x03378508 CMP W2, 0x4
	0x0337850C STRB W8, [X1 + 0x3]
	0x03378510 B.LS 0x33785D4
	0x03378514 LDRB W8, [X0 + 0x4]
	0x03378518 CMP W2, 0x5
	0x0337851C STRB W8, [X1 + 0x4]
	0x03378520 B.EQ 0x33785D4
	0x03378524 LDRB W8, [X0 + 0x5]
	0x03378528 CMP W2, 0x6
	0x0337852C STRB W8, [X1 + 0x5]
	0x03378530 B.LS 0x33785D4
	0x03378534 LDRB W8, [X0 + 0x6]
	0x03378538 CMP W2, 0x7
	0x0337853C STRB W8, [X1 + 0x6]
	0x03378540 B.EQ 0x33785D4
	0x03378544 LDRB W8, [X0 + 0x7]
	0x03378548 CMP W2, 0x8
	0x0337854C STRB W8, [X1 + 0x7]
	0x03378550 B.LS 0x33785D4
	0x03378554 LDRB W8, [X0 + 0x8]
	0x03378558 CMP W2, 0x9
	0x0337855C STRB W8, [X1 + 0x8]
	0x03378560 B.EQ 0x33785D4
	0x03378564 LDRB W8, [X0 + 0x9]
	0x03378568 CMP W2, 0xA
	0x0337856C STRB W8, [X1 + 0x9]
	0x03378570 B.LS 0x33785D4
	0x03378574 LDRB W8, [X0 + 0xA]
	0x03378578 CMP W2, 0xB
	0x0337857C STRB W8, [X1 + 0xA]
	0x03378580 B.EQ 0x33785D4
	0x03378584 LDRB W8, [X0 + 0xB]
	0x03378588 CMP W2, 0xC
	0x0337858C STRB W8, [X1 + 0xB]
	0x03378590 B.LS 0x33785D4
	0x03378594 LDRB W8, [X0 + 0xC]
	0x03378598 CMP W2, 0xD
	0x0337859C STRB W8, [X1 + 0xC]
	0x033785A0 B.EQ 0x33785D4
	0x033785A4 LDRB W8, [X0 + 0xD]
	0x033785A8 CMP W2, 0xE
	0x033785AC STRB W8, [X1 + 0xD]
	0x033785B0 B.LS 0x33785D4
	0x033785B4 LDRB W8, [X0 + 0xE]
	0x033785B8 CMP W2, 0xF
	0x033785BC STRB W8, [X1 + 0xE]
	0x033785C0 B.EQ 0x33785D4
	0x033785C4 LDRB W8, [X0 + 0xF]
	0x033785C8 STRB W8, [X1 + 0xF]
	0x033785CC LDR X30, [X31], #0x10
	0x033785D0 RET
	0x033785D4 BL 0x1C16F28
	0x033785D8 STR X30, [X31 - 0x30]!
	0x033785DC STP X22, X21, [X31 + 0x10]
	0x033785E0 STP X20, X19, [X31 + 0x20]
	0x033785E4 ADRP X21, 0x1064000
	0x033785E8 ADRP X22, 0xD7B000
	0x033785EC ADRP X20, 0xDAA000
	0x033785F0 LDRB W8, [X21 + 0xF2F]
	0x033785F4 LDR X22, [X22 + 0x618]
	0x033785F8 LDR X20, [X20 + 0x2F8]
	0x033785FC MOV X19, X0
	0x03378600 TBNZ X8, 0x0, 0x3378624
	0x03378604 ADRP X0, 0xD7B000
	0x03378608 LDR X0, [X0 + 0x618]
	0x0337860C BL 0x1C16CF4
	0x03378610 ADRP X0, 0xDAA000
	0x03378614 LDR X0, [X0 + 0x2F8]
	0x03378618 BL 0x1C16CF4
	0x0337861C MOVZ W8, 0x1
	0x03378620 STRB W8, [X21 + 0xF2F]
	0x03378624 LDR X0, [X22]
	0x03378628 MOVZ W1, 0x10
	0x0337862C BL 0x1C16D6C
	0x03378630 LDR X1, [X20]
	0x03378634 MOV X20, X0
	0x03378638 BL 0x25FB4C0
	0x0337863C MOV X2, X0
	0x03378640 MOV X3, X1
	0x03378644 MOV X0, X19
	0x03378648 MOV X1, X2
	0x0337864C MOV X2, X3
	0x03378650 MOV X3, X31
	0x03378654 BL 0x338BC88
	0x03378658 MOV X0, X20
	0x0337865C LDP X20, X19, [X31 + 0x20]
	0x03378660 LDP X22, X21, [X31 + 0x10]
	0x03378664 LDR X30, [X31], #0x30
	0x03378668 RET
	0x0337866C STP X30, X21, [X31 - 0x20]!
	0x03378670 STP X20, X19, [X31 + 0x10]
	0x03378674 ADRP X20, 0x1064000
	0x03378678 ADRP X21, 0xDA3000
	0x0337867C LDRB W8, [X20 + 0xF30]
	0x03378680 LDR X21, [X21 + 0xBE0]
	0x03378684 MOV X19, X0
	0x03378688 TBNZ X8, 0x0, 0x33786A0
	0x0337868C ADRP X0, 0xDA3000
	0x03378690 LDR X0, [X0 + 0xBE0]
	0x03378694 BL 0x1C16CF4
	0x03378698 MOVZ W8, 0x1
	0x0337869C STRB W8, [X20 + 0xF30]
	0x033786A0 LDR X1, [X21]
	0x033786A4 MOV X0, X19
	0x033786A8 LDP X20, X19, [X31 + 0x10]
	0x033786AC LDP X30, X21, [X31], #0x20
	0x033786B0 B 0x33786B4
	0x033786B4 STR X30, [X31 - 0x40]!
	0x033786B8 STP X24, X23, [X31 + 0x10]
	0x033786BC STP X22, X21, [X31 + 0x20]
	0x033786C0 STP X20, X19, [X31 + 0x30]
	0x033786C4 ADRP X21, 0x1064000
	0x033786C8 LDRB W8, [X21 + 0xF33]
	0x033786CC MOV X20, X1
	0x033786D0 MOV X19, X0
	0x033786D4 TBNZ X8, 0x0, 0x33786F8
	0x033786D8 ADRP X0, 0xDAA000
	0x033786DC LDR X0, [X0 + 0x4E8]
	0x033786E0 BL 0x1C16CF4
	0x033786E4 ADRP X0, 0xDA3000
	0x033786E8 LDR X0, [X0 + 0xBE0]
	0x033786EC BL 0x1C16CF4
	0x033786F0 MOVZ W8, 0x1
	0x033786F4 STRB W8, [X21 + 0xF33]
	0x033786F8 STR W31, [X31 + 0xC]
	0x033786FC CBZ X20, 0x3378708
	0x03378700 LDR W8, [X20 + 0x10]
	0x03378704 CBNZ W8, 0x3378718
	0x03378708 ADRP X8, 0xDA3000
	0x0337870C LDR X8, [X8 + 0xBE0]
	0x03378710 LDR X20, [X8]
	0x03378714 CBZ X20, 0x33788A8
	0x03378718 LDR W8, [X20 + 0x10]
	0x0337871C CMP W8, 0x1
	0x03378720 B.NE 0x33787A0
	0x03378724 MOV X0, X20
	0x03378728 MOV W1, W31
	0x0337872C MOV X2, X31
	0x03378730 BL 0x3222A1C
	0x03378734 AND W8, W0, 0xFFFF
	0x03378738 CMP W8, 0x58
	0x0337873C B.HI 0x3378760
	0x03378740 CMP W8, 0x44
	0x03378744 B.HI 0x3378784
	0x03378748 AND W8, W0, 0xFFFF
	0x0337874C CMP W8, 0x42
	0x03378750 B.EQ 0x337880C
	0x03378754 CMP W8, 0x44
	0x03378758 B.EQ 0x337877C
	0x0337875C B 0x33787A0
	0x03378760 CMP W8, 0x64
	0x03378764 B.HI 0x33787E8
	0x03378768 AND W8, W0, 0xFFFF
	0x0337876C CMP W8, 0x62
	0x03378770 B.EQ 0x337880C
	0x03378774 CMP W8, 0x64
	0x03378778 B.NE 0x33787A0
	0x0337877C MOVZ W0, 0x24
	0x03378780 B 0x3378818
	0x03378784 AND W8, W0, 0xFFFF
	0x03378788 CMP W8, 0x4E
	0x0337878C B.EQ 0x3378814
	0x03378790 CMP W8, 0x50
	0x03378794 B.EQ 0x337880C
	0x03378798 CMP W8, 0x58
	0x0337879C B.EQ 0x3378804
	0x033787A0 ADRP X0, 0xDA8000
	0x033787A4 LDR X0, [X0 + 0xC08]
	0x033787A8 BL 0x1C16D08
	0x033787AC BL 0x1C16F10
	0x033787B0 MOV X19, X0
	0x033787B4 ADRP X0, 0xDB2000
	0x033787B8 LDR X0, [X0 + 0xE20]
	0x033787BC BL 0x1C16D08
	0x033787C0 MOV X1, X0
	0x033787C4 MOV X0, X19
	0x033787C8 MOV X2, X31
	0x033787CC BL 0x33674A0
	0x033787D0 ADRP X0, 0xDB2000
	0x033787D4 LDR X0, [X0 + 0xE28]
	0x033787D8 BL 0x1C16D08
	0x033787DC MOV X1, X0
	0x033787E0 MOV X0, X19
	0x033787E4 BL 0x1C16DEC
	0x033787E8 AND W8, W0, 0xFFFF
	0x033787EC CMP W8, 0x6E
	0x033787F0 B.EQ 0x3378814
	0x033787F4 CMP W8, 0x70
	0x033787F8 B.EQ 0x337880C
	0x033787FC CMP W8, 0x78
	0x03378800 B.NE 0x33787A0
	0x03378804 MOVZ W0, 0x44
	0x03378808 B 0x3378818
	0x0337880C MOVZ W0, 0x26
	0x03378810 B 0x3378818
	0x03378814 MOVZ W0, 0x20
	0x03378818 MOV X1, X31
	0x0337881C BL 0x32277A4
	0x03378820 CBZ X0, 0x33788A8
	0x03378824 MOV X21, X0
	0x03378828 MOV X0, X31
	0x0337882C BL 0x32C1424
	0x03378830 LDR W22, [X21 + 0x10]
	0x03378834 MOV W23, W0
	0x03378838 TBZ X22, 0x1F, 0x3378844
	0x0337883C MOV X0, X31
	0x03378840 BL 0x339D6EC
	0x03378844 ADRP X24, 0x1061000
	0x03378848 LDRB W8, [X24 + 0x762]
	0x0337884C CBNZ W8, 0x3378864
	0x03378850 ADRP X0, 0xDA2000
	0x03378854 LDR X0, [X0 + 0x290]
	0x03378858 BL 0x1C16CF4
	0x0337885C MOVZ W8, 0x1
	0x03378860 STRB W8, [X24 + 0x762]
	0x03378864 MOV X0, X20
	0x03378868 MOV X1, X31
	0x0337886C ADD X23, X21, W23, SXTW
	0x03378870 BL 0x3225708
	0x03378874 LDR W5, [X20 + 0x10]
	0x03378878 MOV X4, X0
	0x0337887C ADD X3, X31, 0xC
	0x03378880 MOV X0, X19
	0x03378884 MOV X1, X23
	0x03378888 MOV X2, X22
	0x0337888C BL 0x3378DDC
	0x03378890 MOV X0, X21
	0x03378894 LDP X20, X19, [X31 + 0x30]
	0x03378898 LDP X22, X21, [X31 + 0x20]
	0x0337889C LDP X24, X23, [X31 + 0x10]
	0x033788A0 LDR X30, [X31], #0x40
	0x033788A4 RET
	0x033788A8 BL 0x1C16F20
	0x033788AC LDP W8, W9, [X0]
	0x033788B0 LDP W10, W11, [X0 + 0x8]
	0x033788B4 EOR W8, W9, W8, 0x0
	0x033788B8 EOR W8, W8, W10, 0x0
	0x033788BC EOR W0, W8, W11, 0x0
	0x033788C0 RET
	0x033788C4 STP X30, X21, [X31 - 0x20]!
	0x033788C8 STP X20, X19, [X31 + 0x10]
	0x033788CC ADRP X21, 0x1064000
	0x033788D0 LDRB W8, [X21 + 0xF31]
	0x033788D4 MOV X20, X1
	0x033788D8 MOV X19, X0
	0x033788DC TBNZ X8, 0x0, 0x33788F4
	0x033788E0 ADRP X0, 0xD88000
	0x033788E4 LDR X0, [X0 + 0xB98]
	0x033788E8 BL 0x1C16CF4
	0x033788EC MOVZ W8, 0x1
	0x033788F0 STRB W8, [X21 + 0xF31]
	0x033788F4 CBZ X20, 0x337895C
	0x033788F8 ADRP X8, 0xD88000
	0x033788FC LDR X8, [X8 + 0xB98]
	0x03378900 LDR X9, [X20]
	0x03378904 LDR X8, [X8]
	0x03378908 CMP X9, X8
	0x0337890C B.NE 0x337895C
	0x03378910 MOV X0, X20
	0x03378914 BL 0x1C16E08
	0x03378918 LDR W8, [X0]
	0x0337891C LDR W9, [X19]
	0x03378920 CMP W8, W9
	0x03378924 B.NE 0x337895C
	0x03378928 LDR W8, [X0 + 0x4]
	0x0337892C LDR W9, [X19 + 0x4]
	0x03378930 CMP W8, W9
	0x03378934 B.NE 0x337895C
	0x03378938 LDR W8, [X0 + 0x8]
	0x0337893C LDR W9, [X19 + 0x8]
	0x03378940 CMP W8, W9
	0x03378944 B.NE 0x337895C
	0x03378948 LDR W8, [X0 + 0xC]
	0x0337894C LDR W9, [X19 + 0xC]
	0x03378950 CMP W8, W9
	0x03378954 CSET W0, EQ
	0x03378958 B 0x3378960
	0x0337895C MOV W0, W31
	0x03378960 LDP X20, X19, [X31 + 0x10]
	0x03378964 LDP X30, X21, [X31], #0x20
	0x03378968 RET
	0x0337896C LDR W8, [X0]
	0x03378970 CMP W8, W1
	0x03378974 B.NE 0x33789A8
	0x03378978 LDR W8, [X0 + 0x4]
	0x0337897C UBFM X9, X1, 0x20, 0x3F
	0x03378980 CMP W8, W9
	0x03378984 B.NE 0x33789A8
	0x03378988 LDR W8, [X0 + 0x8]
	0x0337898C CMP W8, W2
	0x03378990 B.NE 0x33789A8
	0x03378994 LDR W8, [X0 + 0xC]
	0x03378998 UBFM X9, X2, 0x20, 0x3F
	0x0337899C CMP W8, W9
	0x033789A0 CSET W0, EQ
	0x033789A4 RET
	0x033789A8 MOV W0, W31
	0x033789AC RET
	0x033789B0 CMP W1, W2
	0x033789B4 MOVN W8, 0x0
	0x033789B8 CSNEG W0, W8, W8, CC
	0x033789BC RET
	0x033789C0 STP X30, X21, [X31 - 0x20]!
	0x033789C4 STP X20, X19, [X31 + 0x10]
	0x033789C8 ADRP X21, 0x1064000
	0x033789CC LDRB W8, [X21 + 0xF32]
	0x033789D0 MOV X20, X1
	0x033789D4 MOV X19, X0
	0x033789D8 TBNZ X8, 0x0, 0x33789F0
	0x033789DC ADRP X0, 0xD88000
	0x033789E0 LDR X0, [X0 + 0xB98]
	0x033789E4 BL 0x1C16CF4
	0x033789E8 MOVZ W8, 0x1
	0x033789EC STRB W8, [X21 + 0xF32]
	0x033789F0 CBZ X20, 0x3378ADC
	0x033789F4 ADRP X8, 0xD88000
	0x033789F8 LDR X8, [X8 + 0xB98]
	0x033789FC LDR X9, [X20]
	0x03378A00 LDR X8, [X8]
	0x03378A04 CMP X9, X8
	0x03378A08 B.NE 0x3378AEC
	0x03378A0C MOV X0, X20
	0x03378A10 BL 0x1C16E08
	0x03378A14 LDR W8, [X0]
	0x03378A18 LDR W9, [X19]
	0x03378A1C CMP W8, W9
	0x03378A20 B.NE 0x3378ACC
	0x03378A24 LDRH W8, [X0 + 0x4]
	0x03378A28 LDRH W9, [X19 + 0x4]
	0x03378A2C CMP W8, W9
	0x03378A30 B.NE 0x3378ACC
	0x03378A34 LDRH W8, [X0 + 0x6]
	0x03378A38 LDRH W9, [X19 + 0x6]
	0x03378A3C CMP W8, W9
	0x03378A40 B.NE 0x3378ACC
	0x03378A44 LDRB W8, [X0 + 0x8]
	0x03378A48 LDRB W9, [X19 + 0x8]
	0x03378A4C CMP W8, W9
	0x03378A50 B.NE 0x3378ACC
	0x03378A54 LDRB W8, [X0 + 0x9]
	0x03378A58 LDRB W9, [X19 + 0x9]
	0x03378A5C CMP W8, W9
	0x03378A60 B.NE 0x3378ACC
	0x03378A64 LDRB W8, [X0 + 0xA]
	0x03378A68 LDRB W9, [X19 + 0xA]
	0x03378A6C CMP W8, W9
	0x03378A70 B.NE 0x3378ACC
	0x03378A74 LDRB W8, [X0 + 0xB]
	0x03378A78 LDRB W9, [X19 + 0xB]
	0x03378A7C CMP W8, W9

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 32
	015 Move X22, 0x1065000
	016 Move W8, [X22+3881]
	017 Move X19, X2
	018 Move X20, X1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {77}
	024 Move X0, 0xDB3000
	025 Move X0, [X0+3448]
	026 Call 0x1C17CF4
	027 Move X0, 0xDB0000
	028 Move X0, [X0+2024]
	029 Call 0x1C17CF4
	030 Move X0, 0xDAF000
	031 Move X0, [X0+3472]
	032 Call 0x1C17CF4
	033 Move X0, 0xDAB000
	034 Move X0, [X0+40]
	035 Call 0x1C17CF4
	036 Move X0, 0xDAA000
	037 Move X0, [X0+2104]
	038 Call 0x1C17CF4
	039 Move X0, 0xDAB000
	040 Move X0, [X0+2344]
	041 Call 0x1C17CF4
	042 Move X0, 0xDB3000
	043 Move X0, [X0+3496]
	044 Call 0x1C17CF4
	045 Move X0, 0xDB3000
	046 Move X0, [X0+3504]
	047 Call 0x1C17CF4
	048 Move X0, 0xDB3000
	049 Move X0, [X0+3512]
	050 Call 0x1C17CF4
	051 Move X0, 0xDB3000
	052 Move X0, [X0+3520]
	053 Call 0x1C17CF4
	054 Move X0, 0xDB3000
	055 Move X0, [X0+3528]
	056 Call 0x1C17CF4
	057 Move X0, 0xDB3000
	058 Move X0, [X0+3536]
	059 Call 0x1C17CF4
	060 Move X0, 0xDB3000
	061 Move X0, [X0+3544]
	062 Call 0x1C17CF4
	063 Move X0, 0xDB3000
	064 Move X0, [X0+3552]
	065 Call 0x1C17CF4
	066 Move X0, 0xDB3000
	067 Move X0, [X0+3560]
	068 Call 0x1C17CF4
	069 Move X0, 0xDB3000
	070 Move X0, [X0+3568]
	071 Call 0x1C17CF4
	072 Move X0, 0xDB1000
	073 Move X0, [X0+128]
	074 Call 0x1C17CF4
	075 Move W8, 1
	076 Move [X22+3881], W8
	077 Move X28, 0xDB3000
	078 Move X28, [X28+3560]
	079 Move X0, X21
	080 Move X1, X20
	081 Move [X29-12], W31
	082 Call Guid.EatAllWhitespace, X0
	083 Move X20, X1
	084 Compare W20, 0
	085 JumpIfEqual {379}
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Move X21, X0
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move W2, 1
	090 Move X0, X21
	091 Move X1, X20
	092 Call Guid.IsHexPrefix, X0, X1
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {401}
	097 Move X25, 0xDB0000
	098 Move X25, [X25+2024]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X22, [X25]
	101 Move X0, X31
	102 Call ThrowHelper.ThrowArgumentOutOfRangeException
	103 Move X0, [X22+32]
	104 Move W8, [X0+309]
	105 Move TEMP, X8
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfEqual {110}
	109 Call 0x1C5D684
	110 Move X26, 0xDB3000
	111 Move X26, [X26+3448]
	112 Subtract W24, W20, 3
	113 Add X23, X21, 6
	114 Move W2, 44
	115 Move X3, [X26]
	116 Move X0, X23
	117 Move X1, X24
	118 Call 0x338CFD4
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X8, 0xDAF000
	121 Move X8, [X8+3472]
	122 Move W22, W0
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X27, [X8]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X0, X31
	127 Call ThrowHelper.ThrowArgumentOutOfRangeException
	128 Move X0, [X27+32]
	129 Move W8, [X0+309]
	130 Move TEMP, X8
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfEqual {135}
	134 Call 0x1C5D684
	135 Move W1, W22
	136 Subtract X2, X29, 4
	137 Move TEMP, 0
	138 Not TEMP
	139 Move W3, TEMP
	140 Move W4, 4096
	141 Move X0, X23
	142 Move X5, X19
	143 Move X6, X19
	144 Move [X29-4], W31
	145 Call Guid.StringToInt, X0, X1, X2, X3, X4, X5
	146 Move W8, W0
	147 Move W0, W31
	148 Move TEMP, X8
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {387}
	152 Add W2, W22, 4
	153 Move X0, X21
	154 Move X1, X20
	155 Call Guid.IsHexPrefix, X0, X1
	156 Move TEMP, X0
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfNotEqual {412}
	160 Move X23, [X25]
	161 Add W27, W22, 6
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X0, X31
	164 Call ThrowHelper.ThrowArgumentOutOfRangeException
	165 Move X0, [X23+32]
	166 Move W8, [X0+309]
	167 Move TEMP, X8
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfEqual {172}
	171 Call 0x1C5D684
	172 Move X3, [X26]
	173 Subtract W24, W20, W27
	174 Add X23, X21, W27
	175 Move W2, 44
	176 Move X0, X23
	177 Move X1, X24
	178 Call 0x338CFD4
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X8, 0xDAF000
	181 Move X8, [X8+3472]
	182 Move W22, W0
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move X25, [X8]
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X0, X31
	187 Call ThrowHelper.ThrowArgumentOutOfRangeException
	188 Move X0, [X25+32]
	189 Move W8, [X0+309]
	190 Move TEMP, X8
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfEqual {195}
	194 Call 0x1C5D684
	195 Move W1, W22
	196 Subtract X2, X29, 8
	197 Subtract X5, X29, 4
	198 Move TEMP, 0
	199 Not TEMP
	200 Move W3, TEMP
	201 Move W4, 4096
	202 Move X0, X23
	203 Move X6, X19
	204 Move [X29-8], X31
	205 NotImplemented "Instruction STRH not yet implemented."
	206 Call Guid.StringToInt, X0, X1, X2, X3, X4, X5
	207 NotImplemented "Instruction LDUR not yet implemented."
	208 Move X23, 0xDB0000
	209 Move W8, W0
	210 Move W0, W31
	211 NotImplemented "Instruction STRH not yet implemented."
	212 Move X23, [X23+2024]
	213 Move TEMP, X8
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfNotEqual {387}
	217 Add W22, W22, W27
	218 Add W2, W22, 1
	219 Move X0, X21
	220 Move X1, X20
	221 Call Guid.IsHexPrefix, X0, X1
	222 Move TEMP, X0
	223 And TEMP, TEMP, 1
	224 Compare TEMP, 1
	225 JumpIfNotEqual {416}
	226 Move X23, [X23]
	227 Add W27, W22, 3
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move X0, X31
	230 Call ThrowHelper.ThrowArgumentOutOfRangeException
	231 Move X0, [X23+32]
	232 Move W8, [X0+309]
	233 Move TEMP, X8
	234 And TEMP, TEMP, 1
	235 Compare TEMP, 1
	236 JumpIfEqual {238}
	237 Call 0x1C5D684
	238 Move X3, [X26]
	239 Subtract W24, W20, W27
	240 Add X23, X21, W27
	241 Move W2, 44
	242 Move X0, X23
	243 Move X1, X24
	244 Call 0x338CFD4
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move X8, 0xDAF000
	247 Move X8, [X8+3472]
	248 Move W22, W0
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Move X25, [X8]
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move X0, X31
	253 Call ThrowHelper.ThrowArgumentOutOfRangeException
	254 Move X0, [X25+32]
	255 Move W8, [X0+309]
	256 Move TEMP, X8
	257 And TEMP, TEMP, 1
	258 Compare TEMP, 1
	259 JumpIfEqual {261}
	260 Call 0x1C5D684
	261 Move W1, W22
	262 Subtract X2, X29, 8
	263 Subtract X5, X29, 4
	264 Move TEMP, 0
	265 Not TEMP
	266 Move W3, TEMP
	267 Move W4, 4096
	268 Move X0, X23
	269 Move X6, X19
	270 Move [X29-8], X31
	271 NotImplemented "Instruction STRH not yet implemented."
	272 Call Guid.StringToInt, X0, X1, X2, X3, X4, X5
	273 NotImplemented "Instruction LDUR not yet implemented."
	274 Move X23, 0xDB0000
	275 Move W8, W0
	276 Move W0, W31
	277 NotImplemented "Instruction STRH not yet implemented."
	278 Move X23, [X23+2024]
	279 Move TEMP, X8
	280 And TEMP, TEMP, 1
	281 Compare TEMP, 1
	282 JumpIfNotEqual {387}
	283 Add W22, W22, 1
	284 Add W8, W22, W27
	285 NotImplemented "Instruction CMP not yet implemented."
	286 NotImplemented "Instruction LDRH not yet implemented."
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Add X8, X31, 0
	289 Subtract X9, X8, 16
	290 Move [X29-24], X9
	291 Add X31, X9, 0
	292 Move X28, X31
	293 Move [X8-16], X31
	294 Add W22, W27, W22
	295 Add W2, W22, 1
	296 Move X0, X21
	297 Move X1, X20
	298 Call Guid.IsHexPrefix, X0, X1
	299 Move TEMP, X0
	300 And TEMP, TEMP, 1
	301 Compare TEMP, 1
	302 JumpIfNotEqual {420}
	303 Move X23, [X23]
	304 Add W27, W22, 3
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Move X0, X31
	307 Call ThrowHelper.ThrowArgumentOutOfRangeException
	308 Move X0, [X23+32]
	309 Move W8, [X0+309]
	310 Move TEMP, X8
	311 And TEMP, TEMP, 1
	312 Compare TEMP, 1
	313 JumpIfEqual {315}
	314 Call 0x1C5D684
	315 Move X3, [X26]
	316 Subtract W24, W20, W27
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Add X23, X21, W27
	319 Move W2, 125
	320 Move X0, X23
	321 Move X1, X24
	322 Call 0x338CFD4
	323 Move W22, W0
	324 NotImplemented "Instruction CMP not yet implemented."
	325 Move W2, 44
	326 Move X0, X23
	327 Move X1, X24
	328 Call 0x338CFD4
	329 Move W22, W0
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Move X8, 0xDAF000
	332 Move X8, [X8+3472]
	333 NotImplemented "Instruction CMP not yet implemented."
	334 Move X25, [X8]
	335 NotImplemented "Instruction CMP not yet implemented."
	336 Move X0, X31
	337 Call ThrowHelper.ThrowArgumentOutOfRangeException
	338 Move X0, [X25+32]
	339 Move W8, [X0+309]
	340 Move TEMP, X8
	341 And TEMP, TEMP, 1
	342 Compare TEMP, 1
	343 JumpIfEqual {345}
	344 Call 0x1C5D684
	345 Move W1, W22
	346 Subtract X2, X29, 4
	347 Subtract X5, X29, 12
	348 Move TEMP, 0
	349 Not TEMP
	350 Move W3, TEMP
	351 Move W4, 4096
	352 Move X0, X23
	353 Move X6, X19
	354 Move [X29-4], W31
	355 Call Guid.StringToInt, X0, X1, X2, X3, X4, X5
	356 Move X23, 0xDB0000
	357 Move X23, [X23+2024]
	358 Move TEMP, X0
	359 And TEMP, TEMP, 1
	360 Compare TEMP, 1
	361 JumpIfNotEqual {386}
	362 NotImplemented "Instruction LDUR not yet implemented."
	363 NotImplemented "Instruction CMP not yet implemented."
	364 NotImplemented "Instruction LDUR not yet implemented."
	365 Move [X9], W8
	366 Add X28, X28, 1
	367 NotImplemented "Instruction CMP not yet implemented."
	368 NotImplemented "Instruction LDUR not yet implemented."
	369 Move V0, [X8]
	370 Add W8, W27, W22
	371 Add W8, W8, 1
	372 NotImplemented "Instruction CMP not yet implemented."
	373 Move [X19+8], D0
	374 NotImplemented "Instruction LDRH not yet implemented."
	375 NotImplemented "Instruction CMP not yet implemented."
	376 Subtract W9, W20, 1
	377 NotImplemented "Instruction CMP not yet implemented."
	378 Move W0, 1
	379 Move X2, [X28]
	380 Move W1, 2
	381 Move X0, X19
	382 Move X3, X31
	383 Move X4, X31
	384 Move X5, X31
	385 Call GuidResult.SetFailure, X0, X1, X2, X3, X4, X5
	386 Move W0, W31
	387 Add X31, X29, 0
	388 Move X20, [X31+80]
	389 Move X19, [X31+88]
	390 Move X22, [X31+64]
	391 Move X21, [X31+72]
	392 Move X24, [X31+48]
	393 Move X23, [X31+56]
	394 Move X26, [X31+32]
	395 Move X25, [X31+40]
	396 Move X28, [X31+16]
	397 Move X27, [X31+24]
	398 Move X29, [X31+96]
	399 Move X30, [X31+104]
	400 Return X0
	401 Move X8, 0xDB3000
	402 Move X9, 0xDB3000
	403 Move X8, [X8+3536]
	404 Move X9, [X9+3520]
	405 Move X2, [X8]
	406 Move X3, [X9]
	407 Move W1, 2
	408 Move X0, X19
	409 Move X8, 0xDB3000
	410 Move X8, [X8+3504]
	411 Move X2, [X8]
	412 Move X8, 0xDB3000
	413 Move X9, 0xDB3000
	414 Move X8, [X8+3536]
	415 Move X9, [X9+3544]
	416 Move X8, 0xDB3000
	417 Move X9, 0xDB3000
	418 Move X8, [X8+3536]
	419 Move X9, [X9+3528]
	420 Move X8, 0xDB3000
	421 Move X9, 0xDB3000
	422 Move X8, [X8+3536]
	423 Move X9, [X9+3512]
	424 Move X8, 0xDB1000
	425 Move X8, [X8+128]
	426 Move X8, 0xDB3000
	427 Move X8, [X8+3496]
	428 Move X8, 0xDB3000
	429 Move X8, [X8+3552]
	430 Move X8, 0xDB3000
	431 Move X8, [X8+3568]
	432 Call 0x1C17F28

Method: System.Boolean TryParseGuidWithNoStyle(System.ReadOnlySpan`1<System.Char> guidString, ref System.Guid/GuidResult result)

Disassembly:
	0x03378A80 B.NE 0x3378ACC
	0x03378A84 LDRB W8, [X0 + 0xC]
	0x03378A88 LDRB W9, [X19 + 0xC]
	0x03378A8C CMP W8, W9
	0x03378A90 B.NE 0x3378ACC
	0x03378A94 LDRB W8, [X0 + 0xD]
	0x03378A98 LDRB W9, [X19 + 0xD]
	0x03378A9C CMP W8, W9
	0x03378AA0 B.NE 0x3378ACC
	0x03378AA4 LDRB W8, [X0 + 0xE]
	0x03378AA8 LDRB W9, [X19 + 0xE]
	0x03378AAC CMP W8, W9
	0x03378AB0 B.NE 0x3378ACC
	0x03378AB4 LDRB W8, [X0 + 0xF]
	0x03378AB8 LDRB W9, [X19 + 0xF]
	0x03378ABC CMP W8, W9
	0x03378AC0 B.NE 0x3378ACC
	0x03378AC4 MOV W0, W31
	0x03378AC8 B 0x3378AE0
	0x03378ACC CMP W9, W8
	0x03378AD0 MOVN W8, 0x0
	0x03378AD4 CSNEG W0, W8, W8, CC
	0x03378AD8 B 0x3378AE0
	0x03378ADC MOVZ W0, 0x1
	0x03378AE0 LDP X20, X19, [X31 + 0x10]
	0x03378AE4 LDP X30, X21, [X31], #0x20
	0x03378AE8 RET
	0x03378AEC ADRP X0, 0xD83000
	0x03378AF0 LDR X0, [X0 + 0x578]
	0x03378AF4 BL 0x1C16D08
	0x03378AF8 BL 0x1C16F10
	0x03378AFC MOV X19, X0
	0x03378B00 ADRP X0, 0xDB2000
	0x03378B04 LDR X0, [X0 + 0xE30]
	0x03378B08 BL 0x1C16D08
	0x03378B0C MOV X20, X0
	0x03378B10 ADRP X0, 0xD85000
	0x03378B14 LDR X0, [X0 + 0xEC8]
	0x03378B18 BL 0x1C16D08
	0x03378B1C MOV X2, X0
	0x03378B20 MOV X0, X19
	0x03378B24 MOV X1, X20
	0x03378B28 MOV X3, X31
	0x03378B2C BL 0x330E16C
	0x03378B30 ADRP X0, 0xDB2000
	0x03378B34 LDR X0, [X0 + 0xE38]
	0x03378B38 BL 0x1C16D08
	0x03378B3C MOV X1, X0
	0x03378B40 MOV X0, X19
	0x03378B44 BL 0x1C16DEC
	0x03378B48 LDR W8, [X0]
	0x03378B4C CMP W8, W1
	0x03378B50 B.NE 0x3378C10
	0x03378B54 LDRSH W8, [X0 + 0x4]
	0x03378B58 UBFM X9, X1, 0x10, 0x3F
	0x03378B5C SBFM W9, W9, 0x10, 0x1F
	0x03378B60 CMP W9, W8
	0x03378B64 B.NE 0x3378BF8
	0x03378B68 LDRSH W8, [X0 + 0x6]
	0x03378B6C SBFM X9, X1, 0x30, 0x3F
	0x03378B70 CMP W9, W8
	0x03378B74 B.NE 0x3378BF8
	0x03378B78 LDRB W8, [X0 + 0x8]
	0x03378B7C CMP W8, W2, UXTB
	0x03378B80 B.NE 0x3378C04
	0x03378B84 LDRB W8, [X0 + 0x9]
	0x03378B88 UBFM X9, X2, 0x8, 0x1F
	0x03378B8C CMP W8, W9, UXTB
	0x03378B90 B.NE 0x3378C0C
	0x03378B94 LDRB W8, [X0 + 0xA]
	0x03378B98 UBFM X9, X2, 0x10, 0x1F
	0x03378B9C CMP W8, W9, UXTB
	0x03378BA0 B.NE 0x3378C0C
	0x03378BA4 LDRB W8, [X0 + 0xB]
	0x03378BA8 CMP W8, W2, LSR
	0x03378BAC B.NE 0x3378C1C
	0x03378BB0 LDRB W8, [X0 + 0xC]
	0x03378BB4 UBFM X9, X2, 0x20, 0x3F
	0x03378BB8 CMP W8, W9, UXTB
	0x03378BBC B.NE 0x3378C0C
	0x03378BC0 LDRB W8, [X0 + 0xD]
	0x03378BC4 UBFM X9, X2, 0x28, 0x3F
	0x03378BC8 CMP W8, W9, UXTB
	0x03378BCC B.NE 0x3378C0C
	0x03378BD0 LDRB W8, [X0 + 0xE]
	0x03378BD4 UBFM X9, X2, 0x30, 0x3F
	0x03378BD8 CMP W8, W9, UXTB
	0x03378BDC B.NE 0x3378C0C
	0x03378BE0 LDRB W8, [X0 + 0xF]
	0x03378BE4 UBFM X9, X2, 0x38, 0x3F
	0x03378BE8 CMP W9, W8
	0x03378BEC B.NE 0x3378C24
	0x03378BF0 MOV W0, W31
	0x03378BF4 RET
	0x03378BF8 MOVN W8, 0x0
	0x03378BFC CSNEG W0, W8, W8, HI
	0x03378C00 RET
	0x03378C04 CMP W8, W2, UXTB
	0x03378C08 B 0x3378C10
	0x03378C0C CMP W8, W9, UXTB
	0x03378C10 MOVN W8, 0x0
	0x03378C14 CSNEG W0, W8, W8, CC
	0x03378C18 RET
	0x03378C1C CMP W8, W2, LSR
	0x03378C20 B 0x3378C10
	0x03378C24 CMP W8, W9
	0x03378C28 B 0x3378C10
	0x03378C2C MOV X8, X0
	0x03378C30 CMP W1, W3
	0x03378C34 MOV W0, W31
	0x03378C38 B.NE 0x3378C64
	0x03378C3C CMP W8, W2
	0x03378C40 B.NE 0x3378C64
	0x03378C44 UBFM X8, X8, 0x20, 0x3F
	0x03378C48 UBFM X9, X2, 0x20, 0x3F
	0x03378C4C CMP W8, W9
	0x03378C50 B.NE 0x3378C64
	0x03378C54 UBFM X8, X3, 0x20, 0x3F
	0x03378C58 UBFM X9, X1, 0x20, 0x3F
	0x03378C5C CMP W9, W8
	0x03378C60 CSET W0, EQ
	0x03378C64 RET
	0x03378C68 MOV X8, X0
	0x03378C6C CMP W1, W3
	0x03378C70 MOVZ W0, 0x1
	0x03378C74 B.NE 0x3378CA0
	0x03378C78 CMP W8, W2
	0x03378C7C B.NE 0x3378CA0
	0x03378C80 UBFM X8, X8, 0x20, 0x3F
	0x03378C84 UBFM X9, X2, 0x20, 0x3F
	0x03378C88 CMP W8, W9
	0x03378C8C B.NE 0x3378CA0
	0x03378C90 UBFM X8, X3, 0x20, 0x3F
	0x03378C94 UBFM X9, X1, 0x20, 0x3F
	0x03378C98 CMP W9, W8
	0x03378C9C CSET W0, NE
	0x03378CA0 RET
	0x03378CA4 B 0x33786B4
	0x03378CA8 AND W8, W0, 0xF
	0x03378CAC MOVZ W9, 0x30
	0x03378CB0 ADD W10, W8, 0x57
	0x03378CB4 BFM W9, W0, 0x0, 0x3
	0x03378CB8 CMP W8, 0x9
	0x03378CBC CSEL W0, W10, W9, HI
	0x03378CC0 RET
	0x03378CC4 UBFM W9, W1, 0x4, 0x7
	0x03378CC8 MOVZ W11, 0x30
	0x03378CCC BFM W11, W1, 0x4, 0x7
	0x03378CD0 CMP W9, 0x9
	0x03378CD4 ADD W9, W9, 0x57
	0x03378CD8 MOVZ W12, 0x30
	0x03378CDC AND W13, W1, 0xF
	0x03378CE0 CSEL W9, W9, W11, HI
	0x03378CE4 BFM W12, W1, 0x0, 0x3
	0x03378CE8 UBFM W11, W2, 0x4, 0x7
	0x03378CEC STRH W9, [X0]
	0x03378CF0 MOVZ W9, 0x30
	0x03378CF4 CMP W13, 0x9
	0x03378CF8 ADD W13, W13, 0x57
	0x03378CFC MOVZ W10, 0x30
	0x03378D00 BFM W9, W2, 0x4, 0x7
	0x03378D04 AND W14, W2, 0xF
	0x03378D08 CSEL W12, W13, W12, HI
	0x03378D0C ADD W13, W11, 0x57
	0x03378D10 CMP W11, 0x9
	0x03378D14 BFM W10, W2, 0x0, 0x3
	0x03378D18 ADD W11, W14, 0x57
	0x03378D1C CSEL W9, W13, W9, HI
	0x03378D20 CMP W14, 0x9
	0x03378D24 MOV X8, X0
	0x03378D28 STRH W12, [X0 + 0x2]
	0x03378D2C STRH W9, [X0 + 0x4]
	0x03378D30 CSEL W9, W11, W10, HI
	0x03378D34 MOVZ W0, 0x4
	0x03378D38 STRH W9, [X8 + 0x6]
	0x03378D3C RET
	0x03378D40 MOVZ W9, 0x30
	0x03378D44 MOVK W9, 0x780000
	0x03378D48 STR W9, [X0]
	0x03378D4C MOVZ W9, 0x2C
	0x03378D50 UBFM W10, W1, 0x4, 0x7
	0x03378D54 MOVZ W12, 0x30
	0x03378D58 MOVK W9, 0x300000
	0x03378D5C STR W9, [X0 + 0x8]
	0x03378D60 MOVZ W9, 0x78
	0x03378D64 BFM W12, W1, 0x4, 0x7
	0x03378D68 CMP W10, 0x9
	0x03378D6C ADD W10, W10, 0x57
	0x03378D70 STRH W9, [X0 + 0xC]
	0x03378D74 MOVZ W9, 0x30
	0x03378D78 AND W13, W1, 0xF
	0x03378D7C CSEL W10, W10, W12, HI
	0x03378D80 BFM W9, W1, 0x0, 0x3

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X22, 0x1065000
	011 Move W8, [X22+3882]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0xD7E000
	020 Move X0, [X0+368]
	021 Call 0x1C17CF4
	022 Move X0, 0xDAF000
	023 Move X0, [X0+3472]
	024 Call 0x1C17CF4
	025 Move X0, 0xDAB000
	026 Move X0, [X0+40]
	027 Call 0x1C17CF4
	028 Move X0, 0xDB3000
	029 Move X0, [X0+3488]
	030 Call 0x1C17CF4
	031 Move X0, 0xDB3000
	032 Move X0, [X0+3576]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+3882], W8
	036 Move X23, 0xDB3000
	037 Move X23, [X23+3488]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move [X31+20], W31
	040 Move [X31+8], X31
	041 Move [X31+4], W31
	042 Move X25, 0xD7E000
	043 Move X25, [X25+368]
	044 Move X24, X31
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Subtract W8, W22, 48
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X0, [X25]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move W0, W22
	054 Move X1, X31
	055 Call Char.ToUpperInvariant, X0
	056 Subtract W8, W0, 65
	057 And W8, W8, 0xFFFF
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add X24, X24, 2
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X22, 0xDAF000
	062 Move X22, [X22+3472]
	063 Move X8, [X22]
	064 Move X0, [X8+32]
	065 Move W8, [X0+309]
	066 Move TEMP, X8
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {71}
	070 Call 0x1C5D684
	071 Add X2, X31, 28
	072 Move W1, 8
	073 Move TEMP, 0
	074 Not TEMP
	075 Move W3, TEMP
	076 Move W4, 4096
	077 Move X0, X21
	078 Move X5, X19
	079 Move X6, X19
	080 Move [X31+28], W31
	081 Call Guid.StringToInt, X0, X1, X2, X3, X4, X5
	082 Move W8, W0
	083 Move W0, W31
	084 Move TEMP, X8
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {228}
	088 Move X8, [X22]
	089 Move X0, [X8+32]
	090 Move W8, [X0+309]
	091 Move TEMP, X8
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfEqual {96}
	095 Call 0x1C5D684
	096 Add X0, X21, 16
	097 Add X2, X31, 24
	098 Add X5, X31, 28
	099 Move W1, 4
	100 Move TEMP, 0
	101 Not TEMP
	102 Move W3, TEMP
	103 Move W4, 4096
	104 Move X6, X19
	105 Move [X31+24], X31
	106 NotImplemented "Instruction STRH not yet implemented."
	107 Call Guid.StringToInt, X0, X1, X2, X3, X4, X5
	108 Move W9, [X31+28]
	109 Move W8, W0
	110 Move W0, W31
	111 NotImplemented "Instruction STRH not yet implemented."
	112 Move TEMP, X8
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {228}
	116 Move X8, [X22]
	117 Move X0, [X8+32]
	118 Move W8, [X0+309]
	119 Move TEMP, X8
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfEqual {124}
	123 Call 0x1C5D684
	124 Add X0, X21, 24
	125 Add X2, X31, 24
	126 Add X5, X31, 28
	127 Move W1, 4
	128 Move TEMP, 0
	129 Not TEMP
	130 Move W3, TEMP
	131 Move W4, 4096
	132 Move X6, X19
	133 Move [X31+24], X31
	134 NotImplemented "Instruction STRH not yet implemented."
	135 Call Guid.StringToInt, X0, X1, X2, X3, X4, X5
	136 Move W9, [X31+28]
	137 Move W8, W0
	138 Move W0, W31
	139 NotImplemented "Instruction STRH not yet implemented."
	140 Move TEMP, X8
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfNotEqual {228}
	144 Move X8, [X22]
	145 Move X0, [X8+32]
	146 Move W8, [X0+309]
	147 Move TEMP, X8
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfEqual {152}
	151 Call 0x1C5D684
	152 Add X0, X21, 32
	153 Add X2, X31, 28
	154 Add X5, X31, 20
	155 Move W1, 4
	156 Move TEMP, 0
	157 Not TEMP
	158 Move W3, TEMP
	159 Move W4, 4096
	160 Move X6, X19
	161 Move [X31+28], W31
	162 Call Guid.StringToInt, X0, X1, X2, X3, X4, X5
	163 Move W8, W0
	164 Move W0, W31
	165 Move TEMP, X8
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfNotEqual {228}
	169 Move W8, 20
	170 Add X2, X31, 4
	171 Add X4, X31, 8
	172 Move W3, 0x2000
	173 Move X0, X21
	174 Move X1, X20
	175 Move X5, X19
	176 Move [X31+4], W8
	177 Call Guid.StringToLong, X0, X1, X2, X3, X4
	178 Move TEMP, X0
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfNotEqual {227}
	182 Move W8, [X31+4]
	183 NotImplemented "Instruction CMP not yet implemented."
	184 NotImplemented "Instruction LDRH not yet implemented."
	185 Move X9, -42512384
	186 Move X10, -42516480
	187 Move V0, [X9+28]
	188 NotImplemented "Instruction REV not yet implemented."
	189 Move W8, W8
	190 ShiftRight W8, 16
	191 And W8, W8, 0x7FFFFFFF
	192 NotImplemented "Instruction STRH not yet implemented."
	193 Move X8, [X31+8]
	194 Move V1, [X10+17]
	195 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	196 Move W0, 1
	197 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	198 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	199 NotImplemented "Instruction INVALID not yet implemented."
	200 NotImplemented "Instruction INVALID not yet implemented."
	201 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	202 Move X9, X8
	203 ShiftRight X9, 8
	204 And X9, X9, 0x7FFFFFFF
	205 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	206 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	207 Move [X31+20], W8
	208 Move [X19+14], W9
	209 Move W9, S1
	210 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	211 Move [X19+15], W8
	212 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	213 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	214 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	215 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	216 Move [X19+10], S0
	217 Move X2, [X23]
	218 Move X8, 0xDB3000
	219 Move X8, [X8+3576]
	220 Move X2, [X8]
	221 Move W1, 2
	222 Move X0, X19
	223 Move X3, X31
	224 Move X4, X31
	225 Move X5, X31
	226 Call GuidResult.SetFailure, X0, X1, X2, X3, X4, X5
	227 Move W0, W31
	228 Move X20, [X31+80]
	229 Move X19, [X31+88]
	230 Move X22, [X31+64]
	231 Move X21, [X31+72]
	232 Move X24, [X31+48]
	233 Move X23, [X31+56]
	234 Move X30, [X31+32]
	235 Move X25, [X31+40]
	236 Add X31, X31, 96
	237 Return X0

Method: System.Boolean TryParseGuidWithDashes(System.ReadOnlySpan`1<System.Char> guidString, ref System.Guid/GuidResult result)

Disassembly:
	0x0337815C MOVZ W2, 0x10
	0x03378160 MOV X5, X31
	0x03378164 BL 0x338CEF0
	0x03378168 STR X0, [X20]
	0x0337816C MOVZ W0, 0x1
	0x03378170 LDP X20, X19, [X31 + 0x10]
	0x03378174 LDR X30, [X31], #0x20
	0x03378178 RET
	0x0337817C CMP W1, 0x1
	0x03378180 MOV X20, X0
	0x03378184 B.NE 0x3378288
	0x03378188 MOV X0, X20
	0x0337818C BL 0x3EB1AD0
	0x03378190 MOV X20, X0
	0x03378194 ADRP X0, 0xD7B000
	0x03378198 LDR X0, [X0 + 0x858]
	0x0337819C BL 0x1C16D08
	0x033781A0 LDR X8, [X20]
	0x033781A4 LDR X1, [X8]
	0x033781A8 BL 0x1C17270
	0x033781AC TBZ X0, 0x0, 0x33781E0
	0x033781B0 LDR X20, [X20]
	0x033781B4 BL 0x3EB1AE0
	0x033781B8 LDR W8, [X19 + 0x10]
	0x033781BC CMP W8, 0x2
	0x033781C0 B.EQ 0x3378214
	0x033781C4 CMP W8, 0x1
	0x033781C8 B.EQ 0x337820C
	0x033781CC MOV W0, W31
	0x033781D0 MOVZ W8, 0x4
	0x033781D4 STR W8, [X19 + 0x14]
	0x033781D8 STR X20, [X19 + 0x30]
	0x033781DC B 0x3378170
	0x033781E0 ADRP X0, 0xD7B000
	0x033781E4 LDR X0, [X0 + 0x7D0]
	0x033781E8 BL 0x1C16D08
	0x033781EC LDR X8, [X20]
	0x033781F0 LDR X1, [X8]
	0x033781F4 BL 0x1C17270
	0x033781F8 TBZ X0, 0x0, 0x3378260
	0x033781FC LDR X20, [X20]
	0x03378200 BL 0x3EB1AE0
	0x03378204 LDR W8, [X19 + 0x10]
	0x03378208 CBZ W8, 0x33781CC
	0x0337820C MOV X0, X20
	0x03378210 BL 0x1C16F18
	0x03378214 ADRP X0, 0xDA8000
	0x03378218 LDR X0, [X0 + 0xC08]
	0x0337821C BL 0x1C16D08
	0x03378220 BL 0x1C16F10
	0x03378224 MOV X19, X0
	0x03378228 ADRP X0, 0xDB2000
	0x0337822C LDR X0, [X0 + 0xD80]
	0x03378230 BL 0x1C16D08
	0x03378234 MOV X1, X0
	0x03378238 MOV X0, X19
	0x0337823C MOV X2, X20
	0x03378240 MOV X3, X31
	0x03378244 BL 0x33674C4
	0x03378248 ADRP X0, 0xDB2000
	0x0337824C LDR X0, [X0 + 0xE10]
	0x03378250 BL 0x1C16D08
	0x03378254 MOV X1, X0
	0x03378258 MOV X0, X19
	0x0337825C BL 0x1C16DEC
	0x03378260 MOVZ W0, 0x8
	0x03378264 BL 0x3EB1AF0
	0x03378268 LDR X8, [X20]
	0x0337826C STR X8, [X0]
	0x03378270 ADRP X1, 0xB3C000
	0x03378274 ADD X1, X1, 0xE58
	0x03378278 MOV X2, X31
	0x0337827C BL 0x3EB1B00
	0x03378280 MOV X20, X0
	0x03378284 BL 0x3EB1AE0
	0x03378288 MOV X0, X20
	0x0337828C BL 0x1D2C690
	0x03378290 BL 0x1990590
	0x03378294 STR X30, [X31 - 0x50]!
	0x03378298 STP X26, X25, [X31 + 0x10]
	0x0337829C STP X24, X23, [X31 + 0x20]
	0x033782A0 STP X22, X21, [X31 + 0x30]
	0x033782A4 STP X20, X19, [X31 + 0x40]
	0x033782A8 ADRP X26, 0x1064000
	0x033782AC LDRB W8, [X26 + 0xF2C]
	0x033782B0 MOV X19, X6
	0x033782B4 MOV X21, X5
	0x033782B8 MOV W23, W4
	0x033782BC MOV W20, W3
	0x033782C0 MOV X22, X2
	0x033782C4 MOV X24, X1
	0x033782C8 MOV X25, X0
	0x033782CC TBNZ X8, 0x0, 0x33782E4
	0x033782D0 ADRP X0, 0xDB2000
	0x033782D4 LDR X0, [X0 + 0xDF8]
	0x033782D8 BL 0x1C16CF4
	0x033782DC MOVZ W8, 0x1
	0x033782E0 STRB W8, [X26 + 0xF2C]
	0x033782E4 STR W31, [X21]
	0x033782E8 LDR W26, [X22]
	0x033782EC MOVZ W2, 0x10
	0x033782F0 MOV X0, X25
	0x033782F4 MOV X1, X24
	0x033782F8 MOV W3, W23
	0x033782FC MOV X4, X22
	0x03378300 MOV X5, X31
	0x03378304 BL 0x338D52C
	0x03378308 ADDS W31, W20, 0x1
	0x0337830C STR W0, [X21]
	0x03378310 B.EQ 0x3378324
	0x03378314 LDR W8, [X22]
	0x03378318 SUB W8, W8, W26
	0x0337831C CMP W8, W20
	0x03378320 B.NE 0x337832C
	0x03378324 MOVZ W0, 0x1
	0x03378328 B 0x3378354
	0x0337832C ADRP X8, 0xDB2000
	0x03378330 LDR X8, [X8 + 0xDF8]
	0x03378334 MOVZ W1, 0x2
	0x03378338 MOV X0, X19
	0x0337833C MOV X3, X31
	0x03378340 LDR X2, [X8]
	0x03378344 MOV X4, X31
	0x03378348 MOV X5, X31
	0x0337834C BL 0x3377D84
	0x03378350 MOV W0, W31
	0x03378354 LDP X20, X19, [X31 + 0x40]
	0x03378358 LDP X22, X21, [X31 + 0x30]
	0x0337835C LDP X24, X23, [X31 + 0x20]
	0x03378360 LDP X26, X25, [X31 + 0x10]
	0x03378364 LDR X30, [X31], #0x50
	0x03378368 RET
	0x0337836C CMP W1, 0x1
	0x03378370 MOV X20, X0
	0x03378374 B.NE 0x3378478
	0x03378378 MOV X0, X20
	0x0337837C BL 0x3EB1AD0
	0x03378380 MOV X20, X0
	0x03378384 ADRP X0, 0xD7B000
	0x03378388 LDR X0, [X0 + 0x858]
	0x0337838C BL 0x1C16D08
	0x03378390 LDR X8, [X20]
	0x03378394 LDR X1, [X8]
	0x03378398 BL 0x1C17270
	0x0337839C TBZ X0, 0x0, 0x33783D0
	0x033783A0 LDR X20, [X20]
	0x033783A4 BL 0x3EB1AE0
	0x033783A8 LDR W8, [X19 + 0x10]
	0x033783AC CMP W8, 0x2
	0x033783B0 B.EQ 0x3378404
	0x033783B4 CMP W8, 0x1
	0x033783B8 B.EQ 0x33783FC
	0x033783BC MOVZ W8, 0x4
	0x033783C0 MOV W0, W31
	0x033783C4 STR W8, [X19 + 0x14]
	0x033783C8 STR X20, [X19 + 0x30]
	0x033783CC B 0x3378354
	0x033783D0 ADRP X0, 0xD7B000
	0x033783D4 LDR X0, [X0 + 0x7D0]
	0x033783D8 BL 0x1C16D08
	0x033783DC LDR X8, [X20]
	0x033783E0 LDR X1, [X8]
	0x033783E4 BL 0x1C17270
	0x033783E8 TBZ X0, 0x0, 0x3378450
	0x033783EC LDR X20, [X20]
	0x033783F0 BL 0x3EB1AE0
	0x033783F4 LDR W8, [X19 + 0x10]
	0x033783F8 CBZ W8, 0x33783BC
	0x033783FC MOV X0, X20
	0x03378400 BL 0x1C16F18
	0x03378404 ADRP X0, 0xDA8000
	0x03378408 LDR X0, [X0 + 0xC08]
	0x0337840C BL 0x1C16D08
	0x03378410 BL 0x1C16F10
	0x03378414 MOV X19, X0
	0x03378418 ADRP X0, 0xDB2000
	0x0337841C LDR X0, [X0 + 0xD80]
	0x03378420 BL 0x1C16D08
	0x03378424 MOV X1, X0
	0x03378428 MOV X0, X19
	0x0337842C MOV X2, X20
	0x03378430 MOV X3, X31
	0x03378434 BL 0x33674C4
	0x03378438 ADRP X0, 0xDB2000
	0x0337843C LDR X0, [X0 + 0xE18]
	0x03378440 BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0x1065000
	008 Move W8, [X22+3883]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xDAB000
	017 Move X0, [X0+40]
	018 Call 0x1C17CF4
	019 Move X0, 0xDB3000
	020 Move X0, [X0+3480]
	021 Call 0x1C17CF4
	022 Move X0, 0xDB3000
	023 Move X0, [X0+3488]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+3883], W8
	027 Move [X31+28], W31
	028 Move [X31+8], X31
	029 Compare W20, 0
	030 JumpIfEqual {193}
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction LDRH not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W8, 1
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W8, W31
	043 Or W9, W8, 8
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Add W9, W8, 13
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W9, 18
	052 Or W9, W8, W9
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Add W9, W8, 23
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Add X2, X31, 24
	061 Add X5, X31, 28
	062 Move W3, 8
	063 Move W4, 0x2000
	064 Move X0, X21
	065 Move X1, X20
	066 Move X6, X19
	067 Move [X31+24], W8
	068 Call Guid.StringToInt, X0, X1, X2, X3, X4, X5
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {185}
	073 Move W8, [X31+28]
	074 Add X2, X31, 24
	075 Add X5, X31, 28
	076 Move W3, 4
	077 Move [X19], W8
	078 Move W8, [X31+24]
	079 Move W4, 0x2000
	080 Move X0, X21
	081 Move X1, X20
	082 Add W8, W8, 1
	083 Move X6, X19
	084 Move [X31+24], W8
	085 Call Guid.StringToInt, X0, X1, X2, X3, X4, X5
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {185}
	090 Move W8, [X31+28]
	091 Add X2, X31, 24
	092 Add X5, X31, 28
	093 Move W3, 4
	094 NotImplemented "Instruction STRH not yet implemented."
	095 Move W8, [X31+24]
	096 Move W4, 0x2000
	097 Move X0, X21
	098 Move X1, X20
	099 Add W8, W8, 1
	100 Move X6, X19
	101 Move [X31+24], W8
	102 Call Guid.StringToInt, X0, X1, X2, X3, X4, X5
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {185}
	107 Move W8, [X31+28]
	108 Add X2, X31, 24
	109 Add X5, X31, 28
	110 Move W3, 4
	111 NotImplemented "Instruction STRH not yet implemented."
	112 Move W8, [X31+24]
	113 Move W4, 0x2000
	114 Move X0, X21
	115 Move X1, X20
	116 Add W8, W8, 1
	117 Move X6, X19
	118 Move [X31+24], W8
	119 Call Guid.StringToInt, X0, X1, X2, X3, X4, X5
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {185}
	124 Move W8, [X31+24]
	125 Add X2, X31, 24
	126 Add X4, X31, 8
	127 Move W3, 0x2000
	128 Add W22, W8, 1
	129 Move X0, X21
	130 Move X1, X20
	131 Move X5, X19
	132 Move [X31+24], W22
	133 Call Guid.StringToLong, X0, X1, X2, X3, X4
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfNotEqual {185}
	138 Move W8, [X31+24]
	139 Subtract W8, W8, W22
	140 NotImplemented "Instruction CMP not yet implemented."
	141 NotImplemented "Instruction LDRH not yet implemented."
	142 Move X9, -42512384
	143 Move X10, -42516480
	144 Move V0, [X9+28]
	145 NotImplemented "Instruction REV not yet implemented."
	146 Move W8, W8
	147 ShiftRight W8, 16
	148 And W8, W8, 0x7FFFFFFF
	149 NotImplemented "Instruction STRH not yet implemented."
	150 Move X8, [X31+8]
	151 Move V1, [X10+17]
	152 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	153 Move W0, 1
	154 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	155 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	156 NotImplemented "Instruction INVALID not yet implemented."
	157 NotImplemented "Instruction INVALID not yet implemented."
	158 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	159 Move X9, X8
	160 ShiftRight X9, 8
	161 And X9, X9, 0x7FFFFFFF
	162 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	163 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	164 Move [X31+28], W8
	165 Move [X19+14], W9
	166 Move W9, S1
	167 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	168 Move [X19+15], W8
	169 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	170 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	171 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	172 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	173 Move [X19+10], S0
	174 Move X8, 0xDB3000
	175 Move X8, [X8+3488]
	176 Move X8, 0xDB3000
	177 Move X8, [X8+3480]
	178 Move X2, [X8]
	179 Move W1, 2
	180 Move X0, X19
	181 Move X3, X31
	182 Move X4, X31
	183 Move X5, X31
	184 Call GuidResult.SetFailure, X0, X1, X2, X3, X4, X5
	185 Move W0, W31
	186 Move X20, [X31+48]
	187 Move X19, [X31+56]
	188 Move X22, [X31+32]
	189 Move X21, [X31+40]
	190 Move X30, [X31+16]
	191 Add X31, X31, 64
	192 Return X0
	193 Call 0x1C17F28

Method: System.Boolean StringToShort(System.ReadOnlySpan`1<System.Char> str, System.Int32 requiredLength, System.Int32 flags, out System.Int16 result, ref System.Guid/GuidResult parseResult)

Disassembly:
	0x03379100 SBFM W1, W8, 0x18, 0x1F
	0x03379104 SBFM W2, W8, 0x10, 0x1F
	0x03379108 BL 0x3378CC4
	0x0337910C LDR W2, [X21]
	0x03379110 ADD X0, X22, 0x8
	0x03379114 SBFM W1, W2, 0x8, 0x1F
	0x03379118 BL 0x3378CC4
	0x0337911C CBZ W27, 0x3379130
	0x03379120 ADD X23, X22, 0x12
	0x03379124 MOVZ W8, 0x2D
	0x03379128 STRH W8, [X22 + 0x10]
	0x0337912C B 0x3379134
	0x03379130 ADD X23, X22, 0x10
	0x03379134 LDRSH W2, [X21 + 0x4]
	0x03379138 MOV X0, X23
	0x0337913C SBFM W1, W2, 0x8, 0x1F
	0x03379140 BL 0x3378CC4

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X6, X5
	005 Move X19, X4
	006 Move W4, W3
	007 Move W3, W2
	008 Add X2, X31, 8
	009 Add X5, X31, 12
	010 Move [X31+8], X31
	011 NotImplemented "Instruction STRH not yet implemented."
	012 Call Guid.StringToInt, X0, X1, X2, X3, X4, X5
	013 Move W8, [X31+12]
	014 And W0, W0, 1
	015 NotImplemented "Instruction STRH not yet implemented."
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Add X31, X31, 32
	019 Return X0

Method: System.Boolean StringToShort(System.ReadOnlySpan`1<System.Char> str, ref System.Int32 parsePos, System.Int32 requiredLength, System.Int32 flags, out System.Int16 result, ref System.Guid/GuidResult parseResult)

Disassembly:
	0x03379484 LDP X22, X21, [X31 + 0x20]
	0x03379488 LDP X24, X23, [X31 + 0x10]
	0x0337948C ORR V0.16B, V0.16B, V1.16B
	0x03379490 UNIMPLEMENTED
	0x03379494 FMOV W0, S0
	0x03379498 LDR X30, [X31], #0x40
	0x0337949C RET
	0x033794A0 STR X30, [X31 - 0x20]!
	0x033794A4 STP X20, X19, [X31 + 0x10]
	0x033794A8 ADRP X20, 0x1063000
	0x033794AC ADRP X19, 0xDA2000
	0x033794B0 LDRB W8, [X20 + 0xF3A]
	0x033794B4 LDR X19, [X19 + 0xB10]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, X5
	005 Move [X31+12], W31
	006 NotImplemented "Instruction STRH not yet implemented."
	007 Add X5, X31, 12
	008 Call Guid.StringToInt, X0, X1, X2, X3, X4, X5
	009 Move W8, [X31+12]
	010 And W0, W0, 1
	011 NotImplemented "Instruction STRH not yet implemented."
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Add X31, X31, 32
	015 Return X0

Method: System.Boolean StringToInt(System.ReadOnlySpan`1<System.Char> str, System.Int32 requiredLength, System.Int32 flags, out System.Int32 result, ref System.Guid/GuidResult parseResult)

Disassembly:
	0x033790D4 STRH W23, [X22 + 0x6E]
	0x033790D8 LDRB W1, [X21 + 0xE]
	0x033790DC LDRB W2, [X21 + 0xF]
	0x033790E0 ADD X0, X22, 0x70
	0x033790E4 BL 0x3378D40
	0x033790E8 MOVZ W9, 0x7D
	0x033790EC ADD X8, X22, 0x84
	0x033790F0 STRH W9, [X22 + 0x82]
	0x033790F4 B 0x33791E0
	0x033790F8 LDR W8, [X21]
	0x033790FC MOV X0, X22

ISIL:
	001 Move [X31-16], X30
	002 Move X6, X5
	003 Move X5, X4
	004 Move W4, W3
	005 Move W3, W2
	006 Add X2, X31, 12
	007 Move [X31+12], W31
	008 Call Guid.StringToInt, X0, X1, X2, X3, X4, X5
	009 And W0, W0, 1
	010 Move X30, [X31+16]
	011 Return X0

Method: System.Boolean StringToInt(System.ReadOnlySpan`1<System.Char> str, ref System.Int32 parsePos, System.Int32 requiredLength, System.Int32 flags, out System.Int32 result, ref System.Guid/GuidResult parseResult)

Disassembly:
	0x03379294 MOVZ W8, 0x1
	0x03379298 STRB W8, [X24 + 0xF36]
	0x0337929C LDR X0, [X23]
	0x033792A0 LDR W8, [X0 + 0xE0]
	0x033792A4 CBNZ W8, 0x33792B0
	0x033792A8 BL 0x1C16DFC
	0x033792AC LDR X0, [X23]
	0x033792B0 LDR X8, [X0 + 0xB8]
	0x033792B4 MOVZ W10, 0x4428
	0x033792B8 MOVK W10, 0x24230000
	0x033792BC LDP X24, X23, [X31 + 0x10]
	0x033792C0 LDR W9, [X8]
	0x033792C4 ADD W9, W9, W10
	0x033792C8 STR W9, [X22]
	0x033792CC LDR W9, [X8]
	0x033792D0 MOVZ W10, 0xCA77
	0x033792D4 MOVK W10, 0x85EB0000
	0x033792D8 ADD W9, W9, W10
	0x033792DC STR W9, [X21]
	0x033792E0 LDR W9, [X8]
	0x033792E4 LDP X22, X21, [X31 + 0x20]
	0x033792E8 STR W9, [X20]
	0x033792EC LDR W8, [X8]
	0x033792F0 MOVZ W9, 0x864F
	0x033792F4 MOVK W9, 0x61C80000
	0x033792F8 ADD W8, W8, W9
	0x033792FC STR W8, [X19]
	0x03379300 LDP X20, X19, [X31 + 0x30]
	0x03379304 LDR X30, [X31], #0x40
	0x03379308 RET
	0x0337930C STR X30, [X31 - 0x30]!
	0x03379310 STP X22, X21, [X31 + 0x10]
	0x03379314 STP X20, X19, [X31 + 0x20]
	0x03379318 ADRP X22, 0x1063000
	0x0337931C ADRP X21, 0xDA2000
	0x03379320 LDRB W8, [X22 + 0xF37]
	0x03379324 LDR X21, [X21 + 0xB10]
	0x03379328 MOV W19, W1
	0x0337932C MOV W20, W0
	0x03379330 TBNZ X8, 0x0, 0x3379348
	0x03379334 ADRP X0, 0xDA2000
	0x03379338 LDR X0, [X0 + 0xB10]
	0x0337933C BL 0x1C16CF4
	0x03379340 MOVZ W8, 0x1
	0x03379344 STRB W8, [X22 + 0xF37]
	0x03379348 LDR X0, [X21]
	0x0337934C MOVZ W9, 0xCA77
	0x03379350 MOVK W9, 0x85EB0000
	0x03379354 MADD W19, W19, W9, W20
	0x03379358 LDR W8, [X0 + 0xE0]
	0x0337935C CBNZ W8, 0x3379364
	0x03379360 BL 0x1C16DFC
	0x03379364 EXTR W8, W19, W19, 0x13
	0x03379368 LDP X20, X19, [X31 + 0x20]
	0x0337936C LDP X22, X21, [X31 + 0x10]
	0x03379370 MOVZ W9, 0x79B1
	0x03379374 MOVK W9, 0x9E370000
	0x03379378 MUL W0, W8, W9
	0x0337937C LDR X30, [X31], #0x30
	0x03379380 RET
	0x03379384 STR X30, [X31 - 0x30]!
	0x03379388 STP X22, X21, [X31 + 0x10]
	0x0337938C STP X20, X19, [X31 + 0x20]
	0x03379390 ADRP X22, 0x1063000
	0x03379394 ADRP X21, 0xDA2000
	0x03379398 LDRB W8, [X22 + 0xF38]
	0x0337939C LDR X21, [X21 + 0xB10]
	0x033793A0 MOV W19, W1
	0x033793A4 MOV W20, W0
	0x033793A8 TBNZ X8, 0x0, 0x33793C0
	0x033793AC ADRP X0, 0xDA2000
	0x033793B0 LDR X0, [X0 + 0xB10]
	0x033793B4 BL 0x1C16CF4
	0x033793B8 MOVZ W8, 0x1
	0x033793BC STRB W8, [X22 + 0xF38]
	0x033793C0 LDR X0, [X21]
	0x033793C4 MOVZ W9, 0xAE3D
	0x033793C8 MOVK W9, 0xC2B20000
	0x033793CC MADD W19, W19, W9, W20
	0x033793D0 LDR W8, [X0 + 0xE0]
	0x033793D4 CBNZ W8, 0x33793DC
	0x033793D8 BL 0x1C16DFC
	0x033793DC EXTR W8, W19, W19, 0xF
	0x033793E0 LDP X20, X19, [X31 + 0x20]
	0x033793E4 LDP X22, X21, [X31 + 0x10]
	0x033793E8 MOVZ W9, 0xEB2F
	0x033793EC MOVK W9, 0x27D40000
	0x033793F0 MUL W0, W8, W9
	0x033793F4 LDR X30, [X31], #0x30
	0x033793F8 RET
	0x033793FC STR X30, [X31 - 0x40]!
	0x03379400 STP X24, X23, [X31 + 0x10]
	0x03379404 STP X22, X21, [X31 + 0x20]
	0x03379408 STP X20, X19, [X31 + 0x30]
	0x0337940C ADRP X23, 0x1063000
	0x03379410 ADRP X24, 0xDA2000
	0x03379414 LDRB W8, [X23 + 0xF39]
	0x03379418 LDR X24, [X24 + 0xB10]
	0x0337941C MOV W19, W3
	0x03379420 MOV W20, W2
	0x03379424 MOV W22, W1
	0x03379428 MOV W21, W0
	0x0337942C TBNZ X8, 0x0, 0x3379444
	0x03379430 ADRP X0, 0xDA2000
	0x03379434 LDR X0, [X0 + 0xB10]
	0x03379438 BL 0x1C16CF4
	0x0337943C MOVZ W8, 0x1
	0x03379440 STRB W8, [X23 + 0xF39]
	0x03379444 LDR X0, [X24]
	0x03379448 LDR W8, [X0 + 0xE0]
	0x0337944C CBNZ W8, 0x3379454
	0x03379450 BL 0x1C16DFC
	0x03379454 ADRP X8, 0xFFFFFFFFFD772000
	0x03379458 ADRP X9, 0xFFFFFFFFFD772000
	0x0337945C LDR V1, [X8 + 0x97]
	0x03379460 FMOV S0, W22
	0x03379464 LDR V2, [X9 + 0xC0]
	0x03379468 UNIMPLEMENTED
	0x0337946C UNIMPLEMENTED
	0x03379470 UNIMPLEMENTED
	0x03379474 UNIMPLEMENTED
	0x00000000 INVALID
	0x00000000 INVALID
	0x03379480 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x1064000
	011 Move W8, [X26+3884]
	012 Move X19, X6
	013 Move X21, X5
	014 Move W23, W4
	015 Move W20, W3
	016 Move X22, X2
	017 Move X24, X1
	018 Move X25, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xDB2000
	024 Move X0, [X0+3576]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X26+3884], W8
	028 Move [X21], W31
	029 Move W26, [X22]
	030 Move W2, 16
	031 Move X0, X25
	032 Move X1, X24
	033 Move W3, W23
	034 Move X4, X22
	035 Move X5, X31
	036 Call ParseNumbers.StringToInt, X0, X1, X2, X3
	037 Add W31, W20, 1
	038 Move [X21], W0
	039 Move W8, [X22]
	040 Subtract W8, W8, W26
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W0, 1
	043 Move X8, 0xDB2000
	044 Move X8, [X8+3576]
	045 Move W1, 2
	046 Move X0, X19
	047 Move X3, X31
	048 Move X2, [X8]
	049 Move X4, X31
	050 Move X5, X31
	051 Call GuidResult.SetFailure, X0, X1, X2, X3, X4, X5
	052 Move W0, W31
	053 Move X20, [X31+64]
	054 Move X19, [X31+72]
	055 Move X22, [X31+48]
	056 Move X21, [X31+56]
	057 Move X24, [X31+32]
	058 Move X23, [X31+40]
	059 Move X26, [X31+16]
	060 Move X25, [X31+24]
	061 Move X30, [X31+80]
	062 Return X0
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X20, X0
	065 Move X0, X20
	066 Call 0x3EB2AD0
	067 Move X20, X0
	068 Move X0, 0xD7B000
	069 Move X0, [X0+2136]
	070 Call 0x1C17D08
	071 Move X8, [X20]
	072 Move X1, [X8]
	073 Call 0x1C18270
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {87}
	078 Move X20, [X20]
	079 Call 0x3EB2AE0
	080 Move W8, [X19+16]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move W8, 4
	084 Move W0, W31
	085 Move [X19+20], W8
	086 Move [X19+48], X20
	087 Move X0, 0xD7B000
	088 Move X0, [X0+2000]
	089 Call 0x1C17D08
	090 Move X8, [X20]
	091 Move X1, [X8]
	092 Call 0x1C18270
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {123}
	097 Move X20, [X20]
	098 Call 0x3EB2AE0
	099 Move W8, [X19+16]
	100 Compare W8, 0
	101 JumpIfEqual {83}
	102 Move X0, X20
	103 Call 0x1C17F18
	104 Move X0, 0xDA8000
	105 Move X0, [X0+3080]
	106 Call 0x1C17D08
	107 Call 0x1C17F10
	108 Move X19, X0
	109 Move X0, 0xDB2000
	110 Move X0, [X0+3456]
	111 Call 0x1C17D08
	112 Move X1, X0
	113 Move X0, X19
	114 Move X2, X20
	115 Move X3, X31
	116 Call FormatException..ctor, X0, X1, X2
	117 Move X0, 0xDB2000
	118 Move X0, [X0+3608]
	119 Call 0x1C17D08
	120 Move X1, X0
	121 Move X0, X19
	122 Call 0x1C17DEC
	123 Move W0, 8
	124 Call 0x3EB2AF0
	125 Move X8, [X20]
	126 Move [X0], X8
	127 Move X1, 0xB3C000
	128 Add X1, X1, 3672
	129 Move X2, X31
	130 Call 0x3EB2B00
	131 Move X20, X0
	132 Call 0x3EB2AE0
	133 Move X0, X20
	134 Call 0x1D2D690
	135 Call 0x1991590

Method: System.Boolean StringToLong(System.ReadOnlySpan`1<System.Char> str, ref System.Int32 parsePos, System.Int32 flags, out System.Int64 result, ref System.Guid/GuidResult parseResult)

Disassembly:
	0x03379144 CBZ W27, 0x3379158
	0x03379148 ADD X22, X23, 0xA
	0x0337914C MOVZ W8, 0x2D
	0x03379150 STRH W8, [X23 + 0x8]
	0x03379154 B 0x337915C
	0x03379158 ADD X22, X23, 0x8
	0x0337915C LDRSH W2, [X21 + 0x6]
	0x03379160 MOV X0, X22
	0x03379164 SBFM W1, W2, 0x8, 0x1F
	0x03379168 BL 0x3378CC4
	0x0337916C CBZ W27, 0x3379180
	0x03379170 ADD X23, X22, 0xA
	0x03379174 MOVZ W8, 0x2D
	0x03379178 STRH W8, [X22 + 0x8]
	0x0337917C B 0x3379184
	0x03379180 ADD X23, X22, 0x8
	0x03379184 LDRB W1, [X21 + 0x8]
	0x03379188 LDRB W2, [X21 + 0x9]
	0x0337918C MOV X0, X23
	0x03379190 BL 0x3378CC4
	0x03379194 CBZ W27, 0x33791A8
	0x03379198 ADD X22, X23, 0xA
	0x0337919C MOVZ W8, 0x2D
	0x033791A0 STRH W8, [X23 + 0x8]
	0x033791A4 B 0x33791AC
	0x033791A8 ADD X22, X23, 0x8
	0x033791AC LDRB W1, [X21 + 0xA]
	0x033791B0 LDRB W2, [X21 + 0xB]
	0x033791B4 MOV X0, X22
	0x033791B8 BL 0x3378CC4
	0x033791BC LDRB W1, [X21 + 0xC]
	0x033791C0 LDRB W2, [X21 + 0xD]
	0x033791C4 ADD X0, X22, 0x8
	0x033791C8 BL 0x3378CC4
	0x033791CC LDRB W1, [X21 + 0xE]
	0x033791D0 LDRB W2, [X21 + 0xF]
	0x033791D4 ADD X0, X22, 0x10
	0x033791D8 BL 0x3378CC4
	0x033791DC ADD X8, X22, 0x18
	0x033791E0 MOV W9, W26
	0x033791E4 TBNZ X24, 0x0, 0x33791F4
	0x033791E8 UBFM W9, W25, 0x10, 0x1F
	0x033791EC STRH W9, [X8]
	0x033791F0 MOV W9, W26
	0x033791F4 CMP W26, W20
	0x033791F8 STR W9, [X19]
	0x033791FC LDP X20, X19, [X31 + 0x40]
	0x03379200 LDP X22, X21, [X31 + 0x30]
	0x03379204 LDP X24, X23, [X31 + 0x20]
	0x03379208 LDP X26, X25, [X31 + 0x10]
	0x0337920C CSET W0, LE
	0x03379210 LDP X30, X27, [X31], #0x50
	0x03379214 RET
	0x03379218 B 0x3378DDC
	0x0337921C STR W1, [X0 + 0x10]
	0x03379220 RET
	0x03379224 STR X30, [X31 - 0x10]!
	0x03379228 ADD X0, X31, 0xC
	0x0337922C MOVZ W1, 0x4
	0x03379230 MOV X2, X31
	0x03379234 STR W31, [X31 + 0xC]
	0x03379238 BL 0x3209698
	0x0337923C LDR W0, [X31 + 0xC]
	0x03379240 LDR X30, [X31], #0x10
	0x03379244 RET
	0x03379248 SUB W8, W31, W1
	0x0337924C RORV W0, W0, W8
	0x03379250 RET
	0x03379254 STR X30, [X31 - 0x40]!
	0x03379258 STP X24, X23, [X31 + 0x10]
	0x0337925C STP X22, X21, [X31 + 0x20]
	0x03379260 STP X20, X19, [X31 + 0x30]
	0x03379264 ADRP X24, 0x1063000
	0x03379268 ADRP X23, 0xDA2000
	0x0337926C LDRB W8, [X24 + 0xF36]
	0x03379270 LDR X23, [X23 + 0xB10]
	0x03379274 MOV X19, X3
	0x03379278 MOV X20, X2
	0x0337927C MOV X21, X1
	0x03379280 MOV X22, X0
	0x03379284 TBNZ X8, 0x0, 0x337929C
	0x03379288 ADRP X0, 0xDA2000
	0x0337928C LDR X0, [X0 + 0xB10]
	0x03379290 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X5
	005 Move X20, X4
	006 Move X4, X2
	007 Move [X20], X31
	008 Move W2, 16
	009 Move X5, X31
	010 Call ParseNumbers.StringToLong, X0, X1, X2, X3
	011 Move [X20], X0
	012 Move W0, 1
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Return X0
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X20, X0
	019 Move X0, X20
	020 Call 0x3EB2AD0
	021 Move X20, X0
	022 Move X0, 0xD7B000
	023 Move X0, [X0+2136]
	024 Call 0x1C17D08
	025 Move X8, [X20]
	026 Move X1, [X8]
	027 Call 0x1C18270
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {41}
	032 Move X20, [X20]
	033 Call 0x3EB2AE0
	034 Move W8, [X19+16]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W0, W31
	038 Move W8, 4
	039 Move [X19+20], W8
	040 Move [X19+48], X20
	041 Move X0, 0xD7B000
	042 Move X0, [X0+2000]
	043 Call 0x1C17D08
	044 Move X8, [X20]
	045 Move X1, [X8]
	046 Call 0x1C18270
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {77}
	051 Move X20, [X20]
	052 Call 0x3EB2AE0
	053 Move W8, [X19+16]
	054 Compare W8, 0
	055 JumpIfEqual {37}
	056 Move X0, X20
	057 Call 0x1C17F18
	058 Move X0, 0xDA8000
	059 Move X0, [X0+3080]
	060 Call 0x1C17D08
	061 Call 0x1C17F10
	062 Move X19, X0
	063 Move X0, 0xDB2000
	064 Move X0, [X0+3456]
	065 Call 0x1C17D08
	066 Move X1, X0
	067 Move X0, X19
	068 Move X2, X20
	069 Move X3, X31
	070 Call FormatException..ctor, X0, X1, X2
	071 Move X0, 0xDB2000
	072 Move X0, [X0+3600]
	073 Call 0x1C17D08
	074 Move X1, X0
	075 Move X0, X19
	076 Call 0x1C17DEC
	077 Move W0, 8
	078 Call 0x3EB2AF0
	079 Move X8, [X20]
	080 Move [X0], X8
	081 Move X1, 0xB3C000
	082 Add X1, X1, 3672
	083 Move X2, X31
	084 Call 0x3EB2B00
	085 Move X20, X0
	086 Call 0x3EB2AE0
	087 Move X0, X20
	088 Call 0x1D2D690
	089 Call 0x1991590

Method: System.ReadOnlySpan`1<System.Char> EatAllWhitespace(System.ReadOnlySpan`1<System.Char> str)

Disassembly:
	0x03378DC4 MOV X8, X0
	0x03378DC8 STRH W9, [X0 + 0xE]
	0x03378DCC CSEL W9, W12, W11, HI
	0x03378DD0 MOVZ W0, 0x9
	0x03378DD4 STRH W9, [X8 + 0x10]
	0x03378DD8 RET
	0x03378DDC STP X30, X27, [X31 - 0x50]!
	0x03378DE0 STP X26, X25, [X31 + 0x10]
	0x03378DE4 STP X24, X23, [X31 + 0x20]
	0x03378DE8 STP X22, X21, [X31 + 0x30]
	0x03378DEC STP X20, X19, [X31 + 0x40]
	0x03378DF0 ADRP X25, 0x1064000
	0x03378DF4 LDRB W8, [X25 + 0xF34]
	0x03378DF8 MOV X24, X5
	0x03378DFC MOV X23, X4
	0x03378E00 MOV X19, X3
	0x03378E04 MOV X20, X2
	0x03378E08 MOV X22, X1
	0x03378E0C MOV X21, X0
	0x03378E10 TBNZ X8, 0x0, 0x3378E4C
	0x03378E14 ADRP X0, 0xDAA000
	0x03378E18 LDR X0, [X0 + 0x2C8]
	0x03378E1C BL 0x1C16CF4
	0x03378E20 ADRP X0, 0xDAA000
	0x03378E24 LDR X0, [X0 + 0x28]
	0x03378E28 BL 0x1C16CF4
	0x03378E2C ADRP X0, 0xDAA000
	0x03378E30 LDR X0, [X0 + 0x588]
	0x03378E34 BL 0x1C16CF4
	0x03378E38 ADRP X0, 0xDA3000
	0x03378E3C LDR X0, [X0 + 0xBE0]
	0x03378E40 BL 0x1C16CF4
	0x03378E44 MOVZ W8, 0x1
	0x03378E48 STRB W8, [X25 + 0xF34]
	0x03378E4C CBNZ W24, 0x3378E94
	0x03378E50 ADRP X8, 0xDA3000
	0x03378E54 LDR X8, [X8 + 0xBE0]
	0x03378E58 ADRP X24, 0x1061000
	0x03378E5C LDRB W9, [X24 + 0x762]
	0x03378E60 LDR X23, [X8]
	0x03378E64 CBNZ W9, 0x3378E7C
	0x03378E68 ADRP X0, 0xDA2000
	0x03378E6C LDR X0, [X0 + 0x290]
	0x03378E70 BL 0x1C16CF4
	0x03378E74 MOVZ W8, 0x1
	0x03378E78 STRB W8, [X24 + 0x762]
	0x03378E7C CBZ X23, 0x3378F0C
	0x03378E80 MOV X0, X23
	0x03378E84 MOV X1, X31
	0x03378E88 BL 0x3225708
	0x03378E8C LDR W24, [X23 + 0x10]
	0x03378E90 MOV X23, X0
	0x03378E94 CMP W24, 0x1
	0x03378E98 B.NE 0x3378F0C
	0x03378E9C LDRH W8, [X23]
	0x03378EA0 CMP W8, 0x58
	0x03378EA4 B.HI 0x3378EC4
	0x03378EA8 CMP W8, 0x44
	0x03378EAC B.HI 0x3378EF4
	0x03378EB0 CMP W8, 0x42
	0x03378EB4 B.EQ 0x3378FB4
	0x03378EB8 CMP W8, 0x44
	0x03378EBC B.EQ 0x3378EDC
	0x03378EC0 B 0x3378F0C
	0x03378EC4 CMP W8, 0x64
	0x03378EC8 B.HI 0x3378F54
	0x03378ECC CMP W8, 0x62
	0x03378ED0 B.EQ 0x3378FD0
	0x03378ED4 CMP W8, 0x64
	0x03378ED8 B.NE 0x3378F0C
	0x03378EDC MOV W25, W31
	0x03378EE0 MOV W23, W31
	0x03378EE4 MOVZ W24, 0x1
	0x03378EE8 MOVZ W26, 0x24
	0x03378EEC MOVZ W27, 0x1
	0x03378EF0 B 0x3378FE8
	0x03378EF4 CMP W8, 0x4E
	0x03378EF8 B.EQ 0x3378F80
	0x03378EFC CMP W8, 0x50
	0x03378F00 B.EQ 0x3378F98
	0x03378F04 CMP W8, 0x58
	0x03378F08 B.EQ 0x3378F6C
	0x03378F0C ADRP X0, 0xDA8000
	0x03378F10 LDR X0, [X0 + 0xC08]
	0x03378F14 BL 0x1C16D08
	0x03378F18 BL 0x1C16F10
	0x03378F1C MOV X19, X0
	0x03378F20 ADRP X0, 0xDB2000
	0x03378F24 LDR X0, [X0 + 0xE20]
	0x03378F28 BL 0x1C16D08
	0x03378F2C MOV X1, X0
	0x03378F30 MOV X0, X19
	0x03378F34 MOV X2, X31
	0x03378F38 BL 0x33674A0
	0x03378F3C ADRP X0, 0xDB2000
	0x03378F40 LDR X0, [X0 + 0xE40]
	0x03378F44 BL 0x1C16D08
	0x03378F48 MOV X1, X0
	0x03378F4C MOV X0, X19
	0x03378F50 BL 0x1C16DEC
	0x03378F54 CMP W8, 0x6E
	0x03378F58 B.EQ 0x3378F80
	0x03378F5C CMP W8, 0x70
	0x03378F60 B.EQ 0x3378F98
	0x03378F64 CMP W8, 0x78
	0x03378F68 B.NE 0x3378F0C
	0x03378F6C MOV W24, W31
	0x03378F70 MOV W27, W31
	0x03378F74 MOVZ W23, 0x1
	0x03378F78 MOVZ W26, 0x44
	0x03378F7C B 0x3378FC4
	0x03378F80 MOV W25, W31
	0x03378F84 MOV W23, W31
	0x03378F88 MOV W27, W31
	0x03378F8C MOVZ W24, 0x1
	0x03378F90 MOVZ W26, 0x20
	0x03378F94 B 0x3378FE8
	0x03378F98 MOVZ W25, 0x28
	0x03378F9C MOV W24, W31
	0x03378FA0 MOV W23, W31
	0x03378FA4 MOVZ W27, 0x1
	0x03378FA8 MOVZ W26, 0x26
	0x03378FAC MOVK W25, 0x290000
	0x03378FB0 B 0x3378FE8
	0x03378FB4 MOV W24, W31
	0x03378FB8 MOV W23, W31
	0x03378FBC MOVZ W27, 0x1
	0x03378FC0 MOVZ W26, 0x26
	0x03378FC4 MOVZ W25, 0x7B
	0x03378FC8 MOVK W25, 0x7D0000
	0x03378FCC B 0x3378FE8
	0x03378FD0 MOVZ W25, 0x7B
	0x03378FD4 MOV W24, W31
	0x03378FD8 MOV W23, W31
	0x03378FDC MOVK W25, 0x7D0000
	0x03378FE0 MOVZ W27, 0x1
	0x03378FE4 MOVZ W26, 0x26
	0x03378FE8 CMP W26, W20
	0x03378FEC B.LE 0x3378FF8
	0x03378FF0 MOV W9, W31
	0x03378FF4 B 0x33791F4
	0x03378FF8 ADRP X8, 0xDAA000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X21, 0x1065000
	010 Move W8, [X21+3885]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0xD85000
	018 Move X0, [X0+2264]
	019 Call 0x1C17CF4
	020 Move X0, 0xD7E000
	021 Move X0, [X0+368]
	022 Call 0x1C17CF4
	023 Move X0, 0xDAB000
	024 Move X0, [X0+408]
	025 Call 0x1C17CF4
	026 Move X0, 0xDAF000
	027 Move X0, [X0+3472]
	028 Call 0x1C17CF4
	029 Move X0, 0xDB3000
	030 Move X0, [X0+3592]
	031 Call 0x1C17CF4
	032 Move X0, 0xDAB000
	033 Move X0, [X0+40]
	034 Call 0x1C17CF4
	035 Move X0, 0xDAB000
	036 Move X0, [X0+720]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+3885], W8
	040 Move X22, 0xD7E000
	041 Move X22, [X22+368]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move [X31], X31
	044 Move [X31+8], X31
	045 Move X23, X31
	046 And X24, X19, 0
	047 Move X0, [X22]
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move W0, W21
	054 Move X1, X31
	055 Call Char.IsWhiteSpace, X0
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {63}
	060 Add X23, X23, 1
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W23, W31
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X8, 0xD85000
	065 Move X8, [X8+2264]
	066 Move W1, W19
	067 Move X0, [X8]
	068 Call 0x1C17D6C
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X21, X0
	071 Move X8, 0xDAF000
	072 Move X8, [X8+3472]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X24, [X8]
	075 Move X0, X31
	076 Call ThrowHelper.ThrowArgumentOutOfRangeException
	077 Move X0, [X24+32]
	078 Move W8, [X0+309]
	079 Move TEMP, X8
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {84}
	083 Call 0x1C5D684
	084 Move X8, 0xDAB000
	085 Move X8, [X8+720]
	086 Move X0, X21
	087 Move X1, [X8]
	088 Move W8, W23
	089 Move [X31], X20
	090 Move [X31+8], X8
	091 Call Span`1<Char>.op_Implicit, X0
	092 Move X8, 0xDAB000
	093 Move X8, [X8+408]
	094 Move X2, X0
	095 Move X4, X1
	096 Add X0, X31, 0
	097 Move X3, [X8]
	098 Move X1, X2
	099 Move X2, X4
	100 Call ReadOnlySpan`1<Char>.CopyTo, X0, X1
	101 Move W24, W23
	102 Move W24, W31
	103 NotImplemented "Instruction CMP not yet implemented."
	104 And X8, X19, 0
	105 Add X20, X20, W23
	106 Subtract X23, X8, W23
	107 Move X0, [X22]
	108 NotImplemented "Instruction LDRH not yet implemented."
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Move W0, W19
	114 Move X1, X31
	115 Call Char.IsWhiteSpace, X0
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfEqual {127}
	120 Compare X21, 0
	121 JumpIfEqual {154}
	122 Move W8, [X21+24]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Add X8, X21, W24
	125 Add W24, W24, 1
	126 NotImplemented "Instruction STRH not yet implemented."
	127 Subtract X23, X23, 1
	128 Add X20, X20, 2
	129 Compare X21, 0
	130 JumpIfEqual {137}
	131 Move W8, [X21+24]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X0, X31
	134 Call ThrowHelper.ThrowArgumentOutOfRangeException
	135 Add X20, X21, 32
	136 Move W19, W24
	137 Compare W24, 0
	138 JumpIfEqual {141}
	139 Move X0, X31
	140 Call ThrowHelper.ThrowArgumentOutOfRangeException
	141 Move X19, X31
	142 Move X20, X31
	143 Move X0, X20
	144 Move X1, X19
	145 Move X20, [X31+64]
	146 Move X19, [X31+72]
	147 Move X22, [X31+48]
	148 Move X21, [X31+56]
	149 Move X24, [X31+32]
	150 Move X23, [X31+40]
	151 Move X30, [X31+16]
	152 Add X31, X31, 80
	153 Return X0
	154 Call 0x1C17F20
	155 Call 0x1C17F28

Method: System.Boolean IsHexPrefix(System.ReadOnlySpan`1<System.Char> str, System.Int32 i)

Disassembly:
	0x03378FFC LDR X8, [X8 + 0x2C8]
	0x03379000 MOV X0, X22
	0x03379004 MOV X1, X20
	0x03379008 LDR X2, [X8]
	0x0337900C BL 0x2218CFC
	0x03379010 MOV X22, X0
	0x03379014 TBNZ X24, 0x0, 0x337901C
	0x03379018 STRH W25, [X22], #0x2
	0x0337901C CBZ W23, 0x33790F8
	0x03379020 MOVZ W8, 0x30
	0x03379024 MOVK W8, 0x780000
	0x03379028 STR W8, [X22]
	0x0337902C LDR W8, [X21]
	0x03379030 ADD X0, X22, 0x4
	0x03379034 SBFM W1, W8, 0x18, 0x1F
	0x03379038 SBFM W2, W8, 0x10, 0x1F
	0x0337903C BL 0x3378CC4
	0x03379040 LDR W2, [X21]
	0x03379044 ADD X0, X22, 0xC
	0x03379048 SBFM W1, W2, 0x8, 0x1F
	0x0337904C BL 0x3378CC4
	0x03379050 MOVZ W23, 0x2C
	0x03379054 MOVK W23, 0x300000
	0x03379058 MOVZ W27, 0x78
	0x0337905C STR W23, [X22 + 0x14]
	0x03379060 STRH W27, [X22 + 0x18]
	0x03379064 LDRSH W2, [X21 + 0x4]
	0x03379068 ADD X0, X22, 0x1A
	0x0337906C SBFM W1, W2, 0x8, 0x1F
	0x03379070 BL 0x3378CC4
	0x03379074 STUR W23, [X22 + 0x22]
	0x03379078 STRH W27, [X22 + 0x26]
	0x0337907C LDRSH W2, [X21 + 0x6]
	0x03379080 ADD X0, X22, 0x28
	0x03379084 SBFM W1, W2, 0x8, 0x1F
	0x03379088 BL 0x3378CC4
	0x0337908C MOVZ W8, 0x2C
	0x03379090 MOVK W8, 0x7B0000
	0x03379094 STR W8, [X22 + 0x30]
	0x03379098 LDRB W1, [X21 + 0x8]
	0x0337909C LDRB W2, [X21 + 0x9]
	0x033790A0 ADD X0, X22, 0x34
	0x033790A4 BL 0x3378D40
	0x033790A8 MOVZ W23, 0x2C
	0x033790AC STRH W23, [X22 + 0x46]
	0x033790B0 LDRB W1, [X21 + 0xA]
	0x033790B4 LDRB W2, [X21 + 0xB]
	0x033790B8 ADD X0, X22, 0x48
	0x033790BC BL 0x3378D40
	0x033790C0 STRH W23, [X22 + 0x5A]
	0x033790C4 LDRB W1, [X21 + 0xC]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1064000
	007 Move W8, [X22+3886]
	008 Move W21, W2
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xD7D000
	016 Move X0, [X0+368]
	017 Call 0x1C17CF4
	018 Move X0, 0xDAA000
	019 Move X0, [X0+40]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3886], W8
	023 Add W8, W21, 1
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W0, 1
	032 Move W0, W31
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return X0
	039 Move X8, 0xD7D000
	040 Move X8, [X8+368]
	041 Move X0, [X8]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move W0, W19
	047 Move X1, X31
	048 Call Char.ToLowerInvariant, X0
	049 And W8, W0, 0xFFFF
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSET not yet implemented."
	052 Call 0x1C17F28

Method: System.Void WriteByteHelper(System.Span`1<System.Byte> destination)

Disassembly:
	0x033794C8 MOVZ W8, 0x1
	0x033794CC STRB W8, [X20 + 0xF3A]
	0x033794D0 LDR X0, [X19]
	0x033794D4 LDR W8, [X0 + 0xE0]
	0x033794D8 CBNZ W8, 0x33794E4
	0x033794DC BL 0x1C16DFC
	0x033794E0 LDR X0, [X19]
	0x033794E4 LDR X8, [X0 + 0xB8]
	0x033794E8 LDP X20, X19, [X31 + 0x10]
	0x033794EC MOVZ W9, 0x67B1
	0x033794F0 MOVK W9, 0x16560000
	0x033794F4 LDR W8, [X8]
	0x033794F8 ADD W0, W8, W9
	0x033794FC LDR X30, [X31], #0x20
	0x03379500 RET
	0x03379504 MOVZ W9, 0xCA77
	0x03379508 EOR W8, W0, W0, 0xF
	0x0337950C MOVK W9, 0x85EB0000
	0x03379510 MUL W8, W8, W9
	0x03379514 MOVZ W9, 0xAE3D
	0x03379518 EOR W8, W8, W8, 0xD
	0x0337951C MOVK W9, 0xC2B20000
	0x03379520 MUL W8, W8, W9
	0x03379524 EOR W0, W8, W8, 0x10
	0x03379528 RET
	0x0337952C STP X30, X27, [X31 - 0x50]!
	0x03379530 STP X26, X25, [X31 + 0x10]
	0x03379534 STP X24, X23, [X31 + 0x20]
	0x03379538 STP X22, X21, [X31 + 0x30]
	0x0337953C STP X20, X19, [X31 + 0x40]
	0x03379540 ADRP X21, 0x1063000
	0x03379544 LDRB W8, [X21 + 0xF3B]
	0x03379548 MOV W20, W1
	0x0337954C MOV X19, X0
	0x03379550 TBNZ X8, 0x0, 0x3379568
	0x03379554 ADRP X0, 0xDA2000
	0x03379558 LDR X0, [X0 + 0xB10]
	0x0337955C BL 0x1C16CF4
	0x03379560 MOVZ W8, 0x1
	0x03379564 STRB W8, [X21 + 0xF3B]
	0x03379568 LDR W8, [X19 + 0x1C]
	0x0337956C AND W9, W8, 0x3
	0x03379570 ADD W10, W8, 0x1
	0x03379574 CMP W9, 0x2
	0x03379578 STR W10, [X19 + 0x1C]
	0x0337957C B.EQ 0x3379594
	0x03379580 CMP W9, 0x1
	0x03379584 B.EQ 0x337959C
	0x03379588 CBNZ W9, 0x33795A4
	0x0337958C STR W20, [X19 + 0x10]
	0x03379590 B 0x33797AC
	0x03379594 STR W20, [X19 + 0x18]
	0x03379598 B 0x33797AC
	0x0337959C STR W20, [X19 + 0x14]
	0x033795A0 B 0x33797AC
	0x033795A4 MOVZ W21, 0xCA77
	0x033795A8 CMP W8, 0x3
	0x033795AC MOVK W21, 0x85EB0000
	0x033795B0 B.NE 0x3379644
	0x033795B4 ADRP X22, 0xDA2000
	0x033795B8 LDR X22, [X22 + 0xB10]
	0x033795BC LDR X0, [X22]
	0x033795C0 LDR W8, [X0 + 0xE0]
	0x033795C4 CBNZ W8, 0x33795CC
	0x033795C8 BL 0x1C16DFC
	0x033795CC ADRP X23, 0x1060000
	0x033795D0 LDRB W8, [X23 + 0x835]
	0x033795D4 CBNZ W8, 0x33795EC

ISIL:
	001 Move [X31-16], X30
	002 Compare W2, 0
	003 JumpIfEqual {56}
	004 Move W8, [X0]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move [X1], W8
	007 Move W8, [X0]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W8, W8
	010 ShiftRight W8, 8
	011 And W8, W8, 0x7FFFFFFF
	012 Move [X1+1], W8
	013 NotImplemented "Instruction LDRH not yet implemented."
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move [X1+2], W8
	016 Move W8, [X0+3]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move [X1+3], W8
	019 Move W8, [X0+4]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move [X1+4], W8
	022 Move W8, [X0+5]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move [X1+5], W8
	025 Move W8, [X0+6]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move [X1+6], W8
	028 Move W8, [X0+7]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move [X1+7], W8
	031 Move W8, [X0+8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move [X1+8], W8
	034 Move W8, [X0+9]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move [X1+9], W8
	037 Move W8, [X0+10]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move [X1+10], W8
	040 Move W8, [X0+11]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move [X1+11], W8
	043 Move W8, [X0+12]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move [X1+12], W8
	046 Move W8, [X0+13]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move [X1+13], W8
	049 Move W8, [X0+14]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move [X1+14], W8
	052 Move W8, [X0+15]
	053 Move [X1+15], W8
	054 Move X30, [X31+16]
	055 Return 
	056 Call 0x1C17F28

Method: System.Byte[] ToByteArray()

Disassembly:
	0x033795D8 ADRP X0, 0xDA2000
	0x033795DC LDR X0, [X0 + 0xB10]
	0x033795E0 BL 0x1C16CF4
	0x033795E4 MOVZ W8, 0x1
	0x033795E8 STRB W8, [X23 + 0x835]
	0x033795EC LDR X0, [X22]
	0x033795F0 LDR W8, [X0 + 0xE0]
	0x033795F4 CBNZ W8, 0x3379600
	0x033795F8 BL 0x1C16DFC
	0x033795FC LDR X0, [X22]
	0x03379600 LDR X8, [X0 + 0xB8]
	0x03379604 MOVZ W10, 0x4428
	0x03379608 MOVK W10, 0x24230000
	0x0337960C LDR W9, [X8]
	0x03379610 ADD W24, W9, W10
	0x03379614 STR W24, [X19]
	0x03379618 LDR W9, [X8]
	0x0337961C ADD W9, W9, W21
	0x03379620 STR W9, [X19 + 0x4]
	0x03379624 LDR W9, [X8]
	0x03379628 STR W9, [X19 + 0x8]
	0x0337962C LDR W8, [X8]
	0x03379630 MOVZ W9, 0x864F
	0x03379634 MOVK W9, 0x61C80000
	0x03379638 ADD W8, W8, W9
	0x0337963C STR W8, [X19 + 0xC]
	0x03379640 B 0x3379654
	0x03379644 ADRP X8, 0xDA2000
	0x03379648 LDR W24, [X19]
	0x0337964C LDR X8, [X8 + 0xB10]
	0x03379650 LDR X0, [X8]
	0x03379654 LDR W8, [X0 + 0xE0]
	0x03379658 LDR W25, [X19 + 0x10]
	0x0337965C CBNZ W8, 0x3379664
	0x03379660 BL 0x1C16DFC
	0x03379664 ADRP X22, 0x1060000
	0x03379668 LDRB W8, [X22 + 0x836]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1064000
	007 Move X22, 0xD7B000
	008 Move X20, 0xDAA000
	009 Move W8, [X21+3887]
	010 Move X22, [X22+1560]
	011 Move X20, [X20+760]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xD7B000
	018 Move X0, [X0+1560]
	019 Call 0x1C17CF4
	020 Move X0, 0xDAA000
	021 Move X0, [X0+760]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3887], W8
	025 Move X0, [X22]
	026 Move W1, 16
	027 Call 0x1C17D6C
	028 Move X1, [X20]
	029 Move X20, X0
	030 Call 0x25FC4C0, X0
	031 Move X2, X0
	032 Move X3, X1
	033 Move X0, X19
	034 Move X1, X2
	035 Move X2, X3
	036 Move X3, X31
	037 Call 0x338CC88
	038 Move X0, X20
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return X0

Method: System.String ToString()

Disassembly:
	0x0337966C CBNZ W8, 0x3379684
	0x03379670 ADRP X0, 0xDA2000
	0x03379674 LDR X0, [X0 + 0xB10]
	0x03379678 BL 0x1C16CF4
	0x0337967C MOVZ W8, 0x1
	0x03379680 STRB W8, [X22 + 0x836]
	0x03379684 ADRP X23, 0xDA2000
	0x03379688 LDR X23, [X23 + 0xB10]
	0x0337968C MADD W25, W25, W21, W24
	0x03379690 LDR X0, [X23]
	0x03379694 LDR W8, [X0 + 0xE0]
	0x03379698 CBZ W8, 0x33796A4
	0x0337969C MOV W8, W31
	0x033796A0 B 0x33796B4
	0x033796A4 BL 0x1C16DFC
	0x033796A8 LDRB W8, [X22 + 0x836]
	0x033796AC CMP W8, 0x0
	0x033796B0 CSET W8, EQ

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1064000
	006 Move X21, 0xDA3000
	007 Move W8, [X20+3888]
	008 Move X21, [X21+3040]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDA3000
	015 Move X0, [X0+3040]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3888], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]

Method: System.Int32 GetHashCode()

Disassembly:
	0x033798AC ADD W23, W0, W23, 0x2, LSL
	0x033798B0 CBZ W21, 0x33799B4
	0x033798B4 LDR X0, [X20]
	0x033798B8 LDR W25, [X19 + 0x10]
	0x033798BC LDR W8, [X0 + 0xE0]
	0x033798C0 CBNZ W8, 0x33798C8

ISIL:
	001 Move W8, [X0]
	002 Move W9, [X0+4]
	003 Move W10, [X0+8]
	004 Move W11, [X0+12]
	005 Xor W8, W9, W8
	006 Xor W8, W8, W10
	007 Xor W0, W8, W11
	008 Return X0

Method: System.Boolean Equals(System.Object o)

Disassembly:
	0x033798C4 BL 0x1C16DFC
	0x033798C8 ADRP X24, 0x1063000
	0x033798CC LDRB W8, [X24 + 0xFFF]
	0x033798D0 CBNZ W8, 0x33798E8
	0x033798D4 ADRP X0, 0xDA2000
	0x033798D8 LDR X0, [X0 + 0xB10]
	0x033798DC BL 0x1C16CF4
	0x033798E0 MOVZ W8, 0x1
	0x033798E4 STRB W8, [X24 + 0xFFF]
	0x033798E8 LDR X0, [X20]
	0x033798EC MADD W23, W25, W22, W23
	0x033798F0 LDR W8, [X0 + 0xE0]
	0x033798F4 CBNZ W8, 0x33798FC
	0x033798F8 BL 0x1C16DFC
	0x033798FC MOVZ W25, 0xEB2F
	0x03379900 MOVK W25, 0x27D40000
	0x03379904 EXTR W8, W23, W23, 0xF
	0x03379908 CMP W21, 0x2
	0x0337990C MUL W23, W8, W25
	0x03379910 B.CC 0x33799B4
	0x03379914 LDR X0, [X20]
	0x03379918 LDR W26, [X19 + 0x14]
	0x0337991C LDR W8, [X0 + 0xE0]
	0x03379920 CBNZ W8, 0x3379928
	0x03379924 BL 0x1C16DFC
	0x03379928 LDRB W8, [X24 + 0xFFF]
	0x0337992C CBNZ W8, 0x3379944
	0x03379930 ADRP X0, 0xDA2000
	0x03379934 LDR X0, [X0 + 0xB10]
	0x03379938 BL 0x1C16CF4
	0x0337993C MOVZ W8, 0x1
	0x03379940 STRB W8, [X24 + 0xFFF]
	0x03379944 LDR X0, [X20]
	0x03379948 MADD W23, W26, W22, W23
	0x0337994C LDR W8, [X0 + 0xE0]
	0x03379950 CBNZ W8, 0x3379958
	0x03379954 BL 0x1C16DFC
	0x03379958 EXTR W8, W23, W23, 0xF
	0x0337995C CMP W21, 0x3
	0x03379960 MUL W23, W8, W25
	0x03379964 B.NE 0x33799B4
	0x03379968 LDR X0, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1064000
	006 Move W8, [X21+3889]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD88000
	014 Move X0, [X0+2968]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3889], W8
	018 Compare X20, 0
	019 JumpIfEqual {40}
	020 Move X8, 0xD88000
	021 Move X8, [X8+2968]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X20
	026 Call 0x1C17E08
	027 Move W8, [X0]
	028 Move W9, [X19]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W8, [X0+4]
	031 Move W9, [X19+4]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W8, [X0+8]
	034 Move W9, [X19+8]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W8, [X0+12]
	037 Move W9, [X19+12]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 Move W0, W31
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return X0

Method: System.Boolean Equals(System.Guid g)

Disassembly:
	0x0337996C LDR W19, [X19 + 0x18]
	0x03379970 LDR W8, [X0 + 0xE0]
	0x03379974 CBNZ W8, 0x337997C
	0x03379978 BL 0x1C16DFC
	0x0337997C LDRB W8, [X24 + 0xFFF]
	0x03379980 CBNZ W8, 0x3379998
	0x03379984 ADRP X0, 0xDA2000
	0x03379988 LDR X0, [X0 + 0xB10]
	0x0337998C BL 0x1C16CF4
	0x03379990 MOVZ W8, 0x1
	0x03379994 STRB W8, [X24 + 0xFFF]
	0x03379998 LDR X0, [X20]
	0x0337999C MADD W19, W19, W22, W23
	0x033799A0 LDR W8, [X0 + 0xE0]
	0x033799A4 CBNZ W8, 0x33799AC
	0x033799A8 BL 0x1C16DFC
	0x033799AC EXTR W8, W19, W19, 0xF

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, [X0+4]
	004 Move X9, X1
	005 ShiftRight X9, 32
	006 And X9, X9, 0x7FFFFFFF
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W8, [X0+8]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W8, [X0+12]
	011 Move X9, X2
	012 ShiftRight X9, 32
	013 And X9, X9, 0x7FFFFFFF
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CSET not yet implemented."
	016 Return X0
	017 Move W0, W31
	018 Return X0

Method: System.Int32 GetResult(System.UInt32 me, System.UInt32 them)

Disassembly:
	0x033799B0 MUL W23, W8, W25
	0x033799B4 LDR X0, [X20]
	0x033799B8 LDR W8, [X0 + 0xE0]
	0x033799BC CBNZ W8, 0x33799C4

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move TEMP, 0
	003 Not TEMP
	004 Move W8, TEMP
	005 NotImplemented "Instruction CSNEG not yet implemented."
	006 Return X0

Method: System.Int32 CompareTo(System.Object value)

Disassembly:
	0x033799C0 BL 0x1C16DFC
	0x033799C4 MOVZ W9, 0xCA77
	0x033799C8 EOR W8, W23, W23, 0xF
	0x033799CC MOVK W9, 0x85EB0000
	0x033799D0 MUL W8, W8, W9
	0x033799D4 EOR W8, W8, W8, 0xD
	0x033799D8 MUL W8, W8, W22
	0x033799DC LDP X20, X19, [X31 + 0x50]
	0x033799E0 LDP X22, X21, [X31 + 0x40]
	0x033799E4 LDP X24, X23, [X31 + 0x30]
	0x033799E8 LDP X26, X25, [X31 + 0x20]
	0x033799EC LDR X30, [X31 + 0x10]
	0x033799F0 EOR W0, W8, W8, 0x10
	0x033799F4 ADD X31, X31, 0x60
	0x033799F8 RET
	0x033799FC STP X30, X19, [X31 - 0x10]!
	0x03379A00 ADRP X0, 0xD7A000
	0x03379A04 LDR X0, [X0 + 0xB40]
	0x03379A08 BL 0x1C16D08
	0x03379A0C BL 0x1C16F10
	0x03379A10 MOV X19, X0
	0x03379A14 ADRP X0, 0xDB1000
	0x03379A18 LDR X0, [X0 + 0xE48]
	0x03379A1C BL 0x1C16D08
	0x03379A20 MOV X1, X0
	0x03379A24 MOV X0, X19
	0x03379A28 BL 0x3379A44
	0x03379A2C ADRP X0, 0xDB1000
	0x03379A30 LDR X0, [X0 + 0xE50]
	0x03379A34 BL 0x1C16D08
	0x03379A38 MOV X1, X0
	0x03379A3C MOV X0, X19
	0x03379A40 BL 0x1C16DEC
	0x03379A44 STP X30, X19, [X31 - 0x10]!
	0x03379A48 MOV X2, X31
	0x03379A4C MOV X19, X0
	0x03379A50 BL 0x338C8D8
	0x03379A54 MOVZ W8, 0x1515
	0x03379A58 MOVK W8, 0x80130000
	0x03379A5C STR W8, [X19 + 0x60]
	0x03379A60 LDP X30, X19, [X31], #0x10
	0x03379A64 RET
	0x03379A68 STP X30, X19, [X31 - 0x10]!
	0x03379A6C ADRP X0, 0xD7A000
	0x03379A70 LDR X0, [X0 + 0xB40]
	0x03379A74 BL 0x1C16D08
	0x03379A78 BL 0x1C16F10
	0x03379A7C MOV X19, X0
	0x03379A80 ADRP X0, 0xDB1000
	0x03379A84 LDR X0, [X0 + 0xE58]
	0x03379A88 BL 0x1C16D08
	0x03379A8C MOV X1, X0
	0x03379A90 MOV X0, X19
	0x03379A94 BL 0x3379A44
	0x03379A98 ADRP X0, 0xDB1000
	0x03379A9C LDR X0, [X0 + 0xE60]
	0x03379AA0 BL 0x1C16D08
	0x03379AA4 MOV X1, X0
	0x03379AA8 MOV X0, X19
	0x03379AAC BL 0x1C16DEC
	0x03379AB0 STR X30, [X31 - 0x20]!
	0x03379AB4 STP X20, X19, [X31 + 0x10]
	0x03379AB8 ADRP X20, 0x1063000
	0x03379ABC ADRP X19, 0xDA2000
	0x03379AC0 LDRB W8, [X20 + 0xF3D]
	0x03379AC4 LDR X19, [X19 + 0xB10]
	0x03379AC8 TBNZ X8, 0x0, 0x3379AE0
	0x03379ACC ADRP X0, 0xDA2000
	0x03379AD0 LDR X0, [X0 + 0xB10]
	0x03379AD4 BL 0x1C16CF4
	0x03379AD8 MOVZ W8, 0x1
	0x03379ADC STRB W8, [X20 + 0xF3D]
	0x03379AE0 ADD X0, X31, 0xC
	0x03379AE4 MOVZ W1, 0x4
	0x03379AE8 MOV X2, X31
	0x03379AEC STR W31, [X31 + 0xC]
	0x03379AF0 BL 0x3209698
	0x03379AF4 LDR X8, [X19]
	0x03379AF8 LDR W9, [X31 + 0xC]
	0x03379AFC LDP X20, X19, [X31 + 0x10]
	0x03379B00 LDR X8, [X8 + 0xB8]
	0x03379B04 STR W9, [X8]
	0x03379B08 LDR X30, [X31], #0x20
	0x03379B0C RET
	0x03379B10 STP X30, X21, [X31 - 0x20]!
	0x03379B14 STP X20, X19, [X31 + 0x10]
	0x03379B18 ADRP X20, 0x1063000
	0x03379B1C ADRP X21, 0xDB1000
	0x03379B20 LDRB W8, [X20 + 0xF3E]
	0x03379B24 LDR X21, [X21 + 0xE68]
	0x03379B28 MOV X19, X0
	0x03379B2C TBNZ X8, 0x0, 0x3379B44
	0x03379B30 ADRP X0, 0xDB1000
	0x03379B34 LDR X0, [X0 + 0xE68]
	0x03379B38 BL 0x1C16CF4
	0x03379B3C MOVZ W8, 0x1
	0x03379B40 STRB W8, [X20 + 0xF3E]
	0x03379B44 LDR X1, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1064000
	006 Move W8, [X21+3890]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD88000
	014 Move X0, [X0+2968]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3890], W8
	018 Compare X20, 0
	019 JumpIfEqual {66}
	020 Move X8, 0xD88000
	021 Move X8, [X8+2968]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X20
	026 Call 0x1C17E08
	027 Move W8, [X0]
	028 Move W9, [X19]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W8, [X0+8]
	037 Move W9, [X19+8]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W8, [X0+9]
	040 Move W9, [X19+9]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W8, [X0+10]
	043 Move W9, [X19+10]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W8, [X0+11]
	046 Move W9, [X19+11]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W8, [X0+12]
	049 Move W9, [X19+12]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W8, [X0+13]
	052 Move W9, [X19+13]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W8, [X0+14]
	055 Move W9, [X19+14]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move W8, [X0+15]
	058 Move W9, [X19+15]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W0, W31
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move TEMP, 0
	063 Not TEMP
	064 Move W8, TEMP
	065 NotImplemented "Instruction CSNEG not yet implemented."
	066 Move W0, 1
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X30, [X31+32]
	070 Move X21, [X31+40]
	071 Return X0
	072 Move X0, 0xD83000
	073 Move X0, [X0+1400]
	074 Call 0x1C17D08
	075 Call 0x1C17F10
	076 Move X19, X0
	077 Move X0, 0xDB2000
	078 Move X0, [X0+3632]
	079 Call 0x1C17D08
	080 Move X20, X0
	081 Move X0, 0xD85000
	082 Move X0, [X0+3784]
	083 Call 0x1C17D08
	084 Move X2, X0
	085 Move X0, X19
	086 Move X1, X20
	087 Move X3, X31
	088 Call ArgumentException..ctor, X0, X1, X2
	089 Move X0, 0xDB2000
	090 Move X0, [X0+3640]
	091 Call 0x1C17D08
	092 Move X1, X0
	093 Move X0, X19
	094 Call 0x1C17DEC

Method: System.Int32 CompareTo(System.Guid value)

Disassembly:
	0x03379B48 MOV X0, X19
	0x03379B4C MOV X2, X31
	0x03379B50 BL 0x338C8D8
	0x03379B54 MOVZ W8, 0x1508
	0x03379B58 MOVK W8, 0x80130000
	0x03379B5C STR W8, [X19 + 0x60]
	0x03379B60 LDP X20, X19, [X31 + 0x10]
	0x03379B64 LDP X30, X21, [X31], #0x20
	0x03379B68 RET
	0x03379B6C STP X30, X19, [X31 - 0x10]!
	0x03379B70 MOV X2, X31
	0x03379B74 MOV X19, X0
	0x03379B78 BL 0x338C8D8
	0x03379B7C MOVZ W8, 0x1508
	0x03379B80 MOVK W8, 0x80130000
	0x03379B84 STR W8, [X19 + 0x60]
	0x03379B88 LDP X30, X19, [X31], #0x10
	0x03379B8C RET
	0x03379B90 MOV X4, X31
	0x03379B94 B 0x338CA74
	0x03379B98 STP X30, X21, [X31 - 0x20]!
	0x03379B9C STP X20, X19, [X31 + 0x10]
	0x03379BA0 ADRP X21, 0x1063000
	0x03379BA4 LDRB W8, [X21 + 0xF3F]
	0x03379BA8 MOV X19, X1
	0x03379BAC MOV X20, X0
	0x03379BB0 TBNZ X8, 0x0, 0x3379BC8
	0x03379BB4 ADRP X0, 0xD7E000
	0x03379BB8 LDR X0, [X0 + 0x628]
	0x03379BBC BL 0x1C16CF4
	0x03379BC0 MOVZ W8, 0x1
	0x03379BC4 STRB W8, [X21 + 0xF3F]
	0x03379BC8 CBZ X19, 0x3379BFC
	0x03379BCC ADRP X8, 0xD7E000
	0x03379BD0 LDR X8, [X8 + 0x628]
	0x03379BD4 LDR X9, [X19]
	0x03379BD8 LDR X8, [X8]
	0x03379BDC CMP X9, X8
	0x03379BE0 B.NE 0x3379C0C
	0x03379BE4 LDRSH W20, [X20]
	0x03379BE8 MOV X0, X19
	0x03379BEC BL 0x1C16E08
	0x03379BF0 LDRSH W8, [X0]
	0x03379BF4 SUB W0, W20, W8
	0x03379BF8 B 0x3379C00
	0x03379BFC MOVZ W0, 0x1
	0x03379C00 LDP X20, X19, [X31 + 0x10]
	0x03379C04 LDP X30, X21, [X31], #0x20
	0x03379C08 RET
	0x03379C0C ADRP X0, 0xD82000
	0x03379C10 LDR X0, [X0 + 0x578]
	0x03379C14 BL 0x1C16D08
	0x03379C18 BL 0x1C16F10
	0x03379C1C MOV X19, X0
	0x03379C20 ADRP X0, 0xDB1000
	0x03379C24 LDR X0, [X0 + 0xE70]
	0x03379C28 BL 0x1C16D08

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction LDRSH not yet implemented."
	004 Move X9, X1
	005 ShiftRight X9, 16
	006 And X9, X9, 0x7FFFFFFF
	007 NotImplemented "Instruction SBFM not yet implemented."
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction LDRSH not yet implemented."
	010 NotImplemented "Instruction SBFM not yet implemented."
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W8, [X0+8]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move W8, [X0+9]
	015 Move X9, X2
	016 ShiftRight X9, 8
	017 And X9, X9, 0x7FFFFFFF
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move W8, [X0+10]
	020 Move X9, X2
	021 ShiftRight X9, 16
	022 And X9, X9, 0x7FFFFFFF
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W8, [X0+11]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W8, [X0+12]
	027 Move X9, X2
	028 ShiftRight X9, 32
	029 And X9, X9, 0x7FFFFFFF
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W8, [X0+13]
	032 Move X9, X2
	033 ShiftRight X9, 40
	034 And X9, X9, 0x7FFFFFFF
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W8, [X0+14]
	037 Move X9, X2
	038 ShiftRight X9, 48
	039 And X9, X9, 0x7FFFFFFF
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W8, [X0+15]
	042 Move X9, X2
	043 ShiftRight X9, 56
	044 And X9, X9, 0x7FFFFFFF
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W0, W31
	047 Return X0
	048 Move TEMP, 0
	049 Not TEMP
	050 Move W8, TEMP
	051 NotImplemented "Instruction CSNEG not yet implemented."
	052 Return X0
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W8, TEMP
	058 NotImplemented "Instruction CSNEG not yet implemented."
	059 Return X0
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."

Method: System.Boolean op_Equality(System.Guid a, System.Guid b)

Disassembly:
	0x03379C2C MOV X1, X0
	0x03379C30 MOV X0, X19
	0x03379C34 MOV X2, X31
	0x03379C38 BL 0x3314A68
	0x03379C3C ADRP X0, 0xDB1000
	0x03379C40 LDR X0, [X0 + 0xE78]
	0x03379C44 BL 0x1C16D08
	0x03379C48 MOV X1, X0
	0x03379C4C MOV X0, X19
	0x03379C50 BL 0x1C16DEC
	0x03379C54 LDRSH W8, [X0]
	0x03379C58 SUB W0, W8, W1, SXTH
	0x03379C5C RET
	0x03379C60 STP X30, X21, [X31 - 0x20]!
	0x03379C64 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X8, X0
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W0, W31
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move X8, X8
	006 ShiftRight X8, 32
	007 And X8, X8, 0x7FFFFFFF
	008 Move X9, X2
	009 ShiftRight X9, 32
	010 And X9, X9, 0x7FFFFFFF
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X8, X3
	013 ShiftRight X8, 32
	014 And X8, X8, 0x7FFFFFFF
	015 Move X9, X1
	016 ShiftRight X9, 32
	017 And X9, X9, 0x7FFFFFFF
	018 NotImplemented "Instruction CMP not yet implemented."
	019 NotImplemented "Instruction CSET not yet implemented."
	020 Return X0

Method: System.Boolean op_Inequality(System.Guid a, System.Guid b)

Disassembly:
	0x03379C68 ADRP X21, 0x1063000
	0x03379C6C LDRB W8, [X21 + 0xF40]
	0x03379C70 MOV X19, X1
	0x03379C74 MOV X20, X0
	0x03379C78 TBNZ X8, 0x0, 0x3379C90
	0x03379C7C ADRP X0, 0xD7E000
	0x03379C80 LDR X0, [X0 + 0x628]
	0x03379C84 BL 0x1C16CF4
	0x03379C88 MOVZ W8, 0x1
	0x03379C8C STRB W8, [X21 + 0xF40]
	0x03379C90 CBZ X19, 0x3379CAC
	0x03379C94 ADRP X8, 0xD7E000
	0x03379C98 LDR X8, [X8 + 0x628]
	0x03379C9C LDR X9, [X19]
	0x03379CA0 LDR X8, [X8]

ISIL:
	001 Move X8, X0
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W0, 1
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move X8, X8
	006 ShiftRight X8, 32
	007 And X8, X8, 0x7FFFFFFF
	008 Move X9, X2
	009 ShiftRight X9, 32
	010 And X9, X9, 0x7FFFFFFF
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X8, X3
	013 ShiftRight X8, 32
	014 And X8, X8, 0x7FFFFFFF
	015 Move X9, X1
	016 ShiftRight X9, 32
	017 And X9, X9, 0x7FFFFFFF
	018 NotImplemented "Instruction CMP not yet implemented."
	019 NotImplemented "Instruction CSET not yet implemented."
	020 Return X0

Method: System.String ToString(System.String format)

Disassembly:
	0x03379CA4 CMP X9, X8

ISIL:
	001 Call Guid.ToString, X0, X1, X2
	002 Return X0

Method: System.Char HexToChar(System.Int32 a)

Disassembly:
	0x03379CA8 B.EQ 0x3379CB4
	0x03379CAC MOV W0, W31
	0x03379CB0 B 0x3379CCC
	0x03379CB4 LDRH W20, [X20]
	0x03379CB8 MOV X0, X19
	0x03379CBC BL 0x1C16E08
	0x03379CC0 LDRH W8, [X0]

ISIL:
	001 And W8, W0, 15
	002 Move W9, 48
	003 Add W10, W8, 87
	004 NotImplemented "Instruction BFM not yet implemented."
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSEL not yet implemented."
	007 Return X0

Method: System.Int32 HexsToChars(System.Char* guidChars, System.Int32 a, System.Int32 b)

Disassembly:
	0x03379CC4 CMP W20, W8
	0x03379CC8 CSET W0, EQ
	0x03379CCC LDP X20, X19, [X31 + 0x10]
	0x03379CD0 LDP X30, X21, [X31], #0x20
	0x03379CD4 RET
	0x03379CD8 LDRH W8, [X0]
	0x03379CDC CMP W8, W1, UXTH
	0x03379CE0 CSET W0, EQ
	0x03379CE4 RET
	0x03379CE8 LDRH W0, [X0]
	0x03379CEC BFM W0, W0, 0x10, 0xF
	0x03379CF0 RET
	0x03379CF4 STR X30, [X31 - 0x30]!
	0x03379CF8 STP X22, X21, [X31 + 0x10]
	0x03379CFC STP X20, X19, [X31 + 0x20]
	0x03379D00 ADRP X22, 0x1063000
	0x03379D04 ADRP X20, 0xDA9000
	0x03379D08 ADRP X21, 0xDAF000
	0x03379D0C LDRB W8, [X22 + 0xF41]
	0x03379D10 LDR X20, [X20 + 0x1D8]
	0x03379D14 LDR X21, [X21 + 0x78]
	0x03379D18 MOV X19, X0
	0x03379D1C TBNZ X8, 0x0, 0x3379D40
	0x03379D20 ADRP X0, 0xDAF000
	0x03379D24 LDR X0, [X0 + 0x78]
	0x03379D28 BL 0x1C16CF4
	0x03379D2C ADRP X0, 0xDA9000
	0x03379D30 LDR X0, [X0 + 0x1D8]
	0x03379D34 BL 0x1C16CF4
	0x03379D38 MOVZ W8, 0x1
	0x03379D3C STRB W8, [X22 + 0xF41]

ISIL:
	001 Move W9, W1
	002 ShiftRight W9, 4
	003 And W9, W9, 127
	004 Move W11, 48
	005 NotImplemented "Instruction BFM not yet implemented."
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add W9, W9, 87
	008 Move W12, 48
	009 And W13, W1, 15
	010 NotImplemented "Instruction CSEL not yet implemented."
	011 NotImplemented "Instruction BFM not yet implemented."
	012 Move W11, W2
	013 ShiftRight W11, 4
	014 And W11, W11, 127
	015 NotImplemented "Instruction STRH not yet implemented."
	016 Move W9, 48
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Add W13, W13, 87
	019 Move W10, 48
	020 NotImplemented "Instruction BFM not yet implemented."
	021 And W14, W2, 15
	022 NotImplemented "Instruction CSEL not yet implemented."
	023 Add W13, W11, 87
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction BFM not yet implemented."
	026 Add W11, W14, 87
	027 NotImplemented "Instruction CSEL not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, X0
	030 NotImplemented "Instruction STRH not yet implemented."
	031 NotImplemented "Instruction STRH not yet implemented."
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 Move W0, 4
	034 NotImplemented "Instruction STRH not yet implemented."
	035 Return X0

Method: System.Int32 HexsToCharsHexOutput(System.Char* guidChars, System.Int32 a, System.Int32 b)

Disassembly:
	0x03379D40 LDR X1, [X20]
	0x03379D44 LDRSH W19, [X19]
	0x03379D48 MOV X0, X31
	0x03379D4C BL 0x25BF134
	0x03379D50 MOV X20, X0
	0x03379D54 LDR X0, [X21]
	0x03379D58 MOV X21, X1
	0x03379D5C LDR W8, [X0 + 0xE0]
	0x03379D60 CBNZ W8, 0x3379D68
	0x03379D64 BL 0x1C16DFC
	0x03379D68 MOV W0, W19
	0x03379D6C MOV X1, X20
	0x03379D70 MOV X2, X21
	0x03379D74 LDP X20, X19, [X31 + 0x20]
	0x03379D78 LDP X22, X21, [X31 + 0x10]
	0x03379D7C MOV X3, X31
	0x03379D80 LDR X30, [X31], #0x30
	0x03379D84 B 0x3379D88
	0x03379D88 STP X29, X30, [X31 - 0x60]!
	0x03379D8C STP X28, X27, [X31 + 0x10]
	0x03379D90 STP X26, X25, [X31 + 0x20]
	0x03379D94 STP X24, X23, [X31 + 0x30]
	0x03379D98 STP X22, X21, [X31 + 0x40]
	0x03379D9C STP X20, X19, [X31 + 0x50]
	0x03379DA0 ADD X29, X31, 0x0
	0x03379DA4 SUB X31, X31, 0xC0
	0x03379DA8 MRS X25, 0xC000
	0x03379DAC LDR X8, [X25 + 0x28]
	0x03379DB0 ADRP X23, 0x1063000
	0x03379DB4 ADRP X26, 0xDAF000
	0x03379DB8 MOV X22, X3
	0x03379DBC STUR X8, [X29 - 0x8]
	0x03379DC0 LDRB W8, [X23 + 0xFBE]
	0x03379DC4 LDR X26, [X26 + 0x78]
	0x03379DC8 MOV X20, X2
	0x03379DCC MOV X21, X1
	0x03379DD0 MOV W19, W0
	0x03379DD4 SUB X27, X29, 0x90
	0x03379DD8 TBNZ X8, 0x0, 0x3379E08

ISIL:
	001 Move W9, 48
	002 NotImplemented "Instruction MOVK not yet implemented."
	003 Move [X0], W9
	004 Move W9, 44
	005 Move W10, W1
	006 ShiftRight W10, 4
	007 And W10, W10, 127
	008 Move W12, 48
	009 NotImplemented "Instruction MOVK not yet implemented."
	010 Move [X0+8], W9
	011 Move W9, 120
	012 NotImplemented "Instruction BFM not yet implemented."
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Add W10, W10, 87
	015 NotImplemented "Instruction STRH not yet implemented."
	016 Move W9, 48
	017 And W13, W1, 15
	018 NotImplemented "Instruction CSEL not yet implemented."
	019 NotImplemented "Instruction BFM not yet implemented."
	020 Move W12, W2
	021 ShiftRight W12, 4
	022 And W12, W12, 127
	023 NotImplemented "Instruction STRH not yet implemented."
	024 Move W10, 48
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Add W13, W13, 87
	027 Move W11, 48
	028 NotImplemented "Instruction BFM not yet implemented."
	029 And W14, W2, 15
	030 NotImplemented "Instruction CSEL not yet implemented."
	031 Add W13, W12, 87
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction BFM not yet implemented."
	034 Add W12, W14, 87
	035 NotImplemented "Instruction STRH not yet implemented."
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X8, X0
	039 NotImplemented "Instruction STRH not yet implemented."
	040 NotImplemented "Instruction CSEL not yet implemented."
	041 Move W0, 9
	042 NotImplemented "Instruction STRH not yet implemented."
	043 Return X0

Method: System.String ToString(System.String format, System.IFormatProvider provider)

Disassembly:
	0x033796B4 LDR W26, [X19 + 0x4]
	0x033796B8 LDR W27, [X19 + 0x14]
	0x033796BC MOVZ W24, 0x79B1
	0x033796C0 MOVK W24, 0x9E370000
	0x033796C4 EXTR W9, W25, W25, 0x13
	0x033796C8 MUL W9, W9, W24
	0x033796CC STR W9, [X19]
	0x033796D0 CBZ W8, 0x33796E8
	0x033796D4 ADRP X0, 0xDA2000
	0x033796D8 LDR X0, [X0 + 0xB10]
	0x033796DC BL 0x1C16CF4
	0x033796E0 MOVZ W8, 0x1
	0x033796E4 STRB W8, [X22 + 0x836]
	0x033796E8 LDR X0, [X23]
	0x033796EC MADD W25, W27, W21, W26
	0x033796F0 LDR W8, [X0 + 0xE0]
	0x033796F4 CBZ W8, 0x3379700
	0x033796F8 MOV W8, W31
	0x033796FC B 0x3379710
	0x03379700 BL 0x1C16DFC
	0x03379704 LDRB W8, [X22 + 0x836]
	0x03379708 CMP W8, 0x0
	0x0337970C CSET W8, EQ
	0x03379710 LDR W26, [X19 + 0x8]
	0x03379714 LDR W27, [X19 + 0x18]
	0x03379718 EXTR W9, W25, W25, 0x13
	0x0337971C MUL W9, W9, W24
	0x03379720 STR W9, [X19 + 0x4]
	0x03379724 CBZ W8, 0x337973C
	0x03379728 ADRP X0, 0xDA2000
	0x0337972C LDR X0, [X0 + 0xB10]
	0x03379730 BL 0x1C16CF4
	0x03379734 MOVZ W8, 0x1
	0x03379738 STRB W8, [X22 + 0x836]
	0x0337973C LDR X0, [X23]
	0x03379740 MADD W25, W27, W21, W26
	0x03379744 LDR W8, [X0 + 0xE0]
	0x03379748 CBZ W8, 0x3379754
	0x0337974C MOV W8, W31
	0x03379750 B 0x3379764
	0x03379754 BL 0x1C16DFC
	0x03379758 LDRB W8, [X22 + 0x836]
	0x0337975C CMP W8, 0x0
	0x03379760 CSET W8, EQ
	0x03379764 LDR W26, [X19 + 0xC]
	0x03379768 EXTR W9, W25, W25, 0x13
	0x0337976C MUL W9, W9, W24
	0x03379770 STR W9, [X19 + 0x8]
	0x03379774 CBZ W8, 0x337978C
	0x03379778 ADRP X0, 0xDA2000
	0x0337977C LDR X0, [X0 + 0xB10]
	0x03379780 BL 0x1C16CF4
	0x03379784 MOVZ W8, 0x1
	0x03379788 STRB W8, [X22 + 0x836]
	0x0337978C LDR X0, [X23]
	0x03379790 MADD W20, W20, W21, W26
	0x03379794 LDR W8, [X0 + 0xE0]
	0x03379798 CBNZ W8, 0x33797A0
	0x0337979C BL 0x1C16DFC
	0x033797A0 EXTR W8, W20, W20, 0x13
	0x033797A4 MUL W8, W8, W24
	0x033797A8 STR W8, [X19 + 0xC]
	0x033797AC LDP X20, X19, [X31 + 0x40]
	0x033797B0 LDP X22, X21, [X31 + 0x30]
	0x033797B4 LDP X24, X23, [X31 + 0x20]
	0x033797B8 LDP X26, X25, [X31 + 0x10]
	0x033797BC LDP X30, X27, [X31], #0x50
	0x033797C0 RET
	0x033797C4 SUB X31, X31, 0x60
	0x033797C8 STR X30, [X31 + 0x10]
	0x033797CC STP X26, X25, [X31 + 0x20]
	0x033797D0 STP X24, X23, [X31 + 0x30]
	0x033797D4 STP X22, X21, [X31 + 0x40]
	0x033797D8 STP X20, X19, [X31 + 0x50]
	0x033797DC ADRP X20, 0x1063000
	0x033797E0 LDRB W8, [X20 + 0xF3C]
	0x033797E4 MOV X19, X0
	0x033797E8 TBNZ X8, 0x0, 0x3379800
	0x033797EC ADRP X0, 0xDA2000
	0x033797F0 LDR X0, [X0 + 0xB10]
	0x033797F4 BL 0x1C16CF4
	0x033797F8 MOVZ W8, 0x1
	0x033797FC STRB W8, [X20 + 0xF3C]
	0x03379800 LDR W23, [X19 + 0x1C]
	0x03379804 ADRP X20, 0xDA2000
	0x03379808 LDR X20, [X20 + 0xB10]
	0x0337980C CMP W23, 0x4
	0x03379810 AND W21, W23, 0x3
	0x03379814 B.CC 0x3379890
	0x03379818 LDR X0, [X20]
	0x0337981C LDR V0, [X19]
	0x03379820 LDR W8, [X0 + 0xE0]
	0x03379824 STR V0, [X31]
	0x03379828 CBNZ W8, 0x3379830
	0x0337982C BL 0x1C16DFC
	0x03379830 ADRP X22, 0x1060000
	0x03379834 LDRB W8, [X22 + 0x837]
	0x03379838 CBNZ W8, 0x3379850
	0x0337983C ADRP X0, 0xDA2000
	0x03379840 LDR X0, [X0 + 0xB10]
	0x03379844 BL 0x1C16CF4
	0x03379848 MOVZ W8, 0x1
	0x0337984C STRB W8, [X22 + 0x837]
	0x03379850 LDR X0, [X20]
	0x03379854 LDR W8, [X0 + 0xE0]
	0x03379858 CBNZ W8, 0x3379860
	0x0337985C BL 0x1C16DFC
	0x03379860 ADRP X9, 0xFFFFFFFFFD773000
	0x03379864 ADRP X8, 0xFFFFFFFFFD773000
	0x03379868 LDR V1, [X9 + 0x2]
	0x0337986C LDR V0, [X8 + 0x7F]
	0x03379870 LDR V2, [X31]
	0x03379874 UNIMPLEMENTED
	0x00000000 INVALID
	0x00000000 INVALID
	0x03379880 ORR V0.16B, V0.16B, V1.16B
	0x03379884 UNIMPLEMENTED
	0x03379888 FMOV W0, S0
	0x0337988C B 0x33798A4
	0x03379890 LDR X0, [X20]
	0x03379894 LDR W8, [X0 + 0xE0]
	0x03379898 CBNZ W8, 0x33798A0
	0x0337989C BL 0x1C16DFC
	0x033798A0 BL 0x33794A0
	0x033798A4 MOVZ W22, 0xAE3D
	0x033798A8 MOVK W22, 0xC2B20000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1064000
	009 Move W8, [X21+3891]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xDAA000
	017 Move X0, [X0+1256]
	018 Call 0x1C17CF4
	019 Move X0, 0xDA3000
	020 Move X0, [X0+3040]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3891], W8
	024 Move [X31+12], W31
	025 Compare X20, 0
	026 JumpIfEqual {30}
	027 Move W8, [X20+16]
	028 Compare W8, 0
	029 JumpIfNotEqual {35}
	030 Move X8, 0xDA3000
	031 Move X8, [X8+3040]
	032 Move X20, [X8]
	033 Compare X20, 0
	034 JumpIfEqual {125}
	035 Move W8, [X20+16]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, X20
	038 Move W1, W31
	039 Move X2, X31
	040 Call String.get_Chars, X0, X1
	041 And W8, W0, 0xFFFF
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 And W8, W0, 0xFFFF
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 And W8, W0, 0xFFFF
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W0, 36
	052 And W8, W0, 0xFFFF
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X0, 0xDA8000
	057 Move X0, [X0+3080]
	058 Call 0x1C17D08
	059 Call 0x1C17F10
	060 Move X19, X0
	061 Move X0, 0xDB2000
	062 Move X0, [X0+3616]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X19
	066 Move X2, X31
	067 Call FormatException..ctor, X0, X1
	068 Move X0, 0xDB2000
	069 Move X0, [X0+3624]
	070 Call 0x1C17D08
	071 Move X1, X0
	072 Move X0, X19
	073 Call 0x1C17DEC
	074 And W8, W0, 0xFFFF
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move W0, 68
	079 Move W0, 38
	080 Move W0, 32
	081 Move X1, X31
	082 Call String.FastAllocateString, X0
	083 Compare X0, 0
	084 JumpIfEqual {125}
	085 Move X21, X0
	086 Move X0, X31
	087 Call RuntimeHelpers.get_OffsetToStringData
	088 Move W22, [X21+16]
	089 Move W23, W0
	090 Move TEMP, X22
	091 And TEMP, TEMP, -2147483648
	092 Compare TEMP, -2147483648
	093 JumpIfNotEqual {96}
	094 Move X0, X31
	095 Call ThrowHelper.ThrowArgumentOutOfRangeException
	096 Move X24, 0x1061000
	097 Move W8, [X24+1890]
	098 Compare W8, 0
	099 JumpIfNotEqual {105}
	100 Move X0, 0xDA2000
	101 Move X0, [X0+656]
	102 Call 0x1C17CF4
	103 Move W8, 1
	104 Move [X24+1890], W8
	105 Move X0, X20
	106 Move X1, X31
	107 Add X23, X21, W23
	108 Call String.GetRawStringData, X0
	109 Move W5, [X20+16]
	110 Move X4, X0
	111 Add X3, X31, 12
	112 Move X0, X19
	113 Move X1, X23
	114 Move X2, X22
	115 Call Guid.TryFormat, X0, X1, X2, X3
	116 Move X0, X21
	117 Move X20, [X31+48]
	118 Move X19, [X31+56]
	119 Move X22, [X31+32]
	120 Move X21, [X31+40]
	121 Move X24, [X31+16]
	122 Move X23, [X31+24]
	123 Move X30, [X31+64]
	124 Return X0
	125 Call 0x1C17F20

Method: System.Boolean TryFormat(System.Span`1<System.Char> destination, out System.Int32 charsWritten, System.ReadOnlySpan`1<System.Char> format = null)

Disassembly:
	0x03379DDC ADRP X0, 0xDAF000
	0x03379DE0 LDR X0, [X0 + 0x78]
	0x03379DE4 BL 0x1C16CF4
	0x03379DE8 ADRP X0, 0xDA9000
	0x03379DEC LDR X0, [X0 + 0x28]
	0x03379DF0 BL 0x1C16CF4
	0x03379DF4 ADRP X0, 0xDA9000
	0x03379DF8 LDR X0, [X0 + 0x4E8]
	0x03379DFC BL 0x1C16CF4
	0x03379E00 MOVZ W8, 0x1
	0x03379E04 STRB W8, [X23 + 0xFBE]
	0x03379E08 LDR X0, [X26]
	0x03379E0C MOVI V0.2D, 0x0
	0x03379E10 STUR W31, [X29 - 0x94]
	0x03379E14 STUR V0, [X27 + 0x6A]
	0x03379E18 STP V0, V0, [X29 - 0x40]
	0x03379E1C STP V0, V0, [X29 - 0x60]
	0x03379E20 STP V0, V0, [X29 - 0x80]
	0x03379E24 STUR V0, [X29 - 0x90]
	0x03379E28 STP V0, V0, [X29 - 0xC0]
	0x03379E2C LDR W8, [X0 + 0xE0]
	0x03379E30 TBNZ X19, 0x1F, 0x3379E4C
	0x03379E34 CBNZ W20, 0x3379E4C
	0x03379E38 CBNZ W8, 0x3379E40
	0x03379E3C BL 0x1C16DFC
	0x03379E40 MOVN W1, 0x0
	0x03379E44 MOV W0, W19
	0x03379E48 B 0x3379EF4
	0x03379E4C CBNZ W8, 0x3379E54
	0x03379E50 BL 0x1C16DFC
	0x03379E54 SUB X2, X29, 0x94
	0x03379E58 MOV X0, X21
	0x03379E5C MOV X1, X20
	0x03379E60 BL 0x338071C
	0x03379E64 MOV W23, W0
	0x03379E68 MOV X0, X22
	0x03379E6C MOV X1, X31
	0x03379E70 BL 0x333ACEC
	0x03379E74 LDUR W22, [X29 - 0x94]
	0x03379E78 MOVZ W8, 0xFFDF
	0x03379E7C AND W10, W23, W8, 0x0
	0x03379E80 CMP W10, 0x47
	0x03379E84 CSET W8, EQ
	0x03379E88 CMP W22, 0x1
	0x03379E8C CSET W9, LT
	0x03379E90 CMP W10, 0x44
	0x03379E94 MOV X24, X0
	0x03379E98 B.EQ 0x3379ED8
	0x03379E9C AND W8, W8, W9, 0x0
	0x03379EA0 CBNZ W8, 0x3379ED8
	0x03379EA4 AND W8, W23, 0xFFFFFFDF
	0x03379EA8 AND W8, W8, 0xFFFF
	0x03379EAC CMP W8, 0x58
	0x03379EB0 B.NE 0x3379F28
	0x03379EB4 LDR X0, [X26]
	0x03379EB8 LDR W8, [X0 + 0xE0]
	0x03379EBC CBNZ W8, 0x3379EC4
	0x03379EC0 BL 0x1C16DFC
	0x03379EC4 SUB W1, W23, 0x21
	0x03379EC8 MOV W0, W19
	0x03379ECC MOV W2, W22
	0x03379ED0 BL 0x3383B60
	0x03379ED4 B 0x3379EF8
	0x03379ED8 TBNZ X19, 0x1F, 0x3379FC0
	0x03379EDC LDR X0, [X26]
	0x03379EE0 LDR W8, [X0 + 0xE0]
	0x03379EE4 CBNZ W8, 0x3379EEC
	0x03379EE8 BL 0x1C16DFC
	0x03379EEC MOV W0, W19
	0x03379EF0 MOV W1, W22
	0x03379EF4 BL 0x3383824
	0x03379EF8 LDR X8, [X25 + 0x28]
	0x03379EFC LDUR X9, [X29 - 0x8]
	0x03379F00 CMP X8, X9
	0x03379F04 B.NE 0x337A020
	0x03379F08 ADD X31, X29, 0x0
	0x03379F0C LDP X20, X19, [X31 + 0x50]
	0x03379F10 LDP X22, X21, [X31 + 0x40]
	0x03379F14 LDP X24, X23, [X31 + 0x30]
	0x03379F18 LDP X26, X25, [X31 + 0x20]
	0x03379F1C LDP X28, X27, [X31 + 0x10]
	0x03379F20 LDP X29, X30, [X31], #0x60
	0x03379F24 RET
	0x03379F28 LDR X0, [X26]
	0x03379F2C MOVI V0.2D, 0x0
	0x03379F30 STUR V0, [X27 + 0x6A]
	0x03379F34 STP V0, V0, [X29 - 0x40]
	0x03379F38 STP V0, V0, [X29 - 0x60]
	0x03379F3C STP V0, V0, [X29 - 0x80]
	0x03379F40 STUR V0, [X29 - 0x90]
	0x03379F44 LDR W8, [X0 + 0xE0]
	0x03379F48 CBNZ W8, 0x3379F50
	0x03379F4C BL 0x1C16DFC
	0x03379F50 SUB X1, X29, 0x90
	0x03379F54 MOV W0, W19
	0x03379F58 MOV X2, X31
	0x03379F5C BL 0x338BD98
	0x03379F60 ADD X8, X31, 0x0
	0x03379F64 SUB X1, X8, 0x40
	0x03379F68 ADD X31, X1, 0x0
	0x03379F6C MOVI V0.2D, 0x0
	0x03379F70 SUB X0, X29, 0xC0
	0x03379F74 MOVZ W2, 0x20
	0x03379F78 MOV X3, X31
	0x03379F7C STP V0, V0, [X8 - 0x20]
	0x03379F80 STP V0, V0, [X8 - 0x40]
	0x03379F84 BL 0x3240C88
	0x03379F88 LDR X0, [X26]
	0x03379F8C ANDS W31, W23, 0xFFFF
	0x03379F90 LDR W8, [X0 + 0xE0]
	0x03379F94 B.EQ 0x3379FEC
	0x03379F98 CBNZ W8, 0x3379FA0
	0x03379F9C BL 0x1C16DFC
	0x03379FA0 SUB X0, X29, 0xC0
	0x03379FA4 SUB X1, X29, 0x90
	0x03379FA8 MOV W2, W23
	0x03379FAC MOV W3, W22
	0x03379FB0 MOV X4, X24
	0x03379FB4 MOV W5, W31
	0x03379FB8 BL 0x3380A9C
	0x03379FBC B 0x337A00C
	0x03379FC0 CBZ X24, 0x337A01C
	0x03379FC4 LDR X0, [X26]
	0x03379FC8 LDR X20, [X24 + 0x30]
	0x03379FCC LDR W8, [X0 + 0xE0]
	0x03379FD0 CBNZ W8, 0x3379FD8
	0x03379FD4 BL 0x1C16DFC
	0x03379FD8 MOV W0, W19
	0x03379FDC MOV W1, W22
	0x03379FE0 MOV X2, X20
	0x03379FE4 BL 0x33839B4
	0x03379FE8 B 0x3379EF8
	0x03379FEC CBNZ W8, 0x3379FF4
	0x03379FF0 BL 0x1C16DFC
	0x03379FF4 SUB X0, X29, 0xC0
	0x03379FF8 SUB X1, X29, 0x90
	0x03379FFC MOV X2, X21
	0x0337A000 MOV X3, X20
	0x0337A004 MOV X4, X24
	0x0337A008 BL 0x338102C
	0x0337A00C SUB X0, X29, 0xC0
	0x0337A010 MOV X1, X31
	0x0337A014 BL 0x3240CC4
	0x0337A018 B 0x3379EF8
	0x0337A01C BL 0x1C16F20
	0x0337A020 BL 0x3EB1B20
	0x0337A024 STP X30, X23, [X31 - 0x30]!
	0x0337A028 STP X22, X21, [X31 + 0x10]
	0x0337A02C STP X20, X19, [X31 + 0x20]
	0x0337A030 ADRP X23, 0x1062000
	0x0337A034 ADRP X21, 0xDA8000
	0x0337A038 ADRP X22, 0xDAE000
	0x0337A03C LDRB W8, [X23 + 0xF42]
	0x0337A040 LDR X21, [X21 + 0x1D8]
	0x0337A044 LDR X22, [X22 + 0x78]
	0x0337A048 MOV X19, X1
	0x0337A04C MOV X20, X0
	0x0337A050 TBNZ X8, 0x0, 0x337A074
	0x0337A054 ADRP X0, 0xDAE000
	0x0337A058 LDR X0, [X0 + 0x78]
	0x0337A05C BL 0x1C16CF4
	0x0337A060 ADRP X0, 0xDA8000
	0x0337A064 LDR X0, [X0 + 0x1D8]
	0x0337A068 BL 0x1C16CF4
	0x0337A06C MOVZ W8, 0x1
	0x0337A070 STRB W8, [X23 + 0xF42]
	0x0337A074 LDR X1, [X21]
	0x0337A078 LDRSH W20, [X20]
	0x0337A07C MOV X0, X31
	0x0337A080 BL 0x25BF134
	0x0337A084 MOV X21, X0
	0x0337A088 LDR X0, [X22]
	0x0337A08C MOV X22, X1
	0x0337A090 LDR W8, [X0 + 0xE0]
	0x0337A094 CBNZ W8, 0x337A09C
	0x0337A098 BL 0x1C16DFC
	0x0337A09C MOV W0, W20
	0x0337A0A0 MOV X1, X21
	0x0337A0A4 MOV X2, X22
	0x0337A0A8 MOV X3, X19
	0x0337A0AC LDP X20, X19, [X31 + 0x20]
	0x0337A0B0 LDP X22, X21, [X31 + 0x10]
	0x0337A0B4 LDP X30, X23, [X31], #0x30
	0x0337A0B8 B 0x3379D88
	0x0337A0BC STP X30, X23, [X31 - 0x30]!
	0x0337A0C0 STP X22, X21, [X31 + 0x10]
	0x0337A0C4 STP X20, X19, [X31 + 0x20]
	0x0337A0C8 ADRP X22, 0x1062000
	0x0337A0CC LDRB W8, [X22 + 0xF43]
	0x0337A0D0 MOV X19, X2
	0x0337A0D4 MOV X20, X1
	0x0337A0D8 MOV X21, X0
	0x0337A0DC TBNZ X8, 0x0, 0x337A0F4
	0x0337A0E0 ADRP X0, 0xDAE000
	0x0337A0E4 LDR X0, [X0 + 0x78]
	0x0337A0E8 BL 0x1C16CF4
	0x0337A0EC MOVZ W8, 0x1
	0x0337A0F0 STRB W8, [X22 + 0xF43]
	0x0337A0F4 ADRP X23, 0xDAE000
	0x0337A0F8 LDRSH W22, [X21]
	0x0337A0FC LDR X23, [X23 + 0x78]
	0x0337A100 CBZ X20, 0x337A1BC
	0x0337A104 TBZ X22, 0x1F, 0x337A1BC
	0x0337A108 LDR W8, [X20 + 0x10]
	0x0337A10C CMP W8, 0x1
	0x0337A110 B.LT 0x337A1BC
	0x0337A114 MOV X0, X20
	0x0337A118 MOV W1, W31
	0x0337A11C MOV X2, X31
	0x0337A120 BL 0x3222A1C
	0x0337A124 AND W8, W0, 0xFFFF
	0x0337A128 CMP W8, 0x58
	0x0337A12C B.EQ 0x337A14C
	0x0337A130 MOV X0, X20
	0x0337A134 MOV W1, W31
	0x0337A138 MOV X2, X31
	0x0337A13C BL 0x3222A1C
	0x0337A140 AND W8, W0, 0xFFFF
	0x0337A144 CMP W8, 0x78
	0x0337A148 B.NE 0x337A1B8
	0x0337A14C ADRP X22, 0x105F000
	0x0337A150 LDRB W8, [X22 + 0x762]
	0x0337A154 LDRH W21, [X21]
	0x0337A158 CBNZ W8, 0x337A170
	0x0337A15C ADRP X0, 0xDA0000
	0x0337A160 LDR X0, [X0 + 0x290]
	0x0337A164 BL 0x1C16CF4
	0x0337A168 MOVZ W8, 0x1
	0x0337A16C STRB W8, [X22 + 0x762]
	0x0337A170 MOV X0, X20
	0x0337A174 MOV X1, X31
	0x0337A178 BL 0x3225708
	0x0337A17C LDR X8, [X23]
	0x0337A180 LDR W20, [X20 + 0x10]
	0x0337A184 MOV X22, X0
	0x0337A188 LDR W9, [X8 + 0xE0]
	0x0337A18C CBNZ W9, 0x337A198
	0x0337A190 MOV X0, X8
	0x0337A194 BL 0x1C16DFC
	0x0337A198 MOV W0, W21
	0x0337A19C MOV X1, X22
	0x0337A1A0 MOV X2, X20
	0x0337A1A4 MOV X3, X19
	0x0337A1A8 LDP X20, X19, [X31 + 0x20]
	0x0337A1AC LDP X22, X21, [X31 + 0x10]
	0x0337A1B0 LDP X30, X23, [X31], #0x30
	0x0337A1B4 B 0x337A230
	0x0337A1B8 LDRH W22, [X21]
	0x0337A1BC ADRP X21, 0x105F000
	0x0337A1C0 LDRB W8, [X21 + 0x762]
	0x0337A1C4 CBNZ W8, 0x337A1DC
	0x0337A1C8 ADRP X0, 0xDA0000
	0x0337A1CC LDR X0, [X0 + 0x290]
	0x0337A1D0 BL 0x1C16CF4
	0x0337A1D4 MOVZ W8, 0x1
	0x0337A1D8 STRB W8, [X21 + 0x762]
	0x0337A1DC SXTH W21, W22
	0x0337A1E0 CBZ X20, 0x337A1FC
	0x0337A1E4 MOV X0, X20
	0x0337A1E8 MOV X1, X31
	0x0337A1EC BL 0x3225708
	0x0337A1F0 LDR W20, [X20 + 0x10]
	0x0337A1F4 MOV X22, X0
	0x0337A1F8 B 0x337A200
	0x0337A1FC MOV X22, X31
	0x0337A200 LDR X0, [X23]
	0x0337A204 LDR W8, [X0 + 0xE0]
	0x0337A208 CBNZ W8, 0x337A210
	0x0337A20C BL 0x1C16DFC
	0x0337A210 MOV W0, W21
	0x0337A214 MOV X1, X22

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X25, 0x1064000
	012 Move W8, [X25+3892]
	013 Move X24, X5
	014 Move X23, X4
	015 Move X19, X3
	016 Move X20, X2
	017 Move X22, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0xDAA000
	024 Move X0, [X0+712]
	025 Call 0x1C17CF4
	026 Move X0, 0xDAA000
	027 Move X0, [X0+40]
	028 Call 0x1C17CF4
	029 Move X0, 0xDAA000
	030 Move X0, [X0+1416]
	031 Call 0x1C17CF4
	032 Move X0, 0xDA3000
	033 Move X0, [X0+3040]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X25+3892], W8
	037 Compare W24, 0
	038 JumpIfNotEqual {58}
	039 Move X8, 0xDA3000
	040 Move X8, [X8+3040]
	041 Move X24, 0x1061000
	042 Move W9, [X24+1890]
	043 Move X23, [X8]
	044 Compare W9, 0
	045 JumpIfNotEqual {51}
	046 Move X0, 0xDA2000
	047 Move X0, [X0+656]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X24+1890], W8
	051 Compare X23, 0
	052 JumpIfEqual {75}
	053 Move X0, X23
	054 Move X1, X31
	055 Call String.GetRawStringData, X0
	056 Move W24, [X23+16]
	057 Move X23, X0
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W25, W31
	068 Move W23, W31
	069 Move W24, 1
	070 Move W26, 36
	071 Move W27, 1
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X0, 0xDA8000
	076 Move X0, [X0+3080]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X19, X0
	080 Move X0, 0xDB2000
	081 Move X0, [X0+3616]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X19
	085 Move X2, X31
	086 Call FormatException..ctor, X0, X1
	087 Move X0, 0xDB2000
	088 Move X0, [X0+3648]
	089 Call 0x1C17D08
	090 Move X1, X0
	091 Move X0, X19
	092 Call 0x1C17DEC
	093 NotImplemented "Instruction CMP not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move W24, W31
	097 Move W27, W31
	098 Move W23, 1
	099 Move W26, 68
	100 Move W25, W31
	101 Move W23, W31
	102 Move W27, W31
	103 Move W24, 1
	104 Move W26, 32
	105 Move W25, 40
	106 Move W24, W31
	107 Move W23, W31
	108 Move W27, 1
	109 Move W26, 38
	110 NotImplemented "Instruction MOVK not yet implemented."
	111 Move W24, W31
	112 Move W23, W31
	113 Move W27, 1
	114 Move W26, 38
	115 Move W25, 123
	116 NotImplemented "Instruction MOVK not yet implemented."
	117 Move W25, 123
	118 Move W24, W31
	119 Move W23, W31
	120 NotImplemented "Instruction MOVK not yet implemented."
	121 Move W27, 1
	122 Move W26, 38
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move W9, W31
	125 Move X8, 0xDAA000
	126 Move X8, [X8+712]
	127 Move X0, X22
	128 Move X1, X20
	129 Move X2, [X8]
	130 Call MemoryMarshal.GetReference, X0
	131 Move X22, X0
	132 Move TEMP, X24
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfEqual {137}
	136 NotImplemented "Instruction STRH not yet implemented."
	137 Compare W23, 0
	138 JumpIfEqual {192}
	139 Move W8, 48
	140 NotImplemented "Instruction MOVK not yet implemented."
	141 Move [X22], W8
	142 Move W8, [X21]
	143 Add X0, X22, 4
	144 NotImplemented "Instruction SBFM not yet implemented."
	145 NotImplemented "Instruction SBFM not yet implemented."
	146 Call Guid.HexsToChars, X0, X1, X2
	147 Move W2, [X21]
	148 Add X0, X22, 12
	149 NotImplemented "Instruction SBFM not yet implemented."
	150 Call Guid.HexsToChars, X0, X1, X2
	151 Move W23, 44
	152 NotImplemented "Instruction MOVK not yet implemented."
	153 Move W27, 120
	154 Move [X22+20], W23
	155 NotImplemented "Instruction STRH not yet implemented."
	156 NotImplemented "Instruction LDRSH not yet implemented."
	157 Add X0, X22, 26
	158 NotImplemented "Instruction SBFM not yet implemented."
	159 Call Guid.HexsToChars, X0, X1, X2
	160 Move [X22+34], W23
	161 NotImplemented "Instruction STRH not yet implemented."
	162 NotImplemented "Instruction LDRSH not yet implemented."
	163 Add X0, X22, 40
	164 NotImplemented "Instruction SBFM not yet implemented."
	165 Call Guid.HexsToChars, X0, X1, X2
	166 Move W8, 44
	167 NotImplemented "Instruction MOVK not yet implemented."
	168 Move [X22+48], W8
	169 Move W1, [X21+8]
	170 Move W2, [X21+9]
	171 Add X0, X22, 52
	172 Call Guid.HexsToCharsHexOutput, X0, X1, X2
	173 Move W23, 44
	174 NotImplemented "Instruction STRH not yet implemented."
	175 Move W1, [X21+10]
	176 Move W2, [X21+11]
	177 Add X0, X22, 72
	178 Call Guid.HexsToCharsHexOutput, X0, X1, X2
	179 NotImplemented "Instruction STRH not yet implemented."
	180 Move W1, [X21+12]
	181 Move W2, [X21+13]
	182 Add X0, X22, 92
	183 Call Guid.HexsToCharsHexOutput, X0, X1, X2
	184 NotImplemented "Instruction STRH not yet implemented."
	185 Move W1, [X21+14]
	186 Move W2, [X21+15]
	187 Add X0, X22, 112
	188 Call Guid.HexsToCharsHexOutput, X0, X1, X2
	189 Move W9, 125
	190 Add X8, X22, 132
	191 NotImplemented "Instruction STRH not yet implemented."
	192 Move W8, [X21]
	193 Move X0, X22
	194 NotImplemented "Instruction SBFM not yet implemented."
	195 NotImplemented "Instruction SBFM not yet implemented."
	196 Call Guid.HexsToChars, X0, X1, X2
	197 Move W2, [X21]
	198 Add X0, X22, 8
	199 NotImplemented "Instruction SBFM not yet implemented."
	200 Call Guid.HexsToChars, X0, X1, X2
	201 Compare W27, 0
	202 JumpIfEqual {206}
	203 Add X23, X22, 18
	204 Move W8, 45
	205 NotImplemented "Instruction STRH not yet implemented."
	206 Add X23, X22, 16
	207 NotImplemented "Instruction LDRSH not yet implemented."
	208 Move X0, X23
	209 NotImplemented "Instruction SBFM not yet implemented."
	210 Call Guid.HexsToChars, X0, X1, X2
	211 Compare W27, 0
	212 JumpIfEqual {216}
	213 Add X22, X23, 10
	214 Move W8, 45
	215 NotImplemented "Instruction STRH not yet implemented."
	216 Add X22, X23, 8
	217 NotImplemented "Instruction LDRSH not yet implemented."
	218 Move X0, X22
	219 NotImplemented "Instruction SBFM not yet implemented."
	220 Call Guid.HexsToChars, X0, X1, X2
	221 Compare W27, 0
	222 JumpIfEqual {226}
	223 Add X23, X22, 10
	224 Move W8, 45
	225 NotImplemented "Instruction STRH not yet implemented."
	226 Add X23, X22, 8
	227 Move W1, [X21+8]
	228 Move W2, [X21+9]
	229 Move X0, X23
	230 Call Guid.HexsToChars, X0, X1, X2
	231 Compare W27, 0
	232 JumpIfEqual {236}
	233 Add X22, X23, 10
	234 Move W8, 45
	235 NotImplemented "Instruction STRH not yet implemented."
	236 Add X22, X23, 8
	237 Move W1, [X21+10]
	238 Move W2, [X21+11]
	239 Move X0, X22
	240 Call Guid.HexsToChars, X0, X1, X2
	241 Move W1, [X21+12]
	242 Move W2, [X21+13]
	243 Add X0, X22, 8
	244 Call Guid.HexsToChars, X0, X1, X2
	245 Move W1, [X21+14]
	246 Move W2, [X21+15]
	247 Add X0, X22, 16
	248 Call Guid.HexsToChars, X0, X1, X2
	249 Add X8, X22, 24
	250 Move W9, W26
	251 Move TEMP, X24
	252 And TEMP, TEMP, 1
	253 Compare TEMP, 1
	254 JumpIfEqual {260}
	255 Move W9, W25
	256 ShiftRight W9, 16
	257 And W9, W9, 0x7FFFFFFF
	258 NotImplemented "Instruction STRH not yet implemented."
	259 Move W9, W26
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Move [X19], W9
	262 Move X20, [X31+64]
	263 Move X19, [X31+72]
	264 Move X22, [X31+48]
	265 Move X21, [X31+56]
	266 Move X24, [X31+32]
	267 Move X23, [X31+40]
	268 Move X26, [X31+16]
	269 Move X25, [X31+24]
	270 NotImplemented "Instruction CSET not yet implemented."
	271 Move X30, [X31+80]
	272 Move X27, [X31+88]
	273 Return X0

Method: System.Boolean System.ISpanFormattable.TryFormat(System.Span`1<System.Char> destination, out System.Int32 charsWritten, System.ReadOnlySpan`1<System.Char> format, System.IFormatProvider provider)

Disassembly:
	0x0337A218 MOV X2, X20

ISIL:
	001 Call Guid.TryFormat, X0, X1, X2, X3
	002 Return X0

