Type: System.Memory`1

Method: System.Void .ctor(T[] array)

Disassembly:
	0x0319EB10 STRB W8, [X24 + 0xE0B]
	0x0319EB14 LDR X0, [X23 + 0x20]
	0x0319EB18 LDRB W8, [X0 + 0x135]
	0x0319EB1C TBNZ X8, 0x0, 0x319EB24
	0x0319EB20 BL 0x1C5C684
	0x0319EB24 LDR X8, [X0 + 0xC0]
	0x0319EB28 LDR X8, [X8 + 0x10]
	0x0319EB2C LDR W25, [X8 + 0xFC]

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {8}
	003 Move [X0], X1
	004 Move [X0+8], W31
	005 Move X8, [X1+24]
	006 Move [X0+12], W8
	007 Return 
	008 Move [X0], X31
	009 Move [X0+8], X31
	010 Return 

Method: System.Void .ctor(T[] array, System.Int32 start, System.Int32 length)

Disassembly:
	0x0319EB30 ADD X8, X31, 0x0
	0x0319EB34 ADD X9, X25, 0xF
	0x0319EB38 AND X9, X9, 0x1FFFFFFFF
	0x0319EB3C SUB X24, X8, X9
	0x0319EB40 ADD X31, X24, 0x0
	0x0319EB44 ADD X8, X31, 0x0
	0x0319EB48 SUB X26, X8, X9
	0x0319EB4C ADD X31, X26, 0x0
	0x0319EB50 MOV X0, X26
	0x0319EB54 MOV W1, W31
	0x0319EB58 MOV X2, X25
	0x0319EB5C BL 0x3EB1B10
	0x0319EB60 CBZ X22, 0x319EC40
	0x0319EB64 MOV X0, X26
	0x0319EB68 MOV W1, W31
	0x0319EB6C MOV X2, X25
	0x0319EB70 BL 0x3EB1B10
	0x0319EB74 MOV X0, X24
	0x0319EB78 MOV X1, X26
	0x0319EB7C MOV X2, X25
	0x0319EB80 BL 0x3EB1AC0
	0x0319EB84 LDR X0, [X23 + 0x20]
	0x0319EB88 LDRB W8, [X0 + 0x135]
	0x0319EB8C TBNZ X8, 0x0, 0x319EB94
	0x0319EB90 BL 0x1C5C684
	0x0319EB94 LDR X8, [X0 + 0xC0]
	0x0319EB98 MOV X1, X24

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W20, W3
	007 Move W21, W2
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfEqual {20}
	011 Move W8, [X1+24]
	012 Move X22, X1
	013 Subtract W8, W8, W21
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X0, X31
	016 Call ThrowHelper.ThrowArgumentOutOfRangeException
	017 Move [X19], X22
	018 Move [X19+8], W21
	019 Move [X19+12], W20
	020 Or W8, W20, W21
	021 Compare W8, 0
	022 JumpIfEqual {25}
	023 Move X0, X31
	024 Call ThrowHelper.ThrowArgumentOutOfRangeException
	025 Move [X19], X31
	026 Move [X19+8], X31
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move X30, [X31+48]
	032 Return 

Method: System.Void .ctor(System.Object obj, System.Int32 start, System.Int32 length)

Disassembly:
	0x0319EB9C LDR X0, [X8 + 0x10]
	0x0319EBA0 BL 0x1C16ED4
	0x0319EBA4 TBNZ X0, 0x0, 0x319EC18

ISIL:
	001 Move [X0], X1
	002 Move [X0+8], W2
	003 Move [X0+12], W3
	004 Return 

Method: System.Memory`1<T> op_Implicit(T[] array)

Disassembly:
	0x0319EBA8 MOV X0, X22
	0x0319EBAC MOV X1, X31
	0x0319EBB0 BL 0x33BE520
	0x0319EBB4 LDR X8, [X23 + 0x20]
	0x0319EBB8 MOV X23, X0
	0x0319EBBC LDRB W9, [X8 + 0x135]
	0x0319EBC0 TBNZ X9, 0x0, 0x319EBD0
	0x0319EBC4 MOV X0, X8
	0x0319EBC8 BL 0x1C5C684
	0x0319EBCC MOV X8, X0
	0x0319EBD0 ADRP X9, 0xF55000
	0x0319EBD4 LDR X9, [X9 + 0x6C0]
	0x0319EBD8 LDR X8, [X8 + 0xC0]
	0x0319EBDC LDR X0, [X9]
	0x0319EBE0 LDR X24, [X8 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+32]
	004 Move X19, X0
	005 Move W9, [X8+309]
	006 Move TEMP, X9
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {12}
	010 Move X0, X8
	011 Call 0x1C5D684
	012 Compare X19, 0
	013 JumpIfEqual {18}
	014 Move X8, [X19+24]
	015 Move X1, X8
	016 ShiftRight X1, 32
	017 And X1, X1, 0x7FFFFFFF
	018 Move X1, X31
	019 Move X0, X19
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Return X0

Method: System.Memory`1<T> op_Implicit(System.ArraySegment`1<T> segment)

Disassembly:
	0x0319EBE4 LDR W9, [X0 + 0xE0]
	0x0319EBE8 CBNZ W9, 0x319EBF0
	0x0319EBEC BL 0x1C16DFC
	0x0319EBF0 MOV X0, X24
	0x0319EBF4 MOV X1, X31
	0x0319EBF8 BL 0x338C698
	0x0319EBFC MOV X1, X0
	0x0319EC00 MOV X0, X23
	0x0319EC04 MOV X2, X31
	0x0319EC08 BL 0x3395F0C
	0x0319EC0C TBZ X0, 0x0, 0x319EC18
	0x0319EC10 MOV X0, X31
	0x0319EC14 BL 0x339D56C
	0x0319EC18 LDR W8, [X22 + 0x18]
	0x0319EC1C SUBS W8, W8, W21
	0x0319EC20 B.CC 0x319EC2C
	0x0319EC24 CMP W8, W20
	0x0319EC28 B.CS 0x319EC34
	0x0319EC2C MOV X0, X31
	0x0319EC30 BL 0x339D6EC
	0x0319EC34 STR X22, [X19]
	0x0319EC38 STP W21, W20, [X19 + 0x8]
	0x0319EC3C B 0x319EC54
	0x0319EC40 ORR W8, W20, W21, 0x0
	0x0319EC44 CBZ W8, 0x319EC50
	0x0319EC48 MOV X0, X31
	0x0319EC4C BL 0x339D6EC
	0x0319EC50 STP X31, X31, [X19]
	0x0319EC54 LDR X8, [X27 + 0x28]
	0x0319EC58 LDUR X9, [X29 - 0x8]
	0x0319EC5C CMP X8, X9
	0x0319EC60 B.NE 0x319EC84
	0x0319EC64 ADD X31, X29, 0x0
	0x0319EC68 LDP X20, X19, [X31 + 0x50]
	0x0319EC6C LDP X22, X21, [X31 + 0x40]
	0x0319EC70 LDP X24, X23, [X31 + 0x30]
	0x0319EC74 LDP X26, X25, [X31 + 0x20]
	0x0319EC78 LDR X27, [X31 + 0x10]
	0x0319EC7C LDP X29, X30, [X31], #0x60
	0x0319EC80 RET
	0x0319EC84 BL 0x3EB1B20
	0x0319EC88 STR X1, [X0]
	0x0319EC8C STP W2, W3, [X0 + 0x8]
	0x0319EC90 RET
	0x0319EC94 SUB X31, X31, 0x20
	0x0319EC98 STP X30, X19, [X31 + 0x10]
	0x0319EC9C STP X31, X31, [X31]
	0x0319ECA0 LDR X8, [X1 + 0x20]
	0x0319ECA4 MOV X19, X0
	0x0319ECA8 LDRB W9, [X8 + 0x135]
	0x0319ECAC TBNZ X9, 0x0, 0x319ECBC
	0x0319ECB0 MOV X0, X8
	0x0319ECB4 BL 0x1C5C684
	0x0319ECB8 MOV X8, X0
	0x0319ECBC LDR X8, [X8 + 0xC0]
	0x0319ECC0 ADD X0, X31, 0x0
	0x0319ECC4 MOV X1, X19
	0x0319ECC8 LDR X2, [X8 + 0x20]
	0x0319ECCC BL 0x31A8680
	0x0319ECD0 LDP X0, X1, [X31]
	0x0319ECD4 LDP X30, X19, [X31 + 0x10]
	0x0319ECD8 ADD X31, X31, 0x20
	0x0319ECDC RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X21, X2
	007 Move X20, X1
	008 Move X19, X0
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X8, [X8+192]
	018 Move X0, [X8+56]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, [X21+32]
	030 Add X8, X0, 309
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {59}
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {67}
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {75}
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {49}
	048 Call 0x1C5D684
	049 Move X8, X20
	050 ShiftRight X8, 32
	051 And X8, X8, 0x7FFFFFFF
	052 Compare X19, 0
	053 JumpIfEqual {83}
	054 Move W9, [X19+24]
	055 Subtract W9, W9, W20
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, X31
	058 Call ThrowHelper.ThrowArgumentOutOfRangeException
	059 Call 0x1C5D684
	060 Move X0, [X21+32]
	061 Add X8, X0, 309
	062 NotImplemented "Instruction LDRH not yet implemented."
	063 Move TEMP, X8
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {40}
	067 Call 0x1C5D684
	068 Move X0, [X21+32]
	069 Add X8, X0, 309
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Move TEMP, X8
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {44}
	075 Call 0x1C5D684
	076 Move X0, [X21+32]
	077 Add X8, X0, 309
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 Move TEMP, X8
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {48}
	083 Or W8, W8, W20
	084 Compare W8, 0
	085 JumpIfEqual {88}
	086 Move X0, X31
	087 Call ThrowHelper.ThrowArgumentOutOfRangeException
	088 Move X20, X31
	089 Move X0, X19
	090 Move X1, X20
	091 Move X20, [X31+16]
	092 Move X19, [X31+24]
	093 Move X30, [X31+32]
	094 Move X21, [X31+40]
	095 Return X0

Method: System.ReadOnlyMemory`1<T> op_Implicit(System.Memory`1<T> memory)

Disassembly:
	0x0319ECE0 SUB X31, X31, 0x50

ISIL:
	001 Return X0

Method: System.Memory`1<T> get_Empty()

Disassembly:
	0x0319ECE4 STR X30, [X31 + 0x20]
	0x0319ECE8 STP X22, X21, [X31 + 0x30]
	0x0319ECEC STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move X0, X31
	002 Move X1, X31
	003 Return X0

Method: System.Int32 get_Length()

Disassembly:
	0x0319ECF0 STP X0, X1, [X31]
	0x0319ECF4 LDR X0, [X2 + 0x20]
	0x0319ECF8 MOV X19, X2

ISIL:
	001 Move W8, [X0+12]
	002 And W0, W8, 0x7FFFFFFF
	003 Return X0

Method: System.String ToString()

Disassembly:
	0x0319ECFC LDRB W8, [X0 + 0x135]
	0x0319ED00 TBNZ X8, 0x0, 0x319ED08
	0x0319ED04 BL 0x1C5C684
	0x0319ED08 LDR X8, [X0 + 0xC0]
	0x0319ED0C LDR X0, [X8 + 0x38]
	0x0319ED10 LDRB W8, [X0 + 0x135]
	0x0319ED14 TBNZ X8, 0x0, 0x319ED1C
	0x0319ED18 BL 0x1C5C684
	0x0319ED1C LDR W8, [X0 + 0xE0]
	0x0319ED20 CBNZ W8, 0x319ED28
	0x0319ED24 BL 0x1C16DFC
	0x0319ED28 LDR X8, [X19 + 0x20]
	0x0319ED2C ADD X9, X8, 0x135
	0x0319ED30 LDRH W9, [X9]
	0x0319ED34 TBNZ X9, 0x0, 0x319ED50
	0x0319ED38 MOV X0, X8
	0x0319ED3C BL 0x1C5C684
	0x0319ED40 LDR X8, [X19 + 0x20]
	0x0319ED44 ADD X9, X8, 0x135
	0x0319ED48 LDRH W9, [X9]
	0x0319ED4C B 0x319ED54
	0x0319ED50 MOV X0, X8
	0x0319ED54 LDR X10, [X0 + 0xC0]
	0x0319ED58 LDR X10, [X10 + 0x30]
	0x0319ED5C LDR X20, [X10]
	0x0319ED60 TBNZ X9, 0x0, 0x319ED70
	0x0319ED64 MOV X0, X8
	0x0319ED68 BL 0x1C5C684
	0x0319ED6C MOV X8, X0
	0x0319ED70 LDR X8, [X8 + 0xC0]
	0x0319ED74 ADD X0, X31, 0x0
	0x0319ED78 LDR X1, [X8 + 0x30]
	0x0319ED7C BLR X20
	0x0319ED80 LDR X8, [X19 + 0x20]
	0x0319ED84 MOV X20, X0
	0x0319ED88 ADD X9, X8, 0x135
	0x0319ED8C LDRH W9, [X9]
	0x0319ED90 TBNZ X9, 0x0, 0x319EDAC
	0x0319ED94 MOV X0, X8
	0x0319ED98 BL 0x1C5C684
	0x0319ED9C LDR X8, [X19 + 0x20]
	0x0319EDA0 ADD X9, X8, 0x135
	0x0319EDA4 LDRH W9, [X9]
	0x0319EDA8 B 0x319EDB0
	0x0319EDAC MOV X0, X8
	0x0319EDB0 LDR X10, [X0 + 0xC0]
	0x0319EDB4 LDR X10, [X10 + 0x40]
	0x0319EDB8 LDR X21, [X10]
	0x0319EDBC TBNZ X9, 0x0, 0x319EDCC
	0x0319EDC0 MOV X0, X8
	0x0319EDC4 BL 0x1C5C684
	0x0319EDC8 MOV X8, X0
	0x0319EDCC LDR X8, [X8 + 0xC0]
	0x0319EDD0 ADD X0, X31, 0x0
	0x0319EDD4 LDR X1, [X8 + 0x40]
	0x0319EDD8 BLR X21
	0x0319EDDC LDR X8, [X19 + 0x20]
	0x0319EDE0 MOV W21, W0
	0x0319EDE4 ADD X9, X8, 0x135
	0x0319EDE8 LDRH W9, [X9]
	0x0319EDEC TBNZ X9, 0x0, 0x319EE08
	0x0319EDF0 MOV X0, X8
	0x0319EDF4 BL 0x1C5C684
	0x0319EDF8 LDR X8, [X19 + 0x20]
	0x0319EDFC ADD X9, X8, 0x135
	0x0319EE00 LDRH W9, [X9]
	0x0319EE04 B 0x319EE0C
	0x0319EE08 MOV X0, X8
	0x0319EE0C LDR X10, [X0 + 0xC0]
	0x0319EE10 LDR X10, [X10 + 0x48]
	0x0319EE14 LDR X22, [X10]
	0x0319EE18 TBNZ X9, 0x0, 0x319EE28
	0x0319EE1C MOV X0, X8
	0x0319EE20 BL 0x1C5C684
	0x0319EE24 MOV X8, X0
	0x0319EE28 LDR X8, [X8 + 0xC0]
	0x0319EE2C ADD X0, X31, 0x0
	0x0319EE30 LDR X1, [X8 + 0x48]
	0x0319EE34 BLR X22
	0x0319EE38 STP X31, X31, [X31 + 0x10]
	0x0319EE3C LDR X8, [X19 + 0x20]
	0x0319EE40 MOV W19, W0
	0x0319EE44 LDRB W9, [X8 + 0x135]
	0x0319EE48 TBNZ X9, 0x0, 0x319EE58
	0x0319EE4C MOV X0, X8
	0x0319EE50 BL 0x1C5C684
	0x0319EE54 MOV X8, X0
	0x0319EE58 LDR X8, [X8 + 0xC0]
	0x0319EE5C ADD X0, X31, 0x10
	0x0319EE60 MOV X1, X20
	0x0319EE64 MOV W2, W21
	0x0319EE68 LDR X4, [X8 + 0x50]
	0x0319EE6C MOV W3, W19
	0x0319EE70 BL 0x31A8820
	0x0319EE74 LDP X0, X1, [X31 + 0x10]
	0x0319EE78 LDP X20, X19, [X31 + 0x40]
	0x0319EE7C LDP X22, X21, [X31 + 0x30]
	0x0319EE80 LDR X30, [X31 + 0x20]
	0x0319EE84 ADD X31, X31, 0x50
	0x0319EE88 RET
	0x0319EE8C RET
	0x0319EE90 MOV X0, X31
	0x0319EE94 MOV X1, X31
	0x0319EE98 RET
	0x0319EE9C LDR W8, [X0 + 0xC]
	0x0319EEA0 AND W0, W8, 0x7FFFFFFF
	0x0319EEA4 RET
	0x0319EEA8 SUB X31, X31, 0x50
	0x0319EEAC STP X30, X23, [X31 + 0x20]
	0x0319EEB0 STP X22, X21, [X31 + 0x30]
	0x0319EEB4 STP X20, X19, [X31 + 0x40]
	0x0319EEB8 ADRP X21, 0x123D000
	0x0319EEBC LDRB W8, [X21 + 0xE0C]
	0x0319EEC0 MOV X20, X1
	0x0319EEC4 MOV X19, X0
	0x0319EEC8 TBNZ X8, 0x0, 0x319EF10
	0x0319EECC ADRP X0, 0xF7C000
	0x0319EED0 LDR X0, [X0 + 0xD70]
	0x0319EED4 BL 0x1C16CF4
	0x0319EED8 ADRP X0, 0xF55000
	0x0319EEDC LDR X0, [X0 + 0x758]
	0x0319EEE0 BL 0x1C16CF4
	0x0319EEE4 ADRP X0, 0xF57000
	0x0319EEE8 LDR X0, [X0 + 0x278]
	0x0319EEEC BL 0x1C16CF4
	0x0319EEF0 ADRP X0, 0xF55000
	0x0319EEF4 LDR X0, [X0 + 0x6C0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X21, 0x123E000
	009 Move W8, [X21+3591]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0xF7D000
	017 Move X0, [X0+3440]
	018 Call 0x1C17CF4
	019 Move X0, 0xF56000
	020 Move X0, [X0+1880]
	021 Call 0x1C17CF4
	022 Move X0, 0xF58000
	023 Move X0, [X0+632]
	024 Call 0x1C17CF4
	025 Move X0, 0xF56000
	026 Move X0, [X0+1728]
	027 Call 0x1C17CF4
	028 Move X0, 0xF82000
	029 Move X0, [X0+536]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+3591], W8
	033 Move [X31+16], X31
	034 Move [X31+24], X31
	035 Move X0, [X20+32]
	036 Move X22, 0xF56000
	037 Move W8, [X0+309]
	038 Move X22, [X22+1728]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Call 0x1C5D684
	044 Move X8, [X22]
	045 Move X9, [X0+192]
	046 Move X23, 0xF7D000
	047 Move W10, [X8+224]
	048 Move X21, [X9+112]
	049 Move X23, [X23+3440]
	050 Compare W10, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move X0, X21
	055 Move X1, X31
	056 Call Type.GetTypeFromHandle, X0
	057 Move X8, [X23]
	058 Move X21, X0
	059 Move X1, X31
	060 Move X0, X8
	061 Call Type.GetTypeFromHandle, X0
	062 Move X1, X0
	063 Move X0, X21
	064 Move X2, X31
	065 Call Type.op_Equality, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {102}
	070 Move X0, [X19]
	071 Compare X0, 0
	072 JumpIfEqual {78}
	073 Move X8, 0xF58000
	074 Move X8, [X8+632]
	075 Move X9, [X0]
	076 Move X8, [X8]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, [X20+32]
	079 Move W8, [X0+309]
	080 Move TEMP, X8
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {85}
	084 Call 0x1C5D684
	085 Move X8, [X0+192]
	086 Move X0, X19
	087 Move X1, [X8+120]
	088 Call 0x2985784
	089 Move [X31+16], X0
	090 Move [X31+24], X1
	091 Move X0, [X20+32]
	092 Move W8, [X0+309]
	093 Move TEMP, X8
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {98}
	097 Call 0x1C5D684
	098 Move X8, [X0+192]
	099 Add X0, X31, 16
	100 Move X1, [X8+144]
	101 Call 0x25FC0D4, X0
	102 Move X0, [X20+32]
	103 Move W8, [X0+309]
	104 Move TEMP, X8
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfEqual {109}
	108 Call 0x1C5D684
	109 Move X8, [X22]
	110 Move X9, [X0+192]
	111 Move W10, [X8+224]
	112 Move X20, [X9+112]
	113 Compare W10, 0
	114 JumpIfNotEqual {117}
	115 Move X0, X8
	116 Call 0x1C17DFC
	117 Move X0, X20
	118 Move X1, X31
	119 Call Type.GetTypeFromHandle, X0
	120 Compare X0, 0
	121 JumpIfEqual {156}
	122 Move X8, [X0]
	123 Move X9, [X8+424]
	124 Move X1, [X8+432]
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Move X9, 0xF56000
	127 Move W8, [X19+12]
	128 Move X9, [X9+1880]
	129 Move X20, X0
	130 Add X1, X31, 12
	131 And W8, W8, 0x7FFFFFFF
	132 Move X0, [X9]
	133 Move [X31+12], W8
	134 Call 0x1C17E04
	135 Move X8, 0xF82000
	136 Move X8, [X8+536]
	137 Move X2, X0
	138 Move X1, X20
	139 Move X3, X31
	140 Move X8, [X8]
	141 Move X0, X8
	142 Call String.Format, X0, X1, X2
	143 Move X20, [X31+64]
	144 Move X19, [X31+72]
	145 Move X22, [X31+48]
	146 Move X21, [X31+56]
	147 Move X30, [X31+32]
	148 Move X23, [X31+40]
	149 Add X31, X31, 80
	150 Return X0
	151 Move W1, [X19+8]
	152 Move W8, [X19+12]
	153 Move X3, X31
	154 And W2, W8, 0x7FFFFFFF
	155 Call String.Substring, X0, X1, X2
	156 Call 0x1C17F20

Method: System.Memory`1<T> Slice(System.Int32 start, System.Int32 length)

Disassembly:
	0x0319EEF8 BL 0x1C16CF4
	0x0319EEFC ADRP X0, 0xF81000
	0x0319EF00 LDR X0, [X0 + 0x218]
	0x0319EF04 BL 0x1C16CF4
	0x0319EF08 MOVZ W8, 0x1
	0x0319EF0C STRB W8, [X21 + 0xE0C]
	0x0319EF10 STP X31, X31, [X31 + 0x10]
	0x0319EF14 LDR X0, [X20 + 0x20]
	0x0319EF18 ADRP X22, 0xF55000
	0x0319EF1C LDRB W8, [X0 + 0x135]
	0x0319EF20 LDR X22, [X22 + 0x6C0]
	0x0319EF24 TBNZ X8, 0x0, 0x319EF2C
	0x0319EF28 BL 0x1C5C684
	0x0319EF2C LDR X8, [X22]
	0x0319EF30 LDR X9, [X0 + 0xC0]
	0x0319EF34 ADRP X23, 0xF7C000
	0x0319EF38 LDR W10, [X8 + 0xE0]
	0x0319EF3C LDR X21, [X9 + 0x70]
	0x0319EF40 LDR X23, [X23 + 0xD70]
	0x0319EF44 CBNZ W10, 0x319EF50
	0x0319EF48 MOV X0, X8
	0x0319EF4C BL 0x1C16DFC
	0x0319EF50 MOV X0, X21
	0x0319EF54 MOV X1, X31
	0x0319EF58 BL 0x338C698
	0x0319EF5C LDR X8, [X23]
	0x0319EF60 MOV X21, X0
	0x0319EF64 MOV X1, X31
	0x0319EF68 MOV X0, X8
	0x0319EF6C BL 0x338C698

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W23, [X0+12]
	008 Move X21, X3
	009 Move W19, W1
	010 Move X22, X0
	011 And W8, W23, 0x7FFFFFFF
	012 Subtract W8, W8, W1
	013 Move W20, W2
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X0, X31
	016 Call ThrowHelper.ThrowArgumentOutOfRangeException
	017 Move X0, [X21+32]
	018 Move X21, [X22]
	019 Move W22, [X22+8]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 And W8, W23, 0x80000000
	027 Or W8, W8, W20
	028 Add W1, W22, W19
	029 Move X0, X21
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 NotImplemented "Instruction BFM not yet implemented."
	035 Move X30, [X31+48]
	036 Move X23, [X31+56]
	037 Return X0

Method: System.Span`1<T> get_Span()

Disassembly:
	0x0319EF70 MOV X1, X0
	0x0319EF74 MOV X0, X21
	0x0319EF78 MOV X2, X31
	0x0319EF7C BL 0x3395194
	0x0319EF80 TBZ X0, 0x0, 0x319EFCC
	0x0319EF84 LDR X0, [X19]
	0x0319EF88 CBZ X0, 0x319EFA4
	0x0319EF8C ADRP X8, 0xF57000
	0x0319EF90 LDR X8, [X8 + 0x278]
	0x0319EF94 LDR X9, [X0]
	0x0319EF98 LDR X8, [X8]
	0x0319EF9C CMP X9, X8
	0x0319EFA0 B.EQ 0x319F0B4
	0x0319EFA4 LDR X8, [X20 + 0x20]
	0x0319EFA8 ADD X9, X8, 0x135
	0x0319EFAC LDRH W9, [X9]
	0x0319EFB0 TBNZ X9, 0x0, 0x319F05C
	0x0319EFB4 MOV X0, X8
	0x0319EFB8 BL 0x1C5C684
	0x0319EFBC LDR X8, [X20 + 0x20]
	0x0319EFC0 ADD X9, X8, 0x135
	0x0319EFC4 LDRH W9, [X9]
	0x0319EFC8 B 0x319F060
	0x0319EFCC LDR X0, [X20 + 0x20]
	0x0319EFD0 LDRB W8, [X0 + 0x135]
	0x0319EFD4 TBNZ X8, 0x0, 0x319EFDC
	0x0319EFD8 BL 0x1C5C684
	0x0319EFDC LDR X8, [X22]
	0x0319EFE0 LDR X9, [X0 + 0xC0]
	0x0319EFE4 LDR W10, [X8 + 0xE0]
	0x0319EFE8 LDR X20, [X9 + 0x70]
	0x0319EFEC CBNZ W10, 0x319EFF8
	0x0319EFF0 MOV X0, X8
	0x0319EFF4 BL 0x1C16DFC
	0x0319EFF8 MOV X0, X20
	0x0319EFFC MOV X1, X31
	0x0319F000 BL 0x338C698
	0x0319F004 CBZ X0, 0x319F0D8
	0x0319F008 LDR X8, [X0]
	0x0319F00C LDP X9, X1, [X8 + 0x1A8]
	0x0319F010 BLR X9
	0x0319F014 ADRP X9, 0xF54000
	0x0319F018 LDR W8, [X19 + 0xC]
	0x0319F01C LDR X9, [X9 + 0x758]
	0x0319F020 MOV X20, X0
	0x0319F024 ADD X1, X31, 0xC
	0x0319F028 AND W8, W8, 0x7FFFFFFF
	0x0319F02C LDR X0, [X9]
	0x0319F030 STR W8, [X31 + 0xC]
	0x0319F034 BL 0x1C16E04
	0x0319F038 ADRP X8, 0xF80000
	0x0319F03C LDR X8, [X8 + 0x218]
	0x0319F040 MOV X2, X0
	0x0319F044 MOV X1, X20
	0x0319F048 MOV X3, X31
	0x0319F04C LDR X8, [X8]
	0x0319F050 MOV X0, X8
	0x0319F054 BL 0x3227BD4
	0x0319F058 B 0x319F0C4
	0x0319F05C MOV X0, X8
	0x0319F060 LDR X10, [X0 + 0xC0]
	0x0319F064 LDR X10, [X10 + 0x78]
	0x0319F068 LDR X21, [X10]
	0x0319F06C TBNZ X9, 0x0, 0x319F07C
	0x0319F070 MOV X0, X8
	0x0319F074 BL 0x1C5C684
	0x0319F078 MOV X8, X0
	0x0319F07C LDR X8, [X8 + 0xC0]
	0x0319F080 MOV X0, X19
	0x0319F084 LDR X1, [X8 + 0x78]
	0x0319F088 BLR X21
	0x0319F08C STP X0, X1, [X31 + 0x10]
	0x0319F090 LDR X0, [X20 + 0x20]
	0x0319F094 LDRB W8, [X0 + 0x135]
	0x0319F098 TBNZ X8, 0x0, 0x319F0A0
	0x0319F09C BL 0x1C5C684
	0x0319F0A0 LDR X8, [X0 + 0xC0]
	0x0319F0A4 ADD X0, X31, 0x10
	0x0319F0A8 LDR X1, [X8 + 0x90]
	0x0319F0AC BL 0x25FE9D8
	0x0319F0B0 B 0x319F0C4
	0x0319F0B4 LDP W1, W8, [X19 + 0x8]
	0x0319F0B8 MOV X3, X31
	0x0319F0BC AND W2, W8, 0x7FFFFFFF
	0x0319F0C0 BL 0x3228DE4
	0x0319F0C4 LDP X20, X19, [X31 + 0x40]
	0x0319F0C8 LDP X22, X21, [X31 + 0x30]
	0x0319F0CC LDP X30, X23, [X31 + 0x20]
	0x0319F0D0 ADD X31, X31, 0x50
	0x0319F0D4 RET
	0x0319F0D8 BL 0x1C16F20
	0x0319F0DC STP X30, X23, [X31 - 0x30]!
	0x0319F0E0 STP X22, X21, [X31 + 0x10]
	0x0319F0E4 STP X20, X19, [X31 + 0x20]
	0x0319F0E8 LDR W23, [X0 + 0xC]
	0x0319F0EC MOV X21, X3
	0x0319F0F0 MOV W19, W1
	0x0319F0F4 MOV X22, X0
	0x0319F0F8 AND W8, W23, 0x7FFFFFFF
	0x0319F0FC SUBS W8, W8, W1
	0x0319F100 MOV W20, W2
	0x0319F104 B.CC 0x319F110
	0x0319F108 CMP W8, W20
	0x0319F10C B.CS 0x319F118
	0x0319F110 MOV X0, X31
	0x0319F114 BL 0x339D6EC
	0x0319F118 LDR X0, [X21 + 0x20]
	0x0319F11C LDR X21, [X22]
	0x0319F120 LDR W22, [X22 + 0x8]
	0x0319F124 LDRB W8, [X0 + 0x135]
	0x0319F128 TBNZ X8, 0x0, 0x319F130
	0x0319F12C BL 0x1C5C684
	0x0319F130 AND W8, W23, 0x80000000
	0x0319F134 ORR W8, W8, W20, 0x0
	0x0319F138 ADD W1, W22, W19
	0x0319F13C MOV X0, X21
	0x0319F140 LDP X20, X19, [X31 + 0x20]
	0x0319F144 LDP X22, X21, [X31 + 0x10]
	0x0319F148 BFM X1, X8, 0x20, 0x1F
	0x0319F14C LDP X30, X23, [X31], #0x30
	0x0319F150 RET
	0x0319F154 SUB X31, X31, 0x60
	0x0319F158 STR X30, [X31 + 0x20]
	0x0319F15C STP X24, X23, [X31 + 0x30]
	0x0319F160 STP X22, X21, [X31 + 0x40]
	0x0319F164 STP X20, X19, [X31 + 0x50]
	0x0319F168 ADRP X21, 0x123C000
	0x0319F16C LDRB W8, [X21 + 0xE0D]
	0x0319F170 MOV X19, X1
	0x0319F174 MOV X20, X0
	0x0319F178 TBNZ X8, 0x0, 0x319F1A8
	0x0319F17C ADRP X0, 0xF7B000
	0x0319F180 LDR X0, [X0 + 0xD70]
	0x0319F184 BL 0x1C16CF4
	0x0319F188 ADRP X0, 0xF56000
	0x0319F18C LDR X0, [X0 + 0x278]
	0x0319F190 BL 0x1C16CF4
	0x0319F194 ADRP X0, 0xF54000
	0x0319F198 LDR X0, [X0 + 0x6C0]
	0x0319F19C BL 0x1C16CF4
	0x0319F1A0 MOVZ W8, 0x1
	0x0319F1A4 STRB W8, [X21 + 0xE0D]
	0x0319F1A8 STP X31, X31, [X31]
	0x0319F1AC LDR W8, [X20 + 0x8]
	0x0319F1B0 TBNZ X8, 0x1F, 0x319F2A4
	0x0319F1B4 LDR X0, [X19 + 0x20]
	0x0319F1B8 ADRP X21, 0xF54000
	0x0319F1BC LDRB W8, [X0 + 0x135]
	0x0319F1C0 LDR X21, [X21 + 0x6C0]
	0x0319F1C4 TBNZ X8, 0x0, 0x319F1CC
	0x0319F1C8 BL 0x1C5C684
	0x0319F1CC LDR X8, [X21]
	0x0319F1D0 LDR X9, [X0 + 0xC0]
	0x0319F1D4 ADRP X22, 0xF7B000
	0x0319F1D8 LDR W10, [X8 + 0xE0]
	0x0319F1DC LDR X21, [X9 + 0x70]
	0x0319F1E0 LDR X22, [X22 + 0xD70]
	0x0319F1E4 CBNZ W10, 0x319F1F0
	0x0319F1E8 MOV X0, X8
	0x0319F1EC BL 0x1C16DFC
	0x0319F1F0 MOV X0, X21
	0x0319F1F4 MOV X1, X31
	0x0319F1F8 BL 0x338C698
	0x0319F1FC LDR X8, [X22]
	0x0319F200 MOV X21, X0
	0x0319F204 MOV X1, X31
	0x0319F208 MOV X0, X8
	0x0319F20C BL 0x338C698
	0x0319F210 MOV X1, X0
	0x0319F214 MOV X0, X21
	0x0319F218 MOV X2, X31
	0x0319F21C BL 0x3395194
	0x0319F220 LDR X21, [X20]
	0x0319F224 TBZ X0, 0x0, 0x319F390
	0x0319F228 CBZ X21, 0x319F410
	0x0319F22C ADRP X8, 0xF56000
	0x0319F230 LDR X8, [X8 + 0x278]
	0x0319F234 LDR X9, [X21]
	0x0319F238 LDR X8, [X8]
	0x0319F23C CMP X9, X8
	0x0319F240 B.NE 0x319F394
	0x0319F244 MOV X0, X21
	0x0319F248 MOV X1, X31
	0x0319F24C BL 0x3225708
	0x0319F250 LDR X8, [X19 + 0x20]
	0x0319F254 LDR W22, [X21 + 0x10]
	0x0319F258 MOV X21, X0
	0x0319F25C ADD X9, X8, 0x135
	0x0319F260 LDRH W9, [X9]
	0x0319F264 TBNZ X9, 0x0, 0x319F27C
	0x0319F268 MOV X0, X8
	0x0319F26C BL 0x1C5C684
	0x0319F270 LDR X8, [X19 + 0x20]
	0x0319F274 ADD X9, X8, 0x135
	0x0319F278 LDRH W9, [X9]
	0x0319F27C STR X21, [X31]
	0x0319F280 STP W22, W31, [X31 + 0x8]
	0x0319F284 LDP W21, W20, [X20 + 0x8]
	0x0319F288 TBNZ X9, 0x0, 0x319F474
	0x0319F28C MOV X0, X8
	0x0319F290 BL 0x1C5C684
	0x0319F294 LDR X8, [X19 + 0x20]
	0x0319F298 ADD X9, X8, 0x135
	0x0319F29C LDRH W9, [X9]
	0x0319F2A0 B 0x319F478
	0x0319F2A4 LDR X0, [X19 + 0x20]
	0x0319F2A8 LDR X21, [X20]
	0x0319F2AC LDRB W8, [X0 + 0x135]
	0x0319F2B0 TBNZ X8, 0x0, 0x319F2B8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x123E000
	009 Move W8, [X21+3592]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xF7D000
	017 Move X0, [X0+3440]
	018 Call 0x1C17CF4
	019 Move X0, 0xF58000
	020 Move X0, [X0+632]
	021 Call 0x1C17CF4
	022 Move X0, 0xF56000
	023 Move X0, [X0+1728]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3592], W8
	027 Move W8, [X20+8]
	028 Move TEMP, X8
	029 And TEMP, TEMP, -2147483648
	030 Compare TEMP, -2147483648
	031 JumpIfEqual {116}
	032 Move X0, [X19+32]
	033 Move X21, 0xF56000
	034 Move W8, [X0+309]
	035 Move X21, [X21+1728]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {41}
	040 Call 0x1C5D684
	041 Move X8, [X21]
	042 Move X9, [X0+192]
	043 Move X22, 0xF7D000
	044 Move W10, [X8+224]
	045 Move X21, [X9+112]
	046 Move X22, [X22+3440]
	047 Compare W10, 0
	048 JumpIfNotEqual {51}
	049 Move X0, X8
	050 Call 0x1C17DFC
	051 Move X0, X21
	052 Move X1, X31
	053 Call Type.GetTypeFromHandle, X0
	054 Move X8, [X22]
	055 Move X21, X0
	056 Move X1, X31
	057 Move X0, X8
	058 Call Type.GetTypeFromHandle, X0
	059 Move X1, X0
	060 Move X0, X21
	061 Move X2, X31
	062 Call Type.op_Equality, X0, X1
	063 Move X21, [X20]
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {199}
	068 Compare X21, 0
	069 JumpIfEqual {242}
	070 Move X8, 0xF57000
	071 Move X8, [X8+632]
	072 Move X9, [X21]
	073 Move X8, [X8]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X0, X21
	076 Move X1, X31
	077 Call String.GetRawStringData, X0
	078 Move X8, [X19+32]
	079 Move W23, [X21+16]
	080 Move X21, X0
	081 Add X9, X8, 309
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Move TEMP, X9
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {92}
	087 Move X0, X8
	088 Call 0x1C5D684
	089 Move X8, [X19+32]
	090 Add X9, X8, 309
	091 NotImplemented "Instruction LDRH not yet implemented."
	092 Move W22, [X20+8]
	093 Move W19, [X20+12]
	094 Move X22, W22
	095 Move TEMP, X9
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {102}
	099 Move X0, X8
	100 Call 0x1C5D684
	101 Move X8, X0
	102 Move X8, [X8+192]
	103 Move X20, [X8+176]
	104 Subtract W8, W23, W22
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X0, X31
	107 Call ThrowHelper.ThrowArgumentOutOfRangeException
	108 Move X0, [X20+32]
	109 Move W8, [X0+309]
	110 Move TEMP, X8
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfEqual {115}
	114 Call 0x1C5D684
	115 Add X0, X21, X22
	116 Move X0, [X19+32]
	117 Move X21, [X20]
	118 Move W8, [X0+309]
	119 Move TEMP, X8
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfEqual {124}
	123 Call 0x1C5D684
	124 Move X8, [X0+192]
	125 Move X1, [X8+160]
	126 Move W8, [X1+309]
	127 Move TEMP, X8
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfEqual {134}
	131 Move X0, X1
	132 Call 0x1C5D684
	133 Move X1, X0
	134 Compare X21, 0
	135 JumpIfEqual {255}
	136 Move X8, [X21]
	137 Move W9, [X1+304]
	138 Move W10, [X8+304]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X8, [X8+200]
	141 Add X8, X8, X9
	142 NotImplemented "Instruction LDUR not yet implemented."
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X0, [X19+32]
	145 Move W8, [X0+309]
	146 Move TEMP, X8
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfEqual {151}
	150 Call 0x1C5D684
	151 Move X8, [X0+192]
	152 Move X1, [X8+160]
	153 Move W8, [X1+309]
	154 Move TEMP, X8
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfEqual {161}
	158 Move X0, X1
	159 Call 0x1C5D684
	160 Move X1, X0
	161 Move X8, [X21]
	162 Move W9, [X1+304]
	163 Move W10, [X8+304]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X10, [X8+200]
	166 Add X9, X10, X9
	167 NotImplemented "Instruction LDUR not yet implemented."
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X9, [X8+376]
	170 Move X1, [X8+384]
	171 Move X0, X21
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move X21, X0
	174 Move X0, [X19+32]
	175 Move W9, [X20+8]
	176 Move W19, [X20+12]
	177 Move X22, X1
	178 Move W8, [X0+309]
	179 And X20, X9, 0x7FFFFFFF
	180 Move TEMP, X8
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfEqual {185}
	184 Call 0x1C5D684
	185 Move X8, [X0+192]
	186 Move X23, [X8+176]
	187 Subtract W8, W22, W20
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X0, X31
	190 Call ThrowHelper.ThrowArgumentOutOfRangeException
	191 Move X0, [X23+32]
	192 Move W8, [X0+309]
	193 Move TEMP, X8
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfEqual {198}
	197 Call 0x1C5D684
	198 Add X0, X21, X20
	199 Compare X21, 0
	200 JumpIfEqual {242}
	201 Move X0, [X19+32]
	202 Move W23, [X20+8]
	203 Move W24, [X20+12]
	204 Move X23, W23
	205 Move W8, [X0+309]
	206 Move TEMP, X8
	207 And TEMP, TEMP, 1
	208 Compare TEMP, 1
	209 JumpIfEqual {211}
	210 Call 0x1C5D684
	211 Move X8, [X0+192]
	212 Move X22, [X8]
	213 Move W8, [X22+309]
	214 Move TEMP, X8
	215 And TEMP, TEMP, 1
	216 Compare TEMP, 1
	217 JumpIfEqual {221}
	218 Move X0, X22
	219 Call 0x1C5D684
	220 Move X22, X0
	221 Move X0, X21
	222 Move X1, X22
	223 Call 0x1C17E00
	224 Compare X0, 0
	225 JumpIfEqual {256}
	226 Move X20, X0
	227 Move X0, [X19+32]
	228 Move W8, [X0+309]
	229 Move TEMP, X8
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfEqual {234}
	233 Call 0x1C5D684
	234 Move W8, [X20+24]
	235 And W19, W24, 0x7FFFFFFF
	236 Subtract W8, W8, W23
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move X0, X31
	239 Call ThrowHelper.ThrowArgumentOutOfRangeException
	240 Add X8, X20, X23
	241 Add X0, X8, 32
	242 Move W19, W31
	243 Move X0, X31
	244 Move W1, W19
	245 Move X20, [X31+48]
	246 Move X19, [X31+56]
	247 Move X22, [X31+32]
	248 Move X21, [X31+40]
	249 Move X24, [X31+16]
	250 Move X23, [X31+24]
	251 Move X30, [X31+64]
	252 Return X0
	253 Move X0, X21
	254 Call 0x1C181E0
	255 Call 0x1C17F20
	256 Move X0, X21
	257 Move X1, X22
	258 Call 0x1C181E0

Method: System.Buffers.MemoryHandle Pin()

Disassembly:
	0x0319F2B4 BL 0x1C5C684
	0x0319F2B8 LDR X8, [X0 + 0xC0]
	0x0319F2BC LDR X1, [X8 + 0xA0]
	0x0319F2C0 LDRB W8, [X1 + 0x135]
	0x0319F2C4 TBNZ X8, 0x0, 0x319F2D4
	0x0319F2C8 MOV X0, X1
	0x0319F2CC BL 0x1C5C684
	0x0319F2D0 MOV X1, X0
	0x0319F2D4 CBZ X21, 0x319F4B8
	0x0319F2D8 LDR X8, [X21]
	0x0319F2DC LDRB W9, [X1 + 0x130]
	0x0319F2E0 LDRB W10, [X8 + 0x130]
	0x0319F2E4 CMP W10, W9
	0x0319F2E8 B.CC 0x319F4B0
	0x0319F2EC LDR X8, [X8 + 0xC8]
	0x0319F2F0 ADD X8, X8, X9, 0x3, LSL
	0x0319F2F4 LDUR X8, [X8 - 0x8]
	0x0319F2F8 CMP X8, X1
	0x0319F2FC B.NE 0x319F4B0
	0x0319F300 LDR X0, [X19 + 0x20]
	0x0319F304 LDRB W8, [X0 + 0x135]
	0x0319F308 TBNZ X8, 0x0, 0x319F310
	0x0319F30C BL 0x1C5C684
	0x0319F310 LDR X8, [X0 + 0xC0]
	0x0319F314 LDR X1, [X8 + 0xA0]
	0x0319F318 LDRB W8, [X1 + 0x135]
	0x0319F31C TBNZ X8, 0x0, 0x319F32C
	0x0319F320 MOV X0, X1
	0x0319F324 BL 0x1C5C684
	0x0319F328 MOV X1, X0
	0x0319F32C LDR X8, [X21]
	0x0319F330 LDRB W9, [X1 + 0x130]
	0x0319F334 LDRB W10, [X8 + 0x130]
	0x0319F338 CMP W10, W9
	0x0319F33C B.CC 0x319F4B0
	0x0319F340 LDR X10, [X8 + 0xC8]
	0x0319F344 ADD X9, X10, X9, 0x3, LSL
	0x0319F348 LDUR X9, [X9 - 0x8]
	0x0319F34C CMP X9, X1
	0x0319F350 B.NE 0x319F4B0
	0x0319F354 LDP X9, X1, [X8 + 0x178]
	0x0319F358 MOV X0, X21
	0x0319F35C BLR X9
	0x0319F360 STP X0, X1, [X31]
	0x0319F364 LDR X8, [X19 + 0x20]
	0x0319F368 LDP W21, W20, [X20 + 0x8]
	0x0319F36C ADD X9, X8, 0x135
	0x0319F370 LDRH W9, [X9]
	0x0319F374 TBNZ X9, 0x0, 0x319F418
	0x0319F378 MOV X0, X8
	0x0319F37C BL 0x1C5C684
	0x0319F380 LDR X8, [X19 + 0x20]
	0x0319F384 ADD X9, X8, 0x135
	0x0319F388 LDRH W9, [X9]
	0x0319F38C B 0x319F41C
	0x0319F390 CBZ X21, 0x319F410
	0x0319F394 LDP W22, W24, [X20 + 0x8]
	0x0319F398 STP X31, X31, [X31 + 0x10]
	0x0319F39C LDR X0, [X19 + 0x20]
	0x0319F3A0 LDRB W8, [X0 + 0x135]
	0x0319F3A4 TBNZ X8, 0x0, 0x319F3AC
	0x0319F3A8 BL 0x1C5C684
	0x0319F3AC LDR X8, [X0 + 0xC0]
	0x0319F3B0 LDR X23, [X8]
	0x0319F3B4 LDRB W8, [X23 + 0x135]
	0x0319F3B8 TBNZ X8, 0x0, 0x319F3C8
	0x0319F3BC MOV X0, X23
	0x0319F3C0 BL 0x1C5C684
	0x0319F3C4 MOV X23, X0
	0x0319F3C8 MOV X0, X21
	0x0319F3CC MOV X1, X23
	0x0319F3D0 BL 0x1C16E00
	0x0319F3D4 CBZ X0, 0x319F4BC
	0x0319F3D8 MOV X20, X0
	0x0319F3DC LDR X0, [X19 + 0x20]
	0x0319F3E0 AND W19, W24, 0x7FFFFFFF
	0x0319F3E4 LDRB W8, [X0 + 0x135]
	0x0319F3E8 TBNZ X8, 0x0, 0x319F3F0
	0x0319F3EC BL 0x1C5C684
	0x0319F3F0 LDR X8, [X0 + 0xC0]
	0x0319F3F4 ADD X0, X31, 0x10
	0x0319F3F8 MOV X1, X20
	0x0319F3FC MOV W2, W22
	0x0319F400 LDR X4, [X8 + 0xD0]
	0x0319F404 MOV W3, W19
	0x0319F408 BL 0x2228D10
	0x0319F40C B 0x319F458
	0x0319F410 STP X31, X31, [X31 + 0x10]
	0x0319F414 B 0x319F458
	0x0319F418 MOV X0, X8
	0x0319F41C LDR X10, [X0 + 0xC0]
	0x0319F420 AND W19, W21, 0x7FFFFFFF
	0x0319F424 LDR X10, [X10 + 0xB0]
	0x0319F428 LDR X22, [X10]
	0x0319F42C TBNZ X9, 0x0, 0x319F43C
	0x0319F430 MOV X0, X8
	0x0319F434 BL 0x1C5C684
	0x0319F438 MOV X8, X0
	0x0319F43C LDR X8, [X8 + 0xC0]
	0x0319F440 ADD X0, X31, 0x0
	0x0319F444 MOV W1, W19
	0x0319F448 MOV W2, W20
	0x0319F44C LDR X3, [X8 + 0xB0]
	0x0319F450 BLR X22
	0x0319F454 STP X0, X1, [X31 + 0x10]
	0x0319F458 LDP X0, X1, [X31 + 0x10]
	0x0319F45C LDP X20, X19, [X31 + 0x50]
	0x0319F460 LDP X22, X21, [X31 + 0x40]
	0x0319F464 LDP X24, X23, [X31 + 0x30]
	0x0319F468 LDR X30, [X31 + 0x20]
	0x0319F46C ADD X31, X31, 0x60
	0x0319F470 RET
	0x0319F474 MOV X0, X8
	0x0319F478 LDR X10, [X0 + 0xC0]
	0x0319F47C LDR X10, [X10 + 0xB0]
	0x0319F480 LDR X19, [X10]
	0x0319F484 TBNZ X9, 0x0, 0x319F494
	0x0319F488 MOV X0, X8
	0x0319F48C BL 0x1C5C684
	0x0319F490 MOV X8, X0
	0x0319F494 LDR X8, [X8 + 0xC0]
	0x0319F498 ADD X0, X31, 0x0
	0x0319F49C MOV W1, W21
	0x0319F4A0 MOV W2, W20
	0x0319F4A4 LDR X3, [X8 + 0xB0]
	0x0319F4A8 BLR X19
	0x0319F4AC B 0x319F454
	0x0319F4B0 MOV X0, X21
	0x0319F4B4 BL 0x1C171E0
	0x0319F4B8 BL 0x1C16F20
	0x0319F4BC MOV X0, X21
	0x0319F4C0 MOV X1, X23
	0x0319F4C4 BL 0x1C171E0
	0x0319F4C8 SUB X31, X31, 0x50
	0x0319F4CC STP X30, X23, [X31 + 0x20]
	0x0319F4D0 STP X22, X21, [X31 + 0x30]
	0x0319F4D4 STP X20, X19, [X31 + 0x40]
	0x0319F4D8 ADRP X22, 0x123C000
	0x0319F4DC LDRB W9, [X22 + 0xE0E]
	0x0319F4E0 MOV X20, X1
	0x0319F4E4 MOV X21, X0
	0x0319F4E8 MOV X19, X8
	0x0319F4EC TBNZ X9, 0x0, 0x319F51C
	0x0319F4F0 ADRP X0, 0xF7B000
	0x0319F4F4 LDR X0, [X0 + 0xD70]
	0x0319F4F8 BL 0x1C16CF4
	0x0319F4FC ADRP X0, 0xF56000
	0x0319F500 LDR X0, [X0 + 0x278]
	0x0319F504 BL 0x1C16CF4
	0x0319F508 ADRP X0, 0xF54000
	0x0319F50C LDR X0, [X0 + 0x6C0]
	0x0319F510 BL 0x1C16CF4
	0x0319F514 MOVZ W8, 0x1
	0x0319F518 STRB W8, [X22 + 0xE0E]
	0x0319F51C LDR W22, [X21 + 0x8]
	0x0319F520 TBNZ X22, 0x1F, 0x319F61C
	0x0319F524 LDR X0, [X20 + 0x20]
	0x0319F528 ADRP X22, 0xF54000
	0x0319F52C LDRB W8, [X0 + 0x135]
	0x0319F530 LDR X22, [X22 + 0x6C0]
	0x0319F534 TBNZ X8, 0x0, 0x319F53C
	0x0319F538 BL 0x1C5C684
	0x0319F53C LDR X8, [X22]
	0x0319F540 LDR X9, [X0 + 0xC0]
	0x0319F544 ADRP X23, 0xF7B000
	0x0319F548 LDR W10, [X8 + 0xE0]
	0x0319F54C LDR X22, [X9 + 0x70]
	0x0319F550 LDR X23, [X23 + 0xD70]
	0x0319F554 CBNZ W10, 0x319F560
	0x0319F558 MOV X0, X8
	0x0319F55C BL 0x1C16DFC
	0x0319F560 MOV X0, X22
	0x0319F564 MOV X1, X31
	0x0319F568 BL 0x338C698
	0x0319F56C LDR X8, [X23]
	0x0319F570 MOV X22, X0
	0x0319F574 MOV X1, X31
	0x0319F578 MOV X0, X8
	0x0319F57C BL 0x338C698
	0x0319F580 MOV X1, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X22, 0x123D000
	009 Move W9, [X22+3593]
	010 Move X21, X1
	011 Move X20, X0
	012 Move X19, X8
	013 Move TEMP, X9
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xF7C000
	018 Move X0, [X0+3440]
	019 Call 0x1C17CF4
	020 Move X0, 0xF57000
	021 Move X0, [X0+632]
	022 Call 0x1C17CF4
	023 Move X0, 0xF55000
	024 Move X0, [X0+1728]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+3593], W8
	028 Move W22, [X20+8]
	029 Move TEMP, X22
	030 And TEMP, TEMP, -2147483648
	031 Compare TEMP, -2147483648
	032 JumpIfEqual {114}
	033 Move X0, [X21+32]
	034 Move X22, 0xF55000
	035 Move W8, [X0+309]
	036 Move X22, [X22+1728]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X22]
	043 Move X9, [X0+192]
	044 Move X23, 0xF7C000
	045 Move W10, [X8+224]
	046 Move X22, [X9+112]
	047 Move X23, [X23+3440]
	048 Compare W10, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Move X0, X22
	053 Move X1, X31
	054 Call Type.GetTypeFromHandle, X0
	055 Move X8, [X23]
	056 Move X22, X0
	057 Move X1, X31
	058 Move X0, X8
	059 Call Type.GetTypeFromHandle, X0
	060 Move X1, X0
	061 Move X0, X22
	062 Move X2, X31
	063 Call Type.op_Equality, X0, X1
	064 Move X22, [X20]
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {76}
	069 Compare X22, 0
	070 JumpIfEqual {76}
	071 Move X8, 0xF57000
	072 Move X8, [X8+632]
	073 Move X9, [X22]
	074 Move X8, [X8]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X0, [X21+32]
	077 Move W8, [X0+309]
	078 Move TEMP, X8
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {83}
	082 Call 0x1C5D684
	083 Move X8, [X0+192]
	084 Move X1, [X8]
	085 Move W8, [X1+309]
	086 Move TEMP, X8
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {93}
	090 Move X0, X1
	091 Call 0x1C5D684
	092 Move X1, X0
	093 Move X0, X22
	094 Call 0x1C17E00
	095 Compare X0, 0
	096 JumpIfEqual {177}
	097 Move W8, [X20+12]
	098 Move X21, X0
	099 Move TEMP, X8
	100 And TEMP, TEMP, -2147483648
	101 Compare TEMP, -2147483648
	102 JumpIfEqual {188}
	103 Move W1, 3
	104 Move X0, X21
	105 Move X2, X31
	106 Call GCHandle.Alloc, X0, X1
	107 NotImplemented "Instruction LDRSW not yet implemented."
	108 Move X2, X0
	109 Move [X19], X31
	110 Move [X19+8], X31
	111 Move [X19+16], X31
	112 Add X8, X21, X8
	113 Add X1, X8, 32
	114 Move X0, [X21+32]
	115 Move X20, [X20]
	116 Move W8, [X0+309]
	117 Move TEMP, X8
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfEqual {122}
	121 Call 0x1C5D684
	122 Move X8, [X0+192]
	123 Move X1, [X8+160]
	124 Move W8, [X1+309]
	125 Move TEMP, X8
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfEqual {132}
	129 Move X0, X1
	130 Call 0x1C5D684
	131 Move X1, X0
	132 Compare X20, 0
	133 JumpIfEqual {224}
	134 Move X8, [X20]
	135 Move W9, [X1+304]
	136 Move W10, [X8+304]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X8, [X8+200]
	139 Add X8, X8, X9
	140 NotImplemented "Instruction LDUR not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X0, [X21+32]
	143 Move W8, [X0+309]
	144 Move TEMP, X8
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfEqual {149}
	148 Call 0x1C5D684
	149 Move X8, [X0+192]
	150 Move X1, [X8+160]
	151 Move W8, [X1+309]
	152 Move TEMP, X8
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfEqual {159}
	156 Move X0, X1
	157 Call 0x1C5D684
	158 Move X1, X0
	159 Move X8, [X20]
	160 Move W9, [X1+304]
	161 Move W10, [X8+304]
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X10, [X8+200]
	164 Add X9, X10, X9
	165 NotImplemented "Instruction LDUR not yet implemented."
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X9, [X8+392]
	168 Move X2, [X8+400]
	169 And W1, W22, 0x7FFFFFFF
	170 Add X8, X31, 8
	171 Move X0, X20
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move X8, [X31+24]
	174 NotImplemented "Instruction LDUR not yet implemented."
	175 Move [X19+16], X8
	176 Move [X19], V0
	177 Move [X19], X31
	178 Move [X19+8], X31
	179 Move [X19+16], X31
	180 Move X20, [X31+64]
	181 Move X19, [X31+72]
	182 Move X22, [X31+48]
	183 Move X21, [X31+56]
	184 Move X30, [X31+32]
	185 Move X23, [X31+40]
	186 Add X31, X31, 80
	187 Return X0
	188 NotImplemented "Instruction LDRSW not yet implemented."
	189 Move X0, X19
	190 Move X2, X31
	191 Move [X19], X31
	192 Move [X19+8], X31
	193 Add X8, X21, X8
	194 Add X1, X8, 32
	195 Move [X19+16], X31
	196 Move W1, 3
	197 Move X0, X22
	198 Move X2, X31
	199 Call GCHandle.Alloc, X0, X1
	200 Move X21, X0
	201 Move X0, X22
	202 Move X1, X31
	203 Call String.GetRawStringData, X0
	204 NotImplemented "Instruction LDRSW not yet implemented."
	205 Move [X19], X31
	206 Move [X19+8], X31
	207 Move [X19+16], X31
	208 Move X2, X21
	209 Add X1, X0, X8
	210 Move X0, X19
	211 Move X20, [X31+64]
	212 Move X19, [X31+72]
	213 Move X22, [X31+48]
	214 Move X21, [X31+56]
	215 Move X30, [X31+32]
	216 Move X23, [X31+40]
	217 Move X3, X31
	218 Move X4, X31
	219 Add X31, X31, 80
	220 Call MemoryHandle..ctor, X0, X1, X2, X3
	221 Return X0
	222 Move X0, X20
	223 Call 0x1C181E0
	224 Call 0x1C17F20

Method: T[] ToArray()

Disassembly:
	0x0319F584 MOV X0, X22
	0x0319F588 MOV X2, X31
	0x0319F58C BL 0x3395194
	0x0319F590 LDR X23, [X21]
	0x0319F594 TBZ X0, 0x0, 0x319F5B4
	0x0319F598 CBZ X23, 0x319F5B4
	0x0319F59C ADRP X8, 0xF56000
	0x0319F5A0 LDR X8, [X8 + 0x278]
	0x0319F5A4 LDR X9, [X23]
	0x0319F5A8 LDR X8, [X8]
	0x0319F5AC CMP X9, X8
	0x0319F5B0 B.EQ 0x319F740
	0x0319F5B4 LDR X0, [X20 + 0x20]
	0x0319F5B8 LDRB W8, [X0 + 0x135]
	0x0319F5BC TBNZ X8, 0x0, 0x319F5C4
	0x0319F5C0 BL 0x1C5C684
	0x0319F5C4 LDR X8, [X0 + 0xC0]
	0x0319F5C8 LDR X1, [X8]
	0x0319F5CC LDRB W8, [X1 + 0x135]
	0x0319F5D0 TBNZ X8, 0x0, 0x319F5E0
	0x0319F5D4 MOV X0, X1
	0x0319F5D8 BL 0x1C5C684
	0x0319F5DC MOV X1, X0
	0x0319F5E0 MOV X0, X23
	0x0319F5E4 BL 0x1C16E00
	0x0319F5E8 CBZ X0, 0x319F6F4
	0x0319F5EC LDR W8, [X21 + 0xC]
	0x0319F5F0 MOV X23, X0
	0x0319F5F4 TBNZ X8, 0x1F, 0x319F710

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X31], X31
	007 Move X8, [X1+32]
	008 Move X19, X1
	009 Move X20, X0
	010 Move W9, [X8+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {18}
	015 Move X0, X8
	016 Call 0x1C5D684
	017 Move X8, X0
	018 Move X8, [X8+192]
	019 Move X0, X20
	020 Move X1, [X8+120]
	021 Call 0x2985784
	022 Move [X31], X0
	023 Move [X31+8], X1
	024 Move X0, [X19+32]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move X8, [X0+192]
	032 Add X0, X31, 0
	033 Move X1, [X8+232]
	034 Call 0x31A9580
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X30, [X31+16]
	038 Add X31, X31, 48
	039 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x0319F5F8 MOVZ W1, 0x3
	0x0319F5FC MOV X0, X23
	0x0319F600 MOV X2, X31
	0x0319F604 BL 0x32C0780
	0x0319F608 LDR X8, [X20 + 0x20]
	0x0319F60C LDR W21, [X21 + 0x8]
	0x0319F610 MOV X22, X0
	0x0319F614 ADD X23, X23, 0x20
	0x0319F618 B 0x319F76C
	0x0319F61C LDR X0, [X20 + 0x20]
	0x0319F620 LDR X21, [X21]
	0x0319F624 LDRB W8, [X0 + 0x135]
	0x0319F628 TBNZ X8, 0x0, 0x319F630
	0x0319F62C BL 0x1C5C684
	0x0319F630 LDR X8, [X0 + 0xC0]
	0x0319F634 LDR X1, [X8 + 0xA0]
	0x0319F638 LDRB W8, [X1 + 0x135]
	0x0319F63C TBNZ X8, 0x0, 0x319F64C
	0x0319F640 MOV X0, X1
	0x0319F644 BL 0x1C5C684
	0x0319F648 MOV X1, X0
	0x0319F64C CBZ X21, 0x319F848
	0x0319F650 LDR X8, [X21]
	0x0319F654 LDRB W9, [X1 + 0x130]
	0x0319F658 LDRB W10, [X8 + 0x130]
	0x0319F65C CMP W10, W9
	0x0319F660 B.CC 0x319F840
	0x0319F664 LDR X8, [X8 + 0xC8]
	0x0319F668 ADD X8, X8, X9, 0x3, LSL
	0x0319F66C LDUR X8, [X8 - 0x8]
	0x0319F670 CMP X8, X1
	0x0319F674 B.NE 0x319F840
	0x0319F678 LDR X0, [X20 + 0x20]
	0x0319F67C LDRB W8, [X0 + 0x135]
	0x0319F680 TBNZ X8, 0x0, 0x319F688
	0x0319F684 BL 0x1C5C684
	0x0319F688 LDR X8, [X0 + 0xC0]
	0x0319F68C LDR X1, [X8 + 0xA0]
	0x0319F690 LDRB W8, [X1 + 0x135]
	0x0319F694 TBNZ X8, 0x0, 0x319F6A4
	0x0319F698 MOV X0, X1
	0x0319F69C BL 0x1C5C684
	0x0319F6A0 MOV X1, X0
	0x0319F6A4 LDR X8, [X21]
	0x0319F6A8 LDRB W9, [X1 + 0x130]
	0x0319F6AC LDRB W10, [X8 + 0x130]
	0x0319F6B0 CMP W10, W9
	0x0319F6B4 B.CC 0x319F840
	0x0319F6B8 LDR X10, [X8 + 0xC8]
	0x0319F6BC ADD X9, X10, X9, 0x3, LSL
	0x0319F6C0 LDUR X9, [X9 - 0x8]
	0x0319F6C4 CMP X9, X1
	0x0319F6C8 B.NE 0x319F840
	0x0319F6CC LDP X9, X2, [X8 + 0x188]
	0x0319F6D0 AND W1, W22, 0x7FFFFFFF
	0x0319F6D4 ADD X8, X31, 0x8
	0x0319F6D8 MOV X0, X21
	0x0319F6DC BLR X9
	0x0319F6E0 LDR X8, [X31 + 0x18]
	0x0319F6E4 LDUR V0, [X31 + 0x8]
	0x0319F6E8 STR X8, [X19 + 0x10]
	0x0319F6EC STR V0, [X19]
	0x0319F6F0 B 0x319F6FC
	0x0319F6F4 STP X31, X31, [X19]
	0x0319F6F8 STR X31, [X19 + 0x10]
	0x0319F6FC LDP X20, X19, [X31 + 0x40]
	0x0319F700 LDP X22, X21, [X31 + 0x30]
	0x0319F704 LDP X30, X23, [X31 + 0x20]
	0x0319F708 ADD X31, X31, 0x50
	0x0319F70C RET
	0x0319F710 LDR X8, [X20 + 0x20]
	0x0319F714 LDR W21, [X21 + 0x8]
	0x0319F718 ADD X22, X23, 0x20
	0x0319F71C ADD X9, X8, 0x135
	0x0319F720 LDRH W9, [X9]
	0x0319F724 TBNZ X9, 0x0, 0x319F7DC
	0x0319F728 MOV X0, X8
	0x0319F72C BL 0x1C5C684
	0x0319F730 LDR X8, [X20 + 0x20]
	0x0319F734 ADD X9, X8, 0x135
	0x0319F738 LDRH W9, [X9]
	0x0319F73C B 0x319F7E0
	0x0319F740 MOVZ W1, 0x3
	0x0319F744 MOV X0, X23
	0x0319F748 MOV X2, X31
	0x0319F74C BL 0x32C0780
	0x0319F750 MOV X22, X0
	0x0319F754 MOV X0, X23
	0x0319F758 MOV X1, X31
	0x0319F75C BL 0x3225708
	0x0319F760 LDR X8, [X20 + 0x20]
	0x0319F764 LDR W21, [X21 + 0x8]
	0x0319F768 MOV X23, X0
	0x0319F76C ADD X9, X8, 0x135
	0x0319F770 LDRH W9, [X9]
	0x0319F774 TBNZ X9, 0x0, 0x319F790
	0x0319F778 MOV X0, X8
	0x0319F77C BL 0x1C5C684
	0x0319F780 LDR X8, [X20 + 0x20]
	0x0319F784 ADD X9, X8, 0x135
	0x0319F788 LDRH W9, [X9]
	0x0319F78C B 0x319F794
	0x0319F790 MOV X0, X8
	0x0319F794 LDR X10, [X0 + 0xC0]
	0x0319F798 LDR X10, [X10 + 0xE0]
	0x0319F79C LDR X20, [X10]
	0x0319F7A0 TBNZ X9, 0x0, 0x319F7B0
	0x0319F7A4 MOV X0, X8
	0x0319F7A8 BL 0x1C5C684
	0x0319F7AC MOV X8, X0
	0x0319F7B0 LDR X8, [X8 + 0xC0]
	0x0319F7B4 MOV X0, X23
	0x0319F7B8 MOV W1, W21
	0x0319F7BC LDR X2, [X8 + 0xE0]
	0x0319F7C0 BLR X20
	0x0319F7C4 MOV X1, X0
	0x0319F7C8 MOV X0, X19
	0x0319F7CC MOV X2, X22

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move [X31], X31
	009 Move X8, [X2+32]
	010 Move X20, X2
	011 Move X21, X1
	012 Move X19, X0
	013 Move W9, [X8+309]
	014 Move TEMP, X9
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {21}
	018 Move X0, X8
	019 Call 0x1C5D684
	020 Move X8, X0
	021 Move X8, [X8+192]
	022 Move X0, [X8+104]
	023 Move W8, [X0+309]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {29}
	028 Call 0x1C5D684
	029 Compare X21, 0
	030 JumpIfEqual {34}
	031 Move X8, [X21]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSET not yet implemented."
	034 Move W22, 1
	035 Move X0, [X20+32]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X0+192]
	043 Move TEMP, X22
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {101}
	047 Move X0, [X8+8]
	048 Move W8, [X0+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {54}
	053 Call 0x1C5D684
	054 Compare X21, 0
	055 JumpIfEqual {144}
	056 Move X8, [X21]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X0, [X20+32]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Move X8, [X0+192]
	066 Move X1, [X8+8]
	067 Move W8, [X1+309]
	068 Move TEMP, X8
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {75}
	072 Move X0, X1
	073 Call 0x1C5D684
	074 Move X1, X0
	075 Move X8, [X21]
	076 Move X9, [X1+64]
	077 Move X8, [X8+64]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X0, X21
	080 Call 0x1C17E08
	081 Move X8, X0
	082 Move X0, [X20+32]
	083 Move X21, [X8]
	084 Move X20, [X8+8]
	085 Move W9, [X0+309]
	086 Move TEMP, X9
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {91}
	090 Call 0x1C5D684
	091 Move X8, [X19]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move W8, [X19+8]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move W8, [X19+12]
	096 Move X9, X20
	097 ShiftRight X9, 32
	098 And X9, X9, 0x7FFFFFFF
	099 NotImplemented "Instruction CMP not yet implemented."
	100 NotImplemented "Instruction CSET not yet implemented."
	101 Move X1, [X8+104]
	102 Move W8, [X1+309]
	103 Move TEMP, X8
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfEqual {110}
	107 Move X0, X1
	108 Call 0x1C5D684
	109 Move X1, X0
	110 Compare X21, 0
	111 JumpIfEqual {155}
	112 Move X8, [X21]
	113 Move X9, [X1+64]
	114 Move X8, [X8+64]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X0, X21
	117 Call 0x1C17E08
	118 Move V0, [X0]
	119 Move [X31], V0
	120 Move X0, [X20+32]
	121 Move X21, [X19]
	122 Move X19, [X19+8]
	123 Add X8, X0, 309
	124 NotImplemented "Instruction LDRH not yet implemented."
	125 Move TEMP, X8
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfEqual {133}
	129 Call 0x1C5D684
	130 Move X0, [X20+32]
	131 Add X8, X0, 309
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Move TEMP, X8
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfEqual {138}
	137 Call 0x1C5D684
	138 Move X8, [X0+192]
	139 Add X0, X31, 0
	140 Move X1, X21
	141 Move X2, X19
	142 Move X3, [X8+248]
	143 Call 0x25BE618, X0, X1
	144 Move W0, W31
	145 Move X20, [X31+48]
	146 Move X19, [X31+56]
	147 Move X22, [X31+32]
	148 Move X21, [X31+40]
	149 Move X30, [X31+16]
	150 And W0, W0, 1
	151 Add X31, X31, 64
	152 Return X0
	153 Move X0, X21
	154 Call 0x1C181E0
	155 Call 0x1C17F20

Method: System.Boolean Equals(System.Memory`1<T> other)

Disassembly:
	0x0319F7D0 STP X31, X31, [X19 + 0x8]
	0x0319F7D4 STR X31, [X19]
	0x0319F7D8 B 0x319F824
	0x0319F7DC MOV X0, X8
	0x0319F7E0 LDR X10, [X0 + 0xC0]
	0x0319F7E4 LDR X10, [X10 + 0xE0]
	0x0319F7E8 LDR X20, [X10]
	0x0319F7EC TBNZ X9, 0x0, 0x319F7FC
	0x0319F7F0 MOV X0, X8
	0x0319F7F4 BL 0x1C5C684
	0x0319F7F8 MOV X8, X0
	0x0319F7FC LDR X8, [X8 + 0xC0]
	0x0319F800 MOV X0, X22

ISIL:
	001 Move X8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, [X0+8]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move W8, [X0+12]
	006 Move X9, X2
	007 ShiftRight X9, 32
	008 And X9, X9, 0x7FFFFFFF
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 Return X0
	012 Move W0, W31
	013 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x0319F804 MOV W1, W21
	0x0319F808 LDR X2, [X8 + 0xE0]
	0x0319F80C BLR X20
	0x0319F810 MOV X1, X0
	0x0319F814 STP X31, X31, [X19 + 0x8]
	0x0319F818 STR X31, [X19]
	0x0319F81C MOV X0, X19
	0x0319F820 MOV X2, X31
	0x0319F824 LDP X20, X19, [X31 + 0x40]
	0x0319F828 LDP X22, X21, [X31 + 0x30]
	0x0319F82C LDP X30, X23, [X31 + 0x20]
	0x0319F830 MOV X3, X31
	0x0319F834 MOV X4, X31
	0x0319F838 ADD X31, X31, 0x50
	0x0319F83C B 0x335E49C
	0x0319F840 MOV X0, X21
	0x0319F844 BL 0x1C171E0
	0x0319F848 BL 0x1C16F20
	0x0319F84C SUB X31, X31, 0x30
	0x0319F850 STP X30, X21, [X31 + 0x10]
	0x0319F854 STP X20, X19, [X31 + 0x20]
	0x0319F858 STP X31, X31, [X31]
	0x0319F85C LDR X8, [X1 + 0x20]
	0x0319F860 MOV X19, X1
	0x0319F864 MOV X20, X0
	0x0319F868 ADD X9, X8, 0x135
	0x0319F86C LDRH W9, [X9]
	0x0319F870 TBNZ X9, 0x0, 0x319F88C
	0x0319F874 MOV X0, X8
	0x0319F878 BL 0x1C5C684
	0x0319F87C LDR X8, [X19 + 0x20]
	0x0319F880 ADD X9, X8, 0x135
	0x0319F884 LDRH W9, [X9]
	0x0319F888 B 0x319F890
	0x0319F88C MOV X0, X8
	0x0319F890 LDR X10, [X0 + 0xC0]
	0x0319F894 LDR X10, [X10 + 0x78]
	0x0319F898 LDR X21, [X10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, X0
	007 Move X0, [X0]
	008 Compare X0, 0
	009 JumpIfEqual {45}
	010 Move X8, [X0]
	011 Move X20, X1
	012 Move X9, [X8+344]
	013 Move X1, [X8+352]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move W19, W0
	016 Add X0, X22, 8
	017 Move X1, X31
	018 Call Int32.GetHashCode, X0
	019 Move W21, W0
	020 Add X0, X22, 12
	021 Move X1, X31
	022 Call Int32.GetHashCode, X0
	023 Move X8, [X20+32]
	024 Move W20, W0
	025 Move W9, [X8+309]
	026 Move TEMP, X9
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {33}
	030 Move X0, X8
	031 Call 0x1C5D684
	032 Move X8, X0
	033 Move X8, [X8+192]
	034 Move W0, W19
	035 Move W1, W21
	036 Move W2, W20
	037 Move X3, [X8+272]
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Call 0x319F8A8, X0, X1, X2
	044 Return X0
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Return X0

Method: System.Int32 CombineHashCodes(System.Int32 left, System.Int32 right)

Disassembly:
	0x0319F89C TBNZ X9, 0x0, 0x319F8AC
	0x0319F8A0 MOV X0, X8
	0x0319F8A4 BL 0x1C5C684

ISIL:
	001 Add W8, W0, W0
	002 Xor W0, W8, W1
	003 Return X0

Method: System.Int32 CombineHashCodes(System.Int32 h1, System.Int32 h2, System.Int32 h3)

Disassembly:
	0x0319F8A8 MOV X8, X0
	0x0319F8AC LDR X8, [X8 + 0xC0]
	0x0319F8B0 MOV X0, X20
	0x0319F8B4 LDR X1, [X8 + 0x78]
	0x0319F8B8 BLR X21
	0x0319F8BC STP X0, X1, [X31]
	0x0319F8C0 LDR X8, [X19 + 0x20]
	0x0319F8C4 ADD X9, X8, 0x135
	0x0319F8C8 LDRH W9, [X9]
	0x0319F8CC TBNZ X9, 0x0, 0x319F8E8
	0x0319F8D0 MOV X0, X8
	0x0319F8D4 BL 0x1C5C684
	0x0319F8D8 LDR X8, [X19 + 0x20]
	0x0319F8DC ADD X9, X8, 0x135
	0x0319F8E0 LDRH W9, [X9]
	0x0319F8E4 B 0x319F8EC
	0x0319F8E8 MOV X0, X8
	0x0319F8EC LDR X10, [X0 + 0xC0]
	0x0319F8F0 LDR X10, [X10 + 0xE8]
	0x0319F8F4 LDR X19, [X10]
	0x0319F8F8 TBNZ X9, 0x0, 0x319F908
	0x0319F8FC MOV X0, X8
	0x0319F900 BL 0x1C5C684
	0x0319F904 MOV X8, X0
	0x0319F908 LDR X8, [X8 + 0xC0]
	0x0319F90C ADD X0, X31, 0x0
	0x0319F910 LDR X1, [X8 + 0xE8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+32]
	007 Move W19, W2
	008 Move W20, W1
	009 Move W21, W0
	010 Add X9, X8, 309
	011 NotImplemented "Instruction LDRH not yet implemented."
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {22}
	016 Move X0, X8
	017 Move X22, X3
	018 Call 0x1C5D684
	019 Move X8, [X22+32]
	020 Add X9, X8, 309
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Move TEMP, X9
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {28}
	026 Move X0, X8
	027 Call 0x1C5D684
	028 Add W8, W21, W21
	029 Xor W8, W8, W20
	030 Add W8, W8, W8
	031 Xor W0, W8, W19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Return X0

