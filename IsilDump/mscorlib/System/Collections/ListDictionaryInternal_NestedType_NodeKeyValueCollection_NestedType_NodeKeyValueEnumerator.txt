Type: System.Collections.ListDictionaryInternal/NodeKeyValueCollection/NodeKeyValueEnumerator

Method: System.Void .ctor(System.Collections.ListDictionaryInternal list, System.Boolean isKeys)

Disassembly:
	0x03352648 BLR X9
	0x0335264C MOV W0, W20
	0x03352650 LDP X20, X19, [X31 + 0x10]
	0x03352654 LDP X30, X21, [X31], #0x20
	0x03352658 RET
	0x0335265C BL 0x1C16F20
	0x03352660 CMP W1, 0x1
	0x03352664 MOV X21, X0
	0x03352668 B.NE 0x33526F0
	0x0335266C MOV X0, X21
	0x03352670 BL 0x3EB1AD0
	0x03352674 MOV X21, X0
	0x03352678 ADRP X0, 0xDA7000
	0x0335267C LDR X0, [X0 + 0xCC0]
	0x03352680 BL 0x1C16D08
	0x03352684 LDR X8, [X21]
	0x03352688 LDR X1, [X8]
	0x0335268C BL 0x1C17270
	0x03352690 TBZ X0, 0x0, 0x33526C8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X19, X0
	008 And W21, W2, 1
	009 Call Object..ctor, X0
	010 Move [X19+16], X20
	011 Move [X19+36], W21
	012 Compare X20, 0
	013 JumpIfEqual {24}
	014 Move W8, [X20+24]
	015 Move W9, 1
	016 Move [X19+37], W9
	017 Move [X19+24], X31
	018 Move [X19+32], W8
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Return 
	024 Call 0x1C17F20

Method: System.Object get_Current()

Disassembly:
	0x03352694 LDR X21, [X21]
	0x03352698 BL 0x3EB1AE0
	0x0335269C LDR X19, [X19 + 0x10]
	0x033526A0 MOV X0, X19
	0x033526A4 BL 0x19903C0
	0x033526A8 LDR X8, [X19]
	0x033526AC MOV X0, X19
	0x033526B0 MOV W1, W20
	0x033526B4 LDR X9, [X8 + 0x3D8]
	0x033526B8 LDR X2, [X8 + 0x3E0]
	0x033526BC BLR X9
	0x033526C0 MOV X0, X21
	0x033526C4 BL 0x1C16F18
	0x033526C8 MOVZ W0, 0x8
	0x033526CC BL 0x3EB1AF0
	0x033526D0 LDR X8, [X21]
	0x033526D4 STR X8, [X0]
	0x033526D8 ADRP X1, 0xB62000
	0x033526DC ADD X1, X1, 0xE58
	0x033526E0 MOV X2, X31
	0x033526E4 BL 0x3EB1B00
	0x033526E8 MOV X21, X0
	0x033526EC BL 0x3EB1AE0
	0x033526F0 MOV X0, X21
	0x033526F4 BL 0x1D2C690
	0x033526F8 BL 0x1990590
	0x033526FC STR X30, [X31 - 0x30]!
	0x03352700 STP X22, X21, [X31 + 0x10]
	0x03352704 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+24]
	004 Compare X8, 0
	005 JumpIfEqual {15}
	006 Move W9, [X0+36]
	007 Move W10, 16
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W9, 24
	010 NotImplemented "Instruction CSEL not yet implemented."
	011 Move X0, [X8]
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return X0
	015 Move X0, 0xDA2000
	016 Move X0, [X0+1456]
	017 Call 0x1C17D08
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Move X0, 0xDCC000
	021 Move X0, [X0+656]
	022 Call 0x1C17D08
	023 Move X1, X0
	024 Move X0, X19
	025 Move X2, X31
	026 Call InvalidOperationException..ctor, X0, X1
	027 Move X0, 0xDD9000
	028 Move X0, [X0+792]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X19
	032 Call 0x1C17DEC

Method: System.Boolean MoveNext()

Disassembly:
	0x03352708 LDR X8, [X0]
	0x0335270C MOV X20, X0
	0x03352710 MOV X19, X1
	0x03352714 LDR X9, [X8 + 0x2B8]
	0x03352718 LDR X2, [X8 + 0x2C0]
	0x0335271C BLR X9
	0x03352720 LDR X0, [X20 + 0x10]
	0x03352724 CBZ X0, 0x33527A8
	0x03352728 LDR X8, [X0]
	0x0335272C MOV X1, X19
	0x03352730 LDR X9, [X8 + 0x398]
	0x03352734 LDR X2, [X8 + 0x3A0]
	0x03352738 BLR X9
	0x0335273C TBNZ X0, 0x1F, 0x33527AC
	0x03352740 LDR X8, [X20]
	0x03352744 MOV W21, W0
	0x03352748 MOV X0, X20
	0x0335274C MOV W1, W21
	0x03352750 LDR X9, [X8 + 0x2A8]
	0x03352754 LDR X3, [X8 + 0x2B0]
	0x03352758 MOV X2, X19
	0x0335275C BLR X9
	0x03352760 LDR X0, [X20 + 0x10]
	0x03352764 CBZ X0, 0x33527A8
	0x03352768 LDR X8, [X0]
	0x0335276C MOV W1, W21
	0x03352770 LDR X9, [X8 + 0x3D8]
	0x03352774 LDR X2, [X8 + 0x3E0]
	0x03352778 BLR X9
	0x0335277C LDR X8, [X20]
	0x03352780 LDR X9, [X8 + 0x2F8]
	0x03352784 LDR X3, [X8 + 0x300]
	0x03352788 MOV X0, X20
	0x0335278C MOV W1, W21
	0x03352790 MOV X2, X19
	0x03352794 BLR X9
	0x03352798 LDP X20, X19, [X31 + 0x20]
	0x0335279C LDP X22, X21, [X31 + 0x10]
	0x033527A0 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+16]
	004 Compare X8, 0
	005 JumpIfEqual {24}
	006 Move W9, [X0+32]
	007 Move W10, [X8+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W9, [X0+37]
	010 Compare W9, 0
	011 JumpIfEqual {14}
	012 Move X8, [X8+16]
	013 Move [X0+37], W31
	014 Move X8, [X0+24]
	015 Compare X8, 0
	016 JumpIfEqual {19}
	017 Move X8, [X8+32]
	018 Move [X0+24], X8
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CSET not yet implemented."
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Return X0
	024 Call 0x1C17F20
	025 Move X0, 0xDA2000
	026 Move X0, [X0+1456]
	027 Call 0x1C17D08
	028 Call 0x1C17F10
	029 Move X19, X0
	030 Move X0, 0xDCC000
	031 Move X0, [X0+648]
	032 Call 0x1C17D08
	033 Move X1, X0
	034 Move X0, X19
	035 Move X2, X31
	036 Call InvalidOperationException..ctor, X0, X1
	037 Move X0, 0xDD9000
	038 Move X0, [X0+800]
	039 Call 0x1C17D08
	040 Move X1, X0
	041 Move X0, X19
	042 Call 0x1C17DEC

Method: System.Void Reset()

Disassembly:
	0x033527A4 RET
	0x033527A8 BL 0x1C16F20
	0x033527AC ADRP X0, 0xDA9000
	0x033527B0 LDR X0, [X0 + 0x578]
	0x033527B4 BL 0x1C16D08
	0x033527B8 BL 0x1C16F10
	0x033527BC MOV X19, X0
	0x033527C0 ADRP X0, 0xDD8000
	0x033527C4 LDR X0, [X0 + 0x378]
	0x033527C8 BL 0x1C16D08
	0x033527CC MOV X1, X0
	0x033527D0 MOV X0, X19
	0x033527D4 MOV X2, X31
	0x033527D8 BL 0x3314A68
	0x033527DC ADRP X0, 0xDD8000
	0x033527E0 LDR X0, [X0 + 0x380]
	0x033527E4 BL 0x1C16D08
	0x033527E8 MOV X1, X0
	0x033527EC MOV X0, X19
	0x033527F0 BL 0x1C16DEC
	0x033527F4 CMP W1, 0x1
	0x033527F8 MOV X22, X0
	0x033527FC B.NE 0x3352888
	0x03352800 MOV X0, X22
	0x03352804 BL 0x3EB1AD0
	0x03352808 MOV X22, X0
	0x0335280C ADRP X0, 0xDA7000
	0x03352810 LDR X0, [X0 + 0xCC0]
	0x03352814 BL 0x1C16D08
	0x03352818 LDR X8, [X22]
	0x0335281C LDR X1, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+16]
	004 Compare X8, 0
	005 JumpIfEqual {15}
	006 Move W9, [X0+32]
	007 Move W8, [X8+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W8, 1
	010 Move [X0+37], W8
	011 Move [X0+24], X31
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return 
	015 Call 0x1C17F20
	016 Move X0, 0xDA2000
	017 Move X0, [X0+1456]
	018 Call 0x1C17D08
	019 Call 0x1C17F10
	020 Move X19, X0
	021 Move X0, 0xDCC000
	022 Move X0, [X0+648]
	023 Call 0x1C17D08
	024 Move X1, X0
	025 Move X0, X19
	026 Move X2, X31
	027 Call InvalidOperationException..ctor, X0, X1
	028 Move X0, 0xDD9000
	029 Move X0, [X0+808]
	030 Call 0x1C17D08
	031 Move X1, X0
	032 Move X0, X19
	033 Call 0x1C17DEC

