Type: System.Collections.ListDictionaryInternal/NodeEnumerator

Method: System.Void .ctor(System.Collections.ListDictionaryInternal list)

Disassembly:
	0x03351F9C LDR X20, [X20]
	0x03351FA0 LDR X8, [X20 + 0x38]
	0x03351FA4 CBNZ X8, 0x3351FB4
	0x03351FA8 MOV X0, X20
	0x03351FAC BL 0x1C5C6E0
	0x03351FB0 LDR X8, [X20 + 0x38]
	0x03351FB4 LDR X0, [X8 + 0x10]
	0x03351FB8 LDRB W8, [X0 + 0x135]
	0x03351FBC TBNZ X8, 0x0, 0x3351FC4
	0x03351FC0 BL 0x1C5C684
	0x03351FC4 LDR W8, [X0 + 0xE0]
	0x03351FC8 CBNZ W8, 0x3351FD0
	0x03351FCC BL 0x1C16DFC
	0x03351FD0 LDR X8, [X20 + 0x38]
	0x03351FD4 LDR X0, [X8 + 0x10]
	0x03351FD8 LDRB W8, [X0 + 0x135]
	0x03351FDC TBNZ X8, 0x0, 0x3351FE4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Move [X19+16], X20
	009 Compare X20, 0
	010 JumpIfEqual {20}
	011 Move W8, [X20+24]
	012 Move W9, 1
	013 Move [X19+36], W9
	014 Move [X19+24], X31
	015 Move [X19+32], W8
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Return 
	020 Call 0x1C17F20

Method: System.Object get_Current()

Disassembly:
	0x03352134 BLR X9
	0x03352138 LDP X20, X19, [X31 + 0x20]
	0x0335213C LDP X22, X21, [X31 + 0x10]
	0x03352140 LDR X30, [X31], #0x30
	0x03352144 RET
	0x03352148 BL 0x1C16F20
	0x0335214C ADRP X0, 0xDA9000
	0x03352150 LDR X0, [X0 + 0x760]
	0x03352154 BL 0x1C16D08
	0x03352158 BL 0x1C16F10
	0x0335215C MOV X19, X0
	0x03352160 ADRP X0, 0xDAC000
	0x03352164 LDR X0, [X0 + 0x130]
	0x03352168 BL 0x1C16D08
	0x0335216C MOV X20, X0
	0x03352170 ADRP X0, 0xDC9000
	0x03352174 LDR X0, [X0 + 0x660]
	0x03352178 BL 0x1C16D08
	0x0335217C MOV X2, X0
	0x03352180 MOV X0, X19
	0x03352184 MOV X1, X20
	0x03352188 MOV X3, X31
	0x0335218C BL 0x3311888
	0x03352190 ADRP X0, 0xDD8000
	0x03352194 LDR X0, [X0 + 0x360]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x108B000
	007 Move X20, 0xDAA000
	008 Move W8, [X21+3527]
	009 Move X20, [X20+3856]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xDAA000
	016 Move X0, [X0+3856]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3527], W8
	020 Move X0, X19
	021 Call NodeEnumerator.get_Entry, X0
	022 Move X8, [X20]
	023 Move [X31], X0
	024 Move [X31+8], X1
	025 Add X1, X31, 0
	026 Move X0, X8
	027 Call 0x1C17E04
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X30, [X31+16]
	031 Move X21, [X31+24]
	032 Add X31, X31, 48
	033 Return X0

Method: System.Collections.DictionaryEntry get_Entry()

Disassembly:
	0x03352198 BL 0x1C16D08
	0x0335219C MOV X1, X0
	0x033521A0 MOV X0, X19
	0x033521A4 BL 0x1C16DEC
	0x033521A8 CMP W1, 0x1
	0x033521AC MOV X22, X0
	0x033521B0 B.NE 0x335223C
	0x033521B4 MOV X0, X22
	0x033521B8 BL 0x3EB1AD0
	0x033521BC MOV X22, X0
	0x033521C0 ADRP X0, 0xDA7000
	0x033521C4 LDR X0, [X0 + 0xCC0]
	0x033521C8 BL 0x1C16D08
	0x033521CC LDR X8, [X22]
	0x033521D0 LDR X1, [X8]
	0x033521D4 BL 0x1C17270
	0x033521D8 TBZ X0, 0x0, 0x3352214
	0x033521DC LDR X22, [X22]
	0x033521E0 BL 0x3EB1AE0
	0x033521E4 LDR X20, [X20 + 0x10]
	0x033521E8 MOV X0, X20
	0x033521EC BL 0x19903C0
	0x033521F0 LDR X8, [X20]
	0x033521F4 MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+24]
	004 Compare X8, 0
	005 JumpIfEqual {11}
	006 Move X0, [X8+16]
	007 Move X1, [X8+24]
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return X0
	011 Move X0, 0xDA2000
	012 Move X0, [X0+1456]
	013 Call 0x1C17D08
	014 Call 0x1C17F10
	015 Move X19, X0
	016 Move X0, 0xDCC000
	017 Move X0, [X0+656]
	018 Call 0x1C17D08
	019 Move X1, X0
	020 Move X0, X19
	021 Move X2, X31
	022 Call InvalidOperationException..ctor, X0, X1
	023 Move X0, 0xDD9000
	024 Move X0, [X0+736]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X19
	028 Call 0x1C17DEC

Method: System.Object get_Key()

Disassembly:
	0x033521F8 MOV W1, W19
	0x033521FC MOV X2, X21
	0x03352200 LDR X9, [X8 + 0x3A8]
	0x03352204 LDR X3, [X8 + 0x3B0]
	0x03352208 BLR X9
	0x0335220C MOV X0, X22
	0x03352210 BL 0x1C16F18
	0x03352214 MOVZ W0, 0x8
	0x03352218 BL 0x3EB1AF0
	0x0335221C LDR X8, [X22]
	0x03352220 STR X8, [X0]
	0x03352224 ADRP X1, 0xB62000
	0x03352228 ADD X1, X1, 0xE58
	0x0335222C MOV X2, X31
	0x03352230 BL 0x3EB1B00
	0x03352234 MOV X22, X0
	0x03352238 BL 0x3EB1AE0
	0x0335223C MOV X0, X22
	0x03352240 BL 0x1D2C690
	0x03352244 BL 0x1990590
	0x03352248 STR X30, [X31 - 0x10]!
	0x0335224C LDR X0, [X0 + 0x10]
	0x03352250 CBZ X0, 0x3352268
	0x03352254 LDR X8, [X0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+24]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move X0, [X8+16]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, 0xDA2000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0xDCC000
	016 Move X0, [X0+656]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0xDD9000
	023 Move X0, [X0+744]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Object get_Value()

Disassembly:
	0x03352258 LDR X2, [X8 + 0x2B8]
	0x0335225C LDR X1, [X8 + 0x2C0]
	0x03352260 LDR X30, [X31], #0x10
	0x03352264 BR X2
	0x03352268 BL 0x1C16F20
	0x0335226C STR X30, [X31 - 0x10]!
	0x03352270 LDR X0, [X0 + 0x10]
	0x03352274 CBZ X0, 0x335228C
	0x03352278 LDR X8, [X0]
	0x0335227C LDR X2, [X8 + 0x2A8]
	0x03352280 LDR X1, [X8 + 0x2B0]
	0x03352284 LDR X30, [X31], #0x10
	0x03352288 BR X2
	0x0335228C BL 0x1C16F20
	0x03352290 STR X30, [X31 - 0x10]!
	0x03352294 LDR X0, [X0 + 0x10]
	0x03352298 CBZ X0, 0x33522B0
	0x0335229C LDR X8, [X0]
	0x033522A0 LDR X2, [X8 + 0x2C8]
	0x033522A4 LDR X1, [X8 + 0x2D0]
	0x033522A8 LDR X30, [X31], #0x10
	0x033522AC BR X2
	0x033522B0 BL 0x1C16F20
	0x033522B4 STR X30, [X31 - 0x10]!

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+24]
	004 Compare X8, 0
	005 JumpIfEqual {10}
	006 Move X0, [X8+24]
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return X0
	010 Move X0, 0xDA2000
	011 Move X0, [X0+1456]
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X19, X0
	015 Move X0, 0xDCC000
	016 Move X0, [X0+656]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Move X2, X31
	021 Call InvalidOperationException..ctor, X0, X1
	022 Move X0, 0xDD9000
	023 Move X0, [X0+752]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Boolean MoveNext()

Disassembly:
	0x033522B8 LDR X0, [X0 + 0x10]
	0x033522BC CBZ X0, 0x33522D4
	0x033522C0 LDR X8, [X0]
	0x033522C4 LDR X2, [X8 + 0x2D8]
	0x033522C8 LDR X1, [X8 + 0x2E0]
	0x033522CC LDR X30, [X31], #0x10
	0x033522D0 BR X2
	0x033522D4 BL 0x1C16F20
	0x033522D8 STR X30, [X31 - 0x10]!
	0x033522DC LDR X0, [X0 + 0x10]
	0x033522E0 CBZ X0, 0x33522F8
	0x033522E4 LDR X8, [X0]
	0x033522E8 LDR X4, [X8 + 0x368]
	0x033522EC LDR X3, [X8 + 0x370]
	0x033522F0 LDR X30, [X31], #0x10
	0x033522F4 BR X4
	0x033522F8 BL 0x1C16F20
	0x033522FC STR X30, [X31 - 0x20]!
	0x03352300 STP X20, X19, [X31 + 0x10]
	0x03352304 TBNZ X1, 0x1F, 0x3352354
	0x03352308 MOV X20, X0
	0x0335230C LDR X0, [X0 + 0x10]
	0x03352310 CBZ X0, 0x33523B0
	0x03352314 LDR X8, [X0]
	0x03352318 MOV W19, W1
	0x0335231C LDR X9, [X8 + 0x298]
	0x03352320 LDR X1, [X8 + 0x2A0]
	0x03352324 BLR X9
	0x03352328 CMP W0, W19
	0x0335232C B.LE 0x3352354
	0x03352330 LDR X0, [X20 + 0x10]
	0x03352334 CBZ X0, 0x33523B0
	0x03352338 LDR X8, [X0]
	0x0335233C MOV W1, W19
	0x03352340 LDP X20, X19, [X31 + 0x10]
	0x03352344 LDR X3, [X8 + 0x2E8]
	0x03352348 LDR X2, [X8 + 0x2F0]
	0x0335234C LDR X30, [X31], #0x20
	0x03352350 BR X3

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+16]
	004 Compare X8, 0
	005 JumpIfEqual {24}
	006 Move W9, [X0+32]
	007 Move W10, [X8+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W9, [X0+36]
	010 Compare W9, 0
	011 JumpIfEqual {14}
	012 Move X8, [X8+16]
	013 Move [X0+36], W31
	014 Move X8, [X0+24]
	015 Compare X8, 0
	016 JumpIfEqual {19}
	017 Move X8, [X8+32]
	018 Move [X0+24], X8
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CSET not yet implemented."
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Return X0
	024 Call 0x1C17F20
	025 Move X0, 0xDA2000
	026 Move X0, [X0+1456]
	027 Call 0x1C17D08
	028 Call 0x1C17F10
	029 Move X19, X0
	030 Move X0, 0xDCC000
	031 Move X0, [X0+648]
	032 Call 0x1C17D08
	033 Move X1, X0
	034 Move X0, X19
	035 Move X2, X31
	036 Call InvalidOperationException..ctor, X0, X1
	037 Move X0, 0xDD9000
	038 Move X0, [X0+760]
	039 Call 0x1C17D08
	040 Move X1, X0
	041 Move X0, X19
	042 Call 0x1C17DEC

Method: System.Void Reset()

Disassembly:
	0x03352354 ADRP X0, 0xDA9000
	0x03352358 LDR X0, [X0 + 0x760]
	0x0335235C BL 0x1C16D08
	0x03352360 BL 0x1C16F10
	0x03352364 MOV X19, X0
	0x03352368 ADRP X0, 0xDAC000
	0x0335236C LDR X0, [X0 + 0x130]
	0x03352370 BL 0x1C16D08
	0x03352374 MOV X20, X0
	0x03352378 ADRP X0, 0xDC9000
	0x0335237C LDR X0, [X0 + 0x660]
	0x03352380 BL 0x1C16D08
	0x03352384 MOV X2, X0
	0x03352388 MOV X0, X19
	0x0335238C MOV X1, X20
	0x03352390 MOV X3, X31
	0x03352394 BL 0x3311888
	0x03352398 ADRP X0, 0xDD8000
	0x0335239C LDR X0, [X0 + 0x368]
	0x033523A0 BL 0x1C16D08
	0x033523A4 MOV X1, X0
	0x033523A8 MOV X0, X19
	0x033523AC BL 0x1C16DEC
	0x033523B0 BL 0x1C16F20
	0x033523B4 STR X30, [X31 - 0x30]!
	0x033523B8 STP X22, X21, [X31 + 0x10]
	0x033523BC STP X20, X19, [X31 + 0x20]
	0x033523C0 TBNZ X1, 0x1F, 0x335249C
	0x033523C4 MOV X20, X0
	0x033523C8 LDR X0, [X0 + 0x10]
	0x033523CC CBZ X0, 0x3352498

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+16]
	004 Compare X8, 0
	005 JumpIfEqual {15}
	006 Move W9, [X0+32]
	007 Move W8, [X8+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W8, 1
	010 Move [X0+36], W8
	011 Move [X0+24], X31
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return 
	015 Call 0x1C17F20
	016 Move X0, 0xDA2000
	017 Move X0, [X0+1456]
	018 Call 0x1C17D08
	019 Call 0x1C17F10
	020 Move X19, X0
	021 Move X0, 0xDCC000
	022 Move X0, [X0+648]
	023 Call 0x1C17D08
	024 Move X1, X0
	025 Move X0, X19
	026 Move X2, X31
	027 Call InvalidOperationException..ctor, X0, X1
	028 Move X0, 0xDD9000
	029 Move X0, [X0+768]
	030 Call 0x1C17D08
	031 Move X1, X0
	032 Move X0, X19
	033 Call 0x1C17DEC

