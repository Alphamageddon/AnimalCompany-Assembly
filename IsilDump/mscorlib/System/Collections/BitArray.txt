Type: System.Collections.BitArray

Method: System.Void .ctor(System.Int32 length)

Disassembly:
	0x0335835C BL 0x1C16DEC
	0x03358360 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move W2, W31

Method: System.Void .ctor(System.Int32 length, System.Boolean defaultValue)

Disassembly:
	0x03358364 STP X20, X19, [X31 + 0x10]
	0x03358368 ADRP X21, 0x1084000
	0x0335836C LDRB W8, [X21 + 0xDF7]
	0x03358370 MOV X20, X1
	0x03358374 MOV X19, X0
	0x03358378 TBNZ X8, 0x0, 0x33583A8
	0x0335837C ADRP X0, 0xD9B000
	0x03358380 LDR X0, [X0 + 0x9C8]
	0x03358384 BL 0x1C16CF4
	0x03358388 ADRP X0, 0xDA2000
	0x0335838C LDR X0, [X0 + 0x2F0]
	0x03358390 BL 0x1C16CF4
	0x03358394 ADRP X0, 0xD9B000
	0x03358398 LDR X0, [X0 + 0x9D0]
	0x0335839C BL 0x1C16CF4
	0x033583A0 MOVZ W8, 0x1
	0x033583A4 STRB W8, [X21 + 0xDF7]
	0x033583A8 MOV X0, X19
	0x033583AC MOV X1, X31
	0x033583B0 BL 0x33BDD8C
	0x033583B4 CBZ X20, 0x33584C0
	0x033583B8 ADRP X10, 0xDA2000
	0x033583BC LDR X8, [X20]
	0x033583C0 LDR X10, [X10 + 0x2F0]
	0x033583C4 LDRH W9, [X8 + 0x12E]
	0x033583C8 LDR X1, [X10]
	0x033583CC CBZ X9, 0x33583F0
	0x033583D0 LDR X10, [X8 + 0xB0]
	0x033583D4 ADD X10, X10, 0x8
	0x033583D8 LDUR X11, [X10 - 0x8]
	0x033583DC CMP X11, X1
	0x033583E0 B.EQ 0x3358400
	0x033583E4 SUBS X9, X9, 0x1
	0x033583E8 ADD X10, X10, 0x10
	0x033583EC B.NE 0x33583D8
	0x033583F0 MOVZ W2, 0x1
	0x033583F4 MOV X0, X20
	0x033583F8 BL 0x1C5C788
	0x033583FC B 0x3358410
	0x03358400 LDR W9, [X10]
	0x03358404 ADD W9, W9, 0x1
	0x03358408 ADD X8, X8, W9, 0x4, SXTW
	0x0335840C ADD X0, X8, 0x138
	0x03358410 LDP X8, X1, [X0]
	0x03358414 MOV X0, X20
	0x03358418 BLR X8
	0x0335841C CBZ W0, 0x3358458
	0x03358420 ADRP X8, 0xD9B000
	0x03358424 LDR X8, [X8 + 0x9D0]
	0x03358428 MOV W1, W0
	0x0335842C LDR X0, [X8]
	0x03358430 BL 0x1C16D6C
	0x03358434 LDR X8, [X19]
	0x03358438 STR X0, [X19 + 0x10]
	0x0335843C MOV X0, X19
	0x03358440 MOV X1, X20
	0x03358444 LDR X3, [X8 + 0x318]
	0x03358448 LDR X2, [X8 + 0x320]
	0x0335844C LDP X20, X19, [X31 + 0x10]
	0x03358450 LDP X30, X21, [X31], #0x20
	0x03358454 BR X3
	0x03358458 ADRP X8, 0xD9B000
	0x0335845C LDR X8, [X8 + 0x9C8]
	0x03358460 LDR X20, [X8]
	0x03358464 LDR X8, [X20 + 0x38]
	0x03358468 CBNZ X8, 0x3358478
	0x0335846C MOV X0, X20
	0x03358470 BL 0x1C5C6E0
	0x03358474 LDR X8, [X20 + 0x38]
	0x03358478 LDR X0, [X8 + 0x10]
	0x0335847C LDRB W8, [X0 + 0x135]
	0x03358480 TBNZ X8, 0x0, 0x3358488
	0x03358484 BL 0x1C5C684
	0x03358488 LDR W8, [X0 + 0xE0]
	0x0335848C CBNZ W8, 0x3358494
	0x03358490 BL 0x1C16DFC
	0x03358494 LDR X8, [X20 + 0x38]
	0x03358498 LDR X0, [X8 + 0x10]
	0x0335849C LDRB W8, [X0 + 0x135]
	0x033584A0 TBNZ X8, 0x0, 0x33584A8
	0x033584A4 BL 0x1C5C684
	0x033584A8 LDR X8, [X0 + 0xB8]
	0x033584AC LDR X8, [X8]
	0x033584B0 STR X8, [X19 + 0x10]
	0x033584B4 LDP X20, X19, [X31 + 0x10]
	0x033584B8 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1085000
	007 Move W8, [X22+3565]
	008 Move W20, W2
	009 Move W21, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD9D000
	016 Move X0, [X0+3672]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3565], W8
	020 Move X0, X19
	021 Move X1, X31
	022 Call Object..ctor, X0
	023 Move TEMP, X21
	024 And TEMP, TEMP, -2147483648
	025 Compare TEMP, -2147483648
	026 JumpIfEqual {65}
	027 Move X8, 0xD9D000
	028 Move X8, [X8+3672]
	029 Compare W21, 0
	030 JumpIfEqual {37}
	031 Subtract W9, W21, 1
	032 Add W10, W21, 30
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSEL not yet implemented."
	035 NotImplemented "Instruction SBFM not yet implemented."
	036 Add W1, W9, 1
	037 Move W1, W31
	038 Move X0, [X8]
	039 Call 0x1C17D6C
	040 Move [X19+16], X0
	041 Move [X19+24], W21
	042 Compare X0, 0
	043 JumpIfEqual {96}
	044 Move W8, [X0+24]
	045 Move X9, X8
	046 ShiftRight X9, 32
	047 And X9, X9, 0x7FFFFFFF
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X9, X31
	050 NotImplemented "Instruction SBFM not yet implemented."
	051 Move X11, W8
	052 Add X12, X0, 32
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move [X12], W10
	055 Add X9, X9, 1
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move [X19+28], W31
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X30, [X31+48]
	063 Return 
	064 Call 0x1C17F28
	065 Move [X31+12], W21
	066 Move X0, 0xD9C000
	067 Move X0, [X0+1880]
	068 Call 0x1C17D08
	069 Add X1, X31, 12
	070 Call 0x1C17E04
	071 Move X19, X0
	072 Move X0, 0xDA4000
	073 Move X0, [X0+1888]
	074 Call 0x1C17D08
	075 Call 0x1C17F10
	076 Move X20, X0
	077 Move X0, 0xDA4000
	078 Move X0, [X0+1896]
	079 Call 0x1C17D08
	080 Move X21, X0
	081 Move X0, 0xDC4000
	082 Move X0, [X0+1648]
	083 Call 0x1C17D08
	084 Move X3, X0
	085 Move X0, X20
	086 Move X1, X21
	087 Move X2, X19
	088 Move X4, X31
	089 Call ArgumentOutOfRangeException..ctor, X0, X1, X2, X3
	090 Move X0, 0xDD3000
	091 Move X0, [X0+1392]
	092 Call 0x1C17D08
	093 Move X1, X0
	094 Move X0, X20
	095 Call 0x1C17DEC
	096 Call 0x1C17F20

Method: System.Void .ctor(System.Collections.BitArray bits)

Disassembly:
	0x033584D8 LDR X0, [X0 + 0x538]
	0x033584DC BL 0x1C16D08
	0x033584E0 MOV X20, X0
	0x033584E4 ADRP X0, 0xDD2000
	0x033584E8 LDR X0, [X0 + 0x5D8]
	0x033584EC BL 0x1C16D08
	0x033584F0 MOV X2, X0
	0x033584F4 MOV X0, X19
	0x033584F8 MOV X1, X20
	0x033584FC MOV X3, X31
	0x03358500 BL 0x3315F7C
	0x03358504 ADRP X0, 0xDD2000
	0x03358508 LDR X0, [X0 + 0x5E0]
	0x0335850C BL 0x1C16D08
	0x03358510 MOV X1, X0
	0x03358514 MOV X0, X19
	0x03358518 BL 0x1C16DEC
	0x0335851C STP X30, X21, [X31 - 0x20]!
	0x03358520 STP X20, X19, [X31 + 0x10]
	0x03358524 ADRP X21, 0x1084000
	0x03358528 LDRB W8, [X21 + 0xDF8]
	0x0335852C MOV W20, W1
	0x03358530 MOV X19, X0
	0x03358534 TBNZ X8, 0x0, 0x335854C
	0x03358538 ADRP X0, 0xD9B000
	0x0335853C LDR X0, [X0 + 0x9D0]
	0x03358540 BL 0x1C16CF4
	0x03358544 MOVZ W8, 0x1
	0x03358548 STRB W8, [X21 + 0xDF8]
	0x0335854C LDR W8, [X19 + 0x18]
	0x03358550 CMP W8, W20
	0x03358554 B.GT 0x33585D0
	0x03358558 LDR X8, [X19 + 0x10]
	0x0335855C CBZ X8, 0x335862C
	0x03358560 LDR W8, [X8 + 0x18]
	0x03358564 CMP W8, W20
	0x03358568 B.EQ 0x33585C4
	0x0335856C ADRP X8, 0xD9B000
	0x03358570 LDR X8, [X8 + 0x9D0]
	0x03358574 CMP W20, 0x1
	0x03358578 LDR X0, [X8]
	0x0335857C B.LT 0x33585B8
	0x03358580 MOV W1, W20
	0x03358584 BL 0x1C16D6C
	0x03358588 LDR W4, [X19 + 0x18]
	0x0335858C MOV X20, X0
	0x03358590 CMP W4, 0x1
	0x03358594 B.LT 0x33585B0
	0x03358598 LDR X0, [X19 + 0x10]
	0x0335859C MOV W1, W31
	0x033585A0 MOV X2, X20
	0x033585A4 MOV W3, W31
	0x033585A8 MOV X5, X31
	0x033585AC BL 0x339FCE8
	0x033585B0 STR X20, [X19 + 0x10]
	0x033585B4 B 0x33585C4
	0x033585B8 MOVZ W1, 0x4
	0x033585BC BL 0x1C16D6C
	0x033585C0 STR X0, [X19 + 0x10]
	0x033585C4 LDP X20, X19, [X31 + 0x10]
	0x033585C8 LDP X30, X21, [X31], #0x20
	0x033585CC RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1085000
	006 Move W8, [X21+3566]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD9D000
	014 Move X0, [X0+3672]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3566], W8
	018 Move X0, X20
	019 Move X1, X31
	020 Call Object..ctor, X0
	021 Compare X19, 0
	022 JumpIfEqual {51}
	023 Move W10, [X19+24]
	024 Move X8, 0xD9D000
	025 Move X8, [X8+3672]
	026 Subtract W9, W10, 1
	027 Add W10, W10, 30
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSEL not yet implemented."
	030 NotImplemented "Instruction SBFM not yet implemented."
	031 Add W21, W9, 1
	032 Move W21, W31
	033 Move X0, [X8]
	034 Move W1, W21
	035 Call 0x1C17D6C
	036 Move [X20+16], X0
	037 Move X2, X0
	038 Move X0, [X19+16]
	039 Move W1, W31
	040 Move W3, W31
	041 Move W4, W21
	042 Move X5, X31
	043 Call Array.Copy, X0, X1, X2, X3, X4
	044 Move V0, [X19+24]
	045 Move [X20+24], D0
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return 
	051 Move X0, 0xDA1000
	052 Move X0, [X0+1320]
	053 Call 0x1C17D08
	054 Call 0x1C17F10
	055 Move X19, X0
	056 Move X0, 0xDD3000
	057 Move X0, [X0+1400]
	058 Call 0x1C17D08
	059 Move X1, X0
	060 Move X0, X19
	061 Move X2, X31
	062 Call ArgumentNullException..ctor, X0, X1
	063 Move X0, 0xDD3000
	064 Move X0, [X0+1408]
	065 Call 0x1C17D08
	066 Move X1, X0
	067 Move X0, X19
	068 Call 0x1C17DEC

Method: System.Boolean get_Item(System.Int32 index)

Disassembly:
	0x033585D0 ADRP X0, 0xDA3000

ISIL:
No ISIL was generated
Method: System.Void set_Item(System.Int32 index, System.Boolean value)

Disassembly:
	0x033586AC BL 0x1C24138
	0x033586B0 LDR X0, [X19]

ISIL:
	001 And W2, W2, 1

Method: System.Boolean Get(System.Int32 index)

Disassembly:
	0x033585D4 LDR X0, [X0 + 0x760]
	0x033585D8 BL 0x1C16D08
	0x033585DC BL 0x1C16F10
	0x033585E0 MOV X19, X0
	0x033585E4 ADRP X0, 0xDA5000
	0x033585E8 LDR X0, [X0 + 0xEC8]
	0x033585EC BL 0x1C16D08
	0x033585F0 MOV X20, X0
	0x033585F4 ADRP X0, 0xDC5000
	0x033585F8 LDR X0, [X0 + 0x2A0]
	0x033585FC BL 0x1C16D08
	0x03358600 MOV X2, X0
	0x03358604 MOV X0, X19
	0x03358608 MOV X1, X20
	0x0335860C MOV X3, X31
	0x03358610 BL 0x3311888
	0x03358614 ADRP X0, 0xDD2000
	0x03358618 LDR X0, [X0 + 0x5E8]
	0x0335861C BL 0x1C16D08
	0x03358620 MOV X1, X0
	0x03358624 MOV X0, X19
	0x03358628 BL 0x1C16DEC
	0x0335862C BL 0x1C16F20
	0x03358630 LDR W0, [X0 + 0x18]
	0x03358634 RET
	0x03358638 MOV W0, W31
	0x0335863C RET
	0x03358640 MOV W0, W31
	0x03358644 RET
	0x03358648 MOV W0, W31
	0x0335864C RET
	0x03358650 STR X30, [X31 - 0x20]!
	0x03358654 STP X20, X19, [X31 + 0x10]
	0x03358658 ADRP X20, 0x1084000
	0x0335865C LDRB W8, [X20 + 0xDF9]
	0x03358660 MOV X19, X0
	0x03358664 TBNZ X8, 0x0, 0x335867C
	0x03358668 ADRP X0, 0xDA1000
	0x0335866C LDR X0, [X0 + 0xCC0]
	0x03358670 BL 0x1C16CF4
	0x03358674 MOVZ W8, 0x1
	0x03358678 STRB W8, [X20 + 0xDF9]
	0x0335867C LDR X0, [X19 + 0x20]!
	0x03358680 CBNZ X0, 0x33586B4
	0x03358684 ADRP X8, 0xDA1000
	0x03358688 LDR X8, [X8 + 0xCC0]
	0x0335868C LDR X0, [X8]
	0x03358690 BL 0x1C16F10
	0x03358694 MOV X1, X31
	0x03358698 MOV X20, X0
	0x0335869C BL 0x33BDD8C
	0x033586A0 MOV X0, X19
	0x033586A4 MOV X1, X20
	0x033586A8 MOV X2, X31

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move TEMP, X1
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {30}
	010 Move W8, [X0+24]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X8, [X0+16]
	013 Compare X8, 0
	014 JumpIfEqual {61}
	015 Move W10, [X8+24]
	016 Move W9, W1
	017 ShiftRight W9, 5
	018 And W9, W9, 0x7FFFFFFF
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Add X8, X8, W9
	021 Move W8, [X8+32]
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X30, [X31+16]
	025 Move X21, [X31+24]
	026 NotImplemented "Instruction LSRV not yet implemented."
	027 And W0, W8, 1
	028 Add X31, X31, 48
	029 Return X0
	030 Move [X31+12], W1
	031 Move X0, 0xD9C000
	032 Move X0, [X0+1880]
	033 Call 0x1C17D08
	034 Add X1, X31, 12
	035 Call 0x1C17E04
	036 Move X19, X0
	037 Move X0, 0xDA4000
	038 Move X0, [X0+1888]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X20, X0
	042 Move X0, 0xDA7000
	043 Move X0, [X0+304]
	044 Call 0x1C17D08
	045 Move X21, X0
	046 Move X0, 0xDC4000
	047 Move X0, [X0+1632]
	048 Call 0x1C17D08
	049 Move X3, X0
	050 Move X0, X20
	051 Move X1, X21
	052 Move X2, X19
	053 Move X4, X31
	054 Call ArgumentOutOfRangeException..ctor, X0, X1, X2, X3
	055 Move X0, 0xDD3000
	056 Move X0, [X0+1416]
	057 Call 0x1C17D08
	058 Move X1, X0
	059 Move X0, X20
	060 Call 0x1C17DEC
	061 Call 0x1C17F20
	062 Call 0x1C17F28

Method: System.Void Set(System.Int32 index, System.Boolean value)

Disassembly:
	0x033586B4 LDP X20, X19, [X31 + 0x10]
	0x033586B8 LDR X30, [X31], #0x20
	0x033586BC RET
	0x033586C0 STR X30, [X31 - 0x20]!
	0x033586C4 STP X20, X19, [X31 + 0x10]
	0x033586C8 TBNZ X1, 0x1F, 0x3358700
	0x033586CC LDR W8, [X0 + 0x18]
	0x033586D0 CMP W8, W1
	0x033586D4 B.LE 0x3358700
	0x033586D8 LDR X8, [X0 + 0x10]
	0x033586DC CBZ X8, 0x335875C
	0x033586E0 LDR W9, [X8 + 0x18]
	0x033586E4 CMP W9, W1
	0x033586E8 B.LS 0x3358760
	0x033586EC ADD X8, X8, W1, 0x3, UXTW
	0x033586F0 LDR X0, [X8 + 0x20]
	0x033586F4 LDP X20, X19, [X31 + 0x10]
	0x033586F8 LDR X30, [X31], #0x20
	0x033586FC RET
	0x03358700 ADRP X0, 0xDA3000
	0x03358704 LDR X0, [X0 + 0x760]
	0x03358708 BL 0x1C16D08
	0x0335870C BL 0x1C16F10
	0x03358710 MOV X19, X0
	0x03358714 ADRP X0, 0xDA6000
	0x03358718 LDR X0, [X0 + 0x130]
	0x0335871C BL 0x1C16D08
	0x03358720 MOV X20, X0
	0x03358724 ADRP X0, 0xDC3000
	0x03358728 LDR X0, [X0 + 0x660]
	0x0335872C BL 0x1C16D08
	0x03358730 MOV X2, X0
	0x03358734 MOV X0, X19
	0x03358738 MOV X1, X20
	0x0335873C MOV X3, X31
	0x03358740 BL 0x3311888
	0x03358744 ADRP X0, 0xDD2000
	0x03358748 LDR X0, [X0 + 0x5F0]
	0x0335874C BL 0x1C16D08
	0x03358750 MOV X1, X0
	0x03358754 MOV X0, X19
	0x03358758 BL 0x1C16DEC
	0x0335875C BL 0x1C16F20
	0x03358760 BL 0x1C16F28
	0x03358764 STR X30, [X31 - 0x30]!
	0x03358768 STP X22, X21, [X31 + 0x10]
	0x0335876C STP X20, X19, [X31 + 0x20]
	0x03358770 TBNZ X1, 0x1F, 0x33587DC
	0x03358774 LDR W8, [X0 + 0x18]
	0x03358778 MOV W21, W1
	0x0335877C MOV X19, X0
	0x03358780 CMP W8, W1
	0x03358784 B.LE 0x33587DC
	0x03358788 LDR X22, [X19 + 0x10]
	0x0335878C CBZ X22, 0x3358838
	0x03358790 MOV X20, X2
	0x03358794 CBZ X2, 0x33587AC
	0x03358798 LDR X8, [X22]
	0x0335879C MOV X0, X20
	0x033587A0 LDR X1, [X8 + 0x40]
	0x033587A4 BL 0x1C16E00
	0x033587A8 CBZ X0, 0x3358840

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move TEMP, X1
	007 And TEMP, TEMP, -2147483648
	008 Compare TEMP, -2147483648
	009 JumpIfEqual {38}
	010 Move W8, [X0+24]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X8, [X0+16]
	013 Compare X8, 0
	014 JumpIfEqual {69}
	015 Move W10, [X8+24]
	016 Move W9, W1
	017 ShiftRight W9, 5
	018 And W9, W9, 0x7FFFFFFF
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Add X8, X8, W9
	021 Move W9, [X8+32]
	022 Move W10, 1
	023 NotImplemented "Instruction LSLV not yet implemented."
	024 And W31, W2, 1
	025 NotImplemented "Instruction BIC not yet implemented."
	026 Or W9, W9, W10
	027 NotImplemented "Instruction CSEL not yet implemented."
	028 Move [X8+32], W9
	029 Move W8, [X0+28]
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+16]
	033 Move X21, [X31+24]
	034 Add W8, W8, 1
	035 Move [X0+28], W8
	036 Add X31, X31, 48
	037 Return 
	038 Move [X31+12], W1
	039 Move X0, 0xD9C000
	040 Move X0, [X0+1880]
	041 Call 0x1C17D08
	042 Add X1, X31, 12
	043 Call 0x1C17E04
	044 Move X19, X0
	045 Move X0, 0xDA4000
	046 Move X0, [X0+1888]
	047 Call 0x1C17D08
	048 Call 0x1C17F10
	049 Move X20, X0
	050 Move X0, 0xDA7000
	051 Move X0, [X0+304]
	052 Call 0x1C17D08
	053 Move X21, X0
	054 Move X0, 0xDC4000
	055 Move X0, [X0+1632]
	056 Call 0x1C17D08
	057 Move X3, X0
	058 Move X0, X20
	059 Move X1, X21
	060 Move X2, X19
	061 Move X4, X31
	062 Call ArgumentOutOfRangeException..ctor, X0, X1, X2, X3
	063 Move X0, 0xDD3000
	064 Move X0, [X0+1424]
	065 Call 0x1C17D08
	066 Move X1, X0
	067 Move X0, X20
	068 Call 0x1C17DEC
	069 Call 0x1C17F20
	070 Call 0x1C17F28

Method: System.Void SetAll(System.Boolean value)

Disassembly:
	0x033587AC LDR W8, [X22 + 0x18]
	0x033587B0 CMP W8, W21
	0x033587B4 B.LS 0x335883C
	0x033587B8 ADD X8, X22, W21, 0x3, UXTW
	0x033587BC STR X20, [X8 + 0x20]
	0x033587C0 LDR W8, [X19 + 0x1C]
	0x033587C4 LDP X22, X21, [X31 + 0x10]
	0x033587C8 ADD W8, W8, 0x1
	0x033587CC STR W8, [X19 + 0x1C]
	0x033587D0 LDP X20, X19, [X31 + 0x20]
	0x033587D4 LDR X30, [X31], #0x30
	0x033587D8 RET
	0x033587DC ADRP X0, 0xDA3000
	0x033587E0 LDR X0, [X0 + 0x760]
	0x033587E4 BL 0x1C16D08
	0x033587E8 BL 0x1C16F10
	0x033587EC MOV X19, X0
	0x033587F0 ADRP X0, 0xDA6000
	0x033587F4 LDR X0, [X0 + 0x130]
	0x033587F8 BL 0x1C16D08
	0x033587FC MOV X20, X0
	0x03358800 ADRP X0, 0xDC3000
	0x03358804 LDR X0, [X0 + 0x660]
	0x03358808 BL 0x1C16D08
	0x0335880C MOV X2, X0
	0x03358810 MOV X0, X19
	0x03358814 MOV X1, X20
	0x03358818 MOV X3, X31

ISIL:
	001 Move [X31-16], X30
	002 Move W10, [X0+24]
	003 Subtract W11, W10, 1
	004 Move X12, [X0+16]
	005 Compare X12, 0
	006 JumpIfEqual {26}
	007 Add W13, W10, 30
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W10, [X12+24]
	010 NotImplemented "Instruction CSEL not yet implemented."
	011 NotImplemented "Instruction SBFM not yet implemented."
	012 Move X8, X31
	013 NotImplemented "Instruction SBFM not yet implemented."
	014 Add W11, W11, 1
	015 Add X12, X12, 32
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move [X12], W9
	018 Add X8, X8, 1
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move W8, [X0+28]
	021 Add W8, W8, 1
	022 Move [X0+28], W8
	023 Move X30, [X31+16]
	024 Return 
	025 Call 0x1C17F28
	026 Call 0x1C17F20

Method: System.Int32 get_Length()

Disassembly:
	0x0335881C BL 0x3311888
	0x03358820 ADRP X0, 0xDD2000

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void CopyTo(System.Array array, System.Int32 index)

Disassembly:
	0x03358824 LDR X0, [X0 + 0x5F8]
	0x03358828 BL 0x1C16D08
	0x0335882C MOV X1, X0
	0x03358830 MOV X0, X19
	0x03358834 BL 0x1C16DEC
	0x03358838 BL 0x1C16F20
	0x0335883C BL 0x1C16F28
	0x03358840 BL 0x1C16F44
	0x03358844 MOV X1, X31
	0x03358848 BL 0x1C16DEC
	0x0335884C STR X30, [X31 - 0x30]!
	0x03358850 STP X22, X21, [X31 + 0x10]
	0x03358854 STP X20, X19, [X31 + 0x20]
	0x03358858 LDR X21, [X0 + 0x10]
	0x0335885C CBZ X21, 0x33588E0
	0x03358860 LDR W22, [X0 + 0x18]
	0x03358864 LDR W8, [X21 + 0x18]
	0x03358868 MOV X19, X0
	0x0335886C MOV X20, X1
	0x03358870 CMP W22, W8
	0x03358874 B.NE 0x3358890
	0x03358878 ADD W1, W22, 0x1
	0x0335887C MOV X0, X19
	0x03358880 BL 0x33588F4
	0x03358884 LDR X21, [X19 + 0x10]
	0x03358888 CBZ X21, 0x33588E0
	0x0335888C LDR W22, [X19 + 0x18]
	0x03358890 CBZ X20, 0x33588A8
	0x03358894 LDR X8, [X21]
	0x03358898 MOV X0, X20
	0x0335889C LDR X1, [X8 + 0x40]
	0x033588A0 BL 0x1C16E00
	0x033588A4 CBZ X0, 0x33588E8
	0x033588A8 LDR W8, [X21 + 0x18]
	0x033588AC CMP W22, W8
	0x033588B0 B.CS 0x33588E4
	0x033588B4 ADD X8, X21, W22, 0x3, SXTW
	0x033588B8 STR X20, [X8 + 0x20]
	0x033588BC LDR V0, [X19 + 0x18]
	0x033588C0 MOVI V1.2S, 0x1
	0x033588C4 LDP X22, X21, [X31 + 0x10]
	0x033588C8 ADD S1.2S, S0.2S, S1.2S
	0x033588CC STR D1, [X19 + 0x18]
	0x033588D0 LDP X20, X19, [X31 + 0x20]
	0x033588D4 FMOV W0, S0
	0x033588D8 LDR X30, [X31], #0x30
	0x033588DC RET
	0x033588E0 BL 0x1C16F20
	0x033588E4 BL 0x1C16F28
	0x033588E8 BL 0x1C16F44
	0x033588EC MOV X1, X31
	0x033588F0 BL 0x1C16DEC
	0x033588F4 STR X30, [X31 - 0x10]!
	0x033588F8 LDR X8, [X0 + 0x10]
	0x033588FC CBZ X8, 0x335894C
	0x03358900 LDR X8, [X8 + 0x18]
	0x03358904 CMP W8, W1
	0x03358908 B.GE 0x3358944
	0x0335890C LDR X12, [X0]
	0x03358910 UBFM W9, W8, 0x1F, 0x1E
	0x03358914 MOVN W10, 0x80100000
	0x03358918 CMP W9, W10
	0x0335891C MOVZ W11, 0x4
	0x03358920 CSEL W9, W9, W10, CC
	0x03358924 CMP X8, 0x0
	0x03358928 LDR X3, [X12 + 0x288]
	0x0335892C LDR X2, [X12 + 0x290]
	0x03358930 CSEL W8, W11, W9, EQ
	0x03358934 CMP W8, W1
	0x03358938 CSEL W1, W1, W8, LT
	0x0335893C LDR X30, [X31], #0x10
	0x03358940 BR X3
	0x03358944 LDR X30, [X31], #0x10
	0x03358948 RET
	0x0335894C BL 0x1C16F20
	0x03358950 LDR X9, [X0]
	0x03358954 LDR W8, [X0 + 0x18]
	0x03358958 MOV X2, X1
	0x0335895C LDR X4, [X9 + 0x3B8]
	0x03358960 LDR X3, [X9 + 0x3C0]
	0x03358964 MOV W1, W8
	0x03358968 BR X4
	0x0335896C STP X30, X19, [X31 - 0x10]!
	0x03358970 LDR W2, [X0 + 0x18]
	0x03358974 MOV X19, X0
	0x03358978 CMP W2, 0x1
	0x0335897C B.LT 0x3358994
	0x03358980 LDR X0, [X19 + 0x10]
	0x03358984 MOV W1, W31
	0x03358988 MOV X3, X31
	0x0335898C BL 0x339FA34
	0x03358990 STR W31, [X19 + 0x18]
	0x03358994 LDR W8, [X19 + 0x1C]
	0x03358998 ADD W8, W8, 0x1
	0x0335899C STR W8, [X19 + 0x1C]
	0x033589A0 LDP X30, X19, [X31], #0x10
	0x033589A4 RET
	0x033589A8 STP X30, X21, [X31 - 0x20]!
	0x033589AC STP X20, X19, [X31 + 0x10]
	0x033589B0 ADRP X21, 0x1084000
	0x033589B4 ADRP X20, 0xDC8000
	0x033589B8 LDRB W8, [X21 + 0xDFA]
	0x033589BC LDR X20, [X20 + 0xBA0]
	0x033589C0 MOV X19, X0
	0x033589C4 TBNZ X8, 0x0, 0x33589DC
	0x033589C8 ADRP X0, 0xDC8000
	0x033589CC LDR X0, [X0 + 0xBA0]
	0x033589D0 BL 0x1C16CF4
	0x033589D4 MOVZ W8, 0x1
	0x033589D8 STRB W8, [X21 + 0xDFA]
	0x033589DC LDR X0, [X20]
	0x033589E0 LDR W21, [X19 + 0x18]
	0x033589E4 BL 0x1C16F10
	0x033589E8 MOV W1, W21
	0x033589EC MOV X20, X0
	0x033589F0 BL 0x3358210
	0x033589F4 CBZ X20, 0x3358A2C
	0x033589F8 LDR V0, [X19 + 0x18]
	0x033589FC LDR X2, [X20 + 0x10]
	0x03358A00 MOV W1, W31
	0x03358A04 MOV W3, W31
	0x03358A08 STR D0, [X20 + 0x18]
	0x03358A0C LDR X0, [X19 + 0x10]
	0x03358A10 LDR W4, [X19 + 0x18]
	0x03358A14 MOV X5, X31
	0x03358A18 BL 0x339FCE8
	0x03358A1C MOV X0, X20
	0x03358A20 LDP X20, X19, [X31 + 0x10]
	0x03358A24 LDP X30, X21, [X31], #0x20
	0x03358A28 RET
	0x03358A2C BL 0x1C16F20
	0x03358A30 STP X30, X21, [X31 - 0x20]!
	0x03358A34 STP X20, X19, [X31 + 0x10]
	0x03358A38 LDR W8, [X0 + 0x18]
	0x03358A3C MOV X19, X0
	0x03358A40 CMP W8, 0x1
	0x03358A44 CBZ X1, 0x3358A9C
	0x03358A48 B.LT 0x3358ADC
	0x03358A4C MOV X20, X1
	0x03358A50 MOV X21, X31
	0x03358A54 LDR X9, [X19 + 0x10]
	0x03358A58 CBZ X9, 0x3358AF8
	0x03358A5C LDR W10, [X9 + 0x18]
	0x03358A60 CMP X21, X10
	0x03358A64 B.CS 0x3358AF4
	0x03358A68 ADD X9, X9, X21, 0x3, LSL
	0x03358A6C LDR X0, [X9 + 0x20]
	0x03358A70 CBZ X0, 0x3358A8C
	0x03358A74 LDR X8, [X0]
	0x03358A78 MOV X1, X20
	0x03358A7C LDP X9, X2, [X8 + 0x138]
	0x03358A80 BLR X9
	0x03358A84 TBNZ X0, 0x0, 0x3358AEC
	0x03358A88 LDR W8, [X19 + 0x18]
	0x03358A8C ADD X21, X21, 0x1
	0x03358A90 CMP X21, W8, SXTW
	0x03358A94 B.LT 0x3358A54
	0x03358A98 B 0x3358ADC
	0x03358A9C B.LT 0x3358ADC
	0x03358AA0 LDR X11, [X19 + 0x10]
	0x03358AA4 CBZ X11, 0x3358AF8
	0x03358AA8 LDR W10, [X11 + 0x18]
	0x03358AAC MOV X9, X31
	0x03358AB0 ADD X11, X11, 0x20
	0x03358AB4 CMP W9, W10
	0x03358AB8 B.CS 0x3358AF4
	0x03358ABC LDR X12, [X11, X9, LSL #3]
	0x03358AC0 ADD X9, X9, 0x1
	0x03358AC4 CMP X12, 0x0
	0x03358AC8 CSET W0, EQ
	0x03358ACC CMP W9, W8
	0x03358AD0 B.GE 0x3358AE0
	0x03358AD4 CBNZ X12, 0x3358AB4
	0x03358AD8 B 0x3358AE0
	0x03358ADC MOV W0, W31
	0x03358AE0 LDP X20, X19, [X31 + 0x10]
	0x03358AE4 LDP X30, X21, [X31], #0x20
	0x03358AE8 RET
	0x03358AEC MOVZ W0, 0x1
	0x03358AF0 B 0x3358AE0
	0x03358AF4 BL 0x1C16F28
	0x03358AF8 BL 0x1C16F20
	0x03358AFC LDR X8, [X0]
	0x03358B00 MOV W2, W31
	0x03358B04 LDR X4, [X8 + 0x368]
	0x03358B08 LDR X3, [X8 + 0x370]
	0x03358B0C BR X4
	0x03358B10 STP X30, X21, [X31 - 0x20]!
	0x03358B14 STP X20, X19, [X31 + 0x10]
	0x03358B18 MOV W19, W2
	0x03358B1C MOV X20, X1
	0x03358B20 MOV X21, X0
	0x03358B24 CBZ X1, 0x3358B3C
	0x03358B28 MOV X0, X20
	0x03358B2C MOV X1, X31
	0x03358B30 BL 0x339FCE4
	0x03358B34 CMP W0, 0x1
	0x03358B38 B.NE 0x3358B60
	0x03358B3C LDR X0, [X21 + 0x10]
	0x03358B40 LDR W4, [X21 + 0x18]
	0x03358B44 MOV X2, X20
	0x03358B48 MOV W3, W19
	0x03358B4C LDP X20, X19, [X31 + 0x10]
	0x03358B50 MOV W1, W31
	0x03358B54 MOV X5, X31
	0x03358B58 LDP X30, X21, [X31], #0x20
	0x03358B5C B 0x339FCE8
	0x03358B60 ADRP X0, 0xDA3000
	0x03358B64 LDR X0, [X0 + 0x578]
	0x03358B68 BL 0x1C16D08
	0x03358B6C BL 0x1C16F10
	0x03358B70 MOV X19, X0
	0x03358B74 ADRP X0, 0xDC4000
	0x03358B78 LDR X0, [X0 + 0x308]
	0x03358B7C BL 0x1C16D08
	0x03358B80 MOV X20, X0
	0x03358B84 ADRP X0, 0xDC3000
	0x03358B88 LDR X0, [X0 + 0x640]
	0x03358B8C BL 0x1C16D08
	0x03358B90 MOV X2, X0
	0x03358B94 MOV X0, X19
	0x03358B98 MOV X1, X20
	0x03358B9C MOV X3, X31
	0x03358BA0 BL 0x330E16C
	0x03358BA4 ADRP X0, 0xDD2000
	0x03358BA8 LDR X0, [X0 + 0x600]
	0x03358BAC BL 0x1C16D08
	0x03358BB0 MOV X1, X0
	0x03358BB4 MOV X0, X19
	0x03358BB8 BL 0x1C16DEC
	0x03358BBC STP X30, X23, [X31 - 0x30]!
	0x03358BC0 STP X22, X21, [X31 + 0x10]
	0x03358BC4 STP X20, X19, [X31 + 0x20]
	0x03358BC8 LDR W8, [X0 + 0x18]
	0x03358BCC SUB W8, W8, W1
	0x03358BD0 CMP W8, W4
	0x03358BD4 B.LT 0x3358C2C
	0x03358BD8 MOV W19, W4
	0x03358BDC MOV W20, W3
	0x03358BE0 MOV X23, X0
	0x03358BE4 MOV W21, W1
	0x03358BE8 MOV X22, X2
	0x03358BEC CBZ X2, 0x3358C04
	0x03358BF0 MOV X0, X22
	0x03358BF4 MOV X1, X31
	0x03358BF8 BL 0x339FCE4
	0x03358BFC CMP W0, 0x1
	0x03358C00 B.NE 0x3358C60
	0x03358C04 LDR X0, [X23 + 0x10]
	0x03358C08 MOV W1, W21
	0x03358C0C MOV X2, X22
	0x03358C10 MOV W3, W20
	0x03358C14 MOV W4, W19
	0x03358C18 LDP X20, X19, [X31 + 0x20]
	0x03358C1C LDP X22, X21, [X31 + 0x10]
	0x03358C20 MOV X5, X31
	0x03358C24 LDP X30, X23, [X31], #0x30
	0x03358C28 B 0x339FCE8
	0x03358C2C ADRP X0, 0xDA3000
	0x03358C30 LDR X0, [X0 + 0x578]
	0x03358C34 BL 0x1C16D08
	0x03358C38 BL 0x1C16F10
	0x03358C3C MOV X19, X0
	0x03358C40 ADRP X0, 0xDC3000
	0x03358C44 LDR X0, [X0 + 0x760]
	0x03358C48 BL 0x1C16D08
	0x03358C4C MOV X1, X0
	0x03358C50 MOV X0, X19
	0x03358C54 MOV X2, X31
	0x03358C58 BL 0x3314A68
	0x03358C5C B 0x3358CA4
	0x03358C60 ADRP X0, 0xDA3000
	0x03358C64 LDR X0, [X0 + 0x578]
	0x03358C68 BL 0x1C16D08
	0x03358C6C BL 0x1C16F10
	0x03358C70 MOV X19, X0
	0x03358C74 ADRP X0, 0xDC4000
	0x03358C78 LDR X0, [X0 + 0x308]
	0x03358C7C BL 0x1C16D08
	0x03358C80 MOV X20, X0
	0x03358C84 ADRP X0, 0xDC3000
	0x03358C88 LDR X0, [X0 + 0x640]
	0x03358C8C BL 0x1C16D08
	0x03358C90 MOV X2, X0
	0x03358C94 MOV X0, X19
	0x03358C98 MOV X1, X20
	0x03358C9C MOV X3, X31
	0x03358CA0 BL 0x330E16C
	0x03358CA4 ADRP X0, 0xDD2000
	0x03358CA8 LDR X0, [X0 + 0x608]
	0x03358CAC BL 0x1C16D08
	0x03358CB0 MOV X1, X0
	0x03358CB4 MOV X0, X19
	0x03358CB8 BL 0x1C16DEC
	0x03358CBC STP X30, X21, [X31 - 0x20]!
	0x03358CC0 STP X20, X19, [X31 + 0x10]
	0x03358CC4 ADRP X20, 0x1084000
	0x03358CC8 ADRP X21, 0xDD2000
	0x03358CCC LDRB W8, [X20 + 0xDFB]
	0x03358CD0 LDR X21, [X21 + 0x610]
	0x03358CD4 MOV X19, X0
	0x03358CD8 TBNZ X8, 0x0, 0x3358CF0
	0x03358CDC ADRP X0, 0xDD2000
	0x03358CE0 LDR X0, [X0 + 0x610]
	0x03358CE4 BL 0x1C16CF4
	0x03358CE8 MOVZ W8, 0x1
	0x03358CEC STRB W8, [X20 + 0xDFB]
	0x03358CF0 LDR X0, [X21]
	0x03358CF4 BL 0x1C16F10
	0x03358CF8 MOV X1, X19
	0x03358CFC MOV X20, X0
	0x03358D00 BL 0x3358D14
	0x03358D04 MOV X0, X20
	0x03358D08 LDP X20, X19, [X31 + 0x10]
	0x03358D0C LDP X30, X21, [X31], #0x20
	0x03358D10 RET
	0x03358D14 STP X30, X23, [X31 - 0x30]!
	0x03358D18 STP X22, X21, [X31 + 0x10]
	0x03358D1C STP X20, X19, [X31 + 0x20]
	0x03358D20 ADRP X21, 0x1084000
	0x03358D24 LDRB W8, [X21 + 0xE01]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x1085000
	011 Move W8, [X22+3567]
	012 Move W19, W2
	013 Move X21, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0xD9E000
	020 Move X0, [X0+2488]
	021 Call 0x1C17CF4
	022 Move X0, 0xD9C000
	023 Move X0, [X0+1560]
	024 Call 0x1C17CF4
	025 Move X0, 0xD9D000
	026 Move X0, [X0+3672]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+3567], W8
	030 Compare X21, 0
	031 JumpIfEqual {256}
	032 Move TEMP, X19
	033 And TEMP, TEMP, -2147483648
	034 Compare TEMP, -2147483648
	035 JumpIfEqual {268}
	036 Move X0, X21
	037 Move X1, X31
	038 Call Array.get_Rank, X0
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, 0xD9D000
	041 Move X8, [X8+3672]
	042 Move X0, X21
	043 Move X1, [X8]
	044 Call 0x1C17E00
	045 Compare X0, 0
	046 JumpIfEqual {58}
	047 Move W8, [X20+24]
	048 Move X22, X0
	049 Subtract W9, W8, 1
	050 Add W10, W8, 30
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Add X20, X20, 16
	053 Move X0, [X20]
	054 NotImplemented "Instruction CSEL not yet implemented."
	055 NotImplemented "Instruction SBFM not yet implemented."
	056 And W21, W8, 31
	057 Add W4, W23, 1
	058 Move X22, 0xD9C000
	059 Move X22, [X22+1560]
	060 Move X0, X21
	061 Move X1, [X22]
	062 Call 0x1C17E00
	063 Compare X0, 0
	064 JumpIfEqual {124}
	065 Move W23, [X20+24]
	066 Add W8, W23, 7
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CSEL not yet implemented."
	069 Subtract W8, W23, 1
	070 Add W9, W23, 6
	071 NotImplemented "Instruction CMP not yet implemented."
	072 NotImplemented "Instruction CSEL not yet implemented."
	073 NotImplemented "Instruction SBFM not yet implemented."
	074 Add W24, W8, 1
	075 Add X20, X20, 16
	076 Move X0, [X20]
	077 Subtract W8, W31, W8
	078 Move W4, W31
	079 And W8, W8, 31
	080 Compare W8, 0
	081 JumpIfEqual {109}
	082 Subtract W21, W31, W8
	083 Move TEMP, 0
	084 Not TEMP
	085 Move W23, TEMP
	086 Subtract W4, W4, 1
	087 Move W1, W31
	088 Move X2, X22
	089 Move W3, W19
	090 Move X5, X31
	091 Call Array.Copy, X0, X1, X2, X3, X4
	092 Move X8, [X20]
	093 Compare X8, 0
	094 JumpIfEqual {255}
	095 Move W9, [X8+24]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move W10, [X22+24]
	098 Add W9, W23, W19
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Add X8, X8, W23
	101 Move W8, [X8+32]
	102 Move TEMP, 0
	103 Not TEMP
	104 Move W10, TEMP
	105 NotImplemented "Instruction LSLV not yet implemented."
	106 Add X9, X22, W9
	107 NotImplemented "Instruction BIC not yet implemented."
	108 Move [X9+32], W8
	109 Move X2, X22
	110 Move W3, W19
	111 Move X20, [X31+64]
	112 Move X19, [X31+72]
	113 Move X22, [X31+48]
	114 Move X21, [X31+56]
	115 Move X24, [X31+32]
	116 Move X23, [X31+40]
	117 Move X30, [X31+16]
	118 Move X25, [X31+24]
	119 Move W1, W31
	120 Move X5, X31
	121 Add X31, X31, 80
	122 Call Array.Copy, X0, X1, X2, X3, X4
	123 Return 
	124 Move X22, 0xD9E000
	125 Move X22, [X22+2488]
	126 Move X0, X21
	127 Move X1, [X22]
	128 Call 0x1C17E00
	129 Compare X0, 0
	130 JumpIfEqual {337}
	131 Move X0, X21
	132 Move X1, X31
	133 Call Array.get_Length, X0
	134 Move W8, [X20+24]
	135 Subtract W9, W0, W19
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X22, [X22]
	138 Move X0, X21
	139 Move X1, X22
	140 Call 0x1C17E00
	141 Compare X0, 0
	142 JumpIfEqual {334}
	143 NotImplemented "Instruction LDRSW not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X9, [X20+16]
	146 Compare X9, 0
	147 JumpIfEqual {255}
	148 Move W11, [X9+24]
	149 Move W12, W19
	150 Move X10, X31
	151 Move X13, X12
	152 ShiftRight X13, 32
	153 And X13, X13, 0x7FFFFFFF
	154 Move X14, 1
	155 Move X15, X10
	156 ShiftRight X15, 5
	157 And X15, X15, 0x7FFFFFFF
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move W16, [X0+24]
	160 Add X17, X12, X10
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Add X15, X9, W15
	163 Move W15, [X15+32]
	164 Add X16, X0, X13
	165 Add X13, X13, X14
	166 NotImplemented "Instruction LSRV not yet implemented."
	167 Add X10, X10, 1
	168 And W15, W15, 1
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move [X16+32], W15
	171 Move W24, W31
	172 Move X0, X21
	173 Move X1, X31
	174 Call Array.get_Length, X0
	175 Subtract W8, W0, W19
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move X22, [X22]
	178 And W8, W25, 0xFFFFFFF8
	179 Subtract W23, W23, W8
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X0, X21
	182 Move X1, X22
	183 NotImplemented "Instruction CSET not yet implemented."
	184 Call 0x1C17E00
	185 Compare X0, 0
	186 JumpIfEqual {334}
	187 Subtract W8, W24, W25
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move W11, W19
	190 Move W9, W31
	191 Move X10, X31
	192 Move W12, W8
	193 Move X13, X11
	194 ShiftRight X13, 32
	195 And X13, X13, 0x7FFFFFFF
	196 Move X14, 1
	197 Move X15, [X20+16]
	198 Compare X15, 0
	199 JumpIfEqual {255}
	200 Move W17, [X15+24]
	201 Move X16, X10
	202 ShiftRight X16, 2
	203 And X16, X16, 0x7FFFFFFF
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move W17, [X0+24]
	206 Add X1, X11, X10
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Add X15, X15, W16
	209 Move W15, [X15+32]
	210 And W16, W9, 24
	211 Add X10, X10, 1
	212 Add X17, X0, X13
	213 Add W9, W9, 8
	214 NotImplemented "Instruction CMP not yet implemented."
	215 NotImplemented "Instruction ASRV not yet implemented."
	216 Add X13, X13, X14
	217 Move [X17+32], W15
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Move X9, [X20+16]
	220 Compare X9, 0
	221 JumpIfEqual {255}
	222 Move W12, [X9+24]
	223 Add W10, W8, 3
	224 NotImplemented "Instruction CMP not yet implemented."
	225 NotImplemented "Instruction CSEL not yet implemented."
	226 NotImplemented "Instruction SBFM not yet implemented."
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move W12, [X0+24]
	229 Add W10, W8, W19
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Add X9, X9, W11
	232 Move W9, [X9+32]
	233 Move W8, W8
	234 ShiftRight W8, 29
	235 And W8, W8, 1
	236 Move TEMP, 0
	237 Not TEMP
	238 Move W11, TEMP
	239 NotImplemented "Instruction LSLV not yet implemented."
	240 NotImplemented "Instruction ASRV not yet implemented."
	241 NotImplemented "Instruction BIC not yet implemented."
	242 Add X9, X0, W10
	243 Move [X9+32], W8
	244 Move X20, [X31+64]
	245 Move X19, [X31+72]
	246 Move X22, [X31+48]
	247 Move X21, [X31+56]
	248 Move X24, [X31+32]
	249 Move X23, [X31+40]
	250 Move X30, [X31+16]
	251 Move X25, [X31+24]
	252 Add X31, X31, 80
	253 Return 
	254 Call 0x1C17F28
	255 Call 0x1C17F20
	256 Move X0, 0xDA1000
	257 Move X0, [X0+1320]
	258 Call 0x1C17D08
	259 Call 0x1C17F10
	260 Move X19, X0
	261 Move X0, 0xDC4000
	262 Move X0, [X0+1600]
	263 Call 0x1C17D08
	264 Move X1, X0
	265 Move X0, X19
	266 Move X2, X31
	267 Call ArgumentNullException..ctor, X0, X1
	268 Move [X31+12], W19
	269 Move X0, 0xD9C000
	270 Move X0, [X0+1880]
	271 Call 0x1C17D08
	272 Add X1, X31, 12
	273 Call 0x1C17E04
	274 Move X19, X0
	275 Move X0, 0xDA4000
	276 Move X0, [X0+1888]
	277 Call 0x1C17D08
	278 Call 0x1C17F10
	279 Move X20, X0
	280 Move X0, 0xDA7000
	281 Move X0, [X0+304]
	282 Call 0x1C17D08
	283 Move X21, X0
	284 Move X0, 0xDC4000
	285 Move X0, [X0+1648]
	286 Call 0x1C17D08
	287 Move X3, X0
	288 Move X0, X20
	289 Move X1, X21
	290 Move X2, X19
	291 Move X4, X31
	292 Call ArgumentOutOfRangeException..ctor, X0, X1, X2, X3
	293 Move X0, 0xDD3000
	294 Move X0, [X0+1432]
	295 Call 0x1C17D08
	296 Move X1, X0
	297 Move X0, X20
	298 Call 0x1C17DEC
	299 Move X0, 0xDA4000
	300 Move X0, [X0+1400]
	301 Call 0x1C17D08
	302 Call 0x1C17F10
	303 Move X19, X0
	304 Move X0, 0xDC5000
	305 Move X0, [X0+776]
	306 Call 0x1C17D08
	307 Move X20, X0
	308 Move X0, 0xDC4000
	309 Move X0, [X0+1600]
	310 Call 0x1C17D08
	311 Move X2, X0
	312 Move X0, X19
	313 Move X1, X20
	314 Move X3, X31
	315 Call ArgumentException..ctor, X0, X1, X2
	316 Move X0, 0xDA4000
	317 Move X0, [X0+1400]
	318 Call 0x1C17D08
	319 Call 0x1C17F10
	320 Move X19, X0
	321 Move X0, 0xDC4000
	322 Move X0, [X0+1888]
	323 Call 0x1C17D08
	324 Move X1, X0
	325 Move X0, X19
	326 Move X2, X31
	327 Call ArgumentException..ctor, X0, X1
	328 Move X0, 0xDD3000
	329 Move X0, [X0+1432]
	330 Call 0x1C17D08
	331 Move X1, X0
	332 Move X0, X19
	333 Call 0x1C17DEC
	334 Move X0, X21
	335 Move X1, X22
	336 Call 0x1C181E0
	337 Move X0, 0xDA4000
	338 Move X0, [X0+1400]
	339 Call 0x1C17D08
	340 Call 0x1C17F10
	341 Move X19, X0
	342 Move X0, 0xDD3000
	343 Move X0, [X0+1440]

Method: System.Int32 get_Count()

Disassembly:
	0x03358D28 MOV X20, X1
	0x03358D2C MOV X19, X0

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Object get_SyncRoot()

Disassembly:
	0x03358D30 TBNZ X8, 0x0, 0x3358D60
	0x03358D34 ADRP X0, 0xDD2000
	0x03358D38 LDR X0, [X0 + 0x610]
	0x03358D3C BL 0x1C16CF4
	0x03358D40 ADRP X0, 0xDD2000
	0x03358D44 LDR X0, [X0 + 0x618]
	0x03358D48 BL 0x1C16CF4
	0x03358D4C ADRP X0, 0xD9B000
	0x03358D50 LDR X0, [X0 + 0x6C0]
	0x03358D54 BL 0x1C16CF4
	0x03358D58 MOVZ W8, 0x1
	0x03358D5C STRB W8, [X21 + 0xE01]
	0x03358D60 MOV X0, X19
	0x03358D64 MOV X1, X31
	0x03358D68 BL 0x33BDD8C
	0x03358D6C MOVN W8, 0x0
	0x03358D70 STR X20, [X19 + 0x10]
	0x03358D74 STR W8, [X19 + 0x18]
	0x03358D78 CBZ X20, 0x3358E18
	0x03358D7C LDR W8, [X20 + 0x1C]
	0x03358D80 ADRP X21, 0xDD2000
	0x03358D84 ADRP X23, 0xD9B000
	0x03358D88 ADRP X22, 0xDD2000
	0x03358D8C LDR X21, [X21 + 0x618]
	0x03358D90 LDR X23, [X23 + 0x6C0]
	0x03358D94 LDR X22, [X22 + 0x610]
	0x03358D98 MOV X0, X20
	0x03358D9C MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1085000
	005 Move W8, [X20+3568]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xDA2000
	012 Move X0, [X0+3264]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3568], W8
	016 Add X19, X19, 32
	017 Move X0, [X19]
	018 Compare X0, 0
	019 JumpIfNotEqual {32}
	020 Move X8, 0xDA2000
	021 Move X8, [X8+3264]
	022 Move X0, [X8]
	023 Call 0x1C17F10
	024 Move X1, X31
	025 Move X20, X0
	026 Call Object..ctor, X0
	027 Move X0, X19
	028 Move X1, X20
	029 Move X2, X31
	030 Call 0x1C25138
	031 Move X0, [X19]
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Boolean get_IsSynchronized()

Disassembly:
	0x03358DA0 STR W8, [X19 + 0x1C]
	0x03358DA4 BL 0x33BE520

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Object Clone()

Disassembly:
	0x03358DA8 LDR X8, [X23]
	0x03358DAC LDR X21, [X21]
	0x03358DB0 MOV X20, X0
	0x03358DB4 LDR W9, [X8 + 0xE0]
	0x03358DB8 CBNZ W9, 0x3358DC4
	0x03358DBC MOV X0, X8
	0x03358DC0 BL 0x1C16DFC
	0x03358DC4 MOV X0, X21
	0x03358DC8 MOV X1, X31
	0x03358DCC BL 0x338C698
	0x03358DD0 MOV X1, X0
	0x03358DD4 MOV X0, X20
	0x03358DD8 MOV X2, X31
	0x03358DDC BL 0x3395194
	0x03358DE0 AND W8, W0, 0x1
	0x03358DE4 STRB W8, [X19 + 0x28]
	0x03358DE8 LDR X0, [X22]
	0x03358DEC LDR W8, [X0 + 0xE0]
	0x03358DF0 CBNZ W8, 0x3358DFC
	0x03358DF4 BL 0x1C16DFC
	0x03358DF8 LDR X0, [X22]
	0x03358DFC LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1085000
	006 Move X21, 0xDD3000
	007 Move W8, [X20+3569]
	008 Move X21, [X21+1448]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDD3000
	015 Move X0, [X0+1448]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3569], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call BitArray..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Collections.IEnumerator GetEnumerator()

Disassembly:
	0x03358E00 LDP X22, X21, [X31 + 0x10]
	0x03358E04 LDR X8, [X8]
	0x03358E08 STR X8, [X19 + 0x20]
	0x03358E0C LDP X20, X19, [X31 + 0x20]
	0x03358E10 LDP X30, X23, [X31], #0x30
	0x03358E14 RET
	0x03358E18 BL 0x1C16F20
	0x03358E1C LDR X8, [X0 + 0x10]
	0x03358E20 LDR W3, [X0 + 0x18]
	0x03358E24 MOV W2, W31
	0x03358E28 MOV X4, X31
	0x03358E2C MOV X0, X8
	0x03358E30 B 0x33A144C
	0x03358E34 STR X30, [X31 - 0x30]!
	0x03358E38 STP X22, X21, [X31 + 0x10]
	0x03358E3C STP X20, X19, [X31 + 0x20]
	0x03358E40 TBNZ X1, 0x1F, 0x3358EF4
	0x03358E44 LDR W8, [X0 + 0x18]
	0x03358E48 MOV W21, W1
	0x03358E4C MOV X19, X0
	0x03358E50 CMP W8, W1
	0x03358E54 B.LT 0x3358EF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1085000
	006 Move X21, 0xDD3000
	007 Move W8, [X20+3570]
	008 Move X21, [X21+1456]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDD3000
	015 Move X0, [X0+1456]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3570], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call BitArrayEnumeratorSimple..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Int32 GetArrayLength(System.Int32 n, System.Int32 div)

Disassembly:
	0x033584BC RET
	0x033584C0 ADRP X0, 0xDA0000
	0x033584C4 LDR X0, [X0 + 0x528]
	0x033584C8 BL 0x1C16D08
	0x033584CC BL 0x1C16F10
	0x033584D0 MOV X19, X0
	0x033584D4 ADRP X0, 0xDD0000

ISIL:
	001 Subtract W8, W0, 1
	002 NotImplemented "Instruction SDIV not yet implemented."
	003 Add W0, W8, 1
	004 Return X0
	005 Move W0, W31
	006 Return X0

