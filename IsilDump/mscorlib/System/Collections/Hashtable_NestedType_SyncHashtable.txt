Type: System.Collections.Hashtable/SyncHashtable

Method: System.Void .ctor(System.Collections.Hashtable table)

Disassembly:
	0x0335CADC CBZ X0, 0x335CAF4
	0x0335CAE0 LDR X8, [X0]
	0x0335CAE4 LDR X2, [X8 + 0x318]
	0x0335CAE8 LDR X1, [X8 + 0x320]
	0x0335CAEC LDR X30, [X31], #0x10
	0x0335CAF0 BR X2
	0x0335CAF4 BL 0x1C16F20
	0x0335CAF8 STR X30, [X31 - 0x10]!
	0x0335CAFC LDR X0, [X0 + 0x10]
	0x0335CB00 CBZ X0, 0x335CB18

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+80], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x0335DD78 BL 0x1C16DEC
	0x0335DD7C AND W8, W1, 0xFF
	0x0335DD80 CMP W8, W2, UXTB
	0x0335DD84 CSET W0, EQ
	0x0335DD88 RET
	0x0335DD8C STR X30, [X31 - 0x10]!
	0x0335DD90 STRB W1, [X31 + 0xC]
	0x0335DD94 ADD X0, X31, 0xC
	0x0335DD98 MOV X1, X31
	0x0335DD9C BL 0x3319718
	0x0335DDA0 LDR X30, [X31], #0x10
	0x0335DDA4 RET
	0x0335DDA8 STR X30, [X31 - 0x20]!
	0x0335DDAC STP X20, X19, [X31 + 0x10]
	0x0335DDB0 CBZ X1, 0x335DE08

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Call Hashtable..ctor, X0, X1, X2
	004 Move X0, 0xDC2000
	005 Move X0, [X0+3152]
	006 Call 0x1C17D08
	007 Call 0x1C17F10
	008 Move X1, X31
	009 Move X19, X0
	010 Call PlatformNotSupportedException..ctor, X0
	011 Move X0, 0xDCE000
	012 Move X0, [X0+1992]
	013 Call 0x1C17D08
	014 Move X1, X0
	015 Move X0, X19
	016 Call 0x1C17DEC

Method: System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)

Disassembly:
	0x0335DDB4 TBNZ X3, 0x1F, 0x335DE50
	0x0335DDB8 TBNZ X4, 0x1F, 0x335DE88
	0x0335DDBC LDR W8, [X1 + 0x18]
	0x0335DDC0 SUB W9, W8, W3
	0x0335DDC4 CMP W9, W4
	0x0335DDC8 B.LT 0x335DED8
	0x0335DDCC CBZ W4, 0x335DDF8
	0x0335DDD0 LDP X20, X19, [X31 + 0x10]
	0x0335DDD4 ADD X9, X1, 0x20
	0x0335DDD8 CMP W8, 0x0
	0x0335DDDC CSEL X0, X31, X9, EQ
	0x0335DDE0 MOV W1, W2
	0x0335DDE4 MOV W2, W3
	0x0335DDE8 MOV W3, W4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xDC2000
	004 Move X0, [X0+3152]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call PlatformNotSupportedException..ctor, X0
	010 Move X0, 0xDCE000
	011 Move X0, [X0+2000]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Int32 get_Count()

Disassembly:
	0x0335DDEC MOV X4, X31
	0x0335DDF0 LDR X30, [X31], #0x20
	0x0335DDF4 B 0x33A8754
	0x0335DDF8 LDP X20, X19, [X31 + 0x10]
	0x0335DDFC MOVN W0, 0x0
	0x0335DE00 LDR X30, [X31], #0x20
	0x0335DE04 RET
	0x0335DE08 ADRP X0, 0xD9B000
	0x0335DE0C LDR X0, [X0 + 0x528]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+888]
	007 Move X1, [X8+896]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Boolean get_IsSynchronized()

Disassembly:
	0x0335DE10 BL 0x1C16D08
	0x0335DE14 BL 0x1C16F10

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Object get_Item(System.Object key)

Disassembly:
	0x0335DE18 MOV X19, X0
	0x0335DE1C ADRP X0, 0xDBE000
	0x0335DE20 LDR X0, [X0 + 0x640]
	0x0335DE24 BL 0x1C16D08
	0x0335DE28 MOV X1, X0
	0x0335DE2C MOV X0, X19
	0x0335DE30 MOV X2, X31
	0x0335DE34 BL 0x330E100
	0x0335DE38 ADRP X0, 0xDCD000

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+728]
	007 Move X2, [X8+736]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Void set_Item(System.Object key, System.Object value)

Disassembly:
	0x0335DE3C LDR X0, [X0 + 0x828]
	0x0335DE40 BL 0x1C16D08
	0x0335DE44 MOV X1, X0
	0x0335DE48 MOV X0, X19
	0x0335DE4C BL 0x1C16DEC
	0x0335DE50 ADRP X0, 0xDBE000
	0x0335DE54 LDR X0, [X0 + 0x660]
	0x0335DE58 BL 0x1C16D08
	0x0335DE5C MOV X1, X31
	0x0335DE60 BL 0x33BDD84
	0x0335DE64 MOV X19, X0
	0x0335DE68 ADRP X0, 0xD9E000
	0x0335DE6C LDR X0, [X0 + 0x760]
	0x0335DE70 BL 0x1C16D08
	0x0335DE74 BL 0x1C16F10
	0x0335DE78 MOV X20, X0
	0x0335DE7C ADRP X0, 0xDBE000
	0x0335DE80 LDR X0, [X0 + 0x658]
	0x0335DE84 B 0x335DEBC
	0x0335DE88 ADRP X0, 0xDBE000
	0x0335DE8C LDR X0, [X0 + 0x650]
	0x0335DE90 BL 0x1C16D08
	0x0335DE94 MOV X1, X31
	0x0335DE98 BL 0x33BDD84
	0x0335DE9C MOV X19, X0
	0x0335DEA0 ADRP X0, 0xD9E000
	0x0335DEA4 LDR X0, [X0 + 0x760]
	0x0335DEA8 BL 0x1C16D08
	0x0335DEAC BL 0x1C16F10
	0x0335DEB0 MOV X20, X0
	0x0335DEB4 ADRP X0, 0xDBE000
	0x0335DEB8 LDR X0, [X0 + 0x648]
	0x0335DEBC BL 0x1C16D08
	0x0335DEC0 MOV X1, X0
	0x0335DEC4 MOV X0, X20
	0x0335DEC8 MOV X2, X19
	0x0335DECC MOV X3, X31
	0x0335DED0 BL 0x3311888
	0x0335DED4 B 0x335DF10
	0x0335DED8 ADRP X0, 0xDBE000
	0x0335DEDC LDR X0, [X0 + 0x760]
	0x0335DEE0 BL 0x1C16D08
	0x0335DEE4 MOV X1, X31
	0x0335DEE8 BL 0x33BDD84
	0x0335DEEC MOV X19, X0
	0x0335DEF0 ADRP X0, 0xD9E000
	0x0335DEF4 LDR X0, [X0 + 0x578]
	0x0335DEF8 BL 0x1C16D08
	0x0335DEFC BL 0x1C16F10
	0x0335DF00 MOV X1, X19
	0x0335DF04 MOV X2, X31
	0x0335DF08 MOV X20, X0
	0x0335DF0C BL 0x3314A68
	0x0335DF10 ADRP X0, 0xDCD000
	0x0335DF14 LDR X0, [X0 + 0x828]
	0x0335DF18 BL 0x1C16D08
	0x0335DF1C MOV X1, X0
	0x0335DF20 MOV X0, X20
	0x0335DF24 BL 0x1C16DEC
	0x0335DF28 STR X30, [X31 - 0x10]!
	0x0335DF2C SUB W8, W3, W4
	0x0335DF30 ADD W8, W8, 0x1
	0x0335DF34 CMP W8, W3

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, X0
	007 Move X0, [X0+80]
	008 Compare X0, 0
	009 JumpIfEqual {45}
	010 Move X8, [X0]
	011 Move X21, X1
	012 Move X20, X2
	013 Move X9, [X8+872]
	014 Move X1, [X8+880]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move X19, X0
	017 Move [X31+12], W31
	018 Add X1, X31, 12
	019 Move X2, X31
	020 Call Monitor.Enter, X0, X1
	021 Move X0, [X22+80]
	022 Compare X0, 0
	023 JumpIfEqual {48}
	024 Move X8, [X0]
	025 Move X9, [X8+744]
	026 Move X3, [X8+752]
	027 Move X1, X21
	028 Move X2, X20
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move X20, X31
	031 Move W8, [X31+12]
	032 Compare W8, 0
	033 JumpIfEqual {37}
	034 Move X0, X19
	035 Move X1, X31
	036 Call Monitor.Exit, X0
	037 Compare X20, 0
	038 JumpIfNotEqual {46}
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Call 0x1C17F20
	046 Move X0, X20
	047 Call 0x1C17F18
	048 Call 0x1C17F20
	049 Move X21, X0
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, X21
	052 Call 0x3EB2AD0
	053 Move X20, [X0]
	054 Call 0x3EB2AE0
	055 Move X20, X31
	056 Move X21, X0
	057 Move W8, [X31+12]
	058 Compare W8, 0
	059 JumpIfEqual {63}
	060 Move X0, X19
	061 Move X1, X31
	062 Call Monitor.Exit, X0
	063 Compare X20, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X21
	066 Call 0x1D2D690
	067 Move X0, X20
	068 Call 0x1C17F18
	069 Call 0x1991590

Method: System.Object get_SyncRoot()

Disassembly:
	0x0335DF38 B.GT 0x335DF68
	0x0335DF3C CBZ X1, 0x335DF7C
	0x0335DF40 LDR W9, [X1 + 0x18]
	0x0335DF44 CMP W3, W9
	0x0335DF48 B.CS 0x335DF78
	0x0335DF4C ADD X10, X1, W3, SXTW
	0x0335DF50 LDRB W10, [X10 + 0x20]
	0x0335DF54 CMP W10, W2, UXTB
	0x0335DF58 B.EQ 0x335DF6C

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+872]
	007 Move X1, [X8+880]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Void Add(System.Object key, System.Object value)

Disassembly:
	0x0335DF5C SUB W3, W3, 0x1
	0x0335DF60 CMP W3, W8
	0x0335DF64 B.GE 0x335DF44
	0x0335DF68 MOVN W3, 0x0
	0x0335DF6C MOV W0, W3
	0x0335DF70 LDR X30, [X31], #0x10
	0x0335DF74 RET
	0x0335DF78 BL 0x1C16F28
	0x0335DF7C BL 0x1C16F20
	0x0335DF80 STR X30, [X31 - 0x20]!
	0x0335DF84 STP X20, X19, [X31 + 0x10]
	0x0335DF88 ADRP X20, 0x107F000
	0x0335DF8C LDRB W8, [X20 + 0xE20]
	0x0335DF90 MOV X19, X1
	0x0335DF94 TBNZ X8, 0x0, 0x335DFAC
	0x0335DF98 ADRP X0, 0xDC1000
	0x0335DF9C LDR X0, [X0 + 0xC70]
	0x0335DFA0 BL 0x1C16CF4
	0x0335DFA4 MOVZ W8, 0x1
	0x0335DFA8 STRB W8, [X20 + 0xE20]
	0x0335DFAC CBZ X19, 0x335DFD0
	0x0335DFB0 ADRP X8, 0xDC1000
	0x0335DFB4 LDR X8, [X8 + 0xC70]
	0x0335DFB8 LDR X9, [X19]
	0x0335DFBC LDR X8, [X8]
	0x0335DFC0 LDRB W11, [X9 + 0x130]
	0x0335DFC4 LDRB W10, [X8 + 0x130]
	0x0335DFC8 CMP W11, W10
	0x0335DFCC B.CS 0x335DFD8
	0x0335DFD0 MOV W0, W31
	0x0335DFD4 B 0x335DFEC
	0x0335DFD8 LDR X9, [X9 + 0xC8]
	0x0335DFDC ADD X9, X9, X10, 0x3, LSL
	0x0335DFE0 LDUR X9, [X9 - 0x8]
	0x0335DFE4 CMP X9, X8
	0x0335DFE8 CSET W0, EQ
	0x0335DFEC LDP X20, X19, [X31 + 0x10]
	0x0335DFF0 LDR X30, [X31], #0x20
	0x0335DFF4 RET
	0x0335DFF8 STR X30, [X31 - 0x10]!
	0x0335DFFC MOV X1, X31
	0x0335E000 BL 0x33BE520
	0x0335E004 CBZ X0, 0x335E028
	0x0335E008 LDR X8, [X0]
	0x0335E00C LDP X9, X1, [X8 + 0x1A8]
	0x0335E010 BLR X9
	0x0335E014 CBZ X0, 0x335E028
	0x0335E018 LDR X8, [X0]
	0x0335E01C LDP X2, X1, [X8 + 0x158]
	0x0335E020 LDR X30, [X31], #0x10
	0x0335E024 BR X2
	0x0335E028 BL 0x1C16F20
	0x0335E02C STP X30, X21, [X31 - 0x20]!
	0x0335E030 STP X20, X19, [X31 + 0x10]
	0x0335E034 ADRP X20, 0x107E000
	0x0335E038 ADRP X21, 0xDCC000
	0x0335E03C LDRB W8, [X20 + 0xE21]
	0x0335E040 LDR X21, [X21 + 0x830]
	0x0335E044 MOV X19, X0
	0x0335E048 TBNZ X8, 0x0, 0x335E060
	0x0335E04C ADRP X0, 0xDCC000
	0x0335E050 LDR X0, [X0 + 0x830]
	0x0335E054 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, X0
	007 Move X0, [X0+80]
	008 Compare X0, 0
	009 JumpIfEqual {45}
	010 Move X8, [X0]
	011 Move X21, X1
	012 Move X20, X2
	013 Move X9, [X8+872]
	014 Move X1, [X8+880]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move X19, X0
	017 Move [X31+12], W31
	018 Add X1, X31, 12
	019 Move X2, X31
	020 Call Monitor.Enter, X0, X1
	021 Move X0, [X22+80]
	022 Compare X0, 0
	023 JumpIfEqual {48}
	024 Move X8, [X0]
	025 Move X9, [X8+632]
	026 Move X3, [X8+640]
	027 Move X1, X21
	028 Move X2, X20
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move X20, X31
	031 Move W8, [X31+12]
	032 Compare W8, 0
	033 JumpIfEqual {37}
	034 Move X0, X19
	035 Move X1, X31
	036 Call Monitor.Exit, X0
	037 Compare X20, 0
	038 JumpIfNotEqual {46}
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Call 0x1C17F20
	046 Move X0, X20
	047 Call 0x1C17F18
	048 Call 0x1C17F20
	049 Move X21, X0
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, X21
	052 Call 0x3EB2AD0
	053 Move X20, [X0]
	054 Call 0x3EB2AE0
	055 Move X20, X31
	056 Move X21, X0
	057 Move W8, [X31+12]
	058 Compare W8, 0
	059 JumpIfEqual {63}
	060 Move X0, X19
	061 Move X1, X31
	062 Call Monitor.Exit, X0
	063 Compare X20, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X21
	066 Call 0x1D2D690
	067 Move X0, X20
	068 Call 0x1C17F18
	069 Call 0x1991590

Method: System.Void Clear()

Disassembly:
	0x0335E058 MOVZ W8, 0x1
	0x0335E05C STRB W8, [X20 + 0xE21]
	0x0335E060 LDR X1, [X21]
	0x0335E064 MOV X0, X19
	0x0335E068 LDP X20, X19, [X31 + 0x10]
	0x0335E06C LDP X30, X21, [X31], #0x20
	0x0335E070 B 0x2C791A0
	0x0335E074 CBZ X1, 0x335E08C
	0x0335E078 LDR X8, [X1]
	0x0335E07C MOV X0, X1
	0x0335E080 LDP X2, X8, [X8 + 0x158]
	0x0335E084 MOV X1, X8
	0x0335E088 BR X2
	0x0335E08C MOV W0, W31
	0x0335E090 RET
	0x0335E094 CBZ X1, 0x335E0B0
	0x0335E098 CMP X1, X2
	0x0335E09C B.EQ 0x335E0BC
	0x0335E0A0 MOV X0, X1
	0x0335E0A4 MOV X1, X2
	0x0335E0A8 MOV X2, X31
	0x0335E0AC B 0x322693C
	0x0335E0B0 CMP X2, 0x0
	0x0335E0B4 CSET W0, EQ
	0x0335E0B8 RET
	0x0335E0BC MOVZ W0, 0x1
	0x0335E0C0 RET
	0x0335E0C4 STR X30, [X31 - 0x30]!
	0x0335E0C8 STP X22, X21, [X31 + 0x10]
	0x0335E0CC STP X20, X19, [X31 + 0x20]
	0x0335E0D0 ADD W8, W4, W3
	0x0335E0D4 CMP W8, W3
	0x0335E0D8 B.LE 0x335E114
	0x0335E0DC ADD X8, X1, W3, 0x3, SXTW
	0x0335E0E0 MOV W20, W4
	0x0335E0E4 MOV W19, W3
	0x0335E0E8 MOV X21, X2
	0x0335E0EC ADD X22, X8, 0x20
	0x0335E0F0 LDR X0, [X22]
	0x0335E0F4 MOV X1, X21
	0x0335E0F8 MOV X2, X31
	0x0335E0FC BL 0x321BA08
	0x0335E100 TBNZ X0, 0x0, 0x335E118
	0x0335E104 ADD W19, W19, 0x1
	0x0335E108 SUBS W20, W20, 0x1
	0x0335E10C ADD X22, X22, 0x8
	0x0335E110 B.NE 0x335E0F0
	0x0335E114 MOVN W19, 0x0
	0x0335E118 MOV W0, W19
	0x0335E11C LDP X20, X19, [X31 + 0x20]
	0x0335E120 LDP X22, X21, [X31 + 0x10]
	0x0335E124 LDR X30, [X31], #0x30
	0x0335E128 RET
	0x0335E12C STP X30, X21, [X31 - 0x20]!
	0x0335E130 STP X20, X19, [X31 + 0x10]
	0x0335E134 ADRP X20, 0x107E000
	0x0335E138 ADRP X21, 0xDCC000
	0x0335E13C LDRB W8, [X20 + 0xE22]
	0x0335E140 LDR X21, [X21 + 0x838]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X0
	007 Move X0, [X0+80]
	008 Compare X0, 0
	009 JumpIfEqual {41}
	010 Move X8, [X0]
	011 Move X9, [X8+872]
	012 Move X1, [X8+880]
	013 NotImplemented "Instruction BLR not yet implemented."
	014 Move X19, X0
	015 Move [X31+12], W31
	016 Add X1, X31, 12
	017 Move X2, X31
	018 Call Monitor.Enter, X0, X1
	019 Move X0, [X20+80]
	020 Compare X0, 0
	021 JumpIfEqual {44}
	022 Move X8, [X0]
	023 Move X1, [X8+656]
	024 Move X9, [X8+648]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move X20, X31
	027 Move W8, [X31+12]
	028 Compare W8, 0
	029 JumpIfEqual {33}
	030 Move X0, X19
	031 Move X1, X31
	032 Call Monitor.Exit, X0
	033 Compare X20, 0
	034 JumpIfNotEqual {42}
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X30, [X31+16]
	038 Move X21, [X31+24]
	039 Add X31, X31, 48
	040 Return 
	041 Call 0x1C17F20
	042 Move X0, X20
	043 Call 0x1C17F18
	044 Call 0x1C17F20
	045 Move X21, X0
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, X21
	048 Call 0x3EB2AD0
	049 Move X20, [X0]
	050 Call 0x3EB2AE0
	051 Move X20, X31
	052 Move X21, X0
	053 Move W8, [X31+12]
	054 Compare W8, 0
	055 JumpIfEqual {59}
	056 Move X0, X19
	057 Move X1, X31
	058 Call Monitor.Exit, X0
	059 Compare X20, 0
	060 JumpIfNotEqual {63}
	061 Move X0, X21
	062 Call 0x1D2D690
	063 Move X0, X20
	064 Call 0x1C17F18
	065 Call 0x1991590

Method: System.Boolean Contains(System.Object key)

Disassembly:
	0x0335E144 MOV X19, X0
	0x0335E148 TBNZ X8, 0x0, 0x335E160
	0x0335E14C ADRP X0, 0xDCC000
	0x0335E150 LDR X0, [X0 + 0x838]
	0x0335E154 BL 0x1C16CF4
	0x0335E158 MOVZ W8, 0x1
	0x0335E15C STRB W8, [X20 + 0xE22]
	0x0335E160 LDR X1, [X21]
	0x0335E164 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+680]
	007 Move X2, [X8+688]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Boolean ContainsKey(System.Object key)

Disassembly:
	0x0335E168 LDP X20, X19, [X31 + 0x10]
	0x0335E16C LDP X30, X21, [X31], #0x20
	0x0335E170 B 0x2CA527C
	0x0335E174 SUB X31, X31, 0x60
	0x0335E178 STP X30, X21, [X31 + 0x40]
	0x0335E17C STP X20, X19, [X31 + 0x50]
	0x0335E180 ADRP X21, 0x107E000
	0x0335E184 ADRP X20, 0xDCC000
	0x0335E188 LDRB W8, [X21 + 0xE23]
	0x0335E18C LDR X20, [X20 + 0x840]
	0x0335E190 MOV X19, X0
	0x0335E194 TBNZ X8, 0x0, 0x335E1AC
	0x0335E198 ADRP X0, 0xDCC000
	0x0335E19C LDR X0, [X0 + 0x840]
	0x0335E1A0 BL 0x1C16CF4
	0x0335E1A4 MOVZ W8, 0x1
	0x0335E1A8 STRB W8, [X21 + 0xE23]
	0x0335E1AC MOVZ W1, 0xB2B8
	0x0335E1B0 MOVZ W8, 0x44
	0x0335E1B4 MOVZ W9, 0x4A
	0x0335E1B8 MOVZ W10, 0x81
	0x0335E1BC MOVZ W11, 0xFD
	0x0335E1C0 ADD X0, X31, 0x30
	0x0335E1C4 MOVK W1, 0x8660000
	0x0335E1C8 MOVZ W2, 0x5CEF
	0x0335E1CC MOVZ W3, 0x5DB9
	0x0335E1D0 MOVZ W4, 0x26
	0x0335E1D4 MOVZ W5, 0x12
	0x0335E1D8 MOVZ W6, 0xC
	0x0335E1DC MOVZ W7, 0xF
	0x0335E1E0 STP X31, X31, [X31 + 0x30]
	0x0335E1E4 STRB W8, [X31 + 0x18]
	0x0335E1E8 STRB W9, [X31 + 0x10]
	0x0335E1EC STRB W10, [X31 + 0x8]
	0x0335E1F0 STRB W11, [X31]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {16}
	006 Move X0, [X0+80]
	007 Compare X0, 0
	008 JumpIfEqual {39}
	009 Move X8, [X0]
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X3, [X8+696]
	013 Move X2, [X8+704]
	014 Move X30, [X31+32]
	015 CallNoReturn X3
	016 Move X0, 0xD9B000
	017 Move X0, [X0+1320]
	018 Call 0x1C17D08
	019 Call 0x1C17F10
	020 Move X19, X0
	021 Move X0, 0xDC0000
	022 Move X0, [X0+112]
	023 Call 0x1C17D08
	024 Move X20, X0
	025 Move X0, 0xDCD000
	026 Move X0, [X0+648]
	027 Call 0x1C17D08
	028 Move X2, X0
	029 Move X0, X19
	030 Move X1, X20
	031 Move X3, X31
	032 Call ArgumentNullException..ctor, X0, X1, X2
	033 Move X0, 0xDCD000
	034 Move X0, [X0+2008]
	035 Call 0x1C17D08
	036 Move X1, X0
	037 Move X0, X19
	038 Call 0x1C17DEC
	039 Call 0x1C17F20

Method: System.Void CopyTo(System.Array array, System.Int32 arrayIndex)

Disassembly:
	0x0335E1F4 STR X31, [X31 + 0x20]
	0x0335E1F8 BL 0x3376A90
	0x0335E1FC LDR X20, [X20]
	0x0335E200 MOV X0, X19
	0x0335E204 MOV X1, X31
	0x0335E208 BL 0x33BDD8C
	0x0335E20C STR X20, [X19 + 0x10]
	0x0335E210 LDP X20, X19, [X31 + 0x50]
	0x0335E214 LDP X30, X21, [X31 + 0x40]
	0x0335E218 ADD X31, X31, 0x60
	0x0335E21C RET
	0x0335E220 STP X29, X30, [X31 - 0x30]!
	0x0335E224 STR X21, [X31 + 0x10]
	0x0335E228 STP X20, X19, [X31 + 0x20]
	0x0335E22C ADD X29, X31, 0x0
	0x0335E230 SUB X31, X31, 0x20
	0x0335E234 MRS X19, 0xC000
	0x0335E238 LDR X8, [X19 + 0x28]
	0x0335E23C ADRP X20, 0x107E000
	0x0335E240 STUR X8, [X29 - 0x8]
	0x0335E244 LDRB W8, [X20 + 0xE24]
	0x0335E248 STP W2, W1, [X29 - 0x10]
	0x0335E24C STP W4, W3, [X29 - 0x18]
	0x0335E250 TBNZ X8, 0x0, 0x335E268
	0x0335E254 ADRP X0, 0xDCC000
	0x0335E258 LDR X0, [X0 + 0x848]
	0x0335E25C BL 0x1C16CF4
	0x0335E260 MOVZ W8, 0x1
	0x0335E264 STRB W8, [X20 + 0xE24]
	0x0335E268 ADD X20, X31, 0x0
	0x0335E26C SUB X8, X20, 0x40
	0x0335E270 ADD X31, X8, 0x0
	0x0335E274 MOVI V0.2D, 0x0
	0x0335E278 MOVZ W21, 0x4
	0x0335E27C SUB X0, X29, 0xC
	0x0335E280 MOV X1, X31
	0x0335E284 STP V0, V0, [X20 - 0x20]
	0x0335E288 STP V0, V0, [X20 - 0x40]
	0x0335E28C STUR W21, [X20 - 0x38]
	0x0335E290 BL 0x33C693C
	0x0335E294 STUR X0, [X20 - 0x40]
	0x0335E298 SUB X0, X29, 0x10
	0x0335E29C MOV X1, X31
	0x0335E2A0 STUR W31, [X20 - 0x34]
	0x0335E2A4 STUR W21, [X20 - 0x28]
	0x0335E2A8 BL 0x33C693C
	0x0335E2AC STUR X0, [X20 - 0x30]
	0x0335E2B0 SUB X0, X29, 0x14
	0x0335E2B4 MOV X1, X31
	0x0335E2B8 STUR W31, [X20 - 0x24]
	0x0335E2BC STUR W21, [X20 - 0x18]
	0x0335E2C0 BL 0x33C693C
	0x0335E2C4 STUR X0, [X20 - 0x20]
	0x0335E2C8 SUB X0, X29, 0x18
	0x0335E2CC MOV X1, X31
	0x0335E2D0 STUR W31, [X20 - 0x14]
	0x0335E2D4 STUR W21, [X20 - 0x8]
	0x0335E2D8 BL 0x33C693C
	0x0335E2DC STUR X0, [X20 - 0x10]
	0x0335E2E0 STUR W31, [X20 - 0x4]
	0x0335E2E4 LDR X8, [X19 + 0x28]
	0x0335E2E8 LDUR X9, [X29 - 0x8]
	0x0335E2EC CMP X8, X9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, X0
	007 Move X0, [X0+80]
	008 Compare X0, 0
	009 JumpIfEqual {45}
	010 Move X8, [X0]
	011 Move X21, X1
	012 Move W20, W2
	013 Move X9, [X8+872]
	014 Move X1, [X8+880]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move X19, X0
	017 Move [X31+12], W31
	018 Add X1, X31, 12
	019 Move X2, X31
	020 Call Monitor.Enter, X0, X1
	021 Move X0, [X22+80]
	022 Compare X0, 0
	023 JumpIfEqual {48}
	024 Move X8, [X0]
	025 Move X9, [X8+712]
	026 Move X3, [X8+720]
	027 Move X1, X21
	028 Move W2, W20
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move X20, X31
	031 Move W8, [X31+12]
	032 Compare W8, 0
	033 JumpIfEqual {37}
	034 Move X0, X19
	035 Move X1, X31
	036 Call Monitor.Exit, X0
	037 Compare X20, 0
	038 JumpIfNotEqual {46}
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Call 0x1C17F20
	046 Move X0, X20
	047 Call 0x1C17F18
	048 Call 0x1C17F20
	049 Move X21, X0
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, X21
	052 Call 0x3EB2AD0
	053 Move X20, [X0]
	054 Call 0x3EB2AE0
	055 Move X20, X31
	056 Move X21, X0
	057 Move W8, [X31+12]
	058 Compare W8, 0
	059 JumpIfEqual {63}
	060 Move X0, X19
	061 Move X1, X31
	062 Call Monitor.Exit, X0
	063 Compare X20, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X21
	066 Call 0x1D2D690
	067 Move X0, X20
	068 Call 0x1C17F18
	069 Call 0x1991590

Method: System.Object Clone()

Disassembly:
	0x0335E2F0 B.NE 0x335E308
	0x0335E2F4 ADD X31, X29, 0x0
	0x0335E2F8 LDP X20, X19, [X31 + 0x20]
	0x0335E2FC LDR X21, [X31 + 0x10]
	0x0335E300 LDP X29, X30, [X31], #0x30
	0x0335E304 RET
	0x0335E308 BL 0x3EB1B20
	0x0335E30C STP X29, X30, [X31 - 0x30]!
	0x0335E310 STR X21, [X31 + 0x10]
	0x0335E314 STP X20, X19, [X31 + 0x20]
	0x0335E318 ADD X29, X31, 0x0
	0x0335E31C SUB X31, X31, 0x20
	0x0335E320 MRS X19, 0xC000
	0x0335E324 LDR X8, [X19 + 0x28]
	0x0335E328 ADRP X20, 0x107E000
	0x0335E32C STUR X8, [X29 - 0x8]
	0x0335E330 LDRB W8, [X20 + 0xE25]
	0x0335E334 STP W2, W1, [X29 - 0x10]
	0x0335E338 STP W4, W3, [X29 - 0x18]
	0x0335E33C STUR W5, [X29 - 0x1C]
	0x0335E340 TBNZ X8, 0x0, 0x335E358
	0x0335E344 ADRP X0, 0xDCC000
	0x0335E348 LDR X0, [X0 + 0x850]
	0x0335E34C BL 0x1C16CF4
	0x0335E350 MOVZ W8, 0x1
	0x0335E354 STRB W8, [X20 + 0xE25]
	0x0335E358 ADD X20, X31, 0x0
	0x0335E35C SUB X8, X20, 0x50
	0x0335E360 ADD X31, X8, 0x0
	0x0335E364 MOVI V0.2D, 0x0
	0x0335E368 MOVZ W21, 0x4
	0x0335E36C SUB X0, X29, 0xC
	0x0335E370 MOV X1, X31
	0x0335E374 STP V0, V0, [X20 - 0x20]
	0x0335E378 STP V0, V0, [X20 - 0x40]
	0x0335E37C STUR V0, [X20 - 0x50]
	0x0335E380 STUR W21, [X20 - 0x48]
	0x0335E384 BL 0x33C693C
	0x0335E388 STUR X0, [X20 - 0x50]
	0x0335E38C SUB X0, X29, 0x10
	0x0335E390 MOV X1, X31
	0x0335E394 STUR W31, [X20 - 0x44]
	0x0335E398 STUR W21, [X20 - 0x38]
	0x0335E39C BL 0x33C693C
	0x0335E3A0 STUR X0, [X20 - 0x40]
	0x0335E3A4 SUB X0, X29, 0x14
	0x0335E3A8 MOV X1, X31
	0x0335E3AC STUR W31, [X20 - 0x34]
	0x0335E3B0 STUR W21, [X20 - 0x28]
	0x0335E3B4 BL 0x33C693C
	0x0335E3B8 STUR X0, [X20 - 0x30]
	0x0335E3BC SUB X0, X29, 0x18
	0x0335E3C0 MOV X1, X31
	0x0335E3C4 STUR W31, [X20 - 0x24]
	0x0335E3C8 STUR W21, [X20 - 0x18]
	0x0335E3CC BL 0x33C693C
	0x0335E3D0 STUR X0, [X20 - 0x20]
	0x0335E3D4 SUB X0, X29, 0x1C
	0x0335E3D8 MOV X1, X31
	0x0335E3DC STUR W31, [X20 - 0x14]
	0x0335E3E0 STUR W21, [X20 - 0x8]
	0x0335E3E4 BL 0x33C693C
	0x0335E3E8 STUR X0, [X20 - 0x10]
	0x0335E3EC STUR W31, [X20 - 0x4]
	0x0335E3F0 LDR X8, [X19 + 0x28]
	0x0335E3F4 LDUR X9, [X29 - 0x8]
	0x0335E3F8 CMP X8, X9
	0x0335E3FC B.NE 0x335E414
	0x0335E400 ADD X31, X29, 0x0
	0x0335E404 LDP X20, X19, [X31 + 0x20]
	0x0335E408 LDR X21, [X31 + 0x10]
	0x0335E40C LDP X29, X30, [X31], #0x30
	0x0335E410 RET
	0x0335E414 BL 0x3EB1B20
	0x0335E418 MOV W4, W3
	0x0335E41C MOV W3, W2
	0x0335E420 MOV W2, W1
	0x0335E424 B 0x334FB58
	0x0335E428 MOV W4, W3
	0x0335E42C MOV W3, W2
	0x0335E430 MOV W2, W1
	0x0335E434 B 0x334FB58
	0x0335E438 MOV W3, W2
	0x0335E43C MOV W2, W1
	0x0335E440 B 0x334FA54
	0x0335E444 STR X30, [X31 - 0x20]!
	0x0335E448 STP X20, X19, [X31 + 0x10]
	0x0335E44C ADRP X19, 0x107E000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x107F000
	007 Move W8, [X19+3611]
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xDC6000
	014 Move X0, [X0+3512]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X19+3611], W8
	018 Move X0, [X20+80]
	019 Compare X0, 0
	020 JumpIfEqual {69}
	021 Move X8, [X0]
	022 Move X9, [X8+872]
	023 Move X1, [X8+880]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X19, X0
	026 Move [X31+12], W31
	027 Add X1, X31, 12
	028 Move X2, X31
	029 Call Monitor.Enter, X0, X1
	030 Move X0, [X20+80]
	031 Compare X0, 0
	032 JumpIfEqual {72}
	033 Move X8, [X0]
	034 Move X1, [X8+672]
	035 Move X9, [X8+664]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Compare X0, 0
	038 JumpIfEqual {50}
	039 Move X9, 0xDC6000
	040 Move X9, [X9+3512]
	041 Move X8, [X0]
	042 Move X1, [X9]
	043 Move W10, [X8+304]
	044 Move W9, [X1+304]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X8, [X8+200]
	047 Add X8, X8, X9
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Call Hashtable.Synchronized, X0
	051 Move X21, X0
	052 Move X20, X31
	053 Move W8, [X31+12]
	054 Compare W8, 0
	055 JumpIfEqual {59}
	056 Move X0, X19
	057 Move X1, X31
	058 Call Monitor.Exit, X0
	059 Compare X20, 0
	060 JumpIfNotEqual {70}
	061 Move X0, X21
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X30, [X31+16]
	065 Move X21, [X31+24]
	066 Add X31, X31, 48
	067 Return X0
	068 Call 0x1C181E0
	069 Call 0x1C17F20
	070 Move X0, X20
	071 Call 0x1C17F18
	072 Call 0x1C17F20
	073 Move X21, X0
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X0, X21
	076 Call 0x3EB2AD0
	077 Move X20, [X0]
	078 Call 0x3EB2AE0
	079 Move X21, X31
	080 Move X20, X31
	081 Move X21, X0
	082 Move W8, [X31+12]
	083 Compare W8, 0
	084 JumpIfEqual {88}
	085 Move X0, X19
	086 Move X1, X31
	087 Call Monitor.Exit, X0
	088 Compare X20, 0
	089 JumpIfNotEqual {92}
	090 Move X0, X21
	091 Call 0x1D2D690
	092 Move X0, X20
	093 Call 0x1C17F18
	094 Call 0x1991590

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x0335E450 ADRP X20, 0xDBF000
	0x0335E454 LDRB W8, [X19 + 0xE26]
	0x0335E458 LDR X20, [X20 + 0x7B0]
	0x0335E45C TBNZ X8, 0x0, 0x335E474
	0x0335E460 ADRP X0, 0xDBF000
	0x0335E464 LDR X0, [X0 + 0x7B0]
	0x0335E468 BL 0x1C16CF4
	0x0335E46C MOVZ W8, 0x1
	0x0335E470 STRB W8, [X19 + 0xE26]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+760]
	007 Move X1, [X8+768]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Collections.IDictionaryEnumerator GetEnumerator()

Disassembly:
	0x0335E474 LDR X0, [X20]
	0x0335E478 BL 0x1C16F10
	0x0335E47C MOV X19, X0
	0x0335E480 BL 0x335E174
	0x0335E484 LDR X8, [X20]
	0x0335E488 LDR X8, [X8 + 0xB8]
	0x0335E48C STR X19, [X8]
	0x0335E490 LDP X20, X19, [X31 + 0x10]
	0x0335E494 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+760]
	007 Move X1, [X8+768]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Collections.ICollection get_Keys()

Disassembly:
	0x0335E498 RET
	0x0335E49C STP X1, X2, [X0]
	0x0335E4A0 STR X3, [X0 + 0x10]
	0x0335E4A4 RET
	0x0335E4A8 LDR X0, [X0]
	0x0335E4AC RET
	0x0335E4B0 STR X30, [X31 - 0x20]!
	0x0335E4B4 STP X20, X19, [X31 + 0x10]
	0x0335E4B8 ADRP X20, 0x107E000
	0x0335E4BC LDRB W8, [X20 + 0xE27]
	0x0335E4C0 MOV X19, X0
	0x0335E4C4 TBNZ X8, 0x0, 0x335E4DC
	0x0335E4C8 ADRP X0, 0xDCC000
	0x0335E4CC LDR X0, [X0 + 0x858]
	0x0335E4D0 BL 0x1C16CF4
	0x0335E4D4 MOVZ W8, 0x1
	0x0335E4D8 STRB W8, [X20 + 0xE27]
	0x0335E4DC ADD X20, X19, 0x8
	0x0335E4E0 MOV X0, X20
	0x0335E4E4 MOV X1, X31
	0x0335E4E8 BL 0x32C05E4
	0x0335E4EC TBZ X0, 0x0, 0x335E4FC
	0x0335E4F0 MOV X0, X20
	0x0335E4F4 MOV X1, X31
	0x0335E4F8 BL 0x32C0794
	0x0335E4FC LDR X20, [X19 + 0x10]
	0x0335E500 CBZ X20, 0x335E568
	0x0335E504 ADRP X10, 0xDCC000
	0x0335E508 LDR X8, [X20]
	0x0335E50C LDR X10, [X10 + 0x858]
	0x0335E510 LDRH W9, [X8 + 0x12E]
	0x0335E514 LDR X1, [X10]
	0x0335E518 CBZ X9, 0x335E53C
	0x0335E51C LDR X10, [X8 + 0xB0]
	0x0335E520 ADD X10, X10, 0x8
	0x0335E524 LDUR X11, [X10 - 0x8]
	0x0335E528 CMP X11, X1
	0x0335E52C B.EQ 0x335E54C
	0x0335E530 SUBS X9, X9, 0x1
	0x0335E534 ADD X10, X10, 0x10
	0x0335E538 B.NE 0x335E524
	0x0335E53C MOV X0, X20
	0x0335E540 MOV W2, W31
	0x0335E544 BL 0x1C5C788
	0x0335E548 B 0x335E558
	0x0335E54C LDRSW X9, [X10]
	0x0335E550 ADD X8, X8, X9, 0x4, LSL
	0x0335E554 ADD X0, X8, 0x138
	0x0335E558 LDP X8, X1, [X0]
	0x0335E55C MOV X0, X20
	0x0335E560 BLR X8
	0x0335E564 STR X31, [X19 + 0x10]
	0x0335E568 STR X31, [X19]
	0x0335E56C LDP X20, X19, [X31 + 0x10]
	0x0335E570 LDR X30, [X31], #0x20
	0x0335E574 RET
	0x0335E578 SUB W8, W0, 0x1
	0x0335E57C UBFM W12, W8, 0x14, 0x1F
	0x0335E580 MOVZ W9, 0x4
	0x0335E584 MOVZ W10, 0x14
	0x0335E588 CMP W12, 0x0
	0x0335E58C CSEL W9, W10, W9, NE
	0x0335E590 LSRV W8, W8, W9

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X0
	007 Move X0, [X0+80]
	008 Compare X0, 0
	009 JumpIfEqual {43}
	010 Move X8, [X0]
	011 Move X9, [X8+872]
	012 Move X1, [X8+880]
	013 NotImplemented "Instruction BLR not yet implemented."
	014 Move X19, X0
	015 Move [X31+12], W31
	016 Add X1, X31, 12
	017 Move X2, X31
	018 Call Monitor.Enter, X0, X1
	019 Move X0, [X20+80]
	020 Compare X0, 0
	021 JumpIfEqual {46}
	022 Move X8, [X0]
	023 Move X1, [X8+832]
	024 Move X9, [X8+824]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move X21, X0
	027 Move X20, X31
	028 Move W8, [X31+12]
	029 Compare W8, 0
	030 JumpIfEqual {34}
	031 Move X0, X19
	032 Move X1, X31
	033 Call Monitor.Exit, X0
	034 Compare X20, 0
	035 JumpIfNotEqual {44}
	036 Move X0, X21
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X30, [X31+16]
	040 Move X21, [X31+24]
	041 Add X31, X31, 48
	042 Return X0
	043 Call 0x1C17F20
	044 Move X0, X20
	045 Call 0x1C17F18
	046 Call 0x1C17F20
	047 Move X21, X0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X0, X21
	050 Call 0x3EB2AD0
	051 Move X20, [X0]
	052 Call 0x3EB2AE0
	053 Move X21, X31
	054 Move X20, X31
	055 Move X21, X0
	056 Move W8, [X31+12]
	057 Compare W8, 0
	058 JumpIfEqual {62}
	059 Move X0, X19
	060 Move X1, X31
	061 Call Monitor.Exit, X0
	062 Compare X20, 0
	063 JumpIfNotEqual {66}
	064 Move X0, X21
	065 Call 0x1D2D690
	066 Move X0, X20
	067 Call 0x1C17F18
	068 Call 0x1991590

Method: System.Collections.ICollection get_Values()

Disassembly:
	0x0335E594 MOVZ W11, 0x8
	0x0335E598 CSET W12, NE
	0x0335E59C UBFM W9, W8, 0x8, 0x1F
	0x0335E5A0 CMP W8, 0xFF
	0x0335E5A4 UBFM W10, W12, 0x1C, 0x1B
	0x0335E5A8 BFM W11, W12, 0x1C, 0x0
	0x0335E5AC CSEL W8, W9, W8, HI
	0x0335E5B0 CSEL W10, W11, W10, HI
	0x0335E5B4 UBFM W9, W8, 0x4, 0x1F
	0x0335E5B8 CMP W8, 0xF
	0x0335E5BC ORR W11, W10, 0x4
	0x0335E5C0 CSEL W8, W9, W8, HI
	0x0335E5C4 CSEL W10, W11, W10, HI
	0x0335E5C8 UBFM W9, W8, 0x2, 0x1F
	0x0335E5CC CMP W8, 0x3
	0x0335E5D0 ORR W11, W10, 0x2
	0x0335E5D4 CSEL W8, W9, W8, HI
	0x0335E5D8 CSEL W10, W11, W10, HI
	0x0335E5DC CMP W8, 0x1
	0x0335E5E0 CSET W9, HI
	0x0335E5E4 CINC W10, W10, HI
	0x0335E5E8 LSRV W8, W8, W9
	0x0335E5EC ADD W0, W10, W8
	0x0335E5F0 RET
	0x0335E5F4 MOVZ W8, 0x10
	0x0335E5F8 LSLV W0, W8, W0
	0x0335E5FC RET
	0x0335E600 REV W0, W0
	0x0335E604 RET
	0x0335E608 REV W8, W0
	0x0335E60C UBFM W0, W8, 0x10, 0x1F
	0x0335E610 RET
	0x0335E614 REV W0, W0
	0x0335E618 RET
	0x0335E61C MOVZ W9, 0x967F
	0x0335E620 MOVK W9, 0x980000
	0x0335E624 MOV X8, X0
	0x0335E628 CMP X0, X9
	0x0335E62C B.LS 0x335E654
	0x0335E630 MOVZ X10, 0x3FFF
	0x0335E634 MOVK X10, 0x107A0000
	0x0335E638 MOVK X10, 0x5AF3
	0x0335E63C CMP X8, X10
	0x0335E640 B.LS 0x335E65C
	0x0335E644 ADD X9, X10, 0x1
	0x0335E648 UDIV X8, X8, X9
	0x0335E64C MOVZ W0, 0xF
	0x0335E650 B 0x335E668
	0x0335E654 MOVZ W0, 0x1
	0x0335E658 B 0x335E668
	0x0335E65C ADD X9, X9, 0x1
	0x0335E660 UDIV X8, X8, X9
	0x0335E664 MOVZ W0, 0x8
	0x0335E668 CMP W8, 0xA
	0x0335E66C B.CC 0x335E6D4
	0x0335E670 CMP W8, 0x63
	0x0335E674 B.HI 0x335E680
	0x0335E678 ADD W0, W0, 0x1
	0x0335E67C RET
	0x0335E680 CMP W8, 0x3E7
	0x0335E684 B.HI 0x335E690
	0x0335E688 ADD W0, W0, 0x2
	0x0335E68C RET

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X0
	007 Move X0, [X0+80]
	008 Compare X0, 0
	009 JumpIfEqual {43}
	010 Move X8, [X0]
	011 Move X9, [X8+872]
	012 Move X1, [X8+880]
	013 NotImplemented "Instruction BLR not yet implemented."
	014 Move X19, X0
	015 Move [X31+12], W31
	016 Add X1, X31, 12
	017 Move X2, X31
	018 Call Monitor.Enter, X0, X1
	019 Move X0, [X20+80]
	020 Compare X0, 0
	021 JumpIfEqual {46}
	022 Move X8, [X0]
	023 Move X1, [X8+848]
	024 Move X9, [X8+840]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move X21, X0
	027 Move X20, X31
	028 Move W8, [X31+12]
	029 Compare W8, 0
	030 JumpIfEqual {34}
	031 Move X0, X19
	032 Move X1, X31
	033 Call Monitor.Exit, X0
	034 Compare X20, 0
	035 JumpIfNotEqual {44}
	036 Move X0, X21
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X30, [X31+16]
	040 Move X21, [X31+24]
	041 Add X31, X31, 48
	042 Return X0
	043 Call 0x1C17F20
	044 Move X0, X20
	045 Call 0x1C17F18
	046 Call 0x1C17F20
	047 Move X21, X0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X0, X21
	050 Call 0x3EB2AD0
	051 Move X20, [X0]
	052 Call 0x3EB2AE0
	053 Move X21, X31
	054 Move X20, X31
	055 Move X21, X0
	056 Move W8, [X31+12]
	057 Compare W8, 0
	058 JumpIfEqual {62}
	059 Move X0, X19
	060 Move X1, X31
	061 Call Monitor.Exit, X0
	062 Compare X20, 0
	063 JumpIfNotEqual {66}
	064 Move X0, X21
	065 Call 0x1D2D690
	066 Move X0, X20
	067 Call 0x1C17F18
	068 Call 0x1991590

Method: System.Void Remove(System.Object key)

Disassembly:
	0x0335E690 UBFM W9, W8, 0x4, 0x1F
	0x0335E694 CMP W9, 0x270
	0x0335E698 B.HI 0x335E6A4
	0x0335E69C ADD W0, W0, 0x3
	0x0335E6A0 RET
	0x0335E6A4 UBFM W9, W8, 0x5, 0x1F
	0x0335E6A8 CMP W9, 0xC34
	0x0335E6AC B.HI 0x335E6B8
	0x0335E6B0 ADD W0, W0, 0x4
	0x0335E6B4 RET
	0x0335E6B8 MOVZ W9, 0x423F
	0x0335E6BC MOVK W9, 0xF0000
	0x0335E6C0 CMP W8, W9
	0x0335E6C4 B.HI 0x335E6D0
	0x0335E6C8 ADD W0, W0, 0x5
	0x0335E6CC RET
	0x0335E6D0 ADD W0, W0, 0x6
	0x0335E6D4 RET
	0x0335E6D8 MOVZ W9, 0x869F
	0x0335E6DC MOVK W9, 0x10000
	0x0335E6E0 UBFM W10, W0, 0x5, 0x1F
	0x0335E6E4 ADD W9, W9, 0x1
	0x0335E6E8 MOV W8, W0
	0x0335E6EC CMP W10, 0xC34
	0x0335E6F0 UDIV W9, W0, W9
	0x0335E6F4 MOVZ W11, 0x6
	0x0335E6F8 CSEL W8, W9, W8, HI
	0x0335E6FC CSINC W0, W11, W31, HI
	0x0335E700 CMP W8, 0xA
	0x0335E704 B.CC 0x335E740
	0x0335E708 CMP W8, 0x63
	0x0335E70C B.HI 0x335E718
	0x0335E710 ADD W0, W0, 0x1
	0x0335E714 RET
	0x0335E718 CMP W8, 0x3E7
	0x0335E71C B.HI 0x335E728
	0x0335E720 ADD W0, W0, 0x2
	0x0335E724 RET
	0x0335E728 UBFM W8, W8, 0x4, 0x1F
	0x0335E72C CMP W8, 0x270
	0x0335E730 B.HI 0x335E73C
	0x0335E734 ADD W0, W0, 0x3
	0x0335E738 RET
	0x0335E73C ADD W0, W0, 0x4
	0x0335E740 RET
	0x0335E744 UBFM X8, X0, 0x20, 0x3F
	0x0335E748 CMP X8, 0x0
	0x0335E74C CSEL X8, X8, X0, NE
	0x0335E750 MOVZ W9, 0x9
	0x0335E754 UBFM X11, X8, 0x10, 0x3F
	0x0335E758 CSINC W9, W9, W31, NE
	0x0335E75C CMP X11, 0x0
	0x0335E760 ORR W10, W9, 0x4
	0x0335E764 CSEL X8, X11, X8, NE
	0x0335E768 CSEL W9, W10, W9, NE
	0x0335E76C UBFM X11, X8, 0x8, 0x3F
	0x0335E770 CMP X8, 0xFF
	0x0335E774 ORR W10, W9, 0x2
	0x0335E778 CSEL X8, X11, X8, HI
	0x0335E77C CSEL W9, W10, W9, HI
	0x0335E780 CMP X8, 0xF

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X0
	007 Move X0, [X0+80]
	008 Compare X0, 0
	009 JumpIfEqual {43}
	010 Move X8, [X0]
	011 Move X20, X1
	012 Move X9, [X8+872]
	013 Move X1, [X8+880]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move X19, X0
	016 Move [X31+12], W31
	017 Add X1, X31, 12
	018 Move X2, X31
	019 Call Monitor.Enter, X0, X1
	020 Move X0, [X21+80]
	021 Compare X0, 0
	022 JumpIfEqual {46}
	023 Move X8, [X0]
	024 Move X9, [X8+856]
	025 Move X2, [X8+864]
	026 Move X1, X20
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X20, X31
	029 Move W8, [X31+12]
	030 Compare W8, 0
	031 JumpIfEqual {35}
	032 Move X0, X19
	033 Move X1, X31
	034 Call Monitor.Exit, X0
	035 Compare X20, 0
	036 JumpIfNotEqual {44}
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X30, [X31+16]
	040 Move X21, [X31+24]
	041 Add X31, X31, 48
	042 Return 
	043 Call 0x1C17F20
	044 Move X0, X20
	045 Call 0x1C17F18
	046 Call 0x1C17F20
	047 Move X21, X0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X0, X21
	050 Call 0x3EB2AD0
	051 Move X20, [X0]
	052 Call 0x3EB2AE0
	053 Move X20, X31
	054 Move X21, X0
	055 Move W8, [X31+12]
	056 Compare W8, 0
	057 JumpIfEqual {61}
	058 Move X0, X19
	059 Move X1, X31
	060 Call Monitor.Exit, X0
	061 Compare X20, 0
	062 JumpIfNotEqual {65}
	063 Move X0, X21
	064 Call 0x1D2D690
	065 Move X0, X20
	066 Call 0x1C17F18
	067 Call 0x1991590

Method: System.Void OnDeserialization(System.Object sender)

Disassembly:
	0x0335E784 CINC W0, W9, HI

ISIL:
	001 Return 

