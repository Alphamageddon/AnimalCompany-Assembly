Type: System.Collections.Queue

Method: System.Void .ctor()

Disassembly:
	0x03353B00 LDR X0, [X0 + 0x3F8]
	0x03353B04 BL 0x1C16D08
	0x03353B08 MOV X20, X0

ISIL:
	001 Move S0, 2
	002 Move W1, 32

Method: System.Void .ctor(System.Int32 capacity)

Disassembly:
	0x03353CC4 MOV X19, X0
	0x03353CC8 MOV W21, W1

ISIL:
	001 Move S0, 2
	002 Call Queue..ctor, X0, X1, V0
	003 Return 

Method: System.Void .ctor(System.Int32 capacity, System.Single growFactor)

Disassembly:
	0x03353B0C ADRP X0, 0xDC8000
	0x03353B10 LDR X0, [X0 + 0x670]
	0x03353B14 BL 0x1C16D08
	0x03353B18 MOV X2, X0
	0x03353B1C MOV X0, X19
	0x03353B20 MOV X1, X20
	0x03353B24 MOV X3, X31
	0x03353B28 BL 0x3311888
	0x03353B2C ADRP X0, 0xDD7000
	0x03353B30 LDR X0, [X0 + 0x400]
	0x03353B34 BL 0x1C16D08
	0x03353B38 MOV X1, X0
	0x03353B3C MOV X0, X19
	0x03353B40 BL 0x1C16DEC
	0x03353B44 STR X30, [X31 - 0x20]!
	0x03353B48 STP X20, X19, [X31 + 0x10]
	0x03353B4C MOV X19, X1
	0x03353B50 MOV X1, X31
	0x03353B54 MOV X20, X0
	0x03353B58 BL 0x33BDD8C
	0x03353B5C MOV X0, X20
	0x03353B60 BL 0x33538C0
	0x03353B64 CBZ X19, 0x3353B6C
	0x03353B68 STR X19, [X20 + 0x28]
	0x03353B6C LDP X20, X19, [X31 + 0x10]
	0x03353B70 LDR X30, [X31], #0x20
	0x03353B74 RET
	0x03353B78 STP X30, X21, [X31 - 0x20]!
	0x03353B7C STP X20, X19, [X31 + 0x10]
	0x03353B80 CBZ X1, 0x3353BD0
	0x03353B84 MOV X20, X0
	0x03353B88 MOV X21, X2
	0x03353B8C LDR X0, [X0 + 0x10]
	0x03353B90 LDR W2, [X20 + 0x20]
	0x03353B94 LDR X4, [X20 + 0x28]
	0x03353B98 MOV X19, X1
	0x03353B9C MOV W1, W31
	0x03353BA0 MOV X3, X19
	0x03353BA4 MOV X5, X31
	0x03353BA8 BL 0x33A0778
	0x03353BAC MOV W1, W0
	0x03353BB0 TBZ X0, 0x1F, 0x3353C2C
	0x03353BB4 MOV X0, X20
	0x03353BB8 MOV X2, X19
	0x03353BBC LDP X20, X19, [X31 + 0x10]
	0x03353BC0 ORN W1, W31, W1, 0x0
	0x03353BC4 MOV X3, X21
	0x03353BC8 LDP X30, X21, [X31], #0x20
	0x03353BCC B 0x3353C9C
	0x03353BD0 ADRP X0, 0xDA5000
	0x03353BD4 LDR X0, [X0 + 0x528]
	0x03353BD8 BL 0x1C16D08
	0x03353BDC BL 0x1C16F10
	0x03353BE0 MOV X19, X0
	0x03353BE4 ADRP X0, 0xDCA000
	0x03353BE8 LDR X0, [X0 + 0x70]
	0x03353BEC BL 0x1C16D08
	0x03353BF0 MOV X20, X0
	0x03353BF4 ADRP X0, 0xDD7000
	0x03353BF8 LDR X0, [X0 + 0x288]
	0x03353BFC BL 0x1C16D08
	0x03353C00 MOV X2, X0
	0x03353C04 MOV X0, X19
	0x03353C08 MOV X1, X20
	0x03353C0C MOV X3, X31
	0x03353C10 BL 0x3315F7C
	0x03353C14 ADRP X0, 0xDD7000
	0x03353C18 LDR X0, [X0 + 0x408]
	0x03353C1C BL 0x1C16D08
	0x03353C20 MOV X1, X0
	0x03353C24 MOV X0, X19
	0x03353C28 BL 0x1C16DEC
	0x03353C2C LDR X8, [X20]
	0x03353C30 MOV X0, X20
	0x03353C34 LDR X9, [X8 + 0x328]
	0x03353C38 LDR X2, [X8 + 0x330]
	0x03353C3C BLR X9
	0x03353C40 MOV X20, X0
	0x03353C44 ADRP X0, 0xDD7000
	0x03353C48 LDR X0, [X0 + 0x2B0]
	0x03353C4C BL 0x1C16D08
	0x03353C50 MOV X1, X20
	0x03353C54 MOV X2, X19
	0x03353C58 MOV X3, X31
	0x03353C5C BL 0x320A264
	0x03353C60 MOV X19, X0
	0x03353C64 ADRP X0, 0xDA8000
	0x03353C68 LDR X0, [X0 + 0x578]
	0x03353C6C BL 0x1C16D08
	0x03353C70 BL 0x1C16F10
	0x03353C74 MOV X1, X19
	0x03353C78 MOV X2, X31
	0x03353C7C MOV X20, X0
	0x03353C80 BL 0x3314A68
	0x03353C84 ADRP X0, 0xDD7000
	0x03353C88 LDR X0, [X0 + 0x408]
	0x03353C8C BL 0x1C16D08
	0x03353C90 MOV X1, X0
	0x03353C94 MOV X0, X20
	0x03353C98 BL 0x1C16DEC
	0x03353C9C STR X30, [X31 - 0x40]!
	0x03353CA0 STP X24, X23, [X31 + 0x10]
	0x03353CA4 STP X22, X21, [X31 + 0x20]
	0x03353CA8 STP X20, X19, [X31 + 0x30]
	0x03353CAC LDR X9, [X0 + 0x10]
	0x03353CB0 CBZ X9, 0x3353DB8
	0x03353CB4 LDR W8, [X0 + 0x20]
	0x03353CB8 LDR W9, [X9 + 0x18]
	0x03353CBC MOV X20, X3
	0x03353CC0 MOV X22, X2

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x108A000
	007 Move W8, [X21+3536]
	008 Move V8, V0
	009 Move W20, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xDA1000
	016 Move X0, [X0+2512]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3536], W8
	020 Move X0, X19
	021 Move X1, X31
	022 Call Object..ctor, X0
	023 Move TEMP, X20
	024 And TEMP, TEMP, -2147483648
	025 Compare TEMP, -2147483648
	026 JumpIfEqual {55}
	027 Move S0, 1
	028 NotImplemented "Instruction FCMP not yet implemented."
	029 Move S0, 10
	030 NotImplemented "Instruction FCMP not yet implemented."
	031 Move X8, 0xDA1000
	032 Move X8, [X8+2512]
	033 Move W1, W20
	034 Move X0, [X8]
	035 Call 0x1C17D6C
	036 Move W8, 0x42C80000
	037 Move W9, 0x7F800000
	038 Move S0, W8
	039 Multiply S0, S8, S0
	040 Move S1, W9
	041 Move W10, 0x80000000
	042 NotImplemented "Instruction FCVTZS not yet implemented."
	043 NotImplemented "Instruction FCMP not yet implemented."
	044 NotImplemented "Instruction CSEL not yet implemented."
	045 Move [X19+16], X0
	046 Move [X19+24], X31
	047 Move [X19+32], W31
	048 Move [X19+36], W8
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X30, [X31+16]
	052 Move X21, [X31+24]
	053 Move V8, [X31+48]
	054 Return 
	055 Move X0, 0xDA9000
	056 Move X0, [X0+1888]
	057 Call 0x1C17D08
	058 Call 0x1C17F10
	059 Move X19, X0
	060 Move X0, 0xDCB000
	061 Move X0, [X0+88]
	062 Call 0x1C17D08
	063 Move X20, X0
	064 Move X0, 0xDC9000
	065 Move X0, [X0+1648]
	066 Call 0x1C17D08
	067 Move X2, X0
	068 Move X0, X19
	069 Move X1, X20
	070 Move X3, X31
	071 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	072 Move X0, 0xDD8000
	073 Move X0, [X0+920]
	074 Call 0x1C17D08
	075 Move X1, X0
	076 Move X0, X19
	077 Call 0x1C17DEC
	078 Move W8, 1
	079 Move [X31+12], W8
	080 Move X19, 0xDA1000
	081 Move X19, [X19+1880]
	082 Move X0, X19
	083 Call 0x1C17D08
	084 Add X1, X31, 12
	085 Call 0x1C17E04
	086 Move X20, X0
	087 Move W8, 10
	088 Move X0, X19
	089 Move [X31+8], W8
	090 Call 0x1C17D08
	091 Add X1, X31, 8
	092 Call 0x1C17E04
	093 Move X19, X0
	094 Move X0, 0xDD8000
	095 Move X0, [X0+928]
	096 Call 0x1C17D08
	097 Move X1, X20
	098 Move X2, X19
	099 Move X3, X31
	100 Call SR.Format, X0, X1, X2
	101 Move X19, X0
	102 Move X0, 0xDA9000
	103 Move X0, [X0+1888]
	104 Call 0x1C17D08
	105 Call 0x1C17F10
	106 Move X20, X0
	107 Move X0, 0xDD8000
	108 Move X0, [X0+936]
	109 Call 0x1C17D08
	110 Move X1, X0
	111 Move X0, X20
	112 Move X2, X19
	113 Move X3, X31
	114 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	115 Move X0, 0xDD8000
	116 Move X0, [X0+920]
	117 Call 0x1C17D08
	118 Move X1, X0
	119 Move X0, X20
	120 Call 0x1C17DEC

Method: System.Void .ctor(System.Collections.ICollection col)

Disassembly:
	0x03353CCC CMP W8, W9
	0x03353CD0 B.NE 0x3353CE4
	0x03353CD4 ADD W1, W8, 0x1
	0x03353CD8 MOV X0, X19
	0x03353CDC BL 0x33543D4
	0x03353CE0 LDR W8, [X19 + 0x20]
	0x03353CE4 SUBS W4, W8, W21
	0x03353CE8 B.LE 0x3353D28
	0x03353CEC LDR X0, [X19 + 0x10]
	0x03353CF0 ADD W23, W21, 0x1
	0x03353CF4 MOV W1, W21
	0x03353CF8 MOV W3, W23
	0x03353CFC MOV X2, X0
	0x03353D00 MOV X5, X31
	0x03353D04 BL 0x339FCE8
	0x03353D08 LDR W8, [X19 + 0x20]
	0x03353D0C LDR X0, [X19 + 0x18]
	0x03353D10 MOV W1, W21
	0x03353D14 MOV W3, W23
	0x03353D18 SUB W4, W8, W21
	0x03353D1C MOV X2, X0
	0x03353D20 MOV X5, X31
	0x03353D24 BL 0x339FCE8
	0x03353D28 LDR X24, [X19 + 0x10]
	0x03353D2C CBZ X24, 0x3353DB8
	0x03353D30 CBZ X22, 0x3353D48
	0x03353D34 LDR X8, [X24]
	0x03353D38 MOV X0, X22
	0x03353D3C LDR X1, [X8 + 0x40]
	0x03353D40 BL 0x1C16E00
	0x03353D44 CBZ X0, 0x3353DC0
	0x03353D48 LDR W8, [X24 + 0x18]
	0x03353D4C CMP W8, W21
	0x03353D50 B.LS 0x3353DBC
	0x03353D54 SXTW X23, W21
	0x03353D58 ADD X8, X24, X23, 0x3, LSL
	0x03353D5C STR X22, [X8 + 0x20]
	0x03353D60 LDR X22, [X19 + 0x18]
	0x03353D64 CBZ X22, 0x3353DB8
	0x03353D68 CBZ X20, 0x3353D80
	0x03353D6C LDR X8, [X22]
	0x03353D70 MOV X0, X20
	0x03353D74 LDR X1, [X8 + 0x40]
	0x03353D78 BL 0x1C16E00
	0x03353D7C CBZ X0, 0x3353DC0
	0x03353D80 LDR W8, [X22 + 0x18]
	0x03353D84 CMP W8, W21
	0x03353D88 B.LS 0x3353DBC
	0x03353D8C ADD X8, X22, X23, 0x3, LSL
	0x03353D90 STR X20, [X8 + 0x20]
	0x03353D94 LDR V0, [X19 + 0x20]
	0x03353D98 MOVI V1.2S, 0x1
	0x03353D9C LDP X22, X21, [X31 + 0x20]
	0x03353DA0 LDP X24, X23, [X31 + 0x10]
	0x03353DA4 ADD S0.2S, S0.2S, S1.2S
	0x03353DA8 STR D0, [X19 + 0x20]
	0x03353DAC LDP X20, X19, [X31 + 0x30]
	0x03353DB0 LDR X30, [X31], #0x40
	0x03353DB4 RET
	0x03353DB8 BL 0x1C16F20
	0x03353DBC BL 0x1C16F28
	0x03353DC0 BL 0x1C16F44
	0x03353DC4 MOV X1, X31
	0x03353DC8 BL 0x1C16DEC
	0x03353DCC STP X30, X21, [X31 - 0x20]!
	0x03353DD0 STP X20, X19, [X31 + 0x10]
	0x03353DD4 ADRP X21, 0x1089000
	0x03353DD8 LDRB W8, [X21 + 0xDD8]
	0x03353DDC MOV W20, W1
	0x03353DE0 MOV X19, X0
	0x03353DE4 TBNZ X8, 0x0, 0x3353E08
	0x03353DE8 ADRP X0, 0xDA0000
	0x03353DEC LDR X0, [X0 + 0x9C8]
	0x03353DF0 BL 0x1C16CF4
	0x03353DF4 ADRP X0, 0xDA0000
	0x03353DF8 LDR X0, [X0 + 0x9D0]
	0x03353DFC BL 0x1C16CF4
	0x03353E00 MOVZ W8, 0x1
	0x03353E04 STRB W8, [X21 + 0xDD8]
	0x03353E08 LDR X8, [X19]
	0x03353E0C MOV X0, X19
	0x03353E10 LDR X9, [X8 + 0x278]
	0x03353E14 LDR X1, [X8 + 0x280]
	0x03353E18 BLR X9
	0x03353E1C CMP W0, W20
	0x03353E20 B.GT 0x3353F70
	0x03353E24 LDR X8, [X19 + 0x10]
	0x03353E28 CBZ X8, 0x3353FCC
	0x03353E2C LDR W8, [X8 + 0x18]
	0x03353E30 CMP W8, W20
	0x03353E34 B.EQ 0x3353F64
	0x03353E38 CMP W20, 0x1
	0x03353E3C B.LT 0x3353EB4
	0x03353E40 ADRP X21, 0xDA0000
	0x03353E44 LDR X21, [X21 + 0x9D0]
	0x03353E48 MOV W1, W20
	0x03353E4C LDR X0, [X21]
	0x03353E50 BL 0x1C16D6C
	0x03353E54 LDR X8, [X21]
	0x03353E58 MOV X21, X0
	0x03353E5C MOV W1, W20
	0x03353E60 MOV X0, X8
	0x03353E64 BL 0x1C16D6C
	0x03353E68 LDR W4, [X19 + 0x20]
	0x03353E6C MOV X20, X0
	0x03353E70 CMP W4, 0x1
	0x03353E74 B.LT 0x3353EAC
	0x03353E78 LDR X0, [X19 + 0x10]
	0x03353E7C MOV W1, W31
	0x03353E80 MOV X2, X21
	0x03353E84 MOV W3, W31
	0x03353E88 MOV X5, X31
	0x03353E8C BL 0x339FCE8
	0x03353E90 LDR X0, [X19 + 0x18]
	0x03353E94 LDR W4, [X19 + 0x20]
	0x03353E98 MOV W1, W31
	0x03353E9C MOV X2, X20
	0x03353EA0 MOV W3, W31
	0x03353EA4 MOV X5, X31
	0x03353EA8 BL 0x339FCE8
	0x03353EAC STP X21, X20, [X19 + 0x10]
	0x03353EB0 B 0x3353F64
	0x03353EB4 ADRP X21, 0xDA0000
	0x03353EB8 LDR X21, [X21 + 0x9C8]
	0x03353EBC LDR X20, [X21]
	0x03353EC0 LDR X8, [X20 + 0x38]
	0x03353EC4 CBNZ X8, 0x3353ED4
	0x03353EC8 MOV X0, X20
	0x03353ECC BL 0x1C5C6E0
	0x03353ED0 LDR X8, [X20 + 0x38]
	0x03353ED4 LDR X0, [X8 + 0x10]
	0x03353ED8 LDRB W8, [X0 + 0x135]
	0x03353EDC TBNZ X8, 0x0, 0x3353EE4
	0x03353EE0 BL 0x1C5C684
	0x03353EE4 LDR W8, [X0 + 0xE0]
	0x03353EE8 CBNZ W8, 0x3353EF0
	0x03353EEC BL 0x1C16DFC
	0x03353EF0 LDR X8, [X20 + 0x38]
	0x03353EF4 LDR X0, [X8 + 0x10]
	0x03353EF8 LDRB W8, [X0 + 0x135]
	0x03353EFC TBNZ X8, 0x0, 0x3353F04
	0x03353F00 BL 0x1C5C684
	0x03353F04 LDR X8, [X0 + 0xB8]
	0x03353F08 LDR X8, [X8]
	0x03353F0C STR X8, [X19 + 0x10]
	0x03353F10 LDR X20, [X21]
	0x03353F14 LDR X8, [X20 + 0x38]
	0x03353F18 CBNZ X8, 0x3353F28
	0x03353F1C MOV X0, X20
	0x03353F20 BL 0x1C5C6E0
	0x03353F24 LDR X8, [X20 + 0x38]
	0x03353F28 LDR X0, [X8 + 0x10]
	0x03353F2C LDRB W8, [X0 + 0x135]
	0x03353F30 TBNZ X8, 0x0, 0x3353F38
	0x03353F34 BL 0x1C5C684
	0x03353F38 LDR W8, [X0 + 0xE0]
	0x03353F3C CBNZ W8, 0x3353F44
	0x03353F40 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x108A000
	007 Move W8, [X21+3537]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xDA8000
	015 Move X0, [X0+752]
	016 Call 0x1C17CF4
	017 Move X0, 0xDA9000
	018 Move X0, [X0+3512]
	019 Call 0x1C17CF4
	020 Move X0, 0xDA1000
	021 Move X0, [X0+3608]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3537], W8
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CSEL not yet implemented."
	027 Compare X20, 0
	028 JumpIfEqual {144}
	029 Move X10, 0xDA8000
	030 Move X8, [X20]
	031 Move X10, [X10+752]
	032 Move X22, 0xDA9000
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X1, [X10]
	035 Move X22, [X22+3512]
	036 Compare X9, 0
	037 JumpIfEqual {44}
	038 Move X10, [X8+176]
	039 Add X10, X10, 8
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract X9, X9, 1
	043 Add X10, X10, 16
	044 Move W2, 1
	045 Move X0, X20
	046 Call 0x1C5D788
	047 Move W9, [X10]
	048 Add W9, W9, 1
	049 Add X8, X8, W9
	050 Add X0, X8, 312
	051 Move X8, [X0]
	052 Move X1, [X0+8]
	053 Move X0, X20
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move W1, W0
	056 Move S0, 2
	057 Move X0, X21
	058 Call Queue..ctor, X0, X1, V0
	059 Move X8, [X20]
	060 Move X1, [X22]
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 Compare X9, 0
	063 JumpIfEqual {70}
	064 Move X10, [X8+176]
	065 Add X10, X10, 8
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Subtract X9, X9, 1
	069 Add X10, X10, 16
	070 Move X0, X20
	071 Move W2, W31
	072 Call 0x1C5D788
	073 NotImplemented "Instruction LDRSW not yet implemented."
	074 Add X8, X8, X9
	075 Add X0, X8, 312
	076 Move X8, [X0]
	077 Move X1, [X0+8]
	078 Move X0, X20
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Compare X0, 0
	081 JumpIfEqual {165}
	082 Move X21, 0xDA1000
	083 Move X21, [X21+3608]
	084 Move X20, X0
	085 Move X8, [X20]
	086 Move X1, [X21]
	087 NotImplemented "Instruction LDRH not yet implemented."
	088 Compare X9, 0
	089 JumpIfEqual {96}
	090 Move X10, [X8+176]
	091 Add X10, X10, 8
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Subtract X9, X9, 1
	095 Add X10, X10, 16
	096 Move X0, X20
	097 Move W2, W31
	098 Call 0x1C5D788
	099 NotImplemented "Instruction LDRSW not yet implemented."
	100 Add X8, X8, X9
	101 Add X0, X8, 312
	102 Move X8, [X0]
	103 Move X1, [X0+8]
	104 Move X0, X20
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {138}
	110 Move X8, [X20]
	111 Move X1, [X21]
	112 NotImplemented "Instruction LDRH not yet implemented."
	113 Compare X9, 0
	114 JumpIfEqual {121}
	115 Move X10, [X8+176]
	116 Add X10, X10, 8
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Subtract X9, X9, 1
	120 Add X10, X10, 16
	121 Move W2, 1
	122 Move X0, X20
	123 Call 0x1C5D788
	124 Move W9, [X10]
	125 Add W9, W9, 1
	126 Add X8, X8, W9
	127 Add X0, X8, 312
	128 Move X8, [X0]
	129 Move X1, [X0+8]
	130 Move X0, X20
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move X8, [X19]
	133 Move X1, X0
	134 Move X0, X19
	135 Move X9, [X8+552]
	136 Move X2, [X8+560]
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Move X20, [X31+32]
	139 Move X19, [X31+40]
	140 Move X22, [X31+16]
	141 Move X21, [X31+24]
	142 Move X30, [X31+48]
	143 Return 
	144 Move W1, 32
	145 Move X0, X19
	146 Call Queue..ctor, X0, X1
	147 Move X0, 0xDA6000
	148 Move X0, [X0+1320]
	149 Call 0x1C17D08
	150 Call 0x1C17F10
	151 Move X19, X0
	152 Move X0, 0xDD8000
	153 Move X0, [X0+944]
	154 Call 0x1C17D08
	155 Move X1, X0
	156 Move X0, X19
	157 Move X2, X31
	158 Call ArgumentNullException..ctor, X0, X1
	159 Move X0, 0xDD8000
	160 Move X0, [X0+952]
	161 Call 0x1C17D08
	162 Move X1, X0
	163 Move X0, X19
	164 Call 0x1C17DEC
	165 Call 0x1C17F20

Method: System.Int32 get_Count()

Disassembly:
	0x03353F44 LDR X8, [X20 + 0x38]
	0x03353F48 LDR X0, [X8 + 0x10]

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Object Clone()

Disassembly:
	0x03353F4C LDRB W8, [X0 + 0x135]
	0x03353F50 TBNZ X8, 0x0, 0x3353F58
	0x03353F54 BL 0x1C5C684
	0x03353F58 LDR X8, [X0 + 0xB8]
	0x03353F5C LDR X8, [X8]
	0x03353F60 STR X8, [X19 + 0x18]
	0x03353F64 LDP X20, X19, [X31 + 0x10]
	0x03353F68 LDP X30, X21, [X31], #0x20
	0x03353F6C RET
	0x03353F70 ADRP X0, 0xDA8000
	0x03353F74 LDR X0, [X0 + 0x760]
	0x03353F78 BL 0x1C16D08
	0x03353F7C BL 0x1C16F10
	0x03353F80 MOV X19, X0
	0x03353F84 ADRP X0, 0xDAA000
	0x03353F88 LDR X0, [X0 + 0xEC8]
	0x03353F8C BL 0x1C16D08
	0x03353F90 MOV X20, X0
	0x03353F94 ADRP X0, 0xDCA000
	0x03353F98 LDR X0, [X0 + 0x2A0]
	0x03353F9C BL 0x1C16D08
	0x03353FA0 MOV X2, X0
	0x03353FA4 MOV X0, X19
	0x03353FA8 MOV X1, X20
	0x03353FAC MOV X3, X31
	0x03353FB0 BL 0x3311888
	0x03353FB4 ADRP X0, 0xDD7000
	0x03353FB8 LDR X0, [X0 + 0x410]
	0x03353FBC BL 0x1C16D08
	0x03353FC0 MOV X1, X0
	0x03353FC4 MOV X0, X19
	0x03353FC8 BL 0x1C16DEC
	0x03353FCC BL 0x1C16F20
	0x03353FD0 LDR W0, [X0 + 0x20]
	0x03353FD4 RET
	0x03353FD8 LDR X8, [X0]
	0x03353FDC LDR X2, [X8 + 0x338]
	0x03353FE0 LDR X1, [X8 + 0x340]
	0x03353FE4 BR X2
	0x03353FE8 LDR X8, [X0]
	0x03353FEC LDR X2, [X8 + 0x348]
	0x03353FF0 LDR X1, [X8 + 0x350]
	0x03353FF4 BR X2
	0x03353FF8 MOV W0, W31
	0x03353FFC RET
	0x03354000 STR X30, [X31 - 0x20]!
	0x03354004 STP X20, X19, [X31 + 0x10]
	0x03354008 ADRP X20, 0x1088000
	0x0335400C LDRB W8, [X20 + 0xDD9]
	0x03354010 MOV X19, X0
	0x03354014 TBNZ X8, 0x0, 0x335402C
	0x03354018 ADRP X0, 0xDA5000
	0x0335401C LDR X0, [X0 + 0xCC0]
	0x03354020 BL 0x1C16CF4
	0x03354024 MOVZ W8, 0x1
	0x03354028 STRB W8, [X20 + 0xDD9]
	0x0335402C LDR X0, [X19 + 0x40]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x108A000
	007 Move X20, 0xDD2000
	008 Move W8, [X21+3538]
	009 Move X20, [X20+1272]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xDD2000
	016 Move X0, [X0+1272]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3538], W8
	020 Move X0, [X20]
	021 Move W21, [X19+32]
	022 Call 0x1C17F10
	023 Move S0, 2
	024 Move W1, W21
	025 Move X20, X0
	026 Call Queue..ctor, X0, X1, V0
	027 Compare X20, 0
	028 JumpIfEqual {66}
	029 Move W8, [X19+32]
	030 Move [X20+32], W8
	031 Move X0, [X19+16]
	032 Compare X0, 0
	033 JumpIfEqual {66}
	034 Move W1, [X19+24]
	035 Move W8, [X0+24]
	036 Move W22, [X19+32]
	037 Move X2, [X20+16]
	038 Move W3, W31
	039 Subtract W8, W8, W1
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 Move W4, W21
	043 Move X5, X31
	044 Call Array.Copy, X0, X1, X2, X3, X4
	045 Subtract W4, W22, W21
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, [X19+16]
	048 Compare X0, 0
	049 JumpIfEqual {66}
	050 Move W8, [X19+24]
	051 Move W9, [X0+24]
	052 Move X2, [X20+16]
	053 Move W1, W31
	054 Move X5, X31
	055 Subtract W3, W9, W8
	056 Call Array.Copy, X0, X1, X2, X3, X4
	057 Move W8, [X19+40]
	058 Move X0, X20
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move [X20+40], W8
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X30, [X31+48]
	065 Return X0
	066 Call 0x1C17F20

Method: System.Boolean get_IsSynchronized()

Disassembly:
	0x03354030 CBNZ X0, 0x3354064
	0x03354034 ADRP X8, 0xDA5000

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Object get_SyncRoot()

Disassembly:
	0x03354038 LDR X8, [X8 + 0xCC0]
	0x0335403C LDR X0, [X8]
	0x03354040 BL 0x1C16F10
	0x03354044 MOV X1, X31
	0x03354048 MOV X20, X0
	0x0335404C BL 0x33BDD8C
	0x03354050 MOV X0, X19
	0x03354054 MOV X1, X20
	0x03354058 MOV X2, X31
	0x0335405C BL 0x1C24138
	0x03354060 LDR X0, [X19]
	0x03354064 LDP X20, X19, [X31 + 0x10]
	0x03354068 LDR X30, [X31], #0x20
	0x0335406C RET
	0x03354070 STP X30, X21, [X31 - 0x20]!
	0x03354074 STP X20, X19, [X31 + 0x10]
	0x03354078 ADRP X21, 0x1088000
	0x0335407C ADRP X20, 0xDD6000
	0x03354080 LDRB W8, [X21 + 0xDDA]
	0x03354084 LDR X20, [X20 + 0x418]
	0x03354088 MOV X19, X0
	0x0335408C TBNZ X8, 0x0, 0x33540A4
	0x03354090 ADRP X0, 0xDD6000
	0x03354094 LDR X0, [X0 + 0x418]
	0x03354098 BL 0x1C16CF4
	0x0335409C MOVZ W8, 0x1
	0x033540A0 STRB W8, [X21 + 0xDDA]
	0x033540A4 LDR X0, [X20]
	0x033540A8 LDR W21, [X19 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1089000
	005 Move W8, [X20+3539]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xDA6000
	012 Move X0, [X0+3264]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3539], W8
	016 Add X19, X19, 48
	017 Move X0, [X19]
	018 Compare X0, 0
	019 JumpIfNotEqual {33}
	020 Move X8, 0xDA6000
	021 Move X8, [X8+3264]
	022 Move X0, [X8]
	023 Call 0x1C17F10
	024 Move X1, X31
	025 Move X20, X0
	026 Call Object..ctor, X0
	027 Move X0, X19
	028 Move X1, X20
	029 Move X2, X31
	030 Move X3, X31
	031 Call Interlocked.CompareExchange, X0, X1, X2
	032 Move X0, [X19]
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Void CopyTo(System.Array array, System.Int32 index)

Disassembly:
	0x033540AC BL 0x1C16F10
	0x033540B0 MOV W1, W21
	0x033540B4 MOV X20, X0
	0x033540B8 BL 0x3353A0C
	0x033540BC CBZ X20, 0x3354118
	0x033540C0 LDR X0, [X19 + 0x10]
	0x033540C4 LDR X2, [X20 + 0x10]
	0x033540C8 LDR W4, [X19 + 0x20]
	0x033540CC MOV W1, W31
	0x033540D0 MOV W3, W31
	0x033540D4 MOV X5, X31
	0x033540D8 BL 0x339FCE8
	0x033540DC LDR X0, [X19 + 0x18]
	0x033540E0 LDR X2, [X20 + 0x18]
	0x033540E4 LDR W4, [X19 + 0x20]
	0x033540E8 MOV W1, W31
	0x033540EC MOV W3, W31
	0x033540F0 MOV X5, X31
	0x033540F4 BL 0x339FCE8
	0x033540F8 LDR V0, [X19 + 0x20]
	0x033540FC MOV X0, X20
	0x03354100 STR D0, [X20 + 0x20]
	0x03354104 LDR X8, [X19 + 0x28]
	0x03354108 STR X8, [X20 + 0x28]
	0x0335410C LDP X20, X19, [X31 + 0x10]
	0x03354110 LDP X30, X21, [X31], #0x20
	0x03354114 RET
	0x03354118 BL 0x1C16F20
	0x0335411C STR X30, [X31 - 0x10]!
	0x03354120 LDR X8, [X0]
	0x03354124 LDR X9, [X8 + 0x378]
	0x03354128 LDR X2, [X8 + 0x380]
	0x0335412C BLR X9
	0x03354130 ORN W8, W31, W0, 0x0
	0x03354134 UBFM W0, W8, 0x1F, 0x1F
	0x03354138 LDR X30, [X31], #0x10
	0x0335413C RET
	0x03354140 STR X30, [X31 - 0x10]!
	0x03354144 LDR X8, [X0]
	0x03354148 LDR X9, [X8 + 0x388]
	0x0335414C LDR X2, [X8 + 0x390]
	0x03354150 BLR X9
	0x03354154 ORN W8, W31, W0, 0x0
	0x03354158 UBFM W0, W8, 0x1F, 0x1F
	0x0335415C LDR X30, [X31], #0x10
	0x03354160 RET
	0x03354164 SUB X31, X31, 0x40
	0x03354168 STP X30, X23, [X31 + 0x10]
	0x0335416C STP X22, X21, [X31 + 0x20]
	0x03354170 STP X20, X19, [X31 + 0x30]
	0x03354174 ADRP X22, 0x1088000
	0x03354178 LDRB W8, [X22 + 0xDDB]
	0x0335417C MOV W21, W2
	0x03354180 MOV X19, X1
	0x03354184 MOV X20, X0
	0x03354188 TBNZ X8, 0x0, 0x33541A0
	0x0335418C ADRP X0, 0xDA7000
	0x03354190 LDR X0, [X0 + 0xF10]
	0x03354194 BL 0x1C16CF4
	0x03354198 MOVZ W8, 0x1
	0x0335419C STRB W8, [X22 + 0xDDB]
	0x033541A0 CBZ X19, 0x33542B4
	0x033541A4 MOV X0, X19
	0x033541A8 MOV X1, X31
	0x033541AC BL 0x339FCE4
	0x033541B0 CMP W0, 0x1
	0x033541B4 B.NE 0x33542FC
	0x033541B8 TBNZ X21, 0x1F, 0x3354344
	0x033541BC MOV X0, X19
	0x033541C0 MOV X1, X31
	0x033541C4 BL 0x3395B7C
	0x033541C8 LDR X8, [X20]
	0x033541CC MOV W22, W0
	0x033541D0 MOV X0, X20
	0x033541D4 LDR X9, [X8 + 0x278]
	0x033541D8 LDR X1, [X8 + 0x280]
	0x033541DC BLR X9
	0x033541E0 SUB W8, W22, W21
	0x033541E4 CMP W8, W0
	0x033541E8 B.LT 0x335438C
	0x033541EC LDR X8, [X20]
	0x033541F0 MOV X0, X20
	0x033541F4 LDR X9, [X8 + 0x278]
	0x033541F8 LDR X1, [X8 + 0x280]
	0x033541FC BLR X9
	0x03354200 CMP W0, 0x1
	0x03354204 B.LT 0x3354298
	0x03354208 ADRP X22, 0xDA7000
	0x0335420C LDR X22, [X22 + 0xF10]
	0x03354210 MOV W21, W21
	0x03354214 MOVZ W23, 0x4
	0x03354218 LDR X8, [X20 + 0x10]
	0x0335421C CBZ X8, 0x33542AC
	0x03354220 LDR W10, [X8 + 0x18]
	0x03354224 SUB X9, X23, 0x4
	0x03354228 CMP X9, X10
	0x0335422C B.CS 0x33542B0
	0x03354230 LDR X10, [X20 + 0x18]
	0x03354234 CBZ X10, 0x33542AC
	0x03354238 LDR W11, [X10 + 0x18]
	0x0335423C CMP X9, X11
	0x03354240 B.CS 0x33542B0
	0x03354244 LDR X8, [X8, X23, LSL #3]
	0x03354248 LDR X9, [X10, X23, LSL #3]
	0x0335424C LDR X0, [X22]
	0x03354250 ADD X1, X31, 0x0
	0x03354254 STP X8, X9, [X31]
	0x03354258 BL 0x1C16E04
	0x0335425C ADD W8, W21, W23
	0x03354260 MOV X1, X0
	0x03354264 SUB W2, W8, 0x4
	0x03354268 MOV X0, X19
	0x0335426C MOV X3, X31
	0x03354270 BL 0x339F798
	0x03354274 LDR X8, [X20]
	0x03354278 MOV X0, X20
	0x0335427C LDR X9, [X8 + 0x278]
	0x03354280 LDR X1, [X8 + 0x280]
	0x03354284 BLR X9
	0x03354288 SUB X8, X23, 0x3
	0x0335428C ADD X23, X23, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X1, 0
	008 JumpIfEqual {68}
	009 Move X19, X1
	010 Move X21, X0
	011 Move X0, X1
	012 Move X1, X31
	013 Move W20, W2
	014 Call Array.get_Rank, X0
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move TEMP, X20
	017 And TEMP, TEMP, -2147483648
	018 Compare TEMP, -2147483648
	019 JumpIfEqual {97}
	020 Move X0, X19
	021 Move X1, X31
	022 Call Array.get_Length, X0
	023 Move W23, [X21+32]
	024 Subtract W8, W0, W20
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Compare W23, 0
	027 JumpIfEqual {61}
	028 Move X0, [X21+16]
	029 Compare X0, 0
	030 JumpIfEqual {132}
	031 Move W1, [X21+24]
	032 Move W8, [X0+24]
	033 Move X2, X19
	034 Move W3, W20
	035 Move X5, X31
	036 Subtract W8, W8, W1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSEL not yet implemented."
	039 Move W4, W22
	040 Call Array.Copy, X0, X1, X2, X3, X4
	041 Subtract W4, W23, W22
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, [X21+16]
	044 Compare X0, 0
	045 JumpIfEqual {132}
	046 Move W8, [X21+24]
	047 Move W9, [X0+24]
	048 Move X2, X19
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Subtract W8, W20, W8
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Add W3, W8, W9
	055 Move W1, W31
	056 Move X5, X31
	057 Move X30, [X31+48]
	058 Move X23, [X31+56]
	059 Call Array.Copy, X0, X1, X2, X3, X4
	060 Return 
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Move X23, [X31+56]
	067 Return 
	068 Move X0, 0xDA5000
	069 Move X0, [X0+1320]
	070 Call 0x1C17D08
	071 Call 0x1C17F10
	072 Move X19, X0
	073 Move X0, 0xDC8000
	074 Move X0, [X0+1600]
	075 Call 0x1C17D08
	076 Move X1, X0
	077 Move X0, X19
	078 Move X2, X31
	079 Call ArgumentNullException..ctor, X0, X1
	080 Move X0, 0xDA8000
	081 Move X0, [X0+1400]
	082 Call 0x1C17D08
	083 Call 0x1C17F10
	084 Move X19, X0
	085 Move X0, 0xDC9000
	086 Move X0, [X0+776]
	087 Call 0x1C17D08
	088 Move X20, X0
	089 Move X0, 0xDC8000
	090 Move X0, [X0+1600]
	091 Call 0x1C17D08
	092 Move X2, X0
	093 Move X0, X19
	094 Move X1, X20
	095 Move X3, X31
	096 Call ArgumentException..ctor, X0, X1, X2
	097 Move X0, 0xDA8000
	098 Move X0, [X0+1888]
	099 Call 0x1C17D08
	100 Call 0x1C17F10
	101 Move X19, X0
	102 Move X0, 0xDAB000
	103 Move X0, [X0+304]
	104 Call 0x1C17D08
	105 Move X20, X0
	106 Move X0, 0xDC8000
	107 Move X0, [X0+1632]
	108 Call 0x1C17D08
	109 Move X2, X0
	110 Move X0, X19
	111 Move X1, X20
	112 Move X3, X31
	113 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	114 Move X0, 0xDA8000
	115 Move X0, [X0+1400]
	116 Call 0x1C17D08
	117 Call 0x1C17F10
	118 Move X19, X0
	119 Move X0, 0xDC8000
	120 Move X0, [X0+1888]
	121 Call 0x1C17D08
	122 Move X1, X0
	123 Move X0, X19
	124 Move X2, X31
	125 Call ArgumentException..ctor, X0, X1
	126 Move X0, 0xDD7000
	127 Move X0, [X0+960]
	128 Call 0x1C17D08
	129 Move X1, X0
	130 Move X0, X19
	131 Call 0x1C17DEC
	132 Call 0x1C17F20

Method: System.Void Enqueue(System.Object obj)

Disassembly:
	0x03354290 CMP X8, W0, SXTW
	0x03354294 B.LT 0x3354218
	0x03354298 LDP X20, X19, [X31 + 0x30]
	0x0335429C LDP X22, X21, [X31 + 0x20]
	0x033542A0 LDP X30, X23, [X31 + 0x10]
	0x033542A4 ADD X31, X31, 0x40
	0x033542A8 RET
	0x033542AC BL 0x1C16F20
	0x033542B0 BL 0x1C16F28
	0x033542B4 ADRP X0, 0xDA4000
	0x033542B8 LDR X0, [X0 + 0x528]
	0x033542BC BL 0x1C16D08
	0x033542C0 BL 0x1C16F10
	0x033542C4 MOV X19, X0
	0x033542C8 ADRP X0, 0xDC7000
	0x033542CC LDR X0, [X0 + 0x640]
	0x033542D0 BL 0x1C16D08
	0x033542D4 MOV X20, X0
	0x033542D8 ADRP X0, 0xDCE000
	0x033542DC LDR X0, [X0 + 0x2E0]
	0x033542E0 BL 0x1C16D08
	0x033542E4 MOV X2, X0
	0x033542E8 MOV X0, X19
	0x033542EC MOV X1, X20
	0x033542F0 MOV X3, X31
	0x033542F4 BL 0x3315F7C
	0x033542F8 B 0x33543BC
	0x033542FC ADRP X0, 0xDA7000
	0x03354300 LDR X0, [X0 + 0x578]
	0x03354304 BL 0x1C16D08
	0x03354308 BL 0x1C16F10
	0x0335430C MOV X19, X0
	0x03354310 ADRP X0, 0xDC8000
	0x03354314 LDR X0, [X0 + 0x308]
	0x03354318 BL 0x1C16D08
	0x0335431C MOV X20, X0
	0x03354320 ADRP X0, 0xDC7000
	0x03354324 LDR X0, [X0 + 0x640]
	0x03354328 BL 0x1C16D08
	0x0335432C MOV X2, X0
	0x03354330 MOV X0, X19
	0x03354334 MOV X1, X20
	0x03354338 MOV X3, X31
	0x0335433C BL 0x330E16C
	0x03354340 B 0x33543BC
	0x03354344 ADRP X0, 0xDA7000
	0x03354348 LDR X0, [X0 + 0x760]
	0x0335434C BL 0x1C16D08
	0x03354350 BL 0x1C16F10
	0x03354354 MOV X19, X0
	0x03354358 ADRP X0, 0xDC9000
	0x0335435C LDR X0, [X0 + 0x2B0]
	0x03354360 BL 0x1C16D08
	0x03354364 MOV X20, X0
	0x03354368 ADRP X0, 0xDC7000
	0x0335436C LDR X0, [X0 + 0x670]
	0x03354370 BL 0x1C16D08
	0x03354374 MOV X2, X0
	0x03354378 MOV X0, X19
	0x0335437C MOV X1, X20
	0x03354380 MOV X3, X31
	0x03354384 BL 0x3311888
	0x03354388 B 0x33543BC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, [X0+16]
	007 Compare X21, 0
	008 JumpIfEqual {72}
	009 Move W8, [X0+32]
	010 Move X9, [X21+24]
	011 Move X19, X0
	012 Move X20, X1
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction LDRSW not yet implemented."
	015 Move X11, 0xD70B
	016 NotImplemented "Instruction MOVK not yet implemented."
	017 Move X9, W9
	018 NotImplemented "Instruction MOVK not yet implemented."
	019 NotImplemented "Instruction MOVK not yet implemented."
	020 Multiply X9, X9, X10
	021 NotImplemented "Instruction SMULH not yet implemented."
	022 Add X9, X10, X9
	023 Move X10, X9
	024 ShiftRight X10, 63
	025 And X10, X10, 0x7FFFFFFF
	026 Move X9, X9
	027 ShiftRight X9, 6
	028 And X9, X9, 0x7FFFFFFF
	029 Add W9, W9, W10
	030 Add W8, W8, 4
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 Move X0, X19
	034 Call Queue.SetCapacity, X0, X1
	035 Move X21, [X19+16]
	036 Compare X21, 0
	037 JumpIfEqual {72}
	038 NotImplemented "Instruction LDRSW not yet implemented."
	039 Compare X20, 0
	040 JumpIfEqual {47}
	041 Move X8, [X21]
	042 Move X0, X20
	043 Move X1, [X8+64]
	044 Call 0x1C17E00
	045 Compare X0, 0
	046 JumpIfEqual {74}
	047 Move W8, [X21+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Add X8, X21, X22
	050 Move [X8+32], X20
	051 Move X8, [X19+16]
	052 Compare X8, 0
	053 JumpIfEqual {72}
	054 Move W9, [X19+28]
	055 Move W10, [X19+32]
	056 Move W8, [X8+24]
	057 Move W11, [X19+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Add W9, W9, 1
	061 NotImplemented "Instruction SDIV not yet implemented."
	062 Add W10, W10, 1
	063 Add W11, W11, 1
	064 NotImplemented "Instruction MSUB not yet implemented."
	065 Move [X19+28], W8
	066 Move [X19+32], W10
	067 Move [X19+40], W11
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X30, [X31+48]
	071 Return 
	072 Call 0x1C17F20
	073 Call 0x1C17F28
	074 Call 0x1C17F44
	075 Move X1, X31
	076 Call 0x1C17DEC

Method: System.Collections.IEnumerator GetEnumerator()

Disassembly:
	0x03354478 LDR X0, [X0 + 0x760]
	0x0335447C BL 0x1C16D08
	0x03354480 BL 0x1C16F10
	0x03354484 MOV X19, X0
	0x03354488 ADRP X0, 0xDAA000
	0x0335448C LDR X0, [X0 + 0x130]
	0x03354490 BL 0x1C16D08
	0x03354494 MOV X20, X0
	0x03354498 ADRP X0, 0xDC7000
	0x0335449C LDR X0, [X0 + 0x660]
	0x033544A0 BL 0x1C16D08
	0x033544A4 MOV X2, X0
	0x033544A8 MOV X0, X19
	0x033544AC MOV X1, X20
	0x033544B0 MOV X3, X31
	0x033544B4 BL 0x3311888
	0x033544B8 ADRP X0, 0xDD6000
	0x033544BC LDR X0, [X0 + 0x428]
	0x033544C0 BL 0x1C16D08
	0x033544C4 MOV X1, X0
	0x033544C8 MOV X0, X19
	0x033544CC BL 0x1C16DEC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1089000
	006 Move X21, 0xDD7000
	007 Move W8, [X20+3540]
	008 Move X21, [X21+968]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xDD7000
	015 Move X0, [X0+968]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3540], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call QueueEnumerator..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Object Dequeue()

Disassembly:
	0x03354520 MOV W2, W31
	0x03354524 MOV W3, W20
	0x03354528 MOV X21, X0
	0x0335452C BL 0x3354540
	0x03354530 LDP X20, X19, [X31 + 0x10]
	0x03354534 MOV X0, X21
	0x03354538 LDP X30, X21, [X31], #0x20
	0x0335453C RET
	0x03354540 STP X30, X23, [X31 - 0x30]!
	0x03354544 STP X22, X21, [X31 + 0x10]
	0x03354548 STP X20, X19, [X31 + 0x20]
	0x0335454C MOV X21, X1
	0x03354550 MOV X1, X31
	0x03354554 MOV W19, W4
	0x03354558 MOV W22, W3
	0x0335455C MOV W23, W2
	0x03354560 MOV X20, X0
	0x03354564 BL 0x33BDD8C
	0x03354568 ADD W8, W22, W23
	0x0335456C STR X21, [X20 + 0x10]
	0x03354570 STP W23, W23, [X20 + 0x28]
	0x03354574 STR W8, [X20 + 0x30]
	0x03354578 CBZ X21, 0x335459C
	0x0335457C LDR W8, [X21 + 0x24]
	0x03354580 STR W19, [X20 + 0x3C]
	0x03354584 STRB W31, [X20 + 0x38]
	0x03354588 LDP X22, X21, [X31 + 0x10]
	0x0335458C STR W8, [X20 + 0x34]
	0x03354590 LDP X20, X19, [X31 + 0x20]
	0x03354594 LDP X30, X23, [X31], #0x30
	0x03354598 RET
	0x0335459C BL 0x1C16F20
	0x033545A0 STP X30, X21, [X31 - 0x20]!
	0x033545A4 STP X20, X19, [X31 + 0x10]
	0x033545A8 ADRP X20, 0x1088000
	0x033545AC ADRP X21, 0xDD6000
	0x033545B0 LDRB W8, [X20 + 0xDDD]
	0x033545B4 LDR X21, [X21 + 0x430]
	0x033545B8 MOV X19, X0
	0x033545BC TBNZ X8, 0x0, 0x33545D4
	0x033545C0 ADRP X0, 0xDD6000
	0x033545C4 LDR X0, [X0 + 0x430]
	0x033545C8 BL 0x1C16CF4
	0x033545CC MOVZ W8, 0x1
	0x033545D0 STRB W8, [X20 + 0xDDD]
	0x033545D4 LDR X0, [X21]
	0x033545D8 LDR W20, [X19 + 0x20]
	0x033545DC BL 0x1C16F10
	0x033545E0 MOVZ W4, 0x3
	0x033545E4 MOV X1, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+472]
	006 Move X1, [X8+480]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Compare W0, 0
	009 JumpIfEqual {37}
	010 Move X9, [X19+16]
	011 Compare X9, 0
	012 JumpIfEqual {36}
	013 NotImplemented "Instruction LDRSW not yet implemented."
	014 Move W10, [X9+24]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Add X9, X9, X8
	017 Move X0, [X9+32]
	018 Move [X9+32], X31
	019 Move X9, [X19+16]
	020 Compare X9, 0
	021 JumpIfEqual {36}
	022 Move W9, [X9+24]
	023 Move W10, [X19+32]
	024 Move W11, [X19+40]
	025 Add W8, W8, 1
	026 NotImplemented "Instruction SDIV not yet implemented."
	027 Subtract W10, W10, 1
	028 Add W11, W11, 1
	029 NotImplemented "Instruction MSUB not yet implemented."
	030 Move [X19+32], W10
	031 Move [X19+24], W8
	032 Move [X19+40], W11
	033 Move X30, [X31+16]
	034 Move X19, [X31+24]
	035 Return X0
	036 Call 0x1C17F20
	037 Move X0, 0xDA0000
	038 Move X0, [X0+1456]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0xDCA000
	043 Move X0, [X0+96]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X19
	047 Move X2, X31
	048 Call InvalidOperationException..ctor, X0, X1
	049 Move X0, 0xDD7000
	050 Move X0, [X0+976]
	051 Call 0x1C17D08
	052 Move X1, X0
	053 Move X0, X19
	054 Call 0x1C17DEC
	055 Call 0x1C17F28

Method: System.Object Peek()

Disassembly:
	0x033545E8 MOV W2, W31
	0x033545EC MOV W3, W20
	0x033545F0 MOV X21, X0
	0x033545F4 BL 0x3354540
	0x033545F8 LDP X20, X19, [X31 + 0x10]
	0x033545FC MOV X0, X21
	0x03354600 LDP X30, X21, [X31], #0x20
	0x03354604 RET
	0x03354608 STR X30, [X31 - 0x20]!
	0x0335460C STP X20, X19, [X31 + 0x10]
	0x03354610 TBNZ X1, 0x1F, 0x335465C
	0x03354614 LDR X8, [X0]
	0x03354618 MOV W19, W1
	0x0335461C MOV X20, X0
	0x03354620 LDR X9, [X8 + 0x278]
	0x03354624 LDR X1, [X8 + 0x280]
	0x03354628 BLR X9
	0x0335462C CMP W0, W19
	0x03354630 B.LE 0x335465C
	0x03354634 LDR X8, [X20 + 0x10]
	0x03354638 CBZ X8, 0x33546B8
	0x0335463C LDR W9, [X8 + 0x18]
	0x03354640 CMP W9, W19
	0x03354644 B.LS 0x33546BC
	0x03354648 ADD X8, X8, W19, 0x3, UXTW
	0x0335464C LDR X0, [X8 + 0x20]
	0x03354650 LDP X20, X19, [X31 + 0x10]
	0x03354654 LDR X30, [X31], #0x20
	0x03354658 RET
	0x0335465C ADRP X0, 0xDA7000
	0x03354660 LDR X0, [X0 + 0x760]
	0x03354664 BL 0x1C16D08
	0x03354668 BL 0x1C16F10
	0x0335466C MOV X19, X0
	0x03354670 ADRP X0, 0xDAA000
	0x03354674 LDR X0, [X0 + 0x130]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+472]
	006 Move X1, [X8+480]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Compare W0, 0
	009 JumpIfEqual {21}
	010 Move X8, [X19+16]
	011 Compare X8, 0
	012 JumpIfEqual {39}
	013 NotImplemented "Instruction LDRSW not yet implemented."
	014 Move W10, [X8+24]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Add X8, X8, X9
	017 Move X0, [X8+32]
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return X0
	021 Move X0, 0xDA0000
	022 Move X0, [X0+1456]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X19, X0
	026 Move X0, 0xDCA000
	027 Move X0, [X0+96]
	028 Call 0x1C17D08
	029 Move X1, X0
	030 Move X0, X19
	031 Move X2, X31
	032 Call InvalidOperationException..ctor, X0, X1
	033 Move X0, 0xDD7000
	034 Move X0, [X0+984]
	035 Call 0x1C17D08
	036 Move X1, X0
	037 Move X0, X19
	038 Call 0x1C17DEC
	039 Call 0x1C17F20
	040 Call 0x1C17F28

Method: System.Object GetElement(System.Int32 i)

Disassembly:
	0x03354678 BL 0x1C16D08
	0x0335467C MOV X20, X0
	0x03354680 ADRP X0, 0xDC7000
	0x03354684 LDR X0, [X0 + 0x660]
	0x03354688 BL 0x1C16D08
	0x0335468C MOV X2, X0
	0x03354690 MOV X0, X19
	0x03354694 MOV X1, X20
	0x03354698 MOV X3, X31
	0x0335469C BL 0x3311888
	0x033546A0 ADRP X0, 0xDD6000
	0x033546A4 LDR X0, [X0 + 0x438]
	0x033546A8 BL 0x1C16D08
	0x033546AC MOV X1, X0
	0x033546B0 MOV X0, X19
	0x033546B4 BL 0x1C16DEC

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {15}
	005 Move W9, [X0+24]
	006 Move W10, [X8+24]
	007 Add W9, W9, W1
	008 NotImplemented "Instruction SDIV not yet implemented."
	009 NotImplemented "Instruction MSUB not yet implemented."
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Add X8, X8, W9
	012 Move X0, [X8+32]
	013 Move X30, [X31+16]
	014 Return X0
	015 Call 0x1C17F20
	016 Call 0x1C17F28

Method: System.Void SetCapacity(System.Int32 capacity)

Disassembly:
	0x0335438C ADRP X0, 0xDA7000
	0x03354390 LDR X0, [X0 + 0x578]
	0x03354394 BL 0x1C16D08
	0x03354398 BL 0x1C16F10
	0x0335439C MOV X19, X0
	0x033543A0 ADRP X0, 0xDC8000
	0x033543A4 LDR X0, [X0 + 0x318]
	0x033543A8 BL 0x1C16D08
	0x033543AC MOV X1, X0
	0x033543B0 MOV X0, X19
	0x033543B4 MOV X2, X31
	0x033543B8 BL 0x3314A68
	0x033543BC ADRP X0, 0xDD6000
	0x033543C0 LDR X0, [X0 + 0x420]
	0x033543C4 BL 0x1C16D08
	0x033543C8 MOV X1, X0
	0x033543CC MOV X0, X19
	0x033543D0 BL 0x1C16DEC
	0x033543D4 STR X30, [X31 - 0x10]!
	0x033543D8 LDR X8, [X0 + 0x10]
	0x033543DC CBZ X8, 0x335441C
	0x033543E0 LDR X8, [X8 + 0x18]
	0x033543E4 LDR X10, [X0]
	0x033543E8 MOVN W9, 0x80100000
	0x033543EC UBFM W11, W8, 0x1F, 0x1E
	0x033543F0 CMP W11, W9
	0x033543F4 CSEL W9, W11, W9, CC
	0x033543F8 MOVZ W11, 0x10
	0x033543FC CMP X8, 0x0
	0x03354400 LDR X3, [X10 + 0x268]
	0x03354404 LDR X2, [X10 + 0x270]
	0x03354408 CSEL W8, W11, W9, EQ
	0x0335440C CMP W8, W1
	0x03354410 CSEL W1, W1, W8, LT
	0x03354414 LDR X30, [X31], #0x10
	0x03354418 BR X3
	0x0335441C BL 0x1C16F20
	0x03354420 STR X30, [X31 - 0x20]!
	0x03354424 STP X20, X19, [X31 + 0x10]
	0x03354428 TBNZ X1, 0x1F, 0x3354474
	0x0335442C LDR X8, [X0]
	0x03354430 MOV W19, W1
	0x03354434 MOV X20, X0
	0x03354438 LDR X9, [X8 + 0x278]
	0x0335443C LDR X1, [X8 + 0x280]
	0x03354440 BLR X9
	0x03354444 CMP W0, W19
	0x03354448 B.LE 0x3354474
	0x0335444C LDR X8, [X20 + 0x18]
	0x03354450 CBZ X8, 0x33544D0
	0x03354454 LDR W9, [X8 + 0x18]
	0x03354458 CMP W9, W19
	0x0335445C B.LS 0x33544D4
	0x03354460 ADD X8, X8, W19, 0x3, UXTW
	0x03354464 LDR X0, [X8 + 0x20]
	0x03354468 LDP X20, X19, [X31 + 0x10]
	0x0335446C LDR X30, [X31], #0x20
	0x03354470 RET
	0x03354474 ADRP X0, 0xDA7000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1089000
	007 Move X22, 0xDA0000
	008 Move W8, [X21+3541]
	009 Move X22, [X22+2512]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xDA0000
	017 Move X0, [X0+2512]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3541], W8
	021 Move X0, [X22]
	022 Move W1, W20
	023 Call 0x1C17D6C
	024 Move W4, [X19+32]
	025 Move X21, X0
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move W1, [X19+24]
	028 Move W8, [X19+28]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X0, [X19+16]
	031 Move X2, X21
	032 Move W3, W31
	033 Move X0, [X19+16]
	034 Compare X0, 0
	035 JumpIfEqual {68}
	036 Move W8, [X0+24]
	037 Move X2, X21
	038 Move W3, W31
	039 Move X5, X31
	040 Subtract W4, W8, W1
	041 Call Array.Copy, X0, X1, X2, X3, X4
	042 Move X0, [X19+16]
	043 Compare X0, 0
	044 JumpIfEqual {68}
	045 Move W8, [X0+24]
	046 Move W9, [X19+24]
	047 Move W4, [X19+28]
	048 Move W1, W31
	049 Move X2, X21
	050 Subtract W3, W8, W9
	051 Move X5, X31
	052 Call Array.Copy, X0, X1, X2, X3, X4
	053 Move W8, [X19+32]
	054 Move W9, [X19+40]
	055 Move [X19+16], X21
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add W9, W9, 1
	060 NotImplemented "Instruction CSEL not yet implemented."
	061 Move [X19+24], W31
	062 Move [X19+28], W8
	063 Move [X19+40], W9
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X30, [X31+48]
	067 Return 
	068 Call 0x1C17F20

