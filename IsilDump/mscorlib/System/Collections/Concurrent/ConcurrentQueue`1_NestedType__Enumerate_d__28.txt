Type: System.Collections.Concurrent.ConcurrentQueue`1/<Enumerate>d__28

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x0238C704 AND W26, W8, W26, 0x0
	0x0238C708 LDR X9, [X9]
	0x0238C70C LDR X9, [X9 + 0x80]
	0x0238C710 ADD X24, X9, 0xA0
	0x0238C714 MOV X0, X24
	0x0238C718 BL 0x1C16D14
	0x0238C71C MOV X0, X19
	0x0238C720 MOV X1, X24
	0x0238C724 BL 0x1C16D18
	0x0238C728 STR W26, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x0238C72C LDR X8, [X20]

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x0238C730 MOV X0, X19
	0x0238C734 LDR X8, [X8 + 0xC0]
	0x0238C738 LDR X8, [X8]
	0x0238C73C LDR X8, [X8 + 0x80]
	0x0238C740 ADD X1, X8, 0xE0
	0x0238C744 BL 0x1C16D18
	0x0238C748 LDR X8, [X20]
	0x0238C74C LDR W26, [X0]
	0x0238C750 MOV X0, X19
	0x0238C754 LDR X8, [X8 + 0xC0]
	0x0238C758 LDR X8, [X8]
	0x0238C75C LDR X8, [X8 + 0x80]
	0x0238C760 ADD X1, X8, 0x40
	0x0238C764 BL 0x1C16D18
	0x0238C768 LDR X8, [X0]
	0x0238C76C CBZ X8, 0x238C8BC
	0x0238C770 LDR X9, [X20]
	0x0238C774 LDR W8, [X8 + 0x18]
	0x0238C778 MOVZ W1, 0x4
	0x0238C77C LDR X9, [X9 + 0xC0]
	0x0238C780 AND W26, W8, W26, 0x0
	0x0238C784 LDR X9, [X9]
	0x0238C788 LDR X9, [X9 + 0x80]
	0x0238C78C ADD X24, X9, 0xE0
	0x0238C790 MOV X0, X24
	0x0238C794 BL 0x1C16D14
	0x0238C798 MOV X0, X19
	0x0238C79C MOV X1, X24
	0x0238C7A0 BL 0x1C16D18
	0x0238C7A4 STR W26, [X0]
	0x0238C7A8 LDR X8, [X20]
	0x0238C7AC MOV X0, X19
	0x0238C7B0 LDR X8, [X8 + 0xC0]
	0x0238C7B4 LDR X8, [X8]
	0x0238C7B8 LDR X8, [X8 + 0x80]
	0x0238C7BC ADD X1, X8, 0xA0
	0x0238C7C0 BL 0x1C16D18
	0x0238C7C4 LDR X8, [X20]
	0x0238C7C8 LDR W26, [X0]
	0x0238C7CC MOV X0, X19
	0x0238C7D0 LDR X8, [X8 + 0xC0]
	0x0238C7D4 LDR X8, [X8]
	0x0238C7D8 LDR X8, [X8 + 0x80]
	0x0238C7DC ADD X1, X8, 0xE0
	0x0238C7E0 BL 0x1C16D18
	0x0238C7E4 LDR X8, [X20]
	0x0238C7E8 LDR W27, [X0]
	0x0238C7EC MOV X0, X19
	0x0238C7F0 LDR X8, [X8 + 0xC0]
	0x0238C7F4 LDR X8, [X8]
	0x0238C7F8 LDR X8, [X8 + 0x80]
	0x0238C7FC ADD X1, X8, 0xA0
	0x0238C800 BL 0x1C16D18
	0x0238C804 LDR X8, [X20]
	0x0238C808 LDR W28, [X0]
	0x0238C80C MOVZ W1, 0x4
	0x0238C810 LDR X8, [X8 + 0xC0]
	0x0238C814 LDR X8, [X8]
	0x0238C818 LDR X8, [X8 + 0x80]
	0x0238C81C ADD X24, X8, 0x100
	0x0238C820 MOV X0, X24
	0x0238C824 BL 0x1C16D14
	0x0238C828 MOV X0, X19
	0x0238C82C MOV X1, X24
	0x0238C830 BL 0x1C16D18
	0x0238C834 CMP W26, W27
	0x0238C838 STR W28, [X0]
	0x0238C83C B.GE 0x238C12C
	0x0238C840 B 0x238C2D4
	0x0238C844 LDR X8, [X20]
	0x0238C848 MOV X0, X19
	0x0238C84C LDR X8, [X8 + 0xC0]
	0x0238C850 LDR X8, [X8]
	0x0238C854 LDR X8, [X8 + 0x80]
	0x0238C858 ADD X1, X8, 0x40
	0x0238C85C BL 0x1C16D18
	0x0238C860 LDR X8, [X20]
	0x0238C864 LDR X24, [X0]
	0x0238C868 MOV X0, X19
	0x0238C86C LDR X8, [X8 + 0xC0]
	0x0238C870 LDR X8, [X8]
	0x0238C874 LDR X8, [X8 + 0x80]
	0x0238C878 ADD X1, X8, 0x60
	0x0238C87C BL 0x1C16D18
	0x0238C880 LDR X8, [X0]
	0x0238C884 CMP X24, X8
	0x0238C888 B.EQ 0x238CC64
	0x0238C88C LDR X8, [X20]
	0x0238C890 MOV X0, X19
	0x0238C894 LDR X8, [X8 + 0xC0]
	0x0238C898 LDR X8, [X8]
	0x0238C89C LDR X8, [X8 + 0x80]
	0x0238C8A0 ADD X1, X8, 0x40
	0x0238C8A4 BL 0x1C16D18
	0x0238C8A8 LDR X24, [X0]
	0x0238C8AC CBNZ X24, 0x238C9E4
	0x0238C8B0 B 0x238C8BC
	0x0238C8B4 STR W8, [X0]
	0x0238C8B8 B 0x238CD18
	0x0238C8BC BL 0x1C16F20
	0x0238C8C0 MOV X0, X19
	0x0238C8C4 MOV X1, X24
	0x0238C8C8 BL 0x1C16D18
	0x0238C8CC LDR X8, [X0]
	0x0238C8D0 CBZ X8, 0x238C8BC
	0x0238C8D4 LDR X9, [X20]
	0x0238C8D8 LDR W26, [X8 + 0x11C]
	0x0238C8DC MOV X0, X19
	0x0238C8E0 LDR X9, [X9 + 0xC0]
	0x0238C8E4 LDR X9, [X9]
	0x0238C8E8 LDR X9, [X9 + 0x80]
	0x0238C8EC ADD X1, X9, 0x120
	0x0238C8F0 BL 0x1C16D18
	0x0238C8F4 LDR X0, [X0]
	0x0238C8F8 CBZ X0, 0x238C8BC
	0x0238C8FC LDR X8, [X20]
	0x0238C900 LDR X8, [X8 + 0xC0]
	0x0238C904 LDR X1, [X8 + 0x18]
	0x0238C908 LDR X8, [X1]
	0x0238C90C BLR X8
	0x0238C910 LDR X8, [X20]
	0x0238C914 SUB W27, W26, W0
	0x0238C918 MOVZ W1, 0x4
	0x0238C91C LDR X8, [X8 + 0xC0]
	0x0238C920 LDR X8, [X8]
	0x0238C924 LDR X8, [X8 + 0x80]
	0x0238C928 ADD X24, X8, 0x100
	0x0238C92C MOV X0, X24
	0x0238C930 BL 0x1C16D14
	0x0238C934 MOV X0, X19
	0x0238C938 MOV X1, X24
	0x0238C93C BL 0x1C16D18
	0x0238C940 MOV W26, W31
	0x0238C944 STR W27, [X0]
	0x0238C948 LDR X8, [X20]
	0x0238C94C MOVZ W1, 0x4
	0x0238C950 LDR X8, [X8 + 0xC0]
	0x0238C954 LDR X8, [X8]
	0x0238C958 LDR X8, [X8 + 0x80]
	0x0238C95C ADD X24, X8, 0x140
	0x0238C960 MOV X0, X24
	0x0238C964 BL 0x1C16D14
	0x0238C968 MOV X0, X19
	0x0238C96C MOV X1, X24
	0x0238C970 BL 0x1C16D18
	0x0238C974 STR W26, [X0]
	0x0238C978 LDR X8, [X20]
	0x0238C97C MOV X0, X19
	0x0238C980 LDR X8, [X8 + 0xC0]
	0x0238C984 LDR X8, [X8]
	0x0238C988 LDR X8, [X8 + 0x80]
	0x0238C98C ADD X1, X8, 0x140
	0x0238C990 BL 0x1C16D18
	0x0238C994 LDR X8, [X20]
	0x0238C998 LDR W26, [X0]
	0x0238C99C MOV X0, X19
	0x0238C9A0 LDR X8, [X8 + 0xC0]
	0x0238C9A4 LDR X8, [X8]
	0x0238C9A8 LDR X8, [X8 + 0x80]
	0x0238C9AC ADD X1, X8, 0x100
	0x0238C9B0 BL 0x1C16D18
	0x0238C9B4 LDR X8, [X20]
	0x0238C9B8 LDR W27, [X0]
	0x0238C9BC MOV X0, X19
	0x0238C9C0 LDR X8, [X8 + 0xC0]
	0x0238C9C4 LDR X8, [X8]
	0x0238C9C8 LDR X8, [X8 + 0x80]
	0x0238C9CC ADD X1, X8, 0x120
	0x0238C9D0 BL 0x1C16D18
	0x0238C9D4 LDR X24, [X0]
	0x0238C9D8 CMP W26, W27
	0x0238C9DC B.LT 0x238CC6C
	0x0238C9E0 CBZ X24, 0x238C8BC
	0x0238C9E4 LDR X8, [X20]
	0x0238C9E8 LDR X26, [X24 + 0x1A0]
	0x0238C9EC MOVZ W1, 0x8
	0x0238C9F0 LDR X8, [X8 + 0xC0]
	0x0238C9F4 LDR X8, [X8]
	0x0238C9F8 LDR X8, [X8 + 0x80]
	0x0238C9FC ADD X24, X8, 0x120
	0x0238CA00 MOV X0, X24
	0x0238CA04 BL 0x1C16D14
	0x0238CA08 MOV X0, X19
	0x0238CA0C MOV X1, X24
	0x0238CA10 BL 0x1C16D18
	0x0238CA14 STR X26, [X0]
	0x0238CA18 LDR X8, [X20]
	0x0238CA1C MOV X0, X19
	0x0238CA20 LDR X8, [X8 + 0xC0]
	0x0238CA24 LDR X8, [X8]
	0x0238CA28 LDR X8, [X8 + 0x80]
	0x0238CA2C ADD X1, X8, 0x120
	0x0238CA30 BL 0x1C16D18
	0x0238CA34 LDR X8, [X20]
	0x0238CA38 LDR X24, [X0]
	0x0238CA3C MOV X0, X19
	0x0238CA40 LDR X8, [X8 + 0xC0]
	0x0238CA44 LDR X8, [X8]
	0x0238CA48 LDR X8, [X8 + 0x80]
	0x0238CA4C ADD X1, X8, 0x60
	0x0238CA50 BL 0x1C16D18
	0x0238CA54 LDR X8, [X20]
	0x0238CA58 LDR X9, [X0]
	0x0238CA5C LDR X8, [X8 + 0xC0]
	0x0238CA60 CMP X24, X9
	0x0238CA64 LDR X8, [X8]
	0x0238CA68 LDR X8, [X8 + 0x80]
	0x0238CA6C ADD X24, X8, 0x120
	0x0238CA70 B.NE 0x238C8C0
	0x0238CA74 MOVZ W1, 0x8
	0x0238CA78 MOV X0, X24
	0x0238CA7C BL 0x1C16D14
	0x0238CA80 MOV X0, X19
	0x0238CA84 MOV X1, X24
	0x0238CA88 BL 0x1C16D18
	0x0238CA8C STR X31, [X0]
	0x0238CA90 LDR X8, [X20]
	0x0238CA94 MOV X0, X19
	0x0238CA98 LDR X8, [X8 + 0xC0]
	0x0238CA9C LDR X8, [X8]
	0x0238CAA0 LDR X8, [X8 + 0x80]
	0x0238CAA4 ADD X1, X8, 0x80
	0x0238CAA8 BL 0x1C16D18
	0x0238CAAC LDR X8, [X20]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+144], X22
	004 Move [X31+152], X21
	005 Move [X31+160], X20
	006 Move [X31+168], X19
	007 Move W8, [X0+16]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X20, [X0+104]
	010 Move X9, -25550848
	011 Add X9, X9, 3272
	012 NotImplemented "Instruction ADR not yet implemented."
	013 Move W11, [X9]
	014 Add X10, X10, X11
	015 Move X19, X0
	016 Move X21, X1
	017 CallNoReturn X10
	018 Move X0, [X19+80]
	019 Move X8, [X19+88]
	020 Move TEMP, 0
	021 Not TEMP
	022 Move W9, TEMP
	023 Move [X19+16], W9
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Compare X0, 0
	026 JumpIfEqual {238}
	027 Move W22, [X0+284]
	028 Call 0x1C17D44
	029 Move X0, [X19+80]
	030 Compare X0, 0
	031 JumpIfNotEqual {100}
	032 Move W8, [X19+112]
	033 Move W9, [X19+116]
	034 Move TEMP, 0
	035 Not TEMP
	036 Move W10, TEMP
	037 Move [X19+16], W10
	038 Add W2, W9, 1
	039 Move [X19+116], W2
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Compare X20, 0
	042 JumpIfEqual {238}
	043 Move X8, [X21+32]
	044 Move X1, [X19+80]
	045 Move X0, X20
	046 Move X8, [X8+192]
	047 Move X3, [X8+32]
	048 Add X8, X31, 8
	049 Call 0x299231C, X0, X1, X2
	050 Move X8, [X31+56]
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 Move W0, 1
	055 Move [X31+112], X8
	056 Move [X31+80], V1
	057 Move [X31+88], V0
	058 Move [X31+4], V2
	059 Move [X19+72], X8
	060 Move [X19+56], V0
	061 Move [X19+40], V1
	062 Move [X19+24], V2
	063 Move [X19+16], W0
	064 Move W8, [X19+116]
	065 Move X1, [X19+80]
	066 Move TEMP, 0
	067 Not TEMP
	068 Move W9, TEMP
	069 Move [X19+16], W9
	070 Add W2, W8, 1
	071 Move [X19+116], W2
	072 Compare X1, 0
	073 JumpIfNotEqual {118}
	074 Move W8, [X19+116]
	075 Move TEMP, 0
	076 Not TEMP
	077 Move W9, TEMP
	078 Move [X19+16], W9
	079 Add W2, W8, 1
	080 Move [X19+116], W2
	081 Move W9, [X19+128]
	082 Move W8, [X19+116]
	083 Move TEMP, 0
	084 Not TEMP
	085 Move W10, TEMP
	086 Move [X19+16], W10
	087 Add W2, W9, 1
	088 Move [X19+128], W2
	089 Move W9, [X19+116]
	090 Move W8, [X19+96]
	091 Move TEMP, 0
	092 Not TEMP
	093 Move W10, TEMP
	094 Move [X19+16], W10
	095 Add W2, W9, 1
	096 Move [X19+116], W2
	097 Move W22, [X19+96]
	098 Compare X0, 0
	099 JumpIfEqual {238}
	100 Move X8, [X21+32]
	101 Move X8, [X8+192]
	102 Move X1, [X8+24]
	103 Call 0x25D82BC, X0
	104 Move W9, [X19+100]
	105 Subtract W8, W22, W0
	106 Move [X19+112], W8
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X1, [X19+80]
	109 Compare X1, 0
	110 JumpIfEqual {238}
	111 Move W10, [X1+24]
	112 And W2, W10, W9
	113 And W8, W10, W8
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move [X19+100], W2
	116 Move [X19+112], W8
	117 Move [X19+116], W2
	118 Move X8, [X1+16]
	119 Compare X8, 0
	120 JumpIfEqual {238}
	121 Move W8, [X8+24]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Compare X20, 0
	124 JumpIfEqual {238}
	125 Move X8, [X21+32]
	126 Move X0, X20
	127 Move X8, [X8+192]
	128 Move X3, [X8+32]
	129 Add X8, X31, 8
	130 Call 0x299231C, X0, X1, X2
	131 Move X8, [X31+56]
	132 NotImplemented "Instruction LDUR not yet implemented."
	133 NotImplemented "Instruction LDUR not yet implemented."
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 Move W9, 2
	136 Move W2, W31
	137 Move [X19+116], W31
	138 Move W8, [X19+112]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Compare X20, 0
	141 JumpIfEqual {238}
	142 Move X8, [X21+32]
	143 Move X1, [X19+80]
	144 Move X0, X20
	145 Move X8, [X8+192]
	146 Move X3, [X8+32]
	147 Add X8, X31, 8
	148 Call 0x299231C, X0, X1, X2
	149 Move X8, [X31+56]
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 Move W9, 3
	154 Move X8, [X19+80]
	155 Move X0, [X19+88]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Compare X8, 0
	158 JumpIfEqual {238}
	159 Move X8, [X8+416]
	160 Move [X31+112], X8
	161 Move [X31+80], V1
	162 Move [X31+88], V0
	163 Move [X31+4], V2
	164 Move [X19+72], X8
	165 Move [X19+56], V0
	166 Move [X19+40], V1
	167 Move [X19+24], V2
	168 Move [X19+16], W9
	169 Move W0, 1
	170 Compare X8, 0
	171 JumpIfEqual {238}
	172 Move X9, [X21+32]
	173 Move W22, [X8+284]
	174 Move X0, X8
	175 Move X9, [X9+192]
	176 Move X1, [X9+24]
	177 Call 0x25D82BC, X0
	178 Subtract W8, W22, W0
	179 Move W2, W31
	180 Move [X19+116], W8
	181 Move [X19+128], W31
	182 Move X1, [X19+120]
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Compare X1, 0
	185 JumpIfEqual {238}
	186 Move X8, [X1+416]
	187 Move X0, [X19+88]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move [X19+120], X8
	190 Move [X19+120], X31
	191 Compare X0, 0
	192 JumpIfEqual {238}
	193 Move X8, [X21+32]
	194 Move W22, [X19+96]
	195 Move X8, [X8+192]
	196 Move X1, [X8+24]
	197 Call 0x25D82BC, X0
	198 Subtract W8, W22, W0
	199 Move W2, W31
	200 Move [X19+96], W8
	201 Move [X19+116], W31
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Compare X20, 0
	204 JumpIfEqual {238}
	205 Move X8, [X21+32]
	206 Move X1, [X19+88]
	207 Move X0, X20
	208 Move X8, [X8+192]
	209 Move X3, [X8+32]
	210 Add X8, X31, 8
	211 Call 0x299231C, X0, X1, X2
	212 Move X8, [X31+56]
	213 NotImplemented "Instruction LDUR not yet implemented."
	214 NotImplemented "Instruction LDUR not yet implemented."
	215 NotImplemented "Instruction LDUR not yet implemented."
	216 Move W9, 5
	217 Move W0, W31
	218 Move X20, [X31+160]
	219 Move X19, [X31+168]
	220 Move X22, [X31+144]
	221 Move X21, [X31+152]
	222 Move X30, [X31+128]
	223 Add X31, X31, 176
	224 Return X0
	225 Compare X20, 0
	226 JumpIfEqual {238}
	227 Move X8, [X21+32]
	228 Move X0, X20
	229 Move X8, [X8+192]
	230 Move X3, [X8+32]
	231 Add X8, X31, 8
	232 Call 0x299231C, X0, X1, X2
	233 Move X8, [X31+56]
	234 NotImplemented "Instruction LDUR not yet implemented."
	235 NotImplemented "Instruction LDUR not yet implemented."
	236 NotImplemented "Instruction LDUR not yet implemented."
	237 Move W9, 4
	238 Call 0x1C17F20

Method: T System.Collections.Generic.IEnumerator<T>.get_Current()

Disassembly:
	0x0238CAB0 LDR W26, [X0]
	0x0238CAB4 MOV X0, X19
	0x0238CAB8 LDR X8, [X8 + 0xC0]
	0x0238CABC LDR X8, [X8]
	0x0238CAC0 LDR X8, [X8 + 0x80]
	0x0238CAC4 ADD X1, X8, 0x60
	0x0238CAC8 BL 0x1C16D18
	0x0238CACC LDR X0, [X0]

ISIL:
	001 Move X9, [X0+72]
	002 NotImplemented "Instruction LDUR not yet implemented."
	003 NotImplemented "Instruction LDUR not yet implemented."
	004 NotImplemented "Instruction LDUR not yet implemented."
	005 Move [X8+48], X9
	006 Move [X8+16], V1
	007 Move [X8+24], V0
	008 Move [X8], V2
	009 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x0238CAD0 CBZ X0, 0x238C8BC
	0x0238CAD4 LDR X8, [X20]
	0x0238CAD8 LDR X8, [X8 + 0xC0]
	0x0238CADC LDR X1, [X8 + 0x18]
	0x0238CAE0 LDR X8, [X1]
	0x0238CAE4 BLR X8
	0x0238CAE8 LDR X8, [X20]
	0x0238CAEC SUB W27, W26, W0
	0x0238CAF0 MOVZ W1, 0x4
	0x0238CAF4 LDR X8, [X8 + 0xC0]
	0x0238CAF8 LDR X8, [X8]
	0x0238CAFC LDR X8, [X8 + 0x80]
	0x0238CB00 ADD X24, X8, 0x80

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1D68000
	005 Move X0, [X0+2880]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X1, X31
	010 Move X20, X0
	011 Call NotSupportedException..ctor, X0
	012 Move X0, X20
	013 Move X1, X19
	014 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x0238CB04 MOV X0, X24
	0x0238CB08 BL 0x1C16D14
	0x0238CB0C MOV X0, X19
	0x0238CB10 MOV X1, X24
	0x0238CB14 BL 0x1C16D18
	0x0238CB18 MOV W26, W31
	0x0238CB1C STR W27, [X0]
	0x0238CB20 LDR X8, [X20]
	0x0238CB24 MOVZ W1, 0x4
	0x0238CB28 LDR X8, [X8 + 0xC0]
	0x0238CB2C LDR X8, [X8]
	0x0238CB30 LDR X8, [X8 + 0x80]
	0x0238CB34 ADD X24, X8, 0x100
	0x0238CB38 MOV X0, X24
	0x0238CB3C BL 0x1C16D14
	0x0238CB40 MOV X0, X19
	0x0238CB44 MOV X1, X24

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move X8, [X0+72]
	004 NotImplemented "Instruction LDUR not yet implemented."
	005 NotImplemented "Instruction LDUR not yet implemented."
	006 NotImplemented "Instruction LDUR not yet implemented."
	007 Move [X31+48], X8
	008 Move [X31+16], V1
	009 Move [X31+24], V0
	010 Move [X31], V2
	011 Move X8, [X1+32]
	012 Add X1, X31, 0
	013 Move X8, [X8+192]
	014 Move X0, [X8+40]
	015 Call 0x1C17E04
	016 Move X30, [X31+64]
	017 Add X31, X31, 80
	018 Return X0

